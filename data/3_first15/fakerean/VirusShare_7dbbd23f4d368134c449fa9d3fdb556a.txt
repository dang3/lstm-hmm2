sbb
add
insb
or
lahf
int3
jb
mov
pop
xchg
test
pop
adc
cmc
mov
ljmp
xchg
in
loopne
inc
xor
jne
ud2
std
cmp
sub
push
mov
pop
adc
jl
test
adc
shl
int
pop
lret
scas
mov
fidivl
inc
adc
mov
xchg
repnz
scas
inc
lock
sub
inc
daa
sbb
mov
test
push
fstpt
das
sub
inc
movsl
mov
mov
push
jnp
cmp
loope
in
jge
and
push
scas
int
in
and
inc
dec
addl
cs
ljmp
push
mov
sbb
pop
fwait
test
fs
mov
bound
in
jge
arpl
enter
xor
das
fnstenv
push
pop
fisttps
or
jmp
lods
adc
push
xchg
sahf
add
orb
mov
rorl
int
cli
inc
jb
mov
mov
in
dec
js
ret
fcomps
lds
in
aaa
iret
mov
das
sbb
stc
ds
loop
shr
mov
mov
out
xor
cmp
mov
xchg
push
das
xor
popa
xchg
sub
mov
push
fidivl
inc
xor
mov
mov
repz
xor
aam
pop
dec
pop
adc
pusha
inc
cmp
movq
outsb
pop
or
pusha
jo
or
inc
aas
push
mov
je
aam
dec
inc
add
cmp
or
xchg
mov
push
scas
cmp
sbb
pusha
cmp
insl
sbb
pushl
inc
ja
repnz
shll
out
test
repnz
and
imul
sbb
xchg
scas
addr16
lret
and
jp
popf
ret
lret
xor
sbb
xchg
add
ja
mov
jl
cltd
inc
testl
into
xchg
repz
movb
sub
push
push
ds
cmp
or
add
std
scas
inc
adc
adc
lret
jb
adc
dec
xlat
xchg
ret
sbb
cltd
mov
test
pop
jmp
clc
jnp
mov
clc
popa
movsb
inc
xor
int
and
jns
fldt
cmp
jg
sub
shrb
cli
push
mov
sbb
lods
fmul
xor
dec
sub
adc
adc
into
cmc
cmc
sbb
mov
cld
mov
jle
pop
out
mov
repz
mov
fdivrp
and
cmp
aas
mov
loop
dec
fwait
xor
je
repnz
sub
mov
iret
fucom
inc
ret
sbbl
sub
and
push
push
leave
push
dec
bound
add
lds
push
call
std
push
pusha
les
in
xchg
mov
mov
pop
pop
out
ss
mov
insb
fbstp
xchg
ja
les
xor
loope
gs
push
fldenv
rorl
pushf
sbb
adc
xchg
ds
lock
lea
shrb
aaa
out
mov
sarb
cmp
fidivs
xor
dec
stc
int
pusha
fldl
shlb
imul
mov
lret
scas
outsl
fisubrl
imul
cmp
hlt
cmpsb
mov
fisttpl
mov
mov
cld
stos
jecxz
int3
test
pop
popa
xchg
sbb
mov
cmovp
dec
push
mov
loope
jnp
cmpb
jg
pop
mov
fmull
test
enter
push
fs
xorb
or
xor
loop
cltd
or
out
cmpsb
pop
xor
mov
leave
hlt
test
fs
fbld
out
dec
push
jmp
dec
pop
jp
add
sbb
push
stos
cmp
movsb
xchg
clc
mov
lahf
adcb
inc
adc
cmpsl
cltd
dec
sti
cmc
fistpl
ljmp
stos
inc
push
repnz
inc
movsb
cld
sbb
je
mov
xor
push
lock
pushf
jge
or
sub
dec
nop
cmc
pop
xchg
adcb
inc
adc
xchg
ret
cmp
jmp
mov
and
inc
adc
outsb
scas
xchg
dec
push
mov
lcall
ret
insb
fildl
out
out
mov
fmuls
mov
mov
sbb
dec
mov
lret
das
mov
add
or
sbb
fsubr
dec
push
test
mov
cwtl
mov
dec
mov
es
test
and
test
enter
lea
shrl
dec
push
fst
add
arpl
in
ljmp
xchg
jge
out
xor
imul
imul
inc
adc
jle,pn
stos
pop
popf
or
inc
mov
subb
xchg
divl
push
cld
out
test
addr16
les
int
lock
cmp
mov
out
cmpsb
push
xorb
js
cmp
adc
movsb
mov
ret
sbb
or
mov
cmp
mov
xchg
jbe
pop
sarl
or
cmp
pop
cmp
adc
add
cltd
push
iret
ds
pushf
or
jl
shrb
push
xchg
push
push
cmp
dec
hlt
inc
or
addr16
lods
shrb
pop
adc
outsb
out
add
lock
cld
xchg
clc
jno
insb
loopne
ds
pop
push
sub
mov
rorl
add
mov
jle
repz
pop
sub
inc
inc
push
mov
fmulp
mov
xchg
out
fistpl
push
cmp
in
aaa
cltd
push
in
sub
push
shlb
pop
or
xchg
push
mov
push
inc
cmp
mov
mov
aaa
cmp
mov
adc
sub
push
insl
nop
stos
mov
test
xchg
call
xchg
pushf
pop
aam
pop
mov
xor
mov
xorb
mov
sub
jb
fnstcw
mov
xor
inc
sahf
test
repz
rcrl
sahf
mov
lock
movsb
jmp
ja
sbb
mov
rorl
jmp
mov
loope
or
sarl
adc
nop
jge
jbe
js
mov
insb
mov
bound
jnp
fmul
rorl
mov
insl
fst
mov
mov
mov
mov
or
rcl
sbb
push
adc
jns
and
mov
sub
push
mov
adc
out
lcall
cs
mov
daa
jmp
jmp
and
pop
add
cmp
test
sbb
call
lea
and
push
clc
pop
aam
add
mov
call
das
mov
mov
aaa
sub
push
push
cmpsb
ss
loope
imul
aad
sbb
or
push
scas
pop
push
fstps
movsl
mov
xchg
sti
push
cs
das
mov
xchg
and
cmp
mov
sub
scas
ljmp
movsl
mov
xchg
ret
mov
stos
pop
push
mov
mov
adc
add
add
aas
daa
loop
nop
testl
rcrl
cmpsb
addr16
cli
inc
out
shrl
xor
pop
jmp
adc
push
addr16
sub
dec
add
insb
cmp
push
repz
add
inc
sub
inc
test
adc
inc
jbe
iret
cmp
xor
push
cltd
xchg
pop
pop
add
mov
in
pop
outsb
insb
ret
xlat
lods
arpl
sub
les
push
or
call
int
push
push
lahf
sub
into
dec
imul
xorb
or
lock
js
je
enter
scas
sub
mov
xor
mov
xchg
popa
rorb
roll
adc
pop
sbb
push
pop
jae
mov
cltd
sarb
arpl
dec
fcmovu
push
cmc
lea
pop
inc
mov
insb
inc
aad
adc
add
add
xchg
mov
mov
fstpl
adc
mov
sarb
push
push
jno,pt
cwtl
xor
test
dec
push
in
add
das
dec
dec
cmp
mov
ret
push
mov
push
in
in
test
inc
dec
jo
fimull
dec
jae
cltd
lods
not
adc
and
cmpsb
sbb
ds
xor
scas
ja
and
mov
lret
addr16
mul
fbld
push
or
scas
sub
mov
jecxz
add
push
adc
sahf
lcall
cltd
xchg
ret
mov
inc
inc
fisubl
pop
gs
xchg
adc
data16
hlt
push
into
cmpsb
adc
pop
cmp
movmskps
cmp
mov
cld
out
out
mov
adc
cld
ret
enter
sar
xor
xor
pop
ja
mov
mov
in
inc
data16
fadds
lock
sbb
and
jl
in
scas
ja
fwait
into
aad
mov
mov
jns
xchg
arpl
sub
insl
dec
dec
fdivp
out
jno
adc
call
mov
jo
pop
dec
adc
dec
or
push
mov
xchg
fsubl
sbb
mov
xor
les
outsb
adc
sub
jg
ds
scas
cmp
bound
xchg
sbb
lret
loop
int3
cmc
test
mov
dec
add
dec
push
shl
push
pop
lods
jmp
mov
add
inc
or
loop,pt
xor
loop
jno
dec
sub
inc
xor
dec
in
cmp
inc
clc
sbb
add
imul
stc
and
push
jnp
and
imul
or
pushf
icebp
ret
into
xchg
movsb
out
xchg
adc
pusha
mulb
mov
add
mov
cli
adc
sub
inc
fadds
fs
mov
adc
mov
addr16
or
adcl
lock
iret
call
sub
lcall
pop
pop
mov
icebp
mov
push
outsl
sub
sbb
mov
addr16
inc
add
aad
jno
daa
lcall
jecxz
mov
dec
cmp
les
push
jo
test
push
push
sub
xor
in
lods
inc
arpl
ss
sbb
mov
ret
imul
cmpsb
adc
cli
mov
sbb
mov
jo
sub
aas
mov
sbb
fnsave
insb
cld
push
add
lods
mov
dec
les
cwtl
stos
sahf
setns
insb
fisubs
stos
test
mov
xchg
inc
sub
pop
out
lret
jg
sbb
sub
in
and
popf
mov
in
pop
sub
aad
dec
mov
mov
imul
lods
stos
sbb
movsl
push
add
sub
or
cwtl
pop
sub
dec
je
dec
sarl
lods
push
push
jbe
add
push
fidivl
xchg
scas
int
fisttps
mov
subb
mov
inc
push
adc
popf
dec
mov
add
loope
adc
cmpsb
mov
call
daa
inc
lahf
cmpl
adc
daa
cltd
cmp
jbe
lahf
in
mov
mov
pop
cmpsb
dec
into
mov
fs
inc
and
dec
sbb
jne
outsb
hlt
sbb
ljmp
jge
into
pusha
ds
adc
sti
out
ss
into
pop
add
xor
pop
pop
insb
fucompp
loopne
loop
pop
decl
rcl
fisubrl
add
mov
and
pop
mov
iret
jno
add
push
scas
aas
into
out
cli
jge
popw
orl
or
push
outsl
mov
sbb
fs
lock
icebp
sbb
push
cmp
inc
ljmp
sbb
test
jge
xchg
and
lods
mov
add
popa
push
das
push
xor
jl
push
mov
out
gs
int
jmp
lret
xor
cmpsl
push
out
sahf
xchg
daa
not
add
adc
dec
cmp
ss
cs
inc
cmpsb
mov
sbb
push
in
bound
push
cmp
int
sar
test
loop
pop
sub
cli
data16
lock
xchg
aam
das
es
inc
or
dec
in
movsl
std
adc
and
push
ret
mov
sub
lea
loop
pop
jnp
inc
lahf
dec
push
call
bound
jp
mov
jnp
in
mov
push
cmp
test
ds
pop
inc
lods
xor
icebp
jae
sbb
or
sub
mov
mov
jl
leave
mov
adc
imul
rcrb
push
je
test
push
push
push
out
loope
pop
sbb
hlt
mov
xor
je
inc
outsl
sub
mov
div
test
mov
jge
test
rcrb
lcall
sbb
call
and
pop
aad
lret
dec
test
xchg
xor
jne
sarb
sub
push
arpl
movsb
in
jmp
flds
inc
and
arpl
pop
ljmp
jns
out
jb
mov
sub
push
int3
and
stc
inc
movsl
pop
cmpsb
inc
sbb
xchg
cmp
push
in
jg
xchg
xchg
subb
cmpsb
imul
fists
mov
lcall
mov
sbb
xchg
mov
xor
mov
inc
xor
jg
xor
jo
hlt
jo
addr16
dec
ljmp
scas
pop
xchg
fdivrs
imul
mov
int3
inc
xor
shll
mov
sbb
add
lret
xor
xchg
xor
flds
mov
push
cmpb
out
ficoms
movsb
jp
fnstenv
sbb
sub
xor
out
and
pop
lret
jno
jae
jmp
ret
xchg
int
mov
xchg
xchg
push
or
cmpsl
add
leave
movsb
lea
pop
lret
cmc
or
mov
sarb
mov
cmp
sub
insb
xchg
xchg
jl
dec
icebp
xchg
adc
pushf
or
lcall
stos
fldl2t
ret
mov
dec
ss
arpl
cmpl
mov
imul
fwait
subb
int3
jnp
jl
movsb
fiadds
fisubrs
jecxz
sbb
aas
jge
pushf
jnp
testb
dec
xchg
pop
mov
in
jns
add
jns
mov
xor
imul
into
adc
sub
xor
inc
mul
fbld
iret
ss
pop
adc
lret
mov
push
jl
xchg
out
int3
fidivrl
out
mov
lock
sub
lea
mov
cmp
xor
and
int
cld
pop
mov
or
adc
pop
and
and
test
sub
xchg
jecxz
inc
sub
lds
rorb
jbe
es
dec
pop
add
arpl
scas
sub
jb
jge
inc
sbb
push
dec
mov
mov
lret
add
je
sbb
mov
iret
stc
pop
add
mov
mov
pop
rorb
adc
jmp
mov
pop
ret
repz
std
js
xlat
test
add
push
pop
addr16
cmp
mov
int
out
pop
decl
cmp
cmc
lea
cli
imul
aad
test
add
fwait
dec
repnz
mov
sub
push
dec
gs
sub
mov
dec
pushf
jmp
mov
cmp
push
movb
ret
jg
andl
sub
jo
cmp
adc
sbb
mov
iret
or
jno
jle
outsl
dec
mov
push
aad
out
daa
repz
mov
cmp
mov
adc
adc
push
inc
add
lea
xchg
pop
xchg
jmp
push
push
push
cmp
sub
jmp
cmc
ret
adc
sbb
or
test
jmp
cs
push
bound
stos
jno
push
or
sbb
out
add
mov
call
insl
jns
sahf
lds
mov
cmpsl
sbb
jae
sbb
dec
imul
out
adc
inc
lods
mov
test
daa
out
dec
xlat
cmp
scas
mov
add
fimull
sbb
shl
push
push
jb
sub
test
xor
ret
shlb
mov
imul
push
mov
xchg
pop
sarb
mov
jbe
push
cmp
imul
jb
xor
xor
scas
movsl
or
cmp
push
add
sbb
jne
lods
fisubrs
add
mov
xor
popa
push
or
push
jb
pusha
cs
enter
loope
ret
insl
rol
fidivrs
in
push
adc
aaa
cmp
bound
mov
jmp
sub
jne
stc
adcl
repnz
loopne
push
push
or
adc
and
cwtl
fldt
mov
sub
nop
jg
fldt
sbb
out
dec
adc
push
pop
mov
xor
cmpsl
adc
loope
or
pop
mov
pusha
cld
negb
xlat
stos
in
out
adc
adcl
xor
pop
xor
mov
sti
lret
fsubrl
sbb
push
out
inc
aaa
fwait
xor
mov
call
negl
push
clc
fs
out
out
fwait
test
jecxz
xchg
pop
add
xor
stos
out
add
mov
mov
fwait
aaa
jl
mov
imul
mov
dec
inc
xchg
subb
bound
push
cmpsl
add
fs
mov
iret
mov
mov
pop
ds
cltd
inc
cld
jns
cmp
xor
xchg
nop
or
call
and
clc
mov
pusha
mov
cld
data16
cs
ljmp
popa
in
sub
fidivs
jo
mov
or
in
mov
addr16
mov
adc
push
into
mov
dec
mov
adc
negb
loop
push
fucomip
iret
adc
cmpl
setb
hlt
add
insl
jo
out
out
push
out
lds
popa
loopne
stc
push
movsb
cltd
jecxz
lcall
cli
imul
outsl
test
cmp
out
in
inc
lea
scas
jnp
stos
add
inc
mov
daa
in
mov
pop
dec
cmp
pop
push
sbb
push
idivb
inc
pop
ds
sahf
mov
xorl
outsl
xor
dec
mov
or
push
xor
rcrl
mov
inc
inc
cld
xchg
mov
push
mov
outsb
mov
or
test
sub
test
adc
push
inc
stos
pop
neg
lods
mov
rcll
mov
jo
repnz
cld
out
xchg
leave
cmc
xchg
cltd
mov
mov
xor
sbb
push
cwtl
lea
and
sub
mov
and
ret
push
loope
pop
push
fmul
fstps
test
pop
ret
mov
adc
imul
loop
jg
fadds
inc
insl
inc
mov
outsb
leave
lea
cmp
sbb
pop
mov
cmp
xlat
jmp
mov
stos
xor
repz
notl
rorb
out
shll
fdiv
int3
mov
add
mov
xchg
pop
bound
pop
test
fiaddl
pop
cmp
test
orl
movsb
mov
sub
in
pop
std
rolb
sbbl
mov
mov
cmp
int3
mov
mov
sbb
pusha
popa
scas
test
adc
mov
test
push
outsl
adc
mov
push
jp
test
mov
mov
or
xor
pushf
dec
or
fsubrl
stos
inc
bound
cmc
xor
out
je
clc
push
sub
test
adc
dec
push
je
test
out
push
add
xor
and
pop
out
xchg
sub
sbb
cs
and
or
dec
mov
push
xchg
test
xor
stos
pop
scas
pop
jo
pop
sbb
adc
icebp
or
aam
and
cmpsl
mov
ds
jp
into
lods
icebp
sahf
mov
jo
imul
pop
es
ds
or
std
loopne
push
cmp
nop
mov
jp
loope
pop
daa
lret
mov
sub
add
hlt
ss
xor
addr16
and
xchg
dec
dec
or
push
fmull
xor
adc
lods
leave
clc
ret
std
xchg
dec
mov
ss
icebp
popw
insb
mov
jae
mov
mov
in
jns
fmuls
adc
mov
daa
bound
xchg
pop
rcrb
adc
in
pop
int
xor
cmp
packsswb
lods
shr
mov
icebp
jbe
pand
mov
add
xchg
nop
sbb
jo
rcrb
xor
xor
xchg
jl
adc
and
std
jmp
and
jecxz
sbb
fcmovbe
mov
mov
shrb
inc
out
sbb
cmp
mov
insl
xlat
jo
xchg
jno
ret
xchg
mull
pop
fwait
mov
push
loop
sub
and
data16
pop
imul
fdivrs
sbb
xor
jl
outsl
push
imul
mov
pop
lahf
scas
cmpsl
inc
push
mov
bound
outsb
mov
sbb
sub
xchg
sbbl
cld
gs
sbb
mov
stos
dec
stos
lcall
fisubrs
fstpt
fwait
aas
bnd
jb
bound
and
jg
adc
dec
leave
add
fcmovu
jge
xchg
into
fscale
cli
lods
mov
aad
sub
jne
pop
xor
jmp
xchg
jl
inc
dec
iret
int
jp
sbb
pop
lahf
ja
cmpl
mov
cmc
subb
pusha
test
push
push
pop
jmp
mov
in
shlb
cmp
push
inc
subb
cmp
mov
xchg
mov
rolb
push
ljmp
dec
ret
outsb
call
lret
inc
int3
jb
add
adc
mov
inc
and
lea
movsl
mov
inc
dec
dec
gs
cwtl
push
xlat
rol
sar
sub
aam
mov
xor
das
les
inc
cmp
stc
cmp
call
in
lods
dec
dec
shlb
push
lea
stos
jae
jl
fidivrl
xor
mov
fbstp
daa
lds
push
mov
and
sbb
jle
data16
sub
imul
push
pop
out
fisttps
aam
divl
jg
sub
cmp
sahf
push
dec
or
adc
inc
bound
fidivrs
inc
add
ja
mov
xchg
mov
lcall
push
outsl
scas
cltd
or
inc
in
andb
nop
sarl
inc
mov
mov
inc
adc
aaa
gs
and
shll
data16
jg
dec
sub
in
push
std
stos
and
pop
roll
sbb
mov
cmp
mov
dec
mov
push
fsubl
mov
cltd
iret
pop
xchg
push
divl
jb
adc
xchg
addb
mov
pop
roll
js
sub
in
inc
movsl
clc
sub
cmp
enter
in
mov
les
jne
fnstsw
in
cmp
rorl
outsl
mov
add
mov
insl
pop
push
sti
scas
push
call
movsl
pop
xchg
mov
sbb
sbb
shl
xor
test
sub
loope
subb
cwtl
sbb
enter
dec
and
xor
cmp
mov
adc
pop
add
lods
jae
gs
mov
daa
add
push
add
inc
pushf
cmp
pop
repnz
icebp
aam
data16
xor
sbb
push
bound
les
or
dec
sahf
popf
rol
xchg
je
movsb
test
push
loope
fsts
daa
sub
lock
cmpsl
cld
xor
cli
jbe
adc
repz
mov
cmp
rclb
loope
xchg
jnp
pop
fnstsw
push
and
je
push
jg
sbb
or
pop
jmp
mov
dec
sub
jp
sbb
mov
jle
inc
sahf
mov
mov
pop
dec
xchg
ret
pop
rorb
fisttps
add
inc
or
fwait
rcrb
test
lahf
sbbb
lret
jg
rep
inc
test
jne
mov
pop
pop
aam
in
inc
dec
mov
and
mov
mov
add
les
ffreep
lcall
movsl
orb
mov
fdivl
dec
jmp
stos
sbb
jb
mov
int3
test
mov
andb
mov
fisttpl
push
bound
sub
mov
mov
inc
stc
and
xor
mov
adc
ljmp
inc
loope
imul
iret
xchg
pop
inc
mov
cld
or
and
or
movsl
lods
push
xor
cmp
jb
sub
int
xchg
mov
iret
clc
das
mov
xchg
int
xor
jmp
inc
out
push
hlt
lods
outsb
in
cmp
mov
and
in
pop
push
push
hlt
mov
cld
cmpsb
std
jo
out
push
das
adc
loop
sti
cli
call
fidivs
pop
ds
loop,pn
outsl
insl
test
shl
sahf
add
pop
jmp
push
fs
fstp
and
dec
cmpb
jno
imul
jb
pusha
fs
loope
push
gs
out
cld
mov
popf
and
pop
addb
or
xor
pop
jl
add
call
dec
add
push
outsb
cmp
and
cmc
push
sbb
xchg
cli
or
rorl
lret
add
or
loopne
lods
mov
sbb
or
jp
xlat
sbb
xor
mov
mov
pop
jecxz
ret
stc
pop
fsubl
xchg
sbb
outsb
jmp
cmp
mov
pop
pop
cmp
aad
out
imul
push
das
lcall
sub
test
dec
test
inc
push
and
mov
fldl
jnp
sahf
fsubl
test
sub
xor
lods
push
mov
fs
and
je
inc
jb
aas
test
mov
decl
cli
jno
cmc
adc
and
das
ret
lahf
imul
xchg
mov
andb
test
test
add
test
pop
push
leave
call
adc
frstor
arpl
sbb
cwtl
enter
or
xchg
push
inc
daa
cmp
xchg
adc
add
mov
adc
mov
orl
jge
cmp
les
addr16
bound
jge
mov
mov
lds
out
push
dec
mov
ja
push
loop
mov
sub
repnz
repz
push
mov
mov
int
push
xor
pop
outsl
mov
jge
movq
loopne
in
sbb
dec
mov
or
rcrl
mov
dec
into
das
lea
mov
fists
testl
in
lret
icebp
movsb
and
lods
dec
int3
clc
negb
add
mov
pop
hlt
push
mov
jp
sahf
hlt
cmp
cwtl
xor
in
leave
insl
insl
or
push
imul
cmpsl
insb
jp
or
jge
jg
loopne
cli
adc
in
lret
adc
dec
imul
shl
call
fnsave
hlt
ret
mov
xor
inc
dec
jae
sub
or
or
iret
or
dec
cmpxchg
ret
icebp
mov
inc
dec
fmull
inc
shl
mov
lods
xchg
pop
mov
test
push
inc
mov
xchg
in
push
xchg
out
int3
jb
hlt
add
loopne
adc
xchg
mull
jp
jg
or
cmc
dec
mov
sbb
enter
and
pusha
mov
push
jno
xchg
test
jnp
ja
xchg
dec
mov
mov
outsb
add
xchg
mov
outsl
mov
xchg
jge
sbb
lahf
jl
mov
outsb
mov
sahf
mov
sub
pop
lcall
xchg
sbb
aam
gs
sub
test
ret
xchg
fimuls
inc
add
and
sbb
pop
jp
mov
push
cmp
cmp
mov
add
fmul
sti
bound
dec
fwait
ret
adc
rol
es
js
cmc
nop
cmp
lock
aas
es
out
jge
lea
fdiv
mov
mov
js
jmp
push
xor
neg
xchg
mov
push
sahf
sub
mov
or
into
shlb
popa
test
push
pop
leave
mov
cmc
or
gs
ret
iret
dec
iret
sub
sub
dec
movsl
test
xlat
outsl
sbb
sbb
bound
pop
outsl
jmp
mov
test
out
or
fs
and
pop
sbbl
pop
add
fmull
push
cmp
sub
mov
push
jge
pop
sbb
and
pushf
loopne
je
loopne
hlt
mov
mov
xor
add
cmp
dec
shlb
aas
insl
pusha
pushf
sub
mov
lock
cltd
mov
push
fiadds
fwait
cltd
fadd
daa
leave
mov
loopne
jno
psllq
outsl
pop
lahf
rolb
sub
inc
xor
mov
fistl
test
les
push
movsb
sahf
imul
jns
jg
movl
jae
add
ss
xor
cmp
ret
xor
xorb
adc
mov
inc
push
je
dec
gs
rcr
fildl
xchg
leave
or
jg
lret
inc
xchg
sbb
fnstcw
add
xchg
jl
push
or
jb
fnsave
cmp
shlb
jno
adc
inc
adc
out
sub
cmc
lret
and
xchg
arpl
sbb
sbb
cs
or
aam
in
addr16
scas
movsb
ja
test
bound
orb
aad
sub
shr
inc
pop
xor
inc
push
xor
ret
movsb
and
in
or
push
ret
loope
lret
dec
call
hlt
jmp
mov
adc
sbb
andb
add
xchg
mov
cmp
mov
loope
dec
mov
popl
mov
jmp
cmp
jmp
mov
ret
mov
xchg
pop
cmp
sub
jecxz
repz
mov
dec
cmp
loopne
xchg
push
mov
push
in
cmp
jecxz
push
mov
aad
daa
lods
jmp
negb
int3
fisttps
dec
jle
and
std
ds
inc
js
mov
or
inc
mov
imul
jp
inc
aad
in
les
imul
add
outsb
or
fmulp
sbb
nop
call
int
push
xchg
in
inc
fimuls
cmpsl
std
outsl
and
aam
out
jnp
addl
dec
imull
loopne
jp
mov
adc
jle
arpl
mov
inc
fbstp
mov
rcr
jmp
sbb
mov
mov
imul
ja
jnp
fsubl
rcl
enter
shll
cwtl
add
arpl
lret
out
sub
call
sub
or
roll
lret
ds
popa
aas
mov
jb
dec
fwait
add
int
ljmp
jae
mov
mov
xorb
test
movb
pushf
ja
dec
mov
pop
cmc
push
mov
push
jne
jmp
and
and
push
push
bound
xorb
std
mov
and
fmuls
les
leave
scas
adc
jp
pop
push
test
cld
inc
scas
push
pop
in
ret
mov
mov
mov
xor
mov
xor
lods
mov
cmpsl
push
sub
dec
dec
fadd
ss
sub
sub
cli
ret
dec
iret
sbb
std
aad
faddl
clc
fs
cmp
pop
jl
shrb
adc
jp
push
outsl
sahf
mov
inc
dec
mov
mov
pop
mov
ret
or
ret
add
mov
xor
mov
inc
insl
in
loope
xorl
inc
or
inc
imul
cmp
aas
xorb
xchg
popf
pop
dec
std
jbe
inc
daa
pop
or
sub
mov
mov
inc
dec
xor
xchg
cltd
subb
xchg
nop
imul
inc
cmpl
mov
push
nop
adc
call
sub
mov
es
add
test
jno
push
in
cmpsl
or
push
movsl
sbb
and
aas
loop
xchg
lock
xor
fcoml
stos
stos
nop
jecxz
sbbl
insl
sbb
shrl
fucomip
lahf
push
fsubrl
mov
ja
inc
call
mov
lret
rcrb
pop
push
mov
fdivrl
movsb
subb
mov
mul
push
fs
jbe
jmp
leave
out
aas
adc
cld
push
lcall
scas
dec
lahf
jns
push
and
xchg
mov
cmc
inc
xor
mov
cmp
shlb
andb
lahf
cwtl
mov
mov
in
pop
es
ds
hlt
push
cltd
xchg
inc
mov
cmp
jae
add
pop
xchg
outsl
fidivrl
jae
jecxz
iret
nop
sub
mov
push
inc
pop
stos
push
and
fsubl
pop
in
mov
and
lods
fsubl
add
sarl
out
orb
cs
aas
cmpsb
outsb
add
orb
mov
fmul
sub
enter
sbb
push
sbb
iret
jle
inc
mov
mov
in
incl
hlt
xchg
push
sbb
imul
xchg
daa
arpl
rclb
push
mov
xchg
movsb
inc
xchg
jnp
lds
xchg
add
dec
xor
pop
and
ret
jb
fwait
add
pop
or
adc
pop
xchg
push
dec
mov
or
sbb
loope
shrb
inc
adc
mov
shrb
insl
test
sub
ret
push
inc
xor
push
sub
icebp
or
mov
push
adc
test
je
out
inc
filds
xlat
push
mov
mov
pop
cmc
push
or
pop
xchg
dec
test
xchg
jbe
les
add
mov
enter
inc
dec
and
jne
and
and
fcoml
inc
nop
test
sub
insb
cmp
add
fidivs
cmp
sbb
inc
in
xchg
loope
data16
fdivrs
shl
jb
fcmove
icebp
add
hlt
out
dec
adc
inc
mov
leave
adc
popf
addr16
cmp
dec
pop
gs
fidivs
xchg
lock
push
lret
les
mov
scas
out
imull
ds
xchg
mov
xor
outsb
and
sub
cmp
out
test
push
jae
xchg
outsl
pop
ret
dec
jnp
adc
leave
pushl
sub
mov
adc
cmp
add
pushf
pushf
jb
sub
mov
inc
pop
into
shlb
xor
pop
cld
movsl
or
xlat
das
mov
in
dec
mov
and
push
xchg
and
test
orb
push
stc
in
cli
les
sahf
adc
sahf
mov
lock
mov
lods
mov
xor
insb
fs
mov
jne
int3
push
jmp
sbb
popf
mov
pop
inc
push
fldt
push
addr16
mov
dec
xor
in
xor
push
insb
pop
sarb
push
sarl
lret
mov
jae
addr16
cwtl
jmp
flds
cmc
pop
mov
fwait
orb
fildl
sbb
cld
xchg
sub
cwtl
idiv
into
fwait
cmpsb
jmp
icebp
cmc
and
movsb
xor
or
jmp
mov
outsl
or
movsl
popf
push
and
cmp
repnz
or
jl
push
dec
fdivrl
mov
inc
test
add
je
lret
push
xor
fistpll
xor
repz
cwtl
shll
jae
pusha
dec
out
movsb
cmp
pop
sub
in
fcmovnbe
xchg
loop
outsb
scas
pop
das
and
rclb
or
push
lret
add
iret
push
sbb
out
mov
pushf
lds
sub
jb
lds
cmp
std
cmc
loope
popa
rol
xchg
and
pusha
sbbl
iret
addr16
push
mov
cmc
sub
enter
int3
scas
repz
pop
sub
jne
mov
call
cs
cmc
ja
cli
scas
sarb
sub
test
in
int3
add
cwtl
xchg
lahf
icebp
mov
movsl
mov
out
arpl
lret
ja
pusha
mov
jns
mov
bound
mov
cmp
aas
andb
sub
ror
mov
lock
nop
in
rcrb
aad
jbe
test
dec
cmp
add
lahf
aam
pop
pop
sub
mov
pop
jno
cmp
sbb
cmp
sbb
mov
push
aam
cmp
loopne
lods
ja
repnz
imul
jnp
scas
push
dec
push
pop
mov
inc
fdivs
daa
cs
push
test
sbb
ss
push
xchg
add
sub
bnd
inc
loop
insl
call
xchg
xchg
test
push
inc
mov
das
mov
add
dec
cmp
mov
sub
adc
pop
sub
inc
pop
orb
inc
cmp
mov
in
inc
imul
movsl
jle
pop
js
mov
cmpsb
dec
rorl
adc
in
ss
int
roll
inc
out
call
inc
and
cs
push
add
stos
pop
adc
xor
pmaxsw
bound
fiaddl
mov
daa
inc
rcrb
loop
loope
mov
loop
mov
arpl
aad
or
insl
adcb
test
mov
and
es
jno
sbb
repnz
fnsave
pusha
ror
das
or
dec
out
jnp
add
lret
sbb
icebp
xchg
in
enter
adc
sub
sub
jg
mov
movl
je
sub
xor
sbb
into
cld
ss
inc
pop
lcall
sub
pop
inc
pusha
inc
pop
mov
add
sub
and
mov
or
sub
mov
inc
mov
popf
pop
fcomi
les
rcll
dec
push
movsb
cmp
lods
add
imul
mov
ja
add
ss
mov
bound
fmull
das
test
jnp
repz
jg
scas
sub
xor
ljmp
enter
loopne
clc
inc
sti
and
repnz
popa
pop
aas
sub
sub
cmp
sbb
test
sub
sar
mov
data16
dec
popa
add
cmp
mov
movsl
es
mov
adcl
in
and
lret
rorb
fcompl
out
loopne
shll
sbb
nop
push
and
xchg
push
mov
ss
test
jmp
nop
inc
cmp
push
fcmovb
cmp
ret
mov
jnp
std
stos
sbb
popf
dec
jge
mov
loope
jmp
and
adc
adc
addr16
and
scas
test
arpl
mov
jmp
repnz
add
in
pop
les
sub
jg
and
add
pop
adc
or
out
cmp
sub
mov
push
hlt
add
and
pop
addr16
jle
pop
repz
ret
mov
push
sti
sub
xor
dec
and
insl
xor
xchg
dec
fildll
add
icebp
stc
js
dec
daa
int3
fldl
mov
je
or
lock
stc
and
mov
pop
stc
and
mov
ret
add
rcrl
ljmp
lret
cs
mov
xlat
movsb
into
and
repz
cmpsl
mov
fcmovnu
jno
add
jg
mov
lods
mov
sub
inc
aas
adc
shll
out
ds
push
shrl
lock
insb
sarb
imul
xchg
jl
add
insb
mov
movsl
fmull
or
or
dec
sbb
sub
es
pop
push
imul
cld
xchg
nop
popa
and
sbb
jecxz
subl
sbb
and
jae
mov
enter
out
aad
lret
shlb
mov
xor
movsl
xor
mov
sub
jmp
cltd
xchg
or
dec
or
stos
jae
cmp
rcr
das
into
rorl
push
cmp
call
sti
mov
cmc
incb
push
cmp
sub
sbb
fnstsw
mov
jne,pt
in
mov
int
call
jno
stos
push
inc
ret
mov
out
push
pop
xchg
inc
cs
outsl
and
stc
imul
scas
adc
subl
jbe
or
ret
adc
cmp
cmpsl
add
dec
inc
dec
push
sub
loopne
sbb
test
test
mov
pop
cmpsb
sbb
hlt
inc
rorb
das
pop
pushf
mov
jg
pop
dec
aaa
sahf
jl
and
idiv
mov
sbb
jmp
push
loopne
mov
jb
adc
pop
mov
jns
pop
imul
sbb
nop
ret
lods
xchg
in
stc
hlt
push
jge
loopne
ret
and
sti
cld
pop
sbb
pop
xchg
rclb
sti
scas
or
lcall
mov
adc
dec
jg
fmull
inc
lret
jo
mov
loope
push
adc
nop
mov
sub
xor
sbb
popf
arpl
inc
insl
inc
inc
test
push
xchg
es
mov
mov
fbstp
addl
repnz
dec
scas
jbe
shrb
repz
filds
nop
lock
dec
push
sarb
lret
in
cwtl
or
dec
xchg
sbb
or
addr16
cmp
icebp
mov
mov
xchg
das
inc
mov
rolb
pop
out
lahf
testl
mov
mov
in
pusha
leave
sbb
mov
push
jnp
cmp
mov
ds
scas
aaa
loop
mov
or
call
sbb
xor
push
xor
xorb
sahf
inc
popa
mov
xor
dec
xchg
push
xor
in
in
push
lds
pop
cld
adc
xlat
mov
pop
pop
push
dec
sti
repnz
jp
cs
es
and
push
mov
and
pop
and
in
xlat
mov
fsub
pusha
xor
out
rclb
xchg
fadds
cmc
sbb
jmp
pop
jo
in
inc
pop
inc
loopne
cmc
add
cmpsl
pop
or
xor
cld
inc
loop,pt
adc
sbb
call
in
scas
mov
sub
js
jge
push
pop
int
jg
inc
cmpsb
jno
dec
jbe
les
mov
or
xchg
mov
lret
cs
dec
fcoml
test
inc
mov
or
cmp
add
pop
out
cmp
loopne
aas
in
add
add
mov
outsb
pushf
inc
dec
stc
sbb
scas
pusha
xlat
sub
daa
call
aam
movsl
shll
ds
in
sbb
aam
adc
pushf
in
or
scas
sub
xchg
outsl
fdivrl
or
in
push
icebp
xchg
in
repnz
int
mov
and
cmp
jg
mulb
fists
cmp
dec
outsl
mov
jno
sub
push
leave
icebp
ret
and
fadds
add
imull
mov
mov
test
and
push
out
lret
push
repnz
xor
out
mov
sub
popf
mov
mov
fistpl
je
adc
sbb
jnp
push
and
mov
adc
rol
sbb
sub
xchg
scas
outsb
inc
adc
aad
mov
or
push
int
ret
filds
ds
repnz
loopne
aam
rol
add
fmuls
push
dec
je
pop
xchg
xlat
sub
pop
sub
mov
inc
test
adc
fucom
stos
nop
dec
xor
icebp
pushf
std
jecxz
jnp
jmp
cmpsl
push
xchg
xor
std
outsb
lock
jno
mov
outsb
repnz
cmp
cli
ja
mov
jmp
xchg
test
imul
je
dec
shr
jmp
push
mov
xchg
test
stc
or
mov
aas
cmp
ret
mov
adcl
and
lods
daa
lock
rcrl
mov
jbe
nop
out
ret
clc
mov
mov
add
mov
or
inc
xchg
neg
mov
movsl
adc
add
push
stos
pop
push
lods
outsb
mov
mov
outsl
mov
dec
and
mov
cwtl
fidivs
loop
cmp
xchg
std
or
jns
insl
sub
push
mov
fsubl
nop
push
cwtl
inc
fwait
sbb
mov
add
in
popf
pop
jnp
je
mov
xor
insb
push
sbb
lods
mull
jle
cmc
dec
push
lret
or
jne
xchg
xor
not
outsl
sub
dec
pop
cmp
or
int
jne
dec
dec
icebp
push
ret
aaa
test
sbbb
rolb
dec
add
push
stc
mov
xchg
test
jbe
decl
lds
adc
inc
push
fld
adc
sar
mov
rcrl
and
xor
or
adc
jg
leave
add
pop
imul
and
jnp
enter
xchg
mov
adc
or
repnz
inc
scas
loop
mov
out
xlat
cmp
pushf
and
std
mov
in
xchg
adc
pushf
adc
xor
jbe
mov
xor
jno
div
js
cltd
and
subl
push
std
adc
out
push
clc
stos
mov
out
xchg
cltd
mov
pushf
icebp
cmp
pop
shlb
hlt
fcomps
pusha
inc
je
mov
xor
fcompl
mov
push
scas
repnz
test
or
xchg
out
or
push
and
stc
ror
decb
pop
jp
push
loope
movsl
jno
in
cmpsl
mov
cs
in
fwait
int
es
jp
test
and
imul
insl
ret
popa
lock
sub
pop
jae
addr16
lock
push
push
dec
add
push
out
imul
mov
cwtl
fsubrs
faddl
jns
inc
in
movhps
aaa
mov
pop
pop
cmpsl
inc
popf
mov
and
bound
inc
sub
js
fisttpl
jg
ret
sub
mov
rorl
mov
and
inc
sbb
sti
das
ror
dec
push
icebp
jecxz
out
clc
jl
stos
dec
pop
inc
add
sbbl
in
xchg
sarb
inc
xor
icebp
dec
xorb
mov
sub
std
rolb
jecxz
clc
fmul
out
mov
add
scas
insl
jmp
pop
mov
mov
movsb
mov
mov
cmp
or
movsb
test
sti
xor
aam
ljmp
mov
iret
and
pop
inc
ja
xchg
mov
mov
aam
movsb
orl
lock
lahf
jg
lds
test
loop
xchg
mov
lret
and
or
add
adc
jno
xchg
push
loopne
jbe
and
ffree
pop
push
movb
jmp
add
insb
push
fsts
mov
cltd
xlat
jp
push
pop
negb
faddl
pop
dec
lret
mov
sbb
scas
insl
add
inc
mov
push
icebp
pop
mov
testl
xchg
mov
sub
sub
inc
mov
sbb
inc
outsb
std
pop
mov
mov
sarb
xor
nop
xor
cld
rolb
and
into
push
iret
lods
or
lahf
loope
fs
mov
mov
adc
xor
pop
les
stos
xor
scas
movsb
and
adcl
xchg
arpl
fnstenv
ret
or
xchg
mov
jo
aam
sub
imul
jecxz
scas
inc
or
push
mov
add
stos
adc
cmpsb
push
paddq
pop
mov
pop
cwtl
and
push
xor
subb
push
rolb
xchg
mov
push
lock
or
pushf
sbb
mov
test
add
or
dec
sbb
jns
les
add
les
sti
push
sbb
sbb
stos
mov
ret
movsb
repz
aas
or
dec
inc
add
pop
push
or
cmpsb
arpl
pop
into
add
fmuls
test
fstl
loopne
push
and
scas
mov
ja
imul
push
cmp
sti
and
mov
dec
ret
clc
inc
test
mov
int3
pop
jp
stos
push
pop
push
fs
iret
repz
stos
test
iret
or
test
push
or
cmc
xor
adc
cmp
cmp
out
arpl
xor
or
shll
fidivrl
push
sbb
aas
repnz
cmp
or
inc
or
popa
jno
push
int
adc
push
scas
aad
les
cmp
and
sbb
push
cmp
mov
rcll
xchg
hlt
mov
sbb
mov
pop
movsl
fsubl
push
sti
dec
sbb
out
outsl
out
insl
jne
add
popf
cmp
shrl
cwtl
xchg
jbe
jge
fdivrp
fwait
xchg
and
and
push
insb
cmp
shlb
push
pop
inc
sbb
cmpsl
pop
mov
test
or
jbe
int3
ljmp
or
push
das
or
xor
cmpsl
jmp
pop
mov
adc
jecxz
push
pop
add
dec
or
sub
sbb
nop
jns
mov
sub
mov
das
rclw
popf
xor
ljmp
iret
xchg
imul
js
and
sbb
mov
mov
xlat
scas
mov
mov
iret
xchg
pop
vmovlps
enter
xlat
mov
cld
push
cwtl
fidivrs
push
sbb
outsb
push
movsb
loop
mov
fcomps
bound
mov
mov
push
adc
sbb
mov
rorb
jp
jns
xor
add
cmp
xchg
lahf
test
adc
dec
cmp
insb
std
ss
ja
cld
and
sti
fwait
aam
add
gs
jge
cli
ljmp
out
outsb
or
cmp
and
jmp
sub
push
mov
leave
insb
xchg
int3
aaa
and
lock
fxch
xchg
push
lret
xchg
pop
jmp
ret
test
adc
pop
fnstcw
pushf
pop
fnstenv
mov
jb
inc
sub
es
or
mov
rcll
mov
jl
rorb
adc
jbe
and
push
mov
mov
xchg
xor
jno
and
dec
mov
jbe
mov
mov
pop
cmp
aas
addr16
nop
add
aaa
push
push
iret
repnz
rcrb
js
and
or
adc
pop
adc
cli
repz
scas
add
mov
xchg
loop
sub
cmp
adc
popa
in
fists
test
pop
aad
loopne
imul
jno
ja
addl
push
test
jmp
sbbb
xchg
sub
push
jg
roll
cmp
sub
mov
xchg
xor
bound
dec
ret
andb
push
jle
scas
inc
mov
push
shr
std
roll
mov
xchg
testb
adc
jl
sub
add
pop
test
push
loope
sbb
xchg
in
jne
mov
dec
loopne
sbb
mov
pop
cwtl
inc
fs
fwait
push
xchg
jns
aam
sbb
sub
jne
pop
lcall
dec
out
aaa
dec
shl
lds
cmp
push
lods
mov
clc
lock
popf
jl
mov
bound
cmp
push
cmc
mov
xorb
cmpsl
mov
mov
xchg
and
into
add
das
movsb
xchg
pop
jl
xchg
sbb
push
mov
fdivrl
ss
adc
mov
out
xor
int
jns
mov
adc
adc
enter
fwait
fwait
loopne
imul
xchg
aaa
cmp
pop
stos
dec
inc
sub
scas
call
sbb
pop
cmp
das
loop
mov
sbb
pop
pop
lahf
jno
and
jmp
and
inc
or
inc
lods
sub
pop
in
enter
test
xor
pusha
mov
push
jge
inc
mov
jbe
mov
jmp
pop
sbb
push
xor
dec
jmp
adc
xor
push
push
call
mov
scas
clc
outsb
loopne
add
outsl
mov
sub
adc
jne
fwait
sahf
nop
mov
cltd
pop
sbb
xchg
insb
jle
shlb
xor
loopne
in
mov
dec
xor
insb
push
sbb
cs
mov
add
adc
lock
cmc
shl
shlb
and
aad
loope
jns
xor
dec
inc
sub
in
sbb
outsl
fs
adc
jp
xchg
cmpsl
outsb
cwtl
xor
jmp
or
rcrb
out
xor
add
adc
cmc
fisubrl
inc
ficoml
push
cli
movsb
or
sub
in
mov
mov
gs
test
shll
movsb
in
sub
mov
sbb
out
outsb
icebp
out
dec
jb
stc
or
lods
mov
fbld
mov
imul
scas
add
add
inc
in
loopne
cld
stc
add
loop
xchg
mov
xor
and
fildll
icebp
jns
lahf
addr16
jp
lods
sub
inc
shrb
sar
iret
dec
sarb
adc
mov
aad
jno
fstpt
xchg
push
fsts
pop
xchg
dec
fstl
lcall
fwait
testl
scas
adc
mov
loopne
les
sub
lods
test
push
adc
das
cwtl
jp
jae
push
sub
aam
pop
lock
mov
mov
addl
clc
push
lds
inc
lock
sti
nop
push
ret
das
cmpl
lahf
dec
es
jmp
mov
cmp
cmpb
icebp
cwtl
cmp
lcall
dec
loope
movsl
add
scas
mov
in
out
mov
in
int
imul
lea
aas
dec
into
scas
in
mov
call
fmul
movl
jae
mov
repnz
lea
pop
mov
pop
ret
jne
ds
and
aas
pusha
sbb
loopne
push
pushf
aam
in
push
sbb
mov
jb
adc
rcll
adc
sbb
aas
jle
inc
aas
cmpl
fxch
jb
mov
in
push
roll
inc
andl
pop
lds
jecxz
cmp
hlt
orb
fmull
push
mov
test
mov
js
xchg
idivl
mov
mov
lods
shlb
fimuls
cmp
neg
fistpl
cs
loop
pop
cmp
xlat
xor
xchg
add
mov
daa
ret
mov
pop
cmp
sub
loopne
mov
xor
call
xor
and
aad
inc
add
sub
mov
dec
in
stos
enter
dec
gs
mov
scas
mov
inc
mov
fisubrs
sbb
in
in
in
adc
fcmovbe
inc
pop
psllw
fidivrl
pop
push
sbb
jbe
xor
dec
lahf
stc
movsbl
stos
bound
scas
adc
push
mov
mov
jbe
cld
cmpsl
cmp
dec
loopne
xor
repnz
add
mov
cld
push
test
pop
testl
jle
sub
int3
xlat
out
nop
jecxz
mov
sub
in
into
mov
and
push
xor
cli
xlat
pop
movsb
pop
mov
push
jg
pop
mov
xchg
insb
sub
mov
in
inc
inc
mov
inc
dec
xor
push
cmp
fdivl
out
sub
sbb
jge
pop
in
hlt
and
sub
xor
roll
dec
adc
popa
mov
xchg
push
jo
in
jmp
xchg
push
adc
or
fmul
cmp
rolb
leave
mov
or
rorl
cmpsb
stc
jne
out
insl
sbb
mov
mov
inc
fsub
les
mov
mov
inc
fisubrs
xor
push
add
pop
test
mov
sub
loopne
or
adc
aam
rcrb
xchg
pop
and
or
xchg
test
xor
adc
mov
pop
lods
ret
mov
inc
mov
mov
call
fwait
repz
sbb
xlat
cwtl
cmp
inc
daa
jg
xor
sub
lret
enter
lock
xor
nop
inc
push
xchg
in
or
xchg
leave
pushw
add
fisubl
scas
daa
stos
inc
mov
sbb
push
inc
ljmp
mov
gs
mov
scas
js
lods
leave
test
sahf
fs
bound
pop
xor
mov
add
add
sbb
stc
pop
xlat
jnp
jle
jg
test
adc
jmp
xchg
mov
mov
int3
pushf
adc
jnp
pop
cmc
push
inc
cs
cmpsl
aam
insb
stc
mov
test
in
mov
loope
stos
inc
push
dec
cmpsb
add
xchg
jle
ljmp
notl
adc
ss
loope
mov
pop
in
pop
imul
mov
or
stc
cli
loope
scas
sbb
js
or
lcall
xor
shll
fdivrp
mov
ret
icebp
aam
shlb
and
ror
fnstcw
test
jae
xchg
pop
mov
sbb
stos
pusha
sbbl
push
push
adc
push
or
jnp
mov
adc
movl
xchg
out
push
xor
out
jnp
cmpsl
cmc
jecxz
pop
add
fnstenv
out
lret
inc
lret
adc
mulb
xchg
xchg
shl
add
test
mov
xchg
ds
jl
imul
lahf
jo
adc
outsb
lret
mov
mov
dec
ljmp
jnp
sub
xchg
outsl
call
or
jg
jp
mov
sti
jnp
pop
mov
cmp
scas
fsts
push
aam
add
ja
arpl
xchg
fldl
leave
mov
arpl
ja
cmp
je
loop
int3
call
pusha
jo
or
in
pushf
call
out
mov
aas
shr
in
cmp
dec
js
push
mov
or
movsl
xchg
jp
outsb
shl
adc
push
jge
mov
fsubrl
fistl
mov
sbb
add
pop
hlt
sbb
cltd
sti
mov
mov
out
movsl
push
push
sub
daa
hlt
mov
mov
lock
shl
add
sub
aas
xchg
lfs
jnp
test
adc
mov
pushf
js
mov
jne
aas
sarb
adc
stos
es
mov
and
lods
and
jns
clc
inc
filds
sub
dec
int3
push
xchg
push
or
pop
ficomps
mov
push
jp
lea
testl
dec
push
imul
mov
push
lahf
shll
in
mov
sbb
or
xor
mov
push
mov
sub
gs
scas
pop
sub
push
dec
nop
xor
fs
dec
stc
ljmp
and
inc
sub
cmp
jmp
or
and
popa
pushf
into
popa
push
bound
es
push
adc
imull
iret
movsb
in
or
xchg
cmpsl
push
sbb
js
lds
inc
xor
jno
loopne
and
sbb
push
add
sarl
aam
ljmp
pop
cmp
and
mov
cmp
jmp
fdivrs
roll
test
shl
mov
popf
imul
lods
mov
dec
xchg
int
sbb
jnp
andl
xchg
lahf
fstp
or
mov
aas
in
jo
cmp
int
sbb
rorb
xor
outsl
leave
sub
pop
enter
imul
clc
int
xchg
xchg
ret
pop
lahf
test
pop
mov
movsl
mov
out
mov
sub
sub
cmc
dec
mov
cmp
add
sar
dec
adc
jp
mov
dec
jg
mull
test
lea
mov
xor
add
dec
add
imul
inc
ja
pop
xchg
in
jne
mov
call
fucomip
pusha
data16
sar
pop
movsb
jmp
pop
add
scas
or
jbe
add
mulb
mov
sahf
aad
push
sbb
mov
or
xchg
fnsave
sarb
mov
lods
fsubl
and
andb
sub
faddp
fs
sbb
push
daa
nop
push
sub
in
stos
aad
dec
jbe
dec
ljmp
lcall
dec
sub
cmp
adc
fsubrl
fs
imul
or
sbb
pmaddwd
jnp
jl
lahf
inc
mov
jecxz
jbe
inc
or
and
mov
dec
andb
mov
adc
stc
aas
sbb
inc
mov
pop
add
jne
pop
loopnew
inc
test
iret
inc
stos
sbb
push
push
andb
cmpsb
jmp
or
jmp
cltd
push
mov
inc
mov
sub
cmc
imul
stc
and
mov
cwtl
fistpll
xchg
xchg
mov
insl
out
inc
lock
push
mov
data16
add
into
in
adc
popa
int
adc
pop
mov
push
push
out
fildl
mov
fwait
add
test
rcll
in
or
imul
inc
push
and
inc
xchg
jo
jmp
inc
arpl
xlat
mov
mov
jg
inc
imull
addr16
mov
std
lods
mov
nop
add
sti
sbb
xor
icebp
shll
sub
insl
int3
ss
loopne
sti
popf
jno
stc
dec
mov
mov
loopne
mov
lret
jmp
or
cmp
xchg
test
cs
cmp
xor
and
sub
sub
ret
dec
mov
addl
jmp
scas
pop
ret
dec
pop
cmpsl
fdivl
push
and
jno
daa
pop
pop
je
lcall
dec
mov
leave
pop
push
dec
jmp
movsl
rclb
repz
lcall
scas
movsb
inc
popf
lahf
push
fidivrl
add
inc
lods
mov
add
fwait
cmp
inc
mov
stos
scas
sti
push
xorb
mov
jmp
fstps
aaa
or
mov
imul
fwait
or
loope
inc
adc
sub
pop
cmp
sbb
lock
jns
inc
loope
pop
scas
or
push
fsubrp
loop
xor
jbe
pop
sbb
stos
in
lret
xchg
mov
add
in
and
getsec
xor
push
pop
inc
push
in
add
cmpsl
lret
sub
scas
xor
mov
push
xchg
jb
dec
xchg
adc
mov
scas
sbb
xor
pop
mov
clc
inc
adc
pop
cmp
mov
and
mov
aas
jmp
movsl
dec
push
ret
sub
cmp
push
cwtl
cmp
mov
rcl
sbb
sarl
pop
scas
jns
pop
sbb
lea
aas
cmp
jbe
enter
orl
mov
dec
adc
test
hlt
test
scas
cmp
sbb
xchg
inc
jmp
cld
hlt
jo
orb
jno
sbb
pop
stc
loopne
xchg
int
hlt
popa
cmp
les
mov
leave
movsl
mov
fwait
daa
add
lret
test
and
dec
mov
inc
dec
fdivl
and
test
or
jnp
jnp
fwait
adc
or
pop
mov
lcall
in
andl
in
in
iret
addr16
mov
fstpl
mov
cmpsl
jl
in
cli
fs
jns
pushf
stc
inc
adc
push
test
cld
push
sub
inc
pushf
jmp
je
cmp
std
testl
inc
subb
stos
mov
mov
lods
and
movsb
push
pop
cmp
repnz
je
pop
or
push
mov
xlat
ret
cmp
ret
and
outsl
addr16
loope
mov
mov
mov
jae
adc
cmp
sbb
data16
push
je
push
loopne
sarl
jmp
lea
pop
inc
xchg
pop
popa
cmpl
mov
mov
int3
push
xchg
and
mov
push
sbb
scas
mov
adc
jo
in
scas
out
adc
mov
sarl
push
and
adc
lcall
dec
push
add
sub
adc
mov
xchg
ficomps
inc
pop
repnz
and
enter
fwait
xlat
cmp
cmp
cmc
mov
jmp
xor
out
shlb
xor
ret
add
fnstenv
inc
popf
xchg
jg
into
jecxz
imul
adc
pusha
and
testb
jbe
out
cmpsb
jo
cmp
loope
lret
pusha
mov
subb
push
fdivrl
mov
lds
push
pushf
or
sti
adc
repnz
inc
ss
popl
mov
xor
pop
cmp
stos
ja
lock
inc
insl
lret
hlt
movsb
jae
int
sub
dec
xchg
mov
movsl
shl
mov
and
imul
test
add
xor
push
push
jge
mov
ficoml
insb
pushf
jmp
sub
sbb
push
xor
xor
or
jl
push
cmp
or
fnstcw
pop
mov
inc
rorb
sti
pop
int3
cmp
rcrl
es
pop
cld
outsl
inc
loopne
hlt
pop
mov
jecxz
push
adc
jp
jo
cli
jb
mov
pop
mov
adc
add
sub
push
mov
push
sub
pusha
pop
scas
push
bound
jmp
shll
cmp
lret
jbe
xchg
jb
sbb
jb
nop
xlat
sarl
and
lahf
lret
adc
loope
outsl
adc
lret
push
sub
jo
repnz
int
mov
cmc
and
jae
pop
icebp
dec
push
stos
pusha
xchg
lret
adc
mov
mov
cli
fisttpl
jle
mov
inc
inc
bound
add
es
idivl
mov
jp
push
jmp
xchg
dec
loop
mov
push
popf
fdivl
and
dec
fisubs
enter
pop
mov
or
leave
inc
insl
mov
es
popl
and
in
scas
ds
arpl
inc
iret
adcl
jg
icebp
jbe
sbb
nop
sbb
inc
push
mov
mov
inc
xchg
popa
fwait
aam
ja
mov
repz
leave
or
mov
in
fwait
sbb
mov
in
mov
lret
cld
pop
mov
or
mov
dec
dec
lods
stos
fistpl
mov
fwait
jae
adc
jns
mov
or
push
cld
pop
ficoms
dec
fsubs
mov
sbb
add
and
xchg
jmp
arpl
ja
pop
cmc
lods
xchg
addr16
leave
push
mov
jnp
push
orl
push
xor
sub
stos
sbb
adc
xor
push
mov
cmp
mov
stc
fcoms
ret
sbb
mov
sub
mov
dec
and
cld
xchg
enter
or
cmpsl
call
dec
and
or
mov
mov
pop
hlt
es
jmp
add
in
sub
testb
subb
mov
pop
push
hlt
std
jl
pop
bound
cmp
inc
and
movsl
jl
lret
je
or
cmp
inc
fnstcw
mov
sub
jg
adc
idivb
addr16
cmp
shlb
hlt
push
das
pusha
xor
test
outsl
jns
xchg
ss
or
stc
scas
adc
xor
add
insl
sub
push
push
movsl
jnp
push
and
pop
mov
push
imul
inc
push
out
in
dec
jb
int3
es
or
sbb
push
das
or
iret
mov
xor
sub
nop
mov
xlat
sbb
fs
jle
and
outsl
repnz
mov
xchg
mov
mov
mov
bound
stos
lcall
mov
jmp
imul
pop
mov
cmpsl
pop
adc
or
dec
mov
and
or
mov
gs
mov
cs
or
stos
outsb
cld
stos
mov
pop
inc
lods
clc
dec
out
pop
fsts
fcompl
inc
sbb
mov
dec
pushf
add
mov
out
aas
jp
xchg
pop
dec
mov
sub
add
xchg
fcomps
pop
dec
dec
test
fstpt
adc
inc
sbb
xlat
lods
mov
loop
lds
loopne
pop
nop
rcrl
sub
pop
mov
lret
cmpsb
mov
dec
test
dec
movsb
cmp
jecxz
movsb
push
outsl
enter
orb
std
jne
iret
sub
cld
imul
xchg
lret
loop
xchg
lahf
push
sub
cmp
and
mov
jge
mov
or
jno
int
mov
push
dec
in
shrl
xchg
dec
icebp
rcl
or
push
dec
and
pop
daa
and
lods
dec
cwtl
cmp
ficompl
dec
fnsave
lea
xchg
inc
inc
nop
adc
mov
and
pop
in
xchg
fdivs
cmp
and
cmpsl
mov
cli
ljmp
scas
movsl
stos
jns
xor
aaa
dec
cli
mov
js
pop
shll
pop
adc
mov
xchg
mov
popf
sbb
pop
lret
test
mov
push
fidivs
sarl
push
push
push
dec
inc
mov
fs
push
out
fsts
outsb
ficoml
xor
imul
add
sbb
mov
mov
lods
adc
rcrl
jb
popf
or
add
adcb
pop
dec
mov
dec
jecxz
jl
sub
repz
gs
push
pop
mov
notb
dec
pop
and
loop
fldcw
mov
jnp
add
fs
pop
push
xchg
dec
stc
sbb
test
shrl
add
mov
repnz
pop
loopne
test
inc
popf
ljmp
push
xchg
mov
fcomps
sti
mov
aam
pop
ret
scas
addl
or
int3
xchg
mov
cld
add
inc
mov
clc
lahf
cltd
sarb
mov
popa
je
ss
jne
arpl
ja
addl
adc
push
mov
mov
cmpsb
ficoml
in
mov
mov
push
xchg
shll
fisttpl
mov
xor
mov
mov
loope
push
or
lcall
mov
jmp
sbb
cmc
inc
push
dec
jae
push
ret
ret
mov
popf
mov
cs
jne
jmp
cmpsb
icebp
cli
iret
aas
aas
adc
mov
in
and
adc
or
dec
xor
cmp
popa
repz
pop
xor
imul
dec
lahf
mov
adc
lret
stc
mov
loop
stos
mov
mov
add
outsl
xchg
sti
dec
inc
repz
lea
cwtl
inc
mov
xchg
test
or
or
push
add
orl
jmp
mov
mov
lret
xor
inc
mov
bound
repnz
test
cmp
xor
sbb
mov
jl
leave
mov
inc
pop
fisttps
in
sbbl
push
lods
lret
jmp
ja
and
mov
aaa
mov
push
std
push
pop
pop
shl
mov
je
jmp
bound
cmp
jno
jne
jbe
jns
mov
pop
nop
xchg
dec
fdivl
sub
inc
push
in
mov
jne
fstps
lea
lds
in
xchg
imul
rcll
sub
test
mov
pusha
pop
sub
dec
jo
xor
rclb
dec
push
jnp
pop
adc
jle
adc
ror
mov
inc
adc
jo
dec
jecxz
sub
cmp
add
or
in
pop
test
int3
cmp
inc
aam
loop
iret
mov
xchg
movsb
fidivrs
dec
sahf
pop
adc
cmpsb
mov
lcall
cld
push
das
pop
mov
test
aaa
xor
aad
xchg
aas
js
mov
mov
invd
es
dec
mov
das
in
push
cli
cmpsl
dec
pop
and
orb
mov
mov
lahf
popl
ljmp
push
xor
xor
mov
jge
push
jle
loopne
cli
add
leave
jbe
clc
popa
inc
rcrl
cmp
xchg
xor
cltd
sub
mov
or
nop
add
ret
test
mov
dec
and
mov
pusha
call
shll
notb
out
jae
lret
sub
movups
std
pop
repz
sahf
jb
cli
ss
dec
lahf
inc
clc
test
push
dec
mov
loopne
xor
xchg
sbb
jo
ss
mov
loope
jle
in
sbb
or
jo
push
movsl
push
stos
add
cli
xor
push
dec
mov
cs
push
cmp
inc
aaa
xor
mov
mov
fwait
pop
add
scas
imul
adc
dec
xchg
inc
mov
sbb
ret
fstl
xor
shl
in
mov
xchg
clc
in
addb
mov
jle
ret
jnp
xchg
aad
mov
es
push
cwtl
lods
xor
pop
popf
hlt
add
hlt
data16
movsb
xchg
ret
add
mov
in
adc
arpl
xchg
inc
xchg
pop
jecxz
or
jmp
pop
int
imulb
arpl
or
ret
setne
sti
cmp
iret
add
sti
bound
in
movsb
and
jns
test
sbb
cmp
insl
movsl
lods
mov
std
cmp
sub
inc
pop
lods
mov
sbb
fcmovnbe
out
push
pusha
jg
pop
inc
jecxz
loopne
push
aaa
xchg
sbb
dec
sar
repz
mov
sub
popa
or
int3
cmp
xchg
aaa
sub
add
sbb
sub
or
add
jl
popf
mov
or
push
adc
adc
xchg
sbb
es
imul
dec
adc
push
insl
int
push
rorl
aad
dec
xorb
inc
stc
cs
cs
mov
xorl
push
leave
loop
mov
inc
jmp
mov
lahf
pop
inc
jbe
inc
aad
icebp
fadds
push
into
sbb
mov
arpl
enter
int
add
clc
popa
repnz
and
xor
mov
cmp
pop
cmp
test
add
pop
jg
mov
mov
add
jae
inc
sahf
pop
push
int3
jl
sbb
push
imul
cmp
jb
jecxz
push
or
jecxz
jae
roll
inc
cmp
iret
mov
enter
sbb
lods
loopne
add
in
mov
jp
enter
shl
fdivrp
scas
jmp
std
pop
pop
jno
jge
dec
push
popa
sar
mov
rcl
cld
and
loopne
shl
bound
sub
xchg
xchg
push
insb
sahf
xchg
ja
jae
stos
ret
push
movsb
mov
sti
ja
out
mov
or
lret
xchg
in
or
xor
jecxz
nop
cli
and
loope
fnstenv
mov
or
xchg
ljmp
das
and
mov
aaa
cwtl
gs
and
add
loope
cmpsb
clc
adc
sub
fnstcw
cmp
jo
call
pop
fsubrs
std
testb
push
mov
scas
adc
and
and
cltd
sub
adc
inc
mov
sub
mov
adc
dec
adc
jns
fimuls
sub
dec
mov
stos
ret
in
scas
dec
mov
pop
sub
jmp
add
insb
aaa
cmp
jnp
push
mov
inc
test
repz
fdivl
ljmp
fwait
cltd
jne
push
shlb
loop
sbb
add
sahf
stos
adc
pop
mov
movsb
test
outsl
cmp
jo
fldl2t
sti
cmpsb
sub
and
lret
cwtl
arpl
incb
addr16
lcall
aas
adc
cmp
push
pop
mov
mov
xchg
or
jns
shll
sahf
xchg
cltd
insb
ja
jae
mov
stc
jg
push
adcb
jge
jle
inc
push
add
aaa
ficompl
les
shlb
inc
jnp
ljmp
push
push
xchg
out
lods
fdivrp
testl
clc
inc
outsl
arpl
lods
jno
leave
loop
xor
and
ljmp
mov
out
scas
cltd
bound
xchg
data16
bound
add
mov
or
aam
xor
in
data16
inc
pop
sbb
mov
ljmp
fdivs
aas
pop
mov
pop
xor
stos
cmc
push
xchg
cwtl
mov
xor
inc
loop
frstor
cmp
jnp
mov
es
test
dec
sarb
in
adc
lds
fs
lret
lcall
lds
rol
fidivl
jmp
repz
push
mov
int
xor
fmuls
lock
bound
jmp
push
push
fldcw
cmp
cmp
xchg
dec
aas
ret
jmp
sub
rcr
pop
mov
lret
push
push
int
sarb
dec
sbb
std
aas
pop
jbe
adc
bound
add
insl
cmpsl
push
movsb
cmp
mov
jg
mov
pop
shll
test
fwait
push
pusha
and
cld
testl
jns
inc
mov
js
add
int3
js
sub
cmpsb
push
or
sub
cs
adc
xor
mov
sbb
pushf
insl
pop
sub
int
jo
inc
loop
pushf
jo
out
adc
xchg
idivl
mov
test
test
lea
ss
adc
mov
rcl
xchg
sub
out
mov
and
call
xor
push
cmc
inc
dec
mov
push
push
rcrb
and
mov
jne
mov
cmp
inc
cmp
mov
lods
and
mov
mov
lods
xor
pop
repnz
xchg
jae
lods
repnz
dec
je
adc
mov
jg
inc
fnstenv
mov
aas
xchg
jmp
scas
ret
mov
je
les
mov
sub
pop
mov
push
out
jecxz
and
in
ret
pop
orl
cltd
adc
lret
or
mov
or
jmp
pop
fwait
sub
pop
xchg
xor
lods
mov
ja
push
xlat
bnd
testb
sbb
jg,pn
pushf
fstpt
imul
sbb
sbb
or
adc
inc
stos
dec
addr16
adcb
cmp
sub
dec
arpl
inc
push
or
movb
pop
jmp
mov
int
push
mov
popf
adc
test
sbb
int
xchg
ficoms
fsubl
rcrb
lret
aas
jnp
int
outsl
sbb
mov
xor
imulb
xor
mov
cli
adcb
lahf
cmp
fidivl
scas
xor
dec
xor
jle
mov
xchg
popf
inc
test
mov
and
xlat
arpl
inc
pop
fwait
daa
sub
adcb
rcrl
xor
add
cs
roll
cs
inc
and
mov
cwtl
add
cwtl
into
mov
push
sahf
pop
mov
sub
test
xchg
mov
mov
jo
je
mov
jp
add
mov
ret
nop
enter
jecxz
mov
mov
ret
in
aad
push
int
mov
adc
xor
rcrb
adc
dec
pop
add
mov
cmp
jns
mov
into
fwait
mov
mov
out
addr16
add
sbb
mov
repnz
mov
push
imul
mov
push
mov
add
mov
mov
push
repnz
push
mov
lods
mov
add
push
push
insl
sti
jno
or
xor
inc
xchg
cmp
std
pop
lahf
and
cmp
dec
jae
sub
inc
mov
or
jne
jmp
mov
or
xchg
mov
sbb
movsb
mov
fildl
xchg
std
push
imul
xlat
push
push
roll
xor
pop
outsl
sbb
ja
dec
rcr
cld
pop
cmp
out
mov
fcomps
or
into
sti
mov
cmpsl
out
subl
out
xor
push
mov
xchg
fstl
pop
sbb
and
rolb
fisttps
cwtl
xchg
mov
flds
sbb
mov
js
call
clc
je
adc
add
aad
idivl
repz
lret
addr16
lcall
aas
adc
mov
mov
xchg
lahf
je
scas
push
fst
lods
ljmp
sub
mov
loopne
lret
mov
ret
pop
out
pop
in
stos
mov
inc
jl
popf
fisubrl
inc
sbbb
cmp
jns
jmp
adc
cmp
jns
ss
icebp
jae
pop
mov
test
pop
cmp
aaa
mov
pop
ficoms
jbe
repnz
cwtl
aas
clc
aas
rolb
xor
dec
push
xchg
flds
insb
lret
jbe
cmpsb
outsb
gs
inc
sbb
jl
lds
inc
sbb
shrl
addr16
dec
out
ret
outsb
dec
push
adc
dec
xchg
cmp
dec
test
add
push
cld
mov
xchg
add
ret
add
cmpsb
add
test
xchg
sbb
jns,pn
mov
xchg
movsl
pushf
inc
je
xor
mov
mov
sbb
loope
sbb
add
cld
or
stos
lahf
xor
adc
adcb
push
bswap
out
outsb
lret
pop
push
jge
das
add
sbb
fisttpll
push
dec
mov
or
mov
jmp
mov
sub
icebp
mov
dec
jg
test
test
ret
xchg
adcl
mov
scas
ret
fs
outsb
test
jb
jo
adc
cmp
inc
xor
movsl
mov
rcrb
jns
or
sti
fs
or
or
xor
or
xor
sbb
call
xchg
in
mov
cmpsl
fisubrl
jle
or
sub
cs
les
ret
inc
fcomi
dec
mov
mov
scas
js
cmpb
fsubrl
xchg
test
lret
dec
dec
pusha
adc
in
adc
adc
bound
or
mov
xchg
pop
mov
mov
pop
adc
nop
xor
rcrb
mov
and
push
mov
lods
popa
mov
insl
add
add
sbb
dec
test
jp
push
into
fdivl
pushf
ljmp
ds
out
rcr
scas
rcr
push
push
push
pop
or
fidivrl
pushf
fst
mov
xlat
in
xor
mov
inc
push
fdivrp
mov
push
cmp
pop
fsts
orb
cmp
add
sahf
subps
ljmp
and
movsl
pop
std
pop
push
xor
test
jg
xor
mov
jecxz
fcoms
clc
xchg
inc
push
cli
xchg
mov
adc
add
xchg
divb
and
xchg
dec
jnp
mov
push
lret
inc
xlat
inc
xor
lock
or
cmp
out
jns
jle
adc
test
pop
hlt
inc
mov
mov
pop
pop
xchg
add
push
mov
mov
mov
sti
adc
adc
mov
sub
bound
pop
scas
and
stc
adc
out
pop
push
and
ljmp
mov
out
push
mov
adc
cwtl
cmp
push
popf
xor
and
mov
aad
pop
xor
ret
scas
outsb
pop
or
xchg
pop
outsb
leave
icebp
inc
outsl
xchg
movsb
push
in
jns
les
in
xchg
and
push
adc
xor
xchg
jle
xor
cmp
sub
dec
sbb
into
rcll
mov
add
pop
lret
test
test
mov
mov
cmp
xchg
clc
pop
imul
lods
not
mov
lods
mov
lret
cmc
or
xor
sarl
inc
clc
adc
inc
mov
push
lret
adc
fcompl
inc
mov
nop
mov
ja
pop
push
and
imul
xor
sarb
fildl
adcb
dec
iret
mov
daa
addr16
aas
or
lock
mov
and
movsb
inc
jb
sub
inc
and
cld
mov
cmp
pop
pcmpgtb
fstps
lea
sbb
rorl
mov
aaa
iret
addr16
cmpsb
idivb
flds
dec
out
cmpsl
fdiv
mov
call
push
or
mov
dec
adc
mov
sti
pop
pop
lret
jmp
adc
aad
and
shlb
out
shlb
aaa
mov
push
add
mov
or
fcoms
jle
or
jnp
jecxz
arpl
sub
mov
cli
lods
or
push
out
sub
or
pop
xchg
pusha
idivb
mov
stos
dec
lret
and
sub
jo
lds
pop
push
push
adc
jmp
pop
leave
pop
popl
sub
jmp
or
sarl
push
pop
out
rcrl
mov
and
ja
bnd
push
add
iret
lds
pop
adc
xlat
jbe
fidivs
inc
jg
les
jnp
ds
fwait
ja
push
push
or
testl
mov
cli
out
bnd
cmpsl
xor
and
mov
or
movsb
mov
xor
ret
inc
mov
mov
imul
lret
cmp
push
jp
xor
mov
inc
cmp
sub
aas
insb
data16
jecxz
jae
rcll
repnz
and
sti
imul
out
cmpsb
pushf
in
inc
in
je
js
loopne
sbbl
sahf
sbb
ficomps
xor
push
mov
int3
fstl
sub
pop
in
jecxz
test
jecxz
cmp
add
pop
jle
cmp
xchg
ja
test
fisubrl
insb
decl
cmp
fisubl
sub
inc
out
orb
movsb
out
aam
sub
shlb
pop
das
mov
push
jno
lret
mov
sbb
jnp
repz
in
xorb
jns
popf
pop
mov
push
imul
pop
sbb
and
ss
or
xchg
sbb
and
insb
adc
in
dec
mov
pop
xor
into
cmp
das
mov
mul
add
jp
test
ret
call
shr
test
cmpsl
inc
test
bound
cwtl
sarb
mov
or
into
xor
ret
outsb
dec
roll
call
out
sub
imul
shrb
jns
or
repnz
jg
adc
into
test
scas
lods
aaa
shr
mov
add
mov
push
adc
add
fsubrs
cmp
stc
push
shll
stos
test
ja
mov
das
cmp
jne
lret
in
and
jp
stos
cmp
lods
or
xchg
jle
xchg
cmp
pop
bswap
or
jecxz
ljmp
cmp
push
push
sub
loope
loope
repz
xor
in
std
add
lock
inc
xchg
mov
mov
cld
fnstenv
mov
lahf
xor
insl
mov
sub
cwtl
mov
testb
xor
or
jmp
mov
dec
adc
xchg
fsts
mov
pushl
pop
dec
cmp
sti
cmpsl
sub
mov
imul
jle
int3
je
addl
dec
mov
stos
dec
into
push
push
pop
cmc
cli
out
into
roll
ret
mov
lret
out
mov
dec
cmpb
cmpl
cld
ret
in
or
cmc
mov
pop
jge
dec
sbb
call
dec
push
xchg
data16
xchg
or
push
test
mov
lret
test
cmpps
ss
xlat
sti
pushf
xor
jne
cmc
jb
in
sbb
js
inc
das
ret
push
fisubs
push
push
dec
cmp
sbb
inc
jge
mov
mov
mov
mov
inc
aad
iret
dec
push
ret
xor
jo
jns
dec
stc
jae
mov
mov
rcrb
in
pop
mov
in
mul
pop
inc
push
loop
aam
clc
frstor
pop
pop
mov
in
adc
mov
inc
std
lret
ret
push
mov
hlt
xchg
es
loope
add
pop
adc
xor
adc
imul
lcall
out
cli
mov
ljmp
arpl
sbb
les
leave
aaa
jbe
cs
loopne
add
lds
clc
int3
mov
pop
and
ja
cmp
dec
icebp
nop
movsb
test
pop
dec
cmp
jmp
fnstsw
mov
in
mov
and
int
shrb
jne
movl
out
lea
pop
xchg
pop
sbb
and
jne
fstl
popl
jg
sbbb
ret
decb
push
rdmsr
in
and
xchg
xchg
test
jecxz
sbb
test
add
add
xchg
xchg
out
sub
dec
adc
sub
les
sbbl
faddl
dec
cwtl
lea
rclb
sti
mov
jae
sub
stos
jecxz
sbb
pop
mov
rcrb
sbb
jno
ret
mov
int
out
or
out
getsec
dec
adc
outsl
lret
push
mov
xor
and
jge
lar
xor
jbe
loop
adc
out
jb
add
mov
dec
lcall
push
iret
adc
fs
mov
sbb
jne
cmpsl
into
stos
gs
shl
add
mov
xchg
fsubs
mov
sbb
sub
scas
adc
and
data16
or
in
mov
scas
xchg
mov
adc
jb
stc
jmp
sbb
mov
mov
xchg
push
jnp
and
fildl
dec
mov
push
ficomps
popf
inc
test
sbb
mov
jo
insl
pop
xchg
out
sbb
incl
lret
lods
mov
xchg
popf
aad
sbb
lret
mov
xchg
loope
jge
int
ljmp
sbb
pop
and
out
int
pusha
daa
imul
xor
ror
movsl
movsb
adc
dec
lea
jno
push
xchg
adc
xchg
inc
hlt
push
mov
xchg
ret
dec
enter
cmp
add
sbb
test
mov
xchg
sahf
cmp
testl
scas
cmpsb
sub
push
icebp
scas
mov
sub
inc
les
add
mov
scas
cmpsl
xchg
cmp
js
pop
lea
mov
aam
inc
dec
pop
cwtl
push
xor
add
loope
pop
out
lock
ret
andl
movsb
std
mov
das
popf
icebp
ret
invd
sub
aas
fistpl
test
xchg
dec
dec
jge
pop
stos
lret
mov
repz
xor
jae
sahf
mov
and
dec
xchg
movsl
cmp
jge
sub
adc
lahf
jle
xor
jle
shr
inc
and
adc
push
lret
pop
fldt
pop
or
or
fs
pop
push
sbb
add
mov
pop
shll
add
sarb
pushf
fstps
jge
repnz
mov
aad
sbb
popa
pop
test
jle
or
inc
lahf
enter
psubsb
xchg
pop
jp
dec
rcrb
xchg
dec
test
shr
mov
pop
cmp
pop
push
pop
sub
outsb
push
cmp
jle
subl
jmp
inc
push
sarl
sub
mov
sub
sbb
cmpsl
dec
or
mov
mov
mov
cmp
jge
jo
and
and
xor
jne
pusha
std
jbe
popf
les
sbb
jae
pop
clc
clc
je
shrb
ljmp
sti
mov
test
out
faddl
fs
mov
xchg
std
inc
ja
xor
pop
jbe
mov
or
inc
add
cld
or
push
pop
sbb
sbb
cmp
dec
jb
xor
dec
jne
dec
adc
mov
and
test
pop
sbb
xor
cmpsb
data16
sbb
lret
stos
addr16
in
inc
jno
inc
and
subl
or
jae
cmp
pop
cmp
xchg
neg
sub
outsl
fsubrl
cmp
and
xchg
xchg
mov
in
adc
addb
push
ret
push
xchg
push
movsb
jns
mov
xlat
mov
inc
test
dec
sbb
ret
ja
pop
or
lret
ja
out
inc
fisubrs
mov
push
insb
stos
dec
inc
in
hlt
outsl
pop
jb
loope
add
int
push
mov
inc
arpl
push
outsb
jbe
sbb
inc
daa
cmp
pop
out
pop
cmp
pop
xchg
sahf
fstpl
mov
xor
pop
bound
les
dec
dec
test
sahf
push
dec
clc
jns
dec
pop
int3
out
lret
insl
mov
jle
ds
push
jecxz
ljmp
mov
test
pop
in
sarl
adc
pop
out
insl
sbb
mov
sbb
sbb
xor
mov
mov
data16
push
das
or
adc
add
arpl
mov
loope
adc
xor
or
das
call
mov
mov
movsl
inc
cmp
int
xor
push
insb
aaa
and
ds
jmp
aam
xor
xorl
push
add
pop
xor
pusha
in
sbb
je
pop
jne
sbb
xchg
add
sbb
mov
jge
adc
call
jae
lcall
andl
mov
repnz
mov
pop
jno
add
int
pop
jbe
test
sti
insl
jl
loopne
sbb
jno
cld
sub
cmp
lods
scas
aaa
pop
mov
outsb
mov
call
divl
sbb
cmp
out
stc
in
mov
sub
pop
and
lret
sbb
pop
stos
add
or
inc
adc
xchg
nop
lahf
sahf
xor
push
cld
aas
or
rorl
movsl
xchg
inc
hlt
dec
and
dec
nop
not
pusha
cs
mov
aaa
out
aas
xor
jmp
mov
cltd
adc
andb
int3
lret
std
add
sub
cmpsb
jns
inc
rcrl
cmp
in
in
fldcw
jns
add
adc
adc
cmp
sti
repz
sbb
jne
sti
push
mov
jns
rcrl
push
dec
mov
xchg
mov
mov
xchg
pushf
inc
push
sahf
jno
jmp
cwtl
jnp
imul
les
mov
in
pushf
push
cmp
xchg
leave
pop
jbe
dec
shll
negb
dec
or
mov
xor
pop
inc
fcmove
fucomip
call
rcl
idivl
jge
hlt
fmull
push
or
xchg
movsw
repz
cs
push
mov
push
adc
fists
filds
jno
int
push
sarb
aad
push
mov
adc
lds
jmp
dec
cmpsl
mov
xor
dec
cmpsl
les
xor
mov
fmuls
push
repnz
popf
into
not
xchg
shrb
jnp
sub
lods
push
in
aas
lods
movsb
mov
mov
popl
iret
push
adc
movsb
jo
data16
push
dec
sub
repz
mov
out
scas
pushf
pop
and
inc
adc
and
xchg
mov
pop
push
sub
xchg
mov
mov
jle
out
adc
idivb
and
hlt
push
les
pop
add
dec
adc
jnp
cwtl
sub
mov
push
dec
xchg
or
lret
sub
xchg
enter
sub
inc
cltd
mov
dec
cmp
rcr
dec
dec
xchg
popa
adc
add
loopne
shlb
iret
into
xor
pop
push
or
mov
notb
arpl
xchg
and
jmp
sub
outsb
add
sub
dec
fstl
mov
mov
scas
or
cmp
clc
jnp
mov
sub
imul
xor
xor
ss
push
insb
fimull
xor
and
test
jae
sub
and
pop
or
xchg
jb
das
pop
add
cmpsl
and
jno
popa
fwait
mov
xchg
sub
aaa
adc
es
adc
pop
mov
js
add
jp
aaa
or
adc
xchg
dec
jmp
rclb
inc
in
mov
shrl
fwait
shlb
imul
cld
mov
je
xor
cmp
outsl
jo
push
lahf
mov
rclb
pop
push
in
xor
pop
xchg
mov
push
cld
adc
jno
dec
fsubl
xor
mov
sbb
ja
bnd
dec
and
fdivs
push
out
inc
lock
iret
pop
gs
pushf
int3
xchg
jno
lret
adc
pusha
cmpsl
push
mov
xchg
sahf
addl
sti
out
popa
cld
fdivr
mov
cmc
dec
jnp
or
inc
add
ja
jmp
xorb
rcr
mov
scas
or
lods
cltd
pop
mov
test
sub
imul
mov
inc
cmpsb
jnp
andl
lahf
es
fdiv
popf
addr16
mov
int3
popf
std
add
cmp
mov
test
shlb
cmp
dec
jl
and
sbb
ja
stc
lods
roll
mov
pop
cld
add
cmp
pop
xchg
and
pop
in
dec
inc
jns
push
pop
fsub
sbbb
adc
sbb
sbb
xor
in
ret
cmp
xchg
lcall
mov
jl
std
push
xlat
dec
jo
xchg
outsl
jle
lods
aaa
mov
dec
daa
enter
lea
les
das
lods
adc
add
jp
loope
mov
pop
sbb
pop
mov
sub
lahf
dec
in
jle
iret
lret
xor
imul
dec
ljmp
adc
rcrb
movsb
into
xchg
inc
push
and
inc
mov
ljmp
mov
pop
fcomi
mov
jecxz
enter
out
mov
bound
cmovle
into
sbb
mov
lods
insl
push
push
dec
jmp
push
aas
xchg
xchg
lods
push
and
rclb
mov
sub
inc
repz
jne
inc
dec
or
xchg
dec
xor
jnp
mov
or
call
adc
adcl
repnz
xor
out
dec
mov
icebp
pop
cmp
xchg
out
or
inc
inc
add
shrl
sub
or
shr
inc
imul
mov
ficomps
leave
add
push
jne
std
pop
xchg
cltd
push
dec
das
repz
lods
enter
jmp
push
daa
cltd
cmp
int3
dec
lods
push
int
lret
mov
out
inc
push
shlb
cwtl
mov
dec
add
cmp
add
sbb
test
stos
mov
dec
ds
insb
rclb
lret
dec
and
out
lret
mov
mov
cmp
repz
xor
cmpl
sub
lods
pop
mov
aas
and
sar
lods
mov
xchg
xor
add
repnz
imull
jmp
adc
insb
ret
mov
mov
cmpsl
pop
nop
or
sub
and
mov
inc
es
ljmp
aam
inc
fiadds
jo
mov
stc
daa
mov
cli
jle
add
adc
les
outsb
xchg
testl
jp
andb
jecxz
push
daa
mov
popl
pop
sub
push
cmp
sbb
pop
fwait
enter
and
movsl
mov
jbe
push
mov
insl
shlb
pop
rclb
les
fisubl
push
inc
pop
cmp
popf
lahf
dec
jmp
jbe
je
popf
daa
pop
imul
push
xorl
lods
sub
jno
lret
pushf
fsubr
push
lret
es
cli
mov
cwtl
imul
dec
adc
cmpsl
mov
in
mov
das
out
mov
pop
jb
stos
mov
xchg
je
jp
adc
and
mov
clc
or
jae
cs
fldcw
aam
pop
mov
notb
cmp
push
or
jge
sub
icebp
xchg
cmpl
xlat
test
cli
xor
jl
sarl
rorb
cmp
stc
cmp
mov
adc
mov
and
push
push
pop
adc
and
pop
aad
cld
fistpl
cmpl
jg
adc
hlt
push
xor
and
pop
scas
lret
sti
je
aam
cmp
pop
mov
push
add
clc
pop
andb
jecxz
push
sahf
inc
mov
arpl
insl
frstor
push
imul
mov
pop
push
ljmp
sub
aam
ret
insl
jbe
dec
int
cmp
adc
in
xor
sbb
dec
pusha
adc
stc
repz
fsubrl
jge
push
in
pop
imul
xor
in
sbb
pushf
fnsave
inc
ret
xor
mov
enter
out
dec
fidivrl
cmc
and
cmp
mov
sbb
sahf
mov
cmp
mov
adc
pop
pop
movsb
mov
add
xchg
add
mov
mov
jmp
adc
xor
sahf
push
shlb
cltd
mov
jnp
adc
xchg
sub
push
fs
jnp
lret
cmp
jns
stos
mov
cmp
in
int
in
scas
loop
inc
dec
arpl
adc
sbb
hlt
jge
add
in
xlat
shl
fisttpl
cltd
xchg
jb
fildl
push
das
shl
mov
xlat
sbb
sarb
or
sub
lods
xor
xchg
out
pushf
loopne
stos
sbb
or
je
cmpsb
and
xchg
dec
aas
pop
enter
dec
mov
cmp
jp
std
lea
loope
popa
lock
mov
mov
push
loopne
jg
pusha
pop
sub
in
mov
xor
fcomps
cltd
stos
dec
cmp
mov
dec
mov
xchg
sub
jns
cwtl
push
fstpl
add
xchg
inc
push
push
scas
mov
mov
aaa
test
inc
aaa
mov
xchg
out
adc
jl
xor
into
add
xor
jno
lcall
je
mov
inc
inc
je
sub
xchg
xor
jnp
fimull
out
cmp
mov
test
fcmovne
leave
mov
jno
in
or
enter
adc
inc
mov
cwtl
hlt
es
mov
hlt
push
stc
jbe
jg
icebp
clc
push
mov
scas
cld
stos
mov
and
inc
mov
push
call
popf
sbb
sub
adc
xchg
bnd
dec
out
xchg
lret
lea
icebp
icebp
cmp
add
scas
mov
cmp
pop
cmpsb
jge
clc
sub
sbb
lret
adc
call
filds
mov
mov
add
jns
into
fs
mov
and
stc
and
xchg
out
rcr
movsl
insl
inc
ret
push
fwait
outsb
in
dec
push
lret
xor
hlt
addl
clc
dec
inc
repnz
int3
lods
cmp
inc
je
pop
fldl
sahf
fmuls
js
das
imul
inc
and
cmp
jp
addr16
pop
mov
es
jge
mov
insb
sub
and
fstps
pop
and
iret
dec
hlt
fwait
push
jp
scas
pop
sub
fbld
xchg
popa
rol
imul
sub
pop
mov
and
inc
mov
mov
jp
adc
push
iret
scas
cmpl
adc
mov
ljmp
or
lds
dec
aam
mov
hlt
std
xchg
and
shl
mov
test
mov
mov
dec
cmc
repnz
pushf
sub
es
inc
rcll
push
ss
cmp
and
jbe
xlat
imul
xor
arpl
call
leave
inc
enter
xor
mov
int
mov
cmp
pop
push
out
cmp
cmp
add
out
cmp
inc
ss
sub
test
dec
lock
jbe
mov
cmp
inc
or
jb
fildll
and
test
lret
mov
cld
insl
cmp
mov
rcll
insb
jle
aam
insb
out
test
jecxz
jmp
add
movsb
add
das
mov
push
mov
ja
rcl
data16
into
std
icebp
test
out
mov
pop
jge
leave
in
xchg
test
mov
in
fidivl
inc
fisttpl
inc
scas
gs
jae
xchg
popa
xchg
mov
push
sub
cli
push
out
sub
mov
pusha
add
in
lret
arpl
jmp
mov
in
and
cmp
test
outsb
jno
mov
in
bound
hlt
jb
xchg
jg
mov
jecxz
movsl
outsl
push
xchg
nop
mov
inc
cmp
jecxz
sti
cwtl
xchg
jae
mov
pusha
das
push
inc
movl
jns
je
fisttpl
jmp
out
mov
adc
mov
mov
lods
jae
sbb
cmc
jb
add
add
scas
fsubrs
adc
or
mov
push
ret
push
jae
stc
mov
xor
pushf
in
out
test
shll
repnz
xor
push
roll
loope
jb
cmp
inc
sbb
inc
fnstsw
cmpsb
scas
andb
in
mov
mov
movsl
lock
or
inc
std
inc
or
mov
lea
lods
inc
pop
clc
daa
mov
test
out
inc
fwait
fwait
dec
jnp
jp
data16
jg
jbe
jl
or
inc
inc
mov
out
jmp
ljmp
add
pop
and
adc
in
mov
adc
sub
pushl
shl
push
insl
dec
cltd
cmp
int3
imul
xchg
cs
ljmp
push
cmpsb
cmp
in
mov
aam
cmpl
xor
pop
lods
add
pushf
imul
xor
insb
xchg
arpl
jmp
outsb
std
mov
inc
insl
hlt
push
jecxz
cmp
adc
xor
lds
add
lods
lret
popa
mov
mov
mov
fadds
aas
mov
adc
and
pop
jnp
push
push
out
push
jnp
int3
sarl
imul
adc
in
jbe
inc
add
ja
sub
xchg
movsb
adc
jmp
lea
mov
inc
pop
les
xchg
push
sub
fildll
dec
es
je
mov
das
adc
dec
mov
add
outsl
adcb
mov
push
mov
jb
xchg
movb
dec
cwtl
xchg
loope
jo
xlat
dec
lahf
jmp
push
popf
hlt
ljmp
shll
xchg
int3
pop
popf
stos
lret
xchg
shrl
pop
mov
xchg
and
leave
in
pop
cmp
ja
xchg
movsl
out
test
mov
dec
pushf
inc
xchg
inc
fucomip
cmpsl
aad
mov
out
and
mov
ficomps
arpl
sub
push
jmp
pusha
mov
call
aam
add
mov
mulb
mov
push
mov
or
xlat
testl
adc
jp
dec
ret
push
jecxz
mov
out
mov
cmc
cs
lods
je
movsl
adc
adc
sub
sti
js
or
and
pop
nop
sbb
lock
sbb
jmp
mov
mov
inc
popl
cmp
in
mov
rcll
insl
jae
sbb
add
js
iret
dec
lret
push
push
add
push
sti
jae
mov
jae
adc
testl
out
cmp
test
imul
jne
mov
jg
inc
push
or
xchg
fildl
push
pop
cmp
clc
dec
lahf
test
movsl
xchg
mov
js
stc
popa
les
ret
inc
lock
ja
sub
fisubs
es
incb
sbb
cmp
mov
push
hlt
je
lret
cmovle
add
orl
popf
cmp
ss
lret
fnsave
add
sbb
loope
sub
and
repnz
push
sti
xor
mov
mov
adc
out
or
ret
test
test
or
inc
push
mov
cmc
aam
lret
cmc
test
mov
cld
lock
dec
cs
sti
push
gs
and
cld
mov
push
mov
sbb
cld
rorb
sub
data16
mov
imul
ss
aad
and
lret
pop
and
insl
mov
cmp
fdivs
shrb
jno
and
lds
jns
xor
pop
sbb
movsb
ret
addr16
icebp
jb
adc
es
lret
test
lods
mov
pop
xor
rcrl
aas
popa
pop
stc
xchg
jle
fadds
xor
lods
shll
dec
fst
dec
adc
sbb
sbb
enter
inc
outsl
jno
shrb
inc
xor
mov
cwtl
jae
and
add
cmp
mov
or
jmp
or
test
test
dec
sbb
dec
pushf
test
push
dec
int
xchg
fidivs
xor
xlat
add
js
add
divb
inc
add
shl
jb
testb
dec
xor
sub
stos
mov
add
jp
jmp
fistps
pusha
xchg
or
or
popf
fadd
ljmp
cmp
or
xor
rorl
jae
insl
add
int3
sub
rolb
adc
loopne
jecxz
std
sbb
popf
sahf
cmp
and
shl
test
lods
mov
mov
andl
jns
add
xchg
mov
mov
push
cmpb
jnp
cmp
cmpsl
cmp
stc
mov
ret
or
push
cmp
imul
mov
and
dec
sbb
mov
adc
mov
xchg
sub
popf
mov
test
ljmp
jp
mov
cmp
xchg
lods
jnp
pop
push
inc
sbb
mov
pop
xchg
mov
xchg
pop
out
icebp
sub
je
cmp
pop
daa
xor
mov
mov
ret
aaa
or
lods
iret
pop
and
insb
into
or
sub
dec
subb
insl
cmpl
dec
imul
inc
in
enter
pop
gs
lods
faddl
daa
lea
out
add
add
pop
cltd
cmp
jne
inc
fstp
pop
mov
mov
imul
sbb
fs
movsb
cli
xlat
xchg
enter
jo
and
add
nop
dec
xlat
daa
ljmp
loope
mov
jnp
add
repnz
insl
sub
mov
jmp
or
pop
or
leave
inc
and
jmp
sbb
mov
pop
sbb
icebp
cmc
and
cmp
andb
mov
adc
sub
pop
add
pop
stos
dec
test
inc
cmc
or
pop
mov
lods
scas
add
add
mov
adc
movsb
in
dec
in
xchg
sbb
into
dec
scas
sub
jp
enter
aas
inc
outsl
rcrl
data16
lahf
std
movsb
mov
jg
mov
ret
cltd
cmpl
push
loope
in
inc
pop
test
aas
push
jns
jne
dec
adc
cltd
mov
js
lret
push
insb
dec
leave
pop
add
pop
fidivrs
mov
movsb
es
cld
sahf
data16
push
call
mov
in
mov
add
rorb
popf
adc
add
sub
push
pop
mov
cwtl
and
lret
mov
sbb
mov
ljmp
shll
and
cwtl
gs
dec
inc
add
popa
jge
cli
cmp
push
in
out
cmp
ficompl
inc
div
jge
test
cwtl
shll
popa
hlt
ret
movsb
mov
in
push
sub
push
gs
xchg
imull
dec
push
inc
ficoml
xchg
jmp
ds
push
inc
dec
iret
fdivrs
mov
cs
stos
ja
pop
dec
mov
sub
ret
fsubl
sub
ss
inc
cmp
push
aaa
mov
adc
and
enter
push
test
fisttpll
or
fistps
cli
cmc
fbld
pop
sbb
dec
insl
adc
clc
mov
jge
fnstcw
xchg
dec
rcr
jae,pt
push
inc
ja
mov
dec
fimull
in
aaa
add
and
push
cld
xor
daa
addr16
inc
dec
std
cmp
rorb
data16
pop
mov
xchg
sbb
jae
out
gs
nop
sub
stos
fisubs
popa
insb
movl
scas
loopne
mov
push
loope
adc
dec
lds
loope
aam
sahf
das
enter
repz
jne
mov
pop
xchg
in
or
or
fldt
cli
adc
or
ss
fcmove
push
fsts
fs
xchg
jbe
cs
push
xor
adc
daa
repnz
jno
mov
les
mov
add
xor
add
jp
push
jae
sbb
loope
hlt
lea
jbe
push
mov
sti
fldlg2
push
cmp
xchg
movsb
lret
mov
inc
rcl
aam
dec
and
xor
pushf
lcall
adc
xor
dec
mov
lcall
xlat
outsb
fyl2xp1
jle
int3
or
cmp
fidivs
aam
insb
push
int3
loop
jge
mov
std
lcall
lods
dec
inc
incl
lcall
adc
leave
or
lds
adcl
push
inc
pusha
stos
dec
mov
dec
push
imul
push
mov
or
repnz
shlb
rolb
add
jmp
outsl
in
sbb
adc
cltd
jg
xor
outsl
push
ret
mov
dec
imul
in
mov
enter
repz
fnstsw
lcall
outsl
leave
pusha
les
adc
out
inc
add
sub
sarb
cmp
hlt
mov
pop
mov
xchg
jmp
ljmp
mov
add
and
ret
push
imul
push
xchg
dec
stc
inc
mov
outsl
lahf
or
out
push
push
pop
inc
xor
xor
push
xchg
dec
shll
xchg
inc
add
ljmp
fsubs
or
dec
xchg
mov
loop
pop
add
push
mov
cmpl
sub
scas
in
xchg
fnsave
je
jno
in
cmp
inc
mov
outsb
loop
xchg
mov
inc
fwait
aaa
mov
push
xchg
push
mov
mov
adc
jo
jp
push
leave
stos
mov
dec
xor
ret
dec
mov
fwait
lcall
xor
fwait
in
imul
mov
in
cmp
scas
mov
std
sbb
xchg
pop
dec
inc
add
enter
inc
sahf
jp
fs
pop
dec
jb
nop
in
lcall
dec
dec
adc
push
dec
bound
sub
sub
adc
cmp
and
push
cmp
push
out
sub
iret
dec
cwtl
push
pop
iret
bound
sbb
xor
xorl
cmp
nop
mov
pop
loopne
rorl
je
test
ljmp
sbb
add
pop
int
gs
mov
fcmovnb
push
sbbl
les
lods
js
icebp
sbb
jl
pop
push
test
cmp
push
inc
test
lcall
test
xchg
sub
cmp
gs
test
fisttpll
ss
popf
add
in
fs
xchg
inc
add
out
adc
pop
mov
inc
sbb
out
add
fwait
das
inc
test
mov
mov
or
in
nop
or
jg
xchg
scas
mov
shlb
add
xorb
nop
jo
addl
mov
push
push
adcb
xchg
mov
sbb
mov
call
push
ret
dec
leave
popa
push
in
pop
iret
mov
dec
loopne
pop
jbe
pop
fadd
std
push
mov
add
imul
add
into
pop
cld
xchg
sub
cmp
out
xchg
dec
mov
dec
leave
loope
xchg
push
shll
xchg
add
popf
adc
pop
movsb
sbb
fnstsw
sub
insb
fs
mov
lret
push
mov
dec
pusha
pop
xorb
sbb
xor
mul
sub
cmp
sub
push
cmpsl
movsb
jns
jne
sub
dec
iret
mov
cltd
loop
fstps
out
repz
mov
cs
sbbb
decb
out
cmp
int
xor
shrl
xor
not
dec
inc
xchg
in
fwait
push
add
lcall
movsl
test
popa
add
fs
cmp
pop
or
sti
mov
out
push
pushf
in
jnp
xor
dec
inc
cmpsb
scas
fs
sub
pop
insl
inc
add
nop
inc
fldcw
test
add
lds
xchg
xlat
mov
adc
ja
mov
mov
aaa
pushf
sti
adc
ret
outsb
add
and
in
inc
in
add
pop
js
pusha
call
push
sub
sbb
adc
movntq
out
jle
call
adc
shll
and
push
dec
jne
divb
add
push
inc
notb
xlat
insb
sub
cmpsl
sbb
jl
sub
roll
nop
cmpsl
rcrl
mov
lods
pop
pop
lds
icebp
dec
sbb
cs
testl
mov
test
sbb
or
loop
lock
push
add
outsb
cs
ror
aaa
push
hlt
pop
sbb
inc
loope
enter
add
jnp
fs
sbb
cmp
mov
imul
fs
mov
xchg
dec
imul
fwait
xorb
xlat
cmp
shrb
push
pop
mov
pop
mov
gs
xor
sti
daa
xchg
rclb
sti
push
pop
fisubrl
adc
mov
push
jp
adc
adc
jno
into
stc
mov
ja
xchg
pop
test
inc
das
ljmp
adcb
cmp
shrl
lods
mov
daa
pusha
ss
js
lods
sbb
aam
enter
pushf
xchg
sub
lahf
jge
mov
dec
mov
add
es
ss
dec
cmp
cs
adc
adc
add
ds
sub
imul
cmp
sbb
sub
lods
push
cmpsl
scas
push
movsb
pusha
lret
xchg
adc
in
popa
inc
mov
jecxz
or
in
clc
mov
je
fnsave
aas
daa
xor
push
nop
push
ds
pop
or
iret
adc
addb
mov
cltd
or
jecxz
ret
jp
insb
gs
lods
xchg
sarl
cmp
iret
gs
adc
mov
xchg
into
push
mov
mov
aas
sbb
out
mov
loopne
fidivl
dec
repz
js
jmp
push
cld
shlb
sahf
jg
xor
insl
lahf
dec
cwtl
sbb
lock
sub
rclb
jns
ret
pop
xchg
dec
pop
push
push
repz
enter
jo
add
loope
test
sbb
dec
mov
pop
cld
inc
out
cmpsl
aaa
scas
pop
cmp
jno
push
hlt
shll
cld
mov
xchg
cmp
push
mov
fiadds
rep
xlat
leave
mov
inc
aaa
xlat
aas
negb
push
in
xchg
adcl
jbe
push
mov
xchg
push
sub
cmpw
test
aam
std
imul
and
cmp
push
xor
xchg
mov
imul
ja
jbe
mov
xchg
daa
sbb
pop
scas
lods
clc
mov
jbe
outsb
inc
mov
or
mov
lods
outsb
std
mov
pop
sbb
iret
push
pushf
lods
aad
leave
insb
ss
in
fbld
jae
sub
xor
or
pop
xor
adc
cmp
hlt
adc
jne
inc
mov
shl
ret
xchg
or
ljmp
data16
mov
pop
js
mov
inc
adcb
test
leave
fisubs
cmp
lea
push
jmp
lret
xchg
mov
lret
ss
loopne
inc
pop
xor
adcl
stc
mov
movsl
dec
push
fxch
dec
icebp
rcr
cld
dec
leave
dec
mov
rcrb
out
mov
cmpsl
scas
and
xorl
pop
xlat
push
inc
push
xor
xchg
imul
mov
cmc
in
sub
mov
movsl
jle
call
adc
sub
mov
dec
xor
mov
popa
and
pushf
mov
jle
mov
and
xor
testl
adc
in
mov
add
push
dec
cmp
xchg
call
fsub
sahf
cltd
jecxz
inc
pushf
jle
lcall
js
adc
jb
outsb
lcall
lret
mov
lock
dec
or
fs
inc
xchg
cli
inc
adc
cmp
mov
subb
inc
les
pop
jmp
fmuls
jne
mov
iret
stos
xchg
cmp
pop
sti
fists
ret
stc
aad
adc
fisubl
cmc
mov
inc
scas
add
or
jecxz
clc
and
lds
jne
mov
lock
or
rorb
inc
test
fimull
or
mov
stos
rclb
popa
xor
jns
dec
mov
mov
lock
sub
and
dec
dec
and
aas
sbb
or
sbb
movsb
or
jmp
call
inc
and
and
arpl
cmpsb
pop
gs
fdiv
lods
push
wbinvd
xor
jnp
lret
fcompl
inc
scas
mov
lds
lahf
ss
cld
mov
push
out
inc
dec
mov
jb
add
in
or
or
repnz
std
jp
or
lds
fwait
lock
adc
stos
pop
ds
les
adc
lods
nop
shll
stos
iret
ret
cmc
addl
sahf
aam
in
pop
dec
cwtl
in
cwtl
sbb
or
cmpsl
mov
mov
mov
inc
inc
mov
lock
outsl
test
cs
mov
add
lea
xchg
bound
or
popa
xchg
les
and
jae
add
push
dec
addl
shrl
dec
fldenv
test
cmp
jnp
cmp
repz
out
cmp
cmpsb
call
js
push
je
daa
lea
shl
ja
mov
push
pop
cli
insb
sbb
clc
les
xchg
dec
fisttpll
jbe
cmp
cmpsl
cmp
mov
pop
lret
xchg
xchg
pop
pop
push
test
insb
or
imul
lods
loope
sbb
dec
sub
xchg
xor
dec
lods
mov
cwtl
int
bound
in
mov
leave
inc
lret
shr
cmc
push
push
add
outsl
in
push
xor
cmpsb
movb
test
adc
in
jle
pop
or
and
ljmp
popl
jbe
fidivl
jae
jo
xchg
js
bound
popf
inc
cmp
add
clc
out
xor
push
mov
or
in
insl
inc
mov
hlt
xchg
call
cwtl
in
add
cmp
iret
jno
mov
in
rorb
testl
fstpt
cmp
mov
inc
adc
mov
loope
xor
inc
pop
das
js
aaa
sti
mov
push
jns
mov
sub
aas
mov
sub
push
ret
sub
mov
scas
pop
hlt
outsl
sti
pop
and
out
imul
mov
jmp
push
sub
pop
or
pop
cld
in
std
iret
push
sub
test
cmpsl
sub
mov
out
cmp
icebp
inc
lahf
fists
cmp
cmpsb
sbb
and
cmpsb
dec
sbb
jl
xor
add
sbb
loope
jle
pop
sbb
in
or
rolb
mov
leave
out
and
int
fcomp
aad
xor
fists
adc
xchg
xchg
in
aas
mov
jae
fadd
jo
xchg
xchg
fs
pusha
int
stos
mov
pop
lahf
ds
cwtl
xor
push
sbb
add
ja
and
inc
mov
inc
popa
fstps
and
add
adc
push
js
jp
ljmp
in
aaa
and
and
ljmp
cmc
pop
jnp
gs
and
mov
xchg
mov
addb
mov
xchg
pop
mov
in
xchg
mov
fucomi
fiaddl
push
orb
jle
ret
mov
or
push
bts
repnz
push
sbb
and
and
clc
out
mov
inc
rolb
adc
test
bound
cmp
enter
jecxz
ficoml
adc
push
add
jge
add
imul
xchg
push
sub
or
inc
or
xor
ljmp
inc
xlat
jne
in
test
pop
or
cld
aas
mov
adc
cmp
pusha
je
inc
adc
lods
mov
pop
mov
arpl
add
je
mov
rcl
and
cld
fdivrl
mov
outsl
xchg
xchg
dec
outsb
filds
inc
pop
or
inc
jecxz
nop
loope
sbb
lods
mov
sbb
fdivr
pushf
push
roll
ss
fcoml
aas
jb
in
push
daa
mov
pop
mov
bound
inc
sub
bound
jl
push
xor
hlt
js
mov
jg
pop
xchg
cltd
pop
inc
stos
stos
xor
andl
lods
fnstenv
movsb
fists
and
jge
mov
call
xor
scas
lods
xchg
nop
out
sbb
push
je
add
jge
cs
hlt
ret
mov
push
and
dec
out
mov
push
mov
cmc
in
mov
sub
push
push
dec
or
cmpsb
jo
mov
jbe
mov
xor
mov
aam
push
cmp
xchg
sarl
dec
add
dec
and
lret
jns
mov
sub
fstl
adc
imul
add
mov
and
push
mov
leave
ds
out
mov
fistl
call
rorb
dec
test
mov
flds
movsl
cmp
test
popa
call
push
inc
jecxz
imul
lret
xchg
pop
imul
hlt
xor
cmp
in
pop
mov
push
scas
xor
fs
int
and
sub
popf
outsb
pop
pop
cmp
enter
jne
pop
cmp
int
sarb
mov
xchg
adc
mov
repz
dec
je
mov
mov
fists
adc
xor
ffree
adc
xor
push
cmpsb
lcall
sarl
stos
shrl
addr16
cmp
mov
in
fcoml
xchg
jg
mov
cmp
test
push
inc
pushf
xor
xchg
mov
and
popf
sahf
push
sbb
push
push
and
adcb
adc
xchg
ficoml
fwait
sub
push
es
jp
icebp
pop
arpl
ret
sub
pop
das
cmpsl
push
mov
cmpsl
aas
jecxz
fldcw
lahf
mov
push
repz
jg
mov
int
stos
push
dec
dec
movsb
push
lret
movsl
xor
add
das
sbb
dec
lahf
pop
or
popa
dec
test
jmp
jb
push
icebp
fwait
sub
insb
jl
xchg
mov
bound
daa
nop
popa
out
jl
dec
adc
dec
lods
movsb
mov
ret
cmp
add
mov
adc
loopne
scas
cmp
ljmp
shrl
xchg
mov
pop
pop
stc
fcomps
jg
xchg
sub
icebp
adc
insb
mov
sbb
jp
push
rep
mov
inc
xor
sbb
jae
xchg
aad
in
push
out
fs
xchg
xchg
into
cmp
jl
jmp
fwait
push
sbb
xor
ljmp
stc
test
pop
push
ret
push
jns
fdivrl
imul
aas
andl
push
push
mov
pop
inc
xor
push
dec
sbb
mov
pop
cmc
jae
or
cmc
push
xchg
adc
fdivrl
mov
sbb
or
xor
fsts
stc
mov
call
lods
jne
mov
mov
cs
pop
jecxz
inc
xor
sbb
or
clc
adc
popf
xor
mov
push
xchg
test
push
mov
cmpsl
stos
xchg
xchg
jbe
cmpsb
fwait
dec
mov
cmp
das
popf
mov
fisubrl
push
stos
pop
jbe
cmp
and
aas
xor
inc
in
sbb
jmp
mov
mov
out
dec
adc
xlat
mov
xchg
cmc
fninit
je
loope
lahf
pop
jns
jge
ret
ljmp
sbbb
cmpl
invd
or
pop
mov
cmpsb
push
aam
adc
jae
int3
jnp
and
or
and
lds
jge
aad
xchg
push
xchg
sub
adc
inc
ja
push
cld
adc
inc
mov
mov
aam
insl
mov
add
xor
xlat
icebp
inc
adc
add
xchg
mov
cmp
cmp
jno
jb
repz
add
sti
lret
mov
add
insl
insl
add
je
les
xor
jno
rcll
xchg
xchg
insl
cs
jmp
jp
xor
jbe
mov
xor
lock
cli
or
pop
mov
or
inc
adc
aad
xchg
cmp
push
push
inc
ficompl
mov
scas
xchg
push
movsl
outsl
adc
add
loop
les
cmpl
add
cmpsl
lds
mov
stos
mov
faddl
jp
stc
mov
inc
out
jg
xor
mov
jns
hlt
hlt
arpl
imul
adc
jmp
cmp
decb
data16
call
popf
call
xchg
or
popa
lret
sub
jns
pop
inc
mov
insl
adc
sahf
adc
and
stc
sbb
sbb
xchg
icebp
sbb
dec
inc
rol
mov
fwait
jl
mov
int3
loop
dec
xchg
out
mov
cld
jg
sahf
cwtl
mov
sbb
and
leave
shrl
pop
dec
mov
mov
push
cmpsb
test
inc
into
or
pop
mov
movsl
or
outsl
lcall
jge
xchg
xor
aaa
mov
pop
dec
leave
enter
mov
xchg
arpl
sti
out
adc
fidivrl
out
int
sub
dec
fists
dec
out
mov
adcb
test
imul
call
mov
ret
mov
mov
cmp
in
sbb
jnp
aam
outsb
iret
andl
mov
pop
je
push
sbb
xor
mov
out
jp
mov
push
inc
and
or
mov
sahf
loop
pop
xor
mov
pop
fwait
lcall
sub
cmp
loope
stos
adc
mov
jl
fwait
and
mov
das
push
idiv
xchg
jns
jno
dec
out
jb
fs
scas
fildl
mov
jp
std
dec
aam
dec
hlt
xchg
lock
int3
and
pop
pop
ja
aam
sbb
cwtl
lret
inc
inc
pusha
mov
in
fwait
and
mov
lret
mov
pop
add
pop
mov
adc
jg
jg
inc
cwtl
shlb
xchg
mov
dec
mov
cld
repz
fadd
pop
push
aaa
push
loop
outsl
nop
int3
loopne
jecxz
cmp
pushf
xchg
int3
movsb
add
ret
out
repnz
xchg
xchg
sbb
or
mov
mov
fs
mov
cmp
mov
loope
add
das
es
xchg
push
hlt
fsubs
addr16
mov
ljmp
push
lods
mov
aaa
mov
jno
xchg
inc
ret
and
or
loop
shlb
jnp
out
sub
out
xlat
scas
adcl
xor
shrb
inc
in
mov
fcmovnu
enter
inc
lret
cmp
sub
push
into
push
mov
cmp
push
xchg
mov
aad
outsl
push
add
arpl
data16
test
mov
or
out
shll
daa
fcmovb
mov
in
das
shrl
cmp
xchg
inc
pop
mov
cmc
mov
outsl
or
sub
in
iret
mov
mov
and
xchg
mov
popl
and
sub
int
iret
mov
lcall
in
pop
xor
push
and
cmp
movsb
ja
mov
loopne
cmp
test
xchg
hlt
or
pop
or
cmp
xchg
xchg
xchg
ljmp
xor
jg
out
test
daa
xchg
mov
idiv
adc
data16
icebp
mov
jl
repz
sbb
sub
out
xchg
push
dec
inc
and
jge
mov
mov
mov
aam
lea
popf
hlt
scas
orb
lock
jne
lcall
add
pushf
cmpsl
test
add
push
mov
iret
sbb
push
mov
mov
fs
and
aam
sub
stos
adc
mov
mov
inc
scas
mov
popw
or
scas
sbb
orl
lock
fisubl
ljmp
cwtl
push
movsb
test
inc
call
jle
and
dec
clc
sbb
cmpsl
insb
cmp
insl
add
mov
cmpsl
in
xchg
in
cmc
mov
mov
or
insl
mov
mov
roll
pop
rcr
lds
xor
sbb
sbb
mov
test
xchg
sub
and
sahf
push
pushf
push
jmp
xchg
loop
fnstcw
icebp
cmp
jno
inc
lock
into
xchg
ja
and
testb
sbbb
xor
inc
inc
and
jmp
fbld
inc
mov
cmpsb
jmp
push
cltd
mov
sbb
shlb
ret
pop
sub
push
cmp
lret
xor
out
in
cmc
lcall
call
aas
rorb
add
cmpsb
mov
clc
dec
sub
outsb
lods
shlb
inc
into
cmpsb
roll
in
fwait
add
mov
pop
shll
mov
das
loop
cmp
inc
mov
xchg
jnp
insl
push
jmp
inc
cmp
out
popa
je
test
ds
jmp
test
and
js
int3
push
push
in
fldenv
mov
lods
add
jbe
aas
or
and
inc
xor
rorb
inc
xchg
aas
push
cmp
push
cmpsb
mov
ret
xchg
mov
leave
cmp
int3
add
fmull
jg
andb
sarl
ret
bound
in
or
ret
mov
sub
cmpsb
movsl
push
mov
cmc
or
pop
outsl
aad
or
out
pop
xlat
lret
pop
iret
rcrl
in
or
cmp
push
cs
sbb
mov
jno
push
pop
out
lds
add
lods
xor
xchg
sub
sub
lea
mov
adc
in
sub
ljmp
xchg
ljmp
lock
lahf
pop
int
jecxz
int3
mov
jl
stos
lds
popf
dec
jecxz
xchg
repnz
cwtl
das
pusha
mov
fistl
mov
stos
push
xchg
mov
incl
fldenv
xchg
daa
testb
pop
pop
scas
pop
dec
repnz
lret
sub
mov
cmc
xlat
arpl
inc
mov
inc
xor
repnz
xchg
in
cmp
xor
cld
inc
jp
out
mov
cld
or
cmp
sub
daa
push
xchg
xchg
dec
cltd
xchg
jnp
lahf
ja
xor
int3
xor
xchg
les
push
add
mov
add
add
adc
dec
ud0
mov
mov
and
shll
fwait
xchg
jne
mov
pop
push
decl
lahf
repnz
mov
jns
pop
cmpsb
cmp
dec
gs
les
dec
cmpl
adc
inc
pop
push
inc
es
jo
add
cmp
loop
push
sbb
popa
int3
jno
jb
scas
push
dec
jmp
aam
xor
int3
adc
and
loopne
sbb
dec
add
xor
cmp
sarl
movsl
and
xchg
xchg
inc
pop
fbstp
and
movsb
dec
adc
int
dec
pop
scas
xchg
ss
mov
sbb
mov
jne
cmp
mov
mov
xchg
das
push
movsl
dec
jbe
fcoml
aas
testl
inc
adc
dec
cltd
ret
and
mov
pop
pop
frstor
hlt
dec
pop
pop
push
xor
push
push
adc
push
xchg
lar
scas
mov
loop
xchg
adcl
out
jle
inc
sbb
fidivs
aam
xlat
mov
push
fadd
mov
int3
daa
lock
dec
nop
clc
leave
outsl
shrl
push
cmp
sbb
aas
lret
sub
sub
mov
sbb
xor
fisubs
dec
mov
xor
rolb
jmp
jg
pop
ret
jp
hlt
js
pop
ss
jl
mov
divl
dec
adc
sarl
jae
adc
ret
xchg
xor
popa
pop
gs
jge
test
add
inc
mov
mov
adc
outsl
and
jp
nop
xor
inc
jl
mov
movl
xor
out
in
sahf
jo
mov
xchg
jo
in
add
dec
mov
xor
sub
jg
std
out
addb
stc
jecxz
push
push
and
sub
jbe
mov
mov
and
mov
push
inc
fcmovnbe
pusha
xchg
xchg
pushf
push
sarb
cmp
leave
inc
inc
xchg
push
or
call
xchg
sbb
fistpll
daa
cmp
add
or
fwait
push
test
data16
inc
jnp
lret
subl
jne
jmp
nop
vmulps
sar
icebp
ljmp
ja
mov
adc
jle
xchg
dec
imul
mov
or
lods
mov
fcmove
xchg
aam
add
adc
into
push
cmpl
sbb
mov
cmc
test
mov
in
jne
cmp
ret
fs
push
ret
rorb
dec
jl
xchg
int3
lds
dec
xchg
scas
add
push
scas
push
call
repnz
jl
cmp
mov
push
ljmp
loopne
sub
xchg
fdivrs
je
insb
push
mov
inc
jecxz
xchg
push
and
lock
mov
in
insb
push
xor
dec
inc
cmp
fcoms
lret
flds
js
ret
fnstsw
sbb
call
cmp
inc
push
and
lcall
fdivr
sti
test
or
in
sbb
lock
inc
add
out
xchg
fwait
cmp
mov
pop
sub
and
push
mov
into
out
mov
push
pushf
test
xorb
popf
stc
lea
clc
push
add
add
pop
mov
repnz
xchg
mov
outsl
mov
pop
aad
xchg
loop
in
adcl
push
aas
xor
shlb
cmp
lods
dec
rorl
jnp
je
cmp
in
pushf
stos
movsl
mov
inc
int3
icebp
iret
xchg
test
mov
bound
movsl
into
sbbb
lods
add
and
es
loop
cmpl
rcrb
push
out
inc
insb
push
pop
js,pn
sbb
popf
mov
mov
mov
lret
js
sbb
adc
inc
scas
test
shll
outsb
leave
push
fs
ds
stos
test
test
jno
pop
imul
neg
lcall
ljmp
js
and
das
xor
adc
test
insl
pop
xor
xor
fstp
gs
nop
or
jle
xchg
push
daa
imul
inc
aam
lret
jne
push
stc
push
sub
rorl
sub
aas
xor
push
pusha
repnz
jl
jg
inc
cs
xor
shl
adc
inc
in
jge
les
xchg
outsb
mov
cli
ljmp
sbb
arpl
pop
jb
xchg
cmp
or
loop
test
clc
xor
jmp
mov
repnz
pop
out
sub
adc
fdivr
xor
testb
and
add
cmc
push
aam
fisttpl
push
fisubrs
lret
out
push
sti
sbb
cmc
push
cmpsb
push
pop
push
rcr
int3
ds
gs
mov
fadd
pop
mov
xorl
jbe
lock
dec
scas
loop
icebp
adc
xlat
fildl
xchg
roll
xchg
mov
pop
mov
pop
lds
mov
fistl
mov
mov
sub
sbb
pop
shrl
lcall
inc
xor
hlt
imul
push
inc
in
xchg
mov
xor
dec
adc
in
inc
jp
mov
fmul
jmp
pushl
xor
int
sub
test
mov
xor
dec
xchg
dec
sub
jecxz
mov
popa
add
fsubrs
inc
jmp
insb
mov
lahf
std
das
enter
roll
adc
sbb
add
jo
mov
mov
mov
cmpsb
iret
jae
stc
fistl
testl
mov
test
add
push
aam
adc
mov
inc
jne
mov
addb
xchg
outsl
xchg
jp
xchg
mov
je
push
cs
mov
hlt
out
notb
in
mov
xor
push
lock
int
mov
rcrl
outsl
mov
adc
scas
or
inc
mov
sbb
fstps
rclb
mov
inc
mov
mov
bound
add
dec
in
cwtl
push
testb
ret
mov
mov
jle
dec
mov
gs
dec
jbe
jae
rorb
int
movsl
xchg
cwtl
push
xor
jae
icebp
and
cmpsb
lock
outsl
jbe
testl
mov
ret
inc
repnz
stos
ljmp
mov
lcall
add
insb
xchg
enter
jle
jg
les
inc
ds
mov
mov
addr16
jg
test
jmp
popl
daa
pushf
mov
dec
and
int
cmpsb
fistpll
imul
xorb
inc
dec
hlt
stos
cld
mov
sub
inc
fcomps
xor
sub
add
in
sub
or
aam
fs
call
mov
iret
jge
cmp
mov
daa
dec
jae
fsubl
sub
sbb
jae
cmp
ficoms
imul
jno
test
mov
xor
stos
xchg
add
jge
negl
pop
sub
daa
not
xchg
jnp
cltd
mov
xchg
jl
adc
xor
inc
sti
add
pop
sub
scas
dec
pop
pop
ss
orb
fldl
ljmp
xchg
subl
ds
stos
in
fstp
and
out
xor
sub
iret
out
inc
sbb
jnp
fcoms
push
cmc
jbe
push
mov
inc
ss
mov
xor
fwait
les
jb
ss
pop
jle
pusha
jp
imul
ret
adc
cld
mov
scas
push
jle
movsb
pop
sti
mov
dec
int
adc
test
xchg
scas
out
push
mov
or
lock
mov
call
loopne
mov
fbld
xchg
xor
enter
jle
xchg
dec
xchg
mov
and
scas
shlb
jle
lcall
sahf
ja
sbb
xor
jl
mov
pop
or
cmc
mull
ljmp
xchg
mov
pop
stos
push
sti
xchg
or
inc
insl
sub
xlat
aaa
push
add
xlat
pushf
dec
divl
fs
scas
pop
mov
push
pop
mov
add
jmp
outsl
mov
mov
inc
into
pop
pop
lret
mov
xchg
insl
sub
xor
push
data16
fs
mov
mov
mov
mov
inc
xor
push
test
faddp
add
push
pop
push
clc
scas
clc
fs
sbb
push
pop
sub
add
xor
mov
loope
js
mov
mulb
cmpsb
ss
loopne
mov
xchg
pop
out
adc
or
pusha
or
in
lock
and
pop
stc
inc
push
lret
xor
mov
sbb
incl
push
sub
mov
jge
xchg
arpl
leave
imul
roll
into
jmp
repz
out
shl
jb
and
aam
gs
stos
pop
popa
dec
pop
mov
imull
fnstenv
insl
js
inc
push
or
push
xchg
inc
scas
xlat
cs
lret
dec
fidivl
sub
outsb
sub
jb
jb
in
sub
fdivrs
hlt
push
cmpsb
dec
out
in
in
xchg
divl
jge
sub
pop
mov
push
mov
pop
call
orl
mov
xchg
imulb
add
sub
cmpsl
mov
cltd
push
cwtl
into
mov
dec
xchg
test
pusha
cmp
subb
jbe
xor
mov
out
xor
jns
mov
adc
or
sti
test
pop
les
je
in
fadds
dec
dec
jp
inc
xor
cwtl
lcall
dec
fisttpll
inc
rorb
mov
je
pop
xor
lret
out
xlat
xchg
rolb
add
jp
jmp
mov
loop
jbe
add
mov
aam
adc
dec
inc
jmp
jne
jbe
cmp
mov
scas
frstor
ret
lret
stos
sub
frstor
cmp
push
addr16
sbb
popa
inc
aas
fdivrl
loop
inc
iret
push
and
in
es
xor
xor
dec
add
xor
xchg
in
lahf
mov
dec
pop
inc
out
movsb
and
addr16
jmp
xor
adc
jp
cmp
jge
pop
jge
into
inc
adc
cli
pop
inc
ret
xor
mov
mov
push
fnstsw
pop
xor
add
adc
sbb
out
mov
in
in
scas
orb
fnstcw
add
inc
stc
fsubrp
idiv
fidivs
pop
sbb
sub
sub
cwtl
mov
xchg
xor
jno
bound
pop
loopne
aas
divl
negl
popa
in
mov
cmp
mov
cltd
mov
push
out
in
pop
dec
stos
out
sub
adc
je
and
loopne
push
jle
or
cmc
test
jmp
push
xchg
js
gs
or
sub
popf
inc
xchg
push
jmp
sub
mov
sbb
push
repnz
sub
adc
ljmp
jl
mov
icebp
inc
ja
inc
mov
movsl
addl
out
fldcw
sbb
jnp
mov
les
pop
ja
je
sar
divb
mov
inc
popf
insl
or
out
xchg
or
sarl
and
jo
push
imul
std
or
ja
push
jl
inc
sahf
xchg
pop
mov
xchg
gs
dec
mov
aas
jne
ret
xor
fwait
xchg
push
psadbw
and
xchg
fwait
test
stos
xor
pushf
outsb
shlb
pop
dec
dec
das
adc
push
mov
clc
dec
les
es
xor
pop
fbstp
or
add
sti
push
inc
push
cltd
mov
add
insb
jb
mov
jge
lret
sbb
nop
nop
and
fs
mov
mov
std
outsb
out
push
addr16
fisubl
dec
and
mov
cltd
and
cmp
popa
loopne
inc
popf
nop
nop
push
mov
fdivs
jle
shlb
sbb
or
ljmp
and
in
insb
cli
outsb
fnstenv
dec
push
les
negb
vpsrlw
es
push
adc
sbb
enter
adc
jp
test
arpl
or
movsb
pop
adcb
orl
repz
adc
outsl
flds
ds
mov
pop
cmp
add
push
pop
mov
bound
stos
mov
pop
jp
imul
or
mov
mov
ret
jae
sti
stos
test
fwait
dec
and
jg
mov
sbb
std
stc
add
in
mov
shll
mov
cli
cmp
fisubs
xchg
adc
add
test
mov
adc
sub
xor
rcl
imul
jbe
popw
xor
aam
mov
popa
std
sub
jmp
adc
sub
sub
sbb
fdivrp
pop
mov
test
xor
push
fnsave
das
bound
mov
and
mov
push
pop
mov
imul
dec
inc
fistps
fbstp
int
cltd
lahf
inc
lahf
mov
sbb
stos
test
mov
adc
sbb
dec
jno
lahf
repz
clc
and
pushf
popf
ror
mov
mov
pop
inc
sar
mov
addr16
addr16
mov
xchg
push
repz
aad
jecxz
shr
je
or
test
xor
pop
dec
aaa
adc
stc
insb
hlt
in
scas
add
jmp
aas
mov
xchg
stos
pop
pop
scas
xlat
fucomi
dec
inc
mulb
sbbb
jo
sahf
or
sbb
mov
fwait
sub
loopne
aad
mov
mov
or
popf
xchg
loop
lahf
inc
sbb
mov
dec
jecxz
push
and
push
mov
pushf
jne
pop
test
xlat
pop
lret
out
out
fnstenv
daa
xchg
sti
mov
cmp
mov
xchg
andl
sub
or
pop
in
hlt
jno
iret
inc
test
aad
leave
movsl
mov
std
add
xchg
add
sbb
sbb
push
pushf
or
dec
mov
lret
dec
xor
mov
gs
push
jo
fimull
and
push
in
push
xchg
push
push
mov
seto
out
movsb
aas
cmp
iret
imul
inc
jae
lcall
and
mov
mov
jg
out
xchg
pop
je
lds
mov
sbb
packsswb
stc
mov
push
add
mov
jmp
adc
call
pop
sahf
cmp
cmpsb
in
cmovae
mov
rcr
mov
jmp
dec
aad
data16
ret
lea
push
push
outsl
jge
imul
push
ret
cmp
lea
add
and
jge
fidivs
jae
loop
pop
outsl
jne
or
das
inc
push
dec
inc
fnstcw
pop
sbb
jbe
add
mov
mov
aaa
pusha
test
sbb
xor
or
jle
std
inc
ret
xlat
inc
mov
pop
xor
pop
xor
dec
xchg
ss
cli
out
inc
or
cld
fstps
aad
or
cmp
sub
mov
jns
fdivr
adc
mov
cmp
xchg
sub
mov
test
ljmp
sbb
out
bound
popf
stos
jb
aas
sbb
repnz
imull
les
fidivrs
fists
fdiv
leave
or
sbb
in
xchg
pmaddwd
inc
sub
pop
bound
repz
sub
out
push
xchg
cmc
lds
sub
lret
int3
push
mov
stc
ret
out
push
loop
mov
mov
inc
mov
jns
rep
int
and
loopne
inc
outsb
test
sub
lahf
dec
arpl
ljmp
cmp
xor
lret
cmc
mov
repnz
xor
loopne
and
aad
or
jns
imull
pop
mov
dec
push
xor
daa
xchg
xor
sbbl
or
daa
fdivl
imul
loope
into
mov
dec
jle
mov
add
mov
cmpsb
cmpsb
sbb
xor
xor
insb
cmp
test
sub
xchg
push
pop
cmp
scas
adc
int
and
data16
adc
es
les
and
scas
or
flds
int
jecxz
fisttpll
xchg
fsubl
sbb
in
pop
test
mov
sbb
icebp
aad
repz
ret
adc
mov
push
or
lods
dec
sbb
shlb
fnstenv
addr16
scas
cltd
add
insl
and
movsl
pop
loopne
lods
faddp
mov
sbbb
xlat
insb
pop
pop
add
xchg
lea
inc
std
add
push
ret
adc
cmp
pop
fists
dec
sub
sbb
and
mov
xchg
add
dec
xchg
iret
movsb
inc
push
sbb
and
mov
inc
xor
or
add
xchg
jne
outsl
data16
fistps
out
adc
mov
ret
xor
xor
jle
add
or
insb
mov
aaa
inc
lret
sub
loop
sbb
pop
inc
lcall
sub
fldlg2
sub
mov
xor
push
out
jnp
movsb
and
test
lods
into
jecxz
mov
js
pop
out
outsb
orb
lods
inc
add
daa
cmp
aad
push
sbb
pusha
fisubl
and
rcr
push
jge
sub
mov
jb
test
data16
pusha
push
xchg
push
ja
mov
adc
dec
subb
les
sbb
notl
cmp
inc
xor
stc
or
sbb
sub
cli
sbb
xor
lock
mov
arpl
push
sbb
pop
sbbl
push
pop
test
movsl
fmull
push
test
xor
sub
add
mov
cmpsb
cld
cli
insb
mov
addr16
dec
scas
xchg
inc
insl
std
or
sub
inc
pop
ja
rolb
cmp
cmp
lock
inc
jne
iret
gs
arpl
sbb
or
jo
std
mov
sahf
shrb
iret
out
mov
mov
jae
pop
leave
inc
dec
and
push
rcll
outsb
xchg
adc
push
cmp
push
xor
cmp
es
xchg
cmpsb
pop
scas
dec
adc
jbe
cmp
lret
shll
ret
cmp
cmc
push
outsl
out
inc
jg
lret
je
mov
stc
cmp
movsb
hlt
popf
imul
mov
xor
insl
sub
testl
pop
test
sarl
mov
add
jmp
adc
adc
aam
xchg
xor
xchg
mov
lret
jo
mov
mov
aam
or
stc
sbb
jmp
xor
adc
inc
xorb
addr16
pop
mov
xor
popa
mull
sbb
cmovae
jo
fsubs
mov
leave
and
dec
fsubrs
mov
mov
push
and
loop
cmc
fstpt
or
dec
out
lods
sbb
repnz
daa
inc
mov
sub
push
adc
popa
pop
fs
jae
in
in
mov
push
pop
mov
ss
cmc
and
ja
fbstp
cwtl
jb
push
insb
out
push
cmpsl
cli
rcr
mov
adc
mov
outsl
push
das
fwait
int3
dec
cs
push
inc
push
jns
out
pop
popf
push
fcompl
dec
sbb
dec
inc
xor
push
enter
inc
or
sahf
pop
pop
mov
outsb
ljmp
lcall
pop
xchg
leave
sub
or
idivb
xchg
cli
mov
ss
inc
mov
xchg
mov
pop
adc
push
call
push
inc
sub
jp
inc
filds
stos
loope
ja
ss
std
pop
pusha
jg
fwait
xchg
xor
mov
imul
sbb
in
mov
scas
sbb
dec
into
mov
mov
sub
in
adc
roll
mov
sub
add
test
lods
rorb
add
mov
insb
pop
inc
loop
roll
dec
insl
xchg
jmp
lds
xlat
loop
sbb
ljmp
mov
xchg
cmp
xor
movsl
mov
cmp
je
in
int3
xchg
pop
mov
adc
js
or
lock
enter
jbe
mov
pop
jnp
inc
xor
repz
xchg
or
mov
or
arpl
cmp
pop
imul
jae
jbe
andl
imul
xchg
adc
cmc
push
pushf
gs
jmp
xchg
inc
out
test
xchg
pop
pushf
xor
test
mov
dec
jmp
push
xchg
pop
sub
mov
xlat
jae
cmp
pushf
pop
scas
jo
push
cwtl
sbb
xchg
les
daa
push
or
inc
loop
fmull
pushf
cmpsl
xchg
jae
cmp
sub
fiaddl
and
mov
movsl
stos
pop
push
push
aam
sbb
aad
cmc
sub
sbb
aam
negb
pop
sarl
imul
imulb
inc
mov
cmp
sbb
pop
inc
out
cmp
or
es
inc
lds
out
hlt
pop
mov
cld
sbb
aaa
movsb
mov
mov
mov
xlat
add
push
add
int
xchg
jg
mov
add
xlat
int3
xchg
shll
outsl
pushf
into
leave
int
leave
and
adcl
mov
jmp
xchg
adc
and
nop
mov
in
pop
pop
xchg
movlps
bound
xchg
leave
mov
dec
popf
lock
dec
pop
sahf
mov
jae
cmpsb
aaa
push
fcomps
cmp
rolb
imul
adc
outsb
fwait
int
enter
outsb
arpl
jle
dec
or
ret
lods
mov
pop
stos
test
dec
mov
les
shrb
jbe
pop
dec
push
ret
pop
cltd
xchg
jne
jg
sarl
sbb
int3
nop
ret
xor
popf
xchg
sub
test
push
inc
jbe
jbe
push
jecxz
adc
sub
cmp
imul
mov
inc
aad
mov
rcrb
cwtl
xchg
cmp
aaa
ljmp
xor
push
enter
aad
in
push
mov
push
sub
xor
lds
mov
ret
mov
mov
lods
inc
inc
out
cmp
mov
mov
clc
sub
push
out
and
or
push
aam
std
push
sbb
jl
push
ret
mov
inc
leave
arpl
and
icebp
adc
push
add
sti
sahf
inc
inc
sarb
jmp
push
hlt
fs
push
out
scas
or
xchg
adc
loop
insl
and
in
ljmp
testb
iret
xchg
sbb
fs
sbb
mov
jb
cwtl
dec
out
sub
pop
xor
push
ds
sbb
mov
jge
push
xchg
ret
test
gs
bound
ds
outsl
cmp
sti
shll
int
pop
and
pop
call
outsl
mov
inc
mov
dec
adc
shll
xchg
add
jnp
push
push
mov
inc
lahf
stos
cmp
inc
imul
fs
sti
ss
clc
inc
xchg
adc
ds
add
in
sub
call
fisttpll
js
stos
pusha
cmp
push
push
int3
aas
out
cmpb
clc
shll
stc
xor
movsb
les
lods
sbb
inc
pop
mov
mov
jle
inc
data16
push
imul
jle
in
mull
jge
mov
outsb
lods
lods
mov
das
fbstp
ljmp
pushf
inc
faddl
loope
dec
sbb
cmp
adc
jo,pn
insl
sysret
sbb
int3
jg
xor
data16
shlb
cmpsl
aaa
mov
fcmovne
mov
xchg
ds
lcall
out
bound
bound
push
aaa
and
xchg
aad
adc
sti
push
cmpsl
mov
sti
dec
mov
mov
pop
in
in
je
jns
push
push
popf
mov
or
push
jg
xchg
pop
push
aad
cltd
sub
xchg
jb,pt
scas
aam
das
pop
std
pop
ja
and
fsubrs
repz
int3
icebp
or
mov
sub
clc
mov
loop
insb
out
sub
jbe
push
ret
repz
mov
xor
jg
loop
mov
shrl
push
sub
add
cmp
mov
xchg
fcom
aas
fldl
xor
and
cmp
pop
mov
loopne
int
ljmp
xor
jecxz
mov
cld
je
adc
or
cs
mov
int
outsb
lcall
sub
sub
push
pop
repnz
cmpsl
in
cltd
ds
sti
adc
aas
mov
faddl
add
adc
adc
jne
inc
push
push
push
and
jno
xchg
hlt
mov
test
dec
dec
shll
das
in
mov
dec
mov
sti
iret
mov
fldenv
jb
aam
pop
pop
pop
pop
pop
or
movsl
dec
hlt
push
pop
sbb
cltd
mov
out
and
rcl
jno
add
pop
or
inc
stos
dec
push
push
mov
mull
cli
sbbl
mov
add
pop
pop
lret
pop
hlt
aam
push
in
rclb
test
mov
ds
out
daa
pop
lods
push
cmovno
push
sub
jecxz
push
fsub
mov
in
sbb
pop
jecxz
fnsave
xchg
xor
dec
aaa
pop
mov
iret
add
loope
roll
pop
mov
insl
stc
xor
out
inc
dec
pop
cs
popf
cmp
lock
insl
xchg
and
test
pop
dec
ja
inc
pop
and
and
les
push
aad
jl
in
loop
push
and
testb
out
jl
mov
popf
aas
stos
sbb
adc
popf
push
cmp
and
push
setle
sub
std
mov
dec
dec
fwait
and
sub
ret
shlb
ja
outsl
je
jge
mov
xor
scas
push
arpl
push
dec
mull
popa
stc
pop
ret
fwait
lods
mov
and
pop
mov
fcoms
shr
mov
cmpsb
popa
movsl
xor
std
push
push
cmp
xchg
xchg
cmp
mov
cmp
testl
dec
out
xor
xchg
jne
rcr
aas
insb
cmp
adc
cld
ljmp
dec
adc
xchg
push
push
mov
add
out
push
mov
fcoms
add
test
sahf
popf
xor
jmp
sub
shll
and
dec
scas
jnp
cli
or
arpl
sti
xor
pop
and
insb
rolb
ljmp
out
repnz
adc
xchg
lods
aad
pushf
iret
or
inc
push
pushf
sbb
lock
in
and
mov
fs
jl
fnstenv
mov
sbb
loopne
jl
xor
or
pop
fs
mull
and
incl
sbb
xchg
js
in
imul
repz
sbb
les
pop
add
and
hlt
mov
adc
jl
mov
or
xchg
push
loope
inc
cs
push
sbbl
test
cltd
ljmp
sbb
mov
push
xlat
lret
xchg
test
mov
clc
push
mov
aas
mov
stc
lds
lods
movsl
push
in
cmpsb
xchg
mov
lret
sbb
mov
mov
aas
fdivrl
sub
adc
repz
cld
or
inc
test
jo
xor
xor
mov
sub
and
out
mov
xor
cli
mov
test
repnz
imul
out
stc
cmp
add
pop
cmpsl
mov
in
out
or
pop
mov
inc
jo
sbb
xlat
ret
lret
jmp
add
cld
mov
dec
lret
ja
imul
fdivrs
fs
repz
in
jno
mov
sub
xchg
les
mov
jg
das
hlt
fsubl
mov
js
sub
sbb
andl
mov
in
imul
sbb
dec
sub
fdivs
add
inc
popf
fsubr
xor
mov
sub
aas
and
adcb
mov
adc
sub
aas
dec
js
popa
outsl
xor
inc
shlb
jnp
mov
pusha
lock
jl
stc
insb
ljmp
stos
push
lods
pop
and
sub
fistl
or
or
lods
xor
pop
lea
ljmp
jne
sbb
sti
xor
loopne
insb
outsl
test
mov
jmp
iret
adcb
mov
jae
and
aaa
xchg
mov
insb
imul
aad
andl
lea
sub
dec
rcll
addr16
xor
mov
add
sbb
xor
xchg
push
or
roll
ss
cmp
pop
jae
in
sbb
js
cld
push
inc
mov
fstl
xchg
push
sub
test
adc
in
mov
xor
aaa
sbb
int
in
mov
ja
pop
fisubl
add
cmp
mov
jl
and
insb
int3
jb
aad
jo
loope
jno
sti
mov
push
mov
mov
pop
sahf
jnp
mov
push
pop
das
lods
loopne
inc
repz
lcall
xor
mov
adc
shlb
mov
cmpsb
mov
push
cwtl
mov
jne
and
add
adc
and
or
pop
mov
mov
std
ja
jmp
mov
jle
cmp
ja
inc
push
jnp
jno
cmpsb
cltd
push
jp
cmp
cmp
arpl
int3
xorb
addr16
dec
icebp
mov
in
hlt
shl
xchg
jo
arpl
sub
fdecstp
outsl
insb
call
dec
sbb
lcall
pop
xchg
std
in
sbb
sub
testl
fs
fildl
mov
insl
std
data16
jb
imul
pop
xchg
push
push
movsl
jl
adcl
int3
push
lret
xor
add
mov
sbb
nop
add
mov
inc
sbb
test
lods
sub
lahf
mov
aaa
dec
jl
movsl
mov
daa
sbbb
jp
enter
sarl
shl
jmp
dec
aad
jo
daa
cwtl
mov
lds
daa
xchg
add
daa
test
call
dec
lds
push
imul
mov
cmc
into
pop
xchg
mov
add
loopne
push
inc
stc
dec
add
dec
loop
lock
rcrl
shll
xchg
xchg
jne
fisttpll
pushf
jp
enter
inc
push
or
xchg
push
and
dec
test
imul
adc
jne
pop
mov
jecxz
outsb
sub
or
push
addr16
enter
fcoml
sbb
mov
jg
mov
xor
enter
leave
fsubl
jns
jmp
pop
jnp
pop
inc
insl
mov
lret
outsb
lahf
daa
ret
push
mov
ljmp
in
cmp
aas
dec
je
pop
inc
xchg
push
push
or
cwtl
mov
mov
mov
jecxz
scas
sbb
stos
sub
push
or
dec
dec
push
es
nop
dec
xchg
loopne
outsb
xchg
andb
lods
mov
mov
stos
pop
inc
mov
aaa
dec
mov
adc
std
je
pop
fisubl
inc
pop
cmp
push
je
push
dec
jno
ds
rcrl
popa
int3
jl
mov
jmp
movl
inc
imul
jg
pusha
es
out
xor
fimuls
lods
dec
sbb
cltd
push
dec
out
popf
xchg
fimull
mov
icebp
adc
push
fmulp
lds
add
pushf
inc
ljmp
lock
mov
arpl
inc
jg
add
rcll
add
test
mov
cmp
push
daa
fcomps
inc
aaa
and
push
pusha
push
out
sub
mov
sahf
lods
or
pushf
aas
jns
movsl
pop
jb
test
sar
push
sbb
iret
ret
xor
nop
or
sbb
fdivs
push
adc
adcb
imul
repz
pop
mov
mov
cmp
pushf
hlt
jns
pop
sbb
lret
negl
int
bound
rcrb
push
mov
push
cmp
lods
pushl
lds
dec
lahf
xor
fs
sub
out
pushf
dec
sub
out
add
jle
jle
mov
ds
xor
lock
push
pop
add
xchg
cmp
push
mov
mov
rorb
mov
cmp
cmp
mov
add
lds
jmp
nop
outsb
and
jp
cmp
and
rcl
sub
icebp
push
adc
inc
idivb
je
jg
std
push
cmp
subl
xchg
mov
push
push
sbb
mov
sar
leave
sub
xchg
das
lods
adc
cwtl
stos
xor
xor
dec
lret
mov
xchg
icebp
push
cmp
xchg
or
repnz
mov
nop
xchg
and
je
paddb
sbbl
or
pop
imul
or
addr16
icebp
pop
scas
lods
lods
mov
pop
loop
sbb
sub
fs
and
std
sub
aas
jl
lcall
ss
add
in
arpl
push
lea
cmp
call
xchg
lret
inc
leave
movsl
xchg
push
repnz
aad
xchg
loope
mov
iret
loope
dec
jb
mov
jne
sahf
rorl
mov
mov
outsl
test
sub
rorl
clc
aas
sub
push
dec
das
loopne
cmpb
push
push
rcll
or
leave
movsl
in
test
ficomps
mov
xor
cmp
in
scas
dec
pop
cld
subb
movb
stos
xor
mov
sbb
leave
outsb
in
pop
stos
push
out
mov
hlt
mov
repnz
push
mov
xchg
sti
push
mov
fiadds
push
sub
add
ljmp
in
mov
adc
lock
mov
cld
sbb
pop
and
and
push
push
adc
xchg
mov
xor
jecxz
lahf
lcall
inc
mov
push
pop
mov
dec
inc
and
push
lea
or
mov
jl
sbb
lret
addr16
xchg
jl
push
cmp
push
int
aad
jnp
dec
je
dec
icebp
fldenv
cmp
pop
adc
add
pop
and
sub
mov
add
sbb
adc
pop
mov
dec
sbb
and
dec
mov
add
and
pop
push
pop
cwtl
subl
push
sub
mov
or
mov
pop
loopne
dec
cmp
or
mov
sub
mov
xchg
repnz
in
int
mov
data16
aam
mov
sarb
inc
das
lret
pop
fmulp
addr16
dec
sub
mov
cmp
lahf
insl
inc
mull
pop
out
nop
in
dec
xor
and
enter
addb
loope
movsl
jb
inc
pop
mov
bound
idiv
push
shl
fisttps
sbb
inc
xlat
fs
shrb
ds
inc
inc
push
sbb
cli
inc
mov
add
or
sub
enter
jo
aam
arpl
xchg
add
xchg
cli
gs
rclb
dec
ja
or
imul
mov
rolb
dec
inc
jae
lcall
test
fistpll
aad
sbb
sahf
xor
insb
xor
jg
jbe
sbb
gs
pop
and
sub
xor
xchg
lret
in
insl
hlt
xchg
mov
sub
pop
shll
and
outsl
inc
jge
push
push
adc
nop
outsb
insl
cmc
pop
push
mov
jecxz
inc
cmp
ss
or
ljmp
xchg
daa
jp
dec
test
mov
push
out
cmpsb
rcrl
lea
aas
scas
into
ljmp
in
xor
aad
repnz
fwait
repnz
add
xchg
cli
mov
cmp
imul
jg
adc
mov
ja
imul
inc
inc
adcb
in
jns
mov
sbb
mov
mov
into
push
and
test
mov
or
or
or
mov
pop
fmul
icebp
inc
mov
in
jns
push
push
mov
push
sbb
data16
js
cmp
call
in
push
scas
xchg
in
or
push
mov
mov
negl
adc
cmpb
leave
stc
rclb
xor
insl
lock
and
lock
jne
push
shll
jmp
inc
jae
in
mov
rorl
adc
inc
push
pop
gs
sarb
inc
adc
shlb
rcll
pop
pop
xchg
jno
out
dec
shlb
mov
add
sbb
dec
jg
pop
mov
das
into
mov
sub
or
cmp
push
and
push
mov
or
stc
cmp
insl
sti
inc
cwtl
mov
inc
push
popa
fs
push
mov
sub
test
test
dec
stos
mov
lods
iret
inc
mov
std
popa
subb
ds
sarl
push
out
das
sbb
push
ds
mov
xor
and
jb
jbe
add
jmp
mov
mov
out
aad
xor
pop
mov
pop
xchg
dec
pop
xor
cmp
mov
insb
js
mov
mov
mov
add
and
pop
mov
sub
jbe
or
mov
jae
xor
lret
subb
inc
xchg
sahf
xor
ljmp
inc
test
dec
add
or
lds
cmp
xchg
jl
lea
cltd
ret
icebp
popa
call
fisubl
xchg
cs
push
sbb
lahf
mov
movsl
es
jns
push
addb
rcrb
aam
es
outsb
lret
xchg
xlat
pop
lods
stos
imul
push
out
aam
scas
insb
inc
fcmovnu
push
cli
cmp
inc
mov
jp
mov
xor
xlat
dec
ds
xor
add
je
std
dec
into
jne
popa
icebp
jne
fwait
iret
imul
fcomps
mov
jnp
mulb
or
mov
iret
pop
into
adc
pop
call
imul
dec
in
jbe
ljmp
cltd
cld
sarb
jmp
cmp
and
ds
nop
loop
adc
rcll
fnstcw
or
sbb
add
lds
lods
dec
mov
push
stos
and
fs
pop
push
cld
pop
add
scas
inc
loope
scas
mov
sub
add
sub
sbb
mov
cmc
push
pusha
out
push
xlat
test
xor
fs
mov
mov
dec
shlb
pop
outsb
arpl
mov
cmp
xchg
das
lcall
pop
sub
jl
sbb
mov
fsts
and
jae
dec
aam
cwtl
jne
arpl
push
inc
mov
dec
mov
cltd
insl
movsl
icebp
dec
movb
out
xchg
mov
push
cltd
dec
cmpsl
out
adc
push
jge
jecxz
gs
xchg
jge
daa
test
pushf
inc
push
mov
sub
insb
xor
out
push
xchg
lods
loopne
cmc
or
inc
xor
dec
pop
in
jg
or
mov
sbb
mov
mov
insl
push
push
adc
push
inc
pop
mull
jecxz
jl
cmp
aaa
imul
mov
jmp
mov
adc
scas
push
jg
movsb
inc
sbb
enter
xchg
and
cmp
mov
stos
mov
sbb
ficoml
mov
pushf
incb
sub
insl
inc
inc
adc
aam
pop
inc
ret
lds
enter
test
scas
daa
lahf
push
mov
and
movsb
or
jp
dec
enter
push
mov
inc
aaa
cmpl
jp
inc
jnp
je
test
in
push
loopne
cmp
stos
mov
imul
cltd
jo
mov
or
inc
fwait
sbb
ret
in
pop
lock
xlat
mov
jo
jmp
sub
sbb
je
and
cmp
xchg
push
cmp
je
push
aaa
adc
stos
test
jae
rcrb
ret
cmp
jnp
mov
dec
shll
enter
sbb
cmp
das
inc
addb
hlt
ljmp
je
xchg
outsb
shrl
loopne
pop
ja
and
popf
popa
int
mov
testb
sub
cmp
sbb
jo
jmp
push
jne
sahf
inc
mov
shrb
aaa
aam
sub
mov
sbb
cmp
das
repz
push
popa
push
dec
cs
dec
rorb
jno
cld
loopne
ret
sbb
loopne
pusha
fistl
mov
outsb
mov
inc
ret
rorl
fimuls
imul
scas
hlt
cmp
xchg
nop
fbstp
adc
mov
adc
fnstsw
jle
arpl
pop
xor
and
inc
fnstenv
push
cmp
pop
xchg
jo
mov
inc
sub
ret
sub
ja
push
push
in
out
insb
lods
push
xchg
call
pop
xchg
sbb
cli
cmp
sahf
mov
push
ret
sbb
inc
je
js
cs
test
and
xchg
pop
mov
and
and
fbstp
push
scas
lea
pop
stos
stos
or
loope
in
push
mov
cmp
leave
int3
mov
and
movsl
loope
xchg
sbb
pop
mov
add
in
das
cmpb
subl
pcmpgtb
sub
cltd
sub
add
cmp
lahf
cmp
jae
xor
mull
enter
movsl
cwtl
fcmovbe
pop
adc
sbbl
int3
lcall
mov
mov
fwait
adc
dec
sbb
sbb
enter
lods
inc
cmp
test
adc
push
jns
xor
icebp
stc
data16
out
aad
mov
repz
ficompl
dec
lock
and
inc
mov
dec
mov
fimuls
pop
je
mov
mov
sbb
jp
push
popa
popf
mov
mov
in
test
insb
pop
jbe
movsl
outsb
ljmp
orb
lods
test
loope
pop
jmp
fwait
out
daa
out
movsl
int3
push
out
jo
fwait
dec
aas
fldenv
test
jne
daa
xor
mov
or
jae
test
daa
lcall
add
ljmp
jb
and
icebp
jmp
sarl
inc
sbbb
cs
mov
xlat
mov
mov
xor
inc
jl
pop
pop
pop
lock
inc
arpl
icebp
fcomp
push
inc
arpl
ret
out
jecxz
fnstsw
push
inc
cli
mov
sbb
shlb
push
imul
pop
xchg
push
iret
cmp
adc
test
fwait
xorl
sbb
leave
inc
fildl
in
dec
xor
imul
add
sbb
xchg
out
xor
fisttpll
repnz
add
cmp
cmpsb
sub
mov
pop
sub
mov
or
js
ret
ljmp
mov
jle
or
jge
cmpb
fdivrp
sar
pusha
lret
clc
call
or
adcl
aaa
addr16
mov
lcall
cmp
insl
mov
fldcw
mov
ljmp
out
or
xchg
lahf
dec
stc
inc
ret
jae
add
mov
movsl
sub
test
pushf
mov
clc
hlt
adc
rclb
add
test
fistps
js
test
inc
cmp
mov
push
das
sbb
and
shl
cmp
ljmp
mov
repnz
mov
pushf
pop
add
jb
pop
loope
cmc
lods
add
imul
mov
or
stos
mov
out
mov
cwtl
pop
popa
dec
rorb
adc
jno
adc
loope
mov
xor
aaa
pushf
pop
gs
lea
jmp
xchg
cwtl
gs
mov
push
loopne
sbb
out
xorl
cmpl
mov
xorb
xor
in
pushf
adc
pop
mov
pop
imulb
pop
out
xor
xor
fidivl
or
aam
shll
sub
pop
xchg
rclb
pop
sub
mov
dec
cmpsl
inc
icebp
lret
xor
cwtl
sbb
xchg
jmp
popf
mov
sbb
adc
add
xchg
jl
push
sbb
out
lds
and
mov
in
data16
sbb
cmp
test
ds
add
inc
mov
cmp
dec
xchg
popa
pop
jnp
adc
xor
sbb
popa
and
dec
in
ret
andl
jmp
xor
mov
mov
fsub
ret
sahf
mov
mov
cmp
shll
rclb
aad
mov
xchg
sarl
pop
lret
pop
xchg
retw
leave
sbbb
inc
jnp
xchg
dec
xor
push
mov
mull
adc
repnz
cmc
popa
je
stos
fsubl
imull
sbb
push
dec
add
sti
test
cmpsl
adc
sub
push
es
shll
movsb
xchg
mov
test
loope
in
or
inc
jg
test
fnstcw
mov
or
dec
sub
iret
push
mov
jmp
cld
in
imul
popa
stos
mov
sbb
mov
lods
push
dec
cmpl
mov
inc
dec
adc
dec
push
shll
lds
sub
pop
xchg
add
push
pop
inc
push
mov
push
mov
and
mov
fs
int
sbb
nop
roll
mov
pusha
pop
and
out
xor
add
sub
popf
repnz
push
adc
inc
imul
mov
ja
mov
test
int
jmp
xlat
clc
js
lds
xor
mov
mov
jl
je
fs
in
lret
lcall
div
mov
pop
lahf
adc
or
lret
pop
mov
xchg
pop
ret
jo
push
push
xor
push
int3
negl
mov
iret
sti
test
fistpl
mov
dec
cwtl
ficompl
xor
loopne
pop
test
mov
cmp
jl
dec
adc
les
cltd
int
call
mov
in
sti
icebp
test
sbb
cltd
jne,pn
dec
push
mov
fwait
stos
jecxz
sub
xor
sub
xchg
imul
fcomip
cmp
adc
aaa
and
and
adc
or
xchg
sub
jns
pop
sub
and
mov
cmp
jmp
es
or
fstps
shl
inc
mov
dec
test
sbb
pop
xchg
nop
fsubrs
mov
xchg
daa
pop
xorl
out
outsl
lods
testb
jne
popf
add
xor
in
mov
mov
or
in
loop
sbb
bnd
mov
lahf
cmp
mov
imulb
lret
lret
pushf
into
jmp
or
fistl
mov
inc
lds
pop
jmp
mov
cmpsl
mov
pop
inc
fidivl
sbb
lods
test
mov
js
es
cltd
inc
sarl
jp
lcall
sub
push
pop
mov
int3
aam
jl
xlat
mov
xor
pop
mov
mov
mov
arpl
dec
lods
pop
push
adc
popf
mov
jns
sbb
sub
dec
cmp
mov
in
lea
leave
inc
xchg
pop
push
subl
xor
sub
sarl
lods
pusha
pop
jecxz
mov
mov
add
loop
iret
push
cli
pop
dec
test
les
lea
mov
xchg
and
xchg
outsb
sbb
ds
inc
jnp
gs
mov
mov
fnsave
inc
repnz
sahf
mov
pusha
jp
xor
out
sub
lds
mov
test
and
and
mov
mov
mov
jmp
ret
aas
call
cmp
cmp
subl
sbb
adc
fcmovnb
shl
std
int
push
stos
ret
and
pop
xchg
cs
cmp
jecxz
fnstcw
rcrl
and
xchg
fsubrl
mov
sub
inc
je
add
dec
push
pushf
adc
icebp
adc
xchg
inc
and
in
stc
push
arpl
mov
or
movsl
test
mov
xor
jno
test
stc
jg
cmc
fimuls
sub
lods
dec
ret
and
into
dec
and
fldt
xchg
test
in
aas
xchg
repz
imul
mov
imul
sbb
test
jnp
cmpsl
arpl
adc
mov
gs
push
call
or
push
push
mov
jnp
mov
or
in
cmp
test
sub
aam
mov
mov
subl
scas
add
pushf
push
cs
loopne
dec
jg
aaa
mov
test
fsubs
sbb
push
cmp
add
leave
xchg
hlt
aaa
push
push
dec
popf
mov
ss
adc
push
jp
test
cmp
or
aad
repz
and
pusha
arpl
sbb
fcomps
daa
dec
jle
fsubrl
xor
mov
lods
inc
roll
sbb
add
push
pusha
and
ljmp
loopne
popf
insb
ss
imul
xchg
add
xchg
and
and
or
xchg
loope
pop
mov
pop
fbstp
je
inc
nop
lea
sahf
mov
out
iret
mov
mov
push
leave
jge
loop
cmp
shrl
jns
fwait
sub
std
loop
add
data16
cmp
test
add
pop
test
pop
and
and
mov
nop
sbb
nop
add
scas
cli
fisttps
sbb
stos
sbb
cmc
or
scas
push
scas
xor
and
popf
fldl
addr16
cmpsb
int
or
mov
lds
or
in
cmc
adc
xlat
sbb
gs
adc
enter
mov
adc
mov
scas
mov
js
and
adc
bound
add
rcll
mov
shl
sbb
jecxz
imul
pop
sbb
mov
xor
push
rclb
dec
fsubrp
arpl
sti
mov
aam
lock
jbe
xchg
pop
ret
loopne
test
xchg
mov
jl
ds
add
fwait
jmp
clc
sub
arpl
in
js
fcoms
xor
daa
outsb
sub
imul
std
dec
add
imul
adc
xor
jecxz
sub
mov
jb
or
xchg
cld
and
sbb
lock
mov
xor
mov
scas
jbe
xchg
mov
mov
fs
push
pop
aas
adc
mov
add
add
int3
jns
sbb
mov
lods
or
fadds
inc
rorl
inc
lea
insl
push
inc
movsb
jbe
xor
jmp
cmp
aas
mov
fistpl
cmp
push
xchg
xor
lret
sbb
aam
sbb
ret
loope
mov
sub
movsb
mov
cmpsb
in
pop
cmp
inc
and
mov
xchg
pop
loopne
adc
loop
pop
push
fs
daa
add
in
and
sbb
mov
inc
inc
fwait
scas
call
xchg
jnp
jno
pop
lods
add
sbb
pop
add
mov
or
jns
cmp
pusha
add
mov
xor
movsb
jbe
sbb
or
movsb
cmp
stos
cs
ja
mov
outsb
mov
dec
movsb
push
scas
mov
cmp
loope
mov
add
xor
mov
dec
pushf
shll
imul
push
sbb
cmp
cmpsl
out
or
inc
mov
les
pop
pop
inc
xor
sbb
je
xor
dec
mov
jmp
mov
in
sbb
or
adc
aas
xchg
lahf
pop
push
outsb
mov
mov
int3
xchg
or
add
jbe
test
pop
add
test
mov
bound
enter
pusha
lods
mov
and
pop
or
addr16
popa
dec
inc
gs
dec
xlat
sub
sti
repz
insb
rclb
mov
sbb
cmp
lds
push
pop
mov
stc
sti
dec
cld
mov
je
test
imul
push
pop
xchg
insl
lds
xor
fcom
mov
ds
sub
addr16
sbb
test
sub
int
lahf
lock
jae
or
cmp
sub
std
out
push
add
jl
mov
fisubs
in
call
xchg
add
pop
test
adc
adc
jg
mov
into
jmp
mov
xchg
pop
ja
jecxz
sbb
jbe
xchg
cs
or
pop
ret
hlt
fdiv
dec
xchg
mov
mov
sub
imul
loopne
and
add
loope
arpl
rolb
pusha
push
mov
xchg
xor
or
push
in
pop
aad
add
mov
shrl
bnd
andb
jbe
mov
fucomi
inc
pop
cmpsl
inc
xchg
inc
popa
clc
cmp
ret
dec
sbb
arpl
test
pusha
mov
adc
mov
addr16
insl
stc
test
dec
pusha
into
out
call
pop
jmp
mov
js
pop
lock
inc
icebp
cmp
adc
xchg
lds
xor
scas
dec
mov
test
pop
loop
pushf
lahf
adc
fidivrs
pop
adc
pop
sbb
leave
out
ljmp
cmc
gs
scas
ret
test
push
loopne
jo
jge
and
stc
mov
out
pop
jno
jae
outsb
xor
adc
jp
adc
lods
jmp
scas
dec
jge
push
jmp
clc
cmpsl
bnd
fiadds
ss
out
jmp
push
lea
xchg
mov
scas
dec
jmp
cmp
cmc
jmp
cmp
leave
mov
dec
loop
lret
xor
ljmp
shlb
and
cmp
pusha
cmp
push
pop
imul
sub
out
icebp
jge
arpl
mov
loope
ja
inc
mov
insb
mov
subb
fidivl
sub
shll
adc
pop
sub
xchg
xor
jns
insb
mov
push
shrb
cmc
enter
mov
cmpl
fistpl
loop
mov
rcrl
fwait
dec
jb
mov
pushf
and
addl
cmpsb
stc
mov
adc
push
mov
data16
andl
out
inc
fnclex
pop
sub
fwait
xchg
jno
pop
push
or
pusha
mov
jns
popf
enter
scas
outsl
in
mov
jmp
shll
addr16
sarl
shrl
test
push
mov
and
and
test
jg
shll
repnz
inc
and
test
jge
fdiv
mov
xchg
cmpsb
loope
popa
inc
xlat
test
push
out
pop
mov
div
mov
scas
mov
outsl
mov
mov
outsb
or
ss
add
loope
ficompl
ljmp
ljmp
gs
jno
call
clc
sbb
inc
cmp
loopne
cli
popa
lahf
add
scas
movsb
mov
arpl
cmp
in
in
cltd
sub
mov
pop
pushl
cmp
add
hlt
addl
andb
or
sti
dec
push
dec
mov
daa
mov
or
cmp
pop
push
flds
xchg
inc
sbb
jg
cmp
pushf
add
mov
insl
lahf
jnp
data16
nop
xchg
scas
mov
add
out
mov
dec
outsl
adc
cmp
push
fisubrs
cmp
in
rcll
add
fs
xor
dec
daa
dec
mov
je
pop
adc
jae
sbb
pusha
loope
lret
cli
scas
fsts
mov
jnp
lret
mov
leave
push
movsl
cmc
std
ljmp
hlt
mov
imul
push
and
cmp
fdivs
in
in
ret
fs
cli
add
cmpsl
cmp
inc
aam
testb
dec
ret
clc
movl
dec
dec
daa
out
add
pusha
clc
and
add
sub
dec
and
mov
cmpsl
in
test
inc
out
xlat
ss
arpl
repz
outsl
xlat
outsl
cld
lock
mov
negb
ret
cmp
lods
jne
jmp
cld
dec
inc
outsl
dec
movsb
call
ds
leave
fbstp
int
out
push
pop
sar
add
repz
mov
inc
aas
pop
sbb
addr16
fiadds
loope
ds
and
pop
mov
lahf
gs
imul
lods
mov
inc
pop
and
xor
hlt
daa
addr16
loop
cli
jb
inc
and
popa
push
call
inc
shr
and
lret
bsr
dec
mov
in
jp
out
scas
and
loop
popf
mov
push
in
loopne
leave
and
xor
add
imulb
xchg
out
jl
insl
jno
push
jge
and
xchg
divl
jnp
inc
pop
arpl
rclb
jnp
sbb
rcrl
cmpb
shr
pop
cmp
and
mov
lahf
xor
nop
mov
dec
fxch
or
xchg
das
inc
xor
movsl
and
andb
push
or
shl
cld
push
out
pop
add
cmp
fdiv
arpl
pop
inc
stos
jle
pop
mov
out
fisubrs
jge
mov
push
pop
pop
orb
stos
dec
pop
fisttpll
test
hlt
imul
inc
out
in
mov
mov
gs
mov
mov
and
dec
roll
or
xor
test
ja
cs
cmpsb
das
lods
repz
add
out
inc
xor
daa
xlat
mov
out
pushf
stos
mov
push
cmc
push
pop
push
lock
sbb
sub
mov
cmp
jne
shl
add
dec
sbb
rcl
sub
jecxz
adc
daa
idivl
out
lahf
pusha
rcr
pushf
adc
cmp
fcmovne
sbb
fwait
jnp
adc
aad
cltd
push
cmp
jbe
push
adc
fs
icebp
sbb
cmpl
dec
into
es
cmpsb
sbb
pushw
add
ret
push
cwtl
push
inc
jl
hlt
icebp
adc
int
pushf
or
and
or
pop
leave
mov
sub
pushf
cmp
jnp
lcall
daa
push
mov
fisubrl
cmpsb
adc
jmp
lock
rep
sbb
push
pop
aas
and
mov
cmp
fildll
mov
mov
lods
insb
add
mov
sub
shl
out
mov
stc
bound
cmpsb
jne
fwait
movsb
repnz
ljmp
sub
sub
push
pop
mov
gs
add
stos
call
mull
icebp
mov
fld
jns
and
outsl
subb
jb
jae
inc
testb
sbb
imul
arpl
mov
sub
inc
mov
cmp
jnp
xor
mov
sbb
shlb
js
adc
rcll
rcrl
mov
and
inc
adc
sbb
pushf
sub
xlat
mov
add
int
xor
mov
or
or
adc
fsubs
adc
dec
pusha
cmpsb
xchg
add
and
jo
pop
pop
mov
repz
cmp
xor
test
nop
adc
outsb
cmpsl
pushf
out
sbb
test
lret
xor
pop
lret
arpl
mov
je
aaa
cmpsl
jnp
or
push
jns
sbb
or
sbb
lcall
clc
cmp
and
fldcw
xchg
xchg
in
mov
test
sub
ljmp
or
rorl
sti
push
xor
aam
daa
push
xchg
xlat
insl
lret
rcrb
and
mov
jo
or
lods
daa
mov
je
popf
adc
leave
mov
dec
mov
lock
xor
mov
movsl
fisttpll
out
aas
loopne
call
lock
mov
inc
or
lret
popa
sbb
pop
je
push
in
mov
jg
lret
cs
idivl
sub
pop
lods
std
mov
sbb
fsubp
xchg
jp
adc
xor
orl
filds
ret
aas
daa
mov
sahf
in
mov
and
mov
fwait
cmp
adc
out
mov
testb
cmp
xor
mov
mov
and
fnsave
mov
pop
lods
mov
adc
jp
in
add
les
or
and
js
inc
ljmp
in
js
and
mov
sahf
pusha
ret
int3
cmc
pushf
std
xor
mov
xchg
and
mov
in
test
pop
jns
add
addl
testb
dec
ljmp
inc
push
and
std
ss
add
dec
mov
loope
fsubl
stos
xor
int
adc
pop
mov
push
mov
xor
jmp
loopne
xor
or
adc
mov
cmc
dec
mov
sbbl
mov
int
inc
sbb
je
andl
push
loop
stos
cmp
aas
dec
in
pop
xchg
cltd
xor
fisubs
pushf
pop
arpl
xor
add
push
inc
sti
shll
dec
mov
shrb
adc
aas
xchg
push
push
push
dec
test
test
jno
scas
dec
movsb
repz
pop
in
xchg
push
or
push
jle
fldcw
dec
or
repz
lcall
sbb
xchg
push
sahf
xor
arpl
test
add
inc
testb
xor
sbb
push
mov
stc
and
push
daa
dec
xor
ja
inc
xchg
xor
dec
adc
mov
push
or
in
pop
leave
fisttps
ljmp
mov
sub
andl
and
popa
movsl
out
fidivl
xlat
mov
mov
mov
out
leave
dec
aas
sub
hlt
ficoms
inc
adc
hlt
push
mov
xchg
cmp
mov
out
jns
sbb
mov
push
sub
mov
fstenv
push
or
mov
dec
aam
ds
xchg
sarb
pop
mov
test
mov
pop
adc
leave
dec
hlt
out
movsb
inc
fwait
xchg
cmp
arpl
adc
dec
imul
aad
jo
mov
addr16
clc
out
xchg
mov
xchg
clc
mov
insb
lcall
pop
dec
outsl
adc
fdivr
cmp
out
push
scas
pop
outsl
mov
push
pop
ja
inc
lea
pop
push
call
or
movsl
xchg
lcall
sbb
movsb
mov
xor
pushf
pop
push
pop
in
mov
cwtl
shl
push
testl
jp
push
cld
xchg
repnz
xor
std
repz
fdiv
test
push
std
xorb
mov
ja
dec
fsubrl
xchg
lret
aad
fsubrs
mov
sbb
orl
adc
shl
jecxz
pop
add
shll
loope
ror
into
add
and
shlb
nop
int
mov
mov
add
fisttpl
imul
jge
mov
add
mov
cld
ds
cmp
fdiv
in
sub
adc
lret
stc
rcrb
pand
sahf
sub
pop
xlat
in
sarl
mov
add
iret
cmp
pop
mov
push
mov
jmp
aaa
sbb
imul
mov
xor
ds
lcall
inc
inc
mov
push
adc
mov
bound
push
xchg
cmp
icebp
addr16
mov
mov
ror
dec
jns
inc
mov
call
repnz
xor
jne
mov
cmp
mov
jne
sbb
hlt
jl
fwait
orb
add
cld
je
leave
pop
shl
dec
dec
lock
xor
ds
jg
mov
dec
fidivrs
inc
ja
ret
sub
xor
leave
ffree
out
or
xchg
dec
mov
test
sub
inc
pop
mov
sbb
repz
pop
push
mov
jle
pop
ficomps
and
push
sub
cltd
xchg
jge
jne
popa
ja
es
jmpw
push
mov
fnstcw
sub
pop
arpl
or
ret
aas
jns
fiadds
out
lahf
stc
mov
and
xor
push
or
sbb
es
xchg
aad
es
adc
push
cmp
out
popf
data16
push
pop
dec
lret
mov
push
rcll
pop
aam
test
sbb
imul
mov
mov
fstpt
push
cmp
mov
leave
icebp
add
mov
popa
cmp
cmpsl
out
jnp
lcall
andl
std
xchg
mov
sub
inc
mov
data16
or
lds
outsb
sbb
pop
push
xor
mov
std
rcrb
dec
add
xchg
adc
sbb
cmp
push
xchg
add
aad
xor
or
popf
push
in
mov
adc
leave
jbe
sbb
and
loopne
push
leave
mov
jbe
dec
push
test
mov
jmp
icebp
dec
decb
das
rolb
xor
cltd
loopne
and
push
fnstenv
xlat
popa
out
dec
xchg
or
das
xchg
cmp
aad
and
mov
sub
cmpl
pop
cmp
mov
sbb
int
mov
cltd
mov
mov
insl
pop
das
arpl
mov
mov
push
sbb
mov
mov
sbbl
in
movsb
push
push
pop
and
push
or
adc
rcr
add
jl
add
add
xchg
sti
mov
push
adc
je
jge
or
dec
jns
mov
xlat
and
bnd
repz
mov
lea
xchg
sub
xchg
stos
mov
jmp
lcall
bnd
shl
aaa
mov
mov
dec
push
ja
pop
push
mov
in
fiadds
jne
arpl
jns
lock
mov
lods
scas
xor
int3
outsb
std
dec
imul
xor
shll
mov
daa
pop
cvtdq2ps
mov
adc
mov
mov
mov
jne
xchg
pop
and
pop
jo
xchg
stos
adcb
xchg
xorb
movsl
push
adc
mov
mov
adc
or
jle
push
out
jne
sbbb
mov
mov
jl
dec
pop
pop
ss
push
loope
and
loope
in
jne
xlat
bound
sub
insb
adc
dec
fldt
aad
fbld
sub
mov
test
mov
sbbb
sbb
lods
insb
mov
mov
bound
lret
inc
push
mov
stos
xlat
int
dec
xor
pushl
int
insb
subb
cmc
sbb
xchg
pop
inc
pop
xchg
lahf
xor
rorl
sarb
and
cwtl
cmp
cmp
and
je
in
mov
icebp
push
jae
xor
sub
mov
mov
add
lea
cmp
xor
push
jmp
xchg
jae
dec
xchg
rcl
idivl
fnstcw
rclb
xchg
lahf
and
jg
or
cmp
inc
inc
sub
pop
sbb
cmp
dec
data16
lds
insb
icebp
mov
add
inc
ss
inc
and
inc
faddl
xor
xchg
cmp
mov
fistpl
ljmp
sti
idivb
incb
adc
xchg
mov
mov
adc
nop
loop
mov
adc
mov
in
xchg
cmc
test
mov
push
dec
insl
dec
jecxz
mov
outsl
jl
mov
out
mov
xchg
push
push
stos
xor
mov
cmpl
stos
jge
dec
sbb
jns
jnp
push
jne
jp
clc
sarl
pop
cmp
mov
mov
into
loop
or
add
stos
imul
out
int
sbb
mov
mov
mov
sbb
nop
nop
sbb
xlat
sub
cmp
lret
mov
xor
sub
xor
add
arpl
sbb
pop
or
shlb
aam
stc
mov
lods
daa
cld
and
mov
adc
mov
mov
iret
or
xor
jb
sub
and
xor
stc
pop
jge
rolb
mov
fdivrl
into
enter
sub
xchg
scas
int3
fwait
dec
dec
jns
mov
push
iret
orb
ljmp
cs
stos
jl
in
stos
xchg
std
push
pusha
in
cmp
and
and
or
stos
loope
popa
jbe
int3
imul
sbb
fldenv
push
mov
cmp
int
popa
jns
imul
xchg
in
jnp
adc
ss
or
mov
mov
sbb
rorb
js
dec
int3
pop
pop
ret
leave
lods
or
pop
pop
add
and
push
mov
add
mov
cmpsb
adc
and
adc
mov
pop
mov
sbb
stos
sbb
lahf
scas
push
lea
cmp
dec
xor
push
jmp
sub
lods
lahf
loop
xlat
ja
cli
xor
pusha
add
fst
cld
repz
bound
xchg
rolb
mov
xchg
out
les
jns
push
xlat
mov
pushl
and
sbb
pop
sar
sub
push
arpl
xchg
sub
inc
add
sbb
jns
pushf
xchg
mov
addr16
mov
push
lret
cld
rorb
and
sti
aas
or
imulb
and
sbb
mov
mov
adc
dec
push
cs
mov
push
insl
inc
add
stos
ret
bound
sbbl
mov
dec
aaa
cmc
pop
push
popf
jecxz
pop
and
jne
push
mov
enter
xadd
loop
push
aaa
into
test
inc
test
inc
xor
sub
sub
rcrl
jle
jbe
mov
loop
sbb
mov
lret
adc
inc
jns
pop
mov
xchg
pusha
xchg
arpl
xchg
shlb
push
fdivl
js
loopne
sbb
or
xor
sbb
lds
fistl
mov
imul
lods
loop
pop
pop
insl
faddl
ljmp
jge
add
xchg
inc
inc
test
shll
and
adc
lcall
fimull
adc
fcmove
mov
adc
rolb
push
cmpsb
mov
in
xchg
mov
mov
sti
add
jns
lods
lods
inc
adc
xchg
cld
clc
sub
push
pop
pop
jmp
cmp
mov
pop
xor
push
movsl
lds
inc
pop
mov
nop
ds
jnp
jp
push
shlb
mov
pop
pushf
addr16
jl
into
add
movsl
jno
xchg
and
loop
xor
push
test
mov
testl
test
mov
in
add
aad
sti
loop
xor
clc
or
out
addr16
inc
aaa
and
adc
jg
arpl
enter
and
sbb
pop
clc
stos
lahf
shrl
fadds
jns
out
int
mov
push
leave
adc
mov
mov
clc
fstp
and
and
int
or
dec
pop
aaa
stos
hlt
cmc
sbb
pop
or
xor
push
xchg
jno
shl
jnp
mov
arpl
bound
dec
cmp
pushf
repz
xchg
or
jb
jnp
xchg
xor
mov
jne
and
sub
rcll
add
push
pop
inc
mov
scas
pop
or
mov
pop
mov
mov
cmp
stos
ds
in
pushf
xor
sub
movsl
dec
ds
xchg
ss
outsb
fmul
sub
sahf
pushf
inc
dec
pop
or
mov
add
into
jae
call
jle
sub
scas
cmc
pop
mov
inc
lret
xor
aad
movsl
jmp
xchg
or
bound
xchg
daa
hlt
loope
mov
lock
lahf
add
icebp
incl
sub
out
adc
sub
cmp
imul
mull
nop
sbb
pop
pop
mov
dec
pop
xchg
out
sub
inc
xchg
or
testb
cmp
mov
push
push
movsl
dec
xor
shl
mov
mov
inc
push
sbbb
pop
mov
pop
in
jns
repnz
inc
inc
arpl
or
leave
jne
push
or
cmpsb
xchg
fstpt
or
mov
imul
inc
dec
lahf
xchg
dec
out
sub
stc
sbb
int
movb
into
xor
ficompl
lods
cmpsl
addr16
hlt
push
out
fsubrl
inc
test
shlb
test
sbb
insl
xchg
push
ficoms
dec
dec
in
inc
out
mov
pop
mov
loope
mov
inc
into
mov
mull
cmc
sub
dec
push
adc
inc
clc
xchg
ds
jnp
dec
pop
cmpsl
mov
xorl
push
push
int
and
push
in
aam
jle
mov
fsubr
and
aam
orb
rorb
xchg
cmpl
add
pop
imul
adc
addr16
push
pop
mov
mov
inc
dec
das
mov
incb
imulb
xchg
in
lret
add
adc
das
rorb
inc
jne
insl
adc
daa
xchg
mov
or
xchg
insl
lcall
mov
js
mov
lods
jg
jo
js
jo
sub
mov
pop
sbb
test
gs
xchg
jo
xor
inc
mov
push
pop
mov
push
inc
imul
les
pop
testl
jno
pop
xchg
add
movsb
sbb
shrb
nop
fistl
icebp
ljmp
push
or
gs
sbbb
int
lcall
pop
scas
push
pop
ficomps
cmpsb
xor
jnp
and
xchg
mov
ljmp
and
sar
popaw
xchg
jno
cli
sbb
push
hlt
cmp
cmp
push
inc
xor
and
test
dec
push
repnz
popf
ja
mov
or
xor
sbb
xchg
xor
adc
int3
push
and
enter
push
push
inc
pop
push
ds
popf
mov
hlt
jmp
enter
aas
add
repz
push
add
add
mov
lret
cmp
xchg
jbe
into
or
cmp
ret
mov
inc
xor
lret
cltd
xchg
pushf
leave
test
loope
mov
repz
xor
xchg
adc
andl
fildll
imul
cmc
mov
pushf
cmpsl
cmp
in
push
imul
mov
or
mov
scas
xchg
aas
cltd
sub
push
mov
dec
push
inc
fwait
xor
dec
pop
cmpsb
lock
adc
repz
gs
mov
aad
std
sub
add
push
push
mov
bound
jno
ret
int
push
and
and
cmp
cltd
adc
cmp
or
fmuls
adc
ret
mov
scas
pop
sub
roll
inc
imul
shlb
sysexit
pop
pop
sar
popa
add
xchg
das
jne
mov
xchg
outsb
pop
daa
cltd
cwtl
sbb
insb
lcall
mov
cmp
dec
shrl
sbb
clc
rcrl
test
jge
inc
push
jnp
inc
jno
mov
jmp
mov
pop
jno
or
inc
pop
repz
mov
stc
out
adcl
or
xchg
xchg
enter
adc
mov
jmp
adc
push
add
popa
add
inc
arpl
subl
cs
int
xchg
cmp
dec
xchg
clc
inc
test
js
sub
cwtl
sti
mov
js
and
dec
sti
jecxz
add
movsl
add
in
add
pminsw
leave
test
outsb
xor
pop
adc
incb
cmpl
xchg
fs
xchg
push
adc
imull
jnp
jae
cmp
mov
or
mov
jno
imul
loopne
rclb
aad
add
jmp
aam
adc
add
pop
in
sahf
loope
add
in
rorl
dec
and
loope
insl
push
push
jge
das
insl
and
jae
cli
dec
inc
pop
loopne
mov
loope
mov
call
mov
lods
std
fbstp
jns
xor
push
lcall
je
bound
mov
cmpb
arpl
scas
lcall
test
into
inc
les
mov
xchg
popa
cmp
sub
imul
sub
mov
aas
adc
loopne
lahf
mov
lods
shlb
lahf
push
lods
mov
movsb
rcll
in
jae
lcall
cmc
dec
push
push
jge
jnp
out
mov
insb
stos
inc
cmp
test
and
mov
scas
test
add
fcomps
sub
daa
cmpsb
jns
push
xor
outsb
sub
fwait
pop
ljmp
stos
dec
and
daa
lret
sti
mov
mov
push
shl
or
lods
shl
jecxz
fisubs
push
adc
mov
sub
out
and
andb
mov
xchg
cmpsl
fstl
cltd
mov
shl
and
pusha
jle
mov
scas
mov
mov
adc
pop
iret
popa
sti
insb
out
rcrl
push
adc
dec
cmp
or
add
mov
movsb
stos
test
jmp
cld
ret
jge
mov
cmc
sbb
stos
lret
jbe
dec
test
push
fnstcw
add
insb
leave
inc
xlat
sbb
adc
jl
lcall
pop
addb
mov
imul
pushf
movsl
and
popa
pop
cmp
cltd
scas
loop
pop
pop
jmp
dec
adc
sbb
dec
mov
pop
ret
cmp
xchg
lock
popf
jbe
jbe
or
xor
loop
jb
in
orl
xor
xor
xor
stc
ret
pop
jmp
loope
ret
push
sahf
rcl
fstps
fdivs
xchg
pushf
add
pop
inc
shlb
data16
in
xlat
mov
in
in
lahf
mov
sbbl
imul
xor
inc
jmp
stc
mov
loopne
adc
bound
cwtl
repnz
lods
fcoms
xchg
lret
cmp
push
fwait
out
insb
das
sbb
push
push
jecxz
divl
stc
mov
ret
mov
fisubrl
cld
loop
push
repz
mov
jmp
mov
fwait
dec
xchg
in
in
loope
ficomps
mov
mov
cwtl
inc
push
stos
outsb
dec
cmpsb
add
cld
cmp
and
mov
lret
pop
mov
insl
and
shll
lfs
inc
stos
jmp
cmp
fldcw
ret
push
arpl
push
sar
jp
dec
sub
jecxz
mov
in
xchg
iret
hlt
xor
ror
mov
and
call
push
cli
xchg
aad
dec
sbb
mov
add
jp
and
sahf
nop
inc
imul
outsl
pop
inc
add
jp
cmpsb
ret
sub
ret
and
xor
in
lahf
jg
out
out
push
inc
andl
jae
dec
out
es
inc
xchg
jno
pop
pop
push
repz
rol
mov
mov
mov
mov
add
in
dec
add
sahf
push
xlat
or
fwait
cs
outsl
fs
push
or
inc
rcrl
sub
pop
mov
sub
jbe
sbb
xchg
adc
stc
int
pop
lret
cmp
cwtl
lds
dec
shll
cli
mov
std
imul
mov
add
push
call
cmpsl
ss
cmpsb
push
or
jnp
divl
inc
adc
aaa
stos
jbe
test
loope
jecxz
pop
dec
roll
mov
and
dec
ss
fmull
icebp
inc
or
jl
mov
pop
and
cmp
pop
nop
jmp
rcrl
clc
mov
pop
add
add
sub
xchg
outsb
rcr
jns
and
adc
inc
push
pop
dec
aas
mov
jp
mov
sbb
sbb
repnz
insb
in
das
fmull
adc
std
into
leave
faddl
cwtl
adc
push
lahf
test
mov
jo
mov
orl
push
push
in
icebp
out
cmp
fs
or
dec
adc
mov
leave
jmp
cs
cmp
add
sbbl
inc
stos
inc
mov
fidivrs
mov
add
dec
adc
pushf
iret
push
cmp
movsb
push
hlt
sub
push
insl
je
lods
lahf
mov
push
push
outsb
xorb
sbb
orb
lea
addl
mov
push
out
dec
lock
push
aas
out
adc
test
and
jb
push
popa
sbb
mov
dec
xchg
sahf
pusha
xor
hlt
cmp
mov
sti
rolb
ljmp
std
rorl
js
jge
xor
dec
mov
leave
mov
loopne
sub
std
adc
mov
hlt
or
ja
shrl
sbbl
scas
loopne
icebp
in
and
xchg
out
fistps
mov
mov
lcall
mov
nop
out
data16
sub
lods
ds
rorl
sbb
or
insl
les
sbb
adc
or
and
in
fsubs
jp
lea
icebp
in
test
dec
idivb
popa
sbb
jne
sbb
xchg
outsb
xor
pop
pushf
add
mov
std
mov
mov
std
imul
xchg
dec
scas
sbb
outsb
sarb
clc
scas
adc
cmp
mov
aad
imul
and
xchg
push
aam
testb
adc
mov
pop
enter
inc
sub
shl
es
in
leave
dec
inc
dec
insl
push
lret
movl
es
pop
inc
hlt
push
je
stos
mov
repnz
xchg
ds
imul
push
insb
jbe
orb
jecxz
push
xchg
jmp
cmc
in
mov
sbb
loop
dec
movsb
ds
inc
add
xchg
mov
sahf
fdivp
mov
sbb
mov
scas
jmp
in
push
dec
out
mov
add
out
cmp
push
xchg
xchg
std
dec
mov
fwait
sti
cmpsl
sahf
push
out
cmp
push
stc
push
jb
lret
push
loope
ja
iret
pusha
test
popf
push
adc
cmovbe
cmp
lods
mov
mov
cmp
mov
jbe
testb
mov
sub
shrb
sti
jns
cmp
sub
dec
shr
adc
or
xchg
ret
or
insb
mov
mov
loope
mov
rclb
adc
jae
leave
push
jl
mov
stos
and
cmp
rolb
inc
push
sub
scas
mov
xchg
lock
xor
in
pop
mov
dec
jg
cmp
imul
mov
adc
jbe
movsb
jb
or
sarb
loop
mov
das
sbb
cmpsl
cmp
mov
and
jle
push
adc
mov
aas
cli
rorl
scas
scas
push
mov
dec
aaa
xchg
pop
ljmp
or
cmpsb
mov
clc
xchg
insl
mov
fbstp
cmc
jae
fcoms
add
hlt
rclb
dec
mov
cld
jle
add
pushl
les
xchg
inc
sbb
adc
fistpl
jge
dec
je
loop
test
mov
xchg
stos
pop
mov
shl
push
cmp
xor
mov
push
out
mov
movsw
out
test
out
pushf
pop
sbb
pop
outsl
mov
stc
std
insl
sbb
mov
aaa
decl
loope
movaps
mov
cbtw
in
popa
push
inc
js
mov
cld
test
or
lods
movsb
test
es
xor
and
mov
sbb
add
add
dec
mov
mov
adc
adc
add
stos
test
ret
push
fmull
push
test
xor
mov
xchg
xor
in
stos
rolb
push
into
call
jecxz
aad
mov
jbe
add
mov
rcll
outsb
adc
sbb
inc
xchg
clc
xchg
xor
xor
popa
movsl
cld
mov
add
add
jmp
xlat
dec
popa
dec
icebp
adc
cld
lock
or
jle
jmp
pop
mov
out
jno
dec
ljmp
ret
aaa
dec
pop
int3
adc
sub
mov
add
xchg
dec
out
popf
repnz
test
mov
mov
or
inc
sbb
inc
cmpsl
idiv
jae
cltd
cli
push
cmc
pop
les
js
out
add
sub
sbb
ror
mov
add
jno
mov
jl
inc
aaa
push
xor
sahf
jl
adc
dec
cs
ss
pop
call
pop
dec
jnp
outsl
pop
or
pushf
cmp
addr16
cmpb
jle
pop
sub
test
in
dec
sub
mov
imul
dec
sub
mov
dec
pop
mov
lahf
out
loope
mov
addb
inc
push
and
xchg
jle
lahf
leave
imul
push
test
xchg
pushf
pusha
cmp
les
mov
movsl
pop
test
lahf
adc
xchg
ds
jge
mov
movsb
dec
sub
cmp
lds
adc
std
dec
sbb
jnp
int
fidivs
loop
push
ss
cltd
scas
imul
add
stos
ljmp
fsubl
adc
lods
fwait
or
pop
les
js
dec
cmpsb
inc
jl
push
clc
pmaxsw
lret
xor
dec
xor
jo
push
retw
outsb
and
fbstp
mov
sarl
push
and
push
inc
insb
jp
dec
insb
mov
out
fidivl
or
js
test
jbe
adc
pop
mov
adcl
iret
mov
jne
into
sbb
xlat
push
push
ljmp
sbb
ja
fsts
adc
dec
je
sbb
lret
mov
scas
pop
push
imul
xor
pusha
cmp
ss
pop
fbstp
loop
fadd
xchg
mov
stc
sbb
inc
cli
pop
loopne
into
push
push
pop
sub
imul
sbb
cmp
mov
dec
and
cmp
or
xchg
add
adc
orb
mov
cwtl
sar
cmp
lret
cmp
mov
int3
dec
push
mov
fldenv
xchg
inc
mov
inc
pop
push
xor
or
out
in
jmp
out
mov
jbe
dec
enter
lods
cwtl
xchg
mov
leave
or
aaa
shlb
inc
ss
xchg
das
dec
or
scas
push
pop
xchg
into
xchg
stc
sbb
fcomps
mov
setl
mov
jmp
out
sbb
lret
cli
fwait
jno
stos
or
mov
push
out
repz
mov
adc
jp
insl
icebp
test
mov
mov
fstpt
mov
fnstsw
outsb
adc
push
out
xor
push
pushf
in
out
aam
sub
out
mov
or
jo
ret
cmp
movsb
test
js
push
lcall
mov
mov
cld
jmp
inc
cs
out
xchg
sub
dec
push
leave
and
jb
xchg
int
adc
pop
inc
lcall
push
loope
mov
push
push
add
mov
or
lea
xchg
jle
rorb
and
xor
adc
mov
push
mov
jno
test
inc
lds
pop
call
add
mov
inc
mov
adc
clc
xor
movsl
leave
shr
inc
and
loope
push
pop
pop
xchg
jae
stos
cmp
push
mov
xchg
xchg
jp
hlt
shl
sbb
lods
mov
xchg
shll
sub
mov
clc
lods
hlt
in
ljmp
cmp
addr16
inc
aas
jg
fwait
mov
scas
outsl
mov
fs
jne
push
inc
pop
pop
ljmp
jmp
arpl
inc
pop
divl
sub
xchg
sbb
mov
and
shll
mov
fwait
add
ja
ja
jae
repz
xor
mov
push
adc
adc
mov
mov
sbb
xchg
mov
fisubl
std
ss
test
inc
xor
sbb
idivb
mov
push
ljmp
enter
adc
jae
scas
pusha
xchg
push
mov
pushf
lds
push
pop
push
mov
sbb
push
and
aaa
jmp
cmp
push
pop
and
rclb
pop
sub
out
into
cmc
mov
lock
xchg
push
addr16
cwtl
test
aaa
dec
test
adc
adc
pop
xchg
or
lcall
into
fidivrl
fildll
lods
aaa
xlat
jo
scas
push
xchg
imul
xor
test
push
jbe
cmp
mov
outsb
test
push
gs
in
xlat
sub
sahf
xor
sbb
sbb
daa
mov
lods
movsl
fisttps
repnz
sub
in
int3
lcall
insl
xchg
popa
bound
inc
test
test
mov
push
negl
jne
pop
fs
cmp
les
rorb
enter
mov
or
push
cmp
dec
lahf
fs
stc
push
popf
pop
and
mov
mov
pop
push
mulb
xor
popa
bound
enter
mov
into
shll
test
loope
pop
push
xchg
push
aam
lret
iret
lods
fstps
cmpsl
adc
xchg
add
out
and
cmp
push
scas
fcoms
pushf
adc
jmp
dec
daa
mov
pusha
stos
pusha
and
es
jge
out
sahf
dec
xor
cs
lret
sub
inc
addr16
jge
xor
sbb
or
adc
arpl
in
ret
lret
or
aam
fs
adc
shrb
cmp
ss
push
fnsave
push
popf
aam
shrl
inc
mov
jae
mov
dec
adc
dec
mov
addr16
add
enter
dec
mov
dec
adc
fidivrs
sub
dec
sub
in
rcll
sub
xor
shrb
loop
dec
aaa
leave
lret
faddl
sub
dec
fucomi
addr16
mov
mov
lock
dec
cltd
out
lds
jo
bound
aam
daa
push
and
and
xchg
inc
jo
dec
jl
ljmp
sub
out
add
inc
pusha
cmp
dec
mov
fdivp
insb
outsb
fstps
jl
jo
mov
cmp
mov
sbb
mov
jae
or
test
inc
jbe
xor
scas
mov
sarl
push
jmp
mov
dec
or
jbe
pop
push
mov
hlt
test
cmp
mov
sub
cmp
shll
repnz
mov
push
fisubrl
mov
out
loopne
into
cmpsb
pop
repz
outsb
dec
out
mov
stos
clc
popf
ss
fstp
adc
fs
mov
mov
xor
sub
bound
clc
sub
cmp
xor
outsl
push
and
hlt
dec
inc
ret
cmp
inc
inc
popa
mov
jl
es
out
out
imul
lcall
sbb
pop
jp
lret
xor
jecxz
jnp
hlt
lods
xchg
xchg
mov
mov
lds
and
mov
mov
sub
mov
das
icebp
int
addr16
add
add
push
xchg
fidivl
cmp
das
scas
cmp
push
cmp
popf
pop
sti
repz
jnp
call
or
sbb
or
add
nop
mov
pop
push
cmp
dec
jb
cmp
jmp
into
aam
mov
popf
or
imul
ficompl
push
fcomip
push
and
xchg
or
jmp
test
dec
incl
dec
mov
fisubl
inc
rol
out
ds
addr16
dec
mov
xor
sahf
sub
lock
sbb
subb
daa
lods
mov
xchg
xchg
push
jne
sbb
jmp
mov
mov
mov
in
cs
mov
lock
std
or
sub
add
or
into
popa
xlat
cmp
pusha
pop
dec
fs
scas
inc
mov
xor
lcall
jb
icebp
pop
and
cmp
cs
loope
push
loopne
bound
mov
jp
rorb
push
fwait
xchg
lcall
cmp
adcb
jne
or
mov
lods
mov
inc
xchg
inc
daa
cs
lret
or
xlat
mov
pop
dec
lahf
and
mov
sbb
lcall
mov
sti
push
fucom
stc
bound
aad
ss
sub
cmp
xor
dec
mov
pop
pop
xchg
xor
cmc
mov
pop
or
cmp
repz
and
lods
push
ret
jecxz
loop
mov
push
outsb
mov
pusha
xor
sub
mov
nop
dec
fbstp
test
ljmp
dec
sub
mov
fidivrs
int
repnz
lods
fstpl
cmc
mov
lock
lods
push
int
mov
pop
sub
iret
aaa
jbe
aaa
xor
push
jns
pushf
ds
add
in
popa
callw
xorl
pop
push
sbb
adc
mov
or
pop
lcall
push
les
jl
push
push
adc
mov
int3
xor
das
inc
out
mov
jmp
out
xchg
test
mov
push
xchg
out
adc
mov
inc
jg
out
ror
push
and
call
add
js
add
rclb
sbb
inc
jge
dec
push
xchg
arpl
and
data16
dec
xor
js
xchg
add
sbb
ret
call
pop
lret
lock
outsl
insl
sub
inc
js,pn
shlb
push
fildl
jb
mov
sub
and
ror
mov
arpl
xchg
pop
lret
stos
mov
jmp
cmp
aad
pusha
inc
in
hlt
cmp
adc
pop
mov
mov
pop
push
mov
cmc
mov
fildl
mov
and
stc
roll
xchg
nop
xchg
add
lods
movsb
stos
ret
in
mov
loope
lods
fcoml
cmp
jle
lahf
xchg
mov
ljmp
data16
stos
cmc
jge
imul
hlt
cmp
pop
mov
mov
dec
fcmovbe
ljmp
dec
fadds
scas
xchg
xchg
gs
jge
push
test
lds
cmp
mov
fimuls
sti
int3
xor
inc
inc
push
xor
xor
mov
daa
jne
lea
div
push
cltd
jmp
jmp
rcr
clc
dec
or
test
arpl
fistpl
pusha
push
pcmpgtw
dec
adc
ret
fucomp
mov
lret
shrl
inc
fwait
pop
dec
push
sub
cltd
or
mulb
jmp
das
test
fmull
sbb
cmpsb
fucompp
pop
jg,pt
push
add
outsl
mov
repnz
cwtl
leave
and
in
pop
add
sbb
jno
jl
lea
ljmp
inc
ds
cmp
insl
into
mov
rolb
xchg
xchg
xor
repz
xchg
cmp
punpckhdq
add
orb
add
ret
popf
div
jns
int3
inc
aad
xchg
add
shlb
or
sar
mov
dec
sub
repz
cwtl
lcall
sahf
test
mov
cld
inc
add
sub
rolb
ja
aaa
cmp
jb
andb
dec
inc
sbb
das
jg
dec
xchg
out
sti
rcr
mov
cmp
or
push
stos
xor
loopne
pushl
cmpb
mov
addl
xchg
negl
xor
movsl
mov
insb
out
adc
sti
cmp
stc
rcrl
adc
loop
sbb
gs
sbb
cmpsl
fcmove
jns,pt
dec
dec
scas
add
pop
mov
lret
inc
mov
dec
aaa
xor
and
mov
xchg
test
leave
scas
imul
jne
inc
inc
or
inc
pop
imul
lods
xor
push
jbe
pushf
cltd
and
lea
or
call
shrl
adc
push
or
movsl
or
or
cmp
dec
xchg
pop
in
je
sub
jns
mov
jns
sti
pmulhuw
sbb
aas
jecxz
mov
inc
out
scas
lea
add
sub
mov
loop
mov
jnp
dec
pusha
inc
inc
xchg
or
adcb
roll
mov
insb
sbb
in
add
popf
sahf
out
loopne
cmp
ds
push
dec
cmp
sbb
stos
cmc
cmc
addl
mov
fnstsw
lods
ss
cmp
test
or
fnstcw
dec
test
ret
push
xchg
pop
addr16
aas
mov
mov
mov
add
xchg
inc
sbb
movsl
stos
punpcklbw
sbb
leave
icebp
sbb
lock
mov
sbb
push
mov
pop
cmc
aaa
mov
push
lret
aam
daa
inc
cmc
xlat
cmpsl
ret
jo
shrl
dec
sub
add
inc
or
push
outsl
jb
loopne
mov
adc
and
into
xor
mov
rcll
cs
mov
dec
leave
cmc
xchg
jae
or
push
orb
dec
push
lret
xor
push
js
pop
mov
or
dec
pop
dec
shll
out
dec
adc
cmp
mov
xchg
push
push
pop
push
and
dec
mov
int3
in
ss
push
jmp
dec
gs
jmp
aam
lds
cmp
int
hlt
xor
dec
add
setnp
popa
mov
movsb
repnz
outsb
pop
sub
fcmove
push
mov
pop
push
mov
push
std
mov
jo
xchg
mov
daa
xor
lods
call
shrb
cmp
shrl
pop
pop
jo
adc
dec
mov
sbb
fisttpll
xchg
jne
aaa
shrl
and
daa
or
or
loope
xchg
outsl
xor
and
imul
outsl
cmp
out
cmp
loop
insl
out
xor
stc
jl
push
inc
jno
cli
out
je
pop
gs
mov
scas
pop
es
mov
cwtl
clc
add
lods
mov
inc
mov
adc
mov
hlt
mov
loope
and
dec
jne
sahf
sub
cmp
cwtl
inc
mov
inc
sarb
xor
or
movl
cmp
push
aad
je
popa
sbb
icebp
cmp
mov
in
xlat
imul
sub
mov
push
mov
push
sub
movsb
jle
pop
push
loope
xchg
sarb
je
mov
mov
inc
mov
mov
dec
xchg
jl
stos
jbe
fldenv
xchg
mov
enter
idivb
leave
mov
out
pusha
mov
sub
sbb
cwtl
lds
inc
andl
dec
sub
bound
xchg
scas
test
lods
in
ja
std
rdmsr
inc
out
lods
mov
xchg
jno
cmp
push
mov
in
loopne
int3
and
inc
xor
movsl
mov
push
shr
mov
lock
rep
push
jb
xor
xchg
sbb
push
rolb
cmc
nop
push
pop
cmp
repz
sbbl
mov
mov
lods
call
push
arpl
adc
adc
dec
lret
loopne
loopne
sub
inc
push
popa
adcl
insl
sti
jge
lret
mov
push
and
cmc
test
mov
push
sbb
enter
xchg
fabs
or
pop
cmpsb
fisubs
leave
pop
out
xchg
xor
sub
mov
cmc
mov
inc
aaa
pop
lea
mov
mov
add
or
push
sub
rcrb
push
and
dec
xor
dec
rcrl
call
mov
pusha
push
pop
repnz
adc
lock
dec
rcr
icebp
in
imul
jbe
test
test
test
shl
lods
insb
arpl
inc
imul
add
loopne
mov
lea
xor
adc
mov
sub
cli
push
insl
xor
xlat
push
mov
sbb
inc
fistpl
sahf
push
jle
inc
pushf
aad
aam
leave
test
push
orl
adc
mov
jge
fcmovne
sub
xor
xchg
push
mov
leave
mov
stos
in
divl
xor
inc
jmp
ds
and
rolb
hlt
aas
adc
adc
mov
stos
xor
and
inc
mov
dec
add
lods
cmpsb
stos
sbbl
or
cmpsl
cmp
shlb
sub
ret
dec
mov
xchg
pusha
fisttpl
cwtl
sbb
push
test
lea
mov
leave
or
outsb
rorb
push
stc
pop
mov
ljmp
stc
addb
sbb
dec
popa
and
inc
lods
mov
outsb
mov
pop
in
pop
daa
pushf
sti
push
repz
xchg
out
ret
gs
stc
adc
sub
popa
and
adc
ss
mov
test
fdivs
das
mov
inc
pusha
mov
dec
cmpsb
push
xchg
mov
pop
mov
xchg
xor
and
ret
jmp
loope
fstp
sbb
cmpsl
jl
push
mov
cmp
xor
pop
test
iret
sti
adc
cmpsl
mov
arpl
push
andl
push
inc
mov
cltd
fisttpl
xlat
mov
sub
pop
jmp
ljmp
push
mov
sub
mov
mov
into
adcb
mov
mov
imul
in
data16
mov
pop
xor
movsb
fcomp
scas
push
fsubrp
es
fcomi
add
mov
daa
movsl
sub
mov
retw
sbb
inc
mov
stc
adc
mov
jmp
fidivrl
inc
inc
cmp
push
push
cli
cmpsb
or
ljmp
out
cli
bound
or
cli
not
push
je
loop
insb
pop
adc
iret
jae
sub
pop
mov
insb
add
or
add
std
xchg
loop
push
mov
testl
pusha
popa
stos
mov
mov
mulb
adc
jmp
xchg
sbb
mov
outsb
xchg
pop
imul
jnp
jnp
pop
xchg
jns
inc
mov
push
xchg
scas
cwtl
fcompl
jno
xlat
iret
aad
fs
cmp
pushf
push
push
stos
and
sub
cmp
das
fld
lods
sar
test
subb
jne
cmpsb
mov
test
dec
jnp
addb
test
cmp
jge
push
lret
or
popa
lea
adcb
cmp
jne
scas
xor
xor
and
in
dec
outsb
push
out
loope
push
xor
push
xchg
sbb
lret
jb
popf
sbb
out
adc
cmp
hlt
add
repnz
xor
sahf
sub
inc
jns
dec
add
dec
jno
movsb
sbb
dec
fadd
inc
mov
adc
add
xor
pop
or
sbb
sti
xchg
fdivl
loope
pop
les
lret
hlt
lea
jns
lret
xchg
ljmp
gs
das
test
movsb
sar
cmp
popa
add
adc
inc
fwait
dec
dec
jne
mov
add
ds
movb
outsb
mov
lcall
push
xor
clc
dec
xor
push
shr
jl
mov
cmpsb
enter
es
gs
in
out
mov
popa
mov
das
add
pop
ret
sub
fbld
mov
pop
fiadds
xor
loop
dec
imul
loope
out
ret
outsb
into
lock
sub
push
inc
leave
and
jge
cmp
loop
icebp
mov
scas
mov
pop
dec
ret
xchg
inc
ret
or
adc
iret
jle
jne
and
sub
std
data16
jno
out
out
push
mov
cwtl
ret
out
inc
movsl
jmp
cli
mov
inc
aaa
jae
sub
jle
movl
sbb
repz
jecxz
hlt
mov
jle
es
push
ss
mov
add
lcall
cltd
cmc
mov
mov
jge
data16
or
cmpsb
cmp
bound
fistps
nop
jno
mov
mov
scas
ror
fistpl
loop
push
in
jmp
sub
insb
cmp
dec
mov
movl
lret
ss
or
std
ds
xor
adc
ds
mov
pop
cltd
pop
shrb
insb
inc
mov
push
mov
stos
loope
push
imul
add
out
stc
ss
fildl
js
pop
pop
std
scas
pop
enterw
xor
pushf
mov
cs
ss
cmp
jb
mov
popa
add
cli
mov
sbb
cmp
fistpll
jae
inc
adc
rcll
inc
mov
or
add
adc
cmp
and
cs
mov
adc
cmp
clc
jb
push
ret
mov
add
mov
dec
imul
cmp
les
sarb
cli
pop
cmp
sahf
insb
xor
push
cltd
std
sbb
push
adc
cmpsb
adc
les
shlb
dec
xor
imul
jns
adc
or
hlt
js
popf
stos
xor
and
xor
mov
mov
mov
sarb
aad
shr
dec
pop
shrb
les
inc
aaa
push
dec
lock
xor
sub
popf
dec
sbb
mov
test
and
and
pop
adc
pop
pusha
inc
loop
and
hlt
test
insb
xor
inc
push
push
cmp
lret
add
mov
je
rcrb
xchg
push
push
xor
mov
adc
sarb
dec
mov
pop
dec
mov
cwtl
mov
pop
and
or
aam
jge
mov
cmc
push
cli
sbb
test
cmp
mov
js
test
xor
adc
mov
shll
fdivrs
icebp
cli
adc
lret
pop
out
jge
cmp
sub
fsubrl
jae
out
out
or
lock
lods
pop
xchg
rcl
adc
jnp
shrl
jg
cmp
pop
lods
int3
xchg
mov
mov
mov
jle
jno
in
test
push
inc
xor
sub
jnp
mov
mov
andl
inc
xchg
mov
inc
push
and
stc
test
notb
cltd
cmp
mov
mov
mov
push
inc
sti
or
sub
iret
dec
or
jae
shl
repnz
add
imul
push
mov
rorb
sahf
wbinvd
insb
test
jns
popa
cli
out
push
je
ss
cli
pushf
nop
xchg
out
pop
iret
mov
jno
mov
sarb
push
pop
or
and
hlt
lds
cmp
fisubrl
shl
add
lods
push
jmp
mov
iret
pop
inc
mov
mov
jle
in
js
cs
ficompl
adc
xchg
jo
das
jp
cwtl
add
inc
jl
mov
and
popa
movsb
lret
mov
arpl
outsb
out
int
std
push
inc
jle
adc
adc
test
lea
outsl
das
rcrb
inc
insl
out
jo
rclb
fdivr
xchg
push
addr16
sahf
mov
jecxz
or
enter
xchg
lods
loopne
or
jecxz
sub
ffree
pop
out
dec
xchg
mov
in
add
cmp
sbb
jb
pushf
adc
cltd
int
cmovg
cwtl
hlt
and
cmp
push
enter
insl
cs
cmp
fs
pop
clc
cmp
dec
fwait
mov
xchg
mov
mov
push
pop
out
push
aam
xor
add
sbb
les
ror
mull
mov
shl
sbb
pusha
frstor
push
gs
cli
dec
mov
jg
jecxz
test
aam
jbe
sub
gs
jbe
iret
sbb
dec
push
loope
fwait
nop
lods
ficoms
pusha
movsl
popa
jbe
in
std
fiadds
loope
cmp
add
lock
movsb
stos
and
aam
mov
icebp
xchg
ja
adc
repz
inc
aad
sub
fwait
mov
leave
les
scas
aam
jo
adc
js
xchg
ficompl
xor
pop
int
lcall
mov
or
dec
dec
nop
jbe
mov
inc
mov
stc
xchg
or
ja
jp
lcall
outsl
and
dec
test
or
out
sbb
push
adc
push
out
add
xchg
outsl
mov
mov
mov
lret
icebp
dec
faddl
mov
cmp
fwait
xchg
add
loope
cmpsb
fwait
push
jbe
add
pop
cmp
mov
jmp
bound
cld
pop
pop
pop
mov
xor
repnz
pop
inc
cmpsb
mov
incl
sbb
inc
movsl
das
xchg
sahf
stc
xor
push
dec
xchg
in
inc
out
loop
int3
cmp
mov
decl
xchg
or
pop
mov
adc
or
sub
push
and
rcll
in
sbb
test
sub
jge
mov
js
callw
pop
pushf
pop
mov
ljmp
push
and
outsl
daa
ret
sti
hlt
mov
shrl
push
ret
push
push
and
pop
popl
fisttps
daa
jne
pop
lock
int3
sbb
cmpsl
push
xor
mov
adc
mov
loope
ss
fisttps
ds
filds
sbb
sahf
das
adc
cmp
mov
out
ds
xor
jecxz
stc
cmc
push
hlt
stos
add
cmc
cmp
notl
cld
inc
jno
add
int
xchg
dec
pop
cs
push
out
in
sub
sub
xchg
add
jne
ljmp
cmc
xor
push
notb
aad
jnp
idivl
xor
xor
loop
imul
xor
movsb
sbb
mov
and
dec
mov
sahf
jns
je
movsb
pop
mov
and
aaa
inc
mov
xchg
lret
dec
add
sbb
xchg
sbb
sbb
inc
aad
fistpl
jge
mov
xchg
fistps
xorb
std
xchg
and
add
dec
xchg
xor
xlat
add
popa
je
shll
sahf
push
xchg
and
jb
cli
scas
and
jbe
add
push
sub
dec
dec
xor
lret
sub
xor
mov
or
dec
repnz
shrl
fcompl
dec
or
ljmp
aam
lea
mov
push
adc
lods
loope
or
repz
rcr
mov
sarb
cmp
outsb
push
push
mov
and
jnp
cmpl
and
lock
cmp
cmc
out
mov
imul
imul
xchg
jmp
and
or
mov
mov
xchg
test
mov
imul
sahf
xchg
xlat
popa
out
add
cmp
mov
inc
pop
outsb
in
fcmovbe
jno
jp
mov
mov
scas
mov
fmuls
cmp
sti
into
and
shrb
in
mov
mov
aas
mov
mov
mov
bound
call
popf
fwait
inc
mov
cld
and
push
mov
pusha
outsb
ljmp
pusha
pop
in
add
subb
or
adc
mov
cmpsb
push
mov
jg
lods
insb
fcmovbe
mov
lods
scas
cmp
mov
pop
jnp
repz
jbe
out
cmpsb
loop
add
cmp
cmpsl
dec
xchg
in
orb
add
stos
scas
stos
daa
or
or
loop
mov
in
cmpsb
jl
out
adc
push
movl
xchg
rorb
mov
push
mov
add
or
or
lea
mov
pop
rcrb
xchg
cmp
mov
xor
push
subl
in
rorl
or
or
ljmp
jnp
mov
in
cmpsl
std
mov
lods
fimuls
lock
cmp
fiadds
inc
cmpsb
subl
ja
sub
dec
cli
adc
or
out
les
add
jp,pn
adc
and
fwait
pop
scas
inc
sub
fmuls
cwtl
out
and
sub
jg
or
in
push
xchg
push
int
arpl
dec
add
xchg
daa
sbb
mov
lods
dec
push
sbb
mov
test
loop
fadd
pop
fidivl
ffreep
sub
daa
sub
jne
jno
es
bound
mov
test
inc
sub
fdivs
cmp
sub
push
xchg
lcall
pop
je
sti
sti
pop
or
jae
and
stos
hlt
push
mov
or
xor
mov
pop
or
bound
outsl
icebp
mov
test
fnsave
imul
cmpsl
xchg
cmp
dec
sbb
mov
popa
or
repz
dec
jno
movsl
shlb
repz
aam
loope
pop
loopne
pop
fcomi
cmp
adc
stos
gs
mov
mov
push
lds
mov
add
out
inc
cwtl
pop
pop
inc
shrl
lcall
lods
pop
mov
in
das
xchg
insl
push
mov
push
ljmp
cmp
aas
sbb
fnstcw
pop
nopl
icebp
aam
inc
enter
inc
sbb
mov
out
push
orb
jb
mov
inc
inc
mov
les
cmp
das
add
andb
ret
aas
test
jl
mov
add
xor
push
jno
test
xchg
mov
icebp
jg
dec
xchg
jbe
mov
and
nop
pop
cmp
and
movsl
adc
push
lret
scas
pop
add
scas
xchg
jb
shll
es
aaa
and
inc
jo
gs
les
in
test
mov
aas
xchg
adc
test
imull
rcrl
into
mov
push
dec
xchg
test
pop
cmp
stos
push
mov
rcrl
xor
mov
stc
out
mov
or
stc
je
mov
dec
mov
sbb
inc
js
xchg
dec
mov
sub
sub
repz
test
std
in
fcomps
add
jmp
mov
mov
sub
xor
push
aaa
jmp
or
cltd
dec
test
lods
pop
dec
sbb
jp
dec
pop
or
pop
mov
out
dec
imul
sub
and
xchg
xchg
insl
push
cmpsl
sub
pop
sub
add
mov
mov
std
outsl
cmp
cmp
cmpb
cmp
enter
inc
pop
pop
dec
push
ret
xor
int
adc
or
jecxz
outsb
push
mov
sub
push
hlt
dec
inc
into
mov
mov
imul
outsb
test
shrl
or
in
dec
mov
bswap
mov
outsb
into
jl
clc
inc
cmp
gs
cmp
imul
and
inc
sbb
add
and
movsl
test
add
add
mov
inc
jo
and
rorl
sub
arpl
mov
in
xchg
lds
add
lods
in
loope
aam
inc
pop
mov
mov
jle
imul
xor
js
lret
jae
insl
int3
xchg
sbb
sbb
push
jecxz
cli
push
inc
cmpsl
in
ds
pop
xor
lret
in
fmulp
jl
nop
insl
push
xchg
cmp
jl
mov
cmpsl
iret
push
dec
xor
xor
adc
inc
incl
sbb
mov
sub
js
cmp
add
fstpl
mov
push
lret
mov
push
mov
ds
jg,pt
int
push
out
push
jo
dec
inc
pop
lea
cld
lret
insb
xchg
inc
pop
shrb
mov
outsl
mov
mov
or
xchg
pop
push
xor
insl
and
jbe
subps
nop
arpl
out
dec
mov
mov
or
lcall
shl
ds
push
lea
pop
lcall
lds
fwait
xchg
in
push
xor
push
xor
xchg
xchg
jbe
rcr
mov
cmp
hlt
mov
mov
pop
or
divl
sarl
imul
cld
push
daa
push
idivl
jno
mov
push
mov
sbb
roll
sub
in
pop
xchg
in
jns
loopne
inc
cmpsl
jmp
mov
lcall
shll
repnz
iret
int
rcrl
outsl
lahf
loop
lahf
add
loope
xchg
adc
xlat
mov
pop
cmc
xor
pushf
daa
int
add
push
lock
mov
hlt
inc
aam
xchg
and
jo
negl
jmp
cld
add
sub
inc
ljmp
xchg
rcll
xor
lcall
pop
mov
lahf
lock
or
inc
jnp
call
pusha
arpl
bound
mov
and
test
loope
scas
imul
es
insl
ficomps
xchg
inc
nop
stos
sub
call
mov
aam
jne
push
mov
aaa
xor
adc
xor
pop
inc
and
mov
add
into
loop
movzbl
mov
fistl
jne
pop
cmp
jo
push
orb
inc
fsubrl
mov
and
and
add
or
js
cmp
push
inc
pop
jne
test
dec
inc
cmp
pusha
mov
cmpl
jbe
out
in
test
ja
sbb
int3
out
lret
inc
in
cmp
mov
mov
imul
inc
push
fs
inc
jnp
sarb
pop
adc
and
push
adc
push
fnstsw
stos
lds
jno
mov
test
jecxz
je
xchg
push
lret
jne
sub
nop
inc
mov
cld
pop
pop
leave
mov
aas
push
test
dec
addr16
outsb
mov
or
inc
or
jmp
mov
mov
aam
xchg
mov
int3
loope
lock
or
jle
ljmp
lcall
sbb
push
sub
dec
add
jle
inc
adc
cmp
test
scas
lret
fdiv
rcll
pop
mov
aad
mov
adc
js
xchg
ss
out
push
cltd
je
add
cmp
iret
rcrl
sbb
sub
jl
and
leave
nop
clc
fsubrl
cmpxchg
dec
imul
or
int
frstor
or
fsubl
mov
adc
xorl
stos
int3
loope
outsb
mov
jnp
or
loope
out
ja
adcb
jecxz
leave
dec
iret
loopne
notb
push
insl
mov
adc
push
xchg
pop
mov
adc
and
inc
nop
add
imul
out
fcompl
adc
enter
mov
fsubp
lcall
mov
loop
mull
add
popa
sti
add
std
push
outsl
fmull
or
adc
packuswb
pop
adc
adc
mov
mov
push
inc
jecxz
jmp
pusha
push
inc
daa
xchg
mov
push
sarb
mov
enter
cld
cmpsl
lea
xchg
sub
mov
push
and
mov
sbb
mov
xchg
xchg
fwait
ljmp
inc
mov
mov
jge
xchg
mov
push
nop
xor
and
inc
add
ret
add
jmp
mov
jnp
call
dec
lods
sbb
orl
xor
in
adc
pusha
outsb
pop
add
frstor
mov
and
popa
daa
xorl
add
cmp
xor
dec
mov
in
stos
sbb
inc
xor
or
call
lea
mov
xor
lods
sarb
push
fisubrl
movsl
andps
or
jle
sub
add
movsl
sbb
in
aas
inc
push
loope
sbb
push
mov
mov
cmpsl
xchg
xor
mov
test
cmpsl
and
lds
jp
cmp
repnz
or
dec
fcmovnu
cld
aad
and
fisubrs
or
dec
lds
adc
add
push
or
or
test
push
fimull
mov
and
pusha
jbe
mov
out
dec
jge
sub
cmp
popa
add
gs
imul
and
lret
mov
mov
mov
cs
inc
arpl
cmp
xor
inc
push
dec
xlat
imulb
push
sbb
repnz
mov
test
lret
mov
and
insb
pushf
jno
add
add
js
das
sub
jnp
imul
insl
jb
out
or
lret
pusha
cmpsl
sbb
push
in
and
mov
and
lret
jmp
mov
mov
xchg
scas
mov
dec
rcl
aas
jo
mov
or
sub
mov
and
loop
push
leave
mov
push
lret
pop
ret
mov
cmpsl
mov
sahf
adc
add
sbb
jl
lock
mov
js
sub
push
pushf
add
mov
jnp
mov
xor
or
sti
xor
dec
sarb
lds
ret
push
orl
jno
dec
mov
movsb
sub
xchg
xchg
xchg
or
mov
roll
cwtl
adc
or
adc
pop
xchg
rorl
add
sahf
mov
xor
aam
jmp
jp
int
notl
shll
jp
orb
xor
pusha
out
and
rorl
js
xchg
xchg
inc
adc
in
subl
jecxz
push
pop
and
insl
push
jns
and
push
fcomps
pop
sub
fadds
mov
jl
test
pop
adc
mov
std
test
dec
xchg
ja
das
or
daa
popf
orl
cwtl
sbb
cmc
sbb
rclb
lret
scas
lea
icebp
mov
mov
pusha
hlt
push
cmp
cmp
cltd
int
adc
jnp
das
repz
dec
ljmp
inc
in
outsl
cmp
shl
addb
cmp
bound
cmp
ret
aad
jns
jp
and
mov
pop
jecxz
pop
jle
add
xor
jb
push
daa
mov
loopne
mov
xor
stos
sub
jbe
sbb
arpl
mov
jg
jmp
outsl
lret
iret
adc
and
push
xchg
cmp
push
mov
jne
mov
fst
mov
dec
adc
xor
jns
iret
lock
es
pop
adcl
outsl
aaa
cli
daa
test
jnp
inc
mov
or
ja
mov
add
lods
jae
das
mov
xor
jg
push
iret
sbb
xor
js
dec
insl
sbb
xchg
filds
mov
sahf
mov
stc
movsb
sbb
frstor
xor
or
int3
lods
lret
frstor
fdivl
cmp
les
dec
inc
push
cltd
lret
ret
lret
enter
cld
sbb
mov
repz
insb
pop
into
xor
sbb
adc
push
cmpsb
addr16
shr
xlat
xchg
fwait
popf
xchg
xchg
cmp
xchg
push
push
xchg
fs
nop
in
cs
jae
sbb
mov
xchg
sbb
ret
jnp
mov
sti
jl
xchg
cmpsb
mov
push
mov
pusha
aam
out
into
fnstcw
mov
push
arpl
mov
rdmsr
inc
sub
sub
cmp
or
sahf
pusha
mov
icebp
mov
add
sub
xor
xor
mov
xor
popf
arpl
pusha
mov
add
xchg
inc
lods
sbb
aam
nop
bound
mov
add
and
sbb
popf
xor
xor
sbb
push
inc
push
in
push
stc
dec
pusha
fs
rorl
loop
xor
fnstsw
shrl
out
add
aaa
xchg
xor
mov
mov
outsb
jb
and
test
mov
jne
pop
mov
xchg
sbb
iret
lahf
jg
mov
out
push
pushf
xchg
mov
cmp
push
xor
pop
push
imul
or
dec
mov
add
xor
sub
into
data16
leave
int3
or
add
pop
sub
mov
jle
dec
cmpsl
push
fimull
mov
sbb
add
xlat
outsb
mov
movsb
inc
ret
loop
xchg
mov
fsubr
dec
adc
out
jge
pop
mov
cs
ljmp
mov
pop
daa
std
push
and
mov
xchg
push
add
adc
push
mov
int
das
or
outsb
adc
inc
xor
out
adc
lahf
pop
js
jp
ret
add
dec
outsl
xchg
fcoms
loope
jbe
jle
jp
shll
sub
test
push
or
inc
data16
mov
out
das
pop
arpl
cmp
sbb
push
pop
mov
mov
js
fdivrs
fimuls
or
std
data16
insb
test
mov
test
data16
jecxz
jge
push
lcall
lcall
lret
inc
sbb
mov
pop
jg
movsb
or
inc
out
inc
adc
cmpsl
lea
lods
cltd
imul
jge
push
push
mov
fmuls
repz
adc
enter
fsubr
xchg
jae
out
or
mov
and
cwtl
mov
lock
loopne
xor
je
sbb
repnz
iret
mov
lcall
insb
mov
push
cmp
test
mov
jecxz
push
mov
data16
out
mov
sti
gs
bound
movsl
jg
add
mov
je
je
cmc
lret
or
mov
inc
mov
cmp
jmp
cltd
xchg
pop
xor
pusha
outsb
andl
xchg
mov
loope
loop
mov
aaa
nop
in
arpl
dec
div
scas
xchg
cmpsl
xchg
push
push
xor
xchg
inc
and
mov
ds
mov
sbb
push
or
mov
loopew
or
xor
xchg
enter
jb
or
mov
xchg
mov
jno
fists
ret
fnstenv
jnp
std
pusha
in
inc
pop
xor
mov
push
into
jle
pop
ffree
into
mov
dec
ja
xor
dec
out
cld
mov
add
pop
sbb
jg
ja
adc
mov
outsl
test
sahf
mov
dec
push
mov
out
adc
std
in
test
in
cld
add
xor
jns
jl
bound
movsb
jae
mov
add
mov
mov
testb
pop
mov
xchg
or
push
test
into
outsl
mov
lds
sbb
sbb
push
mov
mov
arpl
je
dec
push
andb
cwtl
jo
mov
sub
mov
ror
out
lret
repnz
mov
xchg
dec
mov
ja
lods
ret
sbb
pop
adc
jae
dec
loop
cwtl
xor
leave
je
jbe
pop
sub
push
outsb
lods
and
cltd
fs
movsl
mov
push
es
xor
push
jns
sub
xor
movsb
inc
pop
pop
or
into
popf
xchg
sub
jge
mov
fmull
cmp
stos
cmp
rcll
or
mov
mov
and
adc
enter
xchg
iret
je
pop
mov
xchg
jp
or
sub
xchg
inc
pop
popa
in
and
pop
and
add
jno
inc
pop
bound
inc
mov
xchg
pushl
push
iret
subl
xorb
jne
mov
ucomiss
and
inc
addb
out
mov
and
jmp
lea
mov
push
movsb
movsb
and
ficoml
in
dec
aaa
jb
cmpsb
fmull
mov
cmp
push
push
mov
nop
or
jo
scas
jg
push
ret
mov
test
pop
jmp
cmp
inc
sbb
test
je
stos
les
xchg
scas
aaa
dec
aas
xor
aaa
pop
incl
or
repnz
adc
mov
adc
jl
pop
rcll
movsl
loop
jecxz
cmp
fstpl
mov
xor
ret
jbe
mov
fnstcw
repnz
in
nop
cli
inc
rolb
jnp
mov
sar
arpl
repz
and
into
dec
cmc
test
sti
testl
lret
out
cld
jg
aad
sbb
out
xor
inc
repz
outsl
push
jns
xor
sub
jae
inc
mov
jge
cwtl
scas
leave
insb
push
xchg
mov
out
imul
gs
cld
icebp
popf
inc
dec
ret
insb
or
pcmpeqd
push
push
xor
ss
cmpsl
xchg
mov
adc
and
lock
push
cmp
adc
ret
int3
mov
add
cltd
fwait
std
insb
dec
inc
sub
in
pop
ficompl
aas
push
dec
mov
jp
add
sti
lahf
fstpl
pop
dec
leave
push
inc
push
lcall
dec
mov
jo
inc
mov
mov
add
shlb
mov
push
jbe
xchg
jp
cld
push
leave
lods
sbb
adc
ds
iret
xchg
lret
mov
popf
jb
dec
or
cmpsl
scas
cs
xchg
mov
mov
fiadds
dec
test
mov
push
mov
hlt
xchg
mov
test
inc
stos
aam
xlat
mov
ret
inc
jg
mul
dec
pop
cmp
aaa
stos
cmp
iret
fnstcw
adc
in
dec
xorb
es
aaa
call
ret
inc
mov
add
xor
ret
push
sub
push
and
orb
stos
xor
mov
lods
mov
and
aad
mov
push
and
hlt
addr16
xchg
shll
dec
rolb
mov
sbb
inc
fldenv
aad
mov
jmp
sbb
lahf
rolb
mov
dec
adc
jnp
aam
insb
ret
and
pop
push
in
loope
push
jae
sub
les
loop
dec
cmp
push
mov
push
and
inc
imul
cmp
int3
jmp
pop
test
mov
insb
aaa
cli
cmp
xchg
push
push
xor
xchg
or
mov
mov
and
pop
push
sub
lea
sbb
outsl
lods
xchg
add
test
icebp
add
lods
push
pop
push
sbb
sub
shr
les
subb
mov
rol
cmpsb
cld
rclb
les
mov
sbb
cwtl
jno
cli
jl
add
jnp
xchg
mov
int3
hlt
pop
scas
daa
add
lahf
push
xor
andl
fsubrs
push
cmp
popl
sub
out
movsb
or
in
movd
inc
andb
push
out
mov
and
or
je
xorb
mov
adc
mov
movsb
shrl
mov
call
pop
ror
mov
and
enter
js
inc
das
push
in
xchg
scas
imul
imul
pop
push
cs
and
mov
lods
cld
enter
xor
lock
idivl
pop
shll
mov
xor
xor
repnz
es
sbb
push
push
arpl
add
rclb
inc
cs
dec
mov
fs
push
adc
xchg
fstp
jp
or
ret
cli
jg,pn
mov
xchg
fcomps
adc
fstps
arpl
std
xor
mov
xchg
fcompl
arpl
xchg
pop
cltd
inc
adc
mov
adc
or
data16
push
inc
inc
add
scas
test
or
add
insl
fwait
mov
mov
push
dec
popf
push
je
mov
sar
dec
cs
pusha
dec
inc
jle
pcmpgtd
lea
xchg
data16
nop
sbb
testb
movsl
jecxz
add
push
mov
movsb
pop
popa
cmp
test
mov
lret
pop
or
xlat
sbb
sbb
jae
jecxz
and
adc
xchg
cmc
push
cmp
mov
adc
cmp
imul
dec
cmpsb
popf
jb
pop
jo
sti
movsl
mov
outsb
push
mov
loopne
jns
push
in
cs
lahf
gs
gs
or
test
adc
adcb
xor
jmp
es
fwait
sub
cmc
sub
jns
fisttpll
fcoml
xor
inc
xchg
jge
repz
sbb
jl
and
call
xchg
jnp
jb
push
pop
aam
and
outsl
hlt
out
mov
mov
mov
inc
cli
inc
inc
xor
sbb
popa
into
inc
jl
add
mov
pop
dec
mov
cmc
int3
leave
cmp
arpl
jno
and
rorl
into
cmp
aad
push
sub
cmp
pushf
xor
pop
xor
xchg
pop
xchg
ja
lods
inc
mov
jl
cmp
xchg
notb
addb
out
jnp
jmp
lcall
xor
stos
push
jmp
in
sahf
je
mov
or
imul
notl
icebp
mov
xchg
aam
xchg
scas
sub
les
mov
inc
jo
or
xchg
jmp
lret
push
std
vcvttpd2dq
adc
mov
mov
repz
jp
xor
cmp
and
xor
stc
push
hlt
fildl
test
push
ror
imul
mov
out
sub
pop
and
aaa
mov
inc
dec
fsts
fsubs
sbb
xor
pop
or
out
inc
mov
daa
lcall
aam
push
fucom
add
push
inc
aad
outsl
push
bound
aam
insb
mov
xor
outsb
sbb
pop
push
fwait
and
xchg
push
mov
mov
push
cmp
or
in
mov
inc
jmp
in
adc
xchg
xchg
mov
push
or
cmp
xor
cmp
aas
mov
hlt
mov
fdiv
mov
dec
xchg
cs
adc
cmpb
in
lds
push
or
sbb
mov
lret
loope
scas
fcomp
shll
mov
mov
sbb
add
cmp
mov
scas
push
inc
mov
out
jnp
fisttpll
lods
cld
xchg
jp
mov
loopne
es
stos
addr16
int3
cmp
cmpsb
push
outsl
je
pushf
out
adc
mov
add
sti
popf
sub
push
fmul
clc
inc
sub
seto
inc
mov
dec
pop
popf
pop
adcl
jb
dec
into
jo
sar
lahf
cmp
mov
aam
push
dec
fdivrl
iret
negl
mov
xor
push
test
dec
sbb
mov
mov
cmpsb
repz
xchg
jg
popa
lock
xor
arpl
fwait
pop
pop
lods
lret
ret
lods
popa
loop
pop
add
insl
jae
and
push
dec
mov
imul
sub
test
xlat
mov
push
add
daa
aas
scas
mov
mov
mov
mov
pop
or
sbb
cmc
scas
sbb
loopne
mov
ficoml
enter
cmp
sub
hlt
or
adc
jbe,pn
das
jb
mov
scas
sbb
fwait
push
or
aad
lahf
call
push
xor
aaa
into
xchg
add
mov
loopne
pop
jg
mov
mov
mov
sub
inc
test
push
mov
dec
loopne
aad
out
iret
jge
cs
xchg
cltd
jecxz
dec
push
andb
insb
ss
and
in
divl
add
jns
mov
add
jle
and
je
push
imul
outsb
lods
es
sub
xor
out
fiaddl
jnp
stc
cmp
aam
dec
mov
leave
push
add
jns
cwtl
push
shrb
scas
dec
js
xchg
xchg
pop
lret
pushf
xor
popf
scas
fs
mov
cmp
and
repnz
push
cmpsl
dec
out
es
xchg
mov
rcll
jle
lret
clc
pushf
dec
mov
icebp
push
add
inc
mov
sub
dec
repz
loope
sub
mov
mov
sbb
sti
jge
add
imul
inc
cmp
imul
aas
dec
les
into
repz
imul
jo
gs
fninit
lock
popa
cmp
sbb
orb
adc
inc
jmp
in
push
and
daa
loop
pop
gs
add
and
popf
sbb
outsl
sub
stc
adc
insb
test
movsb
gs
sub
popf
lock
pushw
adc
mov
icebp
pop
push
scas
jne
adc
push
out
xlat
xor
inc
xor
pop
stc
enter
jg
pop
sahf
es
jo
jg
adc
pop
xor
dec
push
sbb
sub
repnz
xor
push
and
aam
out
rcll
jp
stos
and
adc
in
sub
mulb
rcrb
xorb
sub
sub
ret
adc
mov
mov
lock
je
push
inc
fldt
in
mov
ret
pop
cli
xor
or
into
mov
mov
jae
lcall
mov
jb
sub
sbb
mov
int
mov
rcll
or
xor
or
stos
dec
jl
icebp
cs
xchg
call
jl
mov
push
jp
movsl
add
lock
rorb
xchg
test
push
rol
pop
stos
mov
xchg
movsl
nop
std
push
loop
aaa
mov
push
cltd
cwtl
xchg
out
jns
imul
push
xchg
bound
sub
mov
sbb
cwtl
xchg
ljmp
dec
or
and
cs
test
cmc
enter
stos
rcl
rclb
xchg
cmp
arpl
and
cmp
adc
mov
and
cli
pop
jae
xchg
pop
jmp
dec
pop
xor
enter
aaa
out
xor
outsb
roll
dec
das
test
mov
and
cltd
fs
xchg
in
icebp
daa
dec
in
fisttpl
dec
sbb
icebp
aam
push
stos
lea
aas
icebp
mov
scas
out
aaa
and
dec
and
push
xor
insl
faddl
cmp
jmp
in
lret
into
call
fucom
dec
mov
jg
lea
mov
repnz
or
pop
out
dec
aaa
pop
cmp
loopne
outsb
pop
push
mov
ror
xchg
into
inc
inc
call
enter
fldcw
xor
mov
mov
mov
out
jmp
pop
cmp
xchg
dec
std
mov
add
test
jbe
es
movd
sub
and
insl
jno
stos
mov
mov
js
mov
inc
lock
cli
sub
jl
ficoml
inc
mov
sbb
and
pop
sbb
add
mov
sbbb
addr16
std
lret
das
sbb
out
lahf
lret
mov
inc
jle
outsl
or
sarb
push
std
insl
mov
adc
js,pn
aaa
mov
dec
movsl
or
outsl
xor
test
push
mov
add
sti
rorl
in
xchg
shrl
mov
xchg
dec
add
pop
dec
inc
sbb
jecxz
sbb
xchg
dec
mov
lea
mov
and
or
xor
pushf
or
mov
add
xchg
adc
mov
sub
cmpsl
xchg
and
dec
mov
xchg
mov
mull
fs
scas
imul
rcrb
aam
jmp
lahf
pop
pop
insb
popa
jno
sub
lcall
cmp
mov
xchg
sahf
xchg
jno
sub
sti
popf
fcomi
jb
fsubs
je
cltd
pop
pop
rclb
push
es
jno
nop
ret
xchg
dec
or
int
xor
cmp
mov
inc
push
aad
sub
jnp
iret
and
clc
dec
stos
div
mov
pop
dec
inc
jg
decl
call
sbb
pop
sti
mov
aas
mov
pop
or
inc
lcall
or
gs
clc
shll
or
daa
mov
movsb
add
fsubs
fmuls
xlat
mov
mov
sub
daa
sbb
jecxz
adcb
popf
add
cmp
adc
rcr
mov
pop
push
cmpl
movsl
adc
ret
sbb
ret
arpl
mov
loope
push
sarl
jmp
dec
cli
inc
mov
mov
and
cmc
lock
jp
jmp
xorb
inc
aad
mov
xor
jne
fmuls
sub
cwtl
mov
dec
push
es
repz
adc
stc
cmpsl
jb
xor
mov
jne
movsl
pop
cmp
mov
cs
inc
xchg
jge
push
notl
or
and
and
aad
xchg
xor
push
imul
insl
int3
out
jo
jb
popa
sub
dec
adc
dec
sarb
movsb
dec
jns
iret
cmp
mov
js
or
cltd
push
pop
or
dec
jge
outsb
sub
dec
jae
test
out
adc
sub
mov
loopne
xcrypt-ofb
cmpsl
out
sahf
or
test
adc
or
jno
mov
lods
pop
addr16
daa
cmp
cld
das
jo
out
insb
dec
or
cmpsl
push
xor
out
fs
mov
bound
es
mov
or
mov
jle
cld
es
test
lret
xchg
sbb
fwait
movsl
test
xor
mov
out
repnz
out
jae
lcall
cmp
xor
call
cmp
inc
int
add
jecxz
ja
mov
jg
xor
movsl
push
mov
add
dec
aaa
pusha
sbb
scas
mov
sarb
je
inc
das
lods
clc
fnstsw
mov
push
inc
stos
lahf
sub
pop
int
cmc
call
add
inc
pop
jmp
andb
inc
hlt
mov
push
aad
loop
add
adc
aad
jp
sarb
xor
mov
in
and
out
cwtl
loop
je
jnp
aad
and
pop
bound
xchg
stos
bswap
sbb
dec
test
bound
push
imul
mov
cmpsb
mov
jo
xchg
cltd
sahf
add
jae
inc
ja
cmpsb
cmp
xchg
sarl
cmc
enterw
pop
mov
dec
ja
jno
mov
dec
hlt
and
std
popf
add
xor
dec
inc
jg
rclb
mov
mov
pusha
xor
push
fmuls
mov
mov
mov
push
popf
xchg
dec
adc
aaa
enter
lcall
adc
dec
xor
ljmp
jne
iret
push
ss
and
aad
daa
cltd
ljmp
push
pop
sbb
fiadds
jo
sub
in
stos
dec
stc
mov
icebp
jnp
test
in
in
orps
jne
loope
and
dec
vucomiss
inc
repz
mov
or
in
xchg
punpckhbw
mov
out
dec
popa
cmp
sbb
mov
lods
mov
cmc
inc
hlt
sbb
dec
inc
jp
push
mov
sbb
mov
or
subb
leave
pop
clc
mov
push
lods
cs
arpl
and
pop
negb
cmp
divl
xchg
xchg
stos
cli
sub
mov
xchg
push
pop
test
dec
cmpsl
sbb
pop
sub
jne
add
inc
xchg
lea
add
call
push
fstpl
iret
stos
lret
test
adc
push
jge
test
out
ja
enter
fisubrs
sub
jnp
das
pop
into
cltd
mov
xchg
jbe
xor
shll
les
out
inc
jle
outsl
mov
stos
mov
leave
aas
test
pop
int
lahf
mov
cmc
add
xchg
in
jle
cli
fdivrs
cwtl
dec
sti
cmp
add
jp
in
xchg
daa
stos
loopne
imul
popf
mov
add
fs
ds
cmc
and
movsl
cwtl
int
enter
jae
mov
sbb
stc
push
pusha
dec
ret
and
dec
and
fsubs
jmp
sbb
rcll
jbe
insl
loop
test
mov
repz
or
mov
adc
mov
sbb
cmp
cwtl
fucomp
mov
stc
push
loop
push
cmc
sar
js
iret
jb
sbb
test
dec
cli
gs
lret
movsb
sbb
dec
mov
mov
fdivp
popa
cmp
movsb
cmpsl
mov
lods
lret
icebp
jbe
mov
ss
sub
int3
mov
sbb
sarb
inc
cmp
hlt
cmp
dec
mov
push
fisttpl
aam
or
mov
add
add
and
mov
loope
mov
xchg
and
sub
jge
cmp
test
push
mov
loope
add
std
mov
pop
addl
mov
jp
push
mov
out
shlb
mov
pushf
push
ss
mov
add
adc
jmp
mov
mov
push
scas
adc
dec
loope
add
repnz
sub
fstpt
xchg
das
sbb
and
mov
push
ret
mov
arpl
sbb
call
dec
jbe
test
icebp
cs
dec
out
mov
imul
outsb
dec
popf
inc
or
push
ljmp
cmpsl
cmpsb
pusha
cmp
into
and
cld
jecxz
das
jb
cmp
jo
lahf
roll
or
ret
std
dec
shlb
shll
push
repz
rorl
mov
scas
push
mov
incl
lods
es
jno
pop
fbld
test
aad
outsl
ljmp
sbb
test
sbb
pop
push
cmp
cmc
cwtl
mov
nop
mov
xor
mov
and
cwtl
in
cmpsl
mov
sub
adc
popa
fucomi
pop
dec
aam
aas
sbb
das
pop
ret
add
in
push
mov
pop
mov
mov
enter
pop
je
je
cmp
mov
in
xor
push
cld
cmp
xchg
loopne
imul
and
insb
inc
lret
jge
pop
or
stc
inc
repnz
repnz
shll
outsl
aad
and
int3
lock
movsb
lahf
out
jae
jle
adc
xchg
pushf
sbb
cmc
stc
cld
enter
sub
loope
dec
or
xchg
loope
inc
fmul
xorb
sub
xlat
scas
xor
ret
cmp
and
sahf
jns
pop
in
pop
repz
in
into
push
sbb
push
add
in
add
out
fcmovbe
push
adc
adc
loop
push
pop
pushf
mov
pusha
mov
movsl
add
dec
lcall
or
imul
clc
dec
cmp
push
enter
iret
dec
das
sti
hlt
lahf
cmp
mov
push
js
lds
jecxz
dec
mov
mov
mov
mov
mov
mov
ror
cmp
mov
insb
sub
mov
jb
jl
jge
mov
inc
into
xlat
std
jecxz
xchg
iret
loopne
sar
jp
xchg
inc
lahf
mov
aad
cmpl
dec
xchg
aas
andb
sub
add
push
daa
lds
pop
enter
mov
orl
jns
cli
jmp
mov
sub
pop
icebp
out
lock
loope
jns
jp
jge
mov
cld
loope
aas
loope
aaa
shll
mov
xchg
push
add
lods
xchg
rorl
adc
jnp
or
jg
xorl
or
arpl
xchg
mov
aam
xchg
xchg
xlat
pushf
sbb
lea
cmpsb
test
adc
je
xchg
pop
mov
js
test
fidivl
add
imul
jnp,pn
or
int3
imul
jge
mov
or
xor
sbb
inc
icebp
lea
mov
or
inc
cmp
cmpsb
mov
or
inc
test
out
loop
incb
jge
fs
xchg
outsl
in
jmp
call
lret
xor
xchg
in
aaa
xchg
arpl
sbb
mov
gs
das
les
xor
push
pop
push
popa
or
aaa
cld
or
insl
fucomip
mov
pop
pushf
divl
mov
push
mov
inc
jle
orb
test
outsb
inc
and
lods
push
psubb
adcb
shlb
sbb
lock
aam
call
clc
leave
sub
sarl
mov
mov
push
pop
test
cmc
lret
cmp
int
push
mov
inc
add
out
mov
jo
jo
pop
scas
jl
int3
movsb
or
adcb
add
andl
push
cltd
fcmovnu
sub
add
cmp
das
dec
lods
ds
repnz
jmp
addr16
or
or
addr16
sbb
in
outsl
outsl
dec
lds
mov
dec
icebp
dec
xchg
aam
xor
cmpsb
pop
sbb
mov
cmp
fld
xchg
les
inc
mov
popf
in
lahf
ss
leave
ret
cld
shrb
xchg
std
mulb
stc
or
inc
inc
push
and
out
lock
push
in
out
xor
cmp
add
ret
and
add
or
fsubs
sub
push
aad
xchg
out
fnstenv
mov
mov
test
jo
cltd
mov
in
loopne
lret
inc
dec
sbb
or
clc
lahf
sbb
adc
mov
dec
mov
test
xorl
enter
enter
add
int3
pop
or
lea
cmc
cld
xchg
mov
cmp
aaa
and
inc
pop
std
or
cmpsb
jnp
xchg
fisubl
push
add
mov
cs
stos
adc
arpl
pop
inc
mov
loopne
add
pop
fidivl
rol
loop
outsl
scas
je
ficompl
lahf
movsb
jbe
int
jne
and
add
int
popa
adc
fcomps
xor
mov
outsb
push
jno
cltd
inc
pushf
jns
mov
mov
test
js
push
scas
ret
dec
stos
aam
mov
add
sbb
jmp
sub
mov
push
in
cmpsb
imul
mov
mov
xchg
sub
ret
adc
icebp
inc
sub
inc
pop
push
jo
jb
sbb
lret
pop
pop
test
test
lret
call
pushl
out
jge
inc
pop
or
sahf
sub
pop
sub
sti
jg
adc
sahf
xor
mov
pop
jb
popa
iret
mov
repnz
lret
and
in
xor
and
mov
movsl
shlb
orl
dec
aaa
int
jmp
or
icebp
mov
in
out
or
pcmpeqd
push
movsl
jecxz
or
leave
push
mov
stc
sahf
fdivs
pop
and
loope
lret
int3
test
aas
dec
imul
incb
lock
ss
fists
pcmpeqd
in
xor
das
sar
push
in
mov
jl
clc
fsubrl
mov
into
fsts
pop
xchg
sub
out
lea
and
int
repnz
hlt
insb
je
mov
cltd
jnp
sahf
call
mov
mov
or
addr16
xchg
mov
sbb
lock
repz
cmp
mov
scas
sahf
cmc
icebp
xchg
psubsb
inc
rcl
mov
pop
mov
push
ss
fidivs
gs
jp
adc
sbb
mov
inc
jae,pn
push
xchg
sbb
mov
out
inc
icebp
inc
mov
pop
push
sbb
pop
dec
and
or
pop
adc
or
and
cmpsl
add
dec
pop
aas
es
lcall
or
xchg
or
scas
push
in
in
xchg
hlt
add
aas
xorb
jge
in
sub
in
push
nop
adc
push
sbb
clc
outsb
xchg
cmp
fstp
push
mov
mov
fldl
subl
aaa
pop
mull
add
adc
dec
cs
outsb
stc
cmp
sbb
sub
xchg
or
sbb
fwait
xor
or
cli
or
fisttpll
dec
jo
jne
sub
inc
in
adc
push
xor
cmpsl
in
dec
jnp
pop
sub
cmp
pop
push
les
mov
lahf
and
xchg
or
cmp
jnp
and
jno
aaa
mov
iret
push
stos
push
xor
or
in
jmp
call
mov
add
addr16
insb
xchg
gs
out
cld
and
jb
jecxz
adc
adcl
cmpb
mov
mov
subb
sub
dec
adc
push
push
add
je
enter
cmp
jg
lcall
dec
push
mov
or
mov
outsl
shll
ss
xor
cld
dec
pop
inc
inc
pop
push
lds
and
imul
dec
test
xlat
lock
inc
xlat
jmp
mov
mov
fcomip
add
dec
add
mov
jo
dec
out
xchg
pop
pop
push
or
jg
adc
shl
push
das
decl
jmp
out
loope
mov
inc
lahf
jecxz
bnd
negb
dec
sbb
inc
pop
xchg
and
sbbb
xchg
lret
mov
dec
lods
and
enter
and
pop
or
insb
push
jmp
cmp
push
popa
mov
push
jno
mov
adc
add
inc
sbb
adc
mov
divb
jecxz
push
pop
cs
mov
cmp
js
bound
sarl
negl
push
stos
fwait
mov
and
fisttpll
mov
xlat
call
call
sub
fisttps
mov
cmpsl
push
sub
mull
sbb
pushf
std
or
popf
xor
mov
syscall
in
in
xor
sbb
push
add
and
in
ficoml
xchg
iret
lahf
inc
in
out
ds
xchg
fcomps
mov
pop
aas
cmp
push
mov
dec
pop
fidivrs
cmc
sahf
rcrl
mov
pop
fnstsw
cmp
adc
inc
xchg
jp
inc
mov
add
rorb
push
and
rolb
popf
sub
and
lret
scas
push
pop
push
test
lcall
idiv
add
into
std
shlb
pop
sbb
and
into
out
mov
iret
sbb
clc
test
pop
cmc
outsb
cmp
pop
popf
flds
bound
xlat
dec
aaa
jne
rcrb
sub
std
fsubr
repz
mov
jge
sarb
jmp
imulb
cmp
shl
xchg
fidivrs
mov
dec
inc
sub
lds
xlat
repz
jb
jnp
test
sahf
xor
mov
out
insb
mov
add
cmpsb
popf
mov
xchg
lret
dec
repz
lret
jl
xor
out
test
pop
rcrb
pop
insl
ja
cld
xor
xchg
sbb
xchg
fiadds
or
inc
push
xchg
sbb
mov
fwait
rcrl
xor
mov
mov
cmpb
outsl
push
push
lret
push
jns
sbb
lods
call
cs
cmp
jp
or
in
jbe
bound
pop
cld
push
in
inc
jb
repz
jns
push
inc
mov
add
stc
dec
repz
inc
jg
aam
jmp
push
cwtl
jb,pn
popf
call
int
repnz
cmp
sbb
sahf
sbb
adc
mov
push
xchg
ret
xchg
fsts
scas
fwait
cmp
popf
mov
cmp
sarl
add
and
xchg
xchg
test
setno
adc
mov
mul
mov
xchg
and
pop
mov
in
mov
lock
jle
lods
inc
clc
pushf
pop
dec
daa
jno
lcall
sub
jo
imul
outsl
stos
mov
cmp
mov
push
jnp
lods
sahf
cmp
fs
nop
popa
mov
test
cli
pop
shlb
in
sbbb
jae
es
movsl
jnp
lock
xlat
outsl
or
fldln2
fidivrl
pop
mov
jle
xchg
push
mov
out
rcrb
rclb
lods
arpl
rcrl
loop
inc
add
add
scas
fistpll
int3
loop
xchg
inc
into
jno
adcl
fcomps
mov
and
rcrb
jns
push
pop
ljmp
add
mov
ss
test
and
pop
dec
inc
rcrl
test
scas
fsubrs
and
mov
repz
ja
xchg
js
aad
sahf
pop
lcall
xchg
loop
inc
add
insb
mov
xchg
dec
xor
jns
add
adc
cmp
pop
cld
scas
or
sub
adc
outsl
negl
lea
negb
lds
xor
sbb
and
cmp
enter
aam
xor
out
xchg
test
js
push
mov
pop
cld
ret
movsb
sub
mov
outsb
lahf
sbb
pop
xchg
das
shll
and
call
sbb
cmp
mov
jns
pop
jno
or
fidivrs
push
or
dec
add
pop
outsl
lods
popa
mov
jp
movsl
idivb
sbb
imul
out
fs
pushf
jecxz
cmp
out
mov
decl
les
sbb
inc
and
ljmp
rcrl
sbb
xchg
jecxz
dec
mov
xor
aas
adcl
ss
xchg
mov
sub
call
dec
gs
cmp
xor
pop
push
sbb
lret
and
mov
sub
in
or
jmp
mov
in
in
clc
pop
lret
lods
lahf
or
pop
ret
push
fstl
pop
and
adc
cmp
jmp
xchg
push
out
mov
mov
mov
or
xchg
shr
pop
sbb
or
movsl
scas
xor
fstl
push
xchg
hlt
aas
jge
in
mov
popf
test
and
inc
rcll
and
jo
push
sbb
adc
add
pop
xor
lods
sub
pushf
adc
mov
scas
mov
ret
aam
sbbl
cmp
lods
cmp
xchg
jae
xchg
dec
adc
push
mov
js,pt
imul
add
ret
inc
rclw
dec
and
xchg
sbb
xchg
cli
cmp
ficoml
adc
fsubl
jns
mov
daa
rcll
mov
mov
popf
jbe
cmpsb
add
clc
push
pushl
push
outsl
mov
xchg
jne
xchg
sti
repnz
out
in
fidivrs
jno
das
pop
or
push
in
mov
pop
imul
push
negl
aas
js
fmul
mov
gs
cmp
jle
addr16
sbb
mov
ret
jns
scas
push
xor
mov
and
dec
sarl
bound
inc
addr16
in
in
shll
daa
add
stc
mov
pop
sbb
aaa
cmpl
sbbb
repnz
insb
push
jmp
imul
ljmp
scas
orl
frstor
fwait
addw
insb
mov
xchg
in
mov
push
sub
repz
cwtl
lock
push
fstpl
push
xchg
ficoml
cli
sbb
add
or
pop
out
icebp
insb
test
jle
sarb
pop
dec
cli
adc
enter
popa
out
adc
push
xchg
xor
add
imul
cmp
mov
sbb
mov
mov
push
or
imul
stos
bound
dec
hlt
jmp
adc
daa
dec
out
scas
inc
xor
stos
popf
xchg
dec
mulb
jmp
loopne
or
iret
push
cmp
mov
cmpsb
pop
push
rcll
mov
imul
movsl
sbb
cmp
imul
dec
adc
mov
jle
je
clc
xor
pop
adc
pop
cmp
push
std
jno
inc
sub
xor
mov
or
pop
dec
jnp
mov
mov
push
in
xchg
adc
imul
push
mov
iret
and
jo
loop
data16
insl
adc
push
add
insl
scas
movsb
inc
push
repz
lcall
cmp
sahf
pop
in
jmp
rorb
enter
loopne
jg
idivl
mov
adc
sbb
sub
xchg
sarb
aaa
daa
mov
mov
inc
xchg
or
sbb
pop
inc
lahf
movsl
ss
repz
das
jp
mov
xchg
mov
mov
cmp
imul
sahf
loope
mov
mov
les
or
mov
lahf
aam
adc
movsl
push
pop
pop
mov
imul
adc
xor
mov
lahf
lods
xorb
lcall
jb
ljmp
dec
inc
adc
out
push
je
fs
dec
outsl
insl
stos
outsb
aaa
lahf
mov
insl
ljmpw
fs
mov
inc
sub
dec
hlt
lea
sbb
shlb
pusha
xor
dec
cmpsl
add
dec
xchg
sti
mov
cmp
xor
mov
outsb
sbb
dec
lds
inc
sti
xlat
aad
sti
sbb
pusha
push
cltd
scas
cltd
mov
stos
adc
sbb
cwtl
mov
in
sbbl
mov
das
lret
inc
push
sub
mov
dec
push
cmp
or
push
mov
js
mov
pop
imul
daa
pushf
sbb
jae
cmp
push
mov
inc
or
out
jb
pop
fs
add
sub
test
pop
inc
out
cmc
std
add
jmp
shrb
cli
mov
leave
fdivrs
jmp
lcall
cs
imulb
outsl
repz
pop
int
sbb
in
inc
mov
icebp
stos
fcompl
insb
or
and
or
aad
fcoms
cltd
xchg
adc
roll
in
cmc
call
mov
cltd
lods
int3
jae
pushf
cwtl
jecxz
clc
jecxz
gs
jnp
mov
aad
lods
pop
cmp
stos
aaa
enter
inc
jecxz
ret
fadds
inc
cmp
or
cmp
mov
push
xor
mov
jge
lock
test
sbbl
mov
nop
sub
inc
mov
push
movsl
adc
add
jne
das
cmpsl
jge
sbb
scas
aad
and
addr16
xchg
push
bound
push
mov
pop
out
push
push
add
mov
push
add
cmp
out
mov
jg
lahf
push
pcmpgtd
out
lea
fildl
xchg
sbbl
sub
cmc
cmp
push
sbb
mov
shll
cmpsl
cmp
and
sub
push
jns
imul
jp
addr16
rclb
mov
lret
mov
aaa
jo
lea
push
scas
daa
sbb
dec
test
repnz
mov
orl
daa
xchg
in
ja
mov
inc
idivb
roll
cmp
pushf
push
mov
xor
stos
rol
xor
fs
stc
inc
push
lds
push
jne
jp
mov
jge
insl
enter
jmp
dec
and
test
mov
and
ret
dec
xor
popf
pop
arpl
mov
call
inc
fstps
sub
jmp
mov
mov
lods
out
push
test
sbb
or
sarb
rorb
sbb
out
or
inc
pop
dec
sti
imul
dec
pop
xchg
inc
shrl
mov
packuswb
push
cwtl
popa
xchg
mov
cmp
inc
inc
scas
mov
or
or
xchg
jge
sbb
popl
rcll
mov
aaa
into
xor
popf
loopne
jle
ljmp
call
inc
mov
pop
sbb
in
cmpsb
inc
loope
ret
outsb
in
mov
cmpsb
pop
mov
lea
into
cmp
mov
setno
jge
in
das
or
jecxz
iret
icebp
cmpl
rcll
stos
dec
mov
ret
imul
sbb
add
push
add
fnstcw
and
test
mov
adc
fbld
push
lock
in
add
mov
imull
and
lret
or
int
pop
fistl
add
aas
xor
jo
outsb
pop
xor
or
dec
sub
dec
arpl
repz
adc
loope
ljmp
inc
push
cmpl
repnz
cwtl
adc
add
jecxz
pop
mov
mov
mov
aas
lret
addr16
loop
cmp
mov
or
or
xchg
push
scas
jmp
push
xchg
int
lret
sbb
fxch
cmp
insl
insl
orl
cmpsb
pop
rclb
push
lods
lahf
sbb
shlb
lea
ss
lds
push
movsb
xchg
mov
ficomps
jo
dec
sub
mov
xchg
add
or
ds
sub
fstps
aas
xor
insb
sub
lcall
xchg
icebp
push
sub
add
cwtl
xchg
aas
dec
xor
mov
mov
push
cmpsl
pop
inc
jp
mov
movb
out
sar
or
icebp
xor
adc
addr16
sahf
js
mov
sbb
xchg
cmp
out
ss
mov
ja
sahf
sbb
repnz
cmp
rolb
int3
xchg
lds
sbb
push
in
push
outsl
push
ffree
pop
sbb
lahf
aad
mov
jmp
dec
dec
jge
sub
in
ljmp
ret
movsb
out
cltd
sbbl
outsb
fwait
js
dec
rcrb
sbb
out
insl
mov
inc
jl
sub
cmpsb
mov
mov
mov
loope
je
daa
sbb
add
les
xchg
rsqrtps
js
sarb
fwait
mov
or
mov
std
inc
cltd
ret
add
jo
jmp
and
in
ljmp
mov
pop
int3
cmp
xlat
shll
jge
and
mov
sti
in
es
gs
decl
or
and
cmp
pop
pusha
in
xor
movsb
mov
test
ss
dec
or
pop
loope
aas
cmpl
mov
add
js
adc
sbb
decl
mov
insb
xchg
imulb
aad
cwtl
sbbb
mov
sbb
push
lods
mov
and
les
xchg
push
sbb
push
stos
xor
inc
or
inc
addl
notb
outsl
mov
push
sub
push
movsl
and
outsb
pop
add
mov
lret
push
notb
jae
push
in
rcll
fldt
mov
mov
sub
in
out
inc
sbb
out
adc
and
push
popf
fdiv
inc
xorb
ret
push
call
xchg
pushf
ja
and
in
adc
aam
cltd
insb
lret
loop
test
xor
jg
ret
dec
cmp
lea
dec
popf
mov
xor
in
inc
jo
aaa
scas
addr16
jo
jge
adc
jg
std
add
jae
sbb
or
dec
adc
push
fdivs
lea
insl
iret
dec
xchg
aam
push
cld
jecxz
or
call
aad
lock
sahf
movsb
pop
fsubl
mov
inc
jge
sbb
test
xor
pop
inc
push
dec
pushf
scas
nop
lock
movsb
aaa
call
stos
js
xlat
push
lods
xchg
jnp
pop
test
cmpsb
mov
inc
add
inc
cmc
stos
movsb
mov
jbe
lcall
imul
or
sahf
ljmp
fmull
inc
sbb
mov
mov
ret
pop
les
and
jecxz
scas
xchg
and
popf
pop
es
mov
mov
mov
ret
ror
loope
jns
out
aas
hlt
sbb
std
fisubl
pop
xor
aam
pop
je
shlb
jb
xlat
xchg
cmp
pinsrw
push
add
in
stc
in
scas
mov
fisttpl
and
clc
push
rclb
filds
mov
andb
jge
test
dec
mov
pop
sbb
xor
pop
in
push
inc
rolb
xchg
mov
mov
leave
out
jae
clc
hlt
or
pop
movsl
push
push
xor
adc
dec
sbb
gs
nop
pop
inc
push
adc
repnz
sbb
icebp
add
andl
mov
and
insb
data16
add
test
rorl
ret
into
jl
scas
std
inc
xlat
out
sub
mov
mov
mov
xchg
cwtl
inc
arpl
pop
or
loop
out
divb
pop
jl
nop
xchg
in
stos
cld
scas
and
daa
or
and
fdivr
popa
mov
xchg
inc
shrl
xor
add
add
dec
push
pushf
jb
and
aam
nop
je
movsb
mov
cmc
add
pop
mov
int3
scas
or
mov
int3
adc
adc
in
cmp
xor
push
in
sub
mov
adc
cwtl
dec
outsl
movsb
inc
xor
fcomps
push
lahf
sub
mov
dec
dec
frstor
das
sbb
xor
jnp
sub
lahf
cmp
ds
sahf
or
mov
or
lods
pop
pop
cmp
jno
cmp
mov
movsl
mov
in
sti
xor
xor
loope
sbbb
dec
dec
cwtl
pop
mov
adc
and
scas
imul
pop
inc
fsubs
inc
je
clc
enter
add
mov
scas
add
mov
jb
cmp
pushf
test
dec
out
lea
das
inc
jmp
outsb
cmp
test
test
jae
cmp
iret
sbb
mov
pushf
pop
into
shl
inc
and
or
ss
mov
xchg
rcll
mov
xchg
movsl
adc
pop
adc
push
mov
imul
andb
jmp
es
xor
fwait
movsl
dec
xor
divb
setge
ja
sbb
cmp
in
fs
or
test
pushf
mov
mov
jns
popa
es
mov
popf
mov
ljmp
push
push
xor
rorb
jno
pop
mov
mov
loop
popf
xor
out
lret
cmp
sbb
movsb
scas
test
mov
dec
or
dec
mov
mov
cmp
insb
pop
ljmp
and
jbe
je
inc
adc
pop
ds
jmp
stos
sbb
test
dec
pop
jnp
stos
xchg
subl
jae
or
xor
js
mov
out
xchg
in
adc
sarl
push
pop
or
call
inc
mov
aas
stc
xchg
lret
push
lods
pop
sbb
das
mov
insb
stc
enter
idivl
mov
mov
or
arpl
lret
mov
inc
test
mov
push
insl
aad
jmp
lods
sahf
jmp
cld
mov
data16
out
rorb
incb
fcom
dec
add
sbb
int3
push
sahf
pop
add
ret
push
mov
cvttps2dq
adc
pop
aam
daa
dec
xchg
push
out
cld
jns
mov
std
insb
mov
jmp
insl
inc
mov
dec
out
push
mov
aas
mov
xchg
sbb
pop
sub
inc
jle
and
mov
sbb
lock
in
jecxz
hlt
push
fldenv
mov
mov
fidivrs
xor
sbb
pop
imul
mov
negl
jnp
jnp
jnp
sub
fisttpll
loopne
leave
sub
sbb
jne
sti
inc
loopne
aad
in
je
cmpl
mov
shlb
fimull
out
add
jge
mov
subb
lahf
adc
sub
jecxz
lds
jbe
xchg
pop
push
xchg
call
and
pop
sbb
xchg
inc
inc
outsb
in
mov
pop
xchg
jg
lret
lea
fcoms
shrl
cli
jp
xlat
jno
out
leave
xchg
adc
mov
sub
call
push
mov
cmp
ret
add
aas
leave
mov
in
lods
cmpsl
test
add
daa
dec
ficoml
sarb
iret
imul
outsl
mov
sub
pushf
xor
pop
sub
imul
inc
push
sub
repz
dec
push
xchg
pop
xor
repnz
cltd
xor
push
jns
adc
push
mov
ljmp
shll
inc
and
pop
ficoms
and
jge
daa
xchg
stos
mov
in
dec
jmp
std
fwait
push
ret
sbb
loope
mov
push
xlat
std
xchg
and
and
aad
out
ja
fisubrl
imul
cmpb
addr16
loopne
jg
sub
fs
push
fisubs
aam
fistps
jp
es
testb
push
and
in
dec
xchg
fldl
js
cld
cld
in
or
mov
cmpsb
gs
leave
pop
outsb
call
pusha
iret
shlb
orb
jne
in
test
cmp
cwtl
jmp
or
cmp
jmp
push
pop
popf
cmp
sbb
scas
sbb
or
or
mov
jecxz
mov
add
test
fsts
ss
lock
mov
jno
fildl
jg
jecxz
jne
sbb
xor
nop
sbb
xchg
sbbb
leave
scas
xchg
insl
and
jp
in
movsl
lds
xor
rol
bound
mov
mov
repz
rolb
or
scas
add
cmp
dec
cmp
lods
clc
or
ret
mov
add
and
loopne
jae
add
push
popf
scas
mov
iret
cmc
je
loop
icebp
ljmp
nop
and
jecxz
stos
std
and
imul
movsb
in
push
jle
arpl
cmpsb
fsubs
jno
pop
ljmp
xor
aaa
ljmp
cmpsl
add
lods
pop
sub
test
shll
or
jg
packssdw
in
int3
cmpsb
mov
mov
cmp
and
arpl
ja
dec
cli
lds
pop
dec
adc
jecxz
jecxz
es
aam
dec
jp
rcr
repz
leave
ret
xchg
mov
jmp
sbb
add
enter
and
and
xor
lret
pop
dec
ljmp
push
sbb
mov
jl
iret
push
imul
lahf
shl
fisubl
in
testb
push
aas
popa
mov
fisubrs
scas
dec
mov
test
mov
and
cmpsb
popf
pop
addl
jo
mov
enter
mov
sub
dec
pop
inc
outsb
popf
add
test
xchg
scas
mov
in
or
inc
jg
mov
or
mov
adc
test
sbb
je,pn
in
mov
popa
bound
pushf
mov
xchg
loope
clc
ds
pushf
dec
ret
enter
sarl
mov
mov
out
imul
sti
mov
and
mov
maskmovq
notl
out
and
adc
mov
ret
pop
dec
jno
int3
xchg
xchg
stos
aas
int3
repz
push
or
jle
pop
repz
pop
sbb
mov
xchg
adc
into
mov
sub
xchg
add
addr16
xor
add
jecxz
push
pop
loopne
sub
pop
mov
add
xchg
pop
add
addr16
in
mov
aaa
out
or
nop
rcrl
movsl
push
xchg
lds
add
js
loop
sub
xchg
ss
and
in
loope
fists
dec
cmp
jecxz
push
mov
cli
add
pop
dec
into
adcl
out
push
scas
dec
ljmp
xor
mov
andl
aam
popa
mov
jne
pop
inc
sbb
jle
lods
mov
jo
add
cs
or
rcr
sbb
in
mov
pop
addr16
int3
dec
lahf
lods
inc
sti
mov
pop
popa
testl
pop
fnstsw
stos
mov
outsb
push
mov
out
jg
ror
inc
repnz
ret
bound
sbb
jecxz
mov
mov
add
sbb
xlat
ret
repz
into
in
int
rcr
insl
sarl
jmp
nop
mov
nop
pop
pusha
mov
jp
xchg
aaa
jo
and
loopne
ja
insl
mov
data16
mov
sahf
aad
clc
hlt
cltd
jne
fcompl
sbb
insl
lret
loop
cmp
add
sahf
mov
je
ljmp
push
mov
push
mov
xor
mov
rol
aad
fisubs
xlat
jecxz
out
outsl
jg
mov
pop
jl
mov
xor
pop
add
lret
into
pop
out
sti
cmp
xchg
cmpl
mov
adc
movsb
push
mov
loopne
loopne
inc
pop
stc
mov
jae
fwait
test
lods
addr16
mov
dec
scas
or
mov
out
aam
mov
pop
notl
sbb
inc
cmp
sub
pushf
jl
or
or
pop
or
loop
popf
sbb
loope
outsl
int3
mov
mov
fnstcw
stos
loope
jmp
dec
jno
out
xchg
pop
cmp
rorb
in
in
sub
xor
mov
icebp
mov
push
sbb
adc
iret
sahf
ds
data16
nop
cmp
pop
clc
aas
mov
mov
stos
inc
push
movsl
xlat
dec
movsl
insl
push
out
hlt
mov
lea
xchg
and
jne
push
loopne
push
push
xor
cmpsl
repz
sarl
fsubr
scas
or
icebp
dec
js
push
mov
add
lock
jmp
mov
dec
mov
scas
adc
mov
popf
pop
pop
fmull
fs
subb
test
cmp
mov
or
mov
add
pop
push
sahf
inc
xchg
pop
insl
arpl
sti
mov
mov
cmp
rorb
lods
xchg
test
int3
push
cmp
sbb
mov
lahf
xchg
inc
cli
dec
scas
das
cli
inc
aam
push
push
sub
sbb
popa
outsb
jecxz
leave
inc
adc
push
test
mov
sbb
rcrb
and
les
mov
in
add
aas
fildl
lcall
lcall
mov
or
adc
xor
aad
je
ljmp
jmp
shll
out
mov
das
mov
bound
sarl
js
fimuls
pop
dec
add
add
xor
arpl
hlt
jmp
sub
push
test
daa
mov
ds
xor
aaa
mov
sub
xchg
sub
adc
je
dec
loope
insl
les
adc
sbb
add
fisubs
push
out
cmp
imull
jmp
dec
mov
xor
or
mov
dec
pop
data16
ds
in
xlat
fwait
push
inc
sti
pusha
pop
hlt
sbb
sysenter
xorl
jno
pop
xchg
push
outsl
pop
mov
stos
mov
add
push
out
push
inc
mov
call
pop
fistl
push
das
inc
mov
les
jae
mov
add
xlat
ret
xchg
sarb
push
test
pop
mov
xchg
cmp
int
aas
sti
imul
xlat
in
sub
lods
movb
mov
ja
in
fs
adc
faddl
repz
xor
mov
loope
les
jle
cmp
pop
iret
popl
adc
xchg
mov
out
adc
mov
mov
jns
adc
mov
mov
jl
add
shll
stos
scas
xlat
ficoms
ret
insl
cwtl
imul
into
movsb
pop
rcll
loopne
lret
lret
pop
jg
mov
pop
inc
scas
dec
push
xor
mov
daa
dec
cs
lahf
or
xchg
lret
loopne
mov
mov
or
int3
mov
xchg
lcall
pop
idivb
sbb
sti
pop
xchg
mov
sub
les
iret
pop
js
xorb
shll
or
stos
repz
pop
lret
xchg
lock
repz
jns
push
push
jnp
xor
and
adc
inc
stos
lods
cwtl
push
fbstp
sti
cwtl
int3
mov
popf
cs
rcrb
aad
popf
std
xchg
mov
iret
fnstenv
sbb
push
push
flds
lods
fisttps
add
and
enter
lea
inc
sbb
mov
dec
test
jg
cmp
test
add
pusha
or
or
lret
arpl
push
push
and
push
xor
jmp
cmpsl
shrl
shll
out
ret
jl
xchg
data16
rorl
mov
push
je
sub
and
je
pop
sbb
push
sub
fwait
repz
xor
pop
dec
shll
std
push
pop
mov
xor
test
pop
jg
sub
imulb
jns
jmp
out
mov
jno
inc
neg
jle
pushf
dec
adc
cmp
xor
sti
jecxz
adc
aaa
aaa
psrlq
xor
enter
push
cmpsl
jmp
mov
shll
aad
sbb
imul
push
jge
xchg
mov
cmp
inc
sub
mov
lret
push
push
frstor
or
adc
in
xlat
cli
push
lock
loopne
cmp
jb
cwtl
popa
sub
add
push
clc
pushf
nop
inc
jne
les
mov
jno
mov
and
jecxz
add
or
or
sbbb
push
lret
mov
and
inc
mov
sbb
in
icebp
std
sub
mov
xor
roll
scas
xor
ret
dec
movsb
cmpsb
adc
pop
dec
aaa
mov
popf
loopne
mov
scas
in
pop
pop
rcrb
dec
sbb
scas
add
sbb
and
xchg
cmp
mov
mov
mov
sbbl
imul
pminsw
cmp
into
cmp
rorl
jge
ljmp
loop
mov
jp
loopne
mov
jl
mov
xor
jp
jg
je
push
push
push
out
cmp
aam
outsl
orl
scas
sub
inc
outsl
orb
jle
inc
stos
sahf
movsb
lea
pop
cmp
lods
je
sti
dec
add
cmp
and
mov
pop
movsl
mov
cmpb
adc
push
insl
sahf
pop
in
add
hlt
and
push
aas
dec
pop
hlt
dec
xor
xchg
in
pop
das
xlat
decl
sahf
push
mov
and
leave
cmp
rcrb
icebp
and
inc
push
add
imul
aas
popf
into
jns
mov
stos
lea
test
stos
fwait
push
ds
cltd
fists
push
rcrb
loop
sbb
divl
sbb
push
mov
leave
out
xor
dec
lret
xchg
lods
loopne
pop
mov
testl
gs
bound
sub
into
sub
adc
add
or
dec
pop
push
add
sbb
out
push
mov
pop
push
fldl
shr
and
sbb
out
and
lcall
mov
xchg
sbb
leave
push
and
fnstsw
ret
hlt
and
int
loop
lea
addr16
mov
fisubs
jns
mov
lds
jmp
ss
cmpsb
sub
sbb
sub
rclb
sbb
and
insb
ljmp
cs
add
je
inc
js
xchg
loopne
push
test
pop
push
movsl
jp
or
incl
pop
or
rcrb
ret
xor
and
ds
in
dec
mov
cli
inc
adc
xor
inc
out
dec
ja
push
movsl
mov
pop
jmp
fnstenv
cmpsl
rcll
cmp
or
sub
data16
sbb
push
loop
test
xchg
mov
gs
fidivrl
ror
or
lea
xor
mov
inc
js
mov
in
daa
or
fcoml
adc
mov
rolb
or
lea
lods
scas
push
dec
lret
ss
scas
es
cmp
jnp
outsb
push
add
call
dec
das
cmp
pop
mov
add
mov
sarl
ljmp
cltd
shufps
es
sbbb
enter
popf
mov
dec
push
xchg
cld
sub
gs
mov
push
enter
and
inc
xchg
in
add
inc
mov
clc
xor
test
loope
hlt
jb
pop
stos
jecxz
dec
push
sahf
rorl
sbb
addr16
test
cmp
inc
test
jbe
and
mul
dec
fsubl
push
sbb
lret
add
lods
shrb
je
stos
xchg
xchg
inc
aas
inc
pop
and
clc
push
mov
mov
adc
sub
aad
adc
repnz
cmp
push
or
mov
movsl
jno
jle
into
xchg
mov
test
or
mov
pop
inc
fildl
sbb
pop
repnz
mov
pop
scas
lea
cmove
push
adc
sarl
cmp
in
xlat
imulb
call
in
loope
fbstp
xchg
mov
sahf
fsubs
mov
or
mov
push
mov
or
stos
insl
xchg
jg
stos
les
sub
iret
fmuls
push
add
adc
mov
add
call
fidivl
filds
mov
inc
mov
xchg
mov
gs
xchg
cmp
pop
fs
bndstx
jne
loop
loop
adc
jl
push
and
or
out
inc
xchg
popf
movsl
iret
int3
mov
repnz
mov
or
or
sti
add
jns
xor
xchg
int3
xlat
int3
in
mov
in
mov
arpl
jl
fisubl
hlt
xor
mov
sti
mov
inc
xchg
movq
and
daa
ret
mov
or
mov
lock
pusha
mov
inc
xchg
xchg
fisubrl
push
mov
testl
inc
add
popf
rorb
shl
call
push
mov
push
adc
sub
movsl
loop
push
push
cmpb
in
mov
mov
cmc
push
ljmp
test
rclb
mov
push
rcrl
aad
mov
out
inc
mov
dec
ss
lods
or
fistl
sub
aas
push
roll
insb
xor
or
sub
sub
jnp
cli
in
lods
andb
sbbb
cmp
or
shl
inc
or
add
and
dec
pop
cli
adcl
shr
repnz
out
out
and
inc
pcmpeqd
mov
les
daa
jo
pushw
push
daa
icebp
repz
push
les
xchg
and
mov
xchg
rolb
pop
mov
push
daa
add
pop
jmp
pop
mov
stos
cld
fwait
and
inc
mov
sbb
je
inc
adcl
test
cmp
mov
in
popf
sbb
mov
outsl
mov
icebp
mov
sub
fisttpll
or
sbb
mov
xchg
xlat
or
xchg
push
leave
sbb
fnstcw
call
aam
sahf
fsubrs
xchg
cmpsb
jne
cld
scas
int3
push
pop
adc
sub
jmp
clc
xor
in
lea
arpl
jmp
push
jnp
pop
js
dec
pop
sbb
push
sbb
pop
repz
mov
cli
xchg
arpl
inc
sti
and
pop
mov
js
mov
clc
sti
lret
stos
jg
movsb
inc
lock
fldcw
jo
loopne
dec
ret
xchg
sub
adc
cmp
lods
stc
lcall
push
je
fmul
mov
shlb
out
in
dec
mov
shufps
pusha
pop
outsb
xchg
cld
pop
or
in
inc
les
movsb
lahf
aad
mov
imul
ficoms
pop
ss
pop
out
pop
dec
out
adc
cmp
adc
pop
fistps
neg
dec
loope
sbb
pop
sub
es
mov
test
ljmp
dec
adc
push
neg
mov
pop
les
aaa
inc
lcall
push
jp
das
jno
push
test
aam
cmp
push
outsl
fsubrl
ret
fsubrs
out
sbb
or
xor
int3
mov
or
fcmove
rorb
cmp
or
fcmove
fisttpll
cld
push
or
lret
lret
sahf
xor
push
lods
ljmp
es
and
and
mov
ds
jae
test
push
adc
inc
popf
leave
andl
and
fildl
adc
mov
orl
mov
jg
mov
insb
lahf
mov
orb
pop
testl
mov
rolb
push
mov
dec
mov
and
dec
test
inc
scas
shl
test
xorl
mov
in
ds
gs
push
mov
mov
or
out
pop
fcomp
repz
frstor
movsb
jl
invd
inc
push
or
repz
inc
in
sahf
inc
movsb
cwtl
inc
mov
std
pop
aam
lcall
je
out
in
xchg
ljmp
cli
gs
cmp
or
insl
jae
out
mov
mulb
or
in
xchg
int3
mov
clc
and
xor
cmp
dec
insl
mov
inc
dec
sahf
test
daa
pop
popa
pop
mov
mov
cmp
je
lods
sub
dec
lea
leave
lock
sahf
ja
adc
cli
imul
ret
andl
inc
dec
rcrb
inc
out
mov
inc
scas
pushf
or
cmp
cmp
neg
fwait
or
jp
push
repnz
pusha
push
xchg
xchg
push
insl
mov
popf
cs
fnstcw
icebp
imul
mov
add
lret
dec
sbb
cmp
stos
pop
xchg
sbbl
push
ja
cmp
aas
outsb
inc
je
lret
lods
xchg
mov
push
fidivrl
pop
mov
dec
xchg
add
sbb
inc
idivb
xchg
lock
or
cmc
mov
push
pop
int
xchg
gs
aam
cmpsl
jl
arpl
xchg
or
sbb
test
push
pop
rorb
mov
xorl
aaa
xchg
daa
add
sbb
pop
test
fldenv
xchg
mov
repz
ds
sti
aas
adc
cmpsl
and
adcb
xor
cmc
loop
cwtl
sbb
pop
enter
imul
dec
and
fwait
xchg
cwtl
arpl
or
je
aas
xchg
lds
fadds
sbb
call
add
cmp
repnz
jge
or
sbb
hlt
mov
push
mov
push
fisubrs
inc
cmp
rcll
out
xchg
insb
pop
in
repnz
and
xor
das
loopne
cld
push
ret
and
ret
ljmp
pop
int
jl
lock
mov
int
and
rcll
std
jg
fdivr
hlt
mov
sbb
dec
out
leave
gs
sub
jg
out
cmp
cwtl
mov
cmpb
in
mov
popf
xchg
pop
into
std
pop
test
lds
imul
aam
lods
jnp
push
sarb
jle
mov
ret
push
add
mov
xchg
mov
adc
inc
scas
mov
xor
mov
loopne
arpl
jp
cmp
xchg
xor
out
loopne
push
cli
mov
jne
subl
icebp
punpcklbw
mov
std
xchg
shlb
dec
sbb
add
and
pop
lret
xor
push
outsl
divb
lret
adc
pop
std
fs
or
push
movsb
sahf
add
cmp
loope
mul
popa
test
pop
mov
iret
cli
and
in
insb
cmp
sub
and
outsl
xor
add
ret
cmp
stos
adc
push
push
ds
dec
mov
push
shr
push
jl
cli
xchg
or
mov
daa
jmp
dec
sahf
mov
sub
dec
inc
outsb
outsl
enter
mov
xorl
out
sbb
push
fimull
jp
adc
insb
dec
or
int
ret
fisttpll
inc
rol
rorl
fwait
lods
mov
pop
rcll
fisttpll
fidivs
leave
cmp
sub
mov
adc
cmp
es
mov
in
fidivrs
icebp
fldt
arpl
leave
cmp
or
jmp
int3
std
outsl
aaa
ret
fs
add
mov
cmpsb
jecxz
rolb
idivl
in
mov
pop
mov
cmp
repnz
sbb
mov
jecxz
dec
and
out
movsb
mov
mov
cmp
pop
popf
cmp
mov
mov
xchg
sbb
mov
in
pop
xor
cmp
popf
cmp
and
ja
xchg
or
lock
fisubs
adcl
inc
mov
int
and
pop
mov
cmp
fistl
xchg
pop
roll
pop
xchg
mov
pusha
pop
mov
jnp
clc
xor
filds
sub
xor
xchg
cmp
mov
lret
mov
xchg
push
dec
shll
xor
cld
out
negb
mov
roll
pop
cli
mov
stos
mov
jp
mov
xchg
out
adc
enter
mov
xchg
test
ja
jle
mov
das
bound
xor
mov
sbb
fwait
cmp
jp
popa
imul
inc
jmp
push
fsub
das
das
adc
and
in
dec
jae
mov
fidivs
cmc
mov
push
sbb
dec
cli
xchg
and
pusha
push
aas
adc
fcmovu
push
pop
in
or
sbb
shlb
insl
jo
iret
div
fidivl
jmp
outsb
mov
cltd
movsl
jl
mov
ficoml
jmp
mov
stc
out
add
ss
addl
mov
jp
bound
aad
xchg
mov
movsb
push
ja
dec
popf
popl
gs
mov
outsl
jne
mov
or
bnd
sub
jo
pop
push
add
lret
and
fcomip
int
xchg
ret
scas
mov
sahf
cmp
sub
fidivrl
sbb
addr16
dec
popf
lret
sbb
inc
movsl
pop
mov
lea
ljmp
jmp
mov
xchg
mov
mov
mov
repz
filds
outsl
xchg
outsb
int3
sbb
add
in
xchg
stc
in
inc
sub
adc
push
mov
sarl
mov
mov
shlb
mov
ret
cwtl
test
or
or
xchg
xchg
dec
push
fnsave
insl
movsl
inc
xchg
xor
ret
adc
shll
xchg
dec
into
jg
xlat
repz
sub
and
js
aad
mov
jno
out
xchg
jbe
dec
or
push
mov
sbb
mov
or
andl
ljmp
jne
dec
fs
clc
mov
xor
lret
in
mov
xchg
sbbl
out
jp
pop
xchg
sahf
in
scas
notl
mov
lret
mov
ljmp
and
movsl
lea
test
inc
cmp
divl
mov
pop
fidivrl
insl
sbb
jg
push
out
pusha
mov
or
mov
gs
add
fcmove
js
sub
pop
mov
dec
or
mov
outsb
out
xchg
sbb
mov
sbb
shrl
cmpsb
ds
rcrb
in
mov
popf
adc
and
push
out
fstps
shr
idivl
movsl
movsl
mov
out
pop
xor
cmp
fiadds
and
sub
add
in
lcall
mov
fs
inc
leave
repz
aad
adc
fbld
add
lret
xchg
xor
ja
add
push
sahf
test
fs
pushf
inc
jecxz
sarl
mov
loopne
out
cli
test
mov
pop
mov
imulb
mov
popa
popf
test
pusha
push
dec
aam
sub
mov
mov
sub
pop
nop
dec
sbb
ss
push
fnstenv
loope
fs
cmpsb
cmp
dec
aam
int3
pop
cmc
pop
jns
roll
cld
or
cltd
adc
insl
arpl
add
stos
pop
pop
stos
leave
jne
lcall
sahf
dec
push
andl
inc
in
and
push
fsub
daa
mov
jmp
push
call
xor
in
and
out
mov
pop
fcoms
jno
or
sahf
dec
call
stc
ljmp
push
adc
out
aas
adc
repnz
stc
rcrl
repnz
in
jmp
das
sub
or
add
dec
dec
shl
cmp
cld
sar
add
imul
mov
repnz
adc
notl
inc
nop
cld
mov
or
mov
test
xchg
xor
ss
push
mov
and
sbb
xchg
lds
adc
jbe
push
out
pop
jp
scas
decb
lret
fidivrs
mov
xchg
jp
jns
in
scas
mov
xchg
in
inc
xchg
and
xchg
xchg
mov
imul
mov
and
inc
sub
and
cmp
adc
sub
ds
mov
into
xor
pusha
jo
imul
xor
scas
movsl
test
call
push
insl
sub
mov
pop
cli
lods
repz
daa
inc
mov
xor
jno
lds
xor
jecxz
xor
sbb
je
jmp
es
in
cmp
jae
inc
mov
daa
jl
add
pushf
movsb
mov
cli
mov
mov
leave
xchg
fcmovnu
xor
mov
push
lcall
mov
pop
sbb
aas
out
mov
inc
sub
add
push
out
aad
jge
and
imul
std
stos
dec
popa
clc
add
std
adc
dec
jns
sub
outsb
xor
icebp
mulw
cltd
add
lock
popf
adc
scas
mov
sub
stos
jge
jb
xchg
pop
mov
sub
fdivrs
pop
cmp
inc
cmpsl
out
test
sub
push
jl
sti
idiv
pop
sub
dec
mov
push
inc
in
das
iret
sbb
stc
clc
clc
fiadds
dec
add
movsb
rcrb
add
push
sbb
test
arpl
sub
mov
stc
out
cmp
stos
push
mov
mov
loop
inc
jecxz
lods
xorb
cld
push
add
dec
daa
xchg
xchg
push
sbbl
mov
out
fsubl
push
add
dec
mov
cmpsl
and
xchg
hlt
ss
mov
adcb
sub
pop
xchg
mov
xor
adcb
lret
pop
add
adcb
add
mov
ja
xchg
sahf
in
subl
divb
cmpsl
or
pop
iret
pop
repz
sbb
sub
loopne
xchg
data16
and
sbb
ret
xchg
lock
push
je
pop
mov
addr16
and
scas
fwait
mov
out
out
in
jnp
and
lods
ljmp
xor
fiadds
cmp
and
pop
rclb
sahf
sbb
push
ljmp
repz
test
xchg
out
push
in
sub
rcr
in
add
ja
rol
jmp
dec
cld
add
cmp
loop
add
int
push
bnd
scas
loope
add
stos
mov
sub
and
push
and
stos
xchg
inc
sbb
jae
inc
push
or
jns
fists
adc
adc
leave
pop
push
mov
or
cltd
inc
enter
jne
fcoml
ja,pn
xchg
in
aas
sbb
std
data16
lods
iret
cmp
mov
push
aaa
dec
inc
inc
jle
push
pop
mov
add
adc
mov
cltd
inc
and
pop
adc
dec
icebp
lea
sub
push
fnstenv
ss
and
dec
inc
pop
mov
cmc
pusha
mov
insl
inc
loopne
adc
in
out
xchg
xchg
jle
loop
ret
out
push
popf
nop
loopne
int3
inc
notl
in
mov
fucom
loop
adc
test
adc
mov
jle
mov
xchg
sub
or
add
les
mov
dec
out
or
in
stos
cmp
rcr
mov
mov
jge
mov
and
outsb
pop
pop
or
int3
rcl
push
stos
or
sub
mov
cmp
mov
andl
lock
push
fwait
add
imul
sarl
addr16
pop
push
jmp
scas
or
xor
push
call
mov
das
mov
repnz
cmp
jae
dec
xchg
aas
cmp
inc
repz
cmpsb
cli
movl
sub
jge
lock
popf
andl
sbb
inc
mov
xor
repz
scas
lods
pop
jp
pop
push
frstor
sub
pop
imul
test
into
mov
imul
js
dec
pop
pop
jecxz
gs
lcall
test
inc
pop
fsubrs
jge
fbstp
mov
and
mov
inc
mov
mov
pop
das
mov
lods
aad
ja
incb
fldl
iret
mov
insl
cmp
jnp
jmp
test
data16
addr16
ds
sub
sbb
add
aas
std
mov
cwtl
dec
inc
mov
data16
adc
mov
mov
ljmp
fisttpl
test
in
dec
imul
pop
std
add
mov
int3
adc
dec
stos
push
fs
outsl
cmp
lods
popa
jg
stos
sub
cmpsb
and
test
mov
and
sbb
xchg
iret
sbb
fldt
adc
sbb
jae
sub
or
push
and
sbb
imull
mov
int3
stos
out
jnp
and
enter
test
scas
sbb
mov
xor
cmpl
imul
sar
out
scas
mov
into
cmpsb
dec
cmpsl
ret
out
mull
or
inc
negb
sub
sete
mov
mov
dec
daa
push
sub
pop
sbb
inc
push
cmp
arpl
xor
and
iret
mov
xor
mov
and
out
stos
pop
mov
pop
mov
lahf
cmpsl
dec
and
je
movsb
dec
jae
shl
adc
xor
add
das
cmp
jae
neg
sti
fcompl
ja
ljmp
in
dec
adc
into
add
pop
stc
cmp
jmp
addb
insb
dec
push
jb
lods
sub
pop
adc
mov
push
nop
mov
sbb
cmp
xchg
hlt
ret
add
adcb
lahf
hlt
fisttpll
cmp
sub
pop
add
jmp
mov
in
dec
and
rclb
lret
pop
cmp
push
pop
adc
in
push
inc
ss
add
clc
pop
mov
inc
sbb
insl
movsl
inc
in
sbb
mov
loope
leave
add
cmc
orl
inc
pop
popf
mov
call
lcall
sahf
sarb
es
mov
xchg
add
data16
inc
rclb
cmp
xchg
arpl
cs
loopne
add
out
test
inc
xorb
out
rcll
push
pop
mov
les
sbb
comiss
sbb
mov
adc
and
cltd
jge
pusha
push
cmpsl
push
or
adc
ss
or
rorl
mov
dec
scas
repz
sbb
and
adc
xchg
adc
push
jno
out
xor
fbstp
repnz
mov
lret
add
jbe
fsubp
imul
push
mov
mov
adc
or
lret
jae
stos
push
lods
dec
adc
jb
and
inc
mov
jle
jmp
add
call
jmp
out
shr
dec
xor
test
inc
ret
enter
dec
cmp
subl
jnp
cmc
stc
pop
cmp
pop
iret
je
push
pop
mov
int3
sbb
pushl
fs
xor
and
xor
dec
cld
or
lds
fldt
mov
lds
lea
pushf
addr16
cs
pop
in
jno
cmp
aam
stc
xchg
mov
push
lcall
cmp
repnz
xchg
xlat
sub
clc
push
xchg
cmpb
rcll
jno
cmp
mov
and
jg
mov
andb
xlat
and
cmpsb
dec
pushf
push
aas
imul
lock
push
daa
jle
sbb
cmp
fnstenv
arpl
mov
dec
cmp
arpl
or
in
cli
rcll
mov
adc
das
mov
pop
lds
dec
and
fistps
gs
push
adc
popf
popf
mov
sbb
out
gs
pop
int
adc
add
xchg
xrelease
mov
mov
test
mov
fsubs
add
cmp
push
mov
dec
mov
inc
push
jp
lret
xor
inc
stos
jp
cld
lds
inc
push
cmp
rolb
popf
adc
and
jb
xchg
jecxz
in
jno
dec
or
dec
and
add
iret
inc
add
inc
dec
pushf
sbb
xor
sub
test
cmc
repz
mov
mov
jo
iret
pusha
jo
cmp
lret
lock
notb
add
mov
leave
dec
movsl
stc
cmp
data16
dec
cs
adc
or
push
mov
std
fdivl
in
cmpsl
je
add
in
shlb
inc
lret
clc
or
jnp
pop
insl
add
jns
adc
jle
pop
inc
jmp
and
add
popa
popf
adc
push
ror
mov
sbbl
dec
call
adcb
jnp
imul
adc
xlat
fisttpl
in
adc
jmp
cmp
sub
int3
push
mov
push
sarb
notl
repnz
push
dec
cmp
lds
jne
testb
popa
aaa
shr
add
jecxz
testl
mov
mov
and
mov
test
inc
push
sbb
lods
push
mov
leave
cmpsb
popf
lahf
xor
test
and
jl
lods
movsb
xchg
jno
or
push
xor
pop
xlat
loopne
push
pop
mov
out
or
rcrl
inc
adc
sub
or
inc
in
je
out
xor
fcomps
jnp
test
fs
dec
sbb
test
ret
outsb
lea
xchg
and
mov
xor
mov
xor
and
sub
xor
clc
push
and
inc
adc
mov
fildl
push
inc
push
mov
jmp
mov
push
leave
dec
jne
adc
mov
loop
mov
pusha
scas
mov
xor
scas
lret
adc
dec
in
jo
lods
cs
mov
adc
call
lahf
jle
inc
cmp
mov
jnp
sbb
mov
hlt
add
not
pop
push
push
add
in
or
ljmp
xchg
test
ficoml
mov
int3
jmp
or
and
into
into
fisubrl
dec
inc
mov
or
or
add
clc
cmpsb
dec
sbb
jge
adc
cmpsl
sbb
bound
cli
or
shr
rclb
adc
aad
out
js
jmp
ret
mov
loope
dec
arpl
jo
shlb
cmpsb
inc
pop
mov
mov
xor
loop
push
jns
pushf
mov
loop
push
test
nop
lods
fcmovne
rolb
pop
leave
pop
cwtl
jl
pop
adc
xor
push
in
lock
call
js
int
jns
or
pop
cmp
in
jb
fcomps
ret
push
sarb
mov
aaa
insl
adc
leave
sub
adc
repz
xor
das
aad
test
shl
jb
ds
aad
rcl
dec
dec
pushf
jbe
mov
movsl
add
aas
pop
dec
add
fs
in
lret
data16
jno
lret
pop
mov
adc
mov
xor
mov
inc
cld
or
movsb
shlb
stc
fidivrl
rolb
cmpsl
inc
hlt
movsb
sub
cmpsl
mov
in
hlt
insl
lods
push
cmp
push
push
push
lods
xor
aam
enter
fistpll
push
popa
ret
push
cmovns
sbb
adc
push
mov
bound
jecxz
or
sub
or
xchg
sbbl
sub
imul
jl
adc
and
daa
repz
sbb
into
lcall
test
gs
test
xchg
mov
in
mov
sub
pop
mov
ss
mov
mov
pop
pop
test
add
mov
cli
inc
das
cld
jno
clc
inc
mov
dec
jp
adc
lea
adcl
pop
inc
inc
dec
cmp
or
outsl
sbb
in
lcall
adcb
out
insb
shll
int
frstor
inc
iret
les
shll
sar
sbb
fisubrs
sub
pop
mov
pop
loopne
jo
cmp
into
xchg
and
xchg
pop
inc
out
dec
mov
push
mov
aaa
jmp
pop
bound
daa
jmp
ret
sbb
shl
call
out
out
test
gs
or
pop
push
xchg
icebp
scas
dec
gs
rcpps
xlat
out
xchg
bound
enter
cmp
into
mov
fwait
jo
out
ljmp
in
push
stos
and
mov
mov
cmp
std
xchg
ret
loope
shrb
outsb
jmp
in
sbbb
data16
push
add
adc
mov
adc
or
and
mov
dec
popf
and
mov
and
pop
stos
rcr
cmpsb
leave
cmp
test
inc
mov
sub
loop
or
clc
dec
cwtl
sub
int3
mov
arpl
inc
sub
xlat
jecxz
sbb
lock
shlb
jne
call
push
es
rcl
inc
push
movsl
bound
sbb
push
cmpsl
dec
xchg
or
roll
sub
jge
adcb
jmp
sub
sbb
or
cli
jp
iret
dec
inc
daa
into
and
sub
repz
insb
shlb
clc
ffree
cli
adc
stos
pusha
dec
ds
or
inc
mov
add
cmp
and
mov
push
aad
or
xchg
std
mov
mov
loopne
sbb
sbb
stos
mov
mov
push
pop
repz
mov
out
mov
push
pushf
out
cmp
popa
xchg
mov
jecxz
or
jae
lods
mov
sbb
fadd
push
adc
fisttpll
js
sbb
or
pop
dec
mov
add
gs
outsl
fs
adc
addb
les
xchg
inc
andb
jns
dec
inc
sbb
cld
push
jl
sub
push
test
leave
test
rcll
jge
nop
push
adc
mov
cmpsb
cld
jae
enter
inc
xlat
xlat
jmp
repz
pop
dec
add
imul
shl
mov
xor
mov
push
cmpsl
xor
push
sub
lock
aaa
data16
and
subb
xchg
out
cld
adc
fisttps
pop
fucomp
ljmp
xor
adc
sbb
es
inc
pop
sbb
in
push
mov
cli
xor
gs
clc
shll
out
sarb
in
mov
daa
lods
push
in
jnp
push
xchg
addr16
data16
int
sbb
cmp
jno
push
jge
cmp
int
jge
push
xchg
pop
icebp
or
cvtpi2ps
push
adc
roll
push
je
push
or
dec
fcompl
es
sbb
push
mov
gs
les
xor
ja
inc
aaa
ljmp
scas
mov
dec
or
and
jne
jo
push
test
clc
mov
adc
sahf
adc
adc
inc
dec
push
loop
pushf
xchg
jp
xlat
out
outsl
push
aas
inc
lods
arpl
movsl
mov
mov
fldt
repz
xchg
jmp
jmp
aaa
or
loop
mov
aad
push
mov
mov
mov
dec
dec
cli
and
stc
cltd
rcrb
divl
mov
cmpsb
cmp
jb
jmp
and
iret
in
ljmp
xchg
pop
adc
scas
xchg
cmp
movsl
icebp
and
xor
hlt
and
dec
jl
push
lock
int
jmp
sub
enter
arpl
adc
xor
xchg
inc
mov
dec
adc
xlat
cmp
stc
jmp
loope
mov
sub
ss
insl
xchg
inc
ljmp
fists
pop
pop
sub
dec
leave
mov
jb
cli
lds
gs
adc
sarl
adc
cmc
es
push
fimuls
adc
dec
outsl
lds
pop
jo
or
pop
xchg
stos
jbe
movl
mov
dec
mov
leave
xor
mov
test
lcall
jns
xchg
cmc
pusha
sbb
imul
xchg
mov
mov
and
int
mov
lods
xlat
mov
push
daa
mov
xchg
xor
shlb
cmpsb
das
or
and
loop
arpl
nop
pop
xchg
sahf
jl
ja
leave
aam
jne
dec
loopne
cli
fldenv
push
sbb
nop
shr
shll
iret
sub
add
add
add
loop
dec
or
push
gs
mov
adc
sbb
loop
andl
pop
rorb
inc
iret
stos
imul
adc
movsl
jne
inc
nop
and
scas
cld
mov
inc
jne
fwait
cld
mov
adc
call
lods
shlb
sbb
ror
bound
enter
jno
cmp
sahf
das
or
mov
bound
or
adcl
jp
pop
inc
lret
scas
ficomps
add
aas
out
mov
add
mov
ss
orb
push
or
sub
loop
bound
imul
ds
push
addr16
cwtl
xor
jae
loope
push
mov
sub
push
cmp
js
push
ljmp
pop
dec
stos
es
push
push
push
dec
pop
aaa
push
leave
xchg
movsl
or
fwait
push
xchg
adc
or
xorl
inc
jmp
push
mov
xchg
add
sub
lcall
stos
dec
mov
inc
cli
inc
scas
sub
mov
das
cmpl
xchg
or
xor
sbb
insl
pop
sbb
daa
pushf
ja
repz
xor
ss
in
add
jl
add
icebp
bound
xor
mov
roll
push
mov
xchg
cmp
push
dec
dec
cmp
push
pop
jge
pushf
mov
jnp
sbb
push
pop
add
xor
push
adc
dec
pop
push
mov
ja
lahf
jg
cltd
andb
mov
jb
mov
clc
insb
xchg
iret
iret
push
ljmp
adc
mov
iret
push
movsb
pop
addl
roll
scas
adc
imul
push
pop
push
mov
mov
ror
xchg
movsb
jnp
and
cs
lock
adc
adc
dec
pop
jmp
sub
call
jmp
mov
in
mov
push
hlt
faddp
jbe
mov
mov
sub
addb
scas
ljmp
outsb
out
inc
cli
rolb
lahf
les
and
fiadds
negb
adc
adc
test
fnstsw
das
pop
dec
bound
jns
cmp
inc
jl
es
sbb
sbb
push
in
jbe
push
cli
cmp
cmp
inc
loop
shl
mov
push
arpl
mov
mov
push
xchg
xor
cltd
cli
shrl
arpl
lea
out
xor
and
jge
and
int
jge
add
mov
mov
adc
je
ret
mov
push
adc
xor
mov
mov
add
pop
lea
in
sub
lods
lret
loop
das
clc
ds
cltd
xchg
lods
es
xchg
inc
cmp
out
fistpll
xor
push
sub
scas
lret
cwtl
lret
push
sbb
cwtl
cmp
cmp
lods
sbb
clc
ja
mov
mov
cmp
or
cld
mov
dec
dec
or
lds
cs
ljmp
pop
xor
pop
xchg
mov
adc
lds
pop
push
xor
call
add
negl
cmp
scas
jmp
sbb
inc
mov
mov
insb
enter
cmpsl
cwtl
push
fs
cltd
loop
fisubrs
inc
push
xlat
push
add
aam
pop
cmp
mov
outsl
push
scas
leave
cs
dec
and
xchg
xor
mov
jg
mov
inc
repnz
and
mov
insl
das
lea
inc
fsub
push
movsb
or
mov
push
jbe
pop
loope
xchg
dec
sbb
sahf
cmp
loop
jle
std
fcmovnu
adc
add
cmc
ljmp
cmp
int3
mov
cmp
cmp
movsl
lds
sub
rcrb
mov
pop
jg
jae
inc
imull
mov
xor
sbb
push
out
pop
mov
inc
aad
mov
push
into
adc
push
fs
cltd
outsl
mov
aam
adc
in
incl
cmp
rclb
imul
pushf
lret
daa
aad
cmp
and
je
js
fldl
int3
push
cmp
andb
inc
cmp
imul
xor
add
leave
ficomps
push
scas
rolb
xor
ret
shl
push
imul
xchg
push
inc
loop
lods
mov
pop
xchg
dec
add
mov
xchg
jge
frstor
cld
mov
iret
mov
dec
mov
fmull
insl
xor
dec
pushf
xchg
or
sub
ss
lret
loope
arpl
inc
push
fildl
and
add
out
mov
insw
mov
cmpsb
ret
lea
jo
mov
inc
dec
insl
mov
lock
mov
int3
cmp
js
xchg
stos
mov
fiadds
cmp
into
leave
push
xchg
xor
dec
add
mov
cmpsb
sbb
or
mov
sbb
out
add
sub
sti
lahf
xchg
push
sub
in
jae
cs
xchg
xor
in
mov
xchg
adc
push
add
sub
setno
aam
push
xor
jo
hlt
mov
dec
call
hlt
and
inc
dec
push
jl
sti
jbe
test
cmp
js
inc
and
lahf
divb
in
mov
xchg
mov
dec
movsb
es
xchg
jg
ja
xchg
inc
mov
ss
xchg
sbb
mov
push
aad
test
xor
pop
push
arpl
push
xchg
add
sub
mov
jo
pop
mov
adc
cwtl
mov
js
pop
xchg
xchg
gs
mov
data16
xchg
mov
divb
js
jb
fsubrp
xchg
xlat
lahf
mov
lods
xor
dec
dec
lcall
jo
loope
xlat
es
pop
cmc
in
push
rorl
dec
pop
mov
dec
mul
mov
pusha
lods
or
cmpsl
xchg
cmp
mov
notb
push
xchg
int3
repnz
cmpsb
or
mov
add
and
jae
movsb
push
or
dec
inc
roll
cmc
stos
hlt
add
sbb
push
adc
das
arpl
fadd
test
pop
ljmp
or
or
adc
loope
rcrl
out
push
std
fnstcw
in
add
cwtl
sub
push
mov
aad
jp
pop
or
jne
lods
jl
aam
js
push
scas
push
inc
mov
test
cwtl
out
adc
dec
insl
je
add
or
jl
movsb
dec
int3
mov
int
fidivl
sti
fcomps
iret
adc
shl
xchg
test
jb
aam
jns
ret
stos
pop
js
pop
test
call
cmp
shlb
out
xchg
add
push
mov
xchg
xor
xlat
jns
mov
cmp
std
or
es
cmp
outsb
ds
push
pop
inc
dec
pop
sarb
and
stos
lods
outsl
pop
or
adcb
mov
leave
push
push
cmp
pop
sbb
mov
outsl
out
adc
dec
aaa
lahf
negb
push
inc
and
xor
aad
scas
mov
pop
pop
lcall
int
pop
pop
xchg
nop
lods
int3
push
cwtl
aas
jae
jb
cmp
mov
push
lods
adc
ljmp
repnz
push
daa
shrl
test
orl
in
mov
xchg
cwtl
rorl
mov
mov
jnp
pushf
fidivrl
ret
sbb
int3
mov
mov
cli
lods
sbbl
xchg
xor
push
push
pop
inc
insl
lods
cmp
clc
sub
aad
mov
push
cmp
adc
sub
outsl
xchg
jecxz
and
orl
mov
dec
pop
mov
xchg
push
in
sbb
adc
in
loopne
mov
rorb
fwait
sub
arpl
test
push
pop
and
pusha
inc
cmp
xor
lcall
push
xorl
jnp
pop
and
push
sbb
sti
mov
pop
jp
sub
arpl
inc
es
sbb
jo
dec
ror
push
leave
fnstenv
scas
fisubrs
pop
into
adc
push
pop
std
add
or
loopne
jmp
xor
ss
cmp
stos
inc
adc
insl
dec
addr16
and
mov
fsubs
inc
sbb
jmp
or
stos
jg
outsl
inc
jge
lods
mov
in
loop
pop
popf
insb
sbb
xchg
mov
sbbb
rol
fimull
push
inc
sbb
lods
int3
mov
sub
mov
mov
test
ss
lds
and
ret
xor
or
jl
stc
and
xchg
xor
push
push
mov
ja
inc
mov
or
pop
mov
jecxz
lea
dec
cmp
ds
jb
ds
push
pop
jecxz
out
or
das
xorb
sbb
sub
jmp
shll
out
xchg
cmpsb
aam
push
enter
dec
gs
and
jbe
cli
push
jmp
mov
or
call
push
pop
jle
insw
xchg
inc
fsubrl
iret
cmp
mov
das
cmp
xor
arpl
mov
xlat
shlb
xchg
lds
or
imul
and
popa
jge
xor
dec
shrl
fcompl
add
std
jns
xchg
add
pop
push
push
data16
lods
mov
lret
add
or
mov
or
pop
in
inc
ljmp
push
loop
inc
xor
iret
das
in
pop
js
gs
ret
and
xchg
xor
sub
sti
lods
or
sub
inc
rorl
inc
mov
gs
test
inc
lea
xlat
jnp
push
pop
scas
and
push
sub
lods
jl
push
and
rorl
int
loope
add
push
xchg
movzwl
dec
inc
mov
lahf
repnz
add
push
mov
dec
cmp
out
cmp
stc
icebp
jmp
xor
sahf
push
mov
cmc
stos
ss
popa
sub
and
adc
sti
jecxz
hlt
fmul
xor
fadd
jmp
enter
clc
jp
dec
or
cmp
mov
in
sub
js
enter
push
cmp
lods
negb
or
mov
add
sti
cmpsb
or
cmpsl
adc
xchg
cmp
not
mov
xchg
cltd
nop
stos
add
stc
int
sbb
test
sahf
pop
jecxz
sub
outsb
cmpsl
cmp
js
imul
dec
jmp
ds
mov
adc
mov
repnz
movsb
pop
mov
cmpb
lods
test
rorl
xchg
int3
ljmp
adc
mov
xor
les
je
icebp
rcll
xchg
insb
or
lds
cmp
popf
mov
fnstsw
jb
push
mov
mov
mov
and
jo
insl
jnp
sbb
pop
filds
mov
out
jl
adc
fnstenv
jnp
pop
jp
mov
iret
xchg
push
inc
pop
clc
fsubrl
jns
test
ffreep
mov
and
xchg
inc
pop
xlat
sti
bound
xor
push
dec
push
sbb
push
jecxz
and
aam
dec
mov
cmp
ja
cmp
or
push
xchg
add
lret
mov
jg
add
in
sbb
push
and
push
and
sbb
sub
loopne
push
popa
push
jg
fistps
divb
lock
xor
insl
mov
cmp
lods
adc
arpl
xchg
arpl
sbbb
sbb
in
sbb
aaa
push
cmpsb
addr16
decl
je
cmp
mov
movsb
jb
or
lods
lock
adc
sub
sub
out
clc
int
mov
enter
lods
cwtl
hlt
cmc
jmp
pusha
dec
or
sub
aam
rcrl
cs
pop
xchg
mov
in
xor
sub
sti
cmp
pop
add
adc
push
enter
pop
xchg
clc
mov
cs
fcomps
cmpl
leave
sahf
pop
fbld
lea
mov
xor
sub
lret
push
push
loop
cmp
imul
add
movsl
adc
sbb
sbb
jecxz
aaa
jns
out
fidivl
mov
jne
adc
mov
js
sub
js
push
xor
popa
jl
dec
inc
bnd
jmp
and
xchg
fsts
sbb
ja
inc
ja
inc
add
jmp
iret
loopne
data16
int
adc
sarl
add
aas
mov
loope
test
ja
sbb
test
jge
andb
sbb
jo
jns
ss
hlt
mov
adc
pop
cmc
jge
fs
cs
mov
subl
int
inc
ljmp
cwtl
out
data16
and
or
add
fnstenv
stos
repnz
pop
or
dec
shlb
cwtl
mov
sbb
loopne
or
icebp
mov
pop
xchg
call
push
addl
pop
ret
pusha
aam
xor
enter
clc
ret
cmp
xchg
sub
stos
jle
mov
pop
sub
fistps
pop
jae
mov
mov
imul
jae
in
push
and
imul
andb
imulb
ret
xorb
je
adc
mov
push
not
gs
dec
popf
and
stos
jge
xor
rcll
mov
jge
cmpsl
mov
xlat
or
negl
adc
loope
stos
push
lret
pusha
add
xchg
ret
sub
lods
xor
lea
mov
push
dec
fdivl
and
mov
pop
loop
or
test
inc
mov
sbb
dec
push
jae
push
pop
sahf
add
cltd
js
sbb
inc
jo
mov
pop
addr16
mov
lds
iret
mov
or
dec
call
and
sub
cmp
adc
jge
addl
push
dec
push
sbb
or
fucom
aam
cmpsl
push
cwtl
lret
enter
out
add
lods
mov
xor
push
repnz
xchg
imul
std
xor
mov
sub
repnz
cmpl
mov
test
jecxz
mov
movsl
inc
out
leave
fcomi
sub
mov
daa
xchg
das
pop
int
mov
sbb
jp
mov
pop
mov
enter
pop
xchg
mov
addr16
sbb
dec
and
sbb
pop
pop
ficoml
icebp
pop
cmpsl
mov
into
mov
ret
push
jbe
enter
jne
jo
movl
subb
test
cmpsl
push
adc
arpl
xor
mov
bound
jecxz
pop
push
pop
das
mov
fidivrl
lock
test
mov
shll
xor
and
jne
adc
push
mov
adcl
aad
push
loopne
adc
clc
pop
sub
daa
imul
dec
xlat
adcl
lock
jge
int
push
cmp
daa
sbb
outsl
sbb
mov
sub
jo
es
mov
lods
xchg
inc
push
in
stos
daa
adcb
lahf
and
out
imul
sub
jb
pinsrw
ljmp
pop
dec
add
cmp
lahf
in
push
and
fistpll
mov
shlb
pop
adc
icebp
pop
sbb
pop
mov
mov
pop
add
mov
or
or
int3
adc
mov
out
rclb
xchg
iret
jecxz
outsl
call
push
mov
mov
stos
les
push
push
or
int
test
arpl
test
imul
loop
and
pop
insl
xchg
push
xchg
mov
mov
mov
pop
test
je
add
xlat
fstpl
dec
cmp
pop
gs
push
ljmp
xlat
mov
xor
ret
out
mov
xor
xor
pusha
xor
shrb
les
add
movsb
or
cmpsb
stc
pop
xchg
sbb
cmc
mov
insl
arpl
and
pop
in
jmp
xchg
push
and
mov
cmp
movsl
dec
daa
mov
fisttps
in
mulb
dec
mov
rcll
lods
fsubs
stos
jbe
stos
cmpsb
mov
xchg
mov
fistps
pop
cmpsb
mov
test
cld
daa
scas
in
imulb
xchg
sub
test
push
sub
sarl
cmp
pop
das
sbb
jo
bound
mov
push
sub
push
mov
loop
fbstp
mov
test
push
lahf
das
dec
pop
sub
data16
sahf
daa
lods
inc
sub
cmpsb
cwtl
and
dec
fidivs
shrl
leave
or
jbe
out
or
mov
push
les
mov
mov
rclb
movsb
les
lds
cld
pop
outsb
adc
push
push
push
leave
cs
ds
hlt
fcom
inc
ret
sarb
sbb
mov
imul
inc
insl
adc
nop
mov
push
clc
test
cld
mov
pop
pushf
cli
dec
adc
and
push
add
fcomps
fmulp
cwtl
fdivp
icebp
inc
xchg
aas
mov
push
int3
dec
pushf
xchg
pop
mov
mov
insl
mov
mov
test
sahf
push
sub
or
mov
dec
dec
mov
jnp
push
mov
adc
add
fsubl
pop
lahf
incl
push
loopne,pn
push
mov
pop
pop
adc
add
mov
mov
pop
ds
notl
mov
dec
in
ret
pandn
ss
shl
loopne
outsl
shll
push
jecxz
push
push
rolb
mov
mov
jecxz
push
inc
dec
xchg
pop
xor
push
out
or
nop
in
lret
sbb
cmpsb
sub
mov
mov
out
mov
or
jne
aas
decl
je
dec
push
jg
pop
jle
push
pop
rcrl
loop
and
mov
shrb
mov
out
notl
jb
imul
scas
cmpb
xchg
dec
jl
cmpl
mov
jae
push
hlt
fidivl
adc
loopne
sbb
jp
imul
in
or
mov
repz
push
ja
pop
jno
outsb
mov
scas
stos
or
jg
sbb
push
cli
lcall
andl
subb
and
sarl
cmp
push
test
mov
xchg
sbb
adc
xchg
add
xchg
mov
mov
aad
mov
hlt
in
enter
aad
int
in
aas
and
add
sbb
lock
cli
js
and
or
bound
mov
nop
xor
ja
and
sub
mov
mov
in
ljmp
mov
sahf
push
push
shl
test
xor
lods
inc
sub
mov
sbb
mov
loope
inc
fsubl
pop
pop
fadds
or
and
and
aaa
enter
pop
shll
cwtl
adc
push
subb
stos
dec
xchg
mov
xchg
mul
stos
arpl
outsl
gs
xor
pop
cwtl
dec
sti
scas
xlat
mov
jns
lcall
mov
fnstsw
cmpsb
sub
xchg
outsl
lret
insb
push
push
int3
dec
sti
cmp
jb
adc
jnp
mov
stc
inc
add
push
mov
out
sbb
jns
jmp
and
mov
adc
lret
inc
cs
jno
xchg
push
add
dec
xor
xchg
fstpt
mov
pop
fcmove
mov
cmp
cmovno
xor
jge
ds
adc
aas
xor
fwait
inc
loop
sbb
outsb
xor
repz
sub
call
adc
mov
bound
mov
fwait
cli
cmp
movsb
scas
xchg
cmp
cmp
dec
cmp
into
pop
enter
jge
adc
cs
pop
and
stos
or
pop
jmp
push
cmp
cmp
loopne
cld
dec
sti
cmpl
push
push
jge,pn
call
in
adc
popf
add
jns
and
gs
xlat
push
jecxz
sbb
lcall
jne
push
dec
aaa
cmp
out
aam
pop
push
dec
ds
jmp
rolb
outsb
cmpl
shr
rclb
sbbl
sub
inc
push
loope
ja
cltd
fisubs
mov
insb
push
sbb
outsb
icebp
mov
push
icebp
jae
fwait
mov
jle
jbe
cmc
pushf
in
sub
out
cld
mov
mull
cmp
pop
mov
arpl
out
ficompl
and
ret
fnstcw
sub
sbb
push
and
mov
dec
cli
out
xchg
inc
and
jl
mov
jb
roll
js
adc
dec
sub
imull
sbb
scas
mov
xor
pop
pop
int
mov
leave
adc
adc
mov
not
sub
stos
xchg
mov
inc
inc
push
mov
shl
pop
out
mov
dec
jns
mov
dec
loopne
xor
test
pop
pop
inc
movsb
outsl
add
adc
pop
nop
dec
xchg
pushl
fbld
dec
shlb
ss
cli
inc
or
xchg
push
in
pop
addr16
aaa
push
repz
pop
ds
icebp
push
aas
cmp
lods
das
sbb
mov
orb
adc
lods
pop
adc
test
push
xchg
inc
mov
push
xor
pop
xchg
pushf
nop
mov
fldt
xlat
call
dec
testl
enter
jns
lods
jmp
inc
out
cli
stos
imulb
or
or
js
dec
or
repz
cli
and
cwtl
lcall
mov
mov
pop
movsb
cmc
pop
mov
dec
shl
inc
ret
fisubrl
push
shll
jnp
jg
jo
fisttps
add
dec
pop
push
arpl
push
mov
lock
lret
mov
push
stc
xchg
andl
movsl
xchg
lea
lret
add
xor
lods
sub
mov
and
xchg
inc
rorl
pop
xor
pusha
add
sahf
cmp
mov
mov
nop
or
sbbl
les
scas
daa
sbb
mov
lods
les
mov
mov
lret
mov
sbb
mov
clc
mulb
repnz
adc
insb
lret
add
imul
push
ret
ja
sbb
dec
cmp
jb
adc
add
gs
ja
sub
cmp
inc
dec
lret
jnp
sbb
repz
pop
jb
lahf
cmpsl
cli
xlat
jbe
fstpt
fisttpl
lods
and
inc
mov
pushf
inc
inc
adc
rorb
lret
mov
push
jg
jbe
mov
int
mov
inc
jb
clc
or
or
pop
lahf
inc
fnstenv
and
sbb
je
call
incl
xor
add
in
out
dec
scas
add
xchg
nop
lods
std
inc
shll
pop
cltd
lds
test
cmc
aad
popf
pushf
je
sub
mov
sub
push
adc
and
cwtl
inc
icebp
daa
mov
push
add
stos
jb
rcrl
fsubl
pop
cld
jg
stos
xor
iret
and
mov
movsl
mov
add
dec
icebp
outsb
or
jecxz
add
add
inc
xor
jecxz
or
in
add
xchg
lret
pop
sti
dec
cli
mov
repz
sub
jbe
aad
jecxz
jle
fcmovnb
testb
call
jecxz
push
aas
shrl
mov
int3
pop
cmpsl
addr16
fadd
loopne
fwait
push
pop
data16
xlat
dec
lds
mov
jp
mov
adc
or
aaa
pop
inc
test
pusha
cmpsl
jns
mov
loop
subl
inc
mov
mov
pop
or
stos
jae
loop
mov
lock
jle
cmp
mov
or
mov
xchg
rcl
and
mov
std
test
mov
aas
adc
icebp
or
cmp
int
sbb
stos
mov
xorb
mov
xchg
dec
and
inc
dec
pop
adc
cmpsb
sub
pop
inc
popa
aas
bound
in
out
cs
mov
rcll
and
rorb
les
sbb
mov
xchg
sbb
lods
dec
sahf
dec
in
outsb
jb
scas
inc
sub
cs
mov
dec
adcb
fldenv
push
push
mov
scas
jle
add
lcall
movsb
xchg
int
inc
pop
mov
cmp
mov
push
sbb
push
call
mov
jmp
mov
adc
outsl
fistl
adc
xor
sbb
xchg
fcoml
xlat
sbb
insb
aaa
mov
pop
jno
sbb
pushf
iret
daa
rolb
push
sahf
test
insl
lret
mov
aaa
out
sub
mov
xor
fwait
adc
xor
mov
cmpsl
in
sub
or
bnd
lock
lcall
push
adc
pop
dec
jae
imul
push
or
shlb
outsl
sbb
loop
inc
imul
add
xor
push
or
cmp
fldcw
xor
sub
notl
and
orb
sub
mov
sahf
hlt
fsts
hlt
dec
or
and
inc
xchg
mov
jle
inc
fistl
gs
mov
add
and
jg
mov
push
push
out
adc
push
mov
dec
repz
cwtl
add
jg
imul
aas
pop
push
pusha
les
lahf
jle
fdivr
cmp
pop
push
and
insl
jl
out
mov
and
add
jle
pop
scas
sbb
jnp
xchg
in
hlt
sbb
in
jecxz
jp
pop
sbb
aaa
pop
mov
sbb
enter
cmpsl
xchg
rorl
cmpb
mov
int3
or
xchg
mov
out
mov
pop
leave
mov
pop
add
lea
mov
add
leave
dec
lahf
pop
gs
mov
outsb
fcomps
clc
xchg
loope
push
out
mov
jecxz
adcb
mov
mov
mov
cmp
dec
jmp
sbb
imul
andl
jne
fistl
jbe
call
xchg
pop
and
fidivrs
and
or
adcb
xchg
lods
adc
jnp
cmpsl
push
adc
and
cwtl
mov
adc
sbb
xor
popa
pushf
inc
push
fimuls
lods
out
inc
cltd
and
xlat
fcmovb
xor
ss
outsb
ds
mov
or
mov
data16
jmp
repnz
sub
je
stc
xchg
int
xlat
dec
or
lods
fwait
push
std
dec
push
cmpsb
fsts
fadds
push
ljmp
sbb
repz
aaa
xor
aam
mov
inc
add
mov
lret
dec
je
stos
rcll
mov
sbb
in
jg
adc
dec
ror
or
mov
or
test
sbb
push
sbb
pop
jge
lea
xchg
dec
jp
sub
nop
pusha
data16
push
loope
dec
les
mov
pop
jl
inc
popl
sub
pop
mov
or
sahf
aas
and
ds
js
mov
or
dec
pop
pop
dec
adc
enter
inc
adc
xor
das
pushf
push
sbb
mov
test
imul
mov
shl
repz
push
outsb
mov
dec
add
das
cmpsb
lea
sqrtps
cwtl
pop
mov
mov
out
es
test
test
sti
push
adc
lret
outsl
lcall
or
jle
out
cmp
ljmp
ret
inc
push
je
mov
aaa
loopne
or
pusha
popa
pop
xchg
push
jbe
mov
setl
call
sti
mov
jge
mov
push
dec
int3
loope
fsts
hlt
pop
push
or
push
fwait
je
movsb
std
test
popf
rol
jns
sbbl
xchg
push
ljmp
mov
imul
add
lcall
xchg
adc
xchg
xlat
push
and
lret
push
cwtl
cmp
mov
in
jnp
sbb
pushf
sbb
popa
mov
int3
sub
in
mov
mov
cwtl
fs
rep
adc
sahf
xchg
mov
add
call
xchg
dec
out
je
fists
or
and
jge
ds
mov
mov
adc
cld
xor
mov
clc
aad
cmp
mov
xlat
leave
sbb
fisttpl
xchg
mov
mov
hlt
gs
dec
ret
ljmp
mov
lods
jo
lret
das
lds
pop
xlat
mov
mul
lds
stos
mov
sub
push
aad
fwait
les
cmpsl
aaa
pop
or
rcr
and
outsl
roll
xor
mov
pop
push
pop
or
cmpsl
mov
scas
mov
fwait
xchg
jo
push
fistpll
mov
mov
push
mov
mov
pop
cltd
cltd
out
push
push
imul
xchg
sub
push
testb
dec
fwait
mov
jno
jecxz
fisubrs
or
dec
push
push
fildll
pop
enter
dec
in
sbbb
inc
loope
inc
pop
xchg
mov
cmpsl
jmp
push
mov
jne
jne
mov
add
idivl
dec
pop
cmp
loope
push
cltd
pop
mov
insl
out
mov
decl
loope
addr16
mov
sbb
sub
mov
gs
jmp
jge
jae
dec
dec
movsl
out
cs
mov
pop
iret
out
popf
clc
pop
scas
sub
pop
insl
cmp
gs
cld
jnp
scas
dec
ss
in
subl
outsl
jecxz
js
xor
cwtl
loop
jno
mov
sete
lods
xchg
dec
and
sub
mov
cmp
out
mov
js
lahf
lock
jl
sbb
out
in
repnz
mov
fsubs
sub
lea
push
add
insl
pushf
mov
fidivl
mov
rcrl
inc
xor
ss
ficoml
xor
cmp
xor
insb
je
xorb
les
and
pop
test
pop
push
cmp
test
jmp
jg
lds
mov
sar
push
ret
aas
icebp
pop
icebp
stc
adc
nop
fucom
mov
call
sti
jnp
pusha
pop
mov
into
and
dec
sub
xlat
out
jnp
inc
mov
inc
mov
iret
push
mov
inc
test
mov
jl
xor
xchg
adc
or
push
and
pushf
or
xor
xchg
inc
inc
repz
jne
mov
jle
adc
jle
mov
sti
fdivrs
loope
dec
out
and
int
sbb
jmp
cmpsb
mov
iret
inc
sbb
inc
mov
jecxz
push
sbb
jns
mov
pop
std
push
jae
mov
andl
mov
add
pop
mov
inc
sti
outsb
cmp
adc
mov
push
repnz
dec
xchg
mov
add
adc
dec
in
sar
hlt
pop
out
shlb
sbb
icebp
lock
add
js
adc
shlb
sbb
pop
mov
imul
aaa
pop
sahf
xchg
sbb
scas
jle
loopne
push
sahf
ud1
adc
sahf
popf
pop
push
pop
push
mov
jecxz
and
aad
xor
xor
hlt
subl
mov
push
loopne
dec
lds
ja
fndisi(8087
outsb
ljmp
test
clc
push
fldenv
mov
repz
sub
push
jle
mov
adc
cmpsl
jle
insl
repz
xor
lahf
movsb
lret
pop
orl
jbe
ss
mov
add
hlt
dec
sbb
push
sub
push
xor
jnp
sysenter
inc
push
jl
cmpl
incb
add
or
repz
cwtl
popf
and
rol
mov
pop
and
iret
jmp
lock
lret
bound
jne
idivl
mov
es
nop
xchg
rcll
xchg
in
fildl
cmc
push
mov
test
adc
popa
or
cld
sub
test
mov
fistpll
lret
and
jb
mov
jmp
xorb
imull
les
stos
fcmove
shll
inc
inc
add
cmp
adc
loop
in
insl
cld
mov
loopne
adc
sub
mov
loopne
jmp
aam
mov
xchg
mov
cmpsl
adc
test
adc
cmc
jmp
pop
push
dec
je
mov
push
xchg
test
or
out
out
sub
rcr
jne
scas
sbb
fimull
jge
std
fdivs
lret
jb
pop
lea
mov
push
xchg
mov
imull
xchg
xor
inc
pop
pushf
cmp
mov
pushf
sbb
mov
ret
sbb
sub
bound
pushf
ljmp
outsl
cmpb
imul
mov
lret
jo
dec
xchg
mov
das
in
cmp
loop
mov
lds
int
jp
das
daa
ja
subl
mov
loopne
sbb
fdivs
sbb
sub
mov
clc
aam
xchg
fcompp
leave
inc
xor
daa
in
xchg
adc
insl
out
push
fcoml
and
rorl
mov
jo
mov
push
fildll
fwait
pop
icebp
inc
insl
leave
and
ret
js
push
scas
ss
push
jecxz
push
daa
call
dec
add
ds
ja
iretw
adc
je
dec
add
lds
pop
mov
jno
js
mov
lds
arpl
lock
jmp
cmp
insb
sub
lret
mov
push
cs
mov
insb
push
jnp
jg
cs
mov
jg
rorl
mul
xor
addr16
or
xor
dec
das
mov
inc
pop
cli
out
or
loope
loopne
adc
push
cli
leave
fisttpll
add
jl
fwait
sbb
xchg
testl
in
pop
in
and
imul
fmull
call
inc
pop
testb
int3
xchg
rcr
inc
xor
xchg
stos
popf
insl
scas
lds
pop
aaa
push
sbb
hlt
jp
je
pusha
jns
cmpsl
dec
pop
push
push
shl
mov
adc
addl
out
stos
inc
daa
in
or
fsubr
cmp
clc
adc
cmp
push
ret
and
shl
mov
repnz
lcall
cmp
adc
sub
das
out
adc
mov
test
mov
rcrb
out
sub
pop
testb
out
popf
lods
push
popf
stos
psubsw
inc
fcmovnu
xchg
inc
push
mov
insl
xor
or
aam
inc
push
cmp
sub
sub
xor
scas
or
out
mov
daa
stos
call
xchg
test
es
pop
jo
clc
mov
stos
or
testl
lds
mov
jl
jp
js
cwtl
popa
test
aaa
decl
into
push
mov
sbb
fisttpl
lods
sub
push
inc
jb
xchg
leave
js
xchg
add
adc
lahf
jge
mov
mov
sbb
lcall
mov
mov
cmpsl
pop
repz
jp
jecxz
mov
mov
mov
imul
mov
ret
sbb
xchg
mov
xchg
adc
enter
daa
fimull
aam
mov
cmp
sarb
orl
nop
xchg
fdivrl
mov
shll
xorl
pop
repnz
addr16
jne
aas
add
call
mov
xchg
sub
jo
inc
daa
dec
dec
add
sbb
and
sub
adc
mov
clc
bound
outsl
inc
loopne
dec
add
inc
jecxz
xchg
out
outsb
out
outsb
adc
pop
push
sbb
jns
testb
lds
ss
or
pop
int
lret
sarl
xor
fidivrl
lret
inc
out
add
jle
push
in
xchg
mov
lret
xor
adc
cmpsb
dec
jae
and
inc
inc
icebp
and
and
mov
loope
cmp
sbb
cltd
adc
or
notl
and
frstor
cmp
mov
test
and
sbb
cmp
cmp
das
or
pusha
or
popf
mov
cmp
jecxz
cmpsl
jg
ret
xor
aam
outsb
mov
aas
xor
imul
out
icebp
add
nop
das
testl
lcall
out
pop
xlat
xchg
ljmp
jmp
sub
push
push
xor
cmp
call
je
xlat
aad
fwait
test
int
inc
sub
int3
das
icebp
mov
xchg
sub
sbb
sbb
test
aad
inc
or
dec
gs
addr16
inc
mov
xor
fldl
into
inc
ja
out
outsl
push
xor
jge
inc
ret
in
jle
das
test
lds
cld
pop
sub
xor
dec
mov
decb
ljmp
push
and
pop
dec
movsb
lret
adc
inc
or
dec
out
idivb
push
add
inc
vmptrst
sbbb
mov
add
add
js
jmp
scas
rcll
inc
imul
pop
sbb
inc
shrb
fwait
aaa
lds
sbb
mov
cmpsw
jmp
addl
jno
in
dec
push
jo
shr
jmp
rolb
mov
jbe
out
cld
cmpsl
add
lds
outsb
mov
stos
adc
popf
clc
or
jae
adc
scas
xor
movb
ret
xchg
movsl
cmpl
pop
or
clc
push
scas
lds
fidivrs
repnz
cmp
dec
aas
comiss
pusha
adc
stc
movsb
nop
push
js
shr
jnp
mov
icebp
icebp
push
lock
lret
mov
xacquire
or
xlat
stc
in
sbb
jae
push
pusha
sahf
xchg
mov
or
xor
repz
insl
lods
loopne
mov
cmp
add
mov
jg
cmp
gs
arpl
and
int
ljmp
fldl
pop
and
pop
cs
pmaxsw
inc
or
pop
dec
cmp
add
daa
and
jo
enter
push
inc
jecxz
incb
rcrb
add
sub
mov
lock
leave
sbb
fwait
out
cmp
stc
xchg
pop
or
dec
xor
inc
mov
sub
sbbb
filds
dec
sub
and
mov
pop
jb
lock
inc
data16
test
xchg
in
xchg
xchg
mov
push
ss
ficomps
dec
ret
push
les
std
in
aaa
int
scas
cmp
xor
fwait
dec
pop
jbe,pn
xor
aam
xchg
dec
push
mov
mov
adc
pop
movsb
push
outsl
sub
cmp
jg
mov
data16
cmp
js
dec
sub
bound
sbb
aas
add
sub
shll
push
cmp
cmc
sub
int3
arpl
jb
mov
std
adc
or
mov
push
js
xor
ror
lds
and
sbb
outsb
xor
cmc
lret
cmpxchg
cmp
faddl
xor
sub
xchg
mov
dec
ret
xchg
mov
adc
jns
gs
stc
inc
sub
sbb
movsb
outsl
or
shrb
in
xchg
lea
lock
out
mov
cltd
ret
xor
xchg
cmp
xor
mov
shrl
and
xchg
xorb
sbb
rorb
mov
inc
scas
add
push
sar
nop
pop
enter
imul
fmul
jmp
cmpsl
ds
xchg
cmp
mov
out
pop
out
mov
loope
mov
lods
jg
or
xor
xor
mov
mov
dec
and
sub
mov
pop
cmpsb
add
dec
js
lahf
or
add
hlt
xor
pop
icebp
mov
ret
jecxz
movsl
sbb
filds
cmp
adc
inc
dec
call
ljmp
jo
int3
mov
xor
add
ret
pop
mov
sarl
xlat
repnz
cmpsb
pop
dec
imul
ljmp
das
movsl
xchg
pop
pusha
loopne
lods
ljmp
movsl
int3
pop
sub
dec
mov
inc
jo
push
mov
mov
jle
addr16
ficompl
je
shrb
dec
and
fldl
negb
xor
mov
jne
push
or
push
dec
xchg
xor
rcr
icebp
lods
aas
xchg
hlt
xor
or
mov
mov
and
fildl
iret
rol
xchg
jns
or
or
lds
out
inc
mov
mov
dec
add
sbb
into
adc
fimull
xor
push
mov
mov
jno
mov
in
sub
sarl
cmp
pop
cli
adc
lock
sub
and
dec
and
fimuls
sub
fisttpll
mov
stos
iret
repnz
xchg
subl
mov
and
aaa
push
dec
jg
xchg
cmc
andb
pop
mov
push
sub
test
push
sbb
lret
xchg
xchg
mov
dec
or
inc
in
mov
outsb
or
pop
fistpl
popf
jle
mov
or
jg
cli
gs
fimull
sahf
or
mov
aad
call
ret
jg
sub
and
test
adc
in
sbb
stos
sub
lods
out
push
or
xchg
lea
js
in
mov
lea
xor
xor
loope
mov
in
jae
sarl
sub
loope
pop
jg
pop
jne
xchg
jecxz
mov
cmp
cs
pusha
fs
add
scas
and
pop
ret
mov
mov
mov
aaa
jecxz
pushf
mov
adc
pusha
push
cmpsb
arpl
push
fbld
or
scas
sbb
dec
mov
jmp
sbb
jne
xchg
adc
jl
mov
test
pop
inc
dec
fnstcw
lcall
and
adc
pop
fldenv
ret
test
jae
adc
lods
rcll
out
pusha
cmp
inc
leave
lret
add
push
push
adc
mov
divb
cmp
inc
dec
mov
mov
clc
icebp
xor
popa
call
xchg
jp
mov
cmp
jae
popf
add
cli
and
lock
cmp
loopne
dec
mov
in
push
xchg
add
mov
fwait
test
out
out
or
jno
out
leave
push
aad
aam
jnp
xchg
and
test
test
inc
lock
cltd
out
arpl
pop
outsl
mov
add
fsubrs
inc
mov
mov
popf
out
out
jns
fisubl
out
add
std
daa
add
mov
xor
add
ss
dec
movsl
cmp
adc
jmp
inc
cmpsb
scas
scas
test
cmp
cmp
rolb
je
sbb
xor
in
ds
mov
in
and
sub
xor
cld
das
icebp
test
jg
int
mov
dec
inc
subl
sub
xor
ljmp
test
jmp
in
cmp
xchg
pop
loope
xlat
in
sbb
shlb
jnp
hlt
pushf
int3
mov
adc
cli
push
loopne
js
repz
aas
sbb
cld
enter
cmp
sub
fs
sbb
inc
aas
or
push
iret
xor
xchg
in
fldcw
cmpsb
movsb
mov
and
stos
xchg
popf
pop
xor
out
in
push
arpl
and
insb
sub
in
test
xor
pusha
sbb
mov
jno
imul
test
pop
aas
mov
int3
lock
sub
pop
mov
stos
jne
sbb
xlat
psubd
xor
pop
lcall
sub
xor
pop
mov
fmulp
mov
aam
jae
subl
or
push
icebp
hlt
std
pop
sub
dec
cli
pop
fcompp
push
addr16
iret
push
sub
cmpsl
adc
xchg
into
fs
jmp
outsl
aas
clc
mov
in
sbb
jo
push
xor
mov
mov
jle
repnz
add
jo
cli
andl
in
cmpsl
jg
jp
pop
lcall
add
or
cmp
sbb
shll
sarl
hlt
lds
repz
inc
in
xchg
bnd
dec
stc
imul
lods
xor
inc
mov
push
lcall
jb
shrb
mov
iret
test
ret
fimuls
or
ss
bound
push
test
stc
mov
pop
sub
icebp
sbb
lock
addb
movsl
fsts
hlt
out
pop
dec
ljmp
cmp
mov
cmp
out
cwtl
adcl
fbld
out
and
pop
ljmp
cs
cmp
cmpsl
sub
adc
xchg
or
or
lea
clc
mov
adcl
adc
mov
jbe
xchg
and
cmp
mov
mov
jb
xor
push
dec
lock
les
pushf
jmp
pusha
pop
dec
outsl
popf
out
inc
insb
xchg
scas
mov
je
inc
sbb
cmp
imul
and
nop
cs
addl
mov
daa
jmp
fcmovnb
and
jecxz
out
inc
call
test
cmp
cmp
add
pop
mov
sbb
repz
jns
jge
inc
sub
pop
out
lods
inc
and
imul
icebp
fdiv
mov
rcll
xor
lret
insb
cltd
jge
in
inc
ds
bound
rolb
mov
shll
outsl
pop
mov
jmp
shrl
shl
lock
outsl
cmp
iret
sbb
mov
inc
cmpsb
mov
cs
out
arpl
fstpl
xor
pop
xor
mov
int
dec
mov
fidivrl
cli
and
inc
inc
jp
add
jmp
mov
insb
rcrl
pop
pop
std
rolb
and
push
fnstsw
ret
cmpsl
dec
dec
scas
incl
mov
sbb
rclb
cmp
icebp
mov
cmp
js
rorb
jmp
xchg
lret
push
jmp
mov
push
xor
mov
out
xchg
xor
or
push
mov
ret
and
adc
std
sub
jmp
jge
cmpsl
push
dec
dec
inc
fidivs
xlat
adc
xchg
mov
fidivs
mov
fwait
mov
into
push
or
fisubrl
sub
sub
add
jp
aad
mov
mov
call
es
xor
push
bound
inc
fwait
mov
pop
sbb
xor
fidivl
frstor
jo
ljmp
bound
cmc
test
push
movsb
or
inc
cmp
fs
and
icebp
pop
mov
sbb
pop
adc
shll
ds
cmp
nop
jmp
das
pop
mov
jae
rol
add
mov
pop
loop
or
mov
dec
jmp
loopne
xor
lahf
aad
inc
jne
ljmp
and
loopne
cmpb
dec
addb
cmp
lea
cmp
dec
inc
push
dec
cltd
mov
das
call
mov
arpl
pop
mov
gs
popa
mov
enter
sti
pop
inc
jl
cs
idivb
push
shll
inc
pop
cmp
mov
jge
xlat
hlt
in
inc
ja
ds
popa
fisubs
mov
out
cmp
outsl
ja
xchg
mov
add
les
dec
sub
fstps
fildll
dec
mov
aad
cmp
adc
testl
mov
into
inc
aaa
dec
sub
sahf
fildl
mov
test
pusha
dec
or
adc
inc
repz
fsubl
aad
mov
pushf
xchg
dec
mov
fadds
stos
jge
sti
lds
adc
scas
jecxz
xchg
push
subb
cmp
out
xchg
xlat
out
jmp
add
mov
cmp
pop
int3
push
sbb
xor
push
add
hlt
sub
push
fwait
sbb
dec
jbe
repz
xchg
mov
mov
dec
push
loop
ja
fdivp
loop
mov
cwtl
insb
mov
scas
add
jno
addr16
mov
ss
xor
push
cmp
pop
fisubrs
jle
lret
dec
pop
fisttpl
adc
cmp
and
stc
add
andl
dec
mov
rcr
fwait
inc
xchg
xchg
and
testl
fwait
addr16
push
cli
adc
mov
clc
arpl
in
pop
mov
je
in
xor
inc
movb
add
mov
aam
dec
je
scas
rol
mov
mov
rcrl
ret
fstpl
and
ljmp
or
cmpsl
inc
push
inc
fdivr
and
loopne
xor
sti
hlt
xchg
into
inc
mulb
push
dec
or
lods
movsb
fnstcw
mov
int
andl
xor
imul
lret
popa
rcll
cmp
ds
mov
aaa
loopne
xor
sbb
dec
mov
dec
andl
mov
xor
xor
push
jo
fadd
sub
test
sub
xorb
outsb
loopne
int3
hlt
mov
push
test
add
xchg
and
push
test
push
hlt
jp
sti
or
enter
inc
xchg
aaa
and
stos
popf
push
inc
pop
into
in
jp
cmp
enter
lret
std
mov
clc
lcall
push
add
mov
arpl
jbe
es
sti
popf
and
cli
push
out
adc
mov
mov
cmp
dec
test
sub
sbb
sbb
cmpsb
mov
addr16
dec
shrb
cmc
jg
adcl
push
sub
std
sub
insb
inc
xlat
pushl
mov
fcompl
pop
lock
mov
mov
idivl
mov
sub
repnz
cwtl
push
cmpsb
sbb
in
adc
jo
inc
sub
mov
pop
out
into
aas
int
pop
mov
adcb
mov
sbb
and
pop
xchg
iret
cmp
in
pop
xchg
cltd
hlt
dec
out
mov
cltd
mov
push
out
cltd
rclb
and
stc
push
jno
std
mov
jbe
sub
lcall
sarl
mov
push
and
cmp
sbb
pop
imul
push
popa
imul
mov
lahf
test
lock
cli
sbb
dec
sub
or
mov
es
add
pusha
pop
cmc
adc
dec
nop
sub
sti
fdivrs
xchg
ljmp
and
scas
insl
clc
mov
push
cli
fs
cld
imul
add
push
pop
mov
jo
push
or
push
lds
sbb
jmp
mov
push
pop
jne
or
cmp
test
fsubrs
loop
adc
jno
xor
lret
popf
jbe
pushf
xor
adc
es
fdiv
fidivl
jae
leave
xor
mov
sbb
pop
movsl
pop
bound
mov
lock
jbe
jo
pusha
xchg
mov
movsb
outsb
and
imul
mov
imul
jmp
loopne
pop
jp
popa
mov
push
push
dec
cmp
mov
xlat
cmp
inc
pop
fdivs
mov
push
sub
adc
ror
loope
dec
pusha
in
pop
test
jecxz
or
xchg
sbb
pop
mov
nop
int3
stos
xor
jnp
mov
ja
jno
pushl
movsl
je
jne
push
mov
sub
fistl
aam
adcl
mov
test
aaa
popa
ljmp
sbb
outsl
flds
das
lret
call
inc
cwtl
sarb
sysret
in
out
cmpb
cs
ljmp
push
inc
nop
push
mov
mov
mov
inc
pop
into
stos
inc
push
loope
pusha
push
adc
ss
into
std
aas
gs
lret
mov
scas
shl
imul
xor
push
dec
mov
loope
mov
push
sahf
aaa
lret
testl
inc
pop
ljmp
jnp
je
inc
ret
xchg
lods
jp
push
lret
repnz
xor
outsl
idivb
pop
iret
pop
push
dec
sbb
aad
out
mov
es
enter
dec
mov
adc
adc
mov
insl
cltd
dec
loopne
mov
inc
or
dec
ficoms
dec
and
sub
jge
jae
and
dec
pusha
daa
add
arpl
sub
leave
fstl
mov
dec
push
lods
xor
outsb
in
out
pop
aaa
out
test
sub
push
lcall
mov
push
mov
mov
or
cli
mov
inc
int
mov
test
cmp
ret
lock
fldl
inc
inc
pop
pop
xlat
jns
pop
sub
xor
out
push
or
out
inc
xor
ror
inc
rcl
sahf
sub
xor
adc
das
in
scas
jbe
pusha
int3
hlt
mov
mov
mov
xor
inc
outsl
jmp
out
adc
sarb
jns
pop
and
and
popf
adc
aad
mov
jle
sahf
inc
cmc
data16
aad
dec
push
jmp
in
ss
rcrb
lcall
adc
jbe
hlt
decl
movsb
dec
scas
sbb
sbb
pushf
cltd
xchg
ds
dec
dec
popa
and
push
lods
pop
ja
sub
mov
mov
repnz
out
sub
out
xlat
in
fstpt
push
scas
or
cmp
lret
test
test
and
pop
shrl
push
mov
stc
pop
sub
jl
dec
mov
shll
cmp
mov
inc
xor
into
mov
es
jl
xor
test
jge
add
jl
inc
bound
inc
cli
mov
inc
andb
and
xchg
mov
icebp
xlat
outsb
xchg
push
and
and
add
leave
test
jmp
fwait
test
cwtl
movsb
in
push
or
outsl
pop
lods
add
jmp
pop
loop
mov
or
mov
mov
inc
cmpsl
push
jp
adc
imul
jae
rol
push
pop
ret
test
cltd
ljmp
pop
add
mov
in
sbb
cmp
addr16
cli
jg
shl
mov
mov
int3
lea
sub
jb
mov
js
pop
pop
push
fwait
dec
stos
pop
iret
pop
test
cmp
sub
sbb
outsl
mov
fldl
dec
sbb
dec
xor
cli
mov
mov
test
mov
adc
mov
mov
adc
mov
xchg
pop
add
cs
xor
sbb
loopne
dec
xchg
sbb
and
jbe
adc
pusha
or
mov
movsl
jo
xchg
xor
push
insl
stc
jl
pop
int3
sar
pushf
dec
out
les
clc
fidivrs
test
jl
jmp
xchg
jae
add
dec
xor
mov
in
sbb
leave
sbb
mov
out
mov
sti
scas
mul
jle
repnz
add
dec
mov
push
cmc
imul
test
inc
daa
cwtl
int3
sar
cltd
xor
cmc
cmpsb
pop
mov
push
jns
andb
push
push
in
push
xchg
xchg
xor
leave
jae
popf
es
out
adc
aas
ljmp
sub
xor
fwait
dec
sbb
add
enter
jb
jb
adcb
cmp
or
daa
aaa
or
sarl
addr16
mov
sbb
outsb
sbb
xor
addr16
push
xchg
xor
mov
mov
sbb
sub
imul
clc
sub
inc
aas
mov
jno
push
push
add
dec
add
dec
jg
out
addr16
shrl
dec
xchg
arpl
pop
xlat
pop
das
pop
or
lock
pusha
inc
xor
stos
shlb
lods
mov
fwait
jae
cmc
js
inc
int3
insl
xor
push
mov
jnp
dec
adc
pop
push
inc
dec
cld
popf
mov
icebp
aam
sbb
add
cmp
ja
maxps
push
adc
xchg
aaa
mov
cmp
cmp
push
js
leave
aas
in
popl
dec
inc
insb
pop
popf
out
and
notl
add
pushf
or
inc
cmp
and
xchg
bound
mov
xor
lods
cmpl
fiaddl
inc
imul
sub
push
cmpl
sahf
enter
pop
add
shl
jge
ja
lds
xor
pushf
cs
clc
ss
jo
cmp
lods
mov
lods
or
push
das
mov
loop
out
aam
xor
jl
pop
lcall
out
cmc
dec
jo
mov
adc
dec
cmpsl
mov
pusha
add
enter
inc
mov
adc
imul
out
hlt
inc
push
mov
stos
cmp
xor
dec
mov
xor
lret
lods
jno
jmp
out
or
iret
out
dec
imul
fcomp
fs
cwtl
xchg
cmpsb
out
rcrb
jecxz
cmp
xchg
and
pop
das
sbb
inc
pop
mov
aam
fwait
jne
pop
adc
leave
ljmp
mov
insl
cmpsl
fsubp
dec
mov
adc
pop
jb
jbe
mov
sbbb
out
lods
ret
pop
sbb
adc
movsb
bound
mov
fsubrl
sbb
fwait
xchg
loope,pn
xchg
orl
inc
sub
mov
pop
inc
cli
cmc
lods
imul
jno
iret
fwait
imul
stc
test
mov
adc
mov
add
cmp
mov
jbe
mov
insb
dec
pop
pusha
push
xor
pop
out
cld
int3
test
ljmp
push
icebp
xorb
and
mov
les
leave
aam
repnz
push
xchg
push
pusha
adc
add
add
lods
jmp
push
sbb
daa
inc
repz
orb
imul
cmpsb
inc
or
and
inc
sub
dec
cmp
mov
outsb
cwtl
roll
and
out
insb
sub
mov
insb
xor
les
shll
xlat
mov
stc
jns
cmp
pop
insb
movsb
xchg
push
mov
adc
push
add
or
dec
add
adc
fstl
add
cmp
filds
or
xlat
jecxz
clc
mov
addr16
cmp
mov
inc
gs
push
and
pop
hlt
pusha
ss
out
jbe
inc
cld
mov
mov
add
fdivrl
addl
push
mov
inc
popl
test
imul
jle
or
cmp
shrb
js
pop
jmp
add
repz
call
mov
out
outsl
jp
and
ror
in
pop
out
imul
xor
mov
jge
mov
inc
jmp
mov
imul
nop
mov
les
ffreep
push
sbb
popf
mov
scas
cltd
cmp
lds
and
aaa
inc
lds
test
sub
xor
xchg
stc
adc
negl
pop
sbb
mov
jmp
jl
sub
ss
lret
inc
mov
mov
repz
xor
gs
push
lods
call
jle
shll
das
inc
xchg
or
mov
pxor
lret
mov
cltd
sbb
jp
sub
jne
inc
cmp
mov
lret
fidivl
fsubl
mov
or
jo
jge
rcll
repnz
enter
addb
nop
sbb
out
adc
add
outsb
inc
adc
leave
iret
gs
shrl
dec
adc
xor
enter
xchg
cli
or
inc
pcmpgtw
jne
sub
dec
test
orl
sti
inc
lods
sbb
je
cmp
std
cltd
jmp
push
js
push
es
mull
mov
and
test
xchg
dec
and
stos
fnstsw
nop
popa
sub
aaa
gs
ss
shr
inc
inc
out
pop
aad
mov
adcl
pop
inc
xor
imul
repz
jo
data16
sbb
jecxz
cmp
push
fimull
mov
mov
outsl
call
jbe
ljmp
lcall
lret
mov
sbb
adc
jl
pusha
or
rolb
jecxz
jnp
jl
inc
and
stos
cmp
cmp
mov
xchg
jnp
mov
sbb
stos
clc
mov
lcall
sbb
scas
arpl
mov
sarl
sbb
hlt
push
sub
rorb
cmpsl
mov
sub
sbb
pop
cmp
imul
cs
dec
stc
pop
push
sub
call
test
and
cmpsl
sbb
popf
aad
lock
jle
ret
xor
sbb
mov
push
mov
std
das
icebp
stos
jecxz
or
insl
ss
loop
xchg
adc
inc
hlt
insl
sbb
movl
xlat
dec
inc
mov
ss
arpl
jno
or
xchg
std
scas
and
mov
ds
sti
test
add
testb
xor
and
xchg
lret
mov
mulb
mov
lret
mov
into
jmp
mov
add
mov
adc
lret
and
iret
mov
pop
call
mov
sbb
mov
push
dec
outsl
aaa
cmp
sti
jecxz
sbb
notb
push
mov
xor
mov
in
dec
dec
sub
pop
int
pop
lea
fistps
sub
or
adc
xchg
xor
push
mov
mov
push
cwtl
mov
adc
sub
mov
mov
push
js
jg
pop
outsb
loopne
rolb
cs
stos
inc
out
imul
jp
loopne
outsl
pop
call
movsl
in
hlt
cmp
call
fwait
adc
cmpsb
sbb
in
xchg
mov
fscale
mov
inc
fstps
repnz
mov
add
cmpsl
sbb
in
sbb
popa
cmp
daa
and
pop
les
mov
cmp
ljmp
xor
into
flds
mov
xor
mov
movsl
pop
nop
into
lds
movsl
mov
in
lret
inc
lret
add
jbe
mov
inc
out
ja
enter
je
js
imul
dec
test
stos
sub
sti
pop
outsb
nop
test
pop
sub
enter
inc
and
jnp
je
dec
pop
jp
xlat
jns
jae
cmp
inc
xlat
xchg
loope
shrb
mov
pop
cmp
push
shll
lods
fcomp
mov
aam
mov
enter
lock
push
in
mov
pop
fstpt
dec
jno
call
imull
mov
adc
std
jmp
mov
pop
or
out
nop
xchg
add
nopl
push
andb
cs
add
push
imul
in
add
leave
pop
fisttpl
mov
mov
stos
pusha
ret
jnp
pop
test
lds
pop
and
push
mov
scas
sub
fcoml
lods
fldcw
lea
mov
test
mov
add
add
pop
cs
nop
inc
stos
and
jb
das
das
mov
and
add
push
fwait
aad
jge
outsb
out
pop
arpl
popf
or
mov
je
mov
inc
pop
std
push
daa
cmpb
in
mov
pop
mov
cmp
dec
nop
xor
adc
inc
ljmp
sub
inc
enter
push
sub
pop
jg
bound
lods
lahf
add
xorl
push
popa
cwtl
sub
scas
inc
in
pop
dec
add
mov
or
dec
xor
orb
popf
dec
cmp
mov
mov
fidivrs
jp
jno
pushf
cmp
or
or
xchg
sahf
xchg
inc
xchg
xlat
mov
nop
outsl
mov
sbb
push
cmp
out
mov
and
gs
mov
inc
aad
sbb
fidivl
pop
icebp
iret
ret
leave
dec
push
ret
out
xor
iret
stc
xchg
js
push
mov
fiaddl
and
pop
jno
dec
daa
pop
jg
popa
insl
xor
jb
stos
das
cmp
test
mov
add
add
lods
aam
mov
jnp
test
fcomps
cmp
lea
cli
and
jle
aad
fiaddl
xchg
aad
jecxz
add
daa
cmc
xor
int
rorl
dec
mov
outsb
xlat
mov
in
test
or
fs
push
pop
mov
btc
call
iret
fdivs
out
mov
dec
or
dec
jae
imul
bound
setno
inc
xchg
cwtl
or
jne
mov
out
imul
mov
cmp
cmp
sbb
pop
shll
jbe
out
lods
cmp
sbbb
push
hlt
pop
jg
push
insl
popa
popa
fistl
dec
mov
pusha
jge
fistps
iret
cmp
cmp
adc
movsl
aas
mov
les
hlt
in
add
jecxz
xchg
in
repz
add
mov
push
test
pop
dec
loop
das
sbb
outsb
rcr
dec
mov
cmp
pop
pop
lret
mov
into
test
xor
ja
scas
outsl
shrl
cmc
jb
movsl
arpl
xor
mov
pop
mov
insl
pop
repz
push
jae
lods
mov
mov
sahf
mov
xor
lods
or
out
cmovb
xor
mov
data16
xchg
andl
add
or
push
mov
fwait
out
mov
imul
sahf
lods
dec
dec
inc
adc
push
mov
lret
ret
adc
movsb
aas
and
cmp
out
xchg
negl
lock
orl
jne
add
repz
fnstsw
lds
or
leave
pop
or
scas
mov
rcll
mov
fwait
cmp
cmp
push
into
pop
cmp
in
mov
in
fistl
jle
xchg
sub
push
fnstenv
les
pusha
xor
fists
inc
je
xchg
scas
outsb
sbb
sub
test
mov
clc
lcall
loope
cld
add
xchg
out
icebp
mov
movsb
js
stos
outsb
pop
enter
aad
dec
sahf
and
dec
out
int
or
add
pop
je
adc
push
dec
push
ret
stos
jno
call
out
test
or
mov
jl
pop
cmp
mov
xor
mov
mov
xor
push
dec
cmp
cmpsb
pop
xchg
xor
mov
in
xchg
mov
jb
lods
icebp
add
fimull
cmp
mov
push
insb
add
fdivp
fistl
repnz
sbb
outsl
test
pop
addr16
test
sbb
rcl
test
sbb
xorl
dec
js
lods
outsb
inc
mov
lods
data16
mov
lret
add
ret
inc
sbb
mov
leave
sbb
popa
orb
jecxz
dec
dec
cld
testb
ja
fs
xor
push
test
jmp
adc
inc
aas
lret
arpl
lods
jle
jmp
cli
cwtl
cmp
xchg
jnp
sub
mov
aas
push
mov
or
adc
scas
inc
rcl
js
data16
out
jne
mov
xchg
fldl
sub
rorl
and
sbb
mov
loop
sub
mov
push
insl
push
mov
stos
fwait
out
aam
das
or
push
pop
es
repnz
xlat
add
push
mov
or
sahf
xor
cmp
and
mov
out
lret
ds
cmp
imul
mov
fs
imul
add
mov
cmp
push
jmp
fnstcw
xorps
nop
xlat
mov
mov
shlb
rorb
in
push
insl
adc
adc
mov
xchg
inc
shlb
pop
mov
jbe
add
jmp
out
rolb
push
out
cmp
add
ljmp
cmp
dec
and
sahf
jle
or
shlb
les
loop
mov
stos
inc
stos
test
int
ljmp
clc
clc
sbb
xor
xor
push
cmp
in
cmp
jle
mov
push
stos
insl
loopne
stos
adc
mov
test
fs
jae
jnp
incl
mov
push
sub
int3
lds
xchg
xchg
sbb
lods
ret
and
out
cmpsb
sub
push
arpl
mov
add
push
cmp
sub
outsl
lods
xor
into
mov
in
pop
mov
inc
aaa
lret
sbb
push
ds
sub
push
fistl
pop
jns
sub
xchg
mov
sbb
push
jo
sti
pop
je
xchg
daa
push
xlat
xchg
mov
push
pop
jl
out
mov
lret
add
push
stos
out
cmp
adc
das
jg
adc
jae
sub
or
cmpsb
pop
cmc
fidivrl
scas
popa
scas
and
xor
and
test
and
pop
and
mov
lods
add
aaa
sti
jne
aad
dec
sti
add
lods
jg
adc
icebp
and
adc
add
icebp
gs
dec
ds
sbb
sub
js
and
mov
mov
ret
inc
ret
cmp
sub
out
cwtl
popa
fistps
push
outsb
add
jns
mov
std
adc
or
cmp
sbb
loopne
sub
movsl
sti
call
push
test
pop
out
pop
hlt
add
mov
pop
pop
xchg
aas
dec
mov
in
add
sub
clc
adc
rcl
mov
mov
pop
in
mov
ss
jbe
in
hlt
adc
clc
dec
jle
je
fsubs
xor
test
mov
fs
and
movsl
add
xor
ds
inc
enter
pop
lahf
jmp
pop
dec
testb
pop
xchg
jmp
ja
dec
xchg
and
mulps
je
leave
fimull
mov
scas
leave
outsb
mov
pop
lods
clc
cltd
into
xor
and
cmpsl
es
stc
scas
imul
pop
xchg
cmpb
imul
dec
test
movl
imul
pusha
cmp
dec
adc
jo
fnsave
decl
fnstenv
push
add
dec
xchg
gs
pushf
xchg
xchg
mul
and
mov
test
xchg
add
mov
xor
pop
push
test
push
add
cmp
lds
mov
test
ss
xor
imul
ret
or
stos
add
jle
sub
sbbb
lods
cmp
test
test
xchg
mov
pop
int3
inc
aad
rol
dec
jnp
pushf
adc
jge
sub
mov
outsb
pop
pop
bound
ss
push
add
add
cmp
repnz
sbb
pusha
lock
inc
test
push
bound
test
add
sub
insb
push
inc
cmp
int
notl
arpl
dec
and
jge
mov
cmpsb
inc
jg
lods
clc
nop
adc
stos
popa
jbe
xlat
xlat
dec
shrb
sbb
fs
push
inc
mov
and
push
xor
test
mov
ret
pop
mov
fcomp
push
xor
cltd
out
mov
mulb
sub
add
lret
jecxz
jmp
jo
jno
dec
ss
sub
les
pop
mov
add
in
dec
xlat
add
cmp
inc
inc
shlb
int
in
andb
push
fsubp
mov
pop
ret
int3
inc
pop
mov
cmp
cmp
repnz
leave
xor
scas
mov
mov
mov
data16
icebp
adc
pusha
push
jne
fwait
jmp
jmp
push
fistpl
mov
mov
dec
stos
xchg
adc
rolb
push
pop
pop
and
test
mov
iret
adc
inc
sub
lods
in
pop
fistl
cmp
adcl
stc
mov
push
test
pop
dec
aaa
test
mov
pushf
mov
shlb
in
inc
pop
iret
loope
pop
push
pop
pusha
movsb
int
ret
icebp
xchg
ja
shr
and
mov
sahf
incb
lahf
hlt
insb
sbb
lret
lret
js
sbb
mov
sbb
and
cmp
cltd
xchg
pop
jae
inc
mov
adc
adc
mov
dec
mov
shl
jle
cmc
and
outsw
inc
jg
inc
jns
xor
push
sub
dec
xchg
add
pop
sar
flds
mov
loope
mov
lds
stos
stos
jg
cs
popa
jge
and
cli
insb
insb
imul
jns
js
inc
or
add
mov
fidivl
ss
ficoml
out
push
test
cmp
or
add
add
xchg
icebp
jo
rorl
mov
decl
mov
jmp
adc
jne
jns
jmp
jns
xor
and
js
jne
jno
pop
jecxz
cmpsl
mov
sub
xor
sub
cli
shrl
inc
cs
or
cmp
cmp
repnz
arpl
dec
jl
mov
cli
lock
aaa
push
fsubrl
xor
test
mov
adc
mov
mov
mov
jne
addr16
inc
mov
cmp
lret
test
loope
cmp
sti
push
sahf
test
xor
or
add
and
sub
dec
mov
mov
outsl
leave
cmc
pop
call
and
stos
lock
and
add
sbbb
and
jl
repnz
fsubrl
mov
pop
or
mov
loopne
call
mov
jecxz
push
adc
dec
mov
xor
out
sub
mov
subb
xor
sbb
les
sub
jne
enter
imul
xchg
dec
shll
ljmp
pop
cmp
jle
mov
xlat
xlat
fildl
xchg
repnz
and
sub
popa
push
int
mov
cmpsb
cmp
add
add
cwtl
lret
aam
xor
inc
sahf
cmpsb
push
sub
jne
jmp
cmpl
jb
bound
or
outsb
xchg
jb
enter
adc
imul
sub
bound
dec
push
push
outsl
push
repz
mov
xchg
sub
ret
jp
stos
cli
lods
push
and
and
sbb
enter
sti
lahf
mov
repz
mov
sbb
sbb
or
repz
xchg
outsb
test
mul
ss
pop
adc
pop
dec
jb
or
aad
push
iret
popa
stos
out
add
pusha
dec
fcmovnb
incl
insl
imulb
cmp
cmp
push
inc
add
push
push
std
push
out
and
lods
xor
inc
xchg
ret
cld
sarl
test
cmpl
fwait
pop
adc
lods
push
icebp
mov
mov
dec
inc
out
inc
data16
add
int3
xor
sbbl
sti
mov
and
test
push
push
jns
lock
andb
or
fs
xchg
popa
je
xor
sets
xchg
mov
xor
fisubrs
xchg
and
sbb
into
les
jg
inc
insb
pop
cwtl
adc
mov
movsl
outsb
mov
out
push
lock
push
mov
sub
or
int3
pop
inc
fsubrs
mull
pop
std
sub
ljmp
imul
pop
cmc
cli
hlt
xchg
jbe
ljmp
pusha
cmp
cmp
cmc
xchg
int3
and
add
repnz
mov
std
pop
xor
dec
mov
std
lock
jmp
push
push
dec
loop
add
xchg
push
sar
jmp
loope
sahf
pop
pop
ficoms
dec
popf
pusha
and
sub
cli
jle
xchg
stc
cwtl
xchg
cmpsb
mov
push
mov
test
dec
lds
loopne
jg
adc
mov
gs
cmp
scas
mov
fs
fucomp
mov
daa
adcl
mov
jae
push
push
dec
sub
int
rcll
fs
nop
roll
adc
cld
into
xchg
mov
add
jb
or
or
lret
lods
adc
mov
scas
popa
mov
lods
imul
loope
clc
outsl
jg
or
jp
push
loop
les
pop
add
mov
sub
xor
aam
stc
orl
jmp
xor
ret
xor
mov
aam
data16
inc
xchg
call
scas
setb
and
in
inc
call
or
mull
mov
pop
lret
push
inc
pop
sar
jbe
cmp
ja
ja
es
ret
dec
pop
pop
inc
pop
sti
ret
dec
sbb
mov
movsb
cmp
rep
ror
mov
mov
shll
and
jbe
xlat
xchg
pop
jmp
fnstsw
mov
or
outsb
cmp
xlat
pop
dec
fcomps
iret
mov
sub
imul
add
fs
lea
adcl
push
in
xor
lods
pop
pop
pop
add
push
fstl
pushf
call
in
roll
push
and
jno
cwtl
in
push
out
xor
add
imull
out
pop
add
inc
movsl
jne
idivl
adc
push
jl
adc
stos
imul
mov
jmp
inc
jle
and
iret
lock
and
inc
jne
mov
je
aam
lds
or
repz
cwtl
add
sub
dec
mov
adc
imul
icebp
rorl
scas
lds
push
mov
mov
scas
pusha
das
sbb
pop
sub
in
fidivrs
lock
add
sbb
stos
or
lods
inc
xchg
mov
jae
fwait
jle
addr16
outsb
int
es
loopne
fisttps
std
sub
jl
rep
pop
push
test
in
cmp
ret
jb
ljmp
jmp
js
add
outsl
movsl
or
jmp
jno
pop
divb
xchg
xchg
mov
fstl
push
jnp
out
pop
icebp
add
js
divb
push
shr
xor
aaa
dec
out
dec
cmp
xor
push
addl
jae
sbb
jle
sbb
lcall
lock
cmp
add
xor
add
mov
or
loopne
push
or
xor
mov
sbb
xor
out
leave
add
sub
call
jp
test
mov
test
mov
test
mov
xchg
pop
adc
test
in
adc
mov
data16
lea
mov
sub
pusha
mov
pushf
xorb
bound
insb
and
mov
jmp
adc
cmp
rorb
movsl
mov
or
mov
ds
hlt
test
shlb
loop
dec
fdiv
iret
jmp
outsb
mov
xchg
pop
and
or
and
sbb
mov
cs
in
xor
out
incb
adc
out
ficompl
adc
aas
push
std
push
mov
insl
xchg
imul
mov
pusha
push
stos
push
dec
pop
and
mov
and
cli
mov
xchg
or
xchg
outsb
cmc
daa
adc
pop
cld
jmp
add
jp
dec
jb
movb
jl
inc
inc
pop
ret
cmpsb
mov
mov
sti
aas
ret
mov
xchg
dec
and
loopne
enter
notl
aaa
pusha
out
jmp
scas
in
cmp
dec
push
data16
inc
pop
dec
std
push
or
jne
inc
dec
xorb
stc
mov
test
xchg
dec
lret
ret
mov
arpl
adc
sbb
push
mov
inc
std
dec
mov
sub
push
outsl
data16
mov
pop
cld
fsubs
mov
repnz
test
jl
lcall
ret
xchg
repnz
inc
mov
shr
jb
out
inc
orl
and
shrl
jmp
mov
adc
ret
push
ret
add
stos
adc
adc
cmp
sahf
cmp
xor
mov
jg
or
xlat
insb
mov
add
aaa
or
in
loopne
and
pop
sub
jl
pop
push
mov
mov
xchg
inc
push
inc
jmp
mov
aas
pop
mov
iret
test
inc
mull
push
loop
cmpsl
sbb
iret
push
addr16
jmp
aam
shl
in
add
add
mov
jae
add
insl
push
outsl
and
sbbb
mov
push
mov
int3
jbe
mov
lahf
or
testl
xchg
loop
push
test
push
push
hlt
clc
faddp
dec
pop
outsl
sbb
sti
mov
jle
shrb
fistpll
mov
shlb
mov
mov
int
jp
jl
lcall
bound
and
or
sbb
lret
clc
pop
cli
mov
pop
fildll
call
pop
or
leave
mov
add
daa
sbb
pop
rcl
in
mov
mov
mov
mov
dec
sub
movsl
arpl
push
or
add
push
popa
nop
and
stos
mov
sub
call
add
mov
iret
stos
fsubl
iret
call
int3
push
mov
or
jg
jo
in
pushf
subl
and
mov
dec
outsl
push
pop
mov
outsl
jcxz
popa
inc
mov
mov
jbe
fcmovnbe
push
cmp
jae
movsb
add
fisttpll
rorb
inc
in
mov
mov
cwtl
jo
fcoms
iret
xchg
pop
clc
js
inc
mov
or
cmp
mov
mov
test
ret
inc
aam
lods
arpl
jmp
dec
stos
jl
js
fwait
out
ret
push
jecxz
pusha
add
sbb
cmpsb
out
mov
jnp
insb
imul
mov
je
cmp
push
sbb
xchg
dec
cld
mov
pop
and
ss
mov
test
ficoms
adc
or
fwait
sti
inc
mov
or
arpl
je
ss
sbb
stos
inc
movsl
aaa
push
les
jl
hlt
xchg
jns
insl
out
jecxz
stc
into
lea
mov
pop
add
xor
jle
push
enter
dec
sysenter
movsb
loope
add
cmp
je
push
fwait
gs
push
add
mov
push
notb
out
push
out
inc
popf
mov
sbb
mov
xor
jle
iret
mov
ret
decb
pushf
shll
aaa
jnp
js
sub
cmp
loop
and
mov
arpl
aad
xchg
into
jle
xorl
aaa
dec
xchg
test
cld
push
jbe
out
cmpsb
fldcw
or
popa
jge
mov
call
andb
adc
fsubrl
fnsave
mov
outsb
lods
scas
shlb
jnp
jb
adc
nop
push
push
jmp
test
pusha
xor
ret
jnp
mov
cmpsb
adc
and
lahf
dec
sub
mov
push
loope
sbb
adc
jnp
jg
lock
jne
and
adc
icebp
or
add
jl
call
fiaddl
fwait
negl
idivl
hlt
ret
sub
adc
adc
in
adc
fidivl
xor
mov
outsb
inc
xor
test
sti
push
mov
dec
loope
inc
cli
pop
push
sub
xchg
push
test
mov
jo
cmp
mov
clc
in
jp
sbb
in
test
addr16
push
ljmp
mov
mov
mov
xlat
and
jle
jge
xchg
pop
leave
loopne
hlt
add
cmp
cmp
mov
aaa
outsl
test
in
pop
loope
xchg
daa
fists
ror
orb
insl
mov
sub
imul
xchg
mov
mov
mov
push
insb
xlat
cmpsl
int
pop
push
ss
adc
jmp
and
movsl
xchg
mov
push
dec
mov
shlb
inc
test
pop
stos
les
repnz
int3
dec
adc
sbb
push
vpsubusw
xor
jg
pop
insb
fs
cmp
pop
out
scas
push
cmpsb
ljmp
fst
mov
mov
push
out
leave
jge
repz
jecxz
pop
cltd
inc
ret
lcall
xchg
repnz
inc
mov
cltd
aas
test
add
sbb
inc
pop
testb
ljmp
cmp
add
adc
mov
imul
sub
cmp
test
or
aad
stos
and
pop
jnp
adc
sahf
xchg
and
fsubrp
sbb
lods
dec
popa
push
aad
cli
xchg
out
and
xor
mov
lods
psrad
dec
push
rclb
mov
fwait
xor
mov
push
mov
and
xlat
fsave
test
dec
lods
lahf
add
cmpsl
xchg
fimull
ficompl
ja
mov
out
add
xchg
jmp
dec
add
mov
xchg
inc
pop
ljmp
xor
mov
xor
in
andb
jnp
inc
fmull
daa
popa
xor
mov
sti
js
dec
mov
fsub
int3
lea
movsb
mov
pop
stc
ret
iret
out
mov
jns
inc
lret
popf
xlat
sarl
aas
rol
adc
repz
leave
dec
sti
sub
insl
jo
pop
jge
cmpsl
adc
or
cmp
mov
test
mov
sub
cs
ret
movsb
imul
adc
dec
neg
lret
xlat
test
nop
sub
sub
fisttpll
sub
sar
mov
ds
jecxz
es
pop
or
mov
lods
lods
push
stc
adc
scas
jno
mov
or
sub
sbb
push
icebp
jmp
mov
orb
push
lea
addr16
push
pop
rol
les
outsb
iret
sbb
mov
mov
mov
cmc
loope
shll
loopne
test
ss
push
test
movq
mov
xchg
les
adc
pop
fs
adc
daa
loope
rcll
dec
add
iret
inc
mov
mov
pop
sub
xor
push
lret
adc
jl
mov
jle
xor
test
jmp
jae
cmp
fwait
sub
loope
mov
js
out
ds
sub
jae
pop
xor
cltd
ret
shl
jbe
movsl
fsts
jge
sub
fdivrs
jno
dec
mov
lcall
pop
loopne
sbb
mov
add
gs
lret
adc
rcrb
push
dec
pop
mov
or
decl
mov
fwait
stos
scas
mov
cmp
or
in
dec
adc
pop
and
dec
ljmp
je
daa
clc
jl
dec
adc
push
rorl
call
aas
cmp
xlat
aaa
mov
cmp
or
push
daa
adc
es
push
inc
jmp
insb
ss
inc
cmp
ror
jmp
fcmovnbe
adc
mov
mov
aam
sbb
mov
cmp
inc
xchg
xchg
dec
adc
cs
std
xchg
push
fstl
jg
cmp
lret
mov
hlt
inc
enter
outsb
outsb
mov
shrb
xor
add
jl
mov
aad
cli
mov
ja
test
and
mov
cmp
test
mov
loope
sbb
xchg
out
ljmp
cmp
mov
mov
aad
adcb
sub
fbstp
std
fcoms
int
mov
cmpb
cwtl
inc
in
mov
push
or
int
das
mov
imul
stos
pop
jbe
xchg
or
out
cs
mov
and
lock
jp
sub
js
sbb
jnp
or
adc
imull
sbbl
test
imulb
jmp
lahf
and
jl
pop
jae
push
cmp
xchg
scas
adc
dec
inc
dec
jp
enter
push
ret
dec
lea
mov
mov
fdivrp
sub
add
push
mov
jg
in
mov
movsb
jo
or
push
lret
push
fldt
push
mov
jg
ds
xor
ror
pop
andl
mov
repnz
jnp
or
lret
cli
push
dec
out
inc
cmp
clc
out
add
dec
xchg
lods
ret
cmp
add
dec
jns
cs
cli
and
inc
adc
cmp
sbb
clc
test
pop
out
icebp
pushf
inc
jno
cmp
subl
loop
push
inc
jp
mov
xchg
jbe
mov
dec
insl
cs
mov
ljmp
into
sbb
sbb
or
cs
add
mov
sbb
mov
rcrb
imul
out
ret
jecxz
rorl
es
inc
pusha
and
xor
xchg
adc
sub
cmp
nop
dec
fldenv
insb
call
and
pop
loopne
fdivrs
out
adc
rclb
jno
cmp
cmp
arpl
mov
inc
mov
jl
ffree
adc
add
mov
gs
adc
push
jle
xchg
in
out
sub
imul
movsl
push
xchg
imul
popa
aad
push
shlb
jp
pushf
movsl
or
mov
inc
leave
adcb
dec
pop
movsb
mov
ss
and
or
and
addb
rorl
mov
fcompl
mov
fldcw
cli
inc
popa
or
xor
push
xor
lcall
popf
and
sbb
xor
repnz
in
add
sbb
fiadds
mov
dec
pop
push
pop
mov
sub
mov
mov
hlt
push
nop
xchg
xchg
adc
das
mov
insb
jno
cltd
and
ftst
mov
icebp
shl
jecxz
icebp
std
scas
add
jbe
sbb
lret
popf
xchg
push
xchg
or
movsb
mov
rorl
enter
fs
loop
jge
clc
in
ja
add
out
sbb
and
dec
xchg
rclb
nop
dec
jne
push
or
lods
adc
push
es
or
fs
add
xor
out
sbb
pushf
fildl
sub
add
out
pop
out
mov
mov
int3
scas
push
adc
les
mov
pop
ja
popa
insl
mov
rcl
dec
addr16
bound
jbe
movsl
mov
mov
js
cmp
inc
into
cs
jmp
enter
in
lods
inc
mov
dec
push
mov
push
repz
lock
lods
ret
into
daa
lret
jno
cmpsb
sarb
inc
in
insb
jo
xor
mov
inc
and
dec
int
int
in
sbb
mov
dec
movsb
cli
push
adc
iret
xchg
sbb
pop
daa
cltd
pushf
pushf
stos
push
xor
mov
mov
jmp
in
pusha
js
mov
shrl
icebp
sbb
popf
out
mov
inc
lret
xchg
sar
jbe
sahf
lds
mov
dec
xchg
sti
xor
jecxz
cmp
loop
addb
leave
jle
hlt
arpl
adc
mov
test
lods
push
test
adc
mov
insl
ss
add
pop
and
push
jb
mov
dec
sahf
lea
ds
out
push
cmp
mov
fiaddl
push
subb
lahf
xor
or
cs
sbb
test
inc
mov
cltd
dec
repz
xchg
mov
push
out
out
arpl
inc
cmpsl
pusha
in
popa
pop
xchg
movsl
imul
in
pop
loope
idivb
into
lret
fstl
scas
imul
divl
xchg
jnp
and
cmp
jno
mov
mov
cmp
jae
loope
add
dec
jmp
inc
or
loopne
inc
fstl
icebp
jecxz
ret
pop
pop
inc
and
push
xlat
movsl
or
mov
inc
xchg
push
xchg
push
lret
insb
test
mov
pop
mov
setle
adc
jmp
mov
aam
mov
popa
push
aas
jp
pop
je
lret
int
jg
ja
mov
push
dec
adc
jbe
jecxz
dec
subb
es
xorl
imul
addl
push
push
xor
adc
testb
movaps
adc
push
adc
mov
fcoms
or
shl
imul
push
add
mov
pop
cli
je
cli
or
es
sub
repz
add
cmpsl
imul
inc
and
gs
fcomps
repnz
jns
negb
mov
leave
jge
mov
sahf
das
dec
es
loop
stos
or
push
and
xor
xchg
sti
out
leave
sub
dec
sar
ja
or
adc
sbb
pop
fiadds
repz
or
sbb
or
loope
aas
sbb
jno
mov
pop
nop
fucom
dec
push
lcall
pop
fnstenv
jmp
push
adc
mov
mov
mov
aam
add
push
data16
jne
scas
adc
mov
pop
adc
loop
pusha
push
fsts
adc
or
fs
fmul
adc
xchg
cli
in
icebp
mov
or
pop
inc
push
pop
stc
lret
cs
mov
outsl
cmc
sub
outsl
pop
sbb
dec
jae
xchg
pop
repz
in
xchg
fldenv
dec
insl
lret
or
lea
push
pop
mov
fdivr
pushf
xor
int
jne
mov
cmp
add
loopne
pshufw
call
lock
cmp
lcall
fimull
pop
aam
jno
popf
aam
test
jp
and
and
add
sbb
mov
sbb
mov
ret
lret
std
fidivrl
shll
inc
mov
cmc
xchg
pop
add
pop
in
scas
test
aad
mov
enter
mov
lahf
fldcw
out
test
stos
repz
nop
inc
xor
into
xchg
push
push
fisubs
adc
gs
push
lods
int3
cs
inc
mov
adc
mov
aaa
xor
dec
addr16
aad
xor
lret
sbb
hlt
cmpl
scas
inc
std
dec
gs
mov
mov
popf
jne
cli
adc
dec
imul
mov
stos
mov
mov
aad
xor
jge
std
push
loop
addr16
cs
sbb
fstpt
inc
inc
sbb
inc
insl
fcomip
fpatan
jnp
enter
mov
imul
insl
in
inc
push
xchg
cmp
push
jno
push
test
and
add
dec
xchg
push
inc
inc
stos
lods
je
jne
xchg
or
push
outsb
popf
mov
hlt
dec
je
sbb
pop
mov
ljmp
mov
mul
je
jp
jne
sti
jle
cmp
xor
sub
out
stos
shlb
aam
iret
js
and
hlt
or
xchg
push
pop
mov
and
cltd
je
movb
sbb
sbb
inc
enter
cmp
jle
sbb
sti
mov
pop
ficoml
out
adc
adc
xchg
mov
gs
mov
xchg
xor
lcall
cmpsb
ja
inc
cld
outsb
in
inc
into
ror
mov
sti
pop
xchg
out
sarl
es
stc
test
pop
lds
sti
push
mov
addl
sbb
es
sub
les
or
lds
lret
pop
xchg
xchg
dec
mov
push
mov
pop
mov
jbe
pop
roll
imul
mov
mov
or
iret
mov
inc
jmp
subb
add
xchg
sbb
jno
mov
std
xchg
aam
mov
xchg
jae
mov
loop
xor
fwait
sub
inc
lods
mov
sub
ljmp
dec
xor
and
adc
mov
shl
iret
sti
cmp
push
out
pop
popa
insl
push
mov
clc
das
test
enter
lret
adc
jo
lret
jmp
add
add
mov
inc
aas
adc
test
in
out
mov
in
mov
dec
popa
adc
add
jle
in
hlt
pop
pop
or
out
subb
mov
leave
lahf
and
into
xor
loopne
pop
jo
inc
add
xchg
scas
push
mov
mov
ja
cltd
test
mov
lds
xchg
repnz
jbe
mov
fstl
cli
xchg
and
popf
sbb
add
xor
inc
adc
out
and
jne
push
call
push
xchg
push
outsl
cmp
loopne
movsb
loop
sti
psraw
popf
mov
mov
out
or
push
fldt
lea
sub
out
cmpsl
inc
xor
mov
mov
mov
push
sub
adc
fprem1
mov
jecxz
outsl
dec
cli
mov
xor
cmovnp
call
clc
dec
loopne
mov
sub
fmul
mov
nop
mov
mov
or
add
cmp
movsb
push
jl
cmp
fdivrs
push
stos
cmpsl
xchg
js
or
pop
mov
adc
ljmp
shll
push
mov
cs
or
hlt
add
xchg
inc
xchg
xor
inc
mov
sub
jl
jp
ja
imul
in
xor
out
sarb
movl
xor
mov
jnp
pop
dec
xor
and
add
test
imul
pushf
mov
ret
mov
ret
dec
lds
roll
push
subps
inc
mov
popf
jo
add
std
dec
les
in
pusha
cmp
push
arpl
or
xor
sbb
inc
imul
bound
test
push
movsb
inc
movsb
mov
fbld
in
mov
sub
inc
hlt
lds
jle
inc
add
mov
enter
ja
and
es
outsl
rcr
fisubs
inc
or
pop
fwait
xor
inc
imulb
push
sahf
fmuls
scas
cmp
cmp
mov
push
pop
andl
push
push
and
jecxz
sbb
movntps
sub
pushf
pop
mov
stos
jecxz
mov
ret
mov
and
je
sub
push
mov
jle
cmp
jg
add
test
pop
into
pop
pusha
leave
outsl
gs
leave
mov
inc
mov
mov
popf
or
lods
repnz
out
or
addb
xor
shl
lcall
movsb
out
int
add
and
sbb
jg
and
jmp
les
enter
mov
leave
push
aas
mov
popf
outsb
and
lock
rcl
and
jb
dec
push
mov
repz
int3
mov
bound
add
xor
aad
repnz
sbb
mov
cmp
push
ret
lds
call
stc
ljmp
dec
test
imul
movsb
inc
aad
and
out
or
mov
mov
fisubrl
iret
jmp
iret
mov
movsb
out
push
add
push
mov
popf
inc
and
push
mov
sti
jno
rcl
mov
sub
mov
xchg
loope
in
pop
pop
xchg
in
inc
inc
and
icebp
push
cmp
xchg
fstpt
sub
je
mov
cmp
ret
clc
popf
xor
lahf
repnz
dec
cwtl
mov
add
lcall
inc
fwait
mov
xor
out
mov
sub
xchg
cmpsb
cmpl
jmp
gs
out
mov
ss
jmp
dec
mov
rcr
mov
out
or
outsl
cmp
jmp
inc
js
lock
outsl
push
fld
pop
mov
aad
pop
add
fmull
xor
sub
movsl
pop
pushf
clc
orw
mov
out
and
lea
or
xor
mov
lahf
mov
xor
pop
dec
push
cmp
cmp
in
dec
mov
jno
dec
pop
adc
int3
pop
sub
cmp
insb
shlb
call
mov
test
call
push
pop
jmp
int
sub
in
and
jl
cmp
xchg
push
popa
test
jnp
shrl
and
es
clc
mov
xor
leave
push
hlt
inc
add
inc
xchg
mov
push
dec
jo
arpl
push
int3
xor
je
sbb
mov
daa
adc
shlb
mov
out
and
and
nop
and
jnp
xor
xchg
dec
pop
push
lret
add
xchg
dec
stc
fsubrl
aad
sbb
or
pop
jmp
rolb
add
xchg
mov
leave
fildl
xchg
imul
jl
mov
push
jne
sbb
in
pop
xchg
scas
xor
pop
inc
test
or
xor
sbb
data16
mov
sub
jae
and
jne
in
pop
imul
or
cli
clc
push
rol
mov
xchg
out
adc
mov
fstps
in
fwait
mov
lock
fisubl
jge
int
inc
cmp
fisttpl
push
stos
sar
fnstcw
dec
mov
pusha
icebp
repz
xchg
fcmovnu
sub
adc
mov
pop
lods
std
pusha
lret
outsb
push
jmp
icebp
mov
cmp
dec
leave
adc
or
fsub
cmp
les
daa
or
mov
sbbl
lods
fildl
dec
or
xchg
mov
sub
and
mov
lds
adcl
es
cmp
cmpsl
adc
inc
cltd
sbb
lcall
iret
dec
xchg
mov
mov
jmp
pusha
add
clc
adc
inc
or
mov
and
adc
xor
inc
ret
mov
lods
or
aam
dec
lods
ror
mov
mov
and
incl
out
xchg
jns
pop
and
pusha
cmp
xor
dec
pop
pop
loop
add
inc
cwtl
pop
fcmovb
pop
in
sub
mov
jne
dec
pop
sbb
ljmp
cli
xchg
or
cs
movsl
xorl
out
adc
inc
fistl
mov
pop
mov
jae
mov
daa
mov
mov
inc
pop
dec
push
ljmp
out
jecxz
mov
push
inc
add
js
sub
sub
jmp
jmp
inc
mov
scas
std
lahf
cs
mov
jns
add
lock
mov
jle
sbb
arpl
dec
or
aam
jg
ret
stc
loope
pop
call
inc
sbbl
inc
or
fs
cmp
mov
sbb
pop
xchg
lea
call
xorb
jg
dec
sarb
sub
incw
sub
test
cltd
pop
dec
sarl
xadd
push
test
mov
jp
pop
test
ss
pop
int3
xchg
dec
insl
xchg
jecxz
or
jp
cmp
mov
cli
xchg
push
pop
lods
mov
jp
jge
lds
mov
or
xor
add
mov
mov
xchg
dec
ljmp
sbb
out
loope
push
adc
pusha
stc
scas
aas
ss
rcrb
movsb
stos
push
inc
jmp
jbe
cmp
push
and
shl
cmpsl
clc
push
pop
sti
aam
or
sbb
cmc
loop
repz
cwtl
cmc
add
int
add
or
sub
adc
lods
mov
in
or
xchg
jecxz
adc
mov
lea
cmpsl
popf
enter
test
test
cltd
mov
cld
test
lret
add
sahf
into
cmc
cmpsb
and
inc
lcall
lea
jmp
dec
pop
or
or
rcrl
xchg
mov
inc
sub
sub
inc
hlt
or
adc
cmp
xchg
xlat
aam
dec
adc
mov
pop
sub
xor
adc
jns
imul
dec
popf
push
rorl
ljmp
fcoms
es
add
lret
int3
mov
xor
pop
xlat
insb
shrb
add
ret
nop
aam
sahf
test
stc
push
fcmovne
xor
jnp
and
fidivrl
faddl
dec
testl
hlt
loope
push
push
add
cmp
ret
pushf
int
movsb
int3
mov
push
xchg
out
fs
lcall
insl
aaa
out
and
mulb
stos
imul
dec
fldcw
xor
xchg
jnp
lods
mov
in
push
pop
cmpsl
repz
push
jmp
xchg
xchg
cmp
add
mov
cmpsl
stos
pop
add
add
inc
into
jns
data16
xchg
sbb
inc
fst
movsl
pop
jle
push
inc
mov
daa
lret
incb
mov
xor
addb
add
sarl
sbb
mov
pop
add
inc
cld
xchg
popf
cmp
mov
enter
scas
outsb
leave
shll
inc
push
repz
pop
dec
inc
and
adc
jnp
sub
pop
fimull
push
mov
sbb
cmp
ja
push
sbb
jge
lods
push
test
rolb
push
ret
out
push
inc
orl
jp
adc
test
in
sub
pop
xchg
insl
xlat
insb
outsl
cltd
pop
or
or
cmc
addb
cmp
pusha
push
cmc
loopne
aam
sub
jp
out
sbb
sbb
xchg
pop
sbb
jp
or
mov
pop
lret
cmp
inc
push
xlat
mov
addr16
push
xor
cmpsl
std
cmp
jb
push
cli
in
sbb
insb
scas
cmp
cltd
xor
stc
dec
rcrl
dec
lock
fstps
xor
cmp
jb
fs
add
add
lsl
mov
out
rorb
jle
push
pop
jp
jl
push
nop
fadds
lret
leave
and
dec
cwtl
xchg
rclb
xchg
ljmp
jg
lret
xor
scas
aas
mov
fs
in
dec
clc
sbb
fchs
out
pop
add
out
test
push
dec
xchg
sbbl
push
lds
popa
aaa
fcoml
pusha
jae
idivl
mov
inc
std
push
iret
sub
decb
pop
add
mov
popa
dec
inc
xor
mov
jl
imul
lock
mov
test
xchg
or
mov
lea
adc
fidivrs
push
xor
and
push
cli
rclb
add
repnz
push
mov
hlt
mov
cltd
pop
cmp
cmp
cmp
mov
dec
pop
mov
jge
push
pop
mov
mov
lahf
sbb
and
fcmovb
and
lret
xchg
inc
inc
js
adc
mov
arpl
imul
sub
sub
jo
insb
sbb
fdivp
les
push
lds
and
xchg
pop
pop
mov
mov
rcrb
xor
repnz
ljmp
mov
or
addr16
xlat
jge
sbb
jae
ret
inc
push
out
cli
push
ja
out
outsl
sbb
imul
fnstcw
inc
jbe
pop
xor
cld
out
or
cli
hlt
cmp
das
push
sub
mov
test
mov
sbb
test
xchg
mov
xor
or
push
fdivrp
jnp
cmp
pop
iret
arpl
cli
scas
arpl
subb
leave
jae
sbb
jp
pop
or
mov
jae
jg
xchg
jge
cld
inc
iret
sbb
data16
xchg
jae
int
xchg
or
jno
lret
cmp
cmp
ja
fistpll
jecxz
imul
pop
and
push
ret
mov
lock
cs
in
jo
mov
std
push
ror
xchg
loop
sbb
mov
jecxz
jecxz
pusha
xchg
lods
leave
add
cmp
loop
push
pop
sarb
outsb
dec
adc
cmp
jnp
mov
push
add
add
sar
test
mov
cmp
pop
push
rcll
push
add
sbb
sbb
inc
movsl
sbb
xchg
aad
inc
sub
rorb
sub
sub
pop
xchg
and
or
repnz
aad
jl
and
add
das
sub
or
xor
mov
jg
fisubs
pop
add
jl
sub
xor
ja
lahf
mov
pop
negl
mov
push
push
es
ss
jp
notl
mov
xor
sbb
cmp
sbb
push
fcompl
movsb
mov
cltd
mov
ljmp
sbb
sub
push
add
pop
in
pusha
cli
jp
hlt
push
out
dec
aad
nop
pop
cmpsb
ljmp
adc
rcr
movsl
xor
jecxz
cmp
mov
xchg
inc
repnz
loopne
or
jecxz
xor
cmpsb
push
mov
jp
cld
lcall
dec
imul
fwait
or
jne
std
test
mov
xchg
outsl
inc
loop
xchg
cli
mov
aam
pop
ret
cmp
lds
jl
js
push
stos
mov
pusha
popa
or
inc
push
cmpsb
mov
jne
jbe
or
das
adc
test
push
cmp
insl
xor
lahf
push
fs
mov
stos
out
push
mov
mull
or
rclb
int3
rol
iret
hlt
cmp
mov
sbb
movsb
aad
pop
xor
inc
in
into
mov
fcomip
fwait
movsb
lods
jle
addr16
adc
sbbl
dec
adc
mov
notb
mov
add
sub
shlb
adc
mov
cs
outsb
xorb
in
mov
mov
rclb
add
out
sub
push
sub
pop
test
xor
add
mov
addr16
or
xor
mov
and
ret
pop
incl
cmp
call
jns
dec
sahf
mov
sti
adc
push
add
mov
adc
fistps
sbb
into
mov
mov
jecxz
inc
lcall
frstor
imulb
inc
or
xchg
sub
cmpsl
jmp
pushf
in
lock
xor
jbe
or
mov
loopne
sbb
addr16
push
mov
or
mov
push
add
pop
jle
jmp
inc
mov
cld
pop
mov
imul
cmpsl
xor
sub
push
cmp
xlat
push
jae
mov
and
sbb
or
mov
inc
fistl
into
scas
mov
or
push
and
decb
fstpl
dec
mov
imul
and
cmp
and
pop
lods
jecxz
pushf
sub
and
mov
fiaddl
iret
adc
enter
sub
mov
mov
ret
fisubrl
push
mov
mov
add
test
or
roll
push
es
out
int
out
inc
outsb
nop
shrb
movsl
fwait
and
dec
inc
cmp
fists
pop
into
js
adc
cmp
jg
hlt
mov
adc
sbb
jae
and
arpl
in
les
hlt
imul
pop
and
lahf
xchg
or
mov
inc
xchg
ss
clc
xchg
popa
cmpb
repnz
lods
shll
jl
ds
das
inc
ret
lods
push
mov
aaa
cmp
test
cmp
xchg
dec
xchg
and
aam
andb
fs
mov
push
arpl
mov
and
mov
inc
add
sbb
xchg
ret
in
test
xchg
dec
iret
jecxz
insl
ret
inc
push
incl
xchg
in
sub
popa
mov
imul
sub
and
xchg
mov
ret
test
jno
xor
insl
push
and
add
test
cmp
shrb
pop
sahf
into
pusha
or
jnp
push
and
ror
in
sub
jmp
jne
mov
pop
cmpsb
adc
cmp
outsb
xchg
mov
push
dec
nop
je
outsl
dec
cmp
dec
enter
xor
stos
loop
incb
pop
inc
sbb
sbb
push
les
mov
pushl
lahf
lds
inc
enter
test
clc
cmc
ret
int3
jp
dec
xchg
cld
mov
fs
movsl
cmp
add
mov
in
negl
pop
mov
in
imul
das
pop
push
div
int3
clc
push
push
repnz
adc
popa
sbb
in
fsubrs
dec
sbb
sbb
stos
cs
xor
cs
dec
add
xchg
adc
add
xor
ss
lret
mov
or
xchg
insb
or
insb
loopne
mov
mov
mov
out
rol
mov
mov
rcrb
sbb
shrb
pop
test
scas
daa
or
mov
and
mov
lds
call
inc
dec
sahf
sub
outsb
lds
ja
cmp
call
pusha
mov
add
xchg
adc
adc
inc
dec
fcomps
push
mov
mov
xchg
push
nop
or
call
add
adc
decb
push
aas
out
pop
rcrl
in
cmc
jb
dec
js
mov
aas
add
xor
clc
shrl
cmpsl
emms
into
lea
sub
mov
adc
arpl
jle
icebp
scas
mov
mov
inc
scas
or
xchg
add
jmp
mov
enter
cli
int
enter
mov
jno
inc
cli
jle
fisttps
cwtl
into
adc
xchg
mov
mov
push
xor
mov
rol
pop
test
or
test
dec
call
frstor
icebp
lea
sbb
push
inc
hlt
xor
test
mov
push
sub
or
jo
mov
shlb
push
ffreep
ds
in
aam
mov
mov
decl
lods
jnp
dec
mov
fsubp
lcall
out
or
repnz
test
roll
sub
mov
dec
or
cld
push
dec
lea
inc
fsubl
pop
iret
pop
sbb
sub
aam
cmp
add
imul
mov
mov
cmp
gs
xchg
cli
inc
sbb
dec
lock
test
into
mov
pushf
sbb
sarl
mov
inc
imul
fs
test
in
lds
hlt
insl
xor
rcrl
pop
clc
pop
lret
fwait
pop
js
dec
lcall
pop
movsl
mov
daa
xchg
sub
pushf
pop
fcmovnu
sbb
sub
sbb
ret
jmp
ljmp
dec
inc
hlt
mov
scas
lds
adc
pushf
jecxz
aaa
xchg
lahf
incl
mov
stc
xchg
dec
imul
andb
insb
js
mov
adc
adc
add
sbb
lcall
jae
nop
call
stc
in
cwtl
rolb
xor
mov
and
insb
xchg
aam
shrl
mov
sbb
sahf
mov
cmc
push
arpl
stc
sahf
arpl
cmc
shl
pop
aas
jne
push
sbb
into
arpl
dec
repnz
sbb
lock
xchg
pop
mov
cmp
adc
xchg
jmp
add
jae
cs
cmp
leave
pop
ja
psubusw
dec
mov
cmp
aas
pop
sbb
xor
je
and
js
mov
fbstp
jg
sub
push
test
jno
mov
hlt
rcll
lds
cmp
std
aaa
cmpsl
xchg
ret
jno
mov
pop
in
mov
inc
sub
push
cmpsb
stc
dec
jo
insb
stos
pushf
inc
cmp
or
lahf
push
push
fdivs
lret
fiaddl
sub
xor
sahf
cld
sbb
or
dec
and
popa
cli
add
mov
jno
loop
xchg
pop
repnz
mov
stos
push
fs
fildl
sub
mov
nop
testl
lret
out
adc
xchg
insb
mov
and
pushf
mov
cmp
jecxz
dec
xor
aaa
or
loopne
dec
xor
outsl
daa
lds
mov
lahf
cmp
bound
cs
mov
scas
cmpsl
inc
mov
inc
sbb
mov
and
ror
stc
ja
test
shlb
icebp
ja
les
sti
xchg
adc
mov
pushf
mov
hlt
mov
mov
sbb
cmc
mov
mov
mov
lods
gs
xchg
or
cmpsl
lds
xchg
push
xchg
mov
cmpsl
cmpsl
cmpl
shlb
mov
test
cmp
xor
add
out
xchg
mov
xchg
or
lds
test
fsubrs
pop
xchg
test
lea
adc
mov
cmp
scas
mov
mov
xchg
int3
subl
inc
inc
ret
pop
push
lcall
mov
pop
in
insl
ret
cltd
in
adc
icebp
outsl
push
bnd
jno
arpl
fsubl
push
je
inc
in
pop
scas
scas
dec
jecxz
mov
mov
mov
pop
xor
call
movsl
addb
add
je
mov
adc
and
xor
pop
xchg
jbe
mov
shll
sti
mov
sub
push
mov
or
out
jl
lret
aad
sub
repnz
push
call
popa
push
sar
lea
test
das
loop
outsl
ja
sbb
inc
pop
sarl
scas
xchg
dec
pusha
mov
xchg
dec
push
decl
imul
iret
fnstcw
outsb
std
sarl
repz
leave
in
xor
shlb
cs
in
jl
xor
fwait
sarl
mov
sbb
and
xor
idivl
fdivs
and
clc
dec
sahf
ljmp
mov
pop
inc
inc
push
cltd
xchg
mov
data16
leave
mov
ljmp
mov
mov
nop
and
jmp
fists
and
mov
ret
fadd
xchg
add
std
fs
addr16
cli
cld
xchg
test
xchg
jbe
push
mov
leave
pop
les
ss
out
sub
pop
int3
or
pop
pop
inc
int3
jno
sub
dec
fmul
shrb
bound
xchg
mov
pop
addr16
pop
jae
and
inc
pop
inc
dec
mov
cmp
sbb
jecxz
fnstcw
and
push
insl
jae
xor
cmpsl
push
subb
addr16
push
xchg
ss
push
mov
adc
shr
mov
push
out
nop
jg
cltd
pop
cmp
mov
and
cmp
jno
push
jne
push
jno
fidivrl
nop
outsl
scas
inc
jl
mov
jle
push
loop
fstl
outsb
test
push
push
mov
cmpsl
orb
or
std
test
cwtl
adc
loopne
cwtl
cltd
imul
mov
int
adc
inc
push
cld
add
xor
ja
mov
sahf
outsl
sbb
and
mov
and
xchg
mov
cmp
ljmp
add
nop
bound
adcl
xor
aam
and
inc
hlt
insl
and
minps
fdivrl
add
xchg
cmp
imul
push
inc
and
das
test
mov
fldenv
movsb
rorb
stc
shll
xchg
in
pop
sub
bound
mov
push
or
inc
ljmp
icebp
mov
cmp
jp
push
cwtl
call
es
out
adc
out
push
xor
mov
cmpsl
bnd
mov
jmp
push
insl
mov
out
mov
gs
jecxz
mov
out
mov
outsl
xor
lahf
leave
lods
adc
pop
sbb
inc
jmp
shll
mov
rorb
rolb
js
ss
negb
xor
subb
ret
xor
mov
out
jecxz
pop
mov
ja
ss
lods
sub
pop
mov
inc
mov
cmpsl
mov
sub
loope
jg
sub
lahf
mov
mov
in
sti
testb
add
outsl
dec
movsl
mov
push
pop
fsubp
mov
hlt
iret
sbb
xor
sub
pop
add
out
mov
jmp
push
popl
stc
inc
jb
loop,pn
cltd
enter
lcall
add
jg
dec
adc
bnd
sbb
and
mov
out
lock
out
aaa
mov
insl
mov
outsl
icebp
fwait
repz
lret
jae
dec
push
mov
sub
dec
bound
loop
cli
ss
popa
sbb
dec
ljmp
push
jno
sub
adc
arpl
rclb
outsl
lcall
jb
and
les
push
fsubrs
call
es
js
repz
ljmp
sbb
or
scas
sub
and
repnz
shrb
and
ljmp
out
or
xor
cmp
dec
ffreep
pop
add
btr
daa
cmpsl
add
jle
mov
ret
cltd
dec
bound
add
add
cli
xchg
inc
pop
pop
mov
inc
call
adc
lods
mov
jo
movsb
xor
and
cmp
stos
pop
mov
jae
aas
sbb
outsl
dec
mov
xchg
jmp
push
movsb
xchg
cld
iret
mov
jno
lret
gs
int3
imul
mov
or
xchg
mov
dec
push
dec
imul
mov
inc
out
or
xor
cmp
mov
or
addr16
nop
jne
das
cmc
jecxz
push
add
xor
xchg
stc
aam
pop
test
push
jns
hlt
dec
shll
pop
jge
jb
shl
stos
push
push
jne
fistl
adc
mov
or
mov
inc
push
jns
hlt
pusha
aam
lahf
fidivs
jmp
jns
mov
and
cmp
sub
and
out
push
and
testl
test
push
inc
loop
add
sbb
stc
add
inc
push
repnz
xorl
inc
adc
jne
insl
jnp
xchg
sbbb
push
xchg
inc
stc
inc
sbb
jns
add
iret
out
inc
dec
xchg
sub
test
in
jle
pop
push
adc
ss
and
fsubs
outsb
pop
andl
mov
jge
enter
mov
sahf
aaa
mov
and
fdivl
adc
daa
sbb
subl
mov
xchg
pusha
sub
pushl
xorb
adc
js
sbb
mov
mov
sbb
push
cmp
pop
mov
or
cmpsl
add
mov
mov
xchg
ss
pop
mov
js
jmp
push
lds
pop
jnp
mov
push
jno
push
cmp
jge
xchg
lret
subb
mov
mov
pop
ds
xlat
mov
inc
mov
insl
jb
loope
push
and
hlt
inc
inc
and
pushf
sbb
loop
cmp
sahf
inc
jmp
mov
cs
xchg
mov
test
mov
xchg
jge
arpl
pop
loopne
push
shrl
mov
in
fcomps
xorb
insb
call
fisubl
insb
xchg
lret
xchg
mov
and
lcall
insb
mov
add
inc
xor
adc
xlat
dec
inc
nop
sti
xchg
dec
pop
stos
in
insb
imul
repnz
aas
mov
mov
ja
mov
repnz
xorb
add
xor
stos
scas
mov
dec
fistpl
ficoml
pop
data16
inc
int
xor
fisttpll
sbb
add
bound
je
popa
or
sti
mov
pop
xchg
enter
dec
out
stos
mov
rep
add
jmp
les
fcmovnb
cmp
ss
cmp
mov
nop
les
sbb
out
shl
cltd
je
call
or
pop
iret
mov
int
dec
mov
cmp
or
add
fiadds
iret
movsl
mov
sti
jns
in
fwait
push
jae
xchg
add
xor
rcll
xchg
and
adc
pop
scas
out
addr16
or
in
adc
outsb
sbb
xor
cmp
fidivl
mov
std
push
test
stc
pusha
mov
dec
dec
cmp
loope
dec
or
adc
pop
mov
sub
addl
fidivs
cmp
sub
dec
add
add
in
gs
xchg
sti
inc
clc
push
mov
adc
outsb
push
jmp
mov
inc
add
fwait
sbb
repz
cmpsb
cld
pop
jecxz
test
lods
add
xlat
lret
dec
leave
adc
mov
pop
jne
sbb
scas
ret
imul
and
fsubr
dec
push
pop
sbb
arpl
fsubp
lock
cmc
mov
je
fdivl
imul
popf
or
jns
imulb
mov
ficoms
ret
int
movsb
out
leave
test
cli
adc
arpl
scas
inc
rorl
push
adc
loope
cmpsb
pop
pop
in
jmp
push
stos
mov
xchg
push
shll
stos
rcll
nop
dec
push
scas
loop
je
aaa
cmpsb
movsb
sbb
in
fwait
movsl
in
loop
xchg
xor
ret
cmp
cmp
mov
push
mov
insl
insl
xorl
les
lcall
pop
inc
xor
int
lcall
cmpsb
in
push
xor
inc
push
aad
jmp
cmp
ret
sahf
cmp
je
arpl
ret
repz
xchg
loop
ret
adc
mov
int
loop
xor
loop
int3
inc
xchg
pop
add
jnp
cltd
push
sarl
inc
in
sub
xor
aas
mov
dec
jns
test
or
je
sar
mov
std
and
jo
inc
pop
jl
fdivs
mov
push
leave
xor
mov
roll
mov
push
repz
cmp
iret
in
xchg
sbb
scas
push
enter
add
jge
mov
fs
in
adc
xor
sbbl
stos
mov
test
pop
into
repz
xor
adc
push
fstpt
lds
sti
lcall
cmpsb
adc
sbb
cmc
sbb
add
fnstenv
out
bound
movsl
inc
ret
insb
mov
sub
inc
adc
es
ja
inc
insb
stos
lahf
jb
popf
inc
jne
rcr
pop
ljmp
jo
daa
add
pop
lret
sub
nop
gs
sub
sub
push
mov
outsb
arpl
jnp
testb
mov
addr16
lahf
xor
pop
jge
repnz
fsubs
dec
test
jecxz
daa
sbb
cmp
inc
jbe
daa
xor
sbbl
inc
cmp
outsl
lret
jg
and
push
repz
jl
pop
xchg
lock
in
ds
rcll
xlat
rcrl
shr
inc
xor
xchg
lret
fucomip
cmc
or
jne
mov
sbb
adc
mov
mov
in
or
es
or
ja
cmp
data16
push
pushf
fimull
gs
or
adc
shrl
push
jmp
gs
push
jl
and
lret
jle
jp
or
rcrb
and
sahf
scas
movsb
mov
imul
xchg
mov
jb
insl
xchg
or
popa
jnp
cmp
popf
pop
sub
out
add
pop
inc
cli
jg
or
mov
inc
fsts
jno
jno
nop
loop
movsb
jecxz
or
xchg
mov
std
in
mov
lret
ja
add
bound
popa
pusha
scas
iret
jecxz
cltd
divl
push
dec
cmp
pushf
andb
push
inc
les
jne
test
push
add
adc
shr
sbb
cmc
xor
mov
dec
and
adc
cld
gs
cmpsl
mov
in
push
jmp
jno
add
iret
inc
inc
push
fsubrs
out
jle
push
push
push
shll
icebp
fcompl
shll
jne
jle
mov
mov
test
mov
clc
jmp
das
cmp
or
cmpsb
imul
or
cmp
imul
outsb
rclb
mov
pmulhw
pop
ret
mov
xor
xchg
mov
sub
cld
lret
lods
or
pop
pop
cwtl
cwtl
lahf
jns
push
xchg
pushf
in
das
jbe
or
sub
dec
daa
aad
movsb
add
int3
xor
sub
cmp
mov
pusha
adc
push
dec
lcall
and
test
mov
ret
xchg
jmp
or
push
push
in
insb
addl
or
ljmp
push
mov
push
pop
mov
mov
repnz
mov
pop
mov
into
aaa
fiaddl
pop
jbe
dec
test
xchg
mov
jmp
push
pop
rclb
and
inc
mov
jp
mov
pop
jnp
inc
sarl
inc
mov
gs
sbb
mov
imul
mov
mov
pushf
jb
iret
pop
jmp
push
inc
imul
outsl
es
cli
xor
inc
js
repz
lcall
dec
jne
mov
mov
mov
push
fsubl
mov
mov
inc
or
fidivrl
addb
xchg
dec
fnsave
test
rorl
xchg
jns
mov
jo
fidivrs
popa
add
inc
adc
xchg
insb
inc
add
sub
add
popf
testl
mov
sbb
pop
pop
adc
mov
lds
jae
sub
dec
push
pusha
aas
cmpl
mov
mov
sbb
push
mov
movsb
ret
in
aad
cmp
pop
jae
cli
mov
shrb
cs
adc
jae
repnz
scas
xchg
jns
div
enter
inc
movsl
cmp
sahf
mov
test
xor
push
xor
add
and
stos
cli
pop
aaa
mov
xor
mov
outsb
inc
popl
or
jp
inc
aas
cli
sub
test
jmp
xchg
push
ret
mov
fprem
testl
ljmp
lock
sub
push
mov
leave
push
fnsave
gs
test
daa
mov
sbb
cmpsl
pop
sub
fbld
push
and
cmpsb
cs
jns
cmpsl
adc
fcmove
mov
mov
fidivs
iret
cmp
bsf
add
out
arpl
popa
mov
loop
stc
insb
mov
add
ret
jo
mov
into
in
clc
adc
rcrb
jmp
push
pop
dec
mov
mov
popf
shll
mov
adc
jmp
insb
push
imul
pusha
les
pop
cmpsb
add
cmp
add
sbb
mov
fcoms
bound
push
cmpsb
cmpsl
gs
fldl
sub
mov
mov
lds
rorb
int3
xchg
sbb
or
fidivrl
cmpsl
popa
sub
dec
mov
adc
sub
dec
xor
fs
clc
imul
pop
icebp
xchg
pop
push
stos
std
sbb
jge
and
pop
jnp
cmp
sub
mov
clc
notl
adc
int
fdivl
push
mov
aaa
add
jbe
stos
or
pop
inc
loopne
mul
in
cltd
mov
mov
and
loop
rcrb
cmpsl
add
ja
scas
icebp
push
cmp
xchg
and
and
ds
div
incb
imul
mov
sub
add
push
xchg
ds
xchg
pop
lcall
mov
imul
xorl
dec
mov
loope
subl
jmp
push
fbld
pop
leave
adc
jo
shl
mov
or
fistpll
test
cmpl
repnz
addl
imul
ficoml
pop
and
lahf
cmpsb
cmp
lock
jo
sub
loope
sub
mov
in
out
inc
push
in
jp
xor
mov
loope
add
cmpsb
out
ret
xor
mov
ljmp
mov
cli
orb
ss
xor
data16
dec
push
inc
adc
inc
mov
xor
lea
lea
aaa
hlt
cmp
xchg
test
adc
push
push
inc
out
xor
pusha
inc
push
out
jge
xlat
mov
test
jmp
adc
rcrl
mov
or
aas
push
stos
rolb
fs
ret
bound
sbb
xchg
call
neg
mov
fnstcw
add
std
adc
repnz
jp
subb
cmc
jp
sub
mov
pop
mov
push
insl
icebp
inc
jge
cmpsl
es
pop
idivl
xlat
xchg
out
push
popf
pop
dec
in
pushl
mov
xlat
inc
bnd
sarb
outsl
sbb
jae
rcrb
inc
push
pop
std
lret
push
fwait
in
lock
sub
loope
bound
jns
enter
ljmp
jl
or
pop
adc
add
mov
and
pop
enter
pop
sub
mov
ret
sbb
mov
add
xchg
jmp
loop
js
push
jno
out
lret
add
adc
sbb
hlt
repnz
pop
fdivrs
stc
pop
jb
test
rcrb
int3
cmpsl
pop
cmpsb
aam
out
jle
or
cmp
pop
insb
test
jne
xor
push
mov
outsl
jae
push
cmpsl
or
cmp
scas
insl
rorl
adc
mov
add
push
aad
jmp
cmp
push
or
ja
jg
ret
inc
mov
xchg
push
iret
cs
fs
and
test
fstps
pop
stos
xchg
cmp
adc
dec
pop
push
mov
pop
daa
and
movsl
pusha
dec
in
stc
jg
jno
jns
clc
push
mov
mov
inc
xchg
mov
lea
xor
dec
pusha
and
xor
test
xor
rcrl
xor
ljmp
cmp
fdivrl
mov
imul
xchg
ret
mov
push
xchg
orb
xchg
dec
in
jg
adc
mov
push
jge
loope
adc
lods
orl
or
inc
ljmp
les
adc
cmp
and
mov
out
out
cmp
xchg
add
jae
mov
dec
pop
mov
push
or
push
pop
inc
pushf
xchg
out
insl
and
cmpb
dec
or
cs
adc
jp
out
out
jge
sub
mov
lea
cmp
mov
mov
out
mov
inc
outsl
cld
insb
andl
pop
mov
pusha
mov
adc
setge
jno
adc
ss
and
xor
test
mov
sahf
lods
shrl
dec
shl
xchg
xor
xor
je
scas
das
xor
mov
lock
dec
dec
lock
lret
xchg
jle
in
mov
push
or
inc
jne
xchg
add
outsl
movsb
mov
inc
daa
pop
add
cmc
pop
gs
or
dec
push
pop
stos
pop
sbbb
mov
cmp
push
loope
sbb
loop
inc
mov
push
pand
pop
and
rorb
pop
pop
call
xor
mov
lret
xlat
addr16
call
xchg
mov
sbb
adc
icebp
cmp
decl
cld
test
xchg
push
jb
and
fsubr
cmp
in
jl
push
pop
popa
pop
sbb
add
mov
nop
pop
xor
adc
adc
sbb
push
decb
adc
mov
dec
adc
shll
lock
arpl
shlb
adc
or
pop
xchg
push
pop
jecxz
ja
push
scas
lods
sub
mov
pusha
cs
stc
adc
cmpsb
in
mov
mov
ret
adc
je
ljmp
mull
ljmp
inc
fnstcw
movsb
test
mov
icebp
rcr
mov
mov
test
out
push
int
cmp
pop
cmpsl
and
push
or
fst
dec
cmc
sub
push
adc
pushf
mov
pusha
xchg
jecxz
sub
and
hlt
popf
bound
mov
mov
or
bound
cmpb
fsqrt
fimull
dec
dec
xor
adc
cs
xor
lahf
xchg
mov
push
lret
lret
adc
xor
or
mov
pop
movsb
cli
movsb
fcompp
jno
fcoms
mov
cmp
jnp
jno
scas
push
mov
int3
jnp
and
adc
in
loop
jmp
test
cwtl
mov
mov
cmp
fdivrl
ret
xor
jnp
nopl
cld
push
sub
std
fldt
push
sub
xchg
repnz
jbe
lods
sub
test
test
je
into
adc
test
adcb
dec
call
std
ss
clc
shll
mov
and
dec
inc
cld
out
adc
mov
loopnew
shll
mov
sbb
sbb
test
movsb
push
sub
xchg
js
ja
shlb
lock
push
cmpsb
dec
and
int
add
ljmp
pop
and
and
adc
mov
adc
sbb
fcomps
adc
negb
xchg
stos
les
aam
loop
jl
insl
in
ficoms
add
sahf
psrlw
lcallw
aas
mov
jb
inc
ljmp
cmpsb
call
xchg
cmp
lds
xor
in
xchg
sub
scas
or
enter
push
notb
add
mov
adc
ss
mov
roll
iret
add
in
or
mov
scas
add
pop
push
adc
xor
in
sbb
mov
ds
push
out
fidivrs
mov
cmp
repz
sub
and
mov
int3
jb
push
ljmp
pusha
div
out
and
cmpsb
lret
mov
outsl
jnp
xchg
push
icebp
out
andl
into
subb
jecxz
sbb
or
inc
loop
jecxz
pop
mov
push
lahf
pop
outsb
ds
mov
out
sbb
and
pusha
sub
mov
inc
out
mov
jl
push
push
add
adc
adc
adc
xchg
cwtl
dec
mov
cmp
or
or
mov
in
jle
sub
clc
push
fmuls
push
sbb
sub
leave
cli
ret
jne
xchg
push
ss
andl
or
jb
es
mov
aad
and
jecxz
jge
xor
scas
ss
outsl
test
lahf
add
sarb
xchg
call
sub
adc
outsl
in
call
ds
ljmp
or
mov
pop
nop
das
mov
mov
xchg
sub
add
leave
aad
mov
add
je
gs
sub
cmp
ljmp
stos
mov
jae
jb
sahf
dec
mov
mov
pop
adc
dec
out
loope
movsb
les
arpl
pop
add
jl
mov
xor
jo
loopne
adc
addr16
cmp
popf
push
cmp
adc
dec
fsubrs
dec
enter
daa
xchg
jge
sbb
cmp
add
fwait
jo
sub
dec
in
roll
dec
ds
jnp
cmovnp
adc
xor
jg
ret
and
pop
in
mov
pop
jb
push
pop
aas
jge
and
mov
pop
mov
pop
dec
aaa
popa
xchg
icebp
inc
push
add
addl
adc
addl
popa
xor
add
or
rcrb
outsl
movsb
or
scas
mov
iret
jns
lods
jmp
inc
or
pop
hlt
and
xchg
das
add
pop
inc
loope
shrl
adc
add
inc
and
mov
das
mull
xor
mov
nop
mov
mov
ficomps
push
cmp
movsb
jb
fnstenv
int
xor
mov
sbbl
lods
xchg
push
dec
pop
pop
xchg
hlt
cmp
jge
push
fs
cmp
or
rcll
push
push
test
inc
xchg
jp
mov
push
dec
sub
and
cmp
push
push
jb
stos
mov
pop
xor
sbb
jnp
shll
inc
ja
xchg
sub
cwtl
dec
andl
jecxz
pop
pop
repz
and
and
xor
jne
cmpb
or
inc
fisubl
rolb
cmp
xor
sbb
fwait
push
jns
test
inc
out
cli
test
dec
test
push
fs
cltd
ret
aaa
mov
call
leave
mov
call
mov
pop
and
lret
divb
iret
jecxz
or
mov
push
mov
mov
loope
aaa
movsb
sahf
mov
lds
aad
aaa
aam
mov
out
mov
movsb
test
lea
xchg
js
adc
fnsave
js
jecxz
arpl
popl
cmp
lcall
and
jae
rclb
repz
loopne
mov
xchg
pop
cli
ret
clc
pop
test
ss
sub
adc
pop
add
iret
xchg
gs
add
insl
mov
jne
mov
push
notl
out
outsl
mov
stos
jg
push
or
jp
lret
std
mov
cmp
mov
aaa
push
mov
les
int3
adcb
push
sti
push
shlb
and
lcall
push
jae
add
push
fcmovnu
mov
fadd
lds
xchg
xor
rolb
int3
addl
xlat
outsb
sub
fsubrl
out
jecxz
xor
je
scas
sti
std
dec
add
mov
daa
pushf
pop
in
cmp
loope
and
add
or
push
jne
jae
jae
adc
or
mov
xor
cld
std
lret
rcrb
int3
jg
inc
mov
xor
scas
jecxz
or
pop
fucomp
cs
jmp
pop
outsl
shrl
lods
cli
jp
mov
outsl
dec
pop
lods
nop
popa
cwtl
int
das
shrl
fiaddl
test
popf
adc
orl
add
jnp
shl
arpl
inc
mov
mov
into
push
test
rorl
mov
mov
push
lahf
mov
test
push
ds
cmc
dec
mov
insl
adc
shrb
movb
rclb
outsl
and
mov
loope
jae
lea
mov
inc
push
ret
sub
xchg
sub
add
push
lcall
aas
ret
push
bound
pop
lea
xor
lret
aas
xor
cmp
inc
cmpsb
xchg
fiadds
mov
push
test
arpl
pop
jmp
mov
repz
enter
jae
imul
mov
rcrl
sub
out
imul
into
es
dec
inc
pop
cmp
pop
pop
test
dec
decl
push
inc
lret
gs
ljmp
je
cld
dec
xor
out
scas
stos
filds
fstpl
mov
out
js
lahf
nop
cmp
les
stos
jo
int
cmp
xchg
xchg
xlat
std
push
cmp
push
gs
jp
pop
or
in
mov
in
and
xchg
ss
daa
pushaw
jge
test
add
pop
cmp
push
mov
pushf
rcll
jns
mov
movsb
adc
test
data16
add
arpl
mov
mull
xchg
mov
push
aas
dec
pop
stos
adc
popf
ljmp
setl
xchg
ss
cltd
dec
jb
jbe
xor
add
es
xchg
dec
aas
jge
pop
jmp
fcoml
popa
mov
nop
add
lods
cmp
xchg
sbb
sub
clc
mov
mov
and
xor
xchg
sub
jl
mov
mov
add
inc
jg
jae
out
mov
shl
ljmp
push
mov
and
std
push
pusha
sbb
nop
movsb
xchg
adc
pushf
test
sbb
mov
jecxz
lock
sub
enter
push
add
arpl
movsb
popf
mov
stc
sub
fadd
cmpsb
add
int3
jle
ret
adc
out
mov
mov
insb
imul
adc
add
loopne
push
testl
mov
test
mov
icebp
pop
pop
mov
push
movsl
pop
dec
cmp
adc
adc
imul
push
mov
out
xor
cmp
push
push
xor
movsl
or
mov
mov
mov
adc
push
enter
or
mull
stos
fistpl
aam
push
cwtl
pushf
mov
mov
xlat
data16
xchg
sbb
mov
lods
ljmp
mov
adc
add
add
jno
jle
xor
imul
inc
push
nop
adc
jg
lcall
ja
adc
cli
jbe
sbb
es
mov
inc
dec
mov
cltd
aas
or
inc
push
shrb
stc
jle
cmovge
out
out
std
sahf
outsb
mov
ficompl
popa
aaa
int
pushf
mov
add
push
rclb
pop
push
shl
outsl
add
ret
sbb
mov
fcmovbe
mov
or
int3
push
mov
testb
mov
test
push
mov
movsb
xor
iret
orb
jl
add
push
aam
xor
mov
cltd
loop
js
pushf
orb
lret
xchg
shr
dec
nop
mov
xchg
clc
aam
clc
lea
mov
push
roll
sub
adc
jb
hlt
cli
cmovo
incl
xchg
mov
cltd
pusha
fwait
ret
push
in
bound
call
jns
shl
dec
adc
imul
lret
and
pop
leave
cmp
fnstsw
repnz
lds
imul
cli
cmp
aaa
arpl
ljmp
cld
sbb
xchg
push
mov
insb
and
push
cs
mov
sbb
push
mov
inc
and
aam
ss
ds
mov
mov
jo,pt
fcmovb
jecxz
pop
int3
jo
out
insb
and
mov
pusha
fwait
shlb
mov
lods
stos
js
loopne
pop
arpl
mov
cs
jmp
push
in
jnp
shlb
sub
call
fwait
jmp
push
insb
cmp
push
and
jecxz
mulb
cmc
jmp
adc
repz
push
push
mov
add
dec
cmpl
sbb
and
movsl
js
pop
ret
inc
mov
rcl
insb
adc
push
lret
sub
inc
loope
loope
les
cwtl
ret
pop
inc
ljmp
jns
icebp
bnd
mov
nop
imul
jmp
loop
js
repz
arpl
scas
pop
pushf
add
pop
mov
inc
push
fcom
dec
incb
push
repz
repnz
sbb
sbb
xchg
popa
lock
hlt
outsb
outsl
push
ret
jne
add
imul
push
inc
inc
addl
int
add
add
adc
and
shlb
out
enter
das
cmpsb
in
jbe
mov
jns
ret
int3
or
mov
push
call
mov
std
cli
mov
rolb
call
clc
in
sub
stos
ljmp
scas
data16
jns
jnp
adc
push
lahf
mov
pop
out
add
push
pop
cs
lret
dec
lret
xchg
int3
mov
imull
xor
pop
pop
stos
dec
lock
or
popa
jl
lock
mov
and
adc
and
dec
inc
pop
push
insl
pop
mov
sub
out
dec
decb
sbb
mov
je
jl
outsl
push
sbb
adc
or
int3
popf
test
sub
mov
in
aaa
add
push
mov
jle
popf
inc
fs
and
push
lret
int
movsb
add
and
push
cmp
sub
mov
mov
cmpsb
jmp
and
mov
xchg
btr
jne
sbbb
mov
idivb
hlt
pop
iret
cmp
sub
xchg
test
pop
hlt
push
fdivrl
push
fcmove
icebp
rcl
mov
lods
inc
xchg
arpl
pop
ljmp
subb
stos
add
dec
pop
shll
or
jae
ljmp
inc
mov
sbb
test
lds
js
xchg
pop
mov
stos
shll
dec
pop
cmc
dec
sbb
in
lods
pushf
xor
in
fwait
inc
adc
cld
push
sti
mov
je
mov
pop
push
xor
dec
fs
daa
test
cmc
outsb
pop
add
adc
push
loopne
pop
scas
pop
rcrl
rolb
data16
out
aaa
pop
mov
push
inc
push
mov
sub
or
pop
out
jg
popa
xor
mov
iret
inc
je
jp
popf
push
push
dec
popa
adc
rol
jno
jmp
lods
aaa
xchg
scas
lds
pushf
mov
jmp
daa
imul
xchg
hlt
mov
push
mov
fwait
mov
fsubrs
call
clc
inc
mov
jl
insl
jecxz
std
jge
imul
mov
adc
popf
and
inc
push
jge
cwtl
cmc
inc
sub
pusha
jecxz
pop
and
jns
mov
rcrb
mov
cmp
repz
sub
in
aad
lret
lahf
clc
jne
xor
jb
and
aad
add
add
sti
adc
popa
xor
call
in
xchg
sbb
mov
pop
lcall
jae
call
aas
add
mov
sub
lret
mov
xor
loope
or
out
and
fldl
add
hlt
jae
inc
leave
in
les
test
int3
inc
inc
sbb
sbb
lods
mov
push
scas
and
test
jo
mov
add
ret
pop
lahf
ljmp
pop
loope,pt
and
leave
adc
sbb
and
nop
pushf
aaa
ret
daa
outsb
sbb
xor
imul
mov
xlat
xlat
pushf
mov
prefetch
in
fdivs
sub
repnz
dec
push
jns
xor
fsubl
mov
iret
int3
pushf
mov
ljmp
mov
sarl
or
xor
mov
lock
lods
mov
xor
mov
xor
jge
ja
jecxz
movl
testl
mov
mov
sarl
rolb
test
or
fisubs
imul
push
out
cmpsb
fstp
test
pushf
and
insb
icebp
roll
test
mov
push
leave
or
sbb
inc
dec
mov
cmpsl
into
mov
jg
pop
int
mov
cmp
jns
ss
xor
addr16
iret
cmp
sti
inc
mov
adc
mov
pop
adc
jno
sarl
add
mov
pop
xchg
pop
pop
jp
std
stos
scas
pop
pop
push
outsb
cmp
clc
shll
outsl
addr16
mov
push
or
nop
xlat
stc
out
js
mov
pop
and
adcl
loopne
lods
mov
lods
fnsave
mov
iret
ficoml
subb
jae
out
xor
sbb
stos
cmp
pusha
pop
js
push
mov
dec
jl
enter
js
push
xor
cltd
dec
dec
and
adc
js
shlb
jl
lods
push
jns
ljmp
sbb
aaa
push
outsl
cs
lea
leave
fisubs
sbb
shll
jl
imul
and
fidivrl
ret
out
adc
test
cmc
and
cmpsl
pop
pop
test
insl
ds
cmc
add
scas
js
sbb
xchg
cmpsl
or
jno
inc
outsl
repnz
in
fistl
add
out
jne
pop
insb
jnp
enter
imul
sbb
outsb
adc
adc
enter
repz
rcrl
jl
in
or
pop
test
js
frstor
adc
mov
cld
in
cmpsb
cmp
das
pop
xor
cmp
movsl
lock
rcl
out
jae
push
shl
jns
or
jno
fsub
sub
xor
cmc
loopne
sahf
pop
aas
jl
dec
test
sub
prefetchw
or
mov
stos
push
fcoml
mov
and
add
or
rolb
push
jnp
lds
dec
insl
and
into
testb
cmp
fnstsw
jns
pop
sti
or
xchg
nop
push
mov
xor
addl
xchg
loop
xor
mov
xchg
pop
cmp
cmp
sbb
sbb
leave
popa
nop
sbb
xchg
das
or
in
push
test
sub
inc
notb
cmp
xchg
aad
insb
adc
inc
into
sbb
jns
cmc
mov
jl
cmp
mov
iret
adc
hlt
imul
xchg
stc
loope
pop
mov
mov
xchg
iret
mov
faddl
outsl
insl
and
sbb
xor
movsb
in
loopne
jp
sbb
and
call
mov
std
xor
pop
in
pop
ficoml
pop
mov
inc
iret
lcall
loopne
cmp
lds
les
push
movsb
fisubrs
fstps
mov
xor
mov
jo
inc
in
xlat
mov
hlt
jg
xor
cmp
mov
mov
fstl
cmc
xchg
dec
std
sub
xchg
sbb
cld
xor
test
mov
xor
inc
cmpsl
movsl
inc
sbb
fsubr
stc
sub
xchg
lahf
sub
es
outsb
loopne
lea
pop
inc
repnz
cmc
mov
lods
jno
sbb
push
jns
cmp
jp
xchg
cmp
aaa
xchg
inc
bound
std
push
mov
or
je
mov
stos
push
pop
dec
sti
pop
mov
pop
lret
js
and
mov
outsb
dec
mov
or
mov
out
mov
jl
fisttpll
std
inc
pop
loope
lcall
fmull
xchg
mov
ret
insl
mov
xchg
in
xchg
fwait
push
sarb
jmp
clc
push
push
push
mov
in
insl
dec
xor
mov
ljmp
mov
call
mov
test
mov
mov
or
jg
cli
nop
sbb
pop
xorl
dec
jp
inc
fldenv
arpl
fisttpl
sbb
ds
shlb
jb
das
jno
inc
outsl
mov
mov
xchg
std
sub
adcl
jecxz
jmp
push
insb
jg
enter
sbb
test
stos
mov
mov
push
jge
mov
dec
insl
or
adc
push
xor
xchg
out
mov
cmp
fsubl
add
lcall
and
test
pop
push
cmc
xlat
mov
scas
jmp
idivb
mov
xchg
int
lret
mov
outsb
push
add
mov
sub
or
les
lret
sbb
loop
jnp
pop
popa
mov
push
in
jl
jmp
jmp
push
dec
jo
out
hlt
lea
pop
mov
dec
xchg
push
jecxz
cmpb
addr16
test
daa
jmp
rcrb
scas
push
nop
inc
jno
mov
pop
out
nop
rcrl
nop
es
mov
out
imull
lahf
add
loope,pn
and
or
sahf
push
jge
sub
repz
int
inc
adc
push
shr
and
xchg
dec
or
gs
lock
fninit
jp
push
repnz
subl
fbld
mov
jne
pop
outsb
pushf
mov
and
sbb
inc
sbb
ds
mov
push
aaa
xorl
jle
js
push
test
jmp
dec
cmp
inc
gs
inc
orb
xchg
jge
push
sub
jne
popf
mov
inc
pop
pop
call
insl
cmp
es
adc
adc
imul
mov
movb
adc
inc
xlat
push
xor
and
lahf
inc
es
dec
rclb
mov
stos
ret
mov
add
push
inc
pop
fwait
popa
mov
imul
fwait
mov
push
cmove
in
dec
push
sarl
popa
inc
xor
xchg
mov
push
aas
inc
movsl
sahf
mov
in
or
int3
loop
sbb
inc
inc
sub
or
xchg
push
dec
icebp
sub
and
pushf
dec
sti
inc
mov
mov
push
fidivrl
jle
add
and
fistps
cli
decl
lcall
out
pushf
pop
std
mov
or
or
mov
jecxz
cltd
lock
adc
subl
rcl
adc
cmp
push
pushl
push
jno
or
sbb
cld
inc
in
imull
outsl
jmp
jnp
mov
mov
push
pop
mov
cmpsb
add
jl
aaa
mov
out
dec
lods
hlt
jno
push
insb
cli
cmc
aad
fwait
mov
xchg
pop
lahf
xor
sti
aaa
insb
lods
pop
xchg
add
push
mov
dec
jmp
xchg
sbb
cmpsb
lods
daa
and
ljmp
mov
inc
xor
pop
lods
stos
icebp
push
mov
data16
push
sub
push
arpl
cli
adc
inc
cmp
xor
mov
rolb
loope
push
jne
inc
xor
sbb
mov
gs
jp
leave
fprem
pop
and
fs
cld
les
mov
inc
aas
shrb
mov
outsl
fs
dec
aam
orl
repnz
lds
setge
xor
push
test
mov
daa
cmp
aas
mov
adc
push
dec
cmpb
cmp
mov
outsl
lcall
movsl
xorl
sbb
cmp
adc
adc
fstps
sub
sbb
sub
aaa
xor
test
fs
mov
mov
and
fst
dec
push
ja
in
sub
into
jnp
jecxz
mov
cmp
mov
out
xor
lds
mov
pop
lods
mov
sbb
jg
cmp
lea
cwtl
imul
clc
mov
pop
notl
addl
adc
ret
ljmp
push
jbe
adc
aas
add
ds
push
mov
add
pop
cmpsl
loopne
out
push
fcomps
mov
flds
xlat
mov
mov
dec
stos
and
ret
dec
movsl
pop
mov
adc
jnp
xor
aaa
hlt
rcrb
dec
and
xor
inc
fwait
push
xchg
xor
jae
imul
mov
jo
pop
popf
orb
test
repnz
mov
fildll
sub
and
arpl
stos
sbb
push
imul
jo
roll
dec
mov
jo
jbe
arpl
dec
dec
scas
es
mov
or
bnd
xor
pop
mov
ss
jge
jne
push
jecxz
and
lcall
add
push
push
mov
push
lods
dec
jns
push
mov
sbb
test
sub
xchg
mov
outsb
popa
loopne
cmp
dec
sbb
sbbl
mov
adc
sbbl
sub
inc
test
xchg
rol
mov
stc
out
iret
call
sub
xchg
shl
fsubr
fstpt
ret
xor
ret
adc
push
lods
cmpb
xchg
sti
mov
inc
ja
enter
daa
std
pushf
out
mov
sub
mov
in
sub
sbb
pop
dec
mov
inc
mulps
nop
mov
adc
loopne
mov
xchg
xlat
inc
daa
add
aaa
cmp
jns
mov
mov
les
aas
push
push
xchg
cmp
mov
cmpb
xor
dec
xor
shlb
push
pop
pushf
adc
hlt
mov
les
jo
addl
mov
and
xlat
ror
test
xor
sub
adc
pop
call
adc
sar
push
rcrb
and
mov
jg
mov
or
mov
dec
dec
test
sbb
and
mov
dec
or
je
iret
fbld
sbb
jecxz
xchg
cmp
push
icebp
sub
mov
cmp
mov
adc
shlb
mov
pop
mov
ja
xor
adc
negb
xchg
xchg
pop
pop
pop
ja
scas
sti
or
inc
jp
mov
and
addb
je
dec
fiaddl
cltd
push
scas
and
jp
fsubl
sbbb
hlt
std
xchg
sub
jbe
mov
cmp
jp
setg
inc
ficomps
and
lret
fstl
mov
imull
fistpll
adc
int3
inc
add
stc
cmpsl
adc
add
push
jle
xor
push
stos
cltd
dec
gs
or
sub
mov
out
shll
out
push
in
adc
pop
dec
adc
test
sub
in
dec
pop
stos
push
paddsb
insb
cmp
dec
movsl
cltd
roll
add
lahf
pop
popl
mov
mov
test
sub
scas
dec
rolb
inc
iret
push
cmp
cmp
adcl
and
in
mov
cmp
mov
test
adc
jo
shll
outsb
pop
loop
imul
adc
into
jl
into
shrb
jmp
test
push
pop
push
mov
stc
shlb
test
xchg
jl
sbb
fisubrs
testl
push
jo
mov
lea
clc
pop
fisttps
fmull
jae
iret
push
sti
pop
fisubrs
rcrb
in
je
aas
popa
or
mov
ret
ljmp
and
enter
add
stc
or
repz
jbe
add
xchg
mov
jbe
jbe
in
and
test
xchg
insl
repz
or
and
daa
addl
pop
sub
aaa
call
cmp
js
popf
loope
push
leave
adc
fldlg2
jb
xchg
jge
sbb
rolb
in
loope
cmp
filds
dec
sub
xchg
xor
dec
mov
cwtl
ljmp
ds
shll
test
mov
inc
mull
aad
fxam
cmpsl
xchg
pop
add
test
mov
xchg
orb
and
addr16
sbb
mov
out
pop
mov
adc
adc
sahf
mov
jns
bound
pop
mov
sub
mov
fimull
test
cmp
cmp
xlat
dec
cmpsb
push
pop
imul
negl
ror
in
mov
arpl
fsts
push
lret
xor
pop
push
lods
divl
or
jns
or
mov
inc
xlat
push
sbb
sub
jbe
push
or
sub
adc
movsb
xor
aam
mov
xchg
sbb
cli
bound
sbb
shrl
mov
imull
rcl
mov
adcl
pop
bound
push
aaa
adc
push
outsb
xchg
pop
pop
in
mov
outsl
mov
adc
sub
stos
js
daa
lret
jnp
lret
xchg
mov
loopne
cltd
cwtl
push
call
and
dec
mov
je
pop
push
lret
js
mov
jmp
xor
xchg
mov
scas
push
das
xchg
push
jo
sti
sub
lret
les
mov
rorb
mov
clc
add
mov
pop
fcom
mov
xchg
mov
cwtl
push
mov
mov
add
sub
dec
or
xchg
lret
mov
adc
mov
adc
sub
pop
jl
jnp
xchg
xlat
dec
rolb
ja
sbb
xor
shll
mov
xchg
cmp
sbb
sbb
inc
sub
xchg
jecxz
adc
cmp
push
pop
add
cmp
jle
arpl
stos
sub
lods
jl
enter
fiaddl
divl
sahf
sub
push
mov
mov
jbe
xor
mov
jno
dec
jl,pt
mov
sub
ds
lds
mov
mov
repz
push
inc
cld
out
enter
sbb
mov
push
and
mov
xchg
jmp
addr16
push
out
scas
sub
dec
out
adc
sub
dec
cli
pop
mov
pop
rcrb
lock
or
in
mov
test
clc
loope
fwait
repz
inc
fcomps
mov
jl
pushl
push
outsl
push
lret
push
aas
sbb
call
and
dec
ret
or
lret
push
xchg
add
mov
lahf
dec
rcrb
sarl
jecxz
mov
and
idiv
lret
push
adc
xchg
sub
inc
xchg
test
in
pop
into
cmp
cmp
je
out
xor
add
aaa
scas
xchg
mov
cli
add
in
jl
cmp
jo
in
into
jae
incl
mov
out
rcrl
xchg
testb
mov
sbb
ss
lret
rcrl
movsl
dec
fs
jno
mov
in
ja
outsl
stc
pop
clc
add
sahf
out
icebp
inc
jl
mov
inc
and
pop
jg
stos
dec
mov
scas
ds
pop
lret
sbbb
fstpl
mov
popa
or
sbb
fs
inc
mov
scas
cmp
pop
add
push
into
imul
stos
shlb
inc
stc
lea
lods
push
je
cmpsb
shl
xchg
std
cmpl
aas
dec
shll
dec
cmp
mov
mov
xchg
in
aad
adc
dec
test
aaa
lock
out
xchg
int3
and
lcall
sarb
stos
sahf
imul
mov
ficoms
sub
fisttps
pop
in
nop
fsubr
fdiv
ret
jmp
aad
dec
xor
jne
sub
testb
pusha
jnp
or
in
stos
adc
ds
or
pop
sub
in
test
hlt
scas
cmp
sub
aad
mov
adc
inc
adc
ss
dec
xchg
out
insb
sub
or
inc
ret
inc
pusha
push
cmp
xchg
mov
hlt
xor
std
jb
loopne
sbb
inc
scas
lea
or
mov
pusha
cmc
shlb
in
xchg
out
cmp
sbb
dec
sbb
jmp
push
inc
sbb
in
addr16
mov
and
insb
add
je
mov
stos
in
lods
fisttpl
fcmovnb
sbb
mov
fcom
mov
push
out
sbb
call
out
and
push
sub
fmull
rcll
insl
fcoms
out
mov
push
insb
pop
mov
cmpsl
and
and
add
mov
push
inc
xor
xchg
mov
cmp
mov
lods
cli
incb
test
cltd
sub
sarl
les
dec
dec
pusha
sbb
imul
std
imulb
inc
push
dec
add
lret
cmpsb
cmp
pusha
aas
mov
xor
adc
push
adc
imul
dec
mov
lock
iret
call
add
and
movsb
pop
mov
xor
es
fwait
lods
pop
imul
cmp
mov
inc
mov
int
leave
push
pop
mov
mov
scas
rcrb
cmpb
push
js
int
rcll
leave
xor
in
iret
push
outsl
psubusb
jl
adc
data16
outsl
sahf
idivl
std
sti
movsl
or
pushl
or
xchg
sub
mov
xchg
cltd
stos
mov
pop
xlat
and
sbb
sbb
inc
mov
in
or
movsl
inc
call
std
mov
sbb
xchg
aad
lea
mov
cmpl
mov
sub
dec
jns
push
ret
xor
inc
push
xor
aam
in
lahf
push
mov
push
fwait
mov
mov
xchg
or
mov
or
leave
mov
testb
pop
popf
adc
sub
inc
inc
sbb
sti
lods
insl
add
shll
xchg
cmp
jb
stc
mov
mov
sbb
into
mov
mov
ljmp
lret
scas
in
scas
daa
in
xchg
repz
fs
or
and
or
sbb
mov
frstor
fs
cmp
or
repz
into
pop
mov
or
mov
test
xor
fistpll
sbb
cmp
inc
jns
das
pop
loope
xchg
das
mov
and
inc
xchg
and
andl
inc
cmp
sub
cli
xchg
int3
roll
add
cs
movsl
and
popf
dec
shll
mov
repnz
test
push
sub
cld
shlb
sub
xor
sbb
shl
push
xchg
jae
and
push
cmp
fsubrp
ja
push
cmpsb
out
dec
adc
lods
popa
xor
push
mov
fwait
pop
lcall
dec
mov
sbb
lods
and
sub
mov
sbb
leave
cmp
in
movsb
mov
jle
xor
jbe
in
mov
aaa
mov
and
push
fcmovbe
xchg
divl
enter
aas
call
daa
mov
enter
mov
jle
repz
data16
pop
mov
test
mov
aad
lods
lods
and
roll
inc
fs
movsl
and
and
stc
lock
outsb
jne
adc
fbld
repnz
lods
test
dec
sahf
jae
data16
or
jge
mov
icebp
inc
mov
and
dec
sti
sub
imul
jae
sub
aad
jnp
adc
shr
std
mov
cld
push
pop
jns
addr16
jecxz
nop
sahf
bound
out
int
mov
jnp
ret
jo
push
sub
daa
inc
xchg
fsubrp
ds
mov
repnz
ret
push
or
add
divb
cmpsl
testl
mov
mov
dec
xor
xchg
pop
or
inc
inc
dec
je
shl
cmp
imul
repz
push
in
pushf
daa
arpl
movsl
js
testb
pop
stos
cld
movsb
popa
sti
stos
imul
fistpl
jge
jno
push
insb
xchg
xchg
pop
push
pop
xchg
sub
sub
fadds
sbb
mov
hlt
xchg
push
dec
mov
xchg
je
cmp
inc
jmp
adc
loop
in
addr16
cmp
cltd
jle
xchg
les
cmpsl
xchg
test
test
ret
add
pop
fiadds
adc
pop
mov
sahf
xor
mov
lods
cmp
cld
int3
dec
mov
stos
leave
dec
loop
add
xchg
jp
xchg
push
cmpsb
out
push
and
out
cltd
lock
mov
mov
loopne
clc
lahf
cmc
sbb
nop
rcrb
xor
pmulhuw
cmp
imul
sahf
pop
xchg
int
push
mov
xor
cltd
jbe
inc
shl
pop
sub
pop
ret
cs
and
bound
adcl
mov
lret
repz
je
inc
imul
rcr
iret
aad
mov
mov
popf
xchg
lret
xor
mov
jle
imul
push
mov
cmp
pushf
fadd
adc
inc
or
xchg
mov
add
add
xor
mov
jp
test
dec
into
lret
mov
push
push
out
pop
insl
mov
push
std
fs
push
or
inc
xchg
lods
cmp
outsl
mov
neg
in
sarl
mov
js
insl
roll
cs
push
cli
iret
and
dec
jmp
and
xor
js
scas
inc
lds
jmp
int3
add
push
movsb
inc
jno
xor
push
push
add
xchg
adc
dec
test
sub
cmpsl
insb
sub
das
mov
fsts
and
pop
es
dec
jo
addr16
adc
xchg
cwtl
and
orb
pop
inc
ss
add
ds
pop
adc
stos
mov
mov
jae
dec
xor
ljmp
fwait
jbe
loope
lods
call
cmc
dec
inc
pop
pop
dec
xchg
pop
adc
jns
das
out
lret
loop
xchg
ficoml
push
cmpsb
add
jecxz
pop
adc
mov
xchg
mov
in
xchg
ljmp
pusha
test
xchg
test
dec
dec
inc
adc
mov
adc
or
push
leave
push
loope
and
rclb
loope
cltd
enter
jmp
sarl
sbb
mov
shrl
fcmovnu
shll
pop
push
shl
bswap
xchg
push
fs
aas
sub
or
mov
shlb
and
ret
gs
lds
inc
in
jmp
std
jbe
mov
daa
xor
test
fiaddl
mov
inc
push
or
pop
test
jnp
aad
fcoms
lcall
stos
mov
mov
mov
call
inc
lds
imul
add
dec
outsl
xor
or
xchg
lds
aaa
or
sahf
lods
mov
ret
lret
stos
add
adc
add
fisubrs
mov
dec
callw
das
shrl
popf
icebp
into
dec
imul
in
iret
push
in
lahf
iret
test
in
dec
incb
xor
in
adc
sarb
and
sub
mov
or
outsl
cld
aam
sub
outsl
push
mov
mov
iret
lret
enter
mov
sahf
and
test
test
shlb
mov
out
repnz
out
scas
lcall
test
out
bnd
mov
scas
jno
xchg
outsl
iret
das
jnp
sbb
xor
lods
imul
std
mov
outsl
out
movsb
icebp
mov
mov
and
xor
cmpsb
mov
imul
repnz
lahf
loop
shrb
push
dec
mov
dec
sub
jg
sbb
shrl
ds
xchg
je
sub
cmc
mov
mov
mov
push
call
notl
das
aas
dec
jecxz
push
push
dec
jg
divl
or
adc
jbe
xchg
mov
outsb
jo
inc
dec
out
add
into
test
ljmp
push
popf
jmp
repz
inc
xchg
mov
fcmovbe
xor
xchg
rorl
je
push
sbbb
xchg
inc
icebp
enter
cmc
call
inc
mov
mov
sbb
jecxz
test
mov
jle
ret
leave
xlat
scas
loopne
jb
inc
sub
inc
mov
adc
popw
pop
jnp
jno
and
mov
pusha
mov
leave
lods
ret
mull
js
repnz
inc
mov
aas
loop
mov
push
lret
ss
out
mov
lods
mov
jmp
sub
aas
inc
test
ljmp
dec
cwtl
out
xchg
imul
xchg
dec
or
or
and
and
sbb
int3
sbb
aas
test
cmp
add
fstpt
mov
in
cmp
dec
inc
imul
sbb
lea
sbb
ds
outsl
sti
and
mov
mov
hlt
insb
insl
sbb
mov
ret
dec
lret
in
aas
adc
xor
out
sbb
pop
popl
mov
in
push
jg
fistl
xchg
dec
push
gs
cmp
pop
and
push
add
pop
rcrb
or
in
mov
fidivl
mov
and
mov
data16
in
and
gs
jle
je
ds
pop
push
test
popl
mov
pop
insl
mov
lret
test
inc
jne
jg
scas
pop
add
test
mov
es
imul
cmpsl
loope
sbb
in
lcall
inc
rcrb
in
add
sbb
adc
clc
dec
mov
stc
aas
dec
fisubrs
leave
scas
shrl
icebp
out
pop
les
insb
addr16
sub
jg
mov
mov
jmp
js
ret
cmp
test
test
mov
cli
call
fiaddl
aam
push
and
les
or
jb
xchg
inc
inc
sti
aam
inc
dec
inc
shlb
je
inc
iret
imul
stos
sbb
in
jb
jp
cltd
test
and
dec
xlat
mov
pop
sbb
mov
adc
cmp
rorb
pop
ret
jl
in
jbe
ljmp
insb
scas
sbbl
fwait
mov
inc
cwtl
push
insb
fwait
pop
or
jns
adc
lea
mov
push
ds
push
mov
rcrb
sub
es
mov
adc
pop
test
in
dec
adc
fists
add
loop
pop
cld
pop
push
sub
sbb
mov
adc
outsl
aaa
jb
pop
aam
cld
push
jne
leave
mov
or
movsl
es
int3
aas
pavgw
sbb
dec
mov
sub
ljmp
mov
fldt
sbb
push
sti
cmp
or
sub
cmp
xchg
cwtl
mov
cmp
outsb
pop
add
xor
outsb
test
sbb
clc
repnz
sbb
dec
push
inc
lcall
lea
and
in
fyl2xp1
movsl
movsl
mov
mov
dec
int3
pop
andb
lcall
mov
data16
das
pop
xchg
mov
ret
inc
sub
jg
mov
shrl
enter
mov
sar
xchg
ret
pop
in
ret
popl
jecxz
pop
ja
cmp
cld
and
mov
rcl
sbb
xor
dec
dec
sbb
stos
sti
roll
cmpsb
icebp
mov
sub
sbb
fstps
pop
cwtl
xor
mov
lock
push
adc
mov
or
pop
fisttps
xchg
movsb
imul
in
lea
xchg
sub
add
mov
push
std
inc
or
cmc
bound
fstpt
ret
mov
mov
test
je
push
push
mov
out
pusha
lea
sbb
bound
xor
pop
or
push
cs
lds
outsl
cltd
fiaddl
mov
dec
add
push
popa
mov
loopne
mov
das
imul
rorb
mov
jns
in
arpl
addr16
push
xchg
push
into
mov
mov
mov
add
jns
lods
ret
mov
cmp
pusha
jae
scas
push
jmp
jne
pop
add
imul
outsb
stc
pushf
xor
pop
xchg
xor
movsb
xor
xchg
lock
lods
stos
pop
mov
mov
out
mov
jmp
fscale
push
and
or
ds
shrb
cmp
push
pop
mov
push
pop
ds
test
mov
inc
xlat
ja
push
test
inc
cmp
iret
das
adc
insl
mov
pop
push
xchg
jbe
push
adc
push
enter
insl
dec
mov
and
mov
push
imul
adc
mov
andb
clc
cmp
fldt
rclb
pop
scas
jbe
inc
in
les
jecxz
push
repnz
and
mov
inc
pop
js
jle
sbb
outsl
hlt
xchg
fsubs
test
outsl
push
repz
pop
rcrl
dec
mov
add
in
cs
xchg
sub
xchg
sub
iret
lahf
rcr
mov
das
xchg
mov
push
ficoms
jns
or
and
mov
xchg
and
push
inc
ret
mov
sbb
adc
btr
sub
jp
mov
scas
pop
lret
rolb
sti
scas
cmpsb
xlat
or
mov
push
int
insl
sub
or
push
aam
cli
lods
imul
sahf
jb
pop
push
movsb
mov
fcomps
mov
sub
mov
add
inc
jo
outsb
test
mov
shrb
jmp
rcll
mov
jp
mov
push
cmp
mov
mov
pushf
mov
sub
hlt
mov
ret
or
sub
inc
std
xchg
xor
jo
sub
fsubs
add
cld
insl
sub
pop
shll
or
inc
cmp
dec
call
jl
add
lods
dec
subl
movsl
ret
xacquire
cmpsl
push
fildl
cmp
outsb
into
jge
hlt
ret
jmp
mov
or
xchg
xchg
add
subb
pop
sub
sahf
push
test
add
jle
mov
cmp
fldt
frstor
or
pop
stc
jnp
xchg
inc
or
sbb
add
and
jmp
xchg
lcall
stc
insb
or
ret
imul
cmpsb
and
pop
rcll
div
push
pop
jle
jmp
inc
test
leave
mov
pop
mov
scas
pushw
test
xor
outsl
pushf
out
jmp
int
stc
jo
push
push
imul
in
lock
cltd
mov
std
fisubrl
add
adc
xchg
fst
add
cmpsl
push
faddl
aad
dec
les
or
rorl
fstl
push
jbe
repz
popf
inc
ret
xor
inc
out
cs
pop
ret
imul
mov
inc
sahf
shrl
mov
mov
outsl
or
xchg
faddl
pushf
int3
push
in
sub
push
xor
pop
jecxz
jge
nop
test
adc
outsl
add
adc
sub
xor
mov
jge
mov
push
repz
or
lds
ficompl
add
and
push
sbb
popa
mov
sub
add
ds
mov
data16
mov
arpl
cmp
int
cltd
jmp
aam
str
xlat
and
ror
pop
cmp
aad
cmpsl
test
in
orb
cmpsl
jb
jb
xor
adc
mov
sub
adc
mov
mov
out
mov
xchg
pushf
repz
movntq
testl
mov
mov
mull
insb
popf
xchg
rclb
bound
js
je
lea
cmpsl
pop
fs
stos
add
hlt
cltd
lods
jecxz
out
stc
les
mov
pop
fwait
add
sti
push
mov
xchg
or
ja
scas
sub
push
and
push
mov
sbb
fistpll
sub
cmp
inc
fs
cli
sbb
pop
and
xchg
cld
or
leave
jbe
pop
jmp
inc
fnstcw
sub
pushf
jb
shr
in
pop
xor
mov
ljmp
sub
mov
dec
sub
sub
cs
cmpsw
ret
add
mulb
insb
xchg
adcl
inc
push
pushf
nop
jmp
pushf
or
stos
shrl
rcll
loopne
sub
lods
ficomps
adc
lcallw
mov
mov
jmp
jecxz
mov
test
ds
sbb
das
push
bound
or
push
scas
xchg
fsts
inc
inc
adc
ja
push
out
in
stos
fimull
addr16
pop
int3
mov
rcr
bound
xor
or
mov
or
or
loope
out
inc
mov
lods
push
lods
dec
jle
cmp
jno
inc
pop
jb
xchg
ljmp
popf
aas
sub
pop
or
popf
mov
loop
imul
pop
cmp
inc
call
sub
push
popf
lods
xor
outsb
xor
in
dec
sti
mov
jecxz
fmull
fdivp
mov
loopne
daa
xchg
mov
push
push
out
hlt
pop
aaa
in
lock
inc
pop
dec
dec
cld
pusha
inc
cmc
cwtl
daa
mul
mov
cmpsl
stos
aam
mov
dec
xchg
adc
push
cmp
fldenv
dec
aaa
lock
jecxz
cmp
fucom
inc
xchg
pop
mov
pusha
xor
dec
daa
outsl
xor
dec
inc
clc
out
jg
sub
jl
add
dec
jge
stc
xchg
negb
xor
and
pusha
jg
sub
mov
xchg
cmp
test
into
gs
cld
dec
and
and
decl
pop
pop
ror
xchg
jo
mov
rcr
int
fdivl
sub
dec
pop
pushf
test
jae
sarb
clc
add
cmpsb
push
jl
xchg
mov
adc
leave
stos
add
gs
add
mov
xor
js
and
jp
adc
cmc
jmp
or
sub
mov
push
ja
mov
out
pushaw
inc
out
mov
popl
gs
int
push
sbb
sahf
sub
int
xchg
das
and
outsl
xchg
imul
push
sbb
fsubrl
aam
int
push
lock
fwait
jnp
int3
cwtl
aam
xlat
negb
push
push
or
stos
test
icebp
mov
andl
push
test
cltd
cmp
out
or
add
sbb
cmpsb
movsb
jl
sub
mov
cmp
jg
or
mov
mov
repnz
mov
jne
fucomi
sbb
jmp
push
mov
inc
dec
jle
movsl
pop
lcall
aam
stos
jns
sahf
icebp
jns
or
pop
mov
adc
push
mov
lods
or
ja
or
jecxz
icebp
xchg
lods
jnp
and
push
lods
jmp
cltd
cmp
adc
cmp
cmp
faddl
insl
sub
cld
fsubrs
aas
push
movsl
sbb
out
loope
rcll
dec
lods
aas
inc
pop
pushf
mov
or
pop
inc
or
sub
mov
ja
mov
scas
xor
mov
fcmovu
or
repz
mov
pop
xchg
sbbb
push
push
xor
sub
pop
out
lcall
into
xchg
shll
adc
in
sub
mov
cmp
or
sub
cmp
add
xchg
mov
into
pop
shlb
in
loopne
vmovdqa
test
sub
pop
and
mov
hlt
pop
or
pop
inc
mov
mov
pop
pop
insb
cld
inc
mov
add
xchg
lods
and
aas
cvtdq2pd
cli
iret
arpl
and
out
add
xchg
add
mov
mov
outsb
shlb
shrl
loope
loop
lretw
xchg
repz
cltd
inc
iret
aad
data16
jle
xor
fadd
sahf
hlt
lcall
sub
dec
mov
and
movsb
andl
test
push
icebp
sub
sub
cwtl
in
and
add
jp
push
xor
in
mov
mov
les
dec
xor
rorb
enter
loope
sub
inc
in
subb
inc
bound
sbb
stos
cwtl
in
xchg
loopne
push
dec
inc
push
mov
scas
negl
movsb
xor
stos
popf
sub
imulb
adc
cs
aad
sbb
inc
inc
xor
or
cmp
test
sarl
dec
add
lods
push
pop
stos
xchg
push
sbb
ret
mov
loopne
mov
and
repz
sbb
je
jge
lea
sub
and
cli
mov
jne
sahf
in
test
lret
mov
mov
in
shl
xor
sub
pop
mov
jne
sbb
sub
pop
subl
repnz
lret
mov
enter
shlb
sub
dec
cld
loop
fdivl
in
test
or
mov
xchg
pop
loop,pn
repnz
je
imul
and
hlt
mov
movsl
jnp
pop
sub
fisubrs
adc
add
mov
jno
mov
xchg
loop
rclb
mov
aam
cs
stc
outsl
push
xor
inc
loop
sti
repz
call
in
push
in
lret
cltd
mov
xchg
inc
cmpsl
data16
mov
sub
imul
jp
in
insb
bsr
xor
cwtl
sub
xor
loop
outsb
rclb
jp
cmp
jno
mov
les
ret
cmp
in
jbe
sbb
pop
stc
xor
sub
mov
shrl
xchg
insb
fs
pop
xor
into
mov
leave
pop
push
adc
mov
cmc
fwait
cwtl
nop
jl
or
mov
xchg
pushw
push
or
dec
enter
dec
sub
jns
mov
dec
data16
in
loopne
adc
cmpsb
cmp
mov
ret
cmp
repz
loop
das
pop
sub
sub
xor
popf
jl
pop
push
enter
sub
xor
loopne
push
pop
in
imul
sbb
in
cmc
rcrl
cmp
inc
in
outsb
stc
and
je
lcall
mov
leave
cmp
sldt
jo
pusha
and
dec
add
loop
cmp
mov
pop
scas
mov
cmp
lods
sbb
repz
pop
mov
push
xor
sbb
pop
mov
mov
imul
push
add
inc
cmp
cmc
sbb
jp
test
push
jge
sahf
fisubs
int
add
or
dec
mov
push
paddusw
mov
out
mov
cld
mov
inc
lea
jne
out
pop
int
sbb
sahf
hlt
mov
pop
in
pop
xor
ss
popf
xchg
ds
rorl
dec
xlat
lock
sub
pop
cs
cmp
ud0
lds
leave
popf
jno
cmp
sbb
out
fcompl
lahf
lahf
repnz
adc
cmpl
and
xchg
outsb
mov
clc
stos
cmp
jnp,pn
push
hlt
lds
inc
sub
cmpsl
test
pop
iret
icebp
sub
mov
adc
inc
push
mov
mov
fidivl
es
bound
test
cltd
and
xor
lds
adc
dec
inc
jl
idiv
stc
cmp
and
push
fcoms
sarb
jb
mov
add
fiadds
sahf
pop
mov
mov
pop
pop
or
ror
aad
das
fs
xchg
nop
dec
std
lahf
jo
adc
out
mov
xchg
sti
cmp
ficoms
mov
iret
push
pop
mov
sbb
mov
test
mov
test
push
pop
in
mov
sbb
cmp
jae
push
xchg
push
and
inc
cmp
push
scas
jne
xor
inc
mov
adc
add
in
cmpsl
add
xchg
pop
push
shr
je
adc
sbb
pop
dec
jecxz
cld
std
jl
dec
stos
outsb
cmpsb
and
xchg
fcoms
sbb
in
dec
xchg
mov
inc
rolb
xabort
add
xchg
fiaddl
mov
int3
sarl
and
dec
pop
xchg
add
inc
lock
inc
ret
push
add
jb
sub
out
jl
xor
enter
and
arpl
mov
rorl
das
fmul
icebp
sbb
mov
hlt
and
dec
aas
push
mov
sub
pop
jp
outsb
or
push
lea
lock
pusha
aas
gs
bnd
or
dec
cmp
sbb
push
lret
mov
lods
mov
clc
orb
mov
adc
mov
jnp
out
push
push
fmuls
or
pushf
inc
out
mov
mov
aam
mov
cmp
lods
icebp
cmc
lret
adc
inc
mov
loopne
jmp
add
cltd
sub
push
xchg
mov
stc
push
push
repnz
sub
mov
sbb
xor
cs
xchg
shll
xlat
add
pop
pop
cmp
mov
adc
jle
xchg
ljmp
jg
sarl
sub
xorl
repnz
fisttpll
pop
xor
or
pop
mov
mov
stos
jl
push
pop
test
sbb
test
mov
ljmp
cmpl
jecxz
fdivrl
or
push
scas
sub
leave
js
jnp
dec
push
loope
adc
pusha
jmp
cmpsb
cld
jmp
adc
push
or
popf
in
push
xchg
mov
add
push
inc
and
xchg
iret
mov
js
inc
cmpb
adcl
push
hlt
cltd
sahf
fs
cli
scas
out
lret
repnz
ds
cli
es
fdivrs
adc
ret
mov
and
mov
out
add
imul
and
mov
fwait
pop
push
cmp
shrb
add
cli
mov
out
xchg
push
mov
mov
mov
lods
sbb
add
test
push
mov
ficompl
test
add
test
mov
test
imul
xchg
dec
push
mov
insl
das
movsb
loope
push
add
push
aad
xchg
pop
mov
pop
cwtl
es
inc
inc
pop
push
mov
xor
pop
sbb
lods
mov
loop
sbb
gs
cmp
outsb
pop
or
pop
out
sub
cltd
loopne
or
push
ljmp
fsubrs
movsw
dec
aad
cld
xor
sub
push
cmpsb
lock
es
rolb
lea
in
test
popl
mov
mov
push
or
push
mov
jo
inc
cld
fmull
ss
dec
ljmp
push
icebp
or
lds
xchg
pop
lea
jecxz
sub
or
xchg
lods
aas
hlt
xchg
jecxz
xchg
test
mov
cmc
int3
adc
mov
jo
sub
imul
adc
lret
fstl
icebp
popf
xor
rcll
inc
je
add
popa
sub
imull
gs
test
adc
leave
lods
xchg
lods
cld
push
and
and
push
fwait
stc
fwait
jp
loope
sahf
jae
push
inc
push
scas
into
cmpsb
xor
xchg
aaa
stos
movsl
jmp
cmp
inc
lret
insb
dec
xor
popa
xor
stos
aaa
mov
sahf
adcb
adc
or
jae
mov
je
mov
mov
sub
sti
pusha
sti
or
inc
sahf
test
pop
push
rclb
pop
shlb
loope
cli
scas
loop
lods
in
or
jmp
push
ret
jge
xchg
arpl
shl
testb
fisubrl
cmpsl
xchg
jne
adc
cmp
jmp
inc
or
sub
sub
inc
subb
cmp
inc
in
jg
cmc
addr16
jmp
mov
fsubl
inc
cmpsl
ljmp
inc
les
jmp
fbstp
movsb
jp
int
dec
sub
push
ljmp
inc
mov
and
out
outsb
adc
mov
sub
and
int3
test
pushf
iret
xchg
mov
sub
push
ret
jg
mov
out
nop
pop
dec
mov
jg
xor
frstor
add
test
fcomps
push
mov
popa
push
mov
test
or
mov
and
pushf
or
xchg
or
cmp
movsb
gs
clc
dec
jns
xchg
or
sbb
shll
pusha
add
test
int
xor
pop
jp
mov
flds
pop
push
mov
cmp
sbb
sbb
dec
outsl
test
mov
mov
mov
loope
dec
cmp
adc
push
mov
xchg
jae
or
ret
popa
or
das
cld
inc
push
xor
in
iret
cmp
mov
hlt
xchg
and
pop
push
mov
adc
push
into
leave
stos
imul
dec
fsubr
fbstp
shl
daa
fldl
and
sbb
sub
add
hlt
notl
dec
repnz
push
pop
add
fs
sti
pop
fs
loope
jge
mov
lahf
daa
leave
inc
aad
push
jnp
and
outsb
fisubrl
es
leave
aas
jl
mov
ret
mov
xor
dec
je
sbb
push
cmp
pushf
and
mov
cmpsb
in
cwtl
arpl
cli
inc
enter
push
pop
frndint
add
xor
shll
dec
mov
inc
mov
push
pop
fs
pop
mov
ficomps
push
cmp
mov
je
ja
lea
cld
mov
inc
in
mov
call
sti
cs
aam
adc
popa
fldcw
inc
xor
push
adc
out
leave
cmp
mov
out
call
lcall
popf
push
lahf
xor
xor
dec
testb
pmaxub
xlat
stos
xor
push
xchg
pop
add
add
lods
sahf
mov
out
xor
sti
xor
mov
sbb
sbb
or
adc
sbb
push
insl
mov
and
addr16
stc
xchg
mov
add
lock
adc
rcll
jmp
pushl
pop
scas
cmp
enter
push
cmp
jle
cmp
jecxz
jno
mov
xchg
cld
lock
std
mov
test
dec
gs
push
dec
ljmp
scas
mov
pop
jge
inc
sti
mov
cmp
and
sar
popf
mov
imul
out
pop
jbe
jne
roll
fidivl
pop
sub
cltd
insb
pop
sbb
movb
stos
cmp
pusha
push
push
and
mov
cs
adc
mov
das
gs
jbe
sub
mov
ret
stos
in
fwait
dec
shl
rol
push
cmp
dec
leave
jnp
gs
push
scas
das
pop
jle
jno
aaa
bnd
imul
or
xchg
sbb
and
fisubrl
int
in
mov
nop
stos
ffreep
dec
mov
push
mov
cs
mov
mov
cwtl
pop
mov
jp
adc
lds
xor
inc
mov
pop
jns
andl
push
js
fcmove
mov
aad
and
fucomi
mov
je
es
push
lea
imul
add
mov
clc
cmovs
push
mov
cld
or
int
repz
out
inc
fdiv
lods
sahf
push
into
es
fistpl
dec
push
push
or
bswap
stc
jbe
or
xor
jge
test
and
and
gs
ret
xchg
daa
or
sbb
cmc
xchg
cmpsl
pop
arpl
pop
inc
fmull
jge
push
or
imulb
or
cmp
add
iret
arpl
inc
cltd
aaa
jmp
jmp
dec
out
sbb
xchg
push
es
fwait
popf
rclb
add
and
fdivrl
and
and
lret
cld
jle
loop
adc
jp
popf
shl
or
or
and
repnz
imul
icebp
dec
adc
incl
aad
mov
loopne
aam
stos
insb
xor
or
cwtl
dec
adc
nop
cld
pop
ret
movsb
roll
repnz
cmp
jb
lds
dec
xor
xchg
andb
mov
and
insl
incb
mov
push
jmp
pop
rorl
decb
fdivr
sub
mov
sti
sub
inc
pause
cld
test
pop
and
pop
inc
jg
lret
test
fcomps
repz
bound
iret
add
dec
mov
add
mov
testl
sub
daa
imul
in
jnp
call
insb
enter
insl
dec
xor
xlat
loopne
adc
add
test
lods
jbe
push
jmp
hlt
lret
jmp
fcmovbe
jns
insl
into
or
pop
push
ds
jne
out
sbb
mov
movsl
mov
data16
add
lea
test
movsb
bound
call
mov
xchg
xchg
and
int3
shll
mov
nop
add
sbb
int3
dec
sub
aaa
dec
xlat
xchg
dec
adc
sahf
ljmp
push
mov
ja
shl
push
psrlw
aad
and
xchg
aas
sub
jb
adc
add
xor
sti
mov
loopne
test
cmp
fstl
je
xchg
pop
add
mov
and
cld
inc
and
mov
sub
mov
daa
aaa
mov
sub
xor
xor
and
jb
sbb
mov
stos
jle
and
fistps
cs
jb
inc
dec
ficoms
stos
pop
pop
int
mov
and
dec
cs
popf
push
add
shl
cmp
cmp
adc
xchg
into
out
mov
out
jp
test
cmp
popf
jecxz
pushf
xlat
ret
push
test
fsub
shrl
jp
test
fdivs
loope
mov
aas
mov
mov
xor
jbe
inc
xchg
iret
dec
jp
pushf
movsb
jbe
fistpl
pop
and
ret
addr16
or
mov
mov
dec
jne
jge
or
mov
mov
iret
inc
or
pusha
test
lods
mov
stc
or
push
cltd
jle
and
xor
push
mov
shrb
popa
push
subl
repnz
sub
sub
push
call
orl
pop
into
mov
fstpt
iret
aam
movsb
cmpl
pop
lods
cmc
inc
mov
mov
or
add
xlat
rcl
sbb
jnp
les
into
xor
xchg
repnz
mov
inc
xor
or
and
lahf
push
push
enter
ja
lods
pusha
inc
movsl
pushf
bound
outsb
jmp
stc
jmp
mov
gs
aaa
cmp
or
sahf
vmulsd
leave
inc
mov
cld
xchg
jb
mov
inc
mov
nop
or
dec
mov
or
push
mov
out
iret
push
stos
loope
or
and
pushf
ror
inc
leave
mov
dec
sbb
sbb
cmpsl
jge
mov
inc
mov
dec
xor
dec
lods
rcll
je
imul
add
mov
cli
es
adc
adc
in
ret
sbb
push
and
mov
xchg
sub
push
pop
pop
dec
adc
in
jge
arpl
pop
rolb
push
dec
loopne
mov
inc
ljmp
push
das
jns
push
stos
jnp
addr16
and
fstps
insl
icebp
push
mov
or
inc
mov
mov
scas
xchg
repnz
mov
pop
daa
imul
mov
pop
loope
mov
insl
mov
jmp
mov
adc
jecxz
shll
pop
push
insl
inc
pop
add
psubd
mul
lahf
data16
mov
xchg
ja
xchg
jbe
xor
je
push
or
fcmovbe
pop
mov
jge
int3
xor
pop
mov
imul
movsb
sub
cld
andl
cs
push
sub
cmp
lods
adc
cltd
aam
mov
loopne
test
or
jp
push
pop
sbb
or
scas
std
mov
popf
pop
ds
movsb
shlb
or
andb
es
mov
or
sbb
into
data16
test
xchg
clc
push
sub
inc
xor
test
lret
addr16
outsl
mov
sbb
lahf
xorl
cmp
xchg
insb
imul
in
inc
cwtl
push
push
xor
inc
clc
dec
xchg
fsubl
jl
cmp
int3
mov
test
mov
mulb
inc
lcall
movsl
xchg
mov
or
mov
or
adc
addr16
adc
lods
mov
mov
test
jl
lret
add
mov
cmpsl
sbb
xchg
pushf
push
lea
xchg
movsl
lahf
xor
dec
fldt
hlt
inc
jg
mov
or
pusha
jo
cmpsb
pop
adc
clc
push
sbb
push
mov
aaa
cmpsl
jae
pop
jo
push
rcr
mov
fimuls
jmp
sub
dec
push
add
cmc
push
inc
outsl
std
xchg
outsl
dec
cwtl
mov
mov
addb
xchg
sarl
sar
stc
les
out
mov
mov
scas
jp
cmpsl
cwtl
sub
movsb
mov
stos
lods
jb
mov
sarl
les
nop
flds
push
jae
sub
repnz
jg
popf
dec
test
ja
push
loopne
pop
lcall
imul
loope
mul
loop
mov
out
add
inc
cmp
push
sbb
in
in
push
xchg
popa
xor
inc
js
pop
jmp
pop
sbb
sbb
adc
add
sbb
cwtl
mov
test
cmpsl
dec
ja
and
outsl
mov
xchg
jne
mov
imul
pop
lods
fsubs
mov
xor
addr16
pushf
enter
push
sub
sbb
cmpsl
repnz
ret
push
hlt
pop
jnp
hlt
xor
je
psrlq
ljmp
outsb
jo
mov
loop
js
sbbw
mov
enter
inc
mov
adc
pop
cs
dec
cmp
cltd
out
mov
cmp
mov
xchg
cmp
fbstp
repnz
mov
flds
jmp
sti
push
repz
jns
popa
mov
icebp
mov
popl
mov
jmp
cmp
pop
out
mov
test
fildl
cmp
push
xchg
in
fdivrs
jae
pop
or
push
inc
pushf
mov
mov
xor
pop
mov
ret
pop
push
push
xor
push
dec
xor
ljmp
insb
lret
ja
sub
pop
push
adc
push
scas
xchg
inc
jge
jnp
jnp
popf
add
push
fcoms
test
flds
sti
pop
movsb
rcl
mov
ret
xchg
push
xor
and
fmul
pop
repnz
push
je
aad
pop
jnp
les
cmp
arpl
push
lods
sti
dec
stos
sahf
push
cmp
jge
fsubrs
insb
adc
mov
inc
xchg
das
dec
arpl
sti
and
sbb
icebp
fisttpll
lahf
aam
jno
nop
and
pop
cmp
adc
and
mov
outsb
je
xchg
js
adc
xchg
pop
inc
pop
sub
test
dec
xchg
jmp
jp
leave
in
or
pop
repz
icebp
pusha
loopne
push
pop
cwtl
xor
test
and
cmp
push
or
ret
inc
pop
mov
popf
sbb
mov
sub
sbb
movb
dec
pop
and
repnz
or
cmp
jg
mov
sub
jge
mov
push
mov
cmp
imul
fwait
and
rcr
pop
inc
scas
aad
xchg
insb
push
int3
and
push
or
and
adc
jp
xor
mov
push
sub
and
push
jo
xchg
mov
fstpt
test
pop
xor
and
sbb
mov
testb
sahf
daa
mov
jg
adc
mov
js
ss
iret
cwtl
or
cmpsb
sbb
in
xchg
repz
add
xchg
bound
inc
xchg
mov
cmp
out
repnz
pushl
add
idiv
lods
mov
inc
cmp
mov
lea
mov
mulb
pop
push
lock
test
jns
pop
loope
mov
pop
and
out
fisubrs
pop
je
out
inc
mov
or
cmp
add
repnz
mov
mov
sbb
fs
mov
scas
fwait
or
sbb
and
clc
xchg
push
pop
mov
mov
cld
xor
cmp
xchg
add
imul
addl
inc
mov
in
pop
std
scas
dec
jo
and
mov
sbb
inc
pop
adc
pushf
in
push
push
jns
test
push
data16
out
and
inc
xchg
jns
outsl
sub
jle
sub
sbbl
or
jg
movsl
cmpsb
lock
pop
lods
fs
insl
add
mov
dec
fstpt
pop
add
push
and
out
cmp
xchg
mov
jae
hlt
cmc
dec
cmpsb
movsb
lcall
lahf
cmc
mov
outsb
adc
enter
or
pop
lret
imul
jnp
mov
xor
jmp
xor
outsb
pop
inc
push
jge
and
ja
in
inc
imul
mov
lcall
dec
mov
push
arpl
aad
rcr
pop
dec
jmp
lret
mov
int3
cmp
pop
call
fs
fisubrl
or
idivl
or
and
movsl
sbb
mov
jg
outsb
pushf
push
mov
in
xor
mov
sti
jp
stos
outsl
pop
inc
inc
xchg
cmpsl
std
out
mov
push
hlt
cmp
arpl
adc
xchg
xchg
jmp
jb
aaa
sti
fbld
cmp
or
xlat
sub
adc
pop
jns
aaa
hlt
loopne
imul
testl
imul
or
insl
adc
cli
orb
es
in
movsl
and
sbb
cmp
xor
xchg
pusha
les
cmp
inc
int
mov
movsl
shrl
inc
int3
movaps
ffreep
vpandn
outsb
popf
dec
stos
cmp
cs
cvtps2pd
mov
fidivrl
add
cmp
cltd
mov
jb
or
sub
adc
xchg
jno
js
test
xor
sahf
in
lcall
lcall
in
xor
mov
push
mov
lahf
mov
lret
push
mov
mov
les
mov
push
mov
out
push
sbb
sbb
les
imul
lds
mov
mov
pop
cwtl
jb
inc
ds
mov
mov
in
push
xchg
cmp
jnp
mov
inc
mov
lcall
push
push
cld
add
idiv
cld
aad
jno
fiaddl
cmp
movsl
xorb
push
pop
add
push
sbb
adc
cli
xor
jno
xchg
and
rcrb
dec
mov
call
inc
or
test
pop
aam
loopne
jae
in
cmp
xlat
push
cmp
xlat
test
cmc
xor
jp
xor
jns
stos
sti
imul
mov
mov
inc
outsl
scas
jecxz
xlat
icebp
push
dec
pop
je
pop
or
mov
in
arpl
stc
ja
xchg
es
lcall
mov
sbb
orb
fsubrp
ret
adc
shl
mov
and
mov
jo
iret
pop
sub
push
scas
push
lock
mov
inc
xor
repnz
mulb
pop
sti
je
mov
jno
mov
push
aas
jo
mov
mov
push
inc
xor
jnp
mov
sub
outsl
out
test
jnp
ret
add
mov
testl
ss
mov
jg
mul
hlt
jb
fiaddl
add
inc
rcl
lock
lods
sbb
pop
cmpsb
jle
or
mov
mov
push
jno
pop
or
iret
lods
mov
mov
xor
mov
lea
jno
fimuls
and
mov
cs
pop
ss
xlat
add
addr16
dec
test
mov
mov
popa
fnstcw
push
push
mov
and
cmp
mov
adc
inc
cmp
mov
and
push
inc
sbb
shll
dec
mov
cmc
pop
in
fstp
call
insl
xchg
aam
into
inc
shll
push
out
fwait
or
push
inc
jb
jle
jle
test
mov
fiaddl
repnz
jl
ds
mov
dec
adc
aaa
xlat
and
jg
mov
sub
dec
push
push
loopne
sbb
aam
jmp
das
cmp
bound
test
mov
dec
insl
repnz
pop
loopne
xor
je
jae
cmp
xor
or
push
mov
ss
addl
jbe
mov
adc
sbb
pop
push
xchg
call
mov
pop
stos
sbb
jo
gs
xor
xchg
rorl
sub
into
cmp
aas
inc
xchg
xchg
movb
pmulhuw
push
add
inc
rep
sbb
dec
inc
mov
sub
mov
xor
ss
cmp
push
fadds
shrl
test
flds
or
cmp
sub
icebp
call
shlb
pop
jo
insb
pop
or
das
mov
pop
jg
xchg
xchg
inc
mov
cmpsb
iret
mov
sbb
mov
xchg
fsts
push
pop
in
push
sub
sub
push
and
ljmp
repz
push
leave
jg
fidivl
shlb
in
mov
lret
jge
lret
subl
gs
imul
fbstp
lretw
mov
test
jg
cs
ds
sahf
imul
pop
xor
adc
mov
cltd
sbb
ds
pop
and
imul
int3
insl
cs
jno
rolb
sbb
jmp
subb
in
sub
push
mov
adcl
or
inc
loop
fildl
mov
fistps
inc
jae
test
test
pop
sbb
cbtw
shll
dec
into
push
mov
jmp
pop
pop
lock
adcl
es
or
dec
das
xor
daa
std
add
mov
sti
push
daa
rcr
std
xor
mov
loop
test
inc
xor
pop
fs
push
xchg
cmp
fimull
sbb
lea
je
scas
mov
mov
pop
fwait
push
push
and
jne
adc
test
adc
pop
rcrl
push
dec
xor
rep
lea
adc
push
out
mov
insl
pop
dec
out
stc
out
inc
fstpl
inc
adc
test
fs
int3
mov
and
push
fsubrs
cmp
rcll
jno
test
lock
lods
popf
mov
pop
adc
sbb
dec
add
pop
push
push
adcb
cmp
cwtl
add
fdivrs
js
xor
push
push
sub
and
and
lret
mov
cli
stos
push
lcall
imul
xor
ja
mov
test
jb
and
mov
pusha
les
inc
xchg
cmpsl
in
mov
dec
js
adc
inc
inc
push
inc
pop
loope
sub
insl
int3
jae
and
mov
adcl
stc
in
cmp
test
ss
lods
repz
add
lods
cmc
or
test
xchg
icebp
jge
cmp
dec
mov
hlt
dec
add
mov
je
lea
test
loopne
outsl
aam
aad
pop
adc
adc
dec
enter
jnp
or
popa
adc
pop
cmp
jb
fidivl
jae
bound
inc
sti
dec
repz
dec
mov
ret
cmp
jmp
xor
fnsave
and
jmp
dec
int3
jle
xor
mov
xchg
jnp
addl
lret
pusha
cmp
jecxz
pop
call
adc
ret
and
popa
jle
dec
xchg
dec
inc
sub
mov
cmp
cmp
jmp
jae
cmp
loopne
push
jl
movsb
push
adc
mov
icebp
mov
add
das
movsl
push
sub
jo
adc
test
lea
xchg
lock
sbbb
fstl
dec
jbe
test
xchg
je
dec
pop
jl
fistl
sub
inc
sbb
push
daa
fucom
push
ffreep
fldcw
loop
xor
xorl
adc
xor
or
cwtl
gs
mov
mov
aaa
mov
sub
pop
adc
loopne
mov
or
adc
push
jp
cmp
roll
shlb
mov
push
xor
stos
test
into
sub
cmp
jp
out
test
cmp
fistpll
sub
test
repz
pop
dec
mov
decl
or
dec
xchg
pop
xchg
fidivrs
push
idivb
dec
je
inc
add
ljmp
xor
pushf
in
cmp
xchg
pop
inc
clc
aam
jp
xchg
jle
mov
sahf
fimuls
nop
xchg
les
jle
aas
xchg
adc
mov
lcall
rolb
fs
adc
addr16
addr16
test
shlb
std
mov
sbbb
paddusb
inc
pop
fldcw
dec
add
cmpsb
jae
pop
loopne
popl
rolb
fiaddl
xchg
inc
jmp
fsubp
adc
cmpsb
cmp
jge
aas
dec
dec
cmp
mov
adc
mov
mov
push
push
adc
movsb
sub
test
stos
or
dec
andb
scas
push
jns
fisubrs
push
imul
pop
dec
ljmp
repz
outsb
dec
mov
ficoms
in
inc
es
dec
sti
mov
inc
outsb
inc
lret
repz
jmp
jo
out
jne
xlat
shlb
mov
add
dec
mov
dec
hlt
nop
enter
ss
mov
or
mov
xor
jbe
cmp
leave
fnstsw
pop
test
and
jle
inc
notb
sti
xlat
cmp
call
xlat
pop
pusha
pop
mov
enter
loop
bound
or
nop
hlt
cmp
mov
mov
movsl
rcl
mov
arpl
adc
fs
or
sub
sbb
adc
mov
xchg
cltd
sub
and
mov
inc
mov
inc
mov
sbb
pop
pop
fwait
mov
jb
or
fmulp
stc
xor
push
or
push
fldenv
out
in
fistps
push
mov
out
mov
aam
inc
fmuls
movsb
mov
fstpt
sbb
fwait
jl
ss
lds
ja
shrl
out
data16
push
int
push
scas
cmp
data16
pop
addps
inc
insl
cmpsb
jg
xchg
push
mov
popf
mov
sub
icebp
ds
out
pop
gs
dec
jp
movsb
aad
stos
shl
cmp
dec
push
outsb
push
inc
in
xor
adc
add
xor
fdivr
xchg
push
popa
dec
inc
les
mov
adc
xchg
dec
xor
jge
sub
in
daa
jecxz
outsl
jb
mov
jecxz
cmp
mov
inc
movsb
test
adc
rcrl
adcl
jae
loope
arpl
mov
or
cmpsl
mov
push
cli
cmp
cmpsb
call
outsl
inc
inc
test
mov
repnz
sub
push
inc
lds
sub
lahf
push
jge
out
push
xor
xor
sbb
inc
shll
xchg
repz
push
mov
push
mov
jb
inc
lea
mov
inc
jp
cmc
push
shll
and
mov
mov
lret
lods
mov
pop
jbe
add
xlat
repnz
sahf
push
sbb
push
outsb
sbb
int3
cmp
xlat
lods
jle
or
inc
mov
mov
pop
or
cs
push
fimuls
icebp
xor
push
aaa
pop
push
dec
aam
and
push
repnz
in
dec
push
shll
lahf
inc
repz
cmpsb
push
aam
roll
aaa
call
es
inc
movsl
xchg
xor
mov
jnp
mov
fdivs
outsb
pop
jl
lock
jecxz
bound
stc
mov
mov
lods
adc
push
sbb
ljmp
in
std
aaa
push
mov
inc
mov
and
faddl
add
xor
dec
jl
scas
addr16
outsl
fnstsw
xchg
sub
sub
cmpsl
icebp
pop
push
mov
or
enter
test
dec
push
iret
adc
mov
jmp
add
inc
mov
jge
pop
pop
movsb
xchg
iret
aaa
inc
sbb
and
dec
out
loopne
data16
or
call
test
add
ds
nop
movsl
mov
sbb
loopne
adcl
xchg
cmpsl
into
inc
fs
cmc
addr16
dec
scas
pop
fs
cld
dec
xor
add
gs
outsb
movsb
cmp
aad
xchg
inc
in
mov
add
pusha
mov
mov
outsb
outsb
call
jp
pop
xor
sub
loop
cwtl
or
jg
cmp
popa
xchg
mov
fcoms
fstp
mov
repz
ret
jbe
imul
push
push
jle
adc
sub
cmp
add
scas
add
fldt
xchg
fiaddl
sbb
sub
push
das
stos
insl
mov
xchg
mov
fwait
sbb
leave
xlat
movsl
sbb
pop
cmpsl
pop
push
mov
pop
stos
jl
hlt
cmp
jo
cmp
or
push
xchg
in
jbe
les
fwait
arpl
xor
pushf
into
mov
xor
mov
mov
jne
sbb
cmpsl
in
push
push
jl
and
sbb
pushf
dec
fisubrl
xchg
dec
dec
or
arpl
jge,pn
sub
fs
sbb
xchg
out
or
jns
insl
fs
int
out
shrl
push
add
add
call
adc
jbe
mov
add
add
movb
fcomps
pop
sahf
jmp
adc
push
pop
aam
or
in
mov
aaa
push
lahf
ljmp
pop
or
xor
mov
xchg
icebp
pop
mov
pushf
out
add
in
sub
cmpl
lret
pusha
insb
mov
or
icebp
push
and
xor
insl
xchg
ljmp
mov
leave
pop
pop
cmp
lcall
push
imul
pop
shrl
clc
jbe
push
cmp
xchg
aaa
bound
inc
inc
movsl
xchg
cmc
sbb
lahf
mov
cwtl
add
mov
pushf
mov
sub
data16
mov
enter
pop
mov
xor
dec
inc
dec
jne
outsl
jno
sub
arpl
imul
out
or
sbb
dec
ja
insb
mov
fsubl
adc
shll
subl
scas
or
cmp
jp
imul
rorl
inc
cwtl
cltd
xor
popf
call
and
add
js
arpl
popf
fcompl
ja
mov
pop
mov
lods
push
cmp
cld
fildl
lea
pushl
out
and
ljmp
dec
jae
std
xor
je
sub
ret
fimull
inc
mov
xchg
lods
cltd
push
push
mov
ficompl
stc
outsl
jbe
add
popa
mov
dec
imul
dec
lcall
mov
rcrb
leave
mov
leave
xchg
sahf
cmp
call
sbb
call
or
sub
push
mov
outsb
ljmp
cmp
iret
xlat
imul
in
sbb
xorb
or
dec
and
and
sahf
push
int3
lret
xlat
out
mov
div
dec
mov
test
dec
test
rorl
test
fsub
mov
popa
lcall
add
push
notl
lods
sti
and
push
dec
enter
scas
mov
jne
mov
repnz
sbb
mov
sub
pop
sbb
mov
push
jo
push
xchg
leave
adc
add
fwait
xchg
mov
mov
xchg
fildll
shrb
jle
in
jp
xor
rcll
pop
pop
push
out
outsl
in
push
popf
cli
adc
into
push
cmpsl
add
cli
xchg
test
xor
scas
nop
xor
or
stos
push
gs
and
add
mov
push
sahf
dec
icebp
lret
jne
adc
pop
arpl
push
test
inc
adc
sub
mov
nop
add
jl
xchg
mov
fbld
xchg
insb
lds
dec
mov
or
aas
inc
test
xor
addb
lds
sbb
popa
test
adc
inc
jp
xchg
cmp
adc
xor
and
es
jle
jne
outsb
addr16
jp
and
in
imul
dec
iret
inc
mov
push
aam
cmc
je
icebp
sbb
popf
movsb
mov
mov
pushf
lret
mov
pop
imul
and
jg
jne
rolb
dec
ljmp
idivb
inc
jae
imul
or
sbb
jno
in
sub
push
jae
adc
sub
test
jge
shrb
mov
cmp
xchg
roll
add
lods
outsb
mull
popf
icebp
rcrb
mov
popf
push
repz
cmp
add
es
adc
add
xchg
add
mov
mov
sbb
cmpsl
sub
push
add
outsb
inc
pop
or
roll
pop
and
xchg
popl
inc
stos
leave
inc
test
sbb
andl
cmpsl
mov
mov
out
in
xchg
xor
mov
outsl
and
or
push
sti
sub
dec
sub
mov
cmp
adc
test
xchg
gs
cmp
jmp
mov
in
sub
data16
and
mov
sbb
outsb
sbb
mov
aaa
inc
popaw
pop
mov
es
cmp
std
sbb
jge
iret
mov
in
pop
loopne
out
int
mov
subl
push
push
sarl
pop
movsl
repnz
dec
popa
jl
nop
mov
gs
mov
fs
push
inc
aas
mov
dec
inc
add
sbb
test
xchg
mov
push
push
dec
push
xchg
pushf
lods
inc
inc
ljmp
jmp
and
je
jp
out
hlt
mov
cmp
xchg
pusha
jns
pusha
lods
xor
stos
sbb
lret
sbb
adc
jecxz
shrb
and
fmulp
inc
outsl
adc
cmpsb
pop
xlat
mov
loopne
orb
cmp
aam
xlat
mov
sbb
inc
push
bound
jae
arpl
pushf
sti
ss
jmp
jne
fisttps
test
std
dec
push
ja
fsts
notl
xchg
push
lods
fidivrl
fsts
cmpb
sbb
sbb
inc
jns
fwait
xchg
movb
ja
loope
or
push
xor
bound
push
mov
bswap
fildll
in
lods
imul
jbe
jecxz
jle
xor
sub
adc
mov
ja
test
ja
and
mov
push
cmpsb
icebp
jmp
ret
scas
fst
mov
mov
fisubrl
sbb
xor
data16
mov
jl
sahf
mov
out
je
mov
pop
ja
ret
int3
shrb
daa
rol
mov
ds
cmpsb
ja
pop
cmc
dec
xchg
es
pop
pop
lret
inc
ljmp
arpl
xlat
cmp
xor
cmp
imull
sbb
jle
stos
and
sahf
cmp
mov
cmp
test
mov
aaa
mov
cmp
stc
bound
xor
mul
adc
push
aaa
and
aaa
pop
mov
cwtl
mov
call
inc
daa
mov
mov
outsl
clc
sub
adc
adc
mov
lods
pop
xor
jmp
stc
insl
xchg
add
adc
popa
out
jge
les
out
adc
pop
enter
adc
and
shl
aaa
fisttpl
mov
sub
fiadds
fdivr
es
jl
cmpsl
jmp
xchg
xchg
repnz
test
sub
adc
mov
pop
subl
es
mov
lock
pushf
sub
stos
sub
pop
inc
mov
shrb
dec
cmp
rcll
inc
imul
pusha
sub
push
cmpsl
lcall
adc
push
or
jecxz
adc
jp
cmp
sar
push
arpl
mov
xor
inc
jg
test
dec
mov
cmpsb
push
sub
mov
cld
mov
sub
icebp
dec
sub
in
push
jmp
inc
lods
pop
cmp
add
push
lret
jmp
or
iret
cmp
push
xrelease
addr16
in
dec
fwait
repz
dec
es
cmpsb
out
pop
cmp
xchg
mov
mov
mov
push
cmpsb
fisttpl
mov
xor
jo
hlt
in
aam
push
and
xor
adc
das
dec
getsec
pop
aad
fcoms
push
pop
cs
mov
xchg
lret
push
cmp
cmp
cltd
popa
shrb
pop
in
xchg
js
xor
clc
push
push
and
jl
xor
sbb
push
ret
xchg
mov
les
sub
loop
movsb
dec
sub
fisttpl
or
jne
push
shrb
push
mov
xchg
in
ds
stos
in
dec
fwait
xchg
adc
into
mov
aad
stos
fsubrs
std
xchg
push
adc
cltd
pop
outsb
std
jns
inc
adc
push
sub
fiaddl
arpl
sti
dec
in
cmpsb
cli
call
scas
sub
jne
imul
popf
hlt
jp,pt
adc
xchg
imull
and
lahf
xor
push
das
ljmp
jo
pop
popa
das
push
les
or
adc
sbb
dec
push
sub
xchg
iret
stos
push
pop
out
mov
adc
mov
in
xorb
mov
iret
mov
xchg
mov
enter
mov
orl
call
out
lret
mov
test
rorb
into
lea
mov
push
mov
test
test
negb
lcall
jecxz
aaa
lahf
and
add
xchg
sub
xchg
mov
dec
cwtl
movsb
in
pop
sub
add
aas
arpl
and
fwait
push
xor
adc
jge
mov
push
adc
dec
sbb
jbe
mov
aas
dec
pop
dec
movsb
lcall
cli
or
mov
pushf
pop
repz
cmp
xor
and
mov
lds
push
add
in
sbb
sbb
pop
jle
xchg
adc
cltd
mov
ja
sub
imul
movsb
mov
repz
fcoms
pop
pop
sbb
cmp
or
and
xchg
jmp
lods
sbb
fcompl
mov
or
add
popa
bound
in
or
and
pop
mov
mov
sar
jmp
jecxz
mov
test
cli
cmp
ljmp
add
and
sub
test
pop
xor
jecxz
xchg
pop
push
jg
pop
mov
cwtl
dec
js
mov
test
clc
sbb
fdivs
sahf
jmp
stos
mov
dec
dec
stc
push
push
xchg
subl
xchg
mov
popa
sub
and
xor
xor
dec
mov
push
rclb
fwait
pop
aaa
ficomps
clc
add
rorl
add
xor
test
hlt
sbbl
stos
jae
ds
adc
xor
pop
test
mov
pop
push
cmpl
push
mov
push
pop
pop
mov
fwait
xor
rcll
dec
push
xlat
ja
es
test
jne
test
in
adc
mov
dec
mov
cwtl
sahf
sbb
adc
push
jo
popf
push
lea
sbb
ret
mov
ljmp
inc
cmpsl
push
mov
mov
lret
adc
push
and
dec
cmp
and
sub
xlat
imul
loopne
cmp
outsb
ljmp
aad
or
jo
pop
mov
mov
sbb
lcall
lea
pop
sub
sub
mov
shlb
aad
popl
mov
mov
hlt
repz
cld
rclb
loopne
jecxz
scas
add
xor
inc
ljmp
loopne
and
idivb
sub
data16
dec
arpl
jl
pop
aaa
iret
xor
jno
xchg
lahf
xchg
aad
xorl
mov
pop
test
jge
js
dec
lretw
push
popa
les
gs
test
mov
fists
mov
out
mov
adc
pushf
std
add
cli
pop
dec
and
popl
clc
insl
les
push
movsl
pop
mov
in
arpl
inc
cltd
sahf
sub
xor
loop
xlat
cld
inc
sbb
xchg
sti
ror
add
jp
and
fidivs
fidivs
dec
jmp
in
xchg
cmp
jp
sbb
sub
out
pop
add
pusha
sbb
ljmpw
xor
jge
loope
and
lods
lds
pop
mov
xchg
push
loope
rorb
sub
lods
movsb
cmpsb
dec
jge
jbe
int3
pop
sub
mov
pop
aas
addr16
cmp
pop
inc
mov
add
dec
loopne
xchg
je
and
std
sbb
shl
into
jbe
lret
enter
andl
inc
rcrl
iret
gs
mov
ret
test
jmp
sub
rolb
sbb
or
jns
subl
jge
test
shrb
mov
pop
pop
sbb
jne
inc
psubb
push
adc
rorb
inc
xchg
jge
sub
mov
in
bound
mov
xchg
fadds
stc
sub
push
cmp
dec
xchg
xlat
popf
das
popa
mov
dec
test
lahf
sub
jle
push
jp
call
or
push
pop
lods
mov
add
xlat
inc
add
and
push
stos
and
jl
je
mov
mov
sub
xor
xor
mov
dec
clc
mov
push
vsubps
addb
push
sti
ss
lods
fldcw
dec
pop
push
and
rcl
loope
scas
mov
xor
mov
les
lods
xchg
ljmp
mov
add
dec
xchg
and
mov
push
pop
or
insb
aas
mov
jp
addr16
mov
add
mov
stc
test
xchg
test
push
jae
push
call
mov
rcl
loope
movsb
mov
mov
mov
ret
jno,pn
xor
stos
loope
sub
out
cld
out
neg
push
and
addr16
adc
fsubp
data16
out
test
or
lret
arpl
add
push
mov
jecxz
sbb
push
loope
inc
andb
push
clc
add
movl
scas
pop
out
outsb
gs
js
in
sbbb
mov
repz
popa
imul
stc
cmp
les
gs
mov
inc
xchg
loope
mov
add
aam
xor
add
push
cvtps2pi
fisubs
mov
outsl
mov
xchg
add
adc
sub
jne
sub
ud2
in
jp
addr16
lcall
push
fmuls
and
adc
shl
inc
subl
fistpll
movq
and
push
inc
loop
clc
jecxz
test
add
pop
lock
andl
and
lods
aaa
jo
pushf
jns,pn
push
test
pop
jmp
pop
mov
adc
pop
orps
cmc
popa
notl
pop
dec
int3
icebp
jg
sbb
pop
shr
lahf
mov
and
sub
push
pop
inc
cli
out
xchg
fmull
mov
orb
push
cmpsb
popf
xlat
lea
mov
and
movsl
push
pop
mov
ljmp
add
add
sub
jae
sahf
xlat
loop
cmp
and
movaps
inc
ss
lds
stc
xor
movsb
imul
push
sbb
insb
jmp
imul
cmp
rorb
xchg
fnstcw
mov
rolb
xor
push
shrl
test
in
pcmpgtd
popf
dec
lret
sub
outsb
in
cmpsl
jecxz
repnz
call
aam
int
sbb
push
xchg
push
je
mov
cmp
jae
xchg
out
ljmp
xchg
sahf
fldcw
mov
popa
inc
mov
mov
cld
and
push
and
mov
jl
mov
pop
fldcw
icebp
loopne
in
lea
mov
mov
jb
scas
insl
sbb
cmp
lret
aam
pop
int3
in
int
xchg
xor
cs
mov
outsb
imul
pop
test
sub
fdivl
mov
stc
lods
int3
fidivrl
testb
popa
int
inc
inc
push
jl
push
stos
popf
popf
pop
jns
sub
aad
repnz
sub
lcall
es
cmpsl
and
mov
pop
xchg
jns
and
dec
addr16
int3
pushf
pop
push
xor
fdiv
pop
xor
add
movsl
cltd
dec
push
xchg
cmc
pop
sbb
dec
loopne
out
hlt
lahf
inc
pop
lea
movsl
insl
repz
fnstsw
sarb
das
test
mov
lcall
ret
sahf
imul
cmp
call
aam
repnz
into
out
movsb
lds
je
movsl
adc
mov
sub
pop
ljmp
mov
xchg
pusha
xor
mov
sbb
cmc
sbb
or
mov
push
mov
mov
pop
sbb
or
dec
sbb
sbb
loop
iret
addl
and
push
test
les
adc
mov
and
push
adc
mov
mov
dec
sub
test
push
aaa
dec
lret
sub
or
pop
xchg
testb
in
aas
test
cmp
arpl
cmp
mov
inc
test
lock
popf
or
aas
cwtl
jmp
insl
cmp
push
es
js
ds
jp
cmc
adc
mov
xor
cmpsl
int3
and
pop
fdivp
or
daa
inc
in
shl
or
cli
cld
push
sub
mov
xchg
aaa
or
inc
push
aad
cld
popa
outsb
sbb
mov
cli
repnz
inc
push
cli
cmc
fldenv
popf
insb
jnp
pop
sbb
iret
and
pop
jae
stos
arpl
dec
mov
dec
sarb
pop
push
hlt
lahf
jo
sbb
sub
sbb
or
push
or
gs
mov
mov
icebp
xchg
and
shll
cmpsl
andl
out
xchg
repnz
daa
hlt
test
sbb
jp
mov
stc
insl
ret
pop
mov
inc
mov
lods
push
fwait
xlat
call
adcb
mov
mov
inc
xchg
cmpsl
mov
call
adc
out
xchg
mov
shl
cs
andb
cmc
fists
repz
outsl
mov
out
cmpsl
fmul
and
sbb
pop
stc
add
repz
cmc
cmp
and
xchg
sub
mov
aam
std
pop
dec
repz
fmull
jmp
xchg
pop
fisubrs
aaa
mov
mov
fidivrs
loope
shll
je
scas
mov
popa
lcall
ja
or
jmp
dec
add
or
jnp
xchg
push
xlat
clc
repnz
rcrl
xchg
sub
cs
adc
aas
cs
push
mov
pushf
jle
test
repz
adc
int3
dec
stos
in
xchg
push
sbb
addr16
int3
shr
stc
sub
jl
push
out
mov
pop
pop
loop
sbb
sub
int
or
std
inc
out
daa
push
xchg
lods
sbb
push
pop
adc
bnd
jae
inc
dec
mov
cs
jb
int
jge
mov
jae
fwait
jecxz
mov
rorl
mov
jnp
xor
out
sbb
or
add
sub
movsb
xlat
push
insl
jle
push
test
sbb
cmp
pop
mov
fnstcw
in
xor
pop
adc
dec
in
dec
scas
les
inc
xchg
dec
ret
cltd
cmp
or
inc
ret
sbb
insl
out
mov
pop
inc
jecxz
fidivrl
push
test
jb
movsb
xor
inc
sub
ds
mov
in
aad
ds
jno
push
jbe
daa
xchg
icebp
push
mov
xlat
jg
sbb
mov
push
mov
add
testl
lea
fcmovu
daa
int
neg
inc
fistps
daa
je
adc
cld
adc
call
push
loop
pop
fs
mov
dec
adc
clc
inc
lea
push
sar
mov
das
add
mov
pop
je
pop
in
lcall
popa
lds
fisubrl
xor
mov
or
scas
and
jecxz
imul
gs
in
daa
mov
out
ret
dec
fsubs
sbb
dec
loop
push
sar
lcall
test
push
inc
setne
mov
loope
adcb
adc
aas
push
pop
cmp
lcall
sbb
mov
shrl
dec
xchg
stos
mov
add
fsubl
std
popa
and
mov
jmp
movsl
mov
cmp
outsb
dec
rorl
lods
loop
out
sbb
jns
pop
pop
rorl
push
out
mov
jl
sub
pusha
fwait
inc
inc
out
inc
test
xor
test
fnstenv
xlat
sub
fdivrs
lahf
insl
jae
and
aad
cwtl
jp
rcrl
out
push
outsb
mov
jl
pop
jno
rcrb
lock
aad
stos
popa
fiaddl
cs
push
es
pusha
add
mov
ljmp
lods
and
add
push
rcrl
push
jno
jp
add
adc
test
stos
into
cmc
lret
mov
std
inc
sbb
mov
ficoms
pop
ja
test
jl
or
add
mov
rcll
pop
mov
shlb
adc
hlt
jle
xchg
ds
inc
jmp
xlat
scas
lcall
push
loop
pop
jl
jb
sub
push
es
push
jmp
cmp
test
and
or
imul
adc
fdivr
fcomps
imul
jg
lods
sub
aad
and
rorb
adc
or
div
adc
cli
std
loope
xor
push
jmp
sub
cltd
xchg
dec
roll
pop
das
sarb
js
test
inc
jbe
jmp
loope
repnz
sub
pop
mov
scas
xchg
stos
sub
mov
fimuls
add
pushl
push
xor
jecxz
movsl
mov
jge
gs
fstps
mov
cmp
imul
out
rcrl
popa
pop
psrld
cmpsl
ljmp
sbb
fst
cs
xchg
and
sbb
pusha
mov
ret
leave
push
popa
mov
dec
or
jecxz
js
push
outsb
and
or
fadd
addr16
mov
cwtl
push
out
ljmp
sub
jg
mov
lods
scas
stos
and
jl
or
call
xlat
nop
into
sbb
pop
mov
add
pop
icebp
dec
imul
sub
jle
loopne
xchg
mov
not
jae
push
outsl
lods
sub
test
add
cs
ljmp
xchg
les
pop
je
ret
push
cld
les
stos
iret
add
test
neg
ds
test
daa
repnz
inc
or
inc
fnstsw
and
jb
pop
ds
cmp
repnz
outsl
xor
jnp
pop
mov
out
out
out
push
hlt
aam
je
push
cli
lahf
and
stc
mov
call
bnd
or
out
inc
daa
mov
push
jns
cmpsb
push
xor
jmp
pop
clc
lret
je
jno
test
or
mov
fnsave
push
push
fidivrs
lahf
sbb
sbb
xor
outsb
mov
adc
jp
mov
pop
inc
sarb
sub
das
or
mov
xor
test
sub
sbb
xor
insb
aaa
dec
aas
jl
movsl
loope
fimull
lea
sub
rol
bnd
es
int3
adc
jmp
pop
ret
adc
xchg
test
rep
add
mov
mov
xor
push
push
mov
in
ljmp
and
popa
push
cmp
aad
fnstcw
cmp
std
adc
xorb
mull
mov
mov
xchg
out
test
pop
pop
int3
add
and
mov
dec
or
sub
xchg
test
push
xchg
lds
xchg
mov
aaa
or
mov
out
int3
js
ja
mov
stos
xchg
stos
xchg
cmp
cmp
sahf
mov
inc
push
addb
inc
subl
pop
push
out
int3
fnstcw
lcall
xchg
inc
js
ds
and
jmp
into
in
dec
pop
shl
hlt
ss
repz
sub
pop
popf
add
push
lock
cmp
lods
mov
jb
mov
and
lock
orl
lret
push
call
outsl
jns
xchg
inc
dec
mov
xlat
pop
rcl
dec
or
nop
xor
dec
push
fcoms
xchg
out
xor
dec
jl
cmpsb
outsb
push
mov
pop
add
fimuls
xor
jecxz
mov
xchg
or
cmp
push
mov
and
mov
ja
push
test
leave
subb
aad
push
mov
rdpmc
push
mov
inc
daa
aam
shll
in
adc
sub
out
add
adc
mov
mov
or
xchg
mov
pop
popf
cltd
jg
jbe
inc
aaa
test
mov
adc
dec
in
addl
push
mov
leave
add
xor
pushf
shrl
call
fmul
pop
pop
inc
mov
mov
fucomi
sbb
das
in
loop
je
lret
bswap
and
xor
rol
jnp
mov
mov
test
cmp
bound
cmp
cld
mov
ret
lea
repnz
sahf
enter
mov
notl
test
sub
je
push
mov
push
cltd
or
inc
test
and
imul
scas
inc
movsb
mov
mov
insb
or
push
dec
adc
das
sbb
mov
rcll
adc
push
push
gs
cmp
imul
das
push
ret
sbb
mov
sahf
sarb
adc
lcall
testl
mov
gs
xchg
sti
stos
rorb
lods
mov
add
jmp
cmp
sbb
adc
lods
js
jbe
ljmp
outsl
ret
loopne
add
mov
popl
seta
scas
adc
adc
imul
pusha
andb
xchg
incb
ret
insl
pop
mov
gs
lds
mov
shlb
scas
loope
inc
or
push
mov
pop
cmovge
push
dec
pop
std
mov
pop
shll
mov
adc
call
cmpsl
xor
add
sub
or
push
push
test
dec
mov
add
std
out
and
fs
sbb
xchg
and
jge
pop
stc
pop
jge
sti
pop
outsb
push
pop
pop
daa
adc
xchg
out
push
aas
ret
lahf
pop
rcll
push
push
arpl
call
das
repnz
and
enterw
adc
arpl
and
imul
out
fs
add
fdivr
in
jmp
xchg
adc
dec
das
imul
fistpll
sub
cmpsb
xchg
lcall
dec
ret
aas
mov
mov
push
out
pop
mov
mov
mov
push
jge
push
jne
push
test
mov
mov
icebp
add
mov
inc
rcl
data16
inc
daa
xorl
mov
aad
xor
mov
xor
jbe
outsb
gs
cmc
push
xchg
pop
sahf
mov
fcmovnu
adc
addl
push
fcmovbe
add
or
in
sub
stc
cmp
inc
mov
subl
test
inc
mov
push
stc
das
add
add
sbb
mov
loope
movsb
ss
addr16
mov
cs
loop
loope
adc
push
sti
push
scas
xor
mov
or
mov
xor
je
out
test
ljmp
mov
mov
ss
pop
mov
scas
scas
inc
cld
leave
out
xchg
leave
adc
repz
add
lcall
sbb
ret
movsb
enter
or
cmp
movsb
adc
push
lret
push
pusha
cs
sub
jno
mov
and
lret
inc
call
mov
insb
xchg
rcrb
and
xchg
cmp
lret
xchg
and
daa
dec
cmp
jle
cli
mov
jecxz
sti
stos
gs
sahf
in
inc
pusha
pop
sub
mov
sahf
pop
mov
nop
lds
es
dec
outsb
mov
xchg
mov
cmp
ljmp
aaa
popf
call
or
jnp
into
jb
shrb
je
mov
push
cli
mov
inc
std
mov
or
fistps
out
fs
ds
mov
adc
sub
gs
lret
push
loopne
dec
bound
iret
pop
pop
push
imul
jb
push
std
mov
pusha
pusha
repz
inc
notb
rcl
jge
mov
sahf
cltd
pop
ljmp
push
lcall
mov
xor
pop
mov
xor
pop
adc
outsb
stc
mov
or
pushf
fldt
mov
xor
mov
movsl
pop
jecxz
sbb
sti
xchg
or
or
cmp
adc
lret
outsb
inc
pop
inc
push
add
mov
out
dec
xor
pop
aas
lds
jns
add
cmp
dec
scas
sub
es
sbb
out
xor
outsb
in
xor
bound
push
rcr
imul
jne
jnp
and
leave
jnp
or
mov
cld
insb
aas
mov
std
push
xchg
jne
addr16
jno
lds
ds
pop
fwait
aad
lcall
jmp
int3
scas
adc
fisubl
sub
adc
std
cmpsl
sub
jecxz
jnp
ret
mov
push
pop
pop
inc
sub
iret
add
stc
dec
mov
pop
push
xchg
mov
insb
pop
push
sub
xor
enter
mov
mov
pop
xchg
fsubrs
mov
xchg
cs
mov
lea
insl
xor
push
fldcw
and
sub
xor
int
cmp
xchg
mov
fsubl
enter
hlt
inc
xor
xchg
fstps
ds
jecxz
sarl
aam
and
sarb
push
je
das
sub
add
mov
mov
push
pushf
inc
icebp
dec
adc
repnz
and
hlt
jecxz
pop
mov
outsl
pushf
outsl
int3
add
fsub
xor
or
xchg
in
in
push
lods
pop
cmp
stos
mov
imul
adc
fwait
in
inc
adc
mov
outsl
cli
xor
sub
fisubrl
movsb
call
addr16
mov
test
adc
xchg
ss
aaa
fildl
shll
mov
les
cmc
aam
sti
push
sub
pop
sbb
fisttpl
aaa
push
mov
pop
jae
loopne
jge
jnp
adc
pop
push
in
rcll
mov
mov
jge
es
loopne
pop
jp
mov
call
out
sub
push
aas
movsb
mov
mov
sub
pop
outsl
lret
cwtl
das
icebp
ss
xor
mov
mov
and
xor
push
dec
sbb
or
and
je
leave
vcmpps
inc
mov
adc
cmp
shll
xor
or
loopne
loopne
mov
add
addr16
stc
ljmp
pop
cmp
dec
aaa
sub
ret
in
fstp
mov
stos
and
jne
mov
add
dec
inc
pop
dec
stos
or
add
jns
cli
mov
jg
aas
rorl
xor
and
addr16
mov
xchg
in
cvttps2pi
rcrl
pop
insl
dec
mul
lds
mov
cmp
sub
adc
std
cmp
jp
das
pushf
or
insl
out
das
pop
jg
or
int3
imul
outsl
in
dec
push
pop
iret
leave
mov
nop
cwtd
push
xchg
fistpll
notl
hlt
out
lret
lock
mov
cmpsb
sbb
cmpsb
jno
adc
test
rolb
gs
dec
mov
inc
add
adc
adc
loop
pop
xor
push
fwait
scas
xchg
mov
andb
gs
adc
xchg
xchg
mov
out
das
dec
inc
int
dec
sbb
jp
pop
cmc
mov
adc
push
cmp
mov
xor
xor
fstps
or
daa
fsubrs
std
jl
mov
daa
stc
push
fildl
dec
inc
pop
jg
jo
in
add
jecxz
test
gs
cmc
xchg
cmc
jns
cs
pushl
insb
repz
in
sbb
adc
divb
add
int3
or
loopne
cmp
es
add
aad
lahf
jb,pt
inc
xchg
scas
movsb
push
jne
jae
mov
sti
fs
jecxz
rolb
adc
out
ror
mov
add
jg
jbe
mov
jp
loop
sbb
and
dec
xchg
xor
insl
fst
icebp
loope
jne
and
push
push
inc
add
cmp
mov
inc
sbb
bound
xlat
push
xor
dec
sbb
jb
mov
sbb
pop
leave
pop
cmp
lret
xor
add
jo
nop
pusha
iret
inc
js
mov
mov
and
lret
push
mov
adc
loop
loop
add
mov
inc
mov
jae
add
pop
and
je
jne
xchg
xlat
cmp
test
mov
rorl
cmc
xlat
dec
dec
mov
pusha
cli
mov
daa
aaa
test
xchg
and
outsb
or
ret
jecxz
std
ss
addl
adc
stos
cmp
test
dec
sub
cmpsl
push
pop
jne
mov
int3
jecxz
jmp
mov
jge
dec
jle
test
xor
inc
std
xor
jge
aaa
mov
out
dec
and
arpl
xchg
mov
inc
sub
push
push
sbb
or
adc
pushf
xchg
lfs
dec
and
repnz
sub
add
aaa
cmp
mov
inc
and
outsl
mov
test
jae
js
idivl
push
jnp
mov
das
jg
mov
scas
push
xchg
popf
jp
aad
cli
jle
sbb
add
add
xor
push
jo
jge
xchg
gs
cmp
movsb
jb
sub
cmc
xor
mov
js
dec
ficoms
xchg
push
adc
and
pop
in
push
lods
jno
shl
sub
popa
pop
rorb
test
clc
xchg
sbb
fwait
mov
or
mov
fcompl
mov
cwtl
fnstcw
jnp
dec
add
popl
test
ret
push
sahf
sbb
ret
or
rorb
sbb
clc
sti
add
mov
dec
xchg
jp
je
fmul
and
popf
rcll
or
aam
das
aad
test
xchg
mov
pop
outsl
leave
sub
add
test
and
mov
adc
mov
sti
fs
mov
inc
and
jmp
or
cmp
or
jecxz
mov
lret
ljmp
pop
imul
clc
sbbl
dec
pop
scas
or
and
lods
xchg
push
pop
push
test
adc
pop
pop
stos
inc
fistps
xchg
in
div
push
mov
pop
sbb
jo
movsb
stos
out
xchg
xchg
mov
lea
and
aad
test
cmp
dec
adcl
fistpll
sub
decb
inc
inc
ret
dec
ds
mov
mov
jge
xchg
xchg
push
mov
or
cld
jb
jnp
mov
pop
cmp
aad
jne
aad
pop
fcompl
cmp
shl
sbb
cmp
xchg
add
and
pop
out
sbb
sti
mov
testb
stos
lds
mov
mov
mov
cli
imul
pop
sub
fdiv
cmp
mov
xchg
push
repnz
out
mov
mov
and
push
adc
lock
push
in
mov
in
scas
scas
outsl
or
jo
mov
fildl
jmp
mov
test
and
rcrl
dec
pop
stos
add
cmp
int
dec
adc
test
mov
or
test
sbb
push
clc
fnstsw
mov
ds
sahf
push
pop
outsl
mov
add
fs
inc
cmp
push
popa
inc
mov
pop
pop
cs
xlat
xchg
mov
xlat
push
aas
cmp
jb
movsb
inc
add
data16
imul
ljmp
adc
add
mov
repz
and
pusha
jbe
test
push
jnp
jg
lret
int
xchg
out
add
push
inc
xor
ja
test
add
xchg
mov
push
lahf
pop
add
roll
ret
sbbl
sub
leave
pop
and
outsb
aad
sub
dec
daa
rcrb
cli
add
rclb
fs
pop
jge
jp
lock
or
clc
mov
and
sub
pop
or
cld
or
jp
adc
and
test
cmp
dec
shll
scas
jne
das
addr16
mov
ds
mov
nop
mov
add
sub
pop
sbb
pop
sbb
loope
fadds
jle
push
mov
inc
xchg
pop
arpl
testl
inc
cmpb
jne
mov
adc
dec
adc
xchg
sti
sub
push
jae
jge
aam
mov
std
sub
mov
ds
movsb
rolb
insl
movsl
or
scas
dec
mov
not
arpl
aaa
popa
ret
jecxz
cmpsl
jmp
faddl
add
xchg
out
adc
stc
xor
mov
xor
dec
mov
dec
push
lods
fsubrs
mov
pop
data16
subb
leave
cli
cmpb
mov
push
cmp
mov
mov
mov
cmpsb
cmp
sub
ja
mov
push
push
imul
mul
cmp
dec
add
lcall
pop
inc
or
bound
or
xchg
mov
and
clc
jmp
leave
aam
cmp
movsl
fcompl
mov
xor
xor
iret
xorb
sti
jle
mov
sub
int
and
cs
and
xlat
mov
cmp
pushf
int3
int3
cmpsl
dec
stc
inc
sbb
jb
mov
push
sbbl
pop
lods
loopne
sub
lret
jne
pop
jge
pop
mov
mov
mov
test
push
mov
movb
mov
cs
jg
adc
dec
movsl
pop
mov
movsl
lock
insl
dec
mov
in
stc
mov
jp
les
scas
sub
mov
pop
and
mov
cmpsb
clc
aaa
jg
dec
mov
mov
dec
decb
pop
orb
movsb
idivb
test
and
ja
pop
jmp
les
movsb
dec
and
pop
push
xchg
mov
mov
cmpsl
inc
decb
call
push
ret
pop
add
jae
dec
dec
dec
lahf
mov
pop
mov
stos
inc
mov
mov
incl
xor
andb
cwtl
aas
lock
jecxz
push
les
fwait
jo
adc
push
fcompl
fildl
fisttps
jbe
fcmovnu
or
push
push
xor
mov
popa
clc
jge
sub
movsb
adc
loop
and
inc
fildll
cmp
ljmp
jae
cld
imul
push
shrl
ljmp
aas
shlb
inc
ret
sbb
cmpsl
sti
jge
into
dec
pop
idivl
mov
cwtl
aaa
cmp
jle
outsb
dec
cwtl
subb
fcmove
cmc
inc
push
mov
mov
push
mov
push
jle
jae
cmp
popa
inc
out
lret
jge
ret
enter
or
mov
repnz
or
out
sbb
lods
aad
ret
es
addr16
ret
jmp
xor
repnz
mov
mul
push
push
shlb
ja
in
in
cmp
popa
add
push
dec
scas
and
xchg
mov
pusha
dec
dec
daa
sbb
sbb
cs
es
push
mov
mov
pop
push
mov
inc
daa
add
std
lahf
ror
mov
jne
inc
lock
cmp
ds
je
adc
jno
jg
sub
jge
leave
sbb
repz
xor
mov
mov
inc
aas
mov
inc
pop
jmp
inc
mov
sub
mov
test
adc
pop
push
bound
inc
push
push
mov
lahf
cmp
dec
inc
jmp
scas
jnp
shll
out
mov
das
xor
sahf
add
mov
ret
fs
cmp
gs
jmp
adc
xor
sbb
cmc
pop
push
mov
dec
jp
mov
aas
jl
cmpsb
xchg
inc
pop
mov
sub
and
mov
aam
mov
ds
insl
int3
sbb
mov
aam
cmp
push
lods
or
inc
les
xor
or
cmp
cld
movsl
out
aad
insb
mov
sbb
rcrb
adc
sub
cmpsb
pop
push
ret
dec
aad
dec
xchg
mov
xrelease
std
cltd
xchg
in
mov
xor
jg
sbb
dec
nop
pop
xlat
mov
imul
pop
test
jle
sub
push
sub
scas
jo
pop
cmpsl
icebp
inc
test
jge
pop
movsl
lea
jge
lss
lods
adc
jmp
test
mov
inc
test
or
das
mov
jge
jmp
repz
jp
xor
jp
jle
je
adc
sbb
push
xor
mov
int3
sub
jp
and
mov
call
or
insl
lds
xchg
jl
enter
adc
jne
dec
pop
cmp
rcrb
mov
xor
bound
sarb
mov
std
in
cs
push
and
mov
aaa
jmp
insb
inc
daa
fwait
stc
sub
pop
jmp
jo
out
sbb
jo
mov
mov
cmp
jecxz
lret
imul
je
dec
lods
in
leave
int3
fisubl
inc
sbb
inc
or
jge
and
je
fstps
inc
mov
dec
xchg
adc
and
pop
push
pop
push
jp
sub
mov
mov
mov
ret
mov
mov
mov
pop
test
xchg
test
jmp
fsubl
and
mov
mov
in
test
into
lea
repz
icebp
subb
out
andb
xor
leave
dec
ss
mov
add
enter
dec
xchg
gs
cwtl
add
xchg
sub
push
sbb
icebp
pop
mov
sub
fimuls
sbb
inc
inc
cld
or
dec
enter
scas
inc
lea
inc
cmc
cmp
sbbb
and
fstps
add
inc
call
mov
and
mov
add
sub
and
jle
jl
xor
in
mov
lods
inc
sub
mov
outsb
jnp
sbbb
or
in
inc
sub
jns
xchg
pop
dec
cli
fnstcw
dec
push
pop
enter
inc
lods
lods
daa
mov
mov
fdivs
jbe
mov
add
loopne
mov
adc
mov
fwait
out
nop
fs
out
pop
sub
cmp
adc
outsl
mov
les
jl
movsb
xor
fwait
out
xor
cmp
movsl
mov
iret
rcll
gs
loope
cs
sbb
inc
xchg
add
enter
movsb
into
push
sbb
xor
sbb
mov
mov
cmpsl
lret
nop
mov
sarl
aaa
lods
mov
push
lahf
lods
imul
repz
cmp
or
jae
lods
outsl
dec
xor
ljmp
cmp
adc
pop
filds
sbb
lahf
mov
jne
dec
xchg
add
pushl
jmp
or
sqrtps
fwait
xor
inc
scas
xor
xchg
lods
pushfw
xor
xor
rorl
mov
out
mov
mov
jmp
mov
mov
jns
shl
fidivs
sbb
movsb
lods
mov
cli
call
int
stc
leave
mov
jge
add
jne
lods
pop
xor
cmovo
xor
cmp
adc
movsl
xor
or
mov
aas
iret
add
dec
ret
and
mov
fcmovne
leave
sbb
xchg
jmp
xchg
out
mov
test
stos
cld
orb
ss
inc
xchg
call
add
pop
mov
mov
push
xchg
inc
dec
or
in
jecxz
in
dec
mov
sbb
sub
push
cmp
aas
jne
pop
jge
out
leave
js
push
cwtl
sbbb
imul
mov
imul
into
jle
lea
push
jo
sub
sbb
xor
fucom
mov
jge,pn
scas
imulb
fdivr
les
ret
xchg
stos
mov
cmp
add
dec
test
sti
mov
add
push
jle
mov
add
arpl
jge
pop
mov
mov
jmp
jl
fldcw
jno
cmp
hlt
loope
jno
fisubrl
or
js
arpl
pop
jbe
jecxz
cli
popf
push
dec
scas
inc
push
hlt
mov
js
ret
push
xorl
outsl
inc
pop
and
negl
out
lahf
aad
mov
daa
inc
jbe
mov
pop
lds
xor
insb
dec
sub
xor
mulb
xchg
jecxz
orb
fs
push
arpl
xchg
xchg
mov
repz
add
lods
sub
lahf
push
sub
xchg
push
ja
jae
mov
arpl
mov
clc
in
icebp
rolb
inc
repz
sub
addr16
mov
jp
std
xor
in
dec
inc
movsl
push
adc
lods
jne
int3
incb
lcall
xchg
daa
and
jae
adc
ds
imul
test
mov
jae
lret
les
sub
enter
fwait
sub
jecxz
jmp
pushf
pop
jo
enter
pop
das
loope
jb
sbb
insb
jge
xor
in
ds
mov
ds
ss
add
stc
pop
dec
xchg
push
nop
das
fcompl
cmc
shl
mov
fsubr
pusha
pop
xor
scas
in
scas
or
imul
movsl
or
dec
lret
bound
imul
and
xchg
jg
sub
mov
out
cmpsb
into
mov
cmp
aam
mov
jnp
mov
ljmp
in
jae
xchg
stc
rcrb
push
repnz
stos
mov
outsb
rorl
push
daa
lock
or
ja
jge
sub
xlat
cs
daa
and
and
jle
jl
jb
and
pop
xchg
ja
cmp
inc
pushf
stos
rcll
dec
mov
mov
test
push
jbe
adc
stc
mov
inc
loopne
push
shll
mov
mov
adc
rclb
add
in
popf
lret
xchg
adc
xchg
loope
pop
mov
rclb
xor
rclb
xor
xchg
push
scas
subb
iret
adc
aad
jg
js
xchg
jmp
mov
adc
pusha
and
stos
cmp
pop
xor
push
xor
mov
push
mov
stos
int3
sub
loop
cmp
pop
sbb
mov
and
adc
sbb
test
sbb
outsl
addr16
sbb
sbb
cwtl
movsb
xlat
sahf
ret
push
mov
sub
outsb
mov
lods
fsubs
xlat
dec
fidivs
add
inc
mov
aaa
daa
jbe
add
fwait
sub
push
repz
mov
mov
xchg
xor
mov
cld
cmp
sbb
jmp
jge
xor
push
push
stos
pop
fidivrs
ja
dec
sub
dec
inc
add
negb
cltd
inc
sahf
mov
sti
pop
test
cmpsb
jo
mov
sti
sbb
mov
loopne
ds
xchg
lock
or
push
out
dec
cmp
inc
and
pop
nop
xorb
mov
in
mov
mov
idiv
xor
mov
dec
test
push
mov
xor
pcmpgtb
arpl
int3
xchg
push
cli
mov
daa
lea
sub
outsl
inc
scas
loopne
xchg
stos
mov
mov
stos
pusha
pop
enter
jp
mov
stc
mov
pop
inc
je
jb
push
in
cmc
jecxz
mov
dec
mov
outsl
jecxz
mov
cmp
xor
fbld
icebp
mov
or
les
mov
mov
jae
or
mov
xor
xchg
loope
xor
stos
ret
rcrb
xchg
in
sub
lock
cmp
add
xchg
mov
mov
es
sub
shrb
iret
adc
sbb
insb
jl
xor
jno
sti
testl
jne
mov
test
int3
sbb
mov
repnz
into
pop
and
ljmp
lods
cmp
aas
cmp
cwtl
sbb
out
xchg
mov
mull
cli
out
int3
stc
cmpb
leave
and
mov
mov
inc
jmp
mov
orb
lret
stc
xchg
adc
xchg
dec
jecxz
sub
ss
je
push
pop
jnp
sbb
int
aad
sbb
push
rclb
std
pop
mov
out
dec
out
pop
scas
push
aam
adc
pusha
aas
cmpps
sub
sub
iret
cmp
mov
pop
repnz
xorb
rolb
aas
fs
cltd
rcll
stc
leave
xchg
roll
push
into
jg
jns
fildll
or
idiv
gs
je
cmp
cmp
aad
push
push
out
rorl
cmp
sti
pop
push
push
lret
xor
jge
jp
ror
mov
test
cmp
push
mov
jno
enter
sbb
inc
and
fnstcw
jns
dec
jne
pop
mov
cmp
adc
pop
mov
adc
cmp
cmp
sub
fwait
xor
pop
adc
mov
mov
add
icebp
lcall
mov
lret
push
rorl
js
sbb
sbb
insl
push
xchg
jae
in
stos
jle
aas
mov
push
imul
jno
inc
push
push
sub
fcoms
and
ret
xor
push
es
adc
dec
mov
sbb
mov
dec
inc
cmp
sbb
into
lock
or
inc
rolb
xchg
repz
mov
pushw
mov
adc
movsb
or
xchg
push
test
imul
add
mov
dec
enter
nop
stc
clc
dec
mov
dec
jo
lcall
or
push
sub
mov
mov
inc
pusha
jnp
stos
test
cmp
mov
pop
dec
rcll
xor
cmpsl
rorb
cmp
mov
rolb
dec
sub
dec
inc
lret
inc
pop
jae
fimull
xor
mov
jg
mov
and
xchg
push
mov
in
fsubs
ficomps
or
mov
and
inc
dec
mov
cld
dec
pop
lods
fs
loope
push
cmp
and
lods
cmpsb
mov
ret
mov
testb
adc
mov
pusha
jo
pop
rcll
cmpsb
inc
inc
inc
push
in
jbe
mov
daa
inc
sub
cs
inc
in
or
pop
roll
fimull
mov
fisttps
sbb
mov
lock
js
mov
pop
insb
outsl
cmp
out
mov
sarb
shll
nop
out
push
mov
xchg
adc
add
aad
dec
scas
and
dec
test
mov
push
popf
mov
adc
rolb
stos
jp
mov
mov
pop
or
ret
stos
inc
in
notl
mov
mov
cltd
loop
jmp
sub
out
push
xchg
imul
loopne
push
bswap
mov
push
inc
call
fimull
faddl
xchg
leave
test
test
nop
sar
mov
sub
jl
mov
subb
fstpt
sub
fisubrl
push
jmp
rorb
adc
cmc
dec
xchg
sbb
mov
dec
test
jno
add
lret
jae
push
push
push
loop
inc
add
mov
fwait
push
sahf
or
fiaddl
mov
xor
mov
and
imul
mov
popa
addr16
mov
in
and
pop
scas
nop
into
push
mov
xor
icebp
lds
and
inc
movsl
pusha
adc
scas
fcoml
dec
pop
sbb
mov
fsubp
cmp
push
xor
aam
int3
adc
insb
sbb
fisttpl
sti
or
andb
xchg
pop
cmp
stos
jmp
roll
push
cmp
enter
fimull
and
jle
mov
xor
sbb
scas
pop
movsb
roll
cwtl
in
pop
ret
inc
cmpsb
jp
mov
divb
or
sbb
addl
jno
mov
into
mov
push
shlb
inc
pop
loop
jge
setb
jns
ds
or
repnz
daa
mov
in
mov
enter
adc
into
xchg
xor
xchg
mov
jecxz
push
or
loop
cmp
jne
or
mov
daa
add
push
mov
pushf
and
out
hlt
jle
mov
mov
cltd
cli
push
mov
in
dec
loop
mov
in
das
mov
insb
jb
mov
sahf
fwait
sbbb
test
sub
push
or
or
daa
xchg
cli
xor
mov
xchg
mov
fwait
ds
ds
xor
fbstp
xchg
aam
xor
inc
xchg
push
mov
sub
xor
aad
xchg
mov
pop
cmpsb
mov
xchg
cmp
xchg
xchg
adc
xchg
scas
add
xlat
and
mov
sub
inc
inc
repnz
test
dec
int3
add
push
inc
cltd
andb
fcoms
lods
movsl
jne
pushf
cmpsb
int3
jle
add
xor
or
pop
lods
jb
loop
pop
cli
and
sbb
lods
lahf
push
jno
outsl
xor
pushf
sub
mov
mov
mov
xor
jno
xchg
or
lock
adc
test
into
cmp
imul
and
push
dec
out
test
push
push
mov
xchg
mov
les
push
add
test
lea
cmp
movsb
mov
push
cli
push
jmp
push
insb
insl
pop
ss
cmpsb
cmovp
lcall
xchg
mov
insl
jecxz
rorb
ja
mov
shl
mov
or
test
mov
push
xchg
negl
dec
cmp
cmpb
ljmp
pop
pop
sbb
mov
fildll
lcall
ds
push
cmp
gs
xor
stos
shlb
and
fwait
xor
push
pop
cmp
mov
iret
arpl
xchg
pop
in
lret
call
xchg
divb
out
push
jmp
dec
test
movsl
adc
cli
push
cmp
test
in
jb
sbb
xor
rorb
or
xlat
js
mov
pop
cs
imull
lods
enter
loopne
dec
adc
add
dec
dec
xor
jp
or
daa
mov
pop
popa
icebp
in
out
in
loop
movsl
xchg
or
sbb
insb
mov
je
sub
arpl
in
and
cmp
jae
inc
scas
sub
ljmp
popa
scas
test
sahf
xchg
xor
cli
or
stos
js
out
shr
int
in
gs
cmpsl
popf
int3
outsb
push
cld
mov
jb
adc
es
les
imul
cmp
cld
rcrb
fisubl
push
fwait
out
cld
jae
jmp
mov
dec
add
negl
mov
stc
pop
pop
pop
xor
jl
pop
adc
jno
rcrl
xchg
int3
mov
adcl
pop
popf
in
jne
xchg
pop
inc
cmp
icebp
or
popf
add
enter
cli
mov
adc
lock
in
enter
jb
add
mov
mov
mov
and
add
xor
pop
xor
or
pop
lock
subb
mov
inc
stos
aad
xor
cmpsb
and
inc
aaa
std
cmpsb
shlb
jo
lcall
push
movsb
jmp
cmp
pop
xor
repz
sbb
das
cmp
cmp
imul
orb
or
jle
ss
cmc
in
xchg
in
insb
and
ljmp
pop
mov
mov
adc
sub
aam
fwait
xchg
subl
push
ret
dec
xchg
xchg
mov
lods
mov
cmp
loope
lret
dec
mov
and
or
mov
into
dec
xor
jne
mov
dec
or
clc
xor
mov
aad
add
shll
adc
mov
clc
mov
cmc
movsb
es
movsb
pusha
leave
aam
dec
jae
fldenv
mov
scas
cwtl
push
repnz
lock
mov
fnsave
int
or
adc
xchg
in
das
mov
jmp
lock
imul
lock
lcall
out
es
mov
cmc
call
arpl
xor
cmpsb
ror
hlt
test
popa
add
clc
scas
test
jns
add
jmp
fwait
int
jge
push
shlb
or
xchg
xor
jg
out
push
cmc
test
dec
inc
std
push
dec
test
repnz
jl
js
push
mov
aaa
rcl
push
mov
jl
js
shlb
leave
mov
mov
push
popa
xor
pop
mov
dec
shl
lds
or
sbb
pop
sbb
mov
jecxz
sub
xchg
leave
ljmp
in
sbb
push
pop
sub
sbb
xor
push
add
sub
imul
ret
pop
lcall
out
cwtl
cmp
xor
dec
cmpsb
adc
lret
and
fidivrl
jns
imul
into
xchg
in
das
push
sbb
or
repnz
insb
popa
stc
scas
xor
lock
xor
jge
cli
xor
mov
test
xor
subb
xchg
pop
in
cwtl
sbb
jp
xchg
je,pt
mov
das
ds
dec
pop
pop
xlat
pusha
xor
std
inc
scas
cmpl
lcall
test
das
imul
sbb
popf
scas
inc
cmp
es
push
loop
fs
leave
loope
std
pop
adc
in
dec
cltd
inc
pop
lcall
push
cmp
in
pop
sti
mov
lods
iret
xor
cmp
add
dec
push
xor
cmp
jae
test
mov
add
mov
push
push
mov
and
das
pop
add
das
lret
mov
shlb
inc
addr16
out
dec
in
adc
or
or
dec
push
jb
push
sub
out
jmp
jnp
mov
sbb
mov
mov
jle
xchg
ja
scas
jp
xor
loop
in
pushf
leave
adc
shlb
js
bound
mov
mov
cld
mov
ss
pop
push
dec
or
jmp
aaa
int3
je
sbb
lret
cmp
fsubr
jnp
xchg
mov
roll
and
mov
test
idivl
mov
leave
popa
daa
adc
add
add
pop
xor
int3
in
xchg
daa
xlat
pop
or
xchg
out
imul
arpl
or
outsl
hlt
jno
dec
addr16
std
xor
stos
fbstp
outsl
add
aam
xor
imul
and
test
out
cmpsl
cwtl
nop
fdivl
lods
jns
outsl
xchg
dec
int
popf
icebp
mov
sbb
filds
aad
shll
iret
mov
inc
loop
inc
out
xchg
clc
popa
aad
sti
shll
int
push
cwtl
push
and
jmp
faddl
popa
fidivl
bound
ja
aas
cltd
loopne
adc
cmp
push
xchg
movb
sbb
or
cli
adc
and
add
cmp
outsl
jg
fs
loope
enter
pusha
fsubl
aas
jbe
add
stos
xchg
insb
sbb
lret
mov
cwtl
sbb
out
leave
rclb
add
call
lret
sbb
sbb
icebp
ds
jnp
ljmp
sub
cmp
xor
cmpsl
xor
xor
lret
fidivrl
inc
jns
inc
sbb
push
or
ljmp
call
inc
adc
mov
dec
mov
mov
mov
ret
hlt
push
cmp
cmc
mov
push
ss
cmp
xor
fsubr
mov
xchg
inc
mov
iret
into
jge
inc
rcrb
fbstp
std
addl
adcl
ss
jecxz
add
imul
stos
test
sub
jmp
repz
movsb
lcall
pop
or
adc
cmc
hlt
and
sbb
sub
adc
mov
outsb
push
sbb
aas
push
xor
ss
inc
roll
xchg
or
sub
push
sub
jo
sub
mov
into
sub
inc
arpl
fsubs
push
adc
pop
mov
jbe
rorb
int
xchg
insl
je
ret
cmp
pusha
mov
shlb
mov
xor
pop
fwait
out
fiadds
fstps
xchg
out
sub
shl
pop
inc
push
cli
test
dec
xchg
ret
test
leave
in
stc
mov
lods
sub
sub
mulb
pop
adc
push
sti
sub
ficompl
repz
inc
pop
sbb
imul
and
mov
fildll
cld
push
sub
cmp
mov
xor
push
fisttpl
inc
in
xlat
adc
lret
repz
or
push
mov
lret
jg
inc
into
daa
mov
jns
or
add
enter
out
int
vpcmpgtd
and
cmpb
lods
fwait
shlb
daa
int
into
add
movsb
push
or
dec
imul
ret
sti
and
repnz
outsl
xor
ficoms
inc
dec
sbb
movsl
loopne
mov
insl
bound
cwtl
in
mov
pop
pop
aaa
sbb
shrb
and
lods
es
mov
and
mov
and
cmpsl
push
cmp
xchg
sahf
and
faddl
call
sub
cld
out
out
dec
icebp
out
xlat
jge,pt
jle
or
and
popa
and
mov
push
or
imul
xor
les
push
xchg
mov
adc
scas
insb
scas
jg
mov
push
xlat
mov
pop
push
scas
mov
xlat
inc
lds
pop
sarl
leave
mov
jmp
incb
push
sub
mov
jb,pn
jnp
push
jne
mov
inc
cmp
scas
nopl
hlt
insb
shlb
push
jno
pop
sub
arpl
xchg
cmpsl
loopne
xchg
bound
roll
inc
pop
inc
add
bound
mov
imul
cwtl
fdivrl
cld
into
adc
adc
jg
mov
jmp
push
push
nop
nop
xchg
das
adc
ds
adc
push
mov
loop
hlt
xor
jg
in
into
jle
mov
sahf
rcrb
or
dec
xor
test
lea
adc
dec
dec
adc
push
xor
xchg
testl
inc
dec
je
andl
nop
sbb
notb
sbbl
stc
push
lcall
fimuls
imull
or
fwait
dec
jp,pn
ljmp
fwait
into
out
inc
jnp,pn
shrb
das
and
mov
jae
stos
pop
daa
mov
mov
aaa
dec
pop
repz
sub
sub
fs
imul
incb
mov
sbb
mov
ja
xor
dec
pop
mov
cmpsl
mov
mov
and
jb
outsb
or
push
pop
jb
pop
rclb
cmp
stos
cmpsl
jp
xor
pop
lcall
hlt
ja
sahf
leave
cmp
cmc
xorl
sbb
and
mov
out
lock
xchg
mov
xchg
mov
in
stos
push
in
mov
ljmp
pop
sub
xchg
or
pop
aas
dec
leave
pop
icebp
jno
dec
loopne
lods
push
mov
dec
vpshufhw
dec
dec
cmp
popl
leave
sub
sti
mov
pop
mov
mov
sbb
popa
xor
cmp
inc
popa
cmp
adc
sbb
mov
out
aam
xchg
popf
pop
fisubrl
and
movsb
dec
adc
subl
sub
stc
fistps
jl
mov
pop
mov
rolb
add
mov
fnstenv
jno
mov
repz
lods
inc
out
jns
pop
lea
cmp
pmuludq
out
add
int3
lcall
dec
test
lret
or
inc
dec
xchg
xor
mov
cltd
xor
sbb
loop
or
ret
or
mov
push
xchg
or
int
xchg
jge
mov
xor
pusha
xor
mov
incb
imul
and
lret
push
and
mov
mov
arpl
sbb
add
in
mov
pop
cmpb
or
sub
mov
dec
xor
cmp
xlat
shrl
jne
inc
test
xchg
inc
js
insb
jb
adc
aas
js
bound
xor
mov
mov
sub
ficoms
sub
sbb
mov
std
out
ss
pop
test
and
dec
repnz
loope
mov
adcb
inc
push
xor
into
jl
outsl
insb
mov
call
es
jmp
push
outsl
sti
clc
test
test
ds
mov
pop
aas
ret
or
fisttpll
lods
mov
mov
jge
push
cmp
adc
jnp
ja
jb
jp
orl
mov
sub
xchg
bound
in
ljmp
test
mov
dec
pop
outsb
cli
movsb
jne
into
mov
pop
jb
repz
mov
push
adc
sub
and
ficomps
mov
xchg
loope
add
nop
jae
sbb
imul
xlat
inc
push
cmpsl
adc
in
gs
push
push
mov
xchg
adc
add
push
iret
out
xchg
inc
xchg
es
jbe
dec
push
cmpb
add
lods
and
push
les
xchg
aad
shrl
ja
sbb
lock
and
scas
int3
add
push
lcall
not
ljmp
and
xlat
in
loopne
or
cmp
pushf
jecxz
dec
pop
hlt
into
mov
push
xchg
clc
jb
es
pop
add
mov
xchg
subb
xor
pushf
cltd
mov
loope
rcrb
cli
repnz
add
adc
inc
pop
test
test
clc
dec
xchg
ss
push
or
sbb
nop
mov
mov
fcompp
stos
sbb
push
push
rcll
xorb
fcomip
push
call
mov
jns
pop
xchg
mov
jae
scas
mov
sbb
or
cmp
dec
cs
out
sub
add
test
iret
mov
shrb
js
add
pushf
jb
and
add
push
out
fsubr
dec
push
xlat
fidivs
xchg
aam
cmp
int
mov
xor
lcall
les
fsubp
pop
add
movsl
sbb
mov
je
mov
cs
xchg
push
fmul
mov
mov
popf
stos
scas
adc
scas
leave
and
test
int
xor
add
ljmp
dec
test
ja
xchg
test
es
jne
add
cmp
lods
xchg
fisubs
fstpt
push
arpl
loope
sbb
in
xchg
fs
xor
out
loop
pop
out
mov
push
sbb
cwtl
sarb
aad
sub
gs
jle
push
jno
inc
inc
pushf
jne
leave
xchg
fcompl
lds
push
imul
jo
jbe
adc
mov
outsb
jae
stos
data16
inc
pop
das
add
cs
sub
jnp
ljmp
lahf
mov
add
iret
jno
outsb
push
test
pushf
icebp
pop
adc
aaa
or
movsl
xor
jge
mov
cmpsl
sti
sbb
mov
mov
sbb
and
jnp
dec
and
frndint
xor
cmp
mov
imul
lret
inc
out
fidivl
bound
or
aad
inc
xor
inc
cld
mov
lret
stc
mov
stos
shl
orl
cltd
push
in
ja
ret
mov
shll
push
adc
sub
sub
sbb
test
xor
jne
mov
test
aaa
mov
cmp
lret
jb
xor
or
xchg
nop
repz
xchg
adc
in
mov
divps
enter
mov
sbb
dec
leave
mov
inc
dec
or
adc
push
push
inc
incl
pop
push
jle
rorb
xchg
sub
test
mov
iret
jnp
aas
addr16
addr16
jmp
movsl
jle
push
xlat
or
add
jp
fisubl
jmp
pop
xchg
lret
push
stc
je
insb
mov
sahf
dec
add
push
fwait
loopne
sub
arpl
imul
dec
cmp
or
cli
sub
lahf
push
xchg
int
and
std
ret
movsb
out
mov
pause
dec
ljmp
xchg
add
mov
mov
mov
repz
xchg
sub
sub
sti
es
frstor
add
shrb
inc
inc
dec
aam
sbb
aaa
in
ret
push
inc
sti
addl
pushf
sub
xchg
sahf
pop
mov
cld
add
fnstsw
jns
sarl
xchg
mov
jmp
std
repnz
xchg
xor
andb
sub
insl
scas
sbb
lret
xchg
mov
and
sub
xchg
or
jecxz
cmc
add
sbb
inc
es
addl
pop
mov
inc
pushf
iret
pop
mov
sbb
pop
mov
push
iret
imul
rcrl
scas
mov
adc
sub
in
adc
clc
hlt
xor
mov
sti
movl
cmp
push
xchg
sbb
testb
aam
outsl
mov
push
mov
loopne
inc
pop
mov
mov
jecxz
lret
inc
pop
jno
lea
adc
ljmp
mov
cmp
cmp
add
or
cld
add
adc
push
push
or
lock
imul
add
fwait
and
test
push
mov
movntps
sub
sbb
call
xchg
sub
loopne
adc
push
pop
out
pop
jmp
mov
je
fwait
dec
xorl
push
ljmp
ret
pop
and
sub
sub
ficomps
in
dec
adc
fstpt
pop
rorb
push
jnp
popf
dec
cmp
mov
inc
xor
imul
xor
push
dec
mov
xlat
sub
adc
and
iret
sahf
and
xor
push
sbb
xchg
aaa
cmpsb
pop
mov
and
mov
jle
xor
out
mov
dec
enter
fnstenv
dec
test
ds
scas
pop
movsb
push
cmp
jo
xor
loopne
ret
fstpt
nop
mov
es
mov
subb
inc
mov
pop
cmpsl
pop
enter
int
fisubl
insb
fstps
clc
out
mov
xor
cmp
int3
aaa
ss
stos
mov
das
dec
push
out
repz
sbb
mov
fsubs
pop
xlat
sbb
clc
or
cli
jnp
outsl
pop
addr16
cmp
mov
sub
sar
or
lock
add
sbb
mov
fmulp
jbe,pt
push
add
sbb
popf
xchg
ja
ljmp
pop
cltd
loope
dec
in
lcall
popf
add
stc
ds
mov
std
stos
test
inc
cmp
dec
sub
notb
aas
insl
sub
outsb
adc
adc
mov
push
stos
fnsave
xchg
adc
jns
adc
push
jge
mov
aam
jge
mov
loop
cld
xchg
jnp
pop
push
aad
pusha
scas
sbb
popf
hlt
das
cwtl
addr16
shl
mov
bound
mov
dec
jo
popa
dec
mov
xorb
sbb
sti
lods
mov
dec
cmpsl
and
mov
xor
mov
fcompl
nop
mov
pop
xorb
ret
xchg
push
jno
fwait
loope
mov
test
out
jbe
decb
push
jle
dec
sbb
add
xor
outsl
enter
adc
dec
push
lods
lcall
ds
lcall
pushf
ret
jg
dec
sbb
cmp
aaa
scas
mov
xor
lock
mov
jl
fmul
lahf
and
add
stos
xlat
popa
sbb
pop
test
dec
out
mov
lret
add
jl
stos
xchg
roll
mov
push
or
shrl
dec
mov
inc
xor
pusha
inc
add
inc
xchg
loop
sub
sbb
and
mov
loope
push
push
lods
lods
or
push
push
pushf
mov
movsl
add
xchg
cld
jo
pop
imul
inc
ret
xor
cmp
xchg
mov
es
jae
or
and
and
inc
hlt
push
adc
and
xchg
outsb
xchg
xchg
cwtl
jb
pop
jge
stos
shll
js
xor
cmp
lods
bound
hlt
adc
out
or
pop
xlat
inc
adcb
lods
add
pop
inc
movsb
cmpsl
push
outsl
int3
in
inc
cmp
push
and
lcall
pushf
and
cmp
ficompl
scas
mov
data16
xchg
jecxz
add
or
pop
rorb
pop
fxam
push
cwtl
push
push
mov
ror
and
repz
xlat
fisttps
push
out
xchg
mov
stc
loop
push
pusha
jne
ljmp
fstl
inc
pop
fbld
and
jno
pop
mov
push
mov
sub
fimull
les
adc
mov
call
dec
or
scas
cmp
pop
inc
idivl
jg
mov
fidivrs
ss
adc
push
push
push
ss
fstpt
xor
jecxz
mov
repnz
testl
pusha
imul
sbb
shlb
sbb
sub
std
and
or
mov
shrb
xchg
insb
hlt
cli
sbb
in
adc
orl
cmp
or
mov
mov
adcb
and
imul
xchg
cmp
sbb
test
mov
lret
pop
mov
lcall
mov
mov
popa
adc
mov
pop
shlb
scas
mov
push
mov
mov
pushf
jo
jmp
xor
sub
loope
jl
jno
mov
push
mov
xchg
mov
push
xor
je
add
pop
loope
rcr
sub
pop
mov
out
push
in
js
mov
mov
ss
adc
ds
sbb
push
popf
xchg
or
cmp
dec
scas
repnz
push
jae
cwtl
push
bswap
rolb
insl
add
popa
xchg
xchg
push
test
movsb
dec
into
cmp
push
add
das
jbe
cmpsb
or
jne
movsl
lret
std
dec
out
push
pop
aaa
pop
insl
add
pop
sub
adc
xchg
les
int
roll
dec
loope
push
mov
orl
shl
mov
pop
scas
sub
push
ljmp
push
bswap
fidivs
jl
das
pusha
faddl
or
std
push
sbb
lds
sti
xchg
pop
icebp
cmc
leave
adc
mov
cmp
xchg
xchg
add
call
andb
loop
aad
pop
fadds
sub
stos
fisttps
je
cvtps2pi
sub
out
push
into
shl
mov
sbb
cld
mov
gs
or
dec
outsb
add
fdiv
adc
cmp
mov
push
adc
jl
and
pop
clc
shlb
add
push
stos
and
sbb
adc
mov
rcrb
or
xchg
mov
cmpsl
and
es
cmp
mov
cmpsb
add
jmp
dec
addr16
fildll
rcr
sti
loopne
into
fs
aas
fnsave
jl
out
inc
adc
and
call
scas
ret
aam
dec
adc
mov
or
sub
ret
mov
aam
stos
popa
xchg
repz
in
testb
lcall
adcl
hlt
mov
adc
shl
movsb
mov
mov
mov
and
ds
cmp
insl
lods
and
jns
leave
pushf
sub
test
mov
sbb
dec
push
xchg
in
lcall
push
bound
push
test
cld
imul
outsb
lods
lods
fstpl
hlt
jbe
and
dec
loop
lods
sbb
insl
out
push
fdivl
sbbl
popf
out
cmpsb
push
mov
mov
iret
adc
fbld
mov
ljmp
les
and
aam
outsb
repnz
and
lods
jecxz
js
scas
mov
xchg
lahf
and
ret
dec
out
jge
loop
insb
adc
jo
push
push
mov
cmp
vpaddusb
cmc
mov
inc
mov
aad
hlt
push
xchg
std
sub
je
ffree
and
jbe
cmpsl
daa
jae
pusha
pop
sbb
add
lods
inc
aam
imul
testb
mov
fsubr
movsl
mov
xchg
push
repnz
mov
lcall
jbe
adc
cmp
loopne
mov
dec
ret
daa
sbb
lods
add
es
mov
arpl
and
cmp
mov
insb
clc
rcll
in
and
test
fisttpll
test
cmc
loop
add
nop
push
push
fbstp
or
dec
lret
push
inc
dec
xchg
jecxz,pn
daa
out
js
mov
aas
ljmp
mov
or
push
outsl
ret
add
cwtl
hlt
push
out
xchg
shlb
std
sub
xorb
mov
fcompl
add
lea
mov
pop
les
adc
pop
js
xlat
push
cmpsl
nop
dec
mov
out
xchg
pop
sbb
loope
cmpsb
inc
xor
loop
sub
movsl
or
popf
cmp
insl
push
cmp
in
xchg
shl
fmuls
cwtl
aas
cmp
dec
jl
mov
sub
mov
push
or
xor
nop
adc
add
dec
sbb
jl
dec
cli
insb
inc
into
sahf
ja
jns
push
cwtl
pop
insb
mov
pop
jns
push
gs
mov
fdivrl
test
cmp
xchg
pop
bswap
jae
shll
and
cltd
dec
lods
cmc
shrl
out
sub
adc
cmp
mov
in
add
icebp
or
lret
je
cltd
jae
pusha
xor
mov
pop
mov
adc
pop
das
mov
insl
loop
adc
mov
clc
sub
jne
push
dec
call
adc
call
cmc
je
jle
dec
cvtpi2ps
sub
out
ljmp
cmpsl
sahf
adc
setle
test
insl
loope
jb
xor
xchg
cs
dec
lcall
movsb
pop
mov
push
jmp
outsb
int3
nop
xchg
fisubrs
push
int3
jae
dec
scas
test
cmp
cmp
cmp
add
outsb
nop
mov
fmuls
add
mov
jge
dec
outsb
sbb
mov
push
pop
in
or
sbb
iret
iret
push
into
push
shlb
out
xor
jge
inc
adc
xchg
outsl
push
loope
shlb
repnz
shll
aam
shr
sub
mov
jnp
jno
push
lea
fldcw
sbb
movsb
stc
call
mov
enter
inc
push
or
std
cltd
inc
movsw
loope
or
inc
push
cmc
leave
mov
inc
cld
mov
sbb
mov
cmpsb
mov
pop
sbb
jmp
fldl
aaa
and
sub
pop
adc
inc
clc
into
or
sbbb
mov
call
loope
arpl
lods
out
in
ret
aas
jbe
out
into
dec
cmp
fcoml
sbb
fs
pushl
cltd
cmpsb
repnz
rcrl
push
mov
pop
stos
lock
into
adc
or
add
test
push
pop
lahf
lret
xchg
push
mov
mov
imul
dec
xchg
xchg
inc
and
addl
xchg
testb
cmpsl
sub
jno
fwait
mov
in
vpcmov
std
cmp
mov
cmpsl
push
pop
scas
inc
lret
lods
dec
mov
push
pop
mov
jns
call
enter
repz
adc
push
insb
xor
nop
enter
or
lret
lret
cmpsb
insl
popa
xchg
cs
es
add
or
cmp
imul
or
pusha
and
sub
dec
hlt
jp
jbe
and
add
test
fbld
pusha
mov
daa
mov
lret
clc
sbbb
and
lcall
pop
andl
xor
jmp
outsb
inc
mov
mov
mov
xor
addr16
and
xchg
push
je
decl
pusha
or
xchg
pop
clc
test
test
adc
jo
out
or
jnp
dec
pop
out
in
adc
xchg
sub
test
mov
xor
adc
imul
cli
push
repz
popf
icebp
movl
addb
push
mov
mov
xchg
jo
sarl
xchg
xchg
add
loop
shlb
xchg
mov
loop
outsl
insb
loope
sub
cli
mov
sbb
out
jg
int3
mov
mov
xchg
repnz
dec
push
xor
or
aam
mov
push
xchg
mov
call
popf
pop
inc
mov
mov
xchg
xor
add
repnz
or
popf
pop
sbbb
ss
pop
es
test
inc
pusha
push
sub
mov
cmp
push
cmp
cld
ret
mov
mov
cld
xchg
or
fldcw
mov
aad
mov
add
fdivrl
cmp
pusha
clc
lahf
push
fdiv
das
cmp
pop
jns
xchg
jg
test
fisttpll
lcall
lods
lret
push
out
lret
jns
add
icebp
int
int3
lcall
mov
clc
sub
and
adc
call
fcom
or
stos
mov
ret
xchg
stos
mov
incl
pop
fwait
sub
cli
scas
mov
inc
cmp
xchg
ja
test
jbe
jmp
in
enter
inc
sbb
mov
ljmp
mov
lret
adc
xlat
or
pop
xor
xor
xchg
test
lds
and
cmp
roll
mov
push
fsubrs
mov
shlb
pop
into
js
ds
sti
sub
sbb
out
xorb
push
jmp
shll
enter
es
sti
cmpsl
push
out
imul
addr16
cmp
dec
mov
fnstsw
outsl
sbb
mov
lods
or
cld
push
inc
add
sbb
jl
lret
popf
cmp
movsl
bound
test
pop
or
roll
call
mov
outsb
cli
xchg
ja
addb
mov
jae
cmp
mov
shr
jb
mov
inc
sub
clc
xor
push
adc
rcrb
into
loop
mov
jecxz
mov
insl
jl
pop
shrb
sub
addr16
dec
sub
and
pop
mov
pop
in
mov
pop
jbe
jnp
pop
dec
xchg
gs
lods
js
and
scas
gs
data16
nop
xchg
sbb
inc
and
test
sbb
call
ss
adc
int3
outsb
mov
movsb
dec
sub
arpl
int
int3
push
mov
ljmp
lds
call
mov
xchg
and
mov
clc
pop
pushf
sbb
in
arpl
adc
gs
xor
sbb
jbe
mov
test
sub
inc
add
sub
loopne
mov
push
jbe
sbb
outsl
int
ret
popf
js
adc
out
dec
xchg
daa
ret
add
sub
ljmp
sbb
push
xchg
jmp
push
fists
std
cmp
push
lods
test
pop
sub
outsb
bound
add
push
ret
pop
mov
cmp
mov
jg
mov
adc
push
or
cmp
xchg
inc
adc
cmp
jbe
and
pop
jae
icebp
or
cld
sub
xor
lea
movsl
sub
fstl
or
and
je
lock
mov
scas
popa
imul
fmuls
add
rol
fistpll
and
rcl
sbbb
into
inc
dec
ss
xlat
adc
sarl
mov
scas
xchg
rcrb
dec
sub
dec
icebp
jge
mov
push
cmpsl
sbb
xchg
stos
sub
ss
out
jge
arpl
jge
scas
adc
negl
imulb
cltd
out
and
mov
leave
insb
lahf
aad
dec
loope
mov
cmpsb
and
xchg
stc
xor
xor
or
test
mov
dec
jbe
subl
pop
jbe
icebp
mov
adc
test
push
or
xchg
mov
inc
xchg
js
mov
fwait
ret
dec
ret
inc
pop
pop
xrelease
lret
and
in
subb
mov
pushf
xor
xor
aad
stos
aaa
dec
cmp
fiaddl
add
dec
xor
fs
add
popf
inc
xchg
test
ss
jb
aam
push
jae
add
fs
movsl
nop
enter
xchg
xor
test
daa
lods
sub
lret
pusha
fdiv
fcom
es
add
xlat
xchg
xchg
push
inc
inc
mov
aad
repnz
incb
out
xchg
dec
mov
dec
xchg
xchg
subl
push
sarl
pusha
mov
mov
sub
shl
cmp
push
xor
xchg
mov
fiadds
arpl
jno
lods
test
mov
sbb
sub
test
cmpsb
call
mov
jb
movsl
mov
and
sbb
push
rclb
mov
cmpsl
inc
add
sarl
xor
sbb
test
int
stos
cmp
mov
add
test
push
out
jp
add
aad
movsb
fst
adc
arpl
jae
sub
in
add
inc
jae
adc
inc
icebp
push
mov
dec
jnp
add
imul
lods
lds
movq
adc
mov
fsubl
std
pushf
jb
ja
cmp
aaa
cmp
je
arpl
test
mov
push
cmp
jns
lret
xchg
pop
adc
cmpsl
cld
lcall
inc
jmp
cmp
pop
or
sar
mov
adcb
or
subb
lods
jle
out
jle
call
ret
inc
cs
or
push
and
add
xor
out
xchg
or
out
call
dec
push
das
xchg
cs
xorl
jg
and
in
lret
inc
popa
mov
pusha
xchg
jecxz
mov
rclb
imul
mov
int3
stos
pop
cmp
xchg
mov
iret
xchg
fiadds
and
ja
mov
les
ljmp
fsubl
movb
mov
adc
cmp
ja
cmpsl
sbb
cmp
add
push
xor
shlb
leave
mov
and
mov
jg
push
cmp
call
icebp
mov
jnp
into
shlb
lock
repnz
dec
push
xchg
scas
lcall
jae
out
push
inc
inc
fisubrl
lahf
adc
ss
out
fs
add
mov
enter
fistpl
pop
and
addr16
and
sub
inc
pop
add
sbb
stos
or
jo
sub
sub
out
addr16
aas
mov
sbb
xor
push
lock
add
in
xlat
rorl
dec
xchg
xchg
fwait
cmp
mov
push
enter
lcall
mov
mov
leave
in
and
pusha
push
jbe
cmpsw
jns
sbb
loopne
cmp
out
and
fisttps
or
push
fwait
and
xchg
data16
stc
and
dec
lods
xchg
loope
ds
subb
pop
negl
stos
in
inc
nop
aaa
jmp
mov
sbb
dec
gs
push
inc
pop
push
in
push
sbb
mov
push
fs
pop
push
or
aas
lahf
in
cld
out
dec
pop
cmp
loopne
lret
mov
mov
fnstenv
dec
adc
les
stos
push
out
in
movsb
jl
shll
mov
mov
out
add
push
push
mov
imul
dec
adc
xchg
cmp
loop
hlt
stos
inc
push
dec
cmc
xorb
loope
mov
add
inc
faddp
xchg
dec
rcll
jae
xor
pop
mov
and
cmp
mov
sub
outsl
pop
mov
icebp
jge
sbb
adc
adc
out
jno
not
lods
outsb
jbe
mov
mov
lods
jmp
xchg
jb
ljmp
push
iret
stos
jno
in
sub
cli
adc
mov
and
dec
add
gs
hlt
stc
xor
pop
div
mov
cld
xor
sub
push
xchg
cmp
mov
push
or
test
cld
or
xchg
pop
nop
ret
push
js,pn
ja
cwtl
add
aaa
rcrb
aaa
aaa
cmp
loope
or
adc
mov
fadds
jno
sarb
push
leave
or
aad
jl
shrl
out
pop
pop
and
stos
dec
mov
dec
cltd
fdivrl
xor
xor
mov
xor
outsl
sub
and
add
xchg
cmp
icebp
xor
jle
adc
rorb
push
mov
xchg
div
test
mov
xchg
je
mov
xor
pop
daa
cwtl
jecxz
add
xchg
push
and
cld
loop
add
xchg
es
negb
ja
dec
mov
out
js
cmp
sub
gs
pop
ret
ficompl
bound
jo
fistl
leave
ds
adc
ss
arpl
mov
rorl
jb
push
add
mov
jo
pushf
push
movl
pop
mov
mov
popa
xor
ficomps
orb
add
adc
sbb
das
ds
mov
jns
movsb
stc
pop
lods
sbb
aam
jp
scas
mov
ja
ja
sti
xchg
adc
fimull
push
mov
pop
xlat
fcomps
faddp
pop
add
xlat
or
into
sahf
data16
ja
iret
add
mov
dec
lret
mov
push
int
aas
push
repnz
or
pop
into
add
mov
lea
sbb
mov
stos
lret
aas
inc
nop
lret
lret
idivl
xchg
outsb
pop
pop
push
jg
mov
and
adc
insb
stos
sub
xor
fidivs
add
lahf
push
pop
nop
jg
and
imul
or
dec
jbe
pop
arpl
inc
sub
pop
xor
scas
mov
sbb
mov
das
fs
dec
negl
sub
xor
push
ret
hlt
and
lods
push
or
test
xchg
fucomp
pushf
add
das
loopne
and
mov
test
out
jge
in
inc
ja
adc
cmc
repnz
jo
aaa
ja
mov
sbb
cmpsb
test
push
enter
popf
addr16
xchg
fistps
mov
or
fimull
mov
stc
stc
gs
lods
ja
push
lret
pop
stos
ficompl
adcl
dec
pop
lods
xchg
andl
or
xchg
jmp
push
gs
pop
call
repnz
mov
subb
out
int3
adc
gs
lock
nop
mov
dec
add
add
mov
mov
leave
aas
fdivl
adc
popf
lea
and
test
iret
xchg
sub
add
pushf
push
hlt
outsb
cmp
dec
in
cmp
fs
sub
repnz
adc
sub
xlat
shl
stc
inc
jmp
in
adc
sahf
cmp
pop
ror
sbb
sahf
js
lret
cmp
nop
std
jb
pop
lret
mov
aaa
and
addl
jle
xchg
and
xor
sarb
xchg
fiadds
and
fstl
mov
xor
lock
je
into
cli
out
xor
popf
sbb
dec
inc
inc
pop
mov
cmp
mov
mov
lods
push
call
sub
or
add
cmp
aaa
iret
xchg
jbe
daa
and
push
jmp
imul
je
or
mov
push
pop
jg
pusha
mov
imulb
and
pop
mov
bound
push
stos
lods
fildl
ljmp
cld
shrb
or
es
mov
sub
inc
sti
bound
sub
repz
inc
mov
stos
in
je
push
mov
adc
pop
clc
daa
mov
cmp
cltd
push
pop
ss
push
and
idivb
jmp
mov
iret
jo
or
stc
popa
mov
dec
movsb
push
insb
cs
cltd
into
sub
stos
xor
cmc
es
jb
call
movntq
add
sbb
push
cmp
imul
and
push
ja
push
sub
cmpb
jle
shl
cmpsl
sub
fistpll
sub
push
adc
xor
push
leave
dec
cmp
sar
and
sbb
jmp
mov
cmp
push
ja
adc
sbb
lcall
add
sbb
insl
jmp
sbb
mov
mov
push
wrmsr
and
test
jle
test
lea
mov
aam
icebp
jae
insb
call
shlb
inc
cld
gs
shrd
icebp
and
call
push
inc
orb
pop
mov
sub
push
decl
cld
cltd
filds
fldenv
sbb
sbb
cli
and
je
pop
jne
xor
mov
fimuls
insl
inc
push
mov
push
gs
xor
lahf
adc
lret
push
test
aaa
push
add
adcl
mov
push
lods
and
ret
mov
lods
pop
pop
add
mov
mov
mov
rcrl
or
popf
cmp
jp
and
imul
gs
mov
mov
cld
sahf
les
xchg
aam
std
int
adc
int
add
pusha
adc
xchg
int3
ja
inc
or
imul
push
es
scas
dec
add
xor
dec
jl
clc
std
pop
jmp
daa
test
lods
add
jle
cmp
sbb
ljmp
mov
and
stos
lcall
cmp
add
sbb
inc
sahf
cmpsw
and
out
fcomip
xchg
xchg
xor
dec
pop
daa
fists
aaa
shl
pop
and
sti
sarb
mov
dec
inc
dec
loopne
shrb
jmp
adc
pop
cmp
pop
inc
xor
vpunpckhbw
mov
pop
dec
scas
popf
adc
dec
and
or
or
add
dec
pop
mulb
decl
lods
test
jns
sbb
cmp
lret
sbb
and
in
or
std
aam
out
mov
xchg
pushf
cli
fildl
push
or
les
mov
push
adc
mov
mov
scas
lods
mov
xchg
clc
adc
cmp
inc
pop
sbb
xor
in
push
sti
nop
and
adc
sti
jnp
and
cmpsb
lret
lcall
loope
mov
xlat
cmp
cmp
popa
test
leave
xchg
pushf
and
jmp
xorl
sahf
jle
aas
add
push
cmp
jmp
fisubl
aas
mov
les
pop
imul
andb
std
mov
mov
scas
pop
je
xor
xchg
sub
bound
pop
mov
int
xchg
push
fldenv
mov
or
fistl
xchg
sarb
mov
xchg
dec
loopne
addr16
pop
xor
lea
nop
scas
and
cmp
adcl
push
test
fnstenv
sbb
mov
xchg
dec
mov
es
add
adc
clc
idivb
mov
mov
and
or
push
enter
outsb
out
popf
sub
jl
mov
lret
out
mov
push
cmp
or
push
push
add
sbb
jb
jb
lret
fdivrl
enter
out
cmp
jae
pop
jo
in
mov
pop
dec
fcomps
fistl
xor
stos
aas
lret
xchg
jb
test
pop
and
jp
jmp
ficomps
push
dec
dec
imul
and
loopne
push
call
je
mov
mov
leave
loop
mov
lahf
jnp
stc
das
and
mov
enter
mov
mov
and
into
jge
pop
lret
aad
in
dec
mov
and
insl
sub
popa
es
cmp
sti
lret
push
jecxz
xor
andb
sbb
stc
test
pop
cmp
clc
std
mov
add
and
lcall
push
dec
push
js
hlt
addb
loopne
lds
mov
lret
cmp
mov
mov
lds
movsl
out
sbb
bnd
pop
cli
out
mov
lods
aad
arpl
ja
dec
or
in
fidivl
mov
out
jo
jp
jg
sbb
leave
stc
push
dec
out
lret
dec
mov
adc
mov
loop
add
inc
mov
mov
popa
clc
sbb
js
sbb
lock
int3
and
bound
sub
movsb
xchg
mov
xchg
add
fisttpll
mov
outsl
adc
test
push
mov
sbb
fmul
mov
pushf
and
into
mov
adc
xchg
sar
sub
mov
ss
iret
out
xlat
add
pop
loope
dec
scas
adc
adc
out
rcrb
or
sbb
mov
mov
jno
jmp
and
push
add
repz
mov
xchg
add
out
dec
push
sbb
mov
in
loopne
push
in
push
mov
inc
cld
mov
jle
mov
push
js
out
push
push
jmp
popf
mov
mov
stos
cmp
pop
mov
hlt
ret
jae
mov
sbb
xor
cmp
out
xor
sub
push
popa
les
pusha
cmpsl
pop
hlt
test
push
jnp
cmp
sbb
hlt
push
pop
add
mov
aaa
mov
jp
outsl
daa
sahf
cli
push
mov
xor
stos
imul
mov
sub
leave
sub
mov
fbstp
addr16
and
jle
int3
or
jl
movsb
push
push
dec
add
sbbb
test
fldenv
xor
push
call
and
movsl
cmc
das
jno
aam
pushf
xchg
mov
or
aaa
sub
test
dec
leave
inc
sarb
out
cmp
enter
pop
ljmp
push
adc
test
pusha
mov
dec
add
mov
push
aaa
sub
fnstsw
movl
add
jecxz
rcll
scas
ss
dec
cs
loop
xor
mov
pop
mov
movsb
lea
push
pop
pop
out
scas
sub
inc
fildl
jge
jg
xchg
lds
push
outsb
call
pop
les
mov
mov
incb
and
test
push
push
scas
imul
push
push
inc
fs
movsb
pushaw
lods
in
mov
or
int3
cltd
gs
js
jmp
jns
xor
mov
xchg
sti
lods
je
cmp
out
mov
mov
sub
sarb
mov
mov
mov
mov
dec
jb
shll
cmpsl
inc
lock
not
inc
mov
shrl
add
mov
mov
stos
sbb
or
push
mov
push
shl
mov
cs
inc
xchg
xchg
cmp
inc
adc
popf
notl
out
repz
adc
or
cmp
xchg
inc
jg
push
cwtl
add
xor
lea
adc
pop
gs
in
xchg
pushl
cs
das
clc
test
cld
lret
adc
and
sti
add
cmp
dec
xchg
lods
dec
leave
pusha
lea
dec
inc
push
inc
and
and
sbb
push
into
ss
cmp
pop
push
test
xchg
leave
lret
and
sub
fwait
scas
push
adc
roll
sub
out
jb
out
sahf
sbb
or
xor
inc
cmp
icebp
pusha
xchg
jnp
aas
fcomip
aam
pop
mov
push
mov
add
popf
adc
or
mov
lcall
in
rep
outsl
sub
rclb
push
pop
sub
xlat
popf
mov
xchg
test
out
enter
stc
jge
mov
jns
scas
xor
jbe
in
popf
xorb
out
fisubl
lret
js
insb
pmulhuw
cltd
cwtl
aas
inc
popa
cmp
test
mov
xchg
repz
out
outsb
outsl
mov
in
jl
jecxz
cmp
outsb
lret
xchg
add
push
arpl
stos
icebp
test
mov
test
mov
jne
inc
das
out
mov
clc
push
inc
jp
scas
cwtl
cmp
dec
les
fwait
jl
xor
arpl
and
in
cli
loop
cmp
fidivrl
xchg
sub
call
xor
dec
cmp
sbb
pop
into
fstps
repnz
lcall
cmp
jne
ret
test
push
mov
gs
cmp
mov
fists
into
mov
xchg
jmp
xchg
mov
into
sbb
pop
test
les
mov
pop
jle
cs
sbb
jae
int3
fwait
inc
dec
push
and
leave
in
pop
or
aad
add
pop
sub
hlt
das
int3
or
and
mov
cli
cmp
in
push
push
stos
or
loop
test
pop
mov
adc
loope
imul
sub
aaa
and
push
mov
aaa
imul
sub
jbe
and
xorl
mov
ds
add
sbb
mov
lods
push
push
movsb
jns
pop
fsubrl
xchg
push
and
test
iret
dec
sub
mov
mov
xor
scas
add
push
or
movsl
aas
into
mov
mov
or
test
les
mov
loope
rolb
test
inc
mov
and
push
mov
clc
and
dec
adc
stc
xchg
add
test
enter
fistl
xchg
adc
in
outsb
movsb
push
out
dec
push
ljmp
insl
ret
jnp
and
cmpsl
in
xlat
jp
popa
test
xor
in
push
mov
jbe
pop
loope
pushf
jle
push
in
ja,pn
shlb
ror
nop
sbb
add
jo
rorb
cs
mov
mov
lock
stos
lock
xor
testb
xlat
cwtl
inc
ja
pushf
outsl
jp
push
rcrl
mov
mov
fidivrl
insl
push
mov
bound
inc
enter
inc
xor
test
out
inc
pop
leave
jle
ljmp
mov
enter
cmp
xor
lea
jp
push
mov
push
add
xor
jae
dec
ja
mov
call
mov
mov
int3
mov
cmpsb
dec
mov
cmpsl
loop
faddl
xchg
int3
cld
les
in
cmp
jle
xor
xchg
popa
fisttpll
pop
and
enter
cwtl
adc
hlt
cltd
inc
jb
sahf
and
fwait
push
mov
dec
cwtl
mov
mov
or
push
add
push
icebp
and
or
mov
add
rol
and
jp
and
push
inc
cmp
or
int3
sub
sbb
inc
movsl
popf
cmp
std
inc
dec
popa
popa
or
sub
bound
mov
lods
or
orb
add
sbb
add
add
iret
nop
pop
pop
repnz
cmp
mov
pop
and
jge
sahf
insb
cmp
nop
fs
iret
std
clc
dec
xchg
xchg
add
hlt
call
push
cmp
fdivrl
inc
sti
dec
imul
sbb
pusha
or
cmp
mov
sbbb
decl
pop
jae
shr
xor
icebp
dec
xchg
jle
pushf
add
push
jle
dec
das
sysret
sub
aam
fisttps
cmp
outsl
insl
enter
jne
pop
push
inc
fwait
pop
nop
mov
add
clc
hlt
mov
js
fs
push
add
dec
lcall
jbe
mov
pop
int3
in
pop
loope
loop
jbe
mov
inc
add
das
jmp
lock
outsb
fldenv
dec
stos
push
pusha
push
ljmp
inc
bswap
ljmp
mov
adc
adc
jge
cmp
lods
mov
dec
dec
lret
xor
cs
inc
movsl
push
roll
jbe
adc
xor
pop
movsb
mov
inc
push
pop
leave
add
or
mov
xchg
arpl
pop
int
and
jns
and
shrb
orb
loop
cs
push
mov
out
test
sub
mov
add
fimuls
aam
leave
fdivl
xchg
pop
test
sbbl
sub
xchg
jle
aad
out
jle
fcmovb
mov
sbb
xchg
dec
jbe
mov
nop
or
stos
mov
jae
in
hlt
repnz
jns
in
and
movl
jne
inc
stc
cltd
in
sbb
loop
or
call
mov
sbb
dec
aaa
je
jle
xchg
mov
push
cmp
sub
and
bound
subb
mov
test
mov
decl
xorb
or
push
adc
mov
dec
xor
push
imul
adc
cwtl
std
sbbl
mov
mov
push
jge
inc
and
or
cltd
scas
jg
sbb
jmp
push
jns
mov
add
sbb
cmp
pop
add
imul
sti
scas
int
subb
insb
ficomps
lods
lret
mov
or
ficompl
jp
leave
test
inc
fsub
clc
movsb
fucomi
pop
add
jbe
cmp
lcall
int
mov
aam
push
push
sbb
xor
les
jns
jg
je
int3
push
dec
or
mov
in
mov
mov
fnsave
mov
or
inc
repnz
stos
jae
and
add
inc
int3
cmp
push
xor
mov
lods
pop
mov
or
js
push
lea
imul
adc
repnz
jb
test
xor
mov
movsl
adc
add
repz
rolb
fcomps
mov
cld
cs
pop
pminsw
mov
lea
lahf
jns
sti
jmp
push
lock
adc
ja
add
adc
stos
xchg
mov
sub
sbb
pop
inc
mov
test
fiaddl
cmp
mov
fwait
xlat
mov
add
cmp
addr16
cmp
sub
andl
push
inc
popf
xchg
xchg
jnp
pushf
sub
pop
or
std
sti
xlat
sub
sbb
mov
jle
repz
ret
imul
push
aam
mov
mov
dec
aaa
jns
inc
jg
cmp
clc
lcall
push
aam
mov
out
jnp
inc
cmpsb
push
jg
push
cwtl
ds
aam
pop
mov
mov
lds
cli
jmp
imul
je
sbb
jl
jnp
popf
dec
inc
xlat
mov
and
cmp
cmc
sub
xchg
inc
rolb
fs
negl
push
jle
mull
push
mov
jno
xor
cmpb
pop
xor
movsb
sarb
sub
push
mov
xchg
inc
xor
pop
loopne
rcl
movsl
fs
fdiv
pushf
sub
cmpsb
push
jg
out
lret
and
sub
pusha
push
hlt
cli
lock
test
imul
or
or
shlb
xor
sub
xchg
lret
imul
mov
push
xchg
scas
push
data16
lods
jp
int3
xchg
pop
add
and
inc
cmp
cld
mov
addr16
das
rclb
mov
push
pop
pop
mov
add
xchg
nop
out
lret
xor
mov
xor
and
in
push
out
dec
es
pushf
sub
add
and
lods
or
fisubl
push
xchg
mov
mov
out
addr16
cmp
or
imul
jg
mov
lret
dec
cld
or
subb
xchg
mov
mov
jnp
jbe
bound
int
xlat
cmp
fucom
jl
dec
push
lret
push
shlb
inc
ret
aas
jmp
cmp
repnz
and
jbe
xchg
popf
test
dec
xchg
xor
or
jmp
fwait
daa
fldpi
scas
cmp
xchg
test
stos
mov
shrl
xor
mov
shl
lods
mov
ds
jmp
mov
jle
adc
inc
push
ficoms
sub
add
sbb
iret
popf
dec
es
mov
das
addl
pushf
inc
fdivl
push
out
jnp
xor
mov
in
mov
stos
jle
lahf
lahf
cmpl
mov
jno
fdivr
push
add
mov
mov
fistps
mov
pushf
pop
and
mov
out
rcrb
fldenv
lcall
adc
cmc
pop
push
mov
sbb
sbb
push
int3
push
outsb
push
adc
and
wrmsr
subb
and
hlt
test
and
add
imul
movaps
mov
pop
or
ret
fstp
sbb
jno
push
xor
push
out
mov
js
in
push
lock
jb
and
jne
std
test
rep
and
jno
leave
das
xchg
lret
jbe
cltd
adc
sbb
out
ret
shrl
pop
xchg
in
sub
jae
shlb
dec
std
es
or
aam
cltd
adc
pop
cmp
xchg
dec
fidivrl
xchg
scas
xor
sahf
imul
aad
sbb
lahf
scas
in
lds
cmp
mov
test
lea
rcl
mov
cmp
mov
test
shr
or
mov
xlat
lods
rclb
adc
cs
jp
cli
jb
ds
inc
pop
mov
or
lods
or
jne
adc
mov
sti
xor
nop
lds
cltd
or
sub
mov
mov
xor
mov
sbb
dec
and
lcall
push
clc
inc
xorl
xor
fistps
test
rcrb
mov
mov
add
pop
in
pop
push
cltd
jmp
or
rcrb
pop
and
lahf
insb
mov
std
dec
inc
jmp
out
rcrb
push
sub
mov
popa
cmp
scas
dec
loope
mov
idivb
and
push
dec
adc
fidivs
lds
call
and
std
pop
sbb
loop
and
xchg
push
jmp
sbb
sbb
sbb
inc
push
pop
sub
iret
pusha
xor
add
cs
jno
sbb
inc
sbb
sub
lret
xchg
cmp
adc
mov
in
repz
jp
or
mov
stc
outsb
xchg
add
cwtl
aam
in
xlat
jbe
inc
out
xor
sbb
or
lods
pop
dec
inc
gs
mov
loopne
lods
inc
or
out
enter
shl
bound
push
mov
lret
fs
mov
jne
fwait
inc
jl
adc
sahf
repnz
pop
adc
shll
mov
dec
sbb
iret
adc
push
orl
outsb
fs
dec
sti
imul
out
dec
filds
push
mov
mov
pushf
pushf
sbb
mov
add
sahf
mov
fiaddl
xchg
daa
enter
mov
rorb
dec
movsb
mov
out
popa
push
mov
cld
xchg
push
in
jg
insl
jns
gs
dec
ss
jb
jbe
test
loopne
mov
fs
push
fiaddl
and
push
sbb
dec
lcall
int3
jne
push
jg
testl
enter
lods
xchg
mov
sahf
pop
jge
push
xchg
leave
push
add
mov
icebp
adc
mov
pushf
insb
movsl
int
and
decl
sbb
lret
ds
stos
hlt
dec
mov
lock
dec
dec
jb
dec
jge
xor
in
jo
pop
mov
ret
lahf
loope
test
jns
cmp
call
insl
adc
jle
push
lret
movsl
add
cmp
dec
shlb
dec
cmp
lock
inc
xchg
mov
sub
xchg
movsb
lock
jns
insb
adc
insl
shrl
jp
ret
push
mov
add
outsl
jp
dec
fwait
mov
sub
xor
fwait
dec
push
cmp
lods
mull
jo
orb
es
mov
imul
xchg
das
sbb
or
inc
and
mov
xor
popa
cmc
mov
rclb
outsl
jle
fnstcw
cltd
xor
mov
jns
pop
popf
or
xor
jae
push
fcoml
sub
jle
push
xlat
shl
dec
mov
in
lcall
sbb
pop
jbe
into
xchg
cltd
jle
fcoml
ds
out
imul
stos
jnp
mov
test
sarl
mov
jle
nop
ficoms
ss
pop
or
push
mov
push
xchg
sub
inc
jecxz
cmpsb
pop
and
mov
mov
call
cli
jnp
dec
push
add
push
test
and
lret
cmp
bound
bound
nop
mov
pop
insb
lods
mov
cltd
sbb
ja
pop
xor
dec
xchg
repz
fmulp
das
mov
into
xchg
cmpsb
nop
xor
popl
fsubl
ret
inc
mov
add
in
adc
subb
mov
mov
daa
clc
mov
cli
pop
jo
dec
lcall
popa
aad
cmp
aad
adc
sbbb
daa
mov
es
mov
lods
mov
or
call
ret
sub
fsubs
jp
fsts
inc
xchg
push
mov
stos
xor
sub
dec
loope
dec
int
push
add
sub
jmp
mov
aam
mov
sbb
inc
into
andb
int3
adc
and
insl
out
pushf
pop
push
subl
fwait
sbb
lahf
pop
cmp
push
aas
ror
pop
call
mov
xor
cld
xchg
ljmpw
ja
in
std
push
mov
test
ret
bound
outsl
cltd
inc
lret
mov
sbb
xor
xor
mov
or
xorb
out
pusha
add
sub
or
rcrl
mov
test
pop
xchg
xorl
push
inc
xchg
fildl
es
cmp
jle
out
xchg
inc
inc
xchg
cli
mov
mull
out
jbe
jbe
shl
sub
insb
push
lods
cmc
mov
sbb
imul
push
jbe
inc
pop
dec
hlt
js
fisttpll
cmp
test
ss
push
dec
mov
in
in
mov
and
les
dec
push
stos
push
leave
movsl
mov
aam
clc
inc
pop
aam
push
stos
sub
imul
mov
imul
xorb
sbb
cmc
xchg
add
call
push
data16
rorb
mov
mov
ljmp
popf
movsl
pop
push
fildll
mov
mov
stos
ret
jbe
orl
and
stos
xchg
arpl
mov
je
pop
lods
in
or
popa
lahf
in
dec
test
out
pop
dec
std
cmp
loope
lods
dec
int3
cli
out
mov
xor
cwtl
movsl
mov
or
movsb
adc
in
mov
cmpsb
test
popf
push
sarl
pushf
pop
in
pop
cmp
mov
stos
mov
cmp
mov
mov
add
push
mov
aad
call
pop
and
aas
sub
mov
cmp
lods
rorl
sahf
fs
mov
jp
inc
mov
aam
repz
cwtl
fidivrs
test
aam
dec
ja
lods
sub
adc
sahf
imul
scas
adc
inc
flds
test
pop
loopne
inc
dec
out
icebp
mov
adc
sub
adc
pop
dec
xchg
aaa
std
pusha
mov
xchg
add
stos
pop
push
dec
mov
xchg
ja
xor
imul
dec
jnp
inc
insb
mov
cli
adc
cmpsl
add
in
adc
xor
outsb
imull
dec
in
das
pop
js
and
mov
push
dec
push
subb
outsl
xor
and
shrb
cmpsb
xor
or
aam
fiadds
jbe
dec
lods
pop
cmp
loopne
adc
mov
cltd
test
sub
push
test
mov
outsb
jl
cs
insl
ret
sub
inc
xchg
jb
std
mov
out
dec
mov
dec
adc
mov
adc
push
cli
movsb
inc
mov
mov
ljmp
xchg
rclb
rcll
ds
pusha
mov
sub
movl
lahf
inc
xlat
mov
das
aad
xchg
jno
adcb
ret
mov
jp
sbb
int
cltd
ljmp
aas
sub
xchg
mov
stos
bound
insb
xchg
mov
leave
decb
scas
xchg
stc
xchg
lea
mov
lret
sub
clc
push
dec
jp
arpl
in
sbb
outsl
fnop
cmpsl
push
mov
mov
loope
push
push
mov
shll
xchg
icebp
ja
mov
add
mov
lock
aas
add
mov
inc
dec
jmp
sbb
jns
pop
mov
int
stos
xchg
inc
dec
jns
lahf
mov
aas
mov
xchg
gs
test
fiaddl
call
je
imull
push
mov
sbb
movsb
inc
pushf
addl
jno
and
push
outsb
mov
dec
notl
aam
into
fildl
lea
mov
pushf
notb
push
mov
mov
fistpll
dec
lea
out
push
bound
cmp
mov
add
clc
stc
leave
fmuls
out
dec
dec
je
inc
lret
or
dec
mov
sbb
fcomps
jne
jmp
xchg
test
stos
pop
inc
sahf
loop
add
test
sub
jnp
or
divb
adc
pop
into
jl
xchg
adc
cmpsl
mov
jb
int
jbe
jno
jmp
xchg
aam
cwtl
mov
cld
nop
sbb
dec
aam
cmp
jl
dec
lock
rcrb
push
loopne
cltd
mov
outsb
fnstsw
data16
xor
nop
sub
in
jnp
jecxz
in
cmp
xor
mov
aaa
js
insb
cmp
cmpsb
push
test
call
and
pushf
mov
adc
adc
rcll
xor
or
push
jo
sub
inc
and
xchg
sbb
not
sbb
add
test
inc
sbb
push
ret
subl
pop
popa
cmp
int
fwait
std
lcall
xchg
or
or
add
lahf
hlt
ljmp
mov
cmp
xchg
and
inc
push
cltd
test
out
aaa
out
and
mov
outsl
ljmp
xlat
cltd
add
in
inc
jae
push
fadds
or
or
outsl
xchg
fsubrs
outsl
aad
pop
popf
andl
adc
mov
pop
jmp
mov
enter
gs
mov
push
inc
push
loope
jns
es
ficomps
push
fildll
out
les
mov
or
fwait
mov
jo
mov
aad
jge
pop
xor
loope
add
mov
cmpsb
mov
orl
incl
test
and
fadds
cmc
xor
lret
push
sbb
push
arpl
fnstcw
aad
rorl
mov
sbb
stc
icebp
sbb
inc
iret
fsubr
sub
sub
aam
dec
daa
xor
sub
hlt
mov
aaa
cmp
lahf
fisubl
dec
pop
cmp
outsb
xor
insb
xchg
mov
aas
cli
mov
jo
insb
ret
xor
lds
popf
or
cmpsb
aam
push
mov
xor
jbe
psubusb
mov
leave
push
imul
xchg
xchg
jns
xchg
ret
popa
mov
lret
std
inc
call
jmp
orps
sbb
jmp
jmp
out
icebp
dec
out
mov
out
mov
sahf
leave
xor
sub
push
mov
push
add
pusha
mov
scas
popa
jp
push
xchg
mov
dec
aas
xor
pop
loop
xchg
cltd
xor
and
xchg
shll
rcrb
setl
add
dec
shll
movsl
mov
sub
mov
sub
mov
mov
out
jae
enter
pop
in
jecxz
inc
clc
or
mov
sbb
pusha
jns
in
adc
fcomps
mull
mov
push
or
mov
sbb
sbb
jl
sub
mov
lahf
pop
andb
test
mov
bound
jp
test
daa
mov
mov
addl
push
loopne
add
leave
push
pusha
lcall
jecxz
mov
je
and
aaa
pop
cli
divb
adc
xchg
pop
mov
xchg
stos
fcmovnbe
jmp
fs
xor
stos
add
xor
lret
sub
or
push
fistpl
jnp
pop
jmp
gs
and
or
rclb
and
addr16
lcall
ds
test
mov
xchg
adc
dec
mov
xchg
add
nop
imul
pop
ficomps
sbb
inc
sub
popa
push
jl
or
push
and
mov
and
fstpt
mov
lcall
stos
les
pop
lea
pop
cld
shlb
jle
scas
pop
repnz
xchg
stc
push
movhps
or
cmp
in
xchg
imul
imul
jecxz
sarl
jbe
mov
jle,pt
iret
push
sbb
pop
push
imul
inc
lock
xor
ss
insb
push
cmpl
adc
out
orl
cwtl
xor
mov
popa
pop
push
mov
mov
iret
mov
es
lods
xor
sub
adc
stos
mov
add
sbb
mov
inc
pop
xchg
mov
or
push
cmp
adc
subb
push
mov
jo
nop
cmpsb
cmpsb
arpl
lret
mov
nop
mov
dec
fldln2
inc
or
jl
test
imul
fs
or
add
rclb
stos
or
pop
insl
iret
sti
add
into
jno
repnz
push
inc
std
xchg
hlt
lods
xchg
addb
push
cmpl
fs
in
test
sub
cli
xchg
add
lock
out
jnp
sbb
test
imull
fnstcw
lret
mov
jno
mov
and
or
dec
popf
clc
sbb
jp
inc
jp
xor
adc
aaa
mov
mov
pop
cmpsl
data16
jno
pop
sbb
jo
je
das
inc
sub
dec
testl
cmc
dec
xor
adc
enter
xorb
adc
or
ja
les
push
mov
mov
xchg
cwtl
push
out
mov
and
push
pop
mov
xchg
das
adc
loope
adc
addr16
mov
insl
cli
imul
pop
mov
dec
test
sbb
and
ret
mulb
mov
sub
stos
mov
mov
push
sahf
xchg
sub
stos
mov
data16
std
data16
je
cmpb
xchg
jbe
cmp
cltd
xchg
test
orb
jno
wbinvd
into
xor
mul
das
cld
fsub
add
jge
ja
jb
mov
daa
sub
push
bound
data16
or
jno
pop
cmp
outsb
scas
les
ds
arpl
loop
pop
insl
push
mov
int3
mov
fwait
sbb
insb
call
sbb
out
into
lahf
inc
xor
mov
push
sub
mov
mov
mov
lods
cmp
sbb
or
mov
fnstenv
scas
adc
mov
dec
loopne
call
movsl
sti
jmp
and
adc
xchg
loope
push
pop
sbb
mov
sbb
in
lret
cltd
aam
les
jle
and
test
fidivrl
sub
push
mov
fiaddl
outsb
lcall
mov
dec
jp
ret
inc
adc
jns
jae
mov
enter
xor
xor
push
and
mov
insl
nop
cmc
out
jmp
add
hlt
aas
leave
mov
sbb
xor
push
jmp
dec
mov
jmp
push
shlb
arpl
popf
hlt
shlb
imul
add
and
inc
movsb
mov
popa
fidivrs
in
rcll
mov
lea
outsb
xchg
outsb
arpl
cmp
inc
lea
repz
shr
cmp
jl
lret
push
jb
repz
ds
lds
fcomip
shlb
or
sbb
inc
icebp
lock
add
rolb
mov
test
fstpl
jne
jns
inc
jbe
mov
outsb
sbb
pop
fldl
add
adcb
xorl
lea
faddl
test
je
popa
stc
aad
dec
ret
imul
imul
mov
xor
xor
dec
cmc
pop
and
and
and
div
pop
inc
cld
xchg
or
mov
fsubrl
and
add
xlat
movsl
movsb
incb
cld
sarb
xor
xor
or
or
xchg
jne
jno
out
jb
xor
fidivl
lahf
iret
jbe
pop
and
and
pop
jae
fcoml
sti
pop
mov
enter
pop
lcall
jno
pop
inc
dec
push
add
and
push
fcomp
jns
subl
hlt
xchg
cmpl
fnstenv
cmp
cmp
mov
shlb
inc
or
xor
adc
dec
stc
bound
pop
xchg
shl
pop
fs
les
lcall
cmp
pop
mov
mov
add
push
xchg
mov
sub
push
inc
jmp
movsb
ss
sbb
fcomps
or
arpl
lret
dec
orl
dec
les
pop
mov
sti
dec
repz
test
xchg
sbb
fstpl
sub
pop
ret
mov
in
and
insl
out
test
int3
add
xor
leave
test
lea
inc
jl
sub
ja
cmp
stos
lahf
in
inc
xlat
int
stos
cmpsb
lahf
mov
fimuls
fsts
imul
mov
repnz
repnz
sbb
stos
xor
loope
test
flds
in
cmp
mov
fistps
sub
fldcw
aad
xchg
inc
test
je
daa
out
push
dec
les
es
daa
push
sbb
push
adc
mov
mov
pushf
outsb
pop
movsb
dec
pop
push
push
sbb
xor
inc
shrl
cmp
jno
lret
mov
or
pusha
jle
adc
divb
mov
testl
mov
pop
mov
loopne
test
leave
push
in
lea
psadbw
les
hlt
fmul
loopne
cmc
hlt
mov
dec
jmp
mov
out
scas
xchg
insl
pushf
add
sbb
inc
fst
aaa
push
rclb
dec
movsb
mov
popa
mov
pop
loope
scas
xchg
jmp
or
mov
inc
call
pushf
std
pop
cmp
stc
mov
gs
loop
in
sarl
mov
stc
test
popf
rcll
aas
pusha
ret
fldenv
push
adc
mov
and
imul
add
xlat
pop
mov
rep
pop
cmp
push
cmp
jp
jo
xor
sbb
test
subb
haddps
mov
adc
xchg
rdpmc
sbb
stos
pop
sub
fyl2x
out
mov
xchg
xchg
out
inc
push
wrmsr
pop
jns
xchg
aad
daa
fildll
pop
push
fs
push
stc
test
jbe
int
cli
int
push
shll
ljmp
arpl
cs
cmp
ljmp
cmp
xchg
sub
sub
aad
stos
sti
or
lret
fstps
stos
insb
imul
mov
in
pop
or
iret
push
xchg
cmp
popa
mov
cmp
movsl
out
int3
xchg
and
out
test
imul
jecxz
mov
out
sub
clc
test
sub
fs
jp
inc
sbb
das
push
fstl
pop
lds
or
lock
sbb
ja
pusha
inc
or
mov
into
xorb
dec
outsl
sarl
and
movsl
insb
lea
test
jl
dec
repz
notrack
or
adc
xor
fwait
leave
cwtl
adc
mov
les
adc
dec
jmp
sbb
push
std
inc
inc
mov
nop
outsb
aaa
pmulhw
push
xchg
mov
mov
add
stos
lret
xchg
out
bound
sub
bound
imul
out
adc
or
out
test
or
xchg
jne
call
hlt
sub
imul
fwait
add
jmp
mov
lret
xchg
xchg
outsl
ds
xchg
decb
pop
sub
ja
mov
js
pop
jmp
leave
in
inc
jp
clc
push
sbb
fisubrs
jae
mov
mov
push
mov
ss
and
mov
arpl
pop
sub
pushw
stos
xor
push
mov
and
cmp
jbe
in
add
test
cwtl
and
cmp
out
jecxz
ds
jae
or
sbbb
je
cmp
inc
in
test
ret
pop
lret
mov
sbb
jo
aas
pushw
push
pusha
xchg
bound
adc
xor
ret
mov
mov
sbb
bound
xchg
dec
mov
icebp
imul
mov
stos
inc
jae
lock
add
jns
mov
in
pop
ret
pop
mov
mov
xchg
inc
lock
cmpl
stos
xor
lea
sbb
jge
or
push
sti
mov
in
mov
mov
test
stos
jmp
dec
xchg
scas
xchg
mov
mov
pop
pop
mov
xor
jns
in
inc
cmpsl
loope
pusha
hlt
xor
mov
jb
or
mov
xchg
xchg
in
push
fsts
js
or
test
jmp
ss
stos
lods
stc
stc
cmpl
jge
test
repnz
mov
add
loope
decb
test
xchg
lock
dec
jl
daa
insb
out
lcall
jecxz
sbb
fildl
rorl
mov
adc
popa
mov
pop
xchg
or
mov
divb
lock
stc
mov
insb
mov
dec
and
xchg
inc
lock
subb
or
jecxz
insb
xor
adc
push
in
xchg
out
in
icebp
mov
jno
adc
popf
stos
inc
aam
and
imul
pop
rcrb
shrb
mov
ret
adc
ja
mov
das
and
mov
sub
ss
leave
xlat
lahf
cli
ret
in
andl
clc
imul
sti
push
xor
in
into
cli
jmp
fcompl
pop
mov
xor
mov
pop
stc
cwtl
dec
adc
mov
dec
outsb
pop
sti
inc
in
clc
sub
push
lods
push
mov
adc
or
mov
cmp
sbb
mov
pop
test
cmp
push
faddp
or
pop
popl
inc
xor
int
andb
scas
xchg
repz
test
push
inc
out
gs
jne
and
push
ret
mov
adc
ret
loope
push
insb
jae
jno
adc
mov
lods
inc
mov
and
xlat
and
vphaddubw
mov
sub
ss
jg
sub
cmp
leave
mov
cwtl
fisttps
lahf
mov
ret
mov
sbbl
out
daa
or
jle
loope
cs
mov
subps
shrb
aas
xor
insl
lea
stc
fdivl
and
mov
or
test
dec
mov
das
jne
lods
sub
push
xorb
mov
icebp
or
cmp
test
adc
rclb
inc
lahf
add
cmc
push
mov
lahf
dec
mov
and
imul
mov
mov
cli
dec
cmp
push
pop
ja
adc
mov
aam
cmp
das
jae
xchg
iret
rcrl
push
mov
jp
pushf
mov
push
popa
adc
xchg
ss
roll
lcall
mov
or
pop
sub
insb
add
call
lret
rorl
nop
or
or
jnp
cmp
ficoms
shll
mov
adc
gs
insl
sub
push
inc
sbb
lret
bound
mov
lcall
adc
sbb
xor
iret
addr16
pop
iret
and
insb
or
jbe
inc
xlat
jle
inc
mov
fwait
cmp
mov
in
mov
jae
xchg
or
mov
out
sahf
adc
sub
mov
push
pop
push
cmp
mov
dec
jp
dec
movsb
dec
dec
std
jnp
push
xor
mov
mov
dec
push
idivl
repz
movsl
enter
aad
sahf
inc
add
xor
mov
sbb
and
loop
dec
xchg
fcomps
cld
xor
call
mov
in
sti
mov
stos
and
out
movsl
clc
lods
fdivrl
push
inc
push
sarl
pushf
jae
out
je
aaa
jl
ret
clc
cmp
mov
ds
popa
push
pusha
jne
dec
sub
testb
fdivp
bound
mov
mov
sub
das
iret
ja
lret
out
xor
test
cli
imul
mov
add
adc
pop
dec
mov
xchg
aam
pop
jne
aad
repz
cs
mov
loopne
cmp
xchg
out
dec
les
and
mov
lret
push
dec
arpl
arpl
add
inc
pop
movl
movsl
pop
adc
mov
imul
dec
in
jno
add
fcomps
stos
fsubrs
jp
dec
out
cwtl
aam
imul
sti
push
sbb
js
add
lret
xorb
dec
pop
mov
jle
addb
or
mov
mov
cmp
jmp
and
rolb
jg
lock
ret
addr16
stos
fdivrs
xchg
mov
subb
les
jb
aam
add
sub
inc
mov
pop
sub
stos
movsb
lret
cmc
sub
lods
stos
lret
lods
in
cli
pcmpgtb
inc
aas
adc
outsl
imul
jg
leave
cmpsb
push
imul
sub
aam
xchg
cmc
lock
adc
and
std
fxch
fidivrs
jle
mov
xchg
or
sub
xchg
dec
scas
clc
cmp
jp
push
jp
test
sbb
xchg
arpl
push
sbb
mov
les
or
sbb
aas
pop
fistpl
addb
push
sahf
add
pop
insl
mov
adc
fs
lock
scas
and
inc
inc
mov
dec
bound
push
cmp
add
or
outsb
sahf
in
mov
inc
mov
loope
repz
adc
cmp
jp
loopne
in
fists
and
dec
sub
imul
jo
push
mov
incb
cmp
subb
or
sub
mov
js
xor
add
fadds
cmp
jl
mov
dec
and
iret
addr16
cmp
mov
or
shll
dec
daa
sub
fdivs
inc
inc
sbb
lahf
or
inc
icebp
jle
mov
int
xchg
leave
cmc
push
or
bound
ja
pop
sbb
insb
adc
imul
cmp
pop
mov
out
dec
mov
inc
mov
push
sbb
dec
jne
sub
pop
dec
pop
idiv
or
add
mov
hlt
outsl
mov
inc
and
mov
mov
icebp
pop
jne
sahf
aam
data16
dec
mov
lret
mov
and
jbe
cmp
data16
sahf
push
stc
ds
test
in
ja
push
stos
jle
push
jns
fs
pop
iret
xor
shlb
push
loopne
push
and
lret
ss
sub
lods
lock
dec
test
cmp
fsub
jns
les
mov
sti
cmpsb
xor
push
xchg
xchg
push
mov
into
mov
or
call
pop
push
jnp
push
hlt
push
jbe
sbb
notb
in
jbe
xlat
adc
idivl
adc
lods
into
cmp
inc
scas
push
cli
nop
aas
xor
push
pop
adc
mov
sub
out
jno
rorb
movsb
adc
sbb
sub
stos
or
xchg
and
clc
mov
and
pusha
dec
jge
inc
daa
jle
cs
lea
pop
mov
dec
jmp
lret
sar
sbb
arpl
jae,pn
sbb
cs
mov
and
jne
stc
push
dec
push
lea
add
add
add
andb
les
cmp
push
in
adc
bound
add
mov
push
fcoms
inc
jp
mov
bound
mov
movsl
cmpsl
adc
gs
mov
insl
arpl
dec
orl
inc
push
test
lods
scas
call
xor
out
add
jmp
mov
xchg
and
jmp
addb
ficompl
in
inc
adc
inc
cmp
xor
mov
sub
popa
mov
mov
sbb
inc
fdivs
cmp
sti
jle
sub
or
daa
sub
fsubr
sti
pop
ficoms
mov
cmpsb
hlt
cmp
cltd
test
or
mov
in
inc
imulb
adc
push
jmp
mov
int
jns
nop
add
sub
movsl
stc
xor
loop
rcl
cmpsl
cwtl
pop
mov
mov
call
cmc
mov
inc
xchg
mov
movsl
jl
xchg
insb
mov
adc
pop
xchg
mov
xlat
mov
and
pop
test
mov
mov
jmp
dec
mov
inc
mov
dec
out
sbb
jb
cmp
add
icebp
loope
push
mov
add
lret
dec
push
loopne
pop
bound
add
aad
cmp
pop
and
out
push
cmc
pop
xor
in
xchg
out
je
in
rclb
test
dec
or
arpl
orl
movsl
inc
dec
or
mov
rol
in
jo
test
cmp
sbb
xlat
dec
mov
jb
enter
jge
ret
js
and
dec
and
jle
or
imul
movsl
adc
lret
scas
dec
insb
cwtl
push
repz
xchg
adc
mov
cwtl
add
js
and
icebp
xor
add
jmp
push
cmp
cmp
dec
in
xchg
stc
xchg
jg
sub
bound
scas
jns
inc
push
sarb
out
mov
cmp
add
jl
out
jnp
cmpsb
cmp
ljmp
cld
dec
inc
notl
mov
mov
sub
mov
jno
jnp
add
pop
cmp
shlb
xor
push
loope
mov
jnp
adc
imul
call
cmp
mov
jp
mov
pop
int3
sub
movsl
xchg
ret
dec
repnz
sbb
rcr
hlt
mov
mov
popa
fdivrl
movsl
inc
outsb
sub
xor
sbb
cli
insb
xchg
ja
imul
push
or
sub
cmpsb
dec
imul
hlt
xchg
jns
inc
mov
movsl
cmc
icebp
xchg
adc
in
rcrl
mov
add
clc
stos
into
jmp
lea
cmpsl
dec
popa
mov
xor
mov
aaa
inc
xor
sbb
or
sti
in
in
cmc
jg
push
cli
shl
mov
cld
sub
jae
punpcklbw
sub
popa
or
enter
xlat
mov
in
jle
push
add
inc
stos
sbb
ljmp
lods
stos
adc
das
stc
pop
cmpl
sbb
push
je
loope
add
pop
scas
or
sub
sbb
add
ja
dec
iret
cld
loopne
adc
mov
cmpsl
mov
mov
pop
shrb
loope
in
or
notb
sbbb
xchg
popf
mov
sub
pop
mov
out
fcmovnbe
sti
aad
ret
fadds
clc
add
js
mov
xchg
push
sbb
add
dec
popf
in
mov
leave
dec
scas
cmp
fcoml
icebp
fwait
or
arpl
jae
mov
jnp
adc
push
cmp
lret
dec
dec
cmpsb
sti
dec
cmp
and
jno
cmp
stc
insb
jmp
subl
rorl
in
cmp
mov
jle
jecxz
cld
dec
and
sti
loop
pop
dec
xor
imul
fdivrs
sub
dec
xchg
or
push
xlat
pcmpgtb
movsl
push
lret
loop
add
loop
ret
pop
enter
cmp
xor
push
aas
mov
inc
jb
push
jae
add
test
mov
or
adc
fbld
les
push
jl
pushf
outsl
or
xchg
repz
repnz
call
pop
mov
insb
xor
pop
inc
add
or
loope
dec
xchg
leave
lods
xchg
add
aad
xor
lret
xchg
cs
inc
test
jmp
int3
xchg
repz
fucomip
gs
cltd
xor
xchg
inc
orb
test
cmpl
sbb
push
mov
sub
adc
cmp
jge
pop
lcall
mov
cwtl
pop
jle
cs
mov
into
fistpl
inc
call
jne
je
mov
adc
dec
mov
jno
sahf
out
cmp
shrb
inc
sbb
pushf
xchg
mov
pop
imul
fsts
inc
mov
push
mov
stc
inc
imul
xchg
jmp
sub
aad
cmpsb
jne
ret
popa
pop
xor
mov
pop
mov
cmc
sbbl
fwait
pop
stos
pop
iret
test
sbb
inc
xchg
lcall
push
adc
xor
sbb
sbb
mov
es
and
mov
adc
pop
jb
xchg
shrb
jmp
and
inc
pop
cmpsb
test
movsb
jmp
jmp
fiadds
lahf
xchg
jmp
jge
mov
sbb
push
mov
fstp
das
popa
mov
stos
add
in
je
jl
std
pop
xor
in
data16
repnz
rclb
loope
fwait
inc
in
xor
mov
sub
or
popa
je
inc
aas
mov
or
iret
xchg
stc
das
lret
dec
int
jmp
mov
jl
mov
mov
jbe
test
nop
inc
dec
mov
orps
jecxz
sbb
pop
and
mov
shlb
ret
mov
mov
fcmovnbe
jbe
das
movsb
pop
test
fldt
dec
dec
cwtl
scas
cwtl
xchg
call
cli
and
loope
cmp
daa
fidivrl
pop
cmp
pop
je
fcoml
cld
repz
sub
enter
aam
sbb
lea
add
data16
add
xchg
jno
adc
and
sub
pop
leave
repz
leave
adc
dec
imul
adc
add
out
sbb
sbb
pop
pop
sbb
and
shrb
xorb
jnp
xor
aad
adc
cld
mov
add
xor
sub
push
push
lahf
aad
cmp
mull
fnsave
add
mov
pop
icebp
xor
mov
pop
loop
stc
mov
cmp
xchg
pop
aaa
jns
cs
test
cld
mov
lds
mov
adc
das
or
rol
insb
repz
idivb
aaa
shr
push
cmp
int
jne
nop
stc
pop
cmc
repnz
shl
xchg
imul
sbb
sub
cli
fistl
jle
mov
sarl
push
xchg
jne
sub
add
mov
jne
jbe
cmc
mov
loopne
dec
aam
imul
xchg
add
add
jmp
sahf
popa
out
lock
rclb
sbb
add
fsubrs
and
pushf
inc
xchg
in
push
jl
imul
nop
lret
inc
jae
push
push
mov
add
in
mov
jl
or
dec
mov
clc
pminsw
cmpsb
dec
fwait
popf
cmp
adc
mov
pop
mov
lea
mov
insb
cmc
in
ret
mov
movsb
jb
outsl
stos
addr16
jo
or
jle
lods
push
ja
inc
adc
stos
std
mov
stos
pop
adc
daa
xchg
hlt
sub
xor
inc
rclb
mov
pop
inc
jg
add
lea
sbb
lock
pop
hlt
mov
sbb
fnstcw
fcompl
jns
es
push
nop
adc
enter
daa
rolb
push
in
mov
inc
movsb
push
in
xor
imul
nop
jecxz
cs
movsb
and
call
inc
mov
mov
lds
push
test
push
or
stos
inc
add
das
sbbb
ror
out
xor
and
das
clc
xchg
ss
mov
insl
lods
stos
push
popf
into
xlat
mov
ss
push
mov
sub
icebp
dec
es
mov
sbb
dec
int
push
repz
sbb
add
inc
pusha
xchg
mov
mov
add
mov
shlb
jge
test
aam
fldcw
int3
xchg
jmp
imul
mov
in
outsb
imul
adc
insl
in
pushl
lods
xor
add
xchg
push
iret
cs
inc
lret
aad
mov
mov
aas
daa
xchg
loopne
lret
jp
jno
adc
shlb
mov
repz
mov
push
dec
invd
lret
repz
pop
xlat
dec
sub
mov
dec
xor
adc
inc
sti
and
test
int3
jae
mov
addr16
dec
push
mov
decl
lock
int3
mov
cmpsb
dec
fldcw
jecxz
sahf
adc
push
mov
sub
aaa
xchg
inc
int3
das
sbb
cwtl
add
leave
imul
inc
inc
icebp
fiadds
push
ljmp
add
push
inc
mov
out
subb
jo
int3
xor
lret
push
mov
dec
insb
or
push
cmp
sbb
mov
imul
leave
mov
add
testb
imul
inc
inc
mov
dec
mov
inc
jne
mov
sbb
sarb
inc
xor
repz
push
ljmp
and
xchg
dec
gs
fsubrs
add
sub
lret
or
jns
or
cmp
lods
mov
sbb
adcl
imul
loop
andl
jbe
jo
xor
dec
fdivrl
mov
loop
or
scas
adc
sbb
movsb
out
ljmp
test
fldl
out
push
sub
int
cmpsb
jne,pn
out
jg
cli
jb
add
inc
rcll
mov
cmc
je
inc
push
js
lea
das
jo
add
div
popa
or
repz
jo
fsin
popf
andl
loop
inc
std
cld
inc
jl
test
lcall
test
outsb
mov
mov
fmulp
addr16
into
movsl
test
sub
lds
aaa
outsb
xor
adc
sbb
jg
push
in
jne
push
add
adc
pop
mov
mov
cmpsl
hlt
test
sub
xor
rclb
push
mov
mov
mov
pop
push
and
fwait
sub
push
jmp
ja
dec
jb
shll
stos
mov
mov
rcrl
outsl
stos
mov
jge
loopne
fcomps
into
mov
movb
mov
fstps
pop
inc
xchg
rclb
mov
lcall
pop
aam
xor
lods
rcrl
fcoml
lcall
mov
jecxz
lods
xor
xor
pushf
push
aaa
mov
clc
mov
lea
test
jg
cmpsb
fidivs
in
movsl
xlat
std
addr16
jbe
add
mov
insb
jae
inc
xchg
xchg
adc
pusha
in
xchg
movl
mov
mov
push
sbb
loop
inc
cmpsl
push
xorb
pop
inc
jecxz
repnz
cld
dec
and
inc
or
jle
adc
add
push
sub
or
out
lcall
xor
lretw
mov
cmp
push
das
mov
adc
adc
movsl
adc
addr16
arpl
cmp
pop
cmp
push
cmp
out
in
pop
inc
sbb
in
xor
sbb
xchg
cmp
sub
out
sub
xor
dec
pushf
inc
inc
lods
cmp
cmp
dec
sti
pop
fsubs
loop
lahf
rcrl
sub
pop
sbb
add
push
or
je
stos
movsl
ficoms
jecxz
adc
adc
pop
xor
popf
mov
mov
sub
pop
mov
cmp
daa
cwtl
mov
orl
pop
lock
sub
or
aaa
add
cmp
gs
mov
mov
repnz
repz
cmpl
sbb
pusha
sub
sbb
addr16
sahf
xchg
xchg
jo
mov
add
fmul
sbb
mov
outsb
lock
adc
out
test
push
and
icebp
ja
movsb
aas
je
and
addr16
jb
movsb
jne
shlb
ficoml
repz
addr16
xor
dec
cmp
jo
xchg
mov
loope
lods
cmc
mov
jne
divl
push
fcmovnu
xor
lods
jns
icebp
jno
outsl
inc
mov
pop
nop
add
addr16
lea
leave
lods
idivb
cmp
mov
xor
inc
in
xor
fsubrs
jg
shl
push
mov
add
mov
push
rcrl
cmp
adc
add
ljmp
mov
sub
pop
dec
inc
pop
and
lret
lds
mov
ljmp
add
sbb
sti
mov
push
leave
lahf
pop
sbb
xchg
xchg
adc
fisubrs
sarl
adc
in
test
int
js
mov
std
mov
push
and
push
push
int
push
cld
mov
pop
inc
test
negb
pop
in
and
in
popf
cmp
push
lock
outsl
icebp
push
jbe
out
dec
movsb
push
imul
jle
out
adc
add
and
add
xchg
sbbb
adc
dec
sbb
jmp
test
push
clc
outsl
fcmovnbe
lcall
aad
adc
out
jecxz
fwait
test
sahf
dec
mov
cmp
pop
add
push
xchg
dec
inc
imul
cwtl
cmc
stos
cs
dec
xchg
jge
mov
mov
roll
pop
jnp
jns
testb
fadds
inc
xchg
imul
enter
push
out
pop
imul
ficomps
pop
jae
stos
sarb
xor
mov
sub
clc
je
adc
lods
aad
push
pop
leave
fcmovnb
cs
in
add
or
je
popa
adc
push
adc
or
lahf
xlat
sub
adc
pop
and
mov
outsl
lods
shl
lods
imul
xor
sub
or
dec
or
dec
inc
gs
jl
push
push
mov
lea
and
pushl
jno
stc
mov
push
sbb
inc
leave
sahf
mov
aaa
mov
mov
outsl
push
lret
ficoml
adc
fcmovb
inc
and
in
es
lods
shl
dec
or
fbld
pop
mov
fildll
add
pop
lcall
xor
pop
cs
jp
adc
xchg
mov
cli
xor
mov
mov
push
stos
jl
movsb
xor
or
and
mov
cld
cmp
sbb
aas
xor
dec
add
adc
sub
gs
cmpsb
dec
scas
sbb
adc
test
adc
xchg
popa
jne
insl
aam
and
subl
rorb
jecxz
lcall
aas
xchg
or
out
aam
xchg
fiaddl
adc
xchg
fucomi
add
xor
in
mov
add
mov
ljmp
ret
mov
jmp
sbb
pop
pushf
add
aam
sarl
cmp
insb
pop
sbbb
mov
sub
add
dec
add
ret
pop
jmp
sbb
and
aaa
push
adc
push
cmpsb
flds
and
pop
in
mov
pop
and
dec
xchg
xchg
stos
mov
add
sbb
scas
xor
cltd
imul
shrl
xor
sbb
pop
and
out
xchg
mov
repz
imul
mov
xor
int
fidivrs
mov
mov
notb
repnz
sub
and
into
rcrl
mov
test
fildl
call
sub
mov
or
pop
cld
test
xchg
sub
jbe
inc
cld
adc
jne
aad
mov
das
icebp
es
dec
xchg
call
adc
mov
arpl
xchg
jb
push
push
jle
scas
les
push
mov
sahf
aam
pop
test
test
mov
filds
mov
shll
jecxz
and
dec
adc
cmp
es
stos
pop
out
repnz
leave
xchg
test
fcoms
in
lea
outsl
xchg
inc
int
pop
rol
or
pushf
loop
push
movsl
inc
cltd
inc
add
in
sbb
push
cmp
xor
mov
jbe
jge
jne
push
xor
fisubs
pop
mov
sub
add
popf
and
pushf
xchg
ds
mov
push
loopne
test
mov
jmp
dec
mov
iret
movsl
dec
cld
shr
andl
dec
shlb
data16
aaa
lcall
mov
bound
orb
mov
stos
aaa
mov
es
and
jns
scas
stos
rcr
cmp
enter
cmp
jl
fnstenv
insl
push
cld
lcall
jno
mov
sti
mov
add
cs
nop
dec
mov
mov
lds
dec
lcall
xor
js
je
rol
imull
jns
enter
ja
negl
pop
dec
stos
jmp
dec
jle
repz
sbb
shlb
push
loopne
test
hlt
idiv
pop
xchg
cmp
sbb
pop
shlb
push
jl
push
andb
mov
cs
ficompl
mov
imul
pop
je
fs
jl
out
jb
mov
or
cmp
lds
std
add
insb
and
lock
xor
cli
inc
jne
sti
mov
sub
adc
inc
xor
iret
into
int
pmaxub
jbe
pop
loope
orb
loope
pusha
jae
lcall
xlat
sbb
pop
xchg
cmp
stos
or
push
jecxz
mov
fsubl
adc
push
pop
insl
popl
fwait
xchg
pop
mull
push
mov
mov
push
into
mov
fwait
lock
arpl
fnstenv
xlat
aad
cmp
inc
jo
cwtl
dec
mov
mov
mov
leave
lret
out
xchg
sub
push
movsl
adc
mov
push
mov
cmp
mov
jbe
movsl
sbb
add
mov
les
aaa
or
pop
outsl
shll
mov
enter
movsl
out
cmpsl
add
addr16
sub
mov
sar
pop
jno
icebp
nop
or
cmp
cwtl
mov
subl
popa
stc
insl
and
js
fstl
push
sub
push
pop
mov
jne
push
pop
out
pusha
and
test
lahf
lret
cmp
pop
pop
inc
add
lods
mov
add
outsb
or
and
lods
or
test
lock
cmp
sub
sub
jnp
shl
insl
scas
movsb
or
out
movsl
lret
dec
push
fisubrs
mov
pop
addr16
ret
pop
adc
mov
jmp
pop
lret
push
push
out
dec
lahf
sub
inc
arpl
call
pusha
roll
lods
xchg
mov
cld
sub
lock
pop
jle
and
sbb
cmc
dec
cmp
cld
into
das
shr
xor
dec
int3
ror
fsubrs
and
pop
addl
push
lcall
inc
adcl
mov
pop
cmp
add
orl
cmp
sti
dec
std
scas
stc
add
xor
mov
cmp
or
push
sub
addr16
ficompl
and
xor
dec
jg
into
mov
jnp
mov
sarl
jmp
mov
shll
inc
lock
jo
mov
mov
inc
cmc
pop
mov
inc
mov
aam
xor
insb
bound
out
mov
mov
insb
mov
dec
mov
dec
xlat
and
add
jb
int3
mov
pop
jb
and
rorl
sbb
jae
jle
add
and
std
movsl
fwait
or
cmp
inc
ss
aam
mov
cmp
pop
xchg
pop
inc
or
adc
jecxz
mov
or
out
push
lds
das
insl
xor
jbe
popf
mov
and
les
aam
pop
sub
stos
mov
or
vrsqrtss
mov
pop
outsl
ss
xchg
fs
test
xor
inc
cmovb
mov
hlt
jmp
cwtl
cltd
pushf
mov
dec
cmpsb
sub
in
incb
push
and
jmp
inc
xchg
push
or
or
add
imul
mov
je
mov
add
jg
scas
or
pop
adc
jns
movsl
scas
shll
ret
mov
addl
inc
xchg
stc
cmpsl
or
adc
out
mov
add
fnstsw
divl
cmp
cwtl
jae
into
js
add
leave
adcl
mov
add
mov
add
cmp
hlt
inc
dec
pop
aad
add
jg
in
inc
lahf
aas
sbb
sub
sbb
push
jae
xor
lret
in
out
js
add
sub
je
div
shlb
add
mov
inc
lds
jg
sbb
xor
pusha
pop
and
mov
ja
in
lcall
aas
add
push
cltd
jbe
int
std
cs
cmpsb
and
xor
scas
pop
or
xor
in
jb
sbb
fmuls
fnsave
std
loope
dec
nop
ret
dec
std
and
jb
mov
clc
xor
mov
mov
inc
aas
xchg
mov
mov
adc
jecxz
lods
xchg
mov
loop
xchg
rcrb
mov
testl
fstpt
imul
mov
adc
xchg
popf
pop
shll
jbe
xchg
xlat
pop
xchg
jnp
lahf
sbb
mov
shll
mov
xchg
dec
inc
repnz
arpl
push
adc
aam
pop
movl
cmpsl
rorl
test
and
imul
loop
incl
ljmp
mov
dec
rclb
add
ret
ja
repnz
and
jge
dec
jmp
jp
int3
hlt
arpl
and
fwait
loopne
idivl
mov
mov
cld
loop
xchg
pop
shlb
xor
sub
xchg
lea
mov
ljmp
stos
popa
imul
xor
sub
cmpsb
mov
out
or
rolb
jle
add
sbb
aas
push
rcr
sbb
mov
lods
push
jo
nop
cwtl
movsb
mov
push
fstpl
lea
jbe
cld
lcall
inc
mov
gs
into
movl
cmpsl
jge
push
insl
gs
sbb
movaps
jg
icebp
mov
das
inc
imul
jg
adc
push
clc
mov
xlat
mov
dec
shrl
cmpsb
adc
xchg
fdiv
shll
mov
inc
cmp
sbb
xor
sub
inc
dec
sbb
mov
jmp
push
mov
dec
test
mov
dec
push
inc
mov
insb
aad
ljmp
jno
mov
and
sub
pop
cmp
popf
mov
push
out
xlat
shll
out
push
inc
fs
hlt
inc
lret
mov
cmpsl
call
or
sub
pop
push
push
cmpsb
lock
and
leave
mov
movsb
divl
adc
out
rcll
or
dec
mov
das
mov
push
scas
and
push
addb
dec
jp
jmp
lea
dec
lea
gs
lahf
in
add
decl
js
stc
shlb
jno
das
pop
imul
xchg
add
dec
fdivs
add
inc
mov
and
stc
push
arpl
sar
scas
lods
pop
pop
shl
jo
mov
flds
sbb
jns
pusha
gs
pusha
cmp
imul
mov
xchg
cmp
aaa
jg
aam
and
stos
sub
aad
rol
lock
adc
data16
jo
mov
shl
cmp
and
adcl
push
xor
stos
mov
addr16
dec
mov
adc
add
mov
mov
cs
push
adc
mov
pop
xor
stos
xlat
sub
and
sub
add
mul
imul
or
shrw
and
mov
imul
repz
add
jmp
into
lahf
inc
jl
lret
sub
xor
dec
cmp
shl
stc
fisttps
and
outsb
adc
and
add
mov
and
imul
scas
daa
cwtl
imul
pop
pop
fldpi
andb
adc
mov
cmpsb
push
or
mov
mov
pop
daa
mov
mov
jge
or
mov
and
xchg
cs
cmp
cmpl
repnz
pop
pusha
insb
xor
mov
repz
test
sub
jo
bound
negb
jb
cmp
test
cmpsb
lcall
inc
ja
mov
lock
xchg
cmp
add
dec
icebp
cmpsl
jmp
xor
insb
fs
insb
lds
jbe
pushf
xchg
fs
sub
dec
adc
ljmp
mov
pause
insl
pop
add
jmp
stos
mov
ljmp
out
push
pop
dec
sbbb
pop
repnz
push
fsubl
pop
ja
mov
psrlw
out
jg
fsub
leave
pushf
cmp
jae
mov
jae
pop
xchg
cltd
mov
cmp
inc
out
and
mov
cmp
dec
push
scas
mov
adc
scas
push
daa
push
jo
cmp
fldcw
sub
cli
mov
mov
imul
pop
and
pusha
jmp
cmp
aad
jnp
shll
push
push
xchg
addr16
mov
test
add
jae
mov
imul
push
mov
sbb
imul
mov
int
fisttpll
push
lock
mov
and
stos
cmp
outsb
mov
ficoms
les
insb
sub
mov
or
jge
push
ja
aad
xor
je
in
mov
push
dec
mov
ficomps
push
lea
sub
and
int3
lcall
dec
jle
fbld
push
push
lret
sbb
add
push
mov
push
fildl
xchg
xchg
aam
pop
sbbl
fstl
outsl
dec
fs
xchg
or
or
stc
jne
push
cwtl
aas
ljmp
cmpsb
fildl
in
aad
jl
lea
test
jb
jp
xlat
jp
insb
je
call
fldt
mov
xchg
cmc
xchg
shll
lret
ret
xchg
lret
cmpb
xchg
pop
arpl
mov
lret
cmp
dec
jmp
movsl
or
ja
les
jg
xor
cs
in
push
faddl
and
add
add
in
jbe
push
ja
adc
xchg
test
xchg
sbb
cmp
jecxz
xchg
and
sarb
adcb
out
popf
in
nop
outsl
arpl
addr16
dec
jbe
cltd
xor
nop
mov
cmp
addb
rcll
iret
scas
fs
aam
or
scas
lret
pop
inc
ja
sbb
outsb
faddp
jle
mov
mov
shl
bound
cltd
data16
sub
cmp
insl
mov
cmp
mov
ret
outsl
and
jge
mov
push
dec
into
adc
xor
xchg
cli
jmp
and
mov
adc
cs
mov
mov
mov
in
inc
aam
mov
out
scas
fisubl
push
shlb
push
shll
cmp
scas
sub
or
xor
pop
jne
scas
push
and
lods
sub
mov
cmp
cld
nop
fidivl
xchg
and
stc
dec
mov
mov
lcall
mov
jmp
sti
dec
xchg
pusha
push
mov
push
js
nop
lret
stos
xor
addl
repz
fistpll
sti
xor
jmp
push
jmp
out
and
fnsave
mov
out
popa
xchg
lret
xchg
aam
mov
jne
mov
mov
ja
enter
sub
orb
insl
add
mov
fildll
or
mov
addr16
sbb
mov
fs
push
adc
out
push
push
pop
jp
sbb
inc
and
cwtl
mov
repz
cs
es
popa
cmpsl
bound
test
pop
dec
lods
rol
xchg
ss
outsb
movsb
popa
push
call
mov
xor
pop
stc
push
ret
imul
repz
jg
sub
in
cmp
ja
inc
in
xchg
icebp
daa
ja
cmpsl
mov
mov
les
cmova
xor
mov
cld
sub
mov
lret
mull
jge
out
adc
cmp
ja
arpl
jl
dec
jo
fistpl
lcall
push
mov
ja
or
dec
and
push
test
fisubl
cmp
pop
or
sbb
fcoms
or
jmp
push
notb
pusha
repnz
jae
jp
rclb
lock
gs
sarl
add
fs
das
aam
push
or
cwtl
pusha
mov
cmp
shrl
vhaddpd
jp
fldenv
popa
jg
popf
rol
pusha
stc
cmpsl
or
subb
loope
push
jbe
popa
xor
lds
lock
mov
xor
add
sub
or
in
add
cmp
das
ss
pop
mov
aad
pcmpgtd
jno
loopew
add
packsswb
stos
or
or
xor
cs
cltd
mov
les
es
mov
xchg
mov
jmp
pop
outsb
jne
mov
stc
mov
mov
inc
aaa
xchg
add
test
outsl
jmp
mov
and
and
cmp
out
in
popf
mov
dec
inc
fsubrs
bound
dec
push
mov
enter
ljmp
pop
cmp
xorl
cli
jge
clc
inc
fdivs
inc
ret
popa
pop
inc
mov
pop
mov
adc
fmul
mulb
ja
or
push
mov
in
jl
jbe
popa
jnp
ret
push
arpl
xchg
xchg
neg
sub
mov
cmp
push
cmpsl
insl
lock
fwait
dec
mov
jmp
push
adc
cli
cltd
sbb
add
sbb
bound
xor
push
cmp
popa
dec
aaa
scas
movb
out
mov
enter
fs
cmp
pop
popl
andl
lret
in
xchg
and
or
ficomps
and
jge
repz
inc
je
stos
test
je
xor
xor
push
xor
jnp
std
lods
lret
shrb
ljmp
mov
adc
dec
push
shr
cmp
insb
add
cmpsb
popf
xchg
xor
push
mov
mov
xor
push
rorb
mov
lahf
pop
addr16
sub
mov
repnz
mov
push
hlt
pop
dec
xchg
rorl
lret
jbe
ret
outsl
xor
rol
cmp
insl
xlat
mov
push
in
push
jne
or
dec
jbe
add
cmp
lods
pushl
mov
shr
out
mov
dec
mov
test
mov
loopne
mov
adc
push
test
adc
push
rcrl
xchg
sbb
test
bswap
mov
jl
mov
inc
in
aas
fwait
cmp
push
rcll
mov
or
jns
je
pop
int
ret
fst
and
dec
cmpl
addb
les
int
mov
sub
push
push
inc
xor
cmp
loop
cmp
cltd
push
in
mov
cmp
inc
jecxz
in
das
cli
shlb
lcall
in
test
jne
or
repz
and
adc
mov
push
aad
sbb
into
xchg
sub
pop
mov
cli
sysexit
xchg
xchg
mov
stos
stos
sbb
or
pop
inc
dec
ss
add
inc
fcoms
mov
pop
mov
bound
shlb
inc
sub
fcomi
and
inc
insb
mov
mov
jp
pop
cmp
cmc
fdivl
add
ret
xchg
adc
loopne
push
shll
ret
hlt
mov
flds
mov
or
fadds
insb
mov
imul
dec
idivl
jnp
and
mov
leave
add
fmuls
faddl
mov
in
orb
pop
cmpb
lods
test
shll
les
ret
dec
pop
mov
push
ljmp
gs
sti
or
or
popl
das
xchg
dec
jbe,pn
or
cmovnp
jae
xor
ret
fadds
push
loop
out
pop
mov
in
enter
xor
push
push
sub
mov
xchg
inc
insl
jnp
aad
mov
xorl
or
in
in
inc
mov
sub
adcb
push
push
inc
jge
dec
xchg
mov
sub
and
lcall
fnsave
sbbb
sub
fwait
mov
xor
cmp
lahf
xor
cmp
inc
pop
cmp
adc
mov
adc
ds
mov
xchg
mov
sbb
ja
bound
inc
mov
stc
fs
mov
test
sbb
push
andb
or
push
mov
test
adc
jge
cmp
cmp
push
push
cmpsb
pop
scas
inc
loop
mov
clc
jle
and
sti
sub
fists
mov
mov
push
lret
repz
push
test
mov
mov
movb
adc
adc
and
clc
push
pusha
add
jp
das
or
lret
xchg
push
mulb
ja
repnz
outsb
mov
fwait
data16
mov
mov
rorl
shlb
cmpb
lahf
and
mov
push
shll
dec
in
fstl
ja
fisubl
pushf
cmc
push
xchg
cmp
or
cmp
dec
fistps
cmpsb
jno
xchg
fdivs
mov
pop
adc
cmp
loop
lock
jno
je
jbe
sub
sbb
test
lock
nop
mov
xchg
std
mov
cltd
jns
dec
stos
aam
or
in
gs
ja
inc
inc
cmp
xlat
inc
fmuls
mov
dec
fwait
xchg
push
int
clc
sarl
lds
pop
sbb
jnp
mov
rorl
mov
mov
stos
xchg
adc
stos
adc
xor
fdivrl
int
mov
add
pop
inc
sub
or
lods
rclb
xchg
sub
pop
rol
or
mov
inc
sbb
inc
mov
mov
data16
cld
imul
mov
mov
cmp
test
lods
push
jge
inc
mov
sarl
push
orl
lea
and
scas
pop
out
xchg
xor
mov
push
mov
jno
push
xor
dec
call
jecxz
bound
xor
mov
movsb
inc
push
scas
adc
or
subl
shlb
xchg
sub
add
jge
add
sub
imul
das
and
aad
pop
mov
push
outsb
mov
scas
dec
gs
mov
fidivl
jne
push
jg
hlt
inc
adc
test
add
insb
out
lods
pop
mov
scas
outsb
mov
sub
adcl
rol
int
fcoml
stc
aaa
jg
fnsave
in
bound
in
or
push
inc
xor
iret
sub
outsb
int
lret
or
mov
inc
jp
imul
jae
cmc
cmp
fstp
push
scas
call
idiv
stos
mov
pop
dec
sbb
add
cmp
push
mul
mov
movsl
lods
fwait
aas
jae
sub
cs
in
mov
sub
dec
or
lret
sub
iret
inc
pop
adc
stc
mov
mov
fcmovnb
adc
pop
or
shrb
out
xchg
ret
jge
out
xor
cmp
into
xchg
test
sub
not
adc
mov
mov
and
fcomp
cmp
xor
xor
or
outsb
mov
xor
loopne
sti
push
adc
or
jo
scas
outsb
jmp
push
cmp
jl
pop
mov
test
jmp
xchg
push
or
jns
ret
pushf
jae
add
movsl
int
pushl
cmc
sbb
ror
sbb
mov
mov
and
xorb
subb
loop
jg
lods
cmp
inc
negb
insl
cld
cmpb
outsl
shlb
les
and
aad
cmc
outsb
or
jle
inc
ds
pop
xchg
sahf
dec
imul
or
rcr
data16
mov
aad
jnp
sbb
xchg
lahf
imul
dec
mov
negl
cmp
dec
or
mov
jge
fmul
mov
sti
xor
xchg
inc
rolb
les
rcl
sahf
jg
in
dec
mov
pop
cmp
int3
mov
test
fstps
das
sub
repnz
call
xor
popa
pushf
adcl
cmpsl
xchg
add
xor
mov
push
mov
push
inc
mov
and
pop
xchg
mov
mov
xor
cmp
jmp
xchg
repz
add
dec
rcll
cmp
loope
cmp
loope
xchg
xor
dec
rcrb
push
mov
xlat
inc
push
repnz
mov
dec
adc
fbld
push
inc
inc
cmpsb
data16
pop
inc
cmova
adc
add
in
mov
sbb
fldl
push
stos
bswap
mov
outsl
js
push
scas
shlb
enter
into
dec
add
jge
aam
jne
mov
or
xchg
ds
or
mov
out
push
fdivs
in
out
iret
push
xchg
and
jmp
adc
jnp
adc
xchg
mov
dec
mov
dec
pop
jb
je
js
sub
pop
ljmp
test
js
ret
sub
inc
mov
inc
or
sti
fdiv
out
inc
inc
jl
mov
sahf
jne
jp
test
dec
inc
imul
stos
xor
std
push
cmpsb
lock
sub
popa
pusha
popf
rcrb
xchg
or
push
insb
sbb
xchg
repz
jnp
inc
inc
lret
push
jno
lea
jecxz
push
inc
pop
xor
in
adc
bound
cmpsl
mov
cmp
clc
jp
rorl
or
lods
and
dec
mov
loope
rcr
inc
aas
ds
jne
jns
pop
clc
and
cld
or
pop
xor
mov
sbb
gs
or
pop
cmp
mov
js
fdivl
dec
cs
and
pop
icebp
mov
push
mov
mov
add
dec
lods
sahf
or
rcrb
cmc
sbb
xchg
test
cmp
insb
test
int3
jmp
nop
push
sub
and
add
add
daa
cmp
xor
dec
movsl
outsl
testl
xlat
sub
xchg
mov
adc
ss
xlat
inc
or
xchg
cmc
loope
add
inc
and
adc
push
gs
loop
insl
or
pop
add
scas
popa
jns
mov
sub
mov
xchg
push
jge
dec
or
pop
in
repnz
adc
andb
cld
jg
pushl
pop
sbb
or
gs
mov
mov
mov
and
lds
mull
pop
fsubr
mov
mov
lcall
add
in
movsb
inc
add
popa
dec
adc
lcall
sbb
xchg
aas
arpl
push
mov
jns
pop
inc
iret
jmp
xchg
mov
aad
fnstsw
je
das
cwtl
push
add
mov
cmpsb
mov
mov
cs
insl
pushf
dec
pop
lret
pop
push
xchg
in
fs
sbb
dec
pop
sbb
jo
inc
hlt
clc
xor
sub
mov
sbb
mov
pop
push
stc
pop
shrl
push
cmp
cld
scas
lahf
xor
sbb
dec
xchg
add
jo
mov
push
dec
mov
mov
mov
mov
ljmp
pop
cltd
adc
andl
mov
cmp
das
dec
dec
gs
in
pop
adc
andnps
inc
cmpsb
push
or
cmp
cwtl
or
loope
jae
jl
inc
fs
repnz
inc
stos
sub
dec
push
test
jmp
push
push
repz
push
xor
aas
pop
xchg
cmp
add
mov
sbb
jecxz
mov
lcall
jo
rol
popa
imul
test
mov
sbb
jl
subl
movsl
inc
insb
data16
jp,pn
jnp
in
int3
inc
cmp
inc
sub
ret
ret
add
cmp
aaa
cmp
cmp
cmp
sbb
roll
cmp
std
cmp
imul
lods
orb
movl
enter
mov
or
pusha
imul
les
clc
out
jmp
xor
roll
inc
dec
adc
jbe
sbb
lret
lcall
mov
dec
adc
cs
pushl
pop
sub
jne
xor
imul
dec
outsl
lods
or
add
test
xor
jl
mov
lret
xlat
xor
sbb
test
mov
and
and
in
mov
push
xchg
jmp
ja
push
scas
dec
or
lcall
jo
and
ds
popa
jecxz
add
sub
movsl
jb
cmc
dec
lock
test
shl
mov
cmpsl
push
int
jb
sub
rorb
cli
mov
xchg
std
xlat
movsl
jns
and
popf
mov
cmpsb
cs
pop
inc
inc
cmp
movsl
in
push
sub
mov
mov
push
sub
lret
bound
or
sub
xor
call
adc
dec
mov
leave
pop
and
mov
xchg
mov
pop
aas
dec
lret
xchg
xchg
inc
jp
cs
bound
push
and
push
and
cmp
mov
mov
mov
sub
mov
push
test
pushf
and
mov
mov
or
sub
mov
jnp
lds
lcall
mov
mov
xchg
sbbl
cli
into
lock
out
mov
sbb
pop
mov
cmp
jmp
popf
adcb
jae
fisttps
xchg
jecxz
mov
inc
xchg
sbb
and
jg
out
add
insl
les
ljmp
pushf
mov
xor
xor
rcrl
jae
jns
xchg
jns
or
mov
fs
aam
lret
mov
fisubrs
iret
mov
fldcw
or
bound
mov
ljmp
iret
daa
clc
fs
xchg
cmp
mov
jge
call
fists
fmul
xchg
push
xor
adc
adc
aam
cmpsl
push
inc
mov
pop
fucom
outsb
in
std
dec
inc
test
cmp
outsl
aas
hlt
jbe
mov
sbb
or
divb
cs
mov
insl
push
mov
js
jl
inc
sti
scas
and
mov
insb
fisubs
lcall
xor
jo
xchg
add
stc
sahf
lcall
lret
fs
mov
add
jo
mov
sbb
adc
adc
test
adc
lcall
ror
lds
sti
mov
in
add
pop
pop
out
push
addb
inc
sub
xchg
movsb
les
jo
pop
lahf
jl
and
orl
mov
xor
fnstsw
mov
in
xchg
imul
push
sbb
loope
adc
addr16
aas
adc
push
pop
xchg
cmpsb
push
sub
dec
repnz
push
mov
decb
scas
fbld
adc
rcrl
inc
pop
dec
or
sbb
divl
sbb
insb
stos
ds
bound
les
mov
rorb
sbb
add
leave
or
mov
imul
mov
jp
jmp
shrb
push
test
movups
xchg
rclb
push
sbb
in
mov
cld
cmp
adc
push
dec
lds
stos
sub
add
lret
fcoml
orb
adc
jg
lea
daa
dec
cmpsb
aas
jnp
lock
roll
outsb
nop
mov
dec
outsb
xchg
push
test
pop
aad
jns
loop
fildl
loop
movsb
mov
sub
in
cmp
cmp
idiv
dec
sahf
push
js
jne
mov
jo
cwtl
xchg
iret
push
push
jo
sbb
int3
xor
call
iret
dec
mov
or
push
fdivrl
cmpsb
incb
and
push
lret
push
xchg
adc
push
ficomps
jp
mov
ret
jge
fwait
mov
cmc
testl
outsl
movsb
mov
jne
push
roll
outsb
gs
hlt
cmpsb
jge
or
or
inc
or
mov
int
jmp
test
lock
add
pushf
pop
popa
daa
clc
dec
xor
stc
inc
xor
mov
or
arpl
movsb
shrb
mov
lock
cmpsb
mov
loopne
xchg
dec
pop
lahf
xchg
xchg
insb
ret
fistpl
adc
js
ficoms
or
mul
in
jle
xor
mov
addr16
daa
sub
lods
mov
movq
xchg
enter
and
sub
mov
or
mov
pop
movsb
add
mov
data16
sarl
mov
inc
stos
mov
and
xorb
mov
je
add
call
mov
add
sahf
mov
push
cmp
out
push
mov
aaa
sti
mov
dec
inc
inc
aaa
jg
mov
ljmp
dec
cmp
cmc
sbb
mov
add
mov
xor
lret
into
jnp
dec
in
out
fldenv
imul
dec
adc
std
push
cmpb
sub
add
hlt
cmc
arpl
jbe
imul
mov
add
jmp
adc
stos
mov
repz
lods
pop
pop
in
jb
jp
sahf
lcall
dec
data16
push
ja
dec
adc
inc
data16
mov
ds
sti
cmp
fisubrl
mov
lea
ja
dec
cltd
lods
cmp
push
popa
or
jmp
pop
push
imul
loope
xor
push
add
loope
aas
nop
sbb
inc
inc
outsl
cwtl
das
iret
fnstsw
add
lock
push
out
pop
jl
pop
xchg
stos
mov
adc
pop
in
ret
lret
push
inc
push
push
sahf
orb
pusha
and
pop
jo
xchg
dec
push
sbb
mov
subb
xchg
jecxz
in
pop
add
jmp
lahf
add
js
imulb
lret
ret
fldl
add
push
cmpsb
inc
ret
lret
xchg
or
sbb
insb
mov
and
sahf
adc
fwait
or
sub
clc
mov
xor
icebp
pop
es
inc
sbb
adc
mov
and
addr16
test
mov
mov
flds
pop
mov
mov
int3
mov
xchg
or
jmp
mov
addl
mov
jge
and
fildl
mov
and
mov
test
mov
xchg
je
push
repnz
inc
dec
loope
in
xchg
push
loopne
dec
cwtl
inc
daa
cwtl
xor
psubusw
sbb
bound
xchg
sbb
xchg
push
xchg
sarb
jmp
inc
and
lcall
sbb
xchg
mov
mov
arpl
dec
mov
xchg
sti
and
and
dec
aad
add
stos
or
std
cmpsl
insl
and
mov
mov
repz
lea
cmpl
lea
push
stc
pushf
mov
lods
push
lock
or
idivb
test
nop
xchg
addr16
and
inc
int
movsl
push
and
bound
fildl
xchg
arpl
mov
lret
sbbb
cltd
push
rorb
push
shl
pushfw
or
sbb
lcall
pop
xchg
jae
push
xchg
loop
roll
adc
aaa
dec
push
pop
jo
sub
cmc
lea
fsub
enter
ja
scas
pop
mov
scas
push
icebp
int
cmp
inc
mov
in
jle
or
fists
ss
bound
cwtl
lahf
loope
jmp
xchg
push
imulb
cmpb
mov
test
jno
faddl
inc
mov
iret
push
mov
icebp
stc
movl
outsb
add
jecxz
loopne
sub
insb
mov
cwtl
sub
sbb
xor
mov
jne
cmc
xor
adc
in
movb
sub
lock
test
stc
xor
push
out
xor
adc
ret
adc
in
ret
dec
rep
sahf
add
or
add
pop
push
sbb
and
push
notl
xchg
fdivrs
cmp
and
cwtl
or
outsb
outsl
pop
test
lods
call
mov
sbb
pop
or
addr16
mulb
aam
lcall
loopne
fcoms
mov
test
popf
loopne
sbb
jb
mov
pop
push
sbb
movsb
jb
loope
or
fdivrs
sbb
aaa
sbb
push
xlat
sub
into
jl
cmpb
inc
mov
hlt
xchg
jae
xchg
addr16
lret
mov
scas
and
in
out
dec
adc
stc
fnsave
mov
push
pop
dec
cmp
push
or
inc
jnp
out
push
jnp
popf
enter
add
jne
inc
dec
stos
sub
roll
std
test
cs
test
jae
mov
fld1
enter
push
das
xor
loope
mov
xchg
jle
adc
sbb
or
cmpsb
jmp
jg
inc
test
ret
dec
xchg
das
adc
movl
jge
pusha
cmp
je
enter
fists
sbb
addl
addb
inc
jno
cmp
add
sub
dec
sub
fiadds
mov
ds
xor
xor
nop
sbb
or
ret
push
cwtl
lock
cwtl
mov
jmp
mov
mov
xor
jmp
sbb
bound
lahf
mov
xor
les
lcall
aad
repnz
ss
rcrb
clc
pop
pop
sub
cmp
stc
inc
jne
sahf
mov
dec
je
lds
adc
push
cmp
and
in
mov
inc
testl
ret
or
ret
xorl
gs
sbb
ret
cmp
sub
push
lods
hlt
push
ficoml
jne
dec
imul
cmp
and
pop
call
hlt
insl
jge
jnp
outsl
insl
inc
or
mov
fsubr
stos
sub
insb
mov
in
mov
push
or
sub
pop
insl
sbb
xor
out
dec
lods
push
test
mov
call
mov
stos
mov
lcall
std
sbbl
imul
fmuls
mov
inc
cltd
sub
popa
sub
in
sub
lds
adc
mov
jns
loopne
outsl
insl
in
leave
fwait
add
mov
and
add
je
push
dec
bound
mov
imul
int
cmpsl
fcoms
and
cmp
cmp
das
clc
clc
sub
stos
inc
or
outsb
pop
es
and
stos
sbb
push
lahf
int
mov
sbbb
xlat
daa
pop
daa
and
push
mov
enter
rcrl
fdivr
test
test
lahf
xor
mov
cmc
sub
xchg
jl
mov
jno
xchg
mov
lcall
cmp
jne
push
dec
aam
fnstcw
and
lcall
or
pop
mov
subl
and
add
movb
push
sub
push
mov
sub
adcb
cmpsb
pop
inc
cmc
adc
movsl
or
jge
sbb
shll
jo
add
mov
sub
pop
shl
add
mov
inc
stos
out
mov
pop
xchg
jmp
sub
and
in
es
inc
and
adc
mov
add
pop
lea
es
dec
and
jae
jae
loop
or
jnp
and
push
add
add
pusha
mov
pop
fistl
mov
rolb
stc
repz
aad
or
mov
push
jmp
out
out
ds
mov
sub
aam
push
lea
pop
jno
aad
inc
mov
pop
out
lret
in
shll
cmpl
ret
scas
add
lods
jno
div
fildl
mov
push
movsl
sub
cmp
add
push
js
cmp
pop
pop
daa
cmp
push
dec
add
test
icebp
div
popf
mov
push
es
xchg
or
xchg
dec
xchg
cmpsl
xor
inc
andl
push
xchg
dec
ret
xchg
or
loop
je
das
popf
pop
mov
add
out
lock
sti
and
in
scas
je
inc
scas
out
dec
rcrl
cld
mov
js
andl
fistpll
cs
push
cmp
sub
pop
adc
test
pop
fistps
into
cmp
in
xchg
test
dec
adc
nop
jg
out
fcomps
xchg
inc
dec
es
pusha
in
mov
mov
jbe
rorb
pop
sarb
sbb
cmp
xchg
mov
dec
shl
cltd
ret
and
xchg
xor
into
mov
out
call
out
mov
pop
pop
jecxz
xchg
mov
stos
ljmp
mov
hlt
xchg
push
xor
out
pop
fwait
xchg
adc
mov
or
cmp
out
push
jb
pop
fimull
adc
dec
add
out
xor
adc
pop
cmp
cmpsb
fdivl
aaa
mov
syscall
xor
push
jg
jb
adc
adc
jb
cld
inc
aas
add
aam
pop
pop
xlat
pop
pop
repnz
dec
sub
aad
leave
push
pop
inc
cmp
sbb
cwtl
movsb
mov
and
out
enter
aaa
adc
and
nop
adc
xor
inc
add
das
adcb
fwait
sbb
lretw
mov
add
stos
pop
lcall
lea
dec
mov
movsb
xlat
imull
xor
add
pop
not
stc
sti
xchg
test
inc
xor
loope
mov
adc
cld
jg
movsl
mov
dec
popa
push
out
shll
jnp
adc
adc
ret
filds
shl
sbb
data16
addr16
aad
mov
arpl
dec
or
xchg
mov
fucom
inc
rcr
ja
pop
scas
fs
push
and
ficomps
sub
mov
cltd
and
pop
imul
pop
push
ja
or
xchg
shlb
loop
in
aas
lods
push
imul
or
xchg
loop
add
stos
stos
out
int3
pop
xchg
mov
jecxz
mov
outsl
icebp
push
mov
push
sbb
jl
jae
xchg
pushf
pop
leave
test
jo
xchg
iret
sub
pop
sub
in
idivl
lahf
xor
xorl
mov
stc
push
add
sbb
xlat
add
sbb
mov
test
callw
lods
pop
hlt
jns
imul
rcl
mov
fdivr
movsb
dec
mov
mov
lds
sbb
daa
jno
stc
sbb
xchg
and
mov
lcall
cmp
fs
cmp
push
jo
cmc
jb
add
dec
fisttpl
mov
scas
je
test
mov
pop
in
lcall
das
lret
adc
leave
addr16
inc
mov
iret
push
jmp
mov
and
and
push
jb
dec
ss
fcmovne
inc
cmp
test
addr16
repz
mov
mov
and
mov
dec
dec
adc
xchg
sbb
push
pop
jne
into
adc
jne
out
in
insb
and
int
lds
and
sbb
jae
xlat
in
imul
out
and
data16
adc
adc
pusha
pusha
fwait
testb
arpl
push
inc
mov
push
test
inc
addb
pop
cmp
add
loop
xchg
pushf
adc
dec
addr16
shrl
sbbl
dec
dec
loop
in
shll
inc
push
mov
insl
in
jae
shlb
pop
fwait
js
cmp
repnz
roll
xor
lds
inc
das
enter
xchg
cmpsb
lret
daa
icebp
adc
xchg
mov
popf
sub
or
es
mov
std
push
aad
mov
mov
ss
rcrl
fdivl
jae
or
sub
daa
sub
pop
dec
testb
mov
push
dec
mov
jne
jae
lcall
mov
push
xchg
pop
cld
cli
push
inc
sbb
insl
popf
sub
sarb
lcall
cwtl
data16
xchg
mov
lods
les
pop
cmp
mov
das
adc
inc
push
mov
pop
push
or
in
iret
pop
in
rcrb
out
sub
mov
aad
mov
push
sbb
outsb
pop
dec
call
cltd
cmp
adc
jp
leave
jg
push
mov
ja
xor
push
roll
andb
out
add
or
subb
loop
js
imul
gs
fsubrl
mov
dec
into
push
fwait
bound
rolb
sub
or
inc
jnp
iret
push
pushf
scas
out
outsb
icebp
jecxz
jle
cmpsl
dec
cmpb
pop
xchg
or
xchg
iret
mov
mov
push
push
andl
and
loope
mov
sbb
fmul
pop
jle,pt
insb
push
ja
dec
cmp
or
xor
cmp
lods
or
test
adc
adc
notl
push
mov
inc
dec
or
orl
cwtl
mov
andb
in
dec
popa
mov
loop
jecxz
insb
cmpsl
std
mov
dec
pop
dec
fucomp
je
push
scas
daa
lahf
ret
xor
out
and
ds
pop
jge
fisubs
jns
or
cmp
in
cmp
push
pop
mov
orb
mov
jnp
mov
in
test
jg
scas
push
cmp
mov
jg
int
inc
sbb
cmp
cmpsb
dec
sbb
xchg
gs
push
into
add
push
jle
dec
push
daa
mov
push
sbb
cmp
mov
loope
jmp
gs
push
xchg
push
test
adc
sbb
cmpsl
dec
lcall
in
shlb
mov
insb
insl
scas
sbb
push
jl
adc
xor
sbb
adc
cmp
fsubs
out
int
xor
jnp
ret
int
sar
pop
xor
mov
jle
fisubs
popl
jl
mov
rclb
cs
jg
sar
frstor
adc
inc
mov
cmp
fnstsw
xchg
push
xchg
or
or
daa
repz
jmp
adc
jns
in
cltd
das
bound
and
adc
and
jge
push
sbb
out
int3
pop
add
lret
push
sub
daa
into
inc
xchg
mov
stos
sbb
adc
in
fnstcw
inc
stos
xchg
pop
das
stos
cli
inc
fs
dec
pop
cli
insb
jl
dec
packsswb
jge
sub
test
cmpsl
test
sub
repz
xor
sarl
aas
dec
push
xchg
and
fstpl
data16
dec
incl
mov
insb
rcll
jp
out
dec
out
arpl
pop
pop
sbb
imul
sub
call
daa
scas
mov
into
xchg
push
insb
cmpsl
pop
cmp
loopne
movsb
ficomps
aad
jbe
lret
lods
add
je
xchg
out
push
pop
pop
dec
mov
test
sbbl
mov
addb
sbbb
xchg
mov
cmc
cs
inc
in
mov
cmc
repz
int
in
fs
std
outsl
jno
fst
outsl
sbb
sbb
push
ret
jne
mov
xchg
cltd
sbb
movsl
jl
scas
loope
ja
mov
arpl
push
add
fs
cmpsb
test
ficoml
sub
mov
and
or
mov
mov
int3
xchg
xchg
cmp
pop
add
sub
inc
arpl
iret
out
imul
sbb
sub
push
lds
dec
sbb
popf
mov
clc
lock
loopne
aaa
sar
fisubl
ss
icebp
lcall
fdivr
mov
std
jp
addb
shll
scas
xor
outsb
push
aad
mov
mov
sarb
mov
cmp
push
adc
movsl
movsl
push
iret
cmp
pop
repz
fsubp
cs
out
inc
or
gs
cmp
sbb
mov
das
test
stos
scas
popa
mov
mov
mov
xchg
jno
add
cmpsb
jae
aas
ja
ljmp
shlb
jg
and
sbb
xchg
out
sub
int3
pop
and
pop
jo
out
fldenv
movsl
cmp
inc
jnp
aad
jle
xchg
mov
pop
adc
mov
jmp
xchg
inc
mov
pop
sti
xor
outsl
fiadds
out
pop
je
and
sub
pop
cmp
xlat
dec
jge
pop
mov
or
mov
aas
arpl
mov
rorb
imul
adc
movb
push
sub
das
sbb
arpl
sub
sahf
fldcw
shll
sbb
enter
jecxz
push
add
dec
mov
pop
pop
addr16
jns
cmp
mov
sbb
mov
icebp
scas
xor
mov
pop
push
add
jae
xor
add
xchg
jle
bound
icebp
xor
cli
pop
jbe
mov
cwtl
shl
clc
add
mov
jnp
xor
je
imul
push
bound
jbe
daa
and
cmpsl
fildll
outsl
hlt
lret
push
ret
arpl
icebp
pop
cmp
sbb
inc
xor
add
test
mov
in
imul
xchg
orb
shl
movsb
sub
xchg
shr
pop
into
jbe
cmp
sahf
cmp
je
xlat
xchg
add
sbb
sti
rorl
mov
pop
aaa
insb
stc
mul
test
xchg
les
js
into
mov
cmp
cli
dec
mov
mov
push
adc
and
out
fcom
in
pop
aam
cmc
lock
scas
mov
icebp
sub
push
je
ret
lret
jae
cmp
push
aad
hlt
insb
fs
sbb
push
es
pop
fcmovnu
xchg
aaa
dec
mov
xor
cmpsl
sbb
lods
mov
je
cltd
mov
push
pushf
xor
add
cmc
pusha
jae
cwtl
jp
lret
mov
cmp
and
outsl
cld
aam
mov
in
jp
or
stc
and
jb
shlb
imul
rorl
sub
jb
push
cmp
ja
cltd
rorb
sbb
mov
mov
add
fiaddl
dec
adc
dec
mov
xchg
dec
fidivs
cmp
loope
pop
scas
test
scas
add
cmp
sub
movsl
sbb
adc
mov
mov
lret
jle
js
out
mov
aas
fisubl
or
pop
stc
mov
mov
pop
add
inc
loope
push
jns
mov
fmull
xchg
ret
mull
pop
mov
insl
pop
pusha
add
pop
push
xor
cmp
inc
pop
test
out
push
inc
mov
and
mov
mov
aad
insb
jne
out
mov
enter
xor
pusha
cltd
lcall
mov
and
mov
outsb
enter
cmovne
push
std
cs
or
test
shrl
pop
je
jnp
cmc
scas
lcall
jecxz
movsl
adc
cmp
shll
or
ret
dec
lcall
aas
gs
xor
adc
adcb
dec
dec
mov
and
mov
xchg
mov
mov
pop
mov
or
pushf
dec
or
imul
cwtl
aas
out
pushf
loop
stos
and
pop
rolb
aam
add
aam
test
testl
shll
dec
outsl
cmpsl
mov
repz
sub
test
mov
nop
rorb
jno
into
xor
push
imul
pop
ret
inc
mov
movsb
ljmp
sub
aam
mov
xor
rcl
mov
cmc
adc
test
xchg
sub
jle
imul
inc
push
mov
lahf
xor
movsb
je
in
leave
mov
ss
mov
das
sbb
and
out
cmp
std
xor
inc
and
sub
sub
and
xor
mov
inc
mov
popf
mov
xor
dec
ret
xchg
cmp
das
sahf
mov
sub
incb
rcrl
das
or
fsubrl
mov
cmp
ja
adc
mov
and
sub
mov
push
aaa
add
je
or
popa
inc
aaa
fisubs
dec
push
dec
pushf
mov
sbb
push
test
ljmp
dec
jo
psrld
fisubrs
dec
mov
pop
dec
in
shrl
push
imul
filds
out
cs
mov
dec
push
ds
push
pop
add
idivb
in
testl
or
mov
push
fidivl
and
pop
jnp
or
xor
clc
adc
or
pushf
stc
fldenv
pusha
insb
ss
loopne
or
fistps
lods
stc
outsb
jae
std
xor
pop
dec
cmp
or
in
xchg
icebp
adc
jmp
in
inc
fwait
dec
sti
js
adc
inc
pusha
jle
mov
dec
jp
cmp
sbb
xchg
mov
inc
loop
fcoms
int
call
xchg
xchg
repnz
shlb
out
sub
add
mov
inc
paddsb
ljmp
pop
scas
adc
pop
inc
push
sbb
lret
mov
out
rep
inc
insb
lds
ljmp
xchg
cs
and
pop
leave
jecxz
mov
xor
cmp
jge
icebp
and
mov
lock
push
outsb
dec
repz
daa
cmp
cli
imul
adc
lea
jl
imul
mov
inc
popa
add
out
xlat
sub
lahf
jne
in
pop
push
adc
mov
scas
push
out
dec
les
inc
cmpsb
mov
das
or
mov
shlb
iret
cmp
notl
mov
ss
lret
or
faddl
mov
cmp
sub
cmp
sbb
adc
lcall
lret
movsb
and
mov
cs
out
xor
hlt
jne
add
jbe,pt
xlat
xor
xor
jae
push
lods
dec
mov
push
out
lds
out
and
fstpl
ror
ror
and
dec
stos
in
push
xor
inc
pushf
mov
or
stos
mull
imul
push
pusha
leave
mov
aam
lods
lahf
sub
add
adc
adc
notl
cmpl
rcll
pop
aad
cli
jb
pusha
fmuls
mov
push
movsb
add
outsl
ss
test
icebp
ds
and
push
stos
push
call
lret
loop
push
mov
or
sbb
les
dec
dec
adc
aas
mov
hlt
test
xor
pop
stc
adc
push
stos
and
mov
xchg
lea
jge
test
mov
push
in
dec
add
jbe
shll
enter
sbb
loopne
add
in
leave
divb
dec
cmp
arpl
jmp
scas
xor
jne
inc
lods
pop
ret
loopne
mov
add
xlat
sbb
mov
loop
leave
fdivrp
ret
xchg
dec
cli
out
and
xchg
hlt
xchg
jo
and
cltd
push
sti
insl
imul
xchg
mov
or
mov
add
mov
push
rcrb
aas
inc
xor
or
sub
adc
into
sub
out
lea
xchg
mov
jae
lds
mov
push
xor
adc
pop
push
jge
sbb
outsb
das
xchg
movsl
push
sbb
aam
dec
lcall
xor
js
or
loop
adc
sbb
dec
fucomi
mov
aas
pop
cs
push
cmc
pusha
ror
inc
movsb
xchg
inc
cmpsb
jbe
and
std
adc
dec
pop
xchg
popf
cwtl
inc
or
in
push
sbb
divb
jo
mov
jns
jp
push
and
mov
or
jno
mov
jb
rorb
mov
dec
lds
sub
imul
andb
or
std
pop
xor
sarl
out
aam
loopne
jp
cmc
mov
sbb
pop
fidivrs
es
les
arpl
cmp
and
and
mov
mov
ret
and
stc
pop
mov
cmp
insb
clc
sahf
aam
adc
sbb
cmp
mov
cmp
subb
inc
ss
fwait
cli
sbb
dec
test
mov
fcoms
push
test
in
in
es
pushf
scas
fimull
fdivl
test
adc
cmp
jmp
aam
out
jg
aaa
leave
jo
jno
fdivl
pop
sti
mov
mov
mov
fmuls
ret
add
out
xchg
mov
mov
test
cltd
add
xor
out
adc
shl
fistl
sub
ljmp
enter
sub
mov
cmp
sub
sti
xor
dec
ficomps
ds
int
adc
jne
hlt
mov
fs
dec
pop
jg
jnp
sbb
pop
or
mov
fidivrl
hlt
inc
mov
sbb
cli
mov
repz
xchg
jno
fwait
mov
mov
fildll
jns
mov
das
cwtl
or
adc
outsb
dec
testb
mov
cmp
mul
lcall
mov
sbb
push
test
xor
daa
add
jne
andl
cmpsl
test
jge
nop
xor
aam
cmpsb
xchg
jg
pop
out
xchg
lock
lods
sub
cltd
aaa
imul
test
int3
mov
mov
int3
jecxz
xchg
pop
push
test
addr16
dec
jl
mov
enter
fwait
popa
cmp
xchg
into
push
xor
scas
jns
subl
popa
and
xor
or
shr
xor
add
or
mov
and
lcall
pop
out
movsb
mov
std
dec
pop
negb
push
loope
mov
dec
pop
cmp
push
out
lahf
inc
rol
aas
inc
adc
gs
push
push
ret
lods
mov
jle
lods
push
imul
mov
xlat
inc
push
add
push
pop
dec
inc
adc
mov
dec
ret
std
jp
sahf
mov
xchg
mov
inc
push
insl
mov
or
aaa
pop
das
adc
and
add
sbb
sub
adc
mov
mov
pusha
je
cmp
jae
sub
adc
in
nop
adcb
adc
dec
popf
add
es
fwait
lds
nop
jp
in
add
arpl
inc
fs
and
jl
xor
int
lret
jle
or
sub
mov
mov
fldcw
test
or
add
jne
lcall
bound
sti
jb
inc
push
stc
xor
adcb
push
aad
pusha
pushl
mov
fdivr
pop
fistl
pop
icebp
inc
lcall
sahf
and
or
imul
inc
aaa
and
mov
cmpsl
insb
sub
mov
int
add
imul
data16
jns
ret
cmc
inc
xor
rorl
adc
lea
add
lea
repnz
pop
inc
aaa
dec
mov
sub
add
lret
imul
iret
jne
push
dec
bound
lret
cmp
and
aas
cltd
iret
lock
sub
arpl
and
xchg
sahf
loope
jle
jl
out
outsl
lods
aaa
or
pop
dec
adc
fimuls
fwait
mov
out
sahf
xchg
mov
push
push
sbb
add
add
gs
xor
add
jg
sub
mov
jmp
push
dec
inc
popf
popf
fistpl
js
mov
pop
cmp
adc
inc
daa
and
jmp
sahf
popf
cmc
lret
pusha
add
mov
insl
and
outsb
imul
xchg
daa
movsl
insb
ret
pop
fucomi
and
mov
pop
mov
sbb
inc
cmp
pop
addr16
jp
roll
mov
aaa
lea
sahf
aad
fcmovnb
fiadds
push
xchg
insl
fsubl
cmp
orb
flds
lea
roll
out
stos
ret
scas
into
rcrb
and
orl
scas
int
pop
cmp
fistps
es
imul
jp
out
jne
inc
push
dec
shlb
add
cwtl
pusha
and
in
cli
std
jg
stos
and
popl
mov
add
and
add
mov
cltd
cs
inc
lret
in
lret
xor
xor
sti
mov
je
orl
sub
nop
loop
mov
gs
pop
stc
mov
movsl
popf
aam
pusha
cmpsb
test
imul
add
cmp
out
xor
pop
ror
mul
dec
ret
test
sub
fidivs
xchg
and
sti
bound
xor
fs
mov
xchg
inc
lahf
pop
adc
cwtl
mov
das
test
in
insb
xchg
iret
les
int
jp
dec
mov
repnz
inc
mov
cmpsl
lods
xchg
test
dec
in
lret
hlt
test
mov
xlat
mov
and
mov
loope
and
shlb
repz
mov
xor
je
call
jle
adc
les
and
adc
divb
inc
jno
sbb
fstpl
push
jle
inc
sarl
clc
enter
and
nop
in
in
adc
push
dec
mov
add
mov
sbb
fisubrl
stos
aas
stos
push
inc
xor
and
xchg
out
xlat
test
fwait
sarb
mov
pushf
sbb
incb
rorl
push
lret
mov
out
std
ret
cmpsb
lahf
mov
pop
adc
fwait
pop
out
inc
outsl
test
mov
sub
sarl
inc
jl
cmc
pop
pop
mov
fsubs
xor
sub
xchg
lea
cmc
int
sub
inc
cmpsb
adc
adc
loop
cmpsb
mov
testb
pop
fsubs
pop
push
mov
xor
repnz
fidivs
loop,pn
add
dec
and
push
clc
xor
push
ret
pushf
cs
ja
fwait
in
xchg
pop
aaa
popa
data16
xchg
pop
and
cwtl
hlt
test
xor
cmpsl
dec
stc
mov
push
cmpsb
add
mov
aaa
push
sbb
daa
fs
scas
pop
fisubrl
in
cmpsl
fcomp
jbe
movsb
push
test
add
mov
jge
mov
sbb
adc
mov
mov
mov
mov
and
roll
aas
mov
imul
pop
fnsave
and
stos
in
add
test
lea
loope
pop
aaa
push
test
test
mov
xchg
cmp
sahf
test
dec
cmp
jle
sbb
sub
out
pushf
jmp
cld
fsub
sub
enter
lret
push
imulb
icebp
and
fdivrp
mov
push
out
push
pop
fmul
sbb
sub
and
mov
xchg
aaa
inc
add
pop
push
hlt
in
gs
mov
pop
mov
aas
pop
in
and
cwtl
add
push
dec
push
jne
mov
pusha
or
inc
jae
in
inc
sbb
jns
push
push
gs
mov
cwtl
fidivl
push
fstps
and
lret
dec
mov
and
loope
aas
imul
xchg
adc
aaa
add
es
push
shrl
adcl
arpl
dec
adc
cwtl
pop
add
jno
cld
push
ret
lods
leave
pop
mov
pushf
xchg
sbb
push
mov
sbb
stos
loope
pusha
pop
inc
xchg
or
inc
out
mov
cmp
push
dec
mov
cltd
aam
lea
jl
lcall
int3
xor
in
sub
mov
mov
adc
aam
adc
mov
test
pop
sbb
xor
mov
lret
and
xchg
or
jecxz
mov
dec
mov
adc
aas
cld
hlt
or
adc
or
rorl
push
push
adc
mov
jae
inc
ret
pop
push
xor
pop
xchg
into
pop
bound
pop
test
or
mov
sbb
xor
in
mov
jmp
add
aad
jmp
addl
dec
and
cmp
and
insb
outsb
adc
adc
xchg
ja
fbstp
stos
mov
fs
xchg
scas
dec
into
int
repz
and
aaa
fdivrs
xor
sub
or
mov
mov
and
test
icebp
pop
notb
pop
sub
sbb
mov
lret
or
int3
mov
or
imul
mov
movsl
jle
pop
jge
mov
pop
sub
addr16
add
dec
andl
scas
xchg
jl
mov
cmp
out
push
push
adc
and
sub
sbb
fnstcw
pusha
icebp
pop
jmp
and
inc
mov
xor
lcall
nop
je
inc
mov
icebp
mov
lods
fldenv
xchg
and
lahf
mov
divps
fcompl
jb
mov
call
int3
mov
cltd
fbld
divb
loop
mov
push
es
push
add
aaa
inc
add
inc
lods
mov
xchg
and
in
adc
jb
imul
add
ljmp
add
lret
add
cmp
mov
and
mov
nop
mov
hlt
outsl
scas
jmp
test
daa
mov
xor
xchg
test
dec
add
sbb
xchg
shrl
mov
push
xchg
push
mov
or
inc
into
subb
out
ret
lret
movsl
aam
and
pop
test
push
push
push
xor
xchg
mov
adc
clc
fcmove
push
stc
push
and
jp
jnp
adc
movsl
fcmove
addr16
imul
xchg
add
inc
jae
pop
jge
jl
pushf
repz
imul
cli
push
mov
xlat
out
and
es
out
and
cmp
in
cmpb
loopne
psraw
test
jmp
pop
sbb
int3
testl
loopne
jb
jge
dec
addr16
bound
mov
adc
push
pop
add
insl
and
outsb
inc
pop
xor
lret
jns
inc
int
xchg
int
in
mov
jno
mov
std
sti
inc
sub
dec
lcall
sti
mov
in
les
xor
jno
mov
adc
in
es
adc
xor
loope
push
lods
gs
mov
jb
cmp
cs
or
sub
std
stos
adc
xchg
or
cmpsb
jp
xchg
js
inc
jno
lock
mov
inc
and
xchg
pop
fwait
or
mov
fisubl
cld
aam
pop
fdivr
dec
inc
es
jecxz
dec
gs
cmp
std
adc
sar
jmp
cmp
jmp
fiaddl
push
cmp
arpl
lea
pop
cmp
mov
sar
sbb
dec
mov
les
fcmovnb
xor
mov
popf
cli
mov
dec
lds
cmp
cmp
xor
in
cmp
pushf
loopne
push
xor
sub
repz
xchg
loopne
fisttpl
pop
cli
mov
mov
stc
lahf
pop
adc
je
dec
fistps
cwtl
mov
fidivl
sub
pop
cmp
cltd
and
mov
sub
sub
aad
xorb
test
mov
mov
cmp
shlb
sahf
xor
mov
inc
push
cmp
out
sub
push
mov
jne
movsl
fimull
jnp
enter
sahf
out
in
psllq
data16
lock
std
mov
mov
mov
int3
sbb
xorb
lahf
jno
mov
cmp
dec
mov
sbb
loopne
mov
jno
xlat
push
dec
inc
push
mov
das
adc
fiaddl
jmp
or
adc
fdivs
push
imul
mov
rcrl
into
aad
lods
mov
pop
insb
inc
dec
aaa
shll
sahf
jle
mov
ds
cmp
lods
test
cmpl
roll
cld
lods
pop
xor
aam
movsl
push
mov
adc
test
add
ljmp
inc
push
fisttps
shl
and
nop
sub
xchg
add
aam
sub
mov
jae
cmp
sarl
fldenv
scas
cmp
or
clc
xchg
imul
mov
adc
inc
mov
mov
inc
imul
icebp
mov
subb
and
dec
aas
mov
std
fstpl
dec
hlt
popf
mov
popf
popa
lret
cmp
adc
shlb
sbb
sarb
imul
add
movsb
pop
pop
add
fisubs
mov
cmp
cmp
inc
push
shr
jae
ror
sub
mov
call
mov
xor
call
popa
push
sub
push
and
xor
mov
xor
jl
jmp
mov
cmp
push
push
xchg
movd
lods
mov
add
aam
cmp
aas
ds
cmp
pmaxsw
sub
pop
arpl
mov
xchg
mov
xor
jge
faddl
inc
cmpsl
int
mov
flds
pop
lret
and
push
dec
dec
lret
jbe
push
mov
outsb
test
jge
dec
inc
push
outsb
sahf
ja
aaa
mov
insb
cmc
pop
push
arpl
cli
sbb
repnz
push
dec
out
adc
icebp
insl
daa
sub
ret
or
jle
xchg
push
adc
mov
cmpl
sub
mov
dec
xchg
xchg
adc
pcmpeqb
mov
leave
loop
xlat
les
ficoms
addr16
push
xchg
mov
fisubs
inc
leave
shlb
orl
push
jecxz
mov
aas
clc
lea
fwait
movsl
sbbl
popf
in
out
lahf
push
sub
jb
mov
adcl
enter
fstl
lahf
dec
mov
call
data16
mov
mov
data16
adc
xchg
xor
pop
xchg
ja
imul
push
adc
shll
xorb
pop
out
dec
jmp
xchg
scas
sub
fs
ljmp
std
push
jmp
mov
xor
stos
jo
cmpsl
sub
pushf
in
jae
xor
data16
scas
enter
in
arpl
stos
cs
test
push
jb
dec
pop
sbb
dec
pop
stc
stos
push
js
fsubs
inc
pop
push
mov
dec
push
mov
push
orl
les
out
push
subb
addb
in
xor
xor
xchg
out
into
out
dec
shrb
repz
xchg
jl
mov
ljmp
popf
loopne
inc
and
xchg
mov
dec
and
bound
or
negb
add
or
jmp
test
pop
dec
push
adc
fiadds
daa
push
clc
nop
push
sbb
pushf
ret
lret
mov
out
xchg
and
int
mov
lds
sahf
or
mov
dec
cld
xchg
xchg
lds
dec
fwait
cmpsl
xchg
fcmove
notb
inc
sbb
inc
and
shrl
push
or
and
inc
mov
int
rolb
sbb
inc
inc
int
mov
inc
popa
xor
jo
bound
xor
pop
nop
data16
add
push
xchg
mov
jg
cwtl
pusha
sbb
mov
xor
inc
shlb
xor
dec
cltd
mov
cmc
jmp
jo
push
inc
cwtl
mov
or
decl
cmp
out
jecxz
xor
cmc
and
aam
jnp
or
mov
mov
dec
cld
inc
pop
fsubr
jne
mov
push
in
cli
adc
push
mov
push
mov
adc
es
js
pop
movsb
pop
pop
and
ret
aaa
mov
cs
or
push
scas
jne
in
adc
inc
xchg
ss
add
fsubrs
push
xor
sbb
push
push
fs
sbb
aaa
aad
repnz
add
cmp
jbe
lods
add
dec
adc
adc
xchg
cmp
xor
ret
push
jae
test
data16
mov
dec
jnp
jl
push
cmpsb
push
mov
xchg
lock
addr16
cmp
into
jae
or
and
out
lds
jbe
lods
jmp
inc
or
orb
scas
out
xchg
stc
test
fucomi
pop
lret
dec
das
mov
jb
mov
sub
cmp
repz
loop
adc
lods
or
sahf
jo
jl
fsubl
lods
adc
and
sub
outsb
cli
xor
stc
push
hlt
scas
and
push
push
rcll
inc
inc
test
mov
mov
mov
sub
inc
gs
test
dec
or
sbb
dec
add
addb
in
cmp
adc
clc
cli
jae
int
lods
push
pusha
loope
arpl
mov
out
jmp
sub
pop
cmp
loop
or
or
sub
pop
cmpb
sahf
add
xchg
or
popf
sub
mov
cmp
daa
jbe
cltd
test
xchg
stos
cli
pmaddwd
xchg
push
push
jns
mov
xchg
imul
cmp
xchg
mov
jge
in
mov
enter
adc
lcall
mov
movsl
insl
xlat
sub
xchg
push
mov
push
mov
mov
adc
movsl
imul
pop
sbb
mov
pop
sbb
rorb
shl
testl
mov
push
xorb
arpl
fcomps
pop
sbb
or
fimuls
call
in
jl
into
mov
ljmp
insb
adc
inc
cmp
xlat
pop
or
fldcw
xor
adc
pop
cmp
sub
aaa
out
push
pop
shr
mov
test
divl
loope
xor
test
test
out
xchg
xor
test
call
sub
sbbl
jmp
aaa
fistps
add
mov
adc
decl
mov
fcomps
in
mov
andl
arpl
insl
xchg
inc
aas
lock
rcr
or
push
jecxz
jnp
adc
es
pop
cld
mov
mov
push
pop
pop
sub
pop
and
mov
pop
and
xchg
jns
sub
call
pop
loope
lret
or
je
fmuls
negb
sbb
cmp
xchg
dec
fadd
stos
xor
popa
jo
pop
fbstp
dec
jbe
pusha
jns
into
and
xchg
xchg
push
add
lds
js
pop
cli
adc
ja
dec
cmp
mov
rcl
mov
mulb
sub
shr
icebp
stc
sbb
mov
ret
aad
out
or
pop
mov
int
push
fs
pop
imul
cmp
arpl
loope
fcmovu
xchg
fmuls
loope
and
in
pop
lea
in
cmp
lret
sub
push
loop
xchg
adc
inc
stos
sahf
scas
xor
sub
je
mov
inc
test
scas
sub
mov
sub
cmp
jl
cltd
push
xchg
into
cmpsb
pop
test
in
inc
pop
and
mov
mov
sbb
mov
xchg
add
cmp
popf
repz
in
pop
sbb
mov
mov
stos
jmp
fstl
test
xchg
shrl
mov
jnp
stos
daa
or
hlt
inc
jge
lret
adc
mov
faddp
push
cmpsl
stos
ja
sbb
inc
dec
dec
les
in
hlt
lret
dec
fbld
push
jmp
sbb
lods
lock
mov
push
add
shll
inc
cmc
inc
jo
fs
dec
pop
nop
cmpsb
adc
mov
loop
shlb
sub
mov
loopne
out
and
push
stos
dec
ja
insl
add
enter
stos
mov
pop
loope
popa
fs
into
bound
jmp
jg
jne
push
add
push
insb
jge
mov
es
je
mov
adc
mov
leave
je
mov
pop
mov
sarl
mov
push
les
and
adc
das
mov
push
mov
adc
cld
mov
pop
mov
jbe
out
outsl
inc
mov
sbb
lret
pop
mov
and
and
pop
lret
pop
in
jecxz
mov
lods
movsl
push
dec
xor
push
dec
ret
xor
loopne
ret
sub
dec
pop
insl
ljmp
clc
push
mov
mov
cld
lahf
insl
iret
inc
mov
aaa
and
std
lret
adc
push
rclb
push
push
fistpll
shr
sbb
inc
dec
frstor
jl
pushf
or
cmp
sub
jle
push
push
pushf
imul
in
mov
jbe
cmpsl
xorb
or
xchg
loopne
push
dec
sarb
mov
test
out
icebp
xor
lods
cmp
dec
js
jp
fdivl
in
jmp
adc
out
adc
bnd
push
addr16
xchg
in
orb
inc
or
jg
cltd
push
pop
adcb
movsb
stc
test
xchg
test
jge
pushf
mov
repz
cmp
test
inc
sbb
gs
xor
xchg
push
push
in
inc
cmp
lahf
in
dec
pop
je
pop
xor
xchg
inc
roll
mov
lahf
mov
enter
addb
push
out
cmovae
pop
xor
or
inc
dec
rcll
or
add
lahf
fists
mov
dec
sub
stos
testb
arpl
lahf
ss
adc
push
add
pop
pop
test
inc
inc
aas
adc
lcall
jo
test
pusha
dec
sub
or
push
sarb
push
adcl
fildl
jge
fwait
and
enter
jp
outsb
mov
dec
fisttpl
push
mov
and
shrb
jge
lret
push
sahf
test
push
sub
mov
push
cwtl
jecxz
insb
push
cs
xchg
leave
in
xorl
incb
addr16
mov
nop
sub
lds
mov
inc
in
xchg
fidivrs
or
pop
add
fs
rcrl
dec
pop
or
sub
adc
inc
test
outsl
es
adc
ds
out
push
inc
fdivs
sub
xor
pop
cli
mov
jnp
repnz
push
jecxz
rcrb
fcoml
flds
and
sub
push
shlb
mov
fsubr
or
test
sbb
js
lret
add
inc
pop
jl
sub
sub
lahf
add
xchg
lock
insb
jecxz
adc
cmp
mov
pushf
out
pop
aaa
push
es
xchg
mov
push
xor
test
pop
push
xor
dec
pop
imul
fwait
or
daa
aas
stos
test
das
clc
fwait
sbb
inc
and
and
bound
jge
lods
cmpb
in
lcall
loope
and
cmpsb
sub
cmp
mov
pop
and
cmc
insb
mov
dec
lret
ljmp
jl
pminub
inc
pop
negl
out
int
fsubrl
xor
jge
cltd
pop
movsb
push
ficomps
cmp
ret
sti
repz
pop
ret
insb
push
dec
sbb
sbb
mov
sbb
cmp
mov
xlat
mov
xchg
stos
es
jmp
fnstenv
mov
fs
mov
mov
adc
push
adc
and
rcll
scas
mov
mov
loopne
sub
add
inc
mov
jbe
push
and
adc
inc
inc
mov
jmp
insb
jne
xchg
mov
in
adc
cld
enter
imul
adc
pop
sbb
ds
xchg
xchg
add
icebp
mov
js
or
cmp
cmp
sahf
je
orl
mov
movsb
cmp
mov
xchg
sbb
add
push
ds
add
fs
popf
mulb
enter
cmovl
inc
pop
aaa
fs
cmpsl
or
js
add
mov
cmp
outsb
shr
cmpb
shl
inc
cwtl
fwait
test
mov
leave
pop
inc
clc
xor
negl
es
insl
scas
fs
cmp
or
out
xchg
adc
in
iret
lret
aam
push
std
clc
dec
mov
fidivrs
lret
mov
in
inc
mov
cld
lret
pop
mov
cwtl
rcrl
rolb
jae
lds
sbb
pop
jae
sarb
or
or
ja
aaa
and
mov
sbb
cli
jg
push
and
das
rorb
stos
mov
sbb
or
es
out
movsb
mov
sub
adc
ret
mov
popa
mov
scas
xchg
and
out
pop
or
loope
out
xor
mov
and
cmp
or
aaa
dec
jo
les
test
imulb
gs
mov
sarl
mov
gs
sub
test
roll
fs
icebp
movl
mov
push
gs
lods
xrelease
daa
sbb
insl
aad
repz
andl
and
mov
xor
mov
cmp
pop
mov
cwtl
add
sbb
add
sub
mov
cmp
dec
cmp
pusha
push
daa
fnstsw
add
pop
push
daa
and
sbb
jge
adcl
pop
scas
notb
xor
mov
add
inc
dec
pop
and
jmp
ss
inc
test
push
call
je
pop
jno
icebp
orb
pop
sbb
inc
rorl
lahf
js
test
jg
jbe
loopne
into
cwtl
fistpll
pushf
les
out
xor
sbbl
sub
add
mov
mov
push
cmp
or
inc
pop
xchg
inc
ljmp
lcall
pop
xchg
and
aas
inc
iret
in
ret
push
hlt
fwait
pushf
mov
jl
rcll
cmp
adc
cwtl
shrl
mov
adc
mov
lcall
mov
xchg
notl
aaa
ret
push
fstpt
mov
test
aas
xor
and
leave
cmpl
push
mov
mov
jg
out
sub
outsl
jle
xchg
pop
loope
push
mov
mov
and
shl
inc
fucom
lret
in
add
hlt
jb
cmp
outsl
xor
stos
xchg
push
inc
fcom
pop
mov
scas
pop
test
pop
mov
mov
loopne
inc
cmp
shll
loop
sub
push
jp
cmp
pop
mov
push
jl
and
fistps
stos
pop
jne
push
je
sub
roll
xchg
shll
scas
out
bound
pand
push
lock
adc
mov
movsb
jb
roll
xorl
and
pop
inc
leave
mov
xor
xchg
xlat
push
call
popa
mov
lahf
imul
xchg
cs
mov
sub
ss
lods
push
xchg
out
incb
or
icebp
xor
pushf
popa
lret
and
fbld
mov
xor
pop
sbb
mov
cmp
push
inc
or
push
mov
or
arpl
fnsave
cmp
xchg
and
push
sub
rcll
insb
mov
into
or
adc
ja
stos
or
jne
and
adc
xchg
icebp
ja
push
jl
adc
push
leave
add
int3
jns
iret
lret
sub
mov
mov
rcl
xchg
push
sahf
insb
lods
jb
js
popf
pushf
sub
aas
mov
pop
pop
and
cmp
push
cmpsb
stc
loop
repz
pop
neg
loope
cltd
jecxz
fldl
push
xor
sahf
pop
mov
loop
es
dec
dec
pop
mov
sub
subl
sbb
jne
not
aaa
repz
adc
mov
xor
sub
and
xchg
mov
and
inc
fidivrs
push
stos
sub
call
fidivl
outsl
jb
lea
ljmp
mov
xchg
push
mov
xor
sbb
call
sbb
bound
mov
mov
call
sub
cmpsb
cmp
push
leave
push
inc
and
jmp
sbb
fs
inc
hlt
outsl
cmpsb
xchg
push
loope
add
cs
loope
in
inc
pop
cli
paddsw
cmp
popf
test
mov
mov
dec
mov
and
mov
mov
xchg
xchg
sti
test
sub
inc
rorl
mov
sbb
xchg
add
xchg
dec
ja
movsl
and
push
sub
jb
mov
push
xor
cmp
pop
push
jmp
js
sub
mov
inc
add
inc
fsubl
out
leave
mov
aaa
xor
cmp
mov
adc
inc
ljmp
pop
jne
stos
push
dec
pop
icebp
mov
jnp
cld
cmp
sbbl
push
cmpsb
inc
ljmp
jg
add
cmc
nop
int
xlat
cmpsb
xchg
gs
jecxz
std
fsubrs
add
loopne
mov
pop
add
mov
cmp
push
xchg
sarl
jae
mov
inc
repz
jae
inc
in
mov
pop
test
add
sub
jne
push
or
icebp
cmove
push
xchg
pop
lret
fscale
dec
mov
addb
pop
mov
push
xchg
push
pop
wrmsr
xchg
imul
pop
shl
lea
into
cli
iret
xchg
mov
inc
or
push
cltd
shlb
xchg
pop
jmp
mov
push
mov
and
add
adc
into
inc
pushl
pop
mov
lret
push
push
insl
push
in
mov
sub
out
loopw
add
push
mov
int3
int
mov
xchg
mull
in
es
pop
sbb
lret
xchg
pop
aam
shrl
jo
sbb
xor
cltd
mov
inc
pop
adc
movsl
mulb
shl
ret
les
xchg
xor
xchg
das
icebp
or
out
sbb
lea
cltd
jp
movsb
lahf
insl
sub
sub
in
dec
ljmp
xchg
outsl
jmp
mov
lock
dec
and
pop
in
mov
nop
mov
aas
fnsave
and
sbb
add
and
clc
inc
roll
out
subb
mov
jge
and
push
jl
loopne
dec
lods
cmp
imul
or
sbbb
xor
pushf
cmc
in
ds
popf
push
and
dec
adc
mov
mov
inc
pushf
dec
lock
push
lret
sub
mov
xor
and
gs
xlat
lock
jbe
shlb
cwtl
xor
cmp
and
cltd
lock
dec
add
mov
xchg
pop
outsb
jne
das
std
fxam
js
ret
icebp
mov
movsl
dec
xorl
push
cmp
dec
cmp
ljmp
orb
aad
cld
stos
sub
stos
mov
pop
les
mov
cmp
outsl
test
mov
mov
add
pop
adc
scas
lret
sub
inc
lret
mov
sbb
jo
lret
fimull
lods
mov
mov
cld
or
fcompl
jle
lea
mov
mov
int3
sub
ficoml
int3
mov
imul
push
sub
inc
movsb
push
lea
and
fldt
popa
jmp
mov
cmc
popf
sahf
in
sbb
aad
sbb
in
mov
cmc
mov
push
xlat
scas
pop
mov
dec
cmpsb
jo
cmp
shl
or
scas
jbe
icebp
mov
mov
mov
daa
sub
test
rol
out
jmp
dec
pop
adc
pop
sbb
aam
dec
hlt
mov
xchg
test
inc
outsb
aam
dec
pop
dec
in
pop
adc
imul
or
cmpsl
push
dec
popf
cmp
shl
testl
nop
stos
jl
or
dec
out
mov
inc
int3
jle
add
mov
sub
ja
push
add
cmc
sbb
sbb
mov
ror
stc
mov
popf
cmp
lock
test
aaa
sbb
xor
or
lret
xor
mov
enter
jge
pop
icebp
inc
fmul
sahf
cmp
adc
sub
jle
addl
mov
dec
adc
mov
lds
adc
shlb
adc
add
outsl
jno
fists
mov
mov
push
mov
bound
pop
loop
push
adc
xor
fiadds
aad
fs
dec
cmpsl
std
pop
mov
out
sub
inc
adc
loop
lods
aaa
cs
lods
sub
or
fistpll
out
push
cmp
sub
adc
stc
sbb
jnp
sbb
and
sub
sbb
mov
jbe
insb
arpl
lahf
sbb
insl
or
ret
xchg
mov
ret
data16
push
int
popa
shufps
cmpl
sbb
fisttpl
aam
jne
xor
add
jle
bound
pop
outsb
push
and
rep
sbb
push
loope
xchg
fiadds
pushl
cld
cli
mov
pop
in
popa
aam
rorb
data16
cli
push
lods
ss
dec
ds
mov
sbb
xchg
clc
outsl
jecxz
scas
dec
std
mov
ja
test
or
inc
or
mov
adc
jns
and
pop
and
sbb
in
xorl
xchg
pop
jmp
or
bound
and
mov
xor
lods
xchg
lahf
mov
int3
fcmovnb
pop
or
xchg
mov
inc
mov
jns
out
dec
sbb
inc
dec
sub
mov
out
out
push
xor
sub
pop
mov
jb
fistpl
push
and
inc
push
cmpsb
shr
push
dec
jns
scas
mov
shlb
mov
cmp
iret
xor
into
push
ss
jae
sbb
repz
jle
and
mov
jle
addl
mov
and
mov
or
es
inc
pop
ds
out
nop
cmp
rcll
pop
jnp
addb
inc
inc
add
ret
and
pop
lahf
push
mov
cmpsb
popf
or
outsb
adc
and
mov
lods
mov
daa
sub
add
mov
imul
in
or
adc
rolb
push
cmpsl
leave
add
ret
scas
fbstp
inc
fcomps
dec
dec
gs
and
jne,pn
sbb
jnp
lock
cltd
cs
mov
cmp
dec
stos
ret
fbld
pop
push
movsb
mov
int3
xor
lret
adc
adc
xor
jg
adc
add
push
cmp
dec
int
es
sub
sar
popa
cmp
jnp
mov
adc
mov
mov
mov
fidivs
bound
inc
imul
xchg
incl
xor
xor
jge
xor
xchg
dec
xlat
subl
int3
mov
je
sub
pusha
mov
sar
add
inc
test
cmp
loop
cs
dec
jecxz
lods
pusha
inc
aam
jmp
pop
lock
lahf
sub
mov
stos
mov
sub
out
cmp
inc
sub
push
stos
adc
shrb
movsb
lock
addr16
je
fwait
and
dec
clc
test
inc
sbb
sbbl
stos
xchg
push
cli
pop
sub
xor
pop
loop
push
sub
mov
cld
push
mov
jmp
or
push
stc
aam
out
push
dec
in
shll
dec
out
iret
sbb
in
imul
dec
jl
stc
fwait
cmc
insb
fld
loope
insl
out
fstpt
cmp
in
mov
out
in
adc
cmp
push
dec
fwait
xchg
stc
int3
push
jge
hlt
les
inc
stc
mov
push
nop
mov
adc
jp
push
or
in
int3
insl
clc
cwtl
bound
xor
dec
dec
dec
stos
outsb
or
or
test
mov
jb
loop
fadds
or
bound
mov
test
sbb
cwtl
inc
les
movsb
pop
jne
outsl
adc
jmp
fldcw
outsb
fistps
xchg
jmp
cmp
ret
cwtl
call
pop
add
and
sub
jae
mov
jge
imul
sbb
fmuls
or
jnp
pop
sbb
test
enter
ror
imul
insl
push
jg
add
hlt
orb
andl
mov
cwtl
aad
outsl
icebp
jbe
jle
xor
adc
mov
div
jbe
pop
repnz
hlt
mov
xor
imul
fsubl
xchg
pop
ja
jnp
dec
adc
sub
push
sarl
imul
jp
out
arpl
pop
aaa
mov
repz
pop
call
mov
xor
mov
sub
inc
jo
std
ja
lds
cmpb
inc
pop
dec
div
int3
sub
pop
sub
mov
jnp
xor
scas
xlat
cmpl
pusha
jnp
mov
cs
inc
xchg
shlb
test
fs
lret
sti
dec
jb
mov
pop
sar
dec
xor
or
daa
mov
push
and
ss
movsb
mov
and
mov
mov
mov
xchg
cmp
pushf
mov
shr
push
es
int
cld
lock
or
xlat
js
icebp
mov
xchg
sub
dec
mov
jge
push
test
jmp
gs
scas
es
mov
ret
xchg
mov
ljmp
jl
jmp
add
in
mov
rep
mov
cmp
pop
scas
shl
inc
rol
nop
mov
roll
aam
les
sub
test
insb
negl
in
fwait
add
mov
outsl
ja
mov
mov
popa
sti
adc
mov
dec
gs
je
sub
shlb
gs
sbb
mov
mov
jg
pop
and
popf
sbb
jg
cmp
pop
mov
aaa
pop
aad
stc
nop
arpl
aaa
and
vcvtdq2ps
cwtl
lahf
mov
jne
push
into
inc
mov
pop
jl
mov
push
add
jns
push
sub
sbb
dec
mov
movsb
gs
jge
adc
mov
push
adc
fucomi
jno
and
arpl
arpl
stc
or
mov
inc
das
adc
bound
test
rcl
int
aaa
add
movsb
pop
and
cmp
ss
lcall
mov
fildl
push
jl
mov
jmp
in
stc
xlat
into
or
xchg
stos
mov
jg
mov
lock
negl
ret
adc
adc
dec
repz
push
orl
int
jmp
pop
pusha
push
mov
mov
jg
sbb
mov
cmp
lret
sub
push
pop
sub
js
test
xor
addb
pop
jno
cmp
adc
pop
xor
cld
mov
lods
lea
std
inc
mov
push
or
sahf
test
hlt
cmpsb
clc
jo
div
push
mov
cltd
test
add
xlat
lds
sub
icebp
fisttpl
mov
push
mov
jne
jle
and
in
push
test
push
xchg
add
popa
addr16
xlat
sbb
loope
scas
insb
sub
cmp
outsl
outsb
and
push
push
dec
lahf
mov
iret
aam
adc
test
idivl
cmp
add
mov
jmp
jns
or
loope
lods
sub
scas
cmpsl
cmp
jo
mov
out
adc
divb
mov
push
push
mov
std
dec
enter
lcall
cmpsl
call
inc
dec
loop
cmp
push
je
les
stos
xchg
or
scas
adc
pop
push
out
push
mov
mov
push
dec
cmpsb
inc
decl
mov
leave
fisttpll
fwait
gs
imulb
sub
outsb
mov
cwtl
lret
ret
mov
addr16
and
inc
push
push
stos
pop
outsl
mov
andb
adcb
add
mov
jns
mov
aaa
mov
pop
icebp
inc
cmpsl
jecxz
movsl
nop
xor
and
test
jl
xor
in
inc
lds
dec
clc
adc
incl
or
fucomip
divb
xor
addb
repnz
pop
pop
pcmpeqd
outsl
out
cwtl
cmp
les
sbb
les
mov
shll
mov
cltd
testb
xor
mov
push
add
inc
pop
ret
mov
jb
jecxz
insb
add
outsl
mov
or
jbe
out
outsb
xchg
mov
ljmp
fstp
cld
addl
adc
mov
call
inc
scas
adc
mov
cwtl
jp
lods
movsl
nop
insl
int
xlat
imul
add
sti
xchg
ss
push
mov
inc
pop
in
xor
cmp
dec
incl
fsubrp
call
sbb
imul
clc
mov
add
fildll
cli
mov
stos
mov
push
push
and
pushl
jns
adc
fiadds
pushf
lods
and
sbb
push
cmc
sub
push
loope
lcall
test
outsb
call
cmp
cmp
divl
outsl
xor
mov
test
mov
int3
push
xor
mov
aas
mov
sub
fistps
data16
and
into
cmpsl
sub
mov
daa
pop
mov
call
jns
xlat
int3
imul
test
js
scas
or
inc
ja
add
sbb
sbb
add
clc
xchg
jmp
mov
ret
adc
dec
dec
pop
cmc
out
aad
lods
push
stc
add
out
mov
xor
pushf
jbe
or
outsb
fwait
pop
stos
and
jae
das
pop
sbb
cli
lahf
in
aas
xor
xor
scas
sub
mov
sbbb
clc
arpl
pop
jb
insb
pop
pop
leave
and
and
int3
lock
aad
push
mov
cs
out
mov
pop
push
subb
es
mov
sbb
addl
je
dec
jg
ficomps
aas
sub
fnsave
jae
push
dec
loop
mov
push
jns
inc
xor
pop
lds
gs
pusha
mov
lret
xchg
mov
pop
jecxz
scas
xor
inc
pop
test
lcall
sbb
cld
inc
cmp
call
pop
popf
adc
sbb
lret
enter
aas
outsb
adc
out
repz
xor
jmp
decl
decl
rorl
jnp
mov
or
cltd
jmp
sbb
std
insb
and
xorb
mov
jno
or
inc
mov
xchg
and
out
sub
cli
jp
lea
inc
inc
lea
loopne
cmp
bound
shll
push
in
cld
insb
xchg
inc
jns
scas
cmpsl
pop
sub
pop
nop
push
cmp
inc
mov
arpl
fs
inc
data16
daa
pop
iret
xor
incl
leave
pop
inc
les
mov
push
mov
rep
mov
aam
inc
jns
adc
cmp
mov
mov
fildll
hlt
fmul
sti
add
inc
push
ljmp
mov
imul
pop
outsb
jge
repz
call
pop
fs
movsb
dec
fwait
push
sbb
icebp
pusha
fmuls
scas
dec
xchg
and
or
icebp
pop
out
pop
nop
rcr
lret
xchg
leave
adc
xchg
aam
fistl
jo
bndstx
jb
mov
icebp
xor
shr
shrb
ror
lret
mov
xchg
and
clc
xchg
cmpsb
add
xchg
in
cli
cmp
mov
jmp
lahf
jne
loop
or
in
jne
aad
fnstcw
push
xchg
jl
inc
hlt
cmp
add
faddp
adc
mov
mov
lahf
in
ja
call
push
lods
lret
adc
aas
movsb
mov
scas
add
mov
sti
xchg
cmp
jl
ror
hlt
rcrl
xchg
mov
je
xchg
mov
jno
js
sub
int
lods
sub
inc
insb
and
sbb
int3
jo
xchg
subb
testl
dec
int
out
inc
std
sbb
sbb
xor
adc
fistpll
xor
mov
mov
and
pop
gs
in
push
cwtl
mov
sahf
aam
dec
bnd
and
or
mov
lea
sti
or
push
or
movsl
mov
push
pop
stos
repz
daa
jmp
cmp
jge
cmpsb
add
mov
push
dec
cmp
in
into
xchg
gs
add
lock
sbb
xor
cmpsl
dec
adc
je
xchg
dec
xchg
shl
out
out
ja
inc
out
popa
or
icebp
scas
loopne
mov
out
xchg
mov
mov
enter
int
dec
xor
jae
cwtl
xlat
sub
gs
or
mov
insb
rcll
jb
out
push
jmp
outsl
test
mov
lds
adc
add
pusha
popa
xchg
dec
and
mov
cmp
je
lcall
xchg
inc
fs
outsl
sbb
ljmp
cli
or
ds
mov
repz
sub
fdivl
cmp
jmp
mov
outsl
loope
jecxz
jnp
add
lcall
dec
jge
xchg
and
call
aas
jb
pop
in
aad
inc
imul
leave
sti
lcall
imul
loop
ror
xor
pop
adc
jmp
sub
jl
adc
push
fsts
jp
loope
scas
or
lods
and
enter
dec
cmp
sbb
flds
mov
test
add
fdivs
jnp
daa
sbb
push
cli
mov
out
push
mov
jmp
roll
and
sbb
xor
ret
inc
jge
inc
out
imul
in
das
mov
jne,pn
popa
add
test
scas
xor
push
addr16
mov
xor
loopne
addr16
cltd
ds
inc
push
xor
data16
cmpsb
je
sbb
mov
imul
fcoml
subb
shl
out
movsl
push
and
sbb
insb
jp
jne
xlat
jae
dec
dec
fs
or
inc
mov
inc
mov
xor
hlt
fs
outsl
lods
push
dec
loopne
int
cmpl
out
cmpsb
mov
outsl
out
enter
fwait
hlt
clc
cmp
dec
xchg
xchg
ret
xor
test
mov
cmp
pop
cli
pusha
ret
sub
push
or
lret
jecxz
call
ss
insb
call
push
stos
outsl
xor
add
aad
push
pop
add
aaa
aaa
fldl
cmp
inc
xchg
fdivr
dec
movsl
rcll
imul
das
jmp
lods
stos
cmp
jns
lea
sub
cltd
loop
out
jge
xor
fnstenv
and
mov
outsb
nop
cwtl
inc
xchg
iret
mov
push
in
out
lods
cmp
mov
jmp
xor
push
pusha
xchg
inc
xchg
push
dec
stos
les
sub
movsl
out
add
dec
aaa
xor
outsb
or
pop
pop
or
bound
shlb
lret
or
jg
iret
mov
pop
mov
mov
in
and
sahf
mov
enter
xor
scas
jb
and
fimuls
out
out
jp
sub
aad
in
pop
in
mov
xchg
test
xor
inc
lret
mov
neg
pop
and
jmp
dec
inc
push
cmpsl
fisttpll
and
jbe
test
loop
imul
push
cmp
xor
mov
push
popa
ret
test
test
out
push
xchg
std
jmp
mov
pop
cmpsl
js
mov
iret
mov
sbb
pop
lret
push
xchg
jle
or
fcompl
and
lcall
xor
lcall
xchg
or
cltd
sub
lods
cmp
xor
dec
lret
pusha
insl
mov
dec
fists
loopne
call
ss
cmp
pop
mov
stos
xchg
jmp
inc
inc
dec
add
fbld
movsb
stos
jle
xor
repz
mov
sub
int
pop
pop
fstl
addr16
lahf
pop
xchg
cs
lret
insl
inc
add
data16
mov
mov
addb
lcall
popa
inc
push
pop
jnp
movd
push
cmp
outsl
cmp
int3
negb
cwtl
shr
rcl
imul
test
mov
xchg
cmp
sbb
inc
add
or
cmpb
push
int
cltd
adcb
mov
sbb
lods
xchg
and
ret
push
cltd
bound
std
sub
mov
sub
dec
pop
aam
mov
sbbl
pop
and
lock
mov
adc
imul
or
ficomps
hlt
lret
and
mov
cmpsb
xchg
inc
arpl
cmpsb
jmp
movsb
fsqrt
pop
es
cmp
mov
int3
cmp
mov
jp
nop
jg
pop
dec
stc
lea
add
jbe
mov
dec
clc
xor
mov
loope
mov
call
ja
sbb
daa
mov
lret
xchg
mov
das
fdivl
scas
fwait
test
mov
dec
sub
es
ret
and
and
cltd
and
xchg
mull
pop
jge
cmpsb
sbb
jge
add
insl
mov
leave
lret
jle
lock
push
inc
adc
push
dec
pushf
push
jnp
pop
xor
out
pop
ss
xchg
xchg
or
sahf
push
push
mov
jmp
xchg
mov
pop
dec
cwtl
ds
shlb
xorl
xchg
add
clc
cld
orb
jne
push
loop
mov
cmc
repz
fistpll
divl
sahf
andb
dec
jecxz
xlat
push
mov
cmp
cmp
popa
lret
inc
sbb
jno
mov
int
enter
push
sbb
in
push
jno
push
mov
jmp
cmpsl
jecxz
sbb
cld
mov
sbb
neg
nop
and
mov
inc
jl
int3
or
in
pusha
or
js
cmpsl
add
adc
xor
gs
aaa
pop
shr
pop
xor
or
dec
mov
cmp
out
mov
jle
int3
adc
nop
pop
stos
jmp
xchg
push
cmpsl
sub
jnp
push
sub
into
mov
mov
pop
out
mov
mov
push
iret
inc
xor
aad
add
lea
nop
lret
jp
loope
movsb
nop
leave
outsl
test
adc
lock
mov
inc
sbb
faddl
jl
mov
jg
aad
or
ja
fstl
repz
hlt
ror
push
std
sarb
cltd
add
xor
add
inc
jne
imul
cltd
dec
xchg
pop
jge
push
mov
cmp
movsl
pop
cs
mov
mov
inc
xor
sbb
popl
pop
adc
push
xor
xor
stos
aam
loop
cmp
icebp
xchg
add
hlt
push
adc
adc
push
lcall
lahf
mov
jp
xchg
fcomps
cmp
mov
add
shl
add
push
sub
aaa
sbb
lock
or
push
jns
in
adc
xlat
sub
push
mov
je
lcall
sahf
sub
xchg
push
push
push
xorl
add
pop
imul
test
call
in
movsb
xor
jmp
inc
pop
lret
stos
pop
jno
push
mov
sarb
fsts
pop
insl
in
pop
inc
mov
pop
out
in
pushf
clc
repnz
jb
mov
xchg
bound
jae
in
das
aaa
lret
gs
add
sub
jo
mov
out
or
loopne
dec
cmpsl
add
jecxz
cmp
add
cwtl
ror
cs
test
and
std
xor
imull
popf
das
push
test
lock
nop
call
loop
cli
sub
push
popf
push
xchg
jge
fwait
test
adc
lcall
jge
lea
out
std
mov
ljmp
xchg
push
mov
or
xor
xchg
jmp
jmp
mov
mov
mov
sub
addr16
stc
add
jb
and
sbb
sbb
xchg
sti
and
mov
pusha
jecxz
push
adc
sbb
xchg
lcall
adc
fmul
add
sub
pop
xchg
mov
jmp
xor
in
sub
cmpsl
add
xchg
aas
sbb
divl
daa
cwtl
imul
mov
push
push
cmp
aas
in
xchg
loop
mov
mov
push
rcrb
sbb
mov
jg
adc
mov
fnstenv
outsb
and
js
fwait
and
mov
dec
or
js
xor
mov
or
sub
cmp
fidivs
in
mov
fisubs
mov
std
in
ret
push
test
mov
cltd
aad
jno
test
aaa
aaa
mov
jbe
and
cmc
iret
inc
decl
aad
out
or
outsl
and
subb
lcall
into
notl
dec
push
dec
ret
sub
xchg
xchg
lea
out
hlt
adc
adc
ret
xchg
adc
xorl
dec
and
cmc
rcll
stos
arpl
pop
aas
mov
jl
vmptrst
scas
fcompl
xchg
jg
add
cli
sub
mov
popf
lahf
insl
cwtl
sarb
mov
jae
aam
add
or
nop
mov
ret
cs
pop
pop
mov
pop
fiadds
pusha
mov
fldcw
mov
mov
add
std
movsl
es
dec
cs
in
stos
insb
jnp
push
inc
pop
pop
sbb
lret
lcall
je
push
je
outsl
imul
dec
pop
je
push
or
fiaddl
icebp
repz
lods
pop
xor
push
daa
sub
dec
lret
outsl
pop
pop
xchg
xor
push
test
xchg
mov
adc
dec
nop
mov
xlat
ficoml
shll
movsl
in
pushf
and
loop
mov
fisttps
cmp
pop
or
in
fistps
jno
fucomi
sub
and
cmp
adc
inc
jecxz
adc
sub
aaa
rolb
and
sub
jl
add
add
pop
mov
adc
data16
sbb
test
loopne
in
fwait
jae
xchg
frndint
pop
add
mov
sbb
mov
xchg
inc
aas
pop
cmp
lods
out
addl
loope
shr
inc
sbb
sti
jecxz
mov
insb
xchg
paddq
jecxz
pushf
push
rorl
pop
mov
jg
mov
inc
pusha
packuswb
mov
mov
xchg
loope
mov
or
cld
scas
pop
ljmp
adc
sub
cmp
in
inc
push
into
icebp
sub
and
jno
cwtl
xchg
movsb
pop
fists
and
vrsqrtps
scas
sbb
inc
push
inc
sub
jae
lret
sbb
stc
sahf
adc
int
inc
iret
xor
add
jmp
inc
mov
mov
mov
ljmp
xchg
mov
mov
cli
scas
in
cltd
push
pop
pushf
call
mov
fs
fst
popf
xor
mov
cmc
jle
insl
sti
inc
jns
jns
pushf
fxch
shl
mov
std
outsb
xor
xor
add
lret
inc
xchg
mov
mov
pop
sub
jge
cmp
popf
arpl
adc
cmp
ss
call
dec
mov
popa
pop
xor
dec
pusha
in
xor
push
idivl
cli
mov
and
mov
ret
sbb
inc
add
adc
add
xchg
shll
mov
rolb
sbb
sbb
mov
clc
lret
rclb
loop
pop
mov
clc
into
dec
dec
sub
rclb
add
cmp
test
cs
mov
adc
daa
fxch
mov
es
mov
inc
gs
push
xchg
or
lods
pop
fs
xlat
jmp
bound
int3
fiaddl
adc
add
repnz
lahf
std
sub
xchg
sub
xchg
sub
cmp
lea
lods
push
xchg
fisttpll
test
push
iret
push
sbb
in
cmp
dec
mov
aaa
xor
repz
push
push
stos
push
mov
adc
jge
fidivrl
cmp
dec
fcompl
mov
inc
imul
lds
clc
mov
xor
les
inc
xor
mov
das
push
inc
lods
ja
es
sub
xchg
pop
subl
sub
push
shlb
add
faddl
popw
xchg
fcoms
rcrb
stos
and
jae
add
pop
out
int
adc
gs
scas
mov
loopne
scas
sbb
fwait
jb
ret
nop
add
js
out
test
inc
mov
mov
push
movsb
adc
out
ss
xchg
stos
inc
les
add
lret
mov
out
orb
and
sti
push
add
dec
xor
adc
xchg
dec
pusha
dec
or
sub
jne
push
and
jns
inc
cmp
lahf
mov
dec
jbe
push
cmp
and
pop
and
lret
adc
mov
xor
cmp
imul
sbb
aad
or
inc
fidivs
mov
in
inc
xchg
pop
shrl
rol
inc
add
mov
jno
lds
imul
mov
xchg
std
mov
or
and
sub
sub
lret
add
icebp
iret
jb
int
lods
inc
dec
xor
cmp
xor
test
sbb
sbb
pop
xchg
lcall
jae
pop
mov
shlb
cmpsb
add
mov
xchg
push
inc
movsl
mov
out
dec
insl
jg
xor
add
add
xchg
fmuls
inc
sub
cmp
jo
cmp
fisubs
mov
push
popf
das
scas
adc
push
pop
inc
mov
push
cmp
lcall
pushf
repz
inc
adc
mov
sbb
add
sub
shll
mov
and
cli
mov
push
jbe
inc
push
jne
mov
adcl
jmp
lret
ret
push
adc
xchg
test
and
lds
adcl
cwtl
mov
jmp
leave
test
jge
js
push
test
jbe
sbb
inc
scas
cmp
cld
mov
aas
inc
inc
aaa
pop
stos
out
mov
fidivl
inc
sbb
xchg
int3
push
push
xchg
adc
inc
sbb
push
fdivs
cmp
les
jb
xlat
movsl
test
pushf
fldt
push
mov
test
push
les
aas
adc
xchg
jo
or
rorl
sahf
inc
pause
mov
push
call
mov
add
fs
stc
stos
test
sub
push
push
enter
push
and
sarl
les
jae
andb
push
cli
into
cmp
mov
dec
pop
and
lret
vpaddsw
cli
adc
fidivs
push
sub
das
adc
adc
dec
jae
push
mov
sub
daa
add
ds
std
aas
mov
mov
sti
out
mov
std
out
mov
push
lahf
repz
cli
sub
test
push
pop
ljmp
xchg
xchg
hlt
mov
adc
inc
push
xchg
sbb
daa
add
inc
xchg
push
mov
jns
and
shl
jle
cmp
sbb
inc
xchg
push
shll
stos
or
icebp
pop
mov
jmp
push
push
sub
pop
inc
mov
repnz
adc
lret
dec
cmp
fdivl
fscale
or
out
sti
fadd
loop
adc
negb
pushf
sub
mov
cmpsl
dec
jecxz
cld
leave
jmp
fwait
leave
mov
dec
aam
in
pop
decl
inc
in
push
adc
test
push
jae
dec
mov
lahf
add
mov
lahf
pop
mov
out
mov
mov
addr16
out
mov
sarl
js
pop
push
test
movsb
dec
push
adc
or
imull
test
in
repz
sub
mov
inc
add
andl
cmp
or
in
xor
inc
or
or
jo
cli
mov
pushf
fdivr
dec
icebp
sbb
fcoms
dec
in
rol
ja
inc
push
jnp
lods
mov
xlat
lahf
adc
jns
aas
in
sbb
les
lods
mov
ret
cld
imul
mov
inc
in
popf
or
adc
in
stos
movsl
push
stos
fimull
adc
mov
mov
ss
pushf
jb
add
cmpsl
ja
mov
out
ficoml
test
dec
mov
pop
icebp
stos
or
mov
stc
mov
or
aad
mov
stc
sub
in
mov
test
iret
inc
adc
dec
sub
shlb
cmp
in
dec
out
adc
and
loopne
leave
adc
dec
dec
sub
daa
pop
out
cmpsb
leave
push
les
pop
jecxz
subb
adc
mov
xchg
cmpsl
pop
into
aas
mov
dec
mov
cmp
lods
jae
adc
jns
jl
xor
push
cli
push
pop
mov
fs
and
add
out
xchg
lods
pop
sub
cwtl
pop
repnz
mov
ret
ja
jb
sub
out
push
pop
xchg
mov
rdpmc
bound
movb
pop
loop
add
jnp
or
mov
sarl
int
add
pop
dec
loop
int3
ret
sub
ljmp
and
push
ja
int
cmp
add
les
lock
in
les
mov
jbe
cmc
sbb
mov
pop
mov
loop
adc
add
fidivrs
imul
lods
lds
in
mov
push
or
xchg
rcrl
xlat
sub
notb
out
cmpsb
mov
data16
lds
std
jnp
mov
xchg
jns
xchg
cmp
rorb
jb
in
dec
sbb
xor
jo
mov
outsl
lds
cld
outsl
and
mov
cwtl
mov
pusha
mov
fs
mov
and
mov
aas
pop
sarb
mov
cwtl
xchg
pop
or
mov
aad
sub
fwait
lahf
rol
sub
or
nop
in
mov
fidivrl
lcall
pop
adc
test
arpl
pop
roll
jae
sub
stos
dec
dec
rcrb
push
lret
shll
mov
ret
nop
insl
fimuls
arpl
mov
sub
shl
fcompl
mov
push
cmp
dec
or
push
mov
adc
add
lahf
cwtl
jle
mov
xchg
in
pop
mov
js
test
push
fchs
inc
hlt
cmp
pushf
frstor
mov
test
adc
dec
fisttpl
sub
fcomip
repz
fs
nop
clc
mov
inc
adc
idivl
lods
stos
inc
nop
and
hlt
fstps
push
xchg
mov
inc
sub
adc
xchg
out
add
stos
dec
loopne
xor
pushf
jmp
imul
inc
ljmp
push
call
lds
mov
push
movb
mov
or
pop
stc
push
mov
pop
and
pop
xor
mov
push
adc
sbb
xlat
in
arpl
fwait
sub
mov
and
inc
ret
test
xor
push
push
aad
pop
sub
mov
ja
jbe
mov
orl
ret
push
popf
push
pushf
pop
jmp
sub
mov
xor
insl
pop
pop
jecxz
and
inc
lahf
sbb
pop
es
mov
popf
aam
adc
aad
cmpsb
movsb
lods
rcl
pop
out
add
and
adc
mov
pop
mov
pusha
mov
pop
sbb
pop
fisubs
push
frstor
sub
or
inc
sub
inc
cwtl
jno
sub
pop
scas
inc
jmp
mov
and
popa
je
sbb
jg
ficomps
pop
push
adc
jne
push
cltd
pop
out
les
xchg
pandn
and
int
adc
je
dec
cmpsl
fs
adc
cmpsb
add
adc
sub
lds
add
imul
dec
jmp
stos
pop
gs
cwtl
and
ror
xchg
sub
dec
mov
mov
stos
dec
push
xchg
shll
jne
or
lret
and
out
dec
imul
push
outsl
cmp
add
outsl
and
jge
divb
add
test
dec
push
cmp
ret
insl
sbb
xchg
adcb
jae
xor
lret
ret
jns
inc
sub
push
les
lret
mov
aas
dec
insl
add
push
or
subl
mov
push
cmp
sahf
ret
nop
mov
cmp
call
sub
mov
dec
adc
cmp
sub
inc
adc
cmp
test
jmp
and
mov
push
pop
cmp
inc
sbb
or
jmp
add
adcb
call
pop
xchg
and
dec
outsb
std
pusha
stos
test
jl
add
push
les
addr16
loopne
fwait
sub
fisubrl
iret
mov
fmuls
sar
adc
and
xchg
loopne
out
inc
cmp
cmp
cmp
adc
movsl
or
mov
int3
cmp
bound
inc
aam
lock
jecxz
xchg
dec
mov
insb
add
popf
dec
inc
std
pop
pop
fstpt
cmp
mov
loope
stos
in
fwait
xchg
jb
push
push
xchg
insb
scas
sbb
add
int3
add
mov
imul
fwait
cwtl
jle
lods
xlat
ss
loope
loope
xchg
jnp
and
mov
sbb
outsb
mov
cld
fidivrl
aas
int
pop
pop
push
mov
mov
out
stc
adc
jl
jbe
jl
dec
jle
jae
mov
test
add
jb
addr16
sbb
xchg
xor
loopne
in
mov
enter
mov
cmp
push
mov
xchg
pop
and
jo
jnp
and
loope
lret
loope
scas
loopne
cmc
pop
mov
add
dec
push
xchg
mov
adc
xor
imulb
add
je
stos
push
sbb
xor
pop
rcrl
addr16
je
fstpt
lods
cmp
pushf
mov
sahf
data16
sbb
fbld
stc
sarb
mov
cmp
orb
sarb
adc
fdiv
lods
insl
push
push
mov
out
jmp
ret
and
sub
dec
xchg
fnstenv
setp
gs
add
int
fildll
pop
xchg
dec
sbb
sti
fisttps
adc
mov
add
fmul
imul
jecxz
mov
jge
fnstsw
in
clc
or
lcall
mov
jb
or
fdivs
out
jbe
pop
outsl
push
in
dec
in
jmp
lods
gs
jmp
jecxz
loopne
sub
fs
enter
or
pop
aaa
leave
cmp
daa
xor
xor
push
into
in
jnp
sbb
xchg
xchg
daa
lds
xchg
dec
xchg
pop
daa
mov
add
cmp
pushw
nop
adc
data16
test
repnz
cmpsb
rorb
shlb
leave
or
mov
jg
or
stc
xchg
adc
in
cmpsl
stos
lcall
mov
or
je
mov
test
jo
adcl
xor
ja
push
pop
scas
jge
aas
mov
clc
inc
lret
sub
lcall
ud1
cs
in
stos
push
addl
notl
out
popa
rcrl
lret
push
sbb
and
jb
jecxz
sbb
jp
data16
pop
fsubl
cmpsl
mov
add
enter
aam
mov
mov
pop
xchg
mov
pop
push
movsl
enter
fdivs
sub
in
xchg
sbb
mov
out
aaa
jle
imul
sahf
test
xor
inc
xlat
sahf
mov
inc
mov
jg
orb
sahf
adc
stos
cmp
int
lea
push
adc
nop
mov
popf
sahf
fildl
clc
fwait
movsb
mov
sub
sbb
dec
inc
icebp
inc
jb
inc
sub
pop
or
xor
dec
cmpsl
in
scas
jae
push
fcompl
fsubrs
lahf
loope
add
and
aas
testb
pop
mov
ss
ljmp
cltd
mov
outsl
xchg
mov
mov
xchg
jmp
adc
jns
out
ror
sub
ret
jle
xchg
fdivrs
pop
fcompl
mov
popf
rcl
or
nop
lea
shlb
jo
icebp
icebp
cmp
mov
add
scas
in
cmpsl
inc
jns
sub
inc
sti
lods
scas
push
add
stos
cmp
out
lods
loop
rclb
push
sub
adc
mov
xchg
xchg
imul
mov
test
dec
lock
loope
inc
enter
push
cmpxchg
mov
stc
loop
rol
inc
inc
dec
int3
mov
and
or
ss
add
pushf
in
sub
jmp
mov
xor
lahf
push
mov
sbb
jmp
cmp
test
fwait
pusha
jmp
hlt
inc
inc
add
pop
mov
inc
cmp
lahf
arpl
cmc
idivl
enter
push
mov
dec
lahf
int
cmp
add
push
or
jnp
or
popa
lods
jecxz
aad
inc
rcr
xchg
mov
fsts
push
xor
jnp
adc
in
in
xor
out
pop
cmpsl
jo
outsb
int
movsb
cwtl
cmp
mov
mov
inc
mov
sahf
movsb
loop
clc
jb
ljmp
xor
lds
jo
sbb
adc
cmp
sbb
dec
mov
imul
push
addr16
cld
imul
call
insl
cs
scas
mov
bound
stos
mov
push
shrl
xchg
fwait
pop
jbe
jecxz
push
arpl
and
test
les
xor
push
pop
mov
add
xchg
dec
cmp
idivl
jb
cltd
dec
xor
inc
add
movsl
inc
pusha
sahf
jge
pop
inc
inc
pop
sbbl
mov
mov
and
and
mov
add
cmp
stos
mov
jns
xorl
mov
popa
out
lahf
jg
negl
cmc
imul
sbb
iret
inc
adc
push
mov
call
call
sub
mov
sti
fs
cmp
mov
rcrb
push
xchg
sbb
push
lods
outsl
scas
jbe
fadd
adc
mov
test
sbb
arpl
repz
sub
movsb
pop
add
imull
xor
in
lds
sarb
cli
aam
inc
fidivrl
mov
ljmp
fmul
xchg
sub
inc
jne
pushf
fwait
mov
jnp
pop
push
outsb
xor
sub
cmpsb
or
scas
xor
jae
pop
ds
jle
filds
push
neg
sbb
bound
sub
sub
or
pop
scas
rcrl
xor
inc
fbld
mov
cwtl
pop
push
xorb
inc
sbb
jp
addr16
imul
or
std
leave
flds
scas
test
mov
push
movsl
lds
imulb
mov
dec
clc
hlt
psrld
xchg
fildll
ljmp
call
int
cmp
adc
cmpsb
push
xor
push
jmp
repz
xor
notl
stc
jbe
sub
shr
lahf
js
xor
lahf
jb
jg
xor
lea
dec
dec
je
jno
lahf
xchg
aad
pop
inc
out
xor
hlt
icebp
ret
dec
xchg
sbb
push
dec
push
enter
jmp
ljmp
dec
dec
cmp
out
mov
aas
pop
mov
int3
movsl
fdivr
mov
push
inc
faddl
jmp
pop
mov
dec
add
or
inc
jmp
cmpsb
jbe
pop
xor
data16
jne
pop
cmp
mov
ljmp
or
cld
pop
movsb
push
ret
icebp
std
je
xor
mov
inc
inc
xor
sub
xchg
push
mov
mov
in
nop
insl
addb
mov
mov
push
mov
mov
daa
mov
add
mov
in
outsb
sub
stc
adc
jle
or
pop
fildll
call
inc
inc
mov
pop
jo
fs
xor
lcall
adc
pop
or
push
or
add
or
adc
dec
adc
sbb
dec
push
jno
mov
outsl
dec
cmp
push
jmp
aaa
clc
xchg
mov
aas
inc
inc
out
rol
xor
push
fldcw
mov
in
pop
mov
movsl
pop
or
cltd
push
mov
dec
mull
adc
cmp
cltd
loop
ja
popa
fstl
add
movsl
popa
xchg
shr
pop
mov
cmp
es
adc
xor
out
bound
xorb
xchg
xchg
cmpsl
insb
lock
adc
filds
push
sbb
lea
stos
aam
cmp
mov
aas
and
das
pop
adc
adc
sub
ljmp
inc
fwait
hlt
addr16
jb
or
push
imul
xchg
pop
add
mov
adcb
loop
sbb
sub
out
mov
or
jle
dec
sbb
xchg
and
push
orb
push
stos
or
xchg
jne
in
or
jne
pop
fs
outsl
addr16
inc
dec
push
hlt
xorb
push
jne
and
aad
sbb
add
ret
cld
sbb
inc
scas
xor
fdivrs
scas
movsl
pop
stos
mov
inc
or
shl
scas
fidivs
adc
outsb
lds
mov
xorb
xchg
inc
lock
jle
insl
sbb
push
adc
mov
lds
insb
xor
cmpl
jle
pusha
insb
es
xchg
cmpsl
hlt
notl
lds
mov
int
xor
gs
inc
xchg
cmp
in
push
mov
mov
cmp
push
jns
jecxz
insb
ljmp
push
cmpsw
lret
shl
inc
add
push
sbb
les
pop
cs
out
inc
int
jl
repnz
pop
add
cmp
inc
out
xor
and
push
or
mov
lock
imul
add
enter
insl
in
push
add
cs
pop
ret
add
mov
fidivrs
cmpsl
push
jne
lods
cwtl
mov
push
mov
pop
jb
daa
dec
push
decb
insl
push
sbb
jo
aad
adc
xlat
pop
push
adc
loopne
insb
mov
adc
pusha
shll
cs
movhps
mov
or
jmp
das
test
push
push
jl
lret
mov
pop
stc
push
std
adc
jns
ljmp
loopne
mov
into
xchg
pop
inc
xlat
cmpsl
lahf
aad
pop
mov
or
mov
lods
inc
push
in
and
xchg
pop
mov
addr16
adc
mov
cwtl
mov
mov
jmp
ja
jge
or
movsb
icebp
mov
inc
push
adc
xchg
jae
push
and
pusha
shl
pop
mov
sub
hlt
xor
cmpsb
sub
adc
ljmp
push
jbe
cwtl
push
jl
vmaskmovpd
sub
inc
cmp
push
fdivrs
in
or
in
insl
adc
lods
sub
and
cmpsl
push
popf
addr16
xor
and
mov
mov
xchg
sub
add
sub
stos
test
jnp
mov
mov
fldt
adc
test
fcmovbe
cmp
jl
sti
out
lds
xchg
mov
sub
pop
sub
lahf
mov
mov
cmp
sbb
push
or
fsubs
popa
out
jle
addl
dec
dec
push
xor
pop
in
xchg
repz
inc
test
pop
adc
lret
xchg
sbb
jmp
sub
add
test
popa
jbe
add
xchg
adc
adc
subl
popf
imul
add
scas
insb
imul
hlt
and
jle
push
shrb
jg
inc
xor
sub
popf
xchg
sbbl
ret
imul
lcall
ja
lahf
jle
repz
loop
inc
pusha
jns
shll
cmpsl
sub
iret
mov
dec
push
scas
add
pusha
rorl
ss
or
xchg
aam
dec
sub
xchg
insb
push
test
mov
push
dec
pop
out
pop
test
cwtl
xor
fdivrl
cltd
sbb
or
mov
or
dec
fcoms
out
lcall
mov
sub
fwait
push
cmc
fstps
les
adc
and
sub
xchg
dec
mov
inc
dec
dec
cmp
int
stos
ret
mov
fcompl
xchg
movsl
and
mov
nop
push
push
in
adc
jo
push
xchg
adc
pop
and
sbbl
insb
sbbl
leave
pusha
or
jmp
mov
les
jmp
push
arpl
push
gs
xchg
sbb
xchg
pop
pop
cmp
sub
jnp
jge
pop
adc
and
mov
lea
adc
in
mov
mov
in
jg
insl
fldenv
mov
add
lods
addr16
sbb
and
movsl
mov
xor
cmp
cmpsl
and
loop
sbb
aam
cli
je
rcr
jecxz
mov
dec
xor
push
lcall
sub
add
or
adc
mov
mov
aaa
cli
sub
mov
and
push
xchg
scas
cmp
sub
xchg
inc
jns
js
push
mov
icebp
lock
push
lret
jmp
imul
loop
lret
mov
xor
clc
mov
lcall
mov
jnp,pn
aaa
insl
fstl
dec
pop
push
lock
outsb
clc
mov
mov
xchg
push
xor
movsl
push
mov
add
rorl
sbb
and
adc
fadds
lds
fcoms
iret
jecxz
shl
mov
lds
mov
push
test
scas
or
and
movsb
int3
add
inc
mov
or
movsb
loopne
dec
adc
mov
rcrl
jmp
ret
pop
fstl
jge
and
sahf
dec
aas
or
jbe
pop
xor
adc
loopne
mov
ja
clc
ljmp
adc
add
pop
mov
xchg
mov
xorl
jbe
lds
sbbl
xchg
push
scas
iret
mov
push
jne
mov
ja
adc
jle
inc
add
out
adc
test
pop
in
lods
imul
test
lret
jge
scas
jg
mov
dec
mov
dec
ret
shrb
outsb
cmp
or
aam
push
jo
mov
push
mov
add
lret
icebp
das
enter
in
add
test
xchg
int3
movsl
hlt
lret
add
test
add
xchg
xor
mov
jmp
fmulp
mov
ja
xor
sbb
aas
loop
and
push
icebp
scas
daa
lods
cmpsl
cs
gs
cmpsb
mov
xor
mov
xor
fstpl
mov
movsl
dec
les
lret
jb
or
lea
xchg
mov
fdivl
int
push
fwait
mov
inc
sti
loope
add
sub
scas
push
aam
dec
enter
jmp
lcall
inc
sub
movsb
mov
jle
push
jmp
outsl
clc
loopne
sbb
add
inc
inc
cmp
scas
das
sbb
push
fildl
jecxz
add
inc
fldenv
adc
rolb
rclb
cmp
ss
pop
lret
or
and
pop
and
test
sbb
cld
ss
add
push
les
sahf
fimull
push
pop
mov
xor
inc
and
cmc
cmpsl
and
loope
pushf
ja
lods
imulb
mov
mov
mov
mov
lret
mov
jle
inc
and
push
sub
inc
mov
aaa
repz
repnz
popf
cltd
mov
jecxz
ljmp
dec
xchg
cmp
or
cmp
in
mov
ficoml
ja
sbb
xlat
std
mov
lds
scas
mov
jmp
stc
imul
pusha
jmp
addb
sub
movsl
sbb
sbb
lcall
mov
jg
cmp
stos
sub
mov
sahf
sbb
sub
inc
xchg
pusha
std
cli
adc
clc
sti
and
mov
lret
push
js
dec
aad
dec
dec
iret
int
cmpsb
xchg
jno
daa
fcompl
stos
leave
dec
jbe
adc
iret
test
xchg
adc
cli
popf
sbb
icebp
cltd
notb
fwait
or
mov
mov
outsl
push
in
stc
imul
lea
test
cmpsl
lret
enter
or
lcall
outsb
lea
xchg
pop
push
add
push
xor
stos
call
dec
mov
jg
xor
mov
xor
clc
push
sbbl
jbe
lds
xor
xchg
pop
and
xor
mov
xor
mov
je
loop
dec
fcomps
cmc
xchg
jmp
inc
sarb
dec
xchg
fs
jp
movsl
cmpl
lea
add
sbb
fwait
cmp
cmp
mov
xor
shlb
adc
adc
adc
jnp
jno
xor
push
cmc
scas
xchg
data16
movsb
fidivrl
sbb
je
sbb
xchg
push
add
clc
xlat
mov
xchg
or
inc
or
jg
push
pop
pop
add
cmp
sbb
or
enter
dec
mov
iret
sub
rclb
mov
add
lret
jp
mov
cvtps2pd
scas
jl
sbb
out
sbb
popa
jg
cli
shrb
inc
insl
add
push
ret
cmp
or
outsb
in
loope
and
mov
negl
int
cmc
sbbb
mov
notl
sub
xchg
in
xchg
pop
out
mov
sbb
lock
mov
repz
or
lahf
test
push
test
fiadds
and
cmc
rcll
in
mov
dec
pop
mov
inc
ret
fstpl
inc
imul
mov
movsb
inc
lcall
out
pop
imul
out
cmpsb
outsl
gs
repnz
xchg
cmp
mov
push
clc
pop
popf
dec
std
dec
lods
es
mov
xchg
repnz
push
rcrb
loopne,pn
rcrb
les
jp
andl
iret
and
push
stc
or
adc
mov
scas
or
sbb
cmp
in
ljmp
add
fwait
xor
out
mov
sti
adc
adc
aas
stos
push
adc
dec
push
scas
inc
aam
add
mov
pop
scas
je
xchg
stos
js
xlat
push
push
mov
test
lahf
jmp
sbb
lds
daa
mov
mov
or
jns
divl
mov
insb
out
pop
mov
inc
test
pushf
ljmp
test
ds
adc
inc
hlt
add
sub
mov
jne
std
out
into
xchg
xchg
notl
loopne
mov
push
ds
fs
push
outsl
jmp
enter
js
icebp
imul
mov
dec
stc
in
clc
cltd
and
add
cli
fs
out
mov
test
cmp
push
outsb
and
and
scas
stos
shl
aaa
lcall
or
scas
les
pusha
cmp
cmp
mov
add
xorb
lock
xor
xor
divb
or
xor
cmp
int
shll
push
mov
popa
test
mov
xor
mov
cmp
icebp
xchg
or
and
xchg
lahf
cmp
inc
xchg
adc
repnz
movsl
mov
jp
mov
push
sti
pop
nop
push
lret
mov
cmpsl
popa
jb
mov
dec
pop
mov
out
aas
std
popa
stc
ljmp
cwtl
dec
inc
fcmovnb
xor
jns
pop
mov
and
lahf
cvttps2pi
xor
or
pop
notl
mov
mov
hlt
jge
shlb
movsl
lods
aam
jb
sub
mov
jbe
pop
ret
mov
jp
test
pushf
cmpsb
cmp
inc
lcall
sub
or
ds
mov
dec
mov
cmp
aas
addr16
add
and
xchg
lods
js
aam
pop
mov
adc
popl
iret
jp
xor
fnstenv
or
cmpsl
add
scas
cmp
jo
push
std
popf
andl
lret
imul
adc
cmpb
sub
mov
push
mov
cs
pop
outsl
and
pop
add
fdivl
add
xor
mov
inc
mov
jp
mov
adc
into
xchg
js
xlat
movsb
int
int
aas
pop
mov
fwait
mov
dec
dec
sub
scas
and
and
pushf
mov
sub
jne
xor
jno
icebp
xchg
les
mov
pop
in
pusha
clc
add
push
aaa
loope
orl
inc
jp
gs
scas
lock
sbb
shrb
push
imul
imul
invd
mov
in
movsl
add
ds
ja
push
dec
mov
ds
push
aam
inc
adc
push
and
adc
dec
out
jp
or
jb
adc
xchg
mov
mov
test
std
xorb
sub
out
imul
enter
jmp
fucomip
or
bnd
je
fwait
xor
sub
xor
xchg
lcall
xorl
dec
scas
cmp
push
test
push
repz
add
clc
inc
push
push
and
push
adc
addl
cli
lods
les
sub
jae
test
ss
loopne
aad
cmp
sbb
stos
push
push
mov
mov
std
mov
sbb
xchg
decl
inc
mov
mov
inc
fcmove
mov
divb
es
test
lcall
mov
dec
push
sbb
xor
into
and
popf
movsl
rol
push
add
fs
jnp
mov
shl
movsb
imul
mov
cmp
adcl
inc
sbb
test
inc
int3
imul
mov
mov
ss
aas
stos
push
pop
es
pop
jns
daa
sahf
frstor
test
cmc
fsts
mov
je
xor
les
adc
pop
lcall
int3
cmpsl
sub
push
push
mov
jmp
sbb
inc
lcall
push
sbb
ds
js
xchg
fdivs
gs
daa
test
mov
test
sbb
cmp
mov
stc
lds
and
inc
les
fildl
jns
adc
xchg
js
shrb
add
sub
mov
gs
pusha
jecxz
and
fs
sbb
dec
fadd
jno
scas
adc
inc
imul
mov
repz
and
adc
mov
andl
sti
sar
push
in
push
jecxz
cmp
push
pop
mov
inc
jae
fstpt
dec
pop
sti
rcl
loop
into
inc
cmpsl
int3
insl
jl
int3
insb
in
mov
nop
sub
jecxz
aad
mov
lds
inc
fsubrs
fistl
push
shlb
sbb
daa
add
sub
pop
add
arpl
xchg
lods
push
jge
inc
cld
int
in
pop
es
pop
insb
add
test
and
xchg
test
cmpsl
cltd
pop
out
xlat
incb
mov
mov
dec
sbb
scas
insl
std
lret
es
push
lods
gs
out
fldl
repz
inc
in
mov
into
testl
mov
adc
loope
jle
test
sbbl
imul
mov
repnz
loope
popf
hlt
and
cmp
mov
jbe
leave
add
jo
iret
cwtl
mov
adc
push
loopne
lock
cmc
or
outsl
push
mov
and
pop
cmp
mov
scas
mov
or
push
sbb
mov
lar
scas
add
or
mov
xlat
xchg
leave
xor
stos
push
loop
test
or
ja
out
add
imull
push
fwait
inc
push
pushf
sti
cmp
mov
aaa
xor
test
orb
outsl
clc
cmpsl
jmp
rclb
les
dec
test
pusha
loop
or
cmpsb
push
ja
mov
mov
xor
xor
mov
jle
jecxz
repnz
insl
sbbb
arpl
adc
dec
push
out
pop
or
lock
les
popf
add
out
jae
sbb
xchg
sub
iret
shl
push
jl
cmpl
fcoms
inc
push
pop
mov
push
cmp
cmp
sbb
pop
xor
mov
xor
xchg
cmp
test
icebp
cs
movsb
out
mov
jbe
adc
ficoml
jno
rcrl
testl
inc
fmuls
test
mov
xchg
dec
lea
fmull
in
neg
mov
and
repz
xchg
push
adc
in
out
outsb
lods
push
push
push
jno
jbe
movsl
lock
jbe
ss
repnz
sbb
inc
pushf
mov
mov
int
scas
xor
ljmp
ja
enter
out
sub
dec
mov
inc
cmp
push
push
and
les
adc
push
inc
out
jp
jae
cltd
adc
lods
mov
rorb
cltd
popl
jg
push
jns
int3
test
lds
mov
out
mov
or
rcl
scas
xchg
stos
xor
and
jns
jb
enter
inc
cwtl
xchg
cmp
jmp
outsl
test
cli
and
fists
sub
int3
jo
jb
loope
dec
mov
repnz
sub
fisubl
jo
lcall
sub
dec
jecxz
cmpsb
ficoms
push
fs
adc
cmpsl
outsb
scas
adc
icebp
mov
cs
jae
pop
adc
in
push
push
cltd
push
and
mov
mulb
inc
into
xor
fbstp
pop
jp
sub
inc
push
daa
mov
outsl
push
pop
pop
addr16
xor
xchg
lahf
sub
aam
lea
mov
push
sbb
pushf
movsb
aas
mov
js
xlat
sarl
sbb
adc
xchg
push
lcall
sbb
fistps
nop
mov
sar
push
xor
pushf
sub
add
hlt
std
dec
lds
cmp
popw
and
mov
fwait
js
lahf
fisttpl
add
js
ds
cmpsl
loopne
out
push
sarb
add
loope
jnp
pop
ljmp
rorb
push
xor
pop
adc
pop
nop
and
pop
push
test
jp
rcll
adc
dec
mov
out
call
inc
mov
out
popf
pop
pop
lds
cs
fdivrl
sbb
shl
cmp
pop
leave
mov
and
rolb
orl
mov
nop
subb
fnstcw
mov
mov
int3
push
stos
pop
imul
test
popf
sbb
sub
es
aaa
out
and
out
cltd
cmpsl
subb
add
ds
mov
dec
mov
jle
pop
dec
jne
inc
mov
ret
push
cmp
out
andb
addl
pop
sub
sahf
fbstp
mov
fisubl
adc
mov
mov
pop
push
insb
mov
jl
into
sbb
adc
aad
mov
cld
mov
and
sub
sbb
out
insb
pop
pop
mov
std
and
stc
add
jg
and
mov
movsb
addb
enter
sbb
arpl
loopne
clc
mov
rorl
aas
nop
std
int3
enter
dec
lret
std
xchg
xor
inc
jecxz
fsubp
cmp
push
outsl
add
fdivr
imul
data16
mov
pop
ljmp
push
jl
xchg
test
sahf
outsb
das
mov
sbb
xchg
pop
inc
xor
inc
add
push
fadd
movb
add
xor
dec
out
ss
mov
xor
imul
fcom
cmpsb
mov
pop
out
shlb
pop
loope
rcrb
dec
push
mov
xchg
cmp
xchg
cmp
popa
daa
xor
pop
add
test
mov
push
add
lcall
pop
les
lock
mov
jl
mov
mov
jl
les
and
aad
jns
xor
in
inc
jno
push
fcoms
adc
mov
jl
les
mov
fcomps
mov
lret
xor
jb
cmp
xor
sub
cmp
rcr
sub
mov
movsl
js
insl
cmpl
outsl
std
inc
sub
sub
jo
ljmp
cmp
nop
loopnew
or
fs
es
dec
jne
stos
orl
push
jno
and
lahf
cwtl
sub
movsl
inc
add
push
je
popf
fdivr
nop
fdiv
cmp
inc
fstpl
ret
add
push
mov
fmul
jl
and
sbb
mov
xorl
insb
addr16
scas
mov
jno
push
movsb
dec
loopne
lods
lcall
in
push
bound
scas
or
mov
mov
or
adc
into
std
pusha
cltd
cmpsl
outsl
mov
idivl
fmuls
imul
xor
xchg
fwait
ljmp
fnsave
nop
adc
out
add
data16
in
jp
xchg
xchg
ret
rorb
fimuls
movsl
push
int
out
xchg
lret
sub
orl
mov
dec
jg
xchg
pop
xchg
icebp
ftst
in
dec
sub
or
sbbb
push
test
mov
adcl
pop
pop
mov
jmp
shrl
mov
iret
add
push
shlb
xor
mov
cmpsl
adc
xor
jae
outsb
sar
pop
push
je
call
mov
and
arpl
push
mov
xchg
dec
xlat
mov
fsubp
cmc
mov
push
mov
sub
jnp
movb
mov
movsl
cmp
sarb
xchg
in
test
cltd
rclb
daa
stos
xor
add
xor
adc
test
ljmp
inc
xchg
dec
leave
lea
mov
jnp
daa
hlt
test
pop
outsb
adc
arpl
adc
rorl
and
rclb
dec
cmp
push
pushf
mov
call
add
fs
mov
inc
push
outsl
xchg
lea
jecxz
mov
faddl
insl
xlat
jbe
push
cld
sbb
xchg
push
pop
mov
inc
not
cmp
mov
icebp
test
pop
jl
stos
xchg
sahf
dec
pushf
and
sbb
aad
mov
xchg
mov
cmp
inc
js
jae
pop
fsubs
sub
dec
adc
std
loop
jecxz
sbb
mov
sub
inc
push
int3
cmp
enter
push
outsl
mov
cmpsl
mov
or
pop
das
xor
mov
mov
enter
out
cmp
subl
dec
dec
mov
sub
xor
xchg
jle
jns
mov
jbe
sbb
jb
jmp
push
xchg
and
jae
ja
stc
or
lea
lahf
jg
daa
stos
addr16
lret
aad
inc
sub
negl
pop
das
dec
xor
ss
mov
inc
push
pop
and
jp
inc
inc
imul
push
mov
pop
xchg
dec
popa
fbstp
push
dec
mov
fists
jae
mov
repz
scas
xchg
jecxz
out
stos
ljmpw
scas
add
mov
std
cmpsl
mov
mov
mov
out
add
in
mov
loope
mov
es
stc
pop
dec
scas
cmc
sahf
push
pop
push
out
lock
inc
xchg
sbb
mov
add
jo
insb
sarb
xchg
add
imul
add
pop
cwtl
popf
xchg
mov
dec
add
stos
xor
pop
xor
test
flds
sbb
and
in
sbbl
dec
inc
enter
icebp
and
mov
out
jo
add
test
in
je
or
xchg
push
je
pop
or
fstpt
insb
dec
popa
or
cmp
test
mov
mov
ret
inc
jne
imul
mov
ds
ret
outsb
test
cwtl
mov
daa
add
xchg
imul
adc
shll
leave
sbb
push
mov
and
sub
jnp
jbe
movsl
outsb
mov
cmp
dec
push
and
xor
loope
leave
fidivs
dec
push
mov
js
inc
stc
fwait
or
fmul
stos
xor
icebp
cwtl
push
ss
movsb
pushf
std
pop
xor
jle
iret
jmp
in
pop
aas
mov
ljmp
fadd
shl
loopne
sarb
xor
pop
push
xchg
fnstsw
int
enter
add
or
sahf
adc
mov
xor
sti
and
sbb
arpl
sbb
fmull
adc
je
les
xor
sub
imul
dec
imul
adc
jecxz
inc
test
jno
sbb
ds
imul
mov
nop
cmp
sahf
sub
iret
lock
mov
scas
into
dec
jle
cltd
nop
push
mov
dec
insb
dec
jbe
pop
lcall
add
dec
cmpsb
bound
or
xchg
mov
test
or
lahf
push
pop
dec
cmpsb
imul
fdivl
dec
mov
xchg
sbb
fldl
jbe
xor
jl
pop
xchg
add
das
or
jae
je
lret
cmc
and
ljmp
out
and
hlt
insb
repz
stos
mov
or
and
or
stos
cwtl
push
out
fadds
shll
repz
sub
xor
repz
xchg
test
pop
push
jmp
aaa
inc
lock
mov
mov
arpl
xchg
inc
outsb
stos
inc
pusha
mov
add
call
fbstp
rcr
jp
pushf
xchg
dec
mov
pushf
or
mov
in
mov
lds
rcrl
nop
icebp
imul
sar
clc
sub
jecxz
jg
sub
jb
mov
inc
out
jb
inc
mov
outsb
lods
addr16
sbb
cmpsb
mov
popf
bound
fwait
mov
das
sbb
adc
and
std
xor
out
sbb
sub
xlat
das
and
insb
pusha
xchg
pop
cltd
iret
cli
orl
leave
getsec
mov
mov
xlat
stc
daa
sahf
pop
cmpsl
fmull
push
ret
stos
das
popf
cltd
ja
jmp
and
hlt
jge
lock
aas
scas
xchg
push
jo
aaa
dec
dec
dec
rorb
add
mov
bound
test
dec
insl
ja
dec
insb
push
dec
mov
fdivs
or
movsb
ja
cli
sub
mov
lds
fcomi
xor
inc
test
imul
xchg
jno
ja
xchg
add
std
sbb
fstps
cmp
aad
push
icebp
jbe
and
shlb
mov
sbb
pop
gs
into
or
adc
inc
xor
and
and
imul
or
or
aam
je
push
sub
aad
call
jbe
lret
cmp
add
mov
mov
or
stc
jg
stc
inc
ja
push
dec
add
and
cmp
mov
cmpl
lds
repz
hlt
xchg
dec
pop
pushf
je
dec
scas
mov
cli
repz
pop
cs
je
outsb
je
xor
jne
lret
lahf
jmp
jo
es
notl
sbb
push
inc
push
fs
adc
or
orb
mov
dec
repz
jno
adc
xchg
mov
lods
fcoms
repnz
ret
rcrb
out
out
inc
adc
add
or
mov
inc
mov
cltd
pop
je
mov
mov
or
lcall
add
pushf
mov
adcl
sbb
push
sbb
xor
cld
jno
std
outsb
call
inc
int
outsl
sti
mov
leave
pop
mov
out
push
lods
cmp
push
and
add
push
xor
xchg
test
sbb
mov
jl
outsl
popl
or
sub
bound
and
movsb
cld
movsl
mov
xchg
scas
adc
push
jg
xchg
jns
mov
push
nop
bound
mov
aad
add
adc
inc
push
xchg
repnz
outsl
in
mov
out
pop
mov
cmp
sbb
sub
stos
add
loopne
jmp
cld
jnp
xor
lcall
push
jne
mov
xchg
sub
cwtl
push
xor
jl
sbb
nop
xchg
jp
repnz
mov
data16
mov
mov
icebp
lods
sub
fldt
push
mov
inc
jp
push
aaa
dec
jb
cld
push
dec
repz
rclb
inc
sbb
or
inc
orb
ja
cmp
cmpsl
imulb
cmp
push
sub
out
int3
rcll
and
or
pop
scas
cltd
add
mov
xlat
popf
inc
mov
loop
mov
inc
jle
sbb
divl
push
or
mov
xor
outsl
and
xor
lock
divl
hlt
sub
loop
outsb
adc
push
push
inc
and
and
mov
adc
add
fadd
subl
loope
sub
xor
push
cmp
and
adc
es
push
stc
sbb
bound
sahf
addr16
jbe
fsubl
inc
and
bnd
pop
push
inc
jbe
ret
add
jmp
jnp
out
aam
mov
in
push
pop
subl
or
sub
out
inc
dec
bound
and
enter
mov
mov
xchg
sub
call
xchg
xchg
cmp
sub
nop
sub
and
push
sub
cmp
movaps
mov
ja
pushf
inc
andb
adc
fists
nop
or
mov
mov
rorl
lahf
aaa
and
mov
outsb
ret
sarb
or
fimuls
or
mov
push
jo
rorl
and
dec
sahf
mov
xchg
jg
nop
mov
add
cmpsb
jle
or
and
test
sti
mov
mov
pop
or
jne
pop
js
into
mov
sbb
sub
mov
or
rorl
mov
push
xchg
jbe
inc
mov
or
sahf
and
inc
mov
pop
jo
out
int
adc
xchg
insb
dec
fcomi
sub
xor
jb
jg
inc
add
jecxz
clc
fdivl
dec
jns
ret
rolb
mov
mov
adc
cmp
xchg
ret
push
jge
les
sub
arpl
mov
call
lods
jecxz
mov
add
jecxz
dec
pushf
sub
xchg
xchg
sub
inc
lret
add
mov
push
inc
add
pusha
inc
jbe
sti
outsl
mov
and
cmp
jmp
rcll
mov
xor
cmp
inc
daa
xor
pop
cs
adc
das
dec
adc
or
sub
ret
jecxz
les
mul
jmp
jo
pop
out
test
and
in
mov
cmpb
shrl
sub
pop
dec
fcmovu
add
adc
mov
loopne
fnop
in
and
mov
or
aas
xchg
ds
mov
icebp
stos
scas
bound
into
testl
cmp
and
mov
cmp
pop
cmpsl
sbb
stos
loope
ja
fcomp
push
mov
push
inc
das
jno
cs
faddl
xchg
jg
sub
pop
or
sub
or
inc
mov
das
jmp
pop
cmp
femms
push
pop
in
outsl
xor
pop
sbb
jae
mov
stc
push
jnp
inc
dec
mov
sub
dec
out
sahf
outsb
xchg
pop
and
and
das
adc
lret
fs
xchg
dec
and
add
enter
sbb
add
shlb
je
mov
mov
loopne
dec
sbb
jge
pop
inc
mov
xchg
mov
loope
sqrtps
out
push
xchg
xor
iret
inc
jae
icebp
xchg
lret
add
push
iret
lahf
fxch
add
push
in
sub
lcall
popl
lret
or
pushf
lods
push
push
std
or
insb
mov
push
int3
popf
sub
mov
loope
popa
xchg
sarl
stc
jns
sbb
adc
daa
inc
sub
jns
cs
push
movsb
sbb
nop
cmp
dec
inc
lock
sbb
push
je
adc
dec
xlat
cmp
pop
scas
call
popf
sub
mov
int
push
cmp
fsubs
or
jg
dec
mov
lea
mov
lods
pop
ss
lods
iret
xchg
cmpsl
aas
shlb
pop
cmc
xchg
mov
mov
fldz
lret
ret
jb
inc
pop
rcrl
xorl
jo
or
push
sub
mov
jl
or
sbb
outsl
add
arpl
cli
addr16
cmpsb
adc
repnz
xor
fimull
inc
cmp
cmpsb
mov
xchg
clc
mov
loopne
sub
incl
movsb
sbbb
jmp
out
dec
pop
mov
add
int3
mov
jb
and
and
xor
sub
pop
fadds
add
fisttpll
xchg
repz
adc
test
test
decl
dec
jmp
jno
cli
shrl
mov
es
pop
adc
inc
cwtl
das
xchg
insb
jge
cli
fldcw
iret
pop
div
mov
xchg
cmpsl
mov
insb
cmpsl
imul
jns
mov
enter
pop
arpl
shl
testl
cmpsl
out
bound
add
pushf
mov
add
addr16
iret
xor
or
das
mov
movsl
add
xor
inc
data16
je
data16
sub
sbbl
ds
fistpll
sbb
sarl
add
mov
push
mov
xor
jo
dec
clc
subb
push
push
cmp
xor
jns
sub
jb
popf
jl
js
in
outsb
push
fcoml
test
ds
jae
ret
fimull
inc
int3
imul
scas
jno
jns
mov
mov
jg
mov
cmpl
pop
fmuls
dec
icebp
xor
ja
sbb
mov
mov
out
mov
sbb
out
cmp
ss
cmpsb
fwait
in
jb
jle
in
scas
test
inc
rcll
xchg
flds
test
mov
insl
mov
imul
ds
fs
fistl
add
jecxz
test
xor
jecxz
cmp
mov
imul
dec
inc
jp
pop
sbb
popa
hlt
insl
dec
pusha
sbb
and
jle
into
add
insb
cli
stos
loopne
sbb
dec
jae
jnp
inc
jl
into
dec
mov
cwtl
pop
lcall
push
shl
ds
aad
mov
jno
adc
xchg
ret
dec
aas
andb
leave
cmp
lods
aad
pop
push
cmpb
mov
mov
mov
pop
cmpsb
mov
pop
sahf
repnz
mov
andb
lret
stos
or
lods
mov
add
or
dec
add
xchg
icebp
inc
ljmp
lds
jp
jns
xchg
cld
sub
push
xorl
push
sbb
clc
add
xchg
je
push
fldl
push
addr16
cmpsl
mov
gs
push
ja
and
xchg
test
out
jo
rcll
cli
cwtl
test
icebp
outsl
inc
sbb
repnz
jae
ljmp
sub
hlt
pop
inc
sub
pop
cmpb
dec
inc
inc
fs
push
xor
ret
mov
test
test
jge
pushl
ljmp
push
popf
adc
addr16
jnp
leave
mov
rclb
adc
stc
les
xchg
dec
repz
testb
popf
fistps
jne
jnp
cmp
mov
jle
out
test
lea
xorl
sbb
in
and
ja
lret
inc
jg
xchg
bound
in
sub
xor
cmpsl
sahf
std
std
fdivp
or
lret
adc
mov
lock
mov
and
xor
sarl
shll
add
pushf
pop
and
xchg
inc
imul
adc
lea
fmuls
imul
sbb
xchg
sub
mov
je
inc
iret
push
and
orb
dec
add
imul
icebp
and
jno
int3
clc
daa
xor
push
sbb
leave
adc
jns
fwait
and
jge
dec
inc
cmp
out
clc
inc
mov
gs
xchg
add
das
inc
in
mov
and
cltd
ret
dec
xchg
rclb
ret
mov
adc
dec
lods
out
and
lods
lods
mov
pop
aaa
add
or
arpl
pop
shll
inc
sarl
pushf
mov
mov
aas
inc
imul
jb
jle
and
dec
mov
ffree
ret
test
popa
mov
add
pop
push
dec
nop
test
push
mov
pop
mov
popf
cmp
jae
or
sub
pop
jo
fstp
fisubrl
dec
sbb
push
testl
xchg
lods
scas
or
fcmovu
pop
inc
idivl
mov
sub
cmp
pop
sbb
out
mov
rcrb
mov
push
pop
sub
lret
inc
inc
pop
into
sbb
cli
pusha
jno
push
mov
sub
xchg
jnp
idiv
fs
adcb
pop
push
aas
shlb
cs
mov
mov
adc
pop
clc
mov
int
jnp
fisttpll
xor
je
xchg
imul
sbb
arpl
iret
fsub
xlat
rcrl
scas
stos
jne
add
mov
loope
push
sbb
in
push
test
stos
xchg
test
dec
arpl
in
xor
jmp
jmp
addr16
loopne
cltd
shr
xlat
shrb
test
push
sahf
push
pop
cmp
dec
test
mov
repz
pop
mov
push
insl
dec
xor
push
mov
mov
xor
xchg
imull
popf
arpl
scas
jg
outsb
mov
scas
push
add
aad
fmul
dec
pop
loope
lea
cwtl
xchg
insl
test
jae
pop
push
mov
mov
adc
cmp
xchg
push
mov
pop
cmp
rorl
pop
mov
stc
xchg
mov
cmp
lret
jle
not
push
or
fmull
cmpsb
loopne
push
dec
lret
jbe
mov
push
sub
mov
dec
les
sub
mov
pop
and
shl
int
push
mov
fdiv
xor
cmpsl
xchg
mov
inc
in
dec
jge
adc
dec
ret
mov
shrb
xor
push
push
inc
movsl
mov
pop
int3
repz
dec
movsb
mov
cmp
sahf
decl
xchg
scas
pop
jge
adc
outsb
ja
fisubs
ljmp
test
pop
jno
ds
out
adc
xor
cs
lds
or
jo
dec
aas
ljmp
insl
shr
pop
cld
inc
out
dec
cmp
mov
dec
push
dec
push
jnp
sahf
pop
mov
ja
rcrl
push
dec
and
xchg
je
stc
mov
xor
inc
push
xor
jg
roll
lahf
movsl
mov
sahf
nop
inc
and
aam
pusha
jmp
jl
arpl
shll
mov
and
pop
dec
rcrb
adc
fs
imul
ss
loope
xor
int3
mov
push
mov
mov
scas
hlt
lcall
mov
pusha
push
enter
jae
fildl
std
clc
stos
shll
scas
and
scas
push
push
or
pop
mov
dec
jb
popa
lret
aaa
cwtl
in
jl
pop
test
mov
fistpl
out
mov
inc
xchg
shrb
iret
rcr
pop
addl
pop
stos
push
xchg
aad
push
inc
fmulp
pop
loopne
xchg
add
lret
jmp
dec
ret
mov
ret
data16
lds
mov
jle
mov
pop
push
fcmovnb
repnz
adc
or
pop
pushf
push
lahf
mov
test
dec
or
sub
xchg
das
xor
jo
icebp
jl
adc
and
aaa
pusha
repz
xor
fstpl
icebp
in
cmp
aaa
jle
sti
out
sbb
xchg
dec
mov
sti
cs
and
mov
mov
ror
mov
or
push
fadds
xor
inc
rorb
push
gs
loop
mov
cld
jmp
popf
pushf
sub
repnz
mov
xchg
in
sub
mov
cld
les
out
jb
imul
fstpt
xchg
pop
inc
push
add
outsl
int3
inc
dec
mov
insl
imul
mov
aam
out
repnz
shlb
int3
cli
mov
in
stos
out
insb
daa
lods
popa
push
bound
rcrb
outsb
inc
imul
mov
rcrb
stos
icebp
adc
leave
sub
pop
inc
mov
fsubrl
adc
pop
xchg
push
pop
and
and
sub
add
add
repz
mov
sub
adc
xlat
mov
or
xchg
xchg
fs
lret
fnstsw
jb
les
and
xor
js
or
pop
push
jb
add
stos
mov
adc
je
loope
pop
mov
and
inc
mov
mov
ret
dec
test
je
and
stos
ret
loopne
sub
adc
jne
imul
clc
rcl
repz
jle
sub
adc
mov
rcrl
fdivrp
stos
pop
aam
dec
sbb
or
mov
lret
mov
or
icebp
xchg
pop
outsb
mov
aam
fwait
js
les
or
ds
add
pop
cmp
inc
imul
testl
pop
jl
pop
int3
outsb
and
movsb
aam
aaa
int
xor
lods
push
jno
int3
cmpsb
mov
pop
fucomi
xchg
pop
xchg
jo
mov
mov
pusha
dec
rorl
dec
jecxz
outsl
mov
or
sarl
pop
repz
je
mov
scas
adc
push
push
rcr
or
and
mov
test
prefetchwt1
or
js
repnz
insb
in
ds
aas
push
xchg
cmp
leave
ss
adc
mov
dec
mov
stos
std
or
xchg
push
stc
xchg
pop
outsb
cmp
push
xchg
jo
and
xchg
pop
pop
popw
wrmsr
push
testb
xchg
sbb
pushf
jns
sbb
lahf
cmpsb
jg
cmp
sbb
mov
jbe
mov
mov
inc
gs
push
ret
and
fidivs
mov
lret
rolb
or
jmp
test
call
dec
cmp
dec
push
movsl
xor
sbb
mov
bound
lahf
movsl
test
negb
mov
shrb
popa
out
add
push
push
adc
je
inc
in
sarb
leave
jge
loop
adc
fidivl
inc
fiadds
scas
xchg
cmp
mov
ja
std
pop
inc
insl
imul
xor
lods
jp
mov
or
lea
pop
stos
rolb
jle
pop
sti
gs
mov
mov
add
inc
xchg
sub
gs
mov
mov
ljmp
imul
fmul
mov
fnstsw
cmp
and
gs
ja
popa
ja
insl
sbb
les
xorl
icebp
mov
push
add
out
mov
push
mov
adc
pop
aas
ret
push
ficompl
xor
mov
push
pop
int
pushf
outsb
sub
jnp
loop
jmp
jge
xlat
cmp
mov
xchg
mov
enter
xor
mov
mov
mov
cwtl
mov
ss
fnstenv
std
fldt
or
sbb
jns
aam
in
push
push
aad
int
movsl
lods
mov
cld
stos
pusha
add
or
or
dec
and
push
stc
leave
cmp
lcall
ja
and
cwtl
fistl
cwtl
and
loop
outsl
sub
fwait
mov
mov
icebp
nopl
jl
mov
int
sbb
into
and
int
push
and
jae
or
lcall
roll
sahf
stc
mov
add
imul
and
popa
scas
push
call
jae
sbb
inc
adcb
xchg
push
insb
pop
mov
sbb
stos
imul
loop
mov
pop
cmpsb
xor
mov
jg
cmpsl
outsl
dec
mov
scas
jo
dec
cltd
xchg
es
cmpsl
jmp
sub
jecxz
popa
iret
or
mov
xchg
jo
sbb
mov
dec
ficompl
dec
test
test
mov
or
in
xor
in
out
stc
int3
sti
mov
jmp
lods
sahf
mov
outsb
xlat
jp
sarb
dec
inc
adc
push
das
inc
xchg
xchg
outsb
enter
dec
rcrb
jl
push
fildl
outsl
cmp
les
ss
popl
xchg
xorl
int3
add
push
mov
dec
push
nop
sbbl
inc
inc
jb
cmpsb
adc
cmpsl
jb
cmp
jp
mov
mov
or
fs
popf
jns
mov
inc
inc
int
enter
add
push
cmpsb
mov
shlb
xlat
mov
jmp
jge
mov
jmp
mov
xchg
pop
xchg
outsb
mov
movsb
inc
xor
or
shrb
xor
jge
ss
in
mov
movsb
es
sbb
add
adc
shll
scas
nop
sarb
pop
mov
sbb
dec
cmp
lret
fstpl
xchg
in
lds
adcb
insl
adc
insl
popa
xorl
dec
and
mov
dec
dec
push
gs
lock
cmp
inc
sbb
xchg
add
cli
cld
int3
inc
outsl
mov
addb
adc
add
clc
scas
notl
cmp
scas
lods
jecxz
ret
in
arpl
mov
fmuls
inc
decl
cs
lds
xor
popa
cwtl
gs
sbb
xchg
negb
test
cmp
jnp
pusha
xchg
aas
movsb
inc
pop
pop
sbb
and
xchg
dec
scas
adc
add
stc
dec
and
adc
push
pusha
xor
mov
xlat
fnsave
push
cvtpi2ps
jne
sbb
out
xlat
pop
fisubs
pop
lcall
ss
lea
or
jle
orl
and
inc
dec
out
cmpsb
and
mov
nop
incl
mov
xchg
out
nop
sub
jl
jne
xor
ss
in
out
out
ja
das
inc
cmpb
mov
inc
daa
pop
aas
into
aad
cmpsb
adc
stc
sbb
and
cs
jne
or
fimull
jne
and
adc
jbe
pop
or
adc
imull
cmc
add
cld
jae
fnstsw
or
push
ljmp
rclb
cmp
adc
aas
cmp
ja
or
int3
jnp
clc
cld
pop
push
daa
mov
jns
insw
adc
or
loope
addl
sbb
mov
cmc
jo
rcrb
pop
outsl
adc
mov
fcompl
mov
mov
pop
pusha
fadd
ss
cld
std
repz
aam
mov
dec
mov
test
ds
lock
mov
sbb
adc
mov
cwtl
orb
loop
negl
loope
mov
inc
pop
jb
ret
sub
jo
bound
push
int
push
add
mov
mov
xchg
pop
add
cmp
jb
adc
lock
movsb
insl
push
out
nop
push
movsb
xchg
or
loop
inc
leave
mov
popa
stos
ret
mov
jo
cmp
out
pop
and
je
leave
pop
dec
cld
xchg
call
icebp
out
inc
mov
arpl
xchg
cmpsb
das
push
in
sti
cmp
sbb
ljmp
cmp
mov
xchg
stos
sarb
or
imul
dec
inc
mov
cmpsl
shrb
cmp
jns
mov
daa
mov
movsb
pop
mov
dec
jge
and
mov
test
lcall
cmp
mov
mov
lea
jecxz
cs
jnp
xchg
mov
pop
and
enter
push
pop
jp
lret
or
pop
adc
mov
movsl
xor
sbb
xchg
xorb
or
jge
jl
mov
cmp
icebp
mov
leave
sarb
mov
mov
lock
mov
lds
cmp
pop
leave
adc
lods
and
js
xchg
lds
fsts
push
dec
mov
sbb
push
xchg
mov
test
lret
and
repnz
loopne
lea
sbb
call
out
rol
and
adc
xlat
in
or
pop
inc
pop
lret
in
lahf
lret
sarw
lock
mov
mov
and
xor
ds
jbe
xor
mov
repnz
xor
lock
pop
dec
or
mov
lret
dec
adc
gs
rcll
or
test
or
add
sbb
or
inc
cmp
stc
add
pop
or
push
adcl
push
add
inc
or
stos
rorb
popf
rorl
sub
ror
or
test
in
fwait
mov
pop
add
test
mov
int
pusha
push
repz
ret
sub
lcall
push
inc
jnp
push
sbb
popfw
xor
and
xchg
cmp
pop
movsb
jl
psrad
push
dec
imul
pop
lock
lcall
pop
inc
shlb
data16
mov
popl
ret
add
mov
mov
leave
xchg
arpl
xor
scas
jg
or
loop
lahf
lret
mov
repnz
cmp
roll
mov
repnz
xlat
leave
inc
mov
cld
outsl
xchg
add
ss
pusha
dec
push
loopne
dec
pop
sahf
xlat
aad
and
pop
jge
fndisi(8087
jg
sub
sbbl
adc
out
adc
mov
je
aam
mov
addr16
cmp
sti
push
mov
scas
ja
pop
in
jnp
inc
inc
ljmp
or
fisubrl
hlt
in
and
cwtl
xchg
mov
add
out
dec
inc
mov
push
xor
mov
cltd
ret
mov
cmp
dec
test
clc
gs
ljmp
xlat
js,pn
hlt
cli
push
arpl
sub
scas
mov
fsubl
popf
cmpsb
adc
inc
push
add
mov
mov
mov
stc
mov
adc
fwait
sub
cmp
aas
fstp
jmp
inc
ljmp
lret
pop
push
inc
rcrb
rcrb
mov
jp
sbb
dec
dec
shl
mulb
mov
push
cmp
pop
jecxz
loopne
cli
cmp
cmp
out
pusha
cmc
inc
pop
pusha
cli
repz
sti
pop
xor
fwait
daa
test
negl
lea
rcl
or
or
hlt
popa
fidivl
mov
add
fnstsw
std
test
mov
mov
aad
dec
int3
pop
daa
sti
icebp
mov
add
jo
push
clc
jae
js
popa
cmp
stc
fistpll
rcrl
mov
sbb
icebp
push
or
fwait
into
push
mov
jle
push
dec
jle
push
xor
dec
jl
xchg
inc
sarb
jmp
push
add
cmp
int
pop
push
jmp
aas
test
pusha
mov
out
jmp
cwtl
outsb
sub
mov
xor
in
sahf
dec
dec
aaa
mov
loope
mov
inc
lock
and
fnstcw
inc
lods
or
pushf
adc
scas
xchg
push
notb
xor
ja
push
lds
or
sarb
jb
inc
pusha
pop
test
push
decl
sbb
push
add
push
sbb
aas
inc
aaa
sub
fsubrs
jle
mov
push
sub
cmpb
adc
mov
pop
mov
xchg
xlat
aad
clc
xor
mov
loope
addl
aas
add
outsb
shll
repnz
outsb
adc
push
popa
jp
xchg
mov
xchg
push
and
lret
and
js
arpl
mov
xor
mov
and
shrl
push
xchg
out
dec
mov
dec
outsl
pop
mov
jmp
inc
push
mov
xchg
ret
sub
mov
mov
inc
mov
icebp
mov
pop
jle
pop
out
mov
xlat
cld
push
stos
push
jmp
out
jmp
rcll
sbb
hlt
and
pusha
mov
jg
cmp
pop
lock
lahf
xchg
out
ds
mov
pop
inc
push
mov
sbb
out
jle
mov
xchg
push
popa
out
scas
mov
insb
fists
xor
scas
call
and
in
pop
add
and
sbb
or
stos
sti
push
cmp
push
pop
test
or
cmpsl
xchg
frstor
out
inc
leave
mov
xchg
shrb
xor
dec
add
sub
mov
push
out
and
mov
pop
ja
into
cmp
stos
gs
ds
fisttpl
jl
addr16
out
fidivs
mov
loop
loopne
lods
and
add
inc
test
int3
mov
cwtl
pop
push
push
test
mov
call
inc
push
ljmp
pop
xchg
sbb
pop
sub
or
jge
lret
les
test
insl
rolb
les
adc
push
sbbb
mov
pop
std
cwtl
mov
imul
lret
or
or
mov
in
fcompl
cmp
ret
outsb
stos
xor
push
cmpl
cs
mov
jnp
and
out
sbbl
repnz
jns
sbb
das
and
xlat
push
fbld
clc
adc
arpl
mov
jl
aam
rolb
nop
sbb
pop
pop
inc
in
pop
aam
scas
push
jecxz
bound
add
jge
pusha
jmp
inc
mov
dec
dec
sub
xchg
xchg
mov
mov
or
mov
mov
shll
ljmp
xchg
jb
aam
subb
pusha
push
movsb
iret
jae
enter
pop
dec
sbb
cmc
cwtl
cmp
paddd
xchg
sub
outsl
adc
sub
or
cmpsl
mov
ret
jnp
push
sbbb
rorb
jne
cwtl
fsubr
xor
mov
repz
dec
imul
popf
dec
mov
je
jmp
mov
pusha
xor
pop
and
push
cmp
fwait
pushf
dec
shlb
xchg
test
push
mov
inc
mov
adc
push
movsl
dec
movsl
and
jle
cmp
jmp
jp
and
int
jp
sbb
fildl
add
inc
loopne
aam
fnstsw
and
icebp
loope
sub
adc
jae
xchg
pop
mov
cmp
aam
fsubl
inc
push
cs
push
lret
cmp
out
das
mov
push
pop
xor
outsl
cwtl
ss
sbb
iret
pop
leave
pop
aad
popf
xchg
cli
fadd
test
aam
add
sub
pop
dec
cld
inc
or
movsb
addb
add
or
mov
repnz
rclb
mov
divl
aas
jp
cmc
and
adc
and
imul
pop
scas
sub
test
push
std
dec
mov
mov
in
pusha
push
push
pop
mov
in
rcrb
adc
xchg
pop
or
cmpl
ficoms
cmc
stos
jmp
mov
in
daa
lods
mov
add
mov
aad
call
inc
lea
push
cltd
cmp
out
arpl
lcall
adc
inc
mov
pushf
sbb
sbb
adc
mov
jmp
data16
fbld
dec
jp
jp
rorl
in
jge
jo
lcall
shl
scas
ja
add
pop
nop
or
push
fdivl
xchg
add
xchg
ffree
add
pop
xchg
pop
mov
inc
sti
cmp
xor
call
outsl
or
iret
pop
aaa
dec
mov
movsb
or
adc
add
push
and
pop
in
and
adc
xorl
xchg
loope
pop
ret
cmc
jmp
and
pushf
push
jnp
or
movsb
imul
xor
mov
push
mov
cmpsb
out
pusha
xlat
add
jb
inc
jecxz
pushf
loope
and
jecxz
inc
clc
jp
xor
push
leave
cmp
xchg
sbb
adcb
jo
ljmp
inc
loope
dec
mov
mov
xor
pop
test
pushf
movhps
fwait
stc
sbb
sub
mov
hlt
fwait
insl
hlt
gs
push
inc
cmp
pushf
lock
sbb
jl
push
and
rcl
xchg
jae
mov
imul
outsb
sub
jmp
sahf
pop
ja
imul
ret
sbb
lods
test
pop
test
hlt
xor
mov
add
or
adc
jecxz
aad
mov
mov
fsubr
mov
out
sti
cli
pop
test
ds
sub
mov
mov
mov
cs
imul
push
dec
xchg
push
jge
outsb
add
fdivr
testl
das
mov
stc
das
mov
repnz
adc
xchg
sbb
dec
xorb
mov
inc
int3
xchg
pop
sbb
xchg
xlat
sahf
pushl
xchg
cld
adc
sub
das
xchg
lret
sub
sti
adc
cmpsb
insb
xchg
mov
xor
mov
test
pop
shlb
mov
push
loope
mov
jmp
pop
notl
mov
xchg
outsl
test
xor
insl
sub
outsl
dec
xor
sub
aad
ljmp
sub
mov
xor
cmp
jl
loope
xor
outsb
rclb
mov
push
jmp
pop
sbb
mov
push
scas
cmp
jmp
pop
enter
xchg
shll
and
rcrb
jae
jg
adc
sbb
jnp
ret
sub
sar
xor
in
testl
mov
mov
xchg
cmpsb
lds
xor
inc
mov
stos
ljmp
ljmp
or
mov
lods
pop
das
dec
repz
pop
jmp
add
mov
loop
hlt
ds
xor
xchg
inc
pop
lock
pusha
gs
dec
sahf
dec
ljmp
in
lret
repz
outsl
jl
fistl
mov
nop
push
lret
lock
and
lods
insl
subl
inc
adcb
lods
pop
inc
jbe
loopne
sub
aam
mov
stos
lret
pop
stos
rcl
loope
ror
movsb
mov
mov
lock
fsubrp
push
xor
mov
cltd
sub
dec
mov
fldcw
out
xchg
pop
sbb
lahf
xchg
fwait
xor
push
rcr
push
mov
les
pop
in
xchg
dec
mov
nop
mov
mov
sub
std
std
daa
leave
es
sub
lods
adc
test
in
pop
inc
jp
cs
xlat
inc
dec
lahf
out
test
cmpsb
call
mov
add
mov
shrb
jb
in
mov
js
xor
cmc
sbb
pushf
pop
cli
inc
xchg
es
dec
mov
push
mov
adc
stos
xorl
adc
xchg
in
icebp
aaa
mov
out
jbe
cmc
dec
loopne
arpl
clc
mov
xchg
push
push
sub
mov
arpl
rol
jmp
pushf
lret
dec
fs
test
xor
push
jle
cwtl
inc
sti
inc
rcr
fistpl
or
mov
mov
xlat
adc
dec
in
mov
movsb
sbb
dec
xorb
xchg
je
icebp
fstl
cltd
call
sub
xchg
mov
cmp
ds
jns
test
cmpsb
movsl
jnp
jmp
mov
andl
jmp
fnstenv
outsb
sbb
cmp
mov
test
sbb
mov
enter
ficompl
shll
jnp
add
ret
dec
mov
mov
test
test
jno
sub
mov
in
imull
xor
xor
or
lcall
xlat
and
lcall
mov
shrb
mov
inc
push
sbb
pop
ret
sub
lcall
aaa
adc
aad
adc
js
jnp
push
daa
xchg
jge
lcall
jns
jecxz
lods
hlt
sbb
insb
pop
inc
aad
sbb
lock
repnz
aad
scas
mov
add
mov
inc
xchg
loope
sub
mov
in
sub
pop
xchg
jo
mov
xor
fcmovne
popa
inc
cmp
sub
inc
jecxz
pop
cmpsb
dec
dec
push
sub
bound
lods
iret
icebp
xor
out
rolb
popf
xor
pop
je
test
popf
dec
add
or
lock
fsubs
xor
jno
adc
xchg
dec
cmpsl
sarb
jecxz
je
push
xchg
mov
jp
in
jns
and
push
xor
xor
movsl
dec
sub
dec
out
adc
xchg
or
rcll
aas
stos
fidivs
dec
cmpsl
jge
pop
ds
pop
cld
lahf
mov
or
jnp
dec
xchg
pop
xchg
fldl2t
inc
add
pusha
adc
jno
or
es
add
xchg
and
sub
xchg
ret
int3
mov
fstl
sub
das
push
push
stos
out
std
movsl
cmp
mov
add
jno
mov
add
sub
mov
addr16
fsts
in
inc
lods
cltd
jnp
ret
enter
fs
into
cmpsl
lock
push
adc
xchg
push
call
js
jnp
cltd
xor
xlat
xlat
ljmp
jne
add
jmp
cs
fsubs
dec
mov
mov
adc
pop
lea
cmp
mov
jmp
pop
dec
sbb
or
jae
mov
inc
xor
clc
inc
mov
daa
sub
ret
jge
mov
movsb
stc
jecxz
inc
mov
popa
cli
jecxz
push
mov
and
or
xchg
out
sarb
rcr
push
lcall
jmp
cmp
data16
mov
add
mov
int3
mov
mov
xor
clc
mov
stos
jge
adc
dec
push
xchg
in
aas
sbb
add
insl
pop
and
push
aam
sbbb
fistl
adc
and
sub
cmp
mov
enter
pop
sub
mov
mov
lret
dec
arpl
sbb
push
or
iret
ds
in
cmp
sub
mov
cmp
imul
jo
cmp
dec
push
xchg
leave
mov
movsb
aaa
xchg
adc
jbe
push
xchg
outsb
xchg
jb
call
icebp
lock
imul
inc
or
jne
dec
cmpsb
stos
fwait
ret
add
push
push
xchg
fcompl
aaa
fwait
mov
jnp
dec
jmp
ss
mov
lods
sub
adc
insb
scas
ja
pop
adcb
addr16
dec
mov
mov
jl
sbb
movsl
mov
jg
cwtl
xor
add
popl
loope
inc
std
xor
and
pop
push
sti
std
shll
sbb
push
mov
pusha
mov
aaa
jl
adc
test
jb
mov
loop
insl
leave
int
xchg
xchg
aad
add
adc
pop
fisttpll
mov
icebp
shlb
push
inc
addr16
xchg
xchg
and
add
xor
js
iret
cld
xchg
rcl
sub
sbb
pop
mov
push
pusha
test
jle
loop
pusha
sbb
das
test
cltd
cmc
fisttpl
aaa
test
cs
fsubrl
mov
loop
scas
dec
and
out
push
data16
cmp
jmp
adc
jmp
mov
sbb
cmp
add
mov
push
and
loope
shll
push
lea
sbb
dec
add
pop
xchg
je
sahf
jl
lods
dec
jge
or
pop
cmp
test
jmp
int3
scas
jg
sub
mov
loopne
lret
fs
adc
iret
sahf
loop
and
pop
repz
and
xor
push
sbb
fadds
clc
xchg
and
hlt
ret
sbb
jp
push
jae
pop
jg
sbb
and
xchg
mov
aas
daa
fists
lods
lret
fbstp
push
xchg
mov
or
rorl
adc
xlat
imul
test
nop
xlat
out
inc
xchg
outsb
push
jge
push
aam
gs
xor
sbb
pop
lahf
and
push
ror
cmp
pop
cpuid
or
jb
xchg
mov
leave
popa
pop
cld
daa
pushl
mov
mov
popf
xchg
test
sub
cwtl
jbe
inc
mov
or
xlat
out
jo
cmc
xchg
mov
shl
mov
or
fidivrs
jne
push
dec
xchg
mov
xor
daa
daa
out
add
icebp
aaa
inc
xlat
and
pop
cmc
into
xor
sahf
dec
xor
jno
dec
pushf
mov
popa
dec
mov
or
and
or
push
cwtl
bound
cmp
sbb
ja
std
mov
inc
jnp
shll
lods
in
mov
outsl
jmp
and
lcall
sbb
jne
dec
je
fs
out
mov
outsl
cwtl
lret
ljmp
mov
dec
mov
xchg
inc
add
or
lods
in
ret
mov
call
clc
stc
sbb
xchg
shl
movsl
gs
ja
push
mov
jnp
push
data16
mov
nop
adc
adc
and
jge
fsubrl
mov
cmpsb
mov
inc
aas
lds
xchg
sub
dec
incl
mov
ljmp
aam
jae
jl
arpl
dec
imul
repnz
ja
inc
xchg
sbb
rcrb
sbb
mov
in
xchg
ret
notb
mov
hlt
mov
loop
fmuls
cmpsb
lods
add
daa
add
pusha
or
fiadds
enter
sbb
xchg
adc
pop
sahf
fnstsw
mov
xchg
inc
or
imul
xchg
mov
sub
sub
cmp
and
inc
jae
inc
repz
lea
out
sbb
jmp
stos
mov
fildl
aam
in
jno
mov
mov
jl
cmp
loop
pop
pop
mov
and
mov
jmp
push
sbb
lahf
cmp
jl
xor
pusha
xor
mov
mov
cmpsb
mov
fnstcw
pop
cli
jl
push
adc
pop
out
jne
mov
frstor
out
mov
cs
scas
add
aaa
sub
xor
imul
xor
push
sbb
inc
ffree
lods
mov
popa
add
xchg
mov
sbb
push
dec
out
and
xchg
sub
sti
iret
fisubrs
bound
xor
fisubrs
int
lods
mov
push
dec
mov
and
mov
jne
stos
inc
insb
push
pusha
adc
jle
mov
xchg
or
or
xor
cmp
insl
test
push
cmp
addl
mov
push
push
in
inc
std
dec
test
clc
or
sbb
and
stc
lahf
mov
sbb
cmp
mov
mov
inc
rcrb
xor
xor
loop
das
adc
or
mov
dec
and
cld
cmc
and
faddl
imul
std
inc
imul
stc
repz
out
pusha
aam
fld1
pop
or
scas
leave
je
out
popa
lods
inc
adc
lock
notb
sub
mov
sub
xchg
xor
jo
cli
sub
shlb
repz
cmp
jg
xchg
jmp
cmp
mov
add
and
push
fcoml
xor
jno
cmp
mov
daa
dec
out
lcall
jnp
sahf
int
test
stos
das
je
popa
movnti
btc
testb
jo
or
pop
add
jno
mov
cli
inc
test
mov
jne
xchg
and
cmp
push
jne
jnp
jecxz
sub
push
cmpsl
inc
inc
cmp
icebp
std
sbb
mov
push
push
sbb
adc
es
stc
pop
shll
jbe
jno
insb
add
cmpsl
mov
test
hlt
incl
cmpb
lret
in
repnz
scas
sbb
mov
jb
or
push
sub
mov
cmc
cmp
popw
in
shll
in
fisttps
cmc
cli
aas
imul
imul
mov
aaa
dec
rclb
push
mov
cmpsb
ficomps
dec
cmp
nop
lock
out
mov
pop
arpl
sti
cmc
or
cmpsb
jg
outsl
ffree
movsl
jmp
in
insb
imul
imul
sarb
sub
or
fwait
pop
jp
pop
shll
imul
ja
add
into
cmp
orb
and
adc
jp
pop
shlb
jle
data16
sbb
jae
sub
jle
out
sub
sub
fiadds
xchg
xchg
fdiv
lea
mov
push
sahf
add
push
int
or
dec
enter
cmpsb
jmp
pop
adc
cmpsb
es
xchg
lock
and
addl
cmp
mov
fnstcw
mov
mov
loopne
jne,pn
dec
mov
arpl
mov
mov
out
add
cmc
add
jne
fisttpl
jb
fdivs
call
dec
fcomip
cli
mov
fldenv
xlat
aad
test
outsl
and
test
or
int
cmp
push
dec
cmp
xchg
call
rclb
pop
gs
mov
mov
loopne
and
sub
xchg
loop
cvtps2pd
out
jl
jp
leave
out
xor
adc
add
loopne
pusha
pushf
rol
aad
bound
fstl
add
imul
jmp
xchg
mov
mov
jmp
testb
jnp
stos
into
jle
mov
mov
clc
sub
pushf
movb
adc
xchg
mov
pop
inc
sub
frstor
pop
movsb
mov
dec
pop
in
shl
push
xor
or
xor
adc
pinsrw
add
mov
imul
xlat
push
loop
xor
aam
jne
inc
sub
mov
repnz
rcll
inc
mov
insl
adc
insl
cmp
xor
into
hlt
and
cmp
sbb
jbe
xor
pop
aad
stos
xchg
shlb
add
lods
and
clc
mov
push
and
enter
push
jnp
cmp
pop
bound
sbb
lock
xchg
test
lods
fbstp
out
sub
out
cld
es
rol
lcall
inc
out
loop
jl
adc
mov
sti
push
pop
jmp
add
push
or
push
rolb
xor
fdiv
mov
sbb
ds
push
adc
pop
jg
mov
dec
xor
cmp
jge
aas
push
ljmp
cmp
cmp
add
mov
in
cmp
sbb
jle
pop
jnp
imul
insl
dec
adc
arpl
xchg
mov
cld
aaa
add
or
rcll
popf
ss
sbb
pushf
and
mov
push
fstpl
dec
push
cmp
repz
hlt
cmpsb
jae
and
mov
xchg
lea
int3
stos
xlat
sub
push
out
insl
ljmpw
jo
sub
add
shrb
out
scas
lods
push
or
loop
out
popa
cmpsl
andb
xor
or
push
cmp
xchg
aaa
arpl
cli
and
pop
pushw
pop
movb
pushf
push
xor
in
popl
icebp
pop
insl
xchg
sub
pop
pop
into
scas
std
mov
xchg
bound
jge
rcll
je
jecxz
into
mov
mov
jns
mov
xchg
addr16
push
xor
mov
outsb
or
movsl
rcll
add
fwait
mov
jno
in
outsl
pop
and
xchg
add
rcrb
test
or
sti
fcoms
fwait
xor
out
idivb
repz
mov
or
inc
xchg
lcall
inc
ljmp
push
xchg
std
pop
mov
ds
jp
inc
and
fdivp
mov
lahf
adc
jne
sub
out
leave
inc
xor
hlt
mov
es
mov
lds
and
movsb
and
jp
lock
stos
ret
fwait
add
sbb
xchg
lahf
sbb
in
mov
xchg
leave
dec
sbb
xchg
pop
adc
ds
scas
mov
js
stc
into
pop
cmp
rorl
jp
mov
adc
jp
jge
push
xchg
adc
leave
push
cmp
or
dec
repnz
es
das
sub
xchg
mull
cmp
push
pop
xchg
sbb
add
jns
icebp
xor
adc
jae
iret
push
fildl
mov
pusha
mov
adc
adc
pusha
cmpsb
aaa
ljmp
push
data16
test
test
sahf
adc
sub
dec
push
stos
add
dec
add
dec
sbb
gs
mov
in
dec
mov
bound
mov
ret
outsl
sbb
ds
dec
mov
xorb
push
cmp
and
rcl
sub
leave
push
stos
cltd
sbb
cmpsl
sbb
lcall
push
xlat
movsb
mov
sti
add
negl
stos
mov
orl
xor
mov
addr16
outsl
push
test
cmpl
movsl
repz
sbb
fwait
hlt
inc
dec
insl
vmptrld
loop
bound
jo
lock
mov
movsb
out
xlat
xchg
pop
loopne
mov
cld
xchg
leave
loopne
loope
ss
xchg
mov
aas
add
cli
adc
pusha
inc
push
cmp
and
cwtl
jmp
and
les
push
jg
es
sbb
add
in
xor
test
xor
mov
lock
je
shr
sub
andl
data16
mov
inc
push
xchg
jp
imul
and
nop
sub
dec
xor
adc
adcb
lds
in
mov
inc
xor
fdivr
xor
jl,pn
test
nop
imul
or
push
jg
repz
neg
push
stos
push
repz
or
mov
jp
mov
mov
inc
lcall
and
scas
mov
jb
out
mov
repnz
ss
rolb
mov
fistpl
lretw
jmp
lock
imul
into
call
lds
lods
jne
jne
nop
loope
lods
inc
jecxz
or
es
cmp
enter
test
mov
cwtl
leave
xor
out
repnz
iret
pop
mov
in
sub
cmp
mov
fmull
mov
test
sub
push
jmp
sbb
sahf
repz
and
dec
and
pop
add
dec
pop
inc
insl
aaa
pop
jne
loopne
push
inc
aam
inc
and
mov
pushf
dec
out
cwtl
fildl
cltd
xor
ss
adc
ss
or
fiadds
sbb
in
divb
dec
pop
repz
cld
inc
movl
sahf
and
mov
call
mov
mov
inc
xor
shl
shl
mov
pusha
or
jl
mov
mov
adc
jnp
adc
xor
jge
sub
test
arpl
or
mov
ds
cltd
xlat
int
cli
jnp
leave
ficompl
cli
sub
jmp
sbb
icebp
sbb
sbb
sub
mov
arpl
aaa
test
xlat
xlat
aam
cltd
imul
mov
xchg
push
cmpsl
loopne
lret
insl
adc
ret
cmp
mov
stos
ja
push
mov
jbe
test
subl
adc
cld
sti
enter
fadd
pop
inc
add
push
mov
mov
fildll
ja
cmp
cmp
jl
test
adc
fnstcw
jbe
push
and
popf
jbe
jecxz
aaa
xchg
js
mov
mov
push
loopne
pop
popf
cltd
sbb
adc
popf
push
xor
shll
cmp
mov
xor
unpckhps
cli
test
inc
icebp
sahf
pop
mov
xchg
jb
sub
aaa
pushl
push
cmc
jmp
iret
popa
lcall
sub
pusha
movsb
push
and
sub
mov
bound
pop
pop
aaa
imul
nop
dec
je
sub
dec
adc
into
pop
jge
mov
lahf
xor
sbb
jp
dec
jmp
sub
jg
inc
push
jb
xchg
dec
cmp
jmp
fwait
test
test
iret
inc
sub
and
fldcw
jmp
movsb
or
nop
cld
cmp
jnp
mov
dec
mov
cmp
cmpsb
mov
jmp
or
mov
push
xchg
stos
popf
mov
lret
push
inc
inc
popf
aad
fwait
lods
fcomp
test
and
and
pop
xor
cmp
add
cmp
cmc
cmpsl
js
sub
pop
insb
dec
xor
loope
push
xchg
fsub
in
sub
fsubl
test
cmp
aad
addb
or
mov
cmpl
jecxz
xor
inc
repnz
sub
idiv
push
es
sbb
movsb
xchg
icebp
jle
adc
iret
lret
enter
incl
ret
dec
test
lcall
xchg
xchg
or
mov
mov
mov
push
lods
dec
inc
sbb
cmp
pop
push
imul
fwait
cmp
mov
sbb
insb
aaa
pusha
stos
sbb
lret
xchg
jns
in
push
push
in
mov
push
std
iret
bound
aas
arpl
movsb
xchg
fiadds
call
shll
mov
pop
pop
xor
dec
adc
gs
pop
mov
pop
jne
shrl
pop
lret
cmp
into
xchg
aas
enter
gs
test
into
jl
movsl
test
xor
push
adc
cltd
lea
sub
movsb
mov
mov
enter
dec
add
insb
sbb
flds
cmp
and
or
jo
pop
scas
sti
lock
movb
add
je
jg
xlat
push
inc
js
dec
jg
dec
mov
mov
rcl
int3
jns
ret
insl
push
mov
and
int
daa
leave
push
mulb
stos
popf
mov
xchg
fildl
mov
cli
in
lock
ret
cli
ja,pn
aad
pop
pop
xchg
jo
sbb
sub
mov
mov
fs
mov
stc
mov
pop
mov
pop
lea
jmp
pop
sub
and
repz
jl
pop
or
inc
leave
add
mov
adc
push
movsb
nop
ror
jl
mov
daa
jl
cld
or
mov
dec
insb
gs
mov
mov
sbb
test
add
dec
in
mov
leave
xor
xchg
imul
mov
dec
add
push
lods
xchg
add
std
loope
mov
or
icebp
loop
mov
cld
loope
dec
dec
sbb
push
int3
mov
jge
popa
in
and
xorb
outsb
push
mov
pop
sbb
repz
push
dec
aas
xchg
cwtl
jmp
aaa
sbb
ja
dec
rcrb
xchg
fimuls
nop
inc
popa
js
stos
push
mov
pushf
in
pop
or
sbb
lds
adcb
mov
sbb
mov
inc
cld
xor
lret
rol
imul
xor
lret
push
cwtl
xchg
clc
and
in
dec
out
sbb
stos
insl
inc
pop
add
in
les
cmp
jnp
repz
cmp
mov
mov
sub
dec
scas
add
cmp
mov
les
popf
cmp
pop
and
cmp
dec
icebp
outsl
addr16
and
xchg
cmp
push
scas
stos
ja
subb
mov
test
repz
out
imul
ljmp
push
lock
in
popf
iret
xor
push
icebp
loop
mov
sahf
lds
lds
loop
push
mov
jp
xorl
ljmp
jne
adc
mov
and
cmc
cli
int3
ss
sbb
stc
mov
mov
in
and
cmp
xor
pop
jge
xor
jno
xchg
je
mov
and
push
nop
xchg
xchg
aaa
mov
sbb
lahf
jmp
ret
lods
mov
mov
scas
test
xchg
jne
sbb
and
or
cmp
lods
or
aad
and
and
add
inc
cmp
adc
lcall
addb
test
fucomi
push
loopne
sub
or
jb
je
daa
mov
xor
fldl
pop
sub
imul
adc
cwtl
mov
jp
pop
in
aas
jge
mov
popf
fs
lods
lods
test
test
sbb
cmc
jno
sbb
movsl
hlt
mov
sub
lret
mov
adc
add
dec
pop
inc
pop
loop
es
fwait
sbb
sbb
jge
xlat
jmp
bound
pop
dec
inc
push
lahf
mov
outsb
xor
sub
or
dec
xchg
dec
pushf
jmp
shll
imul
popa
xor
js
push
sub
or
inc
rorl
ficompl
je
sbbb
std
dec
std
test
hlt
ljmp
sub
ret
dec
dec
sbb
ror
mov
push
sbb
cmc
int3
lcall
pop
adc
test
and
pop
dec
pop
imul
mov
repnz
pop
sarb
ret
loopne
ds
sarl
mov
sbb
clc
fsubl
ss
inc
jo
ja
imul
rcl
add
in
dec
rolb
sbb
aam
lods
lret
xchg
lret
outsb
and
lods
push
inc
adc
cli
dec
fs
jae
loope
mov
lock
sbb
ret
adc
enter
mov
push
sahf
pop
mov
pop
jnp
pusha
jnp
jns
fists
pop
fcmovu
xchg
inc
xchg
test
jnp
cmp
sub
addr16
adc
negb
cmp
inc
or
hlt
dec
xchg
sbb
sbb
cwtl
cltd
adc
dec
shrl
test
jb
fcmovu
mov
sbb
jle
cmp
push
test
cld
es
lret
and
in
call
mov
sbb
sar
xor
lock
in
fildl
adc
xchg
dec
lcall
cld
jns
jecxz
mov
arpl
pop
imul
push
shlb
out
and
in
nop
bound
dec
xor
cmpsl
dec
js
outsl
xor
jmp
push
xchg
cmc
mov
sub
jg
inc
mov
xchg
mov
mov
out
add
std
je
call
cmc
xor
mov
xchg
sarb
gs
mov
das
and
sbb
xor
cltd
addr16
daa
push
pop
mov
ljmp
clc
jg
mov
mov
or
mov
mov
scas
xor
inc
sbb
inc
repz
outsl
add
movhps
repz
cs
repz
or
xchg
dec
xor
mov
mov
dec
leave
sbb
aas
leave
jae
xchg
leave
sahf
sub
movsl
std
mov
add
shll
pop
push
jp
jo
arpl
je
adc
add
loop
lds
mov
in
dec
roll
xor
jno
mov
push
cmp
dec
loopne
lcall
ds
loopne
xorl
cmp
mov
hlt
aas
enter
dec
push
mov
scas
sub
adc
mov
sbb
aad
cmp
jmp
out
mov
idivb
pop
and
xchg
lds
aas
ds
repz
ljmp
jb
aaa
popf
pop
cs
xchg
aaa
inc
mov
cld
ljmp
mov
out
push
sbb
pop
mov
adc
push
insb
andl
rcrl
jp
stos
xchg
push
test
add
lods
xchg
xchg
cmp
sahf
dec
test
xchg
roll
int
stc
stc
lret
fwait
cli
cmc
data16
mov
cwtl
dec
push
hlt
jp
das
scas
fistpl
in
dec
nop
test
push
or
pop
dec
jmp
imul
dec
mov
mov
imul
xchg
add
pop
jmp
add
sbb
jp
jo
rep
mov
push
or
testl
cld
popf
mov
sub
movsb
sbb
imul
inc
arpl
cmp
or
xchg
pop
xchg
xorl
push
idiv
jne
adc
outsl
fcomps
insb
sub
cwtl
pop
mov
je
adc
rcll
fildll
mov
ffreep
cmp
push
mov
xchg
sbb
mov
fsubrs
cvtps2pd
cs
subl
push
loopne
fwait
mov
test
xor
sbb
mov
push
add
push
pop
sbb
clc
stos
xchg
bound
leave
test
loop
aam
adcl
dec
daa
cmpl
xchg
fbld
xor
push
push
mov
push
or
xorb
jo
jo
int3
push
inc
dec
sbb
jo
mov
add
test
adc
xchg
or
jne
orl
mov
jp
daa
dec
jno
mov
push
fstp
mov
out
cmp
loope
add
cwtl
cmpsl
dec
fnsave
lret
xchg
imul
adc
pusha
xchg
and
xor
adc
cmp
lret
dec
mov
add
pop
mov
mov
push
sarb
mov
pop
push
jp
ss
iret
push
or
jae
stos
dec
jne
repnz
out
daa
adc
arpl
pusha
test
sub
cmp
sbb
cmp
cmp
shrb
xor
rorb
mov
jmp
hlt
orb
ficomps
setnp
push
addr16
clc
rcrb
fadds
adcb
mov
ud1
rorb
loop
test
adc
insb
and
cmp
or
movsl
popf
xchg
add
mov
add
divl
imul
pop
dec
lea
push
shr
cltd
lcall
outsb
jle
into
bswap
shll
dec
pop
xchg
stos
push
xor
xchg
fimull
int3
sbb
or
daa
sub
adc
mov
push
xchg
clc
movsb
ret
jmp
mov
push
and
push
int
out
cmp
dec
mov
ss
cltd
and
add
stos
seto
xor
mov
push
dec
push
call
adc
and
daa
sahf
jmp
xorl
pop
imul
pop
outsb
pop
or
and
mov
xor
mov
lods
mov
jae
cmc
adc
fstp
and
int3
enter
mov
xor
aad
mov
sahf
push
push
sahf
adc
add
dec
outsl
sbb
lret
imul
stos
mov
and
test
push
andb
pop
nop
jl
aas
or
jbe
mov
inc
push
mov
in
test
xchg
push
sti
inc
sub
add
ret
sub
adc
push
cltd
je
xlat
dec
mov
cmc
mov
or
add
cmc
in
jne
jl
cmc
imul
shl
push
pop
jo
pop
cmp
or
cli
xchg
and
sbb
or
or
insb
mov
repnz
into
jmp
mov
fsub
fdivs
sub
pop
dec
and
dec
mov
mov
addl
dec
dec
jae
or
cmp
sti
pop
imul
mov
jns
push
fs
sub
testb
cmc
aam
inc
xor
push
lcall
xchg
push
fs
std
adc
testl
popf
sub
dec
insb
cmp
movl
fcomip
fwait
ret
insb
repnz
sub
xchg
dec
mov
mov
xor
scas
cmp
out
mov
mov
jmp
mov
subb
cmp
push
fdivrs
pop
add
mov
pushf
das
mov
jae
out
bound
movsl
sbb
movsb
test
dec
addr16
dec
adc
inc
inc
std
xchg
out
xor
scas
rcl
mov
in
sti
dec
adc
jns
movsb
shll
lods
imul
je
or
or
sbb
adc
sbb
jecxz
jne
ds
sub
dec
dec
push
popf
adc
jns
scas
mov
aad
insb
jb
xchg
stos
jp
cld
fadds
mov
adc
adc
pop
sbb
cwtl
jmp
mov
stos
sti
ret
jge
data16
sub
inc
cmp
rcrl
insb
inc
xchg
cmp
add
mov
addr16
imul
or
adc
rcll
jl
dec
int
int3
mov
push
cld
lds
inc
fwait
in
pop
adc
test
fldl
lret
cmpsl
fdivrs
jo
mov
inc
outsb
outsl
and
imulb
lds
push
mov
sbb
or
lret
fdivp
and
movsb
hlt
into
mov
mov
sub
adc
add
xor
xor
int
dec
movsl
call
xchg
mov
imul
aas
sub
into
jo
imul
mov
js
xchg
out
rcll
into
rorb
ret
gs
jb
jo
cmp
mov
stc
clc
mov
mov
push
pop
rol
xor
dec
push
callw
out
icebp
stos
sbb
lcall
call
cmpl
xor
fimull
ds
ss
ss
inc
nop
add
je
or
cmp
mov
mov
xor
push
dec
test
fisubs
es
push
frstor
movsl
push
lcall
inc
flds
add
aas
mov
sub
jmp
mov
lods
fidivs
jne
jbe
mov
xchg
hlt
outsb
xor
lods
xchg
icebp
mov
cltd
cwtl
pop
cmpsl
push
and
and
repz
int3
and
cmp
or
jecxz
sbb
loope
rcrb
add
sbb
scas
ret
inc
roll
jmp
jbe
std
js
pop
xor
and
das
add
jg
adc
sar
jp
dec
and
dec
jmp
lea
add
and
fstps
stos
sbb
lea
imul
jbe
out
imul
mov
fldl
mov
clc
xor
push
cmc
shlb
pop
leave
mov
sti
pop
inc
jmp
sub
inc
adc
mov
xlat
cltd
sbb
stos
xchg
jae
fnstenv
pop
sahf
ret
adc
jne
jb
fnstenv
jae
insb
xchg
cmp
xchg
popa
push
fadds
call
xchg
fsub
adc
in
cmp
fistpl
enter
jb
pop
adc
dec
jae
imul
push
pop
mov
cmpsl
imul
scas
adc
rep
addr16
leave
push
xor
pop
add
fs
loopne
or
mov
mov
inc
outsb
mov
sbb
in
mov
sarb
and
and
push
mov
shll
add
push
jae
push
cmp
inc
mov
sti
and
lahf
ja
pop
cltd
xlat
cwtl
pushf
mov
daa
das
dec
mov
cmp
out
jl
jecxz
sub
loop
xor
fs
outsl
iret
adc
shlb
xlat
jo
cmp
and
std
outsl
daa
dec
sbb
mov
sbb
aad
sub
shll
dec
mov
jp
inc
cmp
arpl
inc
mov
dec
aas
clc
adcb
nop
dec
dec
xchg
pop
cmpsb
mov
dec
and
inc
loopne
add
fs
push
cmpsb
sub
xchg
mov
mov
leave
das
pop
test
xchg
pusha
push
mov
jbe
xchg
jae
mov
mov
gs
inc
push
mov
out
pushf
movsb
push
imul
xor
lret
sahf
xchg
cmpsl
adc
cmp
adc
xlat
ja
and
out
ja
incb
int3
scas
nop
adc
cmpsl
lret
sarb
icebp
sbb
shl
or
mov
ret
ljmp
cmc
shll
cmp
dec
lods
int3
push
movsb
sahf
cmovp
mull
lock
mov
scas
xchg
jo
andl
lods
push
sbb
jno
or
xor
scas
loopne
imul
gs
popa
fidivrl
or
mov
sti
sbb
inc
pop
dec
nop
std
xor
lea
or
push
shrd
push
cmp
lods
loop
out
sub
mov
jl
xor
jo
in
and
adc
test
sbb
sbb
in
fs
sahf
fmull
movsl
daa
cs
pop
int3
and
je
sbb
call
inc
loope
dec
adc
out
mov
sbb
xchg
inc
or
pop
xor
or
leave
int3
repz
repnz
xor
mov
sub
aad
stos
and
jb
and
cltd
push
and
popf
cmp
repnz
xchg
push
rcrb
pop
popf
adc
inc
cwtl
test
add
inc
inc
inc
sahf
out
lret
push
add
jle
rol
push
cmpsb
add
dec
insb
push
repz
inc
mov
lds
out
sub
pusha
mov
jae
adc
and
push
jl
xchg
cltd
ret
lods
xchg
insb
stos
push
cmp
popf
xchg
xchg
xor
sbb
dec
xor
insl
pop
dec
push
and
inc
imul
push
add
xlat
gs
pop
sub
cli
sbb
ror
pop
jb
jmp
clc
shll
popf
insb
sbb
sub
pop
pusha
dec
aaa
mov
ja
adc
xor
ficoml
popa
pop
mov
repnz
xchg
push
jo
push
imul
inc
iret
push
fisttps
pusha
add
sub
scas
push
mov
adc
cli
stos
fs
outsl
data16
push
enter
out
je
mov
mov
sbb
int3
test
rcr
sarl
dec
sub
and
ljmp
icebp
pop
popf
cmp
mov
sbb
jg
add
add
es
aas
jl
dec
adc
cmpsl
clc
xchg
sub
ljmp
mov
repnz
cltd
fcoml
pop
stos
cli
push
inc
cmp
push
adc
idivl
xor
xor
sub
xchg
dec
jmp
push
movsb
inc
or
subl
sahf
adc
daa
rcrb
data16
adc
loopne
xor
and
add
jge
shlb
sbb
jecxz
lcall
inc
mov
or
leave
pushf
dec
sbb
decl
sub
sahf
inc
les
mov
cmpb
cs
daa
lcall
cmc
pop
adc
iret
jo
repnz
or
nop
int
in
mov
int3
out
int3
mov
xchg
cmp
shl
std
inc
into
and
sbb
jmp
outsb
push
sub
adc
sbb
jg
push
or
xchg
pop
jmp
sbb
push
sub
addr16
into
scas
negb
aas
fnstcw
or
lds
dec
jbe
cli
cmp
jle
in
unpcklps
xchg
cmp
cmp
sub
xor
lods
push
lret
movsb
fbld
pop
mov
pushf
mul
popf
inc
rcrb
cmp
shlb
add
mov
gs
adc
imul
mov
outsb
pop
adc
inc
mov
mov
sbb
jmp
cmp
fndisi(8087
add
add
popf
or
dec
icebp
outsb
iret
ret
jmp
leave
mov
movsl
aad
bound
adc
imull
pop
inc
or
pop
repnz
adc
scas
stc
shl
ror
mov
imul
in
sbb
adc
out
popa
push
cmp
xchg
cmp
outsb
sub
dec
push
xchg
bnd
xor
daa
and
clc
jns
pop
icebp
dec
ss
dec
out
mov
aad
adc
ret
jne
movsl
sbb
sbb
out
cmc
xchg
pop
adc
mov
adc
and
mov
les
popa
sub
nop
outsb
dec
pop
fcomp
lock
sub
xchg
pop
jb
push
dec
or
into
insl
adc
jge
out
fdivrs
mov
cmp
outsb
movsl
test
fwait
jbe
lahf
xlat
fisubrl
or
cmp
pop
insl
sbb
cmp
loope
jo
cmp
or
adc
loop
cmp
mov
xchg
mov
bound
ret
xchg
cli
fists
or
pop
hlt
pop
jge
les
add
clc
imul
inc
cwtl
push
ja
fbstp
clc
insb
mov
and
and
inc
ds
jb
push
rorb
std
or
and
cmp
push
insb
dec
les
sarb
bound
fdiv
sub
sti
cmpsl
xor
fs
lods
mov
addb
fs
xlat
xor
jbe
rorb
mov
or
jno
adc
push
push
cld
lcall
jl
dec
cltd
rorb
dec
push
cmpb
push
pop
out
pop
jl
addr16
addr16
call
mov
sub
xchg
hlt
mov
lds
negl
and
mov
flds
push
mov
cwtl
cmp
add
fdivl
iret
mov
mov
push
push
in
fwait
push
imul
fsubl
sub
sbb
xchg
jmp
xchg
sbb
push
add
dec
andb
lret
enter
dec
ret
in
add
dec
jp
icebp
xchg
fsts
pop
aas
arpl
stos
scas
sbb
add
push
arpl
mov
aaa
cmp
loope
into
push
out
int
addl
or
dec
int3
test
loope
lods
stc
lods
nop
mov
and
outsl
xchg
cs
bound
out
and
outsl
xchg
mov
ljmp
shlb
cmp
int3
int
sbb
jns
mov
cwtl
mov
push
push
cwtl
cs
add
test
cmp
out
scas
sub
mov
sub
xlat
out
push
jl
xchg
ret
jp
push
lret
sbb
xchg
std
adc
jb
js
ljmp
dec
cmp
cld
test
or
ss
inc
mov
jnp
es
sbb
xchg
ja
divl
cmp
sub
aad
dec
scas
jb
lcall
stos
cmp
dec
imul
mov
loop
pop
sub
sbb
xchg
xor
and
lret
inc
cmc
sub
and
push
loopne
in
lods
inc
sbb
clc
jmp
lcall
add
icebp
mov
dec
xchg
ret
or
jne
push
sub
mov
les
ljmp
out
popf
jp
shlb
xor
cmp
in
cmp
sub
sbb
scas
mov
dec
or
jg
push
mov
jecxz
cmp
repnz
dec
int3
jmp
movsb
xor
bound
fmuls
sub
and
xor
and
rcrb
lods
ja
bound
js
mov
sarl
shlb
addr16
mov
xlat
lahf
pop
and
xchg
mov
movups
fsubrl
mov
xchg
inc
sbb
fnstcw
inc
push
sbb
mov
cmc
inc
insl
mov
cmpb
mov
test
hlt
and
int3
mov
inc
rcrb
inc
dec
cmp
test
cli
out
scas
push
add
pop
inc
icebp
bound
add
mov
lods
add
bnd
inc
jnp
sahf
fistl
imul
pop
lahf
mov
lret
jge
mov
ret
jbe
adcb
lret
iret
nop
or
aam
rcl
mov
in
dec
or
sbbl
push
sbb
pop
call
xchg
scas
or
test
decl
and
in
adc
mov
outsl
add
mov
hlt
inc
xor
lods
out
inc
cmp
pop
xor
fwait
jb
decb
mov
int3
mov
repnz
and
aas
lds
add
sub
or
and
int3
dec
xlat
mov
xor
and
ror
data16
xor
mov
push
fsubrs
ret
dec
cmp
bnd
push
push
add
mov
jo
pop
gs
test
insb
or
fstpt
xchg
test
cmp
iret
daa
icebp
jmp
cmpl
or
dec
sub
xchg
hlt
ds
into
ds
mov
std
adc
insb
into
dec
jo
xor
icebp
out
xchg
add
scas
dec
clc
sub
mov
not
call
fwait
push
sub
imul
out
mov
aam
outsb
cltd
fwait
inc
dec
add
jmp
insb
in
scas
stc
sbb
pop
add
loopne
xor
jmp
sub
jge
scas
sbb
or
in
jmp
in
pop
xor
xchg
scas
xor
shrb
jnp
adc
lahf
ror
pushf
xchg
dec
push
mov
and
jp
sub
pop
inc
inc
sub
sub
jns
fmuls
aaa
sub
mov
mov
outsb
in
les
adc
addr16
cmc
or
fdivrs
lods
pop
lcall
cmp
mov
lret
mov
into
repnz
dec
jmp
xchg
xor
pop
cld
inc
push
adcb
dec
outsb
mov
mov
and
inc
pop
clc
lea
movsb
loop
xor
in
adc
icebp
enter
pop
inc
dec
icebp
out
mov
mov
lock
sub
adc
daa
das
push
sbb
sbb
roll
mov
pop
xchg
dec
sub
mov
imul
pop
sbb
cmp
pop
hlt
outsb
enter
pop
imul
add
andl
xorb
add
addr16
test
sub
and
in
and
and
add
push
stos
and
outsl
rcr
xor
xchg
js
shl
and
xor
into
in
cmp
cmpb
lret
cmpsl
or
loopne
adc
mov
pop
push
dec
sbb
sub
sbb
mov
iret
push
xchg
add
lock
mov
or
fadds
rcrb
cmp
jge
mov
fdivs
dec
or
adc
inc
mov
iret
outsl
mov
shlb
mov
jmp
pop
push
in
out
pop
daa
negb
add
push
cmp
ret
jno
cmp
fcomps
xlat
mov
lret
add
adc
stos
insl
subl
push
add
out
cmp
jb
std
mov
jno
iret
pop
jmp
xor
sbb
repz
dec
lock
out
in
sub
pop
adc
loopne
mov
sub
cmp
inc
adc
ljmp
jns
xor
and
aam
mov
cmp
pop
aas
or
out
popa
insb
sbbb
scas
push
dec
hlt
cwtl
sbb
pushf
mov
jmp
sub
decb
pop
incl
sub
and
outsl
mov
ljmp
jb
loope
mov
dec
fwait
orb
pop
icebp
mul
mov
mov
pop
dec
fdivp
test
adc
loope
imulb
imul
test
shll
mov
and
les
orb
mov
mov
adc
ret
loope
nop
incl
and
sarl
add
mov
outsl
mov
mov
mov
inc
and
in
in
lcall
or
pop
pop
fcompl
in
push
cli
inc
lds
adc
test
mov
mov
add
xor
add
icebp
hlt
sti
mov
arpl
cmp
pop
sub
xor
jb
sub
cltd
adc
lcall
adc
pop
ljmp
mov
mov
adc
iret
xchg
jg
pop
ret
pushf
gs
lcall
sbb
je,pn
clc
fstpt
loope
jbe
cmpsl
cmp
mov
test
cltd
xor
inc
sahf
dec
sub
insb
lahf
repnz
movsl
xor
and
or
filds
mov
push
and
cmp
cwtl
and
mov
scas
in
lahf
into
cmp
ret
aad
pop
mov
mov
cmpsb
jb
xchg
xor
cmpsl
xchg
aaa
or
loop
scas
sub
jmp
jle
and
mov
cmp
pushw
xchg
dec
mov
pop
pop
loope
sub
add
repnz
push
xchg
imulb
aas
dec
push
inc
popf
jb
mov
pop
or
cltd
xchg
xlat
cltd
jnp
sbb
jns
rol
or
mov
or
popa
pop
aas
testb
or
pop
stc
push
inc
pop
push
js
mov
in
xlat
adc
in
call
adc
enter
in
sbb
sub
xchg
mov
bound
and
dec
or
push
out
into
jns
dec
pop
outsb
lods
lret
cmpsl
xchg
out
test
xchg
lret
fstp
hlt
add
push
cld
and
mov
jno
jle
fmuls
lret
push
mov
stos
ja
jecxz
push
dec
stc
std
stc
lods
mov
popa
nop
sub
mov
mov
xor
mov
aad
push
shrl
mov
imul
cwtl
or
sub
loopne
ss
out
jmp
xlat
inc
sbb
jmp
mov
xor
ds
inc
push
adc
test
hlt
xlat
test
jg
inc
jecxz,pn
sub
lods
pop
dec
pop
std
jnp
inc
shrb
mov
orb
xor
mov
push
icebp
ds
xor
ret
xor
sbb
add
mov
repnz
cld
add
jne
and
xor
sahf
daa
cs
jnp
imul
fs
add
adc
sbb
sets
dec
push
cmc
dec
mov
inc
addl
sahf
cli
es
mov
ss
testb
cwtl
fdivl
and
or
lods
mov
pop
xchg
add
push
inc
add
pusha
in
fistl
pop
inc
jmp
push
jne
adc
pop
pop
lret
push
cmp
lahf
or
sbb
xchg
and
pop
sub
inc
fimuls
repz
xor
jg
fbld
dec
js
mov
lret
sahf
das
std
in
clc
mov
call
repz
mov
jg
mov
xchg
je
fisttpll
ficoms
mov
stc
jecxz
int
add
xchg
int3
lcall
insb
and
jne
sti
das
add
test
stos
pop
mov
cmpsb
nop
outsl
cwtl
xchg
out
ret
xchg
sbb
push
adc
xor
dec
fisubs
scas
mov
mov
dec
movsb
xrelease
mov
sbb
mov
mov
add
inc
or
movsb
pop
popa
mov
mov
xchg
inc
aas
imull
pop
and
mov
movsl
add
push
or
and
xor
les
jns
adc
out
adc
mov
adc
inc
cmpsl
add
inc
outsl
lods
pushl
lcall
adc
je
jl
push
mov
scas
sbb
xchg
push
gs
les
mov
inc
aad
pop
xor
scas
pop
xchg
call
stos
inc
mov
xor
rcl
int
lods
sbb
add
adc
mov
jo
cltd
inc
fstl
cmpsb
loope
aaa
mov
es
mov
mov
test
mov
leave
and
notl
sbb
fistl
xchg
push
in
sti
imul
xchg
fdivl
or
int
jecxz
mov
xor
xchg
mov
jecxz
cmp
movsl
mov
xchg
cmpsl
mov
sub
scas
outsl
outsl
fwait
maskmovq
idivl
mov
sbb
loop
testl
pop
pop
and
sbb
sbb
cs
scas
sbb
scas
push
std
sub
in
add
scas
aas
lret
sbb
and
mov
fisubl
call
into
int
test
push
mov
jnp,pt
mov
cmp
cmp
scas
push
lahf
out
xor
sub
xlat
mov
lret
xlat
iret
aaa
jb
loop
int3
jae
rclb
nop
sub
pop
fs
cltd
lret
ljmp
jno
lea
xchg
xchg
popa
jecxz
jle
sub
lcall
sbb
mov
and
pusha
in
mov
repz
push
into
jnp
cmp
sub
cmp
xor
jo
and
or
cmp
jns
xlat
nop
dec
out
push
inc
loopne
xor
mov
rorl
ds
cmpsl
xchg
out
mov
mov
lds
jmp
push
xchg
insl
in
imul
ret
mov
lods
inc
mov
jae
adc
stc
push
outsl
adc
sbb
cli
das
add
mov
cmpsb
add
aas
lods
mov
call
and
mov
jmp
pop
push
ficomps
add
xor
pop
or
jge
sub
fisubrl
mov
cmp
mov
aad
sub
mov
in
xchg
cli
movsl
mov
dec
and
insb
addl
hlt
jo
std
in
push
mov
aam
xlat
cmpsl
pop
cwtl
add
pusha
sti
push
xchg
jle
imul
xchg
loop
fstps
ret
stc
pop
es
in
out
mov
popf
loope
sti
and
stos
fucom
ss
xchg
shlb
sub
daa
cmc
mov
adc
xor
mov
mov
cmp
mov
movl
add
fpatan
fsubrs
icebp
adc
mov
mov
rcll
dec
test
insl
push
pop
dec
sbb
test
mov
lds
and
adc
ret
mov
dec
mov
mov
sbb
add
xor
dec
mov
aaa
test
dec
dec
loopne
sti
dec
leave
sub
add
rclb
outsl
lods
jl
aad
lret
ret
push
mov
insb
sub
push
push
gs
mov
sarb
inc
pop
je
loop
pop
inc
fidivrs
stos
hlt
repnz
ret
mov
movsb
add
hlt
add
inc
iret
mov
stos
cltd
xor
add
pop
bound
sbb
push
in
jnp
mov
fcomps
cltd
inc
dec
mov
scas
xchg
outsb
loopne
cmc
pop
sti
pop
dec
xchg
test
inc
jle
mov
int3
fwait
inc
in
push
xchg
add
inc
fwait
in
cmpsl
mov
imul
xchg
repz
pop
lret
mov
xchg
data16
jne
ficoml
fcoms
icebp
in
add
sti
jl
es
jl
jae
jp
fisubl
icebp
in
and
ret
aad
xchg
out
or
xchg
fidivs
mov
cs
rcr
sbb
push
dec
xchg
inc
mov
sbb
lods
jp
insb
lret
call
iret
xchg
mov
or
loop
add
fldl
in
pop
push
cmc
daa
inc
mov
scas
cld
in
push
cmpsb
sbb
lods
imul
pop
mov
fmull
add
repz
mov
jb
test
repnz
cmc
adc
jne
pop
sbb
fdivr
int
and
jns
aad
shlb
pop
inc
push
test
push
xchg
pop
cmp
das
lcall
popl
push
xor
cmpsb
and
pop
mov
mov
lods
add
cltd
mov
dec
imull
iret
cmc
imul
cmc
inc
cltd
imull
inc
je
jb
inc
pop
mov
stos
mov
inc
pop
movsl
stos
jl
push
add
add
outsb
pop
test
inc
mov
out
and
std
mov
xor
out
pop
mov
xor
jmp
aam
shl
aam
cwtl
sti
jge
es
sbb
aam
mov
push
adc
add
mov
out
sar
cmp
adc
pusha
shl
pop
test
bound
push
mov
inc
addb
pop
fmull
adc
loope
xlat
in
or
mov
lods
test
ja
xor
scas
add
pusha
jbe
mov
aas
cmp
dec
int3
fldl
psubq
push
or
test
sbb
pop
pop
cmpsb
negb
jns
push
jno
push
mov
jae
cwtl
cmp
xlat
das
fimuls
xor
popf
pop
loop
and
push
pop
fiadds
loope
pop
sahf
cltd
or
fiadds
test
pop
mov
and
out
in
inc
sbb
jg
pushf
in
cmpsl
dec
in
push
xor
mov
inc
mov
xor
xor
or
pop
shll
xor
jge
sub
pusha
jae
jmp
cmp
lea
jo
popf
imul
push
subl
out
cmpsl
lock
rcrb
pop
add
shrl
rcl
cwtl
loop
inc
adc
sub
nop
xchg
sbb
lret
jo
es
jecxz
or
add
aaa
adc
and
mov
inc
imul
sbb
adcb
imull
loop
and
enter
sbb
lods
insb
and
lea
adc
cmpsl
in
dec
cmp
push
mov
lahf
lcall
inc
cmp
lret
fcomps
cld
insl
add
roll
pushf
faddl
imul
pop
iret
sbb
outsb
gs
cli
dec
rol
adc
pinsrw
cmp
loope
jns
dec
jmp
xchg
icebp
hlt
les
subl
dec
jle
inc
push
jmp
lret
insb
ljmp
dec
cmpsl
sbb
or
mov
scas
xchg
es
cld
test
icebp
arpl
or
push
add
orb
leave
cmp
xor
loope,pt
test
cmp
fistpll
xor
dec
ja
leave
je
inc
push
out
scas
and
xchg
cmpsb
mov
call
scas
cwtl
xor
sub
adc
jns
sbb
fwait
sub
lret
pop
jg
jp
add
in
outsb
xchg
mov
stc
push
sub
mov
rcll
ret
repz
clc
inc
bound
mov
into
pop
xor
jecxz
xor
jecxz
jns
loop
cwtl
lcall
jbe
push
adc
pop
and
lret
imul
cmp
in
clc
rolb
jno
push
xor
imul
loopne
pushf
cmp
outsl
cmp
nop
xor
dec
mov
mov
lret
jne
add
lret
sti
or
mov
jns
add
std
ja
ret
test
or
je
mov
inc
ljmp
inc
jmp
xchg
xor
notb
dec
push
orb
adc
cld
jl
or
xor
jg
or
add
xor
movsl
ss
push
hlt
mov
call
out
iret
xchg
lret
data16
jnp
mov
pop
dec
inc
adcb
xor
mov
mov
jno
mov
push
shrl
hlt
es
mov
push
pop
jb
push
test
cltd
imul
repz
dec
jmp
adc
xchg
subb
shl
orb
ret
lret
loop
push
xchg
add
inc
in
sbb
fisttpll
jmp
and
enter
in
mov
mov
nop
flds
lret
fidivrl
pop
repz
adc
mov
in
dec
flds
fs
add
outsb
sti
inc
test
pop
adc
cli
cmp
fisubl
mov
adc
in
and
or
mov
inc
daa
push
pop
push
shrl
ds
jmp
fcom
push
enter
lcall
mov
ja
mov
push
mov
lret
cmp
test
mov
jp
mov
add
aas
adc
imul
mov
test
int3
inc
gs
add
je
fmuls
sub
dec
fstp
fdivp
lret
int
popf
pop
sbb
lcall
cmc
cs
xchg
cli
testl
fidivrl
das
sbb
pop
mov
fisttpl
xchg
lcall
mov
dec
movsb
adc
add
arpl
lret
rclb
arpl
insl
dec
movsb
xchg
add
push
test
insb
pop
imul
pushl
jp
mov
nop
imul
cs
gs
mov
push
ds
jo
xchg
push
push
movsl
lods
pop
insb
rol
shrb
lods
jmp
mov
mov
bound
mov
pop
shr
add
popa
cmpsb
jecxz
enter
jecxz
psllq
jl
add
dec
mov
movups
movsl
repnz
inc
and
movsb
adc
daa
xor
adc
fcoml
sub
scas
cli
pop
inc
inc
dec
rol
cmp
xchg
inc
inc
push
dec
push
inc
sbb
filds
add
push
xor
push
iret
push
stc
dec
fsubl
cmp
sub
inc
leave
jge
scas
adc
and
push
repz
mov
icebp
movsl
pushf
adc
aam
stos
mov
mov
cld
jecxz
sub
inc
xorb
pusha
mov
adc
roll
cmp
leave
scas
imul
add
mov
xlat
sbb
cmc
add
ds
push
scas
cmp
movups
adc
repnz
mov
stos
arpl
bound
jmp
xchg
insl
sbb
stos
fisttpl
xchg
insb
ret
xor
or
pop
ficoms
mov
dec
cli
stos
sbb
jle
fldenv
adc
ljmp
in
insl
add
shrw
outsl
cmp
mov
dec
mov
leave
push
mov
cmp
daa
aas
xchg
add
pusha
addl
data16
pop
call
or
xor
mov
sbb
sub
inc
aaa
flds
and
out
imul
jl
jo
subb
jl
jns
push
mov
and
mov
sub
jo
mov
xchg
xor
adc
mov
test
outsl
in
add
sub
mov
push
jo
sbb
icebp
clc
cmp
lds
cmpsl
sub
xor
mov
inc
push
pop
jl
lret
inc
cmovs
ficompl
xchg
int3
sbb
and
pushf
cwtl
cmpsb
call
cmpsb
adc
adc
addr16
fstpt
mov
mov
or
push
bound
pop
inc
push
add
push
xor
jae
shll
adcb
sub
imul
addr16
or
sub
stos
cmp
mov
sbb
mov
xlat
xor
xor
jmp
inc
lods
mov
cmc
dec
outsb
sbb
loop
inc
push
and
adc
mov
insl
movsl
jp
repz
cmpsl
sub
jg
xor
push
adc
or
mov
dec
mov
mov
test
ljmp
jge
sbb
mov
lods
push
fstpl
pop
inc
inc
add
and
sbb
addr16
xchg
ljmp
out
jecxz
shlb
jne
jnp
cmc
repz
jo
gs
jo
inc
jns
cmpl
aad
dec
cmpsl
loop
adc
pusha
jmp
inc
cmp
dec
andb
movsb
in
test
fistpll
cmp
jmp
pop
jmp
or
enter
ds
ficompl
imul
push
fcmovb
add
push
xor
cmp
inc
jno
ret
pop
nop
pop
cli
lret
out
push
ljmp
sub
popa
add
shl
dec
cmc
push
xchg
and
ret
sbb
mov
in
sbb
popf
xchg
cmp
xor
rclb
mov
cwtl
pop
pop
or
xchg
or
data16
iret
adc
loope
inc
call
ja
shll
push
mov
mov
add
sub
jns
repnz
mov
add
push
inc
xchg
notb
adc
jnp
sahf
mov
aas
cmp
mov
push
fmull
in
dec
mov
cld
cli
repz
adcl
out
xlat
dec
xor
loopne
pop
fisttpll
pop
dec
std
cmc
mov
into
bound
xor
and
popf
lcall
sbb
adc
cmpsl
inc
adc
dec
rcl
scas
adc
mov
movsb
sub
lock
out
cs
xor
pop
adc
movsb
in
mov
gs
imul
out
rclb
andl
pop
lods
test
stos
pop
adc
fisubs
shrl
pop
das
pusha
push
cmp
and
jle
mov
leave
movsl
and
scas
pop
call
mov
dec
sahf
ud2
in
xlat
mov
lahf
sbb
sahf
jb
mov
sbb
mov
push
add
pop
roll
cli
cmp
push
mov
inc
jbe
mov
or
inc
ljmp
les
shrb
add
adc
mov
cmp
fdivs
sub
test
ja
xchg
push
ja
push
adc
jbe
popf
dec
dec
push
dec
ljmp
cmp
mov
dec
jae
cltd
fiaddl
adc
out
inc
or
sbb
sahf
pop
aam
jle
mov
jae
jbe
inc
mov
aam
stc
xchg
test
out
jge
jb
mov
ljmp
adc
ja
pop
ficompl
andl
cmp
jb
jecxz
cmc
jb
popl
lods
xchg
push
adc
rol
mov
out
jns
std
fistps
aam
jl
out
pusha
mov
lock
lret
stc
inc
aad
mov
lea
push
xacquire
fwait
js
sbb
loopne
repnz
addb
inc
cmp
les
cmp
dec
lds
fwait
pop
pop
push
negb
in
add
jl
pop
enter
inc
push
mov
into
pusha
jbe
xlat
sbb
push
inc
pop
xchg
rcl
xor
mov
push
addr16
repnz
fistps
pop
repz
fwait
sub
lock
adc
divl
adc
xor
pop
lods
lods
push
mov
int
inc
rcll
add
sub
les
sub
lcall
push
pop
in
cmp
loope
xor
mov
mov
and
in
mov
adcl
jbe
push
imull
sbb
pusha
fidivl
inc
sbb
fcomps
push
test
jnp
sti
fldcw
sbbl
cmpsb
sbb
push
jnp
adc
push
sbb
add
lock
fldenv
cli
inc
das
sarb
dec
mov
and
rcll
lret
jmp
lods
mov
mov
call
rcll
cmp
call
add
gs
das
filds
insb
in
lock
inc
les
push
test
cmp
sub
inc
test
adc
add
push
sub
insb
mov
pushf
sbb
dec
and
cmp
mov
loop
cwtl
in
fiadds
fsubl
add
inc
pop
dec
push
mov
inc
jge
hlt
pop
loopne
cmp
inc
push
cmp
mov
cmp
push
xchg
cmp
insl
es
xor
ja
out
es
mov
adc
std
aad
shr
jns
js
inc
mov
cld
mov
add
out
sbb
adc
inc
ret
pop
dec
inc
xchg
sub
cmp
fs
mov
pushl
dec
adc
mov
cmp
add
dec
lret
sbb
jns
fldl
dec
xorl
xchg
ja
xor
push
lcall
loope
stos
inc
jns
outsb
pop
movsb
mov
jnp
movl
scas
or
pop
mov
mov
mov
loop
shll
rcrb
jle
ret
int
inc
js
cmc
clc
loopne
xchg
into
push
fbstp
out
adc
sbb
inc
pop
mov
es
push
push
aad
mov
and
push
lods
inc
cli
mov
test
adc
gs
pop
test
std
xlat
adc
test
push
inc
dec
jge
mov
and
jecxz
add
cld
xchg
xor
mov
sub
xor
loopne
out
aam
call
pusha
repnz
xchg
mov
ficompl
lods
or
xchg
shrb
mov
xchg
push
jg
rcr
sahf
inc
xchg
in
int
fmul
lods
ds
xor
pop
xor
mov
cmp
out
inc
pop
push
mov
daa
and
fnstcw
pop
arpl
jnp
cwtl
push
roll
or
add
sub
and
sbbl
sbb
data16
xorl
mov
aam
mov
xor
int
xchg
cs
push
inc
fadds
icebp
cltd
je
dec
jns
inc
xor
adc
lods
out
xchg
jp
inc
outsl
push
dec
in
jns
lahf
fdivs
jnp
push
cld
push
mov
lcall
inc
cmovb
mov
cmpsl
out
shll
out
jmp
stos
dec
jp
out
jbe
lcall
loopne
and
add
in
jecxz
mov
ljmp
leave
adc
and
lock
add
out
inc
out
stc
lea
fstpl
add
cwtl
arpl
jp
xchg
pop
pop
lds
cmp
push
ljmp
movsl
les
ret
mov
faddp
cmp
adc
in
fldenv
xor
stos
mov
aas
pop
pop
push
jb
das
push
js
push
xor
cmp
ret
int
add
xlat
int
jp
subb
add
dec
inc
push
xchg
scas
cld
pop
xor
loop
jno
add
pop
das
shll
hlt
cld
outsl
gs
add
cmp
sbb
out
pop
adc
jbe
scas
jge
xor
or
sti
cwtl
das
inc
push
xchg
fdivrl
dec
add
mov
in
pop
xor
push
add
iret
int
xchg
mov
aas
pop
or
popa
std
inc
push
int
jnp
mov
xchg
lock
arpl
jmp
cli
clc
ljmp
xor
into
or
xchg
sti
jae
lret
fadds
test
sub
dec
jns
mov
leave
sbb
inc
push
cmp
jmp
add
fs
stc
mov
sub
and
fs
pop
add
js
push
fabs
or
xchg
std
ret
jl
ss
aam
lds
out
lock
fidivrl
enter
and
repz
iret
cmp
lahf
stc
dec
push
inc
mov
adc
std
sbb
or
in
les
hlt
mov
sbb
and
cmp
lahf
xchg
xchg
push
cmp
mov
push
arpl
stc
es
fstpt
lea
cmpsl
test
stc
fs
out
inc
xor
test
jl
fldl
stos
in
dec
dec
xchg
fs
lret
cmp
xchg
cmp
xor
cmp
nop
imulb
jb
shll
pop
aaa
inc
dec
jb
into
lods
pusha
pop
and
sahf
cmpsl
fiaddl
dec
into
faddp
jmp
cltd
pop
adc
push
clc
or
sbb
test
rcrb
mov
je
and
movsl
fsubs
enter
fs
out
in
outsb
xchg
mov
mov
mov
in
pop
inc
ljmp
pop
pop
mov
subb
outsb
icebp
ficomps
jg
push
aaa
lods
addr16
jg
es
test
shl
cmp
sti
jb
lret
sti
cmp
adc
jecxz
and
and
mov
ret
or
insb
or
xchg
add
cmpsl
ja
mov
push
mov
add
lcall
mov
lret
lret
and
jp
icebp
sbb
sti
out
rclb
xor
iret
jp
test
fmul
push
pop
push
or
icebp
fidivl
in
mov
aas
mov
outsl
ret
cmp
dec
sbb
test
mov
cmc
shr
adc
ror
or
mov
push
leave
cmp
fcmovnu
fdivrl
pop
sbb
sbb
xchg
orl
sbb
and
xchg
xor
and
fwait
hlt
dec
lret
push
mov
push
or
jge
xor
sarb
les
mov
xor
mov
pop
negl
inc
add
shl
xor
mov
jnp
mov
bound
rcl
repnz
add
mov
shll
test
mov
shlb
push
in
fcoms
add
adc
pop
inc
addl
ffreep
or
mov
cmp
fdivl
pushf
adc
mov
mov
je
mov
fcomp
test
addr16
inc
dec
push
out
frstor
ret
addb
int
add
stos
aaa
push
or
out
gs
mov
push
xchg
xchg
xlat
vmread
loopne
les
xchg
or
cld
into
clc
xchg
push
jmp
sub
xchg
lret
push
mov
push
fldl2e
inc
dec
pusha
inc
aas
pusha
out
xor
jmp
mov
push
jae
inc
jbe
add
xchg
pop
adc
push
mov
jg
nop
cltd
push
adc
sti
ret
jb
das
enter
jne
fisttps
or
xor
ret
repnz
jge
sahf
ret
js
dec
dec
sub
dec
jp
ret
loope
mov
sahf
xlat
xor
mov
dec
push
ret
mov
pushf
add
add
test
jle
xchg
xor
fildl
jo
loop
in
push
push
sbb
sub
mov
lock
pushf
ja
push
les
jg
add
xchg
mov
enter
sub
stc
nop
dec
xor
das
pop
mov
mov
mov
dec
fs
stos
mov
movsl
test
sbb
enter
repnz
imul
ss
ds
xchg
push
insb
push
mov
pop
call
stos
dec
int
push
movsl
adc
loope,pn
pop
loope
in
out
pop
cmpsb
ret
or
mov
loope
mov
loopne
and
jo
into
loopne
sbb
mov
push
cmp
scas
pop
push
ja
into
ret
std
in
dec
fucomp
outsb
arpl
jecxz
jge
adc
push
mov
bound
gs
in
push
jge
lods
cli
aad
mov
sbb
daa
adc
mov
add
sub
sbb
je
sub
sbb
jl
dec
aad
insl
int
out
mov
add
scas
insb
lds
cld
and
cmc
xchg
push
imul
scas
andl
scas
push
and
enter
pusha
and
nop
popa
and
insb
test
out
fxam
popf
and
cmc
xchg
rclb
daa
mov
ret
mov
data16
std
cmp
repz
dec
pushl
mov
jge
aaa
mov
sub
pop
fmull
lea
sub
mov
sub
dec
mov
pusha
pop
rcrb
js
xchg
stos
nop
out
out
inc
add
andl
test
cwtl
mov
test
pop
dec
loope
in
jo
mov
lret
xor
lahf
xchg
xorl
or
aam
sub
stos
movsb
jae
cltd
js
rdmsr
dec
shr
cmp
or
xchg
out
das
movsb
out
add
mov
or
inc
das
inc
xor
dec
dec
and
out
push
adc
and
pusha
dec
push
and
cmp
inc
inc
in
in
rcrl
mov
push
repz
addr16
int3
adc
push
daa
enter
and
sbb
sub
push
js
popa
jmp
or
jns
dec
fs
pusha
jno
sub
sub
je
movsb
into
out
fidivs
sub
push
sub
mov
cmc
xlat
leave
sti
mov
lds
sbb
fistps
mov
stos
jecxz
mov
addl
insl
xor
pop
ds
sti
xchg
jl
int
lret
mov
gs
mov
mov
cld
push
inc
add
leave
jp
inc
stc
ja
loop
fcmovb
imul
cmp
xchg
xor
push
ffree
or
push
mov
nop
rcr
nop
pop
inc
mov
out
mov
mov
mov
sub
sahf
test
dec
fistl
jle
xchg
icebp
inc
es
fisttps
jne
mov
sahf
outsl
nop
pop
into
aas
insl
bound
pushf
cwtl
jnp
adc
sub
jecxz
jg
pop
mov
mov
push
sub
outsl
movsl
mov
div
lea
test
xchg
sbb
outsb
mov
insb
cmp
sub
adc
mov
aam
jg
stos
std
cmpsb
into
arpl
test
iret
sbb
fistpl
push
xlat
int
xchg
mov
xchg
fs
pop
and
xchg
loope
outsl
and
xchg
movd
xchg
fnstenv
iret
andl
dec
pop
ret
jo
or
xlat
push
adc
sbb
in
or
sbb
adcl
js
pop
lds
roll
in
jae
mov
daa
sbb
dec
je
jge
test
sub
testb
gs
pop
mov
lcall
cmp
int
mov
iret
lods
mov
xor
and
sbb
jg
pusha
sub
pop
flds
xor
roll
out
push
fistpl
pop
enter
mov
xchg
repz
jl
jb
xchg
lods
lcall
leave
std
mov
jb
ja
mov
rorl
adc
cmpsb
pmaxsw
shll
sbb
insl
aaa
jge
cmc
add
out
or
shrl
fwait
pop
imul
pop
inc
bound
sarl
bound
jae
subl
jae
xor
stos
sub
xor
mov
and
and
sar
jo
fdiv
adc
jne
adc
cli
andl
mov
push
jle
movl
ljmp
icebp
je
sub
imul
xor
stc
push
mov
lret
xor
arpl
iret
mov
movsb
or
jno
dec
mov
aad
icebp
ljmp
xor
xchg
cmp
push
ja
lds
jmp
into
sarb
jb
lock
or
sub
lock
cltd
xorb
and
addr16
nop
dec
jno
sub
lahf
mov
xor
jb
stos
ret
cs
leave
inc
je
fsubp
mov
sbb
mov
jg
add
push
pop
add
xor
repz
shrl
ret
out
or
outsl
in
gs
inc
lret
or
lahf
xchg
xchg
movsl
in
bound
cmp
pop
mov
fwait
sbb
stc
aam
and
push
stc
mov
repnz
flds
arpl
pop
jno
inc
mov
insb
sahf
xor
adc
mov
sbb
push
adc
pop
shlb
adc
mov
xlat
or
aas
pop
mov
fisubl
sub
xchg
mov
in
push
and
and
mov
xor
aaa
lret
decb
clc
pop
push
or
fwait
loope
mov
mov
addr16
mov
mov
repz
cld
jge
xor
rol
test
mov
jne
and
cld
test
inc
pop
inc
mov
in
jnp
mov
inc
rcll
sbb
daa
sarl
cmp
movsl
loop
xchg
outsl
scas
mov
mov
dec
inc
cmp
inc
adc
xchg
jns
loope
inc
lods
daa
cmp
push
mov
shr
das
xor
xlat
insl
mov
dec
mov
int
mov
sub
pop
insb
ret
shlb
jno
push
inc
sub
ja
int3
aas
push
lds
push
fstpl
scas
jns
cmp
xchg
test
nop
aam
jo
adc
fwait
imul
push
inc
into
cld
pop
setg
jmp
repnz
cld
dec
jo
mov
dec
xor
pop
lock
xor
inc
fwait
mov
add
sub
hlt
cltd
les
pushf
add
lret
scas
scas
cmp
testl
adc
scas
jp
mov
adc
mov
outsl
test
outsb
shrl
cmpsl
fbld
lret
dec
push
push
popa
outsl
enter
jno
jns
xor
xor
movsb
rolb
test
inc
dec
pop
popa
mov
hlt
dec
fidivrs
jg
jg
sub
mull
jo
sub
into
pop
adc
xchg
sti
jnp
mov
jno
xchg
mov
adc
inc
cwtl
adc
pop
popa
pop
les
and
test
js
out
jno
adc
aaa
push
jmp
mov
fwait
clc
mov
rolb
mov
dec
arpl
sbb
mov
adc
in
add
add
sub
scas
outsb
test
out
ja
call
mov
sub
mov
mov
jle
inc
and
js
xchg
push
push
push
add
dec
aad
call
enter
test
and
push
notb
lods
sub
and
loopne
rcrl
sar
lds
stc
pushf
jb
mov
add
adc
and
add
pop
enter
xchg
push
lret
cmp
and
icebp
inc
ja
es
cmp
pop
or
insb
hlt
jmp
jl
test
pop
loope
xor
xchg
add
loope
mov
or
aad
shll
mov
xchg
mov
sahf
jge
pushf
xor
push
sbb
cli
fstpt
mov
daa
push
int
dec
jg
add
adc
lcall
pop
sub
mov
outsl
inc
fsub
adc
or
sahf
orb
pop
fisttpll
xchg
mov
cmpsl
dec
and
bound
push
out
xchg
fnstcw
cli
cs
loop
imul
mov
push
outsb
jg
in
jle
jnp
mov
scas
hlt
mov
push
jno
mov
mov
jg
insb
pop
add
pusha
imul
std
push
pop
movsb
xor
jle
fidivrl
mov
aam
jge
test
dec
and
hlt
insb
jno
or
and
push
ror
add
pop
sub
int
xchg
or
or
fsts
shr
gs
test
dec
pop
mov
and
in
addr16
pop
inc
xor
out
xchg
ljmp
cmp
ds
jno
jge
add
ja
in
in
dec
or
fstl
cmpsl
and
fisubs
pop
aad
adcl
das
cmpsl
repnz
inc
iret
jb
aad
outsl
xchg
loop
or
cli
cmp
lods
sbb
imul
mov
mov
lcall
push
ljmp
fidivrs
add
je
lret
dec
mov
cmp
inc
js
cmp
arpl
rolb
inc
dec
fistl
cmpsb
jo
or
jge
daa
inc
pop
lock
inc
jmp
pop
inc
pop
xchg
jge
fsubrl
pusha
iret
shll
sbb
inc
push
ljmp
movsl
push
jmp
aas
sbb
inc
lcall
dec
dec
enter
mov
clc
call
mov
adc
push
inc
daa
lods
dec
sub
std
lea
sarl
aam
es
int
push
mov
mov
mov
sbb
and
sarl
pop
into
mov
adc
out
mov
lahf
jg
js
xchg
lret
movsb
movsl
jle
lcall
mov
adc
call
and
rcl
mov
dec
mov
jne
out
int
aaa
xchg
mov
xor
cwtl
push
mov
nop
sub
pop
orl
fstps
les
jecxz
xchg
sub
loope
cwtl
sbb
jno
and
repz
push
and
fwait
movb
ja
pop
mov
xchg
shlb
shll
pop
out
mov
adc
or
mov
push
pop
sti
and
adc
rcll
incl
lds
mov
insb
stos
fcmovbe
test
scas
fnstcw
movsb
adc
or
sarb
dec
xor
cmp
pop
mov
adc
or
push
mov
xor
fcompl
sub
cmp
aad
fsts
push
xchg
ds
sahf
or
test
insl
mov
dec
subb
rclb
cltd
imul
stos
mov
arpl
xchg
add
xchg
cmp
xchg
sub
xchg
push
cltd
in
mov
repnz
add
xor
ljmp
roll
icebp
xchg
pop
dec
imull
pop
inc
out
fcmovbe
adc
jge
fcmovnb
mov
mov
mov
shr
push
push
adc
fwait
aam
mov
and
push
fwait
inc
cmp
pop
mov
jae
push
insb
dec
mov
inc
iret
mov
sbb
out
ret
into
loopne
sub
insb
xor
or
outsl
xchg
push
push
sub
xchg
or
bnd
or
inc
out
mov
pop
inc
pop
or
test
pop
scas
pushf
jmp
mov
push
cli
mov
sub
addr16
loope
aam
sbb
ja
pop
xor
mov
inc
fnsave
mov
and
mov
test
mov
sub
jle
mov
jnp
mov
push
and
adcb
pop
es
sbb
pop
pop
or
scas
dec
fsubrp
das
fcmovb
inc
mov
cmp
pusha
mov
pusha
mov
and
scas
sbb
movsb
cmpsl
pop
push
imul
out
xchg
dec
fninit
inc
lods
call
mov
add
lods
stc
js
jo
fs
clc
fs
mov
pop
adc
mov
and
and
sarb
loopne
movsl
rol
xor
stos
inc
in
inc
mov
jl
imul
push
mull
pop
add
icebp
pop
lea
push
adc
push
pop
sub
ds
outsb
jge
mov
subl
inc
hlt
fs
pop
cltd
inc
mov
dec
push
inc
cltd
insb
imull
adc
mov
and
jbe
test
sbb
in
xchg
dec
mov
or
outsb
loopne
xchg
mull
enter
or
pop
insl
mov
xchg
jmp
mov
push
mov
lods
out
sbb
add
xor
ret
je
xor
les
or
enter
jno
jne
adc
xchg
inc
sbb
mov
ds
popa
je
lret
cmc
leave
pusha
mov
push
sub
scas
imul
fstps
jle
cmp
mov
xchg
sbb
xchg
dec
cmp
repz
rclb
inc
or
xor
andl
mov
jae
sbbb
ds
lahf
mov
outsl
or
adc
imul
sahf
inc
jmp
ret
mov
jb,pn
push
addr16
inc
cmpsb
ret
stc
adc
cmpsb
xor
and
inc
xor
imul
mov
sbb
movsl
aaa
jle
test
imul
psubw
ficoml
push
in
int3
or
ljmp
dec
call
movsb
and
or
fadds
fcmovnb
and
ja
stc
mov
jl
leavew
cmc
lret
pop
scas
sbb
aas
add
cmpsl
xchg
stos
leave
mov
rclb
testl
xchg
mov
jmp
call
mov
popf
daa
or
mov
in
mov
xor
mov
jmp
mov
or
push
mov
add
xor
test
pop
mov
mov
sub
cmpsl
movsl
cltd
popf
addb
sti
into
outsb
mov
sbb
xor
pop
cmp
test
fidivs
inc
loope
mov
dec
icebp
or
fisttps
xor
push
cmp
cs
aas
mov
mov
das
mov
mov
sbb
adc
sarb
push
pop
js
push
xor
xor
sti
mov
test
dec
mov
jge
sbb
out
dec
shlb
mov
repz
je
xchg
add
add
addb
push
jmp
in
stos
or
lock
adc
mov
vhsubps
rclb
xchg
out
adc
jnp
pop
add
pmulhw
insb
in
call
adc
jl
fcomps
ja
notb
scas
sbb
sbb
cmp
mov
jp
ss
sbb
dec
daa
les
stos
mov
mov
daa
test
mov
inc
sahf
icebp
pop
inc
lahf
stc
aas
insl
insb
inc
sahf
insb
lock
in
mov
pop
mov
sub
mov
cltd
pop
aad
push
dec
gs
popf
js
lock
mov
repz
pop
sbb
rcrb
pusha
push
adc
js
iret
divl
sub
pop
cmp
ret
or
jl
add
xor
call
dec
mov
mov
mov
test
mov
or
rcrb
mov
mov
cmp
add
jb
or
mov
outsl
aad
xchg
sahf
xchg
adc
out
pusha
pop
outsb
popl
inc
pop
pop
cmpsb
mov
push
sti
imul
jae
add
pushf
sub
mov
fisubl
jne
jl
loop
mov
cmp
add
std
or
sbb
inc
push
push
ret
add
mov
jge
fs
cs
sbb
jecxz
add
sbb
dec
xor
push
xor
xchg
rclb
das
pop
push
in
outsb
icebp
not
adc
imul
cld
adc
enter
mov
loop
xchg
pushf
add
xchg
test
inc
out
sbb
or
int3
mov
jmp
pop
ja
inc
mov
xor
jno
jg
clc
dec
push
pop
std
outsb
fistl
repz
cltd
repz
jle
rclb
push
dec
mov
xor
inc
jae
dec
inc
jo
mov
jae
xchg
setno
push
cmp
mov
adc
sub
pusha
lahf
in
cli
mov
fiadds
cs
scas
push
sbb
inc
rcll
or
push
loopne
pop
cmp
int3
insb
std
popa
dec
lods
jecxz
or
push
mov
jbe
xor
mov
fcmovnbe
sub
movl
ss
stos
jge
xor
xor
js
adc
push
mov
dec
inc
or
imul
test
push
mov
outsb
sub
push
push
rolb
jo
mov
mov
sysexit
das
jb
js
insb
sub
inc
sub
lods
ss
mov
add
sub
add
in
cld
gs
fdivs
fs
je
mov
mov
lods
ja
xor
pop
mov
dec
inc
mov
xchg
jle
lds
aam
sub
cmpsl
and
int
jno
mov
lcall
mov
test
cmp
repz
or
xor
cmp
pop
cld
add
data16
rcl
fimull
pop
push
negl
hlt
push
push
ret
lahf
imul
fldcw
lds
adc
ret
test
mov
outsl
xor
mov
xchg
or
loop
jb
mov
nop
sub
cmp
stos
xor
cmp
jae
lea
add
xchg
sub
xchg
shlb
lock
adc
outsl
jge
sub
fistpl
pop
dec
fisubrl
pop
ret
rcrl
xchg
mov
jb
movsl
test
bound
push
pop
mov
xchg
dec
xchg
sbb
dec
test
fidivs
xchg
mov
sub
inc
mov
test
mov
lahf
imul
sarb
leave
packuswb
shl
ret
jae
xchg
outsb
mov
push
fdivs
fistps
cmpb
add
repnz
lahf
mov
lea
pop
add
sbb
cmp
test
pop
mov
lahf
xor
adc
mov
cmc
hlt
and
push
stos
sbb
push
inc
and
push
pop
mov
rcl
jnp
lahf
push
in
mov
cld
add
cld
repnz
xor
adc
inc
sbb
ficoml
mov
push
mov
push
add
inc
xchg
cmp
xor
jmp
or
insl
mov
mov
mov
fcoml
or
push
push
aam
enter
adc
mov
loope
jg
push
mov
fs
inc
xchg
xchg
xchg
cmpsl
lahf
in
push
test
bound
nop
mov
sub
sbb
add
out
je
sti
scas
add
mov
std
jmp
fistps
pop
sub
inc
mov
in
popa
mov
pop
jecxz
cmpsl
mov
int3
jne
lahf
add
or
cmpsb
pop
xor
mov
jo
inc
mov
adc
xchg
cvtpi2ps
in
or
xor
pop
cmp
lock
gs
push
test
mov
pop
cmpb
cld
ja
outsl
pop
mov
cmp
ret
scas
mov
inc
std
pop
enter
cmpsl
push
shl
cmp
mov
sbb
sbb
andb
dec
xorb
mov
std
sub
and
jnp
xor
push
xchg
xor
push
push
lods
xchg
call
dec
outsl
or
adc
push
repz
cmc
fwait
stc
adc
hlt
adc
inc
cwtl
popa
mov
xchg
jae
and
roll
int3
push
lcall
sbb
scas
xchg
fcmovnu
fstps
cmpsl
push
pop
jbe
scas
inc
or
lock
jge
mov
rclb
sbb
sub
pop
mov
fs
sahf
mov
mov
push
nop
push
push
gs
ds
fsub
repz
imul
movsb
mov
ss
cmpsl
repnz
xchg
push
jp
bound
sahf
fisubl
jp
mov
mov
pop
jge
xchg
loop
fwait
inc
xor
adc
mov
fdivrl
ja
cmp
les
lahf
leave
addr16
ljmp
xor
inc
pop
pushf
pop
mov
push
lods
cmp
xor
loope
test
add
xlat
leave
fisubrl
out
mov
xor
sahf
xlat
and
mull
inc
inc
cmp
xlat
mov
xor
dec
dec
jno
inc
and
in
jnp
add
adc
push
mov
test
cld
pop
cmp
sub
mov
rcll
add
pop
or
shll
push
imul
hlt
sub
sbb
iret
push
jge
sub
cmpsb
popf
rcrl
cmc
xor
cmpsb
fwait
loopne
add
jns
loope
sahf
add
aad
cmpsl
outsl
inc
lcall
jbe
mov
inc
rolb
lock
bound
xchg
pop
nop
cmpsb
push
push
inc
push
scas
xor
loop
lcall
in
dec
jbe
shrb
mov
out
sbb
sub
and
repnz
sahf
inc
mov
or
cmp
test
fcoml
lret
sti
jg
pushf
into
push
ss
fwait
pop
pop
repnz
jo
jp
in
lock
ljmp
jo
cs
push
and
or
fdivs
ret
cmc
adc
mov
std
in
xor
mov
scas
pop
push
mov
cmp
call
inc
mov
add
pop
mov
iret
pop
adc
mov
pusha
scas
imul
pop
xor
lahf
push
rol
imul
pop
jae
push
sub
clc
inc
and
insb
cltd
cltd
rcll
xor
mov
insb
clc
mov
out
lcall
mov
int3
enter
inc
xchg
xchg
adc
cmc
bound
int3
hlt
insl
into
cs
mov
cltd
mov
adc
adc
and
and
dec
inc
int
add
add
push
ja
adc
inc
dec
mov
pop
mov
push
test
sbb
dec
cmp
sbb
jo
push
stos
sub
push
xchg
add
xor
out
xor
aam
iret
arpl
dec
mov
push
addr16
sub
mov
sbb
and
fs
jge
mov
js
mov
push
inc
outsb
xchg
sub
stos
jg
xchg
push
js
lock
mov
pop
inc
fidivrs
push
loopne
rcl
mov
cmp
loope
mov
js
mov
and
lods
test
pushf
pop
lret
mov
arpl
adc
adc
mov
jg
or
push
sbb
lret
add
sbb
ret
mov
lret
subl
jbe
rorl
mov
xchg
xlat
xor
stos
je
mov
std
or
push
adc
mov
cli
jg
js
inc
data16
aam
addb
sti
inc
shlb
mov
xchg
cmp
push
imul
pop
in
cmp
ret
add
xchg
and
xchg
cmp
inc
add
call
pop
outsl
jns
inc
pop
push
stos
or
fstpt
ljmp
xchg
les
je
xor
cmp
in
push
sti
inc
out
xchg
sub
aad
das
fsubrp
mov
adc
jg
or
repz
aas
pushf
js
jge
xlat
jns
mov
inc
scas
leave
lds
xlat
cmp
add
movsl
jae
xor
dec
sub
or
push
iret
cmp
xor
scas
popf
mov
pop
xchg
lret
or
add
adc
dec
pushf
sarl
pop
sub
lods
jl
push
popf
mov
std
jg
popa
lds
add
cwtl
mov
xchg
in
cs
cwtl
iret
jmp
and
lods
js
rcrb
mov
mov
bound
gs
int3
mov
orb
add
mov
inc
loopne
icebp
mov
in
mov
dec
cs
pop
ficomps
in
jbe
repnz
sub
jg
inc
push
enter
insl
popf
movsl
mov
and
out
mov
shrl
dec
cwtl
daa
mov
pop
xor
lahf
dec
xchg
pop
add
addb
mov
or
dec
adc
pop
int
fwait
or
mov
pcmpeqb
mov
sub
xchg
stos
call
lret
inc
imul
xchg
jb
popf
dec
sub
mov
inc
push
icebp
xchg
cmc
push
adc
inc
or
inc
sub
and
enter
faddl
adc
mov
testl
xorl
cs
xchg
mov
mov
sbb
push
mov
and
inc
mov
loop
push
or
mov
or
clc
mov
iret
in
sbb
dec
lret
sub
fimull
fsubs
xchg
bndstx
mov
sub
xchg
mov
ja
sub
lahf
add
nop
les
pop
test
and
shrl
mov
shr
addl
dec
hlt
jmp
rcrb
jle
ds
mov
stc
push
sub
addl
xchg
sahf
inc
mov
jle
sub
imul
cs
pop
lock
roll
inc
call
push
fadds
inc
xor
mov
arpl
and
jae
mov
xchg
push
add
cmp
filds
and
xchg
repz
xchg
jecxz
inc
in
push
mov
inc
les
push
inc
fwait
lahf
pop
int3
ror
faddl
frstor
lcall
pop
pusha
call
add
mov
ljmp
mov
jb
sub
imul
push
nop
push
aam
push
or
mov
subb
inc
out
cs
add
pop
push
jmp
aas
sub
scas
aam
out
and
into
adc
scas
out
outsl
movsb
ret
ds
cmp
cmp
sbb
mov
inc
pop
mov
out
aad
jno
test
pushf
xor
into
xor
sub
mov
jns
mov
mov
std
mov
or
and
cmc
xchg
and
dec
pop
dec
xor
aam
in
or
sbbl
fcoms
xlat
aad
call
movsl
jbe
xchg
xchg
dec
xlat
loopne
mov
jl
xor
imul
mov
sbb
nopl
daa
fnstenv
stc
sbb
aam
xchg
sbb
sbb
mov
sub
fwait
sbb
jnp
icebp
pop
and
gs
ret
cmp
repz
inc
and
jle
rcrl
test
push
call
enter
daa
addr16
sub
mov
data16
pop
imul
dec
and
dec
clc
push
fld
cld
gs
lahf
ljmp
inc
in
enter
xchg
mov
jo
jle
xchg
int3
gs
cmp
add
xchg
shll
fcomi
xor
arpl
xchg
pop
mov
std
lods
lcall
mov
aam
stos
xlat
insb
adc
arpl
jl
xchg
movsb
push
xchg
push
adc
adc
xchg
loopne
jl
fsubr
cmc
cmpsl
pop
mov
stc
ljmp
pop
adc
lcall
ficomps
jno
inc
mov
scas
insb
jne
test
lea
inc
adc
movsb
cmpsl
adc
movsl
sti
adc
vmread
mov
test
dec
fcmovu
jb
inc
jnp
pop
scas
stc
xor
repz
mov
stos
pop
dec
outsl
lcall
adc
mov
scas
nop
scas
fdivl
sub
fcoml
add
dec
leave
sub
xchg
mov
lret
idivl
push
mov
dec
xchg
lea
imulb
push
adc
gs
sbb
sbb
into
cli
out
xchg
dec
jg
jmp
and
dec
loope
pop
leave
cmp
xor
jo
lods
stos
mov
insl
sarb
pop
jb
std
arpl
aad
divb
mov
outsb
cmpsb
jb
mov
sbbl
call
icebp
bound
leave
push
pop
ret
dec
insb
lret
mov
rolb
lods
popa
jmp
pushf
jmp
mov
arpl
outsl
imul
push
in
or
jle
xchg
push
cltd
or
or
loop
xchg
cmp
loop
add
roll
and
add
fildl
or
pushf
loop
add
adc
mov
push
in
jbe
jecxz
mov
pop
imul
jl
sub
pop
aas
arpl
scas
jmp
data16
test
mov
int
add
into
cs
in
inc
jge
das
pop
popa
inc
addr16
rclb
or
lcall
dec
and
add
gs
repz
sub
xor
jne
jne
iret
dec
xor
or
pusha
aam
jnp
stc
mov
jl
push
ja
add
ds
xor
jge
add
in
int3
inc
cmp
stc
or
lea
mov
aaa
in
mov
pop
clc
pop
aaa
and
sbb
cmpsb
adc
sbb
inc
aaa
xchg
bound
pop
cmc
push
xchg
loopne
xchg
cmp
test
dec
aas
daa
loop
cmpsb
mov
jbe
jle
sti
fsub
daa
test
test
in
and
fidivl
dec
insb
or
sbb
or
hlt
sbb
pop
adc
je
push
repnz
notl
into
add
xchg
pop
in
cmp
push
pop
aaa
push
mov
sub
icebp
or
sub
sub
mov
fistpll
sbb
push
push
outsl
aam
pop
test
int3
mov
enter
out
jg
push
or
nop
pop
andl
dec
adcl
lcall
inc
mov
adc
and
mov
int3
and
or
aas
dec
sub
cmp
daa
addr16
mov
fsubrl
out
cmpsl
out
mov
push
push
insb
aam
jge
push
sbb
add
iret
fimuls
inc
cmp
fdivl
inc
icebp
sbb
mov
add
out
sti
or
jle
ror
shl
fadd
pop
mov
xor
mov
jmp
scas
outsl
sbb
iret
shll
or
fwait
mov
gs
lods
in
mov
xlat
and
mov
and
sbb
into
xchg
push
or
mov
test
ds
cmp
or
loop
inc
call
pop
loopne
or
loope
rcll
ja
xchg
jg
cmp
xchg
push
movsb
sub
aad
adc
cld
clc
subb
sub
outsl
bndstx
popf
fs
push
int
rclb
dec
jno
jbe
adc
fmull
sbb
ret
cmpsl
jae
cs
xchg
adc
out
sbb
in
inc
pop
cmp
pop
mov
cld
and
cld
xor
adc
notl
sbb
lret
nop
cmp
mov
push
mov
repz
imul
dec
sub
push
fistps
sbb
sub
cmp
mov
mov
es
pop
add
mov
lcall
outsb
dec
es
jecxz
hlt
mov
xchg
push
lock
in
lock
mov
daa
pop
out
pushf
ds
jmp
loop
mov
push
cmp
imul
leave
lret
pop
pmullw
imul
jmp
push
sub
shlb
jbe
xchg
adc
mov
sub
fdivp
adc
mov
and
and
dec
stos
fwait
mov
dec
sbb
rclb
out
test
lret
mov
aam
inc
rcrl
lds
fimuls
xchg
jns
ds
dec
xchg
sub
ja
cmp
daa
bound
xor
sahf
push
add
xlat
and
inc
push
sbb
mov
orl
cmc
aaa
int3
pop
sub
sarl
jne
cmpsb
sti
add
insb
les
cmpsb
imul
add
inc
adc
mov
pop
in
mov
mov
mov
sub
mov
xchg
jbe
dec
jmp
outsl
scas
ja
mov
or
in
cmp
inc
insb
mov
cmp
add
and
push
pusha
mov
or
sbb
into
or
cmp
movsl
mov
add
dec
xor
loopne
sbb
insb
sub
ja
clc
pop
rorb
test
mov
stc
add
lods
push
and
jp
jbe
mov
or
out
add
pop
inc
jle
mov
dec
ret
ret
fcoms
push
jmp
ds
mov
lret
call
fmull
mov
mov
and
ja
cmp
push
mov
dec
jb
dec
lds
sti
shrb
lds
js
call
ljmp
xchg
lds
repz
xchg
pop
or
and
push
mov
cmp
or
xor
int3
test
xor
fidivs
clc
xlat
in
cmp
inc
mov
repz
xchg
pop
dec
out
ret
mov
pop
stc
lods
scas
call
movsl
jp
jle
pop
mov
adc
call
cmpsl
lock
pop
ficomps
jo
hlt
aaa
je
or
mul
xor
cld
push
cmpsl
js
push
ds
ss
jo
ja
add
lret
add
cld
sbb
hlt
mov
push
and
xor
lock
icebp
inc
js
adc
aas
dec
gs
mov
in
push
aad
and
mov
pusha
xor
ja
mov
sub
ret
outsl
in
push
adc
outsb
push
ds
jo
pop
jg
cmp
add
pop
das
scas
sqrtps
in
lcall
pusha
iret
jp
les
mov
imul
int
pop
xor
sub
xchg
sar
orb
mov
cwtl
ljmp
sub
mov
add
sub
xor
int
popa
lods
mov
mov
dec
lea
loopne
add
in
scas
movsl
rclb
adc
jge
mov
cmp
inc
sbb
lahf
xchg
xchg
out
sbbl
jbe
or
out
add
stos
add
rclb
pop
mov
jg
lods
cld
dec
imul
clc
or
ljmp
inc
clc
cmpsb
mov
mov
or
ret
push
dec
jo
cmpsb
dec
jns
scas
xor
nop
mov
add
xor
scas
add
cwtl
sbb
xchg
and
and
or
pop
rorb
fsubs
daa
mov
xor
out
sbb
mov
aas
stc
testl
adc
gs
jmp
cmp
jl
js
int3
cmpl
pop
mov
mov
shrl
push
mov
cmc
xchg
dec
mov
jmp
xor
out
push
fimull
xchg
add
pusha
outsb
out
stos
lods
int
xchg
mov
outsl
mov
or
cmc
or
subl
dec
dec
mov
jns
push
fsubrl
mov
sbb
out
cmp
mov
lods
loopne
pop
in
add
mov
ficompl
sub
aam
and
ja
inc
aaa
adc
lods
jns
outsl
shl
mov
enter
movsb
in
mov
mov
inc
out
mov
lahf
xchg
sub
std
add
icebp
loope
test
lar
loope
lcall
or
out
pop
add
xchg
movsb
ret
sub
mov
test
and
push
shrb
dec
lods
jge
mov
notl
mov
mov
and
adc
pop
roll
addr16
inc
add
jmp
js
mov
aad
add
pop
add
mov
push
leave
mov
pusha
movd
sbb
push
mov
push
dec
add
dec
insl
int
fnstsw
data16
adc
test
fadds
xchg
pushf
rcll
mov
inc
add
mov
sub
out
adc
add
push
pop
xlat
mov
lods
dec
std
shlb
repnz
pop
sar
push
fs
xchg
add
jbe
cs
mov
sub
xchg
dec
sbb
xchg
imul
mov
nop
xchg
icebp
movsb
dec
test
mov
clc
out
mov
test
test
je
lods
roll
adc
aad
mov
or
jmp
hlt
popa
push
fsubrl
cs
adc
pop
clc
lods
clc
scas
loope
movsb
add
push
pop
inc
bound
push
mov
cmp
cmpsb
sbb
lods
mov
xor
hlt
loop
sub
pop
in
filds
pushf
pop
mov
in
sahf
pop
push
push
xor
ficomps
cmp
dec
push
mov
mov
lret
pop
pop
std
sub
nop
mov
push
inc
je
jno
mov
xor
stc
push
aas
mov
pop
fwait
cli
cmpsl
adcl
add
mov
aad
xchg
fimull
out
adc
into
xchg
add
mov
insl
aas
jecxz
in
sbb
sbb
jno
push
aam
xchg
stos
cmc
and
sbbb
dec
mov
cmp
movb
lahf
mov
lock
repnz
pop
lock
jns
push
addr16
orb
add
cmp
and
push
xor
and
jl
xor
push
dec
jmp
test
rolb
fldenv
fmuls
aaa
outsl
add
dec
cmpsb
lret
int
outsb
sbb
adc
fistps
mov
mov
iret
sbb
int3
insb
dec
mov
ss
mov
ljmp
and
aaa
fstps
xor
roll
push
stos
mov
ss
jle
pop
fadd
inc
or
xchg
mov
cs
push
lds
adc
lock
dec
mul
xchg
push
mov
jb
push
cmpsl
and
sub
test
mov
fcmove
test
pop
pop
push
inc
xlat
pop
add
xchg
loop
mov
sub
dec
sub
adc
mov
mov
mov
sub
repz
push
test
dec
out
adc
hlt
aas
loope
clc
adc
mov
xor
mov
or
int
jb
pop
scas
cmpl
adc
stc
mov
inc
fdivrs
and
add
jbe
mov
or
xor
push
es
dec
mov
sub
rclb
jle
jl
lea
sub
and
andl
lock
add
icebp
fdivs
addps
shrb
jno
notl
add
xor
js
test
popa
sahf
and
mov
pop
mov
mov
fiadds
push
mov
mov
stos
or
jbe
in
ds
lret
add
or
pop
jae
outsb
mov
xor
aam
xchg
aam
pushf
imul
cwtl
add
or
das
jecxz
mov
add
cmc
jno
sub
and
jb
adc
mov
pop
inc
aas
in
shlb
adc
mov
ljmp
inc
out
cs
fcomps
movl
fists
adc
imul
jp
mov
outsb
ss
dec
dec
jns
into
or
cmp
mov
cld
lahf
mov
jno
aam
mov
gs
mov
std
ret
insl
sti
popf
int3
imul
pop
fwait
adc
mov
scas
or
stos
pop
in
and
je
inc
inc
xchg
xchg
mov
fsubr
push
das
stos
inc
mov
sbb
mov
mov
and
pop
xlat
mov
mov
out
pop
or
dec
push
mov
es
out
stos
or
cmp
cmp
sbb
addr16
and
adc
out
sub
insl
cli
divb
mov
ljmp
sub
aad
add
mov
fadds
xor
rcrb
outsb
push
and
pushf
repz
sub
mov
insl
mov
mov
or
cmp
adc
rolb
sarb
ja
iret
leave
sbb
movsb
inc
sbb
loop
pop
jg
jmp
cmovle
ss
rorb
das
je
mov
inc
mov
js
push
outsl
push
sub
jle
cmpl
je
and
mov
add
adc
sub
mov
movsl
divb
xor
pop
jns
inc
mov
mov
out
and
lcall
fidivs
jne
cmc
imull
push
pop
cmp
push
or
adc
push
cmp
fwait
pop
push
outsl
dec
pop
inc
and
xchg
jge
pop
test
je
xchg
jecxz
xor
xchg
std
lds
adc
jmp
pop
lea
mov
imul
sbb
movsl
cld
xor
and
mov
push
shrb
clc
inc
pop
mov
mov
mov
imul
jb
ret
mov
xchg
xlat
pop
mov
xchg
add
ret
es
pop
das
ret
xor
fwait
xlat
bound
shr
jb
xchg
cmp
pop
dec
lds
shll
js
mov
mov
xchg
test
push
pop
pop
repz
jae
test
push
push
inc
sbb
loopne
xor
mov
or
pop
inc
lea
shrl
jbe
xor
leave
and
jl
iret
in
jo
fnsave
pop
test
and
addr16
jns
mov
cmpsl
and
dec
jle
xor
scas
and
out
xor
add
fildll
cmc
inc
ds
cmp
jne
data16
pushf
adcb
mov
mov
leave
or
jp
xor
pop
pop
xchg
dec
push
pop
or
mov
outsb
mov
enter
mov
push
ficoml
xchg
jmp
jecxz
xchg
push
insb
adc
cmp
xchg
cmpsl
inc
lcall
pop
add
iret
jno
and
xchg
mov
fmull
sbb
lcall
nop
jge
sub
sbb
imul
sbb
add
push
pop
shrb
arpl
test
jo
or
jnp
mov
mov
jbe
scas
rorb
sbb
sbb
aam
hlt
xor
or
inc
xor
sbb
mov
out
nop
les
das
cs
pop
subb
pushf
or
std
in
jl
shl
adc
jecxz
inc
jecxz
lcall
dec
sbb
out
orb
outsl
xchg
repz
lods
fnsave
in
and
sub
repz
dec
sarl
jp
into
and
out
pop
adc
cld
addr16
inc
inc
nop
push
jg
stc
es
in
stos
lods
sub
mov
out
jo
sbb
mov
paddsb
pop
jmp
aad
xor
push
jno
sbb
mov
inc
mov
pop
mov
mov
cmp
jo
pop
ja
daa
pop
push
aam
outsl
push
jle
dec
mov
xor
jmp
lods
aas
push
ja
push
sub
stos
out
cltd
inc
ds
mov
adc
shr
into
add
adc
cmp
icebp
mov
jecxz
fdivs
cli
leave
fisubrs
addr16
pusha
ret
in
je
inc
int3
cltd
mov
pop
xor
jns
or
dec
sbb
out
aas
cmpsb
xchg
outsl
outsb
push
pop
and
add
mov
hlt
push
xor
or
sub
bound
fwait
lret
adc
dec
cli
fcmovb
movsb
jmp
pop
fcomps
or
icebp
xchg
cmp
fbld
mov
jae
push
nop
cltd
or
fwait
loopne
insl
lods
and
jne
cmpsb
cwtl
pushf
in
push
add
test
fadd
xor
mov
sub
push
mov
out
inc
inc
iret
mov
call
fcmovnu
loope
xor
xchg
imul
pop
sub
lret
xchg
decb
push
movsb
out
dec
stc
cld
inc
sub
ja
scas
stos
les
pop
test
jge
test
or
arpl
fucomi
xchg
ljmp
or
and
inc
les
mov
sahf
jns
push
adc
cs
inc
push
popf
xor
jnp
or
mov
out
and
push
sub
jl
push
std
pop
jl
ret
cli
ret
xchg
sub
or
xchg
out
adc
add
fwait
iret
out
push
ror
mov
jecxz
add
aad
jnp
xchg
adc
mov
ss
add
shlb
std
fnstcw
mov
test
lahf
lods
in
fwait
pop
imul
sbb
leave
dec
cmp
imul
es
mov
add
rcrl
jp
into
into
icebp
inc
incl
or
mov
pop
pop
dec
jns
xor
mov
loope
fwait
xchg
scas
cmc
out
mov
inc
test
dec
into
dec
mov
adc
call
mov
add
mov
jbe
mov
fadd
addl
dec
rcrl
cmp
fiadds
jo
jge
jbe
lcall
and
push
cmp
adc
icebp
adc
push
sahf
fildll
lret
xor
repnz
mov
nop
lret
test
jl
or
aaa
mov
orl
jl
hlt
xor
dec
jb
add
mov
add
xlat
aas
and
or
mov
jge
bound
push
movsb
into
out
add
cmp
les
arpl
xchg
pop
imul
loop
fnstcw
add
and
not
or
cmc
jg
add
mov
adc
mov
push
scas
pop
xor
sbb
lsl
and
insl
mov
add
pop
mov
icebp
lock
xchg
cli
inc
std
out
push
stc
test
xchg
test
dec
out
jbe
xlat
jbe
jb
loop
movl
test
jnp
mov
in
mov
jns
repnz
jno
fucomp
aam
adc
sub
lods
aad
in
lahf
cmc
cmp
cmpsb
test
pop
ret
in
negl
repnz
mov
push
add
xchg
fcoms
mov
mov
pop
imul
add
pop
jae
or
pop
push
aaa
push
imul
es
add
mov
adc
add
jge
xchg
push
jns
or
push
pushl
xchg
lock
jbe
mov
inc
jns
inc
or
pop
sub
ds
mov
mov
mov
jo,pt
gs
int3
out
loopne
mov
mov
lods
sahf
xor
es
push
cmc
push
jno
repz
fnstsw
out
das
cmp
test
std
lret
cmc
loope
push
ficoml
ret
mov
sub
push
mov
mov
mov
int
add
sbb
fcomp
push
mov
shrl
lock
jo
pop
push
adc
jbe
lahf
in
dec
adc
loop
jge
xchg
mov
cmp
movsl
add
and
and
lods
mov
sarl
aas
jp
sahf
push
lods
sub
or
push
push
mov
lahf
pop
popa
mov
push
imul
ret
pushf
loope
inc
push
push
or
mov
out
and
mov
mov
sbb
sub
into
mov
xor
push
and
lret
stos
adc
push
add
inc
fldt
popa
cld
rclb
mov
sbb
gs
sahf
leave
and
jmp
pushf
out
xchg
jecxz
movsl
lcall
pop
mov
das
push
and
mov
jecxz
jmp
cltd
dec
cli
or
dec
cmp
sub
or
testb
jno
adc
inc
sarb
out
and
cmp
jo
mov
icebp
jb
test
fildl
and
addr16
xor
xor
mov
cmpb
dec
lds
cwtl
shll
nop
mov
mov
pop
and
rcll
test
aaa
dec
popa
cmc
movsb
int
add
mov
mov
movsb
decb
cmp
and
pop
sbb
jb
cmp
lret
pop
inc
sub
lret
decb
hlt
movsb
and
add
stos
fxch
pop
movsb
adc
xchg
push
adc
pushf
sbb
lea
cmp
cwtl
sbb
push
pop
into
dec
nop
mov
jno
fwait
lock
sub
add
inc
pop
or
pop
xor
out
stos
dec
mov
mov
dec
int3
mov
xchg
jecxz
inc
mov
jb
mov
jge
inc
jmp
dec
xchg
cmp
loope
inc
push
push
mov
repnz
push
out
cmp
push
and
test
repnz
dec
rcr
mov
push
pop
jbe
dec
ljmpw
icebp
mov
push
lea
test
fisubl
xchg
leave
int
add
mov
out
lahf
sub
es
jae
daa
ds
in
xchg
sbb
test
js
enter
test
movsb
flds
mov
and
mov
sub
mov
ss
rcll
sahf
in
jp
pop
mov
lds
sti
inc
int3
aas
je
shll
jp
or
rep
aam
lret
inc
lock
scas
pop
jecxz
inc
sub
pop
adc
jmp
or
jp
cmc
pop
loop
shlb
xchg
inc
scas
push
cli
cld
dec
and
xor
mov
push
push
mov
mov
sbb
out
or
sub
xor
movb
outsl
out
mov
es
jbe
mov
fld
sti
adc
mov
sub
push
jg
push
jmp
fdivl
adc
push
push
ficoms
xchg
test
cmp
push
je
pop
push
adc
popa
adcl
pusha
cmpsl
sahf
lahf
pop
mov
sbb
jmp
test
pop
cmp
or
jecxz
in
fcoms
push
and
inc
mov
add
out
cmp
cwtl
arpl
insl
pop
dec
mov
bound
daa
inc
xchg
or
mov
out
sbb
dec
fnstsw
test
inc
xchg
inc
pop
xchg
test
pusha
imul
xchg
push
aaa
lock
xchg
outsl
fstps
out
fidivrs
sahf
and
cmp
sti
int
inc
xlat
out
and
outsl
and
and
leave
cmp
xchg
dec
in
cltd
movsl
sub
leave
mov
imul
mov
fsub
xchg
lcall
mov
jns
add
loope
cmpsb
pop
lcall
out
push
loop
cwtl
fmuls
mov
and
lea
xchg
les
ja
repz
xchg
pop
ljmp
jle
or
mov
push
ficomps
xlat
jb
loopne
int
push
mov
add
stc
sub
in
mov
aad
jnp
mov
dec
sbb
fcmovbe
cmp
in
rcr
out
jb
std
imul
add
mov
push
cmpsb
pmaxub
notb
adc
cld
aam
sbb
xor
xchg
dec
dec
loope
cwtl
xor
dec
push
iret
or
push
stos
push
xor
or
enter
mov
pop
inc
sub
test
inc
stos
pop
stos
inc
mov
mov
aas
iret
inc
mov
insb
push
push
add
push
jle
add
cmp
dec
insl
inc
push
stc
fisubrl
xor
jbe
insl
add
into
rolb
pop
xor
fs
fmul
iret
icebp
cmp
adc
fidivl
xorl
pop
xchg
pop
push
jnp
cmc
leave
outsl
stos
jb
mov
adc
cmp
ljmp
push
pop
lret
mov
dec
scas
fs
xchg
sar
stc
divb
ljmp
mov
js
sub
aaa
push
mov
inc
lcall
out
les
jge
mov
shlb
test
jbe
sbbb
fnstenv
adc
fchs
lods
jae
js
out
pop
shll
les
out
xor
call
mov
test
lret
or
xor
pop
pop
mov
mov
or
lret
xchg
fs
scas
mov
push
mov
pusha
and
cmpsl
xchg
ds
outsl
inc
arpl
push
sbb
outsb
dec
inc
fmuls
jb
fnstsw
push
dec
daa
cmc
data16
jge
hlt
mov
xchg
shl
push
in
outsb
pop
dec
test
shr
out
add
iret
xchg
imull
stc
test
in
clc
repnz
js
bound
mov
push
adc
and
cmp
mov
int
push
mov
pop
ficoms
pop
leave
mov
inc
pop
int3
xor
lcall
incb
movsl
inc
andl
pop
jo
out
shlb
mov
sbb
cmp
iret
mov
out
pop
pop
cmp
nop
jmp
sbb
dec
sbb
fistl
sub
xor
pop
repnz
scas
sub
les
sub
aad
pusha
sub
inc
push
fsts
mov
scas
pop
fcoms
mov
aaa
and
push
insl
fdivl
inc
in
cmpsb
movsb
repnz
jp
push
pop
lret
or
xor
adc
adc
dec
rol
cmp
scas
push
and
push
cmpsl
aas
inc
test
int3
mov
pop
lret
repnz
jo
in
pop
xchg
pusha
jnp
push
xchg
add
jns
clc
mov
cli
stos
pusha
cs
mov
jb
mov
mov
mov
adc
xor
mov
xor
push
in
jle
popf
jbe
scas
ror
sub
mov
push
out
outsl
repz
dec
adc
add
adc
js
adc
in
fisubl
std
inc
cmp
jcxz
add
pop
rol
outsl
loopne
scas
dec
xor
test
fs
jp,pn
orb
dec
ja
std
fstpt
cmp
cmp
mov
push
fimull
in
or
sub
shr
hlt
adcl
xchg
mov
dec
mov
mov
cli
jno
call
xchg
mov
aaa
adc
inc
cli
sbb
xor
jl
daa
in
xchg
pop
movsb
mov
lret
xchg
inc
cmc
dec
pushf
in
push
adc
jecxz
add
divb
fs
cmpsb
pop
js
and
pop
push
ljmp
fidivrl
bound
lds
xor
in
cmpb
out
mov
fisttps
dec
push
into
popf
loope
pusha
daa
clc
imul
dec
add
scas
lcall
cmp
imul
hlt
aam
addr16
cmp
in
cmpsb
add
lods
aas
jne
fadd
fnstcw
push
add
push
inc
cmp
inc
mov
xor
je
les
cmp
movsb
jge
lret
pop
imul
mov
dec
inc
inc
repnz
xlat
dec
xchg
xor
leave
outsb
lret
and
addr16
sub
xchg
sub
xchg
jmp
int
das
dec
loopne
test
xchg
mov
stos
cmp
adc
jp
bound
shlb
orb
sub
cltd
movsl
cmp
xlat
addr16
xor
pop
inc
mov
es
icebp
lcall
dec
repz
shll
mov
and
pop
popa
sbb
and
loope
mov
in
add
or
call
sbb
pop
sbb
sbb
enter
inc
dec
cwtl
pop
jbe
aas
cmp
pop
mov
xor
bound
sub
xor
ficompl
test
sub
aad
iret
or
inc
je
ss
stos
cmp
add
add
cmp
adc
aam
cwtl
inc
xchg
lock
sbb
repz
adc
pop
pop
pop
sahf
jp
test
jecxz
push
stos
inc
nop
dec
cltd
push
jae
movsb
add
rorl
pop
fiaddl
dec
cld
push
xorb
jge
xor
jne
jno
mov
lock
rcrb
mov
sub
js
pushf
mov
das
jne
mov
push
scas
cld
ss
inc
js
xchg
fmulp
fucomp
or
dec
lods
sub
arpl
and
pop
dec
mov
icebp
ret
jnp
mov
rcll
lret
xchg
mov
faddl
pop
cmp
inc
sub
push
inc
lahf
bound
jg
cwtl
pop
adc
popf
push
sub
idivl
pop
xor
int3
stos
add
add
push
xchg
xchg
pop
repnz
and
leave
test
ds
inc
mov
cmp
sub
loope
pop
push
loopne
fwait
addr16
or
jno
dec
pop
and
arpl
or
dec
cli
enter
aaa
in
das
test
adc
add
jae
int
xor
xor
xchg
cltd
mov
movl
hlt
clc
movsb
adc
es
scas
jns
jl
test
rcll
jns
push
adc
in
push
inc
aam
jg
shrb
inc
clc
jp
mov
bound
insb
sub
cmpsb
jecxz
mov
arpl
jge
mov
inc
test
aaa
shlb
add
cld
or
in
xchg
sti
in
movl
dec
jae
stc
xor
lods
mov
lock
enter
test
xchg
ss
out
fcompl
dec
and
mov
mov
decl
push
pop
fwait
inc
adcb
xchg
mov
jo
loopne
arpl
pop
push
sbb
adc
cli
ljmp
test
pop
es
adc
addr16
stos
cmove
jno
and
js
sbb
mov
fsubrl
inc
aaa
pop
cmpl
cmp
xor
dec
clc
cmc
xchg
xchg
shrb
jbe
add
lcall
inc
jmp
in
inc
xor
es
cmp
loopne
add
icebp
and
mov
fidivrs
or
ret
test
sti
into
mov
insb
sbbb
adc
jecxz
dec
sub
jbe
dec
sub
test
mov
adc
insl
mov
sub
pop
jge
push
push
xchg
ret
cld
fwait
bound
andl
mov
mov
and
cmp
pushf
mov
push
cmp
das
test
loop
xchg
mov
xchg
inc
push
mov
les
aam
outsb
inc
lahf
fistpl
shlb
mov
push
out
mov
sub
sbb
icebp
lods
in
testl
inc
or
stos
pop
adc
mov
cltd
insb
dec
loop
jmp
iret
ret
mov
xchg
mov
xor
fisubrl
nop
test
subl
fdivrs
dec
rclb
in
ret
mov
jge
xchg
push
ret
xchg
repz
adc
movsb
sbb
cltd
mov
jo
push
ret
jns
xchg
or
jb
int3
pop
shl
in
or
inc
leave
fdivrl
movsb
ret
cmp
sbb
sbb
jle
ds
mov
mov
mov
sub
cwtl
out
mov
xor
and
das
pop
cmpsb
fsubrp
lret
enter
add
mov
bound
cmp
xchg
bound
clc
mov
push
and
sti
jmp
push
mov
mov
ds
js
push
xchg
mov
imul
xchg
fstpl
cmp
loop
push
push
mov
test
mov
jno
mov
out
cs
xor
mov
lods
sbb
mov
clc
mov
movl
loopne
jo
movsb
dec
jb
out
std
outsb
sbb
adc
lds
popf
out
std
jb
pop
sti
inc
and
popf
pop
lahf
jmp
test
dec
out
push
icebp
push
and
inc
pop
inc
jnp
push
push
cmpsl
shl
fidivs
or
inc
xor
bound
lret
mov
jl
jno
adc
dec
fidivrl
pop
push
subl
sbb
in
jecxz
cmp
fwait
popf
popa
pop
fisubs
cmp
and
jge
rorl
jmp
cmp
mov
les
jne
lock
sbb
xchg
lahf
jns
repnz
les
les
mov
cmp
push
imul
mov
pop
rcl
cmc
push
lods
and
mov
testb
and
and
sbb
push
mov
sti
notl
mov
mov
aas
test
pop
mov
out
push
xor
cmp
jnp
adcb
pop
xor
fwait
jmp
cmc
in
addr16
xor
xchg
lcall
mov
and
inc
jg
mov
push
xchg
inc
jl
outsl
test
mov
mov
popf
xor
push
mov
fbstp
pop
jne
stc
pop
dec
insl
push
les
add
push
stc
arpl
insb
out
pop
mov
fstps
sub
lock
pop
xchg
mov
xchg
push
std
pop
jbe
ret
adc
lds
shl
xchg
or
mov
and
divl
mov
cmp
out
xor
inc
ficoms
das
inc
jne
aas
pusha
in
stos
adc
jns
push
imul
mov
test
push
adc
test
in
test
incb
cmpsb
leave
pop
lock
and
lcall
scas
pop
xchg
jg
push
inc
ret
mov
xchg
inc
jle
push
mov
adc
pop
cmp
cmp
iret
xchg
xor
xor
dec
mov
mov
pop
and
stos
jmp
aam
hlt
cmp
xor
iret
outsl
loope
xor
cmpsl
idiv
sub
push
push
xchg
rorb
and
cwtl
jno
xchg
add
test
inc
repz
stos
mov
xchg
adc
jl,pt
pop
cs
lret
lods
sbb
sbb
sub
push
adc
ss
sub
fadds
xchg
enter
push
insl
cmp
sahf
adc
jae
or
testl
stc
shlb
fsts
daa
add
mov
inc
pop
rcrl
out
mov
and
add
xor
and
inc
es
cld
hlt
cmc
jecxz
add
xbegin
std
shl
int3
mov
push
pop
in
imul
push
mov
ret
xchg
das
ja
bound
push
cmpsl
xor
xchg
pshufw
xor
dec
xor
cmpsb
call
cmp
fidivrl
aad
out
ret
nop
and
cltd
fmuls
sbb
mov
sbb
js
xor
sbb
adcb
add
or
out
imul
dec
jl
and
mov
mov
xchg
fwait
xchg
adc
add
fcomip
jne
dec
mov
adc
inc
cmpsl
popa
mov
rcrb
push
xor
inc
jns
repnz
or
bound
xchg
jecxz
stos
jb
test
sahf
mov
jnp
sub
fs
call
sbb
xchg
movsb
push
scas
mov
movsl
fcmove
mov
and
rol
sub
hlt
lahf
mov
jbe
mov
mov
out
pushf
xor
sub
fwait
mov
push
popf
dec
lods
test
dec
and
sbb
and
jae
sub
sub
xor
xor
test
cmp
in
aam
shr
test
daa
movsl
mov
bound
jo
jns
dec
dec
adc
ljmp
pop
mov
push
sahf
add
leave
xor
xlat
push
cmpsl
inc
clc
or
jmp
fildl
xchg
pop
sub
mov
aam
enter
cld
shlb
jb
xchg
loope
fcmovnbe
fnstcw
fistps
jae
out
mov
fstpl
fcmovnu
in
jns
movd
icebp
mov
mov
jp
fimull
es
mov
clc
lock
or
add
jae
jecxz
in
mull
and
mov
inc
jmp
sbb
jle
cs
addr16
fisubs
aas
and
sbb
ljmp
mov
inc
mov
sahf
roll
sub
pushf
mov
sarb
imul
sbb
into
sbb
dec
test
aam
jb
adc
and
add
fadd
push
fiaddl
pop
cmp
jp
pop
faddl
fisubrl
movsb
pop
pop
daa
dec
xor
ja
pop
mov
mov
or
int3
cmp
loope
jo
cltd
mov
jno
prefetch
aam
inc
test
and
lea
dec
jle
insl
popf
insl
fwait
loopne
push
push
pop
adc
aam
push
gs
jns
nop
push
stc
ja
hlt
test
dec
jns
enter
xchg
shll
jb
jo
jp
xchg
sbb
or
sbbb
ret
lods
mov
cmp
outsl
lcall
lcall
push
fnstenv
fnstsw
inc
mov
or
add
mov
mov
in
cmpb
imul
jge
cmp
out
add
loope
ljmp
enter
dec
repz
add
scas
gs
test
and
sti
dec
pop
clc
mov
clc
jecxz
lods
sahf
add
mov
test
mov
sbb
jge
int
sbb
push
and
push
cmpl
and
lods
cs
cmp
dec
mov
pop
mov
cmp
testb
jbe
adc
in
mov
jno
enter
andb
in
or
inc
sbb
mov
and
adc
rclb
push
jo
cmp
fiadds
pop
insb
fldl
xchg
cmovbe
mov
cmp
xchg
jne
loopne
sub
pop
xor
loope
xchg
sbb
addl
shlb
push
cli
insl
loopne
int
rcrl
cmp
movsb
in
mov
test
inc
mov
cltd
mov
cltd
iret
jle
pusha
or
pop
sbb
sub
sub
mov
inc
jo
jge
ret
pop
add
loop
into
jmp
repz
nop
jno
add
leave
gs
aas
dec
and
xorl
dec
mov
dec
fistps
pop
adcl
das
xchg
lods
xor
sbb
bound
rclb
les
cmp
int
test
mov
cmp
sub
dec
push
push
cmp
mov
faddp
mov
test
cmpsb
xchg
fucomi
or
ret
movsb
test
lahf
jl
dec
mov
mov
lret
aam
dec
jnp
test
xchg
js
rol
cmpsl
or
push
sub
push
pop
or
clc
hlt
popa
inc
jo
int3
adc
jge
cmp
pop
jns
test
comiss
lcall
xor
lcall
lea
fisttpll
xor
int3
push
xchg
mov
out
out
sti
add
les
stos
mov
inc
pop
mov
sub
jno
xchg
shll
cmp
roll
mov
jge
xchg
sti
mov
cmp
in
sub
mov
inc
xor
xchg
jmp
fwait
test
cld
cmp
xchg
aas
in
jg
test
ret
and
sahf
and
sub
fs
push
mov
pop
adc
imul
pop
pop
push
cmp
sbb
mov
or
jb
pop
or
jg
pop
jns
in
sarb
ds
and
fistpll
out
int
idivb
lea
scas
lock
and
std
dec
cmp
mov
xor
push
lret
cmp
sbb
dec
cmp
aad
inc
mov
or
scas
loope
repnz
pop
or
cmpl
adc
mov
dec
test
scas
inc
scas
or
add
lock
sub
or
pop
lret
out
push
shl
std
or
inc
adc
xchg
lock
sbb
or
cmp
ja
fs
in
loopne
inc
bnd
push
mov
gs
fsubrl
les
in
fwait
or
daa
pop
xor
shll
enter
icebp
rcr
inc
jns
or
dec
adc
adc
push
mov
cli
jne
xchg
pop
jmp
xor
inc
inc
cmpsb
xor
mov
jle
adc
lds
push
mov
ret
mov
push
or
popf
adc
pusha
in
fwait
ljmp
test
sbb
jp
and
aam
js
adc
or
jmp
cmpsb
pop
dec
push
pop
test
addb
dec
orb
insb
out
lods
imulb
inc
or
xchg
int
test
xchg
lea
mov
lahf
sub
dec
icebp
icebp
lods
inc
or
or
add
das
mov
mov
loope
pop
pop
add
pop
pop
xchg
data16
movsb
adc
shll
dec
fnstcw
mov
loopne
dec
and
dec
jecxz
lods
mov
lds
and
xor
sahf
jne
jg
in
adc
dec
dec
and
mov
lods
jmp
outsb
add
test
pusha
xchg
out
add
mov
and
xchg
adc
out
out
mov
xor
and
jle
xor
push
mov
cmc
pop
lahf
mov
push
mov
in
cmpsl
sbb
pop
inc
mov
dec
mov
out
repz
mov
mov
clc
call
inc
push
xchg
xchg
dec
mov
ds
push
lea
jb
gs
jo
pop
push
cmp
sub
lret
ljmp
lock
mov
subb
add
jno
lret
push
rclb
inc
push
stos
inc
pop
not
mov
fsubl
mov
scas
pop
jl
lcall
pop
xlat
shr
jle
push
pop
or
xchg
rolb
movsl
xor
movups
adc
xor
je
repnz
inc
push
jbe
mov
bound
int
mov
imul
lret
sub
xor
das
mov
ret
lods
inc
and
mov
jo
ljmp
jmp
jbe
das
cmp
rorl
jb
pop
jnp
xor
ret
inc
pop
xor
push
pop
mov
xor
push
les
stc
sahf
popl
cmp
add
dec
jns
mov
xchg
aas
scas
repz
adc
cld
stos
cmp
cmp
mov
call
cmp
int3
mov
sbbb
xor
scas
ret
aam
lods
xor
call
sub
mov
adc
mov
mov
mov
xor
mov
mov
outsl
popf
sub
jne
pop
in
out
xor
lcall
std
cmp
add
xchg
mov
mov
cmp
scas
xchg
inc
push
testb
fimuls
mov
arpl
je
add
mov
jne
sub
addr16
in
insw
fs
xchg
mov
jecxz
dec
lods
add
ljmp
dec
and
adc
insl
pop
sbb
mov
sub
pop
std
sub
je
enter
insb
xchg
mov
mov
push
inc
icebp
insb
xor
movsl
xchg
mov
jo
or
mov
pushf
and
dec
and
jb
std
mov
adc
push
ss
push
cmp
jge
jae,pt
xchg
cli
call
fcoml
and
aaa
clc
shrb
movsb
add
mov
sbb
loopne
fs
cmpsl
inc
orl
add
dec
mov
cmp
sti
xor
adc
sbb
sbb
repnz
or
arpl
inc
in
add
stos
fdivr
push
in
rep
jle
mov
insb
push
movsb
jbe
hlt
xchg
mov
shlb
in
mov
cs
bound
pop
lock
or
fsubs
cs
loop
hlt
testl
loop
xchg
dec
mov
xor
mov
fisttpll
mov
or
push
sub
push
or
aas
fcom
loope
rcll
pop
sub
jmp
add
mov
lret
inc
sbb
ljmp
pop
push
add
jno
mov
aas
pop
xor
inc
jbe
sub
pop
cmp
pause
shlb
or
or
or
jmp
ret
pop
jl
mov
leave
xchg
mov
rcrb
je
std
sbb
bnd
lock
shll
inc
es
outsb
pop
add
es
fnstcw
and
add
xchg
and
clc
mov
mov
pop
sahf
jge
pop
jecxz
lods
mov
test
loopne
test
adc
cmp
and
jb
scas
in
aaa
mov
pop
push
sbb
sarb
mov
into
inc
mov
pop
fxch
add
xor
test
xchg
push
cmpsl
lcall
rolb
dec
ss
roll
mov
arpl
fldt
push
mov
lret
jmp
or
xchg
decb
in
mov
push
out
adc
popf
pop
push
mov
mov
pop
inc
imul
xchg
and
dec
pop
lods
mov
cmp
aad
test
ret
push
add
mov
or
push
sub
mov
jp
stos
dec
push
imul
inc
hlt
sti
mov
dec
lea
test
ret
insb
out
mov
mov
push
call
sub
cmp
jge
imul
sub
xchg
ret
mov
xchg
repnz
inc
stc
xor
xor
or
aas
mov
xlat
test
hlt
pop
mov
std
in
pop
cmc
decb
pop
adc
scas
loope
lods
mov
sub
lods
jp
outsb
cli
fcompl
das
push
outsb
ret
jb
imul
addr16
pop
jmp
jns
inc
in
mov
cwtl
cld
outsb
xchg
stos
dec
fs
fsubl
adc
mov
mov
pop
lcall
push
je
jg
xchg
push
jp
test
cmpsb
or
mov
enter
jns
cld
rcrl
mov
mov
shll
dec
insb
jnp
cmp
sbb
nop
add
or
pop
pop
mov
jo
xchg
add
lock
arpl
jge
and
data16
js
aas
imul
mov
mov
or
mov
test
insl
and
push
xchg
push
fbstp
xchg
enter
enter
inc
out
call
jecxz
out
mov
or
push
or
gs
test
jb
sub
in
fsub
mov
pop
mov
jmp
push
pop
push
jnp
mov
mov
mov
shr
cmp
cli
ds
fisttps
shrl
xchg
jg
push
iret
sti
out
push
les
mov
test
mov
addr16
stc
push
push
or
outsb
movsb
jno
add
imul
mov
call
cmc
fisttpl
mov
mov
inc
lods
xor
mov
cltd
inc
rcll
xlat
scas
repz
out
in
dec
test
add
loope
cltd
aam
les
mov
jecxz
ret
ret
pop
imul
jle
xchg
mov
jo
jp
jl
sbb
es
dec
sti
stc
enter
xchg
cld
inc
in
jle
sbb
sbb
xchg
and
push
mov
pop
ror
push
andl
les
cmp
sub
leave
fistl
mov
add
mov
jno
stc
pusha
scas
lret
mov
daa
movsl
ds
outsb
mov
xchg
adc
jo
dec
sahf
xchg
aad
cmp
sub
inc
push
and
jne
dec
cwtl
mov
inc
mov
cmp
xor
pusha
jns
sub
mov
mov
mov
mov
xor
xor
jle
and
mov
push
aaa
sbb
or
mov
loopne
repz
lea
gs
xor
ret
inc
mov
xor
fdiv
inc
fucomip
adc
imull
pop
scas
repz
jbe
sbb
add
xor
adc
and
pop
std
fsubl
das
or
and
mov
cvtps2pd
xchg
je
and
ds
adc
movsl
in
jmp
les
sbb
frstor
aam
jne
jbe
das
scas
and
xchg
mov
xchg
sub
lock
mov
push
jl
pop
adc
inc
ret
lods
xchg
adc
fwait
mov
xchg
push
pop
fcoml
or
inc
mov
mov
in
pop
pop
loope
mov
jp
mov
ficompl
inc
ret
push
mov
jb
loop
ficomps
stc
pop
sub
pop
ret
arpl
jno
sti
mov
aam
xchg
dec
push
inc
xchg
mov
cmp
xlat
sbb
stos
pop
mov
xor
pop
xor
mov
xchg
sarl
out
push
std
fisttpl
mov
pop
sub
fdivs
das
cmp
jae
dec
pop
pop
sub
and
arpl
mov
inc
dec
xchg
push
xchg
fwait
jmp
or
enter
int3
out
hlt
gs
sti
pop
jns
shll
jge
xchg
mov
out
sub
xchg
out
iret
les
dec
mov
pushf
dec
sbb
fadd
subl
out
jae
orb
shl
es
mov
mov
adc
mov
pop
testl
mov
inc
add
push
jmp
scas
movsb
mov
inc
and
dec
loopne
pop
out
xchg
mov
inc
sti
pop
cmpb
jne
or
jle
add
mov
loopne
psrlw
sqrtps
adc
mov
mov
clc
mov
mov
pop
ss
xchg
jns
sbb
lods
add
mov
inc
jbe
sahf
or
push
add
aas
or
xchg
xchg
jns
stos
aad
inc
sbb
mov
inc
in
mov
mov
push
push
sub
pop
ss
addr16
mov
lods
clc
push
shll
lret
das
in
xor
lea
out
lcall
testl
xchg
inc
mov
fiaddl
dec
and
dec
jno
fcoms
fstl
lea
into
or
lods
mov
adc
sarb
pop
push
ss
xor
cltd
sbb
mov
xor
scas
ret
ja
xchg
jnp
add
jbe
mov
testb
incb
repnz
fs
aas
or
bound
cmp
call
sarl
lds
gs
ret
xchg
mov
sub
mov
or
sbb
xor
inc
ljmp
loope
add
lea
cmp
test
xchg
jl
inc
popf
scas
outsb
test
mov
and
inc
call
fs
mov
jmp
sti
test
mov
into
adc
dec
shrl
add
and
push
js
roll
mov
dec
push
xchg
fsubrs
das
jecxz
les
push
pop
daa
leave
inc
mov
push
cmpsl
mov
enterw
cwtl
andl
imul
gs
lret
pop
rcl
cmpsb
mov
sub
ss
jl
push
jne
in
pop
icebp
mov
pop
push
daa
movw
xlat
inc
insb
mov
xchg
jmp
out
jecxz
rolb
shl
inc
mov
imul
or
fidivrs
pop
xchg
or
adc
lret
into
adc
sub
xor
in
test
mov
mov
and
and
insl
mov
dec
xchg
arpl
pusha
push
and
test
pop
jno
test
cmp
and
clc
sbb
sub
les
mov
movsl
addl
aad
lods
popa
pop
ja
cli
xchg
push
ret
push
out
cltd
or
cmp
jne
movb
and
cmpb
dec
shr
xlat
aad
and
scas
add
out
jle
inc
mov
rorb
jl
fwait
and
cmp
cmc
jno
loopne
shl
dec
xor
xor
dec
scas
data16
xlat
add
adc
pop
add
mov
cmp
adc
mov
mov
rcll
jle
test
fwait
nop
fwait
les
adc
jae
lods
dec
ja
inc
out
rolb
int3
mov
in
insb
or
mov
xor
shll
xchg
and
pop
or
xchg
arpl
adc
insl
mov
fdiv
xchg
rcll
insl
daa
shlb
jns
pop
mov
push
stos
xlat
out
cmp
mov
rol
mov
cmc
cmpsb
shlb
sbb
jbe
push
sbb
adc
adc
pop
out
popa
jle
shr
dec
cmp
movsb
and
call
test
sbb
ss
ret
fs
xor
sub
cmp
add
sub
daa
data16
out
xor
int
mov
push
hlt
in
xchg
ficoms
cmpsb
in
and
cmp
jle
ss
inc
std
dec
in
movsl
add
repnz
repnz
mov
mov
lods
push
pushf
fidivrl
mov
dec
pusha
push
gs
mov
jmp
sub
inc
cmp
xor
data16
xchg
mov
xor
add
rolb
pop
ret
push
pop
add
push
int3
cmp
nop
pop
rol
das
inc
push
jl
lock
fstpl
jge
jmp
lds
into
dec
sar
dec
mov
rolb
or
ljmp
enterw
inc
cs
pop
test
and
jo
push
mov
or
mov
bound
sbb
out
sahf
jl
sbb
fsub
push
gs
ja
sub
imul
xchg
and
sbb
pop
dec
hlt
ss
mov
jp
and
pop
decl
pop
rclb
mov
jno
xor
jns
xchg
fnstsw
adc
xor
ja,pn
lret
in
jge
jg
pop
pop
dec
sar
mov
shl
icebp
mov
sub
in
icebp
lock
out
push
adc
adc
jmp
icebp
mov
adc
xor
ret
dec
jl
xor
nop
xchg
push
mov
adc
data16
push
lods
ss
adc
sub
pop
insb
add
sub
lods
fadds
sbbb
sub
cmpb
add
or
xor
xchg
and
fisubrs
mov
jb
xchg
enter
adc
xchg
icebp
cmp
push
xor
imul
cmp
push
popf
sbb
jb
adc
and
sub
mov
jo
aam
addl
scas
in
and
inc
lods
dec
rcrb
add
fdivs
cmc
fildl
sbb
pop
popf
mov
pop
jmp
pop
fdiv
inc
daa
xor
push
lahf
flds
nop
fs
fidivl
adc
mov
pushf
jle
shlb
mov
icebp
jp
adc
outsb
jmp
adcb
pop
cld
and
pop
lea
sbb
popf
jae
xchg
xor
push
andb
jle
es
in
test
adc
js
imul
adc
data16
test
addr16
andb
lcall
sub
mov
das
xchg
addl
or
je
out
mov
jp
inc
out
push
xchg
pop
incb
push
push
inc
xchg
popa
jp
add
ret
jge
daa
pusha
sbb
jg
insb
insb
cmpsl
pop
cli
sbb
imul
loopne
xchg
and
jg
aaa
ds
push
inc
mov
adc
fdivrp
into
pop
fstpt
cmp
mov
push
sbb
mov
and
les
and
pop
rcrl
jge
mov
xor
ss
adc
sbb
pslld
lods
push
mov
out
pop
cmp
clc
adc
jmp
mov
leave
add
add
sahf
je
ja
pop
lahf
sbb
les
pop
sbb
arpl
ja
pop
cli
push
cmpsb
mov
out
jo
mov
mov
ja
in
sub
loopne
cmp
adc
adc
xchg
jo
sbb
clc
jns
add
sahf
jne
pusha
in
ljmp
cmp
xor
fimuls
cltd
in
xchg
cltd
rol
xor
aas
dec
add
cmpsb
lods
sub
loop
jle
inc
sub
xor
cmp
fdivs
inc
lret
adc
loope
mov
sbb
clc
pusha
add
or
or
psubq
loop
add
mov
daa
jae
mov
aad
sbb
or
mov
xchg
xchg
sub
mov
mov
push
aas
xor
ja
pop
mov
mov
testl
push
iret
push
iret
lods
ds
mov
lar
mov
xchg
test
scas
push
xor
xchg
ds
aas
leave
fstpt
aaa
jmp
add
mov
out
imul
out
sti
bound
lret
sbb
pusha
mov
scas
ja
jnp
repz
ficoms
fisttpl
int
sti
test
shll
jge
dec
ret
mov
scas
push
or
stos
push
push
mov
scas
into
out
out
mov
fadd
push
pop
ret
sbb
mov
push
sbb
mov
push
add
pop
test
out
outsb
or
cmpsb
dec
nop
clc
sbb
stos
add
xor
imul
dec
inc
clc
fcomps
add
repz
fnstcw
push
imul
faddl
jl
sbb
jnp
daa
test
jecxz
and
xchg
stos
xchg
out
fldz
insb
lret
mov
pop
fsubrs
fstpl
jecxz
xchg
inc
mov
je
mov
pop
pop
iret
sbb
dec
mov
add
fmull
xchg
mov
inc
xor
in
call
mov
ret
mov
dec
in
jl
add
sub
repz
fnstsw
imul
cmpsl
into
add
jno
push
cmp
daa
dec
xor
mov
insb
scas
dec
fidivl
dec
xlat
cwtl
mov
in
mov
imull
and
int3
insb
inc
data16
mov
pop
xchg
xchg
xor
push
xor
add
sbb
lret
test
arpl
cmp
or
mov
pop
xchg
outsl
popf
xchg
jns
movsl
ret
out
in
and
out
outsl
cmp
std
cmp
add
sbb
sbb
mov
jno
aas
mov
out
mov
or
ret
pop
sbb
xchg
sahf
gs
mov
jo
cwtl
aas
stc
xor
pop
and
movsl
jp
imul
test
xchg
mov
mov
cmp
cmpl
mov
dec
out
movsl
ss
out
or
mov
popa
jno
fnstcw
jb
mov
mov
lahf
fiaddl
inc
sysenter
pop
pop
je
or
pop
lea
cmp
negb
or
gs
inc
push
js
adcb
inc
loop
lahf
rcll
jge
popf
xor
out
mov
add
jo
test
out
loopne
inc
jbe
cmp
jbe
fimull
fst
popf
mov
xchg
in
add
inc
data16
in
pop
fidivl
xor
mov
pop
cltd
sub
mov
cmpsb
repz
nop
outsl
cmp
jmp
adc
sub
out
js
shlb
pop
in
sbb
out
dec
stc
hlt
xor
lock
xlat
cmpsl
push
jecxz
out
jo
inc
sbb
negl
fs
nop
pop
cmp
stc
pop
or
pop
sbb
ficompl
inc
fistl
inc
imul
cmp
fwait
pop
xchg
jbe
push
push
mov
push
mov
dec
xchg
sbb
push
jmp
rcll
mov
and
add
jle
std
arpl
pop
mov
xor
into
mov
jg
xchg
and
mov
mov
mov
into
xor
dec
js
xlat
add
stos
jp
into
pop
sub
jns
xchg
cs
dec
xor
mov
sbb
mov
cmpb
dec
test
mov
sbb
insb
fiaddl
lret
mov
jo
out
lahf
mov
and
les
icebp
lock
dec
cmp
xor
push
jns
xchg
aam
jb
int3
sbb
push
sub
insb
jecxz
cs
xchg
addb
jo
mov
jne
cmpsl
sbb
fsubp
cmp
test
pushl
or
pop
xchg
jo
aam
lahf
loope
xchg
sahf
cmp
mov
out
outsb
out
sub
jl
mov
lret
pushf
test
ja
ljmp
gs
dec
sbb
mov
popf
jb
out
mov
loopne
push
popa
test
in
cmp
xchg
jmp
fs
cmp
or
and
cmpsb
push
sub
mov
inc
insb
sub
adc
sti
cmp
mov
fnstsw
mov
lret
add
pop
sbb
out
sub
pop
push
std
enter
push
mov
or
dec
pop
mov
arpl
sbb
in
jb
xchg
cs
je
dec
into
and
pusha
sarb
clc
aam
mov
or
cmp
aas
jp
stos
stos
scas
outsl
mov
dec
scas
clc
cmpsb
ret
sub
insb
rcrl
sbb
js
mov
popa
mov
sub
inc
sbb
and
sub
insb
jecxz
and
outsb
xchg
sti
popf
xchg
xchg
jmp
leave
pop
inc
mov
in
xchg
ffree
arpl
mov
sbb
nop
cmp
enter
fwait
pop
into
pusha
aaa
cltd
out
push
or
popf
aas
xor
or
jge
add
mov
mov
pop
jbe
pop
and
xor
mov
sub
or
push
int
jnp
outsb
aad
scas
dec
xchg
mov
test
adc
iret
outsb
mov
insl
mov
enter
mov
shlb
rclb
sti
add
xlat
xchg
fildl
jp
sub
daa
into
call
sub
jl
cmp
popa
sahf
pop
xor
and
mov
mov
cmc
mov
outsl
lods
fdivrs
sbb
and
mov
testb
imul
jecxz
xor
movsl
or
mov
dec
sahf
insl
test
and
pop
xchg
pop
push
movsb
and
jg
mov
popa
das
faddp
mov
xchg
pop
test
adc
cmpb
cmp
cs
daa
outsb
dec
cmp
inc
sbb
inc
xor
fdivs
jnp
jl
or
lods
fucomp
popa
ret
add
sub
movsb
dec
mov
jmp
popf
test
pushf
xchg
inc
jmp
push
movsl
repnz
cmpsb
jb
pusha
ja
push
adc
mov
daa
push
mov
inc
inc
or
dec
or
leave
int
xchg
xor
push
sub
aam
mov
pushf
mov
frstor
add
stos
arpl
mov
ucomiss
or
into
add
loop
je
sar
aaa
shll
loopne
push
das
gs
or
stos
out
aad
xchg
sub
xor
fcompl
pop
jo
pop
fwait
aas
test
cmp
shrb
inc
and
pop
stos
fcomp
imull
or
cmp
cwtl
cmp
jp
jno
ret
or
jns
mov
dec
mov
enter
mov
mov
clc
sub
js
scas
popf
push
fildl
lds
jno
cmp
adc
jne
mov
xchg
scas
push
stos
es
pop
int
test
pop
mov
jecxz
mov
add
stc
cmp
mov
xchg
mov
push
popf
sbbb
sbb
pop
sub
xor
sbb
fistps
jge
call
jbe
or
mov
das
fidivrs
mov
shll
pop
xchg
inc
outsb
les
push
sbb
leave
rorb
xchg
inc
mov
lods
hlt
xor
sub
pop
pusha
xor
xchg
cmpl
inc
jg
loop
lret
out
ljmp
sahf
sub
fcomps
bt
js
jge
in
jae
pop
mov
icebp
push
inc
sbb
dec
mov
jne
arpl
repz
repnz
iret
mov
pmuludq
add
pop
or
roll
repz
push
mov
mov
xor
dec
bound
cltd
lret
sub
mov
jecxz
cmc
jno
mov
lret
imul
addr16
aad
mov
insb
leave
inc
jl
mov
repz
xchg
out
inc
lret
fistpll
and
sub
scas
sub
push
ja
cmp
test
pop
rol
mov
rolb
sbb
loopne
sahf
mov
mov
push
addr16
lds
sub
pop
inc
cld
cltd
add
shll
shrl
pop
xor
jnp
xchg
ret
loopne
arpl
ja
daa
in
jae
mov
imul
mov
or
aam
inc
je
or
mov
rcll
xor
dec
sub
lret
ja
dec
outsb
cmp
sub
mov
inc
xchg
cs
mov
xchg
lods
jl
add
shlb
rcll
add
ja
adc
pop
nop
sub
and
inc
inc
fs
mov
movsb
inc
push
in
pop
push
insb
adcb
push
cld
mov
das
push
gs
xlat
out
scas
mov
fstpl
out
into
jb
cs
fisttpl
xchg
push
cmp
fnstenv
mov
imul
jl
lret
std
sahf
sbb
enter
roll
push
in
in
sub
lods
pusha
mov
mov
daa
sub
push
add
fmuls
je
jne
pusha
jns
push
popa
dec
add
xchg
cld
jp
jge
cmp
lea
push
outsl
rcr
adc
jecxz
jmp
push
shrl
mov
negl
popa
jns
pop
lock
jo
or
rol
testb
out
mov
mov
nop
ror
lcall
jl
mov
inc
xor
rcll
js
sahf
je
or
fcoms
and
push
test
inc
out
dec
sub
lods
xor
mov
cmp
push
cmp
add
fnstcw
testl
xor
lods
or
dec
adc
jmp
rolb
movsb
loopne
imul
pop
std
mov
ss
xchg
in
aas
pop
inc
fwait
mov
push
adc
mov
stos
inc
cmc
rcrl
ljmp
fldcw
cmp
scas
les
fwait
cmp
movb
stc
sarb
je
jecxz
add
dec
or
sahf
in
loope
add
fnstsw
ds
lds
xor
repz
mov
xchg
push
xchg
ds
xchg
adc
sub
lret
stc
sub
lods
mov
je
mov
xor
fdiv
mov
mov
dec
rorl
mov
sti
enter
sub
cmpsl
out
adcl
jbe
icebp
out
sub
popf
adc
lods
into
popf
loop
outsb
imul
pop
inc
mov
lret
jecxz
int
aas
cli
repnz
daa
int
sahf
aaa
ret
adc
icebp
mov
add
into
xor
inc
in
push
mov
pop
mov
je
xchg
adc
mov
push
mov
pop
xchg
int3
mov
mov
inc
xor
add
push
mov
pop
inc
and
loop
xor
push
decl
test
into
and
fs
mov
dec
div
fwait
or
rcrl
divb
es
pop
test
cwtl
pop
jne
add
xlat
outsl
xchg
scas
ds
cmp
or
mov
and
sub
cmp
insl
mov
xor
xchg
jp
and
inc
sbb
or
cmpsl
out
iret
addl
jb
jbe
fcoml
lods
inc
mov
lods
nop
push
sarl
or
or
sbb
rolb
sub
xor
adc
sbb
mov
lret
bound
xor
fcomp
sub
mov
and
mov
fcompl
imul
iret
or
popa
mov
mov
inc
cmp
cmp
mov
ja
push
pop
dec
push
jge
mov
iret
je
repz
adc
add
pop
cmpsb
dec
fstps
push
movsb
inc
dec
les
sahf
roll
mov
mov
dec
and
flds
dec
out
jne
mov
add
lea
sbb
push
push
xchg
mov
aam
in
aad
push
add
scas
insl
mov
adc
std
lcall
add
fstpt
fidivrl
leave
test
pop
fs
push
rclb
sub
ds
inc
xor
inc
mov
push
in
jbe
test
lret
sub
insl
stc
je
inc
repz
call
fisttps
adc
mov
bswap
addr16
mov
mov
push
sbb
movsb
popf
xchg
or
xor
arpl
push
dec
lds
loop
mov
sub
test
movsl
dec
inc
ljmp
iret
inc
push
xchg
test
je
stos
mov
aaa
add
lret
ja
nop
and
sbb
movsl
clc
sub
pop
movsl
repnz
adc
xchg
mov
fisubl
or
push
cmp
rcrb
mov
movsl
inc
push
push
pop
dec
sbb
or
sbb
stos
cmpsl
fisttpll
div
adc
push
gs
jno
xchg
add
js
dec
add
ret
dec
push
push
aad
pop
stc
dec
stc
adc
push
sub
jmp
mov
call
aad
mov
jmp
xchg
and
push
hlt
mov
roll
std
stos
xor
dec
jg
or
xor
cmp
mov
rclb
mov
jmp
jg
add
adc
imul
jo
mov
mov
lods
les
in
test
lods
pop
orb
std
gs
ja
sbb
xor
or
lds
dec
mov
ljmp
xchg
push
mov
movsb
test
insb
in
outsb
into
jbe
ret
cmp
sbb
and
lret
xchg
adc
dec
test
add
sub
movsl
ja
cmc
mov
and
or
dec
jnp
or
clc
mov
dec
mov
leave
mov
mov
jmp
incl
ficompl
aaa
das
clc
pop
mov
xor
push
fs
xchg
push
cmp
jne
sbb
shr
pusha
inc
inc
jo
xor
mov
or
xor
inc
push
fimull
xchg
je
sub
sub
mov
sahf
or
sti
mov
mov
sbb
js
bound
cwtl
adc
mov
jmp
xchg
inc
mov
test
stos
call
fs
fldenv
mov
and
test
mov
out
mov
scas
mov
mov
clc
scas
loopne
sub
lds
sbb
dec
jle
mov
cmp
mov
push
sahf
out
add
ds
mov
and
cmp
popf
pusha
sti
mov
mov
xchg
sbb
xchg
xchg
outsl
stc
test
jp
int
mov
dec
jno
repz
mov
cmp
xchg
push
push
push
dec
fucom
lret
sbb
daa
jg
aas
and
lods
scas
mov
in
xchg
ss
push
sub
xchg
add
es
mov
gs
adc
push
in
add
jno
sbb
sbb
inc
sub
fdivs
jo
es
stos
dec
fneni(8087
pop
shrb
movsl
add
out
mov
aad
inc
in
pop
testl
jbe
push
sbb
in
mov
inc
scas
movsb
xchg
lea
roll
or
push
stos
cmp
pusha
scas
jo
insl
add
add
adc
repnz
aaa
pop
test
notl
hlt
fsubl
shrb
lds
or
pusha
adcl
test
ds
dec
add
test
fists
xchg
imulb
out
pop
nop
loop
sbb
int
scas
push
jecxz
sub
jle
pop
sti
add
clc
inc
pop
pop
or
add
jnp
test
ss
in
pop
inc
jae
clc
bound
dec
pop
and
dec
and
dec
sbb
add
and
add
cmp
sub
xchg
xchg
fsubrs
jge
fdiv
pop
cmp
inc
mov
sub
outsb
sti
xchg
out
movsb
les
mov
loop
scas
mov
or
lea
sub
mov
and
add
test
adc
das
call
fwait
in
cmp
sti
mov
push
jle
gs
jmp
or
sbb
insl
shl
jecxz
nop
insb
pop
cli
add
add
adc
and
pop
dec
push
adc
shlb
daa
push
je
fimull
fcoms
mov
xor
divl
aad
jae
sahf
xchg
inc
adc
inc
loopne
push
jl
xor
jge
test
mov
movsb
sub
fdivr
cmc
je
pop
fildll
inc
and
mov
dec
lods
mov
ret
mov
mov
negb
xchg
int
call
repnz
xchg
fdivrl
pop
push
xor
mov
fisubs
add
mov
lods
mov
imul
or
jbe
cmp
jmp
xor
arpl
adc
fdivrl
out
idivl
adc
lahf
mov
test
mov
cmpsl
rclb
cmp
in
sbb
dec
insl
in
fwait
jmp
gs
and
lods
mov
nop
jo
mov
push
and
cld
inc
cmp
idivl
int
mov
push
pushf
aad
ficomps
jmp
sbb
push
mov
mov
jbe
xor
iret
ret
popf
pop
push
cmpsl
cld
enter
lret
jecxz
iret
inc
out
or
adc
rol
mov
push
pop
es
mov
movsl
pop
ds
aad
test
or
mov
adc
int3
das
aam
or
das
repnz
jp
jmp
in
lcall
fisubrl
add
push
sbb
pop
out
push
xor
daa
hlt
push
test
and
mov
and
inc
xor
or
jae
ret
ljmp
sbb
jbe
sbb
repnz
jle
test
mov
add
rcr
push
ficomps
mov
mov
pop
pop
in
mov
cwtl
andb
scas
cmp
mov
imul
jle
ss
push
cmp
adc
int3
sub
jecxz,pt
add
sub
mulb
inc
cmp
cli
add
or
ror
or
mov
out
mov
xor
xchg
jno
enter
push
jae
in
push
cmc
jb
adc
inc
sub
imul
adc
jnp
mov
mov
pop
xor
lods
mov
xchg
push
lret
in
sbb
sbb
jg
cmp
dec
outsb
out
sub
mov
ret
xchg
insl
lahf
iret
mov
jno
add
lock
mov
mov
add
fmuls
into
mov
cmp
sub
pop
push
inc
mov
mov
gs
or
inc
push
shrb
xlat
scas
pslld
xchg
call
leave
lret
imull
and
push
cld
lds
sahf
inc
outsw
adc
das
jnp
mov
jmp
lock
jg
pop
ljmp
jbe
add
mov
xor
fmull
insl
test
insl
imull
adc
aaa
dec
and
not
in
out
sbbb
xor
xor
xchg
loopne
mov
mov
mov
mov
push
nop
stc
cmp
mov
sub
movsb
push
test
xchg
ds
pop
das
add
cmp
cmc
mov
mov
add
add
xchg
or
in
jb
lods
xchg
pop
push
les
add
push
push
push
mov
arpl
aad
dec
sbb
cmc
mov
mov
lea
xor
cld
bound
dec
insb
es
test
scas
jle
cmp
or
movsl
jg
xchg
mov
das
xchg
inc
lds
test
sub
sbbl
clc
jbe
lcall
les
shr
mov
out
mov
push
pusha
pushf
sub
dec
cs
dec
loopne
mov
test
cmp
pop
push
aad
mov
sub
sub
pop
cmc
in
dec
xchg
lahf
sbb
xor
inc
push
xchg
out
pop
xchg
inc
add
stc
xor
jnp
inc
jne
lret
mov
pop
loop
aaa
sbb
pop
pop
push
les
push
fnop
stos
repz
fs
fstpl
addr16
cmc
xchg
mov
xchg
pusha
daa
subl
cli
adc
nop
push
inc
cmp
sub
push
mov
cmpsl
iret
add
cli
fbstp
mov
xchg
and
inc
test
and
pushf
xor
push
sbb
pop
fwait
inc
stos
aad
mov
shlb
dec
pop
loop
xor
mov
pop
dec
xchg
mov
adc
adc
inc
into
and
mov
inc
fisubl
ds
inc
mov
cmp
rclb
inc
call
mov
shlb
inc
jge
pop
insl
shl
jmp
shr
popa
mov
sti
pop
outsb
stos
mov
out
jnp
sub
sbb
and
int3
movsbl
cli
push
mov
shll
ret
dec
pop
mov
lahf
lea
mov
into
cmp
in
mov
mov
fsts
aam
cmc
sbb
movsl
fdivrp
popa
cmpsb
jae
mov
inc
ret
loope
dec
pop
sbb
mov
arpl
out
ret
and
out
push
cmpsl
push
and
je
int
mov
jg
mov
repnz
xchg
jle
rcll
aaa
ret
push
sbb
out
outsl
cli
test
and
daa
xchg
pop
push
and
int
ja
fidivl
xchg
sub
mov
sbb
loope
cwtl
sub
ds
cmp
jae
lahf
test
jg
mov
pop
ja
cwtl
mov
dec
cmc
jae
inc
js
mov
stos
cmc
lods
out
sbb
adcb
push
xor
adc
adc
leave
jmp
jg
sbb
out
and
jmp
shlb
enter
mov
mov
push
outsb
add
cld
jns
jecxz
loope
gs
fiadds
push
jbe
popf
jecxz
and
lods
pop
mov
mov
sarl
cmp
xchg
nop
pop
cli
inc
out
mov
es
mov
jmp
inc
test
xchg
cld
rcl
ds
push
mov
inc
inc
jns
push
jno
icebp
in
xchg
inc
iret
or
pusha
je
sarb
xchg
fdivr
adc
pop
sub
mov
fnstcw
roll
imul
call
inc
push
cmp
jae
lock
jp
aas
sbbl
jge
xchg
mov
and
aas
pop
aam
nop
push
sbb
jg
jns
push
mov
test
pushf
jle
ret
jno
xor
aaa
ret
xor
aaa
mov
pop
leave
or
ljmp
and
dec
mov
mov
xchg
divb
cs
add
add
mov
clc
lret
mov
jl
shll
cmp
mov
jo
xor
xorb
out
sbb
inc
repz
mov
push
fmull
insl
loope
fldenv
js
les
jmp
mov
pushf
jecxz
data16
sbb
pop
dec
add
fsubs
in
loope
xor
out
jmp
mov
std
negb
stos
call
cli
es
shrl
dec
rorl
je
hlt
mov
cmp
pop
mov
fnsave
fcomp
mov
iret
sbb
imul
xor
mov
sub
clc
test
fnstcw
sub
lcall
push
jns
loope
mov
jno
jno
xchg
mov
sbb
push
bound
xchg
inc
dec
out
cwtl
mov
pop
jg,pt
in
xor
fisubs
ret
jae
int3
stos
cmp
std
fcmovne
fistpl
aaa
pop
add
addr16
stos
icebp
and
sbb
mov
lods
icebp
cmp
sbb
mov
pop
js
jo
push
dec
into
push
sarb
jmp
sbb
sbb
inc
ficompl
jnp
pushl
aam
rcll
movsb
push
inc
mov
lahf
cmp
jmp
cli
aad
call
pusha
je
stc
adc
loope
xchg
inc
mov
jmp
stos
and
outsl
fwait
mov
push
pop
pop
and
push
inc
rorb
stos
cmpsl
in
mov
pop
out
pop
ljmp
push
cmp
fbld
xor
jo
outsl
lock
ror
cs
xor
mov
xchg
adc
add
aaa
je
push
gs
cmp
mov
sub
rorb
or
movsl
xchg
mov
fldt
mov
imul
fcmovne
push
cmpl
ret
test
lea
stos
ja
push
mov
subl
mov
pop
pop
popa
add
or
xchg
scas
repz
pop
loope
push
fmuls
and
push
adc
sbb
and
lcall
jg
lock
test
imulb
cli
xchg
iret
xchg
inc
cltd
lcall
inc
pusha
aas
insl
es
inc
cmpsb
mov
outsb
mov
mov
mov
sub
mov
pop
repnz
mov
call
outsl
xor
js
push
sub
or
int
imul
inc
adc
inc
int3
rolb
cli
xchg
pop
into
ficoms
enter
bound
pop
imul
lret
pushf
adc
sbb
xor
jg
andl
test
cli
xor
aas
repz
sbb
imul
fs
pushf
cltd
out
sti
inc
adc
sub
sub
and
push
xor
cmpsb
jae
lahf
add
cs
rorl
lods
cli
sub
sub
xchg
jecxz
xlat
xor
jecxz
adcb
sub
push
inc
insl
mov
dec
cmpsb
movsl
loopne
gs
enter
sahf
in
dec
push
repnz
pop
cmp
push
jp
dec
lock
add
push
sbb
aaa
scas
sbb
aad
aaa
mov
adc
sub
fdivrl
pop
aad
sbb
leave
xchg
sbb
aaa
jb
in
movsl
sbb
mov
data16
cs
inc
sbb
xchg
aam
scas
and
push
cmpsb
lret
push
or
xor
sarb
fcoms
mov
push
or
pusha
and
xor
mov
adcb
movlps
mov
das
cmpb
out
stos
xor
stos
lret
dec
mov
fidivl
mov
lcall
mov
mov
sub
testb
add
cmp
mov
ret
mov
outsb
lret
adc
std
out
or
cmp
mov
std
cli
adc
pop
test
sub
xchg
addr16
xchg
lods
lods
adc
fistl
aam
mov
nop
cmp
testb
fadd
xorb
and
jle
or
and
lret
js
cld
cmpsl
xor
lret
lret
sbb
cmp
fsubr
inc
sbb
daa
jle
jb
mov
sub
jo
daa
imul
icebp
jle
testl
sub
iret
fwait
popa
mov
sar
and
jecxz
subb
stc
inc
mov
popa
ds
mov
xor
jp
jae
sbb
das
rol
lret
cwtl
fwait
dec
jne
rcl
test
cmpsb
test
dec
push
fsts
push
sub
dec
orb
xchg
xor
push
jp
lret
pop
mov
fisubrs
adc
fs
pop
xor
xchg
add
mov
scas
jle
and
ret
sahf
inc
and
pop
inc
movsl
cld
add
dec
mov
add
in
out
sbb
adc
bound
mov
ffreep
push
lds
xchg
pop
xchg
lods
lds
loop
or
sti
push
icebp
leave
out
jge
and
jmp
push
adcl
xor
fdivrl
jecxz
clc
incl
mov
sbb
adc
mov
push
subb
or
jecxz
jmp
mov
fldt
xor
cmc
jle
lcall
cwtl
xchg
push
jae
das
stos
filds
xchg
or
repnz
add
inc
mov
inc
lods
pop
in
jo
shrb
mov
mov
or
adc
lea
sub
jno
inc
push
jb
rcrl
xor
push
mov
imul
ljmp
aas
sbb
pop
into
xchg
cmc
bound
push
test
jle
dec
mov
adc
inc
arpl
movsl
popl
or
das
mov
imul
popa
sub
jg
sahf
add
lods
stos
idiv
mov
adc
imul
pop
sub
pop
sbb
lcall
orb
and
jno
fildll
sub
mov
test
sub
rcrl
mov
mov
adc
hlt
stc
push
mov
test
enter
and
int3
add
mov
add
leave
jne
cld
data16
jge
add
fldl
sbb
test
aaa
mov
or
loope
dec
jecxz
inc
mov
or
inc
imul
adc
push
stos
and
add
inc
repnz
dec
jb
add
cld
dec
mov
mov
int
call
xchg
popf
mov
cli
pop
push
faddl
push
bound
pop
dec
inc
lcall
rcll
movsb
fucomi
imul
dec
inc
out
mov
push
xor
mov
pushf
clc
rorl
push
dec
jbe
imul
adc
push
adc
dec
dec
adc
in
mov
push
inc
lcall
lds
mov
or
push
xchg
adc
enter
movsl
mov
cmpsb
adc
je
mov
ss
fsubl
xor
and
fisubl
mov
mov
push
js
pop
fisttpll
loope
and
add
sbb
pop
into
jp
icebp
jl
cltd
sbb
mov
push
inc
scas
jg
pop
xchg
cvtpi2ps
sbb
jo
loopne
insl
cmpsb
test
push
test
sbb
ljmp
cmp
iret
cld
or
leave
sbb
shlb
push
aam
clc
ret
ret
iret
cmp
jle
aam
pop
rcll
int3
rorl
clc
scas
pop
fstps
rol
xchg
mov
stos
in
cmp
mov
invd
stos
mov
mov
push
lods
push
xchg
sbb
xchg
dec
insb
and
adc
inc
mov
sub
aas
pop
aaa
sbb
and
cmpsb
sbb
aad
mov
or
movsl
adc
push
dec
std
jb
loop
in
mov
add
fs
loop
adc
std
out
clc
imul
hlt
data16
push
xchg
in
gs
pop
add
dec
shlb
xor
push
jl
pop
test
and
and
insb
xor
xor
jle
jnp
and
mov
pushf
dec
or
lret
pop
pop
stc
loop
enter
test
test
cwtl
pop
out
xchg
inc
mov
lret
mov
adc
jmp
std
inc
movsb
inc
arpl
pop
enter
outsl
in
mov
xchg
cmpsb
test
int
sbb
es
adc
mov
push
and
in
cmc
mov
daa
mov
nop
xchg
mov
cmp
push
mov
nop
insb
icebp
rclb
add
and
sarb
movsb
into
pop
inc
xor
and
fldl
clc
int
test
xor
or
in
in
add
fimull
xor
and
push
repz
ret
mov
test
fimuls
lahf
xchg
repnz
arpl
popf
aam
jno
into
pop
ret
int
lret
mov
in
jne
pop
mov
pushf
mov
fistpll
mov
and
mov
dec
or
push
pushf
push
mov
fnstcw
daa
lret
dec
fmulp
arpl
cmp
in
or
outsl
mov
fiadds
xorb
jg
fdivrs
push
ss
mov
dec
xchg
dec
and
testb
out
in
xchg
std
test
mov
xchg
in
sub
sub
xchg
push
xchg
mov
ss
sbb
pusha
fyl2x
pop
outsb
pop
test
aad
pusha
mov
enter
das
addr16
cmpsb
out
test
mov
sbb
or
jnp
mov
mov
mov
xchg
inc
out
mov
cmp
enter
pop
push
lcall
pushf
pop
inc
mov
int
outsb
aaa
lods
or
cmc
sbbb
push
mov
pushf
adc
push
push
adc
pop
ret
mov
adc
lret
pusha
fnstsw
movsl
sub
mov
dec
push
inc
sbb
and
jmp
mov
adc
outsl
into
pop
addr16
mov
stos
xor
mov
aaa
movb
popa
jbe
adc
push
movsl
sbb
in
push
mov
mov
adc
ret
jl
mov
inc
iret
aas
push
cwtl
mov
fstl
mov
dec
inc
xchg
xor
cld
int
push
dec
xor
xorb
scas
outsb
shlb
or
pop
or
xor
jle
push
outsb
adc
and
add
mov
or
push
stc
inc
les
fstpt
mov
mov
inc
and
jl
xchg
insl
mov
popa
mov
into
dec
inc
scas
adcl
lahf
xor
lea
movsb
dec
mov
scas
and
dec
mov
pop
and
mov
out
repz
fadds
mov
xor
or
pop
mov
push
adc
fsts
dec
jbe
lock
arpl
fistps
inc
and
iret
rolb
mov
jge
mov
cmc
out
sub
push
dec
fdivr
imul
mov
test
in
ds
hlt
mov
mov
jno
fldenv
xchg
cwtl
inc
inc
inc
adc
cld
cmp
cmp
enter
lock
pop
mov
clc
xor
xchg
stos
icebp
cld
adc
fldl
lret
add
subb
jg
jle
push
int3
or
inc
push
adc
mov
pop
jg
or
push
in
jo
wbinvd
dec
push
stc
test
mov
rorb
je
mov
jne
rorl
mov
ret
aad
lcall
hlt
xlat
lods
mov
inc
push
inc
sti
pop
sub
mov
and
insb
push
sub
fistpll
lea
outsl
xchg
jge
mov
movsl
inc
data16
aas
imul
cmp
mov
push
push
rol
mulb
adc
sbb
mov
pop
sar
orl
shll
mov
addl
adc
call
cmp
fisubrs
xchg
shl
mov
push
push
pop
jle
push
jae
xor
add
pop
leave
cmpsb
sarl
inc
jo
mov
stos
mov
lods
pop
inc
xlat
in
cmpsb
mov
call
jge
paddw
lods
jae
faddl
nop
aam
movl
outsl
mov
pop
cmp
ljmp
and
pop
dec
mov
sbb
and
mov
add
add
ja
test
mov
cltd
xor
cmpsb
cld
movsb
adc
push
cltd
xchg
adc
xor
mov
or
cli
push
jnp
sub
dec
lea
push
movsb
pop
jo
pop
pop
out
mov
add
sbbl
cwtl
jb
fiadds
jg
mov
mov
push
aam
cmp
xor
xchg
cmp
mov
sbb
cmp
es
fimuls
jbe
add
xchg
sti
push
test
adc
add
mov
in
aas
enter
ds
pushf
mov
std
push
inc
or
fstps
xor
adc
sbb
pushf
in
pop
or
loop
add
rolb
lcall
adc
std
pushf
jp
insb
jae
push
sub
cmp
inc
out
in
roll
call
loopne
xor
xchg
aam
fsubp
fnsave
dec
and
dec
or
inc
jge
sahf
mov
imul
call
pop
push
xchg
cltd
mov
mov
pop
pop
mov
in
xor
mov
pop
pop
das
lret
sub
addl
inc
cmpsl
and
mov
xchg
loop
int3
imul
dec
fiaddl
insb
adc
xor
shlb
stc
jnp
in
pushf
push
and
pop
cli
push
and
into
adc
xor
jge
and
pushf
mov
cmc
pop
es
lahf
nop
or
movsb
xchg
mov
mov
push
imul
dec
insl
adc
sti
mov
fsubr
cmp
xor
xorl
mov
xor
jno
xor
arpl
xorl
pop
das
fcoml
sub
leave
or
filds
lret
push
stos
xchg
in
ret
xor
fistpll
ljmp
jp
movsl
mov
push
mov
out
mov
mov
pop
aad
jbe
mov
cmp
sub
movsl
mov
stos
sbb
imul
imul
lgs
dec
mov
dec
jmp
lds
pop
adc
pusha
inc
outsl
jns
insl
insb
mov
leave
test
inc
cmpsl
inc
xchg
inc
stos
stos
shrl
call
mov
call
pop
iret
and
xchg
jecxz
fsubs
push
jg
jmp
mov
or
xchg
loopne
imul
scas
arpl
pop
pcmpeqd
adc
sbb
mov
jb
jb
xchg
fisttpl
scas
mov
lcall
fs
gs
push
mov
mov
ds
add
sarl
rcrb
mov
in
cmp
dec
mov
adc
fcomip
pop
xor
pinsrw
mov
ljmp
mov
dec
sbb
es
pop
stos
ret
loopne
fwait
xlat
cmp
xor
loope
xor
push
aam
bound
test
popa
mov
lea
xor
lahf
int
inc
neg
fstl
cmp
push
dec
mov
popa
in
stos
ficomps
out
jmp
movsl
movsb
popa
xchg
movsb
decb
cwtl
mov
xor
ljmp
les
jo
sub
div
mov
mov
cs
mov
idivb
cs
xchg
adcb
out
push
fsubs
jp
mov
jbe
xchg
fldcw
xlat
mov
xlat
dec
arpl
mov
arpl
dec
mov
test
and
lds
btc
dec
adc
and
xchg
add
inc
or
loop
repnz
jbe
push
add
adc
sub
mov
aam
jge
decb
cmp
mov
cmpsl
lahf
xchg
sahf
cmp
cmp
jae
sbb
fisubs
int
mov
jecxz
dec
les
repnz
mov
pop
frstor
mov
scas
js
sub
lahf
adc
aas
rorl
jne
or
into
mov
fs
pop
int
lods
bound
in
lods
pop
sbb
dec
ds
xchg
jle
fldcw
push
jns
int
cmp
inc
ja
subl
imul
push
dec
jbe
pop
hlt
xlat
shlb
iret
shll
cmp
int
scas
jb
sub
push
int3
incb
adc
pop
and
cltd
mov
dec
fs
popl
shlb
jno
adc
cmp
mov
pop
dec
mov
fbld
xor
mov
cmp
inc
lods
mov
xchg
stos
jl
mov
xor
inc
cmp
jp
adc
dec
ficoms
adc
clc
mov
inc
mov
and
outsl
mov
bound
mov
jns
cmc
xchg
inc
cli
hlt
add
leave
ficompl
xchg
push
jge
jge
jmp
pop
bswap
mov
inc
sub
xor
mov
jge
xchg
mov
fldz
loope
xor
or
pop
sbb
adc
popf
cmp
mov
mov
xchg
ljmp
cmp
push
lds
sub
in
xchg
jp
stos
mov
add
ret
cmpsb
xor
cmp
cmp
inc
dec
cltd
add
sbb
xchg
popf
das
jp
sarl
cmc
sahf
es
test
pop
shl
insl
lret
daa
jg
aam
mov
mov
jmp
jge
jns
push
jns
push
mov
and
adc
pop
adc
sub
xor
mov
cmc
dec
add
or
jmp
jle
aad
inc
or
jg
mov
sbb
dec
cmp
xchg
mov
sbb
dec
mov
jne
dec
dec
insl
aas
jle
push
cmp
xor
push
loopne
sbb
push
sbb
dec
inc
out
in
adc
and
jmp
js
pop
enter
leave
jl
leave
int3
xchg
cmp
sub
push
add
stc
pop
inc
bound
sti
and
sbb
cmp
or
ficompl
pop
loopne
bound
dec
xchg
push
xchg
fiadds
pushf
test
sti
les
out
rcll
aaa
pop
jle
xchg
xchg
cltd
aad
sub
jp
mov
mov
add
sti
pop
dec
pop
mov
icebp
mov
sbb
sbb
sub
xor
xchg
mov
sar
adc
ss
pop
jnp
xorl
gs
mov
leave
gs
out
es
cmpl
popa
ficompl
fadds
xor
cmp
add
pop
out
divb
in
shrl
int
lret
stos
jp
inc
mov
and
test
dec
mov
xchg
sbb
mov
sahf
xor
pop
mov
pop
push
inc
sbb
push
and
sbb
adc
or
rorl
mov
ss
int
out
push
test
stos
fsubp
jae
cmp
pop
adc
ds
lods
pop
outsb
test
and
daa
lcall
pushf
in
cwtl
cmpsb
adc
cmp
ficompl
adc
int3
insb
mov
dec
mov
popf
loop
push
inc
fwait
inc
stos
andb
or
enter
insb
out
xchg
ss
pop
inc
mov
cmp
out
adc
cmp
mov
or
repz
outsb
lret
pop
pop
xchg
xor
add
idivl
andb
ljmp
add
leave
cmp
inc
imul
push
sub
cs
lea
push
adc
inc
jnp
add
out
push
adc
push
js
cmp
shr
jle
push
adc
or
adc
mov
pop
xchg
fidivrs
push
sbb
jmp
jb
rorb
into
and
test
mov
jmp
sub
adc
mov
sub
mov
push
fwait
shlb
insl
int
popl
mov
andl
sbb
pop
nop
jo
in
lret
in
xor
sti
fistps
pop
mov
mov
cwtl
jbe
xchg
scas
jno
xor
imul
mov
and
gs
mov
in
inc
inc
cmpb
loope
push
mov
scas
mov
xchg
cmp
aas
lods
outsl
jnp
push
data16
push
jnp,pt
cltd
mov
sti
enter
mov
test
test
cmp
les
std
push
xor
or
sbb
xorb
xchg
or
mov
sub
enter
lret
sbb
andb
iret
ret
ffreep
mov
adc
cli
sub
movsl
xchg
scas
xor
rcr
test
lods
sahf
mov
aaa
jecxz
mov
mov
sbb
sbb
dec
iret
add
mov
adc
out
sub
jne
push
mov
cmpsl
stc
sbb
mov
js
xchg
shlb
vpunpckhqdq
xorb
inc
and
xlat
mov
xchg
aad
push
add
jnp
mov
push
inc
inc
aas
movsl
arpl
mov
lret
or
and
lcall
sbb
pop
adc
xchg
pop
cmp
add
adc
xchg
push
jecxz
cld
pop
in
aas
xor
add
stos
adc
fcoml
push
mov
dec
mov
jecxz
xor
fcoml
xor
pop
call
jbe
pop
or
pushf
ret
in
ss
in
in
fwait
pop
mov
and
mov
outsb
in
jl
sti
int
jne
dec
dec
or
rol
int
add
rorl
xor
ret
mov
dec
jp
lcall
mov
stos
clc
mov
cltd
pop
mov
push
jns
inc
inc
cmp
js
add
test
lret
sbb
pop
inc
notb
cwtl
adc
std
out
push
arpl
adc
mov
push
aaa
fcompl
pop
adc
mov
fwait
xchg
neg
repz
in
aas
xchg
mov
les
repz
ret
lea
xchg
dec
ss
mov
pop
mov
pop
sub
xor
xor
addr16
dec
jno
movsb
jecxz
xlat
cwtl
js
jge
int
test
xor
enter
cmp
jp
iret
push
fstpl
fcmove
dec
inc
loope
or
stc
popa
add
mov
out
jl
gs
test
xor
andb
div
jle
movsl
sbb
arpl
test
pop
pop
sub
adc
ds
jns
dec
ja
leave
mov
int3
mov
xor
stos
repnz
aam
lcall
xchg
adc
xchg
sahf
lods
sbb
xchg
in
xor
lar
pop
jl
fisubs
mov
rorl
cmp
scas
xor
cmp
push
inc
ds
ror
sbb
notl
mov
mov
sbb
dec
fwait
repz
stos
dec
addb
stos
cmp
sub
nop
decl
xchg
lret
sub
push
add
das
jle
mov
fcom
rcl
movsl
add
or
mov
ret
adc
jae
jo
lods
sub
shll
xor
pop
lods
mov
enter
sahf
or
sub
mov
or
and
push
mov
cs
cmpsl
mov
xchg
loop
or
ret
sub
jae
inc
cwtl
stc
cmp
mov
add
mov
cmp
pop
mov
negl
jnp
add
jne
stc
loop
decl
in
ret
std
and
mov
stc
or
cmpsl
sub
add
push
addr16
push
enter
mov
into
loopne
xor
outsl
xchg
imul
scas
cltd
out
leave
iret
mov
adc
adc
stos
pop
push
add
sahf
flds
popf
pushf
inc
insb
xchg
dec
xchg
shrb
cmp
sbb
xchg
add
pusha
push
and
sub
std
mov
arpl
es
xchg
arpl
flds
enter
insb
mov
cmpsb
mov
insl
test
daa
add
cmpsb
or
outsb
pushf
adc
mov
dec
repnz
cmp
jnp
mov
mov
xor
jbe
sbb
sub
lahf
adc
sbb
insl
fmull
pop
out
lods
mov
mov
nop
mov
addb
aam
lahf
mov
pop
je
fcoml
aad
bnd
jecxz
inc
movsb
fldt
jnp
pop
data16
mov
mov
jge
or
js
pushf
mov
mov
pop
dec
xor
sarb
pop
mov
aas
cmp
adc
mov
imul
into
cmp
fwait
divl
sahf
inc
or
ja
cli
add
pop
mov
add
jl
sub
inc
out
inc
pop
js
and
out
cwtl
xor
out
imul
sub
pop
mov
pop
xor
loopne
arpl
xor
imul
fld1
insb
mov
xor
jae
cmpsb
mov
mov
mov
mov
mov
xor
mov
leave
fwait
ljmp
imul
mov
inc
cwtl
fcoml
add
gs
daa
addr16
xor
imulb
push
push
jecxz
sbb
icebp
fneni(8087
xor
bound
outsb
out
push
std
test
ret
mov
pop
andl
repz
mov
leave
pop
sbb
xchg
insb
inc
aaa
insb
dec
leave
sarl
pop
inc
pop
mov
mov
jmp
push
sbb
iret
adc
clc
sub
sar
cmpsl
dec
xchg
mov
inc
sbb
ds
aaa
fnstenv
lods
inc
mov
dec
sbb
add
in
je
lret
pusha
incb
in
repz
dec
sbb
jmp
in
push
cli
push
dec
mov
lcall
ficoml
aam
push
clc
sbb
xlat
shlb
pushf
vpcmpgtw
lds
test
pop
ds
repz
test
jl,pn
jo
push
mov
adc
jecxz
push
stos
inc
popf
lcall
int
add
movsl
inc
mov
pop
adc
ljmp
sub
rorb
xor
xor
inc
icebp
scas
insb
pop
out
rcl
std
inc
inc
notb
lcall
shrb
clc
inc
pusha
cmp
roll
out
pop
roll
mov
fstl
mov
push
mov
mov
mulb
mov
iret
mov
pop
repz
add
roll
ss
mov
push
mov
inc
mov
stos
movsb
cmp
jne
xor
arpl
notb
sar
cs
jge
fldt
mov
sub
lret
fisttps
icebp
add
mov
and
fdivl
push
mov
mov
xchg
cwtl
or
add
sub
sahf
adc
dec
pop
in
push
push
lods
mov
dec
movsl
cld
cmp
mov
lods
jbe
lods
mov
clc
or
lods
sub
jne
jmp
insl
aam
jae
into
jbe
lock
in
jns
fisttpll
sub
mov
rsqrtps
test
imul
pop
jne
dec
ret
in
sbb
push
aaa
push
jecxz
sbb
pop
scas
outsl
inc
enter
inc
sbb
dec
add
jnp
arpl
popa
and
stos
push
and
xchg
scas
cmpb
out
cmpsb
jl
push
mov
xchg
push
addr16
fisttpll
cmp
jmp
and
cwtl
mov
lds
mov
loope
push
jg
mov
rolb
inc
loopne
mov
xchg
fistps
push
jge
je
sub
push
jmp
jns
pop
and
pop
mov
mov
and
pusha
icebp
sub
sbb
push
push
insl
lahf
fmuls
stos
out
pop
fldl
or
ss
mov
aam
out
pop
push
xchg
test
shr
push
add
repz
sbb
mov
outsl
pop
pushf
mov
add
xchg
rcr
xchg
insl
jno
push
dec
mov
xchg
lahf
pop
mov
call
xor
gs
sbb
adc
hlt
clc
ljmp
out
dec
push
xor
ss
sub
fisttpll
out
test
and
jl
mov
sub
ljmp
sbb
scas
mov
cmp
mov
sbb
sbb
sbb
aas
pushf
pusha
jg
cmp
cwtl
sub
fwait
lahf
lahf
xor
scas
bound
mov
scas
xor
pop
inc
sbb
int3
push
or
jge
aaa
xor
inc
xor
or
pushf
adc
add
mov
and
lea
popa
outsb
mov
jl
cltd
xor
scas
scas
inc
adc
scas
popf
jecxz
loopne
inc
inc
or
popl
out
insb
pop
adc
push
mov
mov
xlat
ret
fldt
enter
loopne
mov
nop
cmp
insl
aaa
popl
in
push
pop
sti
scas
xor
lock
cmc
faddl
lods
sub
push
in
mov
adc
cmp
adc
je
cmc
inc
pop
andl
shrl
imul
sahf
pushf
dec
push
mov
lds
adc
add
and
mov
mov
aam
lods
imul
mov
fwait
imul
xor
jae
jbe
dec
arpl
arpl
xchg
jno
cwtl
mov
adc
sub
mov
insb
mov
das
sahf
inc
pop
mov
test
xor
icebp
push
ret
sbb
jnp
aaa
ror
cmc
xchg
es
push
nop
imul
pushf
push
push
pop
addl
mov
add
jmp
mov
aaa
cwtl
adc
std
fimull
std
inc
jle
dec
xchg
push
jp
adc
sub
jne
arpl
ret
out
mov
push
popf
idivl
adc
int3
imul
shrl
dec
push
jo
xchg
aad
pusha
adc
push
aam
inc
mov
fistl
or
push
mov
shrl
dec
and
cltd
dec
lcall
mov
mov
pop
mov
iret
xchg
mov
xchg
nop
cmc
jecxz
scas
insl
mov
adc
cmp
das
and
das
mov
mov
arpl
jae
out
dec
outsl
insl
or
jmp
jns
cwtl
test
and
mov
push
test
pop
mov
and
push
ss
cmp
aas
loopne
sbb
dec
loop
mov
xor
sti
fs
insl
test
test
out
imul
lea
les
jnp
jae
into
push
pop
test
test
push
in
lods
pop
test
mov
out
push
pop
mov
rcll
xor
and
lret
lret
mov
scas
dec
lahf
sub
dec
lock
sub
mov
dec
xchg
repnz
jle
push
ret
mov
sar
fsubrl
and
les
push
std
mov
pop
filds
or
stos
leave
or
mov
stos
in
push
mov
dec
mov
aaa
sub
out
and
xchg
int
dec
adc
cmpsl
gs
lock
sbb
push
sarl
loope
sahf
cmp
inc
xchg
cmp
mov
mov
dec
fbstp
fisttpll
pop
xor
xor
shrl
imul
or
and
pop
call
dec
inc
cmpsb
mov
or
rclb
or
popa
sub
stos
aas
rcrb
popf
pop
lahf
adc
test
sbb
push
push
adc
push
xchg
jne
inc
push
cwtl
ficoms
call
xor
les
fsubl
xor
ss
push
xchg
mov
add
cli
pop
icebp
test
fisubs
sbb
out
rdmsr
data16
subb
push
popf
xchg
fsubrl
jns
xchg
push
mov
icebp
pop
dec
stos
lods
imul
xchg
stos
add
adc
popa
loope
and
push
sbb
hlt
repz
cltd
hlt
fisubrl
or
adc
adc
mov
movb
cld
cmp
lret
cli
sbb
xchg
imul
push
pop
xor
pop
aam
sub
shll
subl
push
inc
sub
in
xchg
mov
push
out
pop
dec
xlat
bound
mov
add
popa
xchg
outsb
pop
mov
lea
test
aaa
sbb
dec
mov
sub
add
xchg
push
mov
sub
ds
pop
mov
xchg
xor
add
sub
xchg
inc
test
loop
push
adc
scas
arpl
xchg
mov
fwait
aaa
sti
jmp
adcl
aam
xlat
adc
adc
inc
sbb
sbb
popf
out
xchg
sbbl
dec
jno
out
mov
and
dec
and
das
pop
push
fcomip
test
ljmp
lds
xor
dec
sub
add
mov
mov
out
rcrl
and
or
cmp
adc
add
mov
adc
lods
jb
push
pop
inc
adc
fcoml
lods
stc
sti
jl
insb
inc
repz
xchg
loopne
sbb
testl
in
and
popa
xor
jl
test
nop
out
sahf
cmp
jecxz
jnp
popw
pop
xor
dec
icebp
shl
mov
push
push
and
pop
in
popa
xor
adc
or
ljmp
inc
push
mov
loopne
pop
daa
popa
dec
ficomps
imul
hlt
jnp
clc
pop
mov
in
pop
jge
xchg
jp
jecxz
inc
idiv
mov
imul
push
add
pop
cmp
pusha
sbb
into
cmpl
pop
xchg
shlb
inc
lods
mov
xchg
sbb
sbbb
shrl
add
xchg
push
pop
inc
and
int3
stc
pop
add
stos
insl
loop
lahf
imull
incb
push
mov
nop
xor
bound
cmp
push
popa
mov
call
cmp
dec
hlt
adcl
call
test
lahf
iret
shlb
ret
lret
xor
and
pop
xchg
repz
fwait
sub
cs
inc
js
jg
sub
out
sbb
in
cli
lods
adcl
retw
filds
and
test
or
fildll
in
das
lcall
int3
sub
or
popf
inc
mov
adc
out
lahf
cmp
sbb
cmp
fistps
inc
adc
xor
lret
cmp
mov
aas
xchg
inc
movsb
mov
mov
add
add
cld
out
mov
cwtl
xor
inc
in
mov
iret
ljmp
loop
or
jnp
or
iret
cmp
xchg
xchg
cltd
sub
sbb
test
fsts
jae
dec
jmp
rcll
cmpb
outsl
push
lds
or
and
imul
cmpsl
and
divb
imull
inc
jae
mov
mov
cmp
add
jge
pop
sbb
clc
and
sbb
insb
add
lods
stos
xorl
in
push
xchg
jno
loope
or
stos
in
jge
bound
inc
lcall
mov
fistpll
cmp
add
mov
pop
outsb
add
dec
int3
in
arpl
fsts
test
imul
pop
je
ret
jge
dec
data16
js
mov
negl
sub
add
outsl
repz
orb
adc
mov
in
sti
sbb
xchg
push
push
inc
xlat
jmp
cmp
scas
pop
addr16
out
je
icebp
subl
ficoms
xor
lret
mov
pop
repz
xor
cmp
jmp
lcall
dec
jns
jmp
sahf
repz
push
inc
cmpsb
les
dec
mov
mov
pop
jo
mov
pop
scas
push
in
push
in
cld
mov
decl
adcb
xchg
jbe
pusha
push
pmuludq
xchg
popa
imul
popf
in
leave
sub
xor
pop
in
jg
stos
or
mov
arpl
inc
xchg
jo
sub
fildll
stc
lds
stc
mov
mov
pop
cmp
push
and
pushf
push
insl
xor
sbb
icebp
cld
gs
pop
orl
push
cmp
mov
xlat
cmp
int3
jle
push
cmc
and
movntps
jmp
movsb
add
jns
popf
adc
pop
pop
push
cmpsl
ds
mov
xchg
adc
and
dec
shrb
dec
sub
test
enter
dec
in
push
scas
dec
out
in
fld
icebp
pop
lods
push
jp
popa
add
xchg
fcomi
push
dec
pusha
arpl
rcrl
popf
jl
lcallw
stos
add
inc
cmp
cld
ret
popf
lods
cmc
xor
jne
jbe
jnp
dec
fstpt
fwait
cld
cmpsl
divps
sbb
es
sub
jmp
dec
xchg
icebp
pusha
pusha
insb
rorl
mov
iret
dec
aas
out
loop
movsb
out
pop
aad
jp
les
imul
enter
inc
mov
mov
gs
inc
inc
loopne
xchg
push
out
fmull
push
out
push
insl
push
aad
imull
ja
dec
mov
mov
mov
movsl
xchg
add
das
mov
leave
jae
jp
pop
pop
lcall
data16
dec
mov
test
mov
mov
out
push
xor
pushf
insb
jle
push
inc
dec
out
in
cltd
cmpsb
in
shlb
testb
fildll
loope
jmp
dec
test
pushf
inc
jbe
icebp
cmp
xor
mov
cmp
sub
fs
lcall
hlt
add
cwtl
in
xor
fisttpl
add
aam
or
xor
push
and
xchg
inc
pushf
jo
faddl
push
daa
xchg
pop
and
inc
mov
push
xchg
inc
int
or
mov
test
lcall
ja
enter
xor
scas
mov
mov
cmp
jecxz
and
push
fsubp
xchg
push
stos
push
stos
les
ret
adc
mov
jae
mov
sbb
lods
les
arpl
sarb
xchg
mov
insb
sbb
dec
lds
sub
push
jns
push
mov
push
lret
aad
insb
bound
or
xlat
push
xchg
add
cwtl
js
adc
mov
ror
mulb
stos
in
mov
jge
imul
cmp
loopne
pop
lret
rcl
mov
mov
cmp
push
lahf
imul
dec
jae
push
cmp
push
add
mov
jb
cld
dec
jmp
shll
in
pop
rorb
mov
xor
dec
sahf
jg
or
sub
add
leave
jmp
cs
loope
mov
inc
mov
inc
sub
mov
iret
into
stc
mov
push
subl
es
in
adc
pop
js
mov
mov
pop
push
xchg
scas
pop
in
and
call
push
stos
mov
ja
sti
leave
inc
add
jbe
add
lds
dec
das
repnz
stc
adc
adc
pusha
mov
jne
clc
sub
dec
ret
xchg
jge
sti
add
imul
ret
test
fcoms
xor
push
push
xor
jp
sbb
mov
push
sub
loope
xlat
sub
mov
and
mov
pusha
andb
adc
or
es
fnsave
pop
or
xchg
mov
fistpll
sub
arpl
pop
loopne
stos
shll
jnp
rcrl
pop
addr16
cmpsb
or
aad
addr16
out
add
jo
imul
enter
xor
leave
pop
mov
inc
cmpb
fistl
mov
cmp
aas
pusha
loopne
xor
xchg
aaa
fcmovbe
ret
sub
jb
lock
mov
mov
jge
scas
stos
inc
jge
and
mov
roll
scas
into
decb
pop
inc
add
pusha
or
aas
icebp
mov
inc
ret
sub
out
jnp
iret
push
or
jl
adc
pop
fidivrl
lahf
popf
out
sbb
mov
add
call
stos
ja
and
ljmp
addl
add
dec
test
xchg
jp
xchg
stos
push
or
jns
lahf
mov
test
inc
das
add
mov
lds
push
mov
cmp
xchg
test
mov
mov
das
push
bound
jecxz
jo
cmpsb
pushf
dec
cltd
int
bound
subb
in
aas
push
stos
ljmp
aam
clc
popa
cmp
adc
mov
sub
cmc
inc
inc
mov
mov
lcall
ds
xchg
fsts
and
ljmp
pop
test
sub
inc
pop
and
repnz
pop
add
xchg
cld
and
inc
rcrl
rorl
sbb
mov
mov
jp
sbb
mov
es
dec
inc
outsl
outsb
leave
mov
lcall
ljmp
std
push
jne
sub
jl
aam
push
addr16
pop
movsl
mov
jnp
imul
call
mov
icebp
jmp
pop
adc
aad
cmp
add
cs
bound
lret
out
mov
mov
aam
imul
and
push
sahf
mov
xor
pop
inc
enter
imul
mov
mov
mov
fdivp
add
out
mov
mov
add
xchg
pop
stos
fmuls
roll
shlb
les
outsb
sbb
pop
jno
dec
test
cmpsl
and
pop
lds
das
jp
xchg
addb
cld
lds
add
dec
mov
sbb
cmc
rolb
loop
ljmp
insb
xchg
adc
push
outsl
jne
adc
push
or
shll
and
cwtl
push
add
or
imul
jbe
clc
fstpl
ret
loopne
jge
rorb
bound
das
sbb
pop
sub
sarl
fstl
add
mov
insl
ja
fs
ljmp
rcrb
jl
div
jg
xchg
jge
and
cmp
push
call
cmpsb
sub
inc
inc
jl
scas
outsb
jae
gs
sbb
idivb
scas
lret
push
xor
xchg
mov
xchg
hlt
jo
stc
mov
xor
pusha
add
movsl
cwtl
mov
inc
cld
or
xchg
or
pop
outsl
jge
aad
movsb
insl
sbb
push
adc
daa
xchg
out
outsl
aad
jle
push
inc
inc
add
and
test
mov
sub
test
out
push
jnp
imul
iret
data16
fstpl
push
push
clc
pop
add
loopne
mov
adc
mov
cmp
push
jmp
cld
leave
lock
xorl
test
lea
inc
mov
enter
aaa
sahf
dec
inc
pop
add
loope
iret
or
push
mov
inc
mulb
dec
mov
mov
mov
mov
scas
fldcw
sbb
add
in
fcoms
inc
inc
push
in
scas
jmp
lods
mov
enter
mov
into
cwtl
pop
nop
sbb
push
pop
jno
mov
icebp
ret
aaa
inc
mov
push
call
je
xor
aaa
sbb
adc
mov
and
push
sub
and
arpl
mov
rcrb
movsl
sti
pop
int3
movsl
enter
dec
sar
jo
push
xchg
mov
push
ss
sbbl
xlat
insl
test
jge
mov
pop
in
fldt
inc
fmuls
sub
leave
mov
adc
roll
outsl
loope
out
jl
lods
adc
iret
sbb
leave
inc
ret
stos
movsb
lock
jnp
out
push
std
xor
lock
jl
inc
inc
xor
popf
xchg
jecxz
stos
das
jae
std
jecxz
cmp
jae
and
sbb
sub
push
ljmp
or
lea
nop
add
jle
in
xchg
xor
insb
xorl
adc
mov
out
enter
push
mul
mov
mov
sbb
ret
inc
movsb
jne
gs
in
sbb
cmc
mov
sub
cmp
jo
cltd
out
jnp
fcompl
in
mov
scas
movsl
mov
stc
xor
aad
add
mov
xchg
sbb
orb
xor
push
ret
inc
cmpsb
fcomps
jle
sub
jns,pt
call
int3
push
and
dec
pop
in
ret
or
jb
iret
pop
pop
jle
jb
fwait
aas
lcall
divb
rclb
mov
popl
add
mov
lcall
shlb
pop
lcall
jb
jp
dec
mov
int3
rcrb
sbb
or
mov
insb
insb
and
psllw
cmpsb
add
inc
nop
fsubl
adc
sbb
sti
mov
cwtl
iret
add
notl
cld
cmp
pop
jl
fistpl
in
loop
sarb
pop
in
pop
ja
push
movsb
das
int
lds
sub
xchg
mov
repnz
add
insb
sub
pop
jo
inc
mov
push
movsl
ret
jmp
sbbl
mov
pop
test
in
and
out
stos
iret
ja
push
cmc
movsb
outsl
lods
jp
jns
fdivrp
jge
jle
mov
ljmp
fmuls
xlat
adc
daa
xor
ss
roll
mov
in
sbbl
xchg
xor
dec
adc
ja
nop
push
mov
add
pop
iret
imul
dec
cmp
cmpsb
repz
mov
xchg
roll
mov
adc
push
push
es
in
push
push
sbb
test
test
inc
xchg
pop
fldt
gs
mov
testl
mov
sbb
push
mov
mov
mov
pop
aaa
dec
jnp
pop
mov
pop
push
call
out
lods
mov
leave
call
repz
test
lret
cltd
mov
add
jbe
int
insl
dec
test
xchg
lret
adc
and
gs
inc
dec
add
mov
cwtl
rep
pop
movl
iret
sub
pop
cmpl
dec
push
call
cmp
ret
mov
cmp
jmp
pop
lret
push
adc
jecxz
and
imul
jb
js
insb
mov
push
testb
inc
dec
popa
scas
gs
add
or
add
inc
xchg
lods
stc
mov
sbb
sub
jg
mov
push
mov
jb
dec
ljmp
pusha
shlb
lods
int
push
adc
jg
and
and
daa
dec
ja
pop
nop
mov
inc
jb
cmpb
sahf
lret
inc
ret
lret
das
xchg
xor
jmp
mov
imul
sbb
sub
add
xchg
xchg
in
xchg
cmpsl
cmpsl
test
into
lcall
sub
into
aam
jge
pop
dec
mov
mov
sub
js
add
or
arpl
cmp
and
fstp
add
aas
inc
xchg
lds
loopne
mov
hlt
pusha
cmpsl
and
adc
or
xor
dec
rcrb
mov
pop
xlat
pop
hlt
xor
xchg
scas
loop
ja
push
mov
int3
jbe
add
out
roll
lahf
lods
dec
insb
and
jecxz
dec
das
xchg
fisubrs
jb
shl
xor
xchg
push
sub
inc
and
in
pop
outsb
iret
ja
add
mov
xchg
pop
jbe
push
mov
loope
inc
subb
and
inc
in
rcrb
sbb
clc
xchg
fildll
fdivrl
xor
mov
inc
lods
sbb
push
jge
rcl
aam
outsl
sbb
iret
repnz
inc
cli
sbb
pop
pop
out
cmp
lods
add
pop
popa
jp
sbb
xchg
sbb
movsb
ja
mov
lods
sti
mov
push
mov
mov
adc
fwait
movsb
mov
push
jae
movzwl
cmp
out
aam
test
pusha
pop
and
out
pusha
aam
adc
shrb
out
mov
adc
sahf
adc
or
addr16
andb
xor
test
push
or
daa
or
adc
adc
push
adc
jecxz
daa
jno
inc
mov
cmpl
les
call
out
addr16
cli
seta
lods
stos
jno
movl
cltd
and
js
loopne
jg
psllq
mov
add
fxch
pop
lret
test
adc
andl
lds
sub
jnp
sub
xor
jecxz
cmpsb
mov
inc
imul
mov
popf
fstps
stc
les
cmp
test
arpl
lods
scas
push
xchg
mov
out
cli
push
mov
stos
rcrl
dec
inc
inc
fwait
scas
cwtl
mov
dec
jle
iret
arpl
jmp
and
inc
test
adc
pop
jl
fcmovne
pop
bound
mov
out
cmpsb
sarl
inc
or
loop
pop
fiaddl
jbe
cmp
imul
and
fmulp
cmp
outsb
lock
icebp
out
and
mov
nop
pcmpgtw
stos
and
or
movsb
test
push
cld
pop
mov
sbb
inc
rolb
insb
jbe
xchg
out
fidivs
mov
add
push
and
pop
sarb
add
in
addr16
xchg
or
inc
lock
es
lcall
lret
shlb
jle
dec
stos
jbe
lock
cmpb
test
dec
popa
jecxz
mov
sti
cltd
lret
in
mov
mov
push
pushf
pop
or
add
mov
dec
sub
outsb
es
push
push
add
sbb
push
or
rclb
scas
push
std
and
scas
pushf
shrb
mov
aaa
sahf
je
xchg
xchg
add
pusha
enter
das
xor
cmp
fdivr
popa
sbb
rcrl
sub
fs
xchg
pushf
sbb
jle
es
cltd
scas
fwait
ljmp
push
es
sub
andl
add
fisttps
xchg
imul
fcmovnb
cmp
lahf
outsb
cli
jp
push
scas
mov
aad
push
cmp
and
inc
fildll
shr
daa
adc
mov
jle
pop
bound
jae
stos
push
lret
out
add
xchg
bound
es
sbb
ror
into
loope
mov
jl
lcall
enter
test
into
pop
jnp
adc
mov
insb
push
es
mov
sbb
sti
pop
push
lcall
cmpl
inc
sub
push
push
push
or
or
rol
pop
lret
xchg
pop
ss
mov
in
push
jae
fistps
test
xchg
push
sbb
push
mov
push
popf
sub
pop
jmp
sub
pop
jnp
mov
xorl
jne
pushf
int
test
stc
mov
mov
mov
or
pop
fwait
lods
test
jmp
jbe
add
pop
pop
xchg
lods
mov
dec
aam
or
sbb
enter
mov
push
imull
stos
mov
cwtl
or
hlt
sbbl
jnp
movsb
xlat
dec
imul
push
int
xchg
cwtl
mov
std
orl
jae
out
mov
sbbl
inc
and
add
pop
mov
in
rcr
push
iret
dec
xchg
xchg
cmpsl
rcrb
push
add
sarb
xor
imul
mov
arpl
adcl
add
pop
ss
loope
in
scas
xor
ljmp
push
aam
mov
das
jl
sahf
sub
adc
push
testl
pop
pop
adc
call
mov
and
push
mov
in
add
test
std
jno
outsl
ljmp
pop
mov
cmpsl
test
mov
and
lcall
imul
sbb
xchg
test
inc
inc
xchg
sbb
xchg
adc
movsl
xor
push
cld
stc
ljmp
fnstcw
loope
orb
xor
ljmp
daa
or
sub
xchg
cltd
mov
mov
or
or
cmp
jo
cli
into
xchg
xor
and
mov
sbb
and
rol
pop
or
out
xor
stos
sub
repz
rcrl
xor
jno
loope
out
fucom
xor
pop
jecxz
les
xor
mov
scas
icebp
lret
xchg
or
pop
inc
call
in
xchg
bound
in
mov
fs
inc
jae
ja
stos
lahf
lret
jb
mov
jb
mov
and
stos
cltd
scas
dec
lds
fwait
out
cwtl
loopne
jg
dec
fstps
and
xchg
adc
in
sbb
nop
stos
rolb
cmc
fiadds
adc
dec
mov
mov
in
and
sbb
cmc
push
sub
data16
add
ja
dec
icebp
mov
and
lcall
inc
add
test
cltd
clc
sub
and
bound
mov
cmpsl
lods
xchg
mov
and
mov
push
adcl
pusha
mov
std
pushf
sbbb
fcomps
lret
stos
sahf
mov
in
sahf
adcl
xor
cmp
jl
stos
imul
fcmovnbe
cmp
jbe
loope
dec
jmp
mov
cmp
pusha
scas
fadds
fwait
loope
cmp
xchg
scas
adc
ss
lods
leave
stos
push
inc
and
shrl
sbb
cltd
mov
add
cmp
sbb
xor
inc
jle
addb
jne
push
mov
cmp
pop
pop
jmp
and
cltd
pop
inc
inc
andw
mov
mov
out
icebp
add
je
push
lcall
fs
push
stos
je
cmp
sbb
add
mov
aam
nop
into
mov
addr16
gs
imulb
daa
popf
insl
sub
test
add
iret
sti
and
js
ret
fcoml
or
divl
xor
mov
aas
arpl
fisttpl
jmp
and
pop
add
mov
testb
aam
inc
jp
popa
loop
pop
pop
das
sbb
ljmp
xor
ljmp
xlat
mov
imul
call
ret
sti
mov
push
dec
adc
les
push
bound
ret
in
test
cli
push
adc
int
dec
dec
gs
adc
and
movsl
movhlps
jno
sarl
icebp
push
mov
sbb
inc
fildl
lds
jg
out
je
imul
inc
pop
popa
add
les
es
xor
jle
cmp
test
xchg
push
cmp
xchg
sub
fimuls
mov
into
mov
pop
mov
cld
lods
loop
jl
pop
xor
inc
aas
sub
outsb
cmp
xchg
cli
or
fstpl
js
dec
inc
cmp
dec
adc
push
pusha
mov
and
mov
testb
adc
xor
mov
inc
push
push
dec
out
cli
rcll
fstpl
mov
inc
daa
jmp
data16
push
or
pusha
and
mov
or
push
mov
xlat
cmp
into
int3
cli
lock
jne
mov
adc
inc
dec
ret
call
or
push
int3
mov
out
stc
out
test
sarb
adc
roll
loop
cmp
out
xor
pop
xor
pop
ljmp
cmp
jl
jge
sbb
int3
lods
cld
and
xchg
add
shl
add
push
fwait
xchg
sub
int
sub
add
ljmp
push
push
stc
and
je
sarl
add
aam
adc
xchg
xor
adc
and
adc
xchg
mov
aam
loopne
jo
add
movb
lock
and
iret
clc
xor
pop
pop
imul
fldcw
and
rclb
stos
out
daa
loop
push
inc
push
imul
add
fisttpl
dec
and
xchg
xor
push
fbstp
add
pop
lea
test
mov
call
xlat
add
xlat
loop
dec
cmp
jne
cmp
test
sub
jae
and
pandn
xchg
fcomps
fwait
pop
adc
lods
mov
cmp
and
ror
shll
adc
and
adc
ret
shll
insb
pop
mov
jl
jne
lds
xchg
or
pop
xchg
fiadds
subl
lds
addr16
add
les
sub
enter
out
push
clc
mov
dec
pop
lret
inc
loopne
loopne
test
mov
neg
mov
ds
dec
add
pop
jae
mov
add
stos
xchg
int
mov
ret
push
dec
insl
xorl
mov
cmpsb
popf
jecxz
hlt
mov
jno
jo
jmp
inc
mov
jbe
jmp
movl
jg
movb
cmp
pop
stos
flds
and
adc
mov
ljmp
in
repnz
push
mov
out
jp
jl
nop
out
leave
stc
xlat
ficoml
xchg
xor
jno
mov
mov
outsl
dec
or
cmp
mov
adc
in
out
ficomps
add
sbb
mov
xchg
mov
outsb
lret
jnp
cmp
test
jo
imul
mov
dec
maxps
mov
mov
pop
sbb
faddl
adc
sbbb
and
pusha
add
sbb
mov
push
movsb
lret
gs
mov
mov
repz
push
mov
adc
cmp
cli
push
scas
inc
xchg
adc
lods
mov
in
cmp
push
dec
mov
js
jmp
adc
pop
dec
js
cmp
xchg
jp
sub
outsb
xor
mov
mov
sbb
test
mov
push
or
sub
jmp
mov
inc
jp
jge
stc
int
mov
pop
arpl
fs
ret
arpl
sar
nop
cmc
xchg
pusha
arpl
je
aam
sbb
and
xchg
mov
jnp
push
pop
sbb
pop
das
inc
cmp
loopne
filds
setae
jno
aaa
rcll
jmp
mov
cmc
xchg
sbb
and
mov
pop
add
dec
ss
adc
add
dec
or
cmc
jp
mov
inc
jnp
cmpsb
outsl
fstpl
sahf
popf
gs
outsl
and
fstl
or
sub
mov
pop
jns
mov
and
mov
in
jnp
jne
rcll
push
mov
mov
cld
pop
rcrl
jecxz
icebp
jecxz
cmp
into
int
in
jae
out
mov
int3
bound
sarl
call
int
loopne
sub
inc
out
or
or
leave
pop
out
mov
mov
dec
add
cmp
xchg
das
sub
xor
or
add
inc
orl
lods
imul
mov
push
je
ja
xchg
xor
mov
mov
or
repnz
repnz
add
retw
mov
sbb
add
dec
aam
ljmp
js
add
xchg
adc
mov
sub
pop
stos
mov
out
dec
lret
cmpsl
and
mov
xchg
repz
adc
and
and
gs
push
call
cmp
fistpl
xor
adc
aaa
pop
cmp
insb
bound
sub
aad
daa
fwait
jmp
fwait
inc
lods
add
lahf
stos
ljmp
push
add
rcrb
mov
jl
xor
inc
ja
dec
in
jl
loopne
cmp
and
mov
clc
cmpsb
shl
jmp
cmovae
xchg
xor
adc
punpckhwd
xlat
sar
aad
xor
mov
mov
mov
wbinvd
repz
dec
cmp
pushf
push
jne
push
inc
out
loope
or
cs
in
in
sub
test
dec
fdiv
ss
outsb
jbe
pop
xlat
inc
jnp
jp
lret
fs
inc
mov
fwait
test
mov
fisttps
mov
jae
pop
aam
jg
fs
xlat
xchg
dec
aam
out
dec
push
lret
fxch
push
int3
jge
pop
testb
cmp
add
scas
jne
or
jmp
mov
jo
lods
popf
test
lods
dec
icebp
outsb
mov
je
push
mov
lret
xchg
inc
inc
fmull
fistps
dec
and
lods
div
cmp
pop
mov
pop
pop
add
push
push
and
jns
lods
fmull
add
std
stc
in
dec
sub
push
add
jecxz
insl
dec
mov
orl
pop
loopne
adc
loop
ja
je
pop
dec
dec
lcall
pusha
outsb
or
movsb
cli
in
clc
in
cs
in
jl
xor
gs
repz
roll
mov
push
repnz
mov
pop
mov
arpl
rclb
inc
jbe
pop
lds
repz
sub
jae
out
jbe
mov
into
pusha
cltd
int3
loope
push
inc
fidivs
jns
out
push
adc
pop
and
cmp
pop
xchg
dec
sbb
add
lods
lahf
mov
mov
ljmp
cs
pop
lcall
popf
and
ret
push
jb
push
gs
popa
sub
xchg
inc
mov
add
fmuls
sub
add
push
test
dec
in
aad
dec
dec
stc
fbld
xor
xor
pusha
and
and
mov
in
xor
mov
dec
icebp
insl
movsl
sbb
and
std
or
adc
pusha
nop
packsswb
jge
jmp
fs
aam
fmuls
std
xor
dec
lahf
or
and
hlt
sbb
jge
mov
popf
push
cmp
and
push
cmp
push
inc
je
xor
fists
and
rol
notl
mov
cmp
xchg
jno
sbb
push
xchg
xor
dec
js
xchg
ret
sbb
fildl
xor
inc
packsswb
push
adc
mov
cld
push
lret
ljmp
in
add
sbb
stos
push
mov
bound
mov
or
xor
sbb
mov
inc
lock
int3
sbb
push
push
adc
rclb
dec
decl
add
into
out
push
loop
cmpsl
pop
out
fisttpl
xchg
imul
sbb
icebp
dec
add
into
jle
push
or
and
subl
test
sub
mov
adc
bound
arpl
fwait
dec
mov
pop
fwait
ss
clc
jbe
mov
add
decb
in
xor
add
fiadds
or
aad
daa
fstps
xchg
jae
outsl
cmp
pop
and
in
in
push
dec
adc
push
xor
mov
imul
xlat
cmp
mov
pop
mov
mov
pop
cmp
addr16
js
jo
mov
pop
fwait
cld
jbe
test
adc
in
fiadds
lcall
push
data16
and
sbb
jmp
mov
jmp
popa
xchg
mov
xchg
jnp
leave
test
insb
mov
pop
outsl
aas
fimull
ja
xchg
sub
mov
lret
addr16
push
jle
sbb
xor
pop
add
sbbl
outsl
out
std
add
pop
jo
pusha
iret
add
js
test
sbb
mov
ljmp
rclb
cli
iret
mov
xlat
lcall
shrb
jnp
push
sti
pop
mov
sahf
or
jg
nop
movsb
and
or
aam
gs
mov
mov
adc
dec
cmp
lret
sbb
stc
dec
lea
jecxz
adc
in
cmc
cmp
jbe
mov
repnz
cwtl
out
xchg
iret
orl
fistl
enter
mov
mov
inc
or
pop
movsb
mov
mov
cwtl
jp
dec
dec
out
fwait
pop
shrl
std
nop
or
adc
and
cmc
jo
ljmp
jp
stc
test
lock
fdivs
jb
mov
aaa
fwait
jg
push
out
sub
loope
adc
mov
cmp
out
cmp
jmp
aaa
mov
pop
daa
cs
inc
sbb
outsb
mov
or
push
addr16
dec
cmpsl
push
sbb
outsb
loope
ss
pusha
test
inc
rorl
add
cmp
adc
sub
mov
cld
int
push
jae
sarb
cmpsb
jb
leave
mov
xchg
cmp
push
lret
insl
push
icebp
stos
and
jbe
rcrb
mov
out
je
xor
dec
adc
pop
ret
mov
xchg
or
out
bound
incb
add
push
pop
ja
movsb
push
js
dec
sub
push
or
sub
test
cmp
insb
adc
imul
xlat
int
dec
mov
push
in
cmp
inc
cmp
push
xor
dec
bound
inc
ret
stos
lahf
adc
dec
je
push
mov
or
addr16
lock
sub
add
push
cmpsb
rorl
jae
mov
xor
push
adc
and
xchg
faddp
ret
add
aaa
adc
cmpsb
cmp
std
mov
or
xchg
icebp
fsubrl
mov
mov
test
test
sbb
xlat
mov
fisubrl
pusha
jg
pop
stc
lods
mov
push
cmc
or
and
adc
inc
xor
fldz
ljmp
inc
leave
mov
into
mov
sub
aas
rorw
pop
xchg
xchg
add
adcb
in
mov
cmp
aam
pop
cmpsb
repnz
testl
sbb
imul
xchg
pop
cmpsl
mov
iret
out
mov
sbb
mov
and
xchg
sub
jg
xchg
imul
imul
sub
fmuls
cmc
mov
push
movsl
push
and
inc
add
sub
push
push
fldenv
pop
int
ljmp
cmp
sbb
andb
iret
ret
mov
pop
sub
cmp
jnp
lret
shr
daa
shlb
orl
mov
xchg
dec
add
sbb
mov
in
sbb
jge
shlb
and
pop
push
mov
loop
or
pop
pop
scas
sub
inc
out
jno
dec
dec
mov
jg,pn
addl
aad
mov
pop
lret
inc
or
les
mov
jb
repnz
cmp
sbb
in
hlt
cmp
mov
pop
dec
mov
cmp
mov
es
jnp
sbb
iret
or
aas
mov
jecxz
leave
test
insl
stc
data16
xor
mov
jns
icebp
ds
repz
movsl
lret
pop
lods
adc
sbb
inc
scas
pop
sbb
sub
mov
lcall
and
fiadds
push
mov
stos
push
cld
dec
xchg
pop
inc
popa
sahf
inc
dec
cwtl
bound
jle
lret
adc
test
imul
mov
imul
gs
test
loop
leave
loopew
stos
mov
xchg
ja
jns
aad
cmpsl
and
pop
sti
stc
fwait
and
push
or
add
pop
addr16
push
inc
and
jo
jb
insb
mov
dec
negb
and
and
or
mull
cmc
xchg
mov
sti
dec
ja
mov
mov
jo
mov
push
and
mov
jg
xlat
lret
in
lock
mov
xor
pop
out
add
pop
test
push
add
jmp
cmp
push
std
incl
icebp
dec
lds
repz
es
xchg
jne
push
cmpsb
sbb
mov
and
adcb
clc
mov
adc
out
xor
test
js
mov
cmc
ljmp
jne
sti
outsb
jnp
cmp
xchg
ds
aad
xchg
push
das
out
xchg
inc
pop
popa
adc
std
adc
lret
or
cmp
mov
push
in
inc
mov
js
inc
mov
scas
sbb
xchg
cmp
xor
out
jge
sahf
fdivrl
repnz
hlt
xor
arpl
loop
test
xchg
test
outsl
jne
inc
in
inc
and
test
out
add
mov
jge
sbb
fwait
mov
out
adc
notb
jecxz
xor
sti
pusha
jg
jns
add
or
and
fsubrp
stc
outsb
jb
ja
cmp
pop
ss
adc
notb
xchg
jne
xchg
jecxz
sub
adc
mov
ljmp
adc
sahf
inc
outsl
sub
mov
mov
dec
ja
jne
adc
leave
jmp
adc
cli
sub
fdivs
xor
dec
lea
pop
cmp
int3
sbb
mov
aaa
repz
sbb
dec
insl
fsubr
movsl
xor
add
pop
jg
sub
popf
pop
mov
lods
dec
push
mov
sarb
xchg
pop
scas
or
jae
popf
stos
addb
iret
cmp
ds
xor
mov
lret
ljmp
pop
cmc
lahf
mov
test
cltd
sarb
call
and
xchg
inc
mov
clc
pop
sbb
add
pushf
push
mov
das
cli
lods
jmp
cmpsb
inc
jge
mov
in
pop
sbb
xor
push
push
sub
xchg
add
lret
push
imul
ficomps
dec
fdivp
roll
shlb
mov
lods
adc
inc
sbb
inc
into
sub
loop
enter
stos
iret
lret
jnp
rcrl
jp
mov
loopne
mov
sbb
es
add
movsl
push
pop
add
lock
or
push
sub
push
mov
dec
pusha
cli
shrb
cmp
or
mov
insl
adcb
scas
and
les
push
out
dec
pop
lcall
data16
adc
test
inc
es
in
stc
mov
addb
xchg
xchg
xchg
or
scas
mov
pop
jno
cld
inc
fsubrp
inc
dec
pop
clc
lret
push
lock
jg
sub
jbe
lcall
cmpl
mov
dec
xchg
icebp
xor
inc
sbb
cmp
decl
repz
cld
jp
mov
push
aad
leave
insb
aad
pop
cwtl
subb
in
or
lret
addl
insb
aas
scas
pop
mov
aam
push
jb
mov
mov
add
lods
ret
mov
push
adcl
cmpsl
push
xchg
enter
pop
cmc
or
lcall
outsl
mov
add
sub
xlat
adc
test
cmp
imul
mov
cs
pop
jne
sbb
or
sti
fs
stc
das
enter
adc
aam
cli
cmp
pop
sarb
int3
mov
mov
inc
or
mov
dec
xchg
sahf
dec
lods
lea
add
and
jle
es
sub
call
xchg
jne
cmp
int
mov
mov
fnstcw
popa
mov
jl
and
subl
add
fistl
add
inc
sbb
cmp
push
imul
pop
mov
mov
mov
mov
mov
mov
insl
shlb
adc
nop
stos
out
addr16
movsb
enter
lock
setnp
mov
push
jl
das
pop
push
call
jns
jns
mov
push
or
scas
cmpsl
sahf
popf
test
cli
fcmovne
shlb
ds
jne
cmp
cwtl
xchg
test
loopne
fisubrs
fs
mov
mov
dec
orl
ljmp
inc
pop
jmp
hlt
sub
ret
push
sbb
push
pop
mov
hlt
data16
pop
lahf
movb
jmp
repz
jle
lods
in
out
ret
cli
outsl
jno
mov
add
lods
jl
out
ss
arpl
push
cmc
xchg
call
cmp
adc
or
sbb
pop
pop
les
scas
fdivl
jns
xor
inc
aam
les
mov
out
or
push
jo
hlt
in
cltd
pop
lods
or
nop
pop
mov
sahf
adc
fmull
ret
xor
jecxz
or
std
mov
in
jl
cmp
sub
sub
stc
xor
orl
loope
out
mov
into
sub
in
mov
cmp
push
jmp
lahf
xlat
nop
mov
or
add
jmp
dec
fdivl
lods
jg
loope
mov
sbb
cs
push
repnz
cmp
dec
ljmp
repz
mov
bound
sbbb
shl
ljmp
and
sbb
xor
cmp
inc
ljmp
test
sub
iret
lret
leave
or
int
sbb
sahf
sti
je
sbb
inc
out
test
jb
lcall
xchg
mov
daa
mov
pop
sysexit
in
ret
ret
hlt
jmp
xchg
pop
and
inc
sbb
adc
mov
out
push
adc
push
push
pop
pop
fwait
jo
mov
sar
push
imul
loop
popa
scas
push
repnz
lods
mov
int3
mov
ljmp
add
adc
rcrb
jae
addr16
jle
pop
sbb
inc
pop
jae
xlat
aas
jb
loope
fidivs
lcall
mov
pop
adc
and
mov
dec
pop
movsb
dec
jg
push
mov
jbe
sti
lds
aam
aas
iret
or
and
addr16
lret
out
popa
and
sub
ja
mov
inc
out
jge
or
lahf
xchg
sub
xchg
clc
jge
and
add
jl
dec
inc
and
jg
cli
dec
xor
lea
and
ja
aam
aam
dec
jmp
sbb
aaa
std
pop
stc
push
pusha
pop
jp
lds
stos
inc
pop
cltd
sub
out
pop
push
enter
nop
hlt
outsb
fistps
loopne
adc
adc
mov
loopne
lcall
sub
into
or
imul
js
push
icebp
test
adc
jo
mov
sub
inc
pop
or
repnz
loopne
mov
xor
dec
in
or
pop
pop
jecxz
mov
jbe
int
popa
stc
call
inc
lcall
cmpl
packsswb
dec
daa
arpl
lods
jno
inc
enter
lods
rol
lret
inc
loopne
and
push
mov
movsl
rcll
mov
cltd
inc
cmpsl
shl
add
bound
stos
aad
push
cmc
inc
cli
outsl
inc
jae
aas
stc
or
mov
in
or
stc
xlat
push
fs
xor
dec
push
test
into
push
xor
sbb
jbe
out
js
rcll
jno
sub
leave
sub
lds
and
add
mov
sbb
pop
xor
data16
mov
xor
pop
xchg
in
adcb
push
ljmp
movsl
xchg
rcrb
adc
loope
lea
fsts
arpl
jae
test
daa
pushf
pop
jne
js
mov
fiaddl
xchg
push
mov
dec
pushf
cltd
mov
fldpi
je
imul
pop
push
or
xchg
push
js
stos
jb
loope
mov
out
sbb
fs
pop
sti
add
mov
hlt
divb
sub
xchg
xor
in
sub
inc
and
fimuls
hlt
mov
jnp
mov
adc
mov
push
adc
test
and
in
add
adcl
lret
add
movsl
adc
inc
out
std
push
and
sti
xor
fldenv
rol
popf
xorb
mov
pop
fldl
movsb
stos
cs
sub
jnp
push
jno
jecxz
cmpb
dec
xor
mov
call
push
xor
cmc
mov
aam
pop
inc
xlat
sbb
pusha
lods
or
mov
push
mov
mov
movsb
xchg
xor
add
lret
push
lcall
idiv
std
add
std
mov
jo
shl
adc
fiaddl
push
jecxz
jg
shll
stc
shl
xlat
xchg
cmp
xchg
cmp
xlat
stos
out
or
xor
inc
or
jae
lcall
adc
mov
ljmp
push
mov
fmulp
jmp
fidivrs
mov
push
lcall
pop
mov
sub
cli
dec
in
push
mov
js
int
mov
and
sub
test
mov
stos
xor
mov
in
sub
sbb
inc
sbbb
call
dec
dec
cmp
or
fistl
psubd
imul
fsts
inc
out
out
cmp
andb
cli
lret
xor
dec
pop
repz
mov
adc
jae
mov
aas
add
and
or
dec
and
pushf
xchg
pop
jno
movsl
mov
xchg
clc
lods
pop
loop
mov
lret
dec
insb
arpl
sub
inc
pop
cltd
dec
ja
repz
jbe
xchg
sbb
fimuls
shll
lcall
js
dec
inc
sub
ds
data16
add
push
dec
out
push
cmc
adc
push
adc
pop
ret
or
scas
cmp
or
push
cmc
ret
lcall
repnz
mov
repnz
in
and
js
xchg
mov
dec
sub
sub
mov
cltd
arpl
pop
push
cmp
scas
sbb
push
mov
pop
test
add
xchg
fildll
mov
cld
icebp
cltd
dec
insl
lahf
add
or
add
aam
cmp
rorb
pop
rorl
stos
jp
bound
push
cld
adc
and
mov
adc
cli
inc
pop
test
in
cmp
es
push
jnp
cmp
sub
addl
mov
jne
adc
dec
push
out
pop
jmp
cmp
out
mov
ja
dec
mov
loopne
test
in
shlb
stos
mov
mov
adc
sub
outsb
out
and
inc
jmp
sub
cmp
fstps
fs
cld
fldt
out
jae
jl
int3
and
addr16
sti
sbb
xor
adc
dec
psubusb
sub
imul
inc
test
inc
mov
fildl
lds
dec
dec
mov
pop
outsl
lods
jae
stos
cmp
mov
cmp
inc
roll
std
sahf
pop
sub
cmp
mov
outsl
sarb
int
pushf
pop
pop
insb
imul
popf
aad
rcrl
test
gs
int3
rol
sbb
or
aas
sbb
xlat
cmp
sub
sahf
push
lea
bnd
addr16
vmovlps
mov
gs
push
push
sub
mov
push
stos
ljmp
inc
stos
cmpl
xchg
rolb
popa
jle
jg
stc
dec
xchg
adc
addb
jl
or
push
jge
push
pushf
testb
sbb
xor
push
loop
mov
ret
mov
out
lods
mov
mov
adc
js
loop
adc
mov
jmp
pop
mov
push
shlb
mov
lahf
loop
stc
push
fisubl
imul
xchg
in
divl
xchg
sub
idivb
cmp
pop
insb
cmp
adc
fwait
or
inc
ljmp
negl
push
mov
ret
fisubrl
push
cmpsl
mov
inc
std
and
adc
xor
cmpsl
mov
or
fs
dec
fnstcw
div
scas
or
cmp
loopne
imul
fstl
sbb
out
push
cmp
push
popf
js
faddl
cmpsl
jo
stc
adcl
lods
or
mov
addr16
nop
rcr
in
in
lcall
push
sub
adc
out
imul
xchg
dec
gs
aas
lods
test
lcall
adc
in
cmp
jl
ljmp
or
nop
es
cltd
xor
stos
movsw
popw
test
cs
loopne
push
out
shr
bound
sbb
setbe
xchg
xchg
add
ret
sahf
out
mov
push
push
fcmovbe
jl
es
mov
sar
mov
aaa
xor
inc
push
outsl
in
jb
aad
rcrb
cmp
out
dec
scas
inc
push
mov
test
adc
sub
andb
push
test
bound
dec
add
ret
stos
jbe
and
cmpl
xlat
mov
mov
sbb
adc
cmp
insl
and
push
cmp
mov
and
cmp
push
dec
shrb
jl
bound
push
cmp
insl
push
outsl
jp
aad
pop
pop
iret
mov
das
rolb
cmp
add
test
jg
sub
icebp
std
fstps
mov
jns
jbe
cmpsl
outsl
shl
cli
cmp
das
jecxz
je
push
icebp
lods
sti
jnp
orb
jg
rol
push
or
in
jo
dec
std
stos
push
sbb
mov
or
out
and
out
and
stc
int
arpl
pop
sbb
cmpsb
inc
cmp
jmp
lds
fs
pop
push
rolb
test
push
or
loop
ss
in
scas
or
jno
iret
sbb
movsl
sbb
mov
lahf
in
rorl
mov
xchg
mov
sahf
js
fwait
mov
test
jmp
inc
xchg
xor
add
out
sbb
movsl
xchg
sub
fcompl
cmp
in
or
mov
mov
lret
aas
or
lcall
xchg
nop
rcrb
repnz
mov
shl
sbb
insl
push
ficoms
stos
test
push
dec
pop
push
jo
pop
in
aam
aad
dec
fidivrs
push
sub
inc
cmp
and
stos
je
mov
adc
fistpll
hlt
push
fldenv
ds
hlt
cltd
jge
mov
pushf
dec
lds
mov
test
or
xor
repz
in
fst
fmul
ret
pop
sbb
sub
ds
cmp
int
js
subl
mov
jo
jecxz
lret
mov
ret
adc
push
test
lret
adcb
push
filds
or
adc
in
mov
cmp
sbb
sub
xor
cmp
cmp
nop
dec
insb
mov
jle
rcl
dec
add
or
mov
invd
sub
shlb
adc
mov
popa
mov
sub
aaa
dec
xor
mov
add
sbb
and
inc
inc
adc
fsubs
push
pop
inc
arpl
jl
sbb
rcrb
or
test
or
popl
mov
lcall
mov
mov
mov
int3
out
jne
sub
mov
shrl
cld
mov
sub
ljmp
jle
push
inc
inc
xor
aam
xor
mov
ja
inc
shl
rcll
mov
lret
pop
and
push
arpl
outsb
inc
pop
jns
xor
frstor
bt
xchg
mov
add
ss
or
push
ret
shlb
dec
inc
jo
mov
dec
mov
bound
jno
cmpsl
mov
or
cmp
out
jno
xchg
aad
cmpsb
movsl
mov
ds
inc
adcb
xor
int
mov
push
sarb
sbb
movsb
negb
aaa
jmp
pusha
clc
push
push
stc
dec
cmp
mov
cmp
pop
fstp
mov
jno
pop
jg
lahf
sub
push
jmp
sub
mov
jns
insl
mov
pop
xchg
test
pop
cmp
mov
jae
in
ss
loop
cmp
loope
popa
not
fs
jnp
xor
cwtl
out
hlt
sbb
add
adc
or
aas
pop
jo
sahf
mov
sbb
dec
inc
pusha
fucomi
and
adc
out
out
cmpsl
add
jns
loope
dec
sbb
outsl
js
fucom
das
or
sub
rcl
dec
mov
xchg
inc
xchg
mov
dec
out
pop
addr16
sub
add
pop
mov
mov
mov
mov
divps
dec
jl
ret
push
into
andb
xor
lret
mov
cmp
fsubp
in
xchg
dec
rorl
cwtl
loop
in
lods
mov
mov
rclb
adc
mov
mov
jb
roll
mov
xchg
jmp
adc
push
test
mov
out
les
das
pop
jne
mov
mov
mov
xchg
xor
sub
daa
cld
xor
sub
fsts
int
pop
and
mov
mov
out
loop
scas
out
xchg
or
ror
ljmp
out
fcomp
imul
out
xor
fisttps
xchg
roll
outsl
ss
notl
dec
xorl
sbb
ss
stos
icebp
xchg
cmpsb
popa
inc
mov
pop
cmc
aam
cwtl
in
and
push
jnp
lcall
push
sbb
movsl
cmp
outsb
fstpl
and
je
fmuls
xchg
sub
jle
lea
dec
lods
or
fcomps
ljmp
push
mov
in
mov
test
fidivl
mov
mov
mov
jmp
imul
stc
cmp
or
insb
scas
xorl
sbb
xchg
imul
inc
iret
xor
divl
or
sub
aad
shl
jp
scas
push
jno,pt
jnp
mov
fdiv
mov
fldenv
lock
das
das
mov
int
popa
jae
sbb
insb
out
out
fisttpll
mov
ljmp
lcall
scas
and
dec
or
jmp
push
sbb
or
add
pushf
leave
and
dec
jecxz
push
into
pop
inc
or
or
fistpll
sbbb
clc
fwait
aas
pop
sub
imul
pop
cmovp
mov
fimuls
lea
mov
jnp
xchg
jmp
pop
imul
les
xlat
add
pop
dec
roll
adc
mov
add
aad
inc
ret
jle
pop
xor
xchg
addr16
jo
in
xchg
test
cs
ds
inc
orb
adc
cmpsl
jne
sbb
lcall
mov
or
aaa
or
push
je
dec
scas
sarb
out
mov
xchg
mov
pop
mov
rcll
inc
dec
pop
scas
lcall
push
cmpsb
push
mov
fs
jl
in
sahf
or
jns
sub
xor
push
or
fcmovu
insb
cli
loope
inc
fidivrl
jbe
jl
imul
fxch
and
inc
mov
movsb
lock
fstpl
add
pop
mov
lret
mov
sub
xchg
adc
or
movsl
or
xor
scas
movsl
addb
sub
cmp
rcrb
sbb
ljmp
inc
cmp
sbb
mov
pop
cwtl
bound
add
call
mov
sbb
push
inc
pop
rorb
xor
cmp
adcb
movsl
push
dec
lret
pop
fyl2xp1
dec
test
jl,pt
xchg
cmp
leave
sbb
and
int
data16
mul
jecxz
push
lods
pop
cld
pushf
ljmp
ret
cmp
sub
mov
add
pushf
movsl
jmp
enter
add
add
sub
cmp
rorl
sbb
gs
out
repnz
mov
push
cmp
sub
jg
test
rorb
mov
repnz
mov
push
loop
xchg
es
jae
sub
repz
jb
data16
outsl
inc
int3
test
pop
sbb
cmc
icebp
outsb
pop
jne
sub
dec
sbb
inc
fs
pop
loop
jecxz
ror
lock
mov
loope
jmp
nop
push
fyl2x
cmp
fcoms
pop
and
mov
loop
mov
lds
cmp
jle
dec
dec
mov
jne
cmp
inc
bound
mov
insb
sub
pop
sbb
push
push
cmc
dec
test
aam
mov
test
fdivrs
fisttps
mov
sbb
jns
jbe
fucomi
ljmp
rolb
fsts
fcomps
divb
mov
out
stos
es
aaa
subl
sbb
enter
clc
lds
shrb
jg
xchg
sti
push
mov
jle
jno
mov
xchg
out
inc
negb
testb
call
inc
fmuls
adc
mov
jo
mov
into
jg
xor
sub
jg
popf
xor
sbb
xor
lods
into
call
rol
ds
sub
ror
fs
cli
and
xor
stos
cli
pushf
xchg
cmp
out
and
or
in
push
out
mov
fcmovnu
call
xchg
mov
in
cltd
xor
int3
andb
ret
cmp
scas
loope
outsl
inc
push
je
aam
fiaddl
bswap
in
sbb
jbe
push
mov
mov
or
push
cld
jl
mov
pop
sti
mov
cmpl
fsubl
out
push
aaa
jmp
fsub
clc
xor
inc
sahf
lcall
sub
in
inc
cmp
mov
adc
mov
dec
aaa
sahf
push
mov
iret
and
arpl
repnz
jbe
xchg
fsts
or
mov
adc
das
push
daa
xchg
push
mov
adc
imul
dec
mov
lret
mov
xor
dec
loope
fisttpl
pop
cmpsb
or
mov
xor
jnp
test
pop
xchg
xchg
sbb
jl
push
pop
out
sarb
and
dec
mov
aaa
cwtl
fdivrs
ret
pop
sub
pop
dec
sbb
push
popa
push
lods
dec
cmpsb
push
into
adc
sub
popf
jmp
lcall
mov
push
pusha
adc
sbb
icebp
adcb
mov
das
mov
addr16
jno
fdivr
orl
inc
aas
sbb
dec
leave
mov
and
ss
fstps
lock
jge
lcall
jno
dec
mov
pop
pop
mov
test
sbb
pop
lds
fwait
and
lcall
push
cmp
push
xchg
jns
sbb
not
mov
lret
pop
xchg
iret
cld
jl
mov
jmp
mov
lcall
shl
sti
sbb
andb
jecxz
cmp
xor
popa
not
ljmp
lods
mov
sahf
push
icebp
pop
in
cmp
ret
cmpsb
orb
negl
mov
jl
cmpsl
sub
push
push
dec
cmp
in
push
push
enter
jb
fwait
lods
daa
or
adc
jbe
dec
fcmovu
scas
cltd
sbbl
std
jmp
sbb
stos
ljmp
imul
loope
push
loope
mov
fs
daa
push
out
adcb
rorl
push
out
mov
sub
push
roll
in
mov
jmp
stc
mov
nop
sti
lds
orl
mov
subb
aaa
sub
cmpl
sbb
or
test
insl
sbb
int
and
mov
es
cld
sbb
test
add
pop
loope
data16
inc
inc
xor
cmp
and
push
or
adc
adc
pop
enter
mov
fwait
jl
inc
sub
test
jp
adc
lods
out
dec
dec
jbe
pop
lcall
sbb
xor
daa
pop
bnd
out
stos
mov
mov
adc
cmp
dec
jl
and
ret
lods
int
es
fisubrs
mov
inc
into
int3
add
aad
cs
and
jns
int3
xchg
inc
test
xchg
xor
jecxz
addr16
sbb
jmp
push
jecxz
mov
mov
jno
insb
cld
in
or
mov
inc
dec
sub
int
sti
dec
dec
xor
bound
add
mov
push
jnp
pop
repz
xor
mov
gs
cwtl
outsb
jno
jmp
pop
cs
xor
std
inc
jge
imul
cwtl
jecxz
push
mov
pmuludq
fcompl
pushf
pop
in
sub
dec
or
in
enter
inc
lods
std
sub
repz
xor
enter
add
lods
cmp
into
mov
fmul
or
orl
out
sub
mov
dec
dec
pop
xchg
movsl
rcrl
lahf
fdiv
mov
sahf
xchg
push
sub
pop
pop
inc
mov
pushf
ret
cwtl
rcr
inc
mov
cmp
push
roll
add
aad
adc
enter
shl
addr16
hlt
push
je
adcb
fmuls
sarl
and
cmc
inc
sbb
fs
push
jb
add
jge
inc
addb
into
jl
shr
bnd
test
add
push
scas
pop
jg
mov
xor
popf
subl
and
and
in
rorb
cmp
fstp
call
push
inc
jge
pop
xor
lahf
shrl
repnz
xchg
sarl
or
push
or
pop
je
mov
xchg
mov
scas
mov
sub
jg
clc
or
xchg
cmp
out
mov
dec
int3
in
decb
or
pop
xor
in
push
les
lods
pop
lea
lock
enter
or
in
jne
mov
scas
jbe
add
lods
inc
cli
cmpxchg
add
and
mov
repz
aad
mov
jge
xor
loope
shlb
movsb
sahf
xchg
dec
mov
adc
xor
repz
dec
out
or
xchg
clc
adc
mov
int3
std
lock
inc
in
ljmp
jmp
push
int3
lods
aam
mov
dec
mov
out
dec
mov
out
inc
movsb
pop
pusha
push
movsb
scas
aaa
sbb
test
sub
pop
lahf
movsl
outsl
pop
xor
jle
mov
dec
enter
cli
mov
std
sub
mov
xchg
ror
scas
dec
inc
cmp
arpl
aam
ss
mov
pop
stc
bound
push
dec
sbb
cld
xlat
xor
div
mov
stos
pop
push
cmp
mov
mov
hlt
or
rcrl
sbb
test
push
cmc
lock
pop
xor
push
ret
xor
xchg
xchg
cli
add
jecxz
nop
mov
push
es
insl
dec
lea
push
inc
addl
mov
lea
movsl
mov
pusha
es
cmpsl
jl
adc
jge
inc
lea
jecxz
jmp
cmp
leave
add
jmp
sub
loopne,pn
stc
or
in
aad
shrl
call
adc
push
outsb
jb
jne
xchg
add
xchg
shr
call
sbb
jg
inc
out
jg
mov
rcrl
lds
fwait
pop
xorl
sub
nop
or
enter
aam
or
inc
enter
pop
xor
jns
sub
cwtl
jae
push
std
xor
stos
outsl
add
add
loope
mov
test
fbstp
stos
iret
incl
and
pop
push
jae
ja
hlt
lods
cmpsl
mov
or
mov
cmp
ds
mov
idiv
mov
int
dec
stos
stos
fistpl
faddl
test
sbb
ljmp
and
sti
mov
aam
shlb
sub
cmpsl
adc
push
pop
inc
jmp
gs
enter
sbb
inc
stos
cmp
jge
fidivs
mov
fwait
mov
icebp
mov
popf
sbbl
aad
mov
ds
mov
xorb
and
sarb
inc
aas
fmuls
mov
mov
dec
dec
ret
scas
dec
aam
and
and
xor
sub
xchg
repnz
add
inc
sbb
rclb
int3
jmp
dec
push
push
clc
pop
jecxz
xchg
inc
jb
jne
stc
pop
repz
pop
or
insb
stc
insb
cmp
xlat
sbb
clc
mov
pop
jge
les
pop
rcrb
mov
jae
jp
xor
imulb
mov
add
mov
mov
in
popa
lahf
lods
adc
int
and
jnp
insb
fwait
jge
loope
push
movsb
ss
sub
aam
je
add
pop
mov
daa
or
lret
out
mov
adc
adc
inc
mov
fcmovb
sbb
xor
mov
adc
rorb
sub
cmp
mov
fucomp
push
ja
lods
in
or
stc
mov
fstpt
sbb
ret
sub
mov
orl
in
sub
cld
push
push
push
mov
xlat
add
mov
stos
inc
repnz
subb
shrb
mov
sub
es
lahf
test
popf
push
repnz
xchg
and
inc
xor
pushf
loope
je
or
push
daa
jno
pop
pushf
jb
push
cwtl
dec
sub
testl
jmp
icebp
and
fcompl
scas
enter
mov
fs
lcall
mov
into
out
addr16
xchg
ja
popf
out
push
sbb
loopne
fstl
cld
pop
inc
pop
rolb
xor
mov
lret
arpl
cmp
and
push
outsl
cmp
movsl
inc
lahf
popf
test
leave
cmp
aad
fistl
jmp
push
sbb
cmp
gs
scas
or
dec
inc
dec
lea
subl
rol
fimuls
jnp,pn
fimull
cld
fstpt
inc
or
jnp
sub
or
push
inc
cmp
repnz
arpl
mov
cwtl
out
sti
inc
dec
sub
arpl
stos
mov
dec
popa
sbb
xor
mov
xchg
mov
aas
mov
sub
insl
mov
jnp
push
cmpsb
test
adc
xchg
mov
loope
out
jg
adcl
leave
ss
aas
pushl
mov
or
cmp
sub
gs
mov
fbstp
inc
adc
jecxz
out
xchg
pop
add
inc
push
roll
outsb
fsubs
add
test
push
ret
mov
jmp
push
sti
xchg
repz
je
sub
mov
sub
pop
xchg
fsubl
fsubl
lret
or
out
fidivrl
sahf
add
xor
cmpl
divl
xor
inc
gs
push
mov
push
mov
adc
lods
or
or
lret
iret
sbb
out
cli
lods
out
insb
fdivrl
idivl
sub
pop
or
neg
test
push
bound
mov
lods
mov
rcrb
xor
push
repz
icebp
pusha
xor
mov
mov
rolb
or
xor
jne
mov
movaps
cmp
add
cld
sub
mov
add
cld
sub
or
jmp
add
jno
push
mov
stos
lahf
lcall
xor
cld
rol
adc
scas
dec
data16
std
xor
sub
jmp
cmp
xlat
cmp
sub
cltd
es
mov
cmpl
out
sub
nop
pop
and
jnp
or
mov
inc
jge
or
push
push
mov
pop
sbb
lret
call
and
pop
and
insb
das
cmpsl
or
xchg
or
jbe
scas
mov
lds
dec
sbb
pop
dec
bound
cmp
int
lods
xchg
pop
adc
dec
pushf
in
cmp
add
push
fucomi
sahf
int3
lret
dec
mov
xchg
mov
adcb
test
jecxz
in
sarl
scas
hlt
add
sarb
ljmp
movsl
xor
mov
mov
adc
call
mov
or
leave
lret
test
cmp
outsb
adc
xor
add
push
cmp
aam
out
in
dec
adc
lahf
iret
jb
xchg
orb
in
inc
adc
or
mov
lahf
outsl
xor
fisttps
jecxz
xchg
call
xor
jne
rorb
mov
ljmp
mov
mov
sub
pushf
adc
imul
add
outsl
cmpsb
inc
daa
scas
aas
lods
adc
or
outsl
sbb
in
sub
push
add
pushf
dec
sahf
xchg
sub
mov
inc
adc
or
pop
stos
sub
pop
jno
test
mov
xor
sarl
aas
dec
sbb
gs
pop
mov
jmp
ljmp
stos
sbb
pop
incb
js
jb
movsl
xor
imul
adc
in
pop
in
adc
or
insb
cmpsb
in
cmp
push
repnz
roll
xchg
dec
test
mov
pushf
pop
int
mov
adc
jo
adc
adc
loop
mov
sub
xor
sbb
xor
call
push
sbb
pop
jns
sbb
sbb
xchg
in
mov
sti
loopne
adc
cmp
inc
push
add
mov
lcall
enter
shl
mov
jge
sub
push
add
inc
lret
vmptrld
adc
cmpsl
out
mov
je
rclb
inc
ret
adc
push
clc
or
mov
lods
in
mov
add
in
jmp
mov
add
adc
push
jle
xchg
mov
lds
imul
mov
push
out
push
leave
or
in
sbb
pop
or
imul
mov
subb
mov
loope
cs
mov
cmc
inc
mov
je
xor
or
cmp
popf
mov
push
aad
call
push
pop
sub
xchg
push
cmpl
sbb
leave
mov
out
and
popf
lea
dec
sub
and
in
sub
xor
mov
inc
xchg
mov
loop
mov
lea
mov
push
cmp
mov
test
pop
popf
clc
jl
sbbl
xor
addl
jp
cmc
xchg
movl
adc
pop
jg
pop
push
cli
outsl
repnz
outsb
cwtl
sub
stos
in
push
push
and
mov
mov
outsl
sub
insl
push
pop
imul
sbb
cmc
mov
scas
push
push
sahf
jge
mov
mov
add
es
pop
jbe
push
mov
mov
jecxz
das
adc
movsb
cmpsl
cmp
inc
push
call
push
aam
xor
pop
test
cli
stos
mov
mov
dec
push
in
ret
sub
sub
sbb
into
mov
adc
fldenv
idivl
ret
cli
es
or
gs
pop
popa
stos
stc
lahf
scas
fadd
inc
jnp
cs
popa
test
insb
sbb
adc
lahf
inc
rcll
cld
jg
add
rcrl
lret
aad
test
cmp
sbb
outsb
aam
fildl
sub
mov
gs
cmp
aas
and
repz
repz
scas
cs
repz
xchg
and
adc
inc
cmc
sahf
test
mov
ljmp
rcrl
adc
dec
ljmp
mov
les
add
cmpsb
mov
cmp
std
sarb
push
mov
push
jnp
push
adc
je
test
push
lods
mov
repz
jno
es
push
adc
dec
hlt
stc
insb
mov
in
xchg
inc
or
adc
mov
lret
xor
sahf
xchg
inc
imul
int3
add
subps
ror
jmp
loop
outsb
mov
pop
add
cwtl
pusha
jmp
movsl
data16
imul
aad
cmp
jmp
sti
dec
iret
xchg
aas
push
repz
outsb
aaa
adc
inc
pop
inc
jnp
or
fcomps
xchg
jle
popf
mov
mov
mov
mov
fdivrs
cmp
sub
insl
lock
inc
pop
mov
jle
inc
outsl
push
fs
dec
sahf
mov
pop
sub
xchg
cltd
test
mov
xor
jae
or
mov
pop
scas
pop
cmpsl
jbe
and
fs
and
test
cwtl
xorb
loope
cmp
mov
daa
subl
dec
clc
sarb
iret
jno
add
ds
xchg
mov
pusha
xchg
jnp
mov
test
hlt
pop
mov
aas
ss
mov
xor
push
fsubrp
sbb
cmp
dec
arpl
or
push
frstor
push
cltd
in
jle
cmp
lcall
loopne
xor
sub
mov
lock
lcall
push
add
fcmovnbe
sub
cmpsb
into
loop
jecxz
out
aad
arpl
mov
cli
mov
xchg
out
xorl
in
push
out
adc
xchg
jae
pop
sub
lods
jecxz
and
pusha
sbb
jecxz
out
mov
mov
in
add
mov
outsl
shl
mov
fs
ret
fwait
ret
or
inc
and
in
cmpsb
xchg
int
mov
xchg
in
out
popf
ds
call
addr16
inc
jne
or
scas
cltd
lahf
push
nop
test
xor
or
jecxz
mov
lcall
iret
cwtl
and
push
mov
js
mov
ret
adc
adc
xchg
sbb
jg
dec
imul
es
lcall
and
pop
pop
dec
sbb
inc
movsb
pop
lcall
jns
dec
fimuls
shlb
inc
repnz
loope
sub
pop
or
addr16
cmp
ljmp
xor
scas
dec
sub
lret
pop
or
mov
jbe
add
and
sbb
pushf
jne
dec
or
lret
and
lods
in
popa
bnd
stos
jecxz
push
cmp
or
vpsubq
lret
out
fwait
xchg
loop
loopne
push
cmp
jo
in
mov
sub
inc
xlat
cmp
lea
pop
fld
ret
inc
xor
inc
fadd
insl
leave
inc
and
mov
xchg
pop
mov
cmp
mov
sbb
jmp
fidivrs
pop
add
into
imulb
xor
lcall
add
mov
jle
mov
mov
stos
or
pop
mov
cmp
mov
pop
dec
cmpsl
je
dec
nop
js
xor
mov
cmp
and
xchg
fisttpl
sub
sbb
rcll
mov
test
mov
pop
lahf
xor
scas
pop
lods
divb
adc
ds
fnstsw
mov
jmp
hlt
mov
inc
repz
jo
sbb
pop
jne
bound
adc
jge
mov
add
ret
loopne
jecxz
jo
cs
mov
adc
daa
scas
lcall
shll
outsl
xor
mov
and
xchg
jnp
into
popf
jecxz
sbb
les
or
adc
roll
lahf
stos
cltd
inc
cmpsl
scas
mov
sti
sub
push
inc
outsl
shrb
popf
sub
pushf
add
cwtl
dec
sbb
or
mov
pop
jl
jmp
xchg
rcrl
pop
inc
push
mov
fcoms
mov
movsb
push
lahf
hlt
sbb
sub
clc
ret
mov
fisttpll
mov
test
pusha
jae
add
dec
pop
and
push
fimull
cmc
dec
cmp
cli
mov
xchg
mov
adcb
pop
icebp
pop
inc
adc
lret
ror
sbb
sbb
out
stos
pop
xchg
pushf
mul
into
sub
es
jne
cmp
aas
and
cmp
ret
fsubl
iret
loope
and
addr16
movb
jns
outsl
insb
cmpsb
dec
xchg
scas
lret
bound
arpl
data16
sbb
inc
out
mov
lods
iret
dec
and
call
call
pop
push
stc
sbbb
js
dec
pop
enter
mov
fstpl
in
xor
repz
cmp
and
xchg
pusha
dec
lods
cwtl
mov
xchg
pop
clc
cwtl
inc
mov
jg
test
push
ds
lret
aam
add
cmpsl
and
pop
xchg
pop
jno
cltd
and
inc
mov
xchg
test
or
lock
mov
stos
cmpl
ljmp
out
loop
icebp
popa
pop
push
adc
outsl
insl
jbe
jge
sub
outsl
or
mov
dec
adc
pop
repz
push
pop
pop
adc
lcall
sbb
pop
fsubp
scas
xchg
sub
ds
je
inc
sbb
pushf
rorl
inc
fmuls
popa
roll
xor
add
xchg
rcl
data16
stos
movsl
and
popa
das
xor
xchg
clc
adc
fs
sarb
push
xor
daa
dec
lds
fisubs
pop
and
in
les
pop
mov
cltd
cmp
pop
sbb
hlt
xor
xchg
xchg
xchg
cltd
jo
in
pop
aas
pop
stos
roll
sahf
sbbl
inc
push
stos
inc
fsub
push
out
jnp
fistl
xchg
mov
stc
test
jge
sub
out
test
ret
adc
test
xchg
xchg
pusha
subl
sbb
push
pop
dec
add
xor
lods
mov
popf
xchg
shlb
lret
pop
mov
std
gs
pushf
cmp
popf
mov
jmp
or
andb
cs
xor
pop
cmpsb
frstor
int3
xor
sub
lods
sbb
iret
ret
ljmp
lret
addr16
pop
fwait
jmp
push
pusha
loopne
mov
das
stc
or
adc
insl
arpl
pop
adc
or
xor
loopne
out
jmp
xor
sahf
ficoml
xchg
call
andb
clc
pop
daa
insl
inc
cld
xchg
loope
lcall
dec
inc
scas
popa
outsl
inc
fidivs
mov
loopne
push
int3
mov
jp
frstor
sub
dec
ss
sub
sbb
or
xchg
or
mov
and
lret
jo
sbb
dec
sti
dec
jg
repnz
xchg
addb
andl
mov
push
dec
cmp
shrb
xor
push
mov
adc
rcrb
into
lods
sbb
cwtl
mov
push
mov
cmp
or
mov
xor
mov
xchg
dec
push
shlb
push
into
dec
inc
pop
push
or
sub
in
sbb
mov
in
sbb
add
mov
dec
pusha
ljmp
or
aas
add
cmp
xchg
adc
fimuls
loopne
fcom
mov
adc
stos
out
push
outsl
inc
in
pop
adc
repz
je
aas
jmp
cwtl
in
mov
inc
jl,pn
and
test
push
lret
xchg
add
and
sub
jle
iret
test
xchg
mov
data16
clc
inc
popf
test
js
leave
sbb
adc
dec
stc
mov
int
sub
in
mov
mov
outsl
call
movaps
mov
xchg
adc
sub
pop
or
cmp
mov
add
and
in
data16
pop
and
adc
dec
std
das
data16
jb
and
mov
adc
iret
push
cmp
icebp
je
xchg
add
mov
mov
sbb
or
rcr
add
jecxz
mov
aas
repnz
add
inc
jle
xor
push
cmp
adcb
in
dec
xor
jg
lods
mov
and
adc
dec
gs
lods
sbbb
pop
ret
popa
cmpsl
sbb
sbb
loop
mov
xor
in
outsl
jnp
jno
mov
sub
ljmp
loopne
mov
ret
test
push
les
pop
push
and
pop
test
je
pop
aam
pop
dec
mov
cltd
push
push
stos
fsubrl
out
cwtl
test
inc
lods
lcall
mov
xor
mov
inc
sub
bound
divl
aaa
cmp
out
push
test
push
mov
fwait
or
adc
stos
jecxz
jl
jne
xchg
sub
pop
push
andl
fwait
and
lahf
popf
jl
mov
pop
cmpsb
jg
outsl
push
test
arpl
or
jge
outsl
dec
lret
int
arpl
je
cmpsl
sbb
sbb
mov
xadd
test
push
xor
mov
xchg
adc
mov
filds
mov
test
shll
loope
repz
jns
dec
adc
mov
out
mov
mov
or
pop
insl
clc
xor
aas
dec
imull
and
xor
pop
mov
cmp
push
add
das
add
popa
mov
push
movsl
push
xor
mov
cltd
mov
lods
out
mov
adc
cmc
and
pop
mov
jb
pop
jmp
jnp
or
ficoms
xchg
loopne
or
fstpt
gs
lock
xchg
popa
pop
inc
mov
arpl
push
dec
push
sub
xor
jle
rcl
inc
adc
faddl
cli
ror
push
mov
int
add
test
cmpsl
in
scas
mov
nop
lret
pop
jno
cli
mov
into
mov
cmc
std
adc
push
pop
jmp
jle
and
popl
pop
cltd
into
jge
dec
mov
xchg
mov
fcomi
pop
stos
ror
dec
std
pop
pusha
xchg
and
cltd
das
jp
mov
xchg
mov
mov
sbb
dec
mov
xchg
dec
sti
test
and
pushl
gs
or
adc
outsl
sub
push
test
data16
shl
sti
mov
mov
jo
jmp
or
outsl
push
hlt
divb
cli
mov
cld
test
les
sub
roll
hlt
sub
data16
push
addb
sbb
lock
into
inc
popa
jns
loopne
xchg
fsubrp
mov
movsb
aaa
add
sti
or
lret
div
std
scas
orl
loope
in
lcall
jl
test
iret
test
test
dec
sub
inc
xor
shlb
xchg
out
das
xor
lods
pop
imul
xchg
push
shrb
pop
cmpsb
mov
mov
icebp
popa
nop
imul
push
ljmp
mov
and
lods
sub
mov
pop
xlat
cli
xchg
cmp
sti
adc
inc
and
xchg
push
xchg
xchg
data16
pusha
lods
pop
pop
mov
stos
add
aam
enter
add
repnz
sbb
fnstenv
push
add
in
das
in
mov
sbb
inc
push
repz
push
jp
jbe
cmpb
inc
or
mov
enter
inc
cmp
or
push
shrb
je
rcrb
inc
push
testb
int
sub
push
jl
mov
xchg
inc
sub
fcoms
push
mov
repz
clc
adc
cmp
fcoms
adc
jae
dec
mov
cmc
mov
lock
sbb
daa
push
repz
ja
push
inc
xchg
insl
cmpsl
sub
sub
jl
cmp
mov
scas
cmp
cmc
es
adc
mov
pop
jbe
fiaddl
sahf
ja
fstpt
mov
dec
sub
cld
je
cmp
fwait
in
xchg
out
push
test
loopne
cld
loope
mov
or
ja
leave
loope
loope
in
mov
xchg
mov
das
out
pop
dec
push
movsl
jmp
push
sbb
aad
out
adc
roll
lock
gs
in
and
aad
sti
jo
sub
into
jb
pushf
mov
int
es
jl
xor
loopne
push
sub
neg
mov
jnp
lret
mov
sbb
mov
popf
jns
scas
mov
in
dec
dec
cwtl
mov
adcb
mov
sbb
sti
fdivl
lods
leave
shl
push
and
sub
incl
jle
mov
mov
scas
and
out
lods
jmp
sbb
das
sub
or
out
xor
popa
mov
in
mov
aad
jl
not
pop
lcall
adc
xchg
aam
jge
jno
std
and
mov
sub
fs
les
add
movsb
int
mov
rcrb
repnz
loope
and
mov
cmp
push
popa
pop
xorl
loop
mov
in
popa
aaa
lcall
loopne
fcomps
stos
dec
out
in
shll
inc
or
adc
mov
cwtl
push
call
xor
lret
loop
pop
cmpsb
outsb
lahf
dec
testl
pop
aaa
pop
jp
in
adc
imul
dec
imul
push
mov
and
mov
mov
nop
idivb
and
shlb
repz
mov
lahf
dec
je
decb
test
adc
cld
popa
int
xlat
jnp
sub
push
loope
fnsave
xchg
and
out
pop
cmc
sti
xchg
mov
cmp
arpl
test
sub
dec
adc
pushf
sbb
lea
xchg
push
jns
aad
lret
movsb
cmp
add
xchg
inc
fs
dec
ljmp
bound
popl
mov
xchg
jl
and
adc
cltd
in
mov
cmc
stos
push
push
daa
push
xchg
xchg
push
dec
stos
decl
push
lds
xchg
out
das
call
les
mov
loopne
xor
jns
jo
fisttpll
push
mov
pop
mov
pop
jns
hlt
and
mov
jo
mov
sub
nop
inc
lods
test
cmp
mov
push
xorl
sbb
add
in
andb
popa
lahf
pop
mov
jae
mov
call
ja
fwait
adc
adc
sti
xchg
sbb
inc
ja
test
sub
sbb
inc
mov
jp
outsl
dec
fs
jg
lahf
lret
dec
adc
inc
dec
scas
cmp
cs
jp
into
cltd
lea
xchg
sub
jl
cwtl
ja
ror
jbe
hlt
mov
and
mov
or
shrl
inc
jae
inc
mov
pop
icebp
test
mov
xor
mov
mov
cld
or
jnp
mov
enter
cwtl
pop
add
imul
scas
mov
outsl
pop
pop
jle
mov
or
mov
stc
jp
fwait
icebp
inc
or
pop
push
ret
or
xor
ja
mov
cld
dec
or
jo
aas
and
jbe
push
lret
dec
mov
sbb
mov
xchg
and
mov
jnp
flds
sub
roll
inc
mov
faddl
cli
sahf
js
jg
mov
mov
in
dec
push
xlat
in
sbb
loope
xchg
or
pop
jge
push
mov
sbb
xchg
sahf
int
jmp
test
and
imul
cwtl
movq
pop
adc
scas
and
push
dec
pop
out
push
lds
mov
and
mov
out
dec
jnp
xor
add
aad
push
add
shrl
pop
das
arpl
mov
pop
rcl
dec
jp
enter
jnp
mov
mov
mov
jmp
jno
push
repnz
add
in
jle
xchg
mov
stos
clc
add
xchg
and
out
fsubp
rcl
sub
lahf
or
dec
and
push
movsb
cwtl
add
pusha
aad
cmc
aad
add
ret
push
xchg
jno
push
push
jg
lahf
mov
push
xchg
scas
sub
sahf
adc
push
xchg
mov
leave
push
xchg
push
aaa
ljmp
dec
int3
popf
xchg
in
dec
lock
cmp
push
inc
lds
pop
dec
sub
adc
popa
fcmovnbe
sbb
call
sub
ret
mov
test
and
or
jno
sub
test
lahf
mov
add
movsl
adc
icebp
xor
inc
mov
lret
xchg
lret
imul
add
fstps
iret
addr16
cmp
mov
sbb
enter
xchg
shlb
mov
sbb
out
or
cmpsb
lcall
mov
jae
in
popf
mov
enter
out
cmp
sub
cltd
mov
test
stc
push
test
mov
mov
mov
iret
scas
adc
addl
cmp
outsb
and
push
testl
cmpsb
push
xchg
inc
push
nop
mov
aad
pop
mov
push
dec
push
sarl
dec
pop
sbb
pop
test
addr16
cmpb
in
test
loopne
sub
cltd
mov
aad
repz
sbb
mov
inc
fistpll
data16
sarl
pop
jmp
mov
sub
test
ss
ret
imul
in
gs
jmp
fbld
xchg
sbb
mov
adc
test
js
lahf
add
adc
push
shlb
in
pop
jns
aam
repnz
push
sub
stos
mov
xorb
mov
xor
sahf
dec
push
shrb
int3
das
dec
cmp
and
dec
and
test
cmp
in
cli
and
sbb
arpl
iret
outsb
insb
sarl
loopne
jno
out
mov
stc
jg
aam
dec
jbe
popa
or
pop
jne
pop
nop
xchg
mov
andb
dec
sub
mov
imul
clc
and
push
inc
into
iret
sbb
repz
xchg
shlb
enter
and
push
mov
sbb
pop
test
adc
sbb
imul
mov
ja
in
sub
cli
push
add
push
mov
fs
lret
test
clc
mov
pop
cs
add
lods
xchg
or
in
or
push
js
adc
sar
xchg
jb
loop
jmp
cmp
sbb
loopne
xchg
fisubs
lret
decb
mov
ja
or
lock
mov
popf
cmc
mov
or
lods
mov
dec
mov
int
sbb
sarb
sub
ret
in
sti
cmc
mov
add
cmp
jge
cmp
aam
movsl
in
subb
out
in
imul
or
popf
lods
shll
rclb
or
pop
mov
es
aaa
add
push
cli
sub
pusha
jno
and
out
filds
dec
ss
test
mov
mov
mov
add
mov
push
lds
jmp
mov
or
stos
fs
nop
cmp
leave
enter
push
jno
mov
push
pop
ret
pop
shl
jns
out
in
xor
xchg
into
inc
test
mov
mov
ret
lock
mull
es
int
sbb
xor
sbb
je
adcl
adc
add
adc
jg
ret
in
cmp
int
subb
ss
lds
xchg
inc
fsubrl
stos
jle
rol
stos
int3
not
jne
push
mov
outsl
and
test
mov
fiadds
in
insb
in
test
jp
push
or
adc
lret
xor
pop
rorl
inc
and
sbb
jnp
jnp
add
movsb
xchg
mov
cmpb
stos
fwait
dec
popa
dec
in
mov
jle
cmpsl
fistps
xor
push
ret
or
gs
je
push
ret
hlt
cs
xor
outsl
mov
int3
inc
pop
shl
jp
call
into
mov
ret
or
add
ja
data16
mov
into
xchg
xor
sub
clc
dec
mov
fildll
pop
pop
mov
std
inc
sbb
jb
outsl
inc
add
xor
pop
jae
out
in
mov
add
aam
movl
push
imul
mov
mov
mov
movsb
test
add
bnd
test
mov
pop
cmp
jne
xchg
das
mov
dec
or
iret
aam
popf
test
mov
in
sbb
pop
andl
or
dec
inc
and
gs
sahf
subb
inc
aad
test
insb
scas
insl
sub
mov
movsl
scas
or
jl
cmp
or
jmp
into
insl
repz
push
jo
cmp
shrl
cmpsb
push
xor
xor
dec
add
inc
or
push
mov
imul
mov
loop
jle
aam
shrb
in
cmp
push
cmpsl
sub
push
xor
mov
shll
sbb
sub
push
enter
add
dec
jp
adc
and
jmp
mov
jecxz
inc
mov
jns
pop
cli
add
add
adc
xchg
mov
xor
jl
push
imul
xor
lock
jae
out
jle
pop
push
inc
je
xchg
mov
repnz
jg
mov
in
inc
bound
test
call
imull
rol
arpl
push
sub
fisttps
mov
std
repz
sbb
repz
xchg
clc
jbe
adc
es
mov
sub
nop
test
popf
push
dec
shrl
jnp
jge
add
repz
nop
mov
pop
dec
inc
aaa
sbb
test
lcall
nop
xchg
nop
xlat
scas
jp
sti
cmp
jl
inc
xchg
adc
xor
cmp
mov
data16
mov
jb
fists
iret
jecxz
mov
mov
mov
xchg
outsb
je
and
jge
aaa
jo
mov
dec
xor
daa
shr
pushf
adc
pop
push
xchg
mov
mov
adcl
scas
cmp
dec
shrb
push
pop
jo
pop
ret
adc
sbbb
ss
scas
hlt
mov
dec
mov
test
mov
mov
or
leave
rolb
ja
je
adc
cs
test
push
enter
fdivs
call
or
ret
scas
push
mov
jle
and
rcll
je
pop
dec
cmp
add
pop
and
movsb
jae
stos
lahf
or
mov
adc
inc
into
mov
das
invd
jo
out
adc
add
adc
push
data16
into
xor
int
xchg
or
dec
inc
xchg
jb
pop
jb
fdiv
out
add
mov
icebp
jp
into
js
cld
call
jl
nop
sub
push
dec
scas
ss
stc
lret
adc
mov
shr
sub
insb
dec
mov
mov
and
aad
sub
sahf
inc
das
daa
bnd
lock
mov
and
sbb
lcall
push
cld
cs
push
nop
and
jo
cli
push
mov
lret
push
push
jbe
push
adc
jne
jp
mov
cs
xor
and
jo
scas
leave
nop
divl
mov
jg
mov
add
xor
pop
out
dec
or
jecxz
insb
lds
cmp
xchg
jnp
xor
mov
inc
jnp
loop
sbb
test
pop
mov
sbb
xchg
filds
pushw
std
inc
cwtl
mov
cmp
dec
mov
arpl
mov
stc
enter
fst
jg
popf
pop
cli
leave
push
outsl
int
dec
dec
and
out
dec
xor
jge
loope
and
xor
dec
mov
int3
cltd
xchg
sbb
push
imul
sbb
lds
jge
mov
cmp
xchg
sbb
xor
push
ljmp
xchg
iret
dec
sbb
jbe
repz
cmp
ret
cwtl
ds
mov
mov
push
mov
hlt
pop
cwtl
shrb
fs
inc
jmp
xchg
pushf
pop
inc
fstpl
rclb
popa
aad
xchg
or
int3
imul
pop
dec
add
lcall
fisubl
mov
popa
lcall
push
sub
sbb
dec
cmp
stos
popf
cmpsl
arpl
in
inc
xchg
stc
mov
or
fcompl
mov
stc
cmp
hlt
mov
pop
fisubl
cmpsb
imul
mov
addr16
xchg
cmp
iret
push
sub
add
ficomps
jne
or
mov
fisubrs
pop
jge
repz
adc
movsl
cmpsl
mov
pop
aad
mov
mov
and
call
and
idivl
loope
sar
dec
les
out
pop
dec
xchg
in
out
fsubrs
push
inc
in
mov
call
outsl
sub
addr16
ss
in
lret
mov
xchg
jl
jle
int
loop
aad
xchg
lret
cmc
inc
and
dec
or
sbb
dec
icebp
mov
jbe
iret
mov
xor
or
mov
mov
push
aaa
dec
fdivrp
popa
sbb
adc
push
adc
cmp
mov
in
sbb
into
clc
cmc
xor
insb
stos
cld
cmp
icebp
xchg
jno
popf
cmp
jl
cltd
and
lds
pop
imul
test
cmp
insb
fwait
adc
filds
adc
ret
outsl
jne
lock
inc
pop
or
pop
les
insb
pop
ror
push
xor
inc
cmp
jg
push
in
pop
arpl
dec
gs
mov
imul
jb
push
jbe
popl
mov
jno
push
mov
fiadds
xchg
xor
add
enter
xor
insb
sbb
add
or
inc
mov
push
cmp
xlat
push
leave
cli
xchg
stos
test
mov
loop
push
jecxz
sub
push
jo
mov
push
add
pop
mov
test
es
imul
dec
jno
lds
push
cs
or
add
mov
sbb
pop
fnstcw
xor
clts
test
pop
mov
push
cmpsl
out
mov
push
xor
sbb
push
sbb
xor
cli
repnz
js
adc
scas
lock
adc
adc
sub
sub
lahf
lea
and
cmovo
aaa
filds
add
fcompl
lds
adc
mov
adc
movsb
insb
push
mov
shl
and
in
stos
ret
push
mov
enter
cmp
ds
test
pop
les
out
pop
sub
fsts
or
adc
iret
lahf
sbb
push
xor
sbb
cli
lcall
int3
xorb
xchg
ja
fmuls
push
jl
bound
sub
pusha
inc
jmp
add
js
jmp
loope
dec
push
aam
test
and
popa
jmp
cmp
inc
popf
dec
cmp
dec
in
div
mov
mov
mov
jns
fstps
bound
out
dec
xchg
cmc
xchg
mov
inc
mov
mov
stos
or
cmpsl
push
movl
adc
jno
jns
mov
mov
jp
stos
fldt
sub
mov
addr16
mov
lret
or
aaa
jb
or
mov
pop
pop
mov
sbb
rorl
scas
jp
leave
jbe
cmp
or
dec
aaa
sub
movsl
mov
jp
jb,pt
ffree
mov
out
dec
dec
in
fnstsw
mov
pop
push
mul
aas
sub
xor
inc
xor
ret
pop
aad
mov
adc
sub
ja
leave
jo
mov
jmp
pavgb
lea
fstpl
adc
bound
xlat
sbb
xlat
mov
add
jmp
add
jns
repz
xchg
lea
inc
pop
lock
cld
jg
mov
sub
int
push
dec
lret
add
ljmp
push
fs
jg
pop
ss
jp
addl
lret
sbb
cmp
aad
shlb
sarl
adc
and
sub
mov
inc
sbb
out
cld
jns
xor
jae
push
hlt
and
cmp
sub
je
add
imul
cmpsb
pop
dec
mov
pusha
cmp
jmp
lea
scas
xor
push
mov
fldt
sub
fsts
push
fnstsw
in
xor
add
xchg
xlat
or
stc
fnstcw
push
scas
inc
out
js
mov
mov
jecxz
and
test
or
cs
nop
lret
sbb
inc
mov
jmp
push
jns
xchg
sbb
dec
sub
sti
dec
sbb
jmp
addr16
push
out
or
int
mov
test
loop
sbb
hlt
ficoml
ret
sti
fildl
fdivs
mov
cmp
repnz
adcb
inc
divb
add
and
pop
sbb
mov
inc
idivl
cmp
cmpsb
mov
out
ljmp
loopne
adc
mov
enter
lret
jp
rorl
in
cmp
xor
jbe
mov
cltd
mov
fmul
repnz
dec
outsb
inc
add
and
das
mov
push
mov
xchg
fwait
push
out
fsubrl
or
in
lret
jg
ret
push
mov
ja
xchg
xchg
cmp
sub
jns
imul
in
cmp
push
test
lods
das
xor
sti
inc
js
clc
outsl
fcmove
iret
cmp
fsubrs
fdivrs
int3
push
pop
and
adc
das
outsl
dec
popf
cltd
dec
call
out
roll
arpl
das
imul
sahf
push
and
in
xor
into
xchg
cli
and
fs
shll
xlat
jle
ja
xchg
pop
jecxz
inc
stos
sub
mov
popf
push
or
jne
adc
pop
mov
loop
xchg
sbb
mov
das
aam
js
jecxz
sbb
leave
out
aaa
in
pop
sub
cwtl
notb
outsl
cmpsl
pop
sbb
or
test
dec
sub
and
lods
cmp
pushf
lcall
movsb
mov
out
fsubrp
addr16
mov
sahf
pop
outsb
jle
pop
iret
outsl
cmp
insl
fucom
mov
aam
andb
pop
hlt
xlat
into
stos
inc
fildll
data16
bound
sub
inc
add
aam
sub
call
cwtl
sub
sub
sarl
sbb
jge
pop
ret
dec
aam
or
inc
clc
push
jne
sub
jae
jbe
sbb
test
jbe
cli
rcrb
cmova
xlat
mov
es
sub
ds
int
jl
push
imul
mov
enter
push
cmp
mov
push
out
xor
lret
push
pop
push
clc
xor
adc
mov
xlat
int3
popa
out
notb
je
cmpsl
orb
dec
add
mov
add
pop
stos
cmp
push
mov
stc
add
push
call
addr16
jmp
scas
mov
stos
not
insl
mov
xchg
mull
testb
dec
adc
xor
dec
fisttps
xchg
dec
adc
adc
adc
in
bound
dec
arpl
push
aad
loopne
mov
jo
test
aad
add
adc
jmp
mov
fwait
xchg
xchg
sbb
mov
bound
popa
in
ja
dec
push
add
sub
fwait
xchg
mov
mov
xchg
xchg
imul
or
jae
ja
mov
lods
clc
push
loop
psraw
mov
pusha
push
sub
loopne
js
xor
ret
loope
mov
mov
jns
fcoml
mov
pop
push
int
es
imul
test
adc
cld
adc
scas
mov
sbb
jl
cmp
ret
js
pushf
mov
cmpsl
mov
cmp
aas
sbb
cmp
lods
dec
imul
xor
ja
xor
cld
jp
pop
aam
pop
enter
jbe
jecxz
lea
mov
loope
jae
xchg
pushf
or
pop
movaps
xchg
lahf
jg
mov
push
into
bnd
ja
repnz
mov
sbb
arpl
mov
cltd
jl
sub
xchg
xchg
adc
xchg
out
bnd
mov
cs
xchg
mov
push
call
cli
aas
outsb
leave
push
in
mov
xchg
adc
inc
adc
lret
fimull
mov
fsts
int3
adc
mov
or
mov
cwtl
mov
ds
adc
xchg
or
sti
jno
and
mov
imul
mov
dec
mov
cmp
loopne
and
add
cmc
dec
push
loop
aad
xor
cmp
sub
cmpsb
cli
pusha
xchg
shlb
sub
inc
aad
jmp
adc
nop
adc
in
data16
mov
arpl
fildl
pop
or
sub
ret
mov
pop
xor
cmp
add
cmc
in
mov
fwait
aas
xchg
pop
xor
push
loopne
xchg
dec
sbb
ffree
mov
mov
cmp
or
push
rolb
jnp
repnz
mov
pop
arpl
sahf
ljmp
aam
mov
mov
mov
jmp
fiaddl
add
xchg
mov
jbe
icebp
cld
loopne
mov
push
test
xlat
mov
test
mov
lret
adc
and
bound
cld
ret
xor
adc
lds
shll
xorl
shll
adc
popf
and
mov
hlt
in
or
mov
ja
sub
cltd
jae
outsl
and
nop
sbb
xchg
push
fwait
rolb
cmc
pop
and
bswap
addb
jp
cmp
mov
data16
lea
push
arpl
push
loopne
movsb
sahf
mov
xchg
push
lret
sbbb
pop
cmpsl
ret
test
adc
inc
xchg
pop
arpl
xlat
nop
mov
push
movhps
test
pop
sbb
gs
movsb
outsl
cmp
fcos
mov
jbe
dec
jmp
push
lock
mov
lock
add
mov
je
mov
inc
stos
xor
jl
jp
mov
repnz
push
shlb
gs
sub
loopne
pop
test
sbb
cmpl
push
fnsetpm(287
mov
inc
pop
insb
and
inc
add
sbb
fwait
or
pop
rcrl
xor
jne
and
dec
and
push
push
push
sub
mov
loop
adc
mov
stos
pop
adc
clc
addl
push
cmp
inc
mov
rclb
rcl
orl
cmp
cld
adc
cmp
mov
stos
lahf
inc
cmp
lahf
dec
dec
dec
cmp
ret
pop
fildll
sbb
in
hlt
push
fimuls
mov
dec
pop
daa
pop
fcoml
out
jecxz
ja
cmp
sbb
call
or
pop
add
mov
dec
mov
mov
inc
or
push
lcall
jnp
scas
add
lods
insb
dec
shl
or
xor
test
and
imul
fmull
mov
push
inc
mov
ljmp
stc
or
inc
sbb
in
nop
push
pushf
mov
jbe
stc
push
mov
jle
cwtl
fisubrl
pop
nop
mov
nop
or
cltd
fimull
test
mov
aaa
cmp
stos
sbb
cmp
inc
xchg
cmpsb
mov
ret
out
insl
loopne
sub
inc
add
and
inc
mov
test
popa
and
and
idiv
pop
inc
mov
hlt
imul
inc
int
aam
int
sarl
hlt
imul
fidivrl
daa
mov
dec
xor
push
pop
push
popa
in
lret
orl
xchg
loope
fildll
dec
lock
fsubs
dec
sbb
lock
sub
add
mov
popl
mov
push
push
rolb
nop
daa
xchg
in
cmp
cmc
push
sbb
int3
sub
pop
xchg
xchg
popa
jae
in
into
loope
inc
sarb
popf
mov
add
loopne
push
hlt
or
je
cli
dec
cld
push
call
mov
loopne
scas
shrb
lcall
mov
std
xchg
in
aas
mov
jae
ret
inc
sub
int
xchg
into
lods
fsubrl
es
xor
adc
out
repnz
lret
int
xchg
mov
adc
dec
add
xchg
sbbb
bound
inc
jp
mov
repnz
int
andl
jp
sbb
and
movsl
adc
or
mov
ljmp
push
sbb
data16
inc
ss
xchg
sub
mov
pop
push
ret
sub
scas
sbb
cmpsl
rcll
gs
jp
jo
xor
scas
or
shrl
gs
ja
push
pushf
js
mov
dec
fadds
mov
sti
jmp
lret
popf
ljmp
decl
cmp
inc
push
jne
and
add
cmp
mov
fildll
push
lock
out
rolb
xchg
std
dec
sub
mov
pop
pusha
scas
and
daa
rorb
in
lahf
mov
daa
adc
and
lock
mov
or
dec
cmpsl
js
je
or
adc
jbe
adc
jb
mov
iret
scas
jae
lods
ret
push
and
clc
out
and
data16
add
xor
addr16
movsl
add
std
addr16
pop
enter
push
loopne
and
es
lea
inc
jle
shlb
lods
mov
sar
fcomps
and
inc
mov
dec
subb
in
sub
add
pop
inc
std
bound
add
or
aaa
addr16
cmpsb
cmc
push
mov
stos
das
ret
add
add
pop
dec
inc
shrl
repnz
push
xchg
rol
sbb
std
js
push
inc
push
dec
pop
fstl
mov
and
inc
dec
xchg
mov
jnp
shll
jge
push
movsb
mov
push
sti
cltd
and
loopne
sbb
inc
lods
mov
or
jg
sbb
sbb
or
add
popa
sbb
push
enter
aad
jne
and
and
mov
hlt
jne
mov
mov
adc
lods
rcrl
mov
pop
sub
sub
xor
es
lret
out
xor
mov
mov
lcall
push
mov
mov
jecxz
jmp
push
jae
adc
lret
sbb
inc
sti
loope
daa
xchg
add
ds
jl
test
and
inc
ret
rolb
sbb
push
adc
subb
or
insb
jle
and
movsl
leave
icebp
jns
xchg
jbe
shlb
movb
fcompl
ljmp
sub
or
push
jae
cmpsb
and
ja
call
mov
mov
fcomi
outsb
test
xor
aad
int
loopne
loopne
pop
dec
orl
xor
mov
xchg
hlt
cmp
mov
mov
out
and
test
or
pop
cmp
enter
jo
outsl
cmp
or
or
push
cmp
dec
xchg
out
push
into
adc
jnp
pop
pop
xchg
stos
sub
pop
lock
xchg
shrl
cmp
mov
cwtl
pop
sbb
push
dec
imull
ret
sahf
dec
inc
cmpl
xchg
add
push
cltd
lds
imul
mov
std
pusha
push
mov
xor
lock
popa
cmpsb
push
pop
cmp
mov
and
insl
and
jbe
neg
jno
dec
pop
jge
js
aad
dec
shrb
addl
lahf
mov
test
cltd
xchg
cmpsl
adc
sub
jne
lods
cmovbe
daa
jb
pop
clc
and
test
test
popf
xor
push
jecxz
es
div
fdiv
mov
add
dec
xlat
xchg
iret
hlt
inc
mov
rol
stos
lock
dec
xchg
inc
sbb
pop
shrb
cmc
imul
cmpsl
repnz
andl
push
adc
dec
mov
mov
or
xchg
lahf
clc
lds
mov
pop
lds
aad
cmp
mov
add
adc
jp
gs
cwtl
iret
rorb
jmp
out
and
or
add
outsb
push
xbegin
inc
pop
outsl
add
int
imul
cli
imul
mov
pop
dec
fidivrl
ret
mov
stc
xchg
cmc
mull
fiadds
or
mov
pushf
sbb
adc
mov
sarl
mov
inc
mov
test
mov
fwait
mov
or
je
xor
imul
mov
pop
add
cmpsl
jp
dec
mov
or
push
sbbl
push
popa
push
sbb
add
and
xchg
cld
inc
stc
dec
dec
iret
cmpsl
and
lds
add
iret
mov
addr16
pop
xor
hlt
add
sbb
pop
xchg
fistl
outsb
xchg
sbb
cmc
cmp
in
je
addr16
inc
adc
sub
testl
mov
imulb
and
or
lret
mov
mov
xlat
jmp
add
fldcw
sbbb
xchg
xchg
in
aam
daa
scas
mov
insl
sbb
jns
xor
inc
mov
loop
and
cmp
xchg
adc
insl
add
call
icebp
adc
and
out
lock
orb
nop
imul
xor
push
into
inc
mov
xor
inc
cmpsl
test
fsts
out
in
adc
and
push
mov
addr16
out
inc
and
xor
adc
mov
mov
push
fisttps
loope
lret
mov
xrelease
push
push
insl
mov
add
and
shll
mov
jns
scas
fsubs
add
lods
data16
cli
clc
inc
icebp
arpl
dec
jl
ss
daa
mov
ljmp
or
jns
cmpsb
in
xor
pop
push
cmp
out
sub
xchg
aam
xor
mov
xor
cld
or
bound
int
pop
cs
bnd
jecxz
jecxz
mov
repnz
xlat
aaa
and
and
xchg
cmp
push
call
sub
movsl
les
int3
sbb
dec
mov
cltd
and
mov
xchg
scas
xor
pop
cli
movsl
iret
das
xor
jo
shl
mov
cmp
cmp
jmp
adc
fs
add
lahf
sub
cmp
repz
out
inc
push
rcrb
xorb
imul
adc
fiaddl
pop
fimull
push
scas
hlt
aam
notl
dec
inc
xchg
enter
adc
loop
cmp
dec
nop
jnp
ss
bound
nop
and
call
mov
cmp
scas
and
push
xor
dec
aam
cltd
xor
dec
outsl
jecxz
das
out
lcall
push
dec
mov
pop
das
paddd
gs
testl
cli
outsb
sub
scas
aas
jb
test
mov
adc
aaa
icebp
mov
mov
ja
mov
xlat
mov
fsubrl
inc
dec
sub
push
add
jg
pop
leave
cmp
or
cs
mov
nop
fidivs
jle
mov
mov
adc
mov
out
stos
hlt
jne
fsubrs
lea
out
mov
aam
arpl
mov
cltd
popa
xchg
les
insl
mov
ficompl
jp
jns
ljmp
or
aas
ret
cmp
dec
push
stos
adc
es
jge
xor
dec
jae
iret
or
jl
repz
mov
cmc
ret
mov
dec
and
mov
push
call
scas
xchg
mov
sub
or
loopne
fdivs
repnz
iret
jb
jp
movl
stos
push
cmc
or
dec
mov
pop
enter
into
cli
sbb
pop
scas
pop
push
xorl
jle
in
dec
outsl
stos
cld
fs
adc
sbb
leave
es
outsl
sub
sub
mov
lods
or
lock
and
mov
test
mov
out
jp
movsl
inc
xchg
mov
jle
daa
lret
in
fdivl
xchg
jecxz
mov
jg
xor
jne
les
lods
cmp
inc
xchg
lock
pop
lea
push
mov
add
sub
dec
nop
les
pushf
lods
jmp
sti
jl
fsubrp
lcall
mov
push
fcmovne
into
or
mov
fnsave
push
loop
jnp
add
movsl
rorl
gs
icebp
pushf
sub
subb
jbe
shr
in
inc
cmp
mov
inc
xor
pop
and
ds
xor
jecxz
insl
push
pusha
scas
mov
mov
add
add
test
ficomps
or
scas
jmp
out
pushf
pop
ds
adc
or
negb
xchg
scas
xor
shll
pop
mov
push
arpl
inc
fldcw
adc
cli
es
jmp
adc
gs
arpl
sbb
sbb
push
mov
inc
imul
arpl
movsl
cltd
fimuls
mov
incb
push
mov
fcoml
loop
scas
pop
sub
inc
cmp
stos
push
movsl
pop
pop
xor
mov
rolb
push
push
and
adc
cmp
sbb
subl
lcall
mov
data16
enter
jl
das
push
mov
test
xchg
rolb
jmp
pushf
jns
lock
popa
and
push
add
pop
cmp
aaa
sub
stos
inc
data16
or
inc
in
test
push
rorl
or
jge
leave
mov
xchg
dec
sti
pop
icebp
adc
mov
push
dec
bound
cli
adc
in
sub
sbb
sub
adc
adc
movsb
gs
call
addb
andl
push
adc
out
les
cmp
adc
mov
addl
repz
sbbw
pop
mov
fstp
xchg
push
inc
enter
xchg
stos
mov
mov
xchg
cmpsb
jmp
jns
insl
ljmp
fistpll
xorl
dec
add
outsl
pop
mov
and
mov
sbb
xor
pop
jmp
loopne
push
out
dec
jo
push
or
jecxz
les
sbb
pop
pop
pop
or
mov
pop
push
xchg
in
adc
pop
sbb
mov
jno
insb
sar
xchg
in
sbb
jecxz
and
shr
or
cwtl
imul
xchg
add
mov
mov
xchg
into
imul
and
lods
inc
nop
sbb
pop
push
idiv
ror
add
mov
daa
out
fstps
lock
or
ss
clc
ret
sbb
pop
push
adc
or
and
enter
sbb
sbb
mov
mov
rcll
sbb
push
sti
sub
mov
aas
push
cmp
push
bound
enter
jmp
push
adc
inc
lds
pop
mov
sahf
xor
fadd
loop
cmp
xor
jb
adc
xchg
sub
cmc
movsb
add
push
xor
add
sub
clc
pusha
sub
mov
lret
add
pop
scas
arpl
pop
sub
cwtl
jnp
cld
add
pop
sub
pop
xor
sub
sub
mov
and
dec
jb
mov
addr16
lods
icebp
pop
test
xlat
xlat
sub
add
jecxz
fistpl
pop
nop
jge
push
scas
enter
or
add
repz
aas
icebp
ja
lcall
inc
push
addr16
fs
cmpsb
or
xchg
dec
sbb
cmp
lods
or
xchg
jmp
popf
rclb
movsl
out
stos
cmp
int
dec
jne
xchg
and
mov
cmp
test
iret
aam
mov
sub
jle
mov
pop
fs
cmp
sbb
out
mov
repz
xor
in
push
and
fcompl
pop
test
jns
cmp
xor
xor
pop
sbb
mov
ja
shlb
jae
jmp
call
mov
dec
roll
sub
mov
xchg
fs
inc
or
xchg
mov
push
test
lahf
push
fcoms
inc
ret
das
sub
push
dec
dec
add
or
pop
jmp
ja
scas
or
add
push
pushl
jge
sarb
out
inc
inc
push
movsb
or
aad
jno
sar
pop
mov
inc
cld
or
pop
mov
repnz
inc
in
xor
hlt
mov
stos
mov
xchg
sub
rcrb
lret
daa
pop
fwait
mov
gs
loopne
pop
cld
pop
pop
dec
std
rcl
loopne
adc
cmpsb
jp
movsl
fistpll
aas
popl
mov
cmp
dec
add
mov
mov
or
test
cmp
pop
xor
mov
stos
popf
lret
sbbb
popa
into
in
repnz
nop
jnp
test
aas
mov
test
push
shlb
sbb
jne
xlat
xor
mov
popa
clc
mov
in
xchg
push
push
das
repz
bound
loopne
in
dec
fcoms
inc
call
andl
add
das
fwait
into
mov
jne
into
xchg
andl
insb
stc
jle
test
outsb
movsl
adc
notb
popa
inc
push
or
hlt
lds
imul
jmp
mov
cmpb
push
push
cmp
push
fiaddl
fsts
out
jns
pop
out
sub
add
repnz
pop
adc
push
fdivrs
lods
insb
pop
lds
lods
aas
and
mov
push
mov
cwtl
lcall
mov
addb
xor
cld
vsubsd
addb
add
iret
leave
xor
mov
out
fildl
dec
jl
dec
sub
sub
inc
flds
test
into
out
jns
pop
jg
add
lret
mov
push
mov
fidivl
pusha
popa
dec
sbb
mov
xor
insb
loope
pop
xchg
in
adc
gs
inc
inc
adcb
inc
insb
out
ror
jl
cld
mov
je
jns
sbb
outsb
bound
js
jns
cld
mov
cmp
cmp
fsub
lret
mov
mov
test
fldl
xchg
pop
and
enter
cmp
pop
sub
into
or
gs
in
ror
mov
cld
fdivp
jl
sbb
inc
xor
in
cmp
arpl
in
adc
sub
inc
icebp
cmc
dec
sahf
fildl
clc
fsubrs
lds
int3
xchg
and
sti
adc
faddl
cmp
jno
xor
jg
mov
or
scas
clc
fstp
fildl
in
stos
push
popf
shr
lods
out
cmp
lret
in
mov
jg
stos
jle
scas
mov
cmpsl
cmp
inc
lds
fnstcw
inc
gs
jbe
aam
gs
pop
add
mov
sarb
cli
push
popa
sbb
fcmovu
pop
loope
push
iret
push
js
stos
ja
in
jnp,pt
in
add
and
pop
inc
xchg
hlt
scas
sub
andl
out
imul
je
pop
pop
add
out
add
sub
sub
xchg
jle
call
imull
pushf
pop
cmp
cmpsb
stos
scas
imul
pop
bound
push
cltd
xor
popa
leave
std
fnstsw
sti
push
dec
aaa
test
dec
imul
cmp
cmp
sti
xchg
imull
xchg
jle
mov
add
mov
pop
xor
cmp
jne
and
icebp
or
jns
mov
sbb
pop
or
and
fsubl
nop
pop
pop
push
push
xlat
jnp
sahf
dec
sbb
out
sarb
sahf
popa
mov
pop
dec
lds
aam
jbe
push
shl
pop
mov
outsb
test
fucom
adc
sbb
int3
lahf
mov
aaa
std
mov
push
jne
jecxz
and
sub
int
jmp
mov
adc
out
lahf
dec
and
push
mov
lret
fimull
outsb
mov
sbb
xor
add
jl
in
pop
add
push
inc
jno
lahf
inc
int
enter
jle
push
pop
cmc
scas
insl
jg
push
sub
xchg
and
iret
pop
jno
shll
xor
pop
mov
mov
rcr
add
stos
xchg
adc
sbb
pop
not
mov
pushf
fmull
cmpb
sub
lock
pop
mov
popf
jns
xor
rorb
mov
call
fists
out
jno
in
cmpsb
inc
sbb
pop
pminsw
mov
incl
pop
pop
push
cltd
adc
adc
sahf
lret
movsl
dec
fs
adc
ja
or
dec
test
popf
pushf
fistl
dec
push
sub
push
mov
xchg
mov
jmp
pop
mov
test
mov
and
call
clc
push
or
inc
mov
ret
out
ja
idivb
pop
xchg
das
and
dec
pop
add
packssdw
xor
mov
lret
addr16
push
hlt
test
add
das
add
imul
daa
jno
adc
lea
ficompl
stos
pushf
add
or
lret
cmp
push
rol
xor
int3
iret
bound
mov
rcrb
loope
or
jl
xchg
or
stos
into
jecxz
shll
es
push
imul
outsl
or
and
cmp
clc
push
jne
and
sub
sub
pop
or
out
pop
out
icebp
add
rcrb
mov
adc
ljmp
mov
pop
and
and
fdivrs
xchg
jl
xchg
rcrl
std
inc
fwait
loop
inc
das
test
xchg
mov
roll
mov
mov
xchg
mov
lea
imul
mov
nop
call
testb
adc
repz
lahf
mov
mov
dec
inc
jbe
int
scas
jae
imul
and
mov
mov
xchg
subb
push
loopne
js
add
ss
xchg
enter
lods
xlat
xchg
mov
sub
daa
pop
adc
into
mov
shr
push
add
sahf
jbe
dec
add
fnstsw
push
push
addr16
cmpsb
jl
sbb
xchg
pop
sub
fnstcw
imul
dec
in
add
es
sub
xor
pop
sub
xchg
or
lds
notl
mov
fcomip
add
add
sbb
shll
and
lods
jne
xchg
es
push
push
rorb
jle
push
adc
arpl
add
add
sub
adc
and
pop
mov
and
roll
shll
xchg
add
aaa
xor
loopne
cmp
jno
pop
pusha
arpl
les
jne
pop
adc
and
adc
fnstcw
std
jg
mov
int3
xchg
mov
leave
pop
shlb
mov
pop
int
mov
rolb
cmp
add
cs
sbb
mov
cli
je
out
aad
es
stc
gs
mov
std
cli
add
push
aaa
pop
sub
jecxz
mov
dec
arpl
out
sub
pop
mov
inc
mov
lods
mov
lahf
lods
inc
out
sar
stos
sub
aaa
xor
jg
ja
pop
aas
mov
icebp
lods
push
ret
lea
jbe
and
hlt
ss
mov
shll
sbb
fistpll
jp
pop
cmpsl
in
cmc
push
pop
imul
lods
insl
divb
ret
not
push
sub
andb
in
fstl
inc
add
stos
dec
movsb
out
adc
xchg
lds
mov
inc
or
dec
xchg
clc
loope
adc
xchg
mov
lods
rclb
jno
insb
mov
sub
cmp
or
mov
xchg
clc
pop
aas
sbb
mov
int3
xlat
aas
nop
stos
mov
push
cmp
popa
add
xchg
dec
sub
mov
hlt
push
mov
mov
mov
adc
or
mov
lcall
xchg
lea
ret
ljmp
movsb
mov
fisubrl
xchg
mov
lock
cmpb
test
or
out
notb
inc
xor
in
aad
std
pop
push
pop
out
scas
add
adc
scas
mov
adc
adcb
mov
out
jno
daa
dec
jo
sbb
push
stos
adc
clc
xor
mov
out
stos
mov
mov
out
in
into
mov
pop
sti
sub
nop
in
cmp
inc
pop
aas
sub
shll
push
xor
fsubrs
push
aad
mov
jmp
mov
xchg
push
xchg
jl
lahf
mov
xchg
scas
and
or
inc
and
mov
xchg
and
sbb
push
shr
sbb
imul
nop
divb
sar
push
inc
or
pop
sbb
or
xchg
dec
popa
jbe
ror
ds
hlt
stos
push
mov
out
sub
cld
aad
es
in
jg
stc
jg
dec
cmpsl
rclb
std
inc
mov
ljmp
xchg
pop
cmp
insl
repnz
std
hlt
mov
repnz
ja
cmp
nop
inc
and
lret
xchg
push
test
repnz
stos
js
cwtl
mov
or
in
or
pop
xchg
mov
adc
test
push
fcoml
mov
xor
dec
pop
out
in
mov
lock
loopne
int3
fsts
and
popf
ljmp
insl
outsl
sbbl
rcrb
pop
push
lahf
mov
and
out
pusha
aam
cli
mov
outsl
test
loopne
loope
fcomps
mov
mov
xchg
jb
pop
xor
cltd
xchg
adc
lock
adc
dec
mov
sbb
mov
out
dec
jbe
or
push
dec
lea
jmp
lcall
inc
and
mov
jmp
xchg
ret
stc
movsb
add
add
pcmpgtd
and
push
mov
add
xchg
jae
adc
popa
mov
repz
jne
out
mov
inc
cmpsb
fcoml
inc
repz
mov
test
movl
out
mov
fcmovnbe
jns
cli
into
jb
adc
jmp
push
mov
popf
js
and
scas
jp
sbb
xchg
sbb
out
and
ss
test
or
and
and
fbld
and
inc
inc
inc
jp
lahf
nopl
mov
mov
call
adc
add
sti
leave
iret
data16
nop
addr16
stc
scas
pop
int3
inc
cs
sahf
out
xorb
sarl
fildll
bound
negl
test
pop
dec
xor
jns
dec
hlt
je
pop
mov
xchg
and
jle
xor
xchg
fcoms
mov
and
bnd
leave
imull
dec
push
adc
pop
mov
ret
adc
rcll
lahf
int
iret
pop
adc
mov
fbld
es
xor
pop
sbbb
xor
sarl
xor
xchg
jg
pop
pusha
push
inc
sahf
push
repnz
dec
pop
dec
or
mov
movsl
repz
jecxz
or
push
out
jp
dec
out
push
bound
cmp
into
or
fucomip
popa
mov
mov
add
lret
in
jbe
xor
flds
bound
or
movsb
dec
push
fmull
cmp
pextrw
scas
push
jl
pop
or
mov
scas
subl
dec
push
or
rolb
jg
repnz
mov
pop
and
add
mov
or
push
nop
add
icebp
jbe
push
push
ljmp
in
insl
bound
mov
inc
and
mov
stc
xchg
clc
repnz
enter
ret
xchg
ds
lahf
dec
sub
mov
push
out
imul
push
xchg
sbb
sub
call
or
xor
pop
adc
sub
sbb
rorb
cltd
pop
fcomp
fmull
xlat
adc
je
faddl
lods
mov
xor
push
jmp
add
push
jns
movsb
cwtl
mov
in
inc
mov
jmp
sub
push
scas
rcr
xchg
mov
stos
arpl
add
xchg
movsl
testl
mov
dec
push
jg
cmp
test
cmpsb
lea
jecxz
in
lahf
lods
in
jae
push
arpl
pop
rcrb
and
jg
mov
dec
in
mov
clc
pop
mov
stos
mov
out
inc
push
jecxz
ret
fimull
cmp
mov
or
rdseed
sbb
add
in
fnstcw
jmp
pop
and
in
bound
push
popa
fwait
sub
mov
jns
data16
xor
and
dec
idivb
jg
das
sbb
or
insl
cmp
jp
out
daa
stos
dec
xchg
push
sarl
int3
adc
pop
imul
xor
xchg
sbb
or
adc
les
repz
sub
push
scas
mov
in
fwait
sbbl
xor
jmp
add
cltd
cld
mov
sbb
push
mov
lea
and
jne
js
xchg
sti
pushf
mov
or
sub
adc
scas
add
dec
lea
sub
jl
lret
and
sub
mov
or
sbb
sub
iret
outsl
lret
mov
push
add
pop
dec
mov
rcrb
dec
jae
xchg
scas
or
pop
frstor
xor
mov
div
fdivl
or
xchg
pop
lods
cmpsb
jo
mov
push
testb
cltd
daa
or
nop
ficoml
xchg
repz
jne
psubusw
movsb
sub
dec
fmuls
es
cmp
mov
add
ficoms
lahf
or
adc
repz
insb
sub
push
mov
mov
push
inc
test
or
xchg
jg
mov
leave
clc
lock
aaa
test
adc
aaa
inc
call
movsb
loope
dec
loope
xchg
aad
insb
out
sbb
adc
pop
add
mov
xor
pop
mov
ss
test
imul
mov
ret
ret
jl
movsb
mov
mov
lods
sub
pusha
pop
clc
ja
push
inc
and
jb
outsb
mov
in
cmpsb
pop
int3
pop
xchg
push
xor
and
outsl
and
icebp
fisttpl
outsl
clc
push
adc
jo
add
popa
fucomp
sbb
fsubrl
or
ds
mov
pop
sub
xor
cmp
ret
sub
or
shl
push
pop
mov
push
push
daa
or
dec
addr16
mov
out
mov
add
call
jb
mov
inc
mov
cmc
xor
push
fwait
movsl
stc
lods
andb
repz
cmpsl
das
lds
fimull
sahf
shlb
fldenv
pop
iret
pushf
adc
das
lods
dec
jb
inc
inc
insb
mov
aam
movsb
mov
mov
and
rcl
pop
rolb
jbe
inc
cmc
int3
iret
out
ss
mov
push
imul
lret
test
orl
push
pop
pop
mov
push
es
rcl
mov
mov
popf
pop
push
cmpsl
mov
fdivr
add
push
or
das
loope
xlat
adc
cltd
push
push
rcr
incb
ret
push
sub
mov
shlb
fidivl
pop
test
push
or
pop
inc
lret
dec
add
stos
mov
dec
incl
pop
dec
or
jnp
daa
lahf
mov
cmp
imul
mov
mov
imul
sub
fwait
mov
test
subl
pop
jl
and
push
mov
add
xor
test
fwait
push
jge
push
fldl
and
cmc
jg
mov
xchg
aas
xor
cmp
and
push
or
lock
jge
xchg
fcompl
divl
popf
dec
inc
lahf
mov
enter
cmp
xchg
cs
idivb
cld
sub
add
cmp
pop
fadd
sbb
icebp
xchg
mov
stos
les
inc
mov
xor
cmp
inc
loope
mov
or
pop
mov
int3
jg
jns
aam
pusha
mov
fiadds
loopne
hlt
sbb
stos
loopne
iret
gs
in
adc
cmpsl
jle
out
into
pop
test
mov
add
js
iret
xor
mov
mov
inc
mov
pop
pop
sar
cmp
psubusb
ds
arpl
jo
mov
imul
sbb
xchg
push
sub
or
mov
mov
cmp
push
sub
enter
and
pop
mov
pop
xor
insb
push
xchg
into
jle
adc
mov
pop
inc
movsb
lret
icebp
jle
mov
adc
notl
fucom
inc
jnp
dec
jnp
inc
sbb
sub
xchg
dec
pop
jge
sub
shlb
mov
fs
addb
xor
sahf
je
sti
push
dec
inc
arpl
or
cmpb
das
cmp
xlat
sub
push
loop
loopne
pop
cwtl
xchg
inc
aas
es
jb
js
mov
pop
push
sahf
ljmp
jnp
mov
lret
mov
mov
sbb
mov
mov
inc
jbe
mov
pop
jns
popa
sbb
cmp
dec
add
fs
aad
dec
push
sti
and
jg
out
sti
jp
bnd
xchg
inc
fisubl
xchg
icebp
mov
jne
jae
mov
push
sub
cli
jne
bound
push
xor
imul
inc
lcall
mov
pop
outsb
aaa
xchg
in
cltd
adc
aam
add
lock
mov
jle
loopne
jl
cs
sub
js
outsl
lcall
xor
clc
inc
mov
aam
fcoml
and
aas
jl,pt
add
add
jl
call
test
jecxz
cmp
add
push
outsb
push
rorl
xor
mul
sbb
pop
pusha
xchg
imul
or
cmp
fwait
push
pop
inc
push
call
dec
in
pop
xor
adc
filds
cmovns
stc
dec
ror
jl
inc
gs
lds
sbb
inc
mov
push
or
add
mov
xchg
jp
pop
cmp
aas
jae
aaa
cmpsl
mov
orb
add
push
mov
sarb
cli
pop
pop
lahf
aas
sub
mov
loop
int
in
mov
out
jns
fidivrl
test
dec
pusha
adc
pop
jg
arpl
pop
insb
mov
cmpb
adc
mov
les
inc
sbb
cmp
mov
push
mov
sub
pop
in
or
push
inc
std
scas
aas
repnz
out
in
stc
sbb
jns
lock
les
mov
cmp
adc
cltd
push
cs
cmp
jl
xor
dec
idivb
and
and
clc
ljmp
hlt
sub
and
cmpsl
fstpt
pushf
mov
outsl
std
lret
push
cmp
xchg
loop
mov
outsl
fidivs
xor
inc
repnz
cmp
into
out
push
cmp
mov
in
lret
dec
mov
mov
mov
sub
out
rcll
inc
or
xor
and
adc
sbb
mov
xchg
iret
push
test
out
xor
mov
pop
cmp
dec
jge
mov
push
pushf
inc
mov
push
gs
cld
data16
ss
lods
loop
lret
xchg
dec
ret
nop
in
xor
jo
test
mov
and
push
and
sub
adc
mov
push
lcall
fldl
out
out
mov
ja
inc
rorb
push
xchg
leave
inc
jno
lock
lds
fs
cmp
orl
cmp
xchg
adc
movl
sub
xorb
icebp
inc
add
in
test
cmp
lds
fsubr
lret
sahf
mov
and
push
or
pop
stos
mov
test
pop
icebp
dec
cltd
loop
nop
adc
jbe
hlt
jno
mov
and
jnp
push
mov
jle
fldt
or
pop
int
cmp
fsubrs
mov
inc
out
call
arpl
shl
jo
jb
mov
mov
adc
testb
test
push
add
lret
jge
sub
shlb
aaa
imul
inc
adc
in
insl
adc
icebp
inc
add
sbb
sub
cmp
adc
lds
and
mov
sbb
push
push
lock
pushf
cltd
or
cmp
adc
fcmove
xor
inc
and
xor
push
or
jnp
fldl
mov
fisubs
xchg
add
mov
inc
jne
or
mov
gs
adc
repz
jae
in
dec
prefetch
inc
mov
ljmp
in
orb
push
inc
adcl
fucomp
loope
push
rolb
xchg
in
inc
aas
out
mov
sub
and
add
dec
mov
sub
mov
data16
sarb
xor
loopne
lods
fnstenv
pop
and
fisttpl
shll
jae
in
and
lret
call
lods
xchg
mov
dec
cmp
outsb
mov
add
pop
out
mov
out
mov
ljmp
mov
cmpsl
imul
adc
movsb
add
insb
add
incb
cmp
pop
add
ficoml
out
inc
sbb
sahf
mov
jmp
lcall
xchg
daa
jge
roll
or
xor
int
push
sbb
addl
mov
lds
jle
mov
pop
icebp
jle
arpl
lock
outsb
or
into
pop
lahf
stos
and
inc
hlt
sbb
popa
xchg
dec
mov
popf
jae
sub
das
test
cltd
sub
add
aaa
cmp
icebp
dec
xor
int3
leave
sub
pop
pop
jle
jp
pop
inc
orl
sub
jbe
pop
ljmp
cmp
xchg
jb
xchg
int
aad
pop
push
jns
scas
push
imul
mov
lods
mov
xor
loopne
mov
mov
cmp
les
inc
rolb
xchg
jp
shrb
leave
cmpsl
out
jno
scas
or
out
fs
cmpsb
inc
adc
jge
sub
xchg
in
pop
dec
xchg
lret
xor
mov
or
adc
imull
arpl
mov
lods
jmp
pop
cwtl
xor
adc
adc
push
push
shl
shrb
cld
ja,pn
sub
jg
push
add
subl
stos
es
inc
aad
repnz
mov
mov
inc
gs
ljmp
pushf
push
movsb
cmp
outsb
outsb
scas
fnsave
fwait
sub
dec
xchg
sub
mov
add
and
adc
nop
or
adc
fcomps
pushf
mov
mov
cltd
or
push
popf
addr16
dec
call
jg
lahf
cmp
fnsave
push
sbb
pop
sbb
es
shrb
and
leave
dec
add
adcl
call
pop
pop
dec
cmp
sbb
sarl
clc
in
subl
stos
sbb
popf
int
push
sbb
shlb
fld
mov
or
jecxz
dec
xchg
rorl
sub
xor
int3
jbe
imul
jae
mov
jo
lcall
test
adc
cwtl
test
sarb
or
and
jle
push
es
jns
testb
fistpl
int3
or
or
mov
inc
jle
popf
xchg
bound
mov
adc
xchg
leave
mov
pop
xor
add
xchg
pop
loop
je
lock
into
or
test
repz
ret
add
cmp
mov
mov
sub
call
es
daa
sbb
mov
repnz
lahf
fucom
pusha
dec
mov
fdivs
out
fidivrs
lcall
cld
fists
notb
dec
xlat
fbstp
xchg
xor
ss
sbb
pop
add
xchg
or
inc
pop
leave
xchg
imul
mov
mov
xchg
mov
xchg
scas
push
push
dec
dec
push
shl
jns
ss
scas
dec
lock
pop
int3
lods
sub
rolb
das
outsb
nop
push
clc
or
or
adc
sbb
jecxz
push
popf
inc
and
push
fists
pushf
sbb
xchg
pop
mov
je
push
lcall
pop
js
lcall
loopne
add
aaa
cmp
mov
lods
fdivrl
lcall
adc
mov
arpl
je
mov
mov
inc
test
inc
xor
add
push
add
mov
movsb
lahf
push
je
and
mov
adc
pop
cld
std
sarl
adc
leave
mov
daa
xor
adc
dec
out
repz
adc
scas
and
or
mov
cmpsb
jnp
in
arpl
js
and
add
sbb
outsb
into
test
jae
pop
mov
jne
negb
pusha
pusha
daa
cs
dec
fisubrs
lcall
test
bound
aaa
loopne
shlb
cmp
or
mov
push
inc
pop
adc
sbb
ret
movsb
outsl
jle
fiadds
dec
xor
pushf
ret
shll
pop
pusha
mov
xchg
dec
imul
div
pop
pop
cs
xor
scas
xor
adc
cs
sbb
cmp
mov
mov
fucom
jle
daa
enter
dec
test
icebp
xchg
push
subb
shll
sbb
and
fiadds
mov
inc
xchg
mov
fisttps
jae
hlt
icebp
mov
ljmp
push
jne
in
jbe
jge
shll
mov
andl
cmc
sarb
ror
repnz
mov
mov
and
add
decl
mov
xchg
mov
imul
mov
sub
jo
ror
mov
jne
lcall
leave
sbb
inc
ds
and
push
pusha
dec
arpl
inc
push
ja
lods
push
jbe
pop
dec
icebp
leave
aam
adc
sbb
mov
enter
outsb
xchg
loopne
add
das
repnz
imulb
sbbb
into
lock
scas
and
lcall
or
dec
or
mov
sbb
xlat
push
cmc
or
nopl
scas
iret
popf
gs
inc
mov
sarb
xor
aaa
in
lds
and
pop
add
ds
rorb
and
popa
repz
sub
or
outsb
test
push
outsb
iret
or
mov
xor
or
and
cli
stos
push
adc
fisubl
call
inc
es
dec
and
imul
sbb
scas
aam
mov
xor
js
mov
inc
push
jne
mov
movsb
aas
imul
add
sub
jmp
scas
orl
mov
in
je
popf
jae
jge
sub
sbb
in
mov
xor
insl
or
test
stc
inc
arpl
xor
jns
jmp
xchg
popf
fstpt
mov
imul
fbstp
jmp
mov
inc
scas
push
enter
bound
fistl
sbb
cwtl
add
mov
mov
iret
jg
xchg
pop
sbb
mov
int3
mov
into
or
xor
xchg
cltd
fwait
sahf
mov
addr16
in
movsl
mov
and
mov
dec
adc
inc
pop
repnz
add
roll
jp
sub
inc
adc
ficompl
xchg
sbb
negl
dec
pop
out
and
sbb
pop
mov
std
int3
test
into
ljmp
insb
lock
test
add
cmc
movsb
in
sbb
ljmp
lods
sub
fcmovnbe
pop
mov
mov
js
pushf
pop
call
or
movsl
pop
stos
and
jmp
scas
sub
push
cmpsl
push
jg
and
aam
in
cmpb
lret
jecxz
or
dec
dec
cltd
movsb
jecxz
cmp
or
jno
adcb
or
jmp
mov
or
push
pusha
mov
adc
mov
cli
das
or
mov
clc
cmpsb
or
jnp
push
and
pop
adc
stos
pop
mov
pop
ljmp
testl
inc
push
and
arpl
jl
mov
jl
scas
sub
or
push
push
std
cmc
push
xor
rcll
pop
or
mov
dec
mov
hlt
jmp
icebp
repnz
pusha
mov
cmpsb
pop
mov
ss
repnz
outsb
rcrb
cli
sub
out
pop
and
mov
sbb
outsl
pop
xchg
push
inc
test
leave
mov
ret
pop
pop
call
cmp
cmc
add
clc
sarl
clc
cmc
xor
out
inc
outsl
pop
loopne
mov
ljmp
xchg
dec
inc
xchg
and
sbb
je
cmp
popa
pop
push
sbb
rolb
add
add
in
fimull
inc
push
or
and
cmpsb
push
je
dec
shrl
repnz
fwait
dec
addr16
popa
push
xor
stos
sbb
inc
fmuls
push
or
push
push
pusha
jo
pop
test
dec
cltd
adc
lods
notb
sub
or
ficoml
jns
hlt
dec
mov
cmp
out
add
mov
mov
out
push
jg
popf
arpl
sub
addps
imul
mov
rorb
fnstenv
mov
mov
mov
imul
repnz
push
jae
out
ss
sbb
mov
sub
lods
jecxz
xchg
hlt
cwtl
test
and
popf
je
mov
xor
jg
lds
mov
aam
pop
dec
ja
mov
in
and
cmpsb
ss
adc
icebp
stos
pop
pop
cmp
jge
xchg
jno
jge
loop
pop
imul
shrl
out
mov
test
pop
es
mov
mov
xor
aam
cmpb
pop
sub
jne
dec
mov
xchg
outsb
clc
movsl
sbb
xlat
inc
push
fmull
sbb
jecxz
pop
and
push
scas
jle
mov
ljmp
fsubrs
arpl
mov
jae
jl
cmpsb
iret
inc
outsb
xchg
dec
orb
push
sub
aas
pop
and
jbe
loop
cs
int
sbb
mov
dec
dec
fists
sub
mov
out
xor
cmc
loope
push
mov
mov
stos
stc
or
inc
repz
out
mov
ds
sub
sub
iret
push
adc
mov
inc
adc
scas
aaa
imul
mov
bound
fsubrs
ds
mov
cmpsl
ficoms
movsb
cli
or
mov
mov
and
push
jmp
dec
push
das
sbb
sbb
es
jmp
jle
xchg
fcomip
push
sbb
out
push
leave
adc
inc
inc
pusha
cmpsb
mov
adc
jo
sub
sbb
shll
jno
fnsave
ja
jns
mov
inc
cmc
sub
leave
sbb
jns
pushl
inc
fists
jbe
push
stc
sbb
xchg
test
dec
sarb
repnz
rep
fistpll
insl
adc
pop
test
inc
add
sbb
mov
scas
or
in
std
int
jno
pop
inc
daa
pop
ljmp
ret
inc
push
inc
pusha
clc
cli
mov
aam
mov
test
std
mov
and
mov
fs
pushl
fistps
test
pop
icebp
ret
xor
je
gs
jmp
iret
dec
or
fidivrl
rolb
sub
push
insl
into
pop
xchg
lock
xchg
jl
fiaddl
ja
jmp
pop
jle
xchg
mov
cmp
push
sub
repz
inc
push
inc
call
out
ffree
jbe
sbb
adc
push
orb
dec
sub
incl
outsl
shll
icebp
jbe
xor
push
cmpsl
adc
lahf
cld
stos
ret
pop
or
call
pop
mov
ret
or
fldenv
loop
cld
xchg
testl
cmp
clc
xor
mov
leave
loope
flds
cld
mov
out
xor
jo
sbb
popf
fstpl
aaa
call
fnstsw
popa
mov
and
jbe
data16
aam
and
je,pt
jge
cmp
rorb
xchg
mov
bound
sub
mov
in
cmpsb
mov
fsubrl
xor
add
jecxz
xor
xchg
or
mov
mov
mov
loop
mov
fdivs
lds
orl
dec
fildl
shlb
cmc
pop
jge
pop
mov
mov
stos
std
cmp
mov
lahf
les
jns
push
popf
sbb
pop
bound
aad
dec
ljmp
shll
jmp
jmp
push
vrcpss
movsb
out
js
call
nop
push
inc
aam
loope
out
mov
fstpl
xchg
je
outsb
inc
filds
pop
jb
je
pushf
mov
mov
inc
xor
daa
xor
mov
add
push
xchg
fisubrs
insb
adc
mov
movsl
ret
mov
cld
roll
pop
xor
sbb
shll
jecxz
mov
adc
push
inc
push
adc
sub
sub
or
xor
jl
pop
iret
ret
inc
push
jmp
jg
jecxz
mov
mov
mov
cli
ljmp
les
iret
rclb
subb
repz
stos
addr16
add
inc
adc
push
ret
not
push
orb
js
or
push
mov
lock
idiv
call
mov
xor
xchg
testl
dec
daa
ljmp
push
out
push
mov
repz
or
and
adc
mov
out
es
mov
mov
outsb
xchg
loop
sbb
cmp
jb
or
out
fsub
fistpll
into
cmpsl
test
int3
jle
jecxz
ja
xchg
lock
repnz
rcrb
jb
fsubrl
test
inc
das
xchg
sub
mov
xchg
mov
and
rorb
jl
jno
mov
mov
push
aaa
cmp
fwait
nop
fnsave
inc
sbb
push
sub
pusha
lock
stos
data16
push
fsubrl
jb
arpl
push
cmp
push
or
mov
xorb
jmp
fs
mov
mov
jo
cmp
adc
dec
add
pushf
rclb
lock
mov
xor
mov
loopne
push
or
test
jp
pop
fucomi
lahf
sbb
aam
cmp
ja
push
je
or
sub
sbb
in
aaa
jno
dec
pop
mov
push
sbb
sub
sahf
mov
scas
into
fsubrs
mov
jns
jg
add
sbb
jbe
push
jp
into
pop
push
imul
jecxz
pop
xchg
mov
sahf
lds
mov
jnp
mov
or
adc
sarl
adc
mov
movsl
test
add
pusha
push
test
in
cltd
ja
pop
jae
mov
cmc
cmpsb
cmp
adc
cmp
lahf
xor
test
das
adc
inc
pop
xchg
adc
ss
mov
hlt
pop
cmpsl
xchg
popa
sbb
jmp
sub
push
xchg
xor
out
jns
mov
pop
xchg
sbb
inc
nop
adc
addl
pop
xor
and
pop
call
push
and
cmpb
pusha
pop
popf
dec
lcall
jmp
call
mov
imul
cli
fiaddl
sub
push
pop
jns
add
xchg
pop
mov
movl
add
into
leave
ss
pop
je
xlat
das
sbb
mov
movsb
push
and
fstpl
fisttps
pop
jecxz
adc
sub
dec
or
xor
mov
repnz
fcmovu
xor
mov
sbb
es
add
int
mulb
and
fcmovb
xchg
aam
sub
add
mov
dec
mov
sahf
pop
nop
test
pop
loop
push
dec
dec
andl
loopne
and
frstor
movsb
sbb
cld
jb
pop
imul
xor
add
push
push
sub
cmp
mull
xor
fcompl
cmp
pusha
dec
in
lret
cmp
imul
jp
stos
repz
inc
fdivrl
xor
imul
mov
sbb
sub
ret
push
and
adc
xchg
jnp
cwtl
sbb
in
mov
mov
mov
out
jbe
and
lods
sbb
dec
xlat
xchg
mov
dec
fsubs
test
out
bound
or
fs
fidivrs
inc
lock
add
cld
adc
stos
inc
add
cmp
adc
mov
test
jl
mov
js
push
pop
loope
mov
pop
lret
in
sub
jl
mov
inc
inc
pop
jg
repz
fwait
mov
inc
jno
shrb
test
dec
lds
sarb
sbb
scas
fprem1
inc
xlat
push
fimuls
out
mov
pop
enter
sahf
jbe
sub
out
pop
inc
aam
getsec
jb
xor
adc
mov
outsl
cli
icebp
inc
cmpsl
push
lods
mov
jo
dec
jg
call
mov
sti
xlat
cmpsl
xchg
rorl
sub
fwait
pop
push
mov
dec
clc
xor
jns
dec
in
pop
cs
cwtl
cld
test
pop
aam
dec
in
outsb
dec
add
mov
cmc
mov
or
shlb
jnp
pop
popa
pop
aad
scas
stos
sbb
pop
test
xchg
test
pop
iret
pop
test
mov
imul
inc
int
pop
mov
stc
xor
in
sub
pop
and
ds
mov
shll
mov
jno
push
push
je
repz
enter
clc
dec
mov
mov
aas
out
cmpsl
push
pop
scas
pop
jecxz
pushf
xor
mov
jg
pop
leave
mov
xor
movsb
out
mov
imul
push
xor
jae
or
clc
inc
jl
sub
call
sar
cmove
stos
ret
inc
dec
loope
sbb
and
sub
jl
jae
fwait
data16
shrl
cmp
dec
scas
popf
mov
lret
mov
push
ljmp
pop
stos
xchg
gs
sub
inc
lahf
sarl
ds
xchg
or
repnz
jle
xchg
int3
xor
push
scas
sub
rclb
cltd
pop
xchg
insl
xchg
cli
psubsw
decb
xor
jne
jb
cld
add
inc
rcr
jnp
dec
push
lret
push
mov
pop
add
sbb
push
pusha
xor
pushf
mov
dec
xchg
imul
jecxz
xchg
jne
iret
xchg
test
mov
loop
adc
mov
cld
scas
imul
sub
arpl
xchg
pop
test
negl
sub
or
mov
and
jp
adc
add
ljmp
mov
jl
sbb
pop
jo
sub
and
mov
js
psubsb
jns
jo
inc
mov
scas
add
ficomps
push
lahf
icebp
sti
mov
mov
push
mov
rcll
cmc
pushf
fwait
xchg
cmpsb
hlt
jns
jg
imul
stos
bound
sbb
jle
js
int3
push
and
in
push
out
out
scas
daa
fwait
clc
add
es
idivb
push
sub
cmp
dec
arpl
test
pop
out
scas
cli
xor
hlt
sbbb
push
mov
and
aaa
jo
mov
push
aad
ficoms
or
jae
stos
sub
sbb
add
lods
fwait
push
cmp
ljmp
rclb
outsl
dec
fs
mov
ss
mov
shrb
sbb
lahf
sbb
xchg
mov
dec
rorb
and
mov
mov
dec
popa
in
les
mov
test
pusha
or
push
les
jp
add
ja
lock
add
int
and
cmpsl
mov
dec
orl
mov
xchg
pop
dec
lea
pop
sbb
mov
dec
test
add
out
dec
fbstp
test
mov
add
sbb
cmp
adc
push
mov
in
add
in
mov
push
or
mov
dec
cmp
jecxz
xchg
jns,pt
sbb
aam
outsl
xchg
pop
ret
lret
pushf
decb
add
xor
je
stos
xlat
test
out
mov
push
mov
mov
xchg
cmp
mov
pop
xor
and
mov
cmpsl
pop
dec
or
push
cmp
pusha
mov
cmp
fisubrl
mov
jbe
dec
and
lods
icebp
pop
xor
jae
dec
cmp
mov
jae
loop
imul
lds
insl
dec
fcoms
mov
and
test
jb
sub
mov
or
mov
sub
andb
jmp
roll
mov
and
jmp
mov
add
xor
mov
sbb
popa
data16
inc
shlb
mov
dec
xchg
jne
repz
cmpsl
popa
adc
lahf
je
icebp
ret
pavgb
roll
push
sub
inc
insb
add
xor
xchg
push
enter
mov
iret
hlt
insb
pop
imul
ret
jecxz
mov
pop
add
sub
insl
sbb
in
dec
loope
xorb
xor
dec
or
lret
sbb
ficompl
mov
rorb
sub
xchg
stos
mov
ja
pop
or
push
mov
sti
repnz
xor
dec
pusha
xchg
sub
dec
inc
pop
dec
jg
and
jne
xchg
fmuls
jb
cmp
cli
std
sub
dec
enter
cltd
sbbl
dec
aaa
in
repz
ss
stc
aam
rolb
lahf
imul
rcr
lret
dec
and
jne
iret
mov
fmul
jp
jno
stos
test
out
sarb
js
pop
scas
dec
rclb
daa
ret
movl
and
roll
lds
ret
lret
and
ss
imul
test
shll
data16
adc
inc
and
aaa
adc
jmp
cmc
ja
shrb
cltd
jp
hlt
jg
popa
pop
and
cli
and
imul
popa
mov
add
push
jbe
jno
adc
push
leave
dec
jg
mov
xor
out
or
or
sbb
negl
adc
icebp
sarb
in
outsb
in
stos
lods
fidivrl
sub
push
mov
push
adc
mov
movsb
clc
dec
or
fisubs
xor
ja
push
shlb
in
mov
sub
neg
mov
mov
cmove
loopne
xchg
test
pop
pop
or
das
je
xchg
out
sbb
and
cmpl
sub
movsl
stc
and
adc
xchg
idiv
mov
add
sbb
sbb
mov
pop
sahf
adc
add
inc
jecxz
xchg
aaa
loop
cmpsb
ret
mov
and
int
jno
jne
std
mov
xchg
mov
test
jno
push
cld
test
fucomi
enter
out
lock
or
mov
fmull
dec
fimull
mov
enter
out
les
mov
negl
cmpsb
and
mov
sub
mov
fstpl
add
shlb
and
jb
sub
lret
mov
inc
repz
xor
cwtl
loop
outsl
and
sbb
dec
xchg
inc
mov
ja
dec
stos
fwait
arpl
jle
cmp
jg
inc
cmp
insl
adc
je
jp
mov
cltd
scas
loopne
pushf
cmp
mov
xor
or
lods
jge
dec
or
out
outsb
jge
sbb
fmuls
xchg
mov
xor
and
mov
push
js
insb
mov
sbb
ljmp
scas
adc
test
sbb
mov
shll
xchg
or
jmp
lcall
adc
aam
notb
adc
scas
or
addr16
mov
mov
jbe
pop
imul
fdiv
xchg
sub
lahf
fistpll
xchg
or
jns
int3
sbb
and
lods
mov
adc
dec
js
jno
out
push
sbb
push
sbb
push
pop
xchg
jae
mov
clc
daa
loop
inc
ljmp
sub
adc
pop
inc
pop
sub
aad
lret
jmp
rcrl
notl
jno
mov
lock
mov
shlb
jle
gs
push
js
inc
cwtl
sub
in
push
bnd
rolb
loop
mov
add
subb
push
xchg
push
jmp
les
mov
sub
stos
fs
xor
cmp
mov
mov
inc
mov
pop
lret
lea
pop
daa
xor
mov
into
out
pop
aas
ljmp
inc
test
ror
sbb
frndint
insl
cld
inc
mov
mov
adc
xchg
add
dec
int3
bound
iret
enter
cld
add
lret
rcr
out
mov
and
adc
mov
bound
xchg
jo
stc
add
xor
cli
lret
adc
xor
dec
cmp
inc
sub
cmp
xor
lock
adcb
or
imull
jl
out
push
mov
inc
std
add
int3
cmpsb
push
sti
cltd
xchg
loopne
and
fisttps
stos
dec
popl
jns
push
mov
cmpsb
aam
fst
or
mov
add
enter
jns
sub
sub
mov
es
sbb
push
js
stos
sti
outsb
inc
jecxz
std
jmp
xor
pushf
out
xchg
rcrl
adc
mov
cmpsl
out
xor
sbb
sub
cmpsb
jb
push
push
mov
andps
fyl2x
xchg
insb
iret
imul
arpl
add
test
lret
leave
pop
inc
dec
arpl
aam
sub
mov
mov
fxch
pop
sub
test
nop
fs
jle
daa
push
rorl
xchg
and
xchg
sub
cli
pop
and
pop
xchg
inc
icebp
fcompl
ss
mov
test
xchg
mov
and
mov
dec
mov
xchg
test
ret
push
loopne
jo
sub
cmp
mov
push
mov
mov
ud1
dec
mov
add
push
jnp
mov
push
jns
mov
lds
daa
xchg
cmp
mov
clc
rclb
mov
pusha
nop
add
popa
inc
xlat
or
icebp
out
dec
mov
cli
push
jo
sti
in
lds
lea
popf
ret
cmp
out
imul
inc
jge
cmc
testl
adc
sub
and
mov
imul
xor
test
jnp
xchg
xor
sahf
dec
loope
ss
repz
outsb
nop
mov
mov
ret
test
push
xchg
fwait
pusha
push
mov
sub
pushf
imul
inc
pop
out
xlat
rorl
stos
lcall
or
in
aad
int3
jnp
add
out
cmc
push
lret
jne
push
cmp
es
mov
inc
and
sub
mov
stos
divl
test
sahf
mov
scas
mov
push
xchg
inc
cmp
push
pop
mov
pushf
xchg
sbb
pop
jnp
lock
dec
cmp
jecxz
dec
adc
pop
mov
xchg
out
je
in
into
xchg
mov
les
sbb
les
lock
mov
loopne
pop
jb
sub
push
into
sbb
shrl
lret
jmp
lret
js
and
cmp
push
and
fs
xor
int3
xor
mov
stos
outsb
out
pop
adc
push
pop
imul
adc
lods
movsl
and
pushf
or
push
nop
stos
div
fcomip
jns
or
inc
lahf
push
cmc
std
stc
je
sub
push
or
jg
sub
push
add
lret
nop
mov
fnsave
cmc
test
mov
mov
jl
cmpsb
outsb
hlt
addr16
repz
shrb
xlat
mov
cmp
icebp
iret
fnstcw
sub
jae
fadd
nop
lock
shrl
add
outsl
bound
push
lret
jp
jns
pusha
aas
rcrb
mov
or
lods
mov
syscall
pop
ds
jne
lret
sub
fidivs
push
push
sub
fcmovu
mov
cmp
mov
mov
lret
lods
aas
push
stc
lcall
and
push
mov
lahf
or
das
dec
sub
cs
fldcw
fildll
sbb
int3
inc
push
jl
out
inc
dec
aam
pop
sbb
jo
pusha
jmp
inc
fimuls
movsb
adc
jns
test
jns
je
fwait
iret
lds
add
add
sbb
cmp
pop
push
mov
inc
fidivl
or
or
xor
push
pop
in
rcrl
sub
cmp
test
inc
aas
call
stos
xor
sub
lahf
ret
mov
flds
adc
pop
in
fsubl
cs
sbb
adc
push
into
mov
lods
js
or
adc
jmp
fildll
xor
es
dec
dec
dec
jbe
add
push
addr16
xlat
cli
test
movsb
or
jecxz
sarb
test
dec
push
pop
sbb
dec
xor
pop
js
mov
call
roll
mov
cli
aad
push
jp
testb
jmp
popf
out
dec
hlt
rclb
and
dec
call
rclb
inc
push
mov
ljmp
shlb
xor
mov
ljmp
xchg
sahf
push
jnp
cli
mov
xlat
iret
jle
out
pop
sti
cwtl
pop
or
cmp
mov
cwtl
xchg
sahf
xchg
mov
ja
mov
push
push
jmp
sub
dec
add
sbb
pop
repz
ror
fcmovb
test
mov
jbe
shlb
popf
imul
inc
aad
loope
mov
dec
add
jecxz
inc
jle
es
aaa
mov
dec
mov
mov
and
lock
fidivs
sub
scas
in
cs
jg
mov
cmp
mov
adc
xor
dec
cmpsl
pop
dec
mov
cmp
lahf
pushf
enter
ja
sub
ffree
out
sbb
pop
in
rclb
bound
xchg
popa
xchg
inc
inc
and
xchg
out
ret
ret
aam
add
inc
lahf
popa
outsl
les
and
in
mov
and
lods
xor
lods
ds
movl
mov
pop
cmpsl
xor
or
aam
cmpsb
ljmp
daa
xchg
out
inc
jecxz
jp
les
test
sbb
mov
pop
inc
and
sub
fistpl
sub
ror
outsl
mov
add
push
cmp
or
jecxz
mov
inc
std
mov
or
lahf
clc
push
jmp
fstl
sar
and
jg
or
push
push
mov
sbb
rcl
daa
adc
mov
loopne
scas
mov
ja
sub
movsb
fwait
testl
lret
mov
and
out
xor
shlb
pushf
xchg
adc
testl
fisttpl
lods
ljmp
ret
gs
inc
and
cmp
sbb
xchg
fs
xor
imul
sub
cwtl
or
in
sub
pop
rcll
or
mov
push
adc
push
mov
mov
push
and
repnz
sbb
sarl
or
inc
pop
outsb
cwtl
add
sti
mov
xor
push
ja
xchg
jg
sub
xor
pop
out
and
pop
mov
cmp
jmp
dec
sub
pusha
mov
dec
push
mov
push
pusha
xchg
sub
push
hlt
mov
insb
dec
add
dec
xchg
andb
mov
mov
imul
xor
pop
jb
sub
mov
xchg
shl
and
jae
xor
or
fwait
add
jnp
orl
xor
clc
push
adc
jp
sub
and
out
aas
push
enter
jnp
inc
jecxz
sahf
or
pop
addl
cltd
jns
add
out
rclb
out
jae
cli
push
xchg
push
call
jge
push
cmp
pop
mov
gs
in
and
add
sub
int3
mov
push
inc
daa
dec
out
adc
rcll
xor
push
test
jg
cmp
mov
xchg
out
xchg
cltd
out
aam
jo
rcrb
pop
bound
cltd
sbb
mov
mov
push
movb
cmpsl
leave
sti
cmpsb
jnp
fistpl
cmp
stc
push
shrb
pushf
mov
fsts
ljmp
out
and
rcrb
xchg
gs
into
xchg
daa
pop
mov
leave
mov
cmp
xor
insl
mov
das
aad
lods
xchg
movsl
insb
sub
xchg
pop
call
insb
push
ret
cmp
or
jbe
rolb
or
addl
mov
mov
cmpsb
shlb
cmp
lods
nop
aad
sub
stc
or
sbb
push
jmp
or
mov
sub
push
mov
test
jmp
inc
outsb
xchg
add
gs
js
xchg
sbb
adc
jmp
out
out
fs
or
pop
leave
pop
mov
adc
sub
out
sbb
add
jbe,pn
mov
je
ljmp
cmp
ja
imul
xor
clc
inc
jg
sbb
aas
and
movsb
hlt
push
mov
pushf
fimuls
test
mov
jne
int3
sar
neg
fistl
push
cmc
js
push
pop
xchg
jbe
outsb
add
incl
mov
push
addr16
mov
jnp
inc
out
sbb
repz
cmp
jns
add
loopne
jle
push
notl
lret
add
jp
imul
fs
repnz
loope
pop
stc
insb
aad
mov
js
je
es
xchg
lods
les
jg
aaa
jae
lods
out
cli
jae
sahf
fsubl
dec
lahf
dec
jmp
push
adcl
mov
xor
stos
mov
sahf
sub
mov
inc
xor
icebp
iret
xchg
cmp
or
ret
and
adc
ds
push
sub
xor
jge
lock
je
or
mov
fistpl
jnp
test
and
inc
cmc
jmp
lahf
push
stos
dec
mov
ret
add
adcb
sbb
repnz
insl
jg
addr16
fsubp
icebp
lcall
test
pop
xor
jbe
lahf
lcall
sub
pop
loopne
and
cltd
pop
movsb
inc
cs
test
cli
push
push
imul
xor
push
pop
push
lods
or
pop
nop
sbb
in
cmc
clc
cli
pop
cli
imul
scas
adc
popa
stc
gs
push
jg
lret
inc
bound
pop
and
jg
jl,pt
ljmp
cmp
insl
cltd
lahf
inc
mov
or
repz
inc
out
xor
movsl
add
or
rorl
insl
dec
and
pop
xor
repz
in
cmpsb
gs
add
add
notb
iret
repz
daa
lahf
add
fstpl
mov
je
xor
cmpsl
or
and
mov
add
pop
ljmp
fists
mov
inc
adc
sbb
test
jns
adc
push
sbb
divb
jle
mov
pop
orl
xor
lret
inc
or
xor
lcall
int3
fdivrs
scas
inc
xchg
pop
movb
mov
fcos
cld
push
lods
adc
jecxz
ds
xor
scas
xchg
inc
fcmovnbe
jnp
and
add
fdiv
cs
div
jb
ret
out
jge
xor
daa
outsb
xor
lds
jmp
adc
adc
push
or
or
sub
in
scas
jle
cwtl
jne
push
or
mov
dec
mov
ret
cmp
push
sahf
adc
dec
mov
and
mov
mov
sbbb
in
inc
mov
pop
mov
outsl
or
sbb
inc
adc
out
or
cmp
fcompl
stos
cmpl
jle
ljmp
bound
scas
js
in
divl
adc
jmp
xor
push
lret
mov
add
mov
bound
outsb
xchg
adc
and
addr16
inc
lods
mov
mov
xchg
dec
pop
mov
popa
test
mov
xchg
jo
mov
out
popa
add
push
xchg
or
pop
ret
arpl
dec
cwtl
cmp
jnp
cwtl
gs
mov
ljmp
cld
add
mov
ret
inc
lahf
pop
mov
fists
mulb
insb
push
aaa
jmp
orl
or
cmpsb
clc
sub
xchg
jecxz
imul
inc
in
fldenv
fs
xor
loopne
in
sahf
mov
pushf
dec
loopne
dec
cmc
stos
sbb
pop
jmp
mov
xchg
jb
pop
test
push
aas
daa
rcl
sbb
mov
mov
lret
rcll
test
sub
loope
push
xchg
fcomps
testl
dec
jl
mov
stc
sub
fmull
loopne
jne
in
sbb
or
xchg
mov
cmp
xor
es
int
clc
ja
cmp
mov
pop
dec
inc
sarl
xchg
push
dec
adc
in
inc
enter
mov
into
push
and
jnp
mov
cld
pop
pop
dec
pusha
mov
push
inc
xchg
bound
and
jno
and
adc
and
dec
nop
or
repz
dec
fcmovbe
sbb
mov
cmp
or
aad
xor
push
add
scas
sub
add
arpl
lods
dec
add
jmp
orps
mov
lret
lcall
aas
roll
test
negb
adc
jne
jge
add
leave
sti
cmp
adc
aam
testl
and
inc
mov
push
sbb
sbb
and
in
mov
mov
test
icebp
pop
scas
mov
inc
push
sbb
jne
cli
inc
fisttps
xor
inc
cld
incb
andl
imul
jle
jb
pop
bswap
jne
outsb
in
xlat
add
loopne
es
xor
mov
and
mov
mov
sub
aam
loope
out
lret
mov
xlat
mov
stc
adc
or
push
adc
mov
sbb
adc
xchg
sbb
imul
enter
cmp
sub
stos
pop
cmp
and
lds
dec
mov
out
ficoms
test
test
out
ret
jo
add
bound
jecxz
xchg
int3
jae
imul
mov
nop
pop
jne
mov
int3
fidivs
stos
mov
adc
enter
dec
adc
pop
sbb
sub
movsl
cld
ja
mov
jne
sahf
mov
mov
sbb
push
lods
cmp
xor
sbb
fdivrs
cmp
mov
cltd
pop
inc
pop
pop
mov
push
lock
dec
loopne
inc
jecxz
inc
sub
fstl
dec
out
sub
dec
jne
cwtl
dec
lock
orl
pop
jne
stos
xchg
leave
test
add
rolb
ss
testl
mov
dec
xchg
out
pop
and
aam
add
fsts
ret
adc
xchg
mov
add
mov
and
fdivrs
push
mov
sarb
bound
lcall
shl
mov
mov
aas
jnp
push
lret
cmpsb
cmp
jns
sbb
push
bound
shll
cli
dec
notb
roll
sbb
sub
mov
xchg
adcb
push
enter
cld
pop
mov
lods
out
or
adc
adc
sahf
fistps
repnz
lcall
inc
hlt
roll
jbe
adc
js
loope
jo
mov
pop
cmc
xor
test
clc
out
mov
fwait
pop
dec
cmp
addr16
dec
jg
lret
jmp
icebp
xchg
loop
inc
add
mov
xor
fwait
loopne
push
stos
cld
repnz
divb
mull
sbb
add
cld
ret
dec
lds
or
loop
fcompl
jge
jne
pop
or
dec
popa
popa
clc
test
mov
inc
iret
adc
movsb
mov
cmp
test
or
stc
mov
cmp
cli
xchg
pop
jb
sbb
lcall
js
aaa
inc
je
mov
and
addr16
sbb
xor
add
mov
scas
jae
outsb
aaa
iret
and
pushf
in
sub
mov
ljmp
fxch
pop
data16
js
mov
inc
mov
pop
add
xchg
js
sbb
cmc
dec
inc
cmp
sbbb
sub
mov
jmp
mov
mov
sqrtps
es
pop
inc
add
lods
pop
in
hlt
mov
sbb
and
int3
push
adc
sbb
push
ds
sub
mov
iretw
pop
xchg
pop
inc
xor
rcrb
and
popa
sbb
aas
jnp
mov
mov
sbb
arpl
iret
mov
and
mov
ret
jbe
sub
jecxz
out
lahf
pop
cwtl
add
jne
lea
cmp
inc
das
lret
mov
insl
jb
adc
xor
pushf
ja
jo
mov
push
outsb
and
imul
nop
mov
leave
mov
xor
fwait
add
out
mov
imul
sti
cmp
mov
mov
pop
cmp
aam
aad
pop
mov
adc
jg
iret
adc
push
jl
or
push
adc
fimull
mov
xor
jbe
push
pop
dec
data16
or
jge
or
and
fisubrl
sbb
jecxz
xchg
jg
out
pop
repnz
and
dec
and
in
fistps
rcll
outsb
sbb
push
push
ss
push
loope
es
mov
xchg
sub
pop
cmpsb
mov
mov
sarl
mov
ljmp
aad
nop
in
out
test
or
ss
inc
insb
pop
sahf
aam
ds
inc
pushf
mov
cld
push
inc
dec
sub
add
xchg
and
inc
jae
cmp
sbb
inc
ds
shll
dec
pop
or
dec
dec
in
outsb
sub
lds
pop
sti
fwait
sarl
out
push
stc
inc
outsl
add
lods
nop
imul
arpl
sub
cmp
stos
mov
or
cmp
pop
outsb
fidivrs
cmpsl
adc
sbb
sti
dec
jne
les
or
sbb
popf
adc
sbbl
jns
ljmp
aad
mov
dec
ret
test
aaa
bound
loopne
out
or
mov
jmp
mov
pop
jb
movsb
add
xchg
push
shl
ds
inc
pop
pop
cmp
pop
xchg
dec
dec
push
xor
ljmp
and
pop
xor
or
jmp
mov
jl
cwtl
dec
mov
cmpsb
mov
in
fsubrs
dec
mov
out
lea
gs
and
pop
sbb
xor
ror
pop
push
cmp
rclb
adc
mov
pop
push
inc
or
test
xchg
mov
cmp
in
xchg
sbb
mov
js
dec
sub
mov
sti
shl
dec
xlat
imul
inc
imull
sub
in
sbb
scas
shr
sbb
out
push
enter
sbb
or
jl
ss
sar
sub
jae
cmpb
mov
inc
out
int
dec
sbb
pop
testl
sbb
out
and
mov
dec
inc
aaa
pusha
jg
notl
mov
cli
fnstsw
outsb
nop
pop
enter
dec
jae
cvtps2pd
fnstenv
or
in
inc
repz
aas
lods
mov
shr
mov
enter
imul
std
push
out
out
jecxz
cmpsb
push
jge
enter
in
cmpsl
push
inc
or
mov
movb
loop
sub
mov
in
sub
jns
aad
xchg
cld
sub
add
jecxz
lds
test
sub
dec
mov
cmp
sti
jne
mov
cmp
mov
outsl
out
lea
push
xorb
mov
mov
sahf
jns
xchg
hlt
mov
or
scas
addr16
add
stos
jle
int3
addr16
popa
es
jae
pop
jp
jle
inc
scas
sub
or
jns
dec
std
lds
or
push
cmp
sti
outsb
mov
inc
xor
testb
dec
cmc
aad
and
adc
ret
push
rolb
sub
das
test
loope
gs
push
push
insl
push
push
adc
imul
xchg
call
addr16
xor
sahf
sahf
cmp
hlt
push
and
mov
mov
sbb
aas
pop
je
push
adc
repnz
push
js
leave
into
add
lahf
imul
or
out
add
ss
bound
add
lds
pop
pop
inc
out
cmc
push
lcall
cli
enter
sub
jnp
pop
sbb
jno
rol
shll
sbb
xorb
das
test
call
out
xchg
nop
cmpsb
sbb
adc
and
fisubrs
push
cmp
jo
xor
mov
lods
inc
push
and
test
or
mov
xchg
sub
inc
push
aam
lds
xchg
in
mov
or
cs
cmpsb
stc
insb
cltd
jne
movsl
dec
into
enter
mov
xor
xor
jbe
int3
roll
stc
lcall
mov
pusha
adc
or
mov
jmp
inc
xlat
js
adc
sbb
xchg
pushf
mov
adc
pop
loope
imul
adc
popf
push
xchg
inc
mov
sbb
addr16
movsb
cltd
fadd
mov
adc
lds
iret
fwait
outsb
and
fstl
rcll
lahf
xchg
and
cmp
imul
jns
adc
adc
add
pop
and
js
jge
imul
dec
pop
in
dec
lcall
fistl
jo
jae
mov
mov
push
cmp
xor
sti
js
aam
inc
imul
inc
mov
xor
test
jge
add
fisttpl
push
mov
repz
cltd
sahf
cmpsl
pop
in
fcomip
jle
fdivs
sbb
xor
cs
sbb
das
jno
xchg
dec
lods
idivl
sbb
sbb
je
insb
mov
or
pusha
xor
adc
pop
or
mov
loope
jle
jne
cld
fistps
lods
roll
push
lds
jl
mov
or
push
mov
leave
sub
insl
test
mov
sub
mov
imul
cli
stos
sub
xchg
addr16
sbb
xor
cltd
sbb
and
je
daa
outsl
push
cli
movsl
lea
les
test
adc
mov
push
sahf
aaa
fisttpll
add
jnp
pushf
sub
jl
mov
jmp
mov
ret
adc
adc
add
adc
sarl
pop
test
pop
jmp
test
in
cs
shrb
push
and
popf
out
mov
cmc
bound
xchg
addl
scas
dec
xchg
add
sub
hlt
dec
push
adc
pop
mov
out
push
ret
adc
in
inc
out
shlb
sbb
jnp
jno
lods
in
out
xchg
push
daa
pop
inc
lcall
and
mov
add
cmp
ljmp
sahf
imul
into
cwtl
inc
movsl
pop
bound
or
sub
in
loop
ret
push
mov
outsb
xchg
fadds
xchg
adc
cmp
jno
int
mov
repnz
fidivl
testb
addl
or
push
in
inc
lahf
add
jbe
pop
sub
xor
pop
sbb
and
aam
pushf
jp
rcr
pop
sbb
push
mov
scas
mov
and
add
cli
bound
scas
push
wbinvd
xchg
sbb
je
add
in
inc
jb
mov
sub
fstl
stos
andb
rcrb
inc
repz
lds
add
jae
mov
leave
into
dec
nop
pop
jb
in
add
or
mov
xor
inc
jbe
cmpsb
lret
mov
rclb
mov
mov
pop
ljmp
xchg
push
mov
cmc
sarb
dec
out
pusha
inc
jbe
mov
jo
ljmp
mov
call
dec
test
or
dec
sbb
mov
inc
pop
pop
pop
mul
enter
std
out
shlb
fcomi
mov
aaa
jge
scas
adcl
cld
ret
xchg
or
jne
mov
js
mov
sub
imul
xchg
nop
mov
xchg
fcomip
adc
leave
bound
aad
sub
out
ds
mov
or
fwait
jb
adc
movsl
mov
sahf
popf
or
sub
push
adc
mov
call
xor
or
mov
enter
sbb
stc
xchg
jecxz
int3
sub
or
adc
inc
or
add
jae
insb
leave
nop
push
icebp
dec
je
add
cli
sub
add
xor
mov
fs
pop
jle
jne
push
shrl
aam
pop
and
jb
sbb
dec
ret
cmpsl
jb
les
cmc
ja
adc
and
jg
mov
aaa
xchg
mov
scas
dec
fcompl
lods
shrl
cltd
sbb
popf
xor
je
pop
cmp
and
push
out
lods
xor
mov
sub
les
sub
stc
cmp
stos
mov
sti
push
mov
in
out
mov
int3
out
and
or
fstp
stc
emms
xchg
push
pop
inc
pop
pop
cli
decb
adc
dec
inc
mov
jnp
cs
xlat
inc
adc
jg
and
dec
push
xchg
movsl
xchg
push
mov
add
xchg
jg
pop
inc
xchg
pusha
into
mov
add
mov
mov
shrl
pop
dec
xchg
mov
shll
sti
shl
dec
sbb
mov
inc
test
adc
leave
mov
cltd
std
out
fisubl
mov
sub
lock
repnz
imul
sti
lcall
test
arpl
aaa
cmp
push
pushf
xor
scas
dec
lods
shll
add
out
andl
push
andl
fwait
push
xor
xor
jne
sub
in
jb
pop
pop
js
jno
icebp
xchg
jp
jp
ja
inc
pusha
dec
aas
insb
rcll
lret
push
push
addl
ja
or
aam
hlt
mov
movsl
push
sub
cwtl
sbb
cmp
jns
cmpsb
sub
loope
push
cmp
add
sbb
pop
fisubrs
aam
add
sub
aas
push
sbbl
mov
movsb
jne
pop
call
call
xchg
subl
xchg
sbb
pop
nopl
mov
inc
mov
cmpsb
sub
mov
dec
lds
inc
in
xchg
add
xchg
das
lret
test
jbe
inc
push
mov
int
cmc
xor
outsb
sbb
aad
cmp
mov
lcall
xlat
cld
ret
das
out
jl
push
enter
aas
sbb
pop
sahf
or
xchg
mov
or
mov
jmp
lods
fidivl
xor
lods
aam
arpl
sti
dec
jl
mov
out
jp
and
pop
xchg
fnstsw
test
push
push
fsubp
inc
xor
jb
dec
fistpl
loope
push
adc
dec
leave
das
mov
xchg
stc
sbb
push
cmp
and
push
adc
insb
ret
mov
imul
xorl
jmp
cmp
mov
sub
push
popa
inc
cmp
mov
sbb
mov
and
fldcw
outsb
in
es
data16
fdivr
icebp
test
inc
push
idiv
sbb
or
pop
mov
xlat
fldl
lds
popa
xchg
inc
mov
pop
sub
inc
insb
scas
lea
and
mov
xor
cmp
ljmp
sbb
in
dec
test
mov
dec
sbb
jns
loop
mov
xor
jg
adc
sub
push
pop
mov
outsl
and
leave
hlt
push
mov
out
jecxz
inc
jle
je
and
jl
push
dec
in
pop
lea
int
mov
pop
jno
vhaddps
fdivs
mov
fildl
cmp
fcoml
or
pop
jle
lods
or
cli
jl
shl
aad
shll
adcb
test
test
inc
les
mov
inc
fsubl
mov
stos
xchg
jp
sbbl
lods
arpl
xchg
imul
ljmp
mov
jle
loope
cltd
sub
xchg
or
call
movsl
jecxz
cld
push
aas
std
push
mov
loopne
jge
fidivl
xchg
in
jne
aam
add
jp
scas
pop
add
or
cwtl
add
daa
push
xchg
mov
pop
and
cmp
mov
and
ret
add
xchg
dec
pop
xor
adcb
pop
and
push
xor
lahf
ret
push
aam
cmc
add
mov
orl
mov
bound
sbb
pop
dec
fcompl
lods
sti
jnp
inc
aaa
cmp
insl
adc
stos
cmp
mov
fisubrl
cmpsl
mov
push
jns
adc
mov
jmp
out
xor
mov
and
jl
push
insl
aaa
push
dec
subb
mov
daa
movsl
sbb
out
ret
imul
xor
rorl
mov
pxor
lret
cmc
and
push
lock
aas
dec
leave
aas
scas
rorl
adc
xor
sub
jge
adc
flds
test
sbbl
push
and
mov
add
jb
jmp
insb
xchg
test
or
or
and
inc
lret
push
push
inc
pop
xchg
lods
xor
inc
cmp
mov
pop
sub
lea
xchg
mov
jne
cmp
fisubl
iret
cmp
imul
sbb
rsqrtps
sub
fadd
cli
xchg
clc
xor
sbb
push
xchg
add
mov
push
dec
mov
subb
xchg
mov
arpl
mov
pop
push
popa
test
inc
cld
add
int3
test
or
push
movsb
and
push
in
ficoms
cs
pop
pop
rclb
dec
imul
bound
pop
push
out
inc
jns
mov
test
popa
mov
sbb
aas
jb
aaa
cmpsb
rorl
mov
xchg
lahf
std
testb
add
cltd
add
out
ss
jo
cmp
test
cwtl
fisubrl
add
in
call
dec
shrl
inc
jl
cmpb
xor
les
push
pop
xlat
pop
pop
mov
cmc
loope
ja
or
fbstp
loopne
movsb
sub
sarl
faddl
popa
test
adc
xchg
pop
sbb
dec
arpl
add
fsts
lock
outsl
xchg
jmp
push
rcl
adc
or
sbb
fidivl
jno
push
adc
push
cmp
dec
xchg
mov
push
jecxz
stos
pop
xor
inc
clc
ret
push
je
pop
aas
jg
mov
xchg
movsb
int
loopne
out
hlt
cmp
fs
test
bound
xor
cmpsl
push
lods
inc
arpl
jg
mov
mov
push
shll
xlat
dec
out
and
sbb
pop
xlat
mov
xor
mov
dec
mov
test
arpl
je
and
lods
scas
aad
sbb
ret
jp
mov
mov
mov
xchg
cltd
cmp
sbb
pop
ljmp
xchg
je
addl
out
mov
mov
cmp
xor
les
std
xchg
stos
and
int3
push
push
std
outsl
jl
sub
add
pop
mov
dec
loop
push
dec
data16
mov
fptan
push
lock
and
rcll
xchg
and
push
or
aaa
pop
mov
pop
popa
in
mov
or
xchg
push
notl
ffreep
popa
sub
roll
lret
roll
xor
pop
sarb
and
jecxz
mov
mov
test
xchg
mov
in
mov
femms
push
mov
movsl
div
scas
pop
cmp
lods
pop
xor
sub
add
or
mov
mov
lods
ljmp
mov
js
stos
inc
pop
int3
lcall
ss
xor
aaa
loop
sub
pop
shlb
cwtl
cwtl
push
fisubrs
out
ss
inc
shl
mov
jl
icebp
call
mov
push
lds
pop
repnz
and
xor
mov
lea
jg
ja
mov
sub
scas
pop
cmpsl
mov
test
fsubrp
fiaddl
and
icebp
mov
dec
lock
aam
subb
sub
inc
pusha
adc
cmp
xchg
push
sub
push
jle
mov
lods
aad
imul
xor
mov
pushf
arpl
dec
es
jns
roll
movsb
pop
out
mov
cs
push
mov
sahf
jecxz
sub
xlat
iret
icebp
push
pusha
lahf
mov
push
pop
mov
pop
testl
movsb
adc
pop
xchg
aad
ds
leave
jp
pop
cmc
test
dec
push
mov
pushf
cwtl
xor
xor
inc
inc
jge
in
adc
data16
push
movl
sbb
push
shlb
mov
jnp
jle
ss
jb
sbb
repz
xchg
push
inc
addr16
imul
dec
les
leave
pop
inc
incl
adc
jo
ja
xchg
es
das
adc
loopne
out
imul
adc
inc
dec
sahf
mov
xchg
jo
int3
repnz
lcall
popf
clc
jmp
outsl
leave
xor
pop
imul
pop
pop
jp
xchg
push
cltd
fistpl
pop
or
inc
fs
push
adc
and
popl
aad
mov
push
or
mov
or
scas
pusha
add
cltd
xor
mov
lods
cwtl
push
lahf
mov
scas
push
or
mov
les
pop
int
add
pop
or
jg
sbb
out
dec
jae
popa
and
pop
rorb
push
out
sub
xor
mov
ss
repz
test
pop
mov
movsl
arpl
aam
ret
xor
or
in
test
enter
je
nop
mov
add
sbb
lret
sbb
pop
xchg
jns
inc
insb
cmpb
stc
sub
pop
fsts
pop
push
lods
lcall
iret
rorb
cmp
int3
inc
adc
cli
call
jno
xor
ficompl
sbb
int3
pop
adc
jb
and
clc
jno
push
add
cltd
dec
addl
js
jnp
in
call
in
pop
dec
aas
aaa
int
test
pusha
arpl
jnp
xchg
or
loopne
mov
cltd
into
pop
inc
jae
dec
mov
mov
dec
idiv
sbb
int3
in
iret
loope
ffree
push
mov
mov
sub
rcll
movsb
test
mov
jns
js
movsl
add
jae
in
jbe
mov
adc
sub
push
jne
cmp
cmc
adc
rolb
mov
fcmovu
adc
test
icebp
sti
xor
into
sub
lret
repnz
lods
leave
dec
jecxz
iret
loopne
xor
jbe
int3
jle
pop
pop
fiaddl
hlt
or
mov
pop
and
outsb
adc
loopne
ja
mov
cmp
inc
xor
pop
rclb
cmp
pop
mov
push
ds
push
dec
mov
xor
and
out
subl
orl
or
rsqrtps
xchg
es
xchg
repnz
aam
nop
enter
cmpsb
or
scas
lahf
sbb
ss
cwtl
mov
shr
or
sub
ljmp
push
call
and
mov
xor
push
outsb
std
push
jle
rcrl
out
sbb
mov
push
pop
push
xchg
pop
test
out
rorl
adc
in
bound
hlt
clc
aaa
mov
int3
pop
sbb
sahf
push
imul
inc
and
popf
shrl
sbbl
or
pop
push
or
pmaxsw
pop
adc
push
cmc
mov
xor
fidivs
ljmp
ss
inc
mov
fcompl
test
lret
mov
fsubrs
cli
add
push
lods
cmp
mov
jne
ds
pop
popf
push
sbb
add
ror
stc
inc
xchg
jecxz
dec
jle
cmp
xchg
ds
das
cwtl
cmpsl
cmpsl
mov
shll
mov
or
addr16
ret
fisttpl
xchg
insb
mov
mov
add
adcb
mov
pop
call
xchg
test
idivl
enter
and
inc
sbb
insl
push
cmp
mov
xchg
je
addr16
repz
mov
sti
add
cwtl
pop
add
add
cmp
jmp
push
fcoml
jo
or
shl
mov
jge
inc
int3
inc
mov
fs
repz
dec
mov
mov
mov
ficomps
push
mov
xchg
repz
inc
xor
call
movsb
std
clc
mov
cmp
mov
daa
pop
mov
rol
or
imul
mov
mov
divb
shrb
insb
xchg
std
and
mov
movsb
ss
dec
cmp
xchg
stos
test
jle
jmp
mov
mov
mov
inc
adc
dec
loope
sahf
add
sbb
out
stos
lret
in
pop
push
mov
outsb
push
in
sarl
mov
mov
inc
jns
insl
sti
out
pop
or
or
shl
sub
loopne
jp
sub
mov
addr16
iret
add
cmp
mov
inc
dec
mov
mov
inc
das
hlt
jno
adc
jns
arpl
dec
adc
jne
adc
les
cmc
pusha
mov
pop
xor
sahf
fs
push
fisubl
mov
lret
orb
das
adc
or
mov
xlat
mov
in
popa
cs
adc
jl
sbb
add
push
xor
sub
int
loopne
mov
sbb
clc
xchg
jne
popa
or
stc
out
aad
pop
dec
jmp
push
mov
icebp
ss
push
sti
fwait
xor
dec
sub
inc
push
sahf
cmp
jbe
push
gs
movsb
in
adc
jl
adc
stos
aam
xchg
jmp
push
add
mov
sub
xor
popa
fisubrs
mov
js
pop
ds
add
jmp
inc
andb
push
iret
inc
sarb
cmc
rcrb
mov
cmp
in
sub
test
and
and
mov
sbb
jno
mov
popw
in
add
adc
or
sub
dec
jbe
bound
icebp
lods
mov
dec
push
adc
push
in
and
mov
dec
inc
in
jae,pt
push
lods
test
lret
dec
shll
fimull
cmp
aad
mov
push
xorl
outsl
js
mov
ret
xchg
decb
inc
lods
and
aad
dec
insl
enter
xchg
hlt
add
jg
or
mov
lds
icebp
out
sub
and
pushf
movsl
mov
outsl
insb
or
or
adc
sub
fldt
repnz
ja
das
push
mov
xor
jbe
xor
cmp
mov
insl
shrl
repnz
mov
cmpsl
adc
sub
movsl
in
cmp
sar
les
mov
mov
inc
pop
jbe
outsb
dec
test
xor
sti
add
inc
sti
jns
aas
jg
scas
push
mov
push
jecxz
in
jno
sbb
shlb
jae
cmp
cltd
xchg
xchg
jecxz
pop
in
lods
leave
or
adc
rolb
and
rorl
xor
xchg
lods
movsl
dec
sahf
and
adc
mov
pop
push
fcoml
sub
xor
ja
outsl
leave
out
stos
scas
pop
leave
sbb
add
push
pop
xchg
sbb
cmp
adc
xchg
xor
inc
test
push
pushf
cs
cmp
mov
out
mov
orb
test
inc
outsb
cltd
movsl
add
sbb
nop
or
shrl
add
subl
jle
sub
cmpsl
mov
pop
push
mov
sub
stc
shrl
icebp
cmc
dec
mov
adc
sarl
dec
lahf
adc
jmp
jg
xchg
cli
jp
lcall
rorb
ret
xor
loop
in
push
cmp
leave
aaa
xchg
push
out
inc
rclb
fdivrl
lret
sbb
pop
mov
mov
jne
cmp
fsts
dec
test
insb
bound
loopne
pushf
inc
lret
and
or
mov
fnstsw
mov
mov
xor
jle
daa
jbe
adc
and
in
ret
dec
cvtdq2ps
add
push
mov
fcmove
outsl
movsl
xchg
hlt
loopne
gs
sub
dec
scas
fwait
push
dec
bswap
mov
fildll
int
test
xor
push
popf
dec
cmp
sub
add
insl
or
push
unpckhps
dec
add
inc
inc
push
ljmp
and
bnd
es
or
test
in
sbb
sahf
pop
out
cltd
mov
inc
and
jge
fucomi
clc
adc
test
and
je
enter
mov
inc
sti
pop
loopne
mov
vpunpckhbw
or
add
adc
pop
in
and
jno
mov
cmpsb
dec
adc
xchg
es
push
cmpsl
dec
mov
push
xor
xchg
outsb
negb
jl
sbb
pop
fidivrl
cmpsb
scas
scas
xor
inc
lret
mov
cmp
iret
clc
jns
mov
leave
mov
stos
testb
fwait
push
or
addl
or
loopne
or
je
add
pop
mov
adcb
cmp
jo
fs
fstp
mov
addb
push
stos
pop
jae
jle
pusha
mov
cmpsl
push
iret
mov
pop
pop
into
adc
daa
sahf
pop
in
adc
andb
cmp
scas
mov
jne
xchg
ret
or
jnp
cltd
and
arpl
jp
jl
or
sub
fnsave
pop
inc
xor
mov
outsb
push
test
cmp
lahf
add
sub
jp
dec
push
mov
ret
or
int
xor
shlb
mov
nop
xlat
sub
sbb
test
cmp
pop
stos
add
enter
out
mov
inc
rorb
sbb
mov
mov
cmp
repz
cmpsl
mov
or
leave
mov
not
test
cmpsl
xor
mov
cmpl
xor
addl
xchg
push
pop
cmpsb
adc
sar
xchg
inc
xchg
test
andl
dec
jmp
mov
int3
das
xchg
imul
jns
or
dec
out
outsb
call
push
push
mov
cmp
inc
cmpsb
cli
pusha
iret
and
lcall
add
int3
pop
mov
dec
fsts
xor
lods
add
add
cld
mov
and
adc
dec
lea
pop
cmp
or
pusha
fisubs
sbb
pop
inc
scas
sub
push
sub
dec
bound
iret
ljmp
xor
xchg
pop
sti
and
arpl
and
rclb
rcll
add
cmpsb
xchg
fidivs
int3
and
jbe
movsl
mov
or
push
or
stos
clc
mov
fisubs
popl
push
mov
cmp
nop
xor
push
sbb
enter
out
insb
cmpl
stos
aam
mov
in
inc
sub
jp
ja
cwtl
adc
clc
mov
or
cmove
and
dec
push
cmpsb
xor
fdiv
ret
lahf
cmp
lcall
les
lcall
fldcw
dec
bnd
pop
jmp
mov
jge
cmp
nop
mov
fdivrp
and
scas
mov
out
aam
push
add
xchg
jp
outsl
cmpl
out
stos
sti
cmp
mov
sub
sub
xchg
xchg
popf
nop
imul
inc
sbb
jns
or
jbe
rorb
out
jge
add
test
inc
mov
ret
pop
pop
and
mov
sub
xchg
subl
in
xlat
ja
imull
sub
sahf
pop
aad
jecxz
in
loop
mov
stc
pusha
cmp
fstpt
pop
lcall
add
movsl
pop
inc
push
add
das
sub
cmp
sahf
pop
dec
or
sub
xchg
push
xlat
xchg
bsr
dec
and
push
inc
mov
jo
sub
shlb
rorl
mov
mov
loop
pop
jg
fidivrl
lret
insb
jmp
cmp
xor
xchg
dec
push
pop
out
sbb
int
mov
outsl
insl
mov
ficoms
pusha
xchg
push
add
bound
xchg
loopne
lea
xor
mov
jge
dec
ret
andb
in
aas
shlb
mov
mov
out
insl
imul
adc
pop
setb
mov
jae
xchg
int3
sub
cmpsl
lahf
imul
call
out
lock
mov
fistl
lea
lcall
scas
repnz
sbb
xor
outsl
mov
ficompl
sbb
in
jle
int
pop
pop
push
xchg
push
xchg
test
stc
andl
pop
add
outsl
adc
and
pop
pop
pop
xchg
mov
pusha
pop
jg
jns
or
scas
push
sbb
xchg
xor
ljmp
aaa
and
add
sub
in
cmp
stos
movsl
adc
negb
adc
or
sbb
cmp
js
mov
jmp
inc
sti
and
cmpsb
xchg
adc
mov
insb
jbe
out
xchg
mov
dec
xor
pop
fs
lea
subl
jne
arpl
popf
jb
jnp
dec
pushf
pop
add
das
mov
cld
movsb
inc
fcmovnu
adc
int3
xchg
or
not
inc
push
outsb
js
jns
xor
jae
cmp
cs
jnp
xchg
mov
mov
add
ret
jnp
push
insl
pushf
push
mov
imul
jno
dec
jne
cs
xchg
xchg
mov
vmwrite
fildll
shr
push
mov
inc
int
fmul
ja
ret
xchg
lods
loopne
or
jb
ljmp
test
pop
mov
dec
arpl
rcr
jns
sbb
or
mov
mov
dec
ret
xor
jp
mov
push
fidivs
xchg
fcompl
dec
mov
fistpl
pop
pop
cli
out
outsb
js
sub
ja
ss
hlt
inc
dec
pop
es
pusha
push
pop
sub
mov
std
push
cmp
push
pop
fistpl
jns
rol
add
std
jb
push
dec
orb
cmp
out
cli
stos
sub
fildll
pusha
gs
in
loopne
dec
jge
jl
dec
inc
cmp
add
pop
sub
addr16
std
movsb
ljmp
nop
jg
arpl
or
mov
jbe
mov
mov
mov
movsb
cltd
cmpsl
ja
mov
popf
cmc
les
sahf
jbe
jae
sbb
outsl
sub
sbb
cmpsl
inc
pushf
cmp
push
xor
pop
dec
inc
insb
loop
sbb
mov
cmpsb
cltd
inc
test
inc
pop
popl
mov
sub
test
xchg
subl
push
mov
subl
mov
mov
mov
xor
fwait
jmp
call
jmp
xchg
pop
inc
mov
xor
inc
in
daa
adc
popa
clc
loopne
scas
jno
and
cmp
push
adc
jb
sub
push
push
and
lock
sahf
push
insb
xor
cmpsb
int3
sub
add
lock
ret
sub
and
mov
adcl
lock
inc
jns
repz
mov
int3
les
inc
fidivrl
movb
bound
push
shrb
pop
fcmovnb
cwtl
push
movsb
repz
in
ret
xchg
sahf
icebp
lcall
cmpb
rcll
test
jp
or
jo,pn
sbb
stc
fstp
or
xor
sqrtps
jg
fsubrs
or
push
jbe
ret
jno
das
lods
scas
jmp
push
cmp
push
mov
ja
fs
sub
mov
jmp
dec
mov
movsb
es
mov
popa
les
out
stc
ret
sub
sbb
or
in
arpl
pop
pop
ret
jle
imul
adc
cwtl
push
mov
sbb
pop
loopne
leave
inc
lcall
push
jge
cs
xchg
lcall
loope
and
aaa
cmp
mov
mov
cld
push
xor
test
inc
mov
in
std
ds
xchg
mov
cmp
xor
adc
push
mov
call
pop
sbb
push
push
insb
fwait
enter
add
aaa
dec
push
add
jecxz
xchg
lock
sub
lock
mov
or
leave
out
mov
jg
jne
mov
cmpsb
sbb
shl
shlb
gs
jle
stos
les
mov
xchg
sbb
jne
in
push
inc
pop
cli
dec
sarl
imul
xor
in
xor
sahf
and
mov
xor
sub
pop
sub
cbtw
xor
dec
fnstsw
gs
xor
xchg
or
lea
aas
push
pop
mov
sbb
enter
repnz
jle
dec
push
popa
xor
mov
mov
lds
xchg
cltd
imul
inc
rcll
cli
ja
jns
ds
xchg
lret
or
hlt
pop
ljmp
mull
je
es
or
fisttpll
sahf
mov
and
lds
gs
jg
cmp
cltd
fidivrs
dec
pop
in
out
fucom
fists
movsl
das
jmp
lret
adc
imul
cmp
sysexit
imul
push
mov
cmc
notb
popa
outsb
aas
les
fsubrs
ja
ret
dec
push
push
adc
pop
adc
test
and
je
push
icebp
loopne
xchg
mov
push
pop
sbb
out
scas
sub
jl
mov
sub
bound
mov
xchg
fsubl
enter
cmp
pop
xchg
data16
jno
movsb
xchg
mov
stc
iret
pop
fstpl
mov
mov
sub
lcall
js
pushf
pusha
in
and
sti
repz
fisttpll
jns
faddl
cltd
or
xor
lods
push
push
imul
jae
pop
push
jbe
jo
jge
ljmp
sar
sti
push
add
lea
fldcw
jmp
ja
sub
shll
add
inc
jns
clc
dec
test
fcmovnb
cmp
mov
push
fmul
adc
dec
jno
testb
repnz
jae
imul
fs
pop
dec
or
mov
loopne
jnp
fistps
arpl
mov
lgs
cmp
out
je
shrl
movl
shlb
icebp
insl
mov
pop
inc
sub
pop
and
mov
pop
adc
cli
fdivs
loop
mov
mov
inc
fs
clc
cld
pop
into
repnz
out
aad
test
add
sub
cld
call
fcompl
xchg
arpl
sbb
pop
pushf
xchg
aas
sbb
in
xor
es
xchg
fimull
xor
lods
leave
stc
jge
dec
adc
fs
outsl
rorb
icebp
and
mov
xor
fsubl
fildl
popf
mov
mov
dec
movsl
out
jge
cmp
mov
mov
ja
sti
jecxz,pt
data16
iret
mov
ljmp
cmp
cwtl
aam
data16
shl
test
in
pop
dec
lock
decl
jl
cmc
cmp
popa
test
adc
mov
pop
adc
push
leave
sbb
popa
pop
jbe
push
test
xor
incl
xlat
ds
gs
insb
fstl
inc
mov
mov
cmp
jbe
lret
jmp
sub
and
mov
sbb
int
mov
sti
roll
or
jnp
mov
xor
xchg
mov
jp
xchg
mov
call
and
pop
inc
out
adc
mov
mov
push
xchg
add
or
sbb
push
xchg
outsl
aaa
in
xchg
inc
arpl
and
push
jno
mov
push
jmp
xor
sbb
add
andl
das
sub
loope
xor
inc
imul
cbtw
mov
mov
or
es
push
push
stc
pusha
mov
icebp
mov
fildll
add
pop
or
pop
and
mov
lret
jbe
negb
std
notb
loopne
je
or
sbb
pushf
in
sbbl
or
cli
mov
xor
sbb
lcall
aaa
dec
mov
repz
xor
xchg
clc
test
push
test
xor
lea
aad
mov
incb
jmp
xor
call
loop
mov
imul
mov
insl
cmp
mov
loopne
pop
adc
sbb
xor
shrl
cli
movsb
cmp
push
sti
lods
inc
mov
dec
lret
adc
adc
out
mov
push
dec
inc
mov
mov
push
cmp
sbb
lods
js
xchg
push
jnp
js
lret
cmp
inc
loopne
sub
insb
mov
stos
lret
xor
sti
clc
js
mov
jns
xlat
mov
lods
mov
inc
aaa
or
cmc
push
call
mov
das
sbb
lods
xchg
dec
cmpsb
adc
adc
test
nop
cltd
mov
leave
shll
push
push
dec
sub
inc
arpl
gs
push
push
fs
int3
pushf
mov
xlat
jmp
test
test
sti
ss
sti
loopne
mov
aaa
fs
pop
inc
scas
nop
push
cmp
mov
dec
pop
sti
xchg
insb
int3
jae
pop
dec
imul
je
in
lea
jle
repz
mov
movsl
sbb
ds
dec
fidivl
enter
push
sub
call
sbb
js
add
mov
ljmp
test
add
xor
das
out
jle
or
fimull
nop
dec
pop
xchg
inc
mov
mov
loopne
ret
adc
ja,pt
iret
popa
fstps
dec
dec
into
mov
pop
dec
int3
subl
cltd
mov
mov
pop
jb
xchg
cmpsl
aaa
cmpsb
jb
and
jno
sar
enter
test
iret
aas
sti
fmuls
mov
out
xor
mov
loop
mov
data16
push
ret
adc
cmc
pop
adc
xchg
cmp
ds
xchg
shrb
cmp
sub
popf
es
js
stos
sbb
sbb
out
push
cwtl
inc
pop
es
std
sub
out
sbb
mov
aas
adc
push
push
repnz
test
pushf
mov
hlt
int3
inc
adc
cmp
std
push
pop
fnstsw
call
shll
and
cmp
xor
pop
inc
sbb
movsl
sbb
roll
repz
mov
lods
cmp
cld
push
jo
dec
add
aam
rol
icebp
jmp
jnp
out
ret
mov
xchg
jne
out
idivl
dec
add
lods
scas
imul
fiadds
xchg
push
add
mov
into
inc
xor
sub
sbb
call
les
and
adc
pop
scas
es
cmp
mov
adc
addb
shlb
repz
repnz
cmpsb
maskmovq
imull
cltd
push
sbb
push
hlt
insb
rclb
add
fwait
fwait
xlat
or
test
lret
addb
jne
lock
out
sbb
mov
stos
add
pop
lret
movsl
enter
arpl
jb
inc
sbb
lods
hlt
sub
sbb
sbb
push
repnz
je
ror
les
mov
repz
popl
icebp
daa
sub
xor
scas
ret
jmp
xchg
mov
push
int3
xor
xchg
jg
cmc
xlat
seto
sbb
mul
push
in
push
dec
mov
shll
push
pop
ror
mov
add
outsb
cltd
inc
pusha
sahf
stos
stc
fildll
adc
cmp
mov
mov
mov
test
pushf
add
cmp
lock
adc
and
imul
idivl
popf
push
mov
call
adc
ds
xor
sub
aam
sub
push
add
dec
aam
xor
mov
insl
dec
inc
and
sbb
cli
pop
add
dec
xlat
xor
stos
mov
icebp
neg
cmp
xchg
mov
movsb
xor
mov
xchg
aam
mov
mov
test
cmp
mov
adc
mov
imul
xchg
push
sbb
adc
jle
mov
ret
fwait
push
sbbb
out
outsb
push
push
adc
lds
add
les
mov
jne
pop
push
inc
jmp
mov
push
pop
inc
mov
jl
mov
into
in
push
outsb
je
xchg
xor
mov
fiadds
gs
les
stos
fisubs
mov
ljmp
jo
jg
xor
sbb
xchg
jp
sub
mov
adc
arpl
mov
add
out
mov
stc
and
mov
rolb
std
rol
shll
adc
imul
lods
jle
xlat
test
inc
out
dec
pop
daa
repz
jp
xchg
xchg
inc
ja
jp
dec
ficompl
out
je
int
mov
inc
cs
jle
mov
dec
mov
mov
or
sbb
popa
js
rcrb
call
test
sbb
lock
sub
sub
fsubrl
std
lahf
jbe
ja
or
mov
ret
sarb
and
and
jle
mov
inc
push
in
enter
rorl
fildl
cltd
jg
jle
mov
push
xlat
fldenv
ret
test
dec
sub
jo
mov
ja
aad
jmp
ret
mov
and
leave
pop
jbe
xchg
inc
iret
cmp
xor
inc
fmul
jbe
out
mov
divl
adc
mov
sbb
jne
cli
inc
xchg
cld
mov
lock
idivb
mov
fldt
gs
mov
xor
pop
rorb
addr16
xchg
add
shrl
cmp
mov
push
mov
loop
cli
mov
shl
call
cmp
data16
movsl
push
push
notb
jb
xor
mov
inc
dec
push
xchg
xor
xor
xchg
inc
push
cltd
outsb
fidivl
dec
cld
dec
adc
fsubrs
fistpl
push
pop
aas
push
cltd
sbb
inc
dec
mov
push
aam
lds
test
push
adc
jmp
push
imul
fst
cmpsb
inc
in
in
jno
pop
loope
jmp
xchg
in
inc
lock
mov
mov
notl
pusha
xor
int3
push
imul
xor
xchg
mov
sub
dec
ret
cmpsb
cltd
mov
dec
sbb
mov
pop
fs
gs
repnz
jae
insb
icebp
sub
mov
adc
jp
jmp
fcmovnu
sbb
or
push
pop
jb
pop
sarb
sahf
cwtl
icebp
in
fcomps
jge
insl
pop
sahf
push
test
fmull
stc
int3
cs
sub
and
pusha
movsb
pushf
push
jg
mov
outsb
push
js
ficoms
cmp
add
enter
mov
ret
andb
pop
repz
loope
cld
in
xchg
mov
int
das
mov
shll
out
shrb
and
adcb
mov
mov
jl
push
xlat
and
and
pop
adc
loope
mov
inc
sbb
cmp
loop
lds
push
pop
aaa
loope
mov
pop
aad
sbb
negb
out
adc
add
jle
aaa
adc
sub
inc
lea
jmp
sub
mov
sub
sub
push
jbe
scas
std
pop
ja
mov
jae
and
xchg
lock
sbb
inc
cltd
jp
shr
fiadds
pop
dec
idiv
je
fst
pop
xor
in
cmp
pushf
mov
cmp
orb
xchg
in
mov
sbb
xchg
lock
xchg
ljmp
inc
test
in
push
mov
aad
ret
loop
ret
lds
popa
aaa
shlb
lods
mov
and
push
fs
stos
mov
inc
notb
jnp
addl
arpl
iret
pushf
ljmp
cwtl
sbb
mov
or
inc
ret
mov
popa
mov
jl
outsl
pop
sbb
rclb
shll
sub
or
cmc
shrl
push
pop
stos
enter
out
xchg
iret
fucomi
in
mov
dec
xchg
pop
add
pop
movsl
icebp
je
jg
arpl
inc
test
les
cwtl
int3
sbb
lods
jnp
loope
les
sub
push
dec
sbb
adc
jl
in
jl
mov
mov
push
cmp
xchg
test
sub
or
push
aad
pop
xor
mov
mov
rcll
mov
xor
and
adc
or
sbb
xchg
shll
xchg
jmp
cmc
cmpsb
inc
jp
cltd
pusha
int3
arpl
xor
adc
mov
fucomp
push
popf
dec
pop
push
xlat
push
js
add
scas
lods
push
icebp
bound
mov
xlat
fildl
dec
jmp
cmpb
mov
sub
dec
mov
int
fprem
lods
ss
or
scas
add
ret
xor
int3
pop
cmc
aaa
repz
sub
inc
lock
cmp
push
pushl
test
inc
dec
xor
sub
sbb
jp
lods
stc
push
jns
test
repz
fcomi
xor
gs
push
out
or
add
cld
pop
push
xor
aaa
jmp
ja
inc
ds
mov
and
push
sahf
cmp
dec
ret
xchg
in
ret
les
xchg
ss
push
pop
jno
mov
mov
fidivs
pop
lods
pushl
bound
mov
orl
mov
mov
iret
mov
add
shll
shr
dec
jo
sbb
fdivr
xlat
fdivrl
xor
xchg
pop
dec
dec
add
test
aam
xchg
mov
ja
iret
push
sub
insb
jns
subps
jmp
jg
dec
fistps
out
pop
xor
mov
or
dec
movsb
mov
or
out
add
bound
mov
mov
lcall
add
fisttpll
xor
loop
fwait
in
push
jb
sub
xor
int3
or
in
into
pop
mov
insl
leave
jb
sbb
mov
jmp
and
pop
or
inc
stos
int
cmp
sub
insb
push
inc
jp
rorl
mov
sti
shrb
adc
cmp
jnp
stos
mov
or
adc
in
pop
scas
dec
push
mov
jmp
into
mov
cmpsb
pop
outsb
ret
mov
inc
jmp
or
push
mov
cld
fsubl
cltd
adc
lds
pop
out
jge
aam
xor
push
jo
mov
dec
test
and
out
pop
lods
fmull
lretw
pop
jle
push
and
push
negl
add
push
stos
nop
sbb
xor
in
lret
dec
push
adc
mov
or
push
fnsave
dec
mov
push
loope
dec
addl
fdiv
mov
hlt
xor
shlb
mov
xor
xchg
inc
push
ja
aaa
jmp
test
dec
xchg
xor
fs
stos
mov
int
mov
mov
cmp
enter
adc
daa
inc
pop
out
jg
xor
lock
lods
adc
imul
dec
fucomip
or
xor
in
mov
subl
int
pusha
stos
aas
inc
or
mov
rcrb
adcb
jne
jmp
pop
fisubrl
pop
xchg
dec
repz
mov
outsl
outsl
out
jge
mov
and
dec
std
insl
mov
clc
mov
aad
cmpsb
push
mov
mov
xor
mov
add
lret
add
and
lods
cmp
xor
add
ret
jge
mov
into
mov
cmpsb
mov
cmp
sub
fs
mov
cmp
inc
popf
pop
sbb
jecxz
movsb
jmp
mov
ljmp
clc
pushf
bound
dec
lods
push
xchg
adc
mov
push
adc
jmp
in
xchg
cmp
mov
push
mov
add
seto
test
cwtl
sti
push
fwait
sbb
jne
pop
add
iret
lret
dec
cli
pushf
inc
in
insb
add
lods
cmp
aam
int3
jg
cmp
mov
aam
dec
dec
xchg
jge
adc
mov
mov
fcoml
sub
cmp
out
jb
int3
ss
mov
dec
out
inc
aam
test
pop
lcall
sub
pop
ss
into
or
faddl
imul
out
dec
into
cli
ja
adc
inc
insb
add
jno
cmp
fwait
add
out
cmp
sbb
dec
divb
fwait
in
pop
loope
out
into
xchg
cwtl
add
cld
dec
sub
cmpsl
dec
inc
sub
dec
jnp,pt
sbb
insb
jg
jae
insl
mov
mov
jns
mov
and
xchg
int
and
jbe
pusha
out
lock
dec
mov
inc
xor
xor
cmpsl
inc
pop
push
andb
pop
jbe
adc
fnsave
xchg
jns
movsb
push
inc
xor
insb
add
lea
or
mov
mov
xlat
andb
push
fadds
jmp
sub
jmp
jae
or
mov
in
enter
hlt
lock
push
and
adc
jmp
shll
js
lret
xlat
mov
mov
pop
cli
ja
je
mov
mov
inc
cwtl
inc
jns
cmp
rol
and
xor
adc
in
iret
rorl
mov
decl
pop
dec
out
inc
inc
pop
scas
mov
popf
xlat
fs
movsb
fsub
out
test
arpl
push
jae
sbb
ja
or
lahf
sbb
jp
xor
inc
dec
lock
aas
inc
incl
jno
call
add
adc
outsb
lock
jne
xchg
sub
imul
mov
stos
mov
xchg
int
inc
or
pop
pop
into
mov
or
test
xor
ss
inc
pop
dec
mov
shl
cmp
addr16
lds
mov
pop
aad
push
sub
or
push
dec
xchg
lods
ljmp
lods
or
sbb
mov
dec
cmp
ja
loope
adc
cmc
loopne
daa
cs
mov
xchg
daa
ret
mov
imul
pop
scas
cltd
mov
add
jbe
jl
or
icebp
aad
or
subb
call
cmpsl
cmp
and
xchg
cmp
and
int
cmpsb
lret
xchg
ret
popl
inc
dec
aad
scas
pop
pop
test
xchg
xor
and
fidivrl
xor
or
inc
out
decb
mov
movsb
lds
gs
sbb
adc
and
lods
bound
mov
fcompl
xor
add
int
pop
push
and
cmp
jg
dec
fs
imul
stos
sbb
outsb
xchg
test
sti
ret
out
dec
jb
add
xlat
sub
cli
movsl
sub
pop
inc
mov
not
jle
xchg
cmp
repnz
mov
into
out
sti
dec
pop
aaa
rorl
in
in
mov
jno
or
cmp
stos
pop
cmpsb
leave
dec
or
or
rcrl
les
imul
xor
popf
test
jle
popa
je
or
sub
inc
adc
or
dec
xor
clc
jp
dec
cltd
stc
adc
cmpsl
cmp
bound
subb
xor
outsb
jg
mov
mov
mov
scas
pop
fxam
mov
mov
mov
movsb
shll
enter
subb
scas
or
push
stos
movb
pop
ljmp
xlat
into
fistps
rcrb
cmpb
shll
sub
mov
jge
cltd
inc
push
gs
clc
inc
adc
clc
jns
jno
popf
jge
pop
js
addl
mov
xchg
out
cmp
fnsave
sbb
cmpsl
mov
test
jge
jae
sub
rorb
mov
adc
sti
add
xchg
sbbl
lods
stos
push
adc
ds
pop
cld
outsl
fwait
lods
repnz
push
push
movhlps
xor
out
and
sub
arpl
push
ret
jo
push
and
xchg
push
inc
sbb
dec
into
shlb
dec
subb
sbb
xchg
and
mov
out
stos
jb
mov
int
in
push
shll
and
movsb
or
sbb
add
rorb
push
add
mov
jnp
lahf
cmp
push
mov
movsl
das
mov
adc
adc
je
pop
jns
push
mov
jecxz
and
jle
sub
push
inc
add
sub
xor
add
test
cwtl
jg
aad
inc
jae
adc
in
loope
cmpsb
aas
daa
jnp
or
pop
adc
mov
fsubs
rcll
outsb
xchg
fsub
pop
lcall
or
inc
mov
enter
push
pop
testl
xor
insb
aad
iret
fdivrl
jbe
jmp
nop
pop
xor
push
aas
sub
xchg
enter
aaa
imul
int
out
cmpsb
inc
ss
lcall
sbb
inc
xchg
ja
or
sbb
xchg
mov
lcall
adc
or
push
push
jmp
mov
push
and
fwait
or
xor
mov
mov
imul
mov
and
dec
mov
jle
divb
test
shlb
push
xchg
jne
or
nop
dec
rcrb
idiv
pop
xor
xchg
stos
cmp
xor
rcl
pop
loopne
jge
shlb
aas
aad
ss
or
loope
int
lahf
pop
std
inc
sub
call
das
shl
std
jmp
cld
pop
jno
dec
mov
enter
add
push
sbb
stos
mov
daa
fucomp
daa
jp
mov
outsl
daa
xor
fcoms
mov
pop
sahf
lahf
xchg
ljmp
mov
out
push
stos
adc
sbb
cmp
jno
clc
push
hlt
enter
ret
mov
outsl
ds
bound
dec
loopne
add
jecxz
push
pushf
jecxz
and
jno
pop
push
xchg
push
cmp
adc
sub
rcl
push
andl
pop
nop
shll
inc
push
mov
fsubl
push
in
outsl
and
xchg
adc
xchg
in
sub
lret
outsb
and
push
lret
adc
add
xchg
inc
push
add
pop
popa
dec
adc
mov
cmpsl
std
pop
sbb
into
mov
and
push
push
fs
test
sub
aas
mov
cmp
into
cmpsl
sub
test
add
addr16
push
push
cli
popa
pop
adc
fsub
cwtl
lods
xchg
lds
push
cmp
imul
push
jb
jecxz
cmp
je
repnz
movsb
add
bound
shrl
das
pop
push
movsb
lcall
shlb
cmc
stos
clc
mov
fdivr
pop
jae
imul
sarl
pop
mov
and
fidivs
push
sub
mov
dec
fistl
loopne
nop
mov
int
mov
arpl
lods
push
push
dec
push
jecxz
adc
dec
and
lods
mov
sbb
mov
loope
arpl
ja
sbb
inc
pop
dec
mov
adcb
gs
cmp
mov
inc
data16
inc
ret
notb
push
mov
adc
sub
push
inc
cmp
xor
sbb
sbb
xchg
fwait
xchg
xchg
mov
and
sbb
js
cld
mov
mov
and
or
mov
test
xlat
scas
cwtl
mov
aad
sbb
mov
mov
mov
inc
xorb
test
mov
mov
sbb
lfs
cmpsb
lods
sub
push
jne
rcr
dec
cltd
clc
int
inc
mov
in
xchg
cmp
jg
stos
push
mov
mov
push
gs
mov
xor
cmp
mov
sahf
test
adc
ja
jp
leave
lods
nop
adc
push
stos
test
dec
pop
roll
outsb
ljmp
and
shl
add
jmp
shll
std
outsl
insl
ja
sbbb
mov
aad
or
or
cmpsb
fcmovnu
popa
jnp
mov
jb
daa
dec
inc
jae
jg
mov
mov
movsb
xchg
ljmp
pop
arpl
cwtl
test
and
pusha
xor
sbb
inc
sub
cld
fisubrl
jge
mov
cmp
js
imul
test
sbb
stc
xchg
scas
jg
cmp
cli
fstps
push
push
jge
ret
testb
adc
push
mov
ds
fldenv
xchg
scas
addl
movsb
addr16
stc
imul
xlat
iret
pop
push
shld
popl
jno
imul
mov
mov
out
shll
cmp
add
sub
mov
cmp
andl
inc
stos
jb
scas
stc
ljmp
cmp
ja,pt
cli
cld
loopne
lahf
lods
pop
xchg
mov
pop
notb
add
adc
shll
pushf
mov
imul
or
sbb
ds
push
xor
push
into
pop
inc
xor
xor
loopne
out
movsl
daa
sbb
test
jns
mov
mov
outsb
cli
sub
lods
inc
adc
ret
into
pushf
hlt
mov
out
mov
aaa
movsl
or
xor
and
sub
pop
mov
pop
dec
loope
xchg
add
or
lods
cmp
les
stc
xchg
push
bound
cmp
outsl
stos
push
push
add
orl
adc
mov
cwtl
or
push
ret
push
xor
xlat
cs
mov
repz
sbb
out
adc
imul
jbe
ret
mov
imul
insl
or
in
sbb
stos
pop
stc
jno
cmpl
jp
jle
adc
jge
cwtl
mov
push
add
rol
into
add
notl
inc
jg
fstpl
jle
inc
int3
lds
push
inc
addl
pusha
fs
mov
pop
sahf
inc
xchg
insl
out
stos
loope
cs
es
sub
dec
push
push
jecxz
call
cmp
inc
clc
loopne
push
or
jns
dec
cld
mov
je
push
aad
xor
sub
inc
push
xor
xchg
sub
test
jg
sti
or
inc
cli
fistl
mov
inc
or
mov
jp
iret
cmpsb
js
xor
pop
cmp
scas
cmc
in
adc
cmp
aad
andl
ret
adc
filds
xor
pop
cld
jmp
jae
js
xchg
adc
test
pop
sub
scas
lret
fisubl
mov
out
imul
sub
int
sbb
inc
stos
cmpsl
bound
testl
loope
sbb
sbb
lahf
inc
adc
dec
mov
lahf
mov
mov
fnstsw
push
daa
testb
out
xchg
cli
dec
push
xlat
shll
pop
push
sbb
ffree
push
inc
and
add
lret
out
std
mov
imul
and
adc
xlat
mov
stos
fmul
rorb
enter
enter
das
ja
jecxz
adc
inc
xchg
pop
push
scas
clc
sbb
or
negb
sahf
jo
jle
idiv
jmp
adc
or
pop
mov
mov
and
inc
add
mov
ds
mov
call
imul
stc
xchg
movsl
pop
lea
sti
test
xchg
dec
xlat
jge
xchg
push
and
cmp
stc
filds
jo
jg
or
cmc
jmp
and
enter
sbb
in
mov
nop
xor
xor
push
lods
es
mov
pop
sbb
or
jns
xchg
sti
or
ret
cmp
pop
call
cmpsw
add
fs
pop
sub
inc
add
aam
cmp
mov
inc
cltd
out
stos
add
pushf
fmuls
xor
fmull
xor
push
js
cltd
jnp
cmpsl
shlb
mov
sbb
ret
ss
cld
adc
mov
fsubr
xor
jns
jmp
mov
notl
addr16
mov
push
testl
insl
sbb
xlat
jge
dec
mov
in
outsb
ss
cld
mov
jb
frstor
fwait
pop
mov
daa
sub
insb
mov
push
mov
insb
ffree
fdiv
mov
fwait
loopne
and
fadds
pop
in
adc
mov
and
adc
xor
fisubrl
jne
sbb
dec
add
push
loop
ds
lret
push
gs
push
sub
or
repnz
out
out
xchg
sbb
aad
lea
dec
daa
aaa
lock
sarl
xor
push
loopne
adc
mov
cmp
je
pop
popf
xorb
inc
data16
rorl
jae
sub
add
fadds
add
in
xor
sbb
sub
loopne
push
mov
sbb
leave
lock
push
sub
mov
and
dec
std
add
ljmp
fiadds
loope
cmp
shl
fs
iret
add
lds
pop
scas
stc
mov
and
fcmovb
orb
bound
add
mov
push
sbb
movsl
repz
add
in
cs
or
mov
adc
or
dec
or
rcrl
test
inc
popa
or
gs
pop
mov
sub
adc
and
inc
ficompl
mov
mov
sarb
int3
lock
sub
and
push
sub
push
std
mov
cltd
xor
xchg
mov
add
inc
jle
test
or
lds
fsubrl
dec
js
dec
jne
add
dec
push
dec
loop
jge
pop
cmp
jg
mov
and
and
in
cs
adc
orb
popl
icebp
cld
es
aaa
push
mov
mov
mov
push
mov
xor
movsb
or
jg
test
xor
jb
aad
fsubs
cwtl
and
cli
outsl
inc
push
mov
sbb
push
in
iret
jbe
aad
movsl
sbb
adc
or
sub
inc
xorl
cmpsb
inc
popa
and
xchg
jns
cmpsl
and
clc
sbb
popa
xor
lcall
adc
cmpsb
lea
sbb
and
mov
dec
push
xchg
lods
xchg
sub
jl
out
adc
test
add
nop
in
test
xorb
cmp
daa
or
inc
outsl
and
cli
lods
mull
xlat
dec
bnd
int
stos
hlt
mov
test
mov
sub
sub
test
inc
inc
dec
jp
mov
mov
and
push
nop
pop
popf
sbbl
mov
out
fidivrl
scas
or
inc
addr16
mov
sti
jno
jmp
adc
sub
stos
mov
sbbl
mov
daa
ret
loope
jmp
js
sbb
dec
jmp
mov
outsb
fcompl
das
push
or
data16
cmp
mov
mov
push
mov
jge
ret
pop
mov
scas
out
xchg
sbb
cmpsl
fstpl
popa
or
les
cmp
pop
arpl
jmp
mov
out
cmc
jo
hlt
das
sbb
mov
adc
dec
inc
dec
dec
add
test
das
mov
or
clc
insb
jge
xchg
adc
lret
sub
fistps
mov
xor
cwtl
in
xor
int3
rcr
movsl
repz
cli
cmp
stc
adc
lret
jbe
ret
mov
cmp
stc
push
lods
shrw
cltd
sub
hlt
div
pop
cmp
fadd
and
inc
adc
dec
push
lods
mov
ficompl
pop
push
adcb
jb
mov
out
inc
jnp
ret
push
xor
cmp
es
into
xchg
adc
aad
xchg
int3
pop
sbb
mov
fdiv
scas
pop
subb
xchg
add
cmp
add
jmp
or
fisubrl
pop
nop
test
add
sub
pop
stc
push
lock
daa
jle
xchg
rcll
inc
push
push
xor
and
std
loope
lock
jecxz,pt
mov
and
orl
inc
sbb
pop
sbb
inc
dec
movsl
inc
mov
and
fwait
push
pop
aad
fwait
mov
push
fstl
fldt
lret
and
ret
fld1
gs
dec
rclb
lock
pop
mov
jne
sbb
addr16
mov
jle
dec
sub
cmpsb
loope
pop
mov
in
out
cmc
sub
dec
into
cmpsl
cltd
lock
shlb
jno
pop
lcall
inc
icebp
nop
leave
xlat
pop
movsl
pop
jne
cmpsb
push
shrb
out
dec
adc
idivl
cmp
mov
cmc
adc
call
adc
dec
out
rcrb
push
sub
sub
fimuls
mov
ljmp
addr16
lea
mov
mov
cmpsl
jae
pop
push
mov
je
add
lret
xchg
ljmp
mov
jb
jmp
scas
sbb
jmp
dec
daa
push
imul
jnp
jle
lahf
xchg
clc
push
mov
loopne
xchg
int
imul
jbe
fdivr
ss
mov
adc
add
sub
loope
repnz
jp
stos
ljmp
scas
clc
sbb
out
insl
push
ror
lods
mov
cmp
bound
lcall
xchg
mov
or
mov
dec
ljmp
push
in
in
repz
inc
mov
cmc
fucomi
or
inc
mov
lea
addr16
imul
push
mov
sub
inc
jp
popa
rcrb
cmp
or
rorb
mov
push
sub
push
jno
roll
cmp
ljmp
pop
ja
mov
fstpl
adc
pop
push
pusha
mov
jns
jg
fnstsw
cmp
add
pop
adc
cmc
fmuls
jnp
mov
aam
outsl
in
jo
push
call
arpl
adc
jae
jmp
mov
mov
ds
or
pop
rorl
jl
sbb
xor
cmc
xchg
add
fsubrs
subl
icebp
dec
ljmp
das
xchg
inc
test
dec
mov
jge
sbb
int3
inc
xchg
imul
aad
jmp
das
enter
subl
pop
mov
mov
add
jnp
and
js
inc
xchg
cmpsl
repz
mov
mov
cltd
sbb
ret
mov
pop
or
fwait
movsl
jbe
pop
xchg
and
and
jle
fadd
push
je
adc
xchg
adc
lods
fsubrl
adc
dec
jne
dec
jo
aad
out
cmpb
mov
dec
gs
sti
fstps
push
insl
jno
pop
out
aad
fidivl
fsubl
push
or
pop
rclb
sub
jecxz
add
pushf
cmp
lret
scas
int
int
fildl
rcll
sbb
xchg
dec
cwtl
daa
lret
push
jbe
enter
mov
mov
movsl
outsl
in
stc
mov
aaa
push
or
mov
jne
pop
stos
sbb
xchg
jno
xor
jle
test
loopne
lret
sbb
inc
das
cmp
mov
pop
add
insl
jne
cmp
lea
ret
aad
rcll
inc
or
xor
mov
fcmovbe
shrb
inc
std
adc
lahf
mov
fdivrp
pop
dec
outsb
popf
jb
xchg
mov
sbb
aam
jns
dec
mov
fstps
jmp
pop
jp
mov
out
imul
fnstcw
or
mov
mov
mov
adc
adc
fcompl
jl
cltd
daa
sub
dec
add
out
jge
cmp
insb
shrb
mov
addr16
or
or
hlt
jb
fwait
test
sti
and
test
sbbl
and
adc
mov
sahf
inc
stos
movsl
xchg
out
and
inc
xchg
jne
fwait
and
faddl
mov
mov
fwait
mov
and
xor
nop
dec
cli
cmp
mov
int3
inc
lret
push
pop
repnz
sbbl
push
xor
out
jno
lcall
decl
dec
jae
mov
xchg
loope
xchg
and
inc
cmpb
dec
icebp
fsubs
loop
and
sbb
out
dec
sub
mov
cltd
ja
je
adcb
push
stc
cmp
test
mov
inc
dec
push
mov
lea
cmc
sbb
add
inc
mov
mov
dec
lahf
cmp
rcrb
jge
jb
test
and
push
mov
pushf
adc
mov
push
movsl
aaa
fcomps
outsl
loope
mov
push
pop
jl
negb
clc
xchg
add
and
pop
stc
std
cmpsl
repz
in
fisttpll
xchg
fwait
mov
lock
fadds
test
out
inc
mov
push
sub
fwait
sbb
push
sub
lods
and
jp
dec
fmuls
inc
mov
bnd
cmp
lret
insl
xchg
in
or
sub
gs
mov
xor
jecxz
fldenv
cmpsb
inc
cmp
jbe
fiadds
mov
addps
inc
shr
pop
pop
inc
out
mov
and
arpl
mov
insb
lock
and
mov
cwtl
popa
mov
test
push
lods
es
jmp
and
decb
inc
iret
dec
in
mov
mov
jo
push
aam
xchg
in
cmovp
jge
jnp
ds
mov
lret
insb
xchg
xchg
stos
dec
ret
shrl
ret
cmp
ljmp
dec
mov
mov
dec
dec
dec
mov
sti
ret
sub
or
cmp
stos
push
ljmp
jb
stos
movsl
subb
in
xchg
imul
int
aad
dec
add
jbe
test
cmp
pusha
inc
lahf
adc
push
pushf
aaa
imul
les
or
and
ljmp
sub
in
cmp
jnp
push
jp
je
das
std
cmc
int3
rol
mov
mov
stc
ljmp
fs
aas
mov
sbb
mov
or
sahf
and
lret
mov
imul
pop
xor
cmp
mov
cmp
mov
or
outsb
stos
inc
sub
inc
mov
ret
or
or
dec
and
ss
imul
lret
sbb
mov
inc
not
inc
ret
fsubrp
inc
mov
xor
jp
mov
xchg
sbb
mov
sub
adc
daa
xor
mov
sbb
inc
rcrl
lods
xor
pop
mov
adc
repnz
sbb
test
cltd
mov
jbe
movsb
push
movl
clc
jno
movl
mov
daa
fidivrs
or
cld
pop
push
popa
loope
jge
loop
and
jg
imul
mov
dec
or
pop
push
push
cmc
adc
adc
push
push
outsb
fimull
add
fldcw
out
cmpsl
cltd
xor
mov
outsb
jnp
adc
shlb
mov
adcl
cltd
xchg
test
pop
shlb
pop
and
add
dec
xchg
cwtl
add
lods
mov
loopne
and
mov
mov
xchg
enter
imul
xchg
adc
add
mov
out
shrb
mov
mov
xchg
ljmp
xchg
call
inc
sbb
mov
insb
mov
xchg
mov
add
lcall
cld
addl
mov
in
cmpsl
inc
jl
stos
bound
xor
mov
sub
sbb
ret
mov
das
sub
pop
pop
repz
in
sahf
mov
insb
jnp
push
xlat
test
mov
pop
push
int
fwait
je
sbb
cmpsl
mov
mov
sbb
add
je
add
loop
fsubrl
xchg
lret
loopne
ja
mov
cmc
repz
movsl
add
cltd
int3
in
inc
jno
das
mov
movsl
hlt
mov
popa
adc
inc
adc
mov
mov
inc
jp
jae
sbb
sub
mov
mov
dec
and
movsb
test
incb
movsb
nop
repz
mov
push
mov
iret
addr16
ja
mov
xor
sbb
mov
stos
leave
or
ja
mov
add
movsb
jmp
inc
or
stos
jno
or
insb
jne
jae
pusha
nop
mov
nop
lock
sub
hlt
lahf
pop
fwait
daa
mov
add
add
inc
bound
mov
popa
jle
shl
jmp
ja
and
jle
loop
lds
mov
mov
jb
push
inc
lods
mov
sbb
vphadduwd
push
shrd
and
adc
inc
mov
xor
inc
popf
inc
xchg
dec
out
ss
sbb
cmp
lret
jne
push
mov
dec
or
icebp
or
std
push
inc
fdivrs
push
ret
and
imul
addl
and
arpl
in
sar
add
ljmp
dec
out
cmc
cmp
sub
movsb
adcl
call
add
or
cmp
push
fisttpll
jne
xchg
sub
into
push
pop
mov
loop
xchg
lahf
xor
sub
mov
mov
or
cmpsl
insl
xor
dec
xchg
push
outsl
loope
push
cli
cmpsb
shl
outsl
cld
push
mov
sub
in
and
inc
pop
out
aam
sbb
fidivl
ret
mov
pusha
loop
xor
pop
inc
fstp
std
jbe
fwait
aam
pop
pop
pop
push
inc
and
adc
mov
sbb
pop
inc
les
sarl
sub
add
bound
adc
es
rorb
bound
sub
push
mov
adc
addb
cmp
cmpsl
dec
iret
test
outsl
rclb
test
xor
data16
lods
fldt
adc
jb
in
sbb
in
and
xorb
and
push
ret
ds
je
add
mov
sar
xor
jge
sar
testl
bound
xchg
stc
jecxz
or
mov
pop
xchg
out
fistpl
mov
rcr
dec
jo
push
dec
insl
ljmp
lahf
inc
imul
clc
jno
push
lock
pop
shlb
push
repnz
push
cld
repnz
xor
or
dec
xchg
das
dec
xor
push
dec
add
imul
into
dec
mov
push
hlt
lret
pop
add
cltd
xor
arpl
subb
imul
sub
jl
aad
xchg
out
enter
xor
mov
pop
flds
pop
inc
inc
into
inc
cmp
mov
cs
dec
mov
fcmove
add
jmp
dec
cwtl
jg
lahf
lock
hlt
std
mov
push
or
xchg
mov
lea
sub
add
xor
std
sub
lret
andl
ja
leave
pop
push
xchg
clc
movsl
mov
js
mov
test
rcll
mov
arpl
je
push
repz
outsb
movsb
or
pop
or
add
repnz
xchg
inc
pop
imul
sub
adc
cmpsb
loopne
ss
rcrb
push
mov
xchg
data16
cmp
fimuls
in
out
push
iret
or
dec
mov
jp
movsl
out
mov
xchg
shl
test
dec
popf
xchg
mov
add
pop
jne
push
sti
add
lcall
orb
fildll
icebp
xlat
and
mov
mov
xchg
pop
shl
outsl
rolb
push
jne
xorl
pop
leave
jbe
les
adc
mov
pusha
dec
cs
nop
inc
pop
push
and
out
int3
mov
aaa
mov
xchg
xor
jae
loop
sti
dec
scas
push
stc
fs
aaa
add
inc
out
jge
mov
cmp
aam
jae
std
mov
faddl
popf
bound
clc
xchg
mov
cli
test
adc
cmp
lods
inc
add
ret
sbb
sub
jo
sbb
mov
frstor
adc
or
lods
xor
mov
adcb
mov
faddl
dec
aaa
test
push
out
cltd
dec
js
jno
fcomps
xchg
mov
lret
or
dec
cmp
inc
out
stc
test
xchg
xor
stos
adc
inc
jmp
mov
jbe
mov
lret
push
mov
insb
loope
cwtl
mov
idivl
xchg
xor
scas
dec
inc
mov
daa
jns
dec
movsb
sti
sti
loope
push
lods
out
imul
fmuls
call
subb
loop,pn
push
xor
hlt
dec
sbb
je
add
aaa
inc
and
lahf
sbb
mov
pop
popf
ret
cltd
cltd
out
ljmp
scas
sbb
lods
inc
adc
inc
out
rcrl
inc
std
pop
adc
cmpsb
cs
mov
sbbl
repz
in
fstl
cmp
popf
adc
mov
cmp
stos
out
mov
inc
cmpl
cmpsb
pusha
xor
and
add
add
lods
mov
lods
xor
lcall
lcall
out
pushf
mov
pop
add
bound
subl
jnp
xchg
fnstcw
repz
push
adc
jae
aas
testb
cmp
adc
gs
pop
push
ja
in
cmp
test
cmp
ja
xchg
add
xchg
jo
je
movnti
insl
int
inc
pop
jbe
scas
nop
push
xchg
lahf
out
dec
loope
xchg
insb
sub
push
daa
mov
std
jmp
test
shrb
and
pop
dec
movsl
je
clc
repz
xchg
mov
xor
push
mov
repnz
mov
jb
add
repnz
fsub
loopne
jge
inc
inc
imul
mov
and
mov
das
or
ffreep
jnp
cmp
xor
ja
inc
shl
and
nop
lret
imul
mov
scas
inc
sahf
aas
pusha
push
pop
dec
add
sbb
out
rcrl
or
fwait
xchg
adc
andb
fcoml
add
pop
int3
fcmovnb
out
sti
sbb
inc
add
lods
mov
aam
lret
lret
idivl
dec
mov
ret
dec
inc
cmp
inc
push
pop
cmpsb
in
test
call
sub
pushl
imul
add
add
or
pop
in
sub
mov
out
insl
push
dec
and
xor
fsts
lret
pusha
sbb
aad
icebp
push
xor
loope
jae
and
adc
cmpsb
mov
iret
aad
or
addr16
add
arpl
leave
add
rorl
or
mov
pop
ljmp
pop
scas
inc
stos
lret
inc
cmp
js
aas
mov
arpl
shll
mov
push
xlat
mov
sub
mov
je
jg
fdivrl
add
scas
and
add
sbb
cmpsl
mov
jb
lcall
mov
pop
sub
stc
mov
and
push
adc
imul
xchg
add
fs
out
jb
pop
sbb
mov
jl
jns
mov
or
in
xor
orb
lret
cmp
pusha
sbb
loop
mov
shll
in
rcll
bound
push
ja
mov
out
loop
dec
xor
je
lret
sbb
ljmp
adc
es
mov
loope
maskmovq
imull
and
mov
out
xor
fs
sbb
dec
aam
int3
out
mov
icebp
cmp
xchg
sbb
repz
push
jp
sbb
in
jo
sbb
cmp
aas
xchg
jle
popf
icebp
insl
sub
scas
frstor
pop
mov
cmp
xchg
mov
adc
push
bound
iret
jecxz
das
add
aad
test
pop
int3
pop
or
adcl
ss
jbe
sub
jno
lock
aas
adc
dec
rclb
aaa
pushf
lahf
loop
ljmp
mov
xor
mov
dec
xchg
sbb
mov
js
es
mov
xchg
inc
lahf
push
std
dec
insb
int3
and
sub
iret
repnz
sbb
mov
push
jbe
lea
or
movsl
repz
jp
cli
sub
adc
push
jno
cwtl
sub
outsl
add
roll
insb
sbb
aad
sbb
mov
clc
xor
repz
je
pop
scas
ror
mov
pop
and
and
cmpsl
jns
add
jne
in
xchg
ret
xchg
xor
inc
movsl
aaa
xchg
adc
fldenv
pusha
arpl
inc
popa
push
mov
into
mov
addb
mov
out
bound
push
inc
inc
cmp
mov
jne
pop
sub
movb
ret
enter
push
cmp
out
int3
sub
add
mov
mov
lret
pusha
movsl
sti
inc
cmp
pop
lods
movsl
dec
dec
push
lahf
mov
test
call
pop
mov
push
mov
jne
xchg
cmp
pop
xor
dec
or
xchg
pop
cltd
mov
and
xchg
popf
lcall
rolb
push
scas
jae
mov
mov
jne
out
xchg
int3
aaa
hlt
divb
inc
cmp
and
lret
adc
add
fwait
call
or
xor
mov
dec
sbb
lea
xor
mov
and
jg
cmp
or
aam
fwait
pusha
pop
jns
xlat
movsb
inc
dec
or
mov
gs
sbb
jb
inc
xchg
mov
test
std
sti
aaa
cwtl
add
xor
mov
lret
sub
clc
dec
cmc
adc
push
xchg
es
push
lret
lahf
jnp
jge
fs
mov
or
in
jnp
imul
loopne
pop
pop
sbb
out
test
mov
shr
push
sbb
test
iret
scas
out
sbb
leave
lock
enter
or
into
mov
pop
out
adc
scas
mov
ljmp
xor
addl
scas
mov
lods
or
lahf
push
jmp
and
dec
push
sti
aas
fcompl
icebp
lcall
scas
sub
pop
out
xorb
cmpsb
cltd
in
push
pop
test
cld
jno
adc
leave
inc
mov
sub
stos
pop
sub
inc
cli
jne
cmp
imul
test
dec
movl
cwtl
repnz
lret
push
je
shrb
nop
or
test
adc
lods
mov
push
and
push
push
fsubs
loopne
push
pop
inc
push
mov
idivl
push
in
xchg
rcl
sbb
add
pop
jmp
xor
adc
push
sbb
add
enter
jl
cltd
leave
rcll
in
inc
add
push
jle
data16
mov
flds
inc
adc
jb
out
fs
jns
jge
sbb
and
out
cmp
lock
arpl
testb
inc
cld
lret
mov
jns
out
dec
rclb
mov
mov
push
and
xor
fs
cmpsl
dec
fnclex
movsl
dec
mov
cmpsb
push
sti
lds
push
test
pop
and
bswap
mov
pop
mov
nop
mov
jmp
cs
mov
js
loopne
in
mov
mov
aad
out
scas
loop
sub
bswap
add
mov
jo
mov
xlat
scas
sbb
cmp
mov
cmp
lret
mov
mov
ficoms
pop
push
inc
mov
cmp
dec
pushf
loope
std
scas
popf
mov
mov
mov
mov
mov
push
xor
icebp
push
inc
push
in
out
inc
out
jp
sub
mov
xor
mov
pushf
jne
mov
hlt
ljmp
test
mov
mov
subl
in
cmp
outsb
cmp
je
into
jae
fcompl
push
stos
js
cmp
clc
sbb
aas
push
or
or
pop
sahf
es
lret
insb
mov
repz
pop
push
jl
mov
rorl
outsb
test
inc
push
cmp
addr16
adc
mov
in
xchg
jnp
fcoml
int
xor
dec
or
adc
pop
subb
pop
or
stos
push
xchg
xchg
stos
push
pop
mov
lds
xor
xchg
in
add
cmp
xchg
inc
cwtl
scas
push
jle
push
repz
mov
rorl
fwait
out
fldcw
dec
and
jge
fisubl
iret
mov
xor
sti
cmp
inc
dec
xor
add
sub
out
pop
xchg
push
stc
pop
cld
stos
jmp
pop
inc
movsb
xchg
je
jo,pt
dec
repz
aad
jb
test
pushf
jl
jge
or
push
xchg
clc
pop
int
flds
stos
arpl
sbb
pop
sub
out
add
inc
mov
xchg
adc
xor
push
dec
ret
mov
vaddsubpd
xchg
pop
push
inc
push
ja
mov
sbb
and
lahf
xchg
mov
lret
and
add
cld
in
stos
pop
push
push
lret
and
xlat
cmp
js
cmp
xchg
mov
enter
sub
pusha
jnp
inc
dec
jnp
jns
inc
out
out
jl
mov
add
xchg
push
jbe
scas
movsb
aas
lds
mul
jbe,pn
lds
lcall
dec
sub
pop
dec
jb
outsb
push
xor
inc
mov
lcall
lea
add
or
mov
fst
imul
mov
roll
sub
lea
lea
xor
jp
pop
rcrb
sbb
imul
mov
dec
mov
xchg
je
sbb
rclb
lods
mov
jo
xchg
ret
into
add
jle
sub
xor
cli
fcmovnbe
int3
fadd
fmulp
mov
push
jge
xor
mov
jle
shr
sbb
test
cmp
dec
inc
mov
movsl
xchg
pusha
cs
inc
dec
lods
shr
mov
push
aaa
jb
xchg
aas
xchg
aas
dec
repnz
jecxz
xchg
insb
repz
push
push
rcr
cmp
jp
push
adc
jb
stos
ljmp
jno
xchg
add
dec
loope
dec
or
adc
mov
popf
js
imul
xchg
mov
xchg
mov
and
in
lea
js
add
jmp
cmp
rorb
negl
add
inc
jo
sbb
cmp
mov
out
pop
sbb
push
sub
push
jmp
adc
add
inc
int3
mov
shlb
adc
leave
aas
mov
mov
and
imul
repnz
sub
xor
fmull
addr16
xor
or
mov
inc
pop
cmp
mov
mov
out
pushf
lods
je
jb
test
stos
mov
xor
je
iret
mov
ljmp
out
arpl
out
mov
insb
shrb
pop
in
ftst
xchg
sbbl
sub
jle
cli
cld
jge
pop
xor
inc
push
jp
inc
sarb
push
aas
orb
testl
out
iret
or
les
mov
sub
add
jnp
int
cmp
addr16
dec
in
push
xlat
outsl
mov
mov
mov
or
pop
test
cmp
xlat
imul
adc
xchg
subb
int
stos
in
or
inc
cmp
rcrl
stos
test
jae
addb
add
out
fstpl
fwait
imull
dec
je
jecxz
mov
mov
out
test
loope
int3
arpl
test
adc
pop
jo
dec
sub
add
add
out
jbe
rorl
cmp
lock
cmp
sub
jmp
js
cmc
call
in
leave
jmp
std
push
inc
adc
in
mov
sub
js
fistpl
mov
notb
add
jae
shlb
and
roll
xchg
mov
aad
pop
loopne
sbb
cltd
ds
and
mov
and
or
shr
pop
xchg
xor
shlb
cmp
adc
aad
outsb
xchg
je
fstpl
add
xor
es
cmp
repz
xchg
cmp
enter
inc
push
and
mov
and
push
cmp
cmp
test
push
jnp
mov
call
cmpsl
push
lahf
pushf
sarl
mulb
cmp
push
fcom
jg
lahf
ds
int
xor
jb
lret
mov
cli
jg
and
dec
stos
or
or
push
push
xchg
xor
popf
mov
mov
sub
jns
stos
test
lahf
xchg
pusha
adc
into
xor
fistpl
mov
in
lcall
pop
mov
movsl
aam
xchg
out
mov
les
mov
rcl
insl
cmp
adc
fnsave
jae
push
mov
mov
lcall
inc
test
pop
cmc
mov
outsb
cwtl
into
lds
push
pop
pop
in
add
test
push
or
ja
inc
insl
ret
fstps
mov
sbb
mov
adc
cltd
xlat
and
stc
jae
sub
mov
sub
nop
sbb
in
cmp
pop
jmp
out
inc
sbb
ja
xchg
ud0
xchg
aas
out
or
pop
into
jecxz
push
xchg
xlat
pop
mov
ret
into
cs
sets
jbe
or
jge
push
xlat
cltd
sbb
jne
mov
push
xor
movsl
dec
ds
rcrl
dec
sbb
or
fmuls
gs
xchg
inc
and
test
outsl
rol
cmp
sub
data16
ret
fs
push
scas
jmp
adc
outsb
and
and
xor
ja
adc
fmulp
sti
xlat
add
aaa
lock
mov
push
dec
sub
xor
lods
notl
xor
fisubl
dec
xlat
jns
pop
clc
mov
in
and
rorl
pop
test
mov
out
ud2
inc
xor
mov
xchg
sti
dec
out
mov
cmp
ficoml
fdivrl
iret
sbb
jge
loopne
in
popa
mov
insl
ret
rorb
lods
pop
sbb
jnp
adc
sbb
mov
jbe
jo
push
pop
popf
aaa
sti
pop
aas
jle
insl
cmp
iret
jbe
push
insb
sbb
je
outsl
adc
stos
cmp
xor
rcrl
decb
add
inc
mov
fcoml
in
cmp
jl
sbb
pop
jg
or
and
push
inc
and
es
lret
dec
mov
out
imul
inc
dec
or
push
sbb
jge
and
mov
xchg
cld
mov
mov
mov
push
icebp
cwtl
mov
outsl
test
xor
jb
clc
cmp
sti
sub
jmp
cmp
fcoms
insb
subb
inc
jno
xchg
or
fistl
test
std
lahf
cmpsb
mov
daa
and
inc
sub
bound
dec
inc
adcb
lret
cmp
cli
pop
pop
push
hlt
or
jne
mov
pop
pop
in
adc
jb
inc
cmp
dec
test
or
adc
push
push
std
cmp
pop
lods
rcrl
ds
jecxz
sbb
jnp
push
imul
test
shl
add
adc
ficoml
push
daa
cmp
repnz
cmpsb
cs
hlt
je
pusha
cmp
pop
out
xchg
cmp
iret
dec
pop
arpl
push
cmp
dec
pop
cmp
std
cli
mov
in
fdivl
in
into
gs
orb
adc
inc
movsl
push
xor
sbbl
mov
mov
inc
xlat
and
sahf
jp
xor
mov
rolb
and
xor
mov
push
test
call
jg
jne
icebp
imul
sub
push
mov
into
cltd
pushf
push
fildll
aaa
mov
mov
jp
mov
jo
mov
aaa
and
movsl
pop
mov
mov
adc
mov
js
test
fistps
push
fcmovnu
pushf
popa
push
mov
std
ret
iret
ja
ljmp
imul
stc
ret
fildll
mov
cmpb
jnp
inc
pop
sub
push
ret
popf
jae
lea
pop
push
mov
mov
mov
sub
sbb
adc
sahf
mov
pop
andb
sti
fiadds
lcall
xor
out
pop
ficompl
add
fldt
adc
test
icebp
pop
add
jmp
lret
push
pop
xor
cmp
sbb
jp
and
xchg
pop
sub
or
sbb
clc
mov
sub
add
sbb
mov
movsb
sbb
icebp
stc
clc
or
in
lock
xchg
je
fs
dec
insl
sbb
sti
push
jo
nopl
adc
int3
xchg
xchg
outsb
dec
imulb
adc
inc
push
insl
fnsave
adc
andl
lock
xor
inc
ss
mov
pop
int3
pop
xchg
lcall
popl
movsb
out
xor
inc
sbbb
sbb
int
jnp
icebp
hlt
out
and
xor
aad
or
xchg
xlat
adc
sbb
cld
jge
inc
xchg
xor
jno
sbb
adc
sub
pop
rolb
int3
pop
out
sub
sub
mov
pop
add
out
ds
pop
loopne
lods
xchg
adc
push
mov
or
cmc
cmp
cmpsb
and
jae
inc
xor
jmp
sbb
fcoms
arpl
jmp
mov
pop
jbe
repnz
lock
mov
js
daa
jg
cmp
in
dec
jne
push
imul
pop
aaa
and
xor
test
lcall
movsl
js
lldt
push
test
pushaw
pop
jne
xchg
fidivrs
out
sbb
inc
xchg
js
cmpl
sub
mov
scas
cmp
imul
scas
in
or
in
xorl
jbe
sarl
jecxz
test
das
sub
or
cltd
cltd
dec
int
pop
dec
mov
dec
cwtl
push
mov
push
mov
mov
lea
dec
fnstenv
dec
dec
mul
jnp
enter
insb
cmp
mov
mov
aam
aam
aaa
jne
sbb
push
cwtl
fdivrp
sub
dec
or
sub
in
js
sub
mov
push
clc
fstps
jecxz
leave
mov
shl
loope
xor
xchg
jnp
lea
mov
int
sub
push
adc
push
mov
xchg
or
fwait
outsl
cmpsl
jbe
clc
inc
jl
xor
mov
jmp
enter
inc
iret
hlt
arpl
mov
pop
cmpsb
test
movsl
sahf
xchg
jge
xor
inc
cmp
xor
push
out
sarb
sub
cmp
aam
sahf
inc
mov
inc
incb
or
cltd
in
cmp
jb
sbb
call
cmp
pop
repz
test
fwait
pop
imul
mov
lahf
int
pop
std
movsl
icebp
pop
mov
sbb
sbb
push
mov
xor
fiaddl
je
fmull
fadd
xchg
out
les
push
inc
stos
fidivs
mov
mov
xor
cmp
or
aaa
inc
inc
imul
xor
sub
fdivr
inc
sub
addr16
cmp
xor
mov
xchg
xchg
iret
jne
xchg
into
jnp
cmp
push
lcall
jmp
shlb
push
or
cltd
xchg
push
jo
das
xlat
ss
dec
xchg
xchg
add
pop
pop
and
call
xchg
subb
push
mov
sbb
mov
test
cld
add
dec
sbb
pop
sahf
aad
lods
and
push
aam
inc
and
clc
fwait
xor
imul
fcmovnu
jle
push
shrb
std
dec
pop
mov
sbb
xor
lock
or
push
fdivr
test
jo
push
sbb
inc
sbb
std
adc
test
ds
add
insl
das
inc
add
mov
mov
fwait
in
jo
cmp
jne
cmp
mov
in
pop
pop
push
inc
mov
xorl
adc
fisubl
sarb
jecxz
test
pop
mov
stos
out
or
mov
pop
push
cmpsb
mov
aaa
fimull
cmp
push
daa
shr
jno
add
out
ja
lods
or
outsl
cmp
rol
mov
popf
mov
xchg
mov
mov
lods
sub
sbb
push
fidivl
test
in
xchg
rclb
sbb
cwtl
ljmp
mov
mov
sub
jecxz
mov
std
sbb
cld
ljmp
mov
sbb
xchg
lods
and
cli
sbb
push
mov
je
sbb
push
lock
mov
insb
lret
pushf
add
fbld
cmp
outsb
clc
data16
push
out
add
insl
pop
sbb
orl
nop
sbb
push
adc
out
xor
or
data16
mov
rsm
sbb
cmp
push
test
pop
pop
repz
xor
int3
jnp
add
sbb
fisubrs
lods
sub
mov
popf
cld
stos
inc
ret
cmp
jo
idivl
and
or
mov
push
push
divb
push
daa
dec
call
fstl
and
mov
pop
in
lahf
jae
inc
xor
and
std
jp
stos
mov
in
xor
scas
jp
jns
loope
cmp
push
pop
in
add
adc
jo
in
add
pop
sbb
movb
sahf
push
cmp
notl
into
js
cmp
loop
pop
mov
loopne
pop
xchg
push
push
sub
ljmp
xchg
in
jle
bound
call
loope
pop
pop
mov
testb
mov
daa
add
sub
test
cli
sub
pop
sub
pop
sbb
mov
cmp
mov
and
inc
fldln2
popf
jecxz
dec
jle
test
cmp
cmovo
aaa
xchg
jno
mov
lahf
loopne
jge
xor
sbb
jge
add
das
cmp
rorb
or
pop
fs
imul
xchg
test
xor
notl
filds
loope
add
or
data16
adc
ret
cmp
mov
mov
dec
mov
jmp
jmp
inc
xor
sub
loop
mov
mov
sub
and
cmpsb
fimull
data16
int
jp
movsl
aas
aas
pop
xchg
pop
out
insb
rol
sbb
mov
adc
jne
xchg
sbb
mov
icebp
lods
ljmp
sahf
dec
hlt
jb
leave
xlat
jle
test
movsb
xor
adc
lret
sbb
jle
out
scas
cli
fldcw
je
test
push
or
sub
std
loope
dec
jp
popa
popa
js
sbb
adc
lock
ljmp
xor
int3
inc
stc
jno
pop
in
lahf
mov
test
lods
subl
sti
stc
pop
xchg
jl
das
orl
lret
pop
mov
push
and
add
xsave
inc
mov
aas
repnz
les
sub
jnp
arpl
mov
cmpsb
imul
and
frstor
push
push
and
sub
and
or
mov
aas
imul
mov
pop
pop
mov
ljmp
rol
cmc
push
jbe
inc
jle
pmaddwd
icebp
mov
in
push
orl
mov
popf
ss
push
xor
loope
mov
cs
rclb
pop
rcll
fdivrp
shll
lahf
xchg
dec
mov
outsb
notl
jge
ret
pushf
jge
and
lcall
mov
jo
adc
and
hlt
add
aad
popf
xchg
iret
leave
in
inc
outsl
popf
xor
jp
sbb
add
imul
jge
clc
sahf
xchg
cltd
sarl
rcrl
lock
or
push
mov
loop
mov
adc
imul
push
rcl
mov
cli
aad
fbstp
add
ss
and
and
aas
cltd
inc
push
mov
daa
lds
and
sbbl
jno
jp
or
adc
in
outsb
mov
addl
xchg
sub
loopne
sub
adc
xchg
dec
push
popa
mov
push
push
push
or
stc
sub
int3
sbb
inc
push
fs
dec
es
daa
mov
in
add
lds
or
sbb
inc
mov
popf
inc
sub
cmc
cmp
inc
mov
fisubs
mov
in
fimull
inc
cltd
mov
inc
rcrb
push
mov
inc
or
sub
shll
fcoml
lcall
in
hlt
ss
imul
idivb
xchg
and
xchg
push
movsb
adc
leave
pop
sbb
adc
sub
cwtl
xor
or
jl
or
das
push
xchg
or
scas
test
inc
pop
data16
mov
in
ucomiss
pusha
ds
insl
push
jnp
dec
test
filds
stos
lret
dec
sahf
xchg
lret
or
dec
mov
cmp
mov
mov
cltd
push
movsl
add
ja
pop
test
rcll
inc
jnp
shrl
cmp
nop
xchg
cwtl
xchg
icebp
pusha
in
clc
scas
fnstcw
cmp
pop
pop
push
lret
cld
fldt
fwait
or
and
daa
xor
sub
sahf
inc
add
mov
mov
inc
les
dec
adc
xor
sbb
adc
mov
cmp
xor
mov
push
xor
push
xchg
out
outsl
test
lock
inc
insl
repnz
out
or
or
xor
push
sub
test
jle
fsubr
push
call
fsubs
push
add
xchg
pop
mov
dec
dec
inc
pop
pop
jo
mov
mov
mov
iret
sub
adc
sbb
push
roll
adc
push
mov
mov
aad
es
iret
mov
xchg
pop
pusha
mov
mov
add
das
cmp
inc
lcall
scas
mov
push
and
push
or
mov
dec
inc
jmp
dec
mov
mov
insb
arpl
int
push
push
pop
rcll
fimuls
xor
test
insb
add
or
daa
pop
and
mov
stos
jmp
popf
or
mov
leave
daa
inc
int3
data16
inc
xchg
push
inc
popf
mov
push
pop
or
fwait
scas
sbb
inc
out
ficoms
insb
push
xchg
mov
dec
pop
xchg
fnstsw
addb
into
and
inc
mov
in
aaa
fwait
or
xor
popa
int
sub
xchg
dec
clc
inc
push
or
cmp
pop
fucomip
push
mov
shrl
jp
sbb
lods
sarb
mov
fidivrl
xchg
in
lds
dec
pusha
mov
sti
mov
cmpl
das
push
or
mov
outsl
sarb
stos
adc
popa
mov
cltd
aad
jo
xchg
fsts
stos
aaa
fimuls
inc
int
inc
out
shr
pop
jbe
lahf
clc
add
das
xchg
or
in
int
pop
push
les
jne
xchg
push
fstpt
rolb
int
add
outsb
loopne
or
pop
mov
adc
ret
add
xor
addr16
cmp
cmp
fimull
inc
mov
and
fisubs
xor
lock
push
jns
xchg
jecxz
dec
sub
mov
pop
iret
sub
push
pop
daa
cltd
popf
pop
andb
jne
test
lcall
arpl
gs
or
fcmovbe
mov
xor
mov
mov
lret
imul
jne
sbb
in
shll
imul
push
fdivl
addr16
dec
push
dec
outsl
mov
xchg
mov
lcall
mov
lret
outsl
mov
arpl
test
pop
stos
ljmp
aaa
push
adc
fdiv
inc
mov
push
jnp
nop
shlb
or
pop
xor
outsb
jb
pop
loopne
sub
testl
sbb
xor
xchg
scas
ja
test
sub
mov
divb
hlt
inc
push
lods
arpl
or
jecxz
aaa
ja
mov
add
bound
stos
push
xchg
in
add
adc
cmp
jbe
inc
out
jp
mov
sbb
and
imul
xchg
push
mov
mov
lock
cwtl
sbb
sti
add
cmp
stos
jp
sti
pop
xchg
and
ljmp
sbb
or
es
dec
jnp
sub
pop
leave
push
mov
sub
mov
out
jns
mov
adc
mov
pop
inc
out
int3
imul
push
loopne
inc
nop
mov
lahf
movsl
movsb
dec
xor
sbb
fldl
inc
or
push
mov
das
test
jp
push
vsubpd
out
and
enter
movsl
mov
jbe
mov
mov
push
xchg
push
push
fisttpl
pushf
aad
mov
inc
and
ljmp
sbb
loop
mov
sub
xchg
aam
pop
fidivrl
in
or
movsl
enter
ja
pop
rcl
cmp
sbb
sbb
inc
pop
dec
loopne
test
scas
out
mov
mov
or
xchg
fsub
aaa
cmp
sti
pop
test
addr16
dec
pop
sub
xchg
int3
fnstsw
dec
push
mov
enter
andl
xor
or
sar
stos
mov
out
out
movsb
out
popa
sahf
or
push
cmp
subl
sti
mov
mov
test
xor
cmp
repnz
mov
jne
std
sub
jns
nop
pop
lahf
mov
mov
stos
out
mov
mov
adc
jo
mov
rcr
fwait
pop
js
lcall
rclb
dec
lock
and
sub
test
shl
aad
daa
int3
mov
cwtl
dec
adc
cwtl
sbb
jb
push
cld
lcall
xchg
mov
bound
adcb
cld
xor
dec
loope
aas
mov
and
sti
lock
cli
test
clc
or
data16
jo
popf
lods
jne
ds
inc
packssdw
lahf
bound
cmova
jno
data16
or
sbb
fisubs
dec
lret
lret
adc
dec
xrelease
sarl
inc
add
cmp
add
repz
fimull
pop
xor
jmp
xchg
sar
mov
popf
jbe
cmp
lds
adc
push
in
push
jae
mov
mov
pop
mov
dec
fs
push
mov
in
jno
jne
or
sub
stos
push
dec
jmp
lods
bndldx
sub
ja
daa
adc
sbb
mov
push
sbb
test
outsb
pop
cld
xor
dec
insb
ja
xabort
push
sbb
in
imul
dec
xchg
lret
push
lret
or
push
icebp
adc
xchg
cmp
aas
lods
push
xor
add
pusha
test
sub
sbb
dec
xchg
cmp
subl
std
mov
sahf
fisubrs
and
mov
sbbb
and
jecxz
xlat
inc
pop
adc
pushf
xor
jbe
or
add
mov
rcrb
and
jbe
daa
inc
cmp
je
icebp
jmp
js
xor
mov
shlb
out
push
popa
or
sbb
in
adcb
ss
stc
test
mov
and
ljmp
rclb
fildll
xchg
into
xchg
jecxz
inc
and
inc
gs
ret
jb
movl
lret
cmp
sbb
and
les
mov
jl
pop
xor
fists
ss
sbb
jae
iret
loope
ljmp
fs
int3
hlt
stos
sub
pop
repz
int3
out
add
pop
mov
push
mov
in
out
lea
mov
cmp
sbb
jo
add
pop
ds
leave
stos
dec
jp
xorl
xor
dec
or
sahf
vmovapd
js
daa
jbe,pn
xor
imul
aaa
aas
dec
movsl
shll
jno
lods
push
out
pop
imul
dec
xchg
dec
sti
mov
mov
aam
mov
inc
pop
sbb
in
dec
pop
push
outsb
jae
arpl
dec
fildll
xchg
push
push
int
leave
jge
js
ret
repz
fdivrl
or
push
mov
xchg
sub
das
push
inc
xor
data16
mov
ljmp
aaa
lret
addr16
addl
orl
fistl
jb
pop
addl
fimull
xchg
loopne
repnz
cmp
mov
dec
je
sbb
aas
and
dec
xchg
cmp
stos
dec
fisttpll
hlt
mov
stos
jno
push
dec
out
jge
jecxz
ret
pop
mov
je
repz
xchg
sub
movsl
outsl
xchg
and
pop
or
adc
icebp
jae
into
push
mov
sti
stos
imul
cmp
dec
fisttpll
test
pop
inc
addl
and
mov
lods
xchg
les
push
push
pop
pop
mov
sub
or
pop
jg
xchg
mul
repz
xchg
mov
cmp
cmp
fldcw
and
iret
aam
sbb
dec
insl
clc
mov
jno
sub
repnz
lret
aam
xchg
enter
cmp
lret
dec
imul
cmpsb
xchg
cmp
loop
or
or
add
push
mov
mov
out
out
cmp
popf
ja
pop
push
jg
sbb
jmp
int3
fimuls
daa
push
and
inc
inc
push
add
jne
icebp
aas
push
sbb
cs
inc
sub
push
in
sub
insb
pop
push
push
and
jp
fsubrs
sub
mov
lock
xchg
das
and
inc
sbb
imul
cmp
cmpsb
divl
fimuls
sub
repnz
out
sbb
or
rcrb
int
sbb
cmp
les
fmulp
push
ficoml
repz
jp
es
stos
int
add
push
lret
aas
roll
lret
aam
cmpb
cmp
cld
adc
dec
into
jecxz
cwtl
cwtl
loop
sbb
cmp
add
and
clc
xchg
rol
rclb
mov
andps
in
das
and
sbb
je
push
mov
push
add
dec
jmp
sbb
pop
lret
push
fdivrp
shlb
adc
das
not
adc
inc
into
dec
cli
dec
and
mov
sub
mov
mov
push
mov
add
jecxz
mov
iret
add
adc
xlat
rclb
push
mov
pop
in
icebp
rcll
xchg
orb
cmc
and
mov
ficompl
and
jmp
enter
sub
nop
movsl
gs
xchg
jnp
inc
nop
clc
push
cmc
mov
popl
inc
jo
leave
enter
and
cwtl
jae
cmp
daa
sub
cmp
std
pop
mov
sti
cltd
insb
xor
std
jg
fs
jmp
xor
popa
jle
push
xchg
adc
iret
and
xchg
lock
subb
and
rorl
inc
movsl
adc
inc
mov
mov
popl
shrb
enter
popl
mov
jae
rolb
cld
dec
notl
fs
into
jae
test
cmpsl
mov
dec
jo
xchg
lds
jecxz
ror
nop
in
cmpsl
js
xchg
dec
enter
out
rcll
insb
je
bound
sahf
popl
mov
adc
lret
adc
pop
adc
insl
and
lcall
cltd
lods
mov
mov
inc
push
dec
subl
cmp
sub
pop
movsl
sar
push
mov
inc
ss
aas
aas
dec
data16
cs
xchg
jmp
xor
cmp
data16
pop
mov
hlt
insb
pop
pusha
pop
or
pop
sub
or
pusha
rcrb
out
push
pop
mov
rorl
fs
and
call
xchg
js
mov
jp
iret
inc
pop
test
imul
push
fsubs
hlt
loop
sti
xlat
pop
test
scas
xchg
lock
xor
out
bnd
pusha
and
ljmp
inc
mov
stos
insl
adcb
dec
sub
pop
std
pop
scas
fs
call
push
and
jns
sar
sbb
xlat
in
fiaddl
mov
aad
loope
pushf
adc
adc
cmp
xor
jg
jg
xchg
adcl
adc
sbb
and
mov
mov
icebp
jns
sub
inc
pop
cli
sbb
data16
daa
outsl
bswap
pop
push
pushf
mov
es
incl
mov
out
cltd
xor
inc
rorb
mov
inc
cmp
sub
cmp
xor
imul
push
dec
mov
into
sub
lock
mov
mov
cmpsl
xchg
jmp
icebp
add
movsl
daa
int3
mov
aas
sbb
xchg
sbb
jo
cmp
mov
or
mov
or
cmp
fcmovbe
or
aas
test
andl
aad
lock
lds
jae
scas
fstp
cmc
data16
push
aaa
mov
lods
dec
xor
mov
mov
int3
jnp
outsl
gs
push
push
mov
jne
add
fcmovu
sbb
sbb
icebp
or
mov
insl
pop
ds
dec
pop
popa
sub
push
pop
mov
stos
add
add
xchg
xchg
or
cs
scas
cmpsb
lds
aad
rolb
jnp
mov
jbe
into
xor
fsubp
mov
call
inc
std
dec
loopne
stos
stc
aas
fwait
add
mov
adc
mov
mov
or
and
sub
pop
js
mov
in
arpl
push
int3
push
push
out
in
pmulhw
push
es
cmpsl
out
xor
dec
scas
mov
das
insb
icebp
pop
jbe
rcll
mov
xchg
xor
pusha
and
xchg
ss
push
ret
data16
leave
ror
sbb
sbb
fldt
sub
mov
mov
add
jge
push
and
xchg
loopne
fcmovnb
adc
mov
dec
lds
in
loop
out
sub
stc
dec
js
mov
filds
jb
push
lret
shl
test
fs
and
mov
out
movsl
jecxz
pop
fnstenv
adc
icebp
push
pop
mov
xchg
adc
imul
xor
stos
out
enter
inc
lds
js
cmpl
and
shlb
dec
push
les
mov
fimuls
jno
sub
jo
mov
aas
es
mov
inc
sub
mov
or
lea
push
cmp
repz
cmp
adc
icebp
fistpll
and
xlat
xlat
push
xchg
lahf
mov
lret
ds
lock
pop
int3
rcl
dec
outsb
jbe
mov
push
sub
sub
xlat
pushf
jecxz
inc
cmp
dec
enter
adc
xor
faddl
ret
inc
push
push
mov
aas
lock
mov
xor
pushf
xchg
aam
sbb
bsf
jmp
pop
and
jnp
dec
pop
scas
test
xchg
or
test
jae
imul
test
subb
daa
push
jp
jmp
inc
imul
pusha
outsl
push
gs
mov
add
add
ds
mov
xor
out
daa
stos
dec
mov
lret
pusha
mov
adcb
mov
mov
outsb
enter
mov
cmpl
cli
mov
pushf
movsl
mov
adc
flds
movb
add
out
cli
dec
mov
repz
lret
enter
xor
jno
arpl
inc
sub
lea
push
mov
add
sbb
call
dec
and
cmp
fnstsw
push
cmp
mov
mov
xchg
bound
sbb
xchg
dec
adc
jg
jle
jl
dec
dec
sub
xor
insl
xor
popa
test
lds
shl
push
jns
sbb
jmp
decl
cmp
iret
lods
sbb
jbe
xchg
js
jge
outsl
int3
pop
sahf
pushw
inc
mov
imul
lcall
mov
jle
sahf
lret
or
jae
sub
lock
push
pop
insb
jns
sbb
fisttpll
push
mov
insb
cmc
sbb
jbe
sub
jl
mov
fidivrs
xorb
sub
xor
jecxz
sbb
dec
cld
fsubp
jge
mov
jecxz
shl
jnp
cld
je
xchg
sub
and
icebp
repz
rclb
xchg
dec
adcl
xchg
mov
add
add
repz
iret
cmp
jmp
in
cmpsl
mov
sti
add
xor
sub
popa
ret
in
arpl
or
mov
push
adc
jp
push
pop
lcall
fildl
arpl
test
popa
pop
xchg
push
lahf
mul
mov
inc
scas
mov
imul
jmp
xchg
stc
cmp
in
aad
outsl
jp
pusha
or
cmp
lock
adc
cmpsb
mov
inc
or
push
jb
cmpsl
push
dec
xor
push
push
daa
shrl
lods
sub
in
das
addr16
jae
xchg
call
cmp
pop
cltd
mov
or
loop
adc
sbb
or
cmp
pop
aaa
repnz
push
not
ret
xchg
iret
mov
es
divl
movsb
popa
stos
out
int3
into
popa
mov
insl
dec
push
dec
push
outsb
jo
mov
testl
ds
push
mov
mov
push
mov
std
add
mov
ret
arpl
or
ja
push
push
xchg
sub
mov
sbb
or
jnp
dec
jb
mov
imul
push
cmpsb
sub
in
fcomi
mov
adc
in
cmp
adc
xor
jae
dec
cmp
jp
cld
and
xchg
iret
mov
inc
inc
cmovnp
mov
sbb
cmpsb
mov
imul
repnz
fcomps
pop
out
and
xor
add
incl
push
xor
jns
mov
mov
rcrl
or
flds
adc
add
sub
or
mov
fsubrs
into
pop
or
call
std
mov
repz
stos
dec
mov
push
sbb
sub
pop
notb
pop
adc
add
jns
sub
test
out
test
ds
aaa
test
gs
inc
xchg
fildl
popf
cmpsb
or
push
in
cmp
mov
fs
sub
jmp
pop
pop
xchg
xchg
std
pop
in
push
push
cmp
or
cli
and
cmp
sub
loop
mov
sarb
sbb
cmpsb
in
fstps
jle
add
push
out
repnz
mov
and
mov
int
adc
pop
dec
rorl
in
push
repnz
arpl
insl
xchg
mov
dec
pop
inc
and
add
or
nopl
fnsave
rcrl
sub
push
cmp
out
fildll
call
je
jle
dec
ljmp
in
pop
leave
dec
cbtw
mov
push
into
andl
mov
lods
xchg
pop
inc
cld
jg
das
sub
or
dec
cmp
pop
movsl
add
jl
mov
movsl
clc
mov
jge
xchg
xor
pop
fisubs
add
cmp
popf
mov
or
xchg
jns
cmpsb
leave
pop
mov
daa
movsl
in
cmp
add
adc
mov
adc
int3
shlb
mov
jp
pop
inc
bound
adc
xlat
pop
fadds
sub
cmp
std
xor
stc
xchg
in
aad
insb
mull
adc
push
int
idiv
push
push
lds
cmc
mov
repnz
xchg
orl
jnp
xor
pop
sub
mov
pop
lock
mov
je
sub
cs
pop
mov
push
cmpsl
push
mov
mov
jl
cmpsl
loopne
pusha
and
sub
push
jo
push
cmp
decl
fmuls
adc
rcr
jp
pop
push
dec
sub
fldl
arpl
mov
adc
pop
cmp
nopl
cmpsb
pop
ja
xor
cltd
ret
cwtl
mov
out
shlb
adc
std
inc
scas
xor
push
dec
push
inc
and
or
mov
push
xor
add
jo
adc
or
sbb
inc
xchg
dec
sbb
das
xlat
sbb
mov
dec
mov
inc
pushf
shl
ljmp
push
lds
xor
scas
or
loop
out
adc
lcall
and
lret
loopne
pop
xor
fildl
push
xorl
test
fs
inc
mov
push
add
lds
xchg
insl
in
cmpsb
mulb
bound
push
mov
mov
sbb
cmc
imul
mov
aaa
in
xor
jle
xchg
imul
xor
out
pop
sub
xchg
pop
xor
or
jecxz
inc
or
inc
pop
sub
inc
dec
ljmp
outsl
mov
mov
jo
shlb
loop
jbe
jno
rclb
call
nop
in
shrl
mov
shlb
call
pusha
gs
call
jne
mov
push
test
fcmovnbe
inc
and
ret
scas
xor
scas
sbb
push
pushf
cmp
js
aam
push
mov
aas
mov
adc
xchg
xchg
test
das
mov
shlb
cmpsb
sbb
and
sbb
mov
pop
ret
mov
xchg
cmp
push
push
cmp
jl
push
sarl
cltd
xor
jg
dec
xor
pop
pushl
je
pop
push
lret
jae
mov
in
in
xchg
dec
add
sub
loop
ljmp
xor
jne
pop
es
loope
fsubs
jp
idivb
std
clc
cmp
fdivr
mov
xor
cmpsb
in
xchg
fldpi
add
cmp
xor
or
fst
negb
or
xchg
out
cmp
adc
shll
push
mov
inc
mov
xlat
fimuls
jno
enter
test
aad
je
nop
je
cli
mov
inc
jb
mov
pop
jbe
mov
xchg
adc
xor
ja
pop
jle
lret
inc
inc
hlt
aas
int
add
lock
mov
ret
sub
mov
inc
add
add
pop
inc
lods
scas
insl
ds
mull
or
bound
xor
cmove
or
dec
cmpsb
jns
add
outsb
xchg
daa
out
addr16
xchg
scas
mov
mov
jmp
mov
push
lods
push
add
hlt
cmp
and
sub
mov
js
inc
cmpb
mov
mov
add
sahf
cmpsl
mov
cmpsl
icebp
mov
fmulp
fucomp
mov
jb
loop
stos
std
xchg
mov
jmp
in
ja
je
sub
adcl
les
pop
jge
add
das
movsl
jne
or
outsb
mov
lea
jns
test
mov
mov
dec
jns
or
dec
inc
and
cmp
shll
jnp
or
xlat
and
push
scas
mov
sub
call
lods
stc
fadds
add
jl
or
push
jp
and
push
dec
test
mov
test
les
imul
lea
dec
fwait
in
dec
ficompl
mov
sub
push
sub
pop
jne
call
leave
arpl
inc
pop
dec
dec
fmull
lret
or
jecxz
push
enter
sbb
pop
paddw
or
hlt
sbb
mov
xor
cs
jp
cld
call
push
pop
les
movsl
stos
loop
sub
sti
cmpsb
add
fidivl
enter
push
mov
add
repnz
inc
cwtl
push
xor
mov
add
popf
out
pushf
or
push
insl
pop
cmpsb
lret
lea
cmp
or
daa
loop
ss
shlb
sbb
rcrl
jns
push
sahf
aas
mov
mov
cmp
mov
add
jae
mov
idiv
pop
cs
test
xorb
stos
loopne
js
loop
imul
mov
inc
insb
mov
test
sub
or
pop
dec
gs
pop
pop
add
ror
pop
push
and
push
outsl
sub
xchg
push
mov
cld
loope
sti
pop
shlb
pop
stos
adc
test
iret
pusha
xor
jbe
idivl
pop
sbb
mov
mov
mov
jmp
jmp
ret
das
es
ret
in
mov
int
mov
test
mov
idivl
mov
jmp
pushf
ret
and
mov
aad
mov
sub
pop
mov
dec
cwtl
jbe
gs
outsl
sbb
in
out
inc
inc
dec
pusha
and
ljmp
mov
mov
mov
test
push
sub
inc
xchg
aas
divl
adc
sbb
or
add
mov
pop
icebp
popa
mov
sub
adc
jno
mov
cmp
or
int
lods
ss
test
xchg
adc
dec
mov
out
je
cltd
xor
sahf
hlt
mov
leave
in
and
and
mov
dec
scas
xchg
aam
mov
add
dec
mov
push
dec
mov
mov
std
in
add
fisubs
popa
and
out
lret
sahf
test
mov
fnstcw
ds
mov
xor
sahf
cmp
stos
decl
testl
or
ss
scas
push
mov
inc
mov
jp
xchg
push
lcall
lret
filds
ret
xor
dec
mov
je
mov
sti
stos
shl
lcall
js
jp
mov
inc
pusha
mov
inc
lcall
xor
cmc
ds
mov
and
or
icebp
movsb
mov
out
mov
mov
repz
stc
lahf
fwait
xchg
mov
xchg
popf
pop
mov
jbe
adc
clc
aad
jae
stos
and
jbe
jl
pop
mov
jmp
pop
inc
xorb
andl
shrl
add
loope
jnp
or
movsb
in
xchg
add
pop
jns
push
inc
lock
out
push
in
jns
arpl
push
mov
inc
fistpll
mov
push
sub
mov
dec
push
iret
sbb
sub
push
mov
pop
ljmp
cmp
push
fdivrl
aaa
and
loopne
and
mov
fmulp
in
xor
subl
or
pop
xor
pop
add
dec
pop
test
fisubs
mov
inc
mov
mov
shl
jbe
xor
jne
out
lret
imul
inc
nop
fwait
jecxz
clc
sub
jnp
pop
loope
or
xchg
push
xor
pop
ficoms
fmuls
stc
popf
jno
call
adc
and
shr
loop
aad
sub
xor
and
fdivr
mov
fdivl
loope
stos
outsl
imull
mov
push
imul
add
push
push
call
lcall
bound
sbb
sbb
das
jge
test
pop
inc
loope
int3
fimuls
out
std
mov
cmp
cli
add
inc
cmp
sar
lods
cld
jle
and
push
icebp
mov
and
xchg
lcall
rcl
lret
push
and
ss
push
sub
out
rcrl
xor
mov
inc
nop
mov
mov
packssdw
rcrb
ds
test
xlat
gs
jecxz
jle
popf
decb
test
cmpsl
mov
mov
sub
or
fwait
scas
dec
sbb
xlat
xchg
js
out
cs
and
sar
dec
es
js
repz
stc
insb
mov
subb
shrl
adc
ret
sub
das
push
dec
ror
jl
pop
bound
mov
mov
loope
mov
inc
and
and
stc
mov
adc
push
enter
mov
or
fsubp
push
icebp
imul
pop
and
jg
popa
insb
pop
pop
js
jae
icebp
xor
pushf
adc
adc
and
push
cmpsb
out
add
xchg
stos
aam
mov
mov
insl
xchg
mov
dec
stos
jp
mov
das
push
mov
xor
fdivs
fisttps
mov
jne
lahf
adc
xchg
movsl
movsl
sbb
cmpsb
aas
xor
cmc
mov
insl
and
scas
ficompl
xchg
or
movsb
sub
mov
stc
sbb
rcr
pushl
dec
jecxz
and
push
pop
sbb
not
je
movsb
pop
push
mov
pcmpgtw
orb
push
pop
sub
in
pop
mov
sbb
sbb
lock
pop
pop
clc
add
pushf
xchg
lret
fsubrl
shlb
test
addr16
and
sub
dec
repz
pushf
cld
mov
test
lds
mov
jne
comiss
push
xchg
aas
pop
cmpsb
xchg
sub
xchg
mov
mov
ljmp
cmpsl
jp
daa
in
mov
aaa
mov
jg
or
sahf
mov
int
mov
sti
addl
mov
lcall
nop
xor
dec
xlat
mov
push
mov
js
push
mov
dec
mov
jg
mov
xchg
ret
cs
and
repz
mov
push
xorb
mov
adc
xchg
arpl
leave
mov
xor
dec
xor
in
pop
shr
adc
into
das
jmp
push
fdivrl
shlb
popa
aam
shll
mov
jne
inc
mov
nop
pop
dec
push
scas
xor
inc
xchg
lret
fisttpl
mov
push
outsb
leave
push
rcrl
hlt
mov
mov
dec
jnp
out
cmp
push
mov
data16
daa
inc
pop
xchg
in
dec
data16
push
and
pop
sub
jl
aas
push
adc
cmp
fdivrl
cltd
ret
cmp
ret
loope
leave
inc
xchg
mov
js
push
lods
gs
mov
or
mov
adc
fildl
sbb
xchg
push
sbb
dec
hlt
push
mov
or
or
cmp
xchg
fwait
push
gs
lahf
lret
aam
xchg
sti
je
mov
daa
jnp
insb
pop
js
test
add
arpl
dec
jle
sbb
aas
ret
scas
fldt
idiv
icebp
dec
dec
popf
inc
bound
adc
loopne
fprem1
adcl
out
and
mov
call
addl
enter
dec
es
js
jns,pn
dec
mov
outsl
bound
dec
xchg
xchg
or
xchg
out
sub
stc
gs
ja
loope
aas
int3
push
cmp
xchg
mov
jge
js
add
xor
xchg
jb
xchg
and
push
jno
cmp
jmp
and
add
mov
xchg
xchg
xchg
pop
in
cmpsb
or
push
inc
mov
inc
push
bound
aad
dec
stos
loopne
push
or
xor
push
aaa
icebp
insb
jl
movsb
mov
fnstsw
test
insb
adc
pop
out
and
aaa
cmpsl
in
cmp
adc
jle
sbb
fistps
push
mov
sub
getsec
cmpsb
jmp
dec
pop
xchg
pop
dec
push
jl
aam
sbb
inc
sbb
test
fxch
mov
pop
and
sarl
aad
cwtl
cmp
mov
jmp
addb
lret
mov
rorl
cwtl
mov
in
xor
idivl
data16
or
dec
test
xchg
stc
cltd
sub
mov
outsb
cs
or
xchg
push
xchg
sbb
lcall
cli
jmp
leave
nop
int3
int
mov
jnp
xor
push
or
push
push
mov
xchg
aaa
dec
test
imul
cmp
and
inc
mov
nop
test
notb
ret
ret
aaa
gs
xor
pop
inc
dec
add
dec
stc
dec
push
inc
cmp
fs
adcb
dec
ret
add
lret
add
mov
mov
adc
pop
jp
mov
jl
cwtl
jmp
push
cmc
adcl
xor
inc
out
xor
mov
mov
mov
loopne
sub
inc
cltd
aam
jns
adc
in
pop
cmp
inc
iret
sub
test
pop
push
and
fisttps
outsb
cmp
iret
sub
xor
mov
pop
jno
push
and
pop
xchg
xorb
xchg
adc
mov
fiaddl
cmp
xor
cltd
mov
sbb
out
mov
fldl
scas
and
xchg
or
sub
nop
mov
cmp
scas
bound
movsb
gs
xor
add
jne
jmp
jo
sti
out
into
mov
xchg
jg
aam
out
adc
mov
cld
jnp
pop
roll
popl
push
sbb
mov
pop
cmp
adc
lcall
inc
jp
jno
pop
test
sbb
push
inc
sub
leave
jae
mov
mov
pop
push
jo
movsb
adc
jl
jbe
mov
enter
mov
les
mov
or
fistl
dec
imul
std
sub
in
test
cmp
aam
xor
cmpsb
adc
adcl
push
jmp
sbb
cmp
mov
cmp
repnz
movsb
outsl
push
jecxz
test
movsl
jmp
test
mov
dec
iret
cli
mov
aam
xor
dec
ds
cwtl
scas
push
jne
and
xchg
and
adc
push
das
jmp
mov
inc
loopne
add
gs
xchg
xchg
icebp
fldl
pop
loop
dec
daa
repnz
mov
sbbl
xchg
stc
ficomps
and
sub
push
test
lret
fstps
out
xchg
fdivrs
aam
jns
sahf
jl
push
jp
aad
pop
mov
lds
push
adc
aam
fldt
mulb
mov
repnz
push
into
mov
xor
push
in
ds
cmp
push
adc
loop
shlb
mov
into
pop
push
push
scas
notl
arpl
arpl
icebp
rorl
aaa
loop
mov
inc
mov
ljmp
mov
push
adc
test
fmuls
cli
mov
mov
sub
es
enter
dec
out
outsb
in
test
jge
fwait
mov
jb
push
or
xor
movsb
shl
pop
fbld
cli
mov
out
push
int3
mov
add
leave
jg
ljmp
sahf
pop
rclb
mov
jle
mov
add
and
inc
mov
xlat
lods
mov
pop
cmp
jns
movsl
push
and
imul
lahf
stos
stc
xor
sti
jne
loopne
aaa
nop
or
adc
loop
sbb
or
and
cmpsl
dec
sbb
shrl
aaa
cmp
das
dec
sbb
pop
mov
or
call
mov
dec
add
imul
out
ret
loopne
lahf
repnz
xchg
testl
add
pop
sub
pop
scas
scas
ja
arpl
inc
jmp
inc
cmpsb
out
jnp
sbb
xor
mov
xchg
xor
sub
in
insb
dec
mov
ret
leave
lods
mov
jecxz
xor
and
hlt
sub
sub
pop
push
mov
cmp
adc
fwait
shlb
sub
lea
push
dec
lea
xchg
lret
sub
inc
js
cli
xchg
mov
stos
dec
xlat
push
xor
rcl
ja
mov
jg
aam
inc
test
js
pop
push
pop
xchg
sbb
jmp
xchg
xchg
pusha
jle
xorl
gs
icebp
xor
arpl
and
jle
and
pop
stos
mov
or
repnz
loopne
inc
mov
fs
cmovae
xchg
jno
inc
pop
rcr
int
addr16
addb
adc
test
lea
das
jbe
mov
mov
jmp
testl
addb
xchg
cmp
in
ljmp
lret
sbb
sub
daa
nop
pop
dec
add
jnp
xor
fistpll
mov
je
sbb
push
aas
ljmp
test
xor
cmp
adc
or
sbb
mov
pop
test
scas
mov
aad
pushf
mov
inc
leave
shl
jne
and
dec
xchg
sub
inc
cmpsb
ret
shlb
ds
fisttpll
inc
fistpl
loope
cmp
xor
imul
pop
and
repnz
test
aaa
xchg
outsl
mov
inc
mov
sahf
inc
xchg
rcll
hlt
imul
pop
inc
sarl
dec
pop
jne
mov
jmp
cwtl
mov
fisubrs
mov
hlt
test
mov
add
leave
xchg
in
cmp
adc
cmp
adc
test
fdivr
add
mov
inc
aad
jmp
add
xor
pusha
stos
adc
fiadds
gs
and
push
sbb
sub
popf
xchg
lret
aad
fsts
outsl
adc
cmpsb
or
dec
add
jl
loop
push
xchg
inc
mov
leave
xorb
mov
lret
push
adc
lcall
dec
dec
out
mov
loop
xor
mov
ret
push
dec
repnz
and
push
icebp
inc
mov
push
and
sbb
into
rol
inc
xlat
mov
mov
jae
fwait
xor
jnp
push
dec
lods
mov
mov
adc
inc
xor
adc
movsb
xchg
adc
movsb
fcmovne
cs
ss
mov
xor
or
out
push
mov
cmp
cli
insb
push
dec
push
jns
sub
mov
sahf
mov
cli
int
and
xlat
aas
insl
jnp
xor
add
pop
add
repz
imul
daa
mov
notl
in
mov
movsl
jo
js
lods
fs
cmc
inc
jbe
imul
loopne
or
jmp
xlat
js
test
push
lret
cld
pusha
mov
push
test
sahf
and
std
mov
lock
das
jl
adc
loopne
ret
jmp
jns
sbb
mov
mov
lds
stc
push
mov
cmp
test
xor
sarb
std
ret
mov
movsb
inc
ret
int3
std
xchg
sahf
and
mov
stos
push
mov
fmull
jp
pop
cmpsl
or
nop
inc
jmp
mov
jb
inc
pop
stos
fstpl
mov
jne
int
negb
pop
push
cs
shl
stos
push
mov
pop
movsl
fdiv
inc
jge,pt
ficoml
sarl
jecxz
mov
inc
push
adc
add
iret
inc
xor
mov
push
popfw
or
pop
les
mov
mov
iret
adc
fistpll
xchg
rorb
add
fidivrs
movsb
out
jmp
sub
push
insb
pop
pop
sbb
xchg
les
aas
mov
data16
sub
cmp
xchg
fucompp
mov
int3
ds
loope
pop
lea
jae
pop
xor
sub
xchg
mov
fmuls
test
sub
mov
adc
sub
and
mov
cmp
xor
pop
jl
pop
mov
sub
lods
jbe
mov
stos
adc
adc
jge
lret
leave
cmp
cwtl
stc
mov
adc
or
scas
mov
sbb
dec
cmp
addr16
faddl
mov
arpl
mov
addr16
mov
outsb
pop
cmp
in
ds
adc
call
inc
mov
stc
cmp
std
lods
mov
pop
clc
mov
jp
adc
xchg
sbb
push
lahf
adc
or
imul
movb
fwait
adc
push
or
mov
cmp
in
push
push
and
clc
adc
lahf
pop
out
ds
or
mov
test
mov
out
loopne
in
xor
je
and
sbb
cmpsb
out
mov
add
sbb
and
pushf
push
in
jle
movsl
sub
jo
fbld
sbb
iret
shlb
mov
imul
jo
inc
jecxz
sub
mov
incb
pushf
mov
jb
int
popf
comiss
jns
ret
in
or
in
sbb
enter
sbb
jns
and
outsl
or
mov
xor
ja
mov
mov
jno
lcall
or
rcr
sbb
lret
dec
icebp
mov
comiss
pushf
testl
sbb
andb
dec
xor
scas
icebp
add
rorb
data16
sub
sub
jno
inc
leave
jmp
popa
in
xor
push
ja
mov
sti
push
cld
push
fiadds
adc
mov
call
mov
pop
das
xor
bswap
pop
sub
sub
scas
mov
lret
jp
inc
clc
push
fstp
call
jo
daa
cmpsb
repnz
xor
jg
aad
mov
je
jmp
incb
movsl
shlb
push
jo
xor
lret
mov
or
stc
mov
clc
mov
xchg
mov
jbe
ljmp
jno
out
popf
out
add
mov
push
hlt
imul
divb
adc
xchg
sbb
cmpsb
sub
faddp
pusha
dec
nop
push
dec
insb
xchg
jge
xlat
aas
push
xor
cld
or
inc
lahf
sub
lods
push
cmp
ljmp
lods
xorb
bound
pop
divb
jo
push
outsl
xor
sub
xchg
test
lret
bnd
scas
ret
aad
ja
movsl
insb
cmpsl
stos
jbe
jmp
sub
negb
push
mov
leave
mov
ret
popa
call
fs
data16
dec
mov
ret
adc
in
push
negl
mov
call
mov
lea
ss
imul
mov
inc
popf
ljmp
sub
mov
jne
inc
data16
and
dec
je
jne
push
adc
pop
xchg
mov
xchg
jmp
inc
jg
push
es
lds
rol
inc
jge
ja
jns
insb
and
icebp
inc
ljmp
sti
or
stos
pop
cwtl
pop
aas
jbe
lahf
insb
out
cmpsl
mov
push
mov
jbe
js
in
jecxz
push
sarb
and
fs
je
test
imul
lret
roll
test
je
push
push
push
leave
mov
imul
push
test
sub
push
mov
cmp
mov
sub
jns
cmc
movb
jno
mov
scas
lret
fwait
fwait
imul
in
push
adc
mov
inc
push
adc
sub
pop
aad
fimuls
cmc
xor
mov
xor
xchg
or
dec
aad
inc
mov
fdivs
push
xchg
or
or
sbb
mov
ror
ljmp
outsb
std
xor
push
mov
ljmp
lcall
mov
out
int
into
and
inc
lret
dec
int3
sbb
pusha
sbb
xchg
and
dec
orb
gs
pushf
xchg
xor
int
jp
cmc
popa
add
jo
lock
sti
pop
lret
cmpsb
jl
fildll
mov
cmp
shlb
push
testb
cmc
adc
hlt
cmp
daa
or
fistpl
add
cld
fimull
xchg
icebp
aam
cmp
test
out
and
in
jnp
xor
xor
inc
sar
inc
pop
dec
mov
lcall
adc
in
iret
sahf
xchg
sbb
cmp
enter
jmp
mov
clc
sbb
xor
addr16
xor
sar
in
stos
mov
adc
jno
pop
adc
sub
inc
adc
pcmpgtb
cltd
sbb
dec
int3
lds
les
dec
lcall
test
ss
or
icebp
pop
jmp
sbb
fsubrs
xchg
pop
inc
jnp
xchg
ljmp
dec
jmp
fs
pop
lds
sub
ja
das
js
or
shl
in
inc
test
in
adc
cmp
mov
mov
lods
jecxz
xchg
mov
push
and
jbe
sbb
cld
pop
lcall
xor
xor
inc
cmpsb
xchg
loop
cwtl
fsubrp
pop
mov
or
xchg
lret
pop
cmpsl
adc
adc
lods
jp
aam
test
insb
push
sub
xor
dec
dec
repz
aaa
sbb
imul
mov
inc
mov
jae
sbb
popa
xchg
sbb
rcrl
loope
mov
push
add
adc
shr
pop
pop
iret
fwait
cmp
sbb
xor
xor
xchg
jmp
pop
xor
xchg
mov
in
add
mov
xchg
mov
dec
lret
stc
hlt
mov
push
cwtl
fistl
inc
sbb
xchg
shlb
cmp
test
std
movsb
lcall
pop
inc
incl
xchg
data16
lds
fisttps
out
stos
daa
dec
aas
fs
jae
out
sahf
mov
inc
mov
mov
cmp
ds
into
mov
push
in
outsl
in
jo
xchg
es
scas
les
fcompl
lods
jle
loope
pop
cmp
mov
push
mov
push
mov
mov
test
shlb
xchg
lcall
pop
call
jle
loope
movsl
xchg
jb
and
mov
nop
adc
insl
in
inc
addr16
popf
push
jecxz
mov
sbb
sub
jle
or
movsb
mov
dec
test
shrb
stos
iret
movsl
fiaddl
dec
lods
jb
adc
addl
push
lcall
mov
jo
and
popa
pusha
test
adc
js
add
jo
fidivs
ret
in
xchg
jno
and
out
loop
or
pusha
sub
xor
cmp
fistpl
sub
nop
jae
mov
and
jno
push
notl
jg
xor
andb
paddsw
in
mov
dec
push
xorb
jns
rcr
add
cmp
shll
faddl
lds
aad
or
add
push
jae
int3
out
test
pop
mov
aam
stos
dec
scas
fwait
mov
sub
push
lret
mov
xchg
orl
nop
lret
int
clc
jo
sub
adc
pop
adc
lret
popa
xor
push
cmpsl
push
or
sub
les
xchg
cwtl
xchg
mov
cmp
in
jbe
push
cli
lcall
ljmp
cwtl
popl
jo
shll
mov
xchg
xor
mov
jnp
sub
fldcw
add
push
in
jg
push
push
xor
mov
adc
push
and
daa
in
adc
pop
adc
lods
outsl
iret
je
mov
pop
movsb
mov
adc
insb
out
frstor
sub
jb
jp
outsl
lcall
add
cmp
fidivs
sub
xor
pop
rorb
inc
pusha
orl
outsl
imul
lahf
xchg
int3
dec
xor
addr16
out
lods
pusha
mov
insl
mov
int
xlat
in
cmp
dec
pop
push
dec
cmpsb
dec
in
call
cmpsl
jmp
jl
jl
arpl
sub
cmpsb
insb
inc
ja
arpl
cmpsl
psllq
or
scas
cmp
sub
jno,pt
js
cmpsl
js
cmp
sub
adc
mov
ja
mov
push
popf
cmp
mov
jne
loopne
jbe
mov
sarl
pop
fucomi
lods
adc
cmp
or
xchg
in
inc
test
mov
daa
addr16
stc
cmp
lret
push
cmc
mov
jge
cs
in
test
mov
cltd
or
outsl
inc
pop
pusha
pop
add
jno
sbb
jno
fucomip
sahf
hlt
repnz
jg
cmc
mov
pop
bound
inc
dec
sti
ret
xchg
ss
movsb
out
dec
cmc
pusha
idivb
test
xor
and
push
adc
leave
ds
adc
cmp
or
dec
lods
dec
outsb
adc
push
lea
jecxz
jp
adcl
xchg
or
leave
add
xchg
cli
push
inc
movsl
or
lods
sub
lea
imul
sbb
gs
mov
lret
sub
dec
shll
mov
ret
push
mov
ds
pop
idivb
inc
push
test
outsb
sbb
outsb
dec
jne
push
lods
xchg
or
mov
and
push
adc
into
sbbb
je
mov
adc
push
push
jb
ja
jp
rclb
push
xlat
sub
sbb
je
mov
sbb
jle
push
outsb
pop
arpl
sbb
fcomi
loop
mov
mov
xchg
cmp
push
push
jmp
stos
cmp
sub
and
inc
addr16
ret
or
lret
stos
push
cltd
clc
shrl
outsb
sbb
in
push
repz
je
fisubrl
inc
call
cmp
loop
xchg
pop
push
lcall
mov
insb
mov
mov
cwtl
ds
mov
mov
int3
sbb
aaa
pop
sar
dec
xchg
inc
insl
mov
xor
negl
pusha
leave
inc
sub
sub
lcall
js
std
sbb
shll
in
sbb
sub
mov
xor
arpl
outsb
and
mov
fwait
mov
sti
mov
aam
inc
fwait
imul
or
mov
sub
mov
or
inc
xor
orb
into
lds
jle
push
gs
es
movsb
stos
push
into
ljmp
sub
pop
dec
mov
inc
fcoms
dec
sub
dec
sbb
push
dec
fidivs
push
push
pop
mov
inc
cmpsb
xor
daa
cmp
jmp
clc
mov
sbb
in
xchg
divl
loope
fldt
push
mov
jecxz
pop
cli
mov
enter
outsl
jbe
cld
rclb
aas
add
pop
loopne
lock
imul
repnz
mov
out
or
push
pop
xchg
loopne
iret
stos
inc
mov
bound
lods
jns
insb
dec
push
arpl
out
sbb
xor
stc
cmp
mov
pop
mov
sub
arpl
or
push
pop
cmpsb
imul
jo
xor
int
pop
cli
adc
or
push
push
inc
loop
and
enter
or
mov
jno
scas
stos
dec
in
int
out
jo
push
hlt
lret
push
jp
jge
loope
clc
imul
xchg
scas
xchg
pusha
out
mov
stos
adc
lock
push
mov
movsl
shlb
ret
xchg
jmp
and
or
or
ds
popa
mov
push
pop
or
insl
and
xchg
lock
movsl
push
xchg
popa
push
or
scas
fdivs
das
pop
cmp
es
ljmp
rclb
cmp
mov
hlt
inc
jb
fs
adc
xor
and
sbb
js
mov
inc
and
pop
add
mov
outsb
orl
loopne
push
or
adc
lret
popf
into
inc
ds
shll
push
shlb
int
jg
and
or
and
in
dec
mov
sbb
pop
int3
popf
inc
pushf
aam
add
lock
ds
imul
or
push
stos
jl
scas
aaa
call
addl
fimuls
je
pop
dec
gs
ror
je
push
dec
cmp
add
lret
xor
sti
inc
lea
inc
pop
sti
jo
xchg
sub
pop
adc
mov
or
call
mov
ret
sarb
xchg
jp
sbb
push
xchg
cmp
fmulp
or
cltd
dec
push
adc
hlt
xlat
divb
push
ret
xchg
jo
jbe
ja
mov
sysexit
jg
inc
bound
mov
ljmp
sub
xchg
loop
jb
outsl
mov
repz
xchg
notl
sarl
jmp
aad
adc
push
jle
push
push
cltd
pop
mov
xchg
out
test
mov
int
mov
xchg
dec
pushf
push
into
mov
fldenv
pop
fsub
jnp
bound
bswap
sub
mov
jns
addr16
dec
lret
ret
xor
add
xor
out
push
jns
jne
dec
or
repnz
mov
les
fcoms
pushf
pop
or
sbb
sbb
mov
scas
push
mov
mov
test
mov
ret
and
mov
push
add
pop
fisubs
data16
xchg
sub
gs
or
movsl
enter
in
adc
std
cmp
lods
dec
fwait
cmp
mov
flds
jl
gs
push
mov
imul
fwait
aad
call
adc
sub
mov
cmc
pushf
or
mov
and
rcrl
mov
les
push
ss
sahf
call
sub
ficompl
leave
fidivrl
scas
xor
jmp
imul
jp
sub
sub
push
loope
ja
jmp
movsl
or
mov
fs
jg
cmp
jne
push
and
inc
sbb
imul
ss
rolb
data16
popf
push
push
jecxz
imul
divl
in
adc
cmpsl
sarb
je
adc
mov
rcll
push
outsl
fisubs
lods
xlat
adc
xlat
bound
int3
xor
push
cmp
sbbb
adc
xlat
mov
test
push
inc
imul
nop
jns
je
pushfw
leave
push
loop
mul
loopne
xchg
push
sbb
mov
out
adc
into
xchg
dec
sub
inc
in
shll
push
mov
dec
pop
lds
sti
sub
insl
ljmp
jg
into
aad
outsb
int3
xlat
les
inc
sbb
jae
ja
shlb
pusha
push
and
cmpsl
push
stos
jbe
mov
outsb
ror
fsubrs
imulb
push
add
push
mov
push
popf
mov
stos
xchg
ss
sub
ljmp
jp
sbb
push
sbb
jo
or
and
xchg
aas
in
clc
mov
jge
pop
fnstsw
test
mov
mov
into
mov
mov
ret
xchg
outsb
pop
cltd
mov
in
adc
repz
arpl
mov
arpl
scas
mov
inc
test
or
adc
jbe
and
mov
cmp
int
push
pop
loop
shrl
xchg
jl
test
push
cmp
loopne
adc
xorb
adc
mov
adc
jb
in
pop
adc
xor
lods
sti
int
popa
jle
jne
or
add
ret
and
cmpsb
push
popf
loope
mov
push
rcrl
das
fnstenv
push
mov
mov
cmpsb
fistps
dec
add
out
pop
movsl
in
pop
xor
jp
int3
hlt
test
in
movsb
out
or
insl
mov
out
fistpl
push
jb
test
mov
orl
lcall
cmpsl
into
xor
cmp
add
jb
adc
lahf
fildl
pcmpgtb
xchg
pusha
xadd
mov
cmp
out
mov
cmp
movsl
adc
int
dec
cmp
outsb
loopne
sbb
jp
jmp
jo
mov
xor
xor
xor
or
jg
aam
inc
or
mov
jmp
sub
pusha
cmpsl
mov
mov
loope
sbb
and
cmpl
xorl
stos
cmp
or
cmpsl
sbb
ljmp
or
lret
mov
rolb
adc
xor
inc
shlb
fs
adc
lahf
jbe
mov
dec
rcrb
mov
ljmp
mov
sarb
rorb
jno
add
sbb
movsl
or
jecxz
mov
pop
insl
aaa
mov
xor
sahf
dec
mov
push
adc
mov
dec
dec
xchg
leave
scas
test
imul
insb
pop
jmp
sub
mov
jle
mov
je
call
dec
lds
mov
inc
add
mov
loop
dec
mov
inc
orb
ret
ficompl
imul
rol
lahf
xchg
and
pop
movsb
sub
and
lea
inc
stc
data16
mov
loopne
push
lods
jmp
push
movsl
mov
outsl
push
dec
fisubs
push
fs
add
or
aaa
insb
fwait
adc
jecxz
fnsave
outsb
lods
ljmp
mov
repnz
scas
shrb
call
lock
xchg
dec
pushw
andb
loope
pop
iret
ds
rcrl
mov
aad
add
pop
loopne
inc
jns
fisubl
sub
in
jle
fcom
fmulp
jl
lock
xlat
jl
xor
sub
into
stc
lret
mov
pop
sbb
or
fwait
pop
sbb
rcrb
pop
out
shll
pushf
xchg
adcl
movsl
adc
dec
addr16
jge
or
repnz
repz
scas
cld
in
jo
movsl
sahf
adc
mov
and
aad
push
lods
bound
mov
in
inc
xchg
pop
push
neg
js
inc
mov
ret
dec
and
out
inc
fidivl
cmp
aas
popa
hlt
xorb
add
sbb
mov
nop
sub
mov
sti
ficoms
lods
loopne
mov
mov
mov
lcall
ret
sub
movsb
pusha
lcall
and
mov
pop
mov
xchg
mov
dec
mov
js
int3
test
rorl
mov
jns
scas
cs
loop
js
test
or
iret
cld
idivb
and
dec
ss
iret
ljmp
stc
mov
mov
sbb
les
fdivl
pop
ds
inc
mov
loope
jbe
in
bound
idivl
mov
comiss
push
add
ljmp
inc
into
xchg
or
into
pop
sbb
xor
add
mov
adc
push
adc
into
call
arpl
cld
mov
fs
insb
test
mov
inc
iret
or
adc
push
pop
cld
aam
jecxz
pop
ret
insl
dec
cmpsl
and
mov
dec
icebp
inc
sub
or
ljmp
mov
movsl
sub
test
arpl
add
shrb
xchg
adc
sahf
fisttps
out
imul
adc
xor
lahf
mov
pop
xchg
mov
adc
jle
dec
dec
mov
cmp
inc
xchg
cli
jg
add
dec
stos
clc
jbe
cld
adc
or
popf
jge
and
mov
jge
adc
dec
ret
push
inc
cmc
inc
jne
lret
mov
lahf
push
and
mov
test
jb
mov
cmp
xchg
mov
xor
add
adc
push
mov
and
sub
cltd
dec
inc
shrl
push
sbb
xrelease
dec
mov
push
cmpsl
fdivrs
hlt
out
mov
cmp
sbb
add
pop
xchg
or
adc
jecxz
xor
jnp
xchg
movb
add
adc
int
mov
add
lahf
xchg
test
insl
mov
push
cli
add
inc
movsl
cmc
xchg
pop
xchg
adc
in
stc
cmpsl
xchg
adc
xlat
out
aam
cwtl
shr
sarl
insl
inc
mov
mov
int3
mov
std
inc
fs
adc
icebp
lcall
lods
dec
fidivrs
mov
sbb
lahf
inc
fsubrs
lret
cs
adc
lea
fsubrs
mov
jl
add
hlt
stc
nop
sbb
sarl
stos
lret
fstpl
mov
cltd
pop
pop
push
std
lcall
stos
push
xor
and
jg
add
out
mov
mov
xchg
fimull
jb
mov
mov
pop
cltd
fwait
stos
inc
test
out
xchg
loop
test
add
std
pop
lods
mov
adc
mov
inc
sbb
mov
subl
lods
mov
in
push
mov
clc
fsubl
jp
mov
add
shld
add
test
xor
mov
into
sti
pusha
push
and
adc
pop
rcl
push
sahf
or
push
insb
andb
into
sub
cmp
mov
adc
xchg
sbbl
scas
in
mov
push
arpl
inc
icebp
fstps
jno
mov
sbb
inc
xor
je
ss
jns
add
adc
pop
adc
lret
mov
push
cltd
xor
es
inc
sub
and
lds
cld
or
xchg
xchg
hlt
xor
push
fwait
push
aam
sbb
neg
push
dec
or
inc
sub
es
js
cmp
ljmp
mov
mov
iret
push
mov
fdivrp
jae
orb
repnz
imul
inc
sub
std
xor
test
ret
cmp
xor
rorl
cmpsb
or
xchg
pushf
jnp
and
dec
fs
push
sar
pop
dec
loope
pop
decb
stos
mov
es
adc
or
enter
popf
test
pusha
sub
mov
xchg
stos
or
popa
test
or
dec
adc
out
sbb
mov
les
lret
ss
mov
mov
sahf
dec
je
mov
push
rcll
xorb
daa
into
add
movsb
lods
or
jge
rorl
test
lret
jmp
or
iret
imul
push
jg
stos
aad
loope
inc
orb
mov
fldenv
inc
jmp
mov
shl
gs
notb
and
jg
sbb
scas
mov
cmp
mov
xor
hlt
int
and
jo
inc
aam
or
pop
add
adc
mov
rorl
pop
pop
ja
pusha
push
inc
jl
add
lea
test
cltd
jne
cmpsl
sub
es
int3
cwtl
add
hlt
or
mov
add
mov
xchg
cmpsl
and
aad
sbb
push
out
jge
pop
mov
mov
pop
xor
dec
and
nop
lock
ret
pop
hlt
sub
movsb
sub
mov
mov
xchg
jmp
imul
in
sahf
in
sbb
test
mov
push
inc
xor
pushf
or
arpl
clc
aam
shrb
in
pop
data16
ljmp
mov
pop
dec
xchg
lret
xchg
mov
jl
xchg
mov
nop
adc
fidivrl
or
xchg
call
cli
rorb
aas
push
cmp
faddl
in
scas
lret
adcb
fs
out
add
lcall
lods
out
lret
fsubs
jg
jns
cld
pop
fdivr
lret
leave
lret
mov
sbb
or
xor
cld
into
sbb
mov
xor
adc
mov
fwait
mov
into
pop
fistps
and
inc
and
mov
xchg
xor
mov
xchg
and
mov
push
or
and
xchg
cmp
mov
fcmovne
pop
fbld
sub
fsubrp
mov
pushf
pop
in
arpl
xchg
fldt
pop
hlt
xor
mov
cs
and
je
fidivl
iret
pop
cmpsl
jmp
push
aam
push
clc
cmpsb
push
arpl
push
adc
or
or
mov
cs
dec
test
stc
add
imul
inc
mov
pop
sti
pop
aaa
xlat
jg
mov
jns
xor
cs
xchg
or
loope
test
xor
mov
xchg
lds
lods
int
in
jmp
and
xor
rcrl
jnp
sub
xchg
lods
fwait
pop
sarl
cltd
add
cmc
sub
mov
inc
lea
pop
cld
scas
test
push
aas
cmp
cld
xor
je
xchg
mov
aaa
xor
push
ja
jge
out
lcall
sub
pop
dec
or
xlat
insb
lcall
jge
pop
ror
jne
rorb
dec
lahf
sub
push
out
mov
aad
into
pop
pop
imul
xor
mov
imul
adc
out
pop
inc
xchg
push
mov
sub
sbb
sbb
fcompl
icebp
xchg
sub
jge
xchg
sub
dec
int
and
jl
movsb
sti
nop
push
push
sbb
inc
mov
sub
xor
add
imul
fmull
or
hlt
aas
sub
insb
or
enter
negl
xor
pop
mov
push
lret
jg
xchg
or
jnp
dec
xlat
mov
ja
sub
cmp
xor
in
daa
decb
mov
test
pop
cmp
mov
push
js
scas
shrl
jge
dec
imul
out
or
sub
gs
je
rclb
xchg
mov
jnp
jmp
scas
ljmp
jo
cmpsb
dec
fwait
repz
adc
in
je
mov
cmc
sbb
lret
jl
add
or
ljmp
jl
mov
loop
adc
lret
push
push
repnz
movsl
bound
clc
outsb
xorl
and
inc
add
mov
xlat
pop
jl
cmc
adc
jnp
sbb
mov
mov
push
fsts
push
mov
mov
jge
jns
push
mov
out
out
fnstcw
mov
sbbl
xor
ret
aaa
lahf
lods
mov
outsl
sub
sarl
xchg
sub
inc
xor
jns
mov
stos
imull
and
jecxz
mov
push
mov
pop
sub
in
mov
pop
sbb
imul
mov
push
nop
push
jb
in
out
fs
fwait
dec
jb
jnp
jl
aad
pop
ds
aad
flds
pusha
mov
mov
into
fsubr
mov
mov
outsl
and
sub
mov
push
in
adc
bound
jle
imul
pop
inc
popa
leave
mov
cmpb
cmpsl
insb
outsb
ret
gs
cmpb
loopne
arpl
out
sub
loop
push
dec
cmp
ficompl
fldcw
into
mov
jl
in
xor
add
daa
lds
dec
cmpsl
jb
int3
inc
mull
inc
or
lock
out
xchg
std
pop
jbe
in
rclb
sub
fwait
dec
ffree
jne
mov
or
sbb
xchg
pushf
std
loope
mov
ljmp
test
imulb
roll
ficompl
stos
adc
imul
imul
int
inc
es
das
std
push
inc
aaa
test
push
inc
lds
std
es
mov
les
adc
sahf
lea
ficomps
or
insl
mov
and
fldenv
repz
and
stos
mov
cmc
push
push
pop
sub
lods
lret
xchg
sub
adc
test
fs
sahf
lret
jae
rcll
ret
mov
mov
adc
xor
cmp
int
aam
stc
cs
inc
and
loopne
cmpsb
data16
cmp
jae
xor
stc
push
push
inc
push
lcall
jge
sub
pop
les
xchg
out
inc
pop
cwtl
mov
pop
cvtps2pd
sbb
jp
movsl
mov
rcrb
jge
lea
sbb
in
loop
pop
lahf
shlb
das
add
popa
and
jge
push
enter
lods
pushf
and
lea
lods
inc
xchg
push
stos
add
inc
cli
pop
stc
cmp
ret
dec
into
jle
adc
dec
mov
mov
les
push
insb
cmp
ret
mov
fdivs
jle
outsl
pop
dec
pusha
inc
sarl
and
jb
xor
lds
clc
xor
mov
nop
shrl
dec
jb
cltd
lock
xor
insb
test
movsb
sbb
popa
sahf
jns
push
cmc
sbb
out
cs
pop
jbe
push
loopne
pop
xor
sarb
dec
inc
jp
imul
arpl
fidivs
lcall
or
inc
xchg
push
xchg
sti
adc
lret
sbb
rcrl
cmp
xchg
outsb
cmp
jnp
test
xchg
mov
push
lahf
rclb
cmp
in
sub
and
popf
add
adc
stc
or
or
push
loopne
mov
shlb
rolb
push
lock
mov
jns
adc
loop
das
lahf
xchg
lods
jmp
push
shll
or
xor
out
fucom
or
popa
out
xor
mov
imull
cmp
stos
inc
pop
or
je
pop
sbb
mov
out
mov
mov
cmp
test
xchg
dec
xor
xor
inc
mov
lcall
jg
rcrl
mov
vphaddubw
inc
xchg
push
dec
mov
sbbl
aaa
cltd
inc
mov
fs
pop
dec
loope
adc
lret
aaa
dec
push
bnd
shlb
mov
xor
cmp
push
aad
ljmp
xchg
sub
pusha
sub
adcl
mov
fldl
in
test
rcrb
cmp
repnz
test
int3
fistps
fsubl
ljmp
dec
iret
jb
shl
add
in
icebp
xchg
mov
dec
lods
cmpsb
adc
sbb
pop
and
outsl
stos
lock
or
pop
ss
cmpsl
movsb
add
cli
test
mov
sub
xchg
push
imul
sarb
outsl
mov
pushf
jp
lcall
mov
fcoms
out
movsl
push
cmp
xor
orb
sti
jno
and
pop
fisttps
mov
xor
xor
nop
repnz
adc
out
mov
jp
loope
mov
pop
imul
frstor
push
sarb
add
leave
mov
xor
adc
jecxz
and
mov
jns
sub
nop
push
push
cli
dec
jb
cmpsl
mov
pop
cmc
jmp
int3
loopne
sbb
int3
dec
sbb
inc
out
jle
mov
or
jmp
out
es
ret
sub
fisubrl
pushf
movsl
mov
js
mov
daa
lcall
jl
les
sbb
es
stc
lods
das
xor
bound
ret
sbb
jg
int
mov
inc
and
cmpsb
out
cli
pop
scas
outsl
imul
mov
fnstcw
xchg
mov
jge
mov
clc
sti
loope
testb
push
ret
in
scas
adc
cli
xor
adc
shlb
mov
rolb
rclb
adc
push
mov
pop
or
mov
lahf
fs
iret
test
fnstsw
sti
ret
std
and
dec
adc
dec
push
jno
push
xorl
and
inc
jmp
xor
mov
adc
adc
outsl
pop
adc
clc
adc
jno
loope
add
hlt
mov
push
mov
cli
ret
adc
popa
ljmp
inc
div
cmc
out
fdivrl
adc
adc
sub
sbb
loopne
loopne
nop
int3
cmp
lods
push
and
xchg
sub
scas
mov
out
mov
cmp
or
cli
repnz
push
push
adc
aad
push
xor
sub
imul
data16
dec
sub
xor
or
mov
std
mov
dec
sub
movsl
aad
push
and
outsl
jl
inc
xchg
push
jb
push
mov
repnz
imul
add
sub
push
inc
or
add
pop
adc
popa
sbb
shl
mov
push
out
sbbb
lret
xor
mov
sbb
push
dec
imul
sbb
push
cs
hlt
dec
lret
xchg
push
push
push
repz
and
jne
xor
leave
pop
adc
inc
sub
hlt
pusha
incb
dec
into
js
pop
inc
push
mov
icebp
int
fcmovu
int
cmp
adc
add
push
mov
cmp
xchg
outsl
jb
adc
xor
inc
fmul
nop
mov
imul
mov
pushf
out
add
icebp
push
cmp
mov
sbb
sbb
cwtl
movsb
push
inc
mov
clc
dec
leave
fstl
mov
hlt
lret
cmp
fisttpl
dec
in
mov
subb
cmpb
out
lea
mov
int
jp
dec
out
pop
xchg
stos
jmp
mov
enter
iret
jbe
jno
cltd
leave
and
sub
not
addr16
imul
add
je
cld
mov
xor
jp
dec
hlt
push
mov
push
les
dec
je
movsl
fcmovnbe
lea
leave
mov
mov
pushf
dec
xor
pusha
sbb
adc
into
leave
aas
je
add
int3
out
push
es
popf
dec
or
xor
psubw
negl
imul
cli
jo
std
jp
sbb
sub
inc
mov
cli
push
and
repz
ss
lods
imul
xor
ret
insb
push
adc
imul
lcall
fwait
push
ss
test
aas
js
mov
mov
je
push
mov
jle
xlat
test
es
xor
fs
jbe
add
cmp
int3
clc
jne
xor
ljmp
scas
mull
mov
mov
xchg
jae
mov
outsb
into
fdiv
sahf
or
mov
sti
cmp
out
pop
mov
add
sti
mov
leave
adc
in
cld
scas
popa
jno
mov
shrl
aas
mov
or
scas
cmp
and
fisubrl
in
jo
aad
js
adc
inc
and
sbb
aas
out
pop
add
scas
xchg
movsl
hlt
push
sub
ret
xor
jo
inc
stos
mov
leave
lret
and
mov
out
es
ljmp
or
inc
dec
sti
jnp
mov
jmp
aaa
cs
cmpsb
loop
jmp
add
xor
sbb
push
outsb
and
aad
adc
lret
ljmp
push
das
push
lret
lods
rcrl
cmp
out
cmc
mov
xor
rcll
outsl
fwait
sub
std
pop
call
adc
mov
jge
ret
xchg
jge
out
subb
jp
mov
mov
pop
mov
rolb
jnp
jno
or
jno
pusha
loopne
xor
and
push
mov
dec
mov
inc
dec
pop
sbb
or
jle
adc
mov
jbe
ss
cmp
neg
adc
clc
pop
sbbl
sub
test
std
insl
push
or
icebp
inc
mov
lods
pop
nop
and
mov
inc
add
mov
pop
or
in
mov
inc
sub
xchg
push
cmp
dec
jae
xlat
outsb
sbb
fwait
adc
push
arpl
mov
xor
call
add
dec
pop
lahf
lret
fisubs
jnp
jbe
inc
loopne
sub
add
dec
jae
hlt
sbb
xor
push
repz
dec
movsl
push
sbb
xorb
pop
icebp
sbb
lret
adc
scas
mov
and
xchg
add
cmp
daa
cmpsb
and
leave
xor
shlb
mov
or
aas
xchg
xor
leave
adc
ljmp
jle
lds
jo
lcall
mov
gs
pop
sub
mov
adc
addr16
add
sub
cmp
jle
loope
mov
and
in
add
xorb
dec
fs
cmp
jp
cmp
mov
mov
addr16
out
cmp
lock
xchg
shr
sbb
addr16
fcoml
xlat
jae
or
aam
add
xorl
pushf
or
add
sub
leave
mov
or
jne
xchg
jge
rolb
or
push
jno
int3
xor
leave
loop
inc
and
cmp
xchg
out
int
sar
mov
hlt
dec
je
jecxz
xchg
test
scas
jmp
movsb
jp
cmpsb
mov
jge
loop
push
ret
mov
leave
mov
cmp
jmp
cmpsl
fcomps
inc
push
mov
jns
push
cmp
aas
push
fcoms
xor
inc
loope
mov
jge
cmpb
xor
fildll
fistps
push
adc
mov
in
cltd
push
inc
or
dec
add
outsl
sub
sti
sbb
pusha
insl
dec
adc
loope
out
aas
push
push
mov
int3
js
loopne
sub
out
movsl
pusha
in
or
leave
sbb
mov
pop
cmp
popf
lea
mov
shlb
cmp
jae
sti
push
orl
out
clc
pop
sub
outsl
insb
aaa
sub
sti
pop
mov
imul
adc
dec
mov
jmp
scas
lods
inc
pop
push
jo
jbe
and
or
xor
rclb
mov
cmp
cld
test
adc
test
inc
and
sub
jge
fildl
jmp
and
aam
pop
sub
add
inc
cmpl
pop
push
mov
mov
adc
push
xor
add
fnstenv
mov
sbb
jge
cmp
ret
or
aaa
ds
lret
test
clc
jns
out
ficompl
sub
sbb
std
cs
inc
fdivrl
jae
stos
mov
mov
dec
adc
repnz
adc
incb
lahf
das
dec
dec
scas
sub
jl
outsl
mov
hlt
lods
push
inc
out
imul
stc
pop
aas
std
cli
jmp
js
mov
aad
and
add
rcll
jp
jmp
and
and
pusha
in
pop
rcll
lods
mov
xor
pop
mov
add
in
test
call
inc
dec
hlt
repz
leave
insl
popa
out
movsl
mov
dec
fwait
xor
add
fstl
adc
and
mov
pop
ds
adc
dec
gs
jns
ret
out
mov
sbb
lret
inc
pop
sub
sarb
fimuls
rcrb
push
fwait
movsl
xchg
xor
in
pause
mov
lahf
or
fistl
mov
lret
mov
std
xchg
in
and
cmp
iret
cmp
aaa
xchg
ret
pop
inc
mov
test
aam
xor
xor
cmp
push
sub
dec
hlt
xchg
jp
cmp
into
fadds
mov
in
and
push
push
js
jl
push
in
sahf
push
sub
out
add
dec
rorl
cmp
test
nop
pushf
leave
popf
lds
jne
mov
repnz
mov
daa
ja
es
xchg
imul
incb
rcr
in
pop
and
ds
inc
cmpl
lahf
fistl
sub
jp
test
imull
add
scas
pop
loope
test
push
out
adc
movsl
push
std
jnp
jle
lock
xor
mov
jne
or
test
cmp
aas
stos
dec
dec
xchg
lret
out
adcb
stos
dec
loopne
sahf
pop
gs
hlt
add
lods
mov
inc
test
imul
jns
mov
dec
dec
and
add
inc
repnz
ss
js
adc
xlat
adc
jle
pop
lods
sbb
and
sub
in
ret
clc
scas
out
sahf
mov
mov
mov
pop
bound
stos
mov
xor
ds
pushf
mov
je
mov
dec
in
call
ds
ficompl
testl
adc
mov
ret
adc
lock
sub
fcompl
sbb
mov
loope
aas
test
pop
outsl
cmp
rol
pop
fucomp
les
aaa
cmpsl
fs
cli
cltd
in
adc
nop
cmp
data16
mov
sub
out
xchg
movsb
dec
enter
sbb
js
aaa
nop
xor
fcom
xchg
faddp
jns
and
loope
insl
out
cmc
lea
or
loop
popa
or
push
jg
push
int
dec
cmp
lods
out
test
jecxz
daa
adcl
cmp
sub
mov
add
inc
sbb
xchg
mov
aas
shl
or
cmp
lods
mov
xchg
push
dec
jmp
lock
mov
push
jbe
jb
popa
ja
xlat
nop
lret
fs
sbb
lods
fwait
imul
or
push
jle
xchg
jecxz
mov
sub
xor
lods
pop
fwait
lret
jge
xor
cmp
imul
mov
sub
jo
adc
pop
out
mov
andl
int3
adc
mov
pop
iret
out
push
pop
mov
and
pop
cmc
sahf
push
mov
subb
inc
sub
gs
lods
lahf
add
jne
iret
add
lds
mov
xor
push
adc
repz
ret
or
lret
sub
bound
jmp
loop
and
iret
cmc
ret
cld
insl
icebp
cmp
leave
pushf
adc
and
cmpsb
test
ret
add
cmp
and
cmpsb
xor
imul
push
xchg
cmp
jnp
fwait
daa
je
rolb
in
push
xor
aad
mov
jnp
push
push
xchg
xlat
xchg
pop
fildll
add
mov
mov
cs
outsb
mov
scas
je
mov
enter
aad
ret
mov
and
lret
iret
dec
repnz
mov
jg
mov
pop
jb
mov
xor
pop
roll
fs
mov
jecxz
mov
xadd
push
sbbl
mov
rorb
jo
sbb
int
xor
dec
inc
les
mov
outsb
sarl
sub
mov
stos
mov
repnz
mov
insb
jae
lock
mov
lret
push
lret
mov
push
cmp
fmuls
mov
jmp
sub
lret
adc
insl
dec
and
add
lods
daa
sahf
and
sarb
shll
call
mov
add
cwtl
cmp
arpl
xchg
mov
bound
std
in
scas
out
push
pop
ljmp
repz
test
mov
std
movsb
lret
out
xchg
sub
stos
jge
pop
in
das
scas
pop
xchg
push
sbb
sbb
pop
and
mov
das
mov
ficomps
cmp
cmp
sbb
pop
add
test
jp
xchg
fisubs
xacquire
jmp
or
xor
out
int
insl
neg
stc
or
das
jp
addr16
out
add
mov
cmp
mov
push
push
jge
sbb
cmc
xor
aad
cli
xchg
pusha
xchg
sbb
aad
pushl
pop
pop
jns
cs
inc
adc
pop
stc
fldenv
mov
ljmp
cmc
and
push
clc
cmp
and
aad
adc
adc
mov
sbb
xchg
fsubrs
cmpsl
and
pop
test
xchg
add
mov
out
in
movsl
scas
sti
imul
and
xlat
fs
out
jge
jbe
sub
cmp
pusha
lahf
jmp
adc
lret
pop
push
pop
stc
fidivl
mov
daa
lahf
pop
fbstp
cmp
or
sbbl
or
dec
call
add
and
jge
dec
sbb
add
push
cmp
dec
lock
jne
test
push
pop
push
jge
subb
popl
out
inc
cs
movsl
or
rcrl
inc
pusha
cld
sbb
rcll
divb
in
mov
popf
das
pop
cmp
cltd
je
jmp
lret
sbb
mov
pop
in
arpl
inc
mov
loope
adc
or
iret
in
push
or
mov
mov
pop
ss
fcmovnb
bound
mov
cli
fsubr
add
mov
mov
cmpsl
insb
xchg
fimuls
pop
push
pop
inc
mov
das
sbb
into
xchg
int
mov
mov
sbb
in
fwait
sbb
lea
leave
mov
push
cmp
sahf
mov
push
sbb
test
cmpsl
jmp
std
cmp
subl
jecxz
out
data16
mov
cmp
xchg
out
fwait
lahf
inc
and
fcompp
mov
outsl
les
jb
xchg
test
mov
mov
das
mov
pop
pop
rorl
loopne
pop
fimuls
lret
notb
push
lods
nop
jo
and
iret
cmp
hlt
int3
pop
adc
stc
das
push
sarl
mov
lcall
loop
or
mov
rcrb
jns
js
addr16
ret
out
clc
xor
lret
in
xlat
cli
loop
jle
loope
icebp
mov
add
je
cmp
lock
shrb
fwait
jnp
fninit
and
sti
bound
dec
popa
sbb
mov
xchg
ficoms
shrb
push
lods
pop
movsb
or
cmc
dec
int3
xor
cmpsl
shrl
xor
rcl
mov
cmp
sti
repz
cmp
add
or
inc
inc
xor
loop
sub
jo
xor
cmpsb
pop
sub
xchg
push
jecxz
mov
gs
pop
insl
mov
les
lock
icebp
sbb
xlat
aaa
sbb
in
adc
xchg
push
repnz
add
in
cltd
ss
loope
jno
cs
scas
push
or
js
ret
enter
jge
insb
mov
icebp
adc
clc
lods
iret
mov
jl
jbe
xor
mov
pop
arpl
cmp
and
orl
stos
pop
es
pop
pop
and
test
inc
inc
fildl
out
insb
mov
in
mov
and
dec
xchg
es
pop
nop
stos
cwtl
sbb
movsb
cld
ds
ret
fisubs
int
pushf
dec
sbb
xor
xchg
popf
sbb
push
imul
jecxz
fs
insl
stc
cmp
lock
ljmp
jge
loopne
cli
popf
ret
push
testl
cmp
imul
sbb
gs
adc
adc
inc
mov
cwtl
jnp
iret
mov
test
sbb
je
in
jp
sub
pusha
int
push
hlt
pop
sahf
sahf
jb
iret
xor
stc
xor
icebp
frstor
push
jae
shlb
sbb
jne
das
push
fs
aad
inc
push
enter
mov
jns
and
adc
pop
cmp
pop
sub
xchg
lock
mov
stc
mov
pushl
jl
fwait
dec
sbb
jge
lahf
aam
dec
add
fxch
mov
dec
dec
fistpl
add
xchg
sub
adc
push
push
insl
or
mov
inc
push
sub
mov
mov
and
xchg
jno
and
mov
adc
cmp
jno
stos
xor
jge
leave
xchg
mov
cs
sbb
loope
adc
dec
or
mov
xor
mov
sbb
bound
rolb
lds
cmp
dec
and
xchg
add
inc
ss
shl
adc
dec
xchg
mov
xchg
jae
xchg
xor
jno
dec
add
cltd
pop
push
xchg
pop
gs
pop
call
cmpsl
in
mov
or
cli
addr16
mov
andl
mov
imul
in
outsl
push
adc
xchg
js
xchg
or
addl
loope
sbb
jge
shlb
pop
outsl
xor
inc
mov
pop
sbb
js
imul
mov
cwtl
enter
pop
sahf
or
std
mov
test
xchg
cwtl
jne
dec
std
jnp
push
pop
cwtl
fistpl
or
jo
sti
cmp
stc
dec
push
lcall
jae
add
cltd
cmp
repnz
adc
rcll
cmp
sbbl
fildll
insl
inc
int
testb
ds
leave
inc
ret
jo
int3
fstpl
loope
push
mov
sub
inc
inc
dec
xor
arpl
mov
ficomps
inc
push
mov
push
push
sub
cmp
je
mov
or
push
mov
enter
xor
test
pmullw
stos
mov
cmp
sahf
mov
loop
adc
cmc
addr16
lds
cmp
push
idivb
dec
mov
mov
add
sbb
cmpl
ds
push
xchg
jo
js,pt
inc
inc
cmpsb
iret
xor
xchg
out
test
in
ret
ficomps
jge
popa
push
mov
adc
or
pop
scas
inc
jmp
adc
mov
sub
jns
test
into
into
into
arpl
popf
insb
push
dec
sub
stos
pop
push
fisubrs
or
and
push
stos
mov
icebp
mov
jmp
cmp
mulb
test
lret
leave
xchg
int3
mov
dec
jns
inc
cmp
in
imul
iret
int3
jp
xor
sti
jne
mov
sub
and
sbb
outsb
or
xor
cmp
ja
inc
inc
dec
dec
mov
xor
cli
mov
pop
mov
cmp
arpl
fwait
xchg
jecxz
and
addl
mov
push
add
cltd
xor
or
fisubrs
or
cmp
push
out
das
xor
sbb
xchg
mov
mov
divl
pop
add
add
in
cwtl
mov
cmp
and
cmp
call
sahf
sbb
sub
jo
push
lret
or
mov
mov
pop
mov
push
call
mov
xchg
lahf
shll
retw
xchg
xor
outsl
pop
inc
or
rep
and
scas
mov
repz
stc
sub
cmc
insb
in
stc
pusha
and
roll
jecxz
addps
jae
add
pusha
jmp
sub
xchg
rcll
mov
rcrl
cmp
imul
xchg
jmp
push
js
inc
rclb
cmp
xchg
and
mov
cmp
cmc
cmp
xchg
sarb
jno
std
jns
bound
push
loop
push
jne
jmp
or
fcoms
jl
jns
out
pop
int3
mov
pop
call
ds
push
or
push
mov
cmp
mov
mov
lea
jnp
xchg
mov
leave
inc
jbe
enter
push
orl
pop
je
and
insl
xlat
cwtl
and
cltd
imul
dec
arpl
add
xor
and
add
and
sahf
enter
cli
dec
mov
dec
mov
xchg
push
sarb
sahf
xchg
adc
adc
test
cmp
xchg
push
and
push
dec
psllw
ret
out
jbe
repz
movsb
jnp
mov
lcall
add
aas
jle
inc
outsb
xor
adc
push
jle
mov
sti
orb
inc
into
loopne
mov
adc
sarl
shll
push
sub
stos
push
dec
mov
aaa
aad
rcl
data16
shrb
loopne
adc
jo
loope
pop
cld
inc
jle
mov
push
test
cmpsb
or
mov
jmp
push
fcomps
push
and
xor
ror
into
jb
test
jg
sbb
daa
out
popa
sbb
scas
xchg
icebp
sbb
loop
sbb
sbb
jmp
stc
and
int3
sbb
rcl
or
sub
enter
inc
mov
inc
push
aam
push
mov
sub
ret
sub
cwtl
aas
addl
inc
dec
add
dec
inc
cmpsb
bound
push
mov
addb
push
jb
mov
sbb
das
push
data16
aad
shlb
mov
hlt
pusha
xor
pop
mov
dec
xchg
jmp
shl
xchg
in
fcos
push
aaa
test
mov
and
pop
insb
outsl
pop
int
lea
push
icebp
dec
jmp
mov
loope
fistl
sahf
add
xchg
sub
out
in
scas
inc
sub
mov
or
add
js
mov
stos
push
enter
pop
sbb
addl
mov
lcall
cmp
mov
stc
jl
push
sti
sub
mov
pop
das
pushf
mov
pop
adc
sbb
lds
dec
ret
hlt
divb
mov
outsb
add
or
fnsave
inc
orl
push
std
and
jns,pt
and
xchg
pop
mov
pushf
out
xchg
push
test
add
movsl
inc
jle
or
mov
js
add
xorb
xchg
add
bound
inc
or
leave
sub
mov
jp
in
bound
and
movsb
adc
jns
jnp
mov
outsb
dec
pop
mov
mov
jnp
clc
sub
add
adc
movsb
push
loopne
out
pushf
xorb
mov
xor
outsb
inc
insb
lds
fstl
sbb
pushf
fists
fst
sbb
fldl
js
je
out
rorl
dec
adc
shlb
lds
in
iret
jbe
mov
pop
int
in
mov
pop
shrl
aam
or
sub
push
dec
mov
lcall
mov
aaa
imul
cmc
push
imul
dec
out
push
inc
aaa
clc
xor
inc
sub
xor
es
repz
mov
sub
repz
shll
xchg
adc
or
sbb
inc
addl
rcrb
adc
mov
orl
aam
popf
mov
jmp
mov
or
mov
and
pop
sbb
pop
inc
jmp
cmovnp
lret
xchg
jg
andl
inc
inc
outsl
jnp
sub
pop
mov
nop
sbb
mov
xchg
jg
mov
stos
dec
inc
out
mov
js
push
jb
je
pushf
inc
scas
leave
lret
jecxz
aad
aaa
andl
rol
movsb
insb
in
bnd
orl
jmp
shll
test
jno
pop
xor
cmp
cwtl
xchg
sbb
aam
dec
scas
push
cmp
sbb
icebp
imul
ds
sub
test
jle
mov
scas
inc
inc
test
js
push
fcom
cmp
pop
mov
jno
mov
pop
mov
push
mov
jno
add
imul
jns
push
ret
div
jbe
sbb
sbb
mov
daa
test
dec
out
cltd
pop
ret
icebp
inc
push
movntq
dec
lahf
rcrl
and
lret
pop
xchg
mov
in
sahf
movsb
fldenv
rcl
fstl
mov
or
cmp
pop
or
scas
push
mov
mov
lcall
lods
lret
fsubs
sarb
pop
sbb
xor
scas
push
and
push
dec
push
pop
je
fstl
dec
out
add
pop
loopne
sbb
rorl
sarb
sbb
in
scas
popf
fwait
lahf
adc
push
or
aam
mov
inc
mov
lds
pushf
sarl
outsb
nop
aaa
out
mov
pop
push
bound
inc
out
pop
sub
ljmp
mov
daa
mov
jl
fs
sub
int
mov
xor
sbb
jmp
jecxz
sti
push
cmp
fs
xchg
sub
clc
bnd
push
xchg
push
push
xlat
pop
call
int3
mov
sti
stc
inc
nop
mov
push
xchg
mov
mov
pop
jmp
dec
and
cmpsl
int3
jno
mov
mov
out
lock
lret
iret
dec
mov
arpl
in
cmc
es
push
jb
enter
jbe
push
dec
push
sahf
xorb
dec
sub
push
xlat
add
fxch
jns
mov
mov
jns
out
xchg
rcrb
add
gs
mov
pop
test
gs
dec
pop
jle
mov
shr
mov
cmpsl
jae
icebp
xchg
xchg
pop
je
jne
dec
mul
cmp
fildll
loope
in
pop
out
sbb
test
xor
pop
jne
mov
xor
sub
xor
adc
iret
adc
jle
cmpsl
dec
mov
clc
cmp
ja
push
lock
mov
jne
cmp
aaa
cmpsl
mov
ret
inc
sti
orb
test
js
add
and
and
test
cmp
cmpsl
xor
push
lcall
lods
in
push
popa
pop
outsl
dec
js
repnz
xor
push
mov
std
add
add
cmpsl
jno
mov
imul
mov
lods
leave
mov
mov
push
mov
arpl
scas
fwait
pop
adc
out
scas
test
in
cs
sbb
mov
daa
sub
cld
mov
fwait
add
add
pop
in
sbb
loopne
mov
dec
push
mov
add
insl
and
ret
adc
aaa
test
mov
cmpsb
inc
call
jmp
mov
insl
aam
insl
jge
or
or
adc
enter
sub
out
cmpsb
adc
cs
iret
mov
sub
movsl
sahf
loop
lret
cmc
mov
ret
test
enter
popl
ljmp
fcompl
cmp
js
ljmp
adc
jno
sbb
jnp
pop
pop
jg
ss
cmp
mov
rclb
push
add
negl
cmp
mov
ret
out
pop
addl
xor
dec
sub
fwait
daa
xchg
test
lahf
xor
jbe
mov
mov
jmp
leave
push
mov
repnz
sub
adc
outsb
inc
xchg
xor
fnstsw
sub
cmp
mov
mov
rdtsc
pop
jns
or
stos
popa
xor
mov
xchg
sub
xor
popa
jp
sub
cmp
mov
xchg
mov
sub
dec
lret
xor
xchg
xor
mov
pusha
jg
add
movsl
jp
int
std
pop
sub
mov
aad
sub
xchg
inc
insb
lock
movsb
cmp
in
fiadds
and
icebp
and
jo
or
xor
mov
cmc
out
cltd
sbb
add
loop
add
sbb
xchg
dec
fwait
mov
loop
int
gs
les
std
dec
or
js
mov
test
push
mov
repnz
xchg
xor
outsb
push
lahf
mov
jge
addr16
dec
mov
into
inc
mov
dec
cltd
push
pop
inc
or
xchg
cmp
shll
test
or
cltd
arpl
pop
push
movsb
test
add
call
jge
jecxz
jb
pushf
mov
test
cmc
and
mov
mov
lods
xchg
xchg
push
add
xchg
in
out
imul
inc
inc
stos
negl
and
push
rcrl
in
mov
adc
fcmovb
std
scas
xor
or
movsl
xor
mov
jne
cli
cld
shll
mov
sahf
mov
sbb
xchg
mov
add
push
pop
daa
mov
sub
jmp
ret
ja
xor
test
or
sub
shlb
arpl
xchg
cli
andnps
pop
shlb
add
cltd
pop
mov
repz
scas
pop
arpl
or
lcall
lcall
jl
js
sbb
mov
ror
shl
iret
outsl
js
push
or
aas
pcmpeqd
push
xor
popa
cmp
outsb
out
inc
int
lock
out
les
mov
pop
dec
mov
adc
jbe
outsl
and
and
xchg
repnz
sub
adc
rol
fwait
jge
gs
fiadds
fwait
insl
pop
aam
jnp
mov
je
loop
inc
rcrb
movsl
xchg
sbb
mov
nop
xchg
pop
iret
mov
sbb
add
fbld
cmp
mov
int3
sbb
into
stc
das
out
push
inc
sub
inc
or
out
aaa
sbb
inc
popf
add
add
xor
ltr
ss
inc
je
lods
dec
adc
xchg
rorb
xchg
lea
xlat
inc
or
pop
xor
sub
cmp
mov
adc
dec
jg
xor
negb
mov
mov
sti
jne
mov
icebp
imul
ss
insl
sbb
loop
lods
scas
push
lret
cmc
or
sub
sarl
iret
imul
and
inc
les
insl
sarl
mov
mov
dec
push
test
pop
out
fimull
in
cli
push
mov
mov
movsb
xorb
lea
inc
sub
divb
loop
inc
shlb
cmc
push
add
call
fdivr
les
popa
jo
fwait
jmp
dec
sbb
fmuls
aaa
cmp
jns
movsl
xor
sbb
fnclex
sub
fistpl
rol
dec
xor
mov
jo
jge
mov
add
loop
cmpsl
pusha
cmp
mov
xchg
das
fwait
adc
ffree
adc
lcall
inc
insl
fdivr
and
sbbl
and
inc
sub
pop
xor
movsb
lds
or
sub
mov
leave
mov
or
inc
dec
repz
cmpsb
cmp
cmp
in
fs
adc
and
fimuls
es
push
mov
loopne
ljmp
lods
mov
hlt
clc
loope
lret
adc
jp
pushf
push
xchg
adc
out
lds
push
mov
cmp
gs
adc
push
push
je
addr16
sub
jge
pop
jae
push
daa
push
inc
cmpsb
in
sub
pop
add
xchg
dec
mov
clc
mov
inc
cld
fld
outsl
jae
gs
mov
adc
mov
mov
inc
js
dec
push
mov
test
mov
loope
sub
test
adc
sub
lock
adc
inc
push
movsl
jno
test
arpl
std
push
push
insl
add
lret
bound
push
jmp
fldt
mov
jbe
or
data16
sub
popf
mov
out
mov
bound
pop
cmp
xchg
mov
or
in
fdivl
popf
mov
jge
cmp
movsl
or
xor
arpl
and
xorb
add
int3
je
stos
call
ret
cmp
lea
lea
jmp
rolb
testl
jmp
iret
jbe
xchg
jbe
push
lcall
in
or
adc
sbb
xchg
push
pop
sub
mov
sub
into
leave
repz
cmp
push
jno
mov
jns
lea
dec
ss
inc
mov
mov
loope
mov
fdivs
push
pop
cmc
leave
jo
mov
or
jno
pop
pop
mov
mov
adc
mov
jl
cli
subb
fistps
jg
jb
mov
out
iret
adc
push
dec
iret
jns
lahf
scas
push
insl
fbstp
aas
out
push
push
gs
daa
pop
loopne
pop
sub
dec
sub
arpl
dec
jnp
pop
imul
mov
add
or
jecxz
arpl
push
pop
mov
xchg
lock
xorl
in
cmp
sbb
dec
clc
xor
mov
adc
in
add
pop
jnp
push
fldt
lea
lahf
fdivp
dec
mov
movsb
mov
sbb
jg
mov
and
outsb
inc
daa
ret
xchg
push
inc
push
aam
jnp
gs
inc
push
jae
mov
jmp
sbb
clc
ljmp
loopne
loopne
cmp
xchg
push
gs
fwait
ss
add
sub
sub
imul
pop
or
insl
add
sbb
xor
dec
dec
mov
test
push
cmc
int
outsb
mov
push
pusha
jge
xchg
mov
lods
push
push
fsub
xchg
clc
movsl
cwtl
aam
test
test
jnp
fs
or
dec
gs
fists
jb
dec
inc
out
push
lcall
int
xor
in
ljmp
jmp
sub
mov
sbb
adc
stc
dec
inc
fnstsw
cmp
jb
stos
or
xor
or
mov
add
fwait
mov
cwtd
mov
cltd
jmp
lods
add
jae
jle
addl
pop
jno
cmp
fwait
cmpsb
aaa
and
cltd
outsl
adc
ljmp
fs
mov
push
mov
gs
arpl
aas
outsl
daa
cmp
ja
int
sbb
jb
and
pop
push
call
mov
int
cs
pushf
push
cmp
mov
mov
jg,pn
add
leave
movsl
xor
dec
mov
mov
add
fstpt
push
fs
dec
movsl
dec
dec
mov
shll
test
push
or
sub
adc
xchg
inc
lahf
addb
dec
not
sbb
popf
js
iret
sarl
push
mov
imulb
es
fwait
popf
stos
add
sub
inc
jg
outsb
push
sti
loopne
les
test
ss
nop
pop
cmp
test
inc
mov
outsb
fisubl
ret
cld
arpl
xor
sub
ret
add
cmpl
cmpsb
lods
aam
std
sbb
ss
sbbb
sub
mov
xorl
pop
out
add
add
or
sub
and
jg
movsb
loope
lea
ja
das
sub
loope
and
fsqrt
subl
adc
nop
addr16
pop
xchg
cmp
mov
out
dec
cmp
fdivs
inc
nop
jg
mov
fld
inc
push
jecxz
mov
and
jbe
lea
push
cmp
div
imul
jnp
sub
xor
sbb
out
cmp
mov
dec
scas
jp
jg
add
arpl
notl
dec
dec
maxps
je
mov
add
data16
pop
jmp
sbb
mov
and
mov
mov
push
mov
daa
test
mov
popa
xchg
test
pop
mov
leave
test
adc
sub
inc
loop
cs
xchg
ss
add
jp
mov
arpl
jno
fsubs
sbbb
fisttps
or
stc
test
clc
js
or
inc
fwait
sbb
xor
or
out
cld
sub
not
ja
sub
pushf
jo
mov
leave
ffree
addr16
pusha
adc
shr
ljmp
sbb
jno
cmp
daa
jae
ss
sbb
sub
add
jg
mov
dec
nop
inc
notl
loopne
int
outsb
add
ficomps
incl
cs
pop
or
lahf
mov
mov
mov
fcoms
in
outsl
ret
cmpsl
sbb
filds
imul
sbb
jbe
dec
subl
pop
int
xor
addl
push
push
mov
dec
cmc
dec
dec
xchg
lret
mulb
loope
pop
mov
and
stos
jae
gs
cmp
pushf
inc
mov
pop
or
gs
ja
pushf
and
pop
pushf
out
xchg
sub
xchg
mov
es
dec
cld
or
cmpsb
dec
lods
shrb
int3
lods
xchg
imul
inc
dec
cli
pop
aas
cmp
jle
rclb
cmp
jmp
jge
xor
ljmp
subb
icebp
call
test
popf
xchg
testb
xchg
insl
test
outsb
fcompl
movsl
aad
mov
xchg
repz
jmp
adc
mov
mov
xchg
or
jns
in
into
and
aad
fwait
clc
fisttps
aad
hlt
enter
ljmp
and
xorl
push
lret
mov
sbb
xchg
mov
xchg
aaa
loope
icebp
repz
fsts
bound
pop
jmp
bound
cmp
mov
imul
push
inc
lret
sub
sahf
xchg
cld
xchg
inc
inc
cli
incb
test
cmc
push
lcall
call
enter
jb
xor
sub
pop
and
dec
sub
jl
mov
push
jo
cmp
rcll
adc
cmp
adc
das
pop
pop
mov
mov
into
test
inc
mov
mov
pop
out
inc
int3
add
and
outsb
inc
sub
push
sbb
push
sbb
ja
xor
mov
in
cmp
testb
push
inc
bound
push
test
into
cli
shll
mov
push
jmp
mov
jmp
pop
fiaddl
idivl
sbb
mov
repz
and
jecxz
out
adc
pop
add
mov
sarb
xchg
jae
sbb
inc
enter
test
mov
jl
xor
lods
mov
mov
xor
cld
mov
pop
loopne
lahf
ds
or
dec
sbb
lea
nop
repz
test
mov
dec
mov
popa
adc
and
aas
stos
cmp
test
mov
aam
cmp
add
dec
clc
sti
cmpsb
outsl
or
and
pop
jecxz
sbb
xchg
cmp
cs
push
popa
cli
mov
adc
xchg
punpcklwd
hlt
jnp
push
jns
cmp
popf
mov
inc
out
cltd
dec
sar
call
cmpsl
movsb
mov
push
and
jl
inc
daa
bound
fucomi
jne
mov
out
int3
mov
mov
imul
sub
sub
int
jns
ds
xchg
push
call
into
mov
mov
mov
dec
call
aam
aaa
popa
bound
faddl
or
xchg
sbb
icebp
xor
std
aad
or
jecxz
rclb
inc
lock
mov
inc
mov
jne
jp
addr16
inc
fimuls
push
push
test
int3
or
add
faddl
rorb
pop
add
inc
mov
xchg
aaa
ja
push
dec
push
dec
and
idivl
es
mov
pushf
in
xchg
xchg
cmp
lcall
or
popa
aas
sti
popa
ss
insb
xor
out
jne
sbb
and
pop
dec
in
divb
add
bound
sub
adc
mov
sbb
jno
repnz
sub
xchg
lods
mov
dec
dec
push
sub
movsb
pop
jg
shrl
inc
in
and
out
pop
fs
mov
xchg
scas
mov
mov
adc
mov
cmp
inc
int3
stc
loop
xchg
loopne
loop
test
sbb
push
and
int
fists
mov
inc
sbb
dec
bound
jecxz
xor
mov
bound
outsb
pushf
pop
pop
and
jnp
outsl
and
sbb
imull
and
ds
mov
lret
loopne
jmp
nop
shrl
mov
and
and
sbb
sbb
dec
mov
cs
fidivrs
sarb
mov
int
lahf
adc
std
insl
push
jecxz
jnp
lcall
fsincos
outsl
add
push
xor
aad
adc
das
mov
adc
jmp
outsl
movsb
rorl
andb
pusha
inc
insb
fmull
pop
je
fisubs
xor
nop
xor
shlb
lods
fld1
sbb
outsl
loope
and
movsl
cld
je
out
adc
pop
cmp
nop
rorl
out
test
adc
and
jle
cmp
scas
inc
pop
cmp
mov
scas
sub
and
aad
addl
idivb
cwtl
jbe
and
lock
sarl
into
cs
sahf
jl
jns
inc
mov
subl
imul
adcb
iret
mov
mov
push
push
pushf
push
call
repz
movsl
mov
fiaddl
stos
std
addr16
sub
cmpsb
fsubrp
popf
lods
addr16
hlt
out
jnp
push
cltd
mov
addr16
push
cmpsb
das
repnz
dec
imul
and
ds
mov
das
hlt
pop
mov
sub
xchg
mov
lret
ds
xlat
aaa
push
push
xor
int
in
xor
iret
dec
loopne,pt
pop
shlb
mov
divb
cmp
xor
mov
sbb
cltd
fists
push
jae
add
sbb
jecxz
adc
cmp
sbbb
sbb
mov
loop
scas
xor
imul
sbb
in
dec
and
scas
rol
inc
jl
iret
pop
add
fs
xor
inc
subb
dec
add
adc
inc
idivb
push
lret
mov
mov
ljmp
les
sub
inc
xrelease
sub
arpl
dec
int
lcall
js
daa
cmp
mov
clc
loope
loop
adc
and
jb
ss
mulb
mov
sbbb
dec
xlat
pop
xlat
fisubl
cli
ljmp
dec
repz
rclb
push
jne
and
mov
movsb
xor
int
test
into
xchg
movsl
jo
in
jo
xchg
xor
sbb
jl
sbb
xchg
andl
xchg
ja
aas
arpl
inc
pop
clc
mov
pop
imul
pop
or
mov
out
call
addl
xchg
ret
mov
dec
lea
cwtl
les
cmpsb
xchg
xchg
call
xlat
xchg
jne
pop
pop
into
push
mov
stos
mov
cmp
lods
aam
jge
pop
push
pop
imul
ss
int3
cli
outsb
les
mov
cmc
and
and
cmpsb
aam
mov
cvtps2pd
div
movl
xor
jae
and
cli
in
stc
gs
fimuls
call
mov
and
sub
pop
dec
pop
in
jg
enter
xchg
jno
shlb
jae
insl
lods
stc
ss
cmc
adc
cmp
xchg
xor
or
push
fidivl
stc
fsubl
mov
jmp
xchg
push
lods
repnz
or
repnz
leave
mov
les
hlt
dec
push
xchg
sarb
pop
sbb
mov
push
xor
idiv
push
pop
sub
add
lret
sbb
cwtl
push
or
push
and
inc
scas
movsb
sub
inc
movsl
or
push
xchg
dec
xor
mov
adc
movsl
in
scas
lock
jbe
stos
mov
mov
push
add
mov
mov
xor
push
je,pn
gs
mov
hlt
jnp
push
sahf
test
lret
rep
sbb
lock
addr16
aas
push
inc
dec
xchg
push
mov
pushf
xor
inc
cmp
imul
dec
xor
mov
pop
cmc
imul
xor
mov
push
pusha
add
mov
mov
popf
xchg
xchg
int3
aam
jnp
shlb
xchg
rolb
dec
push
jp
jbe
push
pop
add
pop
shld
jo
fbld
std
dec
popf
out
mov
push
cmp
jp
mov
fistpll
fcompl
mov
sarb
scas
mov
shlb
popl
mov
push
add
pop
std
cmc
ljmp
test
jno
jg
in
in
inc
push
push
dec
or
xchg
cmc
adc
mov
es
mov
xchg
cld
adc
cmpb
lds
jge
out
lods
call
call
mov
xchg
cs
sub
xor
sbb
sub
lcall
data16
pop
cmp
mov
rcrb
sub
lahf
idivb
in
inc
rorl
fcmovne
inc
mov
xor
es
push
push
xor
roll
pop
and
addr16
mov
lods
jmp
cmp
les
ret
xor
les
sar
pop
neg
cltd
lahf
pop
es
mov
stc
add
rclb
int3
js
mov
movsl
jecxz
gs
mov
jge
jp
push
push
push
iret
imul
mov
jb
or
nop
mov
es
lods
mov
sbb
fmuls
or
cmc
inc
out
inc
insb
notl
add
test
insb
mov
sbb
out
lret
mov
jne
push
sbb
xor
addr16
in
mov
jo
add
jg
and
jecxz
fcoml
mov
and
mov
inc
and
movsl
mov
mov
xchg
mov
mov
outsl
test
dec
roll
xchg
test
movsl
xchg
sbb
mov
in
sbb
jae
jp
movsl
orb
mov
jo
pop
or
sbb
inc
push
sbbb
call
xor
xor
movsl
sarl
out
or
push
mov
sbb
mov
mov
daa
loopne
in
xor
in
push
enter
bnd
xchg
pop
xchg
add
hlt
mov
pop
inc
mov
sbb
ret
loopne
and
ret
bound
jo
int3
mov
push
jg
push
cmp
fildll
fidivrs
jecxz
jg
lahf
data16
mov
rclb
int
jo
add
pop
es
and
mov
fwait
and
mov
xchg
mov
pop
inc
mov
nop
and
popa
sub
xor
gs
gs
ja
pop
jg
or
sub
xchg
xchg
push
push
dec
imul
inc
jne
sub
mov
mov
dec
add
aaa
btr
mov
fnsave
ror
fwait
pop
dec
divl
test
addr16
sub
or
or
rorl
push
leave
loop
mov
and
xchg
push
sub
xor
pmaxub
stc
or
repnz
xchg
mov
mov
lea
cs
add
push
pushf
cmpsb
xchg
fsts
sub
mov
lock
cmpsl
mov
xchg
in
je
mov
dec
pop
cld
imul
sub
dec
pop
loopne
cmpsl
dec
repnz
push
cltd
test
leave
fdivrl
leave
lds
decb
mov
roll
frstor
ret
mov
sarl
add
xorl
lea
das
push
jle
in
loope
pop
jnp
push
aam
fisttpll
arpl
stos
insl
cmp
dec
scas
pushf
cli
inc
in
in
aas
cmp
xor
sti
push
sbb
dec
inc
das
adc
stc
push
xchg
mov
call
add
pop
xor
lret
scas
mov
or
xchg
dec
mov
stc
out
jnp
jne
lds
push
insl
sub
xchg
cwtl
arpl
mov
mov
jmp
jno
xor
ss
iret
cmp
aam
enter
add
clc
push
and
add
push
sub
cmpsl
popa
push
pop
xor
sbb
out
call
notb
dec
mov
aas
dec
enter
and
ret
je
dec
gs
outsl
pop
and
push
es
repz
test
jg
mov
dec
mov
cmc
pushf
sub
xchg
ret
enter
sahf
cmpsb
insl
sbbb
hlt
jno
out
cmp
xchg
push
bound
iret
ffree
cmp
cmp
mov
out
loope
movsl
popf
sbb
lret
push
lods
push
push
pop
std
xchg
in
ret
stos
pop
jb
sbb
mov
push
dec
leave
mov
cmp
scas
cmp
and
add
test
rcrl
fidivl
arpl
mov
out
data16
pop
cli
int
and
fdivrp
stos
mov
push
push
pop
imul
add
sbb
or
cmpsl
orb
int3
mov
outsl
je
add
jnp
lret
imul
inc
iret
add
add
pop
adcb
fnsave
xchg
jnp
insb
xor
roll
call
or
inc
dec
mov
sub
mov
pop
xchg
outsl
clc
fwait
jl
jge
in
mov
test
xchg
add
dec
fnstcw
cs
mov
sbbb
fldcw
pushf
stos
leave
movsb
inc
pop
xchg
xor
cmp
xchg
and
test
xchg
cmpsl
mov
inc
ss
xchg
sub
cmp
or
mov
dec
jb
mov
outsb
movsb
cs
add
lahf
pop
decl
in
fidivrs
das
data16
mov
imul
xor
in
cwtl
push
incl
sbbl
pop
or
jp
scas
repnz
ljmp
push
pop
sbb
dec
jl
xchg
push
inc
cmpsb
lock
adc
xchg
lock
or
dec
pop
mov
ja
into
push
insb
int3
push
pop
and
icebp
inc
incb
jecxz
or
add
addr16
stos
fnstsw
push
jmp
fidivl
mov
jns
stc
dec
outsb
cmpsb
sbb
sahf
and
mov
jae
popa
add
addr16
xchg
in
sub
sub
pop
fstpl
or
lcall
movsl
insl
popf
inc
cmp
inc
add
cmc
int3
lods
mov
xchg
out
push
adcb
out
stos
adc
jno
imulb
pop
aam
cmp
lret
leave
stos
nop
or
into
sbb
test
cwtl
adc
pop
lcall
push
mov
jg
pop
xlat
das
mov
push
pusha
aaa
movsb
push
pop
xchg
sbbl
sbb
add
add
mov
test
cmp
jnp
add
ss
nop
ror
pop
loope
shll
stos
shr
outsb
rcll
pop
push
add
mov
pushl
push
xchg
mov
push
ret
push
int
push
xor
inc
shlb
sub
cwtl
sub
fcoml
arpl
outsl
add
iret
mov
leave
inc
jb
adc
outsl
adc
lea
cs
imul
or
push
jnp
cmp
stos
shlb
push
shrl
sbb
loopne
cmc
ja
push
stc
popa
add
cwtl
add
dec
mov
out
addr16
mov
sub
mov
sbbl
push
pop
jbe
and
addr16
push
add
push
dec
in
jle
in
aaa
sti
jbe
test
sub
xor
scas
sub
pop
bound
repnz
pop
int3
jb
add
imul
sub
mov
jle
ljmp
pop
sbb
push
leave
divl
add
scas
loope
fldt
cltd
inc
mov
roll
arpl
sbb
cmp
and
or
mov
loopne
dec
aas
fsubrl
xor
adc
and
xchg
sbb
cmp
subps
mov
ja
in
test
iret
test
mov
out
sub
mov
outsb
cli
cmp
in
adc
xchg
inc
mov
insb
notb
in
dec
jle
sbb
rcll
pop
push
xor
in
push
mov
xchg
repz
and
push
xorl
aas
add
mov
js
add
loope
daa
rcll
pop
test
sbb
jo
pop
lret
stos
sbb
jle
test
jg
lcall
decl
popf
jo
dec
sarl
sbb
xchg
mov
xor
fnsave
sub
xchg
das
shrb
loope
sbb
or
pushf
mov
loopne
xchg
mov
xor
arpl
fisubl
cmp
out
and
adc
cltd
dec
outsl
add
sub
mov
jbe
shl
xchg
or
std
mov
jo
lahf
lods
sbb
add
push
ljmp
push
jg
js
stos
fiaddl
xor
jno
scas
and
sub
xchg
dec
dec
sbb
es
lcall
jmp
adc
or
ljmp
push
mov
sbb
push
lret
cltd
xchg
mov
leave
out
sar
sbb
movsb
ret
ja
mov
ffree
push
outsl
inc
mov
leave
je
or
pop
inc
ss
movsl
leave
sbb
add
addl
xchg
adc
mov
and
inc
repz
or
sub
out
cltd
repnz
js
out
pop
fdivs
pop
mov
stos
mov
sti
or
xor
jae
sbb
repnz
cmp
add
mov
movsb
xor
xchg
add
inc
sbb
shrl
dec
xchg
imul
mov
pop
push
jo
test
mov
gs
call
test
mov
jle
shlb
sar
dec
testb
loop
sub
in
cli
aaa
mov
arpl
insb
imul
mov
jmp
pop
aas
not
xchg
or
adc
inc
aaa
imul
xorl
pop
fldenv
jle
push
rep
mov
ss
push
ffreep
notb
sbb
mov
dec
mov
inc
mov
test
stc
mov
and
aas
or
popa
fidivrl
jnp
xchg
cmp
ja
movsl
xchg
mov
mov
inc
adc
lahf
cmpsb
adc
inc
aaa
in
mov
xchg
shlb
adc
mov
ss
call
cmpsb
sbb
cmp
outsb
jnp
jmp
and
movsb
mov
cmp
aaa
fs
sub
pop
inc
call
lcall
pushf
lcall
mov
mov
mov
loope
or
sbb
addl
fs
jge
scas
pop
push
and
ret
lock
lret
push
add
mov
inc
clc
out
mov
loop
adc
mov
out
pop
mov
popa
sti
push
xor
movsl
je
mov
cli
nop
sub
repnz
jns
scas
pop
xchg
imul
lcall
idivl
cmp
cwtl
fstpt
pop
mov
pop
jne
loopne
mov
inc
and
pop
pop
jne
mov
ja
out
lea
cmpl
les
xchg
test
lods
and
pop
sub
push
into
or
mov
jns
cli
pop
addr16
cltd
jb
jge
pop
mov
push
rorb
sbb
lds
pop
sbb
cmp
in
mov
stc
and
adc
cmc
or
les
mov
dec
sub
jp
rorb
dec
adc
pop
push
mov
lahf
in
add
xchg
xor
jne
mov
stos
and
fnstcw
divl
shll
or
jno
inc
rolb
fwait
push
lahf
xchg
jmp
adc
sti
add
cmovno
jae
mov
popa
pushf
push
pop
add
push
xor
jmp
daa
loop
fcomps
dec
es
test
outsb
andb
push
mov
jb
iret
lods
jmp
push
out
push
jae
and
ret
sub
fcomps
and
outsb
push
sbb
or
addr16
lds
push
fisttps
addr16
repnz
arpl
push
dec
mov
pop
fsubl
shl
xchg
in
lret
es
outsl
jns
into
adc
aas
scas
dec
and
fsubr
jo
jecxz
push
mov
xor
aam
pop
enter
enter
adc
dec
dec
or
jecxz
push
and
push
adc
call
mov
jmp
bound
cwtl
mov
nop
pop
mov
cmc
out
scas
scas
jnp
xlat
sti
aad
or
pop
ss
fmull
shll
fiaddl
sarb
dec
pushf
mov
sbb
push
call
sti
lea
pop
sahf
mov
les
jb
cmp
ror
or
ss
sti
sti
xchg
sbb
dec
test
les
dec
sub
pop
scas
fyl2xp1
sahf
test
xor
xchg
in
ljmp
enter
sub
enter
or
xchg
pop
ficompl
jbe
loopne
pop
fiaddl
mov
stos
sub
mov
fwait
aas
xor
stos
adc
push
mov
pusha
sub
jp
sbb
sub
cs
jae
or
stos
sub
mov
aas
jmp
sub
or
push
cltd
or
mov
cmp
or
aaa
lods
adc
push
into
test
mov
movl
hlt
rcl
pop
popf
adc
popf
lret
mov
mov
std
cmp
adc
cmp
jmp
es
mov
mov
mov
shl
out
loop
les
jb
push
dec
addr16
jnp
mov
or
iret
mov
mov
adc
adc
popf
rcl
daa
or
adc
xchg
mov
cmpsl
arpl
out
jns
cwtl
sub
pop
imul
sub
daa
push
pop
imul
adc
dec
aas
cmp
fsubrl
scas
and
sub
sahf
int
ret
nop
aam
aam
cwtl
ja
bsr
push
gs
sbb
loop
loopne
jo
pop
push
lds
jbe
das
loope
xor
imul
xor
push
insl
aad
movsb
push
and
arpl
pop
and
ds
js
repz
inc
popa
xchg
test
in
mov
lcall
mov
shl
aas
ja
imul
xchg
push
sbb
adc
sbb
shrl
push
adc
mov
stc
dec
mov
pop
sbb
testb
xor
out
xor
lret
out
jae
loop
enter
jge
mov
xor
jg
push
cld
movsb
pop
cld
movsl
jbe
pop
scas
mov
mov
stos
cmc
mov
xchg
nop
jne
sbb
pop
mov
les
xor
mov
mov
jle
xchg
movl
stc
mov
dec
pop
xchg
orb
push
mov
es
sub
mov
out
call
negb
fidivs
rol
jecxz
loop
std
insl
mov
ljmp
lahf
adc
jmp
push
cmpsl
adc
push
sbb
sarb
fdivs
or
fisttpll
jecxz
xchg
ror
mov
imul
movsb
pop
mov
push
outsl
cmp
add
popa
xchg
rolb
or
ljmp
mov
mov
mov
jl
repz
jne
sti
dec
movsb
in
mov
movsb
aad
and
xlat
adc
cmpsl
cmp
xor
insb
jo
sub
ret
xchg
push
stos
jns
cmp
inc
xor
xchg
mov
fisubrs
nop
mov
ds
sub
jl
add
subb
cmc
inc
jp
push
ja
cld
add
xchg
push
cmpsl
jno
jbe
mov
xchg
jns
dec
jle
mov
push
out
push
dec
sbb
mov
in
xlat
sub
mov
mov
sarl
lds
orb
aas
in
sti
out
cltd
jne
cmp
pop
insb
push
and
mov
pop
cmpsl
lcall
loopne
orb
xor
and
lods
mov
int
dec
test
jle
xor
div
call
es
jns
notb
adc
insb
adc
lahf
sbb
insl
jnp
aad
push
loopne
jcxz
daa
mov
out
fnsave
jae
loope
sub
mov
inc
jb
pop
pop
or
sub
out
daa
pop
and
or
in
jnp
and
push
imul
addr16
push
xchg
arpl
jns
pusha
lods
jmp
mov
lcall
rolb
popf
xor
xlat
paddsb
bound
or
enter
shl
data16
repz
enter
repz
pop
or
enter
mov
dec
arpl
mov
cmc
cmp
icebp
mov
in
or
sbb
roll
adc
dec
incl
adcb
jnp
mov
mov
xor
cli
xchg
ds
mov
push
loop
inc
adc
jge
aad
dec
pop
pop
or
mov
movsl
insb
lods
mov
rol
scas
jb
cmp
jle
cmpsb
dec
push
mov
testb
outsl
movl
jmp
cwtl
pop
cmp
or
lock
pusha
insl
lret
jmp
daa
mov
addr16
lret
ja
pop
and
lods
call
mov
fstpl
out
ja
mov
pop
mov
or
pop
mov
cmpsb
mov
loopne
mov
pop
push
call
cmc
nop
repnz
xchg
cmc
sbb
mov
insl
inc
jmp
cld
xor
sbb
mov
out
add
push
lds
movsb
arpl
test
mov
or
jns
lods
xchg
jne
jno
nop
out
test
cmp
jo
lea
loope
lret
addr16
push
fadds
cltd
and
push
sbb
pop
inc
adc
pop
test
mov
iret
mov
pop
pop
daa
mov
ds
ficompl
leave
scas
repnz
les
shl
inc
mov
sarb
enter
xchg
mov
cwtl
stc
cmpsl
sahf
xchg
ss
rcr
daa
sbb
movsl
jo
mov
lods
lods
mov
cltd
popl
add
xchg
cmp
pop
add
imul
jecxz
jns
xchg
nop
dec
insb
mov
mov
cwtl
sbb
mov
js
pop
dec
into
movsl
push
es
scas
cmp
cmpsl
dec
lret
jae
out
ds
or
imul
pusha
fildll
xchg
idivl
mov
dec
dec
es
rcrl
mov
jmp
xor
test
mov
lret
cmp
pop
imul
dec
aas
das
js
js
and
aad
fstps
int3
mov
adc
test
adc
sbb
push
inc
sti
add
idivl
addr16
mov
xor
xor
lock
icebp
pop
or
fisubrs
je
nop
cmp
lods
daa
outsb
mov
jmp
dec
push
ljmp
arpl
push
jns
cmp
cli
call
jl
and
nop
lret
mov
xchg
sub
fwait
sbb
push
jg
and
mov
cld
daa
stos
jl
xor
cmp
cltd
and
pop
jp
pop
iret
jae
out
out
out
clc
mov
jp
adc
jl
lahf
adc
push
mov
mov
loop
pop
jae
jns
sub
push
dec
lea
adc
inc
test
jmp
fwait
sbbl
test
lock
dec
push
jnp
mov
xor
lahf
ds
call
std
int
inc
jns
daa
mov
sbb
ret
test
jae
mov
add
cli
pop
out
push
xor
or
das
mov
shlb
push
cmpsb
xor
xor
nop
jnp
int
nop
pop
jge
fwait
jge
adc
pop
adc
mov
pop
and
out
cmpsb
nop
xchg
jo
add
clc
mov
adc
add
idivl
sbb
cmc
and
lock
gs
sub
stos
cltd
or
mov
lods
out
xor
lret
xchg
mov
gs
or
test
mov
call
adc
cld
mov
sbb
pop
mov
loope
insb
addb
outsb
or
mov
fwait
or
imul
push
inc
stos
jp
jne,pt
insl
xor
mov
cmpsb
movsb
cmp
jnp
jne
shlb
jne
push
sar
cmpsl
mul
or
shl
push
ret
mov
xchg
or
ret
push
jnp
jnp
sbb
scas
loope
mov
insb
daa
cs
into
push
jecxz
and
push
push
xchg
std
xchg
ds
fists
leave
add
mov
rcrb
ret
movsb
repnz
es
push
or
or
rol
addl
and
and
xchg
push
dec
sub
jmp
sbb
out
xchg
fistpll
mov
mov
gs
pop
ret
in
push
jb
inc
sbb
mov
push
das
aas
inc
test
loop
orl
outsl
mull
orb
jns
loope
pop
mov
push
cld
pop
xchg
clc
stos
in
out
sbb
aaa
arpl
iret
fldcw
shrl
out
xor
call
jae
lock
adc
lods
clc
scas
mov
cmpsb
xchg
outsb
icebp
mov
sahf
xor
les
pop
sub
lret
xchg
sub
insb
sbb
inc
push
aaa
push
pop
enter
clc
pop
aam
lahf
dec
pop
xchg
adc
iret
add
xor
test
pop
fcmovbe
xor
mov
ret
popf
mov
mov
outsb
mov
mov
popf
sub
sub
mov
dec
dec
fidivs
mov
ret
repnz
jnp
jbe
sahf
aam
mov
push
sub
loopne
mov
inc
out
pop
cmpsl
int3
aas
push
jle
popl
adc
jmp
xchg
ja
stos
fs
xchg
add
adc
push
je
out
clc
mov
mov
gs
imul
add
dec
pop
and
add
cmp
fiaddl
in
loopne
insb
mov
mov
inc
scas
mov
fmuls
push
sub
adc
je
test
xor
adc
jmp
xchg
sbb
pop
pop
test
cmp
cltd
adc
sti
sarl
xor
or
sbb
call
test
mov
fcoms
add
xor
movsb
inc
gs
jae
dec
adc
lea
icebp
mov
nop
mov
pop
mov
popa
sbb
add
lcall
repnz
lcall
stos
and
addl
xchg
mov
out
repz
pop
jnp
inc
mov
js
dec
out
add
out
mov
cmp
or
push
call
mov
adc
or
dec
outsb
outsb
js
adc
push
inc
cld
cmp
ljmp
mov
xor
movsl
jae
cmp
aaa
ss
loop
and
add
movsl
jmp
and
es
ds
mov
sbb
jnp
and
inc
popf
cld
aad
in
test
js
mov
adc
jb
pop
jbe
mov
popf
rolb
pop
push
arpl
pop
cld
dec
filds
test
addl
pop
clc
ljmp
dec
add
mov
sub
aam
cmpsb
es
ds
lock
mov
lds
inc
outsb
sbb
add
sarb
inc
or
pop
loope
mov
or
pop
in
cmpsb
xchg
mov
sar
sbb
jno
loopne
or
jnp
outsl
fwait
or
test
dec
je
inc
rclb
repnz
scas
sbbb
lea
add
mov
test
push
pop
jo
fldl
adc
int
stos
popa
push
cmp
popf
pop
cmp
jmp
xchg
cmp
es
lock
ljmp
inc
call
and
sbb
mov
inc
scas
push
inc
pop
divb
icebp
dec
or
dec
mov
jl
movaps
ljmp
jns
pop
inc
pusha
pop
cltd
inc
sub
mov
les
sub
fists
leave
dec
mov
sub
or
jg
out
lock
xor
sarl
add
jbe
dec
mov
or
adc
mov
in
mulb
xchg
add
dec
adc
sub
faddl
or
lret
jg
adc
xchg
pop
icebp
stos
add
mov
int
jne
pop
leave
mov
sbb
addr16
fsubrl
inc
xor
mov
sarb
mov
ret
cltd
or
dec
sub
and
xor
pushf
push
adc
dec
push
aaa
sbb
mov
shrb
push
sarl
lahf
xorl
sti
dec
push
inc
xchg
ficoml
rcr
roll
jo
sbb
jbe
mov
pop
in
or
dec
stos
out
mov
dec
pop
aad
mov
inc
outsb
test
cmc
push
enter
cmp
mov
inc
fs
sti
cs
push
ret
shr
jmp
and
jle,pn
mov
or
mov
xchg
push
ja
scas
dec
jecxz
dec
imul
or
mov
mov
jg
dec
xchg
inc
and
das
sti
enter
js
shlb
xor
jmp
jae
enter
cs
lods
lcall
xchg
je
gs
das
jmp
scas
adc
cmp
movsl
mov
xor
shlb
mov
or
pushf
loopne
mov
mov
das
adc
dec
inc
mov
lods
enter
aam
mov
adc
xor
add
jno
test
test
gs
mul
sti
xchg
mov
adc
inc
or
outsl
mov
push
repz
ror
push
mov
xor
xchg
mov
loop
mov
daa
lods
mov
jp
insb
add
aam
lcall
ror
jecxz
jecxz
stc
mov
jne
sub
ret
in
mov
push
xchg
fisubl
subl
sub
in
dec
popf
roll
push
lds
loopne
xchg
adc
ljmp
push
jle
cmp
shrb
mov
addr16
gs
lcall
inc
mov
hlt
jl
imul
inc
fs
push
push
ss
jmp
adcl
mov
orb
or
sub
or
sbb
stos
pop
add
outsl
lret
cld
scas
push
mov
push
pop
adc
mov
adc
jbe
and
les
subb
mov
dec
cmp
xchg
notl
inc
jbe
sub
adc
jns
mov
inc
or
xor
cmp
pop
lds
aad
adc
nop
or
lea
mov
loopne
ja
lea
pop
and
cs
les
mov
dec
sbb
sbb
test
insb
ror
add
push
add
sub
dec
pop
inc
push
fwait
mov
fdivl
pop
jo
imul
iret
ret
leave
enter
cltd
jo
into
es
xor
push
xchg
repnz
mov
popa
xchg
pop
roll
jg
and
or
int3
jae
gs
add
push
or
insb
dec
xor
test
mov
stos
xchg
xlat
shl
loope
mul
mov
mov
sbb
xchg
dec
pop
std
xchg
and
pop
addr16
mov
fsubs
sti
mov
aad
inc
call
add
out
xchg
jle
mov
das
adc
cmc
call
mov
movsb
jns,pt
push
and
push
push
pop
outsl
gs
dec
adcl
in
fstps
orb
xor
and
push
icebp
mov
in
test
add
popa
push
jbe
add
das
out
mov
arpl
push
inc
jg
xlat
lret
fimull
sbb
cmpsl
ljmp
inc
jne
adc
push
mov
cltd
stos
bound
mov
jns
int3
lea
in
out
popf
and
xor
jns
sbb
test
push
dec
push
sbb
enter
push
jno
ficoml
daa
mov
jg
notb
lret
jecxz
push
push
push
adc
push
inc
push
outsb
mov
sub
push
dec
ja
addl
mov
lret
scas
pop
mov
add
pop
lea
fistpl
cs
repnz
insl
ja
add
jbe
cmp
aas
imul
aam
repz
aad
mov
cmp
inc
or
cwtl
add
lret
lods
fbstp
mov
add
outsl
push
cmp
lods
leave
sub
out
ss
ret
stc
out
mov
adc
jge
ret
xor
jecxz
mov
jmp
idivl
add
out
cmpl
into
dec
jb
ljmp
dec
decl
testb
xchg
fsubs
mov
jg
hlt
aad
xchg
cmc
stc
sbbb
ljmp
js
roll
adc
pop
push
pop
sbb
xchg
movsl
xchg
dec
cli
mov
mov
fnstenv
and
shll
pop
fidivrl
adc
in
mov
push
and
mov
adc
inc
imul
lds
insl
adc
mov
or
cmc
fisubrs
fldenv
js
fdivs
cmp
dec
lahf
xor
dec
sub
je
lahf
stos
std
lds
stos
ret
xor
lods
jg
aaa
scas
sbb
test
repnz
fdivr
sub
and
mov
lods
cs
movsl
aam
aam
ret
cwtl
lea
test
in
mov
jl
psubq
sahf
push
or
push
xchg
jae
out
repnz
mov
mov
cmpsl
mov
mov
rorl
xlat
inc
mov
loop
or
daa
adc
mov
add
mov
out
aad
and
sbb
sub
arpl
add
stos
dec
mov
mov
shr
inc
cltd
mov
pop
stos
jae
add
addr16
add
mov
jecxz
cmp
push
std
in
sbb
jo
hlt
sub
andl
lds
jge
shlb
pop
cmove
push
imul
fsubs
sub
bound
mov
push
lds
jge
pop
mov
jmp
mov
mov
jg
adc
out
jmp
cmpsb
jp
sub
sub
mov
lret
adc
or
sbb
repz
cli
mov
insl
pop
neg
pop
aam
int
fdivrl
cltd
in
or
pop
jp
lock
sbb
ljmp
xchg
arpl
or
add
cli
inc
js
lcall
aas
repnz
cmpsl
push
push
ror
ljmp
movsb
aam
dec
xor
adc
je
ds
xchg
jl
cmp
imul
cmc
int3
xchg
std
inc
sub
jnp
cmp
hlt
test
xchg
pop
int3
jp
jmp
mov
and
outsb
pop
pusha
loopne
inc
loopne
xor
sar
sbb
popf
push
mov
mov
pusha
test
sbb
bound
jo
adc
pop
aad
je
jno
addr16
pop
sub
repz
pop
cwtl
int3
stos
sbb
cmp
leave
xchg
mov
inc
mov
out
imul
inc
mov
fcomp
xor
repnz
mov
jmp
pop
mov
push
sahf
mov
imul
mov
orl
sbb
out
clc
mov
add
dec
rorl
jae
aaa
aad
cmp
fs
cmp
dec
cmp
xchg
inc
das
and
and
adc
sub
add
cmp
add
aad
sbb
sbb
sti
clc
push
les
out
add
mov
push
jnp
data16
jmp
lret
scas
pop
cmp
xchg
sub
cmpsl
xchg
sbb
subb
jmp
adc
aam
dec
sbb
adc
movb
pushf
jle
daa
add
in
sarl
js
stos
inc
test
dec
or
lahf
push
jmp
pop
adc
nop
lret
cli
cmp
jbe
cmpsl
xor
or
scas
gs
adc
add
mov
push
insb
leave
and
sbb
push
cwtl
stos
je
divb
mov
sbb
push
int3
adcl
jo
inc
movsb
scas
ret
mov
push
mov
outsb
mov
bound
or
adc
hlt
fidivs
cmpl
nop
sarb
mov
mov
mov
jp
std
cmp
out
and
mov
dec
mov
jp
cmovge
repnz
cmp
stos
push
xor
lods
out
push
mov
dec
lock
and
aam
out
mov
sbb
enter
lds
adc
jp
sti
gs
popf
jle
ret
stos
pop
ds
mov
pop
push
pop
adc
das
push
inc
mov
jge
inc
push
dec
aas
xlat
test
jnp
xchg
inc
fwait
adc
mov
push
jp
push
xchg
aaa
enter
cmpsb
into
std
neg
sub
lods
movsl
cmc
bound
out
in
pop
jmp
xor
pop
cmp
arpl
and
hlt
cmpsl
sub
shlb
jg
xchg
ljmp
rcl
mov
sti
push
rorb
push
mov
mov
xchg
stc
xor
aas
mov
lods
loop
inc
imul
mov
xchg
in
ljmp
xor
imul
popf
jno
lret
mov
mov
insl
fadds
push
and
sub
js
subb
mov
es
icebp
adc
sbb
jmp
push
hlt
xchg
pop
pop
or
lods
dec
xchg
inc
shll
sub
fnstenv
test
push
adc
adcl
adc
adc
push
inc
xorb
fs
pushf
nop
lret
stos
arpl
fmul
sbb
mov
push
add
movsb
sbb
mov
push
out
jp
or
shrl
jb
lcall
int3
mov
fxtract
int3
shlb
add
jmp
mov
push
test
dec
dec
add
lods
xlat
ret
push
mov
setns
je
ret
lret
arpl
ret
aad
sub
jp
lcall
pop
ja
mov
test
dec
mov
movzwl
and
rorb
sbb
out
add
cmc
mov
sub
inc
aam
sub
mov
popf
aam
inc
mov
cltd
ret
int3
shlb
jp
cld
cmpsl
cmp
cmpsl
jle
mov
into
scas
xor
addr16
iret
sahf
push
fs
jle
dec
xchg
sub
lea
mov
arpl
cwtl
jg
stc
pop
xchg
xor
outsl
clc
test
mov
lret
outsl
cltd
cmp
dec
je
sbb
jno
sub
pop
lcall
ficomps
jne
enter
pop
mov
into
scas
push
push
insl
or
cmc
insl
lods
lcall
xor
push
mov
xchg
xor
mov
aam
ret
shrb
out
lret
int3
pusha
rcr
dec
mov
cmpl
lret
cmp
iret
push
jmp
cmp
cli
scas
pop
ja
xchg
cmp
mov
shrb
data16
rorl
mov
xchg
subb
and
xor
dec
sbb
mov
sbb
jne
push
aad
or
jle
rcll
pusha
dec
push
mov
cmp
push
sbb
jno
jno
dec
xchg
jp
or
dec
mov
outsb
add
cmp
notl
and
or
ja
xchg
leave
fimuls
xchg
dec
sahf
lock
stc
dec
sbbl
std
and
rsqrtps
xchg
iret
inc
shr
mov
pop
repnz
sub
cmc
rolb
jecxz
arpl
jnp
mov
cmp
jg
push
pop
inc
sahf
test
rol
fistpll
xor
fdivr
or
fsubrs
cld
addr16
jne
push
gs
clc
std
pop
lock
xor
pop
ret
andl
frstor
cmp
test
jg
lods
rolb
ret
cmp
cmp
xchg
add
push
mov
push
pop
popa
jae
dec
subl
insb
out
inc
je
or
sub
or
cmpsb
lret
mov
stc
pop
lahf
paddw
enter
sbb
call
push
xor
mov
xor
pop
jb
pop
mov
inc
push
push
jmp
outsl
rclb
xlat
aaa
sbb
js
sub
inc
xor
fldenv
jge
and
ds
pop
loopne
cmpsl
add
mov
pop
sub
out
xchg
add
ret
adc
lock
jno
sub
adc
cs
xchg
lea
cwtl
ss
mov
scas
movsl
inc
mov
push
repnz
dec
mov
fmull
xor
adc
cmp
outsb
pop
pop
imul
add
push
sbb
jle
xor
test
pop
pop
pusha
ss
jmp
pop
mov
mov
jo
stos
dec
jecxz
add
out
cwtl
sub
sbb
aam
fstpt
dec
and
and
fimuls
jno
je
mov
inc
cmp
mov
repnz
jo
ja
imul
xor
xor
je
xchg
movsl
xlat
fndisi(8087
dec
dec
fisubl
std
sbb
push
loopne
aam
cmpsl
addb
mov
js
and
test
loope
imul
fsubrl
gs
add
cli
inc
stos
xchg
sbb
push
push
adc
add
mov
xchg
jmp
ror
insb
pop
cli
test
inc
and
xor
jmp
into
push
push
cmpsl
adc
and
lds
ret
mov
add
push
roll
jge
inc
xor
sbb
xor
lods
sarb
enter
push
adc
and
shrb
push
enter
les
mov
inc
mov
push
dec
and
adcb
jmp
movsl
ret
xor
jecxz
test
scas
mov
imul
push
cmpsl
rolb
addb
pop
push
movsb
inc
jbe
jae
and
ret
mov
subb
mov
cmp
aam
out
test
mov
repnz
xchg
divl
mov
jmp
or
sbb
dec
pop
mov
pop
out
lsl
add
adcl
adc
cli
push
gs
dec
dec
inc
cmp
imul
das
pop
daa
ja
dec
andb
jp
jb
scas
sahf
xchg
jnp
test
push
lret
fnsave
vpand
push
outsl
loopne
ret
loop
jbe
mov
sbb
xchg
jge
jae
xchg
filds
dec
push
and
cmp
mov
or
pusha
or
sbb
popa
pop
rcrb
nopl
cmc
or
lods
aaa
mov
test
mov
stos
aaa
cmp
jns
push
or
aas
mov
mov
int3
and
aas
or
test
xchg
int
jae
test
inc
and
mov
pop
pop
jbe
out
jne
sbb
mov
les
dec
ds
in
mov
andb
repz
mov
pop
mov
outsl
dec
inc
lcall
mov
cmp
sub
adc
pop
lds
pop
xchg
fstp
out
rorl
in
sti
mov
jle
and
mull
push
add
jnp
jns
pusha
enter
repz
popa
orb
scas
inc
mov
stos
out
js
testb
bound
imul
jp
pop
fnstsw
shlb
cli
jle
ficoms
mov
rcll
push
mov
mov
mov
insl
rcl
stc
int
aas
inc
cld
xchg
xchg
sahf
xchg
rcrl
jae
js
jbe
xchg
mov
and
scas
rorb
jge
mov
or
push
imul
cs
jno
xor
jae
addr16
mov
in
lods
sbb
lcall
into
ds
push
stc
inc
jnp
sbb
xor
jp
inc
enter
imul
inc
fsubl
je
out
es
and
dec
jecxz
movsb
rcrl
test
pop
mov
insb
jno
cmpsb
push
cmp
in
testl
add
xchg
rcrl
jge
xchg
cmp
imul
insb
pusha
inc
loopne
xchg
sahf
lock
cmc
lds
cmp
xor
loope
fstpl
push
push
icebp
bound
test
ficomps
iret
repz
cli
and
and
and
xorl
out
fnstenv
dec
jo
xchg
pop
dec
repz
mov
cltd
int3
stos
push
or
mov
push
lds
shll
iret
jg
jl
jg
insb
sahf
push
sbb
jge
xchg
fs
jmp
push
sahf
lahf
fdivp
gs
sbb
pop
test
mov
mov
out
cwtl
mov
fwait
sbb
cmp
insl
out
cltd
lret
lret
xorl
jns
sub
cltd
rclb
add
jno
push
fcomps
out
dec
lret
and
adc
dec
mov
jnp
push
push
jns
test
inc
sbb
jb
ds
mov
sbb
aas
mov
dec
dec
enter
push
in
pop
mov
mov
stos
and
arpl
or
lock
mov
into
jg
push
push
xchg
loopne
inc
cs
shrb
daa
pusha
addr16
fistpll
shlb
jecxz
adc
or
arpl
scas
gs
xchg
or
push
stc
xor
or
sbbb
xchg
dec
cmp
xor
push
or
jl
dec
add
test
sbb
js
lods
jge
pop
push
push
mov
wbinvd
loope
or
test
iret
out
loopne
jae
mov
movsb
mov
lret
xor
in
jbe
addr16
cmp
add
sub
inc
pushf
lds
pop
push
jns
push
cmpsl
cmp
or
mov
mov
iret
mov
mov
lods
xchg
jl
jns
iret
sub
adc
clc
pop
stc
lcall
mov
sbb
xor
and
sbb
sbbl
vpaddusw
cmpl
xor
nop
pop
into
mov
adc
or
pop
jmp
jecxz
jne
fwait
jmp
je
outsb
scas
aam
push
push
test
mov
fldl
mul
xlat
loope
sub
test
pop
ja
mov
imulb
mov
aad
jnp
and
sub
sub
jle
into
push
mov
cs
call
clc
fisubrs
lret
les
andl
pop
test
loopne
lahf
jne
test
inc
popf
icebp
pop
lcall
popf
lcall
dec
dec
decl
xchg
cld
mov
adc
aas
call
movsb
add
mov
loope
lahf
add
adc
imul
lret
out
mov
pushf
push
fistpl
xor
lahf
jp
cmp
mov
aad
outsl
sub
out
test
mov
movsb
rcrb
fildl
mov
pushf
jns
rcrb
sbb
jl
xor
stc
roll
xor
push
lret
insl
push
and
cmpsl
mov
dec
imul
int
stos
mov
mov
ret
mov
jb
sti
mov
push
cmp
add
les
or
mov
insl
in
movsl
jns
jnp
stc
cmp
sub
inc
in
decb
push
inc
mov
mov
int
ficoml
sub
push
daa
push
subl
jbe
sbb
lds
fadd
push
movsb
icebp
or
movsb
stos
inc
jl
lea
fs
sbb
add
jne
negl
call
loop
std
push
shll
lods
cs
subb
movsl
scas
add
xchg
out
jp
aad
or
shr
mov
ja
jl
push
push
sbb
push
mov
js
jecxz
loope
fwait
mov
out
push
stos
mov
mov
cli
rorb
mov
pop
mov
xchg
mov
mov
je
dec
cmp
push
neg
inc
inc
lahf
sub
xor
xor
inc
push
lods
ret
repz
out
adc
lods
dec
mov
add
and
test
inc
fists
xchg
mov
jne
mov
add
or
inc
es
data16
lret
jg
jg
push
faddl
add
xchg
xor
mov
xor
mov
fbstp
xor
mov
daa
out
scas
or
push
inc
movsl
add
jge
sbbl
movsb
add
sarl
popf
sbb
hlt
push
add
sub
out
ret
or
movsb
and
or
mov
mov
mov
movsb
scas
daa
gs
in
sbb
xchg
fcoms
pop
iret
sub
rorl
mov
and
pop
mov
test
in
sbb
dec
jne
dec
int
ret
call
divl
push
and
mov
adc
and
dec
pop
aaa
out
in
push
sbb
add
cli
xchg
xchg
add
shlb
cmp
shl
mov
mov
idivl
cltd
lcall
mov
dec
dec
inc
aas
lahf
pop
add
add
sub
loope
ja
pop
cmpsl
fwait
negb
xchg
test
mov
loope
sub
xchg
xchg
rclb
scas
in
xchg
inc
cmp
mov
es
mov
ja
scas
dec
flds
daa
sub
fstl
rep
into
into
mov
pop
jno
in
iret
push
fists
mov
les
aad
cmp
outsb
test
xor
mov
or
xlat
mov
add
gs
and
jne
xchg
adc
adc
rclb
pop
xor
into
daa
mov
fsub
pop
test
repz
test
nop
sub
ds
test
sub
xor
xchg
sbb
sbb
cmp
addr16
mov
mov
js
cmp
dec
and
mov
imul
call
test
mov
inc
aaa
push
lret
xchg
push
push
pop
cmc
fwait
mov
dec
xlat
mov
inc
int
cmp
inc
sub
out
cmp
sub
test
enter
xchg
mov
ret
rcrb
xlat
enter
jnp
mov
int3
dec
imul
rorl
or
fnsave
adc
mov
in
insl
push
std
push
imul
xor
pop
push
and
inc
out
sub
stos
lret
cmp
fdivrp
pop
stos
iret
cmpsl
lcall
daa
bnd
cmp
out
arpl
lea
sarb
movsl
aas
outsl
dec
jg
push
inc
scas
push
fadds
aaa
ss
inc
fidivrl
aam
cli
mulb
pop
add
scas
in
dec
into
and
adc
or
adc
mov
or
inc
inc
pop
pop
mov
pop
jg
mov
fimull
pop
ffree
in
aas
mov
dec
dec
push
xor
aaa
leave
lret
xchg
cmp
fsubr
lods
pop
lock
xchg
fnsave
popf
inc
stos
push
jno
mov
fs
testl
push
xchg
sbb
daa
sub
in
shl
or
push
and
cwtl
mov
sbb
mov
cmp
and
flds
inc
scas
repnz
inc
out
mov
in
inc
dec
sbb
popf
imul
or
call
adc
dec
pop
movzbl
div
jae
fnsave
mov
lcall
dec
adc
jecxz
in
fiaddl
dec
jecxz
mov
in
clc
or
mov
xor
jo
inc
pop
shll
scas
sub
call
cmc
pusha
packuswb
into
ljmp
movsl
sub
sub
dec
jg
sbb
mov
dec
adc
mov
rcrb
inc
in
mov
imul
lret
out
jb
in
pop
subb
int
mov
aad
jo
int
mov
xor
out
cmp
fpatan
out
in
mov
sbb
xor
jbe
jns
idivb
dec
sub
xor
mov
cmovo
mov
clc
xlat
sub
xor
fdivl
lea
push
rclb
xchg
xchg
int3
sbb
or
test
popf
test
call
lods
jle
add
sbbb
mov
dec
inc
dec
cmp
jae
imul
push
fs
jae
inc
mov
xor
cltd
dec
lods
and
inc
adc
cmpsl
pusha
iret
clc
adc
push
jg
rorl
fs
mov
or
inc
add
aad
sbb
shll
out
mov
xor
xchg
xor
adc
cmp
icebp
jl
xchg
call
enter
lock
mov
movsb
in
push
stc
dec
sbb
and
cmc
sbbb
pop
xor
out
xlat
sub
sbb
lcall
xchg
bound
xchg
movsl
inc
xor
in
jge
in
mov
push
aas
pop
ds
xor
inc
xor
fwait
clc
mov
mov
test
push
jne
lahf
xor
pushf
inc
dec
ljmp
fbld
inc
cmp
and
aas
imul
jno
xchg
add
lea
cmp
xchg
popa
lea
sahf
lret
sbb
push
loop
cmp
out
aas
pop
push
sub
push
sub
dec
pop
xchg
xchg
icebp
ret
imul
mov
lods
jno
xchg
inc
push
jge
or
out
pushf
inc
pop
lahf
xlat
pop
mov
cmp
mov
inc
sbb
lret
jp
bound
sub
fcompl
popf
push
ds
sub
mov
fldl
repnz
mov
jae
pusha
push
cmc
out
ljmp
dec
rol
sar
push
into
icebp
adcl
xchg
cld
push
xor
or
adc
or
punpckhdq
inc
jns
sbb
shll
in
std
jmp
call
ret
sar
jmp
pop
aam
mov
add
pushw
arpl
aaa
xchg
adcb
and
cmpsb
cmp
bound
mov
leave
lahf
sbbl
std
jmp
sub
mov
or
mov
cmp
jg
push
int
sbb
test
enter
movsl
jmp
js
jbe
jae
add
sahf
daa
addb
push
lret
sbb
jecxz
loopne
push
cmp
in
jo
fwait
mov
or
xchg
pusha
jecxz
repnz
jmp
nop
mov
mov
sbbb
mov
inc
sub
push
mov
or
rorb
scas
mov
xchg
pop
push
xchg
jl
repnz
jge
int3
in
mov
insl
add
add
testb
out
loope
lods
movsb
out
gs
enter
and
inc
cld
in
and
mov
or
ret
out
bound
in
jo
sub
xchg
aas
add
push
insl
dec
mov
mov
aas
xchg
mov
or
push
mov
je
pop
pop
faddl
test
es
arpl
and
xor
repz
jmp
bound
sar
mov
inc
sbb
inc
addl
into
push
lods
cmp
jns
pop
jb
int
push
lcall
sbb
add
andl
pusha
xor
xchg
lea
jno
aas
mov
dec
out
pop
stc
lds
xor
jne
jp
xchg
mov
in
fldcw
lea
jnp
cmp
test
aam
push
jle
or
dec
jg
and
cltd
dec
lret
cmp
mov
adc
repz
mov
and
out
inc
add
dec
mov
jae
inc
and
xchg
and
mov
xchg
es
adc
dec
cmpsb
icebp
mov
je
push
ds
leave
push
int
ja
rolb
out
xor
shll
cwtl
mov
test
xchg
mov
xor
sbb
aaa
xor
lods
mov
cltd
sub
add
inc
in
out
sub
iret
stos
test
les
jg
test
sub
xlat
fcoms
or
fistpl
xchg
outsl
add
out
sub
or
jbe
fwait
repz
lret
mov
aam
sbb
push
lret
xchg
dec
addr16
and
out
sbb
cmc
jno
adc
lret
je
xchg
push
mov
and
loop
dec
add
insl
sbb
pop
and
sbb
mov
aad
mov
inc
or
and
fidivrs
sub
cmp
imul
call
or
out
das
add
sub
mov
jbe
lcall
mov
call
outsb
cmpb
aaa
push
shll
gs
push
xor
popf
sbb
push
icebp
gs
sub
mov
scas
xchg
lret
or
addb
jno
rcrb
jnp
sub
movsb
outsl
add
out
hlt
cmpsb
nop
fs
scas
enter
out
test
stos
das
push
outsb
sbb
sbb
sbb
aaa
in
fimuls
inc
jns
and
rcr
sub
cli
xchg
xchg
outsl
xchg
lock
xor
sub
and
mov
add
cs
jnp
mov
jb
ret
les
ret
and
jnp
mov
inc
pop
xor
scas
std
jg
lods
popa
lods
mov
rorb
jnp
insb
addr16
movsb
pop
sub
sbb
in
jp
cmp
mov
dec
stos
dec
stos
or
adc
mov
dec
xchg
popa
xor
call
sahf
and
lods
mov
sar
cs
dec
xchg
cmp
xor
lret
jae
dec
aad
in
scas
mov
pop
gs
out
outsb
sub
mov
lret
frstor
push
jmp
add
loopne
xchg
and
fisttps
inc
mov
add
jge
imul
cmp
lcall
nop
inc
cmpsb
add
aas
insl
mov
push
out
mov
call
mov
sarb
aaa
into
xchg
js
cmp
testb
jno
lcall
jb
ret
jbe
adc
fmull
js
cs
jmp
jge
mov
ljmp
ja
outsl
push
rorb
add
xor
cld
arpl
adc
sbb
andb
push
test
jle
xor
int
insb
popa
cmp
or
test
movsb
popf
jmp
negl
mov
mov
push
sbb
pop
add
jle
cmp
call
dec
pop
adc
jle
jl
cmpsb
push
mov
pop
cmpsl
daa
sub
out
adc
mov
xlat
shll
cltd
ret
roll
je
adcl
dec
or
push
mov
sub
mov
adc
xor
sarb
pushf
and
out
push
sub
aaa
scas
mov
jne
pop
outsb
call
xchg
repz
pop
lods
stos
sbb
xchg
xor
jb
sti
lret
icebp
repnz
push
ljmp
xor
fcmovbe
into
imul
rol
cmp
fiaddl
fs
popa
pop
aam
fsubrp
je
cmp
xchg
in
mov
mov
inc
mov
adcl
in
cmp
mov
xchg
jle
fwait
jl
fsubr
or
fldl
out
int3
call
add
or
xor
loop
dec
or
cli
jo
cmp
lds
loop
hlt
cmp
xchg
call
sub
dec
or
loope
mov
mov
mov
int
dec
shl
sub
cmp
jns
cmpsb
sbb
icebp
gs
push
jbe,pn
jmp
mov
xor
mov
and
ds
enter
clc
adc
aam
xchg
stos
jo
inc
mov
pop
leave
xor
ds
cmc
mov
shll
andl
leave
mov
ds
mov
sbb
add
adc
insl
bound
fidivrl
loop
lds
ljmp
ret
dec
xor
inc
popf
les
and
add
mov
xchg
cmp
jle
pop
inc
xchg
and
jg
imul
add
in
cmp
xchg
sbb
scas
psrld
jg
adc
jbe
jo
push
movsb
pop
fisttpll
enter
fstpl
pop
inc
xchg
and
jle
mov
or
xchg
xchg
xchg
mov
add
jge
icebp
inc
mov
xlat
jp
jmp
das
je
pop
and
push
cmp
xchg
or
push
push
in
xor
ret
add
xor
inc
mov
pop
ja
iret
push
rcrb
lahf
testl
in
fimuls
shrb
out
pop
mov
jmp
in
lret
lret
fdivr
les
jmp
std
mov
out
loope
xchg
adc
pop
fisubrs
xchg
push
test
pop
pushf
xor
inc
lods
cmp
add
xor
mov
imul
adc
add
mov
es
mov
or
cwtl
mov
sbb
cmp
dec
lea
cmp
mov
movsb
ret
jnp
xlat
sbb
in
dec
int
ljmp
mov
xchg
out
loopne
popa
repnz
std
std
or
movsb
add
int3
inc
inc
jge
rorb
push
xchg
movsb
pushf
cwtl
xchg
adc
cmpsb
out
stos
xchg
or
lahf
aas
aad
xor
ffreep
mov
xchg
cmp
xchg
cli
mov
mov
mov
pop
sub
xchg
mov
fnsetpm(287
cmp
imul
ja
xchg
push
mov
mov
push
clc
jmp
pop
insl
aaa
fcmovu
dec
out
ret
pusha
pop
jl
rclb
aam
mov
mov
push
add
cmpsb
pop
int
mov
xchg
pop
lret
cwtl
or
sub
dec
shll
push
sbb
ja
dec
xor
push
push
or
inc
xor
pop
ficomps
push
inc
aas
ds
jae
push
mov
call
test
iret
lods
stos
cmp
pop
js
xlat
adc
faddl
in
fwait
mov
xchg
sub
or
imul
inc
add
repz
nop
jmp
cmp
jb
dec
mov
icebp
jne
xchg
lods
sbb
or
lea
enter
shll
mov
xor
jns
cmp
push
jmp
jns
mov
sub
mov
addb
addb
addr16
sub
lods
xchg
push
inc
cmp
icebp
mov
push
push
push
insl
push
inc
pop
add
sub
fcom
mov
jmp
js
add
dec
jne
sbb
push
cmpsb
stos
fcoml
imul
add
jmp
enter
push
mov
push
pop
cltd
xorl
mov
arpl
sub
aam
test
mov
movsl
addr16
arpl
aaa
xchg
insb
and
or
fisubrl
push
pop
fisubrs
aaa
das
mov
mov
push
rclb
sub
dec
adc
imul
xchg
idiv
je
in
fbstp
jge
sar
and
xchg
in
jbe
xchg
mov
aas
add
xchg
jmp
xchg
ss
mov
pop
inc
or
inc
imul
xchg
push
jns
gs
jbe
scas
and
push
mov
enter
movsl
sbbb
sti
lahf
jle
popl
arpl
data16
aaa
sub
pop
cmp
sbb
and
sub
jecxz
xor
rcr
hlt
inc
push
or
test
js
xor
push
lds
ret
jl
aaa
mov
cmpsb
repz
dec
pop
sub
out
jbe
cli
inc
loop
scas
daa
enter
sahf
imul
adc
dec
xor
xor
in
cltd
nop
cld
std
pop
into
enter
cmpsb
andl
fisubrl
fcoms
bsr
pop
sbb
push
sub
pop
loop
xor
mov
pop
imul
add
in
jae
and
jp
aad
or
dec
jp
xor
inc
push
sub
jne
mov
dec
test
fcom
insb
push
or
push
sahf
dec
jbe
stc
rcrl
arpl
mov
pop
sbb
lods
add
mov
in
jp
leave
sub
adcl
aam
icebp
stos
out
xor
in
jo
out
daa
andb
repz
jge
enter
mov
mov
mov
idivb
mov
pop
push
iret
shlb
jne
inc
jne
in
outsl
pop
fdivl
lret
aaa
adc
clc
lahf
push
fs
mov
shlb
sub
fsts
es
cmp
or
fldenv
scas
pop
push
xchg
into
js
mov
push
adc
jp
popf
dec
dec
push
or
popa
in
xchg
pop
sbb
add
push
test
fwait
testl
jg
adc
mov
ljmp
push
mov
test
xchg
sbb
mov
sahf
ret
rcll
lret
xchg
out
cmpsb
call
mov
push
ljmp
mov
and
cli
add
adc
daa
mov
lret
outsb
scas
inc
jg
and
addb
sub
mov
mov
jmp
stc
cmc
shlb
lret
pop
add
mov
testl
fcom
dec
gs
pop
ja
data16
fstpl
jecxz
xchg
fdivs
jmp
call
popf
popa
shlb
ret
pop
and
jecxz
xor
stos
lret
add
repz
lea
insl
ss
rorb
aaa
or
lods
sbb
xchg
and
lret
sarb
or
pop
lds
in
xchg
dec
sbb
stos
or
es
es
into
mov
rcll
or
xchg
ljmp
in
pop
jnp
cmp
dec
hlt
not
fisubrl
loope
jno
adc
fistps
mov
sub
into
or
xchg
gs
mov
or
mov
xor
add
sub
repz
add
jge
dec
sbb
into
std
filds
in
rcl
sub
pop
sbb
sbb
aaa
sub
in
xchg
aas
into
dec
hlt
test
cmp
gs
jecxz
jle
jl
pop
in
pop
int
xchg
insb
mov
pop
pusha
popf
mov
xor
mov
loopne
cli
cmp
test
movb
es
pop
jl
cmpb
mov
incb
add
inc
out
push
les
mov
add
sar
idivb
jne
stc
rorb
int
mov
mov
mov
add
test
xchg
jecxz
push
pop
mov
sub
adc
mov
push
xor
mov
cmp
int3
push
in
cmp
mov
sub
mov
in
lock
test
out
and
xchg
std
push
mov
cmp
xchg
sbbb
or
sbb
shl
lock
jle
sbb
rcll
cmp
xchg
dec
or
ror
mov
pushf
cmpsl
inc
gs
shrb
stos
std
or
in
push
stos
es
ja
xchg
and
mov
or
aam
rcrl
inc
ds
mov
add
xor
imul
cld
aaa
sub
pop
cmpsl
insb
rolb
lcall
cmc
test
insl
or
add
sbb
int
pop
ret
mov
mov
test
push
les
jge
jl
sti
outsl
into
loope
xchg
fcoms
mov
lds
mov
je
inc
push
xchg
divl
mov
aad
pop
xor
js
jmp
clc
adc
scas
adcl
scas
cmp
in
lahf
push
andl
sbb
sub
in
mov
inc
jle
jnp
push
sahf
cmp
in
dec
or
add
das
lea
mov
inc
stos
addl
arpl
dec
test
fucom
mov
aam
ljmp
es
test
cmp
in
cmp
insl
push
dec
dec
sub
cli
adc
lahf
mov
setno
push
mov
mov
mov
roll
rorb
lret
cmp
lods
sbb
mov
test
repz
xorb
pushf
mov
leave
cld
jl
fildll
adc
sbb
xor
sbb
leave
out
mov
enter
es
sub
jl
and
sub
adc
repz
nop
fmul
push
nop
loopne
mov
pop
or
addr16
add
ja
mov
test
jb
lahf
and
cwtl
test
test
pop
cmp
cs
mov
iret
imul
sarb
sub
addb
push
mov
or
xorb
push
pop
and
pushf
push
fistl
lods
xor
fistl
sub
lock
jmp
hlt
inc
call
orl
leave
pop
push
lods
not
pop
fstps
jp
push
mov
sub
shlb
popa
inc
sbb
scas
mov
popf
push
mov
jge
mov
inc
xchg
orb
xor
xchg
cmp
je
inc
pop
jbe
rcrb
dec
pop
aas
test
xor
adcb
push
push
mov
cmp
push
iret
cmp
aad
mov
push
mov
ret
movsl
aaa
mov
insl
scas
ds
jg
add
xchg
push
gs
stos
mov
lds
jb
int
stos
push
mov
incb
push
add
xor
aam
int3
pop
sub
leave
sbb
dec
rorl
ljmp
inc
imul
in
or
xlat
ss
arpl
xor
pop
cmp
jcxz
xchg
or
xchg
int3
jl
es
into
mov
mov
hlt
push
fistpll
cmp
and
cltd
adcl
sub
andb
and
loopne
loope
popa
sti
or
orl
mov
lods
pop
stc
adc
fstps
insl
cmp
adc
ficomps
scas
out
push
paddusw
add
sbb
out
cld
mov
adc
cltd
movd
lret
fistl
aaa
lock
sar
add
les
add
mov
data16
pop
pop
xor
xchg
add
test
pushf
sbb
xlat
and
aas
sub
xor
push
or
mov
sbbl
insb
adc
imul
xchg
cld
pop
int
mov
adc
sbb
cs
mov
cmc
xchg
adc
inc
scas
sbb
cmp
sbb
sbb
cmp
test
sub
pusha
jmp
push
sbb
pop
movsl
mov
je
popa
repnz
fwait
hlt
mov
aaa
stos
xchg
iret
inc
nop
mov
or
dec
push
lret
xchg
cmp
add
or
rolb
mov
subb
push
push
out
jl
pop
cwtl
dec
cmp
out
xchg
ret
je
sbb
push
and
cmp
push
dec
das
pop
lea
mov
test
and
sbb
pop
push
sub
test
adc
fsubs
mov
pop
sbbl
add
popf
into
push
jg
sub
cld
push
push
mov
dec
out
lds
or
fsub
cmp
mov
insb
sbb
xchg
xchg
popa
cmpsb
inc
mov
xchg
fstpl
mov
enter
push
mov
pop
imul
out
gs
loop
or
jge
rclb
nop
and
in
ljmp
cld
sahf
pop
sar
jge,pn
dec
lcall
cmpsb
test
push
mov
xchg
in
jnp
mov
cld
cwtl
test
mov
rcrl
ljmp
mov
adc
inc
ret
repnz
icebp
sbb
and
cld
jl
jmp
mov
dec
fbstp
mov
jbe
incb
xchg
aad
icebp
push
in
push
or
jbe
push
pop
adc
cmp
shufps
lock
shrl
mov
push
test
pop
fnstenv
push
in
mov
or
push
lods
lret
lret
fimuls
sbb
mov
out
add
aaa
dec
and
cmpsb
shl
fcomps
std
test
outsb
push
dec
sub
out
aam
cli
mov
and
lods
insb
dec
dec
adc
dec
xchg
jle,pn
dec
mov
popl
dec
inc
outsl
sahf
iret
xor
mov
insb
call
xchg
enter
fists
sbb
bound
testl
or
mov
push
frstor
jns
sub
jno
jmp
pop
test
mov
pop
out
sti
xchg
inc
mov
sti
push
imul
inc
aad
or
mov
test
repnz
dec
fsubl
hlt
or
jae
inc
icebp
push
int
push
inc
fsubs
or
clc
jne
je
xor
mov
add
mov
fnstcw
jnp
jmp
pop
pop
sub
and
xor
loope
ja
popa
ret
push
fisttpll
inc
sub
in
arpl
xchg
int
sahf
in
sbb
arpl
inc
gs
push
sub
sbb
shl
aam
mov
pop
das
inc
jmp
loopne
push
adc
mov
je
adc
xor
aas
ret
mov
call
arpl
xor
mov
clc
mov
shll
mov
mov
lods
mov
ret
enter
xchg
mov
dec
mov
dec
loopne
shl
cmp
in
in
sbb
add
cmp
aas
mov
mov
cs
xor
cmp
pusha
and
arpl
jbe
sbb
adc
push
jbe
clc
cwtl
aas
or
lahf
stc
xlat
ret
jb
fwait
jg
outsl
jno
enter
xor
nop
adc
pop
jne
std
add
pushf
adc
jae
inc
aaa
stc
xchg
xchg
pusha
xor
jg
push
add
and
ds
mov
into
jecxz
cltd
int
fsub
sti
arpl
sti
push
sbb
imul
jl
cmp
sub
pop
sub
aaa
and
or
imul
push
ret
add
out
addr16
pop
lods
mov
leave
sbb
push
rorb
sbb
mov
xchg
xchg
xchg
in
cmp
or
jmp
mov
push
call
adc
sub
mov
ljmp
in
mov
xlat
in
or
scas
jne
jae
cmp
jno
fwait
cltd
lret
int3
out
enter
push
or
hlt
xor
push
mov
fwait
sbb
add
les
jmp
and
enter
and
inc
ror
push
aad
xchg
push
sub
pop
jb
mov
mov
xchg
jg
adcl
jae
jbe
mov
xor
out
mov
aad
dec
push
mov
ja
xor
repnz
out
andl
cs
cmp
in
push
in
mov
popf
cmc
pop
or
mov
cwtl
jmp
adc
daa
aam
movsb
adc
in
lcall
push
jne
add
addl
stos
test
imul
mov
orb
add
outsl
adc
stos
dec
jns
orl
mov
jmp
stos
jns
push
imul
dec
lods
rcrl
aad
sbb
inc
fisubrl
aad
daa
xchg
add
mov
push
add
test
inc
inc
jg
test
out
xor
test
xor
stos
xchg
jmp
icebp
lods
out
pop
ja
mov
pushf
add
push
in
jl
push
hlt
cmp
fs
xor
sbb
mov
mov
inc
jb
jae
repnz
loopne
cmc
jle
sahf
push
sub
push
and
mov
in
fmuls
mov
xor
pop
jnp
repnz
xchg
ljmp
stos
call
mov
push
adc
xchg
movsb
cmc
xchg
insl
push
push
repz
stc
mov
shll
mov
inc
lods
mov
mov
stos
in
repnz
push
sub
xchg
sahf
sbb
jnp
and
jecxz
dec
xor
je
add
cli
adc
or
xchg
jne
inc
test
xchg
mov
shll
add
cld
jnp
inc
sbb
imul
pop
fdivs
xchg
hlt
xchg
lahf
pop
and
mov
andb
mov
adc
jno
sub
pop
sub
and
scas
cmp
daa
add
cmp
je
pop
sbb
stc
in
stos
jbe
orb
vpcmpeqw
sbb
mov
stos
push
sub
insb
cmp
addr16
add
sub
mov
imul
push
packssdw
inc
push
xchg
pushf
int3
jmp
sbb
and
mov
jno
in
jmp
lds
push
nop
push
sub
sub
xor
dec
int
loopne
adc
ja
popa
inc
int3
stc
rcrl
out
adc
aam
xchg
es
xlat
fs
push
bound
shrb
mov
out
inc
mov
push
pop
jge
xchg
dec
lods
and
test
lods
and
xor
bound
aad
lret
insl
mov
push
int
roll
jbe
jge
psubsb
xor
sar
lds
les
pop
daa
add
mov
stc
in
mov
bound
xorb
addb
jle
and
shrl
pop
push
dec
mov
jne
ss
xor
sbb
sarb
push
push
outsb
inc
sbb
dec
sbb
mov
jg
mov
xor
pop
les
sub
push
addr16
or
xchg
aaa
js
add
dec
sbb
inc
data16
leave
fstp
and
js
xlat
pop
int
mov
icebp
insl
dec
cmp
lds
mov
sub
mov
xor
adcb
xor
fmuls
hlt
xor
dec
es
in
and
leave
jbe
test
test
std
cmp
jge
aas
ja
mov
insl
je
and
loopne
push
mov
aaa
or
mov
loopne
mov
pusha
cmp
adc
cmc
pop
or
push
pop
cmp
push
scas
sbb
pop
enter
out
lcall
repnz
or
pop
push
daa
push
fs
add
push
dec
mov
add
idivb
xor
jge
daa
loope
addr16
mov
stos
insb
and
sbb
pop
inc
inc
shrl
aam
adc
out
outsl
dec
xchg
and
mov
add
inc
xor
cli
push
pushl
sub
cmp
or
sub
or
stos
add
or
cmpb
add
pop
dec
mov
push
push
int3
xor
cmpsl
popa
or
pcmpeqd
inc
leave
std
stos
into
ja
mov
push
push
jb
arpl
jl
mov
leave
and
pop
xchg
sub
push
in
dec
js
push
xchg
out
inc
push
pop
int3
ret
rol
lods
jg
shrl
addb
push
sar
adc
pop
mov
aas
inc
push
xor
push
jl
cmp
inc
lret
jno
pop
aad
cli
jno
cmp
mov
out
bound
mov
mov
mov
add
sbb
es
pop
mov
pop
mov
pop
push
adc
xchg
je
pop
nop
dec
jmp
scas
xor
lahf
mov
movsl
xchg
ja
cmp
xor
lock
sub
and
mov
jle
das
fwait
mov
cld
mov
popf
test
pop
add
repnz
mov
add
push
sbb
mov
icebp
pop
mov
add
cmp
add
mov
out
xchg
shl
pop
clc
sbb
ljmp
test
fisubrl
xchg
push
loope
jl
mov
pop
cmp
pop
sahf
dec
adc
sub
sub
insl
cmc
pop
and
mov
orb
adc
outsb
pop
popa
cmp
push
inc
ljmp
dec
imul
cltd
ror
enter
mov
jo
ficoms
lock
cmp
jae
jbe
jecxz
enter
mov
xchg
sarl
push
popf
mov
jmp
data16
sbb
scas
loop
shl
pop
in
sub
mov
mov
test
add
gs
lds
pop
ds
mov
inc
or
imul
pop
adc
shll
popf
in
sahf
mov
jae
xchg
cmp
das
and
cli
je
sbb
mov
pop
push
or
roll
mov
mov
xchg
rcr
out
cwtl
add
xor
sub
add
loopne
cs
mov
repz
outsb
mov
hlt
pop
cmp
outsl
lds
push
sarl
adc
mov
out
jecxz
dec
cmp
mov
add
mov
or
mov
cmp
testl
test
lods
shrl
dec
dec
mov
jg
mov
mov
cmp
jge
shll
leave
mov
add
jb
jae
push
adc
pop
inc
sub
test
mov
dec
icebp
push
dec
daa
dec
xchg
inc
les
inc
movsl
call
and
push
roll
shrb
push
xchg
inc
xchg
sbb
jecxz
or
sub
adc
in
int
ret
sbb
inc
outsb
mov
stos
and
inc
add
add
into
les
cmpsb
inc
scas
adc
js
movswl
inc
in
in
mov
jmp
inc
xchg
inc
mov
sarb
pop
mov
pop
insl
push
jo
sti
push
or
sub
mov
jno
outsl
outsb
dec
xchg
arpl
cs
outsl
jle
push
out
popa
cli
cli
mov
mov
outsl
jns
and
jecxz
jmp
jae
outsb
push
loope
xor
inc
xchg
xor
lahf
sub
mov
out
push
icebp
cmp
mov
push
adc
xor
mov
and
add
out
xchg
mov
lret
jnp
sbb
cmc
xor
mov
mov
scas
test
in
or
push
sub
movsl
decb
xor
jg
jno
fisttpl
sub
call
inc
int3
sub
sub
into
popa
adcb
cmp
sahf
out
popf
out
sbb
adc
xchg
mov
push
test
jl
and
xor
sub
negb
lahf
gs
ror
call
inc
mov
sti
mov
stos
pop
test
leave
mov
stc
mov
lods
xchg
inc
pop
in
pop
sub
addb
test
js
cmpsl
mov
pushf
push
outsl
sti
es
sbb
xor
in
jae
sahf
jne
mov
push
xor
cs
push
cmp
push
pop
cld
mov
andb
ret
repnz
mov
ret
mov
xchg
or
fs
pop
repnz
adc
std
pop
mov
stos
jmp
movsb
or
jp
xchg
pushf
and
push
fstl
mov
outsl
sbb
aam
pop
mov
iret
dec
inc
sub
testb
repnz
fimuls
pop
std
fidivl
mov
std
call
adc
mov
mov
dec
sub
jno
fwait
push
in
cmpl
aad
scas
inc
pusha
sbbl
and
sbb
bound
push
cltd
mov
sar
cli
mov
call
pop
dec
and
jb
pop
daa
cmc
test
xor
add
pop
sub
sbb
ret
pop
lods
xor
inc
adc
add
mov
push
inc
add
mov
out
mov
cld
sbb
scas
icebp
leave
sub
call
sub
sub
sbb
adc
pushf
cmpl
mov
cmpsl
push
mov
xchg
fnstenv
jae
or
mov
aaa
lahf
aad
sti
inc
fs
mov
mov
adc
test
pop
sbb
cmpb
test
pop
xor
int
je
leave
movd
mov
cmpl
fiadds
or
repnz
mov
mov
je
mov
lea
mov
loop
jecxz
adc
in
xchg
je
shlb
popf
pop
imul
push
xchg
add
mov
rolb
sub
fs
dec
push
call
rcll
xor
and
stc
cmpsl
scas
jecxz
pop
xchg
adc
mov
add
mov
cwtl
fldcw
negl
jmp
push
flds
jae
fwait
pushf
push
mov
rcll
fstp
out
inc
imul
jp
pusha
mov
ficomps
jo
jae
lods
outsb
outsl
pop
dec
or
addr16
cli
push
add
mov
nop
int
xor
das
int
movsb
sub
loopne
and
pop
adc
data16
cmp
dec
enter
int
out
xor
in
mov
loop
inc
jo
jne
jp
sub
push
push
sti
push
fbstp
dec
mov
loop
outsl
mov
adc
aad
bound
add
test
repz
cmpsl
mov
lods
pop
or
xchg
xlat
pop
repz
cltd
js
jb
add
inc
or
lcall
push
mov
jecxz
sbb
add
sub
out
ja
sahf
jge
xorl
xchg
mov
inc
pop
stos
ret
jg
aaa
inc
bound
movsl
sti
data16
arpl
scas
mov
xor
cmp
xor
jge
adc
mov
out
xor
pop
fdivrs
mov
mov
dec
push
dec
mov
fs
add
mov
mov
cmp
sbb
add
pop
sbb
jl
stos
loopne
cmpsb
dec
je
call
sahf
in
sub
stos
stos
cltd
rorl
dec
nop
sbb
std
shll
fwait
xor
cmp
stos
nop
xor
xrelease
mov
sub
icebp
adc
test
sub
push
sbb
push
aam
stc
inc
cmp
scas
inc
jg
mul
sbb
arpl
outsb
ja
dec
xor
fisubrs
and
add
rcrb
inc
and
sub
cwtl
jge
ficoms
inc
roll
xchg
or
xlat
mov
push
test
mov
or
mov
dec
xchg
daa
ret
sbb
aam
notl
add
pop
rcll
pop
mov
mov
xor
mov
lods
clc
lcall
popa
and
fmuls
out
mov
lock
xchg
cli
addr16
xor
cmp
and
add
shlb
outsb
lea
shlb
mov
jecxz
mov
cwtl
xchg
push
dec
pop
xor
cmpl
repnz
jne
mov
or
mov
sbbb
pop
cwtl
sbb
arpl
cs
dec
push
mov
pop
cmp
sub
and
test
out
addr16
lret
or
mov
outsb
aad
adc
vmwrite
or
sbb
mov
arpl
aad
test
add
dec
add
rcl
mov
and
test
add
subb
jle
lds
xor
jno
and
mov
push
jns
mov
int
xchg
sti
fs
jbe
inc
xchg
fs
lods
cmovg
adc
and
dec
jle
mov
push
jae
mov
fcoml
mov
roll
xchg
in
aas
fwait
dec
lea
test
inc
jo
adcb
aas
roll
xor
std
inc
sub
or
add
inc
lahf
sbb
rcrb
lret
jp
in
jae
pop
leave
cmc
rcl
jb
mov
arpl
cmpsl
btr
shrl
mov
mov
push
pop
jl
mov
jnp
push
and
lcall
sbb
loope
addb
cld
lods
pop
arpl
push
inc
mov
mov
dec
cmc
pop
dec
sub
add
xchg
call
mov
rcll
repnz
sbbl
mov
mov
outsb
mov
rclb
sbb
pop
adc
pop
cli
out
stc
mov
inc
cmp
lret
fwait
mov
add
into
clc
dec
xor
push
test
add
xchg
into
movsl
mov
cmp
sub
inc
sahf
xor
jnp
push
test
xchg
or
lret
cmp
jb
lret
pop
xchg
mov
ret
jecxz
subl
mov
sub
je
mov
out
into
imul
push
xor
xchg
mov
dec
icebp
adc
jnp
inc
scas
mov
mov
sbbb
es
lret
sub
inc
xor
mov
mov
in
loope
pusha
mov
lahf
xor
nop
jbe
stc
sub
sub
or
xchg
enter
je
inc
cld
push
es
fwait
push
push
sub
sahf
icebp
fbld
es
dec
stos
xchg
scas
mov
xorl
lods
in
mov
cmpsl
mov
pop
and
cwtl
mov
aaa
aad
cmc
and
scas
cwtl
jne
xchg
xchg
aad
mov
sbb
fcomps
and
xchg
sub
mov
sub
sub
and
les
push
nop
and
in
and
inc
sbb
add
dec
sub
outsl
in
hlt
mov
das
enter
sahf
inc
push
insb
je
pop
mov
insl
and
jo
sti
sbb
push
outsl
in
push
mov
nop
sub
fs
ljmp
and
cmpsl
daa
mov
cmp
add
mov
lcall
mov
stos
int3
mov
or
popf
dec
popf
sbb
cmp
shrl
lahf
fisubs
loope
rcr
jecxz
cli
inc
push
add
mov
pop
es
vpcmov
jl
outsb
test
jmp
and
cmpsl
cmp
cli
in
lret
cmp
dec
jbe
xchg
push
outsb
inc
outsl
aas
jo
and
lds
pop
mov
das
das
fsubrs
and
lret
add
lods
or
pushf
sub
mov
int3
scas
or
cmp
int3
xor
insl
mov
xchg
pop
dec
jbe
out
mov
sub
mov
shlb
mov
xchg
ds
pop
jno
mov
jb
and
push
mov
outsb
mov
imul
push
mov
mov
xor
fistpl
ficomps
mov
jae
test
push
in
scas
xchg
mov
fadd
inc
lock
mov
movsl
mov
shrb
gs
cs
xchg
mov
fimull
fwait
sbb
insb
in
mov
mov
out
push
push
push
into
dec
push
subl
push
inc
pop
sbb
adc
cld
out
lret
push
cltd
jmp
subb
push
rcrb
jno
xchg
fldenv
mov
adc
sti
pop
cmc
shll
mov
or
xchg
cmp
out
idivl
lret
out
mov
loop
sbb
je
out
iret
add
add
xchg
stos
fidivs
cmp
aas
stc
pusha
pop
push
jle
stc
call
cmp
fildll
int
lret
dec
mull
add
enter
fistps
mov
xchg
fs
scas
in
mov
push
push
dec
inc
imul
add
jne
sub
ds
lret
pop
xchg
push
pop
and
filds
jo
js
js
sarl
dec
adc
aam
sub
shrb
add
rcrb
or
cld
mov
mov
fnstenv
add
repnz
addl
call
push
and
jl
xor
pop
lods
icebp
lret
xorb
pusha
ss
fadds
in
sbb
jl
or
cmp
cmp
or
xchg
jp
xchg
sti
lcall
std
andl
pop
pop
jo
sbb
dec
fdivl
xchg
das
shrb
fwait
jmp
jle
sahf
sub
inc
lcall
pop
jbe
hlt
in
out
gs
je
addb
push
subl
xor
push
xchg
inc
lds
add
pop
enter
mov
ds
aam
and
inc
mov
lea
arpl
ljmp
fwait
mov
and
add
jmp
punpckhwd
inc
iret
ljmp
mov
loopne
test
mov
test
insb
mov
xchg
jb
xor
insb
repz
ret
int
dec
test
cmp
aas
add
adc
out
cmp
icebp
mov
jne
fs
push
inc
adc
dec
lret
mov
pop
cmp
sbbb
jg
dec
sarb
scas
or
mov
cmp
pop
lret
es
mov
add
pop
repz
ds
mov
sahf
arpl
pop
js
stc
inc
fldl2e
mov
fstl
int
mov
sti
or
sbb
movsb
sar
pop
and
ret
test
sarl
rolb
adc
iret
mov
dec
daa
pop
xorl
cs
adc
sub
xchg
xor
mov
pop
clc
mov
ljmp
and
cmpsl
cwtl
mov
bound
in
not
dec
adc
flds
xlat
pop
dec
push
fbstp
ss
std
push
ret
fdivr
pop
pop
jle
push
mov
xchg
jle
jl
nop
lahf
push
in
test
mov
sub
or
daa
lock
outsb
push
das
in
daa
inc
mov
adcb
mov
adc
mov
cmp
xchg
aas
sub
mov
xchg
mov
and
or
pop
sbb
jmp
jns
imul
fs
push
out
cltd
fs
mov
xor
jb
pop
cmpsb
in
cmp
sbb
xor
jns
mov
das
data16
push
fiadds
rol
mov
cmp
cmp
comiss
pop
and
int
inc
repnz
pop
sub
in
cmc
sub
sbb
std
lahf
cmp
mov
inc
das
and
gs
movsb
pop
or
adc
mov
push
movsl
mov
or
mov
aad
and
and
and
aaa
divl
jb
ret
icebp
mov
xor
loop
xchg
jo
shlb
lods
insl
and
arpl
adc
dec
addr16
push
jle
adcb
and
add
dec
dec
inc
das
mov
cmp
mov
xchg
popf
mov
and
pop
fsts
push
popa
pop
pop
push
pushl
and
cmpsl
test
bound
ljmp
divb
push
adc
sbb
xorl
mov
mov
dec
loopne
addb
sub
push
popa
and
sub
push
lods
dec
fcoml
into
je
dec
outsl
mov
loop
pop
adc
movsl
dec
movsb
sbb
addr16
jmp
add
pop
pop
mov
lahf
xor
mov
or
fcomps
mov
inc
lods
testl
cmpsb
ret
cmpsl
dec
mov
mov
addr16
mov
push
cmpsb
ret
enter
or
inc
notl
sub
mov
and
xchg
sti
mov
jge
or
fsubrs
popf
mov
sbb
lret
jo
cmp
inc
clc
ss
jecxz
leave
push
pop
adc
xchg
fwait
sub
mov
cmp
das
pop
shll
mov
mov
mov
outsb
mov
paddq
xchg
xchg
xchg
cmp
add
jecxz
stos
push
aaa
fsubrs
adc
in
sbb
pop
roll
test
addr16
push
pop
mov
sbb
cli
mov
dec
push
pop
out
in
mov
add
shll
dec
idivb
and
push
pop
jp
xor
jecxz
mov
mov
lcall
mov
mov
rcrb
mov
enter
cli
jle
nop
arpl
add
push
cmp
jg
xchg
pop
lret
int3
subl
pop
mov
bswap
addr16
iret
insl
mov
push
and
clc
cmp
xchg
xchg
or
xchg
mov
adc
mov
dec
push
inc
jbe
cli
xchg
add
stos
push
xor
iret
add
sbb
adc
inc
dec
ret
sub
insl
push
iret
enter
jmp
mov
out
call
shrl
inc
shrl
cmc
push
stc
inc
adc
sub
ljmp
pop
inc
out
movsl
aaa
sub
and
cmc
add
inc
mov
shll
jns
pop
test
fimull
lcall
xchg
fimull
ficoml
stos
test
xchg
jae
xchg
es
xchg
mov
lods
pop
insl
cmc
push
mov
mov
call
sub
popf
fildl
push
movsl
je
fwait
dec
fwait
out
push
jnp
xchg
mov
sub
jne
add
mov
out
add
push
incl
sahf
sbb
cmp
movsb
loop
xorb
push
xchg
aad
pop
int3
mov
inc
rcrl
hlt
jnp
pop
xor
sbbb
dec
push
sub
cmp
dec
addr16
jno
dec
ret
sahf
idivb
ret
inc
sbb
hlt
jns
adc
popf
and
add
loop
xchg
add
lahf
sbbl
daa
ljmp
fisubs
shr
push
jne
mov
add
jg
fcomps
inc
xchg
cwtl
jmp
push
popf
jmp
xor
inc
xchg
daa
cmp
push
lods
mov
ret
sub
push
xchg
iret
jmp
add
rcrb
and
add
cmp
cmpsl
sti
enter
mov
outsb
mov
hlt
or
push
cmpsb
xlat
jp
jmp
scas
les
stos
das
lea
push
aaa
sub
jne,pn
sbb
loope
pusha
ljmp
jg
dec
test
push
insl
xlat
xchg
xor
int3
inc
sbb
out
test
sub
jnp
cmp
pop
mov
mov
sub
mov
out
mov
mov
daa
xor
ljmp
mov
lcall
or
out
out
jmp
in
dec
arpl
xchg
jnp
dec
mov
inc
hlt
test
fsts
lret
into
add
dec
std
sarb
loope
nop
xor
aam
outsb
daa
subl
or
push
pop
sti
nop
data16
xor
ljmp
add
sarb
sbb
mov
sub
pop
stc
cmp
push
pop
movsb
jge
fwait
and
add
add
rorb
ljmp
test
mov
data16
notb
mov
pop
mov
cmpsb
loop
or
add
or
pop
add
mov
into
adc
add
call
jle
repnz
inc
push
dec
jecxz
test
popa
or
xor
mulb
inc
pop
or
orb
xor
xchg
fwait
shrb
out
decb
push
sub
aas
cmp
mov
dec
sarb
mov
test
adc
push
imul
push
icebp
fistl
sub
xor
lret
mov
pop
push
and
fwait
push
mov
repz
dec
insl
cmpsl
aas
arpl
cld
cwtl
pusha
into
jecxz
add
mov
xor
andb
addb
xchg
add
pushf
jo
sarl
inc
xor
xor
cmpsl
ja
xchg
xchg
mov
movb
mov
je
test
dec
aas
or
loope
test
cmp
lcall
repz
adc
push
add
xor
es
movsl
mov
push
push
jnp
dec
int
mov
jns
jo
cmpl
in
std
lods
pop
subb
xchg
aaa
mov
sbb
adc
xchg
daa
and
push
mov
shr
repnz
or
jecxz
into
scas
sbb
pop
std
into
call
leave
inc
inc
cmp
or
jge
mov
push
fsubrl
xlat
mov
loopne
xchg
adc
daa
rorl
aas
ficoms
outsl
lcall
mov
sbb
scas
rolb
push
pop
jnp
pop
dec
adc
push
adc
stos
sbb
cs
sub
pop
lock
jae
cmpsb
cmp
and
scas
add
lret
mov
int
and
xchg
imulb
xchg
insb
mov
in
mov
add
adc
test
fs
out
or
test
mov
dec
rcrl
xlat
jge
jb
out
jae,pn
mov
pop
repnz
dec
imul
mull
and
bound
data16
stc
jbe
mov
into
jle
icebp
cs
cltd
pop
mov
roll
div
xchg
xchg
add
cmp
mov
sub
je
les
xchg
jb
int3
push
add
loopne
xchg
jmp
shrb
and
pop
gs
jmp
sbb
mov
xor
pop
shr
jmp
frstor
stos
stos
jne
dec
bound
in
test
popa
lahf
cs
jae
cmp
xor
jo
lods
push
hlt
mov
outsl
dec
jae
loopne
aas
xor
cltd
sti
data16
mov
push
push
pop
sbb
mov
mov
fwait
test
adc
xchg
repz
call
mov
subl
push
sub
pop
fisubrl
add
out
mov
fmull
and
and
ljmp
iret
xor
pop
add
and
mov
clc
push
pop
out
mov
ret
popf
cmpb
push
adc
cltd
out
aam
ss
pop
popf
cmc
dec
sahf
jecxz
push
mov
mov
cmp
pop
sub
frstor
add
inc
xchg
xchg
dec
cmp
rol
addr16
sbb
fsubrs
sbb
cli
cmp
add
mov
ljmp
pop
jge
popa
lods
mov
sbb
sub
dec
sbb
cmc
jo
inc
jnp
pop
inc
jle
jle
push
mov
int
add
stos
inc
mov
clc
lcall
pop
sarb
inc
jne
xchg
cmc
andl
aam
enter
push
ss
pop
pop
out
xor
sub
filds
jle
sub
dec
dec
push
adc
xchg
cmpb
mov
mov
enter
jno
shll
jmp
jmp
enter
fisubs
adc
les
test
mov
ljmp
jb
sbb
inc
jo
testb
cmp
scas
imul
mov
sbbl
sbb
ret
ljmp
int3
xchg
fildl
adc
ds
insb
mov
cli
pusha
je
ret
sbb
arpl
lcall
insl
pop
out
gs
sbb
xor
into
push
das
dec
sub
sbb
leave
in
iret
sub
ja
shlb
test
test
jge
xchg
add
mov
call
in
jno
inc
mov
loop
mov
in
pop
sub
jmp
xlat
fdivl
les
dec
ja
fcomp
arpl
adc
mov
fildll
lahf
scas
gs
push
lds
push
or
cmpsl
mov
jbe
and
cmp
push
sbb
push
cmpsl
cmpsb
icebp
repz
or
int3
cli
jb
mov
out
or
pop
cmpsl
add
mov
xchg
mov
and
fdivrs
or
mov
aaa
nop
ffreep
push
pop
bound
sub
fcoml
movsb
pop
leave
mov
dec
inc
cmp
icebp
scas
pop
enter
in
mov
in
sbb
mov
pop
lahf
push
into
jp
push
out
mov
or
ret
push
sar
data16
sbb
cmc
jle
sub
mov
lcall
pop
ja
inc
sub
out
cmp
icebp
or
push
and
dec
std
xchg
sub
pop
jnp
outsb
jg
cmp
loop
mov
dec
cltd
in
xchg
mov
push
add
movb
jnp
cmp
cmp
push
xchg
mov
add
push
lods
xorb
lret
sub
hlt
out
dec
movsl
inc
sbb
jmp
cmp
stc
or
jo
xlat
lret
call
aad
and
aas
mov
gs
sub
aaa
adc
cs
and
in
jmp
inc
push
bnd
fcmovnu
aas
cld
jg
mov
fs
cmpsb
div
mov
jmp
pop
test
pop
pop
fisttps
rol
pop
iret
adc
xlat
mov
add
fcmovnu
scas
ret
dec
cmp
mov
loopne
movsb
pop
and
push
add
jo
repz
mov
cmp
and
add
push
xor
or
push
dec
in
pop
icebp
cltd
pop
mov
add
pop
out
mov
lret
sub
aam
fs
bound
fdivs
mov
jp
shl
and
fdivrs
or
jo
nop
mov
mov
ret
push
jb
sti
mov
dec
xchg
cmpsb
mov
inc
nop
lcall
jmp
xor
xchg
xlat
rorl
aad
lret
movsb
fld
bound
mov
cmpsl
inc
dec
ret
aam
adc
ds
sbb
inc
add
fsts
push
divl
fistpl
test
enter
lahf
std
rolb
sbb
mov
push
test
or
sbb
or
mov
jne
push
stos
stos
push
mov
stos
and
jns
inc
imul
nop
mov
inc
push
add
adcl
sbb
inc
shrb
insb
mov
inc
jne
xchg
push
jmp
dec
jg
dec
test
lods
int
cmp
scas
pop
pop
into
sub
pop
arpl
jns
fucomip
or
test
jo
cli
sub
adc
fs
loop
push
inc
and
and
rclb
adcl
pop
fcmovne
dec
mov
dec
aad
andl
lock
mov
dec
mov
and
xchg
pop
ret
xchg
mov
aam
addb
push
testl
jbe
mov
movsb
in
shrb
fwait
jo
xchg
lods
ljmp
movsl
or
sub
jbe
push
sarl
cmp
mov
mov
and
dec
rclb
imul
push
fisttps
or
sbb
mov
add
adc
jecxz
stos
mov
xor
xchg
in
adc
int
imul
fistps
or
or
sub
imul
or
popa
xor
push
in
ja,pn
movsb
xlat
outsb
movlps
inc
shlb
add
mov
mov
pop
movaps
inc
fsub
shll
sbbb
push
mov
pusha
pop
insl
dec
jbe
js
fdivl
mul
rol
repnz
scas
mov
jbe
push
leave
mov
ljmp
imul
shrb
jle
fwait
aam
test
rcll
lds
sub
xor
je
flds
cmp
sbb
daa
jnp
push
aad
mov
iret
loope
aas
mov
loope
lock
shl
aaa
add
cmp
add
aas
lahf
mov
jo
inc
push
call
test
pop
out
mov
subb
std
and
pop
jb
int
leave
inc
jae
adc
jmp
ret
add
adcl
in
dec
ret
xor
int
sbb
dec
inc
cmp
out
aas
and
jbe
inc
into
addr16
dec
dec
xchg
push
xchg
dec
xor
dec
mov
cmp
pop
and
push
cmp
enter
adc
loope
lcall
daa
push
inc
push
xchg
stc
push
popf
loope
pop
jmp
push
popa
and
ljmp
xchg
lret
fidivrl
dec
cmp
fistpl
sbb
shl
adc
and
and
in
fucomip
imul
inc
mov
inc
fcomp
addl
shrb
shlb
shll
hlt
mov
icebp
push
sub
daa
loop
jecxz
xchg
dec
std
pop
call
mov
js
inc
dec
std
fistl
push
repnz
dec
mov
sahf
sbb
pop
sub
scas
daa
in
push
xchg
aaa
in
cltd
push
cltd
pop
sbb
mov
clc
hlt
fildll
push
in
sub
lsl
add
jb
adc
xadd
cmp
mov
inc
fwait
mov
mov
dec
jle
cmp
mov
ds
int
popa
ret
cltd
xchg
movsb
out
or
jp
xchg
stos
xchg
push
aam
xor
mov
lds
idivb
push
mov
mov
sbbb
add
pusha
mov
scas
jbe
jbe
subl
jge
test
shlb
loope
mov
push
xchg
adc
mov
xor
jo
rclb
leave
fisttpll
pop
sub
shl
xchg
mov
inc
push
rorb
in
cs
mov
xlat
adcl
push
inc
sarl
ss
loopne
sti
movsb
test
cmpsb
jne
mov
fmul
push
adc
fs
jne
add
jno
mov
mov
and
sbb
inc
out
ret
or
mov
test
call
fs
jecxz
xor
lods
push
dec
and
push
dec
mov
jg
pop
imul
sbb
lret
ret
add
or
lcall
inc
adc
mov
imul
insb
mov
xchg
inc
sbb
jbe
cmp
sar
pop
test
sbb
mov
xchg
decb
movl
into
pop
hlt
pop
push
or
popf
xchg
es
in
adc
jne
sub
ret
outsl
cmp
leave
cs
xchg
mov
and
and
inc
es
jle
test
inc
push
add
mov
mov
lret
mov
dec
and
mov
in
shll
xchg
orb
mov
push
mov
test
push
push
mov
sub
and
lock
aas
or
int
jle
data16
mov
mov
push
dec
mov
cmp
lock
xor
sub
fisubrs
jg
xchg
cltd
pop
lret
in
or
and
js
pop
fwait
xor
inc
stos
shl
jne
pop
jns
movntps
adcb
out
ds
sub
jmp
or
ret
testl
adc
jge
lods
in
clc
out
mov
bound
lret
jl
jg
adc
jnp
sub
mov
push
sti
iret
add
adc
outsb
mov
cmp
out
inc
int
arpl
pop
cmpb
sub
lock
fst
mov
fs
imul
mov
and
cmp
inc
scas
mov
or
nop/reserved
xchg
lock
adc
dec
testb
int3
ljmp
fucom
adc
mov
or
call
xlat
das
rcrb
xchg
dec
push
and
das
jne
not
cmc
fistpll
dec
stos
xchg
test
std
mov
push
lods
sub
mov
jle
pop
mov
outsl
lock
es
mov
js
inc
pop
push
pop
fwait
cs
mov
cmpb
pop
and
int
sub
xor
subl
test
rolb
aam
movsl
arpl
pop
push
cmp
or
or
sbb
test
push
dec
mov
bound
mull
cmp
fsubrs
lods
sbb
arpl
cs
cmp
mov
rcll
adcb
or
jae
cmpl
jle
ljmp
addr16
push
sub
in
into
xor
jae
push
cmpl
jno
xor
shrb
addr16
sbb
clc
in
aaa
daa
call
subb
into
sub
les
test
les
pop
negb
sarb
dec
sub
and
cltd
xor
cmp
sub
cltd
cmpsl
rolb
je
imul
adc
dec
jne
fwait
sbb
jle
dec
fs
xlat
and
sub
pop
repz
lods
cli
mov
movsl
sub
lds
ss
jp
ja
bnd
imul
xchg
adc
out
push
pop
push
es
xor
pop
lods
out
jne
test
fwait
shll
adc
ljmp
pop
and
mov
xchg
lahf
push
mov
nop
adc
cmp
shr
dec
fcompl
aaa
leave
pusha
jb
pushf
cmpsb
push
xor
add
or
clc
rcrb
negb
test
and
inc
pushf
shlb
cmp
iret
out
nop
pusha
ljmp
sbb
mov
rol
ja
es
or
and
jmp
cmpsl
test
sub
in
insb
or
sub
cwtl
stos
mov
xor
sub
mov
inc
iret
aad
sbb
sub
sub
push
in
add
popa
or
push
arpl
push
in
add
push
inc
sub
dec
add
insb
in
xor
xor
pop
and
int3
and
jbe
sbb
scas
xchg
notl
repnz
push
outsl
mov
outsl
xor
aad
pop
mulb
mov
mov
jp
cs
movsl
xor
jne
cmp
xchg
shll
jne
jp
add
cmp
sar
lret
inc
call
addr16
sarl
xor
xor
jo
ljmp
and
testb
roll
ss
sbb
scas
push
mov
int3
adc
sarl
inc
test
cmpl
pop
mov
stos
add
imul
outsb
cs
jp
and
movsl
jns
pop
daa
sysenter
ss
jo
out
jne
out
lods
repnz
pop
xlat
fstps
fistpll
and
xor
mov
mov
out
jle
xchg
nop
mov
sub
movsb
popa
pop
push
lods
mov
rolb
sbb
fdivr
xchg
ror
push
adc
mov
pop
fwait
stos
xchg
add
push
sub
cmpsl
fcomip
sbb
push
xor
xchg
sti
xchg
pop
fdivp
loop
pop
fidivrs
pop
lahf
inc
sahf
pop
out
sbb
push
shrb
clc
shll
push
stos
orl
repnz
imul
out
push
lret
mov
adc
ret
adc
test
mov
movsb
adc
push
popf
pop
push
push
pop
pop
rcrl
and
outsl
ljmpw
cwtl
test
bound
hlt
adc
imul
je
push
insb
fwait
or
mov
sbb
iret
ljmp
mov
loopne
insb
pop
inc
and
sub
inc
dec
in
mov
xor
ficoml
adc
push
sarl
in
aam
inc
nop
push
or
pop
sub
xlat
loope
push
dec
cmc
add
mov
imul
ret
push
xor
add
pop
in
adc
inc
lahf
push
mov
aaa
jnp
dec
lret
pop
test
cmp
push
mov
sub
movsb
pop
iret
pop
int
adcb
add
lods
in
loop
pop
mov
or
loopne
sub
pushf
icebp
pop
cmp
addr16
in
cmc
push
pop
aam
stos
xchg
std
test
pop
subb
and
mov
mov
mov
int3
jg
pop
xor
inc
and
sbb
xchg
getsec
arpl
aaa
fisubs
xor
aas
ss
dec
outsl
into
inc
test
sbb
jmp
es
mov
lret
aad
sti
xor
test
jp
cmpsl
cmpl
mov
add
cmpxchg
and
push
addr16
or
xchg
xor
dec
lea
and
std
or
jne
cli
leave
psubd
testb
ljmp
or
dec
rclb
aad
sub
sub
lret
mov
xlat
andl
sub
popf
dec
sbb
mov
cmp
mov
mov
lods
hlt
xchg
push
outsb
mov
jns
xlat
jb
fsubrs
into
push
sbb
ljmp
add
sbb
in
movsl
inc
and
jb
push
push
int
or
add
push
xchg
movsl
sub
fcom
jge
add
fs
xor
dec
loope
in
xor
xor
mov
jg
adc
rorl
ficompl
add
or
loopne
sub
lods
pop
sbbb
adc
mov
lahf
jmp
mov
test
rolb
sub
stos
pop
pop
sbb
xchg
arpl
pop
sub
test
cmp
aaa
dec
cld
pop
scas
push
add
jle
pop
std
fiadds
pop
or
mov
fwait
stos
pushl
cwtl
jmp
mov
out
sub
xlat
out
je
adc
add
pop
cmp
fldl
cmp
push
or
adc
push
pop
movsl
lahf
and
mov
pusha
jno
pop
adc
ja
cmp
int
pop
sub
jne
loop
pop
push
pop
xor
enter
and
sbb
adc
cmpsl
or
mov
lea
jl
mov
test
loop
arpl
cs
sbb
jne
push
popf
cmp
or
pop
in
pusha
rclb
sahf
clc
lahf
xchg
xchg
mov
mov
cwtl
mov
xor
add
out
add
cmpsb
int
jp
cli
jl
fwait
dec
cs
xor
andl
sub
and
out
shlb
iret
dec
pop
nop
adc
inc
aaa
mov
cs
xor
in
lds
sahf
dec
stos
std
sub
mov
std
jp
jnp
out
fwait
add
bound
mov
fs
das
nop
sbb
insl
jmp
push
sbb
adc
mov
fistps
movl
pop
push
loop
jb
pop
in
ja
mov
test
inc
lcall
xchg
add
arpl
mov
push
cs
dec
inc
leave
lock
push
stos
mov
push
push
stc
fiaddl
sub
aaa
jno
dec
mov
sbb
imul
insb
dec
repnz
sti
icebp
add
mov
xor
mov
xor
hlt
jmp
push
shl
sub
aam
das
das
daa
add
ss
lcall
fucomp
mov
xor
adc
adc
mov
or
popf
or
sbb
stos
add
cld
scas
cmp
incb
jae
sbb
daa
leave
les
jns
dec
push
lcall
mov
and
adc
popa
mov
cli
mov
or
pusha
mov
fdivl
jno
mov
and
jo
lods
cld
std
cmp
les
adc
dec
aad
and
mov
pop
cwtl
fisttpl
outsl
cmp
jge
inc
xor
sbb
xlat
add
aas
jmp
sar
loopne
imul
icebp
cmp
or
out
mov
sete
outsl
pop
pop
sarl
sbb
and
push
test
loopne
pop
or
jae
push
adc
sbb
data16
push
and
or
add
std
mov
push
stos
movsb
add
mov
fimuls
inc
gs
mov
cmp
push
cmp
and
jmp
xchg
rcr
xor
in
xor
or
ljmp
mov
dec
stos
lahf
and
mov
inc
jmp
cmp
lods
leave
aam
and
lcall
push
sbb
jns
xchg
rorl
shlb
cs
xchg
and
nop
loopne
insb
test
outsb
inc
lret
adc
jno
packuswb
cli
mov
fs
inc
pop
mov
fldl
mov
xchg
jae
int
idivb
das
out
ficoms
jle
lock
cmpsb
shlb
fbld
push
mov
sbb
sahf
stos
out
enter
inc
mov
mov
sub
xchg
test
cmp
in
imul
sub
dec
lret
fistps
xor
fsts
dec
add
or
ljmp
push
fcmovbe
xchg
imul
popa
call
cmp
test
inc
ficomps
stc
leave
xchg
test
movsl
mov
dec
inc
imulb
rcr
and
fwait
std
cmc
sbb
sub
xor
sahf
cmp
inc
mov
les
and
gs
adc
xchg
sbb
cmp
push
int
iret
adc
or
bound
push
mov
sub
ds
fbstp
and
xor
hlt
mov
mov
scas
xor
xchg
pop
out
mov
and
ds
hlt
lea
subl
pop
ret
push
add
cli
xor
cmp
and
xor
mov
or
sub
mov
pop
loop,pt
bound
lock
cltd
inc
lahf
xor
pop
jge
and
push
cmp
clc
std
pop
test
sub
popa
ficomps
fisubrs
es
insb
out
push
mov
mov
pusha
in
jo
dec
cmp
add
xor
pop
mov
into
push
fwait
nop
loopne
mov
addr16
pop
push
xor
dec
in
sub
cmp
subb
xchg
xchg
aad
pop
test
add
adcb
fwait
adc
adc
adcl
push
mov
jae
cmp
ret
dec
jg
or
ds
popa
inc
add
jo
ret
movsl
mov
mov
jmp
mov
inc
sbb
stc
fsub
lcall
cmp
sub
cmpsl
ds
out
out
fidivs
mov
ror
ficoms
ds
fcoml
jbe
divb
aad
lock
dec
out
mov
jbe
imul
push
dec
jl
lret
push
mov
jmp
movsb
ret
lret
xchg
cmpsl
lock
mov
jno
test
out
loop
rcl
in
sbb
or
mov
inc
rcr
dec
jecxz
cmp
lsl
and
mov
xor
cmp
adc
movd
leave
das
inc
mov
js
mov
sbb
mov
push
xor
sahf
addr16
add
mov
or
or
or
out
fdivl
push
xor
push
gs
cmp
inc
lahf
jecxz
popa
mov
inc
iret
pusha
cli
cmpsl
xor
hlt
outsb
and
ret
push
push
xchg
outsl
js
repnz
pop
shll
loop
xchg
mov
jns
mov
mov
push
pushl
mov
push
repz
aam
movsl
je
or
mov
popa
lret
sbb
loop
shl
mov
inc
jno
xchg
daa
mull
addb
arpl
cmpsb
dec
sbb
inc
dec
in
push
xchg
sub
rcrb
adcl
lea
adc
jb
test
inc
push
repz
rcr
jle
xchg
xlat
dec
xor
pushl
iret
lods
mov
mov
or
mov
xor
adc
loope
sbb
repnz
push
xchg
shll
out
or
push
int
dec
mov
inc
pop
loopne
pop
mov
inc
push
insb
faddl
sub
cwtl
cli
inc
dec
xchg
fimull
lods
leave
xor
ret
in
std
cmp
imul
cmpsl
mov
jns
or
scas
cmpsb
fdiv
pop
cld
or
sbb
dec
xchg
mov
sbb
pop
mov
and
sub
and
mov
mov
outsl
jo
ds
pop
mov
int3
mov
sbb
adc
sbb
outsl
ficomps
dec
ds
out
xchg
mov
cmp
in
mov
push
fsubrs
outsl
push
rorb
xchg
adc
sbb
push
gs
xor
sbb
fmuls
fidivrl
jae
std
cmp
mov
mov
mov
dec
dec
je
push
mov
inc
lret
add
arpl
dec
cld
jo
icebp
mov
push
adc
push
int3
loope
sbb
outsb
mov
dec
mov
sbb
push
sub
cli
shrl
pop
stos
ret
leave
dec
sub
pop
frstor
fcmovb
sbb
das
rolb
pop
cmp
sbb
jmp
push
mov
dec
andl
mov
fcoml
add
pop
xchg
aad
jmp
int3
jmp
fwait
xchg
mov
inc
push
stc
adc
cmpsb
push
sbb
add
inc
pop
mov
cmp
pop
je
in
fs
jo
ja
xor
mov
sbb
rclb
rclb
pop
cmpsl
sub
mov
into
lock
xor
sti
adc
stc
mov
xchg
sbb
jae
lods
aaa
loope
ret
jle
cmp
or
loope
push
mov
push
pushl
add
out
xchg
dec
das
cltd
xchg
stos
xchg
mov
popf
data16
jns
pop
movsl
add
shlb
xchg
xor
test
iret
nop
push
inc
ljmp
movsb
sub
in
stc
add
add
jne
mov
shlb
leave
pop
push
gs
inc
cmp
sub
add
xor
and
jle
pop
jmp
lock
push
cmp
out
lahf
mov
sbb
dec
or
movsl
xlat
adc
arpl
pop
loopne
sbb
test
mov
pop
fildll
roll
sbb
lods
cs
int
add
and
js
sub
mov
mov
fldenv
jg
in
pop
movsb
insb
insb
xor
cmp
mov
sbbl
dec
xchg
cwtl
fmull
jmp
mov
dec
cli
dec
mov
mov
ds
fdivl
insl
or
pop
push
cmp
rcrb
sbb
inc
stos
stc
push
lcall
mov
insb
test
pop
xor
adc
fwait
rcrb
or
dec
out
jmp
fimull
pop
mov
mov
lret
push
jl
add
dec
inc
add
fdivs
mov
jno
loop
dec
enter
out
inc
cmc
shl
push
in
repnz
clc
fstps
push
call
xlat
and
insb
jmp
add
ss
cmp
sub
in
and
out
mov
pop
push
lods
inc
cmc
dec
fnstcw
sub
adc
es
xchg
loopne
push
fistl
jecxz
and
js
insb
fstps
push
pop
xchg
js
fdivs
out
and
fcoml
loop
rorb
or
orl
push
lret
inc
push
out
mov
or
outsl
push
push
dec
insb
add
mov
or
sub
ss
seta
fwait
sbb
stos
pop
sbb
int
sub
repz
push
popf
js
sti
mov
push
jb
inc
stc
jg
lods
loopne
xchg
cmp
jnp
adc
jge
add
std
jo
in
ja
js
adc
inc
push
mov
or
or
xchg
fcomps
lock
stos
push
in
jne
fwait
jne
insl
insb
push
ds
cmc
out
sbb
leave
push
lret
jnp
lret
and
addl
outsb
into
jns
xchg
push
icebp
and
mov
ret
out
sub
movsb
dec
movsl
push
xchg
jmp
scas
or
add
push
or
in
add
push
ljmp
mov
das
fidivl
lret
test
inc
dec
dec
scas
out
xchg
and
and
sbb
inc
int3
inc
push
insl
mov
inc
cmp
sti
sbb
fistpll
je
test
dec
and
popf
or
add
cmp
idivb
enter
int3
and
sbb
jbe
repz
sbb
xchg
in
stos
xchg
pop
addr16
add
xor
adc
push
shll
into
fisubl
outsl
fists
decl
pop
cmc
test
jnp
jb
dec
jbe
xor
shlb
xchg
xor
movb
ss
lock
dec
fwait
pop
jmp
bound
add
insb
mov
and
sub
xchg
jle
in
push
imul
inc
lret
xchg
xchg
dec
mov
cmp
xchg
fists
pop
shll
jl
out
mov
lret
pop
mov
mov
insl
add
out
ja
add
push
cli
adc
pop
cwtl
sbb
shrl
mov
push
insl
jecxz
imul
xchg
adc
jge
shr
iret
push
orb
ret
pushf
mov
jno
push
xor
into
jno
loop
xorb
mov
inc
jns
jmp
fwait
data16
mov
inc
and
xchg
insb
sbb
gs
cmp
jbe
lret
inc
rol
dec
imul
out
ds
jo
fidivrl
cld
xchg
ret
cmp
xchg
mov
sti
pop
adc
mov
sti
cmp
lret
and
cltd
rcrl
lds
inc
fsubp
jbe
mov
gs
cltd
and
sub
dec
push
sar
jne
push
enter
mov
jmp
test
aam
je
dec
mov
xchg
jb
xor
sbbb
fdivp
xor
adc
cmp
fmuls
mov
hlt
addl
movsl
insb
dec
and
jns
call
pop
xchg
or
xor
pop
sbb
ret
es
hlt
pop
jne
out
mov
jecxz
xchg
cmp
scas
inc
std
cld
int3
hlt
push
lahf
jno
push
sub
fs
push
das
comiss
cli
mov
psubusb
test
inc
scas
je
jmp
fdivr
adc
cmp
sub
clc
loope
push
int
ljmp
repnz
or
lods
push
jl
ret
mov
mov
pop
aas
stos
in
sarb
enter
dec
push
data16
jbe
loop
dec
push
cmp
lret
cwtl
scas
adc
push
arpl
fs
or
sub
pop
sbb
and
mov
lret
imul
xchg
movsb
mov
jae
call
mov
push
push
lods
test
jge
call
or
into
mov
ret
in
push
sbb
insl
aad
inc
and
dec
ja
push
pop
leave
sbb
cmp
test
in
xor
lock
outsb
xor
mov
or
jno
shr
mov
int
fisubl
nop
push
push
mov
sub
ficompl
add
hlt
aas
adc
and
inc
nop
jbe
pop
lahf
adc
fisubrl
in
lcall
dec
int3
dec
or
push
adc
rorb
aad
xchg
sbb
add
popa
sahf
push
std
std
repz
push
add
stos
in
aaa
andl
jge
stos
cmp
ret
pop
push
lcall
ficoml
sbb
stc
jmp
inc
adc
mov
or
and
pushf
ds
jbe
lods
stc
xor
js
ljmp
add
packsswb
dec
or
sub
or
icebp
mov
cwtl
xor
scas
cmp
push
or
pusha
dec
imul
push
loop
fs
es
fisubl
mov
out
adc
lea
push
mov
cli
ja
jo
and
pop
cmpsl
xor
call
xchg
sti
xchg
sahf
jp
es
das
xor
jo
lea
outsl
inc
mov
push
xor
or
mov
fsubrs
push
mov
adc
xchg
movsl
adc
jle
and
cmpsl
andl
std
mov
pop
mov
xor
sbbb
or
mov
aad
sbb
fnstcw
loop
and
pop
cli
negl
jne
pop
sbb
addr16
jno
xchg
aad
loop
sti
int
test
daa
lahf
push
aas
push
bound
mov
bound
and
fisubrs
jb
and
xor
or
mov
in
sbb
push
push
mov
loopne
mov
add
or
ss
jecxz
sar
mov
xlat
push
ljmp
push
lea
cmp
in
push
jg
into
cmp
pop
sub
outsl
xor
jns
dec
outsb
loopne
jg
jae
mov
cmp
inc
rep
xor
sbb
sub
and
mov
imul
jmp
jnp
cmp
xor
lcall
sub
push
movsb
push
mov
cmp
fdivr
cmp
sub
pmuludq
fwait
pop
loope
sbb
jnp
dec
pop
mov
repz
mov
test
test
dec
dec
mov
fwait
out
inc
loope
loopne
test
fistl
dec
mov
shl
jg
inc
cmp
jp
pop
js
push
push
xchg
cltd
push
pusha
les
call
xchg
outsl
ljmp
cmp
iret
adc
and
jnp
or
ds
sbb
mov
fisubrs
inc
incb
pop
sti
xchg
cld
fistps
lahf
xchg
adc
lret
mulb
xor
insb
dec
fs
mov
fimull
jo
popf
sub
push
pop
orb
test
xchg
lret
sub
in
in
jbe
test
cmp
and
fidivrl
das
mov
in
pop
mov
jecxz
insl
mov
clc
sub
pop
aaa
sbb
loope
stc
fcoml
mov
cmp
xchg
test
pop
addr16
imul
inc
aad
push
mov
push
or
adc
xchg
push
inc
or
dec
or
imul
lds
mov
pusha
pushf
dec
push
aaa
jg
xor
pop
hlt
or
shl
pushf
call
cmpsb
jmp
lock
mov
hlt
jnp
rcrb
pop
test
or
pop
push
push
movsl
cmp
daa
cmpsb
mov
shlb
dec
mov
lods
pop
nop
add
hlt
cmc
sub
std
cmp
dec
xchg
cmp
aad
cmp
push
xor
pop
in
sub
mov
push
adc
lds
jecxz
out
sbb
xchg
pop
stos
dec
idivb
inc
push
scas
lret
int
movsl
xor
sbb
lock
js
cmp
mull
out
out
es
sbb
push
push
sbb
out
gs
imul
xor
movb
mov
pushf
lods
popa
in
pushw
loopne
popf
pop
mov
mov
clc
mov
add
mov
addl
leave
dec
mov
add
std
push
andb
pushw
daa
inc
xlat
outsb
or
inc
icebp
outsb
aas
inc
or
pop
fisubrl
and
dec
faddl
stos
add
push
adc
sbb
shl
or
cmc
std
xchg
jge
iret
pop
cmp
or
lahf
push
jnp
pop
ja
push
or
jmp
mov
pop
in
mov
subl
or
inc
jge
pop
and
mov
mov
jecxz
and
and
lret
pusha
and
aad
inc
push
testb
pop
mov
dec
jo
arpl
pusha
dec
dec
es
or
pop
push
mov
mov
js
iret
push
sbb
repnz
pop
popf
jne
push
sub
aam
repnz
dec
mov
or
dec
fwait
pop
jg
iret
cmp
cwtl
dec
cmp
jno
cmp
xor
xor
mov
sarb
lea
fisubl
jmp
add
out
mov
inc
xor
ds
dec
jmp
lods
jge
jnp
xor
adc
aas
test
sbb
inc
jecxz
mov
fbld
movsl
inc
std
jp
jle
loopne
jl
inc
mov
out
jg
add
push
clc
adc
push
pop
mov
mov
or
or
push
je
dec
fildll
std
fsubs
adc
movsb
in
mov
xchg
mov
inc
mov
std
sti
mov
add
out
std
aaa
mov
lea
mov
lods
test
xor
jp
push
mov
or
shrb
pop
add
xchg
xor
cmpsl
clc
lock
adc
int3
divl
sahf
je
xchg
gs
iret
pop
inc
pop
aam
sub
in
scas
push
stos
mov
loopne
rclb
push
ficoml
pop
negb
sbb
aam
adc
xor
jmp
ret
adc
pop
xchg
adcb
cmp
mov
aaa
fidivl
mov
inc
in
out
cli
lcall
test
or
movsb
mov
mov
fcmovu
jns
sbb
sub
into
test
and
enter
call
and
xchg
ret
mov
nop
jnp
adc
loop
mov
push
and
mov
test
insb
stc
fnstcw
mov
mov
sbb
lret
stc
xlat
mov
add
in
jge
lock
adc
inc
out
sbb
sub
dec
dec
leave
push
pop
push
movsl
or
inc
rcll
test
pop
push
fisubrl
lds
popa
or
mov
push
or
adc
push
ficoml
loop
dec
push
xor
sbb
das
fidivl
push
fisubrs
sbb
xchg
inc
lods
out
xchg
mov
pop
idivb
mov
mov
lahf
fmulp
mov
movsl
push
test
xchg
dec
dec
loope
push
test
pusha
sar
int
je
mov
jle
mov
cmp
es
mov
mov
or
pop
or
shr
icebp
imul
mov
in
fdivr
gs
mov
and
cs
and
iret
insl
cltd
sbb
push
mov
mov
jg
iret
push
xor
jecxz
sbb
pushf
xchg
pop
test
mov
inc
insl
das
sbb
jnp
mov
mov
movsb
jno
out
call
std
push
jp
js
pop
cmc
in
mov
xor
mov
ds
cmp
mov
sbb
pop
jb
stos
pop
jmp
arpl
add
jl
xchg
imul
dec
in
adc
jnp
data16
in
push
and
scas
out
add
and
and
movsl
pop
dec
or
shll
xchg
push
add
movsb
sti
mov
scas
mov
jbe
dec
fisttpll
bound
xchg
dec
adcl
and
popf
stc
sbb
xor
mov
popf
notl
xchg
popa
sub
xchg
call
pop
or
xchg
repnz
popf
sbbb
scas
inc
push
add
stc
push
jmp
loop
jae
add
jno
inc
insb
sub
es
arpl
cli
or
in
mov
sbb
dec
push
in
add
hlt
out
mov
dec
xor
xchg
pop
cld
int3
mov
aam
or
sub
push
popf
mov
push
mov
cmpsb
aaa
pop
divps
mov
pop
shlb
insb
cld
in
cmp
lods
adc
xchg
fisubrs
mov
jecxz
mov
xlat
inc
call
mov
rcrl
add
xor
mov
dec
mov
test
in
sbb
ss
iret
jmp
and
xchg
mov
cmp
dec
cmp
xchg
mov
cmc
lret
sahf
jae
jbe
adc
or
push
aam
out
xchg
aaa
fsubs
xor
xor
push
pop
cmp
xchg
mov
sbb
test
lret
dec
push
pop
lcall
dec
and
int3
or
push
xor
ret
je
jnp
jp
xor
push
push
cld
mov
sub
or
int
adc
inc
add
pop
repz
cmp
pop
add
cmp
mov
mov
adc
fsubp
xor
add
xchg
push
pop
pop
mov
mov
je
fsub
fstps
ss
fisubs
sbb
push
xorb
and
cmpsb
sub
jb
sbb
or
xor
mov
pusha
mov
cmp
cli
rcl
jo
dec
icebp
repz
xor
iret
rcll
inc
jg
and
scas
gs
mov
mov
xchg
outsl
int3
jg
xchg
cmp
sahf
lds
and
imul
cmp
cmpsb
jne
mov
jge
rcll
inc
mov
les
addb
add
filds
movsl
jo
sub
sbb
xchg
mov
push
call
imul
sbb
jp
jle
outsl
testb
mov
add
fs
lock
push
mov
shl
mov
adc
inc
scas
into
mov
jns
std
cmp
rcr
cli
stos
shr
push
sbb
lret
sarb
fisttpl
or
imul
lret
das
fisubrs
push
movsb
idivl
ljmp
scas
jp
pop
jge
idiv
int
dec
icebp
cmp
adc
add
mov
aas
mov
dec
popf
xor
lret
aam
pop
mov
jns
dec
mov
dec
jecxz
test
or
popa
pop
inc
cltd
stos
dec
pop
push
sub
inc
cwtl
leave
jge
sub
jecxz
xor
xchg
sub
pop
sbb
push
out
aam
jmp
push
lods
mov
adc
inc
dec
push
loope
jl
lahf
adc
sahf
push
std
jg
inc
fwait
mov
cli
loope
pop
mov
test
shl
push
jecxz
lret
pop
rol
dec
int3
and
pop
push
mov
es
loope
pop
in
push
mov
cwtl
sbb
pusha
mov
ret
cmpl
call
mov
sbb
xchg
push
inc
xor
pushf
sahf
ss
inc
dec
sbb
aam
pop
pop
inc
pop
test
or
pop
fisubrs
sub
add
testl
or
and
push
daa
outsl
stc
divb
dec
push
jecxz
cmc
rcrl
ja
adc
sub
lahf
mov
inc
daa
sti
or
fimuls
rorb
push
mov
cmpsb
dec
mov
cld
and
das
lret
inc
gs
ss
or
pop
insl
xlat
push
pop
dec
loopne
jle
adc
adc
pop
mov
adc
and
dec
sub
sub
mov
test
adc
inc
lods
jno
ret
jb
test
jmp
mov
js
imull
mov
mov
sbb
fstpl
andb
divl
lods
mov
or
push
dec
push
vpbroadcastw
rolb
jns
aad
stc
insl
mov
and
bound
rcl
sqrtps
ret
and
sti
popa
push
xchg
test
lods
mov
cmp
pop
in
stos
lret
rcr
and
fldcw
sahf
add
into
jge
outsb
fnstenv
jo
movsl
iret
inc
int3
lcall
ljmp
push
add
gs
shr
push
inc
xchg
add
aam
cmp
sub
mov
repnz
inc
sarb
xchg
bound
fistl
xchg
or
push
fstp
inc
mov
add
popf
add
lea
in
stos
push
shrb
mov
mov
dec
pusha
in
loopne,pn
add
outsl
xchg
cmp
mov
lcall
jnp
pop
xchg
push
inc
or
add
sub
mov
jnp
inc
xchg
les
movl
and
in
jne
fyl2xp1
jp
lods
sub
stos
sti
loopne
cltd
xchg
push
enter
fldenv
popa
adc
xor
pop
pop
jg
add
mov
cmp
xorl
and
testl
sbb
mov
cmp
pushf
lods
mov
sbb
xchg
adcb
ss
fldt
jb
add
mov
loop
shrl
rcrl
mov
leave
insb
sahf
dec
fistpl
sbbb
orb
push
push
add
or
out
loop
mov
adc
les
or
addr16
imul
sub
cmpb
cmc
cmpsl
stos
inc
stc
roll
rcl
ds
inc
paddq
and
adc
mov
std
mov
mov
popa
cmpsl
test
lock
loopne
loope
scas
add
test
sub
xor
dec
jl
stc
mov
lcall
lret
lcall
bnd
mov
movsl
jecxz
jo
popf
xchg
mov
sub
lret
or
dec
push
xchg
je
cli
inc
rorb
pop
sbb
imul
outsl
sbb
lcall
scas
add
sub
adcb
xchg
add
das
ret
jae
jnp
mov
cmp
arpl
xor
sbb
xchg
adc
sbb
sbb
repnz
sbb
out
xchg
xchg
pop
dec
bound
adc
xorl
add
dec
mov
fs
popf
mov
int
mov
outsl
mov
testb
ds
aas
int
cmpsb
pop
xchg
clc
fsin
sub
repnz
aad
pop
popa
lret
lds
ljmp
pop
cmp
push
aam
aad
add
add
adc
rorb
clc
cmc
ret
out
xor
adc
jo
cmc
daa
add
dec
movsb
inc
mov
cli
mov
hlt
dec
jo
and
push
test
xor
mov
cmp
popf
sub
cmp
mov
cmp
or
out
jbe,pt
cmp
enter
iret
inc
sbb
ljmp
sub
push
push
jmp
pop
cld
and
and
mov
inc
sbb
xor
cmpl
sub
imul
push
add
fisttps
pop
adc
sbb
mov
cmp
and
xchg
and
in
lret
xchg
and
int
ror
mov
cwtl
sub
mov
inc
ret
pop
sbb
sub
push
sahf
jmp
test
les
stc
and
and
pop
xchg
cmp
mov
mulb
xor
mov
addl
das
push
sub
pop
es
test
dec
repnz
loope
or
cmpsl
insl
push
xor
cwtl
fisubs
inc
shrl
fisubl
xor
pop
mov
lret
sarl
fcmove
cli
xchg
pop
jo
sbb
and
adc
sbb
push
call
lods
insl
daa
in
ss
xchg
jl
jbe
pop
scas
jle
cmp
test
test
mov
cmp
in
inc
or
xchg
sarb
imul
cmp
shlb
sbb
add
push
add
aas
or
mov
jae
daa
loop
xchg
cmp
cmp
push
push
aam
mov
outsl
ret
pop
dec
push
pop
adc
in
mov
xchg
test
aaa
popa
push
jne
popa
jnp
add
or
repz
enter
lss
jb
inc
xchg
jnp
or
push
out
js
jle
xchg
push
jns,pt
test
fldenv
ret
std
pusha
push
enter
dec
and
repnz
inc
pop
imul
mov
push
ret
fidivrl
sub
data16
test
mov
icebp
jl
adc
sub
xchg
in
add
cld
jno
aas
cmp
pop
push
or
mov
repz
out
pop
fsubr
jecxz
cmp
shll
repz
pop
test
adc
xchg
and
add
add
dec
xor
in
sbb
dec
jge
fisubrl
adc
es
adc
sahf
roll
fstl
mov
hlt
xchg
aaa
jb
xchg
test
pop
pop
sub
mov
int
fdivrl
shll
inc
mov
xor
cs
sahf
sbb
lcall
dec
pop
mov
pop
dec
pop
push
sub
jae
pushf
inc
ja
dec
sub
sti
out
cmp
call
xchg
iret
adc
nop
arpl
pop
push
or
push
dec
cmp
out
xchg
mov
incb
data16
cltd
add
mov
in
push
js
sbb
mov
ret
or
into
adc
mov
or
push
sub
jnp
imul
mov
lods
repz
push
imul
popf
xor
bound
lahf
pop
cmc
mov
mov
out
loopne
inc
inc
mov
inc
mov
mov
nop
pop
add
aas
mov
mov
xchg
push
cmpl
std
loope
dec
out
xor
inc
pop
adc
push
fcom
push
movsb
cs
mov
stos
push
mov
mov
sahf
xchg
insb
scas
in
jle
fnsave
cltd
nop
mov
aaa
mov
or
cmp
sbb
dec
in
dec
loop
mov
loop
rcll
int3
dec
dec
sti
jb
xchg
or
xchg
shll
clc
jmp
fnsave
dec
sbb
xchg
mov
divl
lods
imul
sbb
xor
aas
clc
jmp
ret
fcmove
call
and
pop
hlt
scas
cld
fcomi
jae
fsubrs
rcrl
ret
push
jbe
iret
loop
jno
cwtl
dec
pusha
jmp
mov
pop
call
cli
inc
in
and
dec
push
jbe
or
mov
loop
cli
mov
jne
mov
lods
jbe
mov
dec
ret
sub
ds
icebp
sbb
dec
jg
sub
mov
cli
aas
fildll
xor
pop
testl
sub
shl
sub
ss
inc
xchg
outsl
jno
mov
lds
pushf
hlt
loope
fists
mov
and
out
push
dec
mulb
xchg
jecxz
mov
js
jbe
imul
movsb
jl
imul
sub
xchg
push
cltd
test
dec
out
adc
lods
mov
je
lcall
xor
add
cli
out
das
enter
and
push
mov
inc
xor
sub
gs
jmp
ja
mov
or
xchg
jne
iret
shrl
les
cmp
int3
pusha
jmp
jecxz
inc
mov
jge
mov
and
in
bound
fcomi
nop
lcall
ffreep
sbb
js,pn
or
push
stc
xchg
lret
dec
test
cltd
xor
test
push
arpl
mov
pop
outsl
in
lods
push
dec
fimuls
jmp
inc
xchg
stos
inc
xlat
xor
lcall
nopl
movsb
icebp
inc
std
mov
adc
cs
jge
sbb
stos
repnz
mov
add
mov
cmpsb
mov
xchg
mov
in
shll
cwtl
push
call
xor
xor
out
sub
sbb
mov
imul
xrelease
jbe
int
in
into
sbb
fidivrl
int3
loopne
data16
mov
xor
lods
imul
xchg
rol
out
mov
sbb
push
stos
arpl
pusha
mull
sub
and
aas
ds
outsl
out
pop
adc
or
mov
lret
lock
pop
iret
lret
pop
inc
fsubrp
mov
popa
push
addr16
xor
xchg
jp
push
ror
add
push
subb
xor
cli
dec
lret
sbb
aaa
int
out
xchg
pop
sbb
push
push
ret
xlat
xchg
sbb
mov
xor
test
ja
jl
push
out
ja
inc
rclb
loopne
popfw
jb
mov
lcall
jmp
aad
jb
stc
popf
sbb
add
ret
or
lcall
daa
movsl
push
stc
jo
sbb
enter
mov
sbb
mov
psrld
jb
cmp
fmull
mov
jg
mov
and
arpl
scas
push
adc
je
mov
mov
movsl
sbb
inc
or
lods
xchg
popf
adc
clc
int
or
xchg
cmp
out
in
fidivrs
lcall
push
mov
sbb
cwtl
repnz
aas
jmp
stos
xor
push
adc
fisubrl
std
iret
mov
jno
mov
and
leave
pop
mov
imul
ret
pop
stos
push
aas
xor
push
rcrl
cmp
sbb
cmp
xor
jp
push
lds
imul
cmp
sti
ds
in
movsb
mov
mov
cld
sub
into
pop
xlat
test
add
mov
push
out
nop
pop
insb
mov
leave
divb
jo
in
jmp
sbb
test
xor
cmp
cwtl
mov
mov
cmp
xchg
outsl
or
punpckldq
fcoml
jne
sbb
and
mov
adc
jmp
pusha
lret
pushf
ljmp
inc
pusha
jge
inc
les
bound
negb
sub
xor
je
cmp
rclb
dec
mov
in
fldenv
pop
loop
lock
negb
insl
ret
pop
xor
mov
lahf
xchg
lret
outsl
add
inc
mov
inc
loopne
inc
jge
ret
cmp
mov
jns
lea
mov
rcll
fldl
jg
sarl
jg
negb
jl
hlt
xchg
mov
repnz
js
mov
andb
repz
pop
inc
inc
inc
push
sbb
sti
inc
in
and
sti
int
jns
and
repz
mov
dec
jmp
mov
idivl
or
decl
in
mov
jne
dec
lods
push
cmovbe
push
addl
jmp
and
sub
xchg
repnz
jno
lds
inc
pusha
imul
xchg
fstpl
push
repz
rcll
jae
bnd
mov
sbb
mov
add
bound
shl
arpl
jae
in
add
popa
das
dec
fsts
cld
sarl
ss
add
jne
push
pop
add
xor
mov
push
cmp
lahf
pop
jg
add
add
sub
push
ror
cld
addr16
push
cmp
notl
mov
lods
mov
adc
les
insb
jne
push
xchg
test
fsubl
lods
pop
repz
imul
shrl
sahf
jb
call
push
into
sti
push
fisubs
rclb
int
aas
mov
and
loope
mov
cltd
sbb
rcrl
or
icebp
mov
lret
loopne
push
mov
test
sbbl
ret
dec
in
lahf
or
cltd
out
mov
push
cwtl
lcall
push
sub
jno
xor
push
js
pop
xor
mov
fs
and
sbb
in
cmp
loopne
cmp
jmp
pop
clc
stos
dec
mov
xor
adc
lock
inc
mov
inc
inc
pop
pop
xchg
jo
fstpl
jle
or
xchg
jns
in
or
js
pop
or
in
ljmp
out
out
cmp
dec
cmp
dec
gs
pop
push
jnp
cmp
mov
sahf
pop
jbe
rol
fwait
iret
loop
sub
mov
in
sub
icebp
xlat
cwtl
mov
addr16
ret
push
dec
mov
push
sti
sbb
pop
xlat
pop
dec
and
xor
push
pop
push
fidivl
fldt
xchg
js
popa
dec
pop
sbb
lea
or
clc
add
je
mov
bound
cs
xor
pop
aas
aad
popa
test
lods
daa
pop
cmp
hlt
dec
mov
jae
enter
stos
out
out
pusha
sbbb
push
sahf
leave
test
sub
mov
mov
in
insl
or
adc
jmp
aas
jne
loop
cmp
mov
stos
xchg
jne
nop
dec
cmp
xor
je
mov
xor
cmp
out
test
je
jbe
insb
cmpsb
daa
dec
andb
lods
mov
js
aad
jbe
and
inc
sub
sbbb
dec
jae
add
lods
orl
and
mov
ljmp
pop
imul
mov
push
fdivrs
mov
adc
mov
cltd
inc
mov
mov
roll
stos
add
enter
mov
shl
pop
test
adc
cmp
sbb
sub
mov
sub
addr16
repnz
lahf
mov
cmp
inc
sub
es
fisubl
inc
inc
int
scas
mov
hlt
cmp
adc
sbb
jmp
inc
aaa
lcall
cltd
fcmovnbe
cmpb
push
sbb
xor
rolb
movsl
rep
mov
fisttpl
setne
mov
andb
add
mov
testl
inc
xchg
mov
mov
movsb
insl
mov
rcrb
jmp
cmp
cltd
push
cmp
fwait
push
stc
je
cmp
and
hlt
pop
mov
aas
add
pop
sub
adc
loope
add
fistpll
sub
xor
out
xchg
sbbl
dec
sbb
add
or
add
cmpsb
out
push
test
xor
sub
rorb
int3
jae
or
sbb
imul
mov
aaa
lea
lret
scas
shrb
out
mov
push
pop
sbb
push
sti
jl
lret
sarb
adc
jae
popa
push
out
fsubrl
lock
leave
test
mov
push
mov
pop
push
pop
mov
es
add
movups
jecxz
push
xchg
and
cmp
int
cld
add
fsin
in
xor
push
cmp
sahf
dec
je
or
jns
nop
scas
arpl
pop
repz
cmp
add
jmp
and
enter
mov
jg
add
pop
or
jmp
pop
or
xlat
dec
sub
add
out
lahf
sbb
movsb
lods
jge
mov
pop
and
push
push
orb
icebp
jbe
mov
pop
inc
sbb
sub
ret
loope
mov
pop
adc
sbb
in
outsb
insl
or
mov
sahf
movsl
loopne
sarl
sbb
cli
pop
adc
sbb
popf
push
fistpll
and
mov
icebp
sub
lret
or
sub
push
outsb
dec
pop
jns
aas
test
mov
ds
mov
sub
jecxz
xor
or
mov
test
sbb
inc
aam
and
insb
test
in
push
mov
xlat
ret
adc
mov
out
and
ljmp
and
repz
aad
cmova
adc
pop
mulps
out
inc
lea
cmp
sbbl
jp
add
repnz
xchg
xchg
jb
test
push
fnstsw
out
push
pop
mov
aam
push
cmpsl
mov
or
and
add
adc
in
adc
dec
push
xchg
xchg
das
rcr
cmp
lret
aad
outsb
cmc
stos
cmp
movsb
xor
outsl
dec
popf
ss
pop
lcall
fildll
pop
imull
out
jno
sub
cld
loop
or
js
inc
loope
jae
pop
cmp
ror
rep
imul
scas
data16
leave
xor
add
gs
test
pusha
xor
mov
andb
sbb
or
lock
scas
call
add
mov
sti
stos
scas
cld
jmp
ss
pop
outsl
scas
pusha
pop
lods
pusha
push
sti
xchg
push
cld
fidivs
adc
dec
imul
leave
out
or
cltd
add
addr16
jp
mov
imul
inc
or
enter
inc
js
aam
test
jae
xchg
repz
jb
xor
aaa
mov
roll
xchg
testl
mov
insl
sarb
mov
imul
inc
mov
in
lcall
movsl
dec
enter
in
inc
pushf
addl
popf
and
push
lods
or
rol
dec
jno
mov
dec
jbe
or
cmp
mov
andl
or
xlat
fdecstp
in
pop
ss
enter
cmp
xadd
out
jmp
aam
and
mov
and
adc
sahf
mov
xor
fs
repnz
call
push
inc
push
xlat
andl
lock
ljmp
into
push
shll
cs
ret
pop
lcall
jno
cmp
andps
shll
mov
push
cltd
ret
sarl
enter
std
pop
rolb
mov
inc
xchg
inc
push
cli
push
add
scas
xchg
imul
ret
loope
push
fiadds
xor
lahf
jl
mov
xor
sbb
xchg
aas
mov
icebp
shr
mov
fmuls
loopne
add
cli
sub
or
lock
sub
jecxz
xor
xchg
mull
pop
dec
icebp
pop
pop
in
xchg
sub
push
inc
into
ds
push
jmp
adc
ds
fldcw
mov
jge
cmc
js
imul
and
or
imul
xor
stc
test
jo
pop
fcomps
and
addr16
movups
mov
int
int3
out
xchg
jle
xchg
out
ja
in
push
dec
test
xchg
xchg
js
jo
out
shll
and
popf
jecxz
xlat
jmp
sbb
out
sbb
xor
andb
inc
push
or
fisttps
jns
xchg
call
vpunpckhbw
push
xchg
outsb
mov
xor
xor
mov
jb
mov
mov
aaa
out
lret
hlt
xor
push
inc
shlb
xlat
sbb
pop
ja
out
call
lock
pop
std
xchg
rcl
pop
popa
scas
adc
and
test
imul
cwtl
stos
xor
jecxz
jp
mov
ret
test
pusha
push
ljmp
jmp
stos
rorb
scas
xchg
jle
sub
or
es
pop
fists
dec
push
lds
mov
adc
pop
bound
jne
cmp
movsl
lret
push
push
ret
push
push
sti
mov
push
rcrb
pop
or
cmp
xchg
addb
sub
xor
cmpsb
in
inc
sbb
push
jb
and
enter
mov
and
xor
movsl
cltd
jle
adc
rcr
dec
cmp
iret
loope
pop
xor
xchg
dec
push
enter
mov
cli
or
jns
ljmp
andb
pop
mov
or
push
adc
bound
and
xor
cmpl
fwait
xchg
je
popf
xchg
and
push
fimull
pusha
test
jne
popf
push
cld
adc
xor
inc
int
stos
jecxz
add
inc
sub
mov
xchg
iret
xor
insb
pop
cmp
js
jge
addr16
add
movsb
mov
in
lret
xor
test
jo
ss
mov
mov
not
dec
jp
gs
mov
cmpsb
repnz
into
in
xor
or
test
ror
jmp
mov
stos
push
insb
insb
into
add
jg
pop
sti
imul
sarb
dec
push
test
insb
in
push
nop
cmp
rorl
sbb
and
ds
push
add
aas
test
sub
leave
mov
lret
mov
andb
add
fiadds
jmp
shll
les
jo
and
dec
jnp
and
es
rcrl
std
and
and
mov
stos
xlat
jg
mov
ret
shrb
popa
xor
xor
or
dec
icebp
fidivs
adc
stos
or
or
cmpsb
in
sbbb
test
jb
push
loop
jno
ss
andl
mov
stos
push
adc
or
cmp
dec
sti
fwait
mov
sbb
cmp
insl
imul
mov
push
sub
mov
lock
nop
xchg
cmp
movb
jno
inc
cwtl
push
pop
xchg
mov
jno
js
das
cmpsb
lahf
xor
lea
and
into
lret
aad
or
mov
mov
int3
out
dec
add
cmp
loop
in
dec
push
mov
cltd
pusha
testb
inc
adc
cmpsl
cmp
fs
mov
cli
xchg
jmp
sub
cmp
movsb
mov
push
mov
pushf
sub
and
icebp
lock
or
test
adc
mov
outsl
stos
mov
cli
jl
mov
ljmp
lcall
dec
fwait
jecxz
xlat
ja
notl
sub
dec
shl
sub
rorl
imul
test
xor
fnstenv
sbb
sub
mov
add
dec
imul
sbb
or
std
push
ljmp
mov
jbe
test
xchg
cli
dec
jle
cs
fs
lret
xor
loop
loop
jg
outsb
cmp
inc
cli
add
push
sbb
repnz
lahf
fcmovnu
sahf
movb
fstps
dec
cmpsb
push
mov
shrl
xor
add
inc
ds
cmpb
imul
jg
lods
pusha
and
inc
add
cmc
jae
add
cmpsb
inc
aaa
cmp
mov
ljmp
push
lods
push
cmc
dec
add
inc
mov
testl
fisttpl
mov
pop
cmp
sub
sbb
fdivl
cmp
fwait
div
push
fucom
jmp
pop
repz
sbb
jne
pop
pop
add
call
leave
add
fwait
jmp
lcall
ljmp
div
adc
hlt
pusha
xchg
fisubs
sbb
aas
push
aaa
fsincos
mov
in
add
mov
fisttpll
cmp
mov
shrb
out
xchg
loope
rolb
cmpsb
cltd
mov
pop
add
loop
daa
mov
pop
inc
jg
rclb
push
jle
std
out
push
pop
jge
lret
gs
sbb
aas
mov
mov
loopne,pn
sub
mov
fsubrl
push
xchg
mov
mov
rolb
add
mov
xchg
push
mov
fmul
and
sbb
add
jo
pop
xchg
push
sbb
or
xor
fnstenv
mov
pop
or
cld
into
lret
int
jo
int3
xchg
xchg
std
mov
or
xchg
jno
gs
inc
in
enter
mov
sbb
cltd
cltd
fcmove
sub
pop
sub
lret
mov
jle
sub
or
sub
jb
mov
movsb
sbb
out
pop
sub
xor
fs
pop
pusha
imul
xorb
pop
mov
cmpsl
jo
push
dec
cmpsb
cwtl
imul
xor
hlt
test
sub
jno
ja
push
inc
aas
xchg
scas
push
push
jge
rol
xchg
mov
add
imull
in
sub
fldcw
cmpsb
mov
mov
data16
and
pop
dec
out
and
mov
inc
mov
lcall
stos
xchg
mov
push
pop
movsl
sti
testb
fsubrp
sti
rcll
out
jle
and
xchg
mov
and
xchg
inc
adc
nop
inc
cld
pusha
mov
orl
int3
pop
test
repnz
xor
out
jae
test
andb
jmp
jb
push
cli
pop
stos
adc
adc
or
adc
sbb
sub
dec
lcall
push
decl
jle
jo
arpl
cmp
sub
pop
jecxz
jl
xor
cmp
and
cmp
or
popa
je
pusha
pop
sti
test
mov
inc
int3
inc
jmp
jnp
fdivrl
inc
ret
pusha
cld
popa
mov
xchg
sbb
mov
mov
push
push
xchg
jb
and
mov
inc
data16
adc
stc
and
push
mov
aad
mov
shlb
adc
cmp
addb
idiv
movsb
mov
std
or
cmc
call
jbe
dec
adc
adc
in
adc
stc
inc
orl
sti
xchg
out
fcmove
push
into
push
iret
jnp
iret
lea
inc
jns
pop
icebp
aad
std
aaa
in
mov
imul
out
push
fnstsw
ja
jecxz
jle
dec
in
lods
bound
clc
adc
mov
mov
fcmovnb
out
push
loop
aam
lods
push
icebp
aas
nop
out
fstl
mov
add
or
add
mov
cmp
out
or
lret
mov
enter
lret
jne
jno
or
xchg
cmp
ret
fwait
out
cmpsb
in
outsl
lock
loop
rorl
and
xchg
inc
xor
ret
and
sub
out
mov
dec
sti
fidivs
stos
mov
subl
les
jl
dec
stc
and
cld
mov
movsb
adc
pop
jl
sarb
xchg
psllw
xor
jb
and
push
adc
rorb
daa
in
cmpsb
or
push
imul
sbb
jg
shll
inc
xchg
insb
cmpsb
mov
push
stos
scas
mov
imul
insl
and
mov
mov
mov
pop
dec
xchg
lods
mov
pop
inc
mov
mov
xor
jg
pop
jecxz
les
cmp
add
std
cld
cmpb
cmp
cmp
lods
push
repz
repz
sbb
addr16
push
data16
inc
movsb
and
and
scas
sbbb
out
xor
mov
or
xor
xchg
jle
mov
es
aas
cmp
xchg
std
pop
dec
imul
roll
add
mov
cmp
int
scas
xor
xor
insb
push
add
xor
and
repnz
sarb
dec
add
sbb
jl
push
fimull
pop
negb
gs
xor
sub
ja
xor
or
loopne
cmp
adc
xor
mov
jns
pop
shrl
inc
sub
enter
bound
jl
nop
jp
call
fs
shll
bound
daa
push
sbb
xor
loope
sahf
jmp
xor
das
add
es
add
fld
outsb
inc
cmp
cld
mov
stos
jg
sbb
addl
rcrl
pop
xchg
pushf
pop
cmp
mov
test
shlb
push
jg
adc
inc
and
stos
or
push
or
rclb
xor
in
or
sub
xor
cmp
into
insb
das
fstpt
mov
ficoms
xchg
jmp
push
mov
jno
mov
gs
in
mov
and
stos
loope
adc
and
xor
pop
jae
mov
call
lods
rorl
mov
roll
jp
stc
mov
cli
sbb
add
mov
arpl
out
inc
mov
sub
pusha
pop
test
xchg
test
push
rcll
pop
out
icebp
dec
lock
xchg
cld
sbb
xchg
mov
push
jne
pop
pop
lcall
jbe
les
call
aad
repz
mov
rcrb
mov
pusha
sbb
lret
das
mov
lahf
out
or
ss
add
out
mov
sub
xchg
fisttps
cs
xchg
repz
xor
and
mov
mov
mov
lea
jmp
js
stos
hlt
xor
xor
repnz
rclb
mov
loop
ja
rep
cmc
pop
ja
jnp
inc
scas
xor
loopnew
mov
inc
xor
dec
and
mov
jl
cld
pusha
adc
pop
inc
fdivp
xchg
dec
xor
push
pop
sbb
loopne
in
xor
ja
xor
sub
mov
stc
fld
sti
xor
mov
xlat
aaa
ror
insb
pop
inc
mov
xor
out
call
dec
test
jmp
mov
or
push
rcr
pcmpeqw
imul
ficomps
mov
mov
outsl
sbb
mov
cmpb
cmp
adc
pop
inc
sub
adcb
enter
dec
or
add
sbb
and
and
arpl
subb
loop
lds
fldt
adc
mov
pop
addr16
inc
lahf
lods
dec
bound
cwtl
lea
xchg
jbe
pop
mov
inc
mov
push
es
fstpt
mov
xchg
adc
xlat
mov
repnz
push
push
lahf
in
mov
lahf
out
stc
sbb
sbb
inc
aam
dec
adc
and
jl
adc
inc
or
xor
or
pop
jle
mov
xor
into
sub
lret
pop
xor
fwait
add
xchg
cmpsl
cmp
pop
pop
clc
xchg
mov
leave
xchg
shll
lods
mov
add
loop
out
push
mov
sbb
sub
mov
sub
addr16
rcrb
enter
xadd
mov
dec
add
add
imul
fcomp
jecxz
push
cmp
imul
lcall
imul
jmp
sub
xchg
adc
pop
fsubrl
or
sbb
fwait
ja
jle
sarl
push
loope
sti
inc
mov
in
hlt
vpandn
sbb
cmp
push
pushw
sbb
je
sbb
test
push
mov
jae
add
test
mov
push
push
pop
sbb
and
pop
mov
xor
mov
push
adc
xchg
xor
into
sbb
mov
and
xchg
dec
out
repnz
pop
stos
inc
jae
push
scas
mov
pop
push
test
inc
test
xor
cli
int3
stos
add
fdivl
cltd
scas
not
outsl
pop
fisttpl
popf
lahf
arpl
mov
and
cmpb
movsb
jl
mov
adc
insl
lea
les
sbb
es
fwait
cmpsl
insl
adc
xor
subb
cli
xchg
push
in
pop
pop
xlat
jbe
xchg
ja
push
cmp
mov
ret
data16
aas
test
mull
js
mov
ss
push
xor
or
pop
xchg
and
mov
xor
add
xchg
icebp
stc
nop
xchg
mov
xor
push
aaa
cmp
and
iret
faddp
adc
push
mov
mov
lock
mov
js
andl
mov
insl
lahf
sub
aaa
cltd
mov
fnstcw
sbb
dec
xchg
dec
cltd
xchg
mov
jno
push
mov
repnz
or
lea
or
mov
dec
les
in
mov
sub
mov
fadds
jbe
lods
adcl
pop
shrl
cltd
je
xor
xor
enter
shrl
or
sub
adc
movsl
inc
sbb
cmpsl
dec
cs
sbb
les
lret
inc
mov
call
clc
mov
insl
cltd
orb
cmp
out
dec
dec
cmp
es
cmp
ret
and
sbb
inc
pop
jb
lods
cs
ret
push
loop
arpl
push
mull
adc
outsb
adc
pop
mov
dec
mov
pop
aad
fs
inc
xchg
dec
add
jge
jns
gs
negb
sbb
xchg
inc
ja
push
ftst
dec
gs
jle
shld
je
xor
lahf
in
loope
or
lret
xor
popa
enter
inc
xor
scas
pop
inc
imul
gs
adc
test
dec
jnp
xchg
aam
sub
sub
repnz
mov
mov
push
xor
and
cli
push
pop
or
test
into
cs
inc
push
mov
and
pusha
hlt
mov
in
sbb
mov
aas
mov
icebp
rolb
cltd
out
loop
push
lahf
jns
pop
or
sbb
pop
and
xor
cmpsl
or
xor
sbbl
rorb
iret
fmull
jno
xorb
inc
aam
aaa
or
jbe
outsb
cmc
loop
cs
popa
dec
imulb
test
xor
jbe
test
lds
inc
add
pop
out
fs
add
imul
scas
push
sub
push
andl
jne
ficoms
inc
pop
test
shrl
cs
dec
xorb
and
or
jae
outsl
sbb
pop
divb
nop
adc
aas
cmpsb
aas
rcll
insl
rcll
lods
push
adc
add
cmpb
xchg
xchg
mov
mov
rcl
nop
cmp
aad
mov
test
mov
dec
mov
jo
sti
sub
pop
dec
cmp
dec
and
mov
sete
les
mov
mov
xchg
push
inc
push
imul
sub
repnz
mov
stos
and
movsb
adc
popa
adc
jns
insb
dec
push
sub
mov
and
call
xchg
xchg
cmp
pop
adc
clc
fcomi
sbb
pop
mov
jne
out
jecxz
lret
jle
add
sarl
cmp
clc
out
fdivrl
aad
into
pusha
mov
subb
ss
xchg
sahf
xchg
sbb
xchg
dec
pop
es
jne
outsl
dec
push
push
stos
xor
cmp
xlat
ss
xchg
loopne
aam
inc
fisttpl
in
int3
mov
pop
ret
in
jae
adc
fsubrs
test
in
ss
add
cmpsl
mov
into
jecxz
mov
test
jbe
cltd
mov
fildll
popf
jne
repnz
out
inc
int
add
pusha
jge
lods
or
cmpsl
sti
xor
and
jmp
sbb
or
and
sahf
or
sets
sti
cltd
xchg
fiaddl
loopne
cli
aaa
adc
pop
mov
jbe
daa
repnz
fwait
inc
dec
pop
jbe
mov
inc
repnz
jnp
das
aaa
mov
push
push
mov
fidivl
xchg
daa
cmp
add
lods
adc
pop
xchg
push
cmpsl
inc
jge
push
pop
xor
xor
jbe
add
rcrl
ret
addr16
xchg
insl
xor
cmp
mov
movsl
xchg
mov
sarb
pop
pop
sbb
cld
push
jle
enter
xlat
xchg
xor
cmp
and
sbb
xor
imul
xchg
fdivr
ret
loopne
push
sbb
and
cmp
inc
popa
mov
mov
jle
cmp
cmp
inc
iret
in
hlt
adc
rolb
inc
stos
into
hlt
rol
adc
fwait
lahf
xchg
jmp
push
adc
add
popf
aas
jge
or
or
dec
pop
es
loop
cmpl
add
data16
aas
cmp
cwtl
lods
xor
iret
adc
sbb
fnstenv
push
jno
or
xchg
jo
xorb
repz
es
mov
sahf
jmp
mov
sub
pop
mov
ja
arpl
push
push
in
add
cmp
mov
mov
push
lods
notb
rcrb
inc
aam
jne
outsb
int
cltd
jge
icebp
lahf
outsl
sub
stos
pop
dec
repnz
adc
aas
pop
mov
inc
enter
lcall
xchg
bnd
mov
mov
sti
cs
outsb
inc
cltd
lods
testb
scas
mov
or
add
dec
aad
push
mov
lret
add
rclb
loopne
cmpsl
pop
pop
fstp
sbb
dec
mov
cmp
add
cmp
test
sbb
movsb
push
adc
adc
mov
xchg
mov
aad
add
das
mov
mov
jl
inc
xlat
mov
jbe
push
repz
inc
mov
inc
fidivl
pusha
test
inc
ss
xchg
gs
inc
sub
mov
inc
fwait
sbb
jnp
test
lds
jge
test
pop
mov
repnz
xchg
jmp
ljmp
push
out
add
arpl
imul
xlat
pusha
mov
sub
outsb
sti
rcrl
loopne
inc
and
paddsb
xor
add
rcrb
popa
or
mov
sub
nop
mov
mov
xor
dec
or
sub
lret
push
mov
jae
ds
xchg
jo
mov
dec
lret
pop
jecxz
hlt
rolb
std
lret
sbb
push
mov
sbb
inc
mov
addr16
jb,pt
mov
stc
xchg
jns
and
ljmp
aad
dec
mov
jns
out
shll
sbb
movsl
arpl
inc
mov
cli
cmp
and
cmpl
clc
push
cs
add
test
shrb
jae
in
in
push
int
jb
in
ja
sbbl
cmc
mov
push
cld
loope
jecxz
mov
cmpsl
pop
xor
pushl
xlat
and
sub
mov
in
mov
adc
scas
daa
fcmove
push
lahf
dec
mov
cmpsb
lds
pushf
jmp
stos
lret
xor
push
das
pop
aaa
mov
fnstenv
mov
cltd
mov
in
cld
xor
test
and
ja
and
gs
icebp
push
popa
fldcw
cli
xchg
je
cld
or
mov
jbe
push
arpl
sbb
sbb
dec
leave
inc
and
ret
dec
in
dec
sbb
call
rorl
mov
out
insl
stc
sub
inc
sub
sub
inc
push
xchg
rcl
loope
cli
popf
sbb
aam
je
sbb
pop
lock
testb
outsl
jno
mov
xor
push
mov
aas
fwait
sub
insl
and
aaa
xor
ds
or
push
hlt
iret
jbe
dec
in
or
adcb
sub
gs
mov
sbb
push
add
jmp
xchg
out
call
mov
hlt
insb
cmp
cmp
lock
or
sbb
insl
inc
je
xchg
xor
jnp
push
jne
mov
pushf
addr16
jecxz
xchg
sbb
in
push
mov
mov
dec
sbb
aas
mov
pop
subl
or
dec
pop
leave
int
insb
mov
xor
cmpsb
lret
or
addr16
mov
add
or
xor
mov
adc
out
adc
vpsubb
mov
testl
pop
push
into
insb
jmp
xor
pop
push
cmc
xor
xor
movsb
xchg
stc
repz
dec
mov
ja
dec
jns
inc
push
sbb
push
add
xor
push
jp
lret
inc
shrl
and
fwait
xlat
mov
mov
or
pop
mov
adcl
mov
mov
lock
aam
mov
in
ds
sub
aam
pop
sub
fs
sahf
sbb
xchg
adc
lods
and
les
stc
loop
push
cwtl
xchg
rcl
inc
inc
stos
or
fmuls
xchg
jmp
push
sub
rorl
mov
pop
jp
loop
decb
jecxz
mov
stos
or
and
pop
pop
pop
dec
and
ja
jno
ss
jmp
jg
jmp
mov
lcall
sbb
sub
cmp
stos
sbb
cwtl
int3
dec
jge
aam
out
mov
shrl
in
jns
mov
flds
popa
adc
mov
pop
and
mov
mov
and
popa
in
sub
jg
jl
lret
dec
sbb
push
movsb
imul
or
pop
and
push
xor
mov
test
xchg
sbbb
enter
adc
sbb
aaa
sub
push
enter
xchg
rorl
push
jne
pop
xchg
arpl
or
in
mov
pop
fcomp
xchg
test
xor
inc
pop
sarl
and
xor
out
or
lahf
mov
jle
jae
decl
fs
loopne
cmp
shrb
mov
fnstsw
add
push
idivl
std
rcrb
jb
pop
out
shll
and
movsb
cli
add
push
mov
rclb
aaa
xlat
fcoml
popa
sbb
pop
cmp
push
cmp
adc
adc
inc
inc
fcomps
dec
push
xchg
mov
add
mov
add
xchg
lret
dec
jbe
cmp
cmp
sbb
movl
scas
jecxz
jecxz
mov
ficompl
jecxz
out
pop
sbb
ja
outsb
es
jnp
dec
mov
xor
mov
fcomps
jp
xor
aad
xor
mov
inc
loope
andb
je
aam
aaa
mov
aad
jecxz
and
jae
xor
fbstp
out
xchg
rcrb
cltd
addr16
xor
dec
cmp
in
or
xor
dec
cmpl
mov
hlt
fiadds
les
mov
mov
pop
inc
imul
into
add
mov
ss
and
inc
jo
pop
xor
enter
insb
shll
push
orl
push
inc
cmc
push
mov
repnz
pop
mov
adc
jle
hlt
adc
push
pop
add
int
sub
pop
push
popa
dec
out
pop
sub
fsubs
mov
pushf
dec
add
pop
call
cmpsb
pop
inc
adc
xchg
mov
sub
xchg
pop
lea
pop
cmp
mov
add
sbb
jno
push
add
sub
xchg
aaa
ret
out
xchg
mov
mov
in
or
int3
ret
xchg
mov
push
aad
loop
iret
imul
dec
sub
jnp
scas
pop
scas
lret
mov
fisttps
nop
popa
lcall
jmp
les
ret
cmp
mov
add
xor
cmpsb
lods
push
test
mov
cmp
addr16
jecxz
das
cmp
fwait
stos
mov
mov
inc
inc
rcrl
lds
movsb
test
aam
addr16
in
mov
into
das
xor
lret
fdivrs
sbb
scas
sub
and
ds
xchg
outsl
gs
and
pop
popl
cmp
les
inc
data16
cs
push
add
popa
pop
cmp
dec
lds
jae
lahf
clc
dec
enter
popa
adcl
inc
call
push
sbb
mov
xchg
jbe
insb
lock
cmp
mov
cmpsb
xor
loop
push
xor
xor
mov
and
int
insb
jle
loopne
xor
jg
lock
dec
ficomps
cmp
add
std
lods
dec
pop
fwait
xchg
cld
xchg
mov
and
sub
fmul
ljmp
dec
lods
xchg
push
bound
sub
inc
nop
mov
mov
and
cmp
lods
jnp
movsb
test
and
mov
hlt
insb
cmpsl
jne
jo
shlb
sub
cmp
std
sub
inc
xlat
add
daa
and
out
add
movsl
lock
mov
push
mov
push
push
dec
repnz
data16
cmp
adc
enter
pop
outsl
sub
scas
xchg
mov
loope
push
sbb
insb
dec
and
push
aad
push
jle
roll
mov
sbb
outsb
std
mov
mov
fwait
outsb
jo
sarb
cmp
xor
sub
aas
sbb
popf
ret
shrd
std
scas
test
rol
cld
adc
pop
aad
fs
push
dec
jb
cmpsl
inc
leave
sbb
push
rcl
dec
iret
inc
sarl
loop
loop
mov
lea
adc
popf
mov
and
enter
cli
mov
xchg
lcall
insb
sbb
dec
or
and
xchg
and
mov
movsb
mov
outsl
mov
xor
lret
jg
pop
sbb
adc
add
push
icebp
inc
fdivrl
jge
loopne
stos
flds
ror
mov
sbb
push
push
cld
loopne
addb
stc
dec
stos
jbe
icebp
test
in
arpl
outsb
push
stos
mov
mov
cmp
jnp
scas
mov
mov
pop
bound
out
and
push
jb
loopne
jl
sbb
pushf
mov
add
arpl
aam
cmp
clc
fcmovb
mov
stos
stc
inc
fs
cmp
mov
jo
cmp
jae
in
fwait
popl
pop
adc
test
fcoms
push
pop
mov
push
mov
imul
insl
arpl
adc
out
dec
inc
adc
xor
scas
out
sbb
adc
pop
lahf
mov
sub
lcall
mov
push
icebp
pushw
leave
push
data16
out
push
ret
push
test
inc
inc
adc
fildl
std
push
pop
mov
mov
pop
and
push
cmp
aad
jne
cmp
hlt
push
lret
and
push
adc
jne
sbb
addr16
imul
mov
sub
movsl
pop
pop
mov
ret
aam
add
mov
inc
out
pop
pop
push
sub
loop
xchg
adc
outsl
mov
mov
in
shll
pop
pop
jns
mov
lods
lock
jbe
ret
bound
mov
and
out
jecxz
shlb
add
jno
outsl
xchg
pop
or
mov
outsb
mov
pop
fistl
dec
bound
aas
lcall
inc
cltd
mov
fisubs
or
jmp
cmp
lcall
jns
jge
mov
jle
dec
sub
xchg
sub
dec
or
out
xor
add
gs
xchg
inc
mov
xor
inc
push
rorb
jbe
pop
sub
xchg
push
je
enter
aad
sbb
lock
mov
cli
aad
mov
xor
xor
je
xchg
sub
aaa
loopne
mov
ds
int
aaa
mov
aaa
shll
mov
enter
test
sub
jle
mov
fiadds
add
orb
or
int3
scas
push
inc
or
aas
jl
and
pop
std
pop
sbb
and
int3
neg
insb
pop
cs
dec
ret
and
push
daa
jnp
test
cmp
into
mov
cmp
push
dec
iret
mov
mov
out
inc
aam
in
cmp
mov
shl
cli
sub
lea
adc
sbbb
call
in
push
mov
ror
addl
push
out
pop
outsl
sbb
jmp
aam
xor
jbe
xchg
adc
stc
shlb
imulb
pop
cld
je
cwtl
xchg
add
idiv
sahf
fstp
addb
rcll
sub
aaa
mov
nop
shr
cmp
out
cmp
pop
dec
scas
les
lods
stc
testb
pop
dec
mov
in
jge
mov
add
xchg
int3
into
mov
sbb
iret
test
push
jmp
add
es
mov
xchg
fbstp
mov
and
inc
lahf
inc
mov
cld
push
sub
fstl
lahf
test
popa
imul
fistps
ljmp
repz
hlt
adc
out
in
xchg
fdivrl
xchg
imul
stos
loope
rolw
cmpsl
add
dec
pop
sbb
sbb
and
sub
fs
dec
sub
scas
pop
adc
and
sbb
xlat
imul
je
xor
jbe
inc
add
sbb
es
push
mov
mov
sub
jbe
jne
fsubrs
movsl
sub
repz
mov
and
cmp
and
out
or
mov
nop
xchg
out
and
cltd
xchg
out
mov
int3
jno
int
xchg
sub
and
in
xor
js
shl
or
pop
scas
repz
shl
in
and
lret
pushf
mov
into
mov
popf
std
xchg
mov
out
xchg
pop
fldenv
loop
ss
xchg
cmp
jb
adc
stos
or
hlt
test
mov
mov
jecxz
adc
cmp
loopne
ret
inc
fwait
mov
jmp
movb
rcpps
jae
test
jg
in
shrb
or
cs
das
call
xlat
pop
adc
mov
ja
xor
cmp
or
sbb
add
hlt
out
push
enter
mov
cltd
add
push
dec
push
jns
jne
inc
jge
lods
lock
bound
jmp
mov
mov
outsb
jns
movsb
dec
cmpsl
adc
clc
or
jno
sbb
mov
mov
imul
xchg
movsl
xorb
scas
leave
shl
push
int
mov
xor
rcr
xchg
lahf
sbb
mov
mov
lds
jg
in
add
das
sbb
ss
adc
ljmp
sbb
pop
fbld
daa
scas
xor
add
jl
movsb
and
mov
jns
popa
xchg
mov
push
push
mov
and
test
jae
fsubrs
xchg
jp
mov
std
aas
les
jle
sub
sbb
cs
sbb
das
or
fwait
xchg
pop
dec
lds
pop
insb
or
mov
or
je
push
aad
das
adcb
jge
divl
fistpl
push
and
sub
cmpsb
jb
ret
insb
cs
inc
inc
mov
sub
sub
xchg
leave
shll
jo
fwait
push
shrb
addr16
imul
inc
das
imulb
inc
imull
jge
cmp
imul
out
jmp
dec
daa
sbbl
jns
jo
js
xor
das
scas
jmp
pop
sbb
cltd
mov
or
cmpsb
lock
in
jo
decb
out
stc
mov
pushf
lret
and
or
mov
notl
sbb
scas
fwait
cwtl
xchg
pop
sub
out
mov
inc
xlat
add
insl
jl
ljmp
cmpsl
rorl
mov
cmpsb
add
decb
cvttps2pi
pop
xchg
push
cmp
in
xchg
stos
mov
movsl
jp
dec
jno
mov
adc
and
jno
adc
cmpsl
push
inc
sbb
pop
stos
outsl
or
js
jno
outsl
add
xchg
loop
sub
into
dec
xlat
jmp
cmp
push
jl
inc
testl
cmp
inc
pop
icebp
push
fsubl
movsb
inc
push
mov
xor
dec
out
inc
int3
pop
shl
mov
cmp
pop
out
int3
xor
scas
jp
pop
daa
xchg
cmp
jmp
clc
pop
inc
mov
push
sub
aaa
call
inc
out
jle
jne
dec
outsl
fimull
sub
repnz
jmp
pop
inc
out
add
shlb
jg
lods
pop
push
xchg
or
inc
push
mov
mov
sbb
push
inc
lds
mov
fnstcw
in
shll
mov
rorb
sbb
testl
mov
pop
lidtl
pop
dec
inc
mov
pop
stos
imul
pusha
ds
xchg
add
adc
dec
pop
stos
lahf
mov
add
jg
mov
lret
mov
shl
mov
jb
int3
fdivrl
push
dec
adc
jnp
push
pop
pop
addr16
pop
mov
mov
sar
sub
inc
test
loop
mov
sbb
mov
inc
pushf
sub
jl
adc
mov
divl
mov
hlt
fbstp
cmc
fs
xlat
pop
mov
repz
pop
xchg
and
das
scas
pop
mov
mov
jne
mov
or
push
mov
repz
movsl
daa
fcmovbe
xlat
inc
xchg
shll
aaa
movsb
fcomp
cmpsl
gs
add
mov
stos
ret
movsb
int
inc
filds
jp
call
xor
pop
or
addr16
dec
mov
push
lret
cmpsb
loop
push
repnz
pop
ret
inc
mov
push
push
mov
movsl
enter
out
mov
out
xchg
jne
sbb
adc
pushf
repz
sub
test
push
sbb
or
enter
enter
pop
repnz
ror
mov
hlt
push
je
sbb
xor
scas
scas
push
sub
loope
dec
and
ret
sbb
and
jne
addl
mov
std
cmp
mov
jl
pop
mov
rolb
dec
mov
jl
pop
movsb
inc
and
jbe
gs
adc
outsb
xchg
aad
testl
jp
popf
test
lds
mov
xor
mov
js
xor
aas
mov
insb
inc
test
dec
dec
mov
in
lds
movsl
dec
data16
xor
or
mov
arpl
cmp
rclb
ds
dec
jne
mov
push
fs
pop
push
push
in
mov
cmp
leave
jne
cmove
cmp
xlat
test
sbb
pop
inc
fsubl
lret
test
ss
inc
adc
fcomi
cmp
inc
fcmovnbe
add
pop
xchg
stos
addr16
cltd
shlb
or
dec
je
stc
dec
jae
subb
adc
or
or
mov
xchg
shll
fwait
sbb
aaa
cmp
test
pop
jb
dec
orb
and
test
in
push
and
add
add
jnp
sarb
sub
cmpsb
sbb
dec
fwait
mov
and
scas
aad
xlat
int3
mov
push
in
cld
repnz
not
and
mov
into
xor
es
rcll
mov
lea
sbb
shrb
adc
xchg
data16
or
rorb
push
push
sbbl
sub
dec
push
cmc
movl
pusha
in
cmpsl
orl
push
ret
add
aaa
subb
inc
pop
sub
sbbl
push
push
sbb
pusha
inc
stos
lea
mov
mov
ljmp
xchg
and
popa
fucomip
sbb
popa
mov
jne
int
lcall
and
pop
out
dec
loope
cmp
and
ret
rorb
dec
sub
xor
stc
data16
ljmp
pushf
pop
and
cmp
xor
jno
dec
cld
jecxz
mov
pop
dec
xor
mov
cmpsb
rcl
in
out
aas
adc
mov
adc
adc
or
shlb
popa
addr16
xchg
xchg
fdivrs
aaa
cltd
jb
outsb
or
mov
mov
cmp
ja
mov
dec
inc
mov
pop
iret
pop
sub
aaa
fcmove
cmp
cmp
xchg
xchg
push
mov
or
loopne
in
mov
dec
xor
mov
cmp
dec
pop
mov
insl
incb
sarb
mov
xchg
aam
stc
push
iret
mov
fs
push
clc
xor
int3
sbb
push
jno
mov
hlt
cmpsl
mov
aaa
sbb
lea
lret
stos
or
jo
or
dec
mov
pop
movl
push
loopne
cltd
repnz
push
push
xor
cs
xchg
out
mov
clc
sbb
mov
movsl
xchg
int
cld
mov
shlb
rcr
idivl
cltd
and
dec
xlat
cmpsb
mov
pusha
inc
pop
fwait
out
mov
xor
insb
aas
mov
call
decb
in
or
and
jno
jmp
sbb
jecxz
jbe
fidivrl
mov
xchg
mov
out
xlat
pushfw
nop
pop
lods
jnp
imul
add
out
xchg
lds
dec
inc
inc
inc
fwait
or
inc
mov
adc
or
and
xchg
mov
mov
or
dec
jb
pop
mov
adc
sub
sahf
xor
stos
push
push
fsubrl
test
test
and
fldl
pop
cmp
sub
les
insl
mov
push
sbb
cld
ficoml
mov
add
out
add
scas
fistl
pop
adc
xchg
cmp
int
sbb
and
cmovbe
sbb
aaa
insb
xchg
adc
roll
or
xorb
mov
sbb
outsl
sbb
lods
jne
insl
in
movsl
and
push
or
lret
repnz
in
jnp
ret
push
pop
iret
push
sahf
pop
cmpsl
jl
addr16
inc
sub
sbb
test
rcll
xchg
push
lret
sbb
test
fstpt
mov
fst
pop
sub
shrl
inc
leave
sub
shrl
or
jge
or
cmpb
das
jmp
aaa
subl
jecxz
dec
mov
stc
pop
and
out
je
xchg
pop
mov
xchg
push
std
ljmp
inc
repnz
push
test
sub
ret
mov
pop
incl
popl
sbbb
sbb
sub
jp
cmp
pop
lods
cmp
mov
mov
jg
daa
pop
das
xchg
sbb
and
rorl
sbb
pop
std
loope
fwait
or
aas
adc
cwtl
ss
cmp
xlat
inc
out
xchg
inc
testb
jae
cmpsb
mov
xor
nop
in
out
adc
xchg
inc
pop
call
jns
dec
adc
or
jg
call
mov
lds
and
jae
mov
mov
jno
push
pushl
or
loopne
fnstsw
adc
out
cmp
dec
sti
jg
add
push
ror
leave
in
mov
neg
inc
dec
pop
push
stos
xor
notl
inc
repz
mov
sti
fsts
and
aas
mov
ret
outsl
add
cmpsl
mov
xor
jecxz
ficoms
add
push
push
movsl
sub
in
adc
ljmp
cmp
push
into
popa
xlat
or
adc
push
sub
imul
or
insb
sbb
pop
adc
pop
cld
and
leave
es
dec
mov
pop
popa
test
js
xlat
into
fwait
in
sahf
sbb
or
fwait
add
pop
in
insb
mov
aad
std
xchg
popa
into
lods
dec
shll
lcall
mov
aaa
sub
loopne
push
sub
or
adc
into
mov
sbb
ffreep
clc
sahf
dec
int3
ret
cmpsb
nop
loope
movsb
mov
and
add
xor
mov
int
mov
xchg
faddl
ret
rolb
push
ljmp
mov
ja
bound
mov
rorb
push
mov
mov
insb
loop
jecxz
movsb
or
sub
jns
dec
es
and
fildl
xchg
jbe
scas
js
mov
adc
dec
push
push
es
or
lods
das
inc
add
inc
mov
aam
cmp
fs
jo
inc
cmp
jae
sub
and
ja
xchg
faddl
mov
cmp
adc
and
push
gs
jb
sbbb
stos
push
inc
loopne
push
adc
imul
lds
pmulhw
push
jbe,pt
lods
lds
aaa
enter
mov
fbstp
jae
xchg
dec
aad
inc
and
push
xlat
add
mov
push
fs
or
jno
in
sub
cmp
add
pop
push
push
fs
xchg
mov
adc
or
mov
xorl
inc
mov
mov
sub
dec
cli
test
in
and
pop
aaa
mov
inc
mov
fldl
cwtl
xor
inc
call
dec
xchg
stc
stos
loopne
xchg
jmp
push
cs
ficomps
movsb
arpl
aaa
xchg
enter
movsl
sub
jns
xor
mov
in
test
daa
sub
jno
cmp
adc
push
sub
xchg
faddl
fcoms
popa
or
mov
jnp
sarb
push
jo
shll
mov
push
sbb
sub
into
push
pop
int3
sub
adc
xorl
add
jl
xorl
pusha
dec
and
imul
iret
js
repnz
fistpll
push
mov
jecxz
pop
mov
mov
rcrb
lock
cmp
adc
sbb
aad
cmc
cmpsl
xor
mov
cmpsb
dec
inc
cmpsl
inc
cmp
and
mov
or
or
nop
sbb
jecxz
js
cmp
daa
popa
sbbb
push
xchg
inc
xchg
push
mov
mov
and
adc
arpl
loopne
xor
lret
loopne
xor
cmpsl
inc
and
hlt
scas
xchg
fdivs
leave
push
in
cmp
mov
dec
and
xchg
mov
cli
jmp
imul
ds
les
loop
or
xchg
add
mov
cltd
cwtl
xchg
cmp
adc
xchg
lcall
mov
or
push
sbbl
xor
bswap
xor
shr
pop
mov
xchg
insl
or
aam
int3
xchg
jne
call
dec
sarl
inc
jg
jne
fcompl
cmpsl
mov
pop
ret
rcll
test
jno
dec
xchg
and
shld
in
sub
add
xchg
inc
push
push
mov
xchg
adc
xor
sahf
push
xchg
imul
pop
aad
adc
addr16
mov
sbb
out
jl
ds
adc
cmc
push
stc
outsb
movsl
rcr
leave
test
movsl
dec
or
mov
lret
push
push
jne
int
popa
addr16
pop
les
cmp
adc
lods
mov
or
jo
adc
lock
mov
push
dec
xor
enter
out
dec
mov
adc
push
mov
inc
and
add
mov
in
xchg
sub
filds
sub
in
roll
add
xchg
pop
push
xchg
rclb
pop
lret
cmc
divb
jp
aam
inc
or
pop
into
icebp
push
popa
jb
cmp
xchg
sbb
movsl
imul
shrl
cli
inc
rcrl
insl
pop
insb
inc
or
popa
pushf
dec
sbb
pop
jl
inc
cli
jg
pop
mov
adc
jno
syscall
stos
sub
cmc
shll
fisubrs
lods
notl
out
adc
js
push
cmpsl
cld
pop
pop
lea
loopne
imul
call
fs
test
les
mov
adc
cwtl
out
cmpsb
mov
xlat
sbb
push
jbe
jg
jb
mov
jmp
es
lahf
ret
and
cltd
test
adc
out
bound
or
push
mov
xor
or
fidivl
loopne
add
cs
mov
das
cmp
push
pop
mov
enter
cmc
inc
xchg
movsl
repz
pop
lret
mov
sub
add
sbb
sbb
lods
adc
and
sbb
jg
mov
sbb
in
sbb
js
lods
dec
lcall
jo
loope
scas
sbb
mov
sub
push
sub
adc
pop
ret
sub
add
jmp
fs
xchg
jle
daa
push
push
mov
xor
test
mov
gs
sub
jl
inc
and
bound
pop
jp
jl
insb
lcall
popf
inc
jno
stc
xchg
les
adc
mov
into
mov
mov
leave
out
pop
jmp
bound
fidivrl
rcrb
sbb
mov
bnd
add
mov
leave
das
push
mov
xor
sub
push
cmp
subl
adc
out
and
jmp
lods
es
jo
popa
cld
mov
and
dec
pop
pop
sub
adc
inc
mov
gs
movsb
or
cmpb
and
aaa
add
cmp
and
int
les
and
out
mov
nop
fsubrl
inc
add
insl
iret
and
fisubrl
cmp
cmp
xchg
sub
loope
push
lret
movb
dec
loopne
mov
push
inc
sar
cmp
add
sbb
not
fdivr
ss
pop
xor
adc
gs
mov
ret
jne
test
dec
mov
pop
orb
out
push
dec
fstps
fdiv
das
and
pusha
adc
les
mov
sbb
push
xor
loope
sub
lahf
ja
jne
sbb
pop
mov
adc
sbbl
je
pop
xchg
push
add
es
iret
jae
gs
mov
popf
cltd
call
adc
push
lods
shl
arpl
jg
sbb
adc
fs
lods
lea
add
mov
jo
hlt
mov
sbb
in
call
daa
and
es
sbb
mov
in
std
test
fsubs
shrl
mov
lcall
insb
sbb
pop
cmpb
or
jnp
push
movd
orl
mov
cmp
outsl
scas
push
cmp
adc
std
dec
je
rcl
push
in
clc
push
testb
and
xor
lods
xchg
cmp
in
scas
sbb
addr16
pop
fcomip
inc
xchg
push
jne
movsb
addb
adc
lahf
jp
mov
add
and
mov
dec
cmp
popf
pop
adc
jmp
and
and
or
test
int3
incl
mov
out
sub
addr16
dec
jns
or
cmc
and
dec
sbb
inc
pop
fs
stos
cmp
clc
mov
adc
or
sbb
fistl
js
fcoms
in
imul
dec
jl
mov
jl
pop
stos
mov
test
mov
in
pop
and
decb
mov
lret
icebp
fnstcw
cltd
sub
mov
or
cmp
jg
or
mov
mov
shlb
or
sbb
aaa
inc
pop
mov
sbb
add
dec
in
dec
mov
mov
in
xlat
jp
sub
add
lods
sbb
fisubl
add
lret
shrb
iret
dec
movsb
dec
push
fadds
pop
mov
jle
jp
push
loope
mov
mov
clc
sub
fwait
jp
push
adcl
inc
aaa
mov
sti
cmp
sub
jl
sbb
into
jns
mov
mov
fwait
popa
lods
push
daa
adc
or
mov
pop
pop
test
lret
sub
dec
push
ds
sti
xor
mov
or
cmc
out
mov
fmul
dec
lcall
mov
mov
adc
idivl
mov
dec
adc
sub
lahf
insl
pop
cmp
or
fildl
fwait
lsl
cmp
int
es
jg
dec
sbb
and
lcall
adc
shr
lret
xor
inc
fidivs
rcrb
fimull
les
leave
sarb
fsts
out
mov
inc
push
pop
mov
cmp
cmc
mov
sbb
inc
enter
xchg
pop
push
gs
mov
mov
fbstp
and
out
pusha
mov
mov
sub
pop
or
inc
sahf
sbb
add
cld
loop
pop
les
add
xchg
fcoms
mov
sbb
das
push
divb
enter
cmp
add
dec
mov
or
mov
pop
movsb
push
std
outsb
fistps
rclb
in
jecxz,pt
adc
inc
fcmovne
out
aaa
pop
jmp
daa
cmp
push
sti
inc
mov
inc
mov
or
add
cmp
mov
jne
cmpsb
jno
movsb
scas
and
je
pop
aaa
mov
adc
cmp
aam
xchg
mov
mov
divb
dec
pusha
or
outsl
movsb
mov
mov
cmpl
pop
int3
cmpl
mov
aas
inc
bound
leave
gs
pop
adc
repnz
loop
fucomip
dec
lret
fs
xchg
dec
mov
sbb
into
out
je
inc
mov
jp
jns
andl
jmp
jmp
in
lods
xor
shld
dec
stc
cli
mov
icebp
mov
xor
push
dec
shrl
in
or
adc
jae
lcall
xchg
out
sbb
sbb
icebp
fmuls
xor
jns
jl
sbb
insl
lahf
and
test
mov
lock
lcall
ret
and
inc
or
dec
sub
pushf
movsl
xchg
loope
insl
jb
push
dec
cwtl
mov
adcl
and
or
adc
jg
mov
dec
xchg
je
jge
sub
mov
outsl
daa
push
push
xchg
or
jae
pop
popa
lcall
ret
lods
out
mov
lcall
out
lahf
push
adc
inc
mov
push
fisttpll
push
sub
insl
and
mov
in
fwait
cmpsl
es
ja
jne
loopne
addr16
adcb
cmp
int3
pop
aas
and
ficoml
ret
mov
inc
pop
jl
dec
xor
dec
pop
push
js
clc
xor
pop
fldt
or
lods
lahf
or
mov
sub
xor
jnp
and
out
xor
inc
sbb
jno
jne
mov
xor
outsb
mov
out
pop
pop
xor
int
jge
dec
leave
sahf
cmp
cmp
sub
mov
add
lret
push
lock
cmp
movsb
lret
lea
std
mov
push
adc
push
stc
push
xchg
ss
push
xchg
sub
jg
jns
mov
es
mov
out
lret
incb
adc
sub
lods
loopne
test
pusha
mov
daa
push
mov
movsl
insl
scas
mov
test
pop
in
sub
imul
in
leave
insl
out
sbb
aam
shll
xchg
mov
mov
lea
fsubrs
jnp
outsb
inc
mov
aas
lret
mov
inc
movsl
hlt
gs
nop
pop
lods
xor
and
arpl
xchg
fmuls
lcall
shl
adc
dec
les
mov
pop
lret
lock
jnp
fdivrp
in
mov
sbbb
rclb
push
add
push
aam
pop
adc
push
or
lahf
add
call
dec
jl
popf
jecxz
xchg
xor
and
vcvtsi2sdl
dec
dec
pop
clc
loope
pop
sbb
idivl
ja
cmp
mov
jbe
dec
cltd
fildll
pop
add
and
xor
or
cmp
ja
jae
cmp
mov
divl
and
jle
cmp
mov
and
push
icebp
movsb
loop
imul
outsb
ljmp
inc
jmp
xor
cmp
fidivs
mov
cmp
shl
jge
std
sbb
dec
mov
and
test
and
hlt
cmp
outsl
mov
and
mov
into
scas
fidivl
inc
xchg
mov
pop
popf
xchg
int
and
test
and
jp
push
repz
sub
adc
xor
sbb
mov
stos
stos
pop
inc
sub
add
push
add
sbb
adc
les
lahf
shlb
jno
pop
pop
psubusb
pop
or
or
fcmovnb
inc
int
clc
cmp
adc
insl
insl
push
and
push
ds
rcr
sbb
dec
enter
repz
idiv
js
scas
icebp
fldcw
push
cmp
les
arpl
cmc
adc
adc
dec
or
lcall
jg
stos
je
repnz
and
adc
scas
in
mov
xor
pop
lods
dec
fsubl
cmp
imul
mov
push
incl
test
icebp
push
subb
filds
add
scas
jle
inc
adc
cmpsb
inc
sbb
addr16
or
in
adc
and
mov
pop
dec
lock
cli
ret
lea
imul
mov
or
inc
lret
push
and
out
xchg
ja
loopne
inc
bound
fld
push
notl
jo
icebp
push
fld
test
aad
iret
mov
mov
sbb
mov
xor
fwait
add
int
test
cltd
int3
mov
icebp
leave
jmp
and
mov
mov
mov
and
dec
mov
adc
cmpsb
arpl
call
push
addl
fmul
push
les
add
std
out
pop
es
repnz
xor
decl
pop
adc
pop
nop
sbb
inc
out
mov
mov
inc
xchg
pusha
adcb
adc
adc
lods
fwait
mov
or
jmp
filds
es
lods
mov
jno
mov
jle
jb
inc
push
xlat
mov
iret
lret
push
outsb
aaa
xor
stc
mov
and
bound
mov
fs
ficoms
popa
pop
cli
and
lods
and
push
repnz
dec
out
loopew
and
fidivrl
jne
jns
xor
sbb
outsl
mov
push
test
and
addr16
mov
pop
jg
push
adc
jg
add
jmp
lret
xor
ret
cmp
cmp
mov
xchg
dec
sahf
sbb
xor
sti
jo
mov
push
inc
pop
pop
push
sub
inc
mov
out
ss
sub
loope
insl
ja
ljmp
gs
psrlw
cmpsb
movsw
cltd
jle
insl
cmp
inc
mov
data16
dec
dec
cmp
lods
loopne
push
inc
imul
add
inc
jmp
jnp
pop
ds
inc
stos
lahf
cmp
sub
xchg
sahf
ret
pop
lret
inc
sub
add
or
xchg
jp
test
cmpsb
movsb
inc
mov
pop
xor
jl
ret
sub
jg
sbb
mov
pop
lds
inc
dec
outsb
mov
xor
rdmsr
ja
into
gs
fistl
mov
in
test
mov
mov
inc
in
rorb
hlt
call
mov
cmp
nop
xchg
sub
adc
pop
xchg
push
movsb
dec
popf
xor
inc
lret
jmp
addl
lcall
pop
jecxz
inc
pop
or
add
lret
xchg
and
in
jo
dec
insl
fmul
adc
push
sub
pop
jo
inc
mov
daa
adc
pop
push
out
in
pusha
aaa
insl
mov
xchg
add
lret
or
sub
jne
or
mov
jno
movl
sub
xor
dec
mov
mul
movsb
mov
sbb
fbld
jb
cmpsl
push
cli
push
int
inc
adcl
or
xor
inc
ror
sbb
negl
fwait
je
gs
or
or
mull
sub
mov
pop
mov
adc
dec
out
jae
mov
sbb
loop
cmp
imul
xor
mov
ja
sbb
fdivrs
mov
inc
into
je
mov
and
scas
mov
and
jns
xchg
fsubrs
cmp
cmp
cld
jl
mov
leave
push
insb
mov
add
mov
cmc
push
or
scas
sahf
shll
lcall
dec
dec
mov
or
je
xchg
mov
xlat
pop
pop
push
dec
inc
adc
sbb
cmp
outsl
das
sbb
push
ja
test
pop
in
jno
dec
lods
fnstenv
std
cltd
cli
insb
ss
andb
faddl
dec
cmp
cwtl
jmp
lahf
cmp
adc
cwtl
or
xchg
movsl
inc
aad
cmp
sahf
aas
and
or
fisttpl
cmp
xchg
mov
mov
cld
insb
mov
add
sti
pop
addr16
add
mov
fistl
iret
mov
mov
push
int3
fnstsw
cmp
mov
mov
mov
call
mov
movsb
out
cmc
pop
pop
andb
cmp
xchg
addr16
lods
iret
lods
sub
gs
fldenv
test
xchg
arpl
out
cwtl
adc
pop
xchg
push
pop
das
and
mov
xor
lods
xchg
repnz
stos
rorl
and
sahf
dec
mov
aad
sbb
xor
leave
gs
aad
mov
dec
in
mov
les
and
jl
nop
ficompl
repnz
sbb
sbb
mov
sbb
mov
iret
addl
aad
mov
fisttpl
adc
outsb
jae
xchg
imul
add
mov
dec
sbb
pop
popf
cltd
cmp
cmpl
sub
loop
sub
add
dec
push
inc
loope,pn
out
cmpsl
arpl
inc
jb
xlat
pusha
mov
fwait
cmp
rorl
jbe
in
adc
sbb
sbb
pushf
arpl
shll
add
ret
test
xchg
adc
mov
cmpsb
imul
imul
shll
pop
mov
stos
sbb
dec
push
insb
jns
jo
cltd
fldt
inc
les
rcrl
mov
iret
inc
lock
adc
enter
pusha
repz
lret
dec
outsl
dec
je
dec
test
cwtl
test
jle
mov
xchg
es
mov
pop
shrl
pop
push
test
out
xchg
mov
mov
and
cmpsb
lea
xor
call
jo
sub
jle
cmpsb
rolb
adc
adc
mov
cmc
jnp
andl
push
jp
mov
push
imul
lret
push
inc
shrl
cmp
cmp
dec
xor
sbb
push
fwait
pop
loope
pop
cmp
iret
mov
clc
dec
adc
dec
push
and
cmp
hlt
gs
cmp
cmpsb
xor
mov
mov
sti
jecxz
pushf
dec
loopne
cmp
lds
mov
mov
lret
fsub
subl
xchg
pop
lret
lods
sbb
or
mov
jbe
and
ja
loop
or
or
jg
dec
add
dec
xchg
sub
push
sub
fs
adc
add
cmp
stos
dec
cmc
pop
mov
pop
ficoml
sbb
pop
pop
adc
cmp
rcrl
aad
scas
mov
xchg
pusha
in
in
and
aam
and
adc
mov
ret
fidivrs
test
cld
lods
or
mov
pop
cmpl
xchg
inc
inc
ret
xchg
call
lods
jl
shrl
dec
ja
or
dec
sbb
mov
add
add
mov
cmpsb
insb
ret
xor
xchg
and
add
jmp
movl
sarl
in
push
xchg
xchg
mov
pushf
int
int
add
sub
or
inc
adc
loop
hlt
filds
mov
sub
arpl
jbe
clc
jnp
mov
mov
cmp
sub
fiaddl
outsb
push
push
sub
lahf
movsl
sbb
and
jns
pop
sbb
or
subb
dec
lock
rcr
lock
outsb
lcall
adc
xlat
xor
aad
push
loop
xor
fidivrl
xchg
pusha
imul
pop
aam
lahf
mov
jbe
fcmovu
lea
shrb
and
jnp
fwait
cs
cmp
andl
in
shrl
xor
call
ret
popf
mov
pop
in
or
jbe
sub
pushf
ss
push
mov
dec
fdivp
sbb
sbb
pop
bound
mov
mov
aaa
clc
jle
jbe
pop
push
cmp
add
movb
test
aad
shl
mov
mov
stos
cmp
cltd
lds
ret
daa
mov
int
out
mov
push
and
or
jns
cmp
rorb
in
mov
sbb
cmp
scas
scas
jge
sbb
cs
lds
cld
xor
insb
rolb
rorl
shrb
fs
clc
mov
orb
call
in
adc
repnz
xchg
add
movsb
sbbb
scas
jp
repz
cmp
adcl
xchg
or
mov
cli
sahf
inc
stc
or
gs
pop
pop
jg
scas
in
pop
push
or
adc
hlt
push
sti
scas
in
and
dec
rol
mov
sbb
add
mov
je
loopne
mov
and
jmp
orl
lock
and
test
sbb
jb,pt
shlb
bound
das
fildl
js
stc
lock
add
add
faddp
jnp
clc
sbbb
lea
cld
fwait
lret
gs
adc
push
sbb
pop
test
imul
test
fwait
mov
push
cmp
cwtl
cld
divl
out
dec
jb
jae
sbb
adc
outsb
and
xchg
lahf
flds
inc
pop
scas
pop
mov
inc
xchg
lea
dec
mov
cli
ret
icebp
and
push
into
pop
loop
xor
sbb
stos
imul
test
pop
incl
bound
inc
cmp
test
or
in
in
pusha
mov
leave
aaa
repz
addl
imul
insb
mov
fcompl
mov
lods
xor
xchg
jmp
scas
push
jmp
mov
loop
rolb
jo
pop
xchg
lahf
xchg
mov
add
mov
fstl
mov
xchg
movsb
jns
push
outsl
aas
cmp
arpl
xchg
push
pop
shl
pop
xor
lods
dec
and
cld
sarb
test
add
sub
cmpsl
leave
into
sbb
pop
call
and
xor
sub
push
inc
int3
push
out
and
inc
jl
mov
and
pop
jnp
add
fistl
and
rorl
adc
ret
test
movsl
fbld
sbb
push
mov
and
push
mov
bound
rorb
or
call
outsb
push
outsl
pop
xchg
jbe
pop
scas
test
test
or
mov
mov
jge
dec
pushf
sbb
mov
dec
pushl
pop
ss
mov
or
cpuid
mov
add
call
fcmovb
fscale
popf
ss
dec
outsb
jl
mov
mov
push
mov
mov
xor
adc
add
dec
imull
stos
popa
nop
mov
xchg
cltd
mov
push
push
imul
jns
pop
aam
inc
jecxz
inc
push
mov
or
lcall
push
sub
outsl
popf
testb
out
fcmovbe
js
adc
pop
ljmp
sub
imul
int
xor
ds
add
xchg
mov
xor
mov
inc
pop
out
sub
icebp
push
decb
or
and
add
iret
fs
ss
push
adc
int3
fwait
dec
xchg
lock
jl
adc
lods
stc
into
icebp
mov
dec
sub
lea
cmp
outsb
or
shrl
mov
mov
pop
in
or
push
je
or
adc
lahf
iret
mov
aam
cmp
mov
or
or
sub
ja
jle
outsb
mov
ljmp
aas
outsl
or
add
aaa
test
ljmp
dec
xorl
jns
sarb
xlat
mov
add
or
stos
cltd
shrb
es
mov
xchg
sti
pushf
mov
jb
mov
enter
jno
xlat
pop
js
adc
jae
xchg
mov
xchg
jae
pop
mov
pop
mov
gs
inc
jp
sub
mov
lret
dec
cmp
jp
cltd
mov
pusha
orl
sub
jecxz
loop
sti
mov
out
rorb
lcall
or
data16
dec
adc
or
xchg
sub
cli
dec
andb
add
addb
mov
jbe
cmp
or
cmpsb
mov
mov
pusha
lds
mov
data16
int3
xchg
xchg
scas
sub
mov
jle
mov
out
push
add
jp
inc
push
jno
adc
sub
jne
ljmp
sbb
inc
inc
push
jmp
xchg
jns
insl
addb
ficoml
popf
dec
xor
cmp
loope
out
lahf
sbb
pop
jb
test
pop
mov
scas
shl
inc
and
jae
pop
sub
inc
mov
rolb
push
sub
pop
out
ret
xchg
sahf
push
sub
xor
xchg
scas
pop
cwtl
ret
inc
cltd
sub
inc
ja
mov
mov
inc
mov
push
mov
xchg
xchg
mov
push
pop
push
xor
add
scas
jns
pop
xchg
jne
push
inc
dec
test
adc
jmp
mov
mov
ss
sbb
adc
mov
jmp
js
xor
int
test
lret
ret
shrl
mov
mov
adc
jb
mov
jnp
dec
xchg
jge
pop
and
stc
jmp
sub
or
dec
es
add
cmpsl
movsl
push
push
xlat
sti
add
mov
pop
inc
push
sub
jmp
or
stos
cmp
sub
lods
mov
cltd
clc
mov
into
shrl
xchg
faddl
or
cmpb
inc
dec
sarl
lcall
xor
lock
add
jne
jnp
mov
repz
cmpsb
ljmp
sbbb
clc
arpl
aaa
mov
in
outsb
out
fsubs
fstl
and
lahf
mov
push
pop
in
pop
sbb
lock
xchg
cmovo
scas
jecxz
push
push
fidivl
xorl
add
test
ret
jecxz
out
adc
cmpsb
scas
shrb
xor
pop
sbb
cmp
cld
push
repz
dec
aam
jne
sub
xor
scas
jb
sahf
jo
mov
pop
xchg
inc
pop
outsb
mov
sub
fstpt
imul
fwait
mov
sbb
cs
cmp
and
inc
and
xlat
scas
adc
test
dec
inc
mov
xor
jae
inc
xchg
out
xchg
pop
jmp
aam
inc
push
leave
jl
jmp
pushl
xchg
cmpsb
pop
fs
mov
out
mov
cmp
out
and
jno
sub
hlt
mov
jno
jnp
outsl
adc
cmpb
adc
push
add
inc
shr
xchg
cmpsb
movb
lcall
rolb
inc
inc
cltd
mov
insb
jno
inc
sbb
rcrl
imul
jmp
es
or
int
dec
lock
out
push
in
out
es
jnp
repnz
add
or
aad
jecxz
aad
insb
fst
push
rcrl
mov
cli
ror
lods
in
or
pop
lret
adc
test
mov
mov
jns
mov
xlat
dec
fsubrp
pop
add
push
daa
cmpsl
cli
dec
bound
sub
jne
sbb
les
adc
dec
sahf
sbb
xor
sbb
jns
xchg
dec
push
xor
fs
pop
inc
ds
dec
dec
xchg
frstors
lods
scas
mov
test
adc
push
xchg
imul
aad
sub
adc
cmp
mov
xchg
xor
push
pfcmpge
sahf
xorl
mov
cmp
xchg
out
loope
fnsave
rclb
xor
js
mov
out
mov
lret
outsl
lret
mov
push
jl
push
scas
sub
pusha
and
xchg
jns
sbb
xchg
ret
mov
dec
jns
push
jmp
bound
pop
scas
adc
cmp
jp
orb
fxtract
cmpsl
sub
dec
std
mov
outsb
xor
push
dec
scas
int3
cmp
out
push
rcll
andl
scas
pusha
arpl
test
sbb
dec
nop
sbb
pop
aas
mov
inc
out
dec
movsb
adc
pop
in
jp
sbb
inc
out
push
call
cmp
pop
inc
rcrb
adc
fstpl
jge
sti
adc
mov
mov
fidivrs
les
and
add
aas
mov
mov
pop
sbb
test
lock
pop
inc
out
push
pop
loope
test
and
aas
into
cmp
cmpl
scas
shr
mov
push
jge
jnp
jle
jecxz
adc
push
fimull
push
dec
ljmp
ljmp
mov
ds
and
inc
sar
popf
and
mov
int
add
push
or
mov
inc
and
mov
je
mov
xor
sub
adc
mov
mov
cmp
adc
add
rclb
cld
cmc
in
push
jge
jmp
mov
or
loopne
xchg
lcall
inc
imul
fistl
int
adc
daa
push
mov
rcrl
inc
cmpsb
mov
add
push
scas
subl
cmp
adc
add
call
inc
dec
insb
notl
shlb
pop
stos
int3
cmc
push
sbb
js
enter
int
jns
sbb
sbb
push
fsubs
lods
cli
fildll
jecxz
test
lods
fldl
iret
dec
repz
push
cmp
cmp
stc
repnz
mov
xchg
pop
push
sbb
js
pushf
repz
repnz
cwtl
cmc
invd
mov
fsts
dec
mov
xchg
inc
or
jge
int
les
mov
xchg
ljmp
push
in
add
push
insl
jg
dec
xchg
mov
shlb
sbb
je
jp
dec
sub
shll
aam
test
and
sbb
adc
filds
xchg
mov
mov
sub
mov
jl
test
jae
push
push
xor
gs
xor
sbb
cmpsb
add
xlat
inc
xchg
sbb
add
cmpsb
xor
out
sahf
adc
cmc
xchg
in
idiv
stc
lock
jno
addr16
xchg
jo
outsb
and
or
enter
je
test
gs
cltd
adc
mov
and
cmp
mov
test
or
pop
not
hlt
sbb
dec
cmpsl
and
popa
adc
cmp
mov
fists
add
fnstcw
rclb
push
data16
icebp
xor
and
loopne
je
ja
clc
sbb
addr16
xor
push
sub
mov
add
cmpsb
mov
jb
pop
ja
add
cmp
xor
push
jp
enter
pusha
arpl
mov
push
inc
out
lahf
xor
mov
adc
sub
and
loope
mov
lret
mov
mov
and
aaa
mov
sub
sbb
push
jp
ljmp
loop
push
es
in
mov
inc
lods
mov
mov
jl
cli
arpl
aad
insb
mov
outsb
insb
jnp
movsb
enter
jmp
inc
lret
aaa
jnp
cmpsb
outsb
data16
cvtps2pd
xor
xchg
jo
dec
pop
jne
and
mov
daa
dec
test
scas
pop
xor
sub
mov
lods
mov
dec
mov
mov
sbb
inc
adc
cmp
fxch
inc
sbb
pop
and
pop
stc
repz
and
cmpsl
mov
pop
inc
sub
lods
stos
loop
ljmp
pusha
das
addl
inc
in
dec
dec
and
arpl
mov
loope
rcrl
pushf
in
xchg
pop
ret
mov
pop
lcall
mov
loop
push
ss
test
out
test
cltd
ret
add
loopne
outsb
popf
jp
in
push
ds
jns
fs
and
dec
cmp
loope
dec
sbb
mov
and
cmp
cmc
push
gs
int
push
ja
int
jnp
mov
mov
cmp
dec
imul
mov
in
sbb
arpl
sarl
cmp
mov
in
shlb
jp
jne
fadds
jg
test
int3
dec
adc
sbb
ds
jle
mov
leave
sbb
jns
repz
mov
dec
mov
pop
jnp
mov
cli
aas
into
movsl
jnp
loopne
and
inc
ljmp
ss
pop
add
rep
je
jecxz
pop
mov
xor
inc
sub
adcb
stc
shrb
and
in
pop
pop
pushl
dec
aaa
popa
ret
clc
les
scas
sbb
cltd
sub
cltd
scas
jae
bswap
jecxz
cld
mov
daa
inc
mov
sbb
sarl
inc
xchg
inc
or
pop
jecxz
mov
adc
ss
mov
add
rcrb
clc
sbbl
push
xor
sub
jg
adc
xor
dec
cmp
cs
loope
xchg
int
inc
jg
cmp
lahf
cmp
pop
jno
insl
cld
fld
cld
ficoml
popa
fcomp
or
ss
rcl
sarb
clc
shlb
repnz
pop
repnz
cs
pop
es
mov
dec
jmp
add
inc
cli
inc
clts
in
aaa
lods
mov
adc
jl
mov
test
fnstsw
jnp
xor
and
dec
mov
jp
dec
outsb
out
loop
xor
pusha
scas
test
test
ret
pop
outsl
mov
insl
mov
mov
adc
les
mov
dec
jae
loop
sbb
sbb
jg
xor
or
push
and
mov
mov
mov
add
pop
or
jg
mov
dec
repz
adc
ss
sti
sub
rolb
xor
aas
push
cmpb
cmpsb
dec
sbb
mov
cmp
mov
mov
enter
dec
xlat
out
sub
mov
repnz
add
mov
jge
fadds
stos
dec
movsl
nop
shr
cwtl
xchg
aas
mov
scas
imul
and
cmp
pusha
or
or
cmp
cli
aad
fidivs
sti
mov
xchg
imul
jb
inc
push
push
and
aaa
lock
mov
les
inc
and
mov
fs
into
jl
cmp
out
lahf
outsl
and
inc
pusha
cmp
popa
cmpsb
aaa
inc
xlat
jno
imul
xchg
mov
fcoml
lods
pop
mov
add
mov
xor
cmp
cmpb
push
fsub
pop
shl
cmc
cmc
mov
imulb
loop
in
xchg
mov
xchg
push
adc
mov
and
xor
adc
cmp
jnp
filds
cs
imul
fcoml
lret
popa
jnp
lcall
add
shr
lods
mov
cmp
nop
adc
shrb
stos
mov
adc
cli
jnp
jecxz
cmp
dec
mov
inc
jne
sti
dec
jne
jp
or
pcmpgtb
or
loop
loop
mov
popf
jl
int
adc
das
nop
add
jg
jne
lods
pop
nop
dec
ficoml
ds
enter
mov
dec
and
stc
mov
push
jecxz
sub
or
inc
dec
push
les
gs
test
daa
lcall
pop
xchg
cmpsb
pop
loop
cmp
mov
mov
dec
pop
fs
mov
xchg
lahf
cmp
aam
push
cmpsb
loope
inc
out
aam
push
cld
ficoml
iret
xor
adc
push
repnz
jp
fildl
fbstp
fnsave
adcb
mov
jge
ljmp
mov
sub
push
sti
xchg
jbe
push
xchg
fisubl
adc
sub
sub
popa
sbb
sbb
mov
inc
ds
xchg
xchg
into
push
cmc
jo
fisttps
cmpsl
adcb
adc
scas
add
sbb
pop
mov
int3
jae
xchg
loop
fsub
mov
inc
inc
aaa
inc
or
jb
jns
xchg
je
mov
pop
mov
fcmovbe
and
mov
repnz
mov
lods
xchg
dec
adc
add
call
xchg
dec
cmp
aas
jo
dec
cli
or
je
ficoms
test
ficoml
lahf
ret
dec
in
inc
push
into
shlb
inc
iret
pop
stc
cmp
and
andl
out
setns
xor
les
push
clc
movsb
out
jno
shll
cmc
fnstcw
lods
fcompl
mov
jecxz
xchg
jb
int3
lret
arpl
lret
outsl
fimull
xor
push
mov
adc
cmp
sbb
call
stc
jmp
dec
out
jo
xchg
xchg
rcrb
inc
leave
cld
or
inc
jp
sbb
sahf
mov
loope
cmp
cmp
push
outsl
jge
insb
mov
pop
repnz
push
addr16
in
jle
out
dec
push
sub
mov
xchg
xchg
jecxz
orb
into
stos
push
pop
jbe
mov
pop
inc
int
jnp
xor
das
je
adc
cmpsb
lods
lret
outsb
out
cmpl
lret
mov
and
loop
mov
insb
dec
dec
ret
and
mov
gs
popf
addl
lods
hlt
lods
pop
cmp
lods
sti
jo
data16
flds
jns
pop
inc
lahf
xchg
mov
ret
or
mov
popl
adc
rcrb
mov
lahf
xlat
adc
out
sahf
cli
push
mov
ss
das
clc
sub
xor
daa
pop
xchg
js
mov
cmp
xchg
push
or
and
loopne
adc
lcall
sub
lea
fcmovb
fwait
add
mov
nop
sar
movsl
pop
add
mov
xchg
dec
add
mov
pop
pushf
mov
sbb
sub
into
sub
pop
cmpl
sub
shrb
mov
pop
xor
xor
sub
or
test
sbb
popf
add
xchg
nop
leave
sbb
fidivl
xlat
or
andb
push
lods
out
popf
or
sbb
call
scas
adc
mov
testb
adc
pop
mov
pop
and
push
dec
adc
cmp
jne
xlat
dec
adc
mov
mov
out
add
mov
lods
jbe
mov
loop
faddp
cli
sub
jbe
test
scas
pop
scas
fstl
mov
ljmp
in
outsb
sbbl
jbe
in
hlt
lock
fiaddl
outsb
or
adc
mov
xchg
ret
shll
fbld
mov
sub
pop
push
loop
test
xor
mov
lea
inc
mov
test
or
fldt
xchg
fildl
mov
mov
mov
shll
stos
mov
aam
adc
push
cmpsb
addr16
jbe
cs
aaa
and
mov
insb
ds
and
or
daa
sbb
add
inc
in
stc
pop
push
xor
int3
mov
aam
push
jo
inc
insb
aaa
dec
inc
js
add
cwtl
loopne
in
adc
or
mov
mov
add
mov
add
aaa
mov
jo
int3
cli
shl
cmp
cmp
popa
movsb
mov
test
xchg
pop
and
popa
pop
or
lcall
pop
int3
pop
cmpl
cmp
ror
daa
fdivrs
repz
and
push
mov
fwait
sub
popf
sbb
push
pop
jne
cmc
jge
sbb
push
lret
add
notb
imul
xor
loop
mov
jecxz
movsb
mov
mov
fbld
das
push
scas
pop
cld
dec
aaa
jbe
dec
cltd
xchg
iret
insb
pop
outsl
push
pop
fidivs
dec
sbb
mov
pop
jp
out
push
xchg
test
sub
hlt
inc
in
mov
mov
aad
mov
out
orb
je
xor
xchg
leave
mov
xor
dec
jb
cwtl
jge
outsl
cmp
inc
jbe
or
xchg
cmp
jp
aad
xchg
sub
test
sub
mov
add
stos
dec
mov
jmp
sub
pop
ret
iret
into
js
test
xor
xor
pushf
orl
sbb
dec
test
inc
mov
add
xlat
inc
lea
sub
sbb
xchg
inc
push
cli
inc
addr16
mov
shll
cmp
lods
add
insl
fbld
inc
sahf
dec
mov
iret
pop
inc
or
xor
push
daa
sub
xchg
mov
push
sti
stos
sub
fisttpll
ds
mov
sahf
dec
fimull
dec
int3
xchg
mov
clc
fcoms
xchg
or
push
std
sar
mov
sti
xchg
mov
pop
cs
or
movsb
pop
iret
dec
rol
pop
scas
sub
push
or
lret
xor
inc
or
mov
xchg
mov
sti
idivl
faddp
cmp
jno
arpl
mov
aas
jmp
testb
cmp
int
jne
sarl
fdivp
sub
pop
jmp
adc
push
and
mov
aaa
inc
fs
push
mov
push
xor
mov
in
sbb
add
and
dec
fcmove
test
and
lea
pop
xor
xchg
mov
ds
repz
xor
push
inc
js,pn
or
xorb
sbb
ficoml
les
sbb
pop
jne
cmp
fildl
aad
jge
imul
xor
push
aaa
cmp
mov
jmp
pop
push
xor
xorb
pop
ret
mov
movsl
andb
xchg
inc
lret
in
int
sbb
lcall
hlt
xchg
xor
xor
ret
mov
sahf
jae
jno
rcrl
dec
fcomip
mov
test
movsl
jno
movsl
jp
in
or
mov
xchg
mov
mov
jg
mov
add
negb
sahf
mov
inc
shll
notb
les
jo
test
cmp
mov
cmp
and
insb
jbe
mov
mov
ss
hlt
sbb
mov
test
mov
sbb
lods
ja
hlt
outsb
add
test
arpl
sub
mov
loop
jecxz
pop
mov
mov
lea
cmp
in
sahf
push
pop
mov
daa
mov
mov
icebp
es
xor
shlb
mov
clc
xchg
pop
je
sub
fildll
add
into
ja
out
daa
int
loop
mov
jp
mov
cltd
push
jae
cmp
loope
inc
add
sbb
and
jae
lret
dec
mov
repz
rolb
lds
sahf
popa
popa
inc
loop
loopne
stc
xor
xorb
insb
mov
repnz
das
sub
jbe
mov
scas
lock
xlat
xchg
adc
mov
pushf
lea
imul
ffree
pop
testb
cmpsl
in
dec
add
mov
gs
sub
xchg
mov
cmp
add
adc
mov
push
fwait
add
es
vpcmpeqw
gs
insb
test
lods
or
adc
pop
cmp
mov
adc
ss
cmpsb
pusha
dec
inc
sbb
inc
mov
and
push
sbb
stos
pop
mov
ret
mov
xchg
and
daa
lods
gs
test
insl
jno
dec
ss
cmpl
add
sub
lret
in
add
mov
add
lret
inc
mov
fistpl
xor
mov
sarb
xchg
xor
jmp
mov
adc
mov
inc
and
fs
je
int
adc
out
gs
out
jle
test
pop
jb
mov
aam
xchg
shll
inc
jne
shll
repz
mov
dec
xchg
in
and
add
push
add
pushl
pop
xchg
lds
and
out
adc
imul
xor
nop
cld
insb
not
loope
lds
fxch
cltd
lods
sub
movsl
sbb
xlat
mov
sti
add
xchg
pop
aad
cld
add
leave
add
hlt
out
imul
xchg
and
xacquire
pop
dec
push
popf
rorb
ror
ds
in
sub
mov
scas
fnstsw
mov
dec
dec
mulb
fwait
and
stc
adc
push
mov
inc
mov
push
fisubrs
mov
xchg
ficompl
shlb
enter
pop
xchg
pop
cmp
movl
adc
pop
pop
pop
xor
cmp
mov
scas
push
adc
add
or
pushf
adc
xchg
es
sub
push
mov
in
sbbl
mov
jns,pt
outsl
dec
sbb
push
sahf
jecxz
mov
sub
mov
dec
movsl
gs
das
sbb
andb
ret
pop
mov
mov
test
sub
stos
cs
mov
sbb
aas
sbb
sub
ljmp
test
sbbl
out
push
mov
jae
mov
mov
jp
pushf
jno
stos
cmp
loop
fisttpll
xchg
adc
push
cmp
xchg
pop
mov
pop
outsl
loopne
mov
mov
inc
jne
mov
or
push
je
adc
xchg
pop
add
pop
into
pop
cmpsl
mov
cmc
sub
mov
loop
cld
jle
std
sbb
rorb
lods
sub
or
mov
xchg
lret
jmp
push
push
push
fwait
scas
inc
cmp
aaa
push
lahf
out
and
int3
cmp
int3
push
and
xchg
add
xchg
aaa
aam
sub
sub
mov
dec
sti
push
push
and
inc
aam
xchg
cmpsl
in
adc
sbb
inc
pop
push
jp
aas
mov
insb
and
xchg
addr16
xchg
jno
inc
mov
cmp
pop
jmp
mov
fsubl
pop
and
aas
dec
mov
adc
mov
mov
jbe
das
sub
movl
repnz
orl
incb
push
xor
push
mov
movsl
in
call
dec
adc
mov
jg
pushf
std
cmp
jno
adc
mov
call
outsb
jge
inc
pop
fdivr
sbb
scas
ror
push
and
xchg
jmp
fwait
jecxz
or
inc
push
lret
dec
ficoml
pushf
mov
lods
lods
push
jmp
orb
and
fptan
test
lcall
xchg
push
jg
fisttpl
movsb
or
mov
jmp
neg
dec
repz
and
in
je
mov
inc
mov
cli
sbb
aad
dec
mov
mov
sbb
pop
inc
or
sub
aas
push
or
loopne
push
mov
cs
push
rorl
cmc
dec
lret
icebp
cmp
xor
popf
mov
sub
shll
loope
aaa
fldcw
daa
adc
cld
mov
mov
ret
ss
and
jmp
out
push
aad
sub
mov
out
ret
rcr
xchg
insl
and
rcrb
enter
adc
push
insb
in
je
fldl
mov
sbb
mov
lahf
sbb
mov
out
fidivl
dec
xchg
lods
mov
xor
and
adc
in
mov
inc
pop
inc
push
cmp
xor
pop
add
mov
dec
inc
test
in
cld
leave
gs
loop
fwait
sub
jb
sub
push
lret
fnstsw
pop
aam
cmp
push
lods
adc
inc
push
into
adc
repz
and
lods
fsubl
shl
loope
or
mov
ljmp
xorb
pop
xor
mov
fiadds
repnz
cmp
inc
mov
jae
das
loop
push
xchg
push
iret
std
popf
xchg
push
dec
or
mov
test
std
or
cltd
sub
add
or
daa
xor
inc
jg
pop
pusha
into
clc
loope
xchg
sbb
cltd
add
outsb
or
adc
fildll
push
mov
push
pushf
mov
add
in
pop
fs
xchg
push
addl
xchg
add
push
fisubl
jle
shll
enter
cmp
or
push
sub
out
pop
mov
out
sub
dec
lea
mov
cmpsb
inc
or
mov
mov
pop
xor
imull
mov
scas
pop
sbb
sti
inc
loop
repnz
inc
mov
enter
cmp
sub
int3
push
incl
jae
dec
inc
outsb
iret
cmp
daa
dec
sub
add
shll
fidivs
lock
into
bound
jg
hlt
cltd
jecxz
loop
cmpsl
xchg
add
lahf
sbb
xor
shlb
lods
xchg
mov
out
jp
stos
repz
mov
nop
adc
mov
enter
std
sub
lret
push
cmp
call
out
jecxz
lret
add
mov
cmp
mov
cmpsb
mov
stc
out
cli
adc
ds
or
aas
and
sbb
push
push
inc
mov
call
andb
mov
fwait
xchg
fimuls
int3
sbb
cmp
dec
cli
jnp
and
mov
xchg
lret
loopne
test
pushf
pop
or
aad
bound
ljmp
mov
or
cmpsl
lcall
daa
fistpl
test
adc
bound
lock
incb
aam
insl
mov
popf
fimuls
mov
setnp
aam
push
inc
movb
or
test
mov
add
pop
ja
inc
inc
in
inc
das
stos
ficoml
fstl
outsb
fsubrl
mov
mov
imul
jbe
cmp
sub
or
pop
and
xor
mov
aam
fcomi
stos
mov
out
adc
adc
xchg
xchg
lret
or
sti
pop
icebp
testl
add
cltd
in
jge
pop
and
jge
ds
into
in
test
hlt
cli
xor
sti
rclb
fisubrl
cs
inc
sahf
sbb
add
pop
sbb
xorl
pop
das
fdivl
pop
mov
mov
xchg
mov
aaa
jl
imul
sbbl
pop
or
ss
sbb
cmpsl
push
dec
jns
ja
mov
pop
cmpsl
lds
dec
cmp
cmp
pop
inc
push
mov
sbb
xchg
in
inc
leave
or
ficoms
call
adc
das
repnz
xchg
xchg
inc
mov
lahf
sbb
in
int3
adc
stos
mov
xor
mov
sub
ss
jmp
fs
push
pop
add
je
out
ret
mov
inc
jl
cmp
jg
movsl
sub
or
jno
add
or
repnz
pop
jle
popf
stos
aad
xchg
xor
inc
call
dec
fsts
xor
push
inc
pop
jno
cmp
int3
sub
insb
pop
mov
jecxz
stos
daa
cwtl
push
ja
ds
add
aaa
add
imul
add
jb
fs
mov
mov
push
sub
inc
dec
mov
std
jmp
rol
push
int3
xchg
xor
sbb
jnp
mov
repz
cmc
mov
shl
fsubrl
add
mov
nop
pusha
add
shl
xchg
jg
mov
xor
xor
jmp
cmc
cmpb
ds
mov
push
ror
imulb
popf
shlb
sbb
lahf
lcall
ficomps
lea
cld
loopne
ds
inc
nop
loopne
xor
or
mov
ds
jb
and
jb
daa
pop
xchg
push
push
stos
adc
lds
movl
jbe
ja
shr
mov
lret
ffree
arpl
mov
andl
call
aaa
xchg
fisubl
inc
and
xlat
inc
loopne
inc
add
adc
jbe
push
push
shlb
setle
clc
sbb
pop
pop
sub
insb
sub
or
cmp
js
cmpsl
mov
and
cs
addr16
lods
mov
lcall
push
xlat
arpl
into
push
fwait
loope
mov
dec
sbb
jecxz
inc
xor
xor
and
out
cmp
jne
lock
jp
jb
inc
jmp
out
mov
fdivrl
arpl
into
sbb
and
call
mov
test
les
fldcw
jge
pop
dec
jb
dec
or
dec
inc
icebp
aam
cmp
jle
stc
push
push
stc
stos
dec
or
push
jle
fstl
xchg
mov
rcl
cmp
scas
js
scas
and
and
fistpl
pop
lods
cmp
int
jge
inc
icebp
aad
sbb
int3
sbb
aas
sub
lret
mov
jne
push
sub
rorb
or
mov
jg
push
push
mov
mov
cltd
in
mov
lret
and
xchg
aas
mov
std
es
ds
push
push
or
sbb
das
sub
mov
repz
out
jg
ljmp
lahf
adc
enter
jns
ljmp
and
call
push
shlb
fdivr
popa
add
fcoms
mov
jbe
lods
out
mov
mov
xchg
inc
inc
pop
pop
rcll
std
mov
xor
cmp
and
mov
xor
cmp
popa
dec
test
and
and
lret
xchg
cwtl
jae
mov
enter
lods
and
and
xchg
frstor
lods
sbb
rolb
and
aad
imul
mov
fcmovnu
sbb
mov
cltd
arpl
call
jbe
dec
jnp
daa
loopne
xchg
stos
cli
mov
data16
out
clc
jp
dec
push
cs
xchg
push
xor
js
sub
les
adc
test
cld
add
int
dec
cmp
scas
pop
sti
aas
sbb
sub
jecxz
jle
sub
dec
call
push
invd
testl
add
push
cmpsl
nop
mov
dec
push
xchg
pop
sbb
adc
inc
ret
enter
jns
lods
xorl
and
js
push
and
sti
and
push
cmp
icebp
and
movsb
lds
les
and
pop
xchg
popl
xchg
daa
push
cmp
addr16
outsl
jnp
jbe
pusha
lcall
dec
jo
mov
sbb
mov
fdiv
lcall
js
cmp
or
stc
jg
invd
lea
fnstsw
sbb
mov
lret
jns
repnz
cmpl
lret
sbb
pop
sbb
xchg
decl
sbb
mov
sub
mov
stos
cmp
cmp
pop
out
cmp
dec
mov
mov
dec
jecxz
hlt
xchg
insb
add
jnp
dec
ss
cmpl
lds
mov
shll
mov
lahf
fcompl
sarl
mov
xchg
jno
jae
pop
add
push
pop
push
andb
filds
xor
into
xchg
dec
and
xor
inc
lahf
mov
aad
mov
stos
dec
inc
pop
cs
bound
mov
shl
xor
test
sti
push
stos
jmp
ja,pn
call
mov
dec
test
lock
ret
sti
inc
inc
cmpl
dec
push
insb
sub
jne
jbe
sub
pop
fistl
pop
sarb
dec
cwtl
pop
aas
out
aam
jns
movsl
cmpsb
adc
mov
fisubrs
imul
mov
jmp
xchg
or
je
fsqrt
push
je
mov
in
out
in
ror
pop
mov
outsl
dec
jg
adc
adc
adc
fs
dec
push
inc
adc
mov
mov
int
loopne
jae
mov
xchg
mov
or
xor
shlb
pop
cmpsl
inc
push
push
in
mov
test
fdivrp
fdivr
or
lock
dec
pushf
inc
xchg
cmp
mov
inc
mov
fcompl
flds
ret
add
mov
imulb
lods
xchg
fdivp
insl
adc
sti
aam
fbstp
mov
push
xor
jns
pop
jmp
mov
popa
push
jg
stos
add
mov
lcall
dec
pusha
mov
inc
cmp
jo
imul
inc
push
outsl
jne
mov
jp
push
into
fxch
es
shll
loopne
out
aam
sahf
xor
inc
xor
mov
or
int
sahf
and
sbb
push
xlat
mov
pop
adc
push
aam
mov
in
xchg
push
decb
sub
pusha
insb
cwtl
sbb
dec
movsl
sti
sbb
lret
ja
jo
movsb
cmp
stc
addr16
mov
sbb
inc
xchg
dec
int3
jecxz
add
daa
repz
mov
stos
push
cmpb
sub
pop
jmp
sbb
xor
sub
xor
xchg
call
fpatan
data16
ret
aas
add
xchg
lods
les
movsl
addl
punpcklbw
decb
sub
dec
or
les
in
mov
mov
inc
pop
xor
cs
jp
negb
sub
aad
dec
in
fstl
or
jo
out
sbb
mov
repnz
loopne
cli
adc
xchg
mov
in
pop
jle
incb
shlb
test
dec
cld
mov
repz
pop
xor
out
fbld
pop
add
xor
push
inc
mov
mov
inc
out
xor
mov
fptan
pop
sbb
push
imul
push
xchg
imul
repz
std
or
mov
lcall
jb
inc
stos
mov
imul
mov
fisubrl
mov
fidivrs
inc
insl
and
jg
mov
and
push
fnsave
jae
in
mov
jns
cmpsb
jg
sarl
into
imul
and
test
sbb
push
push
pop
daa
test
stc
mov
or
lods
fbld
inc
and
lret
mov
lret
xor
pop
push
push
mov
test
in
mov
mov
fwait
and
dec
jl
cmp
je
adc
daa
jne
std
pop
shl
jb
fdivrl
loope
stos
lock
ljmp
jmp
lcall
or
mov
inc
jle
pop
lahf
ficoml
mov
mov
push
and
mov
jecxz
mov
sti
sti
and
js
lock
sahf
ja
aas
hlt
xchg
pop
inc
loop
cmpsl
jmp
xchg
xor
in
in
pop
sbb
jg
xchg
jo
clc
xor
xchg
imul
xor
pop
dec
pop
xor
fs
xchg
pop
xchg
sahf
xlat
push
scas
inc
loopne
fsub
pushf
mov
jbe
outsl
in
lahf
rcll
add
xchg
rolb
pusha
negl
in
addr16
cli
out
xor
jae
jbe
pop
pop
std
push
sbb
lahf
and
fldt
adc
dec
test
jne
hlt
and
std
dec
xor
movsb
cmpsl
in
in
cmp
mov
mov
lods
mov
aaa
stc
sbb
mov
ds
lods
push
int
sbb
mull
or
sbb
outsb
add
mov
jge
dec
test
inc
cmp
aad
lock
sub
or
cmp
movsl
dec
mov
rcl
dec
add
shl
lds
icebp
push
and
sbb
loop
aad
decb
das
dec
or
or
mov
lods
adc
aam
iret
lahf
or
mov
push
loopne
push
sub
sub
call
mov
mov
scas
sub
fistl
cmp
xor
inc
enter
shlb
js
mov
aaa
xor
inc
out
imul
xchg
cmc
cmpsl
stc
fstpl
mov
sbb
or
stos
repz
jo
scas
push
pcmpgtw
cmp
mov
aas
dec
jl
loopne
jns
dec
inc
xchg
in
cwtl
orb
lds
dec
mov
add
into
testb
mov
mov
xor
lods
pusha
mov
mov
andb
stos
xor
xchg
mov
mov
rcll
sbb
inc
fs
mov
stos
loop
int
and
out
ror
lods
mov
jle
adc
fsts
mov
inc
int3
push
stc
mov
jo
js
imul
mulb
adc
xor
addb
and
mov
dec
mov
cmp
or
outsl
jbe
flds
addr16
cmp
add
push
addl
mov
mov
addr16
push
lods
push
jns
xor
push
ds
repz
aad
ret
cmpsb
loope
and
ss
xchg
xchg
dec
icebp
loope
pusha
scas
cmpl
scas
cld
aad
in
push
les
int3
scas
push
push
adc
popa
and
and
idivb
xor
xchg
adcb
pop
inc
inc
mov
incl
in
sbb
icebp
scas
enter
ret
stc
jg
cli
pop
xor
cltd
pop
aad
mov
cmp
inc
sub
push
rorl
dec
ljmp
push
insl
jmp
insl
adc
stos
lcall
cmp
js
jge
mov
rcrb
sbb
mov
out
and
vsubpd
jb
movsl
das
add
jp
cli
xchg
mov
jae
lcall
pop
inc
sbbb
mov
and
pusha
xchg
fstpl
inc
xchg
pop
jne
dec
call
lods
inc
flds
cmpl
mov
pop
push
jbe
aaa
sti
lahf
and
mov
push
imul
xchg
inc
or
push
or
nop
int3
push
cli
xor
fisttpl
fwait
mov
xchg
sbb
pushf
mov
jbe
jp
sbb
cli
sub
aam
test
xchg
adc
stos
xlat
mov
sub
insb
and
add
es
sbb
aas
sti
stos
pop
test
xchg
pop
ja
fbstp
inc
xchg
ss
mov
push
idivb
mov
ljmp
mov
lret
sar
dec
rolb
loop
xor
scas
push
or
aas
div
dec
test
lods
daa
mov
repnz
xchg
and
or
xor
dec
sti
ret
mov
mov
mov
dec
sub
ficoms
arpl
sub
xchg
in
pop
adc
push
fmulp
jnp
add
addr16
in
mov
ret
outsl
xchg
aam
inc
fbstp
cs
icebp
jmp
dec
mov
into
cmpsl
sahf
xor
push
adcb
xchg
ret
sub
and
insb
test
sub
je
subl
cmpl
clc
or
xor
ret
movsb
lret
lea
popf
sahf
pop
ret
aam
pop
lods
push
push
mov
sub
or
xor
popf
out
aaa
mov
mov
and
je
push
or
jae
xor
push
mov
lcall
movsl
fimuls
nop
insb
sbb
insl
mov
mov
pushf
fs
cmpsl
shlb
test
push
cltd
aas
ficompl
mov
xor
lcall
mov
add
mov
mov
mov
jns
data16
dec
jo
mov
stc
add
iret
cltd
pop
out
and
test
outsb
nop
fistl
int3
pop
test
push
xor
movsb
mov
addb
daa
lcall
sbb
sbb
sub
or
outsb
sbb
jmp
add
mov
jp
ja
loope
jo
xchg
push
addr16
sbb
jmp
mov
mov
push
stos
push
stos
lahf
mov
stc
xchg
xchg
lods
jae
mov
push
inc
aaa
movsb
aam
jno,pt
push
rcll
imul
jp
inc
push
negl
add
adc
jb
ds
sbb
mov
adc
jb
arpl
adc
push
adc
rolb
inc
js
xchg
inc
xchg
sti
mov
sub
mov
das
es
dec
mov
adc
sbb
addr16
inc
repz
test
ljmp
adc
andl
leave
insl
push
jno
sarb
xchg
push
lahf
pusha
push
sti
clc
je
sub
mov
fists
mov
fstp
aas
cmc
inc
lock
and
pop
push
push
push
xchg
les
ljmp
xor
iret
sub
nop
lds
mov
aas
and
mov
jl
jne
xor
push
cwtl
stos
push
adc
add
mov
test
fildll
jmp
pop
cs
sub
cmovnp
daa
push
subb
xchg
cmpsl
adc
mov
flds
in
test
mov
imul
lahf
je
es
sbb
add
lcall
dec
mov
mov
ficompl
mov
shll
bound
sbb
inc
pop
rcll
hlt
xor
out
loopne
adc
ljmp
stos
pushf
adc
ds
adc
emms
daa
push
xlat
pop
inc
xor
nop
jnp
or
cmp
sarl
jle
jae
andl
or
dec
push
icebp
cmpsl
das
adc
clc
dec
dec
dec
push
sub
fcompl
loopne
dec
dec
test
xorb
dec
imul
sti
push
pop
test
ja
lds
jnp
mov
xor
pop
cmp
dec
cmpsl
mov
js
aaa
es
sbb
jno
iret
lret
outsl
xor
repz
inc
cmp
ds
sub
cmpsb
lock
pusha
stos
add
insl
cmpsl
and
inc
mov
jbe
not
dec
lahf
cwtl
popf
push
lods
sbb
call
imul
and
cmpsb
cmp
imul
icebp
call
mov
adc
comiss
js
rolb
fnstenv
fstl
int3
js
stos
sub
stos
popf
sbb
xor
mov
popa
inc
cli
pop
lock
mov
xchg
arpl
cmp
mov
pop
add
push
cltd
mov
mov
sbb
shll
bound
stc
lds
aaa
mov
sbb
aam
in
adcl
mov
sbb
mov
lods
push
repnz
mov
mov
sbb
fistpl
arpl
adc
mov
push
cli
cmc
cmpsb
imul
rol
pushf
push
dec
or
adc
jns
push
inc
movsl
xchg
sbb
aaa
dec
xchg
std
lret
sarb
fcoml
add
mov
and
jecxz
fdiv
jmp
mov
xchg
into
lods
cmp
push
push
rcr
mov
mov
ss
and
inc
pop
push
repnz
and
pop
in
sahf
idivl
in
xchg
sbb
out
sub
inc
xchg
sbb
and
orl
idivb
jl
xchg
sub
push
add
adc
scas
leave
sbb
nop
jae
cltd
adc
roll
das
divb
adc
lcall
in
mov
mov
dec
lock
scas
popa
mov
mov
sub
mov
addl
push
adc
popa
stos
movsl
mov
xchg
jbe
sbb
fistl
dec
ja
repz
push
cmpsb
mov
pusha
cmp
xchg
lret
cmp
cmp
pop
pop
aam
mov
cmpsb
xchg
push
dec
and
xor
mov
loope
das
xorb
sub
rcl
sahf
pop
lret
les
inc
xchg
aas
loope
add
dec
mov
pop
testb
mov
mov
push
adc
add
mov
push
lcall
sbb
mov
xchg
push
xor
or
and
fwait
mov
sbb
push
call
jnp
mov
adc
gs
add
jge
test
adc
into
cmpl
lcall
sub
dec
or
xchg
sub
push
insb
aad
shl
inc
xchg
mov
pop
add
xor
in
mov
xorb
mov
mov
aam
fwait
dec
lcall
dec
clc
mov
jmp
scas
lahf
dec
sub
or
cmc
jge
rcll
sbbb
sub
xchg
sub
jle
xchg
jge
mov
and
push
mov
out
jne
pop
data16
mov
push
push
pop
mov
xchg
stos
rclb
clc
add
sbb
je
pop
cmpsl
mov
jg
pop
jg
mov
fldenv
xor
ss
in
push
sbb
call
int3
xchg
std
adc
xchg
ficoml
enter
mov
jnp
push
add
mov
or
pop
sbb
cmc
adc
sbb
cs
sub
fmulp
sub
out
pusha
stos
lcall
daa
sbb
xchg
sbb
sub
ljmp
je
sbb
scas
mov
pusha
daa
or
pop
out
fists
xor
jl
stos
pop
cmp
outsb
ja
pop
mov
mov
movsb
adc
aad
in
lock
jnp
out
add
inc
pop
mov
cli
dec
push
and
jbe
add
ja
dec
jae
and
mov
loope
jo
push
pop
jge
mov
stc
add
das
mov
loop
addr16
pop
bnd
or
shlb
and
push
xor
mov
imul
out
movsl
xor
icebp
dec
sbb
arpl
sub
arpl
dec
daa
lods
stc
jae
sbb
mov
dec
in
repnz
out
sbb
loope
or
and
sarb
fwait
mov
imul
aam
inc
addr16
or
insb
xor
pop
inc
xchg
xor
or
inc
mov
int
jae
jg
dec
inc
mov
push
sub
movsb
hlt
std
xor
xor
leave
mov
mov
xor
jbe
sbb
or
cmp
iret
aaa
and
xor
subb
mov
aaa
scas
inc
pop
jge
pop
sbb
xchg
push
lea
dec
push
inc
aad
inc
addr16
jmp
and
xor
inc
jg
in
dec
adc
jae
adc
add
mov
fwait
sub
mov
ljmp
xor
inc
pop
mov
mov
popf
xlat
movsl
inc
push
iret
pop
adcb
sbbb
std
push
mov
cwtl
sti
pop
jae
xor
loope
cmpsb
push
pop
aas
add
push
and
into
and
cmp
jns
jnp
fdivrl
sarl
fstpt
mov
dec
jle
or
shlb
mov
add
mov
pusha
lea
in
push
mov
cmpsl
lret
fwait
mov
mov
movsb
test
xor
and
lods
xor
in
jecxz
adc
sahf
ja
push
dec
in
stc
adc
add
jb
iret
test
adc
movsl
cmc
xor
mov
inc
data16
mov
and
mov
repz
jne
shlb
lahf
jl
fcompl
int3
push
in
aad
divb
nop
fistl
lock
sub
fcoml
call
jno
stos
adc
push
push
test
push
and
inc
shl
daa
adc
push
inc
movb
adc
or
movsl
xor
in
mov
test
mov
es
dec
popa
xchg
sahf
sub
inc
sti
xlat
cmp
call
popa
mov
mov
mov
in
les
ljmp
add
rcll
cwtl
mov
mov
loopne
int
fadds
shll
or
add
ljmp
aas
repnz
mov
dec
and
jnp
movsb
iret
clc
call
aaa
mov
sbb
adc
lret
push
jge
bound
aad
xchg
sbb
lea
movsl
repz
jo
or
call
int3
mov
xchg
inc
sbb
addr16
mov
mov
imul
xchg
jge
and
cmp
add
xor
lods
movsl
sti
imul
add
mov
loopne
dec
rolb
stc
jmp
pop
pop
imul
ss
adc
push
jno
xor
pop
jbe
jp
adc
loop
pop
aad
jecxz
and
adc
out
arpl
xchg
sub
pop
les
cmp
inc
xchg
pop
pop
mov
cwtl
xchg
ret
mov
sbb
lret
out
loopne
inc
sahf
mov
ss
jb
popa
inc
movsb
test
pop
js
fisttpll
dec
mov
sbb
es
aas
xor
ljmp
stos
adc
aad
jmp
jnp
sbb
iret
movsl
nop
cmp
ret
mov
fcom
rol
mov
into
mov
add
cmpsl
stos
and
rclb
pop
push
cs
push
ds
sub
lds
xchg
mov
add
mov
sub
lret
mov
xlat
cmp
mov
mov
fstps
nop
mov
mov
lods
movsb
outsb
sub
xor
stc
or
mov
je
cmp
mov
cld
xor
orl
repnz
sub
ret
aad
inc
jnp
mov
jmp
sbb
jbe
mov
loope
or
popa
inc
and
mov
dec
add
or
jae
push
dec
mov
loopne
cwtl
mov
xor
js
callw
mov
dec
test
pusha
es
pushf
adc
shll
repz
add
jno
dec
push
arpl
ja
jle
pushf
ljmp
mov
scas
test
dec
or
jb
out
dec
sub
ficoml
sub
stos
stos
mov
inc
outsb
jno
orl
jle
adc
aaa
stc
pop
pop
xchg
dec
jp
pop
xrstors
arpl
add
imul
push
cwtl
mov
aad
jle
sahf
test
dec
cmpsl
pop
add
pop
sub
cmpsl
cli
push
loopne
movsb
or
dec
inc
mov
popf
jnp
daa
inc
aam
and
or
jb
outsl
enter
mov
mov
and
lock
cmp
sbb
mov
pop
test
stc
insl
sbb
inc
xchg
mov
imul
xchg
inc
dec
cmp
fildll
xchg
fldl
mov
cli
lcall
xchg
add
pop
aaa
andl
mov
lret
imul
dec
dec
pop
mov
stos
mov
and
or
add
std
pop
push
mov
xor
jmp
sub
aad
mov
cmpsl
leave
sbb
movsl
fidivs
xor
mov
icebp
clc
loop
ds
mov
xlat
repz
sub
lahf
and
dec
lock
dec
test
cltd
shll
mov
lds
out
mov
stos
cltd
frstor
jmp
mov
mov
push
les
pop
sbb
ficoml
das
js
sub
data16
lods
sahf
orl
and
add
ret
sub
jmp
xor
nop
or
ficomps
xor
incb
cmp
ret
or
imull
fisttpl
and
pop
iret
loop
outsl
jne
pop
xchg
mov
cmp
outsb
sbb
fsub
push
fs
rol
cld
and
or
das
jo
pop
mov
ljmp
sub
sbb
push
cmp
into
push
mov
cmp
sbb
lock
out
ds
mov
mov
orb
repnz
cltd
jae
fistps
pop
jg
cmc
ja
sub
data16
imul
add
in
inc
fcoms
mov
cwtl
ss
mov
jecxz
stos
push
push
sub
lds
sbb
lock
or
lds
sti
mov
daa
push
sbb
clc
in
sbb
in
mov
pop
rcrb
mov
or
inc
cmc
or
jb
mov
aam
div
es
inc
mov
daa
loope
rolb
sbb
sbb
pop
pushf
lods
pop
lea
jg
dec
icebp
jle
test
and
or
jge
scas
or
int3
mov
fdivl
outsl
test
adc
mov
mov
repz
les
mov
pop
ret
imul
xchg
stc
ret
pop
pop
stos
stos
mov
and
std
cli
fistpll
popa
or
lcall
or
mov
xchg
es
inc
mov
stos
in
shrl
popa
loop
push
jb
sarl
inc
mov
popa
test
aas
dec
pop
pop
inc
cltd
es
ficomps
mov
push
add
xor
loop
stos
cmp
push
in
mov
cmp
shll
xchg
repnz
mov
es
and
adc
mov
or
mov
dec
xchg
fnstcw
andb
dec
pop
cwtl
test
ret
rclb
mov
insb
jns
cmpsl
xchg
xchg
mov
gs
stos
mov
ja
cmp
in
testl
faddl
or
lcall
mov
inc
sti
lahf
lret
fwait
sub
aam
cmp
jne
or
adc
sarl
addr16
and
sbb
loopne
mov
pop
gs
andb
xchg
mov
sub
movsb
loop
stc
mov
adc
les
les
cli
dec
pop
push
sti
pushf
mov
int3
ficoms
ficoml
xchg
dec
fbld
mov
jnp
pop
mov
enter
inc
adc
sarl
and
outsb
cmp
imul
int
inc
out
adc
js
repnz
loop
addl
cmp
idivb
movsb
in
mov
push
sub
cld
mov
add
add
dec
mov
mov
inc
ja
int
push
cmp
cld
push
mov
data16
inc
xchg
and
fadd
insl
jecxz
stos
push
rcr
outsl
out
out
fwait
push
sub
pop
xorb
test
insb
xchg
ffree
loope
aas
movl
jmp
or
jg
mov
mov
dec
push
jbe
dec
ljmp
mov
cs
mov
orl
outsb
fcoml
sub
test
jbe
or
bound
mov
insl
pop
or
aad
or
jne
mov
loopnew
jns
add
pop
sbb
inc
pop
push
lcall
jae
stos
std
cwtl
testl
cs
sbb
push
dec
testb
xor
scas
out
cmp
sbb
xor
aam
repz
or
xchg
icebp
incb
xchg
mov
xor
imul
repnz
xor
cli
inc
faddl
inc
dec
mov
cmp
shr
mov
jecxz
dec
shrb
in
cmp
mov
sbb
shll
inc
in
pop
inc
sbb
adc
js
aaa
mov
fcoml
loope
dec
pop
repnz
dec
xor
mov
enter
nop
jns
mov
repnz
push
bound
cmp
sub
jb
jb
xchg
or
pop
fiaddl
outsl
dec
test
dec
jb
mov
mov
insb
adc
push
mov
ret
mov
dec
clc
icebp
jg
mov
inc
pop
movsl
cld
xchg
cmp
mov
jl
adc
xor
andb
fs
cmp
shrl
je
cld
or
jp
inc
aam
je
sbb
int3
xchg
or
iret
sbb
lcall
ss
mov
movsl
aaa
inc
loopne,pn
ds
jno
xor
mov
sub
ret
mov
test
and
mov
gs
push
cmpsl
icebp
imul
and
mov
lahf
inc
aad
stos
popf
jg
fwait
push
pop
cmp
mov
cmp
mov
test
addr16
js
inc
inc
inc
fcompl
rol
mov
mov
inc
repnz
mov
iret
push
inc
or
pop
xor
or
add
imul
cmp
inc
mov
xor
sub
push
js
jne
xor
jecxz
fsubrs
repnz
lret
fidivl
xchg
clc
divb
mov
cmp
cmp
xchg
jmp
push
fwait
add
sbb
xchg
mov
lea
mov
jo
pop
jae
andb
jnp
pop
sti
ja
xchg
fistps
cltd
xchg
adc
outsb
fisubl
adc
scas
push
aas
mov
inc
jg
inc
rcl
add
inc
xchg
je
les
lods
cmpxchg
data16
cmp
popa
jns
push
ljmp
jg
pop
clc
hlt
sub
or
inc
negl
sub
loopne
clc
mov
mov
fdivrl
dec
or
scas
cmp
dec
pop
cmc
sti
mov
cmc
xchg
pusha
dec
pop
dec
les
sbb
dec
jle
dec
aaa
xor
add
in
std
in
lods
popf
or
out
je
cmc
or
mov
inc
imul
popa
ret
iret
pop
mov
sbb
fs
and
sub
jp
sbb
insb
into
push
or
push
das
pop
xor
jecxz
pusha
mov
cmp
in
loop
or
push
lds
sbb
loopne
xchg
fs
std
cs
lods
adc
sub
sbb
popf
xor
adc
pop
push
mov
out
xchg
mov
repz
xor
outsl
insb
cli
loopne
mov
in
hlt
lock
pop
pop
cmc
sbb
mov
cmc
scas
or
or
push
cmpsl
sub
cwtl
scas
movsb
flds
inc
mov
mov
in
fdivs
popa
inc
in
imul
inc
or
fidivrl
push
adc
pop
cmp
push
pop
rcll
or
mov
dec
push
add
je
imul
push
mov
js
push
ja,pn
push
sub
push
or
into
mov
and
mov
jmp
enter
mov
aas
das
imul
jno
popf
pop
or
in
adc
sub
out
and
push
jno
or
js
mov
test
jns
jo
xlat
mov
int3
xchg
movsb
push
push
push
sub
popa
into
pop
jb
dec
xor
jmp
and
mov
mov
je
jb
mov
arpl
imul
or
or
push
xor
fistpll
out
xlat
ljmp
push
fwait
sbb
sub
xchg
call
movsl
mov
jne
inc
cmp
jmp
call
stos
test
jge
lock
and
xchg
mov
gs
mov
jecxz
stc
xchg
jae
cmp
cmp
es
dec
and
popa
and
mov
in
push
fcmove
mov
icebp
add
stc
add
fcmove
sbb
imull
xor
outsl
data16
mov
rcrl
sbb
cli
and
scas
xor
push
js
nop
sub
dec
ljmp
ss
std
add
movsl
xor
and
arpl
xor
push
out
xor
jb
xchg
imul
pop
lret
mov
stos
fldt
arpl
test
push
lea
push
pop
cmp
add
imul
jge
fwait
vcmpnlepd
jmp
aad
xchg
pop
jmp
popf
out
push
loop
dec
ret
repz
leave
sub
add
enter
fisttps
mov
rclb
jl
test
fisttpl
lock
jle
jg
shrb
sbb
mov
jg
sbb
and
mov
mov
adc
test
mov
subl
push
rcr
vphaddbd
pop
in
lret
jp
aaa
and
jl
jo
fidivs
mov
mov
addr16
push
jbe
ret
data16
pop
adc
push
cwtl
call
pop
add
dec
iret
cmp
loopne
adc
mov
je
mov
inc
movsl
pop
pop
mov
cmp
xlat
dec
cmc
dec
jp
ljmp
mov
adc
popf
inc
test
pushf
lods
jno
and
push
jbe
scas
pop
jle
sub
loopne
scas
outsl
push
int3
bound
bound
inc
mov
roll
popf
test
lods
jno
js
pusha
ret
fadd
jns
jmp
inc
pop
adc
dec
mov
mov
push
xor
cwtl
mov
movsl
rorl
lcall
mov
cmp
sbb
bnd
lcall
push
loopne
fcompl
pop
mov
mov
cmp
ja
int3
test
mov
add
dec
lock
dec
out
cmp
mov
mov
inc
jnp
outsl
add
and
lret
cmpsl
mov
cwtl
std
and
sub
mov
stos
fsubr
test
imul
std
aad
inc
lcall
or
dec
jno
dec
add
je
pusha
outsb
mov
jp
jg
sbb
ljmp
or
sub
es
push
and
inc
jmp
sub
std
dec
insb
enter
cmp
test
sbb
pop
das
sahf
mov
mov
mov
repnz
fmul
and
lods
ficomps
js
and
aad
ret
mov
rcl
dec
js
lods
jl
leave
add
dec
xlat
cmpsl
sti
add
sub
dec
aas
cmp
lods
test
sti
fidivs
inc
pop
mov
nop
test
add
rcrb
js
xchg
push
pop
sti
add
mov
xchg
mov
mov
push
mov
outsb
mov
shll
jl
push
xor
xchg
sbb
mov
stos
sub
dec
pushf
out
test
insl
jp
fadd
out
sbb
cld
pop
loop
mov
or
push
icebp
pusha
hlt
fdivs
lds
pop
pop
hlt
jp
in
xor
cwtl
push
data16
push
into
test
or
fsubrs
cmp
jg
push
push
dec
inc
outsl
into
inc
mov
push
add
stc
js
xor
test
xchg
adc
jle
lods
in
mov
psllw
adc
stc
pop
fs
adc
and
sbb
sub
test
xchg
and
fldenv
std
dec
cmp
fs
hlt
imul
aad
loop
orl
jecxz
dec
or
fadd
in
push
int
inc
test
sti
push
daa
jbe
mov
clc
mov
popf
cmc
hlt
fstp
dec
imulb
xchg
test
xlat
dec
cmp
push
fst
daa
test
in
test
stos
mov
cmpsb
or
fwait
mov
dec
rol
imull
call
inc
pop
stos
shlb
popf
or
xorl
sbb
push
jmp
int3
in
fstpl
sbb
xchg
cmp
data16
fwait
push
daa
mov
xchg
inc
lret
inc
jno
aad
xor
jmp
and
stos
xor
adc
out
push
lods
in
incb
daa
pop
out
fsubr
adc
dec
pop
data16
jp
fwait
push
cmp
popf
xchg
inc
dec
add
test
outsb
mov
sti
pop
sahf
test
push
incl
add
mov
sub
enter
lock
out
cmpsl
push
xchg
mov
mov
xor
pop
push
inc
adc
push
dec
test
lods
shlb
jg
pop
mov
cli
inc
in
fistpll
in
int3
mov
adc
jnp
call
and
push
mov
mov
scas
scas
int
push
enter
in
and
repz
xchg
mov
lcall
jns
xchg
lods
jge
daa
loope
and
pusha
sar
addr16
mov
push
enter
add
mov
fisubs
or
icebp
mov
push
cs
push
pushl
outsl
xor
in
xor
neg
mov
xchg
push
or
sub
in
add
popf
bound
outsb
dec
inc
insl
mov
jne
xor
or
or
jo
pop
dec
mov
jne
xchg
sbb
fstpt
sbb
fstpt
adc
pop
lret
outsb
xchg
in
mov
dec
jle
lret
jb
dec
in
ja
scas
sub
lcall
scas
xor
repz
mov
lods
mov
cmp
xor
cmp
adc
xchg
mov
mov
or
cmpsl
cmp
xor
and
test
call
test
loop
mov
and
lods
xchg
lret
add
pusha
pop
std
mov
aad
xchg
out
adc
push
imul
push
jae
or
loope
dec
lock
adc
leave
sub
xlat
xor
loope
iret
ja
leave
mov
in
mov
out
lret
jge
cmc
aam
push
mov
mov
mov
mov
arpl
out
pop
mov
xchg
subl
mov
push
pop
sbb
nop
pop
inc
or
mov
aad
adc
mov
dec
adc
sub
arpl
dec
jg
ret
mov
dec
xchg
insb
imul
cmp
inc
xchg
fiadds
pop
mov
xor
idivb
jo
push
sbb
in
je
shrb
out
sub
scas
shrb
mov
hlt
repz
pop
nop
push
loop
jge
imul
pop
adc
outsl
rol
shl
mov
add
enter
push
call
loopne
mov
adc
fidivl
pop
jne
pop
in
test
mov
enter
movsl
in
fwait
add
mov
xor
fsubs
and
js
fnstsw
test
call
pop
sbb
andb
pushf
data16
inc
inc
pop
shlb
fsubp
cmc
stos
pop
loope
push
in
sbb
mov
hlt
mov
pop
dec
ret
pop
lcall
push
in
pop
subl
repnz
ja
or
inc
sbb
outsb
loop
cmpsb
insb
sub
inc
pushf
add
les
mov
pusha
or
mov
pushf
xchg
fisubl
sub
xchg
insl
pop
fs
xchg
adc
cmp
in
jle
xchg
add
incl
jle
pop
or
rep
pop
xor
pop
mov
outsl
aad
mov
test
mov
into
mulb
sbb
into
xchg
xor
xchg
mov
and
cmp
mov
add
int3
movsb
cltd
cmp
lds
add
add
xchg
loope
sbb
jb
pop
jle
add
mov
ds
std
inc
repnz
mov
aaa
inc
sub
shrb
push
cmp
pop
and
xchg
inc
ret
add
pusha
shlb
ret
pop
mov
or
or
push
pop
pusha
or
ds
adc
scas
mov
pop
inc
fst
clc
xchg
or
pushf
cmpsl
fdivrs
pop
loope
add
add
pop
imul
mov
or
mov
xor
sarl
sub
cs
dec
mov
repz
pushf
push
sub
sbb
cmc
jo
popf
mov
jno
cli
loop
add
movsl
inc
push
push
sbb
or
dec
int
add
xchg
push
or
nop
xchg
and
out
sbb
notl
pop
dec
sbbb
sahf
aam
inc
mov
fimull
stos
movsb
outsl
call
dec
inc
in
adc
fsubl
jne
insb
daa
js
repz
movsb
cmp
push
je
and
outsl
inc
rcrl
in
pop
out
and
xchg
repnz
xchg
cli
loopne
mov
sub
jo
pop
xchg
jno
cli
in
loope
cmc
inc
nop
aad
and
jbe
or
mov
fnsave
sbb
inc
fildl
sub
cmpsb
mov
lret
shll
cmpb
push
sub
push
jmp
test
cli
jmp
lods
mov
dec
bound
enter
jmp
mov
push
mov
xchg
xchg
jbe
nop
fmull
dec
cli
test
push
pop
es
cmp
pop
repnz
pop
aam
mov
imul
movsb
inc
pop
pop
or
pop
dec
sub
scas
bnd
into
ljmp
push
nop
inc
cmp
mov
pop
push
mov
sub
or
insl
dec
pop
jo
jge
cmpsl
in
dec
fcomps
jecxz
and
js
stos
pop
pop
adc
mov
jecxz
inc
mov
cmp
mov
add
add
pop
and
xor
in
negl
ss
jno
std
out
add
stc
out
xor
dec
or
pop
sbb
inc
sbb
jge
sub
pmaxsw
inc
cmp
out
das
mov
mov
or
fidivrs
mov
mov
imul
mov
lods
pop
and
xchg
adc
mov
cmp
or
std
insl
cwtl
or
cltd
fstpl
sbb
aam
pop
sub
repnz
inc
jne
adc
adc
lahf
ljmp
loope
lret
aas
inc
cmpsb
imul
jno
xor
lret
in
shl
and
adc
or
inc
sbb
pushl
rclb
out
popa
inc
jge
and
popf
aam
dec
xor
fstpt
cmp
mov
fdivl
xchg
inc
fists
jnp
test
xor
sub
xor
pop
aas
out
adc
lcall
sub
arpl
and
add
in
cltd
dec
or
and
or
mov
lret
sbb
fsubrl
mov
ljmp
mov
xor
push
test
sbb
bound
and
jne
mov
inc
xchg
push
ljmp
inc
rcr
popa
mov
std
outsl
jmp
xchg
std
js
lret
xchg
ja
jge
repz
std
jp
ret
test
cmpl
dec
mov
jge
and
fisttpll
fildll
dec
mov
pop
and
push
dec
dec
sahf
daa
xor
hlt
loop
mov
outsl
movsl
bound
mov
mov
xchg
inc
mov
int3
dec
subb
jmp
loop
push
fdivrs
decb
or
mov
push
insb
fldl2e
fdivl
data16
aas
lea
inc
ja
mov
clc
adc
jne
filds
xor
into
jno
xor
loopne
cmp
icebp
mov
mov
enter
rdpmc
mov
xchg
xor
pop
lahf
dec
js
test
arpl
ficomps
into
ss
fcomp
pop
push
mov
lea
add
fistl
xchg
add
nop
xor
xchg
xchg
jno
xor
std
scas
mov
jae
js
testl
lea
sbb
push
icebp
xchg
inc
dec
les
push
cmp
insb
push
cmp
and
outsb
dec
add
mov
xorl
adc
shl
cmp
sub
lds
mov
xchg
dec
push
inc
push
ds
dec
lret
imul
push
ljmp
push
cmp
pop
push
pushl
scas
nop
vmovhpd
mov
push
mov
dec
xchg
sti
dec
inc
lret
out
cld
mov
scas
jmp
mov
mov
xor
jle
cmp
xchg
fadds
push
lret
mov
ljmp
push
nop
mov
mov
or
sub
aaa
sbb
adc
xor
popf
or
jns
imul
lods
xor
test
pop
sbb
pop
add
and
hlt
es
inc
movsb
sti
sbb
cmpsb
rolb
push
push
cmp
adc
testb
inc
dec
shl
mov
or
xor
xchg
inc
das
lods
arpl
shrb
jmp
out
jno
adc
mov
xlat
mov
in
jl
add
pop
lcall
jmp
dec
outsb
pop
sub
mov
pop
inc
into
mov
sub
nop
pop
push
mov
and
push
aam
mov
push
roll
xlat
push
outsl
ret
test
and
daa
jnp
into
jo
dec
pop
imul
std
in
add
les
mov
out
inc
mov
xchg
add
xor
jl
push
xchg
jae,pt
in
aas
cmp
jne
popf
pop
and
adc
rol
addb
mov
mov
push
in
pop
lods
int
add
pop
xor
in
xchg
xor
push
pop
cmp
mov
and
rcrl
jmp
or
jg
mov
or
mov
ret
bound
inc
inc
mov
dec
sbb
test
int
repnz
xchg
mov
outsb
sbb
aam
icebp
int
loope
cmp
bnd
push
inc
popa
rolb
js
mov
iret
testl
xor
andb
cmp
push
jle
mov
ffree
lret
or
out
scas
int
pop
adc
lock
xchg
mov
loope
lods
repnz
es
mov
enter
cmp
fbld
outsl
stc
mov
ffree
xor
add
fimull
ja
add
leave
es
adc
push
outsl
or
jbe
cld
insb
in
mov
bnd
stos
dec
repnz
ds
lock
mov
jno
daa
cmp
ja
ja
mov
pop
sub
test
add
mov
addr16
or
mov
ds
sub
mov
out
mov
aaa
mov
cmpsl
xlat
cmpsl
inc
inc
mov
mov
mov
mov
hlt
jecxz
pop
add
hlt
ss
xlat
pop
jmp
sub
or
lcall
push
push
movsb
ja
dec
mov
xor
xor
hlt
adc
ret
dec
imul
and
scas
mov
notl
push
daa
mov
dec
repnz
mov
sub
lahf
mov
xchg
mov
xor
sub
outsl
push
mov
js
test
xor
bound
sbb
aad
addr16
cmp
push
pop
ficomps
fs
cmp
je
cs
push
and
leave
xor
das
ret
fistps
dec
inc
pushf
mov
mov
dec
cltd
aas
je
lods
mov
inc
sbb
out
sub
pop
arpl
inc
sbb
mov
clc
cmp
sarb
lods
add
sahf
or
xor
nop
stc
int
bound
stos
cltd
dec
ja
popf
xchg
fdivrs
test
xchg
jb
gs
jecxz
fldt
pop
inc
std
cltd
mov
or
repz
lret
rolb
pop
mov
add
fimuls
jae
inc
or
pop
test
inc
lcall
in
inc
js
or
push
in
inc
jecxz
jns
adc
jo
jg
inc
push
push
add
pusha
jecxz
loope
mov
loop
mov
xor
add
mov
popa
pop
mov
sbbl
cmp
dec
xchg
pop
jne
mov
pop
out
call
cmc
add
inc
cmp
test
fsts
and
cltd
cli
fwait
pushf
xchg
jmp
movsl
and
in
push
orb
dec
loop
shr
daa
mov
sbb
lods
pusha
and
sbb
divl
scas
inc
std
sub
test
and
repnz
outsb
mov
mov
je
jl
cmp
jg
fsubl
rcl
inc
sub
test
clc
and
add
iret
pop
sbb
ljmp
aam
outsb
dec
push
sbb
lea
aam
sbb
mov
out
shr
cmpl
adc
scas
jae
add
sub
ja
sub
dec
add
and
into
cltd
cmpsb
bound
in
rorl
add
sar
xor
xchg
cltd
div
and
jbe
adc
je
lret
fsub
adc
inc
xchg
mov
lret
sub
bound
andb
scas
cwtl
push
ljmp
aam
lds
lods
jbe
fnstcw
mov
pop
aad
test
cmp
inc
lea
pop
pop
jb
enter
or
xor
cmc
sbb
jmp
insb
ficoml
mov
sarl
pop
add
das
std
clc
dec
aad
pop
lea
shll
out
cmp
sbb
imul
xor
jnp
dec
mov
ja
dec
dec
mov
push
mov
adcl
add
add
hlt
xchg
dec
and
pop
repnz
jl
sbb
testl
sub
adc
cmp
jb
ret
fnstenv
shr
imul
ljmp
add
jg
or
xchg
mov
mov
iret
fists
and
cmp
mov
xchg
lcall
rcr
jle
jb
test
mov
das
jg,pn
sbb
jns
sti
orb
jo
and
out
stc
mov
cmp
dec
add
push
mov
sahf
mov
adcl
xchg
push
push
fldcw
imulb
int
cmp
pop
xchg
pop
cmp
stos
cmp
sti
push
test
mov
add
cmpsb
loopne
call
jns
cmpsl
jae
enter
in
sub
or
sar
stc
fidivrl
dec
push
cld
repz
addb
jbe
testb
pop
sub
push
hlt
lods
out
ret
cmp
xor
loope
mov
push
fs
adc
clc
sbb
dec
icebp
test
fs
jp
lret
fdivl
push
pop
outsl
dec
or
push
sub
stos
pop
lahf
dec
cmp
rol
and
sub
mov
dec
cli
aam
sub
sbb
or
or
fsubrs
js
dec
pop
cltd
int
int
push
pop
xlat
movsl
jns
out
sub
mov
or
xchg
lock
pop
pop
repz
mov
subl
jecxz
jno
push
add
out
popa
fbstp
jo
movsl
push
sub
sub
rcrb
jae
sbb
pop
mov
ret
cmp
addr16
int
jle
mov
pop
sbb
mov
inc
out
rcr
adc
sub
imul
dec
push
pop
inc
mov
test
pop
ret
jne
cmp
shr
stos
int3
adc
sbb
sti
pop
jmp
mov
mov
popa
shlb
push
rcrl
repnz
fisubrl
and
mov
loope
scas
sti
or
inc
inc
mov
mov
sub
cs
int3
and
and
movsl
mov
push
call
xor
dec
test
divl
adc
adc
outsl
mov
sbb
shll
repz
lahf
sub
cmc
jb
arpl
sarl
lds
rcrb
sub
lock
shll
push
sub
and
and
or
pop
mov
inc
inc
or
lcall
cltd
ja
mov
pop
cmpsl
sub
out
cmp
out
sub
inc
ror
or
jno
into
push
mov
dec
jmp
add
mov
inc
pop
mov
lret
pop
pop
adc
xor
dec
aas
movsb
xor
cmc
subl
pushf
cmp
inc
add
aas
movsb
ss
xchg
mov
or
push
bound
pushf
dec
jl
clc
loopne
out
ret
sub
dec
xchg
jne
sub
mov
clc
scas
jl
mov
push
lcall
push
pop
shll
adc
add
or
icebp
dec
mov
out
lahf
xor
mov
iret
pop
xor
fdivr
pop
lret
push
push
xchg
mov
cld
cmpl
lret
jo
lcall
sbb
and
and
ds
sbb
lods
shlb
push
cmpb
insb
xchg
ret
shr
mov
jmp
dec
pop
imul
or
enter
pop
push
mov
mov
stos
cs
bound
mov
adc
mov
js
mov
sub
iret
out
mov
lcall
adc
imulb
ja
rorb
mov
pop
popf
call
push
aaa
push
gs
inc
loop
addl
push
jbe
lcall
and
cmc
in
jle
push
push
push
test
mov
cmp
shr
jecxz
lret
push
push
test
movsb
arpl
pop
insl
xlat
and
icebp
cli
xchg
xchg
mov
fcoms
mov
insl
xor
add
add
cs
mov
jae
mov
mov
add
pop
repz
in
push
imul
out
fcoml
jns
mov
push
subb
out
pop
loopne
arpl
sub
ror
add
push
pop
or
je
mov
sahf
cwtl
mov
mov
xchg
hlt
lds
xlat
ret
fdivrl
pushf
mov
push
pop
lret
pop
or
aas
or
lods
fstps
xchg
sub
addl
imul
mov
lds
bound
and
jl
inc
cmc
sub
call
cld
xor
loop
fmuls
dec
pusha
lret
mov
lds
jmp
lock
mov
push
fdivr
xor
push
sbb
jmp
movsl
repnz
xlat
and
idivb
xchg
jnp
fldpi
jmp
jns
and
sbb
xchg
lods
popf
dec
dec
sahf
mov
cld
mov
mov
inc
and
stos
sub
popf
adc
sbb
xchg
test
cmpsb
outsb
mov
dec
jns
stos
xchg
sbb
push
fsubrs
imul
lods
in
inc
jp
and
es
enter
ljmp
lds
xor
out
xor
das
vaddsubps
mov
loop
loope
test
xlat
xchg
ficoms
dec
sbb
jb
adc
cmpsl
xor
jl
bound
shlb
pusha
or
push
popf
jmp
or
hlt
mov
and
push
mov
or
cld
enter
shrd
dec
aas
mov
jno
call
mov
or
push
test
pushf
std
adcb
jae
decb
es
jg
inc
adcl
daa
int
stos
jp,pn
orb
or
in
and
lret
popf
cmpsl
cmp
push
xchg
cmc
and
push
shrb
jno
jns
int3
outsb
sub
loopne
mov
push
push
int3
and
mov
mov
jmp
mov
xor
push
lret
subps
xchg
dec
pop
aas
cli
ret
fdiv
pop
lret
push
jle
jne
in
push
or
mov
js
in
xchg
mov
dec
lea
cmp
mov
push
seto
or
adc
in
xchg
sti
inc
outsl
lock
and
shlb
push
ljmp
aad
or
mov
insb
push
mov
fildl
fcompl
push
xchg
mov
inc
add
push
and
xchg
jnp
in
cmp
inc
mov
std
xorl
into
sub
dec
push
or
int3
faddl
repnz
push
xor
inc
push
push
xor
int
test
xor
iret
adc
jns
pop
or
and
pop
ljmp
pop
jnp
je
scas
test
and
scas
push
fbstp
mov
arpl
jg
test
std
jne
mov
std
cmp
ret
leave
mov
in
dec
lods
cwtl
xchg
mov
mov
push
pop
push
std
outsl
adc
popa
xchg
popa
cmp
push
outsl
xor
mov
xchg
push
call
push
lock
test
xchg
cmp
inc
adc
lret
push
popf
mov
dec
dec
outsb
test
mov
or
jl
xor
xor
mov
sti
inc
jne
xchg
pop
xor
sti
add
pop
xchg
ficoml
pop
dec
outsb
sub
fcmovnbe
push
adc
inc
cmp
gs
test
push
js
xor
xchg
mov
fisubrl
lock
sub
es
xor
iret
lret
sbb
mov
and
mov
sbb
dec
jecxz
fisttpl
scas
sbb
rolb
pop
into
inc
push
jg
sbb
loopne
sub
jne
push
dec
xchg
lahf
inc
rcr
out
aam
adc
vphsubbw
sub
jp
repz
mov
int3
bound
mov
add
gs
push
pop
pop
into
jae
rol
loopne
lods
shl
pop
lock
dec
cmp
stc
sti
in
pushf
pop
int
push
push
repz
xchg
mov
xchg
lahf
inc
lret
sbb
movlps
mov
inc
stos
mov
fucomip
push
outsl
xor
in
or
subb
sbbb
gs
clc
sbb
pop
mov
jb
mov
mov
xor
test
les
cmp
adc
push
int3
adc
adc
mov
jne
jbe
or
or
cmpb
pusha
jecxz
mov
or
dec
dec
push
fisubrl
les
adc
pop
arpl
sbb
inc
repnz
cli
out
in
lcall
imul
jl
or
insb
pop
pop
xchg
mov
insl
aad
popf
inc
jb
stos
cld
cmp
pop
adc
lds
jo
movsb
fsub
loop
inc
sbb
dec
adc
jae
shrb
cmp
aaa
mov
enter
mov
inc
xchg
inc
mov
push
fists
test
sub
cmpl
add
mov
xor
xchg
fdivs
mov
aad
pusha
movsb
adcb
xchg
decl
add
push
and
divb
movl
jge
jnp
sahf
push
dec
cli
xchg
pop
xorl
adc
pop
push
rcrb
sbb
push
cmc
mov
push
repnz
mov
xor
push
arpl
inc
ficomps
mov
je
adc
dec
cmp
jg
jp
and
dec
mov
add
scas
lods
ret
call
xor
faddp
gs
pop
push
xchg
push
loop
out
push
insl
push
jle
jecxz
xlat
in
movsl
sub
lcall
aad
ljmp
dec
dec
pusha
loop
out
jge
adc
stos
pop
notl
pop
adc
sub
add
cld
fwait
jae
xchg
es
add
mov
xchg
cmp
orl
pop
dec
sub
push
loopne
fadds
mov
sti
pusha
inc
aad
cltd
das
jns
push
adc
std
lcall
pop
ret
pop
pushl
mov
fcmovbe
out
add
mov
or
hlt
popa
mov
movsl
notl
sub
add
and
push
xchg
mov
imul
lds
sbb
and
sbb
or
and
fadds
mov
in
outsb
jl
push
xchg
mov
sub
popf
or
mov
or
test
cmp
sub
loopne
pop
clc
nop
mov
dec
sbb
jge
iret
int
mov
out
fldt
into
cmp
mov
jnp
mov
andl
outsw
out
sub
outsl
adc
call
xorps
cmp
addr16
bound
lahf
and
adc
pop
dec
push
push
pop
pop
xchg
cltd
fbld
jge
vmread
jbe
and
cmp
bound
sub
ret
cmp
sbb
outsl
xchg
xchg
dec
xor
arpl
in
push
fnstcw
push
dec
and
dec
fninit
lret
and
nop
mov
push
mul
xchg
xchg
push
jbe,pt
sbb
jg
dec
lock
pushf
pop
fstl
inc
dec
jns
insl
test
scas
xchg
pop
mov
sub
clc
push
addb
dec
cld
inc
jmp
insl
jg
mov
push
loop
xchg
push
cmpb
shl
or
scas
out
jmp
dec
test
rcll
icebp
shlb
dec
jb
inc
push
stos
adc
pop
dec
sbb
scas
mov
or
add
dec
mov
fucomip
sub
daa
insb
push
icebp
sbb
hlt
setnp
das
or
xlat
fsubs
movsl
loopne
fldt
push
cmp
lods
pop
shlb
mov
sub
mov
inc
dec
mov
and
mov
adc
daa
xor
in
je
hlt
jle
test
cmp
add
subl
jge
rcrb
nop
sbb
jns
loop
lcall
xchg
pop
xchg
pop
mov
and
daa
shrl
test
mov
popf
mov
loop
sub
cmp
mov
fnsave
dec
adc
rclb
push
fisubrs
mov
push
mov
lock
add
je
scas
mov
add
loope
dec
imul
js
js
cmp
and
push
adc
xor
leave
fstpl
cmpl
mov
movsl
insb
movsb
cmpsb
sti
ja
cmc
testl
into
xchg
mov
or
xor
fwait
fwait
sub
out
scas
push
js
cmc
cmp
or
fldcw
mov
sbb
cld
cmc
subl
or
xchg
adc
pop
jne
dec
jne
or
mov
jae
mov
pop
xchg
divb
or
loop
sub
mov
sub
add
lcall
inc
into
enter
cmp
frstor
outsl
push
aam
movsb
jp
scas
cli
xor
xchg
mov
sub
out
inc
testb
xchg
or
stos
stos
xlat
in
xchg
xchg
aaa
iret
add
cmp
cmp
daa
std
push
fadds
or
mov
ljmp
sbbb
adc
daa
dec
icebp
add
aaa
adc
and
add
mov
out
push
jb
and
dec
push
or
fsubp
pushl
add
movsl
adc
push
mov
pushf
movl
mov
inc
test
jp
subb
xchg
jmp
inc
cmc
dec
jl
pop
cli
enter
sub
pop
and
int3
dec
adc
rcr
pop
in
xchg
clc
insb
xor
dec
aad
imul
ss
pushf
inc
leave
mov
mov
mov
cmp
inc
jae
jae
jp
mov
pushf
dec
pop
sub
xchg
add
xchg
sbb
and
push
inc
iret
push
mov
sub
push
shll
add
xchg
repz
add
mov
or
aaa
scas
jbe
or
sahf
iret
adc
test
adc
ljmp
xchg
mov
dec
dec
sub
dec
sbb
cmp
bound
movsl
sbb
sbb
pop
or
pushf
ret
xor
mov
inc
and
out
fbld
push
pop
fwait
jp
xor
or
pop
pusha
test
aas
out
fs
or
sbb
sarb
insb
mov
les
mov
out
movsb
fbld
add
lods
mov
in
sub
adc
pop
inc
or
push
mov
mov
popf
push
jne
bound
dec
out
dec
mov
js
stc
dec
sbb
sbb
jle
subl
or
dec
dec
sbb
out
repz
pushf
sbb
xchg
and
push
into
xor
xchg
push
sbb
jmp
xchg
cmpsl
sbb
add
ret
jno
leave
pop
and
add
stos
mov
jo
xchg
sbb
push
xchg
inc
popf
ja
aad
ss
cmpsl
jmp
push
mov
pop
and
decl
stos
stc
insb
add
mov
mov
cmp
fcmovne
push
not
cli
lret
jbe
push
loopne
mov
inc
lods
test
cmc
call
sbb
jne
lock
hlt
push
es
insb
adc
popa
pop
jp
aam
mov
js
or
mov
jne
mov
add
popf
lret
repnz
xchg
sub
rcrb
or
jo
rcl
call
dec
mov
loope
sub
imul
cmp
mov
out
popa
test
mov
sbb
xchg
ret
popa
jnp
and
push
mov
hlt
mov
and
mov
jle
outsl
sub
dec
mov
mov
rcrl
cli
les
sub
mov
mov
add
adc
les
or
fs
sbb
notl
sbb
mov
xchg
jmp
scas
jnp
sahf
and
mov
insb
jecxz
dec
adc
and
stc
lea
sbbb
test
and
sub
bound
clc
icebp
fstps
pop
pop
test
jbe
sub
shll
push
cmp
inc
mov
dec
add
movsb
popf
gs
int3
shrl
in
ss
arpl
and
repz
setg
bound
inc
push
push
jecxz
add
or
mov
sub
mov
in
mov
test
cmpsb
sahf
mov
leave
jge
pusha
mov
clc
into
dec
cmp
xchg
inc
pop
and
orl
jae
ret
loop
cmp
into
fidivrs
inc
notb
xchg
aad
sbb
adc
outsl
mov
xchg
add
inc
push
imul
fs
push
mov
mov
push
mov
gs
test
pfcmpeq
adcl
jp
aas
lahf
pop
inc
cmp
cmpsb
dec
mov
and
xor
jb
dec
mov
mov
mov
xchg
jl
xchg
fwait
jmp
xchg
inc
jno
mov
jmp
inc
mov
push
scas
xor
aad
sbb
push
cltd
loopne
mov
push
fwait
push
clc
jle
push
mov
icebp
in
aas
sti
negl
mov
mov
aas
xchg
push
lods
cmpsb
mov
pop
pop
and
les
leave
lods
inc
pusha
fimull
xor
filds
sub
xchg
and
stc
jmp
jo
adc
adc
outsl
rorb
pop
aas
mov
push
xorb
sub
pop
add
push
bound
inc
mov
jmp
lods
sbb
mov
enter
xchg
lahf
sub
add
xadd
ljmp
mov
adc
push
pop
pop
xor
gs
pop
xchg
mov
cmp
jg
inc
sbb
pop
xchg
or
jbe
push
xor
outsl
ljmp
in
bound
loopne
out
push
push
lods
and
pop
test
lcall
loope
xor
dec
lods
push
mov
xchg
mov
adc
and
mov
scas
mov
mov
test
ret
fbld
stc
mov
jp
test
xchg
mov
pop
add
sbb
xchg
add
fldcw
dec
jbe
data16
ror
sbb
add
xchg
cmp
and
sub
fisttps
adc
je
cmp
dec
xor
mov
xor
es
daa
sahf
fisubrl
mov
jae
pushw
or
xchg
jg
ret
pop
nop
xchg
stc
aad
lods
lods
in
push
add
mov
outsl
pop
pop
push
cmc
xchg
push
sbb
adc
fwait
ljmp
inc
push
pop
sbb
jb
cwtl
je
mov
cmp
call
add
lea
fwait
cwtl
cmp
sbb
clc
mov
inc
push
xchg
jecxz
lods
mov
sub
xchg
aad
pop
fmull
es
lahf
adc
stos
xchg
dec
jmp
xor
cs
in
insb
cltd
in
mov
das
lcall
xchg
cmovl
xchg
ss
mov
iret
je
lea
pop
mov
xchg
cmc
add
or
inc
fidivrs
int3
ret
ljmp
mov
dec
lods
hlt
mov
xor
aaa
ja
std
pop
aaa
lcall
xchg
sbb
imul
sub
xchg
fldt
fwait
cmp
jp
dec
psubusb
jmp
mov
pop
movsl
loope
repnz
stos
out
pop
ss
rorb
cwtl
in
pop
imul
jno
inc
dec
mov
iret
xor
test
push
movb
popa
xor
int3
or
ljmp
jl
xor
sbb
lahf
lahf
mov
popf
loope
shrl
inc
out
push
and
hlt
test
iret
das
push
mov
fcompl
cmpsl
dec
add
cli
jg
cld
inc
push
xchg
adc
inc
imul
add
cmp
adc
and
add
jno
xchg
inc
inc
jbe
rcr
fsub
mov
aas
mov
je
cs
push
jle
fstpl
cwtl
test
jnp
outsl
lcall
imul
jg
out
inc
cmp
xlat
xchg
mov
push
test
rol
popa
add
or
repnz
lea
mov
std
cltd
cmp
jne
jp
stc
mov
cld
mov
pushf
mov
loopne
mov
pop
pop
sbb
jnp
shl
lods
jmp
push
cli
cltd
sub
out
in
int
push
xchg
cmpl
sbb
mov
jne
mov
sbb
push
sbb
jne
mov
mov
dec
ss
int
xor
add
add
les
sbb
mov
adcl
shlb
out
sub
adc
add
fistpll
aam
test
or
cli
fistl
pop
movsb
xor
in
loope
bound
add
pop
jne
push
push
cmp
adc
xlat
push
rorb
sub
fbld
je
lcall
and
mov
push
push
stos
pop
in
sahf
push
inc
add
pop
inc
out
mov
sub
mov
int
leave
dec
aaa
sbb
cs
cli
cmc
add
mov
ss
lods
mov
push
adc
outsl
fwait
mov
in
int3
mov
loop
movl
dec
jo
add
or
inc
xor
adc
bound
jns
movsl
push
pop
jecxz
dec
adc
jno
daa
pop
add
lds
test
cld
sub
jecxz
cli
icebp
pop
push
mov
jae
mov
lret
jo
fmull
xor
loopne
out
outsl
adc
push
ret
lret
iret
and
push
dec
pusha
pop
xor
dec
or
je
nop
dec
daa
and
and
in
dec
popf
js
mov
jmp
xchg
cmp
jle
cmp
add
and
rcr
xchg
xor
and
jcxz
and
add
stos
adc
jecxz
popa
arpl
movsl
fidivs
outsl
psrld
testb
sahf
mov
dec
push
addr16
or
sbb
clc
test
ret
dec
in
jge
loop
or
stos
mov
rcr
inc
pop
jle
rcrl
pop
lock
lcall
cwtl
cmp
push
mov
and
enter
cmp
cmp
cmp
sbb
loope
jge
adc
sarb
add
cmp
push
rorl
fdivrp
pop
divl
jmp
call
ud2
mov
push
stos
jle
pusha
or
int
cli
jne
movsb
or
sbb
mov
mov
or
inc
imul
xchg
push
repz
shlb
test
or
mov
dec
or
dec
jecxz
mulb
inc
loopne
jmp
mov
int
sbb
lea
addr16
adc
out
aas
or
fs
loope
sub
popf
cwtl
fcomps
xor
mov
ret
aaa
imul
test
in
shr
and
cmp
mov
in
nop
push
in
inc
lods
pushf
add
push
std
mov
lea
pop
int
icebp
jp
jecxz
pop
xlat
cmp
mov
inc
leave
mov
xchg
inc
or
jle
push
cwtl
out
pop
sbbl
shr
scas
test
push
shrb
pop
out
pop
cmp
sbb
push
cmpsb
fwait
add
jnp
or
xchg
and
mov
rcr
je
scas
xor
jb
ja
out
lods
sub
pop
mov
cmp
aam
faddp
nop
inc
pop
js
inc
loopne
add
inc
mov
pushf
cmp
or
sbb
xor
iret
adc
cmp
fwait
ds
aas
inc
pop
push
repnz
push
jbe
lods
addl
aad
insb
add
lds
aaa
cmp
lret
push
jo
jmp
neg
xor
mov
dec
mov
push
mov
das
and
mov
push
hlt
ret
xor
scas
add
loopne
or
dec
jl
inc
outsb
mov
dec
mov
cltd
scas
fcompl
mov
iret
xor
scas
aaa
inc
test
inc
xor
sub
test
nop
xor
out
pop
test
cmp
out
mov
cli
aad
loopne
js
imul
jge
mov
sub
ljmp
mov
lods
jmp
xorl
xchg
cwtl
mov
and
lods
xor
clc
test
xchg
mov
inc
insb
pop
loopne
pop
xlat
push
dec
ja
add
insb
mov
or
jns
sbb
mov
cltd
mov
adc
jo
cmpsb
sbb
sarb
mov
int
xor
xchg
mov
cmp
shl
inc
lahf
dec
cmp
ffree
sti
mov
fimull
loop
ret
adc
cmp
pusha
jne
stc
mov
scas
sarl
int3
cmp
fnstcw
lods
sub
and
mov
xor
sbbl
out
into
adc
pop
int3
out
mov
rclb
sub
sub
fidivrs
scas
aam
xchg
mov
leave
scas
lods
mov
push
jmp
scas
or
mov
pushf
jmp
mov
mov
push
daa
xlat
lock
xchg
divb
out
scas
js
mov
int
pop
orb
cmp
cmp
mov
fcompp
shlb
lods
mov
sbb
insb
out
mov
push
aam
mov
fildl
push
mov
pop
and
sbb
xchg
add
mov
leave
mov
idiv
inc
outsb
cmp
mov
mov
jno
xchg
push
add
jp
sarb
mov
mov
sub
pop
les
pop
jmp
test
push
and
xchg
cmp
ret
test
ds
fldt
or
test
push
mov
dec
mov
add
js
xchg
inc
lret
je
pop
cmp
outsb
jb
xor
ja
rolb
inc
jp
or
popa
aas
jbe
push
aaa
add
xchg
cld
cwtl
dec
xor
mov
ret
sbb
loopne
push
pop
rorb
or
add
js
insb
and
icebp
push
mov
daa
insb
nop
xlat
cmpsb
cmpsl
sub
cmc
dec
ja
insl
es
dec
and
cmpsl
or
and
and
cmp
sub
sar
fstp
pop
repnz
adc
ja
mov
push
in
mov
in
popf
sbb
insb
mov
jne
jae
or
lods
inc
add
pop
jno
out
clc
mov
dec
lods
xchg
cmp
shl
mov
sbb
xchg
sbb
adc
xor
sub
or
xchg
xor
adc
loope
out
fcompl
inc
test
shlb
iret
xor
jb
loop
movswl
mov
xlat
lods
inc
loop
mov
sbb
push
mov
jle
sub
in
mov
pushf
xor
sub
push
scas
out
shll
mov
mov
bound
jecxz
pop
mov
lods
ds
fwait
mov
leave
iret
add
pushf
cmp
or
sub
jl
cmp
cmpsb
and
or
mov
pop
mov
adc
add
imul
xor
lahf
sahf
in
loopne
adc
enter
lcall
mov
out
in
das
or
aad
cs
push
cltd
cmp
push
jg
stos
ror
push
test
sub
jl
lock
jae
movsb
mov
xchg
mov
ja
outsb
mov
scas
in
jge
outsl
xor
insl
cmpsb
in
inc
xor
jg
or
push
bound
adc
lcall
leave
pop
and
loope
movsb
scas
call
inc
lcall
xor
loopne
jg
stc
out
push
dec
out
aaa
cli
or
mov
inc
nop
cmpsb
push
pop
daa
test
dec
push
cs
gs
aas
pop
scas
loope
xchg
inc
cmpl
xor
and
fwait
add
or
xchg
test
mov
movsl
orl
das
fbstp
push
sbb
dec
or
lods
out
push
movsl
test
pop
outsl
inc
lds
inc
ret
jmp
out
cmpsl
sbb
loope
vpmacssdql
push
andl
xchg
ss
pop
xor
movsb
repz
jl
add
les
mov
jns
filds
in
vpsubd
push
pop
mov
pop
in
jl
push
push
out
cli
ficoms
lret
hlt
xchg
cmpsb
fs
push
add
xchg
lods
mov
inc
adc
icebp
je
push
xor
jb
mov
shll
push
movsl
outsb
xchg
enter
or
push
imul
mov
or
and
adc
pop
insl
in
lds
and
sbb
insb
or
stc
mov
xchg
in
loopne
rcll
jecxz
addr16
xchg
push
fisubs
jp
enter
jecxz
cmp
loope
jmp
cld
lea
xchg
pop
and
mov
gs
add
sbb
test
mov
xchg
adc
mov
lret
mov
mov
aam
scas
test
aaa
sti
lock
xchg
das
sbb
push
into
dec
lahf
xor
movsb
aaa
movsb
enter
inc
dec
mov
push
jo
lret
xchg
xor
jb
pushl
imulb
jb
movsl
lds
xchg
andb
add
or
movsl
dec
xchg
ret
push
rorl
mov
aam
cwtl
mov
insb
ret
je
jae
mov
cmp
jmp
jecxz
sub
sbb
lcall
inc
lret
adcb
cmc
xchg
mov
push
das
dec
and
enter
loope
popf
sub
xor
fiaddl
out
shl
lahf
mov
sbb
pop
xchg
rol
mov
in
jge
jae
push
daa
push
js
loope
repz
sbb
sub
xor
sub
test
ss
bound
sub
pop
in
aaa
xchg
add
cmpsb
aas
push
shll
mov
arpl
outsl
cmp
popf
js
in
mov
popf
add
lret
jb
enter
pop
call
leave
lret
and
jp
push
ljmp
imull
jp
adc
addr16
xor
mov
popa
jne
dec
or
repnz
in
sbb
push
mov
adc
rolb
push
pop
dec
ljmp
aas
mov
mov
pop
sub
cmp
imul
jl
bound
in
jb
sub
cmp
test
stos
lock
imul
rolb
lods
test
push
mov
pop
out
xchg
lret
fistps
fisttpl
jge
cs
pushf
loope
dec
fs
and
sbb
les
cwtl
es
mov
or
mov
add
enter
push
adc
xchg
andb
sbbl
cwtl
sbb
subb
sbb
sbb
pop
out
sbb
jb
into
dec
arpl
je
aaa
cs
and
movsb
mov
sbb
movsb
xchg
idivl
mov
push
gs
xchg
inc
popa
fsubrp
mov
daa
jbe
jmp
cmpsb
iret
clc
out
je
add
ljmp
adc
push
mov
dec
pop
and
ljmp
pusha
movsl
add
pop
inc
and
sbb
mov
std
dec
cmp
cltd
outsl
jnp
popf
ret
into
cld
jecxz
andb
push
in
in
dec
mov
push
mov
jp
and
stos
lcall
imul
fsubl
ja
jl
fsub
outsb
movsb
sbb
add
fwait
pop
decb
mov
lcall
push
lret
xor
pop
adc
mov
pop
dec
aad
mov
or
pop
cwtl
dec
lds
push
dec
and
jge
inc
hlt
aam
push
xor
mov
das
dec
and
in
cmp
and
dec
inc
scas
xor
ds
das
push
jns
push
insb
and
popf
das
sub
mov
dec
fcompl
lret
lods
ja
sahf
mov
cmp
xor
das
aad
movb
inc
cld
out
shlb
xchg
insb
orl
test
out
lods
mov
jae
ss
in
inc
std
sahf
lods
dec
jae
jecxz
addr16
fidivl
sub
mov
pop
cmp
lds
test
sbb
sbbl
lret
negl
scas
nop
mov
mov
mov
imul
movaps
mov
dec
lahf
sub
icebp
mov
fwait
push
not
mov
out
pop
xor
icebp
out
xchg
sbb
das
movsl
in
xchg
or
lahf
adc
lahf
ror
jge
lds
sub
stos
mov
push
into
inc
hlt
les
inc
jmp
mov
dec
jbe
fwait
shrb
ret
cld
test
test
imull
aas
xlat
data16
cmc
in
addr16
inc
mov
loopne
sahf
pop
mov
pop
mov
cli
stc
mov
popa
data16
fisubrl
pop
mov
sub
cmc
dec
fdivp
jbe
es
push
mov
fistps
mov
xchg
ds
cwtl
andb
push
xchg
xchg
in
outsb
pusha
xor
adc
fwait
int
sahf
push
int3
dec
cmp
das
mov
cmpl
movsl
addr16
inc
hlt
mov
sti
dec
popf
pusha
aas
rorl
adc
andl
mov
shll
inc
sub
sub
push
ljmp
xchg
dec
popf
inc
jl
inc
cmp
jg
divl
dec
add
cltd
pop
mov
sbb
les
mov
cmp
lret
int3
stos
push
leave
xor
fcmovne
popf
xlat
inc
paddq
repz
repz
shrl
loopne
jg
cmpsl
adc
jae
inc
xchg
mov
push
xchg
mov
jbe
out
jne
ljmp
lods
loopne
fsubr
push
adc
mov
frstor
cmc
dec
cmc
mov
test
sbb
in
test
mov
ds
sub
cwtl
dec
cmpsl
mov
addr16
hlt
jp
inc
out
and
push
fnstsw
push
das
add
and
int3
loopne
mov
push
mov
popa
jle
or
nop
lea
dec
outsl
jns
int
mov
jno
push
in
inc
adc
popf
loop
out
xchg
or
ret
and
and
xlat
lcall
jmp
mov
pop
std
int3
out
lret
das
repz
enter
mov
xor
mov
int3
repnz
repnz
lahf
fldt
jnp
mov
cld
jns
adc
add
enter
leave
cmpsl
or
jp
faddl
shl
xor
sub
or
imul
insl
rcl
inc
sbb
rolb
dec
popl
pop
imul
mov
cltd
or
jne
sbb
xchg
adc
mov
mov
xor
rorb
cmp
in
mov
jbe
lcall
mov
std
loope
nop
mov
mov
dec
push
inc
push
fistpl
out
ret
enter
and
adc
shll
ja
or
adc
push
adc
sti
xchg
mov
xchg
cli
dec
leave
mov
add
loope
in
stc
cmpsl
xlat
pop
pop
and
imul
enter
je
inc
insb
push
out
pop
mov
push
push
mov
adc
hlt
sti
mov
adc
jae
add
lock
pop
and
adc
dec
jbe
in
int3
scas
jbe
popf
mov
jo
loop
push
jmp
loop
ret
pusha
inc
xchg
fnsave
mov
sbb
push
xchg
mul
dec
outsl
mov
rcrl
cmp
outsb
dec
in
sub
push
inc
fistl
fidivrl
xor
je
cmp
cmpxchg
pop
add
clc
xchg
add
stc
inc
stos
dec
jecxz
dec
test
mov
inc
and
cwtl
cs
inc
shlb
sbb
push
cltd
mov
pop
out
pushl
add
imul
jns
and
aam
xchg
stc
fs
push
xchg
imul
out
sub
jmp
shrb
aas
cmc
pop
and
push
fdivs
xor
das
test
lret
or
add
lret
push
pusha
add
xor
and
pop
iret
fistpll
ljmp
out
fistl
sbb
xchg
adc
mov
mov
sub
dec
cld
pop
int3
mov
mov
mov
rorl
push
mov
mov
pop
pop
pop
cwtl
cs
jg
sub
mov
imul
xchg
pushf
dec
cs
mov
icebp
movsl
inc
xchg
enter
pop
pop
lds
sti
sbb
iret
mov
scas
sbb
loope
out
push
sti
dec
adc
sbb
loope
dec
fstps
jb
jp
lock
ljmp
adc
repz
jb
add
popf
jle
sub
push
cmp
jno
test
push
lods
lds
jl
fs
dec
xor
repz
or
out
sbb
scas
aad
push
jp
loopne
pop
adc
fcmovb
jnp
jae
or
popf
sub
xor
sbb
jmp
or
mov
mov
out
aaa
jae
in
sub
mov
cld
add
out
cmp
dec
pop
push
test
jo
gs
in
std
inc
mov
add
mov
pop
imul
lcall
or
fisubrl
fmull
ljmp
and
in
sbb
cli
jne
ret
cmp
enter
sub
push
push
mov
jno
mov
pop
jo
test
mov
out
xchg
arpl
jne
mov
das
jno
mov
adc
rcrb
mov
lahf
or
push
pop
repnz
push
neg
repnz
inc
adc
pop
icebp
lahf
test
lcall
cmp
xchg
sub
push
fwait
inc
dec
xchg
sti
into
jno
inc
inc
cmpsb
mov
stos
testl
loopne
push
testl
xor
lock
add
fs
test
shlb
pop
inc
push
xchg
iret
mov
out
mov
inc
pop
inc
imul
loope
mov
push
out
les
push
adc
ljmp
mov
scas
aaa
adc
fs
mov
and
mov
mov
pushl
jecxz
mov
stos
fisubl
jno
add
push
fimuls
cmp
pop
inc
and
mov
testl
int3
mov
clc
arpl
xchg
ficoms
sub
sbb
xchg
or
and
push
jle
sub
sub
imul
xchg
sbb
loop
roll
inc
jno
and
unpcklps
or
cwtl
cmp
add
push
stos
out
dec
loope
mov
ret
mov
cmp
fisubs
fidivrs
or
stos
jl
xor
push
dec
test
leave
ret
pop
dec
adc
lcall
cmpsl
imul
push
aad
out
scas
xor
mov
imul
and
sub
je
add
xor
mov
xor
dec
js
mov
addb
fisubrl
sub
bound
pop
mov
pop
pop
clc
fldt
cmp
jmp
and
arpl
pop
gs
pop
sbb
jns
ret
shl
cmc
lods
stos
pop
into
shr
bound
outsl
std
jo
or
out
cmp
cmp
pop
pop
adc
push
push
adc
mov
xadd
leave
push
and
pushf
jo
sbb
das
ret
jmp
ja
or
scas
sti
sub
inc
dec
aaa
fucomi
xchg
mov
arpl
dec
les
test
test
inc
dec
dec
or
or
cwtl
aam
mov
xor
sbb
pop
dec
push
and
rorl
scas
mov
shll
enter
xchg
jge
mov
xchg
sub
mov
sbb
adcl
inc
or
xchg
pusha
repz
pop
dec
movsl
mov
push
jb
cmp
popa
xor
test
inc
stos
sbb
hlt
adc
inc
or
ret
repnz
enter
lods
mov
pop
in
aam
std
or
push
dec
or
xorl
mov
push
fmuls
movsb
and
push
xlat
or
fiaddl
inc
mov
push
jle
jmp
jg
cltd
into
adc
push
and
or
mov
rorl
in
xchg
pushfw
or
sbb
push
stc
or
movlps
inc
sbb
sbb
push
cmp
push
mov
jno
outsl
mov
in
and
aam
sti
pop
or
sbb
pop
aad
push
outsl
rcrl
xor
jp
mov
dec
push
shl
inc
sbb
in
leave
mov
jns
xchg
aam
jo
decb
xchg
push
push
cmc
fmull
les
and
rcrb
aad
arpl
inc
fwait
mov
mov
push
ja
jmp
lret
and
cmp
fadds
jmp
push
lds
jbe
lret
or
aad
and
xchg
lcall
loope
xchg
and
mov
jg
mov
out
js
xor
mov
mov
jle
ret
movsl
sarl
movsl
or
jbe
and
in
imulb
or
sbb
les
movsb
jno
cmp
sbb
jmp
mov
dec
shlb
out
shlb
lock
pop
test
cmpsb
ret
mov
pop
fdivrl
nop
xchg
or
pop
adc
pop
js
ficoms
insb
fsubl
sub
cmp
addr16
push
or
sbb
sbb
int
and
mov
inc
jmp
fisttps
sub
add
pop
data16
inc
adc
scas
dec
sub
dec
arpl
sbb
icebp
or
js
pop
adc
dec
dec
popf
sub
xchg
sub
pop
je
shll
aaa
jbe
xchg
mov
ljmp
cmc
push
es
cmp
lock
adcb
mov
mov
add
cmp
xor
dec
sub
hlt
daa
imul
xor
adc
les
ja
push
cmp
mov
in
dec
andb
cld
call
lret
aaa
mov
movsl
lods
jg
xchg
outsb
xchg
test
mov
fsubl
pop
adc
or
jae
das
mov
add
mov
sbb
pop
lock
sbb
sbb
stc
loop
movb
jb
aad
pop
shrl
jge
mov
fwait
decb
aam
lods
add
cmp
adc
popa
xchg
inc
mov
repz
xchg
inc
xlat
out
or
rorl
jmp
lcall
jle
sbb
enter
pop
push
lods
and
js
clc
inc
in
sub
cmp
sarb
or
into
fcoms
sbb
cwtl
insb
movsb
jbe
insb
cmpsl
or
out
cmp
jmp
mov
pop
outsl
dec
xor
mov
push
cmp
js
ja
jb
mov
lahf
add
adc
inc
mov
mov
lock
scas
cmp
sub
push
gs
aas
and
mov
pop
jo
imull
sub
push
sbb
sbb
idivb
push
mov
fld1
sub
pop
pop
add
mov
mov
loope
aad
loopne
leave
out
cmp
jp
iret
pop
add
adc
push
fwait
xor
mov
in
into
dec
hlt
enter
gs
scas
mov
fists
test
loop
add
sbb
call
pop
and
mov
lcall
mov
imul
mov
xlat
dec
adcb
out
jge
lahf
daa
pop
jmp
loope
xchg
scas
cli
dec
sub
std
sahf
bound
scas
loope
shl
mov
pop
dec
mov
arpl
ja
rcr
loope
ret
aas
out
mov
flds
lods
push
ret
ret
push
jb
adc
popa
xchg
mov
jl
cmp
test
cltd
xor
fsubr
orb
int3
das
test
enter
sub
push
aam
xchg
jnp
xchg
fisubrl
shl
xor
pop
in
push
inc
jle
xor
and
xchg
cli
xchg
jmp
push
jmp
lahf
sbb
in
jb
dec
mov
inc
lret
mov
mov
mov
test
scas
pushf
push
xchg
add
lahf
or
mov
inc
lret
push
sub
lds
lret
rcr
dec
inc
push
andb
xchg
and
dec
popf
pop
sbb
mov
dec
loope
lods
shrl
or
mov
ja
dec
loop
lret
cmp
ljmp
test
cmpsb
enter
sub
jo
jo
pop
pop
push
inc
sbb
xor
std
push
test
jbe
lret
cmp
les
push
inc
stc
les
xchg
jmp
in
pop
jo
pop
mov
scas
dec
lcall
mov
mov
push
adc
adc
push
add
inc
cmp
jo
imul
pop
adc
lcall
xchg
movsl
mov
fisubrl
jbe
mov
push
pop
subb
movsb
cwtl
jl
and
cmpsb
adc
imul
les
add
push
fs
jmp
cmpsb
pop
das
xor
out
test
push
ss
outsl
enter
pmullw
in
cld
dec
incl
jp
nop
push
pop
int
hlt
mov
and
out
mov
rclb
or
shll
cwtl
popa
mov
jge
dec
leave
cmc
mov
dec
mov
ljmp
add
leave
dec
mov
fldt
inc
adc
xchg
subl
cld
mov
lock
xchg
lock
or
sub
adc
mov
xor
push
sub
adc
or
cld
mulb
cltd
loope
incl
pop
jg
lods
rorl
pop
push
xor
inc
adc
shll
in
popf
fdivr
popf
leave
sub
aam
cmp
dec
sbb
fdivrl
subb
push
mov
scas
cmp
mov
ss
leave
push
xchg
insl
sbb
pop
ret
fmull
jb
addr16
xchg
ss
push
dec
in
shr
popf
and
xor
bnd
jecxz
push
adc
int
loop
xchg
push
ret
mov
test
push
pusha
mov
jb
fisubl
stos
dec
insb
ljmp
fstpt
jecxz
fwait
fstl
dec
sub
xor
stc
out
gs
adc
ret
push
jbe
or
xchg
cmp
call
push
ss
mov
stc
adc
xchg
das
aam
fistps
mov
ljmp
lcall
inc
pop
notl
xchg
jo
jo
jnp
roll
stos
mov
inc
mov
xor
adc
inc
cwtl
addl
movsb
imul
xor
ds
cmc
cs
call
pop
ret
pusha
or
fcoml
stos
push
sbb
js
sub
inc
cltd
int
fistl
pop
cmpsl
out
pusha
xchg
bound
or
xor
cmpsb
das
inc
bound
pushf
cs
jg
jmp
sub
lret
push
pop
bound
dec
aaa
push
jno
xor
shrl
sub
push
lahf
mov
movsb
lock
mov
das
push
nop
mov
sbb
dec
das
sub
xchg
in
outsl
push
aad
int3
jno
cmp
and
sbb
or
in
push
jl
mov
enter
xchg
bound
loope
or
pop
out
sub
xor
pop
jnp
lods
sbb
jo
loopne
sbb
je
sub
cmpb
dec
or
movsb
mov
mov
cmp
push
mov
add
adc
dec
add
push
sub
sahf
mov
pop
mov
adc
mov
push
movsl
cmp
test
cld
cwtl
or
loopne
dec
mov
push
fwait
in
outsl
psubusw
scas
adc
fldenv
pop
inc
mov
sbb
sub
and
xor
pop
lahf
outsl
pop
dec
mov
int3
js
jge
fld1
sub
jmp
xchg
sahf
push
cli
mov
fistpll
sub
sbb
icebp
push
lret
cld
add
fldt
cmp
push
or
fildll
data16
loopne
jge
mov
sbb
sbbb
popf
sub
mov
mov
jae
adc
mov
subb
inc
jno
int
fs
cwtl
or
or
push
outsl
pop
out
or
andl
xorb
stos
cmp
xchg
pop
ret
xchg
mov
add
inc
sbbb
mov
nop
outsb
dec
mov
mov
push
jne
mov
sbb
xor
lret
nop
test
cld
mov
cmpsl
xchg
test
daa
lods
hlt
loope
out
xchg
loope
add
or
fadds
out
or
ja
and
bound
pop
mov
loope
mov
outsb
push
and
movsb
nop
push
jbe
xchg
sbb
mov
add
fdivs
dec
sub
inc
xchg
adc
pop
mov
loop
sbb
arpl
rclb
pop
sub
or
or
pop
xchg
xor
pop
out
dec
jns
push
fcmovnu
jb
mov
stos
jmp
jge
ja
cmp
pop
adc
and
add
sub
aam
sub
cs
in
test
out
jp
mov
pop
repz
outsl
daa
lret
jae
fs
rolb
jns
fldt
shrb
inc
dec
inc
mov
ss
insl
xchg
stc
popf
loope
pop
in
negl
mov
clc
scas
cmp
cmp
or
hlt
xor
divl
add
mov
std
inc
mov
arpl
outsb
flds
out
mov
adc
std
add
test
jp
lods
dec
mov
adc
push
and
stos
inc
adc
es
cmp
hlt
xchg
xchg
xchg
mov
pop
rcrb
sahf
jns
stos
adcl
lret
add
cmpsb
lret
push
xorl
xor
xchg
shrd
lret
sub
fnsave
xchg
jmp
push
xor
int3
sub
shrb
add
out
lds
call
test
ja
cltd
pusha
call
lcall
and
adc
ss
data16
and
lods
xorl
jne
out
subl
sti
jo
icebp
ljmp
jnp
shrb
mov
dec
rcl
sbb
ret
test
hlt
fwait
mov
or
imul
mov
out
arpl
icebp
fisubrs
mov
lret
jno
adc
out
mov
mov
dec
ja
inc
andb
sub
mov
pop
inc
call
mov
cltd
mov
test
or
mov
push
cmp
cli
inc
ret
sbb
xchg
sub
inc
imul
mov
test
ret
add
cmpsb
fmulp
cltd
fidivrl
jp
lahf
clc
pop
pop
push
jp
lods
adc
cld
mov
cmpsl
dec
ja
pop
jge
pusha
pop
sbb
and
out
push
les
int3
movaps
inc
bound
xchg
jae
mov
jns
aaa
loop
mov
xor
mov
jge
sub
inc
fsubrp
lret
mov
fsubp
mov
pop
and
gs
jle
sub
jl
sub
sarb
es
popa
adc
lock
stos
addr16
add
adcl
roll
iret
xlat
sti
sbb
or
sbbb
insl
dec
movsb
cmp
dec
sahf
mov
scas
repz
lds
pop
fwait
mov
js
out
pusha
and
push
add
and
lahf
mov
shll
ljmp
clc
imul
out
xchg
daa
mov
jle
or
jnp
xor
xor
jmp
inc
inc
pop
adc
pop
or
jmp
push
dec
jae
mov
mov
imul
ficompl
inc
jns
add
add
and
repnz
andl
out
popf
xor
push
mov
stc
pop
frstor
sahf
into
sbb
dec
cmpsl
xchg
lods
dec
scas
cmp
loop
fstps
pusha
pop
inc
fiadds
xor
push
xlat
inc
inc
pushf
jae
pop
xlat
imul
out
pop
insl
add
sbb
nopl
mov
iret
xchg
inc
mov
inc
xlat
stos
je
mov
lret
mov
fdivrs
insb
dec
fsubr
leave
pop
add
adc
ret
loope
mov
xchg
mov
in
mov
xor
and
xchg
push
sub
aad
add
mov
xor
push
xor
jmp
lea
jae
pushf
adc
ret
sbb
mov
cld
arpl
inc
andl
js
jmp
psrld
xor
or
xor
out
das
fmuls
fnstcw
dec
fwait
mov
dec
mov
push
pop
mov
lods
mov
xor
add
push
sbb
es
inc
mov
pop
xchg
fwait
aas
mov
stos
ret
lods
mov
or
mov
sbb
sarl
mov
jmp
xchg
imul
rorl
inc
mov
lcall
je
push
push
cmp
jg
adc
xor
xchg
mov
dec
pushf
decl
cmp
in
adc
xchg
jns
cmpsb
add
inc
inc
pop
fs
into
test
das
lods
cmpsl
push
fsubp
cmp
repz
pusha
cli
xor
pop
je
int
insl
inc
sbb
mov
shrb
icebp
push
cmpsl
es
push
into
aam
pop
xchg
repz
in
int3
and
or
out
jmp
notb
mov
out
mov
rcrl
pop
jae
enter
jge
mulb
jnp
decb
pop
or
mov
xor
push
fisttpll
stos
mov
stos
out
repnz
insl
jle
jbe
mov
inc
jne
ss
nop
fidivrl
movsl
into
rolb
dec
popa
divb
adc
push
mov
in
cmpsb
ror
lcall
jge
mov
pop
ret
insb
add
aam
pop
pop
push
pop
jae
in
popf
xchg
cli
adcb
xchg
aaa
std
xor
jno
test
dec
rclb
hlt
add
inc
push
daa
cwtl
test
shr
xchg
xor
push
add
andl
xchg
xchg
scas
js
mov
cli
lret
ficoml
pop
cli
sub
pop
adc
mov
adc
sub
xchg
jbe
mov
ljmp
fs
out
jne
inc
das
mov
aaa
sub
in
or
cld
inc
dec
cltd
out
mov
pop
out
mov
push
jb
jl
and
mov
lods
dec
jb
mov
xor
jl
fcoml
dec
negl
mov
mov
sbb
jne
xor
fisubs
scas
cmpsb
xchg
jp
xor
xor
clc
mov
movsl
enter
cmpsb
sub
xchg
jnp
movsb
adc
pop
int
jb
fildl
nop
test
push
shll
imul
pop
fmuls
add
ffree
adc
repnz
push
pop
cmpsb
ret
dec
push
mov
cmpsl
dec
fldl
adc
ret
cmp
mov
pusha
int3
mov
aaa
movsb
negl
add
orb
pop
fwait
or
lahf
xor
out
xlat
xchg
xchg
add
xchg
or
or
xchg
push
push
or
cs
stos
lods
dec
js
xchg
jg
lahf
push
popa
fdivrp
adc
sbb
cld
jns
mov
add
xor
add
call
movsl
jbe
cld
push
push
loop
sub
add
adc
out
pop
in
adc
stc
arpl
stos
sbbb
or
pop
fidivrl
je
push
xchg
mov
movsb
mov
mov
pop
mov
repnz
ljmp
data16
add
popf
mov
imul
aas
dec
ud2
dec
insl
movsl
add
sub
outsl
loope
cmp
cli
fisttps
hlt
popa
mov
sub
test
push
push
loopne
fldenv
jo
pop
dec
leave
mov
add
sti
sub
fildl
sbbb
add
dec
je
shrl
sub
and
lcall
mov
sub
xor
jns
sahf
aas
sub
loopne
sti
dec
adc
xchg
inc
stos
rorl
mov
and
ficomps
aad
jecxz
test
mov
mov
inc
dec
jg
jnp
test
sbb
or
imul
imul
push
jne
jle
sub
sbb
jb
xchg
cmp
icebp
pop
inc
enter
push
xchg
rol
int
xchg
jmp
sub
jo
aaa
fimuls
add
js
cmp
push
push
shrb
cmp
dec
xor
add
ds
imul
outsl
ljmp
xchg
in
cmp
dec
divl
cltd
testl
adc
clc
mov
test
and
aas
ds
addr16
add
and
loopne
arpl
in
dec
push
pop
mov
lret
movsl
in
pop
jno
lcall
dec
adc
test
dec
xchg
pop
or
testb
jae
mov
stos
cmp
cmp
out
mov
jne
mov
out
jns
push
jae
shll
jno
dec
loop
pushf
fs
rolb
fbld
daa
rorl
daa
iret
in
or
push
test
outsb
call
or
cld
or
mov
mov
dec
jg
lds
xor
repnz
push
lds
shll
leave
push
jb
cld
xchg
rorb
pop
jge
push
out
in
xor
dec
add
lret
jae
inc
fsts
jmp
pop
mov
jb
lods
cs
fcomip
jl
sub
jb
sub
inc
inc
or
pop
arpl
cli
fcomps
daa
out
idiv
pop
stc
repz
aaa
rcl
dec
push
ret
out
movsl
in
or
fsubrs
shr
cmc
clc
jp
xchg
into
insl
push
test
notl
inc
sub
int3
cmp
mov
aas
cmpl
fwait
leave
pusha
pop
sbb
lret
xchg
add
das
cmp
ljmp
jnp
icebp
bound
mov
jp
jne
dec
test
pop
mov
jne
pop
loopne
test
ficoms
or
cs
sti
push
mov
and
out
imul
adc
out
add
mov
pop
insl
mov
stc
sub
pushf
jo
testb
sbb
push
aaa
ds
dec
loope
lock
imul
mov
popa
lods
mov
push
lret
imul
xor
mov
jmp
test
dec
mov
into
addb
cld
sahf
xchg
cmp
push
dec
inc
pop
cmp
jecxz
dec
push
popa
test
es
inc
dec
loopne
inc
out
fcmovnu
jle
gs
pop
or
xor
out
sub
js
andb
jne
push
push
cmp
pop
roll
arpl
rcrl
push
imul
xor
mov
popa
xorl
daa
lds
jb
add
mov
in
aas
in
and
test
push
rcr
xlat
jo
shl
mov
loope
popl
pop
jl
dec
cmp
in
cmpsb
repnz
sub
out
fdivs
and
xchg
and
fwait
xchg
fnstenv
cmpsb
mov
and
pop
or
stos
add
adc
movsl
push
or
xchg
xor
notb
and
pop
add
sbb
mov
or
fidivl
push
xor
jno
xchg
xor
std
cltd
push
ficomps
xor
mov
jmp
lret
int3
sbb
jnp
mov
outsl
test
fucom
mov
push
shlb
pop
xchg
insl
imul
sub
jl
dec
add
add
fdivr
jo
test
enter
adc
xor
movsl
xor
jle
mov
mov
lock
pushf
stos
loop
imul
and
sbb
icebp
imul
fistpl
int
mov
ds
mov
stc
add
icebp
fs
sti
sub
push
xchg
or
fistl
mov
ljmp
repnz
aaa
cmp
ret
pop
aas
add
test
mov
fdivrp
pusha
xchg
hlt
bound
or
mov
fisttpll
jecxz
push
add
clc
dec
sahf
mov
sbb
mov
fdivr
push
or
stos
int3
jecxz
inc
cltd
cmp
ss
sub
jmp
imul
push
mov
adc
test
adcb
dec
push
push
imul
and
mul
loopne
dec
pop
jmp
sbb
lret
pop
lcall
loopne
cld
test
pusha
lds
pop
sub
add
jg
xor
inc
fldt
icebp
fmull
and
sub
aad
pop
out
ja
div
dec
mov
repz
mov
int3
xchg
fwait
xchg
pop
pop
or
inc
cld
or
cmpsb
les
mov
mov
pop
popf
fistl
ret
lock
fcoml
repz
jo
add
orl
clc
pop
or
loopne
je
out
jecxz
repz
jmp
aad
in
notb
push
das
mov
fcoml
cltd
imul
dec
jl
movsl
dec
lcall
or
in
loop
enter
lock
push
insb
mov
inc
mov
xchg
imul
dec
dec
xor
jl
dec
std
adc
fisttps
jne
xchg
dec
outsl
out
jg,pt
call
hlt
cmpsl
push
int
les
pop
stc
or
out
mov
mov
pop
mov
mov
cmp
sbb
and
push
aas
sbb
cmp
xchg
jg
pop
testb
cltd
mov
pop
scas
mov
jns
cmp
fists
shrb
out
dec
dec
loopne
test
sbb
lret
mov
or
mov
and
sub
pop
cmp
sub
or
add
jl
popf
adc
xchg
push
lcall
jbe
repnz
xor
pop
and
iret
enter
js
push
xor
mov
push
mov
ret
inc
jne
sub
aaa
xor
subb
inc
ljmp
mov
mov
test
sti
std
sahf
pop
push
enter
jge
mov
or
dec
lods
aas
inc
push
pop
aam
add
or
cs
scas
cli
cmc
add
mov
mov
fs
enter
insl
fldcw
ret
mov
add
inc
dec
and
dec
mov
add
mov
push
cmp
int
push
popf
je
jb
fnsave
cmp
mov
loopew
pop
push
pop
ficomps
adc
sbb
scas
mov
inc
push
cmp
mov
fistpll
and
std
cmp
outsb
andps
xor
sbb
pop
sub
aas
ljmp
xor
vpmaddwd
xor
mov
sub
shrl
pop
sub
adc
out
iret
loop
mov
inc
fiadds
mov
dec
fcoms
or
cld
ficoml
outsb
dec
jae
mov
into
pushf
filds
dec
call
cmp
int
cmpsl
movsl
cmc
xor
xchg
dec
jno
push
lcall
cs
mov
cmp
fwait
pop
and
mov
daa
lock
and
ficomps
sub
mov
sub
dec
andb
insb
jno
add
out
or
test
fisubrs
int3
jo
sahf
push
sub
cmp
cmc
shr
scas
lods
mov
add
jecxz
jnp
xlat
fldz
inc
idivl
aam
xor
popa
stos
pop
mov
sub
cmp
push
pop
ja
adc
mov
lahf
adc
xchg
adc
jge
push
xor
mov
push
int3
sbb
push
fsts
inc
ret
ret
loope
jnp
test
aad
sbb
dec
jmp
sahf
shrl
jle
stc
fimuls
pop
pusha
jno
cs
out
mov
inc
lret
insb
lret
or
inc
int3
popf
cmp
dec
and
jg
add
fsubs
add
clc
push
xor
outsb
push
inc
stos
and
scas
scas
push
and
cmpsb
cs
insb
and
fistl
dec
xor
adc
mov
in
mov
ds
and
cwtl
lret
jg
adc
sarb
ja
and
shll
sub
imul
mov
push
aaa
mov
div
add
dec
lret
lock
and
lock
ds
and
xchg
cmpsb
imull
jb
push
movsb
and
dec
jae
push
pusha
gs
cmp
mov
jg
nop
cmp
loopne
push
out
jecxz
xchg
sub
push
in
outsl
jne
loopne
pop
lret
push
xor
mov
frstor
int3
lcall
testb
adc
leave
mov
test
outsb
cmp
push
pop
out
mov
pop
adc
mov
movsl
sarb
cld
nop
xchg
lods
test
cltd
cmp
fidivrl
inc
fs
hlt
daa
rcll
leave
test
cld
cmp
pop
push
inc
test
addb
dec
loopne
add
je
sbb
push
mov
mov
dec
xchg
sarl
mov
sub
aas
outsb
add
and
adc
cwtl
movsb
fisttps
rcrb
ja
loop
dec
pmaddwd
add
jmp
roll
js
icebp
inc
ljmp
int3
pop
sarl
xor
jne
sbb
jle
jge
mov
movsb
lcall
repnz
dec
or
push
ror
in
add
and
sti
xchg
xchg
inc
out
mov
aad
or
push
jle
negb
jae
cmp
push
mov
dec
loope
outsb
sarb
fbld
outsl
push
xchg
mov
repnz
dec
out
scas
jmp
out
in
aaa
lods
add
movsb
lds
jb
in
mov
cmc
data16
cmp
pop
push
bound
lcall
add
aaa
mov
sub
cmp
dec
pop
scas
jg
xchg
jb
movsl
sbb
outsb
or
in
pop
pop
jns
inc
idivl
push
jmp
imul
pop
pop
or
dec
pop
jae
push
add
stc
push
cmpsl
lods
out
cmp
push
mov
push
aas
push
adc
push
rol
int3
or
jl
pop
push
push
jo
sub
xchg
adc
aas
data16
dec
mov
int3
add
divl
push
jmp
or
add
nop
enter
lds
movsb
pusha
out
pop
dec
ljmp
jae
cltd
pop
mov
ficoms
scas
inc
addr16
sub
dec
fmull
pop
and
cmpsl
push
rcrl
xchg
mov
in
orl
in
insl
in
mov
pop
stos
lcall
push
mov
pushf
mull
inc
in
sbb
cmp
sti
mov
add
pop
push
mov
ja
in
test
cli
cld
dec
out
jo
std
xor
in
insl
jge
fiadds
in
mov
out
stos
mov
inc
imul
cs
es
mov
mov
dec
scas
lcall
pop
mov
cmpb
cmp
sbb
pop
cmp
adcl
cld
hlt
in
xchg
jae
and
mov
stos
push
call
xchg
je
stos
int
shrb
xor
xchg
xchg
cmp
mov
mov
dec
sub
ret
into
scas
sahf
xlat
sti
mov
mov
pop
and
fwait
push
nop
mov
out
cmpsl
sub
lcall
push
inc
xchg
and
sub
and
mov
mov
sbb
int3
ja
cmc
stos
or
add
shlb
cmc
cli
mov
lods
int3
or
mov
ficompl
addr16
mov
dec
stc
in
jg
daa
cs
jae
and
xor
fisubl
fisubrs
lcall
repnz
sbb
lahf
in
imul
mov
rolb
jae
push
mov
imul
sub
mov
bound
adc
mov
ret
sahf
push
dec
sti
cmpsb
imul
mov
jbe
mov
pop
inc
jb
dec
or
jp
push
mov
sbb
jb
xor
stos
jmp
pop
sbb
mov
mov
push
xchg
lret
lea
xlat
imul
push
lcall
jae
insl
test
lods
mov
sub
push
adc
sarl
mov
xor
into
mov
imulb
mov
or
repnz
xor
repz
sbb
mov
dec
or
out
mov
inc
test
test
rclb
mov
pop
in
data16
dec
sbb
or
scas
lock
add
mov
jae
aaa
hlt
dec
pop
shl
lahf
push
sbb
data16
dec
jecxz
adc
outsl
clc
jo
aaa
lret
pop
xchg
xchg
push
and
fxch
out
and
mov
fisubrl
testb
jmp
mov
dec
cmp
jl
insl
les
insl
test
push
pusha
jl
jbe
fisubs
push
in
out
lcall
out
pop
xor
xor
and
outsl
mov
xchg
in
lods
nop
pop
pop
adc
xlat
push
add
cmc
jg
loope
mov
inc
insb
or
dec
jge
push
sub
adc
dec
ret
adc
popa
lcall
xchg
add
imul
jae
mov
in
lods
call
adc
scas
sbb
daa
mov
bswap
out
insb
add
xor
sbb
sub
lods
ret
xchg
add
nop
dec
mov
fnstsw
sub
je
lods
lret
daa
xor
imul
adc
adcb
fwait
pop
into
sub
xor
sbb
stos
adc
lret
add
cltd
fcomip
mov
mov
push
jo
icebp
add
ror
outsl
jbe
cmp
cs
enter
dec
pop
insb
fadds
in
lds
fwait
sbb
shll
lods
mov
or
movsl
sub
push
cli
xchg
add
lods
imul
sbb
pop
pop
jmp
push
xor
fmul
stc
pmaddwd
push
sbb
movsb
push
ja
jne
fldcw
popf
cmpsl
jbe
bound
and
pusha
mov
popa
mov
jne
xor
sbb
sarl
push
jb
cmp
push
aam
sti
sub
rcrl
pop
int
icebp
xchg
addr16
or
movsb
adc
out
mov
mov
stos
and
mov
mov
xor
daa
sub
ret
cmp
adc
xchg
sbb
cmp
push
mov
xchg
cmc
ja
inc
pop
imul
aaa
sub
daa
int3
dec
inc
mov
pop
sbb
repz
stc
inc
xchg
rclb
xchg
jle
out
or
sarb
nop
test
jae
out
stc
in
shrl
test
pop
push
cs
add
xchg
les
jbe
or
das
add
fstpt
push
adc
push
das
sti
repz
adc
sub
cmc
add
stos
push
add
or
or
push
lds
and
fs
icebp
and
dec
stos
pusha
xor
addr16
filds
sbb
out
lret
fbld
pop
sarb
insl
adc
stos
push
clc
es
sub
fnstenv
pop
loope
push
mov
faddl
lahf
rcrl
sbb
mov
jbe
sub
std
addr16
insb
sub
faddl
xor
jo
add
iret
shll
jg
push
cmp
pop
dec
xorl
mov
mov
mov
fsubrs
cmp
test
or
xchg
mov
sbb
cmp
mov
cmpsl
mov
mov
fistpll
lock
outsl
lods
ret
insl
outsb
out
mov
flds
pusha
scas
xchg
jno
loopne
jge
enter
jbe
xlat
adc
jmp
pop
lods
adc
fmul
inc
mov
jle
mov
rcrl
sbbb
pop
mov
mov
js
xchg
outsl
clc
daa
ljmp
lret
flds
mov
leave
xchg
or
jno
mov
cmpsl
push
mov
jecxz
mov
aad
sub
hlt
or
mov
lock
pop
push
mov
xor
lods
aas
loop
add
push
sub
push
jno
jge
repz
cmp
adc
sbb
lds
orb
sbb
shl
mov
lock
ret
mov
inc
imul
and
cmpsl
insb
xchg
sub
sbb
lods
sbb
pusha
xchg
enter
mov
xor
or
movsb
hlt
mov
push
js
xor
dec
jbe
das
sub
mov
aaa
sbb
mov
cmp
mov
xor
aad
call
mov
mov
fwait
je
push
iret
cmp
arpl
push
stc
aas
sub
dec
in
ja
push
imul
adc
sub
sub
push
out
add
shll
lret
sbb
inc
jg
cli
xlat
push
and
and
subl
jno
jl
out
dec
movsl
sahf
adc
das
dec
mov
inc
sbb
movsl
cmp
jl
mov
cmp
or
jle
and
jb
addl
mov
fstl
sub
add
nop
adc
pop
int
arpl
push
dec
decl
gs
popf
idivb
or
adc
lahf
pop
sbb
mov
and
cwtl
or
sbb
jmp
push
fcomip
mov
mov
hlt
test
and
xor
jne
jp
mov
jnp
mov
mov
adc
mov
cld
lahf
cli
fs
daa
inc
inc
pop
xor
in
je
mov
push
mov
out
imul
lods
or
mov
pusha
xor
add
push
sub
xchg
lds
arpl
mov
popa
arpl
xchg
fs
daa
jecxz
std
mov
mov
push
jnp
push
dec
dec
scas
outsb
lret
jae
adc
ljmp
dec
sub
cs
push
call
mov
push
inc
xchg
popf
sub
in
stos
clc
push
push
fwait
or
cmpl
repnz
fiaddl
sub
cld
lea
dec
xor
dec
jecxz
cltd
cmp
insb
cmp
lcall
ja
mov
mov
pop
das
int3
xchg
mov
std
call
push
js
jle
mov
xchg
sub
xchg
fadds
and
pop
pop
pop
mov
out
sub
sub
loope
fldl
clc
in
addr16
ret
cld
insb
jns
mov
pop
pusha
xchg
ss
pop
mov
jmp
call
movsl
xchg
aam
ja
jle
in
cmpsb
mov
pop
sahf
fstpt
mov
nop
cmpb
je
push
mov
mov
sbb
xchg
mov
xchg
mov
fs
mov
jmp
push
cmp
add
dec
push
js
inc
mov
ret
cmp
loopne
mov
in
sub
repnz
jno
cmpl
mov
ljmp
cmp
cmpl
sub
pop
test
adc
in
aas
jge
test
js
sbb
fisubs
xor
jmp
add
bound
aaa
xorb
lret
test
adc
cmp
jle
xchg
jno
sahf
or
jge
adc
dec
mov
cmp
xchg
add
outsb
jmp
add
and
cmpsl
je
pop
cli
mulb
jmp
stc
bound
mov
clc
cwtl
fs
rorb
and
xchg
bound
testl
shrl
cli
mov
dec
mov
cld
jbe
push
xor
clc
fldcw
int
cmp
inc
sbb
dec
das
cmp
mov
dec
cltd
jne
pop
aam
and
or
fbstp
in
les
cmp
mov
jecxz
in
movb
jecxz
xlat
push
inc
mov
shrb
sbb
cmp
out
and
xchg
dec
test
pop
roll
stos
test
sub
sub
leave
test
jmp
enter
push
xor
xor
mov
xor
es
addl
out
adc
mov
and
xchg
mov
iret
sbb
lods
outsb
mov
enter
xchg
cli
push
xchg
xchg
daa
into
pop
mov
cmpsl
add
cltd
roll
gs
sbb
mov
jb
sub
fidivs
mov
addb
imul
rcrb
dec
cmc
icebp
dec
or
add
jne
xor
arpl
inc
jbe
xor
fnstenv
xor
int3
jmp
add
xchg
xor
xchg
fsub
ret
stos
dec
hlt
adc
jle
repnz
or
push
mov
mov
sbb
clc
push
aaa
pop
inc
das
xchg
mov
test
pusha
inc
aaa
fwait
notl
xor
xchg
xchg
hlt
ljmp
or
testb
xor
add
int3
fnstcw
pusha
or
cltd
adc
mov
ss
hlt
or
insl
pop
loopne
pop
bound
fwait
mov
push
xchg
cmc
mov
cwtl
sti
addl
jbe
inc
pop
jno
add
push
or
inc
inc
outsl
xor
cmpsb
jmp
mov
popa
mov
mov
mov
cld
inc
sub
and
sbb
and
mov
loopne
push
out
ret
ret
sub
push
lcall
jmp
and
outsb
adc
mov
out
in
xor
lods
push
ret
pop
cltd
inc
stos
mov
insb
mov
lahf
sbb
scas
push
dec
ret
xorl
and
stos
push
sbb
mov
add
lods
push
cmpsl
mov
mov
clc
call
push
mov
jmp
lods
stos
sub
pushf
insl
aad
jle
xorl
adc
imul
xor
or
xchg
movl
rorl
xor
cmp
cltd
fdivl
lret
divl
js
mov
xor
dec
xorl
stc
movsb
mov
pop
xchg
cwtl
imul
sbb
push
mov
insb
mov
test
es
pop
sbb
and
shr
pop
jp
ljmp
fs
gs
rorl
daa
stos
pop
call
jmp
and
jno
jg
mov
pop
cmp
pop
sbb
sti
inc
mov
jl
rorl
pop
cmpsl
xor
call
push
adc
iret
mov
aam
ds
adcb
lds
je
stos
cltd
dec
jmp
push
cmp
into
add
xchg
push
ret
cltd
int3
cltd
cmp
sbb
shlb
xor
xlat
test
fwait
mull
call
push
add
mov
mov
xchg
enter
jmp
ss
fbstp
jae
mov
mov
and
cltd
sbb
dec
fistpl
xchg
cmp
repnz
adc
mov
cmpsb
sub
movsb
or
mov
int3
lcall
insb
xchg
daa
jae
xchg
sub
pusha
pop
mov
out
aad
sbb
testl
loopne
ljmp
jno
cmpsb
out
ffree
rolb
cmpsl
inc
ss
mov
push
shrb
cmp
push
mov
out
adc
leave
mov
xchg
mov
clc
jo
lds
movsl
and
test
out
shrl
frstor
fwait
mov
shrb
imul
stos
pop
mov
inc
data16
fcmovne
out
xchg
mov
xchg
sarl
push
insl
mov
cmp
mov
ljmp
mov
mov
into
or
push
pop
popa
lock
add
xchg
movsl
aam
inc
cld
leave
fs
mov
cmpsb
xor
cmpsl
movsb
mov
movb
xor
loopne,pn
js
aad
xchg
sub
popa
mov
xor
dec
pop
sub
xchg
sbb
andl
cwtl
adc
xor
test
pop
cltd
jae
mov
sbb
cld
mov
test
cmpsl
hlt
add
xchg
stos
pop
hlt
imul
imul
rcll
hlt
notl
ljmp
mov
gs
cld
pop
nop
pop
xor
sbb
movsl
mov
mov
sub
cmc
in
arpl
bound
adcl
clc
nop
push
int
out
xor
cmp
scas
test
mov
xor
fwait
sub
out
ficompl
out
and
mov
mov
push
loop
mov
adc
mov
mov
ja
pop
cmp
rcrl
ffree
pop
pop
sbb
mov
sbb
repnz
mov
dec
lods
jecxz
xor
les
inc
add
jne
jecxz
and
and
cmc
loopne
das
sub
ret
int
out
pop
or
sahf
lret
int3
jle
cmp
faddp
pop
les
or
mov
js
jg
jle
icebp
or
xchg
jne
jle
andl
fmuls
dec
xlat
lret
in
cmpsb
js
mov
movsb
ljmp
add
inc
sub
fwait
xchg
xor
sub
stos
mov
mov
mov
popa
mov
jl
xlat
sbb
daa
daa
sbb
in
mov
jp
and
mov
cmc
or
ds
dec
xchg
in
popa
xor
stc
xchg
cmp
sbb
sbb
imul
adc
stc
imul
bound
jae
mov
repnz
xchg
push
mov
dec
inc
js
mov
or
gs
test
cmp
adc
popf
sbbl
or
ret
cli
xlat
or
pop
shrb
pop
push
and
int3
fwait
cli
add
sub
jb
ss
ret
int
test
test
ss
cmc
in
sbb
lea
hlt
lcall
fwait
aaa
cmc
xchg
decl
outsb
clc
lret
dec
inc
add
jae
in
mov
mov
ret
sbb
int
mov
les
mov
movsb
jle
loope
cwtl
mov
sub
pop
ds
aad
cmc
sbb
xchg
dec
push
adc
bound
faddl
adc
mov
push
xor
cld
or
lahf
in
cltd
popw
xor
aam
loop
jl
inc
out
jo
pop
dec
mov
jne
mov
sbb
or
cltd
mov
ljmp
and
aas
cmp
in
inc
popa
ljmp
sub
test
int3
xor
adc
imul
add
lret
cmc
mov
repz
bound
adc
dec
mov
lock
in
pop
jp
iret
js
cld
movsl
xchg
scas
aaa
into
clc
adc
push
out
faddl
test
adc
mov
insl
push
mov
adc
and
movsl
ljmp
insl
nop
enter
mov
cmpsb
loopne
ror
sbb
nop
cmc
jne
ret
fisubrs
mov
dec
jno
loop
push
dec
xchg
or
push
adc
fwait
shll
xchg
or
jb
rcrb
cwtl
dec
or
mov
jp
pop
inc
adc
pop
pop
outsl
es
loopne
xchg
xchg
mov
mov
cmp
jmp
fwait
xchg
leave
sub
in
sub
xchg
int3
ja
sti
bound
and
inc
mov
adc
loope
out
and
arpl
cmp
sub
shrb
out
mov
lds
clc
cmpsl
cmp
int
call
dec
cmpsb
inc
sbb
or
std
loope
push
xchg
dec
pop
movsl
inc
imul
pop
xchg
sub
cmp
sahf
xchg
and
aaa
jecxz
inc
xor
jmp
or
call
popa
jg
sub
mov
outsb
mov
xchg
jb
or
fldenv
divl
xor
rcll
lret
mov
push
lods
fmuls
mov
mov
pop
ret
inc
dec
repz
xor
xchg
add
ja
push
daa
sti
or
aas
jo
add
sahf
mov
mov
push
adc
nop
or
in
ret
and
inc
inc
dec
sahf
pop
aas
mov
stos
leave
add
test
mov
int
jle
and
sub
xor
xlat
jmp
cmpsl
pop
xchg
or
arpl
jo
xor
cmc
pop
or
cmp
dec
dec
subb
aas
pop
or
clc
test
dec
mov
out
cmp
push
lods
push
mov
imul
jno
lret
jo
in
cmpsl
lret
push
shrl
fyl2x
mov
gs
push
ss
popa
push
mov
jp
jmp
lret
sub
aas
and
mov
xchg
in
dec
bsr
in
cmp
mov
nop
xchg
js
fisubl
ret
push
jne
cmp
jne
adc
lods
lret
jno
fldl
nop
pop
or
mov
push
jo
shl
pop
in
mov
pusha
fildll
xchg
rcl
shrb
test
xor
out
jne
push
dec
aaa
jmp
das
sub
std
and
sub
leave
jmp
cmp
jbe
jp
xchg
loope
mov
stos
sbb
dec
fcomip
jns
adcl
inc
cld
jno
jns
sbb
and
imul
jb
mov
arpl
negl
inc
daa
and
movsl
lods
out
ret
js
cli
mov
leave
dec
sub
in
out
add
iret
cs
mov
shlb
or
das
xlat
mov
push
push
mov
sbb
mov
daa
xor
movsl
cs
cli
pushf
push
pusha
and
outsl
popf
xchg
daa
arpl
imul
add
and
test
pop
es
int3
sub
ja
sub
or
and
aad
add
pop
adc
lds
cmpsl
in
test
xchg
jmp
sbb
jle
push
pop
pop
loope
pop
je
sub
sub
fiadds
jmp
mov
mov
call
mov
lds
mov
scas
mov
pop
adc
push
add
jb
out
outsl
movsb
inc
imul
dec
out
pop
push
clc
xor
jge
or
bndldx
or
mov
mov
outsb
xor
jg
jmp
repnz
pop
mov
push
push
gs
cmc
pop
push
les
fmuls
push
mov
pop
test
add
push
hlt
daa
repnz
push
mov
popf
mov
std
aad
popa
clc
ds
adc
sbb
addr16
lea
mov
mov
lods
scas
sbb
je
sahf
sub
mov
and
insb
subl
mov
nop
aas
sti
xchg
js
inc
cmp
pusha
inc
ret
sub
hlt
inc
jne
mov
scas
pop
cmp
dec
mov
inc
mov
rcrl
adc
loope
daa
stos
cmp
jb
push
mov
pushf
lock
jb
cmp
adc
hlt
arpl
inc
adc
cmp
pop
rclb
add
orb
mov
and
jmp
jg
ret
out
cmp
sbbb
pop
incl
mov
push
stos
fs
mov
lea
xor
and
cwtl
in
mov
push
fiadds
repnz
sbb
adc
fcos
imul
jl
mov
jecxz
sar
loope
inc
sbb
jae
fistpl
inc
push
dec
mov
jg
push
rorb
mov
aam
dec
jb
shl
cli
cmpsl
xchg
rcr
adc
mov
sbb
mov
mov
mov
cli
xor
leave
ljmp
push
push
or
adc
pop
movb
aas
movsl
pop
in
sahf
mov
push
ljmp
sahf
jp
sahf
in
aas
or
scas
data16
cmc
xchg
sbb
stos
inc
or
xchg
sub
and
into
jle
jae
fldcw
in
scas
jecxz
inc
aaa
ljmp
notl
mov
btr
fsub
aam
dec
xor
das
sbb
scas
push
mov
mov
iret
cs
inc
mov
pop
adc
sbb
mov
sbb
dec
dec
jno
xchg
jg
or
popf
mov
jnp
mov
lahf
mov
push
mov
test
cmp
sub
mov
inc
hlt
dec
dec
jns
adc
call
cmp
xor
add
dec
call
fld
adc
lods
or
mov
mov
lea
int
mov
pop
sti
leave
xchg
adc
pop
jne
jo
sub
mov
sahf
cmp
sub
add
es
ficomps
lret
loopne
push
adc
lret
jp
mov
sub
or
xchg
inc
ds
clc
lea
into
clc
inc
mull
arpl
mov
es
and
imul
mov
xchg
adc
xor
mov
adc
lahf
push
gs
jae
outsb
mov
filds
push
fisttpl
in
jne
in
xchg
mov
jmp
mov
mov
fcmovne
xor
cmp
stos
dec
loopne
add
rcrl
int
jae
adc
push
inc
dec
add
and
mov
cmc
insl
xor
dec
outsl
mov
dec
imul
ret
and
pushf
xchg
sarl
push
add
into
jne
cltd
push
idivb
cmp
fldenv
addr16
gs
pop
fldenv
dec
int
cmp
out
sahf
sub
enter
pop
daa
pop
mov
add
mov
fwait
sbb
xchg
ss
movsl
stc
in
jl
cmp
push
mov
mov
cmp
sub
hlt
mov
testb
ret
cld
in
sbb
mov
inc
divl
mov
push
mov
sbb
sbb
push
jmp
shlb
lcall
cltd
fwait
clc
shll
push
hlt
jmp
xlat
sub
sbb
ja
pop
jmp
jbe
rolb
xor
push
out
sub
xor
cld
imul
mov
hlt
in
cmc
shrb
cli
fcomps
pushf
addr16
dec
lret
test
rorb
test
mov
push
ficoml
pop
mov
enter
add
pop
movsl
inc
pop
xor
orb
xor
mov
pop
jmp
xchg
loop
jb
inc
jmp
pop
fnstcw
jmp
mov
mov
ret
adcb
test
andl
mov
dec
lret
dec
pop
cmpb
je
andb
sbb
jae
inc
cltd
or
lods
mov
and
push
mov
mov
lret
jno
cltd
jnp
lcall
sbb
std
and
jne
shl
jb
and
adc
sti
lahf
mov
or
into
mov
ja
inc
dec
mov
adc
sbb
sbb
inc
mov
lods
dec
cs
lahf
data16
mov
lea
int
pop
dec
decl
or
xchg
inc
clc
or
nop
lods
jae
test
xchg
ds
out
cli
mov
inc
mov
decb
ja
out
lret
cmp
inc
push
fsub
sub
dec
in
fwait
xchg
push
mov
outsl
push
mov
mov
int3
mov
imul
das
xor
jo
test
push
lods
inc
imul
mov
daa
leave
mov
js
clc
push
push
ret
xchg
decb
mov
insl
int
jg
les
mov
adc
push
mov
lods
pop
fiadds
jns
shr
aad
inc
imul
in
pop
sbb
outsb
popf
push
les
mull
dec
call
test
gs
and
dec
std
shrl
and
jne
shll
ficoms
ficoml
jns
jae
sbb
sub
lcall
cli
jns
jmp
lahf
pop
shll
mov
jo
movsb
mov
xchg
jp
dec
imul
or
sub
mov
xor
cwtl
jne
pop
xlat
in
stos
add
out
fisttpl
stos
aaa
lcall
and
movsb
mov
je
clc
pusha
sbb
xchg
cld
mov
adc
or
jae
fdivs
pushf
xchg
dec
mov
add
loope
cltd
cmp
xor
adc
mov
pop
push
or
shll
or
fwait
jge
stc
dec
xchg
or
mov
or
orl
mov
outsb
and
sbb
lods
mov
mov
adc
pushf
and
xchg
inc
pop
pop
pop
pop
sbb
iret
inc
xor
loopne
xor
ret
fcmove
and
rolb
mov
pop
add
int
sub
ret
or
xor
sub
pop
popa
iret
push
cli
cmp
repz
push
bound
das
nop
in
outsb
jecxz
inc
sub
aas
inc
gs
aas
dec
and
test
out
sahf
push
add
sub
jb,pt
clc
mov
inc
aaa
jae
shr
pusha
mov
outsl
movsl
xchg
andl
push
gs
andb
test
jno
idiv
mov
pushf
sub
pop
cmp
jo
sbb
jge
sarb
idivb
loope
pop
int3
add
mov
push
push
jp
jb
int3
xchg
adc
stc
insb
push
cmpsb
stos
jmp
push
loop
inc
andl
ret
pop
lods
mov
enter
dec
cmc
dec
outsb
xchg
rclb
pushf
lods
fiaddl
andl
or
cmp
xor
mov
jo,pt
testl
call
scas
jne
jmp
inc
movsl
mov
push
mov
shrl
addr16
dec
lret
fidivs
mov
loope
mov
out
leave
int3
btr
push
out
cmp
add
xor
push
arpl
and
cmc
sbb
out
addl
repnz
adc
lock
aas
mov
sub
cwtl
movsb
fs
inc
js
pop
fisubrl
hlt
div
fnop
fisttps
outsl
fisubrl
out
mov
push
out
fbld
adc
pop
cmpsl
jle
xorl
inc
cmpsl
rolb
into
addr16
stc
mov
icebp
and
mov
cmp
fidivrl
pop
imul
jg
cli
cmp
pop
out
imul
movsb
loope
mov
popf
repnz
fstl
ja
or
inc
mov
mov
mov
jae
shl
jl
daa
xchg
fsubp
dec
xchg
mov
mov
jno
aad
xchg
or
in
inc
vcvtss2si
dec
int
cwtl
push
pop
pop
test
push
ret
inc
pop
int
xchg
dec
xor
sbb
jbe
mov
jecxz
ss
aad
dec
sub
leave
fildll
xor
cmp
jb
outsb
push
scas
mulb
pop
mov
xor
push
mov
repnz
push
xorb
cmp
xchg
adc
sub
xchg
lock
push
imul
add
dec
pop
cs
jns
repz
insl
cmp
xor
bound
insb
loope
cmp
mov
jns
sbbb
adc
and
fcoms
shlb
adc
addb
or
push
jecxz
xor
fcoms
rclb
push
data16
push
add
std
mov
out
mov
jns
pop
xchg
mov
jmp
xchg
xchg
in
pop
fiadds
out
les
les
ret
xchg
add
stos
adc
sbb
fpatan
adc
push
lods
subb
test
mov
add
jmp
fcomps
pop
inc
pop
repz
push
imul
mov
add
xor
movsb
xchg
push
push
mov
push
pop
divl
leave
iret
in
xor
cmp
icebp
adc
xlat
adc
jb
gs
cwtl
imul
jnp
xlat
fidivrs
mov
pop
nop
and
xor
ljmp
enter
mov
xchg
pop
sti
mov
stc
negl
cmpsb
test
xchg
push
adc
add
add
imul
sti
pop
or
scas
mov
cli
and
fwait
adc
sbb
pmaxub
cmp
insb
push
lea
add
pop
xchg
lds
jmp
fimuls
cltd
push
test
aam
push
dec
cmp
inc
mov
lret
rolb
dec
scas
fildl
inc
inc
popf
nop
test
lret
xchg
testb
push
stc
insl
dec
ss
pop
sub
add
or
sub
or
bound
adc
into
xchg
cmp
daa
push
data16
std
int3
or
dec
cmpb
inc
cmp
push
sbb
lods
fistps
popf
je
insb
mov
and
add
add
std
shr
jnp
jae
nop
xchg
adc
xorl
sbb
daa
sti
adc
sub
jnp
cmp
pop
sub
mov
mov
int3
subb
cld
icebp
clc
insb
xchg
cmpsl
and
mov
filds
inc
push
out
xchg
cld
push
jg
xchg
shll
in
cmp
xor
xor
xlat
out
xor
lcall
imul
scas
dec
push
mov
or
stos
add
data16
and
mov
xor
outsl
shll
xchg
test
pop
mov
out
cmp
mov
loop
test
adc
sub
test
cmp
repz
mov
inc
std
mov
sbb
add
sbb
dec
dec
add
xor
or
xchg
jmp
xchg
pusha
push
repz
inc
mov
push
mov
cmc
push
xor
sub
decl
jmp
jl
hlt
mov
out
or
mov
andb
xchg
call
enter
pop
adc
or
sbb
jle
and
ss
inc
aaa
repnz
lea
push
mov
fisttps
and
cld
jecxz
or
mov
push
loope
xor
test
dec
jae
xchg
sbb
cwtl
jnp
inc
cmpsb
loope
jno
cmc
test
mov
add
nop
cmp
sub
push
cmp
aaa
jne
int
jge
js
call
or
repnz
push
pushf
dec
mov
xor
mov
mov
jecxz
dec
call
dec
mov
jge
pop
fiadds
xlat
daa
sub
scas
dec
hlt
pop
imul
gs
loopne
mov
inc
std
jl
jne
ret
pusha
arpl
adc
jns
dec
gs
inc
mov
xor
add
mov
mov
insl
add
std
mov
arpl
test
inc
test
mov
movsb
ficomps
mov
add
pushf
and
sbb
pushf
sbbb
int3
incb
aas
push
or
cltd
push
xchg
jle,pt
jb
subl
daa
mov
xchg
cmc
push
out
sub
jbe
add
mov
mov
mov
fstps
adc
jle
mov
push
stos
push
jmp
xorb
mov
pop
inc
ljmp
aad
mov
idiv
inc
pop
fstps
out
jnp
scas
roll
sti
dec
push
mov
and
cmpb
pop
mov
sbb
push
loop
movsb
inc
xlat
jecxz
call
xor
subl
fistpll
xchg
push
repnz
ja
stc
aaa
testb
fnsave
xchg
jge
fs
cs
dec
cmp
mov
xchg
aaa
xchg
loope
jae
test
sub
mov
xor
shll
add
aas
cmpsb
xchg
mov
pop
scas
cltd
xor
jo
mov
stos
mov
aas
fcomps
add
mov
scas
or
xor
pushf
lcall
or
jg
or
or
add
std
mov
sbb
add
maskmovq
idivl
cs
pop
add
fldcw
cmpsl
ds
mov
cmp
mov
std
mov
lahf
pop
mov
adc
jmp
xchg
cli
cltd
dec
jle
mov
daa
push
loopne
pop
add
cmp
inc
mov
js
xor
in
out
fcmovnb
call
imul
scas
cmp
ljmp
cmp
adc
mov
mov
in
push
cli
lahf
mov
or
mov
jns
enter
xchg
mov
mov
rcr
enter
gs
fbld
cmp
or
mov
fistpll
cltd
fnstcw
fwait
stc
cwtl
mov
and
push
lea
inc
jmp
adc
lahf
scas
jl
mov
imul
fbld
loopne
push
pop
sbb
sub
or
adc
fwait
push
mov
mov
xchg
sbb
lret
fcomp
out
rorb
mull
xchg
dec
adc
push
cmp
sbb
ja
push
repnz
inc
loop
jae
inc
repz
cmpsl
xlat
aas
pushf
negb
fmulp
mov
cs
and
pop
jecxz
out
mov
mov
push
je
xor
xchg
sub
inc
and
clc
mov
in
insl
sbb
xchg
loopne
mov
jl
pop
into
das
mov
mov
sub
fisubs
dec
xor
xchg
sbb
sub
mov
add
dec
repz
xchg
push
insb
sbb
cmpb
movsl
pop
or
pop
jne
sbb
xor
inc
pop
or
xchg
mov
repnz
shrd
daa
ficompl
clc
sub
jle
sbb
push
arpl
xchg
arpl
mov
jnp
mov
push
aad
pop
test
ja
inc
or
xchg
and
pop
scas
adc
in
or
push
or
sti
add
mov
sbbb
dec
and
arpl
ljmp
lds
mov
cld
repz
xor
ja
fnstcw
jecxz
sub
mov
push
les
jns
push
lea
add
push
pop
stc
stc
sbb
dec
jb
pusha
push
push
adc
enter
out
lods
dec
cmpsl
popa
push
movb
inc
insb
inc
mov
enter
std
push
pushf
cmp
jae
adc
mov
fsubrp
stos
mov
dec
cmp
xor
dec
mov
xor
adc
aaa
mov
in
rorl
inc
int
roll
pop
mov
iret
std
pusha
fldt
mov
adc
or
shll
js
dec
adc
mov
mov
lock
shlb
imul
scas
dec
or
int3
sub
jmp
sti
fimull
lahf
jb
lahf
sbb
adc
lds
lret
dec
mov
repz
int3
ficompl
dec
push
pop
jns
lcall
xlat
sub
shlb
xchg
sub
adc
xor
fbld
jmp
sbb
call
inc
rol
ret
sub
inc
cmpsl
fcoml
dec
aaa
jge
jo
aad
movb
inc
cmp
push
and
jle
xchg
repz
dec
fidivrl
and
dec
icebp
je
incl
shrl
mov
pop
addr16
mov
add
xchg
xor
cmpb
aas
mov
sbb
shl
popa
push
fiadds
scas
pushf
repz
push
loopne
and
mov
movsb
pusha
scas
lods
pop
notl
sub
out
dec
arpl
push
cmc
or
clc
sbb
out
inc
sbb
and
adc
lock
push
in
jbe
cs
out
rcl
cmpsb
scas
nop
sarl
lds
cmp
inc
fmuls
cli
fistpl
mov
leave
mov
rcrl
shrl
mov
xorl
add
and
cmpsl
imul
lahf
repnz
and
sbb
mov
adc
std
jbe
ret
dec
ljmp
xchg
sub
inc
aam
add
repnz
adc
lret
imul
movsl
test
push
push
icebp
dec
push
jmp
xchg
nop
leave
cmp
shll
mov
pop
call
xchg
dec
jl
inc
push
pop
int
xchg
mov
mov
jp
mov
mov
lea
lret
mov
jmp
aaa
xor
in
mov
hlt
daa
idivl
inc
loop
mov
inc
or
mov
jge
loop
loope
push
and
or
rep
fcmovnbe
gs
pushf
xchg
sub
adc
aas
ljmp
lea
jge
mov
inc
sbb
mov
fs
add
jecxz
push
je
enter
je
shrl
arpl
jp
push
xor
mov
scas
sbb
leave
lea
dec
cmpsl
and
cs
cmpsb
scas
mov
loopne
out
mov
lret
stos
cmp
jo
pop
fcoms
jno
data16
dec
out
push
icebp
jecxz
cltd
out
inc
outsl
mov
repz
pop
adcl
mov
fstpl
imul
xlat
call
lret
test
lret
iret
shl
jp
je
addl
in
sti
pop
int3
fsubrl
push
inc
fstps
arpl
rcr
stos
inc
push
les
jecxz
adc
dec
pop
cmp
pop
and
jnp
scas
jb
add
gs
sub
sub
lahf
pop
leave
fwait
les
sbb
xor
pop
adc
and
mov
daa
pop
add
xlat
add
movsl
sbb
xchg
clc
pop
das
inc
out
jmp
push
adc
arpl
bound
xor
xchg
sbb
test
hlt
xchg
jb
bound
cmp
sbb
xor
dec
pop
xchg
cmp
jmp
rorl
inc
outsl
imul
out
xchg
jge
das
cmp
aad
lods
add
data16
imul
scas
lods
adc
popa
xchg
xchg
sub
out
cmp
mov
sub
sahf
sbb
repnz
arpl
clc
cmp
leave
data16
fs
das
popf
inc
aaa
insb
add
jns
push
pop
insb
repz
push
lods
aad
bound
in
ss
sbb
mov
cmpsl
mov
xchg
jnp
xlat
cmp
jns
adc
adcl
cmp
cli
ret
lahf
jecxz
stc
and
mov
pushf
out
jmp
lods
push
dec
fsubrl
add
lea
stc
rcrb
adc
push
or
aam
fldenv
scas
repz
cs
push
or
inc
jnp
lock
and
push
lods
aam
test
jo
aas
sbb
mov
std
lret
jmp
xchg
cmp
cmc
mov
jmp
jmp
and
inc
adc
mov
mov
cmpl
adc
mov
mov
cmp
inc
inc
or
sbb
mov
pop
cmp
clc
imul
jo
mov
dec
or
or
sub
jle
and
push
fldcw
pop
sbb
ret
mov
mov
cmpsb
cltd
out
push
push
or
and
cmpsb
mov
jmp
xor
push
or
stc
jmp
mov
loopne
mov
popf
xchg
mov
mov
xchg
sbb
jne
adc
loope
mov
fisubrs
arpl
mov
loope
sub
sbb
sbb
or
cwtl
sub
pop
inc
jecxz
adc
cwtl
outsb
sub
inc
dec
lock
push
or
sbb
xor
mov
jg,pn
sub
insl
clc
inc
mov
les
jl
leave
int3
ret
daa
sbb
pop
mov
jno
shrb
scas
xchg
xchg
movsl
adc
scas
jp
or
fimuls
add
call
xchg
movsb
arpl
sbb
or
lahf
mov
repz
inc
fistpl
sbb
loop
sub
subl
data16
jecxz
rcrb
cmp
lea
int3
out
and
xorl
push
insl
rclb
out
mov
pop
xchg
xchg
jge
mov
jl
add
ret
scas
sarl
and
sbb
out
sub
movsb
mov
fadds
movsb
cmp
cmp
out
mulb
ss
adc
sub
pop
adc
mov
shrl
in
pop
adc
sbbl
mov
das
mov
lret
add
inc
pop
sbb
mov
mov
push
loope
add
in
lods
cli
loopne
sbb
mov
push
add
sbb
inc
xchg
push
inc
push
xchg
lret
push
mov
or
mov
sub
or
loope
adc
je
adc
fmuls
mov
add
mov
fisubl
insb
divl
mov
inc
mov
mov
xchg
aad
xchg
jbe
ret
xchg
data16
xchg
xorb
sub
xchg
lock
sti
dec
popf
test
loop
rcr
or
ds
sbb
pop
add
pushf
mov
pop
aad
sub
sbb
xchg
add
lcall
add
pop
mov
test
fbld
rcrl
test
movsl
xor
nop
in
sbbl
inc
xchg
hlt
jne
nop
fwait
xchg
icebp
mov
daa
ret
jo
fs
imulb
jl
add
mov
pop
test
or
ss
xchg
arpl
jge
jae
leave
pop
mov
push
pushf
push
jo
lcall
jne
lcall
imul
adc
ss
popa
mov
inc
add
sub
or
jae
sbb
test
sbb
cmp
in
pop
adc
shlb
aas
pop
mov
cltd
jp
movsl
les
lds
icebp
pop
mov
pop
pop
sbb
pop
addl
cmpb
xor
mov
dec
fsubrs
push
lock
je
pop
inc
dec
pop
test
stos
adc
mov
add
cmpsl
or
pop
aas
cmp
mov
push
adcl
adc
inc
adc
adc
test
and
add
vmovmskps
sub
add
fisubl
jecxz
jl
adc
mov
int
movsl
mov
sbb
sbb
pop
aad
cmpsb
pop
pop
push
outsl
xlat
aad
mov
andb
dec
dec
sub
and
push
pop
mov
jo
pop
cs
movsb
dec
and
cmp
scas
int
xchg
repz
jecxz
insb
movb
jo
test
loop
or
sbb
cmp
scas
adc
xchg
test
lcall
jbe
aas
insl
adc
mov
xchg
jo
lods
aam
jecxz
adc
fwait
les
out
xchg
fcompl
mov
leave
lock
or
cld
and
jmp
in
mov
mov
xchg
add
cmc
add
repz
xor
sub
out
sbb
leave
outsb
aad
fstpt
pusha
lea
std
adc
scas
or
repnz
pop
adc
add
ficoml
dec
mov
push
pushf
ficompl
aaa
cltd
iret
shlb
out
push
adc
mov
cld
inc
insl
pop
sti
popa
popf
outsl
xor
sbbb
roll
fdiv
lock
into
add
push
test
popf
imul
test
fisttpl
hlt
pop
sbb
inc
pop
cmp
sbb
pusha
lods
fstpl
xor
add
fisubl
sbb
js
push
icebp
das
fdivp
cs
dec
mov
clc
or
out
xchg
movsb
adc
push
cmp
fdivrs
mov
pusha
adc
sbb
jbe
pop
sbb
pop
stc
adcb
idivb
call
fsubrs
outsl
add
int
js
stos
cwtl
outsl
jnp
sahf
sarb
pop
sub
int
pop
push
push
insl
jae
mov
mov
lock
adc
xor
add
push
xchg
in
push
cmp
addr16
in
push
arpl
je
mov
mov
mov
cmp
push
aaa
cs
cmpsb
mov
jp
sarl
outsl
cltd
pop
mov
into
icebp
insl
mov
push
stos
negb
arpl
fwait
jp
mov
aam
xor
xchg
je
inc
pop
sbb
sbb
lcall
dec
push
hlt
xor
das
mov
mov
lahf
clc
shll
push
xor
xchg
fdivs
jecxz
pushl
std
sub
inc
js
mov
jbe
ja
out
and
repnz
push
lret
adc
shlb
xlat
out
js
inc
push
jp
ret
fcomi
orb
mov
adc
mov
or
mov
or
test
add
fbld
cli
shll
sub
pop
xchg
mov
loopne
or
mov
nop
adc
insb
fists
and
cwtl
cmp
lcall
imul
inc
jno
imul
pop
hlt
mov
sbb
lret
vpavgb
scas
sti
push
inc
lahf
enter
push
mov
movups
mov
shll
icebp
outsl
das
cwtl
aaa
pop
adcl
lods
sti
dec
mov
popa
push
add
in
pop
mov
pop
push
xchg
loope
xor
adc
lods
and
dec
fimull
dec
mov
cld
fistpll
cmp
dec
enter
in
mov
mov
push
sbb
inc
mov
mov
mov
push
nop
or
in
mov
int3
mov
ja
cs
incb
xchg
inc
mov
insb
pop
xor
dec
jmp
cmp
inc
les
stos
decb
into
test
push
mov
es
orb
outsl
lcall
or
jg
jne
lock
mov
pop
outsb
adc
push
iret
outsl
pushf
push
jmp
push
lods
xchg
lods
stc
cmp
sahf
jns
lret
stos
popa
push
fistl
mov
pop
adc
jnp
push
mov
inc
iret
xlat
fs
xchg
aaa
mov
xchg
jmp
inc
xabort
and
cmp
cs
push
clc
adc
stc
inc
cmp
push
stc
fucomp
pushf
ror
mov
push
jecxz
fidivl
cli
mov
xchg
flds
setp
mov
in
out
movsl
or
incl
negb
fsubl
shrl
hlt
movsb
dec
mov
cmp
and
sub
mov
daa
iret
xchg
imulb
aaa
sbb
stos
sahf
mov
icebp
shlb
ja
push
cmp
mov
subl
mov
xor
fwait
mov
std
lea
pop
xchg
test
dec
sti
cmp
and
ret
aam
dec
scas
js
xchg
nop
cltd
loopne
push
mov
loopne
adc
enter
lods
ljmp
jmp
pcmpgtb
lcall
mov
ret
cmp
jg
pop
movsb
addr16
sbb
push
movsb
adc
je
xchg
int3
fistpl
repnz
xor
int3
mov
hlt
jecxz
inc
add
mov
andb
loope
scas
dec
insb
sbb
push
sub
xor
icebp
cmp
popa
pop
cmp
call
and
fldcw
mov
push
sub
adc
sub
pop
out
dec
xor
mov
lret
and
in
inc
scas
mov
xchg
cmp
and
gs
pop
repnz
mov
jge
fisubl
sub
mov
xlat
sti
and
stos
and
xchg
xchg
les
jb
ljmp
adc
push
xchg
cld
loopne
fistl
mov
jae
pop
or
cltd
lret
scas
in
notb
and
cltd
pop
jl
cmpl
shl
push
out
insl
mov
inc
push
out
jl
fs
jb
add
dec
sti
popf
jns
or
repz
cli
or
outsl
xor
xor
mov
into
jno
mov
or
negl
insl
jo
xor
test
or
and
jns
inc
mov
movsl
ja
insb
int3
jge
inc
insb
repnz
xor
not
add
mov
pop
test
lock
push
push
ss
pusha
mov
sbb
imul
mov
push
jmp
cld
popa
imul
cmp
xor
sub
fbstp
mov
in
push
adc
sarb
out
ret
mov
into
in
jmp
in
add
rorb
mov
push
xor
and
out
dec
stos
mov
in
mov
adc
sbb
jmp
xor
ffreep
inc
lcall
add
pop
int3
lods
loope
xchg
sahf
insb
xor
mov
add
xor
xor
loop
test
pop
and
sub
repz
adc
mov
je
mov
xchg
push
sahf
cmp
sahf
cld
sti
andl
gs
mov
outsb
jae
out
pop
call
xchg
sbb
pop
push
sub
push
test
movsb
jns
fs
mov
mov
dec
aaa
xchg
push
pop
xlat
out
mov
xorb
push
out
lret
push
outsb
cmpsb
lods
push
jb
and
jb
lcall
add
or
cwtl
scas
movsb
cmp
jno
push
sbb
xchg
add
roll
pop
addl
cmp
ret
cli
add
push
push
sarb
mov
cli
test
sti
inc
test
or
jle
xor
cmc
and
mov
dec
icebp
sbbb
sbb
bnd
xor
pushf
push
imul
jns
jbe
lahf
in
push
mov
jg
sub
fld
movsb
jne
aam
push
test
enter
pop
das
mov
mov
adc
push
adcb
mov
add
add
jle
iret
stos
fs
mov
sub
push
sub
and
dec
sbb
mov
pushf
fiadds
fcomip
fisubl
in
jge
fistps
mov
jge
stos
mov
jmp
push
mov
movsb
pop
xorb
sbb
rcll
dec
dec
xor
loope
dec
aas
cltd
push
ja
ret
into
jl
mov
in
divl
inc
jns
jecxz
sub
xchg
adc
sar
add
test
xchg
mov
in
roll
sbb
inc
ret
in
and
inc
or
pop
in
jno
jo
out
push
and
lahf
mov
aad
sub
in
imul
incb
cld
mov
cmpsb
or
and
lock
mov
stos
cmp
mov
enter
pop
sbb
cmpsb
adc
xorl
movsb
repnz
call
pop
xchg
sti
dec
aam
in
inc
mov
inc
loope
lods
repnz
loopne
adc
xchg
mov
mov
dec
pop
jo
or
xlat
xchg
sub
mov
in
or
jnp
mov
jns
lods
scas
das
push
or
add
jp
pop
mov
cltd
cmp
xchg
ss
pop
jecxz
dec
shlb
in
rep
push
pop
cmp
xlat
sbb
mov
push
data16
shll
or
fwait
out
cmp
gs
sbb
jecxz
or
push
xchg
daa
xchg
push
sbb
mov
jns
mov
mov
pop
xor
cs
jo
or
pop
insb
lcall
xchg
repz
in
int
rcrl
adc
repz
in
xchg
shrw
and
or
jle
sub
xchg
gs
sbb
les
add
call
in
add
mov
popa
sub
inc
orl
jb
int3
lret
rcrb
xchg
cmp
sbb
in
daa
call
sub
pop
es
jne
xor
cmpsl
jecxz
sub
fucompp
jo
into
adc
mov
xchg
sbb
into
pop
mov
sbb
xchg
je
add
sbb
popf
out
jno
test
inc
popf
je
scas
xor
fcoms
aam
mov
pop
out
je
mov
sbb
jns
lret
or
add
out
lods
sbb
or
jl
aas
xchg
mov
test
inc
stos
pushl
dec
fwait
jno
dec
add
lods
cltd
pushf
jno
xor
xor
aas
cs
fs
pop
pop
movsl
jle
mov
int
aad
adc
ja
xor
sbb
sbb
or
fidivrl
sti
cs
arpl
or
dec
pushf
push
repz
push
pop
loop
cmc
push
repz
outsb
push
jne,pt
fs
dec
mov
sti
pushf
test
jmp
fdivrp
bound
inc
outsl
inc
lods
mov
les
adc
addr16
enter
add
and
jnp
insb
loop
sarl
les
sub
xchg
sbb
pusha
xor
inc
cmp
ds
pop
nop
mov
popl
pop
sbb
adc
loop
push
sbb
mov
mov
shll
mov
idivb
xor
pop
sbb
mov
mov
sub
xchg
sbb
clc
ret
push
mov
jno
test
lret
in
lods
and
mov
xchg
mov
jnp
in
push
or
js
jb
test
sbb
mov
test
jbe
push
daa
or
into
outsb
loop
adc
es
cmp
clc
or
bound
jnp
int
into
mov
jns
test
mov
in
les
fmull
xor
daa
lds
jle
loope
jnp
jge
icebp
test
mov
and
fwait
ljmp
sbb
repz
inc
xor
push
adc
rol
out
or
cmpsw
cld
jg
inc
clc
or
std
loop,pn
mov
sub
notb
imul
mov
push
andb
int
mov
and
int
sbb
loop,pn
into
ja
call
insl
cmc
inc
mov
rorl
jnp
or
pushf
or
fdivrl
jecxz
add
xchg
fcmovne
inc
mov
jecxz
daa
and
hlt
push
fldenv
xor
inc
mov
lock
sbb
dec
scas
imul
lret
mov
aam
mov
xor
scas
das
jae
mov
call
inc
leave
jl
mov
dec
sbb
jecxz
rcl
addr16
bound
imul
decl
and
cmp
mov
popa
pushf
inc
loop,pn
xchg
and
insl
dec
jmp
pop
or
jl
xchg
pop
inc
lcall
ret
andl
dec
movsl
gs
mov
push
fs
aam
mov
jmp
in
je
loopne
sub
pop
negb
and
daa
popa
lret
mov
mov
sbb
dec
push
add
inc
in
jp
mov
inc
cltd
insb
enter
xor
xchg
mov
stos
jb
pop
xchg
push
xchg
scas
mov
sahf
movsl
sub
push
outsb
loope
adc
or
lret
xchg
sahf
les
test
xor
inc
ljmp
into
sub
pop
xor
out
aad
lcall
in
notl
popf
out
sub
paddsb
xchg
fldl
repnz
xor
add
addl
and
mov
addl
arpl
cmc
into
jle
scas
inc
xor
or
adc
cmp
sti
in
outsl
xchg
push
or
lock
lahf
fstl
xlat
cld
sti
test
mov
xchg
cld
shll
jns
scas
sbb
sti
fwait
sub
jnp
stos
mov
bnd
xor
sbb
div
mov
mov
mov
lret
fistps
nop
inc
mov
repz
inc
popf
push
shrl
pop
movsl
cli
lea
add
dec
stos
inc
clc
adc
cltd
mov
pop
pop
insl
pop
std
das
js
in
cwtl
jle
in
stc
sahf
ss
cmp
pushf
mov
mov
movsb
mov
jo
mov
inc
pop
in
mov
add
pop
shll
mov
sbb
cmp
in
rorb
mov
frstor
movsl
push
jl
scas
inc
aaa
pushf
rorl
sub
insb
push
dec
das
lods
aad
int3
inc
and
xchg
jmp
ljmp
mov
jae
jno
jp
stos
test
push
fs
sub
mov
inc
push
adc
loop
int3
xchg
push
add
leave
cmp
and
cmp
mull
movb
insb
adc
mov
sbb
pop
clc
pop
dec
mov
lods
cmp
into
cltd
add
push
je
or
loope
fwait
out
or
imul
sub
div
fbstp
fucom
mov
xchg
fldl
sbb
imul
push
adc
and
add
popa
imul
add
enter
sub
dec
jp
push
pop
loope
rclb
adc
pusha
ret
jecxz
sub
pop
cmp
rcrb
dec
cltd
mov
cltd
or
shr
movsl
sub
cltd
fwait
or
sbb
xor
mov
jge
jo
xchg
popf
test
or
outsb
and
xchg
push
xchg
int
aaa
fadds
lods
bnd
and
cmp
cmc
pop
sbb
fsubp
push
dec
out
scas
dec
sub
in
pushf
mov
jae
sbb
pop
jp
add
push
cmpsb
xchg
cwtl
lods
ljmp
shrl
outsl
das
jle
jle
mov
rcrl
xor
inc
add
cwtl
ds
call
fcoml
fstpt
add
add
push
add
mov
test
pop
jl
cmp
in
cmp
pop
and
dec
push
clc
sub
push
pop
xchg
popa
call
out
outsb
in
pop
aam
or
orl
inc
inc
subl
xchg
mov
shll
cld
mov
stc
jne
dec
scas
jb
jge
mov
sub
js
sub
in
mov
out
test
out
enter
hlt
dec
add
or
inc
mov
adc
test
mov
outsl
mov
ljmp
xchg
and
xchg
pop
lcall
xor
cmpsl
or
cmpsl
rol
gs
mov
cli
mov
adc
adc
xor
pop
inc
or
insb
dec
adc
test
push
jp
inc
lds
sub
adc
push
and
pop
in
mov
mov
jno
mov
mov
icebp
andl
out
test
lret
dec
rcr
jmp
inc
mov
jb
jno
movsb
rolb
jp
mov
pop
cld
jno
insb
add
sbb
test
out
and
insl
cmp
pop
or
sbb
inc
xor
fimull
sub
mov
mov
rorb
js
lahf
es
insl
ret
ja
outsb
push
loopne
imul
and
fidivrl
cmp
add
cmp
mov
not
vandnps
jmp
out
orb
xor
enter
sub
cwtl
icebp
outsl
mov
ljmp
int
nop
cmp
cmp
xchg
mov
sub
jecxz
cmp
repz
fmulp
iret
pop
roll
mov
in
push
ror
add
pop
xchg
inc
dec
mov
push
popa
jbe
insb
test
jg
fdivr
and
dec
ljmp
outsb
clc
adc
test
push
clc
call
pop
ret
arpl
cli
leave
mov
ss
jmp
loop
push
inc
iret
sbbl
fsubrl
mov
ficompl
loop
clc
sub
mov
adc
data16
mov
and
hlt
push
shl
addr16
mov
push
cmc
adc
cs
jp
push
mov
push
popf
stc
je
mov
enter
mov
dec
cmp
aad
sbb
inc
push
mov
fadds
js
gs
movsb
adc
add
jnp
bound
sarb
cmpsl
push
sbb
mov
cmp
out
cld
push
xchg
pop
xchg
mov
addr16
sarl
add
jbe
add
aad
cmpb
xchg
imul
adc
nop
enter
fildl
ret
popa
lods
xlat
sbb
es
push
shl
mov
ret
xchg
imul
fdivr
stos
mov
cwtl
adc
gs
sub
push
push
mov
sbb
daa
cmp
sahf
jl
or
negb
imul
or
pop
adc
int3
jb
inc
sbb
out
aas
and
test
xor
mov
xor
jecxz
adc
sub
ret
sbb
xchg
xor
cmp
std
mov
in
into
xchg
push
stos
or
push
pop
xchg
aam
out
das
jb
andb
or
push
sbb
sub
aas
push
sub
sub
push
xlat
cmpsb
sbb
pushf
jbe
lcall
mov
jns
sub
pop
movsb
add
or
jno
orb
in
push
push
sbb
push
lea
mov
push
jnp
xchg
add
xlat
shlb
in
dec
inc
cld
in
movb
jmp
outsl
imul
push
sbb
notb
out
push
add
and
sub
jnp
dec
or
out
insl
nop
add
ljmp
or
aam
ss
pop
cs
rolb
das
sbb
cmpsb
cwtl
and
pop
dec
mov
jg
jns
xorl
mov
pop
iret
jg
bound
push
popa
fdiv
jecxz
rol
xor
inc
pop
shl
mov
std
xchg
inc
lret
int
dec
pop
or
add
mov
stos
push
dec
imul
pop
leave
das
fsubrl
inc
cmp
dec
add
loopne
mov
sbb
cmpsb
lods
xor
adcb
dec
sbb
enter
in
pusha
loopne
fwait
or
ja
xchg
ret
adc
mov
adc
repnz
sbb
xchg
out
mov
stos
ljmp
dec
fucomip
sahf
hlt
xchg
push
jge
xor
mov
hlt
lret
mov
hlt
enter
rorl
leave
cmc
push
dec
sub
push
add
fisttpll
push
jns
fsubs
idivb
shll
xchg
sbb
sbb
lcall
push
sub
sarb
mov
test
inc
in
push
xorl
rcr
xor
in
jbe
or
push
ja
mov
pop
inc
mov
cmp
jge
outsl
xor
sbb
inc
pop
shlb
mov
mov
insb
fidivrl
dec
cmp
cmpsl
adc
xchg
inc
leave
sti
lock
mov
enter
aas
push
cwtl
jae
mov
ret
ljmp
lret
arpl
cmc
jne
jmp
ja
xchg
int
xchg
loop
enter
cmp
repnz
mov
xor
cmpsl
das
sbb
cmpsb
or
pop
adc
bound
cmp
loop
int3
lcall
jne
iret
lods
and
inc
xor
jns
fisttpl
jmp
jo
jge
sbb
dec
mov
int3
inc
cli
add
outsl
xchg
xor
rclb
in
push
mov
or
mov
shl
out
cmpsb
stc
xor
lds
mov
push
add
sub
push
in
xor
push
mov
repnz
test
xor
cltd
outsb
and
icebp
xchg
push
dec
push
lret
dec
cld
xchg
call
dec
mov
ret
dec
rcll
mov
sahf
cmp
cs
inc
mov
jp
aam
add
les
and
jo
pop
xlat
shr
xor
shrb
ds
mov
push
or
data16
addr16
sarb
lock
add
adc
sub
push
sbbl
scas
into
mov
add
out
mov
imul
add
ljmp
xor
pop
pop
outsl
pop
ss
enter
shlb
lock
jnp
add
mov
in
add
mov
inc
adc
cli
outsb
pop
loop
fldenv
and
jnp
andb
and
shlb
adc
sub
mov
jle
loop
xchg
test
cmpsl
adc
pop
jns
cs
xchg
inc
out
dec
pop
ljmp
sbb
cmp
push
push
push
mov
negb
aam
fucomi
jl
push
pop
les
sti
mov
mov
add
std
jnp
flds
sbb
aas
pop
pop
lcall
out
popa
test
jl
sub
add
insb
out
in
insb
mov
mov
sub
popa
aad
xor
add
dec
xor
pusha
cmp
jmp
mov
sbb
or
push
jnp
lods
cmp
xchg
mov
lods
pop
adc
mov
cmp
push
sub
mov
and
fdivs
mov
cmc
mov
pop
cmp
sbb
add
out
and
addr16
dec
jmp
loopne
leave
or
sub
rorl
lahf
pop
aad
mov
les
add
pop
xchg
mov
cld
cs
cmp
cmp
cmpsb
mov
push
mov
int
cmp
pop
jae
dec
sub
sbb
mov
xchg
icebp
aas
rolb
and
pop
loope
and
cmpsl
adc
jno
xor
and
outsl
xchg
fwait
dec
icebp
andl
mov
mov
lret
mov
jg
sti
xor
lea
pop
and
fstp
dec
sub
fimull
cmp
popa
inc
loope
iret
test
xchg
out
cmp
and
xor
icebp
repnz
in
pop
shlb
sbb
dec
pop
or
shlb
jmp
mov
and
or
or
jecxz
push
pop
push
js
cmc
cmp
popa
jmp
xchg
sahf
pop
lahf
std
mov
aaa
jecxz
xchg
insb
or
les
mov
jge
dec
ret
jne
popf
stos
or
sbb
sbb
cwtl
leave
mov
mov
pop
cli
ja
xchg
mov
push
adc
adcb
or
jp
mov
sub
lods
jns
dec
dec
xchg
fcomi
mov
push
ret
sbb
lods
dec
push
push
lcall
sbb
mov
sbb
int
pop
cmpsl
and
imul
and
lods
das
jne
lret
lret
xchg
inc
aad
cwtl
pop
xor
push
lds
lods
add
data16
cs
in
dec
and
fsqrt
mov
cld
cmpsb
or
jecxz
mov
inc
dec
add
inc
xorb
jecxz
jo
into
hlt
adc
sub
int
mov
lret
jge
fmul
inc
xchg
inc
leave
repnz
shrl
fsub
push
jnp
mov
jnp
inc
clc
loop
lods
sti
sahf
sbb
sub
dec
jl
mov
sahf
cmpsb
xchg
movsl
mov
mov
sub
mov
cli
sub
and
lock
xlat
sahf
or
xor
arpl
xor
loop
jnp
jecxz
insb
adc
mov
ja
or
stc
sbb
rol
aaa
pop
test
or
add
dec
cltd
lds
sarb
addr16
mov
aas
filds
and
ret
das
ja
rorb
adcb
dec
xor
dec
cmp
jne
sahf
dec
jo
jecxz
push
in
pop
jmp
popa
xchg
push
aaa
loopne
dec
inc
inc
fsub
insl
pop
lret
xchg
or
or
add
das
xchg
mov
or
clc
cmp
cmpl
or
gs
or
stos
jle
pop
adc
sub
and
cld
inc
sbb
mov
sbb
out
sbbl
add
outsb
div
cmpsb
dec
sbb
in
mov
mov
push
push
xor
jecxz
sbb
xor
inc
fwait
jl
or
loopne
stos
fs
leave
scas
sbb
add
sub
sbb
ret
mov
loop
xchg
int3
jle
dec
inc
sarl
add
push
xchg
sub
push
and
stos
and
cmp
incb
dec
jne
data16
leave
rcrb
cwtl
jp
ljmp
aas
ljmp
cli
mov
sub
xlat
mov
test
pop
push
minps
mov
xlat
dec
ficompl
fsts
mov
lods
outsb
xor
jbe
shr
sub
cmc
xlat
arpl
cwtl
fsubl
lea
push
pop
out
inc
jno
adc
imul
adc
cmp
mov
mov
mov
mov
js
mov
bound
fiaddl
addr16
setnp
mov
fstpt
mov
loopne
or
xor
jne
lret
cmp
pop
out
ret
mov
lahf
or
mov
jnp
push
out
pop
jns
cmp
dec
popf
cmpsl
lods
mov
adc
mov
es
push
or
inc
bound
sub
jmp
in
sub
inc
lahf
inc
jp
enter
int
mov
push
inc
jb
push
stos
dec
test
ret
mov
fwait
mov
mov
cmp
cmp
popf
cmp
sub
aad
ret
imul
mov
jb
loopne
pcmpgtd
pop
or
call
pop
inc
add
bsr
sub
fld
mov
or
ffree
shrd
cmpsb
cmp
mov
fs
lds
or
cmpsl
iret
and
mov
scas
popf
mov
mov
lods
push
jle
jmp
mov
add
or
cmpsb
push
nop
mov
mov
add
add
hlt
jae
sub
xor
das
shll
out
bound
mov
in
inc
jp
dec
and
ss
adc
add
sbb
bound
fistpll
cmpsb
mov
sbb
cmc
lahf
jle
ja
dec
jnp
mov
fstpt
dec
fnsave
out
in
fisttps
dec
xor
cmp
jmp
scas
fmul
xor
xchg
fwait
mov
je
out
push
aam
loopne
pop
js
push
jge
pop
loop
cli
stos
leave
xchg
lods
cmp
cwtl
icebp
stc
mov
leave
mov
cwtl
jno
cmp
jnp
xchg
pop
loop
push
and
xor
pop
imul
sahf
ss
pop
sub
mov
cwtl
not
out
pop
test
add
std
jo
cld
or
mov
repnz
xor
mov
cmp
inc
pop
xchg
ficomps
jecxz
push
imul
sub
jge
push
jno
cs
and
ret
add
shll
jmp
es
cmpsl
or
test
aaa
arpl
add
mov
push
pop
xchg
pop
inc
mov
fs
or
pop
int3
mov
mov
sti
sbb
sub
popa
dec
in
jl
mov
adc
lret
sub
push
sti
test
repz
add
and
gs
mov
adc
and
scas
faddl
sub
jb
movsl
ljmp
in
aad
push
pop
inc
add
cmp
into
push
push
loope
add
cmp
dec
fildl
imul
cmp
lods
fistl
scas
xor
loope
ljmp
movsb
push
loop
add
mov
jge
xchg
gs
add
shr
xor
push
movsb
cmp
popf
ret
cwtl
ljmp
push
and
adc
pop
ljmp
push
mov
loopne
lret
bound
and
ret
adc
and
inc
mov
sahf
in
cmpsb
insb
dec
inc
dec
loop
pop
adcl
nop
and
enter
mov
subb
movsb
pushf
jp
aam
loope
pop
rcll
jb
adc
cmp
insl
pushfw
stos
xchg
sub
xor
dec
jbe
push
adc
adc
fnsave
pop
xor
imul
adc
repnz
mov
fldl
jecxz
and
int3
mov
and
outsl
pop
testb
aam
cli
jae
test
add
mov
add
ret
cmp
fldcw
pop
daa
lds
lock
movsl
cmp
rcrl
popw
insb
push
lret
xchg
or
rcl
add
arpl
out
notl
and
es
pop
xchg
cmp
scas
fstpt
fdivs
push
mov
iret
pop
dec
lea
sbb
jge
cmp
test
and
mov
add
sub
movsb
shlb
std
jo
leave
je
xorl
mov
int3
and
mov
addb
pushl
mov
test
push
mov
pop
imul
jnp
xor
std
sub
cmovns
push
adc
cmpsl
stos
daa
mov
pop
inc
jg
pop
adc
fs
jg
lock
push
loope
dec
xchg
cmp
mov
jge
cmp
inc
test
test
loopne
lcall
in
jns
lods
jle
fnsave
and
lods
jb
inc
lock
add
test
mov
jecxz
jg
mov
inc
fmul
or
lcall
sub
into
push
cmp
daa
jle
adc
scas
or
testb
les
jbe
push
cs
jmp
mov
jo
jnp
sbb
je
in
xchg
and
sbb
adc
add
aad
loope
int3
mov
ret
lahf
jo
int
movsb
jae
pop
and
je
flds
rcr
pop
jae
cmp
andl
mov
scas
sti
cmp
pop
xor
xlat
lock
pop
lcall
cmp
xchg
cmp
loopne
aas
jnp
sub
add
push
roll
call
andl
push
push
ret
repz
add
fisttps
lahf
out
js
mov
mov
ss
pop
ss
lea
je
sbb
push
xchg
jge
pop
sti
mov
adc
clc
ud1
repz
pop
test
movsb
and
lods
popl
test
call
add
jno
and
fs
cmc
mov
pop
sbb
test
stos
dec
or
mov
adc
inc
bound
loop
mov
aas
pop
arpl
jg
setns
fldcw
test
arpl
xor
aam
arpl
mov
push
jmp
or
cld
dec
mov
push
pop
aad
and
and
cwtl
insl
test
je
bound
xchg
xchg
adc
mov
and
sub
mov
ds
xor
test
xor
xor
push
sahf
in
mov
shrl
mov
je
out
mov
push
loope
aaa
xchg
push
jb
xchg
pop
sar
insl
inc
jecxz
xchg
fisttps
lods
mov
outsb
pop
lcall
fists
leave
cmp
xchg
cmp
mov
pop
andl
fcomps
jns
clc
add
adc
subb
lods
lahf
push
pop
sub
lds
scas
mov
sub
nop
scas
sahf
in
jl
ud0
jmp
jle
scas
pop
push
in
mov
int
iret
mov
jae
aaa
jbe
cmpsl
or
test
adc
mov
or
fidivs
test
bound
and
es
aaa
inc
mov
dec
mov
daa
jl
push
cmpsb
jmp
dec
sbb
mov
gs
mov
sarb
mov
inc
lea
fwait
fldt
cmp
outsl
sub
jecxz
inc
jne
adc
ds
rcr
or
test
insl
mov
mov
mov
add
sbb
or
or
push
hlt
hlt
out
and
cmp
ja
jne
cld
rcll
cvtps2pd
or
ss
in
repz
ljmp
in
push
jle
cmc
insl
leave
add
sti
test
jg
ret
in
inc
outsl
js
add
aam
dec
jbe
repnz
mov
scas
mov
in
mov
lods
mov
into
pop
push
or
jbe
sub
jmp
and
popf
xchg
std
popf
push
inc
mov
sub
popf
mov
shll
mov
shrl
test
ret
cmp
hlt
mov
mov
hlt
scas
cmp
repz
sar
mov
movl
mov
add
adc
mov
jb
arpl
lds
xor
cmp
es
sarl
adc
outsl
cmp
in
or
insl
dec
lock
cmp
and
aam
ljmp
out
sbb
loope
jo
and
negl
fucomp
jns
cmc
jne
and
testb
orl
xchg
into
fildl
sub
fdivl
mov
ds
mov
pop
ret
inc
push
into
mov
cmp
sub
push
cmpsb
jmp
inc
add
lock
leave
mov
pop
mov
or
or
scas
outsb
adc
outsb
mov
lock
sub
adc
dec
sub
jle
lcall
loope
add
pushf
sub
shl
jns
sub
test
bound
rcll
jnp
jno
xor
mov
insb
sbb
pop
insb
sbb
adc
or
jnp
fimuls
jge,pt
sbb
jnp
pop
xchg
or
int3
push
pop
mov
nop
xor
ret
in
xchg
ret
ljmp
testb
or
sbb
arpl
xlat
push
into
push
out
adc
int3
mov
cmp
xchg
cmpb
bnd
sbb
rcrb
je
inc
subl
pop
fs
or
jns
cli
in
pushf
sbb
out
xchg
or
push
mov
or
cs
push
shrb
insb
cmp
inc
cmp
push
fcomp
icebp
hlt
cmpb
adc
rolb
in
cmp
xchg
icebp
test
xchg
test
fisubl
push
pop
out
jb
cmp
mov
and
push
mov
data16
add
dec
arpl
aam
sbb
test
int3
mov
decl
lods
adc
push
cmp
out
push
pop
xchg
jge
jno
mov
xchg
ds
and
fdivrs
push
cmpsb
loop
repnz
stos
sbb
sub
pop
in
cmp
gs
popa
addr16
out
les
mov
xor
outsb
leave
or
dec
lock
push
dec
fisttpll
add
ret
rcrl
loop
into
arpl
sub
cwtl
mov
dec
adc
dec
pusha
dec
fistps
mov
clc
fldt
idivl
jnp
sarb
mov
mov
mov
out
std
sbb
xchg
inc
jbe
js
xchg
setl
scas
push
push
stc
inc
aas
jns
jge
mov
push
and
inc
or
daa
mov
mov
sbb
push
push
sti
ljmp
lock
imul
dec
test
popa
or
xlat
and
imul
cmc
or
adc
xor
dec
sub
cwtl
out
sub
pusha
je
cs
add
sbb
popf
and
xchg
xorl
mov
imul
adc
dec
das
sahf
fdivrs
sub
hlt
int3
int3
cmp
gs
fwait
push
or
cmp
add
xchg
mov
mov
mov
fnstsw
xor
lods
mov
cli
shrl
js
pop
shrb
xor
or
loop
rclb
fwait
xchg
lods
sarl
xor
int
mov
div
pop
adc
xchg
mov
jmp
xchg
repnz
outsb
insb
das
ret
scas
out
adc
sarb
jns
std
and
cmp
push
movsl
inc
addr16
jbe
adc
loope
dec
adc
mov
mov
int3
jo
and
mov
imul
aaa
test
xchg
orb
mov
push
fsubrs
mov
push
pop
pushl
ret
push
inc
and
out
fwait
repz
imul
insl
push
mov
mov
std
notl
jno
cmp
lods
jp
out
int3
cli
push
inc
jle
and
mov
fmul
fcomip
je
mov
adc
jp
gs
dec
loope
adc
subb
sbb
xor
aad
fldl
or
std
lods
bound
mov
jp
xor
aad
jle
dec
or
fsubr
pop
lcall
pop
test
or
cmpsb
push
pop
push
dec
imul
and
dec
and
cld
adc
js
xor
shrb
sub
testl
call
add
jae
push
outsb
adcb
shl
jae
sub
pop
mov
jg
jecxz
add
enter
sub
xlat
push
test
or
andb
cltd
and
add
cmc
cmp
or
enter
faddl
jecxz
outsb
sbb
aas
xchg
pop
test
popa
lret
xorl
dec
sti
in
bound
add
cmp
xchg
shll
aam
stc
xchg
push
push
rcrl
or
imul
mov
mov
jae
cmp
mov
and
clc
dec
dec
insb
jae
data16
dec
repz
xchg
mov
and
ja
mov
call
inc
or
adc
push
arpl
jp
jg
push
inc
fildll
ljmp
and
push
xor
rorb
jmp
sbb
cmc
sub
xchg
jbe
xor
mov
arpl
add
inc
cli
aas
cmp
push
add
lds
iret
pop
arpl
lahf
lods
push
adc
aam
stc
dec
pushf
cmp
adc
push
out
xor
arpl
outsl
mov
sbb
aas
arpl
and
std
push
cltd
sbb
cmp
leave
xlat
pop
test
arpl
rcll
xor
enter
push
dec
arpl
repnz
xchg
dec
int
fiaddl
pop
fst
in
xchg
push
cmpsb
mov
cmp
pop
cli
insb
push
add
std
dec
mov
testl
jns
mov
sbb
adc
or
cli
fistl
push
jl
pop
inc
and
testl
dec
adc
test
or
fcoml
addr16
fs
adc
and
sbb
enter
cltd
dec
or
push
scas
jmp
clc
dec
sbb
and
in
add
inc
adc
cs
lret
jecxz
movsl
mov
das
xor
sub
ja
push
pop
mov
and
push
sub
pop
das
jo
outsb
dec
or
push
pop
icebp
cwtl
clc
icebp
mov
ds
push
scas
test
cmp
jp
enter
jo
xor
adc
stos
repz
mov
lock
ret
jo
jno
and
data16
mov
leave
fstpt
push
xchg
mov
bound
in
cwtl
mov
cltd
adcb
sbb
jg
cmp
lret
loopne
cmp
ret
inc
fsubp
push
lea
stos
mov
bnd
xchg
mov
dec
and
pop
pop
lods
or
test
sti
mov
repz
jg
repz
mov
xchg
adc
or
mov
pop
xchg
clc
lock
mov
testb
or
dec
mov
pop
jmp
mov
lahf
imul
or
or
test
or
ja
add
pushf
dec
sti
call
sub
in
fisubrs
jmp
push
pop
jns
jb
in
fmull
aam
in
push
xlat
cmp
or
pop
push
decb
aam
cltd
jg
ret
mov
cmp
push
cmp
jmp
mov
rol
push
xchg
pop
cmp
inc
dec
or
cwtl
ret
cwtl
lahf
das
inc
mov
cltd
fcmovnb
inc
cmp
adc
xlat
cltd
jg
jle
and
pop
nop
adc
adc
sbb
pusha
cmp
clc
jns
jns
test
std
test
fimuls
push
adc
out
sbb
daa
sbb
jecxz
pop
sub
lcall
shl
sub
sbb
cmpsl
sbb
pop
add
mov
pop
out
testl
mov
cmp
int
adcl
test
fsts
test
enter
or
loop
mov
shlb
cmp
bound
mov
mov
popf
mov
call
add
movsl
hlt
lods
les
jmp
jg
lcall
stos
addr16
in
jmp
divl
ret
mov
popf
mov
mov
aaa
jl
int
cs
popa
pusha
mov
outsl
aas
mov
mov
pop
mov
sub
int
fs
push
negl
inc
push
bound
and
pop
hlt
int3
adc
sbb
pop
xor
and
cmp
mov
mov
adc
sub
jmp
sub
or
inc
cld
scas
and
add
popf
cmc
subl
stos
cmc
pusha
ret
mov
xor
sbb
inc
cmp
push
andl
hlt
mov
shll
pop
in
imul
add
xor
iret
out
dec
icebp
pop
fcoml
js
sbbl
arpl
mov
jge
inc
add
jl
and
sub
das
mov
in
mull
and
jl
lds
rcl
in
xor
xchg
dec
and
mov
jnp
cwtl
and
adc
sbb
push
outsl
inc
lcall
mov
mov
cmp
movsl
xchg
jne
add
outsl
shll
lock
pop
inc
sub
sub
cwtl
lods
jmp
shlb
hlt
scas
fwait
dec
scas
sub
outsb
add
xchg
and
stos
shlb
jle
xor
mov
cld
out
aad
jle
ljmp
push
fcmovu
mov
clc
xchg
push
ret
xchg
mov
push
pop
loop
jbe
cmp
inc
shlb
xchg
xor
das
or
xchg
ret
cld
mov
push
xchg
xlat
or
pop
pop
scas
jmp
ds
fimull
pop
lahf
adc
mov
sub
popfw
jle
dec
icebp
pushl
ss
inc
or
ljmp
pop
pop
dec
sbb
push
jl
hlt
fbld
sub
dec
xor
dec
fs
iret
mov
test
outsb
or
add
push
push
dec
insb
add
ret
inc
out
push
xchg
test
cmpsb
jbe
rorb
adc
mov
sahf
jg
cmp
xlat
add
add
sbb
inc
xchg
mov
xchg
pop
adc
stc
lahf
loop
cmp
xor
pop
or
rep
cmp
fbld
adc
mov
push
in
add
icebp
das
sub
js
or
xchg
pop
cmp
push
ljmp
or
mov
inc
inc
push
sub
dec
out
subb
imul
iret
int3
push
repnz
cmp
std
fistps
arpl
lret
mov
inc
fiaddl
xor
loope
pop
roll
mov
cmp
stc
sub
push
jecxz
imul
jmp
xchg
ljmp
js
pop
mov
xchg
xchg
adc
sbb
or
enter
inc
lret
and
xchg
jg
fs
jge
mov
addl
cmpsb
push
or
loop
mov
cld
cld
sbb
jbe
xor
sbb
add
out
gs
in
xor
enter
push
cltd
add
jmp
cmc
mov
dec
xor
xor
icebp
js
into
xor
xchg
cli
loope
inc
push
dec
sub
pop
mov
outsb
insb
jne
jl
xor
ds
adc
inc
push
pop
cli
or
je
outsb
sbbl
xchg
push
lock
add
fdecstp
out
popf
out
loop
mov
jb
push
adcb
dec
stos
and
and
arpl
fistpll
cmpsl
fprem1
stos
fsubrs
mov
sub
les
in
mov
fidivrs
pop
inc
add
dec
and
sub
jecxz
and
add
xor
mov
mov
jne
lea
fsubl
imul
movsl
xor
imul
stc
jmp
dec
mov
sahf
js
sbb
ds
inc
pop
ror
xor
mov
sub
jl
je
cmp
out
das
mov
outsl
jbe
xchg
mov
xchg
inc
push
xchg
jecxz
push
xor
push
cltd
imul
lret
xchg
mov
jp
fcmovbe
and
mov
stos
es
in
inc
in
mov
out
test
fsubrs
jbe
dec
dec
jno
sbbb
in
pop
xchg
movsl
jne
loopne
xor
and
inc
stc
sbb
add
sbb
je
in
sbb
jno
xchg
cmpsl
aam
fidivrs
test
es
pop
jns
mov
fldl
sbb
mov
outsb
pop
mov
in
jo
sub
test
adc
scas
lds
lret
adc
sahf
loop
call
stos
mov
pop
cmpsl
add
mov
dec
mov
adc
sbb
push
add
lahf
mov
shrl
scas
xchg
stos
cs
dec
mov
mov
movsl
dec
sub
ja
inc
pop
ss
les
jns
inc
scas
mov
mov
bnd
fildl
or
fdivr
push
jg
inc
xchg
or
adc
pushf
adc
sbb
mov
cmc
pop
cmc
int
xor
lds
cld
jbe
jle
and
je
cmp
inc
mov
mov
or
out
insl
mov
jecxz
rolb
insb
mov
insb
lret
inc
xchg
sub
xor
add
hlt
adc
mov
mov
mov
sbb
loope
hlt
inc
in
mov
or
pop
lods
outsl
sbb
add
sub
pop
adc
jns
iret
dec
xlat
bound
inc
mov
jge
sti
cmp
add
mov
popa
out
sahf
or
inc
add
in
lret
gs
movsl
cmc
jge
roll
mov
xor
je
iret
nop
nop
adc
mov
dec
pushf
sbb
cmp
int3
out
lds
aaa
mov
push
sbb
push
aad
cmc
push
xchg
insb
pusha
ss
mov
mov
and
push
ljmp
sbb
mov
movsl
in
xor
das
mov
shr
cmc
daa
pop
gs
cmp
insb
jp
sub
mov
icebp
xorb
insl
rcr
out
movsb
xor
push
loope
outsb
adc
and
mov
das
scas
mov
mov
test
inc
xchg
test
jmp
ret
inc
sbb
aaa
xor
or
cmp
xchg
cmp
xor
mov
push
jbe
ror
cwtl
mov
dec
jecxz
push
jne
and
outsl
leave
filds
mov
sub
mov
dec
pop
dec
das
test
add
inc
data16
fcmovnbe
mov
xor
push
test
or
cmp
mov
cmp
rcrb
imul
cmp
ffree
push
imul
cmp
xchg
out
movsl
test
rcr
cmp
xchg
inc
dec
and
rcl
ss
scas
mov
shrb
fdivrl
test
cmp
mov
jne
aaa
pop
imul
xchg
js
movsb
test
cs
dec
test
cltd
add
je
adc
jne
mov
ret
les
mov
xchg
xlat
ss
mov
imul
xchg
subb
xchg
mov
aaa
inc
mov
sub
pop
jg
jae
subb
pop
sbbl
pusha
mov
test
call
push
sbb
add
lret
mov
push
cmp
cwtl
mov
cmp
out
sbb
dec
icebp
addl
mov
das
jbe
mov
lods
sbb
test
and
jmp
and
lret
add
aad
and
cld
aaa
sub
push
cli
xchg
shrl
mov
mov
jl
mov
inc
lret
pop
frstor
lahf
xchg
shrl
xchg
jns
adc
pop
push
jecxz
lret
lcall
dec
and
dec
into
shlb
sti
pop
cmp
clc
jb
xchg
jne
cmpsl
fcmovu
adc
out
mov
subl
push
lcall
and
cwtl
shrl
push
push
and
sub
in
and
gs
scas
das
dec
sub
pop
xchg
jmp
inc
and
ss
bound
rcr
fldcw
subl
lock
arpl
jno
add
fdivrs
cltd
rcr
adc
je
scas
sbb
popf
jo
sbb
cmp
lods
jmp
mov
popf
jg
jnp
mull
mov
xor
inc
adc
call
iret
lcall
shlb
mov
rdtsc
pop
bound
loop
adc
push
inc
paddd
cmp
nop
loop
je
loop
jl
mov
mov
fidivrs
mov
mov
hlt
test
cmp
sbb
xlat
add
lret
cmc
test
inc
stc
mov
mov
xchg
sahf
movsl
in
pop
daa
push
leave
rolb
add
rolb
jp
push
mov
sub
push
sub
mov
mov
sub
adc
lds
jb
add
push
mov
mov
jmp
loope
mulb
cli
hlt
inc
aaa
ljmp
push
mov
jbe
jo
roll
add
xor
or
jno
mov
push
subb
loopne
push
adc
add
ret
jns
mov
push
bound
fnsave
xor
pop
push
ljmp
ds
repz
movsb
mov
fdivrl
call
xchg
ljmp
stc
cld
cmpsl
imull
mov
les
lret
ljmp
mov
lods
stc
xor
dec
jns
aad
xchg
pop
das
popf
lods
decl
movsl
inc
ss
adc
cmp
dec
cmp
mov
mov
stc
sbb
push
mov
sbb
ljmp
daa
push
roll
hlt
js
fidivl
xchg
jg
test
jns
dec
in
jge
popf
sbb
notl
ret
pop
cwtl
push
mov
push
std
dec
mov
mov
or
sub
mov
jp
inc
arpl
ffreep
and
dec
dec
push
repz
cmpsb
es
divb
cmp
lahf
xchg
pushf
add
data16
lock
pop
popf
mov
sar
mov
int
xor
ljmp
lock
add
pop
push
cs
cmp
sbb
add
cmpsl
jp
aas
pop
xlat
lret
sbb
push
ret
adc
hlt
mov
mov
mov
cli
pop
push
xorl
push
dec
adc
xor
aam
pop
cmp
push
dec
adc
jg
in
cs
sub
popa
xchg
cmpl
pop
cmpsb
push
xor
cmpsb
and
adc
es
and
mov
in
sub
inc
push
push
mov
inc
imul
arpl
ljmp
push
hlt
mov
or
pop
add
push
inc
leave
sub
pop
mov
fildll
stos
popa
sti
addr16
xchg
insl
dec
int
mul
sbb
jecxz
push
adc
pop
add
rclb
cmc
mov
test
fchs
push
orb
cmp
fidivl
xchg
adc
icebp
sub
fdivs
sub
pop
lahf
jmp
icebp
repnz
sub
adcl
jmp
scas
aam
sbb
xor
ss
xor
dec
scas
ljmp
dec
jmp
inc
jnp
lcall
add
pop
out
pop
jg
push
sub
fisttpll
pop
outsb
add
fldt
cwtl
lret
mov
int
jbe
jbe
add
sub
mov
push
jbe
jnp
data16
je
mov
pop
loopne
jecxz
stc
in
sahf
cltd
daa
out
test
ja
lcall
or
jle
inc
jl
sub
out
stos
jo
cmp
xlat
clc
mov
jne
inc
or
jl
mov
insl
es
add
and
push
dec
stos
mov
std
pop
les
jmp
xchg
int
add
mull
enter
scas
adc
lcall
dec
adc
and
push
xchg
mov
push
pop
push
jnp
ljmp
xor
add
xchg
jle
mov
scas
push
cmp
pop
push
int
add
movsb
out
add
into
add
hlt
inc
iret
fcmovu
mov
jne
mov
jb
das
adc
and
mov
push
inc
pop
je
insl
xor
or
outsl
jno
dec
data16
movntps
rorl
xor
or
sbb
fnstcw
mov
shrl
enter
xlat
movsl
loopne
popa
shrl
jecxz
mov
movsl
out
xchg
pop
imul
cs
jb
add
inc
fldt
or
or
ja
mov
push
outsb
jp
push
ret
and
aam
add
aas
frstor
shl
dec
fisubrs
call
out
push
add
inc
and
jl
std
fldt
mov
loopne
inc
xorl
int
es
aam
jge
cmp
jne
imul
xor
adc
out
pushf
stos
testb
aas
mov
and
cmpsl
fists
adc
pop
loopne
ss
mov
in
rclb
jnp
push
adc
xor
icebp
cmp
cs
xchg
cmpsl
cmpsl
in
mov
xorb
pusha
test
adc
les
insl
fs
mov
lea
cmp
dec
dec
fdivrl
icebp
mov
fcmovne
loope
daa
mov
mov
inc
pop
pop
xor
mov
jge
sub
mov
xchg
adc
jbe
mov
mov
push
fdivp
jae
aaa
loope
jle
lds
jmp
sub
cs
enter
es
or
int3
movsl
sbb
cmp
fs
xor
mov
lods
jne
or
adc
or
popf
jbe
test
xchg
and
pop
xlat
lock
lret
imul
stc
inc
test
std
xor
sub
pop
loopne
adcb
xor
aas
dec
xor
cmp
jo
xchg
cmp
mov
sub
fldl
rorb
aaa
jbe
cltd
mov
xor
repnz
push
decb
and
stos
shll
and
xor
or
in
out
mov
fildll
inc
jle
mov
ret
xor
enter
cld
lods
jle
mov
out
dec
adc
pop
pusha
dec
lock
adc
int
or
inc
inc
jmp
cmp
test
xlat
pop
aaa
js
lret
mov
push
lcall
jge
cmpsl
lahf
fucomi
ja
dec
dec
ss
lcall
push
lret
dec
dec
or
lods
scas
add
mov
add
call
and
test
call
in
pop
mov
push
jno
fwait
lea
xor
jmp
out
imul
loopne
xchg
or
scas
sub
xor
fldenv
jno
dec
ss
cmp
lret
test
dec
push
add
outsl
dec
push
in
cli
scas
pop
pop
xchg
and
dec
std
inc
mov
mov
popa
cmpsb
les
sub
inc
pop
test
cmpxchg
adc
shl
int3
adc
mov
roll
mov
pcmpeqb
adc
lret
and
loop
cli
test
aaa
jb
sub
or
jne
adc
xchg
aam
pop
mov
fwait
dec
data16
xchg
out
ja
popa
out
jmp
jbe
push
mov
xor
mov
pop
mov
mov
inc
add
imul
push
nop
out
jl
fcomps
js
pop
out
jae
pop
lods
dec
sub
sbb
mov
enter
or
mov
cli
cmp
pusha
popf
sbb
jge
outsl
pushf
jl
dec
pop
mov
sbb
int3
pop
sarl
or
rorb
out
and
xor
mov
clc
in
fistpl
mov
jbe
andl
int3
in
mov
jbe
mov
pop
sbb
fs
mov
ljmp
lahf
or
in
dec
push
sahf
and
pop
and
movsb
ret
and
and
es
mov
adc
lods
dec
push
dec
ret
fs
stc
icebp
cld
js
das
mov
daa
std
jmp
insl
imull
loop
and
adc
rolb
or
xor
push
cmp
push
fcom
rcl
or
mov
pop
mov
sbb
xor
cmp
mov
out
cmp
inc
test
lea
lods
push
repz
xchg
push
adc
xchg
cltd
cmpl
outsl
inc
jnp
jge
cmp
push
adc
inc
jmp
add
mulb
cli
cmp
sub
popa
xchg
jle
push
sbb
cmp
int
mov
xor
cmp
int
dec
test
push
push
aad
sub
fsubs
popf
repz
fcompl
or
and
loopne
sub
mov
xorl
das
roll
jl
cwtl
fnstenv
jp
push
hlt
jo
mov
mov
sub
xor
cmp
xchg
xor
imul
jl
cmpsb
movsb
ds
jle
fsubs
mov
add
das
dec
cmp
stos
pop
adcl
addr16
or
dec
inc
outsb
movsl
dec
inc
dec
xchg
mov
adc
or
aam
jno
idivl
icebp
pop
shll
js
test
jle
mov
sub
mov
xor
cltd
test
jmp
pop
and
mov
inc
rorb
in
sbb
adc
jmp
cmp
pushf
hlt
add
jmp
out
xor
sub
mov
adc
dec
cltd
pop
fdivrs
into
bound
lds
imul
adc
or
xchg
int
dec
jmp
ret
loope
mov
adc
arpl
sub
sbb
mov
mov
stos
aam
mov
cwtl
outsl
mov
cmp
adc
push
push
fucom
push
ljmp
loop
arpl
std
out
inc
iret
jne
and
sbb
pop
mov
cmp
and
imul
sbb
nop
arpl
jle
jno
out
lahf
sub
jle
cmp
adc
jl
je
enter
rcrl
add
pop
xlat
mov
mov
mov
pop
mov
pop
aas
loopne
mov
sub
mov
mov
fwait
xchg
jle
xchg
inc
mov
mov
es
cs
mov
ds
clc
fcoms
roll
leave
adc
push
aad
xor
sbb
inc
out
scas
pop
or
xor
test
sahf
ds
das
dec
dec
xchg
hlt
ret
xchg
dec
add
scas
dec
sbb
mov
cmpsb
jnp
movb
call
aaa
dec
in
rcr
mov
sub
adc
sti
pop
inc
mov
cwtl
sbb
dec
and
and
lcall
or
hlt
out
cmp
mov
sbb
add
pop
sbb
ljmp
and
insl
dec
mov
xchg
cmp
or
cmp
cmp
test
mov
negl
or
data16
icebp
inc
or
movsl
loope
mov
jbe
fcom
xor
test
mov
dec
dec
mov
push
icebp
rcrl
or
xchg
and
pop
xchg
ja
cwtl
in
inc
push
aas
mov
lea
out
out
jnp
in
cmc
aad
ja
in
add
push
in
mov
lret
push
imul
jae
adc
std
nop
out
mov
out
insb
fistps
xchg
scas
das
xor
xor
es
mov
pop
push
mov
mov
fldt
mov
in
mov
mov
mov
iret
adc
adc
mov
daa
xchg
and
scas
js
pop
jecxz
pop
icebp
int
loop
call
adc
mov
sub
jno
cmp
sbb
dec
sbb
mov
mov
mov
addr16
jl
icebp
js
sbb
sahf
mov
outsb
shl
xchg
in
sbb
int3
sarb
jecxz
mov
adc
jnp
bound
cmc
pop
inc
stc
inc
or
les
repz
insl
clc
push
cltd
mov
rorb
arpl
nop
or
mov
out
sbb
xor
popa
in
mov
add
add
insb
xchg
lahf
les
aam
and
out
insb
xorl
dec
lretw
in
es
sub
inc
lcall
adc
cmp
sub
lock
xor
jl
mov
mov
xchg
mov
out
loopne
cwtl
ret
lds
jge
les
lods
cmp
data16
enter
ud1
int
sarl
pop
inc
mov
jns
adc
arpl
mov
orb
push
xor
mov
xchg
cmp
lret
adc
scas
test
shr
aas
mov
jbe
ljmp
and
movsb
in
push
imul
mov
and
sub
test
inc
movsb
cmpsb
or
imul
shr
mov
pop
mov
sbbl
push
pop
xor
cs
lahf
out
les
dec
stos
sbb
jbe
push
add
sbb
out
mov
cmp
mov
cwtl
mov
add
mov
or
or
mov
idivl
and
in
sbb
arpl
out
push
leave
jg
ja
fbstp
cli
add
lret
mov
mov
cltd
arpl
inc
andl
lret
mov
mov
xchg
push
cld
or
add
xchg
push
test
inc
dec
and
faddl
or
ret
iret
push
mov
pusha
nop
mov
cwtl
adc
dec
xor
ret
fs
dec
push
aad
cmp
lcall
lcall
test
ljmp
aam
mov
add
and
inc
cmpsl
and
aas
pop
scas
dec
jno
les
xor
jle
test
lods
adc
ja
push
dec
les
fwait
push
jnp
imul
push
inc
mov
mov
mov
xchg
test
imulb
and
mov
movb
lea
jp
add
stos
cmp
lret
xlat
aad
jae
dec
sub
xor
aam
pop
pop
jae
mov
jl
push
je
call
iret
dec
mov
pop
cs
das
cmpsb
fstps
hlt
push
icebp
fdivrl
ret
dec
mov
and
dec
or
mov
aad
and
sub
dec
sbb
sbb
push
sub
jnp
pop
in
dec
adc
xchg
decl
inc
subl
pop
aas
lret
pop
mov
mov
test
in
stos
sbb
and
jno
sbb
mov
add
cltd
andb
add
ss
add
mov
xchg
scas
mov
rorl
xchg
xor
out
and
inc
push
push
scas
inc
or
popf
or
es
xchg
stos
fcmovne
sahf
inc
inc
adc
ljmp
loop
xchg
les
cs
mov
xor
pop
mov
or
and
sbb
bound
leave
mov
stos
jge
mov
xchg
mov
lock
pop
mov
sub
loope
cmpsl
push
add
push
mov
adc
jae
addr16
xchg
movsl
daa
sbb
cwtl
xor
mov
ljmp
outsb
pop
push
aad
cmp
push
dec
cltd
mov
jg
subb
and
cmp
add
ret
sbb
pop
jge
pop
or
into
rep
or
cmp
lds
fidivrs
arpl
fisubs
push
stos
mov
stc
sbb
mov
fisubrl
movsl
pop
out
out
hlt
cmp
xor
loop
psllq
rclb
bndstx
dec
jl
aam
jno
popf
icebp
test
mov
mull
push
push
jg
push
mov
mov
sbb
shrb
mov
sti
sub
pop
pop
sbb
pop
std
and
xchg
xor
pop
jno
sub
and
movsl
mov
clc
mov
dec
mov
shll
cmp
adc
xchg
and
push
cmp
ret
pop
in
inc
mov
stc
test
and
mov
jle
mov
cmpsb
lahf
adc
xor
ljmp
mov
hlt
push
mov
fwait
inc
cli
jg
aad
test
decl
mov
std
shll
into
push
mov
test
add
js
out
push
pusha
xchg
pop
cmpsb
inc
push
pop
inc
pop
push
push
mov
gs
push
gs
test
adc
movsl
vucomiss
mov
pop
lea
sub
push
fst
add
mov
fisubl
push
leave
sub
sbb
push
int
inc
cmpsl
pushf
push
mov
lea
xchg
lods
mov
xchg
inc
add
mov
jp
push
inc
lret
sti
stos
pop
push
push
cmp
mov
add
sbb
insb
leave
or
addr16
call
ss
inc
dec
mov
pop
dec
mov
nop
test
mov
jg
pop
sahf
sarl
test
inc
lret
and
addr16
call
mov
out
mov
xor
mov
enter
aas
jge
jno
ror
jle
outsl
test
out
enter
rcrb
add
lods
sti
movsl
repnz
ss
ud1
and
pop
movsb
pop
jb
mov
insb
scas
aaa
stos
cmp
add
lds
xor
dec
mov
addl
xor
or
mov
repz
jge
cmpsb
fs
push
cmpl
push
nop
std
mov
mov
pop
jl
sbb
push
test
xchg
jb
test
cltd
sub
loope
mov
xchg
jle
mov
mov
xchg
dec
inc
jb
lds
fnsave
mov
arpl
sub
jmp
call
inc
pop
xor
lcall
sbb
loope
jbe
hlt
push
test
aam
sbb
push
in
mov
inc
xor
xchg
xchg
push
movsl
faddl
je
pop
or
lods
adc
cmp
fimuls
outsl
loopne
cs
nop
sub
ss
lret
jp
ds
xchg
icebp
mov
jne
mov
arpl
mov
bound
pop
std
push
imul
push
push
repz
loop
mov
or
sbb
cmp
cmpsb
loope
cltd
je
cmp
push
call
or
sbb
or
aas
pushf
sbb
imul
nop
mov
jl
add
loop
mov
js
jo
clc
out
fimuls
mov
mov
movsl
mov
outsb
rcll
fs
cmpb
mov
or
out
sti
mov
push
pop
inc
push
push
xchg
fisubl
sbb
out
inc
xchg
sub
int
push
add
push
mov
xor
jle
xor
xor
xchg
mov
in
rep
push
sahf
sub
arpl
fstl
push
adc
packuswb
dec
xor
jbe
push
mov
sub
xor
iret
aad
sub
mov
cli
movsb
mov
xchg
in
ss
into
inc
lock
arpl
add
fildl
adc
js
cmp
pop
scas
mov
mov
fstps
adc
mov
shl
call
cmp
test
sbb
sub
and
nopl
xlat
in
jecxz
push
xor
clc
sti
and
fnstenv
mov
mov
scas
push
push
data16
scas
gs
pusha
pop
push
push
xor
push
aam
mov
fucomip
outsl
in
icebp
mov
loop
ja
sub
jg
mov
push
inc
pop
mov
cli
mov
mov
fmull
daa
lock
lods
add
in
mov
out
loop
outsl
add
stos
cmp
mov
cmp
aam
hlt
pop
cmpb
icebp
jg
mov
add
jecxz
lods
lea
out
xchg
jns
call
popf
and
jmp
out
in
movsb
mov
test
xor
jle
xor
test
fcmovne
scas
and
jp
scas
mov
daa
cwtl
inc
and
xchg
pop
negb
xchg
subl
dec
out
lods
xchg
xor
mov
add
fs
addr16
pop
lret
mov
in
xor
mov
pop
pop
push
xchg
and
addr16
push
popf
decl
fadd
rcll
pop
fcom
cli
cmpb
loopne
push
insb
mov
inc
push
es
arpl
add
mov
cmp
out
mov
loope
mov
fs
mov
test
out
out
push
out
cmp
dec
mov
sbb
push
mov
mov
sti
mov
push
or
cwtl
inc
ljmp
jge,pn
sbb
pop
mov
ret
adcb
insb
pushf
xchg
imul
fs
stos
in
imul
sub
xor
popa
sbb
and
jnp
dec
add
in
shll
xchg
xchg
adc
lea
add
push
mov
rcrl
mov
dec
mov
rolb
cs
jbe
inc
into
movl
and
cmp
enter
xchg
addr16
icebp
icebp
popa
pop
lods
or
cmp
cmpl
into
add
sbb
xchg
jnp
sbb
clc
ja
xchg
mov
jp
adc
xor
push
call
ljmp
xor
outsl
hlt
aam
ret
pop
xor
pusha
cmp
insb
push
push
mov
pop
or
rcrl
into
add
test
fstpt
ret
cs
aam
hlt
xchg
lock
fldenv
arpl
add
adc
shl
sahf
inc
cmp
xor
jno
cld
stos
sub
ja
adcl
add
loope
ds
pop
mov
in
dec
pop
jle
js
jp
sarb
mov
add
sti
inc
xchg
and
insl
dec
xor
mov
jecxz
fstps
push
daa
fsubs
imul
dec
mov
jne
add
sub
sbb
or
jmp
push
dec
jecxz
ja
gs
adc
loope
jecxz
inc
push
pop
cmp
mov
repz
cwtl
push
out
sub
pop
fstp
dec
xchg
pop
push
testl
xchg
popf
cli
aaa
mov
cmpsb
sub
cmp
inc
mov
add
shlb
cmc
mov
mov
jns
jne
sub
test
mulb
cld
pop
lcall
cli
jns
adc
push
adc
ljmp
lea
out
outsb
push
divl
test
sub
jg
pop
test
jb
pop
mov
cltd
push
dec
ret
or
lods
mov
sub
rolb
sub
or
cmc
or
ds
xchg
sbb
sbb
adc
mov
dec
or
in
call
xchg
or
testb
sbb
xchg
fxch
ja
sar
imul
call
rorb
std
iret
mov
mov
inc
cltd
into
push
sbb
popf
mov
adc
aas
and
push
or
jne
xor
sar
loopne
pusha
hlt
mov
mov
mov
and
rclb
cmp
enter
xchg
cmp
jmp
je
add
mov
jmp
xchg
lret
call
mov
rcrl
push
push
push
leave
and
les
lock
fmulp
add
dec
cmp
mov
cli
fstpt
adc
sbb
dec
lock
mov
push
ja
pop
mov
or
cmp
sbb
jne
iret
aas
push
aam
or
jp
cmp
loop
stos
les
cmp
fisttpl
call
pop
ljmp
or
inc
xchg
adc
div
fwait
sbb
out
in
mov
inc
inc
inc
push
jno
pop
sub
inc
sbb
cmovl
aad
sbbb
pusha
in
xchg
inc
push
int3
cmpsb
jg
ret
movsb
lods
add
xchg
mov
fs
fiadds
jle
dec
scas
in
dec
dec
dec
mov
fimull
mov
and
and
icebp
arpl
add
mov
pusha
pop
sub
mov
pop
xor
dec
fucomip
sbb
loope
jnp
std
xchg
test
mov
xor
out
rolb
inc
mov
cmp
arpl
pop
pop
andb
push
ss
pop
bound
mov
bound
and
and
aas
js
test
div
or
test
in
adc
stos
arpl
test
out
jns
stc
xchg
lods
repnz
sti
aad
fsubl
les
inc
pop
fldt
lds
je
clc
enter
ds
jp
add
jno
push
and
add
pop
mov
xlat
lods
stos
jecxz
fdivl
std
xchg
movsb
push
xchg
push
cmp
scas
add
cmp
int
in
pop
stos
add
mov
cmpsl
or
loope
mov
jbe
cmpsb
shlb
daa
setns
jo
mov
movsl
imulb
outsl
test
shll
insb
ret
lret
idivl
lods
popa
mov
and
loope
enter
daa
mov
std
pop
jl
sub
dec
jp
iret
sbb
outsb
xchg
mov
out
popf
mov
cs
testl
mov
outsl
pop
mov
nop
in
sub
sub
cld
push
out
adc
push
add
xchg
out
pop
inc
mov
push
fldcw
fisubs
call
sub
mov
adc
jo
sbb
addr16
push
mov
pop
rorl
sub
mov
imul
icebp
cltd
push
repz
dec
fcomps
cmp
les
lods
cltd
inc
pop
jge
sub
data16
jl
fstpt
ret
lahf
fwait
jg
sub
shrl
mov
pop
push
xor
repz
push
inc
js
add
fs
adc
dec
sbb
inc
mov
inc
pop
mov
cmpsb
and
mov
mov
loope
dec
pop
or
mov
les
jg
cmc
mov
out
pop
aad
xchg
add
ret
in
call
scas
loopne
xchg
inc
adc
mov
shrb
imul
inc
mov
lahf
mov
mov
js
dec
pop
call
leave
shlb
mov
into
inc
aas
in
inc
ds
aas
cltd
and
cltd
or
mov
xchg
jmp
push
xor
mov
mov
cli
dec
sarl
lret
dec
mov
dec
push
sarl
in
inc
inc
mov
xchg
pop
nop
cmp
pop
in
lds
sub
jno
les
dec
fwait
xlat
shr
pop
iret
outsb
inc
jae
cmp
inc
out
mov
dec
mov
mul
dec
test
imul
sbb
push
mov
hlt
jbe
fsubs
divb
inc
pop
pop
mov
cmp
xchg
and
call
pushf
dec
out
sahf
sahf
aas
mov
ja
inc
out
jg
jmp
mull
in
sub
pop
sbb
cmp
xor
fmul
or
xchg
in
stos
push
in
jo
xor
add
dec
lret
pop
mov
push
movsb
pusha
jbe
ja
roll
or
push
jnp
ljmp
mov
imul
pop
mov
xor
sar
rcl
xchg
or
cwtl
mov
and
jg
js
je
cwtl
sub
aam
and
push
mov
arpl
jb
xchg
jo
inc
push
pop
cli
push
fwait
bound
xchg
add
mov
ja
pop
mov
leave
lods
mov
push
xchg
dec
outsl
sub
push
fnstcw
incb
adc
jae
mov
jg
xchg
sbb
cld
bnd
xor
fstps
addr16
dec
popa
cmp
idivb
push
aaa
inc
call
pop
mov
mov
mov
push
adc
adc
cmp
add
mov
fucomi
sub
in
imul
cs
adc
lret
pop
lods
cmpsb
lahf
sbb
push
shll
cwtl
jno
sbb
push
test
lods
outsb
mov
fstpl
lret
and
inc
jmp
pop
fsts
fsubs
and
fdivrl
js
adc
and
push
mov
cmp
in
lods
push
enter
dec
dec
fs
adc
mov
das
aam
push
jb
out
idivb
push
dec
jle
or
cmpsl
into
pushf
push
fwait
mov
mov
xor
test
fldenv
mov
inc
dec
in
lret
jbe
rep
orb
xchg
gs
jle
adc
mov
xchg
pusha
sbb
sub
xchg
push
repnz
xchg
sub
mov
pop
xchg
lcall
rcrb
cmp
clc
pop
fiadds
or
xchg
ret
popf
enter
mov
outsb
mov
cmpsl
lods
sub
mov
out
lret
adc
and
aaa
inc
jmp
les
aaa
sub
dec
mov
cltd
into
add
fstps
rorb
push
xchg
fisttpl
mov
lods
movsb
sbbl
cmpsl
jo
dec
cli
insb
or
loope
or
nop
in
xchg
filds
dec
fsub
imul
fcompl
daa
xchg
and
pop
lret
ljmp
xchg
rcl
adc
or
movsl
mov
mov
push
add
jnp
xlat
pop
aas
pop
and
loope
inc
jns
test
jb
jae
fistl
in
jg
mov
and
and
pop
shrb
int
and
mov
push
push
inc
and
push
test
push
dec
fildll
mov
jbe
mov
mov
sbb
rol
lods
pop
xor
sbb
pushf
stos
mov
xor
negl
sarb
pushf
cmp
movsl
xor
lcall
movsb
pop
inc
dec
scas
rep
daa
mov
movhps
push
mov
push
dec
dec
divl
inc
sbb
and
cld
inc
sub
mov
jp
and
rcrb
mov
das
xor
mov
xchg
add
jmp
mov
inc
pop
mov
std
int3
das
add
sub
mov
xchg
inc
inc
sbb
xor
testb
out
lcall
xor
cwtl
cmp
mov
push
pushf
sub
cs
int
cwtl
orb
fstl
cmp
orb
push
in
sub
or
push
fcomps
push
arpl
push
adc
scas
jne
out
xor
xchg
add
pop
lcall
ljmp
sub
pop
sbb
mov
cmp
and
mov
sub
clc
xchg
jne
pop
test
mov
cmp
mov
loopne
dec
movsb
out
repnz
mov
sub
xchg
adc
sarb
sbb
addr16
push
mov
bound
xor
xchg
pusha
dec
cmpsl
andb
sbb
std
push
icebp
mov
xchg
inc
in
push
imul
pop
mov
push
pop
popf
jp
iret
mov
push
inc
pop
xor
out
loop
hlt
lcall
shll
cmp
sbb
xchg
and
mov
jp
jg
orl
std
pop
stos
xchg
loopne
inc
xor
pavgb
mov
stos
lcall
roll
xchg
sbb
es
decb
sub
repz
sub
enter
pop
jne
inc
or
lret
jge
sub
mov
insb
sarb
mov
cmc
push
and
mov
jmp
int3
xchg
fisubrl
sub
mov
je
xchg
pop
jno
cmpsl
lock
stc
outsb
lret
mov
xchg
loope
push
dec
sbb
test
jl
jle
stos
or
inc
lock
iret
icebp
popa
out
je
and
bound
lds
mov
addr16
mov
mov
mov
fisttps
sbb
push
es
mov
mov
std
pop
loope
pushf
aam
popf
les
add
adc
xlat
es
out
enter
mov
jmp
xor
jae
stos
jae
sbb
push
sbb
loopne,pn
xchg
shrl
sahf
popa
add
or
fwait
data16
jo
xchg
add
js
sub
sbb
leave
mov
or
mov
and
sbb
leave
jl
jo
add
cmpsb
mov
or
xor
mov
into
pop
jne
insb
sub
add
mov
insb
lock
adc
mov
cld
push
sub
cmpsb
push
sub
sbb
enter
loop
ss
loopne
and
stos
add
lcall
push
fwait
leave
lods
sbb
cmpsl
mull
mov
ss
out
out
sbb
sahf
into
imul
mov
lea
cmp
fnsave
pushf
shrb
addr16
cs
mov
clc
and
mov
pop
inc
out
leave
mov
into
out
pop
push
popf
inc
or
hlt
jne
test
fnstcw
arpl
ret
insb
sbb
dec
mov
inc
sahf
and
arpl
and
and
mov
sbb
sbb
adc
push
shlb
and
shll
lock
and
mov
adc
pop
ljmp
out
lea
mov
loop
lods
es
pop
es
push
sarb
shll
test
lret
push
xchg
ret
or
cld
inc
jecxz
aam
mov
daa
xor
into
or
pop
push
cld
mov
les
lods
inc
sub
cmpb
sbb
push
out
es
test
leave
jp
and
mov
loope
inc
add
add
pop
fldcw
icebp
cmpsb
cs
sub
cmp
xchg
dec
dec
in
scas
imul
or
pushf
out
mov
pop
test
pop
lea
sub
movb
lods
mov
sub
cs
stos
jmp
and
lds
fildll
aas
sbb
imul
je,pt
addl
movsb
inc
mov
add
push
fs
negb
sub
insb
and
clc
out
xchg
xor
imul
pop
jne
fmull
stc
and
popf
xchg
xor
xor
mov
mov
push
cmc
add
cmp
sub
mov
js
ljmp
insb
aam
push
ffreep
je
fildll
movsb
testl
sub
test
or
dec
jp
adc
xor
adc
pop
sub
pop
fs
out
push
sub
mov
mulb
dec
cmp
inc
repnz
aam
pushf
push
xchg
hlt
movb
repz
mov
sub
fwait
jno
pop
xchg
mov
test
int3
rorl
pop
aam
mov
jns
stos
push
stos
jge
stos
enter
pushf
jns
aam
les
xor
adc
push
lret
sbb
cmpsl
inc
mov
lret
dec
movsb
rcl
add
scas
fsubl
ret
out
dec
xchg
xlat
les
and
je
arpl
sub
lea
cwtl
dec
push
add
loop
pop
ret
mov
xchg
push
inc
push
cmpsl
gs
sbb
testb
push
cmp
in
or
fisubrs
jno
push
stc
fwait
out
push
ret
inc
gs
or
mov
movsb
fcoml
sub
xor
add
in
in
in
xchg
push
aad
pop
and
lods
dec
fdivl
cli
pop
sub
fisubl
roll
psubw
cmp
sahf
push
hlt
out
push
adc
sbbl
jne
adc
xor
push
pop
inc
push
adc
pop
es
jns
in
lret
mov
mov
test
cs
pop
jle
cwtl
mov
mov
ficoml
insl
out
rcrb
or
mov
pop
push
dec
push
xor
std
adc
fstpl
test
inc
popf
xchg
stc
pop
add
bound
test
dec
fstpl
imul
and
sub
jns
jg
xor
test
xchg
and
push
fcompl
cltd
js
lahf
andl
add
iret
inc
lret
outsb
movsl
bound
out
and
ds
lds
jg
jmp
aad
xchg
xor
xchg
adc
pop
xchg
xor
loop
jbe
pop
mov
push
bound
pop
push
int
int
insl
jbe
xor
xchg
mov
mov
jne
cli
jmp
sub
sub
lcall
xor
out
xor
cmpsb
bnd
mov
adc
dec
in
xor
fcompp
shrb
sbb
ja
pop
inc
jg
add
fisttpl
push
rcll
mov
scas
ret
sbb
mov
push
shlb
popa
add
enter
outsb
das
mov
adc
pusha
fimuls
pop
lods
leave
daa
jo
iret
std
std
adcb
shrb
sbbb
ret
sbbb
cmp
ljmp
dec
aad
in
mov
pop
pop
jecxz
xor
ficompl
mov
xchg
stos
jbe
and
push
and
rorb
sbb
inc
push
fcomi
xchg
push
xor
arpl
aaa
jmp
sbb
movsb
hlt
mov
or
data16
das
xchg
sarb
inc
mov
push
js
push
mov
mov
int3
test
and
ffreep
adc
lock
out
cmp
out
test
pop
xor
test
int3
stos
in
js
jle
out
lret
cmp
hlt
fimull
add
cmp
scas
sti
push
scas
cwtl
pop
mov
test
std
sub
mov
cli
jnp
cli
jg
xchg
aad
pop
cmpsl
fwait
sarb
or
imul
pop
fists
cmp
out
ret
xchg
mov
outsl
push
daa
arpl
std
loope
mov
inc
dec
jle
out
xor
mov
nop
ljmp
xchg
inc
xor
or
int
mov
sub
xor
arpl
jne
mov
cmp
cmc
shll
sbb
mov
mov
or
insb
sbb
faddp
pushf
shlb
scas
std
and
mov
cmp
push
jnp
xchg
sub
pop
jne
add
cmpsl
push
xchg
cmp
xor
lret
inc
cmpsb
sub
sbb
mov
inc
add
push
clc
pop
push
xor
shlb
adc
adc
xor
xchg
xor
aaa
ret
xchg
subl
mov
push
cmp
popf
dec
sbb
jno
sbb
and
sahf
fdivrs
cmp
mov
cmc
jns
pop
mov
idiv
jo
push
cmp
and
mov
mov
mov
jecxz
rcrl
fidivs
out
xor
aaa
aaa
cmp
pop
fwait
push
and
pop
or
mov
pop
sbb
pop
or
daa
fcoms
jge
cmp
inc
xchg
shl
cmp
aaa
popf
ret
xor
mov
and
push
mov
sbb
ret
xor
loop
lret
std
pop
mov
push
scas
sbb
cmp
rcl
lret
sub
cld
dec
data16
push
or
mov
das
mov
idivl
stc
mov
or
ret
ja
adc
lods
shl
fcmovu
stos
adcl
data16
jae
push
inc
add
cmpl
sti
xchg
fcompl
jle
stos
pop
mov
or
mov
push
jnp
int3
jno
jnp
pop
mov
test
les
int
cli
inc
out
add
movsb
pushf
xor
push
and
cmp
cmpsl
pop
in
icebp
out
stos
cld
arpl
pop
int
or
adc
pop
call
pop
test
sti
ss
out
lret
mov
or
outsl
aas
in
dec
push
dec
sarb
inc
stos
int3
inc
sbb
mov
rcrl
cwtl
movsb
mov
js
fstps
mov
pushf
sub
add
test
mov
dec
adc
mov
mov
fwait
movsl
push
mov
pop
xorb
xor
mov
pusha
mov
jl
adc
fidivl
and
mov
movsb
test
hlt
push
xchg
adc
adc
subb
lret
sub
fcompl
ficomps
les
cli
int3
mov
jp
push
mov
ret
in
into
mov
in
lret
lods
aaa
inc
negl
cmp
adc
les
cmpsl
push
jno
cmc
int
cmp
fs
js
sub
jle
sub
insl
imul
sub
cmp
mov
insl
lret
nop
popa
jle
stos
and
adc
adc
dec
mov
lods
pushf
insb
or
shrb
inc
mov
xchg
cmp
cli
mov
ret
inc
adc
repnz
out
dec
sbb
pop
icebp
xchg
ja
rorl
and
orps
xlat
ret
mov
ret
mov
nop
sahf
das
les
negl
stc
jne
fdivrs
pushf
fmull
xor
in
std
rcrb
mov
sub
xchg
jg
int
xlat
test
jecxz
inc
js
or
push
sahf
mulps
cmp
push
sub
jnp
jbe
push
lock
xchg
ss
push
mov
dec
mov
mov
dec
xchg
add
lods
outsl
ds
dec
or
adc
cld
fyl2xp1
pop
cmp
cld
push
lret
jnp
into
or
push
cmc
lret
cltd
scas
lds
shll
xor
lock
sub
or
or
fidivl
sub
mov
and
inc
pop
sbb
rcrb
lret
mul
mov
push
mov
xor
cmp
test
sbb
test
enter
loopne
je
cwtl
es
test
dec
into
push
xchg
rorb
out
outsb
and
in
imul
movsb
adc
cmc
xor
popf
test
and
ja
inc
xchg
ret
hlt
dec
lods
lcall
push
inc
cwtl
cmpsl
cwtl
sub
notb
cmc
jmp
sub
scas
fldt
dec
jecxz
push
pop
push
cwtl
or
dec
pop
lret
filds
out
pop
in
rcrl
xor
mov
inc
lods
dec
add
or
mov
bound
in
push
int3
call
sub
or
dec
push
bound
bound
ret
or
sub
mov
lret
outsb
mov
xlat
cmp
ret
fists
dec
mov
pop
pushf
sbb
into
stos
ror
repz
inc
int
cmp
mov
mov
adc
stos
movsl
insl
cmpsl
mov
cmp
dec
repz
mov
pop
testb
jb
pop
ret
loope
inc
out
xor
test
pop
movsb
inc
sahf
lret
mov
ja
ljmp
inc
xor
mov
je
or
call
out
inc
cs
add
adc
andb
sub
imul
mov
cltd
mov
dec
sub
fistl
out
enter
in
pop
aas
adc
stc
dec
sub
sbb
inc
lods
xchg
mov
pop
scas
xor
or
and
sbb
cwtl
inc
nop
mov
pop
es
imul
or
pushf
add
mov
in
push
int
pusha
lods
mov
or
ret
dec
insl
add
or
mov
in
sbbb
cli
pop
mov
cmp
sbb
sub
mov
les
adc
or
sarl
loop
mov
lds
stos
aam
daa
push
sbb
testb
add
addr16
int
out
movsb
mov
inc
cmp
mov
adc
push
or
xchg
jp
imul
mov
dec
xor
cltd
cltd
loope
jb
das
std
test
lods
and
test
pop
push
add
daa
mov
jbe
or
jb
in
xchg
clc
cmp
aam
xor
adc
hlt
or
lods
sbb
jbe
pop
mov
xor
jl
adc
pop
dec
jl
add
adc
cmp
add
iret
pop
in
and
mov
in
mov
fwait
xor
loop
mov
lods
fs
push
dec
mov
cs
fistl
xor
lds
mov
xor
xor
lret
in
out
pop
aad
lds
pop
sbb
add
icebp
jmp
cmp
adc
add
push
arpl
inc
cmp
icebp
stos
andl
fstl
pop
clc
push
fiaddl
repz
js
jle
xor
xor
push
out
into
call
xchg
jo
imul
ss
cld
push
sahf
fcomp
ss
sahf
jmp
push
sbb
pop
orb
pushf
gs
jno
jmp
pop
and
mov
jp
inc
and
jno
hlt
jg
add
mov
mov
jo
push
mov
int3
jl
das
enter
mov
or
dec
pushl
int3
sti
lret
scas
stos
loope
add
gs
or
in
inc
pop
test
ret
test
jbe
mov
adc
xchg
sbb
sbb
shl
sbbb
sbb
mov
push
jo
roll
idivl
mov
mov
adcl
xor
cld
shrl
mov
sbb
mov
imul
adc
test
cltd
mov
adcb
or
xchg
mov
jecxz
gs
jns
mov
cmp
adc
stos
and
lea
sub
fimull
mov
in
cmp
mov
inc
mov
push
push
arpl
xor
es
pop
jns
xor
sti
leave
jmp
je
add
inc
loope
xchg
mov
jnp
and
cmp
add
xchg
mov
add
inc
fisttps
fsubl
push
mov
leave
mov
jp
jmp
subl
call
mov
repnz
cwtl
mov
mov
aad
jae
in
mov
repnz
cmpsl
pop
ss
xchg
out
jg
sub
xlat
out
mov
jle
sahf
pop
add
mov
jo
adc
pusha
push
out
js
xor
icebp
loopne
pop
lret
aas
dec
mov
and
pusha
bnd
jmp
pop
loop
int3
inc
xchg
fcmove
jne
push
ds
dec
repnz
stc
cmp
call
pop
xchg
xor
scas
jp
push
cmpsl
add
jl
mov
push
mov
pop
shlb
mov
bound
clc
ljmp
call
cmpsl
jns
mov
push
mov
fwait
rorl
pop
sbb
cli
jle
jmp
enter
shll
test
push
popa
pop
pop
dec
sarl
nop
xchg
and
and
jb
cmc
pushf
stc
push
ficoms
dec
xchg
adc
fistl
aad
icebp
test
daa
fucomp
pusha
push
roll
int
dec
push
cmp
fldcw
insl
popf
push
rolb
fdiv
mov
rorl
pop
xor
lretw
sarl
jmp
add
mov
pop
pop
mov
jno
addb
lea
or
je
dec
bound
lods
cmpsb
aam
mov
sbb
adc
arpl
sub
pop
lds
sub
xor
cwtl
mov
cmpsb
pop
add
nop
mov
mov
mov
arpl
in
inc
jnp
imul
arpl
les
mov
movsb
jge
ror
dec
ret
mov
and
mov
cwtl
popa
mov
repz
sub
out
dec
icebp
andl
js
leave
iret
popf
push
xlat
fnstsw
lea
inc
push
pop
std
or
push
pop
cmpb
hlt
pop
subb
popa
xchg
imul
mov
and
inc
cli
add
in
mov
xor
fsubrp
ffreep
jno
lret
movsl
in
sub
jne
das
scas
test
lcall
adc
insb
inc
sub
in
out
lret
loopne
aam
jl
lods
scas
jp
sbb
lods
int
mov
ds
push
in
rorb
push
test
push
jae
stos
cmpsb
dec
pop
stc
pop
mov
inc
outsb
inc
jg
sbb
add
ljmp
push
filds
movsl
test
repnz
sub
cli
mov
xchg
sbb
stos
sub
scas
or
js
popa
sti
scas
lea
shll
push
mov
xor
inc
insl
es
nopl
pop
clc
push
adc
mov
mov
sbb
push
mov
push
pop
mov
mov
lahf
and
enter
jg
pushl
shrb
ret
xor
mov
fwait
insb
xchg
iret
ljmp
gs
and
inc
bound
insl
xor
pop
add
or
incb
in
inc
dec
jns
mov
cmp
adc
mov
sub
and
pop
cs
ja
cwtl
and
sti
sub
xor
mov
add
inc
jno
rcr
adc
icebp
inc
mov
dec
inc
je
popf
icebp
cmp
push
lret
subl
lret
jp
lods
cltd
mov
sahf
cmc
cmp
adc
xor
mov
push
fisubs
push
lock
and
adc
mov
movsl
in
xchg
xlat
inc
adc
push
arpl
dec
mov
iret
mov
fdivs
cmp
into
pop
stos
cmp
adc
pop
cld
mov
test
pop
outsb
imul
xchg
imul
sahf
movsb
inc
pop
fcmove
dec
mov
into
mov
insb
sbb
in
lret
jmp
ljmp
popf
les
ss
sbbl
inc
xor
cmpb
or
repnz
adc
jae
leave
push
arpl
xorl
pop
movb
adc
ds
xor
and
jl
adc
cmp
sub
jmp
stos
xchg
push
addr16
sub
mov
mov
cwtl
imul
dec
cmp
or
mov
xchg
push
push
sahf
and
mov
out
pop
lds
and
fisttpll
arpl
cmp
out
les
pop
push
imul
pop
dec
popa
and
pop
jmp
mov
jae
jns
push
cmc
hlt
test
pushf
movsb
inc
mov
aam
sub
psrld
sti
sub
and
es
adc
leave
mov
push
dec
add
sbb
mov
neg
aam
mov
cwtl
inc
cwtl
push
sbb
in
mov
jne
dec
lret
jecxz
push
push
mov
mov
or
repnz
into
loope
ret
add
pop
sbb
jb
mov
ja
xchg
mov
sbb
xlat
pop
pop
js
pop
mov
popa
adc
inc
loopne
jge
sub
icebp
xchg
jb
fiaddl
dec
neg
or
cmpl
xor
cwtl
hlt
in
leave
adc
cli
push
repnz
pushf
mov
in
pop
sub
add
dec
mov
movl
ja
ljmp
lea
and
mov
andb
mov
sbb
push
addl
cs
xor
repnz
push
sub
iret
loope
mov
data16
sub
jle
push
or
adc
aad
sahf
call
or
cmp
insl
or
out
cs
jmp
or
add
jmp
add
ds
stc
xchg
or
fwait
popa
xlat
cmp
movsl
mov
dec
js
sbb
ljmp
pop
nop
lock
or
ja
dec
in
xchg
iret
push
std
or
sbb
lods
xor
push
test
clc
pop
loop
in
pop
pop
fsubr
es
add
iret
jnp
enter
pusha
push
insl
mov
cmc
mov
sarb
outsb
pop
lods
pop
mov
push
sbb
cli
add
cmpsl
xchg
addr16
movsb
mov
jmp
or
inc
push
mov
inc
movzwl
enter
jnp
out
push
andps
insb
cmp
pop
iret
xchg
pushw
mov
pop
and
pop
add
xchg
das
adc
mov
pop
sbb
imul
push
into
xchg
int
fisubrs
cltd
sbb
jle
pop
scas
sub
fdivr
adc
pop
cmp
sti
push
movsb
pop
sbb
incb
cmpsl
xor
clc
lret
push
jecxz
repnz
ret
dec
mov
out
sub
dec
ret
inc
imul
push
and
push
rolb
and
fcomip
nop
xchg
add
sbb
enter
or
push
test
xchg
or
jle
push
imul
enter
or
sub
pop
pushf
jae
or
mov
xchg
sbb
into
and
mov
fstpl
addr16
sbb
fldenv
mov
imul
imul
cld
xchg
pop
lea
int
xchg
pop
cmp
ljmp
lods
mov
pop
fstps
sbb
xlat
adc
add
mov
mov
pop
shll
pop
mov
neg
adcl
jge,pt
ficoms
mov
cmp
adc
push
idivl
mov
and
fmull
pop
int3
push
xchg
popf
pushf
ja
mov
mul
in
cld
xchg
icebp
pop
fidivs
repz
jo
dec
lds
xor
inc
ljmp
adc
pop
sbb
das
sub
iret
xor
xchg
sbb
add
xor
aad
clc
mov
mov
push
ret
outsl
cld
rcrb
and
inc
inc
inc
sbb
pop
mov
sti
sub
lcall
andb
and
stos
lret
cmc
jmp
add
pop
sahf
push
and
sub
pop
and
and
sbb
sub
and
mov
fs
pop
les
out
push
movsb
add
lock
dec
push
scas
loop
inc
xchg
hlt
lock
arpl
flds
popf
fistps
or
in
pop
sbb
ret
jno
mov
outsl
sub
repz
mov
xchg
fwait
cwtl
daa
loope
outsl
stos
lret
call
jne
je
or
jmp
insb
sahf
int3
fsts
mov
cs
ja
jg
add
adc
dec
adc
nop
ja
xlat
adc
inc
xchg
icebp
in
int
notb
pop
jne
inc
cmpsl
test
inc
fcmovne
mov
inc
mov
sbb
arpl
fyl2x
daa
add
mov
jl
jae
sbb
decb
pusha
rorl
and
loopne
xlat
cmp
lcall
ja
shlb
daa
jp
pop
push
adc
test
mov
jns
and
sti
fsubl
jae
pop
loopne
clc
xlat
adc
jnp
adc
adc
stc
mov
xchg
jmp
sbb
mov
or
mov
mov
xchg
jge
and
icebp
cmp
pop
loope
jp
mov
pop
xchg
xor
popf
rorl
sbb
es
adc
fbstp
jp
cwtl
xchg
lcall
xchg
fwait
push
xor
iret
mov
push
xor
xchg
divl
mov
push
sub
mov
sub
pop
addr16
cmp
cmpsl
and
cmpsl
js
test
pop
dec
sbb
mov
or
cmp
arpl
rcrl
out
add
sti
and
sub
inc
call
js
sbb
sub
xchg
icebp
push
int
sbb
adc
repz
mov
ds
jb
mov
jno
sbb
lods
add
loope
pop
fists
pop
fdivl
pop
mov
pop
stc
sbb
and
nop
filds
sub
xor
mov
pop
test
int3
sub
mov
in
adc
cmp
mov
lock
mov
inc
sbb
adc
fwait
lds
push
test
fisubs
gs
jge
push
mov
inc
loop
fabs
add
mov
xchg
cli
adc
and
push
das
out
iret
pop
pop
xor
add
iret
loop
adc
ljmp
cwtl
scas
mov
into
cli
xchg
jb
rcll
inc
push
jno
jp
xchg
pop
lret
fucomi
adc
pop
xor
xchg
in
sub
mov
pop
stc
push
lock
pushf
mov
andb
int
ds
fnstcw
icebp
xchg
jne
mov
pop
add
inc
dec
int
pop
pushf
pop
cmpsl
xchg
addr16
dec
xchg
jl
inc
and
mov
mov
fld
imul
idivb
cli
add
rcll
push
dec
pop
cwtl
inc
test
mov
int3
jle
out
sbb
sbb
xchg
orb
add
test
pop
lods
iret
jno
jge
add
pop
jmp
insb
pop
fs
xchg
lds
and
nop
in
push
imul
or
dec
cmp
jle
and
mov
cli
mov
mov
fstps
mov
lahf
lea
mov
sbb
sbb
and
mov
and
xor
push
xchg
or
and
adc
mov
call
mov
sbb
sbb
and
pop
and
adc
loop
xor
push
addr16
pop
mov
mov
adc
sahf
pop
out
mov
shlb
or
enter
ss
add
dec
test
outsb
in
movsl
not
movsl
mov
push
arpl
icebp
mov
xor
incb
sub
xchg
fwait
push
jnp
pop
cmpsl
push
loopne
test
scas
out
push
je
cmp
inc
add
ret
xor
or
aad
adc
sub
mov
jmp
push
sti
jmp
cmp
xchg
aaa
and
xchg
xchg
xchg
xor
xchg
adc
or
sbb
xor
sub
inc
ss
in
push
cmc
or
daa
ss
push
adcl
inc
mov
xchg
notb
cli
fcompl
xchg
ficoms
aaa
mov
xor
xor
mov
popa
enter
sub
cmp
adc
lods
and
sbb
mov
or
xlat
dec
frstor
ds
lea
mov
inc
lods
mov
cmp
hlt
and
movsl
lea
rcl
js
xchg
popf
sub
adc
add
fwait
lcall
fwait
or
scas
out
jecxz
cmp
adc
dec
jge
shll
je
clc
or
aad
push
lret
adc
mov
mov
test
mov
lahf
mov
fdivrp
ss
mov
push
test
hlt
nop
ds
das
adc
mov
jns
adc
xor
add
aam
jo
rorb
pop
mov
aas
mov
inc
ret
imul
mov
data16
cltd
in
add
sbb
cmp
push
cmp
jmp
push
or
push
sbb
mov
aaa
push
jg
adcl
mov
loopne
fiadds
push
ljmp
push
test
sub
cmpsb
dec
push
dec
test
mov
fwait
and
fxch
mov
mov
insl
inc
stos
shlb
or
test
jg
data16
mov
cmp
and
add
cli
outsl
and
mov
pop
insb
ret
ficompl
cmp
xchg
std
cmp
mov
adc
mov
out
pusha
icebp
mov
out
adc
shlb
sub
inc
or
fst
in
and
and
mov
repnz
sub
and
cltd
pop
mov
jl
pop
int
jne
aam
push
push
push
js
loop
je
inc
outsb
sahf
mov
movsb
out
mov
out
iret
test
dec
ss
rclb
lock
test
leave
outsl
add
popa
mov
aam
lods
and
sbb
push
sbbl
jmp
addl
fsubrs
mov
addr16
ja
stos
neg
lret
data16
fcmovu
repnz
adc
add
pop
or
nop
test
das
enter
leave
or
mov
mov
imul
pop
rorl
in
cmp
push
icebp
cs
in
in
loopne
ficomps
xor
aaa
jns
mov
push
cwtl
out
out
mov
inc
cwtl
test
push
hlt
shrb
xchg
sbb
adc
adc
cld
addr16
mov
push
sbbl
add
xchg
dec
xor
mov
xchg
pop
sub
test
mov
imul
gs
adc
ja
push
and
rcrb
push
push
and
fisubl
scas
jb
sub
mov
mov
mov
xchg
clc
ficompl
movsl
xchg
push
inc
jne
sub
push
je
ljmp
jl
xchg
pop
pop
lock
mov
push
test
pop
pusha
lahf
into
or
or
jge
push
jecxz
mov
jns
xchg
aaa
pop
movsb
dec
mov
ret
mov
addb
jg
or
mov
cltd
mov
dec
dec
movsb
add
jno
jnp
ss
leave
pop
ss
pop
scas
outsl
or
out
lea
out
jo
or
mov
enter
in
cmc
testl
cltd
icebp
mov
or
jo
sbb
sub
jae
mov
push
dec
add
mov
inc
loopne
pop
add
dec
jl
dec
jne
or
sar
pop
out
sti
sbb
or
les
cli
mov
pop
and
and
jp
push
rorl
pop
xchg
sub
add
adc
ss
mov
and
nop
mov
sbb
fidivrl
sbb
mov
fcmove
ret
les
leave
or
imul
rcr
sub
aad
inc
add
dec
and
cmp
mov
insb
outsb
into
push
imul
jb
dec
repz
jns
push
dec
in
insl
or
icebp
jmp
pop
cs
mov
jo
xchg
mov
mov
adc
sahf
movsb
adc
repz
in
pop
mov
int3
fiaddl
out
pushf
scas
mov
push
jno
add
mov
and
aam
ljmp
ficoml
mov
xchg
and
sti
aaa
enter
dec
leave
dec
jg
bound
pop
cmpsl
or
movsb
mov
pop
cmpl
ss
push
xchg
int
xor
iret
sahf
scas
jo
sti
push
test
loopew
loop
push
and
inc
pop
and
enter
xchg
jnp
aaa
xchg
std
jp
xchg
lahf
popa
fsubrs
add
xor
clc
adc
sbb
pop
push
or
ror
cmp
inc
insb
push
loope
cmp
push
pop
out
jmp
cmc
jb
jne
lds
inc
mov
jge
mov
cmp
push
sar
or
xchg
add
add
mov
sbb
test
lret
dec
cld
gs
add
loopne
jl
orl
xchg
into
cmpb
fsubl
cmc
dec
or
test
jmp
push
jo
inc
adc
in
daa
sahf
in
push
inc
inc
fmulp
ja
sahf
repnz
mov
nop
in
cmpb
mov
add
cltd
and
dec
add
das
fsubrp
jmp
rcrb
sub
pusha
fwait
aam
fsts
or
dec
pop
lret
mov
jmp
pop
push
flds
dec
sbb
and
popa
ljmp
dec
int3
cmp
cwtl
sbb
xor
ds
out
jbe
stc
jb
loop
inc
cmp
dec
push
mov
mov
shll
daa
cmp
in
loopne
inc
in
mov
outsb
mov
vpmullw
je
scas
or
cmp
in
pop
cltd
popf
out
mov
pop
sub
lahf
mov
shlb
fs
daa
loopne
int
xchg
push
out
imul
iret
shlb
xchg
pop
in
push
pop
mov
lock
sarb
inc
dec
test
int
orb
int3
sti
call
mov
inc
insb
mov
js
mov
insb
jns
sub
mov
mov
xchg
mov
das
sbb
movsb
sub
mov
add
andb
jbe
jmp
bound
xor
fs
insb
sub
adc
ret
pop
test
xchg
fisttps
shr
test
lock
out
jge
fstps
orb
sbb
adc
in
pshufw
mov
lcall
pop
jnp
test
add
pop
insl
arpl
mov
pushf
mov
cmp
pop
dec
dec
rcr
aad
lret
cmp
aam
ret
jl
loope
sub
dec
or
xchg
aas
aaa
fwait
mov
mov
push
adc
push
and
cs
cltd
stos
cmpsb
push
jae
and
push
push
test
pop
sahf
adc
test
cmp
stos
aam
mov
cmp
cmp
aas
in
lock
add
lcall
rclb
dec
stos
jg
addb
jae
dec
xor
xchg
dec
in
mov
jne
or
cli
and
imul
pop
mov
out
sti
cmpl
mov
mov
cltd
or
ljmp
mov
repnz
loop
mov
hlt
pop
add
loopne
jo
add
fdivrl
mov
loopne
mov
movb
add
push
cwtl
mov
clc
in
mov
or
lds
dec
jno
sbb
pop
fwait
test
mov
inc
jo
iret
mov
jecxz
mov
mov
leave
fldz
mov
mov
mov
xchg
push
mov
sbb
insl
mov
mov
fsubs
push
test
pop
ds
mov
rcrl
je
sub
stos
jo
mov
in
jg
in
lret
cld
adc
shrb
sti
mov
sahf
dec
cmp
ficomps
mov
into
es
dec
je
mov
mov
enter
rclb
mov
or
xor
mov
lret
sbb
or
nopl
scas
cmp
sbb
lods
lcall
jnp
notb
dec
fimull
inc
jmp
mov
in
inc
xchg
stos
add
mov
inc
adc
sbb
pop
loope
xchg
push
cmpsl
shll
mov
xchg
daa
cmp
jge
mov
mov
push
cmp
sub
inc
xor
dec
add
es
push
iret
adc
loope
fnstcw
lods
xchg
mov
std
aas
arpl
mov
lods
jnp
ficoml
out
push
cmpsl
push
repnz
adc
mov
or
dec
pop
inc
out
mov
xchg
aas
pop
dec
icebp
mov
xchg
adc
mov
jo
jmp
mov
dec
mov
js
jmp
mov
push
pop
mov
jle
loopne
cld
xchg
xor
stos
lock
jnp
jg
pop
gs
es
mov
push
cltd
and
int
dec
dec
xchg
xchg
fstl
and
js
cwtl
jnp
dec
fstl
lcall
mov
hlt
loope
dec
add
mov
dec
mov
push
mov
sbb
cs
inc
aaa
dec
bound
jnp
inc
je
ja
je
fimuls
clc
data16
sbb
xchg
cltd
jne
mov
mov
xchg
mov
and
pop
or
mov
push
loop
lret
fsubr
xor
call
sbb
push
jg
dec
rclb
push
aas
clc
cmp
inc
xchg
out
mov
je
pop
push
imul
sarl
jno
fisubrs
mov
into
push
jg
cs
adc
out
jecxz
cs
sub
cmp
fcmovb
jg
xor
dec
lock
xlat
sahf
jl
stos
pop
or
mov
jo
les
mov
pushf
lcall
sub
pusha
jno
iret
ret
cmpsl
in
sbb
cmc
sbb
push
lret
roll
cmp
rcrb
leave
stc
sti
sub
cmp
addr16
lcall
lock
dec
sahf
pop
popa
inc
dec
lret
sbb
pop
sub
sbb
jle
outsb
and
mov
sar
jle
cwtl
inc
mov
sub
xchg
fistps
fstpl
lea
fdivrp
add
es
jbe
push
pushf
jg
mov
mov
in
push
mov
sbb
leave
fwait
xchg
push
push
jno
mov
xor
mov
cltd
dec
std
leave
mov
out
mov
xchg
xchg
fsubr
dec
inc
hlt
bound
repz
xor
fmuls
jecxz
jmp
test
xor
js
fcomp
outsb
cltd
pushf
jmp
lea
jp
dec
lcall
cmc
lea
push
pusha
push
les
jno
lret
jp
and
dec
fs
fs
or
inc
xchg
and
int
push
xchg
xor
adcl
shrb
loope
mov
dec
adc
jae
sub
out
or
sbbl
mov
jb
call
xchg
fsubrp
adc
or
shll
dec
jnp
jl
cmc
mov
das
pushl
aam
shlb
cmpsl
jo
mov
shrl
mov
scas
ret
mov
push
or
cmpsb
xor
mov
scas
pop
fcompl
mov
or
es
std
mov
ljmp
ss
push
into
data16
cmpsl
leave
mov
fdivrl
std
insb
mov
lods
scas
sub
or
adc
xchg
lahf
dec
mov
mov
clc
mov
mov
shrb
fdivrs
add
daa
xchg
lea
add
out
imul
xchg
rcll
or
cmp
xlat
dec
popf
sub
mov
outsb
inc
stos
stos
call
ret
mov
xor
sbb
shll
popa
or
orb
sub
mov
orl
popa
icebp
mul
mov
aad
xchg
movsb
add
cli
push
mov
mov
pop
in
dec
insb
outsl
cmp
sub
dec
sbb
mov
mov
or
mov
cmp
pop
sahf
enter
lret
push
and
stos
shrb
sarl
cmp
insl
sbb
mov
xchg
sbb
andb
push
jae
add
aaa
adc
ss
sub
jle
pop
and
mov
faddl
scas
dec
cli
movsl
or
outsl
xor
addr16
movl
mov
and
add
xor
pop
dec
loopne
shlb
leave
sub
pop
xor
hlt
outsl
xchg
cmp
sbbb
lds
pop
dec
push
pushf
push
sbb
add
in
cmp
mov
addb
adc
and
fsubs
sbb
cs
sub
fistpll
stos
mov
or
dec
ljmp
iret
mov
push
mov
pop
sbb
lret
mov
pusha
mov
mov
stc
cmp
xchg
in
mov
aaa
lahf
mov
and
clc
push
mov
stos
or
and
cmp
sbb
into
cwtl
addr16
adc
and
lds
int3
outsb
push
enter
add
push
mov
fidivs
adc
jns
fisttpll
bnd
movsl
pop
iret
pop
pop
jmp
ljmp
es
cmp
out
cmp
xor
lcall
les
cmp
jge
mov
out
hlt
ljmp
or
insl
incl
push
stos
or
cmc
imul
dec
lcall
push
sbb
jle
enter
shr
aam
stc
lahf
and
sub
out
hlt
sub
stos
jle
cmpsl
adc
jnp
orl
add
mov
cwtl
push
sbb
xor
push
call
cld
dec
movsl
add
jmp
dec
pop
or
mov
outsb
sub
jno
mov
fstpl
out
push
mov
mov
repnz
fsubrl
popf
or
ud2
lahf
push
fwait
mov
dec
jno
cmp
mov
push
xor
daa
mov
add
mov
outsl
mov
push
add
adc
ficompl
adc
dec
rcrl
insb
jmp
pushf
mov
sbb
enter
mov
fucompp
push
les
repz
aam
add
nop
sysenter
enter
pop
adc
call
call
xchg
sbbb
add
lret
iret
xor
xor
ja
xchg
aaa
stos
mov
inc
aam
and
xchg
fwait
sub
and
xor
pop
inc
mov
neg
xchg
lea
push
mov
sahf
mov
push
jge
out
mov
mov
add
jo
adcb
mov
push
xchg
dec
loope
dec
out
jle
popf
ss
xor
mov
sub
xchg
andl
lods
dec
sub
sbb
jb
loop
adc
xlat
lret
call
xor
mov
incl
addr16
or
les
pop
fs
ds
inc
inc
rol
mov
mov
jmp
outsb
mov
cmp
pop
pop
clc
lahf
cmovne
jno
mov
inc
frstor
or
fists
ds
jae
xorb
aas
hlt
in
sahf
mov
inc
xchg
in
test
jp
or
dec
xor
sub
js
divl
dec
add
in
fidivl
dec
daa
push
or
repz
inc
stos
xlat
call
stc
pop
dec
arpl
les
or
stos
mov
push
adc
sti
and
outsb
add
jo
hlt
push
inc
push
movsl
cmp
pop
ja
and
jns
gs
dec
pop
sbb
pop
pusha
fidivrl
cmp
xchg
dec
push
loopne
xchg
mov
sti
add
repz
sbb
cld
pushf
orb
xchg
lds
cmp
pop
sbb
mov
inc
sub
sahf
inc
pushf
and
out
add
andb
clc
mov
pavgw
mov
loopne
movsl
nop
mull
xchg
div
lock
adc
cmp
mov
movsb
ficoms
inc
lret
pop
dec
outsb
je
mov
sahf
fidivrs
hlt
pop
and
or
jmp
cmp
sti
clc
cmp
imul
pop
into
cmpsb
jmp
repnz
cld
popa
fidivs
pop
es
out
shl
arpl
cwtl
sbb
outsl
inc
dec
es
out
mov
aad
aad
inc
inc
jb
push
test
lret
add
mov
stos
add
lods
mov
and
mov
pop
jo
in
sbb
fsubs
ja
jp
icebp
mov
xchg
jecxz
mov
popa
jns
into
in
push
mov
adc
sub
cmc
enter
incl
and
ds
out
shlb
xchg
xor
mov
dec
fldenv
cltd
in
xor
lret
ficompl
and
dec
push
xchg
movsl
negb
push
popf
scas
pushf
inc
cs
mov
cs
dec
lahf
je
mov
dec
sub
cwtl
mov
cmc
jl
fimuls
sarl
lret
or
mov
int
pop
jp
test
inc
add
loope
mov
cmp
cmp
leave
test
stos
mov
dec
inc
mov
lods
jnp
mov
out
cmp
push
jb
xlat
pop
jl
lret
pop
mov
or
hlt
jne
inc
pop
in
sub
mov
int3
cs
mov
lods
cmp
mov
outsl
icebp
push
das
adc
repz
mov
rcrl
add
sbb
mov
dec
sub
fidivl
popa
push
call
in
and
and
jg
es
cmp
push
cmpsb
adc
xor
mov
add
pop
or
les
ja
jne
jno
aas
add
cmp
pop
loop
and
adc
mov
sub
gs
pop
sub
mov
sbb
push
xchg
sbbb
das
adc
mov
pop
fistpl
inc
loope
mov
jle
cld
leave
fs
mov
insb
pop
imul
and
or
mov
push
cmpsb
fstpt
in
xchg
push
xor
add
out
sbb
pop
xor
imul
cwtl
jp
adcb
rolb
inc
daa
or
or
cld
cmpsl
adc
pop
jb
pop
inc
jecxz
add
pusha
inc
dec
sbb
aaa
mov
iret
pop
cmp
lahf
mov
cs
or
ret
inc
call
subl
movsl
xor
lods
mov
add
xor
into
sti
lahf
lcall
push
clc
insl
and
or
push
xorl
and
pop
dec
or
inc
scas
call
ss
in
inc
daa
cmpsl
inc
mov
lods
cmpsl
fwait
or
dec
push
imul
popa
sub
and
sub
scas
pop
push
sbb
inc
aam
rolb
xchg
add
in
xor
bound
loope
push
rorb
popf
fwait
pop
xor
xor
int
ficompl
lea
call
fidivrs
pusha
cmp
popf
subb
int3
cli
sub
adc
xor
ret
iret
aaa
inc
sub
inc
pop
pop
movl
sub
cmc
lahf
cli
inc
jb
mov
adc
imul
mov
daa
movsl
sbb
in
pop
clc
inc
pop
jmp
fbld
push
fwait
cmpsb
pop
mov
repnz
fdivrl
mov
jbe
lret
cltd
mov
bound
ss
mov
fbld
mov
and
sbbl
push
inc
pusha
hlt
test
popf
negl
jecxz
mov
nop
das
and
ret
das
dec
icebp
stc
sbb
mov
sbb
xlat
or
xchg
mov
and
lret
mov
mov
loopne
push
aam
cmc
lahf
jp
jo
sub
cli
mov
mov
ror
imul
aas
sti
out
jb
call
sbb
xor
dec
adc
cwtl
sub
movsl
bound
inc
fisubs
dec
pop
push
das
mov
imul
and
popf
repnz
adc
mov
push
dec
dec
sub
push
movsb
loop
fcoml
pop
mov
jno
mov
ds
adcb
call
lea
xchg
daa
loop
mov
pop
les
ljmp
enter
icebp
std
sarb
or
stos
add
push
jmp
jle
clc
out
adc
ret
in
mov
cmpsb
mov
mov
xor
dec
cmc
adc
push
pop
lahf
jg
xchg
mov
pop
jbe
dec
jmp
shlb
inc
aad
clc
outsl
roll
add
mov
push
cmc
sti
lock
in
lds
loop
jne
sbb
out
xor
cmp
sarl
push
int3
pushf
test
push
aad
cmpsl
add
sbb
inc
enter
or
pop
addr16
mov
test
ret
sub
imul
js
js
xor
pop
cmpsb
add
xor
fisubrl
inc
sbb
add
push
sbb
lea
xchg
cmp
clc
adcb
or
and
add
test
rcll
lods
lcall
add
out
aam
dec
test
push
xor
lret
mov
xchg
sub
dec
or
dec
cmpsl
outsb
xor
mov
jno
xchg
push
bound
mov
fdivl
xchg
out
pop
mov
jmp
jne
mov
or
sarl
mov
jl
or
inc
sbb
repz
inc
sbb
out
sahf
push
xchg
ss
xor
insl
out
out
add
clc
inc
xlat
adc
cmp
push
stos
pop
aas
sub
mov
mov
mov
imul
adc
out
push
mov
cmc
xchg
sarb
sub
mov
aaa
enter
repz
mov
iret
cmpsb
cltd
pop
lret
inc
xor
dec
mov
adc
out
fcomp
pop
movsl
repnz
inc
movb
sbb
pop
hlt
xlat
jno
or
icebp
push
push
cli
arpl
adc
mov
scas
loop
dec
mov
popa
out
mov
popa
sbb
lret
inc
addb
pop
dec
dec
add
mov
scas
pop
dec
scas
fisubl
jle
add
maxps
dec
xchg
shll
mov
xchg
sbb
pop
les
enter
cmpsb
adc
into
lods
rorl
fbstp
mov
jl
mov
xchg
out
fdivr
int3
les
adc
jbe
sbb
sub
jl
dec
and
hlt
pushl
mov
mov
aaa
cmc
mov
mov
dec
or
jmp
cs
push
cmp
or
mov
lcall
movnti
sbb
mov
scas
bound
lcall
aad
mov
jae
sub
ja
cltd
arpl
mov
inc
lods
das
rol
dec
movsl
punpckldq
in
test
test
sub
cmc
dec
dec
loop
ljmp
int
inc
shrl
adc
push
dec
cmp
sarb
flds
gs
dec
add
test
jl
sub
inc
mov
cmp
jle
xchg
pop
ljmp
jno
xchg
rcrb
loop
ret
mov
jbe
das
push
sar
jbe
mov
sbb
xor
orb
int
jl
out
negb
or
lret
in
mov
inc
lret
and
mov
outsb
mov
adc
cli
jecxz
std
xchg
push
lcall
xchg
aad
out
shll
dec
sbb
mov
xchg
pop
push
cmpxchg
es
stos
ss
pop
xchg
je
inc
aas
stos
loopne
fistpl
rorl
paddusw
pop
push
add
jo
or
pop
push
into
pop
mov
push
cltd
and
in
inc
out
dec
push
icebp
outsl
cs
mov
testl
pop
repnz
fldl
scas
adc
mov
pusha
cmp
dec
test
bsr
repnz
fisttpll
fstps
insb
incl
jge
push
or
ret
pusha
mov
cmp
sbb
mov
or
orl
in
pop
jp
jmp
lret
dec
pop
pop
jle
add
xchg
cld
push
mov
lcall
icebp
mov
adc
mov
pop
ljmp
fs
push
pop
push
mov
jne
out
inc
sub
adc
jmp
pop
repz
mov
add
repz
xorb
loopne
inc
inc
xchg
sbb
inc
xor
push
mov
dec
ficoml
imulb
xchg
mov
in
cli
addb
insb
pusha
imul
in
or
add
and
fs
pusha
sub
sahf
mov
mov
xchg
jbe
jne
and
sti
dec
push
xor
mov
push
clc
fstl
adc
inc
addr16
cmp
mov
fisubrl
mov
leave
daa
stc
out
popf
adc
imul
push
icebp
dec
jne
mov
xchg
into
addr16
push
jbe
mulb
mov
cmpsl
stos
xchg
lods
sub
or
imul
add
sahf
pop
adc
mov
data16
and
movsl
xlat
popl
data16
pop
dec
stos
dec
adc
fstp
adc
xchg
enter
pop
ss
push
aad
xchg
inc
ja
xor
inc
lds
fistpll
in
xor
dec
out
jmp
xchg
cmp
pop
jno
and
lahf
inc
pop
lret
inc
push
xchg
push
xchg
pop
mov
dec
in
call
lret
mulb
iret
aaa
adc
enter
mov
scas
jne
leave
cmpsb
mov
sbb
add
add
fildl
nop
fstpt
push
bound
cmp
and
out
inc
mov
and
xor
aam
xchg
sub
lcall
in
pop
fdivrp
push
or
adc
mov
pop
adc
mov
fwait
addr16
inc
in
mov
pop
ret
lret
pop
mov
cmpb
and
pop
mov
jge
mov
xchg
push
mov
lods
fucomp
mov
aaa
ljmp
shlb
push
addr16
dec
data16
int3
adcl
xor
mov
mov
mov
mov
mov
into
add
sbb
hlt
xor
imul
or
std
ds
xchg
pop
sbb
test
repnz
jno
insl
pop
adc
outsb
add
aaa
jmp
cmp
mov
ucomiss
xchg
push
mov
arpl
dec
xchg
popa
add
mov
mov
pop
es
cmpsl
sti
and
mov
outsb
or
divl
mov
cld
mov
add
js
pop
push
loop
ljmp
mov
js
or
or
cld
mov
and
xchg
fcom
jb
and
mov
aaa
inc
outsl
xchg
xchg
repz
sub
imul
push
shll
faddl
std
jle
shll
inc
or
lock
and
adc
mov
xchg
jo
aam
pop
jno
sti
and
aam
and
and
cmp
and
loop
jp
or
loop
sahf
shll
cmc
add
sbbl
scas
or
or
inc
mov
cmp
add
ds
xchg
fisttps
pop
and
out
pop
loop
or
mov
xchg
je
xlat
xchg
lock
les
lock
pop
pop
je
inc
add
icebp
cmp
std
jp
push
and
mov
sahf
lahf
fs
aaa
xchg
adc
cs
fmuls
out
and
mov
mov
cmp
loop
push
jne
lods
mov
jb
inc
mov
ret
gs
or
pxor
les
mov
add
pushf
pop
mov
mov
fisubrs
dec
mov
fnstenv
lret
out
je
lods
sub
push
pop
jae
es
mov
jg
mov
inc
jp
mov
mov
xchg
jb
pop
push
sti
push
add
lock
ret
insl
and
xchg
pop
in
push
jbe
aaa
fs
les
xchg
out
pushf
insl
nop
outsl
ror
imul
addb
movsl
and
outsb
in
test
ret
mov
rorb
push
dec
andl
xchg
inc
dec
push
pop
mov
in
out
sbb
mov
aam
dec
pop
add
adc
in
pop
inc
push
subb
push
sbb
in
push
add
hlt
leave
jno
push
mov
inc
iret
repz
repnz
lods
and
push
pushf
mov
ss
lret
pop
jae
ja
in
fldl
and
push
test
push
loope
and
lods
mov
push
cwtl
cltd
xchg
mull
xchg
and
pop
mov
daa
push
cmp
leave
shlb
jp
add
push
call
imul
xor
dec
mov
inc
jbe
in
ss
sub
pop
ret
gs
outsb
xchg
jnp
push
xlat
mov
dec
in
sarl
and
cmpsb
push
xchg
fiadds
sub
sub
ss
mov
or
fistl
sahf
mov
int3
push
ja
cmp
test
aaa
and
cltd
pop
pusha
aas
push
or
aaa
and
xchg
jbe
xchg
fisttpl
dec
fstpl
shll
vpunpckhqdq
test
add
add
cwtl
ljmp
adc
sub
jl
mov
mov
push
pop
mov
sub
xchg
push
dec
insb
cmp
test
and
mov
divb
mov
pop
jnp
insl
test
imul
inc
lret
pop
into
jno
aas
sub
mov
and
imull
scas
gs
dec
imul
add
and
inc
and
fs
xor
push
bound
xchg
push
repz
jp
pop
outsb
or
aad
mov
xor
cmp
mov
jl
mov
jns
pop
test
inc
scas
jns
jno
xor
into
cmp
add
sub
mov
mov
mov
mov
lds
pop
lcall
push
insl
int
push
jp,pt
cmc
sbb
xchg
jg
cmp
jmp
pop
inc
pop
and
cld
insl
xorl
loope
push
push
lods
fwait
cli
and
xor
xchg
sub
imul
lea
pusha
add
xchg
sbb
lret
in
and
mov
dec
mov
jns
cmpsb
stos
jo
jb
jo
adc
fs
test
movl
daa
ja
mov
rorl
lret
mov
cmc
mov
jb
or
inc
xlat
mov
ljmp
mov
cli
or
leave
scas
stos
scas
xor
dec
sti
mov
dec
sbb
dec
push
lods
add
sub
scas
fimuls
jle
dec
jo
in
adc
pop
mov
or
cltd
pop
cmc
sub
push
jle
and
nop
dec
jmp
in
insl
test
cmpsb
xor
pop
push
ret
cvtpi2ps
mov
into
call
sub
adc
xor
out
arpl
add
cmp
or
out
lret
cmp
pop
mov
icebp
jo
push
aam
pop
adcl
xchg
lea
inc
cs
add
xchg
and
push
jo
dec
sub
xchg
movsl
mov
nop
enter
fildl
push
push
push
lea
loop
add
lods
wrmsr
les
and
adc
movsb
dec
int
push
gs
mov
inc
mov
mov
leave
imul
xchg
in
inc
inc
loop
jle
jl
idiv
idivl
loop
lahf
xor
movsl
jo
and
sub
adc
mov
sbb
rcll
loopne
push
adc
fs
cmp
mov
scas
pusha
popf
sub
push
cld
outsl
in
jb
push
out
stc
movsl
pop
xor
pop
adcb
and
fwait
popf
mov
xor
in
fcompl
dec
stos
enter
pop
insl
hlt
or
test
push
clc
push
loopne
cmpsb
mov
mov
jns
or
mov
sbbl
jae
test
xor
fsubl
add
or
ljmp
sahf
insl
daa
sbb
cmp
cmpsl
xchg
cs
pop
scas
test
mov
push
cmpsb
mov
or
sub
jp
divl
adc
sti
in
pop
aam
gs
push
divl
mov
aam
cmp
xor
and
xor
ret
xchg
pop
sahf
xor
jbe
and
mov
sbb
icebp
adc
cs
lods
xchg
fidivrs
add
outsl
mov
pop
sub
int
stc
xchg
rcll
mov
std
addb
fildl
mov
xchg
pop
xchg
xchg
sti
jg
xchg
aam
mov
scas
push
cmpsb
push
jns
sbb
aad
addr16
cmp
data16
push
or
repnz
mov
fnstcw
cbtw
adc
add
cli
jecxz
mov
idivb
repz
shr
add
es
push
std
aas
ret
inc
fs
inc
add
jle
aaa
fldl
jns
cmpsl
mov
inc
push
cmpsl
loopne
mov
jbe
inc
mov
rcll
or
ret
cld
iret
or
sub
into
xlat
jae
and
pop
fstpt
bound
pop
mov
pop
stos
sub
dec
pop
xchg
out
aam
push
mov
mov
pop
enter
test
xchg
cmp
aam
push
out
xor
faddl
push
ret
sub
inc
pop
movb
adcl
sbb
jns
push
or
aad
mov
into
add
jne
adc
imulb
jne
repnz
mov
in
movsl
jle
pop
dec
xchg
nop
cld
jge
testl
rcrb
cltd
dec
fnstcw
das
aas
mov
dec
inc
aad
jmp
aam
ds
sub
add
xchg
xorb
push
adc
out
adc
mov
dec
movl
jp
decb
fcoms
rorl
test
mov
cmpsl
mov
jae
rcll
mov
ja
jl
mull
xor
test
roll
dec
test
mov
mov
sbb
mov
push
xlat
adc
or
pop
mov
mov
jecxz
fs
repnz
fwait
xchg
inc
shrl
mov
out
repnz
push
sbb
jmp
ret
inc
xchg
sbb
jle
shll
sbb
pop
shlb
and
nop
sub
push
in
push
loopne
lods
adc
cld
sbb
mov
fwait
nop
fldenv
pop
lock
adc
add
adc
push
mov
filds
std
mov
ret
ds
in
cli
push
and
aaa
movsb
insl
je
inc
pop
lods
mov
aad
sub
je
sahf
jg
mov
pop
pop
lcall
dec
out
jbe
sbb
xchg
dec
dec
fldz
jecxz
imul
push
imul
ror
pop
ret
mov
dec
xorb
out
and
out
mov
jbe
loopne
rcr
mull
xchg
arpl
rorl
inc
mov
push
cmp
cmp
and
xchg
sub
pop
mov
jmp
mov
dec
or
push
jecxz
mov
cmp
out
jmp
jmp
mov
dec
xchg
inc
pop
add
pop
loope
bound
xor
inc
movsl
xor
mov
movsl
inc
lahf
jb
mov
fstps
mov
cwtl
arpl
mov
adc
scas
lea
imul
fbld
fisubl
aaa
loope
aaa
cmp
pop
jg
xor
sbb
mov
xor
test
jns
adc
pusha
icebp
mov
mov
nop
out
aad
nop
mov
les
mov
push
aas
in
dec
sahf
les
mov
add
sub
xchg
int
fwait
and
xchg
mov
stc
fyl2x
shr
test
inc
cmp
fwait
pop
pop
xchg
fisttpll
xchg
push
out
pop
jmp
or
pop
call
jo
push
pushf
cld
imul
sbb
jmp
gs
inc
inc
leave
in
imull
adc
sarb
sbb
inc
jmp
or
aas
adc
mov
lods
fildll
into
js
add
stos
cmp
xor
std
idivb
jecxz
test
and
cmp
jge
out
hlt
fsubl
lods
shl
lods
popf
iret
or
ds
xchg
push
xor
in
popf
lods
mov
push
mov
lds
fiaddl
mov
cmp
leave
pop
ret
sbb
adc
dec
test
ret
dec
clc
mov
push
sub
negb
int3
mov
ljmp
jmp
and
and
xchg
shl
add
repnz
pop
mov
in
add
daa
inc
scas
aam
sahf
sub
sbb
xchg
lods
jecxz
cs
dec
lea
outsb
mov
scas
imul
xchg
add
nop
or
xchg
jmp
add
andb
push
pop
push
mov
and
push
lods
and
fidivs
shll
jo
cmp
cmp
jge
ss
sbb
add
pop
xor
mov
sub
and
fadds
loopne
inc
and
mov
lock
xlat
cmp
aad
xchg
jno
fmuls
jg
pop
lea
test
mov
jne
scas
subb
xor
mov
sub
fnstenv
dec
rcl
sbb
or
scas
jnp
popf
dec
jle
lock
neg
jb
fisttpl
inc
dec
data16
dec
lods
enter
icebp
push
adcl
inc
jg
shl
icebp
cmc
int
fiadds
stos
cmpsb
cmp
int
loope
sbbl
movsb
cmp
add
xlat
iret
ja
and
push
jns
or
push
lret
add
and
mov
cs
sbb
std
sti
mov
lods
dec
xor
repnz
outsb
adc
out
cmp
bound
lods
negb
movsl
aad
inc
mov
das
lock
mov
sub
test
xlat
mov
frstor
push
and
xor
dec
inc
push
ror
jg
sbb
scas
daa
addl
popa
lea
pop
rorl
push
cmp
add
mov
sbb
mov
and
aad
sbb
rcl
rclb
mov
loop
pushf
mov
cld
xchg
inc
pop
cwtl
gs
pusha
ret
subb
test
add
xchg
cmpsl
and
sub
mov
sub
xor
xchg
or
sbb
jae
rcll
xchg
lea
adc
in
xchg
out
mov
int3
mov
sub
sbb
sub
cmp
jnp
pop
out
ds
cmpsl
enter
outsb
rcrb
mov
push
pop
pushf
setns
cmp
xchg
clc
out
stc
sbb
cmpsb
fwait
push
or
stos
cmp
add
orb
mov
pop
push
pop
inc
push
gs
sbb
aad
movsl
dec
rcll
sahf
push
push
xchg
pop
pop
or
inc
sub
ret
mov
mov
setl
push
ljmp
call
add
test
cs
cmc
push
xor
int3
iret
cld
mov
mov
add
pop
push
sub
mov
data16
add
int
enter
pop
cmpsl
jae
lds
in
dec
push
iret
pop
cwtl
shll
pop
dec
test
sahf
push
mov
lea
pop
jp
mov
pop
std
mov
add
xchg
lret
sbb
add
xor
jg
test
xchg
or
adc
push
mov
mov
rcr
movsb
push
inc
push
adc
test
test
or
mov
cmpb
into
leave
lcall
sbb
jmp
cmp
mov
and
mov
add
lods
mov
xchg
cmp
popl
es
sub
dec
inc
mov
rorb
sub
jno
sub
je
test
scas
rorl
jmp
push
adc
es
ss
pop
les
mov
push
cmpsb
mov
xor
xchg
push
ds
ss
lret
or
xlat
mov
push
dec
hlt
push
sahf
shll
or
mov
iret
add
cld
add
mov
push
or
in
sbb
push
test
push
cmp
cmp
stos
loopne
xchg
dec
cmp
stc
out
fimull
icebp
jno
dec
pop
mov
or
jo
cmp
js
js
sub
incl
dec
lret
adc
repnz
cmp
inc
add
xlat
xor
mov
add
pop
lret
leave
leave
lret
mov
sub
aam
mov
stos
paddd
inc
clc
cmpsl
mov
lahf
jne
inc
inc
sbb
cmp
xchg
aaa
into
mov
ds
mov
jne
inc
or
xor
or
leave
decl
inc
xchg
stos
aas
pop
int3
jecxz
sub
lods
dec
mov
imul
data16
aas
xchg
rorl
loop
mov
sub
lret
push
lahf
jle
push
out
mov
int
push
inc
fmuls
sub
insb
cmpsl
dec
ret
movb
clc
lret
and
clc
pop
mov
popa
pop
leave
hlt
aas
and
mov
clc
add
sarl
mov
jns
add
loop
jae
fucom
arpl
xchg
sub
ds
adc
fimuls
jl
cltd
xor
add
std
xchg
xchg
out
gs
and
mov
push
inc
push
jecxz
aad
sbb
sub
std
jecxz
sbb
adc
ss
rcrb
je
adc
imul
xor
push
adc
loopne
jp
or
lret
lods
ss
shrl
stos
pop
divl
and
jbe
mov
stos
mov
mov
mov
nop
mov
pop
lock
cmpsb
nop
lea
in
call
sti
fsubr
xchg
std
ja
out
push
repz
testl
mov
scas
push
arpl
in
jmp
scas
aaa
es
movsb
mov
cmp
repz
lods
jle
inc
call
lods
icebp
fistps
jmp
es
stos
aaa
mov
stos
fbstp
push
push
sbb
fdiv
loop
add
cmc
xor
xchg
shl
mov
jno
aas
push
xchg
repnz
xchg
jg
xor
test
pop
fidivs
leave
inc
ja
vmwrite
test
pushf
pusha
mov
insl
jbe
repz
mov
ret
cmp
mov
add
out
dec
dec
arpl
mov
lods
lods
mov
mov
add
fs
adc
stc
fs
stos
fs
pop
mov
mov
ret
andb
fisubs
push
inc
dec
add
sbb
notl
std
sarb
and
mov
fistpll
pop
push
mov
xchg
jae,pt
jae
repz
adc
test
push
xchg
outsl
es
sahf
xor
adc
leave
push
lock
adc
add
xchg
or
dec
dec
ret
and
lods
pop
inc
dec
insl
inc
gs
movsb
and
push
adc
pusha
xorb
jmp
add
cmc
popa
pop
in
int
push
jecxz
xchg
pop
arpl
add
popf
pop
adc
add
inc
adc
xor
sub
shl
inc
shlb
mov
rcll
scas
inc
xchg
inc
mov
jge
inc
or
imul
in
js
shll
push
ficomps
xor
out
and
push
lret
mov
hlt
cmp
mov
jo
mov
sahf
cmc
sub
into
mov
fnsave
imul
and
in
andl
shl
dec
adc
ret
or
and
ljmp
xchg
stos
ja
lock
lods
mov
or
push
add
sti
imul
xchg
add
push
outsb
aam
dec
mov
out
dec
mov
fs
lcall
push
fcoms
adc
mov
push
sarl
test
pop
dec
sbb
mov
fnstenv
ror
xchg
sbb
xchg
sbbb
xor
dec
in
lahf
ja
push
sub
or
pushf
dec
je
aam
test
out
mov
mov
mov
imul
xor
jp
pop
mov
cmpsl
xchg
mov
insl
int3
pop
push
or
lret
inc
xor
mov
scas
pop
fs
mov
mov
fdivrs
add
in
shl
movsl
iret
and
xor
lahf
dec
mov
call
xor
aas
and
push
xor
arpl
enter
xchg
loop
pop
xchg
sub
push
shrl
mov
mov
xchg
mov
imul
sbb
leave
dec
cld
ret
mov
lret
jae
adc
or
mov
add
sti
dec
mov
add
in
stos
lds
lods
sbbl
mov
mov
jecxz
fsts
adc
frstor
loop
mov
dec
imul
pop
xchg
aam
pusha
gs
stos
sbb
jns
adc
dec
jbe
inc
xchg
aad
add
xlat
ss
enter
shl
mov
leave
mov
sbb
jg
or
out
dec
push
pop
in
jae
call
jb
mov
push
add
fiaddl
pop
shlb
js
xor
pop
sbb
mov
aad
jae
cmp
pop
cld
pop
adc
xlat
push
int
aas
cmp
mov
sbb
and
cli
push
outsl
xor
mov
adc
outsl
das
cwtl
push
xchg
clc
fldl
das
and
lea
mov
push
es
push
mov
clc
mov
xchg
loopne
das
cmp
adc
push
mov
dec
data16
sbb
or
push
das
jmp
cmp
xor
rorl
xchg
pop
lcall
and
clc
dec
xchg
dec
pop
lret
or
fnstcw
inc
dec
cmpsb
cmp
push
add
add
notl
add
xor
fistpll
movsl
js
aam
in
dec
push
repz
xlat
cli
stc
dec
ret
mov
push
mov
imul
imul
jle
popf
jmp
push
stc
jns
icebp
push
xor
sub
xor
xor
jl
loopne
push
or
pushf
cmpl
les
xchg
xchg
and
xchg
jl
stos
mov
out
xchg
shl
cmp
outsb
icebp
push
negw
je
lock
and
mov
and
out
adc
adc
sbb
fwait
into
sti
mov
adc
or
pop
sahf
jb
jae
mov
out
jae
dec
adc
arpl
je
loopne
cmpl
mov
outsl
subl
iret
fnstcw
pushl
jge
stos
insb
leave
lret
neg
push
xchg
push
in
loop
rcll
inc
sub
sub
addr16
sahf
dec
and
scas
bound
es
sahf
mov
iret
fldenv
fdiv
mov
in
add
lea
mov
lods
push
aaa
add
imul
sarb
or
mov
mov
xor
bound
imul
or
stc
inc
mov
data16
lods
push
jp
or
in
push
iret
clc
push
sti
inc
mov
fdiv
imul
pop
sbb
mov
add
push
test
xchg
cmp
scas
push
mov
loope
lods
outsb
or
cmpl
push
add
in
xlat
dec
ret
dec
pop
and
mov
shll
cli
sbb
jb
imul
lret
cmc
lock
mov
xor
inc
jno
sbbb
addl
rcll
cmc
sbb
mov
adcl
jo
xchg
jae
fnstcw
mov
mov
and
inc
cmpw
sub
fsubrl
xorl
movsb
jmp
adc
dec
xchg
xchg
add
push
incl
xlat
sub
and
outsb
jmp
sub
xor
pushf
push
in
xor
jb
movsl
popf
stc
push
add
pop
sbb
stos
inc
int3
jns
aad
lods
pop
roll
cmpl
push
cmpsb
inc
xor
test
in
popa
movsb
push
cmpsl
flds
sti
ds
adc
mov
cmc
sub
jno
push
or
pop
sbbl
or
jnp
push
lock
insl
dec
add
imul
push
cmp
add
push
inc
jmp
jns
shll
sub
cmp
mov
sbb
push
sub
pop
or
pop
inc
xchg
sbb
mov
sbb
adc
icebp
fdivl
adc
sbb
or
in
mov
popa
mov
push
in
cmpsl
clc
pop
sbb
jb
loop
sbb
gs
xchg
jg
imul
mov
adc
adc
leave
jle
push
pop
loopne
xchg
push
and
sahf
mov
jmp
pop
shlb
mov
loop
jp
cmpsl
adc
ss
cltd
mov
lret
rorb
mov
add
nop
or
inc
movsl
mov
or
push
sub
mov
pop
inc
xor
push
mov
in
xor
flds
sarl
pop
and
jae
test
ljmp
scas
mov
push
mov
mov
js
mov
stc
or
mov
sub
mov
add
add
es
inc
mov
dec
sub
inc
sbb
jmp
xchg
sub
inc
pop
sarl
mov
arpl
insl
and
repnz
lods
mov
sarb
aam
or
popa
dec
sahf
pop
or
mov
and
xorl
inc
inc
add
add
les
mov
mov
in
sbb
cmpsb
inc
and
aaa
pop
movb
test
xor
cmp
lods
push
enter
inc
aam
sti
mov
or
inc
lret
mov
jo
fcmovu
adc
cmpsl
xor
dec
mov
or
add
sub
xchg
or
cmp
xchg
cmpsl
inc
mov
lcall
cli
ja
lds
sub
jae
test
mov
je
sub
loope
into
mov
gs
fcoms
in
and
or
int3
out
lock
not
rcr
lods
cmp
lcall
or
aad
mov
scas
jp
dec
les
cmpsb
fdivl
mov
push
sahf
lods
mov
ljmp
xor
imul
cli
add
mov
push
sub
inc
mov
outsb
lds
xchg
loope
fistps
push
cmpsb
int3
clc
ret
push
out
in
pop
sub
inc
subb
xor
test
cli
scas
fdivrl
and
add
aas
sbb
movsb
sbb
in
inc
dec
add
fistpl
loop
out
and
insb
insb
mov
inc
pop
mov
sahf
jecxz
pushaw
test
xor
popf
mov
push
cmp
sub
pop
testl
pop
add
shl
je
popa
aad
dec
xor
mov
lret
lcall
mov
adc
fcomps
push
aad
out
in
fwait
out
sub
dec
imul
es
repz
pop
lret
ss
orb
mov
sbb
fwait
cmpsl
push
movsb
jno
push
es
jmp
xchg
adc
ret
hlt
mov
mov
fdivs
mov
xor
nop
lds
sti
push
mov
iret
pop
dec
shlb
mov
mov
add
imul
data16
pop
dec
shll
cmp
and
hlt
jge
cmp
xchg
xor
push
mov
repnz
lret
std
mov
insb
test
jne
repnz
or
mov
cmp
inc
repnz
cmpsb
out
daa
sub
mov
nop
mov
jg
jnp
lods
pop
movsl
pop
add
dec
jp
shll
dec
and
mov
addb
sbb
gs
bound
shll
xorl
sbb
mov
dec
jnp
inc
ss
andl
jg
leave
lret
and
push
call
jecxz
mov
mov
loopne
jmp
mov
das
aaa
decb
imul
test
mov
pop
jge
adc
push
int3
sti
jmp
mov
les
mov
dec
les
out
push
cmpsb
out
or
loopne
push
mov
jge
and
mov
or
mulb
je
pop
sub
fisubl
ja
xlat
ljmp
pop
popf
in
bound
gs
cmp
push
push
xchg
mov
adcl
jmp
push
leave
pop
lret
sbb
jp
bswap
jne
push
mov
push
add
mov
pop
cmpsl
pop
adc
aad
lret
mov
cs
xchg
xchg
ffree
leave
mov
test
push
or
adc
inc
icebp
push
mov
sub
cmp
dec
mov
lretw
dec
adc
sahf
shlb
add
sbb
stc
icebp
subb
push
cmp
mov
push
mov
inc
movsb
mov
mov
mov
popf
das
jbe
pop
iret
cmpsl
mov
or
push
inc
and
in
jbe
pop
jecxz
jbe
mov
pop
aaa
sub
pop
mov
dec
inc
add
pop
imul
hlt
jp
mov
sbb
push
nop
adcb
cmp
add
int3
outsb
push
push
sub
mov
subl
iret
lock
adc
inc
xchg
lcall
fcoms
fwait
sahf
dec
sub
cmpsb
addr16
jmp
out
ficoml
adc
sti
addb
loopne
add
jo
out
mov
loope
adc
mov
in
je
jl
push
pop
sbb
sbbl
rcll
pop
jl
pop
mov
pop
mov
fwait
repz
fcoml
xor
and
jbe
mov
push
std
push
ljmp
pop
mov
mov
fildl
in
cmpsl
fsubs
jle
xchg
xlat
push
lcall
clc
dec
js
mov
jnp
aas
or
int3
jmp
jle,pt
dec
mov
sbb
sub
rcrl
xchg
inc
shlb
jne
jns
mov
mov
popf
cmp
pop
dec
lret
movsb
sbb
mov
ret
inc
cltd
mov
movsl
fadd
jecxz
or
aaa
pop
stos
loop
pop
inc
sub
or
and
push
clc
jne
mov
aaa
and
adc
cli
loope
aaa
inc
repz
sti
sbb
sub
cld
lods
lea
fs
out
bound
call
cmp
in
ss
jg
push
and
sar
xorl
ret
outsb
es
mov
push
push
adc
lods
ret
clc
ret
scas
adc
fimuls
xor
cltd
inc
mov
int
pushf
pusha
and
cmp
push
aad
or
sub
push
adc
and
stos
mov
xor
mov
xor
test
fstps
push
stc
push
out
xchg
test
pop
or
mov
fstl
out
pop
arpl
pop
inc
pusha
pop
cmp
cmc
int
iret
inc
jbe
std
shll
arpl
lahf
ljmp
int
das
outsb
out
dec
pop
lods
js
adc
cld
pop
sub
dec
ss
fldt
dec
das
pushf
insl
pop
aas
pop
adc
sub
pop
outsl
adc
cmp
xor
inc
jg
push
nop
mov
mov
lods
stc
push
mov
pushf
mov
in
pop
mov
xor
scas
arpl
leave
testb
pusha
bound
pop
fcmovu
xchg
mov
pop
mov
dec
adc
repnz
stos
hlt
notl
fidivs
into
pop
xlat
daa
mov
xchg
lock
or
xchg
sub
xchg
sub
mov
add
mul
imul
dec
pop
in
scas
scas
dec
aas
xor
push
xchg
and
push
inc
push
inc
mov
lock
cltd
cmpsb
sbb
ret
sbb
adc
ret
repnz
scas
loope
push
sahf
hlt
shlb
pop
aad
sbb
and
out
adc
xchg
pushf
push
movb
inc
mov
scas
pop
popf
dec
outsl
int
repnz
pop
fildll
ljmp
cmpsl
bound
mov
aad
dec
fldcw
pop
les
sti
push
je
xchg
push
xchg
test
data16
pop
mov
js
stc
rcrb
dec
dec
das
mov
adc
mov
iret
mov
mov
in
cmpsb
inc
xor
jmp
je
jge
pop
mov
mov
dec
adc
xor
testb
sub
mov
pop
pop
dec
lahf
fimull
test
push
cli
clc
xchg
and
sbbl
movsl
js
shlb
aam
cmp
pop
aas
jno
push
subb
cltd
rcrb
dec
mov
pusha
outsb
pop
cltd
loopne
and
jbe
cmp
ss
stos
test
lret
sahf
cmc
ret
nop
pop
sahf
add
clc
adc
into
inc
popf
mov
adcb
mov
mov
movsb
pop
push
adc
rcrl
cmp
push
arpl
or
mov
ljmp
xor
ljmp
insl
mov
mov
std
pushf
adc
mov
dec
pop
cs
cmp
adcb
pusha
lods
aaa
fsubs
inc
and
mov
scas
aam
mov
mov
je
mov
xor
sbb
into
pop
ds
inc
cmp
cmpsb
sub
repnz
pop
imul
outsl
and
dec
jg
fwait
ss
stos
push
movsl
test
lds
ds
mov
std
pop
out
add
cltd
jnp
mov
ret
xor
outsb
dec
adc
dec
shrl
hlt
mov
and
lock
xlat
jge
lods
push
mov
cmp
push
je
mov
das
popa
cmp
add
addl
pushf
pop
std
mov
push
int3
jecxz
cmp
fs
into
mov
pop
insb
push
cli
push
pop
lods
out
rep
insl
jns
fistps
fwait
outsb
imul
lea
lods
fisubrs
jecxz
or
add
xlat
leave
or
cmp
push
arpl
jg
fwait
imul
in
test
add
pushf
in
fidivrl
mov
mov
sbb
das
or
sbb
loope
std
jno
ss
and
into
jmp
xchg
movsb
inc
sub
scas
jg
das
push
and
cmp
sub
sti
cld
pop
lea
sahf
in
call
fildll
lret
cmp
outsl
gs
insl
xchg
ret
mov
rcrb
adc
ret
jl
or
popl
mov
and
pop
push
fbld
push
outsl
ljmp
ret
xchg
or
imul
test
mov
lcall
cmp
rcl
rorl
enter
cmp
out
ds
test
lds
insb
xchg
push
adc
test
rcr
je
in
or
pop
push
and
sahf
jge
or
iret
dec
or
imul
adc
imul
fcomp
inc
push
sub
ficoms
cmp
orb
fisubrs
ds
call
inc
pop
dec
cmpsl
mov
xchg
ljmp
arpl
sarb
popl
testb
movsb
mov
out
mov
push
aaa
lcall
ret
or
aam
push
gs
mov
add
jg
adc
mov
imul
xor
pop
adc
imul
rorl
push
loopne
mov
sbb
inc
inc
push
divl
or
scas
out
mov
movsb
es
xlat
push
fdivs
pop
adc
dec
jo
mov
arpl
dec
stos
sub
push
aaa
push
fiadds
push
in
inc
popa
pop
test
mov
fisttps
xchg
sbb
cmp
test
jbe
xlat
aaa
adc
pop
addr16
lahf
and
mov
pop
xchg
xchg
loopne
out
data16
in
cmp
mov
or
shlb
outsl
scas
je
imul
into
and
cli
mov
push
cmp
mov
aaa
jecxz
dec
xor
imul
xor
mov
lret
pop
or
movd
jge
pop
sbb
ljmp
mov
pop
fscale
pmuludq
mov
xchg
cltd
inc
shl
cld
pop
add
pop
mov
je
sarl
or
pop
push
inc
test
jnp
icebp
repz
jg
lods
mov
sub
test
push
jl
mov
xor
xor
icebp
xor
rcll
push
push
xchg
out
cmc
add
sbb
mov
mov
fucomi
mov
lret
mov
cmp
fcomps
outsl
jns
ret
adc
jle
mov
out
cmp
fsts
in
lods
outsl
xchg
shrb
cmc
xchg
daa
adc
clc
inc
xchg
bound
js
sbb
mov
and
xlat
xchg
ficoms
test
das
int
mov
scas
ja
xor
in
or
push
mov
and
push
cld
adc
xor
pop
jle
add
jne
rcrl
aaa
outsb
loope
in
mov
mov
xor
in
outsl
sbb
jne
lock
lret
je
adc
push
cmpsb
sbb
adc
in
repz
push
imul
mov
sbb
nop
push
dec
mov
test
in
dec
pop
push
sahf
and
or
jg
jno
adc
popf
leave
int3
mov
and
ds
push
push
jmp
in
std
mov
mov
adc
ja
in
hlt
fs
add
inc
and
cmp
and
pop
in
jne
stos
lock
data16
pop
popa
sbb
push
push
xorl
addl
and
push
in
enter
iret
jnp
sbb
jb
fdivrl
xchg
das
jmp
sbb
addr16
and
add
pop
ja
dec
sbb
pop
sub
xchg
fidivl
mov
mov
jns
dec
mov
dec
mov
arpl
les
mov
add
ret
mov
cmpsl
shl
das
sub
pop
mov
mov
sub
lods
aam
pop
popf
xchg
es
int3
xor
sub
mov
loope
stc
dec
das
mov
push
hlt
lcall
cmpsl
decl
pop
push
sub
imul
xor
divl
les
shlb
and
inc
jne
xor
adc
gs
xor
jbe
lret
gs
sti
fst
add
movsl
mov
cmp
sub
cmp
mov
pushf
subb
ror
mov
sub
mov
cmpsl
jo
inc
repnz
ja
push
mov
sti
loope
mov
fcomps
shll
xchg
sub
test
cmpsb
xchg
push
ss
xchg
rcrl
pusha
notl
lods
add
push
mov
mov
pushf
adc
inc
mov
jge
xchg
push
xchg
mov
mov
mov
sub
xchg
mov
js
mov
les
lock
je
mov
sbb
lcall
addr16
jo
push
pop
inc
xchg
inc
push
shl
sbb
mov
mov
iret
and
sbb
es
jno
inc
inc
lret
and
movsb
dec
lods
push
inc
lcall
js
cs
popl
lods
nop
fwait
pop
and
jle
lcall
xacquire
sahf
pop
fildl
mov
and
mov
jae
dec
cli
jp
xor
xchg
mov
lahf
shl
cmc
ds
es
out
push
mov
and
xlat
pop
sub
movsb
out
ljmp
push
cmp
fistl
xor
aaa
lods
jbe
movsb
test
loopne
test
imul
push
data16
push
in
jl
sub
mov
adc
sbb
insb
orb
mov
lock
cmp
pop
iret
ficompl
mov
push
pushf
roll
push
out
test
test
inc
lds
jbe
push
hlt
and
jg
addr16
mov
pop
xchg
pop
ljmp
leave
or
sub
adc
push
pop
jg
xchg
enter
push
cwtl
xchg
dec
cli
imul
and
cmp
mov
cmc
call
sub
shlb
and
jecxz
adc
das
xchg
dec
popf
sbb
in
push
add
add
inc
addr16
sbb
cmc
pop
xor
mov
jg
or
xchg
push
in
adc
mov
push
iret
mov
clc
fbstp
dec
mov
cmc
adc
icebp
mov
mov
adc
cmp
dec
mov
iret
mov
aam
call
fistpl
popa
and
stos
cld
dec
les
fcoml
and
std
popf
addr16
outsl
fsqrt
rorl
mov
push
pop
popf
mov
push
xchg
int
mov
rcrl
in
sub
cmp
call
cmp
orb
out
cmp
mov
test
lret
xchg
das
jecxz,pt
cmp
mov
mov
rolb
out
and
lret
jb
xor
xchg
add
cmp
lcall
sub
pop
mov
mov
nop
pop
test
or
pop
xor
or
pushf
adc
sub
mov
push
hlt
loopne
jae
mov
pop
jl
and
jp
mov
push
pop
fs
idivb
scas
mov
xor
scas
xor
das
fnstsw
cmp
push
ljmp
jnp
xchg
in
adc
jge
addr16
fwait
xchg
add
mov
xor
imul
movsl
push
jp
fcoms
mov
in
mov
jbe
xor
dec
ret
lar
mov
ficoml
and
js
sti
test
adc
sti
xlat
or
jae
aaa
fs
fstps
stos
mov
movsb
mov
add
jne
inc
sbb
je
stos
jbe
pop
jae
and
add
lods
push
mov
push
mov
ljmp
pop
stc
and
insb
pushf
insb
lds
lds
push
mov
jbe
imul
inc
mov
adc
add
aad
std
fcmovnu
pushf
inc
test
loope
es
jb
fldlg2
movsl
movsl
gs
mov
scas
push
aam
jo
insl
fnstsw
xchg
cmp
fmull
les
jo
pop
loop
fimuls
insl
mulb
jge
jns
mov
xchg
or
sahf
ret
mov
mov
fldenv
xchg
xchg
cld
test
andb
mov
imul
fnsave
adc
leave
jmp
jne
xchg
mov
mov
pop
cmp
and
add
cmovge
pusha
pop
mov
jb
pop
daa
adc
outsb
sti
test
fisubrs
inc
stos
shrb
icebp
adc
hlt
sbb
es
hlt
movsl
lret
mov
sbb
fdivp
test
pcmpeqd
pop
cmp
and
ret
hlt
js
sahf
dec
mov
jo
repnz
fistpll
push
enter
inc
and
in
push
shrb
sbb
mov
push
es
subb
jecxz
jnp
push
xchg
dec
loop
mulb
or
push
cmp
inc
fists
jns
jecxz
jno
jae
xchg
arpl
repz
shlb
or
sarl
pop
aas
sbb
xorl
daa
push
lock
cmc
sahf
into
push
jnp
cli
cmp
and
dec
and
sub
jb
cmpl
jl
inc
pop
shl
sti
ljmp
and
xlat
jl
jnp
sbb
inc
adc
push
orb
mov
push
push
std
lock
sbb
js
fdiv
and
mov
adc
lret
ficoms
mov
sti
flds
mov
sbb
jne
into
xchg
std
outsl
mov
aaa
inc
imull
add
and
cmp
mov
outsb
jnp
sub
lcall
rol
sub
pop
pop
sbb
nop
dec
pop
sbb
sub
cwtl
xor
xchg
inc
pop
inc
inc
inc
loopew
xor
sbb
cmpsl
cmp
jge
push
push
lret
adc
loope
rcrb
dec
aad
fisubl
cs
cmp
inc
lock
xor
jmp
xchg
inc
jno
arpl
mov
push
mov
mov
aam
leave
push
cmp
icebp
xchg
arpl
pop
fwait
clts
mov
sarb
push
inc
mov
enter
aaa
xlat
jg
out
scas
add
fnstcw
pop
fdivrs
in
sarb
imul
std
push
jbe
int
ljmp
gs
jge
insb
cmp
cltd
lcall
repnz
pop
pop
repz
shl
mov
pop
sbb
cmp
xchg
pop
sbb
test
add
cmpb
ret
xchg
popa
adc
dec
pop
jecxz
dec
sub
bnd
prefetch
or
les
movsl
mov
movsb
int
cmp
mov
lock
xchg
fnsave
pop
add
movsb
lea
cmp
jne
sbb
and
sbb
and
mov
ljmp
cmpsl
daa
mov
xchg
es
clc
pop
ja
loop
dec
int3
nop
or
popf
lock
shlb
lods
mov
fnsave
test
sub
lret
in
hlt
pop
mov
movlps
sti
jge
push
add
push
or
cltd
push
dec
cmc
fidivrs
daa
jl
xor
mov
mov
jno
xchg
adc
mov
lret
addr16
xchg
mov
sbb
jae
push
mov
scas
dec
xchg
jg
scas
and
stc
and
pop
sub
mov
dec
mov
xor
test
int
hlt
js
mov
cmp
enter
push
mov
pop
cwtl
pop
mov
ja
daa
push
mov
je
fnstenv
out
lock
nop
and
repz
adc
sbb
push
mov
inc
dec
mov
cmp
dec
lods
loope
xor
pop
mov
insb
mov
clc
out
mov
adc
cli
bound
xor
adc
or
movsl
shll
xchg
cwtl
ret
das
push
add
dec
dec
shlb
dec
push
jne
pop
dec
jne
sub
faddl
lret
shll
loop
pop
aad
xor
mov
xorl
fs
xlat
mov
lea
adc
pop
jae
pop
push
pop
test
js
jmp
test
enter
jge
divl
cmovbe
js
push
cmp
xchg
and
cmpsl
add
xor
js
and
mov
sub
loope
inc
xor
scas
pusha
jo
loopne
iret
mov
xor
lea
xchg
sbb
addl
xchg
push
push
lret
ret
enter
pop
aad
pushf
clc
int3
xlat
sbb
pop
out
add
cmp
rorb
cmpsl
push
jbe
inc
stc
mov
sahf
aad
loope
or
xlat
push
sbb
adc
and
repz
outsl
subl
xor
movsl
movsb
mov
mov
sub
pop
adc
sahf
push
movsl
add
lock
je
bswap
inc
imul
int3
sbb
sbb
xchg
mov
movl
jge
or
inc
mov
jnp
mov
fisttps
clc
icebp
lret
inc
jae
call
push
inc
cli
int
rorb
mov
or
in
mov
test
jl
scas
or
adc
cltd
push
xchg
leave
inc
repz
mov
pop
adc
out
mov
fcoms
test
ret
inc
jp
fcompl
outsb
cmpsb
fstp
xchg
sbb
nop
shll
push
mov
rcrb
jecxz
inc
pop
ds
insb
rcl
pop
mov
mov
shl
mov
pop
rep
jmp
dec
lods
jge
xor
addr16
stc
or
scas
or
xchg
scas
sub
nop
int3
das
daa
gs
and
cmp
fstl
aaa
inc
and
push
inc
pop
dec
es
mov
iret
adc
push
jbe
mov
and
stc
xor
cld
or
aas
fiaddl
arpl
add
stos
mov
mov
lock
cmp
pop
add
scas
inc
jl
iret
and
mov
xor
jo
int
mov
pop
ffreep
cld
stos
mov
ja
pop
xchg
sub
jg
jns
ret
daa
pop
int
mov
cli
es
mov
sbb
cwtl
xor
cli
lret
out
or
push
popf
dec
xor
xor
and
inc
lods
sub
repnz
sbb
mov
cli
mov
aas
or
mov
mov
fidivs
nop
fldt
xchg
inc
dec
jl
stos
jmp
xlat
lds
fld
loope
xor
mov
fstps
lret
aaa
mov
push
outsl
and
sbb
add
cmp
or
rorl
xlat
or
cmc
cmp
or
adc
lock
shlb
int3
in
or
dec
adc
outsb
lock
sub
xchg
and
mov
adc
mov
mov
fisttps
push
fmul
pop
push
push
test
mov
jae
loopne
lock
dec
je
popa
jo
cld
cmp
cs
add
xor
xlat
sahf
jne
cmp
push
pop
xchg
pop
imul
ds
rcl
mov
jne
inc
jne
pushf
jecxz
es
fimull
push
and
xor
sbb
bound
push
jns
inc
mov
jl
outsb
sbb
and
pop
int
add
sbb
jbe
lcall
outsl
mov
mov
imul
push
push
aad
mov
xchg
test
sbb
in
in
pop
mov
sub
add
ret
pop
std
shlb
out
cli
inc
push
mov
ja
aad
test
push
mov
jecxz
pop
pop
out
rolb
pushf
mov
lods
sbb
jae
cmp
outsb
lret
dec
sub
sub
cmp
out
add
je
push
out
add
leave
cmp
pusha
lret
fiaddl
sbb
aaa
cld
mov
fsubl
push
les
fiaddl
mov
or
pop
jbe
or
jo
mov
inc
mov
imul
imull
aam
jmp
or
repnz
mov
cmp
push
cmpb
pop
sub
add
inc
push
sbb
into
icebp
stc
cmpsb
test
mov
jecxz
lock
sbb
lret
pop
inc
das
clc
jecxz
push
pop
or
out
lds
in
mov
xor
inc
orb
push
sti
repnz
stc
xor
ret
dec
inc
inc
xor
je
enter
mov
add
mov
dec
mov
fpatan
xor
movb
push
mov
mov
in
rcrb
ror
insb
dec
xchg
sub
cli
repnz
lcallw
in
loopne
inc
adc
test
dec
cmp
sarb
mov
inc
and
or
arpl
loopne
xchg
and
pop
jmp
mov
xor
xor
loopne
pop
push
cmp
fiaddl
mov
lcall
cmp
inc
jbe
cmp
ret
insb
xor
xchg
xchg
nop
pop
sub
test
test
xchg
mov
test
dec
mov
jne
cltd
xchg
sub
inc
jg
push
pusha
int
cs
jmp
push
mov
and
loopne
add
sbb
mov
mov
xchg
call
and
aam
into
xor
dec
outsb
lods
ret
dec
test
cmc
jmp
push
clc
sub
fs
mov
ret
sbb
in
cmpl
in
sahf
or
sarb
lods
gs
mov
pop
scas
push
pusha
and
push
out
inc
push
jb
pop
push
loop
jmp
call
jmp
pop
clc
fisttpll
mov
push
sarb
movsb
jnp
add
stos
xchg
xor
rcll
jmp
scas
cmp
ret
xor
loopne
cmp
and
jae
mov
testb
fwait
lock
in
int
mov
loop
mov
rol
or
arpl
icebp
xor
mov
popa
dec
cld
dec
das
test
and
ret
xchg
in
into
pop
ret
enter
enter
dec
das
push
mov
loopne
jno
sti
cwtl
inc
nop
xor
mov
xchg
mov
bound
sti
jae
add
push
imull
shll
jecxz
pop
in
jl
les
fmull
lcall
ret
inc
sub
stos
jne
mov
xor
les
cmp
cmp
std
movsb
lock
cmp
pop
out
das
ret
add
movsl
pusha
ja
sub
fsubrs
push
xor
movsb
sub
push
pop
dec
mov
xlat
shrl
dec
out
fisttps
mov
jnp
imul
adc
test
out
jp
orl
xchg
inc
imul
mov
xchg
mov
rcll
mov
and
jg
dec
add
and
lock
shlb
jl
lods
xchg
xchg
pushf
push
das
push
int
add
lret
and
adc
xchg
adc
aaa
insb
frstor
enter
cmp
test
mov
xor
dec
xorb
loope
sbb
outsl
mov
cmpl
outsl
pusha
inc
out
fcoms
inc
cmp
jbe
mov
jbe
mov
cmpsb
jecxz
cmpsb
inc
fsubl
push
push
or
leave
adc
mov
sti
pusha
inc
adc
dec
mov
lcall
or
iret
push
add
icebp
sbb
test
sbbb
fldt
xor
sahf
push
scas
inc
pusha
jecxz
mov
decb
int
pop
insl
adc
mov
popf
xchg
jl
in
mov
adc
dec
aam
data16
fdivrp
and
jmp
and
and
clc
pusha
clc
xchg
cmp
fisubrs
pushf
mov
and
dec
inc
stos
jmp
adc
cld
cmp
in
fucomp
out
mov
cwtl
stc
xor
inc
adc
or
ror
cmc
test
cmp
mov
inc
fs
cmp
les
loope
rorb
push
orb
pop
sbb
cmpsl
xor
cwtl
mov
jns
shl
outsb
jle
dec
mov
clc
clc
sar
mov
sub
mov
nop
cmpsl
shrb
jecxz
fstpl
lret
add
cmp
stos
jns
cmp
lds
pop
jns
lcall
sbb
or
add
fstpl
sahf
addl
adc
jp
mov
pop
in
lock
or
push
push
out
mov
cwtl
inc
cld
insl
dec
mov
subl
and
pop
out
lahf
mov
xchg
test
out
cmp
in
jae
in
pop
push
imul
jp
dec
int
std
fldcw
xor
xchg
sbb
fwait
out
adc
lds
xchg
cmp
xchg
roll
shlb
pop
mov
sbbb
jge
and
shrb
bound
sbb
xor
pop
int
bound
movaps
adc
mov
and
mov
jecxz
mov
adc
mov
pop
add
pop
sbb
pop
sbb
cmp
mov
fwait
rclb
mov
mov
scas
rcll
pop
les
call
adc
mov
xchg
sub
or
pop
lock
or
mov
out
jp
dec
adcl
popf
jmp
loopne
mov
sub
cmp
roll
mov
cmp
push
cmpsb
icebp
or
std
push
sar
jecxz
push
loop
scas
push
xchg
pop
push
daa
ja
dec
jmp
push
insb
dec
mov
or
fdiv
cmpl
xchg
sbb
pop
jb
jg
ret
ljmp
pop
xchg
subl
sbb
jns
mov
push
xchg
push
repz
loope
fistps
xor
jo
dec
push
lea
scas
dec
in
cltd
sahf
pop
jecxz
ss
test
fs
mov
cmpsb
add
sti
jecxz
dec
cld
jge
out
in
mov
mov
and
pushf
adc
scas
dec
push
fstpl
cmp
sti
push
test
cmp
or
inc
fdivs
fildl
ja
sub
test
inc
push
push
cmp
ret
std
xchg
roll
jae
mov
dec
aad
mov
hlt
lds
inc
jg
repz
loop
es
adc
xor
jle
jmp
addb
aas
mov
or
sti
mov
or
mov
push
aam
jnp
sbb
clc
nop
mov
inc
xchg
ret
imulb
andl
nop
jb
dec
loope
dec
aad
icebp
pop
sub
bndstx
pop
fldenv
sbb
sbb
in
popf
xchg
pop
rolb
rclb
adc
aaa
xlat
xor
scas
jle
xor
inc
jns
xchg
inc
mov
mov
mov
lock
ficompl
and
jae
mov
ljmp
roll
outsb
sbb
mov
nop
jne
sbb
adc
mov
or
repz
dec
xchg
jo
insl
addr16
mov
mov
lret
aam
xchg
sub
pusha
push
popa
cmp
outsb
adc
ljmp
clc
and
mov
inc
sbb
loope
push
sub
ds
std
xchg
jnp
xchg
mov
int3
xchg
jnp
aam
push
inc
add
ljmp
mov
jo
shrb
push
dec
lahf
mov
push
out
mov
ficompl
les
loop
dec
stos
push
xchg
call
add
cmp
push
dec
cltd
mov
cmpsl
add
inc
mov
inc
test
cmp
mov
xor
or
pop
add
dec
xchg
jno
push
sti
popf
mov
pusha
sbb
push
mov
aaa
add
jo
xchg
psubusb
enter
jne
lret
cmp
jge
pop
pop
gs
lods
scas
mov
or
adc
and
hlt
inc
dec
mov
icebp
mov
out
cmp
lock
fcompl
ror
sub
add
inc
and
or
dec
cwtl
lods
lret
xchg
out
pusha
call
mov
mov
sahf
push
sahf
adc
jbe
and
stos
rcl
out
pop
push
jp
les
stos
add
sbb
movsl
push
and
mov
adc
xchg
fimuls
inc
aad
and
pop
lods
dec
dec
js
jg
jno
bound
mov
dec
or
pop
jecxz
jl
or
fistpll
pop
jp
inc
andb
lahf
out
repz
dec
adc
jns
js
dec
xchg
shl
and
subb
lcall
and
shlb
divb
mov
jg
push
daa
mov
xor
mov
cmpsb
dec
dec
outsl
loope
mov
stc
fwait
jnp
mov
outsb
dec
pushf
test
mov
movb
pop
jecxz
mov
push
pusha
add
sbb
movsb
loope
iret
xchg
int
or
inc
push
mov
or
and
repnz
xchg
xchg
mov
hlt
push
repz
mov
test
mov
inc
pop
pop
inc
out
mov
in
xchg
jo
les
pop
sahf
adc
hlt
das
out
mov
sarl
push
and
iret
inc
lcall
leave
jmp
cmc
cmpsb
stos
jnp
stos
sbb
xor
outsb
das
mov
pop
xchg
stos
mov
adc
inc
shlb
sarb
aam
fmul
jnp
jns
ds
adc
dec
add
in
adcl
lods
cs
ljmp
push
jo
sub
pop
arpl
sub
xchg
mov
mov
shr
fwait
in
mov
aas
call
aaa
pusha
mov
ja
in
push
aam
mov
adc
inc
xchg
das
pop
mov
in
mov
mov
cs
inc
lcall
or
out
sbb
cmp
lock
out
jno
mov
adc
dec
push
jge
jmp
cltd
enter
mov
adc
cmc
sub
sub
sbb
push
callw
xchg
mov
movsw
insb
push
hlt
mov
rcl
rol
add
popf
and
stc
fwait
mov
jge
lea
jno
movsb
fdivs
lea
jbe
adc
dec
mov
pop
call
imul
rcr
inc
dec
jecxz
xchg
test
lds
das
pop
clc
or
push
sahf
mov
adc
push
push
loopne
cmp
rolb
mov
shrb
add
sbb
cmp
imul
inc
jge
xchg
push
fiaddl
nop
and
pop
xor
inc
pop
xor
subl
inc
nopl
les
add
cmp
or
push
pushf
in
mov
cmovle
mov
pop
xor
ss
shl
orb
push
out
jge
pop
mov
packssdw
int3
mov
subl
enter
sbb
push
pop
sub
pushf
in
mov
cmpb
pushf
aad
push
mov
cmp
fwait
push
cmp
das
outsb
dec
out
cmp
sbb
cltd
xor
push
lods
xor
jl
adc
sub
cmp
movb
inc
imul
add
cmp
or
mov
rolb
out
sbb
cld
testl
jno
mov
iret
loopne
push
clc
clc
les
mov
xor
clc
addr16
pop
and
inc
xchg
fwait
insb
pop
push
mov
repz
pop
btc
cli
jecxz
ror
jp
fdivr
fimuls
loope
push
insl
mov
leave
xchg
jge
xor
push
xchg
jne
push
xchg
sbb
test
aaa
test
scas
cltd
or
pop
xchg
jle
icebp
pop
je
gs
pusha
sub
mov
mov
decb
xchg
adc
jo
les
and
pop
in
ljmp
xchg
mov
xor
fdiv
pop
mov
add
ret
cld
in
mov
gs
int3
mov
roll
enter
fdivp
xlat
jb
popa
flds
mov
out
pushf
ficomps
cs
jo
fists
insb
shl
adc
push
lret
and
insl
xor
inc
enter
or
adc
mov
sub
cmp
int
and
or
cmp
imul
mov
mov
inc
xlat
in
mov
or
stc
scas
testb
adc
insl
cmp
imul
xchg
dec
fnstsw
pop
inc
cmp
xchg
pusha
inc
add
jne
xor
movsl
ljmp
pusha
ja
pop
xor
mov
mov
pop
pushf
jno
inc
inc
and
fadds
lahf
xchg
fdivs
or
xchg
jnp
push
xlat
in
cltd
daa
movsl
mov
ret
fdivs
popf
mov
pop
cld
adc
xchg
mov
out
cmc
inc
jbe
pop
in
clc
nop
in
sar
pop
insl
inc
popa
mov
pop
jmp
push
xorl
imul
mov
jp
in
sub
loop
test
jge
sub
loopne
shlb
sub
sti
push
add
aad
je
inc
frstor
into
xor
iret
int
out
xorb
mov
mov
push
jnp
xchg
xchg
movsb
jmp
lea
xor
pusha
pop
mov
inc
aad
jmp
mov
and
push
and
add
sbb
or
int3
iret
sub
jp
push
add
xchg
in
hlt
mov
jl
xor
leave
xchg
test
inc
scas
mov
dec
and
fistps
and
pop
mov
pop
loopne
movsl
bound
jo
imul
test
sbb
jo
cli
fwait
or
and
mov
lahf
mov
jb
shrb
inc
shrl
push
sti
test
into
sbb
test
icebp
test
jns
lds
pop
fcomps
ljmp
mov
outsb
rclb
movsb
hlt
fs
fldl
dec
pop
int3
and
cwtl
push
pop
loopne
sarb
mov
data16
cmp
hlt
xchg
fsub
mov
push
jbe
test
std
scas
fists
popf
lea
fdiv
rol
sti
aam
cvtps2pi
ds
test
xor
mov
dec
repz
out
insl
push
notb
in
imul
inc
and
mov
mov
enter
sub
dec
in
bound
mov
sbb
jbe
and
jg
push
jg
push
mov
push
clc
mov
push
fisttps
dec
test
dec
xlat
push
les
and
enter
ficoml
jne
push
mov
dec
or
push
repz
pop
mov
pop
cltd
stc
sahf
outsb
shr
rcr
sbb
es
jno
mov
nop
xor
sub
add
mov
adc
and
lods
xchg
stc
fstpl
push
adc
lods
in
fistl
test
es
ret
mov
jbe
lahf
sbb
inc
xor
jl
push
negb
push
mov
adc
pop
xchg
insl
icebp
add
jno
loopne
add
pop
popf
ror
sti
cmpl
mov
mov
or
jno
jno
cmc
int3
inc
push
add
pop
push
and
in
mov
adc
je
xchg
sub
mov
outsl
sub
shll
or
leave
dec
inc
ss
or
jp
mov
sub
gs
dec
in
mov
test
inc
jp
scas
fists
lret
pop
sub
test
inc
push
cwtl
and
mov
into
inc
inc
mov
xchg
orl
fdivrs
inc
inc
dec
and
sub
jo
mov
lcall
lods
rol
sbb
ja
add
pop
out
imul
push
sub
or
jge
test
popf
lcall
and
or
cs
leave
and
inc
out
lods
fldcw
mov
aam
pop
adc
xor
hlt
push
sbb
imul
inc
mov
push
push
popf
das
jnp
sub
pop
jo
jmp
xor
lahf
pop
sub
dec
cmc
into
inc
cmpsl
xor
mov
inc
pop
gs
bswap
pop
les
mov
dec
push
in
inc
or
sub
rcll
sub
xchg
mov
jp
jle
sbbb
ss
xchg
cmp
mov
adc
das
or
cmp
xor
and
in
stos
addb
insb
test
mov
inc
pop
ret
jp
cmp
jno
sub
out
insl
lcall
shl
stos
inc
jle
push
pop
out
mov
push
mov
loopne
sub
dec
popf
or
adc
xor
loope
jnp
lret
stc
clc
fadds
xor
ret
xchg
xor
inc
sbb
loope
mov
pop
loope
jle
lods
push
xchg
cltd
sbb
js
inc
xchg
popa
jp
add
std
cmp
mov
aam
or
jmp
daa
loopne
fldenv
mov
test
mov
lret
mov
jb
cmp
rcrl
out
dec
jo
push
mov
andb
push
mov
fldl
outsl
mov
jns
gs
xchg
jecxz
xchg
sbb
sub
add
cld
adc
xchg
test
gs
and
int
call
mov
jp
mov
repz
add
pop
subb
jecxz
xchg
enter
mov
cmp
addr16
es
sbb
xchg
pop
outsl
mov
sub
push
adc
dec
in
adc
pop
sarb
xchg
jg
jecxz
bound
mov
addl
or
dec
adc
fs
cld
mov
sahf
out
repz
or
mov
or
push
pop
daa
leave
xor
lds
cmc
pop
pop
sub
jmp
inc
ret
cwtl
es
out
js
jmp
fsubr
adc
inc
sbb
or
adc
pop
iret
and
and
loopne
push
cmp
mov
cltd
or
mov
mov
aad
aam
cmp
xchg
pop
xlat
or
pop
sbb
fdiv
mov
movsl
movsb
inc
stc
mov
ret
out
mov
je
dec
add
jge
shr
idivl
dec
dec
sub
dec
sbb
stos
lret
cmc
and
inc
mov
in
and
mov
add
xor
lcall
jnp
lock
xrelease
mov
and
pop
outsl
jbe
insb
push
stc
add
mov
sbb
xchg
jg
jo
rolb
jae
es
push
xchg
ss
loope
clc
inc
fiaddl
jmp
out
dec
lret
mov
out
jbe
es
inc
inc
arpl
mov
sbb
dec
lods
out
nop
adc
out
xlat
std
cmp
inc
aas
xchg
movsl
mov
add
cmp
cmp
jnp
je
in
push
loopne
out
std
iret
aas
add
dec
lahf
push
jae
lods
xchg
cmp
test
test
jmp
xor
ss
jb
iret
inc
dec
push
cmpb
pop
dec
push
pop
cmpsl
add
pop
sahf
les
mov
or
test
arpl
aam
add
and
mov
mov
cmp
inc
jmp
dec
cmpsl
xchg
pop
inc
pop
jle
lds
dec
cmp
pop
aad
mov
cmpsb
cltd
pusha
jae
mov
xor
clc
mov
mov
jle
movsl
inc
jae
cmp
int
and
fs
adc
repz
push
ret
loop
icebp
daa
rcrb
push
mov
orb
shll
fldt
cmp
enter
into
cmp
sti
mov
inc
mov
daa
repnz
or
cmp
popa
add
xchg
cwtl
hlt
fcoml
jle
cwtl
stc
enter
adc
and
pushf
xor
sub
lods
popa
or
inc
xchg
pusha
mov
jo
jne
sub
call
sub
lds
inc
xchg
andl
loop
in
stc
pop
sbb
dec
xor
popf
pop
push
mov
push
jg
stc
push
pushf
sti
adc
mov
into
mov
shl
loopne
mov
cltd
or
cmpb
aad
push
push
and
cmpsl
cmp
movsl
or
das
das
push
fwait
dec
aad
cli
shll
sub
movsl
mov
or
imul
mov
sub
jne
mov
rol
insb
cmp
jmp
add
sub
or
jnp
cmpsl
out
dec
out
negl
inc
pusha
cli
push
push
jb
loop
add
ret
add
xor
stos
sub
cltd
sub
mov
sbb
stc
or
sub
pop
pop
or
jo
fimull
jns
aam
and
xor
mov
pop
out
dec
lret
shlb
sbb
and
add
lea
imulb
orb
adc
xor
pop
mov
mov
push
or
cmp
push
out
fisubrs
cwtl
mov
scas
sbb
lds
es
jo,pt
mov
push
or
sub
iret
test
subl
repnz
push
mov
ret
ja
push
mov
xchg
push
pop
dec
mov
mov
andl
rcl
add
sbb
fs
test
mov
in
jno
xlat
pop
fcmovnbe
sub
pop
pop
lahf
negb
mov
imul
mov
jnp
popf
popa
pop
pop
fstpt
sub
orl
mov
pop
ret
cmp
mov
inc
mov
cmc
mov
xchg
push
jp
or
cld
push
fdivrp
mov
or
fs
cmpsb
and
sahf
insl
fisttps
fcoml
scas
cmc
jne
cs
jo
adc
das
sahf
fisubrs
or
gs
dec
mov
adc
jecxz
and
js
xchg
add
mov
inc
cmp
mov
ret
push
jg
or
loop
clc
fnsave
add
jbe
and
into
push
sahf
imull
xchg
bound
inc
clc
lock
mov
das
test
mov
xor
daa
cmpsl
hlt
xchg
daa
xchg
mov
int
xchg
rcl
mov
pop
dec
add
xchg
fcomi
pop
cli
popa
and
add
jno
adc
enter
xchg
mov
fbstp
jne
aam
inc
stc
jp
out
push
xor
sub
jae
fwait
test
scas
inc
in
flds
sub
push
pop
mov
mov
into
cmc
jb
pop
adc
cmp
repz
xchg
gs
lret
cli
dec
xchg
fisubs
std
adc
lds
pop
lds
mov
cmpsl
mov
inc
jle
out
call
subb
push
dec
out
cmp
stc
scas
jecxz
and
push
or
and
sbb
xchg
fistps
repnz
mov
cli
cld
mov
lds
daa
xor
call
xchg
mov
dec
daa
cmp
cmpsb
std
mov
shrb
popa
cmpl
rcl
pop
xchg
aas
movsb
mov
lods
pop
fsubs
jge
pop
bound
add
in
mov
or
dec
imul
sub
call
out
bound
or
into
sbb
xor
jb
xor
ja
pop
mov
popf
loope
in
shll
aam
in
xchg
fsubrs
movsl
jge
pop
movsb
sahf
xchg
shrl
int3
popf
push
lret
push
pop
inc
clc
xor
push
hlt
xchg
xor
inc
lds
mov
adc
dec
sarl
add
in
cltd
subl
inc
out
xlat
dec
jp
adcb
sub
mov
dec
fldt
sti
sbb
je
movsb
lret
inc
xchg
xor
push
test
int
push
lret
testl
lea
adc
stos
cmp
rcl
js
cltd
inc
mov
dec
cwtl
lea
mov
pushf
decl
xchg
dec
add
addr16
mov
dec
cli
push
scas
jnp
and
dec
loop
nop
sbb
xchg
jo
push
int3
iret
loop
aam
in
cmpsb
sahf
aaa
jg
lahf
das
adc
push
pop
mov
jl
hlt
js
repnz
mov
and
jle
pop
adc
pop
xchg
sub
inc
sbb
pop
sbb
nop
lea
and
into
and
jg
icebp
lret
mov
adc
enter
dec
and
push
enter
xor
dec
fcoms
cwtl
sub
dec
mov
inc
pusha
or
xorl
dec
out
cmc
and
jb
in
inc
rcrl
mov
add
loop
adc
dec
inc
loopne
push
adc
jmp
lcall
rcrb
or
sahf
fistps
int3
push
push
push
into
mov
fiaddl
push
add
jge
mov
sbb
sbb
adc
adc
imul
dec
je
mov
mov
push
jge
scas
mov
xchg
sbb
je
inc
dec
or
fs
test
sbb
leave
popf
add
inc
lods
cmp
scas
sub
mov
xlat
jne
aam
roll
dec
popf
lds
nop
fiaddl
lea
inc
sub
out
sbb
sub
out
fs
mov
push
fcomps
in
xor
mov
cmp
dec
jb
iret
add
push
dec
push
mov
into
mov
dec
or
add
add
pop
mov
push
sbb
divb
inc
jnp
adc
aas
and
stos
rsm
push
ljmp
xor
cmc
sbb
fs
scas
mov
mov
push
mov
cwtl
pop
pop
call
aaa
jae
push
dec
mov
ficompl
movsb
cmpsl
and
movsb
je
lods
xchg
imul
inc
incl
xor
rol
lret
push
cmpsl
mov
lds
jmp
decb
inc
xor
test
xor
repnz
loop
or
and
xor
daa
mov
out
cmpsl
sub
movsb
xor
out
jle
loope
sub
icebp
in
xchg
add
sub
sti
das
jo
in
dec
mov
mov
inc
jne
mov
xor
pusha
or
ficompl
scas
sbb
sahf
lods
repnz
push
idivb
pop
xor
fsubp
jl
dec
mov
outsb
outsl
test
ret
mov
inc
mov
add
ljmp
aad
xchg
les
cmpsb
popf
lahf
push
and
pop
jbe
jmp
ret
lret
cld
jl
jnp
and
or
addr16
cmp
inc
xchg
dec
mov
mov
test
leave
sub
cmp
pop
int3
inc
xchg
test
dec
insb
add
add
sbb
in
mov
arpl
dec
scas
leave
test
gs
pop
push
mov
inc
pusha
out
jae
cmp
stos
out
lcall
push
dec
movsb
fimuls
mov
and
xor
stos
les
out
ljmp
fmuls
pusha
mov
addl
or
icebp
adcl
adc
outsl
jmp
jp
pop
jge
jle
lcall
aam
push
shrl
mov
bound
stos
mov
jle
in
int3
scas
pop
subb
rolb
mov
xadd
jecxz
push
push
or
gs
out
and
cmc
add
repz
jmp
or
dec
mov
out
jmp
ljmp
loop
pop
or
mov
mov
rolb
mov
mov
inc
mov
test
outsb
mov
popf
imul
push
mov
test
jmp
aas
jmp
mov
pop
je
arpl
xlat
dec
dec
mov
js
dec
dec
xor
or
adc
adc
push
jns
cwtl
jnp
bound
rcll
cmp
dec
faddl
popa
rorb
xor
lods
add
popf
sub
xlat
imul
dec
push
cltd
xchg
or
data16
xchg
in
or
clc
iret
mov
xor
in
les
cmp
daa
hlt
dec
data16
xchg
sahf
std
or
data16
mov
pop
les
es
adc
xchg
mov
test
aas
adcb
int3
push
dec
lods
adc
andb
cmp
movsl
leave
push
or
rcrb
sub
fstpl
adc
pop
lds
mov
sti
cmp
xchg
and
add
mov
xor
mov
faddl
add
or
iret
std
jno
cwtl
fiaddl
add
cmp
and
push
cs
xor
push
pushf
jecxz
mov
gs
pop
popf
mov
pop
fisubrl
sub
stos
mov
add
fs
add
mov
leave
mov
loope
mov
xchg
push
mov
pop
subb
push
sub
push
and
xor
adc
lods
add
mov
mov
outsl
mov
jb
sbb
lahf
mov
nop
pop
pop
push
push
cmpsl
imul
fbld
dec
stc
icebp
mov
ja
or
pushw
lods
mov
je
pusha
add
sub
jnp
xor
in
scas
imull
into
icebp
lea
jle
jl
mov
icebp
insb
and
mulb
mov
lret
xchg
xchg
cmpsb
loop
adc
iret
push
jecxz
jns
popf
or
push
int3
push
enter
aas
lds
xor
call
lds
mov
cwtl
mov
pop
sub
cmp
inc
hlt
jmp
enter
sub
sti
jne
shlb
jnp
push
xor
xlat
sar
out
sub
mov
fidivrs
in
jb
mov
dec
and
lahf
repnz
adc
sbb
lods
div
adc
cmpsl
subb
loope
mov
and
ficoms
mov
loopne
ret
imul
test
insl
pop
push
push
bound
loop
mov
push
ret
mov
repz
xor
xchg
add
dec
mov
mov
pop
in
sbb
xchg
lret
inc
add
pop
imul
out
leave
inc
fildll
ret
leave
xor
roll
jae
div
jne
sbb
loope
or
daa
dec
push
inc
cmpsl
fcomip
lods
clc
dec
test
loope
cmp
rclb
xor
adcb
call
mov
call
mov
cmp
push
adc
jne
hlt
imul
fwait
es
imul
ficoml
sub
mov
icebp
daa
xchg
movsl
loopne
shlb
cmpsb
mov
pop
loope
daa
stos
push
ds
xchg
stos
sbbb
int3
ret
nop
mov
ljmp
jb
jno
mov
les
and
or
cltd
or
imul
sahf
popf
cs
in
test
lahf
outsb
xor
mov
sub
cmpsl
sub
in
xorb
pop
rcrl
das
xor
jecxz
fisubl
cld
out
pop
aam
mov
lcall
jbe
adc
pop
and
jbe
adc
nop
dec
xlat
push
and
in
lret
push
add
fdivl
adc
inc
leave
pmovmskb
aam
pop
sbb
adc
push
cmp
test
add
and
jmp
nop
fwait
jo
sarl
xchg
adc
iret
and
xor
pop
icebp
mov
cmp
mov
mov
jno
pop
push
xor
insb
push
ja
insl
mov
xor
sahf
mov
fsts
cmp
movsl
adc
daa
and
push
js
lds
data16
ret
or
mov
imul
sbb
xor
mov
adc
sub
mov
sbb
jmp
iret
in
xchg
pop
jne
lret
inc
pop
adc
sbb
jnp
xchg
xchg
xchg
dec
push
cmp
js
mov
and
ret
or
mov
shlb
mov
movsl
jae
dec
xor
stos
adc
sbb
inc
sbb
pop
mov
adc
std
and
or
test
shlb
sub
pop
pop
insl
push
outsl
push
stos
jnp
jns
inc
mov
jo
xorl
imul
xchg
fisubrs
ja
jg
xchg
push
mov
adc
pusha
rol
lods
jno
pop
cmpsl
mov
mov
mov
xchg
jb
ja
inc
out
mov
test
data16
les
ljmp
xchg
icebp
jne
nop
das
pop
enter
dec
sahf
mov
test
inc
mov
mov
push
push
dec
push
stos
cmpsb
pop
mov
mov
arpl
mov
inc
pop
dec
or
ficompl
std
mov
mov
icebp
sti
iret
or
call
pop
fs
or
cmp
icebp
push
jb
jb
or
cld
clc
out
jmp
mov
inc
imul
push
mov
and
mov
cmpb
mov
adc
inc
push
outsb
fbld
cmpsl
fiadds
xorb
mov
pop
jecxz
insl
ss
out
roll
in
inc
or
mov
xor
mov
sarl
pop
and
test
addr16
sbb
xchg
fwait
cmp
enter
lahf
cmp
and
out
xorb
adc
pop
inc
and
iret
pop
add
insl
and
and
jno
cmp
or
dec
negb
int3
icebp
out
rcrb
mov
mov
scas
mov
cwtl
sbb
push
mov
ret
test
jno
scas
xchg
sbb
push
into
or
lahf
out
out
xor
imul
xor
jbe
mov
sub
in
popa
fwait
add
outsb
adcb
sub
mov
iret
and
jnp
or
mov
mov
adc
and
ror
xchg
dec
mov
shr
nop
lea
xor
in
mov
iret
dec
js
fstl
xchg
xor
cmpsb
sub
outsl
cmp
mov
add
addr16
and
addr16
es
in
jo
rcrl
mov
xchg
ret
cmp
jb
sbb
dec
pop
or
sbb
sahf
into
repz
jne
cmp
cmp
sbb
sarb
arpl
js
inc
pushf
cmp
jne
mov
cmp
div
out
scas
std
lret
pop
stos
add
or
sub
dec
mov
loopne
cmc
sbb
inc
jmp
aas
sti
cmp
imul
pop
cli
cmp
mov
insb
shlb
iret
add
cmp
pop
sub
roll
in
outsb
mov
mov
ljmp
mov
and
inc
jl
mov
mov
sti
in
mov
test
daa
add
cli
xor
sub
gs
enter
pop
pop
cmp
dec
mov
std
test
je
sbb
in
sub
xor
inc
stos
mov
lock
pop
push
inc
pop
dec
inc
xor
psllq
std
nop
daa
xor
jle
rclb
adc
push
fnstcw
ret
shll
je
and
lods
movsb
push
adc
es
pop
scas
bound
or
push
dec
sub
sub
jl
int3
fidivs
pop
xchg
push
pop
lret
pop
xchg
xlat
mov
enter
movsb
popa
or
jecxz
stos
xchg
int
pushf
in
shl
cmc
push
test
loope
call
pop
or
outsl
out
jg
xor
shrl
mov
rcrb
lret
mov
or
es
dec
jnp
ret
repz
loop
repz
inc
sub
daa
ljmp
gs
adc
imul
int
cli
jmp
call
jle
mov
loope
xchg
or
sahf
sub
mov
push
xor
or
subl
mov
add
test
aam
das
and
scas
stos
es
lock
xchg
int3
adc
cld
aaa
or
sub
mov
pop
lods
xor
repnz
out
pop
xchg
lret
cltd
xor
and
cmc
sbb
dec
loop
pop
shlb
outsb
lcall
and
push
xchg
xorb
xchg
rcll
mov
loop
ja
push
aam
adc
inc
aaa
push
divb
cmp
jecxz
and
xor
je
jno
bound
xor
idivl
adc
sarb
sbb
push
or
es
adc
mov
jg
ret
inc
cmc
testl
adc
loopne
lret
pop
push
mov
out
push
push
mov
or
popa
push
xchg
adc
decl
dec
fistps
cmp
scas
push
mull
push
xchg
push
and
cwtl
cmp
mov
lods
cmp
and
sbb
mov
inc
dec
and
mov
jmp
int
clc
push
mov
into
sbb
adc
jmp
mov
aaa
and
push
addr16
xchg
cmp
jbe
scas
leave
cs
xchg
cs
std
test
nop
pop
mov
sbb
mov
mov
bswap
xchg
ljmp
cmp
adc
bound
int3
inc
movl
movhps
loopne
stos
pop
xor
fdivrl
out
xchg
cmp
xchg
lret
lea
xor
mov
or
xchg
push
fwait
jae
sub
mov
iret
shl
adc
xchg
sbb
pop
sub
mull
push
mov
sub
arpl
xor
mov
cli
lds
jns
xchg
notb
or
pushf
and
jle
mul
outsl
dec
dec
test
fwait
push
push
mov
jo
sar
mov
xchg
sbb
and
cli
ds
fcmovbe
out
outsl
push
ror
sub
or
fisubrl
repz
ja
in
push
pop
or
xchg
cmp
lahf
sbb
dec
mov
sub
cmp
imul
cmp
mov
fnstsw
lock
roll
popf
push
push
pop
push
pop
mov
je
add
outsl
or
mov
pop
or
push
ss
arpl
outsb
jbe
push
add
int
out
test
push
adc
ror
xchg
mov
mov
aas
lret
loopne
add
ror
push
das
decb
stos
push
and
ret
cwtl
adc
fnsave
dec
hlt
outsl
add
outsl
inc
inc
add
stc
sub
mov
test
loopne
outsl
mov
cmpsb
push
and
jae
xchg
pop
jb
popf
cltd
pop
aad
jge
std
fistps
mov
ljmp
mov
addr16
dec
or
call
shlb
push
test
mov
dec
mov
jmp
call
hlt
pushf
pop
push
es
lods
jnp
shrl
pop
dec
int3
in
jno
mov
cs
out
jnp
xchg
xor
mov
loope
mov
out
loop
pop
lock
xchg
cmp
pop
sbb
mov
and
and
sub
lcall
aaa
inc
fildl
mov
jne
add
cmp
adc
add
mov
je
repz
jne
loop
pop
lock
add
jecxz
dec
add
in
sub
enter
orb
xor
mov
addr16
jge
sub
stos
cmp
mov
mov
lods
in
jge
pusha
jle
sbb
jb
call
mov
push
rcrl
in
daa
or
rcll
lret
sahf
in
outsb
xlat
pushf
inc
incl
es
icebp
xchg
in
lds
inc
jmp
pop
arpl
out
cmp
ret
in
dec
jnp
out
mov
outsb
inc
xor
js
dec
arpl
push
push
cmpsb
sub
popa
and
jmp
inc
pop
dec
pop
lahf
dec
popf
aam
pop
ret
lock
das
data16
sub
ror
ja
adc
xor
push
adc
lea
rcr
call
test
xor
and
jecxz
aaa
adc
popf
out
dec
dec
stos
add
cmc
lods
push
mov
pushf
and
pop
and
cs
or
jnp
pop
testl
pusha
imul
push
cmp
mov
adc
mov
lahf
js
jle,pt
pop
ficomps
push
push
jl
std
stos
pop
mull
jbe
adc
cmp
pop
repz
push
jle
xchg
inc
cs
ffree
imul
jne
jge
sub
int3
jp
shl
mov
adc
push
xor
push
mov
in
daa
and
data16
push
sub
jp
xor
icebp
sub
sahf
lcall
int
popa
mov
repz
fs
fldcw
je
test
popa
or
sahf
pop
rclb
ret
daa
cs
sbb
xor
add
adc
je
sub
mov
xchg
ja
icebp
pop
xor
push
out
inc
das
inc
cmp
mov
and
mov
enter
scas
cmpsl
movsb
shll
sbb
push
mov
rcrl
outsb
push
incl
jnp
jne
mov
push
jne
or
test
test
sbb
xchg
dec
into
pop
icebp
pop
fs
mov
mov
xchg
iret
pop
adc
inc
daa
push
into
mov
or
sbb
ret
lods
outsb
outsl
xchg
mov
dec
jne,pn
es
or
sti
xchg
cltd
add
dec
movsb
xchg
mov
add
sbb
jns
cs
in
les
fcmovnb
outsl
gs
and
dec
jns
push
fs
cmpsl
scas
scas
int3
lcall
subb
ror
icebp
add
xchg
mov
push
shll
or
jg
inc
inc
jnp
int3
sahf
dec
adc
mov
sub
pusha
aaa
pop
pushf
adc
inc
dec
in
test
sbb
shlb
out
in
les
icebp
push
add
adc
ljmp
mov
cs
js
push
in
clc
inc
fnstcw
pop
dec
stos
dec
push
mov
adc
shrb
push
push
or
sbb
int
stos
rcrb
imull
aam
fdivrp
pop
jmp
test
jne
rcrb
lea
arpl
xchg
cmpsl
jne
ja
and
xor
gs
sarb
icebp
xor
out
jge
mov
mov
jecxz
jge
mov
ja
pushf
xor
xchg
icebp
out
adc
cmpsl
jmp
sahf
sub
push
ds
cmp
lcall
insl
jns
pop
push
mov
sarb
je
sbb
cmp
mov
mov
and
mov
loopne
dec
adc
sub
les
clc
cmp
push
lahf
imul
mov
mov
xor
push
mov
out
mov
imul
fmul
or
pushf
mov
push
leave
pop
cmp
scas
mov
into
lret
xchg
xor
pop
mov
pop
mov
pop
jo
cmp
sub
mov
sarb
cmp
dec
faddl
jge
insb
nop
xchg
cli
test
ja
cmp
and
fs
ja
loopne
jbe
fmull
lods
out
out
fcompl
nop
mov
sub
pop
bound
adc
int
out
outsb
pop
and
mov
push
data16
mov
inc
cmp
pop
call
push
imul
aad
jns
sbb
push
dec
mov
jno
shl
mov
jbe
pop
fidivrl
mov
sbb
sbb
or
pop
shlb
xchg
pop
mov
arpl
aad
movsb
dec
test
xchg
xor
dec
jbe
or
adc
jg
out
lock
aad
push
add
sbb
dec
outsl
lret
xor
sbb
scas
sub
add
jl
and
inc
adc
les
sub
jo
add
sub
pop
sbb
fcoms
fs
xchg
ret
js
pusha
inc
dec
outsl
loopne
imul
mov
push
ret
cmpsb
push
insb
lahf
loope
bound
xor
sbb
lock
lock
mov
stos
cmp
cmp
jb
pop
outsb
shll
enter
gs
hlt
das
push
dec
test
mov
dec
in
push
mov
andl
incb
movsb
das
repz
mov
pop
in
dec
loop
out
lahf
dec
xor
in
jl
shlb
xchg
sub
or
sti
lods
mov
pop
xor
jno
outsl
pusha
aas
jo
les
inc
push
and
lods
inc
imul
push
in
mov
rcr
jl
bnd
cmp
ss
jbe
lret
ljmp
lahf
std
out
dec
sbb
movsl
sbb
push
pop
mov
bnd
dec
ds
adc
movsl
mov
shll
clc
out
push
rcrl
in
insl
leave
mov
insb
push
gs
mov
jb
ret
popa
cli
cwtl
daa
sbbb
sub
insb
fbld
pop
movsl
cmpsb
dec
std
push
mov
repz
rcll
lcall
pop
or
sbb
aad
popa
cmpsb
dec
out
or
lahf
jne
mov
adc
mov
fs
adc
subb
pop
sub
xor
adcl
aaa
mov
mov
pop
aad
pop
xchg
xor
inc
xchg
adc
insl
arpl
or
loopne
inc
popf
xchg
push
and
add
adc
imul
mov
push
mov
mov
scas
addr16
jae
jl
aaa
dec
fdivrs
ja
sti
xor
nop
adc
sbb
mov
les
mov
pop
mov
scas
popf
and
sysexit
or
push
lock
fbstp
pop
or
adc
push
movb
add
mov
push
jecxz
scas
xor
fs
mov
sbb
in
lds
fsubs
jae
jne
jnp
xchg
sbb
loop,pn
pop
sub
les
movsl
das
sarb
lcall
insb
jb
scas
fcomi
sbb
mov
int3
and
dec
pop
std
sbb
lret
mov
push
add
adc
movsl
mov
loope
into
mov
daa
ljmp
inc
jg
fmuls
jo
ss
sbb
scas
push
push
lods
jle
xchg
lea
push
push
shrb
inc
dec
int3
sub
jne
push
sbb
mov
mov
jl
mov
testl
cmpsb
dec
add
mov
lods
shll
xor
xlat
mov
call
inc
pop
add
and
push
and
xor
mov
mov
test
inc
cltd
int
dec
dec
cmpxchg
inc
ret
icebp
rcr
inc
mov
jb
ja
sbb
push
mov
jbe
insl
ss
dec
lahf
jmp
inc
lret
dec
loop
pop
into
les
lds
bound
dec
mov
mov
aad
mov
lret
jae
push
call
aaa
shr
sub
outsb
xchg
outsl
movsb
out
jno
sub
mov
movsb
and
or
jae
sub
movsb
pop
mov
out
adcb
mov
fisttpl
pushl
add
sti
aam
pop
test
ss
sbb
ss
and
cmpsb
negl
xchg
mov
add
push
adc
stos
ss
cli
bswap
adc
data16
xor
add
aad
mov
sub
test
test
mov
mov
sub
dec
sbb
lret
enter
or
fldcw
and
out
jl
lcall
mov
lea
lods
xchg
inc
push
dec
icebp
push
daa
inc
mov
dec
sbb
movsb
nop
arpl
mov
les
adc
stc
pop
xor
dec
push
pusha
cld
in
std
add
pop
jge
push
adc
mov
ror
ss
inc
xchg
gs
push
xchg
lahf
test
mov
addl
cli
lahf
loope
repz
cmp
pop
push
jmp
sbb
mov
adc
sub
dec
adc
outsl
inc
outsl
in
inc
pop
jecxz
sub
int3
stos
add
dec
xchg
popa
pop
mov
pop
icebp
or
pop
lret
dec
mov
aam
inc
out
inc
jb
mov
outsb
adc
cmovge
test
lcall
sub
sbb
std
xchg
xor
test
mov
mov
adc
fs
inc
add
test
fsubp
adc
xor
stos
arpl
loop
jbe
xchg
subb
xor
cmpsl
add
inc
idivl
imul
jae
xor
or
mov
outsl
mov
pop
mov
pop
into
sub
jg
outsb
mov
mov
popa
push
push
pushf
add
call
push
and
pop
dec
or
xchg
ljmp
cwtl
movsb
shrl
loopne
in
mov
testl
pop
cmp
subl
xor
shlb
xchg
pop
decl
lcall
fsts
pop
mov
popa
push
sti
insl
push
xchg
aas
out
xchg
inc
inc
pop
inc
sbbb
push
push
mov
out
cmp
sub
imul
aas
mov
pop
push
mov
adc
aaa
mov
popf
ja
sub
jae
ficoml
xchg
adc
popf
shll
mov
sub
mov
andl
mov
ret
pop
push
xor
arpl
or
addr16
xor
add
mov
out
xor
cmp
popf
push
xchg
fadd
cli
cmp
dec
push
das
sbb
inc
ss
xchg
or
imul
mov
push
dec
daa
arpl
fmul
mull
or
dec
andl
xchg
insb
call
leave
cmp
ret
adc
pop
cli
adcl
jmp
shrb
push
pop
xor
xlat
add
adc
leave
xchg
mov
idivb
stc
cmp
add
ret
or
outsb
or
mov
icebp
jecxz
add
js
ja
add
push
jbe
clc
dec
adc
push
pop
repnz
mov
cmc
fs
enter
fsts
icebp
sub
mov
shlb
dec
or
hlt
ljmp
ficoml
add
xor
cmp
jge
loope
push
clc
or
jecxz
mov
or
hlt
push
mov
in
adc
int
or
je
ss
or
pop
push
fs
test
inc
shlb
or
dec
sbb
inc
mov
test
add
sbb
add
cmp
jl
shll
shlb
addb
jae
mov
rcrl
daa
aam
fidivrl
in
incl
cs
incb
dec
in
outsb
lock
dec
add
mov
test
and
testb
es
adc
imul
mov
outsb
aam
mov
stos
test
sub
push
xchg
outsb
jne
out
shrb
push
mov
and
cmp
add
stc
mov
mov
and
ja
and
push
push
xchg
out
aam
xchg
ret
xchg
cmpsl
cmpsb
pushl
ja
popf
inc
push
pop
add
jbe
mov
sbb
push
addb
xor
and
in
dec
aas
out
dec
dec
rcll
lret
inc
xchg
xor
pop
mov
lea
mov
jmp
add
bswap
int3
aad
pop
idivb
lods
lea
ja
popa
xor
add
frstor
dec
aad
sarb
mov
addr16
and
in
and
outsl
js
jno
sub
pop
pop
push
test
jbe
insl
cmpsl
mov
push
shrl
xor
or
jg
addr16
shrb
mov
dec
cmc
adc
or
mov
push
xor
mov
or
jnp
mov
out
mov
shll
popf
mov
xchg
mov
stos
ret
xchg
mov
mov
int
lcall
pop
mov
and
jecxz
cltd
push
jb
testb
sarb
jge
das
test
xor
int
inc
and
and
and
mov
lcall
jae
cmp
es
addb
pop
mov
mov
cmp
cmp
cwtl
rcll
sub
shlb
popf
sti
lcall
mov
jmp
clc
stos
xchg
mov
fcomi
imulb
cli
add
adc
and
js
fsubs
inc
pop
dec
jp
fsts
out
mov
pushf
mov
jmp
imul
lea
fimuls
dec
aas
fcoms
jne
xchg
push
xor
jl
adc
xchg
inc
mov
push
scas
incl
dec
xlat
in
sbb
mov
push
sub
ljmp
hlt
fadds
jecxz
aam
cmp
sbb
push
mov
movsl
popa
sub
repnz
mov
prefetchwt1
adc
sbb
in
adc
scas
fdivr
mov
test
mov
xchg
shrb
push
imul
aaa
ret
adc
pushf
pop
jle
enter
and
pop
mov
pushf
sbb
popf
jns
xor
cld
packssdw
adc
jp
fsubl
lea
bound
outsb
or
pusha
in
hlt
mov
insl
cmpl
push
repz
mov
jb
jbe
stos
xchg
jns
cmc
repnz
iret
xlat
lcall
or
adcl
push
cmpb
jmp
out
std
jnp
fwait
repz
xchg
ret
pop
mov
lods
add
das
inc
in
push
xchg
sbb
lret
mov
mov
cmp
mov
xor
dec
in
lods
mov
pop
outsb
pop
hlt
mov
sbb
mov
loop
mov
jns
mov
jne
cld
shr
push
int
mov
xlat
dec
or
lret
leave
push
mov
dec
mov
jne
dec
fiaddl
cmpsb
fldcw
xchg
jmp
faddl
sub
or
mov
adc
int3
xchg
mov
push
stos
xchg
lods
out
mov
gs
lret
fwait
aad
mov
mov
cmc
or
call
xor
jge
sarl
fisttpl
cltd
cmp
jns
popa
mov
lret
jno
out
xor
scas
push
ja
xchg
cmp
mov
jae
outsl
mov
or
or
pop
sub
clc
scas
mov
sub
pop
arpl
sbb
leave
or
mov
push
xor
call
mov
mov
aam
sbb
push
js
add
movsl
aas
xor
in
mov
lock
push
adc
or
add
lock
and
dec
sub
cmp
add
std
xor
or
rcrl
leave
mov
xchg
mov
or
cltd
mov
sahf
push
js
out
subl
push
dec
push
mov
es
ss
out
test
stos
adc
sahf
pop
dec
or
xchg
fsts
mov
cli
stos
or
jnp
repz
pushf
xchg
mov
imul
out
inc
inc
lds
outsb
ja
ret
shll
mov
movsl
push
in
push
pusha
jns
mov
int
sti
lret
loope
add
ss
in
pushf
mov
ljmp
push
add
stos
jns
imul
adcb
stc
jb
test
orl
movsl
jb
cmp
imul
pop
or
scas
ljmp
dec
mov
insb
fwait
jl
jp
popa
mov
xlat
jno
inc
pop
fadds
mov
aaa
call
daa
mov
enter
test
int3
mov
mov
cmp
fidivrs
incl
test
mov
out
push
lret
lock
stos
lds
lods
adc
xlat
pop
jo
jge
mov
cmpsb
xchg
jnp
lock
arpl
jbe
loop
xor
jns
roll
mov
popf
add
jg
mov
lock
test
lods
arpl
cmp
jge
push
into
adc
arpl
in
repnz
push
pusha
cmp
jb
mov
mov
jle
pop
and
push
fldl
lods
pop
add
icebp
adcl
mov
sbb
in
mov
es
xchg
std
xor
repnz
cwtl
push
sub
std
jae
in
or
hlt
or
icebp
ret
aam
lcall
aad
or
jecxz
pusha
adc
dec
outsl
cmp
mov
mov
adc
mov
lea
lcall
sahf
jmp
cltd
bound
inc
pop
loop
mov
push
pushf
dec
mov
jmp
dec
dec
sub
sbbl
inc
sbb
aad
les
stos
jl
sub
bound
out
ret
pop
jle
enter
adc
jge
jl
jae
icebp
out
mov
xor
mov
push
mov
out
js
adc
in
push
int
popf
mov
dec
test
dec
nop
in
inc
mov
mov
rcll
mov
pop
mov
sub
int
pop
scas
mov
test
mov
add
inc
pop
scas
enter
push
lret
xorb
ret
lea
inc
into
push
and
ret
cmp
fsubrl
xchg
lea
out
jne
mov
sub
loop
dec
out
scas
adc
les
cmpsb
cmp
cmp
clc
inc
es
pop
lds
jl
mov
xor
aad
mov
aad
cld
mov
pop
push
or
dec
divl
ljmp
stc
or
jle
je
sbb
mov
jbe
push
adc
stc
and
push
imulb
dec
int
jns
pop
insl
or
push
ret
pop
or
dec
cwtl
rclb
push
dec
es
fistps
je
jmp
gs
jbe
cmpsl
movsl
das
dec
lret
mov
mov
js
dec
push
movsl
in
or
repnz
push
inc
xchg
aas
pushf
xchg
lods
leave
cmpsl
mov
lahf
cmp
test
jmp
int3
sub
addr16
sbb
adcb
scas
dec
dec
enter
inc
addr16
mov
dec
adc
into
pop
fsubrs
fucomi
icebp
sbb
cmp
sbb
inc
out
or
xchg
pop
mov
fwait
inc
test
lock
mov
mull
cli
pop
mov
ja
sbb
xor
mov
or
gs
inc
adc
sub
in
rorl
out
jae
lret
sbb
sbb
cmpsb
cli
repz
and
mov
int
add
fdivrp
fs
push
pop
cmp
subb
xchg
xor
das
imul
mov
cmp
add
rcl
aad
inc
into
push
decl
invlpg
test
push
mov
adc
push
pop
lret
fmul
mov
and
dec
scas
ss
pop
lods
int
push
fisubrl
jb
inc
mov
imul
shlb
in
jnp
stos
in
nop
out
xchg
jl
jbe
divl
lcall
lods
out
in
or
cld
mov
mov
mov
fwait
mov
pushf
mov
arpl
push
imul
ficoms
jnp
ret
sbb
fs
fiadds
call
in
mov
stos
stc
mov
ret
or
mov
ret
repnz
sbb
lods
sbb
aaa
add
test
into
and
pop
mov
xor
les
mov
xchg
jl
dec
lock
out
fwait
push
or
push
mov
dec
fists
pop
leave
cmp
add
and
cmp
lcall
lock
lods
in
add
add
mov
and
les
or
ss
jl
leave
outsl
jbe
add
xchg
fwait
aad
xchg
mull
xlat
enter
mov
loope
aam
xchg
or
cmp
daa
dec
sub
icebp
dec
pop
int
das
sub
sub
mov
gs
add
ret
in
pop
pop
add
imul
out
out
pop
pop
inc
fs
adc
out
jecxz
aad
jmp
jns
add
jle
or
mov
mov
movsb
std
mov
call
lods
aaa
mov
jmp
out
xchg
and
inc
leave
push
jbe
xchg
jns
inc
xchg
sub
filds
daa
outsl
and
lods
xchg
out
pop
pop
in
shll
aaa
or
add
es
cli
dec
fs
pop
xchg
loopne
data16
inc
add
stc
repnz
xchg
cltd
daa
mov
xchg
cmp
sbb
xor
cmc
inc
testl
in
test
sarb
jae
rorl
cwtl
out
push
mov
popa
fwait
in
xor
clc
rcrb
xor
fdiv
xorl
pop
loopne
adc
imul
fwait
scas
fisttps
push
clc
jge
call
dec
sbbl
cs
into
arpl
std
xor
or
pop
gs
imul
pop
jmp
jne
xor
inc
xchg
clc
test
shrb
movsb
mov
lret
das
popa
sub
cltd
mov
cmp
in
imul
les
test
adc
inc
mov
xor
test
test
fstpt
lods
rcr
push
inc
inc
outsl
or
cmp
cmp
cmp
popa
push
mov
test
clc
jb
js
das
lahf
test
mov
out
xlat
mov
mov
imul
int
sub
jae
add
sub
sbb
mov
pop
xchg
shll
sbb
and
or
xor
or
out
cltd
dec
mov
xchg
add
pop
fisttpll
stos
mov
js
lahf
es
mov
add
xchg
add
lods
sbb
aam
pusha
sub
lods
aad
inc
and
mov
mov
lods
notb
popl
xchg
push
lret
xchg
mov
jge
lea
mov
or
dec
fdivl
imul
fwait
mov
stos
mov
xchg
test
mov
mov
push
movsl
mov
mov
fsubp
jge
xchg
cvtdq2ps
cmovne
jb
mov
outsl
rorl
lds
movsl
imul
psubw
retw
cld
lods
push
adc
jp
xchg
jp
jae
cmp
lcall
mov
ficoml
je
mov
jns
fs
pop
and
ljmp
ds
outsb
ss
shr
aam
mov
mov
mov
stos
lahf
cmp
stos
xor
jp
cltd
lret
fwait
mov
hlt
cs
movsl
das
cmp
cmpsb
sbb
out
add
fidivl
jb
push
mov
aad
sub
jo
xor
or
fidivs
leave
pop
shll
outsl
inc
cli
sbb
popa
fmulp
scas
loop
adc
or
std
gs
mov
cmp
jne
jecxz
xor
jae
lock
dec
leave
test
sub
in
stos
add
dec
ss
fisubrl
jo
addb
or
dec
pop
cmpsl
jns
in
jmp
lcall
fstps
pop
or
xchg
dec
mov
cmp
ljmp
push
push
add
lret
aaa
pusha
adc
aaa
or
dec
mov
and
ret
sbb
out
sbb
adc
xchg
mov
stc
lds
stos
fstpt
lahf
ljmp
add
ljmp
pop
mov
aad
or
clc
mov
addb
push
fildl
sbb
push
fnstsw
sbb
push
or
fldt
pop
mov
fwait
out
cmpb
adc
lret
inc
imull
dec
add
loop
pop
xchg
scas
mull
out
mov
sahf
and
push
and
dec
sub
mov
mov
pop
aam
je
xchg
pop
mov
stos
sub
mov
mov
and
dec
stos
pop
fistpl
aad
jp
pop
cmp
xor
dec
jmp
mov
dec
imul
and
int
clc
lock
and
pop
sbb
mov
frstor
or
or
mov
movsl
cmp
xchg
push
in
or
inc
lcall
add
rorb
mov
mov
and
pop
sub
and
daa
jno
or
mov
mov
setns
pop
mov
scas
mov
testl
cld
push
lret
inc
xor
stos
in
cmp
push
pop
mov
dec
or
fists
test
mov
mov
dec
out
cmp
cmp
adc
stc
or
jb
ret
ds
xor
sub
jo
jae
loop
das
filds
mov
scas
sbb
out
xchg
cwtl
fwait
test
inc
and
pcmpgtw
decb
or
jnp
out
cli
sbb
xorb
aaa
and
les
in
shll
push
shlb
es
inc
push
fucom
fidivs
pop
lcall
dec
jbe
mov
cmp
pop
insl
cmp
dec
scas
std
or
ret
mov
mov
cmp
or
push
outsl
jg
add
daa
nop
outsb
cmp
cmp
xchg
ds
outsl
dec
mov
lahf
jle
sbb
sub
cmpsb
cmpb
jle
mov
imul
rolb
jecxz
cs
and
popf
add
cld
adc
push
mov
inc
testl
xchg
sbb
and
xchg
insl
ljmp
xor
mov
cmp
mov
cmc
sbbl
fwait
mov
cmp
aaa
stos
xor
mov
cmp
daa
jg
hlt
fcmove
push
pop
add
pop
fildl
ljmp
shl
pop
lods
mov
iret
psrad
or
dec
sub
mov
pop
mov
dec
mov
mov
mov
iret
lret
pop
ljmp
inc
es
sahf
or
idiv
rclb
je
ja
das
gs
cmp
xchg
mov
xchg
mov
fcmovnbe
jle
jno
inc
jmp
shl
inc
lret
lret
sbb
shll
movsb
push
mov
aad
mov
inc
dec
xor
jb
test
mov
adc
jnp
cmp
sti
cmpsl
push
addr16
fsts
adc
sbb
jmp
mov
in
stos
or
enter
mov
cmp
mov
and
icebp
cs
stc
dec
mov
test
jno
xchg
shll
inc
pop
shl
jne
loope
jmp
bound
cmc
scas
das
pop
sub
fwait
push
sub
cmp
and
jmp
jbe
pop
dec
pop
test
clc
xor
mov
pop
sbb
aad
movsl
dec
add
pop
loop
leave
and
mov
aam
sbb
hlt
sbb
shr
stc
out
int
push
fdiv
pusha
aas
xchg
aaa
int
ds
fs
fistl
movsl
movsb
aad
and
arpl
ja
and
cmpsl
mov
mov
xor
cmpsb
mov
xchg
sti
jmp
in
mov
loope
enter
xchg
adc
fistpl
lods
lcall
ljmp
lea
subb
push
pop
in
stos
rorl
push
daa
adc
dec
clc
adc
xor
or
lds
push
add
inc
cmp
pop
loopne
adc
imul
popa
jl
pushf
fsubs
lahf
push
fisubl
int3
shll
inc
push
adc
nop
inc
mov
popf
xchg
fldenv
add
insl
lret
insb
mov
sub
ljmp
mov
cmp
mov
in
cli
and
mov
or
in
jo
repnz
out
add
popf
add
andb
jle
mov
mov
fstpl
nop
sbb
bound
incb
xlat
lret
sbbb
cmp
and
cmp
shlb
or
shl
push
push
fs
je
ds
dec
leave
mov
lds
adc
cld
sti
mov
jbe
add
popaw
jne
mov
dec
movsl
adc
into
popf
movsl
cmp
ficoml
mov
imul
rcll
pop
mov
pushf
xchg
leave
repz
cmp
sti
push
fwait
dec
test
iret
sbb
xchg
fstps
inc
push
popa
sub
pop
nop
fldl
int3
inc
shlb
es
dec
subl
mov
jne
mov
je
shrl
xchg
push
dec
inc
or
stos
dec
mov
testl
mov
dec
add
inc
jo
outsl
fstpt
xchg
mov
out
inc
nop
push
pop
js
ds
sbb
shl
call
cwtl
iret
mov
or
clc
and
movsb
inc
fnstsw
in
dec
clc
nop
hlt
pop
push
sbb
outsl
mov
sbb
fdivrs
mov
add
push
pop
add
ljmp
add
mov
cmp
xchg
cmpsb
or
testl
cwtl
jg
not
shll
push
ror
sbb
and
or
popf
inc
sbb
out
in
aas
sbb
mov
fwait
cltd
repnz
bnd
into
cmc
cmpl
lahf
std
and
lahf
xchg
jae
sub
push
pop
scas
int
mov
pop
mov
pop
mov
addr16
inc
lcall
sti
insb
loopne
pop
adc
ljmp
frstor
and
dec
mov
push
shl
pop
mov
pop
xor
test
adc
push
adc
xchg
clc
cltd
stos
orb
sbb
pushl
mov
add
nop
stc
ss
sub
fwait
lcall
cmp
insl
mov
xlat
mov
inc
sarl
sbb
fs
stos
sahf
mov
ja
push
or
push
and
add
xchg
and
mov
dec
test
popf
stc
in
imul
mov
or
in
pop
mov
out
jns
xchg
int
mov
sbb
pop
jp
mov
jle
mov
xchg
cwtl
lret
movl
lods
cmc
dec
pop
std
cmc
out
cmc
mov
fimull
dec
mov
sahf
mov
xlat
pusha
stos
or
arpl
int
test
scas
cmp
push
int3
in
inc
out
pop
in
pop
ret
push
int3
es
adc
outsb
push
push
out
push
inc
gs
push
shl
add
push
outsb
es
jg
dec
dec
lea
adc
push
ret
mov
push
int
push
repz
xor
mov
lock
out
push
int3
insb
outsb
jmp
outsl
lret
lcall
add
mov
lcall
stos
xchg
pop
sub
sbb
pop
mov
cmp
pop
stos
jno
xor
add
pushf
sub
pushf
cmp
test
aas
in
jle
imull
mov
or
mov
lret
loopne
nop
mov
jns
push
pop
ret
je
loope
xchg
or
inc
pushf
idivl
jo
push
dec
xchg
out
scas
fwait
sbb
lea
pop
rorl
inc
loope
sbb
cmpsb
dec
clc
insb
fcoml
push
les
jle
jns
xor
jnp
sub
cltd
xor
repnz
or
xlat
clc
outsl
inc
inc
pop
mov
or
sbb
lret
xchg
xor
pop
std
mov
fucomp
inc
sub
inc
call
xchg
add
arpl
mov
and
pop
inc
jno
pop
stos
mov
std
mov
mov
push
lret
sarl
insl
dec
ficoms
cs
call
stos
mov
pushf
push
mov
inc
dec
dec
adc
and
xor
cmp
push
jecxz
push
test
imul
sub
ljmp
mov
outsl
push
push
sahf
add
sbb
adc
addb
and
inc
xchg
roll
mov
push
sti
insb
cwtl
sub
push
cmc
movsb
shlb
push
cmpsb
sahf
repnz
cmp
enter
lea
and
bound
mov
scas
dec
and
lret
cmp
into
pushl
dec
je
sarl
xor
dec
or
jnp
xchg
arpl
or
fadd
mov
stc
xor
test
xlat
fisubrs
xchg
les
lea
mov
clc
push
ret
les
cli
sub
xchg
popf
fisttpll
xor
out
lea
or
test
mov
or
and
movl
xor
std
movsl
xchg
xchg
adc
mov
dec
test
xchg
mov
dec
fildl
cmc
xchg
xchg
popf
cltd
jg
lahf
cld
pusha
test
clc
lcall
adc
jp
ret
mov
adc
mov
add
mov
pop
pusha
adc
testb
or
xor
fs
or
rorl
das
dec
aaa
sbb
sbb
ja
js
in
pop
sti
add
inc
scas
pop
scas
jno
add
sub
in
shrl
aad
stos
sbb
pop
inc
movsl
insb
jp
fcom
push
xchg
lret
adc
cltd
cli
cmp
shll
int3
sbb
xor
add
dec
mov
xchg
scas
rcl
icebp
sti
shrb
and
pop
sbb
ja
mov
movsb
dec
pop
repnz
clc
xlat
loope
orb
jecxz
cmp
daa
lea
cmp
mov
arpl
pushf
mov
in
in
push
mov
into
lock
shll
push
mov
xlat
push
fldl
adc
xor
inc
data16
and
add
or
xchg
add
mov
xchg
dec
xchg
shll
xchg
lds
xor
loope
daa
imul
jl
xchg
movsb
jge
fs
repz
adc
or
and
inc
fisttpl
je
and
fcmovb
imul
rolb
data16
fxch
leave
imul
movsl
adc
sahf
aas
ret
cmp
push
or
lock
or
scas
push
jns
cmp
sbb
sbb
xor
outsb
lcall
dec
dec
in
push
jne
loope
fld
inc
leave
pop
dec
outsb
or
xor
inc
mov
or
dec
and
push
xor
mov
push
jp
ljmp
in
sbb
and
xchg
xchg
push
call
cmp
addr16
sbb
rorb
lods
fisubrl
cltd
cmpl
add
adc
popf
inc
outsb
aas
jne
pop
idiv
pusha
jle
and
cmpsl
dec
jle
rcl
push
test
mov
shlb
jnp
gs
xor
ja
jne
mov
sahf
hlt
in
hlt
or
pinsrw
das
mov
push
out
ja
pop
cmp
movsb
repnz
loope
cmp
pop
add
push
and
outsb
jo
pop
stos
mov
xchg
push
lds
cmp
jg
sbb
aaa
clc
sub
cmp
fildl
mov
dec
mov
xchg
mov
mov
push
sahf
cmp
add
and
xchg
dec
arpl
xchg
mov
jo
shlb
enter
test
jl
fisubrs
xchg
mov
lahf
jae
dec
rorl
adc
ja
add
adc
inc
sub
sbb
push
cltd
and
test
pop
xor
js
xor
jb
outsl
inc
lret
out
das
and
add
lret
sub
or
mov
adc
jl
pop
in
bound
sub
sub
addr16
lcall
aas
and
movsb
idivl
push
in
nopl
leave
stc
out
cwtl
iret
push
adcl
xchg
mov
cmp
sub
cmp
imul
jl
jg
cmc
jnp
push
out
leave
lods
sahf
adc
pushf
push
sahf
xchg
mov
insb
xorl
in
or
inc
or
ret
or
pop
pop
inc
or
push
push
data16
fcmove
or
stos
popf
hlt
add
lret
xchg
mov
ja
ds
je
xchg
in
jl
sbb
pop
shll
lea
push
mov
inc
push
push
in
mov
xchg
push
cmp
movsl
add
sub
mov
imul
sub
dec
jo
repnz
imul
stos
nop
pushf
outsb
lahf
pop
movb
push
inc
or
loop
popa
pop
test
stos
xor
xchg
lods
jbe
adc
add
cmp
jmp
cmp
add
movsb
mov
lock
pmulhw
lds
cmp
inc
jb
inc
popa
mov
add
add
sbb
mov
add
and
jae
jne
sbb
shll
xchg
ss
test
aaa
xor
mov
out
mov
pop
outsl
out
addr16
sub
inc
rolb
jns
add
orl
mulb
loopne
and
push
orb
cmpsl
mov
je
xlat
and
loop
or
jo
add
inc
fisubs
data16
jmp
push
inc
mov
jns
out
or
pop
daa
inc
jl
insl
test
int
dec
push
or
adc
iret
ret
jnp
insl
jnp
lret
adc
push
notb
cmpsb
aas
icebp
mov
cltd
and
hlt
pop
mov
xchg
dec
stos
mov
xorl
call
pop
mov
popf
or
push
lods
es
jecxz
mov
fistpll
inc
jl
int3
inc
xchg
adcb
repz
add
inc
jg
dec
iret
rolb
inc
mov
inc
dec
les
mov
lea
in
mov
mov
mov
jbe
loopne
mov
lds
test
dec
cltd
fdivl
enter
dec
jo
jle
rcrl
sbb
loope
aam
and
popa
in
popf
je
cmp
jl
inc
and
fstl
stos
out
ret
inc
aam
aas
pop
adc
jo
dec
jecxz
stos
and
jge
mov
push
cmp
popa
xor
fistpll
sub
repz
arpl
dec
stos
xlat
das
jle
adc
sbb
add
pop
fisubl
rcrb
cmc
mov
mov
pop
pop
push
push
int3
mov
jnp
sti
incl
outsb
push
lcall
and
mov
test
popf
inc
mov
pop
or
cmc
inc
lret
pusha
pop
add
test
aad
and
in
xchg
popf
aad
pop
jnp
sbb
mov
pop
push
scas
iret
cld
xor
push
mov
test
cmc
dec
push
lods
stos
lret
ja
filds
hlt
shrb
lret
loop
push
lcall
movl
std
lods
bound
sbb
fimuls
or
repnz
push
call
mov
mov
aaa
in
add
and
xor
aaa
sub
mov
mov
cltd
inc
mov
cwtl
loop
fcoms
jnp
divb
lret
jp
fstps
or
frstor
mov
mov
push
jge
sub
pop
sub
pop
movsl
dec
push
stc
out
or
pop
je
and
icebp
out
call
je
push
dec
xchg
mov
mov
cmpb
jno
lcall
mov
cmp
xchg
push
popf
insb
xchg
dec
mov
pop
test
lods
ds
and
nop
fildl
xchg
mov
idivb
mov
mov
stos
mov
jl
insl
and
mov
hlt
mov
cmc
mov
decb
and
cmpsb
inc
popa
dec
call
ret
repz
minps
shr
out
clc
push
bound
leave
and
sbb
enter
and
mov
inc
push
stos
daa
xchg
rorb
push
pop
sahf
jae
xchg
cmp
iret
rcrb
sbb
imul
adc
or
lahf
lds
jno
cmp
and
sbb
fs
out
sub
fld
xchg
cld
rolb
push
and
and
dec
xchg
stos
movsb
and
sbb
add
mov
or
mov
inc
outsl
rcll
push
sbb
xor
xor
and
jmp
dec
rcr
lods
negl
dec
in
cmp
lods
mov
dec
sahf
push
sahf
lods
sbb
gs
fisttpl
clc
jg
or
shl
pop
lods
pop
and
cli
mov
stc
icebp
mov
mov
testb
xchg
mov
cli
clc
divb
cs
iret
popa
pop
call
cmp
ljmp
into
jge
xor
mov
insl
jmp
push
or
push
popa
push
fstpl
fstp
loop
out
adc
sub
push
test
int3
add
dec
rcll
stos
xchg
test
mov
decl
sbb
sbb
xor
xchg
int
mov
lcall
addr16
pop
imul
adc
enter
sub
inc
mov
bound
fildll
xor
pusha
insl
out
fxam
xor
addl
sbb
mov
adc
sub
dec
sub
nop
sbb
inc
scas
push
push
incl
pop
xchg
mov
lock
and
jnp
movsl
jecxz
outsb
or
aam
sbb
scas
sbb
ljmp
je
outsb
push
or
popf
mov
xchg
lock
out
jl
mov
inc
shrd
js
inc
dec
jge
or
fldenv
call
data16
dec
sbb
jbe
sbb
xchg
sub
out
or
sub
ja
xor
daa
mov
outsb
clc
or
sub
sbbb
out
mov
daa
ret
out
jo
test
int
lcall
dec
mov
pop
xor
lds
xor
fsub
jecxz
in
or
fildll
adc
shrl
pop
ds
in
cmp
out
adc
aad
and
daa
inc
cli
ss
xchg
ljmp
or
add
popa
cmpsb
vshufps
or
mulb
inc
add
inc
out
out
sub
fstps
jne
or
pop
insb
test
repz
inc
mov
jecxz
daa
fsubr
mov
xchg
push
aaa
cld
jbe
out
or
out
adc
mov
sub
pop
inc
loop
jae
jo
push
fldt
fldenv
cltd
pushf
mov
outsl
dec
jg
adc
dec
pusha
jle
iret
stos
mov
aad
test
in
push
dec
jae
js
and
xchg
aas
iret
cmp
mov
mov
pop
cltd
push
addr16
adc
push
and
cmc
xlat
pop
mov
rcrb
cld
or
mov
loope
ds
xchg
push
movsl
out
mov
sti
std
insl
push
mov
jae
sbb
push
xor
inc
in
xchg
jb
jg
fs
std
incl
punpckhbw
dec
xor
ja
repnz
sub
call
adc
sub
enter
mov
and
pop
rcr
push
xchg
and
sbb
imul
mov
mov
pop
ss
mov
pop
adc
jp
mov
sub
jecxz
mov
mov
sub
pop
lds
push
jle
mov
jo
inc
push
das
or
mov
xchg
scas
sub
adc
xor
xchg
mov
cs
and
adc
dec
jp
and
inc
call
or
mov
mov
inc
push
clc
pushf
daa
daa
or
cmp
pop
repz
sahf
pop
add
xor
in
add
loope
shlb
push
rcrl
iret
inc
or
push
and
in
inc
xor
jecxz
push
sbb
push
pop
mov
add
notl
rol
repnz
stos
xsha256
cmpsb
push
lods
push
sti
imul
mov
sub
add
and
std
mov
dec
in
pop
icebp
inc
pop
cmp
jg
dec
dec
cltd
lea
or
or
fucom
lock
xchg
adc
push
cmp
ffree
mov
cmp
inc
insl
jne
mov
ret
mov
dec
out
in
andb
adc
aas
imul
arpl
sbb
fnstsw
sarb
mov
cmp
rcr
pop
stc
push
sub
jle
cmp
jns
jmp
idivl
shrb
addr16
add
dec
inc
lock
scas
sub
in
xor
jno
pushf
cmpb
icebp
xchg
push
xchg
and
pop
dec
lcall
cmp
fs
mov
outsb
xor
repz
int
and
dec
gs
add
das
inc
shl
xchg
adc
push
test
scas
jg
shr
ljmp
int
inc
dec
cmp
imul
ljmp
and
xchg
mov
repnz
add
pop
dec
in
push
xor
cmp
fs
addr16
dec
scas
mov
or
jbe
dec
push
loope
adc
inc
xor
sbb
ret
push
inc
push
aas
sub
mov
call
nop
popa
pop
nop
pop
cld
dec
es
jg
sub
lret
fisubl
subl
or
fldenv
ja
leave
mov
stc
andl
sub
mov
sbb
jns
stc
xchg
jbe
sub
dec
stc
into
in
sub
iret
pop
das
or
cli
dec
sbb
xor
dec
test
lea
ds
jne
jp
sbb
call
push
stos
arpl
repz
test
cmpsb
test
addb
je
mov
rcrb
mov
adc
lods
or
jb
fiaddl
inc
scas
mov
adc
lods
push
jp
adc
xor
sub
mov
int
mov
imul
out
sub
inc
xor
fists
inc
roll
lcall
add
dec
mov
pop
es
stos
enter
gs
imul
sub
push
mov
mov
lods
lock
cwtl
je
lcallw
stc
cmp
pop
cmp
adc
hlt
and
sbb
add
xor
test
xchg
dec
jne
xchg
cwtl
aas
or
incb
bound
xchg
insb
jp
sbb
dec
dec
pop
incl
mov
movsl
lds
pop
push
mov
fwait
lret
lahf
jae
jg
pushf
ljmp
xchg
lret
incb
dec
or
cmp
pop
push
mov
cmpsl
xchg
mov
insl
movsl
rcrl
pop
sub
sbb
cmp
inc
or
dec
int3
and
lds
rclb
mov
int3
and
mov
or
push
int3
cmp
inc
jae
dec
pop
xchg
jl
mov
std
or
ds
push
jg
imul
cmpl
adc
pop
test
add
nop
xchg
push
jge
inc
pop
sub
adc
ja
lea
cmpsb
cmpsb
mov
pop
fadds
fsts
or
lock
movsb
push
sub
jne
repz
call
dec
sub
mov
add
cmp
xchg
cmc
in
adc
pop
movsl
dec
mov
stos
std
repz
idivl
jbe
test
dec
pop
sti
imul
push
sahf
mov
or
adc
stos
adc
xor
pop
xor
sarb
cmpsl
negb
loopne
xlat
inc
test
in
out
dec
aam
and
outsl
mov
xor
cmp
clc
sub
and
cli
in
js
or
sbb
sub
fldt
adc
sbb
dec
pop
testl
inc
enter
movsb
push
fstl
ss
lds
fistl
das
lss
and
jns
cmpsl
ja
fs
mov
jmp
orl
adc
add
push
roll
push
xchg
enter
out
push
dec
int3
mov
lcall
outsl
repnz
dec
imul
repnz
sub
repnz
dec
hlt
out
and
in
shll
mov
add
mov
sbb
popf
push
push
xchg
push
xor
mov
xchg
push
ret
and
and
adc
popa
iret
lds
mov
loopne
add
stc
arpl
mov
idiv
ret
cld
pop
divb
inc
pop
std
sub
addb
int
fsub
or
mov
adc
jb
test
sub
mov
test
mov
nop
jecxz
pop
fwait
sbb
lods
lahf
and
clc
and
js
scas
ds
mov
out
mov
fbld
xchg
jne
fistpll
mov
xor
loop
imul
sbbl
lds
addr16
push
test
repz
or
aaa
or
cld
dec
add
outsb
xchg
and
fidivl
inc
aam
dec
outsl
scas
les
or
test
adc
or
push
xchg
lea
sub
aam
icebp
or
mov
rcrb
arpl
add
fst
jg
lea
or
xchg
sbb
pop
dec
push
mov
idivl
insl
cmp
lret
aam
mov
jb
ljmp
push
and
pop
sti
cmpsl
xor
mov
imulb
flds
push
cwtl
xor
imul
sahf
add
in
fbld
cmp
mov
pusha
aad
fdivrl
sti
sahf
mov
outsl
cld
xchg
in
dec
pop
shrb
lcall
orb
push
and
shl
out
sbb
or
mov
stos
setp
fdivp
mov
sbb
push
push
pop
mov
imul
dec
mov
imul
fidivrl
inc
cli
jg
aaa
xchg
sbb
sub
les
cs
out
les
leave
sub
mov
pusha
dec
xchg
sbb
repz
adc
cmp
repz
mov
jp
rorl
out
stc
mov
push
mov
lea
push
js
cmp
adc
shlb
dec
dec
sbb
lods
mov
jecxz
jae
cld
pop
mov
lods
xor
fdivrl
iret
lcall
clc
fldenv
scas
mov
orl
sbb
sbb
leave
aaa
or
mov
in
repnz
cmp
mov
and
push
or
int3
out
rcrb
fucomp
cmp
lcall
aam
sbbl
in
lods
and
adc
loopne
pop
jb
fidivrs
pop
adc
adc
aad
and
mov
ret
adc
xchg
sti
dec
push
bound
fwait
lret
iret
lea
movsb
push
pop
mov
xchg
pushf
iret
pusha
push
addr16
repz
push
dec
in
and
int3
int
dec
push
pop
jle
pop
jle
ror
movsl
bound
jl
cmp
cltd
jne
sub
jge
xchg
pop
aad
jb
add
inc
cmp
lea
jp
cmp
out
fistpl
loop
adc
mov
and
adc
mov
mov
out
pop
push
cwtl
or
int3
rclb
hlt
imul
fistl
aam
add
testb
sbb
sbb
jle
mov
push
lret
xchg
and
or
in
pop
adc
jne
sbb
jnp
push
xchg
cmp
pop
cwtl
test
cli
and
incl
mov
gs
in
testb
xchg
mov
push
sub
mov
lods
adc
cli
ficoms
mov
mov
xor
sbb
arpl
ds
cmp
inc
xchg
sahf
xchg
fstpl
xor
sbb
cmpsb
vmread
and
cmc
inc
xchg
int3
aam
fists
mov
mov
sbb
int
leave
push
mov
add
testl
iret
sbb
jmp
enter
data16
aaa
mov
lock
test
push
mov
movsl
mov
js
test
mov
pusha
cwtl
shlb
sti
mov
mov
xor
dec
or
sahf
fs
sbb
and
lods
test
sub
sub
sbb
jmp
sbb
outsb
sbb
lcall
fsubrs
daa
or
lret
or
pushf
push
push
mov
sub
push
divl
xor
in
and
inc
xchg
pop
popa
nop
jo
push
or
jb
mov
syscall
lods
pop
ljmp
mov
cmp
inc
scas
outsb
mov
mov
jge
scas
stc
pushl
jecxz
xor
dec
push
add
pop
pop
mov
dec
or
mov
iret
mov
scas
add
xor
imul
les
insl
cmp
insb
fs
divb
xor
popa
push
mov
sub
add
sbb
in
pushl
movsb
mov
int3
cld
fidivl
js
dec
xor
sbb
call
jge
xchg
sub
fsubr
ret
fucomi
inc
inc
dec
insl
lcall
xor
pop
or
xor
and
xor
mov
lahf
ret
icebp
pop
xchg
rclb
dec
outsl
insl
movsl
cmp
pop
inc
lds
sbb
pop
or
mov
fstpl
push
movsb
jecxz
into
mov
mov
inc
cmp
add
xchg
outsl
mov
andb
xchg
popa
mov
movsl
cmpsb
dec
sbb
xchg
sub
insl
nop
ficomps
mov
mov
xor
in
pop
test
cmp
mov
cli
xchg
dec
dec
sbb
pusha
sub
rcrl
xchg
pop
push
mov
mov
lea
stos
pop
in
insl
add
xchg
push
jno
bound
cld
imul
ret
push
xor
sub
mov
hlt
inc
out
mov
sahf
sar
repz
out
cmp
out
mov
fs
mov
leave
xor
xchg
sahf
roll
cmc
aam
stc
dec
sbb
inc
xlat
dec
mov
xchg
mov
aaa
test
xchg
adc
mov
cld
rorl
shl
cltd
xchg
push
scas
test
cwtl
movsl
mov
push
adc
or
cmp
xor
xchg
stc
inc
ss
xchg
push
xor
mov
adc
or
add
es
mov
repnz
mov
pop
sub
add
lret
lods
sbb
inc
ret
fmuls
xor
cmp
mov
into
adc
jo
fisttpl
and
xchg
cmc
fisubrs
dec
loopne
and
insb
ljmp
add
icebp
push
ret
xor
pushf
pop
add
jo
cmpsl
scas
mov
push
ret
in
cmp
adc
mov
in
mov
je
add
sub
fs
mov
arpl
cli
ret
and
cmc
imul
ror
filds
out
mov
into
add
test
adc
dec
push
fidivl
cwtl
adc
jg
movsb
cmpsb
lret
adc
js
loopne
jae
test
push
adc
shlb
mov
and
int
jae
imul
add
sahf
loop
loop
mov
out
int3
adc
in
lods
or
out
in
cld
dec
mov
ss
xor
fidivrl
dec
mov
fdivs
popl
pop
cmp
jbe
fdivp
cmpsb
mov
je
and
pop
lret
mov
sbb
push
adc
xor
aaa
stos
mov
cmp
xchg
push
cmp
add
rcll
ja
mov
mov
push
xchg
scas
lods
add
mov
mov
jae
pop
pop
sbb
stos
cwtl
push
xor
mov
sbb
xchg
push
outsb
rcrl
lock
inc
into
dec
cmpsl
mov
pushf
mov
inc
mov
icebp
dec
xchg
add
pop
leave
dec
inc
sub
xchg
lahf
jnp
insl
add
cmp
enter
mov
lock
stos
in
test
push
sahf
fisubrs
xchg
adc
pop
lds
xchg
jge
pop
fnstsw
arpl
dec
xor
aaa
mov
inc
sub
sub
out
aad
mov
daa
adc
mov
lea
add
mov
pop
outsb
cmpsb
xchg
adcb
fnstenv
cmpsb
mov
sub
jg
icebp
loop
cmp
mov
mov
sarb
fstpl
sbb
sbb
jae
std
add
cmc
out
outsb
cltd
cmp
imul
pop
mov
shrl
icebp
sub
adc
sub
dec
popf
or
icebp
or
cs
data16
loopne
mov
sub
movsb
adc
jmp
and
out
int3
incb
popf
xor
sbb
aas
arpl
xor
insl
bound
push
out
mov
mov
xchg
pusha
or
cmpsb
js
loop,pn
aas
lods
push
fistpl
adc
shr
insl
jne
cltd
xchg
add
stos
mov
es
mov
loopne
jnp
jbe
xchg
lcall
aas
sub
gs
in
jo
lock
movbe
fcomps
addl
enter
mov
cmp
lahf
xchg
repz
and
aas
out
divl
cmpsl
cld
mov
cld
cwtl
mov
mov
push
inc
outsb
mov
out
shl
push
loope
aam
xor
rcl
ss
push
roll
sbb
das
add
sbb
arpl
les
nop
jle
sub
mov
jp
lcall
and
jb
test
jle
sbb
cmp
nop
sub
aam
arpl
inc
outsl
jno
push
jle
jns
or
add
mov
bound
xchg
mov
sbb
adc
cld
xchg
loop
jmp
les
pop
fidivs
mov
inc
shrl
in
popf
iret
loop
ret
xchg
mov
call
push
int3
and
xchg
test
mov
fildl
inc
test
xchg
xchg
adc
xor
push
push
push
lea
cltd
jbe
shll
push
sub
and
nop
inc
stos
jb
sub
mov
mov
jg
stc
dec
movsl
loope
push
sbb
test
dec
mov
mov
psllq
xor
test
mov
dec
movsb
cmp
inc
int
arpl
lcall
loope
or
push
pop
stc
dec
mov
notb
test
add
test
sar
or
nop
dec
or
test
mov
pop
stos
jno
mov
add
xor
ret
lret
fdivl
loop
lds
jecxz
es
in
inc
lcall
shlb
out
pop
jnp
pushf
adc
btc
xor
jbe
mov
jl
inc
push
out
push
add
add
xchg
or
in
fisubrl
rcrb
jl
fidivrl
mov
addr16
lcall
aam
test
icebp
sarb
dec
xorb
cmp
pushl
std
pop
js
adc
pop
sbb
or
out
inc
imulb
push
or
push
sbb
or
inc
out
xchg
pop
ljmp
or
sbb
or
cld
add
enter
mov
cmpsl
inc
ja
dec
add
mov
add
in
jbe
js
add
push
xor
pop
inc
or
inc
imul
shll
js
mov
js
sub
jp
cs
int
xor
pusha
repnz
aam
shlb
dec
into
shll
or
aam
or
or
inc
loopne
rdpmc
pop
lods
pushf
aam
xchg
sbb
sbb
out
jo
repz
push
test
test
xor
ret
inc
dec
aaa
pop
add
lock
mov
jne
inc
mov
jae
mov
adc
fsqrt
popf
pop
cmp
cwtl
adc
pop
sarl
in
insb
sbb
fwait
push
cli
jecxz
mov
mov
mov
call
inc
in
mov
jo
cmp
xchg
outsb
and
adc
ja
int3
dec
mov
inc
mov
mov
leave
and
and
test
pop
mov
mov
mov
adc
test
pop
fstps
add
and
xchg
mov
mov
inc
in
outsl
xchg
dec
icebp
inc
cmc
outsl
fwait
sub
cmp
mov
inc
cmp
mov
popf
mov
lods
sbb
mov
xchg
jns
push
mov
fwait
sbb
ss
mov
push
sarl
fildl
xchg
repnz
shl
fst
xor
inc
sub
aam
daa
je
xor
loope
xchg
xchg
push
data16
jo
push
jp
mov
rcrb
cmp
repz
out
fdivs
pop
xchg
adc
out
lock
push
and
pop
insl
jne
pop
je
arpl
sub
out
leave
mov
mov
ret
cwtl
aaa
xor
jne
into
xchg
push
mov
cmpsb
mov
add
cmp
stos
sub
js
jo
insl
insb
decb
daa
mov
dec
rcrb
cmp
ret
test
jmp
shrb
fimull
in
mov
add
jl
loop
mov
add
std
mov
xchg
xchg
es
jnp
inc
lea
jg
sbb
gs
inc
sub
xor
lock
int3
clc
lret
add
shr
stos
mov
inc
bound
xor
daa
mov
mov
add
mov
and
and
pop
insl
push
adc
pop
mov
fidivrl
sbbl
push
int3
outsl
mov
mov
mov
push
aad
mov
add
call
lea
jo
iret
mov
faddp
xor
dec
in
mov
cwtl
stos
jle
jmp
pop
jnp
subl
fcoms
fs
jne
jmp
dec
cwtl
adc
mov
push
test
xchg
xchg
sbb
xchg
mov
and
xlat
dec
lahf
cmc
inc
aad
push
push
dec
adc
stos
push
lock
pop
push
sbb
adc
mov
gs
das
mov
and
rol
nop
ss
push
add
mov
jne,pn
call
aad
mul
jl
and
repnz
jmp
test
mov
xchg
dec
add
sub
sti
xchg
fisubl
mov
sub
fiaddl
sub
add
adcl
mov
adc
cmp
hlt
add
or
mov
pusha
inc
daa
dec
fisttps
add
xorl
aam
lret
xchg
popa
xor
sbb
outsb
pop
and
or
cld
in
dec
inc
xchg
icebp
push
lock
scas
and
or
adc
in
mov
sub
bound
adc
cltd
sub
cltd
xor
push
cmc
add
stos
or
add
scas
jo
jne
pushl
popl
aaa
icebp
mov
das
icebp
fisttps
pop
rcr
jns
leave
rcrl
les
repz
iret
push
sbb
jmp
add
push
aam
cwtl
and
bound
jmp
outsl
xchg
aaa
imul
stos
xchg
sbb
sbb
mov
popa
scas
add
cld
dec
dec
addr16
test
and
mov
mov
jo
mov
lret
aad
fdiv
add
mov
mov
pop
hlt
inc
lret
cmpsl
lret
push
sub
cmp
repz
gs
or
inc
addr16
mov
push
mov
add
or
push
xchg
loop
lret
mov
test
xchg
lret
lods
sbb
mov
stc
xchg
adc
pop
push
gs
pop
mov
push
and
scas
pop
out
sbb
cmp
mov
jb
push
mov
pop
mov
in
sub
jl
fs
sti
shlb
inc
and
inc
cmp
test
nop
sbb
dec
sar
xchg
dec
loop
push
mov
cmp
xchg
es
lcall
add
add
ret
mov
popf
jge
add
into
inc
xor
xor
call
int
nop
or
sbb
imul
pop
pop
or
rorl
call
pop
sbb
sbb
mov
mov
xchg
pop
jnp
sub
jge
dec
lcall
leave
mov
mov
adc
roll
sub
jno
or
cli
testb
aad
adc
add
mov
lret
jns
jle
clc
jno
inc
ficompl
into
hlt
jns
dec
sbb
inc
push
inc
cwtl
add
mov
loop
mov
xchg
jg
sarl
mov
pusha
mov
mov
pop
bound
mov
andl
fnstcw
xchg
dec
lods
lret
mov
add
pushf
hlt
cmpsl
pop
in
mov
xchg
mov
cmp
sub
mov
pop
out
dec
fmull
inc
adc
das
and
cmpsb
xchg
mov
xchg
add
std
lds
mov
rorl
adc
mov
dec
mov
cltd
in
sbb
xchg
xor
cmpsl
out
push
fstpl
inc
aaa
dec
pop
pop
ljmp
push
aaa
loopne
movsb
out
data16
xor
and
lods
out
sub
out
sub
xchg
stc
add
imul
xor
add
bound
insl
sbb
rorl
sub
push
inc
adc
push
int
xor
std
dec
repz
pop
aaa
test
hlt
sbb
sbb
in
and
add
rorb
adc
stc
scas
out
adc
stos
scas
and
addr16
shlb
inc
mov
xchg
imul
mov
cltd
push
loope
add
mov
dec
lret
loopne
push
repnz
mov
cmpsb
jo
roll
out
pop
push
lcall
fcompl
dec
cwtl
push
inc
sahf
push
mov
dec
icebp
pop
jno
xchg
push
js
ljmp
in
push
jl
dec
dec
push
sub
pop
clc
sarb
add
mov
mov
dec
push
sahf
pop
shlb
in
popf
pop
mov
out
bound
and
lret
inc
addl
es
sahf
push
mov
xchg
stos
jg
ficoms
pop
push
xor
inc
xor
outsl
pop
clc
push
dec
xchg
inc
mov
in
mov
std
clc
test
jg
lea
jne
or
inc
cli
enter
adc
into
mov
arpl
mov
dec
or
cmp
cmc
daa
pop
and
enter
test
pop
flds
imul
cmp
mov
lds
adc
sbb
xchg
fdivs
scas
mov
pop
mov
pop
shrl
xor
ret
data16
cld
and
xor
push
or
cli
stos
movsb
bound
lret
xor
mov
lahf
lods
in
and
inc
mov
mull
xchg
js
addb
lahf
pop
rorb
jae
scas
xchg
in
inc
cmp
pop
adc
or
dec
test
jecxz
int
mov
jno
ds
arpl
mov
sub
insb
fadd
hlt
rcl
jle
mov
inc
in
cmp
or
pop
in
stc
jecxz
mov
xor
movsl
fwait
add
std
mov
pop
xor
cmp
push
mov
mov
xor
incb
sbb
add
xchg
pop
add
outsb
aad
push
adc
pusha
cld
int
push
mov
cmp
push
push
lret
mov
push
incl
push
xor
test
std
xorb
xchg
mov
inc
inc
push
arpl
into
xchg
lods
testl
sti
xchg
stc
dec
mov
pop
push
repz
fidivrl
push
lods
inc
and
mov
or
std
cmp
test
mov
les
lds
or
add
jae
mov
mov
push
or
dec
imul
mov
fdivr
in
clc
mov
xchg
xchg
xchg
insb
jl
mov
lret
leave
inc
push
movsl
mov
dec
cmp
enter
sub
sub
out
andnps
or
xchg
mov
iret
sti
mov
pushf
iret
jmp
jecxz
and
in
fidivrl
and
inc
mov
and
enter
cmp
xchg
jne
cld
out
insl
test
mov
pop
jne
enter
in
push
je
data16
aas
pop
leave
add
mov
xchg
movsl
repz
dec
sbb
adc
imul
adc
dec
jl
mov
jmp
or
xchg
xchg
sub
push
ljmp
imul
mov
div
and
and
mov
xchg
inc
mov
lcall
and
jg
shlb
cmp
movl
xor
leave
fstl
push
rol
sub
pop
jg
xor
inc
pop
pop
cmp
cmp
push
and
inc
insb
aas
cmp
push
push
aaa
add
int3
es
inc
jecxz
and
jle
lcall
jge
aam
xchg
jge
xor
mov
ds
pop
cmpsb
ret
gs
das
aaa
adc
es
or
adc
popa
pushf
sub
movsb
aaa
leave
or
arpl
fwait
hlt
loopne
hlt
aad
rcr
adc
nop
inc
test
scas
fsubrs
mov
inc
sub
movl
aam
popf
xor
ficompl
pop
iret
aad
and
mov
dec
sbb
push
stos
addr16
in
add
les
das
stc
push
shlb
lahf
repz
outsl
jge
sub
into
xchg
imul
rcll
add
mov
stos
out
popf
or
jle
ss
aaa
xlat
arpl
flds
inc
sbb
pop
push
aas
mov
pushf
push
xor
jnp
sub
std
int3
lock
mov
mov
fwait
add
xchg
or
inc
or
fsub
cmp
xor
mov
int
push
lods
xorb
mov
mov
loope,pt
cwtl
jo
test
push
add
inc
jge
jg
fildll
lahf
imul
stos
add
jp
push
and
cli
pop
mov
xorb
out
sbb
push
sarb
sti
subl
lret
jne
js,pn
clc
movsb
icebp
lret
mov
je
fldcw
lds
gs
insl
cmpb
sub
inc
hlt
jg
or
leave
jge
icebp
popa
sub
sbb
mov
loop,pn
leave
adc
in
je
pusha
mov
mov
popa
clc
rorl
iret
inc
das
cld
pop
aas
cmpsl
test
adc
dec
aad
leave
lods
and
scas
push
jge
ljmp
pop
lds
cmp
mov
cmp
dec
mov
scas
lock
sti
scas
xor
jno
lods
jne
mov
and
mov
ret
adc
and
inc
setno
stos
divb
pop
inc
mov
in
inc
shl
cmp
inc
add
adcl
mov
jp
ljmp
mov
test
jmp
test
mov
jae
jns
in
popf
notl
dec
movsb
inc
aam
inc
fidivrl
out
cltd
sbb
inc
xchg
cmp
std
jo
and
pop
mov
fistl
orb
push
push
mov
outsl
fidivs
aas
cs
sub
scas
dec
push
jmp
xchg
pop
shrl
cmpsl
cmp
das
and
mov
mov
testb
dec
dec
and
push
orl
das
mul
cmpsl
mov
sub
adc
inc
xchg
in
mov
or
cs
cmp
decl
and
push
mov
add
pop
lock
push
in
sbb
xchg
cwtl
add
ret
daa
stc
aam
aaa
lret
adc
add
sub
repnz
or
push
inc
mov
daa
aas
sbb
popa
xor
pop
mov
pop
fsubl
or
lret
adc
aas
mov
cli
xor
sbb
cmovno
pop
cmp
pop
int
add
out
cmp
imul
aad
inc
lds
in
cmpsl
lock
imul
push
lods
lods
lcall
jmp
cwtl
outsl
outsb
xchg
xor
outsb
jmp
and
subl
cmp
dec
mov
in
dec
pop
or
cmp
loope
icebp
scas
sub
shlb
cmp
push
orb
cmpsl
fisttpl
sbbl
insb
fwait
push
popa
sbb
andl
jge
js
pushf
dec
xchg
add
cmp
sbb
lcall
rcl
adc
mov
adc
pop
push
mov
inc
pop
sub
dec
push
test
fisttpl
jmp
lds
xchg
stc
movsl
pushl
and
leavew
and
mull
jae
jle
cltd
idivb
cmp
dec
daa
icebp
pop
inc
arpl
jmp
push
sub
lret
stos
dec
shrb
mov
sbb
iret
fnstcw
cmp
pop
and
andl
or
stos
cmpsl
pop
xchg
mov
fwait
outsl
call
add
std
and
mov
xchg
into
in
lods
lds
inc
outsl
in
xor
in
mov
or
cmp
push
lcall
ret
out
loop
add
repnz
jno
stos
push
loop
mov
mov
scas
pop
nop
lret
mov
xchg
cmpsl
lret
push
mov
mov
loope
pop
negb
push
adc
mov
movsl
and
add
out
getsec
or
pop
push
mov
fsubs
shl
ret
jnp
jmp
shr
mov
xchg
push
out
push
insb
mov
cltd
mov
nop
leave
clc
int
dec
sbb
sbb
sub
jg
mov
addr16
repnz
movsl
jge
stos
shr
lea
add
sbb
jmp
mov
push
sub
mov
divl
loopne
adc
and
ret
cmc
mov
lret
leave
and
ja
jae
mov
repz
jg
sbb
xchg
scas
outsl
xchg
je
nop
iret
sbb
adc
fdivrs
pop
dec
add
pushf
popa
jp
xchg
inc
gs
push
std
and
mov
enter
xor
mov
lock
mov
push
push
mov
mov
mov
sub
push
jle
outsb
dec
push
mov
sti
test
int3
mov
inc
mov
ss
pop
jle
ss
orb
lahf
dec
inc
xor
jge
xor
xchg
into
lods
push
pop
arpl
pop
xchg
sub
jo
or
pop
cmp
out
aam
imul
test
ja
lret
lret
add
sub
xchg
stos
movsb
fwait
jne
push
sbbl
sarl
mov
movsl
test
push
jae
mov
push
shll
aam
or
ret
jb
sub
adc
rolb
lret
inc
push
rolb
aam
pop
sti
enter
in
mov
daa
xchg
inc
xor
inc
pop
loop
inc
bnd
jmp
push
sbb
adcb
jp
pop
jnp
bound
into
sbb
bound
test
ljmp
fdivrs
nop
addr16
jmp
mov
jge
cmp
dec
mov
cmp
in
adc
loopne,pn
insl
mov
mov
jg
adc
mov
loopne
fnstsw
jo
mov
cmp
and
push
xor
mov
lds
inc
loope
xor
lret
or
shrl
xchg
enter
xor
ljmp
dec
popf
ds
repz
push
iret
repnz
add
xchg
mov
or
leave
in
mov
jae
test
inc
bound
lret
stos
fimull
push
adc
into
scas
insl
mov
and
cmp
lods
sub
xor
cltd
mov
lods
cmp
lret
jns
lods
mov
xchg
scas
cmpsb
test
inc
les
fsubrs
sahf
sbb
std
mov
lcall
outsb
xor
or
lock
inc
popa
mov
bound
addb
mov
push
inc
popa
outsl
rcrl
rcrl
mov
add
jle
test
sarl
xchg
in
mov
gs
fcmovnbe
dec
push
push
daa
aaa
adc
jae
xchg
imul
and
into
jl
leave
shlb
fs
test
mov
adc
add
mov
lahf
and
movsl
xchg
ja
and
outsl
sahf
jbe
ja
imul
sub
aaa
scas
adc
push
and
popa
or
xchg
push
cmp
pop
jg
xchg
cmp
pop
xor
or
unpckhps
pusha
pop
movsb
and
lea
xchg
xlat
shrb
mov
pop
mov
fnstsw
fidivrl
es
fwait
or
shr
push
mov
xchg
xchg
dec
and
xchg
fadds
lea
push
mov
mov
pop
or
xchg
in
out
scas
xor
enter
out
mov
inc
scas
sbb
out
adc
mov
mov
push
cmc
in
hlt
add
mov
xrelease
addl
xchg
imul
fldl
fidivrs
les
inc
sub
jl
sahf
int
into
adc
cmp
dec
dec
stos
push
jne
and
cmp
pop
mov
jo
out
mov
aad
mov
shll
jge
cmp
or
leave
clc
mov
ds
push
xchg
leave
sub
cmpsl
and
scas
sub
fs
loopne
insl
jo
or
ja
in
sbb
fldl
jo
xchg
addr16
data16
xor
cltd
adc
insl
jno
in
mov
orl
cmc
jge
mov
push
jp
mov
jecxz
sahf
stc
ds
jl
jmp
push
push
and
jb
scas
adc
shrb
mov
cltd
push
scas
mov
ss
neg
in
xlat
fisttps
mov
or
out
pop
xchg
xchg
mov
scas
repnz
cwtl
inc
jge
sub
sub
sub
dec
mov
iret
cmp
mov
addb
nop
push
iret
aam
popa
pop
push
xchg
jge
mov
aad
pop
mov
mov
cltd
push
add
ss
sbb
push
mov
push
push
sub
mov
mov
cmp
pop
mov
inc
xchg
or
movsl
dec
ss
inc
mov
xchg
pushl
js
mov
mov
cmp
or
dec
loopne
xrelease
push
rorl
add
cmpsl
or
cmc
mov
pop
inc
mov
jnp
mov
mov
lret
aaa
nop
dec
lods
faddp
fildll
mov
rorb
push
xchg
pop
fdivrs
mov
add
and
mov
or
adc
pop
mov
sub
cmpsl
xor
out
and
fsubrs
xchg
jg
or
and
xor
ss
sarb
sbb
fimuls
mov
push
insl
cmp
mov
lods
or
rcr
ret
fstps
xor
les
pushl
in
xor
push
cmp
cmp
loopne
popa
adc
je
enter
mov
sub
sub
in
jecxz
lock
aad
scas
mov
mov
clc
loop
movsb
lret
das
lahf
jl
stos
outsl
or
mov
jb
setbe
cmpsb
add
cmp
inc
pop
mov
or
add
pop
mov
xchg
mov
stc
inc
xchg
repnz
addb
mov
call
or
pop
sahf
mov
xchg
aad
fsts
fisttpl
pop
lds
ficoml
aad
jmp
inc
std
add
mov
pusha
cmp
mov
fsubl
pop
mov
and
cli
jmp
cmp
out
dec
inc
ret
negl
mov
ljmp
loop
add
enter
test
xchg
cltd
pop
jbe
mov
sub
push
fsubrs
das
movsb
jg
je
adc
mov
inc
pop
rolb
sbb
test
lock
pop
inc
mov
call
fscale
xor
imul
subl
cld
jo
sub
adc
das
mov
push
bound
cmpsl
sbb
or
mov
mov
nop
inc
xlat
hlt
or
ret
pop
xor
jbe
cmp
lret
mov
cmp
cmp
lods
fists
xchg
lahf
scas
std
sbb
push
mov
jmp
sbb
inc
push
dec
mov
out
pop
xchg
xchg
push
rcr
inc
loop
imul
xchg
sbb
xchg
mov
push
mov
push
push
mov
mul
mov
cmp
into
cmpsl
push
pop
repz
xchg
in
es
dec
lret
cltd
pop
adc
mov
adc
sbb
mov
pushf
pop
gs
adc
or
popf
adc
pop
ss
cld
jecxz
jbe
stc
jp
xor
loope
mov
add
jo
adc
or
mov
mov
fiaddl
pop
in
es
pusha
insl
and
cmpsl
mov
sub
stos
stos
push
stos
or
ret
adc
shlb
xor
out
mov
push
cmpsl
shr
adc
es
pop
mov
mov
mov
sub
jns
lods
lret
jmp
mov
popa
push
subb
sarl
lds
mov
mov
iret
pop
xor
sub
data16
aaa
pop
fs
mov
test
push
or
adc
jle
add
divb
movsl
add
cli
lods
bswap
shll
xchg
lret
cli
add
insl
iret
adc
jae
hlt
xor
lcall
js
adc
inc
mov
add
in
stos
faddl
inc
push
loop
inc
int
dec
int3
ret
and
nop
or
cmp
push
lea
sbb
dec
stos
add
aas
add
jbe
dec
xor
or
adc
imul
pop
gs
imul
xchg
cmp
pop
xorb
shl
fldenv
pop
aad
cmp
es
sub
cmp
ficoml
and
test
in
popa
test
push
jo,pn
cs
cmc
jg
xchg
stos
iret
dec
mov
rclb
pop
fs
sbb
std
andl
mov
in
jbe
rcl
pop
add
aam
popf
pop
adc
stc
test
les
sub
jecxz
popf
ret
push
adc
data16
out
loop
or
pop
add
xchg
xor
nop
jnp
popf
icebp
fsubr
mov
ret
iret
jcxz
mov
fnstenv
push
sbb
fnsave
push
xchg
adc
mov
jo
adc
push
mov
pop
mov
dec
inc
adc
stc
sbb
mov
push
sbb
cmp
je
nop/reserved
pop
push
les
mov
cmp
js
inc
cld
dec
push
sub
push
fcoml
aam
push
std
js
imul
fadd
sbb
xchg
mov
push
push
aad
insb
lods
stc
cmp
jno
test
mov
jle
jno
or
adc
ds
push
lods
clc
push
xlat
lods
and
fnstenv
mov
mov
aam
test
aam
mov
mov
movsl
mov
mov
mov
mov
call
leave
pop
jecxz
sub
fwait
iret
lcall
test
cmp
fwait
mov
pop
and
mov
into
mov
mov
dec
mov
and
add
movsl
std
adc
mov
xchg
mov
loop
add
or
pop
icebp
xchg
xor
loopne
mov
jns
xchg
mov
into
fnstenv
adc
mov
sub
pop
xchg
push
mov
mov
aad
mov
push
loopne
mov
jecxz
loope
test
mov
inc
xchg
sub
loopne
pop
sbb
add
mov
ficompl
jle
xchg
scas
mov
add
imul
movsb
lock
test
push
cmc
shlb
and
orb
inc
adc
xchg
ret
test
loopne
sub
repnz
mov
jne
xchg
mov
cwtl
pop
pop
pop
inc
rcrb
test
clc
gs
je
mov
jecxz
xchg
pop
leave
mov
stos
push
jne
jbe
mov
js
add
gs
test
mov
rorb
adc
mov
pop
cmpsb
cs
dec
xchg
jg
test
cli
outsl
outsb
mov
ds
push
sub
dec
add
jne
aad
inc
xchg
add
adc
into
aas
push
xchg
mov
and
loopne
enter
adc
js
loopne
loopne
mov
mov
stos
add
in
jecxz
out
scas
mov
and
enter
inc
adcb
cwtl
and
and
ss
subl
adc
add
outsb
and
push
aam
push
sub
lds
pop
pusha
in
sbb
adc
lds
pop
mov
pop
les
sub
xor
inc
xor
stc
dec
iret
or
mov
sub
push
mov
dec
jge
sbb
pop
aaa
add
fimull
add
jl
movsl
lcall
mov
addb
ret
cmp
sbb
in
loopne
in
sbbb
gs
pop
mov
and
int
and
and
lret
das
cmp
and
mov
hlt
jle
jg
jnp
hlt
sarl
inc
mov
or
mov
adc
inc
mov
jge
push
push
movsb
rolb
inc
mov
xor
xlat
mov
icebp
push
mov
cmp
out
dec
ds
dec
cmp
outsb
push
xor
mov
jne
cwtl
pop
mov
jge
lahf
in
mov
push
shl
xchg
decl
push
leave
and
stc
adc
lcall
dec
jne
stc
sub
dec
pop
push
ss
pop
cmp
xchg
nop
ds
mov
cs
mov
daa
pop
sub
cmp
iret
fwait
orb
cli
gs
add
dec
adc
addr16
repz
fbstp
add
cmc
inc
pop
add
cmp
fdivrs
sbb
out
pop
xor
push
ja
in
push
and
repnz
insb
sub
cmp
inc
popf
adc
push
xchg
push
cmp
mov
xor
arpl
mov
dec
lcall
icebp
idivb
pushf
xchg
push
or
test
insb
nop
lea
neg
pop
cmpsl
ficoms
ss
jbe
in
adc
xor
sbb
mov
and
jg
mov
mov
jmp
test
dec
hlt
sbb
aaa
push
mov
cmpl
mov
out
fwait
jmp
add
push
xor
pop
ss
dec
fwait
push
shlb
pop
lret
ret
andl
mov
jo
cli
mov
insl
in
mov
cltd
pop
gs
lock
pop
dec
dec
nop
mov
test
cmp
mov
inc
testb
movsb
inc
xor
xor
leave
xchg
pop
mov
popa
sbb
sub
sub
inc
add
in
test
hlt
mov
xchg
negb
orb
mov
adc
lahf
adc
inc
jae
or
hlt
sahf
push
lock
sbb
or
in
inc
data16
push
dec
cmp
loop
cmpsl
cmp
out
aad
sti
add
leave
jno
repz
push
push
mov
outsl
ss
hlt
mov
call
or
arpl
jle
mov
je
or
push
test
outsl
or
mov
sub
inc
and
mov
iret
inc
fnstcw
orl
fs
dec
jge
cld
sahf
push
ss
sbb
mov
mov
add
ljmp
inc
jg
cmp
adc
and
std
cli
decb
mov
inc
or
loop
mov
dec
or
mov
cmpsb
or
neg
les
daa
mov
mov
dec
out
push
jl
jp
les
sub
stos
js
sub
aas
fdivl
cmp
mov
cwtl
lahf
jbe
jo
daa
jp
mov
cmpb
mov
sbbl
test
mov
movsl
mov
xchg
and
push
jo
fmulp
pop
mov
fwait
mov
addr16
sub
inc
mov
idiv
mov
scas
cmp
stos
push
popf
mov
adc
call
ljmp
xor
popa
lods
or
push
cmp
dec
mov
jne
shrb
xlat
bound
push
cmp
push
aam
jns
push
cltd
xor
push
xchg
in
test
imul
xchg
inc
xchg
xor
je
add
inc
mov
sub
movsb
out
push
adc
cmp
jl
subb
jl
inc
ret
push
push
dec
call
jmp
out
mov
mov
jmp
jae
frstor
hlt
jnp
mov
jae
jnp
sbb
mov
mov
mov
test
mov
push
aam
mov
cmp
mov
sub
sub
test
and
jb
xor
icebp
lods
cmovo
jbe
or
test
cwtl
loop
mov
dec
mov
dec
xchg
adc
icebp
mov
mov
mov
ror
mov
xchg
cmp
mov
adc
dec
das
lds
ret
icebp
or
xor
adc
loope
sub
fbstp
or
test
mov
scas
aaa
fists
add
mov
jp
fwait
pop
hlt
dec
in
push
loope
sti
jge
test
imul
fwait
sbb
cmpb
insl
xchg
mov
repz
mov
mov
xchg
ret
fists
jbe
xchg
xor
mov
sbb
popa
cli
mov
gs
hlt
andb
aad
jmp
and
cmc
mov
cmc
lds
or
inc
mov
mov
push
adc
push
sub
popf
clc
push
sbb
mov
inc
xor
stc
pop
test
lock
or
cmp
imul
mov
je
dec
sub
add
cli
jnp
out
mov
sub
xchg
pop
out
in
sub
xchg
mov
repnz
cmp
rcr
repz
add
cmp
mov
xor
dec
mov
popa
enter
mov
cltd
ret
inc
and
inc
orl
test
repnz
les
xchg
add
sbb
popf
mov
ds
cwtl
sahf
int
lahf
pop
add
gs
es
fwait
sub
push
jmp
add
js
jns
add
add
mov
sub
jg
push
lock
mov
test
jl
or
out
jae
xor
adc
test
xchg
mov
jns
jns
addr16
jne
outsl
out
roll
inc
mov
mov
push
sub
sbbl
out
sbb
dec
cmpsb
nop
push
fbld
cmpsl
roll
cli
add
dec
stc
mov
daa
mov
fidivrs
int
xor
js
lods
pop
into
ret
sub
and
scas
or
in
cli
jo
adc
std
push
pop
push
shrb
xlat
mov
icebp
add
ret
inc
inc
daa
mov
push
insb
add
cli
mov
cmp
imul
cltd
or
dec
cmp
xchg
sti
xchg
mov
cli
icebp
xor
testl
stos
mov
add
jbe
mov
mov
aad
mov
add
or
aas
mov
shrl
mov
es
add
xor
leave
add
lods
inc
push
mov
aad
pop
mov
test
cwtl
pop
or
jge
and
pop
fstl
sub
or
fwait
cli
jmp
xchg
dec
xchg
orb
sub
adc
cltd
rcrb
cmp
and
adc
or
xchg
cmp
push
cmpsl
mov
cmp
es
mov
mov
sub
cmp
mov
xchg
add
push
loop
dec
cmp
mov
fnstsw
and
jg
push
cmp
hlt
lret
push
in
movntq
rcl
dec
add
les
jl
jp
lcall
test
mov
call
push
popl
call
dec
cmp
sub
jo
xor
sbb
and
dec
in
hlt
test
pop
ss
push
xchg
test
push
mov
lods
scas
mov
push
inc
movsl
adc
adc
xor
cli
push
or
loop
ja
mov
repnz
movsl
test
js
mov
xor
movb
psubq
repnz
loop
stos
jle
jne
or
in
pop
mov
jmp
push
adc
mov
cld
mov
xor
dec
push
xchg
mov
scas
dec
xor
mov
cmp
push
xchg
add
aad
or
xchg
mov
orl
mov
and
cwtl
push
and
decb
test
mov
inc
mov
and
jnp
xchg
fs
test
xor
out
cld
dec
ss
aaa
lds
ljmp
test
mul
mov
sarb
sbb
add
repz
int
loope
push
push
inc
in
cmpsl
mov
xchg
mov
cmp
mov
mov
cli
jno
adc
stos
adc
lods
jae
test
stos
loop
in
ret
jl
lods
int3
sbb
dec
adc
ss
dec
int3
or
call
sub
mov
jnp
out
xor
xor
rclb
mov
sbb
cmpsl
ja
adc
fwait
mov
xchg
mov
dec
push
jne
in
testb
cmpsb
inc
push
pop
dec
mov
leave
mov
jno
call
movsb
and
sbb
mov
rolb
jne
sbb
or
inc
ja
aas
mov
mov
xlat
mov
xlat
into
repnz
sahf
fcmovnb
mov
xchg
mov
stc
mov
jge
xor
push
aas
ror
xor
ret
lret
mov
xchg
gs
dec
movsb
iret
cld
sahf
dec
or
fcoms
cltd
movsl
mov
sub
cltd
fldcw
les
push
mov
das
clc
int
mov
jge
and
into
mov
notb
pop
popf
add
div
pop
sbb
push
shlb
cltd
sub
bound
data16
jecxz
sub
xlat
sbb
jecxz
pusha
jl
xor
ret
int3
jo
mov
shrb
jmp
xor
jle
or
sbb
xor
mov
cwtl
mov
add
gs
ret
lahf
sub
data16
ror
int
test
in
or
ja
test
fnsave
lods
lahf
leave
ljmp
cmp
cli
imul
adc
jge
cwtl
xchg
insb
mov
cwtl
pop
adc
mov
test
addr16
das
inc
sbb
xchg
movb
shlb
jne
icebp
lea
lret
xchg
adc
mov
dec
pop
mov
jne
fldz
fimull
mov
sub
or
cmp
insl
frstor
mov
jo
shll
movsb
pop
inc
and
aas
fisubrs
arpl
mov
push
inc
addr16
dec
jg
in
ja
enter
cmp
xchg
push
xor
call
adc
pop
adc
int3
push
call
ja
psrld
cli
pop
pop
repz
adc
and
add
loopne
sbb
in
lret
dec
es
hlt
lret
repz
push
mov
sbb
pushf
dec
and
dec
and
sbb
inc
lret
dec
mov
mov
in
fisttps
adc
out
adc
cmp
push
stos
inc
shll
jle
or
movsl
adc
jbe
and
cltd
clc
sbb
addr16
inc
mov
cltd
inc
lcall
sbb
arpl
cmpsb
lret
mov
fmull
out
loop
rorl
test
inc
push
add
xor
xor
dec
jb
lahf
out
js
sahf
int3
pop
ret
fbstp
push
inc
mov
cmp
inc
out
sbb
in
notb
std
pop
test
pop
mov
fwait
adc
out
pop
aam
lds
mov
mov
inc
fldcw
loope
mov
jne
mov
push
cmpsb
mov
lahf
arpl
sahf
sti
push
mov
leave
cmc
jecxz
aaa
aam
hlt
movsb
repz
cltd
jl
dec
and
fnstenv
loop
popf
dec
test
or
xchg
fnstsw
cmp
cmp
pop
sub
push
mov
daa
add
or
lods
add
testl
dec
std
fwait
push
leave
push
mov
mov
notl
jmp
inc
sub
in
cld
imul
dec
scas
lods
popf
jb
fbstp
sub
jno
xrstors
push
movsb
into
repnz
cli
sbb
shll
scas
nop
dec
sub
lahf
jge
fwait
inc
or
in
jmp
outsb
jb
por
inc
cmp
fsubl
ja
repnz
xchg
loope,pn
pop
lds
and
dec
ret
sbb
aas
sbb
xor
jg
inc
cli
pushw
pop
jp
push
add
xor
add
xchg
ljmp
xchg
inc
insl
sbbb
xchg
hlt
push
pop
aas
lods
fs
jmp
add
push
pop
jl
fisubrs
pop
mov
in
sahf
movsb
jge
mov
movsbl
cld
pop
jo
dec
sahf
and
jle
mov
adc
jle
cli
fisubrs
inc
insl
pop
das
fwait
sub
fucomp
call
dec
pop
adc
push
dec
sub
pop
insb
dec
or
sbb
cmpsb
cmpsl
jle
sahf
jg
inc
pop
cltd
mov
push
cwtl
sbb
lcall
jns
mov
pop
cmp
into
fisttpl
dec
clc
xor
inc
mov
xor
test
testb
popf
scas
sub
loope
inc
xor
hlt
int
lods
ret
and
ret
or
pop
cmc
scas
add
fiaddl
inc
inc
in
adc
xchg
and
xor
push
xor
cmp
xor
mov
push
icebp
scas
pop
dec
fildll
adc
scas
test
add
mov
and
inc
clc
test
int3
cmpsl
call
jns
push
adc
add
push
push
mov
or
mov
mov
push
gs
pop
jns
mov
xor
sub
mov
or
mov
cmp
push
lods
aad
sub
mov
mov
inc
dec
xchg
xor
sub
jge
and
adc
mov
fcmovnb
aaa
dec
icebp
pop
push
or
mov
leave
dec
cwtl
cltd
cli
fisubs
pop
jmp
jp
mov
aad
push
mov
mov
adc
dec
out
mov
orl
xor
cli
sbb
jge
push
popa
jne
out
push
inc
int
or
xchg
push
ljmp
into
push
int
shrb
mov
add
jne
fucomi
cmp
mov
int
cmpsb
push
aaa
andl
inc
into
or
leave
push
mov
mov
bound
outsl
push
sti
jg
insl
fs
scas
fnstcw
push
dec
mov
cmp
int
js
loop
testl
cmp
push
cs
xlat
xor
lret
inc
ljmp
sub
leave
cmovns
jno
cmpl
mov
xlat
andl
push
xchg
stos
mov
mov
and
lds
ds
movq
imul
jg
jmp
rcrb
sti
sahf
pusha
jbe
pop
push
jp
xor
popf
aam
mov
lock
movzbl
mov
mov
out
lahf
out
and
push
mov
or
lock
and
pop
pop
icebp
sbb
sti
inc
int
or
xrelease
push
push
mov
scas
cli
dec
fs
push
or
nop
cmp
xchg
ficomps
pop
lret
xlat
lods
in
and
inc
ljmp
xchg
cmpsb
addr16
jp
lcall
fiadds
loop
iret
sti
jge
insl
ficompl
sbb
std
ret
cltd
sbb
ret
insl
push
inc
bound
cmpsl
dec
adc
xlat
lret
dec
pop
lret
das
cmp
add
adc
cld
mov
add
arpl
xor
pop
gs
sahf
xchg
in
pop
mov
cmc
ja
int3
push
clc
jmp
push
lods
fsubp
xor
pop
cwtl
xor
ja
pop
jg
mov
jecxz
sbb
clc
movsl
jne
test
inc
or
and
cmp
cmpsl
sbb
std
sub
add
movsl
jno
pop
stos
rcrb
xchg
pop
jnp
nop
push
jmp
test
or
mov
loop
shrb
push
push
in
out
jns
inc
add
adc
or
rcr
fstpt
sbb
cmp
jb
push
fcomp
insl
jne
jmp
dec
xchg
dec
mov
movsb
cmp
mov
jl
rorb
xchg
pop
ds
or
test
fisttpll
fldenv
call
into
je
mov
jo
out
add
pushf
jae
dec
daa
pop
jp
or
fsub
mov
mov
sbb
jp
mov
and
push
jmp
movsb
dec
mov
cmp
jbe
iret
cltd
lahf
jnp
rol
test
mov
sub
sub
mov
push
imul
in
and
ljmp
mov
sub
mov
mov
pusha
and
clc
sub
pop
arpl
xchg
lret
pop
jb
xchg
and
mov
orl
movsl
pop
mov
mov
dec
dec
sub
dec
adc
orl
ss
jmp
cmc
mov
dec
ficoms
int3
pop
jmp
incl
int3
leave
sbb
or
sub
jmp
bound
sub
mov
fidivl
push
ss
ds
xor
out
push
push
mov
dec
sbb
and
push
clc
stos
add
lds
add
stos
stos
xchg
mov
call
les
pop
xchg
xor
xchg
pop
pop
push
pop
adc
in
aad
mov
test
insl
mov
mov
pop
mov
dec
add
imul
iret
mov
imul
ja
xchg
ljmp
or
ret
inc
inc
cld
es
lret
shrb
sbbb
xchg
stos
fsubs
mov
aas
out
or
in
out
pop
imul
push
sti
leave
lods
outsb
in
push
push
sub
xchg
mov
inc
ds
sub
xlat
sarl
loop
adc
sub
ja
or
cmp
je
out
insl
test
loop
repz
add
pop
dec
jne
jge
mov
sub
sub
inc
fcoml
scas
add
cli
dec
rcl
dec
imul
pop
fldl
xchg
lods
xor
adc
fwait
cs
xchg
xor
test
cltd
repnz
in
arpl
adc
pop
cmp
push
lahf
xor
sbb
test
addr16
movsb
cmp
les
insb
icebp
push
rolb
mov
pop
sarb
jo
add
adc
pop
popf
xchg
lock
outsl
mov
loope
std
xchg
mov
and
xchg
lahf
popa
mov
add
repnz
out
sahf
and
aam
inc
test
push
or
xor
sbb
or
addb
in
orl
fistl
imul
adc
mov
jb
imul
add
arpl
sub
cmp
mov
mov
jbe
imul
ficoml
or
pop
mov
push
imul
or
mov
mov
les
pop
pop
mov
aas
int
imull
sub
sti
loop
dec
out
insl
push
cmp
clc
add
data16
sti
pop
sub
jo
lods
dec
xlat
xchg
stos
lea
pop
jbe
insb
dec
dec
push
dec
inc
vpand
insl
mov
jae
xchg
cltd
jecxz
ret
sbb
fwait
lea
loopne
and
sub
adc
fucomp
push
fwait
inc
xchg
lcall
enter
and
push
push
ret
mov
loope
leave
xor
cmp
test
lret
loop
insb
push
flds
leave
jecxz,pt
enter
push
ljmp
rorb
adc
xor
jecxz
ljmp
test
popf
mov
rcll
hlt
inc
cmp
test
dec
int3
add
sbb
nop
arpl
shlb
out
mov
cmp
pop
sub
ret
mov
in
mov
push
add
test
loop
das
mov
jno
dec
mov
in
je
xchg
add
cmp
adc
push
notl
add
sbb
pop
aam
sbb
clc
iret
add
inc
cmpsb
fcoml
dec
mov
fstps
imul
cwtl
ds
leave
cmp
pop
add
mov
scas
rolb
imul
mov
jl
mov
mov
and
push
sub
or
push
add
mov
iret
out
js
pop
mov
lds
mov
test
enter
xor
mov
sub
jge
pop
in
stos
sbb
fdivrs
into
pop
insl
xlat
out
push
cmp
mov
mov
cli
sbb
in
pop
mov
and
sti
and
sub
add
xchg
daa
cmp
add
imul
repz
test
cs
cmp
xchg
pop
add
mov
fsubrp
pop
ljmp
mov
cs
sbb
lods
js
xor
push
sti
push
jb
xchg
les
lds
scas
xlat
inc
int3
or
add
lret
js
loopne
loopne
lods
sbb
repz
test
inc
cmp
dec
cmp
push
outsl
or
ret
fsubrp
inc
sub
cmc
fsubl
and
sub
cmpl
leave
xchg
mov
adc
sub
cmp
jno
ficoms
insl
in
xchg
clc
xor
test
xchg
shl
lret
push
sahf
ljmp
repnz
cld
out
sbb
in
cmpsl
test
inc
push
idivb
test
stos
repz
es
fucomi
sarb
mov
cmp
rcll
loopne
inc
daa
xchg
xor
jp
bound
lods
adc
sbb
js
paddsw
je
push
cmp
and
imul
xlat
jecxz
test
je
pop
xchg
cmp
loop
shlb
mov
jbe
bound
cli
lea
in
repz
shll
jbe
push
or
lahf
cmp
sub
and
stc
dec
xchg
cmp
and
and
addr16
adc
clc
rcrl
out
repnz
jb
mov
loopne
loope
push
out
gs
jle
jg
cmc
xchg
inc
pop
das
cmp
add
dec
dec
mov
movsb
dec
loopne
cmp
out
notb
aam
cld
mov
mov
popa
sbb
movzbl
cld
out
fs
ljmpw
and
loopne
test
pop
jg
or
lret
adc
std
pop
outsb
add
jae
push
loope
sbb
mov
fidivrl
mov
jne
mov
mov
xor
cld
int
ljmp
sub
xlat
lret
in
into
mov
into
pop
cmp
inc
xchg
fsubp
sbb
jo,pn
stc
ja
mov
xchg
stos
pop
lea
or
push
xor
pop
and
pop
ss
or
int3
inc
adc
or
pop
push
in
rolb
ljmp
shlb
or
sbb
or
jmp
mov
imulb
xchg
or
gs
leave
data16
pusha
mov
sbb
mov
pop
sbb
fwait
pop
addr16
daa
imul
lods
mov
pop
popf
inc
cwtl
lods
xor
sub
xchg
lods
cmpsb
imul
dec
mov
call
push
and
and
scas
das
repnz
sti
lods
shll
cmpsl
std
sub
dec
enter
pop
popa
scas
mov
pop
aam
repnz
arpl
push
fcomps
ljmp
stos
in
iret
jle
movsl
push
leave
fisttps
pop
add
jmp
jno
loopne
xor
add
or
mov
mov
stos
and
aaa
xchg
xchg
scas
nop
fmull
adc
out
cmp
jmp
sub
mov
push
dec
mov
push
in
fcom
int
hlt
les
jp
mov
inc
stc
mov
cmp
mov
rcll
sbb
or
imul
test
repnz
sub
fs
adc
adc
jae
sbb
xchg
movsl
lret
mov
out
adcl
dec
scas
xchg
lods
data16
mov
ss
roll
aad
or
es
adc
arpl
stos
lcall
xchg
aas
add
cmp
loope
xchg
decl
adc
cmpsl
lret
dec
push
out
jns
add
aas
mov
jl
shrb
mov
fcomi
mov
pop
mov
dec
popf
sub
mov
push
out
gs
or
int3
testl
and
cmp
nop
push
or
mov
movl
aad
sub
cmp
mov
das
scas
xlat
pop
ds
lcall
push
sbb
fs
sbb
jo
pop
xor
lcall
sar
outsl
popa
xchg
jnp
mov
cld
cmpsb
loope
or
push
or
mov
push
lods
int3
or
out
dec
xchg
adc
and
adc
mov
push
mov
call
dec
pushf
lea
addr16
cld
jmp
cmp
mov
imul
test
fsts
ret
jnp
push
add
add
out
ja
jae
push
dec
insb
inc
add
movsb
sbbb
jle
xlat
shlb
pop
out
sbb
aam
sbb
xor
scas
and
xchg
out
adc
out
pop
add
sbb
jns
rcll
add
movb
xor
outsl
dec
sub
inc
mov
pop
cs
cmpsb
jbe
sub
inc
mov
mov
mov
pop
gs
sbb
xor
and
int
daa
adc
jo
into
insb
dec
pop
inc
inc
icebp
cmp
enter
popa
int3
push
mov
enter
pusha
pop
dec
sti
cwtl
mov
adc
cmp
call
filds
lock
add
cmp
jp
cld
cmp
pusha
mov
xchg
mov
jl
je
mov
imul
push
push
ret
mov
nop
cmpsb
loope
and
push
rcrl
pop
std
sahf
inc
pusha
push
lcall
mov
je
bound
mov
dec
or
jmp
insl
ror
in
mov
lahf
aaa
popf
call
sbbl
jecxz
repz
mov
les
gs
divl
add
iret
mov
mov
mov
sbb
lods
sub
or
pop
and
mov
lcall
jbe
jmp
lea
pushf
xchg
icebp
jmp
cmp
push
pushf
mov
pop
and
pop
mov
push
xchg
daa
movsl
shl
aad
push
rcl
xchg
dec
and
out
mov
mov
cmp
mov
and
xchg
cmc
fs
in
faddp
pop
jae
or
add
xchg
loopne
push
xlat
dec
notl
adc
ret
imul
cmp
imul
ret
cwtl
fstps
cmpsl
bound
pop
sbb
out
out
lods
filds
push
push
insl
xor
pop
or
and
mov
mov
test
ficoms
mov
pop
mov
roll
aad
fsubs
sti
mov
add
jbe
mov
call
adc
fisttpll
push
cmp
mov
jmp
mov
mov
test
mov
nop
addps
aas
test
push
mov
cmp
fbstp
enter
stos
stos
mov
mov
dec
and
test
mov
cmp
repnz
andb
lret
dec
push
cltd
lods
sub
outsl
shrb
jno
dec
add
sub
adc
lcall
incl
sbb
sti
push
mov
jecxz
mov
push
imul
dec
leave
js
out
sbb
mov
fisubs
cmp
sub
and
push
mov
shl
gs
inc
test
inc
push
lret
mov
xchg
repz
sub
popf
and
test
subb
ret
mov
jae
int
lods
jmp
jae
out
dec
jb
test
xchg
inc
lds
cmp
fsubr
loope
cwtl
and
movsl
pop
push
xor
adc
pop
mov
xor
fisubs
test
fwait
jae
push
lret
enter
sarl
cld
js
add
call
pushf
add
repz
imul
std
jge
mov
jae
rclb
cltd
adc
add
mov
call
arpl
sub
cmp
mov
mov
test
jl
inc
pushf
pop
or
out
sbb
push
outsl
add
aad
sarb
scas
mov
rcrb
mov
enter
mov
pop
and
inc
xlat
ljmp
push
xor
scas
insb
mov
xor
adc
ds
jmp
sbb
jge
jl
inc
mov
cmp
push
stc
jmp
lods
test
adc
pop
in
les
in
pop
jecxz
add
out
mov
cltd
inc
fdivrs
xchg
sbb
sbb
dec
mov
sub
mov
and
adc
int3
mov
mov
sub
xchg
xor
fldt
cltd
mov
xor
push
add
and
out
jns
cltd
mov
test
rcll
inc
jno
inc
jge
mov
or
sahf
fs
in
jge
and
lcall
push
je
fsubr
enter
add
pop
jl
mov
fimuls
ja
xchg
repz
fidivs
insl
jp
stc
sarl
adc
movsb
lret
stos
and
cmp
fidivrl
push
adc
push
test
outsl
mov
adc
sbb
inc
aam
jo
xchg
lret
adc
sahf
inc
xchg
test
sub
sub
sub
bound
inc
sub
inc
fdivrl
inc
xchg
mov
cli
push
inc
lods
push
fwait
lods
scas
and
or
push
seto
inc
jb
push
xor
add
and
pushf
pop
xor
or
in
push
andl
xchg
pop
jne
cld
or
adc
fdivr
xor
test
cmc
inc
out
mov
arpl
or
insl
movsl
xchg
scas
adc
mov
inc
lods
cmpsb
push
cli
rcl
ret
dec
xchg
in
mov
stos
xlat
push
ss
rcl
xor
cmp
pop
popf
rcl
clc
mov
pushf
dec
push
cmp
mov
ja
push
js
das
or
repnz
push
shlb
jae
mov
jmp
xchg
ficompl
idiv
sub
mov
daa
dec
cmpsl
jmp
aas
stc
mov
jae
inc
sahf
repnz
mov
scas
mov
mov
jo
mov
jp
and
cli
jg
ljmp
inc
xchg
cld
and
mov
sbb
int
sub
sub
outsb
repnz
dec
mov
bound
push
sub
jne
dec
outsb
loopne
stc
push
push
out
into
mov
cmpsl
cwtl
out
adc
jbe
xchg
dec
std
mov
xchg
sub
fistps
sarl
xchg
icebp
je
mov
sub
jecxz
jl
xor
mov
mov
ljmp
push
lcall
cmpb
pop
es
cmpsb
mov
aas
xor
das
jge
xor
push
mov
popl
push
mov
jns
jg
lret
xor
addb
iret
push
mov
sarb
dec
xchg
faddl
xor
addb
lods
loope
cli
pop
sub
mov
mov
add
addr16
rclb
les
pop
push
add
pop
mov
mov
or
call
and
mov
inc
pop
push
repz
insb
les
les
xchg
mov
jmp
mov
ja
ljmp
cmpsl
dec
mov
lahf
adc
jo
mov
jns
jae
insb
cmp
imul
xor
jbe
and
add
sbb
adc
pusha
adc
jns
repz
push
xchg
cmp
jl
cmp
mov
inc
fnstenv
xchg
sub
gs
cmp
iret
push
fldt
cmp
pop
mov
push
ja
lahf
inc
jno
pop
movsb
outsb
arpl
dec
call
or
jecxz
and
adc
scas
add
pop
cwtl
lcall
mov
movsb
out
ret
jecxz
jae
pop
jo
movsl
hlt
imul
lret
daa
jno
xchg
xor
pop
xchg
adc
cmpsl
test
in
push
cmpsl
mov
sahf
es
pop
cmp
dec
cmpsl
das
pop
mov
pop
push
jge
js
add
rolb
test
jecxz
ffree
adc
add
lock
fsubs
fsts
push
jbe
mov
sahf
or
mov
lcall
inc
test
js
xchg
lcall
mov
xor
mov
rcrb
ret
xchg
inc
test
cmp
insb
sub
jge
test
popa
lret
jl
or
inc
addr16
xor
rcl
addr16
psrlw
sbb
dec
lods
inc
xorb
pop
add
aaa
pop
push
cmp
mov
sahf
xor
stos
sti
adc
push
cmp
ja
dec
cltd
pushf
jl
push
lret
dec
adc
int3
mov
mov
shl
arpl
mov
rcr
fistpl
aas
int3
aam
test
pop
in
xchg
push
je
pop
test
imul
inc
xor
lock
mov
sub
xor
pop
xor
fcomip
add
xchg
xor
xchg
push
adc
addb
daa
cmp
inc
aad
hlt
dec
mov
sub
mov
cmc
lcall
xor
sbbb
xchg
cmp
or
mov
adc
push
xchg
sub
dec
and
dec
shl
aas
cmpl
xor
sti
cmc
add
mov
sbb
mov
outsb
jp
inc
shlb
imull
loop
mov
push
shrl
and
cmp
cwtl
mov
xchg
or
dec
push
cmp
in
shlb
dec
sub
lock
fnstenv
test
mov
pop
jmp
ret
pop
lret
and
mov
stos
test
add
and
ret
add
mov
adc
dec
fsub
xchg
jg
clc
adc
popf
pop
push
movsl
add
xchg
sbb
dec
push
into
add
fldpi
pop
mov
dec
in
sbb
fsts
std
or
dec
xor
decl
cwtl
xor
test
sti
in
mov
lar
inc
dec
leave
adc
inc
movsl
and
aad
pop
and
push
xor
mov
push
orl
lods
insl
leave
rcl
adc
dec
mov
js
sbb
fiaddl
fsubrs
jmp
into
mov
add
xorl
cmp
mov
mov
cmp
jp
jp
xchg
cmpsl
xchg
ljmp
pop
pop
test
aaa
adc
lret
pushf
dec
rolb
test
xlat
loope
aaa
mov
cmp
push
sbb
iret
adc
jbe
mov
mov
movsb
shr
out
push
inc
data16
orl
add
xchg
std
add
or
sets
jmp
xor
inc
icebp
movsl
cmpsb
cmp
mov
out
mov
inc
dec
mov
pop
ds
ficomps
shr
fildll
sti
imul
inc
in
pushf
cmpsl
repnz
dec
pop
stos
cmc
and
sub
add
mov
add
push
dec
jg
stc
outsl
bound
add
sub
hlt
ljmp
je
xor
pusha
ret
mov
pop
push
call
sbb
arpl
in
aam
bound
call
xor
out
dec
and
adc
adc
jne
adc
mov
dec
stos
test
ret
repz
cltd
mov
sahf
cmp
int
pandn
jbe
push
mov
popa
add
sub
sahf
stos
dec
mov
arpl
movsl
mov
xchg
xchg
icebp
ds
ds
stos
aaa
xor
dec
popa
push
lret
sub
inc
dec
pop
mov
hlt
add
pop
test
cli
sub
out
inc
pop
jne
fidivl
int3
adc
in
aaa
cmp
xchg
pushf
stc
mov
test
cmp
sahf
sbb
or
inc
add
test
arpl
fdivrp
mov
out
es
cwtl
xorb
cwtl
jle
ljmp
inc
add
pop
xchg
cli
movsl
aas
pushf
jge
cmp
repnz
sub
mov
repnz
iret
inc
enter
mov
ljmp
and
xsaves
push
shlb
jno
dec
push
shrb
mov
stos
jns
jg
mov
pop
sarl
xorl
sbb
dec
es
xchg
mov
test
in
fmull
xchg
ret
dec
fstpl
cwtl
cmp
pop
add
ljmp
sbb
rolb
sub
push
xchg
ss
mov
lods
pushf
sub
mov
sub
mov
dec
jbe
add
out
and
xor
add
dec
mov
orl
test
sbb
jmp
js
adc
lds
rolb
cmp
ljmp
xchg
cmpsb
int3
mov
mov
jne
roll
or
sbb
xchg
in
in
and
add
inc
rcr
mov
test
fstl
xor
andb
push
ffree
pop
aad
push
sub
pop
or
and
leave
shrb
jb
and
sbb
outsl
data16
or
mov
xor
fldl
pop
pop
dec
mov
add
and
xchg
add
lods
les
negb
push
mov
inc
and
mov
jge
les
mov
jne
js
jg
jns
add
mov
mov
and
xchg
and
mov
js
mov
aam
popa
mov
and
ss
jo
push
popf
iret
stos
add
mov
add
fisubs
adc
lods
push
insb
xlat
add
scas
jns
mov
jnp
out
in
lods
mov
xchg
cmpsl
xchg
loop
loop
mov
daa
add
pop
push
in
std
nop
test
pop
xor
adc
mov
xchg
pop
stos
and
xor
outsb
xchg
push
adc
adc
jl
jg
in
xor
test
sub
mov
pop
cmp
push
movl
mov
into
stc
out
cmp
sub
xchg
sub
mov
mov
pop
stos
jecxz
outsb
sub
and
adc
ret
xor
xchg
sbb
fnstenv
cli
push
pop
mov
std
add
fstpl
shll
jmp
je
add
mov
gs
jg
fstpl
jnp
jp
fldenv
lret
mov
push
outsb
stos
into
ficoms
shlb
mov
lcall
enter
inc
xlat
outsb
repz
push
stos
or
cmc
xchg
out
icebp
hlt
push
iret
push
inc
mov
add
lret
jecxz
movsb
dec
lret
movsb
imul
and
int
pop
out
test
jbe
inc
jb
xor
pop
fisttpll
push
pop
stc
fcompl
addr16
mov
xor
pop
dec
xor
xchg
cmp
mov
test
push
and
push
xorb
adc
mov
lret
xor
cmp
iret
cwtl
sbb
mov
push
cmp
fucomip
xor
subb
loope
xchg
push
add
cmp
sbb
fildll
mov
iret
or
insl
push
push
mov
call
mov
cmpsl
mov
mov
pop
sub
pop
mov
mov
add
and
clc
mov
es
cmp
pop
sub
sbb
sub
mov
mov
lods
test
mov
pushf
jbe
mov
fbstp
xchg
lahf
mov
mov
jno
xchg
mov
das
xlat
into
and
mov
ficompl
mov
sub
or
jno
cli
or
addr16
dec
lahf
lcall
int3
popf
mov
stos
and
mov
dec
pop
and
sbb
std
insl
jo
pop
push
pop
xor
bound
popf
adc
sub
mov
ds
cltd
add
pop
push
pusha
jg
xchg
add
sti
xor
fcomip
mov
lret
adc
in
cmp
adc
push
scas
je
addb
or
add
out
add
nop
sub
push
pop
fwait
adc
pop
outsb
push
jle
push
test
mov
pop
daa
gs
int
int
fcomps
mov
pop
rcrb
cmpsb
fistps
adc
mov
shrl
mov
aas
rorb
addr16
lods
fstl
mov
inc
or
fldt
lret
mov
not
inc
ljmp
add
cmp
fs
jl
add
mov
pop
xchg
push
aas
das
mov
bound
mov
ds
inc
pop
mov
je
jle
and
imul
cmp
in
sub
sbb
pop
popa
aad
xchg
fwait
push
sub
lret
out
inc
xor
xchg
inc
mov
lret
testl
push
push
xchg
fs
xlat
xlat
jle
ja
lret
cs
aas
adc
testl
adc
into
mov
add
jp
sbb
sub
pop
dec
xchg
dec
add
sub
mov
inc
and
mov
mov
sti
sub
xchg
inc
pop
movsl
and
je
dec
adc
mov
call
fisubrl
xor
mov
push
pusha
pop
pop
mov
jbe
mov
sub
decl
add
ret
sub
cli
int3
test
in
xchg
sbb
loopne
xlat
mov
dec
push
lods
fstps
xor
repnz
clc
add
mov
sbb
inc
xlat
ja
aas
and
wbinvd
je
sub
je
daa
cmp
jmp
into
jnp
dec
jmp
stos
pop
scas
and
pop
push
lret
xchg
aaa
and
dec
leave
sub
bound
push
add
jne
add
outsb
xor
fstpt
or
pop
adc
sub
fisttpl
inc
xchg
mov
gs
pop
push
fisttpll
je
je
mov
in
and
rclb
lret
inc
in
inc
push
sub
jb
aad
jae
into
lea
adc
iret
inc
aas
cmpsl
pop
lcall
insl
pop
xlat
jb
cmp
not
pop
shlb
sti
loopne
mov
ss
pop
mov
imul
add
xlat
adc
mov
pop
jno
or
icebp
jne
pop
jne
sub
outsb
xchg
loop
sub
and
inc
mov
lahf
xchg
stos
pushf
adc
add
sub
movsl
popa
inc
test
js
leave
inc
sbb
mov
and
sub
lcall
out
cmpl
popf
fs
notb
pop
loop
int3
adcl
inc
std
fistpll
rclb
push
or
enter
push
sbb
hlt
daa
into
cli
dec
repnz
and
sub
pop
scas
clc
or
pop
add
mov
in
add
push
sub
inc
loope
lods
mov
stos
in
xchg
lret
loop
xor
mov
leave
mov
push
xlat
daa
int3
mov
mov
hlt
in
ret
add
cmpb
fimuls
lock
cmovo
sbb
cmp
xor
sbb
repz
xchg
and
cmp
mov
sub
ljmp
cmp
andl
xchg
gs
jge
cltd
pop
mov
decb
and
or
xchg
cmc
cld
in
push
movsl
pop
ret
xchg
shrl
daa
cs
addl
or
into
loope
push
xchg
fs
jb
out
fisubrl
or
sbb
and
jle
lods
sub
mov
out
hlt
xor
je
push
repz
dec
test
or
js
pop
xor
inc
add
lods
xorl
in
sbb
outsl
in
fiadds
int3
xchg
mov
fwait
inc
outsl
pop
add
adc
add
push
leave
rcrb
repz
cmpsb
sub
gs
jae
es
fs
xor
xor
mov
or
sbb
push
xchg
mov
inc
or
iret
lret
dec
mov
inc
dec
jae
lahf
loope
jle
mov
mov
push
jle
mov
xchg
adc
jne
sub
mov
test
push
pop
mov
push
movsl
mov
cmp
adc
addr16
lds
mov
andb
ds
lcall
push
loop
inc
into
aam
neg
dec
loop
adc
adc
in
push
aas
jecxz
dec
test
sbb
jl
ja
lea
movsl
int3
in
cs
cmp
dec
add
jecxz
xchg
mov
cmpsl
cmp
mov
sub
mov
mov
pop
fistl
idivb
jg
fld
mov
sbb
fwait
add
imul
push
insb
jne
push
mov
xchg
cmpsb
sbb
mov
aam
push
into
in
movsb
xor
cmp
mov
outsb
mov
xchg
sub
out
lcall
sub
mov
pop
clc
out
test
and
std
inc
sbb
cmp
mov
fldcw
test
stos
sbb
loope
lahf
jl
adc
jo
daa
adc
xchg
hlt
fidivl
mov
mov
add
xor
in
mov
xchg
sub
negb
xchg
mov
mov
sbb
xchg
xor
adc
les
xor
or
sbb
sbb
fbld
lods
jo
cmp
data16
dec
mov
mov
stc
cmp
mov
dec
push
jl
add
add
and
sub
stc
xor
mov
lcall
push
mov
sbb
add
out
adc
jecxz
jb
xchg
sub
cmp
pop
push
out
push
xchg
mov
out
mov
pusha
imul
ret
push
mov
jne
stc
fistpll
pop
push
cld
iret
jae
pop
mov
adc
flds
mov
jge
inc
push
test
adc
push
stos
push
mov
dec
xor
aaa
repnz
pop
fs
mov
xor
jecxz
in
sub
fidivrl
inc
sub
cmp
shlb
loopne
dec
jns
ss
inc
cmc
popf
push
pop
in
icebp
fmull
adc
xchg
lahf
sbb
lock
xchg
push
xchg
or
cmp
dec
lcall
imulb
mov
or
gs
test
lock
xor
pop
pop
sbb
adc
mov
xchg
dec
xchg
xchg
lds
mov
adc
shlb
push
idivl
imul
in
and
ljmp
sub
dec
mov
adc
xchg
imul
enter
or
sub
mov
jmp
ss
push
mulb
dec
pusha
pop
push
add
setp
in
movsb
popf
sbb
push
stc
test
fcomps
je
out
jne
inc
in
movd
pop
add
sbb
scas
push
arpl
lahf
push
and
flds
dec
push
sbb
xor
imul
gs
nop
adc
mov
add
inc
ror
mov
xor
xor
je
and
mov
loop
adc
jecxz
in
dec
dec
repz
icebp
in
cmp
and
mov
aas
mov
xchg
inc
push
jmp
ljmp
inc
into
popa
and
push
mov
jne
pop
cs
enter
mov
push
jp
push
faddl
icebp
mov
sarb
and
mov
insb
addr16
inc
ja
negb
in
jp
adc
jge
jo
xchg
jnp
pop
mov
sbb
pop
aad
dec
xorb
or
std
add
test
loopne
xchg
in
addr16
xchg
gs
leave
in
sub
dec
xchg
call
pop
mov
dec
rorb
inc
rcrb
std
cmp
cmp
and
add
xor
sub
clc
inc
push
push
xor
js
test
insb
dec
push
mov
or
fiadds
aaa
adc
or
pop
int3
sub
add
call
jae
pop
dec
dec
xor
in
and
adc
and
push
fidivl
pusha
lea
sub
outsl
lods
sbb
lret
xchg
dec
xchg
call
push
push
inc
in
pop
adcb
adc
pop
sbb
sbb
fnstcw
sbb
out
jno
mov
jnp
pop
insb
jge
push
mov
add
mov
sbb
jb
add
imul
dec
push
mov
inc
or
adc
addr16
js
push
addr16
sbb
mov
cmpsl
xor
push
xchg
lea
outsl
cmpb
xchg
vcvttps2dq
add
mov
push
xchg
test
jl
pusha
inc
and
sbb
fucompp
fmull
add
test
fstpl
adc
push
mov
inc
stc
mov
mov
adc
loopne
pop
mov
push
in
ss
int
repz
and
inc
jb
arpl
les
addb
add
mov
and
dec
lea
xchg
icebp
les
fmul
lods
push
adc
add
mov
xchg
test
xchg
ljmp
shlb
and
push
adc
cmp
xor
push
ret
ja
ret
xchg
inc
adc
je
adc
xchg
pop
mov
fcoml
xor
or
cmp
pop
in
dec
movsb
lea
imul
mov
pop
lds
cwtl
xor
cwtl
cmp
mov
push
ss
ficompl
push
js
mov
dec
sbb
inc
dec
push
and
jnp
clc
mov
xorb
pushl
or
sbb
fcoms
dec
jo
or
int3
pop
out
fadds
icebp
outsb
xor
cmp
mov
dec
cwtl
and
dec
pop
rorl
lcall
jecxz
lea
pop
sti
imul
pop
dec
sbb
mov
jae
popf
mov
lret
sbb
jecxz
adc
jle
mov
packuswb
fdivs
clc
push
cs
sbb
mov
xchg
add
sbb
dec
add
nop
call
mov
cmp
xor
movsl
inc
add
shrb
jmp
in
call
stc
xchg
xor
mov
sbb
xlat
popa
mov
les
push
ficoms
mov
and
cmp
je
imul
scas
or
mov
out
inc
lcall
stos
push
inc
xchg
fs
lods
add
imul
jnp
push
rorb
ja
leave
out
pusha
cmp
or
cmp
jle
sbb
dec
and
jge
push
sbb
mov
mov
addr16
imul
pop
mulb
add
test
xor
jno
out
ds
fadd
dec
outsb
or
cmc
clc
out
xchg
inc
jno
pushf
xor
sti
loop
outsb
ja
cmp
mov
hlt
pushf
popf
xchg
loope
hlt
fst
push
jo
js
aas
iret
xchg
dec
push
aam
xor
inc
ja
out
fstl
loope
hlt
aas
jnp
inc
jmp
fidivrl
les
test
repz
cmpb
jae
rcrb
cltd
repz
xchg
adc
addb
ret
mov
jo
into
sub
data16
out
test
testb
xchg
pop
sbb
xlat
inc
push
inc
mov
daa
div
insl
sarb
in
fistpl
test
jb
gs
sti
jl
int3
or
sbb
movsl
lahf
test
sti
dec
sub
jmp
les
div
rcrb
mov
jnp
leave
xor
fs
rcrl
mov
inc
dec
andb
and
adc
popa
mov
lods
in
in
or
jb
dec
xchg
sub
out
and
cmp
add
je
rcl
cmpsb
mov
pushf
cltd
push
cmpsl
xor
and
xor
mov
xor
lods
sbb
jp
daa
sti
aad
inc
push
mov
cmp
in
loope
adc
push
cmp
xchg
clc
bound
aad
test
mov
scas
sahf
fdivs
sub
dec
inc
sbbb
cmp
pushf
pushl
stc
push
jecxz
lods
je
adc
dec
add
cmp
les
push
js
iret
inc
dec
fcmovbe
jge
push
push
mov
sub
cmpsl
sbb
fwait
mov
mov
ss
sarb
or
aad
dec
dec
ljmp
rcrb
mov
mov
sarl
inc
pop
mov
and
shlb
inc
mov
cltd
pop
das
xor
out
mov
xchg
rcl
pop
xchg
dec
fiadds
and
xchg
mov
in
divl
adc
mov
outsl
enter
test
and
jae
and
ret
cmpsl
and
xor
inc
loope
rcll
aam
push
sub
mov
test
mov
in
das
xor
jo
cmp
rol
sub
icebp
xchg
sbb
push
push
adc
lret
mul
push
stos
or
cld
dec
fidivs
pop
dec
push
push
ret
add
clc
mov
rcr
es
xor
jo
sub
mov
xor
jecxz
mov
cli
movsl
lods
push
add
bound
test
test
cmp
sub
cmp
xchg
dec
add
loope
jne
mov
and
adc
lgs
xchg
in
push
das
cmp
xor
shll
outsb
jp
add
jl
subb
loop
lret
aad
fmuls
jmp
andb
cmc
out
cmp
dec
enter
and
mov
pop
mov
jae
pop
mov
loopne
xor
sbb
adc
idivl
and
adc
js
or
mov
stc
sbb
or
lds
popf
mov
sub
stos
addb
and
mov
movsb
mov
fdivr
mov
in
lods
and
push
fwait
add
outsl
xchg
test
xchg
cltd
push
mov
lds
call
arpl
test
in
sbb
jge
dec
pop
repz
into
mov
lods
dec
mov
mov
ror
scas
out
mov
std
test
sti
pop
mov
fcmovbe
mov
in
icebp
mov
lahf
xor
sub
movsb
jne
mov
fcomi
fmuls
jl
test
cmp
out
loope
nop
sub
xchg
pop
jmp
xchg
inc
outsl
push
adc
mov
out
rclb
insl
mov
cmc
cmp
jp
mov
fcompl
xor
in
mov
mov
cmp
sarb
jle
dec
xchg
adc
xchg
lahf
mov
test
mov
dec
pushl
xchg
add
sbb
roll
jecxz
mov
scas
xlat
jecxz
dec
inc
outsl
xchg
mov
leave
jle
sub
aas
inc
sahf
mov
sbb
dec
sbb
scas
rolb
jo
cmpsb
test
pop
push
xchg
test
or
xchg
fwait
push
add
lds
call
call
fs
hlt
inc
pop
push
mov
mov
push
fidivs
xchg
adcl
adc
loop
int
nop
int3
es
jle
sbb
icebp
lret
pop
sub
or
fldenv
inc
adc
fisttpl
out
cwtl
jl
dec
cmpsl
and
dec
je
arpl
adc
and
add
sub
lds
mov
push
cmpsl
faddl
push
stos
jecxz
cmp
mov
xor
gs
jo
lds
mov
or
mov
js
inc
std
sub
test
daa
cmp
mov
inc
ljmp
adc
push
ja
mov
movb
sub
push
aas
test
pop
mov
pop
test
dec
test
lods
enter
jle
jnp
jg
pushf
push
push
jg
out
mov
faddp
sahf
sbb
mulb
push
inc
arpl
pop
dec
stos
lock
stos
stc
int
repnz
xorl
faddl
ljmp
nop
push
push
mov
and
sahf
mov
add
adc
ja
je
xchg
pop
fidivs
dec
or
ror
pop
jo
mov
cmp
mov
cmp
inc
frstor
adc
jecxz
inc
add
xor
xlat
push
scas
sbbb
xor
cmp
insl
shlb
repz
rcrb
dec
mov
lods
mov
sbbl
adcb
arpl
and
mov
jmp
mov
inc
fxch
mov
mov
push
shll
and
out
out
sti
fists
push
int3
adc
sub
fidivs
add
daa
jns
popf
push
adc
and
adc
and
mov
mov
lea
inc
jp
or
mov
negl
pop
inc
test
stos
ds
cmpb
push
scas
adc
and
adc
pop
and
iret
xchg
push
pop
ljmp
ret
xchg
dec
jg
pop
cld
inc
inc
jle
adc
outsl
xor
sub
cli
fisttpll
jle
lret
push
add
lods
enter
pop
jbe
out
cli
adc
mov
sub
xor
out
push
pop
leave
xlat
mov
dec
int3
push
dec
lahf
test
addr16
mov
imul
jno
mov
shlb
nop
repz
out
test
movsl
cmp
dec
shrb
lds
sbb
shlb
into
aad
lahf
xchg
in
pop
enter
out
or
shrl
les
mov
jnp
pop
stc
xchg
push
add
jecxz,pt
scas
bound
sbb
das
xor
sub
dec
outsl
pop
div
loopne
mov
adc
fsts
ret
scas
scas
xor
adc
loop
sbb
int3
dec
add
enter
js
and
jecxz
test
repz
enter
clc
clc
pop
es
subl
int3
test
jns
pusha
mov
cs
xor
jne
pop
and
hlt
jae
notl
add
mov
jno
sub
mov
lods
mov
push
and
xchg
cmc
dec
jecxz
inc
cmpsb
pop
or
scas
xchg
sub
fcmovu
or
out
loope
aas
mov
fisttpll
and
sar
dec
push
into
mov
xchg
rorb
push
mov
clc
pop
std
cmovns
movsl
pop
cmp
sbb
stc
je
stos
int3
mov
mov
xchg
das
enter
mov
and
cmp
push
push
adc
pop
pop
mov
xor
mov
scas
or
in
test
push
test
lcall
les
adc
sub
scas
jge
in
imul
repnz
add
arpl
std
jmp
aas
adc
mov
jae
loop
fildl
lahf
fisttpll
in
mov
push
daa
imul
inc
scas
xchg
mov
pop
inc
or
mov
ret
loopne
adc
pushl
mov
sub
loop
scas
into
das
dec
mov
ret
cli
popa
push
dec
push
cmp
mov
cmp
sub
xchg
insl
daa
in
pop
std
add
sbb
push
mov
mov
or
repz
out
sub
lds
insl
repnz
loop
jns
push
shll
mov
gs
xchg
lods
and
in
dec
sbb
movsb
lea
leave
push
jmp
cmpsl
jg
adc
dec
and
cli
push
cmp
jae
or
hlt
enter
cmpsb
pop
push
and
mov
je
aam
repz
jle
fcomps
shlb
dec
jbe
sub
xchg
movsl
inc
or
cltd
stc
pop
je
test
leave
rcl
mov
stos
mov
mov
ret
xchg
mov
popf
test
sbb
adc
dec
push
int3
es
dec
dec
mov
mov
outsl
sbb
xchg
test
out
sbb
pop
mov
sub
add
movsl
pop
sarl
sbb
sub
add
pushf
les
xor
xchg
push
pop
cmc
cwtl
add
adc
inc
enter
lea
setb
cmp
outsl
and
push
inc
iret
hlt
das
aam
subb
pop
iret
es
jmp
scas
pushf
sub
sbb
scas
mov
dec
jp
lock
repz
test
mov
cmp
jb
shlb
add
mov
movsl
mov
add
push
and
add
mov
in
int
mov
pop
shll
movsl
sbb
and
adc
test
dec
int3
cmp
pop
mov
mov
adc
sub
add
fiadds
gs
leave
das
addl
jle
pop
into
fisubrl
jmp
test
mov
jl
xlat
int
sub
test
jns
je
mov
hlt
and
scas
mov
lret
adc
dec
stc
fcomi
push
add
ja
jmp
mov
loope
fcoms
xchg
jl
xor
pushl
pop
in
mov
push
add
aad
mov
lcall
cmp
push
mov
imulb
push
xlat
dec
mov
xor
mov
pop
mov
xchg
dec
add
inc
cli
ja
out
add
sub
ja
dec
daa
insl
pop
cltd
xor
jnp
push
mov
ret
push
mov
sub
inc
add
aad
dec
xor
movb
pop
xor
xlat
mov
and
xor
lods
outsb
cmp
outsb
repz
dec
xor
stos
xchg
fcomps
enter
ja
mov
in
mov
sbb
orb
imul
mov
dec
xor
loope
sub
ljmp
xor
add
nop
jle
fiaddl
sbb
lds
out
enter
sahf
pusha
sbb
addb
cld
xchg
xor
push
xchg
jle
arpl
fdivs
fcomi
jg
in
xchg
andb
bound
cmp
mov
jbe
inc
out
dec
dec
test
lret
test
mov
icebp
add
fucomi
and
and
xchg
rorl
and
mov
sub
mov
cli
mov
xchg
mov
test
flds
jae
ljmp
das
mov
sub
scas
xchg
aad
popf
popa
bound
ja
dec
aaa
stc
aaa
pop
mov
jb
out
xchg
ret
cmpsl
adc
xor
shl
dec
mov
les
inc
xlat
mov
lods
out
sub
jg
xor
scas
out
sbb
xchg
movb
jecxz
xchg
jp
xchg
cmc
lock
mull
or
cmp
and
shl
repnz
add
adc
js
lret
and
pop
inc
ljmp
cmp
cmp
clc
lds
imul
fsubl
lret
mov
xor
jns
mov
out
test
sub
test
or
aaa
adc
iret
fcomip
fistps
pop
sub
mov
lds
insb
sbbl
inc
lcall
hlt
das
push
adc
cs
icebp
addr16
repz
mov
ja
cld
xor
or
loope
dec
mov
int
add
push
cli
insl
xchg
push
push
mov
lret
jecxz
inc
iret
cmc
xor
lret
movb
repz
pop
mov
jno
push
sbb
mov
jp
mov
sbb
adc
test
pop
fsin
imul
shll
xchg
pop
push
in
push
lahf
jge
inc
in
lcall
lret
push
jae
icebp
stos
mov
fidivrs
adc
stc
fdivs
leave
mov
pusha
jl
repz
call
mov
decb
mov
mov
cmp
nop
sub
sahf
xor
cmpsb
sbbb
jne
pushf
imulb
lods
fidivs
dec
sub
adc
movsb
push
pop
inc
mov
cmp
movsl
loope
int
sub
pop
dec
adc
in
inc
xlat
jae
fwait
xchg
sbb
push
push
cmpsb
pop
inc
jnp
lcall
push
mov
adcb
nop
pusha
adc
imul
movsb
adc
lret
dec
inc
pop
loope
mov
cmc
daa
pop
in
lea
in
daa
or
push
lcall
and
cmp
imul
fwait
into
xchg
das
adc
leave
adc
xor
sti
test
bswap
call
xchg
dec
leave
mov
mov
mov
lcall
mov
and
shll
adc
insl
xorb
ljmp
adc
xchg
ficoms
les
mov
repnz
push
in
loope
mov
xchg
xor
add
pop
mov
mov
and
jecxz
sti
cmc
mov
es
and
jp
sbb
sub
stc
sbb
bswap
test
daa
add
jp
push
fidivrl
call
adc
bound
imul
notb
pop
test
dec
into
js
fdivrs
mov
xchg
or
push
jns
rep
ljmp
testl
xlat
stc
push
aam
sub
inc
cmp
jl
aas
mov
stos
jns
idivl
loope
cmpl
inc
mov
dec
dec
jne
xchg
jne
inc
adc
pop
mov
je
outsb
iret
pop
insl
and
shlb
mov
xchg
mov
andl
push
dec
xchg
in
mov
xchg
inc
ss
xor
cld
jo
adc
mov
jne
dec
xor
test
push
mov
std
or
xchg
cli
push
leave
jg
add
xchg
and
add
pushf
xchg
jge
xor
sub
mov
aaa
pop
insb
adc
test
and
and
movsb
mov
insb
pop
xchg
rclb
pop
dec
cmc
mov
jl
shrb
repnz
jmp
cmp
aas
aas
fmul
loopne
dec
jno
js
jns
xchg
mov
mov
push
and
sub
pop
add
sub
ds
sub
inc
dec
mov
inc
or
insl
add
push
and
cmpsb
xor
int
pop
das
or
inc
popa
pop
jnp
or
adc
xchg
fwait
imul
mov
xor
jbe
jns
add
popa
adc
dec
push
xchg
jb
adc
out
insb
mov
fadd
mov
mov
movsb
mov
repz
mov
xchg
mov
mov
pop
jmp
add
je
push
pop
jle
fsubp
sub
fsubrs
and
mov
daa
push
sub
into
fdivl
aam
ret
js
pusha
dec
xchg
adc
mov
sbb
cmp
mov
rorb
pop
dec
sbb
in
pop
mov
std
jle
arpl
js
jl
push
scas
adc
pop
inc
test
test
scas
in
mov
inc
fbstp
lret
dec
mov
mov
mov
pop
xchg
add
mov
mov
or
loope
add
add
lods
inc
sub
stc
push
add
aaa
xchg
loope
dec
jnp
or
scas
xor
dec
and
aam
jecxz
movsl
add
jg
sub
mov
or
and
ret
cmp
int
push
jnp
inc
adc
and
bound
mov
lahf
leave
lods
jge
int3
jp
inc
ret
out
leave
or
jae
adc
je
dec
test
dec
mov
sub
movsl
sbb
xor
jmp
aad
sahf
ja
ds
mov
push
push
adc
loopne
int3
fnstsw
test
sub
mov
sub
pushf
and
xor
inc
lods
dec
in
and
xorb
cmp
arpl
jo
leave
adc
and
or
inc
pop
fidivs
hlt
inc
fstpt
pop
pop
adc
mov
dec
or
push
aaa
jge
xor
fwait
mov
nop
out
jmp
pop
scas
cmp
movsl
cs
mov
xchg
clc
adc
xor
ljmp
mov
add
mov
in
dec
imul
dec
or
lea
imul
repz
iret
mov
lock
adc
and
movsl
push
xor
cltd
or
mov
lea
add
fdivrl
in
loope
lahf
je
adc
inc
call
movsl
sub
add
in
cmp
ds
jo
aaa
imul
stc
sbb
mov
shl
aaa
or
outsl
add
mov
pusha
xor
leave
push
scas
outsb
mov
xchg
or
int3
adc
or
mov
sbb
bound
pop
mov
inc
fisubl
xor
xchg
dec
divl
cld
or
push
mov
punpckldq
sbb
sti
orl
inc
mov
or
jg
pop
xchg
in
xor
daa
int3
jecxz
arpl
push
push
cs
cmc
push
fsub
or
or
mov
mov
es
fisubl
lret
mov
adc
insl
das
js
mov
cld
inc
xor
lock
loop
pop
call
pcmpgtb
add
in
adc
push
into
in
mov
sub
imul
stos
aas
sub
mov
xchg
orl
mov
mov
lds
pusha
xor
mov
sub
push
jp
insl
and
xor
cmc
int3
ljmp
sub
loope
inc
ret
dec
adc
orl
mov
jae
xchg
mov
or
pop
loop
lcall
push
mov
ret
xor
pop
adc
push
jl
lods
push
mov
mul
mov
lret
sbb
adc
inc
push
ds
add
cwtl
xchg
sub
dec
out
ja
pop
ja
dec
imul
mov
aaa
test
test
cmpsl
iret
mov
cmp
adc
int3
ss
add
rcrb
jmp
mov
cmp
dec
leave
test
lea
cmp
inc
mov
sub
addr16
lds
mov
jge
add
pop
out
dec
sub
movsl
cmpsl
pushf
imul
fwait
es
jle
mov
rolb
or
imul
push
xor
aad
insl
jl
sbb
cmp
add
ret
sbb
push
push
xchg
test
cmp
dec
push
jg
repz
rcrb
adc
and
movsl
xchg
test
xchg
stos
aad
xchg
sahf
ja
add
dec
popa
loope
mov
jnp
xchg
mov
push
push
lretw
cmpsl
mov
jnp
clc
dec
xor
jg
pop
stc
outsl
scas
insb
outsb
bound
inc
addr16
fwait
push
mov
pop
inc
ja
dec
inc
js
mov
popf
rcll
adc
adc
mov
inc
jecxz
push
call
mov
jl
xchg
jg
xchg
out
lods
outsl
jg
stos
add
xor
xor
xor
pop
jns
pop
mov
lods
jae
imul
lahf
leave
push
dec
fs
xchg
shll
les
repz
cli
fs
test
sub
outsb
js
fdivrs
jno
push
lcall
and
and
and
cmc
movsb
xor
push
dec
add
in
jns
inc
sub
cmp
add
pop
int3
jbe
test
push
jl
or
in
cld
push
lret
test
sbb
xchg
loop
imul
jecxz
mov
push
andl
dec
test
outsb
xchg
nop
out
mov
les
stos
cmpl
dec
pop
jecxz
xchg
mov
fdivp
push
or
sub
dec
cmp
push
mov
add
std
gs
test
aas
dec
cmpsb
addr16
stos
shlb
cmp
xchg
or
stos
dec
sub
popf
jmp
lahf
inc
xchg
mov
jbe
insb
jb
dec
add
or
in
sbb
out
pusha
je
mov
arpl
pop
cmpl
sbb
lahf
push
in
push
pop
jg
dec
movaps
jne
jmp
addr16
mul
lahf
jg
pushl
or
aam
sahf
xchg
jecxz
fistl
mov
addr16
or
push
in
mov
jae
ret
mov
hlt
and
inc
cmc
or
ss
mov
inc
pop
stos
push
outsb
fimuls
in
mov
pop
ja
mov
dec
dec
js
xor
mov
pop
les
js
mov
xor
sbbl
cwtl
pop
and
and
inc
xchg
cmp
inc
insl
push
inc
add
negl
pop
leave
push
fildll
loopne
and
fistpll
js
mov
daa
sbb
in
hlt
pop
das
das
push
adc
lock
and
test
hlt
xchg
arpl
outsb
or
xchg
pushf
push
aas
add
dec
fs
arpl
xor
ja
ficompl
nop
aas
mov
pop
xchg
cmc
out
pop
ss
or
cmovae
inc
pop
loope
inc
and
xor
adc
xor
inc
into
test
dec
cmpsl
test
hlt
jb
testb
pop
mov
insb
inc
xchg
in
repz
data16
ljmp
shll
mov
clc
cltd
ds
lods
adc
cmp
jmp
sub
or
lods
cmpsl
mov
lock
push
xchg
stos
jl
sahf
mov
mov
xchg
xor
cltd
cld
pop
hlt
jecxz
icebp
cmp
dec
das
push
test
sar
mov
aam
aam
stos
dec
sti
cmpb
iret
popa
faddl
movsb
jbe
and
movsb
test
cmovo
rcrl
jl
hlt
jle
sti
fcomip
add
iret
xchg
mov
jle
inc
mov
fstps
adc
push
mov
sub
dec
es
jge
lcall
dec
inc
lock
adc
ja
and
clc
leave
addr16
loop
popf
adc
push
or
cs
mov
test
push
inc
xor
mov
fsubrs
lret
xchg
sar
push
cmp
ror
dec
xchg
push
out
ror
cmp
add
mov
andl
xchg
nop
fcoml
dec
repz
cld
xchg
call
lret
test
das
sub
ret
pop
xor
add
mov
out
out
mov
sbb
fbstp
loop
int
add
out
shll
imul
jo
and
cmpsl
in
fldl2t
faddp
rolb
sbb
sbb
cld
xchg
in
and
imul
mov
or
arpl
pop
jo,pt
jne
sar
mov
cmc
jle
adc
push
mov
ja
fimull
inc
push
pop
and
adc
cmp
movsl
jg
out
sbb
bnd
pop
movsl
xor
imul
sub
lret
imul
out
push
or
jno
into
cwtl
push
add
loope
mov
xor
hlt
cwtl
mov
mov
push
in
xor
cmp
lea
push
fcomp
lea
jle
ret
int3
into
enter
aas
arpl
cmp
pop
test
lahf
sub
cmp
push
mov
sbb
mov
test
rolb
jp
mov
cwtl
gs
shrb
fucomp
popa
out
lods
test
arpl
ds
or
mov
add
aam
jp
jl
rorb
dec
mov
ffreep
arpl
sbb
stos
mov
cli
xchg
sbb
es
ss
sbb
xor
divb
xor
leave
scas
imul
push
pop
push
popf
mov
jns
les
insl
jne
inc
pop
jmp
cwtl
test
dec
jg
mov
or
pop
fmull
idivb
in
ss
sub
popf
arpl
mov
mov
lods
pop
aas
mov
xor
xchg
rclb
insb
ret
or
mov
cmp
xchg
dec
xor
xorb
lahf
ljmp
ret
ja
test
dec
mov
mov
and
bnd
xchg
mov
jo
shll
gs
jl
jle
xchg
push
add
sub
arpl
push
sar
mov
adc
xchg
decb
ret
mov
sbb
sub
sub
dec
lahf
mov
lahf
jnp
clc
js
in
stos
call
jns
ret
in
in
rcll
push
ds
add
shlb
pop
adc
push
addr16
fcoms
lods
jmp
xor
add
les
push
sub
aaa
lods
jno
lahf
jb
fcompl
push
sbb
pop
in
xchg
scas
cmpsb
push
pop
jmp
mov
inc
sbb
push
cmpsb
jae
int3
jo
sub
pop
jmp
imul
mov
pop
xchg
push
mov
rclb
insl
popa
mov
mov
fisttpll
test
int3
hlt
add
aad
pop
lds
push
xor
les
mov
cmpb
in
fcomps
loope
pushf
xchg
cld
mov
push
mov
push
inc
pushf
imul
movsl
addr16
sub
push
rcrb
dec
jns
shr
in
data16
dec
push
repz
and
or
and
daa
shll
xchg
movsl
xchg
cmpl
xchg
enter
mov
jp
pop
cli
jge
add
inc
jl
dec
bound
dec
dec
stc
mov
dec
int3
clc
xor
aam
cmp
ret
pop
aas
aad
add
pop
jg
push
jno
cmpb
fcmove
cmc
rolb
cmpl
and
or
icebp
mov
test
stos
sbb
in
dec
adc
xchg
repnz
inc
xchg
jle
jno
and
mov
cmpsl
add
cltd
add
js
add
mov
mov
mov
mov
pushf
adc
test
sub
es
cmc
push
in
imul
and
int
mov
cmp
mov
jo
or
cmpsl
inc
mov
popl
fsubrs
jae
add
leave
cmp
loopne
lods
repnz
shrl
fists
sub
loopne
dec
decl
cmp
sti
ds
dec
mov
cs
fs
clc
aad
mov
adc
mov
inc
subl
xchg
pop
insl
aad
mov
daa
mov
cmp
js
cmp
sbb
sbb
pop
sub
ret
popa
mov
push
or
and
das
clc
stos
fldenv
cmp
push
imul
ljmp
push
mov
movsb
inc
call
cld
xlat
xor
jns
jnp
aaa
loop
and
jmp
outsl
push
mov
adc
mov
mov
push
sarl
add
xchg
push
and
decl
cmp
dec
add
sbb
xchg
in
sub
xor
pop
mov
add
fsubrl
fidivl
mov
ret
rclb
xchg
jle
xor
inc
sbb
dec
cvtps2pi
mov
mov
ds
js
jecxz
test
aad
mov
push
pop
inc
ret
pop
hlt
cmp
and
fidivrs
iret
fistpll
pop
je
popf
adc
insl
and
push
in
arpl
mov
adc
sub
enter
or
mov
jo
test
push
fs
in
xchg
cltd
xor
insl
sub
and
mov
ds
cmp
sub
jno
cmc
xchg
inc
push
sub
andb
adc
lods
jge
xlat
fnstcw
filds
or
fdecstp
pop
xor
xchg
sbb
mov
adc
das
incl
xchg
jge
das
fisubrs
icebp
fildll
xchg
mov
clc
cmp
adc
sub
imul
fwait
cmpsl
inc
mov
push
stc
push
inc
js
adc
jnp
mov
movsl
fidivl
shll
aad
fwait
ljmp
pop
xlat
je
fistl
pop
xchg
jecxz
pop
push
dec
jg
into
pushf
pop
movsl
xor
lods
cmp
adc
cmp
fildll
aaa
mov
sub
lods
mov
es
sbb
and
mov
fmuls
dec
sar
cmpsb
cmc
in
cltd
jbe
mov
xchg
mov
mov
sahf
and
mov
dec
gs
outsb
stos
and
pop
pop
fldenv
add
push
pop
lcall
xchg
dec
sarl
enter
add
test
mov
and
in
scas
or
dec
sarb
cmpsl
lret
mov
xor
sbb
add
jns
lcall
cli
lret
mov
jge
push
and
adc
push
push
dec
push
cmp
xchg
sbb
inc
jae
in
out
inc
sub
daa
icebp
popf
mov
int3
dec
idivl
and
negl
push
pop
mov
pop
xor
xchg
mov
xchg
inc
in
sub
push
xor
lock
shlb
xchg
jmp
and
mov
out
xor
arpl
adcb
andl
xchg
inc
sbb
fbstp
cmp
rcl
fcomps
fs
and
fwait
std
mov
xchg
lcall
addb
outsl
inc
es
cmp
cmp
aaa
pop
stos
jno
mov
sbb
jbe
mov
lock
jg
int
cmpb
out
xchg
xor
mov
sbb
and
or
mov
inc
test
out
and
sub
lret
sbb
or
jl
hlt
daa
and
jb
jnp
decl
and
jp
stos
mov
pop
inc
lock
clc
push
cmc
out
divps
pop
ret
xchg
sub
cmp
dec
js
aad
cmp
rolb
lcall
ljmp
into
jle
lds
jl
mov
cmpsb
iret
test
adc
out
xchg
iret
mov
pop
adc
push
pop
rolb
imul
inc
push
and
push
cmpb
mov
mov
or
mov
cmp
mov
dec
mov
out
ss
and
mov
sub
out
lcall
xor
scas
xor
scas
rcrl
dec
popf
sub
pop
mov
into
enter
in
pop
fcoms
test
cli
or
fldt
cmpsl
inc
repz
or
addl
xor
xlat
popa
cmc
bound
xor
fs
and
or
jge
js
shl
rclb
sahf
movsb
movb
scas
cwtl
pushf
aaa
ja
xlat
nop
inc
and
stos
xchg
push
jp
fadds
fnstenv
popa
insb
cmpsb
xor
dec
jb
mov
jmp
stc
clc
push
mov
dec
push
ficomps
aam
lret
cmpsb
xchg
sti
popw
jo
xor
mov
dec
pusha
push
lods
daa
jbe
out
sub
push
add
sbb
mov
adc
jns
movsl
pusha
das
pop
insl
push
jb
jnp
fsubrl
stos
jbe
std
jbe
sub
movsl
out
xor
jmp
xlat
inc
ljmp
stc
jmp
sbb
cmp
inc
mov
lahf
test
and
push
aas
in
xchg
cmpsl
cmc
fistps
movsl
jo
pop
mov
xchg
test
cltd
mov
fwait
mov
or
ror
sub
mov
mov
sbb
jle
ss
out
jle
fsts
aaa
pop
setp
jb
jge
cmpsb
sbbb
ss
lds
insl
cmp
cmpsl
xchg
fcoml
and
pop
mov
mov
push
dec
sahf
sar
mov
push
aam
ret
and
aam
scas
mov
jne
push
mov
addl
mov
sub
lret
inc
push
orl
xor
sbb
std
test
out
popf
sub
call
xchg
test
fidivrs
adc
pop
mov
enter
inc
in
cmpsb
out
movsb
pop
scas
cmp
js
rorb
mov
xor
push
inc
cmp
mov
call
adc
dec
push
lods
inc
repnz
mull
xchg
cmp
jns
inc
mov
cmpsb
mov
or
mov
or
fidivs
je
jle
popl
loopne
imul
inc
test
push
notl
inc
cmpsb
cmpsl
mov
cld
sbb
cs
out
imul
adc
or
int
pusha
out
jecxz
ss
mov
push
movb
pop
das
imul
imulb
mov
aas
imul
inc
cmp
insl
and
pop
shrw
add
cmc
outsl
mov
lahf
xchg
dec
fwait
bound
push
adc
push
jg
pop
jp
add
in
dec
cmp
push
lret
and
inc
mov
and
fcompl
daa
mov
push
and
sub
adc
movsl
sbb
inc
xor
xor
inc
jp
insb
movsl
mull
xchg
sub
xchg
mov
repz
test
add
sub
cmp
test
pop
cmp
mov
clc
xor
shl
push
cmpsl
mov
clc
andl
inc
pop
sub
adc
push
js
enter
mov
imul
cld
repnz
ret
push
dec
icebp
push
movsb
popf
jns
sub
cmpsb
fidivs
pop
out
lret
movsl
loope
mov
jns
pop
inc
adc
leave
notb
ljmp
js
aam
mov
daa
mov
xchg
or
adc
out
push
jp
dec
mov
je
jmp
rclb
pop
call
int3
adc
loopne
insl
fldt
mov
pop
push
loop
push
inc
loop
and
cmc
xor
sub
cwtl
push
mov
out
push
ror
loopne
adc
jb
mov
adc
fmuls
je
pop
sarl
sub
mov
jbe
hlt
add
mov
fsubrl
stc
hlt
js
or
inc
jg
rcl
push
push
fcoms
ret
addb
adc
dec
sbb
je
dec
add
or
push
push
jle
mov
lock
repnz
nop
mov
sub
out
gs
xchg
jg
scas
fs
xor
xchg
cmp
cmpsb
and
inc
push
jg
lea
ss
xchg
repz
test
scas
ret
xchg
fadd
out
jnp
or
in
daa
cmpsb
cltd
aaa
or
adc
popf
sahf
repnz
aam
mov
mov
stos
stc
cld
rorb
ficomps
xor
pop
pusha
dec
xor
gs
mov
inc
pop
leave
or
sub
test
dec
std
ret
scas
or
pop
ljmp
mov
iret
movsb
ds
jg
jge
jo
loop
xor
mov
or
or
sti
jecxz
aam
insl
mov
cld
movb
outsl
imul
lods
je
xchg
lock
and
or
mov
inc
jge
aam
aam
int3
xor
add
mov
jl
jmp
outsb
outsb
pop
int3
lret
pop
stc
idivl
sub
dec
mov
fdiv
test
pop
sub
aaa
insb
lret
inc
inc
imul
sbbb
jo
ss
out
dec
or
jno
mov
jns
popf
push
xchg
out
pop
pop
fcomps
jmp
push
fs
jl
xchg
leave
adc
sub
push
call
fwait
xor
popf
lods
mov
and
inc
inc
push
outsb
push
icebp
mov
mov
mov
and
push
and
test
lea
imul
dec
mov
pop
push
mov
std
cmp
out
int3
xor
add
adc
xor
and
sub
pop
push
pop
popf
inc
je
idivb
rclb
jnp
mov
and
insl
add
jl
mov
test
outsb
jns
or
nop
xor
stc
sbb
adc
jno
add
icebp
push
pop
sub
xchg
icebp
imul
sub
xor
mov
jne
stos
repnz
stos
out
stos
hlt
or
mov
call
out
pop
faddl
push
pop
mov
push
mov
mov
aam
mov
cmpsl
sub
ret
fcompl
int
and
push
push
xchg
xlat
std
fdivrs
and
xchg
aad
call
fstpl
subb
or
mov
stos
inc
jbe
jmp
clc
shll
mov
shlb
dec
je
test
xchg
lahf
cld
push
mov
pusha
adc
jle
js
sub
fucom
and
xchg
or
and
sub
lods
popa
push
sub
push
popaw
in
push
lcall
mov
add
push
fsubrl
push
lods
sub
adc
pop
call
repz
insl
fiaddl
add
aas
add
xor
pop
idiv
bnd
mov
movsl
dec
mov
pop
xchg
or
pop
loop
inc
cwtl
iret
cmc
adc
and
push
imul
cmpsb
div
cmp
pushf
adc
push
pop
mov
jecxz
fs
enter
push
sub
movntq
pushf
adc
je
enter
lods
hlt
popa
mov
adc
fs
jne
pop
imul
stos
cmp
ljmp
adc
icebp
dec
fnstsw
inc
in
aas
insb
aaa
mov
lcall
dec
mov
add
test
lret
pop
xchg
jo
or
and
loopne
pop
adc
lods
pop
xor
mov
icebp
inc
cli
mov
orl
cmpsb
cmpsb
or
push
push
or
js
pop
lea
mulb
stc
dec
add
sbb
loopne
pop
cmc
inc
cmp
stos
add
xchg
xchg
push
out
sub
out
es
dec
xor
jmp
lahf
xchg
xchg
cmp
cmc
xor
cltd
cwtl
dec
cld
rorb
ret
add
mov
cmpsl
or
jecxz
jg
lock
mov
sbb
cmp
gs
pop
jno
xor
inc
out
mov
inc
and
stos
outsl
push
ret
outsb
stos
in
mov
mov
pop
shrb
pop
mov
push
leave
dec
or
test
sub
mov
mov
nop
or
cmc
sub
inc
push
sbb
imul
jns
jecxz
mov
int3
push
stos
push
sbbl
jp
mov
lea
icebp
scas
in
call
sarl
cmp
dec
int3
js
add
push
push
rcr
cmpsb
arpl
call
fisubrl
mov
xchg
xor
mov
cmpsl
dec
stos
ret
int3
int
add
mov
cmc
fucomp
dec
sub
jmp
ret
dec
pop
adc
out
mov
outsb
arpl
add
jns
cmp
mov
add
movsb
faddl
or
fcmovb
lahf
scas
insb
movsl
cmpsb
mov
movsb
bound
push
mov
mov
in
push
mov
arpl
unpcklps
jecxz
mov
stc
jp
inc
movsb
sbb
mov
cmpl
imul
stc
inc
ds
xor
jnp
repnz
jbe
push
mov
pop
and
aas
mov
imul
call
push
and
inc
popf
aad
or
int
jg
fisttpll
pop
cmp
dec
adc
sti
or
mov
ret
imul
xorb
inc
xchg
mov
sub
mov
loop
lret
mov
rcl
scas
fistps
inc
cmp
mov
out
jmp
mov
outsb
enter
idivl
fsubl
popf
lods
js
mov
lcall
sub
stc
push
mov
cmp
cs
mov
movsb
scas
or
sbb
out
xchg
or
cmpsb
idivl
sbb
ss
leave
movsl
pop
sub
sub
icebp
sbb
std
int
cmp
dec
xchg
adc
iret
dec
jle
pop
cmpsb
inc
jb
jge
add
das
iret
xchg
test
push
lret
stc
pop
cld
out
es
ja
cmp
jae
hlt
enter
sub
jnp
adc
in
fisubs
cmp
sub
out
jg
mov
jae
int3
dec
jecxz
xchg
cmc
adc
aad
movsl
sub
cmp
jo
aaa
pop
jo
stos
jns
jo
out
movsl
dec
mov
cwtl
mov
cltd
add
mov
cltd
lahf
adc
sbb
mov
mov
jns
insl
sub
xchg
sub
pusha
jo
cmp
add
pop
scas
xchg
test
adc
out
adc
in
fwait
out
fistpl
inc
xor
push
jmp
inc
ljmp
pusha
add
aaa
out
aaa
and
out
jge
loope
pop
rcrb
in
jae
lea
adc
mov
adc
jp
inc
sbb
in
inc
push
sahf
dec
adc
bound
test
pop
pushf
mov
imul
mov
scas
adc
add
sbb
outsb
or
jnp
loopne
stc
mov
and
sbb
push
repnz
es
pushf
movsl
fisttps
pusha
sub
xor
fsubp
pushf
xchg
sti
out
nop
in
fs
jo
div
inc
jne
sub
push
push
xchg
stos
and
inc
xor
lcall
push
out
sub
cmp
xor
int
sub
insl
inc
pusha
sub
addl
imull
pop
movsb
shrb
jmp
call
ja
ss
dec
out
enter
or
add
fmulp
xor
jp
gs
xchg
and
xchg
cld
sub
fcoml
dec
cmovno
int3
xchg
lret
adc
add
xchg
rcll
xor
rolb
sahf
jo
adc
int3
and
icebp
and
in
outsb
fstps
andl
int3
or
sahf
sti
or
js
pop
push
dec
pop
push
cmc
dec
adc
jns
jmp
in
jb
sbb
cmc
push
sbb
mov
jmp
jg
mov
jp
ljmp
loop
outsl
xchg
cld
adc
jb
fildll
jecxz
loopne
jg
cltd
dec
xlat
leave
jbe
mov
adcb
jmp
sti
fldcw
xchg
arpl
push
cmp
inc
stc
adc
xor
pop
sub
dec
out
cld
mov
dec
jno
push
push
adc
ret
sahf
jg
pop
cmp
pop
jp
cmp
push
in
xchg
sbb
jp
mov
inc
insl
es
das
push
xor
mov
sarl
into
das
out
imull
jb
stos
out
lods
js
dec
jne
cs
stc
insb
hlt
pop
pop
cmc
push
and
iret
loopne
ret
jb
loop
inc
pop
cli
sub
movsl
icebp
dec
cmp
mov
test
and
xor
or
pop
sub
fnstenv
jbe
jmp
nop
add
sti
push
xor
jmp
sbb
pusha
in
xchg
fimull
adc
add
mov
jle
mov
fnclex
gs
stos
pop
jecxz
jnp
bound
xchg
sbb
hlt
out
adc
popa
out
add
cmpsl
sbb
and
xchg
sahf
push
or
ds
push
fbstp
nop
jl
cmpsb
out
xor
xchg
fwait
inc
rcl
jb
mov
pop
call
daa
or
daa
out
push
scas
xlat
je
scas
push
mov
enter
xchg
xchg
push
mov
fimull
call
call
adc
push
xchg
nop
mov
push
popf
stc
iret
dec
xchg
enter
mov
or
scas
mov
mov
mov
push
imul
arpl
fmul
mov
xchg
add
test
xchg
lods
orl
addb
ret
add
xchg
adc
pushl
call
dec
scas
push
enter
testl
out
test
xchg
vpslld
sub
jno
pop
mov
pop
pusha
mov
stos
pushf
xor
in
es
jne
jecxz
sbb
imul
sar
cli
jmp
and
inc
xor
ret
fcoml
ss
jmp
stos
xchg
xor
cmp
gs
insb
and
xchg
loop
add
mov
subl
dec
mov
nop
jbe
jnp
pop
movsb
sub
mov
and
lret
and
aad
dec
stc
adc
aas
scas
mov
and
negb
dec
jne
mov
adc
jo
pop
incl
lret
js
sbb
daa
mov
pop
cmp
push
sbb
or
je
jg
mov
cld
sbb
es
adc
adc
pop
push
jb
enter
add
mov
jl
mov
aad
add
lcall
xchg
hlt
dec
or
push
xor
stc
push
in
rcrl
xor
jnp
imul
push
pop
and
mov
idivb
fisttps
cmpsl
jb
cmp
xor
xchg
mov
xchg
lahf
pop
fistps
shl
movsb
mov
jge
mov
adc
ja
mov
xor
in
or
fistpll
dec
test
loopne
daa
fwait
pop
xchg
and
dec
outsl
sti
testl
mov
cltd
mov
adcb
lret
jle
cmc
enter
jbe
jge
pop
jle
mov
xchg
sub
push
xor
hlt
fmull
push
jl
or
sub
dec
insl
and
or
mov
pop
xchg
cmp
adc
mov
js
orl
push
mov
push
insb
lods
pop
push
fistpll
rep
fsubl
mov
mov
popl
mov
xchg
loop
cmc
cmp
adc
mov
pusha
repz
xchg
ds
dec
xchg
push
ljmp
call
lea
stos
idiv
sub
sub
testb
test
dec
dec
sub
dec
std
icebp
call
fwait
ss
loopne
adc
and
sbb
mov
outsl
push
les
test
dec
je
sub
aad
or
das
pop
ljmp
mov
pop
pop
push
cltd
adc
add
mov
cmp
sahf
sub
fstpl
imul
push
xchg
and
mov
or
scas
mov
xchg
loope
xchg
mov
mov
cs
cli
andl
inc
or
xchg
sub
loope
test
and
inc
sub
call
call
add
xchg
ret
ds
add
cmp
push
stos
lret
xor
pusha
stc
adc
pop
fwait
negb
pop
push
mov
mov
lret
mov
test
das
mov
repnz
std
sub
sub
pop
mov
inc
in
sti
repz
out
les
mov
sbb
mov
adc
sbb
and
test
jb
and
xor
mov
hlt
stos
pop
out
aad
add
fistpl
xchg
jmp
int
out
or
bound
ljmp
gs
fistpl
sti
not
pop
fmul
mov
pop
enter
push
mov
mov
repz
sahf
push
or
cmp
pushf
or
xchg
push
in
out
adc
inc
js
add
rolb
pop
mov
mov
sbb
add
cmp
adc
negl
outsl
rclb
jl
dec
ds
dec
out
lcall
aad
in
rcr
or
fs
fdivrl
mov
inc
mov
mov
pop
jae
mov
cmc
mov
inc
mov
divb
cmp
icebp
push
and
outsl
push
sub
aaa
outsb
int3
cmpsl
cli
push
xchg
xor
out
adc
push
pop
dec
cmp
push
push
pop
enter
jle
mov
ret
and
imul
ret
popf
push
cld
sub
mov
fwait
pop
dec
testb
xchg
das
or
pop
lods
sbb
popa
mov
pop
lods
popa
adc
dec
dec
loop
imul
jnp
insl
sbb
loop,pt
test
test
rcrl
sbb
adc
pop
into
popf
bound
mov
loop
mov
jae
mov
int3
mov
inc
cmp
daa
sub
aam
adcb
or
ret
out
jl
dec
cmp
into
add
pop
xchg
lret
add
gs
cmp
fucomi
dec
testb
xor
dec
repnz
cmpb
lods
pop
push
pushf
orb
cmp
mov
cmp
out
push
sbb
sbb
inc
test
cmp
push
mov
fldl
fsub
shrl
js
stos
inc
aas
pop
cmp
imul
lods
mov
sbb
inc
decl
sti
fs
fwait
push
mov
stc
and
inc
and
pushf
fsts
add
stc
movsl
clc
xor
pop
mov
test
dec
mov
or
sbb
faddp
lods
cmp
in
outsl
hlt
or
inc
or
int3
shl
and
xor
or
lcall
shlb
outsb
stos
test
xor
jmp
adc
das
mov
inc
pop
jg
xor
and
sbb
fwait
or
dec
dec
mov
jmp
mov
ljmp
add
ror
inc
pop
shlb
pop
loop
nop
mov
loope
scas
test
push
jecxz
leave
add
mov
or
cmp
loopne
push
inc
ret
subb
rcll
xchg
ja
loope
popf
mov
negb
mov
jne
ss
mov
and
popa
and
imul
std
sbb
ljmp
sbb
repz
jb
or
jne
dec
pop
push
jne
pop
mov
xor
nop
imul
inc
ret
jb
and
xlat
hlt
mov
sbb
lock
or
and
push
enter
mov
xchg
das
pop
jg
xor
mov
push
shll
xor
ss
xchg
je
cmc
pop
lcall
dec
mov
dec
fs
sub
inc
mov
repnz
mov
sarl
cmpsl
stc
push
lret
push
mov
int
cld
movsb
xor
mov
ljmp
add
into
sbb
mov
sar
pop
push
xor
mov
jl
in
mov
pop
fdivrs
cld
cmp
mov
aaa
push
push
add
push
xor
inc
mov
fsubr
test
push
jne
dec
mov
and
or
pop
mov
sbb
sti
push
movsl
enter
sbb
test
sti
data16
pop
gs
dec
outsl
into
mov
fcompl
ja
fwait
push
xchg
aad
aaa
shrl
add
fs
mov
out
sbb
cmp
aad
xlat
ret
mov
dec
sbb
idivb
test
ret
test
mov
testl
icebp
add
sti
popa
jns
adc
mov
bound
inc
jmp
push
sub
leave
mov
call
pop
cltd
xchg
je
imul
out
fwait
int3
push
aaa
sbb
dec
insl
mov
jl
psubd
push
inc
jecxz
subl
cmp
ret
jecxz
cmpb
shl
outsl
lods
mov
repnz
ljmp
int3
inc
sbb
ds
out
push
or
adc
movsb
mov
mov
fwait
mov
nop
insl
and
sub
fistps
mov
jl
cmp
lock
ret
out
push
decb
popa
adc
inc
sbb
inc
mov
cmp
imul
add
xchg
inc
andb
xor
sbb
insb
jne
das
push
xchg
inc
push
and
sub
pop
leave
xor
jo
mov
xchg
or
shll
add
jl
or
dec
jb
or
rol
inc
dec
icebp
in
or
mov
cmp
ljmp
sti
popa
mov
jge
cmp
cmc
call
popa
push
or
lods
es
cwtl
ds
jnp
mov
cwtl
mov
adc
lcall
int
ljmp
mov
mov
into
push
mov
rcr
cmpsb
xchg
adc
push
bound
fisubrl
fst
ror
out
insl
scas
push
addr16
sbb
sbb
xor
ss
pushf
rol
adc
push
mov
mov
shl
adc
stos
mov
mov
js
int
mov
jmp
int3
adc
into
dec
in
lods
stc
and
insl
clc
fistl
je
jmp
push
ds
jbe
fisubrs
inc
insb
cs
pop
or
cmp
cli
fldt
adc
ds
lret
adc
push
imul
push
and
pop
jle
and
sarl
ljmp
push
cmp
gs
add
cmpsb
inc
xchg
push
loopne
test
or
mov
push
add
adc
in
jg
or
mov
adc
add
dec
xor
popa
xor
inc
ret
aad
xchg
inc
push
inc
jns
fnstsw
jno
stos
mov
xchg
add
inc
leave
jp
ljmp
adc
xchg
xor
cwtl
lock
testl
adc
sbb
mov
inc
movsl
mov
flds
stc
jl
outsl
xor
sub
pause
popa
and
sub
arpl
fcmovnb
mov
inc
cmc
scas
sub
sarb
jo
sbb
dec
jle
in
cmpsb
out
and
xchg
fistl
mov
mov
fcompl
jge
dec
sbb
xchg
jnp
mov
xchg
sbb
jg
xchg
mov
add
mov
or
in
sbb
movsl
rol
jmp
cmp
popl
mov
lea
or
lock
ljmp
jmp
mov
loopne
fisttps
pop
cld
cmp
fcomps
pop
lock
ds
lcall
xchg
mov
push
xlat
shlb
add
mov
sub
cmp
xchg
in
push
mov
aam
adc
dec
pop
in
notl
movsb
loopne
fildl
fsubrl
dec
cld
mov
fcoml
pop
sbb
lea
sbb
sub
xchg
and
mov
and
int
inc
imul
and
jle
shrl
in
and
adc
push
and
xchg
mov
mov
inc
lret
sbb
loopne
dec
bound
jns
out
inc
or
pusha
ja
pop
cmp
xor
mov
scas
fldt
data16
mov
sub
mov
mov
jg
das
aad
lret
dec
and
mov
push
repz
lods
mov
cmc
cs
inc
int3
xor
jno
cmpsl
cwtl
and
add
movsl
das
add
popf
cld
push
push
adc
fs
inc
sub
repz
or
daa
adc
lret
jnp
cmp
or
xchg
inc
mov
imul
dec
jns
idivl
push
xchg
jne
cld
cmpsb
push
dec
dec
sbb
cmpl
sbb
mov
xor
adc
les
pop
std
jnp
sahf
je
stc
cmp
and
ljmp
cld
mov
jae
icebp
aas
test
cmc
or
movsl
cmp
mov
rorl
iret
and
jp
call
movsb
jb
sub
bound
push
rcrl
orl
or
gs
sbb
jb
xorb
mov
loop
lret
mov
icebp
push
jo
ret
fmuls
ljmp
aad
xorb
and
fs
pop
movsl
je
es
xchg
movsl
notl
mov
cmp
aam
cmpl
pop
insb
mov
push
je
enter
jp
idiv
fwait
imul
fwait
mov
mov
or
jne
jp
fs
inc
fisttpll
lea
and
test
pop
lcall
fistpll
fcoms
sub
stos
fwait
andb
mov
adc
xchg
cli
cmp
enter
loope
enter
js
lds
icebp
movsl
dec
lea
es
adc
std
sub
inc
mov
xor
imul
mov
imul
xchg
ja
cld
mov
and
mov
std
fists
ret
inc
in
cmc
jb
data16
xchg
arpl
cmp
fs
ret
enter
mov
in
icebp
xor
pop
mov
and
scas
or
inc
das
sub
inc
call
mov
push
ds
xorl
mov
popa
add
rcrl
adc
ror
jp
adc
imul
cmc
lods
add
mov
wrmsr
hlt
jmp
and
imul
inc
cwtl
jns
jp
test
push
test
cwtl
int3
notb
gs
mov
hlt
push
loopne
ja
shll
mov
jg
mov
insb
xlat
jno
loope
loope
xor
outsl
hlt
xor
xchg
mov
les
lea
leave
fwait
popf
push
sub
and
xlat
mov
xchg
pop
add
cmp
addr16
cmpsb
iret
or
xor
mov
jmp
or
cld
and
test
test
inc
xorb
adc
out
pop
inc
mov
inc
inc
jae
icebp
pop
fnstcw
jecxz
out
push
ss
scas
add
xor
push
int3
inc
adc
mov
push
test
cmp
in
movb
pop
out
aam
pop
lods
mov
loopne
sbb
call
dec
inc
les
push
lds
shll
and
pop
mov
sbbb
xor
ret
sub
or
jp
ds
push
sti
fs
rcrl
and
std
idivb
inc
mov
mov
push
inc
pop
nop
rcll
into
stos
jno
in
pop
aaa
xor
push
outsb
fcomps
les
push
mov
loop
xor
enter
jne
push
pop
push
testl
mov
push
repz
xchg
sbb
or
pushf
bound
cli
pop
mov
adc
jbe
in
xchg
out
jb
mov
push
mov
or
cmpsl
iret
fpatan
push
out
or
icebp
mov
cmp
adc
adc
loop
or
pop
cmp
sti
mov
mov
adc
sub
test
pop
aas
sub
mov
mull
in
jg
lret
jle
movsb
test
fs
lods
clc
push
cs
loope
mov
and
dec
jmp
aad
inc
mov
cmpsb
cmp
push
adc
lahf
jb
add
lods
dec
add
lods
shrl
mulps
cmpl
adc
push
mov
mov
imul
push
mov
jae
test
jmp
ret
xor
pop
arpl
iret
mov
out
pushf
jbe
scas
leave
jmp
push
jg
fs
clc
lcall
xor
lods
outsl
mov
addr16
push
xchg
out
xchg
scas
movsl
and
loope
pushl
cwtl
stos
adc
leave
ficoml
mov
xorb
lods
push
iret
lea
dec
pop
dec
scas
xor
andl
adc
ljmp
cld
pop
mov
adc
js
mov
dec
pop
mov
stos
inc
pop
fistl
fstl
inc
adc
cmpb
or
jnp
add
and
cwtl
ret
jno
loopne
ret
mov
es
add
aad
and
stos
cmp
imul
mov
int3
mov
js
sti
int3
fcmovnb
stc
imul
push
add
test
push
setbe
xor
icebp
adc
daa
push
jmp
xchg
gs
inc
lret
enter
cltd
into
lea
dec
push
xchg
je
ljmp
sub
test
aam
in
mov
loopne
xchg
rclb
cld
es
jbe
outsb
sti
cs
divb
xchg
adc
mov
daa
jl
xchg
inc
pusha
lods
cmp
jge
lret
movsl
movb
mov
dec
fwait
icebp
add
mov
mov
xor
cmpsb
jno
mov
aaa
lcall
jmp
pop
aaa
cwtl
pop
cmc
mov
in
mov
or
out
rep
je
mov
jl
aaa
or
pop
inc
jb
enter
cmpsl
xchg
bsf
aas
sahf
jb
jmp
mov
movsb
mov
or
sti
mov
ljmp
mov
and
push
rolb
xorl
pop
and
push
and
push
scas
xchg
jbe
ljmp
mov
push
mov
fcoml
and
lcall
js
aas
add
icebp
cmp
pop
test
sub
rcll
lret
aas
aas
data16
cmp
lds
pop
fucomp
rol
sub
ficomps
or
add
ljmp
scas
jae
test
inc
jnp
pop
dec
lds
adc
imul
adc
or
inc
pop
sub
inc
adc
sbb
mov
cli
adc
xchg
cmp
out
lret
sbb
push
sub
pushf
mov
idivb
mov
scas
clts
dec
xchg
stos
and
inc
inc
cmp
pop
outsl
sbb
mov
iret
pusha
adc
push
push
xchg
clc
cltd
push
jecxz
adc
jmp
fs
jno
push
data16
test
js
in
xchg
mov
pop
cwtl
lds
and
fldenv
jns
mov
shll
aaa
xchg
mov
or
addl
lcall
jo
or
mov
or
jecxz
push
lahf
cli
inc
xchg
nopl
mov
clc
push
mov
pop
inc
cmp
jg
dec
cli
sarb
push
dec
dec
icebp
mov
popf
dec
cmpsl
push
das
sahf
push
xchg
xor
add
sub
jo
sub
and
sub
movsb
push
sbb
es
mov
ret
push
out
addr16
addr16
out
std
stc
ja
outsb
popf
out
and
imul
imul
adc
aas
sub
mov
js
cmp
pop
add
pop
imul
mov
setp
ss
and
hlt
mov
ret
aad
xorb
out
inc
pop
xor
adc
popf
cmp
ss
dec
mov
pop
xlat
sub
dec
mov
jno
sub
cwtl
pop
std
push
dec
sub
pop
and
jae
addl
xchg
repnz
sub
mov
stos
lcall
imul
movsl
mov
pop
inc
out
rolb
mov
lret
aaa
dec
lret
jno
lret
push
and
mov
and
xor
pop
in
enter
jmp
je
addr16
cmp
jge
cmp
frstor
xchg
jecxz
and
out
test
jp
xchg
inc
cmpl
jns
cmp
push
andb
jg
outsl
lcall
aam
movsb
push
or
dec
int3
ss
out
cmp
cmp
lahf
push
sub
cmp
pop
inc
pop
or
arpl
aad
lcall
add
lock
jno
push
lock
and
jg
nop
ret
sub
loop
or
cwtl
clc
and
jne
rcl
or
stos
js
popl
ljmp
xchg
es
int
dec
int
shlb
aas
fucom
cmp
aad
add
mov
push
dec
and
jmp
fcomip
in
xchg
adc
inc
call
mov
push
push
test
mov
lods
sbb
sbb
cltd
loopne
cmp
loope
cli
sub
les
inc
jbe
jne
add
cmp
and
jle
pusha
or
or
pop
popf
pushf
push
jle
xlat
inc
mov
adc
and
mov
mov
xor
mov
lret
call
insb
add
xchg
jge
cmp
xchg
push
or
fildl
and
xor
push
mov
push
or
pusha
and
xchg
inc
mov
inc
xchg
data16
ret
fwait
popa
arpl
sub
xchg
insl
and
cmp
mov
mov
xchg
fs
es
pop
xchg
fnstcw
mov
xor
xchg
loope
pushl
fs
cmpsb
add
sbb
cld
xchg
cmp
xchg
push
movsb
adc
fsubl
mov
stc
jge
scas
rorl
cmp
jo
or
jne
pop
icebp
addr16
dec
dec
test
movsl
mov
aaa
leave
imul
xor
js
fimull
ljmp
xor
out
push
daa
push
jl
jb
sahf
push
ficompl
daa
cmp
inc
and
imul
xchg
addl
mov
and
and
out
jle
hlt
stos
jb
mov
sub
inc
shrl
nop
rcrb
add
pop
fwait
mov
test
and
pop
add
pop
sbb
jns
loop
pop
test
repnz
pop
sub
sti
pop
xchg
fwait
jp
mov
std
nop
and
mov
mov
lods
mov
push
mov
popa
stos
out
int3
test
lods
add
cld
xchg
sub
iret
into
daa
xchg
dec
jnp
mov
ljmp
cs
nop
add
and
hlt
in
and
popa
ds
ret
lret
jmp
mov
loopne
rorb
mov
rol
leave
outsl
sub
pop
mov
mov
mov
bound
frstor
lods
movsl
or
aam
scas
int
mov
flds
cmpsl
cmp
push
movsl
pop
stos
sub
inc
lea
jns
fsubl
movsb
xlat
mov
in
xchg
or
mov
mov
icebp
pop
xchg
arpl
xchg
ss
inc
js
xchg
cs
bound
bound
les
mov
rcrb
mov
cmp
xor
inc
leave
inc
jg
aas
insb
imul
mov
xchg
call
xor
xor
popf
std
inc
cltd
sarl
mov
jecxz
testl
jno
in
mov
dec
addr16
pop
sub
pop
fstpt
xchg
dec
add
xor
ja
sbb
sub
xchg
add
sub
pop
mov
and
data16
fsubs
add
mov
scas
pushf
adc
ds
cmc
mov
or
xchg
pop
jo
dec
call
jne
mov
lcall
dec
or
out
nop
mov
pop
mov
dec
xor
mov
mov
inc
xor
sbb
sub
insb
sbb
dec
jp
or
pushf
lods
imul
movzbl
push
lea
push
push
xchg
test
insl
pop
xchg
test
jg
movsl
push
mov
xchg
jg
push
adc
push
push
rclb
mov
cmp
inc
into
std
add
push
ja
ret
mov
xchg
out
dec
push
mov
popf
jb
fidivrs
jle
test
out
adc
sahf
out
lahf
push
lret
and
lods
or
stc
adc
xchg
rcr
lret
out
adc
repnz
sti
inc
dec
pop
push
add
clc
scas
push
and
push
movsl
xchg
test
incl
mov
ljmp
in
dec
pop
and
fs
xor
pop
or
fsubrl
sbbb
out
inc
sbb
push
int
pop
lcall
aaa
pop
bnd
ds
push
sub
loop
hlt
pop
xchg
test
cmpsl
mov
stos
leave
das
ficoms
sbb
cli
fucom
inc
mov
sbb
cmpsl
ljmp
sub
jbe
and
cld
jae
push
in
or
shr
pop
inc
sub
mov
mov
mov
jge
or
adc
outsl
cmp
cmp
pop
sahf
clc
mov
enter
andl
push
icebp
test
cli
inc
negb
jecxz
nop
mov
lods
sub
pop
xor
cmpsb
dec
mov
js
push
jl
mov
cmc
push
int3
or
dec
dec
inc
test
xchg
out
movsb
dec
test
out
xadd
inc
ret
shll
mov
fnstsw
jle
ret
add
push
jo
or
pushf
imulb
inc
fs
outsb
xchg
push
mov
rcrb
mov
pop
sub
sbb
js
inc
testl
mov
dec
lahf
xor
push
lock
lods
adc
fwait
adcl
test
xchg
jne
jmp
aaa
aaa
xchg
xlat
xchg
xlat
cli
out
adc
sub
and
mov
stos
sub
xor
movsl
aaa
push
lods
idivl
mov
adc
jbe
or
leave
call
xor
clc
cmp
in
sub
mov
jg
or
and
adc
js
jae
push
nop
shrb
std
push
cmp
ja
sbb
mov
inc
rcr
add
fisttpll
rcll
xlat
or
adc
stos
mov
adc
pop
popf
xor
sub
xchg
sarl
pop
out
lcall
scas
xchg
jle
mov
into
jo
movsb
popf
nop
test
xchg
mov
jbe
jle
outsb
imul
sbb
or
das
fs
jmp
mov
popf
das
pop
outsb
push
mov
cmp
mov
push
cltd
xchg
rolb
pop
in
je
mov
sbb
rolb
mov
fdivrl
stos
hlt
add
addr16
sbb
cmp
test
dec
or
jp
pop
adc
test
stc
jg
xchg
add
mov
add
inc
lds
push
in
or
mov
xchg
aaa
dec
aad
pop
ljmp
int
shll
frstor
sbb
adc
xchg
leave
clc
movsl
dec
cltd
lock
inc
je
shlb
shl
notl
into
mov
leave
scas
sbb
push
add
push
sub
fstpt
push
cmp
mov
aam
jnp
movsb
xor
add
jmp
mov
xchg
dec
sbb
sarb
adc
pop
mov
test
in
push
sbb
xchg
jmp
and
stos
jne
je
aam
shlb
mov
repnz
pop
push
xor
leave
and
shlb
cmpsl
or
pop
stc
loopne
xchg
pushf
mov
inc
push
jae
push
in
call
shl
xchg
adc
jbe
sahf
cmp
cwtl
and
cmp
dec
mov
jg
adc
push
xchg
fdiv
xchg
mov
shrl
inc
push
xlat
inc
cmpb
sub
sub
push
lcall
lret
sbb
int
or
jo
fs
push
mov
ret
je
sub
ja
pushf
and
fnstcw
jl
add
cmp
fdivs
dec
mov
jmp
popa
ljmp
es
dec
loop
jae
orl
test
insl
subb
outsb
fdivs
jecxz
and
mov
cmp
xor
aam
aas
enter
stos
and
dec
adc
sti
leave
pop
xor
es
cmpsb
cmp
bound
div
jb
std
sbb
jb
push
jb
dec
xlat
ds
jnp
mov
data16
cmp
xor
sbb
and
enter
lcall
mov
mov
xor
sbb
lods
out
or
mov
pop
push
mov
or
rcrl
jae
or
leave
cmp
adc
jbe
das
dec
rol
mov
and
ret
fnsave
imul
fmuls
shrb
mov
cld
andl
cmp
jge
lret
dec
xor
stos
pop
stos
sbb
mov
dec
es
lret
enter
mov
out
cmp
jae
fisubrs
xchg
aam
fstps
test
icebp
or
inc
cld
loope
in
or
je
daa
xor
fstpt
mov
int
inc
shll
jmp
sbb
xlat
sbb
push
push
mov
sub
cs
or
jp
pop
add
sti
aaa
xlat
fdivp
mov
inc
jne
insb
loopne
push
stos
jns
and
push
das
inc
and
hlt
cmp
aaa
pop
ud0
jecxz
lods
cmc
and
cld
lods
imul
jg
pushf
aaa
cmpsl
mov
dec
jne
repz
lret
mov
sbb
sbbb
xchg
or
and
js
cltd
sahf
faddp
iret
int3
enter
ret
cmp
pop
jns
sbb
pop
dec
jp
mov
sub
xchg
add
push
inc
add
jae
ljmp
loop
aaa
int
sti
adc
es
xor
arpl
mov
idivl
outsb
int
test
pop
xor
xchg
or
fsubs
daa
loopne
in
stos
or
inc
andl
clc
add
mov
sub
repz
xlat
inc
int3
ss
aad
adc
cmp
fisubs
leave
cmp
loope
pop
mov
xchg
fdivr
std
pop
decl
jmp
lea
repz
sub
inc
push
mov
in
out
stos
jnp
jmp
ja
sbb
inc
or
mov
enter
stos
push
in
aaa
inc
mov
push
stc
add
xchg
mov
mov
and
hlt
inc
fwait
data16
jno
xor
aad
jne
cmp
add
loope
in
push
fwait
xchg
and
pop
jae
cltd
adc
pop
divb
loop
out
push
or
shll
xor
dec
pop
jp
pop
push
out
xor
inc
ds
ja
cmp
sub
add
jne
push
das
sbb
ljmp
out
inc
in
div
lret
push
lods
pop
jmp
adc
aam
lods
es
test
adc
into
scas
adc
rcrb
xor
sub
gs
bound
cmp
inc
add
enter
cltd
imul
add
test
mov
cmpsb
test
cs
test
jo
dec
xor
push
mov
andl
cmpb
pop
std
sarb
in
lock
xor
bound
arpl
mov
pop
push
lahf
mov
pop
test
stos
addr16
stc
sbb
xchg
insl
call
pop
sahf
jmp
cltd
push
jns
clc
dec
in
dec
jbe
movsb
cmp
scas
loop
fwait
or
pop
adc
jg
add
pop
fs
mov
mov
in
cmp
sub
jge
ret
xor
push
mov
out
stos
add
inc
inc
iret
jo
daa
push
lods
jb
mov
push
and
aam
cmp
daa
lds
stc
aaa
cmpsb
fstpl
xchg
and
in
repnz
xor
sub
xchg
dec
pop
fistps
fdivrs
inc
in
jne
call
lea
xlat
mov
jbe,pt
jmp
rclb
scas
orl
sahf
repz
in
std
sbb
jge
mov
xchg
pop
xchg
push
in
mov
dec
or
push
lea
jl
sub
mov
xchg
lahf
sbb
inc
xchg
pop
inc
cmpsb
jb
jns
push
popf
xor
fdivrs
inc
mov
and
aad
std
add
cmpb
fchs
xchg
cmpsb
rclb
and
addr16
rcr
movsb
stos
popf
jae
fwait
test
pop
scas
mov
jb
cmp
cmp
mov
add
push
mov
xchg
loopne
sbbb
stos
mov
popa
cli
xor
mov
mov
dec
sub
cs
es
inc
push
mov
scas
add
sbb
imul
comiss
addr16
je
add
add
fsubp
jmp
pop
cld
jle
push
push
jle
jb
dec
popa
xchg
add
fistps
movsl
cmp
mov
xchg
test
leave
sbbl
jmp
and
clc
shlb
ljmp
aad
out
fwait
jbe
jns
jecxz
jle
dec
clc
fstl
rorl
cltd
outsl
pop
pop
sub
idiv
bound
or
add
push
ss
lods
xor
pop
pop
sbb
lahf
inc
test
in
lret
fwait
out
push
kandnw
call
and
shrl
stc
pop
inc
in
and
xchg
dec
xor
scas
or
sbb
or
push
pop
mov
jecxz
pop
cwtl
sub
hlt
adc
out
sti
jo
cmp
mov
xor
adcl
iret
js
cltd
and
push
pop
cs
mov
jb
int
sub
or
movsl
jge
clc
mov
fs
pusha
rcr
je
sahf
inc
mov
mulb
pop
push
or
jle
mov
mov
dec
xor
and
orl
rorl
mov
aad
xchg
aas
repnz
cs
sub
iret
xorb
inc
into
jae
pop
xchg
push
test
repz
in
pop
shll
rcrb
sub
cli
mov
mov
cs
jo
jl
cmpsl
adcb
mov
inc
inc
pop
pop
push
lret
and
in
jae
xchg
roll
fldt
pop
jne
out
xor
fwait
lret
test
lds
scas
jnp
push
ljmp
xchg
and
or
mov
out
jp
mov
pusha
aam
faddl
mov
jle
push
idiv
scas
jle
int3
repz
fisubs
mov
in
xor
into
fsubrs
jb
test
ss
mov
mov
mov
push
add
push
outsl
push
test
ret
dec
cmp
xchg
lock
pop
jge
outsb
mov
hlt
pop
sub
insb
daa
xor
mov
sub
test
cmp
dec
xchg
test
fnsave
mov
iret
in
cmp
xchg
add
jmp
fs
call
add
mov
int3
push
test
and
jb
fsubs
fnstsw
adc
fnop
and
or
ret
jecxz
out
push
push
movb
lea
adc
xchg
movsl
cmpsl
xor
sub
pop
jns
inc
sbb
es
mov
fbld
bound
shl
mull
xchg
ficoms
fs
adc
scas
push
sub
inc
je
mov
cmp
dec
mov
cmpsb
push
jmp
cmp
and
lock
xor
jne
test
mov
pop
cld
inc
fcomp
ss
add
pop
sarb
imulb
jns
and
push
dec
cmpsl
sbb
enter
lahf
js,pn
ret
nop
cld
ljmp
jnp
pop
frstor
inc
ret
int
mov
int
cmp
mov
jb
jmp
mov
in
add
testb
push
shrl
repnz
push
fsub
push
cmp
jbe
adc
adc
push
cmpsb
lods
xor
es
jecxz
je
jmp
cmp
dec
xchg
rorb
inc
or
pop
bnd
push
movsb
sub
out
and
xchg
push
pop
nop
cs
lahf
mov
pop
mov
xor
cmpsb
jbe
xor
cmp
xor
leave
add
add
outsb
mov
mov
shlb
in
adc
push
divl
and
jno
cmp
test
out
movsb
mov
lea
sub
fsubrs
push
lcall
lret
and
cmp
aad
fsub
insl
sbb
rcrl
stos
aam
lcall
adc
xor
movsb
ljmp
lret
inc
repz
jmp
dec
mov
loop
cmp
cwtl
push
sbb
add
cld
fbld
mov
dec
nop
ljmp
jmp
loopne
dec
sub
pop
mov
push
test
test
iret
sbb
jge
mov
loope
push
xor
push
mov
mov
mov
rolb
xor
sti
or
or
test
lret
and
dec
add
hlt
xchg
and
xor
jl
sbb
pop
rep
add
jl
mov
inc
jp
data16
scas
pop
daa
cld
cmp
testl
in
jnp
pop
push
adc
xorb
out
mov
mov
and
lahf
mov
pushf
pop
adc
jae
or
std
inc
cmp
nop
push
lods
mov
shrl
fidivrs
cli
cmp
mov
xchg
loope
jo
xchg
push
jb
xlat
or
mov
in
stos
in
jo
outsb
sub
sbb
stos
push
std
mov
outsl
cmc
jg
mov
jae
xor
outsb
hlt
or
mov
mov
push
push
jmp
hlt
add
rolb
pushf
add
pop
iret
incl
nop
jge
mov
cmp
enter
fcmovnb
jns
lret
loop
lcall
mov
mov
ss
add
repz
out
lods
mov
fwait
sbb
cmpl
jne
mov
subl
mov
or
popa
add
imul
enter
data16
xchg
inc
gs
das
hlt
or
lods
call
sahf
sub
cld
or
cmp
push
mov
or
out
cmp
ret
mov
fsubrs
pop
mov
daa
jp
inc
and
sti
aad
and
jo
repnz
icebp
jne
ljmp
and
pop
sahf
les
enter
add
dec
and
sti
leave
pop
aam
ret
jle
aas
popw
cmp
push
fiadds
xchg
fidivs
xor
cs
out
sub
sub
pop
in
xor
pushf
jne
fsubrs
sbb
lds
pop
test
xlat
jo
negl
fimuls
fmull
ficoms
inc
xor
push
pushf
inc
stos
xchg
addl
jb
add
sbb
xor
mov
outsb
loop
mov
inc
test
in
orb
movsl
pop
stc
pop
sub
movsl
dec
out
jo
jae
lods
fists
rorl
push
pop
mov
sub
pop
sbb
loop
xlat
das
mov
xor
dec
inc
or
sbb
xchg
pushf
push
lds
nop
ja
push
xchg
insl
sti
outsl
lret
aad
ficoms
shll
lods
cmpsb
adc
mov
jbe
dec
adc
add
jnp
jp
in
push
rcrl
leave
push
lods
xchg
and
inc
push
pop
cmp
jne
or
test
lods
pop
rorb
sbb
adc
mov
adc
xchg
mov
shll
push
adc
push
mov
test
arpl
dec
lret
insl
faddp
sarb
mov
test
call
fistps
dec
sub
mov
dec
add
and
out
stc
js
hlt
jp
or
mov
cmp
dec
aaa
ss
mov
mov
or
pop
fwait
std
xor
lahf
mov
enter
popf
pop
pop
xor
mov
sub
fidivrs
mov
test
or
lea
push
sub
gs
sarl
test
push
in
filds
shl
scas
hlt
gs
mov
out
mov
mov
push
mov
mov
and
aad
ja
inc
add
flds
into
rep
lret
int
call
adc
mov
fdivrp
pusha
andl
pop
xchg
sbb
mov
insl
xchg
stc
mov
sbb
notb
pop
icebp
sub
xor
pop
repz
daa
or
fnstcw
pop
mov
push
xor
xlat
push
mov
repz
push
add
adc
mov
jecxz
shr
jo
cmp
mov
cli
shrl
mov
mov
jne
mov
or
mov
cmp
xorb
cmp
mov
pop
sahf
or
cmp
push
rorl
mov
or
ds
aaa
mov
aaa
mov
sub
cmp
or
push
or
outsl
and
jmp
push
mov
dec
ljmp
loope
dec
test
sub
out
les
sub
mov
int
push
pop
jge
mov
jmp
cmpsb
fwait
in
jb
mov
in
dec
sbb
or
inc
mov
out
pop
xchg
or
inc
in
lret
push
mov
add
test
mov
mov
or
sub
fsubrp
cmp
aaa
sbb
push
aam
aas
sti
inc
call
shlb
xor
sub
movsb
sub
jae
shlb
ret
jge
out
sub
out
pop
add
ds
das
popf
and
xorl
sarb
and
lret
lcall
test
mov
xor
mov
sbbl
loopne
cmpsb
and
or
aam
jae
das
xor
jo
adc
fcoml
shll
mov
push
inc
mov
xchg
loop
mov
loopne
mov
mov
mov
subb
or
mov
mov
sub
lock
and
push
inc
sbb
pop
mov
push
dec
loop
fstl
inc
int3
sti
and
pop
cmp
cmp
and
fcomi
fbld
mov
xchg
lret
popf
adc
or
in
jp
mov
xor
and
icebp
in
sbb
dec
leave
test
nop
in
and
arpl
lock
std
mov
xor
lea
in
test
push
outsl
mov
fmull
shl
mov
xor
loop
mov
xor
mov
mov
mov
mov
dec
int3
dec
lret
dec
ror
inc
mov
add
xchg
and
jne
pop
fcmovne
dec
data16
fldcw
sub
cmp
lods
fcmovnbe
mov
mov
push
je
and
jge
pop
cmp
fiadds
jo
add
nop
mov
jae
inc
mov
in
mov
popf
repnz
mov
push
scas
and
xchg
jg
hlt
pushf
scas
lret
mov
sbb
jecxz
mov
adc
out
pop
aaa
mov
outsb
jbe
dec
and
push
push
sbb
fwait
mov
aad
ret
test
shrl
xchg
roll
push
out
adc
cmp
mull
mov
das
xor
jg
out
inc
push
loop
out
or
sub
push
sbb
jl
aam
lret
pop
movsl
daa
stos
mov
insl
jge
xor
leave
addl
xor
push
xor
sbb
mov
jl
pop
and
jnp
cmp
fcmovne
inc
popf
fisubs
pop
jmp
sbb
xor
and
xchg
jmp
pop
aam
cld
mov
mov
xor
jmp
ds
in
adc
add
jno
mov
jnp
out
sbb
pushf
jecxz
adc
xchg
and
or
xchg
std
fdivrs
sahf
rdtsc
negl
xchg
aam
in
mov
push
test
sub
or
mov
fmuls
int
fdivr
lret
jg
arpl
push
mov
pop
ljmp
jmp
mov
bound
stos
in
xchg
add
cltd
or
test
jle
int
xchg
push
mov
rolb
into
aaa
lea
mov
jne
add
mov
xchg
mov
nop
outsb
stos
pop
xor
jae
mov
cmp
mov
fwait
test
outsl
jns
add
lods
mov
add
clc
inc
pop
jecxz
out
xchg
and
andb
and
psrad
cmp
leave
jnp
ds
jmp
out
or
insl
dec
nop
or
sahf
adc
jp
lret
into
int
fmulp
fadds
or
mov
subl
lea
repz
mov
leave
out
xchg
dec
and
ds
nop
dec
cmpsl
cmp
fldenv
add
lcall
mov
ja
xlat
rorb
stos
dec
sti
push
xor
xor
cmp
dec
jg
imul
jp
fiaddl
in
adc
mov
fucomp
sti
xabort
dec
test
xor
add
aam
mov
adc
pushf
rclb
push
or
pop
jae
ja
out
lcall
add
cmp
mov
out
lea
outsl
add
cld
rcll
ds
pop
fwait
loope
in
jge
jmp
idivb
xchg
out
jae
pop
push
cmp
test
cmp
mov
data16
std
add
jb
xchg
xchg
fsubl
sbb
mov
jbe
xor
imul
insl
sub
aad
dec
mov
data16
jo
mov
add
out
mov
xchg
ficoms
xor
or
mov
mov
cmp
or
stos
mov
cmpb
iret
enter
dec
pop
aaa
jg
jns
dec
data16
repz
mov
roll
sub
pop
sti
push
inc
repnz
add
mov
pop
repz
in
mov
outsb
ret
scas
pusha
loope
pushf
jo
cmp
adc
cld
stc
pusha
or
or
iret
dec
and
sbb
pop
xchg
pop
push
pop
inc
jns
pop
das
ljmp
mov
call
shll
test
sbb
js
or
test
jp
ret
jmp
inc
push
iret
push
mov
dec
adc
xchg
dec
and
iret
popf
mov
xor
aam
negl
push
out
dec
jo
xchg
js
xchg
pop
lock
movsb
add
mov
ret
dec
lcall
inc
pop
sbb
scas
sub
dec
clts
les
test
out
rcl
out
testb
filds
std
mov
push
jae
imul
iret
lock
shll
mov
jmp
push
pop
out
shl
jg
mov
lret
leave
sbb
hlt
inc
xchg
jmp
lret
dec
jnp
sbb
in
dec
mov
push
pop
add
xchg
pop
lret
test
mov
arpl
test
dec
and
and
repz
or
out
ss
sbb
bound
add
popf
xchg
pop
scas
xchg
adc
mov
push
adc
add
maxps
cmp
arpl
cmp
daa
or
lds
inc
adc
aam
test
mov
mov
sub
push
mov
fimuls
cmc
call
or
popa
or
jge
repz
cmp
mov
fmul
sub
sbb
inc
sbb
stc
jmp
dec
mov
mov
mov
mov
call
push
xchg
out
mov
mov
push
mov
outsl
pop
gs
adc
stos
dec
aaa
imul
fnstcw
movsb
sub
mov
cmp
insb
xor
sub
es
loopne
jae
or
movsb
xchg
popf
outsl
icebp
test
mov
mov
lret
sti
out
or
test
lods
orb
int3
orb
pop
sbb
cvtdq2ps
inc
mov
adc
and
jnp
mov
jmp
dec
xchg
repz
push
or
jp
negl
xchg
scas
adc
sub
ljmp
jne
push
js
stos
jecxz
pop
xor
ja
pop
inc
fildl
outsb
fs
lods
jecxz
imul
fisttps
repnz
das
sbb
xor
dec
mov
sbb
adc
lock
out
shlb
inc
mov
test
roll
pop
mov
dec
adc
mov
cwtl
and
mov
ss
leave
push
test
sbb
data16
idivl
rcr
mov
sbb
das
sub
addr16
xchg
popa
cmp
ljmp
cmpsl
and
and
lahf
dec
icebp
mov
jns
dec
inc
jp
incl
lret
fsubs
cld
icebp
pop
mov
mov
test
push
je
mov
adc
int3
rorb
inc
pop
jnp
fstps
ret
rclb
or
and
push
jmp
test
arpl
adcl
xchg
cmp
sub
and
dec
xlat
xor
adc
dec
jae
mov
or
sub
sub
sub
pop
and
xor
xor
and
ss
das
cmp
pop
jp
mov
lods
outsl
rorb
std
dec
xchg
xchg
push
das
cmp
sub
imul
and
aam
ret
add
jmp
nop
dec
mov
pusha
cltd
mov
aas
clc
pop
pop
mov
jnp
inc
daa
mov
scas
sub
xor
daa
cmpsl
mov
push
push
sti
inc
call
adc
rcl
adc
jae
fwait
cli
mov
and
lcall
sub
pop
test
arpl
es
mov
cmc
cmp
stos
lahf
lret
dec
lea
je
add
subb
rclb
and
out
mov
cmpsl
fsts
repz
int3
loope
xor
xchg
nop
xchg
and
dec
jge
das
jno
adc
dec
int
xor
cmp
test
mov
sub
cmp
leave
jns
sbb
jae
pop
inc
mov
adc
loope
es
int
and
jae
lcall
and
scas
jo
js
dec
xor
rcrb
and
or
std
cmp
add
rorl
sbb
sbb
jmp
gs
mov
fs
ds
xor
lret
inc
sbb
xorb
pop
in
enter
dec
or
cltd
mov
sbb
mov
xchg
or
out
adc
mov
adc
imul
call
jl
stos
jae
lcall
into
jnp
lahf
sub
jp
add
insb
ja
pop
cmc
mov
xchg
into
inc
dec
test
imul
mov
pop
or
push
dec
xchg
pop
pop
sub
lods
or
xor
in
dec
enter
stos
fdivrs
sub
xor
mov
or
push
xor
xchg
insb
sbbl
or
lret
out
std
sub
aaa
jbe
int
jge
cmp
sahf
or
popa
xchg
iret
rsqrtps
lcall
dec
inc
ljmp
lret
stc
mov
push
call
jecxz
imul
jo
int3
cmpsl
or
push
jg
mov
mov
cmp
shl
repz
in
and
mov
dec
fs
repz
arpl
push
lcall
sub
jne
jecxz
push
adc
shll
cld
cmpsl
mov
insb
sahf
and
push
in
int
cmp
or
mov
sbb
test
jp
out
and
and
xchg
les
out
and
nop
idiv
pop
mov
dec
add
mov
dec
shlb
adc
add
mov
je
and
scas
dec
aaa
jp
std
push
inc
les
inc
jecxz
loopne
jp
mov
mov
outsl
loopne
shrb
repnz
push
dec
rcrb
clc
sbb
xchg
add
add
lret
pop
sub
call
cmpsl
fistpll
jmp
push
pop
das
setnp
sbb
in
mov
jbe
mov
mov
mov
fiadds
dec
sti
in
cmp
xchg
in
dec
in
cmp
xchg
cmpsb
or
dec
mov
stos
jb
iret
xor
push
sub
sub
mov
add
cld
dec
je
push
rclb
xchg
int
in
adc
inc
mov
adc
fistpl
jl
xchg
cld
faddl
jbe
push
vpshaw
add
cmpsl
divb
insl
pop
lea
mov
jno,pt
mov
cmpsl
loope
repnz
repnz
in
fisttps
pop
add
jge
loopne
cmpsl
vunpckhps
pop
loopne
fimuls
data16
ljmp
das
arpl
idivb
mov
dec
insl
mov
insb
or
jae
es
push
mov
ds
push
xchg
push
fs
mov
mov
bound
push
jecxz
lret
push
rorb
cmpsb
scas
adc
dec
xlat
push
xor
cmp
mov
mov
inc
mov
ja
jbe
xor
jbe
inc
iret
xchg
inc
data16
ret
jb
outsl
xchg
mov
aad
dec
mov
shr
sub
jns
jmp
fs
daa
dec
xor
push
mov
jl
adc
sarl
pop
dec
mov
test
push
je
adc
pushf
mov
xor
pop
loop
fs
push
test
hlt
xchg
push
pop
mov
cwtl
loope
stos
xchg
arpl
or
outsb
cmc
inc
pop
inc
jge
mov
cmpsl
ds
pop
pop
in
dec
mov
cmp
into
adc
cld
push
out
hlt
dec
push
and
loop
test
negb
adc
repz
push
iret
out
cli
cld
pop
xchg
cs
lret
adc
ds
adc
xor
in
sbb
push
iret
mov
dec
or
out
icebp
sbb
dec
xchg
push
jg
xor
imul
push
jae,pt
into
mov
inc
rorb
cwtl
cmp
leave
fcmovnu
testl
mov
ds
int3
cli
in
in
stos
xor
aaa
hlt
mov
sbb
jmp
hlt
test
mov
inc
insl
test
in
int
in
xchg
sbbb
ror
fistps
in
sbb
lret
add
loopne
and
rcrb
iret
sub
orl
mov
movsb
pop
mov
and
iret
cmpsb
mov
inc
ficoms
xor
push
xor
lret
pushf
jp
xor
inc
push
xor
cwtl
outsb
fwait
mov
mov
mov
outsl
adc
add
xorb
out
xor
jno
insb
xor
aad
or
sbbl
daa
loope
mov
mov
adc
inc
pop
pop
pop
mov
mov
xlat
mov
xchg
adc
clc
ja
sbb
add
or
push
arpl
mov
jb
out
fwait
insb
and
mov
xor
call
xchg
fiaddl
lahf
and
ret
jp
ds
dec
pop
cmp
and
pop
xchg
cwtl
and
and
pop
jnp
jp
mov
call
or
inc
and
into
pop
popa
das
mov
jmp
or
stc
insl
dec
dec
inc
xor
outsl
jmp
push
push
add
sahf
sub
js
and
test
jbe
gs
xor
and
stc
sub
data16
adc
inc
mov
loope
jl
imul
or
ret
jb
mov
gs
xchg
jmp
cli
pop
ja
loopne,pn
push
sahf
jbe
stos
sbb
push
lret
pop
inc
mov
mov
into
jmp
pop
test
xchg
xchg
xchg
jb
dec
xor
mov
hlt
push
sti
xchg
xor
aaa
xchg
dec
aaa
aaa
pop
mov
inc
sbb
das
in
inc
les
scas
fwait
pop
and
push
imul
inc
push
lret
and
jl
cmp
pop
aad
repz
scas
adc
stc
lock
and
outsb
and
adc
xchg
mov
inc
ljmp
cwtl
movsl
sbb
andl
popa
add
and
xchg
mov
nop
mov
pop
mov
arpl
js
les
pop
push
and
xor
mov
clc
inc
lods
push
mov
cld
repz
int3
dec
rol
mov
call
scas
roll
add
cmp
dec
ja
loop
xor
fld
sbb
je
inc
fdivs
mov
adc
stos
cmpb
xchg
int
lods
arpl
pop
fsubrs
or
stos
fisubrl
faddp
push
stos
xor
or
cmpsl
cmp
push
xor
cld
sbbb
std
mov
adc
jmp
fwait
out
mov
push
xor
inc
ret
xor
pop
les
cli
enter
out
and
clc
lea
insl
mov
popf
xor
cltd
sti
imul
leave
ss
inc
lret
jg
lods
ja
mov
adc
push
and
lods
jnp
cmp
push
mov
or
sbbb
lahf
call
and
sub
std
movsb
nop
add
inc
jmp
cmp
call
xchg
in
popa
cmp
pop
adc
add
rdtsc
stos
add
jo
lret
rcl
cmp
test
jmp
jns
pop
pop
roll
jnp
inc
pop
xchg
xor
jo
stos
imull
sbb
or
ret
popf
xchg
sbb
sar
adc
sub
sub
scas
test
adc
dec
mov
or
into
out
js
mov
ja
cmp
inc
dec
adcl
clc
mov
add
popa
lods
test
lods
jecxz
pop
and
dec
fidivrl
xchg
cmp
repz
jmp
push
mov
out
xor
shll
xlat
imul
leave
dec
shrl
adcl
fldcw
insb
rolb
aas
cs
outsl
xchg
js
popa
push
int
sbb
out
enter
out
lock
enter
adc
and
pop
jno
ret
scas
popa
adc
xor
sbb
outsl
lock
pop
jb
cmp
movl
loope
or
lods
mov
or
sub
call
dec
ss
pusha
js
pop
inc
incb
pop
int3
xchg
dec
insl
pop
lcall
push
bound
cmp
cs
push
loop
xchg
xchg
aam
rclb
imul
dec
in
push
imul
xchg
lods
sub
pop
lret
int
int
mov
push
cld
and
dec
jmp
mov
popf
jnp
or
push
iret
and
fdivrp
inc
imul
fmul
push
aaa
inc
test
mov
jns
imul
les
imul
bnd
addb
jne
xor
mov
xchg
inc
mov
mov
divb
xor
pop
in
ss
aad
hlt
cmp
adc
mov
jo
cs
and
loopne
push
mov
and
add
rorl
sbb
inc
pop
xchg
mov
mull
or
stos
in
adcl
jns
cmpsb
push
aas
adc
xchg
cltd
or
ret
and
stos
sbb
xchg
inc
add
mov
fs
imul
insb
clc
mov
jge
enter
xchg
repnz
push
stos
and
mov
mov
aas
data16
xlat
and
jl
cmpsl
dec
or
je
outsl
icebp
and
mov
rorb
push
or
movsb
dec
lods
and
and
pop
jge
pop
push
xchg
ja
jmp
scas
adc
sub
pop
cmpsl
inc
mov
fdivrp
xlat
repz
daa
loope
adc
testl
mov
stos
filds
test
and
stos
push
shlb
mov
frstor
or
cltd
mov
stos
adc
mov
fnstcw
lret
daa
jmp
add
cltd
and
sub
push
pusha
repz
mov
push
xorl
aas
cmp
into
adc
jae
sti
jae
cmp
adc
dec
lahf
sarb
push
cmpsl
insb
subl
mov
addl
mov
mov
jne
cmp
pop
scas
add
jno
jle
sysenter
mov
cmp
lock
inc
cmp
pop
add
rorb
fnsave
das
mov
or
data16
pop
push
imul
or
repnz
repz
loopne
sbb
ds
sub
mov
push
dec
xor
fidivrs
lea
mov
mov
or
pop
sub
xchg
adc
data16
push
adc
repz
cmp
add
adc
sbb
inc
dec
mov
bound
adc
inc
mov
push
das
in
jmp
int
adc
adc
pushf
inc
or
es
fwait
subb
les
push
inc
inc
sti
jb
cmp
dec
outsb
xchg
int3
inc
mov
shrb
int
push
mov
inc
xchg
inc
pop
fiaddl
jo
insl
in
into
pushf
xchg
mov
test
test
fsubs
mov
and
add
lret
jle
mov
sbb
push
pop
pushf
push
mov
jg
mov
das
sub
orl
stc
cwtl
or
adc
adc
rcr
sti
js
pop
imul
shlb
fnstenv
aad
lods
mov
jmp
jno
mov
es
mov
jne
hlt
cmp
nop
aad
std
pop
sar
inc
pop
or
fisttps
movsb
rorl
repz
inc
les
gs
fldl2t
ljmp
out
xchg
out
ret
pop
dec
mov
pushf
mov
cmp
in
in
mov
xchg
stos
inc
or
jne
out
jns
jp
add
or
jg
mov
insb
or
and
inc
xor
adc
push
push
pop
jecxz
fdivrs
test
adc
fs
push
mov
mov
iret
adc
fisubrl
popf
dec
jg
lods
ss
scas
cli
lcall
pop
mov
dec
enter
shlb
aas
jno
in
dec
and
adc
push
nop
dec
scas
outsl
xor
and
das
sbb
mov
aaa
not
mov
xchg
lods
fsts
in
cmp
data16
mov
inc
pusha
and
popf
call
and
sbb
cmp
dec
inc
add
push
jg
mov
arpl
push
dec
fldcw
ret
push
lock
loop
int3
fisubl
incb
push
aam
ds
out
and
push
jb
or
addr16
jbe
adc
sub
jb
stos
pop
cmpsb
jg
and
sti
cmc
pop
mov
les
add
shrb
cwtl
jnp
shll
rcll
mov
adc
add
xor
add
mov
iret
leave
aad
popf
lret
movsl
jle
data16
cmpsl
pop
mov
rclb
push
in
and
push
xor
sub
cwtl
and
xor
lret
sbb
jno
ljmp
or
lahf
mov
pop
lgs
clc
cltd
lods
xor
cmp
xlat
sbb
shlb
cmp
push
jg
and
mov
mov
aam
rol
in
out
stos
frstor
and
fwait
xor
inc
pop
sub
inc
pop
pop
jecxz
ret
lds
mov
push
mov
jnp
cmp
dec
or
cmp
xchg
mov
in
pop
pop
popa
mov
xchg
subl
lock
or
cmp
xchg
xchg
lock
sub
sbb
or
fimull
pop
inc
jno
and
sub
mov
ljmp
push
push
jl
gs
fsubrl
outsb
pop
xchg
jb
push
lods
xor
movl
and
jge
in
filds
sti
rcr
sbb
ja
subb
mov
sub
aas
insb
jno
cld
add
les
icebp
sarl
sub
mov
out
arpl
lock
inc
mov
mov
or
jl
lock
pop
cmp
push
mov
stos
and
ficomps
cltd
or
lret
mov
sti
lahf
lret
aas
mov
add
repz
mov
jae
sahf
ret
xchg
sti
leave
les
jb
sti
in
jnp
mov
jmp
fstpl
xchg
ret
jecxz
push
add
jne
insl
and
fistpl
dec
push
xor
and
shlb
and
mov
dec
cmp
loopne
add
ja
mov
xchg
cmp
cmc
xchg
adc
das
mov
pop
xchg
sub
adc
lea
call
fsts
les
fcmovb
adcl
sahf
repnz
cmpsl
mov
andnpd
and
mov
sub
push
mov
addr16
jbe
cmp
cmp
cmpsl
cmp
dec
sbb
mov
xchg
popf
xor
lods
ret
mov
push
sub
pop
and
inc
test
inc
pop
fwait
cmp
int
mov
pop
xchg
adc
xor
pop
test
ss
inc
outsl
xchg
aas
xchg
setge
xor
xor
fdivl
push
xchg
stos
in
push
nop
insl
dec
shr
arpl
push
test
or
es
shlb
imul
mov
mov
pushf
jecxz
shl
pop
or
mov
repz
add
dec
movsl
dec
rcl
sbb
mov
dec
mov
rcrl
sti
outsl
in
int
push
not
fdivrs
adc
xor
shl
mov
insb
jl
xchg
mov
adc
ja
lcall
xchg
dec
or
int3
xchg
or
and
cmp
push
jg
ss
jmp
das
sbb
add
mov
dec
mov
shl
or
adc
mov
cwtl
pop
mov
jg
push
push
pusha
dec
sahf
cld
div
push
xlat
xchg
xor
bound
adc
repnz
cmp
ret
pop
adc
jb
sbb
lret
mov
cmp
test
popf
out
lea
inc
aam
cmpsl
pushf
std
push
cwtl
movsl
cmp
add
scas
mov
cld
sbb
out
ret
jb
mov
testl
push
inc
adc
imul
pop
add
inc
shll
dec
dec
call
push
outsl
push
jl
rcrl
xchg
push
cltd
pop
and
ror
hlt
andb
jne
lcall
ljmp
cltd
cmpsl
sub
mov
sbb
in
pop
mov
loop
xor
pushf
es
xor
in
fists
xor
test
jno
mov
call
sbb
outsb
lods
mov
aaa
lds
inc
stc
packssdw
insl
push
outsb
js
imul
dec
mov
mov
int3
adc
or
adc
fldenv
xchg
iret
mov
in
sub
adc
push
push
cltd
mov
addb
orl
push
mov
lea
xor
ror
stc
jle
insb
add
mov
cltd
ficomps
gs
loopne
cwtl
aad
mov
mov
jns
cmp
imul
cmc
push
outsl
nop
in
or
mov
push
iret
sub
in
loope
xchg
xchg
add
xchg
sub
jg
mov
xor
pop
cli
dec
popf
ljmp
dec
jne
mov
cltd
jns
fstpl
add
and
aam
int
inc
cmp
pop
pop
inc
push
ja
in
xor
in
add
stc
cmp
jle
mov
dec
sbb
push
pop
sbb
jle
loope
cli
xor
mov
fucomp
clc
xchg
lcall
sarb
shrl
out
mov
jge
add
push
pop
push
adc
aam
jecxz
sbb
fistps
or
jb
imul
into
xchg
pop
pop
cmp
scas
into
adc
and
aad
loope
imul
sbbb
loope
mov
add
pusha
incl
rcrl
or
mov
mov
or
push
dec
cs
cmp
fs
lahf
or
sbbb
or
movsb
stc
out
push
stos
ficomps
andnps
fsts
xchg
jle
loope
scas
shrb
and
cmp
jg
jns
rclb
and
and
inc
pop
inc
adc
clc
xchg
pop
bound
sub
sbb
das
ret
inc
xor
mov
insl
xbegin
mov
clc
cmp
mov
and
add
dec
movsl
push
stc
out
idivl
sub
ss
adc
lcall
cltd
cmp
xchg
xor
mov
cmp
xchg
adc
hlt
sub
xchg
inc
xor
cwtl
xor
adc
mov
dec
or
jns
pop
cmpsl
push
data16
les
adc
dec
ljmp
dec
inc
mov
pop
mov
in
movsl
arpl
outsl
xlat
in
test
mov
mov
inc
sub
xchg
and
leave
scas
push
lret
inc
mov
bnd
lcall
fidivl
test
inc
inc
imul
out
xor
movsl
fldl
aaa
pop
aad
iret
testl
outsb
pop
mov
clc
adc
jge
xchg
lds
xchg
in
inc
clc
mov
adc
fsubrs
out
adc
pop
or
in
mov
testl
xor
sbb
aad
push
sub
bound
pop
xchg
mov
inc
inc
mov
in
mov
mov
xchg
fxch
mov
cs
and
ret
xlat
jno
imul
lods
in
xchg
in
push
sbb
push
xor
in
cmpsl
push
aam
cli
repz
mov
aas
bound
inc
xor
decb
cltd
out
popf
or
rol
ja
add
push
cli
xor
clc
mov
xor
leave
jns
mov
fildl
ret
je
cli
aam
mov
insl
cmpsl
ds
aas
jo
pop
xor
icebp
push
pop
arpl
mov
mov
xor
ffree
mov
scas
mov
imul
rclb
imul
mull
add
mov
lret
xlat
test
xchg
lods
roll
insb
std
inc
test
inc
mov
xchg
nop
sahf
mov
sbbb
push
test
por
cltd
jecxz
ret
push
jg
lea
inc
or
stos
insb
pop
cwtl
add
fcoms
outsl
mov
jecxz
bound
int3
pop
es
cltd
ja
inc
lcall
pop
loopne
cmpsl
imul
nop
pop
and
icebp
movsl
scas
push
push
stos
cli
push
jnp
sub
mov
cmc
push
mov
lcall
popa
inc
mov
ljmp
pushf
sahf
insl
sarl
jp
fwait
lret
mov
fnstenv
into
mov
loope
jbe
mov
jne
mov
push
insb
sbbl
jl
fimull
jmp
mov
inc
lds
in
js
rclb
cmp
pusha
push
in
adc
mov
dec
sbb
sub
sbb
mov
addl
push
in
inc
xchg
pop
ja
aam
loope
push
call
jmp
xor
pop
movsl
adc
xchg
jge
into
fidivrl
cs
lock
push
pusha
mov
mov
scas
sbb
dec
adc
int3
cmp
inc
jno
push
xchg
mov
std
test
pop
rorb
push
cmpsl
pop
xchg
sub
cmp
pushf
ret
fisubrs
into
mov
pop
rcll
jecxz
jge
sub
out
outsl
ja
jae
sbb
ja
or
sub
fbld
push
add
jl
or
stc
pop
and
pop
nop
xlat
lret
lcall
push
nop
imul
mov
cli
fs
dec
js
adc
fadd
xchg
adc
cmp
push
push
nop
stos
inc
pop
js
jb
js
filds
add
sbb
shrl
push
test
popf
aaa
or
xor
xor
fnsave
xlat
out
nop
mov
cmp
jge
cs
outsl
mov
cmp
jnp
cli
shll
push
lahf
mov
aad
or
pop
es
out
scas
push
mov
add
scas
xchg
adc
pop
jge
xchg
sub
pusha
jmp
test
lock
dec
inc
sbb
dec
outsb
inc
jnp
mov
sub
stos
mov
dec
stos
loop
push
ds
xor
and
push
dec
pusha
mov
daa
movsl
xlat
push
cs
lds
mov
jge
dec
cmp
pop
cmp
inc
movsl
aas
roll
xor
sahf
adc
lea
jo
aaa
xchg
xlat
stos
dec
outsb
mov
xchg
dec
push
into
lea
push
adc
push
repnz
leave
cmp
push
adc
dec
inc
cs
dec
roll
or
inc
fdiv
lds
call
je
pop
in
test
or
xor
cld
dec
pop
cli
mov
mov
test
pop
mov
test
in
lret
and
mov
std
cs
ret
inc
jle
repnz
in
dec
sahf
inc
pop
push
push
or
outsb
xor
out
scas
cmp
xchg
xchg
popf
mov
cmp
das
dec
mov
lds
dec
sbb
dec
imul
mov
popa
adc
aad
fs
nop
jno
fistl
jecxz
mov
xor
fs
lret
sub
outsb
ljmp
cmp
mov
sub
dec
or
cmp
adc
cwtl
int
es
arpl
xchg
mov
xor
and
sub
daa
lret
xchg
sbb
pop
lahf
hlt
xor
popf
mov
xchg
imul
testb
xchg
out
popf
jmp
jmp
inc
lea
sbb
sti
icebp
lcall
push
addb
lods
add
push
mov
lods
mov
dec
push
fwait
mov
xchg
pop
inc
cmp
mov
jae
loopne
lahf
les
outsl
inc
sub
push
ss
xchg
repz
fstpt
lcall
int3
cmp
mov
arpl
adcb
neg
out
idivl
outsb
scas
outsb
frstor
jne
cmpsb
inc
fildl
push
aam
outsl
mov
sub
and
cmp
mov
test
push
xor
jmp
stos
hlt
ja
hlt
adc
js
addr16
cmp
pop
pop
xor
loope
cld
xchg
xchg
out
sbb
jae
mov
mov
xchg
scas
jne
ss
cmpb
pop
push
shrb
loope
je
dec
nop
push
sub
xchg
or
lcall
idivb
pop
cmpsl
lret
inc
pop
jnp
or
xor
push
xchg
cmp
xchg
add
arpl
int3
fldl
popf
imul
jmp
in
out
inc
cmp
movsl
xchg
inc
out
lock
mov
cmp
idivb
sbb
pop
push
cli
insl
shrl
xchg
arpl
incb
push
jo
jne
adc
loopne
jg
aaa
sub
mov
imul
mov
outsb
popf
into
xchg
fs
fs
push
inc
lahf
std
jg
lock
daa
inc
stos
or
cmpl
movaps
fwait
outsl
stc
push
and
lret
cmpsl
aaa
jb
inc
pop
movsl
push
out
mov
dec
pop
mov
xor
dec
cld
pop
aas
xor
in
jle
jge
sbb
mov
and
mov
cmpsl
ret
sti
xchg
insb
sti
mov
sbb
and
push
sub
enter
mov
mov
xor
and
jno
pop
lods
inc
mov
dec
mov
xor
xlat
out
and
mov
push
and
jp
push
outsl
cwtl
scas
mov
je
bound
push
inc
jge
ja
pop
fbstp
test
xchg
xchg
mov
ret
loopne
js
fcmovb
xor
jle
mov
out
pop
pop
push
or
lret
roll
aad
adcl
jnp
arpl
push
mov
mov
ret
mov
mulb
mov
aas
xor
sbb
shrb
push
int3
or
add
stos
mov
movsl
jbe
and
aad
mov
fdivs
lds
les
rolb
nop
mov
outsl
lcall
and
loop
insb
push
sub
mov
lods
inc
movsl
fstpl
dec
xchg
mov
mov
adc
sub
push
je
xor
ret
jnp
pop
pop
insb
jge
push
cwtl
dec
inc
out
xor
adc
push
sub
dec
jmp
pop
data16
ret
fistl
test
jge
mov
aas
das
mov
clc
daa
stc
sub
stos
or
xchg
mov
add
cwtl
or
mov
add
scas
movsl
cmpsl
data16
mov
shlb
push
mov
cmpsb
adc
jo
dec
mov
adc
outsl
mov
push
movsl
sub
rorb
stos
mov
adcl
fwait
imul
cli
xchg
lcall
mov
inc
or
pop
sub
mov
into
sub
add
fidivs
out
pop
fsubs
xchg
and
mov
jae
addb
pop
ret
ret
adc
sub
shlb
iret
xchg
bound
jl
push
movsl
fistpl
inc
jno
sub
or
mov
jmp
push
cmp
arpl
cmp
pop
aam
xchg
scas
xor
and
test
test
out
push
and
out
popf
test
or
jge
push
add
xor
inc
cld
lret
mov
pushf
int
xchg
xlat
leave
inc
iret
adc
lds
popa
lock
int
push
sbb
fcomps
rcr
adc
lock
std
jg
and
xor
mov
push
outsb
scas
or
pop
xor
std
jle
or
imul
dec
lret
flds
stos
dec
dec
xor
or
aad
leave
je
push
enter
in
je
add
sbb
mov
mov
xor
inc
mov
sti
in
lret
mov
add
jae
je
xor
fbstp
cmp
stos
mov
xor
pop
leave
in
push
push
xchg
leave
sub
loop
enter
mov
pop
cmp
sbb
test
xchg
push
mov
or
mov
rclb
sbb
mov
outsl
or
mov
inc
loop
fcompl
popa
push
dec
mov
xchg
out
lods
out
shr
xor
rcll
mov
push
xchg
les
xchg
jp
fst
or
push
inc
ret
cmp
jle
aad
fwait
jo
inc
xchg
push
pop
pop
mov
lods
cmp
add
jge
rorl
adc
stc
push
sbb
outsl
push
fstl
test
in
mov
lahf
push
push
int
idiv
mov
push
dec
jo
sti
leave
dec
andb
sub
ret
inc
addr16
sarb
pop
shlb
stos
sbb
mov
aas
or
dec
lcallw
cmp
jne
fdivrs
dec
shll
xor
mov
scas
in
dec
xor
add
in
call
cmpsl
and
add
lods
repnz
jmp
loope
jns
out
outsl
xor
inc
cmp
leave
jo
dec
movsl
or
repz
shl
loopne
pop
dec
js
mov
jmp
push
in
dec
dec
pop
pushf
scas
into
or
pop
ret
pop
aam
pop
inc
pop
pop
mov
sub
xchg
mov
fwait
inc
mov
bound
and
fldenv
jp
mov
js,pt
aas
iret
les
icebp
cmc
bswap
ss
mov
xchg
push
inc
mov
mov
xor
or
les
fcmovnu
cmp
mov
xor
lods
sarb
fwait
fwait
mov
adcl
fwait
mov
les
ja
scas
test
jg
imul
xchg
fimuls
cmp
or
dec
mov
pushf
pop
cmp
add
or
add
sub
imul
fs
sub
pop
test
call
sub
push
pop
repnz
lcall
add
push
xchg
aad
repz
jp
mov
out
test
add
das
cmp
mov
mov
push
and
rcll
push
add
xor
lds
xor
xchg
sbb
enter
in
rdtsc
subl
dec
or
sbb
inc
jae
add
adc
inc
cli
mov
jl
push
outsb
ficoml
frstors
and
imul
push
sbb
imul
xchg
or
mov
cmp
inc
pop
or
mov
jecxz
pop
shrb
fimuls
ficomps
adcb
adcb
push
ffree
mov
pop
loopne
cwtl
pusha
dec
push
pop
enter
frstor
push
cmp
pushf
pop
add
xchg
push
cmp
push
add
cwtl
leave
clc
out
lods
imul
movsl
push
xor
mov
aam
mov
mov
mov
dec
fs
aad
stos
push
sbb
in
pop
xchg
lahf
dec
xlat
xor
call
jmp
mov
loope
aam
aaa
aam
xchg
out
lret
dec
xchg
adc
xchg
inc
std
adc
and
dec
xor
add
pusha
inc
adc
hlt
sub
dec
repz
inc
pop
dec
dec
imul
ffree
pushf
dec
fldenv
repz
pushf
js
shlb
pop
mov
cmc
inc
lret
js
mov
fsubrl
in
iret
adc
aad
loope
mov
orl
loope
out
xchg
out
dec
cmpsb
std
and
pop
fdivs
dec
dec
mov
popa
lods
xchg
xorl
pop
pop
adc
inc
or
cltd
movsb
push
test
jle
cmpsl
mov
fs
and
add
or
add
inc
push
fisubs
jmp
fiaddl
mov
cmovbe
cwtl
inc
lea
or
imull
and
loope
push
jmp
imul
in
mov
aam
adc
sub
out
mov
scas
pop
ds
mov
push
out
loope
lar
push
fs
lret
repz
shll
scas
fprem1
ljmp
lcall
mov
xor
jle
push
mov
popf
xchg
or
sti
fcomp
jg
mov
sbb
popf
sub
mov
dec
and
int3
push
jno
adc
mov
push
lret
mov
mov
push
inc
insb
scas
lahf
loope
in
and
mov
stos
xchg
xor
jmp
cmp
push
imul
inc
pop
clc
jge
arpl
cmpsb
subb
pop
sub
mov
fs
push
fistps
fiadds
jbe
pop
push
sub
sahf
mov
add
sub
inc
dec
aaa
ret
pusha
add
dec
mov
ljmp
cmc
adc
in
mov
sub
xorb
add
dec
or
cmpsb
mov
xchg
scas
pop
jmp
cwtl
outsb
pusha
dec
push
and
cmp
xor
push
add
inc
cmp
adc
test
cmpsb
pop
loope
mov
pop
mov
in
xor
fs
lcall
daa
mov
scas
push
loopne
mov
insl
lret
sbb
mov
sbb
cmp
push
fnstenv
dec
lods
mov
xchg
out
sbb
test
jp
or
rclb
pop
fdivrs
adc
push
addl
dec
add
rcrb
lds
xchg
imul
or
sbb
xchg
sahf
xor
or
sub
push
and
jb
jae
lret
in
xchg
sub
add
push
and
das
stos
shr
push
mov
insb
sub
inc
and
sub
or
rcr
and
cwtl
jp
cmc
repz
std
lods
mov
inc
push
push
pop
fld
sbb
in
lcall
in
cs
push
fwait
lods
scas
daa
inc
jo
pop
cmp
adc
inc
jp
mov
xlat
out
pushf
lods
add
push
mov
pop
lds
or
ret
jge
xchg
xor
bound
dec
faddl
inc
xor
mov
stos
insb
pop
mov
fbld
jmp
add
scas
movsb
leave
or
pop
push
nop
inc
dec
aaa
xor
or
cmovle
jle
inc
stc
cmpb
inc
insl
jo
out
shll
test
lds
mov
xor
outsb
push
xor
mov
mov
or
push
sahf
nop
popf
rclb
mov
imul
push
xor
cmp
push
inc
dec
out
scas
lock
push
stos
adc
cmpsl
adc
int
dec
mov
cmp
mov
cltd
rcrb
lea
dec
push
in
mov
add
sbb
mov
mov
lods
pop
aas
mov
or
xchg
add
or
out
fucomip
inc
inc
cmpsl
lods
leave
clc
scas
sar
push
xchg
or
ja
ret
std
idivl
cmp
adc
lret
loopne
insb
mov
jbe
adc
pop
mov
mov
sar
jne
xchg
rcl
mov
pushf
adc
cmp
push
and
push
lods
popf
lock
pop
insb
ror
dec
mov
mov
std
lods
adc
add
ljmp
adc
scas
ja
push
xor
shlb
inc
cmp
cmp
stc
or
scas
xchg
push
ljmp
movsl
mov
mov
inc
pop
pop
in
or
push
inc
sbb
and
sub
aad
push
pop
cmp
xchg
ror
cmpsl
mov
mov
jmp
add
faddl
ss
sub
fisttpl
lods
xchg
mov
cmp
std
jl
fisubrl
xchg
pop
sbb
movsb
loop
dec
xlat
insb
jae
add
mov
dec
lea
aad
jnp
jg
mov
aaa
or
lcall
cmp
xchg
ja
in
popa
inc
sbb
mov
lods
pop
inc
dec
fistpl
testb
mov
out
mov
inc
mov
jle
jmp
ljmp
int3
dec
aas
sbb
subl
outsb
fimuls
sub
iret
into
mov
mov
ja
cmp
cmp
pop
push
sub
loope
dec
ds
xor
xchg
push
xlat
insl
pavgb
xlat
cmc
cli
sbb
mov
ret
not
fstpl
ret
fucomi
jecxz
pushl
jmp
cmp
push
inc
push
dec
cwtl
mov
out
jns
pop
test
mov
mov
imul
cmp
enter
mov
pop
or
imul
add
jne
dec
xchg
push
jbe
inc
decl
out
pop
sub
mov
in
insl
int
mov
dec
inc
adc
out
cs
dec
sbb
int3
gs
sti
cld
mov
mov
push
test
clc
lret
xorb
xor
jae
in
or
hlt
inc
push
aaa
les
js
movsb
xor
fisttpl
push
mov
jae
stos
arpl
cmpsl
in
loope
clc
andb
cld
and
adcb
push
pop
popf
push
bound
mov
inc
or
dec
es
lret
sbb
or
out
mov
mov
xlat
lds
ret
pop
push
xor
xor
clc
xor
cwtl
sahf
jns
cs
rcrl
inc
movsl
mov
scas
add
fwait
xor
mov
clc
divl
rcrl
or
dec
and
lret
jae
es
enter
xor
adc
and
leave
int3
aam
add
mov
lods
push
cmc
mov
imul
jb
call
or
adc
adc
mov
add
xor
into
std
pop
aas
jg
cli
out
fstps
dec
loop
cs
dec
sahf
mov
imul
adc
pushw
mov
push
or
mov
adc
dec
and
sbb
pop
add
jmp
cwtl
inc
push
mov
in
addb
mov
cmp
dec
add
and
inc
mov
xchg
out
inc
aaa
daa
dec
es
push
int
dec
or
ret
ds
inc
shrl
dec
mov
hlt
xlat
adc
subl
inc
adc
int
sub
std
ja
bound
hlt
cwtl
cwtl
cwtl
xchg
aaa
stc
mov
sbb
xchg
xchg
jne
cmc
jg
or
aaa
stos
rcrl
stos
sub
dec
and
push
ja
sbb
cli
je
fwait
push
out
dec
jecxz
xor
cld
mov
and
sub
orl
jbe
cmp
push
test
lods
jo
and
leave
fidivl
jb
push
push
mov
pushf
dec
jns
dec
imul
rclb
popa
repz
dec
mov
jb
push
jnp
cwtl
cld
jne
rorb
aas
fldenv
jmp
ret
jmp
lods
outsb
mov
inc
push
andl
rolb
shll
addr16
push
add
cmp
mov
and
iret
mov
insl
repnz
shl
push
loope
int3
lcall
jl
jns
adc
test
lock
add
das
pop
xchg
test
js
cmp
sub
xor
fisttpl
decb
add
jmp
cltd
sbbl
xchg
shl
call
ret
fcmovnb
into
and
lea
das
inc
mov
pop
jge
aas
jecxz
sahf
fs
or
cmp
push
adc
pop
mov
and
inc
test
divl
ljmp
pop
mov
inc
in
sbb
jnp
mov
int
push
loope
jmp
cmc
jmp
push
pop
mov
cli
faddl
inc
jb
dec
sub
int
sub
mov
sub
adc
fimuls
pop
stos
jg
test
notb
sbb
mov
ja
push
mov
mov
dec
je
out
mov
mov
mov
icebp
jl
fisubl
fistl
mov
xchg
sub
or
sarl
cmp
pop
and
xchg
filds
jb
sbb
shrb
xor
dec
pop
mov
and
pop
or
adc
xchg
push
mov
inc
in
in
inc
rcll
or
ds
xor
mov
imul
pop
cs
lock
enter
stos
mov
and
test
and
rorl
mov
push
outsb
cmpsl
mov
std
cmpsl
mov
out
cmp
fucomp
hlt
mov
shrl
es
inc
pushf
pop
out
xor
call
daa
or
insl
sarl
add
mov
stos
roll
xor
fcmove
andb
sub
and
jmp
pop
in
lea
cwtl
sbb
out
add
xor
js
repnz
pusha
adc
mov
lock
lret
cmpsb
arpl
and
cmp
xchg
xchg
xchg
test
aaa
mov
lods
dec
or
cmp
sub
mov
std
aas
cmpsl
jb
pusha
daa
lods
mov
inc
pop
or
jns
out
rclb
ror
shlb
sbb
sarl
lcall
repnz
inc
mov
and
daa
mov
mov
cmp
mov
ss
loop
mov
and
shl
pop
push
divl
loopne
inc
lds
mov
and
mov
test
gs
ss
pop
addr16
xlat
into
jnp
insl
fs
mov
sub
out
int
test
movsl
dec
sbb
enter
cmp
cmp
rcr
int
inc
psllq
and
or
pop
sbb
push
js
call
imul
mov
les
push
mov
leave
mov
push
std
aam
mov
dec
xor
arpl
mov
popa
fldenv
gs
call
sti
xor
pop
fisubl
hlt
hlt
inc
in
sbb
dec
stos
shrb
cmp
pop
addr16
adc
xor
and
mov
loopne
pop
jnp
fs
in
mov
push
leave
cmp
sbb
mov
and
or
sub
dec
outsl
inc
pop
xor
nop
in
sbb
sti
cmp
dec
outsb
mov
shll
popf
cli
pop
incl
dec
es
cmpsl
sbb
jns
lret
push
lods
mov
push
enter
ja
out
out
in
aaa
xor
rclb
shr
push
dec
add
jnp
arpl
mov
push
stc
es
pop
xlat
data16
push
pop
push
jbe
xchg
repz
mov
bnd
mov
ja
xchg
in
mov
repz
loope
outsl
cwtl
dec
push
test
repnz
xchg
mov
leave
jno
mov
scas
add
aam
in
inc
out
or
icebp
and
pop
xchg
in
inc
int
push
pcmpgtb
dec
or
add
sbb
add
cmp
push
jns
jbe
cmp
es
mov
stos
aad
mov
add
inc
clc
xchg
fiadds
roll
pushf
or
aaa
es
idiv
push
insb
push
movsl
pop
sub
jge
mov
inc
xchg
ret
pusha
pop
xor
and
xchg
loop
int
or
les
in
rcll
jecxz
xchg
outsl
pop
cmp
test
movb
gs
or
sub
adc
icebp
cmp
mov
add
sbb
ljmp
pop
mov
sti
push
aad
out
out
pop
fmul
insl
fidivs
dec
lea
dec
xor
shlb
data16
jb
ds
pusha
cltd
mov
arpl
mov
rorl
mov
in
sbb
and
lods
repz
outsl
arpl
mov
add
xchg
push
int
xchg
orl
add
negl
adc
push
out
shr
add
mov
mov
push
inc
subb
jne
or
xor
cli
add
inc
pop
rclb
xlat
dec
lea
mov
mov
and
movsb
and
shll
xlat
out
sbb
push
mov
sahf
fcmovnu
inc
scas
sahf
enter
popf
inc
cmp
jo
jmp
dec
les
lahf
mov
jnp
mov
out
enter
sub
outsb
mov
aas
fnstsw
xchg
ficoms
fmull
mov
mov
jnp
sarb
es
sub
push
mov
fisubl
les
sub
shll
aaa
std
hlt
in
sahf
repz
andb
loop
orl
xor
jmp
lret
pop
mov
xchg
movsb
mov
mov
mov
jle
js
scas
test
jnp
mov
push
cmpsl
loope
xchg
cmpsl
mov
mov
inc
notb
push
jo
mov
adc
popa
cmovno
mov
fnstsw
clc
aaa
cmc
mov
fimuls
sub
out
mov
mov
nop
add
sbb
jg
xchg
fwait
sub
push
or
fsub
mulps
jg
or
mov
iret
cmpl
imul
xchg
sti
fwait
sub
mov
or
faddl
mov
cmp
mov
sbb
xor
add
jbe
les
imul
test
or
loope
lea
inc
in
fistps
pop
adc
test
gs
aas
adc
imul
mov
pusha
out
repnz
loope
xchg
jecxz
cltd
or
or
jp
pop
and
and
loopne
xor
fcom
or
adcb
ret
push
movsb
mov
mov
dec
jae
dec
into
lcall
jbe
insl
shlb
add
cltd
jecxz
fadd
dec
pop
es
pop
mov
push
push
leave
cli
pop
mov
mov
inc
in
repnz
insl
mull
fwait
adc
mov
std
les
xchg
push
ljmp
lret
hlt
imulb
test
ja
ljmp
mov
mov
shlb
adc
mov
pop
std
movsl
mov
mov
sub
dec
int3
out
mov
into
ss
sub
cmp
pop
inc
or
push
push
inc
insl
push
mov
mov
mov
sbb
arpl
clc
mov
add
cs
pusha
outsb
movsb
ljmp
pop
aad
push
lds
push
pushf
adc
ret
cmpsl
sub
mov
decb
add
xchg
pop
lret
inc
jge
pop
xchg
add
mov
pop
lods
or
daa
or
mov
fsubp
je
andb
jmp
push
repz
sbb
xchg
sahf
hlt
xor
sbb
adc
mov
pusha
dec
dec
fidivs
xchg
loop
out
icebp
mov
xchg
shrb
sub
orl
repnz
aam
inc
arpl
lahf
and
rcrl
loop
and
mov
xchg
imul
mov
jl
xlat
imul
jo
sub
arpl
xchg
ja
mov
jo
int3
clc
mov
jo
mov
push
imul
icebp
jo
dec
scas
icebp
das
and
cmp
fisttpl
add
xor
pop
and
ss
out
sub
imul
sub
sbb
popf
mov
movsb
push
mov
notl
loope
dec
cmpsl
outsl
ss
sahf
mov
jmp
and
jnp
aaa
sbb
push
pop
mov
adc
imul
jg
subl
hlt
ja
xchg
push
lea
fmuls
adc
dec
pop
cmpsl
int3
cwtl
add
jnp
and
jo
jae
call
sub
add
into
jb
push
popa
xchg
jge
mov
outsl
jp
and
mov
aam
mov
xchg
pop
jl
leave
ret
sub
mov
mov
inc
rol
in
in
je
jae
mov
add
mov
in
mov
or
mov
inc
add
dec
jmp
mov
loopne
sbb
inc
ds
lock
in
test
cmp
cmpsl
loop
dec
push
pop
push
dec
lods
fstps
jb
std
push
lcall
enter
pop
les
insb
out
int
div
jp
xchg
jl
out
sub
divl
inc
xor
shll
icebp
fidivs
pop
imul
rol
dec
or
fisubrl
and
mov
cmp
test
data16
mov
adc
xchg
pop
jnp
dec
or
pop
js
push
pop
sub
popf
and
inc
jae
or
jge
mov
sahf
pop
push
mov
cmp
imul
and
jmp
lods
pushf
andl
push
dec
xor
or
add
cmc
xor
scas
in
add
xor
pop
xchg
sbb
fdivrl
insl
test
out
add
outsb
das
cmpsl
movsl
sbb
mov
mov
add
cmp
outsl
jecxz
roll
nop
stc
aaa
negl
pop
sbb
inc
and
add
mov
mov
gs
enter
pop
out
inc
pop
pop
mov
cmpl
push
push
jo
and
jge
insl
mov
les
jns
fstps
cmp
push
add
bound
and
pop
inc
nop
mov
cmpsb
pop
ds
cmp
dec
jne
int
cmp
rcr
pop
push
pop
sub
in
in
pop
xchg
jnp
daa
xor
sbb
notl
mov
outsl
mov
xor
mov
daa
fsubrl
jg
sbb
lret
cld
insl
in
repnz
aad
aaa
push
add
in
loop
jb
cmp
leave
jb
adcb
mov
imul
push
jno
test
fnstcw
scas
mov
je
sbb
pushf
pop
sbbb
xchg
gs
inc
xlat
xor
flds
lcall
jnp
add
pop
jne
hlt
pop
pop
or
sbb
xchg
jle
mov
dec
insb
fnsave
sti
mov
cmp
pop
nop
and
mov
in
popf
xor
mov
mov
push
mov
mov
sbb
fidivl
rcrl
mov
adc
pop
mov
subl
loopne
mov
outsl
push
xor
in
xchg
lds
push
insl
scas
fldenv
adc
in
in
mov
test
pop
inc
xchg
or
mov
jl
xor
aam
xchg
clc
aad
jns
lret
imulb
pop
jle
lds
sub
mov
jge
xor
outsb
mov
loopne
xchg
rcrb
and
lret
into
jmp
lahf
mov
nop
dec
mov
push
mov
inc
xor
pushf
xchg
fsubr
sub
incb
out
test
dec
or
lret
add
inc
test
in
jne
jb
or
clc
add
rclb
sti
sbb
and
data16
xchg
out
mov
add
jmp
inc
fs
scas
ja
mov
dec
scas
fsubs
add
or
movsb
in
inc
addr16
sti
fcoml
in
mov
addr16
mov
xlat
outsl
popa
leave
iret
mov
data16
fimuls
aaa
xchg
xchg
ja
push
leave
ret
ja
adc
bound
repz
mov
loop
dec
mov
cmpsl
incb
scas
and
mov
movntps
cs
sti
jmp
neg
adc
lahf
dec
daa
es
addr16
out
aam
mov
in
outsb
sahf
pop
lds
dec
jg
cld
add
push
test
dec
and
loopne
scas
push
push
mov
fwait
xchg
inc
movsb
insl
inc
aaa
xor
jp
test
or
xchg
jne
sbb
and
ja
add
cmp
cmp
mov
sti
lcall
les
xchg
xlat
jp
push
iret
popf
jl
add
and
jg
enterw
xchg
xchg
fdivs
leave
leave
inc
mov
in
inc
int
sub
mov
jbe
inc
pop
and
jno
push
shlb
xchg
inc
sahf
push
fcomps
dec
push
pop
pop
jae
xchg
jo
sbb
sub
push
add
insb
out
and
pop
aaa
sub
sbb
roll
mov
mov
imul
imull
pop
outsl
xchg
cmc
xchg
scas
out
ret
mov
jo
loop
push
dec
stos
fnsave
xor
mov
mov
mov
push
jbe
inc
inc
sbb
arpl
lds
cmpsb
push
leave
mov
ss
xor
sub
push
scas
gs
lea
mov
cmpsl
cmp
icebp
popf
mov
adc
movsl
pop
cmpsb
or
jb
scas
mov
add
je
push
xchg
pop
mov
xchg
cmp
lds
fcomps
pop
mov
pushf
inc
lret
mov
add
lret
mulb
jg
pusha
or
cmp
les
xchg
cmpsb
hlt
push
xchg
fisubrs
push
xchg
cmpsl
lcall
sub
mov
test
add
and
jne
enter
add
pop
les
cmp
jns
sub
popf
mov
cwtl
hlt
repz
jmp
mov
filds
andl
outsl
sahf
mov
mov
push
jae
push
push
jl
xchg
cmp
or
add
fs
mov
adc
push
cmc
xor
push
sbb
pop
jnp
xor
jnp
xor
xchg
or
or
pop
prefetch
dec
pop
push
rcll
imul
pop
ret
fwait
adc
rorb
out
loope
push
hlt
cmp
sub
insl
push
sub
movsb
sbbl
outsb
jne
cmp
cmp
push
or
daa
ds
iret
push
out
pop
test
xor
stos
xchg
loop
add
loope
in
sbbb
or
push
dec
mov
adc
xor
stc
mov
popf
dec
add
dec
je
addr16
cmp
lods
aad
mov
cli
sub
test
mov
xchg
inc
in
pop
jge
jns
fisttpl
dec
sbb
sbbb
push
sbb
imul
mov
iret
dec
jns
pop
int
mov
enter
cmp
sbb
loop
jle
pusha
sahf
lahf
lcall
sbb
lcall
aad
popf
and
jo
mov
sahf
imul
xchg
sub
mov
pop
sub
mov
xchg
test
mov
and
mov
inc
into
mov
jae
or
xchg
jbe
push
adc
xor
xchg
sbb
cmp
jno
sahf
dec
aad
loope
leave
adcl
dec
pop
inc
sub
jecxz
cmpb
orl
jge
int
push
adc
aas
xor
pop
add
repnz
div
adc
xchg
xchg
fldt
xchg
ss
popf
clc
lahf
lock
fisubrl
jmp
mov
mov
outsb
and
jg
mov
test
out
xchg
and
adc
es
jle
push
mov
jecxz
dec
enter
mov
and
mov
push
sub
mov
sub
test
pusha
lret
mov
fwait
xor
cmp
rcl
nop
sbb
cmp
mov
outsb
cmpsl
push
mov
pop
sbb
sbb
mov
cmp
hlt
dec
ficompl
ret
cmp
hlt
sbb
and
cmp
fmulp
sbb
dec
dec
push
jno
sub
leave
add
pop
xlat
mov
jbe
fs
ja
int3
xor
int3
repz
mov
pop
dec
add
mov
inc
mov
repz
ret
lods
sub
fs
mov
mov
xorl
sbb
daa
add
aad
xchg
inc
in
mov
dec
inc
inc
add
leave
or
cmpsl
addb
xchg
jb
hlt
notl
sub
lds
sbb
gs
xor
xchg
pushw
shr
mov
inc
dec
add
out
mov
cs
push
repz
mov
ss
jp
xlat
movsb
or
push
cmp
sbb
jo
std
mov
adc
cmc
cwtl
loop
mov
sbb
pop
inc
loop
jmp
es
lret
fldt
jmp
push
pusha
fidivrs
mov
subl
pop
sbb
scas
jle
xor
insb
mov
frstor
jno
in
ret
xor
xor
iret
sbb
int
pop
mov
faddl
clc
jo
mov
outsb
sub
ror
aad
xchg
xor
lahf
xchg
ret
mov
cmp
sti
jp
and
mov
pop
in
mov
sbb
or
scas
mov
lock
sti
cmc
xchg
jg
popa
pop
adc
mov
mov
rcl
mov
and
adc
adc
aam
pop
popf
cmp
subl
out
ja
pushf
pop
jecxz
jne
push
sbb
insb
out
push
and
fisubs
in
jmp
insb
dec
arpl
add
add
into
clc
push
jns
cli
pushl
lock
sub
insl
jecxz
pop
das
inc
jnp
xor
in
je
sti
in
jge
ret
mov
push
jmp
cmpsb
aaa
mov
clc
jecxz
sbb
or
mov
and
mov
push
movsl
jecxz
mov
in
fmull
push
repz
jbe
arpl
imul
lahf
push
inc
push
jns
xchg
out
std
jne
push
shl
mov
cmp
jle
movsl
mov
fcompl
repz
aad
data16
mov
negl
jp
loop
lret
inc
daa
adc
iret
fs
or
mov
jge
and
fstl
inc
cmp
imul
or
clc
scas
sbb
mov
cmp
inc
lods
cmc
xor
adc
mov
mov
jne
adc
repz
push
fidivl
mov
aaa
bound
popa
jecxz
dec
cmp
mov
fwait
cmp
sbb
loope
inc
test
xor
into
outsb
cs
add
ja
mov
popa
fstpt
xor
out
icebp
jmp
cmp
fcomp
call
sub
aas
imul
xor
dec
nop
imul
leave
popf
outsl
fcoml
rcr
ljmp
mov
adc
push
jge
xlat
sbbb
or
inc
sbb
sbb
cmp
fyl2xp1
mov
xlat
push
mov
xchg
pushf
rorb
out
pusha
test
cli
mov
xorb
xor
out
dec
rcrl
adc
imul
lret
bnd
inc
les
in
dec
adc
je
pop
jge
sub
and
cld
imull
jmp
ljmp
xor
lahf
pop
aas
mov
loop
add
lods
in
jmp
fsubrp
in
sub
fidivl
mov
pop
ss
aas
pop
push
clc
or
xchg
andl
aas
inc
sahf
les
fdivl
xchg
ret
movsb
fimull
mov
xor
std
inc
je
ljmp
cwtl
ss
jb
jns
test
cmp
scas
mov
pop
iret
fldcw
out
and
repz
jb
mov
mov
push
gs
xchg
dec
addr16
bswap
jg
mov
mov
mov
fidivrs
cmp
fbstp
pusha
add
arpl
test
sbb
push
std
jecxz
push
jle
dec
aam
arpl
mov
aaa
movl
mov
xchg
sub
push
mov
rcl
adc
add
pop
popa
xchg
std
addr16
sbb
sbb
mov
enter
mov
cltd
sbb
or
outsl
dec
insb
je
and
push
xchg
aad
mov
mov
pop
inc
pop
push
cli
inc
adc
sbb
xor
mov
arpl
sbb
mov
out
add
ss
jbe
invd
int3
fsubrl
lock
data16
cmpsl
mov
xchg
inc
add
js
insl
mov
vsubss
add
jb
push
xchg
sbb
call
adc
lcall
cmc
lods
sub
mov
out
mov
fisubrl
cmpsl
cmp
mov
jmp
xchg
jns
ret
ljmp
jno
xchg
aas
and
xlat
ja
scas
xor
push
sbb
stos
adc
fwait
pop
pop
movsl
shlb
push
mov
movsl
cmc
inc
stos
and
sar
test
iret
scas
push
ss
cmp
mov
jne
cltd
iret
sbb
popf
sbb
dec
cmp
add
inc
in
add
and
in
xchg
jmp
mov
into
lods
xor
stc
out
jbe
xor
and
cmp
dec
popa
inc
and
mov
sbb
arpl
addr16
dec
repz
test
pop
aam
xor
xchg
faddl
pop
inc
pop
or
pop
pop
cltd
mov
mov
sub
into
rorb
in
and
test
pop
push
arpl
rolb
test
rcll
pushf
enter
pop
xor
dec
fucomip
roll
leave
int
lahf
jne
cld
popf
push
cmp
jne
or
ja
xchg
mov
sub
push
mov
popa
mov
lods
das
or
les
arpl
mov
and
aaa
scas
mov
mov
inc
mov
and
js
jg
sbb
add
xchg
jg
pop
push
pop
jl
inc
jle
pop
add
dec
xlat
inc
sbb
push
jae
je
xor
jnp
int3
jp
outsb
ja
int
sbb
xor
scas
fcmovb
outsl
stos
ficoms
mov
test
enter
jb
ds
or
mov
mov
or
cmc
and
and
lods
xchg
fadd
sbb
or
xor
jp
je
inc
cmp
leave
mov
jb
dec
adc
popf
lock
in
std
sub
imul
punpckhbw
scas
aas
dec
and
add
imul
sbb
push
and
into
and
mov
loop
iret
adc
push
insl
jae
mov
aad
lret
inc
imul
sub
adc
in
pop
sbb
stc
pop
sbb
inc
in
mov
bound
icebp
cmpl
int
les
inc
ret
cmp
push
mov
mov
sbb
or
xchg
mov
addr16
xor
nop
sbb
jne
xchg
test
fs
sub
andl
jp
enter
xor
dec
hlt
cmc
test
dec
xor
mov
pushl
mov
mov
xlat
nop
ret
dec
cmpsb
std
xlat
loope
xchg
lret
in
loope
xchg
cltd
cmpsl
std
or
cmp
mov
daa
enter
pop
jno
jp
push
shll
std
fadds
mov
xor
popl
xchg
sarl
vandps
jp
gs
and
mov
cmp
xor
out
test
sbb
aaa
arpl
lahf
and
gs
dec
inc
xor
adc
sub
insl
xchg
xchg
push
insl
ja
jne
pop
mov
lock
dec
jp
add
sti
test
mov
xor
movsl
pusha
jmp
mov
daa
pusha
adc
jg
xor
mov
mov
jge
xor
out
xchg
add
push
rcrl
or
sub
cmpsb
sub
sub
addr16
cmp
mov
sbb
lret
mov
test
leave
push
out
rcrl
stc
adc
lcall
and
ret
mov
push
sub
and
inc
mov
orb
xchg
sahf
jo
inc
das
daa
or
and
rolb
xchg
mov
gs
das
test
in
xchg
inc
dec
std
xchg
xchg
les
push
test
lcall
ja
test
mov
int3
mov
jmp
push
push
dec
ret
xor
pop
inc
scas
imul
les
hlt
fdiv
test
lcall
call
push
ss
mov
mov
xor
xor
fwait
mov
xchg
inc
push
fwait
in
rcl
leave
push
sahf
loop
fdivrp
aaa
imul
loop
mov
leave
mov
addr16
lea
add
shrl
iret
movsl
lret
inc
inc
popa
or
sub
enter
xor
cltd
cld
cwtl
fs
mov
sti
sub
pop
adcl
cmp
mov
sbb
jns
mov
icebp
je
in
adc
lods
pushf
push
fsubr
arpl
mov
dec
mov
mov
jne
jge
push
push
pop
jb
pop
xchg
outsb
xchg
lods
cmpb
cmpsl
pop
and
notb
cltd
cwtl
in
and
lds
cli
sbbl
mov
ficoms
inc
fnstcw
mov
addr16
test
rclb
loope
ret
popa
push
and
inc
fbld
dec
and
cmp
mov
or
mov
stc
adc
push
xchg
mov
pop
jle
nop
xchg
pop
lods
xchg
mov
adc
jo
xchg
jbe
popf
xor
hlt
nop
push
into
lahf
cmp
insb
jo
and
pop
in
scas
test
xor
add
pop
adc
popa
and
and
jge
jle
ror
sub
rorb
sbbb
hlt
mov
loope
ror
cmp
rolb
sub
cld
pushl
ss
ret
outsb
lret
dec
insb
cs
not
or
cltd
insl
pop
aad
xchg
insl
mov
data16
jle
push
adc
decb
fistps
and
sub
xchg
mov
ds
fistps
adc
sub
daa
cmc
pop
cld
mov
lcall
int3
dec
mov
mov
testb
mov
cmpb
xchg
pop
fldl
push
push
xchg
jg
cwtl
xchg
mov
push
mov
insb
mov
fstpl
lock
sub
lahf
jmp
iret
jnp
xchg
fistpl
jno
xchg
xchg
pop
push
es
adc
inc
inc
cld
jo
clc
sub
ljmp
popf
push
cmp
inc
icebp
loope
bound
mov
dec
jno
mov
inc
jae
nop
jl
inc
enter
mov
hlt
add
shlb
idivb
push
mov
fnstcw
inc
mov
pop
push
xchg
cmp
inc
rorl
lret
push
test
hlt
pop
mov
or
jg
sbb
mov
cmp
mov
popf
insl
repnz
cmc
in
inc
inc
cmp
ret
aaa
cmp
sbb
ficompl
mov
ljmp
std
pop
push
xchg
pushf
loop
dec
adc
xchg
add
mov
negl
sarl
dec
xor
addb
lods
int
lods
addr16
adc
mov
lods
iret
rolb
pop
jle
cs
mov
bnd
cmp
pop
xor
inc
ja
push
and
jae,pn
pop
enter
fs
les
inc
mov
mov
jmp
fcomip
jmp
or
loopne
xor
sub
push
pop
pop
in
lea
out
or
cmp
lods
xor
dec
outsb
cmp
testb
outsl
dec
roll
sub
clc
mov
aam
cmpsl
lock
bound
mov
icebp
pop
repnz
or
jns
aaa
add
inc
dec
clc
add
in
mov
xchg
push
in
push
jp
mov
adcb
inc
sub
jecxz
jns
sbb
cmp
dec
xchg
mov
fmuls
inc
push
push
insl
sub
lret
pop
xchg
sub
in
lods
gs
fstpt
in
enter
sahf
mov
xchg
icebp
mov
pushf
fimull
lcall
xchg
dec
lock
hlt
pop
push
mov
in
inc
popa
mov
cmp
inc
push
xor
popa
xlat
fmuls
mov
stos
lcall
fdivs
rcl
xchg
pop
ss
push
push
inc
mov
jg
pusha
in
cmp
movntq
movsb
jecxz
orl
xorl
inc
pop
movsl
push
cmp
mov
or
scas
jae
popf
jecxz
mov
mov
jge
pop
ss
inc
icebp
add
adc
das
push
aad
stos
and
aam
fists
pushf
aad
icebp
stos
jb
cmc
sahf
rcl
mov
mov
push
shr
jne
icebp
dec
sub
sub
out
pop
test
add
cmpl
or
pusha
iret
add
mov
cmp
jecxz
ja
rclb
push
test
out
pop
dec
mov
xchg
xor
xchg
or
sbb
lds
dec
lds
stc
sti
and
jp
dec
shrl
sub
sub
xchg
gs
xchg
jo
cmp
pop
cld
aaa
xchg
imul
push
mov
mov
inc
sbb
xchg
movsb
sbb
cmp
push
xchg
dec
xor
push
rolb
insl
pop
out
icebp
dec
adc
push
lcall
or
jmp
je
orb
jecxz
xchg
int3
inc
sub
movsl
sbb
test
addl
push
cmpl
jecxz
neg
mov
pop
hlt
add
jl
and
mov
out
nop
insb
mov
cmp
cli
add
jae
pop
inc
or
ljmp
outsb
out
imul
test
in
xchg
test
sub
out
push
inc
inc
xchg
lcall
stos
ljmp
xchg
addr16
pop
jb
addb
and
mov
push
xchg
test
sahf
in
sbb
mov
in
pop
loop
or
mov
dec
insl
fs
pop
sbb
pop
sbb
adc
cmc
idiv
mov
and
sub
mov
pop
add
sbbl
sub
fnstcw
and
xlat
ret
call
or
mov
dec
push
xor
sub
and
int3
pushf
mov
mov
push
xor
rcll
call
sub
sub
stc
push
out
pop
jb
add
cld
dec
cmpsl
push
jg
jae
out
or
dec
push
out
and
scas
fdivl
test
add
call
icebp
and
mov
pop
notb
jae
imul
aaa
lods
into
into
jo
in
scas
adc
xor
lcall
and
fdivl
push
out
cmp
mov
hlt
hlt
sarl
add
orl
add
enter
add
mov
cwtl
jge
mov
ret
out
loopne
jnp
xchg
lret
das
mov
jbe
jl
jl
fwait
out
mov
xor
aam
xchg
push
xchg
jb
mov
dec
js
fxtract
sbb
or
in
cli
mov
insl
mov
fwait
idiv
jl
call
mov
mov
adc
cmpsl
pop
xor
scas
mov
outsl
mov
stos
adc
insl
inc
or
mov
in
adc
push
dec
call
xor
loope
fisubl
mov
sub
dec
adc
pusha
pop
cmp
dec
jmp
lea
dec
xor
call
bound
adc
leave
and
jle
mov
sbb
xchg
mov
add
mov
popf
or
popf
jp
es
imul
mov
dec
mov
or
cmp
hlt
adc
fs
fmuls
jle
pop
cmp
adc
rep
adc
and
sbb
adc
cmp
mov
cltd
lret
push
in
shll
cli
fildll
sbb
lock
lock
jnp
pop
ret
jmp
or
push
adc
mov
dec
bound
imul
push
mov
divl
mov
push
pop
loopne
xchg
addps
adc
cs
sbb
cmp
push
arpl
sub
jns
into
dec
push
cltd
pushf
xchg
nop
mov
sbb
jmp
fists
in
cmp
stos
inc
loope
sahf
mov
nop
sub
mov
dec
out
test
roll
push
ret
gs
vsubps
cmp
xor
adc
add
cmp
stos
imul
mov
push
aad
jl
xchg
xchg
mov
cmpsb
mov
jno
push
push
xchg
jb
pop
into
xor
into
inc
xor
cmp
stos
mov
adc
imul
jmp
insb
repnz
mov
lret
xchg
dec
nop
repz
jne
mov
shrb
pushf
mov
enter
jmp
popf
mov
popf
pop
fcmovne
movsl
adc
popf
dec
cmp
xor
imul
mul
mov
dec
sbb
adc
movsb
mov
sub
mov
mov
xor
ror
test
sub
dec
mov
lods
leave
test
and
icebp
add
mov
dec
push
push
mov
mov
dec
sub
rcll
mov
sbb
mov
lret
mov
movsb
loop
push
andl
mov
push
jae
mov
push
and
sub
and
in
ret
mov
pop
dec
fdivl
aad
push
in
cmp
mov
sbb
xor
ja
mov
push
fwait
pop
shrb
bound
dec
pop
aam
push
mov
ja
test
xor
mov
je
push
cwtl
mov
sbb
ror
or
into
push
jecxz
cmp
cld
xchg
ds
in
les
outsl
xor
cmp
pop
xchg
add
arpl
inc
das
inc
sbb
fnstcw
adc
add
xor
cmpsl
gs
js
outsb
xchg
jne
lods
push
pop
mov
test
cmpsb
sbb
test
cmp
sahf
mov
or
inc
sbb
ret
aas
iret
xchg
mov
fidivrs
test
add
pop
adc
test
lret
ret
mov
pop
popa
enter
push
mov
mov
daa
std
pop
lcall
mov
mov
adc
push
leave
cmpsl
into
push
js
loop
mov
mov
inc
sub
push
jns
adc
ficompl
cmpl
cmp
add
push
dec
dec
fldenv
ret
add
aad
aam
jecxz
js
sbb
pop
add
mul
cmp
jne
cmpsl
ret
xchg
call
daa
pop
jle
sbb
pop
dec
push
imul
sub
es
xor
in
mov
outsl
lret
pop
in
jge
das
jp
mov
xchg
icebp
xchg
adc
push
loopne
cmp
sbb
mov
lcall
xchg
in
xchg
mov
sbb
and
repz
pop
shl
and
push
xchg
enter
inc
mov
negb
xor
stos
movsb
push
jns
repz
sub
sbb
xor
fcmovnu
lods
rol
lds
sbb
push
sahf
fcomps
int
pop
sahf
or
push
pop
mov
movsl
or
movaps
push
js
dec
mov
jmp
cmc
sbb
mov
fwait
mov
add
jmp
add
repz
or
cmp
pop
in
sub
stc
rcrl
dec
and
sub
lret
mov
jb
fst
xchg
mov
nop
cmpb
pop
inc
sbb
jo
lret
add
xchg
dec
xor
in
or
in
push
rclb
repnz
xor
arpl
sbb
sbb
paddusb
push
xor
and
int3
gs
mov
push
sub
jbe
leave
dec
mov
cmp
mov
mov
loopne
adc
mov
je
aaa
mov
adc
fwait
pop
fcomps
push
jle
enter
and
pop
outsb
jp
mov
mov
xchg
jne
out
loop
mov
fsts
sti
lea
sub
mov
es
adc
rcrb
ffreep
leave
add
sbb
adc
mov
stos
pop
lahf
push
es
bound
sub
pop
sahf
or
jno
sbb
int3
lock
enter
das
inc
adc
mov
or
lock
into
mov
std
lock
imul
aam
loop
cltd
repnz
sub
scas
mov
in
lods
aas
cld
add
cmpsb
cld
or
insb
sbb
jecxz
xor
loopne
push
clc
repz
add
wbinvd
jp
out
or
fsubrs
loopne
and
sbb
lods
mov
sahf
lods
cld
stc
and
pop
ficompl
pop
mov
mov
dec
arpl
mov
mov
mov
or
lcall
ret
dec
pop
push
push
and
out
mov
das
rcrb
jo
mov
mov
inc
pusha
or
add
hlt
loope
mov
fprem1
jmp
int3
add
push
jne
aaa
add
dec
es
iret
mov
mov
in
shll
mov
jmp
insl
add
xlat
jg
sbb
xchg
cmp
fmul
movsl
icebp
cmpsb
xor
jmp
inc
std
mov
movsl
fiadds
pop
out
into
push
add
rcll
cmp
jno
pop
lock
dec
das
ljmp
fcmovnbe
clc
lret
out
xor
ficoml
rcr
dec
jno
push
gs
sub
xor
xlat
imul
repz
sub
mov
mov
data16
loop
shrl
and
and
mov
inc
adc
rolb
adc
aaa
cs
xor
iret
dec
call
in
cmpsb
cmc
pop
pop
lods
arpl
mov
lcall
and
and
push
dec
ss
aaa
jne
sar
adc
jmp
dec
sbb
sbb
ljmp
cmp
mov
mov
pushf
jnp
outsl
jp
mov
sub
out
in
fdivs
or
inc
pop
fadd
push
cmp
inc
add
lock
mov
fcomip
cmp
add
inc
xchg
in
mov
pop
push
mov
inc
icebp
shll
sbb
and
sahf
push
dec
mov
jno
test
outsb
mov
imul
or
in
dec
aas
push
sub
cmp
enter
mov
mov
push
fiaddl
ret
repz
jno
mov
pop
pop
outsb
jne
ret
mov
aas
sub
lcall
jmp
icebp
icebp
inc
jo
fisttpll
cmpsl
cmp
andl
das
push
popa
cmp
leave
ljmp
pop
push
std
xchg
icebp
sub
pop
xor
dec
pop
lahf
in
mov
sub
dec
sbb
jbe
mov
incb
popf
add
shrl
cmp
add
mov
enter
pushf
xor
daa
out
xchg
mov
adc
movsl
push
sbb
lcall
pop
or
xlat
in
cs
xchg
jle
aam
clc
cs
je
outsb
ja
out
push
xchg
icebp
ss
arpl
das
jp
dec
pop
xchg
out
cmpsb
cld
cmp
lret
jmp
nop
rolb
sahf
jge
call
mov
xchg
push
rcrl
jae
faddl
xor
cld
movsb
jb
jge
repnz
pop
jae
xor
and
andl
call
xor
cmp
iret
je
adc
pop
ja
or
fcmovu
xchg
xor
test
in
jne
and
pop
mov
jle
jns
push
dec
pop
ret
mov
lret
add
mov
add
fmul
push
xchg
jl
push
push
pop
mov
jmp
cmp
dec
aas
and
and
out
inc
mov
in
shlb
pushf
or
jl
data16
fisttps
fildl
cmp
es
loopne
mov
imul
sub
or
ffree
scas
scas
imul
xor
sbb
jo
dec
stos
and
loope
mov
jo
pop
push
jle
add
outsb
shll
ficoml
mov
mov
cmp
cmp
pop
dec
or
sbb
ljmp
and
add
pop
mov
or
std
or
repnz
xchg
lret
roll
inc
ja
xchg
and
or
dec
popa
aas
dec
xchg
lock
mov
ret
fs
sbb
roll
sbb
xorl
xchg
and
inc
cmpsl
je
xor
or
cli
pop
bound
bound
inc
jg
sbb
pop
fldenv
push
test
mov
adc
arpl
xchg
cmp
out
and
out
add
xchg
sub
mov
lcall
ljmp
dec
movsb
xchg
leave
jae
repnz
xchg
addr16
sahf
clc
push
in
loope
mov
jg
cmp
pop
bound
daa
test
mov
js
ret
or
into
mov
mov
and
inc
push
and
dec
sar
adc
pminsw
jo
dec
sbb
test
in
adc
lea
je
or
int
shll
int3
lea
pop
ret
push
loopne
aaa
popa
iret
sub
ret
rep
popf
add
sub
push
dec
repz
pop
or
or
ucomiss
push
lods
mov
inc
inc
sbb
jae
sbb
outsb
repnz
push
push
fcom
mov
mov
mov
mov
je
cmp
or
jp
mov
ja
jo
adc
movsb
out
ret
fisubs
xor
std
cli
sub
jmp
imul
neg
aad
cmpsb
inc
xchg
fwait
pop
dec
test
lret
cmp
xor
push
lds
nop
call
out
std
or
pusha
out
je
mov
mov
adc
cmpsb
mov
push
mov
daa
loop
lods
std
and
xchg
jnp
dec
jae
jg
or
add
test
loope
fdivp
inc
in
divl
xchg
int3
aad
in
push
jl
loopne
out
mov
scas
and
adc
ret
mov
mov
or
dec
je
or
adc
xchg
lods
xor
mov
push
or
or
out
cmp
aad
push
and
and
test
mov
cmpsl
cli
test
neg
cmp
fldcw
and
add
push
adc
in
sbb
cmp
dec
push
inc
xchg
xchg
inc
or
lret
fisttpll
inc
loop
repnz
mov
push
out
push
cmc
in
dec
outsl
sahf
addl
mov
push
pop
jb
sahf
rorb
mov
scas
jmp
mov
jae
pop
test
push
fisttpll
imul
out
mov
ds
mov
sbb
inc
mov
rcr
iret
jp
xor
xchg
ficomps
xchg
outsl
ja
dec
insb
hlt
stc
xchg
xlat
cltd
in
sub
jns
enter
lcall
andl
decl
xchg
pusha
outsl
aad
push
jl
test
imul
packuswb
cmp
hlt
mov
cmp
cli
pop
subl
cmpsl
in
fidivs
jg
push
dec
mov
leave
xchg
insl
out
mov
shl
dec
pop
sbb
inc
pop
loopne
fs
xchg
pop
addb
add
inc
pop
popf
sbb
std
fidivrl
fcoml
mov
adc
jae
loop
mull
and
jge
je
popa
lods
lcall
push
bsf
add
adc
in
push
test
mov
movsb
outsl
mov
adc
inc
pop
test
xchg
jne
ror
loopne
pop
push
xchg
test
jp
pop
arpl
mov
dec
add
mov
pusha
push
push
outsb
jge
jns
dec
daa
mov
test
mov
cmp
jle
mov
pop
movsb
mov
aaa
and
enter
adc
test
sbb
dec
push
mov
aas
test
call
aad
fmull
outsb
jge
and
into
and
add
es
iret
sbb
cld
jmp
mov
mov
adc
cmpsb
out
ret
cld
add
jmp
jnp
push
popf
test
push
xor
test
ret
dec
ficoml
sub
leave
out
sub
mov
ljmp
lcall
mov
adc
adc
cld
dec
das
pop
mov
push
xchg
cld
scas
testl
dec
and
mov
mov
inc
adc
out
xchg
xchg
push
mov
push
in
imul
arpl
and
fwait
lea
jp
xor
fcoml
pop
pop
repnz
pushf
fwait
or
outsl
pop
sub
jae
add
aad
jo
cmpb
in
mov
or
out
lret
xorl
jo
mov
hlt
mov
push
add
es
lods
mov
daa
fs
pop
lock
incl
jbe
cltd
sar
dec
cmpsl
stos
or
movsl
jae
scas
mov
aam
pop
push
outsl
dec
ret
pop
lods
mov
addr16
mov
push
jecxz,pt
adc
les
scas
cmp
cmc
add
aad
xchg
int
xchg
ret
sub
outsl
dec
cwtl
push
and
cltd
push
lods
jp
dec
outsb
or
lods
ret
popf
xor
cmp
std
push
bound
cmpsl
movsb
testl
ja
adc
push
cmp
cmp
mov
ret
out
and
shlb
add
and
inc
popf
sub
jae
scas
inc
pop
push
fstps
mov
mov
jbe
sbb
pop
mov
cwtl
inc
dec
pop
xor
pop
mov
push
xor
mov
cmp
push
xlat
xlat
fadd
sbb
mov
mov
jle
lods
test
test
icebp
lcall
scas
sub
das
out
dec
or
jo
inc
daa
sub
rolb
cmp
aad
xchg
xchg
jo
jle
mov
decb
orl
xchg
and
ficomps
and
mov
das
pop
xor
jne
and
out
push
repnz
mov
movsl
mov
mov
jecxz
cmp
xor
push
adc
lods
dec
xor
mov
lret
leave
lds
lret
mov
sub
mov
mov
and
mov
sti
pushf
cmc
inc
cltd
jecxz
int3
rcr
cmp
rolb
cli
or
ret
call
adc
in
push
sbb
mov
mov
cltd
sarb
cli
push
jbe
jp
gs
scas
mov
ret
jne
mov
out
push
inc
jbe
aas
cmp
mov
sbb
or
add
out
mov
pusha
ret
push
dec
clc
inc
loop
popf
jecxz
jg
aam
xor
rorl
dec
mov
call
loop
aas
adc
xlat
push
jp
mov
mov
in
sub
int
xchg
mov
jle
bound
dec
mov
fwait
int3
repnz
pop
sbb
jle
sysenter
xchg
add
mov
sub
xchg
adc
orl
in
scas
push
add
mov
sub
push
stos
out
xchg
inc
aam
popf
inc
cmp
jno
pop
jbe
mov
rorl
outsl
mov
sbb
push
jecxz
clc
bound
out
dec
out
loopne
xor
aam
sbbb
mov
xor
sbb
addl
fwait
mov
mov
orb
xor
jo
out
out
sbb
dec
cmp
out
lret
sbb
sti
fcoml
mov
dec
out
sub
add
sub
dec
xor
inc
lcall
jl
movsb
xor
negl
outsl
jns
adc
jle
lods
jle
adc
lods
sub
cvtdq2ps
insl
jmp
rolb
test
icebp
pusha
mov
xor
cld
scas
fwait
imul
jg
shl
aas
and
xchg
cmp
sbb
add
cmpsb
imulb
int
ja
xor
js
mov
mov
mov
popa
mov
rcr
inc
mov
xor
xchg
out
mov
pop
cmp
addr16
xor
stc
call
mov
mov
clc
pop
in
lcall
in
mov
int
je
pop
andl
push
cs
negb
out
mov
push
mov
test
test
movsl
imul
pop
dec
xor
inc
mov
int
mov
inc
lods
add
mov
stos
wbinvd
mov
ss
pop
cld
add
mov
in
mov
add
out
js
data16
mov
loope
and
imul
fs
ret
and
xor
mov
cs
popa
adc
push
pop
stos
std
jle
and
xchg
stc
or
adc
add
push
addb
or
push
mov
xor
adc
xor
in
enter
insb
imul
addr16
pop
sbb
add
or
push
aaa
mov
pop
cmp
ret
shl
insl
inc
mov
popf
pushf
push
ret
xor
test
push
in
jae
pop
pop
jle
cmp
cli
mov
adc
cmp
push
push
xchg
pop
push
cmpsb
and
lcall
insl
pop
sub
mov
mov
pop
es
mov
cmp
fwait
out
in
ljmp
shrb
insb
outsb
push
test
loopne
call
dec
adc
pop
push
fwait
cli
sub
fistps
movsl
sub
or
lea
add
or
add
fucomi
sbb
out
sbb
arpl
ja
mov
imull
mov
andb
pop
add
ficoml
cmp
mov
or
dec
inc
jge
mov
mov
test
setl
or
mov
es
or
outsl
fmuls
jne
mov
iret
push
mov
mov
jmp
jmp
decb
mov
aaa
arpl
test
je
in
pop
daa
jne
je
xor
mov
and
into
mov
jno
mov
ret
call
and
cmp
inc
mov
lock
mov
mov
fisubrs
push
mov
pop
mov
pusha
dec
cwtl
lahf
inc
addr16
and
adcb
mov
imul
mov
jo
or
cmp
or
and
cld
ja
add
cld
mov
in
sahf
xlat
jnp
add
mov
cmp
fmuls
xor
in
int
adc
daa
insb
roll
jnp
push
loope
cmp
popa
push
imul
in
data16
ret
popa
cmp
aas
push
and
test
and
dec
movsl
ja
sub
popf
and
mov
ja
movsl
mov
add
add
mov
add
mov
aad
outsl
push
in
mov
pop
dec
lcall
sub
push
push
and
cltd
inc
bound
loopne
shl
daa
out
in
rolb
mov
jnp
xchg
push
test
mov
xchg
cwtl
testb
ror
clc
std
sub
repz
lods
sbb
lea
inc
dec
mov
jp
sbb
push
fstp
inc
inc
xor
xchg
fldcw
out
mov
xor
mov
mov
int3
es
and
sub
or
in
and
inc
mov
xlat
jle
cltd
shr
xlat
ljmp
inc
cmpsl
sbb
mov
mov
addl
shrb
fdivrl
fiadds
pop
fsubl
pushf
es
lods
add
andb
jl
or
test
test
jnp
add
adc
mov
adc
insl
test
lods
mov
mov
mov
fwait
mov
add
jo
cmp
adc
aaa
add
mov
shlb
jge
sub
sti
or
jl
jle
aam
nop
sbb
xor
ds
dec
xchg
mov
sarb
pop
or
adc
add
cs
mov
or
adc
push
fidivs
push
push
or
mov
cmc
mov
aas
test
addr16
aas
daa
cmc
mov
in
mov
mov
outsl
sbb
or
jmp
adcl
push
sub
js
mov
mov
jns
frstor
in
xor
mov
stos
add
in
lahf
hlt
or
dec
mov
lahf
insl
inc
dec
subl
enter
je
sub
aad
mov
or
outsl
sti
les
hlt
add
outsl
jbe,pt
and
pop
jnp
sti
xor
or
lds
inc
push
imul
jb
and
mov
fs
cld
push
shll
push
xchg
push
jg
jl
cmp
aaa
das
jg
xchg
pop
jecxz
in
xorl
fs
push
outsb
cmpsb
sbb
cli
mov
hlt
mov
out
jmp
xchg
or
xchg
adc
or
roll
dec
out
mov
pop
pop
pop
inc
pop
inc
push
aaa
push
add
xchg
aad
fiaddl
je
and
mov
push
and
in
add
pusha
scas
enter
and
mov
mov
push
mov
jns
clc
aam
add
add
cmp
mov
mov
scas
fdivrl
cmp
and
add
comiss
test
js
inc
imul
jae
out
push
xor
lret
adc
testl
orl
cmp
inc
mov
daa
sahf
jecxz
cwtl
push
cwtl
cmp
and
xchg
in
sub
adc
orl
lods
cli
imul
stos
pop
mov
aad
mov
out
dec
mov
and
mov
lea
outsl
xor
push
dec
or
mov
cld
and
pop
pop
and
pusha
push
sbb
lds
push
repz
xor
push
xor
imul
push
out
dec
push
mov
xor
xchg
jno
imul
push
lret
sahf
outsb
mov
jmp
mov
mov
fidivs
mov
js
loope
mov
shll
sub
add
cli
hlt
jmp
aas
mov
out
adc
cmc
pop
lcall
adcb
stc
inc
mov
mov
push
mov
gs
out
inc
aad
or
and
add
inc
jle
xlat
js
into
pop
stc
in
jbe
pop
cs
mov
lods
jecxz
sbb
lahf
jb
adc
mov
insb
mov
nop
fs
sarb
rcrl
cld
repz
sub
mov
scas
aam
jb
adc
adc
adc
mov
xor
jmp
dec
xor
into
sub
in
jbe
and
aaa
rcl
mov
ljmp
or
imul
jge
test
inc
xchg
inc
out
add
and
enter
mov
fdivs
adc
paddusb
int
jb
outsl
pusha
aas
insl
hlt
jmp
outsl
mov
mov
rorb
adc
cmp
cmp
push
xchg
jg
arpl
into
mov
aas
or
insl
or
enter
lret
sti
ret
rolb
sbb
lods
and
pop
add
dec
clc
punpckldq
test
loopne
imul
dec
jbe
inc
cmp
sbb
adc
mov
mov
sub
out
scas
jb
dec
cli
lods
into
or
gs
shll
dec
aam
mov
xor
and
dec
dec
push
aaa
inc
push
fidivrs
push
sarl
lahf
pcmpgtw
push
call
push
pusha
sbb
lea
idivl
aaa
int3
scas
hlt
scas
pop
lods
arpl
push
in
lods
or
sbb
es
outsb
sub
cmovnp
or
psubq
fisubrl
mov
cwtl
push
push
pushf
loope
daa
mov
sbb
inc
and
dec
cmp
dec
sahf
enter
test
clc
inc
into
not
cmp
jle,pn
lods
loop
lods
icebp
in
adc
fidivrs
push
add
or
fildl
mov
subl
lret
leave
push
pop
push
inc
push
xlat
push
xchg
mov
daa
fisttpll
push
xchg
negb
mov
adc
mov
jns
leave
int
xlat
lods
mov
ret
jg
div
jmp
clc
inc
cmpsl
pusha
add
mov
xchg
dec
mov
add
or
and
cmpsl
fistl
insb
and
cmp
add
mov
into
cmp
sub
sbb
push
scas
inc
lcall
push
rcrl
add
dec
fistpl
add
dec
pop
jg
cmp
pop
sub
insl
lods
adc
mov
pop
adc
shll
or
cltd
ds
leave
or
add
into
mov
out
cltd
stos
or
mov
popa
or
jecxz
insb
adc
xchg
xchg
mov
ffree
push
lahf
sbb
xchg
sbb
push
mov
imul
cmp
inc
bnd
sbb
aad
adc
cmp
sbb
int
rolb
xchg
cmpsl
pushf
test
cwtl
adc
nop
out
insl
xor
stos
jo
mov
lea
jg
cmpsl
icebp
xchg
sub
adc
cmp
sti
xchg
xor
xor
jb
movsl
rcrl
clc
lds
sub
push
fidivl
push
cmp
daa
lahf
mov
out
xchg
cmp
jbe
cltd
xor
xor
xchg
mov
xchg
mov
fcmovb
adc
movsb
or
add
dec
fimuls
test
xlat
scas
cmp
movsb
add
rorl
xchg
xor
iret
cli
xor
or
add
lods
cmp
pop
or
push
jecxz
das
add
or
sbb
xchg
cmp
loop
outsl
fwait
popf
mov
sub
outsl
mov
pop
popa
es
aaa
add
push
jge
xchg
in
loop
cmp
cmc
repnz
push
sub
pop
dec
mov
dec
sub
test
lret
mov
xor
mov
scas
sbb
lock
push
enter
call
imul
push
add
sbb
and
adc
fidivrl
jno
inc
jecxz
stos
dec
and
insl
sarb
aad
lret
pop
mov
and
jnp
les
sarb
push
jae
cli
mov
ds
push
xor
notb
lea
stos
or
dec
sbb
xchg
out
sbb
scas
cld
cmp
cwtl
dec
dec
inc
cmp
sub
loopne
movl
negl
stos
mov
pop
in
push
out
call
and
dec
popf
shll
add
movsb
sub
scas
repnz
sub
stos
xor
mov
jne
popa
mov
mov
lock
fbld
sub
xchg
sub
mov
mov
ss
inc
adc
loope
or
mov
cld
shrl
ljmp
xchg
push
xor
xchg
cmc
ret
add
jb
pusha
popf
insl
ljmp
mov
xchg
notb
push
fcompl
add
jo
xchg
sbb
fisubrl
xchg
xchg
rcl
ds
ds
pusha
mov
loope
cmp
sahf
pop
dec
popa
mov
dec
lret
out
lods
and
out
imul
dec
adc
js
and
jne
mov
data16
cmp
adc
push
jns
sbb
test
sub
jb
sar
notb
mov
xor
mov
int3
jmp
arpl
pop
or
sub
imul
imul
insl
adc
pop
xlat
xchg
sarb
adc
out
lods
test
add
in
daa
or
scas
fstps
jnp
mov
mov
adc
jmp
jnp
inc
subb
mov
shll
pop
xor
push
or
mov
andl
cs
mov
and
iret
jne
mov
xchg
mov
inc
in
mov
in
mov
int3
movb
ret
mov
loopne
ret
adc
lods
inc
scas
mov
imul
call
shll
mov
cmp
add
cltd
jmp
add
stos
leave
add
xor
test
mov
imul
sbb
out
outsb
add
lcall
jle
pop
lock
rcll
jl
int
sar
or
imul
fsubr
sbb
push
in
jecxz
push
sub
mov
pop
mov
xchg
je
hlt
out
out
xchg
pushf
mov
pop
adcb
cmp
test
inc
push
lahf
xchg
jmp
cmp
inc
shr
fidivs
mov
hlt
mov
jle
sbb
add
xchg
cmp
push
aam
push
push
loop,pt
negb
gs
or
das
dec
mov
addr16
mov
sbb
fstps
shlb
jmp
sti
add
pushf
imul
xchg
repnz
cmp
mov
jno
idivb
mov
test
js
xchg
inc
mov
jl
test
lods
movb
cmp
xor
mov
cwtl
inc
dec
xorb
icebp
addr16
aam
xbegin
loop
mov
es
xchg
mov
lret
outsb
bswap
cmp
inc
xchg
insb
outsb
fidivrs
subl
enter
enter
ret
cli
jecxz
mov
dec
repz
cli
xchg
pop
call
in
and
or
xor
into
outsl
fcmovb
sub
cmpsl
and
into
push
inc
jne
cmc
ret
cmc
imul
sub
mov
jns
fbstp
in
jge
imul
dec
sub
sbb
inc
std
pop
dec
fisttps
mov
mov
stc
pavgw
push
add
inc
mov
xchg
mov
aad
outsb
xlat
mov
pop
imulb
or
or
jb
sub
xchg
lock
stc
test
test
imul
xor
push
sbb
mov
xor
pop
adc
push
sbb
js
push
sub
mov
sbb
push
or
arpl
mov
cmp
push
shll
ret
imul
lahf
add
cld
adc
and
pop
sbb
lds
sbb
cmpsb
and
or
sbb
pop
pushf
mulb
or
fldt
mov
add
adc
in
negb
test
jg
mov
in
std
fadds
jg
sbb
push
jne
mov
test
lods
pop
xchg
mov
pop
jg
or
and
xchg
outsl
cmpsb
lcall
dec
push
testb
cmp
and
addb
das
jo
pusha
xor
divb
test
mov
popa
or
mov
fcoml
xorl
cmc
mov
aaa
sub
imul
shrb
lret
fwait
test
jmp
jnp
out
sub
pop
add
outsb
add
outsb
jbe
inc
xor
movsl
pop
lods
xchg
lahf
call
fwait
mov
insb
add
lret
pop
sub
repnz
adc
dec
loopne
or
fimull
and
jecxz
sub
into
sub
loope
mov
outsb
mov
pop
or
mov
sub
cmp
ljmp
adc
pop
das
dec
mov
push
das
ret
jno
jge
pop
push
mov
cmp
jbe
sbb
loope
loopne
mov
pop
push
add
push
xchg
pop
jge
cmp
or
push
xchg
cs
adc
jmp
fwait
mov
add
repnz
enter
and
push
mov
pop
mov
loop
jbe
in
popf
out
les
int3
mov
fwait
aas
pop
in
mov
out
xor
or
movsl
pop
jp
jb
mov
movsb
jl
int
scas
popa
dec
cmp
lret
or
jb
adc
pop
addl
xchg
mov
outsl
or
aas
imul
cmp
xor
int
mov
jmp
xor
aas
aas
inc
fxch
and
push
roll
test
xor
lock
cmp
cmpsl
xlat
repnz
dec
xor
test
roll
mov
mov
push
insb
lock
roll
jcxz
loope
sti
xchg
pop
or
in
test
aas
mov
mov
pop
dec
das
fnsetpm(287
sbb
jp
xor
mov
xor
push
cmp
mov
cmp
ret
xchg
sbb
daa
add
dec
gs
inc
push
je
aaa
mov
pop
enter
jp
loopne
leave
nop
lods
orl
lret
stos
mov
jae
add
aam
cmp
add
js
test
jno
sahf
mov
ja
pusha
sbb
stos
dec
dec
out
in
mov
push
push
pusha
and
cmpsb
jae
add
data16
outsb
or
shlb
inc
mov
add
xor
enter
adc
jnp
sub
jbe
cltd
int
adc
lods
sbb
cmp
push
mov
insl
push
iret
dec
fisubrl
push
cmpsb
mov
xor
or
prefetchw
sbb
push
rcll
cmc
xchg
pop
jp
push
ds
xchg
loop
or
or
shll
subl
mov
sub
fadd
push
jge
clc
push
shlb
push
or
xor
mov
xlat
jns
out
lds
in
inc
fiaddl
mov
test
sub
int
scas
xchg
in
xchg
call
sahf
test
xchg
jmp
inc
mov
mov
arpl
out
add
sub
mov
adc
ret
pop
jno
xchg
in
xchg
andb
add
push
std
jne
pop
xchg
add
inc
arpl
cwtl
pop
imul
ss
cmp
stc
shll
lds
sbb
push
mov
mov
dec
lock
dec
jbe
iret
sub
js
mov
pop
jne
add
arpl
lock
or
out
ret
inc
aas
out
dec
inc
test
lret
aam
adc
inc
jle
stc
int3
lods
xchg
push
push
rolb
jno
mov
dec
pushf
jno
dec
mov
gs
lahf
out
jb
push
js
pop
cwtl
fucomi
sub
jecxz
add
jg
movq
sub
xchg
pop
fdivrl
lret
mov
frstpm(287
xor
pop
std
push
icebp
cmp
xor
sub
repz
or
mov
sbb
hlt
inc
in
call
lret
cmpl
adc
and
pop
ror
mov
mov
mov
cld
popa
cmc
mov
out
xchg
lcall
jmp
mov
test
in
scas
imul
push
pop
sub
jle
push
xor
cmc
outsl
pop
xlat
out
jb
and
mov
or
test
sbb
pmuludq
xchg
inc
pop
ja
jno
pop
les
subb
or
fbstp
push
jmp
fstpl
sti
loopne
sbb
test
nop
cmpsl
iret
mov
jg
jne
insl
adc
rclb
xchg
xchg
or
sbb
idivl
adc
mov
push
lret
mov
fmuls
shr
jns
lret
fiaddl
or
add
pop
mov
jge
adc
bound
pop
sub
sbb
lcall
and
push
jecxz
push
in
iret
xchg
aaa
mov
movsb
sbb
or
lds
sub
push
imul
push
xor
test
dec
push
xchg
loop
in
imull
retw
stc
ds
stos
jns
cmpsb
and
ret
out
xchg
mov
stos
in
add
pop
imul
mov
or
pop
inc
inc
int
mov
fs
sub
mov
dec
arpl
ret
mov
imul
mov
xchg
or
outsl
icebp
pop
scas
stos
mov
and
test
out
push
jbe
sbb
mov
ljmp
pop
fisubrl
mov
jbe
jg
into
cli
xchg
cwtl
insb
into
es
cwtl
outsl
lock
cmp
das
ret
test
mulb
sub
dec
jle
cs
ret
jb
dec
clc
mov
gs
xchg
xchg
push
mov
scas
adc
sahf
cmp
divl
xor
push
xor
xorl
adc
xchg
pop
daa
std
xchg
and
and
pop
push
fisttpl
sub
cs
sbb
loopne
mov
inc
fcoms
popa
js
imul
ja
xchg
adc
outsl
addr16
pop
test
cmpsl
into
jbe
sti
xchg
cld
push
fisubrl
in
and
jns
je
sahf
fldl
notl
test
inc
scas
and
ss
adc
mov
cltd
cmp
mov
jb
xchg
mov
popf
jne
mov
mov
ret
xor
in
iret
lods
cmp
std
imul
inc
jmp
pushf
div
leave
mov
cli
pop
or
jl
lods
adc
scas
xor
repnz
xchg
iret
add
and
shl
inc
addl
push
in
lret
and
jo
adc
rcrl
lret
lret
loop
dec
sbb
popa
pop
cmp
fisttps
pop
cmpsb
test
or
xor
push
fcomps
or
out
sbb
fstps
sbb
in
test
adc
jg
adc
lahf
paddusw
mov
adc
jnp
sahf
sub
jns
xchg
imul
int3
shll
inc
clc
push
sar
lret
stos
outsl
and
xchg
mov
sub
dec
in
popa
xor
in
dec
inc
xchg
jmp
roll
rol
add
cwtl
subl
adc
sbb
add
push
jns
inc
dec
cltd
loop
pop
mov
hlt
jns
mov
adc
push
jl
mov
xor
jo
lods
mov
jb
das
in
dec
mov
xor
add
and
fs
dec
push
mov
and
and
out
icebp
dec
xchg
mov
push
bound
pop
jb
into
add
sti
data16
iret
add
lock
jmp
out
mov
push
cs
je
adc
sub
jae
orl
std
fstp
sbb
scas
pop
push
mov
inc
xchg
dec
and
mov
rorb
pop
shlb
mull
inc
sbb
arpl
movsb
jecxz
test
mov
cli
in
ljmp
inc
mov
cmp
dec
ret
mov
test
mov
push
jb
mov
test
test
xchg
inc
stc
inc
fisubs
flds
iret
stc
or
rcrb
jle
fs
rcr
jae
mov
mov
sub
roll
fnstsw
in
or
fsubrs
inc
jae
cs
dec
outsb
jb
push
decb
add
leave
sbb
pop
mov
test
testl
out
fnstsw
aad
movsb
push
loop
js
sarb
imul
mov
lods
mov
and
insb
test
push
xchg
shll
jmp
aaa
mov
sub
sbb
push
add
ret
adc
out
jg
hlt
sub
lods
dec
push
mov
add
outsb
mov
outsb
sub
hlt
test
shrl
stc
pop
inc
mov
pop
pop
inc
dec
int3
popa
stos
jne
push
std
mov
adc
sub
or
and
jecxz
clc
and
xchg
add
adc
xlat
sub
xlat
fisttpl
adc
xchg
nop
xchg
mov
mov
test
int
jmp
sbb
dec
pop
fistpl
jge
adc
and
insl
ss
fs
sbb
xchg
lods
fsubs
mov
mov
xchg
mov
addr16
loop
es
fwait
in
out
notl
sub
lods
aad
orl
stos
xchg
push
inc
ret
adc
cs
inc
xor
in
stos
cmpb
outsl
xchg
fildll
inc
mov
lock
jae
into
stos
inc
xchg
mov
bound
sarl
mov
icebp
add
outsl
loop
rolb
fcoml
sub
jbe
jg
xor
cmp
push
lret
enter
jae
inc
xchg
cli
bound
aam
into
lock
mov
dec
fbld
aam
xchg
jmp
inc
xchg
js
popa
mov
pop
repz
imul
ret
push
ds
arpl
jle
push
dec
cmp
stos
popa
idivb
orb
cmpsb
rolb
add
test
fsubrl
jge
outsl
cs
xlat
sti
pop
jno
push
mov
int
or
test
xor
rcrb
call
mov
cwtl
pavgw
adc
push
out
inc
xlat
fcoms
add
les
into
scas
xlat
lock
stos
cli
dec
or
fldl
ret
dec
movsl
push
sti
dec
mov
inc
ss
scas
push
test
test
dec
sub
jo
cmp
jg
popf
lahf
test
adc
std
or
ja
mov
mov
lret
push
imul
cmp
mov
push
dec
rcrb
je
xor
into
mov
out
add
push
mov
es
xchg
arpl
shll
gs
pop
out
and
inc
sbb
int3
fnstenv
cwtl
pusha
mov
sub
hlt
out
or
lods
ret
imul
push
repz
sti
push
adc
aam
mov
jae
std
mov
xlat
das
pushf
cmpl
mov
xchg
add
push
movsb
xchg
mov
fcoml
lret
or
sub
xchg
xor
mov
push
or
or
xchg
fiadds
stos
test
adc
daa
pusha
movsb
sub
pop
das
pop
mulps
cmp
and
sbb
jp
fbld
add
cmc
adc
aam
mov
mov
gs
fwait
hlt
hlt
scas
and
imul
test
stc
xor
cmp
in
repz
aas
mov
sbb
popf
cmc
push
xlat
lock
arpl
loop
ror
lret
bound
dec
jl,pt
mov
xchg
aas
cltd
in
fmull
test
pop
daa
aam
sbb
push
lods
sub
jecxz
in
jge
lock
sub
jns
push
aas
les
stos
inc
ss
bound
popa
xor
xor
add
xorb
stos
loopne
pop
int3
dec
jmp
filds
xor
pop
dec
or
les
jns
imul
decb
mov
sbb
out
add
cmp
push
dec
mov
hlt
cmp
cmp
cmc
mov
mov
add
cmpsb
or
jns
lcall
add
push
scas
rep
and
pop
push
xor
aas
pusha
sub
rcrl
cmp
rorb
push
mov
xchg
xchg
leave
pop
pop
xchg
jl
jne
nop
dec
aam
inc
lret
push
std
rorl
mov
test
movsb
xchg
cli
ljmp
insb
cmp
test
jns
push
lock
call
es
adcl
ja
cwtl
lods
call
or
mov
jl
fiadds
fwait
sub
or
aam
mov
addl
sarl
dec
nop
jg
inc
call
jp
or
mov
cs
inc
mov
cmp
push
cli
dec
sub
add
cs
icebp
stc
lret
fucom
ds
cwtl
scas
lea
jbe
and
orl
push
and
call
cmp
lcall
adc
inc
cmp
mov
mov
dec
cmp
sub
xor
inc
add
outsl
fnstcw
sub
mov
mov
jbe
or
push
adc
rolb
test
mov
inc
adc
push
insl
fs
jo
jbe
lock
xlat
arpl
push
mov
jbe
mov
negb
popf
dec
rorl
jl
mov
inc
cli
test
ret
jmp
inc
pop
fisubl
sub
jmp
lods
jo
scas
pop
xor
push
fsubrl
rclb
adc
jmp
stos
das
test
push
sub
mov
fistl
jg
nop
dec
sub
mov
addr16
clc
sbb
jl
testl
call
repnz
lret
jbe
or
pop
ja
out
mov
push
adc
repz
mov
pop
mov
call
pop
lds
ss
and
xor
xchg
stos
jb
jecxz
add
mov
pusha
and
xchg
dec
loope
push
int3
sti
pop
sbb
add
mov
cs
daa
sub
xor
xor
loop
or
stos
pop
mov
pushf
fisubl
mov
aas
xlat
cmp
pop
pop
add
cmpsb
out
and
add
dec
add
sarb
cmp
mov
jbe
stc
mov
sbb
sbb
lock
or
inc
popa
and
adc
push
cmp
cmpsl
xchg
je
cmc
rclb
iret
fadds
push
jg
sbb
cltd
js
ret
cmp
pop
bound
inc
pop
push
je
sti
lahf
ret
mov
cltd
lods
xchg
jmp
frstor
pop
and
aaa
pushf
rol
in
xor
lea
cmc
sbb
pop
dec
iret
inc
ljmp
loope
stos
fildll
loope
lret
or
shl
cmp
in
cmp
xchg
mov
pop
mov
std
call
lods
mov
inc
jae
mov
popa
fwait
adc
cmp
push
sbb
xchg
cs
jbe
push
and
jo
lods
imul
push
lret
mov
inc
cmpsb
insb
pop
stc
imul
xchg
popa
popf
mov
roll
jne
and
inc
popa
mov
cmp
mov
push
inc
das
jnp
sub
lods
mov
sbb
outsl
push
into
add
cmp
dec
stos
cmp
and
jl
push
mov
push
mov
or
xchg
pop
ret
fcmovnb
dec
sbb
mov
inc
push
push
sbbl
repz
pop
mov
loope
in
fwait
jmp
dec
popa
jno
lret
aaa
adc
adc
lret
std
dec
and
xor
jmp
bound
jnp
dec
push
repz
test
bound
cmp
sbbl
ds
rcrb
rcrl
xor
dec
push
mov
fistl
dec
push
mov
out
rolb
ss
mov
pusha
inc
ja
sub
mov
pop
adc
push
or
bound
stos
jge
and
dec
mov
cli
cmpsb
std
xlat
push
in
stc
mov
xchg
rcl
sahf
pop
lahf
lret
or
insb
roll
cmp
jno
and
mov
adcl
adc
fdivr
jmp
sub
call
bound
xchg
mov
sbb
jbe
lea
ss
int
testl
xchg
dec
mov
jb
mov
mov
fs
fisubs
jo
mov
test
bound
xchg
mov
inc
cmpsl
notb
add
xchg
repnz
call
sub
jns
push
cmp
push
xchg
sub
xchg
dec
addr16
or
mov
movsl
repz
cmp
insl
jmp
clc
call
jg
or
out
or
xchg
pop
fisttps
jecxz
ss
cwtl
and
mov
scas
ja
cmpb
sub
mov
repz
nop
cltd
jb
jae
aas
and
pop
scas
fbld
movsl
mov
lods
add
dec
jo
ficomps
dec
xchg
and
fildl
adc
jnp
jns
insl
add
push
imul
es
scas
adc
push
mov
shll
mov
adc
lcall
pop
xchg
push
mov
or
movsl
cs
imul
jecxz
push
mov
hlt
mov
out
ret
sub
insb
int
ss
add
cmovne
int3
xchg
nop
and
shr
pop
outsb
sbb
test
jns
pop
adc
lea
sbb
or
pop
sbb
pushf
ss
xchg
xchg
cltd
and
xchg
or
mov
dec
push
xchg
push
lret
jno
ljmp
sub
mov
ds
sbb
sub
sbb
aaa
adc
pop
xor
adc
fstpl
stos
sub
push
xor
xchg
jmp
out
xor
adc
arpl
cmpsl
nop
movups
and
in
mov
mov
mov
cli
dec
jg
mov
xchg
cs
pusha
and
xchg
add
inc
data16
pop
push
cmpsb
push
aaa
pop
scas
or
cmpsl
aaa
mov
sub
jno
sbb
jl
loopne
inc
push
clc
sub
clc
mov
lea
push
aam
cmp
push
adcl
int
push
movsl
xorl
lret
loop
pop
xor
arpl
iret
and
jbe
cmpl
insl
dec
jbe
pcmpgtw
mov
or
test
push
push
pusha
mov
inc
dec
imul
add
sub
int3
fists
idivb
inc
adc
cmp
pusha
sbb
stos
les
and
insl
fidivl
push
jne
aaa
lds
repnz
loop
cmp
adc
jecxz
sbb
xor
cli
out
sahf
add
xchg
and
adc
je
std
lods
sahf
dec
out
daa
addl
scas
add
jns
das
push
scas
lea
fs
fisubrl
lods
pop
pop
jne
fsubl
les
sti
push
js
fbstp
mov
xor
stos
mov
stos
cs
mov
xor
ds
lods
lret
insl
stos
pop
cmp
outsb
cmc
mov
bnd
mov
pop
xchg
subl
shrb
rorl
mov
ja
leave
mov
xlat
xor
mov
mov
js
jnp
cld
inc
stc
mov
lret
pop
imul
dec
sbb
xor
xchg
aad
out
lahf
lret
daa
ljmp
sahf
jmp
xor
lcall
lahf
les
inc
cmp
mov
loopne
pop
mov
jne
mov
fadds
dec
or
aaa
loope
jns
fdivp
xor
fisttpl
mov
push
mov
fiadds
loopne
mov
xchg
jne
fbld
mov
mov
incl
mov
ja
sub
push
jno
pushf
aas
leave
fsts
fisttps
in
inc
rorb
mov
cli
cmp
fwait
popa
out
add
stc
lahf
inc
mov
lods
cmp
daa
xchg
push
aam
jns
test
push
jne
lret
dec
push
cld
pop
fdivrs
push
out
jp
sbb
sub
pop
loopne
cmpsb
sbb
mov
cmp
aam
dec
mov
dec
and
bound
sbb
jno
cwtl
cmc
loopne
mov
out
push
scas
lock
scas
push
xor
out
jmp
adc
lods
jle
lea
mov
adc
je
cmp
pushf
mov
or
mov
xchg
xchg
xchg
add
sbb
push
int3
popa
push
pop
xor
mov
add
push
addr16
mov
mov
mov
xchg
fildl
mov
adc
jns
bound
adc
dec
and
add
in
pop
cmc
mov
add
sbb
neg
mov
push
pop
pop
lret
mov
lds
adc
ret
cmc
xlat
pop
or
ljmp
jb
repnz
push
and
frstor
mov
aad
fiaddl
mov
imul
enter
icebp
mov
into
in
dec
inc
adc
mov
cltd
pop
data16
arpl
jecxz
push
dec
fprem
fisttps
sbb
std
sarb
ja
cmp
loopne
cld
int
loop
and
clc
cld
add
and
inc
jno
jl
push
push
jmp
fisubl
enter
dec
fs
inc
adc
insl
mov
inc
or
popa
sti
addr16
leave
add
jo
pop
pop
out
inc
idivl
mov
aad
das
lods
es
dec
movsl
cmp
and
xchg
xchg
mov
dec
mov
mov
or
hlt
imul
mov
test
xchg
pushf
mov
imul
push
push
inc
faddl
adc
xor
adc
and
decb
jecxz
lret
push
call
ret
mov
mov
push
sbb
mov
and
mov
and
nop
dec
loopne
js
dec
mov
pop
movsb
adc
mov
aas
ljmp
stos
xchg
repz
popa
je
jp
pop
rclb
dec
rcll
mov
cmp
rclb
std
shl
xchg
sub
mov
jae
cmpsl
xor
sub
gs
mov
std
or
sbb
popa
push
cmc
push
insb
pop
add
push
pop
xchg
pop
jno
mov
mov
scas
inc
inc
testb
movsb
push
cli
js
or
push
out
out
push
es
sarl
inc
scas
outsb
sahf
testb
in
dec
jnp
jmp
outsb
out
mov
inc
cltd
stos
stos
js
scas
cwtl
rcrb
push
sbb
les
lods
mov
fsub
jb
jg
loope
or
cwtl
mov
mov
push
mov
push
cmp
jns
lret
dec
pop
lret
icebp
aas
and
or
clc
xchg
in
out
sub
or
test
xor
xchg
outsb
aas
pop
out
test
adc
test
inc
sbb
pop
mov
dec
jp
in
leave
pop
mov
das
sbb
fadds
clc
pop
pop
lret
pop
xlat
clc
dec
xor
pop
loop
iret
or
push
std
push
and
jecxz
cmp
outsl
shr
or
stc
cmovl
push
push
inc
pop
cmpsl
cmp
insl
mov
mov
adc
mov
add
mov
das
jge
sub
xlat
mov
in
mov
push
jns
dec
pop
push
ror
cs
mov
pop
mov
pop
sbb
rcrb
cmp
inc
mov
mov
in
ficoms
fisubrl
mov
mov
addl
outsl
add
jae
ret
mov
ss
call
jl
mov
loope
or
sarb
sub
es
mov
aad
sbb
loopne
mov
mov
mov
shll
clc
cwtl
mov
mov
xchg
and
call
repz
fwait
stos
mov
or
jns,pn
stos
sti
out
mov
cmp
sbb
js
in
jo
outsb
out
outsl
ret
outsl
fcomps
aad
adc
adc
xchg
testb
pop
and
push
jecxz
pop
ret
and
or
rcrb
cmp
cmp
push
repnz
inc
dec
push
mov
cmpl
cmp
mov
loop
mov
sbb
pop
movsb
jno
inc
sbb
rorb
hlt
sub
icebp
mov
mov
dec
pusha
cld
jns
mov
pusha
jbe
dec
push
and
aam
push
hlt
out
xchg
jg
sbb
js
aaa
xchg
mov
push
jb
mov
cmp
cmp
push
loope
pop
mov
mov
push
fiadds
pop
daa
fadds
pop
push
mov
loop
cmp
or
pop
test
pushf
out
jae
in
jmp
push
shrb
cmp
outsl
or
test
push
pop
xchg
icebp
push
xor
cltd
sub
or
pop
fstps
sbb
ljmp
fnsave
push
popa
jmp
js
lock
dec
and
out
mov
aad
loop
xor
out
xor
xchg
shll
dec
iret
movl
scas
mov
lret
dec
inc
cmp
fisttps
lods
lcall
bound
push
sarb
adc
out
sub
jmp
popa
mov
dec
leave
sub
mov
adc
cmp
les
lock
cmp
sub
sub
into
sbb
lret
fnstcw
aam
in
test
or
pushf
test
fsts
push
mov
lret
test
adc
enter
shlb
xchg
xchg
rsqrtps
pop
push
pop
insl
adc
popf
movsb
stc
push
sbb
mov
daa
pop
arpl
lahf
dec
add
add
fldl
push
jne
mov
mov
rol
insb
je
mov
jbe
sbb
pop
xor
fldl
or
test
mov
das
scas
int3
or
sbb
ja
jae
sub
mov
and
ljmp
repz
cld
dec
pusha
movsb
mov
fnsave
sbb
dec
adc
in
adc
inc
xor
arpl
mov
gs
inc
imul
push
cmp
cs
sub
out
in
aaa
cmp
push
and
cltd
mov
hlt
xchg
and
imul
cltd
leave
rcr
out
xchg
mov
mov
mov
mov
pop
enter
flds
aas
fst
aam
ja
jge
xor
mov
sar
push
xchg
add
xchg
push
jecxz
and
push
repz
jge
scas
lea
sbb
add
xchg
test
mov
andb
add
nop
inc
sub
in
dec
lcall
and
sub
sub
add
mov
jecxz
pop
xor
adc
dec
sbb
push
jmp
jb
inc
js
sahf
mov
or
movsl
xchg
mov
enter
out
mov
and
push
rolb
push
push
pop
es
insb
adc
xchg
lret
nop
sbbb
mov
mov
and
push
adc
lods
inc
imul
jle
or
and
jge
mov
int3
jno
adc
dec
mov
mov
int
testl
mov
or
mov
loop
outsl
faddp
jns
aaa
push
lea
cwtl
insl
sub
imul
cs
jno
and
lahf
mov
mov
pop
pushf
insb
sub
xlat
loope
inc
adc
xchg
mov
or
or
fildll
repnz
mov
loop
dec
lcall
imul
rcl
adc
dec
xchg
inc
out
adc
inc
sub
add
das
sbb
sbb
subb
test
jecxz
imul
aam
std
iret
xor
inc
outsb
clc
stos
ss
mov
sub
cs
rolb
mov
pop
or
xor
jns
cmp
mov
out
adc
push
mov
xor
mov
add
addr16
scas
mov
adc
orb
lock
sbb
scas
jnp
xlat
out
jecxz
sub
jb
adc
sahf
sbb
aad
push
cmp
cmc
nop
and
stos
or
test
inc
mov
fstpt
fidivrs
popa
adc
sub
xchg
shlb
in
outsb
fcoms
stc
cmp
adc
pop
sti
stos
outsb
shl
scas
inc
mov
popa
cld
mov
sub
or
mov
pop
push
test
out
xchg
xchg
adc
push
mov
xchg
lea
mov
xlat
sbb
das
mov
aad
call
addr16
push
cmp
xchg
test
mov
dec
xchg
jg
lds
out
pop
or
movsb
sbb
xchg
in
arpl
rep
aas
das
enter
and
jo
sub
faddl
aam
mov
and
negl
dec
pop
dec
xor
mov
inc
mov
setge
jl
enter
push
mov
xor
jno
cli
lret
dec
mov
call
movsb
sbb
adc
fiaddl
push
fildll
dec
adcb
popf
divl
cli
or
popf
lods
stos
mov
into
call
add
and
mov
add
or
pop
rdpmc
lret
leave
stos
dec
sub
xchg
daa
lret
sahf
mov
mov
add
and
scas
cmp
dec
jb
sub
push
data16
sbb
fstpt
cmp
xchg
xchg
jns
xchg
mov
add
xchg
and
sbb
push
fbstp
jns
ja
out
aam
xor
xor
xchg
aas
mov
into
lcall
dec
ss
adc
inc
push
in
sub
adc
int
es
test
jae
sbb
push
push
pop
push
lods
dec
mov
out
or
mov
jl
hlt
xchg
jbe
fsubl
sarl
daa
inc
nop
rorb
jno
adc
xchg
lods
insl
jle
in
lret
ret
shrl
pop
js
mov
int3
jle
imul
inc
lods
lea
movsb
in
divb
ss
xor
xchg
mov
add
dec
testb
adc
dec
je
ret
jge
sub
stos
inc
mov
or
fdivr
ljmp
loope
push
retw
sub
xchg
out
ja
pop
dec
dec
mov
or
test
sbb
hlt
std
and
inc
mov
pop
fdivs
pop
mov
mov
ds
mov
or
mov
jnp
jno
test
and
cmp
xor
mov
sahf
mov
pop
imul
insl
and
cmp
xor
fistpl
fs
cmpsb
iret
rorb
popf
out
dec
test
add
cli
insb
jbe
adcb
outsb
mov
sti
xchg
insl
xchg
add
inc
ja
xchg
jge
div
popf
mov
jle
jno
mov
inc
jne
repz
inc
push
lds
mov
int3
arpl
cmp
dec
fcmove
test
push
add
enter
xchg
out
ret
call
jne
jge
or
bound
int
insb
insb
lret
fwait
jg
xchg
sbb
inc
jb
mov
gs
mov
negl
push
cli
outsl
cmp
cmp
add
sahf
xchg
in
push
ss
insl
movsb
push
push
jmp
or
dec
int
cmp
dec
test
outsb
shll
jle
ror
mov
mov
or
insl
in
jecxz
adc
into
xchg
push
test
dec
pop
xor
jg
cmp
iret
and
cmc
iret
mov
sub
xor
cmp
icebp
lods
mov
jo
ja
in
cmp
shll
and
inc
mov
stos
push
inc
jae
or
out
sbb
jns
and
fistl
lods
cmp
outsl
mov
add
push
popa
lcall
push
mov
pop
jno
and
stos
sbb
sub
rorb
fsubrl
inc
mov
les
in
test
inc
mov
into
sub
notl
cmp
sub
jae
repz
sub
lahf
lods
imul
xor
fmull
mov
not
stos
dec
inc
add
sbb
cmpsl
cmp
sub
inc
mov
lds
test
inc
mov
sbb
lds
fistps
sbb
fldt
repnz
or
and
xor
and
test
lcall
cmp
add
dec
mov
push
jne
pop
mov
loopne
enter
pusha
mov
fsubrs
addb
push
call
out
cmc
cmc
xchg
lods
lods
enter
sub
jmp
sbb
mov
mov
push
push
inc
pop
inc
xchg
lds
cmp
jne,pt
rcll
daa
cltd
rorb
xor
stos
and
rol
pop
adc
stc
scas
jns
push
xchg
pop
mov
xchg
pop
dec
sbb
fs
pop
pop
lods
scas
loop
ljmp
mov
sbb
inc
arpl
inc
xchg
bound
adc
test
mov
shrl
add
push
cmp
adc
xlat
in
in
cltd
sahf
subps
push
cmp
leave
inc
mov
lret
aas
aas
jb
cmc
mov
jmp
jo
movsb
jb
push
pop
mov
jl
mov
add
xor
in
mov
mov
xor
or
in
mov
inc
xchg
or
jno
jl
mov
jnp
sbbl
fcmovnbe
shl
mov
jge
lcall
stos
sub
loop
jae
out
mov
ret
push
mov
iret
add
aad
xor
mov
fsub
mov
fadd
adc
jmp
int
inc
test
insl
mov
daa
cltd
push
dec
mov
inc
shrl
pop
loopne
push
xchg
cli
imul
stos
cmpsl
pop
sbb
cmpsb
cmpsb
or
test
fsubr
insl
mov
cwtl
scas
jne
shrl
sbb
mov
add
jmp
les
fistl
push
mov
shlb
test
shll
orl
dec
rcl
xor
lahf
sbb
test
dec
in
or
insl
cmc
push
inc
mov
mov
pop
nop
cmp
outsb
insl
push
repz
repnz
xor
outsb
pop
dec
mov
in
jge
fidivrs
test
inc
pop
and
popa
loop
push
jp
test
icebp
mov
fidivl
jg
push
iret
push
stos
mov
sti
mov
cmp
pop
lea
sti
or
out
stc
dec
lock
inc
iret
mov
fisttpll
cmc
mov
pop
rcl
jne
add
test
dec
ds
push
mov
xchg
mov
xor
xor
jmp
mov
popf
dec
add
scas
fcomps
jp
push
pop
push
adc
lock
repz
mov
xchg
scas
pop
call
std
pop
dec
movsb
data16
lcall
adc
pop
add
push
clc
cmp
cmp
hlt
sahf
ljmp
push
pop
sbb
jg
sub
xchg
std
inc
mov
sub
or
or
les
jb
les
loop
fbstp
adc
rol
jbe
mov
sahf
enter
mov
inc
adc
stos
jmp
pop
inc
ljmp
rep
sti
jns
and
push
cmp
daa
les
psrld
inc
jae
std
add
mov
and
inc
mov
adc
shrl
iret
pop
cmc
push
pop
pop
sub
mov
dec
addl
shrl
jmp
cmp
mov
inc
data16
outsl
data16
xor
sub
js
das
icebp
mov
cmpsb
lods
scas
lds
xor
jnp
mov
xorl
xchg
mov
adc
inc
ljmp
mov
sub
fwait
sub
jno
adc
lahf
xchg
subl
stc
and
mov
xor
movl
mov
and
and
orb
mov
inc
sub
fisubs
mov
out
pushf
daa
adc
xor
push
repnz
push
inc
popa
lods
addr16
xchg
loopne
sub
cmp
mov
xlat
jne
scas
mov
imul
ret
mov
dec
les
pop
scas
das
lcall
sbb
xchg
or
icebp
lcall
push
mov
add
jecxz
sbb
movsb
stos
les
mov
push
aaa
inc
aam
out
lcall
sbb
test
push
or
sarb
cwtl
enter
sub
aas
fwait
lret
pop
push
lcall
cmp
pop
dec
push
insl
inc
mov
cmp
ja
lret
outsl
outsb
jno
jbe
pop
push
add
mov
dec
call
in
inc
fldln2
dec
rclb
ja
push
or
mov
or
int3
jecxz
adc
frstor
stos
push
mov
loope
sbb
jo
jle
pop
int
sbb
loopne
iret
mov
mov
xor
loope
mov
push
movsl
inc
or
cmp
test
je
andl
lods
sbb
jns
ljmp
int3
cmp
dec
js
sub
fisttpll
mov
movsl
jnp
call
or
and
pop
mov
push
inc
push
lahf
sarb
mov
pusha
sahf
ds
cmp
fstps
fnstcw
in
shl
pop
cmp
cmp
aam
ret
push
or
lods
dec
mov
gs
cwtl
dec
les
rcl
push
test
loop
cmpl
cwtl
insl
pop
pop
scas
adc
xor
mov
fs
enter
das
fwait
pop
daa
sahf
push
or
test
sarl
add
push
cmp
xchg
lods
sarb
xor
fucomi
lahf
shll
jecxz
inc
and
xchg
movsb
xchg
jns
jmp
sbb
out
cmp
ret
ficoml
cld
mov
xchg
pop
cmp
jle
fnstenv
and
mov
sbb
pop
sub
daa
pop
rorb
jmp
leave
xchg
mov
sti
mov
sahf
lock
cwtl
or
icebp
and
cmc
sub
xchg
arpl
and
in
imul
loop
mov
xchg
pop
lret
rolb
dec
mov
jae
hlt
add
xchg
sub
cmp
dec
and
inc
xlat
cmp
aaa
mov
jb
push
jecxz
repz
jmp
out
loope
cli
addr16
jle
or
les
push
ljmp
inc
int3
mov
jl
adc
mov
test
stos
cmp
or
sub
lret
mull
jl
rcrl
dec
push
into
lds
movsb
movsb
insl
outsb
iret
jg
mov
mov
push
push
cmp
loope
jbe
pop
inc
xchg
ljmp
mov
and
loopne
mov
mov
xchg
aam
xchg
in
dec
repz
shlb
mov
into
mov
incb
mov
pop
ficoml
out
fists
push
xchg
ret
push
shll
push
mov
fadd
in
push
clc
mov
dec
adc
mov
cmp
addl
xchg
xor
out
inc
push
fbstp
outsb
xorb
popf
sbbb
xor
cmpsb
ja
xor
dec
pop
fdiv
dec
je
mov
aas
push
jge
ss
subl
rolb
insl
xchg
jmp
mov
sbb
dec
data16
and
aaa
lret
add
mov
into
mov
mov
jge
int
cmpsl
hlt
and
fwait
in
lds
xor
xor
aas
lcall
jg
or
ljmp
inc
cmp
dec
lea
lods
sub
fwait
jno
xchg
push
pop
into
outsl
roll
loop
lcall
shlb
ds
repz
mov
outsl
jae
scas
mov
lret
gs
dec
jbe
jp
jb
xor
incb
inc
dec
addr16
scas
sarl
push
dec
push
cltd
lret
out
in
inc
daa
pusha
or
inc
dec
je
adc
inc
jno
mov
stos
inc
add
push
imul
test
mov
sub
cmp
mov
aaa
sbb
cld
mov
iret
jge
loope
cmp
fstl
dec
push
sub
out
cmpsl
inc
cmp
adc
lret
ret
int
mov
hlt
and
jno
pop
xchg
sbbl
jl
jo
jb
pop
cmp
mov
push
aaa
mov
pop
pop
push
sbb
hlt
loopne
pop
bound
movsl
xchg
cmp
leave
loop
and
jb
add
or
ss
xchg
in
shrl
xor
loopne
cs
and
or
out
mov
sub
sub
fidivl
xchg
mov
sbb
loopne
lcall
cwtl
push
subl
xlat
repz
insb
push
ret
test
dec
cwtl
leave
fisubrs
call
mov
ja
mov
aad
fisttpl
cmp
push
inc
push
mov
jno
xlat
arpl
cli
push
dec
push
repz
dec
aad
push
mov
leave
push
rcr
subb
popf
dec
or
pop
sbb
jp
iret
mov
aam
fadd
orl
pop
enter
dec
or
cltd
jno
aas
out
cmp
push
lea
adc
xor
lcall
ret
mov
sbb
out
mov
mov
cmp
sbbb
mov
or
push
negb
inc
repz
repz
addr16
cmp
and
adc
lcall
fisubrs
mov
sub
jnp
inc
ja
pop
mov
xlat
sub
adc
cltd
mov
pop
out
push
or
jmp
daa
call
sbb
adc
and
addr16
or
dec
and
dec
popl
jl
adc
lds
inc
adc
cltd
xchg
arpl
xchg
push
lahf
mov
xchg
imul
mov
fsubrs
movsb
or
ret
imul
cli
enter
out
add
mov
nop
movsl
xchg
lods
in
cmp
sarb
sbb
xor
lods
and
sbb
lock
enter
inc
arpl
adcl
jmp
in
mov
and
fmull
mov
lret
rorb
inc
movsb
sub
add
push
and
mov
cmp
imul
arpl
loopne
or
into
arpl
movsl
mov
popf
or
add
lock
adc
jge
xchg
mov
loope
xchg
jle
negb
aam
es
add
fisubs
jo
pop
fdivr
fwait
leave
mov
push
cwtl
inc
and
inc
push
inc
pinsrw
aam
xchg
or
lcall
in
repnz
add
mov
sahf
mov
ret
mov
out
test
pushf
pop
popf
mov
and
negb
pop
pop
in
jecxz
or
addb
mov
out
mov
dec
fdivrs
loopne
xor
nop
sub
push
fsubs
adc
mov
jecxz
sbb
jmp
stos
gs
cli
add
shlb
pop
pop
mov
push
call
lock
sub
js
mov
pusha
jb
js
addr16
ja
stc
lret
cmpsb
icebp
mov
mov
popf
fimull
addr16
mov
mov
test
sbb
sbb
cmpsl
stc
jmp
sahf
lea
data16
and
ret
aad
aam
add
hlt
lods
sbb
je
fdivr
into
cltd
pop
cmp
jmp
fstpt
loopne
lock
dec
jl
in
out
sbb
pop
rorl
mov
sbb
loop
inc
xchg
mov
cli
insb
push
scas
lods
sbb
pop
mov
sti
scas
xchg
inc
ret
add
pop
fidivs
clc
outsb
mov
xor
dec
fnsave
int3
ja
push
pop
pop
push
xor
adc
mov
cmp
pop
dec
mov
gs
je
popf
adc
sarb
mov
xor
sbb
bound
jle
xchg
lock
int
pop
outsb
enter
ss
cwtl
sbb
aaa
nop
sub
test
ret
in
jle
jbe
mov
jbe
mov
arpl
leave
push
or
testl
stc
push
mov
pop
iret
mov
in
mov
mov
mov
int
xchg
add
pushf
mov
outsb
xchg
lds
add
sarl
xor
lock
outsl
pop
rorb
fiaddl
in
mov
push
out
xchg
rclb
in
lds
ficoms
call
xchg
cmp
fmuls
add
sbb
lcall
in
xchg
or
insl
jnp
repnz
jnp
xchg
sub
xchg
mov
fcmovnu
lret
and
inc
mov
add
and
jmp
xchg
jb
loope
das
cli
and
sbb
mov
das
mov
mov
test
push
lahf
in
add
cmpsb
aam
pushf
pop
jle
scas
subb
imul
adc
out
mov
int
je
sbb
out
popf
ret
xor
mov
mov
mov
hlt
enter
data16
cmpsl
xchg
lret
test
mov
scas
mov
jecxz
xor
adc
cs
inc
mov
ret
mov
push
pusha
sbb
mov
mov
push
mov
push
jecxz
pusha
in
lds
xchg
std
jmp
sbb
ljmp
jg
mov
mov
iret
inc
and
xchg
push
mov
and
in
xchg
add
jns
or
mov
arpl
dec
ror
mov
sub
imul
xchg
icebp
dec
jne
inc
gs
into
je
mov
mov
aam
rorl
pop
fistl
insb
ret
stos
adc
pop
cmpsb
dec
cmpsl
pop
test
adc
addps
pushf
in
enter
call
rcl
lods
sub
xchg
jns
iret
bound
cmp
jnp
pop
stos
cltd
bound
enter
sti
push
inc
sbb
popf
fistpll
shlb
cmc
jae
add
mov
push
in
jmp
jmp
scas
std
sub
push
jno
mov
jae
inc
in
cmp
inc
or
inc
xor
loopne
mov
xchg
out
loope
xor
push
lahf
cmp
icebp
xchg
push
xchg
ljmp
nop
out
mov
mov
std
mov
sub
enter
outsb
push
cltd
jae
aam
dec
cmp
sub
inc
xor
lods
loop
lock
mov
pop
xor
and
or
movsb
add
js
push
cltd
mov
aad
xor
lahf
leave
rcll
fs
dec
or
mov
enter
addr16
add
in
gs
push
or
test
xlat
dec
int
rclb
sub
mov
ja
jae
jne
pusha
leave
popf
es
push
and
cmc
int
popf
aad
push
rep
sti
pop
mov
movsl
sub
sti
pop
and
in
adcb
int
xor
add
or
xchg
jg
push
adc
jg
fimull
aad
mov
inc
mov
enter
rcrl
sub
out
loop
push
mov
mov
fwait
scas
mov
sbb
xchg
sahf
mov
in
test
call
aad
sub
in
xchg
mov
leave
jns
fst
mov
insb
out
mov
jecxz
rcr
out
xor
or
leave
xor
out
jl
ror
xchg
mov
pop
int
mov
inc
test
mov
cltd
sbb
xor
sbbb
inc
mov
sahf
cmp
or
adc
nop
and
jecxz
xor
jns
add
test
pop
aam
jns
mov
or
mov
jge
es
mov
mov
dec
mov
ret
mov
xor
cmp
cmp
pop
jo
hlt
dec
and
iret
add
imul
sub
xchg
stos
adc
dec
push
cmp
sub
push
movsl
sbb
sub
adcl
call
pop
movsb
ret
test
aad
xchg
lods
adc
sub
test
pop
dec
test
fbstp
xor
cld
push
push
dec
xchg
sbb
fs
in
pop
js
dec
ljmp
xchg
jecxz
dec
sbb
pop
fisubrl
incb
jg
or
icebp
sbb
mov
out
or
insl
paddb
pop
rcrb
out
jno
scas
xchg
popa
adc
imul
mov
addr16
insb
add
and
int
sti
mov
or
jne
cld
enter
insb
hlt
mov
mov
pop
je
push
mov
sbb
inc
imul
in
aaa
adc
xchg
pop
jl
mov
jecxz
cmpsb
or
jle
or
mov
inc
pop
pushf
call
or
inc
push
jmp
dec
add
shrb
push
mov
pusha
dec
lea
push
je
or
out
aam
cmp
loop
cltd
fnsave
notb
cmc
cmp
xor
into
dec
and
cmpsl
xchg
and
adc
jg
push
orl
fwait
pop
jo
outsl
repnz
xchg
jg
inc
pop
sbb
ljmp
leave
and
or
loop
xchg
stc
adc
sahf
arpl
mov
sub
xchg
add
pushf
jb
jbe
insb
mov
sahf
stos
in
or
ja
push
lock
mov
leave
mov
lret
outsl
dec
mov
popa
dec
add
cmc
repz
outsl
pop
dec
movsb
cmp
mov
cmp
ja
fidivrl
pop
les
les
ret
repnz
repz
and
imul
lods
addr16
das
push
push
fidivs
es
sub
subl
add
cli
je
bound
jle
fadds
mov
pop
lahf
bound
mov
scas
jmp
orl
filds
jle
ja
jne
popf
jmp
aad
jge
rol
push
dec
inc
mov
dec
fbld
xchg
mov
mov
push
das
outsb
fdivp
jmp
aam
iret
jmp
ss
push
xchg
and
aas
jno
dec
pop
push
xchg
add
mov
xchg
outsb
lcall
push
shrl
dec
and
mov
adc
pop
add
mov
lods
lahf
mov
and
in
xor
xchg
jae
xchg
arpl
dec
arpl
xchg
pop
dec
xchg
jle
xchg
notb
int
push
ret
and
push
sub
repnz
inc
sbb
sub
lret
adc
jne
call
mov
lock
mov
lods
repz
imul
cmpsb
cmpsb
test
call
imul
mov
dec
lret
outsb
xor
fsubrp
and
and
xor
popf
dec
je
pop
mov
es
cs
popf
inc
add
lock
cmp
mov
mov
clc
mov
test
aas
scas
mov
pop
pop
ret
jecxz
sbb
mov
pushf
sbb
mov
nop
pop
jmp
out
pop
scas
daa
mov
mov
xor
jg
push
mov
stos
int
jns
mov
sbb
add
or
test
mov
mov
xchg
es
mov
and
loop
push
sub
cmp
xchg
pop
testl
xchg
fnstsw
cmpsl
cmp
fdivp
je
pop
lock
mov
or
outsl
sbb
call
and
sub
cmp
out
xor
sub
fs
aaa
adc
xchg
pushf
int
mov
xchg
pop
mov
jb
test
enter
mov
loop
jo
mov
je
lcall
loope
jmp
and
adc
cmp
subl
aam
jl
int3
lods
sub
popa
push
add
add
mov
out
inc
sub
pop
push
push
jb
cs
xchg
rorl
push
push
add
sub
rorb
mov
jecxz
inc
clc
out
ret
imul
pop
movl
fidivl
pop
mov
jle
fwait
sbb
push
ds
jg
mov
push
mov
out
xor
and
pusha
mov
add
bndstx
popa
add
inc
aas
cmp
jl
cmp
sub
gs
sbb
cld
mov
ret
pop
lret
mov
rclb
mov
jge
daa
aam
sub
ja
shrb
arpl
xor
pop
jb
or
arpl
mov
or
cli
rolb
scas
add
fdivl
mov
push
xchg
stos
mov
cmc
andl
sbb
and
push
mov
out
notl
cmpsl
xor
inc
cld
jns
sahf
jg
lods
xlat
movsl
mov
push
test
cmp
pop
roll
xchg
xor
cmp
push
lods
sbb
cmp
mov
adc
adc
fdivs
cld
mov
outsb
cmp
int
cld
inc
andl
push
mov
std
pop
mov
ja
out
ja
fcoml
mov
jge
sub
xlat
adc
and
repnz
dec
mov
xor
mov
stc
xchg
das
out
out
sbb
mov
and
outsb
inc
or
es
orb
xchg
fs
pop
push
clc
sbb
cmpsl
mov
mov
in
aam
mov
clc
shlb
inc
jo
jmp
add
jp
mulb
mov
inc
cwtl
ss
pop
dec
mov
lods
inc
dec
or
leave
insb
push
and
loop
adc
mov
mov
lods
cmpsl
cmp
scas
dec
fcoml
int
imul
ljmp
aam
pusha
pop
imul
popf
outsl
pop
clc
in
cmp
in
in
cs
add
and
iret
sub
mov
test
aas
mov
pop
insl
push
into
fimull
jns
nop
aam
add
shrl
jecxz
mov
outsb
cld
test
stos
xchg
mov
xor
jecxz
cmp
jg
aam
pop
fadds
popa
and
xchg
or
adc
mov
jmp
mov
enter
sub
sbbb
or
cmpsl
push
leave
imulb
aad
mov
addl
in
into
sub
pop
cmc
pop
dec
mov
mov
repnz
test
pushf
push
sbbl
and
clc
cltd
mov
js
int
cmpsl
mov
add
inc
push
hlt
push
in
data16
push
xor
ficoms
ljmp
sub
cmp
fnstenv
jns
add
out
mov
mov
popa
shlb
jne
dec
cmp
pop
out
and
negb
sub
leave
movsl
xor
dec
test
aas
and
jmp
inc
add
hlt
cmp
out
testb
mov
mov
xor
int
inc
dec
hlt
push
repnz
cld
ja
mov
jb
jnp
dec
movsb
shll
shrl
popl
inc
testb
sbb
fwait
inc
inc
inc
mov
jno
mov
cmp
jb
push
adc
adc
xor
inc
or
pop
and
xor
xchg
push
mov
movsl
movsl
test
sete
clc
pop
lock
mov
mov
pop
mov
mov
imul
jae
fldl
jno
jo
ret
mov
int
mov
int3
leave
mov
mov
cli
push
js
mov
out
std
icebp
icebp
cmpsb
sbb
movlhps
dec
mov
lret
mull
jns
jne
cmp
adc
decb
sbb
push
or
mov
mov
ret
mov
imul
movsl
ret
dec
mov
lock
fwait
lods
xor
push
mov
add
adc
hlt
dec
or
es
ret
xor
mov
xchg
mov
push
neg
cmp
push
loop
unpcklps
rcll
mov
loope
int
loop
mov
loop
sti
int
fadds
add
fimuls
dec
xchg
shl
push
cmp
pop
aam
dec
pop
mov
push
pusha
les
jmp
mov
inc
add
dec
cmpsb
sub
add
mov
xchg
cmp
sub
pop
xor
ds
dec
inc
bound
adc
jge
mov
add
pushf
inc
loop
mov
jl
lods
add
pop
add
sub
adc
push
and
daa
add
sub
sahf
vmovapd
fdivrl
mov
cmpsl
popw
or
inc
pop
mov
sbb
sbb
insb
xlat
pop
cmp
mov
and
int
mov
loopne
adc
ror
xor
xor
test
adc
cmp
mov
inc
add
cmpsb
inc
daa
fcoms
inc
adc
mov
test
scas
std
lods
ds
mov
push
adc
js
jmp
adc
mov
jge
xor
gs
arpl
stc
je
rcrl
jmp
loopne
add
push
aad
cmp
iret
pop
aaa
sub
in
dec
add
or
iret
dec
cmc
adc
fdiv
cmpsb
dec
data16
inc
mov
or
clc
add
add
dec
mov
sbb
xor
test
xchg
push
testb
push
push
pop
cmpsb
cld
xor
mov
insl
and
and
adc
jno
jle
out
aam
push
test
pop
xchg
out
jnp
insb
std
pop
pop
jg
cmc
leave
subl
or
mov
xchg
dec
testb
nop
outsb
cmpsb
call
inc
jne
out
or
push
fisubrs
pusha
push
data16
sbb
add
ret
mov
mov
adc
iret
push
cmp
in
es
dec
sub
sbb
es
fnsave
and
jg
xor
add
dec
mov
scas
add
stos
and
sub
sti
and
inc
in
push
fs
dec
aam
inc
adc
std
push
dec
cmp
push
adc
jno
or
adc
and
data16
int
push
add
dec
or
adc
scas
and
cmp
cmpsl
test
or
pusha
sub
sbb
push
pop
shl
inc
mov
stc
mov
sarl
sub
jl
jg
stos
ficoms
xor
xchg
and
xor
jge
xchg
push
xchg
sbb
nop
loop
cmpsb
cmpsl
in
pop
test
jl
negb
adc
sti
jne
sub
dec
cmp
push
outsl
xchg
mov
mov
mov
cmpsb
les
adc
push
push
cmp
jae
jg
into
fldl
into
shrl
ljmp
stos
inc
add
arpl
pop
add
mov
adc
and
mov
andl
mov
xor
jl
stc
add
popa
xor
xchg
out
fists
dec
cld
dec
loopne
mov
rcrl
int3
xchg
and
cld
ss
mov
mov
mov
xchg
cmpsl
sbb
into
lods
arpl
adc
xor
shrl
lret
mov
cmpl
xor
jno
xchg
fwait
xchg
ror
test
add
outsl
add
pushf
pop
mov
adc
xchg
sbb
push
mov
scas
aam
mov
ja
faddl
cmp
cltd
fwait
inc
imul
loop
push
inc
cmp
pop
sub
push
jp
cmp
add
mov
into
fistpll
imul
clc
mov
cmp
popf
cwtl
xchg
adc
adc
add
push
sbb
test
lcall
mov
mov
mov
dec
push
cmp
jo
lods
push
fistpl
das
jle
scas
in
and
call
shll
push
sub
sbb
push
loop
xor
inc
or
adc
sbb
dec
ds
adc
std
dec
int3
sahf
xor
test
ja
in
mov
add
into
fisubl
in
cmpsb
fsubrs
ss
mov
iretw
or
inc
mov
out
mov
mov
in
cli
cmp
push
psubsw
sbb
cmp
push
dec
shl
leave
xorb
fsubr
std
dec
call
or
ficoml
mov
sbb
ljmp
push
das
xor
loopne
stc
gs
es
sub
push
jmp
and
js
pop
inc
stos
jecxz
stc
ss
loope
jl
mov
push
or
jl
iret
cwtl
or
jo
mov
sub
inc
rcrl
jnp
push
sub
jnp
cs
insb
insb
jbe
shrl
loop
rclb
out
xchg
loop
ds
or
stos
mov
rclb
xlat
dec
xchg
sub
and
stc
cmpb
inc
outsl
flds
fidivl
cld
xor
sbb
shlb
sub
sub
sub
cmp
leave
cmp
mov
stc
js
fildl
xlat
fists
daa
or
shufps
cmp
jl
jl
push
call
dec
cli
lds
cs
imul
jl
mov
lea
aam
adc
add
ficomps
push
cli
inc
stos
stc
out
inc
pop
mov
xchg
lahf
xor
sbb
push
out
fs
dec
pop
data16
fimull
cmp
push
xor
out
aam
je
test
pop
fnstcw
push
stos
movsb
sub
cli
mov
cmp
xchg
test
loope
in
xor
or
pop
push
popa
mov
add
and
add
push
cmp
stc
mov
xchg
sbb
test
out
std
pop
sub
or
mov
aas
loopne
adc
xchg
jl
xchg
out
out
cwtl
push
mov
mov
lret
pop
das
test
xor
cld
jne
sbb
ficoml
or
mov
adc
xor
adcl
scas
pop
mov
mov
imul
std
sbb
or
jns
popa
aaa
mov
loopne
int3
das
jp
fstpt
cmp
pop
rorl
in
jg
gs
cmpsb
in
pop
ret
mov
scas
mov
sahf
push
dec
xor
addr16
adc
add
cmp
jb
jge
pushf
sub
clc
cmpsb
mov
in
add
mov
addr16
loopne
mov
mov
mov
add
arpl
gs
aad
scas
cmp
or
dec
push
fiadds
mov
sti
add
divb
mov
and
pop
dec
mov
shll
int3
mov
sub
popf
sub
clc
outsb
ljmp
fbstp
mov
inc
in
fcoml
into
cmpsb
pop
sub
leave
cli
out
fidivrl
or
test
cli
and
mov
jne
sti
jne
aas
dec
mov
jb
xchg
mov
test
push
test
jle
mov
push
push
sti
out
lock
lods
or
aad
inc
inc
or
fsubrs
outsl
je
sbb
outsb
sti
popa
and
dec
mov
repnz
and
sahf
jno
roll
test
mov
stos
dec
xchg
in
or
xchg
sub
pusha
sub
pop
lods
data16
notl
out
and
sbb
cmc
aas
xor
xchg
xchg
sub
pop
int
shlb
xor
cwtl
loopne
stc
mov
dec
xor
lods
pop
fst
aad
mov
ljmp
mov
clc
xor
imul
pusha
sahf
dec
repz
jae
stos
jae
jecxz
push
add
test
fdivl
mov
in
jns
jg
imul
fwait
cmpsb
adc
or
mov
xor
sbb
outsl
cmp
ljmp
lds
xor
aam
jg
cmp
dec
mul
divl
push
test
pop
repz
mov
loop
sub
mov
fwait
mov
je
cs
outsl
sub
mov
arpl
bound
cmp
in
lret
andb
lret
aas
ljmp
jg
sub
rcrb
mov
push
sbb
push
ljmp
pusha
mov
orl
into
push
inc
add
test
or
bound
xchg
push
inc
enter
mov
loopne
stos
into
xchg
loopne
test
dec
ljmp
adc
cmp
push
insb
add
add
pop
mov
out
imulb
adc
xchg
daa
call
and
jmp
push
inc
xchg
jg
int3
in
loope
pop
cmp
cwtl
sub
sub
scas
scas
fidivrl
lahf
nop
shlb
mov
daa
xchg
adc
dec
std
sbb
insb
xor
xchg
or
fisubrs
xchg
jg
xor
stos
aad
lret
mov
sar
xlat
mov
fwait
xor
and
popf
xor
pop
mov
js
sub
mov
mov
mov
stos
mov
pusha
pop
in
lock
mov
sbb
inc
jp
xchg
test
out
jae
pop
sub
movsb
loope
jno
stos
cmc
dec
shlb
adc
xor
rorl
pop
jp
or
adc
in
out
gs
loop
jg
push
aas
mov
fwait
scas
pop
inc
outsl
data16
and
out
imul
or
dec
pextrw
push
push
lds
xor
sahf
iret
adc
dec
adc
xchg
decl
xchg
and
push
push
stos
in
sub
outsl
xor
push
aas
dec
push
andb
dec
mov
mov
pushf
push
jg
fimull
xor
adc
out
shlb
rolb
je
lcall
jns
into
rcrl
xchg
sub
aam
mov
cwtl
jnp
cmp
imul
xor
pop
inc
xchg
gs
scas
sbb
mov
aaa
mov
push
add
sub
xor
mov
shlb
push
std
cmp
or
es
mov
sub
and
arpl
fwait
cmp
pusha
sub
xchg
aam
inc
out
mov
rcrb
cld
fs
sbb
mov
icebp
adc
test
add
push
dec
pop
icebp
loop
imul
mov
cmpsl
test
cs
pop
add
push
xor
arpl
jecxz
sbb
bound
test
mov
jb
xor
scas
out
fld1
add
sub
jns
cmp
dec
mov
ficoml
pop
je
lods
lret
fsubs
loopne
fldl
jmp
aam
lods
mov
cld
outsb
ficoml
cmp
int
insb
fsubrs
ret
push
mov
jo
iret
fwait
in
les
xchg
xchg
repz
outsl
out
stc
or
sbb
xchg
aas
ja
loope
mov
test
mov
leave
add
daa
cltd
enter
mov
and
adc
outsl
dec
push
mov
mov
bound
lock
xor
pop
jge
adc
push
push
or
dec
or
push
and
call
cwtl
pop
in
sbb
aam
shlb
mov
ret
xor
daa
push
inc
das
jge
cli
pop
sti
mov
cmp
enter
lock
or
sub
clc
shll
push
xchg
lods
sbbl
out
repz
bsr
loopne
int
stos
xor
pop
add
hlt
xchg
jg
dec
adc
cmc
movsb
pop
movsb
sbb
into
xor
mov
rorb
roll
jmp
cmpsl
mov
mov
imul
stc
ret
mov
mov
push
aas
jne
je
out
cmp
sbb
ja
mov
inc
cmp
push
and
out
out
inc
pop
add
shll
mov
repz
fsub
imul
hlt
in
sbb
das
xor
int3
inc
sbb
push
and
shl
pusha
out
fsubrl
dec
inc
pusha
pop
out
mov
mov
xchg
in
xchg
fs
jmp
adc
cmp
adc
jbe
sub
enter
stos
push
inc
cs
jbe
xor
insl
arpl
jle
or
rolb
lods
cmp
bound
adc
and
and
push
repz
pop
int
jp
xchg
and
push
das
add
sbb
cmp
in
insb
push
cmp
sub
or
push
jnp
lods
adc
ss
popf
xchg
in
pop
iret
mov
lods
out
in
sahf
aam
dec
stos
test
mov
or
sub
pop
push
xor
dec
dec
daa
jb
pop
sub
mov
push
lea
negl
iret
pop
or
pop
shrl
cmp
and
push
push
das
test
inc
mov
js
or
lret
mov
pop
add
or
mov
test
sti
push
xor
es
in
push
push
xor
sbb
icebp
jne
mov
or
sub
sahf
inc
ljmp
lret
xor
dec
sbb
push
lock
sbb
outsl
pop
test
xchg
push
dec
lods
stc
flds
sti
or
inc
loope
and
mov
push
push
gs
and
mov
xor
scas
mov
pop
mov
cmc
cwtl
out
in
in
fnstcw
inc
add
or
and
pushf
sub
ret
jne
xor
and
out
bound
or
xchg
notl
movsl
imul
hlt
cmp
inc
xor
pop
cli
jo
hlt
call
dec
push
pop
inc
sbb
cmc
stos
adc
push
push
enter
xchg
addr16
sar
adc
jmp
lret
dec
arpl
pop
adc
test
gs
inc
push
xchg
push
pop
mov
pop
int3
cmpsb
loope
xor
in
insl
cmp
and
sahf
pushf
adcl
sahf
cmp
aam
psrlq
sub
cmpsl
or
mov
jno
sub
add
xor
clc
stos
jno
pushl
push
bnd
and
sti
scas
test
cmp
pop
call
pop
mov
fldenv
mov
gs
xor
cmpsl
mov
inc
cli
adc
mov
mov
fidivrl
inc
into
leave
jns
xchg
decl
jb
cwtl
mov
mov
cwtl
addb
jge
dec
pop
js
movsb
mov
mov
aam
sbb
push
cmp
ds
rclb
int3
sti
push
repnz
and
push
lret
xchg
pop
mov
cmpsb
inc
mov
sub
repnz
sbb
test
sub
ds
adc
pop
adc
jb
mov
imul
test
lds
fwait
pop
in
mov
ljmp
fldenv
testb
jns
int3
push
mov
dec
divb
jle
push
add
push
mov
add
push
sbb
subl
pop
jne
cmp
add
cmpl
ds
fistpll
inc
xorl
push
sbb
mov
arpl
cmp
jns
and
pop
popa
or
decl
lock
pinsrw
pop
mov
decb
sbb
fsubr
clc
pop
fs
sarb
nop
fnsave
and
iret
fdivs
jge
jns
push
dec
sub
std
rorb
or
and
pop
and
aam
inc
push
push
mov
jno
and
cwtl
outsl
mov
sbb
hlt
dec
jae
mov
mov
out
movsb
pop
add
jae
push
loope
das
mov
add
into
in
jns
mov
ffree
mov
lods
shrl
cmpsb
adc
mov
adc
sub
xor
mov
jns
enter
mov
add
mov
dec
xchg
insb
dec
jb
dec
mov
inc
xchg
test
les
andb
iret
adc
dec
pop
ret
aad
lods
lods
sub
test
mov
into
into
cmpsl
mov
rcll
cwtl
es
test
out
fs
int
sub
adc
mov
mov
dec
ds
mov
outsb
push
int
push
mov
dec
mov
and
inc
jne
cmp
sbb
dec
sub
fdivs
mov
sahf
in
jns
or
push
aad
dec
jnp
add
scas
jge
ret
xchg
dec
jo
jb
cmpsl
in
sti
movswl
in
js
xchg
aas
adc
push
out
adc
insb
mov
adc
push
xchg
mov
pop
sbb
mov
cmpsl
jge
jmp
ret
sbb
mov
and
inc
es
sbb
pop
jecxz
push
mov
sbb
sub
popf
cmpsl
hlt
mov
dec
xlat
mov
lret
in
jecxz
push
and
les
cmc
enter
and
fiadds
in
lods
add
iret
fdivrp
out
pop
jbe
or
dec
iret
in
add
test
xor
pop
pop
inc
nop
sti
into
in
outsb
sub
sub
mov
aad
dec
pushf
stc
movsl
lret
inc
loope
sarb
or
push
lea
leave
pushf
aas
xchg
jb
dec
cmp
lcall
adc
adc
daa
xor
adc
add
mov
inc
fstpl
out
sarl
xor
arpl
mov
add
or
insb
sbb
icebp
push
add
xchg
inc
adc
mov
flds
cwtl
sti
inc
mov
loopnew
sbb
lods
and
clc
in
add
mov
mov
pop
loope
lret
mov
inc
mov
outsb
cld
dec
popf
dec
add
cwtl
cmc
lea
mov
mov
xlat
loop
push
mov
add
inc
loop
addb
rcr
xchg
or
leave
cwtl
cmp
jo
imul
fadd
mov
shlb
mov
push
out
mov
jle
add
jns
jle
call
imul
lock
add
xchg
es
push
sub
insb
pop
rclb
cli
sbb
test
jmp
inc
adc
sbb
sub
mov
lcall
and
int3
cmp
enter
or
push
inc
cld
cmp
out
aas
mov
outsb
pop
sahf
into
movsb
jmp
mov
rcrb
cmp
mov
inc
lret
repnz
adc
jno
push
dec
xor
scas
and
sahf
jle
add
aaa
out
cmp
fs
push
les
sub
das
push
aad
test
js
lret
addl
out
mov
xor
pop
cmp
clc
popf
cmp
push
adc
xlat
les
nop
cs
inc
inc
mov
out
imul
ds
lcall
mov
gs
outsl
push
std
mov
push
pop
push
cmp
sbbb
and
loop
mov
add
repz
xlat
push
pop
rcl
push
nop
int
imul
int3
sub
cmpsl
pop
ss
mov
lods
insb
insb
ss
lods
enter
and
push
popf
pop
cmpsb
xchg
cmp
pushf
ret
mov
cmp
add
and
out
pop
mov
cwtl
mov
jo
and
cmp
dec
adc
inc
lock
and
lahf
sub
or
inc
sbb
push
mov
cmc
xor
inc
or
dec
aas
mov
aaa
das
cmpl
rep
cmpsl
hlt
repnz
dec
push
pop
inc
jbe
and
mov
imul
or
pop
loop
xor
movsb
pushf
movsl
sbb
sub
push
repnz
add
sbb
stc
sti
mov
mov
imul
test
imul
ja
jp
sbb
iret
andnps
cmpsb
mov
ret
or
gs
out
xor
into
mov
test
jecxz
xor
stc
stos
fdivr
jp
dec
jmp
es
clc
add
inc
sub
inc
andb
xor
or
loope
testl
add
adc
addr16
mov
sub
data16
pusha
and
sbb
mov
dec
arpl
js
add
scas
xor
rol
cmp
stos
pop
icebp
test
pop
rorl
in
inc
loope
pop
popa
jmp
cmp
fisttpll
test
pop
mov
push
jnp
jns
out
subl
scas
loop
xchg
in
in
testb
jns
out
xchg
pop
xor
ret
mov
inc
pop
mov
mov
orl
sbb
mov
add
test
clc
pop
mov
lret
sbb
fwait
hlt
push
popf
scas
cmpl
scas
xor
jne
jle
outsl
mov
cmp
push
sarb
xor
jbe
push
outsb
xor
inc
inc
dec
mov
lret
js
mov
dec
jp
sbb
nop
in
cmpb
packuswb
inc
imul
jle
jecxz
bound
jno
fadd
aam
mov
cmp
divb
xlat
test
es
std
dec
xchg
xchg
jmp
mov
in
movsl
cmp
int
mov
and
xor
jp
sti
sub
inc
sub
mov
adc
xlat
data16
fwait
sbb
push
pop
jo
sub
or
cltd
sarb
jmp
cmp
or
stos
mov
xchg
jb
es
mov
pop
repz
pop
sub
sbb
pshufw
add
inc
cmp
cmpsl
jmp
jnp
aas
mov
outsb
pushf
mov
idivb
es
cltd
enter
jmp
sub
inc
adc
mov
ljmp
dec
jle
pop
arpl
jnp
jmp
sub
jae
shr
enter
jb
bound
mov
mov
scas
stc
push
and
push
mov
clc
mov
loope
inc
pop
xor
loope
jbe
push
outsl
fs
mov
mov
mov
mov
call
xor
wbinvd
or
iret
and
sub
dec
xlat
adc
sbb
hlt
jbe
inc
das
out
jmp
stos
aam
int
ret
push
push
orl
adc
pop
test
stos
sti
adc
jl
cmc
xchg
xor
jnp
nop
jb
sbb
xor
or
xchg
pop
pop
incb
aaa
nop
pop
pop
push
cli
push
js
add
pop
jg
mov
xor
fs
dec
sub
mov
dec
das
xor
loopne
lods
xor
xchg
popa
xchg
sbb
jg
or
pop
cmpsl
jl
scas
mov
mov
test
jp
in
xchg
rcll
jae
nop
xchg
xchg
inc
out
xchg
sbbb
or
cmpsl
cltd
inc
sub
sbb
movsl
pop
js
neg
add
inc
push
rolw
popf
dec
jp
add
repz
enter
jp
or
in
dec
add
add
dec
cmp
mov
inc
outsl
mov
rorb
mov
js
leave
adc
movsl
cli
ds
rcll
lods
xor
hlt
xchg
mov
outsb
dec
sub
bound
dec
push
fmull
std
or
pavgb
shlb
test
fnstenv
out
lods
inc
movsb
in
sbbl
inc
pop
mov
cmp
daa
push
cmpsb
ljmp
add
cmpsb
sub
adc
and
loop
in
repnz
faddl
imul
bound
cli
add
arpl
movsb
andb
cmp
xor
or
xchg
xchg
pop
or
pop
aam
aad
and
insb
int
push
jnp
ja
jecxz
fisubrs
and
pop
pop
cwtl
or
fcmovbe
add
and
xor
cltd
inc
sti
or
mov
outsl
jb
cltd
add
stos
ss
push
or
mov
dec
adc
loop
sar
jns
mov
jmp
adcl
cld
loop
out
xorb
ss
mov
insb
cli
jg
lahf
cmp
mov
push
aam
les
add
iret
call
fsts
sbb
adc
clc
mov
adc
jmp
out
or
clc
lods
cmp
adc
mov
cltd
fcoml
lea
je
and
push
or
xor
je
mov
sar
push
xchg
shll
test
mov
jecxz
or
out
pop
into
insb
inc
push
xchg
in
sbb
push
test
lcall
notb
push
inc
mov
cs
add
ds
sahf
mov
cmp
add
xorb
in
sbb
pop
push
cld
nop
mov
and
ss
nop
push
ds
ss
gs
fucompp
mov
or
adc
ja
push
add
sub
imul
aas
xor
in
adc
jno
lcall
cmp
dec
sub
mov
stc
add
mov
out
inc
xchg
notl
lods
addr16
ljmp
mov
lods
pop
jae
stos
sbb
cmp
out
lods
jp
adc
std
or
shll
out
push
ss
jge
bswap
cmp
popf
aam
inc
gs
test
call
inc
cmp
dec
or
mov
stos
insb
jecxz
add
loope
div
fistpl
jne
addb
das
jbe
push
sub
or
test
iret
or
jno
push
sub
adc
lcall
std
mov
out
call
loop
filds
test
add
cmp
xchg
loopne
xlat
dec
adc
xor
rcl
je
lahf
or
std
cltd
dec
sub
cmp
jb
mov
xchg
aaa
popf
dec
sbb
pop
xchg
cmp
in
jae
pusha
sub
xlat
lcall
popa
and
iret
xor
movb
push
cs
jbe
out
mov
gs
mov
je
cmpsl
int3
pusha
mov
pop
mov
or
inc
dec
sbb
fwait
push
push
ds
dec
lahf
lods
jmp
test
rcll
jg
fisubl
dec
sbb
push
iret
pop
adc
push
push
xchg
pop
dec
cs
lcall
or
mov
shlb
mov
sbb
or
add
mov
xlat
je
or
or
out
mov
mov
sti
sub
push
insl
push
jle
adc
mov
mov
ret
and
out
scas
and
ret
xchg
in
mov
xlat
fstpl
inc
or
push
dec
dec
icebp
shr
insb
and
mov
mov
test
mov
sbb
shrl
pusha
mov
pop
inc
xchg
mov
inc
or
filds
cmc
xchg
jbe
aad
add
inc
addr16
data16
cld
cli
xorl
lret
cwtl
push
mov
xchg
pushf
and
std
ret
mov
lcall
mov
xor
push
ljmp
xchg
sbb
or
pop
stos
lds
xor
scas
push
sbb
jmp
or
out
ja
pop
stc
in
push
cs
sbbb
cmp
out
and
insb
lock
and
mov
mov
pop
test
jbe
pop
or
mov
imull
sub
push
in
pop
fcmovu
add
adc
insb
xchg
mov
aas
adc
sub
lahf
jg
scas
das
inc
mov
inc
stos
sub
sarl
das
leave
add
es
stos
in
mov
movsb
repnz
or
shll
lret
sub
adc
adc
sub
push
mov
mov
dec
ja
xorb
xor
xor
adc
das
je,pn
je
cmp
movsb
icebp
mov
cwtl
es
push
xchg
sbb
xorl
push
mov
sub
shrl
aad
fdivl
cmp
cmp
xor
test
out
jecxz
mov
stc
xlat
outsl
sub
sub
fs
pop
out
fisubs
mov
lcall
ljmp
adc
inc
cs
popa
clc
sub
and
dec
sub
sbb
pop
cmp
int3
gs
pusha
aas
ljmp
mov
aad
daa
stos
loop
ja
jmp
xchg
fnstcw
lock
adc
cmp
jl
stos
pop
xchg
xchg
mov
adc
add
mov
xchg
js
mov
push
leave
mov
iret
bound
pop
sub
adc
xor
insb
pop
aaa
sbb
leave
cmpsb
jecxz
jnp
adc
jecxz
sub
adc
pop
decb
cmc
aaa
stos
dec
jp
jnp
xlat
cmp
xchg
pop
bound
cltd
adc
js
xor
xor
pop
into
loopne
inc
jb
or
mov
shl
add
inc
mov
push
cli
clc
mov
lret
push
jne
repz
sarl
push
adc
add
sub
jae
push
lcall
int3
repnz
add
pop
pop
repnz
rcll
fistl
movsb
imul
or
mov
sub
or
jb
add
dec
test
aas
push
movsb
out
xchg
sub
jno
push
fmul
cmp
popf
idivb
lock
or
pop
pop
jp
js
pop
cmc
jmp
push
dec
leave
popl
pop
ret
int3
rcll
inc
xchg
ret
or
fdivl
sbb
pusha
je
jle
fisttpl
push
sbb
xchg
mov
pop
mov
test
popl
push
pop
add
xorl
add
mov
push
jecxz
xchg
xor
in
paddb
xorb
lahf
iret
cld
arpl
shlb
add
inc
mov
loopne
adcb
pusha
ss
xchg
movsl
sub
lret
mov
sub
lahf
fmul
pop
sub
adc
int3
xor
call
mov
stos
add
mov
push
jb
mov
pop
icebp
push
cld
add
sub
xchg
inc
xchg
cmpsl
cli
pop
xchg
scas
lret
push
lods
jno
int
mov
push
ljmp
dec
dec
nop
sti
jo
dec
cmc
mov
lock
popa
push
dec
cmp
fisttpl
jl
xchg
push
test
iret
aas
bound
addr16
sbb
fstl
jne
rep
ror
mov
sub
sub
mov
adc
inc
out
or
imul
adc
jno
call
push
pop
and
sqrtps
jae
cmp
xchg
mov
pop
stos
mov
sbb
enter
mov
test
add
into
mov
idivl
mov
test
cwtl
cld
and
cmp
xor
addr16
inc
push
push
or
inc
sahf
push
cmp
add
mov
cld
xchg
daa
andb
dec
imul
ret
sub
sbb
jno
sbb
leave
inc
sub
push
out
pop
add
push
insb
add
insb
cld
sbb
sub
push
push
fucom
jl
inc
daa
or
shlb
cld
bound
xorb
xchg
xor
addr16
and
push
mov
mov
imul
scas
fs
repnz
mov
push
push
daa
xchg
movsb
xor
sahf
cmp
ret
cmp
adc
push
ret
das
out
fdivrl
jno
push
arpl
loop
pop
stc
push
push
dec
ret
xchg
mov
int
pop
adc
xor
lret
loopne
cs
rcll
mov
shrl
pop
cltd
divl
dec
xor
es
mov
and
lahf
jp
cmp
and
xchg
cld
imul
push
or
mov
flds
int
insl
je
pop
leave
lods
fwait
in
sub
mov
lret
jg
call
out
insb
cwtl
dec
repnz
mov
loopne
pushf
xlat
sbb
dec
mov
xorb
out
adc
xor
jo
test
hlt
subl
aad
and
ds
xchg
cmpsl
mov
mov
clc
aas
cwtl
push
stos
jne
jne
mov
ss
inc
sbb
sbb
push
xchg
inc
push
insl
mov
stc
popf
mov
cmp
ss
mov
leave
mov
in
insl
inc
jno
rcrl
add
gs
and
xchg
and
arpl
ds
rcll
mov
icebp
pop
jbe
std
gs
cmp
ret
and
adc
mov
and
push
cmp
cwtl
mov
or
jg
icebp
mov
lods
repnz
sbb
inc
cmc
fnstcw
lret
pop
xor
sbb
mov
xchg
daa
mov
jno
cld
mov
mov
out
nop
out
push
xor
pop
insl
inc
fisubrl
jno
je
mov
jno
subl
loop
dec
pop
xchg
mov
pop
sbb
out
orl
xlat
xchg
out
shl
dec
daa
out
rclb
shll
or
cmp
jnp
push
jp
out
xchg
movsl
pushf
in
hlt
mov
data16
cmp
addl
icebp
jl
test
and
cmpb
out
pop
dec
jbe
mov
add
loopne
xor
mov
adc
inc
push
icebp
pop
push
mov
aas
addl
xor
sbb
ljmp
fwait
cmp
add
push
ss
xchg
pop
lahf
add
pop
mov
in
iret
xor
cmp
or
mov
pop
sub
pop
jl
icebp
into
mov
iret
ja
mov
push
sti
sti
sub
dec
mov
push
jb
adc
iret
rorb
pop
pop
je
push
std
and
cld
outsb
sub
sti
mov
inc
insl
aad
mov
cmpsl
stos
out
fsubp
mov
les
call
mov
sbb
push
jle
out
add
imul
icebp
bound
sti
leave
xchg
cli
dec
add
push
and
adc
or
jo
sbb
or
mov
add
aas
mov
mov
cmp
imul
cmc
dec
es
pop
mov
mov
push
dec
add
xchg
push
js
sub
and
jp
jns
lock
js
cmp
inc
jmp
fcmovu
jmp
adc
pop
push
dec
in
jl
out
nop
inc
sti
mov
dec
aam
cmp
insb
adc
xchg
movsb
mov
mov
dec
cltd
cs
mov
sub
lahf
shll
push
in
pop
mov
mov
imul
xor
jno
in
jp
mov
mov
jl
or
or
jg
xchg
pushf
insb
xchg
or
mov
je
jnp
push
ret
mov
pop
mov
es
dec
sub
in
mov
negb
mov
or
jns
decb
fdiv
inc
sub
or
fidivs
xchg
out
test
push
mov
mov
out
xor
mov
in
mov
sub
sbb
jle
jle
xchg
scas
adc
mov
push
sub
mov
jbe
push
clc
mov
leave
and
adc
lock
test
jno
fistl
out
xchg
push
xchg
stos
and
popa
mov
test
scas
adc
xor
mov
xor
push
xchg
mov
cld
xlat
divl
es
scas
imul
push
inc
sub
adc
sarl
mov
mov
rol
in
inc
dec
cltd
xchg
cmp
stc
pop
ja
or
lahf
jmp
repnz
pop
inc
adc
das
fsubrs
cmpsl
aad
push
nop
loop
dec
jb
push
xlat
add
jo
mov
pop
mov
push
cmc
rcrl
push
xchg
mov
mov
cli
pop
push
stos
aaa
fildl
pusha
pop
insb
dec
aas
inc
or
inc
and
sahf
ror
pop
pop
lea
inc
xor
mov
xor
in
aas
mov
push
shll
lods
jno
pop
mov
sbb
and
inc
push
inc
gs
mov
sbb
das
cmc
iret
repnz
or
push
movsl
or
add
pop
sbb
lods
dec
pop
jle
mov
movsb
inc
mov
dec
fiadds
push
and
cld
bound
rep
sahf
pop
aad
sub
adc
insl
shlb
test
or
sbb
lahf
scas
sarb
ror
cs
xchg
loop
xorl
and
adc
inc
or
orb
pop
outsb
aaa
jne
out
repz
int
rcrl
cmp
in
call
jns
enter
ret
das
add
mov
push
xor
nop
cmp
dec
mov
lahf
data16
pop
rorl
cld
das
pop
fsubrp
jmp
scas
cmp
orb
pop
enter
daa
leave
cwtl
mov
xor
dec
mov
ja
or
add
int
cmp
xchg
jmp
push
bswap
dec
repz
mov
fs
loop
dec
cmp
imull
imulb
xor
mov
or
pop
cmp
inc
inc
adc
cwtl
out
push
shlb
inc
stos
stos
stc
add
std
movsl
or
mov
imul
mov
insl
mov
cmp
fwait
rclb
adc
xchg
cmc
into
hlt
and
aas
xchg
mov
dec
xchg
pop
mov
mov
and
js
ret
cmpsb
mov
xor
jl
pop
cld
xchg
lret
sbb
or
mov
daa
push
repz
xor
nop
movsb
xchg
xchg
xor
bound
and
xor
mov
xorb
dec
jg
stc
mov
xor
jg
mov
ret
jg
movsb
movsb
movsl
pop
mov
cmp
out
xchg
negl
lret
jmp
sbb
push
popa
push
mov
popf
jg
nop
data16
fcoms
jbe
enter
mov
adc
cmpsb
test
ret
lds
adc
data16
jmp
mov
mov
push
adc
pop
dec
adc
inc
mul
mov
pusha
xchg
pop
and
ret
mov
subw
push
jp
sbb
mov
mov
push
shll
ror
sub
scas
dec
in
sub
ss
pushf
out
imul
pop
fisttpl
lods
cmp
pop
inc
push
arpl
pop
cmpsl
dec
or
shlb
fs
divb
jp
fwait
xchg
inc
loopne
and
call
lds
xchg
mov
in
aas
iret
push
cmp
sbb
cvttps2pi
add
test
in
fisubrs
shrb
filds
popf
pop
push
jne
enter
add
ljmp
cmp
sub
rcl
cmpsl
xor
outsl
addr16
push
pop
dec
inc
push
loopne
add
pop
adc
popa
mov
adc
mov
mov
addr16
clc
test
addr16
cs
daa
into
xorl
xor
or
insb
fbld
je
outsl
nop
pop
lea
pop
add
fidivl
mov
xchg
or
inc
pop
stos
sub
lods
sub
sti
jmp
add
insb
xchg
jns
cmpsb
sbb
inc
pop
mov
test
insl
dec
enter
aas
loop
pushf
rclb
iret
in
lcall
xchg
cmp
std
pop
cmc
lret
ja
cmp
pop
adc
fistps
xchg
fsubrl
add
push
sub
lret
lods
pop
xor
sbb
neg
cmp
mov
mov
xor
mov
andb
clc
loopne
xchg
inc
sbb
xor
cmp
cli
loopne
mov
sub
scas
test
inc
test
ret
test
call
lock
dec
or
push
inc
jle
push
xorl
sbb
mov
icebp
aad
add
outsb
imul
ja
or
pushf
jb
mov
imul
cmp
push
pop
jge
and
jo
addr16
rcrl
sub
fwait
call
fs
sub
inc
repnz
or
push
inc
lcall
gs
xor
add
cld
enter
pop
sarb
fs
xchg
arpl
inc
out
mov
or
sti
cltd
hlt
mov
pop
sbb
sub
subl
inc
jbe
cmc
data16
mov
les
cli
scas
js
and
adc
popf
jmp
xor
je
ja
enter
sbb
sbb
andl
lods
rorb
inc
jno
sub
inc
enter
xor
push
aas
test
and
jle
jne
jl
filds
xchg
daa
repz
outsb
divb
adc
sub
xor
push
or
add
test
clc
cmp
mov
imul
out
mov
sbb
pop
cwtl
push
cmc
or
jnp
mov
or
fisttpll
push
cmpsb
push
in
sub
push
dec
pop
call
jo
or
ret
rcll
dec
gs
hlt
fisubrl
sti
std
and
jbe
sbb
es
sbb
sbb
cmp
sbb
mov
pop
data16
mov
mov
pop
mov
ret
sahf
mov
and
sbb
and
mov
dec
xchg
cmp
gs
or
xor
clc
int3
sbb
mov
push
lock
jb
and
test
divb
mov
dec
inc
cmp
arpl
ficompl
mov
daa
add
mov
push
xchg
push
loop
jp
arpl
shll
jle
incb
add
es
mov
jmp
aad
mov
add
popa
jne
mov
and
jns
add
psubq
lahf
dec
jmp
out
test
or
les
inc
scas
sbb
mov
cmpsl
and
push
xlat
cld
movsl
lds
xlat
mov
adc
inc
or
lahf
aam
cmpsb
jb
rorl
iret
gs
xor
and
xchg
ja
in
ljmp
mov
mov
aad
pop
push
push
and
jp
leave
xlat
xchg
das
test
testl
cmc
jbe
mov
inc
not
pop
cltd
mov
dec
add
adc
repz
adc
or
mov
cwtl
cmc
sahf
adc
aam
jb
mov
inc
mov
and
cmpsb
lret
cli
xor
mov
jnp
adc
jnp
ljmp
pushl
es
dec
pop
addb
pop
jo
inc
lock
add
ds
dec
out
ret
test
add
jbe
fistpl
mov
stos
mov
mov
dec
mov
pop
mov
movsl
xor
push
pop
adc
sbb
xchg
jno
sbb
pop
shll
inc
js
add
and
out
mov
and
nop
movsb
jmp
push
leave
cmp
pop
rclb
fwait
mov
cltd
lret
mov
dec
outsl
loopne
xchg
hlt
and
out
mov
out
aas
es
push
ret
popa
lret
enter
xchg
sub
inc
popa
cmp
cmpsb
lret
xchg
or
xchg
jb
adc
pusha
sar
add
in
lock
pop
lds
ret
jecxz
jbe
xor
clc
mov
repnz
jae
push
jg
xchg
iret
jg
add
and
mov
mov
sub
shrw
popa
icebp
mov
fidivs
insl
and
mov
xchg
aam
dec
sub
push
dec
push
sub
dec
lds
andl
icebp
and
pushf
push
out
cltd
movsb
push
cmpsl
dec
pushf
add
add
mov
scas
cli
cmc
adc
gs
movsl
cltd
clc
mov
add
in
ret
or
mov
out
popf
or
nop
cmpsl
lahf
loope
aam
es
adc
pop
push
aaa
cli
mov
cli
out
or
loop
pop
adc
adc
fisubrl
sahf
ss
cli
sbb
push
aas
xchg
dec
mov
push
cs
jne
mov
rorl
lret
push
sub
fistpll
sbb
hlt
andl
add
incl
jbe
in
fs
shr
mov
aad
or
pop
je
jmp
pop
mov
sbb
xor
mov
add
aam
jmp
or
ds
mov
jo
mov
dec
or
imul
shll
sarl
sbbb
iret
int
inc
ror
dec
adc
or
lds
int
sbb
inc
adc
fs
xor
cli
xchg
adc
daa
inc
inc
jo
movsl
sbb
xchg
repz
sahf
out
pop
and
jge
jge
or
mov
mov
and
adc
sbb
sahf
stc
jp
pop
lcall
mov
push
push
inc
lret
mov
push
jp
fdivr
xchg
jmp
popa
mov
out
sahf
lret
inc
jle
pop
shrb
sbb
test
adc
shll
insl
lret
xchg
cmp
daa
shrl
mov
clc
fidivl
sbb
jno
daa
pop
cld
je
imul
fnstsw
or
push
inc
jae
xchg
aam
pusha
call
cli
in
and
ficompl
mov
ret
mov
pop
mulb
jb
xchg
inc
mov
loope
push
mov
xchg
lahf
les
or
inc
jb
ja
push
mov
lcall
adc
adc
push
sub
into
jmp
lods
gs
add
pop
mov
outsb
movb
orb
sub
push
jmp
sbb
adc
cli
dec
cmp
mov
mov
sbb
mov
mov
adc
jbe
addr16
rcr
xchg
pushf
jns
mov
push
or
dec
mov
adc
repnz
push
xchg
movsl
icebp
aaa
mov
jmp
dec
fcomip
push
xor
xchg
call
dec
push
xor
jno
repnz
cmpsb
inc
insb
mov
rol
lock
jl
or
in
dec
add
pop
daa
into
in
mov
leave
rorl
mov
mov
movswl
and
jnp
sub
mov
mov
cmp
lret
cmpsb
mov
xor
adc
cmp
out
push
loope
fmull
push
fcompl
shlb
mov
sbb
insl
ficomps
mov
insb
call
adc
std
sub
dec
sub
cmc
inc
fldenv
inc
test
pop
or
fldcw
das
add
push
push
call
in
int
in
stos
and
cmp
sub
leave
sbb
cltd
dec
mov
inc
sub
or
xor
mov
inc
nop
mov
xchg
dec
adc
mov
mov
arpl
adc
pop
in
xchg
push
lods
aaa
shll
fnstcw
and
dec
cmpsb
stos
inc
in
scas
and
mov
mov
push
cmp
cmp
inc
mov
sahf
mov
addr16
push
popa
and
fwait
mov
ljmp
or
lea
adc
test
test
or
in
or
mov
fdivrl
mov
test
sahf
push
scas
in
lds
cmp
push
mov
in
jbe
scas
iret
test
les
fwait
dec
or
jnp
push
nop
out
imul
mov
ja
inc
ret
cmpsb
push
hlt
leave
jb
mov
in
lahf
push
cs
movsl
add
pop
aaa
stc
lret
in
bound
sub
into
popf
xor
xchg
sbb
pop
fsts
shlb
xchg
addr16
push
orl
jmp
xchg
mov
cli
dec
sbb
jmp
jmp
and
movsb
jmp
test
jecxz
jnp
fs
cmp
jl
mov
repnz
cmp
ljmp
jg
daa
icebp
inc
out
repnz
decl
pop
dec
sahf
ljmp
inc
lea
or
cmp
jo
loop
out
pop
testb
into
fldt
jge
das
fcom
popf
push
sub
cltd
lds
cmp
dec
aaa
mov
mov
and
mov
or
pop
in
mov
inc
jmp
and
cli
xorl
xor
mov
jo
lea
stos
or
pusha
mov
fistl
mov
mov
xor
not
or
rolb
pusha
sub
pop
cmp
or
mov
xlat
lods
mov
jns
jp
sbb
cmp
addr16
sub
add
and
into
out
repnz
cmp
dec
add
mov
mov
imul
push
dec
xchg
je
push
xchg
mov
mov
addb
pop
pop
xchg
scas
jecxz
add
sti
pop
divl
xchg
test
dec
je
cmpsb
push
loope
jnp
xorb
nop
les
sbb
jmp
mov
jmp
pop
jo
in
nop
jnp
pop
je
jb
in
pushf
setnp
addb
movsb
movsb
pop
cmp
imul
rcl
and
xor
add
imul
jnp
loop
mov
fmuls
xchg
aaa
push
jmp
pop
jno
or
cmp
sub
xchg
mov
jae
scas
push
pushf
std
push
jae
xchg
aaa
gs
pop
dec
mov
cwtl
mov
push
lret
lock
cmp
pusha
cmp
push
cmpsb
or
xchg
sbb
and
decl
mov
dec
cmp
fs
ja
fistps
repz
leave
xlat
push
es
mov
push
out
push
and
cmp
daa
cmp
mov
hlt
in
popa
ss
mov
ret
aaa
jecxz
daa
adc
rcrb
sub
scas
push
inc
and
inc
movhps
dec
dec
mov
pop
arpl
push
lock
sub
xchg
lock
imul
pusha
icebp
mov
loope
movsb
jl
bound
mov
xor
fdivrs
fsubs
inc
jae
repnz
ffreep
pop
inc
pop
ret
lea
pusha
cld
loope
xlat
arpl
lds
xor
mov
ss
xchg
inc
cmp
in
cld
mov
inc
cmp
pushf
mov
into
dec
push
movsl
xchg
leave
push
and
leave
cmpsl
out
cmp
int
mov
cmpsl
jb
dec
aam
scas
les
jp
repnz
leave
cmpsl
pusha
je
mov
fldenv
mov
lcall
imul
jae
inc
fwait
xchg
mov
xchg
es
xor
jbe
jne
adc
gs
icebp
das
out
insl
mov
and
sub
dec
pop
hlt
xchg
mov
add
int
repz
sbb
inc
jbe
adc
sub
dec
imul
lods
pusha
push
popf
mov
mov
cld
lods
outsb
inc
mov
sub
dec
xchg
es
xor
push
scas
xorb
pop
fisubl
jb
lret
mov
cli
movsl
push
sahf
sbbl
dec
lea
aas
sbb
pop
int3
repz
ret
out
cmp
mov
inc
pop
cmp
data16
cmp
bound
xchg
repz
daa
push
mull
sbbb
ljmp
dec
cmpsb
mov
nop
aaa
sbb
sub
inc
push
into
mov
and
loopne
hlt
call
aam
mov
fisubs
inc
ss
cltd
pop
dec
push
adc
shll
xorb
mov
imul
insb
pop
loop
leave
stc
jg
rorb
add
sbb
inc
stc
add
xchg
dec
mov
xor
xchg
movups
cmp
pop
and
xchg
xchg
rcl
in
cmpsb
sub
jmp
cmp
movsb
or
sbb
jne
arpl
lcall
adc
or
jl
or
fwait
out
ds
jb
inc
ljmp
add
jb
sub
sti
imul
cmp
aad
lods
push
scas
pop
lock
dec
popa
fnstenv
data16
and
scas
into
or
sub
inc
push
mov
cmp
cmp
into
pushf
insb
adc
in
or
and
dec
rorb
loope
enter
jne
pop
sbb
cmpsl
adc
sbb
cmp
pop
mov
jl
shl
hlt
popf
pop
cli
jle
insb
inc
imul
cltd
xor
test
cs
movsl
dec
rolb
mov
lcall
fistps
sbb
mov
stos
dec
push
mov
outsb
xchg
mov
push
or
xchg
test
imul
aaa
add
dec
inc
dec
cmp
xor
lods
ja
and
sub
mov
mov
repnz
lds
lcall
mov
jle
sahf
lret
sub
nop
gs
or
jmp
enter
jg
or
sub
aas
imul
cmp
sub
jbe
addb
xchg
mov
in
scas
xor
sub
lret
inc
xor
or
mov
mov
orl
inc
out
lods
or
fnstcw
mov
jo
loope
push
fcmovb
sbb
addr16
decb
lcall
mov
mov
add
pop
mov
fwait
xchg
inc
rcrb
pop
lahf
bound
sub
popf
fsub
mov
sub
subl
fldcw
mov
es
cmpsl
inc
adc
fidivrl
testl
and
pop
lcall
sbb
aad
clc
add
add
push
loope
leave
and
cmc
and
js
js
and
jle
jne
sahf
xchg
pop
and
lea
cmp
adc
es
clc
mov
mov
xor
dec
xchg
fnstsw
push
jo
ljmp
mov
sbb
and
sahf
loop
add
outsb
sbb
jb
jbe
push
mov
pop
cmp
enter
and
lea
stos
fsubrl
loope
xor
in
pop
call
out
jmp
jno
sbb
inc
adc
dec
es
and
add
cltd
hlt
xorb
nop
push
push
push
mov
add
xlat
and
or
out
mov
mov
int
or
hlt
bnd
sbb
imul
rorl
cwtl
or
mov
test
sbb
pusha
adc
mov
inc
push
roll
dec
cmc
and
test
andl
jae
dec
jae
in
insl
fisttpll
mov
pop
mov
cmp
sub
dec
mov
dec
fstl
adc
or
cmpb
dec
xchg
jne
push
lods
xchg
lret
pushf
int3
jmp
xchg
mov
stos
mov
ss
dec
jp
out
out
mov
dec
xchg
fimuls
clc
cmpsl
cld
in
lock
cld
mov
lret
mov
mov
in
or
xor
mov
push
mov
add
addb
in
mov
or
jp
mov
orl
adc
out
test
loope
sarb
test
push
pop
loope
mov
xchg
xor
sbb
iret
inc
cmp
push
imul
push
dec
pushf
in
cmp
or
sti
cmp
stc
dec
movsb
mov
int3
inc
xor
lahf
fcmovbe
xorb
sbb
add
fidivs
in
ss
repnz
addr16
mov
sbb
adc
pop
push
incl
daa
lds
mov
fs
sbb
and
adc
pop
dec
xchg
mov
movsw
add
and
std
into
jle
xchg
ss
dec
adc
push
cmp
vpshlq
ja
adc
mov
cmc
pop
in
adc
jge
jecxz
pusha
cmp
sbb
xor
fidivrl
addr16
mov
pop
mov
loopne
and
xor
push
sub
lahf
ljmp
popf
sbb
idivb
clc
and
xlat
push
mov
cwtl
loopne
add
popa
mov
int3
ficompl
ret
or
add
iret
jae
add
jg
sbb
scas
and
mov
pop
mov
mov
mov
lods
icebp
pusha
jae
mov
lcall
out
jp
icebp
call
into
lahf
jb
scas
inc
mov
xor
mov
subl
lods
mov
sub
stos
jne
rclb
mov
mov
insb
pushf
xchg
repz
stos
add
sub
ret
orb
popa
xchg
je
cmp
stc
mov
aam
rol
sarb
pop
or
sti
or
fisubrl
xor
and
lock
loope
clc
sti
lahf
aas
sub
lcall
mov
push
sub
daa
push
and
cltd
jl
dec
pop
push
adc
cld
mov
ficoms
lods
mov
push
cmp
xor
and
lret
sub
dec
sbb
push
adc
pop
filds
lods
sub
xor
push
aam
cmp
fistpl
jns,pt
mov
add
xchg
mov
call
push
xor
xor
mov
mov
pop
fmull
jp
fs
xor
enterw
je
inc
testb
adc
pop
xchg
mov
pushf
test
mov
xorb
daa
arpl
iret
xor
mov
cli
es
sbb
cmc
dec
inc
adc
dec
stos
lods
sbb
hlt
push
sbb
fdivr
jl
in
push
cmp
lods
pop
mov
js
sbb
or
mov
pushf
ja
into
sbbl
xor
insb
into
mov
jge,pn
inc
stos
push
std
xchg
fwait
and
test
fisttpl
push
inc
jae
rsm
sbb
pushf
xlat
popf
movsb
jg
pop
jbe
xor
fldenv
add
shlb
aam
sub
insl
push
xor
mov
mov
lea
sbb
dec
mov
lods
add
adc
ret
xor
xchg
dec
mov
stos
js
arpl
xor
xchg
enter
clc
test
test
or
pop
mov
sbb
test
pop
adc
pop
jmp
nop
out
mov
pop
xchg
cwtl
setbe
cmp
in
loopne
pop
inc
das
int3
pop
leave
mov
xorb
pop
icebp
movsl
pop
add
xor
cs
das
repz
hlt
xchg
ljmp
fstpl
ss
bound
testb
push
bswap
cld
std
lds
adc
mov
mov
mov
in
push
lahf
lcall
push
dec
sarl
mov
jmp
es
ss
jns
test
adc
aad
xor
inc
dec
lods
jmp
sub
mov
pop
loop
aam
les
jl
dec
mul
add
xchg
push
or
js
push
jns
lea
add
pop
sub
das
aad
cmp
scas
add
repz
push
mov
stos
mov
mov
scas
cmpsl
adc
and
rclb
push
push
push
push
mov
adc
dec
lret
jns
mov
xchg
inc
pop
and
out
add
sub
lock
xor
mov
pusha
aaa
cmc
fwait
or
das
push
aas
adc
pushf
cli
cmpsl
jge
pop
and
add
ljmp
sub
fsubrp
fstl
pop
mov
in
add
mov
sbb
loope
rcr
sbb
sahf
push
jmp
lret
and
or
xchg
mov
add
xchg
xor
mov
int3
mov
inc
vcvtsd2ss
xchg
in
mov
xor
pop
jno
stos
imull
dec
sbb
icebp
lea
push
fwait
into
xor
ljmp
orb
iret
shll
cli
and
sahf
cmp
mov
inc
xchg
sbb
or
add
sub
xchg
sti
aam
test
push
stos
jg
sbbl
andl
stos
xchg
sbb
or
out
cmpl
and
rcrl
movb
pop
push
jge
inc
jle
loop
sub
adc
mov
testb
or
leave
dec
sbb
adc
pop
pop
ds
mov
jnp
pop
mov
shll
push
push
mov
sub
cmp
stc
arpl
cmp
scas
mov
out
or
xor
push
mov
stc
adc
popf
aam
lock
cmp
cmp
aaa
imul
cmp
cmp
sub
sub
frstor
push
sub
je
add
fbstp
dec
cltd
les
mov
push
adc
and
add
or
jecxz
dec
mov
push
shlb
shlb
outsb
jle
and
repz
cmp
adc
xchg
jo
dec
jbe
mov
lds
sub
popa
scas
add
and
push
inc
xchg
xor
dec
sti
xchg
cmp
dec
pushl
mov
or
mov
dec
xlat
inc
out
jbe
adc
pop
push
mov
push
fcoms
repnz
ljmp
rolb
xchg
icebp
lock
dec
mov
sub
divb
pop
lret
cmp
xchg
push
and
ss
aad
sti
or
shrl
pop
imul
in
lea
jo
bswap
dec
test
mov
into
dec
js
bound
clc
jp
pop
mov
std
bound
je
movsb
imul
imul
push
inc
fs
dec
and
lret
pushf
or
pop
fcoml
inc
lcall
negb
orl
outsl
pop
mov
push
push
es
scas
or
cmc
mov
std
nop
arpl
push
sbb
mov
adc
stos
mov
mov
ljmp
imul
mov
enter
pop
inc
pop
xchg
clc
xchg
arpl
insb
push
dec
push
mov
and
leave
jge
jle
cld
or
pop
push
cltd
sub
outsb
aad
outsb
mov
lret
cld
mov
test
inc
insb
iret
lret
jle
push
pop
stos
into
jb
xchg
xor
cmc
and
inc
pop
mov
push
mulb
inc
imul
xchg
sbb
into
add
ret
push
std
int3
out
out
inc
xchg
add
je
inc
xchg
gs
lahf
in
repnz
jns
cwtl
ljmp
cli
dec
push
dec
sahf
adc
test
pop
sbb
in
jmp
mov
xchg
mov
fidivs
cmp
xor
lret
jb
add
sbb
addr16
sub
loop
sbb
mov
das
pop
rcll
mov
movl
sub
pop
adcl
aaa
scas
lret
sbb
in
scas
cld
call
inc
push
mov
scas
mov
lock
hlt
mov
pop
incb
aam
movsl
pop
lahf
lcall
lock
adc
test
or
in
aad
lods
iret
rclb
adc
sahf
aaa
push
lret
sbb
lods
push
in
and
mov
ficoms
mov
mov
xor
loope
out
or
push
sahf
pop
lods
cltd
mov
push
das
xor
mov
xchg
cmpsb
loopne
jo
bound
mov
inc
fs
sbb
cmp
lods
nop
pop
insl
aas
pop
push
mov
xchg
xorb
arpl
cmp
xor
sbb
dec
stc
aas
imul
jecxz
push
push
dec
sbb
xchg
push
add
jle
push
bound
lds
call
pop
andl
adc
cmpl
cmpsb
in
xchg
add
sahf
xchg
push
jb
cmp
jne
jbe
adc
jl
lock
stos
jp
cmp
repnz
xor
test
cmc
and
hlt
add
cld
inc
inc
inc
and
mov
xchg
inc
shr
or
pusha
add
lea
cmpsb
cmp
jb
and
xor
sub
pushl
adc
call
ljmp
lahf
ltr
xchg
adc
inc
and
lret
sbb
push
xchg
fistpll
gs
mov
mov
push
call
sbb
sahf
pop
cmp
sub
das
repnz
out
adc
push
mov
push
xchg
push
pop
lahf
cmpsl
incb
cmp
add
pop
jl
cmc
jl
psubw
push
mov
or
test
xchg
cli
xchg
sbbl
imul
mov
push
enter
mov
imul
cmpsl
sbb
clc
iret
aam
cmp
jmp
and
ret
imul
sbb
lret
outsb
clc
dec
and
movsb
push
mov
adc
push
cmpsl
or
pushf
in
push
push
add
sub
pop
xor
fsts
sbb
ret
xchg
sbb
cmp
je
call
bound
cmp
and
dec
js
movsb
iret
or
out
scas
rorl
push
add
sub
out
jmp
or
sub
bound
ret
out
in
xchg
xor
pop
jmp
orb
and
out
dec
sahf
fsubrs
les
mov
arpl
push
in
mov
shr
mov
mov
cwtl
test
jge
xchg
adc
insb
cmpsb
test
inc
pop
add
pop
das
les
iret
mov
push
repz
inc
sub
and
std
fistps
rcrb
cmpb
jecxz
sub
adcl
out
ss
add
mov
daa
ja
mov
fmuls
mov
mov
jnp
dec
inc
fwait
mov
cmp
mov
out
shrl
dec
cld
mov
cmpsb
mov
das
xchg
ss
lock
adc
cmp
mov
int3
in
loop
or
popa
scas
leave
and
pop
pop
dec
daa
pop
les
or
or
adc
fcmovb
jae
cmp
xor
nop
sub
adc
cmp
add
dec
sub
sbb
sub
cld
push
add
das
sbb
jns
in
adc
rclb
fnstenv
inc
sbb
cmp
cmp
or
in
aaa
subl
addr16
or
popa
pop
inc
pop
scas
jmp
push
ss
sti
inc
dec
sahf
xchg
leave
lcall
popf
lods
fistpl
mov
nop
xchg
dec
jecxz
dec
adc
dec
fistps
dec
cmc
push
push
fadd
lret
lods
adc
js
icebp
pop
mov
push
cmp
pop
cli
cmpb
mov
pop
arpl
rclb
mov
pushaw
or
mov
out
sti
test
mov
pop
jbe
lret
enter
loop
lret
cld
add
xchg
mov
sub
mov
and
cmpsl
dec
mov
xor
push
jne
push
mov
xchg
stos
cmp
dec
ret
cltd
int3
sbb
push
dec
out
fisttpl
sti
and
mov
push
ds
into
jnp
or
sbb
cld
daa
cmp
lock
into
sbb
and
ja
add
or
mov
sbb
xchg
pop
pop
mov
add
mov
and
xchg
jnp
aaa
addr16
xchg
movsb
push
test
adc
and
mov
pop
push
test
dec
pop
icebp
pop
sub
shl
orb
pop
ret
es
cmp
add
xchg
mov
test
adc
mov
or
xor
push
rorl
sub
and
add
mov
sbb
fwait
daa
push
ja
mov
cld
add
in
mov
pop
and
push
lock
stc
je
out
sub
xor
ret
push
dec
add
mov
inc
rorl
mov
xchg
pop
add
ja
jmp
xor
jp
sbb
mov
mov
inc
aam
test
xchg
xchg
or
add
push
jecxz
mov
adc
jmp
dec
push
mov
jns
xor
clc
adc
hlt
xor
push
dec
pop
int3
dec
addr16
push
stos
pop
adc
push
mov
ljmp
pop
push
sub
ljmp
in
xchg
loope
mov
xor
popa
jle
mov
call
pop
or
stos
mov
adc
add
pop
aas
or
and
out
mov
mov
das
and
popf
pop
lods
push
jno
push
js
jl
mov
pop
push
xchg
test
loop
fidivrs
xchg
inc
mov
insb
subl
adc
sub
aas
xchg
test
jp
leave
ret
aas
aad
jae
and
fwait
dec
and
sub
imul
arpl
sbb
adc
sbb
pop
int3
jl
add
add
icebp
mov
xor
int3
hlt
mov
iret
mov
sbb
cli
divl
loopne
rcrb
push
sub
out
mov
insb
xchg
pop
mov
es
adc
and
xchg
push
js
pop
sbb
rolb
in
es
aaa
adc
jno
xchg
aad
sbb
mov
lock
push
filds
clc
cmpsb
aam
mov
xchg
cmp
add
inc
adc
jo
sbb
xchg
pop
pushf
mov
xchg
xchg
jne
jecxz
outsl
jl
call
dec
popa
mov
mov
gs
test
inc
pop
popf
into
lods
sbb
cmp
cmp
mov
jae
cmp
lret
arpl
xor
ret
mov
mov
add
out
cmpsl
sub
mov
leave
popa
mov
decb
fiadds
lahf
jecxz
out
andb
les
leave
cmp
cmc
imul
fisubrs
xor
sub
pusha
push
xchg
scas
cwtl
xorb
lahf
mov
popf
stc
adc
cmp
fsubr
or
mov
out
sub
in
data16
cs
das
xor
xchg
loope
sbb
mov
xchg
pop
stos
cmp
jae
out
cmp
xchg
sahf
hlt
and
sbb
aad
imul
inc
in
xlat
cltd
sti
or
pop
cmp
jno
pushl
adc
cltd
dec
addr16
mov
cs
push
xor
push
into
adc
sub
fmul
add
sbb
push
nop
pop
and
push
lcall
xchg
jnp
push
fimull
aad
shlb
sti
pop
std
in
push
jnp
icebp
jmp
push
lods
cs
loop
xorl
je
mov
aaa
lret
or
adc
pop
adc
fisubrs
and
add
data16
and
inc
mov
dec
xor
push
rcr
xchg
add
fwait
scas
mov
addb
jae
push
out
cmpb
rclb
lods
and
outsb
xchg
sub
cld
cmp
pop
mov
adc
dec
inc
sbb
pop
mov
pop
insl
sbb
sbb
loop
cs
stc
pop
add
adc
xchg
add
rorb
push
push
test
rclb
mov
inc
dec
jmp
inc
pusha
cli
in
adc
xor
xor
add
scas
icebp
dec
sti
ret
insb
pop
shrl
outsb
mov
xchg
in
pop
sbbl
mov
cmp
icebp
lods
xchg
xchg
adc
iret
lds
or
cmpsb
enter
sub
pop
xor
jns
ja
fwait
cmp
adc
inc
bound
pop
jae
dec
int3
xor
jbe
iret
mov
ret
jne
pop
paddb
push
aaa
adc
iret
clc
mov
cmp
andl
mul
jle
cld
push
push
aad
sti
leave
sarl
or
lods
mov
pusha
lret
mov
outsl
std
mov
out
adc
scas
addb
mov
lods
fisttpl
push
jnp
cmp
mov
je
and
lret
sub
inc
mov
stos
xchg
rolb
aaa
popf
fs
rep
out
xchg
das
pop
es
mov
mov
repz
mov
iret
sbb
lea
inc
and
icebp
jecxz
inc
xor
int3
mov
sbb
fstps
adc
push
mov
or
push
mov
in
push
xor
push
mov
add
mov
fcmovbe
popf
rorl
push
jae
xchg
nop
out
xchg
notl
jmp
out
and
nop
sbb
jbe
mov
mov
imul
stc
mov
push
in
cli
push
mov
adc
cmp
adc
jns
xor
fwait
mov
xchg
aam
jl
add
mov
mov
mov
std
inc
pop
add
dec
cmp
jnp
sarb
jb
inc
cli
sub
push
sbb
sbb
inc
dec
cmpsb
jo
adc
xchg
lahf
push
jg
xchg
addr16
out
incl
arpl
dec
or
cmpsl
pop
fsubrp
lock
movsb
mov
cs
jb
inc
inc
insb
cmpsb
repnz
jl
into
mov
pop
aam
pop
sbb
sub
mov
mov
cwtl
into
shlb
je
fs
cmp
push
es
es
movsb
loope
inc
cmc
stc
mov
pop
cmp
xchg
jbe
mov
test
out
jbe
xchg
mov
adc
dec
add
fstl
iret
or
mov
cwtl
in
test
sarb
pop
or
mov
jmp
adc
sub
loopne
rcll
aad
jecxz
xor
je
out
jl
sub
mov
mov
adc
jmp
xor
cli
mov
push
push
scas
lret
inc
loopne
sbb
cli
decb
iret
flds
inc
and
inc
jmp
mov
pop
dec
mov
jbe
dec
sarl
push
dec
mov
lea
push
es
cmp
dec
mov
fidivrs
test
insl
ror
dec
icebp
adc
and
icebp
mov
xchg
inc
movsl
sbb
jno
dec
and
popa
stos
ficompl
clc
mov
out
xor
scas
dec
sahf
xor
push
hlt
in
popw
mov
dec
fisubrs
mov
dec
dec
xlat
mov
jnp
mov
int3
addr16
dec
movsl
push
inc
pop
das
sbb
push
inc
or
fcompl
inc
mov
sar
shll
pop
pop
jge
sbb
sbb
push
adc
test
inc
add
add
or
or
lods
jmp
fadd
or
rcll
sbb
stos
mov
in
jl
cli
out
nop
int
mov
ss
push
cmp
xchg
adc
int3
pop
xchg
jg
adc
outsb
outsb
repz
sub
pop
stos
cwtl
push
loop
mov
scas
sbb
pusha
mov
cmc
enter
jge
adc
mov
mov
push
xor
sub
aaa
lcall
test
add
bound
mov
stos
push
lcall
mov
and
push
fidivrl
lret
cmpsb
fadds
sbb
fbld
rorl
sbb
test
adc
sub
outsb
jbe
pushf
mov
cmp
push
in
cmp
pop
dec
popa
inc
in
repz
fists
std
mov
scas
pop
sbb
inc
mov
cmc
mov
xor
jmp
nop
sbb
jp
nop
imul
pop
xchg
imul
dec
pop
outsl
cld
repnz
div
push
loopne
xchg
pusha
and
or
push
fdivrl
mov
jg
jbe
js
sahf
gs
stos
inc
loopne
xchg
dec
mov
fcompl
add
fisubrl
lahf
xor
lcall
mov
loopne
outsb
into
mov
jecxz
fidivl
or
mov
inc
test
pop
popf
cld
js
pop
ja
jmp
mov
mov
lds
lar
fcmovnbe
xchg
out
inc
stos
lea
mov
shl
bswap
jp
mov
or
push
lds
enter
xchg
pop
dec
fiadds
or
sub
mov
shrl
sub
or
xchg
vandps
repz
lock
sbb
ja
and
sti
dec
jno
insb
cmp
pop
sub
pop
xor
pop
hlt
push
mov
xchg
fwait
push
in
stos
xchg
pop
or
nop
push
mov
dec
mov
lea
xchg
xlat
or
std
pop
sub
jns
xchg
adc
repz
sahf
lahf
inc
arpl
inc
clc
imul
mov
arpl
icebp
stos
inc
call
push
mov
gs
mov
or
mov
sub
cmp
pop
out
push
cmc
inc
js
and
out
sub
mov
xchg
pop
mov
dec
add
mov
jo
sbb
push
xor
pop
scas
sub
ss
mov
ljmp
test
adc
pop
pop
adc
cmpsl
xchg
or
jno
test
adc
leave
jnp
dec
mov
movsb
lret
jle
mov
xchg
xchg
push
add
pushf
adc
pop
movl
add
jb
cmp
scas
pop
xchg
xchg
leave
fcmovne
mov
aas
cmp
xor
sub
dec
int3
inc
pusha
mov
rol
rcll
jl
inc
pusha
jle
adc
test
repnz
mov
sub
cmpsl
xchg
loop
movsb
cltd
mov
ficompl
mov
xor
jb
mov
test
insl
and
xor
and
push
dec
imul
ret
xor
xchg
jne
xchg
hlt
or
jno
cmpsb
out
out
push
mov
lods
dec
imul
cmp
iret
inc
add
dec
xchg
test
lahf
adc
xor
ret
xchg
lock
xchg
sbb
xchg
jns
out
and
add
fidivrs
xchg
lea
and
iret
ljmp
mov
xlat
sbb
add
mull
dec
enter
mov
aad
add
cs
cli
scas
js
mov
mov
imul
leave
sbbb
call
das
jge
call
cmp
push
add
sub
sub
fwait
nop
mov
repz
fs
jns
lds
jg
pop
mov
sbb
popl
inc
jne
mov
add
mov
xor
data16
push
gs
mov
inc
push
std
add
popf
into
pushf
xchg
ret
push
pop
cmp
std
dec
scas
stos
outsb
xorl
xchg
xor
fcoms
inc
cltd
out
lahf
push
cmp
xchg
jbe
jmp
mov
push
sub
fimull
out
jecxz
pop
jmp
xor
push
or
in
mov
adc
push
lods
ss
xor
ret
sbb
cmpsb
pop
movsl
sbb
dec
dec
ljmp
bound
jmp
inc
add
sbb
push
in
xchg
vmovsd
inc
mov
cld
xchg
and
fidivl
pop
push
inc
xor
xor
hlt
cmp
in
stos
or
jecxz
or
gs
and
push
iret
ret
stos
mov
clc
cmp
scas
jno
sub
push
adc
lret
adc
xor
push
sub
sub
or
xchg
fucomp
aas
insl
das
mov
sub
xor
jg
mov
pushaw
in
lahf
pushf
xchg
pop
in
hlt
mov
mov
mov
sbb
hlt
dec
cmpsb
les
data16
sub
fwait
lret
sbb
pop
sub
push
stc
fsubrp
push
ja
jb
adcl
subb
repz
aaa
mov
and
jo
outsb
cmp
out
jl
mov
xor
test
xchg
xchg
pop
ss
push
nop
loope
mov
jp
out
repz
fs
jecxz
xchg
bound
mov
adc
sub
jbe
or
pop
mov
inc
xchg
test
popf
pusha
cs
sbb
cmc
or
mov
xchg
int
cmpsl
int
leave
pop
cmpsb
dec
inc
int
cld
cmp
pop
or
andl
test
add
adc
jl
mov
dec
inc
or
push
scas
cmp
sahf
inc
xchg
bnd
push
jmp
cli
lret
fyl2x
sbb
lock
aam
outsb
aam
icebp
xchg
mov
jo
dec
dec
cmp
fwait
test
loope
dec
sub
repz
insl
mov
sbbl
sub
stos
ds
push
js
out
hlt
push
roll
mov
es
cmp
jle
push
fdivl
add
rolb
and
std
insl
out
mov
out
xchg
int3
scas
jne
push
sub
xchg
jmp
adc
loopne
ljmp
sub
adc
ljmp
mov
cmpsb
mov
movsl
popa
jecxz
lock
cmp
cmp
lods
mov
enter
out
outsb
hlt
ja
lea
dec
add
mov
pop
int3
push
add
loop
iret
xchg
add
sti
call
orl
cli
dec
cmp
lea
add
out
shrb
mov
cmpb
outsl
sbb
xlat
nop
mov
or
lods
inc
aas
rcll
or
hlt
inc
pushf
push
inc
lock
xor
out
popf
fildll
cmp
push
lea
stos
into
dec
inc
sub
mov
dec
das
lret
jl
es
add
aaa
mov
stos
push
clc
jne
jecxz
sub
and
adc
imul
nop
sbb
dec
mov
in
jb
lar
xor
pusha
push
add
insl
jg
sub
loopne
mov
add
in
push
mov
sbb
rorl
push
nop
mov
sub
test
add
mov
cmc
fildll
punpcklwd
sbb
movsl
xor
scas
or
jo
cmpsb
mov
jl
or
cmc
add
cld
shrl
mov
mov
xor
mov
inc
pusha
sarb
lahf
push
in
leave
test
ja
and
and
mov
sbb
ficompl
push
js
fsubl
icebp
xchg
mov
dec
jbe
inc
repnz
out
pop
test
loope
xor
gs
sub
pop
nop
adc
rcrb
push
inc
pop
fsubr
loopne
in
stos
xchg
push
pop
es
or
jae
adc
mov
inc
aaa
es
add
loop
cmpsb
negl
push
mov
jl
xchg
sbb
or
pushf
sub
in
pusha
clc
push
push
hlt
pop
xor
fsubs
push
les
push
push
movsb
fdivs
push
cld
cwtl
out
shl
xor
test
mov
push
push
mov
icebp
lds
mov
fmuls
movsl
popa
jecxz
pop
mov
sbb
mov
xchg
mov
call
sub
fsubrl
and
aad
outsb
xchg
cmp
jbe
and
jecxz
cmpxchg
cmp
jae
pop
aad
dec
jno
fisttpll
scas
mov
mov
sbbb
push
push
data16
sub
bound
push
mov
inc
icebp
clc
push
jb
fs
mov
mov
fisubrs
mov
adc
incl
fnstenv
and
cmpsb
rcl
ret
outsl
fwait
popf
xchg
mov
pop
out
add
pusha
dec
outsb
sbb
imul
ss
or
out
fimull
jmp
jl
jns
leave
popf
cmp
cmp
or
outsl
xlat
mov
inc
sbbl
jb
out
mov
mov
out
pop
ror
lcall
into
adc
mov
scas
cmp
mov
push
inc
lods
test
inc
fimuls
movsl
rol
pusha
jo
or
fs
push
dec
jns
std
fsubrs
sbb
push
or
xchg
bound
jl,pt
push
jge
sbb
test
pop
test
add
mov
repnz
pushf
mov
mov
sbb
mov
aas
add
jge,pn
inc
mov
mov
gs
std
mov
push
adc
sub
lret
out
fcomi
fstpl
and
lock
jno
push
sub
testb
push
cwtl
add
cwtl
inc
fsts
mov
or
jne
nop
push
push
stc
and
cmp
adc
cltd
sub
adc
mov
push
mov
lock
sahf
das
adc
adc
or
inc
adc
enter
test
add
jns
dec
lods
push
cmp
popa
mov
lret
jge
leave
add
jge
leave
jo
jne
inc
lret
aad
ljmp
icebp
mov
stos
fisubrl
mov
dec
dec
mov
add
or
bound
lods
dec
sbb
jbe
scas
push
jbe
inc
int
jecxz
jo
inc
arpl
pop
sbb
lea
cld
outsb
mov
adc
test
fisubrs
mov
jl
pop
test
pop
mov
loopne
psubd
push
idivl
cmp
outsb
clc
mov
and
pop
rcll
and
cld
dec
inc
cmpsb
ja
jne
jle
cmp
adc
fnsave
dec
bound
mov
clc
mov
mov
popa
loop
jnp
ljmp
in
sbb
shl
xadd
jo
sti
adc
repnz
test
and
mov
mov
arpl
repnz
mov
add
xchg
pushl
dec
xchg
fwait
sbb
clc
sbb
sarl
cmpsb
sti
xchg
dec
adc
jae
mov
and
clc
les
dec
out
shl
jbe
xchg
daa
ljmp
movsl
sub
movsb
stc
push
sub
data16
shrl
jle
mov
mov
das
or
jmp
adc
cltd
repnz
sahf
cmpsb
dec
and
adc
cmpsl
aam
fiadds
jge
pop
mov
xchg
xlat
mov
and
push
cmp
xchg
adc
sti
push
jmp
roll
filds
xchg
fidivl
rcll
xor
lods
andl
lret
das
roll
adc
mov
icebp
scas
popf
add
jae
or
int
test
sub
icebp
jle
hlt
aaa
jb
je
out
stos
iret
je
jne
in
mov
dec
adc
xor
sbb
cli
in
adc
push
fistpl
bound
repnz
shl
mov
movsb
fildl
mov
mov
enter
imul
adc
std
xchg
sub
mov
aaa
dec
xor
into
or
popf
sub
and
sbb
cmc
out
clc
inc
stc
outsb
xchg
lds
dec
sahf
scas
adc
fsubrs
dec
hlt
or
aas
in
push
std
cmpsl
sub
sbbl
pop
jl
js
jle
scas
dec
mov
xchg
jno
ror
movsl
lods
mov
mov
shll
out
fldenv
push
jae
fwait
ret
fnsave
ret
lods
jns
pop
inc
dec
leave
push
imul
mov
into
aad
inc
idivb
ja
add
mov
ds
dec
gs
mov
push
pop
gs
push
mov
adc
std
or
pushf
sbb
loopne
xchg
mov
rcll
push
movsb
ret
les
outsl
cmp
nop
inc
or
adc
xorb
sbb
movsl
dec
ret
les
and
test
inc
hlt
add
into
gs
mov
jnp
xor
rcll
fisubl
int
fcmovbe
popl
push
test
jp
sbb
mov
int3
and
jno
sbb
or
fstps
adc
jmp
loop
push
iret
inc
mov
or
pop
mov
xchg
and
mov
pop
pop
repz
adc
repz
push
jp
mov
and
test
aam
xor
nop
ficompl
out
pop
cmp
icebp
add
bnd
mov
faddl
mov
inc
insl
fildll
and
adc
sbb
test
mov
add
pop
repz
push
or
aas
inc
cmpsb
movb
fnstenv
sbb
movsb
xchg
ficoms
pop
mov
fimuls
jbe
xor
mov
jecxz
cmp
jnp
mov
inc
enter
faddl
scas
aad
inc
mov
dec
divps
shr
mov
pop
js
rcl
and
ss
nop
cwtl
xchg
les
mov
and
int
outsb
insb
call
aas
lret
jns
or
jecxz
pop
fst
cmp
mov
sar
xchg
mov
push
push
pop
xchg
lods
std
es
popf
mov
cwtl
gs
xor
std
jl
shrl
frstor
xorl
arpl
je
in
xchg
pop
ljmp
sub
shll
mov
lret
jl
add
and
pop
aad
jns
jp
and
add
movsb
adc
push
aas
arpl
adc
pusha
or
sub
mov
sbb
xchg
out
imull
ds
pop
xchg
int3
fstp
lods
movsl
into
stos
mov
pop
or
addl
cltd
iret
cmp
push
dec
shll
test
cmp
pop
sti
dec
scas
inc
xor
pop
outsb
roll
in
push
sahf
ffreep
inc
loop
inc
aas
and
mov
lods
lds
mov
enter
subl
xor
lcall
push
pushf
fsubp
hlt
cs
clc
lods
cwtl
lods
xor
sti
jae
mov
xchg
insl
adc
sub
rcrb
add
fs
sbb
fistps
mov
ljmp
lds
incb
imul
jb
rolb
mov
mov
nop
jb
pop
lock
adc
mov
dec
or
lcall
cld
js
fists
and
test
mov
sbb
shrl
shl
sbb
ljmp
inc
xor
ucomiss
dec
into
ds
pop
int
xchg
cmpsl
push
shll
xor
push
xor
or
in
and
movsl
es
sbb
out
push
adc
ljmp
xchg
popf
jecxz
jnp
add
cmp
fsubrp
shlb
loope
mov
mov
in
mov
bnd
pushf
clc
pop
adc
jnp
or
jp
es
in
in
sbb
add
jo
shl
sub
mov
push
cmp
lods
aam
bound
cmp
ja
mov
mov
add
outsb
sbb
stos
jge
fcomip
sbbl
pushf
cvtps2pd
xchg
rorl
adcb
daa
inc
clc
inc
pusha
scas
je
imul
enter
sbb
insl
ret
les
pop
ss
call
mov
clc
adc
and
jo
push
rcrb
mov
mov
inc
mov
inc
pop
cltd
clc
int
or
mov
jmp
push
repnz
popf
push
push
mov
push
mov
mov
aaa
cmp
les
add
or
inc
mov
lret
nop
pop
mov
inc
pop
popa
fldl
rdpmc
ficoms
lods
dec
push
rcll
iret
cmp
adc
xor
or
test
pop
fstl
fdivs
scas
add
movb
and
das
jns
mov
pushf
daa
aam
adc
pop
out
rorb
negl
cmp
int
sub
mov
sti
fisttpll
outsl
and
lods
lods
cmp
and
sub
in
outsl
fidivs
push
xchg
inc
cmp
int3
mov
mov
push
mov
add
cmp
push
or
lahf
cmp
pop
pop
jnp
sbb
idivb
gs
ja
pop
cmc
push
sarb
push
mov
pop
outsl
out
dec
fs
fwait
sbb
cmp
nop
fs
mov
jge
add
mov
mov
sub
and
hlt
or
mov
pop
jmp
cmpsb
fs
pushf
jmp
inc
arpl
adc
pop
push
mov
ret
addl
pusha
lcall
stc
mov
xor
jbe
fisubrl
bound
inc
push
push
scas
stos
jmp
cmpsb
cmp
loop
das
aam
fsubrp
fisttpl
sbbl
pop
je
push
sub
fnstsw
clc
pop
out
cmp
test
sub
and
mov
clc
dec
and
sub
mov
xchg
mov
sub
jmp
or
cli
xor
xor
mov
mov
pop
inc
or
push
jecxz
iret
js
test
jbe
mov
cmpsl
outsl
in
in
clc
add
dec
scas
pop
ss
bnd
cmp
and
cvtdq2ps
xchg
shrl
cmpsb
lea
aaa
test
ror
test
jg
adc
les
mov
dec
inc
aad
loopne
stos
dec
out
fisttpl
loopne
jae
jne
out
std
jl
in
sahf
push
pusha
and
xor
jp
push
cltd
cmc
mov
sub
sbbl
iret
and
pusha
fs
repz
xchg
mov
xor
int
mov
nop
por
cwtl
sbb
icebp
dec
aam
shll
jmp
jg
fdivrs
sbb
xor
shr
and
cmp
repz
test
and
and
dec
push
push
mov
imulb
out
gs
loop
lcall
push
adc
mov
stos
mov
mov
dec
ds
mov
rcr
push
jae
je
rolb
xor
mov
sbb
sbb
idiv
insb
je
and
pop
sub
rol
aam
push
mov
daa
cltd
mov
fmuls
lret
cld
push
inc
push
sbbl
mov
or
cmp
movsl
insb
or
xor
das
dec
ja
adc
sub
icebp
jp
jnp
xor
mov
lods
adc
out
hlt
inc
xchg
out
fnsave
mov
jl
cltd
sub
out
nop
push
pop
ret
jns
jne
in
adc
cmp
xor
dec
mov
mov
xor
dec
mov
mov
int
mov
aad
mov
push
int3
cmp
sub
out
sbb
outsl
cmp
jae
and
iret
push
pop
icebp
cmp
push
sub
jmp
adc
aam
push
inc
xlat
adc
outsl
call
adc
test
add
jmp
lret
cltd
mov
inc
bound
jecxz
mov
scas
in
add
xlat
mov
data16
movsl
xchg
pop
mov
add
pop
xlat
adc
xor
insl
lahf
inc
or
jnp
mov
fldcw
sub
imul
es
sub
pop
loop
test
pop
pusha
dec
sahf
and
mov
add
mov
xchg
test
push
data16
inc
mov
loop
mov
lret
icebp
aad
outsb
cmp
leave
sbb
push
popa
add
pop
mov
adc
jne
cmpsb
ljmp
pop
mov
push
push
and
xlat
mov
ljmp
shll
adc
inc
notrack
fimull
cmpsl
fcomip
inc
cmc
out
push
sub
movsb
sub
and
xchg
loop
lods
jge
xchg
pop
ds
mov
enter
sub
pop
add
dec
pop
ret
or
and
icebp
dec
cmpsb
xchg
xchg
scas
cltd
stc
sbb
lods
lcall
dec
xchg
rol
dec
xchg
pop
rol
pushf
add
jl
pushf
mov
xor
rcrb
mov
clc
pop
xchg
ds
and
add
shlb
and
xchg
mov
jb
sbb
jmp
inc
and
int3
mov
fwait
xchg
inc
xor
add
cmc
pop
and
xor
fdivrs
lods
jg
lods
push
jg
lock
sub
mov
sbb
jg
loop
addb
enter
ja
xchg
popf
in
clc
cmp
ja
cmp
into
xor
mov
cwtl
iret
out
stos
cmp
xor
icebp
imul
lar
add
aam
dec
add
xchg
cwtl
imul
adc
lock
repz
pop
mov
pop
bound
sbb
cmp
cmp
leave
add
pop
scas
and
push
cwtl
add
in
sub
fimull
fwait
insl
mov
sbb
idiv
add
arpl
fistps
xor
popf
pop
outsl
add
mov
sti
sub
outsb
ret
xchg
test
add
inc
cld
jp
mov
icebp
mov
rorb
cmp
sbb
outsl
les
out
roll
lea
jae
enter
jmp
js
in
or
lock
xor
pop
pop
scas
mov
test
test
fildl
and
add
aam
je
scas
mov
mov
add
pop
push
ffree
iret
nop
jg
add
pop
adc
cltd
mov
xchg
sub
shrl
ss
pop
std
js
insb
mov
push
and
xchg
dec
lret
xchg
xor
ret
jne
pushf
and
js
xor
xchg
lret
rep
and
clc
shlb
mov
pusha
in
dec
rcr
mov
nop
in
testl
cltd
roll
cmp
pop
sti
jle
jmp
stos
and
xor
sahf
pop
fidivl
xor
aam
xor
push
mov
jmp
fstpt
xchg
pop
push
push
mov
out
xor
xor
fisttpl
cs
fsubs
outsl
fwait
mov
jns
test
mov
and
out
insb
push
sahf
dec
shl
push
mov
or
push
loop
lea
fimuls
inc
ja
std
and
stos
mov
addr16
sub
sub
push
cld
outsl
mov
dec
fwait
into
dec
imul
or
push
fcompp
adc
pop
rcl
aam
pushf
cli
ljmp
jae
rcll
adc
mov
or
mov
push
lret
pop
int3
subl
sub
imul
dec
xor
pop
jnp
mov
cs
sbb
repnz
rolb
not
mov
xor
xchg
call
or
sub
insb
shlb
addl
mov
xor
push
stos
jge
inc
add
inc
cmp
jne
fildll
stos
xchg
push
cs
int3
nop
lock
nop
add
iret
push
push
out
icebp
fs
and
sbb
pop
int
xor
inc
jle
push
adc
xchg
sub
mov
jecxz
nop
bound
mov
sbbl
xor
enter
push
into
scas
inc
inc
push
sub
movsl
push
in
push
aas
shlb
leave
dec
cmc
jb
ds
jge
lahf
sarb
sbb
fimull
out
fadds
or
xchg
ljmp
or
lret
int
lret
nop
and
pop
push
dec
and
mov
lods
stc
jge
loopne
mov
test
subl
and
roll
outsb
mov
pop
add
sbb
pop
pop
inc
scas
insb
pop
sub
shll
fcomps
outsb
sbbl
inc
xor
sub
mov
jge
sub
xchg
add
adc
inc
aaa
int3
xor
sbb
cli
jl
lret
into
pusha
dec
or
call
mov
cmp
cmp
out
mov
into
jns
jecxz
dec
adc
push
cmp
roll
loope
test
mov
cmp
insl
inc
std
pop
lret
decb
sbb
push
int3
fstps
out
pop
inc
ljmp
call
jb
inc
pop
inc
rorl
pop
imulb
mov
call
and
cmp
xor
push
jmp
adc
popf
and
inc
sbbl
fisubl
jmp
xchg
add
jge
lahf
stos
add
nop
pop
out
mov
into
jge
mov
pop
mov
add
mov
or
es
lahf
sub
jp
jno
pop
inc
test
into
xor
stc
popf
ror
cmc
hlt
or
ss
cmp
sbb
inc
or
mov
mov
adc
xlat
ljmp
jo
lea
jno
mov
push
jl
rcrb
cmpsl
xchg
das
push
sbb
jns
sahf
push
scas
das
inc
mov
add
pop
push
mov
jl,pt
xor
mov
xchg
and
test
out
std
pop
add
fwait
test
loopne,pt
mov
cmpsb
addr16
je
lret
test
mov
and
aad
sub
mov
jo
ds
pop
jb
stos
cmc
je
push
or
in
inc
lock
sub
popf
mov
push
dec
in
into
ret
add
sahf
fstpl
sahf
jge
enter
jge
adc
add
mov
rcrl
ljmp
push
fsubr
aad
js
stos
cmp
pop
or
out
pushf
pusha
add
cmp
cmp
loop
mov
std
pop
popa
sti
and
xchg
lock
xor
xchg
add
addl
adc
inc
popa
cli
sbb
ss
int3
fs
int
mov
movsl
mov
rcrl
add
sub
out
rorl
mov
movsl
dec
inc
cltd
pop
idivb
cs
andb
pushf
loop
loope
sbb
test
ja
inc
fcomp
pop
jp
and
mov
in
dec
adc
adc
xchg
or
dec
and
jb
cmp
mov
mov
add
adc
lock
xor
loope
and
les
mov
inc
not
fucomi
push
sbb
loop
push
lret
mov
inc
xchg
jle
cwtl
fstpl
enter
bound
xor
es
cmp
jne
lcall
mov
rorl
std
xchg
xlat
mov
les
sub
iret
out
daa
push
fwait
andl
icebp
cmpsb
and
dec
andl
or
sbb
jbe
or
push
and
pop
pop
cltd
or
mov
xor
outsb
test
xor
sbb
xor
pop
pushf
out
mov
mov
pop
pop
jmp
rcrl
and
mov
xor
movsl
inc
mov
and
xchg
pop
imul
adc
pop
lods
mov
dec
roll
mov
rcrb
push
daa
mov
fcmovnu
pop
and
mov
mov
sub
push
fs
mov
mov
cmp
mov
mov
ljmp
push
movsl
mov
int3
inc
dec
adc
hlt
in
aaa
ret
enter
xchg
push
scas
imul
push
mov
xchg
xchg
scas
jno
clc
jae
pusha
mov
aam
push
pop
sbb
inc
jle
in
test
data16
jbe
push
or
stc
sub
push
mov
pop
or
xchg
push
repnz
psubb
fcompl
mov
out
shlb
pop
fisubrl
jp
xlat
jbe
icebp
pop
xchg
idivl
cmp
mov
loopne
daa
inc
cmp
pop
shll
nop
out
xor
push
jp
mov
pop
dec
cmp
xchg
ficoms
mov
mov
inc
mov
gs
stos
sub
sbbb
mov
mov
arpl
cld
jb
scas
adc
movsl
fsubl
jmp
inc
adc
dec
xor
je
test
cmp
inc
movsb
rclb
pop
fistpll
test
std
pop
mov
or
jp
xor
and
pop
je
andl
sbb
mov
push
call
and
push
lret
adcl
stos
loopne
inc
push
dec
mov
mov
or
jecxz
ja
or
push
mov
cmp
jmp
cli
or
je
rcrl
push
push
pop
addr16
push
jne
pop
jbe
inc
into
pop
orl
icebp
rclb
mov
popa
cmpsl
sbb
ds
mov
in
add
sub
bound
jg
sbb
sub
fcomp
push
mov
push
sub
push
add
mov
xchg
imul
movsb
neg
negl
xlat
or
int3
enter
sub
cmp
mov
lret
call
in
popf
fcoml
push
fstps
adc
mov
add
jle
cli
mov
repnz
mov
and
in
out
mov
icebp
loop
andb
iret
out
pushf
jbe
imul
xor
xchg
dec
add
mov
inc
outsl
in
mov
mov
xor
xchg
test
add
adc
rclb
xchg
sub
test
or
lods
addl
ret
mov
push
sarb
xchg
int
ss
popf
xor
jmp
loop
mov
adc
lds
cmp
jmp
stc
mov
inc
out
bound
mov
in
dec
sahf
mov
xchg
mov
dec
mov
push
cmp
and
mov
xchg
add
mov
cmp
fstps
jb
pop
stc
mov
adcb
mov
mov
jo
and
mov
mov
fidivrl
jp
fnclex
mov
cltd
sub
inc
mov
and
dec
lods
push
fsubl
cmp
mov
in
jmp
aam
inc
dec
pusha
jg
mov
inc
mov
sahf
pop
adc
mov
dec
je
jno
sbb
inc
inc
lahf
inc
es
sahf
aad
lods
loope
adc
in
dec
push
dec
dec
inc
jnp
mov
pop
xchg
fimull
xchg
adc
adc
je
mov
arpl
mov
mov
sub
jae
movsl
mov
xor
or
adc
dec
insb
jns
cli
jg
mov
jl
out
adc
adc
sbb
insl
movsl
gs
imul
mov
pop
dec
sti
call
sti
sub
cmpsl
mov
sub
or
jns
push
jl
dec
inc
push
std
stc
xor
adc
es
in
mov
mov
mov
or
mov
lahf
and
insl
pop
out
inc
xchg
arpl
sahf
jecxz
loop
cmp
adc
adc
jge
push
loop
call
roll
aam
shr
cld
dec
sbb
hlt
and
out
push
and
testl
pop
mov
mov
jl
xchg
ds
fisttpl
cmpsb
pop
mov
or
dec
jb
and
mov
add
mov
in
push
jns
imul
mov
cmp
fcmovnb
js
cltd
cld
insb
mov
push
jmp
out
rol
ret
jmp
andl
int3
jmp
xorb
gs
lcall
and
mov
push
push
mov
lcall
sub
sbb
icebp
lods
jmp
loop
adc
jmp
dec
inc
stos
sub
xlat
push
add
insb
cmc
das
push
outsl
mov
jne
out
mov
adc
add
cmp
sub
mov
andl
das
dec
shl
mov
enter
xchg
sub
setae
fsubl
lret
pop
fsubrl
cmp
mov
or
decl
fwait
mov
loope
je
inc
push
mov
mov
xchg
cmp
insl
subb
mov
mov
lock
insb
lock
decb
dec
xor
mov
sub
outsl
inc
fsub
sbb
rcrb
out
jge
addr16
xlat
int
jae
inc
fucomi
outsb
ja
les
dec
iret
push
test
in
flds
std
mov
inc
add
lcall
lret
mov
dec
pop
inc
imul
pop
lret
daa
add
sub
orb
jmp
stos
imul
enter
std
test
out
pop
call
mov
flds
cmp
mov
pusha
ds
imul
icebp
inc
mov
or
das
or
fadds
clc
and
fsubr
loope
mov
xchg
leave
icebp
fstp
fdiv
jl
mov
mov
rcrb
sarb
dec
frstor
out
mov
xlat
es
xchg
ror
jmp
movsb
adc
ja
adc
mov
push
aas
sti
pop
shlb
mov
push
lret
outsb
sahf
jecxz
into
enter
mov
pop
test
add
pop
jne
andb
mov
out
adc
cmpsl
iret
jns
in
popa
les
cmp
xor
mov
adc
out
lret
roll
jp
and
and
jne
scas
loope
rep
in
outsb
mov
sub
mov
lcall
cld
and
mov
jmp
std
js
xchg
pop
xor
push
or
ja
div
ret
adc
push
jbe
mov
xchg
sbb
mov
sbb
aam
aaa
in
adc
mov
ss
xchg
dec
les
push
cld
loope
mov
sub
sbb
adc
les
leave
leave
jecxz
in
in
jl
sarl
lret
stos
xchg
mov
sarb
xchg
add
cmp
add
pop
xlat
pop
mov
xor
idivb
fsubs
loopne
mov
test
popf
inc
icebp
pop
aad
pusha
loope
pop
xor
lret
mov
out
xor
pop
mov
loopne
pop
test
fmull
jl
jns
sub
daa
popf
pop
cmpb
mov
movsb
push
lea
clc
arpl
cmp
gs
addr16
adc
cmp
mov
mov
sub
adc
ds
adc
and
dec
aas
mov
adc
mov
adc
or
mov
mov
jns
js
mov
dec
loop
addr16
aam
data16
inc
adc
jne
xor
scas
mov
mov
push
sbb
inc
ret
cwtl
gs
pop
repnz
or
xchg
sbb
sbb
and
sub
mov
mov
lods
lea
repz
stc
mov
icebp
in
cmp
mov
jnp
sub
repnz
stos
mov
and
pop
jb
test
push
dec
insl
scas
jmp
xor
dec
sub
jnp
imul
mov
and
jo
add
push
hlt
dec
scas
mov
addl
inc
insl
jmp
ror
inc
and
mov
and
xor
mov
dec
xchg
ss
mov
add
pusha
movsb
pop
negl
push
loopne
sbb
mov
sub
loop
add
leave
adc
bound
dec
and
enter
mov
jp
test
adc
std
xchg
nop
inc
mov
jae
adc
lea
mov
dec
repnz
lcall
sbb
add
cmp
leave
shr
dec
faddl
push
fcmovne
scas
sahf
push
jns
aam
imul
sbb
add
jae
lahf
pcmpeqb
adc
cld
pop
mov
jno
xor
or
ds
push
test
pop
iret
adc
hlt
xchg
or
vpsubw
mov
sbb
nop
sbb
fsubl
xchg
xchg
loop
bound
mov
adc
mov
inc
je
enter
lahf
dec
mov
mov
pop
adc
adcl
pop
inc
mov
inc
divb
inc
push
icebp
loopne
push
icebp
inc
testl
lock
jge
xor
and
xor
and
or
stos
pop
push
push
lret
loope
pop
fwait
mov
and
hlt
or
xor
movsb
sub
jecxz
xchg
imul
iret
add
fmull
pusha
or
ficoms
dec
push
js
jp
in
jmp
and
sbb
push
addr16
mov
mov
fwait
shll
fisubs
cwtl
shlb
and
loopne
pop
xor
inc
dec
mov
dec
mov
add
outsl
pop
sub
sbb
sub
inc
cwtl
clc
lods
jno
jp
mov
mov
mov
xor
ffreep
int
cmp
sti
and
add
stos
cmp
jmp
push
add
push
in
adc
jle
scas
push
push
sub
repz
jo
pop
push
nop
subb
adc
ret
mov
mov
xlat
pop
adc
aad
adc
loopne
jmp
or
rol
fistl
jns
push
decl
sti
jle
sahf
leave
push
or
inc
sub
jno
jo
or
dec
and
adc
cli
fs
or
mov
pop
sbb
pushf
sahf
fwait
mov
add
popa
int
cld
sub
dec
mov
mov
scas
push
mov
sub
notl
jbe
pop
mov
xchg
leave
jno
jno
test
xchg
add
ret
push
pop
add
inc
or
push
mov
pushfw
mov
jae
push
xor
jle
int
shll
xchg
int3
mov
out
sbb
fwait
pop
enter
dec
mov
and
fdivs
xchg
push
cwtl
jnp
mov
adc
cmpsl
jecxz
push
stos
jle
and
popf
out
int3
push
nop
ret
mov
into
in
jecxz
sub
xchg
cmpsb
rcrb
iret
scas
les
leave
mov
sub
fistps
sub
in
and
addr16
sub
sub
mov
mov
dec
adcb
sbb
mov
xchg
push
ja
pop
xor
pop
and
stos
jbe
popa
inc
and
popa
icebp
mov
sarb
fsubr
pop
shrl
cmpsl
pop
pop
fnstcw
cmpsl
push
push
iret
jmp
mov
xchg
gs
dec
pop
popa
push
gs
mov
pop
mov
fdivrs
sbb
ss
cmp
cld
fistps
das
or
mov
pop
pop
int3
jb
imul
pop
pop
into
push
jno
pop
push
cli
or
outsl
pop
sbb
fistpl
mov
push
cmp
and
push
and
imull
fsubrs
adc
dec
outsb
jl
lcall
enter
dec
gs
stc
flds
subl
mov
dec
sbb
addr16
inc
outsl
jl
pop
mov
push
xchg
outsb
push
cmp
mov
push
insb
cmpsb
cld
push
inc
mov
inc
jb
ret
loop
push
gs
fistpll
aam
sub
fnsave
popa
dec
es
xor
mov
ds
shl
test
sub
outsb
jl
dec
fisttpl
ret
jnp
lock
pop
dec
rorl
xchg
in
lea
mov
push
nop
push
mov
pushf
inc
punpckhbw
prefetchnta
pop
or
pop
adc
addl
adc
hlt
ss
jle
int
sbb
xlat
and
rclb
mov
mov
cmpsb
pop
add
insb
in
jne
xchg
out
mov
jmp
jne
pop
outsb
and
mov
and
sub
sub
fwait
iret
add
mov
cmpl
jb
fwait
mov
test
test
mov
lods
arpl
lret
jle
add
shrb
xor
sti
sbb
and
lret
pop
add
sub
adc
mov
sbb
lahf
jle
popa
repz
adc
rorl
andl
js
repz
mov
adc
sub
adc
mov
xchg
aam
leave
and
scas
sti
xor
add
inc
cmpsb
mov
outsb
cmpsb
insb
leave
rclb
xor
and
inc
aam
jecxz
and
dec
xchg
test
int3
jmp
add
js
sarl
sub
dec
imul
sbbl
push
rorl
fldl
out
cli
lcall
popf
mull
xchg
in
xor
and
xorb
ss
xor
push
push
lods
cwtl
sti
adc
sti
cmp
dec
jnp
lret
out
inc
and
pop
push
mov
lret
out
fiaddl
stc
movsl
aam
and
adc
sti
movsb
pop
loopne
pop
xor
fidivl
stc
xchg
inc
addr16
icebp
fistpl
mov
mov
jne
fscale
ja
cld
jnp
stc
mov
xor
mov
push
xchg
add
nop
xor
and
xchg
scas
int
sub
dec
out
inc
jg
sub
push
mov
push
out
js
sahf
mov
pop
cmp
sbb
mov
or
xor
inc
cmpsb
cmpsb
lret
xorb
jno
pop
cmp
imul
shlb
gs
jge
inc
jle
jo
pop
outsl
imul
into
or
insl
shlb
or
in
in
cmp
push
jb
lods
stos
jne
mov
test
pop
pushf
aaa
ljmp
js
inc
or
lods
mov
cld
push
add
dec
lods
roll
jle
pop
ficoml
add
lret
roll
adc
push
cli
jo
jbe
adc
xor
out
inc
and
dec
test
add
sbb
cmpsb
xchg
mov
fldcw
adc
sub
mov
outsb
out
lcall
and
in
cmp
in
rcr
into
or
cltd
pop
cld
lea
cmp
out
pop
rolb
loop
loopne
sub
push
stos
or
add
rolb
xor
test
popa
pop
or
dec
int
les
arpl
addr16
jbe
cmp
sbb
int3
ror
les
cmpsb
inc
xorb
sbb
mov
sbb
pushf
cmc
and
sbb
js
fldenv
jmp
out
cmp
fnstsw
pop
clc
push
pop
jne
lock
mov
pop
xchg
fidivs
mov
cmp
icebp
jne
push
out
mov
arpl
pop
rorl
je
cmpsb
mov
cmpsb
sbb
jbe
xchg
xor
adc
and
lret
je
adc
outsl
jb
orl
lock
je
popf
ja
xchg
inc
jbe
mov
pop
lock
dec
jbe
pop
pop
push
mov
into
mov
push
imul
jmp
jge
dec
rcrl
adcb
mov
xchg
add
in
adc
mov
sub
mov
cmpsl
out
pop
xchg
sbb
push
xchg
mov
xor
dec
stos
pop
ljmp
js
outsl
xchg
mov
in
push
and
arpl
inc
fldenv
mov
scas
push
sub
mov
inc
pop
cmp
test
pop
popf
xor
dec
jmp
stos
push
js
lock
add
gs
jno
xchg
sbb
sbb
mov
add
mov
cmc
push
aam
push
cmp
movsb
push
ljmp
outsb
adc
dec
cmpsl
loope
push
roll
call
lods
test
out
enter
cli
add
pusha
ss
sti
jo
fdivl
call
xor
fdivrs
sbb
adc
rorl
aas
adc
sbb
lods
mov
sub
outsl
sub
mov
push
aaa
ds
mov
out
lret
adc
mov
daa
mov
xor
movsb
rorb
ja
mov
inc
sub
push
cwtl
mov
enter
jmp
rorl
dec
mov
mov
outsl
jecxz
insl
mov
or
popf
add
orb
mov
cld
fstpl
push
pop
mov
push
push
jno
std
cmp
dec
add
push
dec
sbb
pushf
dec
fstps
and
jp
subl
xor
sub
sub
pop
test
sbb
push
popa
jno
sub
inc
movsl
sahf
mov
test
lret
xor
xor
xchg
mov
lea
addr16
jnp
ja
popa
test
mov
int3
push
movsb
mov
imul
in
shlb
adc
sub
dec
cmp
jge
sub
dec
int3
and
call
gs
mov
cmp
inc
dec
mov
cmpsl
sub
mov
adc
hlt
fldcw
subb
xchg
test
inc
movsl
psubq
ret
cmpsl
shll
fldl
pushf
xlat
ss
push
test
cltd
mov
cld
lock
push
jns
nop
xor
lock
mov
pop
lret
es
dec
outsl
xlat
pop
adc
inc
xchg
ja
ret
sub
ret
push
mov
inc
in
jae
std
out
sub
andb
fidivrl
aam
loop
lods
or
mov
xchg
test
mov
repz
movsb
jb
addr16
or
js
or
fs
adc
movd
dec
pop
jae
add
sbb
add
sahf
and
mov
lahf
dec
aaa
shl
pop
mov
lea
imulb
adc
push
fwait
and
or
loop
dec
arpl
sub
ljmp
div
xchg
xchg
and
sbb
inc
pop
push
cmp
jo
sbb
adcl
lea
lret
shr
stc
adc
xor
mov
adc
push
es
xor
xchg
sbb
or
fidivrs
sbb
inc
fstpt
imul
fstl
xor
dec
pop
paddsb
adc
insl
cmovp
ss
rcl
push
aad
les
lcall
subb
jns
cltd
fucom
cmp
call
jp
icebp
shrb
sbb
ss
out
hlt
ret
iret
icebp
call
mov
cmp
scas
popf
push
cmpsb
xchg
inc
jns
jecxz
xor
pusha
int
push
outsb
inc
clc
xor
push
xchg
xor
adcb
movaps
xchg
xor
sbb
ficoms
dec
test
imul
mov
adc
and
mov
je
sahf
scas
jl
daa
mov
lahf
sub
mov
xlat
mov
adc
cmc
pop
mov
in
aad
aas
dec
aam
push
push
cmp
movsl
lods
or
mov
and
jb
sbb
adc
mov
adc
popa
pop
sub
jecxz
fcoml
push
sub
jb
jb
pop
push
in
pop
cmp
fcoms
push
std
into
es
addr16
cli
jne
or
dec
dec
sbb
dec
ret
test
push
jle
nop
or
cmc
push
xor
or
roll
mov
addr16
movsl
cmp
pop
stc
fcomp
mov
adc
add
xchg
outsb
pop
out
rcr
mov
cmp
mov
test
xlat
dec
mov
loop
fidivrl
pop
ss
mov
xor
sar
sbb
fimuls
es
mov
inc
addl
add
or
dec
arpl
popf
mov
in
xchg
push
dec
ja
data16
les
into
sub
mov
movl
add
pop
fwait
lret
mov
into
bound
mov
sbb
add
dec
jge
pusha
jmp
stos
mov
test
lret
out
xchg
sarl
es
and
dec
dec
or
js
and
std
dec
push
and
mov
sahf
xor
mov
jbe
fnstenv
pushf
mov
or
or
mov
shlb
cmp
stos
mov
mov
ds
xor
or
cwtl
inc
xorb
mov
push
xorb
in
jg
jo
xchg
pop
inc
jae
divb
add
ljmp
pop
push
push
add
and
outsl
sbb
cmc
daa
pop
dec
xchg
sahf
lds
imul
sub
jns
gs
stos
jb
test
pop
lcall
and
pop
xchg
out
pop
stos
or
mov
aam
dec
gs
stc
fstl
in
xchg
scas
movq
aad
insb
cmp
popa
data16
xchg
insb
cld
xor
cwtl
fmuls
mov
jo
aad
gs
and
je
mov
jno
mov
lcall
enter
mov
in
sub
xchg
insl
xor
jge
inc
sub
rcrl
or
cmpsb
lods
fwait
cmp
incl
loope
sbb
cmp
adc
or
notl
testb
and
pop
lds
imul
dec
push
ret
jns
cmp
pop
or
rol
and
imul
sub
aad
jge
sub
mov
mov
rorb
mov
ja
xlat
test
jmp
mov
out
add
popa
jp
movsl
fcoml
push
and
cmp
xlat
jnp
imul
adc
mov
cmp
or
jnp
xor
iret
dec
push
das
xor
test
loopne
sbb
xchg
mov
out
xchg
fadd
mov
ljmp
fsubrp
pop
xchg
sahf
mov
add
cmp
mov
aad
stc
and
test
mov
leave
in
sbb
mov
out
push
xor
clc
push
push
shl
ja
je
fs
cmc
cmp
ljmp
sbb
xchg
fwait
dec
push
loope
push
adc
fistpl
mov
rcrl
mov
cmp
sbb
nop
stc
xchg
push
adc
add
xor
xchg
fs
or
sub
push
jge
mov
cli
leave
mov
jmp
pop
cmc
cmp
lock
adc
fildll
js
or
add
popf
jno
out
add
adc
or
cmp
enter
and
cltd
rorl
fiadds
and
psubusw
out
in
cs
mov
test
inc
fdivrl
sub
arpl
push
clc
cli
stc
sub
scas
or
repz
nop
stos
gs
fiadds
imul
aad
movsl
test
pop
mov
mov
pop
inc
ja
ret
stc
pop
push
data16
fdivl
mov
test
in
ljmp
stos
dec
pop
js
mov
and
mov
inc
sahf
insb
inc
dec
xchg
and
sbb
pop
call
xchg
incb
cmp
mov
cli
jnp
xchg
push
aam
stc
and
sbb
les
cli
mov
mov
rclb
xor
or
pushf
popf
jo
xchg
fistpll
push
mov
cmp
pop
lea
dec
pop
adc
or
sub
mov
lret
mov
pop
and
mov
stos
loopne
inc
mov
in
fwait
aad
cmp
sub
jo
sbb
repz
iret
cltd
jb
sbb
aaa
pop
and
and
cmpsl
int3
xor
xchg
scas
aaa
negl
add
fwait
or
shrb
flds
jg
and
bound
xchg
scas
jecxz
rorb
sahf
mov
sub
jne
test
push
xchg
mov
movsl
sbb
out
mov
fcoms
jo
xchg
cmp
iret
cmpsb
je
dec
xchg
sbb
loop
aad
jne
insl
mov
stc
insl
inc
cwtl
mov
imul
xor
pop
into
ljmp
aaa
cmc
iret
and
cmc
pushf
mov
cmpsl
das
stos
sbb
out
mov
cltd
xlat
mulb
pop
pop
aaa
ret
cld
nop
addr16
adc
rolb
fcomps
popa
jns
or
fdivrl
popf
mov
xchg
pop
sbb
jae
clc
adc
adc
and
mov
xchg
add
push
cwtl
sub
push
popf
and
rolb
lret
pusha
in
mov
daa
outsb
mov
jne
push
subb
mov
outsl
lret
or
divb
adc
xchg
addr16
mov
lock
fisttps
push
sbb
ja
jnp
pop
xlat
movl
aas
or
test
mov
loop
inc
std
testb
cld
scas
cmpsb
and
out
dec
adc
stc
out
adc
faddl
jo
inc
into
mov
jno
mov
inc
and
dec
insb
dec
cmp
sarb
aas
je
and
sub
or
out
rcrl
cmp
push
xchg
or
add
push
cmp
jae
cld
leave
repz
mov
imul
lahf
dec
adc
pop
mov
pop
sub
xchg
pop
push
push
mov
lret
jno
jns
inc
dec
ret
mov
fsubrp
cld
and
arpl
xchg
shl
loopne
mov
lock
or
aas
mov
sub
inc
imul
adcb
lahf
mov
sub
sahf
jae
jae
or
mov
add
imul
stos
mov
enter
fldenv
fnstenv
ret
cmp
sub
lds
scas
in
out
pusha
push
clc
mov
fadds
idivl
ds
mov
addl
movsl
hlt
cmc
mov
sbb
les
call
inc
add
scas
jle
ss
nop
mov
sub
mov
es
movsb
mov
mov
jl
mov
adc
jge
test
icebp
dec
xchg
inc
cmpsl
test
loop
or
stos
mov
aad
xchg
mov
cmpsl
mov
insl
shl
hlt
xchg
mov
iret
cmp
dec
call
lea
mov
add
jp
mov
pushf
out
lret
aad
lea
cmpsl
loope
mov
enter
into
ljmp
push
lods
movsl
adc
in
idiv
mov
mov
in
xchg
pushf
mov
std
lcall
mov
mov
add
jle
and
outsb
ja
inc
pop
loop
xchg
mov
popf
cmp
movb
fdivp
popf
inc
mov
xchg
xor
std
mov
sbb
fisttpll
or
imul
cmp
dec
bound
cmpsb
jo
outsb
in
push
inc
push
in
jae
fs
sar
out
mov
cwtl
xchg
cmp
imul
add
fsubrs
push
jmp
outsl
daa
adc
mov
mov
inc
cmc
xlat
mov
mov
sahf
mov
das
mov
sbb
cmp
movsb
repz
call
jmp
inc
sub
decl
jb
xchg
popa
notb
std
jg
call
ds
mov
xchg
jg
dec
xor
not
in
adc
jp
ja
mov
and
add
sbb
mov
dec
adc
enter
xlat
hlt
dec
sub
test
pusha
sub
aad
ret
xor
xor
ror
sar
mov
sub
rclb
mov
xlat
ss
sahf
outsl
sub
aas
xor
flds
sbb
ds
sbb
xchg
xchg
bound
mov
mov
pop
daa
ljmp
nop
adc
push
testl
out
push
add
jno
aas
lods
add
cmpsl
mov
jae
test
adc
sub
mov
mov
mov
jg
jo
cmpsl
out
daa
mov
mov
dec
mov
xchg
ja
repnz
dec
xlat
in
inc
je
out
testl
cltd
cltd
out
cld
movsl
dec
das
loope
sub
cmpsb
add
movsb
inc
std
mov
in
sub
idiv
or
pop
pop
mov
cmpb
sti
dec
ficoml
cmpsl
dec
das
neg
mov
les
into
stc
sbb
outsl
sub
xchg
out
int
inc
adc
fistl
push
out
icebp
mov
xchg
leave
rorl
jne
cmp
or
push
jnp
pushl
cmpsb
sbb
pop
push
sub
xor
sbb
aad
pop
inc
in
mov
not
aaa
repz
mov
hlt
xchg
xor
mov
out
xchg
rorb
cmpsb
or
sahf
mov
jns
sub
lods
push
pop
adc
in
pushf
ror
fcompl
loope
mov
notl
fimuls
mov
mov
xor
movsb
movsl
sub
jle
subl
cmp
cmc
push
add
push
or
dec
fsubr
shlb
gs
jmp
cmpsb
imul
cltd
pushf
lret
fcoml
stos
test
ljmp
daa
call
idiv
mov
xor
jl
add
xchg
scas
and
push
push
add
adcl
pop
cwtl
dec
cmp
inc
in
bound
call
stos
call
mov
lock
inc
mov
fdivl
add
push
xchg
or
or
int
test
aam
lods
lods
dec
leave
pop
sti
in
int
negl
ror
adc
aaa
xchg
inc
xor
dec
mov
loop
ljmp
push
repz
and
call
pop
in
sub
mov
clc
andl
int
adc
jae
shll
or
xchg
sbb
push
jo
es
ljmp
ss
inc
or
pop
xchg
and
ljmp
dec
movsl
pop
xchg
sub
push
sti
sarb
xor
fcomps
mov
idiv
add
xchg
lea
addr16
lock
jg
shr
roll
push
pop
outsb
or
cmp
mov
fdivrs
mov
fistpll
sub
adc
andl
mov
outsb
xchg
inc
cmp
xchg
push
imul
out
int
xlat
pop
int
dec
leave
xor
ds
mov
leave
dec
loopne
mov
in
mov
xchg
dec
orb
test
es
xchg
in
arpl
fstpl
and
sar
mov
std
mov
in
movsl
cmp
hlt
and
cli
sahf
cmp
inc
out
subb
lcall
aaa
inc
cmp
push
icebp
jno
dec
jns
in
js
fdivrs
push
icebp
in
inc
arpl
rolb
jmp
loopne
cmp
pop
cmp
into
cltd
adc
stos
mov
adc
in
dec
lcall
xchg
aas
cmp
xchg
sbb
ljmp
lret
pop
mov
clc
call
rolb
fldenv
scas
add
and
je
jmp
mov
or
adc
sbb
mov
mov
push
cmp
xchg
addb
adc
mov
jne
inc
leave
movsl
add
pop
inc
ljmp
xor
ja
fistps
mov
fcos
lods
mov
inc
andb
push
das
xor
lahf
xchg
repnz
shll
inc
std
imul
lret
fisttps
push
cmc
icebp
sbb
jmp
inc
sbb
test
repz
sbb
lret
pop
sbb
jnp
push
adc
adc
mov
movsl
push
inc
popf
data16
dec
sti
or
shll
dec
and
cmp
imul
mov
push
out
or
stos
jl
adcl
pop
adc
cmc
xor
xor
imul
or
and
ja
inc
jmp
ret
bound
cs
pop
jns
test
jp
inc
or
jp
push
ds
std
stc
int3
cmpsl
or
jmp
sti
pop
adc
xor
add
imul
push
stc
clc
adc
testb
loope
mov
cmp
fucomi
iret
ljmp
aas
add
in
sti
rorb
xchg
adc
push
out
adc
xchg
mov
mov
sbbl
or
aaa
outsb
notb
int
cmp
shlb
clc
imul
mov
cmpl
loop
ret
jae
jl
je
adc
cmp
cmp
lret
arpl
mov
je
inc
add
push
xor
and
lea
inc
into
call
or
pop
xchg
clc
mov
daa
aad
or
dec
enter
shll
rcr
xchg
xchg
add
loop
adc
ds
popf
test
pop
and
loope,pt
sub
push
gs
into
je
faddl
sahf
mov
into
or
push
repz
in
mov
fs
adc
icebp
inc
mov
pop
bound
mov
adc
dec
out
bound
repnz
jl
fnop
inc
sub
xor
add
repz
lock
mov
add
gs
push
or
dec
in
push
dec
movsl
sbb
xchg
pop
in
out
xchg
xchg
mov
stos
es
sbb
aas
push
das
adcb
out
or
jg
sub
or
aas
adc
push
jns
inc
adc
jne
sbb
stos
lret
or
cmpb
aas
into
xchg
bound
imulb
mov
lahf
testl
adc
shll
cs
and
push
and
lock
push
mov
xchg
loopne
pusha
push
adc
push
pusha
push
sahf
test
imul
imul
fisubl
cld
mov
or
fdiv
xchg
pop
xchg
iret
xchg
aam
pop
sub
test
jne
pop
mov
fwait
or
test
sub
ss
jl
adc
mov
adc
cli
test
and
rorl
inc
data16
xor
xchg
push
xchg
shlb
outsb
push
fildl
sbb
push
mov
pusha
add
dec
outsl
fidivs
pop
negl
xor
mov
push
or
push
sub
adc
and
xchg
std
repnz
mov
mov
jg
cmc
jbe
jae
por
jge
jmp
or
dec
lods
xchg
mov
imul
or
nop
int3
xlat
ficomps
ja
pusha
and
push
pop
fiaddl
lea
xor
arpl
orb
xor
test
adc
cmpsb
iret
or
aaa
icebp
xchg
iret
cmpsl
mov
xchg
dec
push
inc
push
mov
lret
add
jae
fdivs
sub
fists
out
ja
jecxz
or
cltd
loopne
das
mov
popa
movsl
jo
pop
stos
or
scas
jno
repz
mov
cwtl
fidivs
push
mov
aaa
sub
xlat
stos
pop
mov
faddp
ds
int3
daa
cmp
cmp
xlat
aaa
stos
lock
jmp
xchg
test
add
and
pop
jl
das
pop
xlat
mov
imul
mov
icebp
mov
mov
xor
insb
jg
jge
js
xchg
sub
test
clc
repz
mov
inc
out
test
setle
stos
push
jb
pop
icebp
add
pop
dec
shll
mov
add
cmp
out
inc
add
repz
mov
and
shrl
mov
pop
mov
hlt
ja
cmpsl
mov
jge
xor
mov
mov
stos
xchg
mov
or
test
sub
mov
pusha
arpl
lock
mov
loope
loop
and
fbstp
inc
andl
cmp
pop
sub
jmp
xor
aam
xor
mov
loopne
loop
jno
out
push
lock
xchg
scas
dec
pop
push
sbb
in
shrd
sbb
add
inc
pop
insl
dec
shll
popa
xor
pop
cmp
mov
fdivrs
sahf
dec
xor
mov
cmpsl
test
mov
test
pop
jno
adc
fisttpl
les
mov
jno
xor
inc
icebp
out
in
push
cmp
out
xchg
insb
adc
cmp
jl
jo
inc
icebp
inc
sub
adc
mov
cmp
rolb
sahf
inc
shll
lret
stc
ret
notb
push
and
imul
lret
inc
push
negb
mov
push
mov
out
push
ja
cmc
cwtl
jns
sub
xor
xor
les
jns
int
inc
test
add
les
daa
cmc
test
sbb
sti
pushf
es
mov
sub
pop
jb
popf
xchg
jecxz
pop
jecxz
dec
inc
mov
pop
test
adc
je
sarb
es
sub
adc
cmp
sub
ja
dec
scas
jns
shlb
test
outsb
mov
pushf
and
inc
xor
aam
js
push
icebp
pop
or
mov
lret
mov
xchg
adc
xchg
push
dec
pusha
ds
fcmovb
aam
mov
outsb
or
lret
jb
cmc
ljmp
xor
popa
sbb
jb
jnp
push
xchg
adcb
sbb
ret
mov
out
push
or
pop
divb
dec
pop
jb
jmp
fisttpl
stos
jns
xor
cmpsb
jbe
push
mov
lods
push
push
push
mov
sub
outsl
stos
pop
mov
jno
sub
pusha
call
shlb
aaa
test
and
mov
jmp
sbb
stos
lret
imul
iret
in
jg
or
mov
xor
mov
fnstcw
mov
cmpsb
jle
inc
outsb
add
shll
popf
cmpsb
iret
mov
aaa
push
mov
sub
repnz
mov
loopne
in
mov
loope
mov
sahf
lea
repnz
mov
sahf
push
loop
aad
xorl
test
pop
inc
je
movsl
sub
idivl
sub
adc
out
testb
sbb
mov
pop
inc
xchg
push
leave
jbe
and
pop
pushf
inc
arpl
cmp
decb
jg
push
and
or
in
push
call
mov
pop
mov
aam
and
mov
ret
mov
mov
add
insb
add
sub
les
xchg
out
jg
sub
negb
fadds
pop
fcomps
mov
push
daa
or
sub
daa
jb
leave
idivl
in
dec
scas
or
push
in
jp
sti
add
mulw
mov
add
lods
scas
jmp
sbb
xor
ds
enter
fsts
xor
mov
aaa
imull
xor
jl
dec
stos
mov
lret
push
adc
lock
lods
mov
and
clc
insb
pusha
cmp
mov
mov
pop
btc
or
rcl
aad
xchg
pop
negb
jp
and
jp
inc
pop
pop
lret
arpl
or
int3
mov
rcrb
mov
pop
pop
xor
int
fcoms
dec
mov
mov
mov
lods
fwait
jmp
ljmp
pop
push
push
jmp
ljmp
in
subl
fcoml
fdivs
cmpsb
xor
dec
inc
lahf
pop
adc
insb
dec
out
xor
dec
push
adc
in
movsb
sub
pushf
lcall
data16
cmovb
mov
bound
or
aas
out
sub
push
xchg
decb
pushf
bound
xchg
mov
mov
jno
jp
mov
adc
addb
xchg
popa
aaa
sub
fcmovnb
push
ret
in
or
repnz
sub
repz
gs
cmp
mov
inc
lods
addr16
xchg
test
cmpsl
fstp
inc
sbbb
sub
and
adc
or
or
xor
pop
adc
or
pop
fnstenv
xor
mov
jnp
fisttpll
dec
icebp
mov
push
cmpsb
fbstp
subl
push
int3
push
adc
mov
dec
jl
mov
or
movsb
mov
outsb
push
hlt
xor
es
push
xchg
nop
shlb
dec
push
mov
jae
xchg
xchg
das
xor
in
and
movsl
cmpsl
mov
pop
stc
mov
dec
cld
or
mov
insb
and
aas
xchg
insb
lea
ret
jae
notb
ja
fld
pop
aad
mov
and
cwtl
xor
stos
dec
repz
sub
or
addl
fildl
icebp
scas
pop
inc
outsl
pop
icebp
sbb
jno
dec
stos
shll
jle
lea
push
push
sub
push
xor
push
jecxz
mov
jo,pn
jo
arpl
and
pop
sub
jle
mov
pop
loop
mov
leave
cmp
shr
lea
fcoml
and
std
js
mov
mov
mov
mov
cli
jnp
adc
loopne
push
jbe
sahf
adcl
rcr
aas
inc
fists
xchg
adc
xchg
sbb
xchg
es
mov
adc
mov
mov
mov
add
mov
xchg
nop
mov
roll
add
cs
adc
enter
out
insl
pop
jb
or
out
test
inc
pop
inc
movsl
pusha
int3
adc
dec
iret
sub
cmp
mov
loop
lahf
pop
mov
dec
loop
ljmp
jns
test
push
ret
flds
std
mov
mov
std
adc
ljmp
mov
sbb
push
stos
dec
add
jb
mov
mov
mov
rcrb
cld
cltd
xchg
int
aad
jg
dec
pop
pop
xchg
adc
mov
jo
add
out
inc
and
xor
sti
pusha
jno
jge
jecxz
addr16
shll
xchg
mov
pop
push
insl
dec
dec
mov
dec
sahf
dec
pop
sarl
sbb
mov
lods
sbb
leave
jge
insb
jecxz
mov
xchg
in
push
jcxz
jge
xor
xchg
hlt
je
mov
cltd
das
fdivrp
cltd
sbb
mov
mov
sub
adc
lret
out
loop
test
push
sbb
data16
out
and
imul
clc
fidivl
sbb
pop
or
jg
cmp
movsl
int
loope
lret
les
sti
sub
sbb
cli
push
cmp
inc
xchg
pop
add
xchg
inc
aad
js
adc
icebp
pop
lock
or
sub
in
lods
das
lret
frstor
mov
cmp
xchg
xchg
and
mov
pushf
mov
stos
add
add
cmp
fsubl
cwtl
mov
xor
fcmovb
xchg
mov
mov
dec
pop
sbb
stos
test
out
iret
test
adc
mov
push
outsl
dec
xrelease
mov
mov
mov
je
xlat
xchg
sti
cmp
add
leave
sub
xor
cmp
push
sbb
std
std
or
jno
inc
add
push
stos
push
push
adc
or
adc
std
push
dec
test
mov
xchg
xlat
mov
lahf
imul
fwait
sbb
or
jne
pop
sub
bound
inc
push
fsub
popf
adc
or
cmpsb
or
inc
bound
push
ret
mov
cltd
jecxz
mov
lock
lods
lods
in
out
pop
aaa
negb
je
or
cmp
addr16
dec
xchg
hlt
jnp
outsl
cld
add
add
insb
negl
ds
xchg
mov
xchg
iret
js
adc
repnz
repz
mov
mov
jns
ret
dec
scas
scas
cli
scas
or
xlat
dec
call
dec
sub
jecxz
dec
lahf
leave
jnp
mov
pop
movsl
fsubrl
adc
sub
mov
push
jbe
lret
xchg
jl
pusha
sbb
js
inc
cmp
push
inc
divl
ffree
dec
mov
mov
dec
push
adc
add
xchg
fstp
stc
jnp
ss
inc
push
xlat
mov
mov
cli
js
int
sbb
out
sub
test
clc
mov
xlat
xchg
das
and
outsl
pop
mov
in
arpl
adc
push
xchg
pop
mov
in
leave
sub
jmp
fwait
in
xchg
mov
add
out
or
fiaddl
pop
je
imul
adc
cmp
loop
bound
adcb
mov
pop
jecxz
outsl
pop
imul
ljmp
xor
xor
pop
push
dec
leave
mov
je
jns
nop
pop
lcall
ss
popf
pop
mov
mov
dec
outsl
sub
cld
and
out
and
adc
xlat
lock
leave
xchg
repnz
xchg
xor
mov
test
dec
pop
addr16
mov
mov
mov
lret
icebp
jnp
repz
and
sub
lock
xchg
inc
inc
shrl
cmpsb
les
lock
loopne
add
dec
aad
or
cmp
ret
bound
xor
push
jae
fisttps
ret
jne
sbb
test
popa
stc
and
inc
or
stos
cli
and
and
mov
adc
dec
ja
lcall
jne
sub
scas
test
push
nop
inc
xor
xchg
mov
pop
and
lret
mov
dec
lods
js
int
mov
std
in
lret
pop
roll
xchg
ret
mov
mov
in
sbb
mov
inc
lods
pop
imul
adc
xor
jg
push
push
inc
test
mov
dec
clc
fidivrs
lea
adcl
and
repnz
mov
mov
test
push
or
stc
lret
pusha
jmp
jge
and
xchg
test
fcomps
dec
xchg
negl
lahf
sub
bswap
add
and
arpl
les
mov
mov
dec
lea
out
mov
dec
repz
aaa
fdecstp
pop
mov
inc
popa
pop
cli
out
mov
fcmove
sub
mov
push
dec
dec
xor
mov
and
scas
inc
aad
icebp
jp
aad
shll
jge
push
fstpt
repz
jae
adc
cs
mov
addr16
das
mov
xchg
dec
orb
sti
mov
mov
xor
dec
hlt
mov
cmp
imul
fucomp
sbb
movsl
pop
cld
andb
add
popf
mov
xchg
mov
sbb
popf
adc
adc
ja
lret
in
push
ljmp
mov
pop
add
push
aam
hlt
jbe
mov
ja
jle
cmpsb
jge
out
jge
je
insl
ds
cmp
xchg
loopne
sub
mov
mov
xor
mov
cmpsb
pop
sub
rorl
mov
or
push
or
in
sti
jl
mov
aaa
iret
jge
jecxz
int
jns
pop
js
add
adc
popf
xlat
add
rol
notb
sub
adc
mov
ja
push
pop
fiadds
fsub
xlat
push
in
mov
xor
aad
fisttpl
dec
outsb
or
aaa
mov
xor
add
mov
push
lods
xchg
mov
jle
jecxz
scas
push
jbe
movsl
rol
mov
push
dec
icebp
jns
pop
push
mov
dec
es
stos
push
mov
leave
pop
xchg
add
stos
std
movsb
mov
mov
dec
mov
sbb
mov
out
or
pop
lock
dec
and
in
xchg
ret
cs
xchg
jmp
insl
pop
addr16
cmp
shrb
xor
sbb
sbb
mov
pop
in
push
popl
lock
xchg
push
mov
in
in
and
mov
fisubrl
ficomps
mov
jl
mov
pop
and
push
ja
jp
inc
or
inc
push
pop
mov
lret
mov
fiadds
popf
imul
pop
dec
mov
lds
test
and
outsl
nop
dec
inc
mov
arpl
pop
popf
cmp
outsl
push
push
bswap
push
mov
adc
add
les
cmc
cmp
icebp
push
or
mov
mov
sbb
xchg
fistl
enter
push
popa
clc
icebp
lea
jo
lods
cmpsb
int3
xchg
xchg
dec
clc
in
jecxz
inc
and
inc
mov
push
mov
push
jne
loope
dec
outsb
fistpll
out
pushaw
dec
push
test
pop
arpl
fs
arpl
inc
add
icebp
push
adc
mov
jns
jp
in
xchg
hlt
or
adc
and
fisubrs
lea
aam
addr16
pop
aaa
sub
and
mov
imul
inc
or
stos
imul
pop
xchg
int3
js
dec
sub
push
xchg
xor
lahf
inc
jnp
pop
mov
cli
js
popf
nop
xchg
repz
push
xor
adc
in
ja
lods
add
out
jmp
out
mov
push
lret
jmp
stc
xor
pop
adc
push
and
jbe
stc
xchg
gs
lahf
fnstsw
mov
mov
movsb
pop
test
xchg
push
lret
mov
out
dec
or
xor
mov
and
lcall
push
inc
lea
mov
cwtl
lods
cmpsb
xchg
shrd
stc
sbb
je
push
lret
xor
outsb
jecxz
scas
test
scas
imul
icebp
or
clc
insb
pop
adc
lea
pop
xchg
fdiv
pusha
loopne
pop
lret
adc
mov
sahf
dec
mov
mov
pop
xchg
andps
enter
dec
push
and
daa
adc
lcall
test
jp
mov
add
ret
mov
jmp
jp
sbb
daa
insb
adc
lds
fsubrl
push
jmp
lock
mov
popa
cmpsb
cmc
leave
ret
and
mov
xchg
cmp
sbb
mov
cmpsl
sbb
bound
stos
jns
test
push
fdivrl
mov
loope
jl
xor
cmp
ret
aaa
fists
xor
pop
outsw
pop
leave
in
movsl
frstor
aas
adc
jne
mov
fiaddl
test
movsl
je
stos
pop
lea
mov
add
cmp
xlat
ret
stc
sub
cli
mov
mov
add
or
stos
pop
cmp
sti
hlt
inc
mov
or
mov
fdivrs
data16
and
pushf
mov
jno
push
cltd
into
xchg
push
or
cmpsb
cmc
cltd
out
add
in
aas
es
pushf
dec
jmp
pop
cmpsb
lock
xchg
xchg
call
adc
fld
mov
out
mov
arpl
mov
add
cltd
mov
out
jle
test
pop
arpl
inc
jo
inc
imul
lea
xor
repnz
push
xchg
outsb
sub
or
pop
sbb
mov
xchg
out
in
ss
pushf
aam
out
repz
aam
jns
add
push
je
pop
cmp
jp
cs
decb
xor
sub
inc
repnz
jne
movsl
pop
pop
pop
lock
test
lods
out
jno
sbb
lods
lea
lock
inc
bound
lret
lahf
add
enter
out
jge
clc
add
fnstcw
loop
sbb
in
inc
idiv
int
fwait
inc
mulb
jbe
stc
add
pop
xchg
push
and
cs
push
jle
gs
add
push
mov
push
lock
mov
push
emms
fimuls
pop
xchg
imull
jecxz
sub
cltd
dec
addr16
xchg
inc
je
aad
mov
stos
or
dec
push
inc
mov
mov
mov
es
popw
lods
push
es
xor
bound
xor
sub
cwtl
dec
add
in
iret
in
or
lock
rcrb
jae
dec
mov
pop
sbb
cmc
cmp
stc
or
out
push
jae
cltd
lock
sub
sbb
insb
push
mov
sbb
xlat
mov
inc
mov
sub
popf
xor
std
mov
aad
jne
or
test
sub
mov
std
mov
and
jo
les
mov
xchg
lock
fcomi
hlt
test
add
push
scas
cmc
shl
insl
cmp
fxch
sbb
sub
adc
shll
push
or
iret
mov
lock
ss
hlt
insl
fdivrs
hlt
adc
insl
sub
insb
and
enter
lds
dec
sbb
xor
xor
in
jmp
xchg
into
stos
icebp
stos
push
imul
mov
push
hlt
and
push
pop
shlb
xchg
jecxz
outsl
cmp
adc
hlt
xchg
pop
inc
dec
cmp
pusha
rolb
xchg
into
ljmp
cmp
sub
movsb
xchg
ds
xchg
jmp
enter
dec
jae
enter
mov
sbb
sahf
inc
fwait
imul
test
add
pop
sbb
mov
pop
mov
pop
dec
inc
mov
ds
push
out
pop
movzbl
gs
mov
nop
rcr
push
cld
sub
mov
cli
es
inc
pop
pop
inc
mov
adc
test
push
aas
pop
test
fdivl
nop
gs
lret
lods
in
out
loope
mov
jmp
jl
sbb
mov
je
hlt
in
push
pop
inc
sahf
inc
or
jns
rolb
clc
outsl
sbb
adc
xchg
mov
or
adc
jno
push
jecxz
push
pop
cmp
ds
mov
push
sahf
std
and
add
xchg
cmc
lret
dec
sbb
and
addr16
xchg
mov
xchg
aam
call
shlb
xor
cmp
pop
stos
fiadds
ficoml
sbb
addr16
add
ret
fistl
ja
or
fdivr
add
out
xor
data16
loope
out
cs
and
hlt
mov
clc
cltd
lret
mov
call
inc
adc
imul
pop
xchg
pop
push
lds
loopne
rcll
popa
loope
dec
dec
or
jo
inc
push
adc
and
fdivs
outsl
xor
test
push
push
cmpsl
loopne
out
fdivs
loope
sub
sbb
hlt
and
cwtl
aas
pop
xchg
pushf
xor
mov
jp
cltd
gs
add
dec
pusha
pushf
test
loopne
lret
jmp
push
in
and
pop
push
push
xlat
repnz
outsl
lods
jp
loop
addl
sbb
or
mov
add
aas
fnstsw
and
xor
nop
xor
adc
cmpsl
add
and
in
mov
rclb
aad
ret
add
ja
mov
outsb
clc
xlat
dec
or
cmpsl
fsts
cltd
cld
dec
mov
cmpsb
jecxz
mov
adc
cli
sbb
cmp
lods
pop
cmp
cs
insb
sbb
cs
es
gs
sub
mov
mov
fistl
jns
sbb
outsb
sub
andl
mov
orl
les
pop
fucomip
fisttpl
mov
es
lret
leave
or
cmp
fldcw
adc
inc
mov
fsts
mov
cmc
or
cmpsl
xchg
jne
fcomps
mov
test
push
sub
je
stos
dec
and
xor
je
pusha
sub
xchg
ss
pop
add
jo
rcrb
and
xchg
xchg
sub
xor
cltd
push
or
cmpsb
add
inc
shr
xor
popa
mul
jg
ficompl
iret
cmpsb
and
int
lcall
jne
ljmp
decb
xchg
fdivl
outsb
push
loopne
mull
push
popa
mov
outsl
sub
lds
xchg
dec
rcrb
xchg
or
jmp
xchg
adc
adc
mov
insl
aam
pop
inc
mov
xchg
xchg
fnstenv
push
test
pop
add
mov
sbb
les
outsb
sbb
pop
or
jecxz
icebp
sub
fwait
push
xor
xchg
loopne
mov
lcall
popf
pop
fiadds
and
pusha
jmp
or
mov
fldcw
xchg
jp
mov
add
sbb
jle
dec
sbb
mov
xor
push
arpl
push
cmpl
es
dec
ss
rclb
movsb
inc
movsl
in
mov
or
or
or
inc
stos
mov
call
rclb
push
push
cmpsl
pop
cmp
xor
das
rcrb
popa
clc
pop
pop
pop
stos
lcall
xor
loop
arpl
mov
sahf
rcrb
jle
add
pop
in
push
mov
push
mov
repnz
test
dec
lods
sub
sub
inc
fwait
jo
sti
bound
jb
rorb
jno
sub
sahf
cmp
arpl
out
mov
sbb
jae
sub
mov
hlt
aam
mov
mov
divb
imul
adc
lock
xor
sbb
dec
fdivrp
mov
test
filds
lcall
inc
pop
push
add
lcall
scas
inc
sub
add
cmpsl
inc
sbb
jmp
dec
xchg
sbb
mov
and
cli
je
in
arpl
testl
std
lcall
jecxz
cld
jl
stos
daa
lds
add
icebp
cmp
and
hlt
das
fildll
fwait
mov
mov
xor
popa
sub
out
iret
mov
lds
xorb
ret
push
out
add
mov
push
push
inc
push
lahf
bound
dec
pop
mov
ljmp
je
pop
add
mov
add
pop
adc
push
pop
pop
sub
ret
scas
jnp
or
pop
lret
and
sarb
aaa
xchg
sar
add
cmp
and
sub
out
mov
fcomip
push
jo
push
out
andl
adcb
adc
push
repnz
xchg
repz
push
push
jp
sbb
lds
dec
add
jae
lcall
adc
fwait
xchg
xor
sub
and
mov
fnsave
addr16
xchg
mov
xor
sub
jbe
sar
push
aad
inc
lret
in
add
cmp
pop
xchg
cltd
enter
lahf
sbb
jbe
pop
or
loop
cmpsl
fidivrs
mov
adc
jge
xor
daa
pop
shlb
out
aas
gs
jns
push
arpl
dec
and
inc
shll
mov
iret
add
add
icebp
xor
aam
jb
fisubs
add
pop
repnz
loop
insl
test
push
std
cmpsl
out
sbb
sub
inc
leave
or
in
push
in
aaa
jno
xor
notl
add
sub
subl
or
lods
aam
pushf
lcall
push
xlat
cld
cmp
dec
test
stos
leave
fstps
xor
pop
addl
andb
iret
frstor
ret
in
rclb
mov
cmp
ss
mov
sarl
fisttpl
leave
jmp
movsl
inc
adc
lods
into
mov
inc
fxch
ss
and
ret
xchg
outsl
push
daa
imul
pop
pop
test
dec
jbe
test
nop
sarl
cmp
adc
sbb
or
mov
lret
nop
and
pop
gs
pushf
aas
push
pop
xchg
mov
arpl
popa
xor
ret
xor
cmc
stos
ja
mov
pop
sbb
and
cmp
stos
and
fidivrs
inc
mov
pop
pop
dec
fstpl
jge
popf
add
fldenv
cmp
mov
xor
inc
pavgb
add
shl
out
cwtl
mov
sub
or
mov
mov
mov
sbb
mov
test
in
popf
outsb
adc
out
movsb
mov
pushf
clc
pop
xchg
into
cltd
hlt
pop
xor
push
or
mov
cs
sub
aam
and
push
cmp
and
loope
fistps
ja
push
gs
inc
mov
mov
aam
mov
arpl
aad
push
mov
sub
popf
out
js
popa
jne
sbb
or
pop
cli
nop
adc
sub
sub
dec
clc
jno
lret
jo
sbb
sbb
arpl
pop
pop
or
pop
fadds
inc
jge
cmc
or
cmp
das
jle
cli
testl
xchg
pusha
push
imul
and
outsl
hlt
cld
adc
loop
jge
mov
cmp
ja
push
add
fwait
sub
out
out
xchg
orb
test
fstps
clc
and
push
cltd
fstpl
repz
fstps
or
popf
and
xor
fdivrp
in
leave
shrl
dec
fildll
mov
xchg
jb
inc
out
fdivrl
jb
pop
pop
mov
pop
inc
add
pop
in
add
fisubl
repnz
inc
in
sub
inc
mov
pushf
mov
lds
imul
shl
mov
inc
lea
lods
out
jns
pop
jmp
in
shrb
loopne
xor
or
repnz
icebp
lds
ret
stos
xchg
add
cmp
repz
push
in
adc
inc
rcrb
and
push
and
and
sbb
mov
inc
cs
jne
inc
jb
and
xchg
sahf
fdivl
movsl
loope
sahf
cmc
or
in
fidivrl
out
xor
loope
loope
test
add
lret
mov
sti
aas
je
and
test
cli
shr
loope
movsb
push
and
cmp
movups
push
or
jbe
rorb
das
loope
stc
in
or
dec
cltd
sub
cld
frstor
ret
mov
iret
mov
cltd
daa
ret
mov
mov
adcb
pop
sbb
fmulp
es
adc
dec
ret
push
gs
loop
push
inc
popa
jle
cmp
push
pop
fdivl
pop
shlb
xchg
mov
int3
lahf
xchg
sbb
inc
ljmp
sbb
insl
jg
push
jb
dec
mov
rcll
xchg
cmp
call
xchg
pop
xor
fstp
std
add
clc
fimull
insb
push
jge
mov
xor
fiadds
mov
sub
push
xor
mov
pop
shl
fmull
mov
or
dec
iret
aad
popa
mov
jle
pop
adc
and
test
ja
inc
movsb
loop
jl
mov
clc
test
push
push
xor
mov
mov
std
mov
mov
and
jl
or
xchg
mov
sahf
jo
sbb
jns
xchg
push
aam
mov
mov
xor
push
jp
dec
jnp
adc
mov
cmp
ss
int
lahf
aaa
or
stos
out
cmp
dec
xor
fistps
cmp
mov
ss
imul
mov
sub
push
inc
les
xchg
jl
push
andl
into
mov
mov
cmp
jl
out
or
ret
loope
in
bound
insb
outsl
mov
sbb
inc
and
cmp
out
sbb
test
ficoml
inc
adc
adc
push
ljmp
std
leave
or
mov
mov
mov
jbe
sub
pop
fs
jne
and
lods
lahf
call
dec
xchg
pop
outsl
and
lea
ss
jno
push
in
mov
mov
mov
pop
push
in
mov
inc
mov
jnp
inc
das
ror
movsl
int
pop
or
fs
cmp
adc
pushf
ja
insb
cmp
xor
arpl
in
out
sub
or
mov
ja
or
dec
adc
cmp
xor
test
dec
and
shlb
dec
adc
fnstsw
sub
add
dec
ja
dec
xchg
cwtl
sar
inc
pop
inc
mov
inc
jge
repnz
ret
jmp
xchg
neg
sbb
data16
xlat
in
adc
sub
test
mov
test
arpl
mov
roll
push
jmp
push
int3
mov
cmp
mov
fstpl
sbbl
adc
pop
js
out
fwait
loop
xor
mov
inc
out
ss
jge
inc
push
and
adc
out
repnz
mov
add
es
popa
sub
jl
xor
mov
std
and
lds
fmuls
pop
outsb
inc
inc
dec
dec
out
adc
sbb
jbe
cld
lock
popa
lcall
mov
subl
mov
loop
pop
fbstp
cmp
test
lea
arpl
fdivrp
testl
dec
lock
mov
icebp
pop
aad
fs
imul
pushf
adc
inc
dec
out
jle
xchg
pop
adc
xchg
outsl
imul
out
addl
in
adc
cmpsb
push
js
scas
ss
gs
mov
fiaddl
sahf
shll
je
mov
dec
cltd
repnz
and
xor
xchg
push
out
les
les
sti
add
xor
fs
dec
fnsave
sub
cs
or
out
inc
leave
xlat
sbb
and
xchg
mov
push
xchg
pop
or
pushl
mov
and
pop
mov
nop
fisttps
mov
je
xor
idivl
push
dec
mul
dec
enter
cmp
loop
cld
xor
xchg
pop
fwait
mov
sub
cli
shl
and
subl
ja
inc
jle
dec
pop
pop
jecxz
scas
add
gs
and
inc
push
ljmp
push
add
sahf
xchg
jnp
mov
pop
cltd
out
mov
movsl
cmp
movsb
in
mov
or
rcl
iret
inc
dec
sbb
aad
ja
cmp
mov
call
jge
mov
cmp
in
in
lods
dec
daa
adc
sub
cmpsb
push
loop
pop
mov
cs
sub
push
pop
inc
cs
add
sub
cmp
cmp
push
sub
test
xor
popf
stos
sub
out
adc
ret
sbb
xchg
jle
bound
es
mov
fsubr
repnz
push
mov
pop
xlat
adc
and
add
jnp
leave
push
sbb
xor
mov
jg
stos
rcll
cmpsl
insl
ss
and
pop
add
lret
mov
pop
add
fwait
inc
stos
lahf
sbb
out
inc
jp
mov
cmp
or
xchg
inc
inc
stos
adc
lock
jo
popf
inc
push
repz
inc
scas
mov
sub
adc
pop
sub
add
xchg
dec
cmp
ret
imul
mov
xchg
and
add
dec
sbbl
cld
jmp
push
mov
jmp
std
fstps
lods
cmp
sub
mov
shlb
lods
inc
mov
mov
test
cmp
les
stc
cmpb
shr
pop
add
aam
es
loop
lods
dec
pusha
push
and
shll
jecxz
popf
sub
aaa
jae
push
insb
push
repnz
dec
stos
aam
xor
push
cmp
cmc
push
cmp
ja
xchg
adc
mov
in
sbb
lahf
scas
sub
jbe
pushf
cltd
and
faddl
add
mov
mov
mov
aam
xchg
jg
xchg
and
fsubl
jp
ljmp
popf
dec
xor
shlb
orb
lcall
jge
mov
icebp
test
nop
mov
add
shrl
mov
dec
sahf
fdivs
inc
cmc
lock
and
or
scas
lret
je
xchg
fdivs
sti
stos
pushf
mov
leave
out
add
clc
andb
xor
loopne
jmp
adc
insl
jle
or
mov
and
xor
or
aam
inc
out
dec
cmp
fiadds
pop
imul
or
dec
inc
cmp
out
push
jo
inc
lods
test
inc
sahf
notl
push
std
mull
lock
mov
in
decl
lcall
enter
ss
dec
xor
std
or
add
mov
gs
cmp
incb
int3
inc
adc
loopne
mov
push
inc
cld
frstor
iret
pop
clc
incl
jle
jmp
mov
and
dec
jl
pop
aad
cwtl
icebp
mov
push
inc
dec
aam
data16
lret
fdivrl
enter
stc
dec
inc
push
xchg
rcrb
leave
push
scas
jge
out
dec
test
lcall
ds
pop
mov
pop
adc
pop
fstps
stc
pop
shl
mov
add
fstps
les
jno
and
leave
mov
and
xchg
dec
jle
jmp
lods
cmp
cli
adc
push
mov
mov
or
xchg
stc
loopne
ret
xlat
add
jae
xchg
pop
mov
jo
push
lret
push
inc
fwait
shlb
adc
les
out
pop
fists
xchg
dec
mov
pop
subb
jnp
dec
push
fiadds
cmp
add
dec
jb
out
pop
bound
pop
in
add
cld
pop
mov
xor
mov
mov
xchg
scas
jnp
pop
clc
fisubs
cs
xchg
push
and
mov
icebp
dec
or
loope
jge
cmp
std
mov
push
inc
and
cmpb
and
add
mov
cmpsb
push
dec
cmc
mov
inc
jo
es
shll
ret
pushf
loopne
sub
cmpsl
xor
loope
ret
sbbb
mov
ss
lret
ss
les
inc
aam
dec
fwait
rclb
out
sub
inc
push
imul
or
mov
adc
inc
pop
jecxz
pop
pop
popf
imul
mov
in
push
popf
scas
cmpsb
sbb
push
push
and
or
mov
or
adc
ss
add
les
cwtl
fidivs
aaa
movsb
push
addr16
movsl
ljmp
aas
dec
clc
inc
movsb
and
stc
jge
dec
into
or
shll
or
testl
aam
mov
imul
xor
pop
or
xor
cmp
xchg
cld
leave
rorl
leave
jecxz
xor
and
xchg
push
leave
scas
jmp
mov
push
xchg
mov
pop
stos
mov
pop
cmp
mov
mov
cmpsb
add
lds
mov
ror
fstps
jns
addb
dec
fdivrs
iret
lret
push
loope
and
jo
xchg
inc
into
bound
mov
pop
mov
ja
ja
stos
clc
inc
add
hlt
push
jle
adc
out
dec
or
jno
jns
push
mov
sub
popf
sbb
xchg
fistpll
and
adcl
lock
or
int3
mov
and
push
push
sti
pop
xor
sub
jl
aad
test
stos
xor
dec
fidivs
xorb
sub
mov
cmp
rorl
and
mov
outsl
fcomps
into
sub
fistl
push
test
out
pop
mov
into
cli
xchg
push
xchg
lcall
or
into
testb
sbb
lahf
mov
je
out
out
sbb
shlb
bound
fwait
je
ljmp
scas
or
ret
repz
ret
and
mov
loope
mov
cmp
outsb
jb
or
fmuls
stc
scas
rcll
pop
inc
push
sbb
or
xchg
dec
imul
mov
out
mov
jb
fwait
dec
nop
sub
xchg
pusha
xchg
icebp
push
mov
mov
adc
leave
loop
fbld
scas
adc
xor
addl
xchg
ljmp
lea
mov
fdivrs
mov
in
ja
cltd
lock
pop
add
popa
cmp
pop
xchg
sub
insb
inc
mov
xchg
bound
lea
push
sbb
and
push
ror
cmp
scas
mov
xchg
aam
into
je
leave
mov
jmp
mov
sub
pusha
shlb
outsl
cmp
lret
repz
jb
cld
push
cwtl
bound
cmc
jmp
inc
sarl
xor
adc
loope
and
mov
pop
clc
xchg
cmp
jmp
imul
sub
outsl
leave
popf
jne
mov
sub
jns
xchg
jg
mov
and
call
mov
js
sbb
lret
mov
xlat
add
cmp
cmp
and
fidivs
movsl
aam
in
dec
pop
fistl
arpl
inc
xchg
mov
pop
push
mov
out
test
movl
add
pop
imul
sub
aaa
int3
scas
fxch
push
insb
mov
arpl
leave
push
repz
xor
and
pop
into
into
cmp
fidivs
lcall
mov
push
xchg
xchg
mov
jge
jns
push
enter
dec
push
adc
mov
ffreep
sub
aam
mov
add
xchg
sarl
testl
xchg
mov
clc
mov
adcl
dec
inc
mov
js
ja
out
adc
inc
push
xlat
and
fistps
push
mov
shll
ja
mov
cmp
dec
rcrl
lods
pushf
mov
adc
fsubrs
sbb
rorb
aaa
aaa
das
xchg
out
jbe
in
mov
xchg
imul
movsb
cmpsl
call
mov
push
in
movsb
or
sbb
and
inc
repnz
aad
dec
xchg
and
mov
sbb
mov
rorl
inc
push
sub
push
add
repz
jecxz
jb
adc
jb
negb
leave
jbe
mov
cli
loope
aam
add
in
jg
mov
aad
xor
test
jb
out
popf
jecxz
subl
xchg
or
aas
popf
fs
fmul
fidivs
mov
in
mov
mov
gs
push
and
stos
aas
mov
jp
idivb
cld
imul
outsb
pop
call
sub
lods
push
push
mov
jno
jnp
outsl
in
push
jo
sbb
sbb
jecxz
aad
leave
adcb
xchg
pop
xchg
loopne
sub
leave
repz
inc
sbb
out
cs
and
push
or
loopne
hlt
stc
xchg
cmp
and
sub
outsb
repz
enter
and
mov
jp
mov
mov
ret
cwtl
pop
add
mov
inc
mov
jno
mov
adc
xchg
mov
push
jbe
out
ljmp
icebp
lods
cld
xor
push
cmp
pushf
fbstp
pushf
lcall
pop
sbb
xor
fisubs
pop
loop
jmp
cmp
mov
mov
rcr
push
xor
pusha
push
fcos
or
faddp
enter
in
sub
cmpsl
push
pop
inc
aas
push
call
and
mov
loope
jg
pop
push
jle
pop
and
mov
mov
shlb
repz
decl
outsl
fs
mov
and
xchg
cwtl
fstpl
pop
in
loope
push
add
lods
sub
fstps
push
mov
int3
sbb
out
sbb
shll
jb
inc
movsl
sbb
jmp
test
dec
or
mov
cmp
sbb
xchg
or
popa
sti
add
fsubrl
push
stos
pop
xchg
mov
data16
inc
es
lret
inc
add
sbb
lret
mov
fsubl
push
pop
xchg
push
imul
imul
sbb
in
dec
stc
pop
add
fs
lods
adc
mov
push
mov
sbb
nop
fsub
adc
cmpsl
dec
pop
jp
decb
cmp
sub
sub
movsb
jne
xor
sub
mov
cmc
jp
inc
lcall
pusha
call
jo
mov
dec
or
cmpb
pop
inc
mov
pop
lds
out
sub
aad
into
addb
push
mov
loope
mov
jnp
cmp
adc
jp
adcb
in
jg
mov
js
fs
insb
mov
fistpll
push
scas
outsl
fsubrl
pop
dec
out
mov
cltd
pop
add
fistl
repz
jle
mov
pop
loope
aaa
mov
lret
jo
scas
mov
jnp
sub
xor
push
or
enter
stos
mov
add
and
es
dec
sarl
inc
mov
hlt
mov
aam
addr16
xchg
mov
mov
lds
jbe
xchg
testb
test
imul
cmp
xor
add
jge
dec
mov
mov
fadds
adc
push
mov
lcall
pop
mov
pushf
sub
mov
outsb
and
sub
mov
jecxz
sbb
cwtl
pop
add
sub
push
push
popa
fwait
inc
hlt
jo
loopne
or
jp
jae
or
sub
jnp
rorl
rorb
xchg
ficoms
addr16
ss
into
or
cmpb
push
idivl
push
add
mov
pop
stc
cmp
stos
inc
mov
scas
jne
in
sahf
sbb
mov
std
and
popa
cmp
or
or
cld
leave
popa
push
add
lret
adc
and
inc
sbb
jae
lds
jge
cmpps
and
fdivs
es
adc
dec
lret
and
test
adc
std
jbe
cmpsb
fbld
int
xchg
adc
pop
pushf
jg
in
or
lret
dec
iret
jge
push
sub
into
jb
xorl
gs
pushf
adc
and
adc
dec
insb
jb
in
in
les
stc
cmp
popf
imul
mov
inc
mov
push
dec
dec
jl
dec
insb
or
out
in
call
push
jo
aad
inc
popa
lret
push
push
push
xchg
fwait
sbb
out
jno
lods
leave
and
sbb
or
lds
ja
inc
int3
pop
xorl
cld
ret
pushf
insl
jmp
and
repz
bound
addr16
xchg
or
inc
adc
xchg
sub
loop
movsl
sub
push
inc
or
dec
adc
mov
rolb
xchg
add
test
das
popa
inc
ret
pop
mov
lods
inc
add
or
aad
inc
cmpsl
mov
xorl
aas
in
dec
int
enter
repz
cmpsb
xchg
xor
cmp
dec
mov
mov
mov
movl
cmpsb
or
add
int
jle
sahf
mov
sub
push
mov
ljmp
insb
loopne
sarl
shl
sub
jno
xor
sti
xor
jl
imul
dec
mov
pop
cmp
push
addr16
sub
pop
add
mov
push
nop
fisttps
dec
sub
ds
es
inc
shrb
push
or
sbb
mov
into
test
in
aad
sub
je
call
minps
mov
es
dec
or
push
loopne
pop
insb
clc
cmp
push
add
cmp
mulb
dec
push
icebp
push
mov
fidivl
sbb
fsubs
jbe
and
insl
test
movsb
nop
test
mov
push
inc
inc
or
inc
test
mov
mov
and
out
push
shll
add
inc
addl
cmpsb
pop
mov
into
out
xchg
push
sbb
dec
inc
loopne
arpl
push
cmp
mov
into
push
jmp
std
shlb
fbld
pushf
inc
aas
aam
rcrl
jb
jge
les
cltd
xchg
popf
cmp
fimull
inc
cmp
shrb
pop
push
xchg
cmp
cli
or
cmpsb
jmp
pop
xlat
cs
mov
and
pop
arpl
xor
loopne
fldt
sbb
or
arpl
xchg
sub
jae
push
lea
jno
jle
xchg
xlat
outsl
js
out
pop
mov
rolb
fildl
add
push
cmpsb
cmpsl
hlt
js
xchg
add
jb
xchg
dec
inc
xor
out
scas
sbbb
adc
bound
pop
les
or
xor
test
cltd
popl
push
rcll
std
cmc
or
jns
add
fstps
lock
daa
popa
mov
aam
push
in
push
lahf
pop
ss
adc
pop
jmp
jns
cmpsb
sub
sub
bound
push
outsl
imul
cmp
sub
sub
or
and
loopew
imul
movsb
ja
inc
pop
xchg
cmpl
sahf
xor
subl
adc
out
or
inc
lret
add
fidivl
push
fs
mov
lret
and
into
adc
pop
gs
fwait
mov
movhps
push
sbb
mov
sahf
or
scas
mov
js
cmp
int3
popa
pop
jge
dec
shll
mov
popa
fs
xor
sbb
out
aam
fimull
mov
lea
jno
fdivl
mov
push
push
hlt
add
pop
ljmp
test
sahf
adc
jp
cmp
dec
shl
xchg
fwait
lods
shrl
jae
lock
cmp
dec
pop
fldl
jmp
fsubl
ljmp
daa
imul
pop
inc
inc
lods
mov
and
add
lods
sub
mov
and
xor
or
fidivs
adc
pop
mov
pop
mov
adc
je
or
fisttpl
or
scas
and
das
sub
cmp
les
mov
mov
sarl
inc
or
adc
or
je
inc
pop
cld
mov
pushf
add
es
sbb
cmp
fwait
lea
lret
dec
sarl
xchg
and
and
shlb
cmp
lods
adc
out
movsb
cmp
in
lahf
pop
ret
test
bound
inc
daa
push
xchg
fistps
inc
popa
mov
jne
cmc
mov
push
mov
jmp
scas
movsb
jbe
cmpsb
mov
sar
insb
loope
loopne
and
add
nop
loop
fcomp
jo
fisttpll
outsl
rolb
pop
out
xchg
iret
add
xchg
aad
es
or
mov
xchg
jb
mov
pop
fidivrl
lods
mov
addr16
or
dec
mov
iret
scas
int
in
repz
jbe
xor
aam
and
enter
sub
add
push
push
cmp
or
add
push
into
mov
fbstp
pop
inc
leave
fsts
inc
ret
add
imul
fadd
dec
ret
sub
loope
sbb
out
inc
dec
lods
cwtl
shll
xor
xchg
rorb
adc
mov
xchg
lock
add
adc
or
mov
mov
mov
push
xchg
xadd
aaa
push
test
push
xor
mov
bound
ret
pop
fidivrl
roll
or
inc
inc
add
jae
incb
ja
xor
sub
arpl
out
movsb
lds
push
cwtl
xor
ja
fsub
dec
inc
cmp
call
int3
mov
ljmp
stc
dec
inc
jle
jae
add
hlt
mov
insl
push
dec
sahf
jb
imulb
int3
lahf
or
dec
data16
dec
icebp
jecxz
sbbl
dec
in
js
mov
add
cli
push
stos
jg
dec
jecxz
or
mov
lret
cmc
mov
cli
adc
push
stos
stc
out
adc
or
mov
cwtl
js
shlb
movsb
outsl
stos
lcall
dec
bnd
lds
icebp
fcompl
mov
xorl
sub
inc
cmp
aaa
and
loop
pop
js
lock
cmc
jnp
mov
inc
lahf
icebp
arpl
or
adc
jo
in
jnp
cmc
ds
jbe
push
and
rclb
lods
jg
adc
lods
jne
adc
std
dec
push
inc
xchg
xchg
aaa
sub
inc
jb
push
mov
out
arpl
lcall
dec
out
lds
je
cwtl
icebp
add
jmp
mov
pop
mov
subb
dec
xchg
jg
inc
xchg
inc
pop
mov
inc
aaa
sbb
rcrl
pop
movsb
pop
cmpsb
push
xor
ficompl
or
fs
jne
testb
mov
push
inc
jp
popa
mov
cld
xchg
sbbl
fcmovbe
cld
mov
and
lahf
lods
lret
pop
addr16
xor
sbb
inc
std
cmp
jecxz
fisubl
push
jl
mov
dec
or
lods
xchg
mov
pop
or
sub
mov
loope
xchg
jmp
shl
in
sbb
popf
jp
dec
nop
in
mov
stos
mov
jno
lcall
xchg
jns
lea
rcrb
cmpsb
adc
or
into
mov
mov
lcall
call
imull
push
sbb
mov
sbb
hlt
dec
dec
pop
sbb
mov
out
outsl
mov
andl
ds
jbe
add
sub
sbb
mov
ds
adc
pop
aam
ja
pop
sub
gs
insb
mov
lock
fcomi
sub
sbb
dec
xor
je
add
xchg
sbb
adc
and
aad
mov
cmp
mov
mov
xor
cmp
cwtl
jae
sub
sub
pop
fisttps
dec
dec
cltd
sbb
bound
ja
shlb
mov
ss
push
mov
scas
xchg
xchg
cmp
cmpsb
call
aaa
orl
pop
inc
sub
mov
test
lds
cli
mov
sbb
push
ja
lea
adc
xchg
jmp
sbb
xor
bound
scas
data16
insl
leave
inc
mov
bound
dec
ffree
mov
btr
mov
add
shll
stos
inc
pushf
iret
movsb
pop
ss
out
outsb
imul
add
int3
sbb
lahf
btc
cmp
test
and
mov
scas
xchg
stos
aad
popf
adc
xor
insl
leave
xor
mov
cmp
sbb
jp
mov
pop
xchg
test
and
mov
jnp
dec
dec
xchg
xorb
icebp
outsb
xchg
lea
out
mov
jb
push
stos
inc
xor
add
das
mov
scas
fcomps
and
andb
mov
pop
or
mov
hlt
aas
lret
in
cmp
popf
sbb
jg
pop
adc
ds
add
js
jne
dec
loop
adc
sub
cs
gs
lods
in
pushf
mov
jge
aaa
jno
add
stos
out
jae
fidivrl
lea
in
out
mov
push
das
xchg
out
aam
mov
in
push
adcl
movsb
xchg
arpl
ss
xchg
or
and
pushf
loope
mov
lcall
fs
inc
inc
xor
cmp
mov
mov
jle
test
std
xor
mov
sub
mov
xor
jns
shrl
cwtl
push
aas
and
mov
loop
inc
incl
pop
lods
shll
dec
hlt
mov
icebp
adc
xorb
mov
sub
add
or
leave
sbb
call
push
xchg
fidivs
movb
jb
dec
sbb
push
sbbl
out
cmp
mov
dec
pop
or
xchg
add
jmp
aad
into
aas
lret
xor
idivl
repnz
mov
ficoml
adc
or
push
rcl
jmp
andl
sbb
enter
push
stos
jge
clc
xor
add
pusha
aaa
inc
pop
jecxz
cmpsb
lea
subl
adc
sti
arpl
or
neg
je
mov
xchg
test
mov
lea
insl
sub
hlt
fcmovnu
lahf
test
cmc
or
push
or
ljmp
mov
cmp
jmp
shl
mov
test
into
or
outsb
scas
pop
inc
and
sbb
in
jnp
mov
push
and
dec
xor
cmc
iret
fidivs
xchg
xchg
inc
pop
andl
aas
mov
xchg
lock
ss
push
jns
jl
aas
push
pop
fwait
pop
or
out
leave
out
enter
sbb
cpuid
xorl
pop
sub
aas
jp
push
je
fmulp
jecxz
mov
push
std
cmp
in
mov
push
nop
repz
repnz
aas
cmp
popl
clc
mov
add
jno
push
mov
movsb
sti
jne
pop
test
imul
scas
lea
jl
daa
sbb
stos
mov
dec
aam
adc
mov
inc
mov
add
jne
mov
pop
or
cmpsl
sbb
or
lods
pop
mov
xchg
xchg
aas
rcl
and
ret
or
xor
test
add
cmpsb
pop
mov
push
cmp
mov
test
out
fadd
sahf
aas
cmp
scas
mov
jle
adcl
nop
push
cmpsb
jbe
out
inc
mov
int3
sbbb
mov
stos
sbb
mov
out
inc
stos
mov
lret
cmovnp
sub
nop
mov
mov
test
push
push
jb
repnz
or
cwtl
inc
jnp,pt
iret
dec
mov
sti
mov
lods
fimull
inc
loop
add
shlb
sti
sbb
xor
inc
pop
or
aas
mov
sub
fdivs
adc
adc
aas
mov
xor
cmp
out
cld
test
add
push
test
lea
inc
jnp
pop
out
ljmp
push
dec
dec
out
aad
dec
mov
es
mov
add
pop
cmp
push
dec
push
sub
popa
test
jmp
sub
int
stos
lahf
in
fisubrs
into
mov
pop
mov
lcall
cmc
push
jne
push
mov
leave
cmp
scas
int
pop
enter
mov
push
ret
dec
mov
push
or
fidivrs
push
lock
xchg
pop
or
ds
es
addr16
lea
dec
test
loop
push
dec
es
lods
rcll
jo
push
stos
xchg
push
dec
cmp
into
sub
inc
dec
add
mov
fucomi
mov
outsl
mov
idivl
fwait
pushf
mov
mov
je
test
dec
jle
and
movb
ja
xor
lods
pop
sbb
dec
or
test
fidivl
and
sub
rcll
jp
xchg
decl
les
in
out
stc
scas
mov
and
add
sbb
pushf
ds
shl
sbb
pushf
adc
mov
out
add
in
mov
sbb
ret
sub
xor
out
mov
aas
cli
das
test
adc
add
movq
test
cmpb
and
xchg
je
add
ljmp
inc
fisubs
subb
stos
aas
je
rep
sbbb
insb
push
push
and
mov
inc
sub
adc
imul
xchg
jecxz
jb
sbb
pusha
outsl
cmovb
addr16
out
xchg
jbe
mov
cld
xchg
mov
aas
sbb
jle
sbb
push
or
inc
sbb
in
pop
rol
push
sbb
sahf
or
cmp
xchg
cmp
add
sub
xor
add
xorl
add
jle
lcall
mov
shrb
push
aaa
cmp
cmovg
stc
sahf
ja
lahf
in
in
mov
out
mov
and
ret
cmc
loop
fdivrs
push
sub
cli
icebp
jb
aas
insl
sbb
sti
lret
xor
int
dec
insl
add
arpl
pushf
loope,pn
out
ja
push
out
xor
adc
pop
shl
mov
xor
jmp
mov
ss
cld
cmp
lcall
std
inc
ret
and
lds
sub
ja
xchg
pop
and
sub
roll
or
dec
pop
add
stos
dec
shll
arpl
es
sti
add
in
data16
daa
cli
in
mov
popa
mov
push
lds
sti
xor
inc
cmp
cmp
dec
data16
inc
mov
pushf
test
sub
xor
sbb
mov
mov
stc
add
xchg
in
jae
fstpt
insl
js
mov
aaa
std
sub
push
xchg
int
cli
ja
sbb
push
les
push
and
scas
pop
hlt
jae
ds
bound
clc
je
test
imul
and
pop
ljmp
mov
les
je
shrb
aas
stc
lret
inc
repnz
subb
cmp
and
and
std
cltd
dec
gs
movsb
shll
mov
lret
xor
and
popa
in
and
icebp
inc
imul
inc
sbb
out
adc
test
lcall
sti
mov
test
mov
xor
mov
int3
out
call
pop
lds
jle
mov
popa
je
out
and
js
hlt
cmp
fs
pop
leave
push
push
push
adcl
inc
cmp
ret
push
xchg
pushf
nop
push
movsb
lahf
adc
sbb
pop
outsl
sub
xor
mov
pushl
mov
dec
in
lret
fistps
push
shll
xor
xlat
sub
pop
mov
pop
sub
nop
and
repz
cld
add
std
mov
movsb
mov
lahf
movsb
mov
mov
jno
loop
jne
fistps
ds
fidivrs
adc
or
pop
enter
sbb
adc
mov
notb
test
cltd
jle
jl
stos
add
dec
aas
add
sbbb
stos
repnz
mov
mov
ror
push
je
xchg
xchg
outsb
dec
pop
inc
stos
test
pop
fwait
sub
ja
sbb
iret
out
pop
addr16
cmp
or
clc
cmp
adc
ja
mov
fstpt
or
dec
stos
xchg
sub
rorl
dec
cmpsb
arpl
jb
nop
adc
sub
cs
sbb
addb
add
fnstcw
cmp
inc
into
das
andl
test
inc
push
sbb
repnz
lods
aam
andb
popa
xorl
scas
cmp
xor
scas
out
push
je
cwtl
mov
push
mov
adc
lret
mov
test
aas
test
cld
dec
xchg
imul
in
pop
or
cwtl
icebp
push
loop
add
rorb
mov
mov
pop
sub
dec
sbb
add
add
sbb
call
dec
lret
cld
push
insl
push
cmp
push
js
jno
iret
adc
fisubrs
scas
mov
pop
jle
push
push
and
js
loope
xchg
adcl
popf
adc
xchg
cld
loop
mov
pop
sub
ss
sbb
adc
outsb
cmc
pusha
jo
xor
jl
xchg
cmp
mov
sarb
push
fwait
mov
sbb
loop
pop
packuswb
bound
fs
sbb
lock
dec
scas
fsubrs
jmp
movsb
pop
xchg
jg
cld
mov
loop
in
jle
jns
mov
mov
lret
popf
mov
pusha
js
shl
jo
mov
inc
mov
pop
xlat
push
aaa
pusha
insl
je
add
test
cwtl
dec
mov
inc
loopne
iret
push
or
aaa
mov
insl
sbb
arpl
scas
inc
or
sub
cli
mov
stc
cld
or
repz
xchg
lock
andb
das
push
jb
cmpl
lock
call
scas
xor
cmc
loopne
mov
push
in
cmp
les
lock
xchg
add
aam
test
cmc
push
jns
cmp
xchg
inc
cmp
mov
mov
sub
dec
fisttps
inc
adc
add
lods
fimuls
dec
dec
cmp
std
mov
mov
aaa
sbb
and
add
imul
dec
fs
jp
mov
test
add
mov
in
pop
xor
mov
jg
adc
push
or
dec
sti
nop
push
and
insb
xchg
lock
sbb
mov
hlt
shl
or
inc
ret
adc
repz
sub
lea
cmp
cmp
loopne
lcall
jg
sbb
mov
or
pop
sub
jmp
adc
pop
sbb
add
push
sub
or
and
bound
int3
nop
cmpsb
out
or
inc
pop
jns
std
test
cmp
arpl
or
imul
outsl
cld
jge
fisttpll
add
loope
add
dec
sti
dec
sub
lret
jl
cld
inc
dec
lret
shrb
jne
sti
push
and
sub
or
inc
stc
sbb
mov
pop
push
jnp
pop
or
jns
sub
sub
push
cli
xchg
fwait
sbb
into
or
dec
push
enter
push
cltd
dec
cmpsl
aaa
lea
mov
push
jbe
in
pop
shll
cmp
in
dec
rcrb
call
pop
lods
sbbl
das
int
pop
mov
sbb
fdivrs
pop
push
clc
aad
mov
lock
fmul
pop
jg
mov
icebp
add
fldenv
sti
dec
cmp
adc
mov
cwtl
cmp
xchg
pusha
inc
pop
lock
mov
cmp
sbb
dec
adc
repz
ljmp
adc
sbb
movsl
xchg
pop
fldenv
xchg
aas
jmp
mov
sarb
xorb
mov
pop
mov
or
mov
lret
and
shrl
push
inc
add
adc
push
scas
jecxz
jmp
mov
sub
mov
subb
mov
jno
bound
push
cmp
pop
gs
fidivrs
aad
scas
stc
cmp
mov
sub
adc
adc
xchg
test
in
dec
xor
popf
mov
ss
shl
loopne
xor
add
pusha
leave
sub
dec
cmpsl
push
mov
mov
jo
movsb
or
test
js
xor
andb
adcl
push
out
and
cmc
or
mov
pop
cli
xor
lcall
cwtl
in
push
pop
xchg
mov
fcmovne
daa
sbb
fld
aam
inc
cwtl
fs
pop
es
aaa
pop
aaa
push
jmp
loopne
xor
mov
loop
bound
loopne
in
test
scas
fcomps
push
xchg
stc
test
add
mov
sub
into
mov
cmp
cs
pushf
mov
sbb
or
stc
into
sbb
lods
imul
xchg
movsl
shll
jl
lahf
stc
push
scas
iret
cltd
cwtl
push
cmp
jnp
addr16
push
jo
add
ret
push
jne
pusha
dec
ss
jo
lods
loope
pop
sub
jns
mov
out
jns
jl
aam
dec
repnz
test
rcrb
mov
gs
sbb
pusha
adc
cmp
add
clc
cmpsb
cltd
push
jae
mov
push
dec
call
out
call
mov
xorl
push
sarb
xchg
or
mov
inc
mov
mov
fdivl
je
or
jecxz
fwait
imul
sbb
dec
jl
sti
mov
xchg
adc
pop
outsb
cmpsb
xorb
ret
clc
cld
lods
neg
pushf
xchg
test
divl
push
mov
scas
jns
data16
sbb
les
stos
jl
outsb
add
dec
cld
adc
lcall
push
cmp
push
sub
int
pop
sbb
popa
xchg
push
lods
mov
lahf
dec
mov
jecxz
add
push
push
mov
xor
jno
pop
pop
std
stc
mov
push
dec
bound
fildll
adc
mov
cmpsb
dec
sub
or
or
xchg
test
cmp
mov
popf
int
and
sub
sub
repnz
dec
pushf
call
stos
mov
xchg
mov
adc
pop
jl
lcall
call
cmpsb
out
lea
cmp
mov
popf
inc
sahf
out
push
fwait
leave
insb
lcall
dec
loop
sbb
xor
pmulhw
add
dec
dec
add
mov
cmp
test
push
cmp
jp
stos
jae
xchg
fwait
push
lock
jnp
or
data16
sbb
xchg
dec
stos
hlt
fsub
movsb
sti
xor
mov
xchg
loope
sarl
xchg
pop
out
daa
jg
pop
gs
mov
xchg
bound
imul
fistps
clc
les
push
pop
jae
test
mov
push
pop
cmp
cltd
shrl
daa
loop
add
adc
popa
jmp
pop
into
or
inc
cwtl
lret
outsl
repnz
sbb
daa
sub
adc
out
and
jp
sbb
push
mov
xor
ljmp
or
mov
imul
stc
adc
dec
mov
pop
xor
inc
jmp
pop
jo
push
mov
fwait
mov
push
dec
pop
sub
adc
xor
add
dec
add
pop
roll
push
cmp
mov
add
pop
lods
outsl
test
jg
add
xchg
mov
push
ljmp
cmpsb
movsl
sbb
or
insl
std
or
mov
cmpsl
leave
js
int3
test
or
fstpl
enter
imul
adc
or
ss
cwtl
mov
scas
jge
xlat
xchg
xchg
inc
jae
mov
sahf
xor
in
das
enter
push
shrb
xor
clc
mov
pop
pop
add
sub
stos
std
cmp
mov
or
mov
pop
dec
mov
mov
jmp
push
repnz
lahf
jle
mov
repz
xlat
pop
jge
or
xchg
aas
js
lcall
or
mov
sarb
out
mov
and
insb
or
addl
pop
aam
sarl
mov
xchg
cltd
pop
mov
dec
pusha
push
mov
aaa
daa
movb
addb
sbb
jb
insl
orl
dec
xor
fmull
inc
push
pop
movsl
ljmp
data16
cld
repnz
fsts
outsl
sbb
mov
aam
mov
push
les
or
cmpsl
mov
adc
inc
aas
ficomps
pop
fwait
mov
push
add
mov
mov
loope
or
pop
cmp
std
mov
out
insl
ror
jecxz
ds
sub
cmp
adc
adc
bound
mov
xor
loop
bndldx
inc
sti
xchg
mov
mov
cmp
jno
add
pop
push
xchg
popf
rcr
jne
daa
and
cmp
mov
add
rorb
popa
js
cltd
push
mov
enter
push
lret
das
imul
rcr
dec
mov
sub
pop
shr
test
mov
pop
fnsave
jp
loopne
jne
sbbl
adc
xlat
test
mov
cltd
jge
and
or
jg
lods
jae
add
fildll
pop
sbb
inc
push
lret
pop
das
dec
xchg
add
ss
loope
aaa
nop
mov
adc
sbb
mov
mov
out
sub
mov
push
add
loopne
sbb
cmp
push
lods
add
xchg
pop
pushf
or
mov
xor
lea
sbb
jae
cltd
insl
sbb
mov
frstor
aam
int
add
sti
inc
popf
sbb
mov
pop
fwait
aas
xchg
icebp
out
inc
mov
stc
les
dec
das
js
cmp
dec
movsl
aam
ljmp
jno
clc
jg
pop
jg
xchg
cmp
xor
neg
pop
xchg
mov
dec
cmp
addl
stos
repz
cmp
call
out
push
pop
cmpsl
rol
or
mov
adc
lods
cmpsb
add
xor
dec
insb
cmp
cmp
fucomp
xor
testl
ja
cmc
or
push
lea
icebp
insl
fsubrl
mov
jg
lret
cwtl
rcl
xchg
jnp
pop
jle
push
mov
mov
rorl
and
into
pop
jbe
push
addr16
jno
lea
daa
fst
and
push
repnz
lcall
cmpsb
fistpl
adc
cmpsb
push
dec
or
enterw
pop
test
mov
adc
pop
push
xor
nop
cmc
mov
adc
stos
sbb
bound
cli
cmpsb
lret
jo
cwtl
xor
mov
lret
and
pop
das
ljmp
into
out
sub
adc
push
into
cmpb
jae
aam
xchg
fildl
loope
jmp
dec
push
push
fs
lret
sbb
stos
xchg
and
mov
out
sub
sbb
mov
inc
xchg
fisttps
jl
mov
aad
jbe
aam
adc
mov
mov
inc
mov
data16
mov
jle
aas
pop
test
jmp
ljmp
pop
in
mov
fs
mov
or
dec
rorb
mov
sbb
mov
cs
popa
shrl
inc
add
idivb
push
scas
ds
adc
push
jp
sbb
pop
cmpb
pop
push
imul
dec
jne
mov
or
inc
icebp
push
dec
and
or
lds
lods
push
or
mov
push
xor
das
mov
sub
ljmp
xchg
bound
loop
push
imul
dec
lock
cmc
mov
xor
and
jae
je
sub
dec
push
adc
sbb
mov
sub
inc
or
mov
xor
movsb
add
inc
jle
stos
shlb
stos
pop
arpl
pusha
and
inc
xchg
bound
mov
and
jecxz
cmpsl
scas
push
add
jge
out
sub
dec
stos
mov
popf
lods
arpl
inc
adc
mov
sub
pusha
xchg
mov
jle
je
jle
and
les
das
lret
sub
mov
and
xchg
fcomps
rcr
sbb
daa
outsl
adc
and
sbb
aad
xchg
bound
pop
inc
imul
jge
js
mov
xor
xor
lock
outsb
lods
std
out
pop
stc
sbb
jnp
enter
shrl
mul
movsl
mov
sub
sbb
dec
sbb
out
jmp
sbb
mov
push
adc
in
js
imul
cmpsl
push
push
aad
scas
lock
stc
ja
insl
lcall
inc
cmp
xor
mov
jae
jg
push
addr16
add
mov
and
iret
xor
xlat
and
cli
out
mov
mov
repnz
sbb
notl
or
push
sub
mul
jle
bound
mov
pop
sbb
imul
lret
ljmp
cmpsb
push
xor
lret
pusha
cmc
lahf
pop
inc
es
cmc
jns
jecxz
shll
dec
lods
nop
leave
stc
out
pop
sahf
iret
cli
push
and
leave
hlt
das
mull
xor
mov
dec
mov
outsb
fsubp
lock
or
fimull
roll
and
adc
cmpsb
and
sarl
mov
clc
fcomps
sbb
sti
stos
or
addb
xchg
or
mov
loopne
xrelease
or
aam
jb
test
pop
leave
mulb
dec
dec
ja
mov
mov
xchg
in
or
dec
push
mov
loopne
jns
test
sub
mov
pop
fimuls
and
and
aad
addl
rcrb
xchg
loop
pushf
and
sbb
adc
xor
cmc
jnp
sub
mov
icebp
mov
xor
test
rorl
sbb
in
les
idivb
pop
and
loope
in
sahf
and
sub
imul
sub
addb
mov
xchg
push
nop
xor
dec
cmp
mov
adc
and
stos
jge
cmp
int3
sub
test
vpunpcklqdq
inc
daa
fs
or
shll
shrb
jno
cmp
sbb
add
dec
sub
ds
add
decl
incl
dec
fisttpll
dec
iret
adc
test
fldcw
test
lret
or
or
pop
xor
gs
mov
pop
lahf
in
xchg
data16
xor
inc
xor
fs
mov
stc
mov
pop
movl
test
hlt
in
xlat
shl
adc
fsubs
insl
adc
inc
lds
xor
mov
cmc
xor
mov
lcall
dec
dec
fisubs
adc
stos
aad
mov
sbb
pop
rolb
xchg
lret
mov
push
lds
mov
cmp
testl
popa
xor
xchg
xchg
mov
aad
imul
add
rclb
adc
repnz
adc
and
cmp
push
movsb
addl
or
iret
fldcw
stc
data16
sbb
js
icebp
lret
push
sbb
pop
aam
cmpsl
cltd
push
fistpl
fdivrs
push
xor
bound
insb
fidivrl
jge
xchg
pop
test
add
jg
js
sbb
imul
leave
pop
jbe
jge
or
mov
insb
daa
push
xor
pusha
into
addr16
dec
dec
inc
adc
pusha
jbe
pop
dec
lods
or
lock
outsb
movsb
push
int3
pop
orb
push
mov
cli
in
pop
pop
repz
aas
pop
mov
adc
inc
add
mov
in
nopl
sbb
xchg
ja
rcrl
hlt
mov
out
and
fnstcw
pusha
dec
adc
mov
into
xlat
fsub
mov
out
xchg
outsb
shrl
cwtl
or
cmp
dec
outsl
or
hlt
xchg
std
mov
mov
in
dec
push
shll
add
and
sub
dec
sti
stos
imul
leave
pop
mov
lret
xor
sbb
in
xchg
dec
or
dec
ja
pop
fs
ja
dec
pop
out
add
imul
lea
push
jns
stos
loop
mov
scas
adc
int3
add
stos
adc
subps
xchg
aam
push
jnp
dec
adc
xchg
push
mov
jno
sub
inc
aad
sub
adc
dec
adc
aad
fdivr
or
inc
pop
inc
fnclex
pop
inc
cmp
push
test
inc
fs
xchg
and
push
sbb
sbb
sbb
mov
and
imul
ss
insl
test
cmp
fisttpl
adc
mov
cltd
mov
or
inc
arpl
push
jno
dec
sbb
inc
and
push
lea
dec
fsts
mov
pop
add
mov
dec
adc
fldl
and
push
adc
push
rorl
mov
pop
sub
in
add
mov
sbb
pop
js
inc
movsl
cmp
cs
jge
shll
jb
outsb
ret
cmc
inc
pop
add
or
in
fwait
jnp
outsl
cmp
and
je
fdivrl
fucomip
sub
lock
lods
sbb
lods
push
insb
jo
arpl
sbb
enter
sahf
sub
mov
ret
cmpsl
push
jp
test
inc
mov
shll
sub
in
ficompl
sub
fidivrl
repz
inc
out
add
or
mov
enter
imul
insb
loope
cmp
cmpsl
and
jg
cmpsl
xor
jnp
ja
sub
adc
jl
dec
adc
pop
or
out
stos
xchg
orb
push
daa
pop
xchg
sub
orb
int
mov
jbe
push
ficomps
jno
scas
mov
imul
ds
je
outsb
push
mov
mov
jmp
xlat
std
mov
and
mov
add
xchg
sub
jmp
imul
mov
loop
out
dec
ret
add
or
hlt
jae
jbe
pop
jns
in
in
add
les
add
test
movsl
loopne
sub
add
or
jmp
pop
movsb
cs
cmp
jo
dec
adc
pop
lods
pusha
lods
or
push
mov
cmp
hlt
aaa
push
jl
cmpsb
scas
jmp
test
cwtl
xor
les
fwait
popaw
lcall
and
rclb
inc
mov
sbb
jbe
pusha
cmp
sub
pop
hlt
fdivr
loopne
ljmp
mov
mov
inc
inc
addr16
out
test
lahf
aam
jbe
jae
daa
divb
dec
adc
scas
sbb
es
out
iret
jp
dec
inc
dec
xbegin
data16
sahf
mov
fstl
pop
pop
xchg
and
out
nop
push
push
mov
js
or
mov
aas
inc
jnp
movsl
sub
dec
repnz
repnz
mov
xor
fnstsw
popa
push
in
ret
sbb
idivl
sub
mov
addb
jmp
pop
fs
sti
mov
sub
lock
fildll
mov
add
jae
subl
in
popa
sti
ds
or
ljmp
jge
nop
pop
shr
sub
arpl
inc
xor
inc
cmpsl
fxch
and
fs
pop
imul
or
fmul
mov
rcrb
cmpsl
add
adc
xchg
ja
sub
div
push
bound
fcoml
inc
icebp
divb
insl
push
fdiv
xchg
pop
jge
popf
jmp
dec
shlb
mov
xor
mov
arpl
or
sbb
dec
inc
xor
pop
mov
loopne
jmp
mov
lea
leave
lods
ljmp
push
mov
loop
adc
xor
fimuls
outsb
pop
pop
loopne
push
xor
stos
pop
inc
push
cs
ja
pop
enter
xor
sub
push
mov
loopne
loopne
out
subb
testb
add
or
in
adc
int
jge
pushl
mov
outsl
mov
inc
jbe
jl
adc
mov
xchg
lret
cmp
lods
jge
mov
addr16
or
es
leave
sahf
movsl
fninit
icebp
ljmp
stos
test
mov
xor
inc
inc
in
icebp
mov
sbb
adc
pop
xor
inc
and
movsl
or
push
xchg
add
testb
fistpll
pop
dec
sub
jle
pushw
in
lock
push
pop
jo
jns
out
out
das
popf
insl
pop
inc
xor
sbb
add
xchg
stc
sbb
push
xor
dec
xchg
rorb
lock
lahf
cmp
xor
std
pop
add
adc
jo
lret
xor
fiadds
jo
dec
jg
cmp
sub
jecxz
sub
push
pop
xchg
mov
xchg
sbb
lret
cmp
pop
aaa
sbb
mov
cld
stos
setle
jge
cmpsb
lcall
xorl
mov
in
jne
ljmp
decb
or
xchg
cmp
sbb
sbb
mov
dec
jge
cmp
dec
push
jns
lret
push
fwait
not
clc
push
mov
test
push
push
xorb
push
mov
jo
cs
xlat
enter
into
xchg
jns
xor
insl
inc
out
fwait
call
sbb
hlt
push
call
push
and
and
inc
jnp
jl
fwait
dec
lds
and
stc
mov
lahf
jns
sub
dec
adc
jmp
cs
or
or
xchg
orb
add
xchg
mov
movb
xchg
sub
fstps
xchg
jg
rcll
sbb
jbe
hlt
mov
mov
mov
or
mov
lret
aas
add
inc
mov
pop
lods
ljmp
mov
jecxz
shlb
or
pop
xchg
pop
repz
daa
cmpsl
aas
push
fwait
add
xchg
jae
hlt
negb
movsl
dec
scas
xlat
and
dec
test
mov
inc
ds
divb
dec
xchg
pop
stos
push
loope
xor
popa
dec
push
loop
xor
xchg
gs
ret
js
lods
xlat
call
pop
shll
fiaddl
dec
mov
scas
stos
sti
inc
or
into
or
push
movsb
outsl
mov
psubd
fcomps
add
shll
pop
test
pop
cltd
ljmp
jb
push
dec
sbb
or
push
lret
inc
xchg
sbb
cltd
inc
lds
movsl
daa
es
lds
shll
or
push
inc
cmp
lock
or
sbbb
filds
cld
ds
add
xchg
inc
sub
aaa
stos
mov
fdiv
mov
iret
in
mov
sbb
mov
lahf
push
mov
pop
pusha
fs
test
cmpsb
or
inc
lods
outsb
inc
fwait
ret
mov
and
movups
loop
out
inc
or
jp
mov
jns
cmp
jl
lcall
adc
in
test
jge
outsl
fmull
popl
xor
sub
mov
ds
or
fs
ret
xchg
mov
scas
pop
sbb
mov
scas
out
push
mov
adc
pop
add
aam
or
pushf
dec
push
rorb
imul
lds
cs
shrb
mov
jecxz
pop
add
es
mov
xchg
sahf
call
jnp
sti
addr16
add
push
mov
sti
rolb
mov
jmp
sbb
lods
add
jmp
fstpl
fsubrs
adc
mov
mov
into
mov
jmp
sbb
dec
pop
mov
fwait
xchg
jmp
int
xor
or
mov
icebp
sub
fnstenv
add
jne
pop
out
js
jmp
movsb
inc
sbb
loopne
insl
mov
fiadds
push
and
sub
pop
xchg
bound
lea
repnz
pop
and
shlb
push
adc
scas
into
sbb
mov
out
icebp
mov
jno
out
or
sub
test
or
leave
mov
dec
fldenv
push
adc
mov
aam
adcb
test
jbe
dec
inc
insl
jecxz
or
pop
add
mov
adc
fwait
mov
mov
pop
imul
mov
cmp
lret
inc
mov
shl
xor
add
xor
pop
pop
sub
xchg
ret
inc
cltd
sbb
inc
out
ja
test
ljmp
xchg
fisttps
cmp
sti
mov
loope
push
mov
aas
pop
fs
xor
or
ds
sbb
pushf
arpl
fst
pop
push
stos
mov
scas
and
cmp
jae
loopne
or
mov
add
mov
rclb
xor
lret
jp
clc
jbe
pop
or
and
cli
cmp
jmp
sub
data16
loope
adc
in
mov
lcall
inc
leave
add
inc
mov
imul
in
cmc
popa
xor
imul
ljmp
inc
mov
mov
pop
je
mov
and
das
in
pop
sbb
test
das
adc
scas
cmp
add
lock
pop
fsubrs
push
popf
mov
repnz
and
js
and
lods
push
inc
xor
jecxz
test
adc
jge
xchg
out
mov
add
imul
lahf
pop
lods
lods
cmp
push
notb
xor
mov
rolb
push
ljmp
out
jp
xor
inc
in
hlt
nop
jle
xor
lock
sub
and
lods
jae
ja
mov
xchg
mov
rolb
adc
dec
jmp
hlt
fyl2xp1
dec
fistpll
fsubs
into
cmpsl
jge
outsl
add
sbb
add
jbe
dec
xchg
sbb
out
add
add
lods
or
jge
arpl
fisubs
xchg
mov
xlat
pop
int
cld
loopne
or
xchg
jno
xor
sar
fnstcw
hlt
test
loope
mov
cmp
clc
adc
gs
aad
icebp
add
push
adc
jo
shlb
and
mov
sub
lock
stos
jo
cwtl
sub
out
insb
lock
fisubrl
and
jg
ficomps
add
repnz
fisubl
xor
push
loope
or
mov
jbe
xchg
leave
int3
repz
fisubl
rclb
pop
cmp
pop
mov
out
pushf
nop
aad
rorb
add
pop
into
es
dec
mov
das
adc
cmp
outsb
jne
mov
test
movsb
cmp
sub
mov
test
xlat
ficoms
imull
add
imul
decl
push
push
xor
in
inc
adc
xchg
jmp
lea
push
add
sbbb
nop
lods
jae
jge
cmp
adc
stos
and
or
addb
xlat
add
mov
dec
pusha
sbb
fwait
out
mov
ss
movb
addr16
mov
aam
cmp
test
or
lea
test
std
in
xchg
popa
cmc
pop
clc
cmp
push
or
out
push
ljmp
push
push
mov
fidivs
aad
out
jmp
cli
inc
mov
and
lock
adc
xchg
mov
cmpsb
pop
lahf
ror
fwait
push
lods
repnz
orl
js
pop
repz
icebp
cmp
popf
mov
rcll
lret
sub
mov
aaa
jne
jno
jno
lcall
cmpsl
dec
repz
mov
lcall
lods
filds
sarb
test
int
mov
scas
ret
pop
jno
mov
mov
cltd
icebp
inc
xlat
inc
test
test
push
mov
das
cmp
lock
xor
out
and
cs
sbb
enter
std
jle
mov
shlb
ljmp
mov
addr16
adc
int
pop
fidivl
aaa
int3
cmc
push
xchg
or
push
jle
data16
rorl
loope
mov
xor
aaa
and
jo
cmpsb
subb
lret
punpckhbw
sub
mul
pop
gs
loopne
cmpsb
jmp
add
push
mov
sbb
andl
adc
rorb
movsl
les
pop
jbe
mov
mov
inc
push
idivl
and
push
lea
addl
xchg
inc
fnstsw
dec
pop
ss
push
ja
gs
push
icebp
dec
outsl
xor
sbb
in
pop
lret
xor
and
mov
adc
sub
pop
loopne
push
inc
fwait
enter
or
lret
es
fiaddl
or
and
push
add
aad
arpl
xchg
xchg
jne
and
fldcw
jmp
cld
jo
pop
add
fsts
mov
movsl
daa
xchg
mov
jno
and
add
or
inc
jle
sahf
pop
scas
jo
or
mov
cmp
imul
dec
mov
mov
std
mov
fs
fidivrs
or
mov
cwtl
pop
pop
sub
xor
loope
rolb
es
xlat
xor
xlat
daa
out
out
sub
div
push
xchg
sub
scas
data16
jbe
popl
nop
jecxz
aas
daa
mov
push
inc
mov
cmpsb
imul
sub
stos
sahf
sub
or
call
sub
jg
out
jle
xchg
dec
xor
sub
add
cltd
andb
push
dec
outsb
lock
fwait
jae
jbe
sbb
cwtl
xchg
cmp
xchg
cmp
xchg
fisubl
mov
cmc
sub
pop
arpl
pop
std
ret
rcll
mov
and
repz
out
ss
arpl
lods
scas
push
ror
dec
jbe
push
mov
mov
ffreep
arpl
push
mov
and
push
pop
dec
dec
mov
xor
xor
mov
cmc
xor
sahf
and
dec
inc
mov
insb
lods
test
fisubl
inc
inc
mov
inc
xor
push
pop
mov
call
scas
xor
dec
xchg
rcrb
ljmp
adc
or
je
test
xor
pop
cmpsb
stc
pop
xchg
aaa
push
xchg
mov
lcall
cwtl
xchg
xchg
sbb
dec
inc
sbb
pushf
enter
cli
icebp
lds
cmp
movsb
ret
ds
test
jmp
cli
mov
sahf
das
leave
inc
dec
sub
in
daa
scas
cmp
int3
stc
mov
test
pop
sbb
push
mov
xchg
xor
pop
jnp
sub
adc
cmp
scas
or
orb
cmc
cmp
loop
das
icebp
fcomps
ss
in
adc
andb
test
insb
push
pop
fcompp
inc
fstpt
xlat
pop
xchg
cmp
dec
mov
sub
mov
xor
or
cli
clc
mov
aas
sub
jmp
stc
push
sbb
xchg
ret
mov
mov
enter
and
sbb
jge
aad
pusha
loopnew
movsl
into
lret
xor
inc
adc
mov
mov
sbb
pop
nop
sbb
mov
jl
data16
pusha
add
dec
dec
popf
xchg
f2xm1
mov
mov
sub
or
mov
cli
scas
xchg
addr16
adc
lcall
push
and
pop
loope
adc
into
mov
mov
and
jb
push
mov
inc
cmp
pop
inc
mov
sub
sub
mov
and
jno
sbb
fwait
cmc
ds
jl
int3
mov
xchg
mov
dec
test
shll
nop
in
xchg
pop
xchg
mov
xchg
cmp
push
adc
cmp
and
movl
or
or
xchg
scas
fsub
orl
mov
add
jmp
movsb
fld
adc
xor
or
popa
sbb
enter
lret
push
ds
sbb
xchg
ror
fcomip
jp
fs
push
popa
ds
adc
and
and
gs
cmp
push
ficomps
cli
lcall
stc
mov
mov
and
dec
or
jne
mov
inc
fsubrl
lahf
push
fdivr
outsl
ds
mov
or
stos
add
lcall
outsb
pop
es
dec
out
leave
mov
pusha
aas
pop
and
jne
dec
push
test
test
add
outsl
adc
mov
pusha
or
test
int
push
xor
add
sbb
xchg
lods
push
xchg
popf
outsb
mov
xchg
mov
push
test
insl
rolb
add
xchg
fwait
jmp
and
jae
inc
or
addl
test
cmp
cmp
adc
fwait
lods
mov
cs
jecxz
push
movsb
xor
lret
repz
jle
enter
inc
adcl
jmp
dec
sub
cmp
xlat
dec
arpl
pop
stos
lcall
ss
dec
adc
mov
mov
adc
lods
adc
scas
jmp
add
jne
in
mov
dec
and
enter
push
mov
movsb
lcall
cltd
cmp
push
les
and
fisubs
pop
sbb
jg
sbb
movl
sbb
cltd
jo
rol
inc
sbb
pusha
mov
dec
dec
push
mov
fs
mov
xchg
arpl
pop
clc
pushf
jg
or
mov
jbe
in
std
xchg
sahf
jp
cltd
out
inc
and
jecxz
sub
in
fisttpll
or
in
jge
call
cmpsl
adc
pop
pop
add
jl
inc
hlt
adc
and
xor
cli
cmpsl
popf
xor
orb
mov
jge
negb
add
pop
inc
sbb
loopne
pop
xchg
push
sub
andl
xor
dec
stos
stos
mov
je
cmp
addl
jae
and
rorb
push
popa
outsb
dec
scas
xchg
inc
fisttpl
xor
inc
pop
jmp
pop
ds
push
lret
fisubrs
mov
idivl
lods
je
push
sub
popa
fadd
jge
sbb
int
or
pop
or
mov
sarb
rorl
xchg
or
lods
and
xchg
push
enter
bound
xor
mov
idivb
pop
daa
mov
mov
ret
xchg
daa
push
xchg
mov
push
cli
lods
dec
clc
lret
cmc
loop
push
rcrb
sub
jp
mov
cmpsb
enter
mov
jp
inc
loope
push
inc
mov
jnp
mov
mov
sub
pop
push
punpcklbw
stos
mov
mov
pushl
add
leave
cld
add
andb
imul
addl
shll
rol
push
xchg
or
cmpsb
dec
loope
xor
incb
sbb
add
mov
call
xchg
scas
cmp
rcrl
call
movsb
jmp
test
xor
test
and
jg
cmpsl
sti
ds
daa
icebp
cmp
je
mov
iretw
aad
fwait
mov
push
dec
scas
mov
cli
add
fbstp
in
clc
cmp
loope
push
sbb
jge
rorb
jo
adc
jge
mov
je
mov
aas
out
mov
add
mov
loop
xchg
and
sbb
aas
jae
pop
or
cmpsl
ljmp
add
jle
mov
cli
and
pop
mov
sub
jg
xor
ja
add
ljmp
cmp
or
jne
leave
pop
jle
pop
loopne
icebp
cltd
jnp
xchg
and
scas
test
daa
aaa
inc
dec
adc
pop
ljmp
mov
xor
pcmpeqw
lcall
ret
call
jbe
dec
into
cmpsl
or
cmp
bnd
in
testb
jmp
adc
cld
outsl
gs
mov
data16
xor
jne
mov
cmp
ja
out
ret
cwtl
mov
push
cmpb
in
loope
push
sar
sub
divb
push
sub
lret
cmpsl
push
jl
adc
pop
xor
cmp
hlt
out
jns
sbb
sti
mov
inc
int
sub
fimuls
mov
hlt
sbb
add
push
movsl
ret
add
into
xor
enter
mov
or
call
popa
aad
shl
cmp
into
enter
loopne
scas
aas
mov
or
push
rcrl
insl
jno
ret
cmp
jns
mov
adc
mov
bnd
lret
ss
inc
push
jg
lea
jb
inc
push
cmp
sub
sbb
dec
shrl
cmpl
subb
push
jb
in
dec
pop
mov
xchg
mov
movsl
aas
les
xor
jmp
subb
jne
dec
call
inc
sub
inc
push
imul
rcl
lahf
hlt
dec
pop
xchg
or
adc
mov
dec
lret
stc
dec
pop
stc
push
les
and
mov
fwait
xor
push
mov
aas
dec
fnstenv
jecxz
push
sbb
movswl
sbb
cli
cmp
mov
lods
or
jmp
sar
std
sbb
movsl
scas
inc
sub
adc
lds
sub
add
dec
mov
arpl
mov
mov
nop
cli
dec
popf
mov
or
add
mov
ret
fdivs
jb
push
jb
or
jp
hlt
dec
push
cmp
stos
jl
xor
test
jp
fsub
sbb
cmpl
and
jg
in
out
xchg
test
out
les
cltd
in
pop
lds
fdivl
fwait
mov
fsubrs
cmp
repnz
sbb
jo
pop
cld
ljmp
and
sbb
or
icebp
fsubrl
or
sub
roll
test
sbb
sub
mov
aad
aas
jnp
mov
notl
ja
pop
push
int3
ficompl
in
sbb
movsb
aaa
xor
xchg
xchg
scas
loop
add
push
fistpll
test
addb
scas
mov
and
mov
push
divl
or
aaa
jo
test
or
mov
xor
and
dec
jge
lock
adc
sti
test
movsl
js
adc
xchg
mov
push
sbb
jae
lret
add
jp
movsb
cmp
insl
pop
mov
cmp
fs
out
pop
push
lcall
mov
int3
cmc
stos
pop
pop
out
mov
or
add
cmp
xchg
das
clc
and
andb
xorl
rorl
loop
jecxz
mov
dec
cmp
fcmovnb
add
cld
dec
push
fldcw
dec
dec
and
xchg
push
call
cmp
lods
daa
mov
iret
dec
aaa
dec
mov
push
fbld
scas
mov
push
mov
dec
pop
lds
dec
mov
xchg
cltd
int3
outsl
jp
cmp
dec
gs
lret
xchg
mov
ljmp
mov
arpl
aad
mov
push
div
mov
push
pushf
pop
add
add
cmc
and
je
fimull
add
adc
lahf
and
mov
or
cld
cli
xchg
lahf
mov
outsb
adc
sub
andb
xchg
pusha
bound
data16
shll
fdivs
scas
cmp
push
inc
push
mov
das
int
mov
pop
xor
test
fs
add
inc
les
push
lock
sahf
adc
xchg
pop
cmp
sbb
cmp
adc
jg
jns
fldl
lds
out
xor
lcall
stos
and
fsubr
in
xor
out
pop
and
aas
add
ficoms
pusha
cmp
in
les
loop
loope
stos
jo
mov
dec
cli
pop
cmp
pop
jns
push
lods
mov
daa
pop
mov
fmul
js
xchg
jns
or
push
je
je
loopne
mov
ja
sub
stos
xor
add
out
test
inc
jns
mov
sbb
mov
fnstenv
jge
aam
leave
fsubr
jle
hlt
sub
outsb
js
test
cmp
push
clc
mov
jge
cs
xor
jmp
push
ljmp
mov
pop
orb
sbb
test
lahf
imul
pop
divl
jo
inc
pop
sub
push
iret
aam
pop
imul
pop
pop
sahf
xor
push
rorl
inc
insb
in
loope
add
imul
pop
ss
pop
ret
rorb
dec
jecxz
mov
inc
jno
out
xor
stos
rclb
xor
xor
push
fisubs
imul
jmp
xchg
cmp
push
jmp
or
psrad
inc
imul
mov
jmp
movsb
pop
aad
int
mov
das
push
call
and
int
adc
or
sub
add
sbb
xchg
nopl
jne
fadds
sahf
sub
imul
pushf
add
xor
stos
leave
fcoms
sub
sub
pop
sub
mov
mov
mov
mov
jl
pop
mov
mov
scas
jb
xchg
cmp
adc
lret
mov
and
fsubr
comiss
mov
arpl
rol
outsb
xchg
xor
mov
sbb
pusha
push
insb
add
cmp
mov
dec
and
xchg
pop
js
push
ss
add
decl
push
pop
stos
or
aad
xchg
jmp
mov
cmc
outsb
jbe
mov
push
xchg
sbb
mov
insb
stos
mov
sbb
ficoms
pop
scas
adc
ljmp
fwait
iret
xchg
mov
bound
cmpsl
testb
mov
mov
sbb
ret
mov
scas
xchg
push
sbb
adc
sti
lods
fisubl
or
dec
es
sbbb
add
inc
mov
outsb
popa
int
push
jle
xor
arpl
xchg
xor
shll
xor
pop
and
scas
push
sbb
push
mov
push
pop
inc
adc
lret
mov
pop
inc
cmp
and
stos
dec
outsb
jnp
shll
jge
aad
dec
adc
push
or
leave
push
arpl
sti
stos
or
loope
xchg
and
clc
mov
dec
adc
sbb
pop
rolb
into
jns
mov
daa
pop
push
bound
cld
push
push
fwait
gs
and
sti
ret
in
adc
aam
iret
sbb
mov
fbld
cmpsl
push
rolb
add
and
add
mov
outsb
fwait
pusha
lea
je
cmp
sbb
pop
push
sbb
mov
out
xchg
cmp
mov
inc
test
loope
rolb
push
call
ja
mov
adc
cmc
sarb
pop
mov
pop
sub
cmp
lods
mov
mov
mov
fiaddl
insl
das
aas
subl
lcall
out
mov
xor
xchg
repz
ds
addb
movsl
jg
ljmp
cltd
xlat
es
enter
scas
jmp
popa
outsl
shl
fstpl
mov
lock
lods
popa
daa
mov
cmp
loop
lods
xchg
lret
dec
imul
xchg
cmpsb
scas
mov
cmp
test
fiaddl
daa
notl
mov
pusha
test
jg
adc
adc
inc
lea
aas
cmpsb
and
inc
data16
xor
fs
sbb
xchg
mov
ja
dec
lods
dec
fwait
addr16
push
je
or
cmc
cmp
mov
or
ret
into
jmp
pop
inc
xchg
cmp
xlat
lret
push
mov
push
les
cli
outsl
add
push
pop
daa
xchg
pushf
pop
jns
sbb
stos
rclb
movsl
out
add
jmp
inc
jmp
mov
roll
inc
ficompl
adc
addr16
xchg
mov
or
or
mov
sbb
pop
iret
gs
subl
jne
shrb
pushl
mov
sub
push
arpl
or
lret
rcll
clc
push
add
insb
mov
in
fs
stos
xor
lahf
push
aad
dec
pop
pop
or
mov
mov
add
jbe
lret
dec
push
dec
mov
in
sarl
dec
cmp
pop
cmpsl
and
mov
pop
dec
and
jg
xchg
out
mov
test
push
lret
or
ret
loope
xor
cltd
cmp
aaa
jge
jbe
pop
leave
sbb
vpshld
fs
mov
lock
sbb
test
fadds
jmp
jl
mov
cmpsb
arpl
jg
push
andl
inc
and
dec
pop
mov
outsb
les
push
pop
pop
mov
push
rorl
lahf
sbb
pop
in
sbb
mov
push
nop
jmp
inc
iret
jo
dec
sub
mov
addr16
inc
sub
icebp
adc
pusha
lret
repnz
movsb
mov
in
in
inc
js
mov
mov
popa
popf
xchg
fstpt
nop
test
and
jnp
or
leave
out
mov
ja
adc
jnp
adcl
sbb
and
test
lods
push
push
repnz
jne
mov
xor
mov
aad
ficomps
sbb
pop
std
pop
pop
arpl
ret
in
fadd
stos
push
inc
pop
loopne
lods
scas
mov
dec
inc
ss
xorl
mov
adc
xchg
push
mov
cwtl
cmc
mov
fst
ljmp
mov
push
inc
xchg
ret
in
std
inc
rorl
stos
in
mov
addr16
mov
sahf
adc
psubusw
pop
mov
xchg
sbb
mov
sbb
loop
stc
out
xchg
pushf
mov
mov
loopne
shll
daa
inc
inc
int
int3
inc
xor
xor
test
dec
addr16
paddq
rcrb
cmpsl
xor
loopne
mov
and
inc
adc
pop
adc
adc
out
mov
scas
aam
addr16
js
jno
jb
jne
cld
inc
add
sbb
in
jl
dec
lods
push
xor
xor
xchg
lret
scas
repz
dec
mov
mov
xchg
push
mov
je
outsl
aad
lea
cltd
push
lahf
roll
xchg
repnz
xchg
ja
in
jecxz
inc
dec
loope
insl
enter
mov
stc
test
fwait
sahf
ja
push
dec
movaps
mov
ret
jnp
cli
and
mov
dec
mov
dec
pusha
inc
jp
inc
out
xchg
lods
ffree
adc
inc
ja
jb
jns
jo
sbb
daa
cmpsl
lret
ja
mov
loop
loop
or
xor
ja
jnp
adc
das
rolb
jb
push
imull
push
sub
stos
js
scas
xor
aad
jg
inc
xor
mov
xchg
mov
out
fimull
mov
popf
arpl
pop
sbb
mov
faddp
rolb
fisttps
cmp
cmpsl
pushf
adc
ret
mov
sbb
pop
jle
xor
jmp
jge
std
xchg
insb
out
scas
xchg
mov
imul
movsb
or
inc
ret
out
xor
mov
insl
test
mov
lea
cwtl
outsl
stc
sbb
pop
cmp
fwait
loopne
out
jmp
push
std
ja
cli
or
std
lock
testb
jg
fcom
outsl
pop
pop
fwait
dec
push
add
leave
jae
push
movsb
mov
ds
icebp
jmp
cli
dec
or
sub
ret
sub
dec
ret
gs
sub
add
jb
mov
fidivs
dec
test
or
adc
stc
cs
rcll
push
imul
pop
sahf
lds
iret
int
insl
xor
jl
movsl
hlt
add
adc
ficoms
aaa
sbb
popf
xchg
mov
mov
addr16
cmp
scas
add
or
ret
mov
xchg
cmpsl
jle
jle
rorl
stc
lahf
idivb
lds
mov
dec
sub
sbb
lods
dec
mov
xchg
cmp
fimuls
cltd
lods
fnstsw
push
mov
cmp
xorl
adc
cmc
ja
mov
push
pop
sti
inc
mov
xchg
aad
testb
stos
outsl
sbb
int
pop
outsl
mov
repnz
push
out
leave
jg
aad
sub
cmp
mov
test
jecxz
iret
push
insl
stos
cmp
jecxz
cwtl
adc
test
mov
xchg
adc
mov
into
int3
pusha
mov
sbb
in
sbb
repz
and
jl
push
sti
insb
sahf
testl
adc
sub
jno
bound
mov
inc
fsubr
mov
dec
mov
aas
imul
push
shlb
xchg
in
out
or
inc
out
es
test
jne
cmp
pop
mov
call
adc
sbb
gs
push
xlat
push
adc
inc
vmread
es
loop
fs
pushf
or
xchg
popf
cmp
scas
gs
sbb
cli
aam
pop
in
repz
adc
or
add
aam
jg
and
sub
xchg
pop
jge
gs
mov
lcall
das
sub
mov
mov
push
dec
test
pop
jns
dec
into
push
add
cmp
ret
popf
jnp
sahf
popa
dec
jnp
cmp
cmp
dec
xor
loope
out
js
cmp
out
xor
xchg
jae
movl
pusha
sub
faddp
shlb
faddp
rorb
leave
insl
sbb
movsb
xor
mov
xor
aas
ljmp
dec
das
mov
xor
push
daa
lea
push
fcomps
ss
xchg
or
mov
fnstenv
popf
or
and
rolb
lds
dec
test
xor
mov
xchg
xor
inc
xchg
jge
test
scas
lds
sbb
xor
stos
fiadds
pop
mov
nop
cmp
lmsw
jnp
pop
and
or
movsb
jno
and
mov
fidivl
dec
movsb
mov
push
push
mov
or
imul
sub
mov
insl
fstps
jne
lods
xchg
faddl
xchg
mov
cmp
sub
push
mov
popf
scas
aaa
mov
or
inc
sbb
scas
mov
ret
hlt
push
adc
fadd
jl
loopne
jle
xor
leave
enter
push
call
xchg
push
xor
inc
sti
out
or
jp
dec
call
inc
shlb
or
popa
iret
mov
and
cmp
movsl
stos
loope
ret
movsl
add
aad
imul
lock
cmp
imul
lea
inc
and
mov
sub
out
cmp
mov
push
mov
test
push
aaa
pusha
dec
jae
adc
das
sbb
out
mov
ljmp
mov
stos
jp
and
push
pop
push
add
loop
ss
jne
adc
stos
scas
pop
outsb
mov
adc
adc
pop
movsl
inc
addr16
xchg
repz
push
jne
lea
cmpl
jg
jmp
push
rorb
pop
pusha
cmp
sub
sub
jge
aaa
sbb
adc
notl
pop
test
lcall
or
jp
out
jle
sbb
imul
mov
mov
fcompl
pop
push
call
inc
xchg
adc
mov
loop
xor
xchg
jnp
mov
sti
jmp
cltd
jae
inc
stc
pushf
sbb
push
xchg
mov
or
lahf
push
sub
test
rolb
data16
push
lods
dec
lods
mov
daa
mov
mov
jge
sbb
mov
jecxz
dec
iret
sbb
or
test
out
mov
loope
xchg
and
enter
push
stc
mov
lods
ljmp
rcll
push
inc
popf
mov
lret
sub
negl
inc
push
or
nop
xor
cli
lods
sub
dec
cmc
imul
lods
pusha
mov
or
sub
sbb
cmp
pop
daa
mov
loope
jl
ficoms
js
sbb
stos
jg
add
cmpsl
and
or
sub
mov
mov
dec
sub
pop
out
dec
adc
mov
add
lds
in
xchg
iret
dec
testl
fsubr
les
imul
xchg
std
xorl
mov
and
aaa
and
xchg
dec
mov
xchg
mov
jp
xchg
in
insb
ss
adc
jg
cmp
bound
lret
and
or
add
add
add
js
lock
pushl
pop
cmp
pushf
aam
pusha
das
jnp
loope
mov
out
dec
lcall
cmpsb
sub
emms
sbb
jb
clc
in
add
in
test
add
sbb
sbb
in
add
out
jnp
jmp
ret
cmp
push
jnp
cmp
mov
imull
out
imul
lods
inc
xor
fadd
and
cmpsb
xchg
and
jo
push
cmp
mov
inc
jmp
fnstcw
cmc
cmpsl
insl
cmp
pop
push
pushf
cmpsl
jg
mov
and
pop
and
ret
les
popa
icebp
pushf
cltd
or
lock
mov
sub
jl
cmpb
pop
es
xchg
fisttpll
popf
push
sbb
pushf
inc
fstpt
cmc
nop
cmpsl
and
dec
test
js
xchg
or
dec
std
pop
jmp
mov
or
xchg
mov
mov
aaa
mov
ss
daa
std
xor
movl
sbb
mov
out
xor
ret
add
gs
mov
xchg
jb
mov
ds
fcmovb
pop
dec
jp
fwait
push
out
dec
push
adc
xor
mov
dec
mov
incl
sub
jno
loopne
loope
cs
push
adc
lock
in
stc
jmp
hlt
fisttpll
add
jne
mov
in
cmp
adc
fxch
js
mov
add
cmp
nop
jno
loope
push
and
in
inc
push
jae
sbb
into
and
adc
pop
pop
jg
in
sbb
lods
jp
stos
push
imul
push
and
cwtl
out
iret
pushf
outsl
jmp
sub
add
dec
cmpsb
out
mov
cltd
inc
insb
jge
aad
out
movsb
into
in
jnp
loopne
andb
xor
mov
push
into
or
outsl
push
divl
ljmp
call
fsubrs
clc
jne
out
add
mov
jns
dec
mov
jne
cmpsb
sbbb
dec
jae
xor
loope
dec
cs
ja
dec
cmp
ficompl
pop
sti
mov
xlat
js
ja
xor
jbe
std
xchg
adc
jno
fsubrl
xchg
and
ror
daa
movsl
das
push
cld
mov
cltd
and
sbb
dec
add
cmp
out
pusha
stos
leave
pop
adc
sub
fwait
add
mov
xchg
sub
xor
testl
or
cmp
push
and
push
cmpl
push
adc
movsl
mov
xor
dec
add
ret
addr16
push
aaa
cmpsb
loopne
int3
arpl
stos
call
call
movb
aam
ljmp
inc
xlat
cmpsb
dec
insb
sbb
xchg
mov
imul
iret
popa
jb
sub
rcrb
mov
movsl
push
out
cwtl
sub
hlt
mov
int
xchg
xor
cmp
inc
inc
pop
xchg
adc
stc
inc
imul
dec
icebp
jp
lds
in
inc
push
rcrl
inc
push
js
or
aam
out
ss
dec
push
mov
or
xlat
fwait
into
sbb
movsl
pop
adc
sub
cmpsl
push
les
xorps
das
jge
push
lds
push
or
jecxz
cld
rorb
movsb
cli
ret
adc
popl
push
test
dec
imul
call
mov
aas
test
push
dec
xor
mov
mov
push
scas
push
stos
jne
je
fsubrs
nop
imul
or
fdivrp
ds
xchg
mov
jns
cmp
pop
pop
ret
pop
int
call
lahf
xor
jae
xchg
dec
pop
push
out
sbb
ljmp
lds
cld
sub
in
pop
les
ficoml
das
push
out
scas
mov
outsb
imul
adc
in
add
jnp
repnz
repnz
test
push
out
mov
outsb
sub
ljmp
and
ret
or
or
inc
dec
fstpt
test
sbb
scas
push
bound
js
inc
into
fistpl
xchg
rorb
sbb
loopne
jnp
je
and
sub
mov
arpl
test
sbb
cmpsb
jo
rol
adc
cmp
mov
cmp
ja
leave
insb
and
xchg
int3
cmpsl
sub
xor
test
icebp
jne
mov
pushf
xchg
mov
mov
inc
mov
pop
arpl
pop
pop
pop
les
mov
aad
mov
inc
inc
mov
mov
sub
xlat
pop
aad
cltd
sahf
ljmp
js
shrl
mov
jl
mov
dec
jp
mov
inc
inc
cmp
imul
scas
inc
packsswb
adcl
fisubl
jbe
into
popa
push
mov
add
loopne
aad
xor
and
int
mov
jno
stc
dec
jp
mov
ret
addl
mov
push
jl
pop
and
fbld
sub
sarb
and
jp
repz
imul
test
pop
sbb
mov
dec
and
sub
cmpsl
ficoml
aam
inc
and
xchg
xchg
add
sbb
xor
mov
in
adc
sub
test
sbb
cli
std
dec
xor
dec
aam
mov
dec
pop
lret
sbb
push
xor
dec
addr16
push
pusha
dec
push
and
push
incl
mov
cltd
xchg
push
lret
mov
scas
aaa
adc
loopne
out
in
ja
mov
jecxz
ds
cmp
pop
or
test
ret
inc
inc
inc
xor
jg
inc
add
test
mov
xchg
add
fcoml
insb
lods
inc
adc
mov
push
adc
adc
mov
mov
cmpsb
xlat
xchg
neg
cmpsl
stos
mov
jmp
in
pushf
je
dec
cltd
scas
ss
clc
cmp
inc
push
test
clc
mov
aas
arpl
add
mov
lds
test
and
jp
test
mov
jo
cld
icebp
adc
pop
fcomps
adc
inc
add
aas
push
xor
pop
mov
stos
xor
xchg
jl
clc
jle
loop
stos
push
sub
cmpb
cmp
mov
mov
fdivrl
sarb
mov
mov
loopne
rclb
dec
mov
xor
insb
pushf
mov
dec
jge
inc
or
cmpsb
stos
jmp
movsb
or
mov
lcall
dec
data16
inc
sbb
clc
and
mov
test
fstpl
dec
pusha
in
icebp
mov
in
pushf
mov
mov
into
push
sbb
lcall
jmp
inc
mov
xchg
xor
int3
xor
sahf
sub
divb
repnz
dec
sub
shll
cld
hlt
dec
jne
add
lods
adc
add
push
lods
adc
xchg
lods
inc
mov
nop
and
cmp
outsl
stos
or
lret
out
insb
mov
fstl
out
cmp
jns
mov
mov
nop
insb
add
repz
xor
inc
lock
stos
cltd
lea
aas
fisttpll
in
addr16
cmc
xor
mov
icebp
lcall
mov
push
js
pop
adc
dec
js
sahf
ds
pop
inc
xchg
or
or
mov
fimull
popf
dec
cwtl
ljmp
mov
add
lahf
jl
insl
sub
push
push
bound
ret
iret
mov
cs
mov
jae
leave
and
imul
cli
and
xor
loope
xchg
in
or
test
xor
push
hlt
aaa
js
adc
xchg
dec
imulb
mov
pop
mov
imul
mov
daa
outsb
out
gs
add
in
cltd
cwtl
and
dec
mov
in
out
mov
lds
jl
xchg
sbbl
lahf
pop
fdivl
and
inc
lahf
inc
push
leave
sbb
dec
inc
int3
pop
pop
movsl
out
pop
imul
jmp
lcall
push
and
imulb
cli
add
into
push
inc
push
ljmp
test
dec
xchg
addr16
cmp
or
sbb
jmp
fsubs
jns
out
pushf
mov
and
repnz
cmp
pop
dec
int3
popf
and
jbe
pop
rol
in
into
xchg
dec
stos
aam
fisubs
outsb
in
insb
pop
xchg
movsl
pushf
push
and
push
fdivrs
push
fistps
out
lds
jge
mov
incl
mov
data16
mov
jns
mov
out
mov
push
mov
orb
std
xor
jge
jecxz
in
mov
cmp
push
push
xchg
dec
xchg
mov
popf
or
ficomps
stos
xchg
mov
js
popf
sbbl
jle
iret
sbb
dec
cmp
adc
and
icebp
inc
push
mov
dec
lock
mov
xchg
les
jmp
inc
xor
inc
in
popf
push
nop
incl
repnz
sub
jecxz
push
lods
mov
mov
dec
repz
aad
or
add
pop
sub
dec
movsl
enter
xchg
cmp
adc
jae
adc
int3
fidivs
or
push
mov
scas
add
and
fcomi
dec
icebp
cmp
outsl
dec
bnd
mov
sub
jmp
shl
in
push
sbb
ret
and
mov
pop
sub
insl
movsb
cmp
or
test
and
lcall
sub
jmp
js
int
mov
repnz
xchg
sbb
and
push
xchg
outsb
push
sub
mov
sbb
pushf
stos
jmp
jp
mov
scas
xor
clc
pusha
movsb
pop
xor
push
cmc
mov
mov
mov
push
aam
por
in
xor
lods
movsb
cmp
lcall
aas
adc
das
jo
out
xor
sub
bound
mov
or
out
popf
sbb
adc
lods
xlat
mov
test
or
test
mov
addl
cmp
fldenv
pop
in
dec
into
push
sub
out
dec
mov
ljmp
ret
outsl
cmpl
in
lds
jmp
jge
or
stc
scas
mov
sbb
aam
callw
arpl
sub
iret
mov
out
test
rcrl
dec
cmpsb
pop
or
inc
outsl
in
cmp
repnz
lods
push
inc
and
ss
xor
jnp
add
les
xchg
sub
stos
jno
imul
bound
lds
aaa
bound
jmp
aaa
std
aam
pop
jae
je
push
mov
dec
aad
sbb
xchg
mov
push
dec
pushf
inc
lock
xor
sbb
mov
pushf
cwtl
popa
filds
lds
xchg
and
sarb
mov
and
ds
adc
in
adc
inc
and
cmp
sarb
push
out
dec
xor
fistps
mov
or
lret
ljmp
push
xchg
imul
pop
xchg
lods
or
xor
jbe
mov
cmc
pop
jb
sahf
mov
addb
add
imulb
push
fmulp
add
ja
push
mov
xchg
pusha
clc
dec
std
jecxz
test
cmp
mov
imul
fnsave
ret
pushf
in
js
mov
arpl
cmp
jecxz
popf
xlat
xchg
jp
call
pop
test
jo
fstpl
pushf
lret
jecxz
push
cmp
push
cmp
mov
fdivrs
and
insb
fdivrl
je
xchg
push
pop
lds
jl
fildll
push
inc
push
adc
lds
das
push
pusha
adc
push
std
xchg
into
sarl
sub
push
cmp
shlb
lret
popf
lods
mov
push
mov
iret
mov
dec
cmpsl
pop
push
lret
out
clc
push
insb
jb
add
xchg
adc
ret
mov
cmp
in
cltd
inc
mov
sub
cmp
sub
cmp
je
push
add
xchg
aad
adc
pop
mov
stos
fcmovnb
addr16
lcall
xor
sahf
data16
push
xchg
adc
pop
jmp
ret
xchg
jle
inc
int
dec
cmp
xor
and
daa
movsb
sbb
in
inc
xor
xor
imul
sbb
inc
mov
fisttpl
dec
mov
repnz
ret
xchg
or
outsl
jae
mov
dec
aaa
sub
and
adc
add
stc
xor
inc
xchg
clc
fwait
aam
mov
les
rcr
and
pop
jns
push
pop
mov
je
lcall
cmpsl
incb
loop
sub
mov
fsubl
pop
and
inc
movsb
subl
ljmp
mov
adc
ljmp
loope
aam
das
or
and
jmp
iret
scas
sub
pop
sub
cmp
mov
xor
sahf
in
ficoml
xchg
lods
and
rclb
icebp
dec
push
mov
mov
repz
je
jo
call
cmpsl
pop
pop
jb
adc
fisttpll
add
outsl
dec
outsb
out
fisubrl
iret
fbld
push
lea
mov
cmp
sbb
lods
mov
jmp
cltd
dec
push
test
mov
push
xor
outsl
push
mov
in
push
aaa
imul
or
ret
pusha
jmp
jo
out
aad
cltd
sbb
xor
add
stos
pop
ret
orps
fstpl
pop
stos
xchg
sub
xor
xor
andl
decl
sahf
faddl
sub
inc
xchg
mov
fwait
cmp
repz
fucom
fwait
cli
popf
rolb
push
mov
push
out
addr16
mov
arpl
adc
add
std
fbld
frstor
add
js
loop
sbbb
mov
popa
jo
sub
orl
mov
or
scas
popa
aas
add
inc
outsl
xchg
and
cli
xor
push
sbb
lea
mov
xor
orl
popa
pusha
aad
fdivrl
sub
call
pushw
and
mov
mov
sbb
mov
loope
shll
dec
pop
sarb
mul
lock
mov
add
mov
leave
xchg
outsb
mov
push
out
lahf
std
decl
mov
jae
fsubrl
in
sub
add
or
xlat
fcoms
aaa
out
sub
mov
mov
pop
lret
dec
and
mov
cwtl
mov
fstps
dec
loop
arpl
pcmpgtb
xchg
cs
ret
mov
ljmp
arpl
cmp
cmp
pop
outsb
movsb
div
addb
sbb
and
movsb
es
jo
sbb
icebp
mov
outsb
add
pop
ret
cs
xchg
cmpsb
test
jo
pop
mov
in
or
in
fcoml
les
incl
pop
pop
les
notb
inc
mov
xor
mov
push
popa
pop
push
xchg
ds
les
dec
jns
push
out
xor
aam
sbb
fsubrl
incb
jno
mov
and
xor
sbbb
daa
pop
and
sbb
dec
inc
push
movsb
inc
jo
or
cli
sbb
outsb
cmpsb
sbb
jbe
lds
jmp
arpl
cmp
pop
cmp
lret
inc
push
cwtl
pop
and
adc
cmp
ds
pop
pop
inc
and
push
push
bound
cmp
xor
xchg
or
inc
push
mov
push
and
push
fidivl
jg
inc
shrb
out
int
cmp
mov
scas
sub
lret
aaa
clc
leave
dec
xor
sbb
sbb
mov
sbb
ret
add
pop
dec
mov
neg
lock
cmp
outsl
mov
mov
mov
aad
xchg
lcall
je
pop
push
seto
lea
xor
scas
mov
cmp
cmp
jmp
mov
out
dec
leave
mov
mov
and
push
std
inc
xor
ss
jno
fwait
sub
mov
jne
cmp
lea
adc
or
mov
mov
enter
jne
inc
jle
pop
inc
leave
gs
aam
sub
mov
jae
mov
mov
div
ficompl
movsb
xchg
pop
push
mov
push
testb
or
cmpsb
dec
and
cmpsb
fsubrp
std
dec
or
stos
push
in
jmp
push
popa
dec
xchg
adc
stc
push
sbb
sbb
fstps
fstpl
xchg
cmp
mov
jns
push
faddp
push
inc
jne
testb
and
xor
cli
push
aaa
sbbl
imul
nop
fwait
icebp
loope
dec
aas
shrl
clc
jge
testb
or
pop
cwtl
and
sub
sbb
push
xlat
out
xchg
je
int3
scas
mov
lds
pop
enter
xor
mov
dec
daa
mov
push
mov
adcl
outsb
cmpsl
jae
pop
inc
xchg
shll
out
sub
jmp
jl
mov
xchg
fs
lret
mov
mov
pop
outsb
jbe
mov
ja
nop
iret
cmp
lods
movsb
inc
sub
insl
shlb
xlat
jbe
fbstp
sub
insb
xchg
pop
push
pop
push
int
mov
jbe
inc
cs
jnp
shrl
cmp
add
mov
aad
fcom
dec
imul
push
in
sub
aam
cltd
add
ffreep
fisubs
mov
fistpll
aad
adc
gs
cmc
aaa
cmp
adc
das
adc
mov
lock
hlt
icebp
push
enter
or
add
adc
xchg
jg
cmc
pusha
daa
loope
das
sbb
mov
addr16
xor
pop
inc
loope
lds
dec
out
out
lock
fisubl
iret
icebp
mov
mov
or
fildl
add
imul
nop
aas
rcll
dec
int
mov
inc
add
xchg
cmp
cmpsl
jmp
popf
jbe
dec
mov
pmuludq
cs
mov
push
pop
inc
sub
outsl
cmp
dec
das
stos
dec
mov
cli
xchg
ds
add
inc
xor
dec
sbb
aam
mov
inc
xor
pushf
add
addr16
div
jns
inc
push
pop
js
sub
xchg
lods
dec
mov
push
test
pop
das
inc
jno
js
popf
sbb
jo
call
jbe
repz
dec
call
mov
les
lods
adc
mov
push
mov
pop
bt
cs
arpl
add
xlat
mov
jae
lods
cmp
enter
fs
aas
shll
mov
mov
movsl
mov
or
dec
add
pop
loope
jmp
xchg
add
rolb
js
imul
scas
inc
push
aaa
xchg
lret
cltd
les
bound
cmp
sarl
test
sbb
out
pushl
and
and
mov
and
and
ret
cmp
movsl
mov
pop
dec
inc
cltd
sbb
xor
scas
or
testl
gs
ja
das
jae
sarb
rorl
adc
cs
cmp
loop
mov
je
aad
scas
std
cltd
shlb
mov
test
testb
xor
fisttps
xlat
sub
imul
sub
cwtl
push
aam
jb
jnp
push
push
sbb
jge
hlt
mov
js
inc
popf
fcmovne
sub
mov
inc
mov
xlat
sub
mov
call
mov
cmp
roll
and
push
push
add
ret
mov
pop
mov
pop
adc
sarb
mov
ss
push
jb
fistpll
jns
inc
jne
inc
jg
hlt
jmp
xchg
pop
pop
jbe
mov
es
repnz
in
jl
lods
call
jmp
aam
outsb
ja
out
faddl
cmpsb
les
inc
bswap
cs
popf
js
popf
dec
pop
stos
or
test
sbbb
push
iret
fs
or
scas
nop
rcll
rorb
jbe
imulb
in
mov
lea
sar
xor
mov
push
mov
add
push
xchg
mov
std
push
daa
fcmove
stos
test
stc
popf
lret
shlb
mov
in
sbb
gs
xor
sbb
mov
outsb
cld
xchg
jbe
push
mov
xchg
aas
jo
sahf
ss
mov
xchg
xchg
ljmp
ret
xchg
testb
adc
pop
pop
aas
idivl
dec
movsb
mov
push
hlt
push
mov
mov
mov
popa
xchg
pop
dec
inc
adc
out
add
jns
xor
mov
shlb
kxorw
and
inc
xchg
adc
bound
pop
scas
xchg
mov
dec
popa
and
push
cmp
and
enter
sahf
inc
mov
rep
xor
pop
adc
cmp
cmp
xor
jo
pop
inc
pop
inc
xchg
inc
and
or
xlat
ds
movsl
outsl
mov
stos
dec
shl
into
xchg
enter
add
ds
fistpl
sub
dec
cld
or
sub
adc
xchg
leave
loop
das
cmp
xor
aad
outsb
pop
or
xor
xchg
daa
imulb
aad
bound
sub
cmp
in
ret
mov
push
clc
mov
push
pop
push
pop
pop
test
pop
fidivs
sbb
xchg
jno
or
std
icebp
jb
cmp
mulb
mov
xchg
sbb
pop
fprem
mov
and
loopne
push
mov
mov
mov
jp
bound
jle
cmc
cltd
adc
mov
repz
xchg
pop
xchg
cld
in
mov
loopne
cltd
pop
mov
or
push
movsl
rcll
divl
cwtl
inc
stc
or
orl
inc
insl
xor
lahf
ret
inc
pop
push
bnd
sub
jp
add
fidivs
mov
inc
pop
push
push
and
lds
subb
cmc
shll
mov
addr16
call
fwait
popa
mov
xchg
mov
pop
and
mov
lea
cmpb
pop
push
jb
or
popf
adc
jns
in
xchg
aam
lret
outsb
and
jne
nop
push
dec
test
jg
lret
jle
pop
xchg
mov
xor
iret
jbe
jg
push
pop
mov
sbb
insb
test
inc
pop
lods
push
out
cmc
nop
or
out
inc
or
xchg
mov
add
shl
hlt
lock
or
mov
int
dec
lret
insb
dec
xchg
mov
sub
and
int
jg
cmp
jp
cld
test
in
inc
dec
movsb
pop
lret
xchg
inc
push
pusha
sub
nop
jmp
sub
sub
lcall
cmp
ret
xlat
rcrb
xlat
aam
inc
cs
jno
lods
mov
push
rclb
sti
fwait
adc
mov
aaa
inc
int3
inc
sub
sub
cmp
cltd
lods
addr16
jg
jne
adc
test
aad
or
popa
sbb
clc
inc
sub
mov
repz
jb
cmp
movsb
add
mov
mov
test
mov
mov
into
inc
divl
push
mov
les
mov
xor
movsl
frstor
out
inc
add
es
dec
push
inc
mov
scas
and
xchg
fistl
into
je
es
mov
mov
cld
cs
out
outsb
push
jge
packssdw
lods
mov
pushf
lods
mov
test
loopne
das
pop
cli
les
outsl
sbb
mov
out
fsub
cwtl
push
ror
dec
and
hlt
push
fprem1
fisubs
xchg
loope
adc
mov
cs
jge
nop
fidivrs
mov
arpl
idivl
es
mov
orb
pop
out
jl
insl
sub
fistpll
inc
pop
add
out
out
dec
pop
std
rcl
mov
sub
jg
mov
pop
jecxz
out
fidivrl
dec
mov
jae
fildll
sti
icebp
pop
pop
dec
add
iret
adc
mov
inc
xor
lock
test
pop
push
add
mov
pop
fdivrl
movb
adc
sbb
xor
sti
sahf
movsb
sub
or
ret
mov
les
es
aam
mov
xchg
pushf
jb
mov
push
int
cmpsl
cmp
push
push
dec
push
mov
dec
into
neg
push
sub
pop
xorb
xchg
popa
lock
out
data16
jl
lds
lret
sbb
das
dec
imulb
or
xchg
in
inc
mov
test
out
js
xchg
and
mov
inc
stc
fs
jp
lods
popa
inc
out
testl
add
and
data16
rol
sub
dec
ret
lock
fisubrl
popf
es
cli
adc
in
cltd
hlt
jno
mov
lods
push
ficomps
clc
insb
out
gs
dec
in
fcmovnbe
mov
dec
lods
xchg
je
lea
add
dec
sub
in
rclb
cmp
xchg
jmp
push
push
das
jl
adc
lods
inc
or
cmpb
pop
xchg
addr16
sbb
jp
sbb
push
cmp
sub
push
inc
cld
iret
jne
ja
cmp
pop
scas
push
xchg
xor
cmp
dec
iret
and
or
mov
fcmovne
pop
mov
jne
repz
push
jnp
repnz
lcall
pop
sbb
mov
xchg
sub
mov
and
test
stc
push
fistpl
jno
and
je
and
add
stc
ja
in
mov
mov
adc
push
dec
scas
mov
lea
fldt
add
xor
cmp
sbb
push
add
std
loop
jne
imul
pop
stos
pop
les
pop
mulb
pushf
sbb
adc
push
inc
lods
jno
out
or
nop
hlt
xchg
outsl
es
push
and
adc
fcmovbe
movsl
push
jle
xor
jge
int
mov
cmpsl
repnz
push
cmp
dec
ja
cmp
ret
imul
jle
insl
add
test
add
lods
out
sbb
addr16
ds
sar
lods
jecxz
repz
cmp
or
int
lcall
pop
jne
dec
xrelease
loop
icebp
push
dec
loope
js
adc
sbb
pop
xor
sbb
movsb
call
shll
adc
mov
pop
add
inc
pusha
pop
cli
jg
pop
in
adc
loopne
push
mov
or
xchg
aam
pop
mov
xor
fdivr
and
scas
mov
dec
cwtl
inc
adc
loop
add
ret
and
add
lods
push
dec
sbb
or
inc
mov
rcll
mov
cmpsl
popa
incb
sbb
dec
pop
rcll
dec
lock
popf
add
dec
add
or
js
inc
mov
mov
sub
scas
outsl
mov
mov
xor
nop
push
fiadds
xchg
add
jg
mov
jge
push
mov
stos
jns
push
cli
add
inc
aaa
xchg
xor
cwtl
sahf
movsb
std
pop
mov
roll
adc
cmp
hlt
and
and
stos
sbb
out
mov
sub
mov
shrb
jno
stos
test
pop
ret
pop
data16
cmpb
scas
repnz
test
dec
rcrl
test
mov
dec
or
xor
lods
loop
into
xor
mov
lret
inc
ror
dec
push
lods
dec
fistl
mov
call
leave
dec
and
int
orb
test
out
and
cmp
inc
xor
push
clc
ret
pop
std
xchg
inc
lds
and
fists
int
in
push
jnp
sub
les
jnp
push
int3
and
call
daa
dec
jl
xor
ret
or
add
add
pop
sub
jne
jecxz
or
mov
push
or
addr16
pop
aaa
mov
xchg
dec
jo
cmp
int
pop
fnstsw
lret
or
lcall
cmp
aam
mov
gs
shll
lea
sbbb
add
out
jb
sbb
test
inc
repnz
inc
or
mov
mov
jg
iret
xchg
mov
fwait
xor
sub
filds
xor
aad
arpl
shll
sti
es
jns
bound
dec
test
and
xchg
fiadds
inc
testl
pop
jl
je
cli
or
fnstcw
lea
imul
cmp
mov
shll
push
jle
negl
ljmp
dec
pusha
stos
dec
xor
jb
ljmp
out
push
imul
push
or
sub
jne
mov
test
sbb
hlt
mov
addr16
mov
adc
cli
xchg
out
dec
adc
pop
or
jge
into
cmp
sbb
adc
enter
sub
out
adc
cmp
mov
push
mov
out
dec
pop
xor
xchg
imull
stc
push
popf
iret
insb
sbb
loope
mov
daa
and
sub
clc
ss
mov
mov
popf
and
jge
cmp
rorl
jge
lea
sbb
repz
test
inc
nop
jne
mov
repnz
xor
pop
pop
mov
mov
lret
mov
out
out
call
mull
cmp
leave
or
cld
sbb
xor
xchg
or
or
mov
sub
insb
push
pop
scas
outsl
gs
mov
stos
mov
cwtl
mov
adc
loopne
push
dec
xchg
aas
inc
jb
push
lahf
scas
jmp
mov
adc
clc
adc
fnstcw
shll
lock
loopne
mov
cmpsl
int
ret
lock
in
repz
loope
push
mov
jb
rorl
jns
fs
mov
sub
mov
fsubp
cmp
and
fdivrs
adc
call
pop
dec
dec
xchg
xchg
inc
call
push
inc
iret
lock
adc
fidivrl
push
sbb
xor
popa
fimuls
xor
je
out
ficomps
xlat
cmpsl
push
out
das
mov
icebp
sub
or
jle
inc
outsb
xor
sbb
push
fwait
ret
ja
xor
scas
lods
repnz
dec
adc
mov
pop
inc
and
and
dec
mov
icebp
inc
loope
cwtl
in
jmp
aaa
adc
xor
setl
rcr
pop
mov
cmpb
fs
aam
push
imul
add
mov
and
daa
outsb
dec
cmpl
andb
inc
inc
push
mov
jne
data16
push
jg
ja
jg
dec
loop
sub
inc
out
cmp
mov
lods
dec
mov
shr
and
mov
leave
arpl
mov
test
imul
mov
pop
sub
pop
and
push
xor
repz
sub
arpl
mov
insb
inc
xor
lahf
hlt
add
sub
andb
push
scas
inc
stc
jp
xor
xchg
push
ret
loopne
sub
cs
sbb
push
inc
das
jmp
mov
xorb
mov
imul
cmpsb
cmc
jp
mov
adc
dec
pop
call
xlat
mov
mov
mov
mov
xchg
dec
dec
clc
in
pop
and
mov
xor
in
sbbl
in
cmpsl
es
sub
inc
push
popa
pop
movsw
mov
or
mov
or
mov
in
dec
pop
jo
xchg
into
mov
xor
jmp
mov
sbb
jno
ror
pop
movsb
mov
call
pop
xchg
xchg
mov
inc
jle
lds
test
jmp
scas
imul
gs
cmp
fnsave
icebp
xchg
jbe
gs
xor
jl
inc
add
std
imulb
data16
nop
movsb
or
xlat
pop
xchg
adc
xor
scas
fidivrs
sbb
dec
ds
jo
stc
jmp
xlat
iret
cmc
int3
add
aad
adc
popa
push
ficoml
jl
adc
xor
jbe
fcmovnb
outsb
jae
into
loope
nop
mov
xor
jae
sti
ljmp
leave
clc
fiadds
lret
cmp
fnsave
pusha
in
cli
cmp
pusha
js
cld
mov
mov
fsubs
jge
inc
gs
outsb
icebp
pop
imul
dec
push
jns
int3
and
sti
xor
bound
or
jge
in
pop
stos
das
push
jecxz
sub
repnz
adc
adc
push
bound
inc
rcll
ret
add
push
les
addr16
clc
out
jge
dec
stc
aaa
mov
mov
lea
jns
aaa
mov
sbb
xor
and
movsb
adc
dec
xor
mov
mov
sbb
cld
adc
test
add
mov
es
cmp
push
fs
pop
popf
aas
js
cmp
mov
push
cmpsb
add
sub
decb
lock
and
popf
lods
xor
cmc
inc
ret
or
mov
es
or
decb
das
adc
xchg
pop
push
dec
les
mov
mov
icebp
dec
jl
xor
add
mov
lret
outsb
or
stc
rcrl
push
xor
push
outsl
int3
negb
mov
dec
cmp
lcall
roll
cmp
frstor
jae
sbb
je
insl
sahf
xlat
call
scas
jns
dec
sub
call
dec
xchg
inc
pop
fmulp
stos
pop
push
jno
and
movsl
mov
xlat
mov
sbb
and
mov
add
imul
push
add
ja
divb
rorl
adc
jecxz
cmp
je
push
aas
xor
mov
lock
in
mov
push
push
mov
pop
mov
test
inc
movsb
inc
inc
pop
sbb
jne
mov
jle
icebp
insl
xchg
jge
shrl
add
fsubrl
sub
aaa
sub
inc
and
jmp
fisttpl
adc
imul
pop
mov
enter
je
fcmovnbe
add
ljmp
or
in
pop
mov
inc
outsb
lds
scas
jp
dec
push
add
daa
pop
js
lods
jae
pop
out
sbb
pop
mov
pop
cmp
jne
xor
mov
outsl
pop
jo
inc
mov
jns
add
xor
inc
test
ljmp
or
inc
push
mov
fisttps
sbb
sarb
mov
mov
in
xchg
int
cmp
ret
loopne
lcall
nop
test
mov
out
ret
outsb
gs
xchg
ror
mov
sub
jbe
adc
movsl
mov
mov
push
addb
mov
scas
add
and
loope
xor
rol
loope
add
call
add
dec
cmp
and
pmaxsw
lds
clc
icebp
adc
shlb
add
int
mov
insl
leave
cltd
sbb
adc
in
std
lea
scas
push
mov
movsb
pop
mov
mulb
fcoms
lret
aad
call
int
orl
repz
mov
push
and
xchg
xchg
push
test
push
das
and
mov
arpl
sbb
push
fildl
mov
rcrb
repz
or
add
aaa
jne
pop
sub
mov
movsl
sub
inc
mov
sub
lock
lods
sahf
dec
pop
sub
inc
sub
add
js
movb
test
popf
mov
outsl
jmp
jae
push
in
adc
insb
mov
adc
or
cmp
test
int3
movsb
or
pop
inc
inc
sub
das
jnp
inc
mov
pop
out
insl
or
outsl
cmp
xchg
int3
jo
cmp
or
imul
lret
sbb
mov
pop
sub
addr16
push
or
imul
lds
add
test
or
mov
gs
cwtl
in
iret
lods
cs
or
xor
sbb
xchg
xchg
mov
test
sahf
inc
mov
push
inc
sarl
mov
adc
cli
in
and
scas
mov
ror
rcr
or
dec
sbb
fcomi
adc
rcr
jecxz
outsl
stos
xchg
mov
lds
mov
shll
dec
jns
inc
cmc
shlb
mov
mov
lock
lock
cmp
xchg
aas
sti
pop
pop
scas
stos
mov
jecxz
dec
stc
push
jno
sub
mov
testb
js
sbb
cmp
or
pop
jb
mov
push
leave
add
in
mov
mov
int
cmp
cmp
in
mov
push
pop
outsl
sbb
mov
dec
or
xor
sti
sub
iret
subl
sub
in
inc
push
jno
das
sbb
stos
test
mov
rcll
leave
pop
fsub
jnp
js
inc
push
das
test
jnp
fisubrl
dec
lods
sub
adc
push
sub
or
jg
int
mov
repz
mov
ret
push
or
adc
call
pop
fwait
jmp
mov
mov
aas
mov
xchg
lods
call
mov
shlb
fidivrs
mulb
std
ret
clc
loope
in
inc
and
and
fildll
jmp
pop
push
sub
ds
insl
xor
lahf
mov
fldcw
outsb
mov
sbb
fstpl
cmp
push
stc
jae
mov
push
cli
dec
js
dec
repnz
test
and
xchg
jmp
aaa
inc
sbb
sti
mov
mov
jae
inc
inc
fbld
xor
push
les
or
and
xor
cmp
pop
shlb
ja
ret
pop
sahf
or
hlt
jbe
fwait
or
or
adc
or
sbb
mov
data16
imul
or
mov
pop
inc
push
inc
pusha
mov
cld
jno
xchg
mov
push
lock
in
repz
and
sbb
fildl
jno
jo
jl
inc
push
enter
pop
repz
jge
push
dec
mov
lds
inc
lcall
test
adcl
pusha
mov
cmp
lods
in
sbb
or
ds
sbb
or
outsb
mov
idivl
sub
mov
rclb
mov
or
in
stc
leave
dec
cwtl
dec
push
pop
or
mov
fistps
and
mov
fdivr
mov
push
dec
mov
and
lods
xchg
int
in
lahf
pop
mov
shlb
ret
ficomps
cmp
fucomp
nop
les
fcmovbe
dec
popa
pushf
xor
lods
stc
xchg
loope
fisubrs
dec
mov
inc
gs
cmp
push
push
pop
push
jecxz
les
dec
bound
pop
je
mov
mov
jl
sti
fdivrs
pusha
je
int3
and
sub
leave
push
pop
fs
sbb
test
movsl
mov
stos
inc
pushf
mov
fldt
ja
push
pop
pop
cld
adc
ljmp
sub
jge
sub
lahf
push
out
pop
cltd
dec
cltd
dec
inc
ret
xchg
in
cmp
movsb
aas
bound
ret
cmp
dec
sbb
std
push
mov
ret
and
add
cmc
shrb
jbe
sahf
mov
jle
adc
mov
aam
hlt
inc
jecxz
fildll
push
push
ja
lahf
xor
ljmp
xlat
mov
add
in
sub
and
sub
jmp
mov
test
mov
sbb
in
cld
add
xorl
adc
lcall
inc
xchg
mov
je
xor
out
cwtl
imul
loop
inc
mov
dec
cmp
bound
adc
mov
enter
xchg
out
mov
inc
adc
lods
ret
cmc
test
ljmp
jno
or
aas
xor
jle
ret
lea
mov
dec
fildl
inc
and
xor
incb
inc
cmp
sar
test
push
jl
daa
xchg
mov
hlt
pop
outsb
shll
cs
mov
fs
shll
pop
aaa
inc
scas
mov
mov
lcall
enter
adc
orb
mov
mov
dec
aas
add
repz
jge
sahf
xor
test
mov
cltd
push
and
cmpsb
test
pop
call
rol
stos
out
mov
dec
pop
icebp
mov
jae
movsb
in
into
xor
mov
jge
js
fidivrl
cs
fldenv
clc
pop
inc
rcrl
inc
insl
fnstsw
mov
mov
dec
cs
mov
out
rclb
cli
push
cmp
cmpsb
out
cmp
dec
mov
xor
and
pop
dec
mov
dec
adc
xchg
add
or
call
pop
ss
mov
mov
add
push
nop
repz
jo
into
adc
neg
add
xchg
xchg
cmpsl
pusha
data16
adc
push
stos
mov
mov
inc
movsl
cltd
outsl
dec
mov
int3
pop
cli
subl
cmpl
mov
jno
outsl
imul
imulb
cmc
in
repnz
pop
lcall
jle
in
lds
push
fldcw
pop
mov
fsubrs
test
mov
pusha
cmpsb
ret
pop
mov
cs
bound
push
fdivrs
popf
js
or
mov
xor
xor
xor
iret
test
sbb
jl
mov
fs
mov
mov
xchg
mov
icebp
xor
and
or
mov
stc
push
imul
cltd
aaa
enter
cmp
ds
xchg
cmp
pop
jnp
call
arpl
inc
imul
and
mov
push
into
adc
xor
js
lret
pavgw
push
fldt
sbb
shlb
fnsave
mov
lea
dec
sarl
adc
sbb
imul
outsl
loop
dec
movsb
ja
into
sbb
push
popf
xor
scas
daa
repnz
cmp
sub
jecxz
cmc
cwtl
mov
jecxz
sub
jg
loope
cwtl
pop
cmp
lret
and
inc
mov
jle
or
add
or
xor
f2xm1
aas
push
ds
stos
or
movsl
loope
add
push
cli
arpl
xchg
rol
adc
lods
mov
jmp
int3
push
push
lods
js
outsl
shrb
outsl
sti
add
lret
subl
xor
xchg
lcall
mov
push
mov
popf
rcl
scas
inc
les
xchg
sub
adc
sahf
aaa
mov
repnz
adc
sub
outsl
popf
cmpsl
shlb
xchg
mov
ret
lods
aas
bound
pop
xchg
pop
push
fs
in
sub
push
shrl
cmp
subb
xor
or
ret
fcoml
mov
and
aad
jl
mov
pop
mov
shll
repnz
inc
fiadds
jbe
sarl
mov
outsl
inc
adc
cs
out
jns
and
cmp
mov
repz
clc
shrl
or
jge
mov
and
xchg
rep
inc
pop
repnz
jnp
pushf
cmp
test
lcall
pop
daa
mov
clc
stc
sub
inc
xchg
popf
push
add
xchg
cli
cld
cmp
sbb
dec
lods
aam
rolb
push
sub
vmwrite
push
in
shr
out
jecxz
sbb
repnz
fistps
push
loope
test
cmp
stc
stos
push
outsl
mov
arpl
ss
jp
cltd
adc
inc
dec
inc
arpl
mov
cmp
push
sbb
js
adc
outsl
idivl
or
sub
call
orb
push
cmp
sbb
mov
push
daa
inc
xchg
aas
out
jle
sbb
stc
sbb
clc
pop
push
xor
xlat
dec
xor
adc
sarb
and
jmp
js
das
enter
push
or
or
mov
cmp
inc
mov
inc
inc
mov
pop
std
enter
movsb
push
xchg
sub
mov
out
adc
add
push
mov
mov
cld
xor
push
mov
ficomps
scas
popf
leave
ret
adc
rcll
push
lea
call
rolb
ret
push
dec
cmc
cmpsb
xchg
repz
push
scas
cmc
idivb
sbb
shlb
push
xchg
push
sub
adc
mov
sahf
mov
push
cld
add
lods
xchg
push
test
sub
xchg
test
add
fxch
mov
movsb
lahf
xor
int
in
pop
cmc
pushf
mov
daa
setp
call
icebp
inc
mov
mov
pop
xor
or
outsb
mov
and
push
inc
mov
lds
adc
cmp
push
pop
inc
movsl
out
jae
outsl
push
jae
gs
in
nop
ficoms
mov
pop
sti
mov
out
dec
cltd
out
popa
sti
dec
out
mov
xchg
imul
cmp
pop
inc
cmp
int
and
data16
scas
fsubl
sbb
cmp
imul
mov
testb
xor
push
bnd
mov
mov
cmp
pushf
mov
data16
jbe
cli
rcrb
add
and
jns
and
jmp
xchg
mov
insl
mov
lahf
insl
addr16
jnp
arpl
push
aaa
push
cmc
nop
mov
das
adc
jno
xor
inc
cmp
jp
int3
and
aad
pop
sbb
rolb
xor
cmp
cmc
mov
cld
xor
jo
cmpsb
ja
xlat
sub
jo
idiv
pop
and
mov
popf
movsb
inc
sete
fisubs
movsb
mov
xor
mov
push
scas
in
xchg
js
and
ljmp
mov
arpl
into
fsubrs
aas
push
xchg
push
xchg
dec
test
sti
js
cmp
cmp
dec
loop
mov
push
sub
repnz
mov
decb
mov
daa
inc
lret
mov
mov
mov
aaa
or
loop
jecxz
clc
lods
mov
out
mov
sub
and
mov
enter
sbb
js
aas
stos
int
filds
cmpsb
shl
and
outsb
stc
sarl
dec
jge
xor
and
jp
mov
cmpsb
testl
fucomip
fst
mov
add
and
mov
jnp
mov
dec
stc
sarb
ficomps
mov
cmp
arpl
loopne
cs
mov
dec
mov
push
incl
xchg
mov
add
inc
xchg
fisubl
insb
int
cli
jns
data16
sub
add
fmull
shl
push
sarb
xor
lods
inc
in
clc
js
and
and
sub
out
nop
and
xorb
cwtl
testl
dec
cmpb
push
aaa
jno
movsb
icebp
dec
adc
push
cmp
adc
inc
mov
sbb
in
mov
sub
push
imul
stc
ljmp
into
arpl
out
and
insb
mov
jo
and
cmp
enter
pop
xor
cmp
icebp
mov
dec
cltd
xor
lea
dec
push
les
stc
jmp
mov
enter
ss
mov
idiv
cmpsl
inc
insb
addr16
xor
jl
pop
or
lds
push
out
dec
jmp
sbb
and
jmp
pop
cltd
push
push
xor
inc
or
cmp
and
loop
loopne
jmp
push
int3
add
insb
aas
or
je
inc
adc
mov
cld
inc
add
inc
fstps
aas
aam
sub
sbb
addr16
cmc
push
rcll
jno
push
mov
arpl
pop
cs
inc
inc
and
push
mov
aas
or
out
rcrl
mov
ret
pop
or
hlt
hlt
orb
int3
faddl
pop
lock
addr16
pop
mov
loope
jbe
pop
out
mov
adc
sub
or
adc
jle
jp
pop
fistpl
xchg
sub
outsb
jb
pop
rclb
mov
loop
jns
orb
in
pop
pusha
shll
imul
pushf
insb
push
xchg
inc
cmp
jno
rcrb
mov
outsl
test
sbb
jge
popa
jb
repz
cbtw
movb
lock
insl
inc
scas
or
xchg
addps
or
pop
add
loopne
jmp
shrl
scas
fimull
or
mov
xor
xchg
ficoml
and
sub
lock
xchg
push
ss
sub
imul
mov
adc
jmp
pop
and
push
mov
pop
nop
jge
inc
in
push
std
push
das
movsb
dec
mov
lock
aaa
mov
xor
xchg
inc
ljmp
xchg
push
inc
cmp
psrad
pusha
inc
in
mov
fiadds
mov
pop
popf
inc
xor
lcall
xor
pop
mov
cs
in
sub
mov
andb
pop
sbbb
mov
lea
dec
movl
and
std
repnz
cltd
ror
adc
push
dec
xor
inc
xor
cs
mov
mov
pop
pop
in
push
test
dec
jns
cltd
mov
sbb
push
sbb
cmc
lods
shl
repnz
pop
xchg
mov
andb
jge
cli
and
mov
sub
jmp
cmc
outsb
fstp
xchg
add
ss
xor
in
in
cli
or
xor
xchg
in
inc
bound
mov
sub
gs
clc
mov
sub
jbe
pop
adc
shlb
aas
movsl
push
or
inc
mov
inc
aad
sub
mov
xchg
das
push
andl
repz
pop
xchg
or
jae,pt
jecxz
adc
inc
fs
aam
push
call
repz
fbstp
adc
inc
dec
ret
ss
rcll
jp
sub
loopne
and
add
xchg
adc
leave
inc
xlat
inc
fldt
in
mov
es
mov
roll
out
pop
out
jl
ret
rolb
lcall
mov
add
dec
jo
lods
mov
cld
sbb
loope
dec
xchg
jnp
leave
mov
dec
cmp
or
push
sub
sub
cmpsl
lcall
sub
popf
lret
or
push
ret
mov
jle
lcall
shlb
fimull
popa
out
jmp
outsb
fiadds
or
std
dec
mov
stos
movl
sbb
sub
mov
push
inc
adc
sub
lea
cmpsb
mov
jnp
mov
dec
das
inc
movsb
pop
fidivl
repnz
push
sub
cs
enter
sub
ret
xlat
ss
loop
lods
adc
or
rcll
in
mov
mov
in
cltd
xchg
fst
push
fists
stos
test
xchg
push
pop
push
jp
gs
mov
aas
hlt
push
sbb
stc
in
fs
mov
mov
jecxz
gs
mov
or
adc
push
xor
adcl
sbb
jns
fwait
mov
aad
mov
mov
jg
dec
xor
stc
inc
adc
pusha
scas
hlt
mov
cmp
adc
or
je
dec
and
test
out
and
out
adc
imul
cmp
jle
inc
test
jge
scas
out
pop
rclb
xor
lret
lcall
fsubrs
jno
outsb
mov
in
in
xchg
push
test
xor
or
repnz
ljmp
int
sbb
dec
push
pop
fwait
gs
jnp
rcrb
inc
gs
or
mov
mov
pushf
or
mov
lret
shl
decl
movsb
mov
cwtl
cwtl
lods
out
jne
inc
jnp
aam
lret
cmc
pop
adc
sbb
and
stc
addb
and
test
lods
xchg
loope
in
sub
outsb
push
daa
xor
call
push
neg
pushf
or
cmp
cwtl
nop
sti
mov
cmp
fnstcw
pop
adc
mov
or
mov
lds
push
out
ljmp
sub
stc
push
mov
pop
push
inc
sbb
ss
mov
mov
lds
mov
mov
jo
xor
loope
xchg
jb
mov
lods
cmc
ret
out
pop
sbb
sub
lds
in
std
in
int
mov
imul
sub
cmpsb
add
dec
jbe
xchg
pop
or
test
cli
aad
stc
inc
xchg
or
sub
and
inc
out
adc
fs
ljmp
test
mov
out
lea
lcall
fisttps
mov
cmp
xor
enter
inc
call
mov
jecxz
mov
les
mov
clc
add
decl
push
mov
cmp
popf
ss
shll
adc
outsl
test
je
mov
mov
xchg
mov
sub
pop
mov
cli
sahf
out
inc
add
pusha
pusha
idivb
inc
aad
ret
mov
loop
mov
adc
into
outsl
in
sti
ss
cwtl
pop
movsb
shlb
mov
ficompl
ret
push
dec
cmp
stc
xchg
stos
mov
and
lret
popa
es
ret
mov
lret
lcall
pop
and
pop
or
lock
cmp
dec
test
mov
stos
or
icebp
push
xchg
es
push
cmpsl
mov
jnp
sub
lock
into
outsb
arpl
adc
cmpsb
sub
gs
nop
rcrb
fldt
out
cmpsl
mov
adc
out
cmpsl
fcompl
sub
hlt
andb
repz
sub
adc
std
les
jg
mov
adc
and
loop
fidivrl
mov
mov
add
sub
adc
leave
jg
imul
inc
test
adc
xor
movsb
ljmp
dec
insb
pop
lods
mov
xor
shrl
cmp
arpl
push
mov
insl
mov
mov
sti
es
jecxz
rorb
pop
push
fdivrs
mov
jmp
fucom
mov
dec
xor
adc
sbb
movsl
xchg
jne
and
mov
sub
add
das
cmp
imul
cld
stos
fidivs
in
and
pop
popa
pop
les
xchg
pop
lds
rcl
jecxz
push
mov
inc
pop
outsb
test
mov
cmp
push
push
jne
xchg
std
ret
aas
addr16
sbb
mov
and
imul
addr16
lahf
cld
and
lret
loope
iret
clc
clc
cs
dec
aam
jo
inc
shrb
xchg
jp
out
and
fnsave
sub
shll
lods
mov
sarb
dec
ficoml
sbbl
pop
cs
pop
inc
fucomp
pop
aad
mov
mov
mov
insb
scas
stos
xchg
sub
sub
xor
out
jmp
xchg
iret
lcall
sbb
sbb
jmp
sti
dec
add
pop
fwait
jl
xor
mov
cwtl
mov
mov
aam
jo
jle
mov
in
pop
leave
int3
cli
ljmp
lret
sub
pop
popf
jae
add
mov
not
pop
adcl
pop
imul
xor
jmp
jmp
mov
mov
movsl
andl
test
push
nop
insl
xchg
ja
and
xlat
scas
jp
mov
jl
dec
icebp
inc
add
cmovle
xchg
xchg
popa
mov
cli
xor
addb
test
sahf
shl
fsts
jbe
es
sti
push
adc
cmp
xchg
sbb
data16
aam
scas
sub
pop
das
jae
add
and
mov
add
xchg
add
outsb
fsubs
add
add
mov
popa
test
aas
ret
icebp
pop
lods
cltd
mov
push
pop
push
mov
ret
call
movsb
and
xor
test
mov
sbb
fmul
addr16
insl
dec
xchg
push
fwait
cwtl
addr16
sbbb
jmp
xchg
xor
sub
bound
shl
pushf
sub
mov
mov
addr16
clc
out
push
push
xchg
and
xchg
adc
xorb
push
loopne
sbb
cmp
sahf
xchg
jbe
push
sub
mov
pop
sahf
cmp
xor
adc
adc
aas
in
or
jp
push
add
push
out
outsb
or
out
sbb
dec
jge
inc
gs
lods
dec
imul
and
pop
jbe
mov
jne
adc
fcomps
leave
fbld
push
incl
popf
inc
out
lea
test
jo
pop
mov
popf
in
xchg
out
test
and
test
mov
jp
fstpl
jnp
ret
sub
add
ss
stc
leave
jb
and
pop
lea
push
xor
add
ret
mov
mov
imul
xor
xor
cmc
or
out
out
inc
icebp
test
movsb
sub
xor
mov
ficompl
cmpsl
jl
jge
or
dec
xchg
lea
inc
jle
pop
mov
rcr
repz
jb
in
rorb
xchg
jnp
mov
xor
and
xchg
imul
or
lods
in
jns
mov
repz
in
inc
leave
or
sarl
repz
dec
icebp
mov
fs
stc
rorb
add
repz
shrb
cmp
sbb
or
and
negl
aad
mov
pop
push
mov
pop
cmp
xchg
jnp
out
pop
les
cmp
fisubrs
push
mov
add
fiadds
imul
sbb
add
pop
pusha
lcall
mov
jbe
xor
je
fdivl
xor
pop
mov
out
or
add
mov
outsl
mov
test
clc
outsl
mov
outsl
inc
mov
add
xor
and
and
push
dec
mov
sub
int
outsl
nop
and
pop
faddp
or
js
lret
mov
ja
rcrl
lret
push
lods
std
dec
cwtl
stc
mov
mov
pop
insb
negl
ret
jbe
test
pop
inc
xor
xchg
int3
dec
xor
adc
push
inc
sub
test
cltd
in
xor
arpl
dec
shlb
stos
lea
fldcw
out
inc
push
xor
and
mov
test
sbb
xchg
leave
stos
jb
sbb
out
daa
es
cmpsl
push
adc
mov
stos
pushf
add
add
nop
movsl
mov
ss
pop
lods
es
inc
inc
or
ljmp
outsb
mov
insl
aaa
nop
or
fdivl
pop
loop
and
out
push
jge
pop
jne
pop
shrl
sub
test
imul
pushw
add
sub
mov
mov
and
pop
jle
xchg
cmp
jecxz
cmp
mov
cmpsb
and
or
dec
dec
inc
push
inc
les
test
mov
fimuls
pop
ret
ds
mov
xor
mov
repz
inc
add
test
push
popa
je
xchg
xchg
cld
xor
loopne
sub
mov
xlat
xor
outsb
push
inc
scas
xor
stos
add
repnz
cwtl
inc
jle
das
or
mov
nop
and
out
adc
stc
ret
dec
pop
out
aas
sub
ror
les
and
jbe
shll
jb
mov
aad
add
push
cmp
xchg
push
inc
add
xchg
ds
and
rcl
dec
hlt
mov
sub
inc
ficoml
das
jmp
pop
mov
popa
loopne
mov
shll
dec
push
cmp
lea
jecxz
or
mov
in
and
pushf
sub
and
fldl
lds
cmc
dec
jl
hlt
pusha
shr
hlt
mov
push
jmp
add
add
or
cmpsl
pop
lret
and
and
or
dec
data16
out
cmpb
setns
xor
xlat
imul
adc
fdecstp
mov
insb
xchg
and
jg
inc
push
gs
movups
xchg
sub
cmc
pop
out
pop
dec
and
aas
les
or
sbb
and
pop
lcall
data16
sub
sarl
je
adc
xchg
rcrl
xor
out
and
fs
mov
dec
imul
dec
push
inc
fs
xor
shl
jb
loop
outsl
xchg
aaa
cmp
je
iret
pop
aas
jmp
sbb
jecxz
jmp
push
call
xchg
test
xchg
jmp
pop
movsl
inc
inc
test
add
fisttpll
and
out
mov
das
pop
lahf
adc
movsl
xchg
frstor
jnp
aaa
mov
mov
sbb
sub
testl
stos
call
xchg
movsb
pop
imul
xor
ss
and
jge
lahf
lds
mov
loope
shrl
cmp
xlat
ret
mov
std
lahf
out
pop
loop
popf
mov
cmpsb
add
mov
loopne
mov
cmp
cmpsl
xor
movsb
sub
loope
add
in
popf
scas
cmp
adc
mov
cltd
jl
xchg
or
pop
xchg
dec
adc
push
xchg
jb
adc
dec
xor
daa
push
xchg
fsubs
sub
and
arpl
je
xor
sub
and
mov
nop
dec
add
add
cmp
arpl
xor
mov
outsb
call
fnstenv
jmp
push
add
jg
push
jmp
mov
fcompl
push
js
icebp
leave
mov
fs
in
or
xor
and
adc
in
mov
sbbl
ja
jge
hlt
mov
lahf
aas
repz
dec
jo
inc
cmp
mov
inc
push
xor
xor
push
inc
cmpsb
push
mov
xchg
mov
mov
adc
mov
cs
cmp
push
lock
xchg
lds
popa
jae
cwtl
ds
mov
add
xor
mov
or
xchg
push
inc
aad
push
dec
pop
sub
into
or
jmp
incb
mov
cli
sub
mov
adc
loope
fsubrs
dec
jecxz
jo
call
push
sti
shll
xor
das
test
test
outsb
inc
sub
lea
rorb
dec
out
fdivs
mov
mov
or
pop
dec
sbb
dec
mov
mov
push
or
cltd
mov
outsl
mov
fsubr
pop
ljmp
sub
jmp
aam
pushf
jle
cmp
mov
sbb
lret
mov
inc
stos
mov
fs
push
adc
jmp
rorl
mov
fdivs
sbb
cs
insb
scas
sub
mov
inc
jp
aaa
ljmp
adc
push
pushf
mov
adc
xor
or
pusha
shll
lods
test
repz
sub
sub
jnp
cs
mov
xchg
dec
cmp
jle
add
cmp
mov
jae
xchg
movsb
pop
adc
mov
dec
xor
leave
data16
sarl
mov
jge
outsl
cmp
loope
lds
sahf
popf
ret
test
push
jb
gs
and
inc
xlat
xchg
scas
call
adc
mov
xor
enter
cmp
xor
jge
xor
mov
bound
out
inc
loope
jnp
sarl
js
dec
xchg
ror
xchg
out
outsb
lret
les
lock
xchg
stos
mov
test
out
or
aaa
push
lret
jp
out
add
or
insb
adc
pop
shlb
mov
xchg
jl
cmp
xchg
popa
cmpxchg8b
dec
lcall
jae
or
test
jns
pop
imul
xchg
mov
fs
orb
insl
imull
bound
dec
and
cli
in
or
fcom
sbb
and
sbb
lahf
mov
icebp
in
adc
rol
rcrb
testb
out
cmpsb
mov
loope
loope
xor
inc
adc
mov
enter
push
mov
in
mov
pushf
push
roll
stc
mov
cld
test
mov
add
xor
inc
out
test
ret
xor
andb
mov
pop
mov
mov
or
jp
inc
cs
insb
mov
pop
xorl
insl
arpl
jle
dec
lcall
lret
jp
fiadds
mov
jmp
and
mov
xchg
xorb
fisubrl
pop
push
sub
out
jg
mov
mov
inc
ret
les
lock
movsb
xchg
sbb
dec
mov
aam
dec
dec
xchg
scas
das
das
mov
ret
or
jo
loop
movsb
jge
stos
pop
loop
shr
dec
mov
mov
fildll
jno
mov
mov
inc
addr16
roll
mov
ds
fs
push
push
outsb
es
xor
add
popf
sbb
or
or
fidivrl
leave
lods
sub
sbb
mov
leave
mov
sub
dec
jp
mov
fnstenv
sub
or
jecxz
dec
ret
movsb
lcall
iret
sbb
daa
sbb
bound
cmp
fistpl
stos
xchg
mov
mov
fmull
fsubrs
hlt
mov
stos
jle
or
mov
mov
pushf
sbb
adc
test
addr16
in
push
cmp
mov
addr16
or
inc
stc
lea
add
rcrb
test
sbbb
sahf
mov
pop
push
addr16
stos
ss
mov
cmp
dec
pushf
xchg
loopne
repz
cmp
xor
lahf
and
lea
sbb
aas
sub
in
popa
scas
cmpsl
cmpl
xchg
jg
adc
cwtl
dec
and
add
outsb
ja
icebp
mov
data16
xlat
fmul
sbbb
sub
or
mov
pop
mov
test
orl
out
neg
cmp
xchg
push
enter
push
xchg
lcall
rclb
dec
sub
mov
sub
dec
subb
fxch
shll
and
pop
push
jmp
inc
mov
mov
aas
fsubl
sbb
mov
mov
push
cltd
mov
ljmp
cld
adc
hlt
adc
mov
or
pop
cmpsl
xchg
rolb
jnp
fsubs
mov
lock
lret
pop
pop
push
sarb
pop
pop
cmp
dec
push
fsubrs
lcall
sub
addr16
push
jne
xor
inc
shl
addr16
sub
jle
xor
sub
or
testb
xchg
mov
clc
inc
mov
repz
cmp
inc
add
xor
jns
js
jg
mov
ss
xchg
mov
aas
sub
aam
inc
dec
mov
dec
pop
test
imul
setle
orl
cmp
mov
push
and
sub
jecxz
or
mov
adc
dec
jb
mov
icebp
cld
xchg
pop
sub
xor
cmp
push
scas
inc
imul
jns
call
rdtsc
fsubr
insl
mov
add
jmp
inc
leave
hlt
lcall
sarl
lcall
adc
scas
aam
test
sbbl
jl
in
or
fcom
pop
mov
fildl
inc
fldl
clc
jb
mov
cmc
push
mov
int3
fldcw
mov
dec
bound
or
movsb
mov
or
xlat
dec
cmpsb
pop
shlb
pop
jge
push
sub
inc
inc
daa
pop
push
adc
push
push
mov
jno
pop
aam
ret
inc
xchg
or
ds
int3
mov
push
negb
sarb
dec
fisubl
jae
ljmp
rol
fxch
fimuls
xchg
dec
mov
data16
push
outsl
aad
fbstp
aad
and
pop
movsl
sub
pop
minps
dec
adc
adc
adc
out
scas
scas
mov
out
cltd
clc
sub
das
das
stos
test
inc
sub
mov
insl
jmp
call
add
push
es
or
add
imul
or
rcl
and
inc
cmc
mov
into
xchg
push
cltd
sub
fisttpl
dec
push
push
xchg
cltd
adc
xor
ss
dec
repnz
adc
aaa
mov
notb
lret
mov
inc
sub
scas
adc
mull
jnp
cmpsb
pop
xor
lret
stos
xchg
loop
inc
test
test
enter
dec
ret
pop
lds
xor
push
add
rorb
cmpsb
xchg
sti
push
leave
call
or
out
stc
and
stos
rorl
inc
lret
leave
je
mov
js
sub
cmp
insb
gs
cs
jp
lods
shll
aaa
mov
mov
pop
xlat
mov
dec
stos
and
cmc
mov
push
cmpsl
lods
out
inc
dec
addb
out
add
push
pop
rdpmc
inc
xchg
mov
dec
ds
aaa
les
xchg
fstpl
inc
int3
frstor
arpl
or
sahf
push
nop
pop
inc
scas
aaa
jmp
lret
jle
cmpsb
ret
fabs
add
shlb
inc
data16
in
call
and
mov
push
or
mov
adcl
int
pushf
insl
jns
shll
xlat
add
sbb
pop
movsl
bt
jl
sbb
sub
and
and
aas
inc
mov
and
cwtl
add
ljmp
push
push
sub
mov
movsl
push
fidivl
sbb
adcl
mov
mov
loop
pop
mov
scas
dec
inc
mov
inc
push
hlt
and
lock
outsl
arpl
shll
push
shl
addr16
popf
testl
ss
ret
ljmp
or
cwtl
pop
xchg
xor
mov
and
xchg
mov
imul
aad
js
test
dec
inc
imul
pop
jnp
pushf
sub
movsl
sub
mov
inc
jmp
cs
mov
lds
sbb
fadds
xchg
in
push
out
shlb
std
pop
in
bound
cltd
sub
push
sub
lods
dec
sbb
inc
dec
or
lods
jmp
xor
sbb
pop
sbb
pop
pop
fldcw
in
in
xor
jbe
inc
fisttpl
lock
sbb
roll
xor
mov
adc
and
mov
adc
nop
gs
daa
clc
push
ret
push
jbe
loop
push
jp
push
dec
mov
nop
adc
add
cmp
pusha
es
ret
ljmp
int3
mov
aaa
mov
rcrl
xor
mov
lcall
push
dec
or
and
sbb
mov
mov
sbb
xor
call
in
sub
pop
and
cmp
sbb
insb
test
xlat
cmovs
jmp
sub
cmp
and
loop
pop
and
fisubl
adc
and
incb
xlat
cmp
jne
sarl
jmp
push
push
xor
in
xor
imul
fldenv
mov
stc
sbb
push
mov
mov
lfs
les
inc
mov
inc
dec
xor
xlat
mov
cmp
cmc
add
repnz
in
jnp
pop
mov
mov
fwait
iret
outsl
loopne
sub
pop
fnstsw
xchg
out
in
loope
push
stos
leave
mov
sbb
xor
cmp
fstpl
nop
push
test
mov
push
loope
mov
xchg
repnz
xchg
sbbl
icebp
jae
pop
ss
cmpsb
movb
mov
repz
sahf
lods
lahf
imul
les
sub
push
insb
mov
jmp
cld
hlt
js
pop
inc
or
mov
scas
iret
test
sbb
mov
and
call
aam
or
cmc
gs
push
jae
int
push
fcmovb
jmp
scas
cld
nop
insl
daa
or
lods
cltd
movl
int
in
outsl
sub
scas
or
dec
mov
cmp
loope
push
in
adc
insl
out
and
subb
pop
dec
repz
mov
cmp
xor
mov
mov
and
mov
nop
add
mov
dec
or
in
jnp
scas
jmp
aaa
cs
lret
pop
sub
test
sbb
cmp
ffree
dec
mov
sub
idivl
movsl
stos
mov
loop
fdivrl
iret
jo
sbb
cmp
mov
lret
jecxz
jecxz
fwait
ljmp
and
add
out
imul
scas
test
add
cmp
cmpsl
jnp
shlb
sub
inc
push
aam
ffreep
test
adc
cld
imul
cmpsb
jo
pop
int
mov
bound
sbb
dec
mov
or
jp
and
push
lods
push
in
test
je
imul
or
pop
nop
add
rcl
daa
dec
scas
ret
dec
push
test
shlb
xchg
lods
pop
clc
mov
pop
add
test
insl
cwtl
push
mov
sbb
ret
int3
adc
insl
aam
fistpll
mov
jo
xor
call
lods
cmp
jmp
jp
xor
mov
xor
sbb
xchg
dec
outsb
loop
les
dec
scas
lea
test
fsts
xchg
mov
jg
push
lcall
jnp
pop
add
std
xlat
hlt
mov
test
mov
adc
repz
out
cwtl
pop
adc
and
dec
pop
push
cmp
sbb
fsub
pop
testl
aad
cmp
jns
inc
add
or
jl
stc
std
xchg
gs
lcall
xor
sbb
jecxz
jnp
dec
addb
xor
jns
out
sub
mov
push
fwait
inc
adc
mov
int
mov
push
movsb
adc
jne
sarb
addr16
fwait
loope
and
jle
popa
je
sub
aad
repnz
ret
xchg
mov
mov
repnz
ljmp
cmpsl
rcr
test
or
and
jl
repnz
or
addr16
dec
in
stos
fcmove
mov
lds
enter
add
fldl
mov
popf
pushf
shll
jl
lods
inc
iret
clc
jmp
insb
sbb
sti
push
int3
add
jmp
sbb
jne
add
dec
and
dec
ret
mov
pop
mov
mov
cli
cli
add
dec
out
lcall
xchg
push
xor
add
xchg
mov
mov
pop
xor
mov
fldl
in
into
cmp
orl
or
xchg
ljmp
or
int3
inc
ljmp
cmpsb
fdivp
popa
pop
mov
xchg
stos
dec
lock
mov
mov
pop
sbb
andl
es
xchg
pop
sbb
in
test
cltd
imul
cmp
sbb
push
inc
mov
sub
or
cmp
into
cmp
xchg
aas
subb
mov
mov
test
fdivrl
xchg
inc
fwait
rorb
sub
movsl
lret
pop
test
pop
sbb
negb
xchg
mov
outsb
lock
jmp
xchg
push
mov
pop
lahf
jbe
loope
add
pop
les
mov
and
sbb
lds
mov
cmp
es
jnp
mov
loopne
hlt
jne
mov
into
jp
aad
ja
rcrb
imul
iret
fldenv
cmp
mov
ss
xchg
ljmp
aaa
sahf
or
sbb
test
inc
aam
aaa
xor
push
vpmullw
sub
mov
and
imul
stos
aam
push
ret
pop
xlat
es
filds
ficompl
cmpb
popf
pop
jle
int3
dec
test
dec
ja
outsl
scas
xor
das
xchg
or
pop
hlt
je
sbb
inc
jo
push
pop
test
int3
testl
ror
or
clc
lret
add
lea
arpl
xchg
lret
lods
or
jb
dec
inc
mov
ss
and
mov
cld
test
adc
cmpsb
mov
pop
or
push
cld
mov
popf
mov
rcll
gs
fimuls
data16
insl
pop
mov
pop
adc
push
push
fdivrl
add
repz
sbb
xorb
movsl
jg
test
aad
scas
leave
daa
adc
pop
mov
pushf
xchg
sti
fwait
xchg
mov
ss
adc
jae
leave
insb
fldl
loop
xlat
psrlw
jns
test
pushf
incb
inc
imul
cmp
mov
clc
shll
out
jg
mov
or
xor
and
lock
inc
xor
xor
push
pushf
repnz
movsl
mov
or
sahf
cs
mov
jle
ljmp
pop
mov
mov
push
pop
jmp
pop
aam
xlat
clc
inc
clc
lea
insb
lock
xchg
loop
and
jmp
loop
movsb
sbb
in
addb
outsb
push
test
dec
outsb
stc
push
insb
sbb
mov
xor
fists
in
cs
jge
mov
aam
mov
jno
jbe
sub
imul
push
scas
bswap
xchg
inc
mov
dec
mov
mov
xor
pop
fs
aas
mov
sbb
or
mov
cmp
jbe
lods
jl
xor
dec
int3
stos
mov
xor
sub
cmp
inc
add
and
pop
mov
jb
int
sub
in
mov
lock
outsb
cmpsb
mov
adc
mov
frstor
ljmp
daa
xchg
cmp
test
aad
into
mov
add
cmp
mov
inc
ret
add
mov
or
dec
or
ds
popa
fidivrs
or
imul
sbb
arpl
add
xor
gs
mov
lret
mov
insl
push
aaa
push
cmpsl
xchg
mov
xor
stc
popf
jecxz
pop
shlb
mov
dec
push
push
bound
pop
dec
mov
dec
pop
jecxz
sub
ret
orb
add
push
jno
adc
pop
or
pop
ja
lahf
jmp
push
cmpb
mov
fcoml
xchg
test
dec
push
cwtl
push
lods
sbb
scas
fisubrs
sbb
push
jecxz
dec
daa
xor
mov
push
mov
insl
and
aad
xchg
sti
xchg
push
inc
pop
or
adc
mov
in
pop
xchg
and
js
data16
add
xlat
fstps
mov
lods
adc
jmp
mov
pop
loop
sub
fwait
lock
test
sbb
inc
in
mov
cmp
loop
push
pop
sbb
adc
rolb
pop
insb
sub
jbe
xlat
stos
cmc
push
xorb
pop
mov
xchg
ds
pusha
shlb
movsl
jmp
popf
loop
mov
movsb
xchg
push
std
int3
inc
jge
gs
jecxz
fldt
xchg
or
sub
and
or
push
mov
and
dec
inc
and
negl
stos
repnz
or
rorw
ds
push
xor
fisttps
dec
mov
xchg
and
or
add
ss
mov
gs
xchg
test
inc
test
ret
mov
pop
outsb
pop
fmuls
orl
add
push
sbb
inc
xlat
repz
sbb
in
ljmp
ficoml
and
add
xor
mov
adc
enter
or
mov
xor
jg
push
in
es
hlt
inc
mov
adc
test
stos
mov
sub
push
pop
xchg
icebp
jmp
hlt
push
mov
inc
pushf
push
fs
aad
jmp
enter
push
and
shrb
inc
stos
lds
xor
ret
ja
xchg
rclb
xchg
insb
lret
icebp
add
pop
nop
and
sti
jne
cltd
in
push
ficompl
fcmovne
gs
pop
pop
jecxz
popf
xchg
or
mov
xchg
inc
mov
jnp
stc
dec
orl
or
jp
stc
mov
sti
xchg
dec
nop
lods
je
dec
ss
mov
lods
adc
enter
jae
mov
inc
neg
fwait
inc
jnp
movl
jg
inc
es
outsl
ret
adc
mov
adc
inc
data16
pop
push
cmpsb
add
out
mov
pop
rclb
lods
arpl
test
jp
pusha
fsubrs
out
xor
cltd
adc
pavgw
lcall
or
ret
dec
sbb
incl
jno
nop
xchg
mov
xchg
xchg
and
fdiv
sbb
and
ljmp
popf
mov
add
lcall
xchg
icebp
rolb
shlb
ds
into
les
pop
es
mov
push
inc
sahf
adc
pop
repnz
loopne
bound
sbb
ret
lret
sti
pop
int
outsl
xor
jp
inc
movsl
inc
lret
out
imul
in
push
iret
jg
or
jnp
pop
xor
adc
jle
testb
and
sbb
dec
fisubrs
xchg
rcr
rorb
roll
stos
shll
jle
or
adc
mov
icebp
stos
pop
rcrl
mov
push
mov
pop
or
daa
mov
push
sbb
lret
xchg
push
add
mov
pushf
mov
ja
ror
into
dec
inc
mov
add
sub
or
inc
mov
mov
jns
xchg
lds
fadd
mov
or
int3
ret
idivl
push
pop
cli
mov
sub
cmp
xchg
aad
loopne
repz
xchg
int
rcrl
pusha
insl
pop
daa
mov
push
cmp
int3
movb
push
and
and
mov
xor
aaa
inc
cwtl
sub
stos
int3
fsubs
mov
xchg
stos
mov
and
mov
loopne
fcomps
ja
add
cli
cmc
popf
aas
push
pusha
xchg
inc
mov
imull
je
ljmp
add
push
sti
push
push
mov
adc
or
arpl
push
aam
sbb
sarl
pop
rcrl
sbb
push
xor
ja
pop
mov
js
fs
in
arpl
stos
xchg
stos
pop
sbb
ja
mov
xchg
lods
sub
in
pop
jecxz
xlat
jecxz
movsb
and
mov
xor
addr16
push
push
cmp
sbb
pusha
dec
jmp
lods
and
inc
inc
or
pop
or
ret
jle
pop
int3
out
push
push
in
adc
ds
jb
inc
push
adc
fcoml
out
fists
jmp
xchg
adc
sbb
pop
add
xor
cwtl
dec
fisubrl
std
rolb
inc
lds
inc
cmp
dec
cmp
mov
inc
ret
xor
or
andl
insl
and
ficomps
push
cwtl
dec
cmp
jp
popf
push
adc
es
ficomps
jo
es
mov
mov
fs
mov
aas
mov
and
mov
pop
aad
ret
cmp
pop
fadds
pop
dec
xor
jp
mov
stos
xchg
bound
popa
stos
pop
jp
dec
push
mov
cmp
pop
mov
rclb
cmpsl
aam
rclb
and
pop
rclb
push
hlt
cmp
xor
jmp
in
leave
call
ljmp
pushf
fmulp
call
movsb
repnz
xor
push
sub
push
mov
cmc
jno
outsl
in
xor
jle
mov
pop
cmp
xchg
and
int
xchg
enter
repz
mov
push
outsb
addb
pop
xor
iret
icebp
addb
and
ss
pop
xchg
or
ret
pop
xor
xchg
das
stc
cmc
push
mov
lods
fistpll
loop
and
push
stos
xor
mov
xchg
lcall
sarb
lods
mov
sbb
int
mov
int3
outsb
lock
insl
ret
cltd
inc
mov
jmp
ds
loopne
pop
leave
pop
data16
xor
cmc
push
into
addr16
sub
push
push
rcrl
mov
or
insl
leave
les
rorl
test
sub
loope
pop
or
cld
cmp
clc
in
frstor
dec
pop
xor
pop
push
pop
jns
loopne
fincstp
aas
mov
insl
fmull
shll
test
push
mov
sbb
fdiv
fdecstp
imul
shlb
push
mov
data16
mov
popf
push
mov
sbb
lret
xchg
xor
xchg
mov
add
mov
cmp
ja
jb
adc
pop
pminub
cmovp
rclb
cwtl
pushf
pop
cld
out
push
dec
lods
cs
mov
aas
jne
shlb
test
and
add
inc
sbb
cld
push
dec
adc
xchg
inc
mov
std
rorl
and
jbe
mov
loope
jle
arpl
imul
inc
fadd
jg
int3
mov
or
bound
sub
push
imul
mov
ja
outsb
cmp
hlt
cmp
fnstenv
mov
fwait
hlt
jecxz
sbb
lea
mov
xchg
adc
pop
ret
outsl
sbb
mov
scas
adc
insl
mov
lods
pusha
or
push
sub
jo
int
retw
movsb
jo
inc
mov
pusha
pop
loope
test
push
push
es
cmpsl
mov
dec
inc
lea
dec
xor
icebp
inc
iret
or
push
jecxz
mov
cmc
mov
sub
cs
cltd
pop
xor
ds
std
inc
jmp
icebp
scas
sbb
fstl
lret
loop
pop
filds
rclb
cmpsl
cmp
out
add
inc
sbb
and
enter
leave
stos
xor
in
or
es
push
mov
enter
insb
push
mov
lods
sub
sti
mov
inc
push
sbb
dec
adc
xlat
dec
popf
repnz
mov
dec
lods
fs
dec
insl
mov
mov
sbb
jl
sbb
cmp
sbb
lahf
mov
adc
call
push
inc
daa
aam
adc
dec
xchg
dec
pop
add
movsb
xchg
adc
ret
mov
in
xor
bound
mov
jno
cwtd
fiadds
test
and
mov
sub
inc
shrb
cmc
mov
mov
int
dec
test
mov
mov
out
jne
or
je
jb
cmp
mov
popf
stos
dec
push
insl
sbb
mov
or
jle
or
ss
mov
and
scas
je
and
je
xchg
mov
inc
das
cwtl
outsl
pop
xchg
xchg
popf
bound
lea
xor
cwtl
in
xor
call
ret
mov
mov
jmp
in
orl
sarb
xchg
outsb
push
and
mov
fists
jecxz
loopne
fimuls
push
jbe
sub
push
arpl
jnp
clc
ljmp
or
gs
and
lea
in
sbb
xchg
sub
aas
std
aaa
inc
es
mov
adc
or
pusha
push
call
out
adc
test
rorb
add
or
push
pop
cwtl
push
push
mov
xchg
je
mov
sarl
jecxz
add
add
mov
jg
adc
daa
lcall
inc
cmc
inc
inc
sbb
xor
mov
js
std
imulb
inc
icebp
lahf
aam
pop
sub
dec
test
test
fists
push
js
ja
cwtl
outsb
outsb
fwait
aaa
mov
push
std
mov
jo
leave
loop
cmp
mov
mov
or
sbb
pop
xchg
shlb
aas
mov
sti
push
js
test
fildll
add
cltd
jae
pop
mov
arpl
arpl
cmp
sub
repz
push
xchg
cmp
add
sbb
jl
mov
test
scas
movsb
xlat
push
xorb
push
aaa
add
cs
jmp
push
int
sub
inc
call
out
out
fildl
mov
rol
arpl
popf
mov
cli
adc
add
ljmp
mov
push
fstl
sbb
insl
into
and
or
dec
jp
pop
or
add
sti
lods
add
adc
popa
test
repnz
loope
loopne
and
out
add
iret
add
shr
cwtl
pop
mov
pop
and
icebp
andb
nop
out
hlt
jns
and
lock
scas
pop
xor
or
add
jl
cmp
jl
idiv
arpl
dec
pop
xchg
xlat
daa
insb
loopne
lea
cmp
outsb
idivl
jo
mov
subb
mov
xor
mov
mov
inc
pop
or
icebp
insl
inc
cld
mov
mov
std
push
and
fdivs
ret
xchg
fs
xchg
dec
inc
jecxz
int3
rol
cmpb
sub
sar
mov
sbb
in
mov
cmp
rcrl
stos
dec
inc
scas
pop
sub
out
test
ss
xchg
fisubrl
aas
leave
mov
push
enter
lods
lock
arpl
push
daa
jns
mov
hlt
inc
or
mov
bound
mov
pop
jb
fwait
push
daa
stc
aas
xor
ss
stc
xchg
jb
dec
fldenv
mov
movsb
iret
pushf
pop
int3
fwait
sbbl
mov
inc
movsb
stos
sub
xor
fcomp
adc
xchg
lods
pop
xchg
and
push
jns
fimull
xchg
mov
push
sbbb
push
xchg
repnz
add
pop
fsubl
nop
dec
bound
sbb
push
dec
mov
sub
inc
and
cltd
inc
inc
pop
jno
jne
mov
pop
dec
sbb
in
lahf
xor
sbb
fidivrs
fildll
xlat
das
mov
fisttpll
inc
lds
mov
push
push
cmp
jns
xor
sub
rcrl
ret
sbb
pop
jb
testl
mov
add
ljmp
pop
jns
in
add
inc
mov
adc
mov
repz
test
jg
mov
in
int3
shl
xchg
repz
mov
test
dec
pop
xchg
sti
mov
addl
sbb
imul
push
mov
pushf
out
jbe
lods
cmp
jge
call
cli
fidivrl
adc
sbb
adc
pop
sahf
shl
sbb
xchg
xchg
test
xchg
inc
into
xlat
mov
jmp
data16
lret
push
or
jmp
test
jl
ss
fwait
pop
jnp
enter
cmp
pop
movsb
sbb
fnsave
aaa
mov
jno
mov
rol
popa
xchg
sub
xor
sub
leave
cltd
test
and
ljmp
les
sub
xorb
fnsave
push
leave
int
dec
mov
dec
dec
jle
adc
adc
and
mov
push
icebp
das
enter
pop
movntps
imul
inc
ss
notb
jle
mov
xchg
int
pop
xchg
ret
inc
test
stc
jns
dec
pop
push
cs
and
or
cmpsl
add
pop
js
shlb
loop
xchg
leave
cmpsb
add
mov
pop
mov
popa
fcmovb
lods
fs
movsl
outsb
mov
xor
cmc
xchg
jmp
or
jmp
lea
or
cmc
cmc
mov
cwtl
out
add
xchg
leave
pop
movsl
out
cwtl
mov
imul
movb
ja
jl
mov
icebp
mov
push
in
aaa
push
pop
imul
mov
jmp
jmp
sub
fiaddl
pop
cmpsl
mov
insl
iret
add
adc
add
add
sbb
push
sbb
mov
and
dec
int
test
xor
dec
inc
xchg
mov
jmp
dec
stos
inc
jo
lret
cli
jo
lea
setg
mov
inc
sub
int
out
in
add
adc
addb
mov
inc
inc
and
pushf
fs
sub
sbb
dec
xchg
jne
shlb
cmp
ret
imul
pop
cwtl
mov
jne
mov
sub
inc
sub
outsl
xor
lea
and
sub
mov
ss
stos
dec
leave
adc
cs
icebp
mov
xor
inc
mov
sub
stos
cmc
imul
popf
jl
inc
outsl
loopne
mov
adc
inc
jge
pop
sub
loope
sahf
jp
scas
jne
pop
mov
sbb
scas
mov
pusha
rcrl
mov
push
scas
fdivrl
pop
sbb
mov
push
adc
cmpsb
popf
out
pop
dec
inc
or
dec
sub
out
ja
or
mov
and
iret
sti
or
push
dec
ret
test
mov
jmp
outsb
fcompl
orl
or
sub
push
pushf
addb
push
pusha
lds
ljmp
fwait
lea
jno
imul
stos
fisttps
lock
jle
mov
repz
in
sub
sub
pop
adc
cwtl
flds
sub
les
outsb
movsl
push
and
push
and
mov
ss
mov
sub
mov
icebp
repnz
adc
mov
loop
mov
movsb
lods
cmpsb
pop
loope
dec
pop
imul
dec
imul
jle
xor
jno
stos
dec
fidivl
test
dec
mov
mov
leave
mov
pop
add
stc
pop
aam
dec
inc
sub
addl
decb
lret
test
dec
les
fmuls
mov
pop
inc
add
dec
movsl
xchg
or
popf
enter
subb
add
cmc
sbb
jbe
add
cld
sub
xchg
dec
pop
sub
mov
mov
das
lea
test
inc
inc
xchg
push
in
ret
fildll
jbe
dec
mov
lahf
int3
and
lahf
sbb
aam
sbb
insb
outsl
stc
mov
push
aaa
fldcw
insl
incb
lods
insb
mov
mov
mov
stos
mov
cmp
and
adc
mov
call
push
and
pop
pop
addl
push
lock
sbb
fadd
push
mov
push
dec
in
pop
xchg
cmp
or
dec
mov
cltd
lods
pop
outsb
sbb
inc
addr16
test
and
fidivrs
mov
add
pop
mov
cmpsb
daa
jnp
stc
sub
and
arpl
xchg
or
insl
repz
test
add
shlb
bnd
or
ucomiss
in
xchg
xchg
xchg
je
lds
frstor
mov
mov
mov
jne
fisubs
cmc
push
xchg
mov
push
mov
add
mov
xor
daa
outsl
adc
jp
push
inc
mov
sbbl
or
dec
sbb
movb
jns
adc
or
mov
xrelease
dec
mov
jge
adc
dec
rolb
xor
ficompl
inc
mov
sub
jnp
repz
testl
or
fs
jecxz
pop
push
mov
sbb
aam
ror
xchg
repz
push
pop
ss
mov
std
lods
dec
or
add
stos
lds
testl
test
aaa
xlat
jp
sbb
mov
jp
cmc
sbb
dec
cmp
jne
inc
in
int3
mov
mov
loopne
mov
cmp
cmpsb
jmp
mov
jmp
ficompl
push
jnp
push
lods
xor
fnsave
jo
mov
sbb
mov
mov
push
cld
xchg
ds
sub
clc
and
sbb
imull
push
push
ja
sub
cmpsb
sbbl
in
movntps
testb
push
jno
xor
stos
jnp
jmp
sbb
mov
cmpsl
xchg
mov
adc
daa
in
sbb
nop
lea
es
jo
dec
fadd
test
int
push
adc
xchg
sbb
cltd
mov
rcrb
mov
scas
loopne
rcll
and
bound
outsl
cmp
iret
rcll
stos
jp
sbb
mov
mov
ss
in
dec
sub
dec
pop
sbb
cld
xchg
push
or
pusha
pop
mov
lret
sbb
xchg
adc
add
popa
push
push
xor
adc
push
movsbl
leave
je
ficoms
mov
ret
stos
rolb
cmpsb
ss
xorb
xchg
out
int
cmp
jne
mov
enter
add
mov
test
pushf
scas
xchg
lock
scas
nop
icebp
jle
ret
cs
pop
stos
mov
lret
xor
ljmp
xor
mov
xor
stc
stc
ret
aad
push
mov
fdivr
test
xchg
lahf
cmpl
push
and
imull
xchg
push
sbb
cmpl
jne
inc
xor
out
ja
or
sub
pusha
and
jl
scas
imul
orb
pop
scas
jne
mov
jmp
push
jg
xor
jecxz
jo,pn
and
rcrl
pop
inc
mov
adc
jg
push
inc
inc
lods
in
test
out
add
stc
mov
aaa
inc
fmull
sub
gs
pop
stos
push
mov
mov
inc
icebp
lahf
sbb
es
mov
jo
or
mov
xor
addb
stos
lock
cmpsb
push
dec
cmc
xor
sub
dec
pushf
not
jmp
mov
dec
push
mov
xor
and
adc
jge
daa
cmp
push
sub
test
push
mov
xchg
pop
lods
repz
ret
sub
fiaddl
xchg
push
arpl
std
mov
repnz
out
ss
sbb
test
jl
clc
push
imul
inc
sbbb
push
pop
adc
sbb
xor
adc
shlb
imull
and
in
lock
push
cli
jne
jno
in
je
adc
imul
ret
xchg
jno
cmc
sarb
jbe
loop
mov
dec
push
pusha
sbb
loope
xchg
mov
orb
mov
push
push
data16
mov
pop
into
or
pop
iret
fs
push
loopne
cmp
mull
mov
and
push
shlb
movsl
or
push
pop
jl
sbbl
int3
inc
mov
mov
in
mov
xchg
cmp
aad
pop
inc
or
jge
std
adc
xor
into
xchg
mov
mov
xor
pusha
ljmp
mov
inc
mov
inc
stc
je
inc
mov
jmp
pop
int3
inc
icebp
mov
or
xchg
mov
pop
ret
and
inc
add
sbb
mov
mov
jns
cmp
pusha
jl
lods
and
pop
fisubl
out
jb
push
pop
aaa
mov
xchg
stos
dec
loop
mov
xchg
jecxz
adc
xchg
popf
mov
inc
push
es
jb
add
xchg
jbe
dec
sahf
mulb
into
fnstenv
mov
stos
cld
test
stos
lods
aad
and
test
jg
insb
sub
sarl
out
dec
and
add
rorb
xor
mov
mov
jb
pop
mov
fidivrl
mov
xchg
cmp
xorl
sti
fdivs
into
inc
cltd
sbb
mov
cmp
jnp
dec
rolb
repnz
dec
in
gs
pop
sbb
add
aad
xchg
shll
dec
push
jg
jge
mov
enter
gs
icebp
xchg
xor
jle
mov
or
push
mov
cmc
popa
ljmp
ss
inc
cltd
call
lock
sbb
nop
jae
xchg
xor
insl
cmp
lods
out
fidivrs
cmpsl
pusha
bound
hlt
dec
cmpsl
inc
loop
jg
adc
ljmp
lock
mov
cld
std
outsl
loope
loopne
jo
mov
mov
mov
cmp
rol
jmp
and
dec
cli
ljmp
and
insb
lods
outsl
push
dec
arpl
push
mov
jmp
into
jecxz
pop
retw
inc
cmpsl
pop
pop
int3
mov
in
ret
inc
jno
fcomps
pop
mov
aaa
bound
cltd
test
mov
adc
mov
sub
cmpsb
in
incb
and
lret
mov
xchg
mov
ficoml
mov
add
mov
enter
dec
xor
aaa
aaa
les
cmpsl
sub
mov
enter
ja
loopne
sbbl
push
cmp
xchg
daa
sub
test
adc
and
gs
das
xorb
mov
cmpsb
je
dec
stos
in
aam
pushf
addb
mov
out
or
in
popf
aad
pushf
mov
mov
push
rolb
mov
push
cltd
pop
int3
adc
jg
mov
sbb
loope
pushf
adc
in
fsubs
fsubs
inc
adc
mov
xchg
add
loopne
out
jle
jmp
cmpsl
push
cmc
inc
mov
pusha
xor
mov
mov
push
add
cli
lds
push
or
insb
hlt
test
push
ror
sub
lds
loope
cmc
fisttpl
mov
xchg
gs
repz
and
leave
pop
pop
aam
jns
jnp
hlt
cwtl
pusha
lahf
repnz
cmp
fcoml
pop
bound
out
jae
or
add
mov
sub
or
push
jbe
lret
lret
adc
and
adc
dec
sbb
jp
andb
std
aaa
cs
daa
int
mov
cmp
in
adc
mov
movb
mov
inc
pop
xlat
adc
testl
js
out
sub
int3
mov
int
mov
jge
add
push
or
mov
lcall
dec
lods
sarb
push
xor
cmp
push
sub
and
fld
mov
pop
mov
clc
dec
dec
mov
mov
sbb
fiaddl
pop
cmp
adc
sbb
inc
cmp
sub
lods
jmp
rolb
pop
fisubrs
adc
lods
jo
sbb
andl
bound
mov
arpl
cmp
inc
mov
jp
jb
movsb
call
add
mov
scas
pop
pop
out
mov
sub
in
mov
js
cmc
mov
loop
out
jbe
xor
push
mov
int
pop
jecxz
push
int3
xchg
js
sbb
jo
mov
lcall
jmp
daa
xchg
outsb
stos
loopne
mov
loope
je
dec
sbb
cmc
or
lods
sbb
cld
pushf
dec
adc
jmp
inc
mov
cmc
loopne
dec
mov
xor
xchg
movsb
xchg
mov
into
sti
lock
test
sbb
dec
xor
sahf
jne
xchg
sbb
fdivrl
adc
fsubrp
shll
arpl
sti
sbb
cs
dec
xor
jle
arpl
jg
sub
out
js
lcall
cld
push
iret
loop
clc
dec
inc
xchg
pop
and
sbb
push
xor
fsubl
aas
push
imul
sbb
add
cltd
push
and
idiv
in
cmc
pop
mov
mov
jp
mov
cli
das
adc
xor
pop
outsl
xor
in
scas
aaa
mov
scas
jbe
icebp
dec
ret
les
xchg
pop
jmp
or
les
add
xchg
mov
jbe
add
lret
dec
sbb
adc
jno
cmpsl
scas
fstpl
pop
push
jnp
mov
out
lret
xor
or
jg
xchg
mov
inc
cltd
int
sub
je
cmp
pusha
add
in
out
cs
stos
dec
mov
lret
scas
inc
es
push
shr
adc
ljmp
mov
push
es
add
jp
pop
and
xchg
sbb
sbb
pop
test
dec
mov
dec
push
jge
inc
pop
fists
lahf
add
loop
xor
test
sbb
orb
hlt
insl
dec
sub
ds
fidivs
data16
and
jg
jnp
sbb
stos
dec
mov
xchg
jo
xchg
inc
mov
pop
sub
stos
cld
cmp
call
mov
lret
mov
mov
push
fistl
jnp
pop
test
enter
nop
lea
push
es
sbb
daa
mov
adc
adc
cmc
mov
sub
jae
xchg
inc
xchg
sbb
adc
xchg
popf
loop
pop
sbbl
and
adc
jecxz
mov
and
adc
call
sti
dec
fnsave
loop
std
lret
push
push
push
jl
stc
jp
xchg
ds
mov
xor
cmpsb
adc
rcr
push
sbb
jg
pop
mov
imul
push
pop
sbb
stos
lds
sbb
adc
enter
pop
push
into
imul
push
push
inc
fdivrs
jl,pt
es
loopnew
pusha
pop
or
sub
std
mov
enter
das
or
dec
pop
push
iret
dec
lcall
pop
pop
push
imul
adc
mov
lds
lods
int3
adc
loopne
sahf
je
into
popa
int3
push
jecxz
daa
cmpsl
shrl
stos
mov
fidivs
push
push
scas
add
mov
push
int3
rorb
inc
xor
les
xor
jmp
out
idiv
sub
aaa
mov
and
dec
stc
call
outsl
aam
lahf
dec
mov
icebp
gs
mov
xchg
add
in
movsl
cmpsb
fsts
shl
pusha
shrb
jbe
push
loop
aaa
lcall
inc
outsb
mov
and
fmul
shll
inc
or
pop
testl
ja
mov
mov
js
xchg
leave
cwtl
sti
cmp
and
shlb
imul
mov
xor
jne
mov
dec
jge
sub
inc
and
shl
fstpt
jle
pop
sahf
insl
push
stc
iret
cwtl
or
push
rol
pop
inc
mov
sbb
jbe
mov
loop
fstpt
out
lcall
loope
js
das
popf
xchg
pop
cmp
push
bound
sbb
js
mov
xor
jns
sar
pop
cmpsl
in
pop
add
lods
das
adc
in
push
mov
pop
pop
push
or
and
add
jle
fnclex
fidivrl
cmp
mov
mov
ret
mov
or
inc
inc
mov
adc
lock
mov
addr16
js
stc
fsts
cmp
es
dec
cmp
mov
add
ds
pop
bound
leave
and
sti
fcompl
inc
jne
lcall
sbb
loope
rclb
sbb
sbb
icebp
add
fisttpl
cmpl
subl
aam
cmpsb
cmpl
movsl
jle
bound
jmp
xchg
clc
jle
ja
push
lahf
sub
negl
sub
popa
mov
mov
lods
mov
shld
or
aad
mov
or
and
jae
cld
jnp
dec
mov
jle
xchg
pop
push
lods
mov
incb
jbe
ds
adc
sub
shll
adc
roll
lds
mov
mov
ljmp
aas
mov
pop
mov
fwait
pushf
cmp
hlt
addr16
cmp
jo
pop
cmp
loopne
lret
sbb
shl
out
pop
ljmp
test
in
sbb
pushf
xchg
addl
cwtl
jne
and
dec
dec
inc
inc
mov
cmpsb
popa
mov
shl
je
negl
shlb
pop
leave
movsl
add
inc
push
push
push
aad
jge
addr16
xchg
jb
and
subb
adc
dec
inc
jb
xor
mov
insl
push
pop
pop
sub
jmp
call
cltd
lahf
lock
aas
xchg
lahf
out
insb
jp
push
and
call
rcrl
xchg
leavew
stos
lahf
push
ss
and
dec
in
es
enter
lret
imul
nop
imul
call
sub
and
je
ficompl
mov
mov
pop
icebp
fsubs
pop
mov
pop
dec
jp
or
sub
push
adc
sub
loope
mulb
icebp
in
and
dec
mov
inc
jp
sbb
xchg
in
sahf
add
loop
int3
fdivrs
mov
cmp
inc
dec
lcall
das
mov
int
xchg
addr16
ss
inc
das
jle
mov
pop
lret
pop
ret
int3
adc
dec
in
lods
push
ficomps
add
mov
pop
test
pop
mov
or
dec
movsl
mov
arpl
cmp
jge
repnz
and
xchg
mov
xor
push
pop
jl
cmpb
pop
scas
icebp
jns
daa
movsl
push
mov
and
push
fs
lds
pop
jl
inc
and
mov
dec
and
jne
das
es
out
mov
imul
inc
xor
inc
sbb
dec
sbb
mov
cwtl
adc
mov
mov
pushf
adc
push
mov
xor
or
sub
push
sti
cld
test
daa
aam
xchg
std
stos
jmp
inc
aaa
mov
pop
add
ljmp
mov
repnz
pop
lret
pop
enter
cmp
jns
cmpsl
sahf
push
nop
adc
add
rolb
xchg
mov
xor
sub
adc
xchg
insl
xor
jbe
dec
dec
rcr
ss
dec
and
xor
jp
sarb
and
ss
sarb
inc
test
lahf
or
add
mov
fistpll
decl
dec
mov
sahf
test
daa
into
xchg
fwait
mov
xchg
fistpl
add
inc
sub
push
clc
cs
mov
adcl
ljmp
sbb
xchg
sahf
cmp
xor
mov
adc
pop
mov
pop
insb
mov
mov
repnz
or
adc
mov
mov
and
adcl
stos
pop
es
stos
pop
add
mov
repnz
loope
into
dec
mov
add
jb
fcoms
jl
shll
xor
cs
fs
cmp
dec
xchg
cs
lret
and
push
lret
cmp
sub
clc
cld
xchg
popa
pop
repnz
lea
xchg
mov
dec
std
fwait
andb
jmp
mull
pop
cmc
mov
loope
jle
sub
test
pushf
sbb
mov
mov
ljmp
jno
mov
scas
jp
cli
mov
jbe
push
cmpsl
mov
jp
icebp
xchg
mov
pop
outsb
ds
lea
lret
dec
lcall
in
fwait
sub
ja
mov
mov
inc
pushf
mov
mov
jb
aam
xorb
mov
nop
dec
dec
out
dec
gs
pushf
inc
mov
lcall
dec
lds
xchg
aad
dec
and
pop
shlb
arpl
mov
cmp
inc
pop
decb
mov
mov
pop
pop
mov
shrl
lahf
mov
sti
cmp
mov
ljmp
pop
and
push
inc
mov
out
adc
out
pop
clc
mov
movsb
je
mov
jp
dec
push
lcall
lret
adc
push
shrb
mov
dec
jmp
mov
push
enter
sarb
daa
pop
cltd
mov
sbb
dec
sub
addb
mov
ret
jle
in
pop
repz
sar
out
mov
mov
into
xorb
dec
test
cmp
dec
fcomps
xlat
out
xor
jp
sbbb
les
lock
sbb
sub
sub
test
cmp
inc
jns
cmpsl
or
addb
push
outsl
pushl
in
aaa
mov
xchg
or
push
pop
push
fmuls
std
jne
pop
stos
push
inc
ss
test
ja
shl
push
mov
push
and
xor
pop
frstor
lock
in
cld
xchg
mov
lret
shl
pushf
xor
inc
hlt
pop
jge
cmp
sbb
in
and
enter
movsb
imul
push
and
cmpsb
shrb
push
and
movsl
ret
and
jo
mov
popf
push
movsl
xchg
adc
jp
push
lret
ret
pop
xor
jecxz
imul
cli
jge
lcall
das
mov
pop
mov
push
dec
lods
push
mov
mov
xor
out
sahf
cwtl
sub
sub
jae
div
dec
push
out
scas
fcmovnb
sub
and
cmp
dec
jle
pop
xchg
lds
mov
cwtl
mov
lock
inc
ret
aaa
mov
mov
sub
mov
shlb
fwait
add
cmp
js
cld
stos
pop
ljmp
jle
shll
iret
mov
xchg
popf
lcall
out
ret
pop
leave
and
push
inc
cmpsl
jns
js
bound
bound
mov
mov
dec
pop
sbb
or
dec
inc
mov
fdivs
fcmovne
es
std
or
testb
mov
cltd
push
aas
jo
pop
mov
aaa
popf
in
inc
xchg
cmp
xor
test
fsubl
mov
aad
adcb
aas
dec
mov
or
int3
test
lcall
out
xlat
pop
inc
lret
mov
sub
inc
daa
adc
xor
mov
mov
arpl
fwait
sbb
xor
sub
call
xor
repz
and
xchg
mov
inc
inc
adc
hlt
adc
clc
sub
insb
push
mov
dec
inc
cmp
ljmp
and
lcall
xchg
sub
rcr
fildll
lcall
xchg
xor
shlb
sub
xchg
or
jns
sbb
mov
add
es
dec
cmp
mov
cmc
and
js
jbe
mov
dec
mov
jl
les
fcmovu
aaa
dec
jno
in
inc
movsl
dec
or
ss
ret
mov
and
sbb
mov
cwtl
inc
sub
sarb
pop
cmp
xchg
inc
pop
jae
inc
xchg
inc
out
int3
cltd
jecxz
xchg
dec
in
and
push
aad
sbb
mov
and
jge
repnz
jbe
enter
cmpsl
xchg
xchg
icebp
and
and
ficompl
mov
aas
adc
dec
jl
add
roll
mov
push
fsts
jns
insb
and
push
xchg
ljmp
mov
cmpsl
push
pushl
adc
lret
rolb
push
or
cmp
std
add
or
lret
mov
jl
cwtl
jp
lahf
out
or
and
mov
clc
xor
sti
aas
xor
and
or
roll
stos
lahf
mov
xlat
fstl
imul
push
dec
jns
mov
xor
lods
xor
lds
lea
sti
add
push
jbe
hlt
and
ss
test
mov
sbb
cwtl
test
mov
outsb
mov
lahf
clc
popf
aaa
pop
mov
inc
dec
xchg
add
lcall
jnp
push
les
adc
jge
rcrb
mov
aas
lods
and
mov
and
cmpsb
bound
test
ljmp
cmp
test
cmc
shll
mov
mov
ljmp
roll
sahf
xor
jp
xorb
ljmp
add
push
stos
mov
fbld
xor
stc
jae
xor
sub
das
scas
loope
mov
cmpsl
add
mov
mov
popf
adcb
push
shl
jb
cltd
xor
add
or
mov
xrelease
xor
cmp
out
aas
js
mov
cltd
adc
daa
js
pop
adc
pushf
popf
sbb
sbb
sbb
xchg
fisttps
pop
xchg
mov
stos
loope
push
sbb
test
aaa
jb
decl
inc
inc
ss
pop
push
jae
shlb
out
sbb
xchg
xchg
sbb
lcall
pop
fcmovnu
add
or
cli
fdivs
test
test
pop
or
xchg
call
cmpl
sub
mov
sti
aaa
imul
jl
cmpsl
lock
jbe
inc
mov
cltd
xchg
push
fisubl
mov
sub
mov
aas
sbb
adc
test
arpl
or
repz
jecxz
fmuls
mov
scas
xchg
xchg
dec
dec
addr16
stos
mov
pop
push
ret
rcr
pop
ds
pusha
sbb
pop
movsb
sub
enter
add
cmp
adc
sbb
fstpt
inc
leave
or
inc
clc
inc
insb
inc
bound
rol
sbb
add
gs
repz
loope
fistl
push
dec
stos
daa
fimuls
push
mov
jg
mov
sub
iret
lods
fisubrl
lret
cli
shlb
mov
scas
repz
dec
in
insl
fisttpll
mov
stc
xor
dec
addr16
mov
hlt
out
sub
mov
dec
es
in
add
mov
dec
sub
ja
cltd
ja
int
xlat
mov
bound
sbb
jb
xchg
outsl
xchg
mov
jecxz
push
insl
adc
cli
xor
ja
or
adc
mov
divps
or
mov
gs
and
addr16
mov
dec
test
inc
sahf
mov
cli
mov
mov
inc
testb
adc
and
xor
xchg
mov
push
adc
cmp
jns
mov
ret
inc
mov
pop
fwait
test
in
roll
dec
push
jbe
pop
pop
push
and
iret
pop
cmpsb
je
add
push
dec
pop
xlat
movsb
fs
sbb
or
fnstsw
jg
mov
sub
or
add
shl
add
push
ss
leave
adc
shl
pushf
dec
mov
sbb
scas
test
test
hlt
icebp
push
movsl
add
repz
push
mov
mov
push
dec
outsl
cwtl
mov
xchg
mov
stc
lods
push
data16
push
mov
incl
or
push
jae
stos
fidivl
xor
or
iret
xchg
outsb
pop
addr16
pop
or
sub
inc
arpl
dec
or
icebp
rcrb
lcall
stos
pop
loope
inc
mov
rcrb
inc
ret
iret
popa
pop
lret
pop
sahf
sbb
dec
cmc
mov
adc
xchg
add
add
or
inc
sub
inc
cwtl
movb
jne
test
je
fstpt
loop
aad
clc
sbb
movsl
fstps
and
aam
xchg
decl
ficoml
scas
pushl
mov
loope
fbstp
pop
adc
loopne
frstor
adc
in
sub
dec
lods
hlt
lret
xchg
aas
enter
xor
mov
inc
or
sbb
cmp
and
jmp
jp
jo
mov
add
addl
iret
and
andb
sub
fisubs
push
sub
dec
push
fsub
fs
add
jne
and
sub
das
xor
lahf
ja
loop
push
loopne
mov
jno
adc
push
adc
ret
xchg
dec
call
test
adc
sbb
fisubrl
lds
inc
in
lcall
dec
repnz
mov
shrl
dec
inc
cld
leave
jg
loop
test
jmp
and
bound
js
mov
pop
stos
jp
fidivrs
lods
in
das
enter
pop
or
mov
mov
nop
aad
cs
cmp
pop
lods
mov
in
sub
imul
xchg
pshufw
enter
mov
xor
xchg
orb
mov
jae
test
mov
jl
xorb
lods
insb
lret
lds
sub
movsl
xchg
or
ret
cmp
and
sahf
mov
sub
mov
fstpl
ja
mov
jno
stos
sbb
xor
inc
xchg
mov
mov
ja
or
xor
push
dec
dec
rcrl
mov
lock
sub
cld
and
mov
add
cmp
jae
xchg
arpl
jp
xchg
or
leave
mov
mov
aaa
addr16
adc
test
fistpll
jb
jg
jmp
xchg
icebp
sahf
mov
sbb
ja
jb
add
sahf
into
jl
outsl
icebp
scas
lret
mov
pop
mov
call
mov
test
xchg
and
push
push
adc
xlat
icebp
daa
sub
xchg
mov
loope
divb
lret
in
ljmp
xchg
gs
inc
push
dec
and
adc
loope
clc
mov
mov
mov
popa
xchg
lock
dec
les
pop
xchg
stos
push
out
xchg
stos
pop
adcb
sub
add
dec
call
sub
push
mov
xor
rol
xchg
ja
mov
repz
out
fistpl
cmp
repz
iret
stos
imull
imul
and
sti
and
mov
jne
and
fucomi
dec
mov
add
mov
push
xor
xchg
pop
js
aam
sub
adc
dec
cltd
and
rcrb
mov
sub
insb
or
xor
or
jmp
outsb
pop
ss
sbb
loop
mov
add
adc
fcmove
adc
inc
xor
push
scas
adc
cltd
imul
push
mov
push
rorb
popa
repz
out
stos
hlt
dec
stos
xchg
call
pop
xchg
popa
push
sub
outsb
push
in
ljmp
cmp
pushf
fs
or
jne
in
mov
out
or
jo
daa
and
push
push
add
shrb
pop
mov
fwait
and
sub
fldenv
lret
adc
sahf
rclb
mov
fsubrs
inc
jb
out
dec
pop
adc
push
adc
in
sub
lcall
mov
iret
xorl
push
cli
dec
test
dec
lds
int
mov
xchg
pop
cli
fists
adc
repnz
daa
cmc
arpl
stos
cmp
lcall
mov
sbb
add
jno
std
loopne
hlt
inc
xor
xchg
das
das
ds
jp
dec
and
incb
mov
mov
out
push
outsb
cmp
lock
cmp
pop
mov
pushf
add
stc
ds
pop
sub
lret
sbb
insb
cltd
pop
test
jnp
mov
scas
add
dec
sbb
mov
or
inc
movsl
inc
or
jge
das
rclb
mov
mov
pop
jnp
add
push
or
xchg
pop
sarl
jl
add
xchg
out
into
js
popa
jae
pop
fcmovne
cmp
cmpb
inc
loop
mov
xlat
imul
cmp
mov
repnz
mov
add
xchg
mov
xchg
add
adc
aas
pop
pop
pop
lods
cld
lcall
loopne
lret
out
enter
and
aaa
sbb
loop
mov
adc
es
in
gs
dec
mov
xchg
inc
mov
call
daa
inc
call
fldcw
and
into
imull
int3
stc
aas
jge
fcompl
push
into
icebp
inc
mov
fnstcw
test
sub
cltd
cmp
nop
mov
popf
int
enter
into
mov
aam
and
xchg
clc
sub
inc
test
pop
testb
cmp
adc
and
movsl
ljmp
ljmp
int3
lods
jbe
and
mov
jb
adc
test
je
xchg
js
fsubs
inc
sbb
subl
arpl
lret
cmp
pop
dec
mov
sbb
mov
lahf
mov
fsts
pop
cwtl
cs
pop
sbb
dec
pextrw
xchg
cld
loop
out
xor
ds
cmc
sbb
mov
sub
adc
in
push
sub
pop
repz
mov
in
lods
int3
jge
jmp
dec
psrlw
mov
inc
xchg
or
decl
shrl
xor
jecxz
lock
jg
mov
nop
repnz
adc
mov
xor
sub
push
jne
push
roll
mov
push
and
fldenv
jg
test
push
push
cmp
lret
js
push
sbbb
xchg
or
sti
mov
in
xor
dec
adc
xchg
push
jle
jns
push
dec
mov
lahf
jg
sub
stc
out
decl
aas
push
pop
xchg
inc
fwait
leave
or
jbe
sbb
dec
dec
icebp
in
sbb
out
jo
gs
int
pop
loop
push
mov
lret
add
imul
ljmp
cld
dec
sbb
je
xchg
int
test
jp
push
pop
mov
pusha
neg
loop
sbb
cmp
add
pop
sbb
sbb
sahf
clc
fs
cmc
out
mov
dec
mov
in
outsb
bound
std
sahf
cs
and
into
scas
adc
mov
retw
sbbb
test
mov
insl
mov
mov
sub
xchg
rorl
out
push
mov
popa
mov
and
push
pop
and
inc
es
xchg
push
test
adc
lret
test
ret
inc
xchg
test
inc
testl
cmpsl
add
movsl
je
ss
es
pop
cmpsb
jl,pt
cmp
pusha
aaa
xchg
das
in
out
or
aam
outsb
fwait
and
mov
mov
cmpsb
lret
lret
fisttpll
pop
pop
jle
jbe
out
pusha
push
test
pop
test
sbb
jge
js
mov
imul
loopne
dec
sbb
aam
loopne
cli
popl
out
mov
mov
in
cwtl
int3
sub
iret
push
pop
subl
loopne
mov
es
sbb
jb
movsb
xchg
popa
aad
xchg
push
lods
add
fsubr
mov
ds
adc
jle
pop
mov
pushf
aam
add
jb
xor
mov
sbb
add
fildl
lahf
das
jnp
cmpsl
or
inc
sub
inc
lds
mov
jns
sahf
in
and
test
in
and
faddl
bound
pop
mulb
popf
push
cmp
mov
rcrl
loopne
xchg
and
loop
fists
xchg
stos
push
push
and
push
mov
mov
xchg
rcrl
mov
xchg
xchg
xchg
adc
test
xchg
test
ret
orl
pop
pop
pop
mov
push
fsubrl
aad
repnz
pop
xor
loopne
pop
decb
and
ficompl
sub
sbb
and
and
loop
push
push
popa
iret
dec
jecxz
dec
out
mov
adc
or
movsl
adc
movsl
mov
loopne
pop
and
mov
iret
sub
dec
and
jb
idivl
icebp
pushf
xchg
jmp
mov
test
fs
cmc
ret
lahf
or
imul
shlb
shlb
pop
in
adc
or
mov
push
lahf
ss
or
push
pusha
loopne
pop
inc
jae
or
ljmp
ja
and
rcl
cld
xchg
lahf
repnz
jnp,pn
push
orb
cmp
xchg
sub
loopne
mov
pop
or
pop
int
adc
sti
fisttpl
sbb
scas
cmp
fcomps
test
aas
aam
jle
adc
add
jge
andb
jne
leave
nop
popf
imul
jbe
imul
repz
mov
mov
xchg
push
ffree
movsb
sub
push
adc
dec
cmpsb
mov
sub
dec
mov
and
push
shlb
test
cmp
xchg
xchg
cmp
aas
cmc
sbb
xor
add
lcall
pop
sar
in
stc
std
adc
add
shrb
xlat
inc
xor
addb
mov
sub
jle
cs
in
popl
xor
addr16
mov
mov
loopne
and
push
mov
call
sub
mov
and
lret
push
add
mov
ud0
push
gs
push
mov
mov
xchg
push
mov
pop
sub
xor
adc
clc
jb
or
push
xchg
ljmp
push
aam
inc
sahf
add
outsl
iret
jp
sub
mov
pop
js
subl
jl
mov
int3
sbb
insb
imul
jg
mov
cmpsl
mov
dec
cltd
or
repz
sub
imul
adc
jns
push
push
adc
movl
subl
lds
fucomp
adc
fidivl
andl
lahf
sub
jbe
xor
mov
mov
mov
subb
xor
in
cld
mov
fs
sub
xchg
or
lcall
pushf
hlt
lds
repnz
imul
or
ja
out
mov
leave
jge
xchg
scas
cmp
sbb
icebp
mov
pop
fwait
aam
cwtl
cwtl
ja
test
pop
push
lret
and
cmpsl
sti
mov
roll
or
adc
ss
cs
out
rcll
mov
dec
jns
cmp
sahf
inc
mov
push
lret
out
addr16
and
push
sub
mov
and
sub
sub
xchg
pop
sbb
and
xchg
xor
push
cmp
in
xor
icebp
ljmp
paddd
mov
mov
in
mov
insl
rorb
bound
cmp
data16
stos
sbb
lea
jmp
std
pop
lahf
cmpsl
popf
daa
or
pop
bound
xchg
xchg
pop
add
mov
mov
mov
sar
inc
lahf
mov
mov
std
jle
dec
jle
aaa
nop
popa
jge
mov
sar
pop
lcall
cli
gs
movsl
inc
mov
test
inc
pop
cmp
aaa
pop
arpl
jmp
inc
adc
mov
mov
aam
or
cmp
push
or
loope
lods
or
fistpl
stos
cwtl
push
mov
inc
test
mov
mov
mov
mov
or
ljmp
add
sbb
movsl
cmp
mov
out
jb
stos
jnp
data16
dec
sbb
int
arpl
sbb
int
test
nop
mov
add
push
add
inc
mov
adc
imul
ret
stos
mov
mov
pop
push
xchg
aaa
dec
mov
cld
and
push
mov
aad
push
bound
int3
repz
mov
mov
push
in
shrd
nop
jno
xchg
jnp
xor
cmpsb
arpl
fs
and
out
cld
sbb
out
bound
scas
insb
pop
push
in
int3
flds
sub
gs
mov
pop
lds
les
or
into
jns
push
push
xor
fwait
jbe
mov
jo
push
xor
lods
rorb
sbb
daa
mov
loopne
inc
or
je
push
test
std
mov
xor
inc
mov
leave
into
daa
cld
test
inc
mov
sub
mov
jecxz
mov
std
jae
sub
lods
push
xchg
inc
sub
cld
lods
jo
mov
cmpsb
mov
dec
andb
pusha
inc
lea
enter
arpl
imul
sub
cmp
outsb
sbb
fldenv
jb
mov
mov
adc
push
fucomi
mov
sub
inc
rcrl
push
outsb
push
bound
lret
shrb
clc
pusha
lret
jge
pop
test
inc
inc
xor
push
sub
dec
mov
ror
lret
push
lret
and
out
pop
xor
adc
pop
cmp
push
lock
fisubrl
hlt
dec
push
jo
mov
cwtl
cmp
popa
mov
andb
or
mov
les
pop
inc
addr16
dec
ds
test
ds
sbb
cmp
pop
outsb
cld
xchg
add
daa
or
adc
movsb
clc
xor
mov
movsb
push
loop
xchg
aad
mov
inc
jns
pop
jmp
push
clc
push
jne
sub
pop
and
xchg
mov
mov
fidivrs
lds
push
enter
popf
cmp
mov
add
les
sub
mov
ficoml
cmp
pop
pop
setle
jns
scas
fwait
rorb
cltd
xor
into
xchg
add
pop
outsb
jl
mov
mov
in
aad
or
push
or
sbb
cmpsl
mov
mov
subl
push
mov
lret
clc
or
push
pop
xchg
mov
in
cmp
adc
cld
jge
push
push
push
mov
jl
dec
fucomi
add
int3
sub
mov
fnstenv
xchg
sub
pop
push
xchg
cmp
mov
sahf
mov
cmc
je
test
cmp
imul
dec
loopne
out
shl
insl
mov
add
lds
dec
outsb
push
jg
pop
sahf
mov
in
mov
fcmovbe
es
test
sbb
stos
rolb
popf
push
sahf
or
adc
pop
dec
sbb
outsl
adc
and
inc
mov
push
cmp
daa
cltd
adc
pop
cmp
sbb
xchg
cs
in
or
or
arpl
stos
lcall
es
negl
jne
dec
jmp
cmc
repnz
iret
out
imul
sub
jne
jg
jl
sub
sub
or
mov
das
mov
fdivrp
jg
std
add
in
jnp
mov
jmp
xor
sub
cmp
or
mov
dec
mov
mov
xchg
push
ds
jl
jo
dec
mov
vshufps
scas
psubq
jmp
xor
call
mov
jne
or
ja
repnz
jecxz
push
adc
fucompp
mov
push
adc
xchg
hlt
and
cld
fstpt
pop
mov
sbb
rolb
enter
or
sbb
movl
mov
in
addl
orl
outsl
sbb
nop
scas
lret
cmp
fcomi
pop
test
and
aam
shlb
std
or
xor
xor
xchg
in
xor
hlt
mov
xor
mov
ljmp
xlat
fwait
cmc
jl,pn
sub
add
ss
sbb
leave
inc
in
clc
loope
cs
add
pop
or
dec
mov
or
cmpsb
lds
pushf
push
push
and
in
sahf
sarb
mov
cmpl
and
xlat
aam
xor
mov
shl
jmp
sub
je
test
sub
shr
adc
mov
sarl
das
push
jb
iret
jecxz
arpl
jp
test
in
shll
sbb
addr16
push
ljmp
leave
repz
lret
stos
jne
out
pcmpeqw
xor
enter
int
ror
xchg
sbb
mov
jb
loope
or
jg
xchg
rcl
test
loop
push
outsl
cld
mov
and
movsl
lahf
xor
and
xor
cmovp
fwait
stc
shlb
cmp
or
mov
jl
test
sub
mov
xchg
or
sub
lods
int3
cmp
out
lret
jecxz
push
insb
sti
jnp
pusha
adc
jecxz
sub
mov
stc
cmpsl
sub
or
inc
sbb
lret
clc
jmp
cmp
mov
push
dec
sub
ja
sti
xor
js
fs
pop
lock
iret
jno
cmp
xor
arpl
js
data16
aam
pop
jmp
add
sub
jno
fwait
push
dec
incb
cli
not
lea
add
push
ja
arpl
push
jb
cmpsl
out
rol
jbe
xchg
and
test
outsl
fists
mov
adc
inc
leave
test
add
cmp
outsl
pop
inc
mov
xchg
nop
jmp
cmp
insb
or
cld
mov
xchg
xor
mov
movl
xor
jne
popf
push
arpl
and
popf
jle
jle
adc
icebp
xor
pop
insl
popf
lea
cmp
add
mov
outsb
and
fs
test
movsb
fstpt
xlat
add
in
sti
jecxz
xchg
hlt
arpl
test
cwtl
aas
jnp
push
mov
stos
lcall
int
or
mov
dec
fwait
dec
push
pusha
and
leave
jecxz
enter
inc
out
insb
ss
inc
jne
cmp
push
sub
das
push
imul
add
and
mov
loopne
shrl
mov
xor
mov
in
in
movsb
ss
push
xor
rcr
pop
shr
lret
pop
iret
adc
mov
std
shll
cwtl
je
out
in
jb
pop
pop
iret
cmp
xchg
cmp
sub
cmp
cmpsb
xor
inc
mov
ret
and
xchg
lea
jne
repz
int3
outsl
pop
sub
cmp
jae
adc
and
adcl
xlat
dec
dec
mov
push
fcompl
push
xor
push
adc
add
push
xchg
mov
out
pusha
mov
jg
sbb
imul
inc
jno
pop
pop
sub
or
fs
jbe
pop
fmull
fwait
pop
dec
xchg
outsb
insb
jle
jmp
jno
cs
cld
xchg
adc
fucomip
xchg
cmp
imul
movsl
mov
pop
pusha
in
mov
cmpsb
xchg
ljmp
add
xchg
mov
or
shrb
negb
lock
sbbb
inc
stos
mov
inc
xchg
cld
push
subb
fwait
adc
clc
popf
adc
test
xor
jns
in
cmp
xchg
and
scas
mov
loopne
cmp
jbe
xchg
pop
sbb
xchg
xlat
shll
xlat
mov
add
ds
dec
fbld
aas
add
pop
in
dec
popa
lcall
mov
jle
enter
push
loope
cmp
push
pusha
xor
imul
xchg
and
adc
stos
leave
aad
pop
jl
inc
xchg
lret
push
xchg
in
lret
jae
mov
loope
push
sub
sbb
div
dec
xor
mov
push
xor
jl
fs
add
stos
and
out
mov
mov
mov
in
cmp
repnz
cmp
adc
out
outsb
hlt
sbb
or
shll
jl
test
mov
mov
jl
mov
leave
insl
and
lahf
adc
pop
and
ja
in
clc
sub
push
push
in
dec
ret
pusha
jno
fdivrl
push
push
lret
or
std
fldcw
js
lret
ffreep
pusha
inc
xorl
cltd
pop
divl
push
divb
lods
pop
bndstx
stos
popa
lret
add
fwait
cwtl
pop
lahf
out
lea
add
clc
sbb
cmp
push
ljmp
mov
push
xchg
and
or
in
push
or
sub
dec
lcall
mov
adc
push
and
addb
insl
cmpsl
inc
aad
and
adc
popa
je
in
and
mov
adc
sub
fcompl
subl
push
stos
pop
cmp
in
mull
cmp
inc
idivl
add
xchg
dec
cltd
mov
lods
jle
push
mov
repnz
aaa
scas
and
push
cmp
inc
insl
das
test
cmp
xor
pop
mov
ja
movsl
daa
jp
lret
add
pop
mov
insl
sub
push
ds
ds
int
movsl
test
aam
ret
push
or
cmp
pop
push
sub
nop
mov
mov
insb
mov
std
jmp
pop
fcmovnbe
mov
or
dec
ss
pop
int3
clc
mov
test
add
aad
pop
inc
movsb
push
lahf
ds
test
inc
aaa
loopne
pop
sub
je
in
push
insb
sub
movsb
fldl
test
insb
test
pop
or
iret
pusha
adcl
add
add
imul
pop
and
in
scas
out
or
add
fucomip
add
mov
movups
mov
jp
cmpsb
popa
or
push
jns
adc
mov
xchg
xorl
incb
fnsave
sbb
push
jno
fistps
in
fs
les
cmc
pop
fcomps
sbb
lret
scas
push
mov
roll
insb
sbb
jp
mov
push
in
inc
xchg
out
push
test
pop
and
roll
decb
dec
lock
cli
fcoml
xorb
pusha
cld
sub
adc
cmp
add
cwtl
or
scas
arpl
inc
mov
out
lahf
mov
dec
sbb
aaa
fst
ljmp
xchg
mov
jge
aam
lea
insb
mov
pushf
mov
sti
push
nop
icebp
mov
and
rorb
in
aas
cld
push
jnp
insl
loop
lock
or
cld
sub
fidivs
or
mov
test
les
and
mov
fnstcw
cmp
aas
movsl
xor
decb
mov
jle
lods
mov
sub
cmp
jno
mov
pop
inc
ljmp
xchg
add
adc
dec
dec
rolb
rcrl
cmpsl
popa
and
rcll
into
cmpsl
jp
mov
mov
or
notl
cs
std
outsb
sub
test
jg
out
or
and
and
pop
mov
mov
test
mov
push
outsl
sbb
and
aad
or
xchg
aam
sbb
cmp
adc
ss
popl
mov
xor
pop
sbb
cmp
sub
sbb
out
lock
inc
push
cmpsb
mov
loopne
cmp
xor
int3
inc
jecxz
daa
add
jg
or
mov
ffree
shlb
add
out
fsubr
loope
push
sbb
xor
inc
push
or
cmp
sbb
jecxz
jns
mov
add
mov
fnstcw
icebp
insb
pop
and
dec
jle
push
inc
jmp
or
stos
call
out
pushf
test
jnp
loop
xchg
cwtl
mov
or
add
jne
add
jo
out
fldl
dec
out
cmp
ret
cmpsl
out
imul
stc
std
fsubp
movsb
sub
aaa
push
jmp
sub
sbb
mov
int
xlat
mov
loop
add
loope
lcall
ret
dec
sbb
gs
ljmp
cli
mov
mov
sbb
call
fadds
xor
sarb
pop
fldenv
sub
sub
fidivs
sub
jbe
or
mov
pop
inc
pop
pop
jns
loope
cmc
mov
out
dec
enter
sub
xor
lret
or
xchg
adc
ret
cmp
fdivs
adc
movsb
cmpsl
cli
int
aas
ret
inc
pop
movb
push
add
push
pcmpeqb
in
xor
test
jo
xor
mov
pop
add
loop
add
jae
push
xor
ficompl
test
jp
mov
repnz
stos
fnstsw
push
insb
pop
sub
push
mov
sbb
adc
mov
jp
mov
jmp
ja
mov
add
jecxz
test
xor
jno
jp
xchg
pop
aas
or
inc
or
jmp
imul
fbld
filds
iret
push
xor
jecxz
or
xlat
mov
xor
mov
test
dec
fbld
push
push
jle
mov
aam
mov
test
mov
jp
scas
sarl
cmp
fwait
mov
fwait
mov
lret
inc
popa
mov
mov
jnp
lock
inc
es
add
sahf
sti
inc
lret
pop
je
hlt
ffreep
cltd
jae
push
push
aad
in
mov
clc
sbb
cmc
and
add
jbe
inc
out
ljmp
insl
rcrl
jmp
sub
popa
orl
pop
popf
les
rclb
push
mov
sti
mov
push
mov
ljmp
loop
scas
dec
xor
mov
popf
stos
outsb
push
lds
inc
pop
in
cmp
cmpsb
gs
jge
mov
cmp
jmp
addb
outsl
into
stc
jo
xlat
lock
xor
cmpsb
adc
cwtl
inc
dec
sbb
xor
aaa
pushl
fstpt
xor
jo
push
push
xchg
outsl
and
imul
mov
xor
cmpsl
adc
mov
cmp
xchg
pushf
xor
fwait
orl
push
mov
es
mov
jge
ss
fisttpll
repz
xchg
insb
icebp
sub
cmp
jbe
mov
pusha
and
gs
mov
lret
xor
xchg
adc
mov
sti
sub
jns
dec
pop
push
daa
rol
mov
repz
int
jne
js
in
add
pop
lcall
adc
add
push
jne
pop
lahf
adc
fisubs
aaa
cli
mov
or
adc
das
scas
popf
add
ret
jg
movb
scas
gs
fsts
daa
pusha
lea
out
std
pop
or
aam
and
movsl
jmp
jbe
xor
or
jmpw
movb
or
sbb
movsl
and
and
icebp
xor
xor
lods
sarl
and
andl
pop
mov
and
fildll
sti
leave
ja
nop
cld
cmpsb
jbe
adc
mov
lods
pop
push
imul
jnp
jno
xchg
jnp
pop
mov
sub
jns
fs
insb
and
pop
insl
jmp
fcoml
pop
pop
insl
jmp
sub
scas
int3
xchg
neg
repnz
and
outsl
cmc
in
or
orl
add
xorb
stc
xchg
mov
in
inc
out
loop
inc
mov
jbe
cmp
leave
mov
mov
jle
call
repnz
imull
xor
sahf
or
out
mov
lods
sbb
mov
ficomps
into
iret
hlt
out
or
xchg
pop
add
fidivl
orl
bound
mov
push
shll
out
dec
aaa
sbb
pop
vmovaps
xchg
movsb
fnstenv
fists
push
test
sti
push
jecxz
rorb
das
adc
sub
pop
in
stos
dec
xchg
cmp
aad
inc
sub
pop
mov
test
push
mov
xor
sub
test
lcall
inc
mov
std
jp
xchg
out
dec
mov
sub
dec
or
inc
loope
xchg
notl
test
mov
cmp
or
pushf
stc
call
imul
or
and
jl
ljmp
push
sub
jp
dec
add
addr16
mov
add
bound
or
cltd
mov
mov
fstp
xchg
inc
fs
sti
sbb
or
adc
add
addr16
inc
sbbl
aaa
xchg
scas
daa
push
in
push
roll
or
mov
movsb
ss
mov
jae
adc
mov
push
ljmp
jg
add
leave
or
int3
jge
jns
add
dec
bound
cmp
sti
mov
es
jmp
decl
call
cltd
or
xorl
push
lret
dec
test
push
lea
aaa
testb
rcll
pusha
jp
push
mov
fiaddl
sub
clc
or
jle
aad
mov
das
cmp
icebp
out
out
cmp
sub
pop
movsb
jb
mov
xor
outsb
jae
data16
jp
test
fbstp
jle
andl
push
dec
push
orb
pop
sahf
inc
movb
mov
cmp
and
ja
xchg
mov
jp
mov
test
mov
mov
sbb
neg
cmp
or
xchg
xor
sahf
mov
loopne
es
xor
imul
and
outsl
and
or
dec
fldcw
inc
and
cli
int3
loopne
xor
mov
lret
xor
test
stos
pop
sub
xor
inc
mov
inc
adc
in
jne
in
lahf
aam
subl
into
push
fs
jb
popf
xchg
rdmsr
into
push
ret
adc
sub
add
mov
mov
xchg
fcoml
xlat
adc
mov
jle
cltd
int
push
sarl
inc
call
add
pop
jae
testl
jle
int
and
jp
fstpl
jg
loope
cs
fcmovu
sub
shlb
jp,pn
stos
push
sti
inc
pop
andb
xor
and
xchg
outsb
push
das
mov
dec
lahf
loopne
xchg
xor
jg
pop
lods
xchg
sbb
jg
dec
sub
cld
or
push
decb
movsb
test
mov
aas
mov
pop
pop
mov
mov
ret
jb
sahf
mov
mov
xchg
fsubrs
imul
push
aad
mov
int3
inc
sub
jnp
add
push
dec
mov
or
lahf
pop
add
jecxz
mov
inc
sbb
cmp
popf
fildll
stc
mov
add
inc
add
lret
add
cmpsl
imul
pop
outsl
dec
test
out
movsl
cmc
push
pop
add
test
pop
js
pusha
pop
sbb
mov
stos
mov
xor
ss
jp
pop
mov
sub
sub
outsl
loopne
adc
cmp
cmp
test
mov
xor
mov
ljmp
sbb
xorb
push
cmp
lcall
push
adc
xor
test
cmp
in
push
dec
cmp
mov
mov
push
aas
xchg
imul
xchg
xchg
xchg
add
xchg
dec
ljmp
call
out
mov
int
push
mov
sbb
mov
fldcw
jl
dec
int
jle
lret
jg
imulb
dec
mov
push
lds
iret
fists
fisubs
test
fst
and
push
adc
daa
mov
or
cmpsb
xchg
dec
pop
rcrb
inc
cmp
fcoms
int3
and
in
jbe
xlat
sub
pop
adc
dec
pop
incb
xchg
inc
xchg
mov
imul
ret
inc
mov
dec
push
add
push
inc
dec
iret
sbbl
push
mov
aas
and
in
or
sbbl
imull
xchg
mov
push
mov
jb
stos
rcl
daa
loope
push
lds
sbbb
in
dec
xlat
ss
push
out
jo
pusha
xchg
jnp
loopne
ror
sub
cmpl
push
or
pop
iret
xor
es
mov
imul
clc
pop
mov
lret
test
mov
mov
call
dec
mov
xchg
xchg
mov
jnp
mov
dec
xchg
fstpt
outsl
mov
mov
imul
ljmp
mov
or
iret
mov
push
xorb
stc
mov
push
movsl
bound
nop
push
sbbb
dec
xor
loope
mov
mov
mov
mov
mov
jge
insb
loop
je
mov
out
mov
pop
cmp
loopne
ds
test
imul
mov
push
in
pushf
pop
or
mov
enter
jle
inc
test
out
adc
xchg
mov
dec
and
movsl
cmp
cmpsl
test
dec
pop
xor
mov
popf
ret
inc
cltd
push
jo
xchg
or
mov
fisubrl
in
in
arpl
les
fildl
insb
daa
xchg
or
pop
inc
imul
pop
iret
scas
xchg
mov
loope
jae
jl
lret
rorl
pop
mov
call
lock
movsl
scas
sbbb
ss
adc
mov
jnp
jle
jg
fdivrl
loope
dec
jno
inc
test
add
or
pop
fwait
lods
subl
cli
iret
mov
jle
pop
andl
pop
into
and
imul
pop
mov
xchg
adc
shl
cmpsb
jne
jb
sub
addr16
xlat
dec
test
pop
pop
in
loop
test
out
mov
aad
add
je
mov
xchg
push
pusha
leave
jecxz
jae
sub
lahf
bound
push
leave
fidivl
push
mov
scas
sbb
cmp
mov
mov
fmul
and
outsb
out
incl
pop
mov
mov
inc
push
dec
inc
mov
imul
push
stos
rcrl
mov
outsl
mov
adc
jno
adc
dec
ja
mov
add
fistl
sahf
out
sbb
es
xchg
mov
lahf
inc
andl
out
adc
daa
sbb
movsl
mov
mov
sarl
pop
out
sti
aas
mov
and
mov
mov
jl
add
imul
icebp
jae
sub
ret
cld
adc
aaa
xchg
inc
fldenv
mov
mov
roll
push
rcrb
les
nop
xchg
sub
cltd
dec
inc
push
push
push
xchg
movsl
push
mov
add
push
xchg
icebp
xor
cltd
pop
popa
imul
mov
in
lods
sub
mov
and
hlt
popf
xorb
js
push
inc
aas
lahf
imul
xor
pop
in
lock
imull
loopne
adc
stos
arpl
cmpsl
bnd
ljmp
mov
jp
ds
outsl
dec
push
jo
lods
jmp
ljmp
cmc
out
lods
inc
ljmp
cmp
or
fdivp
jp
mov
adcl
inc
adc
lret
jae
test
jbe
les
imul
sub
inc
andb
adc
adc
xor
scas
decb
dec
dec
je
push
xchg
jo
adc
push
rolb
jp
jb
and
xchg
pop
push
or
hlt
out
mov
push
fwait
jl
lahf
imul
cmp
mov
fucomi
out
sbb
jge
rorb
mov
aad
inc
lock
ret
xchg
shlb
hlt
pop
adc
icebp
push
incl
das
in
ljmp
pushf
mov
pop
sub
cmp
mov
jle
pminub
push
mov
iret
push
mov
or
xchg
call
push
push
sub
push
movsl
jg
addl
and
mov
stos
shrl
es
inc
pop
jle
cmp
xor
push
mov
and
mov
icebp
jmp
cmp
sub
mov
aam
mov
ljmp
int
jecxz
pop
xchg
cmp
adc
push
shlb
movsb
mov
and
sub
cmp
movsl
ror
inc
out
inc
out
roll
xchg
mov
rorl
cmpsl
popa
pop
or
xchg
addl
xchg
clc
push
mov
mov
adc
popa
clc
adc
xchg
push
test
pop
mov
lret
je
leave
shll
inc
cs
in
push
dec
add
fsubrs
scas
cmp
mov
mov
repz
insb
push
adcl
pop
sub
rcrb
or
xchg
iret
mov
rcrb
push
or
es
js
pop
ret
pop
lock
pop
ss
sti
lret
out
cmpsl
lret
push
xchg
push
sbb
mov
pop
or
cmp
in
fistps
xor
daa
mov
push
cmpsb
mov
jno
ljmp
jmp
adc
rep
daa
sahf
push
fucom
or
push
bound
xlat
fsubl
push
adc
sub
mov
and
sbb
sub
dec
data16
lahf
push
xchg
xchg
dec
hlt
iret
xchg
inc
dec
cmp
add
stc
xchg
fldenv
xchg
jne
mov
sbb
popa
and
loopne
cmp
movsb
or
sub
sbb
add
divb
cmc
imul
test
cltd
es
loop
mov
mov
xchg
sbb
dec
cmp
inc
inc
push
push
outsb
cmp
movsl
add
and
cmp
mov
es
xor
shrb
hlt
cltd
mov
or
sarb
roll
stos
arpl
and
xchg
or
cs
xchg
or
shr
cli
out
and
inc
gs
inc
jne
mov
jb
testl
xor
mov
dec
out
jo
insl
jns
inc
insl
dec
pop
stos
ljmp
roll
jae
sbb
mov
data16
fidivs
xchg
sbb
mov
push
push
pop
or
test
fisubrs
add
mov
or
sbb
cmpsl
loope
ret
or
sub
hlt
pop
shrl
sti
das
pop
mov
mov
or
dec
add
cltd
add
jnp
shrl
mov
adc
sbb
dec
test
div
mov
insl
mov
cmp
pop
lds
sbb
push
bound
cwtl
add
int
xor
push
mov
fisubrs
xchg
jmp
call
inc
mov
out
daa
xor
fld
test
pop
rorb
in
aas
or
xchg
ret
jl
or
jl
cld
xchg
arpl
ds
popf
add
fistps
jg
mov
iret
inc
ja
loope
pusha
push
or
ret
inc
cmp
addb
outsb
decl
sub
cmp
sub
cld
in
jno
jne
andb
stos
movsb
pop
add
loope
cmp
loopne
mov
sti
ret
jae
lret
cmp
imul
mov
and
mov
sbb
aad
and
cmpb
cmp
lods
inc
xchg
dec
inc
xor
gs
jo
mov
out
inc
rolb
fistl
sbbb
daa
mov
cmpsl
xor
or
cmp
ljmp
jns
shrl
dec
test
lods
xor
add
movsl
xchg
push
xchg
lods
cmc
add
decl
sub
lret
out
and
lock
push
push
sbb
adc
sub
xchg
cld
mov
mov
push
test
out
xchg
fildll
aas
mov
imull
cmp
repz
mov
roll
into
add
add
cmp
jge
int3
imul
in
mov
sub
xor
adc
sti
add
push
repz
lods
rorl
add
and
and
xor
mov
inc
push
xchg
pop
cmp
xor
shlb
jge
call
jns
lock
push
int
pop
addr16
mov
cmp
lds
add
dec
pop
int
dec
stc
inc
mov
inc
mov
lods
xchg
shlb
stos
cmpsb
lods
pop
pop
je
push
inc
popa
rclb
aaa
add
enter
scas
xchg
dec
fdivrp
cltd
ljmp
mov
pop
hlt
jl
sub
shrb
push
outsb
inc
sub
mov
cmp
lcall
hlt
sub
hlt
mov
int
call
sub
test
aas
adc
adc
xchg
call
mulb
pop
outsl
je
mov
in
mov
xlat
sbb
sbbl
adc
imul
lahf
xor
imul
mov
and
xchg
mov
cmp
mov
cmc
cmp
sti
outsb
mov
lret
push
sub
jae
sub
data16
jle
sub
pop
and
xchg
inc
in
aam
jne
jge
mov
scas
sti
mov
sbb
dec
jno
add
add
std
cmp
mov
inc
fsubrl
lods
enter
out
cmp
loope
arpl
sahf
sbb
pop
jp
xchg
mov
sbb
dec
mov
rorb
imul
add
inc
in
repz
shll
pop
ss
inc
shrb
sub
pop
clc
in
ja
into
sbb
mov
mov
jg
in
mov
sahf
scas
sbb
cltd
inc
sub
mov
ror
bound
push
in
movsb
test
push
mov
outsl
jge
aas
pusha
in
lcall
bound
push
cwtl
fadds
mov
data16
pop
jmp
jne
pop
adc
fchs
cmc
outsl
jmp
movsb
push
and
and
adc
sub
inc
or
pop
hlt
fisubl
jl
out
mov
sub
dec
lcall
nop
push
mov
imul
std
xchg
push
cmp
cmc
add
adc
in
clc
in
mov
mov
xchg
adc
nop
xor
insl
imulb
xor
cmp
push
mov
sub
sahf
lcall
mov
into
push
clc
sahf
in
sub
js
rorl
add
cltd
inc
jbe
stos
test
push
scas
mov
mov
js
ffreep
mov
mov
mov
dec
xchg
das
sarb
lret
popa
add
adc
sub
sbb
or
shlb
mov
test
sbb
mov
into
add
push
push
std
jl
lods
outsb
jae
stos
fs
push
xor
outsb
imul
repnz
mov
mov
sbb
jae
insb
iret
dec
mov
mov
mov
fstl
jae,pt
add
mov
sbb
adc
cmp
mov
dec
mov
dec
loopne
mov
jbe
aam
jo
insb
jno
hlt
cs
and
push
rcrl
das
das
add
fs
js
aam
inc
and
out
cmp
fstpt
cmp
pushf
xor
dec
and
movsl
cmovb
push
clc
jbe
popf
loop
roll
popf
and
jns
loop
mov
add
mov
mov
lock
lea
push
pusha
lcall
push
out
imul
gs
lahf
mov
in
dec
cmpsb
movsl
lret
xchg
fadds
pop
push
repnz
in
fbld
pushf
jecxz
ja
shl
mov
andl
cwtl
mov
arpl
xor
or
pop
or
mov
adc
or
pop
sub
jo
mov
cltd
inc
scas
lahf
mov
fldcw
mov
sbb
dec
ret
outsl
scas
stc
iret
mov
mov
adcb
xchg
leave
sub
xchg
sub
or
xchg
push
sub
inc
ret
xchg
pop
cltd
mov
cmp
jmp
ret
mov
into
cld
lahf
mov
push
xchg
adc
cs
jg
adc
stos
or
mov
and
imul
jl
ret
mov
mov
mov
sbb
xlat
fnstenv
int3
dec
hlt
pop
cli
call
mov
cmc
fdivrs
pop
mov
out
test
push
xor
xchg
std
popf
mov
test
mov
rolb
or
fisubs
popa
cmp
xor
clc
and
push
xchg
cmovno
jno
sub
adc
icebp
int
outsl
mov
test
rcrl
xchg
push
mov
inc
sbb
sti
fldenv
sub
lock
push
ficoml
jno
jnp
xor
cmpsl
loope
es
clc
dec
shl
mov
xchg
jb
icebp
push
fstpt
aam
fwait
lds
xor
outsl
sahf
stos
push
ss
mov
inc
jb
rorl
jne
dec
out
dec
mov
jae
pop
leave
sbb
xor
pop
inc
lods
nop
xor
push
cli
enter
fildll
cmp
leave
rcl
insb
fwait
adc
shrb
mov
mov
cmp
aas
subb
push
bound
outsb
inc
pop
cld
mov
testl
lcall
xor
fldt
mov
dec
pusha
dec
ret
jmp
fs
xchg
xor
cmp
aaa
shll
rclb
push
xchg
jge
inc
add
cmp
cmc
fbld
mov
xchg
adc
and
mov
aad
sub
mov
pop
mov
sbbl
mov
jae
jno
cmp
mov
add
xchg
cmp
push
stos
pop
or
mov
out
xor
mov
loopne
push
sub
adc
jmp
daa
or
xchg
ss
daa
dec
mov
cwtl
mov
imul
add
sahf
pop
mov
ljmp
insb
cmp
inc
fstpl
add
cmp
jmp
repz
xor
imul
push
jecxz
shll
xchg
and
pop
sti
xor
mov
push
adc
jge
aas
repz
add
inc
add
in
mov
and
jp
dec
push
dec
arpl
pop
pop
lods
shrb
dec
pop
mov
jbe
lods
jge
and
mov
mov
jp
inc
push
sbb
xlat
cmp
outsb
xchg
add
fst
inc
cmpsl
and
or
movsb
lret
lea
jo
and
push
sbb
bound
jb
adcl
xor
popf
leave
or
jnp
in
mov
mov
fdivs
push
xor
adcl
sbb
pushf
pop
aaa
sub
mov
and
or
jle
cmp
movsb
or
aaa
in
jae
into
es
std
pop
scas
inc
cmp
je
sub
adc
jb
mov
ret
ss
mov
jl
xchg
enter
lea
scas
adc
fsubs
adc
jne
data16
inc
xchg
and
notb
adc
fstps
loopne
loop
mov
pop
fiadds
out
sub
adc
bnd
sbb
addr16
jnp
jnp
or
xchg
inc
into
pop
lods
jae
loopne
xchg
rorb
frstpm(287
inc
dec
push
sahf
xchg
ret
rol
ss
xor
jae
sbb
adc
addr16
sbb
mov
shrb
push
lahf
push
fidivl
lods
sub
lret
xchg
dec
ret
fs
mov
pushf
scas
je
je
xchg
in
aam
arpl
pop
jns
sub
stos
adc
jne
and
add
pop
loope
mov
in
push
pop
fiaddl
hlt
adc
test
shlb
test
dec
cmpsb
pop
mov
lahf
mov
mov
int3
xchg
xchg
pop
into
dec
fisttps
pop
into
outsb
ret
sub
xchg
sub
fs
gs
cmp
sbb
scas
pop
or
clc
mov
gs
aaa
and
jbe
xchg
fbld
call
inc
push
bnd
and
aas
in
rorb
sub
or
pop
inc
fwait
sbb
or
or
xor
mov
icebp
dec
and
orb
push
daa
mov
or
addr16
mov
push
sub
add
jo
cltd
push
call
test
xchg
xchg
xchg
push
xlat
mov
lret
push
xchg
imull
popl
xor
arpl
nop
aaa
and
push
dec
add
cmp
pop
jno
loop
push
sarb
aas
mov
xor
gs
pusha
push
mov
js
xchg
test
and
out
mov
roll
adcb
aas
xchg
fadds
aad
pop
out
das
nop
mov
xor
jmp
aam
mov
ja
test
mov
popa
adc
ret
fbstp
bnd
ljmp
aad
rcl
enter
leave
sbb
jbe
xor
rcrl
mov
inc
add
sub
cmpl
mov
jmp
push
push
and
leave
enter
push
das
jle
jno
out
into
mul
and
mov
test
insl
in
fsubs
pop
fists
adc
stos
push
dec
add
subb
or
mov
xor
cwtl
and
sbb
lock
stos
mov
adc
scas
jbe
shr
inc
arpl
jle
es
iret
aam
mov
mov
jo,pn
sbb
cmpsl
jmp
push
xchg
aam
pop
test
pusha
jle
sub
add
pop
push
sub
aas
scas
loopne
fs
orl
iret
inc
push
imul
add
leave
arpl
xchg
loopne
cltd
inc
lahf
push
hlt
in
adc
imul
fwait
and
in
cmp
add
cmp
jmp
jo
and
psrlw
inc
add
in
mov
xchg
in
es
dec
xor
mov
xchg
imul
insl
dec
mov
pop
dec
test
add
push
adc
mov
mov
int
imul
shrl
adc
stc
pop
loope
inc
inc
mov
call
jae
aaa
xchg
in
mov
ret
mov
adc
shll
add
icebp
test
mov
xchg
xchg
cmp
test
pop
mov
jg
outsb
fidivrs
add
or
pop
cmp
inc
or
sahf
cmp
dec
jns
pop
inc
inc
sub
sub
lret
pop
dec
or
into
scas
leave
aas
inc
sahf
pop
xor
xor
lea
test
int
jmp
xchg
jb
mov
sub
sub
pop
and
aas
mov
sbb
xchg
sarl
mov
in
pop
aad
fcoms
sbbl
cli
sbb
jp
push
addb
cmp
sbb
mov
mov
aam
cmpsl
pop
imul
mov
xor
int3
inc
and
lcall
gs
push
cs
fwait
ja
sbb
jnp
lds
push
push
sub
push
out
ret
lret
test
cmpsb
xchg
add
js
hlt
lret
shll
lret
bound
cmp
ds
xor
or
into
stos
repnz
dec
sbb
dec
mov
dec
stc
or
mov
inc
out
xor
roll
push
mov
vsqrtss
xchg
sbb
adc
sub
stc
pop
fldenv
mov
add
aas
fisubrs
sbb
fsubrs
mov
mov
dec
jp
test
xor
stos
push
pop
popf
push
dec
mov
movsl
mov
imul
addl
jne
cmp
adc
mov
adcl
in
adc
mov
xor
dec
data16
dec
and
cs
xor
xchg
pop
in
xor
stos
push
repnz
dec
cmc
cmpl
mov
jo
sbb
fisubrs
add
add
aam
movsl
sahf
push
iret
mov
inc
xlat
je
mov
pop
out
scas
cltd
in
mov
pop
bound
cmp
fs
jmp
out
inc
add
lock
cmp
lds
outsl
pop
inc
push
mov
jmp
cmp
imul
adc
jg
lods
mov
jb
std
mov
popa
int
jp
popa
and
mov
test
pop
in
jecxz
pop
or
add
scas
shll
loopne
dec
outsb
cmc
jle
xlat
inc
add
or
mov
outsl
je
test
cmp
arpl
enter
scas
fcmovnbe
jmp
outsb
mov
pop
xor
sub
js
stc
and
dec
imul
sub
xchg
jl
pop
jl
frstor
fldcw
inc
xchg
jle
sbb
decb
fdivrs
and
sbb
dec
cmpsl
mov
add
lock
dec
cmp
int3
xchg
sbbb
sub
cmc
rcll
js
pop
enter
jb
mov
call
adc
sbb
pop
clc
or
stc
out
lea
jb
out
cmp
aaa
jl
out
ret
cmp
sahf
mov
in
inc
cmp
add
sbb
mov
sahf
push
test
inc
in
aaa
ret
in
mov
daa
jnp
cwtl
xchg
inc
pop
fdivrs
aad
pop
in
pop
cmpsl
inc
jge
push
lods
insb
rorl
adc
mov
loope
jo
xchg
repnz
cmpsl
mov
mov
movsl
pusha
push
out
pop
stos
int3
or
test
fidivl
stos
les
pop
push
leave
mov
pop
push
rcrb
jp
insl
shlb
cmp
popa
dec
lods
mov
push
js
inc
jno
pop
mov
lret
mov
out
jl
out
outsb
dec
or
loope
push
add
das
sub
cmp
sti
push
xchg
popfw
pushf
and
inc
sub
jo
in
aaa
jle
xchg
pushf
xchg
loop
cmp
push
shrb
push
inc
push
ss
pop
into
out
loop
pop
cmp
daa
pop
pop
jbe
and
sbb
or
loop
dec
dec
push
test
push
scas
in
in
repz
stos
out
adc
mov
fists
shll
cmc
mov
xor
xchg
arpl
push
addr16
adc
ljmp
dec
insl
pop
shlb
or
leave
les
popf
pusha
push
aad
jbe
or
xor
mov
sbb
lahf
mov
lret
sbb
mov
mov
push
rcrl
inc
ret
imul
int
lods
pop
sub
push
xchg
mov
mov
jmp
adc
and
dec
sbb
and
sti
in
gs
jbe
daa
lcall
mov
inc
pop
cmc
and
adc
loop
mov
sbb
popf
mov
and
test
in
das
mov
test
cltd
or
and
push
jne
mov
stc
inc
inc
jo
movups
sbb
xor
adc
dec
into
mov
xchg
mov
cmp
push
leave
in
je
mul
xchg
mov
mov
mov
mov
aad
and
inc
pushf
xchg
jnp
dec
lret
sbb
fldl
and
fldenv
push
jle
les
mov
pop
and
dec
ret
inc
add
imul
cs
jg
inc
lea
in
call
xchg
ds
lds
hlt
movsb
mov
or
ljmp
cli
add
mov
std
out
xor
mov
repz
in
sbb
dec
movsb
xor
pusha
daa
out
je
nop
sti
inc
les
stos
shll
push
jns
mov
mov
cmp
notrack
outsb
aad
movsl
pop
sub
loope
add
out
xchg
and
add
cmp
mov
cmc
sbb
pop
out
test
outsb
sbbl
in
mov
and
inc
ret
pop
mov
add
dec
movl
sub
popf
mov
div
icebp
cmp
and
mov
mov
lds
mov
push
xor
mov
pop
paddusw
and
jbe
incl
lret
pop
cwtl
jno
test
adcb
lret
jmp
add
ret
movsb
int3
addr16
pusha
jne
sti
imul
inc
dec
dec
push
lock
das
mov
xchg
push
lock
push
cltd
lcall
out
ja
xchg
pop
sbb
push
xor
popa
mov
in
push
xchg
movsl
mov
lods
in
jge
mov
push
hlt
ret
test
sbb
push
sub
sub
bound
test
rol
push
pusha
inc
xchg
ds
or
push
data16
push
out
std
dec
mov
divl
mov
out
or
arpl
adc
dec
imul
popf
fldenv
into
std
pop
outsl
arpl
sub
arpl
pop
jge
adc
fistpl
xor
sub
rcll
je
adc
into
sar
jnp
push
fcoms
jl
js
movsl
lods
sahf
dec
cli
push
mov
aam
test
fs
add
mov
aam
jns
pop
mov
jle
pusha
dec
mov
js
sbb
pop
mov
cmp
in
out
addr16
test
cwtl
test
dec
xor
mov
cmp
and
push
test
jp
shr
cltd
mov
xor
pop
lahf
pushf
cltd
mov
jmp
push
add
sti
mov
jecxz
dec
push
sbb
mov
outsl
test
cld
loop
jmp
sub
xchg
jmp
mov
sub
js
pop
sbb
ss
andb
ss
ds
aas
lock
popa
jo
mov
gs
test
gs
inc
data16
mov
or
dec
mov
sbb
inc
out
jmp
pop
out
sub
incl
xor
jecxz
cmp
jne
es
mov
jecxz
ss
test
push
ret
add
stc
mov
das
repz
ficomps
ret
mov
out
pop
or
cli
leave
mov
pop
pop
sbb
sbb
ljmp
push
ret
outsb
cmp
imul
cwtl
xor
stc
xor
xchg
stos
loop
int
call
lea
pop
movsb
push
inc
pusha
imull
sub
loop
jmp
ja
adc
pushf
inc
into
sahf
push
rcr
pop
sub
std
mov
mov
mov
test
loope
loopne
xchg
sbb
gs
add
mov
rcr
sbb
movsb
dec
das
pop
mov
je
mov
fiadds
cmp
outsl
jmp
adc
cs
daa
inc
popa
push
lods
push
jns
xor
cmp
aas
or
sub
add
clc
pop
mov
lret
daa
jle
xchg
pop
in
cmp
cmpsl
test
xchg
mov
out
aad
sbb
jne
insb
loopne
aad
jle
aas
aaa
and
pusha
dec
push
into
stos
out
mov
inc
aad
lock
sbbl
ja
loopne
scas
lcall
adcl
push
jns
sub
jg
test
and
ret
or
loope
mov
mov
inc
arpl
arpl
add
mov
jb
cmp
arpl
fwait
jecxz
imul
push
sub
lret
sub
xchg
pushf
or
loope
sbb
dec
xchg
cltd
fists
add
pop
mov
movsb
shll
push
xor
loop
outsl
adc
jbe
lea
ja
test
push
ss
in
test
fyl2xp1
xor
ret
popa
pop
daa
movsl
jae
cli
out
int
xor
xchg
jg
mov
popf
xlat
jnp
sbb
adc
mov
lahf
stos
loope
movsb
and
ds
aaa
mov
mov
imul
sti
lock
cmp
stc
call
sub
push
movsl
loopne
inc
inc
or
mov
ds
addb
xchg
test
stc
push
xor
cmp
pop
pop
jmp
jge
mov
cmp
lock
test
roll
rcrl
cld
cmpsb
sti
sub
icebp
sub
pop
adc
pushf
inc
push
add
sarb
xlat
xchg
lahf
mov
shrb
and
mov
nop
inc
testl
mov
insl
sub
adc
xchg
inc
mov
sub
and
push
mov
aas
mov
imul
xor
adc
jb
int3
sbb
iret
dec
cld
jecxz
aad
xor
pop
cli
repnz
inc
mov
jecxz
fwait
mov
push
push
pushf
jae
sub
jae
inc
xor
adc
flds
nop
cwtl
push
ds
lea
dec
sub
xchg
mov
and
ljmp
mov
add
ljmp
bound
in
cltd
jge
jb
shrb
xchg
not
scas
movsb
or
mov
test
pop
movsl
ret
negb
mov
out
push
lods
mov
movsb
sbb
push
aaa
adc
rclb
mov
in
jp
mov
xchg
shr
sub
or
lods
cmp
cmp
add
sbb
or
addr16
jno
fmull
pusha
xchg
mov
add
and
iret
sub
adc
adc
iret
or
jl
push
add
stos
mov
aaa
xchg
shlb
fs
shl
xor
ja
imul
stc
test
cwtl
mov
push
adc
xor
lret
jne
dec
lock
outsl
loop
sbb
fmull
push
mov
gs
loope
dec
sbb
cmc
ja
inc
popl
daa
dec
sub
aad
addl
dec
gs
inc
cmp
or
ja
dec
mov
mov
mov
push
mov
inc
lret
dec
jl
fdivrl
popf
nop
adc
gs
mov
stos
imul
adc
imul
dec
and
les
cld
test
fisttpl
movsb
xchg
lock
imul
lret
cmc
push
xchg
gs
push
pop
icebp
cmp
ljmp
mov
pusha
mov
mov
mov
pop
xchg
sbb
inc
test
inc
jb
push
stc
or
ret
fdivr
jb
daa
repz
inc
jae
inc
ss
fstl
js
add
inc
pop
dec
movsl
dec
xchg
push
push
push
icebp
add
xor
mov
inc
ss
or
in
ret
dec
repnz
loope
dec
xor
ja
inc
mov
fcmovnu
imul
outsb
sbb
xchg
int
jl
xchg
adc
rolb
test
pop
daa
loop
sahf
rcll
das
dec
sbb
jns
xchg
mov
inc
jmp
bound
lods
or
ljmp
imul
imul
in
aam
movsl
loopne
dec
xchg
jmp
mov
mov
push
stos
movups
out
inc
mov
mov
xor
test
xor
dec
xor
mov
mov
sub
stos
clc
fstpt
outsb
or
mov
outsb
xor
mov
mov
mov
addr16
pusha
pop
mov
gs
pop
dec
subb
push
cli
push
sub
daa
cmp
jnp
fwait
pop
pop
out
mov
inc
jo
bound
cmp
mov
dec
adc
imul
or
enter
mov
daa
cmc
lcall
adc
add
cld
sbb
aad
pop
mov
mov
add
inc
imul
sub
shrb
cwtl
rorl
sbb
leave
mov
call
sub
sub
movsl
inc
mulb
int3
popa
repz
inc
sub
in
test
insb
cli
mov
sub
pusha
sti
sub
outsb
sbb
inc
xchg
push
xor
adc
cmp
jge
out
cmp
repnz
mov
jbe
jb
mov
stos
add
or
imul
hlt
mov
or
lea
mov
cli
addr16
fnstsw
sbbb
pop
pop
leave
cmp
in
test
mov
ja
insl
jmp
mov
aaa
decb
cmp
jne
cltd
adc
out
sub
fisubrl
jne
dec
mov
xorl
xor
mov
shrb
leave
cmp
xchg
push
xchg
jp
dec
cmpsb
jo
jge
lods
jg
pop
sub
push
or
jmp
mov
fmuls
fadds
sub
mov
lods
cltd
sub
jb
mov
adc
or
add
push
add
add
push
fidivrl
mov
add
jge
insl
jnp
mov
add
jecxz
aad
jbe
xor
scas
in
movl
sub
ss
cs
stos
inc
lahf
add
pop
sbbl
inc
push
test
mov
push
and
add
mov
loope
mov
mov
xor
std
inc
push
cmp
add
popf
call
adc
call
repnz
inc
or
es
stos
xor
outsb
repz
jl
mov
push
sarb
stos
sub
sahf
insl
cs
jbe
repnz
add
mov
pusha
mov
adc
mov
sarb
sub
test
xor
imul
jbe
cmp
nop
frstor
pop
cmpsb
test
inc
mov
sbb
add
rcl
lcall
scas
jl
pushf
push
xchg
adc
inc
push
jg
stos
dec
xor
aam
adc
in
out
mov
xor
xchg
imul
sbb
fwait
addb
cltd
fistl
fcmovbe
cltd
inc
dec
mov
aas
das
cmp
shll
mov
ficoms
jb
sbb
mov
clc
add
mov
xor
je
inc
scas
xchg
loope
ja
pop
test
push
or
call
mov
xor
mov
ds
rep
jp
mov
lahf
pop
hlt
sbb
mov
push
add
clc
jp
jl
dec
pop
pop
xor
sub
xor
dec
std
lret
xor
cmp
jnp
in
enter
loope
push
sub
xor
sbb
dec
cwtl
into
repz
loopne
xchg
push
stos
enter
mov
in
js
xchg
dec
sub
or
xchg
sub
ret
mov
lahf
and
mov
xor
mov
mov
mov
and
jo
sub
repnz
mov
cmc
cmpb
scas
xchg
ror
jne
jg
add
xor
sub
cmpl
push
loope
data16
xchg
sti
mov
mov
dec
push
rorl
mov
jb
push
popf
add
pop
loope
xor
inc
cmp
nop
mov
inc
pushf
mov
jnp
mov
xchg
dec
sub
xor
aas
leave
inc
jne
sub
inc
ret
xchg
push
sub
mov
out
imul
aad
stos
outsb
lea
pop
cmpsl
ss
mov
push
fwait
in
aas
and
test
loope
cmp
outsl
mov
arpl
cs
rorl
dec
sub
jl
aaa
fmull
pop
mov
shr
insb
lock
int3
fmull
jb
lea
cmp
mov
sbb
sub
or
inc
ficoml
cli
repz
out
xchg
shll
inc
xor
mov
push
mov
cmp
shrl
and
int3
lea
mov
jns,pn
imul
in
add
pop
rcll
dec
enter
pop
cmp
jmp
out
jnp
enter
inc
pop
rorl
or
push
mov
mov
mov
dec
in
and
adc
push
sbb
xchg
aaa
fisubrs
push
lock
adc
andb
aas
mov
sbb
shll
dec
xor
rcrl
inc
fcomi
mov
in
xchg
ljmp
dec
gs
fldt
push
mov
imull
add
loop
mov
dec
jno
pop
repnz
mov
mov
dec
hlt
cli
out
addl
add
pushf
pop
mov
pop
frstor
add
push
cmp
xor
cli
xor
imul
xor
ficoml
andl
pop
jne
xchg
shlb
jecxz
pop
sub
data16
jo
xchg
shll
push
sub
cmpsb
inc
movsl
repnz
pop
pop
cld
sbb
or
xor
fimuls
mov
jecxz
inc
jge
ss
push
sub
insb
push
into
xchg
arpl
jno
cmpsb
roll
aas
or
pop
push
xor
popa
dec
mov
int3
pop
xchg
movsb
add
fldt
or
fdivl
clc
xchg
sub
adc
mov
add
loopne
and
loope
scas
xchg
xchg
mov
mov
scas
xchg
and
rorl
int
push
mov
add
loopne
xchg
add
mov
inc
mov
jge
hlt
imul
or
xorb
mov
add
or
adc
mov
fcomps
pop
and
adc
and
push
sub
je
movsl
jbe
imul
sub
cltd
mov
add
push
pop
mov
cmpsl
jne
scas
fbld
mov
sbb
movsb
push
int
mov
loope
out
or
or
adc
xor
mov
mov
adc
fs
gs
lahf
in
mov
aas
fisubl
mov
xchg
mov
fcomi
push
outsb
sbb
repz
jg
inc
adc
jnp
and
fsubs
rcll
mov
lds
pop
sub
mov
add
inc
pop
and
ret
push
lret
dec
and
pop
add
fs
cwtl
or
aad
inc
ja
aas
dec
push
push
xor
sub
mov
fdivl
jge
dec
out
lods
outsl
mov
jle
notl
jmp
fimull
test
cmp
adc
ret
sub
jp
ds
cld
outsb
cs
xchg
mov
into
popf
dec
loop
mov
mov
sub
jle
dec
jno
sbb
rcr
xor
cld
pop
ja
stos
mov
ret
cmpsl
jecxz
lea
js
aaa
lcall
or
xor
test
je
and
into
jb
pop
sub
icebp
jbe
cmp
dec
adc
mov
iret
or
cmpb
into
xor
out
jle
sbb
cs
mov
aam
pop
push
pop
out
cld
mov
aad
popa
xor
lock
fdivrs
mov
adc
lods
ficompl
gs
aaa
xchg
rorb
rcrl
dec
jne
icebp
cwtl
lock
cmp
js
js
inc
sti
out
dec
xchg
inc
inc
and
sbb
jg
or
out
xchg
mov
push
cmc
cld
push
dec
mov
adc
xchg
adc
push
push
data16
outsb
scas
push
cmp
xchg
add
ret
mov
lcall
fucomip
into
and
cmp
or
push
dec
cmp
sbb
or
mov
fcmove
and
hlt
push
cmc
scas
iret
pop
addr16
mov
push
sbb
stos
gs
cmpsl
jns
mov
jg
pop
adc
mov
out
movsl
sub
out
sbb
or
inc
loop
pop
inc
enter
into
pop
ret
or
fcmovu
cmp
repnz
pop
or
sub
adc
pop
std
fucom
add
mov
test
mov
and
sbb
in
push
sbb
mov
and
or
add
jmp
mov
scas
jmp
push
sbb
jle
inc
push
pop
into
popa
adc
incl
test
sahf
dec
xor
movsl
jecxz
mov
push
enter
mov
or
in
outsl
addr16
iret
jbe
out
and
lahf
add
add
xchg
jecxz
pop
ja
fldl
xchg
pushf
fwait
mov
lea
std
stos
pop
xor
cmc
add
imul
cmpsl
xchg
loop
xor
cmpsl
sub
dec
das
test
dec
dec
pop
fucom
add
dec
ds
dec
dec
push
sbb
xchg
adc
bound
add
insb
sbb
int
test
loope
int3
xlat
ja
jle
push
push
sarb
repnz
call
jp
imul
adc
pop
nop
negl
sahf
pusha
leave
out
jge
or
ret
stos
ret
sbb
mov
xor
inc
push
movsl
sub
pop
add
ret
lret
fsubrp
std
xchg
dec
in
in
lods
inc
sbb
xor
mov
loope
es
sahf
cld
nop
cmp
lahf
test
ret
into
loopne
push
int
test
loopne
xor
ss
pop
lcall
push
rolb
out
loopne
push
dec
dec
ja
in
add
inc
imul
push
or
inc
out
sti
cmp
sub
out
es
bound
icebp
cmp
mov
mov
mov
je
nop
or
and
and
stos
out
add
fldl
jg
je
lahf
push
xchg
push
ljmp
mov
or
or
in
inc
stos
pop
lahf
xor
nop
jb
stc
ret
in
jbe
in
ret
fdivs
nop
loop
loopne
jae
daa
ret
data16
pop
cmp
jmp
or
inc
ja
loop
or
jbe
in
push
cmpsl
movq
dec
mov
jbe
sub
mov
sub
mov
cmp
jo
xor
stc
mov
xor
mov
mov
xor
test
mov
movsb
dec
scas
shll
inc
daa
sbb
aaa
cmpsb
mov
sub
daa
sub
push
insl
mov
sub
xor
xchg
mov
cwtl
and
mov
test
push
mov
dec
add
sub
imul
sub
jno
sbbl
sub
pop
inc
aas
lods
lods
adc
push
scas
push
nop
and
lcall
inc
inc
out
and
mov
stc
rcr
cli
fsubl
inc
inc
pushf
sar
pusha
push
mov
adc
xor
pop
and
cltd
repnz
sti
cmpsb
adc
int
add
inc
ret
nop
pop
dec
jecxz
dec
imull
testb
fcoml
loope
sti
mov
sbb
in
push
add
pop
out
lcall
jns
cmpsb
insl
pop
add
cmpsl
cmp
inc
aas
mov
out
fistl
adc
mov
push
ret
mov
out
int
inc
xchg
xchg
nop
iret
out
add
adc
xchg
cmpsb
inc
fdivr
pminub
daa
cmp
pop
xor
mov
in
mov
lcall
arpl
mov
jbe
push
inc
scas
push
movsl
popf
outsb
dec
daa
cltd
insl
xor
jns
cmp
scas
std
lock
jne
sbb
out
inc
push
sbbl
mov
stos
stc
pop
pop
cs
add
in
outsb
imul
out
pop
scas
jae
xchg
xor
adc
inc
lret
lds
in
sub
sbb
pushl
mov
ljmp
leave
mov
mov
xchg
ja
pop
out
mov
xor
cmp
fildll
out
mov
mov
xchg
push
push
inc
movsl
jmp
jp
in
and
andb
into
addr16
xchg
adc
lahf
rcrl
dec
stos
adc
cmpsb
dec
push
ret
xchg
mov
mov
arpl
dec
jnp
and
out
or
xor
jae
ds
repz
pmulhw
mov
cmpsl
test
popf
lods
xchg
negl
out
push
mov
cli
cltd
das
pop
daa
fnstenv
sub
add
daa
ljmp
pop
push
jmp
adc
adc
jmp
mov
pop
cmp
and
inc
lcall
cmp
daa
push
cli
jne
scas
or
out
out
in
mov
and
pushf
cmp
mov
xchg
ret
into
cmp
mov
pop
lret
arpl
cmpsb
out
xchg
or
lcall
xor
rorl
or
out
mov
iret
mov
popf
sti
call
dec
cmp
push
mov
add
mov
sbb
popf
mov
popf
lea
loop
fcom
and
scas
ljmp
pushf
jle,pt
jp
mov
sub
adc
outsb
stos
jle
sbb
xor
and
or
dec
lret
mov
mov
lret
mov
aad
test
arpl
or
icebp
loop
inc
ja
sbb
out
and
repz
cltd
adc
lcall
int
fcomi
movsl
movb
sti
add
arpl
out
or
pop
cmp
fwait
mov
outsb
jae
adc
jae
sub
push
xchg
int3
mov
aad
into
jp
adcl
pop
aad
scas
dec
mov
push
fwait
lret
scas
or
dec
or
xor
lds
mov
nop
lods
imul
sbb
jmp
fs
sbb
repnz
in
insl
test
scas
ss
iret
pop
pop
outsb
sub
lahf
out
pop
mov
jmp
les
fimuls
inc
movsl
cmp
ret
mov
leave
xlat
hlt
or
shlb
and
pop
fnstsw
mov
std
jl
dec
es
pop
xor
push
jge
adc
push
xor
pop
sub
cmp
stos
push
daa
xchg
ss
sub
addr16
cmp
in
sti
loopne
or
sti
pop
dec
pop
adc
or
mov
mov
lret
mov
enter
dec
push
decb
pop
push
sti
lds
sbb
dec
or
xor
sub
lret
push
mov
or
shlb
lea
jle
into
fcomip
pop
or
clc
out
ljmp
std
mov
inc
cmpsb
add
push
leave
mov
popf
test
push
xchg
push
xchg
pop
push
test
stc
push
inc
lcall
hlt
push
or
xchg
test
xchg
or
or
push
xchg
cmp
xchg
lods
adc
adc
idiv
xor
popa
subb
in
push
ja
sbb
dec
fidivrs
insl
lds
outsl
push
add
icebp
cmpsb
nop
jge
push
in
into
lahf
add
addr16
pop
mov
pop
std
dec
jle
hlt
arpl
imul
mov
and
rorb
mov
and
into
sub
mov
push
test
jge
scas
mov
or
arpl
mov
scas
data16
outsb
or
or
mov
in
je
stc
ja
dec
mov
pop
stc
loop
out
mov
repz
pop
mull
xor
stc
ja
je
hlt
sub
fimull
pop
jb
dec
push
enter
hlt
outsb
sbb
dec
lock
and
lret
stc
dec
jg
lds
pop
jl
jno
adc
fcompl
scas
or
and
push
sub
stc
xchg
inc
mov
sub
add
dec
mov
push
loop
mov
inc
fwait
mov
imul
fidivs
cld
mov
aam
rcrl
jl
cld
mov
inc
mov
lds
ret
mov
mov
push
and
into
add
xor
lods
pop
aas
cmp
xchg
lea
dec
and
add
sysret
lret
add
jnp
jnp
lds
test
rcrl
test
into
fmulp
add
and
stc
int
push
pop
in
cmp
aaa
hlt
lahf
sub
push
sahf
fildll
xlat
or
jl
outsb
call
inc
aam
add
xchg
add
mov
movsb
sub
aad
adc
mov
jle
fimuls
adc
stc
gs
lea
push
jmp
jne
inc
mov
mov
inc
or
jmp
jmp
fimull
cmp
bnd
xor
out
pop
pusha
rcrb
mov
add
fldl
lds
mov
xor
adc
mov
mov
mov
xor
or
aaa
je
mov
jle
lret
xchg
in
sub
addb
pop
pop
sahf
or
jb
sti
or
inc
subl
aas
push
sbb
push
jnp
jp
dec
jne
jns
test
in
bound
sbb
dec
loope
loop
mov
jmp
cltd
add
or
mov
lret
pop
jnp
aaa
out
mov
out
jnp
cmpsb
jno
stos
in
push
or
subl
mov
sub
xor
sub
insb
shl
out
aas
adc
jmp
sub
pop
repz
andl
movsb
mov
rcrl
test
lods
cmp
mov
dec
xor
lret
xor
fwait
sub
ljmp
pop
popf
stos
cmp
or
jo
xchg
inc
dec
faddl
fcomi
leave
jp
mov
mov
shrw
hlt
xchg
call
jne
pop
xchg
pusha
cmp
mov
add
lds
cmpsb
in
imul
mov
dec
add
push
mov
dec
pop
fwait
mov
lods
xor
outsb
xor
cmp
addr16
mov
jnp
sbb
imul
outsb
jae
sbb
aaa
popl
bnd
jg
std
pushf
xor
dec
and
pop
add
testl
xlat
popf
dec
out
in
adc
xchg
xor
clc
dec
sub
or
pop
xchg
adc
out
aas
outsl
aaa
mov
out
or
je
ret
jns
fucomp
xchg
mov
das
loopne
cmp
out
les
and
push
mov
xlat
lcall
popa
cmp
jne
adc
fstl
clc
shlb
mov
or
mov
shrl
pop
aam
std
mov
pop
test
in
xor
cmp
mov
in
cmp
daa
mov
aam
cmc
outsl
xchg
cmp
pushf
std
mov
jb
mov
push
test
lcall
sarb
loopne
outsl
and
repz
mov
adc
sahf
test
pop
lds
xor
dec
movsb
rclb
cs
sub
or
or
jo
loop
aam
push
push
stc
subb
das
xor
dec
mov
push
fsubr
stos
dec
add
xchg
insl
xor
int3
out
imul
mov
or
jg,pn
xor
leave
lret
cmp
and
sbb
mov
sbb
sbb
push
xchg
and
cld
aas
xlat
xor
ret
insl
xchg
sub
jno
mov
lret
loop
sbb
jae
int
mov
mov
or
fcmovb
push
jnp
enterw
int
iret
fiaddl
add
test
xor
xor
mov
ret
sbb
in
movsb
xlat
jns
mov
xor
inc
dec
cmpsb
push
pop
decb
rolb
xchg
push
out
inc
not
int3
xlat
data16
adcl
test
js
ljmp
push
mov
les
cmp
lock
int3
cmp
jmp
cmp
int3
aas
decl
pusha
pop
imul
jmp
adc
jo
cli
out
cmpsl
dec
push
ret
dec
mov
fcomps
cmp
inc
pop
dec
sub
loopne
fnstsw
cld
sbb
jmp
mov
pop
call
or
aam
mov
pop
clc
repnz
ja
push
mov
mov
ud1
mov
sbb
or
ss
adc
shll
lret
insb
xchg
xor
or
ljmp
repz
add
gs
pop
sahf
hlt
dec
mov
inc
and
mov
adc
xor
test
loop
cli
pusha
mov
call
pop
clc
testl
imul
xor
fdivp
jnp,pn
fmul
in
incb
mov
scas
ret
in
and
lock
test
scas
jl
jns
sub
xchg
div
insb
iret
lds
sub
pop
lret
scas
aaa
jne
out
mov
and
mov
in
mov
jecxz
mov
mov
sub
js
in
cmp
aaa
es
clc
sbb
jmp
insl
mov
adc
test
sti
mov
ljmp
in
fiadds
and
je
mov
mov
loop
in
dec
add
imul
andb
xlat
in
jns
lods
cmpl
xor
lods
pop
es
leave
cmp
jecxz
orb
movups
and
add
cmpsb
mov
cmc
dec
scas
mov
jl
adc
loope
push
mov
pushf
mov
stc
sbb
aas
xor
xchg
out
pop
daa
cmp
outsb
cs
push
jmp
pop
push
fldl
inc
xchg
stos
insl
cmc
aaa
ficompl
xlat
adc
data16
cwtl
lock
mov
cmp
test
int
and
and
repnz
jl
lods
je
test
cmp
mov
ds
es
pop
ds
cmp
add
push
mov
jecxz
adcb
and
jne
or
sbb
mov
and
rorl
cltd
lds
fisubrs
inc
mov
dec
jl
pop
in
sub
inc
adc
push
das
or
jb
out
sub
fmul
add
lahf
shl
out
pop
hlt
adc
das
sbb
pop
dec
shrb
or
mov
xchg
jmp
or
xchg
enter
dec
outsb
addr16
int
pop
mov
cmp
mov
cmpsb
inc
jmp
fstl
daa
mov
cli
filds
push
into
pop
pop
push
negl
sub
lock
test
push
hlt
push
sub
mov
lcall
ret
push
and
and
and
lods
push
popa
xchg
mov
add
pop
out
sub
add
out
mov
jae
addr16
shll
add
popf
lods
inc
dec
fdivrl
inc
mov
inc
movsl
mov
xchg
fcmovbe
loop
inc
imul
scas
inc
xlat
lret
jp
sub
ds
es
sub
dec
mov
test
fstps
sub
fimuls
and
jge
inc
and
sbb
fstpl
les
add
add
xor
sahf
and
dec
hlt
or
cmpsl
push
jg
mov
je
sbb
jb
sub
fists
mov
int3
bound
loop
in
fcomip
fisttps
pop
sbb
call
in
insb
dec
mov
push
scas
mov
jp
pusha
js
rcl
or
sbb
push
or
and
ffreep
lret
dec
xchg
cli
repnz
inc
outsl
jns
loopne
jo
notl
arpl
jmp
insl
xchg
add
je
je
xchg
mull
test
mov
js
sub
adc
pushf
enter
jecxz
mov
sbb
add
mov
and
lea
sbb
mov
mov
push
inc
push
mov
aam
test
push
dec
xchg
int
mov
or
das
mov
push
jp
ds
icebp
xchg
sar
xchg
js
lods
mov
aaa
mov
jmp
int
inc
aam
aas
rclb
cltd
rcl
aad
aaa
xchg
cmp
xlat
push
aas
adc
xor
in
xchg
aad
dec
aaa
cmp
andb
inc
mov
push
mov
fsubr
dec
scas
inc
das
and
jecxz
sub
or
loopne
je
insb
stos
lahf
cmpsb
enter
dec
out
jecxz
addb
cli
sub
sub
orl
test
adc
outsb
addr16
iret
adc
sahf
sub
leave
xor
xchg
add
xor
pop
frstor
je
ljmp
or
sahf
sub
cmp
mov
in
insl
mov
xchg
mov
in
sub
jecxz
or
std
pop
add
pusha
cmp
jo
mov
push
test
dec
lds
ljmp
stc
xor
jbe
cmp
mov
inc
adc
repnz
push
add
and
xchg
jnp
movsl
push
pusha
fcomi
test
xchg
sbb
fldl
xchg
inc
and
and
out
clc
stos
int3
data16
jl
in
mov
sub
sub
icebp
xchg
js
sbbb
jns
das
sti
add
xor
mov
ds
mov
mov
lahf
arpl
pushf
fs
xchg
addb
cmp
pop
in
xor
rcrb
cld
rcrb
mov
jge
xor
xchg
ficomps
mov
daa
adc
mov
sub
aas
pop
scas
orl
mov
jnp
mov
test
xor
sti
cmpsb
or
sbb
ret
mov
imul
pop
iret
fucomi
jno
lahf
popf
xchg
stos
or
push
mov
pop
jg
push
pop
push
jne
out
stos
div
lahf
js
fcmovu
outsl
out
ja
loope
es
nop
mov
pop
repnz
jne
ret
dec
cmp
pusha
es
sub
jb
xchg
call
cmc
idiv
push
aas
mov
fidivs
insb
dec
dec
test
imul
push
repz
sti
bound
push
sub
pop
and
cmp
mov
sbb
mov
dec
in
pop
int
mov
rcl
test
adc
js
das
dec
out
mov
icebp
push
sub
push
addr16
pop
enter
iret
add
dec
push
xor
jae
jmp
scas
loop
sub
fadd
pusha
divb
or
push
in
repz
xchg
xor
sub
jno
inc
pop
jno
adc
dec
fstpl
sub
mov
bound
and
stc
mov
xlat
fsubrs
test
sti
pop
pop
ror
pop
jecxz
mov
push
fiadds
aaa
sub
cmpsb
dec
pop
pop
test
mov
arpl
sahf
out
int
jb
faddl
or
cwtl
cmp
dec
pop
pop
imul
pop
cmp
push
cli
xlat
push
pop
fisubs
out
bound
dec
jle
cmpsl
jae
pop
fidivs
jbe
pop
movsl
dec
outsb
cmp
test
xchg
adc
mov
test
sti
jns
or
in
sbb
xchg
mov
or
push
aas
stos
push
adc
sbb
mov
in
into
dec
enter
stos
in
pop
aas
jb
inc
and
cli
xchg
pop
push
adc
in
mov
sbb
sbb
dec
or
and
mov
add
popf
push
repnz
scas
jmp
stos
adc
testl
sub
aad
sub
shlb
iret
leave
nop
lods
sub
fs
gs
loop
test
mov
inc
stos
loope
and
pop
mov
dec
mov
jmp
mov
clc
imulb
inc
aam
mov
test
inc
push
and
mov
popa
add
pusha
subb
or
xor
jl
push
add
clc
enter
repz
das
lods
int3
jbe
into
cli
js
cmp
sarl
repnz
mov
mov
test
nop
into
xchg
pusha
add
scas
pop
cwtl
sub
pop
mov
aad
fs
shlb
out
and
in
or
aaa
jb
sbb
and
mov
out
mov
add
mov
jle
leave
sbb
and
stos
adc
mov
in
sub
lret
ljmp
cmp
inc
rorl
sbb
pop
push
jmp
jo
es
jmp
and
lret
das
je
add
inc
lret
mov
inc
dec
dec
stos
es
jne
mov
pop
repz
sbb
aad
ds
push
or
cltd
xlat
pop
enter
nop
shrl
std
fwait
divb
andl
addr16
mov
dec
add
popa
adc
push
lods
push
xchg
imul
pop
lret
mov
xchg
lock
hlt
add
cmp
sub
iret
arpl
and
cmp
daa
and
sbb
sub
pop
adc
xor
pusha
and
adc
and
stc
outsl
pop
mov
mov
xchg
mov
scas
inc
sbb
and
fsts
out
cmpl
pop
cmpsb
pop
xchg
push
lds
pop
addr16
mov
je
and
and
inc
xchg
fs
test
jae
cmpsl
clc
data16
cli
ss
cs
mov
fdivrp
and
hlt
movsl
sub
mov
rorb
fstpl
scas
pop
pusha
dec
dec
fcoml
push
push
lock
mov
cs
mov
clc
xchg
sbb
mov
lcall
sahf
movsb
mov
popa
inc
insb
aam
jno
shrb
mov
mov
jmp
lcall
arpl
sbb
adc
sbb
addr16
jno
ja
push
sub
in
repnz
pop
xchg
out
jge
out
mov
mov
mov
xchg
es
sbb
pop
jmp
dec
aas
cmpsl
cmp
xchg
add
xlat
sub
ss
sbb
movsb
leave
stc
in
add
lds
sub
add
cmpsl
ds
fistpl
js
aas
mov
xchg
scas
popa
clc
leave
repz
hlt
jg
shll
inc
sub
fldenv
push
cmpsl
cmp
out
cmp
popf
scas
scas
mov
and
cs
inc
push
mov
pop
jle
loop
dec
mov
mov
adc
lcall
leave
lahf
into
xchg
add
fiadds
dec
scas
es
ja
orb
jne
loopne
and
pop
nop
in
sub
mov
cld
lahf
lahf
inc
sub
inc
arpl
pop
xor
lea
imul
jecxz
or
cmp
pop
xor
hlt
dec
std
mov
pcmpeqb
adc
ss
xchg
enter
adc
jbe
outsb
stc
mov
popf
push
push
adcb
mov
insb
mov
and
add
dec
fsin
xor
vpand
gs
mov
loop
lret
ja
aas
pusha
mov
mov
dec
xor
dec
jmp
sbb
ret
mov
inc
push
xchg
mov
movsb
in
push
push
jno
mov
push
mov
lahf
ss
jge
stos
mov
or
jns
pusha
add
js
fbstp
pushf
dec
insl
inc
jns
sbb
sbb
lcall
jb
filds
inc
mov
sub
movsb
pop
popf
sbb
fnsave
inc
out
repnz
mov
pop
dec
lret
cmp
mov
sub
lods
xchg
sub
mov
sarb
mov
jecxz
push
mov
mov
lea
xchg
sub
sub
mov
pop
cmpsb
incb
pop
cwtl
and
ret
pop
pop
ja
mov
inc
add
insl
mov
mov
lods
ret
ja
pushf
jp
aam
call
leave
addb
repnz
sub
cmp
data16
push
xchg
daa
scas
daa
inc
dec
mov
xor
dec
and
test
cmp
push
lcall
jne
jecxz
pop
bound
popa
in
sbb
fnsave
fsubrs
cmpsb
push
aam
arpl
hlt
es
cmpsb
inc
xor
out
into
jl
xor
jnp
fcmovu
cmpb
lret
mov
loop
push
scas
add
adc
or
out
xlat
xor
and
shlb
xchg
sarb
mov
loopne
mov
cmp
lds
je
ja
sahf
add
pop
pop
stos
mov
out
call
mov
jne
jl
sbb
lock
sub
cltd
xchg
out
mov
pusha
fcoml
ja
jb
or
sub
add
fld
out
inc
gs
shlb
pop
mov
push
loopne
fcomi
pop
sti
daa
fsubr
fimuls
mov
mov
and
cmc
cld
mov
popf
inc
enter
imulb
mov
js
lds
push
xchg
xchg
enter
popa
addr16
dec
mov
sti
sub
cmp
fisubrs
add
xor
in
mov
push
dec
repz
jp
aas
push
push
std
imul
lock
cmpsl
insl
mov
sti
inc
int
ret
sahf
std
dec
das
xlat
dec
cwtl
je
loope
sub
lcall
mov
rep
pop
mov
or
out
pop
repnz
xor
cmpsl
push
add
dec
dec
mov
jb
lds
xchg
leave
and
outsb
jg
push
popa
lds
xchg
mov
mov
adc
stc
inc
xchg
xchg
jmp
push
cld
loope
insb
dec
and
push
jno
sbb
jge
scas
fsubrp
push
enter
rorb
adc
sub
lret
out
add
in
loopne
xor
or
jae
inc
fsts
or
mov
pop
mov
dec
pop
jle
iret
les
or
popf
mov
jo
icebp
and
hlt
call
mov
fnop
lret
jno
aad
lcall
enter
insb
stos
imul
inc
cmpsl
cld
stos
push
lock
and
mov
mov
out
mov
insb
sbbl
mov
inc
cmp
adc
dec
filds
arpl
stos
dec
sub
hlt
jmp
mov
and
fcoml
mov
jno
cmp
test
xlat
in
insb
xor
dec
notb
addl
mov
jne
stc
xor
test
inc
cmp
pop
sbb
incb
fisttps
jge
xchg
ljmp
sbb
outsl
scas
nop
popa
or
xchg
mov
jae
imul
cmpsb
nop
pop
stos
cltd
jl
aas
movsb
test
inc
pop
aam
out
daa
mov
jle
jmp
cmp
setae
mov
fs
jnp
xor
sti
jle
mov
mov
jp
sbb
push
xor
test
test
lret
and
add
pop
mov
in
rcrb
lods
dec
jmp
or
xor
in
inc
loop
add
repnz
cmpsb
insl
ss
ljmp
loope
jmp
adc
mov
sub
fldl
andl
push
cmc
hlt
mov
jno
test
jno
lahf
jecxz
jo
add
cmp
lret
cs
out
lds
mov
xchg
sub
call
jno
dec
pusha
mov
stos
loopne
jmp
outsl
idivb
or
lret
sub
xor
lret
pop
mov
js
adc
notl
pop
iret
in
add
test
or
and
mov
cmp
inc
getsec
xchg
jbe
scas
push
insl
data16
mov
jne
sbb
js
jg
popf
mov
loope
test
cli
rorl
cld
add
sbb
dec
xchg
es
cmpsl
jbe
fmuls
jle
push
std
push
push
int3
add
and
into
scas
cltd
out
mov
inc
or
out
mov
shll
add
add
int
mov
pop
inc
xlat
add
inc
dec
cs
jmp
dec
icebp
addr16
aaa
or
cmp
mov
cltd
jge
mov
cli
cs
popa
enter
mov
adc
je
adc
push
mov
sbb
jno
aaa
mov
jl
dec
loopne
sub
jle
xchg
subl
cltd
test
jbe
fstps
jp
dec
xlat
and
ja
fstpl
inc
adc
dec
push
shrl
std
adc
pop
inc
test
mov
pop
pop
ja
leave
xlat
sbb
jecxz
jae
sub
xchg
xchg
jle
and
dec
and
push
inc
and
nop
pcmpeqw
test
and
aas
rcrb
pand
out
sub
xchg
fwait
mov
lock
push
adc
jnp
pop
test
fists
sbb
push
cmp
pop
push
dec
mov
and
inc
dec
add
cmp
pop
sbb
dec
mov
add
xchg
lods
or
push
movsb
lsl
fists
and
fwait
jp
jno
movsb
inc
jbe,pt
enter
movsb
inc
xor
addr16
push
mov
mov
fcompl
inc
mov
sbb
dec
jp
out
lahf
aaa
jge
pop
mov
jae
lahf
mov
sbb
nop
cmp
mov
mov
sub
lods
je
and
xor
addr16
popa
and
mov
lcall
mov
and
xor
fnsave
jno
mov
lahf
idivl
mov
mov
stos
or
lcall
mov
out
sbb
xor
js
inc
and
mov
cwtl
scas
push
pop
jae
mov
add
add
in
xor
adc
and
scas
dec
fwait
and
push
jae
jnp
aad
pushf
add
ficomps
push
scas
lods
int3
fstl
pop
jl
repz
push
mov
dec
dec
loop
mov
sbb
xor
stos
lret
mov
cmpsl
icebp
sbb
sub
data16
pop
fdivrs
in
mov
pop
iret
sti
sub
rolb
in
and
push
pop
dec
aam
mov
pop
shlb
jns
shrb
sbb
mov
sbb
cmp
xchg
xlat
test
xchg
mov
mov
es
mov
aam
out
rcr
jno
cmp
dec
int3
mov
sbb
mov
stos
pusha
popa
pop
sbb
cmp
addr16
and
sub
imul
or
cmpsb
add
repz
les
cltd
and
incl
test
sbb
lds
dec
ds
sub
dec
hlt
inc
pop
pop
idivl
mov
sbb
das
cs
inc
aad
mov
insl
les
sub
xchg
into
sbb
daa
int
inc
cmp
xor
shlb
push
jo
xchg
sub
ss
xor
shrl
cmp
xchg
xchg
mov
in
pop
rclb
jecxz
ds
popw
and
xor
pushf
stc
out
lea
rclb
mov
in
and
dec
les
addl
pop
push
adc
shl
in
cmpsb
hlt
std
push
fnstsw
jecxz
push
fwait
dec
mov
cmp
popa
mov
mov
push
popa
std
mov
aam
arpl
xor
loope
push
or
mov
pop
in
push
hlt
cmpsb
dec
outsb
insl
push
js
mov
imul
mov
and
cmpl
mov
or
xor
adc
sub
into
lcall
jecxz
fcompl
xorb
dec
inc
inc
aam
and
subb
jl
jne
mov
xchg
add
mov
push
ds
mov
cmpsb
and
mov
int
xchg
or
mov
mov
jl
leave
scas
xchg
mov
and
dec
lret
or
pop
xchg
adc
ret
fsub
arpl
xchg
rsqrtps
cmp
cli
xchg
mov
xchg
adc
xchg
sbb
mov
insl
inc
inc
out
fisttps
out
or
dec
cmpsb
or
xchg
es
stos
js
adc
popa
int3
dec
ret
mov
dec
adc
bound
addr16
dec
in
movsl
adc
test
outsb
pop
mov
mov
add
leave
xor
gs
mov
xor
jecxz
loopne
jge
mov
adc
lahf
xor
decb
pop
and
sarb
and
stc
lock
sbb
inc
data16
or
testb
sbb
push
sub
mov
scas
mov
fsubrl
icebp
sub
sub
xchg
add
movsb
test
arpl
inc
jne
sub
mov
cmpsb
rcrb
jns
mov
jns
xor
adcb
repnz
mov
and
into
lret
cmpsb
push
repnz
xchg
push
mov
xchg
jns
aas
jp
fidivl
loope
mov
sbb
push
cmpsb
es
pop
gs
push
cmpsl
addr16
lret
out
cmp
ljmp
out
cmp
or
cmp
sbb
int
mov
cmc
and
cmpsb
repz
mov
sub
incl
mull
rcll
std
jg
lcall
sub
ja
and
add
pop
pop
push
movsl
nop
lods
sub
and
xchg
daa
pop
hlt
movsl
mov
jp
loope
mov
fistpll
test
lock
jno
push
xchg
cltd
inc
xchg
xor
mov
xchg
clc
adc
lea
inc
mov
sbbb
sub
pop
jns,pn
and
and
inc
mov
push
cltd
xchg
mov
outsb
loop
and
xchg
fwait
and
icebp
xchg
xor
fwait
sub
ja
in
xchg
inc
dec
or
mov
mov
aam
pop
insb
xor
sbb
outsl
jno
lock
rcr
and
or
jnp
adc
cmpsb
xchg
pop
mov
das
addb
cld
lods
jno
sub
aad
rclb
adc
pop
inc
andb
xchg
xchg
sbb
pop
dec
lret
arpl
pop
xchg
popa
sub
dec
mov
in
imul
sti
mull
rclb
mov
imul
jo
test
mov
neg
pop
ss
lcall
sti
sub
adc
jo
repz
cmp
mov
sub
aaa
dec
add
insl
add
adc
jl
in
jp
fwait
icebp
inc
out
lods
inc
xchg
jl
jnp
loope
aaa
lods
push
ljmp
dec
daa
inc
mov
imul
lcall
cmp
sub
fs
push
call
mov
sti
hlt
jle
pop
std
mov
insb
jge
push
mov
xchg
mov
push
scas
cmp
lea
test
and
outsl
sub
mov
mov
sub
scas
inc
push
movl
lods
jg
mov
dec
test
push
insb
and
les
or
and
jo
adc
jbe
sub
sbb
push
cltd
jnp
cmp
sar
andl
lahf
push
push
stos
adc
icebp
dec
inc
push
sahf
inc
xchg
dec
push
or
sbb
rolb
lret
test
fmulp
add
xor
pop
pop
pop
in
fcmovbe
or
das
aad
mov
das
sbb
clc
es
xor
inc
cmc
iret
insb
repnz
test
js
les
cltd
jecxz
rolb
mov
cmp
inc
pop
adc
mov
dec
in
ret
pop
mov
dec
pusha
xchg
cld
sbb
ljmp
inc
push
hlt
mov
jns
nop
sbb
dec
les
sbb
cmpb
inc
test
out
repz
dec
add
rolb
ljmp
int
jo
mov
push
and
cs
cmc
sub
add
fwait
inc
jae
scas
data16
rol
xchg
mov
ljmp
fcoms
mov
and
push
test
cmp
mov
sbb
adc
sbb
xor
sub
pop
cmp
mov
cmpb
lcall
sub
std
fs
or
cltd
push
sub
push
arpl
popf
mov
mov
push
xchg
ror
inc
popa
stc
xor
fstl
cmp
sub
pop
fwait
push
push
inc
es
jbe
insl
xchg
mov
sub
inc
scas
call
iret
loope
popa
stos
je
shrb
test
inc
repnz
cmp
lea
xor
into
inc
pop
popf
jbe
shl
pop
xor
mov
cwtl
jmp
adc
or
jge
insb
mov
js
inc
cmpsb
sub
cmp
pusha
mov
test
push
mov
aad
xorl
pop
inc
out
negb
js
jmp
lahf
aas
xor
push
push
xchg
adc
xor
mov
int3
bound
packsswb
imul
std
jb
aas
ja
out
push
xchg
add
push
pop
das
lret
xor
jge
int3
sub
arpl
ffree
aad
je
inc
shrl
sahf
andb
sub
lret
test
daa
or
xchg
outsl
icebp
popf
loope
test
jnp
jb
mov
dec
and
lea
mov
mov
fwait
inc
cmp
loopne
stos
mov
rcrb
or
addr16
xchg
out
stc
aaa
dec
mov
sub
push
sahf
xor
in
mov
or
pop
push
iret
insb
fcmovne
cmpsl
daa
jns
stos
mov
and
xor
das
bound
das
pop
xor
cmp
ds
rorl
cmc
loope
push
mov
aad
in
or
outsl
and
inc
add
cmp
push
out
cmc
inc
leave
rcrl
mov
lahf
cmp
fiaddl
xor
repnz
sub
jno
sbb
mov
flds
xchg
pop
xchg
adc
mov
adcb
je
movsl
and
cmp
and
bound
jnp
in
mov
movsb
or
add
leave
push
pop
scas
js
mov
xor
jnp
repz
mulb
cs
in
xor
sbb
in
xchg
into
dec
xor
pop
and
add
push
sub
leave
idiv
mov
clc
lret
cmp
imul
cs
sub
rclb
int
mov
sbb
in
gs
mov
mov
test
cmc
subl
int3
mulb
icebp
loop
adc
in
mov
roll
push
push
mov
push
jg
xor
imul
mov
dec
pop
lock
mov
movlps
shr
bound
and
inc
push
xchg
dec
inc
cmp
jecxz
lds
jp
in
sarb
lds
mov
clc
stos
stos
mov
std
cmp
and
jl
mov
cmc
dec
mov
mov
cmp
inc
sub
mov
mov
daa
aad
jns
sbb
int
and
sbb
insl
lcall
xor
rclb
mov
push
xor
lea
mov
and
mov
jecxz
ss
mulb
outsb
push
push
push
mov
nop
sub
push
inc
inc
mov
fadds
insb
jecxz
lock
or
xor
nop
xchg
pop
pop
xchg
out
ljmp
int3
add
sti
or
lea
xchg
cmp
mov
push
popa
or
fwait
call
negb
das
pushf
pop
push
xchg
inc
inc
jne
sbb
inc
negb
data16
arpl
inc
les
jmp
fcomps
mov
movsb
insb
mov
mov
xchg
mov
fdivr
pop
cs
push
aad
jg
nop
and
mov
cmpsl
sbb
push
nop
test
dec
cmp
xchg
lret
jns
or
xchg
jg
mov
dec
push
push
jl
mov
xchg
sub
xchg
mov
jae
mov
or
add
xchg
pop
int
cmp
xchg
or
in
mov
mov
lret
aam
add
and
pusha
jmp
das
inc
aam
jle
mov
cwtl
xchg
in
adcl
pop
inc
sarb
js
sarl
push
daa
inc
movb
mov
xor
lods
hlt
or
daa
hlt
cmp
mov
adcl
mov
cmp
mov
sbb
push
and
lret
jno
xchg
pop
cltd
sbb
push
pop
dec
push
lahf
roll
mov
add
sbb
mov
xchg
add
push
fisttpl
or
mov
dec
and
into
sub
in
aas
mov
pop
popl
rclb
xlat
jl
movsb
jge
fisubl
mov
xchg
mov
rcll
push
ret
mov
addr16
push
jmp
push
dec
pop
insb
stos
mov
std
rcrb
and
insl
andl
mov
xchg
dec
jmp
push
xlat
xchg
xor
rolb
or
test
pop
jbe
inc
rcrl
ret
sbb
inc
cwtl
aad
mov
aad
sub
fs
push
dec
pop
push
std
inc
xchg
sbb
jns
mov
std
jg
cld
call
adc
orl
mov
mov
mul
cmc
shl
lret
fsubrp
pop
addr16
mov
cmp
sub
fs
mov
mov
dec
add
inc
jo
pcmpeqd
jne
mov
rorb
inc
nop
sbb
mov
rorl
jbe
and
aam
xor
mov
iret
adc
and
ret
jmp
lret
mov
aas
dec
add
rorl
or
ret
loop
jle
xor
in
leave
dec
push
xlat
dec
adc
mov
ja
or
subb
jb
stos
push
add
icebp
and
cmp
and
push
or
and
inc
out
dec
fwait
das
xchg
incb
das
sub
out
loopne
xlat
fsubrs
xchg
aaa
outsl
cmp
xor
jecxz
cmp
sbb
pop
cmpsb
sub
sub
mov
sbb
stos
stos
xchg
clc
mov
stc
xchg
lcall
loop
rclb
xor
mov
adc
or
icebp
inc
xchg
jp
lods
in
or
std
dec
mov
add
out
cli
dec
loop
cwtl
sbb
or
push
jp
cs
leave
add
inc
cmpsl
lcall
ss
and
inc
dec
inc
inc
pop
aaa
and
jmp
mov
lock
pop
cmp
pop
fdivrs
fs
sub
xor
mov
mov
lods
dec
cmp
cmp
aam
fsubrs
adc
adc
ljmp
mov
pop
loop
push
pop
adc
mov
mov
jbe
jle
pop
cld
enter
cmp
enter
jb
sti
push
lods
xchg
cmp
sbb
dec
jle
add
imul
cmpsb
lahf
mul
add
jmp
adc
add
xchg
adc
mov
outsb
test
inc
mov
dec
js
adc
nop
es
outsb
or
cli
or
lahf
lock
adc
inc
pop
nop
test
and
inc
daa
scas
subl
cmp
cmp
push
and
mov
mov
xor
jle
testl
loopne
add
push
pop
add
push
mov
loopne
sbb
bound
push
sbb
and
mov
lcall
or
orb
stc
xchg
movsb
mov
loop
mov
repnz
in
inc
hlt
pop
xor
mov
mov
inc
fsubrl
mov
pop
jb
in
leave
out
ds
sub
lds
pop
adc
cmp
push
jae
adc
insl
in
cmpsl
imul
gs
push
js
adc
nop
mov
test
cld
hlt
and
ja
icebp
repnz
jns
inc
es
or
mov
push
jno
inc
pop
and
cld
lret
cmc
imul
pop
xchg
sahf
sti
cmp
lock
mov
or
into
clc
pop
cmp
je
mov
test
or
loopne
shll
xchg
into
sbb
arpl
mov
dec
test
xor
addr16
sub
mov
mov
enter
pop
add
dec
xor
cwtl
ja
fsubl
aaa
fisttpl
or
mov
lahf
scas
jbe
aam
xor
mov
xor
and
push
mov
test
mov
mov
dec
hlt
adc
cmp
dec
sbb
jp
imul
push
jl
test
push
lods
iret
mov
fidivrl
outsl
xor
or
fwait
jo
dec
pop
cltd
jg
mov
pushf
and
push
in
mov
add
push
jle
fcom
fwait
hlt
pop
lret
insl
mov
jp
push
xchg
cmp
push
jmp
sti
xlat
xor
ja
dec
jle
cmpsl
sbb
clc
ds
dec
inc
cltd
cwtl
jmp
push
xchg
ja
push
cmp
test
lea
mov
xor
xchg
aam
xlat
rcll
jno
gs
arpl
mov
aam
into
inc
mov
in
int3
add
popa
pop
dec
cmpb
cmp
call
pop
aad
pop
sub
data16
jge
outsb
lock
or
mov
xchg
sbb
fsubp
xchg
xor
arpl
dec
push
arpl
fimull
or
test
dec
leave
cmpsl
mov
in
lret
out
cmpsl
mov
jmp
rorl
mul
sub
testl
cmp
inc
sbb
pop
adc
sahf
aad
pop
les
cli
shr
fs
out
cmovnp
and
orl
sbb
adc
mov
mov
sub
fwait
scas
jb
into
xor
adc
icebp
out
dec
aas
and
hlt
aas
mov
mov
sbb
out
inc
lods
aaa
mov
iret
rolb
andb
into
mov
push
cs
mov
loop
jae
inc
pop
fisubrs
cwtl
and
jb
loopne
add
lock
hlt
mov
cli
int
adc
xor
xor
cmp
xchg
fstps
push
es
rolb
mov
inc
sbb
cmp
ja
mov
pop
sbb
clc
shll
adc
adc
sti
fdivrl
sub
add
decl
add
cmp
adc
jbe
mov
aaa
mov
dec
xor
arpl
add
scas
sbb
dec
repnz
and
or
xchg
cld
mov
add
sub
aam
mov
icebp
xor
xchg
mov
data16
stos
les
mov
inc
push
imul
or
cmp
xchg
icebp
pop
or
lea
sub
das
aad
pop
jae
fdivr
cmp
xchg
sti
mov
imul
sahf
adc
fsubs
mov
push
jbe
pop
mov
push
movsl
jp
adc
xlat
pop
mov
xchg
mov
movsb
jae
xor
das
popf
loop
dec
pop
movsb
dec
rorl
test
dec
xor
push
sub
jge
push
sub
xlat
push
xchg
jl
lret
push
popa
dec
rorl
jb
lahf
pop
ljmp
lahf
aam
ss
pusha
mov
movsb
je
test
lock
push
ljmp
mov
outsb
jecxz
cmp
jg
jecxz
or
mov
jp
std
mov
scas
shr
cmp
into
xchg
mov
cmp
testl
imulb
add
bound
in
ss
pop
jmp
arpl
insb
jo
inc
dec
pop
outsl
or
cwtl
pop
icebp
add
cmc
adc
enter
lea
jnp
lcall
jb
cmp
sub
cmp
fisttpll
add
loope
jg
out
and
int
es
mov
jbe
or
in
sub
imul
push
dec
sub
inc
jb
adc
gs
pop
sarb
push
dec
mov
in
jae
xor
scas
nop
popf
cmc
out
mov
fmull
dec
movsl
aam
xchg
push
iret
jae
pop
ljmp
aaa
jae
push
pop
popf
pop
pop
idivb
int
jns
and
ret
pushf
jl
sbb
xor
adc
dec
mov
xor
adc
stos
test
push
jb
jbe
mov
or
lock
into
ret
jne
sub
xchg
aad
cs
movsl
xchg
sahf
or
call
data16
sahf
jl
scas
inc
in
insl
lods
int3
mov
je
sub
psadbw
sub
mov
repnz
scas
xor
pop
xor
in
mov
sahf
imul
push
push
cli
jbe
add
xchg
mov
call
js
popa
test
add
out
inc
jnp,pt
jnp
ss
cwtl
loop
jae
mov
ficomps
mov
movsb
insl
imul
and
bswap
add
add
nop
push
nop
push
or
rcrl
mov
add
leave
mov
outsl
cltd
cmp
cmpl
jl
xchg
scas
cmc
out
adc
mov
inc
mov
adc
gs
enter
inc
gs
pop
es
stos
fs
mov
movsl
push
stc
mov
test
sarl
dec
mov
pusha
pushf
nop
jg
jnp
std
sbb
sub
jno
lret
sub
mov
ljmp
js
cli
ret
sub
jnp
jb
inc
inc
hlt
gs
dec
hlt
mov
xor
mov
cli
add
leave
ss
rcll
cmp
or
pop
in
mov
sub
insb
and
ret
pop
push
or
jae
sbb
xor
push
cmp
outsb
sub
mov
xor
dec
mov
push
mov
sub
outsl
mov
jl,pn
add
adc
sub
dec
and
mov
adcl
popf
pop
push
sub
mov
fsubrl
mov
jp
adc
mov
dec
or
in
decl
daa
jmp
lods
xchg
loope
add
aas
sbb
mov
in
hlt
ljmp
jge
mov
pop
fdivrs
pop
out
xchg
mov
cwtl
arpl
lock
fnstcw
rep
mov
add
nop
and
push
arpl
inc
lock
cld
push
or
bound
dec
xchg
repnz
std
mov
xchg
xor
js
int3
ret
add
and
loop
xchg
pop
pop
push
mov
add
jmp
push
jbe
aas
xchg
clc
sbb
fistpl
fidivs
xor
rolb
stos
cmc
lahf
push
jp
dec
in
or
pop
popl
scas
mov
ror
sub
dec
push
xor
xlat
xlat
mov
les
inc
je
jl
out
test
aas
lret
and
cmp
movsb
jle
lds
cmp
jp
dec
pop
out
xchg
mov
enter
cmpsb
xchg
xchg
mov
and
je
fistpll
test
clc
je
stos
pop
shll
xor
fwait
in
cmp
add
xor
adcl
push
imul
cmpsl
out
xor
add
jle
mov
mov
into
mov
mov
sbb
loope
or
iret
sub
and
sahf
cmc
popa
mov
push
cmp
rorl
sahf
xor
cmp
xchg
hlt
cmpsb
xor
jmp
lahf
push
mov
sbb
mov
shll
xor
or
sub
incl
imul
pop
popa
loope
mov
dec
add
call
fdivrp
mov
fnstsw
add
js
cmpsb
daa
dec
clc
movsl
ja
sub
into
inc
jbe
inc
and
stos
test
test
cli
inc
es
ret
bound
adc
pusha
xchg
test
xor
mov
int3
sti
sub
push
dec
pop
mov
pop
popf
pop
ljmp
mov
insl
adc
jno
js
out
xor
in
cmpsl
xlat
iret
jnp
sti
icebp
shl
inc
shlb
das
cmp
stc
push
add
std
imul
jg
popa
lods
cmc
mov
and
jb
cltd
pop
jmp
fsubr
ss
inc
aam
int
imul
push
daa
cli
sahf
lahf
pushf
and
xchg
nop
add
ret
push
icebp
or
ljmp
lret
fcomps
and
adc
and
xchg
or
in
cmc
jno
mov
es
data16
mov
and
fldl
push
jmp
sub
mov
jecxz
adc
leave
movsl
movsl
mov
or
je
int3
sarl
push
sub
fs
movsl
adc
mov
ja
shlb
jge
mov
cmpl
cwtl
addb
push
jecxz
imul
popf
jge
xor
cmpsl
mov
movsb
test
lret
repz
ficoms
sarl
add
adc
push
in
cmp
ss
push
xchg
loopne
or
fildl
mov
subb
scas
adc
mov
add
and
xor
lret
repnz
in
sub
mov
push
pop
movsb
add
out
xchg
or
mov
mov
das
movsl
mov
negl
mov
adc
ljmp
das
cmp
cli
adc
sahf
clc
mov
addr16
cwtl
mov
cli
getsec
aaa
rcrb
cmp
mov
and
cmp
decl
in
xchg
call
dec
imul
jnp
sub
cli
inc
dec
xchg
mov
rcll
sbb
xchg
test
cmp
cmpsb
cli
dec
sarl
rorb
repz
in
jbe
sub
sub
fistpll
popa
jbe
mov
mov
insl
out
clc
pusha
into
fwait
cli
fisubl
mov
xchg
data16
add
xor
pop
in
aam
sub
es
pop
in
sub
xchg
cmp
stos
cmpsb
or
push
int
sub
inc
push
rorl
mov
lret
cmp
stos
insl
out
add
mov
test
lods
shl
cmpsl
pop
push
or
push
pop
push
mov
sub
nop
lods
bswap
push
mov
xchg
ret
mov
flds
arpl
lock
imul
mov
push
fcmove
dec
add
and
int
daa
xor
ret
mov
mov
leave
jne
lods
cwtl
dec
jle
pop
pop
add
jbe
leave
mov
cld
imul
pop
pop
js
mov
je
adc
aad
je
inc
arpl
push
sti
and
ljmp
popf
or
out
loop
inc
cmp
in
outsb
nop
bound
inc
mov
shl
lcall
push
pop
mov
xchg
mov
movsb
xchg
ljmp
in
cmp
scas
adc
mov
into
inc
add
loop
mov
aaa
in
inc
and
lcall
outsl
arpl
scas
stos
es
push
and
inc
loop
jl
insl
icebp
push
jle
sahf
pop
add
xchg
adc
add
inc
mov
mov
dec
lods
mov
shll
sti
fwait
cmpsb
imul
add
push
mov
nop
lock
add
lcall
push
pushf
sub
dec
mov
cmp
pusha
and
or
js
mov
mov
test
and
xor
jle
aas
movsb
cwtl
sbb
mov
adc
dec
das
cmp
xchg
jno
mov
xlat
cs
cmpsl
xchg
test
dec
je
jnp
inc
pusha
add
stos
and
dec
out
add
jecxz
pop
sbb
mov
mov
int
roll
xchg
mov
and
ss
jns
repz
sbb
pop
xor
xchg
arpl
jbe
lret
pop
or
enter
xchg
xchg
ljmp
movsl
sbbb
and
sahf
fwait
jb
mov
xor
cs
roll
sbb
pop
or
fcoms
and
xorb
fisubs
les
mov
loope
in
fists
pushf
fsubrs
ret
jg
mov
es
pusha
gs
cmp
enter
lcall
mov
jge
and
adc
daa
test
xchg
in
push
cmp
jno
cs
cmp
cmp
or
push
xor
sarb
aad
jecxz
outsl
in
ds
pop
add
jno
frstor
mov
mov
xchg
add
loope
or
and
fwait
std
into
out
leave
inc
mull
in
stc
movsl
fsubrl
jle
bound
adc
loopne
test
lahf
test
fwait
mov
xor
scas
xor
into
mov
movsb
sub
pop
repnz
jae
mov
dec
add
iret
xchg
in
cmpsb
jb
cld
or
or
lret
pop
clc
jge
dec
in
mov
lret
out
inc
and
int
adc
xchg
adc
mov
sbb
adc
sbb
jbe
pop
mov
mov
mov
sub
dec
lds
xor
cld
lcall
jl
roll
cld
daa
add
pop
mov
xchg
cmp
push
xchg
outsl
mov
mov
jle
inc
adc
scas
incl
mull
fldt
in
mov
push
and
jne
outsb
cmp
lods
xchg
pusha
and
xor
cli
xchg
subl
cmp
sbb
jae
inc
movsl
jno
or
mov
out
data16
test
mov
das
mov
mov
decl
mov
scas
outsb
sbb
mov
sub
inc
sbb
std
nop
xchg
fadds
cmp
and
mov
shl
imulb
push
aaa
out
adc
loop
inc
dec
out
xchg
negb
bnd
inc
jnp
enter
sub
in
xchg
mov
pextrw
cmp
bound
clc
cmpsb
lahf
nop
adcl
cli
sbb
dec
jbe
lcall
mov
jo
jl
negb
sub
gs
xor
shlb
stos
pop
xorl
rcrl
dec
inc
jecxz
or
inc
jbe
nop
inc
pop
rcl
jl
mov
aaa
cmpsb
jmp
pop
mov
imul
cwtl
inc
out
scas
sbb
mov
xchg
pop
call
daa
mov
push
data16
out
fsubs
xor
punpckhwd
out
xchg
cld
mov
inc
xchg
adc
lds
mov
mov
xchg
out
lds
icebp
pop
and
pop
fwait
pop
push
mov
stos
int
pop
fld
cs
add
inc
add
add
test
jp
add
cld
push
xchg
inc
aaa
popf
out
stc
mov
or
cld
pop
mov
pop
idivb
push
adcb
sbb
push
aam
test
loopne
add
cmp
andb
lahf
dec
lds
mov
aaa
imul
xor
and
jle
cld
push
addr16
insb
cmc
adc
cmpsl
sti
cmp
xchg
inc
jo
cmc
mov
dec
adc
and
cmp
subb
add
add
mov
cli
xchg
je
ret
mov
mov
xchg
sub
xchg
inc
mov
jbe
stos
enter
lret
mov
lock
test
xchg
ljmp
xadd
push
xchg
pop
stos
push
and
mov
js
cmp
daa
sub
xchg
adc
ja
iret
std
push
ret
push
jle
pop
jle
xchg
sbb
inc
test
and
mov
mov
or
add
lods
xor
adc
push
pop
sahf
jecxz
mov
sub
xchg
pop
pop
cmpb
fs
xchg
inc
jbe
nop
mov
ss
gs
inc
inc
xor
aad
inc
push
repz
jge
jne
hlt
ss
pop
dec
clc
stos
popf
sahf
adc
ret
outsb
mov
dec
ljmp
inc
repnz
add
dec
pop
out
sub
adc
cmp
cmpsl
ss
xlat
xor
lods
loope
hlt
pop
test
ret
negl
xor
shll
cmp
sub
inc
lds
aam
pushf
ds
dec
les
jp
out
pop
mov
dec
outsb
ds
inc
dec
cmp
out
dec
jg
mov
or
daa
mov
out
fcoml
pushf
les
adc
push
pop
cmp
push
pop
out
xchg
lds
or
repz
out
jb
aaa
fcmovnbe
dec
push
cs
inc
pop
repnz
xor
and
rol
loop
push
add
rcrb
ret
bound
or
sbb
inc
cmp
xor
dec
fsubrl
ljmp
pop
and
mov
insb
mov
xchg
lahf
sub
jo
add
sbb
loope
xor
insb
mov
inc
or
outsb
cmpsb
aad
jo
push
add
lods
aaa
lcall
outsb
adc
cmc
pop
jb
jne
cmc
mov
push
inc
cmp
loopne
adc
icebp
push
ja
outsl
mov
cld
les
rcrb
lea
xor
mov
xor
movsl
sub
pop
data16
stos
dec
sbb
mov
and
xchg
lret
fwait
dec
mov
push
cmp
movsl
jge
in
addb
sub
lock
and
test
add
idivb
adc
adc
push
sahf
gs
lods
imul
jge
test
hlt
lret
push
xor
sbb
jl
frstor
or
aaa
ret
scas
aaa
imul
mov
fisttpll
pushf
xchg
popa
popf
sbb
ror
outsb
out
jae
pop
dec
inc
std
imul
sbb
shl
insl
movsb
jmp
sub
lods
in
aaa
push
xchg
sub
cmc
nop
movsb
cmp
xorb
out
mov
dec
ds
push
inc
pop
hlt
pavgw
ret
mov
inc
push
xor
xlat
cwtl
sbb
sub
jecxz
loopne
imul
jb
fldt
xchg
xor
dec
sbb
pop
xor
loope
jno
inc
in
fsubrl
add
add
mov
pop
push
mov
jle
xor
mov
orb
pop
in
out
out
mov
out
xchg
lahf
in
pop
jne
test
mov
push
cmpsb
inc
imul
mov
imull
dec
cmp
insb
aad
es
lret
iret
fnsave
js
outsb
bound
cltd
push
nop
xor
inc
sub
pop
pushf
mov
mov
push
add
ss
adc
inc
add
daa
sub
mov
cmp
mov
jns
mov
mov
lcall
clc
iret
fdivp
and
pop
loopne
pop
mov
daa
fstpl
shrb
pop
mov
mov
stc
fcmovu
shrl
data16
adc
pop
shlb
fimuls
shlb
xor
mov
mov
ret
filds
jae
lahf
add
adc
cltd
inc
adc
lcall
xchg
mov
mov
aaa
xchg
ds
adc
fldenv
popf
cmp
nop
jo
inc
push
sub
pop
test
stos
imul
inc
mov
push
popf
adc
outsl
or
test
gs
arpl
ret
mov
push
loop
pusha
lds
push
inc
pushf
outsl
xchg
repz
xchg
sahf
pop
or
dec
aas
jo
xchg
lcall
call
push
add
dec
jge
jb
jmp
test
insl
jo
shrb
sub
shll
push
dec
ljmp
add
arpl
std
cltd
pop
inc
jp
push
pop
aam
mov
push
dec
jnp
mov
push
inc
pop
aad
adc
add
subb
xchg
stos
stos
sbb
push
pop
lret
lea
cmp
int3
out
stos
fcmovnu
adc
xchg
pop
rorb
movsb
andl
mov
mov
xchg
and
mov
and
lcall
add
std
popa
mov
js
inc
clc
and
clc
into
add
js
insb
shrb
jge
inc
aad
jbe
dec
adc
dec
lcall
lods
pop
rcll
push
sbb
iret
cmp
pop
imul
ret
movsl
push
mov
push
test
scas
jae
jno
cmp
cli
enter
aad
jb
cmp
adc
shlb
mov
pop
inc
and
jecxz
or
push
sti
push
inc
add
sbb
comiss
or
or
jmp
fs
mov
cmc
xchg
mov
cmp
fiaddl
sub
inc
repz
cmp
lahf
fnsave
dec
pop
xor
fidivrl
mov
int
xchg
out
sub
jle
inc
dec
jge
xchg
mov
pop
push
mov
jecxz
lods
dec
pop
or
cmp
adc
xor
ss
mov
sub
lods
xlat
outsl
jle
sbb
sub
mov
xchg
insb
gs
leave
sub
enter
test
mov
xlat
jbe
stos
leave
xchg
out
jnp
mov
out
cwtl
fs
xchg
hlt
ss
jle
inc
cli
loop
repz
pop
popf
sbb
pop
test
add
inc
dec
test
push
cs
adc
cmp
loope
xor
into
mov
push
ds
xor
xchg
push
cs
jle
jbe
xor
mov
push
dec
xlat
test
add
or
dec
mov
mov
adcl
jg
xchg
imulb
mov
lds
inc
sti
sbb
jo
rcrl
mov
icebp
insb
xchg
roll
pop
test
adc
aad
fimull
inc
push
xchg
xchg
jmp
and
push
es
pop
icebp
dec
dec
dec
inc
cltd
repnz
adc
sbb
mov
sbb
sbb
stc
adc
addr16
mov
xchg
jae
jle
xor
lods
inc
incl
bound
xchg
mov
pop
xchg
lods
daa
loop
rcrb
repnz
stos
test
lea
sbb
xlat
ds
xchg
mov
lods
aam
xchg
gs
jge
cmc
sbb
pop
iret
std
xor
push
push
adc
nop
push
or
sbbb
out
cmp
clc
out
clc
addr16
sarb
mov
dec
push
sbb
mov
cli
or
mov
movsb
in
cmpsb
cmp
xor
sub
clc
sub
mov
jl
mov
std
inc
push
xor
in
add
dec
mov
iret
jnp
adc
add
ja
loopne
ja
fwait
cmp
ds
sub
out
lock
mov
inc
xchg
clc
je
ss
add
lahf
mov
andl
jmp
rorb
add
mov
stos
in
lock
fsubrs
in
sbb
mov
movsl
bnd
xchg
mov
mov
dec
push
and
mov
jp
out
ret
popf
sub
inc
xchg
fsubr
or
mov
stos
cmp
cmpsl
cmovns
inc
adc
ret
cld
push
fcomp
add
cmc
sbb
lcall
add
enter
adc
dec
and
clc
adc
mov
out
inc
pop
cli
rcll
xor
mov
mov
or
add
adc
jg
in
mov
push
lea
rcl
dec
cmpl
inc
or
and
push
xchg
sarl
mov
push
mov
inc
imulb
xor
insl
stos
xor
ret
xor
decl
add
scas
orb
aam
dec
aam
nop
pop
push
xor
daa
dec
pop
jp
shll
xor
lcall
mov
sub
push
add
add
jmp
fnstenv
xchg
test
test
cwtl
fcoms
daa
jmp
movsl
fbstp
popa
lret
push
mov
inc
jns
xor
xchg
pop
dec
mov
add
int
pop
mov
sbb
push
mov
in
fldl
mov
faddl
aaa
jne
sub
out
mov
sti
xorb
repnz
pop
push
adc
mov
jb
mov
je
ret
fwait
sbb
rorl
les
push
pop
pop
pop
pop
push
xor
xchg
mov
shlb
push
sbb
shll
test
xchg
jecxz
xlat
mov
insb
out
dec
es
int
add
dec
pushf
call
push
enter
or
repnz
data16
inc
mov
pop
cmp
pusha
in
fs
leave
push
daa
or
xor
daa
addr16
mov
mov
xchg
inc
popa
cmpsl
pop
sahf
movsl
or
pop
mov
jns
push
sti
jmp
into
cmc
mov
add
ja
loopne
cmp
xor
popf
sbbb
popa
int3
mov
and
jg
push
rcrb
mov
bound
sarb
lea
xacquire
sti
xlat
insb
shlb
jl
shl
nop
lods
xchg
mov
inc
loop
ss
rorb
lahf
aam
pop
jle
fidivrs
ret
popa
mov
mov
std
arpl
or
xor
pop
in
jp
jge
and
mov
and
lret
shll
lods
dec
lds
pop
xor
ret
dec
push
push
mov
jecxz
mov
mov
sbb
fiaddl
cmpsb
dec
in
scas
jmp
pop
sub
pop
mov
lock
jl
lcall
sbb
fwait
mov
andb
sti
fucomp
mov
cli
shll
rol
jecxz
cmpsb
popf
mov
sub
fists
lahf
shrl
sub
adc
xlat
inc
cwtl
imul
mov
cmp
dec
mov
mov
jo
mov
iret
lret
adc
sub
jmp
test
push
cltd
subb
push
testb
inc
out
sbb
sub
dec
xor
lret
mov
mov
xchg
jl
cmp
sub
test
pop
jp
sub
inc
adc
sub
mov
jne
mov
fsubr
mov
test
mov
sbb
cmp
lds
xchg
jmp
cmp
movsb
sub
fnstsw
lds
test
mov
or
nop
dec
adc
ds
call
inc
popa
or
fbstp
mov
push
in
push
shr
mov
xor
sti
rcl
scas
out
je
mov
sbb
rcrl
lret
adc
xchg
aas
scas
notb
cs
in
sti
mov
sub
das
cmp
fcoml
and
jmp
jno
cmp
aas
sub
insb
cmova
je
aaa
rolb
lcall
mov
daa
xor
cmp
mov
push
adc
jbe
or
out
sub
jge
hlt
inc
pop
hlt
mov
sbbl
and
cltd
mov
or
push
dec
aam
jge
push
pop
add
adc
or
jl
jb
cmpl
mov
jns
mov
test
xacquire
lds
dec
lock
jle
fisubl
icebp
shll
mov
xorl
fld
mov
sub
negl
popf
movl
jnp
push
push
ss
popa
or
push
jl
pop
popa
xchg
jecxz
scas
inc
aaa
lret
lock
push
cmc
and
pop
and
stos
mov
popa
jle
xchg
push
jg
xor
inc
ja
sbb
shrl
or
xlat
ror
stos
or
xor
mov
fwait
scas
int3
add
dec
lds
and
sbb
pop
and
or
fdivrs
out
adc
loope
mov
iret
mov
lock
jl
int3
xchg
aaa
lds
push
add
xchg
jg
shl
mov
mov
std
sbb
push
imul
fldenv
stc
inc
xor
adc
or
mov
ja
shlb
pop
nop
pusha
xlat
mov
cmp
daa
cld
call
mov
inc
mov
imul
fdivs
shll
mov
imul
xchg
scas
mov
xchg
sub
or
sbb
mov
or
cmpb
cmc
pop
aas
push
in
mov
cmp
movsb
push
xorb
xorl
idiv
add
imull
cmpsb
fs
pop
loopne
int
in
jmp
addr16
popf
loopne
popf
mov
lods
mov
push
xchg
xlat
xchg
addr16
insl
mov
mov
inc
jp
imul
jge
clc
mov
ljmp
rclb
push
xchg
pop
loopne
pop
mov
push
jnp
nop
out
pop
adc
push
lret
xor
nop
cli
mov
and
sti
insl
outsb
lods
cmpsb
cmp
add
ficoms
xlat
fcomps
aam
movsl
add
shrb
leave
inc
or
add
adcl
pop
push
add
nop
into
fdivrl
lods
mov
and
mov
mov
and
outsl
push
xor
adc
or
loop
jp
icebp
scas
inc
mov
cmp
aam
ja
push
loopne
fwait
pop
outsb
aam
mov
add
cmc
dec
int3
inc
mov
rclb
pop
int3
loop
inc
dec
call
out
mov
icebp
cmpsl
push
ret
dec
insl
sub
mov
push
pop
pop
mov
pop
xchg
negb
sbb
sub
je
jae
sub
mov
in
inc
lock
popa
cmp
inc
int3
ret
lret
mov
xchg
xor
fistpll
dec
adc
mov
ds
pop
addb
inc
and
or
inc
or
out
push
js
ja
cmp
push
lret
jge
addr16
mov
js
adc
mov
xorl
les
pop
xor
das
lea
mov
mov
dec
pop
bound
shlb
sahf
jo
cld
mov
sub
push
les
and
jl
rolb
xchg
es
in
aad
loopne
push
pop
add
mov
int3
fbstp
adc
xchg
aas
push
jbe
out
inc
push
pop
push
scas
sub
ja
mov
sub
enter
sbb
popa
mov
data16
add
add
ret
imul
add
gs
cmpsb
dec
jecxz
adc
push
sbb
nop
lret
sbb
xchg
push
test
lds
cld
adc
pop
mov
insl
lahf
jne
mov
roll
pop
lock
jmp
push
ja
xchg
js
mov
lods
adc
mov
lahf
xlat
jns
test
loop
inc
stc
push
cmp
xchg
pushf
and
push
cmp
xor
dec
jg
in
aad
xor
adc
les
sti
xchg
nop
dec
mov
clc
adc
pop
mov
sbb
imul
dec
add
jge
test
mov
mov
mov
dec
scas
add
pop
dec
cmp
les
std
jle
cltd
cli
les
mov
test
out
in
leave
ret
dec
shlb
or
nop
arpl
stc
jl
daa
mov
lods
in
popa
daa
xchg
fistl
sbb
push
xor
inc
pop
or
jecxz
insb
ljmp
rcr
fwait
mov
mov
lods
test
popf
dec
adc
sbb
ds
cmp
shlb
jne
sub
test
test
ret
ret
xchg
imul
inc
and
cwtl
inc
mov
ds
out
js
mov
gs
sbb
inc
xchg
mov
pop
loop
adc
cmp
jp
and
in
loope
or
lret
andl
inc
mov
add
adc
mov
xor
inc
adc
ljmp
fs
fmul
push
or
jno
lahf
push
in
xchg
adc
or
pop
adc
add
cltd
sbb
and
aas
or
dec
in
inc
adc
jl
mov
sbb
pop
pop
adc
sbb
or
test
cltd
mov
add
adc
mull
mov
and
divl
aad
push
mov
and
or
jge
xor
push
outsb
fidivl
xchg
sbb
outsb
add
cs
es
and
lret
xchg
cmp
stos
mov
mov
sub
jg
mov
and
inc
out
mov
icebp
xlat
pusha
daa
push
pop
add
jge
jno
test
push
mov
adc
rcrb
push
sbb
add
pusha
push
inc
or
jo
add
clc
aad
aaa
cmp
das
add
loope
shlb
sub
shlb
mov
xchg
mov
pushf
mov
in
pop
das
ds
sub
cmp
negl
add
inc
scas
adc
outsl
test
mov
cmp
les
aam
iret
loope
les
repnz
jnp
int3
mov
stos
dec
hlt
addr16
jp
dec
mov
and
push
adc
negl
inc
shl
mov
out
pop
pop
mov
test
sub
xor
inc
push
mov
dec
pop
dec
insl
xchg
adc
mov
pushf
add
mov
fsubl
test
push
fadds
lea
jae
mov
xchg
lods
das
pop
push
cmp
and
addb
aam
sub
es
xchg
rcrl
mov
lahf
xchg
arpl
mov
xor
outsl
push
push
les
into
call
pushf
pushf
scas
shl
lret
arpl
int3
xchg
xchg
jno
inc
push
inc
push
lahf
inc
lods
xchg
cmp
cmp
cli
adc
mov
mov
sahf
jmp
popf
dec
pop
xchg
jns
lret
sbb
sub
xchg
xor
and
inc
jmp
ljmp
xor
test
out
int3
jmp
scas
repnz
or
out
and
ljmp
je
test
je
mov
jmp
push
call
mov
push
divb
xor
stos
stos
cwtl
mov
das
sub
mov
cmpsl
jge
mov
push
sub
jle
cmpsl
ror
scas
adc
pop
cwtl
mov
shl
popf
aaa
lds
les
shrl
adc
cltd
or
inc
push
push
in
add
movsl
fisubrs
gs
stos
imul
mov
cmp
in
jecxz
add
lea
xchg
gs
nop
out
cmp
and
mov
fildll
fwait
pusha
mov
inc
dec
mov
sub
lret
repnz
xchg
pop
aaa
inc
and
xlat
and
add
sub
xlat
xor
push
mov
lret
pop
mov
lret
mov
mov
les
je
and
jb
sbbl
xor
jb
mov
cmp
jnp
fnstenv
mov
push
out
add
add
sbb
jge
bound
cmpsb
ret
rclb
xchg
inc
ja
jle
push
xchg
movl
ret
sbb
mov
push
jecxz
es
mov
or
push
mov
out
stos
ficoms
add
addr16
or
mov
push
into
test
aam
xchg
stos
stos
push
das
jg
jle
lods
mov
sub
mov
cmp
and
xchg
mov
es
jae
mov
adc
sahf
mov
stos
cwtl
into
jmp
je
es
aad
mov
js
shrl
movsb
jo
adc
xor
or
mov
jmp
int
stos
out
jb
ret
pop
pop
push
inc
clc
fcoml
and
jp
sbb
inc
cltd
repz
push
lahf
es
or
pushf
mov
inc
in
aam
cwtl
or
int
mov
pop
mov
dec
push
push
or
jne
add
out
adc
cbtw
jnp
push
rolb
mull
adc
outsb
or
sbb
cmp
sub
or
xor
and
jo
data16
cmp
dec
adc
int
dec
cltd
jae
addb
es
ffreep
or
rcl
loope
out
ret
and
dec
xor
cwtl
ja
xor
mov
sbb
rclb
jl
mov
in
int3
sti
sub
cmc
xorl
insl
sub
push
adc
clc
mov
scas
dec
imul
mov
das
pusha
and
mov
stos
cmpsb
cltd
cmp
pop
pop
ds
and
sbb
addr16
fwait
pop
adc
sar
rclb
lods
jle
mov
jb
cmc
mov
push
jno
js
xchg
test
cmpsb
jns
ret
insb
lahf
fwait
lock
fwait
out
lods
push
aam
outsb
fcom
rolb
and
test
arpl
outsb
insl
pop
push
or
push
and
cwtl
mov
cli
ja
imul
inc
imul
das
and
jmp
mov
xorb
lods
or
loopne
into
lahf
and
jae
sub
sub
xchg
insb
enter
jo
mov
into
pushf
xchg
xchg
loope
push
mov
lahf
adc
jp
fwait
test
or
sub
mov
outsl
xchg
mov
in
out
and
stc
push
call
subl
mov
and
sub
daa
mov
sti
pop
pop
lret
iret
clc
fsubs
push
aas
lret
test
add
data16
call
insb
mov
xor
adc
popf
hlt
lahf
pop
push
dec
in
cli
jg
out
mov
call
loope
sbb
xchg
das
pop
loop
ss
bound
int3
rcll
pop
test
sub
fsubl
notb
in
jge
mov
push
sbb
in
cli
adc
lods
mov
outsb
mov
mov
out
les
lret
ja
add
mov
and
mov
cld
mov
stos
shlb
loope
sbb
jle
xchg
add
rcrb
adc
into
shll
pop
in
dec
clc
notl
cmp
mov
aaa
es
inc
rcrl
fwait
addb
cltd
loopne
lret
adc
ss
and
das
jne
in
lea
jl
shl
xchg
push
cltd
daa
test
mov
das
mov
mov
pop
push
pop
lcall
mulb
movb
add
fwait
adc
jecxz
or
dec
dec
outsl
in
mov
out
out
shll
push
dec
dec
roll
pop
mov
adc
imul
insb
jle
adc
cmp
mov
mov
movsb
hlt
sti
lock
sbb
cmp
cmp
jmp
in
orb
into
lods
adc
cmpsl
test
sahf
xchg
adc
and
mov
fisttpl
pop
cmp
fdivrs
lret
or
aad
cmc
fwait
es
in
ja
outsl
sbb
and
in
add
inc
or
push
xchg
gs
mov
test
sub
ljmp
or
out
fdivrs
shll
in
fsubs
inc
sbb
xchg
sahf
sbb
fdivrl
cmpl
push
sbb
jmp
jg
adcl
add
mov
and
insb
lea
inc
insl
push
mov
mov
fwait
lcall
std
loope
mov
pop
pop
jno
and
popa
or
fabs
std
xor
pop
in
call
sbb
mov
popf
test
xor
or
mov
lods
mov
mov
jb
cmp
jnp
flds
xor
xor
mov
shrb
lcall
movsl
or
xchg
lahf
mov
xchg
cmp
dec
adc
out
mov
inc
ljmp
mov
je
mov
xor
inc
add
xchg
xchg
jb
push
adc
xchg
ret
sbb
nop
jae
jnp
cmp
cmc
jecxz
loop
jnp
lret
sub
sub
xlat
cmp
or
imul
flds
push
jne
bound
out
jns
arpl
inc
adc
pop
aaa
cwtl
les
gs
cmp
mov
stc
add
in
jmp
arpl
andb
stc
lcall
xor
sub
scas
cmp
xor
mov
lock
cs
in
divb
fsubs
sbb
push
adc
rorw
dec
push
leave
insl
nop
push
loopne
arpl
pop
cs
mov
mov
mov
loope
sarl
lods
cmp
cmpl
jl
cmc
or
cmp
cmc
jbe
dec
xor
jge
out
add
loopne
cmpsb
aaa
xchg
pop
test
mov
cmpsb
cs
mov
lcall
mov
lods
xor
push
xor
sahf
pop
aad
jb
sub
jecxz
jge
stc
sub
cmp
test
movsb
sbb
mov
sbb
loopne
add
outsl
shlb
jmp
leave
sbb
call
jno
dec
in
cli
icebp
test
jge
xchg
adc
arpl
insb
scas
xor
adc
sub
lods
xchg
shll
stos
xchg
rclb
sub
shrb
mov
or
cmp
fnstsw
fwait
in
je
or
lret
inc
ja
cmp
cmp
sub
pop
add
adc
aaa
popa
dec
inc
jno
xlat
ficomps
mov
in
mov
filds
sbb
imul
loop
inc
cmc
ss
and
sub
dec
leave
push
cltd
sbb
xchg
lds
adc
sbb
ss
add
jmp
fisubrs
add
daa
inc
das
mov
rcr
ret
stc
push
jg
shlb
xchg
xor
into
in
movsb
clc
xchg
xlat
dec
test
push
lds
dec
inc
es
nop
std
mov
in
adc
push
xchg
jle
adc
mov
out
inc
mov
mov
rcrb
cli
pop
jle
sbb
repz
imul
xchg
gs
push
ljmp
lods
aaa
add
dec
loopne
and
and
inc
push
dec
jno
mov
incl
hlt
std
mov
out
subl
sbb
jp
cld
push
shrl
out
pop
mov
divb
out
push
cwtl
pop
cmp
ficoml
dec
pop
jb
out
dec
xor
movsb
ret
daa
add
test
stos
and
rorl
cmpsl
adc
jp
inc
mov
mov
aas
or
nop
mov
add
inc
inc
mov
out
and
test
jno
cs
clc
lahf
push
push
or
jecxz
add
shlb
shrb
cs
shll
sbb
ficoms
mov
ficoms
cmpsl
lcall
int3
shlb
outsb
jge
fwait
mov
ret
push
adc
ljmp
int3
sbb
test
popa
test
out
lea
lret
out
mov
inc
push
xor
mov
dec
xchg
das
and
or
mov
daa
xchg
std
add
fsubl
ja
and
mov
inc
adc
stc
std
add
add
lret
aam
lock
orb
aad
cmpsl
or
adc
mov
sbb
add
outsb
sahf
dec
xchg
mov
out
mov
push
jne
cltd
and
cmp
mov
sbb
xchg
add
repnz
fidivs
xor
hlt
sub
mov
or
loopne
test
xchg
leave
sub
push
push
pop
jb
fcomip
dec
adc
xchg
add
fbstp
lods
test
out
sub
dec
jnp
cmp
dec
xchg
in
mov
sahf
int
shrb
jno
or
bound
mov
pop
cmp
fdivrl
mov
popa
cs
jle
mov
inc
lods
cmpsb
cld
dec
xor
sbb
xchg
jae
xor
rcrb
xchg
iret
je
pop
rol
jnp
mov
pop
jae
mov
loopne
jmp
push
ss
ss
add
cmp
mov
jge
loope
mov
les
push
adc
and
pop
nop
mov
push
movsb
mov
sbb
mov
push
mov
jo
addl
out
imul
adc
iret
sub
dec
fdivs
and
sahf
das
sbb
outsb
fimuls
sub
repz
mov
xor
push
adc
jo
and
test
dec
cmp
pop
lret
ret
fisubl
mov
mov
mov
inc
sbb
outsb
or
adc
out
mov
mov
movsl
sbbl
xlat
xor
xor
sub
mov
dec
cmp
jle
adc
imul
idivl
or
mov
rorb
daa
adc
test
repnz
xchg
pop
aaa
or
jnp
pushf
rol
test
stc
adc
mov
and
xchg
or
sub
shlb
jl
pop
mov
push
test
das
jmp
mov
xor
aas
sub
decl
incb
adc
imulb
pop
js
adc
outsl
mov
test
sub
push
add
fidivl
adc
mov
mov
and
sub
mov
in
scas
hlt
lret
cmpsl
pop
or
mov
inc
xchg
adc
ljmp
gs
jbe
fidivl
cmp
push
aad
xlat
ds
and
fwait
push
ret
into
dec
adc
dec
xchg
xor
inc
mov
sub
xchg
in
rorb
or
pop
mov
inc
or
xchg
mov
or
mov
jle
aaa
inc
out
test
loop
xchg
lret
dec
ss
gs
jae
xlat
jge
mov
outsl
inc
adc
mov
scas
aad
vfrczps
lret
and
pop
insl
aaa
lock
push
adc
out
xor
dec
inc
and
xchg
inc
in
mov
scas
pop
mov
inc
push
cmc
pop
inc
cld
fdivp
lods
adc
pop
dec
mov
fnstenv
in
xor
arpl
sub
outsl
insl
mov
fldl2e
and
push
movsb
negl
jb
sub
xor
es
test
jno
shl
popa
push
mov
dec
lods
xchg
xchg
outsl
imul
mov
sub
jno
clc
xor
shll
pusha
outsb
or
mov
fmuls
rcrb
add
xchg
out
nop
imul
mov
mov
jo
push
pop
jle
aas
xor
push
xchg
loope
jnp
int
arpl
sbb
es
insl
subl
mov
das
rcrl
jmp
or
enter
cld
sub
or
sub
data16
dec
cmpsl
adc
lods
pop
lea
add
call
loopne
mov
sti
jb
inc
hlt
pop
mov
add
ds
sub
push
insb
repz
in
mov
and
in
gs
loopne
adc
negb
ret
shrl
dec
xor
mov
divb
cmp
add
xchg
notb
cmpsl
add
jl,pt
and
test
les
icebp
iret
cmp
xchg
outsb
cwtl
or
mov
xchg
pop
sarl
roll
test
loope
and
mov
cmp
cmp
and
push
xor
lock
sahf
leave
pop
cmp
fstpt
push
adc
xchg
fstl
into
ds
into
lahf
imul
jo
lahf
pop
cmp
xchg
jb
aaa
mov
mov
jp
mov
das
add
sbb
jns
adc
pop
adc
push
rcl
test
pop
jb
arpl
mov
mov
push
ja
add
mov
out
mov
push
xchg
and
push
fcmovu
in
pop
fwait
or
mov
sub
and
cmc
hlt
push
insl
stos
lods
loopne
jb
jns
sub
pushf
lock
adc
push
adc
add
sbb
inc
lcall
movsl
daa
xchg
mov
pop
call
cmp
dec
pop
sbb
xchg
fsubrl
xchg
cs
mov
in
xchg
out
adc
cmp
arpl
cmp
mov
das
cltd
sbb
and
repnz
xor
sar
ljmp
xor
int
outsl
lods
fstl
hlt
lods
cmp
arpl
les
and
cmp
imul
jne
adc
dec
andb
or
sub
ror
xor
sbbl
scas
out
cld
xor
mov
pop
nop
les
mov
mov
fcmovnbe
int
sbb
xchg
push
add
cmc
lahf
push
dec
pop
loop
mov
int3
sub
and
and
aam
mov
jp
cld
test
sub
add
int3
clc
insb
sub
push
insl
repnz
push
xchg
idivb
push
in
insb
loop
or
es
xchg
out
pop
bound
xchg
nop
bound
data16
mov
push
jecxz
mov
xor
jge
into
cmp
popf
loop
call
aaa
pop
andl
mov
cwtl
push
xchg
jo
mov
arpl
jmp
ds
inc
aad
inc
and
push
push
pusha
sub
xchg
mov
mull
int
push
mov
push
std
jne
ficompl
fcmovnbe
lea
adcl
jo
arpl
mov
cmp
sbb
in
out
cmp
popa
outsb
dec
stos
fldt
push
jne
or
clc
fistl
and
shrb
cmp
sbb
cmpsl
ds
mov
sub
inc
ja
xor
jne
hlt
or
movsl
pop
mov
sbb
loop
clc
xor
call
outsb
sub
or
sub
les
xlat
lret
sbb
orl
push
mov
sti
or
shlb
and
lods
xchg
jne
add
ret
loope
add
inc
mov
mov
lret
scas
cltd
rclb
jmp
cmp
ja
add
sti
jle
stc
jg
jno
add
mov
in
je
daa
sahf
pop
in
in
pop
xor
and
dec
aas
xchg
aaa
jl
insb
cld
inc
aas
inc
inc
cmp
repz
pushf
shlb
and
inc
sarb
sbb
mul
mov
jmp
inc
clc
aas
leave
mov
cmp
push
fisubs
cmp
imul
test
and
movsl
lret
xchg
jmp
dec
mov
jbe
shll
fstl
outsb
inc
testl
daa
das
popa
ret
push
gs
xchg
sub
jg
out
mov
adc
xchg
inc
sbb
or
inc
jl
outsb
xchg
xor
adc
xchg
cld
pop
stos
sub
pop
stc
stc
std
xor
inc
and
mov
push
pop
ds
sarb
cmpsl
das
jecxz
mov
lea
fs
clc
icebp
inc
fmuls
sub
bound
push
sub
std
push
push
push
jge
sahf
dec
mov
jno
icebp
lea
add
hlt
out
mov
aam
insl
stc
mov
mov
lret
in
rcll
inc
shrl
divb
fisubrs
negb
pop
stos
lea
lds
jg
or
subb
jns
xchg
cmpb
mov
loop,pn
xchg
mov
cmp
xchg
bound
and
out
es
shll
lahf
add
mov
je
int3
inc
pop
lods
pusha
mov
push
push
or
scas
ds
in
ljmp
and
shll
push
adc
adc
sbb
mov
orl
or
xlat
idiv
sbb
rcrl
arpl
sbbb
repnz
or
mov
mov
push
push
jecxz
inc
mov
scas
sub
mov
inc
js
lock
gs
jge
mov
cltd
and
insl
std
lret
cmp
int
or
dec
pushf
or
jge
pop
mov
jle
add
cli
fwait
aad
adc
mov
shl
sub
fsubrs
push
sarl
in
or
mov
mov
mov
or
fbld
push
add
bound
bound
imul
stos
out
pop
push
mov
inc
adc
push
xchg
push
mov
mov
cmpsb
push
ret
cmpb
cmc
cmpsb
or
jo
mov
mov
adc
ret
in
inc
outsl
cmp
cwtl
dec
jae
cld
or
xor
insl
fimull
bound
xor
mov
xchg
cmp
pop
mov
jle
jle
mov
cli
mov
cwtl
test
cmpsb
lret
xor
push
dec
lods
cmp
or
rclb
aas
push
fistps
pop
jg
enter
std
loopne
pop
in
cmpsb
popa
jg
xchg
jae
cld
loope
pop
or
adc
fldt
push
addr16
idivb
test
mov
out
mov
xor
and
adc
addr16
sub
push
jecxz
negl
xorl
add
out
pop
xchg
sub
push
push
mov
out
inc
push
and
sub
and
lahf
orl
outsl
mov
out
adc
insl
xor
sub
cmc
aam
int
push
out
or
xchg
arpl
aad
fisttps
ljmp
add
loopne
lea
push
pop
sub
clc
test
inc
cmp
xor
aaa
dec
mov
test
mov
jmp
sub
icebp
icebp
bound
ret
aaa
scas
and
pop
sub
rcr
cmp
test
xchg
test
bound
inc
dec
or
push
push
jb
mov
imul
dec
pusha
aas
fs
mov
mov
pop
mov
mov
ja
outsl
cmp
cmp
andl
shl
int3
xchg
mov
lods
movsl
scas
and
xchg
lahf
sbb
rorl
jae
xor
mov
jge
rclb
in
jmp
rol
add
pcmpgtb
shrl
popf
cmp
stos
in
das
arpl
pop
push
pop
mov
adc
andl
sahf
std
es
push
xchg
or
gs
sub
and
pusha
jg
mov
inc
stos
push
jb
mov
mov
cmp
and
popa
repz
clc
pop
adc
lcall
cmp
push
in
mov
lcall
mov
in
ret
inc
clc
push
int
xor
ret
fcmovbe
and
jne
and
cmp
ficomps
mov
pop
mov
xchg
les
mov
test
shr
xchg
xchg
lods
lods
and
gs
xchg
mov
push
mov
sti
xor
jb
xchg
leave
sbb
xchg
outsl
aaa
and
or
lahf
xlat
xchg
mov
daa
add
leave
or
mov
lea
ljmp
and
jmp
xlat
mov
dec
jbe
aam
mov
ret
pop
mov
jnp
jle
ret
sbb
es
adc
aam
sbb
into
inc
mov
scas
lret
or
clc
scas
sbb
lret
adc
pushf
mov
movsl
sbb
or
mov
adc
lcall
xor
push
cltd
add
dec
or
adc
sti
jp
cmp
fists
pop
data16
sbb
nop
mov
xchg
sub
ret
bound
add
mov
xchg
imul
rorb
imul
mov
test
iret
dec
roll
mov
inc
jp
ss
flds
jmp
adc
pusha
ja
pusha
mov
sub
cmp
and
cmp
add
xchg
mov
adc
addr16
mov
add
in
in
xchg
xchg
pop
inc
jge
cltd
jns
shlb
sub
repz
pop
cmpsl
shrb
jg
loope
nop
cltd
dec
cmp
jl
pop
mov
rcrb
mov
out
das
lods
and
aam
jne
mov
repz
sub
leave
in
mov
pusha
mov
negl
pop
movsb
movsl
adc
enter
mov
or
test
lock
pop
fwait
jne
inc
lret
pop
stos
mov
jl
out
push
dec
xchg
stc
jne
insb
lock
and
sbb
hlt
dec
pushf
jle
xlat
and
in
sub
mov
jnp
pop
sub
mov
enter
std
pop
sub
jecxz
scas
mov
sbb
jle
lahf
jbe
mov
sub
in
fwait
jbe
jge
xor
iret
fldcw
jbe
sbb
ss
fcoms
dec
cwtl
and
push
mov
stos
idiv
mov
inc
test
add
dec
xor
inc
insl
inc
stos
add
into
outsb
push
notl
cmp
pop
rcl
iret
pop
add
jle
inc
jmp
inc
aam
outsb
mov
and
dec
or
outsl
int3
lock
add
aaa
xchg
arpl
adc
inc
dec
mov
sbb
jb
cmpl
xchg
mov
mov
and
pop
int
nop
jl
add
push
dec
sti
fistpl
fidivrs
xor
inc
jbe
aam
pushf
inc
sahf
adc
bound
dec
jnp
loope
push
addr16
add
mov
mov
mov
inc
nop
push
jmp
adc
lds
cs
mov
ljmp
mov
cmp
jns
les
ret
xchg
xor
leave
jo
push
nop
lcall
and
jo
sarl
std
mov
es
or
mov
das
inc
hlt
mov
xchg
fmul
int3
in
aaa
inc
into
movsb
push
cld
test
mov
push
add
fs
xchg
cwtl
test
jnp
repz
arpl
lcall
jo
lds
inc
jmp
loopne
mov
or
xorb
loopne
cmp
aas
das
sahf
xlat
or
adc
cs
mov
cmpsb
mov
jl
push
mov
push
fistps
daa
xchg
xchg
sbb
jo
xchg
hlt
dec
pop
outsb
xor
jno
loope
insb
sub
adcb
mov
stos
ds
mov
rorl
push
pushf
cltd
fcoms
adc
jne
and
mov
loop
push
cltd
xchg
push
imul
adc
cmp
xchg
mov
test
popa
pop
mov
adc
and
push
sbb
adc
inc
fnstenv
dec
mov
dec
mov
movsb
lret
push
mov
adc
negb
add
pop
fnstsw
fs
push
cmpsb
add
jo
test
xchg
cmp
out
ss
lds
and
add
cmp
int3
mov
repz
out
cmpb
or
push
in
movsb
dec
mov
andb
push
out
mov
cld
mov
testl
jecxz
std
add
ja
sub
dec
xor
cmpsl
pop
or
and
add
movsb
sbb
nop
push
loope
loopne
loope
movsl
cli
mov
mov
mov
bound
mov
pop
lock
pop
sub
repz
mov
adc
cmp
shlb
xchg
movsl
push
imul
push
movsl
adc
cmp
adc
push
ja
pop
cmp
and
test
fnstsw
push
mov
mov
pop
dec
idiv
inc
inc
adcl
xor
inc
lods
sub
xor
xor
stos
push
xchg
fcomi
mov
fisubrl
sbb
or
loope
pusha
add
fcomps
sbb
add
sub
fwait
and
or
test
push
mov
cmp
push
pop
mov
push
xlat
shlb
pushl
dec
int3
scas
pop
dec
sbbl
jns
imul
insl
dec
push
jno
adc
rcl
add
popa
xchg
add
fcmovnb
sbb
movsb
mov
add
mov
cld
popf
les
stos
dec
push
cmp
lret
pop
dec
popf
out
mov
scas
mov
scas
mov
dec
cli
add
aaa
sti
popf
cli
dec
ja
lret
and
addr16
iret
push
fisubrl
sub
popf
imul
jl
adcb
sub
pop
fldcw
sub
xor
inc
in
insl
adc
movsl
mov
mov
aad
lock
or
mov
xchg
std
sbb
sarb
sub
out
jle
mov
das
xor
cmp
fildll
add
xchg
inc
ret
les
icebp
push
repnz
cmp
minps
or
sub
fwait
jnp
mov
aaa
jg
faddp
out
popa
dec
clc
cld
pop
xor
andl
inc
or
std
mov
sahf
lahf
rcr
sub
xchg
push
inc
lock
lahf
and
leave
adc
jnp
cmpsl
cmp
pusha
int3
adc
inc
jae
ja
mov
aad
mull
sbb
cmp
add
jp
lahf
mov
dec
xchg
loop
mov
icebp
sti
ss
and
xchg
push
push
pushf
jbe
sti
push
ljmp
adc
push
push
imul
mov
mov
cmp
je
sti
insb
and
pop
and
inc
mov
cmp
mov
movsl
mov
js
push
aas
jp
js
mov
push
es
stos
ja
pop
lahf
mov
lret
sub
and
enter
fisubl
in
notl
xchg
je
popa
enter
stos
std
jecxz
in
or
or
mov
push
sbb
or
pop
xchg
cmpb
stos
jl
clc
or
jl
and
int
jno
jbe
mov
into
jo
in
testb
push
loopne
lods
jmp
cltd
inc
or
add
and
cld
outsl
inc
and
fwait
addr16
jae
cli
dec
in
lods
not
rcrb
xchg
add
clc
mov
fistl
repz
mov
fidivrs
inc
in
jno
test
mov
xorb
and
dec
test
jg
sbb
mov
out
push
mov
cld
imul
out
dec
xchg
fs
pusha
sub
fimull
adc
call
add
cmpsl
push
add
ja
lock
push
cmp
out
popa
fs
fstl
and
or
cli
sbb
lods
data16
pop
jle
inc
jg
jle
hlt
mull
addr16
loopne
mov
push
push
fldenv
lea
sbb
neg
fxch
mov
push
mov
test
jg
mov
xchg
cli
cs
jle
ret
aas
mov
lret
xchg
mov
stos
daa
aad
scas
inc
mov
mov
shld
adc
cmc
movsl
rcll
pop
outsl
pusha
pushf
jo
mov
movsl
mov
cld
add
dec
or
mov
push
nop
jbe
push
sub
add
or
pop
fwait
jbe
mov
std
pop
xchg
loop
test
jle
cmpb
add
dec
xor
add
loopne
adc
popa
fildll
sub
mov
add
testl
or
mov
out
pop
fisttpll
xor
jp
addr16
ret
and
sub
jl
out
scas
int
shlb
test
ss
or
jp
movsb
test
notrack
cli
addl
xchg
xor
outsb
movsb
sbb
xor
mov
cwtl
iret
mov
mov
fcompl
pop
sub
or
pop
xchg
fcoml
inc
icebp
adc
mov
fdivrl
xor
in
cwtl
hlt
cltd
mov
cmp
sub
mov
addr16
test
and
std
jg
mov
ret
adc
rcl
push
add
arpl
push
xlat
into
sahf
xlat
fsubrl
add
xchg
loope
mov
fcmovb
in
pop
or
cmp
sahf
je
add
or
pop
jl
and
jmp
inc
js
xor
xor
loop
mov
insl
mov
push
mov
push
imul
add
jg
xor
sub
adc
xor
or
ror
loop
pop
rcr
int3
mov
sub
pusha
inc
add
test
dec
mov
cmpsl
lods
pushf
and
cld
stos
int3
pop
dec
dec
xor
sbb
test
push
out
pusha
adc
fwait
push
or
repz
scas
arpl
lcall
in
aad
out
jge
aas
int3
rcll
inc
fsubl
xchg
in
mov
aaa
mov
or
jbe
sub
xor
jno
inc
push
notl
lea
add
in
xchg
push
mov
adc
insb
mov
adc
adcl
sbb
mov
aas
aas
xchg
dec
aam
dec
dec
xchg
cld
pop
lahf
xchg
es
inc
jns
sbb
shll
int3
cld
test
js
loope
imulb
jle
ffreep
enter
incl
mov
icebp
cmpsl
mov
ds
jg
xor
dec
and
testb
xchg
pop
jl
jbe
jnp
movsl
int
cmp
add
test
stos
fs
xchg
inc
mov
sbb
fiadds
std
or
sub
fidivs
js
mov
cmp
sbb
mov
sub
scas
jb
aad
daa
test
jmp
jo
pusha
xchg
insb
sbbl
into
inc
xor
scas
cs
jns
inc
inc
ds
inc
push
inc
push
add
cmp
sbb
sub
pop
xor
xchg
add
pop
dec
sti
cmc
adc
pop
and
jb
mov
cmp
cmpsl
inc
jg
movsl
ds
jb
xor
fs
xchg
leave
sbb
dec
push
mov
lods
fists
jl
or
push
fcomps
add
fcomp
adc
pop
adc
cmc
fsts
sbb
lahf
movsb
sahf
mov
or
dec
cwtl
jb
paddusw
adc
add
push
fisubrs
loopne
into
sbb
adc
fidivrl
stos
cmp
in
or
mul
shlb
add
sbb
dec
dec
enter
xor
movsl
adc
lcall
mov
add
fisubl
cmp
jnp
insb
cmpsb
mov
pop
jbe
mov
cli
mov
mov
fldcw
ljmp
scas
jbe
lret
outsl
jae
adc
cmp
mov
ljmp
xor
dec
lock
cmp
mov
add
aas
pop
and
rcrb
arpl
fimull
ja
pop
cmp
jl
in
sar
push
pop
popa
jne
add
stos
sbb
and
dec
stos
enter
inc
test
decb
mov
cld
mov
push
jnp
mov
adc
stos
jg
mov
sbb
faddl
adc
mov
mov
in
xchg
mov
mov
andb
or
pop
cwtl
mov
sub
mov
aam
pop
loope
stos
push
clc
ret
ret
jo
lahf
ret
hlt
and
pushf
leave
int
out
mov
pop
mov
bound
inc
movsb
hlt
rorb
fs
mov
pop
mov
imul
and
push
ja
rol
mov
cltd
cmp
cmp
lods
test
lods
les
mov
mov
adc
aam
inc
sti
add
fwait
imul
push
add
and
and
pop
and
lods
imul
mov
cmc
lock
aam
mov
ljmp
ds
aad
cs
push
repnz
in
adcl
mov
ficoms
sub
aam
scas
int3
scas
sbb
sbb
sub
idivb
sub
frstor
in
cs
pop
mov
xchg
cltd
incl
jp
test
loop
mov
clc
xchg
and
jbe
push
xchg
outsb
stos
popa
and
std
xor
cmpsl
leave
xor
add
inc
aam
unpcklps
dec
adc
dec
nop
jne
das
jp
cmc
add
or
enter
cmc
push
add
mov
ds
rorl
xchg
jmp
fsub
out
pop
push
das
in
cmp
mov
push
aas
dec
aaa
mov
adc
mov
dec
jne
popa
fs
inc
icebp
fdivrl
cmpsb
jp
xchg
add
mov
adc
jmp
insl
jo
ret
inc
test
jle
pop
out
fwait
mov
cltd
in
aad
sti
dec
cs
loop
enter
cwtl
pusha
push
jl
daa
loope
shl
scas
ret
icebp
add
push
dec
repnz
popa
mov
cmpsb
hlt
push
add
popa
push
call
sub
mov
iret
lods
imul
xchg
nop
mov
pop
js
mov
test
sbbb
pop
and
movl
fstpt
cmp
fimull
pop
dec
pusha
inc
xchg
and
testl
mov
mov
lret
test
sub
push
femms
ret
xchg
scas
jmp
in
push
mov
mov
adc
cmpsb
mov
mov
into
pop
adc
outsl
jnp
xchg
push
imul
das
dec
jl
ljmp
les
je
movsl
stc
lret
dec
push
push
jb
pop
xchg
repnz
cmpl
rcll
xor
jmp
insb
jge
in
lods
and
or
xchg
out
push
mov
mov
and
mov
inc
std
add
jecxz
out
pop
insb
test
inc
sub
testb
inc
push
jmp
and
mov
jae
lcall
inc
push
hlt
mov
test
xchg
lcall
loope
cmp
sti
push
mov
inc
pop
sub
test
clc
sbb
out
decl
movsb
dec
jae
xchg
xor
mov
shlb
data16
scas
scas
bound
dec
rolb
cli
leave
push
jecxz
pushf
into
and
or
outsb
cmp
in
lds
fildl
outsl
cmpb
loop
and
push
xor
shrb
jg
stos
cli
incb
mov
movsb
aam
in
adc
jns,pn
test
gs
test
push
dec
insb
test
or
test
movsb
mov
mov
lcall
scas
sub
lods
xor
std
dec
rcrl
sbb
inc
inc
inc
mov
pop
and
xchg
dec
js
add
adc
sbb
stos
idivb
daa
push
arpl
sbbb
cmpsl
jl
push
pop
movsl
jnp
in
mov
ss
cmp
and
loopne
jge
pusha
cwtl
popa
stc
rorl
xor
test
dec
add
imul
lds
scas
or
mov
cmp
sarl
imul
push
xchg
mov
sbb
loopne
push
lahf
mov
inc
mov
jle
int3
repnz
and
in
xchg
loop
add
test
push
aad
push
mov
imul
xchg
idiv
loopne
cmp
or
mov
enter
out
icebp
jmp
xchg
arpl
out
nop
les
pop
mov
cmp
lods
sbb
or
shll
call
mov
or
inc
ja
and
mov
cwtl
inc
sbb
xchg
lods
sub
pop
mov
hlt
jb
aas
adc
push
popa
mov
imul
xor
fwait
in
mov
ffreep
cli
loope
daa
test
or
cmp
cs
inc
out
in
and
inc
sbb
pop
dec
pop
adc
pushf
jg
adc
mov
and
fcmovu
pop
in
aas
ja
aam
out
popf
je
rcrl
jl
fwait
addl
xor
and
lods
pop
pop
add
mov
and
sub
cltd
je
repz
dec
rolb
push
aad
sub
mov
popa
xor
pop
and
mov
jno
test
shl
cmpsl
mov
mov
sbb
dec
add
xchg
aam
add
dec
jp
ret
mov
inc
std
scas
mov
popf
push
xor
mov
lds
into
out
movsb
or
inc
scas
mov
jnp
mov
sbb
push
push
xchg
pop
adc
daa
pop
arpl
insl
sub
jp
cmp
xchg
rolb
imulb
stos
add
mov
rorb
insl
mov
sahf
mov
add
cmp
add
rol
movsl
jg
icebp
xchg
xor
nop
data16
testb
dec
rep
lods
mov
es
movsl
sarl
bswap
shrb
fwait
call
inc
mov
xor
add
mov
cmp
mov
pop
in
pushl
icebp
outsl
addr16
negl
mov
imul
jecxz
dec
jle
out
rorl
mov
sbb
cld
enter
sub
mov
add
or
xchg
mov
movsl
jnp
nop
add
stos
xor
mov
std
imul
clc
or
sahf
and
xchg
xchg
xor
sub
jns
push
push
ljmp
pop
dec
pop
cmc
test
jne
js
cwtl
loope
mov
out
inc
stos
loop
and
dec
cmp
shll
jmp
out
xchg
mov
xchg
dec
inc
pop
cld
jge
icebp
inc
out
pop
xchg
adc
adc
inc
push
pop
sti
out
aaa
cmp
dec
mov
push
or
pop
adc
in
mov
dec
shr
fcom
inc
jle
inc
aad
jne
pusha
scas
in
sahf
xchg
pop
shlb
mov
and
fbstp
lods
icebp
and
inc
test
js
movsl
inc
push
xor
or
mov
jns
ss
lds
lsl
inc
adc
add
mov
inc
inc
add
mov
ljmp
jns
adc
addr16
mov
cmpl
es
clc
cmp
mov
adc
cltd
lahf
scas
mov
insl
push
or
sahf
cmp
push
aad
and
add
and
mov
ljmp
add
lret
push
mov
test
pop
into
pop
dec
sub
incb
sbb
movsb
cmc
movsl
insb
xor
loope
fwait
setp
sbb
dec
int3
sub
sbb
das
mull
sbbb
pop
movsl
cmpsb
icebp
orl
sbb
ror
aam
mov
push
jb
push
aaa
mov
fisttps
int
jmp
and
out
xchg
push
int3
sbb
jo
sbb
add
mov
mov
int
out
aad
and
test
out
popf
sub
icebp
sbbb
into
out
xor
mov
jno
enter
add
jae
das
dec
inc
jns
jecxz
aaa
iret
imul
mov
adc
pop
xorb
mov
js
lahf
clc
inc
mov
push
mov
shlb
sbb
add
cld
xchg
cmp
jp
sub
ret
mov
or
or
mov
ljmp
add
adc
push
mov
scas
mov
jns
push
test
mov
jg
int
ret
cmp
jge
xchg
imul
jmp
jmp
inc
mov
jne
pop
xor
xor
cmpsl
mov
adc
fisttps
jp
jmp
jp
jmp
movsl
sarb
push
shrb
mov
cmc
or
lret
test
jbe
ljmp
cmp
mov
ds
repnz
or
pushf
lcall
xchg
jmp
negl
lea
lods
lret
mov
adc
mov
mov
insl
lods
out
lods
hlt
jno
cmpsb
jp
int
ja
fwait
sti
loop
pop
cmp
stc
jae
aaa
test
rcr
pop
and
in
or
shrb
xlat
adc
data16
jo
xor
addl
fistps
out
jbe
hlt
mov
inc
jl
jo
mov
pop
xor
jmp
cs
dec
int
mov
adc
push
sbb
dec
fistpl
xchg
scas
pusha
jns
jno
pop
test
clc
cs
cmp
or
add
jle
xchg
sub
jecxz
lds
add
adc
mov
popf
lods
imul
jmp
leave
mov
inc
addr16
in
jle
mov
xchg
fisubrl
je
cmp
sbb
sub
adc
fcmovnbe
cmp
nop
jge
xlat
or
cmp
pop
addr16
push
and
mov
jmp
stc
loopne
jns
adc
loopne
dec
arpl
xlat
shll
adc
pushf
int3
ds
test
xchg
or
push
lea
pushf
sub
hlt
push
std
pop
inc
or
ret
out
mov
ja
pop
fsubrp
aad
jge
daa
mov
in
push
adc
popa
add
xchg
stos
das
sbb
ss
push
pop
and
stos
lcall
fwait
daa
ret
dec
fbld
je
cmpsb
pop
sti
test
ljmp
jmp
aaa
out
add
sbb
jge
sahf
push
fs
dec
push
xor
sbb
mov
jge
sub
push
lret
pop
sub
rcrb
or
test
xchg
int
jmp
fiaddl
and
bswap
cmp
fidivl
xlat
sub
inc
mov
dec
xchg
mov
lods
mov
inc
mov
dec
fmuls
mul
mov
push
or
inc
lcall
mov
xchg
mov
push
clc
das
or
sub
push
or
xlat
popf
xchg
outsb
and
mov
movsb
pop
and
adc
das
push
test
jnp
adc
xchg
loopne
mov
inc
imul
mov
xor
and
sbb
ss
push
mov
dec
test
adc
add
mov
push
pusha
jno
sbbl
sub
out
or
jno
scas
roll
aas
xorb
mov
adc
enter
xchg
xchg
sti
mov
sbb
and
dec
shlb
push
jne
test
mov
or
lahf
push
mov
shl
test
add
pop
sbb
inc
mov
add
ret
push
inc
push
enter
inc
enter
idivl
inc
jo
popf
js
push
mulb
leave
or
ss
cmp
lret
pop
out
dec
jge
scas
cmp
and
mov
andl
sub
jb
inc
stos
inc
push
je
loop
mov
jg
jae
ds
sub
lea
inc
push
mov
aam
jo
rcr
adc
xchg
inc
popl
sbb
inc
enter
or
gs
sub
xchg
arpl
mov
mov
std
orb
clc
mov
sub
mov
aas
out
push
push
sar
cmpsb
ds
repz
mov
rclb
test
fistps
pop
cmp
xor
cld
push
call
adc
addr16
cs
imul
or
pop
lret
mov
inc
int
sub
xchg
leave
out
inc
mov
mov
cmpsl
add
or
sub
mov
jno
shrl
stos
jle
lahf
stc
fsts
lock
adc
mov
sahf
mov
inc
push
xor
xor
jmp
mov
or
xor
and
out
cli
jg
xor
sbb
xor
xlat
loope
or
js
outsl
aam
aam
hlt
dec
int3
pop
lret
pop
outsb
pop
sub
jle
dec
testl
inc
fst
pusha
aam
lahf
popa
or
aad
cli
outsb
and
xchg
sub
ret
movsb
mov
les
jae
rcll
push
mov
das
ds
inc
and
decl
adc
cmp
push
inc
les
ret
negl
adc
xor
int
sub
shlb
pop
imul
std
pusha
jns
push
in
fisttpll
arpl
bound
cmp
imul
mov
jl
icebp
adc
scas
gs
pop
adc
cmp
cmp
dec
sbb
xchg
jns
inc
push
jno
mov
je
loop
xchg
and
sub
nop
and
jp
and
out
mov
mov
mov
nop
int3
push
into
jo
popf
push
mov
sbb
jae
test
cld
sbb
inc
in
sbb
out
mov
sub
or
adc
xchg
sbb
mov
test
loop
roll
xor
test
inc
fidivs
push
pop
mov
sbb
mov
push
arpl
or
push
out
push
or
std
lret
xchg
das
and
and
jg
add
dec
ja
hlt
mov
sbb
push
pop
fsubrs
pavgw
mov
faddp
mov
fstpt
mulb
aas
cmc
cmp
pop
sbb
ds
cmp
dec
mov
xlat
pop
inc
cmp
call
inc
inc
negl
or
and
jbe
inc
lods
jae
fwait
pop
movsl
mov
xor
cmp
sbb
cmp
out
out
xchg
xor
ds
xchg
loop
orb
ja
push
sub
ja
sub
sarb
xor
mov
aas
inc
inc
xchg
cmp
sub
imul
jmp
test
cmpsl
xor
aaa
inc
lret
xchg
es
clc
add
jns
xchg
dec
fbstp
aas
xchg
cmp
in
je
idiv
aaa
pop
pop
repz
ficomps
and
aaa
cmc
mov
int3
xor
or
mov
stos
mov
outsb
push
dec
xor
mov
cmc
mov
jp
adc
mov
fsubrp
dec
mov
test
sbb
pop
push
or
cmpsb
sbb
inc
adc
fldl
test
cmp
iret
and
push
inc
popf
add
or
mov
or
mov
pop
jne
sub
jbe
addr16
sbb
mov
push
lock
sub
mov
fiadds
cmp
dec
add
das
mov
sbb
and
xchg
mov
jge
aas
push
out
xchg
jns
sub
cmp
sub
test
mov
in
lret
jnp
add
adc
pop
jl
pop
cmp
push
dec
fidivrs
cmpsl
out
pop
or
adc
roll
hlt
sub
mov
pop
pusha
mov
mov
or
jns
ja
mov
or
outsl
cld
lea
mov
lahf
or
and
adc
xor
xchg
lds
cmp
lcall
and
jb
imul
shl
xchg
jo
decl
mov
add
sbb
sahf
or
pop
daa
fdivrl
loope
addr16
push
sbb
outsl
in
jmp
pusha
daa
xor
data16
andl
js
and
imulb
bound
mov
insl
jno
cmp
std
push
scas
sub
cltd
hlt
and
push
and
clc
inc
jmp
cmpb
xor
sbb
mull
sti
xor
pop
into
xor
aad
cmc
mov
mov
xor
test
call
inc
push
pop
aaa
fcmovbe
std
addr16
das
pop
jmp
movswl
dec
jl
in
sub
lret
xchg
xchg
popa
push
mov
cmp
daa
pop
adc
jae
push
add
mov
and
cmp
adc
cmp
aas
mov
sahf
cmpsl
ljmp
cmp
cmpsl
jo
testl
scas
pop
xor
repnz
xor
les
and
add
or
add
or
cmc
cmp
aad
or
add
and
inc
xor
lds
je
pop
pusha
sbb
daa
bound
stc
xor
jge
lcall
cld
xchg
data16
xchg
fadds
notb
pusha
sbb
int3
cmp
aad
pop
dec
lcall
aad
xor
movsb
lret
inc
popa
pop
push
and
ja
dec
mov
jo
gs
jle
aaa
sbb
fildll
aam
lods
cld
add
enter
or
bound
out
call
int3
mov
mov
sbb
cmp
push
pop
cmp
addr16
clc
xorb
faddp
mov
mov
inc
mov
loope
sub
mov
cli
push
sbb
mov
add
lock
aas
mov
imul
add
jae
lcall
jnp
jns
call
jle
mov
cmp
xchg
mov
lods
push
or
lret
mov
jns
in
fimull
mov
push
jmp
outsl
pop
mov
xor
adc
push
cmp
jge
pop
xchg
ljmp
adcl
mov
xor
cmp
jp
or
pop
ret
cmp
push
mov
add
and
adc
xor
enter
mov
dec
cmp
push
mov
aas
dec
adc
mov
fiaddl
ljmp
sub
xchg
xor
xor
cli
xor
adc
adc
adc
jns
daa
adc
pop
pop
add
out
sbb
das
scas
sbb
int3
sub
negb
push
jns
mov
dec
clc
push
js
gs
lods
inc
aad
xchg
or
jmp
jo
push
in
test
cwtl
mov
jg
jge
stc
adc
mov
cmp
xchg
outsl
outsb
inc
inc
mov
sbbb
les
scas
pushf
push
sub
sub
cmp
mov
mov
gs
fsubrs
push
daa
xor
cmpsl
leave
and
dec
fwait
push
pop
mov
add
sub
aam
bound
mov
push
jl
jg
jnp
mov
fwait
dec
dec
cld
ljmp
push
cmp
jnp
pop
or
xchg
inc
fildll
xchg
add
dec
loope
fwait
iret
in
cmp
push
dec
out
add
les
jae
scas
inc
cld
lds
sub
push
test
push
test
enter
lahf
sbb
pop
adcb
mov
je
pop
push
push
test
or
inc
inc
addr16
or
loop
pushf
into
and
pop
out
sbb
ljmp
lret
xchg
mov
or
dec
adc
movsb
insb
push
jp
pop
mov
test
xlat
xchg
stos
sahf
xchg
sub
mov
add
dec
popf
fisttpl
lea
push
imul
imul
and
fstl
xor
inc
inc
insb
inc
jb
jp
or
mov
and
mov
cmc
insb
pxor
or
gs
int3
lods
xor
sahf
ficompl
dec
aaa
call
std
bnd
jno
sub
xchg
arpl
dec
pop
lock
loope
sbb
lret
and
push
aas
dec
subb
sub
dec
pcmpgtw
js
xchg
mov
jne
dec
sbbl
mov
xchg
data16
cmp
jg
xor
add
dec
out
int
cli
mov
fimull
pop
or
mull
xchg
push
adc
xor
iret
js
movb
push
mov
sub
sub
insl
jne
adcl
sbbb
ljmp
pop
call
shll
cli
jp
nop
stos
sbb
or
aam
add
leave
and
repz
mov
repnz
inc
dec
pop
cli
mov
xor
cld
stos
sahf
push
inc
push
cmp
inc
les
mov
xchg
xchg
in
push
xchg
inc
lds
aas
test
ret
imul
jb
or
inc
pop
cwtl
icebp
push
cs
or
xchg
ljmp
out
xor
cli
adc
outsl
stos
sti
rorl
adc
inc
jle
dec
rcr
xchg
jne
or
pop
imul
imul
pop
fldenv
sbb
lcall
or
jnp
arpl
push
fld
jle
fistps
mov
pop
add
popa
adc
xor
mov
addb
pop
lret
xor
and
sahf
out
cmp
outsb
ljmp
pushf
mov
loope
sub
jmp
xchg
call
or
inc
dec
in
mov
dec
adc
outsl
cmp
and
pop
imul
inc
jae
inc
adc
das
push
in
add
jmp
and
sti
and
stos
cmc
aas
push
mov
pop
sub
das
dec
cmp
or
jmp
or
push
in
repnz
sbb
sbb
sarb
dec
hlt
int
adc
cmp
clc
mov
fiadds
xchg
cmp
adc
arpl
pop
jnp
repnz
jge
and
test
sbbl
fwait
mov
cld
popf
add
inc
jecxz
add
inc
fdivrl
jne
mov
jno
jmp
sbb
push
loope
jp
xor
roll
fs
cltd
add
lods
dec
fmuls
sub
sub
stc
leave
jge
or
out
add
sbb
jp
adc
xor
adc
int3
lock
rolb
gs
sbb
mov
sub
and
mov
push
sub
andl
std
mov
push
ret
xor
dec
aad
arpl
mov
dec
mov
pop
jnp
lods
fcom
push
add
test
push
lret
daa
mov
or
scas
shll
outsb
xchg
data16
mov
push
jb
out
mov
push
cwtl
jne
mov
cmpsb
mov
jle
mov
lds
mov
out
nop
sahf
push
ja
lret
xchg
fdivrs
cmpsl
adc
push
gs
sbb
or
loopne
out
mov
es
cmpl
push
out
and
enter
xchg
pushf
mov
nop
fs
and
shl
adc
int
jle
jnp
mov
push
rol
push
std
test
dec
xchg
mov
imull
push
lea
pop
cmp
inc
push
mov
push
fcmovne
shl
negb
sbb
dec
and
stos
mov
add
sbb
or
xor
xor
inc
xchg
js
fsubl
out
sbb
lods
push
inc
shrl
out
xor
addr16
mov
loope
nop
mov
sbb
adc
cld
jl
or
int3
clc
mov
arpl
adc
nop
xor
push
repnz
test
mov
xor
push
pop
mov
into
cld
xlat
push
lods
sti
movsb
push
sti
add
cs
fsubrl
xchg
call
and
and
aad
incb
dec
mov
das
or
mov
and
add
sbb
pusha
inc
stos
sbb
jo
mov
push
dec
and
xor
insb
lods
cmpl
sbb
fcomi
pop
inc
fcmovnb
or
jae
mov
jb
pop
or
push
and
ja
outsl
xor
add
stc
cmp
aaa
mov
sbb
sub
mov
rcrb
lret
cmp
cmp
pusha
mov
daa
add
adc
scas
imul
sbb
test
out
pop
xchg
mov
outsl
xor
pop
call
xchg
insl
cld
push
adc
inc
or
repnz
dec
aam
mov
rolb
in
data16
mov
mov
push
loope
mov
fcoms
jmp
mov
jp
sub
jg
mov
xchg
stos
lret
mov
in
negb
pop
in
cmp
ret
or
and
mov
jmp
push
aad
aaa
dec
jp
mov
imul
in
out
movsl
dec
mov
jno
xchg
data16
mov
sbbl
fnstcw
pop
inc
or
cwtl
add
xor
mov
cmp
scas
sbb
pop
dec
or
and
adc
fistl
xor
fwait
add
daa
repz
test
push
inc
lcall
mov
dec
mov
inc
pop
imul
add
lcall
and
lds
inc
cmpsb
adc
lods
pop
rorl
inc
ja
addb
data16
jg
dec
jbe
inc
push
aas
or
test
in
pop
and
int
movsb
pop
push
test
or
imul
xchg
adcl
cmp
movaps
lock
into
mov
inc
test
or
sbb
cmp
lock
stc
add
sub
dec
adc
adc
add
add
shll
xor
fadds
lods
stc
pusha
pushf
into
sar
mov
scas
pop
hlt
or
in
sahf
push
inc
jnp
mov
out
mov
arpl
jne
xlat
ljmp
lret
cmpsl
daa
mov
icebp
aaa
jmp
sub
lcall
fimuls
xchg
push
pop
add
push
or
mov
std
or
sbb
push
jle
movsb
setp
imul
push
sbb
leave
jge
mov
fdivr
push
pop
enter
sbb
popa
cmp
mov
lods
push
xchg
cwtl
jne
xlat
lret
stos
gs
or
js
inc
dec
pcmpeqd
xchg
pop
outsl
fdivrl
jp
ret
adc
outsl
out
inc
xor
mov
loope
dec
negb
pushf
inc
loopne
mov
das
ds
jmp
inc
xchg
pop
lods
lods
push
push
roll
lret
pusha
inc
jge
dec
out
or
xchg
lock
into
sbb
mov
pop
out
push
orb
loop
mov
pop
xlat
jge
xor
jo
sub
lock
or
loop
mov
in
std
mov
and
sub
xchg
mov
das
or
hlt
js,pn
lret
loope
mov
pop
xchg
clc
jo
test
jno
mov
sbb
mov
imul
inc
loope
out
dec
jo
test
adc
or
incb
cld
pop
outsl
pop
cmc
xor
or
jmp
jns
lea
pop
gs
loope
cmp
nop
mov
test
push
enter
es
cmpsb
fisubs
mov
lea
cwtl
les
mov
in
out
lock
nopl
sub
cmp
test
cmp
xor
sbb
enter
xchg
gs
mov
pop
pop
loope
jg
ss
mov
push
mov
and
or
mov
fmuls
icebp
test
sub
stos
push
leave
scas
push
push
aad
andl
loop
jno
push
jo
xor
xor
add
cs
lods
cs
call
clc
enter
movsb
xor
out
xor
lret
inc
psubd
push
xor
imul
adc
nop
mov
ljmp
lret
lret
add
sbb
add
jle
test
inc
fsts
or
pop
adc
mov
pop
fucomp
lods
lahf
in
fdivl
scas
xor
jae
lods
jns
dec
adc
fadd
insl
lahf
rolb
enter
sub
push
jne
mov
and
push
mov
mov
mov
sbb
adc
aad
xchg
sub
sub
ss
leave
cmp
add
jge
adc
mov
outsb
aad
lods
dec
dec
ss
push
mov
leave
or
mov
bound
mov
int
sbb
stos
aam
in
mov
xlat
cmp
xor
inc
decb
out
inc
pop
js
pop
div
cmp
inc
dec
sbb
jae
outsb
out
aas
and
pop
outsl
test
jbe
pushf
xlat
ljmp
and
fsts
sub
xor
dec
std
xchg
imul
addr16
repz
jecxz
mov
mov
sbb
mov
mov
movsb
mul
add
movsb
call
pop
jg
mov
or
cmp
sub
pop
xlat
or
lock
lods
push
mov
orb
fidivrs
movsl
inc
aad
push
fidivs
jp
inc
jmp
push
or
push
aad
cmc
inc
insb
jne
sbb
dec
lcall
ret
mov
enter
mov
in
pop
fiaddl
notl
lds
imul
loop
cmp
sahf
sub
in
mov
inc
cmp
bound
sub
mov
add
sbb
and
inc
or
jns
popf
lcall
lods
lahf
add
fsubs
stos
xor
out
xchg
cltd
dec
jae
jmp
cmpsl
outsl
sbb
sbb
cmp
mov
es
test
mov
movsl
mov
mov
ljmp
dec
xchg
sbb
jp
mov
andl
cmp
mov
push
xor
inc
shl
xchg
sbb
in
sti
cmpb
repnz
popf
insl
inc
pop
lret
mov
push
mov
mov
out
sub
xchg
jb
ret
push
out
cmp
aad
mov
enter
sbb
cmp
sahf
into
pop
sub
in
mov
ds
imulb
or
mov
lock
add
pop
pop
xor
or
sahf
data16
pop
or
add
sbb
dec
movsl
pop
jmp
testb
rcll
test
add
xchg
fimuls
out
jnp
fldt
or
lods
idivl
call
pop
mov
jb
call
nop
mov
int3
scas
lock
lods
aas
fsubs
out
adc
setnp
jo
es
mov
jbe
fidivl
loop
insl
aam
imul
adc
cmp
push
push
mov
mov
inc
mov
sub
push
jne
mov
jmp
push
adc
dec
scas
push
insb
test
pop
adc
mov
mov
insl
mov
out
mov
mov
lea
mov
movsb
rclb
fstpt
ficomps
adc
dec
pop
and
loop
inc
enter
cmp
out
xchg
movsb
push
popa
shr
sub
fidivrl
loope
sbb
push
sub
into
jnp
adc
test
ljmp
aas
idivb
test
cli
lds
jbe
dec
and
add
lret
rcrb
nop
mov
dec
es
mov
inc
aaa
rorl
movsl
sub
xor
scas
dec
popw
ja
sub
xor
gs
in
xor
mov
jae
cmpsb
lods
jl
push
enter
popf
popa
imul
call
les
push
mov
les
dec
mov
stc
das
push
mov
test
test
fs
scas
push
insl
sub
inc
lret
and
jnp
push
mov
cmp
sub
sub
into
add
dec
sti
aad
xor
test
mov
bound
outsb
hlt
leave
out
cmp
aas
push
imul
cmp
popf
xor
push
fdivrp
mov
lock
ret
negl
sub
iret
jb
dec
loope
inc
cmc
and
rcll
inc
fidivs
lahf
neg
outsb
pop
mov
cmpsl
cli
stos
out
lock
jge
pop
icebp
cltd
pop
shl
aam
lahf
pop
rorb
pop
push
pushf
shll
push
pop
js
dec
mov
in
int3
pop
and
std
daa
add
pushf
jnp
mulb
jo
xchg
push
pop
ss
jge
not
insb
in
and
mov
push
enter
popf
stos
mov
pop
hlt
mov
add
addr16
lea
test
adc
in
das
or
sbb
lea
add
out
mov
aas
stc
mov
leave
outsb
hlt
dec
and
mov
lods
mov
ret
les
dec
test
jb
sti
cmp
popf
dec
pusha
fmull
test
xchg
lcall
xchg
mov
dec
test
mov
pushf
mov
xchg
adc
pusha
push
mov
rcll
jecxz
sub
stc
imul
in
inc
sbb
jne
inc
ret
andb
mov
std
stc
test
pop
insb
jb
inc
fistl
stc
mov
decl
jmp
incl
inc
jle
cmpsb
scas
icebp
mov
pop
push
push
dec
xchg
cmp
jnp
pusha
into
bextr
clc
test
mov
jge
mov
bound
inc
inc
ljmp
loope
rcrb
scas
pop
adc
jnp
push
sbb
pusha
ret
in
les
xor
inc
xor
clc
pop
sbb
fwait
pop
shlb
jle
lock
ja
lret
adc
fs
cltd
lods
mov
sbb
in
mov
lods
xchg
lret
push
insb
cli
xchg
sti
dec
or
mov
sbb
je
test
push
pop
and
and
sbbl
xlat
adc
cwtl
jne
cmp
scas
sub
cmp
and
test
xor
inc
sub
push
std
mov
aas
pop
mov
sub
mov
mov
jecxz
imul
lret
lahf
mov
sub
fld
cmpsb
call
xor
sbbl
out
adc
push
sub
in
adc
arpl
jmp
movsl
rorl
movsl
std
clc
fdiv
clc
clc
shrl
xchg
adc
jo
test
addb
mov
cmp
and
lret
ljmp
lret
addl
pop
imul
andb
test
push
nop
cmp
cmp
pop
out
dec
enter
sbb
cli
jnp
inc
push
xchg
or
rcrb
adc
fldt
mov
rcrl
lea
add
insl
add
cmp
out
xor
jb
xor
jmp
outsl
lock
cmp
fsts
stos
mul
pop
pop
cmp
jmp
and
imul
mov
fstpl
fs
jnp
loopne
dec
pop
mov
adc
add
aaa
imul
pop
lcall
out
fst
mov
call
jecxz
leave
push
and
jno
scas
je
sahf
shll
push
push
pop
out
cmp
mov
adc
mov
call
and
add
push
fdivs
xchg
cmp
movsb
lock
in
mov
fs
ss
aas
mov
sbb
push
add
popa
jl
fidivrl
sbb
into
les
add
mov
dec
pop
cmp
lock
xchg
ljmp
dec
mull
fildl
lock
int3
fdivl
subl
dec
dec
negb
aaa
enter
sub
xchg
add
jmp
je
xchg
mov
sbb
or
pop
pop
sub
push
js
fstps
mov
out
add
pop
test
dec
shl
lret
and
loop
das
std
iret
sbb
test
dec
std
mov
sti
xor
scas
jne
popf
adcb
outsb
les
mov
lahf
fists
out
xor
mov
mov
fsubrl
and
mov
les
sbb
out
popf
pop
cmc
ss
cmpsl
cwtl
leave
mov
add
movl
mov
leave
outsb
jnp
out
mov
push
adc
ljmp
ret
cmp
xlat
lcall
add
jmp
xchg
inc
cs
pop
mov
xchg
jb
lock
sbb
imul
into
push
xchg
nop
insl
mov
hlt
lods
pop
bound
ja
ja
js
insb
mov
das
sti
xlat
daa
pop
lea
dec
push
addb
ljmp
push
mov
ss
std
and
rorb
or
adcb
cmp
repz
pop
xchg
mov
in
sbb
lea
push
ljmp
imul
mov
jns
push
aad
gs
cmp
sbb
adc
call
js
movsb
adc
sub
sbb
aas
mov
jle
int
sbb
jns
pop
mov
jp
aad
ret
pop
in
pop
imul
jns
mov
cld
mov
loope
loopne
addb
or
std
xchg
pusha
in
sahf
cmp
out
and
inc
adc
scas
sub
xor
sbb
das
pop
jmp
push
repz
data16
or
sahf
inc
sbb
adc
mov
movl
and
out
add
repz
mov
fcomps
cmp
repnz
out
xchg
pushf
mov
icebp
cmp
dec
sbb
xchg
pop
xchg
fnstcw
mov
in
subb
nop
jg
cmpsb
out
adc
mov
fists
je
mov
push
push
stc
dec
js
dec
movsb
cmp
aad
jl
or
sub
mov
inc
push
push
jns
cmc
int
mov
inc
adc
xor
rcll
pop
outsb
fisubl
xchg
cmpsl
push
cmp
lret
xor
xor
add
pop
xor
adc
adc
and
out
or
sbb
xchg
les
pushf
xor
add
shll
jmp
mov
push
ret
icebp
inc
jecxz
fildl
jg
sub
mov
ja
loop
jle
jo
inc
cld
scas
fistl
fwait
add
ficompl
mov
mov
scas
xchg
iret
and
ja
xor
push
lret
ret
sbb
in
dec
rcll
int3
mov
aas
arpl
es
mov
dec
or
cmp
adc
xchg
jnp
stc
push
js
mov
loope
addr16
xchg
jp
negb
cmpsb
or
inc
pop
mov
dec
sarl
and
or
fwait
fs
imul
xchg
ja
xor
cmpsl
jnp
push
ret
shlb
mov
movsb
lods
jne
cltd
fisubrl
aaa
lret
mov
aad
xchg
mov
and
test
addr16
jge
rolb
push
mov
cmp
xor
hlt
in
lock
imul
stos
xchg
cmp
and
rcr
loopne
shlb
cld
jnp
sbbb
stc
test
and
pop
test
pop
adc
cmp
inc
ljmp
xchg
push
pop
divb
jmp
loope
shlb
sub
add
jns
dec
sti
lcall
fwait
cli
or
jp
pop
mov
dec
std
add
add
pop
aas
lret
pop
es
xor
ja
lahf
dec
pop
add
repnz
int3
inc
dec
lahf
movsb
aad
dec
xchg
mov
mov
addr16
mov
mov
sub
fs
mov
mov
sarb
jne
sub
push
enter
popf
shl
fsubl
jnp
cmp
das
add
sub
nop
popa
jge
xlat
shlb
jecxz
sbb
inc
ret
lods
hlt
mov
inc
int3
arpl
push
nop
aas
imul
mov
addr16
rcll
scas
or
sahf
popa
dec
inc
scas
mov
mov
popa
adcl
pushf
jno
aam
decb
imul
sbb
data16
add
clc
jmp
hlt
push
sahf
scas
les
cmp
push
mov
pusha
sub
push
inc
and
mov
mov
jecxz
pop
cmc
add
enter
in
sbb
cmp
adc
test
inc
in
dec
mov
jge
insb
ds
hlt
xor
and
and
cmpb
jo
jns
pop
sbbl
in
scas
pusha
mov
dec
push
test
lahf
in
fldl
dec
mov
xchg
inc
out
mov
std
mov
adc
sahf
xor
push
fcoms
xchg
xor
cmc
mov
mov
lds
or
jmp
out
stos
mov
je
lock
xor
lods
xor
test
divps
das
test
loopne
mov
ss
ret
enter
push
add
inc
jg
arpl
int3
cltd
gs
ds
mov
xchg
data16
mov
in
mov
insl
loope
pop
push
dec
clc
fidivrs
in
ljmp
mov
mov
loopne
adc
mov
call
mov
xchg
inc
cmp
iret
rol
fidivl
pop
arpl
shr
dec
mov
pusha
push
in
cltd
xor
cmp
stos
cmc
pop
mov
mov
xor
inc
mov
sbb
sub
mov
hlt
dec
sbb
repnz
jmp
mov
push
push
mov
push
int
cmpsb
pop
jmp
stc
cli
fidivl
ret
push
xchg
mov
rorl
dec
nop
pop
jo
cmp
int3
mull
fisttpll
and
shl
sti
shrl
inc
mov
or
mov
sti
popf
cli
aam
dec
out
stc
aaa
iret
scas
ja
cmp
mov
push
push
call
fldcw
test
lock
sub
cmp
loop
mov
fildll
movsb
pop
inc
stc
push
mov
inc
add
jne
add
mov
rcrb
psadbw
outsl
mov
jle
inc
adc
test
push
clc
adc
dec
inc
loop
stos
push
jne
lock
add
add
xorb
add
in
mov
mov
adc
and
sub
stc
bnd
mov
jge
push
cld
push
or
call
jg
shrl
pop
xchg
push
mov
dec
lcall
add
and
fildll
ficoml
cld
fucomip
and
cli
and
ja
xchg
loop
daa
in
xor
imul
xlat
popa
loopne
push
jno
test
iret
arpl
dec
gs
daa
clc
stc
mov
outsl
leave
inc
cmp
push
movsb
call
fdivrl
in
mov
pop
jl
imul
leave
add
add
mov
aad
adc
shr
lahf
mov
cmp
mov
movsl
in
je
mov
out
insl
std
add
and
in
mov
mov
or
enter
loop
out
pop
repz
and
vmread
sahf
cmc
leave
mov
insb
insl
aam
lock
mov
lods
xchg
gs
ljmp
iret
add
mov
mov
adc
add
cmp
adc
fcom
mov
jmp
outsb
lret
jecxz
adc
cmc
push
into
mov
addb
cmc
xchg
repz
xor
sahf
xchg
and
mov
in
incl
and
inc
pop
and
lea
cmp
mov
out
and
loop
in
lea
and
mov
outsl
mov
adc
stos
arpl
shll
xor
loop
les
add
push
sub
lock
dec
pop
dec
cmp
push
jg
push
lret
cmp
sub
rclb
bound
push
mov
pop
icebp
dec
inc
mov
test
mov
sbb
xor
pop
inc
sahf
sub
pusha
or
scas
xor
nop
mov
pop
testb
int
jmp
and
or
add
sbb
loope
jecxz
mov
movsl
fidivrl
dec
mov
xchg
xor
pop
jp
shl
cs
and
enter
fimuls
adc
repz
popa
cmpb
xchg
lahf
clc
dec
shl
scas
lea
sub
lahf
cld
mov
mov
adc
sahf
sahf
pop
pop
and
fnsave
jne
xchg
add
push
mov
test
je
or
cmpsl
cltd
mov
leavew
incb
cltd
fwait
jg
xor
dec
dec
pop
pop
mov
pop
adc
add
mov
mov
sbb
clc
adc
lods
xor
sbb
jp
and
xlat
ja
stos
int
loop
cwtl
loop
cltd
loope
pop
adc
insb
imul
mov
inc
mov
xlat
fildll
mov
cli
es
jmp
jb
ficompl
pop
and
dec
or
inc
loope
push
push
sub
pop
lods
call
cltd
jl
call
loopne
in
subb
cmc
bound
add
xor
stos
js
icebp
out
jnp
sub
fsubl
jge
mov
inc
adc
mov
sbb
cwtl
les
stc
lods
inc
or
pop
adc
cmp
out
mov
int
jne
lcall
aad
enter
and
daa
push
fdivs
getsec
shlb
push
out
dec
mov
adc
xchg
cwtl
xchg
inc
cmpsl
push
mov
lods
pusha
or
sub
inc
movsl
shr
jp
repz
or
daa
cmp
fmull
scas
xchg
ja
int
sti
in
cmp
es
sub
test
cmpsb
movsb
and
cli
test
push
lea
push
mov
testl
js
push
xor
add
hlt
push
inc
push
addr16
mov
adc
loope
or
or
or
add
popf
into
shll
xor
aaa
int
sbb
scas
jg
or
out
enter
pop
jmp
cmpsl
cltd
cmp
jp
or
lahf
push
xchg
adc
cmpsl
sub
jl
or
push
out
jb
in
mov
jl
cmp
pop
movsb
inc
pop
adc
or
jno
loope
lods
cld
dec
movsb
push
imul
and
or
push
into
cli
daa
stc
orl
repnz
jp
jle
int
mov
push
ror
lds
jg
in
inc
cs
jg
cld
add
cltd
gs
adc
pushf
jb
stos
popa
popa
push
out
pushf
outsb
mov
dec
pop
test
imul
movsb
push
sbb
testb
sti
push
inc
and
repnz
subb
mov
flds
mov
jns
in
movsl
sbb
adc
inc
stos
aad
loope
mov
push
shlb
or
in
xchg
pusha
movsb
jnp
xchg
mov
ss
loop
pusha
sbb
dec
inc
and
ret
xchg
rcr
add
jmp
pop
sbb
ljmp
pop
pop
lahf
mov
scas
mov
xor
es
jg
movsl
cmpsb
xorb
cmp
dec
xchg
cmp
xor
xor
push
shr
sbb
inc
in
dec
add
repz
mov
or
int3
sbb
iret
jp
mov
push
sub
xchg
cmp
cmpsl
iret
mov
pushf
dec
movsb
pusha
mov
orl
movsb
inc
std
std
movsl
pop
push
sub
adc
push
test
sub
adc
aas
cld
jle
xchg
ja
or
outsl
xor
xlat
mov
pop
ss
cmp
out
cmp
cmp
cwtl
and
leave
js
rol
mov
aad
das
jl
movsb
inc
add
xor
scas
inc
jbe
ficomps
arpl
mov
gs
adc
out
adc
sbb
aaa
pop
jmp
ds
fisubs
sti
in
jbe
test
mov
sbb
test
sahf
icebp
xor
or
mov
jo
out
mov
mov
mov
lcall
xlat
mov
enter
cmp
gs
push
xchg
arpl
icebp
push
cmc
dec
mov
into
sbb
inc
mov
xor
into
cmpsb
xlat
daa
lea
or
lahf
outsb
or
filds
imul
jno
loope
push
ja
dec
dec
xor
dec
adc
cmp
hlt
iret
test
cmp
ljmp
inc
xor
mov
mov
popf
movsb
push
nopl
mov
ja
sbb
cmc
sarl
mov
ds
sbb
pop
cltd
pop
pusha
out
test
imul
mov
inc
pop
push
lret
push
sbb
mov
mov
sub
xchg
or
mov
jle
mov
mov
loope
pop
test
cli
sub
sub
test
xchg
xchg
xorl
pop
xor
out
cmpl
xchg
repnz
sbb
clc
fcomps
jl
mov
sti
mov
les
shlb
mov
mov
jns
pop
push
sahf
imul
push
and
mov
xchg
sbb
test
inc
inc
enter
xor
repz
sbb
in
repz
push
pop
inc
pop
jno
les
mov
xor
js
cmp
sbb
or
jge
es
sbbb
fwait
dec
jmp
jmp
iret
lret
jp
iret
ss
popa
mov
aam
push
add
cwtl
mov
loopne
ljmp
ss
js
add
loope
jmp
xor
jl
les
outsb
subb
sub
add
nop
push
sbb
mov
mov
ret
cmpsl
mov
aas
jns
push
fsubs
lahf
and
push
fs
adc
push
push
pop
dec
ds
imul
out
lock
push
pop
fs
inc
sbb
leave
int3
pop
shl
mov
mov
lods
push
jge
add
imul
gs
pop
frndint
lcall
je
call
test
push
cli
sub
sub
inc
jge
jae
mov
mov
jmp
iret
outsb
push
add
ficoml
lods
rcrb
xor
xor
sbb
cli
push
pop
test
dec
aaa
sbb
xchg
popa
jns
shr
adc
mov
inc
popl
mov
push
movsb
enter
lret
dec
inc
repz
testb
fs
xchg
sub
int3
pop
dec
add
push
daa
hlt
xor
imul
test
mull
inc
cltd
cmp
daa
cmpsl
pmaddwd
pop
es
mov
push
lcall
ja
jp
mov
push
fxch
rol
mov
int3
pop
xor
addb
stos
mov
mov
adc
cmp
mov
or
push
sahf
pop
movsl
xchg
sub
cmpsl
clc
mov
or
sbb
push
hlt
fdivrs
mov
mov
mov
cltd
pop
cmp
ret
sub
jp
out
xchg
pop
sbb
adc
pop
mov
xchg
add
push
movsb
movsb
sbb
xchg
and
adc
sub
les
insb
xchg
xchg
lret
dec
cmc
ret
mov
fwait
pop
in
xor
add
add
lahf
mov
fisubrs
mov
testl
mov
pop
nop
push
pop
out
push
cmp
ja
pop
in
cwtl
inc
movsl
lea
jl
sti
fnstcw
leave
push
push
adc
jmp
scas
sub
xchg
adc
or
dec
pop
lcall
xor
repz
daa
push
lcall
dec
int3
cmp
lret
xchg
rcrb
mov
xor
mov
pop
xor
inc
jl
adc
shlb
jbe
lret
ljmp
push
mov
jge
pop
lods
ds
icebp
sahf
nop
cmpsb
xor
test
frstor
lods
push
mov
xlat
mov
icebp
outsl
pop
clc
out
xchg
in
js
or
add
ja
pusha
fidivrs
xchg
mov
loopne
mov
ret
outsl
dec
sbb
sarb
loopne
jecxz
cmp
mov
xchg
fldenv
mov
cli
push
xlat
adc
jo
movsb
std
cld
or
cmpb
shl
nop
fidivrs
shrl
xchg
cmp
popa
and
jmp
fsqrt
loopne
cmp
leave
int3
stos
push
fldl
pop
shrl
sub
dec
outsb
stos
push
pushf
mov
adc
dec
sbb
mov
sub
pop
xlat
jg
fsubr
rolb
mov
jne
inc
sub
fwait
mov
push
inc
cmp
xchg
push
aaa
jo
sarl
je
jb
dec
add
inc
jns
dec
mov
add
sub
repnz
sub
sub
test
mov
and
cs
ss
xchg
xor
enter
xchg
push
inc
ds
mov
adc
sub
cmp
mov
mov
cmpsb
mov
enter
mov
lcall
lret
mov
jp
pop
scas
xchg
jg
bound
inc
and
pop
sub
sahf
test
lcall
pop
xor
lret
inc
jns
fbld
ljmp
insb
lea
dec
in
sti
adc
add
inc
test
cwtl
loopne
sub
xor
jne
push
push
insl
aad
xor
nop
cmpsl
leave
leave
clc
lods
jl
in
aam
xor
mov
lods
xchg
pushf
pop
popf
fidivl
and
and
or
aad
test
out
pop
mov
push
ret
inc
and
mov
inc
je
dec
pop
test
xchg
popf
test
ret
push
int
jg
mov
sbb
jmp
shrb
sbb
push
cmp
mov
cmp
add
lods
bswap
pop
push
sbb
icebp
jge
icebp
repnz
xchg
cli
call
mov
inc
push
push
dec
je
mov
add
inc
sti
lret
xor
loop
xor
sub
jns
adc
add
aad
xchg
addr16
jp
jne
mov
sbb
int
jo
rcrb
pop
xor
xchg
fcoml
icebp
inc
cmp
js
adc
push
push
cmc
out
idivl
sbb
jecxz
ucomiss
pop
popf
loopne
cmpl
push
xor
jmp
testl
mov
shlb
lods
xor
xlat
dec
jo
outsl
icebp
adc
in
icebp
out
int
iret
xchg
inc
xor
es
xlat
dec
enter
mov
adc
scas
inc
cmp
sahf
xchg
pushf
cmp
adc
adc
js
inc
enter
shlb
xlat
arpl
pop
cmpsb
aas
mov
jbe
lahf
push
add
jne
add
sarl
pop
addr16
jbe
outsb
lcall
mov
sub
jmp
das
ja
jns
cmp
jnp
xor
pop
xchg
lock
push
lcall
fisubrl
xchg
sub
out
stc
cmp
test
scas
inc
cltd
jle
fistpll
mov
push
push
pop
inc
aas
xor
mov
sbb
push
xchg
xor
add
pop
xor
inc
pop
sbb
pop
int3
mov
jno
adc
cmp
out
mov
dec
xchg
lods
adc
outsb
fadd
enter
inc
lahf
call
ret
sbb
xor
push
xchg
data16
jg
js
pop
lcall
lret
cld
mov
pop
sub
movsb
mov
push
mov
mov
jae
mov
loope
mov
lcall
inc
jb
pop
fwait
je
pop
fcmovb
add
sbb
into
out
incl
js
xchg
pop
sbb
stos
xchg
mov
push
and
sahf
push
push
insb
add
dec
lea
daa
jne
push
stc
and
xor
cmp
jbe
cmp
shll
inc
les
es
repnz
lods
add
je
ss
mov
test
cmpl
test
inc
sub
push
add
or
adc
sti
mul
xchg
mov
outsl
sub
mov
push
and
inc
jne
daa
sbb
xchg
fwait
or
or
jecxz
jmp
pop
fnstcw
ficompl
daa
sbbb
or
insl
pop
in
xor
test
add
dec
ja
sbb
int3
arpl
adc
jp
jb,pn
dec
stos
je
xor
shrl
xchg
ds
dec
adc
xchg
ja
inc
xor
cltd
in
or
pop
cmp
adc
and
mov
arpl
outsb
fucomip
lahf
inc
sbb
lea
adcb
cmp
pushf
mov
inc
mov
out
inc
push
sbb
pop
aaa
pop
out
mov
cmp
pop
bound
popa
sub
mov
enter
enter
adc
lods
ret
adc
add
jecxz
mov
loope
or
ljmp
pusha
sbb
sbb
aas
mov
inc
lea
insb
mov
add
test
sub
push
jg
or
imul
enter
sbb
cmc
dec
fld
je
aas
sub
clc
sub
cmp
pop
subl
sbb
jmp
hlt
mov
push
scas
lahf
jp
or
mov
mov
test
sub
cmp
dec
jbe
add
test
scas
cmp
jno
loop
test
sbb
gs
lds
mov
and
ret
pop
jmp
je
push
lods
or
xchg
or
push
dec
hlt
cwtl
mov
ret
test
pushf
jge
push
lret
mov
rcll
mov
std
xor
cmpsl
rclb
out
lahf
xchg
fldt
jb
outsb
lea
je
pmullw
call
dec
cld
notb
sub
mov
test
inc
ds
adc
mov
jnp
and
mov
lcall
fistpll
stos
lds
test
adcb
push
sti
cmpsl
pop
sbb
lds
fnstsw
xchg
mov
pop
pop
or
call
pop
jmp
aad
add
inc
xchg
ret
jge
mov
popf
popa
aaa
pop
frstor
insb
cs
mov
lret
push
sahf
dec
sti
xor
fldt
fdivrl
and
shll
cmc
lods
icebp
inc
mov
insl
outsl
lret
sub
xchg
les
fnsave
movsb
xchg
das
mov
lret
in
ss
mov
sbb
movsl
sbb
dec
scas
xchg
dec
loop
in
rorl
imul
cld
fs
inc
lock
jg
in
push
lea
mull
mov
sbb
mov
jl
addl
mov
lds
in
mov
push
call
sbb
mov
popf
sub
fwait
std
jmp
push
push
cmp
repz
jp
jl
cmpsl
add
push
aad
das
xchg
mov
popa
push
xor
and
cld
mov
outsl
cmp
mov
cltd
insl
nop
xlat
cltd
mov
stos
push
lret
inc
insb
dec
add
fldl2e
cmp
mov
cli
adc
xchg
jns
jle
addr16
popl
mov
mov
outsl
insb
fnstcw
push
testl
pop
lret
dec
mov
ja
jmp
cmp
adc
ret
inc
pusha
inc
js
jae
mov
stos
push
out
xor
rolb
dec
pop
mov
nop
sbb
push
push
mov
ds
and
or
dec
outsb
jecxz
cmp
pop
leave
jnp
leave
outsl
test
out
adc
cmp
push
sahf
inc
outsb
jnp
push
popa
mov
in
xlat
lcall
sarb
xor
or
fistpl
aad
ss
dec
lock
imul
jno
gs
mov
adc
roll
mov
and
add
adc
mov
scas
popf
rolb
outsl
jns
push
stos
xor
movsl
addl
lret
outsl
jp
inc
cmp
movsb
inc
mov
cli
icebp
test
divl
xor
test
xchg
addr16
jmp
jp
repnz
je,pt
fnstsw
adc
cmp
cmp
or
xor
mov
push
push
push
push
pop
xor
lret
lock
fiaddl
sub
cmp
cmp
mov
mov
pop
imul
imul
pop
movsb
add
lret
adc
sbb
cmpsb
imul
lock
xchg
int3
loope
dec
inc
test
in
add
test
adc
sahf
mov
cmc
mov
loop
aad
repz
dec
mov
cld
shll
sbb
jae
fucomi
xor
js
call
dec
adc
mov
mov
jp
xlat
add
fdivrs
adc
aas
jns
test
cltd
dec
pop
xchg
xchg
popf
jle
jo
push
add
cli
pop
js
shll
loop
sbb
ror
add
xor
push
push
fcompl
mov
mov
push
xchg
add
and
out
clc
jp
push
pop
and
adc
fnstsw
jmp
pmullw
fwait
not
jo
mov
and
jne
mov
push
inc
or
in
xor
icebp
call
test
xchg
xor
cmc
nop
jle
inc
into
lret
push
es
vpunpckhbw
cmovno
pop
sub
shlb
shll
test
xchg
sub
shlb
out
inc
lcall
hlt
pop
faddl
jbe
addb
iret
adc
cmp
add
jmp
mov
dec
bound
ret
mov
shr
xor
in
lret
mov
xchg
lods
test
adc
cmp
in
or
add
sbb
loope
pop
cmp
movl
fsubrl
pop
test
sbb
dec
push
cwtl
lcall
outsb
jo
adc
and
lahf
dec
mov
insl
add
inc
cmp
in
cmpb
inc
cmp
sub
mov
gs
imul
xor
into
xor
outsb
in
push
cmp
mov
mov
mov
jle
insl
mov
adc
mov
jnp
lods
loopne
shlb
adc
arpl
push
xchg
rorl
sbb
mov
xchg
mov
pop
cltd
xor
inc
push
sbb
sbb
mov
fimull
xchg
test
cmp
or
inc
loop
fwait
shrl
lahf
add
and
cltd
mul
fs
xor
xchg
or
mov
adc
jb
pop
mov
inc
fsubs
xchg
pop
push
xor
lahf
pop
fdivrl
or
ds
xorl
push
lret
push
push
xchg
clc
push
aaa
or
rcll
pop
mov
pushf
ficoms
pop
movsb
dec
jmp
loopne
sbb
rep
mov
lods
adc
mov
push
jne
in
or
inc
int3
or
ffreep
dec
inc
and
loope
add
and
cmp
jb
add
mov
pushf
icebp
mov
add
xchg
clc
push
xor
sti
insb
imul
adc
or
arpl
mov
and
addr16
rolb
cmc
fsubrl
test
inc
xor
sub
mov
in
jge
mov
cli
in
stc
call
std
rorb
out
jle
jnp
idivb
ljmp
aas
jle
pusha
gs
sub
daa
jns
jp
mov
lods
mov
test
sub
jb
sbb
jge
std
inc
mov
pop
lods
cmp
jl
aam
cmpsb
xchg
and
cmpsb
dec
lret
pop
iret
scas
add
pop
cld
cmp
sub
xchg
cli
imul
pop
fs
dec
dec
cltd
adc
mov
sbb
cmpsl
jg
loopne
cmp
insb
test
dec
inc
sbb
mov
pop
mov
cmp
lock
fucomi
jb
cltd
dec
mov
xorl
pop
sub
cmpsb
jns
inc
fcmovne
inc
sbb
jno
daa
push
lock
ljmp
dec
mov
and
sbb
inc
xchg
or
imul
dec
into
add
lret
loop
mov
cmp
inc
cmpsl
adc
jge
mov
cwtl
sar
xchg
push
mov
xchg
jl
daa
cwtl
xchg
inc
xor
call
frstor
popa
jle
out
cltd
rclb
dec
aam
cmc
aad
cmpsb
stos
sahf
and
test
inc
dec
and
sti
xchg
fsubrp
mov
jns
shrl
cmc
lcall
addl
loope
loop
mov
loope
dec
xor
add
fbld
in
lcall
inc
dec
or
in
push
mov
xchg
shlb
sbb
mov
in
dec
je
repnz
ret
test
jge
fwait
adc
lret
cli
pop
push
dec
div
lcall
xor
sbb
push
stc
stc
lret
lret
xor
stc
jl
push
aam
dec
mov
adc
inc
cmp
mov
adc
in
adc
sub
mov
lret
mov
xlat
bound
in
push
push
inc
shlb
or
jecxz
jp
xorb
lock
and
sub
push
add
adc
adc
fs
iret
or
sbb
push
aam
ret
inc
mov
mov
test
test
std
loopne
into
fistps
std
cmp
jbe
shr
in
sub
xchg
sbb
aaa
pop
xchg
stc
nop
out
sbb
dec
or
stos
add
mov
jecxz
sbb
cmpsb
pushf
bound
popl
add
sub
or
in
mov
mov
or
insl
mov
mov
loop
aam
mov
loopne
jmp
rol
das
pop
dec
es
iret
push
mov
jns
push
mov
push
or
lret
cwtl
add
mov
or
mov
xchg
jb
mov
sub
pop
rol
push
mov
pop
push
cli
pop
and
lods
jns
jns
loope
cmpsb
xchg
loope
jg
inc
xor
aaa
cltd
pop
mov
pop
sub
stos
push
pop
mov
sbb
int
addr16
aad
jp
mov
sbb
pop
lret
bound
fisubrl
adc
push
mov
jmp
jmp
iret
and
mov
mov
pop
test
mov
ss
lods
add
fstl
in
cmp
mov
xchg
ret
movsb
cmpsl
mov
jg
xchg
or
xor
mov
lods
andb
rcl
lret
sbb
lcall
adc
sub
popf
outsb
push
dec
mov
mov
lods
movsl
push
lods
lret
jecxz
sub
or
pop
ljmp
jle
and
jbe,pt
loope
jns
popf
mov
or
aas
xor
or
mov
shrl
mov
mov
push
or
mov
xor
std
sbb
lret
out
jp
sarb
ret
sub
es
das
xor
fisubs
mov
leave
cltd
rorl
sahf
lret
outsb
pop
push
mov
push
xchg
cmp
shlb
cmpsl
adc
sub
loopne
cmp
adc
or
rorb
pop
js
int
aaa
sbb
dec
loope
adc
adcl
cs
push
sub
jmp
xor
dec
imull
popf
loop
std
push
adc
xor
mov
sbb
xchg
gs
scas
sahf
dec
cmp
ja
pop
mov
add
cltd
sbb
scas
shlb
loope
xchg
lret
inc
jbe
push
xchg
mov
xor
jle
sti
xchg
xchg
push
outsb
sahf
ja
or
xchg
ftst
dec
dec
sbb
mov
dec
push
push
mov
pop
pop
mov
ljmp
andb
pop
add
mov
iret
out
xor
xor
imul
mov
push
jbe
push
aaa
add
xor
outsb
cmp
outsb
mov
sbb
sbb
inc
dec
lret
mov
je
lahf
xchg
and
mov
loopne
movsl
call
inc
push
dec
jnp
inc
dec
jne
pushf
stos
rcll
ljmp
push
sub
loopne
nop
iret
test
sbb
pop
pop
mov
sub
mov
mov
out
pop
sbb
lcall
aad
push
std
push
fwait
imul
mov
outsl
sbb
jmp
ja
jp
and
jns
cs
sbb
sbbb
mov
mov
test
lret
gs
jle
scas
add
fldcw
les
jbe
cmpsl
inc
je
pop
call
mov
xchg
xchg
cltd
cmpsl
jns
stc
int3
popa
mov
cld
int3
cmp
rorl
dec
or
icebp
jae
mov
jne
mov
clc
and
stos
jbe
or
inc
push
stc
iret
cmp
jns
lea
xchg
mov
shlb
sahf
add
mov
sbbw
orl
add
jmp
andl
jo
dec
nop
inc
sbb
mov
js
sub
and
test
sub
adc
cmp
jno
push
mov
xor
fsubrs
mov
lea
out
pop
sti
clc
sbb
popa
push
ffreep
add
aad
or
fidivl
fdivrs
mov
jmp
cwtl
cmpsl
or
mov
inc
insb
sahf
cmp
mov
je
cmpsb
and
std
stos
adc
jge
cld
adcb
aaa
cmp
outsb
fucom
sti
daa
pop
push
in
mov
fnstsw
xor
aad
aaa
xor
or
scas
sub
push
test
mov
push
bound
clc
inc
xchg
call
lea
or
pusha
scas
dec
ret
push
sbb
adc
jp
lahf
inc
cltd
lret
negb
shlb
push
fldt
inc
cmc
cli
outsb
mov
mov
cmpsb
hlt
pop
push
mov
sbb
inc
sbb
and
or
xchg
mov
repz
in
cmp
pop
cwtl
movsl
fimull
ss
mov
cmp
cmp
mov
aam
and
add
or
loop
dec
cmp
int
stc
loopne
sub
push
loope
mov
mov
das
insl
and
sub
adcl
movsl
xchg
jg
adc
jo
mov
xchg
outsb
pop
fxch
xorb
addr16
adc
sbb
aas
shr
jmp
ss
insb
orl
fs
cmc
fistps
pop
pop
dec
add
or
or
mov
mov
jle
inc
or
xchg
jge
xor
add
sub
mov
nop
mov
push
xchg
push
ds
sbb
jl
jmp
sbb
arpl
jo
loopne
in
inc
or
jae
jecxz
in
js
dec
sub
xlat
loop
jno
and
pop
jb
test
fcomip
jne
lds
pop
test
xor
sbb
push
js
xchg
mov
sbb
lock
inc
lcall
mov
icebp
mov
mov
sbb
roll
clc
in
fmuls
mov
pop
ja
out
xchg
loop
sub
cmc
sub
sub
sub
or
jmp
pop
xchg
add
sbbb
fstl
sub
addr16
les
movsb
pop
int
std
push
movsb
inc
xchg
push
mov
xchg
inc
lea
andb
ljmp
ja
dec
les
or
adc
and
out
outsl
shll
mov
aaa
in
or
sub
loope
sbb
sub
rclb
jo
fadd
jmp
dec
push
add
dec
mov
inc
stos
mov
sub
sbb
repz
sti
xlat
cmp
sub
jge
ljmp
mov
lahf
mov
push
shll
cmp
jbe
or
test
aad
jo
pop
pop
and
mov
xor
mov
in
das
clc
xor
push
dec
fisubs
mov
movlps
test
fcoml
xchg
push
adc
rcrl
fcompl
and
mov
fnsave
mov
pop
mov
cmpsl
mov
add
mov
jae
jnp
cli
in
stc
pop
mov
dec
xor
lock
test
or
cmp
addr16
test
push
std
int
jmp
and
mov
xchg
or
dec
cmp
pop
test
fcoml
adc
mov
and
jb
iret
add
xor
dec
push
ja
xchg
push
cli
in
cmc
push
fstpl
adc
pop
push
jle
pop
ljmp
ret
jg
dec
mov
push
pop
std
mov
cmp
loop
mov
in
inc
pop
jno
mov
adc
push
or
adc
je
mov
mov
pop
rcrb
scas
mov
fisttpl
and
hlt
addb
and
jns
adc
shr
mov
push
insl
iret
jb
inc
sub
xlat
sbb
inc
test
mov
mov
mov
xor
inc
add
xchg
jecxz
jmp
adc
mov
sbb
imul
xchg
aad
sbbl
mov
jnp
bound
xchg
sbb
mov
mov
out
cmp
inc
sub
negl
test
out
in
sub
mov
popf
push
push
out
pop
testl
std
mov
pop
jno
aam
pop
fnsave
cli
data16
push
fimull
test
fistps
addr16
cmp
imul
test
aaa
push
jbe
cli
ljmp
dec
sarb
jns
jne
notl
lret
mov
imul
imul
push
fcoms
lods
cwtl
xlat
pushf
jb
stos
add
fldpi
xor
sub
sub
cli
mov
push
or
pop
lea
xchg
popa
call
jno
pop
movsl
cs
popf
fwait
push
jl
push
ret
inc
divl
mov
pusha
pop
xor
fmul
addr16
rorb
pop
negb
and
arpl
dec
cmpsl
mov
mov
mov
mov
sbb
mov
add
mov
mov
mov
jecxz
xor
cld
adc
popf
fiadds
xor
xlat
enter
push
xor
pop
fisubrs
and
add
xchg
iret
pop
mov
inc
sub
les
xor
push
hlt
or
scas
add
jns
mov
test
push
inc
jge
adc
movntq
inc
shlb
out
mov
cmc
or
gs
cld
mov
xor
fistpl
pusha
mov
ja
ret
or
aam
daa
fwait
dec
data16
cmp
pop
iret
pop
test
mov
stos
xchg
adc
lcall
call
out
cmp
mov
cmp
das
aam
push
pusha
pop
roll
rcrb
outsl
push
or
in
ret
pushf
push
mov
repnz
lcall
add
pop
mov
push
dec
sbb
jbe
insl
push
scas
out
mov
data16
push
jno
cld
ret
xchg
dec
xchg
pop
jp
cmp
xor
sarl
inc
mov
push
cmpsl
add
test
push
pop
jno
je
pop
pop
and
cmp
jmp
dec
out
fildl
mull
clc
cmc
add
pop
jecxz
cmp
decl
arpl
adcb
fsubrl
jo
xor
add
mov
sub
ljmp
stc
push
sub
dec
pusha
mov
jp
jg
rcll
int3
add
push
pop
mov
xchg
mov
repnz
lret
insl
jge
sbb
in
rcrb
rorb
mov
or
cwtl
dec
in
xchg
shufps
jae
cmp
add
es
inc
in
popa
aad
and
cmp
push
xchg
jnp,pn
dec
ret
and
sbb
lret
nop
test
loopne
shll
pusha
xchg
mov
push
shl
mov
xchg
jo
loopne
mov
insl
push
rorl
adc
pop
dec
xchg
pop
jae
sbb
lcall
popf
adc
fstpl
iret
push
es
jo
stc
dec
sbb
adc
fisubl
cltd
cltd
or
or
pop
scas
pusha
cmp
mov
sub
andl
push
inc
cltd
ret
inc
arpl
test
loopne
push
inc
icebp
fdivs
sub
jg
dec
lods
xchg
mov
lahf
mov
iret
xchg
and
mov
cld
jae
mov
mov
aas
imul
sbb
dec
icebp
jo
int3
movl
in
inc
movsb
cmpsb
int3
pop
jns
jae
sub
mov
mov
or
rorl
lcall
sti
xchg
lret
or
mov
movsl
aad
cmc
and
std
pop
shlb
movsl
inc
xchg
mov
ja
mov
dec
add
cmp
or
je
lea
lds
push
dec
ja
scas
adc
enter
push
mov
mov
mov
push
sti
mov
xorb
sbb
daa
or
out
pop
sbb
gs
inc
adc
push
sbb
xchg
mov
adc
clc
push
ja
jmp
lods
loop,pn
cmp
adc
fwait
add
inc
or
mov
sub
pop
gs
repz
daa
mov
shlb
jmp
and
hlt
push
sub
jl
cmpsl
call
call
mov
insl
pushf
push
xchg
fidivrl
mulb
xchg
mov
call
sbb
mov
mov
jle
or
jecxz
bound
into
mov
sub
std
or
xorl
inc
movsl
outsl
jge
xor
mov
push
sbb
xchg
movsl
push
fwait
enter
out
lcall
inc
mov
push
scas
inc
std
out
xchg
pushf
cmp
scas
popa
orl
fwait
addr16
push
cmp
inc
dec
in
push
mov
test
lea
adc
cmpsl
sbb
or
xor
jb
outsl
xor
enter
and
push
out
sub
cmp
mov
xchg
inc
sbb
mov
mov
and
mov
sbb
sarl
cltd
pop
sbb
sub
jge
add
adc
dec
outsl
imul
daa
enter
dec
cs
adcb
and
jne
dec
mov
adc
clc
repnz
xlat
cmpsl
repz
nop
shll
repnz
sti
xor
add
test
in
xchg
fmull
xlat
sbb
cs
pop
ror
mov
mov
cmp
pop
insw
test
or
pop
daa
jb
xchg
fisubrs
movsb
ret
xchg
add
mov
xor
aaa
and
cltd
int
push
movsb
mov
push
jp
ds
aam
push
inc
add
leave
lahf
xchg
dec
mov
loopne
out
dec
stos
outsb
fadds
pushf
xchg
inc
jbe
lret
cmp
enter
dec
push
enter
bound
aam
ljmp
lahf
inc
scas
ds
inc
ss
dec
mov
sub
imul
jmp
in
leave
rcll
xor
jg
loope
and
xor
pop
ret
xchg
ja
xchg
pop
test
xor
addb
rol
dec
dec
mov
xorl
fbld
clc
jle
pop
mov
lcall
ficompl
add
adc
adc
pop
dec
sarb
in
mov
imul
dec
inc
mov
adc
cmp
into
std
jecxz
dec
add
push
out
shlb
nop
cs
lret
ret
inc
jg
ret
stos
mov
movsl
dec
cvtss2sd
into
add
fnsave
push
ljmp
ljmp
push
test
or
mov
pop
pop
add
dec
cld
sbbl
sub
mov
push
call
jo
pop
insb
jns
xchg
out
outsb
inc
sbb
mov
ret
jbe
rcl
mov
sub
cmp
mov
mov
call
sbb
leave
xor
xchg
mov
mov
outsb
jne
cmp
mov
out
movl
roll
mov
xor
arpl
pop
movl
push
jg
jne
jg
inc
mov
xchg
jns
inc
mov
out
loop
iret
fmull
xchg
jbe
mov
inc
mov
dec
lods
dec
mov
add
nop
fisttps
lods
mov
loop
cmpsl
pop
fs
add
imul
shll
mov
dec
rcr
dec
mov
jmp
subl
das
sub
mov
xchg
outsb
jb
dec
sbb
je
pushf
push
and
les
pusha
pop
movsb
movsb
mov
repnz
scas
ret
scas
add
lds
adc
xchg
fs
movsl
daa
inc
cwtl
pop
subl
push
mov
jecxz
dec
lcall
mov
inc
sbb
fnstsw
push
fmuls
adc
mov
push
clc
insb
adc
dec
mov
fldl
xor
test
or
in
mov
pop
xor
mov
push
aam
push
xor
jge
cmp
imul
inc
and
cltd
pop
mov
sti
arpl
rcrb
iret
les
pop
adc
daa
out
orl
sarl
je
stos
cmp
rcrb
call
xor
sub
orb
loop
xchg
jae
fsubrp
fwait
rorl
repnz
in
incl
icebp
push
sbb
jbe
push
mov
mov
ss
out
dec
je
push
scas
cli
mov
dec
icebp
jmp
stos
jnp
xchg
aaa
lahf
mov
mov
adc
mov
aaa
pop
ss
aam
dec
les
dec
mov
xchg
xchg
dec
mov
sbb
pusha
xchg
mov
or
lea
scas
jno
sub
sub
push
mov
outsb
cld
xor
shlb
xor
aaa
adc
repnz
fs
mov
test
cmpsb
stos
sbbl
dec
repz
ljmp
dec
add
out
pop
loopne
jae
stos
xor
ret
bound
mov
je
pop
test
inc
and
sti
test
nop
sub
push
sub
mov
mov
fisttpll
push
add
and
sub
xchg
inc
in
scas
test
aas
xor
push
jl
shll
pop
sub
mov
test
xor
xor
lret
cmp
push
cmp
out
xchg
sub
sahf
jae
pop
iret
fdivrl
xor
pop
rcrl
mov
xchg
sbb
mov
push
pop
negl
lret
dec
addr16
fistps
rorl
mov
into
scas
negl
mov
sbb
push
cli
ret
pop
sbbb
insb
lock
or
cmp
sbb
stc
rorl
xchg
jae
push
jecxz
gs
inc
fisttpl
xchg
mov
dec
imul
mov
inc
mov
push
dec
lea
sbb
jp
push
jmp
sub
mov
jecxz
xchg
push
lret
dec
sub
stos
leave
aad
les
loop
cmp
or
fwait
add
rcr
add
loop
outsb
xlat
inc
and
cmpsb
xchg
xchg
pop
imul
mov
add
push
sbb
out
fisubrl
or
lahf
sub
insl
scas
sbb
fadd
in
aam
add
dec
mov
enter
sub
aam
int3
cli
pop
xchg
enter
mov
inc
push
adc
addr16
subb
mul
jl
inc
mov
daa
ja
pushf
inc
stos
daa
enter
sub
xchg
push
fucomi
jp
mull
sub
jl
adc
xchg
and
push
jmp
and
cld
dec
call
mov
dec
cmpsb
mov
pop
mov
sub
cmpsb
push
into
gs
jp
ret
mov
fxch
out
pop
pushf
and
jmp
das
pop
out
ja
xchg
movsb
sarb
leave
mov
les
pop
scas
xor
cmp
sbb
cmp
out
cmp
xchg
test
movsl
adc
jle
mov
cmp
testl
jl
mov
sahf
jns
insl
pop
mov
hlt
sbb
ljmp
das
mov
mov
out
or
sub
push
sarb
or
ror
rol
mov
aad
lret
jbe
xor
xchg
sbb
adc
xor
xor
inc
shlb
cmpl
jecxz
dec
popa
test
jo
fisubrl
push
inc
lahf
lcall
push
leave
cs
mov
cld
dec
mov
or
movsl
cmpsl
push
aad
addr16
sub
fisttpll
movsb
test
xor
adcl
call
insl
imul
or
jnp
sub
xchg
cmpsl
and
inc
cld
xchg
aaa
imul
cmp
push
jbe
in
sbb
sbb
addr16
in
fldt
add
fisttpll
aas
xchg
pushf
stc
mov
iret
mov
or
cwtl
adcl
pop
adc
fsubrs
xchg
out
cmc
insb
jg
aaa
mov
or
bound
addr16
test
int3
adc
pop
imul
dec
add
xlat
pop
cmpsl
sub
outsb
testb
std
xchg
pop
adc
rorb
or
test
je
in
out
inc
data16
sub
stos
int3
movsl
icebp
jmp
mov
repnz
jmp
aad
xchg
loopne
mov
dec
push
popf
adc
cmp
mov
pop
xlat
cmp
sub
mov
pop
dec
std
jmp
inc
pop
and
sub
jae
cmp
dec
jg
or
rclb
xor
icebp
or
xchg
pop
mov
push
outsl
push
aad
rclb
movsb
dec
sub
cwtl
lds
cmp
jo
daa
shll
fstpl
dec
cmp
dec
xlat
fdivrl
lcall
jg
scas
pop
cmp
test
sbb
mov
pop
adc
pop
adcl
inc
or
and
pushf
loopne
loop
pop
push
imul
mov
cmp
aad
repz
loope
test
nop
push
xchg
inc
pop
lss
mov
scas
gs
pop
cmp
int
loopne
adc
hlt
jb
xchg
cmp
fwait
out
or
lea
in
lahf
jb
pop
xlat
xchg
shll
xchg
jp,pt
or
inc
jno
dec
sahf
xlat
push
cmp
sahf
mov
mov
sahf
adc
popf
inc
ljmp
pop
and
leave
cltd
push
sub
push
scas
dec
mov
inc
insb
shll
addb
aas
pop
cmpsl
mov
pop
dec
adc
cli
xchg
xor
cmp
mov
or
repz
adc
ds
xchg
mov
cmc
out
nop
dec
add
jo
into
sub
mov
or
out
ret
adc
cmp
stos
in
xchg
rcrl
fisttpll
pop
ja
clc
push
ds
inc
lahf
sub
cmpl
lock
mov
xchg
push
ja
ffree
insb
btr
test
testb
scas
inc
adc
bound
fildll
lret
jle
add
xchg
jbe
push
outsl
cmpsl
push
fwait
jp
mov
dec
lock
inc
fucom
inc
shll
and
or
pop
sar
adc
cmc
fimuls
jle
fcmovne
push
cmpsl
cmp
sti
mov
pushf
dec
jl
sub
pop
jnp
sbb
test
mov
cmp
cli
pop
xchg
fldt
xor
call
jp
and
jl
and
push
mov
daa
loope
sub
push
sub
adc
add
cmc
in
ret
or
xor
and
arpl
rclb
andl
mov
std
push
jl
push
pop
mov
test
dec
mov
call
fistpl
aas
pop
stc
lret
das
xor
loopne
mov
je
xchg
pusha
gs
mov
mov
fninit
pop
int
mov
lahf
cli
adc
jmp
mov
test
movsb
mov
mov
cmp
bound
mov
mov
sahf
fwait
out
sub
lods
cmp
les
mov
sub
daa
xchg
pop
pop
sbb
movsb
jmp
lcall
adc
or
or
add
sbb
daa
adc
xchg
loope
scas
push
add
in
inc
pop
mov
push
ret
ficompl
test
cmp
leave
stc
ret
xor
push
jb
ret
jnp
cmpsb
sub
ret
sub
mov
enter
mov
xor
aaa
lds
xchg
push
xchg
repnz
sbb
pop
mov
int
icebp
aaa
out
arpl
push
mov
fadds
push
or
push
jns
adc
repnz
hlt
mov
adc
mov
imul
mov
test
jnp
push
mov
pop
push
lahf
push
sbb
fmuls
subb
mov
out
scas
test
push
cld
add
fcoms
imul
pop
cwtl
dec
xchg
imul
lods
scas
xor
mov
inc
lock
cltd
inc
mov
test
inc
jl
loop
adc
and
shll
clc
mov
gs
dec
test
repnz
push
xchg
xchg
push
outsb
out
ja
rolb
popf
repnz
cltd
pop
push
in
outsl
imul
aad
add
test
pop
mov
xchg
xor
cmp
cmp
adc
push
mov
ds
out
jl
or
test
adc
xchg
pop
sub
add
stos
xchg
jge
pop
add
dec
rcl
cmp
pop
push
shll
cmp
outsb
stos
xchg
pop
xchg
sbb
sbb
push
adc
scas
inc
les
loopne
imull
jne
xchg
out
pop
aaa
sbb
fs
cli
in
mov
sbb
mov
sbb
jp
stos
pop
inc
pushf
leave
in
inc
ret
cld
jmp
add
sbb
sti
push
loop
inc
arpl
jl
sbb
aaa
in
stos
enter
mov
ror
mov
pusha
rorb
push
stos
pop
fimuls
mov
pop
lods
mov
std
adc
in
jne
in
into
push
aam
push
sbb
dec
cmp
jmp
adc
roll
std
subl
lods
push
jne
push
ja
outsl
cmpl
pop
pop
xchg
dec
xchg
sub
arpl
lea
cmc
hlt
mov
repnz
scas
fnstcw
add
mov
cmp
xor
in
jecxz
adc
pop
sub
lret
or
cs
popa
xor
xchg
mov
and
mov
arpl
lock
mov
pop
push
mov
loop
pop
pop
mov
andl
sub
cltd
lds
jmp
jg
xor
lods
cli
xchg
jmp
cmpsb
xchg
nop
lods
imul
xor
fisubrs
imul
jg
xorb
fstpt
lret
cmp
mov
adc
jo
jl
imul
push
add
inc
idivb
mov
jecxz
sub
jmp
dec
xchg
repz
jecxz
cmp
or
bnd
mov
cmp
call
arpl
inc
cmp
ds
adc
mov
push
mov
dec
js
in
movsl
add
or
cmpsl
pop
mov
or
orl
pop
cwtl
ja
dec
inc
jns
jbe
push
push
jp
mul
pop
notl
pop
test
jnp
and
mov
sahf
inc
mov
or
addl
ljmp
call
mov
mov
jp
jnp
out
fwait
outsl
or
hlt
jge
or
inc
pusha
fwait
pop
outsb
inc
rclb
repnz
mov
or
or
adc
xor
jp
dec
pop
lret
xorl
rol
insb
fisttpll
loope
push
sub
clc
or
jns
jecxz
cmp
inc
movsl
fs
sarl
mov
fnstsw
adc
or
fisubl
imul
add
movsl
sbbl
xor
imul
in
aam
or
addb
lods
ljmp
std
sub
or
int3
jnp
jmp
push
insb
loopne
mov
cmp
mov
push
and
out
int
inc
std
aas
mov
or
cmc
fstp
jae
daa
xchg
mov
sahf
stc
or
shll
sbb
xchg
cmpsl
test
scas
sub
cltd
dec
mov
mov
out
movsl
je
cmpsb
fistpl
iretw
ret
cli
xchg
sbb
out
or
push
cltd
mov
sbb
pop
jno
mov
lahf
mov
mov
jle
mov
sarb
mov
leave
and
inc
mov
lahf
mov
cmp
shrl
outsl
ret
roll
push
mov
cmpsb
mov
mov
fstps
daa
mov
jae
std
cltd
sbb
mov
stos
fdivrp
shrb
sub
movsl
popf
mov
jmp
in
out
mov
jo
lods
push
adcb
cmc
push
testl
iret
dec
imul
jecxz
scas
jle
push
js
inc
and
stc
xor
pop
nop
mov
xrelease
es
push
and
mov
jnp
pop
mov
mov
add
in
sbb
or
fs
mov
daa
sub
xchg
call
mov
inc
ficompl
jg,pn
dec
sbb
lret
and
notl
leave
dec
int
scas
cwtl
mov
popa
dec
cmp
jae
inc
sbb
push
xlat
pop
stos
xchg
cmp
pushf
push
mov
mov
xchg
inc
outsb
loop
ja
je
test
into
jae
and
cltd
std
roll
nop
jo
xor
out
aad
cltd
xchg
push
jnp
fildll
vphaddubw
jns
jnp
mov
or
fstl
lcall
xchg
adc
lret
fbstp
pop
jne
mov
xor
inc
inc
lods
lea
add
mov
incl
pop
int
inc
adcl
inc
ror
xchg
dec
fmuls
daa
rcrb
lret
push
shrb
mov
stos
sub
gs
and
xchg
xchg
mov
jp
shll
lret
jle
leave
ret
or
pop
push
push
sub
mov
pop
inc
xchg
jb
lock
dec
cmp
aad
cmp
xor
inc
xor
movsb
push
jle
mov
mov
adc
sub
pop
xchg
in
fs
jg
pop
and
seto
push
pop
ret
jo
push
xchg
loope
cltd
cmp
addb
outsl
movsb
jp
dec
nop
lret
xor
cli
push
sbb
jp
pop
test
stos
les
xchg
xlat
frstor
fisubrl
xchg
mov
in
idivl
inc
cmp
mov
xchg
mov
aad
mov
repnz
ret
sarl
and
cmp
adcb
inc
xchg
aad
mov
sbbl
sahf
mov
mov
xor
out
icebp
jnp
int
and
neg
mov
cli
mov
dec
inc
dec
je
ficompl
lea
cld
repnz
rcr
push
mov
mov
inc
ss
jne
jp
orb
xchg
cmp
lds
cwtl
es
and
lcall
fabs
stos
jae
xchg
movsb
adcl
lret
add
pop
rol
xor
push
cmp
leave
push
outsl
adc
mov
lcall
mov
and
sti
outsl
cmpsl
cmp
mov
sti
iret
mov
mov
or
xor
lds
sub
cli
jecxz
mov
add
aas
ss
popa
inc
cmp
in
fildl
fcomp
outsb
push
popf
outsl
push
cmpsb
or
sub
or
dec
in
dec
add
mov
cmc
cmp
or
add
loopne
popf
ljmp
rol
int3
adc
jle
out
out
aas
in
ss
aam
insl
fwait
pop
sti
adc
push
fdivrl
mov
pop
xchg
lods
shll
dec
jae
add
sbb
ja
pop
sub
push
sbb
dec
ret
push
lret
pop
or
test
sub
dec
je
or
jl
and
roll
mov
push
and
pop
inc
fnclex
cmp
lea
inc
xchg
sbb
push
and
add
xor
jo
mov
mov
sti
repnz
shlb
jp
and
and
negl
ss
push
push
subl
xor
mov
lret
loopne
mov
xchg
dec
mov
test
test
scas
xchg
out
add
pop
dec
mov
sbb
fnstenv
mov
sub
div
push
popa
das
or
dec
cwtl
into
fcoml
jae
in
mov
pop
xchg
stc
add
sbb
push
mov
out
pop
pop
in
call
lods
loop
adc
dec
pushf
sahf
and
or
scas
fdivs
js
jg
aam
and
fisttpll
push
loop
sub
jns
xor
test
leave
and
stos
mov
cmp
or
jl
mov
imul
enter
mov
dec
cmc
dec
lcall
int
aas
js
push
mov
cmp
pop
add
mov
outsb
mov
pop
cli
sti
in
mov
ss
cs
xor
scas
mov
jnp
mov
nop
mov
rcr
pop
lcall
mov
jmp
test
push
repz
into
pop
pusha
imul
mov
cmp
cwtl
fsubrp
fldenv
adc
inc
insb
xor
ja
push
movsl
jns
cmp
jbe
jecxz
dec
ljmp
fidivrs
das
push
inc
pushf
stos
repnz
in
jg
sahf
movsl
pushf
mov
out
sbb
push
xchg
lea
orb
and
dec
and
xchg
xchg
and
lcall
push
into
mov
and
aas
jns
dec
add
mov
push
pop
jge
push
scas
mov
into
out
out
inc
je
inc
cli
ret
jle
cltd
movb
add
sahf
adc
fmuls
pop
sub
lock
ret
xorb
fs
mov
xchg
test
stos
decb
push
xor
jp
xor
sbb
mov
test
xchg
daa
in
fs
cmp
test
mov
xchg
cli
push
insl
xchg
push
packsswb
mov
or
filds
ss
sub
sbb
dec
shll
aam
jle
or
insb
mov
stos
ss
mov
out
inc
and
int3
dec
and
xchg
je
mov
das
push
lea
repz
roll
cwtl
in
sub
xor
scas
ljmp
and
notb
cs
xchg
lds
push
inc
mov
pop
mov
dec
mov
test
test
jge
cs
fadds
xlat
pop
in
push
adc
shlb
push
cmp
jbe
fidivrl
xor
xor
xchg
mov
cmpsl
rcrl
mov
xchg
fisubrl
int3
xlat
sarl
das
xor
jbe
stos
imul
lods
iret
int3
insl
jmp
loop
xchg
sbb
xor
adc
jae
or
roll
hlt
lds
add
or
and
mov
pop
enter
dec
add
enter
jl
fwait
cs
adc
push
stos
aaa
dec
mov
test
xor
daa
adc
inc
and
sbbb
fs
pop
mov
andl
jae
mov
inc
jmp
sub
jo
push
rcrb
movsb
xchg
dec
pop
rcll
jl
pop
enter
lret
leave
add
test
scas
mov
pop
add
jp
push
lcall
inc
jo
jo
xchg
std
pusha
dec
loopne
lret
lahf
out
pop
mov
ds
push
push
shll
mov
add
adc
stos
in
xchg
fabs
xchg
push
out
lods
lods
jmp
rorl
stc
frstor
dec
ja
mov
xor
jmp
mov
xor
cld
stc
and
and
repnz
adc
xor
pop
loop
sbb
push
pusha
fidivl
add
cmp
adc
fisttpl
xor
std
xchg
push
daa
mov
out
sti
push
add
shlb
fimuls
pop
ret
cmp
enter
pop
or
ffreep
out
test
std
sub
test
in
lds
mov
mov
test
sub
loope
and
lock
and
mov
cmpsl
xor
sub
mov
push
rorl
mov
jge
scas
scas
ss
dec
outsb
movsl
repz
sbb
and
in
or
aas
outsl
fcomps
jno
mov
pop
mov
mov
fidivrl
xchg
call
aam
cmp
sub
ret
mov
hlt
mov
pop
fcomp
and
leave
dec
popf
adc
sti
push
clc
in
cmp
fucomip
js
cmc
mov
popf
fwait
inc
lcall
lds
icebp
xorb
stos
stos
lahf
xor
dec
dec
dec
push
out
pop
mov
jg
lret
push
xchg
jo
aas
loop
push
or
pop
es
stos
shll
inc
inc
pop
push
jle
cmp
leave
arpl
sbbb
outsb
ficoml
pop
xchg
fldcw
loopne
mov
push
movsl
das
dec
inc
pop
repnz
lds
mov
sub
or
loop
mov
jnp
pop
sbbb
inc
cmpb
cvtps2pd
inc
fldl
aas
or
dec
or
push
sub
sub
shll
mov
mov
push
push
adc
cmp
cmpsl
stc
movsl
decb
test
nop
sbb
push
or
add
fistpl
inc
imul
sub
push
es
jne
stc
in
adc
mov
sbb
and
outsb
mov
cmp
push
mov
movsl
push
inc
into
jns
fwait
mov
int
jno
rcll
xor
ss
lcall
or
pcmpgtd
push
out
sub
mov
lds
or
xchg
xchg
outsl
popa
rcll
lahf
mov
inc
xor
and
imul
imul
cmc
loopne
imul
dec
loope
push
int3
xchg
icebp
push
in
xchg
pop
push
cmp
rcl
clc
cmp
sbb
popa
cli
jae
rcr
jle
mov
lds
hlt
mov
jg
into
movsb
gs
dec
bound
imul
push
jmp
mov
movsb
xchg
mov
loop
mov
xchg
in
or
ss
mov
das
cmpsb
je
sbb
xlat
lahf
pop
arpl
pop
fnsave
and
pop
mov
or
movsb
ffree
cmp
xrelease
lcall
push
mov
jns
mov
out
lcall
push
jmp
arpl
pop
mov
in
fmulp
xor
cmp
adc
cmpsb
pop
addr16
add
out
jno
xchg
jle
les
jne
std
stos
dec
push
roll
testb
mov
scas
or
lock
sub
mov
sahf
cmpsb
call
mov
push
pop
adc
mov
or
adc
pop
and
sti
popl
or
rol
or
inc
popa
inc
or
inc
inc
out
mov
xor
cli
push
sbb
mov
pushf
filds
push
jle
mov
repz
shl
pop
mov
cltd
sub
xchg
inc
jne
inc
pop
xchg
and
ror
cmp
in
fdivrl
jne
fs
push
leave
mov
mov
mov
push
lea
repz
jl
not
test
aam
jns
sbb
cmp
loopne
cmp
adc
es
addr16
shrb
ficomps
cmp
push
sub
add
mov
and
and
test
lret
dec
in
icebp
mov
cmp
xchg
out
cmpsb
orl
inc
cmpl
test
xchg
cmpsb
or
inc
sub
sbb
xchg
mov
les
lret
add
sbb
add
test
ret
mov
add
push
arpl
mov
pop
xor
popa
sbb
jmp
hlt
xchg
xor
mov
inc
cmp
or
xor
fdivl
and
push
out
lret
pusha
mov
lcall
push
adc
js
push
fs
divl
push
outsl
mov
sarb
popa
pop
mov
out
imul
je
in
arpl
xchg
lret
sbb
addr16
jmp
sub
lods
mov
sbb
xchg
lahf
popa
dec
and
push
adc
aam
xchg
and
xor
inc
insb
movsl
arpl
dec
fistl
dec
mov
jecxz
and
jecxz
sub
pop
mov
cmc
sub
jp
outsb
dec
push
stos
sbb
sbb
sahf
in
mov
fcoms
lock
lods
aam
cmc
and
push
cld
dec
jp
ljmp
sub
adc
sub
adc
int3
in
repnz
ljmp
xlat
mov
push
cmp
push
and
jp
into
in
mov
shrb
lahf
lds
cs
inc
flds
xor
inc
cli
mov
pop
fisttpl
iret
lcall
xor
add
idivl
add
push
sbb
or
mov
pop
push
sbb
arpl
pop
pop
divb
in
push
pop
push
push
das
sti
jge
jl
scas
sub
inc
pop
popf
cmp
in
loopne
jmp
js
mov
cs
xor
jg
mov
rclb
shr
sub
or
xor
dec
mov
std
sub
sbbb
xor
bound
icebp
iret
das
dec
add
loop
pop
outsl
mov
xor
ds
popf
cltd
push
mov
push
ljmp
pop
rol
mov
push
mov
outsb
daa
dec
lcall
fstpt
js
push
addb
fnstenv
dec
xchg
add
jns
mov
adc
jp
push
arpl
stos
int
cwtl
gs
xor
in
add
or
mov
inc
ret
popa
inc
mov
adc
and
inc
popa
ret
ds
fdivl
cmpsl
push
or
dec
insl
stos
mov
mov
sub
lar
mov
cmp
sub
loope
pop
dec
pop
mov
or
cmp
pop
or
jmp
xchg
push
sub
test
aam
es
loop
add
or
mov
fwait
dec
and
outsb
jl
outsl
insl
lock
and
into
pop
popa
add
ret
fdivrs
mov
addr16
mov
xchg
adc
scas
roll
dec
inc
pop
pop
fs
ljmp
or
loopne
mov
inc
idiv
xchg
cs
es
push
or
pushf
xchg
dec
scas
aad
out
fcomps
push
mov
dec
xchg
mov
mov
mov
push
push
lds
inc
push
clc
push
sbb
mov
cmp
dec
dec
xor
jb
ljmp
dec
or
jmp
mov
pushf
int
cmp
xchg
ss
ljmp
jp
and
je
lds
or
lret
cmp
or
jae
push
sub
imul
pop
mov
in
xlat
ja
cmpsb
lcall
test
int3
jo
mov
shlb
imul
adc
lock
sbb
inc
mov
inc
dec
xor
cmc
cs
hlt
es
pushf
mov
addr16
dec
pusha
fisubl
rcl
inc
lds
mov
dec
lret
jp
mov
pextrw
js
add
out
jae
shlb
shr
jo
push
mov
xchg
lea
xor
or
cmp
in
testl
mov
fwait
cmc
xor
cmp
mov
aaa
outsb
gs
lock
mov
adc
cwtl
or
mov
jl
shll
int3
rolb
mull
lock
pop
aas
aad
lret
rorb
js
enter
xor
push
stos
rorb
mov
das
and
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jo
enter
out
dec
ja
and
sbb
subb
lods
pop
lods
enter
pusha
mov
scas
pop
cmp
cmp
adc
push
mov
scas
sbb
out
mov
mov
jo
mov
inc
pop
xchg
fidivrl
jnp
pop
test
and
cmp
adc
cltd
inc
addr16
shr
inc
mov
xchg
mov
mov
xchg
test
enter
mov
xor
dec
repz
sbbb
mov
aaa
cli
adc
add
imul
out
mov
nop
and
fiaddl
out
xor
pop
push
popf
xchg
mov
mov
test
sub
leave
cmpsb
add
add
and
sub
add
inc
ss
push
pop
es
cmp
stos
test
cld
enter
add
mov
lret
leave
rorb
jge
enter
rorl
enter
inc
inc
inc
push
or
test
mov
shlb
mov
shr
push
cmc
jp
scas
push
or
jle
dec
fwait
cmpsb
xor
mov
push
in
nop
inc
jno
test
flds
int3
or
sbb
leave
ss
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
loop
add
loop
add
