push
mov
sub
push
push
push
lea
lea
rcl
xchg
push
not
ror
mov
xor
rcr
ror
lea
ror
mov
lea
ret
mov
neg
xor
xchg
mov
lea
ror
xchg
lea
adc
mov
lea
mov
neg
lea
mov
not
rcr
mov
xor
shr
call
mov
xor
lea
xor
mov
xor
xor
rcl
mov
xor
lea
xor
rcr
xor
xchg
xchg
xor
call
adc
mov
lea
neg
neg
xor
shr
adc
lea
shr
not
ror
lea
neg
rcr
rcl
xor
ror
lea
neg
push
lea
mov
not
neg
xchg
lea
mov
xor
and
and
xor
mov
neg
xor
rcr
mov
push
xor
lea
mov
neg
xor
call
push
and
neg
xor
not
xor
not
lea
not
pop
adc
xor
not
mov
neg
mov
lea
mov
rol
xor
xor
lea
mov
neg
lea
add
rcr
mov
mov
mov
lea
lea
shl
cmp
je
xchg
mov
rcr
mov
rol
neg
or
je
not
mov
xor
shr
lea
xor
lea
xor
rol
mov
lea
xchg
not
shl
neg
xor
and
mov
ror
mov
not
mov
rcr
rol
adc
neg
mov
not
rol
shl
mov
mov
xchg
mov
xchg
not
xor
neg
mov
not
lea
xor
mov
xor
mov
rol
neg
xor
neg
add
mov
xor
xchg
mov
xor
lea
mov
ror
xchg
ror
adc
cmp
je
mov
lea
xor
not
lea
mov
mov
xor
rcr
xor
xor
mov
mov
not
xor
xor
push
call
lea
xor
rcl
rol
neg
mov
lea
mov
mov
adc
mov
not
mov
xchg
mov
xor
neg
xor
mov
mov
mov
movl
xor
and
and
mov
rcr
xor
shl
movl
xor
adc
lea
xor
not
xchg
not
mov
xor
not
xor
neg
xor
xchg
mov
rcl
xchg
lea
xor
ror
lea
xor
xor
lea
ror
lea
push
xchg
mov
not
lea
xchg
and
xor
push
xor
rcr
xor
mov
pushl
xor
xor
mov
add
mov
lea
add
mov
pushl
mov
rcl
ror
mov
neg
call
mov
add
ror
xchg
mov
lea
add
shl
mov
xor
mov
mov
mov
lea
and
shr
neg
add
lea
neg
xor
lea
and
not
mov
not
mov
mov
xor
adc
shrl
xor
not
mov
xor
mov
mov
xor
mov
xor
lea
xor
mov
lea
xor
shl
lea
xor
neg
xor
xchg
mov
push
lea
lea
shr
neg
rcl
xchg
mov
mov
xor
mov
not
mov
xor
not
mov
rol
lea
adc
rcr
mov
mov
popl
mov
lea
mov
add
add
add
neg
xor
neg
add
mov
mov
xor
xor
mov
neg
not
and
neg
neg
decl
jne
mov
mov
mov
mov
mov
adc
not
neg
xor
mov
add
rcl
shr
lea
neg
shr
lea
mov
lea
not
mov
xor
not
mov
shr
xor
shr
lea
mov
adc
not
xchg
lea
xor
shr
jmp
mov
xchg
neg
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
dec
dec
xlat
mov
adc
push
ja
adc
punpckldq
xor
sbb
jmp
jbe
inc
mov
pop
out
adc
jbe
mov
mov
fwait
pusha
push
and
pop
and
fwait
sarl
stc
jl
ljmp
cmp
jnp
and
into
lds
shll
lods
cmc
test
jecxz
lcall
in
mov
lcall
std
add
mov
fidivrs
inc
cmp
popf
icebp
xchg
lcall
jbe
mov
clc
je
out
jnp
adc
idivb
sub
adc
imull
adc
stc
mov
insl
adc
mov
cltd
aas
je
sbb
or
adc
fstps
adc
dec
lcall
push
insl
js
adc
mov
adc
repz
out
out
into
fistl
shl
jbe
clc
mov
xor
arpl
push
cmpsl
mov
in
mov
cltd
enter
inc
mov
adc
std
std
out
stc
jle
jae,pn
out
jb
xchg
enter
fscale
std
jo
add
mov
aas
je
jge
jbe
arpl
fdivr
call
push
shlb
adc
mov
adc
cs
mov
cmp
add
into
jbe
adc
mov
add
or
sbb
sahf
cmp
adc
jbe
arpl
jo
call
int
lcall
pop
loope
sub
cli
sahf
mov
add
and
int
out
jae
add
fs
out
out
jae
jecxz
cmpsl
or
or
mov
lcall
xor
xor
ljmp
pop
xchg
sahf
adc
mov
cmp
mov
push
mov
adc
pop
xor
lcall
ss
mov
jbe
pop
cmpl
in
popf
aas
xchg
push
mov
insb
in
pop
cmp
adc
iret
jecxz
sti
xchg
das
scas
ss
insb
sti
mov
out
aas
xor
and
ret
jno
out
sub
bound
push
mov
push
mov
out
aas
outsb
xor
sbb
js
add
out
jae
push
in
mov
xchg
movsl
je
adc
mov
fs
out
jae
xchg
or
adc
mov
inc
clc
add
or
xchg
lea
pop
add
fwait
icebp
subb
sub
cs
mov
add
jbe
xor
jbe
xor
fwait
roll
inc
out
out
popa
fmull
jle
pushf
sahf
sub
jae
dec
fwait
icebp
jle
gs
fists
ret
pop
fadds
adc
jns
pop
mov
arpl
and
icebp
jle
outsb
cmp
sbb
xor
out
scas
mov
shl
daa
std
pop
add
or
gs
insb
sbb
dec
dec
cmpxchg
repnz
mov
jmp
jnp
sahf
in
jae
lcall
adc
adc
jp
out
and
test
jns
jmp
mov
out
xchg
pushf
lods
dec
dec
stc
mov
mov
fwait
pop
std
push
pop
inc
sbb
stc
je
out
add
adc
jle
sbb
pop
xchg
bound
ss
inc
ficomps
out
mov
out
dec
daa
popf
into
xchg
dec
cli
mov
and
fwait
sarl
dec
mov
inc
and
es
ss
xchg
stos
sub
adc
adc
pop
dec
adc
std
pop
adc
lahf
sbb
gs
ss
and
push
out
pop
mov
add
xchg
lcall
sub
adc
cmc
mov
mov
loopne
mov
adc
outsl
sub
adc
jb
push
movzwl
and
lret
push
cmp
mov
mov
and
xlat
mov
adc
adc
mov
sbb
add
mov
xor
jo
jbe
adc
sbb
pop
pop
cli
sti
call
jbe
push
cmp
sbb
or
xchg
add
fwait
mov
or
sbbb
add
jb
fnstcw
sbb
js
loope
xor
jae
sub
dec
adc
jb
popa
jae
test
rcrb
js
stos
je
movsl
sbb
test
inc
in
bound
addb
jg
adc
or
gs
adc
jns
xor
fbstp
jg
adc
sbb
enter
add
push
xchg
push
dec
adc
dec
mov
mov
lcall
and
popa
rorb
inc
outsb
data16
add
xor
int
inc
mov
divb
addr16
mov
es
add
mov
jae
dec
movsb
sub
ja
sti
scas
jns
bound
lock
shlb
dec
insl
xchg
adc
sbb
data16
stos
js
mov
and
inc
mov
sub
jle
pop
adc
xor
movups
pushf
jl
and
mov
nop
add
pop
andl
mov
aas
call
fs
xor
out
mov
pop
push
ds
inc
jae
or
sar
loope
ljmp
pusha
pop
in
cmpl
iret
push
cmc
inc
fwait
pusha
daa
lcall
mov
ficomps
dec
pop
add
mov
fwait
leave
jns
and
dec
xor
shrl
jl
push
arpl
cld
in
and
in
nop
mov
outsl
inc
add
out
hlt
push
xchg
dec
fs
xorb
add
outsb
vmread
dec
stc
jae
pop
test
pop
sbb
scas
shll
push
fdivl
lds
jp
adc
outsl
lcall
sub
pop
mov
outsl
pop
dec
add
jl
sbb
or
dec
ret
ja
shl
push
mov
inc
pop
sbb
inc
mov
mov
xchg
sbb
xchg
shl
xor
out
cmp
mov
dec
cltd
lea
js
loopne
sub
adc
pop
xor
bound
add
js
push
xor
push
sub
mov
fstl
and
pop
call
rolb
fs
xor
jno
loope
xlat
adc
push
in
xchg
and
les
inc
ljmp
xchg
incb
movsb
push
push
roll
dec
fidivs
mov
stc
lret
lds
movsl
dec
sti
lcall
inc
lods
sahf
rclb
mov
xchg
aas
inc
cld
sub
push
xor
sbb
push
andl
sub
addr16
xor
clc
adc
pushf
sbb
pushf
pop
cmc
xor
mov
sbb
call
addl
cmpsl
add
jnp
adc
inc
xchg
mov
or
pop
ss
xor
pop
out
shll
xchg
sub
lock
ljmp
dec
shlb
add
je
sub
repz
mov
adc
lahf
popf
ja
stos
ss
add
xor
in
sbb
xchg
dec
xchg
stos
clc
adc
cmp
enter
into
mov
add
mov
adc
mov
cli
jle
push
call
xor
fnsave
cmp
jmp
ljmp
sbb
les
pop
repz
jae
xor
mov
sbb
and
jbe
jl
jp
jns
sbb
push
and
pop
lcall
add
mov
add
ljmp
aaa
lea
imul
es
sbb
cwtl
inc
xchg
xchg
mov
push
into
sbb
or
ja
jnp
mov
ja
mov
outsl
add
loopne
jns
gs
mov
xchg
fs
lods
mov
xor
nop
adcb
int
mov
jl
push
test
cmpl
repnz
les
cmp
mov
push
xchg
lahf
push
add
push
mov
hlt
repnz
icebp
pushf
aam
bound
dec
xchg
xor
call
cmpsl
xor
jp
xchg
lret
rolb
mov
jne
jp
inc
add
inc
xor
fsubl
dec
iret
push
daa
push
rcrl
shll
push
cmp
movsl
add
lods
aam
push
mov
cmp
xor
popf
ficomps
mov
lret
mov
xchg
add
xor
and
aaa
mov
xchg
xchg
jb
addr16
sbb
cli
push
test
js
scas
push
add
push
insb
out
cmpsl
add
mov
jle
xchg
lret
push
lcall
pop
add
inc
cli
cmpb
insb
sti
pop
loopne
jo
cwtl
leave
stos
lods
add
cmpsl
or
loopne
push
xor
cld
jno
je
gs
mov
addl
mov
movsl
inc
sbb
inc
fs
push
or
add
pop
or
pushf
inc
add
scas
popf
repnz
ret
dec
hlt
and
jle
xchg
mov
inc
inc
std
insb
jnp
clc
dec
lahf
cli
mov
pusha
or
xchg
xchg
jnp
jne
mov
add
pusha
xchg
das
inc
movsb
mov
and
jecxz
cmp
and
push
sub
push
fstpl
mov
das
jns
or
mov
lods
push
lcall
xor
inc
lret
sub
gs
hlt
jl
popf
cld
push
mov
mov
aad
mov
push
lock
data16
lret
in
mov
adc
rclb
pop
cmpsb
mov
inc
cli
cmp
and
insl
push
xor
filds
and
fisubl
jno
cmpsb
and
addr16
mov
dec
fists
inc
add
stc
fistpl
push
dec
dec
les
adcb
dec
mov
hlt
inc
js
add
push
lahf
lea
xchg
mov
push
xchg
push
pushl
fistl
sub
xor
call
pop
scas
mov
fstpt
mov
lods
add
call
lds
cmp
push
insb
sub
stc
push
adc
mov
fsts
or
cmp
sub
sub
leave
sbb
add
pushf
sub
ret
dec
jb
lcall
int
cli
push
imull
jo
std
add
in
mov
jne
jo
dec
sub
xchg
jle
push
pop
ret
push
aad
test
jo
xor
out
pop
in
jb
adc
mov
fcomps
mov
push
call
outsb
rcr
xor
aad
add
enter
and
cmp
mov
xor
scas
pop
fdiv
jbe
enter
es
int3
mov
pop
das
dec
fdivrl
add
add
lret
xor
pusha
push
pop
jl
cmp
cmp
loopne
les
jno
in
jae
popa
repz
clc
and
nop
push
jns
enter
je
xchg
jle
add
out
jp
add
pop
inc
cwtl
mov
lret
pushf
daa
pop
push
or
out
jne
and
xor
out
and
and
push
inc
mov
inc
cmc
fistps
cli
dec
shlb
cmp
adc
rorb
lea
pop
mov
push
aas
repnz
adc
mov
loope
mov
test
pop
aad
aaa
lea
and
or
xor
inc
jo
xor
lea
inc
out
sbbb
insb
scas
js
sub
mov
aaa
nop
xlat
mov
pop
xor
and
lret
xchg
cmp
xchg
pop
xchg
in
xchg
lods
in
xor
mov
in
aad
cmp
pop
inc
sbb
and
adc
mov
add
cmp
clc
ss
sbbb
sub
enter
mov
orb
mov
testl
pop
pop
ss
dec
mulb
mov
mov
clc
or
das
arpl
sub
mov
mov
testl
mov
xchg
and
lods
testb
jne
ret
jl
mov
sub
out
or
inc
std
or
js
andl
call
push
mov
dec
lock
mov
sti
in
inc
xchg
sub
jae
fs
jo
cmp
mov
add
popf
add
std
xor
lahf
js
push
adc
aas
ljmp
jae
xor
dec
clc
dec
aad
in
and
cmp
ret
push
ds
cld
xor
dec
dec
pop
mov
clc
dec
mov
aad
sbb
rcrb
push
sbb
fidivl
push
or
mov
push
xlat
pop
mov
add
pop
fwait
aam
lcall
push
cltd
out
in
fwait
stc
daa
loope
scas
aam
dec
push
adc
pop
jle
xchg
test
in
jbe
pop
shrd
mov
inc
push
jae
mov
hlt
adcb
xchg
sub
das
jo
and
or
mov
lahf
jp
add
fistps
std
and
ret
jns
push
js
ja
jge
jl
cli
iret
jmp
jg
push
in
mov
adc
and
outsb
jnp
add
sbb
and
cwtl
pushf
fisubs
adc
inc
adc
push
ret
cmp
ficoml
and
clc
push
adc
lahf
adcl
std
add
mov
mov
or
fdivrp
addb
clc
xorl
lea
or
xlat
imul
mov
xchg
add
or
add
movsl
adc
dec
jne
fs
cmpsb
loop
loopne
adc
xchg
xor
mov
das
dec
lret
stos
push
cmpsb
ja
cli
jmp
xor
cmp
inc
xor
mov
jp
and
adc
mov
fwait
cmp
jnp
dec
js
inc
mov
mov
int
fbld
mov
mov
pop
bound
sub
imul
fs
cs
call
mov
leave
mov
lods
sub
sbb
pop
out
cld
fimull
addr16
js
xor
mov
jne
sahf
lods
into
rcr
gs
xor
jmp
and
mov
jge
mov
mov
pop
lret
push
push
cmpb
inc
pop
xchg
or
push
mov
rol
and
push
adc
add
pop
fildll
mov
cld
out
rcll
cmp
icebp
clc
aas
push
roll
jb
cld
and
mov
xchg
cmpsl
or
xchg
popa
cmp
xor
lock
or
test
out
test
jae
fnstsw
sub
in
dec
adc
adc
adc
fstpl
outsb
pop
in
cmp
leave
hlt
stos
jp
mov
push
mov
icebp
add
ljmp
lcall
xor
outsl
fsubrs
mov
and
jo
push
and
pop
je
push
push
ret
pusha
push
sbb
lods
ret
jge
dec
rorb
dec
loope
movsl
sbb
into
dec
jmp
pusha
sub
divb
xchg
mov
fwait
popl
gs
outsl
or
je
nop
mov
out
out
jmp
pop
mov
pop
push
push
mov
push
icebp
ret
aaa
sub
dec
test
pop
aaa
jecxz
lcall
jo
xchg
das
sbb
sbb
stc
xchg
jbe
jg
xor
mov
sbb
insl
mov
xor
dec
rorb
jl
repz
jno
aad
movsl
sub
repnz
inc
xchg
xor
inc
loopne
push
pushf
loopne
gs
mov
cmp
xor
sub
add
xchg
xor
sbb
jbe
inc
xchg
into
jg
xlat
lods
jle
pusha
xor
dec
hlt
lahf
and
jmp
fs
mov
dec
data16
std
les
jno
add
jle
sbb
sub
pop
nop
pop
pop
dec
sbb
rorb
pop
add
lods
sbb
rolb
xor
fadds
jecxz
call
adc
add
lock
sbb
mov
cmp
xchg
add
push
rcl
mov
xchg
dec
daa
mov
mov
dec
add
sbb
jno
jp
outsb
dec
cli
sub
sub
stc
inc
sub
ljmp
mov
imul
mov
mov
mov
sbb
dec
pop
add
push
and
fs
fdivl
jbe
in
and
cs
cmp
cwtl
fiadds
scas
loop
iret
icebp
push
insl
in
xor
shrb
out
jns
movsl
cmp
sti
data16
pop
xor
sbbl
popa
inc
fisttps
add
dec
push
cwtl
rolb
sbb
push
push
jge
xchg
mov
push
aam
inc
cmp
add
sahf
xlat
lods
and
push
call
mov
pop
pop
inc
xchg
cmpsl
jnp
sbb
xor
seto
sbb
dec
popa
decb
xchg
dec
xchg
out
add
adc
jp
lods
sbb
rol
repnz
fmuls
sbb
in
jmp
popl
scas
cs
subb
pop
xor
mov
mov
cmp
lds
and
add
imul
outsb
and
in
mov
adc
pop
push
enter
adc
mov
xchg
sti
push
out
push
sub
sti
push
aam
push
lea
sbb
popf
das
sub
sub
xchg
jl
sub
shlb
imul
loope
cmp
aad
push
sub
jle
cmpl
arpl
cli
sbb
subb
push
popa
ret
add
fldl
jp
push
fdivs
daa
sub
jle
loopne
or
dec
js
mov
push
xchg
mulb
add
cmpsb
stos
fidivl
out
push
dec
cmp
pushf
pop
or
testl
into
push
cltd
int
adc
xchg
sbb
fwait
les
flds
enter
repnz
xor
add
mov
pop
pop
dec
pop
cmpsl
ret
insb
cld
lock
mov
or
loop
popa
outsl
xchg
es
pop
or
or
scas
add
mov
pop
shlb
xchg
sbb
and
cli
mov
fs
pushf
in
pop
jno
inc
xchg
iret
sub
outsb
push
imulb
xor
push
scas
and
or
dec
push
pop
aas
addl
jno
pusha
sub
gs
pop
shrb
sbbl
shll
mov
add
and
loop
or
fistpll
jg
push
mov
jae
sub
inc
rcr
stos
inc
sub
insb
cwtl
sbb
subl
pop
imul
test
dec
sbb
dec
cli
les
inc
lret
inc
popa
mov
and
sub
gs
pop
je
fcomps
or
popl
out
xchg
cmp
cmp
sahf
mov
push
pop
addr16
clc
das
sbb
push
repnz
dec
xchg
imul
jns
jnp
xchg
loopne
mov
pop
dec
idiv
inc
enter
xchg
mov
out
pop
subb
mov
xlat
call
fs
scas
or
clc
push
mov
pop
sahf
repnz
out
or
sbbl
xchg
dec
pop
mov
push
xchg
push
sbb
in
xor
xlat
lret
cmpsb
xchg
jle
or
and
aam
sub
es
xchg
adc
sub
sbb
xchg
push
stc
push
gs
jns
push
mov
add
ja
aad
sub
mov
or
loopne
xchg
jge
push
popf
jge
iret
dec
repnz
pop
push
push
sub
outsl
inc
sti
push
inc
lahf
insb
dec
jne
or
or
cli
mov
pop
rorb
je
cmp
jb
clc
jns
andb
movsb
mov
dec
loop
cwtl
or
xchg
sbb
xchg
lods
dec
xlat
aas
mov
sti
jno
cli
push
test
sub
or
pop
aad
xor
repnz
pop
leave
adc
push
imul
mov
dec
and
fwait
mov
shr
jle
inc
roll
adc
sbb
push
jns
sbb
pushf
loopne
ja
dec
test
xchg
pop
ret
push
rdmsr
hlt
cmc
add
aam
xchg
sbb
xor
repz
dec
xchg
lods
mov
ret
outsl
sub
jmp
gs
and
xchg
xchg
sub
sub
stos
jno
cmp
adc
mov
mov
movsl
dec
nop
and
sarl
pushf
jmp
inc
cmpsl
cld
outsl
pop
push
fs
fs
hlt
mov
push
dec
lcall
mov
xchg
ret
shlb
rcrb
push
or
inc
sbb
movsb
ja
mov
call
xor
xchg
insb
shl
int3
push
add
mov
sub
in
add
cs
pop
sub
jns
mov
mov
ror
add
pop
cmpsb
mov
shll
add
add
out
add
pop
gs
sahf
inc
jne
pusha
sub
sahf
pop
fstpl
dec
sti
lret
hlt
add
ja
mov
rorl
shl
aam
xlat
clc
ja
sbb
cwtl
and
movsl
mulb
add
das
xlat
ljmp
bound
sbb
inc
or
cs
fsubl
dec
add
stc
xchg
nop
dec
or
pushf
sub
fists
repz
pop
adc
mov
sbb
pop
into
stos
pop
daa
out
cmp
or
lods
sbb
xchg
push
jo
push
push
jo
xchg
sarl
sub
add
jmp
add
in
cltd
xchg
jno
aad
add
xor
sbb
std
ss
xor
sbb
aam
addr16
lahf
jp
jg
dec
iret
add
cwtl
inc
dec
push
cwtl
mov
sbb
push
loopne
repnz
test
mov
or
inc
sbb
xchg
mov
pushf
scas
xchg
lahf
dec
bound
aam
xchg
xchg
push
add
out
lret
bound
jae
xor
push
push
xchg
xchg
lret
jnp
mov
cltd
push
call
gs
icebp
adc
xchg
jmp
jnp
shll
js
out
push
in
dec
fbld
jns
push
jb
push
out
iret
xchg
sub
push
gs
sbb
mov
mov
sbb
jmp
out
sbb
adcl
sti
push
add
dec
je
sub
out
push
and
mov
xor
inc
adc
mov
push
sbb
mov
jb
push
inc
jbe
sub
popa
ss
addr16
jbe
mov
xlat
stos
insl
lds
cwtl
push
dec
or
pop
push
out
fs
dec
sti
mov
aam
and
pop
test
pushl
adc
sub
mov
add
xor
cltd
jge
mov
icebp
or
and
pop
sub
das
pop
xchg
addr16
push
aaa
sub
mov
mov
je
int3
test
and
enter
icebp
daa
sbb
sbb
jl
iret
sub
lods
or
fnstenv
or
xor
out
popf
leave
sbb
xchg
orl
add
jle
push
repz
fiaddl
sbb
xchg
stos
ret
xor
mov
repnz
ds
sbb
mov
xchg
int
mov
jg
or
das
das
imul
sbb
les
add
or
or
xchg
mov
nop
lret
xchg
outsb
add
iret
xor
xchg
and
mov
xchg
jb
or
or
mov
push
outsl
outsb
push
lods
mov
push
sbb
push
dec
scas
in
adc
xor
push
and
es
iret
mov
sbb
repz
and
jp
ljmp
sbb
out
fwait
dec
push
sti
add
add
push
xchg
pop
lcall
ja
int
orl
mov
popa
push
icebp
adcb
adc
push
lret
push
xchg
jbe
push
les
sbb
sbbb
push
lods
sub
xor
repnz
arpl
sbbl
daa
add
fistps
jb
mov
add
dec
sbb
xor
fbld
sub
sbb
mov
add
popa
daa
stc
movsb
sub
imul
mov
jae
inc
loope
mov
jb
cltd
mov
dec
xor
xchg
leave
mov
pop
rcll
cmp
push
sub
scas
ds
lcall
shlb
pop
push
fwait
mov
popa
sbb
push
xchg
sbb
mov
add
mov
in
sbb
roll
test
into
aas
and
push
push
stos
sbb
mov
insl
jbe
jle
inc
stos
adc
mov
adc
mov
adc
scas
or
sbb
stos
xor
bound
cwtl
cwtl
mov
mov
pop
sbb
push
cmp
pop
pop
adc
in
aaa
fnstenv
sbb
shll
jae
lea
pushf
add
mov
int
pop
jo
test
out
enter
lret
push
dec
fldenv
and
pop
add
inc
xor
lods
enter
repnz
push
enter
mov
xchg
jo
push
pushf
sti
outsl
push
cli
add
push
inc
pop
inc
movsl
and
mov
fistpl
push
mov
dec
aaa
dec
in
leave
shlb
sbb
insb
or
fs
insl
cmpsl
hlt
xor
xchg
out
sbb
sbb
xlat
dec
sub
cmpsb
xlat
mov
push
push
dec
sbb
sarl
inc
cmpsl
imul
push
pop
adc
outsb
adc
sar
sub
int
sbb
stos
xor
inc
add
popf
fwait
outsb
mov
xchg
je
mov
pop
xchg
xor
test
lock
test
lret
scas
fdivrs
pop
sbb
aas
mov
push
inc
repnz
fidivs
stos
add
inc
cmpl
cmpl
fidivs
xchg
mov
jle
sbb
int3
mov
mov
idivb
mov
or
sub
or
pushf
testl
call
nop
ret
and
inc
inc
icebp
or
sub
adc
popa
cmp
mov
sub
stos
dec
sbb
push
jae
sbb
in
mov
push
mov
sub
xchg
les
push
sub
dec
cmp
lret
fimull
test
je
pop
or
mov
fbstp
ja
jp
out
cmp
dec
push
outsl
in
xchg
jae
inc
negl
add
cltd
shlb
ds
test
js
shlb
insb
and
jo
push
ja
sahf
fcmovu
int
cltd
outsl
inc
js
push
mov
jp
fisubrl
add
popf
adc
sti
lock
pop
sbb
ficompl
fdivr
sbb
fsubs
movsl
ja
jg
test
dec
inc
pop
add
cmp
incb
push
fbstp
cwtl
out
mov
int
dec
mov
test
sbbl
mov
daa
iret
out
push
cltd
andl
test
loope
icebp
pusha
jmp
push
sbb
pop
push
cmp
mov
mov
push
push
sub
shlb
ret
jnp
mov
insl
js
nop
jl
insl
sbb
mov
xor
js
adc
adc
aas
pop
fildl
mov
sub
or
pop
cmp
les
or
shlb
inc
mov
and
and
mov
outsl
cmp
xor
cmp
push
test
fsts
cmpsl
in
jle
clc
dec
sbb
xchg
xor
fcompl
aas
call
cmc
je
movups
inc
stos
sti
scas
mov
add
xor
add
inc
ror
daa
ss
mov
or
lcall
xor
rcll
mov
pop
xlat
movsb
dec
sbb
lea
add
add
adc
mov
aaa
pop
sar
pushf
dec
adc
adc
imul
out
or
out
pop
lret
adc
sub
cwtl
movsb
dec
xchg
sub
add
sti
nop
add
gs
aaa
orl
pop
sub
dec
pusha
popf
lea
repz
lahf
inc
in
lret
sbb
adc
ss
repnz
out
or
addr16
pushf
mov
sub
sbb
adc
adcb
aaa
mov
xchg
or
sti
push
sbb
jb
pop
mov
icebp
or
sbb
fs
dec
icebp
gs
in
cli
addb
xor
insl
arpl
lea
or
jg
mov
cwtl
imul
cmp
cli
call
adcl
popf
mov
sbb
rcl
or
outsb
adc
mov
cmp
pushf
insb
mov
or
enter
addr16
lock
lock
clc
cmpsb
jns
cmp
xchg
aam
sub
scas
enter
pop
mov
add
xorl
stc
sub
inc
les
lock
out
leave
jle
push
push
pop
xor
xchg
mov
pop
out
add
add
aam
push
pop
push
enter
cmp
out
in
xor
xor
jb
scas
mov
fwait
inc
xorb
sti
sub
cmp
rclb
inc
scas
sbb
dec
xchg
pop
ret
jo
pushf
je
xor
and
xchg
mov
cwtl
xor
mov
lcall
jns
xchg
jae
test
push
imul
or
or
push
pop
sbb
add
and
or
push
jne
mov
adc
pop
add
out
call
add
or
mul
popf
sbb
and
dec
xchg
cmp
call
test
push
xlat
xchg
rep
jae
ret
cld
xor
push
mov
pop
sarl
out
or
adc
xor
fwait
shll
jae
and
lcall
and
inc
sbb
sahf
jp
cmp
imul
bound
inc
push
cld
cli
sbb
mov
pop
jp
ja
mov
xor
jecxz
inc
push
outsb
cmp
std
fs
andl
fstps
cs
jns
cmp
jnp
mov
lea
cmp
inc
add
cmpsb
sahf
jbe
dec
adc
ja
lret
lock
add
scas
xlat
dec
pop
ret
sub
repnz
jns
mov
fsubl
out
adcl
ss
mov
sub
jae
xchg
out
push
rolb
inc
push
ficompl
std
push
mov
aas
add
xchg
stc
xor
inc
in
or
insb
dec
je
pop
inc
sub
outsb
gs
out
jle
xchg
xchg
in
pushf
leave
lahf
inc
cmpsb
pop
lods
jecxz
push
call
add
add
sub
adc
daa
vpaddsb
xchg
pop
inc
mov
in
jmp
mov
cmpsl
rcrl
xor
inc
inc
add
adc
clc
mov
pop
pop
xor
clc
divl
add
mov
outsl
mov
clc
cmpsb
mov
pop
insb
push
xchg
repnz
mov
je
inc
mov
xchg
adc
lods
jle
in
xchg
jns
cmp
xchg
or
dec
xchg
lahf
aaa
push
shlb
mov
pop
fs
mov
scas
sahf
push
mov
insb
mov
or
adc
std
or
cmc
fildll
push
inc
jns
add
push
sbb
insb
jnp
push
scas
popa
pop
in
cmpsb
cmp
pop
mov
sub
sub
bound
into
pop
add
movsb
out
test
xor
enter
leave
sahf
cmp
cmp
hlt
movsb
jne
insb
lcall
push
fcmove
or
clc
xor
add
xchg
jecxz
push
fiadds
scas
bound
ss
fcoms
je
test
push
add
cwtl
jl
and
arpl
xchg
cs
mov
out
in
xor
lret
aas
adc
xor
or
jo
sbb
aad
mov
xor
cmpsb
adc
or
aad
add
shll
and
jo
push
fdivrs
loop
test
sub
or
hlt
mov
xchg
adc
pop
jne
popf
pushf
adc
mov
lods
std
and
pop
iret
mov
dec
scas
aas
ja
cmc
mov
push
xchg
mov
cmpsl
aas
cld
push
enter
scas
jle
inc
clc
aam
lods
cld
movb
mov
std
adc
je
add
push
add
pushf
push
loopne
lods
cmc
bnd
jp
hlt
mov
mov
jno
pop
sahf
andl
test
xchg
addr16
mov
or
mov
jg
enter
lods
mov
push
mov
push
imul
pop
cmp
cltd
add
sahf
add
shlb
push
sti
fcomps
int
or
iret
and
mov
sbb
ds
lods
les
mov
fxch
cs
into
jnp
xor
lcallw
xchg
pop
mov
fs
inc
xor
inc
cmp
in
or
lods
or
ljmp
adc
bound
fs
mov
dec
frstor
lods
ss
ret
mov
insl
loop
stos
jge
push
ja
xor
xor
adc
mov
push
add
lahf
add
cmp
test
add
pop
addr16
or
jp
xchg
add
inc
das
sbb
in
adc
or
clc
and
jl
and
in
stos
cmp
aam
jbe
test
lods
pushl
cmc
fnsave
inc
scas
fsubrl
clc
cmp
testl
movsl
int3
fldenv
orb
loope
sbbl
pop
jns
inc
adc
loopne
pop
and
pop
and
xchg
or
mov
pop
bound
ljmp
pop
sahf
addr16
xchg
jmp
sbb
enter
mov
add
aas
jo
int
xchg
xchg
and
pop
sbb
adcl
insl
into
loope
clc
inc
mov
out
and
pop
jae
jb
fs
cmp
cmp
mov
or
sub
fmul
bound
jns
fimuls
bound
aad
add
psrlq
addb
push
xor
mov
sbb
push
movsl
and
arpl
lods
enter
je
fs
popf
int3
xor
outsl
fiadds
into
mov
pop
mov
inc
cltd
mov
shll
jb
inc
bound
pushf
sahf
sahf
jp
or
adc
mov
add
es
mov
iret
stc
sbb
push
outsb
sbb
xor
sbb
repnz
movsb
lods
push
add
jnp
dec
xchg
insb
lcall
adc
jecxz
loop
ret
out
xchg
out
dec
xchg
jecxz
shrl
stos
lcall
jge
int3
ljmp
inc
pop
inc
or
pop
jge
sarl
push
ja
mov
and
inc
cmp
js
dec
mov
dec
adc
enter
lcall
adc
push
hlt
push
xchg
inc
roll
xorb
bnd
push
jecxz
leave
pop
jnp
cmp
mov
cmp
in
sub
and
xor
pusha
mov
fldl
mov
test
mov
pusha
bound
lock
mov
mov
loop
shlb
aam
loope
and
data16
into
mov
adc
mov
inc
dec
aad
cwtl
je
sub
fimuls
jns
xor
lcall
xor
adc
lods
inc
repnz
mov
push
add
or
or
mov
pop
xor
lahf
mov
add
faddl
mov
push
inc
popf
es
add
sbb
sbb
jle
push
sbb
lea
leave
cld
lods
sub
jl
inc
and
add
clc
sub
cmc
adc
or
loopne
jmp
testl
lea
insl
out
adc
sti
lods
pop
fs
lea
fnsave
cmpsb
or
pusha
mov
inc
mov
std
xlat
lcall
mov
js
jb
pop
fisubs
pop
pop
sbb
nop
push
pop
out
xor
add
mov
loopne
fadds
addl
inc
add
js
mov
dec
xchg
bound
loop
jmp
les
test
push
les
in
cltd
jg
mov
mov
aam
cltd
mov
out
mov
fadds
lds
mov
into
add
jecxz
mov
mov
gs
das
jbe
xchg
scas
mov
sbb
inc
xchg
fdivp
jmp
and
cmp
push
imul
xchg
das
iret
cmp
sub
mov
popf
dec
sbb
add
je
enter
jo
adc
stc
push
push
xor
inc
sbb
push
mov
xchg
or
sbb
mov
dec
sub
mov
xor
ret
fcmovnbe
call
repnz
mov
cmp
lret
lret
fwait
push
jl
sbb
add
pop
pop
add
push
jge
imul
test
fucompp
push
mov
push
inc
mov
ss
enter
adc
scas
add
pop
pushf
adc
push
ja
testb
xor
pop
mov
test
clc
cld
pop
pop
and
icebp
pop
dec
xlat
or
mov
stc
filds
mov
mov
ror
std
push
int
daa
dec
jg
inc
sub
add
fs
sarb
adc
arpl
out
dec
or
sub
stc
in
xor
sub
int
push
mov
outsb
jmp
in
push
sub
and
js
pusha
shrl
cmpb
lods
pop
pop
pushf
and
ds
sbb
sub
ds
inc
jp
xor
mov
add
cld
imul
xchg
add
xor
add
test
sti
or
and
incb
stc
push
xor
adc
iret
sub
in
add
pop
ds
dec
push
push
or
es
mov
test
adcb
test
mov
xchg
xchg
mov
clc
push
loopne
xlat
ss
mov
mov
subl
mov
call
sbb
in
in
ds
sbb
addb
xor
sub
sub
test
pop
or
loope
push
lods
cmpsb
sbb
fisttps
rcll
mov
push
and
sbb
or
inc
jnp
clc
inc
mov
mov
add
cltd
pop
mov
insb
or
subl
sbb
sub
inc
add
in
rcrl
fstps
pop
or
je
jo
mov
testb
add
jle
and
daa
clc
ljmp
xchg
int3
js
mov
incb
add
adc
add
sub
sbb
pop
sub
popf
insl
sbb
cmc
insb
mov
mov
pusha
adc
or
mov
add
xchg
jns
test
jo
fiaddl
pop
aad
cs
shll
push
fs
cmpsb
out
cmp
lods
test
aad
mov
sahf
in
insl
dec
in
aad
mov
and
pop
inc
scas
fcmovnbe
ret
and
xorl
inc
xor
outsl
push
popf
loopne
dec
pusha
ja
add
xchg
out
mov
pop
cmc
jno
sub
aas
push
jmp
cld
push
push
xchg
xchg
cmpb
jb
pop
sarb
xor
bswap
in
data16
ja
jle
add
out
aam
or
outsl
dec
cmp
sub
clc
push
adc
movups
test
xor
mov
push
pusha
dec
jno
mov
es
cwtl
sbb
cli
fiaddl
jp
adc
xlat
cmp
scas
or
jbe
cmp
adcl
push
cmp
cli
cli
push
sahf
imull
popf
or
push
sbb
call
cs
stos
jl
xor
xor
into
mov
adc
jae
hlt
add
lcall
xchg
sub
mov
sbb
sbb
and
xchg
cmp
sbb
je
sub
js
pusha
shrl
fiadds
int
cmp
xor
sbb
iret
out
push
fadd
insb
pop
or
cltd
pop
push
call
mov
pop
hlt
clc
or
into
mov
popf
xchg
jae
fsubrs
mov
cs
cmp
pop
mov
dec
mov
push
inc
sub
pusha
loopne
jmp
inc
add
shrl
cmpb
scas
lret
cli
push
or
sbb
dec
mov
adc
or
cmpsb
xchg
dec
xlat
add
out
jne
mov
jnp
mov
jnp
pushf
jne
push
jnp
push
jo
call
jo
inc
adc
popl
adc
jp
negl
jge
mov
into
ss
jno
lods
pop
or
mov
cmp
enter
push
repz
into
or
and
xlat
and
aad
xchg
mov
ret
add
loop
js
xchg
stc
ds
pop
sub
psubusw
into
push
add
fisubrs
push
std
lods
jp
xchg
sti
mov
mov
andl
cltd
stos
jns
xchg
rorb
inc
neg
pop
pop
xchg
cmp
adc
popf
and
iret
xor
es
cmp
daa
inc
cwtl
push
test
lock
add
popf
or
les
push
lcall
pop
and
xlat
xor
pop
iret
iret
or
pop
cld
xor
mov
mov
mov
adc
mov
cmpsb
imul
daa
notl
or
les
adc
andb
les
repnz
es
jb
and
and
push
mov
adc
movsl
add
js
pop
inc
inc
jns
pop
inc
call
jne
notl
or
pushf
sub
pop
out
jge
pop
fsts
inc
pop
ljmp
ret
pusha
push
push
push
negl
push
or
lods
mov
sti
mov
ja
dec
fdivr
je
cmp
test
adc
adc
jl
pushf
mov
imul
in
jno
lea
cmp
and
inc
fs
pusha
push
pusha
pop
push
int
gs
mov
scas
ljmp
ja
sti
jg,pt
xchg
aaa
sub
pop
mov
stos
insb
xchg
dec
xor
and
subb
jne
xor
mov
jb
sub
test
ret
fs
dec
fisubs
pusha
fs
lret
movsb
add
cltd
lret
sub
xor
mov
lahf
mov
mov
ret
sahf
xchg
fadd
jle
push
pushf
out
cmp
loope
ds
call
dec
push
dec
sahf
js
mov
jb
cmpb
cmp
mov
mov
mov
in
or
lock
out
mov
adc
test
mov
or
loop
in
pop
icebp
fcomp
sub
aas
pop
subl
les
cli
mov
addr16
movsl
scas
push
cmp
sub
out
push
jo
and
push
jns
add
jp
push
or
cltd
inc
movsb
push
jne
out
or
adc
pushf
jge
or
idivb
sarb
movsb
push
int
gs
call
cwtl
les
dec
add
lock
lods
xor
push
pop
or
scas
inc
add
cmp
mov
lods
xchg
and
leave
xchg
out
int
mov
push
test
cwtl
pop
loop
into
xchg
push
or
jecxz
lods
mov
std
outsl
mov
sub
mov
xlat
dec
mov
mov
sub
fs
sub
bound
xchg
mov
jo
pop
mov
and
sbb
sahf
fwait
xchg
sahf
and
push
ds
inc
fadds
rcl
orb
inc
pop
jno
shrl
and
xchg
sub
and
pushf
gs
inc
jns
out
call
scas
scas
push
push
dec
inc
pop
test
dec
dec
inc
hlt
dec
push
push
jle
fsubrs
sub
pop
pop
arpl
addr16
pop
sbb
xor
stc
mov
xor
data16
xor
imul
mov
in
mov
dec
outsl
jecxz
test
es
pusha
inc
dec
push
sub
enter
add
cltd
xchg
xchg
cltd
icebp
push
std
add
jl
call
pop
movsb
subl
leave
cmc
mov
xchg
cmp
subb
add
xor
cmpsl
outsb
out
cwtl
aas
in
notl
lods
scas
ret
xchg
lods
adc
insl
mov
pop
or
aaa
xor
cmp
inc
sub
cmc
test
cmp
xchg
xorl
mov
push
and
adc
lcall
stc
stos
pop
loop
stos
mov
je
cwtl
cmpsl
rorb
jns
rclb
hlt
jge
sub
or
dec
fsubrl
add
push
int3
jle
xchg
int3
jge
xchg
sub
gs
in
push
pop
mov
and
lret
ret
sbb
sbb
and
and
ret
xor
popf
mov
popf
adc
mov
pop
out
ds
mov
fcomps
popf
push
pusha
bound
pop
xchg
lods
and
scas
jmp
adc
xorb
addr16
inc
dec
add
or
cmp
inc
fdivs
xchg
int3
aad
xchg
bnd
cmpsb
jge
sub
fnstsw
inc
fistpl
xchg
mov
xlat
cmp
mov
and
pop
xchg
fucomi
jns
cli
adc
jecxz
or
cwtl
adc
cmp
mov
add
adc
repz
sbb
inc
scas
adc
cltd
mov
pop
popf
or
xor
mov
push
xor
lods
adc
mov
sbb
mov
scas
adc
pop
cmp
fmull
cld
pushf
bound
mov
push
lods
sbb
call
leave
lret
xorl
dec
xchg
fnsave
or
enter
sbb
movsl
jp
sbb
mov
out
fcomps
test
adc
mov
and
push
mov
or
test
cwtl
inc
adc
and
and
icebp
or
push
clc
lods
xchg
xor
adc
popl
decb
je
das
jno
sahf
out
cmp
inc
xchg
fsubs
dec
pop
and
repnz
scas
es
insb
lods
and
adc
aad
daa
lods
add
insb
inc
cwtl
test
push
xchg
and
sbb
das
out
add
mov
idivb
into
int3
cmp
jp
clc
push
mov
cmp
pop
mov
data16
pop
inc
shll
fwait
mov
pop
fistps
jp
add
outsl
sub
adc
test
movsb
and
pop
xor
leave
add
sbb
dec
stc
pop
cmp
mov
mov
sti
cmpsl
jb
shrb
les
push
mov
mov
fsubrs
test
pop
mov
out
je
pop
xchg
mov
sahf
dec
mov
loopne
add
add
lret
mov
dec
sbb
std
test
outsl
inc
out
xor
pushf
push
xchg
sub
adc
mov
call
inc
mov
aaa
cli
iret
fstpt
xchg
jo
add
into
inc
loope
add
push
gs
cltd
fs
jl
push
in
push
xchg
jge
fwait
dec
mov
in
repnz
pushl
icebp
inc
dec
insl
aad
out
iret
or
test
addr16
frstor
ret
and
xchg
into
add
sets
fstp
mov
push
xchg
adc
movsb
orl
ljmp
push
cwtl
insb
repz
cmpsb
cli
test
sub
fisubrl
sub
stos
ffreep
shr
cli
push
xchg
push
lods
sahf
or
add
add
mov
adc
pop
hlt
mov
in
fcoms
mov
fnstsw
loope
aam
pushf
inc
mov
mov
add
movsl
fsubl
rcrb
add
sub
and
sub
xchg
fnstenv
leave
js
repz
sub
jle
mov
addb
sbb
adc
push
sub
xchg
and
jle
jecxz
sub
outsb
lock
jg
jp
pop
mov
std
mov
lds
jge
add
sub
sub
fnsave
dec
cmp
push
inc
pop
mov
mov
fs
sbb
pop
dec
add
xor
andl
add
mov
pop
xor
bound
outsb
insb
enter
sub
aas
inc
lds
cmp
sbb
je
push
aad
push
xor
xor
in
pop
andl
rorb
mov
add
mov
add
push
xchg
inc
or
push
add
xlat
pop
pop
sbb
cmp
dec
insb
clc
sbb
jg
adc
jo
outsb
mov
data16
andb
sbb
push
add
out
fildll
mov
push
inc
ds
lods
push
dec
mov
push
mov
pop
push
jnp
into
dec
xor
movsl
xor
push
test
jge
or
imul
and
divb
cwtl
and
jg
pop
and
add
cmp
cwtl
stc
sub
mov
adc
jnp
enter
jb
pop
call
push
cmpsl
sub
pop
fwait
insl
testb
lcall
ds
mov
cmp
inc
addr16
fsubs
ret
cmp
ds
pusha
sub
xor
cltd
inc
enter
test
dec
in
std
loope
mov
push
cmp
insl
dec
push
adc
lahf
jg
test
jne
or
pop
add
es
cmp
hlt
arpl
ret
and
push
and
adc
lcall
fs
mov
sub
xchg
pop
mov
lea
lock
mov
lahf
xchg
icebp
cld
add
add
jne
es
insl
push
ficomps
cli
adc
mov
adcl
test
divl
push
andl
repz
sbb
add
jbe
push
scas
mov
inc
add
dec
and
add
outsl
push
scas
leave
ss
ljmp
fidivl
lock
bound
cwtl
inc
cmp
arpl
adc
dec
push
push
mov
sbb
pop
mov
sub
repz
xchg
push
out
inc
out
jo
out
nop
pop
sub
adc
or
bound
negb
mov
sbbb
out
xchg
xchg
clc
dec
jp
pop
out
jmp
pop
push
aas
sub
mov
push
hlt
loopne
dec
xchg
aad
movsb
jg
jns
orb
cmp
repz
cmp
adcb
aaa
popa
in
sbb
test
inc
adc
arpl
mov
xchg
test
andb
sbb
sbb
or
add
dec
xor
add
outsb
adc
jo
or
clc
pushf
cmp
js
sbb
pop
mov
out
dec
out
or
mov
sbb
inc
push
popl
insl
xchg
push
cmp
cmpsb
xor
add
add
jmp
jmp
outsl
or
lea
addb
sub
mov
ret
jp
nop
push
pop
push
call
shll
pushf
js
inc
stc
xor
int
push
adc
rorb
daa
dec
shll
cmp
repnz
dec
enter
stos
es
mov
sbb
and
outsl
mov
notl
addr16
xchg
dec
lret
and
fcomps
inc
rclb
push
fisubs
popa
inc
stos
push
addl
pop
in
jns
cmpsl
ret
aaa
jle
jns
mov
jl
add
inc
test
inc
xchg
xlat
in
push
sbb
xor
frstor
sub
mov
inc
jns
push
data16
inc
sbb
insl
mov
movsbl
movsb
xchg
scas
inc
leave
push
push
icebp
repnz
add
jns
sbb
jne
mov
ds
push
sub
dec
flds
mov
std
bound
cwtl
xor
les
cmp
pop
mov
mov
bound
dec
out
xor
sbb
cli
test
add
adc
cmp
fdivs
fcmovnb
mov
out
std
cmp
xor
add
mov
pop
jg
cmp
ret
pop
xchg
push
jne
mov
hlt
ret
pop
test
jmp
insl
adc
lcall
inc
push
mov
dec
dec
cmp
sub
sub
inc
shr
sbb
mov
add
mov
cmp
adcl
xchg
cmp
loop
jns
dec
adc
scas
push
add
sub
stos
lahf
dec
jg
xor
call
arpl
in
push
les
or
aas
and
cmpsl
or
mov
pusha
pusha
mov
cmp
mov
adc
or
sub
scas
mov
adc
imul
xchg
dec
jns
lcall
mov
sub
lahf
sbb
ret
adc
adc
sub
xchg
pop
jmp
and
call
push
jnp
iret
lock
rclb
sub
xchg
int3
cs
pop
adc
or
xchg
ljmp
inc
or
mov
sub
dec
mov
outsl
add
fs
in
pusha
rcll
or
jno
addb
cmp
cs
pop
adc
in
pop
mov
fs
sub
pop
mov
cs
adc
shll
aad
in
aaa
mov
addr16
gs
pop
bound
push
repnz
add
pop
push
enter
sbb
sub
iret
mov
imul
imul
sub
in
sbb
add
jle
shlb
outsb
pop
lds
rcr
sti
pusha
sbb
aaa
inc
cmc
lret
rcll
dec
jne
jl
xor
out
mov
inc
xchg
fsubrs
pusha
inc
imul
lea
pop
push
or
shlb
dec
js
sti
sub
push
xchg
mov
sub
repnz
pop
push
add
loopne
jl
jnp
dec
je
ret
mov
pop
mov
xor
adc
cli
cmc
mov
pop
fistps
sbb
cmp
fwait
and
aaa
inc
mov
mov
sbb
cli
inc
add
xchg
push
jmp
sub
mov
fisubs
add
outsl
out
lret
xchg
popf
cs
test
mov
mov
dec
scas
aas
outsl
popf
cmc
push
pop
addr16
cmp
fsubs
mov
stc
popa
pop
xor
inc
jecxz
sub
and
inc
jecxz
sbb
pop
push
bound
loope
leave
mov
aam
add
mov
test
mov
xor
mov
pop
sub
inc
cmp
arpl
sbb
xchg
popa
inc
inc
rcrl
jbe
scas
mov
ja
xchg
add
fldcw
leave
jp
dec
sub
add
enter
inc
int
push
lds
dec
push
gs
aad
sbb
nop
outsl
dec
add
icebp
fsubl
movsb
mov
ret
loope
mov
or
pop
and
out
sbb
gs
std
pop
sbbl
inc
movsb
mov
daa
xor
arpl
xchg
sub
cmc
call
lret
mov
cmpsl
arpl
or
rclb
cli
jb
mov
sti
scas
dec
adc
cs
dec
sahf
ficomps
testl
push
adc
lahf
jp
add
push
cmpb
mov
xchg
clc
cltd
mov
cmc
test
xlat
or
data16
ds
push
movsl
call
fisttpll
loopne
stos
stos
mov
enter
nop
sahf
cmpl
adc
xor
ja
adc
repnz
mov
dec
in
xlat
xor
repnz
fs
les
dec
pop
int3
xor
inc
aas
inc
mov
ret
lret
sub
cmp
adc
inc
add
gs
sbb
inc
xchg
cwtl
clc
sub
fisubs
sbb
ja
push
pushf
dec
jnp
sbbl
push
clc
imul
call
leave
adc
add
test
int3
repz
fcmovb
scas
fnsave
out
imul
add
std
out
cmp
hlt
pop
inc
inc
andl
out
sbbb
sbb
insb
pop
mov
js
add
jne
aam
adc
loopne
jecxz
or
mov
xor
mov
fimuls
and
push
fsubr
fdiv
xchg
shlb
jge
insl
test
sbb
xchg
mov
mov
cwtl
sbb
push
js
add
inc
mov
mov
mov
dec
or
js
pop
repz
sbb
xorb
in
scas
cmp
lahf
and
iret
or
pop
pop
xor
sub
daa
test
out
leave
xchg
xchg
push
scas
out
repz
pop
jno
inc
rcll
outsl
inc
pusha
inc
loop
jno
shlb
cmc
adc
adc
sbb
mov
pop
push
jge
cltd
js
push
call
xor
aam
inc
mov
cwtl
mov
jle
in
push
xor
push
test
ret
das
in
dec
test
inc
mov
mov
mov
pop
sub
subl
sbb
addr16
xor
repnz
test
push
pop
push
aam
and
fs
sub
test
test
add
dec
jg
icebp
xchg
push
sub
cmp
mov
sub
push
scas
pop
stc
aas
into
mov
push
add
movsb
mov
lea
daa
out
push
jae
add
stos
or
in
cwtl
push
gs
test
testb
mov
jo
inc
or
dec
pop
push
or
popa
int
sub
xchg
sahf
lods
jg
insl
xchg
ds
fsubl
add
mov
ljmp
mov
add
fdivrs
scas
adc
imul
xchg
adc
sub
sarl
cmp
sbb
cvtpi2ps
inc
jmp
jecxz
and
xchg
daa
push
xchg
add
sbb
mov
pop
cwtl
stos
inc
imulb
divl
add
out
je
jecxz
mov
test
insb
lahf
xchg
xchg
push
cwtl
jb
dec
jns
sarl
xlat
cltd
xor
sbb
out
imul
mov
inc
ds
pop
jnp
outsb
add
xor
pop
pop
sti
loopne
sbb
cmp
test
fwait
ret
cmpsl
cmpl
cmc
mov
dec
out
ret
aas
mov
insl
jno
pop
out
xor
mov
imul
mov
mov
mov
push
pop
sahf
jp
mov
jmp
cld
jmp
dec
cltd
add
lret
adc
push
call
lods
mov
call
pop
push
jne
and
subl
js
lock
pop
fsincos
jmp
jnp
xchg
ficompl
sbb
and
test
cmp
mov
push
mov
fisubl
nop
mov
lahf
leave
test
cwtl
pop
jo
and
cmpsb
mov
movsl
aas
loope
cmp
adc
jp
sahf
xchg
std
mov
push
cmp
aad
pop
adc
pushf
pop
cwtl
fstps
xchg
sbb
mov
fwait
cmp
cmp
or
pop
xchg
and
jo
xchg
pop
dec
test
sti
sbb
or
or
out
fwait
pop
push
fisttpl
pop
pop
cmp
sub
fs
or
out
test
bound
rol
sub
insl
pop
mov
rclb
mov
cmpsl
xorl
out
and
xor
sub
cmp
cltd
xchg
xor
adc
or
test
pop
dec
cmp
mov
mov
ja
sbb
sub
insb
or
in
cmp
ss
xorb
stos
aas
xchg
sub
lods
mov
inc
mov
sbb
sub
jo
adc
aam
lcall
or
fwait
rcll
jp
fcomps
xchg
or
pop
xor
lret
xor
sbb
mov
or
sbb
jl
lcall
pop
les
aas
dec
dec
mov
cmc
jno
adc
or
push
cmp
lahf
cs
sbb
adc
cmpsb
adc
scas
cli
xor
adc
fnstenv
xchg
cmc
jmp
jb
sbb
in
pop
lock
es
push
aaa
stc
push
sbb
dec
add
cmpsb
mov
clc
outsb
jae
and
es
bts
xchg
lock
push
mov
mov
imul
lods
les
jns
cli
adc
loop
xchg
scas
adc
icebp
jle
add
test
push
lods
lahf
cmp
cwtl
pop
jmp
hlt
rcrl
mov
mov
psrld
mov
mov
push
loope
ljmp
mov
lock
pop
popf
scas
push
les
and
sbb
push
nop
jmp
add
xor
in
je
push
pop
inc
imul
xchg
jbe
add
stc
push
jnp
mov
mov
push
xor
or
inc
mov
adc
mov
and
ja
xor
mov
pop
add
js
adc
xor
push
adc
lcall
xchg
and
xchg
in
addr16
lret
mov
lcall
imul
out
inc
mov
ds
out
stos
in
adc
in
or
sbb
push
mov
mov
mov
push
mov
xchg
mov
xor
cmp
in
and
rcll
dec
dec
add
mov
push
xor
movsl
mov
outsb
push
mov
and
add
xlat
sub
outsl
out
subb
jecxz
sub
xor
faddl
jae
clc
dec
cli
sbb
test
int3
inc
pop
int
cmp
sbb
imul
adc
pop
sti
mov
mov
pusha
xchg
test
add
pop
add
sub
lea
cwtl
insl
jle
popa
push
dec
sub
aas
clc
push
pushf
xor
stos
and
cld
ss
lahf
ds
jne
ja,pt
out
out
arpl
cmp
or
sbb
pop
add
stos
sub
jne
ret
not
and
pop
test
or
xor
jge
pop
lods
sarl
outsl
xor
sbbb
sub
mov
idivb
rcr
and
mov
fs
sbb
enter
sbb
sahf
fcoms
adc
stos
daa
jno
pop
movsb
sti
push
sub
xlat
adc
cmp
adc
mov
mov
ret
inc
pop
rolb
fadd
xor
sub
pop
xor
push
lods
mov
mov
push
mov
aam
ja
dec
adc
push
push
xchg
stc
mov
add
adc
pop
sar
mov
mov
scas
sub
orb
out
clc
fs
dec
enter
sbb
bound
sub
inc
xchg
inc
ds
dec
imul
movsl
sbb
pop
aas
jne
and
loope
pop
cmp
pop
addr16
cmc
jmp
add
jecxz
inc
fwait
xor
push
scas
insb
add
xor
insl
push
lret
shll
xor
out
cmpb
les
xchg
popa
and
jg
pop
lock
dec
mov
mov
lcall
lock
test
pop
sub
cmpsb
dec
movsb
mov
std
cmp
jne
fs
dec
xchg
dec
mov
add
sub
fwait
xchg
mov
xor
sbb
dec
pop
or
mov
out
add
pop
jb
inc
andb
addb
push
xor
movsl
aaa
sbb
mov
add
and
pop
in
sub
loope
ds
xchg
mov
inc
cld
xchg
scas
sub
pusha
cmp
mov
mov
mov
push
xor
xor
sbb
push
inc
xchg
push
cmc
mov
in
rcll
jb
sti
insb
stc
inc
std
mov
cmc
fbstp
sub
mov
cmc
and
pop
stc
clc
push
gs
sti
push
les
push
fdivrp
or
inc
out
arpl
ret
sbb
mov
outsb
je
mov
loope
xchg
jecxz
nop
xchg
adc
outsb
cltd
dec
fistps
dec
xchg
popf
rorl
mov
xchg
test
mov
pop
sahf
xor
jne
add
outsb
jmp
push
adc
loop
mov
hlt
and
xchg
add
adc
cmp
call
xchg
pushf
lods
jecxz
xor
jo
sub
pop
cmp
push
outsl
add
and
sbb
js
stc
jno
dec
sub
xor
pushf
xchg
add
lret
daa
or
mov
movsb
dec
std
xchg
cwtl
push
daa
into
push
ret
or
fidivrs
int3
sbb
push
push
dec
inc
aad
arpl
fdivrl
pop
xor
sub
jmp
jl
bnd
jge
lret
or
ds
adc
fnstcw
movsb
mov
jnp
xor
adc
mov
xor
add
out
xchg
sub
sbb
and
std
in
cmpsb
add
add
pushf
or
dec
scas
clc
xor
push
test
push
push
aam
jg
test
jmp
mov
cmc
add
andb
dec
les
sahf
or
xor
subl
rorl
jecxz
fnstenv
sub
sbb
sbb
popa
xchg
addr16
sbb
sub
stos
lahf
out
test
pushf
pop
shlb
mov
pop
xchg
and
lahf
mov
subl
pop
cmp
xor
sahf
push
shlb
xchg
loope
nop
aam
fs
cmp
loope
fwait
xor
inc
das
insb
xchg
nop
aas
addb
repz
cmpsl
xor
sar
mov
mov
pop
cmpb
push
sbb
inc
lret
sub
sub
cmp
test
push
fcomi
pop
cwtl
pop
mov
adc
std
fidivrs
aas
popf
std
ss
out
out
inc
outsb
outsb
ds
push
cmp
mov
xchg
aam
shll
jecxz
test
push
mov
jl
movsb
pop
bound
mov
or
xor
cld
dec
push
mov
pop
xchg
stc
push
xor
stc
xor
stc
xor
xor
pop
cmpsl
add
pop
movsl
sbb
sub
mov
lods
adc
ficomps
inc
addr16
jecxz
xlat
and
jmp
imul
sub
mov
addr16
dec
in
xor
push
sub
aas
cmp
popf
jnp
and
push
dec
lods
bound
imul
add
push
idivb
xor
mov
push
je
and
out
or
pop
add
inc
shll
aas
out
fcompl
in
and
jge
gs
imul
sarl
sbb
or
repz
xchg
ljmp
mov
outsb
lret
addr16
mov
sysexit
xchg
mov
daa
mov
mov
add
insb
jae
xchg
iret
clc
adcl
cmc
rcrl
insb
stc
popf
arpl
jne
test
inc
fs
fldpi
dec
hlt
push
adc
movsb
mov
adc
mov
cmpxchg
jmp
jecxz
outsl
popa
push
and
repnz
and
push
sub
add
and
lds
xchg
fs
mov
ret
and
daa
bound
movntq
push
leave
cli
adc
les
outsb
lods
jo
or
pop
cmp
lahf
sbb
daa
mov
or
sahf
inc
pop
inc
mov
pusha
fnstcw
ret
out
xchg
insl
ret
inc
mov
shr
xchg
and
xor
pop
mov
call
jp
ret
mov
dec
les
mov
add
invd
cmp
lahf
and
fildl
cmp
in
iret
sub
pop
xchg
icebp
jmp
out
hlt
mov
xor
inc
ffree
orb
js
push
xchg
hlt
jb
dec
push
xlat
cmp
jge
aaa
test
outsl
inc
add
xor
mov
rcll
pop
sub
mov
or
popf
xor
mov
fsub
inc
sbb
int3
dec
dec
mov
mov
pop
sub
shrb
ljmp
inc
mov
pop
les
stc
mov
jns
sbb
add
and
dec
imul
xchg
pop
mov
push
jbe
rcr
inc
fwait
mov
adcb
jae
xor
js
cltd
out
mov
out
lret
iret
fldt
and
xchg
jbe
cltd
push
movsb
push
gs
add
cwtl
cmp
and
imul
cltd
icebp
sub
imul
sub
insl
xor
daa
cmp
add
cmp
dec
mov
out
mov
push
out
popf
xchg
or
lock
mov
mov
xor
sahf
lods
fadds
dec
inc
fcoms
pop
xchg
push
push
jbe
xor
xor
ja
pop
push
sti
push
push
pop
inc
sub
enter
cld
jb
push
test
js
dec
push
les
sub
iret
fnstsw
psllw
mov
sbb
mov
or
dec
push
popf
ljmp
inc
fwait
push
push
mov
cmp
test
xor
cwtl
xor
insb
aad
mov
dec
add
dec
outsl
cmp
loope
inc
clc
pop
inc
lcall
js
test
cld
dec
ret
fistps
std
inc
pusha
or
add
add
xchg
into
stc
sbbl
mov
xor
pusha
pushf
js
adc
pop
stos
xchg
or
stos
iret
push
xor
lret
sarl
je
jmp
sub
arpl
and
lock
sub
jb
js
out
arpl
sub
push
into
fs
push
xchg
outsb
and
add
insl
push
pop
cmpb
lock
sub
shrl
mov
lods
adc
stos
xor
jae
in
insb
inc
cli
daa
stos
es
ficoml
or
mov
pop
fisttpll
icebp
iret
popa
xchg
mov
cld
dec
jns
cmc
cmp
add
popf
ret
jl
movsb
push
js
jmp
jbe
lea
jnp
scas
pop
push
xor
test
lods
mov
pop
push
adcl
mov
push
mov
testl
inc
lahf
adc
in
sbb
xchg
xchg
fistps
lds
jb
mov
sbb
lret
dec
add
cmpl
mov
mov
xor
into
adc
mov
loope
imul
push
bnd
push
nop
sahf
insl
insb
sub
push
mov
sbb
adc
iret
mov
aaa
xor
je
lgs
roll
sbb
mov
aaa
cltd
mov
mov
call
fimull
push
lock
or
lahf
add
xchg
fstl
jno
lods
or
xor
gs
test
mov
or
lods
and
pop
pop
xlat
imul
daa
pop
mov
sub
sahf
xchg
notb
pop
aas
in
nop
in
and
bound
add
ljmp
xchg
or
aaa
inc
ret
ds
pop
insl
add
push
scas
or
icebp
fiaddl
jb
ret
aam
je
lcall
mov
or
mov
test
fistpl
inc
sbb
push
sub
cmpsl
mov
cmpsb
push
fistps
cwtl
int3
mov
cmc
pop
fs
mov
in
jns
scas
fdivrl
xlat
sub
ds
ret
fbld
dec
sahf
mov
and
push
popf
andl
xchg
adc
arpl
shrb
lret
inc
pusha
and
or
jo
push
inc
or
xor
aad
jnp
mov
data16
and
mov
sub
xchg
pop
xchg
lret
xor
inc
dec
pop
add
sbb
mov
xchg
mov
pusha
int
xor
je
fiaddl
inc
call
js
fcoms
pop
add
dec
movsb
push
sbb
stc
add
jae
loop
pop
or
lret
jns
shlb
cmc
fcomp
dec
test
push
pop
in
xor
or
push
pop
sub
in
sbb
xor
movsl
stos
stc
and
outsb
lock
outsb
std
orb
mov
sti
outsl
sbb
push
aad
push
je
add
shr
cld
das
hlt
pushf
pop
pop
test
push
sbb
and
xchg
lahf
mov
jnp
lods
adc
lock
in
dec
std
xor
addr16
push
lds
sti
and
sub
cmpsb
cmp
inc
add
mov
out
mov
xor
sbb
std
ret
leave
dec
push
popf
pop
or
adc
les
cmp
mov
jle
mov
js
fcompl
outsb
faddl
inc
pop
insb
cmc
cltd
std
mov
fcomps
aaa
jne
lahf
cld
bnd
lret
xchg
les
pop
repnz
mov
andnps
mov
fs
enter
adc
ficoms
insb
jbe
push
gs
ficompl
mov
mov
add
dec
in
mov
cs
xchg
push
sub
rcll
pop
fldl
jp
insb
push
sarb
add
xlat
push
mov
pusha
sbb
cltd
clc
inc
in
or
loope
dec
or
dec
fiadds
pop
inc
addr16
xchg
mov
push
ds
or
and
arpl
cmp
mov
stc
test
cwtl
add
sar
sbb
push
sti
cmp
stos
insl
jns
ds
cltd
pop
and
aam
add
ja
xchg
lds
push
cmp
and
dec
sbb
gs
xor
scas
inc
out
into
sub
add
xor
mov
cmpsl
inc
in
aaa
xchg
xchg
adc
inc
int
movsl
and
and
ret
sub
popf
call
push
dec
jp
adc
clc
inc
repz
xchg
dec
shrl
faddp
add
mov
add
inc
std
fsts
addr16
insb
sub
pop
nop
sub
add
test
aas
mov
inc
int
push
je
lods
jle
gs
ljmp
add
mov
fidivs
xorl
in
xchg
inc
cmp
or
aaa
adc
jg
sbb
popa
sbb
adc
mov
jmp
fldcw
xchg
pop
bswap
and
xchg
xor
inc
lods
into
jbe
nop
and
push
dec
daa
add
dec
inc
dec
dec
xor
mov
add
mov
mov
je
gs
divl
lods
popf
and
aas
push
lods
aam
fisttps
daa
sub
and
pushf
and
fmull
data16
jb
aam
xor
jmp
jg
rcll
push
in
dec
cmp
or
mov
push
xlat
jne
mov
icebp
cmp
add
loop
leave
imul
or
inc
subb
push
jecxz
push
orb
lea
sbb
xorl
mov
std
test
xorb
push
mov
cwtl
pop
jge
movsb
ficompl
push
xor
jg
xchg
push
inc
sbb
mov
stc
fs
xchg
nop
pop
xchg
arpl
mov
cmp
fadds
adc
jp
int
push
xchg
orb
push
mov
pop
jo
adc
addb
push
stc
pop
jo
xchg
jge
cmc
xor
push
dec
popf
jge
test
daa
pop
mov
cmp
cmp
adc
mov
push
add
ss
add
or
aas
sub
xor
int3
je
sbb
jne
adc
addl
loope
inc
sti
sub
movsb
lods
push
mov
cmpsl
pop
xchg
dec
push
inc
inc
lahf
sub
mov
and
rcrb
pop
or
adc
mov
movsb
inc
enter
jbe
or
fistps
add
aas
fidivl
sbb
add
and
mov
addl
dec
test
inc
fs
jmp
add
int
pop
shrl
mov
in
mov
movsl
sub
mov
push
jae
shlb
inc
sahf
arpl
jb
dec
mov
mov
jo
mov
pop
inc
fnstcw
stc
jnp
add
clc
pop
test
cltd
repnz
mov
dec
lock
lods
inc
xchg
mov
gs
push
inc
fdivrs
mov
jb
jbe
mov
push
es
xlat
in
push
test
es
fcmovne
icebp
push
adc
xchg
or
aas
sub
jmp
and
add
jo
dec
sahf
xlat
lahf
pop
out
or
popf
lds
pop
dec
mov
sbb
pusha
inc
xor
sahf
mov
sahf
loop
and
add
orl
sbb
cmp
sub
outsb
xchg
shlb
data16
cli
jnp
sub
add
test
or
mov
pop
jbe
ss
xchg
or
push
lret
les
sarl
dec
iret
shlb
into
sahf
xchg
dec
pushf
daa
lods
push
xor
iret
das
cmpsb
jecxz
xchg
add
cld
movsb
shlb
call
iret
push
out
ds
dec
in
adc
in
or
pop
push
pop
jmp
enter
xor
mov
iret
jge
fs
cmp
imul
ret
sbb
sbb
mov
outsl
sbb
es
fbld
in
aam
lret
insb
ret
shll
adc
aam
mov
iret
sub
icebp
inc
aaa
loop
lds
sti
inc
inc
mov
stos
xor
or
shl
fs
lcall
ret
andb
int3
add
cmp
jo
xor
pop
add
out
test
into
xchg
stos
mov
jmp
imul
js
inc
hlt
scas
jecxz
or
sbb
insb
xor
push
or
mov
pop
jmp
push
aad
jl
push
lea
sahf
sub
pop
and
push
mov
testl
mov
or
rcrl
mov
or
cmp
dec
js
ficompl
sarb
aaa
dec
cmp
bound
mov
pushf
inc
xor
or
sti
push
insb
or
mov
faddl
push
mov
scas
pop
fistpll
dec
jg
in
inc
movsl
mov
mov
fst
and
ss
xchg
add
jle
sub
jns
inc
repnz
jae
inc
add
das
push
xor
lret
or
add
out
dec
xchg
sub
shlb
dec
hlt
lret
adc
pop
sub
dec
cmp
int
pop
mov
sub
inc
xorl
xchg
jae
and
and
mov
jp
dec
lcall
mov
daa
addr16
push
inc
cwtl
mov
ret
mov
push
cli
ss
xchg
dec
mov
add
pop
fidivl
shll
jnp
divb
xor
add
bound
pushf
push
mov
mov
test
add
cmpsb
dec
lea
sahf
lahf
stos
push
or
or
add
push
cwtl
xor
lcall
enter
mov
mov
test
sbb
inc
add
mov
repnz
mov
addl
sbb
xchg
cmpsb
ja
addr16
sbb
test
dec
jbe
popf
cs
loop
into
inc
lds
arpl
pop
in
add
fs
sbb
into
sbb
adc
add
sub
pop
xor
into
imul
jle,pt
js
popa
xchg
pop
push
mulb
or
cmpsl
leave
push
xor
fimuls
add
xchg
rorb
mov
iret
mov
jge
aam
sarl
enter
xchg
mov
js
and
lahf
mov
lcall
xchg
sbb
and
sub
shl
or
sahf
pop
jns
iret
cmpsl
dec
into
mov
dec
movsl
popa
xor
xor
enter
bound
and
mov
sbb
les
das
push
enter
pushf
mov
sahf
daa
rcrb
jne
mov
fnstsw
jmp
cmp
mov
sub
bound
and
adc
add
pushf
shll
dec
rcrl
insl
xor
in
loope
rolb
push
add
adc
insb
cmpsb
xor
jno
enter
ret
pop
imul
outsb
sbb
pop
imul
es
cld
cmpb
pushl
sbb
shlb
mov
pop
mov
add
sub
popf
pop
mov
add
ja
lret
popf
cwtl
pop
and
adc
popf
ljmp
es
cmc
sub
cltd
and
mov
popf
fs
mov
hlt
aad
mov
lea
push
std
cltd
pop
imul
add
cwtl
jnp
and
pop
dec
loopne
testl
add
sub
mov
es
cmp
out
adc
fldl
cmp
dec
out
xor
lods
mov
pop
sub
mov
dec
inc
mov
clc
insl
jne
test
and
cmpsb
loop
ret
movsl
sahf
xchg
ret
pop
mov
jae
fmulp
xor
mov
adc
imul
nop
jne
in
pop
jmp
cmp
scas
push
lret
fwait
pop
inc
inc
je
aaa
pop
ds
addr16
fsubr
out
fistl
cmp
cmp
movsb
dec
pop
in
mov
jo
jle
sbb
scas
push
sti
call
pop
lcall
xchg
sbbb
movsl
lcall
cmp
cwtl
cmp
jmp
out
in
fwait
mov
inc
jle
add
nop
loop
popf
lcall
xchg
mov
push
mov
call
or
push
adc
jg
clc
push
in
repz
sub
fbld
xor
je
pop
xchg
cmp
sbb
test
pop
gs
enter
stos
das
rcr
lods
aas
rorb
jnp
adc
cli
add
pop
lret
testb
or
xor
pop
pop
nopl
mov
push
or
dec
and
aam
jns
stos
push
loope
mov
add
addr16
mov
xchg
aaa
inc
adc
cmpsl
sti
enter
lret
leave
adc
lret
mov
push
sbb
inc
sti
push
sbb
mov
lea
pop
mov
lods
repz
in
inc
add
inc
and
ja
jle
testb
sbb
das
fbld
cmpsb
aam
push
sbb
fsubl
inc
lock
int
cmovnp
sti
in
je
cltd
mov
inc
stos
pusha
jns
aam
movsb
or
pop
xchg
std
pop
ja
push
sahf
mov
sub
jnp
fnstenv
das
mov
les
cli
sub
mov
sbbb
inc
mov
subl
bound
adc
xchg
aad
sub
psllq
ret
les
lods
orb
je
xlat
fists
fcoml
testl
jmp
sbb
ret
xchg
sbb
mov
std
jmp
dec
insl
cwtl
sbb
cld
mov
adcl
pop
fcoml
stc
mov
push
jge
push
add
pop
push
aam
bound
add
sbb
cmpsb
jnp
push
xchg
dec
sub
pop
mov
ret
movsb
push
and
insl
jle
lcall
jle
add
dec
xor
mov
sub
mov
push
addr16
jle
rcr
rorb
ljmp
les
push
stc
cmp
dec
fsubr
mov
sbb
sub
jns
dec
pushf
leave
fidivrs
sbb
push
incb
fstpl
int
inc
pop
inc
incb
ret
mov
xlat
xchg
scas
ljmp
cld
xchg
adc
leave
repnz
cs
xor
add
adc
test
xchg
fsubs
mov
adc
push
daa
fistpl
enter
add
ljmp
xchg
lea
sbb
dec
sbb
sub
jp
or
sbb
into
fstpl
js
sbb
test
cmp
ljmp
add
pop
enter
inc
popa
test
repz
xor
sbb
or
xor
ds
cmpl
call
test
add
push
jnp
ret
xor
into
xchg
jle
cmc
xor
ds
cltd
push
xchg
and
push
data16
out
int3
popf
nop
sbbb
inc
pop
out
stos
add
enter
add
aam
adc
push
fistl
pushf
xor
adc
adc
cwtl
lcall
orb
push
pop
into
ljmp
add
out
xor
sbb
insl
jg
or
pop
pop
jnp
divb
fwait
mov
add
cmp
test
nop
hlt
sar
mov
jg
orl
jge
sbb
inc
aaa
data16
andl
data16
push
outsl
fstps
enter
mov
xor
pop
mov
sub
xchg
es
push
test
jg
add
fcompl
sbb
nop
out
mov
pusha
add
push
add
xor
add
xor
push
testb
sbb
mov
pop
add
xchg
xor
xor
push
jb
push
pop
or
test
out
xor
faddl
add
add
push
jae
mov
in
aad
sbb
scas
enter
fimull
mov
aaa
push
push
enter
lret
ds
pop
cmp
cmp
fisubs
dec
dec
jbe
jb
adc
push
adc
sbb
popa
adc
add
fs
add
mov
imul
inc
and
jbe
daa
mov
cmp
fstl
cli
cmp
adc
mov
pop
adc
pop
and
pusha
xor
push
andb
gs
or
pop
lret
add
mov
add
lea
das
mov
jp
rorb
mov
cmp
pop
cltd
sbb
add
sbb
addr16
es
lahf
mov
cmc
outsl
pop
push
fxch
sbb
mov
cwtl
cwtl
lods
jnp
sub
xchg
lcall
pop
orl
push
dec
out
data16
test
mov
test
push
sub
sahf
pop
sub
in
dec
cltd
mov
push
cltd
mov
push
mov
lret
aad
add
pop
push
push
cmpsb
call
push
xor
cmp
jnp
je
xor
ds
cwtl
and
add
scas
xchg
xor
xor
add
mov
incl
mov
mov
leave
push
mov
adc
add
sbb
cwtl
sbb
scas
adc
xchg
jbe
adc
adc
sbb
sub
inc
push
in
cwtl
mov
js
sbb
out
add
aam
sbb
mov
sbb
sub
add
movsl
int3
mov
js
push
sbb
mov
fcompl
add
and
mov
jg
push
adc
pop
sbb
fistl
sbb
gs
movsl
mov
sub
and
add
push
xor
xor
mov
jg
ss
loopne
movsb
fs
push
lods
movsl
xor
lods
push
mov
inc
cld
cli
bound
adc
sbb
or
inc
lock
jle
xchg
bound
js
sbbb
data16
scas
das
xor
enter
or
xchg
cmp
popf
loope
and
adc
push
sahf
pop
xor
aaa
jns
and
outsl
enter
lock
xchg
pusha
xor
stos
xor
fmul
int3
xor
sbb
rorl
xchg
lods
push
sbb
out
inc
cmp
sbb
sbb
inc
hlt
sbb
cmp
add
xor
jbe
fldenv
call
pushf
push
fs
adc
fistps
sarl
rolw
data16
bound
adc
je
adc
mov
cmp
sub
fsubp
push
loop
dec
xchg
addr16
mov
sbb
sahf
orb
sub
mov
cmp
mov
or
and
divb
sbb
or
pop
int3
fsubrs
cmp
dec
gs
mov
cmpsl
mov
sbb
jno
popl
xchg
add
mov
sbb
xor
dec
add
outsb
sbb
adc
lock
ss
lahf
dec
push
push
inc
popa
call
hlt
xchg
or
lahf
or
js
test
push
sahf
rclb
cmp
sarb
add
lea
ror
daa
jl
clc
ss
nop
mov
inc
jae
pop
rcr
or
sbb
popf
adc
sbb
into
cwtl
es
xchg
fdivrl
cmp
add
cmp
out
fsubrl
jns
cmc
dec
sub
ss
jo
movsl
sbb
aad
mov
mov
pop
pop
faddl
cmp
lret
pop
sbb
insl
int
push
loope
fsubs
pushl
cmp
sub
jecxz,pn
int3
arpl
cmp
mov
mov
fs
pop
push
imul
je
xor
in
lret
gs
popa
es
jg
xor
jle
fstl
inc
push
fnstenv
push
in
icebp
dec
in
pop
sbb
cmp
lcall
pop
jg
xor
jge
bound
repz
or
mov
popa
inc
adc
xor
sar
pop
addr16
jle
lret
sub
jae
in
mov
out
or
sub
add
adcl
in
inc
pop
clc
push
lods
mov
bound
lods
adc
cmp
jnp
mov
loopne
shll
enter
lret
jnp
pushf
adc
push
jl
jge
lret
mov
clc
xchg
int
or
jo
ss
in
out
in
or
cld
std
test
add
bound
int
sti
dec
and
stc
cwtl
mov
jo
and
ss
ret
movsb
dec
and
popa
inc
pop
jp
loop
aas
gs
push
mov
bound
mov
xor
cmp
jnp
push
clc
fisubrl
pop
xor
jp
pushf
push
xor
sahf
mov
clc
cwtl
imul
adc
outsb
sbb
ret
push
in
jle
jns
pushf
mov
push
popa
ret
insb
lods
in
ja
mov
sub
jp
push
add
shll
fucomi
add
ds
push
outsb
push
jecxz,pn
and
mov
inc
push
in
in
leave
add
pop
jg
push
jmp
pop
imul
jns
je
xor
cmp
inc
sub
push
inc
inc
sahf
sbb
dec
sbb
sub
and
push
pop
add
adc
lods
inc
inc
es
pop
xchg
jl
pop
rolb
clc
clc
adc
or
loop
push
xor
inc
push
leave
mov
and
fdivp
rol
jbe
cwtl
mov
ret
sti
or
mov
fisubrl
push
mov
cmpsb
cmp
xor
imul
dec
or
fdivrs
cli
adc
xor
lods
jmp
mov
xchg
xor
and
xchg
xor
inc
cmp
ret
mov
mov
mov
rcrb
arpl
in
lds
jge
sarb
mov
cli
scas
stos
cld
push
gs
aam
dec
sub
int3
push
lcall
pop
fldt
or
cmp
and
call
pop
ja
sub
pop
xor
cld
mov
shll
dec
pop
jbe
xchg
dec
cli
adc
adc
ljmp
stos
xchg
out
cs
inc
add
das
mov
int3
mov
inc
xchg
mov
cmpsb
mov
pop
xchg
dec
out
add
out
adc
inc
fstpl
jg
xchg
jnp
ljmp
mov
xchg
mov
stos
xor
push
ds
dec
je
mov
push
test
pop
inc
add
js
ja
fisttpl
imul
hlt
shrb
xor
and
jne
outsb
add
mov
fs
jae
sub
or
adc
push
mov
jbe
fmuls
cmp
xchg
sub
jb
gs
adc
mov
xchg
inc
lcall
mov
xor
jbe
xchg
jns
jecxz
in
push
inc
mov
fidivl
jecxz
aam
sbb
into
ffreep
jle
insb
mov
add
movl
push
das
and
jl
mov
jecxz
dec
xor
int
mov
dec
les
xorb
in
movsb
loop
ret
xor
push
loop
xlat
jmp
sbb
push
pop
pop
loopne
inc
inc
dec
inc
je
cwtl
sbb
or
mov
std
aad
mov
cmp
pop
jb
adc
cmp
mov
pop
jns
push
and
pusha
lret
roll
imul
fdivr
cmp
fisubrs
ds
fstpt
sbb
mov
es
pop
mov
test
pop
das
inc
adc
enter
inc
ja
cmp
add
jmp
fiaddl
cmp
lods
std
jo
iret
push
ret
add
lock
pop
add
add
inc
faddl
inc
adc
nop
pop
xorb
xchg
aad
adc
jns
mov
add
imul
add
and
mov
daa
jb
mov
cmpsb
push
push
hlt
int
push
add
jg
cmpsl
xor
push
movsl
lahf
js
pop
inc
xor
test
test
les
pop
loope
jg
sbb
jg
popa
imul
adc
push
push
pop
mov
aas
jnp
je
xor
xchg
test
add
lea
add
push
jecxz
rep
nop
add
scas
xchg
loop
lods
xchg
adc
xor
fcoms
shll
pop
pushf
pop
test
mov
popf
push
insb
mov
and
inc
jbe
mov
and
mov
loope
xor
lods
jb
pop
lods
pop
xchg
fmulp
repz
dec
jno
test
enter
loope
aas
dec
xchg
popf
mov
call
and
adc
inc
push
pop
cmc
jb
in
sub
daa
push
incl
and
mov
inc
jne
das
shll
pop
pop
stc
sbb
mov
push
push
int
movsb
dec
jmp
imul
jae
inc
push
mov
mov
mov
pop
das
loop
xchg
adc
sub
add
shll
je
cmp
pop
jbe
mov
les
push
push
push
add
mov
mov
mov
sub
push
mov
stc
test
mov
xchg
loop
sub
pop
add
into
in
popa
mov
inc
and
inc
adc
dec
inc
int
inc
sahf
mul
pushf
and
xor
mov
mov
dec
xor
push
push
mov
inc
les
cmp
sbbl
inc
xor
mov
js
sbb
and
mov
dec
into
les
scas
pop
push
aas
sbb
push
jge
out
sarb
sub
sbb
sbb
pop
cli
dec
cmp
iret
shll
call
sub
lods
adc
adc
fstps
jbe
pushf
push
scas
pop
nop
fcmovu
cwtl
out
push
fldenv
pop
mov
mov
add
xlat
push
sbbb
push
and
inc
mov
xor
xchg
or
inc
adc
loop
lock
inc
pop
inc
bound
mov
sbb
xchg
ljmp
aam
and
sbb
out
push
cmp
jp
and
add
and
dec
mov
jle
movsb
adc
insb
lock
mov
pop
push
aam
test
cmp
cmp
je
mov
jnp
jno
popa
shr
cs
ja
jge
frstor
hlt
arpl
cmpsb
xchg
mov
cmc
sub
insl
mov
mov
sbb
bound
jns
add
imul
in
je
outsb
aam
pushf
adc
mov
push
cmp
inc
out
pop
sub
in
js
push
pop
bound
adc
stc
jns
and
lahf
jl
addb
shlb
or
roll
xor
and
popa
stc
pop
or
and
pushf
push
add
into
fisttpl
mov
and
leave
and
pop
mov
and
aad
add
and
test
jle
fimull
cwtl
test
add
push
mov
add
push
push
jl
imul
sbb
andl
push
adc
cmp
ret
xor
ficoml
and
pop
push
outsb
mov
nop
int
pop
and
cmp
pop
xor
pushf
out
outsb
mov
inc
ja
and
push
test
inc
inc
aad
loop
rorl
ficoml
xchg
mov
mov
mov
mov
mov
fimull
stos
call
cld
sub
or
xchg
test
nop
jo
mov
push
pop
add
js
test
int
mov
cmp
jno
pop
sbb
and
mov
movsb
enter
add
mov
repnz
imul
enter
dec
xchg
dec
shrb
mov
insb
xchg
stos
into
je
rorb
mov
cmpsl
fcmovu
pop
fadd
inc
inc
sahf
iret
mov
cld
enter
push
ficomps
push
add
cmpsl
xchg
sbb
mov
shrl
std
pop
cmpl
jle
repz
pusha
out
dec
pop
test
jb
nop
add
test
push
push
push
xchg
sub
adc
rclb
jle
push
dec
jle
loope
loopne
push
sub
ds
popf
adc
notb
outsl
mov
es
mov
imul
jle
outsb
jl
lods
push
jno
and
sub
pop
sbb
jne
jg
jle
cmp
fsubs
cmpsl
jle
cmp
add
jp
mov
sub
enter
fcoml
inc
outsb
jne
mov
cli
imul
out
jecxz
cli
imul
add
add
fidivrs
inc
sub
cmp
cmc
xchg
sub
or
add
xor
incb
mov
sti
ljmp
test
int
jecxz
jg
insl
pushf
loope
out
dec
in
cmp
pop
push
fisubrs
inc
ret
xchg
push
mov
imul
jl
call
test
jg
inc
cld
data16
jl
xor
test
aas
ljmp
mov
dec
adc
addr16
subb
adcl
or
and
fistl
cltd
fidivrs
fstl
pop
cmp
lods
pop
inc
shr
push
inc
inc
dec
gs
push
bound
mov
push
adc
fisubs
lds
pushf
mov
cmp
lret
pop
inc
pop
sahf
push
and
add
lret
inc
cmp
mov
adc
in
fwait
sbb
mov
mov
scas
mov
xor
add
pop
js
xor
cmp
out
mov
mov
or
add
push
xchg
shlb
push
cmp
add
or
repz
leave
jecxz
xor
sbb
sbb
sti
int
xor
cmpsb
jne
cmpsb
sbb
xchg
jg
adc
mov
pop
sbb
mov
clc
sbb
push
push
cmp
fsubrs
pop
inc
xorl
mov
dec
sub
xor
push
lods
mov
xchg
cltd
mov
rcr
sbb
sub
xorl
movsl
jecxz
add
lods
les
cmpsb
pushf
jne
mov
popf
cmpsl
pusha
mov
enter
subb
ss
popf
insl
push
adc
movsl
mov
insb
aam
fimull
fcoml
or
and
push
mov
inc
ret
add
aam
push
sbb
cmpsb
sahf
int
test
leave
xor
mov
call
or
sub
call
aad
std
out
scas
sbb
mov
or
xchg
cmp
add
lods
push
add
cwtl
push
mov
addr16
add
xor
enter
jl
leave
cmp
push
mov
cmp
je
push
nop
jle
mov
cwtl
push
popf
sub
jae
js
fdivrl
or
jno
mov
and
mov
loop
xor
push
sbb
aam
call
lods
data16
cmp
push
fcomps
inc
push
pusha
sbb
cltd
add
mov
jo
test
andb
mov
xor
adc
fbstp
les
mov
push
lahf
adc
add
rolb
imul
push
jb
and
ss
push
add
outsl
push
movsb
test
nopl
in
dec
or
call
outsb
iret
fsubp
test
out
in
push
icebp
cmc
clc
mov
jmp
aam
dec
xor
jne
push
fadd
or
jle
push
xor
cltd
xchg
push
mov
stc
nopl
cmp
xchg
ljmp
andl
add
aas
pop
test
inc
sbb
xchg
jns
ljmp
jne
mov
movsl
mull
add
mov
scas
dec
rcl
or
adc
xor
or
fstps
inc
pop
push
xchg
repnz
scas
push
push
mov
andl
stc
adc
mov
es
adc
data16
pop
xchg
xor
lods
out
mov
icebp
sbb
jle
add
into
lods
xchg
fistpll
jo
daa
mov
loop,pn
add
cmpsb
xor
or
adc
push
inc
nop
push
pop
or
mov
jnp
xchg
fcmovnb
cwtl
or
add
dec
les
sbb
fdivl
push
sbb
mov
ja
jb
mov
int
cmp
push
add
cmp
cld
and
rcr
aas
dec
lcall
push
sarl
shll
push
and
sub
xchg
rolb
js
add
adc
inc
and
jmpw
inc
rclb
mov
sarl
filds
int
sbb
test
and
les
test
hlt
push
mov
cmc
dec
fs
pop
add
mov
xor
jl
push
and
cmp
pop
add
and
nop
push
fsubrp
loop
aaa
and
fsubrp
mov
xor
fidivrs
lret
push
pushf
pop
repnz
in
insl
push
mov
push
orb
adc
xchg
push
add
jecxz
pop
xor
mov
cmp
pop
dec
dec
sub
aas
push
aad
fnstenv
xor
dec
push
pop
test
std
fwait
adc
lods
mov
faddp
repz
xlat
mov
mov
divb
movsb
jge
adc
sbb
out
mov
and
and
pushf
nop
in
lock
scas
rorl
xor
jl
fs
ja
mov
mov
cmpsb
sbb
sbb
mov
sbb
push
mov
lea
int3
rorb
mov
pop
int3
mov
dec
rcll
lea
call
jno
push
xlat
mov
xchg
fsubrs
sub
call
add
loop
ljmp
mov
xchg
inc
mov
mov
add
gs
jae
mov
xchg
pop
lret
je
push
pop
or
ss
xlat
push
flds
jp
outsb
mov
repnz
mov
cmpsl
jnp
push
cmp
icebp
ret
loopne
lret
hlt
dec
addl
mov
les
je
mov
outsb
mov
xchg
or
or
ds
lods
push
or
data16
cmp
clc
js
int
popf
pop
insb
mov
ja
push
ret
xchg
idiv
insl
xchg
call
cld
dec
out
cmc
jl
lret
insb
insb
imul
rolb
cmpsl
inc
cmp
stc
pushf
cmp
push
xor
pop
mov
inc
aam
xor
mov
xchg
push
cmp
repz
push
das
shl
dec
scas
fdiv
pop
mov
xchg
mov
cmpsl
add
push
fimull
pop
cmp
mov
cmp
sahf
orps
popf
sbb
inc
daa
lcall
dec
xchg
jl
push
pop
inc
cmp
popa
pop
pop
push
cs
sub
sub
or
fcom
leave
sbb
jge
mov
pop
push
xlat
ja
add
inc
scas
fmulp
dec
fcmove
push
push
stc
inc
cmc
mov
and
inc
cmp
push
push
sbb
cmp
sbb
dec
test
jns
xor
dec
sarb
xor
fisttpl
mov
dec
out
sti
pop
xchg
mov
and
stc
cmpsb
fidivl
leave
mov
or
sahf
insb
push
int
shl
rorl
out
adc
cmp
mov
inc
mov
leave
pop
sub
insb
lock
pop
xlat
inc
loop
rorl
fistpll
xor
test
jb
lock
pushf
in
inc
out
xor
xor
push
ds
mov
jl
ret
xchg
push
push
lds
adc
rcr
or
ret
mov
stos
out
lahf
sbb
push
test
push
clc
lret
xchg
es
test
mov
outsb
orb
sub
push
insb
or
shrl
jns
lods
nop
mov
push
sub
je
ss
js
testb
cmp
mov
andl
xor
iret
mov
popa
lods
mov
inc
xor
push
jne
add
bound
mov
pop
mov
test
aaa
sbb
sahf
arpl
testb
mov
push
xor
pop
push
cmp
aas
pop
std
out
adc
and
jne
sub
mov
cmp
sbb
inc
sub
scas
push
jo
sbb
pop
clc
ffreep
and
mov
je
pop
fistps
movsb
mov
xor
sub
inc
mov
mov
mov
ja
pop
adc
cmp
and
mov
pop
or
xchg
jmp
in
ss
push
jmp
mov
dec
rcrl
ds
xchg
jo
mov
stos
imul
jmp
loope
dec
push
test
sahf
inc
pop
mov
int3
inc
and
lret
jne
inc
fidivl
mov
or
lods
pusha
or
push
add
orl
pop
jns
stc
jl
scas
rorb
xchg
xchg
inc
xchg
inc
pop
fildll
test
cltd
insb
mov
mov
sub
dec
out
sbbb
mov
dec
repnz
or
dec
jle
orl
bound
pop
fs
test
push
xchg
out
test
popa
faddp
pop
lea
dec
shrb
fmuls
sub
adc
xchg
push
dec
jb
call
cwtl
je
loopne
lock
aad
and
adc
mov
jno
call
popa
jl
in
nop
push
and
das
push
push
mov
jbe
inc
mov
cmp
insl
inc
adc
xlat
sub
loopne
mov
sti
sbb
mov
jbe
scas
jne
jae
test
rcll
je
xchg
clc
aaa
out
js
sbb
adc
push
outsb
jne
cmp
xor
jb
test
mov
xchg
or
pop
out
xchg
mov
insl
adc
lcall
incb
out
jnp
notl
movsb
scas
leave
xchg
dec
mov
fistpll
cmp
ja
push
xchg
mov
sbbl
pusha
cmp
push
repnz
jae
cwtl
pop
mov
testb
pop
mov
add
nop
int
jbe
in
mov
cmp
inc
mov
push
in
mov
mov
dec
rcll
icebp
inc
fldenv
nop
pop
inc
cmpsb
add
xchg
addr16
jbe
test
xchg
xor
jle
xor
adc
lods
dec
lods
xorb
test
clc
dec
xor
and
sti
dec
sbb
lock
mov
xcrypt-cfb
cmpsl
mov
dec
je
es
outsb
test
and
mov
repnz
inc
es
xchg
jle
lret
flds
addr16
inc
ret
std
inc
xor
add
jb
fwait
or
inc
lods
ss
mov
sub
push
adc
xor
or
mov
mov
xor
push
int3
dec
repz
repnz
out
nop
push
iret
ret
ds
xchg
sbb
gs
daa
sbb
addl
fldcw
sub
pop
test
add
cltd
pop
cmpsl
dec
adc
add
in
mov
jle
andb
mov
mov
loopne
mov
lds
nop
shr
fists
xchg
cmpsb
rcll
jge
push
hlt
add
cmp
scas
imul
jg
push
stos
in
nop
outsl
push
and
pushf
stos
or
int
push
inc
adc
cli
mov
mov
adc
jl
ret
jp
mov
fnop
cld
push
mov
loope
adc
add
orl
or
xor
mov
push
pop
push
and
cmpsb
push
push
popf
jnp
cmpsl
scas
stos
les
test
pop
mov
stos
shll
vphaddubd
fst
jne
xchg
inc
mov
fidivs
pusha
xor
xchg
push
xor
enter
xchg
fimuls
dec
xorl
pushf
fs
clc
or
dec
fcoml
push
ss
out
lahf
and
push
jne
fcompl
arpl
cmp
cmp
xchg
sahf
push
bound
pop
mov
jnp
xchg
add
or
dec
pop
jo
arpl
nop
outsb
cmp
xchg
cmpb
cmp
hlt
outsl
movsl
popf
xchg
imul
jecxz
mov
lock
std
mov
loop
pop
inc
jbe
icebp
inc
testb
dec
jl
jp
lods
in
das
mov
dec
sub
mov
sub
iret
divb
shrl
sbb
mov
lods
test
push
adc
imul
pop
dec
ds
fwait
pop
das
adc
inc
pop
xchg
inc
inc
inc
push
inc
dec
dec
xor
dec
pop
inc
in
inc
xorb
sbb
int3
add
sub
lock
roll
mov
sbb
xchg
push
test
inc
push
cmp
bound
fiadds
sub
ds
cmp
jle
dec
xor
adc
mov
adc
lods
mov
fsubrs
xchg
lcall
jb
pop
out
inc
push
or
xchg
loope
mov
sbb
lock
push
dec
sub
dec
xor
pop
cmp
push
nop
sub
push
adc
sub
int
xor
ljmp
xchg
gs
mov
and
mov
xor
inc
leave
insb
inc
mov
test
aaa
cwtl
sbbb
mov
pop
cmc
add
or
fisttpl
loope
pop
jo
insb
sub
sbb
fs
movsl
insb
ss
pop
or
pop
cld
mov
test
cld
ret
or
xor
insl
xor
imul
sbb
nop
mov
xchg
mov
clc
inc
and
and
push
push
fs
jo
adc
mov
insb
mov
clc
mov
sbb
mov
jge
movsl
jecxz
les
dec
sbb
xchg
shl
shl
sbbb
imul
jp
xor
aad
fistl
adc
xor
call
pop
enter
jbe
or
ja
aam
cmc
mov
repnz
inc
xor
and
inc
bound
jo
cltd
mov
cmp
pop
rol
adc
aaa
fcoms
push
shlb
shrb
loope
push
mov
lcall
int
xchg
loopne
push
push
or
aas
adc
push
push
call
push
icebp
lds
pushf
pop
or
pop
nop
inc
mov
mov
mov
cmp
lahf
xor
xchg
shll
xor
jne
jne
adc
enter
xchg
sarb
cld
movl
xlat
cld
mov
cli
fistps
rorb
divb
lods
shll
mov
cld
addl
fmull
insb
outsl
sbb
push
or
lret
jecxz
data16
imul
pop
js
ret
sbb
mov
shlb
adc
push
lret
hlt
test
repnz
push
test
out
cltd
inc
fisubrl
dec
movsl
jle
and
imul
sbbb
cltd
paddsb
adc
cmp
out
sbb
lods
and
pop
arpl
xchg
lret
push
add
repz
mov
dec
pop
iret
outsl
in
jg
je
xchg
cmp
lds
dec
sub
nop
pop
stos
in
lods
cwtl
dec
sbb
xchg
jmp
adc
mov
leave
jecxz
adc
stc
and
mov
xchg
sbb
or
negl
mov
mov
push
inc
pop
les
adc
clc
aas
mov
cld
inc
mov
adc
adc
push
and
sbb
sahf
adc
movsb
xchg
dec
imul
movsl
mov
mov
lahf
movsb
mov
ret
push
xor
inc
popf
adc
es
xchg
dec
push
les
cmp
aas
mov
nop
add
sbb
push
dec
rorb
xor
fdivl
add
jmp
rclb
jg
lds
sub
or
clc
inc
mov
dec
xchg
into
xchg
push
fadd
mov
adc
push
pcmpeqd
cmpsb
mov
cmp
andb
dec
xchg
into
je
push
or
xchg
lods
les
dec
repz
cmpsb
mulb
mov
lahf
aam
mov
out
mov
sub
iret
inc
mov
push
add
test
ss
inc
popf
roll
testl
mov
addl
push
and
test
or
mov
sbb
fistl
xor
iret
add
test
cs
or
adc
push
inc
cmp
push
pop
xor
div
imul
sub
sub
mov
in
repz
lret
icebp
or
mov
movsb
dec
addb
mov
sbb
imul
cmp
jecxz
mov
or
std
jno
sti
mov
std
mov
pop
mov
imul
ret
and
int
push
rep
inc
inc
cld
div
nop
lahf
js
jmp
je
mov
test
imull
lahf
imul
xchg
test
mov
xor
lock
outsb
fwait
adc
test
aas
je
mov
test
stos
push
test
pop
loopne
arpl
xchg
or
xchg
call
dec
scas
jo
or
jne
lret
pushf
fildl
sub
cwtl
in
add
arpl
mov
test
incb
push
imul
test
in
xchg
fsubrl
sbb
mov
mov
fwait
cmp
out
ret
test
mov
xchg
push
add
adc
add
shlb
mov
aaa
or
adc
fnstcw
pop
flds
dec
and
je
inc
xor
mov
mov
mov
mov
push
sub
jnp
aas
and
pop
cmp
or
addr16
in
outsl
repnz
jae
stc
mov
mov
cmp
movsb
jecxz
mov
rorb
bound
xchg
cli
maxps
adc
sub
mov
or
lret
sbb
stos
incl
mov
fildll
jb
arpl
cmp
in
aas
and
xchg
jo
ss
loopne
dec
pushf
loopne
dec
mov
jns
mov
push
dec
aam
xchg
sub
sub
movsl
pop
cmp
sbb
pop
bound
and
adc
mov
aaa
push
adc
popa
bound
cwtl
fldt
mov
repz
jl
into
dec
lret
dec
cmc
ret
loopne
xchg
jecxz
arpl
mov
sub
and
insb
dec
sub
mov
out
pop
sub
orl
adc
add
or
sub
jae
xchg
push
mov
dec
mov
sti
stos
je
pop
mov
sar
cmpsl
insb
repz
sbb
jo
inc
lock
ret
mov
loope
mov
cld
dec
gs
cwtl
mov
sub
icebp
push
aaa
pushf
pop
pop
push
int3
jbe
iret
cli
add
sbb
hlt
shll
pop
pop
mov
sub
or
push
test
or
orb
cwtl
int3
mov
paddd
repnz
scas
fadds
int
clc
add
insl
lahf
lcall
push
imul
je
mov
pop
sarl
or
lock
sahf
jae
and
push
mov
movsb
dec
enter
rorl
xchg
test
popf
sbb
sub
sub
inc
or
jo
pop
rorl
push
dec
insb
into
cltd
test
adc
in
lods
push
mov
loop
popa
rorb
and
dec
dec
xchg
sub
xor
test
cmp
stos
pop
and
and
add
int3
mov
xchg
mov
or
pop
sub
cwtl
add
mov
xor
lcall
es
lahf
lahf
in
loopne
nop
mov
mov
mov
loopne
imul
int3
push
fstpt
fiaddl
loope
inc
ds
dec
add
pop
lahf
sbb
mov
or
js
fistpl
in
mov
adc
sbb
xchg
shl
pop
daa
inc
add
int3
mov
sbb
inc
xor
pop
je
aad
addb
test
mov
int
nop
ds
loop
cld
pusha
cwtl
insl
stc
fstp
aam
dec
and
inc
aad
xor
stos
ficompl
jg
jmp
dec
xchg
push
das
dec
push
pushf
lahf
sar
sub
cld
ja
cwtl
cmp
mov
idivb
lods
sbb
mov
and
sbb
psllq
pop
jl
popf
or
pop
enter
fisubl
hlt
cmpsb
insl
loop
xchg
hlt
pop
pop
imul
pop
cmp
sbb
add
sahf
out
fwait
mov
or
std
fcoms
mov
into
negl
adc
shlb
adc
mov
pop
lods
sbb
outsl
sarb
dec
sub
jae
push
mov
fincstp
dec
cltd
ret
inc
imul
push
pop
pop
xchg
xchg
mov
shl
mov
jne
and
mov
jmp
adc
add
vpmulhuw
dec
xlat
sub
cs
push
or
sub
mov
or
add
in
mov
jb
jge
mov
pushf
pop
in
add
cltd
add
adc
xchg
jne
sbb
outsb
sbb
ss
shll
dec
lret
sbb
rorl
les
or
push
or
and
test
jnp
dec
test
fimull
js
aam
push
and
repnz
pushf
lret
dec
add
and
fidivrl
pop
ret
pop
or
cwtl
rorl
or
testb
push
cmp
sub
outsb
cmp
scas
pop
cmpsb
insb
arpl
enter
mov
or
xor
sbb
lea
sbb
std
add
and
cmp
popa
mov
lret
int
xchg
outsb
mov
je
sbb
pop
sub
femms
lods
stos
add
cmp
mov
loop
rorb
daa
test
cmp
mov
sub
sub
out
test
cs
xchg
sbb
enter
rcr
push
pushf
dec
adc
adc
incl
cmpsl
push
aam
xor
mov
ljmp
pop
rcrl
int3
popa
push
neg
push
cltd
xor
test
fsubr
test
mov
pop
ret
push
into
enter
push
mov
aad
fisubs
add
stos
jmp
mov
decl
mov
and
adc
xchg
cmp
sbb
push
inc
push
rcrb
ss
xchg
sbb
mov
adc
inc
nop
mov
sbb
lea
repz
sbb
fbld
sahf
adc
clc
jb
xchg
mov
adcl
jo
lods
test
sbb
das
xchg
and
push
icebp
lret
jmp
inc
stos
mov
shl
popa
test
mov
movsb
pop
sub
cltd
cwtl
jne
jg
flds
repnz
aam
push
xchg
or
push
pop
cmp
dec
fistps
jmp
inc
cwtl
bound
enter
mov
mov
sub
test
test
or
ss
dec
pop
mov
insl
mov
imul
addr16
push
stc
add
mov
mov
pop
nop
ret
push
insb
aad
and
mov
inc
add
addl
fadds
dec
hlt
adc
ffree
sahf
push
scas
adc
outsb
mov
nop
or
pop
xchg
addr16
icebp
pop
cmpsb
and
jae
jmp
jg
test
dec
pop
dec
lods
xorb
bound
xor
xor
lods
ficomps
mov
or
mov
xchg
fbstp
sbbl
sar
test
cmpsb
mov
pushf
mov
mov
mull
call
aad
scas
cmpsb
rorb
mov
cmp
iret
push
andl
mov
pushf
pop
sti
sbb
enter
fs
jmp
push
into
sahf
rcrl
mov
popf
cmp
fbstp
lods
lods
xchg
popa
xchg
aad
jl
aam
inc
cwtl
repz
test
mov
xlat
scas
pop
cmpsl
and
mov
or
in
loopne
nop
inc
fnsave
ss
push
xlat
jp
pop
lods
or
mov
push
push
das
scas
inc
fimuls
jns
ficoml
and
dec
mov
lds
mov
aaa
test
jg
add
jo
mov
insb
mov
rcll
push
notb
sti
push
leave
sar
outsl
jns
loop
movsl
lahf
in
mov
push
in
jle
dec
dec
mov
cmp
add
data16
jae
ficomps
jns
mov
xchg
add
lds
roll
xchg
repnz
sbb
pop
mov
mov
pusha
inc
xchg
and
ret
int
and
jge
int3
add
adc
out
jmp
pop
cmp
adc
shr
and
xchg
cmc
pop
xchg
adc
ja
test
xor
enter
enter
and
mov
repz
int3
popf
push
push
outsb
inc
jae
mov
ffreep
xchg
es
cwtl
cmpsl
xchg
fdivrl
adc
sti
test
ss
cmpsb
adc
adc
dec
adc
push
mov
add
cmp
push
lods
push
icebp
sbb
or
loopne
fldcw
cs
sbbb
jg
pusha
mov
mov
jp
mov
cmc
mov
cmc
mov
inc
jbe
fcoms
jo
sbb
outsl
lcall
cld
jecxz
aad
push
movsl
inc
cs
loope
rcrb
xor
or
or
scas
fisubl
push
mov
and
adc
inc
cmp
repz
lock
jne
mov
inc
sub
jne
lret
push
push
jbe
sbb
arpl
sbb
out
or
rclb
mov
push
mov
shl
std
outsb
mov
xchg
xchg
int3
cmp
in
add
ficoms
test
js
or
jl
fsubl
push
mov
outsl
idivl
push
shl
push
or
sbb
mov
push
mov
enter
rorb
shrb
add
xchg
lock
jne
push
push
jmp
pop
xchg
xchg
push
arpl
clc
es
sub
jp
jg
push
xchg
outsb
icebp
sbb
push
jno
lods
pop
adc
inc
loopne
clc
dec
push
mov
insb
xor
mov
and
idivb
inc
sub
mov
cmpsl
mov
lock
leave
repnz
std
je
fucomip
push
and
fucomi
in
dec
aas
push
inc
aaa
dec
xchg
inc
cmp
pop
and
pop
rol
sbb
jmp
or
mov
hlt
popa
xor
ds
in
fwait
stos
into
pop
or
cwtl
pop
jecxz
divl
mov
inc
xchg
shll
xor
test
test
cmp
test
adc
inc
push
stc
bnd
std
or
push
dec
movsl
jae
movsb
jbe,pt
dec
cmp
movsb
cmp
mov
xchg
sbb
mulb
inc
sbb
pushf
adc
adc
pop
or
pop
jecxz
arpl
jmp
mov
jecxz
int3
icebp
sbb
les
es
dec
and
cs
iret
out
lock
lock
or
outsb
or
mov
test
pop
adc
dec
mov
sub
fs
or
mov
xchg
test
cmpl
fdiv
and
sub
jae
push
rorl
nop
xchg
aam
push
movsb
shl
cwtl
sbb
std
adc
shl
mov
stos
clc
rclb
sti
in
xchg
repz
jle
mov
jb
fdivp
mov
fsub
sti
dec
rcl
push
sub
and
push
dec
jns
sub
cmp
lea
test
push
push
lahf
idivb
int
jg
rorb
dec
add
jmp
inc
xor
inc
sub
cmp
cmc
inc
sbb
test
push
aam
test
cmp
pop
daa
adc
inc
push
xchg
adc
inc
xor
xor
int3
jp
popa
jle
outsb
cmp
jae
movsb
sbb
test
in
aam
sti
xlat
adc
cmc
rcl
dec
clc
push
shrb
mov
xor
es
pop
iret
cmpsb
dec
jl
mov
lar
xchg
insb
add
push
in
sbb
mov
mov
sub
xor
pop
insl
ss
ss
pop
push
jb
pop
adc
fwait
or
into
into
int3
adc
dec
xchg
and
and
sub
pusha
push
jae
rol
mov
xchg
jns
test
mov
jle
rcl
sti
cmpsb
flds
call
pop
loopew
shrl
adc
and
mov
icebp
adc
mov
pusha
inc
mov
jo
iret
inc
cltd
iret
push
xchg
mov
adc
test
push
mov
hlt
js
shlb
dec
xor
into
mov
stos
outsb
lds
movsl
push
scas
mov
push
test
adc
aam
dec
and
push
pop
icebp
adc
adc
daa
arpl
mov
pop
test
push
insl
pusha
add
mov
test
ss
mov
mov
mov
shll
aam
mov
shlb
cmc
inc
xchg
fdivrl
jecxz
pop
sub
icebp
rcll
cmp
shl
and
push
aad
fsts
pop
cmp
mov
or
cmp
mov
iret
pop
push
shl
mov
cmpsl
ds
adc
scas
leave
push
aaa
roll
in
xor
mov
lods
loope
ficoml
cmc
fsub
mov
dec
or
call
mov
mov
adc
enter
jle
lods
inc
lret
pop
jle
lds
std
int3
arpl
adc
mov
hlt
mov
lods
outsl
mov
pushf
lods
xor
pop
jne
xchg
inc
stc
icebp
push
aam
sbb
ror
dec
xchg
ffreep
pop
inc
adc
divb
jno
outsb
jno
insb
cwtl
or
fisttpl
mov
and
cmp
pop
push
pop
dec
fsubs
data16
pushf
dec
mov
lods
or
and
int3
fbld
jle
lret
add
decl
pop
push
into
xchg
into
push
sbb
push
pop
lds
mov
bound
inc
enter
rcll
sub
mov
push
cmp
pusha
gs
testl
jne
rolb
test
push
dec
les
ret
inc
iret
mov
jns
test
outsb
inc
mov
xchg
sub
jno
push
ret
dec
imulb
fcoml
popf
nop
pop
adc
sbb
push
nop
pop
test
loop
inc
lahf
pop
ret
enter
test
jno
adc
roll
add
adc
adc
inc
xor
cmp
xchg
cmp
mov
push
mov
call
mov
sbb
cld
cli
xor
pop
pusha
fwait
mov
xchg
mov
bound
int
sbb
mov
mov
fcmovbe
loop
imul
in
sahf
and
shll
dec
lret
inc
push
popa
repnz
stos
jmp
sbb
push
rclb
popf
dec
shlb
mov
ljmp
hlt
ficompl
mov
cmpsb
inc
es
push
sub
es
in
xor
pop
or
xchg
lahf
xchg
sti
jge
clc
shll
icebp
iret
push
test
fimull
sub
sbb
or
lret
dec
mov
push
inc
pushf
dec
or
sbb
mov
aas
inc
je
les
test
add
ret
push
mov
xchg
aaa
xchg
add
popf
adc
jb
stos
insl
mov
aam
jne
mov
loop
rcrb
scas
push
cmp
xchg
cs
push
adc
xor
push
loopne
fldcw
mov
jmp
pop
xor
adc
stc
imull
inc
inc
fiaddl
ds
notl
in
inc
in
inc
les
sbb
fimuls
adc
mov
push
dec
and
scas
adc
outsb
mov
cmp
sti
test
stos
sbb
jmp
dec
lret
mov
jo
imul
mov
cmpsb
adc
sti
xchg
push
cmp
lret
sub
xchg
lods
pop
das
subb
cmp
cld
or
mov
aaa
rorb
push
rcrb
or
in
mov
nop
aas
call
xor
imul
sbb
or
rclb
dec
push
shr
aad
xor
push
fcoml
leave
jl
cli
pop
outsl
adc
pushf
shl
or
shr
lahf
mov
mov
gs
je
mov
enter
mov
and
push
insb
mov
jecxz
push
and
loopne
sub
enter
movsl
pop
loopne
popa
aad
mov
aaa
dec
push
cmp
dec
xchg
pop
xchg
roll
pop
dec
loope
add
gs
jge
movsb
bound
rorl
mov
adc
adc
dec
jb
dec
cmpsl
or
inc
scas
dec
mov
mov
scas
repz
xchg
enter
cmp
sbb
or
getsec
sbb
dec
sub
push
mov
sub
nop
cmp
fwait
xor
and
sahf
das
lods
mul
mov
dec
sub
das
xchg
aam
dec
pusha
in
xchg
test
mov
push
loope
inc
popa
das
inc
inc
and
or
out
into
push
enter
add
rcl
fsubrl
mov
in
add
mulb
xchg
je
cmpsb
inc
xchg
rclb
and
or
shlb
insb
mov
xchg
add
into
add
push
mov
mov
mov
push
mov
inc
mov
xchg
dec
jge
gs
push
xchg
jmp
mov
sbb
sub
adc
mov
lds
fcoms
cmp
xchg
sbb
rcrl
ja
dec
icebp
icebp
add
cmpsl
rclb
nop
jb
mov
inc
jbe
shlb
rorl
mov
cmc
fs
cmpsl
repz
movsl
shrl
cmp
fsubrl
pop
dec
call
outsb
test
dec
add
mov
lret
shll
hlt
mov
sub
inc
or
adc
loope
rcrb
sbb
arpl
lds
out
dec
pusha
dec
mov
mov
in
jmp
and
mov
js
push
vpsubsw
xor
popa
add
call
xchg
mov
scas
lods
lahf
or
adc
lret
rclb
test
xor
cmp
movsl
loopne
out
xchg
or
lds
dec
push
insl
mov
enter
or
sbb
jecxz
movsb
sti
jmp
sbb
inc
scas
aad
mov
xchg
pop
gs
loop
pushf
int
xlat
xchg
ffree
mul
adc
dec
jmp
push
repz
popa
lcall
mov
into
movsb
pusha
lahf
cmp
call
pop
mov
in
mov
jg
mov
push
lods
cmpl
in
xlat
test
mov
mov
cmc
ljmp
fcomps
mov
jno
mov
bound
inc
mov
lock
and
loope
ds
mov
xor
clc
divb
xchg
lock
test
ret
dec
les
enter
mov
enter
out
lret
adc
test
sub
xor
mov
sbbb
imul
cwtl
dec
mov
addr16
rcrl
fs
into
xchg
in
lds
aam
lods
ret
xchg
sbb
jo
mov
and
mul
nop
imul
sub
mov
mov
and
mov
popa
and
add
ds
sahf
inc
mov
idivl
cs
push
inc
mov
test
dec
cwtl
outsb
popf
or
push
shrl
repnz
arpl
or
mov
icebp
add
es
insl
and
addr16
cmp
mov
mov
repz
fsubrs
dec
mov
cltd
add
sub
std
adc
pop
sbb
xchg
sub
rolb
mov
mov
adc
or
cmp
das
ja
jbe
mov
add
adc
cmpsb
lds
movsl
loopew
std
lock
or
mov
pop
add
xor
out
popa
adc
inc
pop
add
je
dec
add
mov
lea
insb
int
jno
inc
into
pop
jge
sbb
ret
and
cli
mov
mov
push
int3
mov
and
jb
sub
jle
push
leave
divl
aad
mov
les
or
mov
mov
fisubrs
nop
sub
insl
dec
pushf
fnsave
mov
lods
fimuls
int3
sbb
push
push
aam
rcll
js
ja
xorb
int
je
out
cld
add
xchg
sub
ss
fadd
andb
sub
xor
ret
aas
mov
mov
xchg
and
test
imul
push
imul
lods
dec
mov
rcll
and
push
insb
sub
mov
push
ss
jo
dec
adc
fstl
mov
push
fbstp
cmc
inc
jg
test
divl
cwtl
lock
mov
out
hlt
mov
loope
je
nop
cltd
inc
pusha
loopne
jg
fs
xor
push
rcll
popf
pop
mov
sub
fadd
xor
push
aad
dec
adc
pop
insb
jle
rclb
idivb
adc
add
mov
pop
add
aad
test
jne
push
rolb
xor
xchg
nop
dec
mov
inc
loope
pop
jmp
popf
mov
repz
mov
dec
jg
fisttps
adc
xor
out
adc
ja
xchg
lea
lldt
or
jge
adc
mov
dec
lods
push
daa
insl
mov
ljmp
jle
xchg
sti
jge
lahf
dec
popf
pop
mov
xchg
enter
pop
cmp
std
adc
fisubrl
mov
xchg
leave
cmpsl
dec
testb
or
jns
fnsave
scas
jl
jl
imul
stc
cmc
push
fildll
push
stos
and
inc
test
stc
adc
pop
std
sbb
fsub
push
and
mov
inc
pushf
adc
sub
andl
xchg
cltd
mov
jecxz
or
jmp
push
jecxz
jl
jne
dec
mov
fdivs
mov
fimull
xchg
test
test
push
mov
jo
test
mov
mov
push
loop
je
test
mov
adc
mov
clc
mov
push
sbb
jmp
pop
inc
scas
mov
push
hlt
rcll
push
pop
jmp
lock
cmp
cmpb
sub
or
lods
ss
jno
xchg
sub
fisttpl
aam
and
xchg
inc
adc
rcr
jp
sbb
das
into
cmp
popa
lea
mov
dec
jg
xchg
mov
jl
imul
cmp
pop
jmp
cmp
sbb
bound
and
int3
mov
adc
sub
iret
adcb
es
dec
dec
test
sti
outsb
xor
xchg
ret
xchg
jle
sbb
dec
xchg
mov
aad
into
sub
fidivrl
inc
daa
jns
imul
mov
xchg
jp
adc
icebp
es
push
ficompl
mov
add
pop
push
aad
je
stc
push
je
das
mov
ds
rcl
fcomi
adc
jno
cmp
mov
sahf
jle
test
bound
lock
jle
ljmp
jle
mov
adcl
cltd
jns
lea
rcll
xlat
adc
xchg
adc
or
adc
pop
xchg
adc
mov
mov
or
mov
std
repnz
test
xchg
lock
pop
movsl
and
repz
cwtl
and
xchg
jmp
cmp
punpckldq
cmp
nop
xor
stos
sub
inc
xor
adc
xchg
mov
loopne
xchg
push
shrb
in
xchg
and
jno
test
mov
aad
mov
add
clc
aam
bound
inc
push
out
fwait
sbb
sbb
mov
repnz
and
rolb
movsb
nop
xchg
mov
push
mov
push
testb
test
loopne
loopne
call
lods
cmp
sbb
mov
mov
mov
int3
ljmp
aad
pop
sub
or
mulb
mov
mov
fst
lret
popf
cld
sub
or
leave
sbb
adc
mov
int
sbb
mov
bound
scas
pushf
mov
push
rcrl
cmc
push
push
mov
rcll
mov
mov
fisubs
enter
cmp
pop
outsb
pop
jns
pop
adc
mov
repz
mov
sbb
fdivs
xchg
in
popa
inc
push
repz
aad
nop
shrb
mov
outsl
adc
pop
xchg
inc
push
imul
adc
mov
insb
mov
xchg
adc
mov
fcmovnu
inc
push
mov
int3
xchg
jmp
cmp
or
dec
cld
xlat
ret
mov
test
jmp
repnz
pop
mov
jp
pop
enter
aad
imulb
loopne
push
aas
push
clc
cltd
js
pushf
in
and
add
inc
mov
mov
scas
int
out
hlt
mov
js
popf
ja
lret
popf
push
daa
fcoml
outsl
aas
insl
and
loopne
mov
pop
outsb
cmp
xor
cmpsl
push
pop
mov
push
jecxz
xor
and
adc
notb
lret
js
test
rclb
add
pusha
dec
push
jg
bound
add
pop
jmp
sarl
xor
sbb
leave
add
xchg
ja
mov
clc
sub
andl
cli
sbb
add
mov
scas
adc
insb
mov
jle
xchg
mov
push
pop
data16
jnp
xchg
pop
movsb
fmull
movsl
fstpt
mov
stc
mov
insb
xor
imul
in
je
cwtl
pusha
test
jb
pusha
stos
ret
sbb
int
sbbb
rclb
out
enter
xorb
mov
loope
cmpsb
jecxz
in
sbb
pop
fs
mov
mov
aaa
dec
fimuls
sbb
leave
fwait
jl
stc
pop
cltd
testl
addr16
lods
jecxz
pop
inc
cs
out
xchg
iret
fwait
mov
in
clc
mov
shll
jle
js
and
sbb
std
sub
in
data16
xor
pop
repnz
jo
leave
dec
push
and
cs
aad
lds
cld
rcrl
and
icebp
out
or
stc
repnz
adc
mov
adc
movsb
adc
xor
aad
sbbb
leave
mov
mov
test
xchg
into
pop
cs
xor
icebp
std
outsb
adc
int
dec
leavew
lret
push
mov
cmp
jmp
push
pop
fisttpl
call
adc
jno
dec
test
repz
xchg
push
ret
jl
push
adc
insl
fwait
push
xchg
xchg
test
mov
test
mov
enter
xor
sub
and
cmc
mov
push
mov
in
xor
mov
cli
xchg
adc
aad
or
sahf
pop
adc
mov
fldl
sbb
adc
cmp
mov
repz
jmp
subb
xor
sub
pop
pusha
pop
inc
je
jbe
cltd
pop
leave
adc
mov
je
outsl
or
sbbb
jmp
fbstp
pop
fadds
cmp
xchg
cmpsl
pop
es
push
cs
xchg
adc
pusha
icebp
jp
enter
ds
clc
imul
jno
fisttpll
out
pushw
and
or
lahf
sbb
jg
xor
ds
add
sahf
jmp
dec
xchg
mov
popa
pop
mov
sbb
sbb
into
adc
pop
cmp
fs
mov
int
jecxz
fsts
xor
cmp
lds
inc
les
in
push
sarl
jl
rcrl
lcall
adc
shrl
xor
in
gs
mov
shll
mov
adc
enter
cmp
imul
push
adc
lret
dec
test
mov
outsl
xchg
pusha
lock
or
inc
mov
sbb
push
fs
je
push
push
or
adc
jno
dec
sub
ja
out
mov
in
lcall
pop
nop
jne
push
inc
pop
push
push
xchg
adc
sbb
jb
out
push
dec
adc
int3
shrl
lret
xor
inc
idivb
fs
push
push
dec
and
dec
add
jge
dec
sub
js
ljmp
jl
sahf
sub
testl
xchg
lret
sub
inc
ds
sbb
cltd
scas
adc
cmp
cli
xchg
out
outsb
inc
jae
sbb
out
add
mov
shrb
shrb
mov
loopne
filds
push
bnd
add
jb
xlat
pop
inc
sahf
sbb
inc
pop
test
xchg
je
ss
mov
or
data16
fs
sbb
mov
sub
bswap
in
in
push
sub
sbb
mov
mov
cmp
fsubr
push
sbb
xor
in
dec
test
cmpsl
adc
add
cmp
ret
pop
sub
loopne
pop
mov
jge
pop
cmpsb
and
inc
pushl
lds
pop
jl
sbb
and
jae
daa
inc
aam
ljmp
into
sub
pop
xchg
adc
test
sbb
in
dec
cmp
mov
jmp
cmp
mov
jmp
or
aas
sbb
lret
inc
movsb
fcomps
sub
sub
enter
fimull
push
lret
inc
dec
add
push
push
je
and
inc
inc
sub
push
lods
push
lds
mov
in
fldcw
inc
popa
and
jg
cmp
fiaddl
outsb
or
lods
and
in
push
int3
sahf
adc
cmp
sub
fmuls
fimull
push
gs
loope
das
sbb
ret
out
add
dec
mov
add
xor
inc
outsl
insl
shl
out
rcrb
leave
mov
xor
push
jno
add
ja
mov
ds
lret
xchg
js
loopne
fisubrs
jle
xor
jg
lods
add
out
add
cmc
push
jge
adc
iret
fstpl
out
add
push
jbe
xchg
push
iret
and
dec
pop
leave
cmp
sbb
sub
jmp
xor
cmp
pop
dec
cmp
imul
mov
shll
jb
in
outsb
adc
lahf
fiadds
jmp
bound
jecxz
jno
cmp
pop
fsubl
ljmp
loop
pop
pop
xor
inc
aad
xor
jbe
jp
in
stc
aaa
jmp
mov
and
jmp
adc
jge
jge
popf
pop
adc
rcr
lret
push
push
aaa
inc
xchg
dec
pop
jbe
adc
push
and
imul
js
lods
fcoml
mov
inc
lcall
outsb
in
xchg
es
test
pop
lds
mov
loop
jle
jecxz
pop
ljmp
call
repz
clc
adc
pushl
inc
lods
jne
movsb
inc
pop
xor
mov
jmp
jle
movsb
xchg
sub
lcall
ret
push
jns
movsl
sbb
inc
test
cmpsl
dec
dec
pop
and
arpl
and
dec
rorb
pop
push
push
adc
sub
add
rcll
movsb
pop
adc
js
push
pop
cld
push
or
add
xchg
sbb
cwtl
add
mov
cli
xchg
jb
mov
jns
aam
mov
mov
cmp
daa
aam
pop
arpl
stc
cmp
outsb
movsb
insl
push
jnp
arpl
xor
jg
sub
mov
int
cmp
popf
mov
mov
pushf
leave
sub
mov
xor
pop
dec
hlt
and
jb
das
dec
push
and
nop
mov
mov
arpl
repz
mov
xchg
mov
ds
imul
dec
pop
fs
leave
fwait
movsb
stos
addl
add
pop
pop
dec
sub
leave
fdivs
test
loope
add
mov
not
jo
sahf
cmc
cmpsb
mov
and
xchg
cltd
jle
cmp
cwtl
dec
pop
icebp
pusha
clc
or
cmpsl
xchg
mov
cmp
addb
sarb
aaa
test
and
popa
ss
mov
and
mov
jp
repz
call
sbb
pop
test
inc
jg
sbb
cwtl
pop
jne
mov
sbb
sahf
rol
push
aad
arpl
shrl
push
mov
sbb
fimuls
push
xor
loop
mov
xchg
mov
mov
cmp
lds
xorl
jle
aas
pop
aad
mov
pop
xor
in
inc
movsb
xor
aad
pop
ss
rolb
inc
stos
not
mov
xor
pop
sahf
dec
push
movsb
iret
out
ja
ljmp
out
pop
push
repnz
inc
add
pop
fistpll
jge
xchg
xor
xor
es
dec
iret
cmp
fbstp
out
in
and
leave
cwtl
add
push
pop
mov
pop
jecxz
add
xor
add
jb
dec
mov
push
add
push
das
inc
shrl
mov
mov
addr16
les
push
test
xchg
inc
pop
sti
bound
xchg
fildl
mov
shl
jl
jecxz
aam
stc
push
lods
dec
push
out
xchg
inc
int
mov
gs
push
jle
subb
jno
cmp
jle
pop
mov
repnz
mov
and
ljmp
inc
iret
dec
jnp
int
popa
loope
inc
in
and
out
inc
inc
ja
adc
jae
shrl
push
push
ja
je
sub
mov
cmc
sub
ret
mov
and
hlt
dec
jns
adc
cmp
jne
or
jle
lea
lahf
cmpsl
test
das
mov
imul
mov
push
lcall
sub
jle
inc
push
imul
sbb
cmp
idivl
inc
sub
fildll
jb
adc
int3
adc
lret
and
push
sub
push
mulb
mov
xchg
ja
xchg
mov
adc
es
sbb
cmp
push
popf
push
pop
scas
lahf
push
dec
add
test
or
xchg
mov
adc
push
subb
mov
movsb
aad
dec
dec
mov
pop
push
cmp
adc
sub
push
jge
ret
aaa
leave
sub
pop
fcompl
arpl
adc
cld
into
push
mov
call
pop
xchg
mov
dec
dec
mov
xchg
pop
push
ret
sbb
jbe
decb
movsl
push
push
and
sub
inc
sti
jecxz
jb
repz
sub
mov
fst
inc
js
dec
iret
mov
mov
inc
mov
add
and
and
and
push
repnz
dec
and
inc
xor
jns
pop
call
push
test
pop
push
adc
push
imul
xor
cmp
mov
jmp
cmpl
mov
cltd
inc
loopne
into
xor
inc
cmp
lret
test
jb
dec
add
loope
jns
fsub
jecxz
jmp
into
push
dec
loopne
mov
jbe
inc
lock
daa
or
adc
mov
push
add
movsl
dec
push
mov
add
stos
xchg
aaa
movsb
ret
insl
inc
and
movsl
lods
or
or
fldl
adc
xorb
push
movsl
call
push
sub
pop
shll
and
jge
pop
sub
lods
sub
test
je
leave
dec
mov
sbb
in
xchg
fcoms
outsb
inc
pop
pop
mov
movsb
enter
sub
push
rorb
movsl
mov
mov
shrb
cld
std
lods
icebp
xchg
xchg
aad
out
fcmovnbe
out
mov
or
dec
pop
jg
sarb
jno
arpl
shll
add
in
jl
cmp
std
sbb
push
jp
sbb
in
pop
cmp
hlt
cmp
lcall
inc
daa
mov
repnz
and
movsb
into
push
push
sub
out
and
aas
push
scas
xor
in
sub
lods
and
addr16
aas
mov
push
in
ret
xor
daa
push
pop
lea
mov
and
cs
cmp
inc
cmp
push
cs
and
pop
adc
pop
jbe
mov
sub
movsl
sbb
or
rcl
dec
ljmp
lahf
mov
inc
push
stos
into
sbb
cs
out
lods
in
mov
stc
sarl
xor
popa
mov
and
fwait
pop
addr16
movsb
cmp
loope
cmc
jge
pop
sub
std
test
out
dec
call
fstpt
inc
inc
adc
les
int3
dec
in
mov
mov
dec
pop
pop
mov
pop
xor
sub
push
push
jle
push
sti
push
pusha
ds
ret
loope
or
addr16
addps
xor
cmp
inc
lods
loopne
inc
and
cld
sbb
and
mov
jg
add
xlat
xlat
add
cmpb
repz
xchg
jb
mov
mov
ja
xor
shrb
pop
push
dec
fimull
push
pop
jle
mov
arpl
or
ss
xor
pop
aaa
out
ror
in
inc
xor
xchg
inc
out
jno
push
sbb
test
push
dec
ficomps
sbb
aas
arpl
iret
in
scas
or
jb
and
sub
or
xchg
roll
pop
ja
popa
sub
clc
into
pop
inc
scas
pop
mov
in
lret
sub
and
cs
cmp
and
mov
push
pop
and
insl
rcll
nop
cmp
leave
rolb
or
test
jne
add
jo
sbb
push
adc
rorl
pop
iret
jae
sub
insl
mov
jns
inc
or
push
and
add
add
arpl
out
adc
jg
push
mov
pop
mov
mov
xchg
inc
or
ret
aas
mov
test
dec
add
hlt
cmpb
out
mov
imul
je
aas
sbb
lahf
sub
ret
or
roll
jbe
mov
subb
cmp
xchg
jg
pop
jmp
out
pop
xchg
scas
pop
mov
mov
jbe
xchg
pushl
add
push
fisttpll
mov
xor
lds
fwait
into
rcrb
cmp
jbe
push
mov
sbb
sub
cltd
cmpsl
pop
idivb
stos
adc
add
pop
out
ds
dec
xchg
popa
add
dec
rclb
add
cmpsb
sub
mov
lcall
out
in
fwait
lahf
bound
push
test
sbb
jbe
pop
iret
mov
adc
push
dec
pop
and
bound
cmp
push
inc
mov
sbb
sbb
fiaddl
pop
sub
dec
inc
pop
cld
cmp
jp
jl
inc
cmp
xor
xchg
xor
or
mov
and
dec
push
nop
mov
adcb
aas
cltd
cmove
out
push
sbb
and
rcrl
inc
cmp
imul
mov
out
jecxz
aaa
xor
out
cli
push
push
mov
cmp
fcmovnb
test
push
loopne
subl
xchg
popf
push
cmp
jp
in
pop
es
aas
mov
xor
insb
push
jecxz
cmp
xor
rclb
les
imul
cltd
cmp
jne
cmpsl
pop
or
fs
dec
adc
rorl
push
cmp
sbb
ret
subl
insl
popf
mov
mov
add
push
add
dec
sub
mov
pop
jo
fmulp
mov
cli
fsts
test
xor
push
pop
cmc
jge
sub
adc
pusha
push
icebp
pusha
out
ficoms
mov
push
mov
sub
pop
adc
xor
mov
cmp
cmp
adc
cmp
pusha
gs
lahf
ds
sbb
lahf
jbe
insb
and
mov
js
in
mov
cmp
xchg
xor
mov
rorl
mov
notb
mov
scas
decl
mov
jg
call
sub
inc
dec
adc
es
xchg
ja
loope
cmp
xor
inc
movsl
cs
cmc
push
cmp
inc
xor
jbe
sbb
push
push
fsubp
pop
adc
loop
xor
inc
adc
mov
and
fnsave
cwtl
testb
inc
test
or
mov
jae
pop
fwait
dec
push
push
out
sbb
nop
or
mov
jbe
sbb
or
mov
sbbb
adc
mov
shlb
and
xor
cmp
push
loopne
test
adc
out
or
mov
out
loop
pop
adc
mov
inc
xor
fcom
outsb
xchg
adc
addr16
lods
daa
rcr
imul
inc
ljmp
dec
aad
out
lea
adc
pusha
adc
sub
pusha
rcr
inc
mov
inc
pop
lret
jnp
or
xorb
fwait
xchg
xchg
adc
adc
outsl
push
or
xor
sti
sbb
int
jne
es
xor
sub
icebp
pusha
fldcw
jl
jle
push
push
fmuls
lret
cld
subb
aad
mov
adc
add
in
xchg
inc
xchg
push
dec
arpl
imul
or
lods
fwait
jmp
sub
enter
mov
mov
mov
testl
ja
test
mull
or
inc
loop
or
sahf
lahf
sub
jp
nop
divl
adc
ja
out
bound
mov
imul
pop
ss
and
mov
or
adc
dec
adc
lahf
mov
nop
les
clc
adc
ja
pop
adc
arpl
xlat
xchg
add
sub
in
lods
sub
daa
push
andb
loop
dec
test
adc
xor
sbb
sub
and
insb
xchg
or
in
fstpt
or
pop
mov
push
jo
stos
adc
sti
mul
adc
cmp
pop
jmp
inc
mov
sub
mov
loopne
or
fists
pop
and
xchg
outsb
lock
sbbl
popf
ja
lret
and
lahf
pop
mov
stos
fdivs
lods
bound
pop
jle
or
pusha
push
adc
out
jae
pop
clc
ss
push
scas
aas
push
mov
adc
add
xchg
mov
dec
repz
stos
adc
pop
rorl
dec
movsl
mov
addr16
mov
fisttps
mov
and
rorb
js
mov
cmp
xchg
sbb
nop
mov
xchg
mov
imul
int
xor
aam
insb
mov
jle
jb
out
inc
imul
repz
sub
rcll
jge
out
pusha
push
ja
pusha
adc
mov
inc
mov
test
push
adc
cmp
and
xchg
adc
subl
jge
adc
push
shrb
pusha
adc
mov
xchg
pop
test
and
push
stos
push
push
mov
scas
jo
andl
aas
add
pop
stos
and
mov
in
jg
push
adc
lods
ret
jbe
sbb
pop
rolb
ja
push
push
in
mov
icebp
lcall
or
test
shrb
cs
repnz
dec
out
fmuls
lods
adcl
mov
dec
rclb
lods
test
fmull
rorb
movsb
daa
push
int
ror
lahf
cs
mov
adc
jbe
and
shll
int3
adc
push
push
int
int3
and
adc
or
pop
ds
and
cmc
aad
cld
call
fldt
or
adc
in
xchg
das
mov
jp
ds
lea
in
fadd
cwtl
inc
fidivrs
lds
shl
repnz
mov
rdmsr
aad
aaa
xchg
ss
icebp
push
push
loope
fisubrl
mov
sbb
push
in
rcrb
orb
data16
test
mov
pop
and
cltd
int
jg
cmp
mov
adc
popa
lahf
stc
or
or
jl
lods
xor
movsl
gs
and
dec
stos
sub
loopne
mov
add
jmp
stc
mov
jne
mov
les
pop
pop
bound
mov
mov
mov
sbb
mov
fmuls
xchg
les
movsb
inc
lock
pusha
adc
pop
or
jno
out
adc
hlt
outsb
lahf
cld
xor
mov
adc
pop
fidivl
mov
lahf
cmp
and
iret
arpl
sub
repz
fnsave
add
lret
mov
push
adc
sub
mov
cld
add
adc
push
lock
push
adc
inc
fdivr
sub
push
mov
mov
lods
sbb
cltd
or
shlb
cld
and
rcrl
lcall
sub
seta
xor
pop
fld
cwtl
icebp
out
insb
mov
lret
mov
mov
sbb
adc
lahf
aad
test
sbb
pop
sub
mov
pop
pop
ret
mov
enter
adc
push
jns
mov
bound
nop
in
cltd
jle
xor
hlt
call
andb
or
mov
out
sub
mov
imulb
les
test
in
call
add
and
stos
mov
test
stc
aam
mov
dec
fstl
mov
outsb
daa
pop
mov
xchg
xchg
push
adc
and
call
push
adc
sub
sub
pop
lret
sbb
or
cmp
lea
gs
sbb
testl
cmp
mov
mov
adc
lret
jg
adc
jae
jle
dec
lods
sbb
sbb
push
mov
das
mov
add
sbbl
add
jle
or
add
cmp
jp
or
add
xchg
sti
inc
out
int
add
dec
sub
sub
test
aad
and
mov
test
jns
mov
pop
pop
and
add
pusha
mov
push
popl
xor
push
sarb
outsl
and
popf
and
ret
xor
adc
fstl
and
lahf
lds
pop
push
push
orb
mov
jbe
icebp
into
inc
pusha
xor
aam
shrb
push
cmpsb
adc
cmp
mov
fisubs
inc
sub
arpl
popa
cmp
jbe
xor
notl
scas
mov
out
push
pop
sbb
lods
xchg
inc
push
inc
test
mov
lods
pop
inc
dec
repnz
lcall
sub
testb
test
mov
icebp
loope
ret
inc
xchg
xlat
and
in
scas
jbe
mov
jne
push
mov
add
nop
mov
jbe
test
push
adc
cli
pushf
and
dec
cmp
cmp
ja
jp
cli
fisttpll
ds
imul
push
jbe
ret
imul
mov
nop
cmp
popf
pop
cmpsb
dec
adc
or
xchg
mov
xchg
add
mov
mov
mov
pop
pop
push
xor
sub
sbb
add
out
mov
cmpsb
inc
push
jbe
sbb
adc
hlt
pop
push
inc
sub
jae
push
negl
nop
test
mov
lret
xor
mov
mov
cs
js
dec
and
push
rclb
fists
hlt
sub
ds
mov
sbb
inc
and
lods
pop
aam
jb
jp
jmp
stos
pop
push
rolb
stos
int3
xchg
push
frstor
and
cmp
fs
stos
xor
pushf
test
fmuls
inc
mov
pop
je
or
xchg
stos
nop
out
mov
mov
adc
and
xor
subl
loope
inc
xchg
je
and
pop
inc
cmp
inc
jo
mov
mov
sbb
lds
and
subl
xlat
outsl
aas
les
push
fs
or
and
mov
dec
inc
dec
mov
cs
sti
jnp
cld
ja
fiaddl
repnz
test
xlat
jbe
pop
lret
pop
jbe
movsl
aam
loopne
fsub
pop
jmp
data16
sbb
cld
jno
shlb
mov
cs
jp
xchg
or
ret
enter
fwait
and
and
into
or
aam
and
mov
iret
mov
pop
adc
ret
jns
mov
push
insb
adc
mov
mov
lahf
pop
mov
pop
push
pop
mov
movsl
and
iret
and
orl
inc
aas
mov
loop
inc
rcrl
jbe
xor
insl
or
pop
adc
adc
notl
nop
jo
outsl
mov
test
pop
jbe
js
cltd
and
adc
xor
js
lds
gs
cmpsb
mov
push
nop
xchg
jne
dec
add
mov
ljmp
orl
hlt
stc
cmp
add
aad
inc
pop
aam
sar
icebp
movb
nop
mov
dec
movsl
mov
lcall
mov
add
push
lea
pop
loopne
ret
jne
lret
fadd
inc
leave
push
in
mov
adc
sub
lods
xchg
jmp
dec
cmpsb
xor
xchg
push
push
imull
pushf
dec
inc
push
or
js
jge
pusha
sqrtps
adcl
loope
mov
cmp
data16
movsb
cld
jb
mov
push
ffreep
hlt
pop
jbe
sub
in
test
rcll
push
jne
icebp
mov
pop
inc
lods
loop
adc
jae
push
mov
cmpsb
cltd
jmp
lret
pop
pop
push
or
or
gs
jbe
daa
ds
popa
xor
rcll
cwtl
mov
mulb
sub
icebp
jl
test
ljmp
sub
adc
push
dec
lcall
notl
addr16
loope
xchg
jno
inc
pop
adc
call
stos
adc
je
mov
ja
adc
rolb
xchg
movsb
pop
jge
mov
int3
xchg
xchg
push
mov
cmp
jnp
loopne
pop
push
or
xchg
data16
cmp
cmp
mov
jle
jbe
jb
lea
mov
ljmp
xor
inc
push
cld
std
mov
dec
push
xchg
push
jle
adc
ss
and
sahf
mov
mov
cmp
adc
repnz
aaa
mov
mov
push
mov
cmpsb
xchg
sub
xor
mov
scas
mov
fstl
js
jb
repnz
jge
push
push
stc
fwait
int
insl
add
adc
sub
int3
jno
cmc
cs
jne
and
add
dec
jae
jns
nop
leave
xor
xor
add
sbb
ret
jl
insl
andl
pcmpeqd
out
cmc
dec
and
outsb
xor
inc
cmp
daa
data16
inc
mov
jbe
cwtl
push
clc
and
rclb
mov
or
mov
sti
cmp
les
sub
adc
ja
push
scas
test
cmpl
jg
mul
adc
subl
xchg
mov
sbb
pop
lock
add
cmovb
cli
iret
xchg
in
sub
movsl
enter
xchg
pop
call
push
jae
fcmovbe
xor
mov
lret
sub
adc
arpl
mov
fmuls
adc
in
hlt
stc
jle
sahf
in
test
loope
mov
imul
jmp
ret
lds
cmp
cmpsl
push
in
push
xchg
mov
call
adc
sbb
sbb
addl
inc
push
cmp
jbe
xchg
pop
cmp
insl
arpl
mov
push
mov
in
jbe
popl
sub
scas
popf
add
scas
mov
fs
push
cmp
call
imul
add
lock
sub
mulb
punpckldq
pushf
xchg
add
push
jge
push
pop
mov
mov
pop
pop
call
lret
fwait
shrb
sarb
loopne
frstor
pop
fistpl
insb
cmp
or
jmp
inc
adc
orb
lods
mov
rcrl
adc
jno
push
lods
faddl
lods
ljmp
repnz
xchg
bound
jle
or
imul
in
inc
cmpsb
negb
lods
push
sahf
pop
and
xchg
scas
aas
ds
mov
sub
add
mov
ficoml
add
adc
dec
cwtl
shrl
or
ja
xor
inc
jb
adc
push
jae
imul
push
dec
test
jb
sbb
cltd
mov
sahf
jle
adc
inc
jp
fs
mov
test
mov
lret
mov
adc
aas
test
jle
clc
outsb
push
mov
mov
je
sub
mov
push
cmp
divb
and
mov
pop
cmpb
dec
sbb
cmpl
cmp
jle
mov
les
dec
roll
aam
aaa
pop
inc
jbe
lock
and
loopne
inc
enter
cli
inc
fbld
mov
cmp
out
adc
add
mov
aaa
mov
lret
aad
daa
mov
test
in
cmp
into
les
xchg
push
lret
shr
loope
cmc
in
mov
loopne
inc
int
adc
shll
in
jbe
in
inc
mov
rcrb
jp
and
pop
dec
inc
jl
sbb
sbb
mov
inc
jb
mov
or
nop
insl
push
mov
jbe
lods
mov
outsl
adc
mov
popf
mov
mov
sub
xlat
in
sub
xor
ret
or
lcall
mov
pop
ret
in
rol
incb
pop
jmp
push
filds
jbe
sbb
subl
push
add
push
lret
shlb
fidivs
lcall
push
mov
je
sbb
imul
ds
jg
cmp
sbbb
xchg
in
jp
lock
adc
xchg
sub
pop
aam
mov
sarb
mov
clc
push
ret
add
nop
mov
clc
dec
adc
fidivl
dec
arpl
jg
test
fdivs
push
call
mov
push
push
or
cmp
and
sti
add
sbb
xchg
fsubs
sbb
mov
adcl
imul
push
popf
jnp
hlt
inc
rcrl
xchg
xor
mov
popf
lea
jbe
pop
adc
fimull
jb
adc
psubusw
mov
loop
adc
dec
fcom
ss
sub
inc
fs
cmp
jbe
jmp
push
adc
xor
xor
fcoml
ss
fs
push
shll
mov
outsb
stos
or
jle
xchg
iret
loopne
pop
lods
add
aad
or
lods
pop
xchg
ljmp
inc
push
shrb
mov
dec
jmp
xor
mov
pop
test
pop
pop
dec
jl
scas
mov
pop
xchg
loop
mov
jg
cli
mov
imul
sub
loop
inc
pusha
add
add
pop
add
inc
pop
pushl
jmp
mov
sub
call
pop
push
cmp
faddl
rdmsr
stos
in
gs
scas
ret
cmp
iret
jns
sbb
int
mov
dec
jae
in
adc
int
out
push
fwait
mov
scas
adc
inc
andl
mov
inc
sbbb
adc
movsl
sahf
repz
sub
sbb
xor
xor
and
imul
pusha
add
cmc
or
jae
movl
mov
xchg
bound
mov
cmp
clc
adc
fidivrs
lahf
out
jbe
imul
mov
inc
dec
nop
or
push
mov
pop
ret
nop
inc
lea
aad
xor
xor
pop
add
sbb
or
int
or
enter
adc
sub
ficoml
data16
lea
xor
inc
add
cwtl
dec
mov
sbb
pop
fnstenv
dec
push
lods
jb
das
add
inc
xor
gs
jecxz
push
call
mov
lods
popf
push
pop
mov
std
inc
mov
inc
cltd
das
mov
fsubl
xadd
mov
xchg
daa
dec
xor
inc
out
ret
inc
lea
nop
andb
cmp
push
mov
inc
lcall
dec
xor
aam
mov
jno
test
lret
jbe
dec
lods
and
xlat
loop
push
lahf
arpl
cld
pop
daa
fstl
pop
ror
iret
adc
imull
nop
lods
decb
or
lods
sub
jbe
aad
stos
lcall
sub
in
cmc
cmpb
pushf
cltd
jmp
mov
and
pop
cld
sub
sub
divl
xchg
adc
pop
sub
cmc
jbe
jl
vmovdqu
adc
xor
adc
push
add
ret
push
test
mov
mov
cmp
cmpl
subb
out
pusha
imul
aam
repz
ret
mov
stos
popa
out
cmp
in
int
dec
mov
idivl
adc
fcmovne
xchg
and
xor
shlb
add
and
jp
and
cli
adc
mov
lahf
mov
scas
int3
push
pop
ret
sbbb
mov
xorl
jl
pop
jne
push
jnp,pt
or
jb
clc
sarl
add
or
in
adc
repnz
add
mov
xchg
sbb
mov
adc
scas
mov
mov
jmp
fimuls
push
out
push
dec
pop
lret
xor
dec
sub
mov
push
xor
ss
mov
data16
and
sbb
add
fldenv
fldl
clc
push
adc
jo
pop
in
pop
rclb
shll
mov
dec
xchg
inc
jb
jbe
and
adc
mov
test
rclb
scas
fsubp
push
add
mull
std
push
add
xor
or
mov
insb
mov
mov
cmp
fdivs
bound
mov
mov
std
es
cs
jmp
and
rclb
in
movsl
mov
and
test
lds
ss
mov
notb
cmc
out
repnz
cld
jne
rcrl
std
dec
lods
adc
add
dec
inc
jle
popa
xchg
dec
xchg
mov
or
stos
mov
mov
test
cwtl
fisttpll
vpsubb
int3
sub
xchg
adc
jnp
lock
xor
xchg
into
lahf
cmpsb
aaa
shll
mov
push
mov
aas
jbe
fistps
adc
popf
mov
int
scas
adc
push
jns
in
scas
jecxz
mov
jnp
mov
decl
ror
lea
mov
addl
jl
mov
data16
imul
jg
int
push
xor
mov
xchg
mov
cmpsb
pop
cmp
cltd
sub
sti
out
adc
loop
sahf
imul
jbe
jnp
mov
scas
adc
daa
ljmp
inc
pusha
and
out
iret
adc
mov
jnp
add
addr16
mov
jbe
loope
rol
mov
fisubs
repz
fnsave
push
arpl
push
fstl
and
fwait
hlt
xchg
adc
mov
pop
mov
je,pt
add
pop
mov
cmp
add
sub
cmp
or
mov
add
sbb
pop
call
data16
push
xor
and
and
int
cmp
in
cltd
add
aas
push
sub
dec
call
mov
push
arpl
jmp
fstpt
or
or
ret
icebp
cmp
sub
test
leave
je
jp
ljmp
in
sub
xlat
xor
stos
lods
jae
pop
shlb
cmp
pop
rcrb
ljmp
cmp
cwtl
lock
sbb
into
lcall
add
aas
mov
mov
imul
sub
aaa
sub
int3
je
scas
shrl
in
cmpsl
dec
pop
mov
hlt
or
repz
and
loop
addr16
in
push
mov
in
leave
adc
insl
lods
mov
or
jbe
mov
aad
mov
mov
incb
pop
test
jp
std
adc
or
pushf
in
shl
sub
push
xchg
dec
xchg
xchg
pop
loope
mov
testl
mov
aas
adc
ret
movsl
test
and
cmp
pop
mov
aaa
cmc
cmp
mov
jge
mov
aas
mov
cwtl
mov
adc
sbb
les
jno
das
shrd
call
fimuls
in
dec
or
idivl
outsl
jg
mov
adc
adc
adc
in
jg
and
in
int
jg
or
push
popa
sbb
xor
xchg
dec
push
aas
push
mov
es
pop
xchg
aam
push
sub
cmp
push
scas
or
adc
mov
and
roll
xchg
jbe
xor
ljmp
jo
sub
or
jge
sub
dec
jns
ret
or
test
addr16
pop
movsb
adc
adc
fiadds
mov
pop
dec
mov
push
cmpsb
orb
adc
jecxz
testl
jns
fists
mov
mov
scas
fwait
inc
aaa
das
fildll
daa
inc
ffree
in
in
out
mov
adc
mov
arpl
mov
or
mov
cmp
cmpsb
aaa
dec
push
jle
scas
pop
cmpsb
sub
adc
mov
lcall
iret
bnd
xlat
insb
and
pop
fdivl
lahf
cwtl
insb
inc
dec
int
adc
sbb
push
adc
repz
pusha
adc
and
test
lea
sbb
cltd
mov
out
fcomip
jmp
adc
jl
sub
push
loop
cli
and
repz
mov
in
jbe
lea
fs
jg
sbb
and
cs
das
ss
shlb
or
fwait
add
mov
pop
jge
lahf
mov
cltd
inc
es
sbb
test
scas
subb
push
mov
aam
repz
or
pop
popf
lock
push
mov
in
ffreep
pop
mov
adc
xchg
ds
xchg
mov
push
adc
adc
jecxz
lea
dec
xor
add
cmpsb
mov
imul
das
mov
aad
cs
push
stos
pop
adc
mov
les
xchg
inc
pop
mov
mov
inc
xchg
ds
negb
add
dec
xor
sbb
jo
xchg
int
xor
movsb
mov
mov
sub
adc
inc
bound
stc
mov
inc
sub
jmp
mov
push
dec
pop
lahf
or
insl
and
cmp
imul
cmp
jo
jno
movsl
adc
sub
mov
rol
jb
inc
and
add
movsl
pop
adc
cwtl
lret
rclb
adcl
dec
cltd
adc
loope
loop
addb
out
inc
or
arpl
mov
mov
aam
lahf
adc
clc
rclb
sub
jge
push
dec
lock
pop
xor
rcr
mov
sysenter
mov
sub
pop
loope
push
out
xchg
adc
aas
stc
outsl
inc
xchg
lock
sbb
mov
xchg
cmp
pop
btc
adc
jae
es
dec
xor
loop
or
and
mov
add
jnp
testb
mov
mov
fsubr
fisubs
lods
push
gs
pop
add
mov
push
fnsave
sbb
add
cwtl
outsl
arpl
ret
push
test
jno
mov
xchg
pop
mov
xlat
adc
lcall
push
mov
sarl
xor
add
mov
xchg
xchg
sbb
ret
mov
mov
mov
enter
dec
mov
add
outsl
adc
pop
pop
mov
sahf
pop
out
cltd
cmp
and
mov
inc
add
jns
xorl
xchg
inc
clc
daa
mov
test
das
mov
xchg
stos
negl
pusha
iret
mov
aad
inc
icebp
mov
sbb
mov
add
push
push
cltd
out
sbb
in
and
sbb
movsl
mov
aad
add
addr16
mov
mov
cmp
xor
or
cs
scas
aaa
xchg
dec
mov
cmp
jecxz
inc
xor
lret
jp
mov
insl
inc
mov
in
test
es
pop
xchg
andb
or
push
loope
ficompl
aad
pop
out
cmpsb
cmc
das
lcall
push
sub
shrb
mov
test
arpl
dec
or
mov
out
push
push
call
push
jl
subb
shrb
jo
adc
push
pop
je
stos
mov
gs
popa
xor
add
loope
mov
ss
xchg
sahf
cs
enter
push
push
mov
jnp
xor
inc
jno
lock
fdivrs
cmp
adc
mov
mov
jae
out
mov
jg
adc
mov
dec
or
adc
cwtl
inc
xchg
sbb
es
xchg
mov
inc
xchg
lea
mov
sbb
push
sbbl
or
cmp
mov
xchg
ljmp
dec
aas
dec
addl
aas
js
or
sbb
push
jbe
add
es
jmp
jne
nop
jle
leave
ret
inc
orb
jg
aaa
scas
shll
add
outsb
xchg
mov
in
fwait
int3
cmp
jbe
mov
aad
adc
imul
jmp
test
cwtl
stos
outsb
push
inc
aam
cltd
outsb
out
setg
rcl
mov
or
dec
lods
iret
mov
ja
push
fisubs
jno
inc
add
pusha
xchg
in
loopne
lea
mull
xor
jl
shlb
fidivl
fwait
lods
xchg
jle
dec
or
cli
decl
adc
pop
and
repz
jp
dec
testl
shrb
das
or
push
je
mov
cltd
lret
cmp
shll
xchg
stc
aaa
push
and
adc
andl
in
add
pop
call
mov
roll
repnz
nop
mov
ss
adc
mov
adc
and
mov
sahf
test
sahf
aas
adc
cmpsl
and
pop
ss
fs
cmpsb
fists
lret
loopne
pop
inc
add
cmpsb
neg
lds
loop
rorl
adc
insb
fisubrl
inc
inc
aaa
mov
popf
lock
lahf
cmp
shrl
sbb
and
cmovl
int3
inc
shll
mov
std
subl
loop
xchg
fdivl
lock
sbb
mov
adc
mov
cmp
mov
jg
push
data16
xor
add
and
push
ss
sbb
faddl
fdivrs
pop
mov
cli
stos
mov
dec
loop
dec
cmp
in
aam
xchg
pop
fbstp
int3
pop
and
loop
cmp
mov
fwait
sub
flds
ret
xchg
mov
add
jg
pop
mov
xchg
jle
and
xor
enter
sub
xchg
or
xor
inc
xchg
imul
add
nop
xchg
test
cmp
mov
push
jae
push
dec
cmp
xor
bound
mov
ss
or
sub
mov
inc
clc
mov
add
mov
jle
xchg
xor
xchg
adc
in
xchg
mov
hlt
xchg
clc
inc
aad
xchg
adc
test
pop
add
jmp
mov
cld
fadds
mov
push
std
push
aas
inc
insl
cmp
ret
cld
aas
xor
adc
clc
sbb
lret
in
rcrb
loopne
mov
popf
inc
lea
push
mov
xor
jbe
pop
add
outsb
push
lret
mov
jmp
divb
fxch
push
mov
mov
clc
adcb
jbe
out
mov
adc
cld
mov
dec
adc
std
pop
push
lods
dec
cli
scas
sub
mov
jo
adc
icebp
mov
dec
adc
xor
sbb
sbb
inc
mov
mov
shl
xorb
mov
scas
inc
and
xor
push
daa
cld
fiadds
ss
insb
ja
inc
push
imul
loope
pop
sbb
cmp
mov
arpl
int
cmp
inc
adc
shr
push
testb
cmc
mov
andb
add
add
pusha
sub
cmp
cli
push
jns
inc
insb
movsb
sub
or
and
jge
jecxz
rorl
movsb
adc
sbb
decl
outsb
jne
js
mov
test
int3
xchg
ds
test
fwait
rcll
inc
push
mov
pop
adc
and
xchg
insb
jmp
jle
lahf
loopne
adc
fildll
jbe
or
in
and
mov
cmpsl
insb
rcll
inc
inc
dec
cmp
fildl
jne
pushf
jg
mov
lock
out
and
mov
loope
dec
adc
jp
jno
les
lods
cli
xor
pushl
push
cmpsb
and
mov
stos
xor
mov
and
dec
push
adc
rorb
cmp
shrl
cmp
mov
aad
or
ds
or
push
jae
subl
xchg
mov
rorb
jo
faddl
andl
ss
push
xchg
adc
mov
bound
xchg
cmp
orb
jl
popa
or
nop
stos
in
dec
and
imull
mov
cli
aam
dec
push
xor
add
adc
stos
popf
mov
add
push
imul
sbb
mov
dec
cmp
pop
pusha
jne
and
and
test
and
cmp
cmp
fmull
daa
cmp
sbb
out
xchg
fsubrs
cmp
test
xchg
inc
movsl
xor
jb
sbb
pop
xchg
dec
pop
insb
jmp
cmp
dec
std
add
fisttpll
arpl
iret
mov
fs
pop
adc
pusha
gs
mov
stos
push
jns
call
mov
cli
cmp
fcmovne
testb
xlat
loopne
out
lock
mov
and
xor
bound
adc
cmp
add
bound
push
arpl
xchg
cmp
mov
ss
xor
test
xlat
mov
outsb
sbb
loopne
rcrb
and
push
cli
lcall
cmp
mov
fcomps
rorb
and
adc
pop
jg
lock
inc
dec
add
test
pushf
push
aas
insb
mov
out
outsb
jbe
cltd
and
push
sub
adc
mov
dec
repz
sti
adc
je
out
cmp
test
add
pop
mov
int
in
adc
xchg
adc
pop
nop
xchg
test
sub
jb
repz
and
lcall
dec
out
dec
jbe
adc
inc
push
outsb
ret
and
xor
popf
loopne
lds
adc
jmp
dec
std
stc
stc
push
pushf
xor
push
fcomps
ja
or
mov
jp
xchg
mov
dec
cmp
xchg
out
fsts
loope
jecxz
adc
shr
jnp
mov
cmp
test
fildll
push
addl
mov
dec
push
inc
xchg
pop
fistpl
lret
cmp
push
adc
mov
jo
shrl
lcall
sbb
push
and
push
pusha
xchg
subb
mov
pop
es
jl
imul
dec
je
mov
pushf
jbe
nop
into
ja
push
push
subl
aas
jp
das
mov
js
std
xchg
lods
adc
stc
adc
adc
jmp
test
clc
or
sub
out
repz
cmpsb
jo
jp
jecxz
ds
jbe
push
jne
mov
xor
scas
mov
push
movb
test
lods
add
into
outsb
pop
adc
xor
rcrb
xchg
dec
in
sbb
push
sub
adc
xor
add
mov
stc
and
cmp
test
push
push
nop
cmpsl
icebp
jne
insb
and
push
xor
adc
scas
mov
jo
cmpsb
fsts
sbb
aad
sbb
imulb
add
mov
jmp
fs
push
cs
mov
mov
stos
mov
inc
push
cmpsb
adc
dec
lret
icebp
jl
add
cmp
mov
pop
test
fidivl
cmp
and
sbb
popf
fwait
test
pop
add
js
mul
std
xchg
mov
jne
or
pop
std
stc
jecxz
add
mov
leave
cld
pop
mov
xor
je
xor
and
test
or
xchg
mov
push
dec
or
out
pop
fwait
loopne
sbb
test
jbe
or
ficoml
dec
jo
adc
jge
mov
mov
sarb
xchg
xchg
jmp
shl
sti
call
cmpsl
inc
xor
data16
rorl
cmp
pop
push
xchg
stos
fcoms
in
js
lahf
jb
inc
sbb
repz
test
xor
out
aaa
pop
js
incl
enter
lret
cltd
lock
add
fcom
xchg
inc
mov
pop
or
rclb
pushf
jb
fwait
jo
sbb
nop
xchg
and
adc
xlat
lcall
jmp
lret
lods
and
push
and
xor
fsubs
iret
or
fists
in
fs
adc
jg
push
in
cmpsl
xchg
sbb
movsb
imul
xlat
sub
int3
lret
push
test
or
add
inc
xor
popa
rcll
sub
adc
out
fistpl
popf
add
adc
sbb
fwait
mov
pop
dec
adc
jns
aad
out
ret
and
adc
push
mov
stos
xchg
push
mov
lock
shrb
inc
xchg
nop
cmp
jbe
cmp
push
mov
jmp
lods
dec
andb
movsb
cmp
push
insb
pop
fucomi
in
dec
inc
jle
mov
outsl
xor
stos
jb
adc
jge
xchg
inc
adc
sub
lods
mulb
jmp
dec
int3
in
nop
lock
cmc
pop
adc
addr16
out
xchg
mov
mov
mov
fldt
aad
shlb
pop
fdivs
stos
sarl
add
xor
in
adc
pushf
scas
jg
or
sub
dec
push
das
fimuls
pusha
aaa
stc
fstp
outsb
cwtl
loope
testl
ljmp
push
jno
pop
rcll
ret
arpl
aad
fs
loopne
add
add
fwait
and
add
inc
pop
mov
push
push
lds
movsl
es
push
outsb
mov
dec
sub
adc
sbb
adc
xchg
rcrl
lret
mov
cmp
sbb
xchg
cli
fsubr
pop
in
inc
cmp
cwtl
jne
add
lods
pop
scas
sti
je
movb
movsl
subb
shl
adc
aas
inc
imul
push
xor
mov
ret
and
jge
out
rorl
dec
push
adc
sahf
inc
aad
jno
popa
ljmp
xor
pop
cmpl
insl
mov
in
fdivrs
mov
ret
add
divb
jp
inc
int3
jp
pop
adc
adc
mov
arpl
or
mov
jno
push
push
push
dec
jmp
mov
sub
and
loop
ljmp
xor
sbb
add
pop
dec
dec
ja
imul
sbb
jns
push
or
mov
and
jmp
adc
lret
lods
and
sbb
add
push
jo
mov
aam
sbb
mov
add
cmp
and
add
dec
and
sbb
dec
adc
and
xor
push
loopne
negb
mov
scas
enter
push
mov
ret
adc
mov
nop
enter
stos
insb
or
outsl
push
fcomps
test
jns
dec
dec
jle
pop
jmp
adcb
push
adc
adc
push
dec
lods
test
dec
outsb
clc
sub
adc
mov
repnz
mov
cwtl
inc
mov
insl
xchg
and
jns
rorl
jl
fs
cmpsb
call
xor
mov
mov
inc
fsts
xchg
pop
rcl
or
and
mov
pusha
mov
in
in
daa
jbe
test
push
fs
test
ss
es
adc
mov
ret
loopne
pop
jg
dec
and
pop
out
push
pop
xchg
negb
inc
filds
stos
dec
cmc
xor
subl
out
cs
pop
xor
xchg
call
dec
outsb
imul
or
push
fldl
sahf
or
mov
adc
push
fisubs
roll
pop
mov
scas
mov
mov
adc
xchg
js
leave
in
out
sar
adc
lahf
inc
lcall
or
fbstp
shll
pop
in
ljmp
stos
cmpsb
mov
add
pop
out
sbb
cltd
sub
ret
and
fdivrl
scas
xacquire
aad
pop
jecxz
mov
std
cwtl
pop
jp
leave
mulb
sbb
pop
aad
je
cs
pop
and
mov
test
pop
je
repz
push
pop
xor
or
mov
xchg
imulb
mov
push
divb
pop
mov
hlt
inc
mov
push
pusha
or
lods
cwtl
dec
and
stc
adc
sub
mov
inc
fnsave
dec
pop
dec
sar
jno
mov
xor
getsec
sarl
lcall
je
mov
movsl
cmp
inc
arpl
aas
adc
dec
xor
ja
bound
rcr
lods
ds
adc
in
mov
sti
cmc
inc
ror
arpl
and
fidivs
xchg
enter
mov
out
push
icebp
rorl
lock
xchg
in
pop
loop
cmpb
mov
xchg
fldz
inc
cmpsb
adc
test
iret
sbb
push
fs
jb
mov
icebp
notb
in
imul
lods
je
loopne
into
mov
push
jg
test
lds
cmp
testb
adc
loopne
pop
ret
pop
cmp
sub
in
mov
pop
int
data16
push
sub
dec
inc
jp
mov
arpl
test
xor
ret
lret
imul
xor
cmpsb
insb
lahf
add
adc
xchg
and
scas
in
inc
fdiv
cmpsb
sahf
pop
clc
test
sub
lds
xchg
jge
loop
ret
sbb
ja
dec
mov
cmpsl
dec
shl
ja
mov
testb
mov
cmpsl
jbe
dec
into
adc
jns
mov
sbb
mov
cmp
outsl
or
sbb
mov
mov
cmp
xchg
shlb
leave
push
js
adc
jge
push
jno
add
jp
leave
or
lods
xor
mov
cmp
fwait
add
add
and
jp
xchg
add
js
mov
mov
jg
mov
dec
sbb
cli
movl
add
inc
and
mov
iret
je
clc
mov
cmp
scas
adc
es
pop
hlt
mov
pop
dec
je
jo
xchg
adc
icebp
jo
adc
or
fdivs
push
ret
xor
jmp
pop
add
adc
mov
and
pushf
sub
cmp
adc
pop
scas
dec
cwtl
and
or
fwait
sub
push
sbb
sahf
dec
aaa
or
inc
xchg
adc
int3
fwait
shll
repnz
mov
pop
xor
ret
popl
and
inc
add
sub
inc
pop
adc
out
hlt
les
jmp
aas
lea
clc
mov
or
int3
lret
loope
insb
rorl
inc
aad
out
pop
or
test
push
mov
sbb
jb
sub
push
adc
rcrl
jmp
aas
jbe
out
jo
mov
adc
mov
pop
or
mov
dec
and
test
or
arpl
loop
insb
ficomps
and
xor
add
insb
jb
inc
push
pop
mov
dec
push
insl
lret
sbb
mov
cmp
incb
mov
inc
mov
push
jno
in
adc
ljmp
pop
fidivs
dec
dec
add
jnp
loopne
inc
mov
sbb
xorb
and
lods
jnp
mov
xor
lods
jp
sub
call
push
cmp
xchg
add
aas
xchg
fistl
dec
jne
popf
andb
dec
decb
insb
or
adc
xchg
pop
jge
ss
jbe
imul
test
add
cmpsb
lahf
jbe
add
fwait
out
loop
xchg
push
notb
jl
pop
cmp
pop
mov
call
movsb
ds
lea
mov
or
add
push
stos
xchg
addr16
pop
jns
push
sbb
mov
lahf
xchg
inc
pop
lcall
or
jge
xor
sbb
and
pop
cmp
mov
imul
pop
js
add
das
adc
push
lcall
sbb
add
int3
cmc
jbe
mov
popa
push
lahf
imul
pop
mov
jo
pop
movsl
jle
pop
jae
add
stc
nop
jns
loop
aas
jno
fsubl
push
pop
inc
adc
adc
and
xor
scas
xorl
inc
mov
push
push
jne
aad
push
lds
ret
loopne
nop
sub
call
dec
imul
je
mov
loopne
movsl
or
std
dec
ficoms
xor
out
and
xchg
dec
pop
xchg
mov
test
cmp
mov
movsl
out
dec
inc
cmp
aas
pop
inc
fsubl
insb
pop
and
mov
out
outsl
mov
lock
call
xor
loope
mov
pop
out
data16
adc
mov
cwtl
mov
cmpsb
bound
sbb
xor
repnz
jne
sti
jg
cmp
add
mov
pop
aad
mov
cmp
adc
js
icebp
pop
jmp
cmp
dec
pusha
mov
rorl
push
pop
in
xor
mov
mov
push
outsw
xchg
nop
or
das
iret
jns
popf
mov
push
or
pop
cmp
into
inc
cmp
push
in
aas
pop
push
lret
pop
cmpsb
es
pop
inc
cmp
cld
inc
inc
push
addr16
push
jle
out
jecxz
pop
xchg
cmp
cvtdq2ps
pop
scas
dec
pop
cmpsl
aas
cltd
daa
call
aad
cli
ljmp
sbb
adc
xor
pop
sub
in
dec
sub
sub
add
dec
imul
jl
pop
xor
aam
and
dec
push
inc
inc
and
mov
test
add
daa
cld
dec
in
xchg
dec
aad
xor
fimuls
mov
xchg
push
mov
pop
jge
enter
iret
adc
add
gs
xor
inc
cmpl
je
and
xlat
xor
mov
fs
and
mov
and
ror
sbb
daa
add
mov
cmp
and
xchg
inc
mov
xchg
dec
jno
stos
push
aaa
out
jg
sbb
movsl
cmpsb
xor
jg
inc
pushf
inc
and
test
cld
das
mov
push
es
popa
fmull
scas
mov
aaa
scas
iret
inc
lea
mov
out
popf
jmp
push
sub
sarl
aas
cs
lret
pop
ds
mov
decl
ret
inc
inc
mov
mov
cmc
push
push
dec
inc
fdivrp
out
inc
ficoms
shrb
inc
and
jo
mov
gs
out
and
jl
mov
mov
jp
lret
cmc
jb
dec
mov
subl
mov
adc
sub
clc
and
push
fsubl
mov
lret
cltd
and
mov
mov
mov
gs
and
inc
sbb
xchg
inc
sbb
cmc
and
cmpsb
add
pop
cmpsl
add
inc
nop
xchg
add
mov
notl
push
mov
loopne
dec
push
push
xorl
into
and
pop
cmp
xor
mov
lahf
mov
mov
add
arpl
out
dec
pushf
in
pop
adc
sub
dec
xor
jl
jns
daa
inc
sub
sahf
pop
loop
cwtl
mov
call
clc
out
cwtl
mov
add
mov
dec
pop
jmp
mov
adc
jp
or
out
ret
jbe
and
ss
pop
lock
mov
popa
push
xchg
pop
mov
dec
or
dec
or
dec
adc
jle
les
sbb
movl
ja
or
inc
adc
xchg
add
jno
adc
bnd
inc
xor
push
push
fildl
mov
adc
push
mov
jns
mulb
adc
xchg
sbb
xchg
xchg
pop
inc
push
or
lea
addr16
fs
push
sub
bound
scas
arpl
sbb
xor
jno
inc
push
adc
pop
nop
or
out
push
mov
mov
sbb
push
lock
mov
aam
inc
pushl
push
adc
and
mov
rol
outsb
test
clc
jbe
xchg
jmp
xchg
adc
mov
loop
cmpsb
dec
sub
les
pop
dec
aad
inc
insb
imul
adc
cwtl
lcall
mov
and
mov
cmpsl
xor
adc
inc
mov
mov
mov
sti
in
je
out
jmp
pop
lds
and
cmp
out
test
xor
inc
jo
std
jle
xchg
scas
jbe
add
mov
fists
push
incb
xor
push
and
mov
mov
or
inc
push
je
je
arpl
in
fs
inc
jne
add
or
and
sbb
movsl
aam
xchg
in
mov
movsb
aad
xchg
in
lret
jbe
jbe
add
pop
nop
out
sti
icebp
xchg
sub
imul
cwtl
adc
test
call
cmc
call
mov
cmp
mov
dec
jp
cld
mov
mov
jl
inc
adc
shrl
pop
push
pop
into
into
lods
test
adc
icebp
push
int
inc
push
std
clc
sub
mov
jle
xor
addr16
and
movsl
cmc
jb
imul
shr
loop
mov
lret
jb
das
addr16
repnz
loope
imull
adc
cltd
pop
jle
std
rorl
in
inc
pop
rclb
lea
jb
cmpsl
mov
outsb
insb
insl
adc
aaa
mov
push
xor
int
mov
ret
inc
cmpsb
pop
adcl
adc
dec
jbe
sub
adc
lret
jbe
arpl
shrb
adc
cltd
pop
dec
pop
ja
jb
or
loopne
out
add
bnd
add
adc
stc
scas
stos
push
and
ljmp
lret
test
mov
rclb
or
int
ljmp
pushf
jnp
shrb
adc
pop
push
cli
popf
insb
in
lea
xchg
jmp
push
ret
xor
lds
push
and
add
iret
shll
xor
pop
jne
mov
in
iret
insl
adc
and
or
push
xchg
aad
sbb
mov
call
test
call
adc
push
dec
cmove
jecxz
mov
scas
lock
sbb
jbe
dec
xchg
icebp
ja
cmp
pop
xchg
lods
rclb
daa
ja
mov
jbe
outsb
rorb
stos
xchg
cmovg
push
dec
inc
pushl
mov
cmp
std
inc
nop
lds
dec
sarb
bound
cmp
std
ljmp
push
inc
sbb
fwait
xchg
in
jbe
lcall
out
imul
mov
mov
ss
mov
jmp
cmc
fbstp
push
test
cmp
nop
jp
pop
arpl
stos
add
fsubrs
adc
xor
iret
adc
stos
sub
sti
loopne
xor
cmpsb
fisttpl
scas
jge
xor
adc
sub
mov
mov
rcrl
lahf
outsl
rclb
fsubrs
mov
adc
xor
pop
iret
not
test
mov
and
mov
lahf
sub
pushf
inc
dec
mov
mov
outsl
push
adc
loopne
xchg
or
sti
adc
mov
xchg
int
mov
mov
and
pop
pop
aad
cs
push
int3
sbb
mov
jg
sbb
rcl
lret
dec
xor
cltd
je
nop
mov
push
bound
sub
adc
fiadds
push
cmpsl
mov
xchg
xlat
ja
into
scas
and
ss
add
or
xchg
lods
adc
mov
and
mov
enter
mov
mov
lods
andb
loope
leave
adc
lods
in
mov
icebp
push
cmp
jns
clc
add
add
ret
jno
fcomps
push
adc
iret
adc
rsqrtps
dec
jbe
jmp
xchg
loope,pn
jne
notb
xor
das
push
mov
mov
call
popa
xchg
outsl
adc
xchg
jmp
xor
lods
fisubs
mov
pop
push
les
dec
cmp
out
inc
fwait
mov
push
sbb
or
add
xchg
jl
fiaddl
aad
dec
fcomi
ljmp
mov
or
scas
out
sbb
fs
outsb
cmc
mov
pushf
jbe
push
cmp
mov
sub
idivb
insl
cltd
in
mov
pop
push
adc
or
adcb
adc
aam
dec
adc
fcomps
and
cmp
xchg
popl
pop
sub
adc
sbb
aam
mov
cmp
add
mov
mov
xchg
jbe
mov
pop
stos
adc
mov
adc
mov
lods
test
push
jae
loopne
lea
and
addr16
adc
nop
xor
and
imul
shr
push
test
mov
xor
outsl
fidivs
xor
ret
jo
out
loopne
mov
cmc
pop
test
sub
arpl
fstl
inc
out
adc
cwtl
cwtl
pop
lods
inc
and
cld
inc
cli
lea
sbb
sub
sbb
lds
jge
cmp
in
adc
test
dec
adc
push
into
jmp
jbe
jecxz
pop
jecxz
mov
lcall
inc
add
push
and
stc
or
cmpsl
aaa
dec
cld
mov
cmp
adc
add
jl
sbb
inc
shll
xor
adc
arpl
adc
jl
icebp
push
rorl
scas
push
xlat
dec
lea
mov
movsb
adc
stos
dec
lods
mov
mov
andb
mov
loope
xor
jmp
scas
adc
adcb
fnsave
adc
clc
mov
mov
push
ja
std
pop
out
pushf
adc
ja
fildl
push
mov
xchg
or
xchg
xor
cwtl
and
addr16
sbb
mov
adc
enter
insl
sub
inc
push
ret
popf
ljmp
or
sub
rorl
mov
dec
xlat
pop
sub
adc
fimuls
andb
jbe
aas
outsb
mov
outsl
insb
scas
push
or
bnd
sbb
xchg
mov
repz
test
push
pop
cld
shlb
mov
inc
adc
jl
cmp
xchg
faddl
outsb
shll
pushf
dec
in
adc
mov
jne
adc
push
mov
popf
inc
out
in
std
mov
jl
add
sub
pop
orb
aad
adc
mov
or
sub
fbstp
std
dec
mov
jmp
stos
in
imul
cmp
or
fcoml
pop
push
pop
dec
xorb
push
pushf
xchg
scas
fwait
in
pushf
cs
insb
std
mov
scas
lcall
dec
add
sub
mov
xchg
and
popf
adc
loop
mov
cwtl
jno
jbe
mov
rclb
push
loope
mov
xchg
inc
xchg
adc
sbb
icebp
icebp
cmp
es
jmp
cmp
popa
negb
sub
jbe
dec
stos
arpl
or
in
mov
jle
jns
aas
mov
sub
pop
mov
dec
aad
or
iret
in
push
gs
sub
scas
push
mov
push
inc
mov
dec
dec
jle
mov
in
in
mov
out
jnp
push
and
push
jb
pop
push
mov
xchg
fcmovnu
cwtl
ss
mov
mov
pop
mov
jbe
pushf
jge
shll
xor
mov
xchg
add
add
jae
aas
arpl
lea
out
loop
dec
inc
or
dec
fldt
pop
or
fidivl
jns
jne
movsb
mov
jp
pop
fists
or
ljmp
popa
adc
fnstenv
in
inc
lock
pop
adc
fnstsw
and
xor
stos
out
mov
mov
xor
mov
fs
jb
insl
pop
jl
inc
sarb
jns
aad
cs
sbb
hlt
xchg
ja
xor
dec
cmpsb
pop
dec
mov
mov
das
scas
and
enter
pop
rorl
mov
insl
filds
jbe
movsl
test
fdivrs
mov
mov
mov
and
and
cmpsb
imul
dec
std
xchg
test
sbb
cmpsl
xor
pop
fwait
mov
mov
inc
les
icebp
pop
and
push
sub
rclb
aas
das
inc
mov
roll
xlat
adc
std
lods
push
sti
fwait
or
cmp
lret
push
inc
je
push
mov
mov
mov
ffreep
cltd
or
xor
adc
int
lea
movsb
notb
ds
jno
inc
cmp
lds
cmp
mov
dec
adc
push
mov
test
popf
mov
xor
mov
int
push
js
sti
fwait
shl
mov
mov
inc
fisubs
vminps
mov
jb
inc
notb
mov
mov
jge
and
xchg
aaa
xor
lahf
fmull
inc
lahf
lahf
jbe
sub
jo
mov
push
adc
adc
fdivs
sub
in
sbb
ficoml
fildl
or
push
divb
dec
cmp
test
ficoms
xchg
outsl
sbb
stc
cs
ret
stos
test
imul
adc
loop
inc
iret
cmp
push
jne
clc
loope
cltd
imul
mov
inc
popf
mov
push
push
outsl
and
and
add
sbb
sbb
mov
pushf
sub
adc
or
nop
dec
xchg
mov
repz
addr16
push
adc
mov
lcall
stos
fwait
and
dec
mov
mov
mov
and
je
push
sbb
ss
mov
into
inc
lret
push
dec
cmp
mov
lea
sub
push
test
lret
mov
pop
cs
mov
inc
mov
pop
shr
push
bound
stc
jb
sub
jae
int
inc
lcall
push
adc
arpl
jp
jecxz
sbb
mov
iret
lock
mov
sahf
mov
xchg
mov
adc
das
jl
pop
xchg
test
aam
sahf
cmp
dec
mov
sub
adc
shlb
cmp
inc
xor
repnz
jae
dec
insb
push
stos
adc
pusha
adcl
imul
xchg
insl
in
or
pop
cld
dec
repz
sbb
push
scas
pusha
xchg
test
xchg
test
jae
test
jo
jmp
loopne
aad
cltd
out
jbe
xor
aad
push
jne
pop
cmp
push
outsl
inc
lret
dec
lahf
pop
test
shrl
pusha
lock
push
push
dec
jp
mov
int
popa
fs
cmp
mov
in
jnp
cmpl
cmp
pop
cli
xchg
mov
adc
push
adc
xorl
mov
jb
movsl
scas
sbb
or
and
xlat
mov
jmp
popf
outsb
js
pop
fnstcw
jnp
mov
jo,pt
xor
and
pop
int3
nop
repnz
icebp
scas
rcrl
out
test
imul
adc
mov
inc
cs
push
inc
push
sub
mov
mov
pop
nop
dec
cmpsb
mov
xchg
pusha
adc
dec
es
out
ret
jle
stc
mov
dec
iret
dec
icebp
or
pop
xor
bound
cmp
push
into
jecxz
cmp
xchg
push
mov
mov
sbb
nop
adc
imul
js
mov
outsb
xchg
mov
dec
stc
outsb
pop
cld
fisttps
out
sub
sahf
add
inc
cwtl
test
or
cld
mov
mov
scas
jno
loop
add
adc
ret
fs
es
mov
cli
jmp
or
xchg
rcrb
jnp
and
gs
mov
mov
push
stos
stos
dec
shrl
dec
in
insb
mov
aaa
sbb
jno
stc
pusha
negl
adc
inc
aam
dec
adc
sbb
adc
cli
cwtl
add
sub
push
adc
data16
aaa
push
jnp
gs
mov
in
imul
and
or
adc
loop
leave
jge
mov
push
sbb
dec
ja
ret
je
push
jecxz
fs
mov
mov
dec
jno
andl
bound
adc
icebp
mov
pop
jbe
cmpsb
adc
mov
fwait
mov
pop
mov
icebp
hlt
jbe
shrl
push
xor
push
rolb
jne
jp
icebp
dec
fadds
sub
cmp
rol
test
mov
sub
and
xor
loope
xlat
or
loop
out
adc
jmp
or
sahf
movsl
pushl
jge
pushf
mov
dec
lret
jbe
push
pop
pop
pop
mov
jae
push
subl
bound
and
xchg
or
daa
pop
sub
inc
pop
jmp
cltd
mov
bound
std
adc
inc
nop
jno
mov
xor
lret
clc
inc
test
sub
ljmp
jl
aaa
pop
adc
add
sub
jbe
pop
xchg
sbb
loop
stc
dec
aas
xor
stos
fnsave
inc
adc
into
test
lcall
dec
jge
mov
sarb
mov
mov
dec
sbb
jbe
stos
cli
adc
adc
stos
xchg
hlt
dec
mov
imul
pop
ss
fistl
adc
jl
adc
mov
repz
in
mov
ljmp
loope
out
cmp
es
mov
je
jno
into
jp
fadd
call
mov
pop
adc
xor
jb
out
cmc
xchg
sahf
cmp
xorb
call
fwait
push
aam
lret
lds
bound
add
jnp
addl
adc
aaa
jg
loop
mov
xor
pop
mov
jp
data16
add
in
std
cmc
scas
cmpsl
mov
xor
push
jl
dec
jbe
mov
xor
adc
lds
sub
std
sahf
cmp
jae
pushf
lret
std
mov
arpl
inc
cwtl
bnd
cmpsb
mov
lcall
push
mov
lret
bound
adc
sbb
push
inc
xor
test
dec
imul
cmpsl
lret
mov
int3
and
pop
push
push
jp
adc
iret
mov
xor
arpl
adc
sbb
call
mov
fcmovne
dec
ror
adc
jecxz
or
shrl
jne
and
ds
fsubrs
push
push
iret
icebp
dec
fcoms
mov
test
sbb
lret
xor
jle
mov
and
lret
outsb
insb
test
add
gs
movsl
mov
lock
ss
jbe
jns
mov
adc
mov
mov
adc
xchg
add
adc
sbb
lret
mov
lods
sahf
pop
adc
punpcklwd
dec
sbb
pop
dec
jae
jb
movsb
pop
sbb
xchg
adc
imulb
mov
int
cltd
fwait
pop
cmp
shll
enter
cmp
fldl
push
sbb
mov
and
mov
jge
jns
rolb
lcall
frstor
lret
aad
cmc
loopne
mov
test
ss
jg
loopne
in
mov
ja
call
std
xor
pusha
cltd
cmpsb
es
mov
inc
dec
mov
data16
mov
sbb
inc
mov
push
pop
fs
push
mov
inc
lock
dec
shrl
outsb
sub
jmp
fsubrl
xchg
mov
mov
jl
push
cmp
or
adc
sbb
mov
test
fnstenv
pop
cmpsl
adc
fcoml
jbe
movsb
imul
adc
loop
lret
cmp
clc
sub
mov
repnz
inc
xlat
push
xor
or
mov
adc
inc
mov
xor
sysenter
jnp
adc
into
xchg
sub
loop
out
inc
sub
lods
mov
mov
adc
adc
repz
mull
fs
mov
mov
cli
adc
adc
ret
mov
pop
imul
adc
lcall
pop
jbe
push
scas
test
in
xcrypt-cbc
cmpsl
xchg
adc
jbe
inc
movsl
movsl
xor
cmpsl
sbb
cmp
mov
lahf
into
mov
pop
loopne
pushf
push
sub
scas
push
add
mov
adc
das
leave
leave
adc
mov
mov
out
subb
jbe
pushf
divl
mov
flds
push
lock
popf
push
mul
loope
add
jb
ljmp
xor
out
js
adc
push
pop
jb
out
jae
push
lds
aaa
sbb
sub
push
fs
or
inc
pop
ja
xchg
mov
iret
dec
cmp
mov
lods
sbb
in
iret
push
mov
jbe
fdiv
inc
mov
dec
out
cli
shlb
cmpsl
ret
push
inc
ret
push
in
in
hlt
adc
xchg
andb
leave
int
insb
out
stos
clc
inc
out
push
push
sbb
pop
rclb
pop
arpl
orl
fbstp
int
insl
js
push
loop
jmp
push
adc
adc
push
aad
lcall
test
addr16
adc
pop
add
fwait
adc
daa
in
pop
leave
adc
rclb
inc
adc
xlat
dec
and
jbe
jno
or
adc
jp
leave
cmp
push
dec
sub
and
loopne
xor
imul
test
mov
test
sbb
inc
mov
or
inc
cmp
stc
and
jno
push
dec
mov
lcall
sbb
adc
orl
xchg
add
ret
push
jl
rcrb
jecxz
fwait
sbb
jp
push
shl
xchg
call
cwtl
stos
scas
mov
lock
jle
loop
cltd
lcall
cmp
jbe
adc
add
inc
lds
in
push
jbe
cmp
std
iret
cmp
adc
aaa
sbb
adc
mov
movsb
cmp
jp
xor
lret
dec
fcoml
inc
test
rorl
movsb
hlt
xor
mov
xor
pop
adc
inc
je
adc
cmp
mov
out
inc
jae
repnz
xchg
xchg
dec
mov
pop
push
xchg
int
mov
adc
xlat
jecxz
or
aaa
mov
sub
inc
jbe
sti
lods
stos
mov
fcoms
mov
or
into
addr16
jne
ja
dec
out
and
call
xchg
outsb
push
das
sub
addr16
std
rcrl
sbb
repnz
mov
dec
xchg
mov
stc
cld
fmul
das
mov
ret
add
mov
data16
mov
lar
adc
dec
lcall
push
ss
fisttps
jg
cmp
shl
cmp
dec
mov
jle
push
out
pop
cld
mov
inc
test
js
movsl
rcrl
jo
inc
jae
and
loope
imul
mov
hlt
rcrb
xor
mov
add
mov
cltd
lret
or
xorl
scas
mov
pcmpgtw
and
stc
fwait
mov
nop
add
dec
sbb
stos
jecxz
and
rcl
cwtl
mov
enter
xor
gs
jg
dec
xchg
mov
mov
sub
jmp
mov
loopne
adc
push
cmpsl
cmpsl
div
outsb
aad
movsb
leave
lea
jbe
push
or
fstps
or
ret
popa
lock
cwtl
mov
jbe
mov
loop
sbb
sub
inc
mov
push
pop
mov
jle
movsb
in
xchg
push
mov
ret
jecxz
lret
or
mov
insl
scas
jb
mov
push
mov
fstpt
lahf
mov
fs
or
dec
mov
xchg
jmp
bound
mov
pop
mov
or
adc
jecxz
xor
faddl
add
adc
enter
fsubrl
cs
sub
das
mov
push
dec
pop
mov
xchg
mov
adc
adc
push
stos
push
adc
in
ret
pop
dec
jmp
mov
and
push
push
sbb
stos
xchg
btc
mov
adc
outsb
in
cmpsb
in
ja
add
test
xchg
xchg
adc
popf
aas
adc
xchg
jecxz
clc
lea
cld
adc
pusha
test
loope
adc
and
sbb
enter
ret
sbb
add
mov
adc
xchg
dec
repnz
jbe
bound
adc
dec
lock
mov
lods
adc
iret
mov
and
lock
pop
jbe
sbb
sub
mov
dec
inc
js
icebp
imul
and
mov
dec
lahf
xor
aam
add
mov
push
add
cwtl
gs
adc
and
js
sbb
adc
cmp
loope
imul
enter
pusha
mov
push
jbe
pop
xchg
push
popa
pop
mov
push
xchg
xor
dec
mov
xor
sub
cmp
add
adc
out
push
ljmp
or
loop
js
in
add
ret
dec
lret
xor
stos
insb
and
repz
lock
or
jnp
daa
int
mov
fmulp
cli
or
dec
lahf
mov
ret
ret
mov
lds
stos
ljmp
inc
punpckhbw
xchg
inc
clc
clc
ds
fnstsw
out
adc
lods
mov
out
fbstp
mov
fs
sub
shll
xchg
inc
mov
call
outsl
cmc
lods
pop
fwait
call
test
out
lds
and
mov
xchg
sub
jbe
repz
inc
push
cmp
sub
push
rcrl
jbe
pop
ja
jae
push
pop
adc
cld
jmp
pop
cmp
lds
pop
push
inc
sub
xor
and
clc
and
and
cwtl
jmp
popa
and
rolb
xlat
out
jae
test
movsl
mov
std
push
pop
faddl
cltd
sub
xchg
pop
sbb
cld
push
push
jbe
aad
test
cld
int
or
in
adc
jo
sbbl
js
lock
adc
add
jmp
pop
bound
enter
mov
dec
sbb
mov
adc
xor
jle
arpl
pop
outsl
xor
adc
std
ss
loope
aaa
push
int3
xchg
mov
add
lea
clc
idivb
aaa
push
int
pop
cmpsb
leave
adc
out
add
outsb
xchg
mov
into
imul
dec
andl
xchg
jnp
stos
pop
and
sbb
mov
pop
xor
int
push
jp
or
dec
xchg
adc
jno
mov
mov
es
pop
icebp
or
clc
insb
jb
add
pop
fsub
mov
out
js
push
lahf
adc
jmp
and
push
imul
add
pusha
fistpl
sbb
inc
stos
cltd
sti
repnz
adc
dec
outsb
xchg
in
sahf
pusha
push
adc
dec
and
enter
cmp
mov
push
jnp
hlt
shlb
pop
clc
jbe
lods
sub
in
xchg
movsb
mov
jb
adc
jl
arpl
mov
adc
in
shrl
fnstsw
scas
arpl
push
in
sub
dec
push
loopne
mov
fnsave
sub
push
mov
jbe
mov
or
xchg
push
dec
lcall
pop
popf
call
sub
lcall
sbb
jnp
sub
mov
adc
pop
popa
mov
or
std
in
pop
jbe
push
xor
push
int
lret
xchg
addb
les
scas
aas
sbb
sbb
fiadds
mov
xor
into
test
sub
adc
push
lcall
bound
dec
add
push
test
ret
adc
lret
xor
push
push
shll
bound
loop
mov
repnz
mov
sub
fcmovbe
leave
xor
adc
add
pop
sub
push
cli
in
subl
rcrb
lods
bound
sbb
cmp
adc
dec
aam
out
loopne
cmpsl
call
sbbb
inc
cmp
lahf
ja
or
mov
ss
repnz
push
add
jbe
cs
cwtl
mov
leave
sbb
in
lods
ljmp
push
jg
bound
int
mov
test
sub
out
adc
cmpl
mov
or
pushf
jmp
xor
decl
push
adc
leave
pop
add
sub
xchg
incb
adc
mov
jecxz
mov
inc
xchg
pop
and
loop
pop
adc
popf
cmp
adc
sbb
shrb
mov
lret
shrb
jl
mov
test
daa
stos
push
lods
sub
push
or
dec
xlat
fwait
ds
fcoml
test
imul
js
orb
shrl
sahf
mov
in
push
in
stc
push
insb
cmpsb
scas
cmp
adc
sub
xchg
and
adc
mov
dec
aas
lahf
iret
mov
or
mul
inc
sbb
sbb
arpl
push
mov
mov
out
sarl
or
mov
push
sahf
je
inc
rclb
mov
push
push
and
fcoml
adc
popf
test
mov
fidivs
mov
lret
repz
adc
mov
iret
add
addl
xchg
add
jne
xchg
push
jle
inc
pop
sbb
fwait
mov
cld
shll
imul
int3
jecxz
mov
sbb
cmp
bound
mov
mov
pop
jo
jge
outsb
jno
fisttps
das
fnstenv
loope
nop
mov
xor
addr16
mov
mov
or
xchg
jmp
out
sbb
loopne
mov
adc
jo
sahf
sbb
sbb
mov
outsb
test
shrl
jbe
jle
push
cli
je
adc
inc
jne
push
push
nop
inc
add
mov
xchg
mov
pop
adc
mov
sub
lahf
scas
dec
pop
imul
mov
shrl
mov
test
in
mov
cmp
jg
adc
mov
rorb
clc
mov
sub
lock
bnd
outsb
pop
xchg
inc
push
movsl
mov
pusha
roll
adc
lods
inc
jge
notl
cmp
xchg
fisubrs
adc
repz
addr16
fistl
xchg
fwait
dec
add
andl
test
mov
pop
mov
pop
sbb
insb
jns
pop
and
mov
push
adc
jnp
or
in
xchg
pop
gs
sti
lea
jns
lock
jg
fisttpl
jbe
jbe
xchg
movsb
mov
mov
clc
push
inc
cs
xor
jg
nop
fwait
mov
loop
or
adc
iret
inc
dec
std
sub
test
int
cwtl
mov
mov
mov
loopew
pop
jbe
xchg
cmp
ja
call
repnz
pushf
or
stos
stos
mov
out
xchg
mov
pushf
sbb
mov
cmpl
rolb
pop
jnp
imul
or
movsl
adc
xor
mov
add
notb
push
adc
das
or
and
jg
andl
sub
jp
ljmp
add
mov
scas
mov
push
loop
xchg
jbe
cmp
jmp
shrb
iret
test
imul
or
jne
int3
lret
into
das
inc
mov
adc
lret
inc
or
mov
mov
testb
hlt
add
push
dec
bound
lea
and
push
stos
or
cld
mov
mov
mov
ljmp
jbe
movsb
lock
enter
xchg
pop
pop
lret
int3
enter
adc
mov
aaa
movsl
loop
adc
fcmovnb
adc
dec
jge
sub
adc
xchg
jle
pop
mov
fbstp
xchg
ja
scas
adc
out
pop
mov
push
hlt
lcall
imul
push
popf
inc
sbb
push
cmp
push
lods
adc
fadd
pop
xchg
cli
adc
in
stos
sbb
cmp
jns
nop
fs
dec
ja
mov
out
sbb
mov
hlt
dec
sbb
fildll
mov
cmc
dec
xchg
adc
or
sbb
test
les
out
and
hlt
clc
in
jg
lea
nop
mov
inc
pop
cmp
pushw
and
inc
mov
mov
pushf
inc
stos
jl
clc
mov
jle
lods
dec
xchg
outsb
jbe
pop
jo
mov
bound
out
sub
in
sbb
movb
adc
int
stc
jb
adc
popf
xor
inc
jecxz
pop
lods
jne
pop
je
mov
bound
mov
scas
ja
movsb
cli
inc
jbe
notl
lret
or
and
xor
ds
and
pop
sbb
add
cmovs
roll
testl
mov
adc
sub
cmpsl
pop
mov
je
mov
mov
mov
imul
sarl
jecxz
or
loop
int
lea
ss
into
in
in
lgs
inc
aad
mov
push
mov
mov
push
pop
sbb
jge
and
ds
lcall
orl
jae
movl
sub
lahf
mov
loop
insl
lret
cld
xchg
je
int3
dec
fildll
insb
bound
gs
pop
enter
daa
mov
sub
cs
mov
push
gs
jbe
leave
shll
jae
out
adc
daa
inc
cld
jl
imul
push
jns
inc
scas
mov
out
adc
repz
into
dec
mov
int3
push
mov
adc
push
adc
sti
cmpsb
hlt
cli
mov
mov
movsb
pusha
fstp
jbe
cmp
sahf
into
lea
dec
jae
test
dec
js
jae
imul
sub
adc
pop
pushf
cmp
scas
cwtl
test
js
xor
rcrb
call
test
mov
add
mov
jle
mov
inc
jbe
outsb
test
xchg
and
mov
cmpl
lcall
fisttpll
into
adc
pusha
aaa
cmp
mov
aad
pop
and
inc
mov
in
mov
mov
out
test
fisubs
fcomps
xlat
mov
pop
mov
inc
xchg
addr16
filds
jbe
inc
out
sbb
xor
popf
loopne
or
ds
lods
add
jle
aam
mov
rorl
jl
adc
xchg
test
mov
lcall
ja
lods
xchg
or
mov
aam
pop
adc
out
mov
mov
sub
xchg
test
loopne
dec
cmpsb
mov
sbb
fstpl
loop
adc
lret
repnz
movsl
stos
xor
adc
xchg
xchg
aam
adc
mov
notl
subb
bound
sub
push
out
insb
jmp
jecxz
enter
dec
js
xor
pop
nop
loope
sti
cmp
lret
or
add
imul
mov
movsl
mov
fisttpl
aam
mov
aas
xor
fisubl
pushf
orb
out
push
outsb
into
fs
dec
jbe
xchg
stos
popl
dec
and
scas
ffree
daa
out
push
scas
insl
insl
lods
and
inc
addr16
fsubr
pushf
and
lahf
call
aaa
add
adc
inc
call
adc
cmpsl
mov
iret
icebp
mov
adc
in
jbe
cmp
push
mov
pusha
rclb
loopne
or
xor
loopne
insl
lds
add
fildl
mov
cmpsb
aad
jbe
jl
xchg
or
fsubs
adc
test
sarl
pushf
xchg
push
dec
push
fisttpll
dec
fnstenv
mov
mov
arpl
push
jb
adc
push
cltd
mov
lret
or
test
xchg
jbe
sub
ret
jmp
mov
lea
aad
push
or
repz
mov
in
loop
stc
and
addl
push
push
pop
fcompl
sub
into
mov
jno
and
je
mov
icebp
pop
mov
cmp
in
sbb
xchg
dec
rcrl
jbe
stos
cmpb
adc
adc
and
adc
enter
sti
jne
fisubrs
ret
mov
mov
clc
adc
mov
push
mov
jne
cmpsb
fidivl
call
lods
inc
mov
and
xlat
cmp
push
lods
xor
fnstenv
dec
jbe
jae
pusha
loop
sti
jbe
jnp
fwait
stos
ja
or
xchg
mov
idivb
iret
lret
je
mov
push
dec
clc
push
pop
dec
mov
out
enter
mov
xchg
adc
mov
jle
int3
fcomi
add
pop
hlt
loope
push
mov
int3
or
enter
xchg
adc
push
mov
mov
and
ret
xchg
add
jge
jns
cmp
sahf
pop
mov
pop
push
sub
pop
jne
out
stos
mov
pop
jg
orb
sub
xor
inc
inc
lea
lahf
cwtl
adc
lock
imul
popa
sbb
sahf
sub
jb
loop
int
dec
jns
call
jns
jbe
ret
xor
fisubrl
cmpsl
adc
xchg
jbe
mov
lret
lret
fstl
inc
and
and
jge
out
cmpsb
jbe
mov
and
push
mov
pop
std
fisttps
loope
int
mov
xor
add
iret
adc
fmull
mov
mov
mov
mov
jmp
mov
mov
mov
insl
testb
icebp
orw
clc
jbe
jge
adc
ss
sub
jno
mov
rclb
and
sub
sub
icebp
cmpsl
stc
adc
sub
loop
dec
pop
shlb
xchg
lods
outsb
and
fidivl
popa
pop
hlt
inc
adc
and
adc
aas
jecxz
mov
mov
enter
jbe
jo
fwait
xor
mov
xlat
and
cmp
nop
cs
xor
stos
andl
nop
pop
xor
roll
fwait
std
gs
dec
adc
rolb
sbb
inc
cmpsl
cmp
scas
ret
push
or
sahf
stos
shrl
inc
xor
jno
inc
out
divb
pop
loopne
adc
test
or
adc
movsb
jns
enter
dec
and
push
xor
mov
ret
test
jmp
dec
fwait
mov
dec
mov
add
inc
cmc
sub
frstor
inc
js
int3
push
in
leave
mov
fdivs
mov
cwtl
jbe
stos
loop
ret
adc
call
push
repz
sub
cmp
imul
sbb
cmp
dec
lods
xor
or
mov
popa
jbe
call
sbb
enter
sub
cmpsb
mov
ret
out
lods
sub
sub
add
inc
adc
into
jns
push
mov
lahf
adc
xor
loopne
mov
pop
stc
inc
mov
pop
lock
clc
testb
in
mov
lret
not
inc
pop
xchg
in
add
out
adcb
stos
pusha
icebp
jmp
jbe
test
cmp
std
je
adc
shll
bound
push
pusha
mov
adc
in
repnz
jp
xor
stos
lea
add
jl
sbb
push
dec
rcll
jbe
inc
scas
pop
push
mov
mov
int3
cmp
lods
cmpsb
pop
nop
les
mov
push
cmc
notb
je
std
stc
mov
push
inc
loopne
jbe
aad
push
sarl
add
pusha
ljmp
cltd
add
ret
inc
call
inc
movsb
js
mov
roll
pop
mov
xchg
xchg
ss
jnp
cld
jbe
adc
add
or
fimuls
das
dec
mov
inc
push
adc
aaa
js
addr16
xorl
pop
sti
aam
out
adc
sub
adc
push
jecxz
insb
test
cli
mov
jbe
lcall
and
fsubs
mov
xor
hlt
xor
mov
cmp
dec
xchg
or
out
cmp
jb
push
mov
mov
pop
mov
fisubrs
stos
cs
mov
clc
out
cld
or
test
sbb
xchg
in
jns
clc
jne
faddl
loop
loope
mov
loop
into
lea
sub
stos
push
inc
outsb
test
mov
in
sbb
xor
mov
lahf
jno
jmp
xchg
lock
cmp
fimuls
push
and
lret
rcl
je
sti
add
fildl
icebp
mov
je
outsl
cmp
xlat
ret
aas
sbbl
adc
roll
fldenv
jecxz
push
push
inc
jge
testb
dec
sbb
xchg
cmc
loop
jbe
push
jbe
test
push
adc
xchg
push
xchg
mov
std
lock
icebp
jne
mov
cs
mov
int
push
jbe
repnz
sti
cmovns
or
and
jne
out
mov
mov
out
mov
dec
std
shll
mov
xlat
jecxz
sti
hlt
adc
fptan
mov
adc
push
dec
jnp
cltd
sub
nop
jbe
mov
dec
movsl
jns
popw
addr16
xchg
mov
lods
into
jnp
jbe
cmp
or
into
jp
rclb
inc
jne
dec
pop
sbb
jge
repz
pushf
js
pop
jl
jno
and
adc
pusha
push
lcall
mov
rclb
adc
xchg
loop
jno
test
push
adc
sbb
fdivr
in
mov
dec
mov
loop
in
add
lods
int
mov
mov
mov
xor
popa
jae
outsl
js
sarb
leave
xor
mov
add
pusha
adc
repz
mov
imulb
cmc
imul
aad
leave
insb
loopne
sbb
cmpsl
mov
xlat
aaa
xor
mov
jnp
xchg
jae
roll
inc
mov
dec
add
repz
jmp
lret
arpl
fcompl
xor
out
push
mov
mov
adc
lock
pop
adc
add
decl
sahf
push
int
and
push
imul
mov
xor
jmp
dec
out
daa
ja
int
jno
push
adc
dec
jo
cld
popf
mov
gs
and
push
mov
mov
das
fistpll
xchg
aas
push
or
fldl
lods
xchg
stos
jnp
enter
push
adc
mov
lds
or
fcompl
subl
dec
xchg
enter
lods
dec
ret
mov
std
pushf
hlt
imull
shll
lea
adc
in
lcall
pop
fists
sub
inc
pop
adc
insb
fldl
xchg
sbb
pop
xor
pop
jbe
shll
inc
cmpsb
and
or
cmp
fs
in
adc
ja
mov
fldenv
test
xor
daa
ror
scas
jbe
je
adc
ret
mov
pop
mov
jecxz
dec
add
pusha
fs
arpl
cmpsb
dec
lret
ss
sub
fucomp
mov
mov
sahf
cmp
adc
push
cmp
and
sbb
lret
adc
xchg
sti
lods
mov
and
pop
mov
aas
push
dec
sbb
lods
xchg
or
xchg
inc
jo
icebp
adc
xor
lcall
jno
and
mov
xor
mov
inc
daa
test
or
cmp
hlt
out
adc
fucomip
add
stos
cmpsl
xor
movsl
sub
ds
or
add
xchg
push
aad
fbld
mov
out
ss
xchg
adc
inc
inc
leave
inc
aam
imul
loope
and
mov
adc
dec
cmp
outsl
adc
cmc
in
test
loopne
int3
dec
outsb
ja
or
adc
cmp
data16
imul
jns
nop
ret
rorb
fdivrs
push
pop
xchg
sub
mov
cmp
jmp
adc
add
or
lds
arpl
fwait
adc
repz
insb
out
leave
jns
mov
push
imull
js
decb
and
xchg
mov
leave
cmpsb
adc
fldcw
mov
hlt
adc
stos
out
lock
jl
outsb
ror
cmc
imull
in
fsubrs
inc
dec
mov
mov
gs
push
and
lock
sbb
mov
out
ja
fcoml
add
push
sub
ret
leave
or
out
dec
mov
leave
xor
jbe
xorl
adc
imul
mov
add
std
bound
cmp
call
push
mov
jne
xchg
pop
sub
pop
repz
lret
daa
xchg
daa
mov
jl
movsl
imul
xor
mov
clc
sub
mov
jle
scas
jbe
dec
rcrl
adc
sbb
pushf
adc
arpl
jmp
push
mov
leave
mov
ret
lahf
xchg
stos
push
repz
sbb
ss
pop
jns
dec
sub
std
push
jp
adc
mov
fmulp
xchg
into
in
adc
jmp
in
push
outsb
mov
cs
xchg
fucomp
int
jp
push
outsl
mov
push
test
sti
addr16
jmp
pushf
imul
inc
xor
mov
mov
xor
xor
lahf
mov
aam
mov
push
jmp
mov
clc
outsl
mov
addl
mov
pop
xchg
mov
sub
out
setb
adc
out
testb
and
xlat
cli
mov
jge
pop
ja
cs
lds
hlt
mov
adc
mov
out
aas
stos
cwtl
xchg
dec
or
das
roll
in
mov
ret
cmp
les
mov
arpl
idiv
in
mov
out
gs
push
and
xchg
pusha
enter
ds
outsl
je
in
fwait
test
mov
aaa
xchg
add
or
xorl
and
pop
or
xchg
or
jge
imul
mov
cs
mov
fwait
inc
add
loope
pop
mov
sbb
adc
or
test
dec
xchg
mov
adc
gs
outsl
adc
mov
mov
mov
es
outsl
jecxz
xor
and
pop
mov
push
test
and
mov
jg
pop
push
jno
ja
lahf
jge
nop
test
inc
push
int3
xchg
stc
adc
or
les
pop
mov
pop
gs
adc
dec
xchg
sub
fwait
mov
mov
int
xchg
cs
pop
cmp
fbstp
sbb
mov
xor
cli
out
lret
cwtl
test
and
pop
mov
push
xchg
push
cmp
jle
fldenv
cmpsl
add
adc
fistl
mov
ds
xchg
stc
dec
out
imul
loop
add
or
sahf
mov
pushf
es
add
adc
test
lea
mov
ss
dec
pop
mov
test
mov
mov
leave
and
mov
sub
pusha
js
pop
add
shll
mov
orb
jmp
sbb
insl
push
idiv
adc
bound
popa
mov
test
movsl
xchg
ffree
fnsave
xchg
and
into
das
aaa
sti
gs
jns
gs
pop
cmp
mov
out
jno
and
test
mov
call
lcall
jns
out
enter
vpaddusw
lahf
cld
push
dec
outsl
pop
loopne
adc
adc
and
lods
movsb
push
pop
cmp
data16
ljmp
push
lret
push
rclb
icebp
jno
out
push
adc
imul
lahf
push
pop
xchg
icebp
int3
dec
lret
jne
sub
add
aas
popa
jecxz
jbe
jle
push
dec
cli
pop
adc
xchg
adc
inc
jno
and
lods
stc
mov
into
xor
jbe
xor
push
je
pop
jae
mov
rcl
sbb
inc
mov
ljmp
adc
lret
and
push
in
gs
les
std
loope
dec
add
jbe
mov
es
adc
xchg
fdivp
mov
fbld
mov
bound
int3
out
mov
std
sub
push
fisubs
jbe
fldenv
lds
mov
adc
jnp
test
lahf
jbe
pop
push
push
pop
push
inc
adc
out
pop
jecxz
mov
pushf
adc
adc
jg
add
test
cmp
sbb
dec
sbb
ds
pop
mov
test
adc
cwtl
sbb
fisttpll
sbb
idivl
stos
sub
and
cli
cltd
or
or
inc
aam
hlt
pop
addr16
sub
pop
inc
in
adc
jae
test
inc
adcl
xor
movsl
sbb
ret
inc
pop
jns
ficompl
lock
jle
sarl
test
mov
or
fwait
adc
sahf
mov
mov
aas
adc
jno
cmp
fs
aad
push
cmpsl
jo
iret
mov
dec
fmuls
adc
ljmp
fcoml
dec
repnz
mul
mov
in
into
sub
les
out
adc
lahf
test
push
lock
sub
mov
sub
mov
mov
mov
dec
push
xchg
jno
pop
push
cld
lret
adc
jl
jb
cs
outsb
enter
ret
inc
xor
or
ds
sub
lock
mov
mov
jbe
adc
aam
outsb
test
jmp
mov
dec
adc
repz
or
imul
and
mov
fsubrs
push
xchg
repnz
std
dec
ljmp
jl
cmp
in
fistpll
mov
stos
jae
movsl
mov
fists
mov
dec
push
mulb
pop
fs
arpl
pop
mov
loopne
jge
leave
arpl
jbe
stc
cmp
inc
outsl
jl
cli
jecxz
mov
in
imul
and
xchg
std
in
fnstsw
add
pop
pop
test
adc
aaa
mov
bound
mov
jno
mov
out
push
mov
mov
dec
je
lahf
icebp
lret
test
pop
jnp
sbb
loop
imul
mov
xchg
clc
sti
ret
dec
mov
pop
hlt
jno
jp
sbb
dec
dec
in
or
loope
mov
bound
ljmp
clc
adc
addr16
adc
cmp
or
adc
and
sub
rclb
lods
mov
repnz
fisttpl
repz
adc
cmp
push
adc
cmpsb
cwtl
xor
pop
mov
cmpsl
push
push
imul
mov
mov
adc
lods
pop
pop
cmp
leave
iret
mov
adc
sub
xchg
xor
mov
or
xor
imul
or
push
lahf
pusha
jbe
into
lods
adc
adc
xlat
cmp
add
nop
adc
sahf
popf
mov
jbe
mov
popl
cld
test
adc
fdivl
shll
lock
jmp
xchg
inc
cmp
adc
jge
shrb
enter
xchg
or
in
xor
pushf
clc
jbe
cld
and
aad
xor
in
insl
out
popa
pushf
daa
jne
mov
add
ds
mov
mov
mov
mul
js
mov
push
js
push
inc
or
lret
fsubs
adc
into
push
cmp
mov
out
pop
roll
adc
ret
jbe
cmpsl
push
mov
enter
rorb
or
push
out
adc
xchg
dec
out
nop
push
mov
and
les
mov
cmpl
inc
or
insl
out
xchg
je
sub
xchg
xchg
scas
jmp
ret
fsts
jns
insl
lcall
dec
mov
andb
outsb
sub
xor
sub
addl
rorb
in
sub
xchg
mov
icebp
dec
fstl
jnp
mov
dec
jns
shrl
dec
mov
jmp
jns
adc
subb
jbe
leave
addr16
add
sti
or
std
dec
int3
push
lods
jbe
and
jbe
push
adc
jmp
jno
data16
in
dec
push
xor
test
push
mov
lods
adc
insb
or
and
inc
outsb
nop
or
sub
mov
jnp
pop
add
jecxz
fisubrs
insl
push
xor
push
out
js
jbe
or
cs
xor
scas
sub
lds
pop
xchg
dec
lods
gs
xor
packsswb
stos
jge
loope
into
ja
in
push
mov
mov
or
in
movsl
or
cld
sub
scas
fdivs
movsl
int3
sub
xchg
mov
test
inc
jge
xorl
and
outsb
xor
mov
in
mov
fwait
mov
inc
in
cmc
sti
out
in
arpl
call
mov
popf
mov
arpl
fisttpl
mov
cmp
lods
and
scas
outsl
and
mov
push
mov
add
cmpsl
aaa
inc
xchg
jbe
push
rcll
adc
fidivs
xchg
push
push
negl
xchg
ss
rcl
mov
add
bound
rep
push
adc
ret
icebp
sbb
adc
scas
in
ja
adc
inc
adc
cwtl
ret
fcoms
in
sub
repnz
gs
dec
sbb
inc
sti
sbb
pop
xchg
inc
es
ja
js
insb
adc
sbb
lret
jl
test
pushf
add
jl
lods
lods
ja
aaa
cmpsl
dec
dec
mov
mov
pop
fisubrl
pop
cmp
adc
sbb
adc
adc
mov
sub
add
xchg
mov
adc
xor
push
out
orb
jno
mov
fiaddl
inc
sbb
je
or
outsb
mov
addl
std
insb
jle
int3
xchg
mov
popf
cli
imul
lock
xor
nop
movsb
xor
xchg
sbb
in
shlb
push
and
adc
imul
loop
sbb
lock
mov
lods
jnp
scas
mov
xchg
add
imul
pop
jmp
nop
ds
out
lret
mov
enter
mov
push
xor
mov
mov
cmp
jl
add
add
and
ss
push
out
es
adc
out
hlt
loop
mov
mov
adc
sbb
ja
sub
cmp
scas
cmpsl
push
cltd
and
cmp
push
orl
inc
mov
paddq
popa
xchg
lcall
arpl
cmpsb
je
je
inc
fs
lahf
sub
jge
dec
into
sbb
aaa
stos
pop
ljmp
icebp
jno
das
cli
mov
ret
jl
cmpsb
rcrl
mov
orb
xchg
pop
dec
repz
inc
lea
mov
lret
jo
inc
jns
ss
pop
dec
sub
adc
insb
push
cmp
mov
jnp
popa
fidivl
fidivs
push
leave
loop
xlat
sub
ret
push
mov
negb
imul
add
sbb
and
sti
mov
push
aad
lods
push
loopne
or
cwtl
adc
cltd
fbstp
pop
push
mov
mov
cmp
inc
inc
or
xor
lock
xor
inc
daa
sarb
das
dec
push
pusha
int
xchg
cmp
nop
jle
jb
add
mov
adcl
outsb
mov
or
rcrl
push
add
jecxz
clc
xor
push
jnp
mov
add
push
jle
rorl
fistl
sub
xor
mov
or
xlat
xchg
ds
inc
aas
imul
or
fistl
insb
into
cmp
and
fsubl
jbe
push
xchg
pop
pop
push
push
adc
cmp
mov
add
and
adc
jp
lahf
jne
je
mov
shll
push
test
pop
jmp
jg
pop
aad
cmp
lahf
jb
adc
jbe
int
push
mov
fucom
xor
adc
imul
mov
add
and
adc
jecxz
dec
aad
pop
dec
dec
jo
jae
jae
adc
jo
adc
jp
nop
adc
inc
mov
xor
or
inc
push
push
sbb
fcomps
push
test
ret
cld
adc
test
rcll
out
jb
data16
dec
stc
and
stc
rorl
ret
mov
negb
and
xor
xor
push
sti
sub
mov
pop
in
inc
lds
icebp
xchg
xchg
xorl
mov
and
mov
jb
test
adc
jp
pop
mov
xor
dec
out
push
popf
sbb
or
nop
movsb
sbb
add
pop
das
pop
dec
push
stos
outsb
leave
cmp
add
mov
inc
iret
insb
push
jmp
jb
inc
ja
jae
imul
mov
cwtl
lea
sub
xor
cmp
sbb
jb
push
aas
mov
icebp
std
cwtl
jbe
mov
cwtl
mov
jg
mov
dec
popf
and
add
lock
aam
fsubs
or
xchg
rolb
scas
repnz
xchg
adc
testb
adc
adc
aam
sub
and
cmp
inc
stos
movb
jns
cmp
test
fimull
mov
and
jg
mov
daa
push
test
in
or
inc
shlb
stos
mov
loop
cmp
cmpsb
ljmp
hlt
push
cs
lcall
aaa
sahf
mov
cmp
insb
pop
je
inc
cmpsl
inc
stc
mov
xor
jmp
mov
inc
add
xor
adc
or
add
jbe
pop
jo
fisttpl
leave
sub
push
or
sbb
stc
jo
push
add
inc
lahf
aam
dec
into
and
rcrb
mov
movswl
push
popf
xor
push
popf
test
mov
lods
adc
adc
inc
insl
jmp
leave
lds
scas
sub
nop
dec
int3
nop
or
adc
insb
cmc
or
jae
jge
add
or
adc
scas
outsl
mov
mov
jl
jo
jbe
mov
push
cmp
dec
mov
push
adc
aam
add
test
loope
imul
stc
jbe
push
sbbb
arpl
jns
scas
es
into
bound
mov
sub
xchg
adc
out
rorl
sarl
pop
or
or
mov
push
inc
addr16
push
or
xor
or
jecxz
sbbb
test
inc
push
js
aam
jge
in
test
push
scas
add
repz
push
sbb
aam
stos
rorl
jne
jbe
and
sbb
test
sbb
adc
scas
adc
jbe
dec
stos
adc
jmp
lds
jo
cmp
xorb
jbe
leave
adc
bound
sbb
adc
rorl
stos
aam
scas
popa
adc
sbb
nop
jle
test
and
adc
cld
cmc
ret
imull
mov
scas
sub
mov
rcl
stos
xchg
mov
rclb
adc
xchg
shlb
adc
xchg
ror
cltd
mov
mov
lods
sahf
xchg
lahf
cmc
loope
jbe
jg
xor
or
jecxz
mov
sub
mov
mov
adc
lods
aad
jmp
sub
jbe
dec
idiv
repnz
inc
mov
adc
xor
les
cmp
sbb
adc
jmp
sub
add
and
fisubrs
mov
push
adc
pop
in
test
push
rcll
adc
or
cmp
out
or
shrb
dec
push
stos
bound
jmp
mov
or
ret
sti
or
pop
enter
sub
mov
shll
adc
ret
and
jmp
cmpsb
push
loop
sub
adc
mov
add
movsl
push
ja
xor
lret
clc
insb
loop
cmc
mov
repz
repz
inc
test
push
nop
out
mov
adc
std
cmp
ret
mov
xor
mov
loopne
pop
test
mov
xchg
jae
not
call
jge
push
sbb
adc
imul
inc
repz
mov
jl
adc
leave
push
data16
push
and
ficoml
pop
sbb
mov
out
ds
mov
mov
mov
add
or
lret
test
in
gs
out
add
rorl
insl
clc
fldl
cwtl
aas
xor
push
xchg
sbb
loope
negb
adc
mov
adc
jmp
inc
ja
sub
lcall
dec
mov
cmp
cmp
js
mov
add
fcoms
movsb
pop
mov
sbb
sbb
les
mov
out
jne
xor
xchg
inc
jbe
mov
loope
lret
inc
lret
adc
in
pop
pop
arpl
mov
adc
aam
daa
scas
and
or
aam
push
pop
inc
mov
mov
add
dec
jbe
out
popa
shl
icebp
adc
jge
shrl
sbb
add
imul
mov
or
out
dec
sarl
icebp
cltd
out
ficomps
adc
outsb
adc
mov
sub
movsl
inc
inc
mov
or
push
insl
xchg
cmp
jbe
adc
lcall
inc
insb
rdtsc
fwait
jp
mov
stos
cmp
push
ja
cmp
jbe
fbld
repz
xchg
std
enter
ffree
clc
ja
pop
jb
sub
cmp
int3
lods
mov
sub
adc
lahf
sbb
lock
lret
divl
loop
jno
jne
call
lahf
dec
shl
lds
loopne
loope
loop
dec
cmp
insl
out
adc
outsb
mov
push
pop
stos
jo
mov
sub
xchg
popf
pop
cmp
mov
sub
mov
and
or
sbb
dec
rolb
mov
push
stos
aaa
push
jge
push
dec
loopne
sbb
lahf
mov
adc
and
adc
sbb
fisttpll
pop
dec
pop
jbe
sub
popa
test
mov
in
call
push
pop
repnz
dec
pop
mov
rcrl
ja
js
jno
ret
test
mov
ja
mov
cmpsb
lods
sub
fwait
push
and
or
pop
xchg
jnp
or
test
and
jbe
lahf
stos
addr16
test
imul
and
dec
xchg
inc
mov
fildl
mov
test
pop
lods
xor
repz
cli
and
push
mov
dec
test
xchg
xor
addr16
dec
xchg
pop
xchg
push
shr
cmc
leave
pop
adc
loop
in
mov
ss
pop
inc
stos
cmpsl
mov
mov
adc
push
add
fidivrs
push
lret
jbe
xor
stos
push
adc
mov
pusha
lcall
ss
sahf
mov
pushf
push
out
lcall
maskmovq
negl
mov
int
jp
ja
sbb
mov
push
dec
xchg
jmp
dec
fdivr
fsubs
in
fdivs
popf
and
decb
in
pop
shrb
xchg
fsubr
dec
pop
push
push
mov
adc
adc
rcrl
test
or
jnp
dec
fprem1
adc
jbe
cmp
or
jnp
add
push
daa
push
pop
or
mov
cmpsb
jp
mov
stos
cli
dec
cmp
jbe
push
sahf
ret
int
andb
stc
push
negb
mov
andb
adc
and
pop
pushf
shlb
jbe
and
inc
adc
pop
orb
jbe
loop
cs
popa
mov
sub
pushf
js
mov
mov
inc
pop
cmp
xor
pop
adc
lods
cmpsb
aad
xchg
pop
sub
std
jo
jne
imul
inc
mov
std
pop
or
jbe
or
jns
adc
movsb
push
cmp
pop
xor
dec
mov
push
scas
xor
sbb
mov
mov
mov
ss
lock
push
out
push
aaa
sbb
jno
or
adc
inc
mov
jae
loop
lea
pop
jmp
ss
push
mov
adc
sahf
movsl
cmp
mov
xchg
lret
je
mov
push
lods
lock
mov
inc
flds
pushf
adc
mov
sahf
subb
or
idivl
fbstp
mov
push
mov
cmp
add
mov
pop
and
fs
inc
repnz
adc
mov
mov
jnp
jo
adc
sub
mov
test
dec
adc
mov
insb
fcomps
pop
xchg
jbe
out
lea
and
adc
jb
ss
mov
adc
mov
xchg
pop
jmp
xchg
cld
les
xchg
sub
adc
push
outsb
xorl
pop
mov
and
test
nop
sbbb
jmp
push
mov
int
pop
fiadds
or
jbe
sub
jmp
pop
adc
xchg
popa
sbb
decl
lcall
arpl
scas
sub
js
testb
xchg
push
pop
mov
mov
outsl
dec
mov
dec
adc
xor
mov
aad
jns
iret
imul
enter
cmp
repnz
orl
mov
dec
jg
dec
int
std
fstps
sub
mov
mov
mov
xor
mov
sub
cmp
js
outsl
adc
sub
mov
push
adc
sti
out
adc
addb
mov
inc
push
inc
lock
cld
mov
pop
xchg
jmp
shll
jle
out
dec
sarl
lds
adc
or
lods
mov
add
dec
inc
scas
cli
jbe
cmpsb
adc
xchg
scas
pop
push
and
jle
jbe
xor
sub
push
cmp
aaa
fcoms
pop
xchg
push
xchg
xor
and
sbb
repz
mov
inc
dec
cs
jo
daa
mov
xchg
or
cld
sahf
mov
data16
iret
and
sbb
ja
or
push
adc
ret
addl
inc
sub
adc
or
sbb
inc
out
adc
xor
call
and
sub
hlt
push
dec
adc
test
xchg
outsl
lcall
bound
fdivs
mov
inc
sub
or
jle
push
inc
cmp
pop
daa
cmp
inc
out
shll
leave
loope
std
jp
out
cmpsb
stos
pop
bndldx
jo
or
or
sub
out
rcl
adc
jbe
aaa
mov
sbb
pop
mov
popf
fisubl
dec
jbe
cli
or
sahf
pop
stos
or
lods
mov
xor
lods
jbe
mov
fimull
push
loopne
adc
lret
push
mov
in
popf
cmp
imul
xchg
outsl
and
sub
pop
lahf
pop
int3
jecxz
adc
sub
imul
mov
outsl
pusha
lods
inc
adc
add
mov
xor
push
jle
dec
int3
stos
lods
push
out
je
nop
sbb
int
mov
imull
out
mov
inc
xchg
mov
lock
in
movsl
pop
inc
loope
insb
jbe
pop
push
repnz
lcall
adcl
sbb
lods
fbstp
xor
lahf
das
add
jl
cmp
add
daa
lds
clc
jbe
leave
stos
sub
fyl2xp1
and
dec
pusha
and
ja
push
pop
insb
jbe
push
sbb
divl
lods
pop
adc
xor
lret
mov
loop
cmp
scas
mov
out
inc
cld
rolb
adc
and
fadd
push
clc
mov
pusha
insb
lds
pop
jbe
nop
stos
inc
sahf
and
rorl
adc
mov
das
mov
gs
andl
pop
mov
int3
and
imul
xchg
out
adc
inc
sti
push
mov
fs
jbe
ret
test
frstor
pusha
push
sbb
adc
pop
jecxz
mov
mov
sbb
adc
mov
test
rorb
mov
cs
arpl
jbe
addl
adc
mov
add
ljmp
mov
shl
leave
notl
jg
inc
aas
cli
xchg
jns
adc
jg
mov
xchg
out
xor
scas
jbe
jo
movsb
sti
adc
inc
adc
dec
pop
icebp
adc
cmp
sub
call
pop
and
mov
lahf
mov
adc
inc
imul
das
leave
testb
inc
ljmp
ljmp
mov
push
xchg
sarl
adc
jne
int
jb
imul
pop
sarb
arpl
cmp
jmp
jae
xchg
add
sub
push
insb
dec
ficoms
inc
notb
jmp
aam
adc
int
sub
stos
shll
jno
sbbb
outsl
cltd
jns
loop
popa
sbb
addr16
pop
mov
dec
xlat
dec
outsb
adc
lcall
or
push
mov
cli
sub
ljmp
out
jbe
inc
xor
pusha
mov
mov
or
pop
nop
out
jbe
push
cmc
lods
sub
adc
arpl
adc
pop
adc
enter
js
dec
mov
push
aaa
in
pop
xor
add
jne
push
mov
cmp
mov
sub
les
setnp
addr16
push
dec
sub
and
out
lock
push
imul
testb
xchg
push
fnstenv
adc
inc
adc
sbb
fsubrs
out
cltd
test
dec
int
stos
mov
xor
push
mov
lret
and
and
or
xor
sub
pop
mov
daa
mov
popf
push
shll
cwtl
cmc
lea
adc
ror
pop
dec
sti
mov
mov
jmp
cli
jbe
test
fcoml
fcmovbe
iret
mov
lahf
mov
sbb
outsb
stc
movsl
addr16
mov
adc
lock
mov
and
jecxz
imul
scas
movsb
pop
adc
enter
mov
adc
repz
popf
clc
mov
daa
mov
imul
cmpsb
insb
mov
mov
jne
test
mov
cs
je
jge
pop
jbe
hlt
adc
cmp
pushf
call
pop
lods
hlt
dec
mov
iret
fcompl
lahf
push
sub
or
cmc
adc
dec
pop
scas
xchg
sub
loop
sub
fists
test
stos
push
mov
paddsw
leave
xchg
xchg
movsl
xorb
xchg
inc
dec
std
popf
jbe
sbb
inc
xor
test
ja
lods
into
adc
in
movsl
mov
scas
mov
dec
sbb
xchg
mov
jmp
push
icebp
jo
out
cmc
stc
jl
push
adc
loop
mov
into
cmp
mov
mov
push
xchg
and
test
xor
lock
push
adc
adc
or
sub
leave
stc
test
mov
test
adc
out
mov
je
xor
xchg
cmp
inc
mov
adc
xchg
out
xchg
scas
mov
sub
sbb
rorb
mov
xchg
data16
leave
add
fadd
notl
xchg
out
mov
pushw
out
jle
dec
jbe
aad
sub
in
icebp
fwait
sub
sbb
sub
icebp
imul
push
cmc
iret
adc
subl
mov
cmp
add
dec
cld
sub
dec
cmpsl
sub
xorl
imulb
sbb
mov
adc
fcmovnu
sahf
lods
inc
dec
adc
push
add
cmp
mov
push
mov
arpl
sbbl
adc
jns
cmpsl
sub
cli
in
push
dec
in
mov
sbb
call
js
inc
xor
adc
mov
bound
fdivr
adc
push
lcall
scas
or
mov
mov
xor
lea
sahf
leave
shld
rcl
sbb
data16
sbb
or
aas
pop
jmp
adc
sub
cmp
repnz
shrl
pushf
jbe
add
or
out
xorl
add
xor
cwtl
sub
aam
mov
stos
ljmp
cmp
in
out
in
pop
mov
mov
inc
sbb
xor
icebp
jbe
dec
cli
out
adc
dec
daa
jg
dec
dec
and
xchg
push
lods
stos
cld
sbb
or
ficompl
int3
pushf
nop
adc
lods
aaa
popf
leave
sti
aas
mov
sub
int3
mov
aaa
jae
das
cmp
inc
stos
mov
scas
add
and
jle
jo
push
inc
das
cmp
repnz
int3
add
xchg
mov
and
icebp
pop
test
nop
imul
repz
dec
jne
push
and
adc
cltd
mov
cld
stos
adc
scas
push
mov
dec
xchg
iret
push
dec
sbb
pushf
mov
adc
sbb
lods
test
stc
movsb
insb
out
outsl
jbe
pop
pop
daa
adc
test
cwtl
push
stc
cmp
inc
subl
imul
negl
hlt
push
shll
cmpps
ljmp
out
fmull
cwtl
sbb
sbb
mov
adc
int
inc
mov
push
arpl
pop
loop
in
outsb
or
jle
jo
mov
jbe
dec
xor
cld
sbb
loope
xchg
push
mov
push
in
f2xm1
jp
push
ljmp
push
sti
clc
adc
adc
pushf
les
adc
and
mov
ret
pop
jb
xor
adc
cmp
pop
aam
jmp
ficoms
jbe
jmp
je
mov
in
and
jmp
mov
mov
xchg
lods
xchg
fsub
mov
cmp
jecxz
popa
adc
adc
addr16
cmp
aaa
repnz
cld
adc
xchg
add
stos
mov
mov
mov
pusha
jp
xchg
jbe
dec
popa
lahf
adc
cwtl
mov
cmpsl
push
xor
addr16
ja
fldl
xchg
or
mov
loope
lock
icebp
out
jbe
mulb
pop
pop
lods
fwait
icebp
inc
sub
insl
xlat
mov
add
push
bound
jmp
imul
test
shrl
test
sbb
xor
scas
stc
scas
fcoml
adc
jp
mov
adc
or
test
sub
test
sbb
clc
insb
call
adc
dec
sbb
adc
sarb
push
testb
jp
sahf
pop
imul
pop
int
pop
gs
pop
sub
sti
mov
jbe
jle
jmp
pop
mov
mov
out
jb
mov
imulb
mov
in
adc
push
dec
or
xchg
adc
lock
rcrb
loope
loop
adc
mov
adc
inc
and
or
test
insb
add
mov
jo
push
adc
xchg
enter
adc
lock
lret
mov
aaa
in
adc
repnz
push
and
jle
jmp
mov
mov
mov
mov
pop
pop
adc
out
push
sbb
jbe
add
jmp
call
mov
add
lret
adc
shrl
outsb
cmp
pop
std
stos
les
cmpsb
movups
jmp
cmc
xchg
das
xchg
mov
mov
rclb
mov
iret
inc
adc
dec
test
inc
pop
adc
xor
movsl
cwtl
add
push
jbe
pop
mov
xchg
adc
outsl
into
and
dec
adc
pop
or
or
mov
xchg
jbe
jg
jl
xor
mov
icebp
sub
inc
sarb
jmp
outsb
test
in
jns
movsb
mov
movups
mov
imul
movsl
adc
pushl
out
adc
add
shll
scas
and
mov
cld
push
lahf
pop
popf
fcoml
push
scas
sbb
addr16
jbe
mov
lods
and
adc
sub
sub
sarl
or
out
js
xchg
shrl
push
add
leave
jo
push
mov
adc
sbb
in
xor
adc
mov
dec
jle
fwait
mov
js
or
icebp
mov
adc
push
aam
mov
movsb
shr
es
adc
mov
push
mov
xlat
mov
jecxz
fdivl
imul
loop
popf
cmp
icebp
push
sub
shrb
lcall
popf
adc
test
into
loop
loopne
pop
adc
cmpl
fistl
jle
das
je
insl
jge
mov
pop
das
aam
cld
sbb
xor
adc
enter
fnstenv
mov
jp
adc
dec
push
repz
jnp
sub
fwait
jnp
mov
je
xchg
aas
test
fstps
and
rcll
adc
xchg
and
adc
mov
popa
mov
mov
and
mov
adc
out
or
icebp
pop
jmp
out
jg
fistpll
adc
xchg
into
dec
push
or
pop
icebp
add
idivl
cli
mov
inc
lods
fs
jno
inc
mov
dec
sub
jbe
lahf
loopne
jo
adc
adc
jmp
addl
icebp
pusha
mov
push
xchg
cmp
xchg
push
sub
rolb
cmpsl
mov
dec
mov
mov
pop
pop
clc
jbe
mov
lcall
add
jp
dec
xchg
xchg
adc
add
adc
cs
pop
mov
and
mov
pop
into
call
sahf
sbb
xlat
ret
cmpsb
mov
xor
mov
dec
xchg
sbb
pop
roll
ss
and
and
fildll
rol
fwait
mul
dec
repz
push
sub
lods
mov
pop
fisttpll
xor
adc
sub
scas
jp
adc
add
lcall
lock
out
sub
pop
jo
jl
pop
dec
push
jb
add
jl
sbb
loop
sbb
test
adc
ja
aad
xor
add
xchg
adc
gs
pushf
or
scas
leave
and
xchg
or
in
push
jmp
jmp
adc
xor
pop
adc
popa
sub
sbb
test
mov
or
orb
jle
xchg
outsb
cmp
sub
sbb
sbb
rorb
mov
scas
inc
inc
inc
pop
adc
ds
mul
push
push
push
adc
cmpb
js
add
push
fadds
pusha
test
xor
jmp
sbb
and
jg
repnz
jbe
adc
rcrb
je
mov
adc
outsb
add
pusha
imul
les
dec
cmc
fildl
adc
out
lret
cmp
ds
scas
stos
jbe
cs
inc
add
imul
addr16
sub
xchg
and
enter
dec
xchg
jbe
testl
adc
xchg
sahf
cwtl
adc
pop
dec
adc
jb
dec
pushf
lret
inc
aam
mov
lods
pop
xor
or
in
andl
mov
gs
dec
iret
nop
dec
jno
ja
outsl
das
shr
imulb
pusha
mov
and
cwtl
data16
adc
pusha
lock
out
fdivl
lds
or
lds
mov
out
dec
mov
jbe
jbe
cmp
push
imul
jne
popaw
pop
mov
neg
pop
stos
xchg
lret
jno
lea
jo
jo
inc
adc
pop
xor
ja
xchg
dec
xchg
jecxz
int3
cltd
data16
add
mov
negb
cltd
stc
mov
lret
data16
jbe
lock
lret
cld
ss
adc
sub
add
dec
mov
movsl
outsl
inc
mov
mov
push
dec
dec
xchg
pop
or
test
adc
gs
imul
pop
cmp
shrl
stc
or
jne
mov
sbb
push
ja
outsl
or
mov
mov
je
addr16
nop
and
or
adc
adc
jmp
push
adc
pop
add
jg
jg
push
jg
adc
adc
addr16
jo
cli
fists
pop
dec
push
sub
mov
sub
adc
cmp
jge
pop
jbe
fwait
sarl
push
and
and
lahf
jbe
sub
and
lea
cmp
std
xlat
and
jbe
cld
and
fidivs
adc
mov
jbe
mov
mov
xchg
or
ret
js
xor
fmul
xor
xorl
in
sub
loop
mov
leave
std
jbe
stc
add
or
jnp
cmp
push
xor
sub
sti
int
or
mov
scas
mov
jbe
mov
jno
inc
adc
adc
sbb
std
cli
roll
adc
mov
in
lret
xor
sbb
mov
cmp
shl
mov
je
lods
jne
inc
sbb
jb
xor
das
rorl
inc
aad
gs
pop
movsb
pop
jae
fadds
insl
push
inc
add
add
insb
aas
jbe
mov
mov
stc
push
mov
lahf
jmp
mov
dec
jbe,pt
pop
mov
sbb
stos
adc
add
nop
lret
arpl
dec
sti
cmc
or
dec
inc
out
add
fdivr
int3
sarb
inc
notl
out
sbb
dec
les
adc
icebp
mov
xchg
cmpsb
adc
std
ss
das
and
jae
adc
divb
iret
std
jp
mov
cmp
stos
mov
mov
in
test
xchg
hlt
andb
sub
loop
mov
xchg
jle
mov
jbe
das
jecxz
jb
adc
call
adc
push
idiv
jb
aad
loopne
xor
mov
movsl
jne
cmp
or
sub
pop
aad
loopne
fs
cmp
jp
mov
addl
scas
adc
sahf
outsb
sub
hlt
adc
nop
imul
mov
mul
pop
jbe
dec
ret
add
dec
mov
sar
jle
or
arpl
dec
xor
aaa
mov
mov
mul
les
aam
dec
lret
in
push
and
pusha
jae
movsb
dec
out
pop
pusha
mov
inc
loopne
stc
push
push
and
mov
jle
out
dec
jbe
rcr
xchg
cld
mov
jbe
outsl
inc
mov
xchg
js
add
mov
add
std
in
push
mov
pop
enter
out
cld
mov
pop
or
or
in
fisttpl
mov
pusha
loop
clc
push
jns,pn
push
rcll
in
testb
scas
dec
lcall
push
shll
jno
dec
cld
inc
jbe
mov
pushl
xor
mov
push
pop
mov
push
lahf
and
mov
daa
pop
enter
mov
cmc
and
push
or
loopne
sbb
out
adc
xor
xchg
adc
test
mov
adc
adc
faddl
cmc
mov
mov
mov
xor
test
push
ds
xchg
addl
mov
pusha
mov
mov
xor
int3
inc
add
decl
and
arpl
in
adc
aas
sti
insl
stos
jns
mov
ss
lret
jmp
loop
pop
pop
test
mov
mov
ja
jae
clc
push
xchg
dec
scas
mov
pop
rclb
mov
cli
in
dec
fstpl
mov
sub
sub
push
enter
decb
and
movsl
sub
add
or
lods
aas
dec
jl
mov
iret
enter
pop
push
fmuls
adc
sti
mov
sbbl
scas
movsl
lock
sub
mov
add
add
mov
ja
fwait
xchg
xchg
cmpsb
xorb
pop
nop
add
mov
jb
lock
xchg
enter
jbe
loopne
push
sub
punpckhdq
mov
sbb
lret
xor
jbe
xor
ja
xchg
mov
ss
push
iret
push
jbe
mov
push
repz
sub
cwtl
test
clc
es
adc
pop
and
jae
jae
or
fistps
sub
sub
push
inc
jbe
lods
fs
xchg
cmp
mov
mov
cmpsb
sub
pushf
ficomps
jmp
adc
dec
jbe
icebp
mov
jmp
stos
mov
outsl
and
add
fdivs
not
popa
inc
lock
push
cmc
lahf
mov
jmp
push
xor
daa
das
lock
lods
xor
adc
mov
adcb
jo
ds
lea
cmpsb
inc
sub
orb
icebp
scas
adc
push
jl
xor
fimuls
lods
sbb
xchg
arpl
fidivl
adc
adcb
or
lahf
ret
mov
lea
push
sbb
add
ffree
lods
ror
rorl
and
push
out
sub
lcall
mov
insl
shll
push
adcb
xor
call
mov
xchg
push
mov
xchg
and
dec
jbe
pop
pop
pop
fsubr
fs
adc
arpl
inc
into
dec
add
fistpll
cmpsl
dec
sbb
test
aad
sub
pop
push
jns
mov
push
mov
jae
xchg
sbb
cs
dec
adc
cwtl
imul
push
adc
out
dec
outsl
ljmp
mov
cmpsb
sub
adc
push
lock
or
lcall
pminsw
out
inc
popa
adc
pop
rcll
in
lods
jbe
iret
fxrstor
xor
lds
adc
dec
pushf
mov
mov
arpl
inc
mov
push
lea
or
out
lcall
imul
adc
jno
inc
repz
mov
inc
test
xchg
push
mov
fwait
cmp
and
adcl
pop
dec
jo
jns
loope
je
neg
fadds
in
mov
adc
pop
addps
cmpsb
jbe
add
mov
adc
rcrb
daa
adc
movsl
jmp
mov
into
xor
in
cltd
outsl
dec
test
sbb
scas
inc
out
aaa
adc
daa
mov
js
sub
data16
xchg
push
mov
fistl
push
repz
xchg
mull
scas
xchg
lods
inc
mov
adc
insb
es
aaa
and
pop
sbb
cld
lods
inc
pusha
jbe
mov
ret
jg
std
outsl
mov
push
dec
rolb
lret
jbe
lcall
sub
dec
lock
in
xchg
pop
jne
sub
mov
pop
hlt
loopne
mov
rorl
hlt
lret
loopne
cmp
enter
cmp
adc
xchg
push
inc
gs
out
rcll
xchg
mov
adc
mov
cld
test
adc
mov
mov
add
repnz
mov
repnz
xchg
push
xor
xchg
and
sub
adc
mov
test
lea
ds
adcb
in
sbb
pop
ljmp
mov
and
aaa
pop
test
movsb
mov
in
xchg
inc
in
sbb
pop
dec
xor
scas
xchg
data16
fsubr
out
scas
cmp
pop
jbe
jge
jle
adc
xchg
fnsave
out
adc
popf
mov
xchg
fs
adc
daa
sbb
aad
cmp
mov
cmp
inc
mov
mov
mov
pop
insl
cmp
movsb
push
jo
aas
sbb
adc
icebp
sbb
lods
push
ret
lock
mull
pushw
out
imulb
dec
sbb
lcall
sub
mov
icebp
lock
ret
or
cmp
pop
or
ret
and
mov
lock
cmp
adc
lods
ss
adc
cmp
imul
pushf
push
mov
stc
push
jbe
cmpsb
xchg
add
fwait
jl
adc
mov
xchg
jmp
sub
js
sub
pop
cli
in
push
popf
js
cmp
out
fsts
adc
adc
jecxz
mov
jbe
pop
and
push
adc
loopne
fidivl
std
std
jg
jbe
mov
cs
stos
shrl
pop
sbb
and
push
xor
mov
inc
mov
repnz
xchg
scas
lds
test
sub
cmpsb
sti
loopne
lcall
pop
mov
inc
jbe
ret
cmp
adcb
mov
sub
dec
push
mov
roll
cmc
adc
jo
mov
mov
jno
push
add
dec
push
out
pop
lret
fsubrl
ss
fcmovu
jbe
popf
pop
movsl
cmp
dec
and
aam
add
adc
or
repz
pop
mov
nop
xchg
adc
sbb
mov
push
pushf
dec
sahf
in
orl
and
pusha
lods
daa
adc
dec
pop
add
inc
cmp
scas
or
inc
insl
int3
jb
xor
jbe
and
loopne
cmp
call
fcomi
xchg
loopne
xor
sub
pop
outsb
push
leave
push
sahf
adc
mov
sarl
sub
pop
push
rcrb
inc
dec
js
xchg
jg
jno
inc
in
lods
mov
sbb
adc
dec
mov
dec
add
adcl
scas
cmp
ljmp
jle
mov
jbe
mov
inc
xlat
adc
add
das
adc
aas
or
leave
jp
ret
repnz
pop
loope
ret
stos
scas
and
pusha
ficoms
lcall
push
outsl
scas
adc
in
pop
test
loopne
out
cmp
stos
in
jg
dec
movb
push
inc
out
jnp
notl
mov
pop
int
push
jg
xchg
fldenv
test
leave
pop
or
ja
imul
pop
mov
push
adc
out
loopne
jbe
adc
lods
push
xchg
bound
cwtl
mov
pushf
call
fucomp
mov
dec
sti
test
sti
adc
or
int
xor
mov
lcall
mov
repz
and
cmp
pcmpeqw
outsl
mov
js
sbb
pop
pop
jbe
adcb
out
dec
adc
out
fisttpll
adc
mov
mov
stc
out
out
dec
jb
jae
xchg
incb
inc
xchg
addr16
outsl
pop
mov
out
jae
jbe
cmc
aas
cmp
push
add
pop
pushf
ja
sbb
mov
sub
stc
add
mov
lea
mov
ret
adc
mov
rclb
and
loop
pop
dec
or
daa
rep
popf
push
adc
je
adc
lea
jge
icebp
addr16
push
int3
leave
or
inc
jbe
jae
cmp
xchg
and
jg
jmp
or
leave
add
shlb
jno
and
sub
jge
and
test
sbb
adc
mov
pop
mov
rcll
sbb
jp
daa
push
sub
mov
in
push
xor
loopne
outsw
cld
nop
sahf
mov
mov
inc
sahf
fidivrl
add
xchg
pushf
mov
call
clc
cmp
fcomip
test
fwait
jmp
inc
ss
add
mov
mov
or
or
adc
jae
mov
loopne
outsl
mov
mov
cmp
mov
insb
mov
and
sub
andb
test
or
xchg
xchg
or
jne
pop
and
jl
out
ret
pop
xchg
sub
and
aas
mov
ja
mov
mov
adc
sbb
adc
adc
fldcw
mov
xor
xchg
mov
sub
push
stos
mov
sub
out
pop
sub
repnz
lahf
mov
testl
mov
aaa
insl
adc
mov
sahf
mov
les
movsl
fs
shl
adc
jns
mov
scas
into
out
mov
aad
inc
scas
jb
inc
mov
lret
incl
adcl
int3
inc
pop
out
fildl
incb
xchg
cmp
repnz
mov
mov
stc
sub
pop
jbe
orl
and
iret
push
gs
push
jp
push
popa
and
pop
stos
lods
rcll
jbe
mov
adcb
lret
ds
jno
push
adc
xchg
test
push
mov
mov
jl
sbb
imul
push
inc
test
xchg
jno
and
push
pop
xchg
aad
scas
mov
jbe
cli
outsl
or
dec
aam
adc
xor
inc
or
aas
aam
push
int3
and
dec
popl
shr
cmp
aad
ja
add
or
mov
inc
in
push
dec
push
in
arpl
jne
adc
pop
dec
nop
mov
push
nop
mov
jg
jbe
test
adc
test
pop
jge
xchg
shlb
repz
adc
or
adc
lret
in
jp
mov
xor
pop
cwtl
ror
cmp
aam
clc
add
xor
push
mov
lds
adc
push
leave
adc
add
mov
or
hlt
shll
or
mov
daa
sahf
inc
xchg
mov
xor
pop
mov
in
sub
push
mov
mov
out
jbe
lret
ret
xchg
mov
inc
sub
imul
dec
into
push
cmp
jo
in
shlb
pop
push
fcomps
mov
sub
or
push
mov
inc
les
fwait
xlat
cmp
pop
out
inc
mov
scas
xchg
imul
add
jecxz
test
or
jle
jnp
inc
test
xchg
lahf
das
lret
xor
lds
lea
insb
lea
and
gs
ret
daa
sub
and
outsl
call
into
lods
shlb
das
jp
xchg
jg
adc
add
pushf
push
dec
int3
mov
cmp
inc
pop
adc
push
fistps
imul
in
jns
mov
and
in
push
fisubs
xor
testb
imul
dec
push
insl
enter
mov
xchg
nop
shl
inc
push
pop
xor
shlb
adc
sub
aad
jbe
ficompl
mov
mov
add
jbe
nop
jnp
int
xchg
push
ss
scas
adc
insb
push
adc
orb
mov
pop
mov
je
inc
sub
push
gs
repnz
xchg
mov
sub
into
jo
lds
dec
jbe
insb
adc
jecxz
sub
fs
add
dec
or
mov
sub
push
adc
test
pop
cltd
repnz
push
je
add
mov
sub
std
out
mov
iret
xor
cwtl
sbb
mov
add
xchg
and
sbb
insb
mov
xor
rcrb
out
mov
ret
push
push
adc
movsl
or
cmpsb
jb
or
pop
mov
sbb
pop
aaa
pop
xchg
jbe
stos
sub
lods
lret
dec
adc
sbb
sub
bnd
mov
in
or
mov
cmpsl
orl
and
pop
push
cmpsb
adc
jns
mov
xlat
pop
mov
test
jbe
jbe
add
lds
addr16
iret
jbe
adc
inc
xchg
add
sbb
push
lods
mov
lcall
pop
mov
mov
jp
cmpsb
jbe
imul
sti
mov
movups
ret
jb
fidivrs
dec
and
adc
add
jge
jmp
sbb
pop
cmpsl
add
adc
add
test
out
pcmpgtw
mov
or
adc
imul
push
pop
shll
jae
push
and
pop
push
jge
stos
imul
mov
ja
jge
loope
dec
fiaddl
lods
mov
out
cwtl
mov
pop
inc
jbe
dec
jo
add
xchg
inc
jae
ss
cmp
inc
adc
pushf
or
test
jns
adcb
leave
jg
jns
and
js
cltd
loope
pushf
insl
scas
xor
dec
leave
mov
aad
jp
xchg
lea
xchg
xchg
or
in
inc
push
adc
jno
adc
mov
jecxz
mov
ret
xor
inc
mov
arpl
mov
adc
mov
scas
or
stos
cmpsl
outsb
push
dec
mov
or
push
int3
clc
or
lods
jle
adc
sbb
in
sbb
cld
xchg
pop
cli
mov
fisubl
mov
add
jns
push
lret
mov
jne
jbe
cmpsl
pop
ret
mov
add
ss
sub
popf
pop
push
loope
push
mov
pop
cs
push
pushf
adc
add
mov
mov
pusha
loope
mov
adc
sbb
mov
stos
test
sbb
lea
push
scas
nop
push
shlb
adc
repz
mov
push
xorl
pop
mov
add
or
test
xor
fnstenv
loop
xchg
cld
jne
jae
mov
jmp
insl
ss
scas
sahf
adc
jns
adc
in
adc
jecxz
notb
in
push
cmp
push
pop
pushf
jne
stos
jo
testl
mov
fistpl
jbe
je
xchg
shlb
pop
mov
mov
fcoml
jecxz
pop
dec
clc
mov
mov
nop
or
adc
or
cli
or
loope
lods
fists
push
mov
mov
sub
mov
mul
mov
ljmp
pop
jb
repz
outsl
fsubrs
jbe
adc
jbe
jae
cs
cmp
add
shl
or
mov
fwait
inc
inc
fistpll
jbe
rcr
and
dec
imul
push
mov
sarb
pop
adc
loopne
push
stc
fwait
mov
mov
testl
mov
test
lret
and
adc
xchg
mov
adc
dec
nop
inc
mov
push
jp
pop
pop
dec
jno
cmpsb
aam
popa
pop
or
push
imul
daa
and
mov
adc
in
mov
repz
mov
mov
xor
xor
sub
jb
jg
daa
cs
popa
xchg
mov
cmp
lds
lcall
pop
pusha
mov
outsl
in
ss
aad
lret
jbe
imul
insl
mov
jns
mov
jbe
adc
dec
movsl
xor
xchg
jmp
mov
mov
jmp
inc
dec
inc
mov
push
inc
xlat
dec
xor
negb
inc
xchg
xchg
and
enter
push
cmp
pop
pop
arpl
inc
gs
fildll
rcll
popf
sbb
cmpb
mov
lods
pop
dec
sar
jbe
and
popf
or
sbb
adc
push
cli
xchg
pop
adc
ret
or
cld
xor
repz
dec
add
nop
test
push
loope
mov
pop
dec
cwtl
jecxz
and
mov
ret
shrl
push
std
sahf
movsl
add
inc
xor
mov
add
loopne
in
mov
ret
xchg
aad
sahf
popa
inc
popf
mov
add
jne
cwtl
shld
fisttps
xor
mov
xchg
adc
sub
mov
lods
cmp
jbe
insl
loopne
mov
in
dec
adc
sbb
xor
cmp
popa
adc
push
pop
xchg
inc
cmc
fs
loope
arpl
ss
mov
in
lcall
mov
jmp
push
push
push
sub
notl
pop
adc
mov
mov
and
adc
out
jle
test
adc
pop
jp
inc
popf
jno
mov
jg
imul
aaa
mov
push
ljmp
mov
adc
lds
imulb
das
jl
mov
jbe
sub
int
loope
xor
cwtl
dec
jg
adc
fadds
jbe
adc
jbe
pop
dec
lret
scas
outsl
adc
out
or
cmp
dec
push
sahf
scas
outsl
rol
loopne
inc
dec
mov
sbb
mov
or
dec
data16
fldt
inc
shr
repz
adc
movsl
add
xchg
xor
or
or
cli
push
adc
je
movsb
cmp
adc
adc
jmp
push
cmp
sahf
out
int3
das
je
imul
xorb
lss
push
adc
jmp
fldcw
fistpll
ds
adcl
outsb
xchg
scas
orb
xchg
mov
int3
idivl
cwtl
cmp
jbe
xchg
add
insb
lea
push
fistpl
scas
popa
jb
or
int
mov
scas
outsb
fimuls
inc
je
divb
jge
aas
or
int3
cmp
dec
mov
pop
pop
popf
mov
add
cmpsb
xor
test
bnd
ss
push
mov
fcoml
mov
in
bsr
repz
cmp
mov
inc
cmp
inc
into
ds
sbb
sbb
test
dec
xchg
imul
int
xor
mov
sbb
adc
dec
xchg
mov
nop
add
sub
cmp
xchg
outsl
push
adc
les
lret
sbb
sti
jbe
dec
pop
adc
dec
shrl
orb
mov
and
mov
std
push
out
push
or
dec
push
in
fmull
xchg
fdivs
mov
sub
outsb
lods
mov
outsb
data16
mov
ja
icebp
shl
dec
out
decb
jle
loopne
or
xor
xchg
mov
pop
adc
cmpsb
cltd
repnz
xor
pop
cli
xchg
cli
adc
out
sub
mov
stc
loopne
or
lock
call
arpl
push
lods
or
jmp
mov
int
fs
fidivrl
lea
out
xchg
xchg
adc
sbb
pusha
xorl
and
jle
es
lea
out
pushf
cs
or
fdivl
mov
mov
repnz
shl
int
hlt
insl
test
add
add
addr16
leave
into
mov
into
test
out
push
xchg
lods
pop
lea
mov
int
push
mov
push
je
pusha
pop
xlat
mov
gs
dec
adc
cld
fiadds
adc
jbe
xchg
mov
pop
adc
ficomps
cmp
mov
xchg
mov
enter
mov
pop
add
nop
push
out
push
mov
pop
test
jno
cwtl
adc
dec
xor
mov
mov
inc
or
insb
cwtl
mov
xchg
iret
mov
ret
les
cmp
int3
xlat
sub
or
mov
jo
cwtl
lret
pop
inc
and
testl
into
gs
adc
es
je
push
mov
lds
jns
adc
fsubrl
dec
outsb
pop
mov
pop
mov
out
pusha
aam
mov
out
mov
xor
push
dec
mov
cmp
bnd
and
pop
pop
sub
adc
gs
xor
and
adc
pop
push
mov
xchg
imul
aam
mov
xchg
sbb
rcrb
iret
xchg
push
fimuls
test
imul
xor
jg
add
cmp
lods
xor
pop
and
cmpsb
cmc
fistl
iret
pop
cmp
sbb
jns
push
ja
mov
into
in
xchg
mov
gs
test
xor
sbb
adc
addr16
into
mov
aas
pop
shr
cmp
adc
adc
ret
lock
adc
fistpll
push
jl
jne
jge
lret
sub
pusha
dec
mov
out
lahf
pop
jecxz
mov
xor
adc
xchg
ss
push
xchg
lea
inc
adc
loop
mov
imul
imul
int3
add
clc
idivb
test
ss
addr16
insl
shll
and
fistl
clc
pop
jl
adc
ja
add
fwait
dec
mov
adc
sbbl
jg
sub
cmp
cmpsl
xchg
and
dec
pushf
pop
faddl
sbb
out
ja
nop
clc
aad
data16
icebp
adc
sbbl
adc
push
sbbb
mov
mov
mov
push
cmpsb
dec
mov
sbb
cmp
mov
rclb
enter
sbb
push
rsm
sub
pop
mov
out
lea
jbe
jno
mov
sbb
iret
mov
jl
test
imul
in
mov
insb
inc
lods
icebp
cmp
test
sbb
inc
xchg
sub
dec
jl
adc
add
arpl
rcrb
mov
notl
fmull
xlat
jg
jbe
aas
mov
xchg
les
adc
lret
adc
sub
bound
mov
loopne
jbe
push
outsb
fistpl
into
aaa
fwait
out
xor
mov
xor
push
sbb
or
dec
das
adc
inc
inc
mov
jbe
mov
es
in
sub
add
mov
push
dec
adc
repnz
pop
inc
jle
push
sub
jbe,pt
dec
mov
es
decb
rcrl
jbe
jle
ja
adc
sbb
mov
scas
add
xor
hlt
pop
jbe
mov
sub
sahf
adc
fs
xlat
es
dec
pusha
add
mov
lret
call
mov
fidivrs
push
cltd
insb
es
push
adc
pop
and
jnp
cli
int3
or
movb
rcll
jp
push
inc
call
xchg
int3
adc
jmp
ja
mov
cmp
cwtl
jg
sub
mov
sbb
fidivl
int
mov
decb
adc
shlb
pushf
xor
cmp
jo
sbb
xlat
sbb
fisubrs
jne
push
imul
dec
data16
movsb
icebp
out
push
xor
cli
mov
imul
pop
jo
or
ja
mov
mov
test
xchg
lods
repz
cmp
mov
add
xor
push
hlt
out
xor
subb
js
ret
adc
inc
mov
lea
push
lock
int
sub
mov
test
out
mov
aas
xchg
mov
add
pop
add
xchg
xchg
adc
mov
arpl
out
fs
mov
adc
jmp
sbb
mov
xorb
push
subl
sbb
repnz
fcompl
mov
ret
sub
xchg
gs
enter
adc
div
hlt
mov
inc
xor
push
adc
repnz
sub
adc
add
jecxz
push
jno
sub
push
in
mov
cmp
dec
not
jbe
call
xchg
push
lahf
push
lcall
je
sbb
push
push
adc
shrl
dec
aaa
nop
popf
fdivrs
sbb
sub
icebp
sbb
lods
mov
mov
xor
push
push
add
adcb
adc
popa
sub
pop
adc
inc
add
mov
adc
push
in
mov
repnz
sub
sbb
ss
jp
add
pop
cmp
loope
inc
add
mov
xchg
jns
mov
inc
pusha
push
scas
cltd
push
jl
fsts
iret
decb
xor
rcrl
cwtl
mov
fwait
inc
push
adc
cs
sub
and
in
adc
dec
mov
add
cmp
push
pop
and
adc
dec
jecxz
mov
subl
jo
cmpsl
xchg
ss
mov
shl
dec
imul
adc
int3
xchg
arpl
js
scas
dec
cmp
out
inc
inc
les
aam
xchg
and
aad
xor
scas
mov
push
test
jbe
mov
xorb
xchg
sub
add
jl
sub
and
and
sti
rcrb
movsb
adc
addb
inc
dec
adc
pushf
sti
leave
dec
mov
push
cmp
sbb
inc
sbb
pop
ja
lret
xchg
mov
xor
and
and
pop
dec
adc
mov
mov
mov
pop
xor
mov
cmp
imul
lea
in
ja
inc
mov
jmp
add
outsb
mov
dec
popf
mov
jbe
ret
inc
push
rorb
in
or
fdivrs
sbb
add
mov
push
pushf
sti
call
test
movsb
ret
adc
out
xor
repnz
xchg
push
jbe
xchg
mov
lods
neg
or
jl
sbb
mov
gs
mov
nop
aam
js
leave
jbe
jno
and
imul
dec
or
stos
das
fiadds
pop
fstpl
mov
mov
or
lahf
test
in
cld
add
xchg
iret
ds
adc
mov
out
push
jnp
cmp
int
inc
imul
pop
sbb
cwtl
stc
and
mov
and
mov
jl
stos
jmp
adc
and
lods
mov
scas
negb
adc
sarl
pop
push
cmpsb
mov
jp
shl
sbb
fs
push
xor
adc
add
pop
int
push
insb
loopne
adc
xor
xchg
sub
add
fwait
iret
jo
pop
pop
and
cltd
mov
inc
push
push
pop
sbbl
dec
shlb
push
add
inc
xlat
jb
loopne
jne
repnz
mov
sar
mov
js
and
mov
cmp
push
xor
out
out
cmp
lea
loope
fs
jbe
mov
mov
int
call
imul
int3
mov
cmpsl
adc
sub
xor
fs
pusha
adc
popf
xchg
and
push
in
and
cwtl
insb
das
jnp
xor
sbb
daa
cmc
sbb
mov
adc
push
sahf
ficoml
jbe
xchg
sub
ds
cmp
adc
pusha
movsb
fiadds
dec
or
and
pop
inc
mov
or
mov
clc
mov
xor
iret
inc
jns
adc
add
adc
clc
insb
sti
adc
xchg
mov
pop
mov
jbe
fwait
and
pop
push
shrb
cmp
fs
in
jmp
push
inc
outsl
repnz
cvtps2pi
jb
in
dec
mov
adc
xor
or
push
in
mov
pop
xchg
xlat
or
jne
dec
sbb
je
je
sub
xor
jnp
push
jno
pop
pop
jbe
cwtl
push
daa
adc
jg
sahf
adc
mov
test
xchg
jmp
mov
pop
mov
sub
adc
aam
sub
daa
lods
push
test
jbe
stc
dec
das
push
rorb
jg
jns
pop
mov
and
sbb
jne
mov
sbb
mov
pop
aaa
jl
out
outsl
jno
mov
add
shlb
and
xchg
outsb
jnp
mov
daa
cmpsl
and
mov
outsb
mov
mov
mov
lcall
int
cld
push
insb
or
add
pop
lahf
jp
lret
das
scas
jno
loope
int3
dec
cli
jns
sahf
cmp
add
lock
mov
dec
dec
daa
lahf
ror
jbe
scas
dec
orb
pusha
adc
fwait
mov
mov
rcrl
mov
lcall
adc
sbb
in
in
jae
mov
pop
and
adc
xor
sub
sub
mov
mov
xor
mov
xchg
ret
and
out
adc
sahf
ljmp
jbe
or
das
cli
repz
mov
lret
cltd
lret
int3
notb
adc
test
scas
and
and
adc
mov
jbe
ds
dec
outsl
push
mov
sbb
jbe
call
push
push
add
fwait
and
mov
jp
cwtl
jl
mov
xchg
call
sub
add
or
rclb
sub
dec
sub
mov
jecxz
aad
outsl
and
or
sbb
leave
stc
test
fadd
test
rcll
xor
sbb
mov
or
iret
xchg
jecxz
bnd
add
adc
dec
and
mov
dec
sbb
repnz
fxch
adc
mov
repnz
adc
xor
mov
mov
or
push
add
ficoms
adc
add
fstps
ret
jno
lds
sub
imul
cmp
je
das
js
out
fmuls
sub
imull
fistps
push
cmp
es
dec
std
mov
pushf
inc
scas
jbe
lret
imul
adc
cld
call
adc
lret
cli
inc
mov
jno
mov
fcom
jae
stos
lock
xchg
adc
pop
inc
push
in
pop
outsb
in
mov
pop
push
cwtl
popf
adc
fucomp
mov
lds
adc
xchg
mov
jl
ret
out
mov
xchg
dec
repz
dec
js
out
jle
fsts
push
mov
jbe
shll
jl
std
adc
ret
pop
add
push
jno
mov
cmp
adc
cmp
mov
sbb
pusha
push
lods
mov
jmp
in
bswap
cs
mov
xor
push
sub
cmp
add
int3
mov
jbe
pop
mov
sub
jg
pop
add
andl
or
mov
aaa
stos
pop
sahf
in
inc
adc
inc
aas
cld
js
int
sub
daa
sbb
lahf
fwait
notl
xchg
mov
xchg
mov
cs
ds
mov
enter
mov
xchg
add
lea
inc
lea
stos
inc
out
mov
repz
cmpsl
sti
or
out
inc
xchg
push
adc
mov
test
jl
mov
mov
mov
add
add
cs
adc
jp
and
fcomip
xor
nop
popf
loope
push
adc
out
jbe
mov
sbb
push
cmc
push
adc
fnstenv
popf
pushf
push
xor
dec
nop
add
leave
divl
mov
sub
mov
repz
push
push
adc
dec
or
cli
pop
adc
pop
sub
clc
arpl
clc
jl
scas
ja
push
cmpl
aas
cmpsb
sahf
fcmovu
test
push
sahf
rcll
mov
xor
push
dec
xor
push
mov
xchg
xchg
jmp
mov
loope
inc
in
cmp
ds
arpl
xchg
fstl
ljmp
mov
or
adc
mov
and
lret
movsb
xor
call
sub
xchg
jno
push
clc
pop
and
push
fidivrs
push
dec
or
add
mov
xchg
cmp
add
mov
jo
int3
mov
fcomps
push
mov
fadd
mov
je
jbe
jle
mov
testl
push
and
adc
sub
out
dec
mov
into
sub
orl
out
lcall
xchg
mov
jno
jnp
orl
push
pop
jle
daa
cmova
adc
jmp
out
ljmp
xor
adc
gs
push
jmp
mov
mov
jle
xlat
lret
sbb
cmpsl
in
xor
daa
pop
inc
pop
mov
push
out
push
and
dec
in
in
ret
in
shrb
adc
adc
xchg
pusha
cmc
jmp
rol
jbe
add
hlt
cmp
xor
mov
jge
adc
jbe
fadds
fcmove
scas
sahf
mov
pushf
pop
aaa
pop
adc
pop
xchg
mov
xor
leave
dec
xchg
jbe
push
ja
in
stos
outsb
adc
repnz
jb
gs
aad
int
xchg
push
testl
push
pusha
mov
int3
xchg
adc
pop
cmp
sti
xor
jmp
mov
sub
pop
movsl
mov
shrb
dec
pop
nop
cmp
dec
test
mov
xchg
cmpl
je
mov
cmc
aaa
and
sbb
xor
push
mov
or
inc
dec
lods
pop
xchg
bound
cmp
jno
xchg
scas
inc
dec
dec
sahf
sbb
insl
push
mov
leave
fdivr
adc
fwait
mov
pushf
pop
fbld
rcll
aaa
sub
and
push
gs
adc
mov
cmp
int
mov
notb
adc
insb
arpl
inc
pop
inc
inc
adc
xchg
test
shlb
fists
lahf
or
mov
adc
cmpsb
mov
in
cltd
arpl
xor
jg
out
push
cmp
push
stc
les
aad
push
cmc
adc
sbb
adc
jp
adc
xchg
mov
and
orl
push
xchg
decl
sti
dec
pop
cltd
adc
loopne
popa
jle
mov
hlt
and
mov
push
cli
roll
inc
adc
xchg
push
addr16
les
sub
repnz
jbe
mov
cwtl
sarb
ja
orb
mov
or
or
aas
shrb
jno
cli
dec
jp
ret
xchg
add
pop
fcom
push
jl
into
xorl
mov
push
rcrb
xor
jno
mov
in
sbb
or
or
pop
pop
aad
jbe
sub
xor
mov
ja
ss
sub
scas
mov
inc
adc
jp
lds
and
lret
inc
in
mov
sbb
in
adc
pop
imul
inc
out
mov
shl
xor
jae
mov
and
hlt
pop
push
pop
adc
loope
mov
arpl
insb
stos
xor
loopne
fsub
lds
aam
xchg
adc
fldenv
adc
sti
inc
mov
mov
and
or
insb
ss
std
mov
adc
or
push
pushf
scas
out
cmp
rorl
es
loope
mov
sbb
clc
pop
cmp
enter
mov
pop
mov
adc
push
mov
es
mov
gs
je
stc
rcrl
mov
adc
std
mov
mov
mov
jns
sti
stos
sub
push
movsb
les
push
mov
xor
jbe
test
and
dec
cmp
jbe
sbb
mov
add
adc
mov
mov
cs
sub
mov
adc
and
mov
add
ja
mov
sbb
xorb
sbb
jbe
adc
outsb
or
xchg
bound
lds
nop
jl
push
into
adc
sbb
gs
xchg
mov
mov
imul
adc
add
test
jno
sbb
mov
call
pushf
mov
push
clc
xor
sbb
mov
pusha
iret
dec
or
jmp
mov
sarl
sbb
sub
ret
shr
test
sub
call
aam
in
pop
push
shll
mov
push
arpl
pop
fidivs
incb
mov
adc
adc
pop
and
scas
lret
xchg
in
ja
mov
movsb
cmp
gs
pop
cltd
adc
add
dec
and
aad
movups
or
mov
adc
lret
aad
mov
addr16
loope
sub
sub
xlat
adc
clc
movsl
mov
insb
imulb
mov
aad
push
sub
and
in
dec
jl
mov
les
addl
push
aaa
or
cmp
enter
adc
sbb
jecxz
push
int
loopne
orb
add
adc
and
jno
int3
movb
aam
fimuls
ljmp
push
movsl
stc
jge
dec
sub
rolb
pop
fwait
lahf
push
jbe
push
das
and
cltd
inc
sub
adc
mov
je
iret
push
adc
fdivs
pop
inc
jle
stos
adc
mov
arpl
ret
movsb
addb
and
arpl
cmpsl
call
xchg
jno
fs
sub
xor
lcall
xlat
inc
jg
mov
inc
xchg
outsl
fildl
testb
pop
sub
aam
pop
insb
imul
xchg
xchg
push
in
scas
dec
dec
push
jbe
and
ss
insb
xchg
loop
mov
daa
xor
sti
adc
jl
adc
in
mov
mov
xor
andl
cwtl
scas
arpl
push
lock
mov
add
mov
jbe
xlat
cmpsl
pop
adc
or
scas
fdivl
jae
fisttpl
xchg
ljmp
lds
repz
push
fcmovnu
adc
dec
lds
sub
inc
nop
nop
pushf
popa
adc
jnp
xchg
pop
daa
mov
cmpsl
ficomps
mov
mov
push
lock
jns
out
add
je
das
mov
jb
dec
jo
adc
les
push
or
xchg
aad
fs
cmp
popl
mov
adc
hlt
cmp
cmpl
dec
xchg
into
cli
sbb
push
stos
fcmovnb
push
enter
das
mov
cs
hlt
mov
push
and
xor
xchg
mov
divl
sub
test
repz
pop
fs
jle
adc
pop
xor
mov
xor
jbe
repz
cmp
pop
or
scas
xor
sub
push
test
out
sbb
out
adc
inc
adc
adc
aaa
push
dec
pop
leave
ret
jbe
fs
xchg
inc
push
mov
ds
inc
daa
or
xchg
inc
std
lods
notl
stc
xchg
fldz
xorl
and
xor
sbb
adc
mov
fcmovbe
test
jl
mov
adc
adc
mov
mov
xorl
fwait
mov
xlat
lahf
out
fnstenv
es
test
cs
mov
fmuls
dec
int
std
xchg
dec
int
mov
leave
ljmp
pop
mov
stos
je
mov
jo
out
rcr
push
test
jge
sti
adc
mov
dec
push
inc
test
mov
or
jbe
adc
adc
shll
movsb
aas
hlt
dec
ret
pop
xor
and
and
and
jecxz
xchg
push
ljmp
popa
cld
aas
mov
ficoml
dec
adc
pop
jmp
adc
mov
or
pop
mov
push
xor
xchg
mov
cmp
jmp
cmpsl
xor
xchg
adc
inc
cld
jno
inc
ret
repz
iret
jbe
mov
shlb
mov
mov
insb
ljmp
jbe
push
cli
mov
adc
dec
shlb
adc
mov
push
pop
mov
mov
rcr
sbb
jg
dec
xchg
addr16
jbe
xchg
add
js
outsb
movsb
mov
fdivs
inc
rclb
sahf
ljmp
mov
mov
in
push
int3
cltd
lock
mov
adc
push
pop
adc
jg
xor
mov
jecxz
jl
mov
push
sbb
jp
jmp
or
mov
sbb
int3
outsl
outsl
cmp
add
stc
mov
insb
inc
lcall
out
mov
imul
jbe
es
popa
repz
neg
jbe
cmp
add
or
or
test
hlt
stos
mov
outsl
rcll
ds
fnsave
add
xor
fnstsw
jbe
popa
pop
inc
shlb
mov
pushf
inc
outsl
aas
mov
jbe
fisttps
or
cmp
fcmovu
mov
jle
xchg
push
stos
adc
xchg
lahf
stc
cmp
shl
ret
mov
add
pop
adc
mov
mov
ja
in
loop
push
mov
out
out
adc
mov
test
frstor
enter
mov
cs
push
rclb
jle
in
in
pop
sarl
add
fidivrl
bnd
adc
sub
xchg
jns
add
mov
sub
in
ja
ffree
or
out
push
sub
xchg
jbe
xchg
mov
jle
dec
xor
cmp
adc
rorl
mov
shll
in
push
std
jbe
es
or
push
inc
push
dec
mov
fldenv
adc
adc
pop
fildll
jno
fisubl
mov
cmp
int
and
cmp
pop
sub
adc
arpl
leave
and
pop
fdivs
pop
xor
mov
and
mov
pop
pop
push
sbb
out
dec
push
xor
and
es
popf
push
or
adc
lret
adc
or
ficoml
call
out
jecxz
pop
cmp
mov
scas
jl
shlb
add
pop
imul
rcrl
es
or
out
fiadds
pop
xor
shl
movsl
mov
fstps
je
mov
jbe
stc
aam
cld
mov
loope
roll
jbe
add
mov
popa
seta
xor
mov
jno
add
aam
xchg
cltd
inc
cmp
in
xor
int3
sbb
add
mov
mov
mov
mov
adc
in
jl
cmp
sub
mov
outsl
stos
sahf
jecxz
mov
arpl
std
cmc
imull
lret
xor
mov
sub
push
movsl
mov
xor
test
and
int3
jno
or
outsb
xchg
mov
out
mov
mov
shlb
icebp
dec
add
adc
pop
insb
lea
add
xchg
jbe
int3
fmulp
popl
pop
cmpsl
inc
mov
inc
sbb
mov
xor
adc
pop
xchg
nop
cmp
cmp
popa
invd
in
xchg
je
push
adc
inc
pop
std
pop
mov
dec
sti
sub
inc
outsb
jo
mov
xchg
ficomps
pop
and
push
push
mov
inc
loopne
and
adc
push
pop
sti
jle
adc
in
push
sbb
or
test
sub
jbe
lods
xchg
and
pop
stos
call
jae
sbb
mov
jge
lock
andl
jbe
aam
psllq
cs
push
cmovns
push
push
sub
push
ja
adc
or
insl
fisttpl
lock
jbe
daa
add
adc
or
pop
push
mov
andb
bound
and
jno
cwtl
jecxz
mov
stc
add
push
mov
mov
cli
das
popa
cs
jbe
jae
sub
imul
pop
xchg
inc
cmp
and
jnp
mov
cmp
popl
scas
add
enter
adc
or
jnp
mov
lods
repnz
push
or
push
call
je
scas
inc
mov
adc
pop
mov
test
aas
in
lds
adc
aas
fdivrs
stos
cld
cmp
inc
shlb
ret
pop
adc
dec
adc
mov
push
mov
out
xchg
adc
pop
loope
mov
lret
fisttpll
in
adc
cmp
nop
test
pop
sub
fmull
and
sbb
cmp
aas
out
dec
jno
out
lret
loope
loopne
sub
popa
pushf
jbe,pt
sub
mov
mov
jbe
cmp
aam
lret
sbbb
das
mov
xchg
mov
lret
movsb
push
mov
cmc
shlb
inc
cld
jmp
repz
push
jl
cvtpi2ps
cmp
addr16
or
fwait
jl
das
mov
or
mov
dec
mov
es
iret
jbe
cmp
jecxz
adc
fidivl
fistl
out
js
cmp
rol
roll
jno
jle,pn
in
rolb
push
jo
hlt
xchg
movsl
aas
push
cli
xchg
jge
stos
adc
xor
out
mov
dec
lret
and
jae
repz
aas
shll
adc
hlt
lods
mov
dec
loop
or
mov
shrl
inc
mov
es
call
dec
pop
mov
adc
xlat
mov
push
adc
jbe
push
pop
and
or
adc
insl
shrl
repnz
movsl
icebp
cwtl
sub
mov
push
push
dec
stc
dec
cmp
push
outsl
push
dec
xchg
loopne
mov
adc
sub
xor
pop
adc
pushf
adc
push
std
inc
xchg
mov
mov
jbe
cmpsl
imul
hlt
adc
xchg
jl
int
dec
vmovlps
movsl
sti
mov
xor
nop
inc
push
inc
test
jnp
stc
lahf
adc
xor
sub
lds
xor
adc
jb
insl
sahf
addr16
cmc
jmp
push
jmp
sbb
shlb
sahf
sbb
push
adc
jp
leave
push
xor
imul
pop
and
addl
adc
push
pop
pop
or
rclb
adc
insb
mov
cmp
lea
jbe
out
lret
movsl
mov
idiv
cmp
adc
imul
in
mov
icebp
push
jne
push
push
add
repz
mov
in
mov
jmp
lcall
inc
out
pop
sub
andb
push
rcrb
in
lds
xchg
push
daa
sub
adc
or
adc
addr16
sahf
fimuls
imul
mov
xchg
push
es
out
popl
aaa
movsb
pusha
cmp
adc
cwtl
adcl
sbbl
loope
add
mov
jg
adc
out
mov
mov
js
lcall
iret
jo
pusha
adc
sbb
aam
and
dec
adcb
jnp
rcll
jnp
ljmp
fs
pushf
js
mov
xor
mov
cmc
popf
clc
or
jbe
or
out
push
subb
ror
sub
inc
pop
jbe
pop
repnz
dec
sbb
push
lahf
or
sub
inc
adc
cmp
icebp
mov
mov
xor
or
adc
in
jg
jb
mov
enter
cmp
jg
push
mov
outsb
adc
mov
lret
xchg
jnp
aas
mov
shlb
stos
jmp
xchg
jbe
sbbl
jb
push
push
rcll
cmp
rorl
push
push
in
fildl
cld
popf
xchg
mov
adc
out
in
mov
fsubr
stc
sbb
jmp
or
mov
cli
mov
sub
jns
imul
inc
add
adc
push
cs
int
add
dec
cwtl
or
and
pop
mov
mov
xchg
out
add
mov
mov
nop
rcrl
cmp
hlt
inc
push
mov
mov
dec
dec
cld
xchg
std
cmpsl
enter
sahf
test
into
push
sahf
popf
sbb
notl
popf
mov
xor
jge
ret
dec
and
sub
sub
add
rcr
fisubs
aad
pop
outsl
adc
pop
or
test
dec
imul
outsl
icebp
or
mov
scas
jb
mov
int
clc
scas
mov
xchg
jbe
jp
cs
mov
push
adc
or
add
xchg
sbb
es
cmp
push
pop
cmp
xlat
js
push
ficomps
notb
dec
sub
add
ss
cli
xchg
es
adc
dec
popa
into
test
adc
and
xchg
sbb
and
lds
pushl
push
push
and
dec
adc
mov
push
aad
add
sub
aam
adc
shl
inc
mov
arpl
aaa
addr16
ja
dec
pop
xor
mov
testb
aad
hlt
jp
inc
adc
dec
dec
jl
testb
insl
cwtl
lods
jbe,pn
loopne
jge
push
or
xor
mov
jne
jns
stos
lret
cmp
mov
lock
jb
fucomip
and
inc
jg
pop
pop
push
mov
jbe
add
ret
xchg
int3
adc
ljmp
lock
fldl
imul
in
mov
lock
inc
mov
pop
mov
ficoml
pop
or
imul
lret
jnp
adc
adc
or
cli
imul
add
jbe
das
jp
sbb
xor
fcoms
popf
xchg
xchg
pop
das
cmpb
cmp
jbe
xchg
mov
sub
push
sbb
adc
fsts
into
pop
mov
mov
mov
ljmp
mov
out
push
mov
xor
adc
xor
icebp
pop
sub
cli
push
jbe,pn
jp
pop
adc
pop
out
repz
or
aad
aam
ds
mov
data16
cmp
lahf
test
call
and
mov
push
and
mov
test
dec
push
scas
dec
popa
pop
hlt
pop
jge
mov
daa
xorl
fs
or
dec
movsb
lods
xor
mov
outsl
adc
cltd
mov
or
sarl
sbb
mov
mov
lret
lahf
nop
mov
lret
jbe
leave
ja
mov
test
cmpsl
fldl
and
filds
ret
lea
repz
sub
adc
dec
into
mov
mov
pop
push
fsubs
adc
add
dec
jo
adc
mov
adc
fdivs
push
pop
adc
push
lret
push
adc
add
jae
testb
jecxz
in
enter
out
adc
mov
adc
dec
dec
popa
mov
testb
pusha
aas
xchg
lock
add
add
test
xor
pop
xor
mov
pmulhw
adc
fidivl
mov
sub
lock
lret
fimuls
daa
pop
xchg
je
testb
xor
out
push
das
cmp
mov
lea
lret
dec
dec
loope
sub
or
and
jo
test
cmp
js
test
rcll
and
sub
sbb
xchg
pop
loop
push
add
bound
in
dec
imull
jbe
lret
call
mov
rorb
das
test
or
scas
imul
jnp
addb
stc
add
cmp
mov
jl
xor
or
dec
testb
rorl
lcall
mov
daa
dec
or
jns
insl
lret
lret
or
jle
inc
jne
xchg
inc
mov
cld
adc
notb
add
pop
mov
aad
jo
cld
mov
xor
divb
or
lock
les
inc
mov
mov
and
vmread
jnp
rorl
jmp
popa
xchg
adc
stos
sub
scas
call
sbb
dec
cmp
into
pop
add
dec
mov
in
sub
adc
sbb
pushf
rcll
fs
leave
jl
int3
enter
rclb
jns
pop
inc
stc
and
test
adc
sub
lcall
test
addr16
push
dec
jmp
or
fnstenv
mov
fsubrp
mov
sbb
and
xchg
mov
adc
or
repnz
bound
insl
adc
mov
adc
xchg
pop
push
inc
xchg
ds
dec
sub
mov
mov
dec
pop
mov
mov
ret
lds
add
aaa
mov
scas
sbb
sub
movsb
xchg
mov
or
aad
and
fisttpl
nop
adc
movsb
pop
outsl
rolb
pop
jbe
in
pop
cmp
test
push
daa
push
mov
sahf
imul
int
pusha
sbb
les
nop
jae
and
sbb
int3
cmc
sahf
inc
mov
pop
add
dec
xchg
or
loopne
lret
or
stos
test
adc
add
in
pop
sub
nop
aas
jmp
ret
sahf
xchg
mov
mov
mov
pop
notb
jne
sahf
std
loopne
xchg
jbe
gs
sub
jp
adc
xchg
loopne
jmp
out
sti
adc
leave
mov
rcl
iret
sbb
out
shrb
cltd
fs
ret
test
fldt
adc
cmpsl
int3
into
mov
jbe
sbb
ror
mov
fstpt
cwtl
int
fidivrl
push
dec
popf
xchg
stc
pop
out
sbb
sub
inc
pop
sub
sti
nop
cmovge
mov
out
sahf
arpl
mov
sub
add
shlb
pop
outsl
in
adc
inc
jae
mul
addl
dec
push
sahf
mov
test
iret
lret
adc
pop
cld
js
pop
xor
mov
lcall
stos
dec
adc
into
out
fwait
sbb
pop
cmp
jnp
cmp
ficomps
push
in
es
adc
push
xlat
outsl
idivb
jnp
sbb
aaa
mov
push
push
xchg
adc
imul
jns
xlat
or
js
sbb
jecxz
pushf
cmp
mov
push
pushl
les
jbe
lock
mov
pop
inc
test
add
mov
roll
or
dec
jle
out
shlb
in
cmp
push
ljmp
mov
xor
adc
jbe
push
mov
jne
xor
nop
out
test
daa
xchg
jno
adc
push
or
push
mov
sbb
mov
faddl
loopne
push
xor
mov
cmp
cs
clc
fisttpll
pop
out
unpckhps
stos
outsb
pop
add
imul
repz
lret
push
jl
lret
test
jbe
std
out
xchg
loop
xor
dec
jbe,pt
jge
stc
sub
jo
aas
stos
mov
in
aaa
xchg
fisubl
or
nop
mov
pushf
mov
daa
mov
lcall
dec
dec
jbe
adc
fucomip
ljmp
xlat
loope
arpl
mov
pop
pop
ja
mov
mov
mov
xor
in
lods
mov
mov
mov
sub
addl
jmp
push
dec
js
adc
add
lea
or
mov
adc
inc
lret
mov
das
mov
xchg
push
dec
popa
test
adc
dec
lcall
insb
sbb
movsl
jae
jbe
or
dec
adc
mov
or
pcmpeqd
push
inc
mov
sub
icebp
pop
aaa
fwait
rcrb
insl
add
jo
sahf
adc
push
repz
mov
sub
test
out
inc
xor
or
jbe
js
adc
iret
out
in
xchg
sub
cmp
xchg
out
xchg
pop
ficomps
test
test
adc
lock
sub
jl
pusha
shl
addr16
addl
sub
jp
sub
fdivr
pop
inc
xor
jae
dec
sbb
jmp
add
sti
hlt
pop
pop
pushf
adc
hlt
daa
int
movsl
xchg
aaa
mov
mov
xor
push
cltd
adc
adc
pop
fwait
inc
int3
arpl
jle
sub
div
out
jl
les
std
imul
setb
popf
shrb
lea
cmp
lea
loop
cli
lahf
jbe
inc
jnp
and
inc
or
dec
scas
push
jp
adc
jle
push
push
inc
ret
cmp
jle
jp
and
dec
dec
xlat
imul
popf
idivb
frstor
test
sbb
dec
mov
adc
push
dec
and
dec
aas
sahf
aaa
push
xchg
adc
shlb
mov
fsub
adc
pop
pop
test
adc
mov
dec
dec
mov
mov
push
jbe
fsubrl
xchg
das
adc
sbbl
das
rorb
lods
lcall
xor
adc
dec
in
lods
stos
fcom
pop
mov
jbe
dec
test
jbe
cmp
iret
adc
insl
ss
push
mov
inc
mov
mov
mov
or
mov
aas
daa
rclb
outsb
add
fisttpl
xor
cli
repz
mov
xchg
push
scas
mov
mov
adc
stos
lock
clc
jp
or
rcll
and
sbb
ret
imul
push
sbb
add
adc
jno
aad
xchg
adc
mov
sbb
popf
and
jno
stc
rcl
js
push
testl
mov
prefetch
or
orl
mov
aaa
cmp
rol
pop
bound
mov
sub
mov
xor
jl
into
xor
adc
inc
dec
and
xor
mov
cld
jns
popa
pop
mov
xchg
or
jg
data16
pop
iret
adc
jmp
pop
std
stos
mov
out
mov
jbe
mov
mov
outsl
jp
mov
pop
repz
jle
orb
pop
scas
push
test
jbe
xor
pop
shll
mov
dec
dec
mov
dec
mov
and
adc
test
sub
mov
xchg
fnstsw
adc
aam
push
icebp
jmp
or
mov
test
jb
push
cmc
xchg
push
bnd
in
push
leave
ret
mov
ret
inc
testl
pop
mov
pop
mov
xchg
xor
inc
xchg
ljmp
adc
sub
mov
cmp
test
add
stc
jl
imul
pop
jne
xorb
jbe
dec
js
sub
pop
sbb
enter
cs
mov
sub
mov
sbb
loopne
int
pop
add
aas
jp
add
adc
ja
jbe
les
xchg
inc
cmc
fdivrp
adc
icebp
inc
add
add
mov
xchg
mov
cmp
ret
cmpsl
mov
out
test
cld
adc
add
push
dec
call
cmp
arpl
mov
jp
in
or
lods
aam
xchg
mov
adc
push
mov
and
push
sbb
or
je
lock
cld
repnz
fcmovbe
jne
out
mov
cli
shlb
xchg
ror
jb
dec
pop
rorb
lock
ret
or
and
xchg
lods
out
mov
jno
cltd
sbb
mov
xor
push
out
push
dec
scas
call
repnz
push
mov
leave
jno
adc
push
push
dec
fwait
or
cltd
sbb
outsb
mov
xchg
es
andb
call
pop
cmp
rclb
add
insb
jl
mov
lods
adc
loope
cmc
stc
mov
push
ss
xor
ljmp
stos
lahf
addr16
hlt
popa
mov
lock
jecxz
xchg
out
jno
dec
in
xor
pop
mov
cmp
cmp
mov
arpl
pop
sub
adc
cld
push
mov
mov
xchg
add
mov
orb
dec
adc
fstpt
inc
cmp
mov
lods
les
jmp
cmpsb
pop
jge
test
imul
rorb
arpl
ss
mov
aam
cmpsb
cmp
xchg
adc
fmull
mov
out
inc
jno
int3
pop
xor
push
inc
mov
ret
scas
push
scas
mov
cmpsl
or
xor
arpl
jbe
jne
mov
sub
push
lods
shll
test
mov
sbb
xor
sub
sub
mulb
mov
adc
mov
mov
xchg
mov
mov
outsb
xchg
mov
adc
ret
lahf
loop
mov
add
pop
add
mov
xor
dec
cmp
out
adc
mov
cs
cltd
mov
jb
jecxz
inc
push
repz
adc
add
out
pop
adc
mov
adc
adc
inc
orb
jno
ljmp
sub
adc
mov
xchg
cmpsb
push
outsb
mov
loope
mov
adc
sub
mov
lock
or
push
mov
jnp
mov
testl
je
dec
mov
rol
or
lock
imul
jae
adc
jmp
out
not
pop
cs
bnd
sub
movsb
xchg
mov
cmc
add
sub
adc
out
loope
popf
aas
jno
xchg
scas
scas
mov
sti
rcrb
les
outsl
jbe
add
sbb
sbb
inc
inc
adc
xchg
push
add
fimuls
adc
or
add
icebp
mov
mov
fbld
scas
push
js
das
push
int3
mov
pop
jle
shr
into
adc
popa
pop
popa
jbe
push
push
dec
mov
das
mov
add
mulb
sub
jecxz
cmp
cmp
fsubrp
adc
sarl
adc
pop
repnz
sub
mov
and
push
in
inc
jecxz
mov
mov
out
sahf
mov
dec
jbe
rcrb
jmp
adc
push
test
adc
pop
es
xor
mov
push
je
push
mov
shlb
adc
xor
loop
rorl
data16
fsubr
imul
or
xlat
add
aas
push
inc
test
push
jo
js
adc
ja
mov
push
push
xlat
imul
xchg
inc
mov
daa
nop
out
lcall
xchg
dec
loope
fucomp
adc
push
sbb
test
mov
adc
sbbl
xchg
cmp
popa
xadd
jecxz
sahf
ficoml
add
jg
insl
cmp
mov
loopne
aad
test
insb
in
out
aad
push
cmp
les
rorl
jnp
ljmp
adc
andl
cs
or
rorb
add
pop
mov
aaa
or
insl
adc
push
cmc
lods
push
jbe
and
insl
out
mov
pop
mov
xchg
add
ret
xor
es
mov
dec
push
xchg
inc
xor
push
dec
xchg
rclb
sub
cmpsb
inc
dec
test
in
add
mov
jbe
push
gs
add
aam
ret
xchg
loop
stos
inc
adc
mov
out
dec
mov
and
pop
in
and
jge
std
mov
out
jo
mov
data16
int3
hlt
and
in
mov
inc
sbbb
out
lea
or
mov
lds
rorl
xor
pop
pop
int
xchg
hlt
in
sub
jbe
jns
popf
adc
jbe
push
shrl
sbb
pop
xchg
mov
mov
aam
pop
ret
clc
xor
jbe
sub
add
call
ds
repz
adc
jl
mov
adc
js
flds
xchg
enter
push
dec
jl
jns
jnp
cmp
inc
fbld
bound
adc
je
fisubs
mov
jbe
test
rcl
dec
mov
xchg
lahf
adc
adc
pop
or
push
mov
xchg
fisubrl
mov
cmp
xor
xchg
pop
ss
push
jge
jbe
sub
call
pop
adc
inc
iret
sbb
jno
out
lock
sbbb
jb
test
push
imul
cmp
or
adc
xchg
test
enter
rcll
imul
pushf
jnp
mov
addr16
in
sahf
mov
loop
scas
out
or
scas
cmpsl
in
idivb
or
mov
jbe
mov
cmpsl
stc
aad
adc
imul
out
bound
sub
fmuls
loope
sbb
shlb
mov
int
sbb
dec
arpl
jbe
lret
inc
dec
or
mov
movsl
or
fnstenv
dec
mov
into
xor
inc
push
push
sub
dec
adc
std
out
test
mov
lock
sahf
out
mov
lock
subl
in
and
jbe
aad
addb
les
adc
dec
jle
push
push
push
sub
repnz
mov
xor
out
mov
out
into
push
repz
mov
mov
dec
jbe
ja
in
pop
sbb
scas
xchg
jmp
int3
data16
xlat
jecxz
xor
cmp
mov
push
push
fsubl
cbtw
cmp
insb
mov
orl
shlb
or
jns
bound
sub
pop
or
pop
insl
push
mov
pushf
sbb
or
or
sbb
xchg
dec
fidivl
and
je
mov
add
mov
cmp
xchg
pusha
and
adc
sbb
mov
fcmovb
lods
mov
mov
mov
push
rclb
cmp
lods
ss
xchg
sub
aad
iret
stos
dec
xor
adc
mov
fcmove
jb
xchg
pop
dec
cmp
add
sbb
push
aad
jmp
dec
icebp
sub
xchg
add
and
xchg
js
or
jo
repnz
ret
add
xchg
loop
call
push
test
fs
dec
mov
cmp
dec
sub
jo
gs
outsb
jg
sti
mov
inc
mov
sub
insb
outsb
imul
mov
cmp
sbb
mov
mov
or
cmc
or
cmp
addr16
xchg
or
loope
xlat
fiadds
out
sbb
repnz
push
pop
sub
test
pop
pop
loope
xchg
jbe
decl
push
jb
mov
mov
test
xchg
adc
call
adc
add
popf
dec
adc
mov
cltd
adc
mov
pusha
mov
lea
push
adc
mov
test
push
xchg
sbb
popa
jp
test
and
inc
push
lock
mov
push
lods
cltd
pop
pop
loop
mov
pushf
xor
sub
scas
pop
dec
sbb
or
jmp
hlt
xor
pop
jb
mov
pop
cmp
or
ret
loopne
add
jbe
sahf
sub
in
mov
int
fistl
cltd
cmp
add
push
lea
mov
cmp
rcrl
das
and
or
adc
into
hlt
fisttpll
jbe
orb
push
fcoml
dec
mov
mov
out
out
mov
shrl
outsb
adc
mull
add
and
pop
lret
xchg
xchg
pop
mov
adc
std
jo
xchg
and
and
call
rolb
loopne
pop
sub
push
adc
dec
push
mov
cld
inc
sbb
ja
int3
daa
andl
mov
xor
and
jno
pop
jl
add
adc
pop
inc
xchg
adc
push
popa
lret
pop
repnz
mov
rclb
bnd
cwtl
out
ret
jnp
adc
inc
adc
stc
shll
notb
lock
mov
adc
mov
fimull
pushf
testb
adc
insl
lret
add
mov
aam
subb
sub
xchg
lret
mov
jp
lret
orb
sub
pop
xchg
or
retw
cmp
das
jl
xchg
adc
dec
lret
cmpsl
adc
inc
inc
mov
jbe
xchg
mov
push
jl
mov
and
shlb
ret
jbe
jl
sub
das
dec
orl
adc
inc
cmc
jbe
jmp
mov
jge
adc
daa
mov
fimuls
les
pop
sbbl
mov
push
mov
mov
dec
bound
mov
dec
in
xchg
lea
imul
mov
inc
dec
cwtl
adc
mov
into
lret
inc
lds
xchg
stos
push
addr16
adc
int
xor
mov
sbb
and
shlb
xchg
ja
ljmp
not
popf
ds
mov
jbe
mov
pop
imul
ret
rcl
sbb
push
clc
xchg
je
xor
cmpsb
lea
dec
mov
sbb
jbe
pop
out
pshufw
adc
test
mov
cmp
lcall
xor
or
nop
lds
adc
aad
mov
adc
cli
pop
shlb
lds
inc
push
cwtl
cmpsb
outsl
jbe
cwtl
es
test
rorb
add
jbe
jns
outsl
out
and
cs
aad
pop
stos
cs
nop
testb
mov
xchg
stos
decl
lods
fistl
jbe
add
pusha
sbb
mov
push
dec
iret
shrl
push
sbb
adc
and
jle
or
adc
out
mov
scas
decl
push
or
adc
fs
lds
adc
jmp
cmpsl
sahf
push
daa
mov
ds
xchg
rcrb
push
sub
inc
push
testb
aaa
inc
cmp
mov
imul
inc
iret
add
jge
arpl
fcmovne
fcoms
mov
jl
sbb
movsb
push
adc
lret
or
sbb
insb
cmp
stos
pusha
pop
das
ficoms
mov
jno
movsl
jne
repz
xchg
and
fildll
dec
xchg
ficompl
xchg
mov
or
lods
jg
add
sub
mov
cld
push
inc
adc
sub
enter
mov
mov
add
test
jne
jne
js
adc
adc
adc
in
ds
fs
mov
mov
push
cmpsb
and
lock
ss
popa
je
jge
lcall
mov
xor
into
sbb
stc
lea
je
pop
mov
insl
xrelease
and
mov
cmp
cmpsb
cmpsl
inc
test
loop
rorb
lea
test
push
sub
and
dec
loope
mov
imul
mov
sub
inc
dec
hlt
imul
xchg
add
pop
rorl
xchg
cwtl
sub
or
jo
mov
adc
add
adc
cld
and
or
je
outsl
mov
cmp
sbb
sub
adc
jnp
inc
pop
xchg
enter
adc
pop
out
mov
sbb
sarl
or
mov
push
pop
lock
dec
lds
pop
mov
mov
sbbl
movsb
add
and
stos
out
jae
bound
mov
jbe
xchg
jl
ds
xchg
pop
xchg
adc
sbb
nop
stc
mov
push
adc
mov
dec
adc
jg
pop
cmp
cltd
jl
mov
sbb
ret
pop
mov
xchg
xchg
cmp
cld
jns
in
adc
pop
mov
push
and
sbb
cmc
outsb
inc
pusha
mov
push
stos
sti
jno
fsubrs
int3
adc
nop
pop
sbb
pop
stos
aam
and
mov
aas
imul
mov
xchg
outsb
call
mov
dec
inc
or
fidivrl
xchg
dec
push
or
std
nop
mov
addr16
or
mov
adc
pop
xor
adc
sbb
in
outsl
shlb
popa
xlat
jns
inc
adc
sbb
adc
js
lret
scas
lods
scas
jl
xchg
jne
mov
in
or
clc
notl
inc
dec
xchg
outsb
push
jecxz
cmp
inc
es
fsts
mov
jecxz
adc
adc
call
cmc
push
mov
and
fisubrl
aad
mov
loope
dec
test
adc
mov
or
mov
andl
cmp
data16
test
mov
dec
ljmp
test
mov
dec
xchg
adc
mov
adc
js
pop
cld
push
or
mov
aad
loope
lods
push
push
inc
jmp
bound
jo
divb
jbe
xchg
mov
insb
shll
in
jge
or
mov
aad
loopnew
xor
ss
pop
xchg
loop
cmc
cmp
add
sti
cmp
push
push
out
xor
jne
loopne
cmp
loop
xchg
cmp
lds
ror
inc
inc
movsl
jbe
mov
jnp
jbe
cmpsl
jg
and
mov
push
mov
pop
jo
mov
stos
addr16
lahf
xor
cmc
add
sub
js
cwtl
push
mov
jbe
xchg
or
jbe
xor
push
xorb
and
je
arpl
adc
imul
inc
mov
sub
pop
cmp
dec
mov
add
mov
mov
mov
test
js
mov
or
popa
jp
loopne
sub
xchg
mov
adc
jmp
icebp
testl
in
push
adc
xchg
dec
mov
in
adc
sbb
gs
mov
inc
jo
and
inc
push
adc
aaa
sbb
jle
lret
xor
testb
pop
lods
inc
mov
jmp
je
add
mov
lea
popa
mov
adc
dec
test
call
ja
mov
dec
cmpsb
cmp
ss
out
out
mov
push
push
movsl
scas
lret
mov
decl
mov
fs
jp
jbe
in
in
sbb
rolb
xchg
ss
mov
ret
add
cwtl
fiaddl
adc
cmpsb
xor
js,pt
xchg
lcall
pushf
rorl
add
pushf
inc
es
lahf
sbb
fimuls
in
adc
int3
std
iret
into
daa
popa
sub
fcompl
jbe
xlat
vsubpd
lahf
lret
sub
jnp
mov
mov
xchg
jbe
fidivl
add
icebp
fnstsw
xchg
or
pop
adc
or
mov
dec
push
or
aad
mov
js
pop
push
sti
insl
adc
stos
jge
mov
mov
lock
sub
add
push
adc
sbb
mov
scas
add
ja
je
jbe
mov
cld
mov
test
jno
scas
adc
lock
pop
nop
sub
les
pop
in
addb
cmp
pop
inc
fstpl
insb
loop
adc
call
inc
movsb
adc
cwtl
xor
adc
adc
and
dec
pop
xchg
test
xchg
mov
test
jge
jo
mov
push
push
data16
and
adc
inc
xchg
aas
dec
mov
jnp
ljmp
stos
xchg
sub
dec
and
stos
dec
insl
and
cmp
mov
add
xchg
jbe
pop
mov
adc
dec
stc
and
sbb
mov
dec
pop
test
and
arpl
cmp
insb
rcrb
int
jg
mov
cmp
imulb
in
jbe
into
pop
pop
xchg
adc
lahf
adc
add
xchg
imul
inc
sub
and
push
xchg
adc
pusha
call
dec
adc
and
adc
clc
and
ljmp
or
dec
inc
fbstp
mov
nop
jae
das
mov
lcall
push
adc
and
pop
in
pop
adc
or
fcompl
lods
scas
ror
out
mov
add
enter
test
pop
pop
xchg
mov
insl
xchg
fimuls
adc
jnp
fldl
nop
stos
push
or
clc
rclb
xchg
xchg
lods
push
pop
cld
sub
in
es
mov
dec
fdivs
in
jb
fisttpll
int3
pushf
ja
cmpsb
outsb
popf
adc
nop
fnstsw
sbb
cmp
xor
push
or
std
nop
and
adc
and
push
filds
adc
add
jae
adcl
push
pop
mov
jmp
or
mov
mov
stos
leave
mov
jmp
inc
sub
out
jbe
inc
icebp
pop
subb
outsb
adc
push
jae
insb
test
pop
push
sbb
std
mov
dec
notb
mov
test
scas
xorb
and
call
push
fimuls
fnstcw
adc
lea
jo
aam
stos
jge
add
adc
mov
lock
out
inc
not
jbe
mov
or
decl
dec
jmp
ss
sahf
adc
adc
xor
adc
pop
nop
or
repz
lods
lcall
mov
mov
les
or
mov
es
dec
stos
ss
xchg
jmp
mov
cld
xchg
mov
cmc
xor
fiaddl
push
rol
jb
push
inc
mov
fists
mov
push
jbe
xchg
push
xor
mov
or
adc
orl
imul
int
cmp
push
das
js
adc
cld
dec
iret
adc
pop
mov
push
lea
xor
add
sbb
adc
adc
pop
xchg
clc
testl
mov
and
lock
pop
dec
mov
daa
adc
xchg
leave
adc
movsl
xchg
or
scas
shr
clc
jno
and
push
in
inc
call
int3
dec
xchg
popf
mov
out
mov
jnp
mov
jbe
ds
push
fs
je
pop
dec
sub
stc
adc
xchg
jg,pn
mov
clc
mov
sar
xlat
push
xchg
rcll
inc
fisttps
ret
push
lock
cmp
jae
dec
lret
fadd
xor
push
cmp
jb
cmp
or
pusha
imul
jle
cwtl
pop
adc
mov
js
mov
add
jmp
cmpsl
and
pop
adc
sahf
iret
xchg
xchg
dec
rolb
movsl
mov
sahf
xor
xchg
icebp
stos
aad
mov
mov
mov
mov
int3
dec
imulb
mov
mov
or
jbe
push
fldl
outsb
jg
pop
cmp
test
push
lcall
ss
insl
jbe
mov
lret
sub
and
decb
sub
push
je
js
mov
xchg
inc
mov
inc
and
ss
xor
mov
push
leave
or
rolb
pop
adc
fs
pop
mov
jns
push
fisubrl
jbe
xchg
fstpt
sbb
lcall
push
jbe
fldcw
adc
andb
push
pop
xor
push
std
jno
mov
cli
jge
nop
push
push
add
mov
pop
jb
testb
pop
lcall
int
cs
jno
adc
xchg
inc
pusha
sbb
mov
sahf
mov
sbb
or
or
into
mov
fmuls
add
adc
sti
cld
psadbw
movsl
adc
push
sub
xchg
lcall
mov
jl
jbe
fisttpl
adc
add
jae
mov
adc
push
std
sbb
add
add
adc
movups
in
dec
jp
je
and
mov
xchg
popa
dec
pop
cld
outsb
cmc
in
imulb
jg
jbe
out
add
push
call
divl
adc
loopne
xor
cli
outsl
xorb
arpl
adc
mov
movsb
jl
inc
adc
outsb
iret
ss
loope
adc
movsl
fstp
sbb
nop
jne
movsl
shlb
rolb
and
push
adc
fidivrl
xor
lea
psrlq
leave
or
pop
in
sub
in
adc
outsl
out
dec
es
lds
repz
jbe
adc
aad
adc
add
add
test
js
clc
fwait
test
fmuls
je
pop
or
bnd
xchg
lcall
daa
loopne
push
bound
sub
xchg
push
xchg
sahf
dec
push
adc
or
and
xchg
mov
xchg
dec
and
mov
sub
mov
adc
pop
xchg
add
je
je
lods
jne
xchg
cmp
push
sbb
adc
sub
mov
shufps
test
cwtl
rol
imul
mov
leave
or
outsl
push
adc
pop
pop
adcb
mov
mov
je
es
outsl
jp
orb
fisubrl
or
imul
push
pop
stos
mov
test
inc
push
and
shll
jbe
xchg
clc
aad
mov
lcall
aas
inc
adc
scas
nop
test
js
cmp
pmullw
mov
xchg
adc
int
mulb
testl
adcl
adc
push
lret
jmp
jae
push
adc
dec
shlb
sub
movsl
frstor
mov
adc
mov
sub
sbb
or
cwtl
or
add
and
xor
pop
inc
in
ds
push
ret
mov
adc
dec
jns
je
sub
je
lahf
cwtl
cli
xchg
aas
insb
adc
add
mov
js
stos
push
push
inc
icebp
pop
jl
lcall
mov
dec
xchg
pop
pop
in
adc
sbb
cltd
idiv
aam
adc
pushf
fxch
aam
pop
push
je
xchg
stos
ljmp
mov
pop
xchg
fsub
sbb
outsb
adc
orb
mov
mov
out
lret
push
jbe
adcl
adc
lock
adc
movsb
pushf
outsl
decl
push
iret
and
pop
mov
repz
ds
das
pop
cld
outsb
lcall
fs
and
rolb
jne
fidivs
in
sbb
adcb
mov
gs
inc
dec
psrld
push
rorb
mov
mov
xchg
insb
repnz
xor
insb
xchg
je
push
das
clc
dec
xchg
push
sti
push
mov
pop
jmp
add
sbb
lea
hlt
aad
dec
pop
cmpsb
inc
push
mov
xchg
imul
dec
or
mov
inc
iret
jo
adc
dec
bound
mov
mov
sub
int3
jbe
popl
and
movsb
aas
into
dec
mov
xor
xor
repz
xchg
jg
mov
rorl
repnz
or
jbe
inc
lods
pop
add
dec
xchg
mov
xchg
divb
aam
mov
mov
pop
mov
and
shlb
movsb
pop
rcrb
lods
push
not
adc
outsl
inc
adc
leave
int
adc
mov
xchg
lock
pop
xchg
xchg
jno
jecxz
inc
sbb
jmp
rcrl
outsl
add
lcall
or
jbe
sarl
movsl
ret
pop
adc
push
lret
adc
or
out
jbe
and
jno
int
pop
in
dec
xor
sbb
inc
stc
frstor
xchg
imul
ss
xchg
push
jbe
sti
cwtl
out
rorb
sbb
pop
mov
and
imulb
popa
and
jns
xchg
imul
mov
cmpsb
xchg
mov
mov
icebp
pop
pop
mov
inc
sahf
push
adc
fiaddl
daa
pop
jne
adc
aaa
push
or
adc
cmp
popa
pop
jmp
mov
pop
cmpl
jb
jne
or
fisubl
inc
in
rolb
iret
xchg
das
inc
xor
mov
jno
adc
adc
or
jge
mov
jecxz
dec
xchg
call
rcll
dec
cmc
lock
mov
cld
and
inc
add
sub
out
and
sub
clc
or
add
xor
jmp
mov
xor
subb
jbe
scas
push
imul
pop
mov
test
and
jns
test
adc
add
stc
negb
add
dec
mov
dec
xorb
aad
jmp
dec
mov
sbb
sub
enter
mov
pop
out
push
ret
dec
push
lea
repnz
cld
adc
fldt
cmpsb
in
movsl
gs
mov
mov
addr16
outsl
sti
add
mov
cli
sbb
lds
ja
call
clc
mov
and
call
jae
adc
pop
mov
adc
and
aas
mov
pop
jbe
arpl
mov
xor
test
jl
int3
stos
lock
adc
icebp
pop
mov
pushf
pop
cld
push
rcll
pop
icebp
adc
lret
sahf
and
mov
xchg
test
sub
jecxz
call
mov
dec
pop
dec
jmp
xchg
jae
or
push
dec
rorb
lcall
or
mov
pop
adc
jle
dec
xchg
nop
out
pop
jbe
repnz
bound
in
enter
fldenv
mov
mov
jg
sub
jbe
add
xchg
cmp
insl
adc
jb
hlt
sbb
lods
add
or
adc
mov
fstpt
jecxz
pop
xchg
shl
pop
cmp
out
aam
lds
jbe
mov
loope,pt
sbb
sti
or
outsb
dec
sub
lea
test
in
adc
mov
cmp
or
mov
imul
out
rcl
arpl
std
jnp
rcrl
xchg
cmpsb
xorb
xor
push
pop
aaa
adcb
adc
cld
mov
fwait
adc
test
pop
ljmp
rcr
in
sbb
leave
sbb
sub
notl
or
cmp
xchg
or
pop
repnz
nop
mov
push
test
push
jmp
pop
pop
adc
and
inc
movsl
daa
mov
pop
faddl
or
leave
test
js
push
andl
lcall
mov
xchg
mov
adc
lods
repz
enter
jno,pt
stos
lea
pop
or
or
jbe
adc
dec
push
imul
stc
test
sub
test
push
fldt
sub
mov
mov
push
mov
mov
stos
ljmp
inc
push
call
mov
jbe
adc
mov
adc
lods
pop
testl
pop
jno
xchg
cltd
jns
adcb
int3
or
jne
aaa
add
mov
cmp
js
stos
jne
outsb
xor
stos
mov
or
dec
push
cmc
or
mov
dec
xor
sahf
push
icebp
cli
xor
sbb
mov
cmp
lods
lea
jbe
jns
in
cwtl
nop
dec
mov
mov
adc
xor
cmp
std
in
sbb
sbb
add
aaa
pop
adc
and
pop
sub
and
iret
shlb
xor
call
daa
xor
scas
shll
or
cmc
xchg
dec
mov
shl
ljmp
int3
fcoml
xchg
cmpsb
push
test
adc
push
fs
jbe
fistps
push
adc
mov
mov
jns
addl
notb
cmc
mov
push
add
stos
add
inc
std
out
fchs
sub
js
test
cmp
adc
out
int3
fldt
mov
fnstsw
add
cmp
rorb
jno
leave
add
or
xchg
aaa
adc
mov
ss
adc
sbb
mov
mov
arpl
sub
cltd
insb
xchg
mov
andl
hlt
jecxz
or
mov
dec
mov
jb
test
cli
nop
and
cmp
loope
xor
xor
outsb
fiadds
sar
scas
adc
jno
adc
mov
data16
add
adc
sbb
sahf
adc
pop
mov
push
addr16
adc
xchg
push
xchg
mov
shll
lea
jl
jge
jp
push
cmpsb
jecxz
xchg
jns
push
sahf
push
xchg
push
dec
jle
mov
ja
mov
imul
and
push
jle
and
xchg
inc
xchg
cld
mov
imul
adc
int
icebp
dec
jl
dec
mov
int
adc
shll
addb
push
test
mov
shlb
iret
add
loop
jns
les
scas
cmc
xor
das
pop
mov
add
idivl
push
add
mov
mov
lcall
adc
sbb
cmpsb
xlat
ja
push
int
dec
dec
push
into
mov
add
out
jno
shrb
pop
xchg
rclb
xor
std
mov
lahf
or
sbb
test
lret
lcall
jbe
adc
mov
pop
jae
popa
and
add
xlat
leave
mov
cmp
fildl
inc
pop
xchg
das
movsl
push
adc
icebp
test
enter
in
rcr
int
imul
aad
mov
fsubrs
cld
push
xchg
pop
fdiv
and
sub
mov
out
lods
add
adc
mov
jl
adc
stos
xchg
xor
lahf
mov
adc
mov
mov
fucomip
mov
adc
or
push
lret
enter
inc
mov
push
test
pop
xchg
and
stc
push
data16
xor
iret
adc
and
mov
xor
scas
in
scas
sbb
and
jbe
sub
push
adc
int3
inc
test
adc
lcall
xchg
or
test
popf
test
je
mov
iret
pop
jmp
out
cmc
into
or
add
arpl
sub
into
mov
cltd
scas
stos
cs
cmp
ja
adc
cwtl
dec
sub
addr16
ret
mov
adc
cmp
xchg
mov
incb
nop
or
cmp
call
xor
push
leave
outsb
lahf
outsb
xchg
pusha
adc
comiss
push
mov
xor
shr
sub
int3
xchg
lret
xchg
mov
movl
push
jno
cmp
hlt
inc
ja
lahf
testb
pushf
jmp
adc
rol
lock
adc
or
xchg
adc
xchg
adc
jg
addr16
fistl
inc
lcall
and
ja
std
mov
mov
loopne
and
das
or
lea
xchg
inc
inc
fiadds
je
inc
cmpsl
cli
sti
adc
xchg
cs
pop
mov
aaa
data16
dec
sbb
gs
loopne
cmp
repz
insb
and
pop
fdivrs
fisttps
ret
repz
or
pop
add
adc
out
scas
and
mov
rclb
xchg
loope
pop
mov
sbb
jbe
mov
mov
nop
pop
sbb
mov
jl
pop
ficoml
ds
and
mov
repnz
insb
nop
movsb
incb
inc
push
jbe
sub
inc
fdivl
adc
dec
xchg
sbb
cmpsb
les
jmp
sbb
imulb
push
imul
dec
stc
cld
jl
adc
in
push
pop
rcll
arpl
mov
mov
rorl
or
jae
mov
mov
push
add
scas
push
push
and
xchg
scas
shl
lea
adc
test
add
cmpsl
dec
addr16
cld
fdivrs
pop
inc
mov
jo
adc
lock
hlt
ljmp
inc
adc
fistl
adc
add
xor
mov
and
lret
shr
ja
dec
js
mov
popa
outsb
pop
pop
out
mov
stos
xchg
push
mov
adcb
sbb
fstpl
pop
jno
adc
addr16
cltd
dec
mov
leave
mov
xchg
mov
iret
jbe
push
rol
dec
adc
xchg
mov
leave
sub
or
and
clc
scas
ss
push
push
sahf
sbb
das
and
mov
mov
push
dec
aaa
aas
out
out
mov
mov
inc
lea
or
std
sub
or
in
adc
push
out
lret
shlb
push
sub
adc
pop
and
jae
data16
shll
or
mov
xchg
pusha
mov
push
sbb
sarl
lea
imul
inc
lcall
movl
int
inc
push
addr16
lea
push
mov
insl
cmp
dec
adc
dec
fidivs
adc
and
xchg
xor
imul
bound
mov
bound
out
fmuls
mov
nop
movsb
push
aad
stc
pop
adc
sbb
lods
cmp
ds
aas
adcl
aam
dec
shll
sub
add
pop
imul
or
jbe
dec
test
xlat
stc
sub
jle
rep
loopne
push
test
adc
aaa
jge
mov
xor
popf
jbe
sbb
call
adc
mov
out
cli
or
js
xchg
mov
loopne
insl
xchg
inc
sub
not
xchg
aas
cld
jbe
or
leave
pop
adc
scas
test
rcrl
into
jno
fsts
add
inc
insl
mov
jp
mov
add
push
jge
fidivs
and
xchg
scas
sub
out
jbe
jmp
mov
dec
push
and
lret
ljmp
stos
pop
adc
aad
and
shlb
mov
sub
push
mov
std
pop
mov
adc
mov
femms
push
jbe
fsubl
iret
xlat
mov
push
insl
insb
scas
lods
in
mov
ja
push
xchg
mov
xor
ja
jo
aad
cmpsb
lret
lcall
xchg
jl
jbe
rcrb
jnp
cli
popa
cmpsb
adc
insl
aad
and
int3
pop
dec
test
cmp
push
adc
xor
sbb
inc
mov
call
mov
outsb
inc
pop
sbb
lcall
movsl
mov
mov
decl
mov
sbb
mov
fcoml
testl
mov
mov
lcall
adc
cmp
push
lods
int
adc
mov
adc
inc
inc
inc
mov
jge
mov
clc
ss
andl
xchg
sub
inc
fsubs
mov
mov
dec
and
imul
cmp
push
mov
rcrl
ja
in
icebp
xor
adc
rcrl
mov
mov
xchg
les
arpl
icebp
xchg
mov
mov
jp
jbe
xlat
jecxz
leave
dec
add
adcb
js
bound
jbe
mov
test
pop
in
in
sbb
or
pop
cmp
adc
ljmp
data16
jg
pop
push
in
repz
dec
je
popf
outsl
xor
movsb
pop
aad
inc
sub
inc
adc
adc
or
loope
push
loope
xchg
nop
daa
mov
jge
pop
daa
mov
nop
fucompp
mov
cmpl
ja
xchg
popl
lret
mov
stos
jbe
and
mov
imul
push
mov
sbb
out
std
and
pop
adc
sub
int
xorl
stos
ret
xor
out
xchg
sub
std
sub
add
push
jno
mov
adc
arpl
lcall
or
lea
push
mov
mov
push
jns
mov
arpl
jmp
rclb
sub
out
push
pop
movsl
imul
adc
jg
rorl
cwtl
ja
nop
aad
sub
gs
xchg
inc
pop
xchg
pop
add
mov
aam
je
push
sub
jbe
dec
mov
xchg
xchg
mov
cli
add
adc
sub
push
and
shrb
enter
adc
pop
dec
adc
or
sbb
divb
add
fdivrs
fwait
scas
mov
mov
cmc
or
add
jbe
jnp
adc
adc
cmp
sbb
mov
clc
fwait
push
xor
sub
xchg
cs
jo
mov
push
loop
pop
mov
mov
push
aaa
xor
adc
jno
inc
pop
push
in
aam
jbe
hlt
movsb
inc
aas
ficoms
adc
inc
mov
xchg
shlb
rcll
jg
int
dec
inc
repz
or
xchg
mov
adc
and
lcall
mov
outsl
push
or
mov
sbb
nop
xchg
repnz
mov
cli
cmpsb
cmove
adc
jecxz
xchg
mov
jg
fwait
dec
sbb
subb
arpl
shll
dec
add
push
scas
pop
adc
add
ja
adc
and
and
xchg
mov
adc
shrb
or
and
jo
xor
je
mov
aas
cmp
push
paddusb
push
imul
mov
loop
adc
push
hlt
mov
mov
test
jns
loop
add
fstl
sahf
jl
xchg
adc
adc
or
movsl
adc
test
push
mov
mov
mov
jns
jae
dec
adc
inc
xor
cmp
out
xorl
sbb
ja
jae
mov
and
cwtl
adc
pop
fdivrs
sub
wrmsr
cwtl
pop
cmp
bound
adc
ss
ss
movsb
cmp
mov
xor
rolb
incb
pop
imul
and
mov
sahf
adc
pusha
cmp
xor
mov
call
stc
xchg
loope
in
adc
mov
fimull
sub
and
sti
adc
arpl
lcall
and
insb
pop
mov
inc
push
decl
adc
mov
sti
cmc
sub
cmc
xchg
cmc
mov
cmp
mov
adc
ret
lcall
out
xor
jbe
jmp
jmp
clc
lock
popf
push
dec
jbe
daa
call
push
int3
cwtl
xor
xor
pop
or
jnp
data16
fs
push
mov
jnp
mov
adc
and
or
or
push
sbb
adc
xchg
lods
adc
sbb
cmp
mov
loopne
inc
jl
push
pop
jo
xchg
out
xchg
mov
mov
cmc
aas
fsubr
into
call
xchg
mov
arpl
mov
adc
dec
add
jbe
sbb
stc
sbb
fwait
imul
add
in
lcall
inc
cmp
dec
mov
test
lods
or
adc
push
xchg
and
out
add
xchg
sub
xor
dec
ja
mov
sbb
ljmp
inc
xchg
push
dec
xchg
add
js
repz
mov
aam
imul
in
iret
test
mov
mov
pop
push
shll
xorb
pop
enter
ret
outsl
and
adc
in
mov
push
mov
jne
fcomps
push
in
jge
inc
in
add
or
mov
lods
dec
shll
push
ds
test
jle
mov
ficoml
xorb
dec
jmp
jg
stos
xchg
xchg
mov
inc
inc
mov
outsl
mov
push
inc
jecxz
or
divl
adc
clc
xor
mov
jno
test
and
xor
adc
rorl
xchg
mov
lahf
ret
in
cmp
jbe
pop
or
sahf
and
jbe
les
dec
mov
cmp
dec
push
jmp
mov
movlps
cmpsb
mov
sti
adc
xchg
repnz
lret
or
dec
jbe
mov
rcll
add
mov
mov
mov
adc
sub
xchg
sub
xchg
loope
aam
pop
out
test
movb
xlat
add
dec
jo
mov
push
hlt
std
hlt
rorl
mov
movsb
dec
and
mov
xchg
or
add
jns
mov
adc
movsb
xlat
rcll
inc
jge
cld
xor
out
mov
push
dec
adc
jbe
xchg
dec
ret
inc
jo
ljmp
pop
cmpb
je
xor
sbb
data16
test
sbb
xor
jne
addl
xchg
adc
sbb
cmpps
xlat
jbe,pt
insb
in
outsb
les
stc
jne
jecxz
arpl
pusha
fstpl
jbe
sbb
push
popa
or
xor
push
mov
stos
js
dec
and
pop
out
or
outsl
lea
push
or
jbe
mov
into
aaa
adc
mov
rorl
add
jg
mov
cmp
mov
hlt
psubusb
cltd
out
inc
adc
adc
adc
movb
testb
mov
nop
movsl
jb
popa
stos
mov
outsl
sbb
test
imulb
push
fwait
iret
pop
adc
adc
inc
jb
and
testb
jns
xchg
adc
and
xchg
rorl
call
sbb
es
or
sub
pop
adc
arpl
cmp
call
ss
mov
mov
lret
aaa
mov
ja
adc
jnp
js
xchg
in
sub
stos
mov
cmp
dec
sub
mov
sub
pop
loope
insl
mov
xor
sub
jmp
add
xor
fstpl
pop
and
push
push
sub
mov
fidivl
pop
cs
lahf
adc
decl
or
xchg
and
fnstcw
ja
push
pushf
test
rolb
into
lock
mov
mov
jle
fs
pop
xchg
imul
adc
xchg
mov
pop
push
adc
ljmp
push
dec
out
int3
sub
mov
pop
pop
sub
test
pop
and
pop
psubusw
loopne
mov
jns
roll
or
in
mov
stc
test
push
ror
jbe
xchg
aaa
mov
pusha
inc
movsl
adc
testb
lods
push
arpl
push
fstpl
mov
lock
mov
cwtl
jmp
dec
aam
ret
mov
xor
inc
xor
jno
dec
daa
mov
icebp
je
adc
or
rorb
jge
mov
jno
rorl
adc
inc
ja
sti
jns
xchg
bound
popf
fisubrs
mov
ds
fisttps
and
push
xor
mov
fisubrs
xor
aaa
jne
push
xor
jnp
jb
lret
ja
dec
mul
mov
mov
jmp
bound
push
lahf
nop
xchg
add
mov
in
ret
shll
or
jae
sub
lods
mov
in
cmp
and
cmc
xlat
mov
jg
outsb
aaa
sahf
mov
in
jmp
out
popa
xchg
pop
inc
fdivs
push
ret
adc
inc
jbe
stos
mov
inc
pop
and
and
outsb
shll
ljmp
testb
mov
fs
mov
fldcw
sub
hlt
sahf
xor
inc
inc
paddb
push
jg
lret
adc
ds
inc
fstl
fistl
mov
fwait
clc
repz
inc
xor
dec
and
jmp
in
mov
aam
ds
imulb
xor
mov
dec
mov
add
xor
mov
adc
jbe
cwtl
jbe
sub
jp
leave
jge
sbb
adc
cmp
or
jge
out
mov
fsubrl
pop
pop
jbe
adc
push
popf
mov
sbbl
dec
push
sbb
push
sbb
mov
push
or
and
pusha
stos
cltd
and
add
adc
push
pop
adc
hlt
adc
aas
mov
or
cmp
adcl
push
cmp
movsb
jg
adc
hlt
jbe
call
ret
push
sub
sub
rcl
je
test
cli
daa
loop
mov
xchg
push
pusha
adc
push
push
xchg
jno
ss
pop
xchg
outsl
add
daa
icebp
jbe
cmc
pusha
in
mov
push
pop
cmp
fst
fldenv
inc
test
arpl
add
pop
lcall
cmp
loopne
or
std
insl
cmp
sbb
mov
loope
and
inc
popa
cmp
sub
adc
jge
enter
stc
imul
int
adc
das
mov
sahf
jge
mov
movsb
sbb
inc
and
sub
mov
jp
jbe
inc
jmp
mov
adc
pop
in
orl
mov
mov
and
rcl
pop
aad
pop
adc
insl
out
inc
arpl
punpckldq
sbb
mov
clc
mov
sbb
adc
and
adc
adc
inc
xlat
sbb
mov
mov
lret
cltd
jbe
popf
push
outsb
mov
dec
cmp
lcall
adc
fists
fsub
sub
push
mov
adc
aaa
sahf
xchg
mov
ret
outsl
mov
mov
jo
cmp
jne
cltd
and
mov
dec
sub
cmc
into
push
jae
inc
dec
leave
inc
or
test
inc
mov
lret
ljmp
xchg
inc
cmc
ja
dec
loop
mov
add
imul
sub
repnz
jmp
imul
out
pop
enter
add
les
into
test
adc
subb
jb
nop
jb
mov
or
xchg
mov
pusha
stos
jecxz
pop
out
pop
ret
mov
and
xchg
dec
adc
arpl
movsb
sbb
or
int3
add
mov
fcoml
mov
mov
in
hlt
jae
loop,pt
xor
es
fwait
outsb
mov
rcll
aaa
pushf
jg
sub
lcall
xor
fistl
pop
inc
jbe
xchg
inc
in
mov
sahf
mov
dec
icebp
and
and
loop
adc
insb
aas
bound
loopne
xchg
cmc
mov
mov
pop
insl
adc
mov
push
out
notb
push
mov
decb
cmpsb
jbe
mov
mov
test
push
adc
push
push
adc
push
call
xchg
lds
mov
popf
aaa
adc
or
scas
jae
jp
hlt
sbb
mov
call
lea
mov
iret
cs
and
inc
adc
cmp
jmp
adc
push
mov
sbb
dec
andb
ljmp
psllw
adc
sbbb
into
push
loope
xor
sbb
add
ss
jo
adc
mov
cmp
call
xchg
or
je
xor
sbb
in
cmp
adc
jecxz
loope
int
les
cld
dec
out
pushf
jnp
push
mov
sbb
mov
out
xchg
xor
pop
adc
icebp
int3
mov
dec
jbe
mov
rol
cmc
cmpsl
mov
push
xchg
jnp
das
inc
test
notl
nop
int3
pop
dec
xchg
cld
lahf
notl
outsb
movsl
lock
or
mov
mov
out
cwtl
adc
mov
push
mov
out
sbb
sub
dec
test
iret
movb
and
lahf
mov
xchg
and
cwtl
jg
jae,pt
mov
mov
shl
sub
in
adc
popa
inc
stos
add
dec
daa
std
mov
fwait
stos
mov
movsl
jge
and
cmpsb
push
adc
out
adc
jbe
lock
and
cs
push
adc
lock
mov
jl
jmp
cmc
mov
rol
imul
adc
rcl
pop
daa
adc
xor
clc
mov
int3
adcb
aas
jne
inc
cli
lock
push
mov
lahf
das
popa
pop
mov
fistl
cmpsb
in
adc
outsb
xchg
ret
leave
sub
pop
pop
rcr
adc
pushf
shl
jbe
inc
rolb
repz
mov
push
pxor
in
nop
fwait
ja
dec
jae
xchg
add
push
jnp
push
jbe
add
add
fstps
and
sub
jns
lods
adc
adc
mov
jecxz
aaa
inc
outsl
adc
cmp
inc
pop
mov
xchg
lods
mov
cli
lcall
mov
aam
sbbb
sub
add
pop
jl
cld
sbb
adc
cwtl
mov
push
sub
dec
mov
ror
cwtl
mov
adc
xchg
test
push
adc
int
mov
jge
dec
jl
fidivl
xchg
insl
mov
sub
or
mov
mov
or
pushl
mov
push
hlt
ret
mov
pushf
add
adc
test
sub
movl
pop
mov
loop
mov
ja
mov
dec
movsb
push
cmpsl
push
adc
cmc
loope
cmp
mov
mov
sub
or
mov
outsb
or
inc
sti
adc
push
andb
add
push
push
leave
addl
in
mov
test
jp
arpl
lahf
adc
jae
jnp
mov
outsl
adc
or
inc
jmp
aas
push
insl
sbb
imul
push
js
in
lea
aad
pushw
lret
out
add
jbe
divl
add
in
stc
test
jae
inc
and
pop
andl
leave
leave
and
lea
std
mov
push
add
jg
addr16
push
sub
std
fbstp
dec
and
sub
mov
mov
sub
push
adc
mov
mov
jp
adc
and
jbe
dec
push
pop
adcl
or
jle
iret
ss
jbe
xor
test
adc
xchg
data16
aas
sbbb
arpl
inc
push
insb
rcrl
pop
mov
adc
daa
ljmp
or
pop
ficoml
rorl
popa
lds
mov
xchg
adc
adc
insb
das
shlb
daa
adc
ficompl
ss
and
iret
push
jae
sbb
daa
mov
xor
xchg
fisttpll
into
adc
scas
popf
mov
out
push
ret
lahf
cmp
or
xor
cmp
push
popa
xchg
pop
adc
test
imul
sbb
sbb
mov
mov
ja
sbb
sbb
aam
lcall
loope
adc
gs
inc
pop
inc
clc
data16
mov
decb
into
int
and
or
xor
ds
into
popa
dec
js
dec
and
dec
adc
imul
bsf
pusha
xchg
adc
cmp
lock
sub
dec
nop
and
jo
nop
inc
add
mov
dec
mov
xchg
movsl
jbe
mov
cmc
setne
insl
or
sbb
scas
pop
xlat
mov
xorb
mov
adc
fadds
outsb
sub
fldcw
scas
sbb
mov
xchg
adc
jno
push
bound
xor
test
dec
and
ljmp
je
xor
mov
cmp
jae
int
jno
ja
aaa
pop
nop
icebp
dec
std
cmp
mov
dec
outsl
in
xor
ja
pop
push
out
data16
fistpll
fdecstp
dec
stos
mov
jns
cmpsb
xchg
sub
cmp
mov
inc
iret
roll
shr
lret
push
push
or
mov
andb
fmull
xor
adc
dec
arpl
insb
xchg
add
ja
test
dec
adc
stc
lret
xchg
mov
out
imull
and
aaa
mov
adc
shl
sub
sti
iret
adc
jne
lods
push
xor
jbe
xor
cmp
sarb
addr16
lea
ret
xchg
jae
push
xor
rep
ss
jle
scas
outsb
arpl
fstp
aaa
rorl
xlat
or
inc
dec
jns
add
adc
jle
jbe
enter
xor
xor
fnstenv
testb
loop
fxam
mov
rcrb
rol
sub
mov
out
adc
jmp
sub
fnsave
and
mov
adc
lods
iret
push
and
or
sub
pop
stos
stc
pop
xchg
inc
sti
xchg
sahf
inc
cmpsl
outsb
mov
test
jle
mov
mov
mov
nop
cwtl
scas
mov
adc
das
and
or
std
cmp
hlt
xchg
mov
test
and
mov
or
ljmp
pop
shrl
pop
push
adc
aas
and
pop
outsb
sub
mov
adc
add
cmpsb
std
cmp
mov
test
ficoml
mov
addr16
pop
psllw
fiadds
push
adc
sub
cwtl
ror
xlat
nop
rolb
jg
in
mov
adc
mov
inc
hlt
pop
xchg
jmp
ss
mov
sub
loopne
xor
iret
rorb
cmc
adc
orb
sbbl
jno
orl
push
mov
int3
movsl
bound
imulb
nop
dec
mov
fisubl
lret
nop
add
enter
repnz
test
jo
sti
mov
shll
mov
mov
sub
scas
mov
mov
std
sahf
adc
lahf
adc
jl
scas
dec
insb
add
dec
mov
popf
mov
mov
mov
jbe
dec
arpl
in
cmp
xor
into
sbb
mov
jbe
lret
in
add
cmp
enter
inc
movsb
fs
cltd
and
rorl
sub
jg
add
adc
shrl
int3
subl
test
cmpsl
mov
sbb
push
das
sub
fisubl
cmpsb
adc
push
xorb
mov
mov
cmp
scas
stos
out
and
pop
testb
loope
inc
adc
pop
js
push
jmp
pusha
mov
vminsd
lahf
mov
xchg
mov
mov
daa
xchg
xorb
jbe
sub
add
mov
dec
out
lcall
cli
inc
jbe
ja
push
lahf
adc
sbb
pusha
mov
pushf
arpl
ret
andb
lods
inc
adc
dec
push
sti
out
mov
xor
or
lods
repz
aam
mov
adc
addr16
repnz
daa
adc
cwtl
mov
sti
lods
clc
jno
fwait
int
jmp
cmp
jno
xor
sub
sub
ret
dec
fadd
jge
mov
sub
lcall
test
xchg
push
xlat
lret
push
xchg
inc
jb
adc
mov
pop
cmp
test
mov
dec
out
xchg
je
popa
adc
mov
xor
xchg
xlat
mov
inc
lcall
xorb
mov
mov
xlat
ficoms
fnstenv
test
repz
jle
fistl
std
mov
cli
jbe
iret
ret
adc
cmpsl
lds
or
clc
loopne
fwait
jp
aam
xor
popa
das
lea
adc
adc
fucomi
aad
sahf
fcomi
cmp
adc
or
fwait
movsb
adc
std
adc
mov
vminps
out
add
adc
jb
xchg
sbb
pop
test
jbe
push
insl
or
outsb
lea
or
inc
lods
add
in
out
pop
arpl
sbb
push
cmpsb
jne
sub
pop
mov
adcb
pop
aaa
repnz
shlb
adc
data16
mov
test
cli
mov
js
dec
pop
xchg
mov
mov
nop
xor
push
pop
push
push
xchg
lea
jb
aaa
push
push
rol
aaa
insl
fwait
cmp
fcompl
push
arpl
jae
rolb
loopne
mov
push
and
ficomps
icebp
adc
xor
lret
jg
push
adc
lret
mov
mov
fistps
fistpll
jno
mov
faddl
or
repz
jns
ja
push
jno
sub
test
xchg
testl
inc
mov
pop
pop
and
scas
pop
daa
jbe
mov
fcmovu
mov
sub
stc
xor
add
inc
bound
xchg
icebp
decl
or
mov
movsb
rcrb
pop
inc
sub
or
xchg
cmpsl
mov
adc
mov
out
xor
out
adc
insl
pop
mov
dec
jns
xor
inc
xchg
outsb
mov
add
dec
push
ror
and
incb
mov
hlt
mov
mov
mov
icebp
or
jle
jl
jns
je
sub
je
popa
imul
aas
cltd
inc
xchg
movsb
icebp
icebp
mov
mov
mov
adc
and
push
lcall
dec
pushf
in
pop
dec
stos
mov
cmpsl
cmp
xor
cltd
stos
inc
mov
xchg
pop
ds
jo
adc
movsl
nop
adc
push
add
xor
mov
movsl
sar
std
ret
dec
fwait
or
or
and
adc
push
cmp
mov
xor
lds
outsb
mov
sbb
fcomps
mov
loope
jo
add
cmp
mov
fiaddl
sti
inc
stos
nop
adc
push
aas
pop
mov
stc
cmp
mov
push
jle
lods
sbb
in
jno
bound
mov
icebp
dec
xchg
ss
stc
iret
fsts
sbb
xchg
mov
mov
push
adc
add
stc
and
outsl
insl
loope
xor
jne
les
test
xor
fld
dec
jbe
out
jns,pt
loopne
push
or
cli
inc
push
fsubl
xchg
xchg
out
adc
push
xchg
movsb
fsubrl
adc
stos
rcrb
xor
pop
push
sbbb
or
mov
test
cmp
mov
sbb
jmp
aad
cwtl
jbe
cmp
cmp
fdiv
test
fisttpll
sub
stos
nop
xchg
mov
les
pop
push
inc
outsl
loopne
in
sub
movsb
jbe
add
adc
sbb
push
sub
adc
je
hlt
std
or
bound
lret
xor
jmp
hlt
call
cs
das
mov
fsts
push
sti
popf
adc
inc
dec
dec
movsb
lods
testl
jl
inc
sub
mulb
xchg
and
pop
mov
test
imull
adc
mov
xchg
inc
push
pop
fsts
xchg
xlat
cmovbe
push
inc
inc
mov
xchg
lds
out
je
inc
rolb
dec
movsl
imul
jno
cmp
lret
addr16
rcrb
adc
arpl
pop
int
inc
cmp
push
movsl
aad
data16
mov
mov
mov
dec
sbb
mov
repz
lds
jbe
push
insb
out
insl
and
adc
repnz
ss
pop
call
mov
or
jae
cmc
jg
idivl
cmp
call
jns
insl
adc
mov
ret
sbb
cmp
sbb
mov
fdivrl
mov
mov
sbb
mov
add
mov
push
cmp
mov
roll
cmp
mov
imul
mov
in
repnz
in
ficompl
lods
adc
or
mov
pop
jb
push
dec
mov
mov
inc
sub
repz
in
jecxz
push
cmpsb
lcall
cmp
in
xor
adc
push
out
rol
lods
push
or
out
arpl
loopne
mov
adc
pop
push
subb
xchg
mov
iret
lock
xchg
pcmpeqw
push
sub
sbb
leave
mov
xor
xor
adc
mov
divb
jb
cli
dec
dec
jbe
int3
inc
movsl
pop
inc
mov
push
jnp
jno
ja
cs
nop
lahf
cmpsl
hlt
mov
notb
daa
mov
insb
cmp
iret
mov
jb
mov
xchg
lret
jbe
outsb
jns
or
test
mov
sub
add
xchg
and
shr
xor
daa
mov
dec
sub
or
outsl
inc
jbe
cmc
test
adcb
outsb
fs
push
jecxz
repnz
aam
pop
xor
loope
fcompl
adc
ficompl
int3
cmp
std
out
cwtl
fldenv
and
mov
insb
sahf
jbe
out
daa
jg
add
sub
shl
inc
nop
cmp
push
daa
dec
sbb
mov
aas
int3
xchg
sbb
aam
ret
push
jnp
push
jbe
aaa
mov
lret
xchg
addr16
leave
lds
stc
and
icebp
cltd
leave
adc
and
lock
sub
push
jnp
ret
xchg
jbe
mov
sbb
or
shll
test
xor
xchg
pop
mov
jmp
push
pop
mov
xorl
call
mov
js
in
scas
faddl
xchg
dec
int
sub
lds
adc
sub
lret
ja
mov
in
mov
or
aaa
outsb
push
outsl
sub
std
mov
and
sub
icebp
inc
or
sbb
in
daa
call
sbb
fwait
xchg
dec
xchg
mov
xchg
mov
mov
lahf
cltd
ds
xchg
add
pop
sbb
outsb
jbe,pn
add
stc
dec
jnp
out
popaw
mov
aad
jmp
sub
jbe
lcall
adc
insb
sti
dec
xor
jbe
push
lds
daa
inc
xchg
adc
jp
adc
sbb
mov
jecxz
or
inc
push
mov
pop
dec
sahf
inc
inc
sub
aas
jmp
sti
xor
push
adc
and
mov
roll
inc
jbe
addr16
pop
mov
mov
sub
xchg
push
jbe
mov
outsb
xchg
arpl
imul
xor
subb
stc
add
mov
les
in
cmpsb
je
imul
xor
movsb
adc
gs
or
mov
xchg
cmp
mov
cwtl
imul
aas
jae
mov
add
inc
fs
add
hlt
or
and
gs
mov
or
insb
cmc
mov
xor
fwait
mov
in
xor
or
jbe
leave
insl
cmpl
fmuls
push
mov
and
xchg
les
xor
xor
jb
rdmsr
shlb
test
mov
xor
mov
push
pushf
je
pop
push
sahf
and
jns
sub
jge
mov
iret
jnp
dec
xlat
jbe,pn
xorl
test
jmp
adc
xchg
sahf
fbld
jecxz
mov
test
in
mov
sbb
push
cmp
movsl
push
es
add
xadd
cs
xchg
sub
js
push
out
mov
ss
add
shll
outsl
shlb
xchg
leave
mov
sbb
jb
mov
scas
ja
xor
jle
adc
outsl
or
negb
jbe
xchg
inc
jae
in
adc
lret
jbe
or
sbb
jbe
push
and
mov
stos
stos
xchg
out
testb
dec
pop
push
push
xor
insl
adcl
mov
cmp
cli
ljmp
lret
call
lds
mov
push
mov
jbe
ret
out
into
dec
stos
in
adc
out
dec
push
pop
xchg
scas
shrb
pusha
imul
mov
and
pusha
dec
vmovdqa
loopne
push
mov
mov
sti
test
adc
and
loopne
sub
mov
add
mov
idivl
loop
repz
dec
jmp
jmp
andl
adc
ds
mov
frstor
dec
dec
adc
or
mov
push
jnp
ljmp
push
rcrl
lret
push
stos
sbb
mov
xorb
iret
and
enter
mov
adc
lahf
inc
cld
adc
cmp
mov
cmp
mov
xchg
mov
jnp
mov
pop
mov
cmc
sbb
outsl
push
adc
mov
xor
xchg
jae
mov
shl
jle
cs
lret
pop
imul
jp
les
aaa
rorb
xor
push
cli
stc
sbb
jbe
inc
call
cwtl
adc
iret
out
repz
fdivr
jne
imul
ja
outsb
adc
inc
pop
mov
lods
xchg
sbb
inc
mov
push
enter
sub
add
add
mov
adc
lcall
mov
dec
aam
and
cmpsl
into
js
push
dec
and
adc
xlat
loop
inc
test
or
sub
subl
orl
xchg
test
lods
jbe
cmp
out
fwait
loope
adc
dec
push
lock
push
push
enter
jb
sbb
mov
jbe
or
and
jle
lods
adc
fistl
lods
add
mov
sti
in
jo
mov
decb
push
insb
dec
sbb
adc
test
sbb
test
mov
push
cmp
xchg
adc
cmpb
pusha
adc
sahf
push
mov
rclb
addl
fisttps
jbe
or
sahf
adc
inc
test
pop
ret
js
enter
das
enter
add
insb
inc
aad
in
hlt
adc
pop
imul
in
mov
xchg
dec
bound
adc
xchg
rorl
push
daa
xchg
out
cmpsl
cltd
jbe
push
stos
pop
insl
orb
jb
arpl
shl
push
scas
jns
mov
dec
pop
cmc
out
dec
add
bound
insl
push
and
and
xchg
adc
add
shll
mov
loop
fldl
cmp
shlb
cwtl
or
jl
mov
mov
popf
jle
jbe
lods
les
xor
add
js
stos
es
test
into
insb
xor
jbe
icebp
sub
out
je
inc
into
mov
xchg
push
mov
dec
pop
clc
stos
jle
call
jnp
pop
ljmp
fidivs
pop
or
or
mov
mov
out
insb
xchg
clc
loop
adc
ja
cli
mov
ret
push
fs
or
jmp
pop
test
inc
aaa
gs
movsb
adc
dec
jg
je
push
jmp
mov
xchg
mov
jge
mov
or
cmpsb
xchg
push
jno
adc
rolb
popf
addb
test
dec
mov
add
iret
jbe
jg
mov
adc
and
fdivs
leave
lret
adc
fdivrs
jnp
pushl
mov
push
pop
mov
fisubrs
gs
adc
in
roll
lea
mov
cmp
or
pop
mov
mov
jl
jle
stc
jecxz
int3
divl
pop
xchg
call
in
add
mov
sbb
jg
or
sahf
xorb
mov
gs
inc
mov
movsb
fiaddl
and
adc
leave
imul
add
sbb
into
in
iret
sub
dec
in
jl
test
in
mov
out
loope
aad
push
cmp
gs
std
sub
jbe
lret
pop
mov
popf
pop
sarb
dec
enter
jb
js
aam
adc
clc
pop
aas
xlat
in
adc
in
jbe
loop
fcomip
stos
test
lds
mov
xchg
mov
into
mov
roll
bound
sbb
sbbl
cmp
mov
in
cmp
js
push
jno
sbb
bound
push
inc
inc
jb
xor
or
fimull
jecxz
jl
mov
ds
popf
inc
test
cmp
sub
popa
mov
out
in
adc
mov
mov
add
jno
fsubs
stos
js
lcall
and
xor
lret
dec
push
mov
jae
movsl
out
mov
std
pop
dec
mov
inc
fcomps
daa
aad
fwait
sbb
pop
jg
stos
cmp
test
xchg
test
and
add
jbe
out
and
and
in
jae
cli
mov
or
xchg
rcrb
jns
xor
pop
stos
sub
sahf
adc
add
mov
int
shlb
sar
sbb
lcall
jns
adc
xor
mov
movsl
push
ljmp
pop
mov
mov
ja
scas
dec
lock
out
mov
inc
cmp
push
inc
movsl
jmp
mov
ret
inc
js
adc
cmp
fld
adc
dec
sbb
insb
mov
pop
xchg
mov
lcall
inc
adc
ljmp
lret
out
adc
lock
cli
int3
test
test
and
rcrb
repz
add
in
pop
cmpsl
popf
xchg
sbbb
ret
sub
or
iret
cmp
popf
fwait
xchg
dec
out
mov
jp
js
je
xor
lods
pop
and
cltd
push
cmpsl
fisttpll
loopne
scas
push
lret
xor
push
add
and
shll
push
xchg
hlt
out
jae
or
or
xor
pop
mov
lcall
lret
out
into
stos
cli
push
popa
nop
fildl
jge
dec
push
xchg
jp
cmp
pop
popl
mov
and
xor
xchg
xor
cwtl
adc
xchg
adc
movntps
adc
jae
xchg
and
sbb
xchg
cs
push
sbb
in
and
cwtl
push
or
nop
lahf
pop
bound
ss
mov
aaa
adc
dec
mov
sub
daa
and
jge
not
in
xor
sub
test
adc
addl
push
lock
cli
ret
jge
and
add
pop
mov
jl
jbe
sahf
add
mov
jp
lea
ljmp
jns
jp
adc
aaa
mov
adc
jle
scas
dec
pop
jbe
negb
adc
adc
mov
cmp
adc
test
inc
and
adc
iret
mov
cmp
xchg
and
jl
xchg
icebp
out
adc
mov
sbb
mov
out
push
adc
insb
es
inc
jno
mov
xchg
adc
shlb
push
add
outsl
adc
hlt
push
sub
mov
or
xor
pop
mov
lods
mov
insl
ljmpw
push
ficompl
xchg
popa
lea
roll
dec
shlb
ror
mov
fcos
jae
icebp
or
ret
inc
bound
test
adc
push
mov
testl
in
insl
ret
jbe
ljmp
adc
cmp
fstpl
fisttpl
mov
into
imul
test
sar
xchg
adc
mov
testb
jle
jbe
aam
mov
nop
and
push
add
xor
cmp
dec
inc
negb
sti
popa
and
stos
icebp
out
call
pop
mov
divl
inc
and
jg
sbb
mov
test
mov
scas
aam
or
adc
iret
jmp
pop
mov
cmpsl
xor
jne
adc
and
test
insb
test
add
adc
push
push
aad
daa
cmp
cwtl
jb
push
out
cmp
dec
cltd
mov
shrb
mov
adc
jne
or
mov
movsl
fs
in
jle
push
push
shlb
fists
sti
add
xor
or
pop
adc
ds
mov
dec
and
xchg
add
mov
stos
mov
nop
adc
mov
mov
cs
cltd
popa
mov
jbe
fmuls
lods
pop
or
dec
xor
pop
fs
jno
xlat
cmp
adc
add
lock
mov
jo
jb
push
arpl
inc
popf
lcall
mov
or
movsb
cmc
mov
or
adc
lock
mov
ficoml
adc
pop
pop
rorl
test
pop
rcll
clc
dec
push
movups
jg
inc
shlb
sbb
inc
ja
adc
push
repz
ror
inc
cmp
inc
ret
outsb
je
sub
idivb
insb
push
movlps
fsubrl
popa
outsl
lock
adc
inc
daa
mov
mov
mov
mov
mov
xchg
cmp
stos
push
nop
divb
testb
adc
divb
jmp
adc
adc
xchg
push
adc
sub
xor
xchg
cmp
push
ret
push
add
arpl
mov
inc
mov
lret
xor
pop
mov
aam
adc
or
mov
inc
mov
mov
inc
dec
pusha
jl
lahf
mov
cmp
jno
mov
insb
or
bound
stos
xor
xor
movsl
mov
jbe
dec
insl
jo
cltd
jae,pn
pusha
lods
xchg
cmp
adc
sub
mov
sbbb
sarl
shll
pop
aam
loopne
mov
in
mov
mov
mov
sbb
mov
mov
call
push
pop
jl
adc
mov
xor
add
sbb
sbb
pop
inc
aaa
hlt
pop
cmpsb
rorb
inc
ja
jbe
xorl
dec
adc
popa
insl
test
push
enter
je
mov
test
lds
add
iret
xor
pop
loope
fs
push
clc
enter
testb
adc
lods
dec
lahf
or
mov
test
push
imul
insb
jge
out
pop
adc
aam
inc
adc
shlb
xchg
add
mov
add
addr16
jo
inc
test
sbb
jo
mov
jbe
inc
inc
sbb
stc
iret
push
loopne
xchg
into
imul
fbstp
aam
mov
in
mov
jl
fistps
rolb
lret
pop
push
fcoml
jp
adc
int
mov
sub
cltd
add
dec
jecxz
adc
cmpb
xor
and
or
pop
dec
in
cmp
adc
into
xchg
mov
jecxz
js
rcr
addr16
mov
add
mov
cmc
mov
adc
jmp
out
call
sbb
xchg
adc
adc
addb
mov
inc
pop
int
aas
mov
xorl
std
fists
inc
or
mov
lret
out
shrb
sahf
fwait
push
mov
movsl
dec
clc
int3
push
mov
push
outsb
jbe
dec
sahf
aaa
pop
clc
jle
jno
aad
and
in
dec
dec
shll
pop
jmp
mov
fisubrl
dec
out
jbe
xor
lods
or
xor
das
out
mov
mov
mov
incb
jno
push
sbb
sub
je
push
jbe
outsl
les
mov
xor
loope
cli
xor
pusha
movl
hlt
fadds
fmuls
in
leave
jge
push
and
outsl
lods
adc
and
cmpsb
ss
dec
loop
out
lods
repz
xchg
cwtl
jo
test
in
sbb
js
jbe
jp
aas
and
sarb
lods
out
mov
andb
leave
mov
sbb
jbe
jno,pt
cld
adc
push
jne
notb
adc
leave
cmp
mov
rol
leave
xor
rcll
std
push
or
aad
adc
sti
push
mov
sbb
cli
mov
push
inc
xor
out
push
jbe
fcoml
insb
adc
xchg
test
add
adc
call
jbe
cmp
pop
cs
push
pop
mov
jbe
sar
sahf
or
push
push
jbe
lcall
test
jnp
test
mov
inc
fcom
mov
and
pop
out
and
jo
sbb
add
je
and
fsubrp
mov
dec
xor
inc
mov
dec
cmpsb
or
mov
xchg
sahf
into
pop
jbe
push
adc
xor
sti
test
mov
and
dec
jbe
cmp
lds
mov
outsb
adc
stc
adc
and
cltd
mov
push
sub
jb
scas
dec
inc
mov
cmpsb
fiadds
das
scas
mov
push
lret
imul
cmp
imul
clc
mov
ss
add
ljmp
shlb
xchg
fcom
push
push
test
pusha
les
sbb
dec
enter
outsb
mov
push
jl
bound
stos
mov
sahf
movsb
jbe
jecxz
xchg
jno
and
adc
in
subb
push
inc
mov
add
mov
aad
aas
ret
jbe
pop
fwait
add
jns
xor
mov
add
leave
insb
jns
mov
shll
imul
mov
test
adc
inc
imul
ficoml
scas
into
pop
stos
jmp
push
ja
loop,pt
testb
mov
xadd
fs
adc
test
inc
mov
mov
sub
aas
jge
jne
rcrb
xchg
lret
push
cmp
mov
push
xchg
gs
fldt
stos
adc
movsl
xchg
sub
adc
repnz
mov
enter
in
cmp
or
mov
loopne
cs
jnp
adc
mov
adcl
fiaddl
push
jo
scas
sti
ds
push
dec
xor
jns
scas
mov
das
icebp
je
sub
lcall
adc
cs
xor
mov
add
adc
hlt
ss
aaa
push
js
and
or
outsb
mov
push
inc
lcall
adc
sbb
lock
shll
sub
cmpsb
out
mov
sbb
or
shll
shrb
add
adc
mov
push
jb
jbe
sbb
je
jle
adc
adc
int3
push
dec
push
pop
cmc
cmc
cmp
xlat
scas
adc
fimull
add
xchg
jbe
pop
int3
add
adc
mov
cmp
rcrl
movsw
mov
pop
data16
xchg
jno
fstpt
mov
scas
outsb
mov
jbe
mov
sub
jnp
lds
insb
jecxz
mov
jo
cmc
xor
sbb
sbb
adcl
dec
jnp
jo
or
js
inc
jo
inc
stc
testb
and
shrb
adc
xchg
test
push
or
insb
jg
push
mov
jp
mov
imul
adc
dec
fiaddl
mov
pop
popa
dec
ret
jb
cmp
fcmovnb
call
xor
dec
call
adc
sbb
int3
jae
movsb
xchg
push
pop
mov
cmpsl
xor
roll
pushf
or
inc
mulb
push
fwait
mov
sbb
cmp
mov
neg
pop
in
inc
cmp
in
adc
sbbl
lods
adc
push
inc
mov
mov
adc
cwtl
clc
or
in
lock
xchg
cmp
ret
outsl
xorb
aad
cwtl
sti
xor
adc
cmp
push
push
jbe
sbb
add
add
xor
out
insb
push
mov
push
mov
jecxz
sahf
jbe
rcrl
adc
aaa
pop
mov
jge
imul
jns
xor
jg
adc
mov
xor
std
push
orl
or
out
movsb
mov
das
gs
lds
sub
adcb
xchg
jbe
and
aam
shlb
repz
cmp
jne
mov
scas
in
mov
je
jb
mov
pushf
notb
mov
jmp
mov
jmp
xchg
shlb
loopne
lods
pop
lret
mov
adc
daa
mov
fs
push
scas
xchg
sbb
sub
test
test
push
js
pop
xchg
mov
mov
sbb
add
xchg
mov
sbb
cmpsl
sub
sub
pop
sub
data16
repz
out
fnstcw
sarl
std
inc
jno
minps
into
mov
xor
sub
clc
jbe
xchg
js
pop
cmp
push
or
push
jo
in
xchg
mov
or
rcrb
call
adc
and
jbe
mov
dec
jo
dec
push
mov
jle
push
jbe
xchg
cli
stc
shl
icebp
adc
leave
rorl
cmpsl
lret
xor
push
dec
add
mov
ja
ds
push
call
pop
cmpsb
sub
out
insb
ret
jg
je
push
mov
imul
leave
sbb
ja
mov
ds
pop
or
xor
sub
jns
cltd
mov
dec
rolb
and
jbe
cmp
pushf
pop
jae
xor
xor
stos
or
jno
repnz
lahf
mov
in
adc
xchg
mov
xchg
adc
push
test
sbb
mov
rcrl
adc
popf
inc
sbb
jno
mov
and
mov
js
xor
add
lcall
je
repz
adc
dec
sbb
pop
inc
push
dec
pop
mov
mov
mov
sbb
jbe
dec
test
and
pop
stc
pushf
push
push
adc
gs
add
cld
push
mov
or
xchg
mov
in
scas
sbbl
arpl
xchg
in
add
ds
cmp
xchg
aas
outsb
cmp
fwait
and
and
jno
sbb
sub
popa
inc
sbb
push
data16
nop
add
fwait
xlat
push
lret
pop
adc
or
stos
ljmp
fimull
test
sbb
fnstsw
xorb
jge
testb
push
fwait
xchg
mov
mov
inc
mov
xor
add
out
cmp
inc
arpl
fisttpll
aas
add
aam
cli
cld
push
and
jbe
fcomip
add
icebp
adc
or
jbe
and
shlb
jmp
and
xor
leave
and
push
jecxz
int3
cmp
cmpsb
xchg
jae
xchg
hlt
or
mov
cltd
loopne
add
xor
sbb
inc
jg
lock
or
pop
test
mov
loop
lea
fwait
adc
adc
mov
insl
and
xchg
cld
hlt
adc
push
ds
negl
ds
mov
sub
cmpl
jbe
pop
js
clc
ret
dec
mov
cmpsb
test
mov
push
push
filds
or
mov
dec
mov
and
pushf
mov
fidivrl
int3
inc
push
adc
mov
add
cmp
ljmp
mov
dec
test
push
ljmp
stos
mov
mov
mov
push
mov
push
in
and
div
push
adc
mov
fs
imul
out
push
dec
pop
outsl
insb
sub
jb
scas
cmp
mov
adc
data16
in
cmp
lds
aad
addr16
jbe
in
xchg
pop
jbe
shlb
cli
adc
pop
orl
sarl
jno
pop
xchg
sbb
lea
xchg
push
sub
inc
adc
mov
rclb
mov
out
jmp
push
clc
jp
out
sti
iret
adc
adc
stos
cmp
jne
jbe
cltd
jl
push
pcmpgtb
mov
xlat
fisttps
hlt
mov
test
insl
cwtl
rcrl
and
adc
jmp
aam
jnp
lea
orb
rorl
jge
sub
hlt
inc
push
rclb
sarb
enter
inc
lcall
sti
inc
push
sub
lods
lret
lods
in
pop
adc
les
adc
push
lods
push
mov
sub
jbe
sub
je
lods
or
cmp
add
in
sub
xor
or
adc
mov
dec
sub
in
fiadds
jbe
inc
cmpsl
outsl
mov
inc
or
cltd
imul
ja
xor
xor
adc
adc
ljmp
dec
add
or
jno
sbb
lret
sahf
shlb
mov
cmpsl
cmpsb
xchg
mov
ja
jbe
or
dec
push
pop
popf
mov
cmp
xchg
xor
jl
mov
fs
add
iret
pop
sahf
adc
out
hlt
or
inc
push
cli
in
loopne
or
popf
cs
xchg
rorl
lcall
mov
add
enter
jno
dec
adc
pop
jae
cmp
testl
mov
dec
dec
shrl
aaa
mov
sub
out
xchg
sbb
adc
sub
enter
sub
and
lea
shl
xor
fsubrp
add
ds
rcll
add
sbb
push
dec
push
mov
addb
cmp
lahf
cmp
pop
shrl
pop
ja
mov
shlb
pop
adc
add
test
fdivs
shrl
adc
push
rcl
pop
sub
push
fwait
mov
adcl
push
push
push
inc
add
imul
add
nop
xchg
pop
jno
test
mov
fxch
mov
aas
fwait
and
dec
cwtl
push
in
and
sahf
jo
and
or
sbb
outsb
pop
lods
mov
add
inc
insb
mov
insb
jbe
sbb
dec
push
nop
mov
sub
fidivrs
lret
dec
cmp
dec
adc
fs
and
jne
ret
xor
mov
lcall
aaa
iret
mov
lods
sti
out
mov
fs
cmc
mov
inc
in
cmpb
insl
imul
mov
stc
sbb
push
sti
push
nop
out
mov
cli
lret
into
sbb
jl,pn
jbe
cs
adc
dec
jbe
push
jecxz
or
and
outsb
pop
daa
or
enter
gs
push
insl
add
pop
or
fcoms
movups
add
std
mov
mov
cmpsb
jbe
or
xor
inc
icebp
mov
imul
push
jle
fldt
xchg
popf
rorb
int3
cs
dec
jg
xchg
pop
adc
cmp
in
add
sub
jne
dec
in
adc
push
into
xor
lods
or
cmp
and
cmp
data16
mov
hlt
push
jecxz
test
cld
push
lret
push
imul
push
xchg
ja
gs
fucom
popf
cmp
nop
pop
pusha
adc
mov
dec
orb
sbb
pop
lcall
cli
xchg
sub
daa
sub
xor
aaa
pop
fwait
insb
divb
adc
shl
and
jo
mov
mov
mov
dec
jle
test
icebp
adcb
sti
imul
jl
bound
and
in
fxam
std
pop
inc
pushw
dec
cmp
cmp
mov
adc
pop
into
orb
js
es
xchg
loopne
cmp
mov
shlb
jbe
or
outsl
fwait
xchg
sbbb
adc
pop
call
adc
imul
in
adc
shlb
mov
jno
in
sub
and
pop
or
sbb
out
mov
in
pop
jbe
or
xchg
adc
fidivrl
icebp
in
push
insb
cwtl
xchg
adc
movsb
ljmp
inc
addl
mov
sarb
sub
inc
aam
sahf
sbb
mov
movl
popa
adc
addl
insb
adc
shll
mov
sbb
adc
push
jae
cmpb
lock
rcll
lcall
clc
test
jbe
inc
stos
clc
fimull
arpl
dec
jb
push
mov
mov
subl
mov
pop
add
and
mov
leave
sbb
bound
adc
sti
fdivrl
notb
rol
rclb
icebp
or
es
sahf
push
les
call
loope
mov
out
push
dec
ss
mov
adc
ds
adc
les
adc
push
adc
xorb
and
sub
adc
pop
popf
push
icebp
cmp
sub
outsb
das
mov
lods
sbb
adc
ds
cmp
jl
in
ret
std
or
arpl
subl
push
loope
int3
mov
add
leave
push
mov
push
scas
pusha
sbbl
cltd
xor
cmpsb
ljmp
sti
rclb
jnp
arpl
pop
out
shl
lret
mov
mov
jmp
pop
push
js
insl
out
mov
test
and
insb
and
cmc
cmp
popa
jbe
pop
out
fisubl
mov
ja
scas
out
call
jbe
jecxz
inc
das
loop
into
xlat
fs
ds
jmp
fiaddl
adc
push
in
push
dec
test
add
cmpb
repnz
jbe
ficoms
rolb
test
mov
lret
int3
mov
mov
cli
xchg
inc
cmp
pop
cmp
es
std
pop
psllq
push
or
push
mov
jl
popf
xor
add
aad
ficoml
lea
add
insl
out
cmp
jmp
out
int3
fwait
mov
insl
shrb
aaa
pop
test
pop
add
addr16
ss
shr
and
mov
popa
stc
test
in
mov
pop
push
or
cmpsb
inc
out
adc
mov
push
movsb
out
pop
pop
pushf
lcall
jb
sar
mov
dec
sbb
xor
sub
adc
dec
dec
or
test
adc
pop
add
mov
xchg
inc
lods
cld
lcall
dec
adc
mov
scas
push
ja
sahf
sbb
in
rcll
imul
and
mov
sarb
push
in
movsl
loope
sub
lahf
das
lock
cwtl
add
xchg
rclb
sbb
xchg
test
addl
sub
sbb
jnp
sub
into
jae
jo
lods
cmp
fdivrp
jg
lahf
mov
inc
sarl
xchg
or
shll
sub
lret
nop
aaa
andl
pop
jg
cmp
xchg
adc
cmp
lret
mov
ja
pop
and
xor
lcall
mov
sbb
sbb
pop
jb
scas
adc
adc
sub
inc
cmpsl
pop
sahf
cli
adc
das
sub
jo
in
or
fcmovnbe
dec
inc
jbe
lock
jne
fsubs
mov
jns
lcall
jbe
mov
repnz
adc
rcrl
adc
out
stc
adc
popf
std
ja
daa
jb
push
fidivrl
icebp
out
insb
sbb
pavgb
xor
mov
adc
ds
adc
pop
cmp
shll
mov
xchg
adc
jl
push
dec
push
lock
sti
in
xor
sub
fcmovnb
jg
dec
jne
std
xor
cltd
sbb
leave
mov
scas
mov
jno
dec
dec
pop
mov
daa
ja
pop
mov
and
pop
mov
xorb
iret
emms
mov
scas
push
adc
int3
leave
add
sbb
mov
dec
sub
lahf
bound
les
push
movsb
and
adc
shll
mov
dec
mov
inc
xchg
adc
ds
push
lcall
xchg
jmp
lock
adc
nop
and
adc
insl
mov
push
cmp
jbe
loopne
fiadds
fiaddl
lahf
sbb
lret
sub
sub
ds
mov
adc
fildll
data16
inc
stos
jb
jmp
mov
adc
and
decb
outsl
push
add
or
sar
stos
mov
call
adc
in
sub
jno
movsl
cli
mov
adc
xchg
dec
pop
test
push
add
xlat
dec
add
pop
filds
adc
cltd
xor
adc
repnz
jmp
adc
xor
in
or
lret
clc
in
push
mov
jmp
jne
cmc
pop
push
imul
xchg
popf
lea
std
lcall
loop
loopne
adc
cmpsb
or
jg
mov
xor
insb
add
pusha
into
imul
mov
mov
mov
stos
dec
jbe
xchg
mov
cmp
add
test
adc
je
push
mov
push
pavgb
stc
nop
ja
repz
pop
insl
adc
add
push
iret
inc
add
mov
fidivrs
loop
mov
adc
cld
out
adc
fldcw
xor
jns
pop
lea
push
xchg
inc
iret
int3
clc
icebp
jno
mov
jo
sub
mov
pop
sbb
jbe
cwtl
data16
jecxz
mov
fstpt
je
adc
in
add
add
pushf
adc
leave
jbe
and
mov
mov
adc
mov
adc
cmpsb
cmp
push
ljmp
in
push
jbe
xchg
dec
lret
push
adc
mov
ljmp
pop
xchg
rorl
rolb
jno
in
mov
fistl
cld
mov
cwtl
xlat
dec
push
jbe
cld
mov
sub
and
adc
clc
push
mov
test
mov
mov
adc
faddp
outsl
lret
popf
out
inc
add
adc
ja
idivb
dec
cltd
in
lea
mov
inc
mov
into
mov
push
mov
ja
icebp
dec
xor
xor
scas
jmp
sti
lods
push
push
xchg
iret
out
std
xor
mov
mov
inc
clc
adc
or
jl
in
das
in
test
cmpb
dec
bswap
mov
shll
fs
vsubpd
scas
push
ja
jae
stos
pop
sti
dec
cmpsb
xor
div
adc
repnz
cmp
pop
call
fwait
sbb
xchg
sub
inc
scas
aas
cwtl
aas
sub
xchg
mov
movsb
adc
ss
jo
out
repz
stc
outsl
push
and
mov
bound
jae
lea
add
icebp
aam
sahf
adc
push
push
mov
ret
pushf
cwtl
adc
divl
jns
and
adcb
jmp
imul
jne
pop
mov
repz
mov
and
imul
and
add
and
jbe
cli
gs
add
sbb
cld
mov
push
jg
sbb
aad
push
xor
pop
adc
and
les
pop
mov
jbe
cld
fmulp
add
adc
adc
push
add
push
or
aas
insl
xlat
arpl
adc
dec
cmp
mov
cmp
push
data16
into
jbe
adc
jl
shlb
dec
pop
push
push
or
mov
push
rorb
std
xchg
add
xchg
inc
mov
xchg
push
inc
lds
push
std
xlat
negl
xor
jbe
imul
mov
push
int
imul
and
fcom
adc
adc
cmp
insb
pusha
fisttpl
cs
mov
movsb
push
rcrb
mov
mov
stc
pop
loope
fbstp
sarl
insl
shlb
idivl
pop
adc
dec
push
and
pop
mov
xlat
cltd
jbe
movsb
pop
sbb
ss
inc
adc
add
sub
push
jne
sti
pop
cmp
inc
stos
adc
jne
mov
adc
mov
mov
out
jbe
dec
lret
insb
movsl
dec
adc
leave
adc
in
or
lcall
enter
cmp
sbb
and
dec
notb
std
push
xchg
cwtl
mov
dec
imul
xor
ja
add
jae
cmc
jg
loopne
pop
mov
jno
jo
push
jge
testb
push
mov
mov
call
movsl
add
test
js
rol
pushf
xchg
mov
mov
dec
add
mov
loopne
dec
lods
addr16
mov
scas
jbe
pop
fucomi
and
jbe
push
push
mov
and
cmp
add
mov
cld
rclb
or
or
jbe
adc
mov
mov
movsb
cmp
cmpsb
mov
out
xchg
pusha
mov
push
or
arpl
mov
nop
nop
push
data16
mov
pop
loop
out
add
orb
xchg
out
push
aam
jle
push
adc
push
add
adc
dec
cltd
sbb
in
rcrl
mov
adc
arpl
movsl
mov
movsl
icebp
sub
ljmp
xchg
cltd
dec
in
cmc
mov
fidivrs
jbe
negl
sbbb
movsl
test
mov
jnp
mov
adc
mov
mov
and
mov
lahf
sub
fs
jbe
jl
cwtl
cmp
in
pop
dec
mov
jmp
ret
ror
lods
movsb
adc
and
adc
adc
pushl
insb
ds
xor
loope
fildll
repnz
lahf
int
leave
bound
sti
mov
jbe
stc
mov
and
flds
xlat
adc
or
test
outsb
nop
gs
and
lret
fstps
loopne
lods
pop
jp
imul
sub
dec
ds
loope
jmp
inc
push
mov
adc
mov
fimuls
insl
das
fwait
rcl
pop
cmc
loope
pop
adc
shrb
and
adc
cmp
and
adc
cwtl
pop
adc
or
mov
dec
mov
or
jnp
jbe
clc
jge
dec
adc
outsb
repnz
inc
push
loope
lret
cmc
adc
fucomip
bound
jmp
jne
leave
inc
mov
test
xchg
mov
mov
out
mov
dec
xor
mov
adc
iret
cs
ret
ret
dec
push
pop
push
lret
and
ret
lds
inc
adc
add
leave
adc
lret
or
xor
mov
push
mov
and
orb
mov
add
nop
jns
insb
pop
add
jne
sbb
pop
adc
loop
enter
out
nop
sub
mov
notl
clc
xchg
adc
adc
push
pop
and
outsl
add
add
pop
inc
cmp
fistpll
orb
jle
sub
push
dec
xchg
jno
mov
jge
in
push
or
sbb
cmpsl
shrb
adc
outsl
pusha
xchg
xchg
xchg
adc
inc
sub
jae
adc
xchg
movsb
dec
mov
stos
hlt
sbb
int
jge
jb
sbb
push
mov
adc
repz
pop
and
push
adc
stos
dec
jge
in
repz
mov
or
movsl
jno
das
and
mov
jl
xor
aas
or
pop
jbe
pop
dec
dec
adc
or
mov
sbb
push
repz
adc
loope
div
les
lods
pop
out
arpl
scas
mov
ja
adc
mov
mov
sub
inc
adc
add
rolb
jg
xor
pop
mov
dec
inc
loop
mov
sub
push
xor
xchg
cmp
shll
mov
xchg
aaa
sbb
cli
rcl
mov
jne
mov
adc
lcall
aas
movsl
data16
adc
sbb
sbb
imul
cli
xor
xchg
lcall
insl
jl
xlat
mov
pop
xor
fildl
ret
push
aad
loop
pushf
outsb
out
mov
aaa
add
test
dec
sub
and
jge
and
inc
xor
jno
dec
int3
out
rcll
add
push
xor
sbb
std
mov
loop
sar
lock
xchg
sub
clc
and
mov
cmp
ljmp
mov
push
adc
repz
inc
adc
adc
enter
fldt
out
ret
pop
sahf
push
cmc
adc
int3
mov
mov
into
pop
lock
adc
adc
xchg
mov
aam
enter
jbe
sbb
cltd
mov
xchg
and
add
cmpsb
xchg
cmp
mov
clc
mov
jno
push
mov
cmpsb
dec
mov
and
mov
jbe
repnz
lds
or
sub
ret
sahf
adc
push
sub
adc
jecxz
vpunpcklwd
jo
push
int
push
and
pop
mov
inc
incb
dec
roll
idiv
push
ss
daa
xor
or
push
lret
jmp
test
mov
ficoms
dec
adcb
cmp
mov
adc
jns
js
daa
xchg
test
add
insb
mov
dec
jl
fnsave
jg
cmp
adc
mov
inc
mov
adc
daa
test
mov
inc
leave
mov
sti
mov
fprem1
clc
rol
mov
pop
adc
xchg
mov
jge
fistpl
adc
push
mov
xchg
add
and
jns
or
mov
mov
shr
rorb
fcmovu
jbe
sahf
xor
adc
js
pop
out
test
inc
xor
bnd
mov
inc
jle
and
jns
scas
insb
jbe
cli
sub
push
and
mov
cmp
pop
inc
fistl
daa
add
std
sbb
cmpxchg
daa
xchg
mov
add
sbb
and
fsub
xorb
movsl
fs
decl
hlt
adc
loopne
rcr
enter
lods
aam
aaa
out
jmp
rep
in
jmp
adc
mov
mov
adc
xlat
movsl
leave
inc
fs
adc
insb
push
xchg
adc
fucomp
cltd
movsl
dec
orb
inc
sbb
push
mov
cmpsb
orl
daa
inc
dec
mov
subb
rorb
xor
adc
dec
jbe
mov
or
lret
cwtl
sbb
cs
sub
adc
jbe
push
lea
fs
adc
fldenv
xchg
adc
push
push
pop
add
fadd
clc
and
mov
jae
cmc
shlb
hlt
jle
stos
in
or
mov
mov
ds
cmp
mov
icebp
xchg
leave
test
adc
adc
insl
cwtl
mov
call
shlb
pop
frstor
cmp
add
xor
xor
int3
std
inc
sub
xor
dec
aas
scas
push
rcll
cwtl
mov
sub
mov
mov
dec
pop
andb
mov
ss
mov
jbe
shrb
push
clc
xchg
adc
add
ret
cmpsl
jno
add
push
ss
das
nop
int3
sarb
movsb
xchg
mov
or
mov
sbb
jl
out
xlat
lock
adc
pop
cmp
mov
jne
or
jbe
stos
fiaddl
incl
mov
sti
les
jbe
and
mov
lcall
or
decl
out
mov
jne
mov
push
adc
sub
pop
lods
mov
jne
hlt
loope
jbe
sbb
in
mov
dec
inc
lret
and
xlat
enter
arpl
in
jl
push
pop
jne
lret
nop
jecxz
aam
jae
adc
lds
in
mov
xchg
push
fdivrl
or
sbbb
cmpsb
idiv
xchg
jle
or
pop
jecxz
jae
dec
inc
movsl
adc
push
ss
mov
mov
fcmovnu
pop
test
push
cmp
xchg
xor
pop
lea
mov
cmpsl
cmp
sbb
out
js
nop
xchg
fs
xor
adc
xchg
xchg
es
or
pop
rcl
sbb
mov
jle
test
aad
pop
fadd
pop
ficoms
push
test
adc
jbe
add
or
sub
out
jns
mov
aaa
loope
icebp
fmul
jno
addl
leave
stos
imul
inc
jo
xor
sub
jbe
cmp
rclb
in
mov
jmp
sbb
add
rcl
cmc
mov
sbbl
rol
jg
out
jg
xchg
and
roll
test
mov
adc
pop
es
dec
inc
decl
push
sub
jbe
outsl
or
push
sub
adc
sbb
mov
pop
xor
inc
mov
hlt
adc
pop
mov
adc
ljmp
outsb
mov
push
pop
xchg
icebp
push
je
ficomps
mov
xchg
aaa
mov
dec
cmpsl
cld
ss
in
mov
pushf
fidivs
add
sub
jbe
ret
jnp
mov
out
jbe
testb
sbb
adc
push
fwait
adc
mov
jno
push
inc
int3
jl
sub
shll
and
xorl
test
fsts
sahf
aaa
ret
adc
je
mov
pop
xchg
push
js
cmpsb
inc
lods
mov
and
iret
sub
lret
cmpsl
pop
jno
xchg
stc
xor
mov
dec
in
cwtl
pop
adc
mov
mov
stos
push
inc
test
nop
pop
cmp
enter
ja
mov
lods
popf
add
sub
adc
cmp
xchg
adc
pop
push
push
adc
jg
cmpsl
sub
dec
jbe
xchg
sbb
ss
push
inc
sub
and
mov
pop
pop
arpl
ja
icebp
mov
xchg
mov
sahf
js
inc
sub
imul
gs
inc
divb
xor
cld
jbe
push
fadds
push
ja
test
outsb
stos
pop
xor
imul
cmp
jae
lahf
lock
adc
push
fildl
mov
subb
pushf
dec
adc
pop
jg
sub
mov
push
addl
mov
adc
xlat
pop
sar
mov
ss
sahf
jne
jge
jb
orl
pop
jp
jne
xor
or
mov
fimuls
test
jp
inc
cmp
jns
mov
mov
mov
push
xchg
xchg
sbb
and
sub
ret
mov
jbe
and
dec
mov
gs
outsb
rcl
push
je
mov
mov
lock
inc
fstl
adc
sbb
and
leave
mov
fmul
mov
testl
ds
mov
popa
ja
mov
notl
out
lods
push
scas
rorl
push
dec
push
je
push
dec
loop
adc
fcmovne
dec
out
je,pt
mov
mov
dec
stos
mov
add
popa
inc
cli
ds
mov
in
je
sub
scas
mov
jmp
mov
bound
or
outsl
add
in
push
mov
dec
and
rorb
add
test
adc
jb
sub
in
push
roll
jbe
icebp
shrb
or
xchg
ja
popa
dec
xchg
push
fldcw
add
out
lods
xchg
and
mov
or
aam
add
outsl
mov
movsl
lods
repnz
adc
lods
loop
adc
rorw
sbb
cmpsb
pop
sti
outsb
push
notl
sub
push
push
xchg
xchg
sbb
ja
data16
pop
test
add
int3
adc
std
addl
jnp
mov
cmpsb
push
sbb
fs
inc
mov
and
insb
inc
mov
lds
icebp
push
fsubl
adc
mov
push
xchg
test
inc
insb
sahf
ja
jp
adc
clc
in
mov
pop
or
movsb
cmpsb
inc
jbe
sbb
push
sbb
xchg
and
nop
das
inc
aam
mov
xchg
lcall
xor
loopne
sub
mov
jl
xchg
dec
pop
in
jbe
pop
and
or
xchg
adc
lods
js
push
xchg
mov
addb
push
out
fwait
inc
je
mov
icebp
jb
sub
jp
jmp
dec
cmp
mov
cltd
pop
or
enter
add
cmc
mov
mov
imul
adc
jge
adcl
sarl
push
aad
mov
fidivs
popa
dec
xor
rorl
inc
adc
inc
jbe
add
mov
dec
rorl
jle
adc
jbe
lods
mov
inc
repnz
add
pop
sbb
and
inc
xor
xor
movl
ja
leave
outsl
insb
cmp
push
repz
sub
lods
outsb
adc
out
lcall
pop
js
aad
ja
inc
sub
adc
jns
dec
jmp
jl
adc
out
cmp
cli
stc
push
dec
sub
pop
pop
cld
das
sbb
lds
and
sbb
cld
icebp
or
std
repnz
pusha
lcall
outsl
push
add
push
jl
in
enter
cmp
or
ja
xorl
mov
adc
div
mov
cmpsb
mov
arpl
lahf
xchg
fs
sub
mov
jmp
loop
jbe
and
or
rclb
cld
loop
pop
outsl
sbb
xchg
adc
jmp
mov
aam
cli
sub
aad
mov
inc
daa
push
lcall
insl
fisubl
rcrl
push
adc
pop
adc
pop
clc
xchg
and
sub
and
xor
mov
xchg
push
out
rol
ja
es
adc
lahf
ds
lods
hlt
add
mov
popa
mov
mov
int
inc
mov
mov
cltd
daa
xor
xor
hlt
lcall
ret
test
push
lods
push
cmp
inc
repnz
stc
mov
push
mov
lcall
xchg
pop
pop
ja
nop
pop
insl
xchg
cmpb
subl
test
push
push
add
imul
out
loopne
adc
sbb
psllw
lcall
mov
clc
ja
out
test
jbe
outsl
ret
mov
or
xchg
mov
leave
fwait
or
in
repz
jmp
aam
aaa
sub
sar
sub
inc
xchg
loope
cmc
pop
int
adcb
fs
inc
mov
adc
adc
repnz
loopne
mull
stos
mov
repz
add
adc
mov
push
cli
xor
loop
aaa
adc
cli
and
and
lret
xor
jbe
mov
pop
push
mov
and
xchg
notw
cmpb
pop
aaa
mov
xchg
jbe,pn
test
ss
cmp
in
adc
daa
xor
sarl
xchg
dec
es
rol
jbe
test
or
xchg
mov
xor
mov
call
in
repz
push
adc
enter
into
jo
js
jbe
loop
mov
adc
pop
cld
or
clc
rcr
mov
imul
push
cmpsb
stos
mov
ljmp
out
mov
ficoms
xchg
mov
nop
in
cmp
xchg
jbe
ss
jo
jns
mov
lock
jbe
xchg
data16
icebp
adc
into
dec
test
stos
outsl
repnz
sbb
in
enter
adc
cmp
sub
adc
je
jb
enter
icebp
mov
inc
rcrb
jo
ret
push
aaa
pop
mov
mov
xor
mov
ljmp
les
pop
popf
xor
and
sub
jmp
icebp
sti
pushw
jns
pop
lods
push
cld
sbb
lods
mov
insl
mov
xchg
call
inc
push
lret
gs
pop
xor
movsb
and
inc
pop
xchg
pop
cmpl
test
or
jecxz
cmp
fidivrl
rorb
test
cs
out
or
adc
dec
std
inc
mov
sub
and
sarl
mov
jle
int
dec
mov
call
jae
xor
in
in
adc
cmp
enter
adc
dec
add
pop
push
pop
ss
cld
adc
cmp
pop
aaa
popa
dec
mov
fdivrp
insb
das
ljmp
mov
lock
rcll
out
jo
dec
jbe
loope
js
adc
adc
ucomiss
sub
push
mov
jg
jno
inc
jmp
sbb
mov
sarl
fiadds
jl
stc
in
arpl
inc
sbb
dec
loope
push
loop
shl
in
aas
iret
dec
adc
sub
dec
cwtl
jb
data16
in
cmpsl
mov
lds
or
lahf
mov
pop
ds
movsb
imul
adc
sub
lods
dec
adc
dec
aas
or
in
mov
sti
loope
test
adc
into
dec
adc
sbb
xchg
iret
adc
dec
mov
cli
shrb
cld
jbe
sbb
lods
adc
daa
mov
adc
jno
mov
gs
or
gs
mov
adc
and
cmp
stc
test
push
dec
jbe
lods
pop
push
cmp
lods
rclb
or
data16
push
sarl
pushf
inc
mov
outsl
in
mov
mov
int
lods
pop
adc
sbb
jb
mov
pop
test
repnz
mov
cmpsl
xor
sub
test
adc
cmp
dec
pop
push
jl
sbb
xor
hlt
popa
out
mov
adc
push
dec
and
mov
imul
aas
pop
out
jbe
pop
pusha
stos
mov
cmpsb
and
pop
movsl
mov
cltd
mov
xchg
sub
call
pusha
pop
mov
adc
pop
stos
adc
xchg
lock
pop
sbb
popf
xorl
mov
adc
add
iret
mov
iret
jg
push
syscall
mov
mov
xor
xchg
cmpsb
mov
mov
rcrb
and
xchg
inc
mov
out
inc
int
sub
xchg
or
lea
cmpsl
jno
fbld
sti
sahf
add
xor
mov
imulb
xor
adc
xchg
xor
mov
insb
lods
xchg
nop
sbb
and
dec
xor
test
and
dec
mov
mov
fildll
jbe
andb
fs
in
cmp
fdivl
push
ja
and
cmpsb
ss
sub
inc
aaa
mov
popf
push
xchg
int
cld
repnz
outsl
insb
mov
or
nop
jno
movsb
pop
dec
xchg
outsb
or
xor
dec
add
and
mov
adc
shll
fsubp
xchg
ror
sub
add
push
adc
cmp
adc
fistl
mov
test
mov
inc
repnz
sub
and
push
push
add
cmpsb
arpl
outsl
jno
hlt
push
inc
dec
repnz
mov
outsb
lcall
cmp
cmpsl
ds
movsl
nop
mov
pop
fcompl
or
mov
xchg
push
les
fdivs
push
nop
movsb
pushf
dec
push
leave
or
mov
and
lret
jle
out
lret
repz
adc
jno
xchg
aas
in
xor
fcompl
test
iret
inc
mov
movsl
adc
add
stos
inc
jge
pop
call
pusha
out
sbb
das
addr16
and
inc
gs
mov
shlb
mov
xchg
fdivs
adc
mov
mov
mov
rcl
ret
or
shll
cmp
addb
mov
les
mov
idiv
adc
xchg
test
insl
dec
push
mov
sbb
dec
mov
addr16
psrld
and
ja
and
outsb
std
dec
stos
lret
fcompl
cmp
jmp
or
dec
pushf
je
dec
xlat
xchg
xchg
in
add
icebp
into
ja
dec
adc
push
mov
daa
mov
and
pop
add
stos
or
lcall
insl
adc
mov
in
lret
aaa
dec
cwtl
sbb
lds
adc
sbbb
jge
mov
sub
mov
lea
or
xchg
arpl
add
push
fimull
stc
adc
aaa
inc
call
mov
pop
cmpsb
je
stc
lea
adc
push
aad
loope
popf
stos
test
xor
lcall
push
sbb
adc
jle
dec
mov
dec
cmp
popf
push
icebp
mov
add
or
test
jmp
inc
ret
add
add
lods
xor
test
outsl
popl
int3
sbb
or
lea
rcl
mov
cwtl
jbe
iret
jne
mov
jae
mov
ja
mov
fbld
movb
xor
push
xor
outsb
test
scas
or
stos
dec
xchg
add
in
out
xchg
cmpsl
inc
adc
ljmp
push
repz
int3
and
xchg
push
sub
filds
jbe
jne
dec
add
sbb
mov
xchg
adc
outsb
mov
mov
xchg
loop
adc
dec
nop
lret
add
cmp
mov
imul
pop
cmpsl
or
sbb
mov
push
lds
xorl
shlb
or
sahf
jmp
push
inc
adc
mov
into
fwait
adc
ja
push
mov
fs
sub
ja
stos
stos
push
mov
dec
lret
and
jbe
adcl
cltd
dec
xor
lods
adc
or
mov
std
cmp
aas
xchg
test
jb
jnp
mov
mov
je
adc
sbb
jbe
stos
jle
pop
jmp
mov
pop
mov
jbe
ret
add
imul
js
pop
jbe
and
dec
add
dec
inc
jbe
shrl
cmp
mov
es
mov
scas
in
xchg
pop
cwtl
aad
xchg
popl
xchg
or
mov
pop
cmpb
decb
int
inc
in
push
add
xor
mov
xchg
test
dec
loope
mov
lods
mov
sub
leave
push
lcall
dec
add
std
or
mov
insb
inc
xorb
push
inc
adc
mov
sahf
psrad
aaa
mov
xlat
jne
sti
jb
ret
mov
adc
fistpl
cli
call
dec
mov
mov
stos
shll
das
scas
int3
lcall
mov
cmc
shll
xchg
push
jbe,pt
jno
shll
pop
push
aas
adc
inc
sub
jmp
shr
in
in
push
test
xchg
inc
mov
or
loopne
jecxz
adc
dec
adc
jbe
add
adc
bound
xchg
insb
push
or
jge
test
loope
mov
popf
mov
jbe
pop
je
cmpsl
or
sti
sahf
cmc
push
adc
shll
adc
adc
jle
lret
fsts
jne
mov
xchg
lods
lret
mov
jbe
shrl
inc
sub
fwait
neg
push
xor
lahf
jne
test
imul
sbb
mov
stos
dec
xchg
push
push
out
pop
push
xor
lahf
out
adc
mov
or
mov
das
sarl
data16
xlat
jl
pop
adc
addr16
add
test
scas
das
inc
mov
or
mov
push
jbe
mov
outsl
fstpt
mov
ss
add
fists
cmp
adc
adc
pop
icebp
insb
dec
xchg
out
xchg
and
dec
roll
pop
add
cwtl
sub
push
adc
aam
mov
stos
dec
ret
pop
leave
into
scas
inc
notb
mov
das
xchg
rorl
adc
add
clc
ficoms
pop
xchg
shlb
lds
push
xchg
push
pushf
out
repnz
shrb
sub
mov
adcl
xchg
test
sbb
jmp
adc
imul
inc
into
inc
adc
inc
fdivrs
test
mov
mov
pop
insb
dec
jg
cltd
mov
mov
dec
mov
cmp
lods
mov
xor
test
pop
js
pop
sbb
adc
jmp
push
adc
cmpsb
in
sub
xchg
add
rcr
mov
xor
mov
add
shlb
adc
sub
dec
gs
and
je
adc
popa
das
mov
int3
sahf
dec
fisttpll
mov
add
jb
and
imul
jbe
es
jns
adc
dec
or
jmp
loop
jbe
outsl
imul
lahf
repnz
jbe
ret
push
and
mov
aaa
mov
lcall
iret
test
adc
pmulhw
push
or
adc
dec
inc
mov
push
jb
aad
xor
sub
and
mov
popf
jbe
mov
pop
loopne
jb
mov
sub
xchg
push
std
stos
mov
les
movsb
js
mov
cmpsl
xchg
xchg
jbe
insl
xor
adc
pusha
cmpsl
sbbl
dec
into
inc
andb
jg
xchg
js
sub
je
mov
insl
shrl
lods
jbe
jmp
repz
stc
stos
jbe
sub
or
decl
mov
adc
push
cmp
dec
imulb
sub
stos
adc
mov
pusha
jne
orl
adc
hlt
push
push
xchg
rcll
mov
movl
adc
rclb
cs
aad
jmp
add
daa
cli
pushf
sbb
sbb
dec
clc
or
sti
pop
insb
push
shr
pop
adc
pop
push
and
mov
mov
loopne
rorb
adc
jmp
adc
outsb
pop
in
cmp
adc
add
mov
pop
loop
jno
add
in
xchg
imulb
mov
jge
cs
inc
adc
mov
xor
lcall
test
iret
dec
in
xchg
dec
or
adc
cmp
in
adc
jb
nop
push
dec
xlat
and
and
and
shll
addr16
push
outsb
mov
mov
cmp
jns
bound
test
or
pop
aaa
dec
push
lods
xchg
lcall
nop
notb
test
in
addr16
fildl
or
fmuls
fwait
test
pop
out
dec
bound
mov
out
xchg
cmc
adc
mov
adc
cmp
mov
loopne
sub
jp
mov
inc
repz
push
xor
adc
sub
ret
fisttpl
xor
inc
cmp
xor
mov
vphadduwd
pushf
dec
mov
test
mov
leave
lret
leave
adc
shl
adc
es
adc
loop
ds
jbe
fisttps
and
add
sbb
or
je
sub
dec
sbb
les
pop
jb
shrb
iret
inc
fidivrs
jbe
push
dec
sbb
inc
bound
adc
outsl
sub
jbe
mov
rorl
jl
inc
movsb
cwtl
cmc
sbb
ja
lods
adc
scas
das
or
cmpsb
push
pop
jbe
shll
test
jbe
pop
xor
loope
icebp
js
sbb
outsb
adc
sub
sbb
pop
cmp
roll
cmpsl
inc
pop
jge
test
mov
sbb
lret
xchg
adc
mov
aaa
shll
pushl
inc
imul
cmc
cmp
jmp
rcrl
inc
pop
mov
xchg
add
cld
popf
xchg
lcall
xor
mov
push
fsubs
jbe
pushf
jae
mov
pop
pop
sub
adc
mov
adc
or
test
testl
and
mov
pushf
es
mov
and
and
adc
out
xlat
leave
dec
sub
mov
in
or
jae
adc
lods
stos
or
push
adc
cli
mov
test
fidivrl
nop
jbe
out
cmpsb
loope
adc
bound
inc
add
mov
jae
paddsw
out
mov
hlt
xorl
shll
adc
inc
lret
fs
adc
ftst
mov
sbb
xchg
xor
inc
loopne
jno
mov
and
and
jg
dec
aad
mov
adc
lcall
mov
xor
adc
lock
add
loopne
aam
xor
push
jno
das
xchg
loop
fcompl
mov
push
add
add
pop
mulb
test
sub
sbb
daa
adc
mov
adc
mov
out
icebp
out
mov
sbb
xor
sbb
adc
pop
mov
dec
arpl
fstl
dec
sbb
mov
jp
aad
add
push
sub
inc
mov
in
mov
xchg
scas
lea
mov
cli
pop
mov
jnp
lock
pop
aad
sahf
jo
aad
jbe
mov
mov
stc
inc
mov
inc
and
jbe
cs
int3
and
adc
mov
gs
mov
mov
out
inc
xchg
adc
leave
dec
aas
rclb
aam
pop
idivb
ret
fisttpll
sbb
je
popa
outsl
icebp
mov
cmp
xchg
and
inc
sbb
inc
jbe
and
in
sbb
xchg
adc
ret
xchg
das
cli
popa
add
push
mov
leave
xchg
inc
out
nop
mov
mov
int3
jo
je
mov
or
loop
lahf
xor
daa
mov
jle
lods
and
xchg
xor
or
std
mov
test
mov
in
adc
shl
in
insb
pop
push
clc
fld1
int3
lcall
aas
imul
add
js
arpl
inc
adcl
hlt
sbb
test
mov
movsb
test
scas
add
jbe
call
push
lods
adc
loope
xchg
jbe
fsubrs
jb
or
and
sar
adc
jae
lret
mov
sti
in
adc
sbb
mov
lock
jo
mov
add
or
xorl
mov
add
or
sub
xor
hlt
xorl
mov
jnp
push
out
fldpi
test
imul
push
sub
push
adc
js
lret
scas
frstor
jl
mov
dec
mov
cmp
pop
mov
xchg
adc
gs
cld
daa
sub
push
rcr
sub
fistps
notl
xor
lds
loopne
jb
push
xchg
pop
dec
lea
stc
pop
idivl
xor
push
movsw
jbe
jge
inc
push
movl
and
jno
addl
dec
jl
sbb
jg
cmp
mov
mov
cmc
ja
sbb
jl
inc
imul
pop
mov
repnz
jbe
daa
and
adc
fildl
cmp
or
xchg
jp
mov
add
movsb
shr
push
sub
adc
cmp
loop
mov
outsl
mov
or
xchg
enter
push
jne
addr16
add
inc
fwait
mov
and
dec
add
inc
sub
add
sar
sbb
out
insb
sub
adc
leave
jbe
std
or
adc
jb
xchg
pop
enter
cmp
add
sti
and
pop
pushf
nop
in
jmp
insb
adc
cmpsb
push
imul
or
lret
sub
loope
adc
mov
dec
data16
outsb
mov
and
testb
lret
jb
inc
je
je
sahf
mov
jecxz
addr16
aas
mov
and
xor
adc
ljmp
adc
sbb
and
pushl
into
ljmp
bnd
adc
in
cmp
dec
out
xchg
ret
and
inc
aas
nop
adc
vmwrite
sbb
insb
lea
inc
or
mov
mov
dec
stc
gs
das
adc
arpl
mov
shlb
jmp
ss
cmpsl
push
das
pop
push
not
mov
dec
jbe
aaa
cld
cmp
mov
ficoml
outsl
cli
sub
lock
cli
addr16
ret
mov
push
shrl
adc
lahf
adc
imul
adc
push
xor
dec
push
push
repnz
adc
js
hlt
adc
add
repnz
inc
inc
lahf
insb
jmp
loop
xchg
cmpsb
mov
jae
xchg
test
les
push
jo
pop
push
xorb
dec
push
aas
movsb
leave
lock
xchg
ljmp
adc
pushf
call
adc
out
inc
cmpsb
cmp
gs
dec
pop
rcll
adc
fmull
pop
cli
frstor
mov
and
xor
inc
jbe
jb
ljmp
mov
aaa
clc
xor
imul
cmpsl
xor
ja
mov
mov
in
insl
enter
push
repz
ljmp
nop
test
mov
sub
mov
adc
dec
jmp
jge
aas
lcall
pushf
leave
xchg
mov
jno
xchg
stos
int3
rclb
scas
mov
dec
mov
rclb
and
xor
out
pop
jle
adc
pop
js
adc
outsl
mov
rcrl
repz
adc
pop
jmp
mov
sub
mov
pop
adc
bound
nop
mov
repz
fadds
push
jl
es
mov
cld
adc
in
ss
add
adc
insb
stos
inc
imul
je
dec
test
adc
dec
pop
pop
dec
xor
push
jl
pusha
mov
inc
repz
dec
out
jo
xor
sub
add
pushf
jns
sti
imul
pop
or
mov
fisubl
test
jne
sub
dec
or
push
mov
lret
faddl
and
adc
mov
pop
movsl
rol
aaa
push
sub
or
adc
or
xor
inc
daa
mov
push
test
mov
sub
push
jmp
js
scas
ret
sbb
mov
adc
cli
test
sbb
fcomps
neg
push
cmp
jbe
aas
scas
dec
sub
dec
aas
mov
fisttpll
stc
adc
add
out
adc
outsb
pop
adc
scas
imul
repnz
xchg
ret
adc
adc
xchg
fcmovbe
inc
nop
sbb
ja
xchg
scas
addb
pushf
out
aas
outsb
mov
pusha
mov
cld
repnz
jbe
inc
lcall
mov
shlb
sub
lods
vptestnmb
add
arpl
bound
pop
cmpl
inc
jecxz
sub
jge
adc
inc
mov
mov
jle
pop
out
xor
pushf
iret
and
or
xor
and
hlt
lret
leave
les
repz
adc
adc
xor
mov
pop
adc
jl
pop
or
jnp
inc
dec
fs
push
inc
adc
and
scas
insl
cmp
outsb
aaa
add
or
mov
loop
pop
sub
sarb
out
stos
clc
inc
adc
adc
sahf
mov
dec
cs
pop
adc
daa
dec
jle
divl
or
push
inc
xor
adc
push
out
movsl
mov
adc
mov
add
fadds
xchg
out
ss
popa
jno
scas
fnsave
mov
jl
test
mov
mov
jno
jae
shrb
mov
xchg
iret
out
mov
pushf
xchg
mov
sbb
mov
sub
pop
mov
out
jl
fdivp
jbe
insb
ljmp
inc
mov
in
test
pusha
outsb
jbe
cmp
popf
arpl
mov
or
aad
push
push
or
ss
cwtl
std
adc
icebp
ds
cli
jbe
test
hlt
push
cs
cmp
jne
data16
pusha
lea
mov
xchg
ret
mov
fnstenv
aas
fnstcw
mov
push
cmc
mov
fsubp
fst
cmp
in
sbb
dec
mov
sbb
out
push
or
outsb
mov
xor
adc
loop
fnstsw
dec
insl
adc
testb
clc
nop
test
lods
movsl
cmpsb
jb
sub
in
inc
pop
je
or
adc
shl
out
xchg
movaps
and
sbb
adcb
popl
outsb
xor
mov
hlt
or
fmuls
leave
arpl
jno
icebp
mov
adc
mov
testl
les
imul
lcall
and
mov
adc
xchg
sbb
mov
xlat
inc
xor
mov
sub
or
cmpsb
test
popa
lret
in
jns
add
pop
sub
jbe
cli
in
inc
in
mov
out
jle
out
jns
ja
xchg
lock
mov
pop
push
cwtl
rcll
addr16
scas
and
xor
into
dec
lods
pop
jbe
sub
roll
jns
in
rcrl
ljmp
iret
out
jb
xchg
lret
add
add
jo
movsl
adc
push
mov
test
daa
pop
pop
or
or
test
adc
orl
pop
push
pop
cwtl
mov
fstl
stos
sarb
or
inc
fisubrl
jae
adc
xor
out
stc
adc
inc
in
xchg
mov
bound
into
sub
int3
push
or
mov
adc
clc
push
test
inc
dec
sub
xchg
sbb
adc
xchg
ja
adc
decb
mov
insb
add
das
cltd
mov
sti
rorb
mul
jno
pushf
aam
jl
push
incb
jbe
mov
pop
loope
mov
lahf
pop
sbb
bound
xchg
cmpsb
mov
loopne
stos
push
ret
adc
fdivs
cmp
fmull
jbe
out
mov
mov
sub
leave
scas
gs
adc
pop
adc
adc
loope
push
push
nop
jl
cmc
enter
mov
loopne
sbb
sti
cmp
fwait
sub
stos
jmp
jne
pop
and
dec
es
ret
lahf
push
push
out
js
pop
adc
addr16
outsb
mov
hlt
pop
xlat
lret
or
lods
out
shlb
mov
jmp
push
pusha
je
sub
mov
mov
mov
jbe
std
mov
mov
adc
or
outsb
inc
xor
xchg
push
repnz
dec
loop,pn
adcb
aad
adc
divb
mov
popa
jge
dec
bound
and
mov
mov
iret
outsl
mov
leave
or
xchg
aad
fcmovnb
cmp
fsubs
jo
dec
int3
sub
inc
xchg
pop
scas
push
mov
adc
movsb
pushf
pop
fmul
imul
add
add
jbe
adc
jmp
idivl
inc
lods
push
cwtl
xchg
adc
aas
adc
mov
mov
push
jbe
jmp
test
test
adc
test
js
cmp
or
mov
popf
dec
test
int3
mov
iret
fstpt
xchg
lods
jns
push
mov
arpl
insl
and
syscall
addb
mov
cmp
inc
mov
adc
roll
test
fwait
pop
loope
ret
jbe
cmp
mov
sub
add
sti
dec
push
mov
test
fwait
adc
stc
jbe
dec
or
xor
add
lds
adc
jns
mov
neg
adc
adc
pop
pushf
aad
subl
rorb
scas
ja
dec
pusha
imul
inc
lods
testb
mov
add
mov
adc
xor
out
jno
enter
and
and
jp
mov
mov
scas
sub
cmp
es
ret
scas
lret
xor
test
push
clc
arpl
xchg
insl
movsb
int
mov
mov
bswap
out
inc
pop
sbb
mov
jno
mov
jp
sbb
in
insl
pop
and
adc
adc
sub
stc
xchg
cmpsl
adc
scas
adc
rorb
shlb
cmpsl
popa
or
cmpb
jno
nop
cmc
mov
add
xchg
aad
popa
pop
std
mov
pop
fisubs
adc
ljmp
pop
sub
jbe
adc
adc
out
jbe
in
sub
adc
das
xor
imul
ret
adc
add
rcl
lret
sbb
ds
jae
adc
aad
push
xchg
add
adc
mov
xor
rcll
hlt
push
les
js
pop
sub
adc
fsts
mov
aam
fmull
aas
mov
test
clc
push
mov
xchg
cmp
pusha
jns
stos
mov
dec
data16
lret
inc
dec
or
push
inc
mov
jb
insb
int
repnz
xchg
jg
mov
cmp
inc
cmp
int
insl
mov
or
inc
mov
mov
mov
faddp
icebp
punpckldq
sbb
xchg
popa
cmc
push
mov
idivl
jbe
addr16
fwait
pushf
out
jnp
or
daa
jbe
ja
sub
push
adc
adc
mov
in
pop
aaa
inc
imul
mov
lret
subb
cmc
adc
jg
push
dec
rorb
ja
in
mov
cmp
test
jbe
stos
aas
and
xchg
mov
sub
and
mov
flds
jne
arpl
pop
fsubrl
inc
sub
push
and
dec
rcr
push
jbe
sbb
stos
movsb
mov
cmp
mov
adc
pop
pop
out
ret
pop
adc
inc
cmpsl
add
popa
adc
inc
or
sti
and
adc
es
popf
add
push
mov
dec
push
ret
bnd
xchg
fdivrs
cld
or
adc
scas
loop
or
mov
pushl
shrb
movsb
push
fldenv
pop
jmp
xchg
outsb
mov
dec
lods
xchg
mov
cmpl
push
adc
cmp
dec
push
callw
stc
pop
xor
stos
pushf
mov
push
lcall
je
sar
adc
xor
jne
movsb
add
outsb
ret
push
cwtl
mov
aam
xor
adc
xor
dec
xchg
adc
add
push
adc
in
in
mov
repnz
out
and
jbe
lcall
adc
in
cmp
inc
call
mov
mov
arpl
daa
mov
jecxz
pop
xchg
dec
lds
or
adcb
jae
and
pop
iret
nop
jnp
mov
mov
xchg
es
rolb
sbb
pop
or
shlb
out
sub
inc
lods
sbb
test
adc
push
mov
lret
mov
dec
jo
test
push
push
ss
shlb
jb
xchg
xor
std
cmp
jbe
rorl
dec
jbe
or
push
inc
mov
adc
sbb
push
mov
push
sub
cmpsb
mov
fimull
icebp
sti
adc
add
mov
push
imul
dec
mov
pop
je
adc
mov
ret
cwtl
andl
push
push
mov
insl
inc
pop
aas
das
push
and
shll
add
jb
adc
jae
mov
ficoms
jbe
mov
fidivl
mov
adc
inc
insb
lea
call
lret
mov
cli
mov
insl
aam
ss
mov
aaa
adc
jp
add
int
jbe
test
xor
or
sub
pop
xor
jbe
cmpsb
and
dec
mov
adc
ret
inc
inc
clc
loopne
inc
adc
or
jbe
push
mov
dec
std
xor
mov
lcall
jnp
nop
mov
adc
inc
add
pop
lock
mov
stos
test
jbe
jno
repz
or
popf
xchg
inc
sti
sub
adc
rcrl
or
jb
jne
nop
inc
jne
shll
mov
je
push
xlat
mov
ficoms
movsb
jmp
adc
cmp
push
sbb
mov
mov
lods
lea
lds
sbb
stos
adc
in
and
mov
into
int3
iret
push
clc
mov
pop
adc
pop
mov
js
xchg
mov
push
icebp
or
sahf
out
adc
pop
mov
icebp
or
cltd
loopne
sbb
psrad
push
mov
mov
jbe
xor
jnp
xor
jbe
dec
int3
in
adc
test
lahf
jnp
jbe
fs
mov
jbe
scas
inc
sub
fldl2t
popa
frstor
push
lahf
mov
xchg
icebp
ret
lahf
mov
push
inc
adc
call
gs
xchg
dec
jg
or
mov
mov
mov
loope
cmp
add
adc
cmp
pop
sti
pop
xor
xlat
push
sarl
inc
cmpsb
adc
or
dec
jno
cmp
imul
fwait
xchg
mov
jmp
in
push
sti
loopne
inc
adc
in
sub
inc
adc
lock
mov
lods
mov
lea
jbe
negb
ds
push
adc
in
nop
pop
cmp
adc
aas
push
adc
rorb
je
add
adc
lds
test
outsl
loop
movb
push
mov
popf
scas
sahf
mov
in
cli
xchg
adc
inc
mov
sub
js
cmp
and
notb
je
mov
mov
lods
mov
sub
adc
lds
mov
jmp
pushw
jbe
xchg
leave
ret
inc
mov
shll
ds
ss
adc
imul
dec
out
iret
xor
push
data16
decl
sbb
fisubs
push
cld
or
pop
xor
mov
sbb
xor
cmp
inc
aas
jns
cmp
mov
push
in
push
jne
loop
jl
jno
bound
mov
bound
lock
and
fs
inc
push
push
xchg
mov
mov
cltd
push
xlat
test
dec
jns
cmc
adc
push
add
adc
stos
and
or
mov
and
jbe
inc
cli
rcrb
xorb
jne
and
xor
loop
ja
push
push
push
adc
cmp
mov
jp
jecxz
fmulp
divb
daa
sub
push
mov
fists
fisubl
imul
jno
ret
sahf
mov
lock
inc
add
inc
sahf
xchg
fiaddl
js
mov
pusha
addr16
adc
xchg
outsl
mov
lds
xlat
std
lods
adc
negl
dec
push
inc
add
inc
xor
adcb
addr16
jb
mov
outsb
or
and
inc
icebp
xchg
sbb
mov
sbb
sub
decb
nop
sbb
dec
je
mov
shll
adc
xchg
add
and
or
aaa
lret
xor
jmp
adc
xchg
fucomi
roll
lock
adc
or
jecxz
mov
add
js
mov
jp
cmpb
push
fs
add
mov
pop
jmp
imul
pushf
mov
mov
cld
daa
pop
jbe
ds
jae
shrb
adc
cs
mov
mov
and
div
adc
cltd
mov
sub
xchg
iret
rcll
dec
loop
adc
out
sbb
or
fs
stos
mov
push
lea
es
mov
cmpsb
mov
clc
rolb
and
mov
xchg
adc
shlb
mov
ja
icebp
sub
mov
add
cmp
mov
sbb
cmp
and
lcall
pop
sbb
push
sar
dec
sub
fstpt
jae
mov
and
ss
in
fs
jno
or
popf
data16
mov
sbb
pop
xorb
leave
ja
aad
notl
popa
test
clc
push
lahf
fcoml
xchg
in
jns
insb
and
mov
lcall
sub
pop
sub
inc
xchg
fsub
mov
cmp
jno
leave
inc
icebp
jp
push
js
xchg
mov
adc
dec
jbe
inc
mov
dec
adc
call
vpunpckhbw
cmovs
and
in
pop
or
jne
jle
mov
adc
and
push
loope
fstl
mov
sbb
pop
scas
test
hlt
jnp
mov
xor
rclb
mov
xchg
test
mov
mov
cmp
adc
push
adcb
adc
mov
push
in
loope
inc
fwait
and
pushf
hlt
test
sbb
mov
aaa
aaa
sarb
inc
jmp
into
adc
pop
pop
mov
jp
push
add
gs
adc
mov
call
adc
mov
inc
xchg
out
les
addr16
jo
fdiv
pop
jo
adc
dec
mov
nop
pop
pop
cmp
orb
cli
xchg
ljmp
xor
cmp
enter
dec
rclb
sub
popa
jg
das
or
xchg
xchg
outsb
mov
dec
rcll
xlat
dec
mov
xchg
pop
xchg
enter
xor
mov
mov
es
adc
jnp
jmp
jp
ret
fldl
push
pushf
mov
mov
dec
pop
in
or
cs
mov
jnp
jmp
jbe
add
inc
mov
mov
or
jbe
xchg
lret
fcompl
cli
adc
dec
dec
xchg
sub
push
jle
imul
adc
sbb
outsb
or
ficoml
cmpsl
and
rolb
xchg
repnz
mov
sbb
xor
adc
sub
sub
add
mov
mov
add
adc
stos
add
adcl
fidivs
xchg
adc
adc
iret
sub
push
int3
sbbb
sbb
add
sahf
adc
pop
mov
and
lret
push
add
pop
cwtl
xchg
ja
jp
pop
scas
aas
mov
and
shl
jo
push
adc
fwait
xor
mov
mov
dec
enter
sahf
arpl
jg
push
dec
or
aad
pop
cmp
adc
sbb
pushf
clc
out
inc
adc
pop
adc
and
es
sti
xchg
pop
loopne
fnsave
adc
push
and
out
stc
mov
les
pop
cmc
pop
xor
xchg
xchg
pop
lods
repnz
or
mov
ja
int
cli
xchg
test
inc
xor
nop
rcll
fsubrs
mov
mov
xor
adc
pop
push
sahf
movhps
lods
xor
pop
ss
lds
jne
inc
jbe
cmpsl
data16
jecxz
inc
sub
dec
push
adc
stc
das
movsl
jns
jl
cs
in
add
xor
sub
and
insb
sub
jle
sbb
adc
dec
xchg
mov
inc
mov
cmp
jae
sahf
pusha
lret
add
stos
and
push
pop
xor
cld
popa
test
xchg
int
stc
xor
push
dec
mov
leave
xchg
xlat
sub
cs
jmp
push
in
aas
pushf
inc
adc
mov
gs
cmp
jbe
xor
push
mov
imulb
lea
or
push
insb
out
add
xor
inc
push
add
push
mov
psubusb
ret
les
and
lret
sbb
cmp
sbb
repz
adc
mov
insl
daa
mov
imul
jecxz
stos
push
xchg
incb
mov
movsl
in
pop
mov
outsb
push
lods
loopne
pop
and
int3
lods
push
cmp
push
int
inc
jbe
push
out
fildll
fisttpll
adc
int3
iret
add
xchg
imull
sbb
jae
add
xor
clc
sbb
loop
inc
mov
cld
inc
jbe
scas
mov
pop
sbb
mov
data16
movsb
bnd
jbe
scas
inc
in
add
xor
sbb
shrl
cmp
nop
cwtl
mov
push
sbb
repnz
test
or
push
stos
bound
pusha
xor
adc
aaa
pop
lcall
fstps
inc
pop
jnp
lret
mov
pop
cmp
mov
fisubrs
fadd
jmp
aaa
mov
inc
or
arpl
mov
jnp
and
jp
mov
stc
ret
mov
in
lret
int
adc
push
jecxz
cmpsl
es
loop
movsb
mov
cs
test
cmp
pop
xchg
push
mov
hlt
mov
adc
insl
cwtl
pop
sbb
cmpsb
xchg
mov
mov
mov
int
mov
sbb
and
adc
out
inc
cmc
push
imul
dec
ror
aam
mov
sub
adc
pop
cmpsb
sub
das
adc
mov
stc
sub
xchg
lea
jmp
hlt
arpl
aaa
les
jg
fwait
mov
jne
adc
icebp
ds
jns
mov
push
adc
jg
xchg
enter
xor
test
shll
jne
adc
bound
lcall
pushf
test
addb
adc
push
push
pop
fisubs
inc
adc
jmp
dec
cmp
or
pop
sub
mov
pop
push
mov
push
sahf
xchg
mov
popa
in
inc
xchg
jae
roll
lahf
outsl
shrl
int
xlat
mov
adc
dec
pop
shrl
xorl
jne
jbe
gs
cmp
adc
cmp
pop
xchg
add
adc
sbb
sbbl
js
mov
aaa
out
lret
jl
dec
and
enter
pop
bound
mov
rcll
lcall
adc
and
mov
adc
pop
rcll
popa
adc
movsl
push
inc
xor
std
ja
pop
push
push
dec
inc
aad
rcrl
jae
mov
push
sub
add
xchg
pop
adc
lret
mov
xchg
mov
add
pop
jle
pop
pop
xchg
or
xchg
and
push
and
xchg
pop
jmp
cli
aas
add
in
xchg
push
movsb
inc
jg
out
jns
cmpsl
sbb
cmp
in
sarl
out
jbe
adc
or
pop
sbb
adc
sub
repz
jmp
pusha
in
lret
imul
adc
jg
lods
xchg
lret
adc
fdiv
cmc
jmp
mov
fistl
fcoml
sti
xchg
imul
scas
cmpsl
into
jae
xchg
mov
movsb
or
daa
or
std
hlt
sub
es
jae
add
sub
jg
add
xchg
jecxz
jbe
sbb
sub
sysenter
jbe
int
dec
shrb
jb
js
jmp
repz
lret
pop
mov
and
nop
push
cmp
xchg
mov
insl
mov
rcll
lcall
xor
mov
stc
rep
jbe
fsubl
push
paddb
cmp
jo
mov
fstpl
ficomps
in
hlt
sub
sub
jle
fdivrs
bound
rclb
xchg
fwait
adc
xchg
inc
mov
je
dec
loope
adc
dec
dec
mov
repz
cmp
outsb
jbe
out
push
sub
push
push
pop
mov
mov
adc
inc
in
cmp
lods
inc
cmp
inc
cli
jl
paddq
and
push
xchg
loopne
outsl
sbb
ficoms
mov
xchg
mov
adc
notb
jl
mov
cmp
push
push
andl
jbe
pop
imull
repz
xchg
jbe
out
jno
cmpsb
or
cld
push
inc
add
iret
lcall
insb
cmp
xchg
in
or
mov
icebp
dec
loop
aas
in
repnz
out
ja
outsb
adcl
out
in
hlt
xchg
dec
gs
push
int
insb
pop
sbb
iret
xchg
pop
pop
loope
mov
jns
mov
ds
jbe
mov
cmc
jbe
xor
and
push
push
mov
adc
fs
in
mov
stos
jne
jnp
int3
and
or
jnp
add
sbb
repz
inc
cmp
daa
or
orb
mov
xor
cmpb
add
xor
adc
je
aaa
fisttps
adc
and
pop
call
jnp
dec
fcompl
cmp
jbe
fildl
adc
into
lret
mov
stc
sub
mov
mov
ret
jb
pusha
das
sub
mov
test
fwait
adc
and
into
rcll
das
sub
imul
mov
movsb
sub
or
lock
xchg
into
or
xchg
xchg
adc
es
dec
dec
jge
insl
xchg
mov
push
adc
dec
inc
sarb
pop
mov
mov
xor
cmpsl
mov
push
adc
xchg
sbb
aam
mov
or
sbb
lock
shr
mov
movsl
pusha
mov
nop
jae
mov
pop
sbb
jo
mov
fldt
adc
sti
cmc
jg
and
dec
and
dec
sbbb
xchg
mov
adc
pop
cmpsb
adc
lahf
xor
movsl
stc
lods
add
inc
dec
pop
mov
sbbl
shrl
cmp
stc
fistl
fnstsw
js
sbb
cmp
loope
cmp
leave
sub
arpl
aas
jbe
and
adc
xor
das
adc
bound
sbb
scas
push
mov
push
arpl
out
jbe
repnz
out
adc
sub
scas
sbb
ss
adc
lock
int3
cmp
xchg
shll
push
jbe
pusha
sub
sbb
adc
xchg
or
andl
mov
rorl
jae
inc
inc
iret
xor
adc
cmp
les
out
icebp
mov
sub
mov
iret
adc
pop
mov
shl
les
mov
lret
jmp
pop
iret
adc
add
test
mov
xlat
out
cmc
ret
insl
dec
xchg
jbe
outsb
dec
push
mov
xor
xchg
das
out
ljmp
enter
std
insl
lcall
add
xchg
mov
mov
mov
mov
add
cmp
pushf
adc
ljmp
pop
js
push
xchg
clc
ds
andl
xor
jns
out
pop
out
pusha
in
lcall
nop
inc
pop
insb
add
mov
jp
or
repz
push
sub
rolb
sub
mov
and
push
inc
mov
pop
ja
test
push
push
jge
outsl
lret
int3
adc
fsubrs
mov
out
cltd
lods
push
mov
and
jmp
nop
adc
sbb
jecxz
out
nop
fstl
jb
dec
push
cmp
jbe
mov
jmp
push
jae
adc
fwait
jmp
adc
test
add
popf
gs
int3
clc
xchg
sbb
mov
scas
imulb
cmpsl
adc
cmpsl
incb
adc
fiaddl
sub
push
and
lret
je
mov
mov
stos
rclb
dec
cmp
in
pop
outsb
lock
lcall
sbb
jle
xchg
cmp
jbe
inc
xchg
jmp
pop
fbstp
push
incb
pop
sub
cmp
jb
mov
idiv
loope
mov
mov
inc
dec
jmp
dec
dec
mov
adc
mov
or
inc
fsubrs
loop
mov
iret
fbstp
xchg
adc
push
mov
jle
lods
mov
aad
popf
dec
mov
subl
inc
in
sub
mov
stos
adc
pop
sub
xchg
fistps
jl
test
loopne
popa
out
xchg
inc
sub
pusha
or
or
rclb
in
je
xchg
subb
clc
out
inc
ret
testb
xor
shlb
out
ja
adc
sub
jo
and
and
pop
stos
jnp
mov
pop
lds
ds
scas
mov
pushf
inc
adc
aas
insb
xor
lds
inc
repz
mov
lea
sub
in
nop
test
shll
test
xchg
adc
mov
adc
popl
adc
xchg
ss
adc
pop
les
push
adc
outsl
inc
out
out
mov
ficoml
lds
adc
shll
sub
xchg
inc
and
adc
jmp
mov
adc
or
adc
dec
sbb
jbe
mov
sub
loop
mov
loop
out
pop
insb
jecxz
push
rcr
dec
mov
popa
repnz
xchg
adc
repz
popf
les
pusha
pushf
and
mov
xor
dec
add
cmp
cld
pop
aam
lea
mov
fs
push
jo
adc
sub
adc
sbb
insb
xchg
adc
cmc
jae
in
or
pop
push
dec
jns
cmpsl
test
hlt
push
mov
adc
cmp
push
pop
cmp
adc
or
mov
cmp
lea
xchg
and
xor
test
sbb
sub
fsubrs
mov
and
imul
xor
mov
xchg
les
mov
fldt
inc
mov
imul
push
lods
inc
cli
pop
pop
ja
add
enter
aaa
jbe
and
pop
sub
enter
imul
mov
arpl
iret
and
jns
jp
pop
mov
dec
outsl
and
pop
fwait
jmp
inc
imul
dec
or
sahf
rclb
push
add
add
test
sub
cmp
outsl
je
adc
jae
loop
jp
nop
mov
add
lret
pop
xor
fwait
jo
mov
nop
inc
dec
dec
and
out
aad
jle
ds
cmp
shll
mov
sub
test
sub
mov
lahf
or
mov
lods
in
sahf
add
inc
std
jmp
adc
xchg
mov
cmp
adc
xchg
mov
cld
aam
adc
ljmp
mov
icebp
enter
mov
imul
ss
sbb
insl
mov
adc
insb
lret
adc
jge
adc
mov
push
pop
int3
into
cmp
xor
pop
sub
fcoml
sbb
pop
add
aad
ljmp
xchg
test
dec
adc
pop
imul
inc
push
dec
sbb
sbb
sub
scas
andb
fdivl
ss
push
jne
cmpsl
pusha
jecxz
loopne
xchg
lds
sub
pushf
mov
fidivl
jg
sbbb
fs
mov
cmp
dec
xchg
out
mov
es
adc
mov
std
dec
adc
and
out
rcrl
mov
push
ret
xor
jbe
push
mov
lods
adc
sbb
cwtl
jno
jbe
xchg
and
adc
shll
enter
push
adc
std
cmpsl
push
lods
scas
cli
rorb
les
ss
ret
sub
dec
test
shrb
enter
xlat
idiv
int3
sub
jne
jns
mov
mov
pop
mov
inc
in
sub
cmp
jg
call
dec
imul
adc
pop
xor
or
adc
dec
popf
and
xlat
jno
and
pop
ret
gs
xor
sbb
jbe
stos
sbb
adc
xchg
out
mov
mov
lods
lods
mov
mov
hlt
jb
inc
adc
sbbb
mov
inc
xchg
jno,pt
dec
gs
stc
pusha
adc
adc
dec
xchg
mov
cmp
pop
add
lcall
push
jge
fs
dec
xchg
roll
mov
xchg
adc
bnd
sub
sbb
popa
mov
sbb
push
sti
loop
test
subb
repnz
cmpsl
ljmp
adc
and
cwtl
stos
sbb
and
add
test
shrl
and
lods
imul
out
push
sub
lds
cwtl
adc
adc
cs
in
add
out
xchg
push
call
aas
xor
jbe
sbb
inc
dec
pop
inc
add
xchg
cmpsb
adcb
je
sbbl
mov
mov
add
dec
stc
dec
stos
xorb
into
sub
addr16
jbe
mov
jo
adc
inc
stos
inc
out
adc
mov
or
adc
repz
aas
pop
insl
dec
jbe
movsl
dec
popf
clc
lea
rclb
outsb
int
sub
hlt
les
add
mov
int3
jbe
mov
fs
movsl
pop
out
adc
imul
adc
pop
mov
mov
shrl
cwtl
mov
pop
in
inc
cmp
test
shlb
jg
sub
les
mov
lcall
push
push
inc
std
imul
add
icebp
pop
adc
adc
mov
mov
pop
dec
push
dec
jnp
mov
int3
lcall
adc
call
mov
xor
aaa
inc
jecxz
adc
mov
pop
pop
lret
mov
inc
add
xchg
mov
xchg
mov
outsb
mov
push
adc
fisubrs
jbe
inc
dec
sar
sbb
inc
jmp
jns
jae
sub
fisubs
sbb
xlat
dec
movsb
insl
xchg
xchg
icebp
mov
mov
fs
xchg
adc
incl
xchg
out
imul
inc
pop
mov
xchg
mov
cld
daa
mov
jbe
lret
mov
mov
sbb
ret
adc
aad
jmp
xchg
push
sbb
lods
inc
and
sub
movsb
or
rcll
stc
pop
mov
mov
mov
jnp
lcall
dec
pop
push
repz
cwtl
call
mov
into
xchg
imul
nop
pop
out
cmp
imul
shll
lods
xor
jp
push
jno
repnz
adc
jle
inc
adc
pop
scas
add
ljmp
adc
aad
adc
aaa
out
or
nop
jb
mov
sub
fstpl
in
jbe
adc
roll
and
inc
aaa
push
adc
adc
es
cmc
fidivrl
push
adc
push
pop
orb
add
push
dec
sub
mov
ds
pop
in
dec
shlb
aam
inc
out
pop
push
jl
xor
out
jbe
cmpl
fmul
push
mov
mov
pop
jmp
dec
movsb
int
cmc
xor
aam
xor
mov
push
scas
mov
imul
stos
mov
sub
jne
daa
aad
inc
or
shrb
add
jb
aad
adc
jo
mov
ss
mov
mov
push
jb
adc
or
js
pop
imul
test
js
mov
xchg
mov
fsubrp
fucompp
imul
mov
inc
jmp
mov
imul
movsb
int3
sbbl
iret
inc
push
xchg
adc
out
cltd
in
xchg
cmpsl
loopne
mov
ret
or
xor
jbe
push
rclb
out
pop
adc
and
push
jle
ss
mov
xor
outsl
fwait
inc
jae
cli
outsb
lea
sarl
adc
int3
popa
leave
adc
fiadds
adc
cvtps2pi
mov
lds
ljmp
mov
jne
mov
jl
shrl
iret
mov
sbbb
mov
ljmp
shrl
jns
mov
lock
inc
pop
sbb
xorl
jbe
cltd
stos
jp
mull
sbb
sub
cmpsb
test
mov
jbe
sarb
in
adc
and
popf
dec
lock
push
cmp
dec
insb
mov
notl
call
mov
sarl
xchg
xchg
pop
or
enter
push
or
push
cmp
push
jmp
and
pop
xchg
mov
cmpsl
sbb
mov
xor
call
dec
popf
mov
ja
ret
mov
inc
jecxz
xchg
fsubs
and
add
sar
cmpsl
test
xchg
popa
mov
hlt
xor
cltd
pushf
mov
lods
add
mov
mov
add
dec
sub
jno
fisubrl
and
add
cmp
inc
cli
scas
sahf
or
sbb
adc
sbb
in
outsb
pop
or
sarb
push
xchg
push
sbb
push
add
movsb
sar
xor
sbb
loopne
decb
and
lods
adc
das
dec
dec
xchg
jbe
add
insl
loope
mov
adc
or
adc
add
mov
out
jmp
mov
mov
jg
gs
sti
gs
repnz
push
cmpb
popa
xchg
lcall
pop
jno
or
dec
adc
in
xchg
xor
push
add
scas
xchg
insb
mov
jle
fwait
inc
sbb
mov
push
adc
aaa
ljmp
cltd
mov
pop
mov
add
iret
sub
stos
xchg
push
pop
mov
pop
xchg
pop
xchg
xorb
cli
bound
dec
scas
fs
mov
mov
aas
lods
dec
gs
xchg
aam
xor
in
inc
loopne
push
cltd
int
mov
xor
cmp
js
cmp
push
sub
adc
mov
adc
dec
pop
jecxz
lods
movsl
xor
xor
out
push
gs
push
add
das
loope
mov
push
mov
pop
icebp
jb
into
dec
fistps
or
adc
rorb
popa
shll
xchg
cld
sbb
push
and
fwait
jge
loopne
or
and
sub
pusha
mov
fistl
repnz
fldcw
push
adc
jecxz
push
fs
jmp
cmp
jbe
stos
jecxz
xor
imul
test
push
xchg
add
shl
inc
stos
xchg
in
mov
lods
mov
adc
cmp
ljmp
lret
add
pop
icebp
icebp
mov
popl
outsl
lcall
adc
clc
and
lods
inc
jmp
adc
outsb
mov
sar
jne
pop
adc
adc
pop
dec
scas
mov
orl
jmp
mov
into
jbe
xchg
stc
popf
inc
mov
mov
push
cmpsb
ljmp
mov
inc
shll
xchg
into
mov
push
jl
jbe
mov
cwtl
iret
adc
mov
sub
repnz
aaa
push
add
mov
stc
fwait
push
mov
pop
out
dec
sbbl
push
push
cmp
sub
shrb
sub
fwait
cmp
daa
mov
jbe
pop
mov
pop
pop
ret
xor
dec
xor
adc
outsb
cmp
data16
or
stc
fwait
ljmp
mov
movsl
adc
or
lods
sbb
cmp
adc
mov
dec
adcl
jp
fwait
adc
mov
clc
sbb
out
call
push
mov
add
outsl
stc
jns
xchg
sahf
mov
pop
mov
bound
jecxz
sub
clc
imul
mov
inc
cmpb
in
divb
push
mov
pop
fwait
push
inc
nop
js
aad
enter
mov
popf
rorb
sub
arpl
jl
in
testl
inc
adc
addr16
ret
xchg
or
push
call
jge
mov
xchg
sbb
test
or
jno
push
icebp
mov
rcrl
jbe
ret
dec
jo
jmp
orl
push
je
inc
xor
lods
pshufw
xchg
cmp
mov
push
pop
negb
adc
or
xchg
push
adc
mov
out
call
sarl
fwait
adc
and
insb
xchg
enter
push
jbe
xchg
mov
movsl
or
loop
jmp
sarl
sbb
mov
mov
pop
inc
ja
shll
scas
enter
std
fs
sahf
int3
jl
lea
insb
ss
push
imul
rclb
in
xchg
lret
int3
add
xor
pop
xlat
adc
xchg
mov
orl
dec
xchg
adc
mov
imul
mov
cltd
and
pop
cmp
in
push
push
sub
inc
rcl
xchg
pop
adc
pop
out
pop
and
push
push
test
mov
imul
jne
adc
lea
add
adc
movsb
push
test
pop
sub
in
out
int
scas
adc
sti
lret
or
sbb
into
mov
mov
inc
lret
mov
test
mov
jg
in
mov
cld
and
mov
scas
enter
inc
add
test
jbe
jmp
in
adc
sub
add
in
jg
adc
and
imulb
inc
mov
xorl
push
push
mov
mov
imul
mov
ljmp
lea
jno
or
das
pusha
pop
cmp
mov
add
mov
sub
nop
cmp
aas
sti
jge
push
repz
gs
cltd
test
cmc
ljmp
adc
pop
cmp
out
xor
lock
jbe
test
xchg
cmp
cmp
or
fsubrl
js
jp
jmp
xchg
sub
lea
incb
sub
mov
jne
sbb
call
or
fsin
jnp
arpl
cmpsb
fidivs
lods
scas
push
les
icebp
or
adc
lods
rolb
mov
aaa
stos
inc
mov
pop
shlb
out
mov
test
adc
inc
dec
shrb
popf
pop
pop
das
inc
imul
andl
jg
adc
decl
xor
push
adc
push
out
in
loop
adc
movsb
sub
mov
imul
movsl
nop
or
aas
or
lods
int3
aam
fdivr
rcll
insl
imul
jb
adc
dec
xchg
das
out
xchg
ja
test
fsubrl
xchg
mov
mov
jle
push
jbe
popa
testl
dec
mov
ret
decb
and
push
out
jbe
jmp
out
mov
stos
fcoms
push
fnstsw
or
je
pop
aad
aad
mov
cmp
pop
jbe
adc
pop
push
mov
mov
shrl
lods
hlt
insb
dec
add
add
popf
es
daa
push
test
push
sbb
mov
jns
aam
in
pop
xor
cld
xchg
adc
test
sbb
pop
stc
or
mov
adc
insl
xchg
stos
adc
xlat
pop
or
push
scas
mov
adc
dec
xor
fstps
loope
in
push
xchg
cmpsb
aas
jge
push
sub
into
pop
stos
xchg
jns
call
clc
lea
dec
inc
adc
inc
pusha
adc
sbb
push
ds
stos
scas
outsl
jmp
push
lea
lret
mov
xor
and
test
mov
outsb
adc
mov
or
std
pop
jmp
adc
pushf
pop
cltd
xorl
lret
and
enter
pop
inc
lock
adc
outsl
cmp
lds
nop
aad
loope
dec
into
cmpsb
outsb
jl
cli
popf
stc
outsb
loop
arpl
sahf
jl
popf
insl
movsl
pusha
jo
adc
adc
js
lahf
adc
in
call
and
inc
push
mov
ja
ret
mov
dec
xchg
imul
imul
notl
adc
sbb
dec
adc
outsb
push
xor
xchg
cli
add
orl
das
shll
fdiv
dec
xor
mov
dec
fcomps
xor
jb
push
iret
sub
pop
and
jne
sbb
and
cmp
dec
ret
loope
jbe
or
inc
push
adc
stc
cmp
outsl
sarl
pushf
pushf
pop
adc
cwtl
es
cmpsb
call
addr16
lods
sub
stc
add
fisubl
hlt
dec
jno
out
out
mov
cmp
in
ss
lret
dec
add
lock
mov
mov
cmp
lea
or
mov
movsl
movsl
mov
adc
jno
in
cmp
adc
xchg
or
jl
pop
lock
dec
pop
inc
jle
mov
dec
pop
mov
adc
mov
adc
xor
popa
dec
je
adc
xorb
sbb
mov
or
jno
xor
jns
pop
int
idivb
and
adc
setne
sbb
push
push
cmp
pushf
rcrl
mov
nop
pushl
call
jg
push
mov
xchg
adc
push
mov
adc
icebp
in
add
push
in
push
adc
fadd
cmp
jmp
popa
xor
add
or
pop
inc
mov
xchg
mov
icebp
pop
out
insb
xchg
and
mov
ss
out
sub
xlat
repz
mov
cmp
test
fstl
mov
cmc
xchg
pop
fists
adc
fcoml
adc
sbb
and
xchg
push
jge
movsl
push
lahf
stos
out
daa
adc
or
pop
mov
inc
nop
mov
xor
inc
jmp
cmp
mov
sbb
dec
mov
jns
mov
adc
mov
jp
rcrl
mov
sbb
mov
adc
add
mov
fldt
and
or
pop
adc
popf
scas
sarl
xor
shll
mov
movsb
xchg
jle
mov
adc
mov
inc
mov
fbstp
sti
or
jae
jmp
add
ficomps
jge
adc
ret
mov
roll
push
mov
int3
rcrl
stc
cmpsb
or
sbb
scas
mov
xchg
cmp
stc
popa
xchg
adc
adc
xor
loopne
in
ret
mov
adc
xor
into
les
sub
push
xchg
adc
stc
scas
cmp
mov
ds
std
ficoms
mov
clc
adc
push
cmp
test
in
rorl
pop
rclb
push
xor
in
enter
adc
jnp
rcrl
sub
mov
pop
sbb
cmpsl
movb
jbe
jle
fmull
mov
mul
inc
pop
movsb
push
jno
jp
int
mov
mov
mov
lret
push
xor
repnz
dec
out
add
fadd
jno
and
je
jo
pusha
mov
mov
jge
lcall
out
in
pop
popf
jg
lods
adc
xchg
push
sarl
scas
xor
pop
data16
je
dec
or
push
xchg
cmc
outsl
pop
cli
jns
call
dec
sbb
adc
xor
inc
pop
push
dec
jb
mov
jge
mov
sub
pop
orl
popf
stc
test
arpl
mov
pusha
imul
xchg
jbe
stc
jne
ss
dec
pop
test
outsl
or
dec
mov
mov
adc
ss
xchg
stc
adc
mov
pop
test
sub
dec
imul
cmpsl
add
push
xor
sbb
sbb
daa
vmovd
jb
adc
mov
and
sbb
jg
cli
int
jbe
dec
imul
sub
icebp
jbe
dec
js
daa
inc
and
ds
adc
lcall
xor
dec
dec
mov
dec
lret
outsl
iret
out
xchg
mov
fimuls
rcll
fwait
int3
push
pusha
push
out
adc
scas
jo
mov
inc
dec
mov
jbe
mov
das
xchg
adc
dec
ret
subb
push
push
sub
sub
sbb
push
push
insl
mov
test
aas
jae
flds
dec
test
mov
jmp
jb
push
or
aad
test
dec
cmp
inc
lock
jle
sub
cwtl
rclb
add
fucomp
and
shll
clc
dec
mov
mov
mov
jbe
fisubrs
lahf
adc
inc
out
adc
xor
repnz
mov
sahf
jg
xor
and
pop
jo
out
mov
push
jg
push
and
mov
stos
or
push
dec
xor
in
mov
mov
push
mov
lods
jbe
aas
dec
mov
adc
mov
mov
add
dec
cmpsl
in
jae
jbe
aam
stos
adc
sbb
adc
jmp
das
and
mov
out
inc
lret
mov
sub
push
testb
push
add
aad
js
sahf
mov
aaa
ja
mov
dec
push
scas
or
push
push
fidivs
jb
push
pop
jge
pop
jp
pop
mov
pop
out
out
push
jbe
sub
cli
enter
adc
lock
ja
arpl
push
xor
rorb
xchg
push
movsb
jb
ret
adc
cmp
dec
and
xchg
addr16
add
repz
mov
xor
sub
sub
addb
dec
xor
cmc
in
sbb
cwtl
repnz
mov
fisttps
add
cmpb
scas
daa
sarl
mov
cmp
es
icebp
or
sbb
sbb
repnz
test
sub
insb
jno
stos
mov
xchg
mov
ja
xlat
add
ret
ds
pusha
cmpsl
enter
mov
mov
sti
add
das
adc
or
mov
imul
sahf
fsubl
in
leave
lret
adc
mov
mov
adc
xchg
push
xor
pop
and
data16
ljmp
scas
pop
or
mov
aas
out
pop
ror
fwait
adc
std
jbe
cld
mov
out
xchg
mov
fs
mov
mov
pop
jbe
imul
int
call
pop
ljmp
in
mov
and
jns
mov
icebp
or
sbb
sub
shl
adcb
rorl
mov
lods
mov
jg
push
dec
or
loop
sbb
xchg
nop
test
leave
in
push
pusha
adc
psubusw
dec
xor
out
jb
mov
dec
jbe
inc
sub
adc
adc
jo
imul
jmp
aaa
adc
lahf
sarl
mov
mov
in
cmp
test
push
pop
dec
das
je
adc
push
cli
push
jb
movsl
repz
add
scas
test
adc
pushf
push
and
and
adc
rcrb
mov
aas
push
mov
push
out
push
cmpb
lret
mov
gs
rcr
and
jbe
aam
xor
mov
add
ss
enter
cs
jno
fwait
jbe
mov
aas
adc
jg
nop
aas
jo
dec
sti
imul
lds
rcll
inc
test
cltd
lea
adc
xlat
sbb
mov
shrb
jbe
int3
pusha
cltd
pop
jg
popf
adc
lahf
or
lea
mov
ret
mov
xor
aad
mov
icebp
pop
dec
dec
sbb
pushf
mov
sub
pop
bound
adc
jmp
iret
push
cmpsl
jmp
dec
rorb
xor
dec
adc
jb
mov
push
scas
scas
aad
lods
jl
outsb
push
rolb
ja
das
sub
xchg
add
cmp
addr16
shrl
xchg
push
cmp
sub
xchg
mov
pop
adc
xchg
adc
or
and
dec
rcrb
mov
inc
mov
jmp
test
mov
sub
inc
icebp
dec
js
scas
jbe
es
jae
popa
imul
xor
cmp
sbb
push
push
xchg
adc
out
in
rcrl
adc
test
aam
and
imul
insb
fwait
jecxz
in
dec
stc
popf
adc
fisubrs
adc
imul
imul
mov
xor
loop
insb
cmp
push
mov
nop
mov
outsb
xchg
nop
lret
je
cmp
lods
pop
sbb
fadds
lods
jo
or
nop
inc
push
dec
push
sub
jb
cmc
adc
mov
loope
cmp
push
sub
shll
in
les
shlb
pop
sar
mov
call
add
into
orl
mov
aaa
pop
adcl
outsl
xor
sub
mov
in
mov
mov
or
lods
jnp
sub
or
das
mov
inc
rcll
out
mov
mov
imul
clc
sbb
es
adcb
inc
pop
repz
mov
sub
push
or
sbb
jg
mov
add
push
xchg
adcb
out
xchg
js
sahf
movsl
inc
push
mov
movsl
jle
push
push
das
icebp
das
dec
rcll
pop
ret
add
push
lds
xchg
sbb
mov
dec
sbb
mov
mov
sub
std
sub
mov
test
add
ret
loop
push
adc
movsb
out
mov
adc
pop
pop
test
call
mov
jne
pop
leave
mov
dec
adc
fcoml
int
lcall
sarb
push
clc
pop
movsb
adc
mov
loopne
dec
mov
stc
lea
int
loopne
cmpsb
xchg
xor
lcall
stos
jns
jbe
insl
jnp
or
mov
inc
or
jbe
add
in
mov
hlt
push
inc
ficoms
jo
inc
push
hlt
pop
outsb
and
lahf
scas
out
pusha
ja
adc
cwtl
xchg
inc
pop
pop
mov
add
popf
mov
lock
or
mov
push
xor
aas
arpl
and
mov
aam
into
cmp
insl
adc
sub
mov
mov
push
dec
testb
lret
test
divb
enter
jne
adc
or
sbb
outsb
nop
dec
je
or
cmp
add
fldl
xor
dec
pop
subl
xorb
jbe
mov
pop
cmpsb
nop
xor
mov
out
fldenv
mov
mov
jbe
cmc
sbb
adc
pop
mov
push
outsl
sbb
jbe
adc
mov
and
ljmp
aam
loopne
and
sub
fisttpl
add
cmpsb
add
stc
jns
enter
sub
cwtl
cwtl
imul
cmp
push
enter
test
orl
pop
repz
pop
push
ret
dec
and
loop
jge
cmp
jbe
mov
jnp
fs
push
movsl
fcomp
or
dec
pop
mov
jae
std
stos
pop
aam
fnstcw
jo
jg
adc
shll
xchg
lahf
pop
adc
icebp
pop
repz
movsl
fwait
push
fisttpl
rcr
loope
jo
rorl
fidivl
ljmp
xchg
leave
insl
nop
add
and
aas
inc
fsubl
cs
jbe
xchg
rorb
cmp
adc
adc
cmp
out
shrl
mov
rcll
jmp
add
lcall
inc
adc
or
out
je
or
adc
rorb
insb
jno
push
ja
out
fidivrl
mov
mov
cmpsl
add
add
outsl
fnstsw
pop
jg
pop
negb
inc
pop
mov
jle
rorb
inc
in
loope
jo
inc
xchg
dec
pushf
add
add
inc
test
push
pop
mov
add
out
and
adc
adc
lock
pop
sub
sub
cmp
or
push
mov
std
leave
mov
add
les
xchg
jmp
adc
adc
mov
aas
adc
and
pop
and
shl
sbb
jns
stc
repz
outsl
mov
jmp
adc
add
icebp
mov
push
sti
sbb
push
lret
mov
inc
outsb
mov
mov
push
rolb
push
inc
pop
cmpl
dec
cmp
or
xor
std
pop
push
shrl
inc
outsl
insl
fwait
pop
lret
jb
mov
add
xchg
cmpl
xlat
daa
xchg
hlt
fwait
rcrb
fidivrs
addr16
mov
xchg
rcl
add
adc
mov
decb
ficoml
adc
unpcklps
mov
fsubl
out
adc
sub
sbb
ss
lea
bnd
clc
cmc
call
repnz
clc
jl
adc
clc
sub
hlt
mov
inc
shll
cmp
scas
xchg
lahf
hlt
dec
rorl
cbtw
ja
repnz
pop
pusha
je
adc
cmpb
movsl
push
lcall
ljmp
mov
push
push
dec
adc
lea
jno
sahf
bound
push
out
cmp
sbb
push
bound
out
cld
mov
icebp
jno
add
fs
inc
lods
outsb
sub
sub
adcb
mov
push
lea
sbb
and
sbb
mov
bnd
dec
inc
sub
mov
push
push
jle
push
pushf
cs
cs
lds
sbb
jg
cmp
push
pop
sbb
xor
dec
sub
movsl
sbb
cmp
mov
inc
jg
subl
mov
cmp
fs
push
loopne
sub
cmc
arpl
pop
lods
andl
clc
xor
ficoml
add
push
mov
out
xor
popf
add
jp
repz
mov
jge
cmpl
in
sbb
push
test
shr
mov
inc
ficompl
jge
lds
cmpsb
in
aam
cmpsl
add
pop
lods
adc
mov
push
adc
mov
pop
jge
jp
dec
dec
cs
cli
mov
sub
pop
sbbl
out
stc
jne
xor
inc
fdivs
cmp
mov
adc
fmul
adc
imul
sbb
scas
xchg
jge
sbb
mov
jg
mov
lret
or
movsb
dec
and
jns
cmp
xor
sub
lahf
and
pop
ja
repnz
loop
pop
cmp
ljmp
movsb
and
sbbl
mov
push
dec
ret
and
test
test
inc
inc
psrad
jl
xchg
aas
in
fstpl
nop
cwtl
mov
mov
mov
dec
aad
mov
jmp
in
rcrb
push
push
cld
or
jle
or
fstpt
and
cwtl
adc
add
int
roll
rcr
jle
mov
pop
movsb
pop
aas
shr
and
iret
xor
cmp
lock
and
add
inc
push
popa
sbb
add
pop
cmp
jecxz
cmovns
pop
adc
and
mov
mov
jl
cmp
add
sahf
pop
ds
and
sbb
adc
ds
mov
lods
dec
push
xor
cli
rcrb
into
nop
add
arpl
inc
mov
lea
push
int3
