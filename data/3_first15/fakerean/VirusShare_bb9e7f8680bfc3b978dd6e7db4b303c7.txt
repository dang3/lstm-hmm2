push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
pushl
call
test
pop
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
push
and
push
push
mov
call
mov
and
neg
sbb
and
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
mov
mov
cmpl
mov
jge
lea
call
xor
test
je
xor
test
js
lea
mov
mov
call
lea
mov
call
lea
xor
call
mov
mov
lea
mov
mov
lea
push
mov
mov
movl
movl
mov
movl
mov
mov
mov
push
push
call
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
lea
push
push
mov
call
test
js
mov
cmpl
jge
mov
mov
mov
lea
push
push
call
test
js
mov
cmpl
jge
push
call
add
cmp
je
mov
mov
mov
push
push
mov
lea
push
call
mov
cmp
je
push
call
add
mov
cmp
mov
jne
cmp
je
mov
lea
mov
mov
mov
mov
push
lea
lea
mov
movl
movl
mov
call
add
test
js
mov
push
lea
push
lea
push
mov
call
test
js
mov
cmp
jne
cmp
jne
mov
push
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
sub
push
mov
push
push
xor
push
mov
call
push
pushl
mov
call
test
js
push
lea
push
pushl
mov
call
test
js
cmp
mov
je
push
lea
push
pushl
mov
call
test
jne
push
lea
push
pushl
mov
call
test
jne
push
lea
push
pushl
mov
call
test
jne
xor
inc
test
movl
movl
mov
movl
movl
mov
je
movzwl
push
push
push
lea
call
pop
pop
push
pushl
mov
call
testb
mov
jne
testb
jne
test
jne
lea
mov
xor
cmpb
jne
cmp
mov
jne
mov
push
pushl
pushl
mov
call
pop
pop
pop
leave
ret
push
mov
andl
test
jne
pop
jmp
push
mov
mov
call
cmpl
je
mov
or
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpb
je
push
push
mov
mov
push
push
call
cmpb
push
je
mov
push
push
call
movzwl
push
push
mov
push
push
lea
movl
movl
mov
movl
mov
mov
call
mov
lea
mov
lea
add
mov
lea
lea
mov
mov
push
lea
xor
mov
push
lea
push
mov
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
cmp
je
mov
mov
cmp
jbe
xor
mov
jmp
jmp
lea
mov
add
mov
mov
test
lea
mov
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
movl
movl
mov
call
push
mov
mov
mov
movl
movl
mov
call
lea
mov
mov
xor
lea
mov
add
mov
lea
mov
lea
mov
mov
lea
mov
mov
push
lea
mov
push
lea
push
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
sub
jne
pop
pop
pop
pop
add
ret
mov
push
push
jmp
movsbl
and
ret
mov
test
jne
test
je
mov
ret
xor
inc
ret
xor
ret
mov
call
cmp
jae
mov
call
ret
mov
test
jne
mov
ret
and
ret
add
push
xor
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
cmp
jne
cmp
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
mov
push
mov
push
mov
push
lea
mov
call
fildl
mov
sub
fstps
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
flds
mov
fld
fdivrp
fxch
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
fidivrl
mov
sub
mov
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
mov
fdivs
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
mov
imul
mov
imul
pop
mov
mov
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jg
xor
xor
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
jmp
xor
mov
mov
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
xor
ret
push
mov
push
mov
test
je
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
cmpl
ja
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
mov
call
andb
pop
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
cmp
je
mov
mov
test
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
xor
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
pop
adc
pop
inc
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
cmp
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
lea
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
mov
lea
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
fchs
fldl
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
call
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
call
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
call
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
xor
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
mov
test
je
push
lea
mov
call
lea
mov
call
mov
lea
push
mov
mov
call
mov
test
jne
push
push
call
add
test
push
call
mov
jmp
arpl
test
add
add
popa
clc
shr
push
in
xlat
ljmp
add
cmc
add
add
add
add
add
testb
int3
mov
hlt
push
mov
add
push
push
push
call
add
lret
add
add
xchg
add
out
imul
nop
xchg
fucomip
roll
call
add
mov
add
add
add
pusha
andl
add
push
out
jne
add
roll
add
add
add
add
sub
pop
popl
push
push
lea
push
push
push
call
mov
add
imul
add
add
jb
movsl
push
shll
add
ret
xchg
jle
add
imul
in
in
pop
push
push
push
push
push
lea
push
call
lret
movsb
push
sti
addl
out
xor
mov
add
je
xchg
mov
xchg
add
lcall
push
lea
push
push
lea
push
call
fmul
add
add
add
add
lahf
jnp
pop
bound
mov
fadds
std
add
mov
add
mov
add
pop
jecxz
rolb
fs
lock
push
add
add
add
add
ja
add
fadds
add
add
jbe
ljmp
add
push
push
push
lea
push
push
call
add
add
add
mov
les
mov
jae
add
arpl
mov
xchg
popf
call
out
xchg
add
loopne
add
pusha
mov
push
jne
pop
int
mov
stc
popa
rcrb
cwtl
add
pop
jbe
pop
add
addl
add
xchg
mov
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
imul
xchg
add
jb
call
add
loopne
mov
add
fldcw
cmpsb
xchg
aad
mov
pop
popa
loopne
gs
jb
pop
jl
add
mov
mov
sub
pop
call
push
push
lea
push
push
call
push
add
add
mov
fisubrl
addb
add
add
sarb
add
add
lahf
add
lcall
test
push
call
add
fadds
out
hlt
ficoml
addb
push
add
mov
fiadds
add
add
add
sbbb
lret
add
add
add
add
stos
stos
add
fiaddl
fadds
add
rcrb
cwtl
xorb
add
scas
jns
add
lea
jmp
push
push
call
push
enter
add
add
add
add
fidivrs
les
add
lds
popf
fwait
arpl
add
add
testb
rcll
jmp
add
hlt
std
cmpsl
add
pop
ret
mov
push
push
push
lea
push
lea
push
push
call
imul
loopne
add
addr16
loopne
add
add
lea
mov
add
lds
fdivrp
add
push
mov
repnz
lock
mov
imul
add
jle
in
call
mov
add
push
push
push
call
jp
add
test
add
push
iret
fld
idivb
add
jae
add
add
add
fidivl
add
mov
stos
add
add
lcall
ret
add
add
push
lea
push
push
push
call
mov
jnp
add
stos
xchg
push
in
shl
add
arpl
add
je
add
add
add
pop
int
xlat
enter
movsl
add
add
loope
mov
xchg
scas
add
push
popa
cli
data16
lock
add
lock
lcall
ret
lds
add
mov
shll
pop
push
call
subl
add
add
in
mov
add
jo
add
je
enter
add
add
mov
sub
pop
mov
xor
push
push
sub
dec
shr
xor
push
sub
add
xor
sub
sub
add
ror
shr
pop
shr
rol
xor
shr
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
cld
add
jno
rcll
nop
add
int3
push
add
pop
add
add
add
jno
add
loop
arpl
mov
pop
xchg
add
rcrl
pop
jns
lcall
fdivr
lcall
jne
push
lea
push
lea
push
push
push
push
call
mov
mov
add
imul
add
stos
addl
addl
add
cli
add
imull
mov
push
add
add
mov
mov
outsl
scas
add
add
add
gs
mov
push
push
call
add
add
xchg
into
add
lahf
mov
add
insb
pop
jp
add
test
add
jns
cld
add
sub
pop
movl
push
push
lea
push
push
call
add
add
add
add
pop
add
add
stos
je
fstps
jmp
pop
cmpsl
add
push
popf
add
sti
mov
add
add
add
add
add
mov
jp
pop
jo
lods
ret
mov
jbe
pop
addb
call
inc
push
mov
bound
add
jbe
sti
mov
add
imul
add
sbb
add
add
lea
mov
into
lods
cld
add
mov
add
in
push
mov
hlt
add
movb
add
int
mov
stc
rolb
shlb
in
lock
push
push
lea
push
push
push
push
call
icebp
add
fsubrs
add
mov
add
mov
add
add
add
add
mov
arpl
sub
pop
pushl
push
lea
push
push
lea
push
call
add
push
jno
fcoms
push
add
mov
call
pop
add
add
js
pushf
add
int3
lock
pop
add
add
cmc
jmp
cld
fldl2e
jmp
bound
add
add
jl
add
jne
push
lea
push
push
push
push
lea
push
call
add
add
add
add
addb
push
add
add
mov
mov
add
add
mov
xchg
add
leave
nop
sub
pop
call
push
push
push
lea
push
push
push
push
lea
push
call
enter
pushf
add
nop
popa
mov
pushf
push
sahf
mov
fnstenv
test
popa
add
mov
push
stc
jge
outsl
jle
faddl
lcall
jne
pushl
push
push
push
push
push
push
push
push
push
push
call
xchg
fcmovb
in
add
add
add
test
xchg
pop
mov
call
add
fdivr
flds
mov
xlat
add
lock
jp
mov
add
fs
lds
add
arpl
inc
add
push
push
dec
shr
rol
push
push
pop
add
dec
sub
add
add
lea
pop
lea
xor
pop
push
push
call
add
xlat
into
cld
cwtl
add
data16
mov
mov
incb
jecxz
add
add
xlat
add
retw
in
mov
test
add
xchg
add
add
add
cli
jmp
add
movsb
lods
mov
popa
test
faddl
jmp
sub
pop
pushl
push
lea
push
push
push
call
les
add
sahf
arpl
aad
pop
out
add
add
push
mov
add
arpl
call
add
jmp
rolb
mov
add
add
roll
je
xchg
mov
add
add
in
lock
lcall
sbb
add
push
push
lea
push
push
push
push
push
push
push
push
call
lods
add
testb
add
add
popf
out
in
add
push
addb
push
test
add
fstpt
add
cmpsl
pop
mov
add
test
add
add
repnz
jge
clc
mov
add
lcall
inc
push
push
push
and
add
dec
sub
xor
sub
pop
not
xor
xor
pop
push
push
lea
push
lea
push
push
push
lea
push
push
call
mov
add
add
add
icebp
add
add
out
out
std
jecxz
pusha
in
add
vpshab
repnz
xchg
add
mov
add
loope
add
lret
jmp
in
loopne
lcall
push
lea
push
push
lea
push
call
add
jle
jo
addl
add
add
add
add
mov
xlat
aam
popf
mov
add
add
add
pop
outsl
add
out
add
jp
stos
popf
pop
mov
jno
xchg
addl
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
stos
add
pusha
add
xchg
enter
mov
in
add
aam
idiv
mov
mov
mov
add
push
jae
add
iret
add
mov
std
add
add
pop
test
add
popa
mov
add
call
push
lea
push
lea
push
push
push
push
push
call
add
rcr
add
jae
push
add
add
outsl
add
in
add
add
fidivs
in
lcall
clc
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
stos
xlat
push
add
enter
add
add
add
out
xlat
add
push
mov
add
jl
mov
aad
mov
add
loop
enter
out
add
sarl
add
lcall
push
push
push
push
push
push
lea
push
push
call
mov
jmp
outsl
xchg
movsl
stc
xchg
movsb
add
add
std
mov
sub
add
fdivrs
jecxz
cld
add
mov
add
pop
int3
test
cwtl
popa
jle
xchg
into
sub
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
stos
gs
movl
pop
int
mov
arpl
jmp
jl
add
test
xlat
add
add
mov
fadds
add
add
add
movsb
test
loopne
mov
add
add
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
out
jl
clc
add
jbe
mov
add
aad
stos
add
push
cld
pop
pop
push
pop
imul
push
add
add
popf
stc
add
add
mov
jmp
push
add
xchg
int3
add
sbb
les
addr16
add
add
add
out
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
call
roll
add
out
mov
out
add
pop
fidivrs
add
lods
popf
add
jecxz
fiaddl
add
lret
fildl
add
mov
add
adcl
mov
std
add
add
add
xchg
xchg
bound
stos
int3
xchg
add
mov
addr16
add
pusha
add
fbld
popa
sub
pop
mov
push
push
push
push
call
pop
push
addr16
add
mov
add
xchg
mov
repnz
add
gs
mov
add
cmc
test
rolb
add
rolb
add
cmpsl
add
add
mov
arpl
in
filds
xchg
popf
mov
push
push
add
lods
add
loope
add
add
pop
xor
push
lea
push
push
call
rol
pop
jno
add
add
add
cltd
add
add
aad
orl
hlt
add
jmp
add
insb
rorl
je
fbld
add
loope
sti
in
add
lcall
les
add
push
push
lea
push
call
push
cmpsl
pusha
add
xchg
xchg
mov
call
add
add
jo
pop
lret
fwait
add
add
cmc
add
add
jle
cwtl
add
add
add
add
xlat
lret
testl
push
out
add
add
icebp
mov
pop
add
movsl
js
add
add
in
hlt
lcall
jne
push
push
push
call
add
enter
mov
test
insb
lahf
rorb
add
loopne
in
pop
mov
scas
pop
mov
add
data16
mov
add
pop
shrb
add
lcall
mov
push
push
push
push
push
push
push
call
in
push
mov
roll
stc
add
add
jmp
fists
add
add
in
mov
sub
pop
xor
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
cmc
mov
pop
xchg
idiv
add
add
orb
add
add
add
add
fldl
int3
add
xlat
add
cmpsb
icebp
add
scas
add
add
pop
add
call
add
add
add
test
pop
add
rclb
add
add
push
push
lea
push
call
jp
xchg
add
arpl
add
jl
mov
xlat
add
pop
add
push
add
add
lea
jb
pop
xchg
add
xchg
add
push
mov
add
lock
push
push
lea
push
push
push
push
call
call
cli
add
fwait
mov
mov
add
out
add
add
add
hlt
fiaddl
add
add
mov
xchg
add
jae
pop
lods
add
jno
add
stc
add
pop
lahf
xchg
add
add
arpl
add
add
bound
sub
pop
pop
mov
xor
push
push
push
push
push
push
push
call
fstpl
mov
mov
xchg
mov
push
jp
scas
leave
mov
bound
in
in
add
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
pusha
mov
add
add
add
mov
lods
add
add
lret
add
fldenv
call
pop
test
add
add
jp
jb
add
outsl
divb
add
add
add
add
add
jbe
add
repnz
xchg
sub
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
call
shlb
add
add
cwtl
add
add
popf
mov
add
add
add
add
filds
add
pusha
add
lahf
loope
push
push
arpl
sbbb
add
add
add
add
imul
in
fcompl
add
push
lea
push
call
add
add
aam
pop
add
fldl
add
mov
scas
xchg
icebp
lret
mov
rclb
xchg
add
add
lcall
les
add
push
push
push
push
push
push
call
out
add
in
add
int3
pop
mov
add
mov
stc
add
add
in
addl
add
pop
add
jmp
add
int
mov
hlt
add
pop
add
mov
pop
cwtl
push
out
flds
ja
add
in
test
aad
mov
pop
sub
pop
sub
pop
push
push
push
push
lea
push
call
lods
popl
jl
xchg
lcall
add
flds
fadds
stos
mov
loopne
shrb
loop
mov
roll
add
fmul
add
push
add
add
out
loope
bound
mov
lret
jp
into
add
mov
add
in
pop
rep
push
lea
push
lea
push
push
push
push
push
push
call
jl
add
jbe
mov
mov
mov
pop
add
jne
add
shrb
mov
add
add
jb
jl
cmpsb
add
add
sub
pop
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
mov
add
cmc
jo
mov
jnp
add
mov
ret
test
jecxz
lds
insb
out
mov
add
mov
mov
add
adcl
add
fcompl
pop
hlt
add
push
lea
push
lea
push
push
push
lea
push
call
add
into
add
cmpl
add
xchg
loopne
jmp
call
add
pop
xchg
subb
scas
lahf
popf
add
sub
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
pushf
divl
fisttpll
jb
add
xchg
add
push
jne
add
pop
adcb
mov
shrb
mov
in
je
add
add
push
leave
aad
pusha
filds
mul
addl
mov
pop
sub
pop
add
push
push
push
lea
push
call
cltd
add
cmpsl
pop
mov
int3
xchg
std
ror
lock
pop
jae
mov
add
add
add
mov
add
clc
mov
out
add
jmp
pop
movsb
push
mov
cld
add
sub
pop
mov
xor
push
push
push
push
push
call
add
fstps
lahf
push
imul
mov
add
pop
add
add
push
mov
lods
addb
pop
mov
push
push
push
call
loopne
xchg
push
jmp
add
add
test
in
fs
add
js
add
mov
stos
add
cmpsb
add
add
stc
sahf
add
add
add
xlat
sub
pop
xor
push
push
push
push
call
jecxz
mov
jnp
mov
add
clc
cli
lods
pop
push
pop
add
cmc
movsl
ljmp
jns
jnp
pop
test
add
xchg
add
xor
enter
add
xchg
xchg
jecxz
in
add
lock
add
push
push
push
push
push
push
call
fucomp
lds
lods
cmc
nop
add
int
add
add
les
mov
jle
mov
add
add
add
addr16
add
add
add
add
add
notb
push
addb
add
mov
in
call
mov
push
push
push
push
lea
push
push
push
push
push
push
call
add
testb
add
loope
mov
add
idivl
push
push
add
add
add
xchg
std
pop
add
add
add
mov
add
test
add
addr16
pop
xor
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
imul
sahf
jno
add
pop
add
xchg
add
add
add
cmpsl
lea
mov
cmc
add
push
add
jo
test
lret
ljmp
add
add
lods
addl
cmpsb
cmpsb
pop
push
loopne
scas
add
add
out
stc
add
add
add
les
add
push
lea
push
lea
push
lea
push
push
push
call
add
cld
jp
gs
fldcw
shl
popaw
add
push
add
add
push
lcall
lcall
ret
dec
inc
fnstcw
push
lea
push
push
push
push
push
push
push
call
add
test
jmp
add
add
add
push
mov
mov
xlat
roll
mov
add
add
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
add
addl
testb
leave
add
add
insb
pop
add
add
mov
pushf
xchg
xchg
add
add
negl
mov
lea
xorl
fdivr
lcall
fsubrs
pop
mov
insl
dec
add
push
push
pop
add
dec
sub
xor
dec
pop
sub
sub
pop
push
push
push
push
push
lea
push
call
mov
lods
sahf
cli
stc
add
xlat
pushf
popf
je
pusha
push
lods
add
pushf
sbbb
enter
call
pushl
call
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
addr16
mov
mov
imul
fiadds
jno
add
add
cld
pop
jae
roll
push
mov
add
add
add
pop
add
add
jecxz
add
mov
neg
mov
xchg
add
pusha
in
in
fdivr
lcall
add
add
push
shl
push
xor
add
sub
lea
sub
sub
pop
xor
shr
ror
pop
push
push
call
cltd
push
sti
bound
push
add
add
pushf
add
add
arpl
mov
loopne
add
push
lods
add
mov
fidivs
imul
pop
push
hlt
lods
std
add
nop
pop
fimull
add
push
add
add
add
push
push
lea
push
lea
push
push
push
call
add
mov
fildl
add
mov
mov
add
pop
pushf
sahf
pop
jno
add
add
out
lea
std
add
pushf
add
xchg
add
hlt
mov
add
out
mov
add
add
mov
sub
pop
push
push
lea
push
push
lea
push
push
call
pop
int3
push
add
fiaddl
mov
popf
add
int
mov
int
subl
pop
and
andl
add
add
rcll
add
int
lods
sti
add
mov
add
pop
add
lahf
in
leave
popl
cld
mov
mov
in
in
pop
call
push
push
push
lea
push
call
mov
test
pusha
add
add
jne
jl
push
in
sbbl
mov
cmpsb
xchg
add
xchg
jbe
test
add
add
fwait
pop
roll
mov
cmpsb
add
push
cld
sahf
add
xlat
jl
mov
cwtl
frstpm(287
xchg
clc
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
nop
lret
mov
addl
add
ljmp
add
pop
test
add
rcl
pop
jnp
lock
jge
add
fdivr
lcall
push
push
push
push
push
push
lea
push
push
call
popa
add
js
mov
cmpsb
mov
add
add
mov
add
in
add
cli
test
pop
sub
pop
mov
push
push
push
push
call
jae
loopne
jns
add
mov
mov
lods
mov
mov
mov
add
addb
add
insb
jp
jle
out
add
cltd
add
jl
std
add
lcall
pop
in
push
inc
sub
pop
add
add
push
push
push
lea
push
push
push
push
push
call
add
add
add
lea
pop
mov
add
imul
fstps
out
push
stos
mov
popa
add
stos
add
sarl
add
scas
mov
add
add
jne
iret
sub
pop
mov
xor
push
push
call
xchg
movsl
add
add
add
lds
cmpsl
fsubrp
add
add
rolb
push
leave
add
mov
iret
mov
out
lret
add
je
xchg
mov
outsl
cwtl
add
add
repnz
rolb
add
pop
mov
jl
rorl
add
add
add
lcall
jne
push
push
dec
pop
mov
push
push
lea
push
call
cmc
xchg
add
add
ret
mov
mov
add
add
ja
in
imul
mov
xchg
lock
add
xlat
xchg
add
add
xchg
pusha
mov
add
add
and
add
xchg
lcall
add
push
push
push
lea
push
lea
push
push
push
lea
push
call
clc
xlat
add
add
add
mov
repnz
add
add
cltd
add
add
add
mov
loop
icebp
shll
add
add
int3
mov
filds
xchg
add
rolb
pop
add
push
shr
add
xor
pop
add
push
lea
push
push
call
xchg
les
xchg
movsl
mov
add
leave
test
mov
popf
add
xchg
add
bound
add
add
mov
hlt
pop
pop
push
add
inc
pop
mov
xor
push
sub
inc
sub
pop
rep
push
shl
xor
not
not
pop
mov
push
push
push
push
push
push
push
call
push
add
pop
mov
pop
movsl
movl
stc
add
lods
xchg
mov
lahf
add
sti
out
pop
popa
add
sahf
mov
add
add
andl
into
scas
leave
mov
add
mov
roll
add
je
sub
pop
xor
push
push
lea
push
push
push
push
lea
push
push
call
roll
add
add
js
add
pusha
insb
add
jecxz
add
outsl
rolb
add
movl
rolb
aam
add
xchg
pushf
jae
ja
xchg
aam
mov
add
push
in
scas
pop
xchg
add
out
xchg
stc
cld
add
sub
pop
add
push
push
push
push
push
push
lea
push
call
add
lret
lods
loopne
cwtl
in
loope
fildl
pusha
mov
mov
aad
push
lea
mov
add
add
arpl
mov
sub
pop
or
je
push
push
lea
push
push
lea
push
call
push
mov
add
les
fildl
fcomps
imul
data16
push
add
add
add
sub
pop
mov
push
push
push
push
call
add
add
add
add
jno
add
add
pop
jnp
nop
jmp
mov
add
cmpsl
imul
xchg
stos
mov
pop
jecxz
ror
nop
loope
add
add
in
arpl
add
add
test
cmc
add
lcall
sub
pop
xor
push
push
push
push
push
lea
push
push
call
mov
add
push
call
movsl
add
outsl
fldl2e
lret
add
add
add
jo
add
add
jne
lds
mov
xlat
out
mov
jmp
in
cwtl
imul
sbb
loop
in
in
lcall
les
add
sub
ror
pop
mov
push
push
push
call
add
add
jnp
xchg
xchg
into
je
lods
add
add
add
pop
sbb
loopne
mov
lret
add
jmp
popf
addb
add
add
add
add
clc
lcall
adc
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
add
test
add
jge
add
xlat
xchg
jp
jns
mov
mov
in
fdivr
lcall
les
add
push
ror
sub
pop
add
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
lret
add
int
mov
add
sar
arpl
add
xchg
les
add
add
int3
mov
ljmp
fcompl
jne
push
lea
push
call
adc
add
add
pop
lods
jno
xorl
pusha
mov
add
add
pop
icebp
jae
add
add
fisubrl
add
lods
lcall
pop
movsb
add
enter
in
clc
lcall
push
ror
pop
mov
push
push
push
call
test
add
add
push
fidivl
pop
add
mov
add
fcomps
add
outsl
add
push
mov
mov
in
clc
pop
xor
push
lea
push
push
push
call
pop
jae
mov
push
add
test
mov
add
xchg
int3
in
leave
mov
mov
add
cmpsb
add
loopne
mov
scas
lds
lock
lcall
les
add
push
dec
lea
add
pop
add
pop
push
add
pop
rep
mov
push
push
lea
push
lea
push
push
push
push
call
out
add
ret
add
add
fadd
add
add
scas
add
imul
add
pusha
add
push
jo
je
mov
xchg
mov
mov
add
lock
mov
add
push
xchg
cli
mov
add
pop
add
in
add
sub
pop
xor
push
push
push
push
push
push
push
push
call
cmpsl
lods
out
add
cmc
lret
imul
mov
add
add
in
push
add
add
mov
add
pop
add
push
push
push
push
push
lea
push
push
call
add
mov
add
pushf
add
jge
mov
add
fidivs
lea
lds
scas
ror
pop
add
add
jns
pop
add
add
add
mov
in
pusha
mov
call
addb
add
fcoms
addr16
add
add
lret
outsl
add
mov
lcall
leave
je
push
push
push
push
lea
push
call
push
fcomip
addl
add
fiaddl
iret
add
jbe
add
add
add
add
lock
add
jno
popa
rolb
add
pop
mov
andb
pusha
add
roll
add
add
pop
bound
std
add
add
add
add
mov
xchg
sub
pop
mov
add
push
shr
pop
add
push
xor
rol
xor
pop
rep
pop
push
push
add
push
or
inc
add
shr
lea
ror
sub
not
shl
add
inc
pop
ror
sub
pop
push
push
push
push
call
add
add
hlt
cltd
xor
test
add
mov
mov
add
leave
jne
lahf
nop
std
leave
add
add
lea
hlt
fcomps
mov
lcall
mov
push
shl
pop
mov
push
sub
sub
pop
mov
jmp
push
push
lea
push
lea
push
lea
push
lea
push
push
call
insb
mov
lcall
mov
mov
jne
add
add
jmp
jge
add
je
cwtl
jb
arpl
jl
je
add
popf
push
add
push
add
iret
jle
loopne
out
add
fcomps
mov
xchg
in
add
lcall
push
lea
shl
pop
mov
push
add
add
rol
pop
add
push
push
push
push
push
call
cld
cmc
leave
roll
sub
add
orl
fnstenv
mov
add
rcll
add
flds
jmp
pop
push
push
push
rol
rol
xor
pop
push
push
lea
push
lea
push
push
lea
push
call
mov
add
add
movl
mov
mov
fldenv
mov
add
stos
mov
mov
add
add
in
in
pop
push
push
add
inc
inc
pop
mov
push
push
push
push
lea
push
lea
push
push
call
add
mov
fldl
movsb
pop
push
add
rclb
add
add
jle
add
add
mov
add
nop
lret
jle
add
addb
jecxz
pop
ret
add
xchg
add
add
mov
jae
in
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
push
call
mov
push
mov
mov
imul
add
mov
fs
clc
mov
fwait
js
pop
ljmp
mov
add
leave
add
fcomp
add
je
les
jno
shlb
mov
add
add
loopne
pop
push
push
push
call
add
xchg
sahf
test
sahf
mov
insb
jge
push
add
fisttpll
mov
ja
test
add
add
in
add
add
pop
shl
xchg
hlt
add
mov
mov
add
movb
cmc
add
add
add
add
push
out
test
in
mov
in
sub
pop
pop
pop
push
pop
leave
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
jae
data16
add
stc
add
stos
add
mov
test
shll
arpl
add
in
mov
add
add
mov
push
imul
fdivp
add
add
xchg
sub
pop
ret
push
push
push
lea
push
call
filds
add
lods
add
add
add
add
mov
add
outsl
push
jl
pop
std
add
shlb
test
xlat
add
push
lea
pop
jae
mov
push
fldenv
mov
hlt
lcall
in
push
lea
push
call
fxch
jnp
mov
add
mov
lret
add
loope
pop
add
addb
add
outsl
add
test
loopne
add
out
add
add
test
shll
test
add
mov
jmp
mov
add
add
add
enter
sub
pop
add
push
push
inc
shr
sub
pop
push
push
push
push
call
push
jmp
add
add
filds
movsb
lcall
lods
lds
add
add
shlb
push
mov
xchg
fiaddl
xchg
add
pop
push
movl
push
sub
pop
addl
push
ror
shl
pop
test
je
push
xor
sub
pop
mov
push
ror
shr
sub
pop
pop
pop
push
rol
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
jl
xchg
out
mov
icebp
lcall
roll
mov
fidivrl
add
add
add
add
in
mov
add
int3
js
mov
pop
leave
ret
push
shr
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
add
add
ret
jae
jmp
add
int
popl
cltd
cld
add
in
lcall
in
push
pop
add
push
sub
inc
ror
pop
push
push
shr
sub
pop
push
push
pop
push
push
push
push
push
push
call
add
stos
xorl
outsl
add
add
iret
jle
outsl
add
add
add
add
pop
lds
add
push
lret
repnz
adc
add
mov
add
add
lret
add
lods
roll
inc
cld
add
add
push
push
push
lea
push
push
push
push
call
cltd
mov
repnz
jb
add
loope
aam
in
std
jle
movsl
add
mov
mov
add
mov
je
add
insb
clc
mov
sub
pop
addl
push
add
shl
pop
push
push
push
push
push
lea
push
push
call
add
iret
add
add
add
cmpsb
add
add
pop
mov
andl
lahf
lret
add
mov
mov
clc
out
rcl
add
outsw
cwtl
rolw
movsb
add
push
lret
sti
push
lcall
pushf
cld
decl
aam
sbb
push
push
push
call
add
add
cmpsl
mov
xchg
add
int3
mov
add
lret
insb
add
lods
mov
jl
nop
out
in
add
cmpsb
jne
out
in
mov
sub
pop
pushl
push
push
push
lea
push
push
call
roll
mov
add
test
add
push
call
out
add
lcall
mov
ljmp
lock
lcall
add
push
stc
call
sub
ror
pop
cmpl
jne
push
sub
pop
pop
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
add
add
cmpsb
pusha
mov
popf
stos
lods
xchg
xchg
fidivl
add
test
jne
mov
add
add
scas
movl
add
add
mov
lret
add
lahf
add
lcall
push
xor
pop
pop
push
push
push
push
push
push
push
push
push
call
cmpsb
cmc
icebp
cmc
aam
add
callw
add
into
add
mov
mov
mov
in
enter
mov
mov
add
movl
xchg
loop
add
call
mov
add
rcll
add
test
pop
leave
push
add
pop
ret
push
push
shl
sub
pop
mov
push
dec
sub
pop
add
push
lea
push
push
push
call
lock
pop
push
xchg
add
mov
shrl
add
add
add
js
add
add
mov
gs
mov
into
je
sub
pop
push
push
push
push
push
push
push
lea
push
call
add
ljmp
ffreep
loop
add
mov
add
jno
add
add
add
xorb
mov
add
gs
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
imul
jne
icebp
int
mov
add
imul
add
mov
add
stos
pop
insb
clc
fisubl
push
push
movl
push
sub
add
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
outsl
pop
jecxz
pop
lods
mov
mov
add
push
add
push
add
lahf
out
xchg
test
jbe
add
insb
add
lods
jo
add
les
pop
jp
sub
pop
call
push
sub
inc
pop
push
push
lea
push
call
add
add
add
cld
xchg
mov
addb
lea
insb
mov
movsb
add
shr
mov
fldl
stos
add
add
add
mov
sahf
add
add
lods
js
fstp
mov
popa
cmc
rolb
gs
add
scas
add
sub
pop
call
push
add
pop
subl
push
ror
pop
cmpl
jne
push
not
sub
ror
pop
pop
push
add
sub
xor
pop
pop
push
lea
ror
ror
pop
pop
push
ror
shr
lea
add
pop
pop
leave
push
sub
pop
ret
push
pop
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
aad
into
mov
loope
add
mov
add
mov
push
cmpsl
jno
shl
add
addb
outsl
push
push
jnp
add
sahf
add
push
add
lcall
in
ja
in
add
mov
add
push
add
mov
jle
sub
pop
mov
push
not
dec
pop
add
push
push
push
push
push
push
push
lea
push
push
push
call
add
mov
mov
push
mov
jle
add
lock
add
add
cmpsl
add
add
add
mov
add
mov
add
mov
add
cwtl
test
in
fcompl
push
push
shl
rol
pop
push
push
push
ror
add
sub
push
and
add
dec
sub
xor
add
pop
sub
pop
push
ror
shr
sub
dec
pop
pushl
push
push
call
mov
add
add
stc
addb
outsl
add
xchg
mov
mov
fcompl
add
add
add
rcr
add
lret
jle
in
fwait
add
pop
add
aad
in
clc
pop
call
push
push
lea
push
lea
push
push
push
call
int
lock
les
add
movsb
in
mov
add
orl
add
aad
mov
add
mov
imul
test
out
addl
insb
mov
mov
add
pop
push
mov
add
pop
add
js
stc
sub
pop
call
push
push
add
push
or
not
add
inc
sub
add
xor
pop
sub
shr
pop
push
add
pop
pushl
push
sub
pop
call
call
push
push
lea
sub
push
push
pop
add
shl
rol
sub
dec
ror
sub
pop
shl
inc
inc
ror
pop
push
lea
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
call
imul
fnsave
jae
add
add
add
andl
add
jecxz
clc
lock
test
add
add
add
out
jle
cmc
movl
lcall
mov
shrb
lock
rol
shl
push
and
add
rol
inc
sub
sub
add
xor
pop
add
pop
push
sub
ror
rol
pop
pushl
push
push
push
push
lea
push
lea
push
push
push
push
call
test
stos
add
cli
add
sahf
add
cltd
lods
bound
mov
jle
push
movsb
add
cmpsb
add
fsub
jle
add
iret
enter
nop
roll
mov
add
mov
lods
pusha
in
add
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
lea
push
call
xchg
add
test
mov
cmc
add
jae
in
loop
add
xchg
imul
add
add
add
mov
add
testb
lods
mov
add
out
add
std
jge
in
fcomps
shrb
fisubs
push
add
shl
push
push
pop
add
add
rol
add
shl
sub
sub
xor
ror
pop
add
pop
push
sub
add
ror
pop
pushl
push
shr
pop
call
call
push
push
sub
sub
push
or
inc
add
shl
inc
sub
sub
sub
shr
rol
pop
sub
sub
pop
push
push
push
push
push
push
push
push
call
add
add
add
clc
add
fldt
add
fnsave
mov
add
jnp
lds
add
add
add
add
add
popf
gs
in
jl
mov
adcl
out
sahf
mov
pusha
add
add
mov
fnstcw
loopne
pushl
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
mov
add
std
add
cwtl
add
add
mov
mov
push
mov
mov
push
xchg
lock
rcl
xlat
mov
add
nop
add
loope
fcomi
jl
jnp
add
add
in
movsb
insb
add
add
in
pop
stc
push
mov
add
lcall
cli
cmp
add
mov
mov
dec
lea
push
call
push
arpl
add
outsl
jne
arpl
add
fiadds
add
les
mov
mov
stc
neg
cld
int
add
jno
mov
add
fucom
stc
test
fisttpll
add
rorb
loope
in
call
call
push
push
sub
push
xor
add
xor
dec
not
sub
add
shr
dec
xor
pop
sub
pop
push
push
push
call
aad
pop
incb
pop
add
addb
mov
lret
movsb
test
out
mov
mov
scas
stos
add
add
pusha
add
pop
add
jne
mov
scas
mov
add
lcall
jne
push
push
push
lea
push
push
lea
push
push
push
push
call
cld
lods
fsubr
rcrb
jae
jecxz
ja
add
add
jbe
scas
mov
fistps
loopne
mov
jae
add
popf
add
clc
push
add
mov
in
fcompl
movsl
cmp
add
ror
not
pop
call
push
push
ror
push
sub
add
ror
inc
sub
rol
sub
add
not
pop
pop
push
sub
shr
add
dec
pop
pushl
push
lea
push
lea
push
call
add
add
xchg
fwait
mov
fnstsw
add
repnz
out
lret
push
add
add
incb
movsl
jae
cwtl
xchg
add
lret
lds
addb
test
push
add
ljmp
pop
xorb
imul
add
sub
pop
call
call
push
push
lea
push
push
push
push
push
lea
push
call
jl
add
lock
cmc
jle
fwait
pushf
add
add
out
adcb
lds
add
shrb
icebp
mov
scas
fdivrs
pop
mov
hlt
push
add
jp
add
mov
or
add
jmp
add
lcall
inc
or
ror
ror
pop
lea
push
not
lea
pop
sub
push
rol
xor
pop
mov
shr
push
lea
push
push
push
push
push
push
call
gs
addb
mov
add
cmc
call
cli
mov
imul
add
popa
mov
add
mov
jecxz
leave
add
add
add
jp
pop
add
addl
add
ljmp
in
lcall
inc
or
inc
pop
mov
mov
push
lea
push
call
mov
add
lret
lods
rolb
add
add
in
xorb
in
jb
sti
test
std
stos
pop
pop
add
jno
pop
lea
pushf
jp
add
mov
add
fiadds
ja
add
mov
mov
shll
pusha
add
add
movsl
int3
add
sub
pop
add
push
dec
rol
add
pop
add
push
push
push
call
repnz
jecxz
add
aam
testb
ror
cmpsl
test
fildl
test
mov
jl
mov
add
add
fwait
mov
add
add
add
jle
pop
cmpsb
xchg
icebp
filds
add
add
hlt
pop
mov
push
push
lea
push
push
push
lea
push
call
hlt
mov
fwait
call
jmp
add
out
add
mov
cld
add
std
fsub
cmpsb
fwait
xchg
add
add
lcall
lcall
nop
nop
nop
nop
cmp
jne
push
lea
pop
cmp
jne
push
add
sub
pop
mov
push
push
call
fs
stos
scas
add
jb
add
push
add
int3
cltd
add
push
mov
add
pusha
mov
mov
addb
call
add
fiaddl
push
roll
pop
pop
add
lds
movl
push
shl
pop
jmp
push
pop
mov
mov
push
dec
shl
ror
pop
sub
jne
push
xor
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
add
mov
int3
add
add
icebp
divb
jle
clc
arpl
mov
add
orb
aad
cwtl
test
push
or
mov
add
add
scas
repnz
add
in
fdivr
lcall
add
add
jmp
push
shr
pop
mov
mov
push
lea
push
push
push
push
push
push
lea
push
push
push
call
fcoml
scas
out
add
add
add
add
cmpsb
fsubl
mov
cmpsl
pop
add
test
fsubrs
enter
cltd
rclb
in
fs
add
pop
jnp
outsl
lods
mov
push
add
cli
add
test
add
add
out
pop
mov
push
push
push
push
push
push
push
push
push
push
call
push
loope
xchg
add
mov
scas
filds
push
add
call
push
mov
add
add
mov
cld
xchg
imul
in
fdivr
lcall
add
add
add
cmpsb
or
add
jl
pop
push
push
lea
push
push
lea
push
push
push
push
call
add
in
add
push
add
add
pusha
rolb
sahf
std
add
cwtl
lret
add
loope
pop
add
add
push
call
lcall
notb
mov
mov
push
add
fs
pop
mov
push
push
push
push
push
push
push
call
fldl
xchg
add
add
xchg
bound
add
mov
mov
add
addb
mov
cli
enter
add
push
mov
js
mov
lock
add
int3
add
hlt
add
aam
mov
sahf
sub
pop
cmpw
jne
push
lea
push
push
lea
push
push
push
push
push
call
push
add
jecxz
add
xchg
stc
add
add
add
iret
jecxz
add
push
add
int
shlb
fists
mov
repnz
pushf
add
addb
mov
addb
mov
loop
mov
add
adcb
lcall
inc
adc
add
sub
add
add
pop
jmp
pushl
push
push
push
push
push
push
call
add
add
add
leave
add
pop
pop
mov
add
add
add
jno
add
mov
loop
in
call
push
push
push
lea
push
lea
push
call
lahf
add
pop
fadds
add
imul
push
jl
mov
arpl
add
fildl
push
add
stc
add
pop
jge
in
add
add
add
int
in
in
mov
push
push
push
push
call
popl
xchg
add
add
popf
rol
add
cltd
add
je
jne
push
sti
add
leave
pop
add
gs
fdivrl
push
mov
lods
cmc
add
add
add
add
mov
test
add
insb
mov
add
add
inc
sbb
push
or
add
push
inc
lea
sub
push
sub
add
xor
sub
shl
pop
pop
push
push
lea
push
lea
push
push
push
call
mov
out
testb
mov
mov
add
icebp
mov
jge
in
xchg
add
add
add
add
jb
mov
out
add
lcall
push
push
push
push
push
lea
push
push
push
push
call
xchg
add
add
mov
xchg
jae
add
xchg
xchg
rcr
add
xlat
sahf
call
add
out
addl
sub
pop
call
push
not
rol
pop
cmpl
je
push
push
ror
push
sub
add
sub
add
sub
shr
inc
add
add
pop
rol
pop
push
shr
dec
ror
pop
push
call
push
dec
sub
inc
pop
cmpl
je
push
push
shr
add
ror
push
xor
add
sub
sub
sub
pop
xor
pop
push
add
sub
shl
pop
push
push
xor
lea
pop
call
push
push
push
push
push
push
lea
push
push
call
ret
add
add
loope
je
add
add
outsl
xchg
nop
add
jne
mov
ja
jle
add
gs
aad
add
lcall
cmp
add
int3
je
push
push
not
sub
rol
push
sub
add
lea
not
sub
shl
shl
pop
shl
dec
pop
push
push
push
push
push
lea
push
call
iret
hlt
fisttpl
stos
add
add
into
cmpsb
clc
arpl
add
add
lock
jmp
add
movsl
test
mov
add
add
add
sub
pop
push
push
shr
add
pop
call
push
xor
dec
sub
pop
cmpl
je
push
push
inc
shr
add
push
xor
add
sub
sub
shl
shr
not
pop
not
not
pop
push
dec
pop
push
call
push
not
sub
shr
shr
pop
cmpl
je
push
push
push
sub
add
ror
ror
shr
sub
pop
sub
shr
inc
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
add
add
in
mov
cmpsb
add
jbe
add
add
add
add
flds
lcall
call
push
lea
push
push
lea
push
call
mov
into
add
xchg
add
add
jp
pusha
add
add
mov
ja
mov
add
mov
add
movsl
add
hlt
stos
add
add
call
push
mov
add
loope
je
in
lock
lcall
cmp
or
int3
je
push
push
shr
lea
shl
push
or
not
add
inc
sub
dec
ror
sub
sub
ror
ror
pop
rol
add
pop
push
lea
push
lea
push
push
push
push
call
test
stos
loope
add
add
add
call
add
test
jno
add
mov
add
jmp
add
ret
in
call
or
and
lea
push
push
push
lea
push
push
call
add
iret
pushf
mov
push
add
add
test
int3
add
xlat
add
bnd
fildl
add
sub
pop
call
push
lea
push
call
add
add
add
add
lret
mov
add
add
push
mov
sub
pop
cmpl
je
push
push
xor
ror
push
sub
add
add
add
dec
sub
rol
xor
pop
ror
xor
sub
pop
push
push
push
lea
push
call
sar
mov
fildl
jge
fs
add
add
stos
imul
pop
add
add
stos
add
add
ja
add
stos
add
je
sub
pop
push
call
push
add
inc
dec
dec
pop
cmpl
je
push
push
xor
xor
push
or
not
add
lea
ror
ror
sub
add
sub
pop
add
pop
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
push
push
scas
mov
iret
add
ret
add
mov
int
test
loopne
lcall
push
shr
pop
call
push
push
push
push
push
push
push
push
lea
push
push
call
mov
xchg
lds
add
mov
cmc
les
add
add
int
add
scas
add
mov
test
add
lcall
cmp
rol
je
push
push
inc
sub
not
push
sub
add
not
dec
sub
shl
add
pop
shr
not
sub
pop
push
push
lea
push
lea
push
push
lea
push
call
pop
add
loopne
out
xchg
mov
repnz
mov
add
outsl
bound
stos
jne
jb
add
arpl
cltd
sti
add
cli
add
push
add
test
add
add
mov
scas
scas
add
add
add
mov
mov
push
push
push
push
push
call
add
roll
pop
add
add
fadds
pop
add
add
faddl
add
add
mov
add
add
repnz
cmc
xlat
loopne
add
addr16
fs
cli
add
add
rolb
pop
add
add
pushf
std
sub
pop
call
push
sub
add
sub
pop
cmpl
je
push
push
add
push
or
inc
add
add
sub
sub
add
sub
xor
add
inc
xor
pop
inc
shl
inc
dec
pop
push
add
pop
push
push
xor
add
pop
call
push
pop
cmpl
je
push
push
not
not
push
or
inc
add
shl
sub
pop
lea
pop
push
not
sub
pop
push
call
push
not
pop
cmpl
je
push
push
dec
xor
sub
push
xor
add
shr
sub
add
shr
shl
pop
shr
inc
pop
push
push
push
push
push
push
push
call
pop
jmp
sti
push
add
add
push
ja
les
add
lahf
add
add
add
cwtl
add
in
sahf
add
add
std
jne
jmp
mov
xorb
lcall
push
not
inc
pop
call
cmpl
jne
push
add
pop
mov
push
xor
pop
movl
jmp
push
push
push
push
push
push
push
lea
push
call
test
call
add
add
pop
into
add
jecxz
add
push
add
mov
clc
add
add
sti
push
aad
loopne
in
loopne
lcall
rclb
mov
pop
pop
push
ror
inc
ror
shr
pop
pop
push
lea
push
lea
push
push
call
movb
add
rolb
fs
mov
loopne
mov
add
shl
loopne
ja
fldt
in
lock
pop
push
push
push
push
push
push
push
call
gs
mov
sar
xchg
lods
cltd
pop
add
mov
push
stos
loopne
ljmpw
cmc
add
add
add
add
mov
add
add
add
lock
mov
movsb
fucomp
mov
add
in
in
lcall
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
jge
mov
add
pop
add
push
pop
add
add
repnz
add
add
add
out
pop
add
hlt
add
mov
mov
sub
pop
leave
push
xor
ror
add
pop
ret
push
push
push
push
push
push
push
call
mov
lahf
pop
add
ljmp
jl
pop
pop
mov
mov
stos
add
lods
add
add
add
add
add
pop
lahf
add
add
add
std
andl
add
add
jae
pop
ret
cltd
sub
pop
mov
push
lea
push
push
push
push
push
push
push
call
add
repnz
jge
out
lods
les
add
mov
incb
add
loopne
mov
add
add
add
push
out
push
mov
flds
in
jge
push
jmp
pop
popf
out
add
add
jge
fadd
lods
bound
add
add
add
sub
pop
add
push
lea
push
push
push
push
push
push
call
repnz
pop
test
mov
mov
data16
in
enter
loopne
add
fwait
push
pop
add
popfw
jle
fadd
sub
pop
cmpl
jne
push
push
shl
inc
push
and
add
sub
inc
sub
add
rol
pop
add
shr
pop
push
push
push
push
call
mov
add
sahf
lcall
pop
nop
add
movsl
lahf
mov
add
add
add
lret
push
push
jle
jbe
test
fistpll
add
add
aam
sti
in
aad
add
icebp
and
test
sub
add
add
add
fcmovnbe
add
sub
pop
pushl
push
lea
push
push
push
push
push
call
mov
sahf
pop
ja
mov
jns
add
add
lahf
jo
add
scas
add
cmc
stos
cltd
std
pop
aam
cmpsb
fcmove
xchg
lret
shrb
jge
add
add
loop
add
sub
pop
call
push
push
push
call
lods
testl
aam
mov
fdivrl
add
add
mov
push
aam
testb
loop
hlt
mov
push
add
add
xchg
add
test
add
pop
jmp
ljmp
add
data16
in
imul
int3
sub
pop
call
push
push
lea
push
lea
push
call
add
mov
je
xchg
int3
add
push
mov
in
add
jge
fldl
mov
mov
fcoms
notl
mov
mov
add
add
stos
add
mov
add
add
ljmp
incb
fs
insb
add
lcall
jb
add
push
sub
dec
pop
cmpl
jne
push
lea
push
call
add
mov
add
mov
leave
rcll
add
flds
xchg
test
jl
add
lcall
add
fidivl
mov
lret
add
ret
mov
add
bound
cmc
cwtl
lahf
scas
stos
add
add
push
add
sub
pop
mov
call
push
push
push
push
push
call
into
add
mov
add
add
add
xchg
mov
xchg
add
xchg
add
add
add
ljmp
push
add
bound
jmp
sub
pop
ret
push
push
push
push
lea
push
push
push
call
mov
adcl
std
add
add
jl
add
add
lods
shlb
add
stos
add
add
test
out
jb
jb
mov
add
cwtl
pop
lahf
add
add
js
movb
mov
in
jmp
push
inc
sub
add
pop
cmpl
jne
push
push
inc
push
sub
add
sub
inc
xor
shr
pop
not
pop
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
add
fcoml
xchg
je
stos
push
mov
mov
add
xchg
add
add
mov
out
lcall
lcall
add
add
imul
add
add
mov
mov
add
cmpsb
mov
jecxz
loope
stc
xlat
lods
jbe
sti
imul
jns
roll
movl
mov
sub
pop
pushl
call
push
ror
pop
push
push
rol
ror
pop
call
jmp
push
add
not
add
pop
cmpl
je
push
lea
push
push
push
push
call
cld
fdivp
popa
clc
in
shr
rorb
add
jl
add
add
add
int
scas
nop
mov
add
lods
add
mov
shl
jecxz
add
rcrl
push
add
add
mov
popf
sub
pop
cmpl
jne
push
ror
add
pop
mov
mov
push
push
push
push
push
push
push
push
call
fadds
in
shlb
icebp
pop
pop
lock
add
jp
add
add
xchg
pop
add
add
in
add
loopne
push
add
jno
add
clc
jne
push
mov
add
xchg
fs
bound
jp
add
add
lcall
push
sub
shl
xor
pop
call
push
push
add
not
ror
push
xor
add
shr
shr
sub
dec
xor
add
pop
inc
pop
push
add
rol
pop
pushl
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
scas
add
bound
mov
popf
fadds
lea
add
lcall
jno
shlb
add
mov
add
call
push
push
rol
xor
add
push
xor
add
rol
ror
sub
xor
add
dec
pop
rol
sub
pop
push
ror
xor
sub
rol
pop
pushl
push
add
not
pop
call
push
not
xor
lea
sub
pop
call
push
push
inc
ror
shl
push
xor
add
rol
shr
sub
lea
pop
rol
inc
pop
push
push
push
push
lea
push
call
add
jecxz
push
lahf
add
scas
add
add
add
movl
popl
mov
xchg
mov
test
lock
test
mov
rcl
aad
add
sti
xchg
movsb
mov
add
movl
lret
add
addb
add
popl
jne
push
dec
pop
call
call
push
push
lea
add
inc
push
xor
add
sub
sub
shr
pop
shl
ror
pop
push
lea
rol
pop
pushl
push
push
push
lea
push
call
add
push
add
les
outsl
cmpsb
add
js
in
add
mov
add
add
add
lods
add
je
add
mull
add
arpl
std
xchg
shl
add
pop
add
fs
into
add
fsubs
add
loope
add
int3
add
pop
add
mov
lock
call
push
push
push
push
push
push
push
push
call
add
popa
lock
jae
add
mov
add
lods
mov
fs
stos
mov
add
pop
mov
add
fcmove
jne
add
jne
xlat
mov
in
loopne
lcall
shrb
jnp
cwtl
push
rol
shr
push
sub
add
inc
sub
sub
pop
add
pop
push
pop
pushl
push
inc
sub
pop
call
push
add
pop
call
push
push
add
add
inc
push
push
pop
add
add
shr
sub
sub
add
pop
not
shl
rol
pop
push
sub
pop
pushl
push
push
push
push
push
call
xchg
mov
jbe
mov
jle
push
loope
lds
rolb
xchg
fisttpll
add
add
faddl
pushf
into
leave
repnz
cmpsl
add
imul
iret
jo
nop
mov
fsts
add
add
mov
mov
popa
add
lret
sub
pop
call
call
push
push
sub
push
or
inc
add
not
sub
pop
pop
push
dec
add
sub
pop
pushl
push
ror
pop
call
push
sub
pop
call
push
push
shl
lea
push
and
add
add
sub
dec
pop
add
ror
sub
pop
push
lea
push
lea
push
push
push
call
add
imul
movsl
lods
sahf
add
insb
leave
add
add
add
add
fs
add
mov
add
cwtl
test
push
xchg
mov
add
repnz
add
mov
add
movsw
arpl
idiv
roll
jmp
pushl
push
pop
call
push
rol
pop
call
push
push
add
push
sub
add
sub
sub
add
inc
pop
sub
pop
push
lea
push
push
push
push
push
push
lea
push
call
stc
add
pushf
jne
add
add
out
add
add
cmpsl
jge
jne
mov
mov
add
push
xchg
mov
add
stc
mov
push
xchg
movsl
add
lods
test
iret
in
add
fs
xchg
add
pop
in
fsubl
in
loopne
lcall
jne
call
push
push
push
call
ret
cltd
lds
add
mov
fsubs
mov
pop
int
insb
js
hlt
loope
jmp
call
add
add
add
add
add
in
pusha
add
pop
push
out
push
xchg
pop
lods
add
add
loopne
divb
sub
pop
call
push
push
ror
push
push
pop
add
add
add
sub
inc
inc
shr
pop
pop
push
sub
sub
inc
pop
pushl
call
push
push
lea
push
push
push
push
push
push
call
imul
add
fdivr
jns
in
stos
lods
shl
je
popf
add
jge
fdivs
add
add
sbb
std
cltd
jl
mov
mov
add
sti
test
mov
in
add
add
add
jbe
in
lcall
adc
xchg
add
pushf
and
call
push
lea
push
call
add
gs
xchg
add
cmpsl
lahf
test
pop
mov
popl
add
xlat
add
add
imull
push
cltd
fiaddl
mov
add
in
hlt
lcall
shrb
out
lods
push
dec
push
xor
add
not
not
sub
sub
lea
sub
pop
sub
rol
sub
pop
push
push
push
push
call
add
mov
xor
sarb
movsb
add
pop
add
add
test
mov
mov
add
jne
push
rol
pop
call
push
push
push
push
push
push
push
push
push
call
jp
cld
je
add
add
rcrb
in
add
mov
loop
add
add
add
add
out
add
fsubr
add
cmc
outsl
jnp
add
pop
in
nop
add
mov
mov
add
hlt
add
push
jnp
add
in
mov
pop
xchg
scas
lea
pop
add
flds
lcall
shrb
mov
leave
push
roll
add
aam
dec
and
sub
add
lea
not
pop
add
shl
not
pop
push
push
push
push
push
push
lea
push
push
push
call
add
lea
mov
jge
add
add
andb
shl
mov
je
add
add
sub
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
push
call
sub
bound
shl
mov
ja
js
mov
mov
add
jns
add
insb
je
xlat
mov
jne
add
push
addr16
push
mov
sarl
repnz
add
jnp
rcl
mov
add
mov
addl
add
sub
pop
call
call
push
push
dec
lea
push
sub
add
inc
not
lea
inc
sub
ror
dec
shr
pop
add
dec
dec
shl
pop
push
lea
push
lea
push
lea
push
call
jo
add
test
mov
add
movsb
pop
cwtl
mov
lea
scas
add
add
add
hlt
xchg
jp
test
add
push
add
imul
cld
add
fadds
lcall
jne
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
push
jmp
je
add
add
test
add
in
add
gs
lock
in
rolb
loop
add
add
fcmove
add
arpl
add
pop
add
pop
scas
sahf
jl
sub
pop
call
call
push
push
not
inc
lea
push
or
inc
add
shr
inc
rol
lea
sub
sub
shl
inc
xor
pop
shl
shl
ror
pop
push
push
push
push
push
call
test
add
mov
fwait
jecxz
add
mov
add
mov
mov
add
add
mov
lods
jbe
mov
stos
mov
add
scas
add
pusha
add
mov
xacquire
jne
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
add
add
add
add
popf
out
popl
add
push
arpl
cltd
push
add
add
lahf
ret
add
add
jl
in
in
lcall
into
pop
add
push
push
push
or
inc
add
shr
xor
xor
rol
sub
dec
add
pop
lea
sub
add
pop
push
push
ror
push
or
inc
add
sub
sub
rol
dec
pop
inc
pop
push
not
add
pop
call
push
sub
add
ror
pop
pop
push
pop
dec
jne
call
push
inc
not
inc
pop
mov
push
ror
pop
int
push
lea
shl
add
rol
pop
lea
push
push
rol
rol
push
and
add
rol
lea
xor
sub
dec
pop
shr
shr
pop
push
shr
rol
xor
pop
pushl
push
not
xor
sub
pop
call
push
push
push
push
push
push
call
add
lods
test
add
push
add
mov
add
ljmp
add
add
push
mov
add
movsb
aad
loop
sahf
fildl
nop
push
add
faddl
cmpsl
cmpsl
sbb
mov
add
mov
jnp
add
faddl
add
add
in
pop
call
push
push
dec
shl
push
xor
add
shl
inc
sub
dec
add
pop
not
add
pop
push
pop
pushl
push
lea
add
shl
pop
call
push
add
pop
call
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
jl
mov
rclb
fsubrl
pop
push
mov
add
push
sahf
mov
fildl
lret
mull
in
flds
add
lcall
inc
cld
push
not
pop
lea
push
push
add
shr
push
or
inc
add
dec
add
sub
dec
shr
add
add
pop
inc
lea
pop
push
shl
sub
not
pop
pushl
call
push
rol
ror
pop
lea
push
inc
rol
pop
push
push
add
add
pop
push
push
add
shr
dec
pop
push
push
dec
rol
rol
pop
pushl
push
push
shl
push
and
add
shl
sub
pop
add
xor
pop
push
pop
push
push
lea
push
push
push
push
call
rclb
add
push
cmpsl
pop
jp
stc
neg
mov
ljmp
loope
add
jecxz
call
add
jle
jns
jb
xchg
jb
call
js
jmp
into
mov
xchg
in
jecxz
data16
add
cli
mov
int3
add
nop
add
add
sub
pop
call
push
push
not
rol
dec
push
or
not
add
sub
ror
sub
sub
pop
inc
dec
pop
push
push
lea
push
call
stos
add
jne
js
add
add
xchg
lret
shrl
call
pop
add
rol
in
cmpsb
scas
add
push
out
jp
add
imul
ror
add
outsl
js
jle
jbe
fwait
sub
pop
pushl
push
inc
add
sub
pop
call
push
sub
ror
add
pop
push
call
push
push
add
add
push
push
pop
add
inc
sub
sub
ror
add
sub
pop
not
pop
push
pop
pushl
push
push
lea
push
call
neg
out
jae
add
pusha
leave
data16
mov
add
lds
add
add
add
jp
in
scas
add
mov
add
xchg
roll
add
lock
pop
add
add
test
add
popf
xlat
int
add
add
nop
add
xchg
xchg
jmp
in
hlt
pop
call
push
push
push
call
mov
pop
stos
add
add
add
push
add
loop
movsl
push
lret
repnz
add
rolb
in
int3
sub
pop
call
push
sub
pop
pushl
push
not
pop
mov
push
push
push
push
lea
push
push
push
call
int3
mov
push
xchg
mov
addb
add
add
add
add
lahf
mov
cwtl
add
mov
mov
in
add
addl
add
add
cmpsl
add
cld
add
jge
add
xchg
add
loope
icebp
sub
pop
jmp
push
push
add
add
push
xor
add
dec
dec
dec
sub
shr
pop
shl
sub
dec
pop
push
pop
pushl
push
rol
pop
call
push
push
push
push
push
push
push
push
call
jb
add
js
movsb
push
fildl
add
addl
arpl
int3
mov
popa
jbe
mov
addb
cli
fildl
add
je
scas
test
xchg
sub
pop
push
push
ror
add
add
pop
call
push
push
add
push
and
add
not
sub
ror
shr
pop
dec
sub
add
pop
push
lea
push
push
push
push
lea
push
push
call
add
in
mov
mov
add
add
test
add
int3
int3
nop
add
pop
filds
jno
shrl
lds
push
mov
push
popa
mov
add
add
add
add
add
lcall
jne
push
push
push
push
push
call
add
imul
add
add
loop
add
leave
add
fs
rcrl
push
push
jge
xchg
andb
in
rolb
mov
pop
add
sub
pop
call
push
shr
pop
push
push
lea
push
push
push
lea
push
call
lock
add
js
jae
lods
add
mov
in
ljmp
cmc
mov
lret
sahf
fcmovnbe
add
add
add
fdivr
cmpsl
add
add
add
div
add
add
add
out
pop
add
mov
pushf
add
push
mov
in
add
add
test
ljmp
lcall
rclb
sar
not
pop
leave
add
push
pop
pop
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
popf
mov
lods
nop
add
fiaddl
addr16
add
repnz
add
add
add
jnp
jne
add
mov
cli
add
cmpl
lock
add
add
ror
mov
faddl
add
jmp
lds
mov
xchg
xchg
aad
sub
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
mov
jae
add
clc
add
lahf
add
fiadds
sahf
add
add
ljmp
add
xchg
testb
xchg
fwait
add
jl
push
add
in
fdivr
lcall
push
not
add
pop
xor
push
push
push
push
push
push
push
call
fmuls
add
add
popa
mov
out
add
add
add
add
pop
sbbl
push
flds
jnp
out
cli
jae
test
jno
add
mov
mov
mov
add
lret
mov
sub
pop
inc
push
add
inc
pop
ret
push
ror
pop
leave
ret
push
lea
push
call
xchg
pop
add
add
call
add
mov
add
fisubs
stc
fs
jne
add
ret
mov
lcall
push
push
push
push
push
push
push
push
call
xchg
lcall
add
add
add
add
int
pop
addr16
mov
fucom
testl
jecxz
loopne
jge
mov
pop
add
add
mov
mov
add
add
pop
andb
imul
in
loopne
mov
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
test
rcll
add
mov
add
pop
icebp
add
mov
in
add
sti
add
popl
add
add
pop
cmpl
jne
push
add
inc
sub
pop
mov
push
not
rol
shr
pop
jmp
mov
push
add
add
dec
pop
and
push
sub
ror
pop
xor
push
lea
push
push
lea
push
call
add
out
adcb
add
add
jle
test
roll
out
mov
jns
lods
out
add
add
add
add
fisttps
ficompl
roll
movsl
mov
jmp
ja
add
add
movb
push
mov
push
add
out
add
lcall
push
xchg
push
push
push
push
call
add
stos
movsl
add
mov
add
push
iret
cltd
mov
addr16
mov
ret
fld
add
sub
pop
add
push
add
rol
pop
xor
push
push
push
push
push
push
push
call
addb
add
pusha
mov
mov
enter
jmp
popl
xchg
add
insb
fstl
add
rclb
call
mov
in
dec
push
ror
pop
sub
push
push
push
push
call
rcr
add
push
mov
fwait
add
add
jbe
add
add
add
int3
add
add
test
add
lret
add
mov
ja
cmpb
add
add
out
lods
repnz
add
out
int3
push
js
add
sub
pop
jmp
sub
push
add
shl
rol
rol
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
test
scas
iret
test
ret
pop
in
jmp
add
mov
add
add
mov
xchg
call
add
mov
add
add
roll
add
fcompl
sub
push
push
push
push
push
push
push
push
push
call
xchg
add
add
add
aam
add
ret
jo
lods
add
enter
rolb
add
xchg
mov
push
add
mov
add
add
push
call
popf
add
add
in
fcompl
cmp
add
call
pushf
jnp
jge
rclb
inc
loopne
xlat
push
lea
push
push
call
add
add
addr16
in
add
addl
add
fstps
jbe
mov
add
movl
add
add
add
add
hlt
add
call
push
push
push
push
push
push
call
mov
add
nop
mov
pop
outsl
cwtl
add
scas
popa
mov
mov
xchg
add
in
pop
sarb
push
add
xchg
add
dec
cmp
lea
push
push
push
lea
push
push
lea
push
push
call
add
cmpsl
add
jmp
fs
fldl
mov
rcll
mov
outsl
mov
jnp
add
jbe
add
hlt
ror
in
outsl
in
popa
rorl
out
pop
push
leave
add
popa
sub
pop
sub
mov
push
push
push
push
push
push
push
lea
push
call
xchg
add
aad
scas
add
movl
ljmp
nop
add
stos
aam
mov
movsb
fwait
incb
not
add
add
mov
lcall
jmp
not
lea
xor
pop
sub
push
push
push
push
push
call
xchg
mov
mov
add
mov
add
add
add
add
stos
lret
clc
xlat
add
add
mov
addl
add
push
pop
jae
add
xchg
add
add
int3
xchg
mov
add
pushf
add
push
add
add
lcall
xor
pop
pop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
in
mov
jb
jbe
out
addb
add
in
add
add
add
add
stos
add
popa
add
test
add
add
rolb
mov
mov
xchg
test
mov
sub
pop
shr
push
push
push
push
call
mov
xlat
mov
add
add
add
add
jb
xchg
add
out
add
mov
add
int
add
mov
aam
movb
add
jo
mov
add
add
lcall
loope
incl
add
lret
mov
sub
cmp
jne
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
rcrl
lea
add
jl
iret
aad
add
fbstp
xchg
insb
loope
mov
lcall
ret
push
shr
sub
sub
pop
push
push
dec
not
pop
mov
push
add
rol
lea
pop
add
push
pop
push
push
push
add
dec
pop
push
push
push
dec
pop
push
push
push
push
push
call
nop
ret
xchg
xlat
push
add
pop
stos
out
popf
add
cmpsb
add
xlat
mov
cwtl
add
sti
in
mov
test
add
add
push
add
int
add
sar
add
jp
add
add
mov
test
pop
flds
add
lcall
pop
or
int
loope
sub
pop
sub
push
push
call
add
add
jns
out
add
fiaddl
popa
add
bound
aad
add
out
add
add
fs
in
lcall
flds
popf
add
cltd
add
leave
sub
pop
mov
push
shr
not
pop
shr
push
add
xor
ror
pop
add
mov
push
push
push
lea
push
call
bnd
js
clc
pusha
add
test
jnp
cmpsl
mov
stos
push
fsubr
add
mov
push
add
movsb
mov
pop
out
js
fsubrl
ljmp
jno
incb
lcall
pop
or
icebp
sub
pop
mov
push
rol
shl
add
pop
add
push
sub
pop
xor
push
push
call
mov
fistl
add
add
mov
mov
hlt
cli
pop
repnz
add
add
jge
add
add
mov
lcall
xlat
push
push
call
add
jne
add
std
add
add
mov
add
pop
add
call
add
addr16
iret
pop
add
add
add
jmp
xchg
pushf
mov
fucomip
shll
out
stos
outsl
add
lock
push
add
mov
in
add
push
sub
pop
and
push
push
push
lea
push
push
call
add
add
mov
mov
mov
shlb
int
add
ret
add
add
pop
add
add
out
add
out
add
in
in
lcall
rolb
pushf
push
push
push
call
ret
pushf
add
mov
loope
add
add
jae
jmp
lds
fs
icebp
jecxz
aam
outsl
add
add
lret
jl
add
add
in
jne
test
pop
mov
sub
pop
xor
inc
push
push
push
push
push
push
push
push
call
out
add
movsl
add
mov
jecxz
mov
div
add
andl
xlat
push
pop
fadds
mov
add
jp
jge
add
mov
add
stos
push
fiadds
sub
pop
cmpb
jne
push
rol
rol
pop
add
push
push
lea
push
push
push
push
push
call
add
addr16
movsb
add
add
cltd
addl
add
leave
add
add
lret
add
add
pusha
add
add
aad
rcl
add
add
fldl
jne
stos
ja
add
inc
or
test
add
add
rol
pop
add
push
push
lea
push
lea
push
lea
push
push
push
call
add
mov
mov
mov
push
add
mov
add
filds
leave
fdivp
addl
int3
jmp
push
jnp
add
fiaddl
shl
jmp
xchg
ret
push
jno
pop
add
lcall
jnp
add
test
std
call
fldcw
fcompl
rclb
mov
pop
pop
pop
pop
push
push
push
push
push
push
call
jae
add
add
add
push
add
add
outsl
push
sarl
call
add
mov
scas
mov
popl
mov
insb
pushf
push
mov
mov
add
cmpsb
lahf
pop
in
imul
stos
add
add
add
push
lea
not
pop
pop
push
push
lea
push
push
call
enter
add
aad
bound
add
movsb
add
loope
mov
add
push
lods
add
jp
add
data16
add
test
into
push
xorb
add
add
jnp
add
pop
sub
pop
pop
push
push
push
push
push
push
push
push
call
add
test
add
jns
int3
mov
add
test
sti
cwtl
out
add
enter
add
mov
add
pusha
add
lcall
ret
push
push
push
lea
push
push
call
mov
je
pop
mov
mov
arpl
xchg
add
add
mov
mov
orl
cltd
test
jge
mov
out
lcall
movsb
fnstsw
pop
cli
sub
pop
mov
push
sub
pop
add
mov
push
xor
add
pop
push
mull
push
sub
lea
pop
pop
push
sub
pop
call
push
push
push
push
push
call
add
mov
out
mov
imul
add
xchg
iret
orl
sub
pop
push
call
push
shl
shr
pop
xor
pop
push
add
rol
pop
pop
pop
push
push
push
lea
push
push
call
mov
xchg
mov
add
add
add
pop
out
lods
aad
std
mov
fwait
add
mov
add
add
mov
mov
mov
lahf
mov
add
lcall
push
push
push
push
lea
push
push
call
repnz
add
sti
lret
mov
add
push
pop
lcall
loope
add
add
popa
jne
mov
pop
add
sub
pop
pop
leave
push
push
call
add
add
roll
push
leave
add
push
lea
add
popl
loop
cltd
add
filds
movb
push
mov
add
push
cmpl
inc
add
hlt
jge
clc
mov
add
add
add
sub
pop
ret
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
jp
push
loope
add
out
test
mov
add
jno
arpl
fdiv
lea
mov
fcompl
push
push
push
push
push
push
push
call
lds
add
loop
popa
xchg
pop
lock
add
pop
add
aam
add
sahf
add
add
fidivrl
add
fistpll
in
in
mov
push
rol
shl
rol
not
pop
add
push
add
add
pop
push
push
push
call
testb
add
addl
imul
mov
fcomp
fisubrl
out
mov
jp
add
add
mov
pusha
je
scas
mov
andl
fadds
fisttps
add
add
cmpsl
jmp
add
roll
fiaddl
add
add
mov
in
clc
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
icebp
xchg
jmp
lcall
outsl
pop
lcall
jb
icebp
add
fdivrs
mov
cmpsb
fwait
add
add
jge
out
fldenv
pop
jle
add
bound
add
roll
add
lcall
push
push
push
push
push
push
push
push
push
push
call
in
stc
call
movb
rcr
add
add
roll
add
xchg
not
lock
out
add
mov
add
jl
add
xchg
rcr
rcrb
scas
in
add
jl
add
jp
sub
pop
mov
push
sub
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
add
test
add
mov
jmp
fnstcw
outsl
add
add
call
int3
add
add
add
lock
std
add
jle
add
test
jecxz
je
add
clc
add
movb
add
sub
pop
pop
push
shr
lea
pop
lea
push
inc
pop
sub
push
lea
push
push
push
push
call
add
add
lret
add
lahf
add
mov
add
int
sar
jo
xchg
add
sub
pop
mov
push
push
lea
push
push
push
push
push
call
add
add
jmp
add
imul
add
add
mov
stc
mov
push
add
jb
js
cmpsl
add
pop
pop
movsl
in
movsb
mov
lcall
jp
fistpll
add
jns
test
ror
push
cld
add
in
in
shr
add
push
not
shr
shl
pop
mov
push
shr
pop
add
pushl
push
push
push
push
push
push
call
add
jno
add
movsl
pusha
add
add
add
iret
cld
mov
lods
fcomp
xchg
test
add
out
mov
add
add
lahf
add
lds
pop
mov
push
enter
xlat
cwtl
add
sub
pop
popl
push
push
push
push
push
push
push
call
lock
add
add
ljmp
xlat
pop
les
test
stos
add
lcall
fs
xchg
adcb
jnp
push
lea
push
push
lea
push
push
call
add
lret
mov
outsl
jmp
cmpsl
mov
fildll
add
jle
push
add
imul
mov
add
add
imul
in
in
pop
add
xor
push
push
push
push
push
push
push
push
push
call
add
fsubrl
iret
add
jnp
enter
shr
add
ja
add
cmpsb
mov
sub
pop
lea
push
sub
sub
shr
pop
mov
add
push
lea
xor
not
pop
xor
push
xor
shr
pop
rol
push
rol
pop
nop
push
sub
xor
pop
nop
xor
push
push
push
call
popa
add
fwait
mov
loope
mov
in
add
mov
fidivrs
loop
idivb
add
add
stos
add
jmp
mov
add
jmp
add
add
add
add
jb
add
out
aam
jmp
lcall
mov
ljmp
in
hlt
lcall
push
push
push
push
push
push
lea
push
call
iret
retw
push
test
mov
fwait
adcb
imul
test
add
pop
repnz
movsb
jns
fndisi(8087
add
loopne
add
pop
nop
inc
push
push
push
push
call
add
push
mov
mov
aam
add
add
out
popa
nop
jno
loopne
add
jl
add
add
push
arpl
add
add
add
pop
cwtl
sahf
addl
add
add
add
mov
add
add
out
lods
add
lds
lcall
push
lea
push
push
push
push
push
lea
push
push
push
push
call
out
cwtl
mov
add
xchg
add
add
add
add
fcompl
pop
stos
push
lret
push
xchg
rcl
mov
loop
xchg
add
repnz
add
push
fneni(8087
cltd
push
push
popa
clc
add
add
pop
rolb
xlat
pusha
out
add
add
rcll
ljmp
fcomps
push
push
push
lea
push
push
push
push
push
push
push
call
jecxz
movsb
add
xchg
add
jge
xchg
add
into
mov
add
mov
mov
cli
test
add
mov
leave
stc
jns
add
add
gs
push
add
push
cmpsl
leave
add
push
add
mov
lret
fistpl
jo
sub
pop
cmpb
jne
push
inc
xor
pop
add
push
lea
not
rol
shr
pop
nop
nop
push
sub
add
sub
shr
pop
cmp
je
push
ror
pop
nop
nop
push
xor
pop
inc
nop
push
push
lea
push
push
call
jmp
loope
add
hlt
fistpll
fimull
add
jmp
add
in
add
mov
filds
jo
add
aam
in
movsb
scas
add
add
jno
mov
sub
pop
nop
cmp
jb
push
rol
rol
pop
xor
push
rol
pop
jmp
push
dec
lea
pop
mov
push
ror
sub
lea
pop
add
push
lea
pop
movzwl
push
push
lea
push
push
call
ljmp
aad
mov
pop
loopne
fimull
lret
mov
add
add
mov
add
push
sahf
jmp
push
aam
add
lcall
inc
sbb
rcll
or
loope
xor
lea
pop
mov
xor
push
push
push
push
push
push
push
push
call
add
mov
add
les
add
add
xchg
add
mov
in
loopne
xor
push
lea
push
lea
push
lea
push
call
addl
add
cld
add
xchg
add
add
add
lea
add
push
bound
scas
mov
lahf
mov
cwtl
cmpsl
fadd
jns
push
add
jnp
arpl
mov
add
add
bound
aad
in
shl
mov
add
out
xchg
add
fdivrs
add
int
jecxz
in
lock
lcall
loope
push
push
push
push
call
call
addl
add
push
add
filds
add
ja
add
xchg
rolb
push
ljmp
add
lret
add
add
mov
add
pop
ja
xchg
in
addb
xchg
add
mov
out
in
add
jb
imul
into
pushf
mov
add
lcall
dec
nop
add
rol
add
pop
shl
push
sub
pop
xor
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
in
add
in
mov
add
pushf
add
add
loop
mov
jp
mov
mov
sahf
mov
add
add
xchg
jb
add
add
sub
pop
shl
push
push
call
add
imul
std
add
add
test
add
add
add
mov
add
mov
add
ffreep
add
add
lea
push
mov
int
add
sbbb
push
mov
add
mov
add
mov
in
clc
pop
xor
mov
push
shr
pop
add
push
xor
xor
pop
pop
push
push
push
push
push
push
push
call
add
shrb
aad
add
enter
add
shr
aam
outsl
add
hlt
pop
add
add
mov
mov
add
lret
xchg
nop
lret
add
add
lret
in
call
icebp
stc
pop
lret
add
lcall
push
push
lea
push
call
incb
add
cmpsl
jo
xchg
imul
add
add
add
add
add
xchg
pop
add
push
add
movl
test
popa
push
add
add
add
sub
pop
pop
pop
push
ror
shr
add
pop
leave
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
nop
mov
stos
out
lds
add
add
add
add
add
add
scas
add
jns
adcb
pushf
push
add
imul
pop
movsb
pop
ret
int
pop
mov
addl
addb
add
mov
add
bound
in
fdivr
lcall
or
push
push
lea
push
lea
push
push
push
push
push
call
add
stos
aad
testb
add
bound
add
mov
icebp
test
mov
call
ja
out
mov
add
jge
scas
in
jbe
stos
mov
jno
add
fs
mov
fs
sub
pop
mov
push
shl
pop
push
push
push
shl
add
shr
pop
push
push
lea
push
push
push
call
out
jb
add
jmp
aad
stc
in
notb
fsubl
add
add
ljmp
xchg
rolb
insb
add
fs
movb
aad
add
add
add
mov
test
rcrl
cmpsb
aam
std
add
sub
pop
push
push
shl
ror
ror
pop
mov
mov
push
push
push
push
call
add
out
scas
add
jecxz
int
add
fdivs
divl
add
test
pop
add
jle
add
add
add
xchg
add
xchg
add
mov
lcall
jge
push
shl
sub
pop
test
je
push
push
push
lea
push
push
push
push
call
add
add
ja
add
pop
add
add
addb
add
movb
jns
push
fcomps
leave
mov
mull
jmp
mov
add
mov
add
mov
movsl
push
push
add
ljmp
js
pop
rorl
out
iret
add
icebp
fbld
add
cmpsl
add
movb
add
add
push
inc
shl
rol
pop
mov
push
push
push
push
push
push
lea
push
push
lea
push
call
jmp
in
cwtl
add
fistpl
imul
add
add
rcrb
test
popa
jle
lock
jecxz
add
stos
mov
faddl
add
xchg
test
out
sub
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
mov
aam
push
mov
testl
fs
jne
lods
nop
add
mov
mov
in
loopne
mov
push
rol
xor
pop
inc
push
ror
not
pop
cmp
je
test
je
push
xor
shl
pop
mov
inc
push
push
push
push
push
push
push
push
push
lea
push
call
push
lock
sahf
in
push
rolb
mov
clc
cld
jge
add
mov
add
test
out
add
cli
mov
test
add
add
add
add
sti
add
scas
add
xchg
lods
sbbl
add
add
in
pusha
out
add
les
cltd
push
sub
pop
cmp
je
push
shr
inc
xor
pop
test
jne
xor
push
shl
xor
pop
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
mov
add
add
jbe
out
jne
add
jge
lahf
mov
lock
roll
add
add
xchg
pop
fwait
cmpsb
fldenv
add
add
push
jp
add
add
push
xchg
call
lcall
push
add
sub
pop
pop
push
push
lea
push
push
lea
push
push
push
call
ror
fcomip
int3
add
add
fcompl
mov
jnp
mov
push
add
add
add
pusha
add
add
in
stc
add
jno
subl
lock
stc
add
add
add
add
mov
jns
lods
out
lea
xchg
std
test
xchg
sub
pop
pop
push
sub
pop
pop
push
push
push
lea
push
push
call
add
add
add
jl
call
scas
in
mov
imul
ror
mov
movsb
mov
leave
add
jo
mov
in
lcall
push
add
inc
pop
ret
push
inc
sub
pop
mov
push
push
lea
push
push
push
call
jnp
jns
jmp
jo
add
add
add
add
push
add
xlat
add
test
add
out
lods
add
call
add
jo
add
lods
mov
faddl
add
lcall
push
shr
shr
pop
cmp
jne
lea
push
sub
pop
mov
push
shr
rol
add
add
pop
test
je
mov
push
sub
pop
add
push
push
lea
push
push
push
call
pusha
add
add
rolb
out
add
add
fwait
into
jl
fsubs
testl
outsl
mov
pop
mov
test
in
pop
cmp
jne
push
shl
dec
rol
xor
pop
mov
test
je
push
lea
add
pop
mov
push
push
lea
push
push
lea
push
push
push
lea
push
call
push
push
mov
push
add
add
add
add
xlat
lods
add
add
in
add
xchg
mov
nop
pusha
pop
add
add
add
add
mov
mov
rolb
roll
push
push
push
push
push
lea
push
push
lea
push
push
call
xchg
fmulp
mov
fsubr
out
lock
mov
add
add
add
roll
popa
add
add
add
out
cli
stos
xlat
jle
fldl
mov
loope
in
fdivr
lcall
loopne
test
pop
sti
call
inc
in
mov
cmpsb
push
call
out
mov
into
xchg
add
test
cmpsb
add
add
enter
push
jo
pop
mull
fldl
aam
add
fs
add
mov
bound
jmp
insb
mov
lods
add
add
add
pop
xor
push
lea
add
sub
pop
pop
push
pop
pop
pop
push
lea
push
push
call
addb
hlt
addr16
xorl
call
push
add
add
loopne
mov
add
add
add
mov
add
int3
add
add
fisubs
sub
pop
pop
push
push
push
push
push
push
lea
push
push
call
add
add
jmp
loope
lahf
lret
add
add
stos
add
js
arpl
add
xchg
addl
mov
movsl
lock
add
insb
add
xchg
pop
add
jmp
mov
cli
hlt
add
test
sub
pop
leave
push
lea
push
push
call
add
add
add
rcrb
movsl
fwait
ret
mov
add
add
push
mov
add
cmpsl
aad
pop
add
into
popf
add
mov
lcall
or
push
lea
add
pop
lea
push
lea
push
push
call
imul
add
out
addl
add
loop
data16
mov
mov
clc
mov
add
loop
add
gs
cli
add
add
xlat
add
jge
stc
add
sarl
ja
fwait
cltd
out
push
shrb
jno
in
hlt
lcall
push
push
call
roll
enter
push
lret
jb
mov
movsl
add
add
in
leave
add
mov
add
add
subb
xchg
incb
add
mov
lcall
push
push
push
push
push
push
lea
push
push
lea
push
push
call
fistps
loope
xchg
movb
movsb
fadd
jge
push
arpl
pop
cld
jne
insb
xchg
add
xchg
iret
aad
mov
jb
iret
scas
add
test
mov
mov
mov
push
add
lcall
push
push
push
push
call
mov
fadds
test
pop
lods
add
add
add
mov
ljmp
add
mov
add
add
pop
add
add
add
push
sub
pop
pop
leave
push
lea
pop
ret
push
push
push
call
add
xchg
add
pop
imul
pop
add
test
in
add
pop
cmpsl
imull
ljmp
repnz
lcall
push
not
pop
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
in
mov
add
add
pop
xchg
jae
push
jbe
add
add
mov
add
mov
add
mov
add
leave
pushf
add
js
fwait
test
cwtl
fldl
add
mov
lcall
in
fs
testb
test
add
jae
in
cmp
rcl
sub
pop
pop
pop
push
pop
leave
push
add
lea
shl
pop
ret
cmp
mov
inc
lret
ret
cmp
into
mov
ror
mov
mov
mov
hlt
lret
or
mov
xchg
lret
or
cltd
dec
enter
add
insl
jle
sub
pop
in
xchg
fwait
mov
and
scas
mov
stos
jo
popf
imul
outsl
nop
icebp
fimuls
ss
push
out
imul
push
and
push
sahf
xchg
pop
call
sub
test
cmpsl
popl
sub
mov
mov
fstl
jg
mov
sbb
sar
loopne
inc
push
pop
dec
inc
aad
mov
fisubrs
xchg
iret
sub
sub
js
push
outsb
xchg
dec
jecxz
and
fisubl
rcl
mov
xlat
push
inc
mov
lods
std
icebp
cmp
jb
imul
movsl
imul
mov
inc
and
insl
nop
dec
xrelease
int3
or
xor
fwait
push
jb
push
cli
xor
lret
call
or
call
pop
sbb
aad
call
mov
push
sahf
arpl
add
hlt
test
les
pop
int3
xchg
mov
lods
bound
or
mov
jp
cmp
dec
cmp
jne
and
mov
loope
fwait
xor
ret
lahf
pop
inc
xor
mov
clc
aaa
adc
add
ffree
rorl
cltd
std
lret
sbb
sub
movsl
imul
dec
push
gs
outsb
test
jle
stc
daa
dec
dec
add
xor
xchg
fbld
inc
push
iret
xor
xchg
push
fdivp
sbb
cmc
and
jl
lret
add
mov
aas
aad
lret
add
pop
icebp
sub
shl
lods
pop
sub
nop
aaa
push
or
sub
mov
mov
mov
xor
cmp
xchg
out
xchg
out
sub
test
jnp
test
cmp
xchg
lea
jbe
sub
sub
out
mov
pushl
xor
jne
mov
rcll
sub
push
sahf
std
ret
les
in
inc
lods
inc
or
inc
cmpsl
inc
mov
cmp
cmpsl
out
pop
rol
aad
jle
addr16
push
xor
mov
xchg
and
xor
lods
mov
inc
xlat
dec
jecxz
shlb
cmp
pusha
inc
xchg
adc
sbbl
mov
mov
xor
shlb
loopne
push
and
jns
hlt
adc
fidivl
movl
push
mov
je
in
loop
in
dec
add
or
sbb
cmc
cmp
xchg
inc
test
nop
mov
test
leave
or
mov
hlt
testb
fnstsw
pop
push
add
cmp
sbb
mov
scas
jns
pop
or
push
imul
lret
cmp
mov
add
mov
test
inc
int3
iret
jle
lret
mov
mov
mov
insb
jbe
js
loop
inc
push
push
add
jp
xchg
or
pop
repnz
cmp
adc
lock
or
push
popf
jmp
gs
cmp
cld
add
fstpt
fmulp
push
mov
jmp
test
and
rorl
and
call
imul
adc
cmpsb
ret
adc
or
cmp
ficomps
notl
cwtl
mov
or
and
cmp
inc
shlb
call
gs
das
sysexit
mov
outsl
pusha
cmpsb
loopne
and
cld
leave
or
sub
je
and
inc
lock
ljmp
sbb
add
xchg
jg
mov
std
fildl
or
jbe
push
in
and
arpl
jno
mov
pusha
outsb
add
sahf
sbb
popa
xor
movsb
xor
in
xor
jle
scas
push
cmp
loope
fists
cs
adc
inc
sub
push
js
add
sub
mov
sub
scas
fbld
dec
inc
xchg
mov
mov
xchg
pop
pop
pushf
jle
inc
add
fidivrs
jmp
das
mov
jecxz
pop
jo
imul
test
mov
jg
inc
insb
jae
idiv
into
cmp
test
xchg
ljmp
mov
mov
cmp
inc
clc
repz
arpl
dec
pop
inc
fdivrp
fdivs
cld
sti
nop
movsb
out
out
lret
scas
mov
lods
mov
aad
mov
jae
ds
aas
neg
sbb
divb
jmp
inc
xchg
imul
adcb
cmp
test
call
notb
sarl
fsubrl
pop
mov
push
mov
pop
mov
sbb
mov
int3
leave
iret
ljmp
mov
fimuls
das
in
mov
inc
nop
add
cld
pop
xchg
dec
scas
xor
jl
inc
out
dec
cmp
shrl
int
into
jp
jne
fadd
sbb
push
fadds
stos
loope
hlt
add
pop
in
aad
lods
dec
add
push
fs
mov
sbb
add
and
jl
dec
mov
jbe
pop
je
sbb
jl
dec
mov
movsl
jl
aas
dec
mov
in
jnp
idivl
test
mov
jae
outsl
pop
fisubl
dec
loopne
outsb
scas
sub
lret
sahf
js
xlat
add
mov
loopne
popa
outsl
xchg
loope
push
pop
cmpb
lahf
inc
push
cmp
pop
inc
xchg
push
fdivrs
cmc
or
mov
inc
in
movsb
hlt
lahf
xorl
add
mov
movsl
cld
enter
jnp
or
jo
int3
or
sub
or
mov
add
jns
pop
insb
sbb
in
inc
or
lahf
sbb
mov
insb
cmc
xchg
mov
xchg
sbb
and
xchg
adc
pop
mov
xchg
push
push
ret
mov
xchg
roll
cwtl
cmpsb
push
mov
ror
out
loopne
pop
ljmp
in
out
imul
mov
mov
cmp
nop
adc
pop
pop
inc
outsb
das
mov
cmc
push
mov
int
mov
add
pusha
mov
neg
imul
je
and
sub
add
or
sbb
mov
in
or
lds
repz
mov
ror
jae
aas
jo
inc
jle
pop
xchg
cmpsl
inc
lahf
cltd
push
int3
xchg
repz
jns
nop
sbb
test
mov
mov
incb
mov
push
pop
or
lret
and
fldenv
mov
sub
mov
pop
lret
rcrl
ljmp
js
mov
in
dec
lcall
and
lock
andb
xor
stc
pop
mov
jne
movlps
outsl
sub
and
cs
ret
in
dec
inc
popa
fsubs
jne
dec
les
in
clc
iret
aam
les
sbb
add
or
mov
and
inc
or
add
cltd
addr16
inc
fistl
lock
addr16
js
stos
dec
int
test
dec
arpl
sti
divl
les
xchg
imul
mov
jl
daa
ljmp
leave
sbb
out
inc
idiv
add
lret
popa
add
dec
pusha
jns
ret
das
inc
xlat
loopne
scas
mov
lcall
pop
push
jg
xchg
test
lods
les
lret
push
movsb
fcompp
outsb
mov
fnstsw
adc
mov
aas
sub
sub
mov
cltd
stos
mov
pop
push
mov
push
lret
pusha
pop
inc
sbbb
and
sub
ds
pop
lock
push
add
jle
arpl
int
repz
xchg
add
popa
push
pop
gs
add
shl
pop
cmpsl
mov
shlb
and
lods
filds
outsb
les
hlt
xor
out
push
and
add
sbb
pop
dec
xchg
popf
jne
pop
ss
push
push
mov
mov
jbe
inc
sbb
mov
mov
xor
pop
adc
xor
mov
push
cmpb
add
mov
fcoms
clc
popa
fwait
cltd
outsl
js
mov
ja
jo
mov
mov
and
dec
sbb
adc
jbe
sub
cmp
adc
shrl
mov
int3
add
outsb
adc
pop
rol
outsb
imul
mov
adc
sub
lods
push
lret
and
in
or
in
sbb
pop
outsb
xchg
add
cs
outsb
in
insb
out
pusha
aaa
outsb
or
setnp
aas
test
xchg
jb
in
inc
testb
push
ljmp
jl
adc
rcr
sahf
inc
mov
mov
and
cmp
adc
mov
dec
and
xchg
mov
or
ror
inc
jb
sub
nop
ds
jns
xchg
cmc
inc
mov
add
and
pop
push
jecxz
out
inc
pop
add
add
fidivrl
add
fisttps
jl
jo
cmp
push
imul
test
and
xor
out
adc
sarb
hlt
sub
test
cmp
shrl
hlt
sub
push
or
sbb
push
pop
pop
adc
push
xor
fcoms
xchg
push
jecxz
addl
pop
add
jne
cmp
das
mov
in
push
push
jo
sbb
flds
or
ret
add
dec
cltd
xchg
pop
fptan
mov
pop
pop
xchg
pop
or
jo
imul
insl
dec
test
jnp
mov
or
js
mov
hlt
movsl
nop
sahf
inc
cld
xor
pop
cmp
incb
cmp
nop
mov
ljmp
fists
jo
rcll
mov
cmc
pushf
xchg
push
sti
and
xor
fldcw
aam
adc
and
jp
mov
xchg
push
xchg
cmc
push
outsl
and
cwtl
mov
fsubrs
cmp
mov
sub
sbb
push
sbb
ss
mov
std
out
xorb
jle
or
mov
aad
dec
dec
aad
sti
sti
ss
int3
cmp
mov
jno
mov
inc
pop
shll
shll
mov
xchg
inc
js
xchg
pushf
push
sub
mov
stc
int3
inc
cmpsl
xchg
testl
movsb
sub
cwtl
mov
fbld
les
movsb
pop
into
push
push
xor
dec
arpl
mov
adc
popa
lret
jecxz
and
add
repnz
outsb
pop
in
vpsubq
cmp
jmp
clc
xor
and
cmpsl
sub
lods
inc
inc
adc
push
push
enter
xor
push
xor
dec
int
or
dec
jp
ffreep
jno
push
data16
fisttpll
xor
stc
shrb
cmp
scas
push
sub
je
repz
popa
popf
cmp
cwtl
pop
cmc
pop
jmp
adc
dec
cmp
sbb
loopne
sbbl
mov
inc
mov
mov
adc
movsl
and
ja
outsl
dec
outsl
daa
movsl
pop
mov
imul
add
or
pop
movsl
jmp
jp
pop
jle
loopne
dec
scas
push
pop
popa
cmpsl
je
aad
mov
dec
aad
fsts
and
out
or
dec
pop
mov
xchg
pop
sbb
arpl
repz
push
outsl
jns
cld
inc
adc
push
adc
pop
push
jecxz
push
and
push
pusha
sbb
add
in
out
in
fsubrl
test
mov
sti
and
mov
jb
pusha
lret
in
xchg
into
add
jge
sti
aas
mov
push
add
and
pop
arpl
inc
addr16
jo
nop
ljmp
xor
bound
out
in
inc
outsl
adc
fdivrl
xchg
jo
xlat
sarl
jecxz
jno
adc
scas
mov
and
xchg
data16
or
aas
jmp
cmp
wbinvd
loope
std
jns
loopne
add
xor
jmp
add
cmp
cld
push
pop
outsb
lahf
cs
cmp
aad
addr16
mov
mov
out
sub
clc
jg
adc
xchg
mov
insl
mov
jg
je
lds
fstpt
das
fildl
cs
push
xlat
cltd
mov
jb
inc
repz
or
cltd
inc
mov
xor
xor
insb
mov
fiaddl
sub
sub
xorl
mov
jp
loopne
sub
sub
inc
push
lds
popa
cmp
mov
mov
insb
pop
jg
push
mov
add
cmpb
push
loop
jo
push
insl
popa
cmpsl
inc
and
std
push
fwait
and
xchg
stos
pop
pop
std
shlb
insl
cmc
bound
clc
daa
push
and
jge
out
or
mov
cs
ss
adc
xor
sub
imul
je
dec
out
mov
sub
pop
sbb
sub
fs
xor
std
aam
sti
and
daa
leave
xor
dec
jge
push
xor
mov
pop
inc
hlt
push
sub
mov
fists
mov
cwtl
in
add
sbb
repz
mov
in
add
xorb
pop
cmp
xchg
leave
sbbb
cli
sub
dec
daa
jge
adc
leave
mov
movsb
dec
dec
inc
xchg
cmp
stos
pop
pop
cmc
or
mov
cmp
out
push
push
insl
out
mov
add
in
pop
rorl
outsb
les
sbb
es
push
addr16
orps
cltd
push
outsb
movsb
lahf
pushf
outsb
in
cli
xor
je
js
lret
in
test
stos
pop
repz
push
inc
aas
push
test
faddl
push
shr
and
jge
orl
push
in
into
xchg
or
std
push
pop
sub
inc
jae
into
dec
nop
or
cmp
xchg
outsl
or
mov
mov
je
imul
jle
push
js
push
mov
and
jp
aad
pop
repz
loop
jle
int
dec
test
out
pop
loope
and
mov
xchg
imul
outsl
bound
sub
js
lock
push
push
fisttpl
sub
repnz
jecxz
adc
dec
in
and
fisubs
add
insl
sbb
icebp
int3
addr16
xlat
out
adc
mov
icebp
movsb
rorb
dec
rcrb
iret
add
adc
imul
inc
mov
fld
lcall
jnp
stc
push
cs
mov
xchg
fnstcw
fwait
insb
test
add
fistps
pop
mov
mov
jbe
mov
into
test
cltd
stos
call
dec
in
int
mov
test
sbb
shlb
jbe
dec
call
loope
imul
jge
mov
sti
xchg
jne
pop
iret
push
rcl
pop
xchg
jo
aaa
sbb
mov
dec
fwait
std
repz
pop
mov
das
enter
fabs
rolb
rcll
xor
in
add
in
jae
cmp
int
jae
pop
lea
jb
or
mov
add
insl
adc
jl
sub
jo
mov
repnz
cmpsb
test
ds
jecxz
lods
jne
stos
fldt
xor
mov
ja
cs
push
stc
mov
inc
pop
xchg
lods
and
aaa
cmp
out
mov
rcl
int3
mov
mov
mov
rol
jno
outsl
jle
cld
shll
add
mov
jl
jae
mov
addl
push
adc
xchg
pop
xchg
mov
in
mov
inc
sbb
mov
orb
std
add
stos
jb
cld
lcall
cmc
jg
or
lock
xlat
das
pop
lods
imul
jecxz
mov
xor
mov
nop
clc
adc
fnsave
out
mov
outsl
add
mov
cmpsl
lret
cmp
das
and
inc
or
dec
aam
pop
cmpsl
jecxz
push
inc
test
in
pop
and
jne
sbb
stos
push
xor
shll
pop
cmpl
mov
jae
xlat
fwait
cmp
sbb
inc
mov
adc
cwtl
xchg
mov
mov
mov
popa
cmpsl
in
out
sti
shr
mov
inc
rcrb
push
push
outsb
jae
insb
fstpl
mov
in
jecxz
push
adc
arpl
adc
inc
int3
mov
jle
sub
or
stc
in
scas
in
inc
dec
xor
dec
or
out
xchg
mov
je
aad
push
das
scas
push
cwtl
and
jae
fcom
sahf
sub
fimull
mov
mov
dec
xchg
sbbb
ljmp
repnz
lods
mov
mov
xchg
xor
mov
stos
orl
cwtl
xchg
or
mov
stc
out
push
data16
mov
inc
sahf
aas
mov
daa
jmp
out
bound
jge
or
xor
inc
push
stos
sarl
mov
mov
push
jo
add
mov
sahf
out
fwait
call
popf
int
mov
xor
xchg
jne
lods
push
movntq
push
stos
cmp
cmpsb
sub
shlb
sbb
mov
push
sub
push
popf
sub
and
and
imul
mov
lods
out
push
imul
pushf
dec
xchg
xor
jnp
mov
pop
nop
fwait
jbe
jmp
repnz
mov
xchg
jnp
divb
es
insb
outsb
shl
xor
inc
cmp
fstl
pop
push
xchg
mov
push
aas
mov
xchg
push
in
mov
lahf
popa
xor
or
dec
jecxz
xor
lods
and
sbbb
jne
mov
inc
stos
fs
cmp
out
cmpsl
fildl
repz
xor
jmp
ljmp
dec
or
sbb
and
mov
jecxz
jle
test
mov
popf
testl
add
mov
jae
adc
pop
mov
mov
pop
shlb
arpl
js
jge
loope
mov
icebp
scas
cmp
jno
xchg
push
test
test
xchg
rorl
test
nop
and
fistpl
inc
pop
arpl
inc
rcl
insb
js
nop
cltd
out
push
xchg
cmp
adc
inc
aas
jnp
popf
adc
add
xor
jnp
in
cwtl
add
enter
dec
addb
jecxz
jp
setbe
add
mov
xchg
add
les
mov
addb
sbb
addr16
hlt
ljmp
add
mov
xchg
movsb
dec
ret
xchg
xor
inc
cmp
outsb
lret
push
and
std
loop
out
jge
ret
add
loopne
push
fmul
jl
out
pushf
rcll
pop
sbb
sahf
fisubl
cmpsb
mov
popa
xchg
pop
gs
ljmp
es
and
mov
xor
jne
aaa
pop
adc
jnp
mov
adc
jae
add
std
loop
in
cmc
fwait
xor
mov
out
inc
out
push
dec
xchg
notl
int
adc
shl
push
push
pop
jno
insb
xchg
cltd
jecxz
js
jl
test
or
xlat
add
sbb
test
cmpsb
sahf
arpl
bound
cltd
lds
cmpsl
mov
aas
mov
loop
pop
pop
cmpsb
inc
push
dec
jbe
pop
xchg
push
ficompl
iret
jmp
fcompl
xchg
out
enter
push
popf
xchg
inc
inc
cmpsb
fisubs
ds
pop
data16
negb
sbb
jmp
nop
cs
jmp
adc
aad
pop
mov
mov
cmp
loope
jo
push
mov
in
imul
ds
outsb
addr16
stos
mov
ds
mov
fistpll
add
and
adc
mov
push
ficompl
cld
stc
fadds
test
lret
push
lcall
xchg
mov
jle
dec
cmp
or
or
mov
aam
xchg
andb
adc
movsb
push
jp
cmp
mov
test
jle
mov
jp
jecxz
inc
mov
mov
xor
test
lds
lret
push
shl
push
outsb
in
sbb
mov
in
dec
cli
fimull
xor
js
mov
in
pop
push
push
mov
xor
pusha
and
addr16
addb
int3
lds
lods
nop
aaa
aaa
pop
inc
or
je
sbb
pop
pop
mov
dec
lock
mov
mov
and
int3
cmp
sbbb
scas
inc
aad
sub
pop
mov
sahf
xlat
mov
es
pop
repz
push
cmpsl
mov
or
shrl
fisttps
push
jno
sbb
dec
add
dec
roll
mov
cwtl
jl
dec
and
and
xor
mov
xchg
or
pop
insl
xchg
sub
cmp
push
inc
movsl
push
mov
aam
js
mov
xorb
movsb
pop
inc
into
addr16
sub
stc
sbb
ret
test
data16
dec
jno
dec
aad
add
mov
stc
add
inc
scas
sbb
sbb
push
jne
cmp
cmp
inc
inc
ret
inc
push
call
xchg
inc
pop
pushf
idivl
jb
in
cmp
jne
xlat
hlt
jp
es
aad
sbb
xchg
xchg
out
xor
fldt
sbb
cmp
fldcw
iret
aam
pop
push
and
out
in
jmp
xchg
ja
xor
push
and
cli
or
pop
addb
sbb
hlt
jae
das
in
push
sbb
xor
add
stc
pusha
dec
loope
lods
sub
repz
flds
sub
push
scas
add
pop
cmp
push
shlb
rcll
bound
ret
inc
jo
xchg
and
xchg
insb
addr16
jmp
shll
and
push
push
aaa
pop
xlat
sub
xchg
decl
ds
out
test
cmpsb
jbe
lret
pop
sub
sbb
std
mov
daa
pop
jnp
pop
xor
cwtl
pop
jle
push
es
imul
fidivs
in
push
push
dec
mov
out
sub
test
dec
iret
sub
sbb
inc
push
or
push
adc
into
mov
mov
jle
shrb
push
ret
sub
and
imul
adc
sbb
add
jp
rcrl
pop
adc
jmp
add
adc
sub
iret
pushf
mov
pop
jbe
mov
mov
inc
stc
sub
jecxz
iret
in
pusha
in
mov
pop
popa
or
nop
popf
adc
es
mov
sbb
mov
jmp
mov
mov
xchg
jne
sbb
fstpl
xor
or
adc
sbbl
jmp
push
add
xor
cwtl
frstor
xor
inc
hlt
dec
or
mov
xor
cli
pop
out
or
test
cmp
imull
imul
and
push
mov
adc
movsb
jns
stos
push
int
pop
adc
lea
fisubl
mov
cltd
cs
sti
ss
jnp
add
push
and
lret
xor
and
cmp
mov
push
repz
xor
dec
test
sub
xor
push
cmpsb
rorb
xchg
clc
cmpsl
mov
cmpsl
or
push
xorb
push
adc
mov
fsubrl
jge
sbb
or
jb
stc
pusha
push
fwait
or
dec
popa
mov
jnp
in
std
add
sub
shr
pop
sbb
inc
mov
inc
mov
movl
mov
scas
sbb
xchg
adc
orb
add
xlat
adc
jno
push
mov
adcl
mov
mov
mov
dec
push
sub
jmp
or
xor
int3
cmp
insl
out
jne
inc
cmpsb
pop
jge
mov
mov
sbb
pop
sti
sbb
inc
ret
xchg
and
gs
movsl
gs
lods
jne
jge
fisubs
mov
or
add
cltd
jg
test
xchg
inc
les
dec
int3
shr
sahf
test
mov
outsl
jo
jbe
dec
loopne
cmc
sbb
pop
dec
movsl
lea
lahf
push
cmpl
decb
xchg
push
out
dec
and
xchg
mov
mov
xor
rclb
lret
ficomps
subl
adc
or
jl
cmp
nop
int3
scas
pop
insb
jecxz
mov
mov
mov
xor
es
sarl
cmp
jmp
mov
xchg
roll
dec
in
push
js
add
jo
mov
call
int3
mov
inc
inc
les
sub
mov
push
xchg
pop
repz
mov
adc
and
jno
adc
lahf
loopne
mov
mov
in
jns
jae
inc
pop
das
cltd
dec
loopne
adc
cs
or
push
ds
adc
jbe
in
dec
stos
ja
dec
push
add
outsb
jecxz
xchg
cmpsb
sarb
data16
cmc
sub
inc
xchg
decl
ja
in
dec
fwait
addr16
jmp
pop
orb
sbb
clc
adc
mov
shll
xchg
and
sahf
push
inc
hlt
pop
out
push
push
and
cli
fwait
dec
mov
insb
jmp
leave
mov
mov
mov
dec
add
int
or
es
jle
ss
pop
popf
mov
movsb
insl
sbb
mov
adc
ljmp
movsl
pushf
repnz
mov
pop
cmp
push
push
inc
add
aas
xor
push
cmp
arpl
cltd
leave
mov
lret
cs
pop
xor
inc
aam
xchg
les
sbb
mov
xchg
loop
adc
dec
mov
das
clc
jne
pop
test
into
int
mov
iret
and
ljmp
cmp
pusha
aas
imul
fstps
pop
adc
cmpsl
jg
sub
add
or
mov
mov
loop
mov
xchg
pop
pop
cmpsl
cwtl
fbld
int3
mov
sbb
cltd
inc
test
rdmsr
out
fidivl
push
cltd
jmp
lcall
and
xor
jge
sbb
mov
xor
icebp
mov
daa
icebp
pop
sbb
cli
dec
into
adc
mov
inc
push
xchg
cmp
push
xlat
mov
mov
test
aam
or
fcoms
lods
gs
adc
out
add
push
lds
pop
xor
loop
stos
insl
pusha
pop
inc
dec
jp
mov
bound
fwait
out
mov
insl
sub
lcall
inc
mov
daa
pop
or
lds
ds
cmpsl
bound
aad
insb
testl
addr16
xor
dec
into
jg
nop
hlt
and
cmpsl
xor
popf
in
inc
imul
xor
jo
push
gs
fldenv
ja
mov
xor
cmp
mov
push
cli
enter
int3
lcall
daa
jle
push
or
popf
loope
inc
cmpsl
add
add
inc
into
aam
daa
das
into
repnz
jnp
jecxz
cmpb
fmul
fs
repz
cmp
jbe
pop
push
fistps
mov
dec
push
out
call
lds
ss
sti
sbb
and
pop
dec
xchg
inc
lcall
leave
or
or
mov
xor
cmp
subb
xlat
push
rorl
cltd
popa
or
lods
cmpsb
arpl
ss
and
pop
add
jmp
loope
jo
inc
jne
xchg
cs
test
xor
js
xor
lods
and
push
shlb
cmp
aam
inc
xor
adc
xlat
sub
test
adc
popw
in
ret
mov
mov
fisttps
inc
dec
jbe
mov
dec
fwait
jmp
cmpsl
aas
movsl
mov
mov
pop
pop
xchg
shrw
popf
xchg
add
pop
inc
pop
mov
dec
hlt
push
push
repnz
xor
stos
nop
mov
add
js
jns
sub
fmul
sbb
add
inc
fiaddl
xor
pop
sbb
arpl
popa
and
add
sahf
push
ja
mov
jge
out
jle
push
adc
scas
sbb
jl
lret
adc
lret
push
adc
xchg
and
adc
mov
dec
push
adc
clc
adc
inc
or
pusha
sbb
push
or
mov
pop
js
add
stos
inc
cmp
push
sub
cmp
cmp
lret
adc
cld
dec
pop
scas
repz
scas
mov
mov
add
adcl
or
shrb
push
jle
mov
mov
xchg
xlat
cmp
loop
mov
xchg
stos
repz
repnz
ljmp
sub
pop
orb
fsts
xor
aaa
mov
daa
pushf
dec
addr16
mov
icebp
cs
sub
dec
sbb
repnz
fnstenv
pop
push
call
repnz
sub
fdivs
sar
mov
adc
and
lea
inc
fstpt
fsub
loop
lcall
stos
sbb
jl
or
and
fidivrl
je
aam
or
out
fldcw
cs
or
cmp
push
or
ss
cs
stos
cmc
and
imul
mov
fs
out
push
test
pop
pop
mov
sahf
mov
clc
push
inc
lock
test
insl
push
sbb
mov
xchg
cwtl
sub
mov
sbb
loope
les
test
sub
lret
dec
subl
or
lock
jne
movsl
movsl
sbb
pop
sbb
mov
sahf
and
loop
xchg
ljmp
imul
cld
fdivs
mov
mov
sbb
bound
ficomps
mov
add
dec
pop
flds
movsb
sub
adc
jmp
shll
xchg
push
or
dec
call
mov
or
lahf
stc
push
jl
leave
jge
ret
inc
adc
xlat
fmul
push
pop
fdivrp
test
mov
out
pusha
dec
aas
sbb
pop
loope
jp
les
sbb
fwait
repz
jg
pop
pop
add
push
dec
sarl
jmp
ljmp
lods
inc
leave
add
inc
lea
dec
out
mov
sahf
sbb
jns
popa
jbe
out
cmp
dec
loop
or
push
mov
xchg
inc
xor
mov
xchg
leave
adc
mov
dec
stos
sub
or
pop
or
dec
or
rcrl
sbb
adc
pop
cs
fs
aaa
jb
push
xor
or
jmp
add
xor
xchg
stos
dec
cmpsl
xor
loopne
mov
insl
inc
cmc
loope
leave
lods
ljmp
fcmovb
movsb
fmul
sbb
insb
dec
inc
scas
pushf
inc
jns
xchg
ret
push
int
fnstsw
xchg
into
out
or
lahf
inc
pop
gs
inc
inc
gs
or
xchg
insl
movsb
jno
inc
rorl
frndint
hlt
call
or
pop
lcall
dec
or
xchg
int3
xor
sbb
sbb
cmp
test
jbe
lea
fmull
das
push
pop
stos
mov
add
mov
adc
cld
xor
and
adc
mov
lds
dec
xchg
xor
pop
ds
ds
jno
mov
insl
cmp
adc
sub
inc
fiaddl
mov
test
jmp
fs
lahf
scas
inc
mov
dec
dec
mov
sbb
shr
push
and
divl
repz
mov
loop
mov
pop
lret
ss
adc
call
add
es
pop
popf
ds
sbbb
mov
or
icebp
rcll
mov
fld
sbbb
push
pop
add
or
xchg
pop
pushl
xor
mov
mov
and
inc
sbb
popf
or
dec
lods
xchg
cmp
pop
sbb
pop
and
shrb
sub
xorl
or
push
insb
roll
lods
pop
fs
shl
xchg
jmp
mov
or
std
or
popf
mov
xor
nop
jmp
rep
pop
inc
test
mov
icebp
cmp
add
or
fs
loope
xlat
or
hlt
jmp
xchg
cmp
jne
jnp
loop
lods
mov
iret
dec
sub
lret
int3
cmp
cwtl
das
cltd
das
mov
dec
xchg
cwtl
xchg
out
inc
sub
mov
out
jg
into
xor
dec
lahf
jno
lret
cmpsb
jns
lods
fcmovnb
stos
xchg
aad
fwait
mov
push
jb
imul
push
xor
jo
sbb
lea
sbb
pushf
aas
pop
fmull
jge
pushf
and
xchg
cmp
js
hlt
inc
or
xor
in
loopne
scas
and
mov
fisttps
movsl
inc
pop
data16
lods
incl
sbb
pusha
pop
mov
and
in
lods
add
push
js
or
sbb
pop
jo
pop
in
into
jb
inc
ret
imul
push
fstl
xchg
test
or
mov
shl
sub
mov
sbb
hlt
sub
jp
cs
jmp
push
test
adc
push
inc
sub
sbb
andb
nop
bswap
mov
out
or
xchg
cmp
lods
xchg
test
ret
pop
fstps
xor
cmpsb
dec
dec
icebp
out
adcb
idivl
cmp
int
or
xchg
add
add
outsb
lahf
ss
cwtl
sbb
data16
jns
inc
sub
inc
inc
jmp
xor
jns
movsb
adcl
sbb
aaa
enter
je
popf
cmp
pushf
repz
pmaddwd
xchg
pop
in
jne
outsb
inc
mov
xor
and
in
pushf
ljmp
cmp
push
dec
lret
dec
mov
pop
test
dec
imul
push
gs
pop
pop
mov
test
jae
movsb
jnp
sbb
xchg
lret
hlt
xchg
inc
xor
add
mov
cli
xchg
xor
xchg
aad
add
fstpt
test
fnstsw
cvtps2pd
pop
add
das
add
fwait
jge
in
xchg
xor
mov
inc
adc
sbb
xchg
jne
pop
or
call
arpl
inc
xchg
pop
fldcw
aas
in
jno
sub
pop
fsubrl
xor
sub
add
mov
xchg
pushf
outsb
inc
js
jle
or
dec
out
insl
adc
pusha
push
mov
mov
mov
arpl
add
pop
sbb
fists
sbb
xchg
cwtl
ret
ret
lret
adc
cmp
imul
clc
or
xor
aad
sbb
outsb
sub
stos
cmpb
in
cmp
insl
rcrl
or
maxps
push
sahf
jo
pop
or
jb
xchg
cmp
mov
mov
xchg
mov
lahf
data16
dec
mov
dec
jno
inc
cmp
xchg
sar
sbb
jecxz
int
loop
inc
pop
xchg
dec
ficomps
insb
jle
xchg
adc
inc
push
test
jecxz
imul
in
or
rcl
cmp
imul
mov
lret
insb
repz
mov
int3
imul
gs
outsl
pop
push
outsl
mov
or
shlb
scas
sub
cli
adc
loope
imul
cmp
loopne
inc
stc
sar
pop
ret
xor
sub
imul
inc
mov
mov
xor
pusha
push
icebp
into
cli
testl
inc
push
ss
mulb
cmp
mov
sub
or
inc
les
fs
loopne
das
and
fwait
mov
lods
cmp
in
pop
jno
push
jb
mov
sub
xor
xchg
or
in
decl
inc
dec
add
mov
in
dec
adc
movsl
pop
mov
dec
inc
movsb
or
mov
insl
fs
or
lret
mov
loopne
adc
out
xor
and
jl
ss
or
rorb
ret
popl
popf
pop
dec
mov
adcb
cmpl
mov
sarb
hlt
enter
cwtl
xor
pop
fbld
xor
out
aas
mov
xlat
mov
gs
aas
lods
test
pop
idiv
out
dec
fcomp
push
popf
push
cmp
jbe
mov
adc
leave
shr
ret
sub
fsubp
adc
addl
cmp
push
dec
push
xchg
lea
cmp
adc
fs
push
sbb
hlt
dec
jp
mov
mov
fnstenv
cmp
inc
jge
and
loopne
xor
push
aam
mov
hlt
je
gs
sti
pushf
dec
addr16
lea
dec
push
jg
mov
pushf
inc
shlb
pop
ret
arpl
lret
cli
stos
mov
bound
pop
fxch
mov
jl
xorb
sbb
popf
je
add
xor
push
and
cmpsl
mov
sar
lcall
sbb
leave
or
lret
or
arpl
or
ja
fistps
mov
aaa
enter
loopne
gs
push
das
inc
test
inc
aas
inc
xchg
xor
inc
sbb
pusha
mov
jmp
lock
mov
or
adc
cmc
sub
sbb
popa
jle
and
xor
je
and
xor
icebp
imul
loope
add
xor
mov
aaa
lcall
scas
cmp
call
mov
sahf
pop
add
sahf
call
cmp
data16
hlt
mov
xchg
mov
xor
xchg
scas
call
fdivrl
xor
in
dec
push
xchg
data16
add
mov
lods
popf
jmp
ds
fcmovb
sub
arpl
xchg
cmpsb
or
pop
push
fsubp
in
mov
add
cmp
fimuls
icebp
mov
mov
icebp
mov
add
cmpsl
in
push
dec
xor
aas
arpl
sub
xchg
fwait
ljmp
in
daa
inc
push
hlt
aam
icebp
sahf
xor
ja
aad
jb
data16
jmp
dec
pusha
cli
or
and
shrl
jg
jle
and
xchg
leave
repz
pop
sbb
fdivrl
jbe
cmp
and
popa
and
pop
jecxz
out
adc
pop
cli
lods
lods
inc
jb
jae
xorb
aas
mov
mov
jmp
sbb
stos
jae
scas
xchg
dec
andl
sbb
and
rcll
lds
sub
cmp
fcomip
mov
jno
outsb
xor
out
mov
xchg
popf
push
fnstenv
push
lea
pop
add
pop
and
sahf
xchg
repnz
lods
or
dec
pop
outsl
aas
adc
add
in
mov
xlat
mov
sub
mov
push
les
sbb
add
mov
out
outsl
mov
loopne
add
movsb
add
int
inc
push
outsb
pop
push
jmp
mov
int3
stos
ljmp
scas
pop
mov
fs
cmpsl
sahf
sbb
mov
aam
jo
sbb
insb
aam
rcrb
dec
rorl
mov
shl
add
cmpsb
aaa
pop
sbb
imul
icebp
inc
mov
sbb
test
aam
es
and
aaa
int
jbe
push
imul
js
jbe
leave
lods
popa
rorl
scas
jle
std
push
push
push
leave
stos
aaa
xor
mov
in
dec
mov
mov
popa
mov
cmovge
bound
sahf
sbb
mov
rcl
stc
or
inc
les
dec
xchg
je
jbe
sbbl
outsb
xor
insb
int3
mov
sbb
sbbb
jg
jne
pop
out
scas
and
push
or
adc
mov
mov
ja
add
fisubrs
dec
test
leave
cmc
mov
jo
push
mov
dec
out
aad
ss
sbbb
es
mov
addr16
repz
pop
add
outsl
mov
sbb
mov
jl
test
js
cmp
or
cmp
or
push
inc
mov
out
push
xor
aad
xor
sahf
adc
ljmp
and
lret
cmp
add
call
jb
insb
xor
cmp
in
test
in
insl
jle
in
sarl
mov
or
and
sub
mov
mov
jo
cmpsl
outsb
pop
andb
aaa
jle
hlt
mov
cmp
dec
xor
imul
insl
push
cld
cs
push
or
xor
scas
fcoms
sbb
sti
fwait
adcb
iret
dec
cmp
or
lahf
jne
xor
adc
stos
xor
insb
or
xlat
mov
adc
adc
adc
add
or
xor
outsl
mov
stos
mov
rcll
cs
cmpl
adc
mov
insb
xor
lods
sahf
es
push
jp
mov
mov
js
loop
adc
insl
fwait
mov
mov
in
push
fcmovnu
sub
lock
pop
dec
mov
mov
mov
push
lea
mov
mov
enter
pop
mov
rcrb
loop
jmp
movsl
arpl
cs
sub
mov
add
in
bound
cwtl
mov
adc
adc
mov
jns
addb
ja
std
jmp
outsl
and
add
xor
inc
clc
mov
xor
push
loopne
mov
jle
into
xor
arpl
mov
mov
lret
pop
inc
sub
mov
pop
pop
ret
pushl
sub
out
jnp
out
bound
add
jle
fsubs
cwtl
call
mov
or
test
jmp
mov
mov
inc
insb
mov
jae
push
lcall
iret
repz
push
out
clc
adc
pop
addr16
and
divl
fisttpll
add
xchg
pop
ds
daa
out
sub
repnz
sbb
mov
fcoms
aas
xchg
jg
aad
push
cmp
shll
repnz
push
insl
xor
sub
mov
add
inc
loopne
add
arpl
outsb
sbb
out
movd
pushf
mov
jp
inc
rclb
push
sub
and
loop
addr16
jnp
mov
mov
adc
inc
dec
inc
fdivr
jmp
pop
in
inc
pop
sbb
sahf
mov
inc
jno
sbb
out
xor
xchg
jmp
lcall
movsl
mov
mov
gs
out
outsb
ret
js
add
adc
sub
iret
mov
fdivs
scas
js
pop
mov
popf
aas
daa
pop
cmp
jns
ljmp
mov
out
arpl
cmp
imull
push
dec
test
daa
and
call
pop
mov
test
shl
adc
jb
addr16
ss
daa
push
pop
mov
out
nop
and
inc
pop
pusha
xlat
xor
inc
cmp
push
mov
inc
adc
sti
or
not
outsb
cs
jno
and
fs
lcall
add
mov
inc
add
mov
lahf
addb
cmp
out
xor
mov
jnp
pushf
jmp
lret
sub
lods
sbb
imull
imul
xor
stc
arpl
mov
mov
movsl
and
cwtl
mov
scas
sahf
xor
in
dec
repnz
mov
cmp
fmull
push
in
movsl
loopne
add
adc
inc
adc
int3
push
dec
or
lea
out
int
cmp
push
jmp
movsb
in
adc
cmp
std
insl
or
inc
dec
mov
pop
mov
into
movsl
pop
testl
ret
pop
mov
fs
jb
cmpl
cwtl
dec
movsl
in
es
out
lods
jecxz
mov
mov
and
xchg
jnp
les
adc
sub
inc
imul
dec
jle
dec
lret
pop
sub
lahf
das
mov
xchg
sbbl
mov
idivb
jle
popf
jecxz
sbb
andb
faddp
jmp
pop
mov
mov
pop
out
sbb
jo
push
or
jno
mov
mov
xchg
fildll
jecxz
adc
push
shll
loope
fcoms
cmp
lahf
js
mov
fs
add
stc
jecxz
xchg
adc
sbb
mov
sbb
jge
aas
icebp
je
mov
fmuls
loop
jg
clc
sahf
call
pop
into
test
in
sbb
pop
jb
rorl
add
in
dec
add
sub
adc
sub
sub
sarl
push
add
mov
mov
and
xchg
jmp
fnsave
aaa
pxor
cmp
inc
dec
popa
and
insl
insl
pop
popa
sub
add
rorl
cmpsb
mov
or
leave
dec
cmp
sub
push
inc
je
xor
dec
and
jne
sbb
lock
mov
fidivs
inc
mov
add
movzwl
sub
push
mov
insb
jge
sti
cmp
and
push
test
fidivs
or
lcall
jl
or
push
stos
adc
lcall
jnp
out
in
adc
xchg
mov
aas
ficompl
aas
xchg
inc
fadds
movsb
loop
popa
movq
shl
or
cmpl
outsl
or
xchg
mov
inc
popa
enter
mov
pop
arpl
aaa
lret
fidivl
in
je
stc
shl
adc
and
dec
adc
push
mov
xor
sub
jmp
push
cmp
cmp
sahf
cmove
adc
adc
ds
mov
into
test
jnp
sub
push
test
adc
and
dec
xchg
push
xchg
push
jmp
lret
jl
xchg
movsb
arpl
out
sub
test
inc
loop
in
andl
mov
sbb
push
sub
in
or
lods
xchg
add
in
lods
mov
jg
les
fisttps
data16
xor
jbe
adcl
jp
adc
cltd
add
in
adc
mov
and
and
fnstenv
mov
call
scas
call
cltd
or
push
cmp
in
repz
shll
push
popf
pop
push
jo
aad
ljmp
loopne
jns
lcall
and
leave
ret
add
icebp
sti
aas
pop
ljmp
jg
and
repnz
pushf
outsl
inc
mov
insl
xchg
xchg
cld
lret
jp
mov
into
in
or
push
stc
mov
mov
xor
jnp
int3
cmp
stos
push
iret
imul
inc
sbb
out
sti
jp
rclb
push
movsb
sarl
add
stos
test
xor
dec
setae
pop
es
push
aaa
push
inc
pop
push
mov
outsl
xchg
aas
adc
cmpsl
out
fcmovu
inc
dec
cltd
pop
dec
lock
sub
xchg
pop
or
shll
scas
push
fwait
sbb
das
adc
out
lret
fcomps
push
cltd
scas
cmp
stos
not
lock
rcr
xchg
sub
add
push
insb
scas
jle
pop
jae
add
xchg
out
lods
or
mov
jp
clc
shl
add
ror
xchg
mov
hlt
std
outsb
sbb
jmp
lock
js
pop
cmp
dec
push
or
daa
leave
jb
loopne
iret
es
outsb
stos
sbb
sbb
dec
mov
sbb
aad
mov
mov
jae
addr16
xchg
add
xor
xchg
xor
xlat
ds
or
loope
in
test
sbb
xchg
cs
mov
mov
popf
sbb
popa
in
mov
movsb
mov
std
mov
cmp
ret
adc
shr
sti
stos
xor
pop
mov
fbld
jbe,pn
push
xchg
outsl
sub
aas
ljmp
insl
or
mov
stos
popf
loope
mov
mov
pop
rclb
lods
adc
jo
xor
xchg
scas
in
ds
cmpsb
sub
jle
bound
aaa
cmpsl
mov
pop
sbb
mov
sbb
push
jb
pop
inc
rolb
cwtl
mov
xchg
lods
int
mov
mov
or
xchg
in
dec
ss
and
icebp
mov
xor
lahf
icebp
sbb
test
fdivr
xchg
sub
jl
aam
out
lds
pop
into
pop
iret
ja
pusha
sub
fsubrl
mov
aam
lcall
repnz
lock
and
fnsave
xor
push
xor
cmp
jne
cmp
adc
test
gs
add
mov
stos
mov
lea
mov
orb
sbb
les
jp
xchg
jg
int3
jecxz
mov
inc
pop
sbb
scas
roll
push
ret
jo
dec
inc
jmp
loope
out
ds
inc
das
push
push
dec
sbb
jmp
xorl
decl
mov
fcmovnb
mov
jo
stos
test
mov
inc
enter
or
push
jne
out
mov
shl
dec
sbb
lods
jb
mov
add
jp
test
mov
pop
ljmp
std
cmpb
mov
ljmp
add
xchg
fs
lock
movsl
jb
push
cmp
sahf
adc
lret
and
in
repnz
repz
mov
mov
xchg
dec
jnp
dec
or
jbe
pop
shlb
sbb
dec
xchg
xchg
fisttpl
add
mov
fimuls
imul
rcr
aas
lods
xchg
cltd
cmp
sbb
aas
xchg
mov
sbb
dec
cld
xor
les
std
call
in
popf
and
sub
ja
push
add
fnstenv
cmp
ret
outsb
lods
inc
repnz
or
and
dec
cmp
outsb
ret
fidivs
push
lahf
push
jb
test
ja
inc
pop
rol
scas
mov
jmp
int
dec
mov
jmp
jle
std
mov
add
pop
sbb
xor
pushf
inc
jge
push
test
movsb
xorl
push
fbstp
ds
pop
adc
pop
mov
add
rolb
xchg
inc
xor
jl
xor
adc
mov
scas
stos
into
adc
and
push
std
shlb
aas
mov
push
in
cmp
mov
add
push
cs
jle
lock
mov
pop
fmull
cmc
cmc
pop
add
and
mov
scas
insl
push
test
xchg
xor
shl
das
sub
or
lods
mov
lds
test
clc
mov
sub
test
je
lret
lods
adc
push
mov
push
lods
push
or
out
mov
pop
inc
xchg
mov
jg
sub
jnp
mov
jno
imul
xchg
and
cmp
hlt
mov
lock
push
fadds
xchg
or
mov
cmpsb
cli
jo
pop
repz
xor
inc
sbb
adc
push
sbb
and
in
insl
movsl
xor
lret
in
ljmp
andl
cs
lds
adc
cmp
add
test
mov
movsl
pusha
adc
xor
mov
ret
adcl
cmp
test
push
pop
jb
stos
enter
repnz
inc
xlat
or
cli
into
push
push
popf
and
pop
dec
jno
or
jb
aaa
inc
stos
mov
push
cld
fldenv
ret
add
cmp
test
sub
sbb
aad
jne
jmp
shld
push
pop
xchg
pusha
std
mov
and
jo
xchg
pop
jl
iret
aam
outsb
or
lcall
fdivrl
aaa
adc
lret
sbb
jge
sbb
pushf
fnstsw
pop
or
xor
and
jne
add
or
jno
aad
and
cmp
shrl
rcrb
or
bound
push
mov
dec
xchg
into
cmp
cmp
xchg
push
jae
fmull
sbb
les
loopne
cmp
xlat
negl
inc
sub
and
dec
inc
ret
pop
lea
xchg
mov
or
or
jmp
int3
mov
das
cli
lods
xchg
and
sahf
lret
jnp
push
mov
push
sbb
iret
push
dec
xor
jne
inc
push
sbb
mov
daa
loop
repnz
in
and
push
mov
aas
leave
push
add
mov
xchg
test
icebp
mull
arpl
popf
faddl
imul
cmc
cli
mov
fwait
or
xchg
sub
test
jnp
dec
adc
xlat
aas
lahf
pusha
xor
dec
loope
and
jecxz
into
orl
movsl
je
cmc
inc
mov
jo
daa
xor
cmpsl
hlt
insl
add
xchg
or
sti
cmc
mov
insb
outsb
dec
push
dec
les
sub
out
mov
lret
aas
outsb
pop
push
pop
aad
loop
adc
adc
or
mov
iret
or
pushf
mov
dec
scas
repnz
jle,pn
les
inc
icebp
xchg
cmp
dec
xchg
mov
inc
jle
jns
cmp
negb
sbb
or
and
inc
sub
pop
push
je
jne
jl
jecxz
dec
mov
aad
pop
mov
jp
jb
sub
mov
enter
pop
sahf
xchg
cmovne
call
cmpsl
push
add
in
rcl
cltd
fldcw
adc
and
das
bound
sbb
push
aas
pop
cmp
push
repnz
jnp
testb
sbbl
loope
out
pop
inc
sbb
push
sub
push
lods
int
inc
mov
mov
sbb
xor
jle
stos
clc
shll
pop
xor
subl
adc
mov
adc
xor
push
mov
jo
lret
imulb
cmc
test
or
out
dec
mov
das
inc
ds
push
cmp
les
mov
xor
xchg
mov
cmpsb
sarb
cmc
ss
push
sti
call
lods
and
mov
mov
or
dec
pop
push
xlat
xchg
add
imul
xchg
mov
cmp
sub
icebp
nop
push
sbb
and
ljmp
sbb
int3
pop
push
sbb
jmp
pop
mov
and
adc
push
stc
scas
jle
scas
adc
out
add
fmul
aaa
add
arpl
imul
lret
push
stos
fwait
es
pop
pop
sub
ja
leave
movsl
iret
bound
insb
mov
cmp
or
mov
lret
or
sahf
roll
add
cmp
cli
adc
jns
pop
sbb
xchg
push
cmpsb
adc
bound
iret
imul
mov
adc
jmp
adc
aas
lods
sbb
pcmpeqw
cltd
cltd
mov
rclb
repz
sbb
adc
not
or
inc
pop
fsubl
fwait
in
cmpl
fnstenv
mov
fwait
lds
je
popf
sahf
fildll
lahf
xor
scas
push
loop
xchg
std
mov
mov
and
fistpll
xchg
shlb
adc
test
push
stos
fadd
daa
test
cmp
push
adc
fistl
test
sbb
mov
scas
and
add
mov
imul
jg
jge
sub
sub
lcall
sub
mov
push
sub
xchg
shll
je
test
stc
and
add
lahf
xor
xor
negl
aad
mov
mov
pop
jmp
mov
inc
xchg
rorb
incl
and
adc
scas
mov
xchg
xchg
push
dec
sub
inc
mov
inc
mov
shlb
jecxz
fcmovb
or
cli
inc
dec
imul
mov
das
outsl
mov
popa
pop
cmc
xchg
and
pop
dec
mov
in
aam
xor
sahf
sub
lret
aam
cmc
xchg
jge
cmp
push
loopne
cmp
inc
sub
adc
jle
jo
mov
insb
addr16
push
inc
mov
ljmp
push
ljmp
test
inc
popf
cvtps2pd
int3
push
dec
xchg
rcll
lea
sahf
xlat
add
add
lods
mov
cltd
loop
lcall
pop
mov
adc
jno
or
bound
mov
mov
jo
js
dec
push
cmpsb
pop
mov
push
sbb
imul
lcall
and
jne
test
pop
sub
test
or
hlt
in
xchg
mov
int
push
cs
in
lcall
xor
mov
iret
subb
cmp
ljmp
inc
cwtl
rolb
adc
shlb
aam
iret
fwait
inc
repz
test
movsb
aaa
xor
add
push
push
cmc
xor
mov
or
aad
fabs
in
out
in
xchg
ret
cmp
push
fnstsw
sub
sbb
mov
adc
and
jns
out
jo
xchg
pusha
flds
into
ret
jmp
and
cmc
mov
push
mov
xor
push
jmp
int3
mov
and
clc
mov
ljmp
pop
sub
movsl
rorl
data16
aaa
lret
jle
push
adc
dec
push
fdivs
loope
xlat
adc
je
leave
or
adc
cmp
adc
mov
mov
dec
xchg
pop
call
mov
hlt
loope
push
jns
inc
lcall
jb
jae
inc
sub
enter
out
pushf
push
xor
and
out
stc
lods
pop
xor
push
push
pop
loop
adc
sub
xchg
add
xor
xchg
push
mov
iret
cmp
repz
sbb
aad
loop
cmp
jg
jno
shl
in
jl
push
inc
push
test
fs
pushf
icebp
pop
mov
push
rcll
andl
lcall
test
push
loop
out
inc
pop
push
loop
dec
mov
aas
addr16
jo
mov
aam
push
dec
jbe
lock
and
das
adc
cmp
mov
mov
sub
push
xchg
mov
cmp
push
aad
jae
loop
dec
cwtl
cli
add
pop
or
jo
cmpl
push
or
loopne
push
ds
sbb
lds
sub
mov
addr16
xchg
icebp
pushf
fwait
mov
add
enter
inc
adc
scas
cmpsl
push
cwtl
cmpsl
xchg
int
pop
hlt
adc
rcl
pop
scas
mov
mov
js
ret
out
xchg
pusha
xchg
mov
insl
shrl
cmp
inc
lcall
sahf
xchg
sarb
jmp
test
jp
adc
nop
shlb
scas
pop
ret
cmpb
dec
mov
xor
dec
xchg
xchg
mov
test
stos
stos
dec
jae
fnstsw
adc
cltd
xchg
mov
insb
sarl
loopne
test
xor
dec
imul
push
or
in
pop
loopne
sti
inc
gs
mov
fidivl
sub
and
clc
movsb
cmpsl
adc
xorl
inc
sub
xchg
fistpll
repz
xchg
inc
sub
or
xchg
outsb
imul
icebp
sti
mull
or
sub
pop
push
stos
dec
jnp
rcll
mov
pop
xchg
xor
sarb
mov
adc
orps
cmp
stos
sub
xchg
or
mov
xchg
shrb
enter
xchg
cmp
ss
stos
scas
inc
or
outsl
cmp
frstor
sarl
and
mov
cmp
imul
or
mov
dec
scas
das
mov
sbb
mov
mov
add
mov
jb
loop
mov
and
cmc
xchg
lea
fmulp
ljmp
add
dec
pop
lret
lahf
xchg
pop
mov
pop
sbb
push
mov
imul
add
mov
adc
pushf
ds
jmp
push
push
dec
cmp
sub
pusha
jno
mov
rolb
test
sarl
and
add
sbb
pop
mov
jl
xchg
pop
cmp
jo
cwtl
adc
mov
ljmp
sbb
addb
add
mov
adc
iret
test
int3
mov
lret
fidivl
pop
mov
in
iret
add
dec
js
cmp
jae
sbb
dec
pop
dec
sub
pop
call
mov
jp
imulb
xor
push
insb
rcrl
icebp
dec
sahf
lahf
and
jl
lea
call
adc
push
sarb
inc
jp
cmc
lcall
shr
mov
xchg
sbb
fs
notl
jmp
xor
aam
pop
jo
out
stos
pop
out
jo
sub
mov
xchg
in
mov
mov
xor
mov
loope
sub
mov
imul
out
mov
pop
mov
dec
inc
sbb
sbb
mulb
sbb
ret
rcll
fs
or
insl
cmp
adc
sbb
insl
in
and
sbb
js
mov
push
xchg
xor
movsl
es
mov
popf
xor
mov
sub
jl
std
sbb
add
dec
scas
mov
enter
adc
mov
adc
or
testb
and
mov
loope
pop
xlat
sti
add
fst
push
decb
mov
or
xchg
int
pop
ss
or
and
cwtl
inc
xchg
sbb
lret
mov
mov
sub
cltd
mov
sbb
rorb
daa
inc
scas
int3
jge
xor
xor
sarl
sbb
fnstsw
rcrl
jmp
cmp
pop
cmpb
jge
xchg
lret
pop
and
and
stc
inc
adc
mov
lock
test
lock
and
sub
mov
add
pop
scas
push
push
pop
and
jnp
sub
in
xchg
div
out
icebp
jg
shrd
test
jg
subl
push
sti
lcall
jnp
cmp
mov
mov
mov
inc
cmc
int3
aas
mov
cmp
frstor
sbb
dec
or
mov
push
ja
aam
push
imul
add
std
xchg
orb
adc
pop
iret
gs
mov
sbb
sub
insl
popf
cld
fucom
lods
shll
fwait
mov
out
push
rcrl
jg
xchg
mov
dec
sub
push
jnp
inc
loope
inc
xchg
adc
outsb
lret
aas
push
adc
mov
addl
clc
pop
scas
rclb
lods
pusha
or
ret
mov
fistl
push
iret
fildl
es
iret
and
add
les
in
adc
pop
push
es
sub
jnp
mov
xor
int
in
sbb
les
lea
cmpsl
mov
sbb
jno,pt
aam
sar
test
cmpsb
ljmp
iret
cli
jmp
leave
mov
cmc
add
das
aas
in
aas
pop
ror
mov
dec
int
push
subl
sub
pop
into
inc
sbb
or
add
or
adc
add
sti
dec
mov
sarl
mov
jge
lahf
rcl
push
ret
inc
xchg
adc
cmpsb
enter
and
insl
mov
mov
ret
or
inc
aad
mov
adc
mov
dec
and
test
or
loope
in
dec
dec
repz
or
repz
jl
or
sarb
stos
jnp
adcb
ss
sbb
rorb
pop
subl
push
adc
mov
push
jnp
gs
mov
pushf
cmpb
pop
bound
adc
dec
cmpsb
insl
jecxz
mov
out
rolb
out
pop
pop
stos
push
mov
les
jg
and
xchg
hlt
out
fs
mov
cmp
aad
mov
js
pop
rcl
or
mov
and
test
dec
push
and
mov
cmc
inc
xor
mov
ja
inc
xchg
loope
rolb
icebp
stc
nop
adc
cmc
push
sub
pushf
arpl
scas
mov
aad
iret
dec
cltd
out
dec
jo
push
sbb
xchg
adcl
roll
scas
xchg
adc
xchg
adc
aam
cbtw
sbb
inc
stc
xchg
or
mov
jno
sbb
lods
imul
fisubrs
out
and
xchg
and
mov
xor
fsubrs
pop
call
sub
fimuls
sub
sbb
jp
mov
insb
jge
or
das
pushf
lods
push
cmp
mov
mov
and
pop
cs
dec
push
shrl
sub
add
in
sub
sub
xor
fs
fldt
mov
fldt
mov
mov
jge
pusha
popa
adc
cmc
pop
adc
or
aas
fsubrs
outsb
cmpsb
push
add
dec
mov
mov
adc
out
out
repz
mov
cmpb
lret
out
cmp
aas
add
nop
sahf
and
mov
js
popf
ret
or
popf
adc
pushf
xchg
sbb
xor
dec
mov
push
jle
cmp
jp
dec
fistpll
sub
frstor
add
outsl
and
mov
mov
icebp
mov
andb
std
icebp
sbb
loop
loopne
jmp
aad
in
and
push
jnp
lret
lcall
repz
jbe
out
sarl
pop
sbbb
arpl
lea
es
mov
inc
imul
xorb
fs
cmpsl
mov
sbb
outsl
cli
xor
mov
mov
push
icebp
cs
addl
out
ror
push
scas
adc
out
out
mov
push
roll
jl
xor
pop
rolb
push
xchg
outsb
and
push
iret
std
add
lock
mov
push
nop
inc
cmp
test
and
mov
imul
sub
add
jmp
cmp
and
gs
aaa
xchg
pop
dec
push
adc
cmp
dec
xchg
mov
add
cld
aas
adc
ljmp
push
mov
pushf
pop
lea
outsl
jl
inc
inc
shll
cmp
rep
add
jne
xor
or
sbb
scas
mov
icebp
enter
cmp
lret
lahf
mov
push
gs
mov
jecxz
mov
in
lock
push
aaa
pop
negl
mov
cmp
mov
pop
cmpsl
adc
fdivrs
mov
cmp
jo
mov
enter
or
adc
xor
fistps
sub
scas
pop
push
inc
jmp
stos
jno
fld
and
inc
fnstcw
adc
neg
jl
rol
bswap
daa
stos
jge
pop
call
stos
xor
and
pop
das
aas
xchg
or
xchg
add
jl
cltd
bswap
pop
sub
int3
pop
out
dec
icebp
pop
out
cmp
xor
dec
icebp
jbe
fcoms
popf
or
push
inc
cs
leave
jo
cmp
push
imul
lds
ss
in
out
xchg
or
jp
push
or
xor
scas
or
fildll
sbb
fcmovnu
dec
popf
xchg
push
movsl
pop
mov
daa
lods
loopne
sti
mov
xchg
jecxz
addr16
je
imul
imul
or
jbe
frstor
push
sbb
sub
push
jno
sbb
lods
ja
mov
lcall
pop
pop
cmp
sub
push
mov
sub
add
mov
pop
xor
adc
pop
lods
cwtl
ret
pop
jp
fiaddl
or
xor
jns
mov
sub
or
stos
or
pop
dec
addb
pop
data16
mov
addr16
adc
dec
dec
loopne
and
popf
push
cmpsb
pusha
inc
movsl
jmp
not
daa
in
inc
push
push
xchg
push
add
cli
jmp
scas
orb
imul
jne
dec
xchg
adc
dec
mov
jp
pop
rcrb
repnz
jbe
jmp
push
or
aad
repz
push
shll
adc
sbb
cmp
cld
and
lea
push
xchg
mov
mov
or
push
test
test
mov
int
icebp
faddl
repz
mov
lods
fldt
push
aaa
mov
test
popa
test
sarl
popa
and
in
add
into
movsb
xor
mov
test
sbb
faddp
fildll
lret
inc
jo
cs
or
cmp
mov
in
mov
sbb
enter
adc
dec
rclb
push
aad
push
jbe
fsubp
scas
mulb
insl
lahf
dec
fcompl
jge
mov
popf
out
sub
ffree
addr16
xlat
cwtl
subl
insb
cmp
xchg
jp
inc
or
pop
lcall
mov
fistps
in
call
lock
ds
and
cs
nop
js
cld
dec
lods
cltd
sbb
pop
sbb
jg
cltd
sub
inc
add
cmpsb
xor
jmp
fwait
cwtl
mov
arpl
fdivs
mov
cmp
jbe
xor
arpl
adc
les
jp
je
cmp
out
cmp
jns
cmp
sbb
in
arpl
mov
add
lahf
ficoms
pop
mov
nop
iret
insb
sub
mov
push
mov
jecxz
push
adc
loopne
jb
cmp
adc
cs
sub
out
jb
mov
sbbl
roll
dec
inc
fcompl
jae
or
lret
icebp
inc
mov
dec
mov
inc
rclb
dec
pop
mov
je
dec
or
mov
pop
xchg
pop
xchg
add
movsb
jl
or
adc
sub
popa
inc
inc
jbe
sbb
lahf
imul
cli
aam
std
pop
or
cmp
icebp
test
repnz
add
xchg
pop
sbb
ret
push
repnz
movsb
cmpb
int
in
mov
add
xchg
push
xor
notl
pop
test
int3
add
loopne
xor
push
rcrl
in
push
pop
xor
outsb
cltd
sbb
lea
mov
cli
andl
mov
jae
adc
jecxz
popa
inc
mov
fisubrs
mov
je
mov
out
cmc
test
push
icebp
ss
jb
int3
sbb
xchg
mov
push
xor
loope
jmp
lret
lods
jne
push
in
mov
fiaddl
add
mov
popa
hlt
adc
and
cmp
xchg
cmp
and
xchg
les
and
data16
popf
push
jo
xchg
ja
xor
mov
cli
cld
in
pop
push
pop
add
mov
pop
mov
mov
data16
lret
rcll
jmp
ret
test
fs
std
pop
movsl
jae
mov
and
mov
xor
jmp
xor
xor
lahf
or
leave
mov
call
out
aas
adc
es
or
test
dec
mov
xchg
mov
push
cwtl
cld
push
sbb
jge
xor
pop
inc
or
xor
pop
lcall
inc
ret
mov
and
mov
jns
pushf
decb
aas
loope
sarl
je
xchg
lret
xlat
imul
ja
out
mov
or
imul
push
out
stos
push
das
icebp
pusha
out
sub
cld
push
mov
sbb
jo
addr16
fsubs
inc
pop
push
ret
aam
dec
dec
ja
jle
stos
cmc
in
dec
aad
mov
pop
and
pop
jle
arpl
rcll
dec
mov
add
cli
pop
adc
sar
mov
adc
add
push
mov
das
add
pop
add
jmp
fidivl
enter
cwtl
or
jmp
mov
xor
mov
insl
push
xor
mov
fistl
aam
js
rcr
and
add
jle
rorl
rolb
xchg
ret
rolb
xchg
ljmp
inc
mov
cmp
dec
mov
xchg
push
les
adc
lods
clc
mov
jmp
fwait
dec
xchg
nop
adc
jp
clc
pop
iret
push
cmp
shll
popa
in
in
fistl
in
push
mov
adc
push
incb
lods
inc
andb
jge
pushf
jbe
movsb
and
mov
and
nop
push
sbb
ds
andl
fsubrs
pop
dec
ja
add
fisubl
scas
sahf
and
inc
in
aas
cmp
cmp
xchg
or
subb
mov
sbb
cmpsl
add
imul
popa
push
mov
add
jmp
push
icebp
add
jno
idivb
sub
pop
sub
lcall
sbb
lcall
add
sbb
push
jecxz
mov
inc
mov
loope
outsb
fwait
jns
xchg
ror
add
ljmp
mov
jge
cli
insb
movsb
add
mov
jb
sub
lock
pushf
sub
and
es
sub
cltd
sub
pop
and
xor
js
jmp
sub
xchg
repz
dec
inc
push
mov
loopne
dec
out
mov
pop
pop
mov
mov
test
dec
lcall
sbb
push
cmpsb
imul
test
test
mov
mov
or
or
clc
inc
sub
mov
nop
mov
dec
or
jae
dec
push
push
sbb
icebp
test
adc
jle
xchg
lret
insb
jmp
repnz
xchg
xchg
das
fildll
addr16
ljmp
mov
dec
fisubrl
into
lds
sub
xchg
fimull
xchg
mov
push
push
lds
in
sti
movsl
das
sti
mov
cmp
pop
pop
and
jmp
jbe
mov
test
pop
pop
push
int3
jge
test
mov
jle
enter
cmp
add
mov
dec
into
or
lock
dec
fld
test
and
addb
js
testb
mov
into
ja
dec
mov
lahf
mov
fstps
xchg
rorb
insb
shrb
mov
idivl
mov
nop
jle
pop
filds
mov
cltd
push
ds
jg
add
xor
std
dec
inc
shl
mov
cwtl
pusha
cwtl
cwtl
fldcw
loope
mov
cmpb
scas
xchg
imul
pop
icebp
add
sbb
jae
outsl
sub
js
add
xchg
inc
test
dec
cmpsl
or
cmpsb
inc
and
inc
xor
jge
ljmp
adc
jb
rcll
mov
jmp
lretw
in
dec
bound
test
xor
hlt
rcll
out
dec
push
gs
jns
mov
cmp
xor
decb
out
sub
sub
mov
dec
add
loope
ljmp
aas
arpl
cmpsl
mov
lahf
sbbl
leave
xchg
sub
je
mov
rcl
mov
insl
fnop
inc
mov
test
test
jl
fucomi
adc
jecxz
dec
or
push
aaa
das
adc
cmpsb
mov
imul
ror
sti
fadd
mov
or
push
movsl
lret
loopne
std
jno
dec
add
push
inc
ret
mov
es
mov
push
jns
and
sub
setg
xchg
imul
loop
out
test
ja
cmp
adc
lcall
sbb
ds
fsubp
in
lock
imul
mov
outsl
test
shrl
stos
mov
xchg
and
adc
pop
je
shlb
and
arpl
mov
xlat
arpl
jo
divb
jecxz
cmp
test
push
pop
leave
iret
cmpsl
fdivrl
dec
outsb
cmp
icebp
mov
sar
push
cmp
or
mov
aaa
dec
enter
int
or
in
ja
movsl
sbb
aaa
inc
loop
inc
dec
sub
push
outsl
out
jg
cmc
rclb
rcrl
lods
fldt
cltd
cli
sub
pop
push
or
pop
mov
adc
ds
push
iret
clc
inc
adc
and
sahf
stc
clc
fiaddl
aas
push
aas
not
mov
pop
std
xchg
and
mov
cld
and
sub
stos
rorb
jno
popf
int
lcall
xor
and
adc
xor
sbb
test
inc
enter
daa
movsl
cmp
cli
insl
mov
push
mov
fnsave
xchg
lods
inc
pop
ret
inc
cmp
or
sbb
test
popf
fisubrs
mov
dec
pop
add
sbb
leave
outsb
cwtl
xor
pop
rcrb
mov
imul
jge
pop
add
cmp
cli
add
xchg
insl
adc
jg
jecxz
pop
sub
std
sahf
and
icebp
cmc
js
pop
insl
out
and
push
fildll
xchg
adc
cmp
jecxz
xchg
test
dec
rcll
sub
rcr
sahf
push
mov
stc
in
inc
mov
fsubrp
scas
mov
jns
sbb
mov
cli
adc
cmp
out
or
mov
dec
fmull
repnz
mov
jne
mov
roll
lcall
lcall
notl
ret
jb
push
ror
and
shrb
imul
fldt
fcomps
testb
inc
mov
xchg
mov
mov
fisubrl
aaa
test
sbb
imul
xchg
pop
call
std
test
shl
dec
jae
xor
int3
fbstp
jnp
ljmp
pop
and
fsub
push
jno
sbb
xchg
test
mull
or
xchg
bound
push
imul
pop
bound
pop
pop
sub
repnz
lahf
stos
mov
popf
je
dec
xor
out
out
stos
mov
mov
or
fstpl
fidivl
cmp
rorl
add
daa
mov
or
outsb
mov
dec
cmp
add
inc
inc
ret
enter
push
dec
inc
add
aam
push
and
jae
or
into
fstpt
dec
movsb
or
stc
pushf
in
sbb
jns
frstpm(287
adc
testb
stos
lock
fsubrp
push
es
scas
inc
incb
xchg
jae
jmp
adc
or
loopne
and
mov
lds
data16
pop
sub
jp
jge
test
sahf
aas
clc
fs
cmp
fcompl
mov
sub
jne
inc
leave
sub
adc
mov
jns
mov
movsl
mov
rcr
or
scas
sbb
mov
aas
mov
rclb
imul
arpl
jbe
ljmp
dec
jge
xchg
test
movsb
or
gs
int
orl
push
pop
rol
pop
mov
cmp
dec
nop
dec
sbb
rclb
and
ret
pop
inc
mov
movsb
dec
stos
shrb
mov
mov
movsl
fidivrl
rcll
sub
test
daa
and
out
jnp
lds
subb
sub
sub
pop
stc
mov
scas
pop
les
in
les
sbb
stc
inc
jle
dec
cltd
stos
jns
icebp
jl
xor
test
imul
jmp
jle
subb
lahf
xorb
or
arpl
cltd
jns
xor
dec
adc
and
sbb
cmpsb
sub
push
fcoms
leave
pusha
jp
push
mov
sbb
xor
mov
xchg
add
jmp
ja
lcall
add
mov
jle
pushf
xchg
fs
cmp
sbb
jg
test
adc
inc
lcall
push
cmpsl
sub
cmp
push
xchg
ret
ffree
dec
rcr
fadds
ja
xchg
loop
out
outsl
scas
fistl
aad
dec
ja
notb
or
inc
sbb
or
pop
inc
adc
mov
xor
push
mov
or
je
mov
aad
push
pusha
flds
rclb
leave
pop
mov
or
fistpll
aas
invd
sarl
popf
push
mov
cmc
push
mov
add
pop
aaa
jmp
insl
and
dec
pop
jg
cmpsl
je
and
xor
imul
sbb
icebp
enter
je
iret
nop
and
lret
xchg
mov
jg
ss
in
xor
std
insb
jecxz
popa
add
or
jnp
test
mov
push
dec
xor
mov
subb
clc
cmpsl
mov
add
push
popa
lcall
add
jo
ja
push
add
adc
lahf
aam
mov
sti
pop
ss
rcr
lods
mov
bound
mov
mov
adc
bound
xchg
lods
pop
jns
sbb
cmpsb
pop
test
ret
sub
inc
movsl
in
mov
jg
lea
iret
jg
inc
or
mov
outsl
push
cmp
ss
bound
popa
sar
jae
andb
mov
jg
jge
push
jno
pop
mov
enter
data16
repz
cmp
inc
addr16
fwait
pop
test
into
addr16
pop
cltd
out
pop
inc
xchg
out
shll
out
adc
add
mov
lret
movsl
loope
fcom
ja
lods
gs
mov
jp
rclb
inc
pop
or
loop
in
outsb
xchg
or
push
lds
adc
and
out
xchg
xchg
cmp
scas
shrb
lods
lahf
leave
mov
addr16
mov
mov
sti
in
and
fldl
xchg
add
adc
jae
add
test
dec
out
jbe
add
cld
icebp
xor
mov
in
mov
mov
icebp
add
insb
push
pop
dec
mov
jnp
adc
xor
dec
and
push
out
and
mov
mov
lret
divl
dec
cmp
push
cltd
std
sbb
dec
xor
cli
imul
outsb
loop
lock
mov
aam
add
cmp
hlt
bound
cmp
cmp
xor
nop
push
pusha
jecxz
mov
lahf
neg
stos
in
fldenv
fnstsw
inc
or
mov
cmpsl
or
js
dec
pop
outsl
or
lds
iret
push
cmpsl
fisubs
loopne
lock
in
xchg
jbe
test
outsb
and
movsl
push
jb
js
inc
insl
cld
cmp
int
in
js
inc
xlat
ja
in
lahf
push
repnz
and
enter
sbb
aad
push
xchg
cld
add
cwtl
cwtl
rorl
rcll
insb
adc
out
mov
jp
sarl
je
adc
pop
into
pop
xchg
and
mov
jmp
mov
jle
xor
mov
arpl
fsts
lcall
xlat
subb
pop
adc
stos
add
push
xor
inc
adc
aam
pop
ret
ds
and
addb
xor
lock
addl
jmp
punpckldq
sbb
fwait
aas
xor
enter
pop
xchg
or
hlt
adc
repnz
mov
dec
sbb
mov
popf
lret
inc
pop
xchg
iret
xlat
hlt
into
scas
sub
pop
sbb
dec
lods
inc
scas
pop
adc
jo,pt
icebp
xbegin
bound
testl
addr16
and
dec
mov
dec
adc
js
sub
inc
fstpl
int3
or
fstpt
xchg
dec
ret
add
testl
jne
mov
pushf
ss
xor
mov
enter
dec
loope
stc
stos
or
pop
ficoml
push
adc
push
enter
loopne
push
out
loop
pop
fists
cmc
lea
lcall
sub
jne
shll
jns
popl
insl
imul
call
adc
dec
out
sbb
xchg
mov
pop
cwtl
sub
cwtl
xchg
xchg
sahf
imul
lea
xchg
xchg
xor
xchg
push
mov
pop
inc
inc
dec
shld
dec
std
push
movsb
scas
daa
xlat
inc
xchg
xchg
imul
pop
cmp
pop
out
xor
adc
inc
pop
dec
imul
and
mov
bound
jle
dec
push
xor
sub
xor
mov
cli
out
push
xor
mov
jp
loope
nop
popa
nop
xchg
cs
xlat
mov
jmp
dec
mov
inc
mov
inc
cmp
xchg
pop
test
ret
pop
add
fwait
or
ss
mov
adc
xor
jp
outsb
push
or
or
add
ret
hlt
or
out
cs
cli
imul
rcll
pop
sub
add
inc
flds
or
jb
fwait
ljmp
mov
les
leave
into
fimuls
stc
jns
xor
xorl
shl
orb
aaa
inc
inc
xchg
and
or
divb
aad
sub
pop
xchg
dec
movsl
jg
ljmp
mov
pop
subb
xchg
out
ret
adc
jnp
fwait
xchg
mov
cmp
enter
lods
mov
add
mov
sbb
outsb
pusha
jge
xchg
lds
mov
loopne
frstor
jns
inc
inc
sub
jbe
cwtl
push
subl
xor
inc
into
jmp
mov
sbb
push
ret
cltd
flds
into
test
adc
pop
dec
inc
adc
aaa
xor
iret
shrb
jno
mov
mov
sub
mov
inc
sbb
ror
lock
bound
movsl
les
mov
or
push
jp
mov
xor
ss
outsb
pop
mov
sub
or
insb
loope
sub
push
xchg
fstps
lea
cmc
push
mov
xchg
push
out
mov
xchg
sub
pop
shl
push
jno
xor
arpl
push
mov
mov
jle
xor
cmp
lea
data16
mov
out
incb
mov
xchg
aam
jae
cmpsb
dec
or
jl
sbb
add
mov
dec
imul
dec
or
pop
insl
jbe
and
addr16
addr16
dec
xchg
push
aad
stos
jmp
out
ds
mov
push
lds
sub
cmp
dec
cmpb
push
test
stos
add
jmp
shl
sub
inc
mov
cmp
loopne
lods
jns
mov
das
mov
adc
push
cmp
or
push
sbb
out
mov
push
adc
test
inc
ds
xchg
loopne
jae
dec
pop
call
pop
movsb
jle
sahf
sub
push
into
fwait
inc
ljmp
loopne
push
inc
sub
lds
in
pop
loop
lods
inc
call
lret
outsl
mov
rclb
jnp
imul
fdiv
imul
aam
dec
sub
pop
movsl
xchg
add
push
loop
mov
mov
hlt
mov
pop
jecxz
inc
mov
mov
ret
jb
rorb
mov
scas
dec
jp
pop
mov
imulb
repz
fucomip
xchg
int3
inc
test
fwait
faddl
dec
jbe
jp
dec
lahf
pop
ds
pushf
out
add
inc
pop
inc
int
out
inc
ljmp
inc
mov
popa
sarl
fcoml
push
out
out
jns
xchg
and
mov
sub
mov
xchg
fadd
lret
sub
inc
jecxz
mov
jbe
movsl
and
and
stos
mov
test
cmpsl
rep
lods
cmpsb
lds
inc
je
or
xchg
push
pop
sub
cli
das
ja
leave
in
test
divl
sbb
push
xchg
aad
js
push
cmp
jnp
nop
dec
sub
sbb
xor
add
outsb
cld
sbb
aaa
sbb
bound
imul
and
out
jbe
ljmp
pop
sub
cmp
arpl
mov
mov
xchg
popa
sub
cmp
and
sarl
push
out
fwait
pop
cmp
mov
or
test
mov
dec
pop
in
mov
jbe
loope
pop
push
add
leave
das
scas
lea
call
inc
imul
jl
xor
sub
sarb
push
lahf
inc
xchg
xor
int3
lcall
in
adc
push
push
arpl
test
stc
adcl
stos
cs
mov
lea
and
mov
call
inc
rorl
xchg
leave
lahf
push
into
and
shlb
call
mov
pop
mov
adc
mov
dec
lret
lock
jb
subl
mov
push
adc
mov
adc
add
out
out
jle
in
in
or
mov
rclb
mov
push
mov
jb
scas
ljmp
scas
repnz
cmpsl
sub
repz
cmc
gs
dec
mov
inc
mov
xchg
and
sti
adc
inc
xchg
ljmp
mov
sbb
cmp
mov
push
ljmp
std
sub
das
mov
cmp
mov
data16
leave
cmp
mov
fwait
mov
fsubp
push
pop
rcr
cmpsb
jg
stos
mov
adc
pop
and
pop
xchg
imul
mov
maskmovq
nop
addr16
mov
mov
xor
mov
push
mov
xchg
int
lret
jle
pop
daa
call
loope
sbb
cld
sub
dec
cvtdq2ps
pushf
xchg
stos
in
push
push
or
push
pop
out
lret
repz
inc
push
push
cli
sub
pop
sti
jns
je
int
hlt
or
or
mov
daa
fwait
dec
and
inc
mov
add
push
pop
inc
imul
popf
loopne
or
mov
and
aaa
pushf
mov
mov
mov
popa
dec
mov
add
mov
mov
pushl
mov
xchg
repz
pop
push
mov
out
psraw
mov
push
popl
leave
movsb
and
and
shrb
int3
icebp
stos
cmc
jnp
outsl
push
mov
bound
dec
shll
sbb
inc
inc
mov
adc
mov
jmp
dec
jbe
push
testb
int3
mov
aaa
or
and
cmc
fwait
sbb
xchg
ja
mov
mov
fcompp
cltd
mov
sub
pop
outsb
ja
adc
pop
jle
sbb
xor
stos
dec
mov
lds
in
jae
dec
mov
sarl
and
dec
mov
xchg
cltd
mov
outsl
mov
push
fwait
sbb
je
shll
cmc
rolb
out
insl
bnd
imul
cmp
ds
sub
jge
sti
in
jge
dec
mov
mov
cmpsl
clc
mov
jae
jae
dec
movsl
jno
enter
daa
idivl
in
add
mov
mov
das
mov
xor
les
mov
in
jo
push
data16
pop
xlat
pop
jge
lds
pusha
cld
roll
fdivr
sbb
push
fbld
in
mov
or
dec
jae
mov
insl
inc
push
inc
xor
pandn
mov
mov
cwtl
andb
sarb
lods
lock
js
std
lret
aaa
out
push
sbb
dec
rcrl
sahf
pushl
movsb
adc
je
sti
mov
dec
push
lahf
loop
outsl
incb
sbb
jne
stc
or
sahf
xor
sub
add
in
lret
or
cmpsb
push
mov
adc
jo
push
mov
std
cmp
cli
mov
mov
xor
stos
inc
xorb
dec
jg
pushf
shlb
and
lds
pop
sub
add
lock
or
or
adc
pushw
cld
loop
ficoml
ljmp
jmp
jns
and
rcl
idivl
mov
xor
inc
adcl
outsl
lds
psllw
jne
cli
mov
loop
cmp
jge
nop
ret
fsubrl
fwait
xchg
cs
or
lret
xchg
lds
arpl
mov
cmp
jle
pop
mov
sbb
pop
pop
std
or
dec
jnp
push
jmp
xchg
sbb
mov
movsb
cli
push
mov
mov
stos
cmp
xchg
push
mov
pop
sbb
and
dec
cmp
dec
loope
lahf
ljmp
lret
addb
cmc
xor
js
cmp
shlb
dec
insl
int3
stc
mov
gs
pop
js
mov
dec
dec
sub
push
mov
int
sbb
jmp
pop
aaa
add
jbe
test
mov
adc
mov
iret
jmp
push
xchg
out
addl
outsb
xchg
movsl
cs
out
insb
push
and
mov
addr16
test
adc
lods
xchg
cmp
mov
xor
jns
imul
xchg
pop
int
jge
test
ret
adc
js
fs
inc
in
pop
out
mov
xor
int3
enter
jne
and
sub
dec
fsubr
push
cwtl
popf
imul
mov
dec
jb
mov
mov
in
adc
mov
dec
das
xor
pop
xchg
jns
push
cmp
sbb
lret
in
adc
in
dec
cwtl
clc
idivl
inc
jle
sbb
xor
add
push
sub
leave
or
ret
out
lahf
push
jle
inc
mov
add
xchg
std
or
loop
lret
loope
das
cmpsb
pop
dec
adc
in
dec
xor
sarl
pavgb
mov
push
xchg
or
pop
jo
push
repz
cmp
iret
adc
or
inc
add
shll
jnp
add
nop
push
pop
add
call
mov
inc
les
dec
test
and
adc
cmp
jg
sti
inc
push
stos
mov
cmc
pop
dec
xchg
mov
mov
inc
or
dec
mov
pushf
loope
jno
jge
scas
sub
cmpsl
sbb
sbb
xchg
dec
dec
inc
sbb
dec
or
mov
repnz
addb
aad
mov
mov
out
inc
jp
insl
test
mov
lret
das
stc
daa
lcall
pusha
mov
std
js
mov
inc
jb
xorl
stc
ja
pop
maxps
or
add
and
jge
adc
push
sub
xor
mov
jo
cmp
insb
nop
aas
int
mov
mov
lea
mov
call
xor
adc
daa
out
mov
inc
pushf
mov
movsl
adc
xchg
and
je
je
stos
imul
or
cmpsb
ds
push
addl
pop
icebp
outsb
and
shrb
inc
xor
popa
ret
and
clc
pop
sbb
fisttpll
stos
mov
in
repnz
loope
idivl
pop
maxps
mov
outsb
pop
pop
nop
lcall
fwait
sbb
and
pop
lods
mov
or
cmpsl
xor
cmp
adc
pusha
pand
loop
cmc
pop
push
outsl
clc
push
cmpsb
xor
out
xor
push
jo
lret
rorl
pop
cwtl
fwait
mov
mov
jae
loope
repz
in
aad
fcoms
mov
or
adc
mov
jb
mov
xchg
dec
sbb
jecxz
sbb
pop
add
cmp
inc
fstps
testb
inc
xorl
out
and
jg
pop
jns
and
xchg
inc
sub
pop
cmpsl
xor
jnp
movsb
dec
pushf
mov
jg
pop
push
lods
sbb
mov
dec
ljmp
or
seta
into
cmp
cmpsl
mov
into
push
inc
jns
movl
fistpl
mov
aas
lret
sbb
sub
out
dec
mov
lock
js
stos
leave
in
cmp
popf
les
xor
mov
push
std
xchg
or
pop
adc
push
lcall
inc
xchg
insb
popf
push
int
out
sub
jle
inc
or
fisubrs
adc
dec
inc
imul
repz
push
lods
lods
pop
adcl
rcrl
in
dec
add
sub
maxps
lea
bound
mov
mov
adc
jl
rcll
mov
xchg
shll
fistpll
add
push
jmp
lods
jmp
loop
cmp
mov
das
jb
cmp
pop
stos
jmp
mov
mov
fldcw
xchg
mov
mov
cmp
xor
mov
jecxz
push
ficomps
xchg
leave
and
aas
aaa
and
pop
arpl
cli
stc
lock
xor
and
stos
lahf
lods
pop
repz
cmc
push
aaa
sub
pop
insl
stos
sub
cli
and
icebp
add
sahf
sub
jne
push
cmp
cmp
pop
jle
push
ret
pop
addl
inc
mov
adc
scas
mov
sbb
add
in
mov
mov
mov
mov
shrb
or
mov
cmp
mov
mov
add
test
add
xchg
rcrb
and
fisttpl
out
sub
enter
fwait
mov
add
inc
jmp
in
movsl
fdivl
lret
mov
arpl
cmp
test
or
call
adc
lea
jne
mov
pop
std
push
lea
jb
fsubl
xlat
lods
jae
jl
xchg
test
enter
jo
push
mov
rcl
push
mov
sbb
mov
repnz
xchg
lods
inc
pop
into
cmp
mov
fcmovb
fiadds
mov
xor
xor
loopne
adc
push
daa
dec
jnp
pop
mov
xchg
imul
in
xor
inc
mov
fucompp
inc
push
jge
fistps
das
incb
rorb
cmpl
sbb
adc
scas
test
cmp
testl
dec
push
std
lcall
push
addr16
scas
hlt
lock
xor
cmp
sub
mov
cmc
sub
movsl
cmc
repz
xor
cld
push
insl
xor
test
sbb
mov
add
incb
pmovmskb
add
mov
popf
pop
or
mov
loop
and
sarb
mov
xor
pop
leave
push
xor
jg
andb
xchg
outsb
xor
push
push
xchg
push
sarl
xchg
lret
loop
sbb
std
arpl
and
mov
jo
sub
pop
mov
xor
or
xchg
mov
loope
dec
sub
je
repz
in
and
or
lahf
loope
pop
xchg
or
cli
add
inc
sbb
xchg
mov
movl
sbb
push
jl
inc
push
test
lock
add
adc
nop
xchg
jb
pop
mov
and
out
adc
in
ljmp
adc
les
cmp
mov
xor
jle
add
or
test
or
jecxz
rcrb
push
push
mov
jnp
rorb
cltd
fs
inc
icebp
or
dec
lods
xchg
nop
inc
or
icebp
sbb
int
test
ljmp
mov
sahf
adc
mov
shrb
push
ja
adc
jg
mov
adc
xor
and
arpl
aaa
lea
cmpsl
xor
cmp
pop
imul
or
ret
push
outsb
or
aas
mov
mov
pop
insb
xor
xchg
cwtl
lcall
sbb
jp
mov
add
push
rol
xchg
lcall
push
add
stos
mov
test
mov
out
mov
je
xchg
clc
mov
adc
jno
or
xor
popf
repnz
ret
std
insb
call
cmpsb
jnp
cmp
aam
leave
sahf
shll
cmp
in
sub
add
fldcw
and
sti
popf
pop
push
stos
call
xchg
pop
mov
in
and
arpl
or
pop
cs
cmp
aaa
sbb
sti
out
xchg
add
xor
xlat
mov
dec
mov
mov
xor
jg
je
int
jno
push
fsub
sbb
mov
insl
inc
data16
les
lock
push
aas
fidivs
outsb
cs
fcompl
lret
pusha
jb
test
ds
cmp
leave
dec
push
clc
stc
push
sub
rcrb
adc
pop
sbb
sbb
mul
aam
cmpsb
xchg
sub
dec
xchg
cmp
test
inc
cmp
in
nop
cwtl
aam
xor
xchg
xlat
addw
mov
mov
ds
test
rclb
mov
jae
inc
inc
push
or
movsb
adcl
xchg
sbb
add
jmp
jb
loop
adc
mov
out
ljmp
loope
inc
mov
mov
push
mov
loope
and
pop
mov
inc
adcb
loop
lret
mov
pusha
push
push
lods
imul
jns
fmull
mov
leave
dec
mov
xor
lods
and
movl
or
or
rolw
push
mov
sahf
xchg
mov
test
dec
jb
ret
mov
mov
mov
jp
orb
and
test
sbb
dec
pop
lahf
inc
out
loop
icebp
in
pop
pop
push
jmp
dec
in
jg
mov
sub
mov
cmp
mov
jg
push
push
movsl
out
scas
cmpsb
or
mov
movsb
mov
mov
fs
and
dec
cmp
and
sbb
jmp
sbb
arpl
jg
popf
outsb
ret
lret
jae
push
aas
stos
lods
in
and
mov
enter
mov
pop
lret
imul
loope
add
insb
out
enter
loope
add
push
or
push
cmp
pop
outsl
cmp
outsb
xchg
lods
sbb
aad
sub
fisubl
add
filds
stos
sbb
mov
or
push
stos
shlb
icebp
jne
and
xchg
and
sbb
sbb
xchg
stos
sarb
and
andl
shlb
cmp
push
sti
lock
pushf
mov
iret
mov
and
dec
enter
and
dec
push
push
insl
mov
and
mov
mov
test
inc
inc
mov
push
push
pop
das
insl
mov
loop
lcall
push
push
movsb
adc
sahf
es
inc
xchg
sarb
jne
mov
push
leave
xor
clc
add
mov
arpl
pop
mov
movsl
stos
cltd
jmp
sbb
mov
shrb
mov
and
dec
jecxz
enter
fisubs
test
xchg
pop
mov
ficoml
iret
hlt
in
mov
pop
and
scas
and
in
mov
out
mov
cmp
or
orl
pop
xor
in
movsb
push
aaa
ret
push
out
loop
lret
inc
mov
xchg
cmp
jnp
loop
sub
lods
xchg
mov
orb
push
dec
out
lret
mov
int3
in
xchg
pop
out
jns
jae
mov
jo
ljmp
xor
daa
cmp
xchg
movsb
stos
push
aaa
ds
jae
test
mov
push
add
fdivs
xor
lods
and
sbb
sbb
adc
jo
sub
mov
xor
idivl
movsl
js
or
outsb
pop
addr16
jae
das
mov
push
sub
les
cmp
mov
imul
fldcw
sarb
ret
sbbl
xor
mov
lret
push
push
pop
andl
les
outsb
adc
mov
add
out
adc
ds
cmpl
sbb
ja
xchg
cltd
movsl
sbb
mov
inc
sti
hlt
ret
pop
ljmp
dec
pop
movsl
orb
push
dec
out
leave
inc
mov
daa
or
test
es
jns
inc
cmp
cmp
lahf
xorb
push
jno
dec
adc
jecxz
or
imul
jb
pop
enter
adc
jecxz
stos
shrb
fs
or
shrl
sbb
xor
xor
ds
cmp
daa
les
cmp
mov
dec
ret
icebp
push
jne
jle
inc
int
jb
int3
xor
mov
inc
call
adc
inc
pop
cmp
scas
xorl
xor
test
movsl
jp
dec
pusha
incb
dec
add
xchg
jns
adc
fwait
mov
push
jno
mov
mov
in
into
pop
int
xchg
mov
rcrl
pusha
fs
dec
dec
jle
mov
aad
lahf
pop
testl
cmc
out
mov
and
outsl
push
xchg
add
stos
lret
pop
pop
imul
jge
ljmp
xchg
sbb
xor
mov
fcom
xchg
mov
adcl
push
pushf
mov
cli
mov
adc
ret
lahf
cmpsb
mov
mov
outsl
js
cmp
adc
pusha
clc
fistps
ds
lahf
push
or
sarb
test
mov
notb
inc
fsubl
xchg
pop
lret
dec
lea
cmp
fnsave
pop
lds
repnz
mov
les
fwait
jnp
cmp
loop
lds
adcb
cwtl
xchg
rclb
push
lods
lds
cmp
out
arpl
mov
out
jne
pop
xchg
fcmovnb
mov
pushf
out
lahf
jbe
insl
jb
stos
les
xchg
dec
inc
and
dec
mov
mov
lods
cmp
sarl
les
sbb
pop
pop
jns
jg
mov
ljmp
add
icebp
sarl
jg
lcall
addr16
xchg
and
jecxz
xor
je
mov
loop
test
aas
dec
pop
imul
movsb
push
xchg
mov
mov
ss
inc
je
fsubrs
jb
pop
add
fucom
inc
insb
xor
inc
xchg
push
pop
pop
xchg
xor
mov
sub
dec
mov
cmp
cmpsl
jg
ljmp
jl
clc
call
pop
or
mov
movsl
mov
ds
xorb
repnz
mov
cmp
adc
stc
idivb
inc
fiadds
push
lret
jge
push
mov
xor
sub
pushf
jp
sub
push
inc
pop
add
jl
and
jae
pop
add
pop
sub
xor
add
and
sbb
aas
test
pusha
cwtl
jns
cmp
cmpsl
sbb
mov
mov
or
adc
iret
test
push
cmp
push
int
add
daa
sar
cmc
shlb
jmp
fcoml
scas
lods
mov
scas
pop
adc
stos
pop
das
cs
repz
jb
pop
sbb
inc
mov
xchg
sub
jg
scas
test
in
lea
and
fnstsw
push
aad
jns
inc
or
sbb
pop
dec
repnz
test
scas
jne
mov
imul
xchg
adc
dec
repnz
or
sbb
aaa
arpl
ds
jmp
out
mov
pop
dec
stc
push
push
cmp
rcl
call
cmp
xor
and
push
imul
pushw
mov
outsl
loopne
lds
out
cmp
mov
fistl
jmp
jae
loopne
into
inc
push
pop
pop
pop
lret
scas
fadd
lea
pop
push
mov
mov
inc
dec
cmpsb
adc
push
mov
lods
jb
enter
lcall
pop
or
fcomp
cmpsl
adc
adc
xor
mov
inc
aaa
loope
idiv
mov
and
sub
cmp
imul
cli
jg
test
nop
push
insl
jno
jbe
push
xchg
inc
pop
xchg
push
jge
ljmp
out
aam
add
test
mov
or
icebp
cli
push
repz
sbb
insb
push
mov
sti
xor
out
adc
or
add
and
movsb
jge
daa
mov
movd
mov
jnp
sbb
jnp
dec
push
mov
je
or
mov
jns
cmp
xor
push
xor
fs
imul
jnp
add
cltd
divb
divb
adc
xchg
fisttpl
mov
je
mov
sub
cmpsl
add
cmpb
das
inc
stos
adc
in
addr16
aad
ss
push
hlt
les
xlat
sub
or
jne
stos
mov
or
outsl
mov
mov
in
xorl
and
incl
int3
cmp
add
sti
lahf
mov
mov
cmpsb
jl
or
int
aaa
mov
cli
inc
push
test
jbe
xor
mov
mov
je
jb
pushf
aaa
enter
ljmp
jbe
cli
dec
shrb
xor
and
shll
inc
pusha
pop
int3
into
call
je
fsubr
test
cwtl
lahf
or
shll
nop
dec
lds
or
std
lods
pop
mov
lock
cmp
mov
nop
pop
outsl
ret
fisttps
xchg
mov
inc
clc
fcoms
dec
sbb
xchg
mov
outsb
leave
xor
gs
xchg
or
jecxz
test
mov
mov
mov
mov
fisubl
pop
lods
mov
cmpsl
popa
inc
out
out
push
fwait
cmp
test
insl
xor
pop
fs
sahf
mov
mov
mov
sbb
sub
adc
in
push
movsb
xchg
pusha
jg
shll
and
inc
rol
adc
xor
inc
mov
xchg
push
in
insb
cmc
ficoms
xor
mov
in
push
outsl
imul
or
mov
mov
xlat
test
imul
pushf
pop
repz
jns
or
or
pop
js
push
inc
aam
inc
jmp
inc
hlt
xchg
loop
cwtl
or
jp
lods
repz
xor
add
xchg
jp
sahf
in
jnp
push
test
sub
stc
xchg
pop
les
dec
dec
mov
andb
scas
cmp
sbb
popa
xchg
fdivrs
mov
imul
xchg
pop
or
in
pop
pop
pop
enter
aad
daa
fwait
xor
das
xchg
dec
aad
hlt
and
and
fisubs
paddq
movsl
mov
pop
stos
mov
mov
arpl
jns
lret
dec
pop
popf
inc
aam
xor
push
in
pop
push
test
out
ficoml
faddp
out
ja
pushf
pushf
mov
shl
out
cs
xchg
push
xor
lock
mov
add
aad
test
loope
jb
cmp
cmpsb
and
outsl
push
xchg
dec
and
mov
sub
cmp
mov
decb
ds
sbb
icebp
push
sahf
sub
sub
aam
push
ljmp
jmp
push
popa
lret
int
divb
xchg
add
xor
or
and
dec
sub
mov
sbb
cmpsl
mov
call
mov
daa
loop
sbb
pop
out
jno
mov
inc
inc
rorl
xchg
inc
add
mov
jnp,pn
lahf
aad
arpl
dec
or
jbe
xlat
jo
mov
mov
mov
jmp
jns
push
repz
icebp
pop
stc
push
cmp
adc
mov
in
lods
adc
push
xor
addb
imul
adc
les
add
xor
add
scas
ret
sub
xor
xor
jns
rolb
pop
cmp
lock
out
and
and
out
adc
cmp
dec
stc
data16
lea
nop
std
shlb
dec
ret
cs
push
cmp
leave
inc
out
ds
adc
mov
pop
xor
inc
mov
cmp
xchg
cli
adc
dec
pop
ss
test
ret
shll
fwait
xchg
js
xchg
in
cmp
arpl
dec
cmpsb
adc
movsl
shlb
mov
mov
fcompl
mov
cmpsl
add
fwait
mov
mov
lea
out
add
shlb
flds
fwait
test
jnp
mov
repz
jg
xchg
je
pop
inc
add
int
flds
push
push
ljmp
rcr
arpl
mov
mov
inc
std
fisttps
in
inc
ss
cmp
pop
pop
adc
int3
add
push
push
mov
test
es
push
addl
xor
inc
cmp
loopne
ds
es
je
sbb
addr16
mov
gs
xor
std
jns
mov
adc
xchg
jmp
or
or
cmpsb
mov
pop
add
sbb
jo
and
adc
adc
int
cs
das
pop
and
xor
jne
pushf
mov
loop
ds
mov
adc
jl
sbb
call
jmp
cmp
or
jbe
pop
fs
out
subl
je
stos
inc
repnz
or
adc
leave
ret
adc
movsl
sub
sub
testl
insl
xlat
stc
add
xchg
lock
add
adc
fnstenv
jne
pop
xor
pop
adc
stos
lea
shl
mov
mov
out
stos
into
adc
sbb
pop
fimuls
mov
sar
dec
mov
pop
aad
push
xor
cmp
jnp
pop
adc
arpl
xor
push
in
or
and
push
mov
js
loopne
jno
add
add
mov
imul
sub
pop
adc
cmp
mov
adc
sahf
cmp
add
fisttpl
imul
shrl
aas
lods
or
in
mov
cltd
sub
mov
adc
inc
outsl
jmp
adc
sbb
cld
cs
sti
in
cmpsb
ds
cli
test
sahf
testb
mov
add
das
cmpsb
xor
cmpl
or
notb
lock
xchg
fstpl
inc
fsubrp
das
in
dec
insb
loopne
cmpsl
loop
daa
aas
jg
jns
popa
insl
mov
mov
addl
fsubrl
roll
push
and
es
dec
sbbl
mov
out
pushf
out
movsb
push
test
popa
inc
inc
cmp
and
sub
ret
sbb
sti
fidivrl
mov
xor
and
inc
pop
mov
sub
icebp
dec
repz
sti
in
sbbb
bound
pop
xor
int3
cmp
jbe
jmp
and
popa
push
std
mov
add
pushf
ror
inc
sbbl
mov
loopne
bound
jmp
mov
and
adc
cmp
test
lret
fs
inc
aas
repnz
int3
and
add
call
cld
push
inc
pop
sub
mov
ficoml
pop
cmp
jge
cld
leave
push
rcll
sbb
inc
mov
ss
insb
insl
nop
dec
mov
push
xor
lret
gs
stos
mov
popf
pusha
inc
loopne
jne
cmp
jecxz
jae
movsb
push
loope
loope
shrl
ds
outsl
int3
arpl
out
push
test
insb
nop
ds
or
sarb
mov
ds
mov
sub
repnz
sbb
ja
insb
sub
pop
xchg
mov
or
jl
insl
lods
lcall
fwait
sahf
mov
jne
aad
push
sbbl
je
xchg
fwait
mov
ja
add
pop
cmpsl
fdivrl
out
imul
adcl
or
std
xchg
addr16
ljmp
je
stc
dec
sbb
jno
fmulp
dec
adc
ret
out
sbb
lods
push
and
sub
nop
push
xchg
in
sub
adc
js
jae
cld
push
hlt
dec
je
nop
jle
add
pop
xchg
add
jae
push
in
jns
mov
sub
dec
shrb
out
fnstcw
lahf
pop
push
lods
add
scas
pop
outsb
xchg
push
mov
xor
and
jno
stc
and
cld
jl
push
imul
mov
and
xchg
in
push
mov
adc
aas
out
addr16
ret
sbb
sbb
xchg
mov
pop
movsl
inc
jle
cmovge
rorl
or
cmp
lods
icebp
or
lret
loop
cmp
ja
mov
sbb
int
jae
lcall
aaa
xor
cmp
jge
ljmp
cmp
aaa
lahf
lock
pop
xchg
insb
aaa
adc
lods
test
js
imul
dec
xor
mov
xchg
pop
addl
xor
sub
cwtl
xorl
outsl
fidivrs
dec
sarb
sbb
or
sub
push
mov
jge
std
aad
cmp
inc
or
jmp
aam
mov
mov
add
test
outsb
xchg
and
cwtl
ljmp
xor
ljmp
cltd
mov
aaa
in
pop
in
imul
out
cmp
mov
js
lahf
or
arpl
adc
mov
push
add
jne
push
cld
mov
or
ds
mov
wbinvd
push
jo
test
arpl
int
or
test
mov
cmpsb
or
in
sub
mov
stc
add
or
in
mov
test
mov
fdivrp
sbb
push
mov
push
daa
or
inc
dec
test
cmc
pop
pop
ret
mov
sbb
pop
adc
out
dec
insb
lret
enter
sbb
pop
fisttpll
shrl
dec
mov
sub
pop
loope
dec
push
leave
enter
test
or
lods
adcb
pop
hlt
lock
jnp
mov
xor
sbb
dec
sahf
stc
cs
out
push
lods
xchg
inc
xchg
add
jns
mov
cld
mov
out
add
stc
orb
aaa
flds
lea
out
clc
jne
dec
aam
stos
out
out
jmp
fimull
cmp
xchg
mov
leave
andb
aas
dec
add
cmpsl
das
pop
fcmovu
add
out
lret
pusha
mov
or
push
arpl
xor
imul
popf
cmp
pop
sarb
aam
push
imul
sbb
lcall
and
jb
push
and
int
popa
pop
fiadds
add
mov
inc
dec
mov
sbb
xor
mov
lret
mov
rol
iret
sub
ljmp
lret
sub
lods
jmp
and
test
cmp
sub
mov
adc
lret
std
fwait
or
lds
aam
push
pop
xchg
mov
adc
cmp
daa
in
sub
xchg
test
insl
dec
adc
push
lods
loop
cld
jns
mov
cmp
fcom
addr16
add
pop
push
inc
cld
and
bound
add
mov
fs
clc
aam
push
add
mov
fs
dec
iret
fstps
xchg
lret
jno
xor
pop
test
ret
pop
lret
sub
pop
sub
decl
sub
jno
ljmp
hlt
xchg
ret
outsl
sub
aam
mov
das
hlt
sbb
es
fcoml
cmp
pop
enter
mov
cmpsb
out
mov
and
mov
cmp
outsl
add
clc
add
cmp
scas
hlt
pop
mov
iret
es
cld
fcompl
xchg
les
and
add
int3
cs
and
pusha
gs
mov
xorl
jnp
mov
nop
movsb
sub
dec
pop
add
jmp
sahf
icebp
lds
rcl
mov
dec
sahf
lods
sbb
mov
mov
jge
mov
test
loop
jae
jecxz
inc
scas
xor
pop
cmpb
faddl
inc
repnz
loope
mov
cmpsb
cs
or
pop
dec
sub
rcll
out
movsl
clc
ret
xor
notb
aaa
fsubrs
out
call
out
xlat
sbb
push
mov
nop
xorl
fidivrl
pusha
loope
iret
xchg
repz
movsl
xor
jle
xor
dec
sarb
aad
inc
pushf
sbb
mov
std
lret
mov
mov
fmuls
and
or
push
adc
dec
leave
mov
xor
and
or
add
cli
xchg
sbb
cwtl
dec
in
mov
xchg
xchg
xor
mov
pop
jle
pop
nop
lahf
in
jbe
imul
jbe
jecxz
and
lods
mov
or
xor
pop
nop
lods
pop
jae
loope
push
std
loope
dec
xchg
les
sub
cmp
into
push
shl
mov
jo
sub
in
fcomps
mov
adc
pop
jno
cltd
mov
push
cmp
cmpl
addr16
movsb
add
inc
mov
pusha
data16
or
add
pop
jge
jge
mov
cmp
xchg
pushw
test
lret
subl
add
dec
sbb
adc
in
push
mov
ss
cmp
dec
sbb
or
sbb
sbb
pop
fdiv
adc
mov
loopne
hlt
lods
inc
push
pop
pop
je
shrb
bound
pop
loopne
push
mov
adc
mov
pop
es
sbb
push
xchg
jno
in
enter
mov
repz
fsubl
pop
mov
fiaddl
cmp
stc
imul
fnsave
mov
sub
icebp
pushf
mov
sbb
insb
jno
scas
outsb
popa
or
sbb
test
jns
xchg
hlt
bound
inc
orb
in
loop
push
loop
fld
sbb
nop
pushf
jo
dec
outsl
lds
and
mov
mov
shlb
or
mov
in
inc
out
sub
iret
aam
popa
fidivrs
pop
mov
mov
and
jno
or
mov
sbb
pop
jl
lcall
shlb
jb
stc
pusha
inc
and
ljmp
push
pop
add
icebp
shlb
or
data16
in
insb
roll
add
in
loope
or
sbb
mov
jbe
ljmp
mov
cmpsl
sbb
push
ja
mov
jae
xor
imul
test
mov
hlt
lahf
out
scas
lds
hlt
inc
push
cmpsb
or
pop
push
mov
pop
cwtl
adc
jnp
in
ja
out
call
dec
pusha
imul
test
sbb
add
mov
arpl
stc
pop
repz
mov
out
pop
clc
push
aas
pop
ljmp
add
sbb
clc
pop
test
int3
sbb
mov
mov
add
adc
inc
sbb
js
push
sub
mov
inc
mov
popa
cmpsb
lds
mov
push
mov
movsl
lcall
pushf
adc
fs
in
push
jge
xchg
mov
or
fdivrl
mov
cmpsl
sub
iret
pop
xchg
cmpsl
pop
cli
push
inc
cmc
dec
and
movsl
inc
clc
xchg
cltd
sbb
movsb
xchg
jo
xchg
hlt
nop
nop
add
pop
arpl
adc
pop
cmpl
imul
imul
lods
mov
dec
mov
xor
cmc
lea
cmp
outsb
jnp
or
fsub
pop
pop
push
iret
push
out
mov
sbb
fildll
inc
std
add
push
cmp
dec
dec
cmp
jne
dec
pop
loopne
xchg
adc
fsubp
lods
and
sub
lret
jecxz
pushf
add
xor
mov
fwait
dec
jnp
jmp
loopne
and
xor
test
aam
cmpb
push
xchg
cmpsl
lock
dec
test
fs
add
ja
cmp
push
or
mov
pop
add
cmpsl
push
and
es
mov
test
and
jecxz
das
or
rclb
scas
aas
iret
add
daa
lcall
xor
add
push
aaa
dec
mov
out
mov
pop
adc
les
es
inc
movsl
sbb
jmp
sub
sbb
gs
jle
xchg
pop
in
xchg
push
test
push
pop
js
flds
ss
fistpll
mov
cmp
movsb
and
cld
movsb
aaa
push
push
dec
mov
adcl
pushf
in
fsubrp
movsb
sub
cmp
test
into
pop
mov
xchg
or
mov
mov
movsb
sub
das
push
sub
mov
cmp
call
pop
out
ficoms
insb
in
mov
dec
sub
lods
mov
test
aam
loope
jge
jl
fsubp
jp
inc
mov
push
jb
das
daa
scas
out
inc
loop
cs
test
les
test
std
xor
lret
push
sbb
stc
sar
cmpl
mov
jge
outsl
xchg
popf
jmp
cmp
push
inc
sbb
mov
mov
imul
cmp
mov
in
inc
in
ret
outsb
je
popa
mov
fidivrl
aad
jns
add
mov
push
jle
daa
fldt
popl
hlt
call
lret
movsl
mov
clc
sub
call
or
cs
addr16
popa
pop
subl
ja
dec
mul
ds
add
js
clc
push
cli
aaa
shll
xchg
mov
movsb
mov
inc
orl
inc
jecxz
imul
mov
mov
clc
and
lods
lret
cltd
cs
pop
cmp
inc
loopne
shl
and
sub
mov
test
rclb
inc
inc
xchg
imul
daa
mov
leave
arpl
and
jo
add
lods
mov
lea
push
sub
sub
sub
aad
in
inc
xor
stos
test
int
pop
mov
cmp
cmp
jns
xchg
std
jge
xlat
jb
dec
push
mov
mulb
cmpsw
pushf
pusha
icebp
cltd
adc
jb
mov
cwtl
pushf
iret
psrlq
loopne
or
mov
lods
in
mov
inc
sbb
add
pusha
lret
jne
adc
mov
or
sbb
ficomps
sbb
sub
dec
jbe
lret
loope
xchg
das
in
pop
dec
sarl
or
push
lods
subl
int
dec
push
push
dec
rcl
in
xchg
dec
jecxz
cmp
and
and
les
hlt
sbb
xchg
xor
cmpsb
bound
ret
mov
lcall
je
inc
push
loopne
lcall
or
mov
fisttpll
xor
push
inc
std
dec
cmpsl
je
mov
outsb
inc
push
cmpsl
shrl
jle
test
sbb
das
push
jbe
mov
int
aam
pop
or
mov
jg
push
inc
mov
test
mov
lret
adc
repnz
xlat
inc
add
sbb
mov
jge
add
cmc
push
xchg
sub
pop
ficompl
xchg
stos
repz
mov
dec
sub
xor
xchg
xlat
insb
and
jnp
int
sarl
lea
xchg
aas
inc
pop
loopne
repz
es
inc
push
decb
outsl
mov
shll
mov
cmpsl
fs
dec
xor
lock
popa
xchg
movsl
and
add
es
scas
rorb
push
cli
mov
cmp
mov
pop
out
dec
outsb
das
cmpsb
mov
into
jns
and
push
pop
push
lahf
bound
data16
in
sbb
xchg
or
sbb
aaa
mov
xor
inc
sbb
or
addl
add
sbb
mov
je
and
imul
cmpsb
std
adc
into
xchg
shl
add
pop
arpl
cltd
jne
ret
imul
dec
mov
out
cmpsb
insb
lods
mov
mov
or
pop
and
in
inc
mov
mulb
adc
push
xlat
cltd
mov
ja
mov
out
mov
and
test
sub
stos
fs
mov
and
sbb
outsl
xlat
mov
mov
into
inc
in
mov
aad
jae
mov
lret
fidivrl
sbb
nop
lahf
stos
daa
xor
cwtl
outsl
ja
or
mov
jp
pushf
in
jo
shlb
mov
gs
loope
sbb
or
cmp
pop
mov
mov
xorl
adc
jns
fimull
std
insl
fst
sbb
dec
cli
incl
movsb
cmc
adc
inc
inc
imul
mov
std
pusha
xor
inc
ja
aas
sub
ja
data16
jle
xchg
cmp
mov
ficompl
mov
xchg
test
vpcmpeqd
or
xchg
movl
jecxz
cmp
xstore-rng
cmpsl
inc
pop
sahf
and
enter
mov
or
ret
inc
repnz
leave
mov
or
add
cmpb
xor
xor
sbb
mov
add
jge
leave
pop
pusha
aad
loope
shrb
test
push
pop
dec
out
sub
mov
mov
adc
push
xor
or
rorb
jg
jae
aaa
imul
sub
shrl
push
pop
pushf
sbb
or
push
cmp
push
and
ss
daa
or
push
jbe
fidivrs
sar
dec
dec
dec
cmp
les
sbbl
inc
jae
fimuls
jmp
xor
mov
mov
mov
adc
fists
mov
mov
xchg
repnz
mov
gs
jb
push
sti
mov
dec
pusha
bound
jmp
and
xchg
jnp
mov
sahf
icebp
into
cwtl
sub
leave
nop
mov
jno
sbb
mov
das
ret
sarl
xchg
int
dec
lea
mov
adc
add
testl
jmp
dec
inc
xor
repz
aas
bound
cmp
pop
fsubrp
nop
mov
mov
xor
dec
cld
sarl
sub
nop
sahf
mov
dec
xchg
jnp
cmp
xchg
sbb
lret
cmpsl
cmpsb
popf
cwtl
cmp
mov
cmp
mov
std
cwtl
push
lcall
shll
icebp
push
pop
jbe
test
cmp
out
xor
xchg
or
mov
inc
movsl
out
scas
cs
mov
shr
mov
lcall
insb
jl
mov
es
pusha
xchg
fistps
cwtl
ret
push
sub
cmp
lds
mov
sahf
jo
fnstcw
int3
call
inc
scas
mov
loope
sbb
fnstenv
or
leave
stos
sub
sbb
pop
push
dec
jnp
sub
andb
sbb
or
dec
imul
movsl
xchg
ds
mov
test
jns
jge
imul
inc
sbb
adc
cmc
lret
push
xchg
je
sbb
xor
inc
xchg
les
pop
mov
cli
or
fcomip
xor
subb
mov
jl
test
cmp
iret
adc
stc
outsl
pop
data16
sbb
stos
iret
stos
testb
sbb
lods
pusha
ljmp
mov
xchg
dec
into
fsubrs
ret
adc
sub
push
or
mov
push
enter
sub
push
pop
scas
outsl
jmp
or
movsb
fwait
dec
push
mov
aas
data16
add
insl
out
and
insb
pop
icebp
pop
loope
in
or
pop
out
lret
pop
inc
mov
data16
imul
adc
pop
enter
xchg
jo,pn
les
adc
sbb
sub
xchg
popf
add
cmp
jae
cmp
int
and
imul
and
cmp
daa
mov
mov
sbbb
cltd
shll
adc
dec
dec
cmp
es
repnz
xor
cmp
sub
push
ljmp
lcall
fldcw
ret
add
cmpsl
jmp
jg
xchg
sbbl
jo
mov
jp
in
in
or
in
and
sub
lret
sub
or
push
fs
mov
mov
cmpsb
arpl
sbb
fisubl
mov
adc
or
inc
outsl
rclb
push
shrl
cld
pop
lahf
jbe
sub
stos
add
in
outsb
cltd
xchg
loop
cmp
inc
lea
aam
mov
dec
js
jne
pop
xchg
cmp
cmp
dec
into
xor
popa
xor
mov
pop
mov
repz
pushf
jo
xlat
push
sahf
mov
inc
ss
sbb
mov
jb
inc
orb
pop
dec
lret
and
stc
stos
mov
clc
and
cs
push
mov
jb
lahf
fistps
jp
sub
rclb
fcomps
mov
call
fnstsw
jl
test
ja
cmp
ficoml
aad
notb
idivl
mov
test
cmp
lock
mov
ror
movsl
insl
rcrl
sbb
and
test
or
sbb
loopne
push
add
pop
xor
stos
cmp
repnz
ljmp
pop
pop
mull
mov
rclb
cmp
ss
sbb
jle
imul
and
bound
je
call
cmpsl
cmp
imul
sbb
repnz
loopne
xchg
push
icebp
sahf
repnz
cmc
mov
sub
arpl
clc
scas
mov
or
add
test
push
fwait
rol
lahf
data16
sbb
cwtl
popl
aaa
in
push
mov
ds
fsubr
adc
mov
push
or
xchg
add
outsb
cli
lcall
aas
xchg
pop
xchg
jge
shl
adc
push
pop
std
sub
cwtl
stos
out
ret
shll
sahf
add
xorl
out
pop
lcall
icebp
in
pop
int3
imul
dec
inc
sub
mov
add
repz
sbb
faddl
clc
inc
xchg
sbb
xchg
arpl
imul
push
retw
mov
dec
sub
popf
xchg
addr16
push
out
enter
addr16
push
xchg
or
bound
in
adc
pop
sbb
sub
mov
sbb
iret
fdivrp
mov
xor
xlat
into
push
mul
mov
or
cld
sbb
mov
sahf
stos
xor
dec
jecxz,pn
jo
dec
dec
pop
nop
xchg
pop
pop
subb
push
repz
push
push
and
push
pop
and
andb
test
mov
ds
jne
test
sbbl
cmpsl
mov
inc
pop
test
xchg
inc
dec
mov
cmpsb
jp
movsb
cld
shll
mov
mov
sbb
incb
insb
dec
inc
sbb
mul
inc
cmp
cmc
pop
rcll
pusha
movsb
inc
les
mov
adc
dec
cmp
insb
iret
sbb
popa
frstor
jns
push
in
cwtl
mov
or
mov
or
mov
xchg
adc
lret
or
pop
mov
push
lods
jle
cmp
movsl
inc
cs
scas
icebp
mov
movsl
xchg
fcoml
xchg
lea
xorl
ja
fwait
leave
loope
sarl
xchg
pop
je
mov
pop
mov
pop
mov
dec
in
jae
add
jge
aas
lcall
ljmp
xchg
mov
sbb
cmc
dec
in
adc
enter
loope
mov
add
xchg
jp
ljmp
gs
mov
lret
adc
mov
sbb
cmp
mov
jg
sub
or
bound
sbb
jo
rclb
sbb
xchg
lcall
pop
sbb
loop
jle
or
loope
fistl
adc
sub
paddsw
cmc
leave
into
xchg
jp
in
sub
sahf
outsb
dec
jb
mov
shl
jl
pushf
lret
adc
stc
dec
mov
adc
push
stos
addb
aad
mov
jmp
into
xor
sub
daa
data16
and
stos
fnstsw
cmp
xchg
int3
lds
jo
xchg
test
bound
or
pop
xchg
fsts
adc
imul
push
xor
out
cmpsb
fistpl
insl
cmp
movsl
shlb
les
test
and
sbb
mov
xor
scas
cmp
rcrl
scas
imul
dec
stos
out
shld
sahf
incb
sbb
int
in
addr16
sbb
mov
xchg
and
mov
inc
push
push
inc
sub
add
addl
mov
or
mov
leave
mov
aam
xchg
hlt
mov
popa
pop
pusha
sub
mov
add
pop
mov
enter
aad
jge
scas
and
fwait
xlat
insb
sub
and
pop
adc
pushf
outsl
adc
insb
mov
imul
sub
fisubrs
popa
bound
and
das
dec
stc
mov
fstpt
or
fisubrl
xchg
lods
sbb
push
or
jecxz
movsl
hlt
and
cmp
and
push
push
xor
into
sub
sarb
rolb
cs
and
xor
sub
daa
aaa
cwtl
add
or
pushf
call
mov
loope
loop
pop
addl
push
jle
add
mov
fistpll
push
push
xchg
nop
lods
jmp
cmpsb
imul
inc
enter
mov
inc
sub
and
xor
pop
jecxz
in
lret
pop
jbe
xor
bound
fstl
cmc
jne
inc
hlt
je
jl
add
lcall
je
mov
repnz
iret
jge
inc
mov
popf
pop
jns
setae
push
mov
push
lock
dec
addps
insb
sub
lock
add
je
pop
or
in
popf
movsl
adc
in
sbb
lea
sub
xor
ja
add
in
icebp
test
xchg
or
push
xor
subb
mov
or
and
or
addr16
sub
sbb
fwait
mov
mov
ret
or
adc
add
jae
jns
call
bound
shld
mov
xor
push
notb
dec
stos
loop
mov
cmp
popa
dec
int
xchg
stos
jo
ss
mov
push
sahf
enter
mov
aas
sbb
loope
pop
adc
add
xchg
and
cmp
lea
shl
bswap
test
ficoml
in
daa
sbb
jae
leave
fbstp
adc
sub
add
pop
jo
popf
ljmp
sub
xor
xor
cmp
nop
paddq
inc
mov
xlat
cmc
mov
bound
cmc
mov
in
stos
stos
es
xchg
out
mov
aam
cmp
test
outsl
enter
in
shl
in
pop
push
mov
xchg
push
int3
push
sub
adc
push
ljmp
adc
jno
pop
ret
dec
cmp
clc
outsl
sbb
jmp
cmp
jmp
mov
add
shl
xchg
pushf
ds
jns
sub
jmp
dec
jno
or
xorb
sub
jnp
mov
fimuls
push
iret
lea
stos
jo
clc
xchg
inc
sub
cmpsl
or
xchg
cld
add
mov
enter
jno
and
mov
cmpsl
dec
jae
adc
cltd
lock
ja
mov
push
jno
ret
sbb
das
add
pop
clc
popa
dec
cmc
mov
mov
sub
das
std
mov
hlt
mov
insb
push
int3
and
cmp
mov
aaa
dec
mov
push
inc
stos
scas
repz
repz
ret
cltd
repz
xchg
nop
add
mov
fnstenv
stos
xchg
xor
decl
inc
xchg
inc
scas
pop
or
mov
mov
xor
xchg
pop
mov
mov
out
ljmp
pop
sbb
not
je
mov
adc
lahf
jg
dec
jmp
icebp
enter
push
int
out
insl
aaa
pop
gs
xor
xchg
sbb
test
cmc
pushf
call
inc
cmpsb
sbb
push
mov
rcrl
mov
push
jg
adc
in
gs
xchg
add
push
cmpsb
test
fwait
add
cmp
jnp
cmp
and
mov
jl
sub
push
cld
mov
push
arpl
out
sub
ret
jge
dec
leave
push
jb
dec
ret
mov
daa
or
aaa
or
push
cmc
inc
cwtl
cli
jg
xchg
xor
fwait
xor
sbb
cmp
push
sbb
sub
mov
xor
adc
loope
fidivl
dec
sbb
out
lahf
ja
scas
mov
int
add
je
mov
bound
in
test
push
arpl
adcb
icebp
xor
mov
repz
mov
outsb
out
add
cmc
roll
inc
icebp
sbb
aam
pusha
pop
jecxz
cmp
mov
or
ret
aaa
mov
stos
jge
xchg
sub
test
sub
movsl
and
jg
or
push
or
cld
fisubl
pop
dec
mov
cli
sbb
cmpsb
sub
stos
pushf
jg,pt
xor
xor
aaa
insb
repnz
outsb
sti
sub
and
xor
mov
jg
or
outsl
mov
stc
adc
out
mov
mov
jns
jnp
sub
es
mov
idivl
jle
cmp
mov
or
mov
test
movsb
inc
jl
mov
scas
push
xchg
inc
sub
add
add
cmp
push
mov
cli
jge
pop
and
mov
ljmp
cmpsl
cmp
mov
inc
dec
inc
jecxz
mov
lea
mov
mov
mov
jae
insl
jbe
clc
jmp
sbb
jl
mov
mov
movsb
cld
les
test
lcall
adc
mov
push
int3
test
sub
out
fcom
mov
inc
insb
outsl
in
movsl
or
pop
push
aas
pop
rorl
les
lcall
fwait
adc
xchg
mov
mov
pop
test
or
mov
cmp
mov
aaa
cmp
inc
jbe
and
repz
sub
or
test
clc
push
inc
lret
pop
inc
jg
lahf
mov
xor
test
idivl
mov
mov
mov
fsubp
jmp
mov
cmpsb
jecxz
ljmp
aam
mov
push
xor
imul
loopne
xchg
xchg
mov
jbe,pt
xchg
rorb
pop
subb
loopne
sbb
movsb
nop
aam
sbb
cs
cmp
ljmp
pop
test
lds
mov
out
ss
sar
in
push
dec
pop
leave
jecxz
dec
mov
cmp
jecxz
inc
outsl
pusha
sbb
outsl
push
mov
mov
stc
pop
shrl
in
popf
add
mov
sub
mov
inc
jns
fimuls
rcrl
fcomps
fists
xor
push
xchg
fs
mov
xchg
popa
or
imul
mov
jecxz
pushf
jo
or
sub
andl
and
stos
pop
cmp
xor
mov
cmpxchg
mov
ficoms
sub
cld
in
xor
outsb
dec
shl
pop
imulb
dec
mov
test
push
sub
xchg
xchg
out
es
mov
and
inc
stos
and
pushf
lods
cmp
xchg
adc
sbb
fwait
fwait
mov
insl
fbstp
daa
cmc
dec
inc
jno
test
sub
jae
xchg
adc
xchg
insb
das
jecxz
or
jns
test
xchg
mov
outsl
mov
inc
aam
cmpl
mov
bound
test
mov
push
cmp
movsb
decb
into
xchg
or
cmp
xorb
mov
mov
lods
mov
das
jmp
dec
fs
insb
mov
lcall
aas
test
xchg
inc
mov
test
adc
xlat
dec
imul
inc
dec
aad
jecxz
stos
aam
inc
or
jmp
movsl
rcll
jecxz
sbb
add
pop
int
pushf
daa
filds
xor
fbld
mov
fs
dec
push
inc
sbb
mov
test
add
push
push
dec
jmp
and
fsubrs
aam
lods
movsl
int
xchg
in
or
inc
jo
and
cmp
fst
aas
pop
nop
fwait
lahf
es
jns
jle
std
int3
sti
sbb
inc
ds
enter
cwtl
mov
jg
cltd
push
push
add
inc
inc
loope
rolb
lock
mov
lods
int3
les
mov
adc
sbb
push
mov
out
cmc
mov
xchg
inc
cwtl
aas
mov
jbe
in
xor
sbb
cmp
pop
out
push
push
ljmp
inc
pop
cltd
mov
pushf
enter
sub
sub
test
outsb
mov
inc
scas
lods
or
lcall
mov
mov
sarl
fldl
aas
mov
xchg
mov
and
adc
cmpsl
or
jg
jp
sub
fldcw
add
dec
imul
pop
mov
jb
xchg
mov
xchg
push
lahf
cli
pop
ret
mov
sub
mov
mov
pop
jp
repz
pop
mov
xchg
and
loope
stos
fsubrp
addr16
popf
sbb
xchg
adcb
adc
push
inc
mov
dec
ret
out
sti
flds
push
incb
lock
lret
lret
rorl
jae
push
shll
xchg
inc
add
dec
push
arpl
sbb
dec
jae
inc
pop
jecxz
int
dec
mov
call
mov
mov
mov
pop
not
sub
push
mov
test
mov
lret
inc
adc
hlt
loope
sbb
add
outsb
lret
xchg
inc
int3
lea
dec
repz
in
aad
adc
xor
cmpsb
push
push
aad
inc
pop
mov
push
inc
loope
mov
enter
or
je
adc
imul
xchg
dec
inc
addr16
sbb
xchg
sbb
add
mov
nop
aad
push
add
vsqrtpd
bound
lods
cmp
dec
jo
int3
xchg
stos
leave
mov
adc
pushl
pop
and
mov
cltd
faddl
scas
xor
xchg
movsb
pop
jecxz
imul
push
int3
scas
inc
pop
jmp
lock
jmp
sbb
aam
inc
and
iret
mov
and
mov
aad
loope
movb
jbe
add
lret
mov
mov
ja
mov
pop
enter
popf
fisttps
test
decb
xchg
pop
cmc
jmp
sbb
dec
es
and
jns
pop
lret
fsubs
adc
sti
add
scas
mov
cwtl
jbe
push
mov
in
pop
xchg
sub
or
sbb
xor
cmc
adcb
test
push
sub
xchg
adc
xchg
sarl
inc
aaa
sub
sbb
xor
sub
cs
pusha
orb
mov
fcomip
pop
cmpsb
mov
xchg
dec
addr16
mov
inc
push
ds
je
ret
mov
add
pop
cmp
inc
aam
mov
ret
orb
dec
adc
mov
out
mov
mov
ds
sub
adc
push
insb
std
mov
pop
push
gs
mov
push
mov
bswap
lods
int3
add
jo
aad
lds
add
cmc
inc
scas
mov
or
push
pop
call
mov
push
xlat
mov
jo
imul
std
sar
lds
mov
pop
mov
pop
rcl
gs
cmp
mov
mov
push
lahf
fcoms
adc
stos
ss
jb
inc
vpshuflw
sub
push
popa
xchg
popf
inc
add
dec
imul
in
cltd
add
lcall
adc
adc
jmp
cmpsl
ret
cli
adc
xchg
sbb
xor
adc
cmc
mov
and
jnp
iret
mov
jmp
push
cmp
push
jns
push
arpl
push
test
test
pushf
or
or
shl
pop
push
addb
push
lcall
jecxz
ljmp
ffreep
insb
push
cltd
push
push
mov
and
in
sahf
enter
imulb
xchg
into
movsl
jo
adc
pop
adc
xlat
js
cmp
xor
adc
test
mov
es
je
dec
adc
jbe
mov
in
js
mov
mov
and
jmp
scas
mov
xlat
pushf
sbb
popa
jmp
ror
insl
dec
sti
cld
ret
jge
jmp
test
mov
lods
lret
cmc
je
xchg
pop
dec
fs
cmp
push
jne
xor
and
dec
incl
or
and
fwait
shll
sarb
loopne
mov
push
hlt
subl
add
or
push
stos
data16
lea
cli
inc
xchg
stc
and
test
sub
movl
pop
sbb
adc
insl
jge
cmc
xor
jmp
js
lock
lods
addr16
mov
dec
add
psubw
out
add
cli
xor
cmpsb
adc
xchg
decb
jecxz
mov
in
pop
jl
push
sub
mov
mov
xor
push
lcall
sbb
shll
pop
lret
xor
decl
nop
cmpsl
mov
fisttps
scas
and
mov
dec
dec
adc
and
fisubl
mov
xchg
in
in
mov
pop
fildll
push
push
sub
xor
mov
pop
dec
mov
call
lock
out
cwtl
mov
test
iret
dec
jno
and
in
fsubs
movsl
lret
popa
inc
inc
jmp
jg,pn
jl
aaa
dec
pop
cmp
adcl
xchg
xchg
jp
popa
mov
test
mov
iret
in
mov
pop
sbb
cmc
loop
mov
mov
test
inc
inc
push
movsl
daa
mov
cmpb
mov
jnp
mov
call
out
stos
add
bound
dec
xor
in
and
int3
and
cli
pop
jae
call
xor
and
dec
insl
scas
adc
inc
mov
out
mov
push
out
ja
sub
add
test
sub
xchg
pop
rorl
ret
je
adc
sbb
add
inc
sub
mov
mov
xchg
push
pop
mov
pop
in
jae
das
xor
mov
xchg
addr16
ds
adc
cltd
sub
cli
adc
sbb
fdivrl
pop
cmp
addl
mov
mov
lock
out
pop
les
out
inc
fs
xchg
in
les
insl
subb
dec
and
out
cmp
cmp
cmp
push
mov
ret
adc
in
insb
js
jecxz
adc
pop
lcall
and
sbb
mov
sbb
add
push
dec
test
mull
hlt
test
sbb
in
lret
mov
lret
clc
sub
icebp
jle
cmp
dec
jnp
paddusb
dec
inc
or
and
int3
push
xchg
daa
stc
mov
or
test
std
stos
imul
mov
mov
jno
mov
mov
inc
les
sbbb
cmpsb
sti
jbe
hlt
jmp
xor
add
loopne
dec
jg
cmp
fs
and
sahf
std
insl
je
mov
shr
repz
sbb
or
inc
mov
xchg
adcl
in
jne
or
xor
pop
jp
stos
xchg
push
scas
lcall
push
mov
ficomps
test
popf
loope
clc
jns
fisubl
mov
arpl
jb
cltd
adc
cli
outsl
xor
test
add
cmpsl
mov
adc
mov
incb
xchg
push
pop
ja
repnz
pop
popl
jecxz
xlat
xor
data16
lds
mov
lret
and
iret
out
and
mov
inc
sub
mov
xchg
rcll
xor
ljmp
mov
stos
push
mov
cmpl
cmpsl
jnp
jnp
iret
cmp
divl
jbe
jg
xchg
cmp
or
int3
shll
pop
insl
dec
pop
test
add
or
pushf
repnz
mov
arpl
daa
insb
in
mov
pop
lret
jnp
xchg
ljmp
pop
ror
ret
pop
adc
push
jge
cmp
sahf
out
cmpsl
iret
test
ljmp
bound
js
stc
sbb
iret
arpl
mov
daa
jle
stos
std
jle
aas
jnp
mov
aaa
jl
rcrb
dec
sub
data16
fcmovu
jno
shll
or
rorl
hlt
stos
mov
jge
jge
out
ror
push
testl
ficompl
jg
push
fistpl
enter
sbb
repnz
pop
pop
sbb
movsl
decb
mov
cmp
pop
les
lret
icebp
pop
scas
jl
push
addr16
push
dec
outsb
repnz
jp
xor
aaa
pop
sub
pusha
mov
cltd
sub
sub
bound
sbb
cmp
pop
xor
mov
cmpb
andl
fld
mov
jmp
and
imul
out
mov
fninit
aam
adc
test
pop
int3
dec
jns
ror
dec
xor
cmp
cmpsl
push
push
adc
and
xor
out
inc
out
push
inc
cmpsl
mov
cmpsl
iret
push
aaa
jge
daa
fidivrs
fs
repz
mov
jo
or
lret
mov
inc
add
or
push
sbb
jo
jns
pop
xor
push
dec
dec
dec
push
inc
cld
outsl
xor
sub
mov
xor
scas
imul
pop
in
outsb
cmpsb
mov
hlt
add
inc
jnp
sbb
lret
dec
sar
adc
sub
sahf
stos
jbe
adc
or
xchg
gs
adc
cld
test
cli
cwtl
mov
lock
jl
in
std
xor
xor
pusha
or
pop
push
test
fsub
xchg
mov
cmp
jp
es
pop
add
jp
call
cmp
add
nop
repz
cmp
or
daa
pop
rorb
inc
sahf
inc
imul
subl
dec
movsl
loope
scas
shll
rolb
and
mov
mov
xchg
and
call
and
leave
sbb
jbe
lret
and
push
push
icebp
adc
iret
cmp
outsb
es
mov
mov
les
cmp
in
lds
adc
int
pop
sbb
loop
and
dec
repnz
inc
js
jle
into
mov
les
mov
add
pop
add
pop
out
stos
popa
loopne
pop
je
aad
sub
call
shll
mov
or
lds
inc
lods
mov
inc
test
fabs
in
sbb
cld
cwtl
movsl
nop
sbb
or
les
sub
sti
pop
jo
loopne
mov
push
ret
and
fsubrs
pop
ret
lret
and
cmp
cld
loop
push
adc
inc
pop
sub
aad
and
and
insl
shrb
dec
call
aam
cmc
fucom
pop
cmp
pop
add
int3
addb
pop
jl
in
xchg
pop
imul
int
cltd
inc
call
add
shlb
aam
add
rcll
inc
mov
mov
jle
xor
or
das
rorb
orl
push
sub
push
cmc
cmpl
sub
adc
cmp
mov
int
jecxz
andb
fcompl
scas
lahf
or
sbb
aas
jnp
or
mov
or
popf
xchg
out
inc
popf
enter
add
adc
push
mov
mov
dec
cmp
mov
hlt
push
mov
inc
add
add
sbb
ss
pop
sbb
add
jl
aaa
mov
les
mov
rorb
fwait
pop
add
cmc
scas
outsl
jnp
sbb
lahf
dec
and
out
pop
in
cltd
push
mov
pop
es
movsb
orl
sub
xor
jnp
push
mov
fidivl
lret
or
fistps
jae
mov
mov
into
aad
sub
popa
mov
sub
pop
push
out
fcompl
movsb
inc
nop
shr
jno
sub
mull
xchg
jecxz
cltd
dec
pop
pop
insl
pop
mov
and
mov
imul
push
jge
push
and
idiv
lds
cld
jmp
movsb
push
and
idiv
push
popa
sbb
mov
cmc
and
inc
test
scas
jne
inc
jae
lahf
scas
mov
in
jmp
sbb
jmp
mov
test
sbb
fcoml
and
push
xchg
mov
pop
insb
lret
std
outsl
jnp
fisttpll
addr16
sub
cld
and
push
jb
out
or
addl
push
xchg
add
movsl
cli
in
dec
sbb
in
fsubrs
imul
or
sub
pushf
fs
xchg
push
ja
push
sbb
dec
movsl
jl
aam
and
ficompl
in
mov
adc
push
mov
cmp
shrl
ret
iret
cmpl
push
jnp
push
ret
enter
leave
cwtl
mov
fcom
mov
cmc
pop
or
pop
dec
in
stc
cmp
mov
dec
loopne
outsl
mov
movsl
out
and
call
sti
sti
aam
dec
inc
icebp
inc
outsb
cmpsl
mov
into
sub
cld
sub
mov
or
lock
pop
enter
xchg
jnp
pusha
xor
imul
cmp
test
std
xor
add
mov
lcall
and
pop
mov
cmp
pushf
and
leave
push
movsl
push
stc
mov
test
jecxz
std
leave
movsb
sahf
lret
movsb
cmpsl
and
mov
cmp
jne
cmpsb
jns
jmp
aam
dec
in
shll
mov
repnz
push
loop
xchg
cld
xchg
dec
aas
jl
xchg
in
loop
adc
add
cmp
inc
jge
test
out
movb
xlat
jecxz
mov
mov
lret
jmp
or
adc
jo
pop
jb
mov
cltd
shrb
inc
jno
dec
xchg
loopne
sbb
imul
lcall
arpl
fisttpl
mov
sbb
jb
inc
mov
and
cmp
das
decl
add
push
jo
jo
sbb
arpl
js
int3
js
imull
mov
push
mov
xor
mov
jl
out
cmp
test
je
pusha
fildll
add
adc
test
daa
push
push
push
loopne
loop
cmp
fwait
scas
jns
mov
testl
hlt
add
es
lods
int3
cmpsb
test
ror
std
nop
or
xchg
pop
dec
push
nop
inc
jae
inc
push
jnp
mov
add
mov
mov
push
mov
je
xor
cmp
xchg
fwait
or
cwtl
repz
mov
add
dec
divl
mov
cwtl
stos
test
sub
ss
and
js
lret
les
rcrb
xchg
xchg
jmp
ljmp
lds
add
add
loopne
aaa
push
out
pop
dec
repz
push
clc
lret
fs
repz
xchg
jp
lock
loope
cs
aaa
jbe
add
cld
outsl
out
and
loopne
shl
mov
push
pop
pop
jno
sahf
xchg
enter
outsl
decb
stos
cli
add
popa
sbb
push
lret
lcall
jb
cld
ja
imul
out
cmp
test
cmpb
and
fnsave
mov
sbb
gs
scas
push
out
loop
and
test
lock
inc
or
mov
add
into
cmp
js
dec
mov
xlat
mov
icebp
push
mov
mov
stos
inc
sbb
xlat
mov
lods
in
jo
jne
sbb
xor
xchg
into
outsl
fwait
add
sbb
mov
repnz
fdivl
int
icebp
push
pop
sbb
jae
in
cmp
inc
adc
notl
mov
dec
mov
ja
test
jp
mov
ss
lea
in
subb
fucomi
sub
sbb
lret
jne
or
push
cld
cld
mov
out
enter
test
xchg
pop
mov
mov
xor
jo
dec
push
add
jmp
enter
popf
ret
fildll
outsl
dec
pop
cmp
cmp
movsb
mov
pop
rorl
and
or
xor
je
mov
push
xor
arpl
popf
push
mov
fldt
out
push
push
sbb
mov
outsb
aas
test
les
adc
inc
xchg
stos
std
ljmp
lcall
jae
push
xor
scas
std
les
popa
scas
fmul
stc
adc
mov
or
data16
cmp
lcall
push
inc
testl
test
mov
xchg
std
mov
cmpsl
pusha
dec
neg
mulb
xor
jmp
cmpsl
les
ret
test
adc
xor
mov
inc
push
scas
dec
addr16
inc
adc
cmp
pop
dec
mov
and
jnp
dec
and
insb
cs
pop
bound
aam
fsubrl
mov
test
mov
stos
into
or
clc
aaa
lahf
movsb
cmp
xor
pop
lea
add
add
cwtl
mov
leave
cld
loop
mov
scas
insl
mov
aam
push
or
mov
jae
stos
push
xor
add
sub
icebp
dec
push
sbb
movsb
push
mov
cwtl
fmuls
inc
and
aaa
hlt
fiadds
hlt
jae
adc
fucomp
loop
sub
pop
out
loopne
arpl
lods
scas
test
dec
cmp
sahf
loop
mov
jnp
testl
sub
hlt
aas
push
inc
test
idivb
mov
and
adc
lock
push
push
cmpsb
mov
xchg
pop
pushf
test
xor
xor
sub
out
in
lods
fs
aam
inc
test
test
inc
clc
pop
sub
test
pop
or
jne
lahf
mov
mov
test
adc
sbb
dec
test
or
mov
inc
shlb
inc
xchg
aas
inc
add
shr
test
sbb
out
cmpsb
mov
fidivl
movsb
cmpsl
frstor
adc
stos
add
aad
ja
jns
imul
bound
jno
sbb
repz
add
loop
scas
mov
cmp
sub
or
sbb
sbb
jg
fisttps
lret
std
mov
lcall
aas
loope
fwait
add
arpl
leave
or
sti
out
mov
and
push
xchg
sub
dec
inc
dec
daa
xlat
lcall
add
lcall
dec
popf
enter
jb
icebp
scas
mov
fisubs
cmp
int
call
sub
jg
add
pop
lret
das
push
or
dec
ss
sbb
lea
das
push
or
mov
push
mov
cmp
icebp
call
ficoms
addr16
clc
adc
mov
mov
push
adc
lods
fildll
dec
cmpsb
addb
das
xchg
pop
ret
xchg
pop
cmpsb
mov
scas
add
aas
xchg
cmp
data16
jns
or
sub
xchg
xor
xchg
cmpsl
jne
inc
mov
sub
mov
pop
push
sbb
andb
and
pop
insl
dec
rcll
jns
jo
and
ret
popf
adc
imul
cmp
inc
lret
mov
leave
push
push
or
popa
and
loope
inc
mov
jmp
jnp
repnz
adc
jae
mov
clc
xchg
add
push
xor
jb
push
mov
push
jmp
lret
hlt
mov
movsl
pop
push
sbb
ds
xchg
jo
rorb
sbb
or
adc
adc
add
xchg
out
outsb
shl
pop
pop
xchg
mov
sbb
ds
xor
ja
push
stos
in
jbe
jno
dec
ret
mov
xchg
pop
mov
loope
adc
lret
lods
pusha
jns
mov
mov
pop
lahf
iret
lahf
sub
frstor
lret
fbstp
mov
cmc
or
test
and
stos
lret
addr16
pusha
lds
bound
addb
pop
or
push
fwait
js
mov
inc
cli
and
insl
or
cmpsl
loope
cmp
push
test
shrb
adc
fwait
inc
jecxz
loop
pop
xor
fwait
mov
push
nop
xor
jnp
xlat
scas
pop
loope
dec
mov
js
cmpsb
sbb
jae
cmp
cmp
pop
loop
mov
and
jo
mov
xor
sub
movsl
push
or
xor
cmc
or
pop
int3
mov
add
leave
mov
dec
push
aaa
mov
fisttps
xchg
xor
arpl
dec
fisubl
dec
out
lcall
in
push
test
fcmovnb
push
adc
and
mov
mov
jg
in
iret
inc
push
push
outsl
mov
mov
jg
divl
cmp
lods
testb
test
and
inc
cmpsl
lret
lret
aaa
and
test
enter
imul
ds
ret
sbbl
mov
stos
sbb
lcall
shll
pop
mov
pushf
push
mov
xchg
xchg
iret
scas
hlt
mov
idiv
adc
pop
push
push
mov
shrl
and
push
pop
xor
adc
push
sti
cwtl
cmpsl
ss
mov
mov
lcall
mov
aam
cmc
xchg
mov
loop
out
xor
outsl
je
sbb
mov
mov
sbb
lea
inc
addb
and
pop
push
movsl
mov
xor
adc
insl
subb
push
insl
ja
aam
mov
out
pop
sbb
sub
dec
stc
xchg
dec
mov
or
sbb
sub
cli
shl
xor
mov
ret
add
jp
xor
adcb
xor
aad
roll
xor
popf
cld
fnstcw
loope
pop
sti
pusha
xorb
fs
or
shll
sub
cs
inc
push
cld
pop
cmp
fcomps
fcoms
and
movsl
pop
or
lods
lahf
in
aam
add
imul
mov
mov
inc
je
or
jbe
sbb
stos
dec
fldl
pop
inc
mov
shll
cmpsl
mov
fsubl
mov
icebp
das
sarl
fwait
movsl
xlat
push
in
testl
ss
mov
mov
mov
movsl
pop
test
cmp
adc
daa
or
add
push
mov
and
dec
xor
bound
pop
xlat
mov
les
xor
add
mov
test
mov
mov
jo
mov
jns
xchg
cmpsb
mov
or
lahf
push
mov
push
inc
adc
cmpsl
imul
mov
es
dec
fs
dec
es
leave
push
xchg
aam
loope
fsubs
lods
jge
sbb
pop
sub
movsb
hlt
ffree
push
xchg
xlat
aas
mov
dec
lahf
mov
andl
dec
xor
pop
outsl
jnp
lds
and
lea
or
mov
jne
shrb
out
lods
loop
push
or
out
je
rcrl
add
jae
lcall
add
or
andl
adc
lods
lock
xorl
pop
lods
into
fwait
lret
or
cmp
gs
int
std
or
mov
inc
enter
divb
call
jo
mov
stos
cltd
lock
pop
add
or
es
arpl
push
mov
adc
sbb
push
aad
mov
push
in
addb
scas
into
and
mov
dec
or
outsl
jmp
push
clc
jmp
jne
push
mov
or
mov
sbb
pop
lds
xchg
insl
in
pop
jp
mov
cmp
cld
fcmovne
stos
jl
xor
push
jbe
push
das
hlt
xor
das
shlb
or
and
lcall
rorl
scas
jge
mov
movsl
test
fmul
fld
jo
test
xor
orb
xor
in
jne
jmp
out
mov
cmp
mov
and
adc
mov
enter
and
push
cmp
sti
stos
lret
inc
mov
dec
loope
add
outsl
push
test
jbe
lods
inc
dec
repz
ret
imul
push
sarl
inc
orb
pusha
repz
jl,pt
push
add
adc
jno
adc
in
dec
xor
sub
jne
rcll
imul
mov
movsb
mov
pop
add
dec
leave
mov
lret
movsb
mov
inc
xor
gs
imul
mov
lods
xchg
loopne
pusha
cwtl
push
fnsave
xor
or
jns
mov
mov
jmp
push
adc
stos
jle
mov
mov
push
imul
cmp
lea
sub
sbb
mov
dec
add
mov
iret
pop
adc
or
pop
enter
arpl
mov
jne
add
insb
mov
add
lret
sbb
dec
jl
jo
xchg
test
push
loop
sub
mov
push
add
jmp
lret
cs
mov
xchg
pop
dec
mov
push
into
std
mov
test
jne
repz
adc
push
mov
pop
cmp
into
mov
adc
pop
jae
inc
and
mov
push
rcrb
insb
int3
imul
xchg
push
out
js
scas
out
mov
pusha
outsb
or
mov
jo
dec
sub
sbb
mov
into
mov
jne
mov
stos
and
sub
xchg
stos
pop
mov
int
fstps
popa
sbb
jle
xchg
sbb
adcl
fnstenv
in
sbb
jp
adc
test
dec
test
mov
iret
dec
scas
push
or
pop
popa
insb
cmp
sbb
cmpsl
fsts
stc
dec
cli
mov
data16
push
into
jle
lock
pop
xchg
aas
cld
ss
xchg
fistps
add
xlat
je
cltd
out
or
sbb
lds
addr16
rsm
sbb
ficompl
add
add
pop
pop
mov
jl
pop
stc
cmpsb
jge
jp
sbb
jae
mov
inc
jp
fiaddl
push
mov
add
bound
add
mov
mov
push
in
orl
and
sahf
leave
push
mov
and
lea
aad
pop
fdivl
and
adc
add
xor
mov
push
fstl
cmp
mov
xchg
lea
das
in
pushf
xchg
sub
sti
aaa
jo
jl
cmc
push
movsb
xlat
or
mov
xor
pop
imul
xor
fimuls
mov
ss
in
pop
loop
out
in
pop
and
push
ret
add
mov
mov
cld
push
sbb
add
and
sbb
ljmp
scas
fucomp
pusha
pop
inc
fs
push
shrl
or
add
sub
pop
out
xor
add
pusha
inc
mov
nop
and
sub
mov
std
add
insb
push
dec
xor
and
or
add
jno
xchg
sbb
pop
push
ret
into
movsb
push
jmp
and
imul
jbe
mov
stc
loopne
clc
ljmp
xchg
cltd
mov
mov
in
outsl
sub
movsl
incl
push
mov
sub
test
xchg
loopne
out
ljmp
int
pop
push
jbe
jne
and
fcmovnb
in
cs
ja
jne
inc
mov
stos
push
aad
jmp
notl
lret
sub
hlt
icebp
xor
cwtl
fldcw
adc
insl
shll
xchg
jbe
sbb
jg
insb
push
or
sbb
mov
jnp
ljmp
sbb
or
jge
std
sbb
adc
hlt
mov
add
add
push
jecxz
loop
xchg
loopne
inc
jl
ficompl
arpl
pop
xor
jge
pop
rcrb
mov
es
xchg
inc
cld
mov
popa
and
push
mov
in
push
adc
fisubrl
inc
or
mov
lds
std
push
mov
or
dec
xor
cmp
divl
movsb
clc
addr16
ss
sbb
stc
int3
push
lds
sub
sti
mov
lock
xchg
das
dec
cmp
outsl
jne
lahf
or
xor
mov
shl
cmc
rcrl
imul
mov
jnp
gs
lds
add
in
inc
pop
mov
jo
imul
mov
std
test
je
addr16
pop
adc
test
jae
addb
stos
sbb
shrb
sti
insb
cmp
sub
int
adc
cmp
fisubrs
testb
add
jl
add
imul
rcrb
scas
inc
lea
rcrl
push
and
mov
pusha
mov
jmp
mov
cmc
in
jmp
pop
clc
cmp
push
xchg
ja
xchg
jo
sarb
mov
mov
pop
fstpl
ja
mov
les
mov
es
sub
stos
jmp
sub
test
cmc
sarl
loopne
or
outsb
jns
mov
jge
lcall
mov
jno
fcomps
popf
xchg
inc
pop
mov
mov
sub
push
xor
lds
cmp
inc
cmc
popa
clc
mov
mov
sbb
in
lcall
iret
nop
jnp
ffree
lahf
and
shrb
movl
inc
xor
repnz
sarb
push
out
sbb
and
pusha
mov
ja,pt
ss
js
jo
lock
fdivrs
shrb
jne
cmp
xchg
outsl
maskmovq
notl
or
adc
lahf
xchg
add
cld
xorl
dec
xor
pusha
in
enter
mov
push
jmp
iret
dec
bound
cli
in
jae
movsl
hlt
fimuls
jp
ja
cmp
jno
pop
push
adc
xchg
mov
int3
stos
mov
loope
adc
inc
repz
fnstcw
mov
fbstp
in
add
dec
add
test
nop
mov
push
pop
lods
cmp
ror
or
mov
xchg
inc
or
daa
decl
push
push
jns
mulb
mov
xchg
in
xlat
and
xchg
popa
jg
iret
inc
cmp
repnz
jbe
roll
xor
sub
push
mov
xchg
push
dec
fcoms
pop
scas
inc
cld
cltd
in
test
test
mov
js
xchg
add
push
out
mov
pop
ret
add
shlb
outsl
fnsave
xchg
xchg
adc
xlat
mov
or
dec
pop
cmp
fdivp
xchg
stc
and
xor
push
sbb
dec
mov
adc
sub
test
mov
sub
adc
nop
or
dec
adc
lcall
adc
jo
mov
inc
xchg
add
xchg
roll
add
lahf
mov
push
or
inc
jmp
push
mov
dec
fdivl
xor
push
xchg
cld
mov
cmp
adc
push
and
stos
test
nop
pop
in
cmc
testb
push
aas
xchg
and
lds
int
xor
leave
push
push
mov
jecxz
fstps
addr16
sahf
push
inc
push
fs
movsb
loope
jne
jae
iret
inc
inc
fcomps
and
jle
cltd
dec
inc
loop
nop
jecxz
rclb
out
sub
jmp
sbb
push
sub
ja
mov
nop
icebp
popa
ret
test
lcall
scas
push
dec
and
les
or
fwait
or
aad
xchg
jge
and
add
rclb
adc
cld
xchg
cmp
je
dec
imulb
mov
cltd
inc
mov
rclb
dec
das
lret
xchg
out
xor
inc
pop
sar
lods
shlb
arpl
out
pop
xor
loope
js
add
cwtl
dec
popa
fucom
neg
mov
loopne
sahf
mov
or
add
push
out
clc
test
mov
add
xor
ja
mov
loopne
add
lock
leave
cmp
das
dec
test
lods
pop
popa
mov
ja
or
frstor
cmpsb
mov
mov
aad
push
out
popa
int
test
push
sub
sbb
loop
inc
fnstenv
sub
and
imul
pusha
inc
inc
sbb
xor
in
mov
pushf
sub
jo
cmp
cltd
and
shlb
jns
mov
sub
xchg
xlat
roll
mov
jo
and
adc
sahf
push
in
pop
test
jmp
sbb
mov
add
sub
fidivl
repnz
inc
push
sub
push
enter
in
push
loopne
sbb
xchg
add
mov
mov
push
fnstcw
call
mov
xor
mov
cltd
shll
ljmp
mov
jg
mov
or
mov
adc
jno
dec
sub
mov
stc
popa
mov
adc
mov
loope
ficomps
popf
and
loope
dec
push
xchg
movsb
dec
mov
sahf
aaa
lea
js
inc
xor
pusha
jbe
movsb
push
push
subb
stos
lret
repz
push
xor
aas
repz
idivl
xchg
mov
inc
push
xchg
in
pop
xchg
cmp
push
stc
jbe
jmp
in
jbe
and
mov
push
std
in
push
out
lret
repz
xor
mov
ja
dec
fcmovbe
xchg
sbb
mov
or
adc
inc
inc
mov
or
jmp
mov
pop
fwait
jg
shlb
imulb
les
xor
or
ljmp
or
in
mov
jnp
jne
fdivs
nop
cmp
dec
adc
insb
pop
push
ds
cmp
mov
sbb
repnz
xchg
mov
fbstp
sti
sbb
mov
fidivrl
movsl
stos
sub
add
sbb
loop
popa
in
push
adc
inc
scas
lret
xchg
push
stos
js
loope
int
pop
pop
call
push
xchg
roll
roll
push
mulb
mov
push
aaa
enter
adc
adc
inc
dec
lret
cwtl
aaa
and
dec
xchg
inc
dec
adc
aam
xchg
lret
xchg
cmc
sub
jno
ficoms
imul
scas
sbb
lahf
sbb
lea
sbb
mov
inc
dec
push
shlb
or
dec
sbb
mov
dec
jg
sbb
or
sbb
mov
es
adcb
add
pop
jo
add
jbe
mov
lods
je
dec
pop
jbe
iret
std
dec
cmp
dec
fcos
add
testb
imul
out
out
and
cli
push
dec
sub
mulb
inc
inc
ret
jmp
mov
and
inc
sbb
jecxz
jg
sub
mov
out
sbb
push
cli
mov
cmpsb
movsl
dec
dec
inc
xor
push
sbb
jb,pt
inc
xchg
mov
pop
or
stos
cmp
mov
push
es
xlat
clc
adc
pop
mov
xchg
xor
movsl
cltd
or
fs
leave
lods
and
xchg
adc
cli
xlat
inc
mov
leave
pop
inc
pop
sub
jbe
pushf
fisttps
ret
and
mov
into
xor
pop
xlat
test
mov
push
or
ret
xorb
xor
or
dec
les
cmp
pushf
inc
sub
hlt
mov
mov
pushf
mov
rol
fwait
sbb
fmull
notb
clc
mov
ljmp
jmp
in
or
test
xor
push
add
jnp
sub
fmuls
mov
rorb
ret
push
pushf
ret
enter
fildll
adc
inc
loopne
cmp
adc
out
adc
notl
and
push
sti
add
jg
fisttps
insb
ds
ja
mov
sub
insb
cmp
inc
sbb
js
pop
nop
scas
push
dec
dec
adc
add
cmp
dec
jae
jae
pop
push
popa
xchg
ss
mov
scas
inc
sub
mov
loope
sbb
jmp
call
mov
popa
jmp
mov
clc
and
clc
test
scas
ret
lcall
mov
in
sub
inc
das
imulb
fwait
cmpsl
pop
sti
test
cmp
push
inc
or
pop
dec
popf
scas
aaa
push
cmpsl
mov
mov
popf
adc
cwtl
aas
in
mov
leave
cmpsl
fsts
aaa
lret
jmp
mov
ret
xor
call
sub
cld
mull
sbb
adc
jl
test
dec
stos
in
push
popf
mov
clc
push
or
jge
mov
jle
ret
adc
pop
subb
stos
mov
out
jno
lcall
or
pop
aad
ret
int3
fldenv
sbb
mov
pop
mov
adc
sub
mov
sub
outsl
mov
incb
in
popf
xchg
pop
xlat
push
stos
in
push
jecxz
popf
iret
out
dec
xchg
xor
fcoml
lds
cmc
inc
sbb
mov
cli
lds
or
lret
es
stos
mov
jg
cmp
xchg
cmpb
dec
jecxz
cld
stos
xchg
push
jle
push
cld
imul
decl
lss
loopne
sub
xor
pop
and
or
popa
cli
out
or
pop
cmpsl
sbb
xor
jl
mov
mov
dec
mov
or
lods
out
aaa
stc
mov
add
shlb
or
dec
jge
ret
cmp
cmc
pop
rcll
mov
mov
push
push
cmp
mov
data16
pop
or
ficompl
mov
adc
loopne
out
test
in
add
shlb
dec
push
push
or
int3
and
ret
loope
mov
adc
lret
xchg
xlat
lcall
mov
lods
mov
inc
les
push
mov
xor
mov
lcall
pop
dec
subb
repz
pop
mov
jnp
mov
xor
inc
jle
dec
lds
cmp
jno
dec
jle
stos
cli
daa
repnz
mov
add
in
lret
mov
mov
pop
imul
mov
pop
out
iret
adc
pop
pop
sarb
scas
iret
in
dec
mov
outsb
ljmp
adc
xchg
into
mov
mov
cmpsl
jne
shlb
ljmp
lock
sahf
rorl
fs
adc
sbb
mov
lcall
gs
je
dec
dec
fisttpll
push
idivl
mov
cmp
movsl
jb
lea
dec
jno
mov
inc
sub
stos
push
and
cmpsl
rol
imul
adc
out
dec
mov
mov
sbb
lahf
and
jb
xor
mov
pop
mov
lcall
insl
dec
cmp
subl
or
pop
stos
in
pop
sar
imul
dec
movsb
fmulp
pushf
jno
and
aam
jge
add
cmpsb
push
loop
test
fisttpll
jae
out
js
repnz
mov
mov
inc
cmc
shl
lahf
mov
mov
add
test
dec
or
cmpsb
addl
dec
stos
cmp
test
ds
lret
arpl
movsb
xchg
push
jecxz
stc
addr16
mov
xor
mov
dec
dec
dec
lcall
jecxz
lret
pop
addb
in
fmulp
jno
popa
xchg
sub
push
pop
mov
cmp
aaa
jnp
and
les
je
dec
cwtl
nop
push
pop
mov
jnp
add
fsts
jo
rcrb
hlt
xchg
add
lock
enter
cmp
mov
stos
or
stos
int3
jae
jnp
scas
outsb
mov
add
jecxz
mov
jle
pusha
cwtl
movsb
pusha
mov
lods
mov
xchg
jecxz
cmp
sub
sub
ljmp
jl
add
or
mov
shrb
push
cmp
pusha
push
pop
dec
in
fwait
ja
ja
mov
imul
xor
fimull
or
insl
or
in
mov
xor
mov
lock
xchg
imul
into
rolb
xchg
mov
pop
insb
popa
scas
cld
lcall
icebp
rolb
sbb
mov
jl
sub
adc
push
test
mov
inc
adcb
push
push
push
xor
fs
das
les
cmpsl
or
push
inc
in
and
fisubs
and
in
test
inc
dec
imul
arpl
jo
xor
push
icebp
test
testb
sarl
adc
imul
cld
mov
out
mov
mov
push
sbb
orb
cmp
add
scas
push
xor
and
movsb
imul
dec
ficoms
ljmp
cmp
cs
in
test
inc
sti
insb
loope
jp
xor
sub
mov
sub
ss
mov
repnz
or
mov
jp
add
push
jg
xlat
into
insl
push
cltd
test
jne
and
notl
sbb
in
aam
push
out
cmc
xchg
scas
cmp
aas
mov
push
sbbb
out
test
cmp
or
or
hlt
dec
das
addb
and
cmp
mov
push
push
nop
imul
lods
add
inc
test
cmp
repz
int3
mov
mov
or
je
adc
cmc
ret
and
pop
fnstsw
adc
leave
pop
xor
mov
add
xchg
push
ja
icebp
and
hlt
shl
mov
inc
push
insl
push
add
pop
xor
push
xchg
lcall
mov
xor
notl
mov
sbb
insb
rclb
jge
icebp
enter
cmc
inc
mov
cld
scas
or
fs
dec
xchg
or
arpl
incl
push
add
sub
inc
sub
rorl
jg
ret
sub
inc
pop
mov
sahf
lds
repnz
insl
sbb
cmp
sahf
std
std
fwait
push
jecxz
lret
repnz
addl
stos
insl
jl
in
mov
lods
gs
jb
push
clc
insl
cmp
jb
loope,pt
es
test
pusha
mov
add
shll
pop
aam
dec
enter
push
cmpl
push
cmpl
inc
ret
popa
xor
cs
pop
iret
adc
rol
xlat
sbb
jbe
xchg
xlat
fisubs
xchg
add
daa
movsb
sbb
aaa
push
add
mov
arpl
mov
xor
fwait
push
cmpb
pop
adc
mov
inc
mov
pop
adc
sar
enter
pusha
xor
cld
push
das
cmc
bound
arpl
jg
stc
scas
add
aas
xchg
sub
mov
insb
pop
dec
push
mov
pop
frstor
xchg
dec
cltd
push
inc
movsb
shlb
scas
movl
mov
inc
gs
push
lcall
lds
scas
out
ret
loopne
xchg
sbbl
jo
pusha
imul
and
enter
adc
and
movsl
out
stos
in
loop
lret
jmp
cmc
pop
out
pop
popa
jbe
ret
je
fldt
lret
lret
lds
scas
or
out
das
fidivl
lea
and
pop
xchg
push
ljmp
or
out
sbb
ffreep
test
xchg
int
cmp
xor
cli
mov
xchg
dec
pop
dec
dec
ficomps
push
pop
incb
jbe
sahf
inc
test
in
push
shrb
call
adc
lea
stos
ret
inc
jle
hlt
ret
cltd
test
mov
mov
ret
mov
push
sbb
cmp
dec
in
inc
sub
xlat
hlt
add
and
addr16
inc
test
adc
push
push
fwait
insl
aas
adc
or
clc
loopne
lds
iret
jp
mov
fmuls
pop
ret
push
xchg
sbb
sbb
popf
adc
mov
rcrl
enter
push
or
mov
jp
mov
mov
xlat
adc
inc
jge
int3
lds
push
repnz
push
leave
fstps
outsl
inc
rorl
clc
loop
pop
xor
xor
cltd
insl
fsts
mov
jp
add
es
call
mov
push
push
aas
sarl
lea
mov
mov
cmp
icebp
imul
dec
sub
mov
rcl
insl
pop
dec
cmp
sub
add
and
lods
dec
out
in
fcmovne
testb
jb
cld
or
lds
popf
test
mov
mulb
sub
arpl
js
fwait
shrb
mov
fcmovnu
mov
ja
push
mov
pushf
mov
addr16
stc
inc
add
fists
jno
adc
pop
in
std
push
in
sub
add
out
and
jbe
and
iret
push
stos
outsl
lahf
cmp
bound
orb
fdivs
cli
cmpsl
dec
inc
imul
and
fs
mov
xchg
aad
int
aas
inc
sub
je
push
out
jnp
popa
jne
shlb
mov
mov
or
xor
rolb
sbb
jnp
and
inc
push
and
scas
add
xorb
cmpsl
out
test
add
sbbl
cwtl
ret
cmp
pop
in
mov
nop
ja
lods
pushf
test
cwtl
xchg
pop
adc
repz
inc
jmp
mov
fidivrs
cmp
iret
int
add
add
lahf
mov
fisubs
jno
outsl
in
out
test
jp
repz
sbb
jb
xor
xchg
inc
add
push
jns
lcall
in
lods
adc
or
xchg
stos
or
dec
xor
push
xchg
mov
jae
sahf
stc
mov
push
inc
cmp
aam
repz
je
dec
out
imul
out
adc
sbb
sbb
sub
mov
stc
popa
call
inc
or
pop
pop
mov
test
dec
aad
into
addr16
push
lcall
cwtl
mov
sahf
and
cmp
shrb
mov
stos
lahf
mov
dec
mov
mov
dec
fbld
bound
aad
xchg
cmp
dec
mov
test
test
lret
jbe
or
mov
loope
cmp
je
rcl
mov
loopne
inc
es
stos
xor
add
ror
mov
mov
outsw
insb
pop
gs
mov
jmp
jp
mov
and
xchg
sbb
fimuls
cmp
jmp
push
fisubrs
loopne
data16
and
test
jp,pn
gs
cmp
out
in
sub
shr
push
movb
sub
xchg
add
jno
ds
jge
enter
dec
hlt
aaa
scas
push
ja
fstl
dec
aas
sahf
call
xor
repnz
adcb
pop
lret
or
adc
addr16
test
or
xchg
inc
sub
inc
cmpsl
or
gs
push
jg
jmp
dec
add
lret
fidivl
mov
dec
dec
or
adc
ljmp
pop
rcll
testl
xchg
js
pop
addr16
inc
jle
sbb
inc
xchg
add
lret
cwtl
jle
xor
lret
or
xor
notb
les
in
movsl
inc
fdivrs
mov
adc
jp
std
jmp
ds
xchg
fistpll
and
mov
fldl
fisttpll
popa
adc
mov
addr16
in
add
push
xor
add
jbe
cli
pop
or
jno
call
ret
jl
les
aad
dec
mov
pop
pop
mov
mov
add
addr16
sti
icebp
cli
aaa
lahf
sbb
repz
dec
ds
aad
out
inc
inc
pop
repz
fildl
loop
or
pushf
add
or
cwtl
mov
pop
lods
xor
nop
push
cltd
push
repz
test
sub
ret
adc
mov
push
test
dec
jns
cmp
pusha
dec
and
enter
sti
lods
xor
push
lock
and
jecxz
mov
loopne
addr16
aas
xlat
jecxz
push
dec
xchg
dec
into
dec
push
jno
or
lods
xchg
sbb
or
imul
stos
sbb
leave
movsl
icebp
ljmp
pop
out
in
push
sub
sub
jp
mov
std
aad
int
jae
ret
pusha
adc
sbb
adc
imul
jno
bound
mov
xchg
cwtl
jne
jge
and
xchg
js
jmp
sbb
and
adcb
lcall
repz
dec
jecxz,pn
jmp
ds
jo
or
lock
outsl
aad
mov
xor
inc
push
cmp
mov
sbb
mov
inc
adc
push
jmp
fbld
nop
cmp
inc
cmpsl
rorl
adc
push
imul
sub
and
xchg
push
cmp
fs
test
iret
adc
add
pop
iret
inc
lret
and
mov
xlat
lds
cwtl
test
cmpsb
push
mov
sbb
pushf
cmc
push
fisubrs
fists
push
mov
lahf
or
jmp
xlat
xchg
adc
mov
in
and
xor
mov
loop
xor
jns
imul
adc
sub
cmp
popf
cwtl
mov
adc
add
jl
push
mov
fmull
lods
xchg
adc
sahf
pop
xor
jne
and
leave
popf
xor
lahf
cli
jb
push
sbb
xchg
or
adc
xor
push
push
out
push
cmp
cwtl
push
rorl
js
push
sbb
test
and
or
and
lods
decl
dec
jb
fwait
daa
insl
fdivr
adc
jb
cmpsb
imul
mov
mov
add
mov
mov
aam
cs
inc
ljmp
sbb
dec
aas
popa
aas
xor
test
nop
insl
gs
loop
out
push
stos
adc
nop
inc
pop
dec
cs
inc
inc
cli
add
and
and
xchg
lock
and
dec
jp
lods
movsl
mov
cmpb
cld
pop
repnz
enter
es
mov
fldl2t
subl
lea
sbb
pop
cmp
mov
stos
mov
fdivl
ljmp
movsb
loop
xor
imul
sbb
pop
cmp
test
fldenv
out
test
or
dec
ss
sub
sahf
jnp
arpl
icebp
test
bound
je
popf
xor
cmpl
andb
std
xchg
jg
sub
push
adc
jmp
je
rcl
loope
inc
icebp
sub
jl
mov
lret
mov
in
iret
scas
test
push
adcb
out
pop
xchg
mov
cmpb
add
rorl
jae
or
enter
push
push
jbe
repz
aaa
out
pop
mov
jb
ja
out
shlb
dec
iret
sbb
aas
aad
ljmp
stc
orb
or
arpl
data16
inc
xor
mov
scas
mov
adc
in
mov
nop
jp
loope
cltd
aad
xchg
inc
cmp
outsb
aas
push
dec
xchg
insl
xlat
and
pop
xor
and
movsb
in
lds
pop
insl
in
and
imul
popa
inc
nop
test
push
and
sarb
inc
mov
scas
mov
insl
js
out
push
fnsave
pop
inc
push
xlat
or
fstpl
jno
sbb
jnp
pop
sbb
and
pop
out
enter
dec
dec
push
or
testl
mov
and
mulb
push
sti
push
rcl
movsl
loopne
fists
fwait
sbb
enter
push
call
mov
inc
add
mov
imul
rorb
lcall
insl
jbe
loop
js,pt
push
push
xor
and
ret
mov
mov
xlat
std
and
jmp
push
sbb
cltd
inc
ret
lock
or
js
aam
out
mov
movsb
or
jle
xlat
test
bound
sub
sbb
sbb
cli
mov
adc
and
sbb
pop
or
stos
mov
hlt
push
sub
lock
les
repnz
mov
stos
jmp
sti
add
movsl
cltd
xchg
neg
insl
pop
cld
loope
arpl
lock
mov
stos
pop
sti
mov
cmpl
mov
lahf
lds
into
pop
jp
cmpsb
outsb
push
add
dec
fstp
lods
ficomps
loope
mov
lods
xor
xchg
mov
hlt
add
or
lret
mov
rclb
and
dec
scas
add
ljmp
xchg
jae
or
pushf
stc
call
js
leave
jae
lods
addl
loop
lock
imul
push
xchg
mov
and
ss
or
cltd
mov
mov
xor
shlb
dec
and
pusha
pop
lcall
out
sti
mov
pop
rcr
push
mov
cmp
push
in
lea
and
cmp
mov
pop
push
lds
lahf
lds
push
inc
jecxz
dec
cmpl
ds
cmp
repnz
fistpl
sbb
xchg
sbb
jmp
adc
xor
js
xor
sub
test
cmp
idiv
push
arpl
push
mov
out
popa
push
shrb
stc
dec
mov
push
pushf
cltd
push
ljmp
mov
sar
sbb
push
fisubrs
and
cmp
testl
in
loope
sub
fs
or
fidivrl
inc
jp
cmc
movsl
testb
ror
sub
add
enter
orl
arpl
mov
mov
movsb
and
pop
bound
inc
xor
scas
stos
cmpsl
insb
jp
add
inc
and
sub
lods
mov
sahf
ljmp
sub
int
repz
fdivrl
sarl
cld
pmuludq
dec
pop
in
push
or
jae
int
out
iret
sub
stos
push
lods
dec
mov
insl
and
or
mov
xchg
fadds
push
xchg
sbb
fadd
cmpsb
test
pop
pushf
adc
or
dec
fildll
inc
push
sbb
out
bound
ret
cmpsl
mov
js
push
aaa
adc
adc
jg
mov
sbb
sahf
ss
xchg
stc
aam
jne
lds
ja
mov
cmp
repnz
icebp
je
ljmp
mov
sbb
jbe
loop
pop
js
cmpsb
adc
adc
dec
mov
sub
xchg
ret
mov
mov
dec
mov
dec
push
call
inc
pop
mov
cli
dec
loop
mov
xchg
pop
and
in
fdivrs
dec
add
leave
mov
xlat
ds
mov
jns
jmp
inc
insl
int
mov
xor
jae
push
add
fimull
gs
ds
lods
repnz
test
and
push
rcll
jns
jo
xor
lahf
and
cmp
sbb
das
fs
and
ret
or
mov
inc
mov
cmp
test
sub
cmp
mov
popa
xchg
mov
lahf
xor
pushf
jp
orb
pop
in
outsb
jno
sbb
out
lret
shrl
mov
imul
adc
fs
inc
xchg
loope
sbb
pop
push
add
das
rcl
pushf
dec
jl
pop
mov
mov
pusha
fdivrp
imul
pop
aam
into
and
loopne
jbe
rcl
add
adc
test
in
scas
inc
lds
inc
addr16
mov
lret
in
dec
ret
in
push
mov
and
pop
push
jge
add
adc
pop
push
pop
jl
loopne
in
pop
xchg
mov
sarb
in
aam
addr16
int3
fstps
pop
pushf
lahf
add
push
int
xchg
rcrl
dec
loop
jnp
out
add
out
mov
aaa
jns
daa
incl
scas
adc
mov
lea
rcll
and
sub
mov
aaa
xor
movsl
xchg
loop
orb
mov
loope
ja
fwait
dec
sub
hlt
ret
mov
mov
dec
and
rorb
in
cmpsb
fxch
mov
cli
sbbl
push
gs
outsb
out
push
pop
fwait
insb
pop
repz
xchg
bound
mov
les
xor
xchg
gs
imul
sub
jne
xchg
lods
lods
sbb
mov
cmp
mov
andb
pop
add
lock
push
jecxz
and
mov
mov
cmp
jge
mov
sarl
lods
popa
fistpll
daa
scas
jnp
rol
pop
and
xchg
sbb
addb
movsl
cmp
in
adc
fs
mov
dec
pop
add
andl
rcll
test
js
xor
ficoml
mov
fs
push
fsubr
mov
xor
sub
and
push
fldl
pop
push
mov
fs
test
sbb
pop
out
jg
sbb
jl
push
jp
arpl
pop
es
leave
in
mov
pop
jmp
xor
cmc
call
add
push
pop
aas
in
hlt
pop
frstor
pusha
cmp
mov
cmp
jns
lods
lret
mov
jg
lods
incb
imul
pop
push
xchg
inc
fistl
std
push
xchg
add
in
mov
fwait
pop
sub
dec
pop
sbb
mov
adc
pop
jno
ljmp
cmc
sub
cmp
cmp
push
roll
ret
push
cs
inc
aad
xor
lock
mov
pushf
cwtl
pop
ret
lods
pop
mov
out
jl
and
sbb
pop
lods
inc
mov
mov
cmp
das
test
fwait
push
xchg
adc
lock
mov
rcrl
repnz
jle
int
rorb
in
sub
mov
push
or
and
inc
dec
sub
sbb
je
xchg
call
or
cmpl
enter
imul
jnp
or
pop
in
inc
push
xor
jae
insb
in
rcrb
jbe
or
rclb
push
adc
aad
xor
faddl
les
data16
test
stos
mov
out
xchg
pushf
lock
xchg
lods
incl
xor
jl
loopne
popf
aaa
out
xchg
xorl
sbb
mov
mov
stos
adc
jo
cmp
or
add
sub
sub
repz
push
iret
in
loop
fists
outsl
add
and
adc
cmpsb
sti
in
sbbb
and
mov
fs
xchg
pop
and
inc
addr16
icebp
xchg
mov
adc
add
xchg
popf
mov
add
mov
and
lea
aaa
sbb
outsl
in
mov
insb
inc
rolb
pop
in
movsl
dec
adc
gs
jle
stos
andl
das
aaa
jmp
adc
lcall
mov
data16
faddl
test
jecxz
sub
repnz
add
fwait
xchg
mov
cld
mov
enter
insl
adc
push
push
or
lahf
adc
lock
mov
imul
ret
dec
imul
push
pushaw
int
cmp
mov
das
and
jnp
cld
pop
sub
ss
pop
mov
prefetch
leave
mov
xchg
fimull
sub
mov
sti
xchg
sbb
stc
outsb
mov
roll
fneni(8087
and
xchg
pop
repnz
ret
clc
ljmp
push
mov
pop
mov
bnd
imul
sub
divl
mov
and
mov
pop
adc
inc
mov
cli
jmp
mov
pop
xor
or
add
ja
xor
jp
cmp
stos
xor
loopne
or
hlt
jno
add
add
hlt
push
repnz
nop
and
mov
addr16
sbb
mov
neg
fs
xor
ret
popl
lods
jl
pop
mov
mov
daa
jl
pop
mov
pop
push
sbb
out
sub
or
inc
lahf
adc
and
fidivs
or
jno
sub
mov
pop
std
xor
pusha
pop
imul
push
mov
clc
jns
mov
cmpsl
cmp
push
out
jmp
dec
pop
pop
xchg
insb
fninit
lahf
mov
insb
dec
jmp
popa
test
mov
cmc
rorb
push
mov
test
aad
dec
faddl
pop
aam
mov
xorl
stos
push
cmpsl
sbbl
fmul
mov
mov
cmp
in
cwtl
and
jecxz
in
nop
insb
out
cmpsb
out
add
or
mov
cli
fistps
nop
push
stos
lcall
xor
imul
mov
mov
inc
stc
subl
bound
jo
test
or
ss
pop
sub
sub
in
shufps
das
fnstenv
mov
and
adc
sub
or
jp
loop
mov
add
sti
xchg
int3
clc
fidivrs
sti
sbb
add
fwait
cwtl
in
mov
dec
sub
inc
mov
cmc
dec
add
pop
mov
inc
mov
ljmp
test
cmp
enter
ljmp
xchg
adcl
jno
notb
sbb
push
mov
dec
repz
ret
jg
fs
pop
cmp
lods
lret
mov
mov
aaa
shlb
pop
ja
inc
mov
or
mov
jne
int3
in
shlb
test
xor
inc
dec
xchg
fstpt
mov
and
jbe
and
cmpsb
addb
shrl
ret
jp
xlat
cli
adc
mov
and
arpl
sbb
mov
jecxz
push
sbb
dec
out
shl
test
mov
or
pop
pop
push
lea
add
add
fisubrl
pop
popl
push
add
fwait
int
test
jae
and
sbb
jnp
inc
mov
imul
xchg
hlt
lock
push
adc
and
mov
push
cwtl
cmp
test
inc
xchg
stos
sbb
ss
testb
cmp
jl
or
mov
imul
mov
fadds
jnp
inc
sub
pusha
xchg
xor
int
outsl
test
jecxz
dec
mov
jge
stc
pusha
lds
mov
jbe
jne
sbb
jp
jl
mov
repz
flds
inc
sbb
aas
out
mov
cli
icebp
iret
adc
inc
push
int3
fdivl
iret
inc
sub
in
dec
push
add
inc
mov
inc
or
mov
addr16
add
mov
cmpsl
ja
leave
lods
sbb
scas
xor
dec
daa
fwait
mov
arpl
mov
sar
aam
sbb
dec
lahf
pop
pop
pop
js
test
and
pop
stos
dec
fnstcw
cmc
xor
outsl
or
and
int3
fsub
ja
cld
xacquire
jle
pop
add
gs
mov
movsl
insb
aam
mov
xorl
sub
push
aad
pop
inc
je
pop
xor
popf
outsl
xchg
jmp
popf
incb
pop
jns
inc
xlat
idivl
inc
inc
xchg
addr16
push
loopne
pop
mul
push
push
and
fs
cmp
fidivs
roll
or
sub
cld
adc
pusha
mov
clc
movsl
mov
mov
scas
bound
inc
out
lret
inc
lea
sbbb
inc
sbb
push
cmp
fs
pop
int
mov
ja
dec
out
test
adc
imul
popa
les
cltd
sbb
pop
jno
test
enter
pop
and
repnz
lret
dec
orb
sub
imul
int
or
imul
sub
stos
or
sti
lock
decb
add
or
leave
xor
inc
jl
add
inc
loopne
mov
shlb
inc
adc
repz
loopne
xchg
add
sub
xor
shlb
inc
adc
ja
inc
orb
pop
xchg
leave
inc
cli
xor
jge
pop
in
in
mov
lret
sti
in
cmp
out
adc
sbb
shrl
mov
xchg
inc
ds
adc
addr16
xor
clc
aad
scas
jmp
aaa
and
mov
mov
push
test
in
pop
push
nop
jmp
insb
pushf
aas
lcall
rcll
pop
cmp
sahf
push
rol
enter
mov
sarb
enter
outsl
mov
movl
cmc
and
movsb
out
jmp
gs
sarb
inc
push
and
xor
sbb
lret
mov
sub
addr16
shrl
pop
lods
pop
jns
lret
lea
ret
mov
int3
or
int
cli
clc
xchg
and
roll
dec
sub
mov
jg
mov
out
xor
xor
adc
or
stos
inc
jno
pushf
jle
jae
push
stc
mov
shlb
cmp
leave
mulb
mov
dec
js
rorl
jle
sarb
dec
lahf
jg
sub
inc
les
cmp
shll
push
and
shrb
adcl
in
cld
push
xor
cmp
mov
repz
dec
stos
cld
mov
pop
and
cmp
sbb
je
pop
daa
repz
sub
stos
pusha
mov
in
adc
aam
sbb
push
sbb
add
hlt
ss
jecxz
cwtl
pop
les
cli
inc
cmc
add
sub
cmp
clc
mov
jp
lock
adc
adc
cmpsl
jbe
je
and
cmp
jo
push
inc
icebp
flds
movsl
or
sbb
scas
sahf
mov
adc
mov
xchg
cli
and
ds
shlb
push
stos
pop
xlat
les
lret
ret
popf
loop
inc
test
xor
xor
xlat
mov
sti
mov
out
lret
adc
jecxz
or
mov
test
and
xchg
fstl
xchg
stos
dec
fsubrs
clc
or
aad
add
gs
mov
andb
loope
rcll
cmpsl
mov
lds
sbb
push
cmp
aam
or
or
shr
out
sub
jo
arpl
mov
cs
xlat
mov
mov
andl
lea
mov
dec
xchg
and
hlt
jl
test
dec
add
sti
in
sbb
fnstsw
dec
cmpsl
dec
aad
movsb
cmp
push
inc
rcrl
xor
mov
or
sub
jmp
shl
mov
pop
shl
int3
add
sbb
push
mov
shr
mov
fs
add
lds
loope
and
fwait
mov
pmulhuw
sahf
out
sub
xchg
jnp
fsubrl
cwtl
or
cli
sbb
push
popa
ljmp
sub
adc
adc
pop
mov
popa
xchg
lods
sub
and
sub
mov
syscall
out
dec
cli
ja
push
push
gs
adc
cmp
lret
or
inc
xlat
or
out
sub
mov
cmp
sub
or
movsl
mov
fwait
enter
fldenv
jns
jmp
jg
jecxz
and
xchg
xchg
out
ljmp
shlb
add
ljmp
mov
inc
pop
jle
cld
push
out
jnp
xchg
sub
pop
popa
add
mov
sub
in
push
in
mov
mov
jge
sahf
stc
test
adc
xchg
jge
les
xor
mov
cmp
xor
loop
out
lcall
push
test
pop
mov
mov
and
leave
aaa
push
das
fdivrp
or
aad
movl
pop
ja
mov
scas
pop
jns
lret
dec
dec
push
out
aas
adcl
imul
or
fwait
jno
decl
adc
loopne
mov
mov
or
rcrl
or
and
ja
mov
and
es
inc
dec
sub
pop
in
push
jecxz
nop
mov
scas
lret
loope,pn
adc
fwait
inc
jp
into
cli
in
or
std
jb
repz
nop
push
pushl
aas
jo
jo
lret
sti
insl
or
xchg
jae
sbb
stc
jns
jno
mov
cmp
fadds
and
add
mov
push
sbb
sub
mov
gs
lods
outsl
jnp
and
sarb
adcl
mov
dec
cs
jle
decl
fcmovnbe
inc
mov
mov
cmp
fcmovne
cld
out
inc
cmp
xor
sub
dec
cmp
cmp
inc
xchg
sbb
and
inc
popf
mov
ljmp
test
sti
repnz
push
test
sub
xchg
and
imul
in
xor
or
sub
sub
js
jl
movsb
inc
pop
xor
or
mov
xor
xchg
mov
stos
add
adc
jle
bound
mov
fisubrs
call
sbb
rep
shlb
or
jb
stos
mov
aaa
ds
mov
or
push
adc
sarb
mov
iret
mov
test
xchg
and
cmc
out
bound
popf
mov
push
repnz
cmpl
dec
and
jbe
roll
jg
cmpl
aaa
cmp
in
push
inc
sahf
add
mov
mov
outsl
lret
rolb
iret
xchg
shr
push
in
les
cli
pop
fcomps
out
cmpsl
cmp
loop
popf
xor
daa
inc
xchg
in
add
sbb
push
pop
cltd
aam
rolb
xchg
shll
pop
or
test
sub
jecxz
sub
stc
and
nop
outsl
cmp
dec
imul
cmp
shll
call
lods
dec
bound
lahf
sub
pop
jp
pop
pop
sti
sub
cmp
mov
adc
aas
xchg
incb
insb
xchg
leave
push
pop
fld
cmp
inc
mov
pop
cmc
stc
and
adc
mov
add
lods
lcall
dec
das
shll
mov
sbb
push
shll
pop
jle
orb
movsb
pop
pop
lock
imul
out
push
rcrl
lahf
loop
mov
repnz
lds
push
lods
push
mov
into
leave
and
stos
dec
imul
aad
pop
mov
inc
fwait
push
dec
xor
jo
xchg
bound
or
pop
mov
cli
std
andl
mov
daa
sarl
lcall
test
cmp
daa
sbb
es
repz
arpl
mov
add
push
mov
or
ljmp
mov
sbb
imul
popf
inc
inc
stc
pop
cmp
mov
xchg
push
push
js
outsl
mov
shl
add
repz
sahf
and
mov
into
daa
pusha
sbb
call
sbbl
mov
aaa
or
xchg
icebp
sbb
subb
nop
imul
lcall
push
shrl
imul
inc
push
insb
mov
imul
mov
sub
push
sbb
icebp
xchg
les
mov
mov
mov
mov
in
lods
pop
pop
sub
add
out
cmc
xchg
sub
push
inc
stc
into
jge
jae
dec
out
fisttps
cmp
xorl
pop
mov
add
pop
adc
jmp
pop
mov
imul
push
jmp
jne
cmc
cmpsl
pop
adc
xchg
lcall
or
cmpsb
fidivrl
loopne
cli
mov
xor
cld
adc
fistpl
subl
aam
mov
orb
test
pop
repnz
out
cmp
push
aad
inc
mov
fistpl
fldcw
fistpl
call
mov
insl
sbb
sub
mov
dec
mov
nop
mov
in
iret
mov
or
adc
mov
jg
outsb
pop
scas
mov
repz
or
fsubr
add
or
and
jae
inc
jo
inc
loop
ret
in
loop
push
outsb
imul
xchg
sub
lcall
xchg
push
add
dec
or
insl
clc
scas
pop
pop
sub
in
icebp
jae
dec
loop
push
imul
jg
push
movb
jo
sub
daa
sub
push
xchg
sub
int3
jecxz
idivb
jo
add
xor
sub
push
imul
lods
fiadds
mov
pushf
arpl
repz
jecxz
test
pop
in
pusha
imul
xor
not
push
and
pop
movsb
adc
fdivr
add
mov
pop
ja
inc
xor
clc
sahf
xchg
pop
ljmp
xchg
mov
inc
bound
adc
sub
iret
ret
or
or
jecxz
dec
mov
adc
adc
mov
push
subl
rorl
xchg
sti
cmpsl
int
jp
jno
fsubr
movsb
pop
or
fwait
mov
sbb
mov
xchg
xor
xchg
and
and
iret
in
notb
fiaddl
int
out
pushf
stc
mov
pushf
sbb
jmp
enter
lods
xchg
dec
cli
push
cmp
and
call
pusha
outsl
mov
xchg
xor
mov
xor
mov
lahf
aas
sub
inc
jns
mov
lahf
in
push
fwait
imul
jle
adc
es
scas
mov
push
add
add
sahf
mov
repz
lea
mov
cs
pop
pop
jle
jle
fistpll
into
xlat
jae
xor
outsb
cmp
push
lock
fstps
pop
dec
jbe
icebp
cmp
outsl
arpl
enter
lcall
dec
mov
fnclex
sub
loopne
pushf
mov
stos
dec
add
mov
les
pop
pop
dec
out
mov
call
adc
bswap
mov
jnp
jge
xor
dec
jno
dec
inc
xchg
roll
push
cmpsl
sbb
popa
push
icebp
lcall
clc
repz
test
hlt
nop
out
stos
jmp
inc
lret
outsl
sbb
xlat
xor
xchg
iret
xchg
xor
ljmp
sbbb
mov
xor
mov
mov
lret
fs
nop
fmul
mov
cmpsl
cltd
add
push
xchg
cmpsb
je
mov
or
cmp
lea
push
mov
sub
mov
adc
js,pn
add
sub
clc
mov
sbb
mov
push
sub
ss
xchg
and
loop
loope
fstps
mov
fisttps
adc
inc
xchg
lcall
mov
xor
std
hlt
imul
lods
xchg
cs
aad
ljmp
mov
gs
lret
push
xchg
std
testw
daa
cmpsb
adc
jle
xchg
cmp
dec
mov
ss
pop
stos
shl
adc
dec
loopne
cmp
mov
mov
sub
lods
sbb
stos
out
and
sub
ret
sub
fidivrs
mov
mulps
insl
stos
lock
testb
cmpsb
cmp
add
push
inc
or
lcall
xor
inc
test
inc
cmc
pop
insb
mov
stos
fdivrl
cld
mov
sbbl
jmp
ss
pop
test
and
adc
jp
lcall
call
test
adc
push
cmp
add
jle
pop
jmp
jmp
mov
addb
es
std
popa
mov
sahf
and
fnstsw
daa
cmp
mov
lock
pop
mov
mov
arpl
xchg
mov
or
movsl
add
iret
dec
aad
mov
or
cmpsb
push
xchg
ds
pop
sti
iret
xor
push
pusha
dec
mov
int3
mov
aaa
subb
popa
pop
in
fwait
ds
xor
pop
in
push
pop
pop
repnz
fs
jbe
ss
adc
shl
repz
inc
push
adc
or
xchg
aas
cltd
icebp
add
lea
jb
popa
insl
jns
xor
call
fsubrl
fldl
lret
ficomps
lcall
mov
dec
outsl
int
cld
shll
jl
lods
js
repnz
push
mov
sti
push
mov
cmp
out
mov
sub
cmp
inc
xchg
and
clc
xor
mov
ss
rorb
repz
fsts
into
dec
pop
inc
popf
dec
xor
daa
xchg
mov
mov
dec
xlat
fwait
push
mov
setl
and
push
sarl
int
jg
pop
out
mov
xchg
lcall
or
sbb
jecxz
mov
xor
scas
dec
int3
fidivrl
les
inc
rcrl
sti
adc
inc
jmp
mov
rorl
shl
int
lock
imul
in
xchg
repnz
pushf
shll
jle
push
repnz
jbe
cmp
addb
adc
das
roll
pop
xor
stos
aad
adc
mov
xchg
mov
lds
xchg
fdivrs
push
xor
outsl
lea
add
adc
mov
scas
pushf
cmpl
mov
xor
push
insb
dec
add
out
cli
xlat
daa
leave
sbb
mov
xor
bound
lahf
dec
shll
or
outsb
push
xchg
add
fnsave
clc
data16
in
mov
and
dec
or
xchg
stos
jne
adc
aaa
aas
gs
sub
js
lods
push
lahf
js
mov
hlt
insl
sbb
cmp
jbe
pusha
iret
jno
xchg
cmp
push
push
xchg
andb
inc
sbb
cmp
mov
mov
xchg
mov
mov
out
es
mull
call
push
call
test
jl
push
call
push
pop
lcall
mov
sbbl
dec
mov
cmc
je
int3
xor
mov
mov
push
push
data16
add
lea
push
xchg
ljmp
pop
inc
jp
sub
jb
mov
and
imul
fwait
ret
call
xchg
dec
cmp
or
dec
and
mov
inc
xor
sbb
sub
jnp
rcr
jl
push
call
jnp
and
fbstp
pop
and
insl
push
xor
mov
mov
and
lahf
pop
pusha
icebp
pusha
ficompl
fdivrp
movsb
cmp
xchg
je
cmp
adc
test
sub
fistps
pop
fiaddl
and
adc
pushf
xchg
ret
push
dec
std
lahf
jg
inc
sub
orl
jns
jb
stos
push
cmpsb
sub
rcrb
adcb
imul
lret
add
mov
mov
cltd
xor
cmp
cmpsl
xor
xor
xchg
mov
add
out
imul
add
jmp
cmp
push
push
cld
nop
out
dec
jno
rclb
fsubs
mov
rcrb
mov
mov
jae
mov
mov
dec
pop
xchg
daa
xor
jae
std
sub
repnz
cltd
push
mov
in
loopne
in
jl
xchg
loop
pop
imul
outsb
insl
ds
jle
dec
jae
ficoms
inc
fwait
dec
pop
xlat
test
jecxz
lods
out
pop
cli
das
ret
pop
dec
cmp
inc
imul
cmpsb
addl
push
popa
int3
mov
or
sub
or
or
pop
cmp
xchg
mov
mov
push
test
int3
jb
or
xchg
adc
adc
ds
push
les
mov
aas
cmp
and
enter
gs
adc
mov
mov
add
push
setg
cmc
jg
push
mov
or
ss
fidivs
addr16
pop
sub
xchg
jb
xchg
sbb
xor
sub
or
xchg
sbb
xchg
insb
push
xchg
sbb
jb
add
mov
sahf
aaa
out
push
aaa
lret
dec
imul
shlb
fwait
add
xchg
sbb
arpl
ja
loop
adc
add
dec
mov
inc
psllq
rolb
push
mov
or
ja
pop
scas
inc
lea
xchg
and
outsl
adc
orl
fwait
pop
in
jne
xchg
ja
pop
jecxz
out
xchg
mov
xchg
notl
cltd
cmpsl
xchg
push
pop
and
xchg
push
pop
fdivl
adc
inc
mov
adc
in
add
add
andl
mov
outsl
sub
add
outsl
add
pop
xchg
lods
xchg
push
and
xor
test
cmp
mov
scas
nop
pop
pop
les
adc
and
repz
fwait
in
jge
sti
call
roll
out
jbe
sarb
adc
adc
or
shrb
jbe
inc
shrl
loop
pop
mov
mov
xor
push
movsl
inc
pop
xchg
adc
mov
cmpsl
mov
cmpsb
mov
nop
jns
push
mov
in
mov
fneni(8087
xchg
addr16
inc
or
mov
sarb
dec
sub
stc
push
push
inc
sahf
outsb
inc
iret
push
dec
push
call
sub
sub
jl
add
stc
push
or
shrb
lods
int3
and
mov
jp
leave
mov
inc
popa
jge
xor
jle
ret
add
jecxz
fistps
cltd
or
push
pop
add
xchg
imul
mov
push
test
std
and
xchg
jo
sbb
mov
leave
xor
mov
pop
mov
pop
jb
cmpsb
dec
mov
and
pop
das
cld
jmp
arpl
jne
int
arpl
push
sub
mov
das
out
pusha
arpl
adcb
lcall
sub
rcrl
mov
sbb
lret
pushf
cmp
xor
cmp
shl
sub
push
lock
lret
mov
dec
and
or
mov
jp
xor
rorl
adc
test
int
ret
rcrb
rcr
icebp
mov
cmp
out
test
les
mov
lret
push
sbb
in
cmpb
pop
sub
andb
lret
stc
jb
adc
xchg
ret
push
xchg
jae
int
mov
sti
and
jns
mov
add
fwait
aam
addr16
add
sbb
add
mov
pop
ljmp
mov
and
aas
outsl
shrb
pop
pusha
sti
xorl
cld
push
adc
ja
rcll
rorb
cmpsl
jge
fcomps
gs
imull
push
cmp
jecxz
add
test
inc
or
or
cmp
xor
xor
stos
cltd
js
or
fmul
push
or
pusha
inc
and
push
mov
mov
adc
mov
adc
cmp
add
push
add
aad
les
subb
xchg
cmc
stos
cld
hlt
mov
mov
or
or
add
jns
aam
out
out
mov
push
mov
push
xchg
rcl
mov
fwait
in
push
pusha
mov
popa
mov
sub
in
inc
clc
lret
push
gs
mov
xor
out
fs
adc
inc
stos
lret
lds
adc
out
pop
rcl
pusha
xchg
adc
dec
pop
mov
imul
mov
lock
add
cmp
outsl
xor
gs
cmpsb
jge
fiaddl
push
fsubs
loopne
lds
fbstp
sbb
insb
lret
cltd
mov
add
cwtl
ret
shll
rclb
lds
xchg
into
sahf
jnp
inc
push
outsb
or
outsl
sbb
cmpsb
test
stos
js
mov
sub
push
xchg
sbb
insb
jne
mov
jo
repz
xor
fdivrs
sub
mov
aad
out
add
inc
arpl
aaa
dec
jle
xchg
add
mov
mov
fsub
les
aad
sbb
leave
std
xchg
jne
dec
jo
dec
mov
mov
shrb
insl
adcb
in
fldcw
and
inc
xchg
sbb
aad
lahf
scas
add
mov
pushl
inc
popf
jmp
cmp
mov
xchg
lods
data16
pop
cmpsb
insl
sbb
mov
sbb
cltd
lahf
add
cmp
adc
jae
fidivrl
push
adc
pop
lock
js
add
cmp
jecxz
imul
push
frstor
cltd
xor
shrl
sbb
and
cmp
dec
jno
lea
mov
aaa
imul
lea
inc
dec
sahf
jmp
mov
ficompl
cld
fcoms
xchg
xchg
scas
xchg
xchg
mov
mov
jmp
je
cmp
pop
cmp
cli
cmpsb
gs
je
inc
bnd
mov
cmc
shrb
in
scas
in
loop
xlat
rcrb
aam
fstl
mov
movsb
push
aas
gs
rcl
pop
jg
stos
jle
xor
sbb
repz
push
mov
rcl
push
daa
adc
mul
cmp
loope
add
mov
in
mov
cmp
pop
test
pop
sub
outsl
pushf
lret
bswap
stos
ss
xor
xor
mov
sub
out
jp
sar
adc
jle
sub
push
xchg
inc
inc
mov
sub
jb
gs
push
leave
dec
pop
pop
leave
cwtl
mov
adc
inc
jo
mov
dec
std
mov
inc
sbb
mov
fdivrs
popf
pop
fcmovne
or
addl
std
mov
cmp
mov
rdtsc
int
rcrb
mov
ret
jl
dec
adc
popa
stos
and
lret
xchg
adc
rol
sub
jo
cmpsl
cltd
or
enter
or
jecxz
imul
outsl
orl
and
dec
out
or
mov
outsl
hlt
aas
repz
fldt
mov
shll
loop
daa
lods
fildll
pop
jb
dec
fstpl
xor
dec
or
adc
iret
ljmp
pop
push
negl
add
mov
pop
test
popa
pop
ret
enter
add
jle
push
lods
and
jecxz
mov
imul
lods
les
aad
inc
imul
fistps
fisubs
push
fwait
sub
cmpsb
dec
cmp
in
mov
jp
movsb
sub
add
mov
sahf
cmp
push
test
inc
test
add
faddl
lcall
push
xor
or
pop
lret
outsl
xchg
and
cmp
cmp
js
repz
inc
or
clc
xchg
lcall
andl
out
aam
arpl
repz
cmp
cmpsb
push
xchg
arpl
xchg
cld
out
inc
iret
int3
dec
sub
cmp
lret
pop
sarb
dec
adcb
lcall
into
push
aaa
cvtps2pd
out
adc
adc
test
ffreep
nop
and
push
out
rorl
pop
mov
mov
jbe
push
sbb
test
cmp
push
cmc
out
xor
mov
cli
sbb
int
push
lret
xlat
in
cmp
cltd
push
add
add
or
mov
negl
shrb
fdivr
mov
cld
or
xchg
cmp
push
sub
loope
pop
jns
jnp
pop
push
jmp
je
inc
push
mov
jmp
xor
cwtl
cltd
icebp
inc
jnp
adc
adc
cld
dec
xchg
enter
mul
or
or
dec
clc
xchg
pop
xchg
icebp
nop
push
in
scas
mov
popf
sti
loop
fldenv
pop
sub
lahf
mov
adcl
and
mov
mov
ja
xchg
lret
lods
enter
aad
lods
pop
arpl
push
je
and
mov
pop
mov
faddl
push
pushf
les
sbb
je
in
jno
adc
push
insl
mov
dec
pop
mov
sbb
stos
lods
push
je
faddp
popa
pop
ja
orb
mov
lret
lock
cmp
jge
out
mov
out
and
adc
std
adc
jg
aad
les
xchg
pop
add
push
loope
adc
sub
insb
mov
ja
movsl
mov
scas
lret
nop
movsl
dec
sub
lods
jns
inc
test
push
sarl
adc
xor
dec
in
lret
pop
push
and
pushaw
dec
add
fsubs
imul
dec
sarb
jle
mov
mov
cmp
sub
adc
cmp
cld
notl
leave
pop
movsl
sub
mov
sub
fstl
jmp
push
add
enter
cmp
cmp
scas
xlat
sahf
mov
pop
xor
mov
push
adc
clc
clc
cmpsb
nop
mov
xor
aaa
stos
dec
cmc
pop
in
and
push
mov
jb
pusha
loopne
pusha
jmp
shrb
movsl
addr16
jae
mov
mov
mov
mov
loope
mov
xor
jecxz
ficompl
adcb
movsb
das
icebp
hlt
push
inc
in
ds
repnz
or
and
jmp
or
mov
cmp
mov
aam
lods
cld
cmc
pushf
mov
into
out
or
sbb
jb
rcrl
int
cli
xchg
mov
add
lods
adc
push
scas
in
stos
pop
sahf
insb
cli
mov
clc
push
push
adc
add
push
adc
int
mov
out
sarb
or
pusha
stos
fidivrs
mov
cmp
and
data16
not
into
cmpb
mov
push
daa
cltd
xor
fs
je
pop
xchg
js
loop
out
and
imul
mov
dec
push
push
sti
push
scas
sub
and
jge
ja
cltd
pop
push
sbb
test
bound
stos
dec
jle
sub
pusha
stos
mov
xchg
shrl
pop
addb
jge
out
lods
popa
xchg
pop
out
mov
fsubs
inc
or
push
mov
imulb
cltd
jecxz
jge
arpl
add
popa
inc
cmp
ss
test
fnop
or
push
mov
dec
or
out
xchg
mov
mov
movsl
mov
or
lea
add
notb
and
cmp
add
pop
les
cli
dec
xchg
mov
mov
jo
xlat
mov
dec
cwtl
push
jmp
push
inc
mov
dec
jnp
dec
daa
cmpsb
mov
dec
testl
pause
cld
mov
inc
push
push
rclb
mov
mov
mov
gs
cld
nop
or
dec
cld
sub
mov
adc
jns
cmc
mov
pop
jl
fwait
aas
out
cltd
sub
mov
sbb
pusha
jmp
pop
js,pn
dec
pop
mov
das
jb
mov
out
push
gs
mov
fistpl
xor
inc
jecxz
mov
call
scas
daa
pop
in
andl
pop
stos
mov
sub
push
mov
shr
xchg
dec
movsl
mov
mov
movsl
cmp
xchg
shrb
pop
add
xorb
fisubrl
sbb
lahf
adc
sub
lahf
jbe
lock
jl
aas
jnp
adc
xlat
sub
sti
or
ds
ss
cmp
cmp
jecxz
and
roll
imul
repnz
mov
xlat
psubd
sbb
and
pop
mov
daa
push
push
rcrl
or
lret
adc
mov
test
aaa
dec
aad
rolb
sbb
ss
arpl
movsl
int
xchg
jno
ljmp
mov
sti
loop
mov
jns
mulb
iret
jecxz
push
mov
icebp
push
dec
push
sub
jl
mov
roll
jl
jne
sbb
cmp
or
inc
mov
or
and
fsubrl
nop
out
add
les
sub
jb
inc
aam
pop
popf
ret
xor
push
scas
xchg
pop
je
fbstp
pop
adc
iret
or
dec
mov
ljmp
cmpsb
test
mov
fimull
mov
call
mov
test
and
sub
loope
hlt
sarl
aam
inc
decb
rcl
fdivrl
pop
loop
sbb
push
adc
std
scas
adc
stc
aaa
sahf
sub
mov
dec
cltd
inc
enter
cs
aas
mov
cmp
mov
pusha
hlt
sarb
loopne
xchg
mov
lret
popa
mov
insb
adc
mov
stc
xchg
push
orl
cmp
arpl
scas
mov
fcmovne
test
sub
inc
xchg
cli
sub
maskmovq
testl
pop
lods
out
out
push
cmp
mov
loopne
or
cmp
sub
loope
xorl
std
ja
in
mov
and
xchg
xor
pop
mov
dec
dec
adc
repnz
cmp
syscall
paddw
xor
addr16
fnstenv
imul
adc
dec
test
repz
cmpsb
dec
push
rorl
xor
in
fidivl
enter
out
cmp
test
cmc
dec
jmp
pop
pop
clc
jle
push
punpckhbw
sub
jns
mov
jp
insb
lcall
outsl
repnz
insb
cmp
cwtl
jmp
bound
dec
mov
sahf
mov
xchg
bnd
pop
jl
lahf
js
inc
mov
mov
sbb
cmp
addb
fwait
in
icebp
insb
js
cli
inc
sbb
nop
mov
les
sbb
push
cmp
xchg
ret
adc
andnps
daa
dec
stos
decl
cwtl
push
fwait
sbb
sbb
jle
lcall
inc
insl
jg
jl
in
in
jnp
push
std
xchg
adc
mov
dec
mov
inc
jl
xchg
inc
test
pushf
add
cltd
lahf
loop
xchg
mov
bnd
in
mov
add
ljmp
dec
rolb
rcrl
loopne
lock
sbb
mov
xchg
push
xor
adc
pop
and
pop
leave
dec
adc
insb
es
pop
sahf
xorl
call
cmp
or
lahf
ds
pop
fisttpll
xor
lcall
dec
aad
ficoms
out
dec
mov
jnp
push
sub
xor
dec
aaa
push
push
pop
loopne
cltd
xchg
in
scas
and
inc
add
inc
in
mov
addb
add
negl
in
in
jg
test
jg
and
jnp
add
jne
notl
rcll
mov
mov
adc
mov
inc
sbb
int
lds
and
sbb
push
stos
enter
mov
push
cmpsb
sub
test
stc
sarl
inc
mov
shrb
hlt
xchg
xor
dec
les
lock
jae
lcall
mov
fsubl
cmc
popf
mov
mov
sub
inc
sbb
insb
and
push
or
mov
pop
into
jo
mov
dec
shrl
popa
popa
xchg
fbld
inc
pop
and
cmp
enter
ja
outsb
mov
sbb
inc
js
lret
and
mov
ficoml
iret
inc
xor
inc
inc
adc
scas
aaa
mov
pop
mov
shll
lods
jae
pop
push
out
shlb
cmpsl
lods
insb
pop
cmp
scas
dec
adc
lret
lods
push
mov
mov
pop
lret
or
psraw
incb
dec
and
push
pusha
mov
mov
cli
ret
into
cmc
push
out
imul
adc
mov
sbb
rorb
daa
jp
lret
push
push
adc
pop
frstor
repz
aas
sbb
mov
pop
cmp
jp
add
neg
jmp
inc
sbb
call
hlt
pop
xor
push
jno
xlat
mov
mov
lock
gs
sub
ja
gs
inc
aam
inc
lock
lods
outsl
cmpsl
out
and
push
sbb
cs
movsl
jmp
aaa
hlt
push
sub
scas
and
jmp
cs
out
jbe
lea
push
scas
ss
push
mov
xchg
dec
and
dec
adc
call
pop
cmp
ljmp
xor
rorb
jl
sub
sub
mov
push
mov
jge
sar
cli
lods
jmp
setns
repz
movb
or
mov
sbb
xchg
cmp
rolb
inc
jg
scas
or
inc
in
dec
xor
sarb
insb
aaa
jb
add
outsl
adc
xor
movsl
lret
push
test
cmp
mov
outsl
mov
stos
xchg
ja
subl
inc
mov
xor
loope
push
dec
and
lods
push
cmp
stos
xchg
adc
jns
daa
add
xchg
and
test
or
test
mov
jnp
inc
mov
jns
loopne
jb
adc
adc
cwtl
mov
push
inc
cmp
mov
and
movsb
sub
ljmp
mov
jo
mov
lods
xchg
adc
jp
pop
xor
test
xchg
cmp
cmpsb
add
into
scas
adc
lds
pop
test
sub
cli
push
mov
insl
lret
push
ljmp
xor
dec
sbb
or
mov
outsb
repnz
push
inc
xchg
push
sbb
dec
repz
xor
decl
call
mov
ds
int
cmpsb
idivl
loope
mov
cld
icebp
je
icebp
jge
sti
jge
pop
cmp
das
push
call
movsl
icebp
cmp
or
inc
cmp
into
cs
push
add
or
and
lds
fsub
inc
fnsave
sub
cmp
add
scas
stos
data16
xchg
sbb
nop
pusha
mov
dec
jecxz
push
pop
loop
sbb
mov
xor
mov
stc
sarl
xchg
cwtl
scas
imul
jge
inc
lods
xor
aas
movsl
push
hlt
sbb
popa
mull
sahf
jne
push
inc
test
mov
scas
adc
lahf
fwait
testb
repz
add
xchg
push
xchg
sbb
adc
scas
adc
adc
mov
mov
push
je
aad
xor
cmp
mov
xor
or
pop
std
push
and
mov
xorb
ds
adc
imul
xchg
fwait
cli
pop
out
jo
pop
outsb
addr16
sbb
jno
enter
sub
insb
hlt
push
iret
mov
sbb
push
pop
dec
bound
out
subl
out
add
insl
iret
mov
aad
jecxz
iret
inc
push
in
nop
push
negl
cmp
incl
ljmp
test
inc
popa
dec
jge
cmp
adcb
cmp
mov
out
adcb
push
inc
ret
addr16
xlat
xorb
lahf
lahf
int
pop
xor
jne
xchg
cmpsl
or
pop
cwtl
dec
dec
andl
push
xchg
out
negl
cmp
adc
mov
mov
jge
dec
xchg
lcall
lret
fwait
aaa
mov
addr16
mov
ficomps
xchg
push
roll
xor
test
scas
xor
fisttpl
xchg
pop
sbb
jp
sti
jmp
repz
pop
cmp
imul
inc
pop
pop
rorl
adc
dec
jns
loope
aam
pushf
daa
jg
mov
add
dec
pop
sahf
js
mov
jns
sar
test
mov
ss
xchg
aaa
lock
sbb
jns
adc
repz
mov
adc
cmp
sti
adc
sub
mov
mov
int3
mov
fwait
int3
stos
sub
inc
stos
mov
into
add
mov
adc
daa
xor
mov
xchg
push
andb
cmpsl
lods
pop
dec
jl
dec
fdivs
dec
dec
or
push
int
nop
jl
push
inc
int
shrb
and
pop
and
popa
rorl
xor
or
int3
ds
leave
push
dec
insb
in
loop
pushf
divb
mov
lds
enter
adc
xchg
pop
mov
pop
sub
dec
repz
mov
adcl
movsl
sub
scas
fists
frstor
and
icebp
adc
sbb
mov
mov
cmp
mov
jle
fucomp
mov
insl
xor
fs
lret
mov
test
fcmovu
repnz
lea
fstpt
sbb
jbe
mov
jb,pn
push
in
lret
push
mov
mov
or
cmpsb
out
and
sbbl
xchg
push
fs
mov
dec
stos
js
sbb
mov
pop
mov
dec
push
lret
lret
add
rclb
sub
fsubrs
sub
inc
mov
pop
inc
shlb
lret
roll
cli
jns
call
adc
sub
rcrb
jg
pushf
outsb
mov
stos
cwtl
mov
sub
mov
sbb
adc
sbb
push
mov
and
in
bound
pop
ss
sub
sti
adc
sbb
icebp
ja
and
mov
mov
hlt
out
inc
pop
lods
xchg
inc
xorb
jb
mov
test
push
in
popf
fstps
mov
les
std
clc
jecxz
les
ja
sar
in
jo
pop
rcrl
xchg
imul
mov
inc
scas
ss
mov
mov
into
cs
lcall
push
xchg
push
test
insb
test
xchg
sub
cld
ret
mov
add
mov
adc
adc
sahf
and
mov
hlt
ret
add
test
dec
hlt
stc
push
cmp
pop
out
cmovno
inc
stc
push
loopne
aaa
pop
arpl
leave
notl
lods
lea
adc
loopne
xchg
stos
shll
or
pop
cmp
xor
mov
dec
cltd
adc
mov
addb
das
in
cmp
fstpl
mov
dec
xchg
daa
add
add
sbb
imul
jo
push
jae
enter
jge
pop
xchg
or
repnz
mov
cmp
outsl
icebp
xor
ret
jge
cmpsl
adc
out
mov
dec
dec
and
scas
mov
sbb
push
cmc
shlb
or
lcall
sbb
push
aas
xor
lds
shlb
push
aas
mov
and
out
add
mov
mov
fistpll
push
negb
xor
xor
xor
push
jne
scas
aas
mov
mov
cmc
and
into
jo
adc
dec
jno
lock
mov
push
call
xor
adc
mov
in
scas
xchg
test
lcall
in
aad
push
cmp
add
ficoml
mov
out
insb
sbb
jnp
popa
jb
movsl
mov
les
test
scas
push
cmp
mov
pop
pop
into
jnp
jns
in
and
cmp
incl
testl
cmp
dec
sub
jno
test
sbb
call
push
and
cmc
add
std
sbbl
add
out
outsl
call
mov
movsb
xor
testw
loop
cmpsl
jo
jnp
aad
cmp
icebp
adc
rcll
in
iret
popa
jmp
int3
std
fmul
cwtl
jnp
cmp
std
adc
test
and
int3
cmp
mov
cli
or
ljmp
xchg
es
loopne
dec
lock
lock
push
call
pop
cmc
cli
sbb
fldt
mov
lret
push
inc
mov
xchg
cs
in
movsl
ljmpw
inc
mov
and
lret
repz
mov
shl
lret
push
aam
mov
xchg
insl
mov
add
sarb
adc
xor
jbe
push
iret
stos
adc
push
andb
pop
jecxz
inc
lcall
sub
push
out
adcl
mov
mov
sub
dec
adc
and
inc
sub
jmp
cmp
test
ficoms
mov
push
jmp
outsb
cmp
enter
pop
pop
jo
loope
fnstcw
push
cmpsb
jns
lret
xor
jnp
mov
cmp
repnz
jns
fwait
xchg
leave
incl
mov
ret
fcoml
mov
sub
mov
cwtl
jg
out
aam
div
ljmp
push
xchg
rcrl
repnz
dec
cmp
jg
fildll
xchg
test
cmp
adc
lock
mov
jmp
mov
jecxz
in
adcb
in
pusha
loop
aaa
cmc
scas
mov
dec
notl
test
dec
int3
sbb
and
or
daa
or
es
iret
pop
jle
or
sbb
jnp
pop
xchg
pop
dec
xchg
mov
scas
vcmppd
jecxz
mov
push
arpl
inc
aam
bound
movsl
and
call
mov
adc
cmp
adc
call
addl
stc
fcmovbe
jne
xchg
jg
mov
adc
sbb
lock
and
shrl
daa
leave
xor
rcrb
mov
dec
dec
jecxz
sbb
jl
hlt
icebp
rclb
or
insb
pop
sub
out
pop
leave
adc
xor
test
dec
mov
or
shll
std
addr16
push
test
inc
insl
scas
mov
pop
jns
out
in
clc
cmc
stos
popl
imul
cmp
sbb
pop
iret
ud2
lret
ret
lret
ss
in
push
push
add
cli
sub
xlat
aam
cmp
out
sub
cmp
aas
outsl
push
lock
adc
imul
mov
mov
repz
push
xchg
or
rcr
enter
jbe
cmpsl
lock
gs
fbld
inc
in
testl
aam
mov
sub
idivb
cmp
xchg
fists
and
lea
bound
jmp
mov
icebp
sarl
pop
cmp
xchg
aam
sbb
xchg
pop
xchg
pop
add
neg
filds
adc
mov
xchg
cld
jg
jecxz
rcrl
in
jnp
ss
outsl
mov
sti
fs
sbb
cmp
jnp
js
pop
mov
sub
inc
lods
inc
sub
xor
adc
call
push
es
xchg
dec
xchg
cmp
aas
jg
negl
jmp
cli
lock
les
fs
adc
adc
mov
arpl
iret
mov
pop
test
add
fsubl
add
mov
inc
cmp
iret
dec
inc
mov
adc
fwait
xchg
das
mov
ss
or
or
push
sbb
mov
and
shll
int
pop
dec
daa
in
lahf
inc
sti
arpl
insl
push
jmp
push
xchg
mov
int3
scas
stos
add
mov
mov
mov
fs
jne,pn
pusha
aas
mov
cli
add
and
jmp
push
xchg
imul
push
and
je
cli
dec
punpcklwd
sbb
jmp
xor
js
mov
jmp
shlb
mov
sbb
imul
insl
arpl
cmp
es
shr
or
sti
movsb
push
inc
pop
adc
push
mov
subl
stc
sbb
or
pop
mov
out
movsb
mov
je
xchg
and
mov
imul
enter
mov
sub
std
xchg
aaa
or
std
test
out
shll
mov
std
mov
mov
sbb
mov
pop
jae
cmc
sarl
xchg
leave
sbb
lcall
out
sahf
jbe
lahf
sarb
mov
sbb
hlt
push
sub
out
mov
xor
xchg
insb
mov
jp
rcrb
div
insb
into
adc
add
xor
scas
test
sub
or
les
xor
or
push
js
xlat
pop
addb
std
and
je
test
cmp
mov
mov
dec
adc
mov
pop
mov
xor
jb
push
ja
fsts
inc
jmp
pusha
mov
test
push
insl
sbb
xchg
movb
lret
movsl
subb
mov
dec
sbb
xchg
iret
ss
add
rorl
rcl
inc
inc
cmp
in
outsl
lods
fldt
rorb
pushf
lcall
dec
cmp
insl
sti
into
push
and
xchg
mov
xor
cmp
xchg
pop
cmpsl
shrl
mov
lret
adc
sarb
cmp
ret
testb
xor
test
push
mov
sub
add
cmp
hlt
fisttps
je
push
xchg
mov
lock
push
sahf
aaa
int3
push
fcoml
rol
sub
fcoms
xor
lods
fsubrl
mov
mov
mov
pop
pop
insb
push
icebp
adc
fdivr
cmp
mov
jb
and
xor
pop
aaa
mov
gs
add
xor
nop
ds
js
outsl
call
push
scas
stos
ljmp
outsl
lock
aam
or
pop
in
data16
pop
sahf
add
fcmovbe
fdivr
cmpb
adc
add
sti
int
ja
push
pop
fstl
or
mov
enter
xorb
push
sub
pop
std
inc
push
sub
dec
ds
loopw
loopne
mov
pop
pop
dec
cltd
aaa
mov
cmpb
mov
sub
repz
and
mov
enter
fldt
xchg
sahf
ljmp
and
mov
ret
ss
pushf
pop
int
sahf
test
mov
mov
ret
movsb
addr16
dec
out
jmp
xchg
repz
test
jbe
lret
cmp
pushf
ljmp
mov
dec
dec
fisttpll
mov
pop
inc
push
or
cmp
jae
addr16
push
and
add
repnz
ss
std
pop
push
mov
test
in
jae
pop
test
cmp
jecxz
mov
and
bt
adc
ds
out
hlt
std
mov
cmp
pop
fsubp
add
sbb
mov
out
scas
dec
test
mov
cmpsb
inc
xchg
mov
shrb
pop
sarl
shrb
fidivs
pop
adc
mov
xor
push
daa
mov
test
repz
adc
push
jnp
scas
dec
or
jae
push
cmp
add
mov
aam
xchg
loope
cld
mov
xor
cltd
push
ja
cwtl
test
movsl
pop
call
clc
cmc
fnstenv
dec
dec
stos
getsec
push
jmp
xchg
xchg
fsubrs
cltd
clc
test
bound
test
jl
imul
js
rclb
js
mov
dec
data16
movsb
cltd
inc
push
and
clc
test
jns
adc
cmc
adc
scas
dec
adc
push
xchg
lahf
mov
stc
insb
lret
movsb
inc
aad
fwait
stc
pop
orl
jne
add
mov
mov
lods
mov
add
stc
and
jno
ljmp
aaa
add
mov
fildl
adc
dec
pushl
clc
cmp
adc
cmpsb
sub
cmp
mov
dec
mov
inc
jo
inc
push
xor
rcrb
dec
cmp
or
lcall
stos
add
repnz
mov
inc
out
mov
int3
or
mov
inc
push
jle
scas
add
into
xor
mov
xor
test
sub
mov
fadds
inc
inc
mov
js
xchg
dec
sub
jl
push
fstpl
rclb
jns
sarb
xchg
add
jb
fildl
or
push
fisttpll
fldcw
or
sbb
push
mov
pop
fdivl
add
push
imul
mov
push
jge
stos
arpl
mov
cmp
int3
adc
and
push
pop
xchg
jbe
mov
cmp
jbe
push
scas
xor
add
sahf
jmp
cmp
cmpsl
jmp
cli
inc
popf
test
movsl
sti
mov
dec
xchg
dec
inc
mov
int3
test
lea
jo
sahf
xchg
add
adcl
inc
and
adc
jmp
andl
mov
and
sub
loope
enter
ficompl
mov
add
adc
out
mov
negl
cmp
xchg
inc
adc
call
adc
pop
adc
xor
mov
jbe
iret
mov
test
sbb
cmpsl
xchg
sub
mov
outsb
mov
fcoms
mov
in
inc
fs
je
inc
lods
filds
daa
dec
cmpsl
and
adc
fdivp
pop
inc
loope
and
add
inc
insl
and
push
cmpsl
sub
outsb
pop
adc
dec
dec
xlat
leave
xchg
and
jbe
jne
push
fmuls
dec
stc
jne
dec
xchg
mov
jl
std
lcall
icebp
test
mov
jae
cld
les
mov
out
in
dec
xchg
jbe
inc
jne
lret
out
test
imul
cld
jge
js
lcall
xor
mov
insl
xor
inc
xchg
push
test
sub
xlat
aaa
inc
pop
push
cmpsl
adc
pop
jno
out
mov
xor
mov
pop
inc
pusha
int3
and
cld
inc
mov
adc
or
pop
pop
fwait
push
sub
fadd
test
or
mov
call
das
cmpsl
mov
add
negb
addl
dec
push
daa
xor
addb
pop
cmc
hlt
in
scas
adc
lock
inc
inc
xchg
sbb
int
ja
or
mov
mov
push
scas
jle
add
out
add
sub
xchg
and
pushf
stc
pop
xor
fs
xlat
mov
insl
mov
sbb
pop
sahf
add
je
cmpsb
sub
imul
cli
lret
sbb
nop
test
scas
push
cltd
fidivrs
inc
les
lret
fstps
addl
dec
xor
loop
shrl
je
jmp
mov
mov
dec
sti
sbbl
test
and
fwait
push
sub
jne
push
mov
loopne
fiadds
fwait
dec
sub
daa
outsl
add
in
out
mov
stc
outsl
mov
mov
lret
xor
and
sahf
pop
pop
xchg
loopne
test
jl
cwtl
scas
and
popa
xor
and
sub
sbb
xchg
repz
pop
adc
lcall
pop
ficompl
movsb
sbb
stc
mov
leave
out
sarb
xchg
inc
xor
jns
ret
jg
in
mov
push
fidivs
xchg
sahf
add
call
adc
xchg
cmp
ljmp
mov
arpl
mov
hlt
cmpsl
xor
sbb
inc
and
push
ficoms
in
add
push
push
cmp
jl
mov
inc
scas
mov
lret
adc
pop
loope
data16
jb
pop
mov
xchg
xchg
xor
mov
adc
into
lock
pop
in
xor
jne
jbe
pop
rcl
add
xchg
mov
mov
jl
xchg
insl
mov
xor
cvtpi2ps
xchg
add
imul
sbb
mov
dec
mov
dec
mov
imul
xor
into
xchg
cmp
jb
mov
jmp
mov
cmc
mov
push
mov
adc
sub
push
loopne
imul
insb
or
in
pop
lds
and
mov
mov
mov
rcll
sbb
loop
rorl
xor
xlat
jno
pushf
push
mov
pop
add
mov
ja
sub
dec
fs
mov
or
push
mov
cmp
in
rcll
xchg
fstl
mov
pop
outsl
mov
xchg
or
ja
dec
mov
clc
mov
or
movsb
pop
dec
jnp
cmp
test
inc
and
or
or
js
dec
ret
cmp
xor
mov
pop
icebp
ljmp
add
dec
add
pop
fisubl
andb
in
sbb
push
outsb
ss
vpackssdw
pop
xchg
inc
push
pop
and
and
pop
pop
in
push
jb
mov
pop
push
xlat
or
gs
loope
xor
fs
pop
jmp
fldcw
or
and
inc
push
arpl
adc
pop
pop
sbb
pop
pop
inc
popf
out
shll
ss
sub
dec
clc
pop
pop
xchg
sbb
push
xchg
cli
cmp
or
stos
mov
bound
jns
aaa
sub
das
pop
int
and
shl
push
rcrl
sbb
loopne
cmovge
and
push
push
aas
pop
mov
mov
incb
in
inc
test
pop
push
popl
and
shrl
jno
and
sub
dec
adc
aaa
pop
roll
outsl
cmp
mov
insb
lcall
hlt
int3
addr16
push
and
imul
enter
inc
adc
pop
and
mov
mov
ljmp
test
fisubrl
push
dec
jns
and
adc
dec
adc
out
fnsave
pop
outsl
scas
in
fsubrp
mov
insb
cmp
aad
xor
adc
aaa
outsl
es
scas
les
repz
dec
imul
into
push
jnp
mov
push
scas
xor
sub
dec
or
push
inc
pop
or
xor
mov
idivl
fwait
outsb
dec
lock
subb
cmp
dec
outsb
lock
pusha
mov
xor
aaa
xchg
and
mov
jecxz
hlt
jle
or
addr16
jbe
in
aaa
pushl
mov
adc
in
jmp
test
das
test
icebp
lcall
cmp
test
lock
shlb
cwtl
push
inc
repnz
push
xchg
inc
stos
or
dec
cwtl
mov
xchg
jnp
sub
fisttpl
movsl
jg
stos
imul
outsl
mov
adc
and
dec
adc
loopne
mov
in
jg
pop
jo
add
imul
pushf
adc
mov
sti
pop
jo
in
mov
pop
add
cmp
adc
adc
add
ret
in
rcll
daa
pop
cmp
dec
mov
or
orb
jp
out
dec
ret
dec
mov
lods
push
push
add
adc
js
fs
iret
andb
xor
or
insl
aad
dec
out
imul
mov
imul
fisttpl
out
gs
sti
daa
ret
js
jo
fcmovb
out
mov
dec
dec
mov
dec
mov
pop
inc
push
add
js
int
adc
mov
data16
cmpsl
inc
xor
jecxz
stos
sbb
je
js
dec
mov
mov
push
adc
dec
xchg
xor
xchg
lcall
insl
sahf
mov
cld
push
loopne
cli
mov
ret
pop
loopne
lcall
cmp
dec
lea
mov
or
jg
pop
or
inc
ror
adcb
movsb
movl
nop
inc
mov
or
aas
test
and
shll
fs
imul
popf
lods
fwait
js
and
lds
adc
xor
fnstcw
hlt
mov
inc
add
xchg
lcall
int3
pop
inc
dec
pop
xchg
and
scas
push
add
inc
fnstsw
fstps
idivl
nop
cmpsl
idiv
xor
ds
adc
int3
in
and
xchg
xor
fs
dec
push
and
orl
pop
add
enter
mov
push
xchg
push
mov
repnz
popa
add
pop
aaa
sbb
iret
popf
andb
daa
clc
mov
std
jne
or
mov
enter
mov
xchg
out
test
mov
movsb
cmp
rorl
aam
enter
push
out
cwtl
dec
lcall
mov
or
lods
enter
out
add
lret
xor
mov
pushf
ja
mov
rcrl
inc
mov
xor
imul
test
push
fs
ret
dec
mov
adc
lahf
js
push
inc
add
aaa
cld
lret
push
jge
mov
pop
inc
xlat
sarl
push
and
roll
add
rcrb
daa
xor
mov
pop
stc
repz
push
icebp
pop
xchg
dec
fstps
and
lods
jp
out
jno
push
push
push
add
xor
mov
cmp
inc
adc
cmp
sub
je
mov
in
push
je
popa
in
mov
sub
sarb
push
sub
pop
bound
fsub
xchg
sbb
jle
call
sbb
dec
mov
mov
loopne
sbb
push
dec
pop
daa
inc
cmp
xor
or
adc
xor
addr16
or
push
loop
imul
fnstsw
mov
xchg
jnp
mov
icebp
pop
mov
test
and
lock
push
dec
mov
mov
sub
aaa
xor
scas
push
push
inc
mov
fisubrs
mov
loope
jno
mov
sarl
dec
pop
cld
flds
xor
push
test
sahf
into
jae
add
add
fnstenv
repz
cmp
jl
cmp
add
aad
test
inc
sbb
scas
popa
and
xor
aad
sub
aaa
push
lahf
sub
mov
fisttpll
scas
stos
mov
outsb
mov
popf
cmp
inc
out
add
sub
sbbl
push
mov
out
into
cmp
test
rcll
mov
movsb
mov
sbb
sti
movsb
pop
jg
push
das
fdivl
pushf
add
out
or
or
pop
dec
xchg
packuswb
lods
adc
testb
dec
enter
jae
mov
ds
sbb
add
and
scas
fldt
icebp
arpl
cwtl
jg
js
jmp
stc
loop
push
jp
loope
and
dec
push
and
sbb
cli
ljmp
mov
sub
fwait
cmpl
cmp
adcb
sbb
xchg
push
dec
xor
negb
mov
pushf
imul
or
xchg
inc
repz
push
outsb
stc
outsl
jl
scas
lcall
mov
out
fwait
rorb
pop
gs
sbb
jb
dec
repz
bound
pop
push
mov
iret
push
je
loop
stos
or
xor
mov
dec
jns
jo
cmp
add
cwtl
and
push
movsl
bound
mov
jbe
icebp
andb
inc
push
aaa
jns
cmp
push
jecxz
js
cwtl
dec
sahf
jp
inc
lods
lcall
arpl
xchg
xlat
sbb
and
pop
push
mov
cs
cmp
loop
pushf
inc
test
push
mov
in
fwait
pop
push
and
je
dec
aaa
gs
shrl
jg
stos
mov
jno
popf
sti
mov
movsb
stc
add
ret
jle
lods
out
add
sbb
mov
std
mov
xchg
jb
aam
jns
aad
dec
pop
les
sub
test
pop
imull
ret
mov
pop
sahf
and
xchg
dec
in
mov
xlat
in
mov
sbb
sbb
push
lahf
inc
mov
popa
mov
mov
add
pop
sqrtps
xchg
push
or
loop
enter
pop
aam
xor
push
out
mov
push
fdivrs
faddl
outsb
adc
mov
mov
and
loopne
lret
repz
pop
push
aas
aad
jl
xchg
adc
movsl
ljmp
lods
psraw
div
ret
xor
xchg
test
sbb
add
mov
cs
cli
mov
add
mov
ficoms
mov
rcrb
out
jecxz
loopne
jb
jmp
push
mov
adc
cli
adc
lods
dec
pop
dec
stc
sbb
push
flds
leave
xor
xor
mov
sub
repz
pop
roll
sbb
xchg
and
outsl
call
cmp
sub
mov
xchg
add
mov
sarl
adc
insl
dec
dec
inc
cmp
and
mov
sbb
sbb
out
popf
mov
mulb
pop
pop
fidivrs
idivl
das
mov
dec
int
int
jno
rcl
popf
adc
lret
fildl
xchg
std
aam
mov
nop
stos
jp
movd
mov
in
int
std
push
dec
jne,pn
fistps
inc
mov
pop
lock
shlb
dec
ret
mov
mov
add
nop
adc
mov
lods
stc
adc
and
dec
add
push
sub
jl
mov
insb
mov
inc
sahf
push
xor
popa
cmp
flds
stos
ret
adc
into
fdivrl
mov
not
or
jg
mov
dec
aaa
lods
adc
cmp
cmp
int
test
std
jbe
jle
clc
xchg
mov
jmp
pop
and
sti
mov
or
out
ss
mov
aad
xchg
inc
or
imul
test
out
mov
rorl
in
icebp
cmp
es
loope
fmull
dec
iret
pop
in
push
fsubs
mov
sarl
sub
and
jg
cld
add
sbb
and
cmpsb
mov
xchg
xchg
adc
ljmp
cwtl
or
push
pop
into
pop
stos
test
push
xchg
shl
shlb
mov
jmp
pop
addr16
mov
or
lods
or
mov
mov
and
stos
jmp
popa
cmc
sahf
js
jecxz
loop
mov
sbb
movsb
xchg
add
dec
setl
addl
mov
adc
les
data16
lahf
sahf
lea
pop
fmul
jae
decb
loope
sub
sbb
xchg
aad
sar
xchg
repz
xchg
jecxz
jb
mov
repz
aaa
dec
dec
lret
add
notb
sub
sbb
dec
or
rorl
dec
sub
mov
sub
aad
test
popa
stos
mov
stc
test
pop
fbstp
rcrb
inc
lcall
shl
cmp
loop
cmpsl
cmp
push
mov
daa
dec
loopne
stos
or
aaa
stos
sub
repz
cmp
and
mov
mov
or
xchg
push
inc
mov
hlt
adc
hlt
lock
test
andb
mov
push
into
jns
les
call
rorb
insb
icebp
dec
lahf
in
xchg
negl
push
inc
iret
insb
cs
mov
push
sub
aas
insb
mov
push
enter
call
and
adc
pop
int
sti
sti
pushf
mov
mov
adc
mov
xchg
mov
dec
pop
push
mov
jb
movsl
addr16
inc
aaa
push
mov
sub
mov
mov
sarl
popa
cmp
cmc
jno
je
add
push
mov
jmp
xor
pop
ja
mov
stos
shlb
inc
mov
aam
shr
pop
cltd
mov
xchg
scas
sub
mov
cmp
cmp
mov
into
dec
test
cmpsb
test
xchg
flds
insb
sbb
xchg
add
and
movsl
mov
adc
push
call
and
outsl
adc
leave
xchg
adc
pop
inc
mov
loopne
or
nop
into
mov
sub
sub
call
pop
icebp
mov
push
nop
sbb
fists
loop
out
dec
push
mov
push
jle
push
adc
je
cmp
inc
xor
es
jmp
test
xchg
sbb
pusha
sbb
add
or
je
push
pop
mov
ret
jae
cmp
mov
daa
es
lret
icebp
fisubrs
roll
cmp
rorl
iret
pop
imul
mov
js,pt
cmc
xchg
xchg
mov
adc
mov
and
incl
push
xchg
leave
lret
jbe
hlt
xchg
popa
pop
sbb
jno
xlat
and
mov
xor
out
js
push
cs
xchg
sbb
mov
or
mov
jnp
mov
cmpsl
push
pop
xor
push
mov
stc
sub
xchg
add
inc
mov
adc
cli
fcompl
insb
fwait
cmp
lea
test
cld
inc
lcall
adc
clc
fldcw
and
xlat
cmp
fwait
gs
pop
jg
nop
mov
jecxz
jbe
mov
adc
popa
jns
movsb
lcall
in
nop
dec
mov
std
lods
sahf
push
xchg
jae
ret
inc
test
je
fimuls
lods
push
inc
adc
cmc
mov
or
rcrl
pop
jb
int3
shr
push
and
stos
outsl
push
sbb
mov
jl
mov
cli
xchg
sub
mov
in
sbb
fs
call
sbb
mov
xchg
push
mov
push
call
dec
test
push
or
cmp
lahf
sbb
fwait
enter
dec
dec
addr16
fisttps
in
sbbb
loopne
add
pop
xor
sti
test
dec
xor
daa
sbb
push
push
jp
cli
mov
dec
xchg
xchg
push
scas
clc
xor
in
push
xchg
int
hlt
or
adc
in
adc
or
jmp
mov
das
push
or
stos
ffreep
out
sbb
aad
call
cld
mov
clc
ja
sbb
lock
flds
std
clc
es
adc
stos
inc
in
mov
nop
loopne
jb
icebp
fsts
aam
xchg
or
sahf
add
jb
lahf
clc
int
mov
pop
sub
repz
xchg
insb
sub
cli
imul
movl
sub
adc
push
lods
repnz
push
fbld
les
cli
inc
jb
sarb
clc
andb
xchg
lods
cmpsb
test
xchg
imul
xchg
and
push
cmp
fs
and
je
int
pop
loop
mov
ret
fwait
dec
aad
cs
fisttpl
imul
test
pop
sub
arpl
pop
mov
pop
test
jl
lcall
loopne
mov
mov
dec
shr
gs
in
fmuls
or
push
ret
jl
push
test
and
jle
aaa
push
lahf
and
fbld
popa
mov
xor
or
pop
mov
iret
mov
mov
das
dec
jno
sub
scas
push
add
dec
js
jnp
aad
enter
or
jne
sbb
push
hlt
pop
xorl
insl
rclb
int
dec
cs
dec
jb
sbb
pusha
scas
int3
pop
xchg
repnz
dec
dec
loope
mov
lret
sbb
out
mov
inc
mov
js
pop
add
lods
and
inc
repz
aaa
cmp
ja
lcall
pop
sbb
mov
mov
cmpsl
adcl
stos
dec
filds
mov
stos
push
push
sub
adc
dec
addr16
and
pop
lcall
fisubrs
inc
adc
inc
adc
das
repz
outsl
ja
aam
push
scas
inc
out
jle
enter
iret
fcoml
inc
mov
sub
inc
std
fwait
xlat
in
fcoms
adc
shr
jns
xchg
cmpl
jp
movsb
and
insb
movsb
mov
gs
sbb
sbb
push
add
mov
jno
jl
pop
jbe
add
push
fcoms
sbb
mov
out
add
out
addr16
ja
add
mov
mov
stc
mov
xchg
and
jle
add
xor
cmp
neg
jecxz
inc
rclb
arpl
or
mov
out
and
inc
and
popa
cmp
popa
lcall
adcl
outsb
out
jno
push
or
mov
dec
mov
adc
ljmp
data16
and
movl
sbb
jge
lahf
mov
mov
jge
cltd
mov
out
imul
sbb
aam
xchg
xchg
sarb
cmpsl
imull
scas
ss
cmp
cltd
pop
jo
scas
fisubrs
mov
subl
mov
jecxz
pop
mov
push
aad
jp
push
movsl
ja
xchg
aas
xor
icebp
enter
pop
or
aad
or
adcb
cmpsb
aas
pop
js
dec
jbe
in
and
mov
mov
mov
lods
fsts
mov
cmp
jmp
and
push
pusha
daa
sbb
repz
inc
sti
or
cmpl
push
jo
lahf
sbb
cmc
xor
dec
out
xor
push
repnz
mov
cli
lock
jbe
fwait
or
stos
fdiv
cmp
dec
dec
xor
push
dec
jmp
sub
icebp
int3
xchg
pop
pop
and
movsl
dec
push
push
outsw
add
add
movsb
sti
pop
addr16
dec
pop
jae
sbb
sti
cli
mov
push
pushf
jns
daa
cs
mov
jnp
push
orb
nop
bnd
pop
jp
arpl
jne
dec
push
sbb
mov
je
adcb
cltd
mov
xlat
push
ret
cmp
cwtl
gs
lcall
mov
xchg
xor
or
sub
push
call
shrb
fwait
aad
push
cmp
add
mov
clc
std
dec
xlat
in
roll
stc
arpl
int
shr
mov
int
leave
and
sbb
test
js
adc
pop
fisttpl
lock
mov
and
nop
mov
cmpsb
dec
sub
stos
xchg
xchg
cmp
xchg
sarb
push
mov
mov
xchg
sbbb
xor
stos
or
jno
fcoml
sub
sbb
movl
xor
xor
jp
sbb
pop
mov
or
mov
in
and
popf
adc
xchg
arpl
sub
xor
xor
loopne
arpl
jne
test
cmpsl
cld
inc
je
push
pop
and
rorb
fs
sbb
test
fwait
cwtl
shl
imul
mov
or
das
xlat
and
push
test
dec
or
mov
sub
add
cmpb
or
dec
adc
ret
cmpsb
sbb
cmpsl
cld
flds
aas
in
ds
push
movsb
cmp
jne
call
push
bound
inc
cmc
lods
dec
pop
sub
in
pop
outsb
stc
sbb
jno
jno
cld
fcomip
mov
jnp
mov
inc
or
jl
add
shl
in
sub
adcl
test
jle
xor
aad
jge
cli
xchg
or
rorl
sahf
stos
pop
push
out
inc
mov
push
aam
lea
adc
adc
sbb
jb
jns,pt
inc
nop
insl
ds
in
pop
sub
mov
loop
jnp
cvtps2pd
jge
jo
dec
clc
sub
pop
sti
sbb
std
in
cmc
add
sbb
je
add
mov
or
xchg
push
and
jae
cltd
data16
out
pop
clc
repnz
mov
lds
pop
lahf
cmp
cmpsl
jl
icebp
lea
pusha
gs
cwtl
xchg
mov
ret
rclb
stos
imulb
mov
add
out
lods
pop
sub
lods
sbb
jae
push
sahf
jns
shlb
cwtl
cmp
inc
push
mov
jge
xchg
test
jmp
push
fsubr
or
pop
add
jg
cltd
popa
push
jl
test
adc
jle
std
in
mov
and
lahf
loop
push
xlat
lods
fmuls
int3
mov
repz
shr
cli
dec
add
in
jmp
rcl
jo
mov
popf
rclb
rcll
push
mov
xchg
gs
sbb
push
jmp
mov
inc
repnz
jle
arpl
lea
andb
mov
lods
xchg
daa
jmp
addr16
pop
push
popa
sub
int3
test
push
dec
xchg
std
cwtl
movsl
and
sub
add
daa
loopne
subb
test
or
lea
and
add
dec
leave
out
es
js
callw
mov
movsb
sbb
mov
add
aas
lea
loop
mov
jnp
mov
jns
cmp
in
dec
jge
dec
mov
mov
cmp
in
jnp
fmull
adc
cmpsl
in
rep
sbbb
int
in
sbb
shl
mov
xchg
cmp
sahf
adc
push
mov
cwtl
ja
leave
and
cmc
adc
sub
mov
in
dec
pop
popf
jo
push
clc
jb
sbb
jl
sbb
pop
inc
xchg
push
adc
pop
cmp
lods
mov
or
fisttpll
dec
stos
into
mov
ret
notb
sub
mov
pop
inc
ljmp
mov
mov
rclb
push
andl
outsl
jg
dec
mov
imul
jae
pop
add
rolb
mov
das
push
es
ja
repnz
mov
xor
push
pop
mov
add
push
cmp
jmp
cmp
xorb
setns
inc
mov
loopne
fstpl
mov
lea
cli
xchg
jno
push
test
mov
mov
in
sub
cmpsb
nop
jle
mov
idiv
out
inc
xlat
das
lods
jg
ret
lods
js
aas
cmp
and
push
or
fmull
mov
mov
sahf
leave
mov
push
cli
cmc
test
leave
int
xor
and
cmp
mov
sbb
add
or
in
adc
xchg
mov
lods
aam
cmc
loopne
and
fidivs
mov
mov
pusha
pop
pop
cltd
push
xchg
out
jmp
dec
stos
int
and
outsb
das
sub
push
jb
rcrl
data16
mov
xchg
out
and
sbb
stc
jne
nop
repz
pop
dec
xchg
mov
cmp
inc
sbb
iret
lea
pop
add
and
leave
and
xor
dec
xchg
lcall
popa
push
dec
mov
pop
lds
or
ficomps
dec
scas
mov
ljmp
inc
fadd
jl
scas
adcl
pmulhw
push
lds
into
stos
popf
fidivrs
aam
mov
jb
mov
sub
pop
adc
adc
arpl
inc
out
addr16
fcomip
dec
jns
sub
fldl
insb
mov
fimull
imul
dec
push
in
inc
jle
leave
and
xchg
and
jl
dec
imul
jb
cmp
stos
das
es
lea
shlb
inc
pop
call
out
sbb
push
inc
loop
and
loop
in
cs
xchg
xor
pop
xchg
adc
icebp
pop
arpl
add
xor
and
jge
mov
and
lcall
xor
mov
inc
mov
push
dec
repz
pushf
fsubrs
push
in
adc
xor
push
mov
jbe
movsl
fpatan
cmp
push
aaa
repnz
xlat
xchg
push
sbb
sbb
pop
adc
roll
aad
leave
adc
jecxz
out
daa
nop
aas
sub
pop
icebp
pop
inc
fnstcw
loop
insl
ss
push
sbb
call
lcall
nop
and
dec
sub
xchg
inc
insb
sub
stos
js,pt
in
outsl
stos
mov
or
mulb
xchg
enter
mov
add
ja
shlb
push
lea
mov
ds
cwtl
or
cs
mov
repnz
pusha
ror
adc
mov
mov
xchg
ret
mov
lock
mov
push
ss
xchg
xor
or
pop
mov
aas
add
dec
xlat
jb
pop
xchg
pop
int
mov
or
mov
push
xchg
int3
push
xor
fnstsw
bound
lahf
cmp
mov
push
pop
imull
stos
jo
dec
outsl
pusha
fnstenv
movsb
add
push
mov
shl
mov
add
cld
ds
movsl
sahf
mov
iret
and
daa
push
call
fs
mov
jb
imul
adc
xor
push
out
test
inc
dec
lret
roll
jnp
sub
jnp
push
jnp
jge
outsl
in
xor
imul
and
mov
lods
ljmp
xchg
or
xor
cmc
leave
je
jg
imull
or
mov
adc
sub
jns
xchg
dec
fiaddl
cmc
loopne
adc
dec
cmpsl
cmp
xor
loopne
mov
add
push
aad
hlt
das
xor
mov
mov
xchg
mov
inc
data16
popa
divb
outsb
cld
das
and
mov
sbb
cmpsl
stos
sbb
es
imul
jae
mov
cmpsb
shrb
stc
cltd
loop
inc
hlt
fildl
xchg
fstl
jle
push
dec
jbe
cmp
test
or
sub
shlb
dec
and
icebp
in
sub
div
xor
movsb
xchg
mov
xor
divl
aaa
loopne
pop
sub
xchg
inc
stos
shrb
mov
aas
out
mov
lock
add
adc
nop
sub
xchg
or
and
stc
daa
stos
faddl
loope
popf
pushf
outsb
and
adc
repnz
lods
int3
mov
fsubrs
mov
mov
or
hlt
mov
repz
jle
pop
add
adc
mov
aad
lahf
dec
std
mov
in
and
inc
mov
call
pop
repnz
pop
jge
dec
pop
mov
mov
push
mov
push
gs
call
inc
loope
in
mov
and
add
in
xor
out
mov
add
daa
popf
test
hlt
xchg
adc
jecxz
loopne
lods
test
push
xor
mov
outsb
aam
ror
adc
cld
dec
insb
lock
mov
ret
cmp
mov
js
push
clc
pop
and
lcall
roll
inc
stos
jle
gs
in
arpl
in
inc
add
mov
adc
fwait
cmp
mov
xchg
sub
pop
adc
xor
mov
sub
sarb
and
movsb
sarb
mov
adc
mov
call
incl
das
testb
or
add
and
pop
int3
out
les
cmpsb
sub
repz
cmp
ret
xor
dec
mov
inc
add
push
jbe
mov
pop
into
pop
push
pushf
pop
sarb
enter
fistl
xchg
add
test
mov
pop
adc
dec
cmp
dec
or
xchg
mov
ror
xchg
cmp
inc
into
cmpsl
scas
and
cmp
mov
aam
imul
push
xor
or
sub
xor
out
ss
mov
adc
imul
xor
mov
ror
mov
or
mov
jl
cmpsl
inc
sbb
mov
sbb
xor
aad
cmpsl
in
mov
movsb
push
fs
stos
aam
cwtl
mov
int
sti
out
sbb
sbb
add
ret
adc
lret
and
out
xor
adc
lds
cmpsl
mov
out
pop
repz
stc
adc
pop
mov
es
mov
xchg
xchg
xchg
sbb
lea
movb
mov
notb
in
mov
fcmovb
xchg
cwtl
push
cmp
lret
inc
adc
cmp
call
cmc
xlat
adc
ret
or
adc
push
push
imul
jmp
rorl
ja
push
xor
cmc
out
sarb
xor
mov
jo
pop
xor
xchg
xchg
idiv
rcrb
sbbb
jb
xchg
nop
std
mov
pop
xchg
xor
mov
jne
not
jle
inc
subl
push
push
mov
fisubrl
sti
jmp
pop
dec
les
das
cmp
add
stos
push
pop
dec
jno
sub
cld
add
and
xor
ds
rcll
daa
les
pop
xchg
jmp
cmpsl
xor
mov
xchg
cmp
mov
scas
xchg
adc
mov
shl
in
or
or
or
and
jo
inc
data16
ljmp
imull
imul
sub
cmp
daa
loopne
cmpsb
mov
push
xrelease
xchg
enter
mov
mov
bound
sahf
out
push
push
fisttps
mov
fs
out
outsl
mov
pop
test
xchg
cmp
pop
ucomiss
pop
mov
sbb
mov
rcrb
ret
repz
push
test
dec
int3
scas
add
or
leave
jo
jno
push
clc
xor
ljmp
and
jge
xor
ret
sub
mov
cwtl
adc
dec
cmp
jge
inc
fisubs
inc
popa
lock
mov
and
push
and
out
jae
inc
out
shll
daa
xchg
cmpb
and
fsincos
orps
pop
sbb
add
add
pmullw
bound
push
mov
loop
lret
lea
jmp
roll
sbb
mov
dec
rorl
insb
pop
pop
pop
in
stc
sbb
call
pop
test
cmovle
es
ljmp
jl
movsb
add
cmp
popf
lea
ljmp
out
es
cwtl
leave
push
test
in
js
outsb
or
pop
test
cmp
icebp
aam
push
adc
into
outsl
xchg
mov
lds
in
subb
les
inc
mov
adc
or
adc
or
xor
das
jl
mov
lret
fmuls
fwait
rorb
lea
lock
out
adc
inc
out
pop
mov
gs
push
rorl
fs
pop
inc
mov
in
loope
pop
enter
push
adc
inc
test
jg
sbb
test
and
scas
adc
sbb
sti
cmpsl
out
andl
xor
sbb
sbb
mov
cwtl
pop
push
repnz
sbb
test
sub
lret
jecxz
pop
add
bnd
mov
mov
add
inc
mov
sub
out
lret
dec
stc
in
and
ret
add
or
ljmp
pop
push
stos
fs
mov
xchg
or
es
adc
sti
or
mov
popa
mov
dec
iret
push
cwtl
nop
les
aas
pop
cmp
movsl
lahf
xor
dec
pop
aam
adc
rol
mov
mov
sbb
mov
xchg
mov
loop
mov
sti
push
mov
jle
mov
xchg
fldenv
repnz
fwait
sub
or
out
sub
in
nop
and
lret
and
int
ss
adc
pusha
cmp
es
push
xchg
movsl
xchg
jecxz
pop
dec
pusha
sbb
shrl
adc
aaa
add
or
stos
nop
mul
add
ljmp
fxch
push
addr16
addl
icebp
push
sub
bound
inc
call
cmp
inc
add
push
or
mov
mov
dec
mov
pop
mov
data16
xor
movsb
rcrb
xlat
sbb
fstpt
orl
xchg
outsl
stos
aaa
div
sbb
jno
call
rorl
and
nop
test
push
lahf
pop
out
jle
pushf
mov
mov
hlt
xchg
mov
lret
inc
push
fidivrl
dec
test
adc
mov
xor
sub
cmp
rol
add
mov
mov
in
xchg
fistpll
cmp
leave
xor
in
ss
mov
add
fincstp
clc
movl
mov
pop
cmp
mov
int3
test
cmp
inc
push
mov
cmp
sub
cltd
jmp
iret
shrb
call
mov
or
lcall
int3
in
stc
pop
push
ss
test
mov
mov
mov
mov
cli
cmp
insb
mov
jge
aas
pop
pusha
xchg
or
sbb
xlat
mov
mov
or
add
xchg
pushf
inc
dec
int3
andb
cld
jl
rorb
mov
nop
or
cs
and
daa
add
imul
movsl
pop
int3
repnz
inc
xor
popa
pusha
pop
lock
lods
loopne
mov
aaa
lds
int3
add
xor
sar
subl
mov
popf
inc
mov
dec
stc
and
jo
das
add
repz
inc
aad
xlat
fcomi
ss
mov
shl
clc
add
mov
mov
push
push
shl
or
dec
cmp
mov
jle
sahf
cmpsb
mov
xor
push
pop
test
nop
lods
mov
add
cld
nop
sar
cmp
pop
and
fcompl
enter
mov
pop
mov
xor
cmp
daa
xlat
scas
jle
and
xlat
dec
mov
jb
jp
lcall
cli
adc
mov
ret
or
aas
imul
pop
sub
test
scas
cmpsb
sbb
pop
into
in
jo
jnp
or
push
cmp
mov
dec
push
aam
add
aaa
ja
ss
sbb
push
jno
add
or
pushf
adc
dec
or
fistl
xor
insb
ljmp
and
xor
xchg
loopne
int3
out
mul
dec
mov
jns
test
bound
add
aad
xchg
inc
adc
add
lret
inc
push
sub
or
mov
pop
adc
ret
pop
arpl
adc
jg
lods
das
es
fcomps
aam
sbb
jb
mov
jbe
push
add
clc
push
movsl
inc
jno
mov
stos
xor
mov
push
sub
inc
xlat
sbb
lock
stos
mov
call
or
popa
inc
hlt
push
ficoml
ss
ret
inc
shll
roll
notb
pop
leave
mov
dec
dec
shrb
push
xor
test
stc
movsl
sti
sti
add
repnz
dec
jne
leave
lock
cmpsb
xor
adc
fs
out
mov
rorl
mov
vphaddubw
mov
jne
ret
inc
adc
add
orb
pop
sbb
sbb
int3
xchg
sub
jo
or
mov
sbb
imul
lahf
inc
sahf
and
inc
scas
dec
push
or
movsl
xor
mov
jns
xchg
out
in
xlat
sti
ljmp
mov
cmpsl
sub
pop
mov
cwtl
fistps
outsl
adc
mov
inc
mov
test
out
push
shll
lcall
xchg
pusha
sbb
iret
add
or
cmpsb
lret
sbb
sbb
out
jmp
and
add
cmp
test
add
and
mov
xor
popa
xor
cld
movsl
fldt
mov
adc
popf
jne
outsb
inc
repnz
test
mov
bnd
enter
shll
jge
dec
pop
pop
or
test
daa
mov
test
push
cmp
sub
sahf
push
dec
push
pushf
inc
mov
nop
and
push
mov
adc
cltd
int
xlat
in
xor
ret
mov
jbe
mov
popa
mov
repz
lods
pusha
adc
lds
aad
cli
jp
or
popl
pushf
jnp
add
pop
movsl
push
pop
add
push
push
xor
inc
sub
xchg
jns
adc
jns
dec
lcall
mov
xor
push
mov
mov
fcmovb
mov
cli
push
pop
or
loope
mov
sti
add
dec
aas
jmp
mov
push
xor
adc
fxch
mov
dec
sub
in
adc
xlat
repz
cmpsl
ja
xor
mov
fimuls
xchg
dec
xor
xchg
xor
sbb
mov
jns
sbb
movsb
jo
push
aaa
push
stc
pop
cld
pop
jnp
mov
enter
cmpsb
cmp
push
xchg
push
sarb
jb
sub
mov
cltd
decl
cltd
je
pusha
and
xor
pop
mov
or
sub
xor
mov
adc
cmc
lcall
or
sbb
dec
mov
aad
inc
stc
push
enter
or
ljmp
jbe
add
sub
xor
add
int3
sti
jmp
push
ds
aam
addr16
scas
and
or
push
add
adc
mov
xor
push
or
das
xor
jo
cmp
insl
cmc
fwait
dec
jle
dec
cltd
cmc
mov
pop
mov
hlt
jb
jle
adcb
add
cs
jmp
adc
add
or
dec
into
popf
rclb
inc
repnz
cmpb
and
pop
fcompl
roll
and
test
ss
sub
mov
mov
je
aas
jo
ja
mov
lock
aam
loope
or
jo
or
imul
fnstcw
mov
add
sub
sbb
stos
xor
call
pop
test
std
jp
xchg
out
js
pusha
xchg
xor
stos
cmpsl
insb
rcl
clc
test
push
cmc
ss
mov
mov
rcrl
xchg
lret
loopne
scas
mov
out
mov
ljmp
or
addr16
dec
fbld
nop
sbb
data16
or
mov
lahf
stc
mov
js
push
orb
mov
out
movsl
mov
adc
dec
or
jle
movsl
jge
cmp
dec
je
ds
dec
lret
mov
inc
dec
fildll
sbb
shl
cmp
jg
cmpsb
dec
cmp
fdivs
adc
pop
daa
dec
xor
ds
cli
nop
fistl
test
mov
mov
or
movb
fnstenv
jle
ds
push
movsb
std
cmpsb
inc
sbb
fldenv
cmpsl
pusha
add
arpl
aas
js
mov
dec
sbb
fs
fsub
push
sub
or
cwtl
mov
sub
les
jo
aas
xchg
push
outsl
mov
fcoml
popa
ljmp
mov
cmp
push
notb
ja
aad
push
fs
adc
ret
call
fbstp
out
pop
jns
insb
inc
loopne
ljmp
fldl
push
sbb
adc
stc
jp
cmp
sbb
or
and
inc
out
jle
jmp
bound
cmp
mov
pop
xchg
pop
bound
pop
pop
add
inc
pop
dec
xchg
cmpsl
insb
or
or
pop
js
dec
inc
mov
les
fs
and
mov
sub
addr16
pusha
xor
setl
fidivl
es
sidtl
mov
dec
push
hlt
bound
adc
add
cltd
stos
cld
cmp
js
lahf
idivl
sub
push
or
lds
lods
pmovmskb
addl
pushf
push
adc
movsb
movsb
les
mov
aas
test
inc
es
push
push
cmp
fsin
mov
ficompl
addr16
rcr
mov
xchg
addr16
pop
cmp
sub
mov
das
mov
push
adc
enter
cld
pop
es
fs
call
movsl
xor
icebp
idivb
ss
leave
xor
xchg
pushf
test
jns
sub
daa
cld
test
repnz
mov
iret
les
mov
clc
mov
inc
lods
movsb
inc
pop
cli
lods
xor
dec
add
icebp
loopne
sub
jne
in
mov
adcl
push
xchg
aas
popa
insb
pop
mov
test
clc
ja
dec
xor
dec
mov
pop
daa
push
nop
inc
test
jne
pop
arpl
test
or
out
jg
push
andl
add
xchg
and
stos
or
mov
lea
leave
xor
or
and
inc
xchg
popf
stos
outsb
mov
or
clc
sub
cmpxchg
xlat
hlt
add
xor
aas
lahf
or
mov
jns
andb
scas
pusha
fidivs
rol
pusha
cmp
jge
test
xor
fst
arpl
push
xor
fidivrs
popf
mov
mov
mov
fisttpl
fiaddl
fistpl
pop
movsl
lret
cmp
movsl
ret
mov
movsb
push
push
shlb
bound
sbb
jbe
outsl
movsb
repz
sub
mov
test
jno
jo
jge
cltd
repz
sub
mov
cmp
and
mov
cmpl
pusha
orl
jne
xchg
data16
xor
jae
add
xor
sti
push
jo
aaa
rorb
aad
dec
push
mov
fs
mov
cmpsl
ret
xchg
rorb
xchg
push
xchg
cmpb
out
mov
sbb
mov
int
mov
into
xchg
inc
cmc
xchg
test
push
xchg
sbb
mov
inc
popf
lods
fs
fisttpll
lods
cmp
sub
fcomi
adc
into
mov
hlt
repnz
pop
add
call
cwtl
mov
hlt
repz
push
sub
loop
jb,pt
mov
xor
cmp
lds
scas
aad
divl
stos
push
repnz
into
fldcw
enter
enter
cmp
bound
aas
push
xchg
fs
or
insb
cmp
inc
jne
inc
lods
inc
mov
pop
into
push
hlt
adc
add
jle
std
xorb
and
addb
testl
mov
push
mov
jge
xchg
xchg
jp
cmp
cmc
or
pop
es
stc
fcoml
dec
fistps
dec
pop
or
xchg
dec
fbld
jae
xcrypt-ecb
cmpsl
leave
test
ljmp
mov
add
xchg
fldl
jecxz
popf
xchg
and
fmull
fnsave
add
les
mov
cmp
sbb
xlat
dec
dec
lcall
mov
adcb
outsb
movsl
push
popa
mov
ret
hlt
fists
sub
int3
out
mov
pop
aad
jmp
jge
xchg
jp
mov
orb
cmpsl
xor
xchg
addr16
push
icebp
xlat
nop
jge
sarb
sbb
lods
jb
xchg
int3
aam
or
mov
call
lock
out
pop
out
push
out
dec
mov
cmp
rolb
inc
and
sub
dec
insb
cmp
adc
addr16
sub
popl
sahf
cmp
pop
daa
sub
xor
mov
mov
aam
test
pusha
popa
int3
or
es
aam
dec
sbb
lds
add
add
and
sub
std
lret
push
push
mov
ss
shll
pop
adc
xchg
dec
int3
lcall
fidivrs
xchg
push
xchg
mov
push
mov
hlt
dec
add
scas
mov
jecxz
mov
add
jle
inc
sti
xor
icebp
stc
call
pushf
or
mov
or
fstpl
fistpl
ds
lock
mov
aam
jg
or
jno
js
sbb
sub
sti
pushf
mov
dec
push
xlat
xchg
mov
dec
cmpsb
mov
fxch
test
mov
repz
cld
sbb
mov
aam
jno
sbb
and
mov
ds
add
aam
add
fdivs
mov
mov
sub
loopne
cmp
mov
fs
in
addl
cld
push
shll
inc
jmp
fisttps
in
lahf
sbb
dec
outsb
pop
push
pmulhuw
mov
inc
sub
aaa
out
insl
cltd
inc
pop
ret
sbb
data16
andl
movhps
pop
stos
or
xchg
testb
arpl
cld
in
xchg
scas
ljmp
pop
inc
sti
xchg
sub
scas
daa
loope
loop
pop
mov
sbb
inc
cmpsl
cs
cli
push
aad
lret
mov
rcll
repnz
test
gs
lds
push
inc
dec
pop
dec
cmp
mov
xor
mov
push
xchg
lock
add
fistpl
dec
scas
sbb
insl
inc
shrl
xchg
and
mov
loop
out
outsb
in
sti
sbb
cmp
cld
inc
sub
test
orb
stc
jle
dec
sbb
ljmp
push
or
jecxz
test
sub
jle
jmp
xchg
sub
imul
test
xchg
sub
fildll
inc
popa
jl
xor
dec
test
sub
icebp
dec
mov
mov
mov
mov
scas
inc
jge
mov
test
nop
inc
addr16
xor
psllw
cld
add
push
push
leave
adc
inc
dec
daa
xor
xchg
adc
outsl
mov
sbb
pushw
movsl
fisubrl
xchg
xchg
aaa
gs
insl
dec
rclb
loopne
lds
adc
in
bound
jg
test
stos
stos
mov
gs
scas
sbb
or
mov
mov
or
pop
push
decb
add
std
dec
xchg
jge
inc
jne
sbb
mov
dec
rolb
jmp
mov
cmp
fiadds
lret
pushl
add
mov
push
loope
pop
push
scas
icebp
sbb
jne
xor
cld
jmp
fnstsw
jb
pmaddwd
or
nop
lea
sarb
daa
das
pop
scas
movsl
fidivrs
in
xor
lods
push
xchg
sub
pop
xchg
mov
cmp
dec
in
jp
lods
jae
mov
adc
jmp
jnp
mov
addl
mov
ja
rolb
jge
idiv
push
xchg
sub
adc
dec
pop
mov
and
mov
aas
loope
or
xchg
dec
pushf
push
icebp
repnz
push
mov
arpl
je
sub
adc
or
mov
subb
addr16
sahf
or
lock
xchg
pop
mov
pop
mov
fcmovbe
outsb
sbb
xor
jmp
dec
add
xor
xor
enter
adc
cli
or
std
mov
ror
inc
push
pop
dec
mov
dec
jmp
or
iret
and
rol
pop
js
add
xor
fiadds
mov
outsl
jg
imul
xor
ret
test
rolb
mov
mov
mov
push
pop
out
xor
sbb
adc
and
mov
or
dec
xchg
push
add
add
push
mov
mov
or
pop
in
dec
cmc
push
push
sahf
xlat
push
nop
and
iret
faddl
jnp
cmpsl
lock
push
mov
shlb
nop
push
je
out
test
mov
jae
sbb
push
std
adc
fisubrs
shlb
cmp
call
fistpll
push
in
aam
int
out
xchg
push
adc
fsubs
sahf
incb
or
jmp
xor
sahf
or
or
push
pop
addr16
out
adc
addr16
lea
aad
repz
pop
push
ret
sbb
hlt
pusha
fwait
add
test
cmp
cmp
sub
sbb
adc
jle
sub
movsb
jo
push
push
xor
adc
fstpt
add
cmpsb
loop
mov
ficompl
pop
xchg
repnz
in
pop
mov
jno
imul
cmc
mov
push
xor
lods
dec
add
mov
or
jle
jnp
mov
dec
jecxz
pop
ja,pt
mov
cmp
or
mov
sbb
cltd
loop
jl
mov
out
mov
jnp
and
jg
mov
xchg
xor
add
jmp
xor
inc
scas
sbb
js
ficoml
xchg
pusha
ret
and
cmp
data16
jmp
dec
inc
leave
lret
cmc
xchg
rorb
dec
jo
stos
mov
xchg
sub
popf
stc
jge
push
xchg
lods
dec
cld
dec
mov
add
aas
inc
jb
stc
push
test
xor
sbb
lahf
add
jg
movsl
lods
and
adc
movsb
mov
mov
jmp
dec
cld
cs
shrb
add
push
fwait
inc
pushf
xchg
in
xchg
jns
jmp
gs
rorl
aas
repz
jmp
or
popf
sub
repz
and
sub
mov
mov
ret
in
mov
xchg
jmp
cmpl
stc
in
jb
icebp
mov
leave
aam
arpl
das
bound
ret
lahf
testb
mov
cmp
hlt
ss
xor
pop
cmp
das
add
gs
imul
jbe
lds
and
pusha
mov
enter
sbb
int
fldt
repnz
ds
push
das
dec
jp
pop
gs
les
sbb
push
pop
push
push
inc
jle
cmp
out
jp
insl
ret
jo
mov
add
out
sub
pushf
push
add
push
shl
iret
and
dec
fadds
xor
std
push
cmp
pop
sbbl
jno
cli
push
out
pop
or
clc
aas
ret
push
mov
lret
or
jne
sbb
lret
mov
pop
xor
test
cmp
mov
adc
cld
dec
movsl
xor
add
push
or
lds
sub
jb
imul
sub
in
mov
xchg
add
fidivs
xchg
dec
cmp
jnp
pop
outsb
call
adc
cmp
test
xchg
jo
jp
fs
fnstsw
cmpsb
aad
ja
inc
cmp
leave
or
add
adc
test
jnp
mov
jmp
hlt
lahf
push
sti
mov
lea
jbe
jl
xchg
jp
stc
mov
aaa
imul
ja
dec
sbb
gs
inc
fildll
decl
mov
test
sub
dec
dec
and
jo
and
inc
mov
cwtl
dec
add
mov
scas
stc
mov
push
mov
sub
fiadds
mov
lds
mov
aas
pop
xor
cli
and
in
mov
dec
mov
adc
and
ljmp
pop
sar
cs
into
add
idivl
int3
movsb
push
stos
dec
sbb
scas
add
jl
add
ja
aaa
mov
pop
shlb
popa
cs
pop
inc
pop
and
xchg
pop
dec
popf
cmc
adc
pop
and
jbe
mov
into
loope
or
xor
pop
push
cmp
popa
outsl
and
andl
loopne
js
push
into
xchg
pop
or
rcrb
xchg
in
hlt
jns
dec
inc
into
rcr
jmp
icebp
xor
jmp
push
scas
out
and
lcall
pop
jecxz
sub
nop
js
fldl
jbe
xchg
lea
fldt
mov
jnp
sbb
fwait
sub
popa
mov
mov
test
sarb
movsl
mov
icebp
push
or
lods
and
fst
inc
dec
cmp
push
and
mov
addb
cs
je
lods
pop
add
dec
cld
pushf
and
xchg
inc
es
add
out
int
mov
arpl
dec
mov
mov
lock
cmc
bound
lods
pop
fistpll
inc
lea
push
xor
cmp
add
cmpsb
fidivl
stos
xchg
je
imul
adc
lods
ffreep
mov
enter
test
sbb
mov
sub
cmp
add
cld
stc
mov
xchg
cmpsb
pop
sub
sub
mov
push
les
mov
sub
outsl
jp
sbb
icebp
xlat
push
cwtl
fcmovb
aaa
mov
loope
in
loop
iret
and
mov
mov
pop
mull
mov
inc
fucomi
movsl
divb
mov
pop
das
icebp
data16
add
and
mov
aaa
pop
sub
xor
mov
inc
xchg
movsl
mov
or
push
call
xchg
pop
adc
dec
pop
dec
aaa
pop
cmp
mov
leave
scas
sti
cmpsl
js
or
push
sbb
inc
jle
xor
fidivl
lret
ds
out
int
or
dec
leave
aas
ljmp
scas
pop
push
jecxz
mov
movsl
push
cmp
lods
popa
not
or
sahf
nop
in
fs
ja
jp
addr16
hlt
add
lret
lea
xchg
pushl
jmpw
push
cli
and
cmc
inc
pop
jb
jo
leave
mov
adcl
in
inc
inc
daa
aas
push
mov
sub
jg
aas
popf
or
cmc
repz
mov
sarl
mov
xor
scas
cwtl
aas
sub
dec
mov
aaa
outsb
stos
dec
iret
dec
das
xor
xchg
das
lret
fsubrs
mov
loopne
icebp
popa
imul
lcall
jl
lret
mov
adc
test
and
jecxz
push
and
cmpsb
fisttps
or
insl
negl
jl
mov
jp
fs
out
gs
ss
jb
addb
mov
add
or
adc
ret
jl
ljmp
cltd
ficoms
into
xor
push
jo
je
imul
mov
fdivrs
add
jmp
add
sub
bswap
in
dec
cmp
xlat
mov
xchg
call
lods
daa
incl
jp
mov
into
bnd
adc
and
hlt
jge
mov
xor
jecxz
mov
aam
insb
xor
stos
imul
jne
mov
xchg
cli
outsb
fs
cmp
fmuls
leave
fidivrl
data16
jo
pop
sbb
add
and
repz
es
inc
mov
jge
js
iret
addl
std
mov
push
push
mov
mov
leave
mul
or
or
cmpsl
out
loopne
test
or
and
push
add
cmpsb
jg
psllq
sbb
dec
pop
nop
sbbl
sar
ljmp
add
xchg
lods
adcb
pop
cmp
push
adc
xor
dec
add
push
cmp
ja
add
push
inc
push
cmp
neg
hlt
pop
out
mov
or
xchg
arpl
mov
icebp
push
push
into
or
or
rclb
clc
and
mov
push
cmp
jmp
xchg
mov
mov
test
in
inc
in
jne
ret
mov
mov
push
lods
cmp
dec
stos
jle
out
in
scas
cs
jmp
inc
mov
sub
add
or
xchg
push
adc
cli
add
test
push
or
push
sbb
subl
pop
rcll
jp
dec
xor
push
xchg
out
pushf
daa
shlb
xor
cld
mov
mov
adc
je
mov
xor
push
sbb
fcmovnbe
cmp
ss
jl
push
hlt
insl
fisttps
bound
repnz
leave
stc
lret
add
das
in
xor
cmp
in
clc
push
mov
push
and
popa
xchg
and
fmul
scas
cmp
cmc
mov
and
cltd
jl
jmp
cmp
sub
scas
sbb
ds
adc
sub
leave
or
mov
xchg
lcall
pop
into
jle
and
cmpsl
lods
xor
and
mov
inc
das
shlb
rclb
outsb
lds
sbbb
iret
fcmovbe
mov
mov
cmp
push
cltd
xor
repnz
and
orl
int3
jp
jecxz
call
fcomp
pop
mov
jns
xor
repnz
js
out
scas
add
xor
imul
call
adc
ja
mov
insb
loopne
stc
int
jecxz
js
cmp
xchg
mov
bound
xchg
fisubrl
jne
cmp
cmp
mov
adc
xor
mov
insl
xor
js
xchg
mov
xchg
cmp
bound
negb
mul
insl
lret
repnz
xor
hlt
fists
sbb
ja
cwtl
sti
into
mov
mov
jg
push
jmp
adc
adc
fistps
xor
add
cmp
adc
fists
aad
jmp
mov
sbb
mov
js
in
and
stos
ja
pop
sub
or
mov
fsubrs
pop
sub
add
pushf
sub
pop
imull
fildl
mov
stc
ja
sbb
ret
lret
push
rep
pop
and
cwtl
popa
sbb
push
push
dec
movsl
mov
sbb
das
and
cmp
ret
sbb
fs
inc
push
sbb
movsl
outsl
pop
xchg
push
jo
push
adc
jle
inc
out
dec
or
push
scas
jecxz
xor
jo
stos
fbstp
lods
mov
or
ficoml
adc
pop
mov
mov
lods
movsl
xchg
mov
adc
int3
pop
push
icebp
or
outsb
imul
and
stos
cs
add
adc
jns
add
inc
enter
inc
ja
lcall
out
lahf
jb
pop
lds
mov
push
icebp
xor
addr16
inc
dec
cmp
lcall
out
jecxz
stc
xchg
inc
jle
ds
sub
jecxz
ljmp
movsl
dec
add
push
adc
mov
cmp
mov
push
aas
lret
insl
ljmp
imul
cs
hlt
inc
and
xor
out
mov
lcall
subb
dec
and
daa
mov
pop
iret
test
inc
scas
or
mov
mov
fimuls
pop
sub
jge
call
popa
sbb
mov
lret
xor
aaa
sbb
in
sub
push
lcall
inc
jne
fdivl
ljmp
xabort
test
sub
int3
cmpsl
out
xlat
jb
push
fstl
mov
xor
in
lret
pop
push
out
ljmp
cmp
or
movl
sub
cld
dec
mov
loop
xorl
push
sub
ljmp
push
in
jo
push
stos
xor
mov
xchg
stos
fs
in
fisubrl
fstp
inc
xchg
mov
test
jo
dec
mov
push
sbb
mov
ljmp
adc
sarb
jecxz
fistps
fmulp
adc
lods
mov
mov
push
mov
xchg
jno
inc
or
in
aad
ret
or
push
fdivl
push
jl
push
pop
fstpl
icebp
popf
insl
ds
pusha
xlat
inc
pop
adc
out
fwait
not
push
scas
and
push
ret
push
sub
mov
pop
jne
bound
ljmp
fsts
dec
xchg
lods
test
fwait
add
ret
xor
movsl
xorb
push
hlt
mov
inc
sbb
and
test
sbb
fists
push
outsl
mov
add
jns
add
lods
mov
push
mov
jecxz
fsin
in
cmp
enter
adc
movsl
add
sti
pop
inc
gs
cmp
int
cmp
push
jecxz
shlb
adc
sub
fisubl
scas
loopne
push
and
test
mov
test
jbe
xchg
outsb
fbld
jne
xor
and
fnsave
clc
popf
xor
xor
wrmsr
je
add
cvttps2pi
mov
bound
mov
sbb
dec
in
aad
or
aaa
imul
loopne
xlat
mov
sbb
lret
cmp
push
cmp
pop
fcompl
cmc
mov
das
scas
in
scas
rorb
shll
lods
inc
cmpsl
jnp
jecxz
xchg
sbb
cmpsb
pop
cmp
cmp
sbb
jae
and
jmp
clc
in
cmpsl
jns
mov
pop
shlb
mov
fdivrp
leave
gs
push
out
leave
sbbb
or
insb
je
xchg
fwait
xor
in
adc
sbb
sahf
out
or
jmp
arpl
popf
xchg
dec
ficomps
popf
jns
xor
pop
inc
adc
cmp
adc
movsl
jno
lret
sti
dec
insl
pop
call
lea
out
inc
jns
and
xchg
scas
inc
lea
sbb
xchg
rorb
call
mulb
jnp
lods
inc
out
sbbb
or
push
cmp
movsl
jg
inc
mov
pop
lcall
aam
add
dec
sbb
xor
inc
fmul
js
jae
mov
pop
sub
xor
mov
mov
sub
pop
stos
scas
mov
jb
inc
fldcw
push
mov
dec
addr16
loopne
inc
lcall
int
rcl
popa
fildll
ljmp
scas
mov
xchg
bound
lods
scas
push
loop
dec
cwtl
lahf
jns
enter
push
scas
sbbb
rclb
sub
sarl
cmp
pushf
icebp
aas
xchg
ret
adc
test
or
mov
cmp
xchg
dec
icebp
jne
push
inc
pop
mov
scas
test
imul
mov
mov
aas
mov
stos
push
xor
cltd
mov
add
aam
js
int3
and
xlat
mov
adc
test
in
into
lds
fadd
arpl
mov
mov
out
insl
pop
in
jl
adc
out
imul
das
mov
sub
pop
sub
data16
int3
or
mov
das
dec
push
mov
aad
lahf
mov
outsb
insl
mov
lret
pop
dec
xchg
sub
or
mov
out
push
out
pop
jle
jg
and
outsl
rcr
imul
inc
out
xor
adc
ss
cmp
clc
adc
mov
add
xor
imul
push
mov
jns
xchg
xor
xchg
scas
jp
stos
xchg
cmpsl
aad
rcll
xchg
dec
add
test
xor
xor
jle
push
lahf
inc
js
popa
sbb
fstl
mov
inc
inc
add
sub
movsl
mov
pop
and
test
data16
pop
cmp
mov
out
cltd
jmp
xor
dec
sbb
fwait
in
jp
mov
sub
xchg
pushf
cmp
fists
sahf
loop
smsw
cli
lods
lahf
sti
inc
push
jge
cs
or
add
dec
imul
scas
jae
or
je
imul
seta
sbb
test
imul
sbb
xchg
add
rorb
enter
sub
xor
mov
testl
jb
into
jns
icebp
test
cli
pop
movsl
inc
mov
push
test
mov
jo
push
pop
adcl
jmp
mov
adc
xor
mov
lods
lock
jne
ret
and
test
add
pop
dec
repnz
fwait
sub
int3
daa
loop
cmpsb
push
les
push
mov
pop
push
jl
dec
vmovaps
sti
add
mov
ljmp
movsl
sub
sbb
getsec
fistpl
mov
lahf
enter
mov
aaa
scas
ja
cli
xchg
loopne
add
ja
xlat
xchg
mov
push
enter
lods
jmp
je
jns
jmp
iret
jb
or
pop
stc
clc
ljmp
sbb
push
jg
stos
mov
push
loop
outsl
xchg
fldt
or
push
push
dec
xlat
and
xchg
push
inc
push
das
inc
sub
gs
scas
jae
fiadds
sub
jb
out
stos
jnp
mov
out
notb
rorl
enter
push
dec
mov
dec
mov
mov
ret
pop
outsl
xchg
sub
or
jp
fidivrs
cmp
jnp
pop
sbb
jecxz
push
mov
xchg
sub
imul
mov
insl
xor
xor
leave
dec
icebp
jmp
jne
and
int3
test
dec
mov
sub
sub
cmp
dec
pop
out
jge
pop
or
ret
out
xor
rcrl
adc
push
lods
inc
mov
jg
xchg
adc
inc
outsl
and
leave
shll
es
fidivrl
movsl
mov
jnp
pop
das
dec
mov
mov
mov
loopne
int3
pop
es
ficompl
daa
mov
test
inc
dec
dec
scas
cwtl
xchg
dec
shll
fnstcw
pop
popf
or
bound
xchg
pop
scas
roll
and
cwtl
inc
and
ljmp
imul
mov
mov
lock
mov
mov
sub
icebp
xor
out
jmp
or
inc
hlt
enter
adc
cs
ret
jnp
xor
adc
das
push
in
push
insb
mov
lock
ficoml
insb
test
cmp
or
mov
inc
mov
hlt
and
xchg
stos
xlat
and
inc
push
push
das
scas
xor
daa
lods
lock
mov
cmc
rcll
mov
or
mov
mov
fcomp
jnp
repz
fistl
or
mov
mov
jne
cs
in
jo
jp
pushf
je
inc
push
push
mov
sub
jecxz
leave
mov
in
call
jns
xor
jbe
imul
rorl
jge
mov
mov
repz
ja
aas
pop
push
add
lods
adc
clc
sub
shlb
lods
dec
scas
push
cmpl
loopne
hlt
jno
jne
sub
add
lea
inc
nop
loop
cltd
add
jmp
push
lret
mov
mov
clc
add
subl
fs
flds
cmp
out
fwait
dec
insl
int3
sbb
push
xchg
loop
lock
fwait
adc
fsubrl
lds
cld
scas
mov
test
cld
add
test
pop
lahf
mov
add
lret
sbb
inc
lea
int3
data16
add
push
pop
jmp
cld
call
gs
repnz
sbb
sub
addb
int3
data16
push
mov
push
outsl
stos
movsb
in
stos
push
decb
jne
cmc
pop
rol
mov
adc
loop
and
and
and
data16
mov
mov
add
push
jo
jmp
xorb
inc
jge
mov
repz
mov
cmp
add
pop
or
pop
addb
mov
test
push
pop
not
mov
andl
and
mov
mov
lea
test
xchg
pop
sub
nop
loopne
out
lds
xor
mov
cmpsb
inc
jno
fbstp
push
out
out
mov
mov
push
imul
call
pop
rorl
and
bound
jb
pop
xchg
jb
clc
add
jns
push
mov
xor
lea
pop
shl
xlat
and
loope
xor
or
pop
out
pinsrw
stos
mov
xor
and
mov
scas
sub
mov
int
and
stos
loope
fs
bound
mov
add
in
psubsw
mov
das
dec
js
aad
push
inc
lods
push
mov
mov
jnp
mov
out
cmpsl
jp
hlt
stc
pop
outsl
cmpsb
fdiv
xchg
cmp
cvtps2pd
leave
add
push
xor
adc
adc
loope
cmp
aaa
jnp
adc
movsl
sbb
cmc
or
and
pop
xchg
and
dec
enter
notl
push
ficompl
imul
ja
stos
mov
cld
outsl
adc
scas
push
push
out
cmpsb
or
in
into
mov
lret
cltd
mov
cmpsb
sahf
inc
aaa
dec
fisttpl
jp
jecxz
xor
in
out
loope
adc
sahf
stos
pop
repnz
adc
xchg
cmp
lds
and
sub
hlt
xchg
out
dec
pushf
idivb
xor
sub
sub
insb
into
ror
sbb
pop
mov
movsb
sti
ficoml
lea
xchg
adc
movsb
pop
pop
ret
xchg
xchg
mov
cli
in
push
test
mov
mov
outsb
filds
pop
pusha
aas
cmp
adc
jnp
adc
mov
imul
mov
mov
xchg
or
nop
xlat
push
jb
cmp
repnz
cltd
jl
lret
shll
mov
jle
sbb
jg
push
inc
adc
push
sti
xor
jbe
addr16
fisubrl
in
cmp
push
pop
and
dec
xor
in
xchg
xchg
mov
xchg
adc
andl
dec
popf
xorl
mov
in
ljmp
out
scas
cmp
push
lods
lret
std
inc
xchg
jno
gs
mov
repz
imul
shr
out
cwtl
sbb
pop
addr16
pop
inc
cld
sbb
xorl
pop
scas
inc
les
rcll
scas
mov
dec
mov
sub
iret
inc
je
sbb
stos
adc
jns
or
adc
loopne
dec
dec
mov
mov
dec
cmp
imul
xor
jp
clc
fdivrs
or
mov
faddl
cmp
das
hlt
mov
loopne
fisubl
adc
xchg
int3
and
ljmp
xchg
inc
mov
sbb
loop
pusha
xlat
fst
inc
addl
xor
sub
mov
mov
and
je
loopne
mov
pusha
int
sarb
push
inc
mov
add
fnstenv
adc
rcr
add
subb
ret
jmp
inc
mov
mov
gs
fwait
xor
fs
out
cltd
das
pop
push
or
sub
dec
pop
sbb
sub
insb
lcall
add
bound
or
js
cmp
mov
lods
fcoms
popf
xchg
pop
pop
add
cwtl
les
push
dec
dec
stc
push
inc
mov
xor
mov
xchg
dec
fistpll
sub
jns
aaa
orb
xchg
mov
in
or
pop
pcmpeqd
insb
dec
xchg
inc
daa
cmp
or
inc
test
fcoml
data16
push
into
and
xor
icebp
cmovg
loopne
cld
ljmp
add
lds
mov
pop
or
cli
sub
dec
sti
leave
xorb
repz
stc
enter
fisttps
jo
jnp
mov
push
xchg
fs
inc
je
out
and
decb
es
dec
mov
out
lods
pop
xor
push
lea
movsl
and
add
lods
fcmovnb
cmp
pop
mov
mov
lret
lret
insb
dec
mov
mov
mov
int3
rcrb
bound
into
inc
push
cmc
fiadds
push
push
mov
std
push
push
jns
stos
adc
jno
mov
xchg
cmc
pop
xchg
fiaddl
test
adc
popa
rolb
mov
inc
sbb
inc
xor
xor
fsubrl
jg
adc
and
stc
data16
out
cmp
push
xor
inc
sahf
int3
mov
loope
sub
loopne
xor
negl
or
mov
inc
insb
in
out
inc
mov
shl
xor
xchg
pop
mov
dec
cmp
xor
sahf
xor
adc
fdivl
pop
scas
jg
das
aas
xchg
sub
and
shrb
jbe
cmp
mov
scas
mov
sbb
cmp
add
jl
hlt
xor
in
fs
fwait
push
in
or
ds
sti
movsl
dec
pop
mov
mov
cwtl
jo
outsl
in
fiaddl
push
cmpb
fiaddl
pop
jb
jmp
insl
je
fstpl
cmp
and
icebp
fs
lea
push
bound
ja
test
ds
fidivrs
icebp
in
movsl
jecxz
pop
out
lahf
jle
pop
mov
jae
or
int
inc
stos
movsb
sbb
out
not
bound
push
ljmp
jno
add
std
in
mov
sub
adc
mov
repz
int3
adc
outsl
jno
sub
push
out
pop
ljmp
pop
scas
or
and
test
aas
inc
nop
push
pop
test
xchg
xchg
pop
cmpb
mov
scas
add
and
outsb
ja
cs
jmp
out
aas
push
push
test
or
fbld
or
ljmp
pop
test
add
cmp
jns
mov
adc
leave
sbb
jne
out
dec
ljmp
rorl
adc
repz
inc
and
pop
inc
xchg
and
pop
mov
mov
rcrl
add
pop
ret
inc
sub
rorl
in
fisubrs
out
and
leave
pop
int3
test
repnz
push
fstpt
mov
and
cs
movl
dec
rclb
add
pop
mov
jnp
popf
or
and
push
ja
out
mov
outsl
push
dec
xchg
or
mov
adc
fsts
dec
cs
sub
repnz
mov
fdivp
xchg
jno
sti
stos
lods
pop
mov
rorl
cmp
sub
adc
push
push
sub
push
mov
lock
clc
es
stos
dec
push
addr16
cmpsb
mov
adc
push
push
out
xor
dec
sub
insb
fucom
cmp
adc
dec
addr16
mov
and
in
in
cmpsb
pop
pop
jecxz
dec
cmp
out
frstor
setae
xor
adc
or
adc
les
mov
sbb
push
xor
and
rolb
push
lods
pop
and
adc
dec
sti
rcrl
hlt
xchg
push
out
mov
mov
adc
test
fsts
hlt
pop
movsb
dec
iret
aas
jno
mov
sub
aam
jnp
xor
adc
sub
jp
xchg
cmp
and
or
add
call
adc
add
mov
pop
add
sbbl
mov
adc
ret
pushf
mov
insb
fistl
insl
or
cmpb
gs
adc
mov
mov
and
jg
pop
jae
jbe
sti
daa
mov
adc
ja
fsubs
push
and
jo
xchg
jg
mov
push
fsubr
and
sub
xchg
cmp
repnz
inc
dec
mov
add
dec
cmp
outsb
pop
pop
pop
cld
daa
sbb
shlb
or
fsts
lods
inc
mov
mov
cmp
mov
cmp
fsubl
mov
daa
pop
pop
cmpb
and
cvtpi2ps
cwtl
scas
sbb
rolb
push
mov
mov
xor
sarb
add
in
cmp
out
rolb
popf
sarb
jnp
jmp
inc
jg
inc
gs
insl
mov
mov
daa
and
popa
mov
mov
icebp
xor
fdivs
fisubrs
mov
lds
shrl
xor
iret
jno
cmp
push
jmp
loop
mov
sub
adc
outsl
add
xchg
mov
sbb
fwait
test
aad
push
or
inc
loopne
cmc
in
cmpl
aad
adc
or
jmp
mov
in
xor
jle
pusha
scas
ja
cs
and
or
in
rcrb
loop
and
outsb
mov
jmp
sbb
push
mov
or
xchg
sub
shrb
outsl
xchg
push
lock
mov
jl
mov
adc
in
dec
call
cwtl
xchg
lods
mov
sbbl
sbb
adc
adc
jecxz
sbb
out
call
add
cltd
mov
leave
negl
ret
decb
es
jno
stc
and
sahf
shrl
jns
fnsave
into
ret
cmpsb
jo
test
aam
sbb
bnd
cmovs
push
mov
pop
push
jl
movsb
test
fsubrl
xchg
nop
adc
pop
jno
inc
push
ret
and
fs
ret
cmpsb
add
lods
call
lret
dec
mov
xchg
and
gs
pop
mov
jp
mov
push
sub
or
jns
xchg
and
mov
jg
sub
inc
mov
ss
int
add
iret
out
adcl
xor
adc
ret
lret
push
addl
loopne
sahf
ljmp
inc
in
sbbb
dec
aas
movsl
loopne
lret
rclb
xchg
sub
inc
add
mov
roll
outsb
cwtl
add
in
in
adc
hlt
pusha
jecxz
dec
fistl
out
adc
or
stc
xor
push
jb
jg
repz
in
dec
repz
cld
push
scas
mov
ljmp
xor
add
rclb
leave
aad
lods
pop
cs
mov
movsl
subb
xchg
dec
sbb
cld
sbb
pop
pop
adc
scas
in
xor
mov
dec
adc
ret
and
or
rcrb
mov
ss
or
cmpsl
divb
xor
adcb
sarb
inc
or
jl
lahf
out
hlt
test
fwait
lods
jecxz
fmuls
cmp
repnz
sub
cmpsb
dec
popf
test
rcr
add
aad
sbb
and
sub
push
cwtl
cmp
stos
out
in
cmp
lret
push
sahf
push
or
push
movsb
out
lock
mov
dec
fadd
jge
daa
shll
icebp
aas
or
inc
mov
sahf
pop
xor
push
push
addb
pushf
pop
cmp
push
sbb
fs
cmpsl
test
pusha
xor
mov
adcb
pop
mov
xor
dec
notb
into
aam
repz
jmp
add
or
pop
mov
es
pop
xchg
adc
dec
popa
dec
mov
push
xchg
in
js
lea
inc
pushf
sbb
mov
and
xchg
fstl
pop
loopne
arpl
cmp
ljmp
into
testb
jo
xor
rolb
int
xchg
and
or
xchg
jl
insb
add
fwait
push
pop
stc
xor
dec
shll
das
dec
mov
ret
fcoms
imul
xor
xor
outsb
cmp
mov
sbb
xor
xor
add
sahf
fldt
sub
mov
sbb
and
ds
insl
scas
cmp
and
outsb
or
lret
mov
test
add
xchg
pop
xor
xchg
xorb
cmp
mov
lcall
jle
xchg
mov
push
mov
insb
pop
pop
les
cli
push
pop
dec
mov
mov
mov
pop
das
cs
mov
mov
xor
lahf
dec
mov
loope
sub
shll
cmc
scas
mov
and
jg
sub
enter
movsl
cmp
or
xor
pop
stos
sarl
in
imul
hlt
lds
dec
push
adc
inc
pop
inc
pop
mov
idiv
std
pop
scas
in
push
ret
mov
pminsw
and
inc
rol
imulb
daa
jge
shrb
mov
call
inc
mov
fisubs
sbb
sbb
out
xchg
nop
xchg
gs
pop
pop
sti
cmc
clc
loop
dec
or
addb
jmp
shlw
insb
nop
cmp
fcomip
mov
xor
fdivl
repz
and
adc
pop
sbb
ret
push
test
ret
or
mov
xor
push
mov
cmp
xchg
cmp
mov
cmc
push
add
lods
pop
pop
data16
adc
notb
stc
loop
lahf
pushf
mov
add
iret
sub
lret
adc
dec
lret
ds
test
mov
push
int3
loope
xlat
mov
clc
repnz
cmove
pop
lcall
fisubs
xchg
fs
es
inc
adc
notl
or
jecxz
xor
jo
fstp
adc
add
leave
jp,pt
add
or
mov
and
add
stos
repnz
cmpsl
push
jle
jg
dec
jno
jge
fst
add
xor
mov
inc
clc
mov
jg
push
cld
arpl
inc
mov
jo
int3
cmp
in
movsl
lret
fstl
mov
enter
inc
mov
js
out
jle
notl
ljmp
sti
mov
gs
pop
inc
xor
xor
cmp
rolb
pushf
pop
ja
xchg
sbb
cwtl
movsb
adc
pop
xor
fwait
and
rcr
inc
sbb
mov
cmp
int3
test
outsb
xor
mov
jo
xchg
xor
push
push
mov
repz
jl
insb
sbb
in
scas
repnz
nop
pop
clc
xor
adc
xor
lods
mov
enter
lods
pusha
pop
je
pop
fistps
ja
sub
xlat
push
add
imul
or
jno
adc
cmpsb
jl
xchg
adc
mov
imul
addr16
inc
and
fwait
jg
faddl
fdivs
adc
adc
xchg
mov
xchg
sarl
fbstp
pop
mov
cmc
adc
lods
ja
and
ret
push
loopne
out
lahf
loope
in
aad
dec
mov
adc
push
mov
xchg
fdivrl
push
jns
pop
mov
addr16
sub
jo
clc
insl
lahf
sub
and
data16
mov
jle
mov
push
xor
out
inc
inc
sub
int3
or
adcl
stos
outsb
jbe
cmp
stos
inc
sbb
sbb
mov
mov
addr16
dec
push
lea
gs
mull
sahf
sbb
jb
push
or
lods
sbb
std
dec
or
movsb
fs
or
xchg
dec
rorb
sub
lret
fs
xor
adc
fs
fiaddl
repnz
sub
fnstsw
push
adc
or
ja
mov
es
daa
sti
cli
lcall
movsl
sti
fdivs
xor
aas
mov
xchg
sub
and
test
jmp
enter
xchg
inc
xchg
aam
mov
sbb
mov
imul
ret
cmpsl
pop
mov
rcrb
xchg
mov
out
outsl
sub
pop
push
in
and
mov
mov
jmp
loope
push
dec
movsb
mov
test
and
and
cli
cmpsl
sub
push
mov
or
add
nop
push
adc
mov
adc
shlb
cmp
mov
inc
dec
xchg
adc
stc
sar
int
out
push
mov
pusha
ljmp
movsl
out
mov
xchg
inc
hlt
xor
inc
cs
mov
fstpl
arpl
sbb
mov
in
fsubrl
or
xchg
sbb
ds
ror
mov
mov
sub
pop
dec
lea
push
out
std
inc
inc
loop
imul
subb
mov
jnp
dec
xchg
lods
jno
in
pop
mov
lods
mov
pop
inc
jmp
das
push
les
das
cmpsl
shl
rcl
mov
out
or
fs
jg
movsb
bound
mov
iret
and
int
mov
das
fadds
cmp
inc
test
xchg
jp
sahf
xor
shll
cmc
outsl
mov
mov
mov
pop
jb
mov
and
outsl
ret
es
mov
sbbl
mov
push
mov
lahf
andb
call
cmp
jnp
jl
pop
repz
sahf
sbb
sub
adc
sbb
ss
loopne
cwtl
dec
push
scas
push
mov
fildl
sbb
cmp
enter
jle
mov
lahf
das
lods
aam
dec
jge
ss
lahf
and
fs
inc
scas
insb
sar
jg
les
push
jno
loopne
popa
sti
jns
adc
pushf
cmp
incl
adc
leave
dec
cld
inc
sub
aam
and
and
xchg
mov
push
icebp
sub
cli
jecxz
loop
adc
stos
movsb
loope
xor
inc
pop
roll
je
cltd
inc
into
out
jno
push
test
jnp
adc
mov
inc
lock
mov
jmp
mov
sbb
mov
mov
in
cmp
xor
xor
sub
out
sti
arpl
dec
arpl
push
sarb
imul
repz
jmp
in
fsubrs
lock
dec
or
lret
fdivrl
jbe
pop
rorb
cmp
pop
mov
dec
stos
stos
lock
mov
xchg
pop
out
push
loope
xchg
mov
stos
out
push
push
cmp
aas
jl
ror
fistpl
and
adc
inc
pusha
movsl
addr16
loopne
cmpl
jg
lret
mov
add
add
mov
jp,pn
push
sbb
mov
testb
mov
or
jno
and
sbb
sbb
xchg
fstl
inc
cmp
mov
inc
push
pop
adc
pop
inc
jbe
int
outsb
jg
mov
les
test
stc
fcompl
lods
jae
outsb
cmp
punpckhbw
movsl
cli
sbb
sub
stos
inc
sbbb
push
or
dec
int3
push
repnz
insb
add
adc
mov
std
enter
or
es
push
adc
inc
sarl
stos
cmp
popa
push
inc
mov
fidivrs
lods
cmp
cmp
mov
clc
dec
push
push
ret
sahf
and
or
mov
stos
or
or
pop
dec
and
int3
shrb
test
jae
cmpl
addr16
jmp
ja
sti
fs
in
outsb
fdivl
cmp
push
je
je
in
shrl
ja
mov
jo
aas
mov
lret
pop
lret
roll
bndldx
pop
or
icebp
pop
hlt
out
sub
dec
pop
stos
jl
jp
push
psubsw
cwtl
scas
ret
sahf
adc
pop
scas
shlb
ror
cmpsb
xor
push
inc
jecxz
sbb
test
shrb
fs
movsb
sbb
je
arpl
mov
shl
xor
fcmovnbe
fucomi
cmp
inc
xchg
sbb
fdivs
into
sbb
jns
add
arpl
lock
xchg
mov
pop
scas
jmp
repz
add
loope
add
mov
inc
pop
or
je
xor
shll
lods
sub
in
xchg
or
push
addr16
mov
inc
adc
or
add
jns
mov
rcrb
imul
xor
jne
inc
cmp
hlt
xor
testl
lahf
out
es
out
jb
mov
jbe
ret
scas
and
insb
and
mov
ret
outsb
mov
in
push
subl
sbb
push
dec
inc
orl
pop
repnz
adc
leave
jge
in
sbb
jge
in
jo
xlat
sbb
cmp
fistpl
mov
imul
ljmp
dec
dec
xchg
stc
adc
push
insl
and
push
pop
mov
dec
mov
lcall
lock
add
jne
divb
mov
fs
lock
insl
mov
add
jns
xor
add
int3
shll
xchg
clc
sub
jle
xor
dec
shl
pushf
test
push
test
fsubrl
cmpsl
jns
mov
push
mov
xor
sub
iret
push
ret
jne
xchg
mov
ja
testb
movsb
in
xchg
cmpl
sbb
daa
ficoml
dec
insb
test
cmc
lcall
in
jl
addr16
fs
into
aas
lcall
ss
mov
out
mov
inc
and
mov
mov
out
or
or
jl
mov
imul
insb
stos
pusha
fs
push
repnz
cmp
and
lods
sub
mov
xchg
orb
jne
xchg
or
cmc
cmc
inc
sub
or
stc
mov
xor
cmp
outsb
pop
xchg
sti
int3
and
mov
mov
dec
pusha
push
mov
repz
je
dec
mov
scas
sti
add
sbb
lahf
pop
pop
movsl
fstpt
mov
ja
fwait
out
xor
arpl
xlat
in
mov
iret
shld
xor
or
testb
call
out
mov
out
mul
pop
pop
sahf
dec
hlt
cmp
pop
and
mov
cmp
loope
out
push
push
bound
or
mov
pop
push
popa
out
adc
sub
je
add
sub
dec
fbld
loopne
inc
sub
and
push
stos
jge
dec
dec
mov
mov
ficomps
pop
int
cwtl
divb
mov
jbe
mov
cmp
mov
stc
and
and
aad
mov
sub
add
mov
jb
pop
mov
cmpsb
leave
dec
cmp
pop
or
xchg
push
ljmp
mov
cli
jns
cmp
insb
es
xor
arpl
jge
das
and
dec
shlb
stc
cld
sub
std
xchg
cli
dec
jmp
lret
lcall
pop
arpl
fadd
fldl
push
and
out
imul
cmpsl
in
cmpsl
aam
sub
cmp
xor
loope
jns
clc
mull
dec
lods
jb
mov
mov
dec
arpl
push
mov
xchg
push
push
jg
push
sahf
xchg
mov
mov
mov
adc
std
jg
clc
push
insl
arpl
dec
xor
mov
sbb
pop
or
xor
sahf
repz
out
je
scas
add
dec
jbe
xor
lret
jno
test
inc
fwait
cmp
pop
adcb
pop
jbe
pop
sahf
test
call
adc
out
lods
mov
inc
xor
and
push
in
ret
add
stc
and
scas
in
into
push
mov
cmp
sbb
sti
adc
inc
cmc
rolb
pop
add
scas
xor
roll
ljmp
fdivrs
or
leave
mov
popl
dec
pop
add
sub
cmpsl
jb
and
lret
loop
fidivl
xor
sbb
mov
aaa
mov
add
pusha
mov
or
roll
jne
in
cmovb
cs
xchg
inc
add
in
shll
test
enter
mull
aaa
test
std
inc
aam
add
adc
gs
xor
pop
dec
mov
xchg
mov
je
mov
dec
sub
rorb
scas
jg
and
xchg
xchg
or
ret
xor
fwait
xchg
dec
mov
loop
andb
sbb
jnp
dec
jle
mov
mov
mov
movsl
jecxz
in
ja
or
shl
inc
adc
stos
int3
mov
xchg
cmc
rcrb
out
fcomps
cmp
adc
mov
or
mov
mov
xor
sbb
mov
lcall
push
test
push
pop
inc
dec
adc
loope
pop
les
stos
sbb
add
jp
out
mov
or
inc
cmp
pushf
movsl
ret
movsb
ljmp
arpl
mov
sbb
loopne
xor
lretw
loope
push
repz
in
cmp
xchg
loope
mov
push
scas
xor
pop
outsb
pop
adc
sub
loop
sub
inc
shll
cld
shl
cld
jne
fucomip
sbb
jle
fs
pop
pushf
cmp
sarl
icebp
sub
inc
sub
stos
repz
scas
icebp
xor
fs
xor
cwtl
ret
fisttpll
ds
lods
and
inc
push
gs
jle
xchg
leave
popa
sbb
rolb
mov
ss
mov
std
adc
lock
mov
xchg
jne
fsub
outsl
xor
cmp
xchg
std
popa
and
rep
repz
and
lods
push
jge
push
dec
lds
xchg
cltd
out
pop
jmp
and
push
lea
sti
sub
fs
lock
sub
mov
enter
aas
and
sbb
jmp
mov
xchg
out
iret
xor
adc
insl
mov
jg
cltd
xchg
jle
mov
jmp
aas
stc
lcall
scas
stos
and
cli
cmp
outsl
push
add
out
mov
movsb
mov
outsb
mov
dec
cmp
cmpsl
lahf
int3
sub
mov
in
sbb
mov
inc
fs
out
shrb
sbb
mov
push
push
push
lods
mov
pushf
mov
popf
sbb
add
xchg
and
jne
lcall
mov
push
and
scas
mov
pop
sti
jbe
pusha
ret
mov
xor
jne
mov
test
in
push
sbb
sahf
mov
or
rcrb
jp
jns
subb
inc
push
out
mov
jnp
add
cmp
push
jo
and
adc
pop
in
push
movsl
ljmp
jne
sbb
cld
ficomps
or
and
sbb
dec
mov
mov
mov
dec
fmul
rorb
push
loop
test
xchg
imul
fistps
incl
cmpsl
pop
sub
push
adc
mov
std
jp
push
std
add
test
repz
mov
lods
jl
adc
pusha
js
xchg
outsl
repnz
push
or
call
sub
repz
nop
and
mov
dec
push
cmp
fmull
adc
adc
cld
cmpsl
in
add
inc
nop
pop
mov
add
loop
std
addr16
mov
push
pop
pop
sbb
movzbl
push
dec
sbb
xor
in
jb
sbb
adc
jb
xchg
iret
mov
dec
es
jmp
pop
inc
push
sbb
fisttpll
mov
pop
push
paddb
test
das
push
jp
lock
daa
xchg
aaa
mov
and
add
xor
jl
jp
and
mov
add
sbb
push
sti
push
out
cwtl
mov
jge
ds
pop
xchg
shr
sbb
sarb
outsb
stos
mov
jo
ret
pushf
mov
test
dec
sbb
popf
mov
jl
mov
xchg
add
cmp
dec
add
iret
jns
movl
mov
imul
inc
sbb
jp
xchg
sub
pusha
fsubp
mov
xor
push
jnp
cmp
jo
sarb
cmpsl
orl
out
cli
sub
outsb
repz
cmp
xor
xor
insb
mov
in
cmpb
xchg
idiv
pop
imul
inc
xchg
sub
jb
insb
cmpsl
ror
add
cmp
mov
cmovb
push
push
xor
ds
xchg
push
cmpsl
popf
mov
fs
outsb
mov
mov
push
adc
filds
add
scas
push
xchg
repnz
xchg
ljmp
testl
cmp
xchg
inc
adc
push
loop
mov
out
cmp
mov
pop
ret
mov
rcrl
dec
std
int
jp
in
bswap
mov
cmp
lcall
test
xor
repnz
arpl
out
push
test
xor
stc
ds
or
mov
xor
stos
xor
and
fmul
mov
adc
pop
pop
insl
mov
dec
jbe
movsl
fidivrl
dec
das
jno
inc
test
std
xor
xchg
adc
or
idivb
push
pop
pop
and
mov
mov
pop
xchg
andps
lea
dec
pushf
fwait
inc
sub
xchg
add
std
jbe
les
cmpb
dec
icebp
push
movsl
push
lea
leave
dec
xchg
aad
sub
dec
add
cmp
pusha
xchg
sub
or
pop
push
mov
cmpsl
movsl
push
ljmp
push
mov
dec
rcrl
enter
mov
shrl
add
fbld
pop
lods
iret
rorb
test
mov
mov
jmp
mov
or
aaa
call
stos
ror
icebp
imul
dec
mov
imul
aad
jp
add
mov
aam
loope
sbb
push
int3
xchg
inc
cld
mov
inc
repz
mov
adc
adc
je
sahf
or
adc
push
pop
data16
pop
outsl
psubw
nop
int
xchg
daa
stos
sahf
xor
movsb
xchg
out
or
adc
xchg
ror
jp
push
shll
mov
xchg
xchg
rorl
out
repz
pop
pop
sub
sub
xchg
mov
inc
movsl
push
cmpsb
sub
jl
mov
jbe
sub
sti
test
out
fwait
aam
or
adc
jecxz
or
es
mov
pop
mov
mov
or
outsb
mov
inc
dec
sub
mov
insl
cs
xchg
sub
push
pop
pushf
mov
cld
jle
in
or
jnp
inc
xchg
mov
outsb
bound
push
cltd
adc
xorb
mov
add
dec
stos
ja
jle
js
xchg
push
movsb
mov
mov
sub
sbb
inc
push
ljmp
pop
fldl
lcall
jmp
push
dec
test
int
sbb
aad
xor
int3
out
pushf
jg
mov
pop
int
das
out
inc
dec
test
rorb
mull
mov
inc
mov
mov
xor
clc
rol
jo
xchg
pop
mov
outsb
sub
adc
cmp
mulb
sub
jns
jle
inc
jnp
ss
sahf
shrl
jle
and
xchg
mov
dec
std
push
adc
lods
and
sub
fwait
push
mov
pop
movsb
mov
mov
sbb
pop
popa
enter
add
ds
loopne
ret
movsw
dec
xor
push
pushf
sub
fsubr
mov
inc
or
out
repnz
sbb
fsub
sbb
dec
shll
aam
fdiv
lods
das
in
push
arpl
inc
xchg
cmp
call
cmpb
fnstsw
mov
dec
dec
mov
lock
lock
int3
fnstcw
pop
push
ret
sub
pop
adc
xchg
test
mov
ljmp
iret
dec
out
in
nop
sbb
add
dec
pop
ja
sub
cwtl
mov
add
fistpl
clc
std
ljmp
in
cmp
out
add
rclb
jmp
adc
pusha
cmp
mov
je
cltd
or
test
xchg
add
scas
push
pop
inc
xlat
xor
dec
cmp
movsb
dec
and
sbb
jg
scas
dec
popa
and
mov
je
add
jno,pt
xchg
cs
sub
fcmovnu
shll
cmpsb
and
aam
jns
dec
push
ja
jne,pt
clc
ret
jmp
ret
and
jbe
push
xchg
sarl
ret
jne
mov
jne
fwait
jge
lret
xchg
mov
or
shl
and
pop
jmp
push
jnp
sub
enter
shl
les
cmp
dec
in
out
aam
or
mov
lds
sub
pop
xor
sbb
jne
mov
sub
ds
int3
iret
insl
push
sbb
xor
leave
arpl
inc
icebp
lret
mov
movsb
mov
adc
mov
xchg
loopne
xor
sub
pop
push
pop
lcall
push
cmpsl
or
pop
outsb
lea
test
mov
shlb
mov
pop
dec
xchg
mov
mov
jns
outsl
imul
or
cmp
lahf
lret
inc
push
or
xlat
mov
fadds
sbb
ret
jno
mov
add
idiv
mov
shlb
cmp
fiadds
rcrb
lahf
test
adc
mov
jecxz
addb
jg
mov
in
mov
inc
rol
not
mov
repnz
pop
inc
cwtl
or
or
lret
aam
push
repz
nop
dec
pop
mov
fstl
jne
imul
sbb
and
js
stos
arpl
xchg
pop
sub
jecxz
push
lock
dec
dec
mov
cmp
pop
cltd
rcr
mov
and
fimull
arpl
sbb
je
inc
pop
ret
das
mov
addb
int3
das
sub
adc
jecxz
xchg
mov
mov
stos
in
lock
outsb
shll
add
stos
fstps
push
cmp
or
addb
imul
ja
inc
sub
mov
fwait
sbb
lods
xchg
xor
repz
ljmp
mov
or
jl
sub
cmp
fimull
or
aad
xor
rol
jne
mov
sbb
push
sbb
insb
cwtl
inc
jb
jl
lcall
popa
rcrl
xor
test
data16
dec
jns
subb
je
je
shr
and
mov
push
dec
ret
in
test
adc
mov
out
in
xlat
mov
in
sbb
int
iret
sub
pop
mov
test
test
and
ret
rclw
lret
addr16
lahf
jp
push
lods
ss
cmp
stos
test
and
out
stos
not
push
loope
push
add
add
fsubrs
push
imul
in
mov
std
sub
vsubpd
aas
xor
push
ljmp
adc
lahf
pop
add
xchg
push
pop
or
pop
loope
sub
fs
dec
xor
pop
hlt
add
test
mov
es
sahf
mov
or
push
loopne
xchg
jae
mov
in
imul
sbb
sbb
mov
int3
scas
push
cmp
insl
pop
jb
or
xor
stos
js
xor
lds
out
and
outsb
movsb
dec
sbb
jne
sbb
lea
pop
in
cmp
pushf
cmpsb
das
xchg
test
subl
rolb
cmc
out
xchg
push
xor
add
fcmovne
jmp
xchg
stc
mov
dec
mov
mov
movsb
dec
dec
xchg
and
pop
push
cs
cmp
fbld
fdivrl
lret
test
or
sbbl
cmp
movsb
jnp
nop
mov
mov
pop
fdivr
js
das
enter
lahf
rcl
sbb
test
cmp
dec
adc
das
rcrl
shrb
lcall
cmpsb
rorl
dec
pusha
mov
pop
sub
jecxz
add
loopne
mov
inc
cmpsl
lods
sub
adc
cmp
loop
inc
pop
mov
outsl
mov
push
inc
das
push
jle
fisubs
xchg
push
mov
outsl
adc
data16
movlps
xor
or
sbb
enter
jb
jb
cmp
adc
jle
aas
cmp
fxch
add
call
dec
pop
aad
fistl
jle
loope
jne
gs
mov
push
subl
in
clc
iret
adc
dec
xchg
adc
loope
lcall
pop
and
xor
adc
sahf
pop
cmpb
pop
popf
and
jbe
stos
cwtl
ljmp
jns
stc
inc
dec
sbb
push
je
fdivl
pop
adc
popf
rcrb
mov
fnsave
adc
out
xchg
jge
mov
sahf
add
jl
ja
scas
into
cld
sub
push
je
adcl
adc
sbb
outsb
add
repz
or
mov
rcrl
daa
mov
mov
sahf
jb
scas
xor
mov
stc
or
jmp
out
es
mov
sbb
and
mov
sub
nop
jo
push
dec
push
mov
fnstenv
loope
insb
mov
and
repnz
pushf
add
in
in
daa
jge
mov
push
cli
inc
and
adc
js
xlat
je
xor
mov
dec
ljmp
in
xor
push
es
loop
mov
xchg
icebp
lods
mov
sub
cmpl
and
mov
or
sbbb
pop
mov
cld
dec
add
push
or
pop
xchg
and
inc
and
loope
inc
iret
xchg
fnsave
cld
push
ss
mov
dec
cli
mov
mov
ror
in
jb
or
fs
sbb
jge
sbb
movsl
sub
add
pop
fwait
cmc
movsl
jnp
push
mov
imul
pop
pop
inc
dec
dec
inc
orb
lahf
mov
sub
std
mov
stos
cs
mov
das
and
pushf
movsb
add
notl
or
dec
mov
sbb
and
or
jb
hlt
testl
lods
xor
inc
imul
xchg
hlt
mov
loope
js
inc
gs
shr
push
sbb
daa
xor
adcb
push
inc
enter
loop
cmpsl
mov
data16
sbb
ljmp
jmp
or
sbb
lods
fcmovnu
por
negl
leave
in
mov
call
sar
test
add
loopne
xchg
dec
jnp
mov
sbb
add
insb
mov
pusha
pop
gs
mov
mov
add
and
aad
xchg
xor
pop
and
scas
stos
pop
mov
push
dec
pop
clc
popf
icebp
ja
cmp
jb
inc
xchg
jbe
test
movlps
repz
das
arpl
and
mov
mov
ret
push
lahf
fbstp
je
out
sub
adc
enter
jno
xchg
pop
popf
in
jmp
push
cltd
xor
jp
scas
icebp
cs
sbb
test
lahf
mov
push
int
enter
outsb
dec
subl
mov
popaw
iret
and
int
and
addr16
push
out
sub
cs
mov
stos
pop
test
push
adc
mov
push
div
push
push
mov
adc
push
in
sarl
push
pop
mov
xchg
jbe
mov
ss
cltd
mov
loope
push
ds
repz
out
pop
js
outsb
pop
sub
shrb
stos
cs
and
fisttpl
jp
dec
jae
hlt
jle
mov
adc
sub
mov
mov
es
xchg
mov
jae
movsb
and
hlt
mov
pop
mov
cwtl
sahf
dec
int3
mov
jo
cltd
lret
loope
loope
xchg
push
and
shlb
push
sub
pop
cmp
rolb
lds
sbb
in
mov
mov
dec
sbb
sub
push
lcall
cmp
pop
mov
shrb
add
repz
sub
push
dec
nop
neg
jne
aas
cltd
repnz
movsb
push
sub
std
add
jmp
ret
sbb
rclb
mov
pop
xlat
test
inc
mov
push
or
lea
jmp
jmp
shrb
outsl
mov
jnp
loope
sbb
mov
into
orl
xchg
sbb
mov
imul
pop
push
int3
sub
mov
enter
add
adc
scas
add
movsb
mov
fadd
test
add
int
cmpsb
testb
ss
insl
mov
mov
fdivs
fmuls
pop
mov
arpl
out
in
mov
pop
cmpsl
pop
jp,pn
dec
push
sub
pop
inc
das
mov
fwait
dec
into
sub
es
popa
notb
adc
dec
xorb
cmpsl
rorb
dec
divl
push
lret
jne
mov
or
inc
xlat
loopne
cwtl
out
mov
outsb
cmc
data16
adc
adc
xorb
out
xchg
cltd
scas
imul
mov
jb
gs
rclb
pop
sbb
test
sub
xor
ljmp
notb
dec
mov
fstps
adc
and
push
mov
add
push
mov
xor
out
fmull
xchg
stc
xchg
mov
inc
add
outsb
adc
sub
std
inc
imul
push
ljmpw
add
add
adc
cld
cmp
xchg
pop
pop
mov
xchg
jns
addb
push
cmp
dec
in
sarb
push
xchg
data16
and
rolb
pop
out
ret
mov
clc
cwtl
pop
insb
jge
ret
cld
ss
mov
sbb
mov
imul
lret
push
and
hlt
push
fisubl
jbe
lret
out
push
cmpsl
jne
xchg
in
stc
cld
mov
pop
or
hlt
cmpsb
xor
sub
push
jo
call
xlat
mov
test
cmp
add
rclb
stc
sub
sbb
in
pop
movsb
lds
or
pop
lock
call
test
mov
ret
icebp
pop
clc
loop
or
cmp
push
and
mov
xor
dec
arpl
stc
and
stc
lret
shr
adc
or
xor
dec
fcom
call
lds
sbb
mov
xor
xchg
sbb
mov
xchg
pop
cmp
cli
loop
lret
mov
call
mov
mov
mov
addr16
sub
jae
jnp
icebp
cli
enter
lcall
ds
mov
inc
in
lock
in
into
popf
cli
adc
mov
test
xorl
and
divb
pminsw
xchg
roll
xchg
fidivs
and
out
mov
je
inc
pop
xor
cmpsb
lcall
stos
outsb
adc
jo
cmp
mov
js
pop
stc
push
arpl
out
cli
adc
loop
rcrb
int3
mov
sub
push
mov
jge
cmp
negb
bound
stos
jg
sub
clc
call
cmp
pop
mov
int
mov
cld
pusha
scas
cmp
xchg
xor
cmpsb
adc
xchg
popa
mov
mov
fwait
daa
sbbb
and
cmp
sub
inc
outsl
and
cmp
mov
lods
cli
insb
movsl
fisttpll
daa
adc
repz
ja
nop
bound
inc
shlb
cmp
push
mov
dec
test
rclb
mov
imul
mov
cli
pop
jg
mov
dec
push
mov
push
insl
or
inc
ss
fcmovnb
adc
shlb
andb
cmc
jbe
and
sbb
stos
inc
mov
shrl
lds
mov
mov
cmp
jns
xchg
imul
or
xchg
ja
sbb
add
mov
aad
pop
mov
xchg
std
inc
mov
in
adc
shlb
lret
pop
lret
out
out
mov
popa
fsubs
sub
fwait
and
lcall
inc
int
subb
cmp
and
inc
fidivl
inc
loopne
jo
sub
inc
mov
mov
repnz
mov
cmp
jo
loop
push
dec
fmulp
sbb
mov
cwtl
popa
push
inc
andb
in
clc
push
mov
mov
push
and
dec
negb
imul
xchg
ja
fbstp
xor
adc
in
inc
jp
push
mov
inc
push
add
insl
lcall
outsb
repnz
aam
mov
push
insb
das
leave
loopne
insl
inc
repnz
dec
mov
add
mov
jne
dec
push
xor
ds
inc
out
stos
out
adc
into
inc
jb
adc
or
push
adc
xor
or
int3
xchg
int
roll
lcall
mov
in
dec
fsubp
mov
jbe
test
popf
inc
and
shll
dec
inc
out
popa
dec
scas
jae
mov
mov
inc
enter
mov
add
sbb
inc
sub
or
mov
push
or
lcall
or
aaa
mov
rolb
push
add
xchg
fcoml
push
or
xor
scas
inc
cmp
mov
mov
xchg
xlat
push
inc
mov
cmp
notl
cwtl
sbb
add
mov
jns
addr16
sbb
dec
jno
dec
pop
cltd
cmp
xchg
mov
fdivrs
xchg
loop
inc
and
cmp
mov
out
ja
imul
insb
inc
test
and
test
popf
sti
call
sbb
jb
pop
cli
into
cmp
mov
cmp
out
add
aas
gs
aad
lods
sti
lods
stc
jb
sbb
es
ret
stos
js
dec
sti
cmpsl
scas
cmc
cmp
mov
jge
cwtl
cmp
or
test
pop
insb
mov
jmp
mov
insl
push
cmp
adc
adc
xchg
adc
push
mov
jmp
or
sub
or
add
decb
imul
and
daa
ja
mov
and
ds
fnstcw
in
or
or
inc
popa
fs
dec
xchg
shlb
cld
fcmovnbe
mov
int3
jae
add
js
push
nop
in
pop
push
or
pushf
mov
daa
stos
test
sbb
fisttps
hlt
loopne
rorb
cltd
and
push
bound
pop
push
jae
mov
repz
inc
and
test
test
movsl
jnp
sbb
faddl
stos
pop
bound
jno
pop
outsl
loope
mov
lea
movsl
cmp
mov
dec
in
adc
rcrl
aad
rcl
js
inc
cmp
stos
or
repz
mov
add
stos
mov
xor
jecxz
dec
inc
sub
mov
pop
and
adc
repnz
ret
xor
fld
mov
push
lea
sbbb
insl
out
adc
push
mov
in
add
stos
lcall
fisubl
pushf
inc
push
test
add
add
test
mov
jmp
icebp
stos
ret
loope
mov
dec
jl
xor
lahf
into
fwait
inc
scas
and
xchg
out
mov
mov
lcall
adc
jmp
jns
enter
je
cmp
leave
pop
loop
shl
jle
lods
les
lock
jno
or
jmp
sahf
adc
rclb
sub
jecxz
outsb
test
enter
inc
inc
scas
sub
add
sbb
adc
hlt
in
movb
negb
sbb
insb
push
pop
test
stos
iret
dec
jp
inc
and
pop
pop
int3
or
fisttpll
aad
inc
test
nop
adcb
jnp
fdivrl
or
aam
jge
dec
outsb
mov
cmp
mov
inc
xor
mov
adc
add
push
int3
xor
sub
fisubrl
and
sbb
fidivrs
imull
lret
pop
fisttpll
jle
rcrl
pop
addr16
xorb
xchg
push
ss
pop
add
sub
lods
ret
dec
pop
into
imull
dec
push
pushf
or
mov
test
push
xor
ss
mov
data16
adc
mov
xor
test
shl
shrl
sub
inc
insb
in
ja
cmpl
sub
test
je
jbe
push
fimuls
aad
mov
sub
loopne
std
das
jb
or
imul
lret
and
data16
jo
add
test
pop
out
out
daa
cmpsl
aaa
stc
imul
jnp
xor
loopne
adc
xchg
sbb
fcmovnb
roll
pop
int
or
ja
inc
in
cltd
jle
mov
add
out
bt
jb
hlt
mov
lock
adc
jge
push
popfw
aas
ja
ret
fldt
mov
inc
jge
or
pop
add
pop
mov
test
shlb
addl
and
xlat
mov
pop
imul
adcl
push
xchg
mov
xchg
dec
lcall
test
and
push
xchg
test
inc
in
popa
inc
xchg
sbb
sti
dec
ret
ret
lock
loopne
adc
int
or
in
imul
mov
std
insb
sub
push
pushf
push
mov
push
sub
insb
pop
icebp
out
sbb
int3
mov
and
cs
int3
int3
fwait
cltd
movsb
ss
fnstsw
sarl
repz
leave
xchg
ror
clc
jae
jnp
insb
mov
and
dec
pop
jmp
or
test
jns
bound
mov
call
aas
movsl
cltd
dec
dec
mov
dec
jp
jle
cwtl
int
ss
add
push
loope
sbb
pop
jl
mov
fchs
mov
fsub
mov
xchg
subb
sbb
pop
mov
das
fimuls
divl
rcl
fmull
mov
jl
dec
mov
js
xchg
mov
push
adc
pop
jbe
jle
sbb
add
or
jp
lock
fcomip
lret
dec
daa
inc
nop
fucom
cmp
fbld
mov
loope
dec
jbe
insl
adc
mov
mov
sub
push
stos
lahf
mov
leave
mov
icebp
movsl
jp
adc
enterw
inc
mov
push
jns
push
jmp
xchg
aaa
sarb
das
adc
sbb
mov
scas
sub
mov
int
jmp
out
sub
sahf
push
and
sub
mov
faddl
or
fiadds
xchg
or
and
sub
cmp
add
sbb
jge
xchg
xchg
and
mov
adc
or
scas
and
and
push
dec
lds
stc
loope
insb
and
inc
mov
cwtl
out
and
mov
adc
cld
xor
pop
imul
add
inc
mov
aam
das
fsubp
xor
jg
jnp
inc
adc
jbe
bnd
inc
repnz
arpl
fistl
pop
int
out
lods
adc
pop
xchg
cwtl
insl
pop
lret
cmpsb
sub
mov
push
mov
jl
divl
cwtl
pop
popf
inc
sbb
nop
jo
pusha
sbb
insb
addr16
in
jbe
or
adc
cmp
jae
out
sti
pop
mov
push
sub
cmp
mov
mov
jp
mov
adc
mov
test
sub
out
jne
jnp
sub
jae
dec
sbb
sub
imul
mov
xchg
mov
fmull
ficompl
mov
jbe
cmp
mov
add
imull
cmp
inc
js
jb
mov
jnp
bswap
test
int
push
ud2
inc
sbb
fwait
in
sub
sbb
jge
sbb
inc
push
inc
mov
jbe
clc
hlt
in
or
dec
xor
stos
daa
int
rorl
sub
lods
imul
mov
daa
xchg
popa
mov
jge
sub
push
pop
mov
outsl
pop
aad
or
ds
lock
addr16
aam
rcrl
or
hlt
test
cmp
loopne
imul
out
dec
or
jge
push
mov
sub
les
rolb
lret
movsl
int
jg
xor
adcb
cmpsl
xchg
jb
jbe
iret
adc
xlat
or
mov
popa
in
pop
out
sbb
mov
sbb
ds
nop
push
divb
cli
xor
fcom
in
stos
dec
ljmp
mov
rcll
mov
xchg
shlb
call
js
cmpl
std
mov
jb
add
or
adc
mov
jne
mov
add
lds
and
aas
es
popa
jno
mov
push
into
cmp
xchg
cmp
mov
pop
scas
fistl
jne
pop
clc
mov
leave
loope
sbb
mov
jg
sbb
fmuls
loopne
pusha
mov
lods
mov
ljmp
stos
call
loop
adc
outsb
xchg
mov
cld
xchg
dec
dec
xchg
or
lea
sbb
dec
ret
pop
jg
loope
aaa
mov
mov
or
lcall
outsl
ret
dec
mull
scas
mov
fisubrs
mov
cmp
xor
and
stos
pop
mov
pop
loope
mov
dec
leave
jle
ret
adc
xor
mov
lock
xchg
test
aaa
mov
aad
inc
fldcw
sub
mov
fsubrs
mov
test
xchg
mov
add
jbe
push
sarb
mov
jle
and
inc
and
xor
test
inc
push
mov
push
jne
icebp
push
loopne
sub
test
in
fs
fistpll
jae
mov
enter
test
movsb
and
out
testb
loope
cmp
in
cmp
outsl
sub
mov
adc
das
rorb
push
enter
cmp
mov
out
cmp
cmpsb
outsb
sub
in
pusha
mov
sbb
cwtl
dec
add
in
mov
ds
repnz
sub
cmp
xchg
dec
mov
jae
and
aam
mov
lods
xlat
and
inc
push
les
lcall
int3
add
push
sub
inc
sar
xor
pop
dec
outsl
jae
xor
cmovne
sar
out
fldl
push
sti
pop
loope
cmp
std
outsb
loop
mov
cmp
scas
popf
mov
add
jb
mov
fisttpl
cld
aam
xchg
mov
and
pusha
dec
rol
pop
shlb
or
dec
push
jae
pop
and
in
pop
cmc
push
mov
stc
push
pop
mov
pop
push
mov
cmpsb
mov
jnp
mov
mov
sub
in
pop
jecxz
mov
xor
mov
xor
push
xor
cmpsl
mov
iret
mov
call
outsl
fmull
push
inc
xchg
fisttps
sub
dec
ds
and
mov
mov
jmp
jl
das
and
ffree
cltd
sbb
lcall
int3
rcrb
mov
dec
mov
push
test
sbb
add
pop
dec
adc
jle
ret
scas
fsubs
jmp
dec
mov
xor
outsl
decl
jg
push
lods
add
les
sbb
std
xlat
cld
or
cmpsl
jg
xchg
jb
or
mov
adcl
jmp
mov
in
push
mov
fdivrs
rclb
faddl
lods
xchg
fld1
or
xchg
push
mov
enter
cmp
mull
stos
call
ja
jnp
js
mov
outsb
addr16
clc
fsubrl
out
pop
mov
jle
inc
popf
punpcklwd
push
aas
aas
inc
jae
test
inc
test
pop
push
fildll
test
idivb
ja
and
das
int3
in
es
je
out
mov
jae
pop
and
stc
ror
sbb
leave
pusha
in
push
loopne
and
pop
inc
push
inc
xor
mov
pop
and
dec
ret
shrl
out
push
outsl
stos
aam
gs
cmp
or
sbb
cmc
sub
out
pop
cmp
loope
xor
adc
adc
jne
adc
in
test
stc
cmp
in
mov
inc
sub
dec
xchg
pop
mov
rcrl
cmc
pop
add
sbb
cli
sbb
adc
fwait
mov
leave
out
pop
test
pop
dec
addl
sbb
scas
jmp
cmpsl
pop
xchg
or
add
pushf
pushf
lcall
pop
dec
ret
jnp
xchg
idivl
in
pop
pop
mov
mov
add
inc
clc
cmpxchg
mov
inc
jecxz
inc
and
sbb
mov
int
leave
xchg
sub
sub
cld
jg,pt
cmp
int3
pop
cli
xor
mov
mov
add
insb
enter
pop
push
lock
jne
xor
cmc
je
out
mov
loop
gs
inc
jnp
loopne
repnz
mov
ret
test
pop
fs
xchg
jae
jg
inc
jnp
fidivrl
jp
mov
bound
pop
lcall
mov
in
push
xor
or
cmc
adc
pop
mov
fwait
stos
jmp
xor
jnp
push
adc
mov
out
mov
addr16
nop
in
fdiv
int3
sub
test
push
js
mulb
xchg
pop
outsl
pop
jmp
mov
sbb
jmp
test
or
jge
jb
xor
loope
das
inc
cli
add
push
ja
lods
adc
stos
in
pusha
daa
sub
out
popa
cli
jae
adc
push
mov
popa
jae
xchg
hlt
nop
sahf
dec
insl
adc
pop
mov
mov
fucomp
int3
mov
sbb
lea
rcrl
fs
jbe
adcb
lds
in
xchg
sub
add
lods
lahf
loop
jle
sti
loop
add
test
imul
or
dec
xchg
mov
mov
insb
call
and
lea
lcall
mov
inc
sub
cmpsl
test
scas
or
xchg
sti
sbb
add
call
popf
pop
in
into
test
inc
push
cmc
cwtl
into
jl
pop
add
dec
iret
hlt
add
cmovp
sar
sbb
out
sbb
int
cmp
mov
push
jae
or
mov
add
fcomp
out
jmp
rclb
mov
ds
xlat
push
dec
cltd
stos
or
push
ret
int3
mov
mov
adc
inc
jae
pusha
loope
and
inc
aad
adc
inc
fisttpl
push
negb
rol
mulb
mov
and
sbb
shlb
xor
shll
outsb
sbb
pop
dec
mov
dec
dec
cmpsl
mov
inc
bound
push
imull
mov
mov
out
xchg
aas
mov
lret
mov
pop
int3
js
and
int3
lcall
sub
lea
mov
add
xor
ret
leave
inc
cmc
add
das
andl
mov
shll
dec
fistps
mov
dec
sub
lea
or
dec
pop
pop
pop
dec
cmpsb
subl
jecxz
daa
mov
mov
leave
jecxz
cmpsl
mov
mov
arpl
cld
in
pop
pusha
sbb
int3
rep
stos
add
mov
inc
ret
jecxz
repz
jnp
lea
fwait
xor
out
inc
loop
ljmp
jmp
xchg
imul
fwait
subl
jmp
cltd
rorb
add
fstps
adc
stc
mov
cmc
inc
imul
loop
jle
shlb
negl
out
xchg
adc
cmpsl
add
pop
jg
ds
cmpb
pop
lcall
mov
sbbl
popf
loope
or
jg
or
adc
dec
mov
dec
and
cmp
lods
cltd
pop
sub
int
mov
pop
rol
data16
pop
jb
cltd
mov
push
fildl
test
andb
movl
pop
rclb
mov
popf
insb
xchg
push
nop
xor
cmp
sub
dec
push
xchg
subb
in
adc
cmpsb
or
scas
add
inc
jmp
cmp
or
idivb
mov
lea
add
push
insb
sarb
dec
addl
xor
dec
adc
jne
lods
xchg
mov
cmp
jno
outsl
jmp
mov
rolb
cli
je
mov
and
jno
imul
mov
dec
loope
scas
roll
out
mov
das
xchg
pop
mov
lahf
imul
popf
or
dec
mov
daa
rolb
movsb
and
cmp
lahf
xchg
jmp
out
sub
dec
fbld
mov
xor
push
loopne
or
sahf
mov
insb
fs
adc
cmp
enter
sub
outsl
enter
inc
loop
in
mov
adc
popf
add
incl
jbe
push
insb
dec
add
mov
and
add
push
cltd
inc
lahf
mov
add
sti
add
lret
aad
push
cmpsb
jno
inc
add
dec
loopne
rcrl
sbb
cltd
xchg
fistl
and
pop
push
xchg
mov
jge
xchg
insl
jns
push
adc
aaa
inc
jle
loopne
cmp
je
xchg
sti
xchg
mov
dec
sub
xchg
loopne
cmp
outsl
cltd
jge
aaa
scas
and
aaa
push
aas
insb
sar
dec
adc
jbe
push
and
inc
sti
cwtl
dec
out
push
mov
lret
sti
popf
xchg
mov
inc
cmp
cwtl
push
call
inc
and
arpl
stos
jmp
adc
fwait
adc
xor
nop
negl
sub
repz
mulb
inc
in
in
int3
lret
cmp
xlat
mov
imul
out
enter
out
xor
out
addb
adc
jbe
test
arpl
fsub
mov
push
stc
js
inc
enter
test
jmp
fsubrs
out
add
loope
dec
and
sbb
andb
xchg
popf
int
shl
or
xchg
add
fwait
sbb
fwait
mov
rcrl
fwait
inc
mov
push
xor
fs
jns
push
lret
mov
enter
mov
mov
femms
outsl
notl
xlat
lea
sbb
jns
movsl
leave
call
dec
aas
xchg
and
insb
lock
sub
adc
out
ret
pop
outsb
sbb
cmp
xchg
les
inc
xor
fidivl
fsub
push
jmp
int
stc
mov
push
lahf
call
push
push
pop
out
mov
adc
sub
xchg
inc
push
loop
sti
dec
mov
enter
mov
pop
inc
dec
sbb
sbb
mov
daa
mov
fnsave
push
mov
ss
mov
mov
cmp
arpl
out
scas
jp
decl
mov
lcall
sets
ss
jbe
jg
test
inc
push
out
fbstp
xor
push
repnz
test
daa
sbb
call
lret
jg
fwait
dec
rcll
insb
out
cmp
sarb
mov
mov
rclb
jae
sub
mov
cltd
jmp
dec
repnz
jle
inc
and
pop
inc
icebp
xchg
test
adc
jns
xchg
ror
or
stc
xchg
fldenv
sbb
aas
xor
xchg
scas
add
xor
inc
mov
lret
pop
add
add
subb
sbb
adc
cmpsl
adc
imul
xlat
js
add
add
jg
sbb
orl
in
inc
daa
push
mov
lcall
in
int
add
sub
dec
in
dec
inc
inc
jp
mov
fnstsw
std
push
sarl
mov
push
xor
rorl
mov
movsl
enter
popf
jno
ss
mov
aam
in
push
loop
lahf
icebp
scas
pushf
ja
out
insb
test
shlb
mov
adc
cmc
sbb
jo
jne
inc
fbld
clc
out
push
xor
lds
push
sub
mov
dec
push
mov
mov
notb
inc
mov
test
test
add
rcrb
inc
xor
adc
mov
mov
xor
daa
jmp
jmp
not
ds
pop
gs
gs
je
sbb
mov
mov
mov
pop
pushf
insl
stos
ss
xor
inc
aaa
imul
push
and
mov
inc
lds
pop
jne
xor
cmp
xchg
rclb
sbb
push
dec
call
add
dec
pushf
xchg
shrb
pop
pop
sub
add
lea
cld
test
adc
xor
loope
in
or
fwait
mov
mov
lcall
sarb
cmc
adc
mov
xchg
mov
shrl
mov
adcb
mov
test
jns
push
bound
flds
jecxz
xor
push
sahf
xor
dec
pushf
out
test
imul
mov
dec
insb
or
adc
loope
loope
icebp
scas
insl
add
cmp
loopne
fisubs
ljmp
xchg
stos
sub
pop
outsb
fiadds
xorb
lcall
mov
sbb
jle
pop
js
xchg
lcall
cmpsb
sub
lret
or
mov
mov
sarb
add
adc
lods
adc
pop
xor
fs
hlt
div
in
popf
sbb
adc
pop
pop
mov
out
adc
sarb
insl
ljmp
jns
sub
leave
or
dec
insl
mov
cmp
js
stos
iret
mov
aaa
sbb
add
mov
push
jnp
pop
fs
in
loope
sub
gs
mov
mov
xchg
sahf
out
pop
or
cmp
add
dec
test
or
mov
test
and
mov
mov
loope
sahf
lea
mov
rclb
out
sbb
mov
cmpsb
pop
fisubl
das
sahf
jbe
xorl
jae
pop
mov
lock
popf
and
fwait
adc
mov
or
and
inc
xorl
mov
cmp
mov
stc
and
push
xchg
inc
dec
lret
imul
or
jg
inc
cs
lods
xchg
in
mov
mov
push
outsl
clc
popa
push
adc
sub
sbb
sub
fs
mov
adc
out
mov
jns
lret
imul
loopne
cmpsl
loopne
lods
mov
fbstp
fucom
test
mov
push
fisubl
and
das
in
jg
gs
jmp
test
xor
mov
test
in
fiaddl
dec
mov
test
mov
sbb
addr16
leave
mov
jecxz
cmp
xchg
mov
aas
negl
lods
inc
mov
ss
xchg
test
push
lcall
lods
push
mov
jp
js
je
shrl
pop
dec
and
insb
sub
add
sbbl
inc
outsb
inc
or
mov
inc
fsubs
jb
or
imul
movsl
sbb
hlt
shrl
aam
in
pop
lahf
stc
fdivrl
or
mov
push
or
cld
sbb
testl
sbb
int
rolb
test
fidivrl
cmp
in
fdivrs
mov
pop
add
push
js
or
pushf
xchg
ficoms
adc
jmp
xchg
or
roll
fadd
es
pop
test
dec
push
fs
ja
xor
aaa
lods
sbb
fstl
test
inc
jmp
xchg
leave
dec
icebp
pop
in
cli
popa
in
loope
add
sub
pop
and
xlat
jmp
add
mov
out
leave
outsl
in
hlt
sub
jp
cmp
push
or
shr
push
sahf
es
cmp
or
out
inc
cwtl
cmp
mov
xor
dec
roll
in
sub
mov
push
mov
fsubrl
mov
gs
or
push
cmp
or
mov
lods
imul
inc
shrb
dec
les
js
sbb
movsb
mov
xor
sbb
dec
in
push
jmp
lods
inc
xchg
push
mov
xor
xor
decb
inc
rorl
out
pop
jae
faddl
popa
test
pop
out
out
mov
adc
pop
je
mov
pop
inc
in
fmul
out
xor
mov
xlat
sbbl
cwtl
in
xchg
lretw
push
xor
cwtl
sbb
sub
gs
stos
push
in
sub
in
xchg
pop
and
pop
push
rcll
fbld
dec
mov
pushf
loop
bound
sub
fnsave
add
fs
aaa
mov
pop
jns
or
gs
call
insb
rorb
movsb
mov
int3
or
xor
jle
push
mov
call
sub
jl
mov
cwtl
pop
lcall
sbb
rcl
cmp
pop
sahf
fmuls
inc
sbb
inc
push
jmp
punpckhdq
lret
lret
sbb
popf
cs
pslld
push
inc
dec
xchg
call
insl
adc
add
jmp
push
sub
scas
xchg
mov
lods
jl
rolb
dec
test
dec
les
stc
icebp
frstor
and
adc
imul
aad
sarb
jnp
fimull
or
adc
cmp
fcompl
out
sahf
mov
add
lock
cmpsw
js
pop
dec
pop
dec
push
jge
js
movsb
pop
xchg
push
jecxz
fmull
pop
call
pop
or
dec
lods
xorb
and
xor
push
cmp
jmp
ljmp
fsubl
leave
mov
push
jecxz
inc
ljmp
jp
ljmp
mov
mov
rol
mov
jle
jmp
mov
sub
loopne
int3
jae
cmp
push
xchg
cmp
idivl
in
les
adcb
jnp
repz
sbb
arpl
pop
lret
xchg
xor
scas
stc
jne
int3
out
inc
loope
dec
pop
arpl
out
jbe
inc
int3
outsl
fnstsw
movsl
sub
insl
call
cwtl
ret
repz
jns
fstpt
loop
push
pusha
mov
xor
or
jle
jae
jnp
shl
jecxz
push
cwtl
bound
mov
adc
mov
pop
dec
mov
lret
ret
popa
insb
fistl
sbb
arpl
and
add
not
pushf
mov
dec
cmovge
xchg
add
stos
ljmp
xlat
xor
addl
addr16
jnp
lea
xor
pop
movsl
pop
mov
rcrb
stc
rol
and
pop
shll
cwtl
adc
cmp
scas
addr16
icebp
out
sbb
xor
mov
fdivl
addl
mov
dec
dec
lret
pushf
jge
outsl
jns
insb
je
mov
and
pushf
outsb
sbb
pop
cwtl
inc
arpl
icebp
mov
dec
jne
mov
lods
out
or
data16
and
jge
push
pop
repz
mov
mov
arpl
int3
nop
or
xchg
enter
inc
dec
cli
loope
adc
sbb
hlt
add
loope
ljmp
push
or
iret
mov
fsubrs
je
push
adc
cltd
pop
sbb
or
push
addr16
insb
lcall
roll
push
push
es
sbb
repnz
xchg
mov
adc
xor
xor
out
pop
loop
xchg
cmp
cwtl
sbb
hlt
push
rorl
push
xor
negl
sbb
js
fwait
xlat
lret
xor
lcall
add
adc
out
aad
xor
jg
lahf
fs
or
in
xlat
mov
fnstenv
pushf
xor
jmp
fldenv
mov
or
jbe
sub
mov
outsl
imul
sbb
int3
pop
jp
mov
mov
mov
xchg
or
add
cld
lock
rcll
push
jl
imul
scas
xchg
lods
xor
inc
mov
roll
push
testb
adc
icebp
je
sub
push
adc
add
xchg
cmp
add
lret
push
ret
fidivs
cmp
repz
and
dec
add
jmp
mov
mov
mov
fwait
insb
shlb
xchg
stos
or
cmp
mov
shr
mov
sub
aam
push
gs
fidivl
or
pop
jbe
adc
xchg
arpl
fsubs
shrl
jae
imul
icebp
aas
cmp
pop
inc
adc
mov
cmc
das
sub
xchg
mov
add
mov
sbb
fsts
and
cli
lods
cwtl
ficompl
push
sbb
arpl
or
jns
jmp
cmp
cmp
sti
sbb
push
mov
dec
jmp
add
push
fstps
sbb
cmp
cmp
push
stc
mov
sbb
nop
or
repz
call
stos
js
push
js
or
out
push
sti
insl
test
and
rcrb
push
pushf
jbe
xor
je
ljmp
movsb
xor
lods
cmp
fsts
gs
lret
pop
jg
dec
movsl
or
mov
or
cmc
aaa
call
dec
test
jecxz
dec
dec
es
lea
sub
stos
xlat
cmp
jl
jp
orb
dec
int
data16
rcrb
add
sbb
push
pop
pop
aad
into
jle
jl
jle
pop
push
lret
into
cwtl
scas
jmp
jg
jl
jbe
pop
ds
fbstp
test
xchg
mov
adc
mov
call
xchg
sub
mov
mov
lret
push
aas
sahf
lret
sub
leave
dec
add
das
cmpsl
daa
pop
int3
pop
shr
adc
nop
adc
xchg
test
cmp
mov
jle
jne
sub
shrl
rcrb
jle
sub
shl
cld
cwtl
lea
arpl
mov
cmp
inc
mov
mov
sbb
je
aas
out
in
add
mov
or
fprem1
mov
sub
mov
inc
icebp
xchg
lock
jg
daa
les
sub
ret
add
gs
lea
es
dec
in
xor
push
sbb
inc
dec
insb
rorl
dec
mov
gs
notb
mov
jl
lret
test
cmp
out
jo
test
stc
mov
jl
push
adcb
stos
ret
data16
dec
add
mov
xchg
gs
jb
push
lods
jbe
push
out
adc
pop
out
xchg
fdiv
push
int
dec
pop
mov
nop
inc
shll
jle
mov
cmp
stos
xchg
mov
pop
jae
int3
in
xchg
adcl
push
pop
sub
loopne
shr
fsin
mov
mov
dec
cmp
mov
rolb
aad
je
test
enter
insl
add
and
jle
std
cmpsb
shrb
pop
push
jnp
mov
lock
mov
shlb
sub
xor
roll
cmovns
pandn
mov
add
std
les
in
popa
std
int3
popl
mov
sbb
or
pop
int
push
test
aaa
xorl
cmp
popl
bound
add
jb
fisttps
xchg
lea
imul
dec
sub
fildl
pusha
int3
fmull
jbe
cmp
or
xchg
in
push
leave
aas
repnz
pop
or
mov
push
lcall
dec
lds
popf
pop
lods
dec
stos
xor
scas
addr16
pop
pop
push
jno
leave
push
lock
andb
mov
xchg
sub
insl
mov
jns
mov
mov
popa
jmp
xor
dec
addb
loope
add
fsubl
sbb
xchg
sarl
adc
pusha
add
repz
jmp
and
jno
sbb
loopne
inc
inc
cmp
in
shl
jg
addr16
pushl
cmp
fadd
sub
fsubrs
sbb
popf
mov
xchg
insl
lods
punpckldq
lock
ljmp
add
sarl
pop
add
rcll
in
testl
mov
mov
lret
lods
out
orb
inc
push
stc
pop
lret
cmpsb
jb
pop
mov
out
cmp
scas
mov
je
lods
mov
mov
bswap
decl
mov
shrl
dec
sub
xchg
xchg
xchg
mov
and
loop
clc
iret
jb
mov
mov
dec
inc
adc
cld
iret
jp
sbb
mov
sbb
push
movl
and
inc
jg
push
xor
pop
stc
std
fsubl
sbb
int3
popa
cld
or
mov
lea
sbb
push
xor
cmp
jo
data16
sub
pop
pop
js
cmp
xchg
dec
mov
cmpb
outsl
dec
lret
outsb
inc
mov
andl
cwtl
std
or
jne
pusha
sbb
bnd
outsb
mov
add
mov
test
ja
jmp
insb
jmp
sbb
pop
in
inc
mov
leave
test
in
orb
cwtl
fidivs
test
adc
xchg
clc
sbb
fsubrl
lcall
orb
xchg
insl
dec
mov
push
push
lods
in
push
adc
fsubrs
scas
mov
mul
mov
into
and
arpl
testb
xor
or
andb
push
aad
ja
mov
push
bound
mov
lcall
dec
les
gs
leave
or
clc
repnz
test
mov
clc
xor
fstps
mov
xchg
sahf
loope
loop
inc
aam
mov
andb
pop
inc
les
repnz
fnstsw
popf
adc
xor
pop
or
test
pop
add
or
insb
pusha
mov
pop
mov
repz
mov
fistpl
pop
cmovb
movsb
cmc
rclb
push
sub
mov
pusha
push
popf
cmp
loopne
aaa
cmp
push
ljmp
out
fmuls
jns
mov
sub
xchg
out
in
out
out
cwtl
repnz
dec
pop
test
add
nop
pop
icebp
into
xchg
mov
roll
add
jp
mov
mov
icebp
mov
mov
les
xor
inc
sub
sarb
inc
or
cmp
xor
sub
sub
fwait
adc
fwait
iret
pop
aas
fisttpl
inc
into
pop
mov
aas
dec
mov
xchg
inc
mov
fmul
test
fldlg2
xchg
adc
or
movsb
out
add
je
inc
adc
repnz
cwtl
insb
pop
push
rcll
add
or
scas
inc
movsb
clc
xor
push
push
cld
and
push
loop
pop
or
sub
adc
leave
fcmovne
hlt
and
xchg
mov
ficompl
adc
clc
in
js
jns
call
clc
es
pop
cmpsb
scas
pushf
jae
jp
stos
xor
sub
stos
or
adc
xchg
or
add
cmpsl
push
out
scas
mov
xor
adc
lock
pop
test
mov
sub
mov
or
pushw
enter
dec
addr16
js
ror
testb
jnp
test
sub
rorl
sarb
repnz
pop
cli
bound
add
cmpsl
sbb
jnp
mov
mov
outsl
fwait
pop
shr
mov
mov
sbb
mov
add
aad
xlat
push
fidivl
out
push
mov
or
inc
fnstenv
and
sub
rorb
orb
inc
out
data16
fs
sub
ljmp
std
test
insb
fwait
ds
adc
in
daa
lods
mov
shrl
lods
jbe
cmp
mov
adc
out
test
jb
pop
lret
sbb
pop
push
adc
outsb
ds
mov
xor
jns
xchg
cs
mov
push
ficoml
cli
jge
out
popa
andps
fmulp
in
les
arpl
movsl
adc
daa
aad
and
adc
nop
clc
add
out
into
cmp
xchg
pop
das
sbb
mov
adcl
test
xchg
mov
dec
pop
movsb
jns
std
fiadds
inc
mov
imul
jg
lods
mov
ds
loop
das
push
aas
sbb
cmp
mov
mov
mov
aaa
aad
xchg
pusha
pop
adc
inc
addl
and
lret
or
repnz
push
jp
cmpsl
add
sahf
mov
fnstsw
dec
xchg
ss
rclb
dec
mov
or
jle
pusha
xchg
pop
cs
aam
popf
imul
aaa
test
jecxz
lods
jmp
xchg
push
xor
bound
pop
ss
addb
or
loopne
popa
xchg
mov
ljmp
gs
sub
and
movsb
cs
pushf
mov
pop
push
adc
adc
fidivl
lret
mov
ud1
xchg
dec
dec
out
xchg
mov
jb
in
jmp
rcrl
inc
filds
aas
adc
sarl
and
mov
mov
dec
rolb
dec
pop
repz
xor
jo
cmpsb
push
cmp
mov
shr
xor
pop
lret
sbb
sub
cs
out
pop
outsl
popa
add
mov
mov
mov
movsl
dec
popf
cmpsb
sbb
xor
dec
enter
cwtl
and
jno
pop
and
add
aaa
fwait
clc
xchg
jae
inc
or
push
pop
iret
mov
jo
into
ds
xchg
bswap
dec
mov
mov
and
test
dec
lcall
mov
sbb
push
sub
test
jle,pn
push
sbb
mov
les
pop
lret
add
push
in
lods
dec
jae
mov
and
inc
sbb
testb
xor
cmp
xchg
jmp
or
xchg
mov
fists
or
cmp
xor
add
adc
loopne
lahf
movsb
pop
aaa
es
jecxz
add
in
xchg
loopne
lods
fcoms
addb
mov
jp
rcll
imul
pushf
fidivrl
rcl
int3
fs
xor
pop
adc
outsb
adc
xor
push
cli
mov
ret
icebp
jge
mov
cmp
in
cmpsb
out
xor
loop
xchg
cmp
xlat
mov
lods
mov
sti
push
mov
dec
scas
scas
shrb
xor
scas
fsubl
sbb
daa
jnp
adc
test
or
mov
js
jb
pop
into
pushl
ret
test
arpl
sbb
das
push
out
data16
xchg
popa
sbbl
or
sti
in
jbe
add
push
jmp
xlat
jo
jne
xor
xor
pop
fiaddl
push
sbb
mov
outsl
shlb
cmp
stc
cmp
enter
or
clc
call
inc
ret
bound
xchg
push
cld
js
mov
mov
fnstenv
repz
push
movsb
je
sahf
push
mov
jecxz
mov
je
movsl
je
push
or
lea
lods
orl
adc
and
scas
scas
inc
lcall
or
xlat
pop
mov
xor
insb
icebp
jbe
sbb
and
xlat
movsl
stc
aad
push
jmp
lods
xor
mov
in
sbb
aaa
shl
xorl
testb
cmp
add
mul
out
inc
adc
fcmovnbe
xor
xlat
pop
jl
cltd
ror
mulb
outsb
jbe
lcall
inc
and
and
lahf
outsb
jle
jae
stc
and
lcall
pop
decl
out
rcrb
stos
sar
inc
rorb
cmp
add
mov
imul
mov
loope
or
leave
pop
inc
in
adc
sub
or
cmp
xchg
sbb
and
rcll
cmpb
jmp
stc
dec
movsb
es
and
pop
and
lods
cwtl
ds
cld
test
xchg
mov
addb
pop
movsl
add
mov
push
sub
lret
fisubl
sub
and
popf
sbb
jl
scas
adc
xchg
sub
jge
gs
push
es
ja
adc
outsb
mov
stos
push
ds
sub
jns
inc
shll
jns
inc
xlat
ja
and
addr16
xchg
lret
mov
or
into
push
fs
int3
pop
pop
jae
dec
sahf
test
and
jle
push
push
iret
rcrb
cld
aas
hlt
xor
ret
insl
push
into
sarl
adc
in
daa
into
in
repz
xchg
inc
movsb
les
mov
or
mov
lret
cmpsb
mov
test
sub
cld
aad
jne
ret
scas
lods
mov
and
int3
mov
sub
cmp
mov
lahf
dec
xor
mov
xchg
cmpsl
sbb
call
aaa
add
sbb
push
loopne
sub
loopne
iret
es
add
or
mov
jno
fmull
ljmp
stos
sbb
int
jns
jnp
push
pop
fs
xchg
inc
stos
or
cmpsb
xor
push
sbb
bound
pushf
adc
cmpsb
add
lods
sbb
add
popf
inc
xor
pop
hlt
mov
mov
test
stc
sub
adc
sarb
pop
and
imul
stc
cwtl
mov
xchg
cmp
in
xor
jo
xor
icebp
movsl
cmp
into
mov
and
sarb
mov
mov
cwtl
cmpsb
test
pop
clc
and
cmp
xchg
push
cmp
xlat
aaa
loopne
clc
test
jae
push
adc
xchg
mov
outsb
add
imul
or
movsl
mov
arpl
cmpsl
sub
mov
sub
push
push
outsl
mov
pop
fwait
mov
enter
aad
in
mov
ds
stc
lret
push
clc
nop
int
stos
rclb
inc
js
bound
stc
movsl
mov
mov
dec
out
xor
push
push
cmpsb
adc
xor
mov
push
xchg
push
lret
aam
xchg
fidivrl
ret
aas
cmp
push
inc
lahf
dec
and
mov
lods
dec
mov
mov
addr16
lods
xchg
xor
repz
dec
mov
dec
out
mov
jmp
jg
in
pop
fnsave
cltd
and
pop
xchg
pop
xchg
sbb
xchg
and
sti
das
adc
xlat
stos
test
adc
sti
frstor
adc
push
fsub
std
jle
dec
lods
sub
xchg
add
sub
adc
cltd
cmc
or
dec
mov
jne
push
arpl
jns
adc
cltd
cld
mov
rorl
cmp
popf
stc
inc
or
loop
adc
jae
lock
ljmp
jle
adc
idivb
xor
loop
pop
cmp
sub
outsl
int
adc
pusha
pop
aad
and
mov
jns
xor
popl
inc
add
mov
or
dec
ret
adc
call
pop
push
push
adcl
xchg
pop
sahf
mov
adc
and
xchg
call
push
jo
mov
hlt
loop
int3
mov
cmp
cmp
jg
jl
push
dec
dec
inc
mov
pop
jmp
imul
push
mov
xchg
insb
cmp
pop
out
pushf
shrl
ret
outsl
mov
and
sub
imul
mov
ret
data16
inc
call
dec
mov
mov
jge
and
adc
or
xor
xchg
jge
and
pop
push
jne
pop
xor
jb
push
hlt
mov
mov
xchg
cmpsl
lock
shll
test
pop
or
push
test
mov
jmp
xchg
aad
or
xor
sbb
in
call
sbb
in
jg
xchg
or
mov
sub
mov
cs
inc
lea
xlat
pop
ret
push
out
ret
cmp
and
or
mov
pop
pop
mov
or
mov
mov
dec
sbb
add
mov
aad
or
mov
repz
test
frstor
mov
mov
stos
loopne,pt
cmp
add
and
loope
in
movsl
cmp
push
arpl
and
enter
jae
fucomp
or
rcrl
jg
dec
fwait
ret
iret
dec
ds
movsl
sub
int3
imul
iret
push
push
add
xor
iret
xchg
orl
pop
in
xor
sbb
add
add
ret
sbb
pop
stos
bound
ja
sahf
jl
ds
repz
enter
xchg
adc
push
mov
out
cs
jns
push
fsubrs
shrl
repz
sarb
scas
xchg
cmp
mov
dec
pop
inc
sbb
clc
int
push
xchg
data16
pop
jmp
xchg
into
dec
pmulhuw
xchg
pop
mov
mov
std
out
cmp
daa
loopne
mov
xchg
test
ds
loop
dec
fdiv
push
aam
push
lret
test
dec
fsubrs
pop
ss
push
and
das
and
sbb
mov
and
mov
mov
add
mov
mov
push
fcmovb
sub
jl
dec
push
mov
sbb
out
sti
orb
scas
mov
xchg
lods
mov
notb
xor
adc
adc
and
jg
jl
imul
inc
sbb
sub
rcrb
xchg
jmp
fcompl
pop
dec
pop
add
out
lock
mov
pop
fnop
and
jnp
mov
repz
cmpl
dec
and
cmp
and
mov
arpl
mov
sti
lock
mov
in
mov
jecxz
mov
ror
push
leave
xlat
filds
aam
cs
mov
pop
test
add
mov
dec
sahf
or
jge
jge
add
pop
and
loope
hlt
outsb
sarl
cmpsl
add
bts
jno
inc
push
sub
sub
rclb
ss
or
jmp
test
out
xor
xchg
mov
faddl
outsb
add
fbld
fldenv
das
sbb
shll
adc
popf
cmp
arpl
cmp
and
sahf
lret
jmp
pop
mov
cmp
or
cmc
mov
ss
inc
std
mov
lcall
daa
into
cmp
xor
lahf
lods
mov
add
or
into
sbb
mov
bound
js
incb
inc
mov
lods
jle
fimull
inc
sbb
test
jp
adc
nop
scas
orl
xchg
mov
mov
dec
cmp
mov
lcall
inc
std
test
mov
pusha
xor
data16
or
cmp
imul
xchg
push
push
mov
adc
sbb
and
shlb
xor
mov
popa
sti
xor
sub
xchg
js
addr16
or
rcrl
mov
push
xchg
or
pop
jge
sub
outsb
xor
out
movb
test
imul
mov
cmp
pop
cli
mov
lea
aaa
cmp
jno
pop
testl
lea
mov
sti
mov
push
cmp
dec
mov
xor
sbb
pop
int3
std
sub
std
cmpsb
mov
mov
xor
roll
outsb
lock
jnp
insb
adc
lret
loopne
cltd
pop
fistpl
insb
mov
xor
xchg
addr16
call
ljmp
add
cmp
adc
mov
mov
bound
sub
gs
xlat
adc
pop
notb
xor
nop
dec
jb
and
cmp
mov
test
or
pusha
push
mov
dec
sbb
lds
loopne
cwtl
imulb
les
dec
pop
xor
in
xchg
and
loopne
sahf
sahf
inc
jge
cmovae
mov
movb
jmp
xor
xlat
aas
iret
mov
testb
arpl
addb
inc
cmc
cld
xchg
inc
arpl
enter
jnp
sbb
inc
jp
sub
jns
push
daa
xchg
stos
cmp
ja
nop
loopne
sub
adcb
out
xor
sbb
test
sahf
mov
movsl
stc
cwtl
aas
test
sub
xor
or
mov
negl
mov
mov
and
fsts
fsubr
cmpsb
adc
mov
mov
sbb
movsl
enter
jmp
lahf
fadds
aas
mov
push
ja
dec
xchg
push
jge
jns
imul
mov
adc
repnz
subl
stc
push
mov
xor
jb
xchg
adcb
mov
lock
pushf
inc
mov
sbb
aaa
jb
jecxz
xchg
and
push
mov
sub
arpl
or
push
into
pop
sbb
gs
jb
nop
repz
mov
insl
cmpsb
pusha
gs
push
mov
ficomps
addb
insl
xchg
popf
cmpsb
or
and
addr16
mov
pop
enter
je
sub
push
int3
mov
shll
das
jns
dec
lret
insl
mov
sub
out
mov
std
filds
mov
push
pop
mov
shlb
mov
sbb
xchg
pop
mov
outsb
cmp
sbb
icebp
jg
sub
loopne
addr16
xor
fmuls
pop
js
pushf
imul
mov
sub
lcall
fistl
and
pop
or
setae
sub
leave
sbb
ja
popa
push
or
ret
pop
dec
cwtl
xlat
jno
mov
xchg
out
sbb
dec
cmp
scas
scas
dec
into
xchg
and
push
in
mov
dec
push
mov
adc
jb
mov
xor
mov
jmp
push
inc
jnp
loope
mov
add
push
lods
adc
push
inc
push
fidivs
hlt
adc
std
mov
xor
sub
in
or
inc
adc
retw
xor
ret
outsl
pop
add
mov
pop
push
cmp
sbb
mov
pop
subl
push
imul
cmpsl
dec
inc
or
scas
in
scas
adc
sbb
or
aam
outsb
jo
add
lods
fistpl
mov
int
dec
inc
jle
add
inc
pushf
push
arpl
test
inc
shll
adc
ljmp
gs
sbb
inc
andl
adc
mov
dec
and
xchg
out
outsl
mov
sbb
jge
or
stos
sbb
in
hlt
fimull
imul
push
es
lret
in
xlat
mov
pop
cmp
cmpsl
repz
out
scas
push
inc
insl
sbb
sub
jmp
push
pop
cmp
fucomip
sbb
mov
stos
fs
mov
leave
daa
push
into
add
adc
mov
pop
inc
out
in
mov
ss
jmp
inc
xchg
loope
hlt
insb
sub
xor
or
lods
jae
pop
and
int
out
imul
jp
pop
xchg
xchg
xchg
lcall
shll
jmp
xchg
and
adc
jns
andl
xchg
pop
ret
pop
js
jnp
scas
subl
out
jmp
sbb
inc
add
inc
jnp
test
xor
cmp
xchg
in
mov
xor
scas
sbb
fadd
cli
add
int
add
inc
fsts
repnz
xchg
inc
mov
xor
and
in
js
push
dec
xchg
or
out
xchg
cmp
shl
iret
cmp
rorb
lret
mov
stos
xorb
pop
stos
bound
leave
ljmp
push
xor
jg
jbe
jge
in
movsb
sarb
cmp
cli
jb
popa
out
pop
xor
cmp
into
bound
gs
das
pusha
iret
push
pop
movsl
cmp
and
sbb
inc
pop
lods
dec
mov
cmp
pop
push
push
ds
adcb
adc
xchg
daa
cltd
inc
jle
out
jecxz
jecxz
xchg
enter
inc
cmpsb
in
out
data16
mulb
cmp
xor
jle
sbb
jmp
rolb
pop
rorl
mov
ljmp
mov
js
in
jne
mov
mov
dec
mov
lock
ficoml
xor
sti
jl
daa
test
push
clc
mov
outsl
pop
xor
push
call
inc
pop
pushf
cmp
pop
clc
inc
mov
mov
cltd
paddusw
inc
push
adc
xchg
and
push
push
pusha
xchg
out
xchg
xor
lret
xlat
and
mov
xor
xor
add
lods
stos
jle
into
adc
push
mov
or
imulb
dec
ret
pop
jl
push
icebp
mov
xor
je
jg
cld
mov
jmp
icebp
pop
xchg
mov
test
add
push
dec
push
jmp
pop
xor
or
jno
cmpb
jo
inc
pop
fxch
stos
clc
dec
pop
lea
lods
mov
aad
loop
call
pop
inc
cld
lock
and
iret
out
in
movsl
lds
pop
test
inc
sar
xchg
lcall
dec
xchg
xor
xlat
pop
xchg
ss
mov
dec
xor
shl
lcall
xlat
shr
gs
iret
fmul
repz
adc
pop
sahf
rolb
jne
inc
add
and
xlat
xchg
arpl
fdiv
jle
xchg
add
into
orl
into
jl
jl
ret
pop
sbb
add
sub
in
mov
dec
ret
mov
pushf
out
out
dec
push
pusha
es
mov
ret
pop
push
mov
or
push
das
stos
dec
lret
js
shl
out
xchg
push
dec
movsb
push
shll
xchg
inc
push
bound
mov
test
add
sub
movsl
lahf
sti
sub
dec
test
mov
mov
mov
mov
inc
inc
sub
sbb
or
imul
add
adc
xchg
roll
cmpsl
mov
loopne
cmpsl
add
aaa
cltd
leave
jg
lcall
and
stos
mov
xlat
mov
cs
mov
test
mov
mov
cltd
jle
add
adc
add
mov
cmpl
aas
test
repnz
xchg
cltd
push
xor
std
enter
adc
stos
ljmp
and
mov
dec
popf
cmc
jno
xor
clc
mov
push
dec
ret
aas
scas
mov
pop
xchg
inc
inc
xchg
lret
test
sub
mov
ds
adc
movsb
test
sbb
out
jne
pop
es
dec
adc
das
sbb
xorl
push
in
xchg
stos
dec
pop
ds
loopne
int3
mov
jge
repnz
lods
mov
sbb
stos
cmc
add
outsb
add
pop
jl
sub
or
add
dec
pop
xor
inc
mov
mov
ja
imul
or
nop
mov
inc
xchg
loope
cwtl
mov
cmp
imul
inc
sbb
sbb
adc
icebp
inc
jne
mov
sti
fcomps
mov
outsb
xchg
jb
loope
sub
mov
or
pushf
dec
ljmp
movsl
xor
cmc
fs
int3
mov
xor
arpl
fs
fnstenv
dec
cltd
out
mov
scas
fucom
xchg
push
inc
popa
sub
adc
stos
and
into
rclb
movsb
lahf
mov
mov
mov
inc
js
lock
or
mov
sar
cmp
cld
inc
out
ljmp
je
je
mov
rolb
in
mov
mov
or
hlt
out
pop
cmp
rorl
push
nop
xchg
adc
mov
cs
xchg
inc
inc
rolb
fldt
stos
dec
data16
add
and
iret
fistps
cmp
movsl
dec
sub
cmpsb
rcll
inc
mov
sbb
push
cli
cs
cmp
inc
cmp
and
rcrb
mov
add
xorl
dec
dec
in
jp
test
fmulp
das
sub
and
adc
inc
rorb
jo
mov
xor
xor
inc
pop
scas
fnsave
jnp
jge
gs
push
cwtl
add
dec
add
ljmp
mov
leave
leave
pop
je
xchg
cs
or
scas
dec
scas
dec
in
lock
mov
aaa
push
and
movsb
fcmovb
pop
in
add
lods
xor
dec
cmp
or
std
mov
pop
and
ljmp
cmp
stc
rorb
es
jge
cmp
pop
test
mov
cmc
dec
in
sub
inc
stos
pop
mov
test
lret
into
aad
and
loopne
xchg
aas
cmp
in
data16
test
int
xor
js
inc
cmp
in
in
cmp
mov
jnp
xchg
ret
mov
adc
pop
jns
arpl
push
in
add
mov
popf
ret
aaa
push
data16
xor
movsl
iret
inc
xchg
xor
pop
imul
jp
iret
mov
xlat
stc
and
jle
inc
jns
lds
lock
inc
jbe
out
adc
mov
test
out
or
inc
mov
cmpsl
addr16
aaa
jg
pop
xchg
pop
gs
addr16
cs
lahf
icebp
pop
test
cmc
loop
ss
mov
pop
roll
push
imul
mov
xor
inc
xor
lods
mov
pop
mov
push
jbe
pop
pop
fsubs
mov
inc
insb
lds
lods
and
push
ja
add
pop
es
lahf
lret
sti
inc
int
iret
adc
cmp
jmp
fisubrs
or
push
popf
data16
mov
lock
jbe
push
push
adc
fisubl
ficoms
or
jmp
in
daa
push
dec
sub
arpl
lret
cld
int3
pop
sbb
mov
xor
clc
loopne
mov
pop
push
add
mov
movsl
rcl
jnp
incb
xchg
sbb
repnz
test
cmp
lods
mov
lock
sti
jg
adc
fwait
cld
inc
fistps
mov
cmp
outsl
push
sbb
mov
pop
sbb
fs
ror
rcrb
jo
mov
arpl
adc
sbb
fstl
fdiv
daa
xor
pop
mov
and
bound
mov
and
dec
nop
jmp
int
push
adc
into
sub
test
adc
jne
push
and
dec
faddl
sbb
push
or
cmp
fs
fldl
add
pop
sahf
inc
add
sbb
arpl
loopne
fcoml
xchg
stos
dec
lods
nop
sbb
repz
xchg
imul
aam
xchg
popw
cmp
repnz
add
fsts
cmp
lods
adc
jne
mov
adc
imul
stos
sbb
into
jl
mov
call
xchg
repz
pop
into
mov
call
out
stos
iret
es
add
popa
test
out
fwait
pop
mov
push
jno
pop
lret
loope
jo
arpl
push
xchg
stos
ret
dec
sub
arpl
dec
sbb
jecxz
sbb
pop
scas
mov
mov
mov
push
mov
jmp
pop
fcompl
lahf
stos
fmulp
pop
lahf
inc
push
lods
xchg
cmpsb
sbb
out
fucompp
jbe
mov
adc
test
out
aam
xor
xchg
fcoml
cmpsb
push
sub
aad
pop
dec
das
xchg
aad
lgs
sar
inc
daa
shrb
mov
mov
loopne
push
imull
gs
mov
pop
fs
insb
inc
outsl
lahf
iret
jmp
mov
inc
cmp
push
inc
ret
std
jmp
sub
jae
daa
inc
loop
js
mov
stc
lret
shl
in
out
fsts
daa
aaa
in
sub
fiaddl
repnz
enter
loopne
jbe
sub
push
cmc
mov
popa
cli
fldl
dec
cld
mov
mov
sub
mov
jno
in
lods
pop
jno
imul
xor
mov
iret
lea
adc
push
xchg
clc
sub
ds
lcall
sub
lret
ss
push
xchg
rol
movsb
jo
ljmp
pop
mov
mov
push
loope
mov
outsb
add
cwtl
xor
adc
pusha
mov
repz
ja
pop
sub
shlb
sub
jo
rdtsc
jnp
clc
jns
mov
lret
pop
clc
mov
sub
insb
pushf
inc
sbb
add
jno
xor
hlt
sbb
lret
jg
cmp
ds
inc
arpl
int
mov
pop
stos
add
and
adc
xchg
fldl
insb
mov
lret
fcomip
jecxz
sti
daa
addl
icebp
sub
mov
push
fcomps
rcr
and
xor
push
sub
mov
aad
mov
or
or
sahf
mov
xchg
xor
icebp
mov
inc
pop
pop
pusha
sbb
add
cli
imul
xchg
and
cmp
insb
test
inc
or
pop
rorb
int3
popf
mov
push
fistl
orb
aad
ss
enter
xchg
ret
lods
xor
das
push
xor
xchg
cmc
mov
cwtl
test
xchg
or
mov
cltd
jbe
push
loope
push
daa
or
pushf
and
xor
push
push
inc
hlt
jl
cmp
mov
mov
adc
jbe
jg
inc
jns
xchg
cwtl
cmc
sti
fildl
in
xor
cmpsl
fmull
je
mov
test
mov
cmp
int
xchg
testb
fisttps
mov
lock
in
sbb
adc
inc
sbb
fnstsw
dec
inc
addr16
push
data16
cmp
jmp
mov
pop
xlat
cmp
lret
arpl
adc
xchg
xchg
nop
jo
dec
outsl
xor
sbb
shll
inc
lcall
adc
pop
adc
xor
mov
xchg
push
fbstp
inc
inc
rorb
lcall
mov
fsub
mov
push
mov
popf
pushf
pop
adc
in
jae
mov
js
stc
std
test
outsl
xorl
sub
lea
stos
nop
push
add
fdivr
mov
fldl
clc
add
fsubrl
lds
push
sbb
pushf
xchg
pop
popf
inc
fsubl
mov
or
jae
shrl
es
rcrl
aaa
xchg
out
sbb
jle
mov
cmp
cltd
inc
mov
fists
pop
or
scas
out
push
fisubl
pop
adc
and
push
popa
in
and
pop
xchg
sahf
daa
lods
push
fnclex
cmc
cs
and
scas
xchg
and
inc
inc
mov
push
data16
jb
loope
cmp
sub
fnsave
adcb
xchg
mov
andb
das
fnstcw
out
pop
dec
push
movsb
mov
mov
push
jae
pop
sbbb
push
inc
push
in
imul
dec
lock
les
dec
cld
fmuls
ja
popf
jmp
inc
jbe
fnstcw
fwait
call
shr
scas
mov
scas
dec
dec
lds
dec
mov
mov
xor
daa
std
testb
fcmovnbe
and
and
dec
pop
aaa
cmp
outsb
push
enter
mov
out
jne
push
cli
add
sbb
cmpl
js
jne
xchg
insb
shlb
scas
add
scas
ja
mov
orb
sarl
cmp
sti
lds
push
data16
cmp
scas
add
mov
add
jmp
xor
mov
jb
mov
sti
inc
lret
loop
ss
dec
stos
int
push
sub
ja
mov
pop
mov
fyl2x
and
cmp
push
lock
inc
mov
cld
in
or
xchg
std
pop
pop
jmp
mov
push
fsubrl
jbe
mov
xchg
pusha
add
jle
movsl
or
out
push
jno
pop
aad
lret
outsl
push
xchg
and
jno
xor
aam
xor
push
mov
adcb
in
je
sub
dec
test
and
int3
inc
mov
add
rcl
dec
xor
xlat
mov
fwait
mov
xchg
insl
mov
inc
mov
xor
lret
into
sub
pop
repnz
mov
roll
ficompl
push
cmpsl
stos
add
pop
fdivrs
out
test
daa
mov
adc
jmp
xor
pop
push
dec
insl
mulb
or
dec
sbb
mov
nop
aas
leave
repnz
inc
rcl
mov
fidivl
inc
mov
ja
rclb
add
aad
dec
insl
xchg
into
jns
mov
ret
jecxz
test
in
pop
mov
push
and
inc
cmpsl
jno
sti
movsb
mov
scas
hlt
push
fdivs
lods
xchg
mov
mov
cmp
ja
inc
cmc
cli
insl
in
and
jae
xchg
pop
clc
mov
dec
ljmp
sti
repz
pushf
add
sti
push
shr
push
rorb
xor
fidivrs
loope
adc
in
xor
or
in
pop
jno
lret
or
fiadds
stos
xor
pop
icebp
ja
sub
xor
enter
and
inc
jo
cmp
cmpsl
loope
xor
jb
data16
or
xchg
lcall
push
jae
fisttpl
bound
loop
cmpsb
jno
push
gs
ret
or
out
pusha
sub
adc
adc
mul
ljmp
mov
negl
test
push
lds
dec
pop
sub
inc
sub
adc
sbb
mov
loope
sbb
scas
sahf
dec
scas
es
jno
loope,pt
outsl
nop
xchg
inc
pop
loope
pop
pop
dec
xchg
roll
lret
test
sub
push
popa
pop
adc
fnsave
sbb
jb
out
sbb
enter
sub
xchg
xor
daa
push
sarb
insl
test
std
imul
push
add
dec
adc
adc
nop
ret
push
jecxz
gs
andl
loop
shrb
fs
add
sub
xorl
fs
pop
cmp
and
jbe
pop
sbbl
cmp
pop
nop
lcall
test
rcll
cmp
or
out
stos
inc
push
sbb
cmp
mov
loopne
and
or
ficomps
xchg
sub
cmp
flds
mov
cli
mov
pop
jne
mov
jg
das
inc
ret
jp
cmp
mov
cmp
inc
xchg
sbb
mulb
mov
sbbb
test
iret
es
xor
sti
or
xchg
cmpsb
stc
cmp
sub
xor
sbb
std
jecxz
xor
test
jnp
popa
mov
sub
leave
push
mov
and
bound
pop
fs
xchg
movsl
dec
into
jb
pop
test
cld
enter
divl
mov
pop
aas
fnsetpm(287
outsb
test
push
and
mov
mov
add
stos
stos
js
ljmp
lods
sub
bound
mov
test
loopne
mov
push
outsb
mov
movsl
adc
cmp
andl
faddp
ret
stos
and
leave
les
cmp
addr16
inc
out
push
test
push
add
cltd
js
sbb
xor
mov
dec
fistpll
fnstsw
int3
jge
mov
and
aam
hlt
and
sub
jne
xchg
aam
popa
jg
cmp
addr16
cli
int
mov
xchg
adc
inc
xlat
mov
pushf
fs
icebp
mov
dec
and
es
arpl
lret
xchg
push
lds
movsb
dec
out
in
sbb
sbb
adc
fnsave
ds
sarl
daa
fadds
mov
mov
clc
jns
cmp
pop
inc
lods
add
sub
add
je
jne
pop
jmp
xchg
pushf
push
fwait
pop
adc
inc
add
mov
mov
ficoml
sahf
popa
pop
sbb
test
stc
xchg
scas
fwait
orb
or
xchg
stc
push
sub
xchg
dec
icebp
lahf
sub
fadd
push
xchg
arpl
bound
lret
sbb
decb
push
sbb
je
bound
inc
adc
out
and
ja
mov
bound
push
test
popf
dec
mov
int
jp
dec
mov
hlt
mov
pop
or
and
xor
mov
mov
lds
cmp
dec
insb
fldl
mov
lret
inc
mov
pop
add
ljmp
arpl
loope
mov
mov
and
outsl
xchg
fisubrs
divl
inc
and
or
xor
dec
repnz
negb
jmp
mov
arpl
xchg
and
insl
loope
mov
pop
mov
mov
ds
addl
out
cs
jnp
and
into
xorl
mov
stos
add
jmp
scas
pop
xchg
cmp
idivb
cmpsb
ljmp
ret
das
fdivrl
out
mov
cli
xchg
outsl
mov
inc
and
andl
and
jge
jecxz
mov
dec
daa
jne
sub
addr16
mov
cld
mov
or
fldt
xor
fiaddl
dec
dec
repz
push
mov
and
clc
in
dec
out
icebp
fstpl
cmc
cli
aas
jbe
mov
mov
testl
sub
mov
cmpb
test
sti
xor
mov
fdecstp
xor
xchg
fidivl
mov
scas
dec
and
loope
fdiv
cs
sub
imul
aaa
add
xchg
push
sbb
stc
push
pop
bound
icebp
mov
xor
adc
and
and
xor
nop
pop
fistps
pop
inc
and
cmp
cs
hlt
stos
sub
popf
push
pushf
cs
mov
aam
dec
mov
jl
cmpsb
scas
cld
pop
jne
outsb
jnp
in
inc
sub
data16
dec
xor
pusha
cltd
sbb
cs
adc
movsl
mov
jnp
dec
out
jle
add
pop
sub
jg
jmp
inc
or
mov
xchg
mov
or
test
hlt
bound
nop
call
in
mov
bound
xchg
sub
mov
addb
cmp
ds
std
ss
and
jbe
mov
mov
jo
jl
daa
cmp
test
push
push
insb
scas
inc
jnp
mov
mov
mov
jno
xchg
push
sub
cld
decl
fmull
icebp
clc
pushaw
rcl
push
test
jmp
scas
adc
mov
push
arpl
fdivrs
psubsb
xchg
adc
pop
mov
mov
aas
pop
lahf
sub
movsl
sbb
dec
xor
psllq
and
and
push
inc
nop
cmp
xor
scas
test
xchg
pop
aas
cmp
hlt
xchg
or
xchg
les
xor
out
dec
jge
pushf
inc
rorl
lock
insb
cmp
neg
clc
cmc
push
test
cmpsl
fmul
movsb
jge
nop
push
sub
xor
lret
leave
or
hlt
adc
ja
xlat
lods
push
in
push
push
mov
xor
mov
add
mov
pop
cmpsb
pop
fdivrl
lcall
iret
cmp
frstor
call
dec
stc
push
stos
mov
xchg
xchg
lahf
inc
xor
cltd
mov
push
out
jbe
inc
lock
xor
xlat
push
pop
push
aad
xchg
mov
mov
shrb
sbb
fwait
adc
and
lods
dec
lods
rcrb
test
cmp
inc
sbb
jbe
or
icebp
cmp
lret
scas
movsb
adcl
inc
push
stc
push
icebp
or
gs
inc
jg
mov
inc
jl
rcrb
sub
pause
cmp
outsl
or
test
pop
push
out
int3
divl
out
sub
dec
xchg
fbld
push
out
xor
pop
in
sarb
xor
xor
loope
pop
mov
jg
mov
inc
andl
mov
mov
push
int3
sub
lods
lret
cltd
popa
mov
jle
sbb
xor
jbe
xchg
xor
repz
cmp
mov
adc
sahf
fcoml
in
cwtl
add
lret
pop
call
pop
xchg
sahf
mov
sti
loop
aam
add
repz
insl
sbb
mov
insb
pop
inc
popa
jae
jbe
and
das
xor
in
cli
inc
dec
cmpsb
xchg
sbb
inc
mov
imul
xchg
jbe
les
in
xchg
divl
cmp
add
lss
outsb
out
dec
insb
outsl
mov
imul
fwait
mov
shl
outsl
addb
test
or
stos
stc
in
inc
fwait
inc
repz
mov
rcll
push
inc
aaa
mov
das
repnz
cmp
cli
dec
push
adc
cwtl
cmp
sub
addr16
loope
jge
pop
std
cmp
pop
idivb
inc
add
mov
lahf
or
push
and
popf
dec
in
dec
push
jbe
insb
hlt
sbb
xchg
cwtl
or
xor
iret
sub
iret
jnp
push
adc
jg
adc
movsl
aad
mov
jae
aaa
push
inc
jns
sbb
es
iret
xchg
inc
loop
es
and
mov
xchg
ja
or
jne
push
in
mov
jmp
out
cmpsl
popf
cli
test
outsl
and
sbb
mov
outsl
push
pop
inc
imul
mov
push
pop
adcl
push
in
lock
mov
jbe
lret
adcl
inc
out
inc
ss
iret
inc
push
pusha
sbb
lcall
jnp
outsl
pop
push
data16
sbb
push
sbb
adc
and
cmp
lock
push
pop
mov
mov
adc
dec
gs
mov
stc
test
push
fiaddl
add
inc
mov
cmp
push
push
aaa
mov
sti
fsub
inc
jnp
jns
loopne
sub
fstpl
inc
pop
mov
jecxz
mov
mov
jp
xchg
xchg
rcr
cmp
dec
bound
call
cli
push
imul
sub
js
jg
mov
sbb
sub
inc
dec
push
mov
push
pushf
adc
and
cmp
cwtl
add
addb
sahf
and
sbb
xor
js
xchg
dec
iret
stc
clc
pop
xchg
insb
clc
sub
sbb
call
pop
cs
lret
sbb
iret
aaa
xchg
jp
lret
pushl
cmp
daa
mov
mov
add
cwtl
das
mov
das
call
cmp
pop
mov
stos
das
jge
addr16
cmpl
sti
iret
lods
ss
daa
popa
sub
ds
iret
lods
ljmp
xchg
and
fs
adc
scas
lret
mov
popa
add
pop
push
xchg
int3
lcall
push
or
mov
jns
jl
xchg
mov
loopne
xchg
sub
lret
jnp
ret
mov
imul
jle
mov
cmp
clc
out
testb
fnsave
and
sub
adc
lret
jno
aas
imul
adc
cmp
nop
cmp
pop
test
cmp
lret
clc
arpl
inc
jbe
xchg
ljmp
lret
ss
xchg
adc
mov
mov
adc
lds
xchg
scas
push
iret
loope
mov
stos
add
add
pusha
jmp
cltd
sub
mov
ret
sbbl
pop
mov
jns
enter
cmpsl
stc
shrb
ret
and
add
adc
push
fcmovnb
loop
add
inc
inc
idivb
xchg
pop
enter
lea
inc
pop
imul
mov
data16
testl
and
and
test
inc
test
daa
fcompl
pusha
push
test
subl
in
sahf
lods
divps
sub
insb
ljmp
mov
sahf
stos
das
mov
mov
cli
jbe
jp
add
adc
sbb
xor
mov
mov
xchg
inc
xchg
aad
sti
sbb
pop
popa
push
jmp
push
dec
cmp
xchg
pop
mov
sub
sbb
push
add
pop
adc
insb
int3
cmp
and
xchg
pop
push
mov
adc
lds
xchg
sub
jae
fsubrl
pop
xchg
lock
push
std
mov
sbb
out
ds
dec
cwtl
lods
js
aam
nop
repz
adc
jmp
lea
xchg
adc
sbb
mov
pusha
imul
mov
xchg
push
mov
popa
or
loope
adc
cmp
xchg
jns
lcall
in
int
icebp
ficompl
cmp
add
lahf
sysexit
lret
repz
lock
adc
cltd
and
jnp
mov
dec
xchg
outsl
sub
mov
sub
cmpsb
cmp
jae
in
int
push
push
push
cmp
lret
mov
xchg
and
rcl
push
test
into
icebp
or
fs
nop
mov
push
fs
mov
out
add
or
pop
push
push
out
imul
in
add
xorl
movsb
in
fsubl
gs
aam
je
inc
int3
lcall
adc
pop
nop
add
add
lret
add
inc
ljmp
in
rcll
push
push
xor
icebp
data16
xchg
pushf
pop
addr16
cld
sub
adc
pop
aas
and
push
mov
cmp
xchg
push
and
ljmp
push
adc
push
push
sub
rolb
sub
in
int
scas
nop
and
sbb
fsubrl
xlat
sbb
and
leave
push
mov
inc
movsb
mov
stos
addr16
mov
mov
mov
jmp
bound
xor
jmp
js
dec
je
push
icebp
mov
cltd
push
dec
sahf
mov
clc
outsl
dec
shll
add
cmp
mov
pop
sbb
and
repnz
out
mov
loopne
out
push
scas
out
pop
stos
test
inc
cs
int
arpl
data16
lcall
mov
xchg
mov
push
cltd
jae
mov
fsubrl
pop
mov
lds
pop
push
popf
shr
lea
jge
hlt
jecxz
in
adc
loope
in
inc
inc
outsl
aas
out
cmp
mov
jecxz
xchg
add
fwait
dec
xchg
stc
and
add
ja
out
mov
jmp
cli
lds
cli
xlat
in
mov
xchg
cmp
xchg
outsl
mov
arpl
mov
mov
sub
jmp
xor
xor
lahf
cmp
mov
push
fwait
nop
push
or
loopne
push
sbb
push
in
lds
xor
scas
shll
pushf
mov
mov
mov
mov
cmpsl
out
insb
push
xchg
inc
dec
pop
out
sahf
mov
iret
xor
xor
push
push
popa
mov
cmp
xor
and
lret
and
cmp
lock
pop
mov
or
jno
addr16
adc
data16
fwait
push
rcr
sub
je
aam
jns
jo
int3
int
cmp
inc
xor
sti
pop
in
mov
dec
push
pop
mov
cmp
adcb
cld
sarb
pop
add
clc
sub
sub
mov
pusha
out
jl
jle
fsubrs
ror
ficompl
mov
xchg
ss
inc
nop
jge
push
hlt
sub
out
adc
xchg
mov
mov
jmp
data16
pcmpeqd
mov
iret
sub
add
hlt
cmc
xlat
xlat
add
icebp
adc
mov
das
cmp
cltd
add
xchg
mov
fmull
jecxz
dec
pop
mov
test
arpl
in
repnz
pop
pusha
insb
jbe
out
dec
cwtl
aad
gs
jno
jae
lods
stos
mov
fsubrs
cltd
cmp
das
mov
jno
pop
inc
fcmovnb
lret
or
dec
push
mov
sub
inc
cwtl
aas
add
pusha
sub
adc
jb
dec
pop
push
lahf
xlat
iret
pop
inc
scas
xlat
in
and
bound
push
xchg
dec
aaa
pop
andl
ja
push
test
adc
fcompl
aad
imul
test
jmp
rep
lock
psrlq
inc
cmp
test
loope
mov
xchg
push
xor
in
movsl
in
clc
jbe
sti
lcall
lret
adc
aad
add
push
mov
test
sbb
arpl
int3
lds
jo,pn
xchg
das
mov
sarb
mov
xor
push
insb
scas
mov
cmp
and
fiadds
mov
jp
xchg
popa
push
sub
pop
frstpm(287
xchg
push
or
jmp
inc
push
or
mov
dec
mov
push
push
push
push
clc
cmc
imul
dec
inc
mov
lcall
xchg
test
loopne
gs
dec
sti
add
jnp
int3
jbe
pop
mov
push
cmpsl
push
mov
mov
adc
sbb
sub
je
push
daa
shll
sti
xor
mov
adc
imul
arpl
cmp
stos
cmp
mull
mov
jno
jge
or
ja
jnp
cmp
repnz
cmp
push
mov
daa
push
dec
lret
xchg
pop
sbb
xor
fcompl
push
xchg
repnz
mov
inc
aam
insb
inc
sbb
ljmp
outsl
cmpl
xor
inc
subb
and
lds
jecxz
fs
dec
out
xchg
rolb
xorb
das
and
cmp
cmp
fnstsw
dec
pushf
sub
cmp
push
in
hlt
subb
add
dec
mov
jnp
test
lahf
aaa
fadd
or
jns
jno
int
or
loop
xor
and
das
outsl
or
dec
inc
mov
cmp
push
and
imulb
dec
dec
jnp
sbb
push
pop
in
mov
insb
dec
adc
inc
test
rcr
leave
mov
or
inc
shl
cmp
lods
incl
aas
ficoms
sbb
adc
mov
and
fildl
mov
rclb
push
test
repnz
mov
dec
outsb
xchg
fidivrs
pop
ja
jl
sub
push
iret
jno
daa
sbb
lret
ds
xchg
insb
jg
adc
dec
nop
ffree
push
stos
divb
pop
mov
outsl
pushf
mov
in
ret
cmp
push
mov
insb
ret
xor
inc
cmp
cmc
add
into
sbb
jnp
mov
jb
mov
pop
mov
mov
lds
shl
or
inc
addr16
pop
stos
and
ret
fmul
outsl
xor
or
cmpl
inc
cs
lret
cli
and
call
add
cmp
sub
shrl
xchg
fs
dec
xor
sbb
scas
xor
test
lods
jecxz
add
stos
repnz
lret
cltd
push
cld
outsl
cmc
xor
outsb
cmp
inc
push
aad
adc
test
pop
das
rclb
adc
mov
add
iret
mov
insl
loop
push
push
add
leave
xchg
iret
dec
sub
sbb
scas
sbb
bound
xchg
mov
pop
ficomps
mov
jae
mov
jb
dec
xor
addr16
test
movsb
sub
daa
scas
orb
outsl
pop
addr16
ja
adc
push
popa
jecxz
cs
mov
add
jle
push
ss
push
push
mov
ja
fidivl
fmulp
or
pop
push
mov
xor
sbb
mov
clc
mov
cld
jmp
inc
dec
fidivrl
dec
cli
shll
outsb
inc
add
sbb
xchg
inc
out
icebp
cs
add
mov
addr16
xlat
sti
loopne
lahf
pop
in
fsubs
jns
jo
jns
push
add
pop
iret
nop
push
andl
xor
in
mov
xlat
cmpsb
mov
or
lcall
jmp
jno
pop
fstl
sub
dec
int3
or
mov
mov
inc
pop
lods
jbe
sub
pop
lock
mov
into
mov
push
xchg
dec
test
loop
test
jno
das
add
sbb
xchg
out
pop
arpl
xlat
bound
sahf
cmpsl
sub
adc
inc
inc
pusha
pop
testb
sbb
jmp
or
jg
jmp
push
in
add
and
shrb
addr16
xlat
dec
js
in
andl
loope
cmp
std
fbstp
mov
or
jo
fstpl
sbb
xor
mov
cwtl
pop
std
sti
adc
imul
dec
std
xchg
push
sbb
loopne
adc
lahf
pop
push
jl
fsincos
fbld
aam
stos
inc
call
cmp
jno
jnp
nop
das
out
std
insb
lds
or
cmpsb
imul
in
jle
cmpsl
enter
rcl
xchg
cmpsl
scas
fdivrp
mov
pop
hlt
jl
push
rol
ret
shrb
xchg
sti
dec
pushw
mov
andl
imul
lods
gs
cmp
sbb
sub
andb
and
imul
aas
fbld
push
push
mov
insl
loope
das
mov
rorl
and
pop
stos
imul
mov
sbb
inc
adc
addr16
lods
mov
cmp
lods
pushf
add
lea
je
xor
stos
in
pop
cmp
dec
push
test
and
hlt
xorb
popf
fstpt
sub
cmp
fldt
or
stos
pop
mov
adc
outsb
insb
sub
jl
cmpsl
addr16
sbb
cmp
test
adc
mov
enter
fisubl
push
shrl
in
ljmp
fldcw
scas
sbb
mov
lret
inc
ljmp
jae
aam
add
sub
mov
xchg
xchg
das
lock
xlat
inc
jb
push
pop
rclb
pushf
add
sub
push
mov
mov
sub
mov
xchg
xchg
sahf
in
mov
es
js
inc
imul
out
inc
xchg
pop
cmp
outsl
pushf
inc
lods
ljmp
shr
xor
dec
fsub
push
scas
push
push
mov
fimull
mov
cs
in
inc
gs
repnz
add
daa
inc
adc
test
je
fs
sub
xor
dec
imul
xchg
mov
mov
ljmp
andb
push
sbb
jne
rorl
sbb
jbe
sbb
jecxz
mov
es
in
push
mov
mov
in
pop
call
dec
je
add
and
push
mov
loopne
pop
in
mov
xor
loop
adc
mov
out
mov
mov
and
ret
pusha
adc
push
cmpsl
sbb
ret
enter
addr16
or
push
cmp
push
sub
sub
test
push
out
cmp
cmp
sbb
cmp
arpl
sbb
xor
call
add
pop
add
mov
and
leave
push
stc
ja
dec
mov
inc
aaa
mov
lods
jp
dec
repz
pop
adc
inc
add
add
sahf
xorb
call
mov
inc
fadds
fcos
push
test
xor
push
pop
or
mov
gs
lds
test
cmp
mov
adc
jecxz
loop
lea
add
cmpsb
pop
les
in
arpl
mov
push
cmpsb
push
test
dec
bound
pop
int3
popa
sbb
or
and
xchg
jbe
xchg
cmp
lods
in
cmp
pop
clc
sar
repnz
pushf
lods
outsl
and
push
mov
out
sbb
lcall
add
cmova
sub
cmp
cmp
das
xor
popa
fs
add
pop
jl
test
add
icebp
xchg
repnz
test
fidivl
loopne
jnp
dec
cwtl
outsb
out
push
sub
push
adc
sarb
pop
cmp
xor
lods
mov
cmp
sarl
mov
mov
xchg
ret
adc
add
inc
push
test
jo
sub
loopne
push
into
shlb
rcrl
in
dec
das
or
loop
jae
mov
loope
sarb
pusha
les
xor
lock
jge
addr16
aaa
jle
jae
pop
repz
mov
dec
mov
cmp
xchg
dec
test
out
dec
or
out
and
insb
roll
pop
cmpsb
push
mov
shl
addr16
dec
xlat
movups
imul
mov
lods
mov
insl
add
sub
lret
sbb
ret
xchg
cli
int3
hlt
xchg
fdivs
cmp
cmpsb
movsb
mov
mov
js
insl
xchg
cli
push
push
aas
mov
data16
ja
cmpsb
push
jle
adc
js
xor
leave
subl
jg
cmp
shr
cmpsl
sub
push
mov
outsl
insl
adc
pushf
push
sbb
repnz
stos
cmp
mov
aam
push
dec
xchg
imul
xorb
arpl
jne
and
push
andl
adc
dec
jnp
xchg
mov
add
cmp
jno
xchg
lock
xor
push
pop
adc
mov
add
xchg
rcr
test
outsb
adc
pushf
cmpsb
scas
bound
andb
mov
fdivrs
shl
inc
cmp
push
pop
movsb
xchg
push
cwtl
movsb
jmp
sbb
jl
or
push
xchg
es
push
testb
popf
xchg
mov
scas
sub
xchg
jo
adc
pop
xlat
add
pop
push
popf
jge
xchg
loop
mov
shrl
xor
loopne
mov
mov
adc
pop
push
sbb
sbb
sub
push
popf
fsubs
loop
cmpsl
int3
mov
dec
mov
lods
mov
jp
fistps
bound
movsl
cmp
mov
sub
push
jle
out
or
ja
out
pop
push
cld
incl
adc
inc
shrb
sub
cmp
jg
int3
cs
jb
mov
pushf
insl
repnz
je
or
loopne
stos
dec
inc
push
pop
jle
mov
push
dec
sarl
mov
imul
stc
xchg
cmpsl
sbb
and
mov
dec
adc
lret
mov
jbe
out
cmc
push
test
inc
sbb
lret
pop
out
jbe
in
mov
cmpsb
inc
cmp
mov
outsb
mov
sbb
aas
sub
in
jb
in
mov
mov
fisubrs
mov
lcall
mov
jae
int3
mov
adc
cmp
bound
push
ja
fiadds
pop
inc
test
test
rclb
sbb
fldl
pop
test
clc
jb
cmc
cmp
popa
sbb
dec
adc
xchg
shll
scas
repz
ss
mov
addb
jo
mov
xor
lods
pop
cmc
xor
sbb
sti
pop
ror
xorb
stos
sub
into
inc
scas
hlt
decb
pusha
pushf
je
xchg
cmpsl
push
pop
sub
rcll
pop
fcomp
mov
inc
aad
push
and
jbe
pop
mov
shrb
jbe
pop
mov
inc
nop
clc
push
fdivl
or
dec
and
push
cmp
push
fisubl
jmp
data16
push
dec
dec
mov
test
push
fs
imul
xor
clc
sbb
and
add
mov
push
gs
jns
es
mov
dec
leave
cmpsl
pop
shll
dec
push
xor
repnz
adc
fisubs
lret
int3
fwait
stos
rol
push
or
xchg
push
sbb
jecxz
mov
test
mov
lret
popa
mov
clc
xor
jno
mov
fildl
scas
je
cmp
test
mov
inc
lods
xlat
imul
sbb
or
out
jo
aad
and
shl
pop
sti
inc
test
rdmsr
movsl
push
adc
clc
ret
sub
out
movb
pop
xchg
loope
inc
rep
stos
cwtl
test
repz
iret
jmp
loopne
xor
les
adc
ds
pop
lea
mov
sbb
push
lahf
add
add
das
and
dec
or
andb
cld
xchg
leave
insl
inc
adc
mov
sub
inc
pop
leave
cs
jb
add
in
push
pop
and
ljmp
das
pop
xchg
lods
daa
sub
adc
mov
aaa
sub
push
jp
add
or
inc
aad
sub
js
adc
fsubrl
aad
mov
sub
fdivrs
mov
dec
or
ds
inc
aas
push
push
jl
loope
cs
xor
sahf
testl
outsb
xchg
arpl
push
ljmp
pop
out
cmp
testl
xchg
jno
adc
xor
repz
pop
roll
push
ss
popa
mov
clc
leave
fstpl
jecxz
pop
dec
push
lods
xchg
into
xor
push
fstps
sbb
testb
icebp
and
mov
sahf
fisttps
ss
fisubs
jl
cwtl
fldenv
sbb
mov
mov
adc
push
dec
pop
cmp
aas
mov
push
outsl
xchg
mov
inc
push
jge
fcompl
imul
mov
jmp
iret
sbb
int3
dec
cmp
dec
rcrb
mov
mov
insl
pop
xlat
imulb
push
mov
cmpsl
sub
add
fstpt
mov
dec
mov
test
out
out
xor
test
mov
out
and
mov
rcrb
test
shr
jmp
aam
add
or
cmp
cmp
divb
test
out
bound
in
leave
lret
out
stc
push
enter
cs
push
imul
out
lods
js
out
adc
lret
loop
outsl
repz
xor
in
adc
mov
mov
mov
icebp
out
pop
popa
aad
mov
dec
in
popf
rorl
or
xor
xor
mov
jne
cltd
bound
sub
cmc
jp
cmp
add
cmp
adc
and
int3
das
inc
aam
mov
push
inc
and
loopne
xor
call
jbe
mov
add
sbb
jo
or
je
inc
jno
mov
pushf
lock
and
mov
mov
mov
or
sub
mov
dec
dec
repnz
pop
xor
or
ljmp
fbld
xchg
int
xchg
movsl
jp
arpl
mov
adc
lock
mov
imull
fdivrs
insl
cmp
and
or
xor
int3
fiaddl
inc
in
cmp
mov
mov
imul
leave
pop
add
mov
or
cmp
pop
ja
das
outsl
push
dec
push
rorb
fdivrl
scas
dec
mov
ret
cmp
pushf
mov
dec
xchg
pop
icebp
cmp
mov
mov
adc
lea
test
sbbl
ret
loop
repz
pop
pop
xchg
test
lret
xlat
jnp
sub
int3
ds
flds
imul
enter
and
cmp
js
shrl
inc
ret
push
fbstp
and
cwtl
or
mov
add
aas
and
xchg
mov
stos
pop
jp
or
xchg
push
cmpb
xor
int
fcomp
xor
mov
push
das
nop
in
xor
iret
or
inc
mov
cmp
inc
jne
push
push
imul
sub
fs
sbb
sub
mov
inc
add
xchg
jge
pop
mov
jo
xor
add
push
inc
sti
xchg
xchg
xchg
in
cmp
add
sti
dec
push
sarb
inc
push
mov
sub
in
rclb
jns
into
mov
cmpsb
imul
sti
jo
and
jl
xor
sub
sub
add
fs
and
push
pop
aad
mov
and
and
or
inc
ret
hlt
daa
xor
std
pop
mov
mov
or
adc
stc
xor
in
pop
jmp
pop
sub
adc
mov
pop
push
jno
and
inc
aad
movsl
shlb
pop
cld
movsl
mov
jmp
stc
out
repnz
leave
fists
fiaddl
into
orl
xor
mov
shll
lods
addr16
jle
mov
lahf
dec
and
mov
das
mov
sub
or
inc
dec
les
mov
in
cli
jg
jno
addb
jge
outsl
adc
sbb
push
in
or
add
inc
cmp
and
cmp
out
dec
into
mov
neg
xchg
mov
mov
xchg
mulb
pop
lcall
out
rorb
jmp
enter
jge
push
xor
sbb
faddp
xchg
ja
cltd
cmp
loope
fmull
mov
cli
movl
lods
adc
popa
jne
test
add
xchg
loope
add
or
mov
xchg
outsb
mov
ljmp
jge
in
andl
sbb
jne
shlb
xor
inc
jno
test
xchg
loope
push
test
jbe
jg
sbb
push
fstl
lahf
inc
int3
std
and
lret
fdivl
sbb
cli
insl
repnz
mov
gs
in
in
vpmacssdql
and
mov
jae
xor
call
lds
mov
pop
es
push
bound
inc
faddl
les
repz
jae
fisttpl
sbb
outsl
ficompl
pop
in
sarl
xchg
lock
xchg
dec
xchg
dec
shlb
dec
sti
jl
pop
mov
mov
outsb
pop
mov
lret
mov
mov
dec
jne
ljmp
insb
sub
aam
jmp
jecxz
adc
sub
rorl
call
dec
cmp
movsl
addr16
mov
aam
pop
ljmp
xor
push
fwait
push
out
inc
out
inc
test
out
add
fmuls
add
or
popa
inc
jno
dec
sub
lcall
mov
imul
div
jo
ret
dec
xlat
stos
and
call
call
push
xchg
cmp
sub
imul
pop
jg
movsl
cmpsl
cs
sub
xor
aam
xor
in
jecxz
cmp
cmp
add
pop
adc
cmpsl
cli
jle
sub
sbb
pop
aam
aas
lods
xchg
push
or
sbb
push
and
arpl
cmp
xchg
dec
daa
push
mov
rcll
call
adc
ljmp
repnz
dec
movsb
into
hlt
add
sbb
fmul
jae
rolb
push
je
inc
dec
dec
xor
outsl
clc
xchg
mov
dec
adc
mov
movsb
sub
out
ret
push
add
pop
mov
xchg
cmp
imul
and
cltd
jnp
add
xchg
cmp
lahf
xchg
mov
sti
push
fidivrs
mov
cmp
jg
xchg
into
and
push
xchg
sub
stos
in
iret
mov
xchg
add
push
dec
sahf
es
lods
jecxz
es
dec
or
xchg
outsb
or
sub
jge
dec
add
pop
xchg
sti
mov
inc
repnz
push
call
cmp
jg
or
lods
push
xchg
inc
mov
cmp
mov
lea
repnz
sbb
mov
or
inc
xchg
xor
js
cs
fs
iret
inc
jo
fdivrl
add
movsl
push
movl
ljmp
mov
jecxz
sbb
jle
xlat
ret
mov
cmc
mov
cmp
packsswb
mov
mov
test
xchg
imul
jmp
int
pop
les
or
jnp
xlat
cli
clc
in
in
pushf
mov
int
mov
int3
stos
mov
xchg
sahf
pop
or
sub
xchg
sbb
sti
add
loopne
in
ja
mulb
enter
push
lds
js
and
xchg
pop
dec
jnp
ss
sbb
arpl
insl
stos
xor
push
sahf
pop
and
push
insl
push
pop
loopne
shll
es
btc
js
cmpsl
enter
xor
and
call
out
js,pt
cmp
mov
rcrb
sbbb
dec
xor
mov
test
mov
test
sbb
push
adc
lock
insb
in
adc
sub
cmp
popl
mov
pop
hlt
jae
pop
test
xchg
xchg
mov
xchg
rcll
sbb
sub
lods
imul
fdivl
test
or
pop
or
fdivs
adc
test
jg
shld
scas
inc
jne
mov
cmp
add
scas
cmpsb
sbb
insb
xorl
jae
lock
push
nop
cltd
adc
sbb
cld
push
push
mov
and
add
sarb
repnz
mov
push
fnstsw
mov
push
dec
push
fstl
dec
enter
fisubrl
loopne
xchg
xchg
xchg
cmpsb
push
repnz
sub
mov
jmp
pop
shl
and
int
jne
scas
jecxz
jmp
cs
push
dec
xor
in
lea
mov
xchg
mov
repnz
aaa
jle
jno
lock
ficomps
adc
cmpsb
mov
lret
mov
cmp
xchg
add
sub
jnp
adc
stos
pop
enter
aad
adc
lret
lds
jns
mov
sbb
xor
popf
sbb
adc
sub
inc
leave
enter
shlb
ret
out
ss
das
fucomi
divl
add
subl
mov
push
or
jle
or
mov
out
inc
inc
jg
movsl
aas
inc
imul
lock
xchg
mov
out
or
pop
outsl
mov
fsubs
fs
mov
xchg
pusha
shl
andb
cmpsl
fists
xchg
icebp
push
or
fcomps
cltd
stos
mov
ret
add
test
inc
out
orb
and
ds
fucomi
jmp
xchg
add
mov
in
ja
gs
cs
dec
lret
loop
stos
add
mov
push
sbb
lds
out
sar
sub
icebp
imul
jb
fldcw
mov
mov
or
jg
icebp
pop
or
dec
adc
fstpl
ljmp
push
jle
inc
loop
je
sbb
scas
and
inc
adc
inc
mov
xchg
inc
inc
arpl
jg
es
mov
das
push
cmp
std
popl
push
jp
into
add
ss
inc
stos
xchg
xor
pop
sarb
cmc
cltd
test
loop
push
or
sbb
mov
sbb
dec
mov
shr
lods
inc
call
adc
or
jbe
dec
pop
fadds
push
repz
cmp
inc
rcrb
fdivl
shrb
dec
lock
mov
cmp
ds
fsts
xor
ds
aam
xchg
sub
call
inc
cmc
xor
push
cmp
cmp
mov
shll
lods
sbb
or
in
mov
mov
sbb
aad
inc
xchg
xor
test
enter
lahf
fcomps
push
std
sarl
aad
xchg
xor
mov
mov
adc
inc
in
sbb
sub
dec
mov
das
cwtl
out
push
xchg
ss
add
adc
call
scas
sub
mov
cli
lds
divl
les
mov
lods
xchg
test
mov
push
mov
dec
add
adcl
inc
inc
test
push
std
ja
xchg
mov
pop
sub
ss
add
ljmp
cmpsb
test
sub
divps
mov
ret
xor
fcmovb
fdivrs
add
ds
test
mov
fcoml
pop
scas
call
sub
xchg
out
mov
mov
dec
or
or
out
out
xlat
inc
cmpsb
in
gs
cltd
test
mov
fmull
jg
mov
xchg
daa
test
out
ret
push
cltd
sti
sub
test
insl
adc
incl
hlt
dec
pop
add
xor
add
stc
push
xchg
int3
pop
and
xchg
pop
in
sbb
jae
sbb
cmp
xchg
leave
sub
sbb
jbe
fisttpl
imull
iret
test
lret
mov
adc
xchg
cltd
fs
fstpl
pop
or
mov
push
mov
xchg
test
push
lret
jnp
inc
insl
mov
and
xor
jp
add
cmp
movsl
test
sarb
jecxz
enter
test
fstl
sub
inc
cwtl
fcmovnu
mov
subl
xor
xchg
dec
pop
sub
in
inc
jle
shlb
mov
xor
loop
mov
stc
lea
jae
xchg
stos
add
shrl
aam
mov
out
push
out
fidivl
xchg
mov
repz
ficoms
std
jb
mov
jno
mov
es
mov
icebp
in
inc
sti
cmp
clc
subb
adc
dec
inc
push
enter
lret
loop
mov
mov
add
push
pop
jns
sub
add
aam
fcoms
fisttpl
in
in
sub
fistpl
fnstenv
repnz
pop
cmc
pop
std
iret
xchg
cwtl
or
fisttpll
out
pusha
sbbb
jp
xchg
sub
in
mov
mov
push
popf
xchg
sbb
nop
or
jo
mov
mov
push
cltd
daa
xor
sub
cmp
ret
dec
bound
fnstenv
pop
lods
add
lret
xchg
xor
jno
sbb
insl
add
data16
and
les
movsl
and
dec
mov
cmp
adc
int
sub
pop
repnz
dec
xor
pop
pop
dec
add
daa
loopne
add
ljmp
jmp
sub
sbb
leave
cld
cwtl
and
cmpl
lds
mov
cmpsl
jg
notb
loope
dec
fmulp
mov
xor
stc
pop
sub
sub
scas
cmp
fwait
pop
push
add
jmp
jp
loope
mov
fucom
shll
inc
or
stos
loop
add
pop
shlb
sub
push
or
cmc
xor
adc
std
xchg
push
dec
popa
enter
cmp
add
daa
and
dec
jae
shl
pop
imul
scas
mov
out
mov
fnstcw
sbb
xchg
mov
sbb
or
outsb
mov
jle
test
and
xchg
das
stos
stos
mov
inc
inc
jae
bound
fwait
add
lds
rorb
mov
xchg
sbbb
sbb
cmpsl
cmpsb
mov
je
adc
push
dec
adc
je
xchg
xchg
mov
aad
orl
fdivrs
jp
out
jmp
out
stos
push
fdivrs
add
dec
mov
nop
xlat
push
jmp
adc
pop
aaa
std
adc
test
lret
leave
iret
stc
xchg
inc
pop
scas
sahf
hlt
pop
in
cwtl
push
sti
adc
mov
sbb
decl
mov
jbe
push
push
xor
inc
not
push
jge
ljmp
jae
pop
leave
jle
mov
jnp
outsl
sub
inc
push
std
int
or
xor
xor
inc
pop
jle
pushf
into
rorl
lea
adc
or
xor
lock
bsr
jge
stos
push
xor
xor
ss
push
es
jae
inc
test
lock
divb
adc
imul
inc
das
mov
sub
push
fsubl
ret
lea
dec
jmp
inc
mov
pop
jo
sbb
sti
push
test
add
test
jmp
clc
or
incb
arpl
nop
sbb
and
pusha
ljmp
pop
cli
adc
sti
arpl
sbb
add
pop
shl
bound
cmpsl
movsl
push
xlat
mov
or
into
hlt
std
cmc
mov
or
cmp
sbb
addb
cld
push
jb
push
sub
dec
mov
mov
mov
adc
sbb
sti
lret
rol
in
cmpsb
and
repnz
movsb
movsb
sub
in
sti
outsb
test
addb
push
insl
mov
jge
leave
lcall
adc
jge
lds
dec
inc
mov
pop
enter
scas
lock
and
add
or
dec
repnz
rsqrtps
cmp
shll
push
jne
dec
into
test
loope
jmp
gs
lcall
xor
mov
mov
jnp
mov
popf
push
pop
fucomp
out
cmc
inc
mov
dec
xchg
insb
jge
sti
push
sbb
dec
mov
cli
jne
add
scas
and
push
push
lahf
xchg
fdivs
jg
sahf
push
jb
dec
call
adc
ret
popa
jp
adc
out
pop
xor
xchg
ljmp
ljmp
cmpsl
in
dec
ljmp
repz
inc
xchg
es
ss
xchg
adc
sub
mov
mov
inc
push
and
dec
pop
int
pusha
cmpsb
test
ss
jb
dec
mov
cmc
nopl
loope
shr
push
insb
sbb
inc
jne
sbb
icebp
adc
xchg
cmp
push
cmp
fildll
mov
jp
cli
dec
aad
out
inc
mov
aas
das
sbb
sub
xchg
in
xor
aad
int
test
jp
pmulhuw
sbb
fisubrl
fstpt
push
xchg
shlb
xchg
addr16
clc
stc
outsl
mov
insb
sbb
jae
stc
mov
push
or
jp
stos
daa
lret
push
sarb
mov
cmpsb
jl
lret
insb
daa
out
pop
push
out
iret
lods
add
mov
xchg
das
movsb
push
mov
lock
push
mov
ret
mov
xchg
cli
sbb
aam
pop
shrl
pop
inc
shll
push
xor
in
xor
pop
fwait
mov
cld
repnz
xor
jno
and
adc
repnz
and
lret
cmp
cmpsl
arpl
testl
mov
icebp
leave
imul
jg
sub
xchg
adc
test
test
sub
push
ja
negb
jae
orl
pop
sbbb
stos
fiadds
jae
les
add
or
xchg
inc
xchg
xor
jb
push
enter
push
or
xlat
out
negb
push
mov
and
pop
push
cmp
stc
nop
pop
test
jl
shlb
inc
jg
sub
jmp
push
leave
push
decb
push
js
testl
cwtl
add
jb
xchg
clc
aas
sbb
clc
cli
out
dec
pop
jle
sub
outsb
add
loop
adc
fadds
jb
movsl
push
jge
xchg
pop
mov
or
mov
mov
fstps
aaa
pop
mov
mov
cmp
fisubrs
call
outsb
dec
inc
inc
mov
jns,pn
sub
adc
dec
sub
cmp
aaa
jnp
push
into
xchg
push
cmp
inc
cmpsb
imul
sub
imul
and
sbb
mov
stc
mov
inc
mov
std
mov
adc
cld
xor
ja
pop
lods
adc
and
aad
mov
or
aam
inc
jge
sbb
outsl
fmuls
mov
aad
clc
inc
imul
push
jo
scas
xor
lea
ljmp
mov
jge
out
repnz
test
mov
test
pushf
dec
les
inc
jne
ret
sbb
int
xchg
push
pop
ficoms
adc
xchg
adc
jp
push
fs
std
sbb
lock
addb
divl
insl
lahf
mov
cmp
push
add
add
inc
mov
das
sbb
inc
inc
cld
push
addr16
mov
dec
pop
and
mov
push
mov
mov
call
mov
and
adc
mov
sub
mov
mov
repz
push
mov
gs
outsb
repz
xor
adc
sbb
inc
aaa
aad
add
or
out
push
add
cmp
xchg
jo
popf
push
xchg
stc
fs
mov
inc
push
daa
mov
imul
xchg
outsb
push
mov
cmp
push
inc
cltd
jno
pop
add
cmpsl
and
xchg
jmp
inc
ljmp
fstl
cltd
xor
and
fwait
je
insl
pop
sbb
fcomp
addr16
lret
icebp
add
push
mov
jg
xchg
cwtl
in
js
out
adc
push
pop
and
repz
lea
aad
sub
sbb
dec
sub
inc
mov
sahf
addl
mov
outsl
mov
jmp
xor
adc
test
mov
in
mov
add
enter
nop
stc
fadds
out
inc
inc
jo
adc
jl
mov
mov
xor
mov
lcall
lods
fmuls
mov
clc
leave
xchg
arpl
xchg
adc
and
adc
mov
pop
push
push
sbb
xor
mov
dec
adc
push
outsl
xor
in
rolb
test
push
inc
nop
loopne
mov
mov
xor
dec
jnp
xchg
inc
rorb
xor
enter
xchg
sahf
or
fcmove
pop
inc
push
sub
push
or
inc
mov
shrl
mov
aad
cmpsb
std
repnz
inc
ss
adc
iret
mov
jge
lock
fdivrl
and
mov
repz
push
lea
repnz
mov
aaa
popf
das
sbb
arpl
iret
pushf
cmp
lock
fidivl
jne
xor
popa
sbb
dec
xor
adc
dec
or
xor
scas
ficoml
fcompl
orl
out
and
adc
add
add
xchg
popa
outsl
hlt
fstl
inc
icebp
mov
jmp
lcall
add
repz
push
lret
incl
push
jns
sub
andl
ja
mov
jmp
out
jecxz
xor
test
add
jnp
in
rcrl
mov
and
shr
push
adc
sbb
pop
inc
mov
inc
ret
sub
inc
test
xchg
jge
sbb
and
mov
jmp
inc
imul
repz
ret
jge
inc
icebp
or
stos
jne
lods
das
mov
xor
inc
ret
or
std
push
push
hlt
cmp
xchg
ljmp
push
pop
xchg
or
lds
jp
pop
insl
pop
sub
and
fcoms
shl
jo
enter
fmulp
inc
movsb
jnp
call
cmc
dec
push
stc
out
fstpt
rcr
lods
mov
jo
mov
mov
dec
dec
mov
shrl
adc
sbb
ja
add
xor
mov
iret
mov
iret
xchg
test
and
mull
or
in
insl
sbb
xor
cmp
imul
fwait
mov
dec
insl
jmp
xchg
xor
clc
out
sub
test
call
push
sub
jge
push
inc
gs
ud0
jle
dec
push
mov
and
push
fdivrs
sub
mov
cmpsb
jo
pop
es
mov
push
pop
and
jp
mov
add
add
cltd
mov
cwtl
in
lods
xchg
iret
jne
loop
jo
lahf
les
sub
in
jno
xchg
mov
in
mov
sub
lea
fiaddl
pop
fdivl
push
cmp
fadds
sub
subb
leave
into
out
adc
adc
and
xchg
cwtl
ret
notl
sbb
rcl
dec
das
mov
or
push
mov
adc
repnz
nop
insb
inc
and
sbb
or
cmp
lods
bound
push
jge
pop
sub
push
adc
mov
ss
jnp
popa
ret
lahf
fidivs
inc
sbb
dec
and
inc
mov
lcall
inc
sbb
in
sub
mov
int
mov
repz
cmp
fdiv
mov
mov
addr16
inc
ficompl
cmc
test
mov
xor
cli
test
jl
daa
mov
stos
pop
mov
sbb
or
cmc
push
fiadds
out
loopne
ret
imul
xchg
push
loop
cmpsb
inc
inc
js
je
fnstsw
out
mov
daa
or
movsl
or
test
arpl
out
adc
fistpl
xchg
popl
mov
cld
clc
inc
mov
test
inc
dec
es
cmp
mov
pop
arpl
shr
cmp
imul
or
cmpsb
jl
inc
pop
sti
jno
add
ret
mov
xor
movsl
adc
dec
push
and
push
inc
les
xchg
ret
outsl
mov
mov
or
lds
inc
jno
popf
mov
adc
xchg
in
dec
mov
aad
ja
inc
and
xchg
and
mov
movsl
adc
mov
int
sahf
cmc
xor
cmpb
add
mov
aas
adc
pop
mov
sbb
addl
jno
sbb
add
push
lahf
mov
xchg
repz
sub
mov
clc
daa
jo
cmpl
jmp
pop
lret
inc
jns
xor
ret
imul
int3
std
filds
scas
or
cli
lods
jno
xchg
decl
in
nop
xchg
daa
push
loope
jecxz
pop
xchg
imul
aam
out
aas
bound
cmpsl
push
adc
mov
push
sub
insb
mov
test
push
in
nop
pop
test
push
dec
je
div
ret
xor
out
inc
cmpl
push
or
fwait
sub
sbb
notb
pop
adc
lret
or
sbb
push
ljmp
popf
push
cld
loopne
std
xor
adc
call
mov
stos
cmp
mov
mov
ss
cs
stos
out
lahf
fs
mov
outsl
movsb
mov
and
inc
sbb
pop
insl
aas
add
mov
mov
addr16
outsl
mov
add
loopne
outsb
adc
jae
pushl
jp
mov
fnstenv
or
and
mov
mov
jg
push
icebp
fnsave
xlat
and
dec
jmp
push
lea
xchg
cmp
jmp
fnstsw
imul
shll
xchg
push
mov
leave
mov
and
cmp
sub
mov
in
mov
mov
inc
adc
lock
pop
push
stos
test
or
cmp
js
and
lock
test
out
or
xchg
out
and
push
and
cmp
imul
ss
pop
arpl
and
inc
jbe
int3
xor
sub
fisubl
cmp
outsl
enter
cwtl
xor
mov
test
repz
jp
es
inc
dec
lock
sbb
aas
mov
into
cli
pop
mov
rolb
lea
add
adc
xor
push
les
cmpsb
in
lea
sbb
mov
jle
aaa
test
cmp
in
pop
movntps
pop
jge
xchg
pusha
cvttps2pi
adc
daa
shlb
push
adc
sahf
and
dec
lods
mov
ljmp
pop
cmc
repz
fisubrl
stos
cmp
gs
jo
imul
pop
fdivrs
mov
jns
gs
jle
xchg
inc
test
rep
out
jno
pop
push
aam
rcrl
mov
outsb
data16
test
aad
pop
push
movsb
das
iret
mov
push
insb
gs
popf
cwtl
ljmp
sbb
sub
add
lods
mov
mov
nop
icebp
mov
xchg
dec
mov
mov
imul
iret
iret
js
insb
adc
imul
ja
inc
test
jmp
ret
shlb
sbb
popf
or
and
in
bound
aad
enter
mov
or
ljmp
pop
add
mov
inc
shll
enter
lea
dec
gs
fucomp
fildl
loop
out
or
notb
pop
out
das
pop
nop
test
jne
xor
mov
push
push
xchg
int3
push
dec
fsubs
lods
xchg
jne
lret
fisubs
into
sub
ret
loope
mov
loopne
adc
inc
loope
inc
push
adc
and
cmp
std
clc
jecxz
adc
cmp
flds
out
xor
jo
xor
jo
movsb
loopne
lods
into
sbb
outsl
test
fwait
mov
mov
ss
pop
je
call
xchg
and
xchg
and
inc
xchg
test
dec
stos
pop
pop
iret
push
outsb
hlt
cli
mov
jle
add
push
xchg
mov
faddl
aas
movsb
dec
add
mov
pop
sbb
cmc
mov
sbb
aam
pop
or
out
sub
add
dec
pop
cmp
add
cwtl
xor
inc
push
test
iret
mov
cmpsl
subl
aam
stos
jae
shll
mov
xchg
pop
mov
jb
fmull
stos
fimuls
shrl
divl
add
aam
sbbl
rcrl
inc
pushl
mov
add
lea
dec
xor
xor
cmp
pop
lds
out
xchg
test
ja
aad
outsb
imul
movsb
jmp
add
fadd
mov
xchg
arpl
out
cmpsl
les
push
mov
nop
inc
cmp
inc
cmp
xchg
push
xlat
fisubrl
lods
sbb
je
ret
lock
sti
fs
mov
jge
sub
mov
cmp
cmp
cmp
add
jne
adc
and
mov
mov
loop
jle
aad
adc
dec
pop
and
push
lods
test
xchg
scas
jmp
xor
add
xlat
in
inc
int
adc
mov
icebp
pop
aad
xchg
dec
xor
in
cmc
ds
and
push
out
sti
mov
fcoml
movsl
pop
enter
imul
mov
imul
movsb
test
jle
sub
outsb
push
dec
ja
pop
outsb
mov
mov
insl
rcl
jo
sbb
add
jne
fisubrl
imul
out
mov
ret
xchg
daa
pop
push
adc
pop
pop
cmp
aas
and
mov
lods
mov
popa
or
jp
cwtl
sbb
pop
inc
xchg
hlt
in
ljmp
cs
xor
xor
fdivl
sub
dec
fstpt
mov
jnp
push
xchg
pop
inc
cmpsl
lock
jg
cmp
xchg
dec
mov
lahf
outsl
add
int
outsb
faddl
xchg
sahf
mov
sar
add
repnz
movsl
ret
xchg
mov
imul
aas
clc
push
xor
insl
in
xchg
sbb
mov
cmp
push
rcr
xchg
add
popa
mov
sbb
ret
jp
jo
je
fistps
cld
mov
icebp
orl
pop
inc
push
adc
cltd
or
jle
dec
iret
sti
xchg
sub
xchg
mov
and
sahf
les
les
jg
xor
popa
outsb
not
arpl
cmp
ljmp
mov
jae
push
push
push
int
into
push
add
push
and
scas
push
xchg
or
aam
xchg
shll
repz
les
notb
fnstsw
aad
xorl
lret
add
pop
fsubs
aaa
xor
inc
inc
mov
add
and
sub
mov
or
mov
in
hlt
clc
mov
leave
inc
aas
mov
push
jmp
inc
cmp
pop
lds
das
fwait
inc
add
dec
push
sub
push
sbb
xlat
xchg
movsb
out
and
repz
out
inc
push
lret
push
and
cwtl
fabs
lods
sbbb
adc
cmpsb
xor
jg
push
hlt
movsb
rclb
xchg
sbb
add
push
xor
subb
fs
mov
mov
push
cmp
or
mov
cmp
stc
sub
daa
repnz
mov
lock
movsb
setp
fbld
sti
imul
and
jne
inc
in
nop
and
adc
push
inc
pop
dec
repz
xchg
pushf
fisubl
jg
add
push
fnsave
jp
cmp
sarl
jecxz
cld
fsubrp
or
mov
imul
outsb
dec
add
lret
adc
xor
into
add
test
cmpsb
dec
clc
hlt
fistpll
mov
out
out
mov
and
mov
lea
sbb
daa
loop
pop
mov
in
adc
ret
and
or
or
gs
daa
fimuls
fimull
mov
sub
lea
shrb
je
fidivrs
mov
xor
jae
mov
stos
shl
mov
mov
rclb
movsb
cmpsl
daa
dec
sbbl
pop
sbb
sub
popa
aam
clc
jne
add
daa
sti
push
jl
daa
xchg
ja
sub
mov
jnp
push
sub
cmpsl
cmc
mov
cltd
mov
adc
jns
dec
pop
shll
or
mov
push
fmul
inc
cld
in
xor
jae
adc
les
es
flds
ss
jbe
insl
xchg
mov
xor
pop
insl
stos
das
push
or
test
dec
push
hlt
or
or
sub
xchg
sub
ss
int
pop
js
incl
ss
ret
movb
fcoms
or
add
cmp
jmp
outsb
pusha
int3
test
xor
xchg
add
add
xchg
cmc
sbb
pop
jmp
jnp
idiv
xchg
mov
cmp
fists
xchg
xor
sahf
xchg
mov
add
cmp
mov
lea
push
push
xor
or
lds
push
pop
adc
cmc
or
cltd
cmp
loopne
add
inc
cld
jmp
shl
xchg
jg
jns
das
inc
mov
cmp
jge
out
gs
sti
mov
sbb
add
fists
sbb
out
inc
pop
jns
bound
fcmovnu
or
insl
mov
jnp
mov
push
movsb
mov
mov
sbb
sub
roll
xor
jb
fs
clc
ret
out
dec
cli
or
sub
mov
sub
lods
mov
push
push
xor
sbb
insl
jp
pop
stos
jg
loopne
out
outsb
in
pop
adc
cmp
cmp
and
je
mov
add
test
push
test
push
push
shl
xor
ret
cmp
sbb
cs
pop
fistpll
cli
mov
cld
add
pushf
adc
pushl
lcall
mov
icebp
sbb
sub
pusha
gs
add
pop
dec
dec
xchg
in
inc
jge
out
push
cmc
xchg
sbb
aaa
pop
fdivrp
jle
push
inc
ljmp
enter
jg
mov
subb
rolb
imul
imul
jge
fwait
jbe
adc
aaa
es
push
pop
int3
out
mov
test
xchg
cmp
xor
push
cmp
mov
pop
ja
stc
insl
scas
movl
sub
fs
dec
stc
xchg
aaa
ret
dec
jmp
clc
popl
xchg
orb
insl
fcomi
fcomip
ljmp
jno
mov
popa
dec
out
mov
cmp
int3
in
call
jle
repz
or
shl
test
outsl
mov
xchg
and
pop
lret
pop
jne
lods
pusha
lock
xchg
sub
dec
dec
daa
loopne
scas
hlt
and
jg
test
add
sbb
cmp
sbb
fxsave
push
mov
lds
pushf
push
lods
adc
inc
divl
dec
lea
push
inc
and
shrb
ljmp
xchg
int3
nop
cli
jecxz
pop
jg
sub
call
add
cmp
jecxz
subl
out
pop
loopne
sub
test
sub
jb
inc
cli
and
and
aam
mov
sub
push
rcr
jne
fmul
int
jnp
xchg
cmc
and
insb
inc
pop
mov
xor
mov
rorb
pop
sub
in
dec
push
xlat
jmp
test
xor
sti
out
jnp
insb
call
push
test
inc
sbb
fs
xor
inc
xor
andl
jp
or
pop
sub
pusha
and
fbld
jns
or
cli
orb
dec
jne
and
lret
dec
sar
mov
push
movsb
adc
inc
mov
xor
cld
cwtl
in
fsubl
push
enter
sub
add
sbb
fsubrp
orb
cli
js
mov
inc
or
dec
das
push
imul
jb
mov
lcall
in
hlt
cmpsb
cld
pop
adc
push
ds
add
sub
sbb
sbbl
and
pop
les
pminsw
lods
leave
and
cli
dec
sub
cmp
ja
jmp
push
jmp
cld
xor
sub
xchg
mov
and
in
xchg
js
outsl
add
outsb
shll
scas
sbb
test
movsl
mov
lret
jns
icebp
jno
mov
flds
jno
rorb
roll
fistl
sub
leave
int
cmp
in
ss
push
mov
push
jl
jecxz
xor
xor
mov
pop
dec
outsl
dec
popa
daa
cmp
mov
inc
fsubs
jo
loopne
jo
fmull
aam
mov
fcmovnb
test
rorl
push
and
les
int3
out
jo
mov
pop
lods
pop
in
sbb
sbbb
lods
add
cmp
add
hlt
std
and
clc
xchg
add
pop
jno
imull
mov
push
xor
sahf
lahf
sar
jne
push
jne
jle
pop
sbb
xor
xor
mov
jmp
and
sti
sarl
stc
mov
dec
push
lcall
pop
ret
push
adc
movsl
jno
or
fsubs
addr16
std
fwait
mov
dec
testl
stos
cs
adc
jg
enter
clc
int3
outsb
loopne
mov
xor
fldcw
xchg
mov
mov
in
popf
xor
cmp
jns
into
or
push
lods
pushf
mov
or
mov
dec
movsb
mov
xor
sbb
pushf
shll
pop
inc
or
sbb
mov
sub
scas
or
jg
jg
xor
dec
in
ret
fidivrs
push
fs
repnz
insb
jmp
mov
imul
ficompl
lds
dec
pop
out
shll
mov
fwait
jmp
cld
outsb
and
fsubrp
push
out
pop
jle
cltd
jnp
repz
xchg
pop
and
in
mov
inc
pushf
jae
add
ret
mov
push
in
outsl
addr16
add
sub
adc
mov
jnp
dec
and
sub
sub
push
pushl
in
sub
push
push
aad
insl
xchg
lods
ficoms
addr16
dec
mov
incb
add
adc
repnz
aam
ret
xchg
aad
jns
dec
loope
lds
mov
cli
push
cmc
gs
mov
icebp
inc
inc
add
pop
sub
add
clc
fsubs
jge
in
popf
insb
ljmp
mov
cs
scas
addb
les
jecxz
sar
xchg
ja,pn
das
stc
stos
xchg
iret
aad
inc
add
mov
push
sub
popa
sti
pop
and
out
fnsave
iret
sub
jb
rol
cwtl
pop
shlb
int3
cmp
cmc
inc
fs
mov
push
lret
jecxz
rcl
cwtl
fistl
push
in
mov
sti
push
lock
and
push
pop
lods
aaa
jo
xor
pop
mov
fcoml
repnz
jle
sub
push
pop
std
sbb
mov
das
cmp
lret
lret
fcoml
mov
stos
adc
icebp
xor
scas
out
xlat
adc
fmull
pusha
xchg
inc
bound
sub
test
xchg
jbe
add
mov
int
push
sahf
pop
sbb
lds
mov
inc
cmp
mov
sbb
and
rol
or
sub
inc
mov
sub
mov
sub
cmp
shlb
dec
es
inc
xor
ffree
jns
and
adc
mov
and
mov
gs
in
fwait
adc
inc
or
mov
xor
inc
lret
lahf
test
and
imul
cs
shrl
dec
cltd
loopne
push
insb
rcrl
cld
xor
les
pop
dec
jno
sbb
pop
mov
orl
fmul
jl
cmpsl
mov
or
clc
or
test
jne
and
xchg
cmp
test
fadds
fnstcw
in
inc
dec
push
lcall
xchg
mov
clc
nop
xor
jl
push
mov
andl
out
das
jb
insl
sbb
cmp
mov
mov
lods
sbb
in
jmp
pop
pop
jno
add
inc
popa
inc
sub
sbb
inc
call
ror
jmp
xor
clc
xchg
dec
dec
cld
shrl
dec
pop
jge
mov
xchg
mov
stos
inc
sub
test
add
xchg
in
sbbb
push
movsl
std
inc
or
add
or
lcall
lods
lret
xchg
adc
lret
fdiv
test
pop
mov
jnp
call
xchg
test
dec
mov
fidivl
pop
lods
dec
dec
lea
rclb
repz
mov
mov
mov
lret
jle
sbb
inc
push
cmp
std
push
int3
addl
add
mov
adc
loopne
pop
and
fists
ljmp
mov
inc
movsl
push
cmp
push
push
pop
shrb
adc
je
insl
ja
add
push
es
ret
pcmpeqb
add
lds
shrl
in
sub
orl
or
inc
in
pop
scas
je
pop
outsb
insl
mov
jle
popf
in
int
adc
lock
ss
lcall
ljmp
inc
int3
jmp
enter
jecxz
mov
lods
cmp
push
lds
jne
cmp
stc
push
pop
test
mov
sbb
mov
dec
xor
dec
dec
dec
pop
outsb
sti
loop
popf
rorb
jmp
pop
lea
es
sbb
inc
int
sar
dec
movsl
aad
xchg
aaa
fcoms
scas
cmp
scas
adc
pop
pop
lods
insl
inc
aad
sbb
jecxz
call
and
xor
imul
negl
xor
jp
jo
jnp
dec
jno
add
je
das
xchg
add
jmp
xchg
ljmp
shl
lcall
and
mov
ret
inc
mov
sub
dec
test
xor
add
push
lret
push
sbb
adc
sbb
adc
mov
rcl
push
dec
jbe
sbb
sub
mov
mov
loopne
ret
jo
push
ss
popa
adc
lods
int
lock
bswap
add
scas
andl
jo
cmp
in
jbe
jnp
dec
insl
mov
fistps
inc
fsubs
mov
and
or
in
jecxz
xchg
dec
or
mov
and
scas
dec
inc
inc
shll
dec
mov
xchg
push
push
test
lods
loop
mov
imul
cmp
dec
gs
mov
inc
in
pusha
hlt
jmp
push
out
pushf
fldl
push
sbb
movsl
mov
xchg
and
fs
fdivl
dec
inc
cpuid
in
inc
cmpsl
pop
and
lds
xor
push
jnp
lahf
adc
clc
mov
sub
jmp
xor
ret
mov
stos
jmp
out
push
pushf
sbb
lock
cmpsb
mov
and
add
mov
cmp
jae
pop
push
ljmp
lcall
fmulp
pushf
add
mov
stc
push
daa
pop
or
inc
or
mov
shlb
add
mov
dec
xlat
ljmp
inc
ja
scas
mov
pushf
jl
ss
cld
xchg
ja
sub
and
xchg
das
lahf
mov
adc
iret
lods
inc
dec
fildll
mov
idiv
cli
sbb
je
xor
adc
push
enter
dec
mov
mov
loop
ret
mov
sub
and
sub
pop
cmp
xor
cld
mov
add
adc
xchg
ljmp
jnp
jmp
pop
test
pushf
xor
outsb
adc
push
cmpsb
aam
ljmp
sbb
shl
call
out
movsl
xchg
sarb
icebp
sbb
mov
sarb
mov
xchg
or
dec
sarb
push
mov
pop
dec
adc
fs
movsl
aad
xchg
adc
mov
movsl
inc
ja
sub
daa
ret
lahf
and
icebp
inc
push
adc
adc
std
cmp
sub
mov
js
inc
enter
pop
inc
dec
insb
lret
sub
jae
mov
out
add
subl
add
inc
lods
xchg
dec
push
xchg
test
lahf
into
out
or
push
mov
stos
pop
imul
insb
les
add
insl
mov
or
sub
jns
push
movl
cli
xor
or
ds
sbb
imul
xchg
inc
mov
loop
repnz
xorl
addr16
xchg
daa
lcall
lcall
xchg
sub
nop
dec
mov
xchg
sub
cmp
pop
mov
subl
or
dec
dec
inc
fnstsw
addb
and
inc
adc
inc
pop
sbb
orb
mov
test
inc
jp
inc
jns
iret
in
inc
mov
sub
testl
ds
mov
iret
adc
mov
xor
pop
out
ljmp
xor
mov
into
xchg
scas
das
adc
mov
pop
movsb
cs
repnz
dec
pushf
inc
jg
fcomp
xchg
sti
mov
mov
xor
ret
enter
int3
cmp
das
inc
lea
cmc
out
add
pop
xchg
mov
pop
fildl
aam
aam
xchg
dec
scas
scas
out
add
std
popa
jge
repz
or
int3
push
jle
mov
jecxz
ret
sub
add
or
shl
pop
cltd
popf
mov
adc
ja
mov
in
mov
cltd
inc
mov
cmpsl
hlt
in
pop
je
cmp
lret
mov
je
xor
jo
add
js
jne
shll
sub
xchg
jmp
and
fdivrs
loop
xchg
add
das
ja
xchg
sbb
push
das
loop
mov
rclb
dec
movsl
movsl
dec
aam
sbb
mov
and
add
sub
or
mov
xor
and
or
shl
adc
out
mov
pop
inc
adc
mov
or
sbb
sbb
xor
mov
in
xchg
mov
mov
cmp
ficomps
lock
jmp
jle
or
jns
outsb
leave
and
fimull
scas
pop
mov
iret
dec
sub
sahf
sbb
xor
adcl
push
hlt
in
enter
and
sub
sub
xchg
std
mov
add
xor
fildl
aas
push
std
into
test
mov
mov
jbe
push
adc
cmp
jnp
mov
testl
cmpl
xchg
jns
cmpsl
cmpsb
push
sbb
popf
repz
cli
rcl
xchg
loopne
cmpsl
jp
insb
outsb
inc
add
clc
sub
xor
lret
jbe
cmpps
faddl
fcmovnb
jmp
stc
push
xor
inc
icebp
rol
jle
loopne
nop
test
push
cmpb
jecxz
push
subb
mov
push
or
js
jbe
bnd
outsl
jo
mov
mov
add
test
iret
cld
ja
shlb
test
cmp
pop
loop
cmp
mov
inc
orb
lods
push
adc
outsb
pop
jae
fldenv
xor
idivl
das
mov
and
lret
push
cmpsb
sti
jno
stos
push
push
jo
scas
pop
mov
adc
add
pop
aas
repz
dec
mov
pop
jecxz,pt
pop
push
aaa
movsb
and
mov
je
mov
lcall
pop
inc
scas
push
jbe
mov
jns
getsec
xor
shrb
mov
push
mov
mov
addr16
andl
je
push
insl
mov
fld1
push
nop
rcr
push
push
jne
inc
mov
insl
iret
lret
inc
clc
fsubrl
inc
std
push
inc
nop
fistl
stc
inc
xchg
jno
cmc
push
adc
xchg
jg
and
xor
sbb
inc
dec
lcall
jge
mov
int
loope
fsubs
jb
mov
addr16
lea
cs
cwtl
js,pn
dec
jmp
shrb
xor
xchg
and
addl
mov
jmp
cmp
lcall
jnp
mov
mov
and
negl
mov
iret
pusha
loope
inc
cmc
cli
mov
sub
mov
in
imul
lret
or
xchg
sub
pop
jno
push
out
lea
sub
mov
testl
insb
cmp
pop
and
xlat
ds
jns
inc
inc
leave
in
sub
inc
fidivrs
dec
out
sub
xchg
sub
pop
sbb
jl
dec
push
sub
pop
pop
push
movb
jmp
push
into
rorb
cli
push
push
ss
test
jns
mov
dec
in
or
insl
push
gs
or
ret
mov
mov
test
pop
sub
lahf
or
or
pop
fwait
mov
push
dec
dec
lods
mov
adc
ret
and
or
sbb
es
cmpsl
mov
mov
cmp
and
insl
xor
jecxz
sub
pop
data16
lahf
mov
ds
out
lret
xor
push
dec
lock
jne
mov
push
lds
pop
lahf
jns
out
or
and
add
out
iret
or
push
or
xor
das
or
mov
xchg
sbb
fwait
ja
leave
jno
repnz
dec
fucomi
test
loopne
pop
adc
or
test
or
cmp
cmp
xor
aad
adc
pop
icebp
rcll
lods
addr16
mov
pop
xor
dec
dec
add
fdecstp
lea
in
lods
mov
cmp
out
sub
jno
push
loope
aaa
jbe
push
fstps
xor
sub
dec
sbb
out
add
repz
fs
mov
xor
pop
test
mov
lock
repz
mov
lcall
dec
mov
jg
dec
ljmp
nop
rclb
dec
fsubrs
mov
pop
or
outsb
xchg
mov
in
in
sub
rol
xchg
lret
mov
adc
jne
call
xchg
test
lahf
mov
jmp
add
fmull
jmp
mov
adc
sbb
xchg
and
addr16
ret
dec
aas
imul
test
mov
pop
shll
test
jl
gs
cltd
mov
jns
and
or
push
adc
mov
push
cmpb
fnstcw
repz
xor
lret
cmpsl
push
mov
pop
lods
push
mov
leave
adc
fadd
popa
out
or
ret
je
xrelease
cmp
ds
or
cmp
es
lods
adc
mov
jno
in
sub
es
addr16
push
loope
dec
sbb
cs
fsts
das
rcrl
mov
mov
pop
jo
inc
rorl
push
cli
mov
mov
popf
xor
sub
dec
in
sub
xchg
xchg
and
pop
imul
sub
ret
ret
mov
pop
push
cltd
sub
inc
test
cmp
xchg
mov
dec
pop
jbe
popf
stos
sub
cld
adc
add
sbbl
mov
ffree
data16
push
cmc
data16
dec
pop
cmp
ficoml
data16
xor
dec
push
cmc
ds
add
sub
notl
pop
push
mov
cli
insl
inc
leave
or
or
mov
lcall
lret
adc
movsl
bound
dec
jbe
ret
stos
jle
inc
data16
dec
lahf
pop
mov
mov
sti
mov
sbb
dec
sarl
push
and
push
or
xor
lea
test
jb
push
std
cli
push
mov
je
jae
shll
aas
orl
les
sub
cmpsl
cltd
mov
lahf
pusha
lea
mov
cli
dec
leave
pusha
mov
adc
dec
cmpb
or
or
dec
mov
shlb
add
iret
std
jb
xlat
movsl
mov
std
or
loop
in
ljmp
add
xchg
push
mov
mov
cmpsb
imul
movsb
imul
rolb
je
in
xchg
test
and
mov
cmpsb
int3
inc
das
xchg
jno
adc
mov
mov
imul
clc
pop
outsb
xchg
das
lcall
dec
inc
jecxz
les
ffree
push
pushf
cmp
hlt
and
imul
rol
pop
ja
mov
imul
adc
mov
dec
or
sahf
push
call
in
xchg
lcall
jmp
sub
mov
adc
jbe
mov
sbb
inc
mov
push
xor
andb
shr
outsb
lret
sub
jp
enter
ds
push
adc
in
inc
inc
and
xor
xor
stc
das
cmpb
ret
stos
cmpsb
daa
imul
dec
sti
lock
movb
sbb
xchg
push
inc
mov
ja
sub
push
negl
cmpsb
sarb
or
or
dec
jbe
jns
cltd
add
adcl
jo
call
xchg
cld
xor
push
jl
jb
sub
inc
int
add
lahf
stos
js,pt
mov
jns
imull
popf
inc
ret
aad
push
pop
fwait
add
inc
and
gs
push
andb
push
mov
inc
pop
push
xchg
jp
or
fisubl
rcl
xchg
leave
in
xlat
mov
mov
mov
std
or
in
repz
ret
xchg
adc
pop
daa
and
outsb
insl
push
push
andb
mov
mov
into
lods
cmpsl
sbb
je
lds
in
shlb
aas
clc
aas
popa
xchg
xor
inc
js
filds
sbb
popa
les
ret
es
call
mov
or
dec
mov
adc
lret
cmp
sti
mov
aaa
pop
jne
cwtl
mul
sub
xchg
mov
ljmp
ja
int3
rolb
nop
test
int3
xor
out
mov
imul
and
ss
inc
pop
push
jmp
or
xchg
fisubrl
mov
or
outsl
int
cmp
dec
push
add
inc
fidivs
jmp
push
ja
xchg
cld
or
aas
dec
xchg
cwtl
outsb
add
test
pop
ffreep
insb
jns
jno
jp
jp
inc
scas
pop
clc
xchg
icebp
dec
add
aaa
pushf
adc
push
jnp
mov
inc
push
xchg
push
test
call
data16
test
cmp
in
mov
out
cmp
testl
aam
or
movl
sahf
and
stos
decb
xor
fimull
mov
je
cld
sub
xchg
ret
adc
das
sbb
dec
pop
jae
sub
lea
push
out
and
cmp
and
add
enter
das
loope
imul
imul
pop
mov
mov
fcompl
sub
leave
xor
mov
aas
mov
and
fmuls
gs
adc
push
push
jbe
loope
cmp
ljmp
sbb
lock
sub
jno
shlb
fisubrl
enter
xchg
xchg
shlb
jnp
pushf
jg
je
in
lods
test
sbb
or
sub
lcall
push
sbb
js
notl
inc
mov
dec
sbb
add
mulps
lods
pop
inc
cwtl
stos
enter
sbb
or
out
add
fwait
testb
jne
dec
jmp
enter
inc
jnp
aam
dec
mov
ret
cli
sub
out
es
inc
mov
bound
movsb
jecxz
stos
popf
arpl
ret
adc
loopne
cmp
pop
rolb
fldcw
jb
pop
cmp
test
test
xor
inc
inc
call
fs
subb
xchg
mov
out
pop
loopne
xchg
testb
jge
mov
mov
sahf
mov
add
mov
xor
daa
in
idiv
cmc
lcall
xor
ret
push
add
mov
lahf
inc
and
ljmp
jo
and
fnstenv
jl
std
out
pop
dec
cmpsl
mov
pop
cld
push
cmp
loope
es
push
mov
inc
movsl
ret
fstpl
mov
inc
sbb
sub
mov
sbb
test
lret
or
imul
dec
dec
fidivrl
xor
popf
xchg
add
mov
cs
aas
int
sarb
jp
ljmp
or
and
adc
sub
cmp
int
ret
fidivl
sbb
sbb
sub
or
cmp
rorl
mov
mov
cmpsb
cmpsb
jmp
test
in
or
jns
xor
setbe
sbb
sbb
inc
mov
xorl
dec
mov
or
enter
fnstsw
adc
inc
mov
add
xchg
incb
push
xor
sbb
xchg
testb
inc
push
bound
aas
xor
shl
mov
xlat
inc
mov
mov
jmp
xchg
fs
sub
stos
fs
jae
cmpl
hlt
and
loopne
fs
push
outsb
fstpl
jp
loopne
mov
or
repz
dec
xchg
std
call
incb
adc
mov
pop
cmp
scas
lahf
inc
push
lea
push
testb
sub
add
test
cmc
out
insl
mov
lods
rcll
into
pusha
pop
leave
pop
inc
and
sub
fistpll
xchg
imul
jp
mov
cmpb
iret
lret
cmp
je
push
cmp
out
sub
into
inc
sbb
into
push
add
mov
push
out
out
repnz
and
cs
or
push
outsl
frndint
push
push
sbb
or
or
push
cmp
jns
sar
mov
scas
clc
inc
or
xchg
clc
dec
jnp
xor
pop
dec
dec
cmc
sbb
xor
pop
jae
pop
add
cltd
sarl
push
fildll
push
sarl
fs
fdivl
xor
lea
sub
mov
pop
nop
pop
dec
sub
frstor
adc
hlt
inc
push
or
pop
pusha
pop
sub
lahf
push
lods
add
sarl
jg
pop
in
and
int
mov
inc
enter
rorb
repz
scas
and
push
ljmp
push
mov
push
out
pop
mov
or
ja
mov
arpl
jae
bound
js
sub
inc
mov
pop
inc
sub
push
aam
leave
sbb
mov
pop
clc
and
mov
stc
push
mov
sub
xor
jmp
int
mov
and
xchg
shrl
aad
sarl
leave
loope
mov
je
test
fmull
inc
mov
insl
adc
cmpsb
pop
stc
jne
pop
out
sbb
or
neg
dec
je
into
sub
lea
dec
imul
jg
sbb
or
fwait
ja
mov
daa
mov
fbstp
mov
xchg
mov
xchg
arpl
jb
pop
jns
js
fiaddl
out
or
cld
mov
push
and
decb
add
cmpb
adc
test
test
inc
mov
outsb
gs
inc
mov
rol
rclb
gs
lcall
cmp
in
lret
hlt
repz
cmp
lea
fisubrs
sub
mov
jle
or
dec
mov
shll
std
fildll
dec
mov
sahf
pusha
fs
pop
nop
mov
daa
dec
jo
xor
into
movsl
rcr
push
imul
fdivrl
inc
shll
jae
loope
xlat
and
sub
jo
arpl
mov
jp
and
adc
das
mov
mov
test
pop
push
fisubrs
iret
add
idivl
push
push
sub
imul
and
inc
rcrb
add
cmp
insb
mov
pop
out
inc
adc
aad
imul
out
cmpl
xchg
pop
dec
test
sub
cmp
fisttps
mov
push
daa
imul
pop
daa
xlat
fdiv
lods
xchg
cmp
leave
insb
mov
inc
div
icebp
popf
sbb
hlt
loopne
in
jmp
cmp
movsl
jge
popa
dec
lret
test
inc
jmp
ss
mov
add
imul
push
outsl
repz
push
sahf
out
xchg
push
xchg
lahf
fiaddl
cmpsl
dec
push
or
int3
fldl
xor
test
sub
icebp
pop
outsl
insl
inc
fs
mov
faddl
mov
icebp
mov
jecxz
mov
push
push
lods
ret
aas
xchg
push
je
and
lahf
push
mov
jmp
mov
adc
push
sub
sbb
rolb
outsl
push
inc
pusha
push
std
dec
mov
inc
pop
rcrl
hlt
pusha
add
cmp
int
push
jle
lods
mov
addr16
and
addr16
arpl
lods
lods
sub
mov
push
ficoml
push
cmp
add
jecxz
push
popf
add
cwtl
pop
out
dec
ficompl
cmp
mov
mov
inc
imul
test
and
sarb
sub
inc
sbb
flds
push
pop
adc
insb
arpl
adc
and
idivb
mov
push
andb
sti
cmp
push
adc
das
mov
pop
fcom
sub
sti
popf
pop
mov
push
subb
out
mov
mov
subl
clc
xchg
mov
outsb
xchg
subb
sarl
test
adc
jb
jnp
outsl
mov
mov
and
leave
fsub
xor
rclb
hlt
jecxz
sarl
les
das
push
adc
cmp
movsb
push
cmpsb
or
cmc
lcall
sbb
push
inc
ds
in
cmp
loop
or
push
inc
mov
test
ficomps
addl
mov
xchg
mov
pop
dec
sbb
sti
or
scas
mov
jecxz
pop
pop
das
xor
ja
jae
mov
push
xor
adc
pop
sub
cltd
aaa
int
jle
out
and
mov
out
cs
cmp
and
je
mov
mov
mov
xchg
jae
mov
std
sub
popa
mov
ficoml
loop
add
cmp
in
xor
fsubl
jge
daa
push
cmp
and
subl
cmp
aaa
lcall
mov
push
arpl
ja
dec
jae
and
adc
xchg
cmpsl
add
or
das
xor
fidivrs
jae
push
test
bound
cs
std
push
aam
das
lcall
xchg
mov
dec
mov
push
in
xchg
cwtl
add
dec
mov
xchg
cmp
lea
int
mov
xlat
xchg
xor
dec
xor
imul
outsb
inc
nop
sbb
dec
mov
ljmp
mov
call
aam
test
outsl
mov
inc
xor
sbb
mov
or
subl
push
aaa
jo
pop
inc
sti
scas
pop
ret
xchg
pop
stos
and
pop
shlb
sub
fs
cld
mov
sahf
addl
xor
insb
and
clc
cmpsb
outsl
insl
sbb
adc
xchg
mov
aad
pop
call
dec
je
adc
test
xchg
cli
fmulp
andb
or
es
lret
mov
stos
mov
lret
stos
push
cltd
icebp
xchg
ret
lds
or
movsb
movsl
pop
xchg
jle
jl
dec
int
mov
adc
insb
outsb
lods
adc
pop
mov
ljmp
mov
xor
out
jmp
adc
cmc
daa
mov
jle
bound
mov
in
sbb
ficoml
icebp
jg
cmpb
push
mov
mov
rcr
xchg
das
xchg
icebp
mov
cmp
mov
sbb
push
or
add
jge
xlat
mov
aas
sub
aaa
xchg
repnz
cwtl
fcomip
pop
sbb
xchg
dec
repnz
push
pop
jle
out
bound
addl
imul
jns
sbb
iret
dec
mov
ljmp
cmp
add
inc
cltd
daa
aas
cmpsb
enter
xor
nop
lcall
hlt
mov
and
bound
data16
pop
aaa
ds
fstpl
sub
ret
rcrb
loope
divl
jmp
shr
andl
pop
sbb
pop
mov
popa
inc
xor
test
ljmp
xor
sarl
repnz
pop
pop
sahf
push
inc
mov
mov
push
mov
dec
mov
movb
xchg
insl
int3
bound
mov
fistpll
add
notl
test
sti
xchg
clc
dec
cmp
popf
fs
jmp
movsl
inc
xor
sub
mov
jne
push
mov
out
pop
pop
push
loope
add
pop
mov
adc
xchg
and
mov
mov
xor
fisubl
pop
mov
add
sbb
dec
dec
mov
pop
xor
xor
push
pop
jne
fsubrs
cmp
insb
adc
imull
mov
arpl
lods
movsb
mov
pop
daa
push
add
lea
outsl
pop
out
cmp
or
push
or
xor
leave
inc
imul
ljmp
mov
mov
loope
add
mov
pop
mov
adc
mov
add
pop
int3
movsl
rolb
ss
push
inc
rclb
cmpsb
shrl
je
aaa
add
sub
adc
cli
xor
adc
add
xchg
pop
and
push
xor
and
iret
hlt
mov
mov
or
shrb
xor
pminsw
and
movl
repz
lods
repnz
jl
popa
push
mull
fbld
addr16
inc
in
enter
push
or
cltd
pop
or
shrl
rcll
pop
faddl
sahf
cli
test
cwtl
pop
cmp
mov
dec
xchg
lods
les
cmp
sti
mov
jbe
jle
mov
fsts
cmpsb
mov
xor
out
es
push
pop
inc
mov
aam
xor
push
mov
xchg
ljmp
jne
and
xchg
outsb
loop
mov
cmp
mov
mov
push
or
sbb
xchg
arpl
fnstsw
fldl
cmc
jnp
xchg
cwtl
pop
dec
fildl
mov
gs
out
and
or
push
mov
sub
mov
jno
gs
pushf
in
cmpsb
shll
add
jecxz
jns
mov
mov
imul
jno
push
mov
mov
pop
fs
setl
jb
mov
pusha
jns
lret
xor
inc
adc
push
push
in
add
outsb
clc
out
add
dec
xchg
fsqrt
bound
outsb
dec
lock
or
mov
mov
es
addr16
adc
aam
push
hlt
dec
test
pop
call
filds
out
repnz
scas
lods
xlat
inc
loopne
pop
push
lods
shrb
fs
dec
sbb
jno
jns
jns
inc
cmpsb
fisubs
sub
and
or
inc
xor
scas
mov
stc
cltd
lret
pusha
sub
jbe
rclb
out
repz
mov
popa
rcll
repnz
cmp
out
fists
sti
les
push
pop
jbe
addl
or
jecxz
mov
loopne
into
add
or
jnp
sub
loop
mov
mov
pusha
sbb
xorl
test
pop
jle
fadds
enter
hlt
shl
sub
cmp
movsl
fwait
jg
and
pusha
inc
pop
loop
mov
fs
in
inc
xchg
in
mov
mov
jecxz
or
push
movsl
test
or
push
js
cmpsl
jo
xchg
jo
sub
sub
out
mov
outsb
mov
mov
test
sahf
fwait
int
inc
rclb
in
lahf
mov
insb
push
add
incl
add
out
shll
enter
cmp
je
push
inc
jnp
decb
cmp
outsl
mov
add
fsubl
fdivs
push
aad
cmp
inc
lock
jmp
into
cmp
inc
hlt
loop
xor
sub
jecxz
inc
mov
inc
test
mov
je
pop
mov
or
sub
xchg
pushf
aad
ret
pop
adc
jb
loopne
insl
mov
das
cmp
cmp
push
dec
mov
adc
dec
or
fdivs
mov
leave
mov
xor
dec
dec
xchg
lcall
adc
ja
sbb
cmp
dec
js
ss
xor
xor
mov
imul
mov
dec
jns
inc
xchg
jb
arpl
mov
stos
and
into
insb
xchg
push
cli
data16
fwait
jmp
fs
and
fsubrp
sahf
adc
fwait
in
jmp
pop
and
jbe
or
les
cli
mov
test
cs
mov
shrb
in
and
inc
ds
mov
int3
pop
movsl
sbb
mov
adc
rcll
mov
jb
sub
dec
stc
cmp
ja
push
dec
jo
out
in
stos
jecxz
popa
jbe
push
fwait
inc
inc
push
or
iret
mov
pusha
jb
test
stos
shrb
lods
add
push
or
arpl
inc
mov
push
adc
pop
ret
lds
insb
adc
movsl
in
cld
hlt
mov
push
call
mov
int3
iret
mov
add
icebp
and
push
adcb
mov
rcr
sub
lods
inc
xor
in
or
dec
jae
inc
and
pop
xchg
js
jge
mov
xor
xlat
fcompl
mov
aaa
push
sub
add
and
mov
push
inc
pop
push
movsb
and
ds
or
bound
pop
hlt
pusha
mov
xor
xchg
scas
shlb
mov
inc
mov
add
sbb
push
cmp
in
jo
outsb
mov
orl
mov
pop
xor
cmp
mov
push
imul
dec
daa
loop
or
insb
inc
pop
inc
lock
sahf
xor
out
jmp
cmp
in
maxps
in
movsb
mov
mov
sarl
push
lds
nopl
rolb
xor
push
adc
or
pop
cs
xor
gs
shll
xchg
sahf
xchg
jmp
jl
add
stos
mov
and
pop
mov
mov
and
mov
test
xchg
jo
fcom
jle
leave
dec
push
lds
push
mov
je
cmp
cmpl
cmp
fdivrl
les
cvtps2pi
movsl
negb
fsts
push
xor
in
fisttps
or
sub
daa
xor
lahf
and
xchg
lahf
jmp
arpl
out
mov
pushf
mov
pop
pop
jno
mov
iret
dec
xor
scas
aas
mov
xchg
xchg
push
in
icebp
cmc
mulb
mov
jb
jl
fcmovnu
cmp
movsb
push
ret
push
xor
ret
fcmovbe
ret
sbb
cmp
inc
gs
imul
push
je
cs
mov
ret
push
dec
mov
je
mov
mov
inc
nop
fwait
shll
or
cmp
xor
mov
lahf
stos
mov
xor
cmc
mov
push
subb
sbb
mov
pop
jo
scas
hlt
insb
lea
out
pop
fwait
inc
test
sti
jb
cmp
popf
lods
dec
inc
jmp
js,pt
mov
sbb
loop
scas
fildll
cmp
dec
ficoml
inc
mov
xor
ret
or
push
stos
cmp
add
iret
fstps
xor
xor
bound
fcmovnbe
dec
xor
adc
mov
pop
scas
and
lds
push
sbb
cld
leave
or
inc
mov
aad
cwtl
inc
and
cmpsb
jae
push
testl
lret
jbe
add
lods
ficoml
andb
in
add
fiadds
push
push
int
jne
xchg
sbb
sbb
mov
cs
lret
push
inc
lcall
fs
sbb
xorl
popa
xchg
fsub
shlb
divb
ds
daa
mov
imul
push
lods
pushf
cmp
pop
sub
repnz
sbb
and
dec
dec
and
out
jecxz
push
insb
push
jnp
push
ds
push
xor
inc
push
dec
loopne
xlat
jb
ljmp
ret
pop
lcall
dec
pushf
cmp
lds
push
sti
and
fbld
arpl
dec
dec
sahf
cmp
and
insb
loop
push
dec
jp
push
lahf
test
inc
mov
dec
dec
insb
adc
and
subl
xor
jb
imul
loop
mov
jne
cli
out
out
jno
es
add
into
xchg
mov
pop
push
push
loopne
lcall
jno
push
pop
dec
mov
pop
pop
mov
bound
fidivrl
mov
xor
jge
push
out
mov
in
stos
or
mov
lods
adc
fcoml
iret
lea
inc
push
dec
out
pop
xchg
shr
fcmovne
push
jne
sbb
dec
mov
or
add
mov
iret
push
dec
or
loop
pop
fwait
mov
add
ss
lds
push
push
fwait
mov
xchg
pop
sarb
pushf
lds
hlt
rol
cmpsb
daa
shlb
and
gs
jecxz
mov
out
lret
mov
aad
cmp
jp
or
sbb
cmp
test
stos
add
outsb
pusha
mov
out
mov
pushf
int3
pop
aas
cs
pop
icebp
incl
inc
cmp
ja
and
into
movsb
fisttpll
add
out
imul
ljmp
sbb
jmp
stc
inc
add
leave
push
jge
pop
icebp
ds
sahf
pop
adc
dec
mov
dec
cmp
sahf
dec
rsm
scas
and
fstp
aam
xor
es
mov
xor
lcall
pop
pushf
jmp
mov
mov
jo,pt
xchg
test
jne
in
ficoml
movnti
adc
shl
cmp
xor
sbb
push
mov
jp
cltd
push
lock
jae
mov
aas
ja
jne
xchg
pop
imul
cmpsb
fcoml
cmp
shl
ss
repnz
pop
and
sbb
sbb
pop
push
loop
pop
sbb
shlb
pop
mov
inc
scas
lea
mov
jl
add
push
or
xor
les
ret
test
loop
or
insl
adc
mov
out
cltd
cli
orb
int3
aam
sbb
sbb
sub
fiadds
sbb
mov
xchg
fwait
pop
cltd
aaa
add
ja
movsb
pop
cli
pop
xchg
xor
insl
lret
and
mov
xorb
fcoml
sub
pop
xchg
push
xchg
lcall
popf
sub
push
and
cltd
jle
popa
add
cmpsl
lret
jae
stos
sub
sub
arpl
inc
stos
mov
gs
xchg
out
stc
enter
std
cld
outsb
es
xor
ror
push
sbb
xor
jbe
adc
dec
test
sub
fbstp
cmpsl
pop
add
cmp
mov
std
test
clc
xor
dec
lods
mov
or
pop
xor
in
dec
jae
and
addr16
mov
scas
pop
xor
aaa
cli
and
adc
loop
iret
inc
je
aad
xchg
imul
and
fimuls
or
add
xchg
out
cmp
or
repz
gs
and
and
push
mov
popa
jecxz
pop
pop
loop
test
cmpsb
cmc
cmp
pusha
dec
xchg
jnp
cli
inc
or
sbb
mov
adc
push
pop
fstp
lcall
jecxz
test
aaa
adc
jne
mov
xor
push
sub
cmpsl
out
addr16
jns
lock
or
sbb
cmp
jecxz
je
dec
inc
les
jo
scas
mov
adc
pushf
cli
adc
add
jg
push
or
cmp
jg
xchg
in
adc
push
mov
mov
mov
mov
rcll
inc
mov
cmpsb
iret
mov
mov
ds
stos
cwtl
ret
sub
lcall
test
es
aas
rcrb
jmp
mov
cmpsb
mov
cli
mov
movsb
inc
in
xlat
cmp
xchg
xor
mov
sbb
mov
or
fs
sub
inc
pop
enter
fistpll
cmc
xor
ljmp
leave
inc
mov
lret
fsubs
daa
fimull
sbb
jl
arpl
gs
ss
add
roll
mov
fs
xchg
sti
xor
sbb
test
add
push
or
fs
sbb
mov
jmp
and
push
fs
mov
pop
and
jae
mov
jmp
mov
jecxz
insb
xor
and
hlt
and
jl
arpl
inc
xor
lock
jmp
mov
or
sub
jl
or
add
inc
std
fbld
push
outsl
ret
notl
or
mov
in
bound
pop
push
fdivs
inc
sbb
jnp
hlt
test
pop
fidivrl
test
add
add
pop
dec
int
xchg
cmc
jle
jg
cmp
arpl
sub
mov
call
jne
out
xor
rcr
jb
xor
mov
lock
inc
pusha
pop
test
mov
cmpsl
enter
lods
ret
int
in
data16
stos
jnp
mov
stc
pop
xchg
inc
and
hlt
cmp
mov
add
jecxz
jge
call
add
adc
daa
mov
hlt
mov
inc
sbb
imul
data16
push
mov
mov
bswap
stc
stc
imul
fmull
mov
xor
in
test
xor
dec
lcall
jecxz
stos
sub
sub
mov
inc
cmp
js
xor
dec
pop
mov
faddp
fs
aad
jg
in
mov
lret
stos
adc
mulb
add
out
jbe
sti
xchg
out
cs
dec
jge
pusha
add
cmp
adc
aad
pushf
xchg
mov
icebp
dec
inc
jmp
ret
stc
inc
cmp
gs
call
lret
icebp
les
rcll
push
cmpb
lcall
xchg
lea
xchg
ljmp
push
hlt
and
inc
pop
xchg
sbb
mov
mov
cld
lret
jmp
mov
and
cwtl
fisubrl
or
mov
les
pop
mov
xor
rcrl
xor
jg
mov
cmp
jmp
pop
cli
sub
sub
mov
add
loope
call
xchg
stos
jmp
stos
daa
fs
andl
jp
fs
aam
adc
xlat
push
cmp
lock
cltd
daa
ss
xchg
int
xchg
jne
movsb
jmp
js
call
jo
test
push
arpl
mov
insl
fldl
outsl
mov
add
xor
or
xchg
cwtl
scas
inc
mov
scas
mov
jp
repz
push
push
ret
pop
jg
shlb
mov
mov
pop
into
pop
xchg
dec
in
pop
andl
push
mov
and
mov
loopne
aaa
es
xor
jnp
pop
mov
inc
xor
pusha
dec
popa
pop
inc
push
xchg
testl
mov
or
push
loope
xchg
movsl
outsl
addr16
cmp
or
inc
in
push
jl
mov
fistpl
mov
push
xor
inc
loope
sub
gs
imull
test
arpl
inc
xchg
movsb
leave
and
mov
and
pop
imul
aam
mov
jge
jge
inc
or
fs
push
mov
mov
lea
pushf
int3
jecxz
mov
aam
cmpsb
inc
fnstsw
and
sti
fmull
adc
sbb
mov
inc
xchg
aaa
jnp
roll
in
lret
adc
popf
insl
sub
xchg
xor
sub
add
adc
fnstenv
dec
lahf
dec
push
xchg
cmp
enter
out
arpl
jl
jns
inc
sbbl
testb
jecxz
inc
jbe
xlat
int
mov
mov
in
adc
mov
add
push
add
lea
push
push
pop
adc
cli
leave
push
pop
in
lcall
fnstsw
out
inc
push
xor
insb
jns,pt
jno
dec
subl
ds
inc
negl
gs
mov
add
fcmovne
popa
inc
lods
popa
cmp
fistpl
mov
daa
xor
xchg
jecxz
pop
mov
test
std
sub
cmp
rcrl
adc
pop
leave
mov
pop
imul
into
popf
imul
in
sarl
movsl
adc
fcmovnu
test
stc
inc
mov
gs
mov
rorl
add
dec
xor
testb
pushf
xchg
out
es
mov
xchg
adcl
ja
ret
jmp
imul
adc
dec
lcall
movsl
sub
mov
fdivr
outsb
and
fistl
mov
or
int3
xchg
cmp
shrl
ljmp
dec
lret
jl
shl
push
mov
sbb
xor
ret
icebp
jne
test
cmp
pushf
xchg
mov
pusha
repnz
jg
movsb
into
jecxz
insb
ja
jb
xchg
add
mov
in
stc
cwtl
jo
sbb
push
xchg
cltd
mov
xchg
repnz
xchg
xchg
push
push
inc
sarb
mov
sub
adc
add
adc
or
or
loop
data16
cmpsb
sub
stc
xchg
in
mov
leave
out
adc
mov
push
jg
dec
cmp
ja
pop
data16
aad
cmp
js
sahf
popf
imul
sbb
mov
pop
rcrl
mov
cmpsl
xlat
jb
mov
jbe
sub
inc
ficoms
int
pop
addb
or
inc
push
push
mov
mov
mov
andl
pop
out
aaa
imul
repnz
mov
or
test
add
add
cmc
daa
loopne
data16
sub
or
ret
xlat
ret
inc
js
data16
arpl
add
adc
mov
push
bound
xchg
and
cltd
cli
insb
lret
loopne
cli
mov
fmuls
mov
mov
lahf
mov
add
mov
icebp
mov
add
cmpsb
repz
mov
repnz
xchg
jb
push
pop
inc
mov
or
mov
mov
ds
push
sbb
cmp
call
inc
xchg
jecxz
pusha
test
mov
leave
sbb
and
stos
in
and
fldt
movsl
test
dec
scas
in
sbb
loopne
dec
inc
decb
push
or
frstor
jmp
mov
lods
xchg
addr16
mov
sub
pop
sbb
scas
cmc
dec
hlt
pop
test
fs
xor
jl
dec
popa
ds
pop
pop
dec
add
pop
out
sbb
pop
adc
adcb
cmpsl
mov
cwtl
into
rcr
jle
sahf
testl
aam
cmp
fistl
loop
sub
push
cmpsb
add
mov
aam
lods
xchg
packsswb
jp
fnstcw
mov
pop
add
outsb
enter
mov
and
sub
push
loopne
scas
xchg
push
jge
repz
pop
gs
pop
mov
nop
repz
dec
jle
mov
mov
cli
mov
or
pop
and
dec
dec
sbb
stos
in
clc
mov
jb
mov
xchg
iret
addr16
lods
es
pusha
lret
cmc
mov
scas
xchg
xchg
aad
pop
jae
iret
in
dec
cwtl
movsb
adc
insl
xchg
inc
pop
mov
sub
cmpsb
or
sar
and
push
xor
mov
divb
cli
outsl
sahf
jg
bound
movsl
pop
cmpsl
lods
bound
fildll
sbb
sbb
test
pop
push
mov
xchg
loopne
mov
out
sub
cmp
mov
int
in
pop
cmp
rorl
adc
xchg
and
mov
pop
cmpsb
loop
rcll
jp
and
push
push
cmpsl
and
xchg
mov
mov
and
and
push
push
dec
xor
in
in
data16
pop
jp
sbb
xor
movsl
pop
test
lock
lea
loop
dec
mov
adc
pop
movsl
jecxz
inc
cmp
or
mov
stos
or
push
pop
dec
push
rorb
sub
pop
dec
adc
hlt
pop
cld
imulb
stos
add
adc
xchg
sarl
inc
aam
jno
fcoml
enter
push
rcrl
or
push
cmp
pop
add
popa
ds
dec
lods
add
mov
int3
jo
outsl
out
jne
dec
ss
fidivrs
call
or
es
test
push
jmp
imul
jno
sbb
mov
aaa
mov
inc
sub
push
mov
stc
and
call
cmp
xchg
dec
pop
lret
pop
mov
adc
mov
adc
xchg
and
adc
scas
cli
sub
lea
cmc
jp
inc
or
repnz
mov
mov
jp
mov
cmp
aad
or
dec
add
daa
aaa
adc
sbb
push
sbb
bound
inc
lods
ret
dec
shl
jnp
stos
and
xchg
or
sub
jmp
xchg
shll
loop
pop
js
dec
push
mov
and
cwtl
and
js
mov
nop
lret
mov
add
xor
xchg
cwtl
sbb
inc
lods
rcrl
xchg
add
test
fucom
mov
rcrb
insl
xor
daa
xchg
daa
ja
cld
jnp
and
push
xchg
inc
mov
mov
mov
push
jecxz
push
incl
pop
js
call
and
and
imulb
mov
icebp
inc
in
cmp
or
ret
dec
out
push
dec
mov
add
cs
popa
or
stos
cmp
pop
jmp
icebp
shr
scas
mov
out
int3
fwait
dec
pop
pop
xor
stos
mov
adc
pop
fidivs
imul
out
fists
repz
das
lahf
xor
loopne
inc
call
es
push
sub
and
idivb
mov
adc
inc
sbb
rolb
mov
adc
push
mov
mov
sub
aaa
jecxz
imul
and
inc
mov
iret
fwait
sub
push
mov
js
fstps
and
xchg
sub
sahf
xor
xor
xor
mov
sub
int3
pop
lcall
scas
jle
iret
lock
lahf
test
in
pop
fidivs
in
imul
inc
mov
xor
mov
xor
into
aas
loopne
adc
push
shr
xchg
cmpsb
mov
mov
sbb
gs
jbe
sub
add
cli
adc
int3
mov
jp
adc
sbb
out
or
jp
loopne
or
xor
scas
stos
es
iret
int3
and
outsb
mov
insl
push
mov
push
push
iret
lds
sbb
mov
or
cmpsb
je
or
mov
out
mov
and
sbb
and
loopne
and
movsl
testl
or
call
fnstcw
and
mov
pop
out
add
sub
sub
adc
lock
ja
mov
pusha
fcmovbe
cmp
bound
jo
mov
sub
in
inc
in
out
xchg
mov
sbb
in
decl
shrb
cmp
push
movsb
and
test
pop
lds
mov
mov
mov
push
cmp
in
iret
clc
imul
adc
inc
sti
xchg
into
ret
xchg
hlt
push
and
or
dec
jge
call
add
jl
outsb
test
repz
pusha
dec
out
cmp
jb
xchg
dec
inc
adc
sbb
xchg
cmp
add
fsubs
hlt
lea
repnz
and
lock
dec
pop
addr16
xchg
aad
lds
mov
push
arpl
bound
mov
xchg
shll
imul
sahf
lahf
push
aad
ja
jne
sti
jne
xlat
sub
out
addr16
ror
pushf
sub
ffree
cmp
xor
test
divl
cmpsl
push
pusha
addr16
mov
leave
loop
push
inc
cmp
xorl
mov
hlt
dec
xor
jno
xchg
andl
bound
shr
or
mov
xor
mov
or
xor
aam
adc
xchg
out
int3
xor
inc
pop
fcmovnbe
add
and
xchg
jno
cmp
cli
mov
pop
scas
cmp
or
pop
jo
pop
xor
push
repz
push
sub
out
adc
call
dec
ficomps
aas
nop
shlb
shrb
mov
and
ds
pop
cld
or
jg
test
jp
jle
push
inc
inc
push
mov
pop
lret
outsb
enter
sub
je
sbb
push
lcallw
and
fstl
test
adc
int
outsl
xor
jp
or
xchg
stos
insl
pop
es
ljmp
out
push
xlat
das
xor
jp
hlt
lds
push
mov
and
aas
imul
mov
inc
scas
fcoms
addr16
aaa
sbb
pop
inc
dec
jmp
or
pminub
sbb
push
jno
push
cmp
pusha
jecxz
xchg
int3
pop
imul
xor
jbe
lret
sbb
cmp
stos
call
push
push
jmp
loop
mov
popf
mov
inc
xor
idiv
ds
imul
into
fsts
and
add
cmp
add
out
pop
ja
mov
out
in
pop
push
je
push
mov
add
mov
jae
ret
jne
ss
dec
je
aaa
sbb
or
adc
pop
lcall
or
das
test
jge
imul
cwtl
cmp
xchg
push
sub
pushf
out
adc
in
jo
sub
mov
sti
push
loopne
and
clc
push
jne
push
mov
mov
es
cmpsb
movsb
roll
push
loop
sbb
fdivl
mov
mov
addr16
lock
js
add
dec
mov
rcrl
add
mov
enter
fidivl
addr16
shlb
sub
push
in
sbb
stos
ljmp
repnz
ret
pop
push
outsb
jbe
fsubrl
mov
sbb
dec
imul
lock
or
loopne
fisttpll
cmpsb
aad
push
cld
icebp
jne
js
pop
pusha
pop
or
jmp
outsl
lds
ljmp
aam
and
push
std
xor
xor
mov
inc
outsb
jecxz
in
mov
xor
xor
adc
addr16
lahf
lock
jge
pop
and
in
imul
fsts
sbb
sbb
aaa
xor
pusha
or
and
mov
adc
in
or
out
inc
fsub
ja
and
dec
test
sarl
ds
pop
shlb
jb
lret
or
dec
sub
pop
insb
rcl
scas
insl
sub
adcl
sub
and
sub
mov
jns
pop
imul
dec
es
aas
xchg
inc
fnstcw
lock
dec
xchg
push
xorl
inc
ljmp
inc
xchg
fimuls
fs
mov
movsl
fmul
inc
sti
cmc
leave
hlt
addr16
or
test
das
pushl
loopne
cwtl
enter
or
sar
sbb
int3
js
popf
mov
cmp
rcr
fiaddl
inc
sahf
adc
in
mov
mov
or
add
lods
pushf
mov
xchg
and
adc
mov
fsubrl
mov
fs
push
in
mov
mov
mov
push
fildl
mov
aas
pusha
mov
xchg
mov
mov
cmpsb
sbb
push
dec
mov
call
mov
pop
std
out
dec
mov
jp
xor
clc
mov
xor
pop
dec
and
sub
inc
jns
out
daa
cs
sub
test
add
push
mov
push
sti
push
jl
ret
int
addr16
jmp
pop
jo
movsl
mov
cmpsl
into
rorl
das
cmp
xchg
or
ja
and
adc
adc
test
stos
je
es
jp
jl
and
mov
sub
xchg
push
jno
scas
test
pushf
in
xchg
mov
xchg
adc
jo
inc
mov
cli
rorl
dec
jmp
negb
divl
mov
sahf
mov
push
lcall
rcrl
sbb
imul
insl
xchg
popa
jo
pop
fs
inc
add
sbb
add
mov
mov
dec
es
push
or
test
cmp
bound
xchg
dec
icebp
push
pop
movsb
add
imul
bound
insl
cmp
jp
pop
push
mov
fistpl
sub
in
xchg
pusha
fistpl
push
xor
iret
ss
setae
jnp
lods
xchg
fs
pop
inc
stos
push
outsb
mov
negl
add
mov
lods
fildll
inc
je
lret
addr16
std
inc
mov
das
cli
test
daa
mov
pushl
lahf
out
add
adc
jo
lods
jmp
ja
add
lods
outsb
inc
and
xor
pop
sub
mov
inc
dec
leave
jecxz
pop
inc
incl
in
add
push
nop
mov
push
xchg
sub
push
or
adc
in
pop
mov
popf
test
call
loopne
lds
pop
sub
inc
ja
push
adc
inc
insl
scas
dec
test
shrb
mov
test
xor
add
rcll
jecxz
loopne
push
add
push
xchg
arpl
mov
stc
aaa
sbb
adc
add
mov
cwtl
mov
cmp
in
popa
shl
push
lcall
xchg
popa
cmp
sub
hlt
adc
lods
std
sarl
mov
popa
add
and
mov
push
xor
push
cmp
sub
adc
pop
mov
jno
add
sbb
adc
dec
outsl
movl
rorb
mov
mov
jecxz
faddl
pop
iret
daa
cwtl
cmpsl
lret
push
sbb
mov
add
add
mov
aad
shl
push
ror
inc
inc
ja
shr
pop
jg
mov
outsb
mov
int3
add
or
imul
add
push
in
cwtl
mov
mov
or
repnz
nop
jle
sbb
gs
lret
mov
push
sbb
inc
pop
ljmp
mov
add
ret
fwait
mov
and
addr16
adc
xchg
and
repz
add
cmpsl
add
shlb
lds
arpl
insl
aas
jnp
aaa
roll
ljmp
stos
iret
jl
out
add
sbb
and
jo
add
xchg
shrb
lret
jmp
push
gs
xchg
lret
sbb
lods
lcall
mov
pop
jmp
xchg
int3
iret
je
fcmovb
cld
xchg
bound
leave
sub
loop
xchg
and
es
mov
cwtl
insl
add
test
push
std
in
lret
out
insl
jle
mov
mov
outsl
push
call
pusha
pusha
out
out
adc
test
sbb
dec
lret
out
out
sub
je
outsb
cmp
and
add
outsl
adc
adc
pop
pop
sahf
pop
rorl
enter
adc
mov
pusha
lret
jge
push
sbbl
setae
sub
and
cltd
cli
stos
jne
fsubp
out
or
adc
dec
jle
in
popf
dec
xchg
cs
or
pop
jb
mov
or
lock
jp
add
orl
xor
mov
xor
loop
sahf
cmp
lods
jne
cmpsl
jg
outsl
gs
xor
shrb
mov
and
in
loope
dec
scas
shr
mov
mov
inc
sti
jg
jb
mov
and
insl
push
loop
movsl
pop
jno
dec
cmpsb
mov
add
out
inc
xor
outsb
dec
je
pushf
xor
int
push
lods
fsubrl
mov
xchg
and
addr16
push
adc
xlat
jae
aad
scas
add
ja
xchg
cltd
sub
dec
popa
into
movsl
in
in
lahf
out
jecxz
ljmp
sub
adc
pop
test
cmp
sbb
sbb
lcall
fidivl
cwtl
aam
lea
in
jmp
cmp
sti
xchg
cli
iret
pushf
pop
aad
pop
cmp
xor
cmp
inc
aaa
mov
loope
test
rclb
cmp
xchg
aaa
ret
aas
push
leave
xor
fs
test
stc
int
call
shlb
call
sub
outsb
mov
arpl
jmp
cmc
jp
loope
jne
les
mov
jecxz
or
adc
cmp
outsl
sbb
push
ss
mov
jp
dec
mov
mov
cltd
pop
cmpsl
pop
mov
repz
ja
es
add
loopne
pop
push
stc
push
daa
sbb
call
or
mov
sub
adc
xchg
or
jp
fimuls
sahf
mov
dec
lahf
outsb
stos
scas
adc
jg
mov
mov
test
sbb
push
fnstenv
add
add
movsl
aas
mov
addr16
xorl
mov
lcall
je
pinsrw
xor
pop
sub
aaa
adc
mov
mov
clc
adc
dec
pop
sbb
out
adc
mov
sbb
jecxz
cmp
cmp
lcall
jl
push
sub
pop
stc
mov
xchg
sahf
stc
sti
lods
xchg
add
daa
and
sti
outsl
mov
cmp
mov
aas
xchg
data16
popf
pop
mov
clc
stos
mov
fs
icebp
cmp
xor
fwait
cltd
jg
inc
and
add
cli
sub
pop
stos
xor
pop
lcall
je
cmc
or
popa
in
out
bound
cmpb
fstps
rcll
push
lret
pop
out
mov
outsb
js
cmpsl
mov
mov
cmp
mov
pushl
jae
fcomps
imul
dec
in
movsb
fdivrp
pop
or
lods
subb
shlb
jg
cwtl
cmp
cld
mov
or
pop
and
lcall
mov
movsl
adc
and
jmp
movsl
mull
xchg
and
aam
cmc
loopne
xor
dec
ret
movsb
cmpsb
pop
lcall
aaa
subl
insb
jl
test
xchg
int3
pop
inc
mov
and
jle
push
jmp
add
jno
loopne
jns
mov
stc
inc
and
jne
adc
arpl
test
sti
mov
adc
lds
xor
pop
cmp
fists
jb
sub
sub
insl
inc
push
iret
int
lret
sbb
xor
mov
mov
jle
outsl
adc
iret
dec
movsb
lea
mov
mov
aad
test
mov
or
add
into
adcb
cmc
mov
idivb
dec
adc
xor
sbb
inc
push
xchg
xor
por
cmp
sti
and
xchg
cli
das
cmp
in
mov
push
cwtl
arpl
iret
lock
in
jl
add
sub
lret
imul
jo
push
jp
jmp
inc
rcll
mov
out
adc
ficoms
xchg
cmp
xchg
cmpsb
in
imul
xchg
shufps
push
add
sub
repz
in
adc
inc
sub
leave
mov
outsl
daa
jno
mov
lahf
mov
lock
push
mov
mov
dec
dec
jl
mov
inc
loop
xor
loopne
daa
push
or
add
insb
fs
xor
sub
mov
dec
lret
cmpsl
jl
lret
mov
sbb
daa
adc
xlat
jp
xor
jp
imul
arpl
cmp
sahf
ljmp
add
sar
addb
add
cmp
cwtl
mov
dec
add
gs
shll
mov
scas
xor
cmp
sub
ror
and
shrb
inc
jp
test
sbb
dec
test
sbb
ja
shlb
jnp
imul
enter
mull
out
xchg
mov
imul
mov
popa
fld
mov
push
adc
pop
jge
jmp
cmp
bound
scas
and
int3
push
data16
jb
mov
mov
mov
enter
mov
pop
addb
xchg
les
outsw
addr16
pop
jle
xchg
inc
jl
xchg
subb
cmp
push
ljmp
stos
iret
movsbl
pushf
mov
fs
add
rcl
test
lcall
push
iret
loope
push
pop
arpl
jo
sbb
loopne
cmpsb
fimuls
dec
jae
nop
mov
pop
cli
cmp
pop
adc
mov
sub
pop
addl
mov
and
out
cwtl
shrb
mov
cli
mov
cmp
ljmp
push
push
gs
adc
scas
ja
adc
add
sub
outsb
xor
xchg
dec
mov
imul
rcr
mov
ja
pop
xor
out
daa
addr16
stos
add
xchg
push
lock
repnz
add
lock
xor
sub
and
inc
enter
mov
jo
pop
leave
push
aad
jge
idivl
pop
and
movsl
mov
loop
aam
push
popa
inc
xchg
jo
mov
hlt
xchg
jle
int
xor
xlat
dec
pop
rcrl
jbe
cli
scas
mov
inc
scas
jge
std
sub
pushf
mov
add
in
lods
in
jp
movsl
pop
xor
inc
mov
test
sub
fcoms
jp
sbb
jnp
push
cmp
loop
scas
add
add
lret
xchg
aad
out
shl
pop
fmuls
push
xchg
outsb
lods
pop
int
dec
dec
xchg
dec
ja
insl
mov
lahf
jb
fnstenv
stos
dec
mov
xchg
xchg
mov
int
and
push
pop
fs
push
xor
movsb
mov
push
aad
xor
ss
jo
cmpsb
pop
fdivrl
xlat
jae
mov
aam
or
setnp
inc
cmp
jo
add
pop
push
xor
jnp
je
mov
add
lahf
add
loope
fwait
pop
mov
sbbl
div
daa
test
jnp
adc
aad
and
sbb
cmpsb
ret
cli
cmpsb
pop
push
inc
or
cld
adc
arpl
sarl
and
or
icebp
aad
in
lahf
movsb
xchg
jne
fcoml
dec
std
fisubrs
jg
dec
mov
test
cmpsl
pop
sub
mov
mov
or
les
sbb
jg
and
inc
int3
daa
imul
cmp
sbb
in
stc
iret
mov
fnsave
mov
xor
mov
add
jbe
aaa
xchg
out
and
dec
pop
and
sub
in
data16
push
adc
add
mov
ret
push
pop
mov
sub
in
in
sahf
insb
xchg
xor
dec
sarl
out
pop
inc
cmp
movsl
fdivs
dec
cmp
mov
rolb
xor
sbb
stos
and
insb
push
mov
xor
jbe
scas
ret
popa
pop
cmp
cmpsl
xchg
lock
ret
ret
data16
out
adc
orl
movsl
dec
test
ds
xlat
xchg
cvttps2pi
mov
stc
pop
je
movsb
sti
cmp
xchg
add
das
loope
cwtl
pop
dec
pop
shr
insb
push
adc
hlt
sahf
lods
stos
adc
push
adc
push
fs
leave
pushf
xor
repz
movsb
sbb
ljmp
sub
pop
hlt
in
cs
ja
gs
push
xor
jmp
arpl
jnp
dec
cmp
das
mov
out
add
mov
jecxz
test
or
pop
cmp
mov
pop
xchg
push
sbb
stc
mov
sub
pop
sbb
int
stos
loop
lods
mov
daa
sbb
rorb
dec
cmp
sbb
push
int
lods
push
vmovd
push
mov
in
jle
or
roll
push
pushf
std
push
pop
jo
cs
cmpsl
sbb
push
mov
imul
mov
jb
movsb
dec
mov
push
inc
adc
imul
and
xor
in
repz
aam
hlt
sub
push
rorl
lahf
sub
adc
pop
pop
fiadds
popa
fidivrs
cmpl
or
sub
adc
mov
shrb
pop
adc
rcr
mov
mov
mov
or
out
sbb
call
ret
pop
jnp
inc
mov
xor
sub
movsl
push
lret
xchg
jbe
popa
add
insb
lock
or
xor
mov
out
enter
stc
mov
xlat
in
sar
test
xchg
sub
nop
push
pop
repnz
cmpsb
rolb
sub
add
push
xor
test
stos
pop
push
sbb
or
imull
imul
jge
je
add
inc
dec
inc
std
mov
and
dec
cmc
jno
inc
jb
lock
andb
popf
cmp
test
aaa
or
movsl
sbb
jno
cmp
xchg
jb
inc
inc
xor
add
jecxz
push
pop
dec
mov
scas
imul
lods
xchg
fucom
aad
addb
addr16
jmp
cmp
imul
jb
mov
and
jo
pop
loopne
adc
add
and
sub
inc
cltd
cwtl
rclb
lods
pop
inc
sbb
inc
sbb
and
jge
push
inc
icebp
inc
in
popf
lea
inc
push
imul
stc
test
mov
es
out
fcompl
push
push
jo
xchg
and
out
leave
int3
cmp
sbb
push
subl
jo
adc
mov
sbb
jge
ljmp
insl
mov
in
jmp
sbb
lods
add
xchg
das
xor
add
pushl
ss
data16
pop
pop
in
ja
nop
stos
test
inc
cli
adc
dec
jmp
aad
pop
mov
push
movups
fwait
popf
jno
fnstcw
mov
inc
inc
xor
lret
jae
mov
jmp
arpl
mov
bound
jecxz
and
xor
fnstcw
add
in
outsl
mov
or
cltd
loopne
push
idivb
adc
sarb
xchg
cli
cmp
mov
fistpl
divb
push
aam
push
das
fidivl
sub
ret
sbb
cmp
ret
inc
mov
inc
mov
test
lds
inc
pop
pushf
sbb
xchg
push
jnp
sub
mul
xchg
out
jae
ds
adcl
add
subb
in
and
shrl
andl
ret
aad
mov
add
dec
dec
dec
push
mov
push
loope
cmp
add
jge
ds
popl
popa
cmp
movsl
shll
insb
cld
dec
push
inc
xchg
lea
in
imul
cs
cmp
fisubrs
push
ds
and
clc
sahf
sub
and
cld
and
cld
pop
and
fsubrs
leave
clc
add
mov
push
fmul
jae
inc
dec
mov
jno
mov
je
insb
lret
es
dec
aam
mov
sahf
push
or
lahf
mov
add
clc
shrl
jp
pop
xor
mov
push
call
scas
or
test
xchg
or
cmp
mov
jmp
mov
cltd
inc
push
orb
aad
mov
add
fwait
test
mov
push
xchg
push
loop
mov
ret
mov
pop
fnstenv
pop
or
movsb
pop
dec
test
jo
bnd
mov
xor
sbb
mov
fs
test
sbb
mov
aam
popf
imul
or
aas
test
jae
sarb
xchg
mov
jae
xchg
add
push
jecxz
cmp
adc
xor
outsl
mov
imul
mov
daa
and
sbb
es
iret
leave
rcll
push
enter
sbb
cmp
add
mov
lret
jo
mov
test
jle
mov
mov
inc
mov
jmp
lea
or
int
lods
dec
mov
push
outsb
cmp
cmpsl
pandn
cmp
sbbb
adc
add
jb
push
ljmp
test
aas
lahf
xor
popf
cmp
add
aam
ficoms
ljmp
mov
inc
iret
mov
jne
addr16
fisttps
jp
adc
mov
pop
mov
out
or
into
lret
fs
push
and
out
adc
nop
fs
cli
add
jae
hlt
bound
into
sub
loop
mov
cmpb
jg
negl
pusha
push
inc
sbb
add
iret
add
lea
and
sahf
lds
das
xchg
je
and
mov
inc
icebp
pop
mov
pop
cmp
adc
push
mov
stos
cmp
clc
sahf
adc
test
movsl
cltd
mov
in
push
xlat
insb
sbb
xchg
fxch
add
inc
mov
add
inc
negb
lret
loope
sbb
out
jns
inc
inc
clc
mov
in
test
dec
enter
jne
jno
bound
pop
and
jbe
in
in
jmp
xchg
neg
mov
cli
pop
sti
push
hlt
fs
mov
jg
mov
dec
cmovg
ja
sahf
lods
inc
stc
mov
xor
mov
fldenv
lret
sub
in
in
xchg
dec
cld
jne
out
pusha
and
aas
fcomps
enter
sbb
jno
nop
icebp
cld
int3
outsl
pop
imull
mov
lret
lahf
test
addr16
stc
pop
pusha
xchg
stos
xchg
lods
inc
push
xlat
mov
cmpsl
cmp
scas
leave
xor
xor
xchg
xchg
push
mov
insb
aad
sbb
xchg
pop
subl
js
push
xor
or
adc
inc
repnz
pop
mov
sbb
pop
icebp
jg
sbb
mov
scas
or
sbb
mov
mov
xlat
mov
add
in
shl
add
jle
ret
inc
push
movsl
mov
dec
bound
out
in
lret
les
xchg
lock
mov
jmp
call
jbe
fbstp
xchg
sbb
add
inc
mov
lock
add
pop
rcrl
in
cld
inc
addb
jge
arpl
ss
mull
fwait
gs
jp
cli
jg
xchg
push
sub
xchg
or
hlt
fidivrs
sbb
movsb
dec
cmp
jb
jne
shrl
mov
fs
and
ss
aaa
pop
mov
hlt
adcl
js
lods
test
enter
mov
cmp
push
push
adc
mov
test
inc
int
pop
cs
sbbb
stos
inc
sub
ret
jo
call
mov
lea
pop
inc
stos
adc
rorb
xor
faddl
mov
jne
cwtl
sti
outsl
fdivrl
call
aam
pop
addr16
mov
dec
loopne
mov
jecxz
cmovo
inc
push
fcoml
or
fs
fmull
inc
adc
out
or
out
clc
push
sub
lahf
pop
stos
inc
lret
xor
xor
imul
sbb
adc
or
lret
jns
aas
lods
mov
cmpsl
dec
add
push
mov
enter
mov
mov
inc
shlb
cmp
and
jmp
jns
movsl
mov
testb
mov
outsb
mov
dec
jge
arpl
xlat
mov
mov
sub
add
pushf
mov
mov
mov
add
movsl
xor
push
je
xchg
adc
push
mov
inc
jg
andb
lock
xor
es
dec
js
xchg
lcall
pop
lcall
clts
cwtl
mov
fbstp
jl
in
idivl
mov
xchg
push
into
or
sbb
dec
adc
into
int
push
lahf
pop
push
sub
fmul
sub
js
mov
hlt
negl
inc
jmp
shrb
out
gs
sub
rolb
icebp
lods
mov
pop
into
push
add
xchg
inc
ret
pop
dec
adc
jbe
fbld
hlt
insb
pop
in
push
roll
pop
cmpsl
fisubl
ds
js
sti
xchg
mov
andb
xchg
jmp
idivb
xchg
es
leave
shl
push
add
push
cmp
ds
dec
pop
pop
add
jle
lcall
add
push
stos
scas
inc
pop
mov
xchg
sbb
testb
iret
pop
sub
outsl
arpl
into
xlat
mov
fdivr
movsb
sbb
lds
lods
enter
aad
or
imul
repnz
cmpsl
mov
imul
scas
jl
cmp
loop
sub
jo
xor
hlt
cmc
mov
xchg
mov
hlt
les
xor
push
jo
dec
nop
cmc
xrelease
push
inc
lods
pop
mov
mov
mov
dec
pop
test
stos
fisttpl
popf
jp
mov
lods
das
test
jp
add
pop
push
idivb
pop
sahf
lea
push
mov
push
and
mov
aad
xchg
sub
sub
add
inc
xchg
mov
mov
cwtl
mov
xchg
imul
cwtl
and
or
bound
negb
addr16
cmp
xchg
daa
jae
andb
std
cmp
movsb
ljmp
jns
pop
repz
or
jmp
mov
push
aad
lea
mov
ss
mov
inc
dec
imul
add
cmpsb
xchg
sbb
adc
insb
lock
lods
add
cmp
aaa
mov
cmp
xchg
mov
and
or
out
ss
xchg
jge
lds
ds
cmc
pushf
cmp
or
pop
js
out
js
sub
adc
enter
cmc
shrl
jo
rclb
arpl
loopne
mov
lods
ljmp
in
fcomps
and
fiadds
sbb
jo
fwait
cmpl
inc
xchg
aas
mov
clc
cmpl
sbb
pusha
fsubl
xchg
cmp
std
scas
dec
xor
pop
and
aas
iret
test
mov
stos
mov
and
xchg
dec
pop
pop
pop
orl
xchg
add
daa
pop
and
ljmp
xchg
cwtl
mov
out
call
sub
lret
xchg
insb
push
mov
lret
add
pop
pop
and
gs
or
scas
inc
dec
xor
ds
das
test
mov
add
xchg
cmc
ds
out
subl
pop
add
loop
mov
cmp
pushf
clc
inc
inc
inc
xor
ja
and
and
xor
and
mov
cmpsb
fwait
adc
adc
xlat
ficomps
fisubs
outsb
mov
out
les
cli
add
push
lods
jbe
je
mov
cld
jne
sub
or
lods
divb
push
movsb
mov
enter
cmpsb
xchg
cwtl
stos
orb
fidivrl
add
pop
lock
adc
inc
mov
cmpsb
dec
fistpll
shrb
jecxz
lods
in
rolb
jl
mov
cmp
sar
inc
inc
lret
gs
fisubrl
scas
xchg
mov
jl
dec
jne
imul
mov
psubsw
mov
pop
fdivrp
xor
test
inc
in
lahf
ljmp
roll
mov
cmp
arpl
out
inc
xchg
mov
leave
lods
sbb
mov
add
or
jbe
sbb
xchg
out
pop
jl
gs
movsb
lcall
sbb
loopne
mov
fldl
mov
jb
call
aaa
cwtl
mov
int3
sets
iret
scas
es
ja
pop
std
popa
nop
fwait
cs
cwtl
scas
or
add
icebp
call
sub
xchg
adc
mov
dec
mov
xchg
inc
or
repnz
aam
sub
jmp
pop
test
fs
test
and
jno
and
std
dec
adc
jle
inc
sbb
mov
addb
dec
subl
push
adc
lret
incl
mov
push
mov
jg
adc
aas
xor
mov
movsl
outsl
pop
pushf
in
lea
mov
dec
adc
pop
dec
ror
stos
dec
mov
inc
les
dec
stos
xchg
mov
push
rcr
mov
mov
or
mov
push
adc
adc
test
mov
pop
in
mov
mov
mov
jl
push
pusha
fsubl
xor
les
dec
iret
xor
cmc
push
push
cmp
int3
out
inc
mov
das
mov
lock
popa
xchg
pop
dec
mov
fstps
test
jnp
scas
pop
loopne
shll
push
iret
pop
push
mov
or
sub
mov
pop
adc
push
and
cmpsl
out
aas
lret
jno
stos
sub
mov
arpl
pop
fcoml
push
clc
shlb
aas
call
jae
mov
movsb
mov
or
fisttps
jns
xor
mov
lret
cld
lret
mov
add
inc
out
pushf
ljmp
negb
loope
mov
mov
mov
rorb
daa
arpl
push
sbb
leave
xchg
sbb
outsl
fists
test
in
sbb
jo
pushf
in
pop
inc
jne
fsubrs
fstps
pop
int3
mov
sub
arpl
bound
into
pop
or
imul
call
ret
adc
xchg
jb
sbb
inc
nop
lret
pusha
gs
frstor
aaa
xchg
dec
test
aam
mov
in
int3
loopne
out
leave
outsl
pop
fstps
das
repnz
or
aaa
push
ja
scas
fs
mov
dec
js
sbb
sbb
jge
xchg
jb
sar
je
ds
push
pop
push
mov
add
popf
mov
sbb
addr16
stos
jne
int3
arpl
hlt
clc
xor
mov
div
in
dec
xchg
imul
imul
mov
sti
daa
fxtract
imull
cmp
xlat
psadbw
add
iret
dec
pop
mov
loop
sbb
jbe
xchg
mov
fs
xor
jnp
xchg
mov
scas
push
scas
rorl
int
sarl
jmp
in
cmpsl
std
cmp
into
adc
push
push
push
push
sbb
inc
add
clc
pop
cld
xchg
insl
mov
adc
jp
or
mov
xchg
cmc
sub
mov
cmp
leave
inc
leave
dec
leave
inc
push
popa
shll
les
or
jno
or
jle
mov
mov
adc
xor
in
mov
cmpsb
xchg
int3
inc
mov
nop
cld
ljmp
stos
rol
jo
or
mov
dec
jge
xchg
int3
dec
js
daa
aam
lret
test
push
sbb
xchg
es
loop
or
jo
cmovs
cmp
jb
hlt
inc
and
loopne
loop
scas
mov
push
test
popf
pop
adc
lret
push
dec
icebp
push
push
and
inc
mov
out
filds
pop
mov
arpl
dec
push
daa
jmp
outsb
dec
cmp
pop
outsb
and
or
imul
push
ret
rclb
mov
inc
push
leave
xlat
xor
xchg
aas
cli
adc
push
xor
subb
ja
cld
andps
cmp
call
dec
pop
sub
fsts
enter
pop
aas
push
test
nop
jecxz
je
jle
shrl
push
loope
pop
push
push
loope
popa
cltd
add
fistps
loopne
jecxz
and
aas
adcl
daa
sub
out
shrl
inc
jmp
aas
jbe
lret
rol
pop
inc
push
adc
lcall
xchg
loope
add
in
jo
inc
cmp
mov
popf
pop
xor
ficomps
es
fidivrs
nop
lock
test
dec
rolb
mov
push
out
lea
dec
xchg
aad
push
rcrl
das
jmp
ret
mov
jae
iret
and
gs
jecxz
adcl
and
out
mov
cmp
fisubrs
mov
push
iret
arpl
pop
pop
test
push
test
xchg
push
outsl
sbb
jnp
push
sbb
lods
out
mov
xor
pop
mov
jmp
lods
or
idivb
outsb
jle
hlt
fcomip
xor
ret
adc
xchg
jmp
mov
push
repz
out
inc
sar
fldz
sub
cmp
int3
sub
repz
out
fisttps
xchg
out
loope
xchg
icebp
stos
push
movsl
fwait
mov
dec
push
clc
pop
std
data16
sbb
dec
pop
mov
sub
push
mov
and
hlt
les
shl
and
jne
push
pop
cli
divb
adc
mov
push
mov
sbb
xor
sub
in
mov
mulb
mov
dec
repnz
stos
jno
dec
add
pmullw
inc
bnd
cmp
xchg
xchg
lock
inc
int
dec
outsb
test
pop
mov
pushf
outsw
insl
mov
or
add
aad
and
leave
mov
and
inc
orl
cli
repz
lret
sahf
movsl
mov
ljmp
je
dec
sub
hlt
xchg
mov
aaa
fsts
scas
stos
shll
cmp
xor
adc
cs
push
cli
lods
out
or
movsb
dec
sbb
adc
sub
movsb
cmp
fists
push
loop
inc
js
popf
les
test
sbb
sbb
in
fildll
rcrl
es
mov
in
xlat
into
dec
adc
sbb
pop
or
pop
test
repz
je
xchg
pop
inc
pop
pop
xchg
cmpsl
push
dec
rep
push
bound
xor
aad
add
mov
sub
dec
ljmp
cmp
cmp
lea
fidivrl
popf
lahf
mov
add
insb
add
fisubl
mov
ficoms
mov
sub
mov
cmp
sahf
adc
repnz
push
std
int3
fildll
jg
pop
ret
cmp
movsl
fiaddl
ficoml
mov
jge
xor
shlb
sub
fs
jmp
pop
inc
mov
movsl
adc
xlat
fdivl
stos
fisubs
pop
aaa
cmpb
pop
out
push
mov
and
dec
adc
fldcw
cltd
pusha
xor
scas
push
mov
jmp
push
cmpsl
test
sbb
ss
cli
pop
sub
mov
adc
or
jno
dec
in
inc
push
xchg
ds
push
int
inc
and
cs
je
es
xchg
aam
ds
pop
xchg
xchg
jnp
pop
decl
les
rclb
inc
rcrb
daa
ja
jne
inc
cli
add
setl
xor
pop
xchg
imul
jns
jae
dec
mov
push
icebp
addr16
pop
pushf
or
cli
push
push
scas
mov
or
push
push
loope
adc
shll
mov
cmpl
mov
jae
loope
test
push
fisttpl
mov
pop
outsl
xchg
cmp
cmp
push
fdivrl
std
hlt
dec
clc
js
outsb
enter
dec
cs
add
lret
leave
test
sub
xchg
hlt
jo
lods
addr16
jmp
mov
pop
pop
popf
test
jno
adc
cmpsl
push
xor
xchg
pop
sbb
fwait
dec
mov
loop
dec
xchg
push
idivb
lret
fincstp
sbb
lcall
aaa
jo
jnp
in
push
adc
or
mov
xor
dec
outsb
test
push
out
mov
inc
adc
xchg
icebp
or
mov
adc
aaa
das
or
sub
outsb
inc
imul
shl
icebp
xor
mov
ja
or
in
jge
pop
pushl
or
pop
fnsave
push
lods
loopne
dec
and
je
cmp
ret
in
jae
insl
aaa
stos
dec
add
mov
es
repz
sub
sbb
adc
jle
push
pop
mov
lods
or
daa
xchg
mov
out
ja
push
inc
adc
adc
sub
sbbl
jmp
cmp
or
push
int3
adc
cmpsl
adc
test
xor
out
sub
outsb
mov
push
lods
orb
pop
fwait
inc
pushf
dec
daa
mov
stos
pop
std
and
pop
into
dec
adc
push
add
outsb
pusha
or
xchg
addr16
jmp
inc
and
jbe
je
mov
add
sbb
bound
adc
inc
aaa
lahf
hlt
push
shlb
test
xlat
arpl
loope
sub
sbb
pop
and
mov
andb
lcall
in
int3
fwait
jno
jg
jno
mov
jl
add
in
icebp
iretw
dec
std
sbb
dec
push
mov
hlt
add
lock
addl
rol
ljmp
inc
xor
ds
push
lock
je
jecxz
aam
mov
mov
pop
jns
jb
push
adc
movl
fistl
jge
daa
sub
mov
cmp
subl
sub
mov
das
movsb
mov
rcll
xor
fisubs
jb
int
pop
outsl
add
inc
push
fmulp
cmpsb
xor
jns
sub
jb
mov
in
aam
enter
add
outsb
aam
lea
out
cmp
add
pushl
add
in
sbbl
sbb
and
stos
jb
loopne
cwtl
dec
or
dec
js
jmp
pop
cli
and
jno
stos
in
outsb
jge
scas
push
sbb
mov
add
insl
cmovo
scas
and
xor
dec
or
mov
stos
jns
loop
mov
add
ss
addr16
shrb
cli
xchg
jmp
jno
sbb
sub
roll
sbb
lcall
cmp
aas
jno
aam
sub
mov
hlt
push
cmp
ljmp
pushf
mov
stos
in
add
pop
mov
inc
push
xchg
popa
iret
nop
lods
inc
test
xchg
mov
inc
mov
imul
and
push
loope
sub
lock
movl
jle
cmp
sub
pop
and
cmp
pop
sub
push
xor
mov
jbe
add
aam
rcll
bnd
rcrb
ds
cmp
les
icebp
out
test
mov
and
and
cmp
test
cmp
push
push
cmpl
push
test
repz
push
push
jb
frstor
sarb
mov
inc
mov
roll
cmpsl
pop
adcb
ja
pop
mov
and
lds
imul
test
fldt
xchg
mov
stos
and
jl
lahf
mov
std
pusha
out
pop
or
inc
stos
bound
mov
sbb
dec
jl,pt
xor
add
dec
mov
push
pop
movsl
or
cmpsl
or
ljmp
leave
push
push
add
leave
mov
inc
stos
mov
add
xchg
cmpsb
rcl
pusha
push
sbb
cmp
rcll
lock
cmp
in
test
mov
ds
pop
inc
mov
pop
or
push
inc
or
int3
or
pop
inc
add
cwtl
jge
cmpl
xchg
sti
cs
dec
xor
adc
imul
xor
fmuls
add
pop
xchg
cmp
inc
fldt
shlb
pop
ja
pop
mov
andl
das
push
add
lret
push
mov
cmp
lds
iret
inc
lock
fcomi
dec
mov
fdivs
out
sbb
dec
lcall
dec
loopne
popf
jge
jmp
mov
test
dec
jp
fcomps
add
out
sbb
lock
jb
sbb
push
xlat
gs
les
popa
icebp
daa
scas
out
je
pop
cmp
shr
test
popa
or
repz
sbb
cs
movsl
adc
in
mov
xchg
fisubs
xchg
fsubr
je
sahf
or
in
inc
insb
sub
aaa
dec
inc
push
sbbb
xchg
repz
loop
xor
mov
ljmp
mov
adc
cmp
xchg
popf
clc
mov
sbb
es
jmp
jmp
lds
loopne
cmp
fnstcw
arpl
jbe
call
mov
fdivs
cmp
sbb
dec
sti
sbb
and
and
ja
sbb
or
std
mov
pop
inc
in
adc
adc
xor
popf
mov
rolb
inc
in
lcall
nop
or
loope
aaa
jle
pop
imul
aaa
adcl
fisttpll
jo
mov
sub
mov
les
dec
mov
jge
inc
lea
sti
hlt
or
dec
in
mov
dec
cmp
xlat
stc
push
add
push
lods
dec
pop
mov
leave
ficoms
roll
cld
movsl
jle
pop
cmp
adc
dec
and
add
stc
and
sbb
roll
add
ret
test
psubusw
mov
xor
sbb
cmp
xlat
mov
or
outsl
int
jge
fwait
push
cmp
jp
lahf
scas
adc
sbb
xchg
or
popf
pop
in
lods
je
lds
fisubs
lods
sub
je
jnp
push
xchg
cli
sub
push
mov
lret
std
aaa
hlt
pop
mov
xchg
sub
lods
pop
inc
clc
push
in
jbe
xor
mov
nop
cwtl
ljmp
arpl
lcall
fcmovbe
jmp
pop
sub
mov
leave
outsl
or
andb
inc
mov
xlat
ret
call
ret
mov
aam
push
adc
stos
mov
movsl
arpl
pop
push
flds
divl
aam
nop
xchg
and
pop
cmp
jecxz
lret
dec
sbb
mov
pop
jmp
jp
mov
test
mov
pop
addr16
pop
mov
xchg
sar
mov
mull
and
pop
push
inc
xor
lret
mov
mov
sarl
jg
mov
lods
bound
pop
xor
mov
out
in
fimull
push
int3
xor
leave
cmp
push
mov
push
mov
or
sub
mov
lock
pop
leave
xchg
std
fidivrs
push
sahf
push
push
pop
out
mov
push
jecxz
mov
xchg
or
jp
cmpl
fcomps
imul
sar
sahf
loopne
pop
in
mov
mov
cltd
movsl
test
js
repz
add
into
xchg
and
and
xor
test
sub
dec
xchg
or
sbbb
cmp
jae
jmp
xor
cs
into
lahf
dec
xor
jne
dec
fbstp
add
cmc
cmovbe
mov
mov
and
fsubrp
sbb
xorb
daa
jmp
mov
inc
fdivrl
mov
fstpl
shrl
dec
jp
ja
sahf
mov
xor
jp
xor
aas
adc
dec
mov
andl
push
pop
sub
adc
mov
xor
push
or
xor
sarl
mov
sti
inc
out
xchg
pandn
test
cmp
hlt
into
jl
popf
lahf
jecxz
cmp
mov
testl
adc
mov
test
cmpsl
repnz
lret
mov
inc
dec
outsl
mov
sbb
adc
pop
add
jge
rcl
into
and
jae
int3
test
out
in
mov
jns
pop
dec
icebp
nop
testb
stc
mov
std
xchg
pop
into
mov
fldenv
jmp
ss
push
jl
or
xor
fs
scas
cmp
das
adc
cmpsl
clc
mov
mov
cmpsb
clc
orl
std
lock
mov
inc
sub
lods
cld
inc
xchg
lahf
sub
les
out
xchg
pop
and
sub
sub
loopne
pop
cli
in
aas
adc
les
nop
xchg
inc
and
adc
cmp
sub
cmp
out
jns
repz
fisubs
inc
jbe
cmp
sbb
jns
bswap
movsb
mov
mov
jno
cmc
jmp
pop
fnstcw
jo
aad
jns
jo
jmp
lahf
jns
aaa
add
test
lods
push
add
incb
ljmp
jle
inc
addr16
jo
fstpt
jnp
scas
hlt
push
stc
pop
sbb
dec
das
sahf
addb
ss
push
adc
mov
mov
sub
jns
cmpsb
add
push
mov
jg
ljmp
pop
cmpsl
inc
flds
dec
inc
add
mov
cs
adc
fistpl
cmp
aam
test
pop
je
push
ret
je
divb
std
and
sbb
loopne
push
pusha
cmpb
je
aam
nop
imul
mov
jle
das
decb
repnz
cwtl
dec
sub
add
push
inc
ror
pop
cmp
lods
fwait
inc
pop
popa
fs
sub
les
dec
pop
ljmp
inc
nop
fcoml
cmpsl
adc
mov
fst
or
add
test
into
push
out
outsl
xchg
out
cs
pop
cwtl
mov
lcall
in
popa
scas
jmp
and
adc
pop
out
and
jns
lods
jb
xchg
out
cmp
sbb
icebp
cmp
aad
insb
les
imul
rorb
in
cmp
lea
push
xchg
lds
lret
inc
and
inc
fwait
xchg
sbb
lea
into
jmp
shlb
jecxz
ja
ret
imul
lret
fwait
cmpsb
loop
movsl
popf
cmpl
fiadds
jno
add
adc
mov
lret
out
adc
movb
enter
imul
jmp
pop
out
es
sub
or
lods
jg
xor
sub
jle
xor
faddl
ss
sbb
icebp
sarl
pminub
les
sub
out
sub
repnz
enter
inc
sbb
lahf
sbb
das
mov
sbb
cmp
pop
or
mov
aaa
and
aaa
sub
jp
dec
sub
pop
mov
movsb
mov
and
mov
sub
cmpsl
cld
push
fsubl
xchg
and
out
fs
adc
jo,pt
outsl
inc
xchg
add
mov
jns
sub
and
rclb
mov
sbb
push
cld
pop
sub
push
rcll
cltd
nop
lock
gs
cld
jmp
jno
dec
sub
test
mov
jns
cmp
dec
fwait
sub
cmp
mov
popa
or
jge
push
orb
sbb
divl
push
xor
sub
iret
or
stos
dec
cltd
bound
mov
mov
mov
ja
xchg
insb
dec
adc
or
mov
rcrb
cmp
in
gs
jle
xor
or
add
das
add
std
inc
fwait
insl
or
daa
les
sub
rcrb
xchg
pusha
xchg
jg
mov
lods
incb
dec
sub
pop
shr
es
imul
xchg
nop
inc
lods
nop
fistpl
or
push
dec
push
rcr
and
aas
push
mov
les
int
mov
jb
cmpsl
cmpsb
xor
lahf
jecxz
inc
fwait
data16
frstor
cs
pop
xor
pusha
lock
mov
jg
pop
add
lods
cmp
xorb
jg
ds
ss
pop
dec
add
mov
sbbl
sbb
popf
out
adc
out
xchg
sbb
or
icebp
mov
cmpsb
fstpl
cs
pop
xchg
shl
dec
xlat
aas
pop
out
iret
mov
sti
inc
sub
mov
shll
imul
push
jne
js
sti
xor
sub
push
sahf
push
jo
jae
in
and
or
rorb
leave
push
jo
cmp
mov
rclb
dec
add
ljmp
push
add
fsub
out
jb
hlt
movsb
stc
cmp
jl
mov
or
dec
pop
jecxz
pop
adc
repz
pop
cmc
jmp
push
and
and
and
les
out
insb
adc
lret
jl
into
dec
sbb
jle
call
in
sub
aas
sarl
movsl
enter
mov
mov
int3
inc
mov
or
imul
pop
and
in
leave
mov
fcmovbe
add
or
sub
ljmp
add
in
mov
or
ret
addb
sub
push
mov
aad
push
sbb
mov
pop
xor
jp
add
shlb
or
fcompl
adcb
daa
pop
push
hlt
xchg
sahf
sbb
and
xor
jno
out
mov
xchg
sbb
gs
xor
test
dec
xchg
repz
push
push
xchg
adc
gs
cmp
mov
push
sub
sub
daa
sbb
push
cmpsb
in
out
sahf
stos
repnz
std
and
cmp
lcall
pop
mov
lods
push
and
cltd
xchg
inc
or
lret
push
movsb
pop
xchg
aam
shl
and
outsl
repnz
or
xchg
aad
jmp
test
sub
arpl
adc
adc
ret
or
mov
jmp
iret
mov
jg
js
sbb
popa
adc
cmpsl
mov
jo
sbb
pop
mov
xchg
add
or
push
jns
dec
test
push
out
push
push
cltd
sbb
test
gs
pop
jno
inc
inc
test
sbb
in
outsl
rclb
mov
sub
fistpl
out
mull
lea
lea
test
and
cltd
js
lds
aaa
enter
es
mov
scas
fdivs
in
dec
add
add
test
rcr
les
adc
inc
cmp
cs
jp
mov
jae
sub
aaa
int
loop
cmp
std
xchg
sub
decb
fisttpll
mov
std
out
call
pop
xlat
xor
fistpl
adc
xchg
xchg
subl
jb
mov
xor
in
test
mov
cltd
cmpsl
pop
push
cwtl
fimuls
dec
mov
test
mov
inc
and
jns
sub
adc
out
adc
data16
jecxz
xlat
lea
lahf
lods
sub
aad
loope
pop
or
mov
dec
fsts
aad
rorb
xor
icebp
les
sbb
in
cmp
sbb
mov
ja
ss
mov
in
stos
call
loope
jno
dec
jne
out
ds
fwait
enter
fiaddl
add
iret
inc
mov
sti
fistpl
outsb
cmp
aam
repz
dec
fidivl
arpl
dec
out
out
sarl
cmpsb
dec
push
adc
iret
pop
hlt
cld
lds
jns
outsl
cmp
cmp
mov
pop
mov
test
jge
outsl
xchg
add
xor
sub
rol
repz
mov
mov
andl
insl
push
aas
mov
call
test
sbb
jle
inc
dec
xchg
lea
adc
rcll
int3
shlb
mov
mov
dec
push
or
ficoml
mov
pop
lea
pop
sahf
pop
and
in
inc
sbb
daa
movsl
ja
inc
pop
sub
fsubl
add
scas
stos
popa
cmpsl
fwait
push
idivb
call
cli
xchg
fs
dec
mov
mov
push
lock
inc
cld
imull
or
into
dec
mov
sub
xchg
aas
dec
jns
pop
sub
aas
cld
dec
andl
aaa
xchg
push
push
call
and
pop
test
xor
pop
pop
in
int3
ljmp
lea
test
dec
and
into
sbb
ds
fucomip
fimull
aas
xchg
arpl
mov
push
mov
xor
in
lcall
and
aam
fst
cs
mov
dec
sbb
mov
adc
cli
sahf
dec
pop
sbb
dec
add
js
mov
hlt
dec
inc
mov
jns
lock
cli
fwait
les
inc
pushf
call
cmpsb
lret
sbb
push
sbb
gs
and
lods
sbb
pusha
repz
pop
push
jns
enter
mov
test
adc
ret
jo
popf
ds
mov
adc
sbb
jo
ret
shr
xchg
aaa
pop
adc
shlb
sbb
mull
outsb
inc
pop
ljmp
pop
cltd
jo
mov
xor
sbb
cmp
mov
push
in
lret
pop
jae
and
mov
adc
leave
movsb
or
icebp
loop
filds
and
inc
mov
cli
sbb
shl
fs
mov
xor
mov
pop
fdivs
mov
data16
daa
les
fsubrl
xchg
push
fisubrs
push
pop
mov
pop
push
mov
add
inc
dec
lds
sbb
mov
ss
fistpll
test
mov
dec
pop
sub
sub
loop
test
mov
mov
imul
inc
mov
jne
pusha
shlb
fwait
xor
xchg
fldl
repz
xor
in
jmp
clc
dec
arpl
mov
test
and
pusha
xorb
test
add
sub
imul
icebp
xlat
lods
out
mov
inc
inc
push
loopne,pt
sbb
jmp
sbb
mov
mov
adc
aas
sbb
mov
test
je
pushf
jecxz
adc
jge
push
out
ja
pop
daa
outsl
fists
aas
mov
fsubp
pusha
stos
push
test
fsubr
inc
rclb
pop
sub
dec
jmp
fisttpll
xor
inc
enter
add
stos
int
pop
mov
pop
ds
adc
sub
xchg
cmp
cli
mov
sahf
or
fwait
ja
lds
es
je
mov
mov
and
ret
jle
sub
in
inc
add
dec
rol
subl
rol
cltd
adc
scas
inc
add
push
insl
lds
pop
mov
pushl
aaa
sbb
imul
cmp
ds
mov
es
iret
mov
cs
jle
push
adc
xor
arpl
insb
gs
aaa
inc
popf
push
sti
pop
repz
jp
call
push
inc
int
inc
mov
inc
push
inc
stc
mov
dec
fnstcw
sbb
into
jge
scas
je
xchg
pop
arpl
ja
xor
mov
push
es
shlb
ds
adc
lods
pushf
pop
cmp
xchg
fimuls
and
insb
lcall
mov
enter
xor
xchg
push
xchg
dec
xrelease
mov
outsl
nop
loope
pop
jg
xchg
xlat
add
faddl
and
movsl
fadd
xchg
aam
sbb
scas
dec
leave
nop
adc
cmpsl
xor
push
subl
mov
cmpsb
lods
mov
sti
loope
jae
jb
fidivrl
jmp
cld
popf
dec
adc
sbb
pop
sbbl
pop
pop
pop
in
add
cwtl
pop
dec
popa
pusha
out
pop
imul
in
cmp
xor
fdivs
pop
mov
or
aaa
sub
xor
xchg
sbb
sub
pop
loope
cwtl
daa
xchg
insl
jg
ret
and
pop
mov
les
pushf
mov
std
bound
inc
ss
les
int
aaa
inc
mov
clc
mov
sbb
jp
daa
test
cmpl
in
sub
push
flds
mov
pop
add
pop
lods
fiaddl
inc
push
je
arpl
lahf
lods
xor
int3
shll
arpl
pop
xchg
repz
push
mov
fcompp
mov
dec
cmp
addr16
inc
add
loop
or
mov
lcall
add
push
jge
or
mov
push
sbb
pop
sub
popa
mov
aad
nop
mov
out
imul
daa
adcl
mov
mov
hlt
arpl
in
stos
push
adc
lods
je
push
inc
inc
andl
cld
xchg
jns
enter
and
stos
cmp
push
mov
in
mov
subb
mov
jle
fcompl
pop
rorl
iret
push
xchg
sbb
sub
std
repnz
adc
mov
inc
dec
test
and
std
addr16
mov
jl
add
jne
out
dec
add
cltd
jnp
push
pop
xchg
insb
gs
sbb
jg
outsl
or
mov
jo
dec
add
adc
js
bound
inc
repz
xchg
xorl
or
sbb
sbb
sub
sub
fucomp
notb
dec
testl
mov
popfw
icebp
sub
rcll
push
std
push
fnstcw
add
rcrl
add
pop
movsb
jp
xorb
cmp
cmp
mov
xchg
sbb
fnstcw
flds
xchg
or
or
jecxz
addr16
sub
out
sub
xor
fs
lds
jno
rcll
or
icebp
pop
ss
scas
inc
sub
loopne
lea
add
sbbl
lret
sbb
xchg
loopne
js
scas
test
popf
pop
pop
movsb
scas
outsb
sti
add
iret
adc
fistps
stos
push
loope
jno
pop
lea
ficoms
jae
pop
ret
lock
pop
add
sbb
adc
enter
xchg
in
fistl
in
mov
cmp
sbb
in
inc
xchg
xor
jle
xchg
movsl
test
inc
mov
ljmp
sbb
jle
outsb
outsb
lods
mov
pop
or
ljmp
mov
cmp
test
movzwl
jl
dec
in
jne
lods
fwait
mov
into
lret
dec
push
mov
dec
push
daa
and
cmp
xlat
mov
nop
adc
pusha
inc
rol
cmp
mov
mov
popf
jo
cmpsl
fidivrl
test
rolb
inc
or
lret
imul
lods
out
and
cmp
ds
int
push
in
push
mov
in
repz
pop
ss
rorl
add
aam
out
loop
xchg
or
call
enter
inc
mov
add
cs
push
test
das
in
movsb
rcr
xchg
in
or
pop
mov
fstpt
in
addb
mov
cmp
fxtract
dec
cld
fsubs
xchg
sub
negb
pop
push
sub
in
out
mov
mov
dec
js
icebp
jo
mov
mov
pop
adcb
and
inc
insl
add
je
adc
dec
dec
js
mov
sbb
xchg
mov
dec
scas
lods
out
ds
in
out
adc
les
add
inc
xabort
pop
add
es
jle
inc
ret
sbb
cmp
popa
mov
lea
pop
xchg
xor
xor
jecxz
stos
sub
jecxz
cmpsl
fwait
fs
inc
xlat
mov
add
push
inc
retw
pop
out
imul
aam
repz
les
addr16
inc
mov
adc
imul
sbb
fwait
mov
inc
adc
int
call
lock
daa
push
mov
outsb
into
pusha
lret
inc
shlb
cs
and
dec
inc
int3
jmp
xchg
and
ficomps
adcl
leave
mov
inc
stos
mov
jmp
imul
adc
xor
sbb
sbb
cmp
inc
jb
mov
scas
or
aam
jns
pextrw
lar
fidivrl
mov
and
xchg
mov
xlat
jnp
cmp
sbb
ret
pop
xor
idivl
and
fldl
xchg
push
in
cmc
inc
sysenter
out
xchg
sti
js
out
xchg
sbb
pop
jp
jnp
mov
mov
js
dec
testb
hlt
jmp
push
aaa
jge
and
jge
sti
mov
mov
orl
pop
ljmp
cmp
imul
xchg
repz
clc
push
stos
pop
lret
adc
mov
add
mov
vmovaps
out
push
xchg
adc
roll
stos
notl
int
das
mov
inc
sbb
dec
popa
cmp
data16
or
fisttps
push
arpl
loopne
mov
lods
outsl
stos
cld
xchg
ficoml
dec
xor
shrd
push
loope
add
icebp
inc
xchg
sbb
cmpsb
jmp
xchg
jne
out
testl
sbb
sbb
mov
hlt
mov
jle
ljmp
and
sbb
jno
lcall
in
scas
jb
das
jo
push
movsb
out
and
or
adc
or
sbb
fcmovnbe
sub
test
cmpsl
cmp
test
add
leave
add
dec
iret
push
aas
dec
ret
adc
jo
mov
sbb
sub
lock
fstpl
mov
sti
adc
out
jmp
std
mov
test
sbb
push
das
jne
sub
add
adc
out
leave
xchg
xchg
xor
jbe
popa
testl
sub
clc
adc
mov
inc
sub
in
clc
repnz
lret
mov
ret
mov
inc
clc
popa
or
dec
in
dec
daa
insb
push
fldenv
jl
stos
js
mov
es
inc
pop
sub
loope
mov
popf
mov
xchg
cmp
shll
hlt
mov
imul
or
pop
addb
add
xor
add
fnstenv
iret
lret
enter
ds
lock
fdivrl
rclb
call
jb
lods
cwtl
mov
xchg
lcall
rcl
xchg
adc
add
stc
in
pusha
mov
out
pushf
fbld
movsl
fidivrs
sbb
popa
into
mov
xchg
ljmp
addr16
movsl
push
popa
sub
mov
std
add
imul
call
loope
icebp
imul
add
inc
xlat
push
jg
sub
aad
dec
jl
std
cltd
imul
out
add
mov
jl
cmp
cmpsb
rorb
in
out
in
mov
xor
jbe
adc
leave
insb
aas
fs
adc
mov
imul
sbb
dec
or
mov
bound
cli
jo
mov
orb
xor
das
jbe
jmp
std
fs
inc
cmpsb
mov
sar
insl
dec
xor
popf
clc
js
jne
outsl
inc
cmp
cmc
mov
add
sbb
loop
aam
cwtl
pop
jge
xchg
loop
and
cwtl
test
cs
mov
and
fs
pop
aaa
icebp
jo
add
sti
call
mov
dec
cmp
movsl
test
nop
dec
scas
loop
pop
out
sbb
and
dec
mov
rcl
inc
shrl
adc
subl
outsb
fldt
nop
shrl
sbb
add
mov
fmul
in
arpl
push
outsb
lea
repz
fidivrl
add
scas
mov
fs
push
arpl
jb
xor
data16
mov
mov
xchg
stos
sbb
fimull
sub
mov
dec
rorb
loopne
ja
icebp
addr16
rorl
push
fdivrs
pop
outsl
jmp
xchg
and
mov
xor
xor
jle
sub
dec
mov
lret
lods
xlat
fdivrs
add
stos
push
mov
mov
add
fldenv
sbb
push
cmp
andb
jb
test
andl
xchg
in
pop
subps
nop
jge
daa
cmpsb
ja
push
jo
in
in
inc
neg
push
daa
sub
js
push
and
stc
cmpsb
adc
sub
repnz
xlat
nopl
jnp
into
dec
fsts
sbb
and
or
mov
loop
add
sahf
in
sbb
mov
cld
pop
xchg
pop
insb
jb
adc
orb
in
xchg
inc
cmpsl
fdiv
cs
pop
jnp
xchg
adc
mov
lret
cmp
mov
push
push
push
enter
or
push
or
add
fbld
fnstsw
cmc
xchg
pop
loop
fs
pop
test
add
shrb
cmp
lret
inc
pop
ret
enter
dec
cmp
cmp
sbb
cmpb
jnp
fstl
mov
cld
mov
inc
cld
mov
arpl
test
mov
out
les
inc
arpl
movsb
xchg
jno
shlb
test
insl
sahf
xor
xor
std
add
int3
and
sti
loop
pop
ret
inc
jns
std
cmpsb
movsb
pop
lock
sbb
adc
stos
adcb
push
jmp
iret
aad
jae
sub
mov
pop
add
cltd
sub
popa
push
lods
and
push
and
sub
jne
stos
test
or
sbb
test
add
jle
and
sbb
sbb
mov
jnp
mov
retw
pop
mov
imul
cmp
sub
inc
mov
jbe
mov
pop
lock
test
call
push
and
repz
push
sub
add
push
shrb
in
pop
data16
xor
cmpsb
fcmovnbe
and
mov
pop
das
stc
sbb
xorb
adc
sbb
cmpl
inc
clc
adc
mov
mov
or
or
stc
insl
jg
xchg
xor
inc
cwtl
out
push
mov
jp
inc
inc
and
movsl
sahf
xorb
js
xor
mov
mov
inc
sub
out
aas
std
push
int
jl
cs
sbb
imul
and
mov
sbb
mov
ret
scas
jecxz
and
xor
dec
push
mov
int3
cmp
and
push
inc
sbb
subl
daa
jne
xchg
arpl
ret
mov
or
jo
dec
into
hlt
mov
mov
jmp
xchg
cmp
pop
fsubp
aad
mov
shr
ret
enter
inc
mov
lret
lcall
in
cs
xor
xchg
push
imul
mov
fsubrs
xchg
jnp
mov
les
xor
jb
test
jns
jecxz
mov
jae
test
push
xor
pushf
jmp
mov
mov
mov
dec
sbb
pop
jns
cltd
ds
mov
xor
mov
scas
into
insl
out
repz
iret
or
fchs
cmp
stos
cmp
and
out
das
mov
pop
mov
jle
xor
xchg
popf
add
jle
outsb
loop
sarb
push
push
dec
fimuls
arpl
cltd
insb
dec
int3
test
addb
frstor
aam
movsl
jb
push
jne
jle
out
push
cmpsl
sub
inc
f2xm1
dec
xchg
jnp
adc
clc
mov
imul
adc
add
into
and
imul
push
subl
out
lods
jmp
sub
jp
add
push
push
xchg
jmp
inc
or
xchg
or
jnp
loopne
mov
call
mov
inc
mov
aas
mov
pop
sbb
inc
fdivs
test
stos
popa
push
and
lret
mov
xchg
sub
hlt
data16
sahf
pop
jno
and
jle
pop
xor
push
shll
out
loope
push
mov
or
xor
dec
fadds
scas
jbe
ds
rep
push
xchg
xchg
ret
clc
out
add
sbb
in
jl
dec
and
mov
std
inc
mov
mov
mov
add
cmpsb
cmp
adc
xor
push
push
cwtl
push
adcb
push
jo
mov
jo
lods
jnp
xchg
scas
cmp
add
inc
iret
in
xchg
es
scas
arpl
push
ret
xchg
sub
adc
cltd
mov
pusha
or
xchg
pop
push
ljmp
mov
or
imul
outsb
imul
pop
icebp
imul
ja
shrl
sub
and
add
adc
popf
mov
insl
push
and
int
test
cld
icebp
adc
lods
mov
sub
int
aaa
cmc
inc
xlat
mov
push
and
int3
or
jo
lock
rol
push
mov
or
push
repz
mov
mov
pop
ret
clc
cwtl
rcrb
int
int
xor
jmp
ds
xchg
xchg
sti
push
inc
sbb
adc
aaa
cmp
add
push
sbb
sbb
sbb
ja
outsl
fiaddl
jno
imul
