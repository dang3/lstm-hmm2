xor
popf
adc
jge
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
xor
lea
call
mov
mov
jle
inc
add
sbb
add
or
testb
je
jmp
xor
jmp
testb
je
jmp
push
mov
push
mov
test
mov
jne
mov
mov
test
je
mov
push
lea
push
push
push
call
test
pop
js
mov
test
jg
neg
sbb
and
add
mov
fildl
pop
fdivrl
fstps
fldz
fcomps
fnstsw
flds
test
jp
faddl
pop
jmp
or
jmp
push
mov
sub
mov
add
mov
andl
mov
mov
lea
mov
mov
push
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
je
cmpb
jne
mov
mov
push
call
pushl
mov
mov
push
push
call
lea
call
mov
jmp
mov
mov
xor
pop
leave
ret
push
mov
lea
movl
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
sub
mov
mov
mov
orl
orl
andl
lea
mov
mov
mov
lea
mov
mov
push
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
je
cmpb
jne
mov
mov
push
call
pushl
mov
mov
push
push
call
lea
call
mov
jmp
mov
mov
xor
pop
leave
ret
push
mov
and
sub
push
push
push
xor
cmp
je
cmpl
ja
mov
testb
jne
testb
jne
push
call
cmp
pop
je
xor
call
mov
cmp
mov
je
mov
push
call
mov
push
mov
push
push
push
mov
call
mov
pushl
mov
mov
call
lea
orb
mov
and
mov
cmp
jne
testb
je
call
cmp
jne
cmp
je
mov
cmp
jne
xor
mov
mov
call
mov
xor
cmp
je
cmpb
jne
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
call
cmp
jle
cmp
jle
lea
push
mov
push
lea
call
test
js
mov
mov
lea
push
lea
call
mov
orl
orl
movb
mov
orl
orl
mov
mov
xor
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
test
je
mov
add
push
call
test
je
mov
lea
push
mov
call
mov
dec
je
dec
jne
mov
mov
xor
pop
leave
ret
mov
jmp
mov
jmp
push
mov
sub
mov
add
mov
andl
mov
mov
lea
mov
mov
push
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
je
cmpb
jne
mov
mov
push
call
pushl
mov
pushl
mov
push
push
call
lea
call
mov
jmp
mov
mov
xor
pop
leave
ret
mov
mov
jmp
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
cmp
mov
jne
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
mov
test
push
mov
push
je
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
call
pop
test
je
mov
mov
push
call
xor
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
call
test
pop
je
mov
jmp
push
mov
push
push
andl
andl
mov
push
mov
push
mov
mov
testb
mov
jne
call
test
jne
pop
pop
leave
ret
lea
call
mov
mov
mov
mov
jmp
push
lea
mov
call
test
je
jmp
push
mov
push
push
push
push
push
lea
mov
mov
lea
lea
cmp
mov
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
pop
mov
pop
pop
leave
ret
push
mov
push
push
mov
mov
call
mov
mov
xor
cmp
jbe
push
push
pop
mov
mov
movb
mov
mov
call
mov
inc
add
cmp
jb
pop
mov
xor
call
pop
xor
pop
pop
ret
push
mov
sub
push
mov
mov
lea
push
add
push
mov
call
test
pop
pop
js
cmpl
push
push
lea
mov
je
mov
or
je
call
cmp
jg
jl
cmp
ja
xor
mov
cmp
je
cmp
jne
test
jne
push
call
test
pop
je
lea
push
push
pushl
lea
push
pushl
mov
call
mov
test
mov
je
mov
push
call
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
push
push
call
test
jne
lea
call
test
je
mov
push
call
xor
pop
pop
pop
leave
ret
mov
jmp
push
call
test
pop
je
lea
push
push
pushl
add
push
pushl
mov
call
lea
call
xor
push
pushl
call
test
jne
lea
call
mov
jmp
xor
jmp
mov
jmp
push
mov
and
sub
mov
xor
mov
push
push
push
mov
push
push
push
push
pushl
lea
push
call
lea
mov
cmpl
je
testb
jne
mov
xor
cmp
jbe
add
mov
mov
mov
mov
testb
jne
mov
addl
inc
cmp
jb
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
push
mov
shl
push
lea
mov
lea
cmp
jne
mov
mov
add
mov
pop
lea
pop
leave
ret
push
mov
mov
push
mov
xor
push
and
xor
mov
mov
xor
mov
and
xor
mov
xor
and
xor
mov
mov
xor
and
xor
mov
mov
mov
mov
mov
fldl
fstpl
flds
fstps
mov
test
mov
je
mov
push
call
mov
mov
lea
movl
mov
pushl
add
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
lcall
ljmp
add
pop
rcrb
push
push
movl
mov
movl
call
push
lea
call
fldl
add
cmp
movl
fstpl
mov
mov
mov
jne
mov
cmp
jne
xor
xor
mov
mov
cmp
mov
mov
je
mov
lea
mov
mov
lea
push
push
mov
mov
movl
movl
mov
call
mov
push
call
mov
mov
add
test
jne
test
jne
mov
mov
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
cmpl
jne
xor
ret
push
mov
sub
push
mov
mov
push
lea
push
mov
xor
call
mov
cmp
mov
je
push
lea
push
push
mov
mov
push
call
mov
mov
and
jne
pushl
lea
call
cmp
jne
mov
test
je
mov
lea
push
push
call
test
jne
xor
cmp
sete
mov
lea
call
pop
shl
lea
xor
lea
and
xor
or
mov
shr
and
call
mov
pop
pop
leave
ret
push
mov
push
andl
mov
andl
lea
push
push
call
test
js
testl
mov
push
push
jne
call
leave
ret
mov
mov
mov
mov
xor
ret
push
mov
sub
push
mov
mov
push
mov
push
lea
lea
xor
testb
push
mov
lea
lea
mov
movl
mov
movl
mov
mov
push
jne
push
pushl
push
call
mov
push
pushl
call
xor
cmp
je
cmp
jne
mov
mov
lea
push
push
mov
call
mov
andl
andl
push
lea
lea
movl
mov
call
cmp
mov
jne
mov
or
mov
mov
push
push
call
movzbl
andl
add
push
mov
and
call
mov
mov
mov
lea
push
push
pushl
push
push
push
call
test
js
cmpl
jne
lea
call
testb
jne
testb
jne
xor
inc
pop
pop
pop
leave
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
push
push
movl
push
movl
call
mov
mov
lea
cmp
jne
push
call
pop
xor
pop
pop
jmp
push
call
pop
mov
movl
jmp
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
mov
test
push
push
mov
jne
mov
mov
add
cmp
jae
mov
and
jne
add
cmp
jb
and
or
mov
mov
and
cmp
jne
lea
push
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
mov
mov
mov
test
jne
ret
push
mov
and
sub
push
mov
push
push
xor
push
lea
mov
call
mov
lea
push
push
pushl
push
call
pushl
mov
lea
mov
call
lea
call
cmp
mov
je
push
lea
push
pushl
mov
call
mov
add
cmp
jne
push
push
push
lea
push
mov
mov
call
cmp
jne
mov
cmp
jne
push
push
push
lea
push
mov
mov
call
mov
cmp
je
testl
je
lea
cmp
jne
lea
call
lea
call
pop
pop
pop
mov
pop
ret
push
mov
mov
call
test
jne
push
mov
and
mov
test
push
je
mov
mov
test
je
test
mov
je
mov
push
call
xor
pop
pop
pop
ret
test
je
push
call
pop
test
je
mov
mov
call
mov
test
je
mov
push
call
mov
test
mov
jne
mov
test
jne
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
push
push
mov
andl
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
test
je
lea
mov
push
push
push
push
call
lea
call
leave
ret
xor
jmp
push
mov
mov
sub
test
push
mov
push
push
jne
mov
test
jne
push
call
lea
xor
call
lea
mov
test
jne
lea
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
cmpl
je
mov
mov
mov
mov
lea
call
mov
call
xor
mov
call
lea
xor
call
lea
mov
test
jne
lea
xor
call
cmpl
je
mov
call
lea
mov
xor
cmp
jne
cmp
jne
pop
pop
pop
leave
ret
mov
push
call
xor
mov
call
jmp
cmp
jbe
lea
push
call
mov
lea
push
push
push
call
pushl
call
pop
jmp
push
mov
push
push
mov
push
push
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
cmpl
je
or
mov
xor
pop
pop
pop
mov
pop
ret
mov
test
je
push
mov
call
cmp
jle
mov
cmp
je
xor
cmp
je
inc
inc
mov
cmp
jne
orb
jmp
cmpl
mov
je
mov
call
xor
movl
mov
inc
jmp
push
mov
push
mov
lea
cmp
je
cmp
je
mov
mov
call
test
jne
cmp
jne
mov
cmp
jb
ja
mov
cmp
ja
mov
mov
mov
mov
mov
mov
andl
incl
pop
pop
ret
mov
jmp
push
mov
push
mov
test
je
mov
mov
cmp
jne
test
je
mov
and
or
jne
mov
pop
pop
ret
mov
mov
mov
mov
mov
add
cmpl
je
add
push
call
cmpl
je
mov
jmp
xor
jmp
push
mov
sub
push
mov
mov
and
or
push
mov
jne
cmp
je
lea
push
mov
push
lea
call
cmpl
je
pushl
mov
pushl
call
mov
orl
mov
pop
pop
leave
ret
mov
call
call
test
je
jmp
mov
call
test
je
push
lea
mov
cmp
je
cmpl
jne
lea
mov
call
cmp
jne
cmp
pop
je
push
push
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
movl
movl
call
add
test
je
mov
push
mov
mov
mov
push
add
push
xor
mov
mov
call
test
jne
mov
lea
cmp
je
mov
lea
call
test
je
lea
mov
mov
mov
cmp
je
mov
push
mov
call
test
je
mov
movl
mov
pop
pop
mov
pop
pop
ret
mov
cmp
je
jmp
push
mov
mov
push
push
push
xor
push
call
cmp
je
cmp
mov
mov
mov
mov
mov
movl
add
inc
and
movl
movl
mov
mov
mov
cmp
je
inc
mov
movl
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
mov
test
je
call
testb
movl
add
mov
pop
ret
pushl
mov
pushl
add
mov
push
call
xor
ret
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
mov
andl
mov
mov
and
je
mov
push
push
push
call
ret
test
mov
je
push
mov
test
je
cmpl
je
push
call
mov
push
push
call
test
js
mov
test
je
pushl
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
mov
mov
mov
movl
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
test
mov
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
lea
push
mov
push
lea
push
mov
push
push
mov
push
call
mov
mov
test
jne
test
jne
mov
mov
push
push
call
mov
mov
push
push
call
mov
test
jns
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
lea
xor
testb
mov
mov
movl
movl
mov
inc
add
je
xor
mov
lea
push
mov
push
push
push
lea
push
push
call
test
js
mov
cmp
jne
lea
call
test
je
mov
push
call
test
je
mov
lea
push
push
call
mov
inc
lds
add
test
icebp
aaa
add
icebp
aaa
add
add
test
icebp
aaa
add
icebp
aaa
add
add
test
icebp
aaa
add
inc
and
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
add
cmp
pop
mov
mov
pop
jae
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
mov
mov
test
push
push
push
je
mov
shr
test
mov
je
mov
and
mov
lea
lea
mov
mov
test
jne
mov
test
jne
mov
andl
andl
push
call
mov
sub
lea
push
lea
push
push
call
mov
mov
mov
add
dec
shl
and
or
mov
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
sub
push
push
mov
push
mov
pushl
call
mov
pop
xor
cmp
je
cmp
lea
jne
mov
cmp
jne
mov
mov
mov
mov
call
test
je
mov
cmpl
ja
pushl
andl
call
pop
movl
pushl
call
pop
pushl
call
pop
pushl
call
xor
cmp
pop
jne
mov
cmp
je
lea
mov
mov
mov
add
push
call
mov
add
lea
cmp
je
mov
mov
mov
cmp
je
movl
mov
mov
mov
imul
add
add
cmp
mov
jne
mov
push
push
push
add
push
call
mov
add
mov
cmp
jne
mov
mov
test
je
mov
push
call
mov
test
je
mov
call
mov
push
call
pop
mov
xor
add
cmp
mov
jne
push
push
push
xor
push
inc
call
mov
cmp
jne
mov
mov
call
test
je
mov
cmp
je
add
mov
dec
int3
inc
add
add
add
dec
add
mov
lock
addb
add
add
call
cmp
pop
je
mov
mov
movl
mov
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
push
pushl
push
call
lea
call
pushl
call
pop
pop
pop
pop
leave
ret
mov
test
je
lea
mov
mov
add
push
call
push
push
call
pushl
jmp
movl
call
jmp
mov
mov
mov
mov
cmp
mov
je
incl
mov
cmp
mov
je
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
mov
call
mov
push
push
push
push
push
xor
call
mov
add
mov
cmp
jne
mov
pushl
push
call
mov
call
mov
add
mov
pushl
push
call
mov
mov
pushl
add
mov
fnsave
add
add
add
add
dec
mov
mov
call
mov
lea
push
pushl
call
jmp
push
lea
call
lea
call
lea
call
lea
call
testb
pop
jne
ret
push
mov
push
push
xor
cmp
jne
push
mov
lea
call
mov
pushl
neg
sbb
and
mov
add
call
mov
mov
pop
mov
pop
leave
ret
push
mov
push
mov
lea
push
call
inc
add
mov
lea
call
pop
xor
pop
ret
push
mov
and
mov
mov
sub
test
push
push
push
je
mov
mov
mov
mov
mov
call
cmpl
mov
je
cmpl
je
xor
pop
pop
pop
mov
pop
ret
push
push
mov
push
mov
test
jle
cmp
jg
push
pop
cmp
je
cmp
jg
push
pop
cmp
jne
mov
push
call
test
pop
jne
mov
push
pop
pushl
mov
pushl
call
test
je
xor
mov
inc
pop
pop
pop
ret
push
pop
cmp
jne
jmp
push
pop
cmp
jne
mov
push
call
test
pop
jne
mov
push
jmp
mov
push
call
test
pop
jne
mov
xor
inc
jmp
push
push
pop
mov
call
test
je
mov
jmp
push
mov
sub
test
je
mov
cmp
mov
ja
mov
sub
lea
mov
cmp
mov
lea
jb
lea
mov
andl
mov
lea
push
push
call
mov
leave
ret
cmp
jb
push
jmp
mov
jmp
push
mov
push
push
push
mov
decl
jne
cmpl
jne
cmpl
je
mov
xor
test
je
lea
push
push
mov
mov
push
call
mov
test
mov
je
mov
push
push
pushl
push
call
lea
call
pop
leave
ret
push
mov
movl
movl
mov
test
push
mov
je
mov
test
je
test
je
push
call
pop
andl
andl
lea
movl
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
mov
mov
mov
mov
push
mov
push
mov
mov
mov
mov
mov
call
cmpl
je
mov
push
mov
call
test
mov
pop
je
push
push
push
pushl
mov
pushl
pushl
call
mov
push
call
mov
andl
mov
pop
push
pushl
lea
push
mov
call
lea
push
call
cmpl
je
mov
mov
push
call
mov
movl
mov
test
pop
je
push
push
push
pushl
mov
pushl
pushl
call
mov
xor
mov
mov
testl
jne
pushl
lea
pushl
mov
push
push
push
pushl
pushl
pushl
call
inc
add
mov
add
xor
add
push
or
dec
and
push
mov
mov
mov
mov
push
push
call
mov
mov
call
mov
mov
mov
xor
lea
call
mov
pop
pop
pop
mov
pop
ret
cmpl
jne
test
mov
je
mov
mov
test
jne
mov
mov
ret
mov
mov
test
jne
test
mov
je
mov
mov
mov
test
je
jmp
xor
jmp
push
mov
push
mov
mov
cmp
je
mov
test
push
push
je
mov
add
je
add
mov
test
jne
mov
andl
mov
mov
test
je
push
push
pushl
call
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
jmp
push
mov
test
je
mov
push
call
mov
mov
mov
pop
ret
push
push
lea
push
mov
push
call
mov
mov
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
cmp
je
mov
mov
lea
call
mov
mov
cmp
jne
cmp
je
push
push
lea
mov
call
mov
mov
push
call
cmp
pop
pop
mov
pop
jne
cmp
je
push
push
push
push
push
push
pushl
mov
call
lea
call
lea
call
lea
call
mov
pop
leave
ret
mov
test
je
mov
push
call
cmpl
je
mov
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
test
je
push
movl
xor
cmpb
jne
test
je
nop
mov
cmpb
jne
mov
test
je
mov
mov
test
jne
mov
test
je
mov
mov
push
call
mov
pop
ret
cmpl
je
testb
je
mov
mov
mov
test
je
mov
mov
push
call
test
je
mov
test
je
cmpb
je
mov
test
jne
jmp
mov
jmp
push
mov
sub
andl
push
mov
andl
push
push
lea
mov
call
mov
mov
mov
push
call
test
pop
jne
pushl
and
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
mov
mov
sub
push
xor
cmp
jne
push
lea
cmp
je
mov
mov
mov
mov
push
call
xor
pop
pop
leave
ret
call
cmp
je
pushl
mov
push
call
jmp
lea
push
lea
mov
movl
movl
mov
mov
call
mov
test
js
push
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
test
pop
jne
pushl
mov
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
lea
call
lea
call
jmp
push
mov
sub
push
push
mov
movl
mov
add
cmpl
jne
mov
andl
mov
call
mov
fstps
add
decl
jne
pop
pop
leave
ret
mov
call
test
je
mov
mov
pushl
mov
push
push
push
call
fldz
mov
add
mov
jmp
mov
call
test
jne
cmpl
jne
mov
andl
mov
call
jmp
int3
int3
int3
int3
push
mov
and
sub
cmpl
push
push
je
mov
cmp
jne
mov
cmp
je
mov
push
call
add
test
je
movl
movl
movl
mov
test
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
test
jbe
xor
mov
jmp
lea
mov
mov
or
lea
je
mov
mov
add
mov
call
test
je
add
mov
mov
je
mov
mov
mov
push
push
call
mov
mov
sub
fstl
lea
fld1
fsubp
fstpl
push
push
lea
push
call
add
add
subl
jne
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
mov
mov
test
je
push
mov
call
mov
add
mov
mov
cmp
je
mov
sub
test
mov
mov
je
test
je
push
call
mov
add
movl
mov
test
js
mov
cmp
ja
test
je
mov
mov
lea
push
mov
mov
push
push
push
push
push
movl
call
xor
test
js
mov
mov
cmp
je
mov
add
add
sub
sub
add
adc
cmp
jne
cmp
jae
mov
mov
sub
call
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
mov
test
js
movl
test
je
test
je
push
call
add
mov
mov
mov
jmp
mov
cmpl
ja
cmp
jne
cmpb
je
jmp
mov
jmp
pop
pop
xor
pop
mov
pop
ret
int3
int3
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
add
sub
mov
cmp
jne
mov
cmp
jne
mov
cmp
jbe
cmp
je
cmp
je
push
call
add
lea
call
inc
add
les
ret
add
lea
mov
call
mov
cmp
je
mov
mov
sub
and
cmp
mov
mov
jne
mov
mov
lea
push
lea
call
test
je
jmp
mov
add
mov
jmp
push
mov
push
push
push
xor
cmp
mov
jne
mov
mov
push
mov
push
call
pop
lea
mov
call
add
adc
pop
xor
pop
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
cmpl
jge
mov
pushl
mov
call
mov
xor
mov
mov
push
call
mov
sub
sub
push
cltd
pop
idiv
mov
push
cmp
mov
jae
call
push
lea
mov
call
lea
push
push
lea
call
test
jne
lea
call
pop
mov
pop
leave
ret
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
push
mov
lea
mov
call
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
mov
push
lea
push
mov
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
test
push
je
lea
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
xor
jmp
push
call
test
pop
je
movl
movl
andl
test
mov
mov
je
mov
push
call
xor
ret
xor
jmp
pushl
mov
add
push
call
xor
ret
push
mov
sub
testb
jne
push
mov
call
test
je
mov
test
push
push
pop
je
mov
push
mov
mov
call
test
pop
je
mov
test
jl
cmp
jle
test
jl
mov
mov
andl
andl
push
add
lea
movl
movl
call
mov
mov
test
je
mov
push
push
add
push
push
call
xor
pop
pop
leave
ret
push
mov
mov
sub
push
push
mov
push
mov
call
pop
pushl
push
call
test
jl
mov
test
je
cmpb
je
test
jne
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
and
push
cmpl
push
je
call
test
js
mov
cmpl
jne
andl
push
call
mov
mov
mov
mov
pop
call
push
call
pop
mov
pop
ret
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
movb
mov
mov
push
call
pushl
pushl
push
call
pop
pop
ret
mov
add
mov
mov
add
or
mov
ret
push
mov
sub
push
mov
mov
test
jne
push
or
xor
cmp
mov
jne
cmp
ja
and
mov
mov
mov
call
orb
call
mov
mov
mov
movb
mov
cmp
jne
mov
add
mov
mov
cmp
je
cmpb
jne
mov
lea
lea
movsl
movsl
movsl
movsl
mov
mov
push
call
pushl
mov
pushl
mov
call
test
lea
js
call
mov
pushl
mov
call
lea
call
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
mov
mov
lea
push
mov
add
movl
call
test
jne
mov
leave
ret
push
lea
sub
mov
xor
mov
mov
mov
andl
andl
int
add
jl
repnz
inc
movl
dec
mov
jb
adc
inc
les
add
add
push
call
mov
push
pushl
mov
add
mov
test
je
pushl
movzwl
pushl
mov
pushl
push
push
call
mov
test
jne
testb
jne
testb
jne
mov
pop
pop
mov
xor
pop
call
add
push
fadds
push
lea
sub
mov
xor
mov
andl
andw
push
mov
push
mov
push
pushl
mov
lea
push
lea
mov
movl
movl
mov
call
mov
pop
pop
push
pushl
push
pushl
push
call
testb
mov
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
movzbl
mov
mov
xor
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
test
push
je
mov
test
je
mov
test
je
and
mov
test
je
mov
cmp
jne
mov
jmp
push
push
mov
push
call
add
cmpl
je
mov
mov
test
je
mov
test
je
lea
cmp
jne
mov
pop
ret
mov
test
jne
xor
pop
ret
xor
jmp
push
mov
push
push
andl
lea
push
pushl
mov
call
pop
pop
lea
call
mov
leave
ret
push
mov
sub
andl
push
mov
push
mov
mov
push
sub
push
push
lea
push
lea
mov
movl
movl
call
andl
push
pop
push
push
lea
mov
call
cmp
mov
je
cmp
je
cmp
je
lea
call
test
jg
mov
cmpl
mov
jne
inc
cmp
mov
jge
push
push
lea
call
mov
test
mov
jmp
movl
sub
mov
lea
push
mov
mov
call
mov
neg
sbb
inc
mov
lea
push
lea
add
push
mov
mov
call
mov
cmp
je
push
pop
jmp
incl
mov
cmp
jge
push
push
lea
call
mov
jmp
mov
testb
jne
testb
jne
pop
pop
pop
leave
ret
push
mov
cmp
je
push
mov
mov
mov
mov
movzwl
mov
movzwl
push
call
cmp
jne
xor
pop
pop
ret
mov
movzwl
movzwl
cmp
je
cmp
je
cmp
je
movzwl
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
cmp
je
cmp
je
cmp
jne
jmp
mov
call
movzbl
ret
cmp
ja
mov
shr
movzbl
mov
and
shl
shr
and
ret
push
mov
mov
sub
cmpl
push
push
jge
xor
cmp
jne
lea
push
push
push
mov
call
mov
mov
add
mov
and
jne
test
jne
pushl
lea
call
test
jne
testb
movb
jne
and
mov
lea
push
call
cmpl
jne
lea
mov
lea
push
push
lea
push
pushl
push
push
call
mov
test
jne
mov
cmpl
jge
cmpb
movl
jne
lea
call
mov
pop
pop
leave
ret
movl
jmp
push
mov
call
jmp
push
mov
and
sub
mov
xor
mov
push
mov
movl
movl
movl
push
xor
inc
mov
push
xor
mov
mov
mov
mov
mov
push
movl
mov
mov
call
cmp
pop
je
mov
mov
call
cmp
mov
je
incl
mov
mov
mov
push
mov
call
cmp
pop
je
mov
mov
add
push
call
push
mov
call
cmp
pop
je
mov
mov
call
mov
mov
call
cmp
mov
je
mov
cmp
mov
mov
je
mov
push
call
movl
call
cmp
mov
je
call
cmp
mov
je
call
cmp
mov
je
mov
push
call
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
cmp
mov
je
mov
push
call
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
cmp
mov
je
mov
push
call
lea
mov
push
lea
mov
movl
movl
mov
mov
mov
call
mov
pushl
mov
push
call
lea
call
mov
mov
mov
push
lea
mov
call
cmp
pop
jne
testb
jne
testb
je
pushl
call
pop
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
cmpl
je
mov
movzbl
ret
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
ret
push
mov
xor
sub
cmp
jne
push
mov
xor
inc
push
mov
lea
push
push
pushl
movl
push
movl
call
testb
jne
testb
jne
pop
leave
ret
mov
push
pushl
push
call
leave
ret
push
mov
push
mov
mov
and
cmp
je
mov
and
cmp
jne
and
shl
movl
movl
mov
mov
xor
inc
pop
pop
ret
and
shl
movl
movl
jmp
mov
cmp
je
mov
test
jne
mov
push
mov
and
cmp
jae
test
push
mov
jne
test
jne
push
call
pop
movl
pop
pop
ret
lea
cmp
je
jmp
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ja
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
test
mov
mov
je
testb
jne
mov
mov
movb
mov
mov
mov
call
testb
jne
lea
cmpl
jne
mov
test
jne
testl
jne
mov
test
je
mov
lea
push
push
xor
push
mov
call
cmp
je
mov
cmp
je
cmp
jne
mov
lea
push
mov
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
mov
mov
call
push
mov
mov
call
test
je
lea
mov
push
call
mov
mov
call
mov
push
call
pop
pop
pop
leave
ret
cmpl
je
mov
lea
push
call
jmp
mov
mov
mov
push
call
test
mov
je
mov
push
call
push
lea
lea
call
andb
lea
call
jmp
mov
cmp
mov
mov
je
mov
push
call
cmp
mov
je
mov
push
call
mov
mov
push
add
lea
call
cmp
je
test
lea
je
mov
push
call
mov
mov
call
lea
call
jmp
mov
jmp
mov
decl
mov
cmpl
jne
mov
add
push
mov
add
add
pushl
mov
pushl
pushl
call
jmp
lea
call
test
jne
jmp
push
mov
lea
call
mov
pop
jmp
push
mov
sub
mov
andl
push
push
push
push
push
lea
push
call
test
je
mov
call
test
je
mov
lea
lea
call
lea
lea
call
push
pop
cmp
jne
mov
sub
je
dec
je
lea
lea
cmp
je
cmpl
jne
lea
call
orl
lea
lea
cmp
je
cmpl
jne
lea
call
orl
cmpl
je
lea
call
cmpl
je
lea
call
cmpl
je
lea
call
xor
inc
pop
pop
pop
leave
ret
int3
sub
nop
mov
add
rolb
test
cmp
and
lea
call
mov
push
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
je
fildl
lea
fstl
fcompl
fnstsw
test
jne
fldl
fstl
fld1
fstl
fcompp
fnstsw
test
jp
lea
fldl
sub
fdivl
fstpl
call
add
pop
pop
pop
add
or
inc
add
int3
pop
loopne
je
push
push
mov
push
mov
push
push
push
call
mov
test
jne
pop
pop
pop
pop
ret
test
je
lea
push
mov
push
call
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
call
add
jne
mov
mov
call
test
jne
push
pushl
mov
call
jmp
mov
mov
call
test
je
jmp
mov
mov
call
test
je
jmp
mov
mov
call
test
je
jmp
push
mov
push
push
andl
push
lea
call
mov
lea
push
call
mov
andl
test
je
mov
lea
push
push
call
mov
lea
mov
call
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
testb
je
mov
test
mov
jne
test
je
push
call
add
mov
mov
mov
mov
and
mov
or
mov
movl
movl
movl
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
push
mov
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
cmpl
lea
mov
mov
movl
movl
mov
inc
fiadds
je
push
mov
lea
call
push
push
pushl
lea
call
mov
push
pushl
or
push
call
mov
push
push
push
lea
call
test
je
mov
movb
pushl
lea
push
call
pushl
pushl
call
add
test
jne
mov
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
je
test
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
inc
faddl
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
push
mov
sub
push
xor
mov
push
lea
call
mov
lea
push
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
cmp
je
mov
cmp
jne
mov
push
mov
lea
mov
call
pushl
call
pop
lea
call
lea
call
add
scas
add
add
ret
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
ret
push
mov
push
push
xor
push
lea
mov
call
mov
lea
add
mov
push
push
call
test
js
mov
cmp
je
mov
call
mov
lea
call
mov
pop
leave
ret
mov
andl
andl
ret
cmpl
jne
push
call
test
pop
je
andl
andl
test
mov
je
pushl
mov
call
ret
xor
jmp
push
mov
push
xor
cmp
push
mov
je
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
pushl
call
mov
lea
mov
mov
mov
cmp
pop
jne
mov
cmp
je
push
pushl
pushl
push
mov
call
add
test
je
push
mov
call
push
push
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
ret
push
mov
sub
push
push
mov
mov
push
xor
cmp
movb
jne
mov
lea
push
push
mov
call
mov
call
cmp
jne
cmp
jne
movb
mov
cmp
jne
cmp
jne
inc
add
test
pop
faddl
faddl
add
cmp
je
inc
add
add
inc
xor
mov
lea
mov
call
push
pop
pushl
lea
push
pushl
mov
movl
mov
movl
call
testb
jne
inc
add
jne
inc
add
call
pop
pop
pop
leave
ret
mov
push
call
jmp
push
mov
sub
push
push
mov
xor
cmp
je
xor
pop
pop
leave
ret
cmp
jne
mov
push
push
mov
lea
mov
mov
call
mov
cmp
je
mov
call
cmp
jne
push
mov
call
push
lea
mov
mov
call
lea
lea
mov
push
push
call
cmp
jne
lea
call
push
pushl
mov
pushl
call
mov
test
js
push
lea
lea
movl
mov
mov
mov
call
mov
lea
movb
call
lea
call
lea
call
mov
pop
jmp
cmpl
je
push
mov
lea
mov
push
call
test
js
mov
pushl
mov
push
call
pop
ret
push
push
mov
test
jne
mov
mov
lea
push
push
call
test
jne
mov
mov
mov
push
push
push
call
test
jne
mov
shr
or
pop
pop
ret
cmp
je
jmp
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
jne
mov
mov
mov
pop
pop
ret
mov
test
je
mov
push
call
xor
jmp
mov
jmp
mov
movl
movl
mov
jmp
push
mov
test
je
push
mov
add
mov
test
je
mov
push
push
call
test
pop
je
mov
push
call
xor
pop
ret
xor
jmp
push
mov
sub
mov
push
mov
push
xor
mov
mov
push
mov
call
mov
shr
and
mov
mov
mov
mov
shr
and
mov
mov
mov
call
mov
push
mov
call
add
call
xor
cmp
je
or
mov
mov
cmp
mov
je
mov
mov
mov
sbb
into
je
mov
push
call
cmp
je
mov
mov
movl
call
test
je
mov
cmpl
jne
mov
testb
jne
mov
add
mov
lea
push
call
mov
push
pushl
mov
call
cmp
mov
mov
je
lea
cmp
jne
lea
mov
add
lea
movsl
movsl
movsl
movsl
mov
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
cmp
je
mov
pushl
mov
mov
call
pop
push
lea
mov
call
mov
mov
mov
cmp
je
mov
push
push
push
pushl
mov
mov
mov
pushl
mov
lea
lea
call
pushl
lea
push
pushl
mov
call
mov
push
lea
push
push
push
pushl
lea
push
push
pushl
pushl
call
mov
xor
inc
test
jne
mov
cmpl
jne
mov
mov
call
test
jne
lea
push
push
push
call
push
push
mov
push
call
pop
mov
call
test
je
mov
call
mov
push
sub
push
push
pushl
mov
call
mov
mov
mov
push
push
mov
push
lea
push
push
pushl
call
pushl
lea
push
lea
push
push
call
add
add
mov
mov
mov
push
add
push
call
mov
add
mov
xor
lea
call
cmp
mov
jne
mov
mov
mov
mov
testb
jne
cmpl
jne
push
pushl
add
call
mov
mov
mov
and
or
jne
cmp
jne
cmp
jne
mov
mov
call
pushl
mov
call
mov
pop
pop
pop
leave
ret
mov
jmp
mov
cmp
jg
mov
mov
and
or
jne
jmp
push
push
push
call
pushl
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
movl
movl
mov
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
add
xor
push
inc
call
pop
pop
ret
push
mov
push
push
mov
push
push
lea
push
pushl
push
call
mov
test
mov
jne
cmpl
je
test
jne
xor
pop
pop
leave
ret
mov
jmp
mov
lea
call
test
je
mov
jmp
push
mov
push
push
mov
add
mov
add
push
push
push
push
push
mov
mov
mov
mov
add
mov
mov
add
mov
add
add
push
push
mov
push
sub
mov
sub
mov
mov
add
mov
add
push
mov
pushl
mov
mov
mov
mov
mov
push
push
mov
mov
mov
pushl
mov
lea
push
call
mov
mov
add
pop
add
pop
add
add
leave
ret
mov
mov
test
je
pushl
call
xor
ret
mov
mov
push
pushl
pushl
call
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
mov
je
push
push
lea
push
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
test
jne
cmp
je
lea
call
mov
pop
pop
leave
ret
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
push
call
test
mov
jne
lea
call
jmp
mov
jmp
mov
jmp
push
lea
mov
cmpl
jne
push
mov
push
call
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
mov
lea
push
push
call
test
js
cmpl
je
pushl
lea
push
lea
mov
mov
movl
movl
mov
mov
call
pop
pop
pushl
xor
pushl
pushl
push
call
testb
jne
testb
jne
mov
xor
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
add
leave
ret
push
mov
mov
test
push
push
mov
je
mov
mov
cmp
je
add
mov
test
jne
mov
andl
mov
test
jns
push
push
pushl
call
pop
pop
pop
ret
mov
mov
cmp
je
add
push
je
test
push
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
push
je
cmp
mov
je
movl
lea
push
push
push
call
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
test
je
lea
test
je
mov
mov
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
add
in
push
push
push
mov
push
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
lea
xor
call
cmpl
je
lea
mov
lea
push
push
add
push
movl
call
add
xor
pop
leave
ret
push
mov
sub
mov
sub
push
push
lea
push
lea
push
call
add
add
fiaddl
lds
pushf
in
clc
add
add
mov
mov
add
jl
into
add
add
call
add
sub
pop
popl
push
push
push
call
add
jnp
add
push
add
cmpsl
add
add
pop
out
add
xchg
mov
xchg
nop
xchg
jns
xchg
mov
mov
lods
add
rolb
add
add
out
push
add
roll
add
jno
add
into
add
add
in
hlt
pop
push
push
lea
push
call
push
add
divb
fisubl
mov
add
xchg
test
imul
pop
add
notb
ja
add
add
mov
andl
push
push
push
push
push
lea
push
push
push
push
lea
push
call
roll
scas
add
add
fwait
nop
push
xchg
mov
fcoml
add
std
cmpsb
cli
add
add
add
pop
add
add
push
pop
push
aam
jmp
mov
loop
add
ror
add
add
data16
sub
pop
push
push
push
push
push
call
jmp
add
stos
pop
add
add
add
add
cwtl
rorb
out
mov
outsl
add
add
add
add
xchg
push
loope
in
lock
lcall
cld
add
add
push
push
push
call
add
cwtl
in
add
add
add
push
add
add
add
add
rolb
add
sub
pop
push
call
push
push
lea
push
push
lea
push
push
push
call
cmpb
jmp
roll
lods
jge
stc
lods
pop
test
add
enter
fcoms
enter
rolb
add
mov
jo
hlt
hlt
mov
fwait
test
test
ret
add
in
in
lcall
sahf
add
add
call
fs
add
popa
movsb
mov
fcomps
add
testl
add
scas
movsl
lods
shlb
add
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
pop
add
mov
add
add
addb
add
add
iret
add
imul
add
pop
rclb
add
lret
loopne
mov
mov
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
pop
flds
mov
add
add
mov
js
add
jecxz
test
jno
loope
mov
rolb
je
add
cld
add
add
rolb
lret
add
add
loopne
add
sub
pop
add
push
push
push
push
push
push
push
push
call
enter
lret
mov
out
fsts
mov
pop
add
sahf
sbb
movsl
aam
jne
mov
add
add
xchg
insb
popa
clc
add
mov
add
add
stos
loope
add
pop
loopne
add
cmpsb
gs
cmc
add
add
jmp
jl
in
loopne
lcall
ret
add
add
push
push
push
lea
push
call
aad
mov
imul
add
push
add
int
lods
add
call
xchg
add
stos
testb
add
loopne
out
bound
add
lcall
ret
adcb
push
push
push
push
push
push
push
lea
push
call
push
pop
add
imul
add
in
mov
add
add
add
jge
mov
jmp
add
ljmp
lcall
sub
pop
mov
push
push
push
push
push
call
xchg
iret
mov
jne
add
push
loop
add
push
add
ret
cld
enter
mov
add
loop
add
mov
add
add
add
add
mov
add
flds
add
test
add
mov
lock
lcall
sbb
push
push
push
push
push
push
push
push
push
call
iret
add
mov
in
push
popf
xchg
mov
test
mov
mov
shrl
add
mov
add
pop
add
out
add
scas
aam
sub
pop
add
push
push
push
sub
add
add
add
shr
sub
inc
shr
inc
xor
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
sarl
mov
add
sti
addl
stos
in
add
lods
add
aam
repnz
aam
in
data16
add
add
in
mov
jl
stos
loop
mov
insb
push
add
cltd
out
pop
add
mov
add
pop
bnd
in
sub
pop
pushl
call
push
push
lea
push
push
lea
push
call
mov
add
scas
mov
push
add
add
add
add
add
add
cwtl
add
add
jo
lret
mov
mov
mov
add
add
sub
pop
mov
movl
push
lea
push
push
push
push
call
stos
add
add
add
push
push
loop
int3
mov
mov
push
addl
movsb
lahf
cmc
xchg
sub
pop
lea
push
push
push
push
call
mov
xchg
mov
add
lahf
add
iret
add
shlb
add
stos
jp
add
add
enter
subl
mov
mov
mov
add
push
lea
push
push
lea
push
lea
push
push
call
int
fcoml
add
push
lods
testb
lods
pop
jb
lods
lds
add
add
mov
imul
jae
add
add
rcl
fmul
jns
add
add
test
movsb
add
cltd
xchg
fiadds
jne
push
lea
push
push
push
lea
push
push
push
push
push
push
call
roll
mov
add
imul
add
in
cmpb
popa
stos
add
add
sti
test
add
fdivr
lcall
jne
push
push
push
push
push
lea
push
call
add
add
addb
add
add
mov
add
mov
xchg
cltd
testb
addb
add
mov
add
add
add
negb
add
xlat
add
xchg
pop
add
movsb
add
shl
add
sar
add
xchg
add
mov
add
aaa
sub
add
ret
push
push
push
push
lea
push
lea
push
push
call
test
scas
pop
lahf
stc
cltd
sti
icebp
loopne
push
rolb
mov
mov
roll
add
addl
lods
add
shll
mov
add
add
lret
roll
add
rolb
add
mov
jno
pop
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
fs
fadds
add
add
movsb
add
out
mov
in
out
add
mov
add
add
push
xchg
jo
stos
add
add
add
into
add
sahf
add
mov
popf
aam
sti
outsl
nop
add
sub
pop
pushl
push
push
push
push
push
push
push
call
add
cmpsb
xorl
add
jp
mov
add
add
xchg
push
xchg
pushf
addb
into
add
in
add
sahf
sub
pop
call
push
push
rol
add
push
or
not
add
shr
sub
shr
ror
add
inc
pop
add
inc
add
pop
push
push
push
push
push
lea
push
push
call
mov
test
nop
xchg
pop
pusha
icebp
add
out
shrb
add
add
mov
loop
add
mov
add
add
jbe
in
test
add
xchg
jo
add
add
add
lcall
jne
call
push
push
push
push
push
lea
push
push
push
lea
push
call
jge
mov
stc
add
mov
fldl
std
mov
testl
out
add
push
xchg
roll
mov
sub
pop
push
push
push
sub
push
or
inc
add
lea
sub
rol
pop
inc
xor
pop
push
push
push
lea
push
lea
push
lea
push
push
push
call
mov
add
add
add
mov
add
add
cli
add
add
push
add
add
fiadds
add
pop
fucomi
imul
add
add
add
cwtl
push
add
data16
sub
pop
push
push
push
push
push
push
push
push
push
push
call
cmp
xchg
js
lret
test
mov
test
push
add
addb
mov
lds
js
add
out
int3
test
cmpsb
add
testb
movsb
add
lods
add
jl
add
lcall
add
lcall
fisttpll
add
fldenv
iret
sub
pop
call
mov
push
lea
push
push
push
push
push
push
call
add
add
test
adcl
movsb
add
addr16
arpl
bound
mov
add
flds
xchg
jle
add
add
mov
xchg
pop
add
push
add
shl
mov
add
imul
add
jnp
jne
add
sub
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
add
jecxz
xchg
out
add
add
mov
in
xchg
pop
imul
add
test
pop
ficompl
pop
sub
pop
push
mov
push
push
call
add
lds
jmp
add
add
fiaddl
add
add
add
mov
add
xchg
scas
add
push
add
add
pop
add
pop
out
mov
andl
lret
loope
add
add
repnz
pop
add
push
push
push
push
push
push
push
push
call
add
add
repnz
notb
add
cmpsl
add
add
add
int
fildl
xchg
scas
stos
add
call
mov
cli
add
mov
add
call
mov
mov
loopne
add
add
push
push
push
push
lea
push
lea
push
call
mov
pop
add
les
cmc
xchg
mov
lret
mov
mov
add
add
add
lahf
jo
add
insb
add
imul
les
mov
in
call
imulb
inc
jge
lea
push
push
push
lea
push
call
pusha
scas
js
addr16
shl
pop
fstpl
add
popa
jmp
add
mov
lcallw
scas
stos
add
add
lds
add
mov
jnp
std
add
add
mov
add
call
add
push
push
lea
push
lea
push
call
mov
scas
fwait
add
addb
xchg
add
jb
cltd
std
add
movsl
into
arpl
pop
add
add
addr16
push
add
addb
push
add
sahf
push
imul
add
jno
add
add
add
add
nop
shll
out
add
data16
loopne
add
mov
sub
pop
push
push
push
lea
push
lea
push
lea
push
call
jae
pop
insb
shll
int3
add
pop
add
lret
add
add
lea
add
fwait
imul
arpl
hlt
add
test
add
vandps
xchg
jle
add
mov
mov
mov
in
lcall
inc
or
lret
push
push
push
call
xorb
add
xchg
mov
mov
xchg
push
sahf
add
lock
add
add
push
fsubs
scas
add
add
add
add
in
in
lds
fucomp
lods
out
test
push
int3
mov
pop
add
push
push
push
push
push
push
lea
push
push
push
lea
push
call
pusha
loop
add
lods
fnsave
add
add
jo
hlt
cmpl
in
add
add
add
xchg
add
cwtl
mov
js
pushf
cltd
flds
sub
pop
pop
push
push
push
push
push
push
call
fmul
xchg
out
in
add
add
lcall
pop
fsubs
add
fildl
lock
imul
mov
mov
mov
fstpt
add
add
jb
add
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
pusha
mov
add
stc
cmpb
mov
xchg
add
xchg
int3
xchg
push
imul
int
add
adc
lds
add
add
sti
add
cli
add
popl
addb
pop
xchg
push
push
mov
in
loopne
xor
push
push
push
push
lea
push
push
push
push
push
push
call
in
mov
outsl
add
add
popl
cli
jne
mov
add
pop
jo
clc
add
addr16
rcr
mov
fcoms
mov
add
add
hlt
rolb
fisubrs
into
pop
add
push
jge
cwtl
add
add
jmp
imul
add
add
mov
loopne
add
mov
sub
pop
add
push
push
lea
push
push
push
push
push
call
add
pop
fiaddl
mov
mov
add
stos
add
rclb
add
jne
je
scas
add
pop
flds
in
add
add
popl
popa
add
add
pop
jp
cltd
ja
sub
pop
push
push
push
lea
push
push
push
call
scas
add
rolb
jp
push
jl
pop
add
pop
lahf
mov
add
mov
add
xchg
add
add
pop
cltd
add
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
mov
fistpl
pop
pusha
push
add
leave
add
add
add
aam
add
leave
add
push
add
fisubs
mov
add
add
push
add
jmp
fdivr
lcall
add
push
lea
push
lea
push
push
lea
push
call
cli
add
add
fnstenv
add
lods
pop
add
add
add
std
add
in
scas
jge
push
add
xchg
mov
incb
mov
mov
addl
xchg
add
add
fcmovb
cli
out
add
fwait
cmc
out
push
je
sub
pop
add
push
push
push
push
call
loope
add
fcmovu
aad
addr16
add
jp
push
sar
add
mov
loop
in
pop
ja
mov
add
in
jns
add
sub
pop
sub
push
lea
push
push
lea
push
push
lea
push
push
call
test
add
xlat
mov
pop
mov
cmpsb
add
movsb
add
shr
pop
mov
stos
stos
add
add
add
mov
cmpsl
xchg
add
mov
andb
push
push
call
js
movsl
fsin
mov
jb
cli
movl
add
xchg
in
add
scas
flds
mov
add
in
add
lea
jns
loopne
out
sahf
mov
mov
add
mov
jge
ret
addl
add
lret
fiaddl
movsb
push
lea
push
lea
push
push
lea
push
push
push
push
call
push
add
add
fldcw
std
add
add
fildl
pop
push
jo
push
add
add
add
repnz
cli
pop
popf
outsl
add
mov
add
add
jmp
int3
add
stos
lret
sub
pop
pop
push
push
push
push
call
add
add
xchg
js
out
loop
add
add
pop
test
push
add
add
pop
mov
fcomps
push
add
add
push
add
mov
sub
pop
mov
push
push
lea
push
lea
push
lea
push
call
pop
clc
insb
mov
xchg
add
mov
add
add
mov
test
add
fs
fildl
lods
xchg
out
lret
push
lods
add
add
ljmp
sub
pop
add
add
push
lea
push
push
push
push
push
lea
push
call
mov
out
add
jp
pop
fcompl
clc
add
ja
add
xchg
add
add
add
mov
lahf
add
jp
add
scas
add
int3
add
add
add
out
out
add
xchg
add
push
cltd
pop
add
add
add
add
aad
add
push
lret
sub
pop
add
mov
push
push
push
call
mov
push
add
add
xchg
pop
movsl
mov
jne
mov
ljmp
icebp
mov
add
lock
add
cltd
popa
fiadds
lcall
add
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
xchg
add
jge
push
add
jmp
mov
jo
stos
add
add
add
add
add
add
cmpsl
add
mov
add
gs
mov
stos
push
sub
lods
mov
xchg
cmc
add
ljmp
mov
in
fcompl
les
push
call
add
xchg
mov
in
push
add
add
mov
imul
js
xchg
lahf
imul
xchg
stc
add
jl
add
mov
in
fdivrl
in
clc
pop
mov
xor
push
push
push
push
lea
push
lea
push
push
push
call
push
mov
lds
add
mov
mov
bound
cld
out
add
out
push
clc
mov
cmpsb
arpl
faddl
aam
fsubr
mov
mov
in
loopne
mov
push
push
push
push
push
push
push
push
call
xchg
add
add
add
mov
ja
jecxz
add
ja
ret
testl
mov
add
ljmp
add
push
out
pop
add
mov
in
in
xor
push
lea
push
push
lea
push
call
add
lcall
pop
test
fcomps
insb
test
xchg
data16
add
add
pushf
add
faddl
add
lods
add
mov
pop
add
add
add
loope
add
not
add
hlt
add
add
add
jl
xchg
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
add
push
add
add
add
stc
test
add
popa
add
add
add
add
add
ljmp
lret
xchg
lcall
ja
push
les
add
test
mov
add
cmpsl
add
mov
add
xchg
pop
imulb
lcall
ret
add
aaa
add
add
out
add
sti
rorb
in
sarb
add
add
add
mov
add
in
mov
lock
add
mov
je
aad
add
push
pop
add
mov
push
push
push
xor
add
shl
sub
add
sub
dec
add
pop
sub
shr
pop
push
lea
push
push
push
push
push
push
push
push
push
call
add
int3
fldcw
fildll
hlt
add
pop
add
pop
aad
push
add
fnstenv
sahf
jp
call
ljmp
mov
mov
mov
negl
in
fdivr
lcall
jne
call
push
push
call
mov
cmpsb
cli
out
insb
gs
mov
add
bnd
enter
mov
int
loop
shll
mov
add
add
in
clc
lcall
add
mov
xor
dec
xor
add
push
xor
add
shr
sub
shl
shr
ror
sub
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
mov
jo
jnp
mov
add
mov
add
jle
add
add
add
mov
je
pop
fnstenv
stos
mov
in
xchg
cli
repnz
lods
add
xchg
add
test
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
push
mov
mov
add
icebp
add
mov
lcall
sarl
int
fcompl
out
add
add
filds
add
add
mov
mov
add
jge
jbe
add
add
scas
jo
in
fcomps
add
lea
push
push
push
push
lea
push
call
jl
push
xchg
lods
fwait
in
add
push
add
lret
add
xchg
add
add
testl
popa
fcmovb
xchg
xchg
mov
imul
push
fldl
add
add
xchg
jne
cmpsl
sahf
add
mov
in
call
push
lea
push
push
call
add
pop
add
add
add
add
add
ja
mov
test
push
mov
mov
add
mov
popf
add
lds
add
add
imul
xchg
add
add
lcall
clc
push
push
push
push
push
lea
push
call
add
jns
mov
add
pop
mov
fldenv
mov
add
add
add
jnp
add
rolb
add
add
neg
fcmovnb
add
ja
imulb
std
push
loopne
add
arpl
fcomi
add
cld
test
push
push
rcrb
in
in
lcall
push
add
pop
mov
push
sub
ror
pop
add
push
lea
push
lea
push
push
push
push
push
call
add
cltd
jp
add
pop
xchg
fsubr
add
add
push
data16
sti
rcr
lea
mov
add
add
cmpb
test
add
les
rol
add
outsl
stc
add
mov
mov
into
mov
ret
add
add
push
add
inc
dec
pop
add
mov
xor
push
xor
pop
add
push
rol
pop
push
mov
xor
push
ror
pop
add
push
push
lea
push
push
push
lea
push
push
call
popl
add
xchg
ja
pop
js
cmpsb
add
pop
fsub
add
in
add
loope
mov
lahf
mov
add
cld
fdivp
add
add
mov
push
add
push
add
add
add
push
jp
add
xchg
mov
loop
add
mov
lds
je
add
jbe
ljmp
lcall
push
add
add
xor
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
call
mov
add
push
ljmp
add
fucomip
fiadds
mov
add
xchg
fmuls
add
add
add
in
fidivs
out
add
add
add
add
mov
add
add
jecxz
pop
sub
pop
xor
push
push
lea
push
push
push
push
lea
push
lea
push
call
stos
ret
add
lcall
nop
add
mov
add
pushf
xchg
add
add
add
int3
lock
add
add
add
jne
add
test
movsl
stos
mov
sub
pop
add
push
dec
pop
rep
push
sub
ror
dec
pop
mov
xor
push
pop
or
je
push
shr
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
jmp
add
mov
fildl
mov
pop
mov
add
add
xchg
mov
outsl
add
add
lods
push
stc
push
add
xchg
mov
mov
pop
xor
push
lea
push
push
push
push
push
call
cmc
addb
ja
ja
xchg
push
roll
jmp
jo
add
push
add
in
mov
add
jle
mov
add
sub
pop
add
push
inc
ror
inc
ror
pop
mov
push
push
push
push
push
push
push
push
push
push
call
xchg
mov
add
add
add
scas
add
gs
in
lods
iret
add
add
call
js
add
add
icebp
mov
lcall
adc
push
push
push
lea
push
call
add
add
bound
add
mov
jl
fwait
mov
je
mov
mov
add
add
add
add
jp
add
add
add
add
in
add
aad
xchg
shl
mov
sub
pop
add
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
ja
movsl
add
push
lds
lods
call
add
push
add
sbb
add
add
pop
sub
pop
add
push
push
call
push
add
roll
add
pop
add
mov
add
add
xchg
enter
jmp
add
lcall
jne
push
add
sub
add
shl
pop
push
push
sub
not
pop
mov
push
push
push
push
push
call
add
add
sub
add
mov
add
add
add
js
fldl
ljmp
add
subb
jbe
incb
add
add
lahf
mov
lret
add
add
mov
jmp
jnp
add
add
add
add
lcall
add
push
lea
push
lea
push
push
push
call
cmpsl
add
mov
fistpll
mov
in
aad
rorb
mov
add
add
jmp
mov
imul
je
nop
jae
add
les
sub
pop
add
push
lea
push
push
push
call
add
add
outsl
add
lcall
andl
js
jo
pusha
hlt
notb
add
push
add
mov
add
fildl
lcall
lock
add
sub
pop
pop
rep
push
lea
dec
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
xchg
xchg
out
add
mov
add
addb
add
add
pop
add
incb
fildl
add
jecxz
test
lcall
shll
push
incb
imul
movsl
test
add
loopne
loop
add
int3
add
clc
add
fildl
add
jecxz
add
xchg
in
loopne
xor
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
add
sti
add
hlt
add
add
mov
in
sahf
lret
std
add
clc
push
add
add
mov
pop
add
aam
xchg
insb
add
ror
add
jns
and
arpl
add
mov
jp
roll
in
aam
add
add
mov
jno
fnsave
pop
add
push
add
not
pop
or
je
mov
push
not
shr
pop
add
push
not
not
sub
pop
add
rep
push
add
pop
pop
push
push
push
and
add
dec
sub
rol
add
ror
add
pop
sub
lea
shl
pop
push
push
push
push
push
lea
push
push
push
call
add
int3
outsl
add
push
cltd
add
xchg
js
add
add
in
pop
cli
in
add
loopne
add
int3
insb
add
scas
int
stc
pushf
outsl
pop
add
add
add
add
lock
add
add
add
sub
pop
pop
push
push
call
loopne
sahf
add
add
add
scas
mov
add
jmp
add
add
push
nop
add
add
cmpsl
jns
add
mov
add
in
push
xchg
pop
add
add
add
andl
lahf
addb
loopne
cmpsb
add
add
mov
add
add
cld
add
pop
add
clc
lcall
jne
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
fdiv
les
out
mov
add
add
loopne
stc
testb
addr16
add
add
test
add
testb
enter
pop
add
test
add
pusha
mov
addr16
sarb
add
mov
iret
add
imul
add
jle
cld
mov
add
add
iret
nop
add
rolb
add
insl
hlt
mov
push
dec
add
rol
pop
jmp
push
push
push
push
lea
push
push
call
stos
push
cwtl
mov
insb
add
push
add
lea
add
rcr
add
add
test
jp
in
pop
fildl
add
add
add
lcall
in
push
push
push
push
push
push
push
call
mov
call
in
jno
fucomp
jbe
lret
mov
add
addr16
add
rolb
in
add
add
add
fildll
add
jl
cmpsb
cmpsb
cld
icebp
mov
ljmp
mov
lcall
cld
push
push
push
push
lea
push
call
xchg
add
add
add
icebp
add
sti
add
xchg
popa
jle
mov
add
scas
add
fsub
push
add
rorl
rolb
mov
pusha
xchg
in
pop
push
push
push
xor
xor
pop
push
push
push
inc
pop
mov
push
add
add
add
pop
pop
push
push
call
notl
out
add
lods
add
add
mov
fst
add
idivb
add
js
mov
lret
pop
add
mov
lcall
push
lea
push
push
push
call
add
ret
adcl
add
scas
push
add
add
pushf
add
add
push
add
add
sahf
std
add
lea
data16
mov
add
call
testl
add
ja
add
sub
pop
pop
pop
push
sub
pop
leave
push
xor
not
sub
pop
ret
push
push
rol
pop
mov
push
lea
push
lea
push
push
push
call
cltd
add
addr16
mov
mov
add
mov
imul
into
shll
add
push
push
add
in
popa
sub
pop
add
push
add
add
pop
push
push
add
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
nop
cmc
add
pusha
int
add
imul
add
cld
add
pop
rclb
test
sub
pop
push
push
push
push
push
call
hlt
add
mov
fidivrl
cmpsl
arpl
add
add
scas
movb
mov
jno
mov
jle
sub
sub
pop
movl
addl
push
xor
shr
pop
test
je
mov
push
rol
sub
sub
inc
pop
pop
push
add
add
sub
xor
pop
pop
push
push
push
lea
push
push
push
push
push
call
sti
pusha
pop
jge
aam
popf
add
add
out
test
mov
add
test
pop
add
fldl
testl
mov
add
cltd
add
jne
roll
add
xchg
xchg
mov
add
lcall
push
lea
push
lea
push
lea
push
push
lea
push
push
call
fmull
jno
mov
gs
popf
mov
aam
test
xchg
fwait
add
mov
pop
add
mov
mov
leave
flds
add
add
jmp
shrl
mov
add
jns
sub
pop
pop
push
shr
sub
pop
leave
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
xchg
out
push
xchg
add
add
test
test
fwait
add
add
add
mov
movsb
add
xchg
repnz
cld
jno
lcall
xchg
in
fdivr
lcall
add
push
not
inc
inc
pop
push
mov
push
push
call
int
subl
mov
jmp
push
jb
cld
add
jl
add
in
scas
add
xlat
xchg
add
pop
add
add
add
mov
mov
add
add
xchg
add
rolb
fcomps
sub
pop
add
push
lea
push
push
push
push
lea
push
push
push
call
test
int3
mov
lret
add
int
cmpsb
add
stos
lcall
movsl
add
hlt
pop
arpl
xchg
lret
fildl
std
js
push
test
add
rolb
add
fdivl
out
add
rolb
add
scas
add
push
push
lea
push
push
lea
push
push
push
push
call
cltd
add
int
add
fld
mov
add
add
bound
add
add
add
mov
mov
add
mov
add
add
bnd
add
mov
push
sub
shr
sub
pop
push
push
push
call
add
add
xchg
loopne
add
imul
out
add
fsubp
add
popa
pusha
int3
add
lods
jno
add
add
jnp
jae
add
add
push
add
add
fadds
sub
pop
testl
push
push
push
push
lea
push
lea
push
push
call
jns
add
fwait
push
fs
pop
adcl
lahf
mov
add
pop
mov
add
addb
add
add
add
xchg
cld
add
in
ja
add
fsubs
out
add
add
pop
push
jns
out
cld
sahf
cmc
push
outsl
push
mov
lds
mov
insb
sub
pop
addl
push
pop
push
call
push
xor
add
xor
shl
pop
mov
push
push
push
push
push
call
add
add
leave
add
ror
add
mov
mov
add
xchg
std
testl
loop
add
mov
lret
mov
add
ljmp
add
add
js
movb
jp
add
jmp
xchg
add
jp
icebp
add
add
fmuls
add
in
in
lcall
jne
push
sub
not
pop
push
push
add
rol
pop
push
call
push
lea
dec
dec
lea
pop
cmpl
jne
push
push
push
push
push
call
xchg
data16
add
mov
lret
lock
ljmp
add
addl
in
lds
movsl
jno
lds
mov
mov
stc
add
add
add
add
test
mov
cmpsb
movsb
pop
add
pop
add
lcall
pop
push
sub
rol
not
pop
pop
pop
push
push
lea
push
call
add
add
jmp
push
add
js
add
add
add
repnz
sahf
shll
jae
sti
lret
sti
add
add
cmpb
push
add
pop
loope
add
cmc
test
stos
out
ror
add
add
add
xchg
cltd
mov
hlt
lcall
push
rol
not
pop
ret
push
lea
push
lea
push
push
push
call
mov
add
add
add
test
add
push
add
add
pusha
push
add
cli
cwtl
xchg
add
add
icebp
add
pop
mov
add
add
popf
enter
outsl
stos
xchg
popf
add
add
add
mov
push
push
call
add
push
push
movsb
ret
xorl
std
add
ficomps
xchg
xchg
rolb
lcall
scas
jns
jnp
add
in
xchg
add
mov
in
add
pop
add
push
ror
pop
push
push
push
sub
pop
push
push
push
push
lea
push
lea
push
push
call
stc
add
cltd
mov
add
add
int3
mov
lcall
mov
add
push
in
add
add
lods
lret
sub
pop
push
push
sub
sub
not
pop
movl
push
rol
inc
pop
push
push
lea
push
push
lea
push
lea
push
call
add
add
sar
add
lods
jecxz
lock
add
mov
call
les
bound
add
add
push
add
rcr
add
push
fdivrl
mov
lcall
adc
call
rorb
bound
and
cwtl
push
push
call
loopne
fadds
pop
add
add
gs
jecxz
add
xlat
test
add
add
shlb
add
addl
add
cmpsb
pop
mov
popf
pop
add
add
in
addb
add
leave
stos
in
imul
sahf
mov
add
add
add
pop
mov
pop
push
call
push
push
lea
push
push
push
push
push
call
testl
bound
loope
outsl
add
add
sarl
mov
ja
sahf
add
sti
add
jbe
stos
add
movsb
stos
data16
add
mov
add
add
ja
add
in
in
lcall
insl
cld
add
ret
pop
cmpl
jne
push
push
push
call
scas
mov
pop
fcmovnbe
fmul
add
ret
test
add
add
pushf
loop
shll
fiadds
add
in
pop
add
add
mov
add
enter
aam
lret
mov
add
mov
xchg
loopne
in
push
test
xchg
cld
mov
jecxz
popf
cmpsb
add
pop
pop
push
push
lea
push
lea
push
lea
push
push
call
movsb
loopw
cmp
mov
add
add
mov
add
add
pop
add
jnp
mov
push
add
push
cmpsb
arpl
mov
test
scas
mov
sub
pop
pop
push
inc
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
push
data16
outsl
pusha
add
add
movsl
test
mov
mov
addl
add
clc
cli
add
rolb
fstpl
mov
add
add
sahf
stos
mov
mov
add
movsl
repnz
roll
imul
add
test
mov
pop
leave
push
push
lea
push
push
push
push
push
lea
push
push
call
add
xchg
add
mov
in
pushf
add
add
into
scas
fwait
mov
add
jnp
mov
add
add
add
pop
int
loop
je
xchg
add
cmpsl
add
mov
mov
add
add
shrl
scas
out
add
lcall
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
aam
pop
cltd
scas
ja
push
add
xchg
enter
add
add
subl
xchg
in
add
enter
add
in
push
add
pop
add
push
ror
lea
pop
push
push
xor
pop
push
push
ror
rol
xor
lea
pop
push
push
xor
shl
sub
sub
pop
push
push
push
sub
ror
lea
push
and
add
not
lea
add
add
sub
xor
pop
dec
pop
push
sub
shl
pop
pushl
push
push
push
lea
push
call
mov
xchg
add
add
mov
sti
add
arpl
jecxz
imul
divb
add
mov
fdivrp
test
mov
aad
xchg
in
stos
xchg
cltd
test
cli
cmpsb
push
mov
sub
pop
call
push
push
lea
push
lea
push
push
push
push
push
call
movsl
push
pop
add
push
add
pop
and
pop
out
cld
xchg
cltd
xchg
loopne
jne
add
data16
lret
andl
je
push
icebp
mov
xchg
lea
add
push
add
fcoml
out
mov
ja
in
loopne
call
push
sub
not
inc
pop
mov
push
push
push
lea
push
push
push
push
push
call
lods
mov
pop
xchg
add
rolb
stos
shlb
mov
xchg
add
add
shll
cwtl
xlat
add
add
add
loopne
in
loopne
lcall
inc
cmp
call
push
push
push
push
lea
push
call
fisttpll
mov
shr
gs
add
repnz
scas
mov
add
filds
fldcw
mull
data16
mov
cltd
fisubs
add
mov
add
add
lods
xchg
add
mov
add
icebp
add
add
add
add
sbb
push
push
push
lea
push
push
call
xchg
mov
repnz
test
add
add
xchg
pop
mov
add
add
mov
loope
ja
mov
imul
roll
mov
enter
add
push
jne
sub
pop
shr
push
inc
shr
xor
pop
add
push
lea
push
push
lea
push
push
call
in
add
add
add
pop
in
mov
clc
sti
jne
fwait
icebp
data16
pop
push
fcomp
xchg
mov
mov
push
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
mov
cli
pop
add
add
pop
mov
add
jmp
pushf
addr16
out
xchg
mov
pop
flds
add
cltd
add
push
add
jmp
pop
mov
add
add
pop
add
add
push
push
push
push
push
push
push
push
call
mov
xchg
add
mov
lret
pop
mov
add
add
out
mov
add
mov
cwtl
jae
xchg
pop
jae
mov
jle
add
imul
add
jno
in
loopne
mov
push
lea
push
lea
push
push
push
push
push
lea
push
call
test
add
cmpsl
rclb
jbe
mov
cmpsb
add
xchg
fsubs
add
pop
popa
jo
popl
add
jge
push
add
lret
stos
add
cmpsl
add
cmc
push
ljmp
fwait
add
add
add
in
loopne
lcall
nop
nop
nop
nop
push
xor
xor
sub
pop
cmp
jne
cmp
jne
push
shl
pop
mov
push
lea
xor
pop
movl
push
lea
push
push
push
call
add
add
imul
data16
add
add
add
mov
repnz
add
xchg
sahf
add
add
orl
pop
mov
mov
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
in
add
pusha
ret
in
outsl
rcrl
add
add
add
hlt
in
add
in
int
xchg
rolb
testb
popa
lcall
iret
sub
pop
sub
jne
push
ror
dec
sub
pop
mov
movl
push
lea
push
push
lea
push
lea
push
push
lea
push
call
mov
mov
mov
jecxz
aad
xchg
data16
add
add
mov
add
add
add
loopne
add
test
add
add
jno
add
flds
mov
add
mov
scas
add
xchg
in
in
jmp
push
shl
shr
not
pop
mov
mov
push
dec
xor
add
pop
cmp
jne
push
push
push
push
push
call
fbld
add
mov
add
add
xchg
sbbb
add
xchg
add
fiaddl
add
add
mov
add
add
push
mov
outsl
notb
sub
pop
mov
movl
push
inc
add
sub
pop
jmp
push
push
lea
push
push
push
push
push
push
push
call
mov
fs
add
testl
stos
jmp
xchg
stc
cmpsb
add
pushf
jno
add
mov
jge
xchg
xchg
fsubrs
jne
mov
add
mov
nop
rolb
popf
add
add
add
jb
add
test
add
add
add
add
fdivr
lcall
inc
cld
push
dec
add
add
dec
pop
cmpw
jne
push
dec
pop
mov
push
push
push
call
mov
out
mov
jl
mov
mov
push
mov
rol
add
jecxz
add
add
add
mov
add
pusha
jnp
leave
add
add
push
call
in
add
cli
push
add
adcb
add
hlt
lcall
add
lds
add
push
lea
push
call
add
fwait
mov
lods
test
add
add
add
loop
mov
repnz
jecxz
cbtw
add
lock
cld
add
les
add
cld
mov
pop
orb
shl
cmpsl
lock
ja
add
jmp
add
add
mov
movsl
test
sub
pop
pushl
pop
push
pop
mov
mov
push
shl
xor
pop
mov
push
push
push
or
inc
add
add
xor
sub
xor
xor
pop
add
inc
shr
sub
pop
push
push
push
push
push
call
add
out
fs
addr16
clc
mov
add
add
sahf
lcall
add
add
aam
add
add
sub
pop
push
call
push
lea
push
call
les
add
add
int3
les
cmpsb
jmp
mov
stos
jo
rolb
movsb
add
add
add
add
add
repnz
add
add
add
jb
add
cmp
add
int3
je
push
push
sub
sub
shr
ror
push
or
not
add
xor
rol
sub
not
not
pop
lea
xor
shr
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
bound
hlt
mov
out
fdivrs
add
ficoml
add
jecxz
hlt
add
int3
fs
cmpsl
fdivl
cld
add
lcall
push
push
push
push
push
push
push
push
push
call
popf
popf
in
in
out
mov
pop
add
push
add
test
add
mov
pop
stc
lahf
popf
sahf
ja
xchg
leave
push
int
in
fcompl
in
sub
xor
ret
test
push
add
push
push
add
push
and
add
sub
add
xor
sub
lea
sub
pop
xor
pop
push
xor
pop
push
push
pop
call
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
icebp
add
mov
lea
add
mov
jmp
add
mov
add
lea
add
add
testl
add
mov
sub
pop
cmpl
je
push
push
not
push
push
pop
add
add
sub
pop
lea
ror
lea
pop
push
push
push
push
push
push
call
add
mov
pop
add
fisubl
add
add
add
push
loop
add
test
stos
jne
pop
shlb
add
add
pop
test
xchg
pop
push
xchg
xchg
add
add
add
aam
test
add
push
mov
fwait
sub
pop
push
call
push
dec
pop
cmpl
je
push
push
ror
add
push
push
pop
add
rol
inc
sub
sub
pop
inc
pop
push
shr
xor
pop
push
push
rol
add
xor
pop
call
push
xor
lea
shr
pop
cmpl
je
push
push
not
shl
push
xor
add
add
rol
sub
pop
ror
add
pop
push
lea
push
push
lea
push
push
call
jbe
jno
int
mov
bound
addl
lret
add
add
out
add
imul
iret
add
loopne
jp
in
loopne
nop
into
add
add
add
push
out
add
aam
add
pop
int3
push
pop
mov
add
test
xchg
roll
in
in
pop
push
call
push
lea
push
push
push
push
push
lea
push
push
call
int3
add
mov
incb
mov
mov
add
add
add
add
lret
add
add
xchg
add
fs
jno
cwtl
mov
jnp
xorb
add
xchg
add
add
add
add
int3
add
imul
aad
add
mov
mov
popa
test
stos
sub
pop
cmpl
je
push
push
lea
push
sub
add
ror
shl
add
sub
lea
sub
sub
pop
add
pop
push
xor
ror
shl
pop
push
push
add
pop
call
push
sub
sub
pop
cmpl
je
push
push
sub
push
sub
add
lea
not
add
sub
xor
pop
dec
sub
add
pop
push
sub
lea
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
addl
std
lods
out
mov
add
pop
mov
iret
mov
popa
add
icebp
add
insb
add
roll
std
add
mov
loopne
push
sub
pop
call
push
push
push
push
push
lea
push
push
push
push
push
call
add
jae
addr16
cmpl
cltd
js
add
add
add
push
add
frstor
add
add
add
loopne
add
clc
hlt
jne
add
ljmp
fnop
mov
push
in
fdivr
lcall
cmp
test
add
push
push
inc
push
push
pop
add
xor
add
rol
rol
sub
lea
pop
pop
push
sub
dec
inc
pop
push
push
push
push
push
push
push
push
push
call
add
roll
ljmp
add
mov
movb
mov
add
lret
cwtl
pop
rcr
pop
lcall
out
mov
flds
add
pop
sub
pop
call
cmpl
je
push
push
lea
push
or
not
add
rol
not
sub
rol
inc
pop
dec
pop
push
push
lea
push
call
test
pop
xchg
add
popf
imul
loope
add
hlt
jno
add
lods
push
test
cmpsl
mov
aam
ret
add
pop
pop
mov
popa
mov
push
call
push
dec
pop
cmpl
je
push
push
shr
xor
rol
push
and
add
sub
xor
shl
pop
ror
inc
ror
pop
push
push
push
push
call
mov
stos
fildl
add
fldl
add
fwait
cld
fcomps
lahf
hlt
add
add
add
clc
lret
add
jnp
add
ret
in
lock
push
push
lea
push
push
lea
push
push
push
lea
push
call
pop
mov
jbe
leave
xchg
add
bound
push
ret
add
imul
repnz
fistpll
in
jl
into
mov
movsl
fcmovnb
mov
push
mov
sub
pop
call
push
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
call
xchg
add
movsl
stos
loope
xorb
insb
add
add
pop
xorl
add
leave
test
add
fdivr
lcall
js
xor
pop
ret
mov
add
push
shl
not
rol
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
leave
add
movsb
add
int
nop
mov
add
add
std
add
add
add
jbe
jbe
sub
pop
movl
push
lea
push
lea
push
push
push
push
push
call
add
add
add
xchg
xchg
int3
pusha
stos
add
add
jl
fiadds
addl
pop
add
movl
mov
hlt
out
arpl
in
lcall
sldt
add
rclb
shr
add
pop
pop
push
lea
push
push
push
lea
push
push
call
add
add
xchg
loopne
fildll
add
add
mov
push
pop
stos
jp
mov
add
nop
xchg
jb
add
jo
f2xm1
fidivrs
add
idivb
jns
mov
add
cwtl
jns
scas
clc
insb
jp
mul
int
cld
cmpsb
test
jb
ljmp
lcall
pop
push
add
sub
shr
pop
pop
leave
push
xor
sub
add
pop
ret
push
lea
push
push
call
add
mov
push
mov
test
mov
loop
outsl
add
add
in
hlt
add
insb
les
movsb
iret
add
add
lret
roll
add
add
sub
pop
push
push
lea
pop
mov
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
add
call
mov
std
jae
fdivs
ja
cld
add
add
cmpsl
lods
add
mov
popf
push
add
aam
int
xchg
rolb
sti
cmpsl
add
jnp
add
add
jne
rolb
add
mov
loope
mov
pop
add
cmpl
jne
push
push
not
xor
push
sub
add
sub
pop
add
not
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
movsl
add
add
add
add
add
add
add
fisubs
out
add
jmp
mov
loopne
add
cmpsl
lret
add
add
leave
out
jecxz
ret
add
lcall
jne
push
lea
dec
pop
call
push
shr
ror
rol
pop
push
call
push
push
lea
push
call
lock
pop
add
mov
ret
add
add
add
imul
add
test
push
fs
insb
mov
add
pop
jmp
cmpl
jne
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
shr
add
pushf
loopne
mov
xchg
jmp
jb
int
lods
ret
add
hlt
mov
add
add
push
sub
pop
mov
call
push
sub
add
sub
pop
ret
push
pop
jmp
cmpl
jne
push
push
not
push
sub
add
lea
sub
rol
xor
pop
not
sub
pop
push
lea
push
lea
push
lea
push
push
push
push
call
add
jbe
jbe
clc
add
dec
popa
mov
add
push
add
addb
add
add
add
jl
add
add
add
ret
in
pushl
push
push
push
lea
push
push
push
push
push
push
call
add
call
cli
imul
pop
add
outsl
add
cltd
mov
movsb
stos
add
add
test
xchg
int3
lahf
addb
mov
add
aad
addb
pop
call
push
push
pop
call
jmp
push
rol
pop
cmpl
je
cmpl
jne
push
push
push
lea
push
push
push
push
push
call
lea
roll
mov
push
repnz
into
add
add
fildl
add
decb
stc
add
incb
add
add
out
cwtl
push
icebp
mov
add
pop
add
addr16
pop
mov
mov
push
pop
push
jmp
push
push
inc
lea
add
push
sub
add
not
inc
rol
add
sub
sub
ror
xor
shl
pop
shl
not
pop
push
rol
xor
shr
pop
pushl
push
lea
push
push
push
lea
push
push
push
push
push
push
call
addb
add
mulb
add
mov
call
add
add
cli
add
mov
into
add
aad
add
ja
scas
mov
sub
pop
call
call
push
push
dec
dec
add
push
or
inc
add
not
sub
sub
sub
shl
pop
shl
pop
push
push
call
in
add
popl
lds
lahf
add
insb
lcall
add
add
icebp
lret
add
push
into
jmp
add
fstpl
rcrl
popl
lret
in
clc
pop
pushl
push
push
push
push
push
lea
push
push
push
call
mov
int
add
add
add
cld
out
add
add
add
fisubrs
fnstenv
ljmp
insb
push
cld
add
jbe
add
mov
repnz
rorb
jb
jns
arpl
sub
pop
call
push
lea
push
push
push
push
push
push
call
add
rcll
jae
push
mov
mov
mov
pop
add
bound
push
jl
add
add
call
push
push
add
push
or
inc
add
sub
lea
sub
not
rol
rol
pop
sub
add
pop
push
lea
push
call
add
jne
ficompl
xchg
ja
add
jmp
add
add
push
xchg
xlat
ljmp
push
mov
add
popa
add
imul
jecxz
add
add
fadds
lret
push
leave
push
mov
aam
sti
shrb
pushl
call
push
pop
call
push
push
add
add
dec
push
or
inc
add
xor
sub
add
pop
sub
shr
shl
sub
pop
push
push
lea
push
push
push
push
push
lea
push
call
add
popa
push
add
fwait
add
cltd
push
add
add
xchg
xchg
pushf
add
xchg
add
add
scas
out
jae
add
movsl
clc
test
add
add
mov
xchg
add
xchg
add
loopne
lcall
jne
call
push
lea
push
call
stos
xchg
sti
add
add
add
loop
add
add
push
add
mov
jno
push
mov
mov
add
add
push
add
add
sub
pop
call
push
push
rol
push
push
pop
add
inc
sub
xor
add
ror
xor
pop
lea
pop
push
inc
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
fldt
add
add
roll
add
add
cli
lret
int3
frstor
add
pop
add
xchg
add
popf
add
add
jle
enter
add
sahf
add
leave
imul
in
mov
les
add
add
mov
add
push
add
add
jns
pop
push
push
add
arpl
jmp
in
fdivr
lcall
sbb
lret
push
push
push
push
push
call
xchg
lock
sti
call
rcll
push
push
jns
lea
jle
imul
sub
pop
call
push
push
shl
push
push
pop
add
rol
sub
sub
sub
sub
dec
pop
add
ror
add
pop
push
xor
pop
pushl
push
shr
add
inc
pop
call
push
push
push
call
mov
mov
add
mov
xchg
add
mov
add
add
add
jge
add
mov
mov
add
add
mov
xchg
add
push
sub
pop
call
push
push
dec
ror
push
push
pop
add
shr
sub
sub
pop
ror
not
pop
push
inc
rol
pop
pushl
push
push
call
enter
jbe
in
rolb
test
add
add
push
rclb
js
mov
add
add
sub
pop
call
push
ror
lea
pop
call
push
push
add
sub
push
or
inc
add
sub
shr
sub
pop
rol
inc
xor
ror
pop
push
pop
pushl
push
ror
pop
call
call
push
push
ror
push
xor
add
dec
rol
sub
sub
ror
pop
add
pop
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
in
mov
add
add
mov
into
add
fiadds
nop
add
ror
int3
add
jmp
add
add
in
loopne
lcall
jne
call
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
cli
add
ja
arpl
mov
xchg
jns
add
clc
jno
bound
add
cwtl
add
int
jp
add
xchg
add
add
xchg
add
repnz
lods
push
incb
pop
rcr
iret
jno
sub
pop
call
push
push
xor
shl
dec
push
sub
add
ror
lea
xor
rol
sub
shl
ror
pop
add
not
pop
push
xor
shl
add
pop
pushl
push
push
push
push
push
push
push
push
push
call
in
mov
fs
add
iret
rorl
popa
add
shll
mov
add
imul
out
mov
add
rcrb
add
lea
push
not
sub
sub
pop
push
push
sub
pop
call
push
push
sub
dec
xor
push
and
add
rol
dec
sub
sub
pop
shr
add
dec
pop
push
push
push
call
cmc
add
add
mov
sar
flds
in
faddl
cltd
stos
add
lds
add
add
je
enter
jbe
fcompl
pushf
pushf
scas
add
ljmp
add
jne
push
lea
push
push
push
push
lea
push
push
lea
push
call
pop
add
push
faddl
pushf
enter
push
add
in
les
icebp
add
mov
add
add
sahf
add
add
add
pop
add
sub
pop
call
push
add
dec
dec
pop
call
push
push
not
push
sub
add
rol
lea
add
sub
sub
not
inc
pop
xor
not
add
shr
pop
push
lea
push
lea
push
push
lea
push
push
call
mov
add
add
jp
addb
cmpb
add
pop
mov
add
jp
add
mov
add
add
mov
icebp
in
add
add
add
adc
add
jo
sbbb
add
sub
pop
pushl
push
push
push
push
push
call
testl
pop
andb
imulb
les
add
add
rolb
add
je
add
imul
add
add
sbbl
pop
pop
jmp
imul
pop
mov
movsb
mov
test
cmpsb
insb
bound
mov
enter
jae
add
mov
mov
add
push
sub
sub
pop
call
push
push
sub
not
shr
sub
push
or
not
add
lea
rol
shl
sub
sub
sub
pop
not
inc
pop
push
dec
shl
add
sub
pop
pushl
call
push
push
call
popa
add
testl
add
sarb
add
pop
pop
lea
js
jp
add
mov
stos
add
icebp
aad
add
pushf
add
add
mov
xchg
mov
lcall
shrb
push
addb
ror
push
and
add
shr
sub
add
add
inc
pop
xor
pop
push
push
push
push
push
push
push
push
push
push
call
add
arpl
ljmp
nop
enter
arpl
add
add
mov
fistl
mov
filds
add
add
jecxz
push
mov
sub
pop
pushl
call
push
push
shl
lea
xor
push
or
inc
add
sub
sub
sub
sub
xor
not
pop
inc
ror
pop
push
push
sub
rol
push
sub
add
dec
ror
sub
shr
pop
xor
pop
push
dec
rol
ror
pop
call
push
push
lea
push
push
lea
push
call
out
mov
add
add
add
aad
out
cmpsb
add
add
add
fwait
notl
testl
aad
add
scas
sahf
push
add
add
in
in
lcall
push
push
push
lea
push
push
push
push
push
call
add
mov
sti
cltd
pop
rolb
mov
add
add
mov
stos
add
mov
add
mov
int
push
test
xchg
add
push
add
cmc
jmp
add
fistl
andl
lcall
jne
push
push
push
push
lea
push
push
push
call
add
add
add
add
add
pop
add
pop
cwtl
xchg
add
push
add
jl
add
add
add
lcall
int
add
in
mov
add
aad
shlb
add
add
add
push
sub
pop
call
mov
push
pop
int
lea
push
push
shr
rol
dec
push
push
pop
add
sub
inc
dec
sub
rol
pop
inc
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
push
call
jl
add
incb
push
addl
test
shll
scas
je
fcomi
jle
add
mov
mov
movsb
fsubs
imul
add
fiadds
lcall
jne
call
push
sub
sub
pop
push
push
lea
push
lea
push
call
add
pop
rcrb
lock
fucomp
add
jns
rcr
pop
leave
in
sarb
mov
stos
push
shl
cli
add
add
add
jno
pop
in
mov
add
arpl
add
add
add
shlb
xlat
mov
add
add
xchg
xlat
mov
xchg
in
hlt
lcall
shrb
bnd
shr
push
or
not
add
lea
shr
dec
rol
sub
shl
pop
not
pop
push
ror
pop
pushl
call
push
add
shr
pop
call
push
push
push
push
push
push
call
pop
mov
add
add
push
add
xchg
add
add
mov
mov
add
add
mov
add
jbe
mov
add
data16
lcall
mov
std
sub
pop
mov
push
push
push
lea
push
call
lods
add
add
add
mov
nop
jnp
add
xchg
add
add
add
out
in
insb
test
pop
add
stos
addl
lea
add
add
add
push
lods
xchg
icebp
mov
add
scas
loop
enter
mov
mov
pop
popl
lcall
pushf
and
ljmp
fyl2xp1
mov
add
push
or
not
add
rol
sub
shr
pop
rol
lea
add
pop
push
rol
add
rol
pop
pushl
push
not
pop
call
push
push
push
lea
push
lea
push
push
call
jns
add
add
std
jecxz
fmuls
cmc
add
popf
mov
add
jmp
add
popf
mov
xchg
stc
hlt
ret
in
in
pop
mov
cmpsl
cmc
add
lcall
add
push
rol
lea
sub
pop
push
push
lea
push
call
add
add
pop
add
add
movsl
add
lock
popa
mov
mov
lods
cld
add
mov
xchg
imul
add
rorb
mov
lods
add
mov
adc
mov
in
clc
lcall
add
int3
xor
not
pop
push
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
mov
out
addl
mov
add
add
add
add
cmc
lock
ror
xchg
sub
pop
pushl
push
push
ror
sub
dec
push
or
not
add
not
lea
sub
shl
dec
lea
dec
pop
pop
push
add
pop
push
push
rol
sub
pop
call
push
push
lea
dec
push
or
not
add
sub
ror
add
xor
shl
pop
shr
lea
pop
push
add
shl
not
pop
pushl
call
push
lea
push
call
jge
xchg
lahf
mov
ljmp
in
ljmp
into
lahf
std
add
push
lcall
add
add
push
call
push
push
add
xor
rol
push
sub
add
xor
add
sub
xor
dec
pop
xor
dec
pop
push
push
lea
push
push
call
fdivr
add
cltd
add
pop
add
add
arpl
pop
push
add
lea
xchg
mov
mov
xchg
rcrb
lods
push
add
out
lea
add
lcall
jne
push
push
call
mov
add
add
loopne
sbb
ret
add
add
lea
ljmp
add
in
stos
add
pop
call
push
lea
pop
call
push
sub
not
add
pop
pushl
push
shr
xor
pop
mov
push
not
dec
add
pop
jmp
push
push
sub
shr
sub
push
xor
add
dec
xor
sub
sub
lea
add
inc
pop
rol
ror
pop
push
add
pop
pushl
push
ror
dec
xor
pop
call
push
shl
shr
pop
push
call
push
push
rol
push
xor
add
lea
dec
inc
sub
inc
xor
pop
shl
pop
push
push
call
add
add
testl
fiaddl
pop
mov
add
add
add
bound
sbb
std
add
add
lea
add
mov
into
into
mov
cmpsl
mov
add
add
xchg
add
pop
lea
jecxz
pop
idiv
in
add
jmp
push
add
jge
mov
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
call
out
mov
add
mov
movsl
mov
stos
into
pop
add
add
add
add
add
roll
mov
jmp
add
add
jmp
mov
call
push
xor
rol
add
rol
pop
push
call
push
ror
pop
leave
push
push
push
push
push
lea
push
push
push
push
call
pusha
insb
add
add
pop
xchg
add
in
mov
shlb
mov
add
push
sub
pop
add
push
push
push
lea
push
push
push
call
add
scas
outsl
mov
mov
add
scas
mov
jmp
fistpl
mov
add
add
stos
add
fmul
push
pop
add
push
push
push
push
push
lea
push
lea
push
lea
push
call
faddl
leave
add
mov
mov
add
add
push
mov
add
add
movb
sarl
loope
add
bnd
ret
add
jge
add
xchg
add
test
fiadds
fnstcw
add
add
in
loopne
pop
pop
push
sub
pop
xor
push
xor
shr
pop
inc
push
dec
xor
pop
ret
leave
push
dec
pop
ret
push
ror
shr
xor
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
cmc
add
add
pop
add
cwtl
add
lods
fldl
aam
mov
push
add
add
pop
movsb
lods
add
add
xchg
add
xchg
cmpsl
add
pop
push
xchg
sub
lds
in
push
shl
add
pop
cmpl
jne
push
pop
mov
jmp
push
push
call
push
add
add
fisttpll
test
add
cmpsl
cmc
add
ja
mov
arpl
jmp
push
pop
in
add
mov
add
push
add
lods
sahf
mov
add
add
mov
pop
out
add
clc
pop
mov
push
push
push
push
push
push
call
lea
fiaddl
add
pop
push
pop
add
add
pusha
sarb
ror
in
add
xlat
add
cltd
add
jns
pop
sub
pop
and
push
lea
push
push
push
call
add
add
push
out
xchg
add
add
mov
call
jns
mov
push
fs
pop
add
cwtl
lods
add
add
data16
pop
mov
fsubrs
add
add
add
push
mov
fldl
bound
leave
push
sub
pop
xor
push
push
push
push
lea
push
push
call
movsb
add
gs
xchg
shll
icebp
add
add
jle
ficoms
push
add
imul
jmp
lods
mov
xchg
pusha
mov
addb
add
add
scas
add
xchg
add
pop
jne
cwtl
mov
test
jle
add
lcall
rolb
shl
pop
xor
dec
push
not
add
ror
pop
sub
push
sub
pop
jmp
push
push
call
add
add
fsub
add
js
add
add
push
add
add
pop
mov
add
push
xchg
jae
leave
xchg
movsb
aam
mov
lods
shlb
jecxz
add
stc
add
lcall
add
add
push
push
lea
push
push
lea
push
push
call
add
and
xchg
in
xchg
pop
add
mov
pop
jae
add
out
add
mov
jecxz
incb
jl
add
add
into
stos
push
jl
pop
sahf
mov
in
xlat
pop
add
add
loope
add
cmpsb
add
add
insb
add
jo
pop
add
add
add
xor
push
call
jne
popl
push
mov
lret
incb
in
mov
mov
add
in
add
jne
fs
cwtl
sahf
add
mov
aad
aam
lret
lock
add
fadds
lcall
sub
push
push
push
push
call
sar
add
cltd
mov
add
add
add
cmpl
scas
roll
insb
xchg
stos
jae
mov
data16
add
add
add
loopne
xchg
mov
add
in
add
xchg
add
mov
add
addl
jecxz
lcall
cmp
jne
mov
push
push
lea
push
call
stc
jp
cwtl
pop
add
call
shrb
std
enter
add
add
lahf
faddl
add
add
add
add
push
cmpb
repnz
lea
test
xchg
imul
push
pop
add
call
jb
pop
add
lea
push
push
push
push
push
push
push
push
lea
push
push
call
add
addb
bound
cmc
shl
xchg
add
add
add
add
add
enter
imul
push
sub
pop
sub
push
push
push
push
push
lea
push
call
test
add
js
bound
add
push
js
push
jb
out
in
add
push
filds
lds
add
add
add
add
add
movl
popf
add
in
call
jmp
jge
repnz
push
call
std
add
mov
mov
pop
add
mov
add
add
add
add
fcmovne
mov
hlt
lcall
enter
pop
add
add
push
add
add
fs
out
add
pop
in
add
pop
jecxz
add
jge
mov
stc
jl
push
xchg
test
imul
xchg
sub
add
add
cltd
mov
gs
enter
mov
pop
add
stc
mov
testb
lcall
jmp
lea
pop
pushl
push
xor
not
dec
pop
pop
shr
push
lea
push
push
push
push
call
add
aam
neg
push
add
leave
test
jnp
cltd
fadds
add
add
clc
add
add
add
add
add
add
add
add
cltd
loop
add
lahf
iret
add
mov
aam
mov
cltd
jecxz
aad
push
popa
imul
lcall
loope
incl
add
das
push
push
push
push
push
call
add
popl
add
add
add
push
lret
push
xchg
imul
cmpsl
add
add
in
lcall
jmp
push
inc
lea
shl
pop
cmp
jne
leave
push
push
push
push
push
call
loopne
add
stos
test
mov
add
std
scas
imul
mov
jns
add
bound
add
mov
js
xchg
add
in
in
pop
ret
push
lea
pop
push
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
mov
bound
add
add
xchg
iret
cltd
add
addl
bound
cmpsb
orb
fdivr
lcall
cld
push
sub
dec
shl
dec
pop
push
push
push
add
rol
rol
xor
pop
push
push
push
push
push
push
push
push
push
call
in
lods
add
add
add
add
add
lods
test
pushf
nop
add
ret
add
mov
jle
filds
mov
add
mov
push
in
in
push
mov
push
push
call
add
cld
popf
pushf
loop
add
fld
lods
lock
in
lods
add
ljmp
icebp
addb
loop
lahf
iret
rcl
mov
clc
pop
lea
sub
push
shr
not
pop
mov
push
sub
rol
add
pop
shr
push
add
add
shr
pop
add
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
jae
cltd
cmpsl
aam
jae
int3
add
repnz
mov
jae
scas
cmc
lretw
nop
sahf
test
jnp
add
jle
aam
mov
ljmp
lcall
fwait
addb
add
pop
or
into
sbbb
or
jge
push
add
shr
pop
xor
mov
push
dec
pop
and
push
add
pop
rol
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
mov
movsb
imul
push
add
clc
xchg
out
mov
add
lahf
incb
jecxz
jecxz
test
push
rcrl
add
xchg
roll
mov
mov
push
add
out
ljmp
mov
fcompl
rolb
add
mov
push
push
call
add
add
add
cltd
add
fidivrs
xchg
add
mov
arpl
jmp
add
stc
sahf
hlt
xchg
mov
push
enter
add
mov
push
mov
addl
add
mov
add
add
out
lods
scas
je
arpl
sub
pop
inc
push
push
call
add
rolb
mov
outsl
in
push
mov
loop
add
pushf
add
jmp
popa
add
clc
pop
cmpb
jne
push
sub
add
shl
pop
add
push
dec
pop
cmp
je
push
lea
push
call
test
add
xchg
icebp
movsb
add
in
in
add
add
test
add
in
fst
add
mov
sar
add
add
add
icebp
add
mov
clc
out
scas
add
add
lcall
ret
adc
shr
add
pop
cmpl
jne
push
push
push
push
push
push
call
addr16
fwait
out
lods
jbe
or
mov
add
add
addl
lds
jmp
xchg
lods
jmp
jl
jae
lret
out
add
sub
pop
xor
push
add
dec
pop
pop
push
add
lea
pop
pop
push
lea
pop
pop
push
ror
inc
pop
pop
push
lea
push
push
lea
push
push
push
call
lock
add
add
jbe
scas
lock
mov
out
pop
jl
add
mov
mov
push
add
enter
jno
xchg
push
in
call
push
push
lea
push
push
push
push
push
lea
push
push
call
sahf
in
add
mov
add
mov
mov
add
mov
add
pop
addr16
data16
cmpsl
add
clc
add
add
add
insb
testb
add
lahf
cli
mov
add
add
add
sub
pop
ret
push
push
push
push
push
push
push
call
add
add
popf
imul
jnp
add
xchg
add
bound
aam
add
jno
sub
pop
mov
push
push
push
push
call
fildl
pop
add
cld
xchg
mov
add
rolb
scas
out
add
data16
sar
std
pop
add
stc
popa
cli
lret
jp
add
mov
add
lcall
push
or
push
push
push
push
push
push
call
xchg
gs
mov
jle
mov
xchg
add
ljmp
test
ret
add
fistl
pop
insb
add
mov
mov
lods
add
add
add
cmpb
push
push
push
push
lea
push
call
pop
add
add
xlat
fistl
pop
add
add
scas
add
pop
outsl
push
adcl
push
loopne
jne
nop
lret
std
insb
mov
lahf
xchg
cltd
add
fldl
add
add
loope
outsl
out
jmp
add
in
in
lcall
imul
fldt
fldl
ficompl
push
push
call
test
add
in
add
test
add
add
add
iret
add
jo
add
add
sub
pop
call
push
not
pop
xor
pop
push
not
pop
pop
pop
push
lea
push
push
lea
push
call
in
add
pop
jge
add
lock
shl
pop
pop
jno
pop
add
addr16
shl
add
add
add
test
mov
add
jo
cli
mov
add
add
add
lcall
pop
push
pop
leave
push
push
push
push
push
call
ljmp
pop
push
mov
mov
std
pop
mov
js
leave
lret
sti
movb
shrl
xchg
imul
push
lcall
xchg
add
add
loop
add
add
add
add
ljmp
fcompl
shll
xchg
pop
mov
add
add
lcall
or
push
push
xor
inc
pop
mov
push
push
call
add
xchg
add
stos
add
hlt
xchg
add
out
mov
test
add
testl
xchg
add
add
jne
lcall
arpl
testl
fadd
add
add
add
add
mov
add
add
in
shl
mov
sub
pop
add
push
dec
xor
sub
pop
push
push
push
push
lea
push
lea
push
call
add
sbb
add
mov
fstps
out
call
lods
jp
into
add
add
jne
std
add
jmp
enter
add
loope
add
add
test
add
aad
add
add
lret
add
push
rcrb
mov
pop
push
push
push
inc
rol
xor
not
pop
mov
push
push
lea
push
call
enter
loopne
add
int3
push
add
mov
add
add
add
addl
into
add
fsubl
xchg
mov
mov
add
pop
add
add
add
lcall
push
push
push
push
push
call
je
nop
idivl
add
jp
add
xchg
outsl
add
add
add
add
add
xchg
mov
add
push
add
in
add
add
sti
push
loopne
add
in
add
add
pop
mov
negb
rclb
push
push
add
add
lcall
push
cmp
push
push
push
push
call
add
les
in
add
mov
pop
and
pop
stc
push
cmpsl
push
add
clc
add
jle
roll
lods
add
in
pop
sub
mov
push
push
lea
push
push
push
push
lea
push
call
mov
xchg
incb
jge
js
fcmovne
stos
jbe
or
add
mov
push
pop
ja
pop
lret
pop
push
add
xchg
int
add
add
xchg
sub
pop
shr
push
push
push
call
add
add
add
iret
out
add
fwait
add
lods
add
add
test
add
testb
inc
xchg
add
lock
add
add
add
mov
add
cltd
add
popf
xchg
mov
add
add
ret
xchg
stos
add
hlt
mov
add
ficoml
mov
push
push
lea
push
push
push
push
push
push
push
call
xchg
into
mov
xchg
mov
push
add
add
roll
sbbl
imul
mov
add
sub
pop
mov
push
sub
inc
shl
pop
add
push
push
push
call
add
enter
add
scas
mov
add
add
cmp
lods
mov
mov
push
mov
pop
pop
push
out
scas
add
aam
add
add
cltd
add
add
hlt
lcall
jae
popl
push
pop
mov
add
push
push
push
push
push
lea
push
push
lea
push
push
call
add
add
add
insb
mov
in
xchg
mov
add
jb
lret
add
add
add
int3
add
mov
aad
mov
icebp
ret
add
in
sub
pop
xor
lea
push
add
inc
shl
add
pop
mov
push
lea
push
push
lea
push
push
push
push
push
push
push
call
pusha
add
fst
add
jne
out
in
add
out
imul
mov
std
add
jne
add
push
add
add
stc
pop
imul
cwtl
gs
jp
idiv
xchg
in
add
test
mov
add
out
test
negl
push
push
add
add
icebp
sub
pop
add
push
inc
pop
xor
push
push
push
call
add
add
add
add
mov
jbe
mov
mov
add
std
add
jbe
lods
mov
shlb
jne
mov
add
cmpsb
lods
je
jmp
loop
lock
add
ljmp
test
out
arpl
rolb
push
add
pop
nop
push
push
push
call
add
mov
lret
mov
add
cwtl
sti
jb
stos
notl
lods
add
add
xchg
jno
add
clc
ficompl
in
hlt
pop
xor
nop
push
add
pop
nop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
rcrl
mov
hlt
xchg
in
add
add
add
test
jbe
mov
xchg
xchg
add
movsb
push
pushf
cmpsb
test
fbstp
add
add
pop
pop
lods
std
filds
add
sub
pop
inc
nop
push
push
lea
push
lea
push
lea
push
push
call
notl
fs
jecxz
add
add
test
fildl
add
sti
add
int3
add
loope
fildl
add
add
add
add
lea
add
addl
add
xchg
add
ljmp
push
push
lea
push
push
push
push
call
xlat
add
jmp
mov
add
mov
mov
mov
add
mov
push
sub
pop
cmpb
jne
push
not
shl
pop
add
nop
push
shl
dec
add
pop
nop
push
sub
add
sub
pop
cmp
je
push
push
push
call
add
add
fiaddl
mov
add
add
jmp
xchg
iret
jge
mov
add
add
push
mov
cwtl
push
int3
fists
mov
faddl
add
add
js
add
test
jmp
lcall
gs
pop
nop
nop
push
push
push
lea
push
push
push
call
xchg
add
mov
ret
xchg
mov
add
test
jl
andb
mov
mov
lcall
sub
pop
inc
nop
push
push
lea
push
push
push
call
shll
add
mov
cli
add
mov
pop
stc
add
mov
into
ror
mov
add
push
add
push
ja
add
in
testl
shlb
xchg
aad
in
in
lcall
push
push
push
push
lea
push
push
call
mov
out
hlt
add
into
sahf
add
ljmp
jne
lret
mov
call
mov
movsb
shlb
faddl
fwait
add
push
mov
add
jae
faddl
jp
push
sub
pop
cmp
jb
push
inc
sub
dec
dec
pop
xor
push
lea
push
push
push
call
imul
popa
add
int3
add
pop
add
xchg
popf
add
popf
shl
add
add
add
pop
sahf
fildl
push
data16
mov
outsl
imul
pop
add
add
lods
pop
rolb
add
add
mov
push
adc
test
pop
mov
push
push
call
mov
add
push
flds
loop
lods
xchg
add
add
out
les
add
add
add
fs
mov
pop
add
add
xchg
jnp
mov
sub
pop
add
push
push
push
push
push
push
call
aam
add
add
add
addr16
sti
mov
lret
add
add
hlt
mov
add
jmp
roll
ret
add
sub
pop
movzwl
push
lea
push
push
push
lea
push
lea
push
push
push
call
into
add
xchg
jle
pop
addl
mov
add
lods
add
add
add
add
roll
pop
mov
add
push
add
shl
pop
mov
push
xor
lea
pop
xor
push
shr
shr
pop
xor
shl
push
add
pop
xor
shl
push
push
push
push
push
push
push
lea
push
push
call
add
add
je
add
mov
add
add
mov
ja
xchg
cltd
stc
out
test
shll
in
fcompl
dec
nop
add
loope
push
ror
rol
not
pop
xor
mov
push
shl
lea
xor
pop
add
push
add
shr
pop
pop
pop
push
ror
not
sub
pop
pop
pop
push
add
dec
add
pop
leave
ret
push
lea
inc
pop
push
mov
push
add
not
pop
push
push
shl
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
jle
add
movsl
add
add
aam
add
add
jo
add
add
mov
out
mov
add
mov
stc
add
insb
pop
stc
cmpsl
jle
mov
add
lcall
push
ror
ror
shl
pop
mov
push
lea
push
call
pop
mov
in
stc
lret
jne
push
cmc
mov
add
xchg
add
add
fxch
jnp
jnp
add
add
mov
xchg
pop
add
bound
add
add
add
int3
int3
stos
push
sub
pop
mov
mov
push
rol
add
add
pop
test
je
push
shl
not
sub
lea
pop
mov
push
shr
shr
xor
ror
pop
test
je
push
push
push
push
call
cld
pop
add
push
add
mov
add
add
out
insb
add
add
nop
add
pop
add
mov
cmpsl
add
stos
xchg
mov
add
add
bound
add
out
push
add
add
add
testl
cmp
add
xchg
cmc
add
jbe
stc
lret
lret
jne
add
pop
movl
pop
popf
fadds
add
add
jecxz
add
add
test
mov
sub
pop
mov
inc
push
xor
pop
cmp
je
push
shr
add
shl
pop
test
je
push
lea
push
push
push
push
call
int
add
add
jne
add
leave
lea
stos
mov
add
aad
fiadds
testl
cli
pusha
add
jecxz
add
add
add
add
in
add
sub
pop
mov
inc
push
push
push
push
call
lds
call
addb
pop
stc
xchg
add
add
add
pop
js
jbe
add
push
cwtl
add
out
add
rorb
test
rorb
mov
call
add
pop
xor
push
push
push
lea
push
lea
push
lea
push
call
aad
hlt
call
mov
fisubl
sahf
in
add
int
add
subb
mov
xchg
lret
pop
ret
shl
mov
mov
push
cmpsl
lock
lret
enter
cmpsb
mov
int3
add
int3
addr16
pop
mov
movsb
mov
xchg
roll
lea
add
add
pop
add
add
add
call
pushw
xor
push
push
push
lea
push
push
call
popa
mov
out
loope
add
add
cmpb
mov
jp
into
add
in
add
xlat
jge
lea
add
scas
add
filds
push
jmp
add
fildl
add
out
add
pop
out
mov
add
mov
cwtl
add
add
add
pop
pop
pop
push
inc
inc
sub
pop
pop
leave
push
xor
pop
ret
push
push
push
lea
push
call
mov
mov
add
push
mov
cld
arpl
icebp
add
add
add
pop
add
add
mov
in
movsb
add
fldl
into
add
add
repnz
pop
jno
rcrl
add
add
add
lock
lcall
push
inc
push
push
push
call
movsl
popa
add
popa
mov
aam
mov
in
bound
roll
add
pop
mov
jns
mov
xchg
cmpsb
xchg
test
jecxz
add
jae
add
fs
mov
add
imul
in
hlt
pop
cmp
jne
push
push
push
push
push
lea
push
lea
push
call
cwtl
jbe
jbe
add
add
cmpb
in
out
rol
jo
test
add
enter
mov
mov
scas
frstor
cld
fiaddl
add
mov
sub
pop
lea
push
push
push
lea
push
push
push
push
push
push
push
call
jmp
jmp
aad
jnp
add
mov
add
xchg
add
ret
jmp
scas
incb
in
sti
shll
add
rorb
aad
mov
push
sub
pop
mov
push
rol
ror
pop
test
je
push
shl
add
pop
mov
push
ror
pop
add
push
push
lea
push
push
lea
push
push
call
popa
add
data16
ficoml
roll
popa
mov
push
clc
push
mov
mov
in
add
in
mov
int
filds
negl
add
jo
out
add
mov
out
mov
clc
je
add
add
mov
sub
pop
cmp
jne
push
inc
dec
pop
mov
test
je
push
shr
dec
pop
mov
add
push
pop
cmp
je
push
lea
push
push
lea
push
push
call
add
cld
mov
add
fisubl
out
test
add
jb
add
fwait
add
clc
add
add
lahf
pop
jmp
add
xchg
enter
in
pop
jmp
xor
push
shr
shr
pop
pop
pop
push
rol
add
pop
pop
push
not
inc
pop
pop
push
add
shl
pop
leave
ret
push
shr
sub
xor
ror
pop
lea
pop
push
shl
add
pop
pop
push
not
shr
pop
pop
push
sub
shr
pop
pop
push
xor
xor
shr
pop
leave
ret
push
inc
pop
mov
pop
push
inc
add
shr
sub
pop
pop
push
ror
shr
xor
pop
pop
push
lea
push
call
fildl
pop
sti
leave
pop
add
mov
addb
add
xchg
add
add
add
mov
scas
lods
stc
rclb
std
movsl
add
mov
add
xchg
jns
idiv
out
stos
add
movb
mov
add
lcall
push
shr
sub
add
pop
leave
push
push
lea
push
push
call
adcl
xchg
leave
add
into
pop
faddl
mov
jae
mov
movsl
jl
add
mov
loopne
add
lcall
or
lods
sub
out
lret
out
lret
ljmp
movsb
out
lret
out
lret
out
lret
out
lret
out
lret
in
lret
add
jnp
stos
aad
insl
pop
fidivs
push
js
negl
enter
jecxz
mov
push
fldcw
mov
add
insb
out
rclb
or
in
mov
iret
fdivs
lret
inc
xor
dec
mov
jo
in
pop
stos
outsl
lock
in
xor
sbb
cmp
in
xor
cmpsb
sbb
leave
adc
dec
les
sub
imul
loopne
and
cli
push
mov
sbb
scas
loopne
jne
fists
and
or
xchg
mov
scas
sbb
pop
mov
arpl
sub
jl
pop
cltd
add
ja
imul
jne
std
cwtl
stos
inc
xor
xor
int
or
add
shll
cmp
addl
lock
pop
mov
jnp
jbe
shrb
pcmpeqw
push
mov
jle
or
mov
arpl
dec
sbb
add
flds
add
loop
test
mov
mov
movsb
cmpsl
dec
lds
dec
pop
inc
shrl
cmpsl
std
xchg
lahf
jns
xchg
enter
gs
jns
lods
xlat
repnz
inc
repnz
xor
push
iret
xor
mov
lret
cmpsb
pop
mov
mov
dec
insb
jmp
xchg
stos
push
shll
adc
pop
mov
outsl
sbb
pop
out
repz
fidivs
xchg
test
lcall
and
and
mov
mov
out
nop
and
lods
sub
lods
jnp
mov
stc
xchg
out
sbbl
fcmovnbe
cmp
lahf
movb
rorb
and
mov
jge
mov
inc
xchg
mov
ja
xchg
cwtl
pushf
pop
insb
xorl
mov
shl
pop
and
fs
cmp
testb
imul
dec
imul
insb
mov
or
or
xorb
cmp
out
add
inc
push
jns
lods
jae
stos
xchg
jno
gs
lods
roll
mov
fcmove
xor
adc
pop
andl
lcall
ja
pop
jae
xchg
stc
fdiv
mov
fisubrl
dec
mov
mov
inc
test
in
fadds
nop
xorl
fbstp
cmp
jmp
adc
mov
sbb
mov
add
fwait
clc
push
test
loop
pop
pop
dec
jg
cmp
sti
ljmp
clc
xchg
ret
mov
sub
or
hlt
jl
ljmp
mov
ficoms
sub
inc
hlt
xchg
or
mov
push
xorb
adc
loopne
xor
loope
lret
addr16
cmp
cmp
push
rcll
push
mov
mov
std
dec
mov
sbb
rorl
fistpll
enter
std
pop
lock
dec
add
fsub
cwtl
movsl
jg
ds
mov
cmc
add
sub
jge
shlb
cwtl
dec
xchg
inc
mov
sahf
lcall
scas
mov
or
lea
mov
inc
clc
add
and
rolb
cld
outsl
andl
mov
cmp
or
and
jp
nop
ds
pop
cli
dec
mov
cmp
xchg
scas
lret
sti
in
jmp
mov
movsl
cwtd
mov
test
sti
enter
ret
jmp
pop
add
xchg
push
mov
pop
sbb
dec
loop
ljmp
lds
into
pop
add
in
inc
sbb
jne
fldl
jecxz
aas
std
and
mov
pop
adc
orl
rcll
cmp
repz
jb
icebp
sar
movsb
pop
ret
inc
jns
pop
pop
mov
adc
mov
push
lret
push
sti
lret
lret
call
sarb
sub
jnp
mov
mov
and
in
icebp
add
pop
adc
jle
inc
and
ljmp
push
roll
scas
mov
mov
sti
test
cmpsl
popa
aam
call
xchg
iret
adc
cmpsb
fs
xchg
xlat
pop
mov
aam
test
lock
notb
jl
enter
xlat
xor
pop
mov
add
push
add
mov
add
adc
leave
push
imul
pop
xor
jne
push
jmp
sbb
lea
mov
pop
scas
inc
lcall
outsb
mov
jne
pop
shrl
outsl
xor
mov
dec
lret
mov
push
les
int
lcall
mov
idivl
pop
pusha
jb
jae
cmpl
dec
jp
mov
pop
and
loope
leave
jge
mov
lret
sbb
fsubrl
les
insl
orl
int
int
sbb
insb
mov
outsl
add
repz
aam
or
xchg
jecxz
enter
orl
dec
mov
ret
lods
mov
xlat
pushf
imul
add
cs
jl
stc
or
outsl
xchg
mov
outsl
push
out
mov
fdivrp
jo
inc
in
jge
sub
jg
out
in
out
iret
push
and
cmp
sti
test
inc
pop
mov
fnstsw
jle
cmp
iret
outsl
bound
fbld
pop
jge
dec
shlb
outsl
sbb
dec
pop
and
imul
cmc
shrb
ss
mov
jno
mov
mov
sbb
push
mov
push
adc
rcll
cld
loopne
out
hlt
dec
mov
cli
push
cmpsb
outsl
aas
movsb
loopne
popa
ss
sbb
and
repnz
ret
and
lcall
lahf
add
pop
dec
inc
jl
pop
addl
push
sbb
and
lock
sbb
movsl
push
dec
pop
cmp
push
mov
out
rcrb
mov
mov
dec
xchg
in
sar
pop
les
lcall
or
call
mov
or
stos
aas
sub
imul
sub
push
lret
xchg
es
push
sahf
jmp
jno
cmp
dec
inc
fcompl
dec
inc
lahf
inc
xor
adc
push
mov
xor
inc
into
adc
loopne
je
call
dec
inc
push
cmp
pop
mov
jle
outsb
mov
jo
xor
hlt
xorb
stos
popa
mov
imul
fcmovnb
inc
nop
nopl
xchg
rclb
push
jo
movsb
stos
fcompl
sbbb
mov
pop
cmp
ret
add
mov
lock
int
fdivr
popa
xor
and
clc
out
and
das
cmc
xchg
push
push
dec
fs
xor
adc
adc
arpl
daa
and
mov
rcl
lret
dec
push
pop
mov
add
push
imul
insb
xchg
mov
xor
or
and
or
call
je
movsl
stc
ljmp
outsb
adc
les
mov
int
jp
jno
in
cmpsl
xchg
ss
stos
and
mov
push
pusha
add
pop
sarb
ljmp
lods
dec
and
push
inc
mov
adc
pop
xor
icebp
adc
fsubl
pushf
fildl
je
imul
mov
push
or
insl
or
int3
mov
pop
adc
rclb
cmp
movsl
scas
lret
das
push
stc
sub
aam
inc
jns
flds
aam
mov
test
fistps
push
fstpl
mov
xor
pop
lods
cmc
mov
push
sub
ss
jmp
xchg
and
lock
lods
push
ljmp
mov
jo
ja
adc
scas
inc
les
aam
mov
mov
mov
push
sub
roll
push
jnp
int
mov
cmp
jmp
mov
stos
ljmp
mov
js
mov
ret
fsubs
ficoms
imul
or
stos
sub
cmpsb
test
ror
add
mov
pusha
std
xor
mov
rep
std
call
sbb
jns
jae
cltd
and
jecxz
adc
mov
pop
xor
push
mov
push
xchg
sbb
dec
push
push
sub
xchg
hlt
lcall
dec
loop
mov
jns,pt
lds
push
ret
subl
adc
jae
pop
pop
jge
iret
adc
push
cwtl
imul
fistps
mov
adc
es
push
push
cmp
lret
xor
das
mov
jp
xor
xor
scas
mov
pushf
lret
rcr
cltd
add
cmp
dec
mov
sub
mov
icebp
mov
fcoml
cmp
xor
fisubrs
push
arpl
pop
cmc
dec
dec
imul
adc
cli
in
btrl
add
push
jmp
push
sbb
scas
out
cmp
dec
rcr
inc
jmp
cmp
pop
fldl
lea
cmc
xchg
sub
stc
call
adcb
stc
pop
popf
add
cmp
fwait
xchg
insb
orb
add
imulb
enter
pop
cs
sti
jne
adc
lahf
jne
daa
lret
sub
xlat
mov
cld
stos
out
inc
mov
inc
test
rcl
xchg
jns
sahf
sub
dec
cmp
imul
and
xlat
or
ljmp
mov
hlt
fwait
into
xchg
and
fisttpll
xchg
into
popf
call
or
ja
in
add
lret
gs
push
daa
or
pop
adc
xchg
in
jns
push
lret
jno
andl
js
lahf
jp
popa
sbb
aam
out
inc
or
movb
lcall
sbb
in
in
rorl
test
adc
es
out
ret
aas
fldl
jbe
ja
lds
push
stos
push
xchg
xchg
mov
xchg
push
inc
xchg
mov
test
iret
inc
aad
jne
jg
cmp
filds
jp
scas
stos
jg
jg
dec
inc
mov
popf
mov
mov
cmp
adc
stc
bound
pop
xchg
leave
out
inc
xchg
xlat
inc
pop
xor
movzbl
xchg
sbb
pop
pop
lds
cmp
sub
xchg
mov
fcmovnb
dec
and
cmc
ret
dec
xor
jo
add
icebp
or
ja
pop
imul
test
and
adc
aas
inc
push
insl
jnp
outsb
add
adc
inc
out
idivl
dec
fisubs
inc
xor
clc
les
gs
fadds
adc
xchg
inc
sbb
sbb
repnz
sbb
and
repz
jae
push
cmc
adc
xlat
ret
inc
and
or
sarl
sub
push
loope
jno
jmp
sbbl
ljmp
insb
sub
dec
imul
xchg
jmp
xchg
cmp
lods
inc
mov
and
or
pop
adc
sbb
hlt
lret
clc
sub
jo
test
mov
sub
sbb
add
push
test
mov
inc
push
ljmp
lods
jmp
mov
lds
out
loop
xchg
in
or
adc
jae
mov
fldt
push
inc
or
mov
cmpsl
mov
jmp
mov
sbb
inc
sahf
push
int3
cltd
ljmp
jbe
inc
testb
ret
or
fs
sbb
in
pushf
adc
cmpsb
adcb
xchg
js
daa
add
mov
adc
rcrl
dec
lret
test
mov
das
dec
loope
mov
cmp
popl
push
lahf
jbe
adc
insb
push
jns
push
js
mov
popa
pop
add
loop
ret
pop
lods
cmp
and
dec
lods
push
or
pop
insl
push
repnz
adc
nop
testl
xor
xchg
jno
in
mov
jmp
in
int
push
ret
adc
fiaddl
mov
shll
fcmovnbe
test
loop
mov
arpl
dec
sbb
cmpsb
adc
addl
xor
mov
mov
dec
jnp
or
xlat
jl
mov
jmp
cld
mov
fsubl
jmp
xchg
imul
rcll
mov
add
push
inc
cli
xchg
sbb
fsubrl
add
aad
pop
pop
loope
inc
lahf
loop
sbb
movsl
cmc
into
fldl
and
cmp
pop
aam
dec
call
cltd
dec
sub
cwtl
mov
dec
xchg
push
fwait
cmpsb
mov
inc
mov
pop
iret
mov
lods
lcall
pop
mov
js
je
lcall
call
mov
std
addr16
rcrl
ret
sbb
lret
add
or
lods
mov
leave
sbbl
loopne
rclb
lods
or
negl
dec
inc
jg
pop
cli
iret
pop
dec
je
jo
cmpsl
sub
ficoml
xorb
stc
adc
loopne
lock
fadds
xor
adc
cltd
pop
adc
fs
or
jne
push
pusha
sub
out
leave
shll
push
xlat
addb
mov
sub
mov
adcb
pushf
idivb
dec
imul
xor
int
mov
xchg
cmp
and
cmp
sti
dec
mov
and
lods
loopne
int
loopne
inc
add
aas
mov
mov
or
adc
addb
lock
fmuls
mov
add
cmp
popf
test
sbb
fidivs
inc
in
stos
ds
adc
test
xor
lret
pop
sbb
mov
inc
fsubl
jmp
stc
inc
in
xor
bound
xchg
lock
leave
adc
mov
lds
movsl
xor
enter
loope
in
lods
sahf
rcr
pusha
dec
jb
rcl
loop
xor
push
jno
inc
jnp
and
addr16
lea
and
ja
inc
popa
fbstp
and
out
loopne
pop
movsb
aam
inc
xlat
ds
cwtl
call
cmpsl
or
data16
and
insl
add
mov
dec
adc
jle
aas
in
dec
push
aaa
lock
push
iret
pop
das
sahf
repnz
cli
push
push
or
fstl
rorl
scas
aam
xor
pop
adc
mov
scas
ljmp
and
mov
cmp
push
inc
xchg
jnp
cltd
mov
sbb
pop
cmc
mov
test
or
cwtl
jp
sub
in
xchg
into
push
repz
push
sbb
ror
mov
and
dec
xchg
push
testb
inc
daa
lods
je
rolb
das
lea
add
mov
test
sub
sub
mov
push
xor
in
clc
inc
andl
mov
in
adc
pop
pop
cmc
ficompl
xor
aas
in
dec
jp
les
cmp
popf
popa
inc
cmp
ljmp
cld
or
out
lods
cmp
shll
pop
cli
xchg
pop
std
inc
dec
xchg
xchg
add
inc
fists
cmp
push
and
mov
testb
pop
mov
faddl
call
and
nop
sbb
pop
xor
jl,pn
fiaddl
leave
test
inc
divb
cmp
pop
jne
nop
cmp
mov
xor
sahf
mov
add
lcall
icebp
add
jge
pop
pop
leave
dec
mov
mov
scas
xor
mov
in
pop
cs
mov
mov
jp
xor
push
lods
mov
imul
repz
stc
inc
out
test
cmpsb
lret
mov
out
shrb
test
mov
cmp
dec
xchg
ss
lods
jbe
lahf
call
and
sub
call
cs
jnp
push
or
jmp
jno
jne
push
cs
mov
fdivrl
mov
sub
mov
inc
pushf
sbb
les
paddd
xor
mov
aam
cld
pusha
cld
pop
xor
pop
inc
cmp
test
popf
xchg
dec
add
inc
sub
and
movd
cmp
mov
scas
dec
nopl
fmull
xor
dec
jmp
jo
ret
xchg
sub
out
add
cwtl
add
and
cltd
sbb
pop
jb
cld
mov
and
and
or
and
push
push
cs
jne
dec
call
std
lret
fldt
rorb
mov
test
inc
cmp
jae
movsb
sbb
jmp
inc
cmpsl
aaa
mov
xor
inc
insb
out
leave
inc
mov
jl
cmp
data16
adc
dec
sbb
insl
inc
cmc
mov
add
mov
mov
push
in
inc
sbb
lods
repz
test
shl
fcoms
pop
sub
pop
stos
jle
xlat
cmp
lods
adc
pop
aas
cmpsb
jbe
popf
loop
adc
dec
aad
push
addl
xor
xchg
mov
dec
nop
inc
push
test
jae
or
dec
mov
jb
ret
adc
arpl
mov
scas
mov
jnp
xchg
mov
stos
imul
add
adc
mov
mov
data16
sub
ss
xchg
push
stos
jo
mov
ja
xchg
jno
aam
mov
add
in
lret
mov
push
les
mov
lret
and
ss
push
imul
icebp
inc
dec
and
jmp
or
daa
dec
leave
pusha
inc
enter
fdivs
sbb
pop
add
xchg
inc
cmp
jbe
mov
dec
movb
hlt
sbbb
pop
mov
inc
stc
ret
inc
jecxz
mov
push
jl
add
jb
lahf
xchg
xchg
aaa
push
inc
push
mov
push
dec
mov
sbb
mov
pushf
or
cwtl
repnz
sub
dec
outsb
cwtl
clc
ret
mov
into
jle
andl
andl
ljmp
sbb
icebp
stos
jo
leave
or
ja
popf
cmp
mov
mov
pextrw
dec
daa
stc
insb
les
pushf
inc
jmp
mov
imul
and
in
xor
pop
push
mov
in
inc
cmp
pusha
lods
sub
push
ret
hlt
test
sub
dec
push
loopne
mov
clc
fs
out
mov
clc
push
xchg
addr16
mov
int
mov
std
dec
jne
aad
leave
inc
aas
push
xor
rorb
xor
sbb
inc
or
fists
pop
dec
add
lret
xor
clc
xchg
dec
adc
jae
outsb
fucomi
decl
es
insl
xor
add
sbb
out
fiadds
add
mov
xchg
or
stc
add
lea
je
cmpsb
cs
pop
call
jb
push
pop
repnz
jecxz
fistpll
lea
xor
mov
inc
test
mov
jp
jns
enter
mov
jbe
adc
sarl
jo
push
stos
push
pop
loopne
out
inc
inc
loope
sub
mov
adc
addl
or
clc
xor
arpl
dec
xadd
add
repnz
jecxz
js
iret
popa
xchg
insl
jnp
loope
mov
loopne
xchg
sbb
lret
dec
inc
fdivl
fsts
pop
add
sbb
mov
out
aad
fsubs
fdivrp
cmpsb
bound
loope
adc
dec
mov
divb
mov
movsl
inc
idivb
dec
xchg
das
aad
mov
dec
movsb
inc
imul
fldenv
sbb
sti
jb
mov
cmpsb
outsl
jg
mov
pop
jb
in
lret
das
push
xchg
push
pop
fs
cmpsl
inc
push
sbb
adc
mov
aam
add
arpl
jne
mov
xchg
push
das
adc
push
push
inc
or
add
les
or
dec
inc
xchg
mov
xchg
inc
loopne
push
mov
cmc
or
adc
scas
cmp
cli
sbb
imul
ljmp
sahf
rolb
out
cltd
cmc
loope
ljmp
and
addl
insl
mov
jmp
popf
loopne
push
loopne
push
sbb
push
hlt
adc
xor
idivl
xor
xchg
les
push
cmp
adc
mov
jge
jae
push
pop
or
lret
inc
outsl
hlt
lretw
jmp
les
dec
pop
and
out
dec
test
test
xchg
mov
leave
mov
mov
or
cmpsb
in
and
xor
addr16
aas
cld
mov
sbb
ficompl
imull
imul
cmc
aam
xor
jno
sub
mov
push
int
cmpsb
mov
inc
lret
xor
movsb
in
jge
xchg
iret
add
mov
testl
fs
outsl
rorl
ficoms
fldl
ret
push
mov
in
sub
mov
cmp
sbb
das
imul
movsb
or
inc
or
test
test
pop
in
imul
rorl
jmp
xchg
mov
mov
sarl
insl
sub
sbb
pop
fst
jmp
push
shl
data16
xchg
adc
lods
stos
push
rorl
mov
dec
lds
lds
pop
test
xor
push
push
dec
jecxz
hlt
inc
mov
dec
mov
orl
in
daa
push
mov
repz
out
inc
fadds
adc
insl
js
or
mov
jb
in
rolb
mov
shll
cmp
xchg
push
sub
xor
idivl
cmp
lods
xchg
lea
dec
inc
je
dec
cltd
mov
cmp
mov
lcall
bound
push
stc
test
dec
cmp
addr16
pop
rcr
sub
xchg
push
jl
pop
insb
in
mov
jo
aad
lcall
jecxz
lret
jecxz,pt
xchg
cmp
xchg
lds
dec
cmpsl
mov
push
inc
testl
xchg
push
call
pop
notb
cmp
aam
shll
jecxz
cmp
and
jg
pop
sub
loopne
cld
pop
mov
lock
mov
mov
jo
fidivs
xchg
addb
sub
out
inc
inc
popf
ja
jo
js
cltd
mov
mov
aas
mov
std
push
dec
pop
or
xchg
mov
imul
dec
les
mov
loop
lods
test
sub
and
jns
sti
test
aam
movsb
sub
dec
adc
addr16
cmp
test
cmpb
sub
dec
popf
sarb
sub
add
pop
push
ss
scas
and
sbb
or
jmp
in
sub
test
push
cmp
pop
jae,pn
sahf
ss
push
xor
cli
cmpb
adc
push
fucomip
mov
push
lcall
pop
pusha
mov
je
loopne
lods
xchg
xchg
addr16
add
jl
test
fmull
sbb
sub
xor
shlb
cmpb
out
mov
fld
mov
sbb
out
mov
push
xchg
fmul
sbb
aam
or
sbb
sarb
or
lcall
push
dec
pop
imul
xor
outsb
enter
iret
pop
test
cli
mov
push
pushf
jle
ja
stos
sub
push
cmp
leave
es
orb
daa
ljmp
ljmp
xor
outsb
sahf
push
xor
pop
mov
iret
jae
fs
jl
cli
imul
out
sub
jno
xchg
or
dec
mov
xchg
mov
push
fwait
push
imul
rolb
out
dec
pop
xor
mov
push
inc
jecxz
fwait
push
xchg
cmp
dec
fsubrs
xchg
loop
fists
int
fistpl
in
push
pop
lea
shlb
cmp
jae
add
push
xchg
cli
rclb
loope
dec
adc
or
mov
loopne
call
out
daa
jb
pop
add
rorl
adc
dec
mov
cli
cmp
mov
test
inc
dec
in
xchg
je
push
sub
dec
nop
aas
or
xchg
adc
dec
xchg
lcall
xlat
outsb
and
test
imul
dec
stos
push
sbb
rolb
ljmp
dec
faddl
cmp
or
insl
ljmp
jns
ljmp
popf
frstor
xlat
jo
shrb
dec
loope
lret
cmc
leave
ret
insl
push
scas
fwait
pop
xchg
or
std
rclb
test
dec
cmpsb
sbbl
or
xor
mov
movsl
jg
test
jp
mov
rcll
push
jne
fcomps
leave
fdivrs
repnz
and
fiaddl
xor
xchg
cmpsl
xchg
push
push
xor
stc
and
test
mov
movsl
test
aas
cmpsb
fldenv
xchg
and
nop
mov
dec
jbe
xor
jo
sbb
mov
inc
pop
push
test
sets
iret
ds
fwait
aad
pushf
mov
lods
clc
testb
cmp
inc
xchg
mov
pop
add
and
mov
xor
or
lds
es
dec
fldenv
sti
sub
inc
leave
ds
push
jle
push
repnz
jmp
or
sbbb
sahf
mov
movsb
sub
ror
test
push
addb
mov
scas
flds
out
or
rorb
push
sub
mov
insb
mov
out
xchg
push
add
mov
test
daa
imul
dec
outsb
mov
mov
sbb
clc
gs
push
push
andl
lea
inc
lahf
lcall
gs
xor
cmp
clc
mov
pop
cmp
pop
pop
out
push
cmp
cmpl
out
push
dec
out
loop
mov
push
sub
out
mov
fistl
idivl
loop
and
fdiv
dec
stos
mov
xchg
dec
subb
push
pop
sti
mov
fcomps
cmp
pop
repz
fcomps
add
hlt
and
sub
jp
cli
incb
pop
shrb
pop
lods
and
jb
pop
aaa
leave
sbb
mov
and
aaa
sub
mov
or
hlt
push
hlt
mov
sub
or
push
testb
das
dec
jge
mov
adc
test
fldt
push
push
inc
lock
rcrb
dec
sti
leave
inc
jmp
sbb
xchg
mov
lret
and
sub
cmp
pop
jbe
jno
int3
or
adc
imul
adc
or
push
fcmovnbe
or
mov
imul
scas
mov
cmp
sar
arpl
push
jecxz
mov
add
fs
mov
and
adc
dec
bound
stos
mov
dec
adcl
inc
xlat
push
call
movsl
adc
xchg
loope
push
mov
push
cmp
add
scas
aad
out
jmp
imul
test
inc
outsl
jae
les
leave
push
dec
mov
fcompl
inc
lea
mov
mov
mov
pop
mov
popf
clc
xchg
sti
mov
out
sbb
and
lretw
icebp
aad
in
or
adc
or
xor
pushf
pop
insl
aad
xchg
xchg
stc
xor
js
outsb
jp
test
cmc
lods
inc
jno
add
mov
xchg
cmp
inc
push
lods
daa
mov
pop
fiadds
xchg
inc
test
cmpsl
pusha
loop
jle
ss
inc
pop
cmpsb
inc
jge
jae
mov
stos
xchg
das
insl
cmpsb
and
repnz
pop
daa
stos
leave
mov
push
sub
jne
loop
movsl
mov
fs
call
lock
push
mov
mov
mov
sarl
fsts
jle
fisubl
mov
pop
pop
imul
cmovo
int3
ud1
xchg
out
jecxz
insb
inc
lds
roll
sbb
fwait
sahf
jmp
movsl
test
xor
jnp
loope
jg
mov
jmp
cmp
jb
mov
cld
shlb
add
lret
in
roll
add
and
and
movsl
dec
pop
cs
fsubrp
outsl
shll
loopne
cli
jae
mov
andb
aas
js
scas
mov
lret
je
fbstp
jge
ljmp
cmpsb
xchg
mov
fimull
sbbl
sbb
popa
sub
push
clc
lock
dec
in
inc
loop
and
pop
std
mov
pushl
cltd
dec
ja
mov
test
pop
pop
loop
inc
jo
scas
cmp
mov
sbb
insl
and
bound
dec
and
out
enter
xchg
mov
dec
and
in
pop
loopne
ret
mov
cltd
jecxz
add
sub
mov
sbb
dec
sub
mov
mov
in
mov
fucomip
pop
nop
pop
mov
jns
xchg
ljmp
xchg
add
andl
imul
bound
jb
dec
jno
cmp
xor
cmp
pop
addr16
inc
test
inc
das
and
enter
aaa
data16
dec
mov
pushf
jmp
addr16
sbb
jp
jae
adc
push
and
xor
or
push
aas
cmp
jae
notb
fwait
je
aaa
lods
jmp
pop
std
adc
cmpb
ja
ds
ds
bnd
or
jecxz
insl
repnz
mov
mov
cli
lods
pop
out
dec
xor
sub
push
es
mov
jmp
iret
mov
je
test
push
pop
repz
or
xor
ret
aad
push
push
cli
xlat
inc
mov
loop,pn
lret
jle
int3
adc
aaa
jno
cltd
sti
cmpsb
ret
cmp
cltd
push
sub
mov
or
xor
sbb
pop
mov
mov
lcall
imul
adc
lcall
mov
cmp
mov
xor
jg
andb
loopne
daa
iret
push
jl
push
xchg
jmp
xchg
adc
int
pop
cmpsl
and
scas
les
push
movzbl
add
sarb
dec
in
insb
stc
push
jge
xchg
xor
xlat
out
ficomps
lock
enter
aaa
sbb
xchg
dec
stos
mov
add
push
cwtl
imulb
sbb
loop
in
out
push
clc
repnz
lods
sbb
add
jbe
sbb
jbe
pop
iret
mov
mov
sub
mov
bound
mov
cmpsb
ljmp
ficomps
lods
adc
fstpt
adc
inc
push
inc
add
fs
inc
sbb
xor
notb
adc
addr16
mov
negl
mov
lahf
bnd
add
aas
push
int3
ret
pop
mov
xor
data16
inc
mov
test
push
pop
loope
jp
je
and
xchg
fldl
testl
xor
popa
lds
mov
add
or
pushf
dec
clc
adc
scas
and
fildll
ret
hlt
aad
lods
mov
pop
sbb
sahf
inc
jnp
cltd
pop
mov
dec
xchg
loope
movsb
mov
xorb
mov
movsb
cmp
lock
sub
imul
adc
popa
das
test
jnp
adc
jns
adc
insb
xchg
sti
out
insl
sbb
or
pop
in
sub
and
aad
ljmp
dec
fbld
outsl
sub
xchg
ret
add
cmp
push
mov
add
jno
add
aad
xor
xor
jl
add
jb
mov
andl
data16
sub
mov
mov
fnstsw
and
jmp
sbb
mov
ds
es
push
std
call
xor
fmull
aaa
add
cwtl
das
lock
jmp
addb
fs
inc
pop
xor
fsubs
jne
add
ret
test
mov
ljmp
cmc
adc
fisttps
sub
ret
or
mov
imul
in
push
rol
mov
aam
aaa
push
xchg
cmp
pop
xor
xchg
xchg
cld
iret
test
scas
ficoms
rcr
repnz
adc
or
xor
mov
ds
in
add
test
lahf
pop
inc
cmpsb
mov
test
pop
jmp
or
xchg
lahf
orl
mov
push
aaa
xor
dec
ret
clc
loopne
fidivl
push
daa
imul
sub
push
xor
xchg
and
pop
push
pushf
cmpsb
xor
bnd
push
dec
ds
loop
scas
daa
inc
sub
sub
sub
stos
xor
aam
icebp
push
push
pop
pop
mov
xchg
data16
jnp
and
mov
jno
and
fistps
lcall
xchg
shr
rcr
int3
hlt
aam
idiv
in
fnstcw
sub
inc
mov
mov
add
jno
or
jmp
xchg
test
das
jb
cmp
xor
xchg
ss
xlat
adc
mov
lret
jbe
nopl
push
pop
or
dec
cmp
mov
xchg
push
cli
and
pop
inc
mov
adc
in
jl
push
adc
in
or
dec
in
leave
dec
lods
ds
sub
or
daa
inc
les
loop
mov
stc
mov
outsb
dec
mov
dec
xchg
xor
sbb
pop
insb
lcall
in
or
jmp
dec
lock
mov
xor
jecxz
xchg
xor
hlt
push
stos
sahf
inc
movsb
ds
aad
mov
add
dec
dec
sbb
sahf
lret
jo
xchg
sarl
mov
dec
xor
cld
mov
xchg
sbb
lret
pop
les
inc
push
cld
inc
mov
out
popa
in
pop
fnstcw
inc
cmp
loope
daa
adc
inc
pop
inc
mov
rorl
sbb
lods
ljmp
out
pop
sbb
pusha
sbb
mov
mov
sbb
iret
cmp
pop
les
movsb
adc
push
in
inc
sub
bnd
je
mov
movb
lahf
int3
mov
push
cmpsb
dec
fildll
jl
sub
mov
add
and
negb
mov
dec
push
fdivr
xorl
nop
xor
jp
push
xlat
jb
ret
mov
ss
and
sbb
xchg
pushf
daa
xor
lds
call
daa
inc
nop
and
jae
dec
cwtl
cmp
inc
repz
flds
and
sahf
pop
scas
mov
sbb
mov
jo
aas
jns
xchg
pop
or
pop
xchg
and
fisubl
test
mov
push
push
inc
pop
dec
fs
enter
inc
mov
push
dec
imul
out
fs
mov
stc
adc
push
mov
jnp
dec
push
rcrl
jnp
mov
mov
loopne
add
sbb
out
mov
xor
in
test
daa
shrl
stc
and
jne
cwtl
or
lcall
jnp
aas
or
aad
xchg
sub
out
insb
outsb
pusha
push
in
jge
cltd
outsb
mov
ds
mov
and
lcall
imulb
jmp
and
pop
inc
ds
push
jno
xchg
insb
das
jg
push
xlat
or
and
lret
ds
popf
dec
mov
mov
mov
jnp
xorb
jne
jecxz
cltd
ror
movsl
push
xlat
lea
aas
int
pop
ffree
movsl
pop
out
insl
cwtl
dec
aam
pop
inc
adc
jno
es
sbb
jp
in
lods
ficomps
fstpl
cmovne
pop
cmpb
push
into
sbb
add
cmp
mov
cli
fadd
lret
pop
jae
push
push
into
popa
test
or
outsb
pop
dec
mov
in
adc
pop
loopne
lock
inc
adc
cmp
jno
pop
stc
lcall
and
ds
cmp
jle
dec
scas
popf
mov
push
scas
pop
bound
pop
addb
shufps
dec
jne
out
lock
dec
out
and
adc
mov
idivb
leave
notb
mov
inc
ds
jbe,pt
fmull
lea
movsb
mov
das
jb
mov
dec
cs
mov
push
ror
test
sub
mov
leave
mov
shrl
insl
mov
jecxz,pt
push
or
stc
insl
xor
ljmp
add
jl
movsl
inc
sbb
jmp
test
leave
push
fldt
jbe
or
stos
pop
aam
mov
outsl
xchg
das
sbbl
incb
frstor
or
bound
scas
fs
sub
daa
inc
push
xor
xlat
mov
sub
push
xchg
cmpsb
jnp
mov
push
mov
cwtl
sub
in
scas
or
fidivrs
or
xorb
outsl
popf
sub
scas
xchg
adc
add
je
jp
roll
leave
je
pushf
dec
jmp
imul
popa
sahf
sub
inc
jb
stos
loope
xor
cli
add
dec
push
or
xchg
dec
clc
insb
xchg
jb
pop
mov
repz
aad
cmp
cld
mov
movsl
push
loopne
jae
adc
jl
scas
mov
cmovb
cld
add
xor
push
fwait
or
subl
out
xchg
test
inc
xchg
xor
rorl
bound
pop
pushf
mov
mov
and
cmp
sbb
mov
iret
andl
jb
out
imul
popa
pop
sbb
clc
pusha
popf
pavgw
stc
sbb
in
cmpsl
ret
jbe
iret
dec
jno
mov
mov
shrl
and
mov
out
mov
pop
cmc
pushf
push
mov
push
movl
or
pushf
xchg
cmpsb
cltd
arpl
sti
fstps
and
loop
imull
mov
fisubs
imul
or
cli
cmp
loope
xor
sbb
data16
ffree
rorb
cmp
clc
adc
lcall
pop
sarl
mov
mov
adc
jecxz
xor
dec
ja
and
adc
dec
cld
jmp
rcrb
iret
imul
divb
sahf
jmp
data16
mov
inc
pop
stos
mov
pop
add
push
add
out
imul
push
je
xchg
ror
push
sti
inc
pushf
and
push
add
cmpsl
sub
gs
in
push
xchg
push
push
pusha
outsb
loopne
cmpsb
or
push
xchg
push
shrl
lea
lock
and
dec
xchg
cmp
dec
idivl
aaa
cmp
pusha
add
pop
jae
or
lahf
ret
daa
les
push
fs
pop
mov
repz
jg
imulb
jno
out
jbe
adc
fcmovu
or
mov
in
xchg
aad
ds
inc
add
add
jle
xor
movsl
sub
pusha
in
xchg
ljmp
rorl
mull
les
stc
xchg
and
mov
mov
cmc
push
xchg
notl
jecxz
daa
xchg
pop
test
or
and
mov
into
cmpsb
mov
repnz
sbb
loope
lods
mov
sub
jp
xlat
xchg
lods
and
xchg
pop
ret
pop
inc
lret
outsl
jl
fisttpll
or
jne
and
cmpsl
jne
testb
mov
sbb
lea
or
or
insb
std
or
rorl
shll
aam
sbb
div
loopne
pop
push
stc
dec
lods
into
std
sti
dec
lods
push
mov
aaa
cmp
jg
ss
outsl
mov
in
cmp
mov
nop
adc
ficomps
sub
sub
and
fnstcw
jne
pop
xchg
out
lods
cli
sahf
xor
mov
dec
pop
leave
or
ret
pop
dec
jmp
xor
loope
iret
arpl
xor
rcr
adc
cltd
mov
mov
movsl
jne
xchg
sub
jo
ret
xchg
mov
adc
adcl
jp
push
cmp
imul
sbb
pop
jne
pop
cmp
icebp
cmp
insl
stc
enter
insb
dec
mov
pop
add
mov
pop
cltd
xor
jmp
mov
out
push
dec
les
clc
test
lea
dec
pushf
mov
inc
mov
xchg
mov
mov
ja
adc
mov
insl
sub
mov
inc
test
fld
or
insb
inc
jns
inc
pop
inc
repnz
jno
out
stc
or
mov
popl
adc
inc
adc
cmpsl
pop
sub
xlat
cmp
xchg
jmp
mov
lods
add
pop
push
mov
sarb
mov
inc
mov
sti
jp
xor
xchg
xchg
pop
xchg
mov
xor
push
subl
in
dec
insb
setae
pop
dec
sbb
push
sub
sbb
ljmp
outsl
jecxz
pop
pop
and
enter
xchg
cmpsl
dec
push
pusha
push
xor
imul
and
rorb
inc
leave
mov
sub
cmp
pop
adc
push
jne
push
mov
movsl
std
add
jne
lcall
stos
repz
lret
lahf
fdivs
sub
push
das
xlat
ds
aaa
mov
push
fldenv
lods
jnp
sub
inc
xchg
aam
inc
mov
orl
aas
mov
aas
jo
xchg
inc
lods
push
es
sbb
jg
sbb
fabs
fisttps
jl
add
xor
nop
push
jae
lahf
mov
dec
int3
mov
in
shll
testl
into
sbb
outsb
addl
pop
cmp
lods
stos
xchg
aaa
and
hlt
adc
add
outsl
movsb
xor
mov
cmp
push
out
mov
or
imul
mov
test
mov
sahf
dec
pushf
incl
jae
adc
outsb
sbbb
push
push
std
sbb
arpl
mov
daa
pop
inc
sti
dec
int
test
mov
stos
add
mov
xchg
mov
repnz
inc
dec
dec
lahf
sbb
jae
adc
popf
inc
xchg
js
sarb
add
adc
cmpl
dec
or
xor
jmp
int3
test
lods
cmc
cwtl
xorb
outsb
push
xchg
popa
ja
test
das
jb
dec
push
pop
add
pusha
aam
cmp
ffreep
xor
xchg
mov
dec
pop
aad
mov
stc
pop
dec
je
jecxz
repnz
loope
enter
push
arpl
outsb
rorb
rcrl
aad
dec
push
and
or
rcrl
lahf
pop
in
aaa
jns
fsubl
fmuls
mov
pop
jl
mov
sti
cmc
daa
jae
aad
sub
mov
out
adc
movsl
or
push
or
adc
pop
out
data16
dec
mov
popa
sub
fs
lods
jg
repnz
cmp
gs
mov
xchg
push
mov
idivl
cli
xchg
scas
icebp
enter
push
jle
inc
ljmp
inc
sub
jle
out
add
popa
aaa
test
push
mov
xchg
in
xor
push
mov
xor
popf
jnp
xor
mov
enter
dec
addb
adc
out
push
pop
mov
xlat
out
jl
lcall
bound
push
mov
mov
xchg
int3
sbb
cli
fcmovb
cmp
adc
mov
sub
adc
push
push
icebp
inc
shrb
push
or
les
out
js
ret
xor
cmp
mov
fidivrl
adcl
push
mov
xchg
aad
hlt
in
mov
popf
hlt
and
data16
stos
call
int3
adcb
mov
xor
xor
hlt
lods
das
into
stos
mov
jg
sub
imul
mov
out
leave
mov
sbb
dec
cmpsb
enter
mov
sti
clc
xchg
test
mov
add
sahf
sub
and
movsb
xchg
xchg
stos
xor
adc
call
dec
push
pop
add
sub
cmovle
lods
ja
xor
cmpsl
movsb
lahf
dec
inc
mov
xchg
pop
mov
mov
ja
mov
add
imul
and
insl
adcb
movsb
mov
orb
out
movsl
mov
mov
push
pop
aad
adc
inc
xlat
push
lea
mov
sub
in
pop
fwait
ja
jns
popa
dec
aas
add
jmp
adc
sbb
push
lock
movsb
stc
sbb
jg
xchg
std
add
dec
adc
ret
xor
jmp
fmuls
jge
pop
xor
int
cmpsb
inc
in
decb
stos
inc
push
or
lahf
in
ss
sahf
and
sbb
xor
push
jp
lods
pop
jle
dec
pop
loope
mov
pop
test
mov
lea
lea
jnp
xlat
fs
or
lock
daa
pop
clc
lea
sub
jae
pusha
repnz
cwtl
test
mov
js
sbb
xchg
scas
sbb
or
xlat
pop
fnsave
in
in
clc
test
je
mov
sub
ja
push
mov
dec
push
push
test
or
fwait
and
xchg
push
loope
or
aad
int
out
dec
lds
hlt
popf
cwtl
arpl
mov
cmp
add
push
add
popf
mov
add
addr16
out
jmp
xor
stos
mov
sub
jbe
inc
xor
ret
jno
inc
lods
je
jle
bound
or
lret
insl
sub
inc
stos
andl
push
in
cmp
adc
or
mov
jp
rorl
cmp
inc
subl
test
aas
cld
inc
inc
inc
fs
sbb
jns
lds
xchg
pop
or
shrb
into
sbb
jne
and
and
stc
sub
test
clc
inc
xchg
repnz
or
xor
int3
repnz
jnp
outsl
mov
out
movsl
push
fxch
stos
imul
rclb
data16
jo
and
imul
aaa
mov
xor
pop
rorb
pop
stos
inc
hlt
pop
sbb
lcall
jle
dec
leave
into
xor
jle
pshufw
sbb
mov
data16
pop
push
xchg
cld
test
rol
loope
pushf
daa
add
test
dec
mov
add
icebp
jle
pop
adc
stc
sub
pop
xchg
or
add
mov
mov
dec
test
int3
sub
mov
pop
test
fistl
or
dec
ja
fsub
inc
push
enter
outsl
fucomp
imul
sbb
ret
cld
mov
jnp
in
in
or
or
xor
pop
xchg
mov
enter
pop
pop
cli
or
mov
rcrl
mov
in
stos
into
adc
pusha
or
cwtl
pop
sbb
cmp
in
push
dec
mov
mov
push
repz
icebp
cwtl
mov
cmc
movsb
sub
jno
notb
mov
adcb
and
mov
sarb
fiaddl
push
cmp
cmp
add
sub
cmp
sub
pop
sbbb
inc
mov
scas
scas
int3
cmp
sub
jmp
jae
into
jecxz
sbb
push
mov
sub
adc
pop
in
jmp
stos
inc
std
in
ficompl
add
cmpb
cltd
shrb
and
pop
popw
enter
jnp
add
jae
cmc
loopne
jbe
sbb
xchg
and
push
mov
add
or
lods
push
pop
fwait
xor
arpl
pop
std
inc
lock
and
add
adc
cmc
inc
adc
cmp
dec
inc
sbb
xchg
and
mov
jbe
xchg
bound
or
sub
lret
lea
push
jmp
cmp
jno
addr16
xor
xchg
mov
enter
jo
jge
mov
outsb
sub
dec
jb
inc
mov
sbb
testb
inc
jno
and
jnp
je
sbb
mov
push
cmc
jae
mov
addb
mov
in
repz
mov
jecxz
mov
jecxz
adc
popl
xchg
dec
pop
outsb
dec
stc
icebp
popf
jae
push
add
push
inc
iret
fstpt
divb
scas
fs
xor
jb
ja
sti
ss
rorb
daa
add
divl
mov
cmpsl
sahf
xchg
stos
movsl
aas
lret
popa
mov
leave
cs
or
clc
mov
cltd
jno
in
xchg
sahf
pop
xchg
movsb
mov
mov
mov
jo
push
fdivl
insl
in
call
adc
mov
cli
daa
imulb
movsl
subb
mov
lock
out
lods
dec
dec
add
add
adc
lret
mov
call
adc
mov
andb
test
or
add
inc
test
xchg
ret
popf
mov
es
jge
mov
cmp
rclb
or
sub
sti
cmpb
movsl
jecxz
stos
mov
mov
iret
adc
cmp
stos
or
jbe
mov
stc
xchg
mov
mov
xchg
cmpsl
mov
pusha
cmpsl
out
mov
es
add
out
shrl
aam
lahf
gs
imul
cltd
xchg
dec
xor
popf
mov
add
dec
das
fwait
cld
sbbb
xor
cmp
mov
xor
dec
in
lret
xchg
cs
stos
js
cmc
add
sar
xchg
mov
je
cmp
pop
adc
adc
jns
cmp
lret
xchg
cmp
scas
mov
xor
cmp
or
mov
sahf
inc
icebp
stc
movb
ret
inc
lock
call
sub
pop
dec
jnp
dec
pushf
into
in
dec
repz
out
loop
roll
push
cmc
or
movsl
pop
imul
mov
in
mov
pop
pushf
or
xchg
insl
and
js
fdivrs
fsub
sbb
push
ret
out
aam
fstps
adc
cltd
pusha
pop
dec
das
and
out
jle
mov
push
jmp
mov
jl
xor
dec
loope
int
jbe
shrb
lods
cmpsl
out
dec
addr16
outsl
sub
mov
mov
pop
sub
push
mov
jnp
adc
mov
pushf
lcall
xchg
inc
xchg
out
mov
push
les
in
xchg
or
cmp
jae
int
xor
icebp
dec
aad
jmp
ror
ss
arpl
rorl
cmc
push
push
xor
jb
or
push
ret
mov
mov
pop
cmp
lret
push
inc
push
jno
add
xchg
movsl
dec
xor
pushf
loopne
ds
add
push
imul
pop
iret
sbb
nop
add
clc
jb
les
xor
adc
stos
int
cmp
into
mov
cmovb
sub
rorl
lret
add
das
sbb
cmc
cmc
sbb
setle
cmpsl
shlb
add
cmp
dec
icebp
mov
jp
shlb
scas
pop
imul
xor
push
and
call
inc
xchg
xor
add
iret
dec
mov
mov
inc
addr16
popf
cmp
mov
sbb
dec
pop
bswap
cld
shlb
cwtl
pop
in
xor
subl
cld
shl
stos
pop
push
fiadds
jo
add
sbbb
add
xor
repnz
call
cmp
mov
pop
cmp
xor
nop
jns
mov
ss
sti
sti
push
aad
stos
and
testl
xchg
adc
insb
insl
jne
aaa
test
mov
and
mov
clc
sbbb
sub
jno
jg
mov
popf
out
and
add
popf
ss
loop
in
jge
pop
int
mov
cmp
jmp
mov
or
pop
jns
shlb
or
loop
jns
addr16
dec
outsb
cmp
imul
rorb
xchg
or
or
pop
mov
jp
xchg
bound
dec
int3
or
xlat
mov
loopne
adc
gs
xor
pusha
or
loopne
lcall
pop
sahf
adc
fisttps
pushf
inc
es
repnz
iret
jmp
dec
in
cs
add
adc
push
nop
aam
push
inc
xchg
jmp
fiadds
scas
insl
movsb
xchg
xor
dec
loope
jnp
dec
or
mov
sti
xor
aam
cmpsl
mov
xchg
mov
icebp
lods
jle
es
sub
push
insb
sbb
push
dec
or
cwtd
insl
pop
cmp
aam
inc
es
popf
test
or
scas
xchg
lds
loop
sub
mov
mov
arpl
inc
shl
jne
xchg
mov
push
dec
jbe
fldcw
inc
cmp
dec
push
inc
inc
sbb
fimuls
xor
outsb
pop
test
enter
jl
or
iret
push
jo
lea
insb
cltd
dec
xor
adc
aam
mov
inc
xchg
push
pushf
mov
ljmp
sbb
add
mov
mov
adc
sub
fildll
int
add
lret
jle
push
call
mov
sbb
aad
xor
pop
pusha
add
enter
pop
mov
loopne
jmp
push
pop
and
int3
pop
dec
ljmp
scas
or
inc
inc
iret
mov
cli
fs
fistpl
jbe
xchg
pop
movsl
in
data16
jbe
je
adc
rcll
pop
outsl
add
jmp
and
add
cmpsb
pop
lahf
pop
mov
out
inc
mov
stos
dec
fstl
leave
aam
xchg
jmp
inc
push
shl
jecxz
dec
xor
sbb
insb
rcll
repz
inc
or
out
popf
and
rclb
insl
sbb
jge
or
pop
push
mov
lret
adc
nop
mov
fsubrl
mov
ret
add
xchg
ret
out
out
mov
adc
cmp
scas
dec
gs
cmp
sbb
int3
outsl
imul
xchg
mov
aad
shrb
fistpll
into
fmuls
or
dec
mulb
pop
push
or
call
xchg
jnp
mov
dec
jp
mov
pusha
mov
mov
mov
addr16
fdivs
in
cmp
je
leave
cmpsl
add
ret
ljmp
xor
sub
fucom
out
fmull
xchg
movsb
daa
movb
fstps
dec
mov
dec
out
jmp
xor
or
ds
mov
cmpsl
test
dec
cltd
daa
ja
pop
or
adcl
js
or
push
ret
enter
dec
jns
out
push
cmp
enter
loopne
out
daa
leave
mov
dec
xchg
sarl
push
mov
arpl
pop
stos
repnz
imul
sarl
mov
mov
push
xchg
fwait
js
outsl
in
stos
pusha
push
pusha
iret
data16
sub
sbb
xchg
jg
stc
sarl
adcb
lcall
add
jge
ret
or
ret
cmp
addr16
jge
or
repz
cmpsl
sub
push
add
pop
mov
stc
es
dec
nop
lods
sahf
ret
out
jbe
cmp
decb
pop
fs
rcl
ret
sub
jle
movsb
std
sub
xchg
inc
cmp
mov
ficoms
sarl
in
fnstenv
cmp
outsl
out
sti
xor
lahf
and
push
mov
loop
lock
shll
dec
cld
cld
xchg
loope
push
jo
mov
xlat
push
lods
add
cmpsb
movsl
and
test
das
sbb
scas
hlt
or
das
mov
sbb
repnz
daa
xor
or
out
cmpsb
stos
lods
mul
mov
or
mov
xor
xor
sub
xor
das
mov
inc
push
mov
js
popa
in
jl
es
repz
or
adc
mov
inc
sbb
stos
jmp
int3
dec
adc
mov
lret
insb
imul
xchg
xor
das
xchg
cwtl
inc
adc
pop
and
jge
xchg
loope
mov
xor
out
mov
cmp
mov
cwtl
adc
loope
push
outsb
lret
je
add
fnstenv
xchg
adc
popa
pop
icebp
mov
cmpsl
scas
popa
mov
push
and
sbb
out
jg
inc
adc
in
loopne
flds
repnz
icebp
sti
sti
enter
xor
push
std
pop
fdivp
shlb
and
imull
pop
mov
aad
cmp
mov
mov
aad
rorb
dec
sar
outsb
into
add
rclb
cmpsb
pop
inc
out
aam
fwait
xor
stos
out
xchg
push
add
daa
mov
push
mov
out
mov
addr16
pop
mov
mov
pop
fwait
cmp
cmpsl
mov
push
or
stos
outsl
lea
xor
ds
cs
repz
jl
out
pop
stos
jecxz
sub
ss
adc
mov
sahf
popa
sub
or
mov
sub
test
xlat
pop
in
shlb
out
filds
add
adc
addr16
jns
shrb
mov
cmp
movsb
leave
or
aas
and
pop
push
xchg
add
inc
mov
cmovo
and
ret
xorb
lods
movb
popf
sti
jns
ja
pop
and
dec
js
cs
pop
out
jle
pop
adc
jo
add
jge
sub
gs
push
in
sub
push
add
push
or
orb
in
aaa
ds
and
std
dec
call
mov
test
fisubl
outsb
mov
inc
jle
dec
cmp
arpl
inc
sbb
xchg
jmp
mov
stos
push
leave
test
iret
xor
adc
pop
fldl
mov
lret
rorb
fcomi
jle
insl
push
fcoms
xorb
pop
cmp
lods
fldenv
pop
dec
out
ret
aas
incb
fdivrs
in
push
je
aas
fwait
push
mov
in
add
jne
mov
pop
jnp
rorb
push
mov
icebp
lods
mov
push
clc
sub
les
sahf
out
pushf
dec
mov
jmp
lahf
xchg
jb
mov
jb
lods
cltd
test
sub
dec
inc
and
adc
sub
nop
mov
rcll
push
int
insb
cmpsb
add
outsb
or
jno
add
jns
jne
jo
jnp
call
enter
les
inc
fisttps
or
outsb
and
out
out
fwait
pop
xor
pop
rclb
cmc
inc
mov
inc
leave
lret
sbb
push
in
mov
lock
stos
cltd
sub
xchg
ret
xchg
in
jb
jb
sub
jb
cmp
nop
cmp
aas
outsl
jbe
adc
xor
mov
jmp
popf
and
loop
push
leave
cld
cmp
out
pop
xchg
incb
adcl
out
jno
pushf
and
push
and
cmc
push
mov
dec
fwait
sbb
sbb
mov
pop
icebp
fs
popa
std
xchg
in
mov
and
es
cmc
pop
inc
lock
or
aas
cmp
add
jne
inc
and
dec
lret
loop
gs
lahf
mov
jmp
cmpsl
xor
xchg
add
clc
mov
pop
mov
inc
mov
js
cmc
mov
mov
test
sahf
movsl
insl
cli
cmp
ret
loopne
xor
das
dec
faddl
int
or
sbb
lea
cltd
add
mov
jge
lcall
cmpb
mov
adc
xorb
mov
lods
pop
in
addr16
fistpl
push
sysexit
adc
stos
add
test
lock
or
mov
cltd
in
cmpl
cmp
movsb
cmp
scas
sarl
push
stc
inc
sbb
cmp
sub
fimull
add
movl
test
fiadds
sub
pop
cmp
jb
lods
clc
sbb
jg
scas
and
insb
jmp
shll
sub
and
cmp
popa
popa
mov
and
test
mov
stos
in
xor
push
xor
rcll
cltd
insb
pop
int3
mov
andl
into
aaa
and
push
fists
inc
fisubrl
sub
scas
cmc
es
test
lahf
xlat
fisubs
jne
lahf
lahf
mov
ja
das
mov
xchg
mov
out
mov
pop
jne
lahf
fucom
and
loopne
fbld
pusha
shrl
movsl
dec
repz
inc
add
test
imul
mov
lahf
jne
jno
dec
inc
pop
jo
or
out
add
dec
cld
pop
pop
fiaddl
es
xchg
mov
lret
outsl
insb
xchg
lods
xor
adc
movsb
fdivrs
pop
pop
subl
call
insl
xchg
sub
sbb
xorl
sub
push
imul
dec
sbb
mov
adc
dec
out
bound
push
lahf
xor
adcb
mov
mov
add
xor
or
mov
repz
loop
lds
imul
ss
adc
gs
xor
mov
shr
test
dec
sub
push
in
cmp
adc
pop
dec
pusha
add
ss
ret
push
jmp
lret
ret
shrl
popa
or
out
dec
or
pop
adc
lret
ret
inc
mov
lahf
pop
fisttpll
add
aam
sub
outsb
adc
movb
ret
lods
js
dec
dec
inc
pop
sub
stos
and
inc
jge
aaa
pushf
daa
cmpsb
add
mov
xor
inc
sti
imul
xor
stos
ljmp
pop
pop
stc
mov
imul
xchg
mov
sub
cmp
mov
dec
xchg
loope
pop
mov
adc
cwtl
popf
jns
insl
scas
jb
mov
cs
mov
xchg
out
push
lods
hlt
lods
adc
xchg
jge
fnstcw
dec
ja,pt
xor
jl
cmp
sahf
sbbb
push
divl
xor
fistpl
xor
mov
movsb
push
xchg
jg
cli
mov
xchg
adc
xchg
testl
jl
rorb
sub
movsl
stc
repz
dec
mov
dec
push
xchg
es
mov
iret
jne
mov
pop
loop
mov
or
bnd
lock
sub
pop
mov
aad
or
xchg
xchg
popl
lods
pop
lahf
aas
std
test
add
lret
add
sbb
je
pop
mov
push
mov
popf
in
cmp
pop
fistpl
orl
pop
dec
test
dec
inc
sub
fstp
mov
mov
movsb
push
in
push
jns
push
jae
and
add
in
adcl
cmp
xchg
pusha
cs
cmpsl
push
movsb
in
std
sbb
inc
cli
arpl
jge
jle
sbb
out
cmpsl
xchg
sahf
fstps
xlat
or
push
ret
push
loopne
push
and
mov
xchg
lock
and
jnp
sub
out
mov
mov
push
imul
pop
getsec
mov
cmp
mov
out
popa
sbb
mov
mov
xlat
sub
repnz
adc
scas
mov
xor
mov
inc
or
xor
cltd
mov
not
xor
jl
ds
loop
cmpsl
ds
push
jne
jl
imul
add
mov
test
and
mov
out
xchg
mov
adc
mov
jp
pop
sbb
pop
lcall
rorl
sub
or
in
in
jo
sub
dec
pmulhw
cmp
cld
fmull
and
sbb
inc
cmp
cmpsb
lcall
sbb
xchg
mov
mov
sbb
stos
cmc
and
mov
aaa
lock
iretw
sub
pop
mov
mov
sub
sub
test
push
sub
jae
decb
imul
push
fcoms
sbb
nop
cli
sub
fildll
popf
mov
adc
sub
adc
xor
cmp
stos
pop
ljmp
jb
lcall
mov
cmp
mov
add
out
sbb
push
rorb
push
repnz
jnp
push
mov
addr16
frstor
popa
and
xor
push
out
arpl
pusha
dec
sub
push
pand
xchg
jbe
pop
out
sub
pop
mov
mov
testl
enter
imul
cmp
idivl
stc
aad
lods
into
test
pop
inc
sbb
or
fldenv
inc
pop
mov
add
add
bound
jecxz
cmp
decb
adc
cmp
andl
stc
cld
xchg
sub
sbb
push
andb
ds
xor
push
pop
aam
push
sahf
call
inc
ret
outsl
mov
adc
scas
pop
cmp
pop
or
sub
arpl
push
pop
sub
xor
nop
orb
scas
and
in
or
add
xor
cmp
cli
dec
jmp
jmp
mov
mov
pop
aam
clc
in
lcall
inc
push
sti
outsb
daa
lahf
dec
push
lea
fs
pop
popf
rcrb
or
or
bnd
es
ret
push
daa
mov
out
pop
out
enter
fldcw
jnp
sub
jg
dec
nop
jge
fmuls
in
decb
inc
cld
cmp
mov
andl
mov
jns
insl
xor
out
popa
dec
mov
xchg
sub
cmp
cmp
dec
andl
xlat
or
stos
xchg
dec
rcll
mov
mov
sub
push
sbb
inc
insb
lcall
adc
jmp
and
jmp
dec
and
mov
movsb
ret
sub
push
stos
xchg
daa
xchg
and
das
adc
inc
mov
mov
sub
or
push
cltd
in
loop
add
pop
lods
and
aaa
xor
sarl
add
pop
lahf
hlt
or
stc
jle
push
xor
add
es
in
mov
and
add
mov
jg
jo
dec
dec
sbb
bound
inc
pop
lock
ss
push
cmp
dec
lock
fcoml
dec
xlat
in
cld
dec
pusha
xchg
xor
push
pop
xchg
mov
mov
and
xchg
aad
adc
cmp
insb
fiaddl
push
out
jmp
push
scas
inc
or
in
xchg
or
stos
pop
in
loop
push
stos
push
sub
dec
push
scas
cmp
adc
jg
lahf
repnz
cmpsl
pushf
jle
ret
jle
adc
and
in
ret
push
inc
dec
jl
loope
mov
test
out
add
xchg
pop
icebp
cmp
and
adcl
xchg
das
push
inc
and
pop
pop
xchg
mov
jns
mov
sub
in
sbb
lods
xchg
cmp
mov
push
push
mov
mov
xchg
cmpb
test
pop
pusha
aas
std
push
stos
jle
subl
mov
lds
jne
aaa
leave
jnp
imul
loope
aam
or
scas
lahf
adc
jge
pop
loope
jge
jp
lock
sub
sbb
stc
cmp
adc
arpl
xchg
mov
adc
xlat
lret
jae
imul
adc
pop
mov
les
mov
std
scas
and
xor
outsl
mov
or
imul
das
shl
inc
dec
leave
cmp
inc
mov
aad
or
jmp
cmp
cmpl
sbb
inc
mov
mov
sbb
adc
xchg
add
test
pop
adc
jb
or
aaa
pop
inc
push
mov
xor
hlt
in
pop
cs
cmpsb
push
or
rorl
xor
bound
add
sbb
mov
les
dec
les
pop
sub
shl
out
fcomps
push
xor
icebp
je
and
add
out
ja
icebp
shll
call
mov
aam
dec
aas
fstpl
fsts
push
hlt
aam
imul
pop
dec
popa
lret
mov
mov
jnp
stos
orps
push
or
cmpsb
mov
push
add
push
add
mov
inc
add
divl
pop
mov
divl
jmp
dec
sbb
cmp
jbe
lods
pop
jmp
hlt
mov
mov
mov
icebp
or
in
add
mov
pop
xor
incb
or
cmp
shlb
pop
outsb
and
jp
lods
fdivrl
lret
and
ds
pop
inc
aam
mov
or
out
sbb
jmp
and
mov
push
repz
outsb
or
scas
pusha
dec
adc
sub
insl
push
rcll
movsl
pop
js
aad
aam
daa
and
pushf
dec
dec
xchg
clc
scas
sub
repz
xchg
mov
jge
popf
fisubrl
frstor
jnp
and
inc
bound
leave
inc
adc
sahf
inc
sbb
aas
jp
cld
mov
and
sbb
call
sub
push
popf
dec
push
jnp
sub
jecxz
pusha
out
sbbb
out
shrl
hlt
cmp
push
ja
mov
add
inc
mov
insl
lods
jge
dec
xor
mov
xlat
stc
mov
xchg
mov
mov
sbb
insl
lcall
scas
in
jle
rolb
popa
ja
sub
push
std
mov
test
lods
imul
inc
test
test
jns
test
loopne
add
mov
imul
subl
roll
insl
jb
sub
scas
mov
das
enter
jns
mov
pop
shrl
popa
sub
cmc
jp
lcall
cmc
push
std
push
push
pop
test
fimuls
aad
jo
jne
sti
fs
leave
mov
inc
add
push
out
test
xchg
lcall
les
sbb
jb
sub
test
popf
and
xchg
leave
ficomps
popf
sar
add
dec
jne
jno
jo
cmpsb
xor
call
xchg
pusha
add
loopne
sub
pop
xlat
std
in
das
mov
sbb
dec
sbb
lods
mov
les
add
xchg
push
into
xor
call
roll
loopne
sbb
jo
mov
notb
movsb
lods
ljmp
mov
or
in
orl
jl
aad
lret
sbb
mov
test
notb
xlat
sub
sbb
test
jne
jbe
ret
mov
lahf
rcrl
bound
fstps
cmpsl
mov
adc
inc
popf
loop
stc
lahf
xchg
and
xchg
mov
and
push
in
sti
ljmp
lret
cmp
jne
mov
idivb
lret
dec
jmp
je
mov
rcr
sub
stc
inc
das
cmp
shlb
icebp
xor
ret
push
shlb
test
mov
ds
fs
sbb
call
jle
adc
adc
mov
adc
insb
imul
sub
mov
push
sub
add
push
xorb
fcomps
lret
xlat
pop
jb
lock
mov
add
mov
pop
pop
sbb
lgdtl
dec
les
or
jnp
xchg
inc
add
push
es
mov
push
inc
lea
push
sub
lret
pop
mov
dec
arpl
jb
ljmp
aad
in
shll
insl
loopne
dec
or
xor
dec
cmp
mov
mov
sub
je
mov
jl
insl
and
pop
sub
and
int
xorb
aad
add
repz
mov
in
insl
sub
enter
lret
repnz
lret
adc
jne
imul
push
lret
cmp
mov
aad
iret
popf
dec
arpl
xor
dec
mov
mov
repz
fcoml
push
dec
dec
enter
fistl
call
push
sarb
decb
sub
data16
cli
or
ss
test
jno
and
mov
repnz
mov
cmp
mov
sahf
sbb
movsl
push
pop
loope
div
pop
in
add
pop
addr16
inc
inc
xchg
pop
mov
cli
leave
xchg
mov
xchg
xchg
and
push
shlb
popf
pop
cwtl
jnp
pushf
mov
adc
test
cmpsl
sbb
dec
xchg
pop
jl
lcall
lret
xlat
int3
sbb
stos
jmp
xchg
mov
in
add
enter
pop
hlt
jg
jle
pop
sar
lods
mov
sub
mov
mov
adc
cmp
inc
leave
fnstenv
pusha
jo
add
jbe
stos
pop
add
js
lods
ficomps
inc
dec
repnz
ljmp
stos
sub
test
call
adc
hlt
test
fmuls
mov
mov
xor
xor
or
sti
adc
lea
stos
ret
cltd
add
push
pop
adc
jae
cwtl
push
je
out
mov
ss
dec
adc
inc
movsb
dec
adc
idiv
push
and
mov
aaa
push
shrb
jg
fdivl
xchg
lret
fldcw
js
ret
xor
adc
cmc
sub
lods
ljmp
pushf
mov
inc
out
cmp
add
mov
mov
xchg
add
gs
shr
in
fs
pop
cmpsb
pop
add
dec
adc
lds
dec
addr16
pop
xchg
jne
mov
std
aas
dec
xchg
mov
and
fmuls
mov
and
cmp
push
test
mov
js
in
pop
clc
sbbl
in
cmpsb
pop
push
push
into
push
mov
jb
loope
xchg
int
push
out
pop
repz
lods
or
arpl
stos
and
add
imull
out
inc
sbb
fsubs
push
ret
int3
mov
stc
xor
jle
sub
scas
fwait
push
push
out
stc
mov
scas
push
push
daa
add
and
faddl
fistl
ror
push
das
imul
inc
pushf
fnstenv
in
into
dec
loope
in
xchg
push
ss
das
cli
cmp
lods
sti
cli
pop
xchg
mov
push
pop
mov
push
hlt
and
xchg
xor
rcrl
enter
call
cltd
xchg
rcr
xchg
repz
inc
push
scas
out
adc
les
pusha
add
pop
dec
cmpsb
xor
cmpsl
shlb
enter
rorl
in
sub
in
imul
xchg
sub
lahf
pop
add
mov
movsb
xchg
cmc
lret
je
push
sub
cmp
dec
sub
xor
and
lret
mov
and
cmpsb
ficompl
addr16
cmpsb
mov
pop
les
in
xor
imul
out
mov
int3
ret
ds
iret
adc
out
mov
sbb
mov
repz
jb
xor
sub
mov
mov
add
pop
pusha
cmp
pop
loopne
cmp
and
test
jns
cmp
push
in
cmp
outsb
cltd
mov
sub
and
dec
fildll
jbe
loope
dec
es
cmp
mov
sbb
imul
xchg
cli
stc
mov
add
nop
movsb
mov
call
inc
xor
pop
push
je
mov
push
pop
push
ret
sub
sub
inc
nop
aas
pop
cmp
ret
decl
ja
ret
shlw
xchg
pop
dec
jle
shlb
adc
fidivs
call
ret
test
jne
incl
subb
push
in
int3
and
mov
mov
or
jg
shll
xor
or
adc
dec
push
mov
test
in
sbb
adcl
cmp
enter
aas
rsqrtps
jge
jns
imul
leave
fidivs
je
imul
jns
nop
fistpl
push
addl
mov
add
xchg
sbb
xrelease
mov
stos
shrb
test
ret
movsb
jae
loope
sub
dec
clc
mov
xchg
xor
push
cmpsl
xchg
add
jns
pop
xor
ja
test
je
inc
xchg
int
das
sbb
repnz
pop
in
jp
push
ret
dec
sbb
jmp
out
mov
hlt
lods
pop
push
jmp
mov
inc
pushf
and
clc
jp
adc
mov
xchg
lods
jo
push
mov
mov
push
and
mov
nop
mov
jle
movsl
pop
and
loop
jmp
xchg
cli
mov
xchg
sbb
adc
xor
xchg
sub
jg
mov
out
dec
jle
pop
aad
xor
mov
or
or
icebp
cvtdq2ps
mov
pop
mov
cmp
cmp
xchg
stos
sbb
xchg
iret
add
sbb
mov
sti
adc
ljmp
ret
mov
sar
xchg
cmpsl
pop
test
fcmovne
push
cmc
sub
xchg
pop
arpl
dec
sub
insb
push
xchg
pop
inc
gs
loopne
clc
orl
mov
movsb
xor
fisubrs
mov
dec
cmp
inc
cld
sti
loope
sub
push
add
ret
pop
mov
mov
mov
dec
jbe
inc
test
jecxz
rorb
mov
movsb
inc
decl
dec
inc
test
adc
test
jmp
push
iret
mov
pop
sub
out
addr16
aad
cmpsb
xor
pop
dec
and
popa
adc
xchg
dec
push
pop
sbb
dec
and
inc
out
jo
mov
fnstenv
fnstcw
arpl
out
pop
movsb
icebp
cld
and
xor
jo
jns
cmpsb
push
dec
lea
inc
add
xor
push
loopne
cwtl
dec
lcall
outsb
xchg
ljmp
stos
jne
cmp
xchg
sahf
fmuls
test
inc
sbb
mov
lods
fcmovu
push
or
arpl
sti
test
movsb
sbb
pop
pop
push
xor
sbb
repz
addl
jecxz
push
js
out
mov
sbb
repz
test
hlt
and
gs
mov
mov
clc
in
push
lods
fldenv
fiadds
int3
push
sbb
adc
mov
das
je
add
out
sub
mov
fistpll
or
jg
pop
lea
dec
mov
ja
push
pushf
mov
lahf
cltd
enter
mov
cli
mov
lret
cld
lret
jno
xchg
pop
mov
mov
pop
push
cmp
push
mulb
shlb
shl
leave
imul
cmpw
jns
dec
sbb
push
jbe
add
nop
push
idivb
pusha
out
in
jne
xchg
or
xlat
cld
jle
xor
aas
movsb
jnp
add
mov
adc
je
jne
sub
or
jns
insl
in
jns
ss
in
push
mov
divl
sbb
adc
rorb
cltd
flds
rcll
pusha
loop
sbb
sbbl
mov
xchg
inc
es
pop
jle
icebp
inc
pop
daa
jp
insl
loop
lea
xchg
mov
push
push
jecxz
push
and
inc
mov
push
jmp
iret
fucomi
mov
adc
ss
fbstp
pop
inc
or
mov
sub
or
lds
je
nop
loope
fisubrl
pusha
fisubrs
in
xor
xor
dec
push
pop
dec
jp
mov
repz
sti
dec
jl
scas
fcoms
push
in
lret
jno
sti
call
mov
or
jo
in
jnp
mov
inc
cmp
imul
fcmovu
inc
std
rsqrtps
sub
xchg
pop
scas
aaa
sbb
test
sbb
mov
xchg
popa
ja
xchg
jb
vmaxsd
subl
mov
filds
pop
outsb
lret
sub
stos
xchg
in
pop
fs
xor
pop
lea
popf
jg
xchg
pop
sbb
stos
pop
insb
sbb
and
out
in
or
add
pop
pop
mov
cwtl
call
and
mov
mov
sub
sub
popf
fmulp
loop
pop
fs
mov
mov
cwtl
cld
cmp
aad
push
xor
inc
js
pop
jp
ss
mov
mov
clc
rcrb
nop
cwtl
pop
hlt
inc
or
rorb
mov
xorb
adc
jle
push
xchg
loop
cmp
and
nop
lret
iret
clc
dec
icebp
in
addb
mov
repz
xor
int
fstpt
addr16
aad
add
into
cmpsl
jo
jb
insl
cmp
mov
insb
mov
cltd
es
jae
es
xchg
movsb
out
mov
xchg
fisttpl
stos
loopne
icebp
xor
mov
cmc
popf
out
cmpb
aad
adc
das
dec
xchg
and
daa
dec
bound
jmp
jo
inc
rcrl
mov
push
movsl
lea
std
pushf
popa
ja
jl
push
xchg
push
lahf
push
insb
movw
xchg
mov
jnp
push
dec
dec
mov
xorb
incb
sbb
push
movsl
je
stos
data16
inc
aaa
or
push
in
and
neg
adc
outsl
dec
xchg
sub
sub
cmp
jl
insl
out
ret
mov
cli
scas
or
mov
es
adc
xchg
int3
or
std
shll
into
xor
jmp
cltd
mov
mov
js
or
lock
in
pop
jge
dec
mov
fwait
push
jbe
jne
imul
popa
mov
sahf
pusha
inc
add
pop
sub
mov
sbb
int3
orb
pop
xor
lods
mov
pop
add
push
aam
stc
loope
movsl
sbb
dec
aad
xchg
rorl
add
cli
out
mov
andl
mov
roll
fidivs
add
sbb
sbbl
stc
xchg
inc
sub
cli
pushf
sub
insb
xor
in
bound
cmc
mov
into
aaa
sub
push
arpl
and
cmp
push
pop
mov
outsb
lahf
sub
mov
mov
push
in
or
xor
je
mov
out
and
mov
in
xor
dec
negl
outsb
test
sub
lcall
inc
int3
mov
cmp
shlb
sbb
cmpsl
lea
popa
fucom
push
movsl
jp
jg
cmpsl
adc
loop
push
cwtl
dec
icebp
aas
mov
mov
add
adc
inc
inc
icebp
push
sbb
push
enter
push
mov
insl
mov
sbb
push
add
es
cwtl
add
jno
sub
leave
shll
mov
ss
jg
dec
iret
sbb
jno
repnz
adc
mov
into
clc
jbe
sbb
mov
arpl
cmpsl
mov
mov
in
sti
in
push
pop
mov
xchg
jno
pop
jo
mov
lret
pop
pop
or
cmp
loop
cmp
mov
aam
sub
dec
out
xor
sahf
adc
xlat
mov
clc
jg
mov
xor
scas
into
lods
cs
movsl
adc
sub
or
aaa
push
lds
repnz
loope
dec
out
outsl
jl
imul
dec
push
jno
add
mov
adc
or
pop
cld
sub
mov
lret
xor
add
add
mov
icebp
push
jne
scas
sbb
cmp
xchg
aad
add
jns
loope
and
insb
cwtl
aam
out
loopne
arpl
repnz
xchg
push
sahf
aas
and
and
std
stc
cmp
mov
stos
mov
insl
lds
or
loopne
ror
jbe
mov
je
adc
sub
cwtl
mov
ds
mov
rclb
adc
shlb
shlb
incl
sbb
in
or
push
mov
outsb
loopne
ljmp
add
mov
xor
aaa
aam
mov
cmc
sub
mov
mov
cwtl
in
scas
cwtl
mov
adc
xchg
mov
movsl
pop
xchg
jmp
mov
test
test
sbb
xchg
mov
mov
sbb
mov
jmp
inc
pusha
pushf
sti
cmp
mov
loope
push
inc
xor
and
mov
mov
dec
fsubrp
out
xchg
imulb
push
out
neg
decb
mov
and
test
sub
fs
xor
fs
arpl
cmpsl
push
dec
jecxz
sbb
addr16
movsb
jl
pop
dec
int
cmp
dec
add
testl
and
xor
xor
pop
lsl
push
loope
cmc
cmp
and
inc
loope
test
jne
cmp
cmpsl
inc
aaa
pop
test
cmp
mov
cmpsb
addb
xchg
add
fcmovnbe
insb
aam
inc
mov
sti
sbb
aam
clc
xchg
cld
es
pusha
and
dec
or
push
sahf
or
xor
testb
cmc
cmpsl
push
push
in
sahf
repz
or
fcomps
int3
das
shll
mov
shl
dec
cmpsl
add
loop
lods
cs
xor
bound
js
daa
lods
loope
int3
jb
dec
push
and
add
sub
movsl
jge
lahf
jmp
outsb
lods
fdivl
aad
add
add
out
push
inc
cltd
adc
mov
outsb
mov
add
and
push
shrb
lods
adc
loopne
lcall
xor
inc
popa
outsb
inc
ds
jp
lret
push
pop
pop
pop
shll
and
shll
mov
xchg
adc
addr16
scas
push
lret
imulb
loopne
inc
je
mov
xchg
pop
fmull
sbb
add
daa
xchg
sub
adc
in
and
jae
data16
push
shll
sbb
pop
push
ds
ja
add
das
cld
outsl
dec
gs
pop
cmpsb
insl
cmp
jle
frstor
xor
ljmp
shl
pop
sar
frstor
push
cmp
cld
jl
sub
js
js
adc
sahf
aam
sti
adc
int3
xor
outsb
dec
push
mov
mov
fwait
dec
jp
loop,pt
dec
int3
dec
int
sbb
mov
popa
fcoml
pop
hlt
push
push
test
ret
add
out
mov
push
hlt
bound
adc
or
ret
insl
mov
jg
je
pushf
cli
clc
xchg
nop
adc
daa
mov
and
push
pop
xor
je
loope
ret
cmpsb
ret
jae
mov
lret
int
mov
and
ss
adc
dec
fistps
cmp
cmp
xchg
cltd
pop
rolb
xorl
adc
subl
shl
mov
repz
add
xchg
mov
mov
dec
mov
cwtl
xlat
out
aad
movsb
sbb
rcl
repnz
addl
ljmp
xchg
xor
sbb
aaa
or
and
cli
xor
std
ss
into
fs
adc
lods
sarb
mov
sahf
cmp
leave
sbb
jle
push
aaa
mov
xchg
adc
mov
dec
jo
xor
stos
push
ret
pop
pushf
mov
scas
and
das
movsl
xor
sarb
mov
jne
shll
xor
repz
sbb
sub
jl
jo
fbld
pcmpgtw
and
sub
xlat
jb
inc
and
fmulp
sub
pop
sbb
ficomps
outsb
jp
fcoms
in
out
inc
rol
outsl
or
les
ja
adcl
ret
inc
sbb
pushf
jne
inc
fwait
jno
jmp
jle
out
push
out
cmp
jecxz
and
xor
xchg
sahf
lods
jo
jmp
imul
push
sub
outsl
loopne
dec
xchg
mov
mov
xchg
pop
sbb
pop
arpl
sbb
jge
mov
mov
push
pop
cwtl
addl
jmp
or
jb
loop
jae
lds
testl
outsl
dec
inc
ret
rol
inc
cli
std
lea
and
cmp
jb
push
adc
push
sbb
mov
inc
add
pop
push
js
lds
fldcw
pop
mov
mov
adc
dec
jo
mov
popf
outsl
sahf
adc
dec
loop
aad
cmp
enter
insb
shlb
or
pop
inc
pop
pop
cmp
add
inc
pop
cs
movsb
mov
sbb
sbb
js
lret
js
data16
outsl
cmpsb
out
sub
xor
sarl
imul
push
int3
lret
pop
pop
aad
popf
ret
push
cmp
lcall
or
or
and
jns
pop
adc
mov
mov
das
rcrb
mov
ljmp
sub
dec
sub
pop
faddl
test
sahf
je
lret
xchg
cmc
mov
dec
mov
inc
aas
inc
cli
rolb
add
faddp
loope
iret
outsb
cwtl
sbb
dec
mov
mov
xchg
jp
pushf
cmp
das
inc
out
xchg
xor
jne
adc
mov
jno
js
loopne
stos
cmpsb
xchg
sbb
or
or
aad
dec
jnp
fnstcw
ds
push
inc
movsb
fildll
add
xchg
or
or
push
jmp
mov
jne
cltd
in
daa
pop
xor
add
insb
stos
xor
popa
adc
filds
xchg
pop
loop
fsubrs
mov
mov
das
or
add
insl
aam
jne
add
push
sbb
inc
mov
mov
cltd
and
mov
stos
jb
arpl
mov
adc
mov
adc
repz
pop
lock
pop
mov
arpl
gs
jnp
cmp
aaa
int3
cltd
cltd
jle
mov
stos
imul
push
cmp
fwait
cmp
adc
outsb
lcall
cmp
fadds
sub
inc
mov
outsb
jns
dec
ficompl
dec
sbb
push
or
xor
pop
out
lahf
pop
mov
arpl
out
fst
sub
sub
adc
mov
and
cmp
and
arpl
pop
std
jle
lods
arpl
insl
sub
jae
sbb
movsl
cmpsb
xor
lret
sti
aas
fdivr
sub
movsl
cmp
pop
mov
dec
stos
and
mov
mov
stos
push
dec
xchg
fildl
sbb
icebp
mov
das
or
ffreep
pop
shlb
notb
pop
pop
test
cs
xor
nop
int
jp
jg
mov
push
es
es
fs
fisubrs
sahf
and
sarl
cmp
stc
gs
adc
lock
xor
lret
add
fsubrs
ljmp
xchg
incb
ror
pop
mov
imul
iret
sbb
pop
imul
sbb
add
xchg
and
rcll
pop
fiadds
xor
js
push
mov
cmp
jmp
push
or
or
push
cmpsl
lret
mov
out
jo
sub
mov
adc
fs
andb
push
loopne
imul
clc
out
cmp
insb
jg
sahf
imull
aas
sahf
std
pop
xchg
test
in
cmp
lds
icebp
sbb
xchg
fisubs
aam
je
pop
xchg
mov
js
and
test
icebp
xor
insb
inc
mov
dec
adc
pandn
pop
pop
cltd
mov
mov
inc
jno
mov
add
sub
add
in
in
arpl
sahf
lods
test
pop
aaa
pop
leave
fistpll
xchg
mov
clc
cli
cmpl
scas
cli
ds
cmc
lods
mov
dec
jne
stc
push
inc
push
xchg
inc
rcrl
or
lret
mov
orl
xor
push
jge
nop
pop
cmp
jp
xchg
test
aad
sbb
or
imul
lea
mov
xor
fidivrl
and
cs
cwtl
fisubrs
into
gs
in
into
data16
into
dec
jg
dec
cmp
loop
leave
adc
in
mov
and
cmp
cs
movsl
mov
arpl
sbb
lods
dec
popa
pop
sbb
or
jge
dec
cli
repz
push
mov
adc
push
xchg
dec
mov
test
mov
aad
adcb
icebp
sbb
and
fs
sub
stos
jbe
add
add
repz
jb
leave
out
push
in
fs
shrb
mov
rolb
dec
out
cmp
xchg
push
mov
jle
mov
mov
mov
pusha
xor
test
push
sub
ljmp
pop
test
loop
sub
nop
push
lret
icebp
dec
and
mov
and
push
mov
xor
xlat
sub
push
adc
add
sbb
xchg
nop
mov
iret
push
sahf
dec
cmpsb
dec
cld
and
or
mov
popa
jp
pop
sbb
mov
into
je
mov
jae
int3
ret
sbb
aad
jge
fstps
aaa
repnz
mov
lret
inc
sub
mov
cli
clc
inc
mov
aas
pop
and
push
add
fisubrl
inc
gs
aad
push
popf
out
outsb
jl
and
push
xchg
clc
xchg
sbb
nop
xor
jne
dec
pop
dec
imul
dec
lods
dec
mov
aam
lock
xchg
pop
cmc
ud0
xor
inc
push
sbb
scas
xchg
sub
popa
jne
jle
ds
sti
and
xor
adc
andb
pop
sbb
loope
xchg
shrl
fisubrs
sbb
mov
icebp
adc
push
sahf
test
pusha
and
fidivl
inc
shl
mov
lea
notl
pushl
and
stos
movsl
or
sbb
jmp
cmpsl
dec
clc
mov
test
dec
ds
dec
push
inc
out
imul
int
mov
rolb
jl
ror
pop
insb
into
push
packuswb
dec
and
faddp
loope
push
test
adc
xchg
ja
popf
mov
add
cmp
stos
jecxz
inc
pop
repz
cmovge
xchg
jge
jo
outsl
insl
xor
lret
dec
jb
testb
idivb
mov
dec
pushw
pop
push
movsb
call
insl
outsb
pop
ret
lret
fcomip
mov
cmp
in
lret
lret
add
dec
mov
inc
jns
mov
xlat
xor
testb
outsl
mov
pop
pop
add
es
jp
xor
push
aam
cltd
mov
jl
cmpsl
dec
and
loopne
adc
and
popa
xchg
lret
fsubs
mov
xor
mov
inc
aam
fdivrl
fidivrl
aaa
xor
or
enter
movsb
cmpsb
and
cld
xchg
pcmpeqd
in
and
lret
xchg
pslld
push
inc
jecxz
or
adc
cmp
dec
das
shl
xchg
out
pop
push
cmp
push
xor
mov
roll
sub
mov
sub
inc
stos
mov
aad
push
mov
mov
mov
push
pushf
les
xchg
or
fsubl
dec
jbe
fldenv
mov
mov
push
test
dec
add
dec
fsubp
dec
mov
adc
push
repnz
addb
adcl
cli
idiv
outsb
mov
fistpll
pop
shl
jge
aad
mov
push
pusha
stos
add
addr16
xchg
and
or
mov
fists
scas
pushf
pop
insl
popa
es
mov
push
xchg
jecxz
pop
adc
mov
cltd
mov
sti
int3
sbb
and
outsl
dec
push
inc
out
dec
jp
dec
shll
cmpsl
jne
push
call
sub
cmpsb
jle
and
add
pop
lahf
and
mov
or
adc
out
mov
call
sbb
pop
xor
push
or
call
das
mov
fcmovne
mov
cmpsl
mov
lahf
stos
and
cmpsb
and
and
or
sbb
cwtl
std
enter
dec
pop
pop
push
xchg
mov
inc
movsl
in
int3
mov
xor
jle
popa
repz
scas
mov
ret
push
aaa
out
js
adc
mov
cmp
sbb
mulb
leave
cmp
lods
dec
stos
ret
aaa
aaa
test
adcb
push
repnz
fistpl
dec
lock
mov
test
push
movsb
push
gs
dec
dec
sub
dec
mov
leave
jl
scas
test
rcr
mov
out
sub
cmp
mov
adc
rclb
or
and
and
repz
jb
dec
test
aad
inc
ss
xchg
rorl
int
inc
jnp
mov
adc
aaa
adc
sub
xchg
mov
mov
call
icebp
iret
test
ss
in
ss
xchg
fisubl
mov
pop
cld
xchg
jnp
test
lcall
or
hlt
jl
xchg
inc
jge
imul
mov
cmp
pop
dec
mov
jo
stos
lea
xor
mov
add
stos
negl
add
out
addb
sub
mov
ret
nop
out
push
cmc
mov
insb
mov
repnz
ret
and
inc
xchg
and
xor
mull
sub
cltd
lahf
fistps
xchg
xor
inc
inc
pop
stc
scas
mov
test
cli
or
fst
mov
xlat
icebp
cli
pop
addr16
ret
mov
xor
cmp
push
mov
push
pop
mov
es
nop
mov
jecxz
or
lods
shr
jno
mov
pop
int3
dec
inc
dec
jns
scas
xor
and
pushf
or
lock
popf
cmp
jge
pushf
xor
inc
cs
dec
out
fmuls
pop
inc
xchg
sbb
stc
push
mov
cs
je
popf
mov
jo
mov
fs
or
add
cmp
cmp
gs
dec
add
xor
jb
mov
xchg
int3
xor
arpl
sarb
cmpsb
cmp
aam
dec
dec
ja
gs
adc
jb
pusha
sub
adc
insb
or
push
mov
mov
or
subb
cs
push
cmpsb
dec
into
jg
lahf
mov
sbb
push
shlb
sbb
adc
xchg
xchg
mov
sti
scas
icebp
sbb
bswap
bound
or
call
mov
test
push
push
inc
mov
icebp
arpl
test
push
in
cld
cmp
or
add
ffreep
push
aam
adc
daa
mov
in
cmp
fildl
mov
pop
sbb
mov
sbbb
lahf
outsb
nop
out
lods
cmc
int3
fs
lcall
mov
filds
sub
lods
add
fidivl
js
mov
ljmp
dec
jp
and
push
push
lods
cmp
popa
icebp
pop
sub
mov
inc
mov
lcall
inc
xlat
xor
fs
xor
push
push
cwtl
sarl
xchg
mov
jge
jae
negl
ficompl
mov
jo
mov
mov
lock
and
sub
cmp
fdivp
mov
adc
inc
cwtl
in
mov
inc
inc
and
sub
mov
dec
sbb
addl
dec
mov
inc
add
es
test
pop
cmp
sti
ret
stos
sbb
pop
mov
xor
cmp
inc
fcoml
mov
mov
arpl
shr
jp
pop
fildl
mov
adc
dec
clc
push
mov
xor
stos
inc
stos
mov
pushf
push
lcall
dec
add
push
push
push
cmp
fwait
or
push
loope
lock
cmp
jp
lea
jge
mov
enter
nop
gs
pop
outsb
jmp
ja
mov
xor
and
cltd
mov
jl
add
movsl
loope
inc
mov
lods
add
lods
ljmp
cmpb
pop
cmp
mov
mov
dec
ret
mov
adc
mov
repnz
add
loope
lods
pop
es
xchg
lahf
mov
jbe
pop
xchg
dec
push
sub
dec
in
fildll
push
push
sbb
sbb
out
call
gs
cmpl
jnp
mov
push
scas
fstps
mov
outsb
aam
xchg
adc
ja
cltd
pop
pop
xor
stos
insb
dec
xchg
sub
adc
andb
mov
inc
nop
scas
sub
pop
aam
dec
xchg
aad
jle
jp
inc
divb
mov
pop
add
sub
mov
out
jmp
stos
movsb
cmc
jl
aam
mov
std
push
aam
lret
xchg
cmc
sbb
fcoms
mov
mov
adc
jne
or
jecxz
mov
push
cli
xor
pop
sub
inc
xchg
jbe
or
test
aas
push
mov
add
jo
inc
pushf
mov
jns
pop
aad
aad
ret
adc
dec
adc
dec
mov
mov
mov
jns
fcomi
jl
sarl
jb
cmp
aam
enter
mov
cld
mov
pop
ret
fmull
idivl
loope
hlt
jecxz
and
mov
aaa
push
cwtl
or
mov
imulb
imul
xchg
xor
into
fcoml
repz
and
xchg
jle
nop
sbb
out
xor
push
fwait
data16
push
int3
pop
mov
mov
cli
dec
enter
dec
xchg
ds
fld
and
cmpsl
call
clc
js
jo
adc
mov
mov
cmpsb
mov
mov
in
std
es
popa
lds
xchg
out
jne
stc
shll
inc
in
lcall
dec
test
lcall
xor
cmp
mov
enter
es
daa
rolb
sti
or
sbb
addl
sbb
sti
and
inc
movsb
sbb
mov
sbb
jb
das
pusha
scas
mov
xchg
lcall
fstpt
lds
mov
into
cli
into
push
and
jae
outsl
mov
fbstp
adc
dec
mov
ja
sbb
mov
mov
test
push
dec
inc
in
pushf
push
mov
jnp
pop
jbe
and
lods
mov
aas
popf
mov
ljmp
cmp
mov
push
lock
push
in
js
pop
pushw
cmp
fs
adcb
sti
sbb
mov
std
sub
call
dec
add
fisttps
stos
fadd
loop
aaa
cmc
scas
jg
dec
sbb
sbb
outsl
testl
out
add
ja
roll
push
in
icebp
insb
adc
bound
push
fucompp
nop
cs
mov
cld
cs
and
mov
jle
xchg
xchg
fdivp
jge
xchg
imul
loope
mull
xchg
dec
sbb
sub
addb
adc
add
adc
addr16
fdivrl
js
cmp
lods
sbb
dec
movsb
ljmp
out
ret
aad
inc
lea
outsw
aad
adc
push
insl
push
push
fsubl
or
xor
in
inc
movsl
jnp
repnz
das
add
pop
pop
insb
imul
push
cmp
mov
jmp
lds
test
push
fs
xchg
lds
or
popa
mov
outsl
or
mov
je
lds
lcall
shl
pop
jl
cmp
sub
mov
push
xchg
lods
lods
nop
aas
fstl
mov
outsb
out
pop
cmpsl
xchg
mov
mov
lock
pop
cli
in
mov
int3
and
mov
hlt
js
and
pop
andl
insl
stos
xchg
movsb
push
out
std
imul
cmpsl
sbb
scas
imul
adc
int
xor
repnz
xor
arpl
out
push
mov
or
mov
insb
lcall
xchg
movb
add
cmp
loopne
xlat
push
sub
iret
xchg
cmpsb
cmp
fistpl
int3
cmp
adc
push
inc
jb
sbb
rol
push
popf
mov
sbb
add
daa
sbb
or
sub
add
push
out
xor
xchg
sbb
xorl
push
fistpl
adc
sub
cmp
mov
dec
scas
sbb
mov
nop
pushf
pop
inc
inc
xchg
lods
lcall
insb
jg
cmpsb
stos
pop
xchg
ret
nop
test
cmc
sbb
adc
leave
pop
lods
aaa
aad
mov
arpl
adc
pusha
dec
add
lock
jmp
jnp
and
jnp
xlat
scas
xchg
add
xlat
adc
jecxz
dec
das
jge
sarb
arpl
test
insl
fmulp
mov
jo
nop
jmp
fs
out
and
pop
stos
pop
push
dec
lods
jmp
out
mov
aad
loop
sbb
jp
push
ljmp
xor
cwtl
sub
arpl
fst
out
cltd
mov
jbe
call
xor
aad
cmp
or
je
or
adc
mov
lret
cld
insb
jg
mov
cld
sbb
mov
push
loope
ss
jp
xlat
cmpb
pop
mov
in
and
mov
das
dec
jae
sar
into
adc
cli
rcr
ret
adc
inc
lea
mov
iret
inc
push
pushf
cltd
jo
jl
int3
lahf
mov
mov
loopne
pop
jns
dec
jo
and
and
lock
fadd
fistpl
dec
jae
sbbl
lcall
rolb
fcomip
cmp
test
dec
into
dec
jo
mov
pop
arpl
loop
cs
push
sbbb
ds
inc
lahf
inc
mov
sahf
xor
pop
push
push
push
hlt
arpl
stos
insl
jno
movsb
dec
xlat
push
fldl
jne
int
std
add
mov
movb
loopne
pop
fcomps
aam
xchg
sti
sahf
xor
shl
ds
mov
dec
loopne
pop
add
ds
jmp
icebp
arpl
shl
inc
sbb
imul
pop
mov
jge
in
loope
orb
inc
test
std
sub
push
lds
icebp
pop
inc
imul
in
pop
adc
inc
xchg
add
jmp
sbb
test
xor
rorl
inc
push
cwtl
hlt
lcall
sub
or
mov
ss
xor
inc
imul
pop
shlb
jle
or
repz
mov
add
hlt
xchg
add
cmc
inc
or
push
popf
shlb
test
mov
push
jo
notb
sahf
jne
add
mov
xchg
xor
dec
lahf
xor
inc
std
les
adc
dec
pop
rcr
jp
test
jbe
test
sbb
rclb
out
and
mov
mov
xlat
xchg
inc
aam
stos
cmp
sub
cmc
xor
and
jg
pop
sub
fcoms
fadds
xchg
ja
shrl
mov
xchg
aam
daa
xchg
pop
ljmp
lahf
nop
mov
add
shr
jmp
fisubrs
or
shrl
push
xor
jae
inc
pop
sbb
out
cmpsl
bound
sub
jo
jg
xchg
testb
xchg
jo
push
adc
lods
ret
outsb
push
sbb
jae
fcmovne
rorl
push
sti
sub
cmp
mov
dec
xchg
je
dec
xchg
insb
mov
pop
or
cmp
push
and
hlt
fxch
lret
aaa
jle
mov
lahf
cmp
jo
jmp
mov
jno
fnstsw
test
inc
gs
pop
cmp
popf
pop
nop
mov
inc
sbb
push
imull
xor
js
inc
stc
xchg
mov
filds
mov
lods
cmp
inc
push
int
adcl
or
or
sbb
mov
repnz
repz
xchg
les
jo
mov
pop
push
dec
nop
clc
sub
je
movsl
jmp
pop
push
cmp
sub
hlt
lret
xchg
mov
cmpl
gs
mov
lcall
sahf
movsw
lds
xor
add
stos
test
movsb
jne
je
mov
xchg
pop
fildll
push
dec
outsb
xor
pushf
ja
mov
sbb
rcrl
mov
inc
pop
adc
push
xor
enter
lea
in
mov
or
xor
sbb
xchg
nop
mov
adc
cmp
mov
aad
cs
jne
enter
mov
or
push
or
push
jo
adc
imul
decb
addl
sti
mov
mov
add
push
pop
jo
inc
xor
out
jecxz
sbb
pusha
inc
addb
add
jns
pop
xor
negb
push
js
ja
enter
pushf
jecxz
ljmp
insb
pop
push
jg
and
aam
jno
mov
sub
scas
pop
mulb
mov
mov
out
mov
cli
push
mov
push
xchg
arpl
mov
jmp
es
cmpb
test
into
xor
sbb
push
pushf
xchg
adc
stos
xor
popa
sbb
and
and
shl
loope
push
dec
iret
mov
into
sbb
fisttpll
xchg
cs
stc
repz
int3
jno
es
xchg
mov
and
mov
test
movsl
sub
adc
and
cmp
mov
sub
add
mov
lret
aaa
clc
cmp
es
fs
imul
jnp
jl
icebp
rorl
jnp
and
and
gs
stos
pusha
xchg
push
or
aad
mov
cli
cmpsl
or
and
shr
mov
insl
pusha
arpl
out
test
loop
sub
cmpsb
inc
cmpxchg
mov
cmp
cwtl
adc
pop
repz
push
subb
xor
imul
add
add
inc
inc
addb
mov
xor
cmp
sbbl
loopne
daa
sbb
daa
mov
pusha
pop
lahf
push
or
or
ret
mulb
dec
shl
adc
ja
pushf
jb
push
jle
and
adc
xchg
push
andl
leave
test
negl
xchg
inc
sub
push
loope
imul
cmp
lahf
sub
les
lods
cmpsl
xchg
cmc
sbb
push
pop
pop
enter
jg
lods
sub
sbb
xor
loop
es
push
cmp
and
pop
sbb
movsb
test
cmp
or
add
add
movsl
pop
jg
fdecstp
cmp
mov
push
or
mov
jo
or
jnp
clc
aam
lock
outsl
shl
pop
push
mov
cmp
cmp
jmp
mov
dec
das
fstp
ret
ss
loope
and
sbb
dec
pop
add
lea
inc
pop
out
and
inc
push
fisttpl
les
or
and
jecxz
mov
ja
and
fwait
jo
jbe
pop
jnp
call
sbb
push
gs
cli
jnp
or
out
je
push
sbb
jns
xorb
out
xchg
pop
cmp
mov
push
or
jne
call
sti
or
fiadds
movsl
movb
push
mov
sub
mov
pop
mov
ss
and
add
fldl
ss
fs
orb
fdivrs
adc
cmp
shrb
cld
es
pop
mov
adc
sub
inc
or
int3
xor
subl
cwtl
movsl
int3
dec
mov
add
cltd
sbb
dec
mov
stos
mov
sti
adc
les
xchg
push
jnp
sub
ret
pop
xlat
push
mov
jecxz
outsb
cld
fisubl
and
fidivl
into
mov
je
js
aam
add
mov
or
mov
mov
lahf
imull
cltd
shr
pop
pop
dec
add
cmp
or
loopne
mov
and
cmpsl
cmp
add
mov
fdivs
lock
jecxz
test
popa
mov
ss
cli
loopne
cmp
sub
mov
and
das
js
ja
jno
inc
dec
lock
dec
ret
inc
add
mov
jnp
cld
jno
push
dec
movsl
mov
in
cmp
mov
je
aas
sub
out
cmp
xchg
or
ds
and
push
mov
rclb
push
popa
loopne
lret
les
aam
stc
pop
enter
and
adc
add
aaa
mov
js
inc
inc
jp
ja
jg
pop
add
cmp
pop
adc
jne
aam
mov
loop
pop
pop
in
std
sbb
push
es
or
loop
and
lcall
daa
in
mov
stc
mov
mov
and
sahf
orb
pop
mov
in
push
dec
jo
push
or
and
in
pop
out
add
xchg
mov
mov
jae
xor
and
sbb
outsl
add
inc
sbb
cmp
or
xor
repz
addr16
lcall
xor
cmp
test
mov
jmp
dec
mov
test
lds
inc
int
les
xorb
xchg
popf
xor
nop
sbb
shr
mov
scas
scas
hlt
pusha
xchg
subl
or
out
sbb
arpl
sbb
jns
loopne
xchg
inc
dec
and
mov
sbb
sbb
shl
lret
sarl
pushf
enter
fwait
daa
cmp
dec
sarb
jg
scas
jecxz
add
cmpsb
test
ja
jecxz
inc
add
mov
sbb
add
sbb
or
lret
mov
je
sar
popf
mov
iret
or
mov
scas
mov
fnstcw
rep
jle
inc
in
ret
sub
imul
sub
jl
xchg
popa
mov
es
or
mov
scas
adc
aaa
arpl
cmp
in
fisttpl
rorb
and
scas
jno
ds
movsl
pop
and
lods
rorb
pop
dec
dec
push
pop
in
inc
or
lock
jae
daa
lret
mov
push
jecxz
dec
and
mov
fisttpll
or
imul
insl
data16
mov
cmp
jmp
mov
mov
outsl
sbb
fcompl
rorb
ficompl
fdivr
dec
out
imul
mov
pop
adc
jl
mov
push
decl
inc
jecxz
insb
push
push
clc
inc
test
fdivrs
inc
dec
orl
std
inc
mov
cli
cmp
adc
push
xchg
xor
inc
mov
pop
es
adc
call
and
cmc
mov
push
stos
shlb
aas
push
fwait
adc
jl
jno
mov
dec
jnp
call
pop
ljmp
sub
dec
mov
sub
xor
fmull
fnstenv
iret
pop
cmp
pop
std
mov
adc
int3
les
sub
dec
stos
pushf
test
repnz
mov
fsubrl
cmc
push
iret
stos
xor
js
sub
shlb
dec
cmp
mov
sbb
bound
adc
xchg
mov
inc
push
pop
adc
aad
mov
ds
pop
pusha
rclb
mov
push
push
pop
jno
filds
dec
cmc
push
add
xchg
jb
push
mov
mov
movsb
mov
cmpsb
mov
out
sub
inc
test
dec
pop
movsl
sbb
fxch
out
dec
add
jg
cmp
insb
or
bound
iret
fsts
mov
push
xchg
add
call
fwait
jp
jge
loop
in
mov
aad
pop
xadd
jecxz
imul
mov
pop
fldcw
fidivrs
push
insb
xchg
sub
and
pop
rclb
jo
xchg
addb
mov
scas
cmp
leave
lods
movsb
dec
aad
dec
xchg
push
adc
sbb
ja
jae
and
jge
add
in
rorb
and
bound
cmpb
and
dec
je
adc
movsb
sbbb
pop
imul
xchg
adc
shrb
sub
cli
imul
je,pt
xor
mov
xchg
lock
in
stos
mov
sbb
insb
cmp
add
add
xorb
repz
out
jno
xchg
imul
adcl
nop
mov
sub
add
add
loopne
loop
mull
daa
or
mov
movswl
dec
jg
mov
lods
xchg
xor
hlt
mov
dec
nop
outsl
adc
adcb
fldt
out
mov
cld
xchg
adc
fsubs
addr16
rclb
inc
movsl
out
and
mov
stc
lods
jecxz
lcall
cmpsl
cli
andl
mov
loop
dec
jo
fcoml
icebp
pusha
or
lods
addr16
or
je
jecxz
pusha
push
lods
sub
push
and
cmp
sarb
ljmp
mov
ret
cmc
jle
push
or
cwtl
leave
sbb
faddl
mov
negl
outsl
dec
sub
sbb
data16
rorb
mov
cmp
bnd
nop
testb
aaa
dec
pop
xchg
xlat
push
xlat
mov
sarb
dec
nop
sbb
cltd
and
fisttpl
or
jge
filds
pop
adc
sub
mov
stos
mov
mov
cmpsl
adc
outsb
outsl
out
stos
mov
xor
push
pop
mul
jb
out
or
fistpl
add
dec
or
push
lods
xchg
loope
jle
imul
cwtl
enter
cmpsb
push
pop
mov
mov
stos
jp,pt
into
inc
jle
test
mov
or
cld
inc
xor
sbbl
pop
rcrb
xor
ret
dec
cmc
fcmovnb
inc
imul
mov
dec
and
push
fistps
sbb
mov
stc
cmovs
adc
xor
lcall
push
xor
outsl
arpl
out
or
dec
mov
pop
andl
stos
mov
adc
sub
mov
mov
in
cs
out
mov
push
jl
sub
mov
cli
or
cmpsb
dec
adc
cmpsl
in
loope
xchg
je
pop
frstor
fisubrs
data16
fisubrs
stos
icebp
pop
ret
adc
pusha
dec
iret
push
dec
maskmovq
mov
xor
ljmp
aad
mov
in
push
cld
imul
push
dec
dec
shr
add
repnz
and
fsubs
scas
sub
jno
out
sti
test
mov
mov
fsubrl
mov
test
mov
cmp
in
jno
imul
inc
cmp
xchg
sub
pop
cmp
jmp
insl
push
ffree
andb
jmp
aaa
cld
idivl
xchg
xchg
fwait
mov
mov
and
iret
or
fwait
in
mov
test
xor
adc
mov
xor
mov
jle
repz
xchg
xchg
je
pop
lock
ljmp
aad
xor
push
scas
push
sbb
clc
sbb
push
mov
xor
sbb
inc
jb
cmc
in
sub
push
std
fsincos
movsb
in
cltd
jo
mov
xchg
jp
jae
jbe
cmp
mov
out
mov
jl
mov
xchg
jl
andb
mov
ret
jle
or
inc
cmp
das
aad
movsb
sarb
cs
or
lds
aas
jno
mov
push
xchg
cmpsb
in
sub
push
lea
push
pop
out
gs
subl
inc
lahf
xchg
mulb
pushf
sbb
sbb
fldt
sub
push
xor
mov
mov
xor
jbe
xlat
xchg
mov
das
jge
out
mov
sbb
jge
cwtl
xchg
aas
enter
aad
mov
loopne
add
test
fdivrl
aad
pop
test
cmp
or
cmc
xor
stos
push
sub
adc
das
inc
jne
mov
mov
cld
and
movsb
enter
jb
jno
outsl
jno
hlt
cmpsb
in
add
xor
xchg
dec
mov
inc
xor
in
mov
icebp
and
aaa
adc
cmpsb
les
ret
mov
das
push
xchg
add
cmp
xchg
jg
mov
aam
cmc
push
popa
sbb
cmp
cmp
adc
data16
pop
jl
sbb
dec
ljmp
push
or
gs
flds
jg
hlt
pop
popf
setne
xchg
xor
sub
cmpsl
xor
jb
loope
mov
daa
mov
adc
cmpl
jno
jne
xor
fists
fcomps
hlt
push
xor
xor
jl
btsl
pop
mov
or
push
adc
xchg
ret
lods
jl
sub
outsl
xor
cmp
out
inc
xor
and
pusha
xlat
inc
mov
icebp
cmp
adc
ficompl
std
div
fisubs
leave
adc
mov
in
or
popf
fstps
mov
sub
xlat
in
mov
sbb
add
lcall
xor
imul
xchg
push
pop
imul
fs
adc
nop
xor
into
and
mov
mov
iret
in
push
inc
aad
dec
push
ja
pop
ja
jmp
xchg
out
sbb
sbb
add
xchg
adc
loop
cmp
lret
sti
pop
or
adc
mov
lock
mov
in
inc
lock
out
sbb
popf
fnstsw
hlt
pop
mov
mov
dec
enter
adc
js
mov
dec
rorb
mov
into
adc
sbb
inc
fstl
xchg
loop
jns
movsb
and
imul
mulb
and
and
and
inc
jno
adc
inc
xor
jae
testb
pop
mov
lcall
mov
nop
addb
jns
std
sbb
lcall
es
outsl
insb
pusha
push
adc
inc
jns
aad
leave
push
push
jmp
insb
data16
cmp
dec
call
shll
movsl
mov
inc
jbe
shl
jp
seto
adc
into
inc
add
add
aaa
and
sti
ficompl
push
adc
mulb
xchg
inc
mov
es
dec
xor
jnp
xor
arpl
dec
shrb
pop
jno
mov
mov
rcr
scas
inc
daa
das
mov
cmpsb
test
lods
loop
xor
pop
ds
lcall
jle
pop
push
les
sub
in
and
idivl
xchg
out
or
scas
and
scas
loope
andb
mov
push
inc
aaa
sahf
insb
pop
or
popa
movsb
push
jns
lods
mov
push
pop
push
add
xor
es
inc
repz
movl
inc
ds
push
addl
mov
jecxz
cmp
push
lock
scas
xchg
loope
jp
dec
or
int
imul
sahf
xchg
pop
adc
fs
adc
leave
jmp
aad
and
pop
rcrb
sbb
or
outsb
lods
xor
xchg
jl
xor
lret
mov
mov
mov
test
sar
icebp
bound
jb
mov
sbb
cmc
fnstcw
faddl
les
add
mov
dec
out
inc
lahf
push
js
pop
subl
repnz
push
mov
bound
xor
cmc
jns,pt
or
aad
push
cmp
lods
add
mov
cmpsl
jle
jnp
dec
clc
jg
adc
mov
ljmp
inc
subb
lcall
xlat
icebp
insl
sub
leave
cmp
xchg
int3
dec
movsl
adc
jge
fimuls
ljmp
lret
jmp
add
mov
sub
js
sbbl
inc
scas
aam
adc
scas
xor
or
sbb
mov
xor
or
sbb
imul
int
xchg
ljmp
pop
jne
andl
sti
cmp
stos
fistpl
or
jbe
mov
dec
cmp
xchg
add
xchg
es
subb
popf
ja
jo
insl
xchg
xor
push
or
and
inc
rcr
push
xor
iret
fcmovu
outsb
mov
out
movsb
push
test
xlat
sub
imul
push
repz
mov
jb
dec
xchg
fadd
mov
je
lcall
jbe
loope
or
mov
std
ljmp
xor
sbb
inc
or
push
std
adc
rolb
xchg
cmp
js
bound
cmp
into
adc
and
mov
sbb
mov
cli
cmp
sub
cmp
pop
icebp
mov
add
enter
mov
push
mov
xlat
arpl
mov
in
aam
and
push
xchg
dec
xlat
insl
and
movsb
xlat
mov
gs
call
xor
mov
cmp
pop
sbbl
jmp
cli
xor
es
test
mov
in
mov
mov
outsl
loop
pop
call
mov
sbb
das
repnz
insb
and
xchg
lret
dec
push
dec
jle
pusha
push
xor
stos
jle
arpl
int
xor
pusha
xchg
in
pusha
lret
arpl
push
js
enter
shll
jo
mov
arpl
gs
cmp
cli
and
xchg
mov
ja
inc
push
ss
or
add
cs
stos
dec
fcmovne
mov
push
xchg
xchg
cmp
adc
ficoml
cmp
movsl
and
popf
cmp
call
dec
mov
xor
cltd
pop
add
in
cmp
inc
repz
das
dec
mov
sub
shlb
add
jno
mov
out
mov
scas
jnp
and
pop
movb
adc
fstpt
mov
push
xor
push
add
dec
sbb
mov
mov
iret
push
shlb
call
pop
into
lret
pop
iret
imul
mov
lcall
add
scas
insl
test
test
xor
jmp
negl
push
sbb
push
clc
xchg
arpl
push
call
push
aas
jg
into
leave
test
mov
fwait
sbb
insb
dec
aaa
or
stc
cli
adc
or
iret
outsl
aaa
popa
adc
iret
pop
iret
sbb
pminub
fsubr
fistpll
xchg
ja
mov
sbb
leave
std
popa
je
leave
dec
inc
or
sub
jge
jb
ljmp
addb
pop
fmuls
or
mov
push
fistpll
dec
fwait
or
js
sbb
std
test
test
dec
mov
pop
out
xchg
adc
popf
popa
mov
push
ja
push
or
rorl
add
xchg
out
mov
lret
lret
scas
mov
adc
fbld
push
ret
pop
xor
push
pop
and
ffree
push
fsts
fimuls
popf
mov
inc
pop
les
push
test
ficompl
decb
bound
sahf
jmp
sbb
xor
cld
xlat
xor
xchg
mov
inc
jge
gs
dec
loope
leave
dec
mov
cmpsl
into
sub
mov
mov
insl
dec
and
mov
iret
mov
outsb
dec
or
sub
cmpsb
mov
xchg
add
cmp
and
push
mov
pop
push
jecxz
loopne
push
in
sbb
roll
mov
ja
mov
xor
stc
cmp
push
or
rolb
pop
gs
add
push
add
dec
pop
lahf
jmp
hlt
mov
in
xor
sbb
mov
push
adc
icebp
cmpsb
or
je
aad
dec
cmovle
sub
xor
out
sti
dec
inc
cmpsl
popf
loop
adc
pop
jl
and
hlt
jp
xlat
stos
lcall
mov
sti
movsb
cmpsl
and
fucom
loop
cwtl
fcoms
sbb
cwtl
dec
jbe
std
mov
jne
push
or
insl
mov
cmc
outsl
push
clc
les
dec
jbe
rcrl
lea
loop
fwait
aad
xor
adc
add
and
mov
mov
mov
fisubl
or
mov
insl
leave
xor
jns
cmpl
adc
and
mov
out
enter
shr
inc
test
push
fcmovnu
movsb
jmp
test
xchg
dec
lea
xor
push
jmp
loop
enter
pop
xchg
add
lock
loope
mov
sbb
insb
and
fstcw
cmp
push
push
rorl
dec
sbb
or
cmp
dec
daa
add
cmc
iret
cld
pop
mov
mov
out
jle
xor
ss
mov
mov
jno
add
cmpsb
cmpsb
test
mov
push
pop
cmpsb
mov
xchg
int
push
insb
mov
idivb
sub
dec
mov
push
into
ja
in
jg
lcall
pop
in
ret
cltd
stos
fsubr
mov
das
or
cmpsb
sub
idivb
inc
push
sti
loope
testl
cltd
fmull
in
popf
loope
aad
and
jecxz
in
xchg
dec
adc
jno
outsb
ror
or
sarl
sub
mov
xor
sahf
out
pavgw
or
lcall
clc
pushf
mov
mov
cmp
sti
mov
sbb
push
mov
in
xchg
pminsw
sub
pop
cmpsl
nop
sbbl
jge
lahf
cmp
sahf
movsl
xor
push
dec
xchg
push
or
in
add
std
nop
add
sub
xchg
push
xchg
pop
ficomps
repnz
mov
loop
dec
xchg
mov
roll
cmp
add
iret
aas
dec
mov
cld
adcl
mov
add
jbe
fxch
cltd
cld
jbe
aaa
push
inc
inc
outsb
mov
ljmp
shl
and
idivb
iret
iret
loope
fst
push
ret
js
gs
mov
cld
dec
adc
dec
pop
lea
loop
lods
xor
hlt
ljmp
mov
lahf
data16
orb
rcl
mov
dec
jl
fldl
es
scas
aas
pop
fcmovbe
mov
test
repz
orl
aad
xchg
adc
cmp
mov
in
jle
pop
jo
sub
push
arpl
lods
ds
xchg
cld
mov
mov
in
or
dec
or
push
jge
mov
add
ss
out
xchg
lea
add
sbb
dec
mov
pop
jge
pop
fs
dec
popf
inc
push
test
mov
mov
jecxz
out
xor
mov
inc
xor
test
fs
fistps
lret
and
repz
push
pusha
dec
test
insb
cmp
pop
hlt
lods
mov
dec
mov
dec
loope
cs
ja
outsl
jecxz
xor
mov
pop
push
data16
rorl
leave
je
cli
fistpll
ds
les
lahf
adc
lea
sub
adc
push
lods
push
cmpsl
xchg
sub
sub
add
les
pop
fistps
outsb
ljmp
test
cmp
pusha
rorl
lds
or
lods
loopne
imul
xorb
sbb
inc
fistl
mov
xchg
xchg
or
dec
fstps
loope
mov
and
ds
sbb
mov
xchg
aam
enter
das
sar
decl
lcall
xchg
ficomps
mov
loop
xor
into
aad
loopne
imul
add
pop
and
sahf
mov
fucomi
adc
dec
sahf
dec
int
sub
loope
outsb
pusha
movntps
in
jmp
ret
fidivl
lock
jb
ss
push
dec
mov
cwtl
cmpsl
nop
aam
movsl
adc
mov
and
jecxz
out
imul
add
mov
sub
in
dec
push
cmc
fimuls
test
mov
dec
sbb
imul
shrl
lods
add
or
dec
jle
jbe
movsb
xchg
mov
sub
outsb
sub
jmp
lods
je
push
add
clc
add
xchg
sbb
loop
popa
rcl
and
repz
ds
jg
call
sbb
pushw
cmp
inc
and
xor
aam
fildll
out
pop
cmp
add
xor
popa
sub
test
rolb
stos
and
addb
mov
mov
sub
inc
pop
xchg
jae
gs
call
push
pop
cmp
and
out
cmp
pushf
push
mov
pop
fwait
xchg
push
pop
cmpsl
xlat
movsb
adc
push
cmp
mov
pop
mov
fsubs
in
or
xor
jecxz,pt
mov
dec
xchg
cmp
mov
sbb
cwtl
stc
dec
mov
movsl
outsb
lret
mov
xchg
mov
ficompl
xchg
sub
cmp
mulb
or
jnp
scas
mov
sub
xchg
jg
scas
lock
es
xor
adc
aaa
lods
inc
stos
ds
cmpsb
nop
insb
mov
dec
pop
je
xor
mov
mov
inc
add
aas
mov
sarl
je
movsb
lea
sub
rcrl
lea
into
xchg
stos
push
mov
sbb
sbb
test
pushf
jns
nop
push
js
mov
add
sti
std
xlat
ja
push
inc
xchg
xor
loope
sub
sbb
scas
stc
arpl
daa
add
loop
add
lods
xor
negb
rorb
fildll
cmp
sub
fbld
sub
cmpsb
popa
mov
xchg
mov
jmp
movsl
or
fstpt
movsl
aad
popf
subb
mov
nop
rorl
inc
add
leave
mov
loop
js
mov
pop
mov
jle
pop
jns
push
xor
push
mov
adc
mov
arpl
xchg
out
add
daa
mov
mov
cwtl
mov
xchg
mov
pop
das
mov
aam
mov
imul
mov
pushf
jp
push
pop
add
lock
lret
inc
lock
pop
mov
out
xor
inc
jmp
or
xchg
jg
xor
mov
dec
lods
sbb
pop
sub
add
sub
out
shll
or
pop
fidivrs
test
test
pop
jecxz
dec
xor
aam
mov
lret
sbb
sub
cltd
xchg
or
sarb
outsl
and
fisttpl
or
pop
push
dec
lods
loope
jo
clc
xchg
mov
lcall
gs
jp
iret
lods
out
cld
xchg
out
adc
int
and
bnd
or
fwait
arpl
jmp
ja
pop
pop
dec
sbb
dec
mull
popf
sbb
sub
jmp
or
mov
int3
sub
xchg
sbb
addb
jp
shlb
cmp
mov
das
je
div
lcall
into
dec
pop
imul
cli
xchg
fcoml
hlt
sbb
push
sbb
sbb
cs
inc
push
dec
aad
xchg
call
mov
xor
leave
push
or
cmp
mov
mov
subl
outsb
jge
addr16
ficoml
push
inc
negb
dec
add
aad
cmc
cmp
repnz
cmp
imul
add
test
popf
xchg
cs
in
fiadds
jg
xor
mov
or
or
sub
daa
mov
mov
icebp
or
adc
add
dec
pop
ret
nop
cli
fs
cwtl
fildl
sbb
pop
imul
mov
mov
test
cmpsl
inc
xchg
cmp
repnz
sbb
or
addr16
jp
roll
ljmp
dec
or
xchg
aam
jae
aad
push
movsl
scas
popf
xchg
dec
inc
lea
aas
arpl
rorb
sub
popa
xchg
lods
fs
bound
pop
jmp
inc
jecxz
pop
aaa
dec
out
popa
rcrb
xor
fcmovu
fwait
in
int3
lods
push
int3
js
mov
jle
xchg
rcll
outsl
sub
jle
adc
insl
out
lcall
in
mov
in
hlt
mov
shl
and
jns
sbb
and
pop
mov
test
ja
xchg
inc
std
mov
in
test
fidivrl
and
and
xor
cvtpi2ps
xchg
addb
mov
es
pusha
sbb
xchg
pushf
or
test
aaa
lret
in
sti
dec
push
popa
push
icebp
neg
stc
adc
lret
fiadds
out
xor
dec
imul
push
ds
outsl
leave
xor
popf
xchg
adc
push
aas
repnz
mov
push
loope
and
push
call
push
jge
fldenv
jecxz
fistps
add
repnz
sbb
mov
lahf
dec
out
fs
ljmp
jg
pop
in
ja
and
bound
imul
outsb
cmpb
pop
shlb
dec
mov
les
pop
or
hlt
aas
in
pop
test
bound
pop
jp
daa
pop
clc
leave
mov
mov
out
or
sti
jmp
ret
pop
outsb
mov
mov
ja
jmp
xor
ret
ret
jo
or
jno
fdivl
jbe
pop
mov
sbb
push
or
fnop
push
insb
ret
pusha
clc
dec
lock
xchg
lea
xchg
repz
leave
adc
dec
rolb
lods
testb
lcall
popf
sbb
cmpsl
adc
mov
mov
or
cli
ljmp
adc
push
dec
scas
outsb
pop
sub
dec
lds
movsb
sbb
dec
adc
adc
dec
xchg
test
sub
cmp
test
mov
clc
into
arpl
fs
or
fcoms
addr16
pusha
mov
sarb
icebp
int
mov
pop
leave
add
rcr
sahf
test
jmp
sarb
call
add
jo
dec
arpl
mov
xor
cs
sub
jp
movsb
push
test
or
jnp
nop
dec
dec
cmpsl
pop
das
xor
inc
mov
in
je
dec
test
sub
outsl
inc
pop
push
adc
sub
loop
jmp
arpl
repz
push
or
cmc
xor
outsl
mov
push
sbb
push
sti
mov
sahf
xor
mov
fwait
sub
mov
cmp
pop
xlat
mov
ret
sub
fnstsw
sub
adc
out
xor
loope
shl
test
test
jg
jecxz
loop
push
push
stos
pop
adc
adc
in
movsl
xor
xchg
inc
sbb
or
mov
fsubrs
ja
shl
adc
nop
jle
pop
test
mov
mov
jnp
inc
jns
pop
jnp
xchg
loope
jo
add
push
cltd
decb
adc
or
mov
shrl
pop
push
push
xchg
inc
test
jle
shll
jno
orb
pushf
ja
cmp
stos
or
adc
jo
pop
sub
daa
xchg
adcb
or
rcrb
aad
rcrb
mov
push
nop
inc
gs
dec
stc
pop
enter
out
cmp
push
dec
es
mov
inc
xchg
aam
adc
movsb
leave
rorb
xchg
fxch
dec
and
sbb
and
jp
in
loopne
pop
cmpsb
mov
xor
sub
mov
in
std
in
cwtl
std
in
in
xchg
jns
or
ret
mov
outsl
cltd
push
xor
and
sub
in
shrl
fidivs
lods
dec
inc
aad
sbb
nop
call
inc
xor
add
xor
adc
in
loop
push
mov
dec
ds
jb
jb
mov
dec
pop
call
pusha
lea
mov
out
jbe
or
aam
xor
jl
mov
xchg
push
int
lret
rcrl
cmp
cmp
mov
lock
sahf
popl
mov
sbb
sti
mov
cmc
movsb
mov
mov
cmp
fcomip
sub
sti
mov
xchg
sti
andl
mov
xchg
mov
mov
xor
adcb
es
imul
jno
ja
pop
movsl
insb
fidivs
lock
icebp
repz
cmpsl
xor
add
push
js
push
or
stos
gs
loope
dec
mov
sub
pop
stos
fwait
xchg
mov
jp
cmp
jge
and
pop
nop
int
mov
pop
xchg
pop
ficomps
xor
mov
arpl
cmpsl
adc
lret
sbb
aas
inc
jno
or
sub
add
xor
push
xchg
cmp
test
hlt
push
stos
xchg
jle
mov
notl
inc
and
or
push
inc
mov
xchg
cmp
pushf
test
andl
lods
mov
xchg
pusha
ffreep
daa
popf
les
sbb
movsb
mov
ret
xchg
loop
cmpb
mov
mov
pcmpeqw
push
idivb
dec
lahf
scas
sub
mov
mov
imul
es
data16
jae
jne
lock
sbb
or
push
push
adc
lahf
add
rorl
test
jnp
inc
arpl
xor
sbb
pop
outsl
addl
cs
push
aam
jge
pop
fistl
push
mov
jle
mov
adc
lcall
pop
xchg
in
lcall
push
cmp
dec
cmc
sbb
int3
ljmp
inc
dec
mov
psllq
pop
mov
loope
or
inc
rol
das
out
jecxz
jnp
enter
je
sub
adc
insl
mov
xor
push
inc
hlt
sahf
idiv
or
pop
mov
lock
and
xchg
adc
xchg
lods
insb
mov
mov
sahf
mov
push
or
xor
mov
push
mov
xchg
sbb
or
roll
out
mov
xchg
in
rolb
loope
sub
adc
out
or
scas
adc
dec
ja
std
mov
shlb
lahf
adc
xchg
cwtl
xorl
rorl
hlt
mov
call
ffreep
mov
fists
sub
int3
or
inc
push
pop
jge
fs
mov
or
add
gs
or
out
bound
scas
lret
sub
mov
movsb
pop
mov
add
pop
gs
loopne
in
int
pop
add
mov
lods
inc
mov
and
es
mov
mov
mov
nop
mov
mov
sbb
push
inc
jbe
stos
mov
mov
out
hlt
adc
mov
icebp
inc
sub
sub
sbb
cwtl
jl
pop
or
cmp
int
pop
xchg
push
xchg
cmp
push
mov
cltd
ja
and
add
xor
in
jle
lods
sbb
xor
and
mov
cwtl
jnp
out
sarl
sbb
test
pop
mov
es
addr16
lods
fwait
add
les
xchg
cmp
xchg
jmp
mov
cmp
insl
dec
cwtl
push
sbb
push
or
cwtl
mov
xor
shrl
into
pop
mov
sub
pop
add
jno
fidivrs
push
mov
pop
stos
or
movsb
mov
add
je
or
test
mov
add
stc
call
stos
xchg
inc
sahf
lret
mov
adc
dec
dec
es
sub
adc
inc
cld
push
sbb
push
mov
jae
cmp
and
mov
lret
pop
stc
xchg
mov
pop
and
bswap
xor
inc
loope
shr
insl
cmp
or
loop
bound
outsl
ja
ljmp
les
mov
cmpsl
mov
pushf
xor
dec
or
ja
cli
pop
jl
jmp
pushf
pop
lods
sbb
sbb
icebp
mov
mov
jecxz
fnstenv
enter
sub
test
xor
mov
sahf
xchg
ss
psubq
jb
mov
incl
icebp
push
mov
ja
sti
clts
pop
lock
fucomp
adc
lcall
hlt
sbb
mov
jo
fadd
insb
ljmp
stos
fcomp
scas
pop
jno
sarb
movsl
and
cltd
push
or
stos
ljmp
inc
adc
imul
add
push
push
shll
jns
push
in
pop
aaa
push
insl
es
dec
pop
or
pop
mov
ds
lds
push
imul
and
push
loopne
faddl
dec
cmpxchg
pop
cmc
lock
pop
stos
push
out
and
imul
add
jb
sub
dec
arpl
adc
call
loop
test
loop
mov
inc
xor
jno
xchg
dec
faddl
inc
roll
fmull
out
aad
pop
fdivrs
dec
faddp
aaa
mov
sbb
hlt
add
adc
sbb
mull
add
shl
icebp
pop
jge
imull
lods
adc
jecxz
push
sahf
imul
loop
test
cmpsl
inc
jno
inc
push
pop
push
xchg
or
push
sbb
push
xlat
pop
sbb
movb
xchg
pushf
jp
test
cmp
aad
andl
in
lods
iret
sti
mov
adc
ret
jle
fisubrs
fadd
cwtl
jbe
xor
sti
cmp
xchg
mov
push
iret
sarb
aam
inc
mov
pop
inc
pop
xchg
jno
sub
add
roll
mov
in
cltd
inc
jl
mov
std
mov
sbb
fnstcw
test
aam
inc
or
bound
mov
loop
addb
jnp
das
push
gs
sbb
sbb
cmc
test
out
test
hlt
cld
sarl
sahf
inc
in
clc
out
jbe
cwtl
ret
sbb
ret
adc
ss
lds
repnz
insl
jecxz
xor
pop
push
pop
sub
xchg
data16
mov
aam
imul
pop
cmc
mov
cltd
pop
xor
xlat
std
sub
jbe
or
mov
adc
sbb
out
mov
mov
fidivs
test
inc
stos
add
adc
mov
xor
jae
test
cld
push
repz
jl
push
add
mov
xchg
pop
lea
inc
inc
testb
xlat
ljmp
pushw
xor
loop
mov
xchg
xchg
in
or
cmp
shll
fprem1
roll
fisubrl
lock
xor
call
jb
jo
mov
and
shrb
arpl
add
stos
xor
inc
insb
mov
jae
cmp
cmc
or
inc
pop
and
out
add
sub
adc
test
addb
fcomi
loopne
adc
cmc
sub
jecxz
int3
enter
jmp
mov
shrb
in
aas
mov
dec
cmpsl
dec
xchg
pop
das
push
mov
repz
cli
mov
dec
jp
pop
xchg
clc
cmpsl
mov
pop
cmp
sbb
cmp
mov
and
xchg
lret
decl
adc
adc
inc
push
pop
mov
notl
sub
sub
and
dec
std
and
into
insb
inc
jmp
call
mov
fsubl
addr16
pop
mov
inc
imul
cwtl
sti
xchg
mov
cwtl
push
movsb
les
lret
mov
inc
mov
inc
inc
test
leave
lahf
add
es
mov
icebp
call
out
jg
addr16
faddp
jb
test
mov
mov
stos
ja
arpl
clc
sahf
in
in
les
sub
aas
gs
icebp
test
pusha
test
fdivs
dec
pop
inc
xchg
testb
stos
adc
cs
lds
or
movsl
cltd
test
pop
popa
iret
push
inc
out
add
and
arpl
pop
inc
jo
mov
rol
push
flds
shlb
dec
fdivrs
cs
mov
ret
push
adc
lock
ret
stos
or
fiadds
sub
or
adc
gs
xchg
mov
adc
pushf
icebp
inc
xchg
out
xchg
in
cmp
sbb
mov
mov
hlt
push
sbb
cmpsl
nop
xchg
xlat
negb
je
sbb
and
mov
sbb
ljmp
hlt
dec
rorb
jmp
add
jb
iret
dec
xchg
mov
imul
jl
inc
inc
in
xor
scas
in
jo
xchg
and
movsl
adc
push
add
das
jae
inc
out
xchg
aam
mov
push
dec
lret
jne
push
mov
dec
sbb
jecxz
andb
hlt
je
xor
jbe
pop
je
push
es
xchg
enter
push
aad
pop
sbb
decb
into
xchg
xlat
fstl
and
orb
xchg
fxch
mov
dec
push
rcrl
jne
in
mov
pop
ffreep
add
add
out
clc
push
ficoms
aad
xchg
cmp
adc
inc
jb
aam
push
pop
and
xlat
add
cmp
fisubrs
xor
cmp
fbld
stos
xchg
add
and
jge
and
nop
test
inc
add
cs
push
xchg
mov
outsl
and
cwtl
into
xchg
and
cld
add
ss
daa
aas
add
and
mov
loopne
mov
pmaddwd
dec
test
insl
dec
lret
cmp
push
add
and
lock
push
icebp
adc
inc
gs
xchg
pop
mov
add
cmpsl
jle
fstpt
jg
fisttps
or
jno
into
cmpsb
ret
fmuls
hlt
xchg
sbb
pop
fcompl
clc
ret
jno
mov
add
mov
mov
jle
les
daa
lds
loopne
sub
adc
aam
fdiv
cmp
inc
test
dec
sub
les
pop
std
repnz
test
pushl
daa
dec
insb
mov
ja
adc
cmpb
sub
ss
out
push
xchg
mov
inc
mov
xor
rsm
xor
in
rclb
test
aas
add
cli
neg
jne
add
int
push
aad
cltd
xor
pop
push
fdivrs
sbb
and
subl
ficompl
shrb
pop
inc
push
imul
mov
fistps
xchg
dec
lahf
sahf
sub
pushf
dec
add
scas
mov
xchg
dec
mov
lea
or
int
add
add
in
push
xor
mov
xlat
cmp
mov
cwtl
popf
imul
sub
je
ss
xor
xchg
jle
lahf
jne
in
shll
cld
sub
jb
cmp
jge
mov
and
cmp
roll
jmp
stos
pushl
push
cmpsb
scas
std
rcrl
xchg
test
fisubrs
lods
into
rolb
pop
clc
add
std
lods
cmpsl
dec
jnp
cmp
push
fsubrs
adcb
std
out
fs
pop
push
mov
sub
sbbl
imul
sahf
sbb
adc
pop
lds
idivb
sub
scas
fldcw
cwtl
fs
xor
inc
jle
addr16
pop
and
jns
push
jle
cmp
test
pop
cmp
cmp
cmpl
nop
test
xchg
test
mov
mov
adc
repz
fnstsw
adc
and
jbe
and
push
jp
notb
xor
int3
lds
lea
int3
cmp
enter
loop
insl
in
ret
int3
jne
push
fmull
push
lock
xchg
sbb
mov
addl
fxch
sub
inc
sbb
push
push
je
add
leave
scas
out
ret
hlt
mov
mov
int3
and
js
fs
out
sbb
xchg
rorb
mov
jb
repz
lock
or
rclb
fcoms
dec
movsb
outsb
sbb
xchg
pop
pop
inc
sbb
jo
decl
and
int
or
aaa
rcrb
mov
cmp
in
ret
outsb
pop
mov
cltd
cld
jnp
lds
add
adc
or
pusha
inc
jnp
add
andb
push
addr16
pop
jbe
shr
outsl
mov
adc
and
cmp
out
repnz
scas
icebp
jnp
lea
daa
shll
push
jns
push
push
xor
pop
xorl
decl
cltd
jns
addl
push
stc
and
stos
mov
mov
xor
inc
lock
repnz
push
imul
mov
das
nop
and
shl
mov
call
jle
mov
loop
jge
mov
jmp
outsl
lock
pop
imul
cmp
jle
or
adc
add
mov
and
or
aam
mov
xchg
fstpt
outsl
outsb
dec
movsl
repz
push
popa
loope
cs
cs
mov
aam
xor
or
mov
mov
in
movsl
sti
dec
cmp
jbe
sbb
push
and
fs
fdivrl
jge
pop
adc
xor
push
jge
xchg
mov
mov
pusha
inc
push
aaa
ret
pushf
rcrb
pop
cmpb
ucomiss
xchg
pop
xor
test
mov
mov
jecxz
dec
cmpsl
jmp
in
stos
ljmp
insb
mov
xchg
hlt
test
push
cltd
jge
pop
xchg
or
test
jo
add
idivl
aam
mov
lods
je
fnstenv
and
arpl
inc
mov
test
push
repnz
pop
outsb
outsl
xchg
shl
mov
lcall
ret
ret
jns
xchg
pop
xchg
add
inc
jo
in
imul
jp
dec
lret
cmc
out
mov
dec
adc
adc
push
data16
divb
scas
push
gs
or
jnp
adc
pusha
ret
jp
pop
sbb
inc
out
movsl
xchg
xor
push
fbstp
cmpsb
push
mov
pusha
int3
out
xor
push
in
nopl
push
in
pop
lret
hlt
ljmp
icebp
inc
data16
adc
mov
mov
sbb
cld
addr16
adc
fisttps
andb
lcall
mulb
mov
sub
dec
daa
push
fcomip
imul
dec
push
pop
lahf
loopne
pushf
lahf
addr16
pushf
call
fildl
popl
xchg
dec
mov
loop
mov
hlt
ror
add
ja
dec
popf
or
out
dec
mov
pop
cmpsl
dec
mov
or
outsl
pushf
dec
shrl
aam
push
test
loop
add
push
mov
dec
xor
xlat
fidivs
or
std
xchg
stc
pushf
sbbl
test
sbbb
out
push
push
test
lahf
xor
sbb
xor
jno
pop
aam
outsb
push
adc
push
not
cwtl
mov
and
aaa
int3
jae
xchg
jno
push
idivl
cmp
dec
loopne
pop
pop
sbb
stos
mov
fucom
rolb
jae
es
movsb
push
jo
bound
mov
fst
or
add
ljmp
es
sbb
and
popf
pop
clc
sub
jne
insb
sbb
mul
hlt
lret
loope
es
data16
inc
dec
jbe
sbb
lret
inc
xor
arpl
cmc
pop
sub
das
xor
popf
std
jnp,pt
push
imul
fsts
jg
loopne
mov
mov
jge
mov
pop
sti
pusha
out
adcb
xor
cmp
js
icebp
sbb
cmp
dec
out
xchg
mov
jg
xchg
mov
pop
imul
jp
push
adc
sti
sbb
orb
in
scas
mov
jl
or
hlt
adc
pop
lret
movsb
ret
pop
xchg
push
push
outsl
div
loope
cld
aad
sbb
push
pmuludq
lds
jg
inc
jno
inc
or
mov
cwtl
jb
mov
add
ficompl
inc
inc
add
rorl
mov
insb
test
dec
adc
std
cwtl
hlt
repz
ljmp
pminub
and
lret
cltd
movsb
negl
js
rcrb
mov
and
inc
and
or
or
out
dec
push
pop
push
or
jae
xrelease
pushf
mov
pop
sbb
ja
xor
repnz
xchg
push
test
daa
xor
mov
sub
addr16
inc
sub
add
push
jb
stos
and
mov
gs
repnz
inc
push
lahf
xchg
fnstsw
xchg
sahf
sub
push
sbb
cwtl
mov
sbb
pop
test
push
arpl
cwtl
sti
push
add
outsb
jmp
fisttpl
lea
push
push
fimull
out
mov
push
imul
stc
addr16
xchg
cmpsl
pop
out
inc
pop
loopne
mov
mov
repz
in
inc
outsl
add
and
adc
xor
leave
fmull
push
jmp
rol
mov
mov
dec
dec
jp
lea
mov
cmp
xor
xchg
dec
or
pop
adc
loop
cmpsb
xor
cmc
xchg
jle
cwtl
lahf
int
xchg
push
mov
sub
jmp
ret
add
cld
mov
js
cwtl
lea
xor
mov
mov
add
push
cmp
push
adc
add
ljmp
jne
pop
cmp
jmp
pop
ss
fwait
loop
xlat
mov
push
xchg
and
out
insl
jmp
flds
ljmp
ss
xchg
popa
mov
jmp
jp
sbb
aaa
push
xchg
pop
inc
or
lea
repz
cwtl
cmp
mov
sub
outsl
sub
xor
mov
insl
jo
jo
mov
cmc
push
mov
aas
imul
leave
cltd
subl
mov
es
push
push
dec
sbb
push
inc
dec
les
insb
push
shll
dec
out
fwait
js,pn
and
mov
shrl
cmp
or
jl
mov
fcmovbe
lods
xor
adc
mov
xor
fidivrs
repz
push
push
or
aad
loop
insb
mov
enter
pop
dec
dec
add
mov
sbb
lods
arpl
cmpsb
pop
and
pusha
adc
enter
pusha
movsl
pop
lahf
outsb
lock
icebp
les
int3
jo
jge
idiv
movsb
repz
test
push
inc
mov
mov
js
and
adc
fs
xchg
outsb
xchg
out
in
and
je
mov
fisttpl
push
add
lods
scas
data16
add
inc
out
push
xor
mov
mov
mov
test
or
adc
rcr
pushl
mov
test
sub
ret
push
nop
sarb
mov
dec
xchg
add
jge
xor
cltd
mov
push
mov
pop
cmp
js
sbb
adc
stc
sbb
bound
stos
mov
xlat
lret
or
sbb
loope
leave
outsb
ljmp
push
add
pop
in
or
sub
lahf
jecxz
add
fs
out
inc
jae
shrb
push
call
dec
add
pop
sbb
mov
push
dec
sbb
sub
pop
push
or
ds
pop
xor
mov
shll
out
sbb
aaa
sub
xchg
and
or
inc
pop
jmp
test
in
adc
xor
scas
lahf
add
sub
adc
shlb
sahf
pop
fdivs
push
jmp
repz
sub
cli
jge
xor
or
iret
sub
movsl
ds
push
jnp
push
pusha
std
scas
mov
je
cwtl
xchg
ret
dec
rcll
inc
pop
into
idivl
icebp
push
std
push
bound
xor
call
push
add
push
xchg
lret
jmp
inc
fldt
aad
sub
or
lods
and
in
loopne
jne
out
lea
xchg
xor
in
pop
jecxz
mov
push
dec
divb
pusha
pop
xchg
mov
in
push
push
cmc
pop
fnsave
out
stos
lret
mov
std
pop
inc
fcompl
sbb
or
jmp
jle
in
out
push
shll
mov
std
mov
jne
jbe
push
xor
das
dec
push
and
incb
pop
sub
mov
mov
jae
pop
mov
sbb
into
fsubp
mov
mov
addr16
mov
sbb
scas
mulb
fwait
ds
out
mov
imul
push
clc
nop
jmp
popf
aas
mov
cmp
lock
sbb
mov
fmuls
push
jecxz
add
xchg
nop
rclb
inc
jo
lahf
std
aaa
adc
xchg
pop
mov
xor
add
cmp
push
add
ds
aam
jle
push
clc
stos
es
jns
xchg
negb
mov
stc
pop
push
lret
mov
jmp
in
and
out
inc
test
push
pop
pusha
sub
push
sbb
dec
cltd
insl
and
imul
lock
movsb
push
mov
test
mov
lcall
mov
scas
xchg
ret
std
mov
out
mov
add
and
pop
rol
push
fwait
movsl
jg
inc
movb
iret
aaa
pop
lods
rcrb
pop
repz
aaa
dec
testl
xchg
fisubl
cmc
cmc
jo
rorl
jne
aaa
dec
mov
jmp
pop
imulb
pop
mov
outsb
adc
stos
jo
mov
adc
stos
aas
inc
popa
ss
pop
mov
xor
mov
push
imulb
imulb
sub
inc
stos
loopne
pop
jp
cmp
mov
push
aaa
cmpsb
fcmove
add
pop
gs
rcrl
add
or
cltd
jmp
cmpsb
push
sbb
shlb
cwtl
ljmp
in
fsubl
sub
and
xchg
push
loope
shlb
sub
push
mov
mov
pop
mov
call
fdiv
jl
lahf
pusha
repz
out
jb
fdivrp
mov
out
jle
outsb
in
lods
loop
adc
scas
lahf
xchg
pop
aad
sbb
pop
mov
in
push
fldpi
mov
ds
lea
lcall
sbb
adc
imul
and
daa
cmp
xor
aas
add
ljmp
sbb
scas
mov
jge
fstl
andb
mov
mov
stos
add
cmpsl
in
dec
mov
jmp
ss
and
rclb
mov
add
mov
xchg
fwait
out
inc
in
imul
loop
shrb
cmp
jnp
test
sub
sbb
fs
dec
enter
add
fsubrs
mov
and
mov
stos
xchg
test
enter
xor
jne
cmp
mov
cmp
sahf
test
je
mov
rcl
sti
pop
in
jg
bound
ja
inc
imull
int3
xor
dec
or
in
sub
js
scas
jmp
mov
popf
sarb
pop
jecxz
pop
mov
adc
or
movsb
out
jecxz
fimull
sbb
ror
insb
test
and
das
shlb
mov
shlb
ficoml
ss
addr16
inc
psllq
lods
sarl
lret
dec
sub
insl
fisttpl
add
fwait
outsb
subb
jb
out
pushf
push
inc
sub
lea
arpl
imul
jecxz
mov
mov
jmp
adc
pop
mov
into
cmpsl
call
dec
lods
out
ret
and
jle
mov
movb
cltd
lea
xor
mov
push
out
mov
jae
jge
ja
dec
ret
out
shl
dec
sub
sub
push
sub
mov
fildl
mov
push
hlt
sub
out
push
mov
into
cmp
mov
sti
mov
sub
push
and
push
mov
lods
les
fcmovnu
imul
int
clc
js
sub
fiadds
orl
mov
cmc
dec
bound
push
jb
enter
rclb
mov
add
dec
out
or
mov
ret
lret
xor
sub
pop
ljmp
xor
fadds
rcr
fcoml
loop
mov
push
xor
insl
addr16
pop
js
sbb
loopne
xor
movsl
movsl
cmp
or
sbb
fidivrs
push
fidivs
jl
imul
push
es
adc
inc
imul
in
sahf
insb
jg
pushf
mov
cmp
and
sahf
pop
mov
cmp
add
arpl
cltd
stos
push
cmp
call
ficoml
mov
cmp
mov
leave
xchg
pop
sbb
jne
push
stc
sub
dec
and
ja
aaa
and
test
in
repnz
or
mov
dec
xorb
push
or
jmp
sub
dec
sub
sub
rclb
push
mov
paddsw
lock
das
sub
icebp
xor
push
lahf
enter
iret
mov
lock
push
pop
cli
in
sub
out
dec
adc
inc
lret
inc
imull
in
mov
test
leave
jnp
mull
mov
lcall
loopne
ds
cwtl
xchg
dec
cmp
jl
aam
xchg
cmpsb
in
sub
or
mov
inc
add
inc
sbb
ffree
out
gs
ljmp
add
and
call
mov
sub
mov
shlb
pop
sbb
clc
push
aaa
pushl
mov
ss
lods
push
loop
test
cmpsl
mov
aad
add
or
dec
popf
lods
jg
add
rorl
movsl
or
ret
addr16
push
push
call
jo
ret
stc
bound
imull
jae
imul
pshufw
mov
sbb
mov
push
xor
das
cmpsb
sbb
push
pop
inc
bound
into
mov
pminub
ficoms
jns
pop
clc
imul
dec
fmull
adc
scas
cwtl
ficompl
sub
out
dec
sub
mov
mov
sbb
mov
xchg
cld
movsb
iret
jp
lret
in
dec
insl
dec
or
cmpsb
or
mov
push
daa
dec
repz
add
xor
shr
scas
outsl
inc
pop
mov
int
jb
sub
mov
cmp
xor
bound
pop
incb
fnstsw
push
mov
add
jae
inc
push
push
pop
lahf
pusha
test
imul
mov
das
cmc
dec
flds
out
or
lock
sar
push
dec
in
xor
xchg
xchg
es
repz
jnp
jb
mov
jne
lea
jmp
sbb
repz
pop
inc
ret
pushf
adc
rorb
pop
add
rcr
and
addb
and
mov
test
mov
mov
ljmp
test
movsl
xor
lds
sub
loop
cmpsl
or
xchg
add
xchg
outsb
and
inc
movsl
xchg
cwtl
imul
ds
cwtl
addr16
xchg
out
adc
sub
test
in
stc
mov
adc
sub
cmp
aad
clc
fisttps
lcall
add
fidivrl
out
shl
ds
adc
push
stos
jle
jno
out
or
ljmp
jle
dec
pop
mov
int3
nop
into
pop
mov
or
dec
fsts
push
jnp
pop
xchg
lea
jg
into
jbe
pop
pop
and
insb
xchg
outsl
loop
inc
stos
xor
mov
jecxz
push
mov
inc
lcall
pop
mulb
std
mov
dec
sbb
imul
aaa
pop
push
lock
mov
sub
sti
pop
cmpsb
bound
stos
xor
lods
or
mov
push
mov
cmp
into
inc
addr16
or
jmp
ret
test
sub
mov
jle
adc
mov
sub
int
shrl
mov
cmp
shll
sbb
push
rcr
jbe
sub
push
mov
xor
sti
mov
sub
arpl
rep
scas
outsl
stos
sbb
pusha
nop
push
mov
popa
mov
pusha
sub
push
loope
scas
xchg
add
pop
mov
pop
mov
mov
sub
or
inc
inc
adc
pop
adc
test
dec
mov
jg
and
rcll
in
mov
rcrb
push
lods
dec
out
adc
xor
mov
push
aas
aas
pusha
fdivs
imul
sub
pop
xchg
add
cs
xor
mov
xchg
inc
movsl
pop
mov
loop
loopne
bound
jmp
dec
out
shrb
push
cmp
adc
mov
cli
loopne
sti
notb
fildll
insl
iret
mov
dec
sub
mov
cmp
mov
das
aam
fsubl
adc
cmp
lahf
les
rcrb
test
jno
inc
xchg
jl
dec
loopne
lret
repnz
sbb
mov
iret
sbb
mov
test
cmc
ficomps
sbb
or
sub
cwtl
push
xor
jl
lods
or
cmp
xor
stos
mov
jmp
js
mov
rol
xchg
add
ljmp
mov
xchg
inc
stc
push
xor
popa
cmp
and
das
cli
push
push
adc
scas
addr16
jg
popf
jae
vpaddb
mov
push
shl
xlat
pop
xchg
jns
xchg
sar
mov
cmpsl
fnstsw
inc
fdivrl
enter
mov
or
into
ja
mov
cmp
repz
mov
and
xchg
lcall
mov
loopne
cltd
lcall
pop
or
push
push
cld
xlat
xor
xor
jbe
in
cld
rcl
ret
adc
mov
nop
sbb
cmpb
subb
loopne
lahf
les
test
mov
adc
shl
jnp
or
push
or
push
jae
shr
mov
xor
pop
ficoms
movsb
call
cmpsb
hlt
lahf
cmp
inc
ljmp
ds
xor
pushf
cli
sub
inc
xor
stc
pop
in
cmp
out
mov
test
jo
mov
fbld
xchg
es
lods
or
fistl
pop
cmp
ja
movsb
repnz
nop
pop
in
jecxz
jecxz
inc
xor
fisubs
cmp
fdivrl
cmp
movl
jnp
sbb
cmp
push
cltd
xor
jne
sbb
repnz
sbb
mov
incb
push
mov
sub
loop
out
sbb
andb
sub
add
cmpsb
cmpsl
push
xlat
stos
call
aad
notb
jp
lret
cmp
loop
ljmp
dec
xchg
insb
ja
fcomi
inc
cmpb
iret
inc
orl
call
jbe
jle
aaa
insl
enter
fcoms
lock
jne
adc
shl
loopne
rcrl
ds
jbe
or
sti
aad
test
mov
or
cmpsb
xchg
sub
arpl
lahf
sarb
cmp
adc
cs
xchg
fidivs
subb
sub
lcall
adc
outsl
push
iret
mov
push
or
dec
repz
out
mov
aas
pusha
out
sarl
cli
mov
jo
sub
ds
xchg
xchg
xchg
in
pop
push
call
sbb
push
sar
adc
jge
pop
lea
cltd
sub
xor
xchg
insl
sahf
dec
rclb
push
popa
out
jo
ljmp
sub
mov
jg
jl
dec
int3
lods
mulb
inc
iret
sbb
movsl
mov
cmc
xchg
add
mov
cmp
fucomp
sbb
jg
mov
pop
in
push
ret
pop
daa
adc
add
arpl
cmp
les
inc
mov
lcall
lahf
dec
add
icebp
xor
dec
xor
adc
and
cmp
shrb
lcall
xor
shrl
fcomp
ja
rorl
jno
lahf
push
int
pushf
inc
sbb
test
shlb
or
sbb
testb
push
ficomps
test
mov
jne
stos
jo
jle
jp
jns
mov
mov
dec
xchg
push
mov
mov
pop
dec
add
xchg
mov
icebp
rorl
aam
xchg
cmpsb
mov
jno
enter
inc
decl
pop
sub
lock
fistl
dec
lret
sub
loope
pop
jecxz
scas
mov
mov
hlt
repnz
sbb
aaa
pmovmskb
jge
push
faddl
test
dec
push
shr
stos
mov
cltd
dec
pop
cltd
xchg
cmp
es
outsb
insb
cltd
movsb
push
xor
repnz
testl
xor
fs
xchg
dec
jmp
clc
subb
mov
ljmp
sti
pop
jecxz
lahf
in
ss
jo
into
scas
adc
push
outsl
pop
add
jno
in
or
iret
je
in
push
hlt
nop
insb
jb
add
mov
mov
mov
loopne
mov
mov
mov
rol
clc
push
mov
loope
push
bound
jg
sub
dec
adc
pushf
cli
jno
xchg
and
jecxz
fwait
mov
mov
sub
push
fisttps
pop
mov
in
cmp
hlt
push
mov
lret
out
cmp
pop
cmp
sub
lock
mov
stc
xchg
lock
mov
cmpsl
jae
mov
cld
out
or
inc
fmull
loopne
push
xchg
test
push
pop
xchg
inc
shrl
bnd
scas
add
les
push
mov
iret
mov
in
jmp
mov
adc
aam
fbld
dec
mov
loope
dec
insl
repnz
popl
dec
leave
adc
lods
jle
and
push
jnp
or
cmp
adc
cmp
push
lahf
and
sbb
cmp
sub
movsl
gs
push
pop
xor
sub
pop
stos
mov
and
jae
ret
xchg
xchg
add
popf
or
and
dec
jne
out
out
test
shrb
jge
jbe
out
xchg
or
pop
pusha
test
dec
inc
jae
jo
jno
dec
inc
jb
and
es
sbb
jb
mov
clc
cwtl
push
mov
sbb
bound
imul
cmp
test
sti
sbb
fidivs
jo
and
xlat
inc
mov
mov
adc
mov
out
jbe
pop
lahf
xchg
movsl
cltd
add
add
cmp
int
inc
pop
add
inc
nop
stc
sbbl
clc
repnz
inc
fucomp
jnp
or
inc
xchg
cmpsl
imulb
or
mov
stos
pmaxub
sti
lcall
mov
hlt
add
cmp
sbb
rcr
and
shll
pop
pop
and
mov
push
xor
stos
jp
lock
divl
cmc
add
addr16
sbb
pushf
int3
aam
xlat
mov
sbb
mov
adcl
add
xchg
lahf
mov
adc
and
push
cmp
xchg
cmp
rcrb
ret
mov
push
add
xor
repnz
jl
pop
adc
imul
dec
cltd
jl
aas
gs
popf
rorl
lds
outsb
mov
in
xchg
fstp
movsl
mov
enter
sub
sbb
outsb
add
xor
sbb
pop
jne
add
mov
pop
cmpb
sbb
call
mov
jno
shll
mov
repnz
adc
mov
jo
jo
pop
in
psrld
pushf
aaa
movb
ljmp
pushf
outsl
clc
jecxz
loope
pusha
mov
insb
push
jmp
cmp
hlt
cmp
xchg
xlat
add
int
lods
and
fcoms
sar
push
aad
sahf
jne
addb
js,pt
ljmp
dec
xchg
insl
jae
fstpt
fwait
push
push
jnp
cmp
cs
in
enter
inc
imull
gs
inc
dec
mov
bound
push
push
std
not
pop
sub
and
negb
sub
mov
xchg
push
dec
push
repnz
cs
aaa
mov
mov
int3
push
push
lcall
mov
pop
jecxz
cld
adc
fimuls
sbb
xchg
lea
lods
cwtl
push
push
xlat
mov
dec
jnp
mov
cmpsb
push
pusha
sub
cmpsb
scas
lcall
test
adc
bnd
xor
aaa
stos
push
cmpsl
jno
in
sub
fwait
jb
cmp
push
sbb
popa
js
imul
xor
sti
jns
sbb
adc
in
hlt
mov
lahf
pop
dec
inc
xor
fimull
cmp
in
jecxz
and
inc
ljmp
pusha
inc
mov
shlb
ret
cwtl
and
call
xor
push
pop
loopne
int
cwtl
jnp
cmp
lahf
add
mov
pushf
lock
scas
aaa
inc
inc
ja
mov
pop
lret
jbe
and
ja
sub
and
cmp
dec
sub
mov
mov
mov
sub
les
xor
dec
int3
les
enter
mov
add
cli
fsubrs
ds
cmc
mov
xor
inc
add
das
mov
cmpsb
fdivp
sbb
cmp
mov
popl
sub
and
pop
ret
pop
sub
stc
lret
sbb
iret
repz
insl
insb
pop
mov
cmc
jbe
lea
pop
ret
daa
sarl
idivl
sbb
inc
push
inc
inc
in
fdivr
ja
ret
xlat
outsl
sub
mov
cmp
mov
imul
push
mov
push
adc
cmpl
mov
and
imul
add
jbe
mov
out
sub
push
loope
fldt
fidivrs
add
adc
ss
mov
das
lahf
dec
addl
pop
sbb
sahf
jno
movsl
lret
jo
cli
es
orl
cli
outsl
jns
adc
in
push
aam
sbb
movsl
std
push
fwait
test
dec
ret
into
outsl
sub
fwait
stc
push
lea
xchg
xchg
imul
pop
sbb
push
sub
jbe
mov
mov
dec
daa
je
inc
enter
xchg
les
inc
xchg
test
pop
mov
dec
insl
xchg
in
jmp
cmp
and
mov
push
enter
adc
jg
aam
in
dec
push
mov
ficomps
sub
mov
jmp
ret
sbb
aam
pop
mov
sbb
inc
push
loope
mov
add
jge
ret
lds
pop
in
jge
pop
out
dec
fwait
sbb
push
enter
pop
dec
sbb
inc
inc
mov
dec
js
jl
and
mov
or
test
in
dec
outsb
rcrl
sbb
das
mov
test
add
addl
mov
sbb
xchg
mov
jne
test
loopne
or
push
in
adc
mov
lods
stos
out
pop
and
xchg
xor
popa
cmp
push
jecxz
popf
scas
add
ss
pop
shrl
jns
out
jp
push
push
lea
rolb
loopne
fimuls
lret
test
pop
lock
gs
insb
daa
mov
imulb
push
dec
movsl
lds
sahf
mov
sbb
icebp
loopne
fdivrl
aad
bound
mov
cmp
sar
mov
or
das
fnstcw
arpl
jae
mov
mov
xchg
inc
gs
pop
xorb
aam
push
aam
pop
jo
leave
pop
flds
push
popf
inc
dec
jae
jnp
lods
out
in
inc
cmp
or
ljmp
test
stc
xchg
or
pop
cmp
inc
xchg
icebp
mov
fwait
mov
push
mov
xor
xchg
les
rcrl
loope
cltd
mov
and
cmpsl
cmp
jno
pop
fs
data16
das
das
cs
fcoms
mov
adcb
sbbl
in
jge
jmp
push
imul
cmpsl
lods
or
inc
sbb
lret
xor
andb
mov
test
and
je
push
cmp
xor
popa
jmp
ja
xchg
out
fists
push
rol
int
adc
ja
inc
mov
jmp
sbb
mov
mov
repnz
rclb
or
lea
movsb
negb
movsl
or
mov
cli
rorb
or
xchg
les
fstp
test
jno
xlat
std
mov
loope
lock
stos
mov
loop
hlt
inc
cmpsl
subb
jp
out
add
sub
fadds
aad
sbbl
pop
push
decl
fisubrs
jge
xchg
mov
aaa
jb
inc
mov
jmp
jmp
out
sub
aas
out
mov
je
mov
sarl
inc
xchg
mov
dec
push
or
pushf
movsb
xchg
lea
fwait
dec
inc
mov
repz
in
jg
xor
outsl
add
or
xchg
adc
stos
out
inc
lret
clc
mov
sbb
adc
test
jo
movsl
jl
int3
xor
in
jns
mov
mov
sarl
sub
dec
xlat
aaa
ret
mull
push
sub
push
dec
adc
out
inc
xor
mov
int3
sub
repnz
xchg
inc
lods
xor
aam
push
xchg
sbb
adcl
push
cmp
js
xor
aam
aas
gs
outsl
imul
cs
sub
xor
cmpsl
inc
fbstp
bound
jbe
imul
lea
mov
fs
add
push
call
fmull
repz
adc
icebp
pop
or
jae
and
xor
shl
fldt
cmp
nop
arpl
inc
test
push
out
fs
sbb
lds
inc
mov
hlt
add
out
rolb
lcall
xor
xor
mov
nop
mov
dec
push
pushf
pop
icebp
pop
fnstcw
filds
jl
xor
fwait
add
mov
aaa
xor
fisubrl
mov
push
xor
xor
lock
andb
arpl
leave
mov
fninit
jne
adc
add
movntps
pop
sahf
adc
adc
scas
mov
push
dec
das
adc
mov
push
lds
test
mov
mov
lds
xchg
arpl
rcrl
inc
int3
lea
sub
push
subl
sub
rcrl
dec
roll
pop
dec
aam
jnp
pop
insl
mov
push
in
cli
push
xchg
insb
jmp
fnsave
jbe
out
ret
nop
loopne
or
idivl
mov
inc
pop
test
imul
mov
cmp
xor
pop
push
mov
ffree
rclb
enter
and
lock
push
sbb
call
adc
rcll
xor
push
dec
add
push
int
sti
in
push
xchg
pop
mov
add
popa
push
sbb
adc
sub
cmpsb
aam
xor
and
mov
js
mov
pop
or
sbb
cmpsl
es
icebp
xor
fs
adc
in
sbbb
push
pusha
movsb
xchg
push
cmp
in
adc
gs
subb
push
hlt
mov
into
scas
test
fildll
jne
aas
das
mov
sahf
jmp
adc
sub
subl
pop
push
mov
mov
repz
dec
data16
and
in
gs
xchg
adc
jl
pop
dec
sbb
sahf
into
cli
mov
or
pop
or
jne
cwtl
xchg
cmpsb
or
pop
bound
push
add
movsl
pop
stos
daa
push
jne
les
sbbl
inc
push
adc
or
popf
test
rclb
dec
pop
pop
cmp
or
sub
movsb
aaa
aas
ljmp
pop
in
lds
push
outsl
adcb
fbstp
xor
iret
hlt
lods
mov
push
aaa
pop
js
mov
stos
loope
lods
shl
sbb
fists
cmc
addr16
pop
and
gs
cmc
jae
xor
enter
jg
test
ret
xchg
mov
daa
ss
sub
pop
das
rcrl
mov
notb
cwtl
call
or
in
cli
push
add
das
cmp
fwait
addb
jmp
xor
mov
jg
out
or
sti
ja
rorl
inc
adc
or
and
ljmp
ds
cmp
sub
idivl
iret
imul
cltd
mov
mov
rolb
mov
stc
xchg
sub
xchg
mov
iret
sbb
iret
insl
mov
push
fistl
cmp
sub
push
adc
inc
test
btc
stc
loope
fmuls
jno
shrb
decb
sub
pop
in
pop
mov
lds
add
movsb
cmc
cmp
pop
lds
push
pop
and
pusha
test
pusha
xchg
popf
pushw
mov
cmp
ljmp
dec
add
and
insl
dec
insb
xchg
mov
push
xchg
xor
jp
cmc
cmp
repz
mov
adc
out
mov
and
mov
or
add
sub
out
sbb
arpl
mov
scas
push
xor
cli
daa
sub
nop
add
sar
mov
adc
inc
xchg
jne
fs
mov
pop
popf
lahf
pushf
js
sbb
cmp
mov
dec
mov
jno
xor
or
pusha
cmp
dec
incb
xor
jmp
push
shll
test
lods
sahf
fnsave
xor
out
shlb
out
call
mov
sbb
xlat
lret
cmpsb
jl
das
cmpsl
xor
mov
xor
cmp
add
lahf
cmpsb
dec
cmc
shrb
dec
ret
stos
pushf
ja
inc
cmc
lds
pop
cli
pop
push
hlt
cld
dec
int
pop
adc
xor
lahf
cmp
adc
inc
push
inc
push
mov
int
les
ljmp
shlb
ja
dec
fwait
pop
jb
or
movntq
daa
mov
cmp
icebp
dec
cmpsb
stc
popa
ror
jno
or
mov
jg
mov
sub
cmpsl
cld
aaa
test
dec
or
test
cmpsl
int3
loop
dec
push
add
or
push
pmuludq
pop
add
neg
cwtl
shrl
pop
mov
ds
dec
insb
jo
mov
sti
jne
out
mov
adc
sub
dec
js
in
mov
jecxz
rorb
push
xchg
jp
fs
rol
mov
sub
cmp
sub
stos
xchg
xor
mov
jns
icebp
sarb
dec
dec
mov
add
int3
repnz
xchg
sbb
xchg
cmp
sti
in
pop
push
data16
mov
mov
mov
stc
mov
push
mov
loope
push
jo
popa
lcall
add
push
mov
mov
or
xor
sti
fs
lret
jb
loop
sbb
jmp
sbb
sub
jnp
xchg
inc
roll
leave
sub
or
mov
mov
add
dec
adcb
pop
cli
shll
jp
nop
and
mov
sbb
xchg
push
and
inc
mov
fildll
mov
ret
mov
andb
shrb
rorl
xor
mov
xorb
inc
mov
sahf
and
lcall
das
jo
mov
or
or
stos
in
mov
nop
cmp
sbb
sbb
mov
push
jne
test
add
xchg
cmpsb
sub
sub
enter
and
arpl
adc
inc
mov
ret
xchg
insb
dec
cmpsl
pop
jns
mov
ud0
std
fstpt
in
aad
andl
rcr
pop
or
sub
mov
rorb
mov
ret
push
xor
dec
je
mov
jle
and
mov
bound
jge
jne
movsl
mov
inc
mov
xor
mov
dec
lds
add
mov
pop
mov
aad
sbb
adc
divl
stos
xor
xor
in
lret
lret
js
pop
mov
fxch
or
loope
or
xor
nop
adc
outsb
sbb
gs
mov
push
hlt
int3
add
xchg
mov
jnp
cld
xchg
lret
mov
mov
sub
inc
ret
sarb
sti
lods
out
xchg
shl
outsb
xor
or
sbb
shrb
inc
call
aas
insb
adc
aas
inc
lret
fldt
jo
nop
fisttps
adc
and
sbbb
mov
cwtl
cmp
adc
jae
loop
xchg
mov
jp
bound
je
xchg
hlt
loopne
fdivrs
imul
cmc
xchg
inc
dec
cmp
movsl
cmc
in
pushf
cmp
jle
xchg
fcomps
test
outsb
sbb
inc
cmp
aad
sbbb
adc
xor
xor
rorl
mov
ljmpw
jns
cmpsl
incl
in
jp
rolb
push
xchg
pop
dec
aam
vcvtdq2ps
ljmp
xchg
cwtl
enter
jo
push
clc
fwait
adc
mov
sub
popa
mov
into
popa
aam
add
push
scas
mov
imul
loopne
leave
inc
fistpl
adc
loopne
shr
cmp
add
pop
push
mov
mov
mov
fistpll
popf
sbb
insb
xor
test
iret
inc
nop
xorb
cmp
adc
adc
ljmp
mov
cmp
lock
fucomp
mov
aas
imulb
loope
lods
push
push
pop
fidivrs
xor
daa
pop
sahf
xor
in
sub
xor
push
sub
loop
out
insb
fistps
cmp
push
and
sub
xlat
incw
mov
push
sub
data16
mov
cmpsl
movsb
cmp
popf
out
xor
sbb
leave
popa
xor
subl
repnz
shl
sti
or
inc
jo
jae
out
ss
mov
jecxz
ljmp
dec
xchg
mov
xor
das
popf
adc
stc
out
pop
outsb
std
and
les
sub
imul
mov
test
mov
push
inc
lret
stos
and
dec
push
out
inc
adcb
mov
jge
cmp
mov
mov
xlat
xor
lds
out
fdiv
gs
dec
aaa
mov
in
add
inc
test
std
fimuls
xor
hlt
fnstcw
push
scas
imul
xchg
fisttps
test
lds
rorl
je
sahf
popf
mov
and
mov
lock
push
sub
ss
pop
xchg
aad
pcmpeqd
cmpsl
pop
aad
test
mov
leave
insb
adc
mov
lods
lds
cwtl
dec
pop
fdivr
mull
mov
add
fcomip
lock
sbb
cmp
add
je
cmp
outsb
dec
mov
shld
mov
mov
daa
cli
jmp
jne
sub
in
ret
xor
jmp
movsb
shrl
cmpsl
rcrl
push
pop
enter
sti
pushf
nop
inc
push
push
push
sub
js
aas
jae
in
mov
mov
xchg
imul
xchg
into
pop
inc
and
mov
xor
shl
stos
in
out
xor
mov
push
inc
mov
cmpb
xor
mov
popa
xchg
push
out
sti
inc
jecxz
sbb
sub
xchg
mov
movnti
and
fs
ret
pop
call
cltd
mov
into
sub
mov
xchg
scas
dec
cs
push
pop
fdiv
ja
shl
mov
stos
dec
fsubr
out
xor
jl
mov
nop
cmp
ljmp
push
leave
ja
rclb
test
push
les
mov
adc
in
cmp
lods
and
and
hlt
cmp
xchg
mov
jnp
jmp
decl
mov
daa
loop
loopne
popf
push
jne
enter
pop
add
pop
sbb
xlat
mov
and
jns
push
push
frstor
jae
stc
adc
xor
dec
push
push
sarb
fcmovne
in
or
scas
dec
and
enter
push
sbb
into
cwtl
je
daa
pop
jnp
out
imul
dec
and
xchg
push
cmpsb
jno
or
lods
and
adc
in
pop
jle
sahf
rclb
pop
dec
sbbl
mov
iret
pop
cmpsl
into
jp
divb
jg
dec
test
rorl
rorl
lret
dec
adc
pop
cmp
stos
fucom
out
lret
fildl
inc
jne
pop
fs
fisttpl
jge
ret
clc
or
repz
push
inc
shll
mov
imul
adc
xchg
fsubr
popf
popf
loope
xchg
addr16
arpl
lcall
loope
cmpsl
adc
mov
lret
hlt
clc
stos
pop
and
cmp
adc
mov
test
dec
testb
cmp
mov
cs
mov
cmp
sti
xchg
inc
jnp
sub
mov
cmp
scas
pop
sti
dec
or
cmp
iret
jl
lret
in
pop
adc
nop
cwtl
mov
fcmove
out
ret
js
cmp
lcall
pushf
dec
fcomps
mov
popa
dec
jne
jmp
dec
gs
push
cmp
jmp
fsubrs
mov
xchg
sub
jecxz
jns
xchg
es
fs
sub
adc
or
pop
popa
nop
dec
pop
nop
pop
cli
cmp
pop
add
push
push
scas
sbb
clc
movsb
mov
mov
mov
arpl
jbe
cld
mov
xchg
lahf
repnz
fmull
lds
scas
mov
in
int
les
xchg
and
test
subb
mov
mov
mov
xor
adc
add
mov
add
mov
lahf
adc
sub
int3
push
popf
shll
mov
mov
sbb
lock
ljmp
dec
repz
xor
xor
out
sbb
popf
popf
adc
scas
mov
fimull
rcll
xchg
fwait
and
out
repnz
pop
cld
sbb
sub
push
mov
xor
mov
repz
addr16
dec
ss
mov
add
fnsave
insb
cli
sub
and
sub
fldcw
dec
mov
sahf
cmp
jns
lods
cmpb
sub
dec
mov
mov
loop
mov
or
bound
cmp
add
das
in
test
daa
cmp
inc
pop
inc
push
xorb
in
push
ds
push
cmpsl
imul
repz
or
add
dec
or
movsl
sti
and
stos
adc
mov
adc
lcall
loopne
push
mov
loope
je
jl
add
add
mov
loope
mov
sti
loop
jge
mov
rorb
and
sti
cld
push
sarb
mov
or
iret
and
mov
lahf
cmc
lcall
outsl
movsl
or
mov
xor
mov
add
loop
lret
lds
les
pop
scas
xor
cmp
add
or
or
xchg
jge
leave
add
sub
dec
cltd
mov
mov
cmp
pop
jbe
in
gs
push
push
cwtl
out
jns
sub
inc
cmp
xor
sti
jbe
and
xchg
sbb
push
and
lret
lock
imull
data16
mov
ljmp
fcmovu
test
sbb
adc
sub
ss
cmpsl
mov
dec
je
lods
into
push
inc
daa
mov
cmp
cmpsl
call
xor
jle
cwtl
cld
mov
pop
cs
js
test
jmp
sti
inc
mov
mov
popa
xor
sbb
test
mov
cmp
stos
jecxz
movsl
scas
ud2
pop
cli
or
in
out
xor
and
cmp
sahf
inc
mov
movsl
lahf
dec
cmp
xrelease
out
or
addr16
push
test
cmpsl
xor
jbe
popa
fisttpl
inc
xor
cmpsb
notb
loopne,pt
les
sub
pop
or
mov
jbe
xorl
mov
jbe
ret
push
insb
ret
adc
out
push
sub
in
pusha
mov
push
jne
xchg
sbbb
out
mov
adc
jl
fists
leave
stos
stos
shlb
mov
xchg
repnz
and
mov
jmp
cmp
mov
jecxz
fisubs
fistpl
pushf
push
aas
test
and
add
inc
or
pop
dec
dec
popa
ds
or
mov
pop
pop
inc
sub
les
sub
mov
cmpsl
cmpsl
mov
xchg
and
or
inc
pop
jne
lcall
mov
pop
jne
in
or
and
test
je
cmp
jl
cli
int3
divb
leave
rcrl
bound
or
das
pop
out
mov
out
dec
ss
jne
mov
sbb
xlat
or
loope
mov
nop
push
shrl
mov
xchg
mov
pop
in
pop
push
xchg
scas
mov
rorb
scas
inc
sbb
xchg
nop
mov
jne
dec
rclb
and
xchg
cwtl
sbb
sbb
and
test
mov
lods
cwtl
jmp
xchg
test
sbb
fidivrs
imul
cmp
sbb
or
lea
jg
adc
repz
push
in
push
cli
mov
xchg
ret
fldt
jecxz
xor
xor
ja
js
push
adc
stos
mov
xlat
push
mov
sti
jl
dec
stos
jnp
mov
mov
push
or
out
xor
pop
fcomp
adc
pop
push
jge
mov
iret
cmpsb
jae
in
pop
inc
jge
sahf
faddl
xor
mov
adc
mov
sub
push
pushf
mov
sbb
push
repz
daa
mov
js
or
lods
adc
pop
dec
out
imul
test
sti
pop
mov
mov
mov
in
dec
dec
outsl
mov
inc
ljmp
push
and
fidivl
xchg
sbb
test
testb
mov
andb
xchg
cs
les
mov
cs
mov
inc
lret
and
addb
mov
imul
or
mov
jb
add
inc
pop
jmp
test
jecxz
inc
mov
out
adc
lods
and
pop
lea
inc
hlt
les
outsb
out
pop
test
std
in
in
in
sbb
xchg
out
inc
jp
lcall
aam
sub
loopne
jle
xorb
mov
cmp
or
clc
and
fnstsw
aaa
pop
sbb
xchg
and
shrl
sahf
orl
sbb
or
or
pop
cltd
sub
inc
fucom
jnp
mov
mov
push
jmp
sbb
mov
int
fxch
ja
jb
in
dec
mov
int
mov
dec
clc
push
lds
sarb
insb
dec
cmc
leave
jns
repz
sbbl
add
addl
push
ljmp
add
inc
mov
mov
cmp
jge
inc
ret
icebp
dec
rcll
or
aaa
bnd
dec
pop
lahf
xlat
adc
daa
ss
int
xchg
sub
inc
inc
fadds
adc
rorl
add
xor
xchg
jmp
adc
inc
jae
pop
cmc
aas
lods
mov
movsb
js
cltd
xor
inc
outsl
inc
pop
sbb
fadds
dec
cmp
cld
mov
pop
out
test
insb
sahf
or
jecxz
pop
sub
decb
popa
sbb
jg
pop
addr16
paddusb
ja
sub
cmpsb
dec
hlt
sub
cmpsl
jl
pop
ret
addl
jle
std
sbb
shrb
cld
test
iret
jl
dec
push
inc
cltd
insl
sub
repnz
jg
subl
hlt
rolb
cmp
das
mov
out
mov
mov
or
mov
add
data16
or
insb
sti
jno
loope
adc
vmulps
mov
adc
mov
xorb
fs
push
insb
scas
xor
jge
lcall
fwait
push
mov
sub
xchg
outsl
sub
xor
push
cwtl
lahf
enter
jmp
icebp
xor
and
mov
lcall
loop
popa
repnz
pop
cmp
and
ss
test
sarb
inc
xchg
insl
mov
push
jle
in
dec
mov
cld
sahf
push
push
mov
loopne
lods
xchg
sti
dec
mov
add
stc
imul
pop
outsl
out
loope
push
push
jb
pop
xor
dec
push
cmp
lahf
pop
add
fs
jl
jl
stos
sbbl
ficomps
inc
dec
sti
mov
nop
sbb
pop
adc
lods
mov
cmp
cmp
mov
mov
sub
cmp
push
out
mov
imul
decl
mov
cmp
cmpsb
dec
xchg
jns
xlat
test
push
insl
dec
xor
pop
cwtl
sub
pop
mov
addr16
adc
jnp,pn
lea
xchg
dec
arpl
cmp
pop
cmp
pop
mov
addb
and
pop
xor
leave
ja
enter
or
imul
pop
inc
out
pop
push
nop
pushf
std
jle
or
fcoms
mov
ja
push
inc
add
aas
inc
inc
lods
push
xchg
xchg
fmuls
int3
push
adc
mov
jl
jle
cli
fcoml
es
in
pop
les
adc
aad
pop
fistps
xlat
cwtl
xchg
jns
cltd
lret
pmulhw
push
inc
adc
xchg
sti
ret
mov
shrl
xor
cmp
jae
das
stos
loopne
xchg
pop
repz
popf
push
push
sahf
xor
lods
fs
cmpsb
inc
call
xchg
or
sarl
cwtl
mov
push
hlt
inc
lcall
mov
call
pop
out
cwtl
arpl
cli
test
mov
mov
mov
push
jne
push
sbb
mov
mov
mov
lcall
insb
lcall
inc
out
mov
ljmp
jnp
or
int3
inc
mov
fmull
jg
lods
and
pslld
and
cmp
leave
push
inc
lods
ret
shl
mov
cmp
push
ficoms
sbb
push
sti
iret
mov
test
xor
daa
and
push
and
fnstsw
int3
push
ret
mov
add
rcl
add
bound
lcall
jmp
inc
dec
push
out
pop
nop
xor
mov
cwtl
icebp
pop
sbb
stc
lods
ja
repnz
pop
ret
repnz
addr16
xchg
aaa
jns
push
scas
lods
iret
xchg
or
leave
out
push
jge
fwait
sub
mov
int
xchg
xor
imul
mov
jmp
push
mov
xor
cmp
mov
dec
cmpsb
cmp
mov
jle
mov
xor
inc
mov
pop
jge
outsl
pushf
pop
adc
dec
mov
out
xlat
pop
movsl
sbbb
xorl
js
fidivs
jecxz
sarl
xchg
lahf
clc
add
test
cmc
inc
inc
cmpsl
pop
repnz
mov
enter
mov
in
fldl
cmp
movsl
cmp
jmp
mov
jae
xchg
mov
xchg
cmp
ja
test
mov
lods
and
mov
aas
mov
das
jo
stos
ja
lds
jecxz
jb
mov
mov
stc
dec
rcll
jns
sub
cmpsl
jmp
in
ret
inc
inc
ja
movsb
les
jmp
pushf
adc
ja
sbb
inc
push
add
mov
mov
daa
xor
jne
adc
push
add
adcb
cmpl
jbe
das
or
cmpsl
mov
cmp
push
and
scas
stos
movsb
idivl
jg
dec
mov
xor
xchg
arpl
fisubl
xchg
pop
and
cli
lahf
movsl
insl
int3
mov
movsb
cltd
pop
clc
data16
ret
jns
stos
cmp
jle
cmp
fbstp
cmpsb
and
pop
cli
pop
mov
push
nop
jne
outsl
mov
pop
pop
sti
lret
addl
sbb
fstpt
adc
mov
pop
popl
inc
loop
xchg
enter
mov
rolb
dec
cmp
leave
subb
fistps
xchg
addb
adc
flds
mov
add
sub
addr16
jecxz
and
jb
push
mov
out
lods
adc
movsl
mov
add
mov
cmpsl
add
lret
jo
push
push
andl
arpl
sub
push
xchg
mov
dec
fstpl
dec
test
push
add
sbb
push
test
xor
or
aad
lahf
imul
scas
js
jecxz
jecxz
imul
subb
fcmovnbe
mov
fwait
dec
sti
jg
xchg
daa
jno
pop
inc
div
adc
mov
je
daa
aaa
jns
icebp
mov
outsb
cmp
inc
mov
fcoml
pop
outsb
lock
sub
cmp
push
test
ret
inc
pop
dec
pmulhuw
mov
icebp
das
adc
add
fldenv
push
mov
cmpl
in
nop
adc
mov
mov
mov
outsl
cmp
push
adc
jbe
mov
lea
pop
addr16
push
mov
xor
out
sub
sub
cld
push
pop
cmc
xchg
push
push
adc
cltd
dec
std
jg
les
icebp
sbb
sub
push
outsb
mov
outsl
pusha
adc
out
shll
mov
pop
hlt
or
fcmovnu
mov
cmp
fiaddl
xor
mov
adc
pushf
push
or
lcall
je
es
shll
lcall
jmp
into
es
sbb
shll
mov
out
dec
sub
or
pop
add
cmc
sub
pop
jle
dec
dec
push
sub
ret
fisubl
hlt
cli
jg
inc
sub
pop
cmpsl
inc
into
sub
nop
add
movsl
pop
sub
cwtl
push
and
adc
mov
and
add
xchg
jge
mov
fxch
push
push
dec
or
xchg
mov
fsubl
hlt
fcmovu
push
and
cmp
mov
cld
fcomi
push
xor
mov
lods
daa
add
or
dec
addr16
push
xchg
mov
ljmp
shlb
test
int
add
xor
inc
stos
movsl
negl
mov
out
mov
sub
cmp
mov
leave
nop
lret
jo
stos
and
test
leave
sbb
adc
loopne
out
fidivrs
dec
fsubr
mov
xchg
sti
das
out
xchg
stc
ds
jae
and
sbb
add
stc
or
jl
or
ret
adc
mov
leave
push
ret
js
leave
pop
lahf
icebp
mov
pop
outsb
or
pop
sarl
xchg
jmp
out
sbb
mov
jnp
rorl
adc
loope
cmp
jae
das
out
movsb
jge
or
pop
dec
stc
adc
inc
mov
dec
insb
dec
sub
jp
mov
mov
mov
loopne
xorl
xchg
dec
pop
fwait
dec
inc
je
aas
rolb
push
sti
fildl
syscall
pop
imul
xchg
stos
push
sahf
and
imul
dec
sub
jnp
cs
push
ror
leave
test
xor
cmpsb
mov
sub
mov
sub
subb
repnz
mov
dec
xor
ret
mov
icebp
add
ja
pop
in
gs
xchg
js
rcl
inc
adc
enter
lret
lds
enter
mov
and
jo
sbb
shrl
repnz
insl
jne
fldt
push
cli
fisubl
sub
add
test
or
scas
shlb
fstp
cmp
daa
aas
clc
fs
int
into
pop
insl
inc
cmc
dec
add
xor
or
or
jne
nop
movsb
and
insl
lahf
or
jmp
sbb
cltd
je
push
andb
adc
jno
xchg
fidivl
fwait
jbe
lea
cmp
es
ret
xchg
and
mov
and
std
dec
adc
test
inc
andb
dec
cmc
mov
icebp
repz
imul
ja
mov
shrl
push
clc
loope
inc
xchg
inc
mov
or
test
or
pop
out
adc
lods
bound
shrl
mov
push
and
iret
stos
clc
push
mov
lods
mov
jle
mov
jnp
outsb
xor
add
add
leave
adc
inc
sbb
cmpb
jl
mov
sub
fs
cmp
xchg
dec
jno
add
pop
adc
lcall
mov
and
jno
enter
test
jns
mov
pop
inc
pop
rcrl
fprem1
loope
cmpsb
jmp
sub
idivb
lret
stos
test
xor
mov
jecxz
jae
mov
dec
mov
sahf
dec
notb
mov
jbe
lea
jno
sbb
and
inc
mov
bound
jno
sub
sbb
inc
scas
lock
adc
push
adcb
pop
out
roll
pop
lret
out
or
xchg
jge
inc
mov
cld
jge
int3
jbe
fwait
xor
pop
jno
push
icebp
or
ret
pop
add
inc
cmc
ficoml
int3
inc
ret
mov
leave
jne
insb
mov
mov
pop
mov
xchg
inc
or
into
in
xor
sbb
insb
popf
or
or
push
je
inc
sahf
rcl
mov
addb
in
in
xor
in
sub
popa
lcall
or
adc
pop
scas
sub
mov
push
popf
pusha
stos
mov
outsl
xor
rcrb
cld
mov
xor
ja
and
mov
insb
xchg
sbb
pop
repz
iret
xchg
and
leave
fucomp
fcoms
clc
mov
pop
inc
lret
out
mov
xchg
pop
sbb
sub
xor
mov
sbb
adcb
psllq
sbb
jbe
fnsave
add
dec
das
leave
mov
pop
scas
stc
and
flds
adc
outsb
cld
out
jg
jae,pn
daa
cmc
cmp
out
xlat
mov
dec
mov
fistl
dec
cmpsl
jno
push
fisubrl
lret
and
out
shrw
cmp
sarb
push
insl
dec
push
popa
ljmp
lock
scas
stc
jle
xor
jno
xor
sbb
xchg
cmp
out
bound
ret
test
push
push
aas
cmp
shl
fmuls
les
stos
dec
outsl
and
test
adc
inc
push
fmul
cmp
push
and
xchg
enter
mov
sub
sub
push
push
sbb
rcrl
cmpsl
xorl
adc
rorb
dec
and
ja
gs
dec
cmp
or
mov
xchg
mov
jbe
jmp
sub
pop
cmp
in
xchg
test
outsb
mov
cli
push
mov
ret
inc
iret
loop
sti
or
call
int
adc
loopne
fistps
enter
adc
pushf
inc
pop
ja
ret
shl
or
out
aad
lahf
xchg
stc
fstpl
xorl
lcall
cwtl
fsubrl
jae
addr16
cmp
in
pop
sub
shr
xchg
jecxz
ljmp
pop
jmp
hlt
test
int
sub
out
ljmp
pushl
out
repz
into
and
xchg
stos
test
ja
les
xchg
xchg
insl
rcr
push
imul
or
add
pop
mov
and
sbb
dec
std
fs
test
mov
push
mov
aaa
dec
in
aad
jne
jecxz
adc
xor
lret
or
ret
inc
jle
xchg
je
in
push
cmp
outsb
bnd
leave
aaa
test
push
xchg
dec
mov
xor
stos
popa
cs
pop
int
cmp
adc
imul
push
push
pop
int
push
mov
ja
arpl
dec
fimuls
insb
adc
push
insb
sub
dec
xor
cld
jnp
xor
jne
mov
pop
cmp
loope
dec
mov
adc
add
push
in
test
or
mov
mov
mov
inc
andb
mov
mov
insb
insb
loop
cltd
or
lods
insl
mov
adc
cmp
xor
pusha
dec
cmpsb
movsb
adc
xchg
outsl
ror
jne
mov
jb
insl
daa
and
fiaddl
gs
mov
jo
jl
jbe
jns
mov
lret
imul
leave
icebp
pop
jl
bound
repz
add
push
lds
mov
jge
insl
imul
xor
loope
sbb
xor
dec
mov
mov
and
mov
jbe
cld
dec
mov
and
cmpsl
aaa
cld
xchg
xchg
xchg
cmpb
js
xchg
dec
mov
shl
in
mov
mov
dec
scas
pusha
pop
and
inc
lods
mov
into
adc
jl
pusha
push
pushf
inc
jl
mov
fwait
cmp
sbb
dec
jp
push
xor
in
and
xlat
loop
bound
jg
push
stc
imul
fisubrl
fmull
dec
inc
cmc
mov
repz
fbstp
push
pop
hlt
cmp
push
push
sub
mov
ret
mov
movsl
lahf
inc
ljmp
dec
fwait
dec
xorb
push
movsl
mov
ficoml
insl
or
dec
xor
lds
fdivl
pop
and
pop
aas
jae
pop
mov
add
dec
loop
test
cmp
push
or
jle
mov
dec
mov
add
adc
out
aam
mov
faddl
lret
jecxz
xchg
adc
dec
in
push
jo
pop
movsl
jno
xchg
sahf
bound
or
pop
mov
cmc
pop
rcr
push
push
push
jae
inc
mov
fiaddl
sbb
mov
ficomps
rclb
adc
xchg
fcomip
xchg
popa
outsb
inc
xor
jae
icebp
pop
pushf
dec
sub
sbb
lds
push
pop
xor
dec
xor
es
jl
mov
scas
add
ja
sub
pop
mov
lods
or
hlt
push
inc
pop
scas
add
sbb
imul
cmovne
jne
aam
pop
stos
sbb
jns
lret
into
insb
outsb
into
mov
pop
ds
mov
mov
cmpsb
adc
enter
jmp
push
xchg
out
in
push
andb
andl
movsl
ss
movsb
and
jno
outsb
dec
push
fldt
dec
outsl
cmp
adc
addr16
cmp
sbb
sbb
pop
fisubrs
into
hlt
loope
mov
jae
les
push
aas
push
mov
jne
inc
jae
dec
mov
push
orb
movsl
push
out
mov
inc
lret
mov
test
jmp
shl
push
aad
movsb
mov
jmp
js
les
jns
lock
sbb
pop
test
mov
mov
lret
sub
or
pushf
mov
xchg
leave
and
push
stos
mov
dec
mov
out
pop
das
push
mov
out
fisttpl
call
jbe
addr16
pushf
jmp
sbb
adc
sti
aam
adc
clc
loope
mov
repnz
mov
sti
push
mov
inc
sbb
xchg
mov
fdivrl
cmpsl
adc
pop
xorb
cmc
push
lock
and
mov
arpl
jecxz
lods
imul
mov
iret
rcll
xchg
sbb
sub
cmp
mov
push
adcl
ret
mov
fisttpll
xor
jecxz
push
cmpsl
enter
fdivrs
cwtl
push
mov
ss
xchg
scas
sbb
loop
shlb
adc
add
mov
cmp
sub
cmp
cs
movsl
mov
or
aad
add
cmp
enter
jne
cmp
scas
sbbl
imul
lds
dec
cmc
outsl
mov
sahf
mov
rorl
xor
pop
arpl
and
jg
call
and
jl
mov
stc
push
stos
xlat
mov
fwait
clc
lcall
icebp
push
pop
xchg
or
sub
mov
pusha
add
cmpsb
ret
je
out
jl
mov
je
inc
mov
jmp
dec
fcomip
sbb
repz
shlb
mov
xor
cmp
xchg
imul
nop
nop
movsl
clc
shr
jg
out
pop
into
xchg
lret
push
pop
pop
add
pop
push
and
push
ret
xchg
in
mov
out
cld
mov
lods
outsl
loopne
sbbl
adc
sbb
lahf
mov
push
sub
or
in
xchg
popa
data16
push
cwtl
xor
imul
cmpsb
sbb
and
push
or
add
shr
out
imul
icebp
adc
push
sarl
lret
adc
addr16
and
std
xchg
orb
movsb
in
mov
int
xor
sbb
sbb
mov
xchg
push
mov
cmp
aaa
cmpsb
mov
xor
imul
into
scas
lcall
and
push
mov
mov
inc
sub
push
xchg
sahf
out
aam
adc
aas
divb
xchg
cmp
ret
mov
add
out
mov
jns
inc
sub
adc
fsubr
pop
bound
fisubs
add
data16
add
mov
sub
nop
push
mov
jg
and
lahf
jnp
jle
xchg
jne
stc
aas
jmp
insl
insb
test
or
out
jnp
mov
xchg
pop
cld
dec
or
sub
in
mov
mov
popf
std
push
fmulp
push
push
mov
mov
testl
das
fcompl
pop
adc
dec
jl
adc
in
movsb
add
and
xchg
jbe
cli
sbb
clc
je
xchg
movsb
jns
movsb
aaa
sbb
in
andl
imul
add
loopne
rcrl
clc
gs
test
imul
xchg
mov
mov
outsl
pop
int3
pop
cltd
lcall
in
inc
scas
add
dec
movsl
pop
aas
sub
ja
pop
xlat
out
cmp
push
dec
add
shll
mov
std
xor
je
jecxz
mov
jne
mov
mov
icebp
jge
xor
out
scas
dec
cmp
cmpsb
addr16
sbb
ja
xor
data16
jb
or
pop
jb
inc
xchg
cs
sbb
movzbl
jl
popa
daa
or
mov
call
lds
or
sti
and
repnz
push
rcll
pop
mov
mov
xchg
mov
js
pop
rolb
add
aad
jne
cmpsb
aam
mov
dec
add
add
decb
adc
lock
jne
addl
sbb
sbb
mov
xchg
lock
int
cld
icebp
rorl
or
sbb
sarb
mov
jbe
cmpsb
fistps
cmp
lods
imulb
inc
negb
mov
stos
inc
test
inc
shl
test
cltd
pop
ja
lret
int3
flds
outsl
pusha
int
jmp
and
cmc
sub
addr16
repnz
mov
cltd
jb
inc
inc
movsb
ret
xorb
sbb
nop
dec
jle
xchg
movsb
push
movsb
loop
cmp
sbb
jae
add
sbb
mov
subb
movsl
rorb
mov
sub
pop
cmp
out
cs
jnp
les
adc
cmp
and
jecxz
aaa
fs
stos
rcr
cmp
xor
sub
je
cs
fucomip
sub
add
movsl
daa
sub
movsl
xchg
std
movsl
lret
mov
adc
xchg
repnz
dec
addr16
mov
mov
jmp
aad
xchg
das
mov
in
push
mov
push
cmp
loop
sub
out
sar
rclb
es
loope
shll
fisttpl
push
jb
pop
xchg
sbb
or
or
push
fxch
add
iret
shlb
loop
das
pop
gs
sbb
mov
xor
aam
push
int3
jbe
fwait
jp
adc
inc
jae
sti
mov
sbbb
xor
rcrl
in
sbb
pop
and
push
ds
mov
mov
out
insl
adc
sub
in
xchg
fnstenv
fisubs
test
out
mov
dec
push
jecxz
outsl
mov
push
call
scas
incl
repnz
sub
pop
insb
cmp
imul
rorl
mov
popa
xor
stos
test
push
nop
orl
mov
arpl
lock
xchg
in
xlat
jp
mov
dec
xchg
jnp
pushf
arpl
mov
mov
mov
ret
das
sub
jg
adc
in
pop
mov
mov
rcrb
jecxz
les
jp
addb
push
leave
into
testl
or
bound
loope
push
sub
ds
cmc
orb
shll
inc
sti
sbb
push
jo
jb
jecxz
pop
push
jns
or
sbb
loop
popf
sti
xchg
push
ds
pop
xlat
pop
xchg
adcl
cltd
insl
pop
pop
icebp
mov
mov
or
lds
scas
push
jp
negb
and
outsl
inc
sub
or
xor
iret
mov
sahf
clc
pop
lock
adc
sbb
iret
sbb
mov
movsl
jecxz
enter
dec
or
xlat
insl
inc
int
fidivrs
outsb
push
mov
pusha
das
cmp
sti
lcall
je
imul
inc
arpl
imul
xchg
das
roll
mov
inc
sub
das
pop
stc
jbe
int3
or
add
jb
lods
popa
psrld
adc
and
fsubrl
int
cli
xchg
inc
jbe
pusha
mov
movaps
mov
and
adc
faddl
xchg
lret
and
pop
cmpb
xchg
fimuls
jae
sahf
rcr
aaa
adc
push
popa
mov
mov
dec
scas
fcoml
fs
jns
jno
cli
je
int
out
out
xor
test
push
jg
adc
inc
xorb
and
loop
cmpsb
jg
add
imul
jo
lods
or
mov
cmp
sub
cmc
inc
mov
loope
mov
mov
and
push
loop
dec
stc
push
push
iret
sub
push
rorl
pop
test
or
pop
push
mov
lcall
cli
fwait
outsl
in
insb
cmc
push
push
mov
aas
sbb
inc
decb
rcr
test
mov
das
xchg
jno
int
cmp
cmpsb
out
in
cwtl
jge
or
jmp
decb
jb
xchg
mov
xchg
lcall
xchg
mov
out
pop
outsl
cs
movq
std
ror
movsl
cmc
cmpsl
leave
xorl
xor
jp
arpl
repz
aaa
iret
dec
lret
loope
les
dec
mov
push
ss
lahf
pop
cwtl
not
pop
sub
je
pop
fiaddl
aaa
int3
inc
push
hlt
pop
ljmp
lcall
and
lret
sbb
and
sub
shrl
rorl
sbb
aaa
pop
mov
inc
or
out
push
out
aam
mov
mov
imul
ror
in
xlat
fnstsw
adc
pop
or
testl
js
fs
or
cli
fdivl
lods
lds
jne
pop
inc
js
aam
cmp
test
lds
push
sbb
jl
hlt
push
pop
jbe
push
js
xchg
cmp
jae
stos
rcrl
sbb
xlat
fs
addr16
sahf
dec
pop
das
pop
xor
stos
jmp
pop
adc
mov
jg
popa
add
push
push
hlt
sahf
lds
mov
push
test
fsubrl
push
ret
lock
xchg
add
into
out
mov
fldl
pop
js
pop
mov
imul
repnz
dec
dec
add
mov
lret
or
jne
faddl
sarl
and
and
cmp
push
fildl
pushf
xchg
iret
xor
fbstp
sbb
rclw
dec
ja
mov
aad
popa
out
pop
icebp
ror
xor
sbb
dec
sbb
daa
leave
sub
xor
jnp
jp
xchg
jae
push
jae
out
fld
and
xor
insb
xor
cmc
faddl
adc
mov
fistps
push
mov
or
push
lea
out
repnz
aaa
push
daa
rcrl
ljmp
sub
out
lret
lea
pop
jecxz
fnstsw
rorb
stos
xchg
push
sbb
jle
neg
jl
loop
lock
pushf
push
pushf
in
push
sti
js
or
push
pop
rclb
les
icebp
fs
leave
inc
mov
ja
cmp
or
popf
movsl
scas
pop
jno
sahf
rolb
cmp
jge
mov
or
fiadds
aam
cli
cmp
lret
jnp
loop
mov
push
and
fsubl
sub
xchg
inc
aad
stos
ss
add
popa
pop
jno
outsl
imul
mov
lret
clc
insb
flds
loopne
add
out
add
gs
sbb
fs
adcl
fs
imul
mov
fwait
sahf
jmp
push
push
out
insb
mov
jae
mov
sbb
lods
std
xor
mov
mov
scas
stos
and
inc
mov
test
jno
or
repnz
bound
hlt
inc
mov
movsb
icebp
mov
mov
je
mov
fadd
clc
adc
gs
xor
repnz
push
mov
enter
stos
push
movsl
add
outsb
cmp
mov
repnz
cmp
adcb
xchg
int3
sti
xor
out
jp
out
pop
out
push
outsb
bnd
sub
jge
loope
cwtl
sub
clc
clc
cmp
icebp
push
adc
push
enter
jp
mov
fiaddl
repz
mov
mov
fistpll
cwtl
int
rcr
enter
push
or
mov
test
dec
inc
xor
and
aas
cmp
sbb
aaa
cwtl
aas
adc
and
cld
xor
inc
xor
jecxz
lret
pop
pop
stos
xchg
mov
lods
outsl
pop
test
jmp
push
mov
inc
outsl
arpl
dec
dec
mov
in
pusha
adc
xorl
jge
std
pushf
jl
aas
push
shl
jge
mov
pop
cmp
fs
insl
cmp
pop
scas
pop
or
add
xchg
cld
das
jbe
jl
icebp
mov
int
sub
adc
gs
subl
int3
mov
leave
cmpsl
les
aam
push
cwtl
xor
and
fwait
ss
mov
pop
xchg
das
or
dec
imul
push
fcomps
cmpsb
movsl
pop
xchg
xor
adc
pop
adc
ja
ja
nop
mov
sub
mov
mov
push
lock
xlat
ljmp
dec
lock
sti
dec
or
lret
jmp
fdivr
pop
jle
jnp
sub
sbb
insb
lahf
out
sub
in
movl
movsl
mov
cmp
xchg
mov
adc
sbb
sub
ret
push
xorl
or
mov
sbb
xchg
mov
mov
ret
insl
fidivl
les
repnz
mov
push
or
mov
repnz
cmp
jp
rorb
mov
xchg
ja
and
aad
mov
pop
cli
pop
mov
dec
lret
scas
and
or
lock
pop
jno
ja
cmp
out
adc
jge
jg
mov
addr16
dec
or
inc
or
xor
pop
es
mov
mov
push
jecxz
ffreep
hlt
jno
add
test
jg
mov
sbb
push
cwtl
call
ljmp
leave
mov
ss
loopne
or
sbb
or
bound
in
cmp
les
jo
leave
out
enter
xor
push
shll
inc
test
sbb
jmp
jge
pop
inc
fs
sbb
mov
daa
adc
mov
stos
cmc
sbb
or
mov
icebp
ljmp
notl
adc
push
cmpsb
out
jle
clc
lods
add
imul
adc
add
ja
mov
pushf
sub
lret
and
clc
dec
mov
jg
cs
inc
or
lds
daa
movsl
mov
jb
sbbb
jnp
es
and
sub
sub
or
push
lahf
dec
call
loop
push
in
addb
cltd
xor
push
sub
int3
iret
add
stc
mov
cmp
shlb
loopnew
lahf
aas
adc
test
dec
addr16
rcrb
add
and
mov
ja
cmp
es
bound
jl
popa
clc
mov
and
jnp
mov
loope
test
xchg
dec
push
shll
inc
add
xor
or
inc
jle
mov
je
das
pop
jmp
or
push
outsb
sbb
cld
rcl
jl
xchg
pop
lret
test
cmp
mov
inc
and
mov
xchg
loope
cmp
sti
in
sahf
add
dec
or
pop
imul
fucom
or
sub
inc
inc
dec
mov
ret
jne
les
adc
push
push
cmp
andl
lcall
andl
pop
js
mov
cli
fstpl
hlt
out
movsb
or
dec
push
bound
jp
mov
repnz
or
int
dec
das
xchg
in
push
cmpl
xor
mov
lds
movsl
lods
test
or
xlat
rcrb
jns
fs
leave
jno
or
adc
rol
in
dec
add
pop
lods
iret
inc
in
insb
bound
imul
cmp
xor
std
mov
dec
or
fmuls
loope
idivb
roll
push
mov
insl
add
cmp
jecxz
xchg
mov
push
ds
ds
fwait
lret
popf
cmp
popa
sbb
ficoms
mov
nop
cmp
pop
outsb
popf
shlb
fidivl
aas
ja
adc
lods
ja
jl
ds
movsb
fstl
stos
repz
dec
insb
mov
xchg
fnstcw
cmp
sub
jge
lret
icebp
fists
in
push
mov
push
dec
fimull
fadd
pop
pusha
dec
sbb
daa
mov
loope
dec
mov
xchg
mov
test
jnp
mov
fdivs
mov
daa
push
push
sbb
dec
xor
js
xchg
ror
test
sub
adc
aam
cltd
inc
mov
stc
mov
out
enter
in
push
dec
pop
aam
xor
mov
int
push
push
cld
aas
mov
out
jns
pop
add
cmpsb
mov
cmpsl
mov
add
or
jmp
int3
ret
sub
sbb
int
mov
notb
fxch
sahf
ljmp
add
loopne
in
fmul
fsubr
lret
xor
or
xchg
sbb
inc
or
push
jle
das
sbb
sti
sbb
outsl
mov
jo
in
mov
sub
fbld
pop
stc
mov
pop
and
loopne
dec
sarb
mov
mov
cld
lds
or
or
insl
xor
push
add
xchg
jg
or
sbb
lcall
push
xor
popf
mov
ljmp
fwait
push
mov
shrb
call
pop
jne
cli
repnz
add
sub
imul
in
xor
mov
sub
mov
jno
ret
inc
aas
lods
sub
dec
mov
movsb
data16
leave
test
loope
hlt
popa
sbb
mov
and
push
sub
or
push
je
mov
leave
mov
sbb
cs
stos
jge
cmpsb
add
sub
mov
push
adc
ret
mov
inc
push
rcr
sarl
daa
cs
lret
aas
sbb
dec
jg
test
mov
pop
sahf
or
sarb
mov
inc
sbb
out
and
in
leave
in
add
mov
or
mov
mov
push
scas
inc
jecxz
mov
testl
icebp
inc
or
dec
pop
mov
jb
pop
cld
es
mov
aas
stos
push
ja
dec
add
cmc
jmp
inc
dec
xcrypt-ctr
cmpsl
pop
dec
int3
shll
stc
insb
dec
ljmp
leave
adc
mov
sahf
mov
jb
dec
psllw
ljmp
cmp
pop
push
push
mov
sbb
xchg
mov
subb
rol
pushf
lea
lods
data16
arpl
pop
bound
mov
das
and
inc
outsl
pop
test
out
ljmp
mov
sti
add
cmp
aaa
aad
xchg
mov
pop
loope
adc
lods
cmp
jecxz
rcll
repz
lods
nop
out
cmp
imul
addr16
jecxz
adcb
cmc
out
bound
mov
cmp
outsb
or
xchg
mov
mov
leave
fildll
mov
sub
loopne
mov
mov
dec
or
jo
push
adc
and
jne,pn
inc
daa
enter
adcl
xor
sub
rcrb
mov
jp
insl
movsb
xor
xchg
mov
stos
add
insb
clc
aas
out
pop
cmp
andl
jle
repz
incl
mov
cmp
xor
imul
add
or
or
je
mov
jnp
bound
shrl
cs
sbb
jns
testb
mov
call
dec
mov
pop
test
fistl
iret
cs
add
cmp
addr16
je
jno
add
fwait
test
int
mov
aas
hlt
jb
sahf
movsb
xchg
mov
cwtl
pop
add
iret
into
lock
std
cmp
mov
std
je
push
movsl
adc
jo
or
pop
or
push
shrb
jp
sahf
push
jmp
out
xchg
pushf
mov
mov
cwtl
mov
add
sub
out
pop
sbb
mov
jp
push
jg
adc
jnp
mov
mov
imul
sub
lret
cld
mov
das
push
sbb
ljmp
hlt
mov
mov
in
cltd
cmp
push
stc
pop
and
cmpsl
notl
movsl
bound
imul
xchg
ljmp
mov
les
je
fmull
sub
jb
jbe
dec
es
js
pop
mov
xor
inc
sub
pop
sbb
adc
mov
push
mov
mov
int
in
xchg
or
dec
leave
mov
xor
mov
ss
ja
test
adcb
sbb
enter
and
enter
cmp
gs
inc
loopne
pushf
mov
jbe
ret
mov
fistl
and
add
jmp
sub
and
adc
add
mov
or
cltd
lds
rcr
cmpsl
sub
xor
insl
lods
mov
out
push
cmp
sbb
pop
xchg
test
and
xchg
int
jne
and
inc
mov
xchg
add
les
mov
dec
das
mov
inc
mov
jp
iret
dec
ret
jnp
dec
gs
lock
add
mov
add
sub
or
in
jno
adc
and
jle
dec
sub
out
ffree
mov
jmp
xor
pop
hlt
sub
mov
pop
fisubrl
cwtl
orl
scas
loopne
inc
and
adc
movsl
push
out
out
lods
cmp
int3
cld
xlat
dec
inc
aas
addb
xchg
ret
shll
mov
rolb
divb
mov
push
imul
loop
push
xor
mov
xor
popa
mov
inc
inc
cmp
fnstsw
xchg
inc
mov
lret
mov
jns
testb
aaa
mov
push
add
hlt
out
rep
das
xor
xchg
int3
cmp
inc
inc
out
mov
sbb
aaa
cli
cmp
movsb
ficoml
xlat
push
push
lea
adc
mov
enter
xor
test
cmpsb
cmpsb
sub
pusha
cmp
outsl
sbb
fisttpl
fstl
or
mov
roll
xchg
lods
mov
mov
xor
data16
test
lods
test
mov
push
adc
andb
popf
cmp
lods
test
flds
sar
sbb
mov
xor
xor
inc
push
call
sbb
dec
icebp
loope
or
in
push
out
and
jmp
testl
movzbl
jl
mov
sbb
mov
dec
cmp
call
fbstp
fldpi
mov
fs
push
dec
xor
xlat
ds
test
add
dec
rcrl
cmp
lods
inc
ret
fs
sub
pop
jne
in
and
in
or
jmp
mov
fs
mov
jnp
jae
pushf
cmpsb
sahf
dec
lret
int
cmp
js
cmp
lcall
lret
xor
fucomi
lret
xadd
movsl
out
xor
pop
sbb
dec
rcl
scas
pop
sbb
push
inc
dec
lret
and
test
mov
int3
add
mov
pop
jb
jb
lock
jo
mov
cmc
mov
add
pop
xchg
leave
jle
cmp
or
jnp
or
mov
xor
aas
inc
and
mov
andl
into
pop
cmp
mov
outsb
dec
fists
inc
in
test
ret
mov
dec
fiadds
push
or
pop
pop
jl
pop
mov
es
xor
ljmp
aas
jecxz
mov
pop
mov
mov
popf
repnz
and
push
xor
mov
dec
inc
pop
sub
shrl
aad
repz
mov
arpl
sub
or
insl
mov
inc
jns
insl
js
add
ss
out
daa
out
inc
and
add
loope
imul
dec
into
dec
push
adc
jb
dec
push
jns
adc
je
mov
pop
rorb
stos
and
in
add
xchg
fbld
pop
sub
cmpsb
inc
push
mov
jg
cs
add
cmp
and
jmp
mov
cmp
nop
xor
add
jne
fcoml
ja
gs
call
dec
ja
or
fidivrl
push
mov
add
std
jecxz
cmp
ror
lcall
mulb
pop
push
daa
mov
out
pop
call
data16
sub
xor
rcll
push
xor
or
mov
pop
xchg
xchg
mov
popf
pop
ret
int
pop
add
xor
bound
and
xchg
xchg
mov
or
push
data16
adc
lods
add
mov
in
mulb
fwait
or
adc
test
repz
dec
push
sbb
lahf
and
or
div
sbb
imul
ja
mov
cmc
jecxz
push
push
xor
add
fwait
lret
sub
pop
hlt
or
mov
mov
test
fisubrs
sahf
jne
bound
add
lods
mov
jo
das
rcrb
jno
shlb
repnz
and
pusha
cli
adc
pop
fwait
stc
sbb
int
sbb
jo
or
scas
pop
pop
and
ss
mov
vdivps
mov
xlat
loop
ret
xor
mov
roll
in
cmpsb
js
and
ja
sbb
je
sbb
test
rorl
push
test
lods
mov
lods
mov
daa
sub
inc
lret
stc
fcoms
daa
cmc
push
mov
stc
sbb
fcoms
adc
inc
lock
imul
and
xor
in
out
jl
cmpsl
jno
sub
adc
jno
subb
lods
mov
push
mov
mov
fs
imul
pushw
pop
jle
xor
ret
push
cmp
in
mov
repz
xchg
adc
sub
test
xor
fstps
or
loope
jge
push
inc
cmp
pushf
imul
cmpsl
scas
out
cmc
xor
rclb
mov
ljmp
pop
mov
adc
jle
sub
push
mov
enter
pop
push
icebp
push
sbb
lds
sbb
mov
mov
outsb
mov
int
fldcw
cwtl
push
jnp
dec
cs
iret
sub
pop
aas
cli
loope
jle
add
inc
cmc
rcrl
push
cltd
ret
adc
lock
xchg
mov
ret
out
mov
inc
call
mov
push
fstpl
or
mov
daa
dec
xchg
les
sbb
sbb
insb
mov
pop
je
sub
movl
mov
mov
das
iret
sbb
cli
ficoms
je
ret
xchg
fnstenv
add
mov
into
sbb
push
in
enter
jp
call
js
stos
pop
fnstsw
lahf
push
mov
pop
int3
movsb
push
fs
sarl
mov
test
sbb
fsubl
ds
jae
enter
lret
lahf
insb
in
xchg
sbb
sub
cmpsl
daa
sti
inc
jns
fxch
lea
dec
popf
rolb
gs
je
pop
xchg
test
out
jne
insl
jp
repz
lock
sbb
sub
je,pt
sub
je
xchg
sub
adc
das
insb
arpl
xor
sub
dec
mov
mov
xchg
pop
or
int3
fidivl
mulb
jmp
dec
or
pop
js
pop
sbb
aaa
jle
adcl
mov
rolb
inc
pop
cmc
shrb
dec
aam
mov
cld
sbb
cmc
es
mov
push
or
repnz
ret
loope
data16
lock
adc
filds
cli
pusha
arpl
es
xchg
aas
movsl
pop
out
aam
sbb
in
inc
aam
xchg
sbb
or
cwtl
cltd
fnsave
jle
mov
jne
or
sbb
ljmp
sub
insl
pop
and
add
add
test
dec
sub
xchg
mov
pushf
jnp
hlt
xchg
cld
dec
sbb
fdivl
cmpsb
inc
mov
push
xchg
fmul
dec
xor
movsl
test
nop
mov
divl
loope
xor
push
subl
dec
cmp
and
and
and
pop
outsl
sbb
arpl
pushf
dec
adc
push
loopne
sbb
out
pop
pop
cmp
pop
sbb
sub
iret
cmp
ret
pop
rolb
js
fmuls
xor
inc
xchg
add
rcll
imul
rorl
ss
push
lahf
daa
insl
and
sbb
out
arpl
call
inc
dec
sub
fdivs
jo
shll
in
jbe
movsl
sub
ficomps
rorb
pop
cmp
ffreep
stc
std
push
fmull
dec
add
leave
inc
mov
sbb
sub
mov
jo
cmp
pop
jnp
inc
xchg
flds
sub
pop
mov
mov
jnp
gs
shrl
movsb
rorl
lock
xor
stc
mov
jbe
or
dec
movsl
add
adc
les
loop
sahf
inc
xor
aam
push
stos
stc
insb
jne
out
stos
adc
adc
fcmove
xchg
xchg
push
inc
adc
sar
out
outsb
or
and
stc
movsl
movsl
sarb
mov
lds
lock
pop
ljmp
lahf
in
jmp
sub
fcmove
outsl
push
pop
subb
jl
out
push
pop
enter
lods
ret
rclb
rcrl
mov
adc
push
dec
xchg
stc
mov
bound
inc
jle
sbb
imul
aam
xchg
cmp
cmp
mov
adc
sub
loop
cmpsl
push
pop
inc
sarb
pop
shlb
and
mov
sub
outsl
outsb
pushf
sbb
adc
sbb
popa
std
xchg
iret
fistps
dec
push
repz
stos
fdivrl
cmp
inc
insb
loope
aam
lds
mov
in
dec
pop
fstpl
scas
xchg
dec
sub
xchg
adc
cmp
pop
dec
push
sbb
jge
fs
mov
or
leave
aam
and
pop
fadd
add
dec
cmc
and
jle
sbb
sbb
sbb
xor
sub
mov
dec
jmp
mov
jnp
dec
movsl
xor
lea
imul
push
mov
push
dec
fldcw
lock
sti
call
xchg
xor
pop
aam
pusha
mov
imul
aad
mov
mov
in
out
sbb
fiaddl
jns
daa
ds
adc
xor
mov
call
lret
in
rolb
cld
inc
mov
aas
in
cmp
cmpsb
imul
sahf
addr16
insb
cmc
in
ja
jle
inc
in
cltd
vmovdqu
mov
fcom
ficoml
sbb
fdiv
jns
inc
pop
inc
mov
mov
or
cmpsl
ucomiss
inc
nop
push
jg
mov
cmp
xor
mov
testb
arpl
mov
pop
sub
push
and
xchg
xchg
or
and
int
loope
pop
ss
mov
pop
imul
lret
jb
sbb
lods
pushf
xchg
push
fstps
push
adc
lret
ds
jns
jp
fdivrp
lcall
mov
sti
addb
arpl
pop
iret
sbb
sub
hlt
and
sbb
out
out
adc
sti
retw
scas
jns
cmp
ficoml
decb
imull
lcall
ss
cmp
jae
movsb
xchg
sti
pop
xor
cmp
addl
fisubrl
pop
in
mov
and
sbb
push
inc
inc
pop
std
mov
sub
fwait
sbb
mov
inc
xchg
movsb
or
jl
sbb
add
mov
fsubp
mov
lahf
mov
xor
dec
mov
js
rorl
jecxz
mov
sub
dec
sahf
add
inc
adc
out
sti
add
sub
xchg
dec
std
or
enter
mov
push
flds
sub
cli
xchg
aam
pop
cmp
iret
sub
add
cmp
cmp
lcall
mov
clc
adc
mov
ficoms
mov
cmp
imul
or
pop
mov
in
cmp
nop
lcall
cmp
not
cmpsb
mov
mov
test
sbb
inc
cmp
xchg
or
sbb
sbb
push
fwait
cmpsl
jno
outsl
xchg
push
in
aam
push
jmp
xlat
repnz
test
add
mov
lea
sahf
cld
aam
adc
jo
pop
xor
or
ss
insb
in
outsl
mov
jmp
jl
lcall
adc
xor
in
sub
popa
mov
cmp
mov
inc
cs
sub
cwtl
enter
mov
aaa
bound
aaa
stc
mov
loopne
lods
inc
scas
fiaddl
inc
fs
and
push
sbb
insb
jne
sub
sti
xchg
and
jecxz
xor
push
test
mov
xor
lods
push
mov
adc
mov
fadds
adc
insl
pop
push
shlb
lea
fptan
xchg
divl
jbe
scas
icebp
in
add
das
jno
xlat
int
push
test
pop
dec
cmp
andl
push
xchg
stc
cmp
movsb
mov
and
xor
adc
ret
mov
pop
push
xor
js
cmpsb
arpl
dec
nop
push
xor
sub
jp
dec
gs
aad
or
mov
xchg
pop
aaa
fcomps
shrb
adc
call
jmp
in
xor
pop
test
in
into
das
ds
sbb
adc
rcll
cmp
and
aad
push
insb
push
shrb
mov
leave
or
arpl
jl
xchg
xchg
sbb
fsubrl
mov
sub
fildl
call
mov
sbb
shll
adc
stos
sarl
fisttpll
xchg
inc
pop
and
dec
unpcklps
sub
pushf
bound
movsb
mov
or
test
add
jecxz
lcall
pop
shr
lods
mov
or
lods
je
mov
pop
mov
and
fldcw
mov
sub
lret
out
adc
fldt
fwait
adc
insb
jnp
es
rol
aad
and
or
sbb
lcall
mov
cmp
pop
shrl
mov
xchg
cmpsb
inc
add
popf
fsub
fimull
add
mov
roll
and
dec
add
mov
stc
mov
adc
cmp
push
dec
fwait
and
mov
icebp
mov
mov
out
mov
aad
push
push
ret
test
int3
mov
ret
cmp
fwait
ljmp
xor
fdivs
cmp
sub
push
xor
xchg
daa
sbb
and
scas
cmp
cmp
fimull
cmp
fidivl
lret
pop
xor
cmp
mov
pop
ror
cmp
jmp
pop
pop
sub
je
test
mov
mov
pop
push
sub
mov
lods
jmp
lahf
jmp
gs
push
cmc
incl
lahf
push
js
inc
add
lahf
sbb
repz
inc
push
and
sub
xchg
aad
andb
push
dec
out
loopne
fisubs
mov
jo
mov
ret
dec
adc
daa
nop
std
dec
scas
push
adc
add
push
mov
out
movsl
mov
jg
xchg
mov
lret
inc
out
push
icebp
or
daa
and
arpl
test
lret
jp
mull
mov
std
lahf
jb
or
inc
xlat
push
es
ror
add
mov
hlt
mov
pop
push
orb
cmpl
jnp
mov
jmp
inc
dec
lret
mov
out
in
outsl
std
movsb
test
loopne
mov
push
mov
and
jp
xor
popf
and
imul
fs
mov
jnp
inc
xor
xchg
sub
clc
pop
pop
push
loopne
sbb
add
sbb
stos
mov
add
int3
jle
sbb
cld
cmc
mov
pop
hlt
insl
push
xchg
push
push
pop
hlt
push
cmc
mov
or
out
pop
and
pop
jo,pt
sbb
mov
out
inc
cltd
not
sub
pop
movsb
pop
roll
or
mov
movsb
icebp
push
mov
mov
push
dec
cli
cmc
mov
cwtl
push
mov
xor
bound
add
push
inc
aad
jle
scas
jmp
dec
leave
stos
fadds
sbb
rorl
ss
add
inc
adc
stc
mov
mov
jmp
out
xor
pop
cmc
cmpsb
repz
in
mov
inc
push
imul
xchg
xchg
xor
arpl
insb
or
sub
fstpl
js
aaa
add
add
adcl
sti
gs
push
stc
shrl
movsb
jno
imul
add
dec
mov
jne
fisttpll
punpckhdq
push
add
or
das
mov
push
dec
ljmp
xchg
dec
push
jmp
jmp
aaa
sbb
invd
out
enter
rcr
pop
sub
out
call
inc
das
cwtl
mov
pop
and
pop
flds
es
pushl
outsb
cmp
imul
gs
jns
repnz
and
ljmp
sbb
out
popa
pusha
in
xchg
stc
or
stos
mov
mov
popa
sbb
scas
cltd
int3
jnp
out
sbb
xor
fsubrl
outsl
sti
dec
mov
addb
hlt
into
mov
adc
xchg
pop
jae
inc
xchg
sbb
aas
cmp
lcall
jo
fldl
ds
push
ret
jmp
xchg
jbe
and
adc
imul
inc
jp
inc
ds
jns
bound
rcl
jae
sbb
nop
cmp
hlt
dec
jg
add
repnz
test
in
cltd
movsl
test
insb
jp
nop
sub
push
fcmove
pusha
out
inc
pushf
les
xor
imul
add
repnz
mov
fisttpl
jle
lret
sbb
inc
xlat
jmp
movsl
int
adc
mov
shrb
push
xchg
adc
gs
mov
sti
movsb
ss
xor
or
daa
xchg
mov
rorl
mov
and
pop
push
lock
out
xor
xchg
mov
ljmp
lds
fdiv
fcomps
push
lock
inc
hlt
jge
add
mov
out
sbb
inc
push
xor
inc
lahf
xor
jae
and
mov
mov
rcrl
adc
mov
ljmp
das
cli
inc
mov
test
test
gs
jb
je
mov
mov
ficompl
mov
and
insb
add
adc
fucom
jp
mov
movsl
ret
je
call
xor
push
in
mov
xor
jecxz
push
mov
hlt
fsubrs
cmp
mov
lret
pop
cmpsb
loopne
mov
fstl
add
loop
cs
dec
aam
inc
push
or
inc
movsl
in
scas
lods
lret
sub
dec
dec
dec
pop
arpl
pop
jmp
jbe
sbb
cld
pop
pop
dec
mov
jmp
mov
pop
aas
push
std
aad
insb
insb
pushf
js
pop
ss
je
xchg
dec
sbb
imul
lret
jl
imull
aas
in
jo
pop
sub
push
test
jo
jp
jo
adc
adc
mov
testb
or
jg
dec
lods
frstor
push
mov
jns
out
push
pop
xchg
out
in
mov
out
hlt
mov
lods
fistpl
xor
push
stos
mov
loopne
xchg
push
cwtl
xchg
insb
sub
sub
mov
add
popf
push
or
testl
call
roll
sbb
push
loopne
sub
mov
sahf
pop
bound
xchg
mov
test
xchg
mov
sbb
das
aad
stos
xor
sbb
mov
inc
mov
cwtl
scas
adc
cli
jg
mov
and
leave
js
ror
call
pop
add
adc
jbe
les
aas
fwait
sub
dec
fsts
jb
jbe
cli
fldcw
mov
jo
adc
lea
xchg
mov
shrl
jmp
xchg
xor
dec
add
aas
push
and
mov
jbe
test
jns
xchg
js
imul
imul
add
xor
mov
orb
nop
int
jle
cmpsb
lret
dec
or
jl
inc
pop
cmp
mov
into
xchg
pop
mov
imul
push
pop
cmp
jl
adc
add
adc
hlt
xchg
stos
repz
push
pusha
pop
sub
mov
dec
shll
or
jl
mov
popf
icebp
mov
aas
int
andb
popa
fmull
mov
data16
in
mov
inc
sahf
stos
int3
sbb
sbb
pop
arpl
jne
getsec
ret
push
loope
mov
mov
subb
adc
push
sub
dec
sub
inc
shl
popa
scas
dec
ficomps
outsb
cmp
xchg
mov
out
stos
mov
fisubs
adc
imul
mov
mov
dec
cmp
data16
add
in
xor
xchg
test
cli
push
test
mov
push
iret
cmpsl
jp
pop
sahf
mov
test
mov
or
cmc
clc
mov
sahf
jb
add
push
mov
xchg
adc
ds
sbb
imul
bound
add
dec
inc
dec
sub
and
pop
aam
icebp
mov
sub
xorb
inc
fisubrl
movsb
dec
cmp
scas
movlhps
or
lods
jl
push
mov
imul
je
mov
mulb
or
dec
mov
cli
dec
dec
adc
pop
and
cmpl
mov
push
cld
ds
into
pop
data16
lcall
sbb
out
inc
xchg
fstpl
mov
es
mov
mov
in
jl
xor
dec
sbb
jnp
mov
lock
and
popa
push
jecxz
pop
loop
push
aam
mov
arpl
push
sbb
dec
pop
mov
mov
or
mov
and
insb
pop
shrb
stos
inc
add
outsb
in
sub
xchg
nop
mov
xor
xor
scas
jecxz
mov
or
pop
dec
mov
cwtl
and
add
ja
arpl
aam
in
mov
xor
dec
mov
dec
sub
sub
push
mov
pop
and
add
pop
add
jae
pop
push
mov
test
pop
test
adc
dec
mov
and
cltd
in
push
neg
stos
pop
push
aam
cmpsb
lahf
data16
or
aas
je
sbb
imul
fdivl
cwtl
xor
sub
iret
cld
rcl
push
inc
jne
add
cli
scas
lock
mov
sbb
in
mov
mov
dec
int3
cld
movsl
in
pop
ret
loope
imull
nop
movsb
cli
mov
scas
arpl
insl
dec
inc
xchg
or
fnstcw
sbb
pop
mov
inc
outsb
pushf
rcrb
popf
cmpsb
fmuls
dec
mov
adc
add
jge
repz
incl
mov
popa
mov
add
adc
push
popf
aaa
repnz
lahf
mov
jae
xchg
lcall
cmp
mov
adc
cli
cmpsl
mov
rorl
dec
or
sub
sbb
mov
in
jnp
lret
inc
xor
fcoml
repz
mov
mov
jmp
lret
adc
mov
cmp
push
dec
lret
mov
dec
test
lcall
fsubrs
nop
cwtl
aam
cmp
inc
loop
adc
sbb
pusha
popa
rorl
jnp
cli
faddp
push
lock
out
inc
pusha
cltd
addl
cmp
dec
jb
mov
sbb
or
daa
arpl
xchg
je
test
out
xchg
gs
mov
xor
scas
rcrb
fsts
mov
sar
and
gs
aam
sti
push
add
outsb
xchg
inc
lods
out
gs
mov
insl
lcall
mov
into
dec
jae
xchg
bound
test
js
mov
cmpsb
pop
outsb
call
test
push
jecxz
xor
pop
stos
pop
lahf
pop
dec
sub
xorb
lcall
jne
sti
lret
arpl
push
mov
sub
jno
adc
inc
dec
loope
sbb
ds
outsl
loopne
dec
cmp
xchg
lods
vcvtss2si
aad
and
pop
add
jg
mov
test
orl
mov
in
sbb
out
fmul
jae
movsb
sub
pushf
out
jge
out
push
sbb
fildll
push
cmp
jmp
mov
cmp
ss
mov
in
orb
cmc
add
jg
sub
xor
jo
aad
repnz
movl
add
sti
icebp
sbb
dec
ss
jl
loop
jl
push
stc
mov
push
sti
into
inc
sbb
push
or
mov
aaa
pop
je
movl
into
xor
cmp
test
push
ret
addb
clc
jne
sbb
pop
stc
sbb
or
xor
mov
aam
ss
movsl
jno
mov
dec
mov
and
arpl
les
mov
jnp
stc
int3
or
daa
out
gs
mov
and
popf
sbb
arpl
notl
sarl
int
cmp
sub
push
xlat
jbe
mov
data16
out
in
inc
lea
addb
mov
test
xorb
or
cld
adc
push
xchg
mov
push
mov
insb
lret
lret
and
cltd
dec
popf
xor
repnz
divb
insl
pop
xor
movsl
loopne
mov
imul
ds
xor
stos
ror
aas
ss
dec
mov
sub
sbbl
cs
imul
sbb
testl
adc
sub
ficomps
push
into
scas
jnp
loop
push
cmp
pop
lahf
pop
jg
mov
ljmp
inc
adc
lods
shll
cmp
xchg
inc
sbbl
das
xchg
rcr
clc
mov
pop
sbb
loop
inc
adc
pop
sub
inc
dec
xor
adc
repnz
add
sahf
adc
or
ret
pop
or
jmp
lahf
xor
push
push
fdiv
pusha
adc
hlt
out
sbb
fidivs
call
stos
sub
lret
mov
in
and
imul
scas
adc
int
rclb
cmp
add
push
mov
insb
inc
test
pop
sub
jo
testl
leave
lcall
popa
xor
pop
xor
fimull
je
sar
xchg
stc
test
iret
xchg
mov
fmulp
mov
push
out
dec
test
andb
jnp
inc
ja
outsl
aam
mov
imulb
xor
ss
out
test
xor
pop
jns
sub
movsb
inc
fisttpll
push
xlat
add
int3
xchg
pop
arpl
mov
sub
cli
and
cs
add
sarl
or
pop
inc
inc
xchg
inc
mov
enter
xchg
sub
sbb
xchg
mov
dec
dec
test
xchg
mov
mov
inc
inc
ret
repnz
daa
daa
mov
or
in
push
notl
nop
lcall
inc
sbb
repz
sub
jo
push
push
ret
cltd
push
jno
lods
sbb
xchg
loopne
inc
jl
inc
in
jbe
cmp
add
sbb
subb
out
test
pop
mov
test
adc
jbe
xor
ja
out
push
lea
pop
mov
adcb
aaa
inc
mov
xchg
xlat
setne
stos
setnp
sahf
ss
enter
dec
ficomps
mov
mov
orb
cmp
rclb
xor
jno
dec
cmp
pop
add
scas
gs
adc
mov
or
mov
mov
std
pusha
imul
adc
mov
lock
in
inc
ds
sub
stos
and
rolb
add
inc
loope
lds
xor
inc
aad
shl
out
aaa
int
test
jmp
imul
mov
lods
mov
sarl
xchg
cmp
outsb
insb
xchg
cmp
push
and
bound
adc
push
push
inc
in
test
and
lret
inc
lcall
cmp
xchg
lahf
sbb
and
push
pop
lcall
sbb
mov
addl
cs
inc
mov
push
sub
leave
andb
shl
and
push
jns
and
repz
into
pusha
scas
mov
jnp
mov
movsl
xchg
ret
mov
imul
movsb
lock
subb
cmp
dec
dec
mov
mov
test
test
lret
fisubrl
sbb
ret
pop
adc
mov
fadds
dec
clc
mov
pop
jns
jl
aaa
dec
lea
jne
dec
aas
popa
je
mov
aam
and
jl
ja
mov
cltd
sarl
daa
imul
jl
hlt
push
pop
into
sbb
rcll
inc
lret
test
or
dec
mov
xor
ja
and
xlat
int
or
jae
xlat
mov
lret
fildl
jns
mov
or
sub
in
call
scas
sub
faddp
mov
test
repnz
out
sub
setle
int3
cmpsl
dec
sti
xchg
xor
push
cmc
adc
pop
xchg
mov
add
mov
add
test
cwtl
jp
pop
ret
push
les
fsubrl
mov
xchg
mov
hlt
addl
cmpsb
push
call
cmp
or
gs
roll
mov
pop
aad
inc
jb
push
fldl2e
and
adc
mov
cltd
dec
and
dec
xlat
hlt
movsb
or
int
cmpsl
lods
test
rcrl
int
aam
and
cmp
ljmp
mov
roll
xor
mov
inc
mov
out
sub
jnp
addr16
or
or
popa
ret
shr
aaa
or
call
mov
ds
dec
push
in
mov
daa
cmp
sbb
jmp
push
nop
leave
lods
push
mov
aaa
imul
jle
push
insl
inc
pushf
icebp
shrl
mov
or
sahf
fstpt
cmc
imul
inc
inc
insb
jno
out
in
inc
imul
cld
cmp
data16
rol
or
push
mov
ljmp
push
test
xchg
insb
ret
cwtl
mov
xchg
stos
filds
or
ficomps
cli
cwtl
out
imul
adc
push
imul
inc
incb
hlt
sahf
lea
pop
ret
pushf
pop
sbb
repz
xchg
push
out
xchg
out
inc
mov
mov
lock
dec
addb
sub
test
pushf
fs
jb
shll
sub
outsl
fs
testb
or
mov
jne
movsb
and
pop
movsb
jmp
mov
push
fs
xchg
int
sub
cmp
mov
and
and
std
mov
pop
shrb
insl
pop
cmpsb
sbbb
daa
mov
sub
inc
sbb
and
fldt
lcall
dec
add
cli
jne
and
lock
xchg
mov
repnz
dec
shrd
push
clc
mov
or
scas
mov
loop
pushf
adc
push
cli
icebp
ja
jae
iret
mov
repz
rcll
orb
adc
adc
es
in
ljmp
pop
xchg
mov
pop
jbe
and
cmp
out
pop
mov
loop
jge
sahf
jns
xor
popf
test
lock
cmp
xchg
xchg
add
adc
mov
and
and
aad
daa
inc
out
fldcw
dec
jb
xchg
lods
sbb
in
jle
dec
loope
mov
sub
xor
cmp
pop
push
mov
jle
test
jne
add
test
xchg
test
sbb
mov
mov
or
clc
repz
xor
ljmp
fdivr
jmp
cmp
or
bound
jecxz
sub
push
push
mov
mov
xor
in
test
cli
je
enter
add
in
xchg
sbb
addl
dec
dec
imul
pop
xor
mov
rol
nop
sub
inc
aas
mov
inc
ret
xor
jb
cmp
add
daa
mov
and
push
dec
pop
fdivrl
in
inc
mov
ja
stos
test
cmp
cld
xor
gs
mov
pop
into
jo
mov
adc
out
in
add
mov
jns
stos
or
pop
jge
adc
int3
imul
mov
mov
pop
js,pt
push
inc
push
mov
sub
call
repz
das
aam
or
in
cmpsl
popf
mov
ret
pop
push
dec
iret
push
ds
push
lret
stos
int
and
jno
mov
mov
sbb
stos
jns
xchg
jae
insb
cwtl
es
and
clc
out
pop
pop
jno
fwait
pop
data16
cmp
jno
cwtl
addr16
pop
rdmsr
push
xchg
hlt
test
add
and
and
cmp
loopne
fmull
xchg
test
mov
sbb
inc
sbb
dec
scas
mov
jb
mov
es
pop
mov
dec
fstps
in
ja
sti
iret
push
test
lcall
pop
jne
sti
push
daa
call
repnz
iret
xchg
pushf
pop
add
push
pop
fldt
adc
mov
shlb
push
ret
mov
fcmovbe
add
xchg
mov
dec
inc
sbb
xchg
push
sbb
lcall
int
fmuls
xchg
mov
dec
xchg
pop
mov
lods
aad
bound
jne
pop
loope
xlat
loop
xchg
adc
dec
movsb
es
mov
dec
pop
jmp
sbb
ss
icebp
pop
sub
inc
pop
das
imul
jle
add
xor
lods
xchg
xchg
loop
das
lcall
stos
es
mov
mov
nop
push
mov
outsb
mull
sub
xor
mov
push
std
test
ss
push
cltd
cwtl
lret
inc
xchg
cmp
lods
or
jmp
in
in
pop
testl
lahf
dec
jno
nop
push
jl
loopne
rcrl
cli
sbbb
dec
lods
xchg
sti
es
and
fwait
pop
push
fisubs
adc
jle
shl
in
cmp
mulb
inc
outsb
imul
xor
bswap
sub
sub
xchg
mov
and
add
cmp
xor
add
and
jp
lea
mov
roll
inc
xor
pop
lock
or
bound
inc
or
push
add
shl
pop
mov
test
mov
ss
mov
jne
mov
mov
inc
mov
das
inc
add
adc
add
pop
jmp
ret
adc
push
jb
lret
xchg
add
fsubs
icebp
or
pop
pop
mov
jecxz
insl
popa
xor
pop
xchg
outsl
inc
jge
or
mov
loope
rcrl
push
in
push
push
push
rcll
fldl
fidivs
int
push
cmp
adc
lahf
jb
jp
cmp
jg
dec
ret
mov
mov
pushf
in
sarb
jp
lcall
aad
push
cltd
dec
jl
pop
fisttpll
daa
and
adc
xchg
jno
dec
xor
aam
mov
inc
push
fwait
sahf
loopne
cltd
cmp
shl
scas
jecxz
add
and
cmp
and
pop
push
cmp
inc
bound
enter
ret
iret
test
cmp
add
jge
data16
sbb
mov
and
sbb
ret
jmp
inc
sub
clc
sbb
ret
dec
stos
cmp
insb
dec
ss
fsubs
lret
pop
pop
and
inc
add
add
xor
sub
movsb
les
test
and
xlat
inc
testb
sub
clc
fsubrp
add
or
dec
fcmovnbe
pop
in
push
movsl
jns
loope
inc
nop
mov
xor
xchg
mov
push
jnp
sarl
adc
jl
js
testb
pusha
loop
pop
jmp
pushf
imul
lret
imull
push
xchg
testb
mov
out
jno
sbb
cmpsb
sbb
dec
mov
stos
push
arpl
push
jnp
loop
cmp
jno
iret
mov
mov
aas
dec
cmp
fs
dec
jg
mov
mov
push
add
xorl
mov
mov
testl
int3
out
or
mov
je
jb
and
in
subl
mov
mov
test
insl
shlb
test
jl
xor
adc
mov
sbb
xlat
test
outsb
ljmp
in
lds
dec
iret
outsb
adc
stc
or
into
das
fnstcw
xor
data16
sbb
push
out
pop
insb
pop
inc
fsubrs
xor
lds
mov
push
mov
sbb
insl
mov
mov
ja
popf
jecxz
lret
pop
in
call
xor
mov
lods
inc
outsl
push
push
scas
push
scas
movsb
pop
outsl
xchg
xor
test
xchg
or
jae
cmp
push
or
out
out
sbb
jge
dec
iret
xlat
fildl
inc
sti
cmp
sbb
cmp
inc
adc
dec
mov
std
movsl
xor
out
movsb
mov
xchg
inc
xorb
hlt
xor
fwait
rol
cmp
stc
or
xchg
ret
lcall
std
jp
popa
jbe
mov
cs
jp
and
jecxz
fidivs
mov
xchg
push
mov
adc
or
fnstsw
int
add
sub
sarl
mov
icebp
sbb
sarb
and
inc
push
rcl
xchg
xor
out
push
push
cmp
in
andb
fimuls
mov
add
mov
aad
int3
ret
imulb
iret
lock
das
mov
push
hlt
xchg
rorb
push
dec
sbb
jp
jae
mov
mov
and
cmpsl
jp
jg
pop
dec
push
xchg
fsts
jno
pop
gs
fistpl
xchg
mov
lcall
mov
dec
adc
push
stc
sub
stos
stos
repnz
fistpll
jmp
lods
xor
mov
arpl
xchg
add
loopne
adc
xor
les
out
mov
test
push
fidivl
stos
test
mov
adc
or
dec
fisttpll
popf
testl
out
sub
jge
push
inc
adc
mov
push
fs
outsb
stc
sub
call
lods
mov
rclb
push
add
lret
adc
mov
arpl
jge
lds
mov
xchg
imul
mov
fwait
shr
inc
or
push
std
inc
mov
stc
orb
sbb
popl
ja
dec
pop
arpl
mov
lcall
clc
pusha
mov
fsubr
jb
and
mov
aas
insb
pop
or
xor
adc
mov
ret
fstpt
sub
cwtl
xor
pop
mov
xorb
dec
popf
sub
or
inc
dec
adcb
xchg
cmp
jmp
ds
sub
xor
or
push
imulb
push
bound
inc
jnp
sub
addr16
dec
sbb
mov
and
loopne
fistps
fsubrl
add
stc
add
jae
ror
mov
loope
ss
jecxz
dec
scas
sbb
push
addb
fidivs
dec
loope
faddl
hlt
aaa
xchg
jecxz
imul
popf
loope
scas
inc
flds
data16
adc
push
and
sub
pop
lahf
lret
jae
je
xchg
mov
rcll
mov
xor
jno
test
xadd
je
inc
test
repz
ja
dec
jae
cmp
pop
jmp
out
orb
mov
cmp
xor
add
pop
int
enter
push
fwait
mov
lret
xchg
ss
dec
pushf
pop
or
sti
xor
bswap
mov
add
mov
test
add
or
jne
dec
loopne
jbe
push
std
pop
imul
aaa
out
repnz
inc
xor
cmpl
mov
mov
adc
add
xchg
mov
jno
out
mov
cmpsb
cmp
push
xchg
daa
xor
or
clc
repz
and
cmp
cmp
cmp
mov
xor
insl
mov
scas
add
fildl
jecxz
call
add
add
pop
inc
add
mov
sti
icebp
imul
push
inc
pop
lret
bound
cmp
and
mov
inc
push
fwait
dec
js
movsb
in
push
cmp
fisubl
mov
les
pop
into
sub
cmp
nop
add
mov
jnp
jnp
scas
sbb
ss
aas
lahf
dec
out
ss
add
das
cmp
mov
enter
xchg
rorl
sahf
in
pop
into
into
push
test
mov
add
push
int
bound
sub
ss
mov
xchg
dec
sti
jmp
add
jecxz
mov
sti
mov
mov
add
dec
stos
loop
add
adc
outsb
pop
xor
insb
data16
mov
cmp
dec
cltd
jle
pop
fnsave
or
out
push
arpl
xor
push
dec
imul
dec
jge
inc
sub
push
xchg
loope
mov
cmp
jmp
inc
sub
iret
pop
mov
inc
lea
popf
jecxz
add
xor
dec
xchg
fidivs
nop
inc
cli
sbb
data16
dec
mov
jecxz
pop
mov
popf
cmp
xor
mov
outsb
mov
inc
stc
cmp
xchg
jge
fildll
sbb
or
ja
add
cltd
or
jnp
mov
pop
mov
xor
inc
and
in
push
loop
or
cmp
inc
inc
sbb
je
aaa
je
xor
push
xchg
stos
aas
xor
cwtl
xor
push
dec
add
aad
loope
test
xor
sahf
push
jbe
mov
dec
xchg
adc
mov
jnp
loopne
xchg
nop
mov
pop
cmpsl
in
cmp
and
fisttps
and
es
push
test
lods
push
shlb
cmp
add
aas
jmp
sub
xor
dec
xor
enter
xlat
aam
xorl
leave
in
jmp
or
xor
adc
popf
daa
xchg
push
cs
mov
in
add
xchg
out
ret
xor
fisttps
pop
mov
jo
and
push
push
insl
add
push
lods
jno
mov
cmp
movsb
repnz
dec
xchg
mov
pop
mov
xor
ljmp
pushf
dec
sti
mov
xlat
push
stos
mov
mov
fdiv
and
xchg
stos
or
or
mov
mov
xchg
mov
mov
pop
cld
ja
out
lods
jg
std
loopne
sbb
stos
std
fmull
insb
inc
cmp
into
adc
sub
push
in
sti
mov
or
jl
std
scas
push
in
fucompp
jbe
jb
inc
lcall
mov
movsl
mov
movsl
movsb
push
fists
pop
lock
pop
push
les
fcom
into
push
int3
and
mov
dec
ret
mov
xchg
push
pop
cmp
dec
lods
mov
adc
mov
inc
cwtl
test
lahf
inc
push
inc
add
and
out
push
jmp
sub
cmp
mov
or
jp
dec
jp
rolb
rclb
in
pop
popf
std
out
decb
pop
ja
ficomps
mov
lahf
jno
inc
xor
mov
rcl
push
pop
mov
clc
push
stc
xchg
mov
mov
pushf
mov
cli
ss
popa
dec
aas
cmp
mov
cli
lds
mov
test
jo
mov
dec
lods
mov
test
lds
movsl
daa
or
push
pop
inc
imul
mov
add
in
pop
nop
iret
cmpsl
ljmp
lods
lret
inc
in
inc
xchg
jl
jl
ljmp
mov
das
xchg
xor
into
xchg
adc
cmp
aaa
jg
inc
jmp
jnp
xchg
jge
mov
rcl
xor
cmpsb
adc
dec
cmpsb
in
mov
mov
jge
jge
push
incl
daa
lods
movsb
sbb
xlat
in
pop
or
js
pop
mov
into
dec
lret
clc
sbb
xor
cmp
add
arpl
cwtl
xor
mov
pop
sub
mov
add
and
imul
jo
jne
dec
mov
sarb
ljmp
and
mov
js
add
push
push
aad
xor
adc
sbb
aas
sbb
xor
jbe
mov
mov
nop
fnstcw
ficomps
into
xor
pop
sub
ds
dec
push
mov
arpl
fldenv
lods
fisubl
pop
sub
mov
cmpsb
sub
or
add
sub
lods
lea
or
inc
adc
roll
xchg
imul
adc
xchg
dec
loope
lcall
je
fsubrl
scas
pop
lahf
adc
std
ret
inc
push
outsb
fwait
add
or
or
imulb
in
addb
fiadds
push
mov
mov
fiaddl
sbb
and
aaa
sbb
jg
cli
sbb
jnp
or
sub
mov
stos
es
ucomiss
push
lds
add
adcb
ljmp
sbb
test
shlb
fstpl
loopne
mov
jns
outsb
inc
insb
rorb
and
repz
int
mov
add
push
inc
popa
push
iret
aad
mov
adc
je
jle
jle
mov
sbb
cli
int
inc
sbb
and
mov
adcb
stos
jge
mov
fisubrs
inc
add
push
mov
je
aaa
sub
pop
and
inc
jnp
pop
add
pop
fildll
add
cmp
jge
popf
fmull
xor
sti
je
mov
repnz
in
fidivrs
push
cmp
lahf
enter
push
sahf
adc
dec
testb
mov
mov
push
test
ficoml
scas
sahf
cmp
and
hlt
sarb
inc
sbb
sbb
addb
fistpl
mov
sub
xchg
pop
hlt
rcl
cs
stos
jnp
mov
pop
push
int3
lret
or
adc
mov
sahf
lock
repnz
scas
test
and
push
or
sbb
iret
incb
cmp
popf
aam
cmpsl
fisubrs
sub
xchg
dec
and
xor
outsl
mov
and
loop
enter
mov
inc
in
test
orl
push
out
xor
mov
das
aas
jge
call
mov
push
add
adcl
inc
loope
inc
fcoml
inc
mov
in
push
or
enter
jp
add
and
cmp
lret
jp
or
inc
sbb
pop
push
cmp
pop
mov
jg
pushf
xlat
pop
pop
adc
mov
rolb
cmp
pop
mov
mov
imul
xchg
out
cmpsb
dec
sub
mov
and
out
cltd
shll
pop
movl
adc
test
and
pop
cmp
sub
imul
dec
xor
inc
add
xor
push
adc
ss
xchg
mov
rolb
push
loopne
sbb
fisttpll
jns
scas
cmp
sti
std
js
das
xor
test
mov
movsl
push
mov
or
aas
nop
mov
push
mov
cmpsl
sbb
or
fildl
dec
sbbb
and
in
add
stos
gs
sub
mov
inc
xchg
nop
jo
pop
outsl
ss
adc
leave
push
aaa
cmpsl
mov
adcl
sbb
xor
cmpsl
push
dec
pop
mov
aas
js
mov
pop
in
xchg
ret
mov
lahf
dec
rclb
cmc
jg
loopne
movsb
insl
neg
cs
stc
xchg
mov
sahf
push
inc
xor
pop
leave
push
or
mov
test
fbld
psubsb
mov
aad
imull
jp
loopne
lahf
leave
inc
pop
cs
adc
push
shrb
mov
inc
cs
fisttpl
push
shlb
and
sbb
mov
pushl
dec
jb
cli
jge
adc
push
shrb
adc
mov
insl
and
call
repnz
mov
rcrb
popf
cs
and
sub
frstor
out
push
daa
sbbb
imul
sub
repnz
jmp
in
popa
adcb
mov
aas
adc
or
aad
lds
xchg
ret
jl
movsb
jae
add
scas
ret
movsb
mov
pop
arpl
cmp
fiadds
dec
adc
push
cmp
adc
push
ret
jo
sbb
push
mov
sub
jmp
xchg
lods
inc
imul
ret
movl
andb
adc
and
sarl
shrb
push
add
or
popf
jbe
dec
call
jl
mov
push
imul
movsb
pushf
scas
push
ja
inc
dec
rorb
jl
dec
sub
hlt
mov
scas
sahf
xchg
xor
push
test
xor
fildll
test
xchg
mov
push
lods
mov
test
pop
mov
test
add
cmc
fmul
cltd
inc
pop
jne
movb
sahf
push
aam
or
enter
fbld
mov
lret
sbb
out
cwtl
int3
cli
add
inc
les
dec
rolb
xchg
sbb
xchg
stos
adc
ss
out
jg
xchg
bswap
fistpll
inc
ret
cmp
inc
mov
xor
or
sbb
xchg
and
lahf
jp
scas
sbb
sbb
pop
push
inc
adc
mov
fmul
in
or
lret
lcall
in
sub
sbb
hlt
hlt
dec
adc
out
dec
fsubl
mov
mov
mov
pop
dec
fsubrp
rcrb
imul
mov
inc
inc
xlat
mov
loope
xor
xor
pop
daa
sub
insl
sti
inc
hlt
sub
xor
adcb
fucom
xor
mov
adcl
fs
add
ret
std
mov
repz
sbb
imul
cmp
and
mov
mov
dec
jg
inc
ret
test
lahf
cli
cmp
into
loop
pop
push
cmp
outsb
pop
add
cmp
mov
cmpsb
push
lods
outsb
ljmp
add
adc
pop
in
inc
jp
ja
mov
sahf
mov
cs
sbb
pop
xchg
xchg
stos
cmp
divl
leave
shlb
mov
les
cmp
inc
mov
test
icebp
xchg
je
push
iret
enter
push
lock
sub
aaa
xor
xchg
pop
mov
mov
mov
inc
clc
mov
ret
inc
lret
pop
decl
sub
mov
cld
imul
and
cmp
xor
cmpsl
cmpsb
xchg
arpl
call
cmpsb
insl
sbb
mov
adc
adc
sub
ljmp
jle
out
pop
mov
pop
xchg
fists
pop
inc
test
mov
jae
mov
inc
mov
lahf
cwtl
inc
cmp
sbb
addl
sub
arpl
inc
and
xchg
shl
pushf
sbb
ficoms
push
unpckhps
jl
jp
lods
sti
loope
les
sub
int
push
in
leave
jl
adc
sub
xchg
adc
adc
pop
push
inc
xor
jbe
fldt
xchg
in
xchg
mov
into
test
sahf
cmpsl
mov
jl
adc
xchg
js
dec
stos
cmpl
stos
xchg
sbb
or
cmp
lcall
test
xlat
cli
jge
mov
cmp
ficompl
adc
push
pop
aad
mov
or
ret
mov
int3
mov
dec
cmpsb
cmpsl
popa
out
dec
inc
xchg
add
xchg
scas
pushf
test
out
inc
or
and
sbbl
mov
jns
jl
cmp
imulb
mov
jg
xchg
std
sub
icebp
jns
je
pop
test
jae
clc
outsl
jp
sbb
mov
cld
xlat
rcl
sbb
sub
add
inc
test
lock
std
push
fs
mov
sub
movsl
push
out
jge
movsl
arpl
int3
es
shrb
sarl
lcall
mov
outsb
popa
nop
mov
add
push
inc
loop
divl
les
and
rcll
mov
push
adc
daa
sub
aam
mov
adc
mov
inc
pop
add
ja
cmc
dec
in
int3
mov
dec
and
jmp
jg
nop
daa
add
pusha
ret
cltd
fildll
leave
mov
adc
adc
loopne
lods
push
sbbl
iret
into
pop
mov
inc
lcall
sbb
pop
and
cmp
add
mov
rcrb
adc
sbb
inc
xchg
gs
pop
cli
mov
or
mov
nop
lock
ret
out
test
lods
iret
inc
in
pop
pop
daa
mov
movsl
bound
or
pop
inc
pop
cwtl
stos
adc
js
mov
call
int
ja
push
jg
andb
sbb
and
andb
cmpsb
das
setne
mov
popw
cmp
loopne
jle
adc
xchg
sbb
faddl
lahf
pop
mov
add
sbb
adc
ljmp
adc
mov
dec
add
sbb
fdivr
sub
scas
cmpsb
jl
xor
nop
loope
xor
jg
fsubl
rcrl
lret
sub
dec
fildll
dec
inc
or
xchg
add
adc
mov
and
outsb
xor
aam
sbb
inc
inc
loope
icebp
cmp
bound
dec
push
test
sbb
push
lea
mov
fstps
jg
pushf
adcl
xor
jp
pushf
or
das
leave
aad
enter
enter
push
shrb
xchg
mov
inc
jmp
add
pusha
sbb
arpl
lods
fs
and
and
xor
inc
mov
test
bound
test
cmpsb
or
inc
mov
sub
inc
add
sbb
test
xchg
jmp
mov
xchg
xchg
sarl
sbb
rcrb
bound
add
cwtl
jge
aas
es
popa
jg
xor
jb
movsl
and
sub
popf
xor
jbe
push
add
insb
xchg
in
pop
mov
rcrl
xchg
pusha
mov
sti
pop
rorl
loope
fimuls
jg
mov
sub
ret
out
icebp
xor
xor
xlat
shlb
mov
add
div
loop
iret
push
cmp
pop
lret
push
daa
pop
data16
dec
push
dec
test
mov
pop
xchg
iret
pop
inc
push
xor
sub
push
not
add
add
mov
in
out
or
lock
ret
ret
sub
jnp
mov
adc
hlt
sbb
inc
add
test
push
iret
add
jp
push
jmp
xor
mov
pop
sub
outsl
pop
sub
outsb
mov
fsubs
test
jmp
and
inc
pop
push
scas
js
push
data16
or
fstl
fcomps
cmp
mov
repz
jae
adc
jne
mov
fmull
add
or
and
xchg
daa
push
pop
idivb
add
dec
mov
mov
in
testl
clc
in
fsubrl
icebp
or
addr16
adc
inc
cs
add
jle
outsb
and
xchg
push
jne
push
mov
lret
lods
hlt
fsubrl
push
idivl
or
aaa
icebp
les
and
sbbl
push
sbb
inc
popf
cltd
jmp
ljmp
mov
xchg
cltd
cld
cmpsb
in
sbbb
add
xchg
inc
repnz
jecxz
sti
add
inc
test
jle
insl
decl
fists
sbb
pushf
push
outsl
cld
push
pop
scas
fstl
adc
cmpsb
adc
mov
dec
insl
test
stos
push
xchg
mov
push
lret
xchg
insl
sbb
out
adc
aaa
mov
clc
decb
sbb
leave
cmp
gs
fildll
lods
push
mov
jnp
sbb
mov
and
inc
mov
stos
lds
shrl
in
push
jp
and
imul
pop
push
mov
push
mov
jns
movsl
cmpsl
push
pop
fbstp
jp
mov
push
data16
icebp
clc
jmp
imul
sub
fwait
jge
test
enter
insl
stc
arpl
sbb
push
mov
and
mov
loopne
popa
sarl
pushf
out
fsub
mov
aaa
ficoml
ficompl
loop
iret
xchg
pop
mov
pop
xchg
mov
cmp
mov
cli
and
mov
jbe
arpl
in
mov
out
lret
mov
daa
dec
das
jg
pushf
stos
repz
pushf
pop
pop
cmp
mov
dec
push
andl
imul
fdivs
pop
dec
adcl
mov
sbb
je
popa
jl
scas
xorb
sbb
je
loope
std
push
mov
pop
sub
sub
or
adc
ss
mulb
pusha
add
jo
sbb
mov
loop
mov
cli
pop
fwait
pop
xchg
cltd
and
ja
dec
js
hlt
jno
xchg
nop
aas
shll
jnp
jge
ror
xchg
jns
xchg
mov
adc
lock
mov
adc
mov
sbb
mov
test
into
ret
inc
pop
sbbl
or
push
das
push
sahf
pop
insb
and
stos
or
pop
cmp
jmp
add
pop
dec
dec
test
cmp
sarb
int
mov
pop
ret
ret
ja
push
mov
inc
subb
or
pop
mov
iret
movsl
push
xor
and
jne
inc
fldcw
adc
push
inc
sarb
mov
or
enter
data16
pop
sbb
sub
push
imul
xchg
pop
push
xchg
xor
stc
in
mov
xchg
aas
sub
decb
jne
sti
lret
sub
fistps
mov
pop
sbb
icebp
sub
enter
je
fmull
push
add
stos
addl
mov
jns
pop
mov
bsr
add
scas
add
or
mov
stos
and
push
jne
sub
hlt
dec
xor
ds
dec
es
xchg
call
adc
sub
jge
call
push
push
and
cmp
xchg
ss
out
ja
xchg
or
xor
in
mov
jns
pop
pop
pop
mov
lea
stos
imul
mov
outsl
in
mov
xor
icebp
mov
or
mov
hlt
push
sub
mov
pop
jmp
sbb
pop
lock
push
aaa
and
push
sub
xchg
js
cltd
mov
add
cmp
xor
mov
gs
sub
xor
mov
and
cwtl
nop
addr16
adc
lods
or
add
outsl
test
nop
insb
out
pushf
adc
les
adc
jns
xor
add
push
test
stos
int
shlb
pop
mov
push
jp
sub
cmpsb
lcall
mov
in
mov
xchg
mov
and
sbb
mov
cwtl
lcall
shlb
pop
mov
push
fcmovbe
mov
jnp
test
in
addr16
xor
jno
imul
pop
repnz
daa
imul
loopne
stos
jg
rcrb
lret
mov
fisttps
jge
add
inc
out
push
nop
andl
out
sub
inc
adc
dec
push
cmp
outsb
imul
mov
add
movsb
cmp
cmp
loopne
xor
test
sahf
fstps
dec
sbb
arpl
ret
mov
pop
add
or
ja
mov
jl
outsl
shll
lods
cmp
adc
add
lcall
into
sti
mov
lds
push
stos
ret
sub
dec
or
dec
cmpsl
jne
lods
sub
int
addr16
and
insl
adc
in
rorl
sub
cmc
ret
std
cmp
xor
in
sbb
pop
adc
xor
aaa
mov
push
xor
or
xchg
out
sbb
rcrl
push
pushf
fucomp
call
pushf
cltd
lret
xchg
cwtl
sti
mov
adc
sbb
jmp
int3
ror
add
movsl
dec
sbb
adc
pop
dec
rcrl
fwait
cmc
outsl
in
aaa
testb
dec
adc
mov
inc
dec
roll
pop
mov
jg
stc
jnp
or
xor
or
xor
sbb
movsb
sbb
xchg
negl
dec
dec
gs
pusha
push
loop
out
int3
xchg
jnp
and
push
pop
push
into
popf
insl
inc
popf
jmp
push
lock
std
lahf
xlat
int
mov
arpl
sbb
sbbb
adc
sub
cmp
sbb
jge
mov
scas
pop
xchg
int
rcrb
loope
push
cs
enter
push
dec
dec
mov
xchg
xlat
adc
cwtl
test
test
jmp
cmpsb
push
out
lock
int3
cmp
daa
adc
adc
pop
call
nop
movsb
sbb
scas
pop
in
xchg
sar
xchg
and
imul
call
pop
xchg
aas
xor
xor
lock
ds
adc
dec
ja
imul
add
les
inc
inc
outsb
sub
or
dec
aad
push
enter
cmp
lea
mov
cmp
jg
push
jb
insl
shrl
xchg
jge
pop
mov
ret
lods
sub
push
ds
es
push
dec
aad
mov
insb
out
cwtl
cli
jnp
pusha
ss
pop
inc
adc
or
adc
push
in
mov
cli
mov
xlat
lret
fbld
lods
lret
pusha
movsl
pushf
push
pop
into
mov
mov
jp
sbb
incl
inc
mov
xlat
inc
jge
mov
pop
faddl
or
or
data16
flds
test
cmp
std
bound
mov
xor
mov
sub
into
cmp
xchg
sbb
stos
adc
mov
pop
cld
in
jge
inc
push
shll
push
cmpsb
or
inc
les
pop
pop
imul
leave
mov
mov
cltd
dec
cld
movsl
adc
lea
cld
icebp
aaa
cmp
mov
mov
js
push
icebp
je
add
std
icebp
cmpsl
sti
jp
mov
scas
adc
inc
orb
jnp
push
addr16
push
xor
movsl
inc
dec
pop
push
xchg
xchg
add
out
mov
inc
fdivs
sbb
cmp
dec
jg
lahf
jae
iret
adc
mov
mov
jo
stos
lods
or
pop
xchg
fldcw
faddl
nop
jno
mov
gs
mov
push
mov
cwtl
shl
cmp
addr16
cmp
dec
nop
movsl
in
fsubrs
fsubs
cmp
inc
je
shl
or
out
sbb
xor
insb
loop
addr16
inc
jecxz
and
stos
mov
call
insb
into
ss
ljmp
xchg
sbb
sub
out
nop
xor
and
sub
pop
sbb
or
pushf
mov
bound
ja
lcall
inc
xchg
jmp
sbb
rorl
dec
sbb
outsb
add
das
push
in
lods
sahf
ret
and
add
outsl
pop
stos
stos
ret
fistpll
negl
dec
loop
xor
test
xor
cmpsb
mov
mov
xchg
les
or
xchg
xchg
in
jbe
pop
idivb
sub
cmp
in
incl
push
out
pop
dec
test
sub
or
xchg
pop
sbb
lcall
test
ret
mov
pop
shlb
inc
xor
data16
mov
lahf
mov
xchg
clc
push
aas
mov
js
idivb
xlat
push
bound
gs
add
sbbl
ffreep
cmp
xchg
int
pop
sbb
inc
adc
inc
xchg
mov
pop
in
push
or
jo
xor
xchg
rcr
sub
in
lret
loopne
dec
repnz
jnp
and
cmpsl
loopne
mov
add
sbb
inc
daa
dec
xchg
fmull
cs
mov
pop
mov
test
sbb
add
or
test
adc
pop
xchg
or
fnstcw
bound
and
mov
jnp
jbe
xor
or
xchg
xchg
mov
orl
push
xlat
jp
repz
fadd
mov
pop
cmpsl
sub
stos
stos
push
or
mov
and
add
pop
lods
subb
cmpl
add
xchg
mov
pusha
addr16
or
fstps
inc
imul
or
jns
cmp
jns
xor
fcmovu
xchg
mov
leave
inc
xchg
push
ret
jmp
add
and
push
cltd
shll
lahf
xchg
fdivrp
add
inc
jecxz
xor
call
dec
sbb
gs
mov
arpl
jg
xchg
mov
pop
into
mov
cmpsb
inc
inc
sub
push
repnz
fnstcw
jg
jb
xchg
fildll
mull
xlat
inc
arpl
jecxz
adc
inc
repz
cmpl
pop
inc
dec
mov
fildl
or
sbb
xor
add
xchg
out
std
scas
les
mov
mov
inc
dec
add
pop
pushf
addr16
mov
je
iret
push
sub
mov
mov
lcall
mov
mov
mov
sbb
dec
push
lahf
stos
jecxz
loope
xor
xchg
mov
lock
inc
mov
in
imull
pop
push
popf
in
lcall
cmpsl
fcom
or
mov
sarb
fs
sub
lds
mov
popa
movsl
adc
jne
cmp
aas
gs
imul
aam
cmpb
mov
xor
stc
xor
das
cmpsl
pop
adc
test
sbb
ds
push
xlat
pop
jo
push
sbb
dec
scas
int
pop
mov
out
and
int
push
jle
adc
loop
fdivrp
add
shlb
dec
movsb
mov
nop
imulb
shlb
into
lods
xchg
bswap
lret
lds
outsb
or
fs
cli
in
cmp
lods
fisubrs
cmpb
or
xchg
push
aaa
fsubrl
rcr
lock
addl
aas
jl
ds
stos
dec
test
mov
inc
sar
sub
pop
sti
inc
fstps
jns
ror
outsb
mov
push
mov
lock
add
cmove
inc
dec
jg
or
pop
movsl
movsl
push
inc
inc
jae
add
shlb
mov
jl
lret
xor
sub
leave
idiv
or
cld
jns
pop
inc
ret
mov
lods
add
push
ret
loopne
in
test
and
xchg
lcall
or
movsl
cmp
cld
adc
and
jp,pn
mov
xchg
pop
add
or
imul
daa
hlt
ds
mov
in
jnp
arpl
cmpsl
jp
fcmovnu
add
cmc
cmpsl
mov
adc
aas
xor
dec
sbb
mov
xor
mov
lds
or
test
adcb
add
dec
and
sbb
mov
add
dec
push
pop
push
hlt
in
push
push
sbb
in
jmp
pushl
gs
push
add
push
mov
cli
insl
sbb
sahf
xchg
loopne
pop
and
enter
and
jl
push
adc
leave
mov
push
inc
leave
adc
ss
sbb
xchg
scas
loope
or
cmp
int
pusha
fwait
xchg
pop
sub
mov
xchg
adc
mov
adc
inc
loope
and
jg
lret
pop
mov
filds
cmp
je
mov
data16
test
sub
dec
cld
insl
mov
cli
adc
sbb
or
xor
pop
icebp
in
aam
int
sbb
sub
clc
mov
cwtl
xchg
add
dec
cmp
push
cmp
xchg
jbe
call
cmp
inc
pop
aam
std
rcl
inc
dec
jmp
sbb
push
insb
cmpsb
xor
adc
nop
mov
int
andnps
xor
stos
or
dec
imul
mov
cwtl
repnz
push
dec
sahf
and
test
push
in
in
push
aad
nop
sub
stc
test
jo
ljmp
push
and
sbb
pop
adc
imul
sbb
pop
faddp
stos
sbb
and
dec
xchg
mov
or
xor
mov
arpl
mov
stc
jb
or
stos
jns
sbb
sub
xchg
inc
jns
or
addb
inc
sbb
inc
aam
sub
in
test
cli
add
hlt
jnp
es
mov
cmp
add
push
adc
loop
int
jge
subb
sbb
in
arpl
lea
mov
ja
dec
jb
sbb
popa
daa
pop
or
add
push
mov
push
leave
aad
adc
sbb
pop
add
lds
gs
out
mov
ss
sbb
fs
testl
stos
mov
xor
xchg
push
lds
mov
int3
imul
paddusw
das
sub
mov
dec
lock
xor
jb
lcall
loop
popa
testb
leave
pop
cmp
jecxz
out
outsl
push
or
inc
aaa
icebp
mov
lahf
rol
sbb
mov
mov
jecxz
add
or
fmul
ficompl
adc
stos
mov
insl
mov
ss
or
lret
movsb
xchg
dec
jle
pop
push
adc
dec
out
ret
sti
in
sti
and
test
mov
shll
mov
repnz
cmp
es
out
aaa
enter
cmp
andb
test
mov
test
push
mov
nop
call
into
sbb
aas
sbb
add
push
jmp
jb
adcb
add
jl
mov
es
jge
ss
inc
xchg
pop
je
mov
mov
insb
bound
pusha
adc
es
dec
xor
mov
cltd
nop
stos
inc
pop
loop
shrl
icebp
mov
cmp
dec
ja
int
jmp
cmpsl
xchg
rorb
out
xchg
xchg
push
sub
jmp
pushf
shlb
stos
repz
iret
mov
sbb
sti
dec
test
test
cwtl
jb
push
and
gs
in
xchg
cli
push
in
popa
mov
cmp
ficompl
xchg
xchg
jns
cwtl
sbb
addr16
and
fisubl
lcall
dec
popa
mov
or
insb
les
and
inc
push
cmp
lret
out
mov
add
dec
jns
pop
add
mov
rcll
xchg
je
out
lods
or
mov
or
add
cmp
push
out
jmp
add
jecxz
sbb
cltd
das
or
repz
jl
mov
and
inc
aaa
ljmp
push
icebp
fiadds
mov
ror
jge
xlat
fadd
and
push
movsl
shlb
imul
stos
cmp
fs
flds
mov
pop
xor
test
rcrb
aad
pop
mov
jg
and
push
and
imul
clc
int3
int
mov
push
xor
jo
js
ljmp
push
push
pop
pop
dec
add
es
push
add
out
fs
pop
xor
sub
xor
das
sub
jge
in
mov
xlat
scas
les
adc
sbb
mov
ds
insb
or
push
sbb
ret
jg
mov
sub
inc
pop
movsb
icebp
dec
jp
mov
lods
arpl
or
or
fdivl
sarl
ds
cmpsb
lods
in
xchg
inc
xchg
add
out
cs
sub
adc
cs
test
in
data16
int3
pushw
cmp
flds
nop
and
jg
sbb
xor
adc
xor
xchg
in
or
int
inc
pusha
ljmp
in
mov
rcrl
fdivrl
push
mov
into
iret
jecxz
dec
rolb
or
cld
xchg
movsl
into
sub
mov
mov
pop
aas
ja
sbb
push
aad
bound
je
push
pop
data16
imul
ljmp
adc
lret
push
jae,pt
lods
pop
and
dec
jg
adc
ret
fildl
out
mov
out
iret
out
in
mov
sub
fs
lahf
test
sahf
shrl
addr16
xchg
lock
or
inc
cmp
inc
testb
xor
outsl
les
cwtl
popf
jecxz
xlat
mov
test
das
ret
xor
mov
dec
andl
xchg
adc
addr16
jb
xchg
jp
inc
mov
shr
xor
out
cmpsb
std
push
lret
ss
es
add
insb
enter
test
test
dec
sahf
lds
push
mov
fsubrl
lock
mull
xor
cmp
scas
je
dec
add
sahf
outsl
lds
mov
add
mov
cmp
pop
mov
shll
testl
push
pop
xchg
lds
repz
xor
xorl
or
cmp
push
ss
aas
iret
mov
add
push
inc
dec
pop
xchg
xor
fs
icebp
in
fldcw
enter
pop
xor
sbb
push
sbb
in
add
fxch
xor
fucomi
inc
cmpsl
mov
shlb
mov
push
mov
xchg
or
gs
or
xchg
sbbl
leave
mov
add
add
dec
scas
cmpsb
hlt
xor
call
cmpsb
mov
adc
pop
xor
mov
add
jge
jbe
mov
xor
push
xchg
mov
popa
xor
pop
fldt
add
mov
and
test
enter
orb
sbb
sti
fidivrl
cli
ja
subl
xorl
jp
mov
mov
pop
jno
mov
mov
xor
es
inc
xchg
and
jmp
call
bound
out
shr
stc
or
pop
push
iret
sub
dec
dec
push
fbld
dec
lds
xchg
push
mov
push
cmp
test
cwtl
push
or
mov
lcall
iret
lret
push
out
add
dec
xchg
add
or
rcr
jle
mov
movsl
rcr
xor
jge
cmp
lret
xor
cs
adc
mov
cli
cs
jnp
addb
xor
aaa
push
jbe
mov
nop
stc
rcll
fisttpll
das
xor
scas
and
lcall
outsb
cmp
sarb
scas
mov
movsb
pop
push
sbb
dec
mov
not
dec
cli
out
pop
push
mov
gs
lcall
std
test
popf
pop
mov
fbstp
mov
add
xchg
xor
sbb
mov
mov
pop
dec
fisttps
inc
testb
hlt
adc
adc
stc
call
mov
add
adc
imul
mov
movsb
xchg
push
sti
dec
add
mov
cwtl
add
dec
std
stos
mov
cmp
je
lret
push
jp
cs
sbb
adc
push
xchg
xchg
add
or
add
push
inc
clc
push
movsb
mov
loop
rcr
xchg
aam
js
jp
sub
sub
sbb
xchg
cmp
dec
sahf
lcall
cmpsl
or
leave
pop
inc
and
mov
xchg
aas
imul
sub
push
sbb
iret
pop
cli
sbb
dec
add
xchg
mov
xchg
sbb
sbb
pop
dec
daa
jge
out
ja
and
xchg
pop
push
pop
mov
ret
pop
xlat
lds
lret
addb
lahf
push
xchg
movsl
imull
shrl
sub
clc
int
cs
or
jae
mov
mov
inc
xor
and
mov
lea
and
add
jb
sub
push
push
push
add
mov
mov
add
andl
notb
pop
clc
jnp
lret
les
jb
idivb
lods
jnp
pop
xchg
decb
cmp
inc
cs
mov
sbb
loopne
sub
lock
mov
jg
cld
push
dec
cmc
xor
mov
ret
cmpsb
sub
aaa
fisubl
into
push
cwtl
jg
and
sbb
xor
ss
xor
jge,pn
mov
loope
arpl
dec
add
cld
mov
test
sbb
cs
jge
lcall
xchg
push
lds
and
je
mov
sti
mov
outsl
or
outsl
xchg
cmp
testb
adc
lahf
mov
fiaddl
cmpb
jno
sub
into
into
mulb
push
inc
add
mov
push
loope
adc
data16
xor
dec
adcb
fld
sub
inc
pop
mov
push
inc
dec
jge
outsl
mov
cld
push
movl
sub
pusha
dec
inc
clc
lock
out
push
mov
xor
aaa
or
lret
lods
dec
push
jns
test
loopne
fidivrs
call
pop
dec
repnz
lds
fxch
stos
leave
cwtl
lods
sbb
cmp
mov
sar
lods
sub
daa
sub
cmp
test
jno
aam
in
jne
add
dec
stos
sbb
aaa
das
mov
pop
dec
lret
fs
sbb
jl
std
add
mov
mov
cli
mov
repnz
fcomps
pop
xor
ljmp
cld
cmp
or
cltd
xchg
pushf
call
dec
xchg
xor
mulb
and
fcomps
cmp
lahf
stos
sub
xchg
mov
jmp
fisubs
xchg
out
or
pop
stc
cmp
ja
data16
push
sahf
mov
push
stos
mov
repnz
js
push
adc
iret
jns
dec
frstor
dec
pop
notl
adc
jle
push
or
mov
and
and
daa
xchg
push
out
cmp
sbb
xor
lea
enter
mov
jbe
mov
lock
and
popf
push
inc
shl
fcmovbe
aas
xchg
and
ret
enter
dec
add
jecxz
cld
rorl
rcll
mov
cs
addps
filds
into
pop
shll
cs
ss
rcrb
subb
xchg
mov
lcall
pop
in
out
imul
test
scas
jo
ljmp
sub
push
pop
into
daa
add
ljmp
push
push
xchg
das
adc
mov
pop
imul
test
daa
push
test
lds
mov
js
loop
cmc
sbb
in
xorl
mov
movsl
in
bound
rol
sub
mov
and
adc
add
out
nop
cmp
xor
mov
dec
fldenv
xor
xchg
adc
testl
push
ret
sbbl
rorb
mov
enter
xlat
dec
mov
aam
push
dec
mov
or
iret
mov
mov
aas
jno
ljmp
insb
mov
cmpsb
sbb
enter
pop
fmuls
mov
dec
cmp
sahf
push
ss
pop
push
stc
lea
stos
icebp
mov
fs
test
sub
cmp
shll
dec
loopne
sbb
and
and
xchg
movsl
scas
rcrb
sbb
enter
pop
xor
fs
xor
cmp
std
mov
and
cwtl
fiadds
pushf
pop
mov
jl
out
sub
inc
in
loop
fisttpll
mov
mov
adc
int
out
jmp
repnz
mov
rorb
xor
aaa
mov
imul
loop
pop
dec
add
clc
ja
lock
inc
lahf
mov
psrad
pop
cmp
je
adc
lahf
rcl
sbb
pop
lret
xchg
dec
inc
rcrb
daa
jo
insl
repnz
ret
ffreep
iret
and
loope
mov
cld
inc
scas
loope
inc
mov
loop
xchg
repz
and
adc
pop
jge
xor
sti
xchg
iret
out
adc
loope
xchg
or
push
add
mov
inc
cwtl
test
das
cmp
mov
add
loop
rcrb
sarb
js
cltd
push
hlt
mov
sub
sbb
push
or
lods
andl
pop
les
dec
inc
dec
xlat
movsl
lcall
mov
stc
adc
js
imul
fistps
into
popf
es
mov
nop
jb
mov
mov
fcomps
jecxz
lea
cmpsl
mov
outsl
sbb
and
cld
outsl
mov
sub
scas
inc
add
fs
adc
int
xchg
add
mov
adc
push
jb
cltd
hlt
sub
pusha
or
gs
jb
sbb
dec
jnp
jecxz
xchg
or
xor
mov
xchg
push
jae
inc
fidivrl
int3
inc
inc
sbb
iret
repz
sub
or
addr16
xchg
add
sub
andl
sbb
dec
xor
imul
mov
test
jg
add
push
dec
push
pushf
mov
jl
pop
jmp
in
jmp
ds
js
test
and
mov
stc
xchg
loop
add
mov
data16
ret
inc
xchg
mov
xor
jl
ret
imul
push
in
lret
iret
jno
ja
cld
mov
test
cld
addr16
test
inc
jge
jb
push
cmp
cmp
inc
loope
mov
je
shlb
xchg
cli
pushf
jmp
jb
imul
inc
int
jbe
stos
out
push
jmp
jp
or
into
stos
cmpsl
add
fwait
int
add
btc
lea
lahf
jmp
les
mov
dec
cmp
add
or
in
cmpsb
in
subl
in
sti
hlt
ret
pop
jle
lods
mov
mov
scas
imul
das
sti
inc
jmp
lret
mov
xchg
mov
imul
movsl
xchg
jmp
stos
out
mov
pop
aam
dec
pop
dec
inc
add
mov
push
test
ljmp
cmpsl
adc
popf
mov
push
addr16
xchg
adc
dec
pop
ds
xor
sti
enter
pushf
outsl
in
push
lret
mov
jb
mov
lahf
sbb
lret
xor
ss
jo
lahf
scas
xor
push
psubsb
push
xor
test
lea
shrb
sub
xchg
fisubs
and
into
mov
je
push
lds
jp
sbb
inc
lods
sbb
mov
pop
jmp
push
cwtl
mov
aas
and
loopne
xchg
lret
ret
mov
int
divl
dec
mov
je
movsb
test
ret
or
call
in
pop
pop
dec
mov
in
jl
push
les
movsb
or
or
xorl
jge
mov
xchg
not
into
pop
pop
daa
mov
push
cvtps2pd
sub
pop
add
mov
sub
pop
xor
xchg
push
push
insl
out
lret
mov
pop
pop
push
lret
cmp
mov
sahf
xorb
push
sub
cltd
clc
xchg
sub
sub
mov
mov
ss
fnstcw
shr
loope
cmp
mov
add
sbb
jmp
lods
iret
insl
xchg
arpl
pop
stos
aad
loope
inc
mov
mov
out
push
and
inc
sqrtps
add
fldenv
xor
adc
mov
add
test
adc
jbe
in
or
ja
test
lahf
in
ja
lock
std
and
xchg
sub
out
xchg
pop
sarl
imul
adc
or
xor
loopne
mov
insl
lods
fucomip
or
jmp
jmp
fwait
push
dec
in
fwait
dec
xor
out
loope
mov
insb
cli
xor
je
mov
inc
setge
add
jl
fmull
mov
sbbl
xchg
pop
rcr
test
cmpsl
lret
cwtl
insl
jno
movsb
pop
or
jmp
int
data16
insl
mov
adc
stos
push
dec
or
or
loop
mov
sub
dec
mov
repnz
lods
jl
dec
sbb
jnp
push
imul
roll
mov
incb
in
stc
rcr
push
lods
mov
push
cmp
mov
sub
adc
jmp
movsl
add
jle
and
fmuls
adc
sub
je
mov
xor
ret
mov
ljmp
lahf
sahf
mov
loope
repnz
sbb
xor
fsubrs
add
inc
call
mov
xchg
aam
imul
mov
adc
push
icebp
popf
cmpsl
cmc
loope
xor
arpl
add
fincstp
mov
sbb
movsl
adc
add
in
mov
repz
das
mov
testb
xor
and
stos
adc
xchg
xchg
adc
dec
cmpsb
out
sahf
cltd
divb
lret
popa
inc
xchg
or
les
or
and
repz
into
add
addr16
cmp
outsl
stos
repnz
idiv
ret
test
sbb
sbb
lock
add
adc
cmp
xchg
aas
gs
pop
out
lea
pop
mov
rorb
adc
sti
mov
add
mov
adc
cli
in
inc
ljmp
jp
std
enter
inc
ja
adc
sub
xchg
push
popf
jl
cli
pop
sub
push
roll
popf
jb
gs
cmpsl
mov
xlat
dec
cmp
adc
push
cs
add
test
mov
sub
sbb
xorl
bound
adc
cmp
cwtl
mov
repnz
inc
dec
push
jbe
aam
gs
ret
fwait
adc
mov
jg
into
mov
xchg
push
dec
mov
or
enter
aaa
inc
pop
stos
xor
push
das
jmp
adc
xchg
ficoms
outsl
sbb
mov
dec
rcl
mov
sub
lds
int
jne
sub
or
inc
xor
test
dec
push
out
mov
leave
nop
testb
in
pushw
stos
add
ljmp
push
or
iret
sbb
nop
mov
fsubr
ffree
lods
jne
std
pop
pop
xor
shll
cmp
scas
sub
mov
dec
das
popf
jle
stos
inc
shlb
out
jne
div
xchg
cmpsb
and
rolb
jne
test
shrl
nop
outsl
xchg
lods
decb
ret
mov
dec
push
and
ret
aas
adc
mov
xor
repnz
add
mov
je
andb
mov
xchg
and
push
frstor
gs
out
sahf
ja
test
in
mov
sbb
int3
or
mov
into
cld
fdivl
lcall
sbb
out
mov
clc
dec
ja
lret
ficompl
cmp
fwait
and
pusha
stos
popa
xchg
lods
stos
and
insb
add
rolb
mov
mov
xorb
aaa
sbb
and
cmp
sbb
addb
push
dec
mov
and
jne
xchg
push
out
pop
icebp
ret
cs
or
xchg
leave
sub
push
push
mov
jns
movsb
lds
sbb
pop
call
out
inc
mov
cltd
xchg
outsb
cmp
jbe
cmp
lods
or
xchg
data16
dec
sbb
test
sub
loope
and
out
and
popa
fmuls
rorl
sbb
pusha
jg
lahf
sbb
mov
jmp
inc
ss
pop
ficoml
daa
in
mov
lds
push
sti
sub
mov
push
mov
mov
ret
cli
mov
mov
rolb
mov
clc
es
jge
xchg
loopne
inc
cmp
testb
pop
sbb
outsb
std
and
jno
mov
or
mov
lds
jo
add
cmp
ljmp
icebp
fs
cld
sub
mov
call
add
dec
xor
push
cmp
xor
sti
fildl
fimull
pusha
ret
mov
or
push
lahf
sbb
lret
or
ficoms
push
add
pop
addr16
add
imul
push
cmp
push
in
pop
lcall
stc
lods
xchg
jns
in
xor
stc
cwtl
inc
pop
add
in
mov
sbb
ffree
mov
popf
xchg
adc
std
stc
push
cmpsl
sti
jo
sbb
dec
outsl
int3
ja
inc
in
lcall
fcoms
shr
or
mov
bound
add
push
mov
stos
xchg
std
cmp
or
aam
stc
shrb
test
shll
jecxz
out
xchg
in
inc
push
hlt
mov
jge
repnz
push
xlat
addl
jae
js
mov
mov
jne
mov
enter
mov
push
sbb
jmp
test
fstl
adc
iret
movsl
cmp
pop
jb
imul
out
push
ja
push
mov
dec
xchg
sarl
aam
aam
lcall
into
mov
mov
popa
int
leave
mov
and
xor
xor
test
push
inc
cmpsb
stos
mov
in
cmp
out
test
pop
mov
pushf
loope
in
jnp
int
inc
xor
cmp
push
insb
arpl
mov
mov
push
jno
shll
outsl
pusha
cmpsl
sub
movsl
cmp
inc
dec
arpl
jecxz
add
inc
inc
aaa
push
dec
and
pusha
bound
inc
and
or
scas
jnp
ss
jp
or
ja
stc
icebp
push
sbb
cmp
add
and
push
in
adc
sub
dec
cmpsb
insb
mov
cmp
jbe
sub
push
in
mov
mov
cmp
push
repz
ret
lods
or
rcrb
in
insl
cwtl
push
rcll
cltd
dec
xchg
in
repnz
je
outsl
insb
add
das
mov
mov
call
sub
xchg
xchg
jge
hlt
mov
or
rcrl
jae
jp
out
outsb
mov
mov
push
incl
push
add
or
in
clc
xchg
pop
test
jbe
mov
sub
jecxz
in
sbb
sub
addr16
scas
push
and
push
and
sub
add
add
pop
mov
out
xor
das
mov
mov
repz
mov
rcll
lea
mov
lret
add
jecxz
cmp
test
outsl
sub
cmp
jl
and
and
faddp
mov
mov
fwait
sbb
mov
aad
out
add
addr16
inc
test
decl
dec
xchg
jmp
std
pop
mov
mov
stc
scas
rclb
ret
imul
inc
insl
push
dec
push
mov
jl
stc
or
xchg
fwait
scas
sbb
inc
scas
fidivrs
dec
rol
loope
jl
inc
dec
js
iret
cmp
mov
testb
ja
into
mov
or
fmul
stos
cld
popa
repz
xor
int3
cmpsb
jg
dec
inc
and
jg
pop
es
pop
pop
aad
sti
or
mov
aam
fcmovne
pop
dec
ljmp
sub
ror
movaps
jle
testb
pop
fisttps
jl
mov
jl
xor
cltd
addl
incl
cmpl
inc
shll
sahf
cmc
sahf
push
in
aas
ret
mov
adc
inc
dec
sbb
stos
jnp
xor
lods
notl
sbb
in
sub
aad
movsb
mov
xchg
ret
jp
add
adc
out
pop
in
lods
popa
sbb
push
mov
inc
or
push
push
xor
dec
xchg
xor
dec
jle
cltd
mov
add
push
jge
xchg
add
sub
cli
cmp
arpl
sarb
mov
sub
mov
int3
push
cwtl
mov
sbb
and
popf
mov
ja
rorb
decl
clc
mov
xor
ficomps
pop
xlat
xor
jp
leave
mov
dec
mov
stc
gs
ja
push
cmc
mov
insb
mov
pop
push
outsl
sbb
fdivr
adc
dec
jbe,pn
or
sti
cmp
loop
daa
cld
or
push
stos
mov
push
mov
mov
mov
test
movsb
jge
sub
ror
mov
push
into
outsb
aaa
lret
loope
int
push
lret
sbb
xchg
lods
mov
in
mov
outsl
push
and
adc
mov
or
push
inc
cmp
xchg
and
test
mov
xchg
mov
popl
fildl
shl
es
jge
mov
inc
pop
in
scas
push
xchg
and
xchg
pop
push
enter
lods
loopne
mov
adc
dec
sub
fstpl
dec
aad
loopne
adc
stos
fs
push
gs
nop
mov
pushf
cwtl
push
pop
cli
cmpsb
imul
int3
sbb
int3
lahf
cmpsl
adc
xor
iret
std
cmpl
nop
sub
loop
mov
js
and
jbe
inc
pop
sub
adc
sbb
push
fcomp
aaa
sub
in
push
push
lods
mov
loope
daa
popa
push
mov
push
push
nop
or
ljmp
mov
inc
pop
pop
sub
mov
leave
mov
out
adc
std
pop
ljmp
ficoms
repnz
xor
add
or
out
and
cmp
mov
stc
sbb
dec
lods
ja
shl
lea
or
mov
jo
test
ror
sub
test
movsl
xchg
js
add
sub
jmp
add
adc
cmc
lods
aas
mov
push
push
jbe
push
sbb
notb
lods
xchg
cld
jne
aaa
jae
mov
sbb
adc
xor
jae
outsl
mov
xor
jns
mov
adc
mov
loop
lcall
lods
push
jo
push
popf
and
dec
test
adc
cmp
test
push
add
bound
xorb
cmp
mov
test
leave
jnp
nop
mov
incb
mov
shlb
lds
ljmp
test
jge
add
leave
fmull
sti
mov
mov
and
pop
leave
in
adc
lods
pop
xchg
and
enter
in
sbbl
clc
ret
das
xchg
xor
push
adcb
sub
fisttpll
mov
push
movsl
and
jecxz
mov
push
cs
mov
or
mov
jnp
aam
gs
scas
push
clc
jo
mov
adc
xchg
lcall
sbb
lcall
adc
push
in
add
pop
pushf
fwait
lret
adc
mov
dec
test
mov
add
cmpsl
mov
stos
push
int3
cld
fnstcw
lds
mov
jecxz
cli
clc
push
cmp
jo
call
xchg
xchg
cs
sub
icebp
adc
outsl
movsl
and
and
sbb
or
inc
out
stos
pop
inc
adc
xor
fadds
bound
or
and
and
jns
in
test
outsl
test
jle
mov
fldt
outsb
dec
scas
cs
mov
lods
cmp
pusha
das
sub
cmpsl
pop
or
cmp
dec
push
mov
hlt
xchg
cld
mov
lret
lahf
shlb
inc
je
pop
ss
push
mov
daa
lret
cltd
popf
jns
cwtl
mov
pop
xchg
shll
loopne
jo
dec
lahf
xor
xlat
jecxz
jbe
test
out
jle
stos
mov
push
lods
or
jecxz
adcl
mov
dec
loope
sub
dec
mov
jecxz
mov
je
inc
adc
fcmovne
ret
lahf
mov
or
add
icebp
cli
inc
addb
sbb
cmpsl
dec
pop
mov
add
addr16
dec
and
out
inc
dec
sbb
jle
aad
lahf
fdivl
pop
fcomi
dec
sub
insb
ret
orb
sbb
das
add
lock
fwait
push
adc
add
inc
loopne
mov
jb
sub
sti
jecxz
xchg
and
lods
inc
add
fiaddl
or
pop
dec
ds
repz
pop
imul
fimuls
xchg
ret
shl
test
sub
adc
push
mov
mov
dec
adc
fwait
push
adc
inc
inc
je
test
adc
pop
in
jle
ss
test
int3
movsb
sti
mov
add
mov
xor
clc
push
push
ds
cmc
inc
cmpb
jae
push
and
test
pop
lahf
lods
lods
aam
cltd
int3
stos
and
lods
test
mov
int
es
imul
cmp
mov
ficoms
sbb
inc
xor
fisttpll
cmp
cs
cwtl
ss
push
sub
lock
mov
test
sarb
cvtps2pi
sub
jp
mov
ficoml
mov
jns
in
xchg
outsl
push
cmpb
push
pop
add
add
and
push
imulb
dec
pop
fcoms
pop
popa
push
test
cmp
jns
aaa
sbb
jl
inc
or
lods
addl
push
sub
stos
xchg
or
or
cmpsb
inc
sti
dec
in
movsb
je
in
push
push
adc
adc
xchg
rcrb
sar
les
pop
cmpsl
pop
in
les
mov
mov
ret
loopne
cmpsb
push
adc
cmpsb
jae
mov
jnp
push
cmpb
addr16
mov
arpl
adc
jg
push
pop
movsb
sub
xor
xchg
loop
mov
push
ret
orb
out
insb
sub
icebp
mov
rclb
xor
and
std
sti
jp
aas
stc
sahf
sub
stos
scas
js
pop
stc
xor
mov
and
xor
xchg
add
xor
mov
pop
stc
mov
pop
sub
sti
test
cmp
movsb
add
insl
inc
dec
add
and
mov
prefetch
fsubrs
mov
cld
ja
dec
in
popf
mov
enter
je
push
dec
xchg
out
push
jb
shlb
hlt
push
jp
lcall
pop
outsb
mov
dec
or
sub
mov
popf
lret
jge
les
arpl
movsb
jb
jle
sbb
jmp
in
in
push
aaa
sub
mov
aas
fstpl
stos
mov
cli
jns
dec
push
jge
cmp
addr16
jmp
test
ret
ret
and
fldenv
push
fsts
jl
push
mov
mov
mov
call
cmp
mov
andl
pop
fisubrs
jge
add
sbb
and
xor
sub
add
lock
sbb
popf
fwait
aaa
cs
rorl
ret
jno
aad
dec
fwait
lods
out
mov
xchg
outsb
call
std
push
dec
add
add
xor
repz
addb
xor
lret
in
push
mov
mov
and
das
mov
mov
pop
add
xor
fsubrs
push
cmc
in
lds
push
mov
mov
fildl
xchg
aam
or
jp
les
int
rclb
icebp
test
into
in
sbb
sahf
sbb
ljmp
imul
repnz
call
lock
daa
lret
mov
cmp
push
movsl
cmpl
adc
rep
out
dec
lods
dec
jbe
pop
dec
sbb
aaa
hlt
outsl
xor
popa
movsl
stc
cmpsb
xchg
adc
bound
out
scas
leave
xchg
lret
in
sbb
sub
mov
test
js
hlt
push
mov
cmpl
mov
dec
outsb
icebp
pop
repz
rcll
sub
dec
cmp
andb
lcall
adcb
aam
rclb
int3
mov
test
xchg
mulb
push
and
mov
cmp
mov
enter
pushf
aad
xchg
pop
test
cmp
jnp
popa
sub
and
repz
inc
push
insb
pushf
rcll
scas
dec
in
xor
or
ds
sub
sbb
das
lahf
sub
sbb
mov
push
mov
dec
and
push
dec
jecxz
jecxz
push
mov
xchg
push
jo
or
out
je
jp
push
cmc
fwait
std
aad
push
imull
jl
stc
pop
xchg
cld
adc
push
sbb
lahf
push
imul
addr16
insl
xor
mov
fcompl
or
cwtl
push
push
and
xchg
inc
mov
arpl
jnp
mov
bound
pop
push
fstl
jle
les
js
int3
jecxz
inc
xorb
jg
and
cmp
add
pusha
or
scas
jl
adc
subl
outsb
stos
inc
or
sub
in
pushw
cmp
sbb
adc
or
testb
cs
jbe
adc
iret
popa
je
jp
loope
inc
imul
and
lods
dec
je
arpl
mov
inc
inc
stos
cmpw
mov
cmp
lock
mov
xchg
scas
add
jo
mov
dec
adcb
cmp
loop
rol
scas
dec
adc
jb
dec
daa
pop
sub
ficomps
push
mov
or
shll
push
push
pop
out
movsb
fldcw
aam
dec
or
cld
inc
mov
xor
or
add
int
out
out
clc
add
jge
dec
mov
inc
imul
rcrb
je
sub
aad
dec
imul
lret
push
fcoms
pop
dec
add
aad
outsl
cmp
mov
cmp
or
not
add
repz
mov
es
jecxz
or
ja
incl
inc
xlat
call
mov
leave
out
jns
ret
push
js
out
or
xchg
jbe
cmpsl
js
mov
adc
repz
xchg
repz
sub
xchg
lock
mov
jg
hlt
lods
xchg
inc
xchg
scas
mov
addr16
outsb
ds
out
psubsb
adc
push
into
inc
jne
inc
xchg
bound
mov
inc
fsubrs
std
jmp
fstpl
mov
js
imul
jbe
jae
cs
jnp
adcl
push
dec
jno
xchg
cmp
and
fstpl
mov
cltd
daa
push
cmp
pop
outsb
fsubl
lea
out
insb
aas
rorl
push
arpl
sbb
inc
xor
jno
pushf
jmp
or
imul
jnp
push
int
push
sub
lahf
xchg
push
mov
in
imull
cs
sti
aad
inc
cmpsb
ret
pushf
push
fcomip
jmp
enter
add
and
or
test
sbb
lahf
jbe
into
loopne
fldenv
mov
pop
xor
pop
xchg
mov
and
gs
inc
push
hlt
jmp
fisubs
xor
xchg
cmc
push
inc
ja
decb
not
push
loope
popf
pusha
mov
popf
into
ss
add
dec
dec
cmp
cli
mov
xchg
pop
out
cmp
rol
popa
cmp
ljmp
daa
scas
sbb
mov
popf
outsb
xchg
cmp
sub
cmpsb
fs
mov
cmp
push
mov
jae
in
dec
call
lcall
icebp
cmpsb
mov
adc
les
sbb
mov
iret
repnz
push
pop
and
mov
push
imul
jmp
mov
sbb
in
repnz
cmp
jle
mov
mov
push
sbb
jno
pop
rolb
nop
and
in
movsb
xor
bound
add
and
xor
add
pushf
xor
inc
cmp
cli
and
mov
movsl
fcoms
xor
inc
add
fstps
rorb
pop
scas
aad
xor
mov
iret
jg
fwait
jne
imul
dec
push
shll
jecxz
jns
jns
cmp
and
xor
mov
xchg
imul
pop
inc
dec
bound
pop
insl
ds
sub
js
repz
jae
dec
xor
mov
loopne
pop
lahf
cmp
and
sbb
sarl
push
xchg
scas
icebp
cmp
dec
les
sub
test
sar
lret
or
test
fisttps
pop
int3
fadd
roll
xor
or
stos
mov
xchg
mov
cmp
xor
daa
lods
pop
imul
adc
subb
clc
cmc
sub
push
inc
ja
shlb
lret
push
in
cmp
pop
addr16
lods
movsl
jmp
sbb
pop
add
ja
cmp
cmp
fcomps
jns
lahf
ljmp
xchg
mov
add
pop
lods
mov
push
clc
mov
repz
push
cmp
cmp
out
andb
repz
cmp
repz
enter
sbb
mov
out
push
stos
lock
add
adc
push
jge
mov
icebp
shll
les
fildl
imul
outsb
cmp
xchg
cltd
and
shll
aam
in
xchg
fnstcw
inc
decl
ret
xlat
mov
negl
in
ds
dec
push
jns
ficoml
insb
mov
lcall
call
mov
inc
and
dec
dec
aad
push
int
push
cs
fbstp
jle
movsl
push
jne
xchg
test
jae
add
cli
fcomp
dec
jecxz
movl
adc
add
sbb
adc
lods
out
add
and
push
jnp
dec
push
scas
je
frstor
mov
lcall
in
sbb
xchg
cli
fisttpll
in
mov
ljmp
stc
or
aam
les
inc
rcrb
xor
lds
mov
mov
test
xor
orps
sti
cs
and
test
notl
and
push
add
mov
pop
jae
push
jae
mov
push
cmc
cwtl
das
fdivrl
lds
int3
push
mov
movsb
inc
or
rorl
fdivrs
mov
rol
cltd
data16
mov
iret
lods
movsl
lods
pop
xorb
mov
jno
stc
jle
cld
movsl
add
pusha
test
mov
jle
outsl
dec
je
mov
icebp
adc
pop
cmp
dec
fwait
push
cmp
inc
jbe
pushw
aad
stos
jg
mov
jbe
in
dec
adc
mov
inc
js
xchg
mov
aam
pop
mov
icebp
aad
aaa
lret
push
sub
pop
jae
and
mov
xorl
adc
sahf
dec
push
nop
out
stc
push
cmp
scas
xor
mov
adc
push
pop
div
cld
loope
shrl
sub
or
out
and
dec
sbb
or
pop
cld
sti
aad
cmp
cmc
int
loop
and
mov
inc
insb
je
sahf
mov
cmc
mov
pop
sub
mov
popa
xor
fistl
les
cmp
sti
lods
dec
ss
aaa
fsub
ror
jmp
cmp
sbb
dec
dec
insl
add
xchg
cmp
in
iret
mov
mov
lea
leave
xor
mov
inc
ds
push
cmc
or
mov
sbb
mov
jecxz
lcall
int3
xchg
pop
sub
jge
scas
call
pop
jne
and
outsb
sub
jg
sub
stc
and
or
loope
arpl
pop
jns
out
repz
push
mov
dec
or
rorb
jns
pusha
fdivrs
loope
ljmp
push
jl
dec
scas
movsb
outsb
adc
xchg
xchg
push
sub
cmpb
js
sti
cmp
pop
add
and
sbb
cltd
insb
mov
stos
arpl
pop
loope
clc
xchg
cs
jmp
ja
push
movb
pop
data16
inc
pop
xor
rcrb
mov
sub
jo
mov
jne,pn
sub
mov
pop
fdiv
pop
fistpl
or
xor
and
pop
xchg
rcll
xor
rcrl
inc
call
out
out
lahf
loope
inc
ds
mov
stos
aaa
movhps
adc
adc
lods
inc
pinsrw
ror
jne
std
sbb
inc
xchg
jo
or
fwait
imul
jnp
dec
aad
mov
in
or
add
rorl
mov
fwait
mov
sbb
adc
cld
cmp
inc
xchg
in
cmp
cmp
test
inc
std
cmp
push
mov
adc
cmp
xchg
dec
xor
sti
pop
mov
in
in
sbb
sbb
xchg
sub
lret
xor
aam
fcoms
pop
or
mov
cmp
test
xor
iret
pop
jno
mov
dec
cld
sbb
xchg
jp
pop
inc
push
or
jle
ljmp
adc
fisubrl
xchg
into
data16
or
aam
cld
js
popl
mov
jmp
orb
sub
mov
push
cmpsb
call
cmp
aaa
in
dec
xor
aad
stos
mov
jnp
pop
mov
or
addps
int
pop
outsl
adc
cmp
xchg
mov
lcall
lret
std
jle
mov
adc
inc
inc
cmp
inc
xor
lods
dec
sub
add
cld
add
push
xchg
mov
jge
lods
jp
dec
xchg
stos
jns
mov
mov
xchg
cmpsl
inc
scas
cmpsl
stc
sbb
add
cmp
push
mov
out
mov
fldenv
sub
int
sub
enter
cmp
outsl
jb
push
lock
stos
cmp
xlat
inc
inc
pop
cmc
xchg
pop
repz
stos
pop
mov
add
pop
repz
aas
add
jp
stos
inc
fstl
inc
or
mov
pop
lea
loopne
push
pop
mov
aas
adc
dec
add
ja
mov
xchg
les
int3
stc
rcll
push
mov
sahf
xlat
aad
add
lock
mov
xlat
ss
pop
dec
pop
xchg
adc
jl
adc
stos
push
adc
test
jb
dec
push
test
in
popf
xor
xchg
mov
outsb
inc
jae
or
je
adc
mov
lret
subb
js
cli
sbb
add
push
shlb
push
pop
repz
pop
scas
and
sbbb
add
sub
notl
jb
sbb
fists
jno
jnp
aas
pop
test
scas
sbb
loope
loope
out
lahf
loop
xchg
mov
xlat
lock
mov
ror
push
shlb
sbb
push
xor
out
int3
test
mov
loop
inc
mov
test
lret
add
and
fst
out
xchg
xlat
aas
add
adc
ror
or
jecxz
stos
mov
div
sar
ja
outsb
cmpsl
pop
lret
in
xlat
mov
or
pusha
into
imulb
jnp
rcrb
adc
cmp
jge
insl
push
dec
add
aam
cmc
sbb
int
lock
jle
mov
xor
shlb
mov
push
popf
ljmp
xchg
xchg
movb
adc
dec
push
add
mov
inc
and
orb
rorb
sub
push
out
jno
je
inc
xor
ret
jp
mov
sub
push
inc
pop
dec
sub
jmp
jno
pop
mov
daa
or
insb
cmc
add
xchg
das
aad
push
pop
sbb
jb
push
adc
jecxz
rep
ja
xchg
push
pushf
push
outsl
inc
mov
or
push
cmp
pushf
cmp
mov
sub
addr16
dec
jmp
dec
pop
fxch
cli
inc
jo
shrb
clc
or
lock
jae
jle
mov
movsl
mov
adc
dec
js
or
test
inc
gs
lods
push
pop
xor
aaa
xchg
dec
stc
xchg
add
pop
insl
dec
shrb
rolb
add
into
and
or
icebp
pushw
insb
xchg
dec
ret
aas
popf
xlat
aam
dec
in
jle
mov
in
mov
addr16
fldt
mov
cmp
inc
cmp
inc
mov
inc
fsubs
arpl
pop
lret
fwait
push
push
sub
in
pusha
cmpsl
xchg
ret
xchg
rcrl
je
sbb
jo
sbb
fiaddl
fwait
jae
arpl
orl
cmp
cmp
add
sub
dec
or
or
fadd
scas
jle
cmpsl
in
inc
mov
das
mov
in
add
mov
or
das
or
pushf
push
test
sub
std
in
mov
mov
leave
push
aam
and
jno
es
ret
bound
shlb
iret
in
or
repz
add
sub
adc
ret
adc
inc
nop
fisubl
add
cmc
jmp
inc
div
adc
in
scas
lods
mov
push
enter
push
aaa
lds
xchg
jp
mov
pop
lods
mov
mov
enter
inc
dec
arpl
sahf
mull
push
lea
aam
sbb
push
frstor
and
inc
mov
and
stc
cmp
push
nop
xor
fdivr
mov
jnp
pop
data16
scas
insl
dec
xchg
push
mov
mov
jmp
add
stos
mov
inc
ja
scas
dec
fimull
out
stos
inc
adc
nop
jno
jae
and
dec
cmp
out
iret
jbe
mov
dec
in
pop
idiv
js
pop
fisubrs
add
aas
ss
mov
in
pop
lea
fiaddl
dec
or
iret
push
xor
mov
sahf
std
aad
stc
test
rorl
js
xor
sbb
pop
lock
mov
std
lods
and
fsts
xchg
js
call
sbb
out
stos
mov
or
dec
clc
sbb
sub
xlat
and
or
sub
jbe
into
or
pop
jb
jno
fdecstp
jl
ljmp
jmp
sbb
jo
jbe
cmp
jno
add
imul
shrb
shl
add
fmulp
fistpll
fldl
scas
and
ret
pop
xchg
fbld
fmul
cs
nop
ret
bound
sub
cmc
imul
sbb
jp
cltd
pop
push
sub
add
sarl
sbb
pushf
test
movsl
stos
in
xlat
dec
jecxz
popf
inc
ja
ret
jge
pop
test
or
test
xlat
cli
add
icebp
fincstp
lcall
pop
mov
add
or
dec
jmp
lods
add
rcrb
push
std
rcr
je
test
add
xor
dec
add
in
mov
popa
adc
and
lods
jns
mov
fwait
stos
sbbb
sbb
cmovs
dec
jmp
jle
test
test
dec
pop
mov
or
jl
cmpsl
fwait
xlat
mov
jecxz
adc
dec
cld
das
adc
test
cs
sub
mov
pop
js
andb
int
cmpsb
out
mov
sbb
cmpsl
inc
cli
test
shlb
ret
jg
cmpsb
sar
daa
jp
push
xor
pop
rcrb
repz
cli
mov
cs
out
sbb
dec
sub
sbb
ljmp
cmp
add
sub
dec
pop
inc
push
fucom
ret
push
mov
shlb
and
out
mov
add
loopne,pt
pop
lea
and
das
mov
xchg
imul
xchg
jns
repnz
das
pop
mov
mov
in
int
scas
mov
sbb
loopne
lea
shrb
jge
xchg
test
adc
or
cmp
jle
inc
mov
cld
mov
pop
rcrl
outsb
jg
mov
dec
cltd
repz
push
or
pop
mov
add
inc
push
sti
sti
push
pop
or
rcrb
pop
lods
aas
jbe
jbe
mov
xor
xchg
negb
lcall
fidivrs
out
push
jecxz
sub
pop
pop
jecxz
jo
test
into
js
add
in
dec
jle
push
test
lcall
mov
shl
sbb
push
dec
mov
xchg
dec
les
js
add
addl
push
inc
jg
cmp
js
xchg
insb
pusha
lret
xchg
mov
ss
push
mov
notl
pop
fidivl
mov
pop
xchg
fcoml
push
xchg
dec
cmpsb
movsb
or
repz
test
dec
push
in
shl
fadds
jmp
test
fisttps
sysenter
mov
loopne
out
mov
setns
dec
xor
outsb
mov
lret
sbb
notl
arpl
and
mov
rep
dec
ljmp
inc
sub
inc
push
shlb
inc
mov
mov
test
subl
mov
pusha
imul
mov
sbb
and
aad
ret
sbb
inc
fisubrl
fs
clc
mov
hlt
fstpt
leave
mov
shlb
pushf
or
pop
adc
mov
test
mov
xchg
mov
jae
jl
lea
jae
xor
rolb
fs
mov
scas
lret
push
pop
push
enter
sti
pop
aam
loopne
rolb
sub
jp
aas
inc
add
popf
jns
pusha
push
sbb
cld
mov
push
add
mov
adc
in
add
cs
adc
cwtl
int
and
out
iret
movsb
iret
dec
fidivs
int
sub
call
mov
inc
or
arpl
xor
mov
shld
push
fwait
cmp
mov
push
mov
mov
jns
mov
sti
cld
out
data16
or
sahf
jge
mov
lock
pop
popa
arpl
gs
je
mov
jmp
push
xchg
lea
hlt
adc
mov
add
lods
fnsave
jne
in
leave
xchg
adc
clc
test
pop
ret
mov
push
push
mov
rcll
sub
std
in
mov
repz
and
leave
rcll
movl
cmp
arpl
sbb
cmpsl
sbb
mov
aas
adcb
ljmp
cmp
ja
xor
mov
jge
push
adc
mov
rep
or
push
add
add
mov
cmpsb
push
inc
mov
call
pop
or
mov
push
mov
push
push
push
adc
ret
fnstsw
xchg
lret
lret
push
aam
in
mov
aaa
mov
or
dec
scas
test
jne
fwait
int
dec
lret
addr16
ds
repnz
inc
sub
and
les
xchg
sbb
xor
lahf
xor
movsl
mul
adc
add
incb
inc
xchg
daa
dec
cmp
es
rclb
iret
add
pop
add
push
mov
sub
mov
jle
inc
lods
and
sub
int3
mov
push
push
jnp
mov
stc
sbb
add
adc
pop
int3
out
jmp
xchg
cmp
jmp
push
inc
mov
pop
push
mov
ljmp
jecxz
lret
test
pop
dec
xchg
bound
jo
clc
xlat
mov
xchg
lea
stos
jge
leave
repz
call
jl
jb
sub
ret
cmp
xchg
lret
add
sub
cmp
jb
add
rcrl
cs
faddl
popa
enter
dec
cld
pop
das
cld
shr
xor
loop
jecxz
addl
jmp
lea
mov
movsb
xchg
xor
cmc
mov
mov
cwtl
inc
fisubl
sub
mov
aad
outsb
push
popa
int
push
jl
mov
add
sbbl
icebp
aas
xchg
sub
sahf
fisttpl
cld
cld
shlb
xor
fdivrs
sub
mov
outsl
jp
or
add
movsb
dec
xchg
inc
adc
adc
cmp
es
int
stc
mov
ss
and
xchg
fdivrs
insl
xchg
xor
push
pop
je
int
int
xor
in
and
out
xchg
fs
push
lock
and
cwtl
shr
in
scas
ds
jae
mov
ss
push
push
jo
loop
aad
fistpl
xchg
jns
mov
daa
loopne
push
shlb
outsb
sub
and
gs
shlb
lcall
ja
fwait
test
mov
push
mov
cmpsb
inc
dec
pop
lcall
xor
xor
std
mov
in
aaa
jns
mov
jmp
mov
cmp
sbbb
cmpsb
xchg
hlt
insb
loopne
movsl
cwtl
out
xchg
xchg
mov
out
sub
jl
adc
in
shll
pop
ja
and
push
adc
or
aad
in
pop
cmp
or
repnz
inc
popa
mov
call
popa
fs
jno
test
xor
daa
leave
mov
rol
mov
xchg
in
test
xor
in
ja
lods
not
mov
dec
aaa
pop
insl
mov
push
scas
xor
mov
aas
stos
lret
push
lret
frstpm(287
fnsave
bound
and
sbb
add
pop
adc
jecxz
mov
xor
xor
xchg
or
cmp
scas
fadds
imul
cs
cmpsb
fisttpll
adc
sub
dec
addr16
lds
in
pop
or
jo
inc
dec
cmp
out
iret
mov
out
and
dec
mov
nop
js
lret
cmp
xor
scas
pshufw
loope
call
mov
enter
sub
cmpsl
fwait
out
adc
mulb
int
test
jne
mov
popa
notb
mov
stc
pop
lea
sbb
mov
scas
adc
loope
xchg
dec
add
ds
cs
push
and
push
inc
jns
icebp
inc
inc
push
cmc
sub
lcall
repz
lds
mov
mov
rorb
push
aas
rcr
popf
lods
jne
outsb
je
sub
mov
ret
push
cmpsb
imul
test
or
not
scas
sar
mov
xchg
imul
push
out
or
dec
dec
mov
out
test
sbb
ret
jl
addr16
sub
fs
insl
and
jb
mov
mov
mov
jmp
ja
jecxz
rcll
andb
sbb
xchg
xor
xchg
add
cs
mov
lock
sbb
lret
sub
insl
test
mov
ja
jp
push
mov
shll
mov
mulb
jnp
pop
sub
jns
sarb
pop
mov
iret
pop
push
jp
out
jns
mov
pop
scas
call
nop
fistpl
push
rcrb
and
push
hlt
push
cwtl
jns
movsb
loope
xchg
pop
inc
iret
adc
insb
sub
pop
stc
pop
cmp
scas
mov
jbe
pop
mov
pushf
bound
sbb
sbb
jl
inc
in
mov
pop
add
ret
popf
add
fdivrl
fldenv
inc
popa
out
mov
add
ficoml
enter
xchg
mov
mov
imul
pop
fcomps
push
std
jo
xor
shrl
add
push
sbb
push
inc
push
stos
mov
inc
sahf
push
mov
je
xchg
int3
jecxz
push
sti
enter
mov
push
repz
inc
gs
arpl
outsl
and
std
xchg
aaa
and
mov
lods
inc
xchg
jb
jp
cmc
mov
sub
add
sbb
je
jle
sbb
shr
shlb
cs
mov
test
mov
lea
push
hlt
dec
xor
mov
insl
pop
mov
mov
shr
rorb
test
fadds
mov
call
xchg
pop
jbe
xor
movsl
push
std
or
sti
or
and
les
dec
mov
scas
pop
pop
mov
add
test
mov
ret
xchg
in
dec
adc
mov
push
imul
ret
lods
sbb
es
inc
ficoms
dec
or
dec
fstps
pop
shll
xor
pusha
es
icebp
sbb
sbb
add
call
jp
out
bnd
js
mov
loop
and
fcoml
dec
aas
sub
xor
jae
inc
shlb
pop
push
ljmp
aaa
fsubr
push
dec
dec
lcall
push
jp
cmp
lret
push
push
mov
aaa
stc
aas
int
mov
inc
add
repnz
xchg
std
ds
xchg
dec
mov
or
or
mov
add
sbb
pop
lods
divb
jge
rcrb
dec
addr16
movsb
inc
shll
insl
jae
xlat
jns
outsl
shlb
aam
pop
jne
fsubrl
loopne
and
rcr
adc
pop
lret
xor
xor
fidivrl
inc
pop
ret
mov
jp
xor
adc
xchg
and
cltd
nop
out
scas
movsb
mov
je
mov
shrb
int3
or
fistpll
push
jae
shl
sub
adc
subb
jo
data16
cmpsl
mov
mov
fldlg2
xlat
out
outsb
jns
fs
shlb
xchg
popf
and
or
addr16
stos
mov
jmp
mov
push
scas
sub
test
dec
mov
and
xor
data16
insl
cmpsl
fwait
dec
inc
xchg
lahf
icebp
clc
fidivrl
xor
sti
fadd
sub
leave
aad
or
imul
inc
lret
or
cmp
insl
inc
je
or
xchg
subb
pop
or
xor
in
cmpsl
jmp
mov
and
cmp
andl
andl
push
and
pop
mov
inc
pop
jae
dec
and
lea
jns
sbb
push
pop
lahf
in
mov
gs
insb
cmp
mov
pop
mov
movsl
adc
out
jne
test
lea
pop
test
rolb
pop
xor
mov
mov
ret
jmp
dec
pusha
cld
lahf
dec
stc
test
gs
or
mov
adc
adc
popf
add
sbb
jbe
dec
pop
pop
add
cmpsb
or
test
add
pusha
cmp
xor
push
sbb
mov
lds
sub
repz
jno
mov
cmp
ret
shll
cmp
fsub
mov
mov
in
inc
addr16
popa
fisubrl
cmpsb
addl
fisttps
aaa
pop
or
pmulhw
aad
push
adc
movsl
loope
xchg
add
in
mov
pop
jg
xchg
sahf
pusha
sub
call
or
lods
shlb
add
mov
sti
and
mov
js
das
push
repnz
fmull
jle
in
xor
sbb
mov
mov
push
inc
call
pop
pop
or
and
jmp
popf
lock
cli
mov
dec
fimuls
call
and
je
dec
mov
ds
pop
push
sahf
lods
sar
test
pop
xor
mov
jne
push
mov
and
fs
int3
pop
repnz
mov
pop
sar
push
pop
lods
scas
jecxz
jns
mov
mov
or
cmp
jecxz
nop
fbld
cmp
loop
xor
pushf
or
dec
inc
dec
loop
inc
out
in
xor
enter
sbb
bound
gs
in
pop
bound
lds
mov
mov
ret
andb
test
adcl
aad
mov
nop
lods
dec
mov
stc
repz
arpl
orb
or
out
sahf
or
and
xor
movsl
and
outsb
pop
mov
addr16
pop
ret
jl
add
test
pop
or
fcomip
pusha
roll
call
rorl
in
xchg
dec
shll
xor
add
pop
and
inc
sub
jno
into
fcompl
mov
pop
out
pop
mov
pop
sbb
scas
mov
inc
sub
xor
aad
fnstenv
sub
jmp
pop
sbb
sub
arpl
aaa
dec
aad
cmp
inc
mov
js
sbbb
lock
popf
stos
mov
pusha
xchg
xchg
inc
add
xor
popa
dec
add
jae
cltd
stos
jnp
push
push
lahf
push
pusha
mov
rcll
xchg
out
mov
or
gs
popf
xor
dec
sub
add
pusha
jae
mov
cmpsb
scas
movsb
sub
jbe
into
add
inc
sub
dec
out
or
outsb
es
xchg
cmpsb
jecxz
jp
ljmp
cmpsl
adc
xor
cmc
sahf
fisubrl
fimull
sbbb
cmc
addl
popa
push
adc
test
cwtl
fwait
add
test
xorb
push
push
sbb
xchg
sub
mov
push
fisubrs
in
imul
add
cltd
ljmp
leave
loope
jae
and
outsl
insl
cmc
pop
outsb
stos
aad
jg
mov
jmp
loop
mov
sbb
outsb
enter
and
adc
sbb
fs
je
push
in
inc
popa
std
dec
jb
mov
jmp
and
jmp
lods
xlat
popf
mov
jno
shll
push
or
adc
std
fld
dec
jp
or
dec
in
jae
dec
push
inc
jp
push
mov
and
mov
xchg
fwait
pop
inc
jb
lods
shlb
sub
shlb
pop
xsaves
fst
aam
mov
ret
lcall
sub
push
jecxz
inc
popa
jge
ds
aas
push
sahf
fdivrs
add
mov
push
fists
out
out
ret
outsb
mov
cld
negl
and
inc
and
negl
movl
lods
sbb
jns
xlat
rcl
test
std
xchg
outsl
shr
lahf
les
xor
add
addr16
cmp
pop
pop
and
inc
into
scas
das
pop
fistps
adc
mov
sar
lds
or
ja
cwtl
in
inc
test
mov
lcall
add
jnp
jge
push
mov
mov
fcoms
dec
ds
and
js
pop
mov
loope
addb
mov
scas
and
fs
mov
repz
jne
jp
mov
pop
xor
movsl
mov
sbb
cmc
adc
push
sub
push
jmp
fdivrs
xchg
subb
push
fisubs
dec
outsl
lds
rcl
or
int3
daa
xchg
dec
xor
inc
mov
fsubr
xchg
and
mov
imull
out
adc
fidivrl
ss
test
movsb
pushl
or
push
icebp
ljmp
and
xchg
subl
lods
push
outsb
aad
jno
pop
mov
inc
aaa
jge
dec
fdivs
dec
mov
scas
push
iret
and
stos
loopne
imul
orl
ficompl
pop
aam
mov
sub
add
lods
lcall
cmpb
adcl
js
pushl
xlat
jns
ret
and
and
cmp
pop
adc
xor
or
adc
mov
arpl
mov
pop
sbb
popa
inc
fs
movsb
or
outsb
fwait
xchg
mov
jp
jmp
ja
bswap
push
and
mov
jno
or
shlb
scas
cwtl
insl
orl
lret
sub
pusha
icebp
cmp
call
lods
jmp
add
xlat
into
push
mov
cltd
jle
push
sbb
mov
shrl
lock
push
repz
sbb
into
inc
jg
lcall
enter
mov
shl
xorl
push
popa
rolb
and
mov
es
pop
orb
inc
int3
pop
fdivrl
dec
cmp
pop
xchg
cmp
lds
and
mov
sbb
cmpsl
repz
push
adc
jg
dec
popf
dec
xchg
iret
lcall
mov
bnd
mov
pop
cli
push
inc
lods
jmp
xorb
sti
or
pusha
ficoms
hlt
stc
add
add
sbb
inc
push
sbb
mov
inc
sub
stos
cmpsl
adc
lret
add
ret
aaa
push
jl
shll
mov
jp
stos
sub
inc
rorb
push
les
not
push
xor
add
mov
and
enter
seto
inc
into
in
sub
xchg
out
xorb
mov
mov
inc
xchg
mov
pop
inc
mov
pushf
rcrl
lods
imul
xchg
fwait
xchg
cmp
nop
mov
jne
mov
insb
dec
and
subl
out
pop
sbb
xchg
std
mov
lret
and
jl
add
das
push
xchg
xchg
xchg
mov
lock
les
inc
and
pop
add
push
mov
xchg
fisttpll
or
dec
fadd
es
xchg
xor
scas
sub
dec
adc
scas
les
add
and
mov
insb
cmp
maxps
push
add
push
sub
jae
lret
lods
pop
ds
adc
in
fldcw
insb
rcl
sub
in
push
js
addb
jne
cmp
and
fcompl
test
xor
sub
sbb
das
xchg
mov
imul
jle
xrelease
or
sbb
out
cmp
fistps
dec
inc
mov
loopne
aaa
pop
cmp
xchg
inc
adc
adc
test
adc
mov
cli
adc
mov
inc
leave
js
cmp
inc
pushf
movl
mov
jmp
cltd
mov
sub
sub
sbb
and
mov
or
int3
lret
pop
mov
lret
fwait
sbb
popf
dec
xchg
inc
mov
dec
cmpl
mov
mov
mov
dec
stc
mov
leave
jo
mov
fs
jmp
iret
mov
mov
and
mov
push
cs
mov
jae
cmp
lret
ds
shll
out
fstp
xor
jo
pop
jmp
daa
pop
into
pop
mov
icebp
inc
mov
test
and
pop
scas
int
fsubl
adc
cmp
adc
jle
imul
aam
loope
decb
sub
cmp
stc
hlt
aas
adc
imul
fidivl
loop
pop
sub
je
imul
lcall
dec
push
fwait
movsb
inc
es
test
and
pop
lock
mov
adc
mov
dec
mov
leave
cmpsl
xor
jnp
add
xchg
sbb
movsl
lahf
iret
lahf
mov
xorl
ljmp
mov
push
lock
ret
push
and
dec
mov
add
lds
push
je
push
movb
mov
xor
movsb
mov
pusha
inc
mov
sub
pop
xchg
pop
sbb
push
mov
and
cmpsb
pop
rcl
xchg
push
mov
add
fwait
push
push
cltd
ljmp
or
iret
sbb
in
daa
push
mov
jmp
lods
mov
pop
in
pop
test
add
data16
xchg
inc
loop
pop
insb
das
je
mov
data16
fcmovnb
sub
cmpsl
shll
add
mov
in
sbbl
lods
and
xlat
cmpsl
inc
pusha
fdivrl
pop
jb
adc
sub
adc
repnz
mov
jno
push
sahf
das
in
and
iret
xor
pop
dec
xor
xchg
xchg
jnp
xor
stc
movsb
sub
fbld
sbb
mov
in
cmp
mov
push
jmp
out
fwait
sbb
and
jmp
and
in
push
push
inc
jg
or
outsb
daa
pop
gs
iret
lods
xchg
adc
loope
outsl
repnz
or
sub
jg
and
and
shrb
push
push
sahf
and
loopne
or
insb
xchg
aam
mov
test
mov
xchg
loop
cltd
or
or
sub
add
je
mov
stos
inc
sub
jp
pop
cmpsl
lea
ret
cmpsb
negb
and
adc
test
jmp
sub
loop
adcb
in
jnp
pop
adc
scas
jmp
or
addr16
xchg
adc
xor
mov
loope
loope
dec
or
in
lods
or
mov
push
idivl
mov
lock
jmp
cmpb
mov
mov
push
daa
add
push
cld
xor
shr
mov
icebp
gs
jo
in
jecxz
dec
int
fisttpl
lcall
negl
push
repnz
mov
lcall
andl
pop
out
inc
xchg
push
jl
inc
mov
add
imul
mov
pusha
sbb
pop
fidivl
adc
decb
pop
sub
xor
push
inc
ja
xor
popa
dec
pusha
inc
bound
xor
push
std
lahf
xor
jno
or
scas
jmp
sub
xor
mov
lcall
push
push
test
cmp
ds
aam
ret
or
cmp
aas
test
mov
sub
out
hlt
adc
loopne
push
js
nop
aaa
jge
lcall
push
mov
sub
dec
adc
adc
lock
mov
xor
lahf
inc
push
mov
frstor
mov
push
lret
mov
sub
cmpsl
imul
cwtl
pop
sbb
icebp
fnstenv
mov
jmp
cmp
cmp
pop
sbb
popa
add
insl
pop
or
fsts
and
jmp
out
sti
in
push
sbb
sti
gs
pop
subl
push
jno
mov
adc
imul
mov
rcll
mov
sub
push
out
xor
out
test
sub
add
cmpsl
stos
dec
clc
dec
adc
outsl
pusha
and
lock
out
mov
test
mov
pcmpgtd
jae
out
adc
xchg
imul
adc
cld
int3
nop
pop
mov
cmpsl
mov
adc
or
addr16
dec
repz
pop
cmp
or
inc
test
cmc
xchg
loop
adc
sbb
dec
xchg
mov
dec
popf
fnstcw
aaa
jecxz
movsb
push
cli
pop
int
loope
xchg
push
lock
int3
mov
out
sub
cld
shl
insb
lcall
rolb
test
cmp
in
cwtl
inc
aas
mov
dec
outsl
test
xor
jmp
lret
cwtl
cltd
add
filds
jb
dec
lods
adc
out
sub
xor
sti
jp
xchg
push
sub
pop
lds
jb
mov
pop
push
les
into
dec
pop
or
and
push
mov
bnd
sub
dec
rol
mov
dec
and
in
xchg
repnz
dec
ret
mov
push
or
shrd
pop
int3
mov
dec
fsubl
cld
negl
mov
dec
pop
mov
mov
ds
fwait
adc
sarb
repz
mov
fstp
mov
cmc
imul
xchg
add
cld
xor
push
or
rorb
xchg
add
xor
dec
and
das
fsts
je
xchg
test
xchg
ss
mov
mov
xchg
xor
sar
jecxz
xchg
aas
or
das
in
sti
push
inc
sbb
fucomp
add
mov
xchg
fs
mov
gs
out
dec
add
xor
movsb
sub
mulb
xchg
pop
mov
pop
aam
in
ljmp
in
sbb
dec
mov
push
push
push
sub
inc
scas
fmul
test
sub
test
dec
ret
lahf
int
dec
xchg
push
xor
andl
loope
test
push
sbb
leave
jl
pusha
out
je
xchg
cmp
pop
dec
bound
mov
notl
dec
repnz
rcrb
lcall
xor
into
add
cmp
filds
inc
lods
call
jle
js
jecxz
jo
cmpsb
mov
dec
loopne
fstl
cmp
rcrb
sti
jne
popf
test
insb
push
pop
loopne
mov
xor
pop
sub
adc
imul
cs
push
and
xor
ss
dec
cmpsl
fs
push
add
xor
mov
and
mov
std
imul
sub
adc
inc
push
dec
frndint
lret
repnz
insb
cmp
inc
cs
int
icebp
test
mov
xor
rclb
lea
push
add
lret
rcrb
sbb
push
xor
scas
inc
adc
cs
in
loope
mov
mov
sub
jnp
push
insl
ljmp
mov
std
sbbl
xchg
vxorps
fstl
sbb
rcr
xchg
add
add
outsb
jns
in
shrl
lret
rcrb
nop
jmp
shll
in
pop
dec
adc
adc
popf
cld
xor
adc
sbb
rcrl
cmpb
inc
stos
outsl
xor
aas
mov
push
add
xor
rcl
lret
insb
clc
sub
lahf
stc
lret
sub
dec
test
aaa
fs
xchg
cmp
xor
mov
mov
mov
mov
jne
inc
in
call
lahf
adc
push
ja
cmpsl
ret
je
push
fidivrl
push
adc
mov
pop
test
and
push
dec
pusha
add
push
xchg
jle
dec
popa
cmpsb
mov
cld
outsl
leave
mov
add
xchg
xchg
call
lods
repnz
cld
pusha
clc
mov
jns
and
test
push
adc
push
and
adc
pop
mov
inc
dec
cmp
push
aam
lods
sahf
xchg
mov
inc
loopne
inc
sbb
mov
daa
mov
pop
and
out
into
and
rorb
in
cli
fs
ret
rcrl
out
inc
fxam
nop
push
mov
add
and
mov
or
lods
fisubrs
lods
jge
mov
repz
into
jl
je
fisttpl
shrb
pop
jecxz
movl
sti
adc
test
aad
push
mov
cmc
xor
pop
into
xchg
cmp
and
adc
mov
mov
sub
pop
lcall
cwtl
int3
and
xor
jnp
sbb
subl
fisubl
addl
out
rorl
lcall
test
push
test
enter
pop
pop
and
sub
cwtl
imull
test
jp
fstl
pop
push
insl
int
addr16
ljmp
dec
and
scas
and
push
imul
push
push
mov
jge
in
mov
popf
pop
mov
inc
xchg
std
push
addr16
adc
cmc
dec
imul
cmp
ljmp
lock
int
push
xor
int
sub
mov
and
sub
sub
ret
dec
sbb
dec
daa
lret
sub
es
rorl
mov
movsb
mulb
xor
xchg
cmpb
mov
rcr
xchg
test
pushf
xor
jo
imul
imull
mov
insl
cmpsl
pop
in
fisubrl
jmp
ja
fmull
popa
pop
mov
xor
lds
xchg
xchg
cmc
push
in
mov
xor
or
in
bswap
xlat
push
js
adc
push
xor
fwait
xor
mov
adc
int
inc
dec
jge
das
pop
outsb
xchg
aad
nop
mov
bound
dec
nopl
mov
in
aas
cmp
or
into
dec
fs
es
pop
inc
gs
data16
les
sahf
out
add
lret
lcall
lea
dec
dec
mov
fcoms
arpl
dec
in
mov
out
cld
cli
clc
mov
or
lods
mov
xchg
xor
push
sbb
sub
xchg
cmpb
in
jg
or
out
lods
rclb
mov
inc
or
xor
sub
ds
insl
adc
or
lcall
inc
and
jmp
andl
out
outsl
ret
push
add
out
icebp
aad
sbb
out
xchg
call
repnz
fisttpl
test
cmp
rolb
in
lods
lock
jb
aam
test
inc
inc
lret
mov
xchg
stos
daa
stos
pop
push
mov
push
data16
xchg
sub
push
pop
or
add
es
fstl
xor
fisubs
or
mov
mov
xchg
iret
lods
push
data16
pop
negl
dec
imul
mov
sbb
mov
pop
sub
fisubrl
add
xlat
rcl
mov
rcl
inc
or
inc
jne,pn
test
fcmove
xor
js
jmp
sub
mov
test
loop
shlb
insl
jp
bound
cmp
jbe
cmc
mov
cs
push
and
adc
add
sub
in
inc
push
jp
mov
jns
aaa
adc
fnstsw
pop
fwait
cld
or
dec
bound
pop
scas
hlt
in
cmc
out
adc
mov
lds
add
dec
push
mov
dec
mov
mov
push
imul
xor
ret
or
test
fucomp
mov
mov
cmp
cli
out
adc
cmpsl
icebp
inc
cmp
sahf
jbe
xor
ret
jp
adc
cmp
rclb
jle
shrl
cmp
out
mov
pushf
fucomp
push
int
mov
fsts
push
jae
out
dec
mov
adcl
sub
aas
in
cmp
mov
sbb
mov
fisttpl
js
and
sbb
xor
arpl
lds
xor
iret
rcrb
mov
mov
add
in
aam
sub
xor
jae
pop
push
push
lods
shr
or
fcomps
push
xchg
sub
cmpsl
mov
test
subb
lret
add
push
test
out
jno
mov
xor
push
push
sti
mov
pop
xlat
cmp
ljmp
frstor
xor
push
jp
mov
shrl
jecxz
popf
inc
push
je
mov
insl
cmc
loope
in
jle
loop
xor
add
call
std
push
push
arpl
jp
sub
mov
or
pop
das
xchg
gs
cmpsl
lahf
subl
fdivr
or
mov
xchg
fstl
xor
cmp
jecxz
cli
mov
pop
insl
or
lds
lods
dec
mov
ljmp
pop
aam
insl
adc
mov
mov
jno
cltd
jge
movsb
in
push
in
test
sbb
adc
lret
mov
test
mov
outsl
sub
in
leave
mov
push
scas
mov
leave
lds
sbb
cmp
mov
mov
and
inc
mov
cmpsb
push
jae
push
scas
outsl
pop
dec
inc
push
inc
jne
mov
imull
iret
push
subl
mov
out
mov
mov
sbb
jns
and
and
xor
mov
or
cmpsb
cmp
push
outsl
movb
lds
loope
sbb
mov
jnp
or
mov
loopne
jmp
push
aas
cmp
int3
dec
sahf
loopne
or
imul
pop
in
loop
sahf
mov
jl
sbb
pop
add
inc
dec
push
pop
out
or
loop
push
fs
jmp
pushf
mov
mov
iret
ja
push
cmp
sbb
in
iret
test
enter
xchg
xor
std
idiv
mov
xchg
scas
push
push
or
shll
sbb
mov
scas
and
test
xchg
cmpsb
ret
inc
sti
inc
push
repnz
js
repnz
xor
mov
sub
aas
out
add
lods
adc
inc
cmp
sarl
sub
int
loope
or
adc
rcrl
mov
icebp
call
out
mov
movl
enter
fnsave
mov
aad
cmp
int
test
popa
push
cmpsb
test
dec
aaa
push
cmp
adc
fcmovnb
cmp
jbe
sub
inc
mov
into
std
mov
data16
repnz
mov
loop
push
lret
leave
int3
popl
cmpb
ss
in
pop
pop
dec
mov
scas
outsl
pop
sti
imul
jecxz
adc
jnp
jne
jb
jo
insb
scas
cmpsl
jno
or
lods
ror
call
or
nop
mov
push
cmp
mov
bound
mov
mov
cmc
loop
xchg
sahf
jns
dec
ret
leave
std
inc
sub
xor
jno
mov
xor
sti
ret
in
test
sahf
adc
sbb
loopne
jo
mov
int3
and
aaa
into
jp
test
mov
jge
mov
mov
test
jno
push
hlt
stos
jecxz
push
add
rcrl
sub
push
dec
lret
push
int3
mov
dec
clc
cmpb
xor
frstor
mov
xor
and
loop
sub
sub
adc
ret
and
jg
arpl
outsb
dec
and
rcll
hlt
out
mov
mov
test
dec
xchg
cwtl
xor
out
jp
dec
jae
repnz
jl
or
dec
aam
nop
and
aaa
mov
adc
mov
mov
push
mov
xlat
push
mov
dec
dec
xchg
ss
cltd
jae
fucomip
mov
sahf
mov
adc
or
mov
dec
fiadds
cwtl
sub
mov
xor
adc
inc
scas
test
orl
movaps
popf
in
imulb
ljmp
xchg
jg
pushf
out
xchg
bound
lret
xor
fcmovne
sbb
and
sub
adc
pop
gs
imul
int
popf
arpl
daa
sbb
out
jbe
ja
mov
sbb
aas
jecxz
stos
mov
inc
iret
out
addb
mov
sub
lret
out
xor
fldcw
jge
mov
roll
jno
xor
loopne
out
and
fwait
pop
push
sahf
jg
rcrl
inc
in
in
in
call
sub
xor
mov
lods
fs
ret
cli
xor
inc
loope
sub
enter
mov
inc
cmp
lretw
or
bound
or
call
adc
lods
insb
sbb
jns
aaa
jmp
in
xchg
inc
sbb
push
push
lahf
popa
add
sub
cmp
xchg
mov
add
pop
call
push
mov
xchg
and
es
shll
orl
outsl
pop
jb
mov
inc
adc
inc
int3
sbb
iret
dec
scas
mov
push
mov
cmp
int
inc
xlat
pop
loope
enter
enter
mov
jns
lret
loope
fldl2t
jne
out
mov
mov
push
push
and
fisubl
sbb
dec
inc
leave
test
push
sub
gs
daa
sub
cmp
inc
sbb
sbb
dec
cltd
sub
jne
mov
int3
sbb
mov
data16
mov
cmpsb
mov
sbb
jg
in
jp
xchg
pop
push
scas
repz
scas
and
ret
xchg
in
stc
lahf
in
fbld
leave
icebp
sahf
push
adc
das
cmp
scas
and
and
jl
jle
lahf
and
in
rcrl
loop
sbb
push
daa
in
xorl
ret
pop
jb
aad
loope
dec
subb
mov
adc
js
sbb
jno
pop
sbb
icebp
clc
adc
stc
and
dec
inc
xchg
mov
mov
sub
inc
adc
in
ret
insb
pop
iret
jne
in
jbe
mov
inc
xorb
push
fs
js
aad
icebp
fwait
pop
jo
xchg
arpl
andl
xor
sti
xchg
jae
dec
mov
mov
test
fs
mov
loope
push
cmpsb
call
mov
push
pushf
fstpt
lcall
out
adcb
rcrl
mov
cmc
inc
xchg
pop
sbb
or
movsb
jg
int
ret
jmp
mov
mov
pop
xchg
lods
or
ret
and
sbb
stos
xor
loope
repz
shlb
stos
data16
sar
mull
sub
imul
jbe
xchg
fistl
add
jmp
pop
xor
out
mov
pop
movaps
or
sahf
mov
and
adc
test
daa
cmp
or
mov
cmp
fwait
mov
or
add
mov
aad
popa
fwait
sbb
aas
lds
mov
push
dec
mov
into
sbb
in
pusha
or
inc
dec
pushf
jno
cltd
stc
iret
push
int
sbb
repnz
push
jnp
mov
jae
add
pop
fdivrl
mov
cmp
mov
pushw
repz
out
mov
push
add
repz
jae
cld
mov
push
sbb
inc
cmp
push
pop
adc
std
mov
adc
movsl
shl
pushf
cmpsl
sti
in
stc
shrl
sbb
pop
mov
and
sub
dec
cmp
adc
inc
sub
sbb
jmp
mov
imul
clc
shrb
clc
out
lret
fcoml
adcb
dec
xor
dec
mov
sbb
mov
jo
mov
add
inc
pop
or
out
pop
mov
cwtl
push
lds
xlat
in
inc
popf
cmp
pushf
pop
nop
jae
sbb
shrb
sbb
pop
xchg
adc
xchg
jne
sub
cmp
sub
ret
enter
out
es
adc
mov
and
jecxz
inc
lds
and
mov
pop
call
pop
fstpl
xor
mov
add
test
push
push
or
insb
and
call
fsubrl
jbe
sub
popf
xchg
insl
shrl
fsubl
pop
repnz
lcall
lret
movsb
mov
xor
or
shlb
out
dec
xchg
xchg
insl
sbb
in
mov
out
imul
call
inc
cmp
leave
shr
cmp
add
inc
jo
mov
ljmp
mov
and
jp
add
rcr
les
in
sub
push
cmp
pop
lock
sbb
and
add
jns
lret
sbb
in
push
jb
xor
mov
lods
movsw
push
out
and
dec
test
pop
mov
pop
jecxz
add
sub
push
sub
ret
push
ret
orl
cmpsl
loope
loop
or
and
jecxz
pushl
cld
pop
test
dec
mov
aaa
jne
mov
sbb
insb
dec
test
xor
cld
imul
mov
dec
test
dec
ljmp
pop
sarl
rol
imulb
mov
cmc
popf
inc
push
lret
test
mov
cmp
cmp
stos
lret
xchg
xor
lret
push
pop
pop
mov
lods
push
lahf
ror
loope
mov
ret
push
push
or
pusha
xchg
cmp
jg
out
adc
je
add
adc
in
dec
sub
add
dec
cwtl
loope
lcall
jp
in
popa
push
nop
je
bndstx
jmp
pop
fisubs
loop
inc
pop
lods
inc
mov
stos
stc
dec
insl
es
push
push
test
addl
cmp
mov
outsb
dec
sbbb
cs
lods
rolb
movsl
adc
repz
clc
dec
call
mov
and
add
decb
mov
lds
sub
icebp
xor
shrl
cltd
stos
loope
cmpxchg
xchg
std
notb
out
pop
test
into
out
cmpsl
mov
sub
daa
movsl
sub
cmp
lock
sub
jo
and
lret
sub
dec
outsl
movsl
xchg
push
cmpb
jmp
cld
pop
inc
fistpl
mov
inc
lret
imul
mov
sbbl
xchg
cmp
adc
fs
sahf
addr16
call
sub
nop
dec
xor
jnp
dec
insb
outsl
pop
mov
mov
jo
push
push
mov
jae
inc
xchg
in
shll
outsb
and
push
dec
fnsave
dec
xlat
mov
adc
popf
imul
into
das
push
xchg
sub
jmp
rol
mov
std
dec
xlat
jp
pop
push
mov
dec
mov
mov
out
les
lret
icebp
jle
test
push
out
xchg
or
imul
outsb
aas
jne
pop
in
aaa
dec
lahf
fadds
es
out
test
jp
dec
jae
push
scas
pop
and
cmp
inc
inc
imul
or
sar
cltd
mov
inc
frstor
sbb
xchg
cmpsl
movsl
dec
sahf
iret
arpl
inc
push
scas
pop
jp
mov
dec
mov
call
insb
fistl
cld
sarb
andl
stc
dec
outsl
test
cmp
add
cli
lock
cmc
sub
and
dec
ficompl
pop
pusha
jp
shr
aam
lds
jmp
cmpsl
xchg
fldt
pusha
mov
js
mov
scas
aam
add
jne
mov
std
jnp
or
xchg
popa
adc
ja
hlt
test
cwtl
sub
or
jbe
call
sub
jbe
clc
and
leave
cwtl
mov
fwait
daa
jg
lods
mov
mov
xchg
in
fildl
fwait
cltd
arpl
mov
mov
js
popf
int
cli
xchg
or
pusha
or
add
outsl
xchg
mov
popa
ja
orl
add
inc
stos
jp
movl
mov
cli
cmpsl
fsub
jnp
or
push
out
int3
sbb
push
xchg
testb
int
mov
xchg
push
int
negb
sbb
inc
sarl
shrl
add
int
imul
sub
inc
jno
ret
jmp
aaa
in
cmpsl
adc
shl
xchg
xor
in
cmp
mov
xchg
adc
pop
popa
insb
fimuls
out
in
lahf
xchg
jno
jge
lods
sbb
mov
sub
cmpsb
imul
sbb
loopne
mov
arpl
ja
add
inc
sbb
and
cld
mov
sbb
daa
or
cmpsb
aam
mov
fstl
movsl
sti
ret
gs
mov
aaa
mov
inc
pop
pop
inc
inc
scas
jmp
add
bound
pcmpeqd
sarb
jp
push
sti
sbb
mov
sbb
pusha
fmull
sbb
push
push
rep
jnp
dec
iret
dec
cld
lock
add
or
jb
xchg
inc
out
jnp
pop
or
cmp
pop
mov
out
push
jmp
inc
ret
imul
push
mov
cmpsl
pusha
inc
pop
stos
rclb
cs
or
dec
push
pop
test
mov
out
xor
mov
mov
mov
rcl
cmpsl
push
inc
xor
sub
fnstcw
scas
xchg
cli
pop
inc
fisubrl
ljmp
adc
and
jo
cwtl
cmp
pop
fwait
enter
sti
xchg
aad
mov
stos
in
sarl
push
lahf
movsb
push
push
xor
xor
mov
add
mov
sar
pusha
mov
and
aad
push
mov
cmpb
out
dec
sub
in
push
mov
rorl
mov
ds
push
icebp
stos
mov
int3
sub
cmp
sbb
lret
fsubs
dec
fisubs
or
fistpl
mov
movsb
jae
dec
insb
inc
cmp
outsl
push
lcall
popa
mov
lods
mov
dec
jmp
test
cmp
sub
std
inc
dec
sbb
arpl
push
lea
cltd
push
pop
push
and
loope
add
icebp
push
sbb
sub
addr16
inc
xlat
shll
cmp
jbe
int
es
sub
ss
dec
outsb
cld
cmpsb
enter
ja
or
lock
pop
iret
xlat
push
add
cmpsl
gs
pushf
jle
test
sbb
scas
ds
jmp
pop
enter
idivb
std
das
and
jno
std
and
ljmp
popa
repz
pop
das
aaa
fisttps
pop
cmp
loopne
testb
lds
adc
sbb
xor
adc
iret
std
mov
adc
mov
sub
and
rorb
repnz
add
std
sti
nop
xchg
dec
adcb
lods
xor
jge
cmc
adc
jge
stc
xchg
leave
xchg
add
movsb
jl
xchg
stc
test
cmpl
mov
jecxz
adc
lret
or
stos
mov
mov
pop
mov
sbb
xchg
jno
mov
in
mov
sbb
push
ljmp
bound
mov
adc
movsb
sbb
inc
jno
loop
cmp
fsubrp
subb
rorl
mov
cmc
jmp
push
les
shrl
outsb
adc
test
push
roll
sbb
dec
ja
mov
cmp
fnsave
jnp
jp
xchg
ds
sbb
xchg
mov
pop
loopne
lret
sbb
enter
enter
and
dec
lret
mov
cmpb
and
push
lcall
sub
push
ret
adc
cmp
lcall
mov
mov
or
lcall
ds
imul
push
sbb
mov
out
adc
hlt
add
in
dec
adc
push
xor
lods
dec
cli
test
imul
cmp
aam
dec
jg
call
fiadds
sbb
iret
inc
in
push
sbb
cli
dec
adc
xchg
jle
jge
mov
push
push
add
movups
inc
xchg
imul
xchg
mov
mov
inc
mov
xchg
mov
scas
cltd
dec
xchg
dec
loop
pop
mov
mov
jb
or
cmpl
xor
pop
mov
fsin
sub
mov
frndint
xor
repz
pop
mov
ds
jno
jl
cmc
mov
add
rorl
outsl
mov
xchg
dec
inc
inc
cwtl
jae
mov
inc
fisubl
push
cltd
imul
repz
xchg
adc
mov
fucom
pusha
xor
and
lret
xchg
pop
adc
sbb
push
fisubs
loopne
js
xchg
or
dec
dec
adc
mov
and
aas
lea
lods
dec
xchg
jmp
mov
lea
cmc
dec
into
sbb
xchg
mov
push
imul
mov
test
inc
adc
out
icebp
mov
iret
out
dec
push
stos
cmp
psubusb
icebp
or
je
push
ljmp
xor
lods
inc
sbb
push
stos
imul
xchg
and
cs
jns
pop
shr
push
pushf
sbbl
into
mov
and
icebp
cmp
lret
or
les
ljmp
inc
sbb
sahf
or
xor
testl
adc
repz
sub
dec
movsl
mov
fsubrs
ds
jecxz
shr
icebp
fcmovnb
lret
inc
xchg
popa
mov
sub
cmp
rolb
add
push
xor
rcrb
push
lods
les
lods
fs
mov
pop
push
scas
add
mov
push
add
adc
inc
sub
xchg
movsb
and
fs
in
xchg
shlb
jo
outsl
mov
push
add
iret
mov
int
xchg
bound
push
or
xchg
push
das
push
cwtl
addl
push
mov
in
cltd
imul
add
add
and
es
push
add
or
xchg
call
cmpsb
std
sbb
mov
daa
pop
dec
and
stos
les
in
and
mov
scas
mov
fcoml
jp
shrb
push
push
xchg
pushf
dec
pop
ljmp
in
shlb
inc
and
mov
mov
cmp
loope
inc
mov
mov
inc
mov
cmpb
cld
xchg
lahf
xor
stc
imul
fildll
and
sub
mov
mov
cli
mov
ret
adc
sbb
das
stos
xchg
xor
stos
nop
cli
hlt
in
cli
inc
jecxz
pusha
in
add
push
mov
ja
cmc
dec
push
add
cld
out
pop
iret
out
jno
dec
jne
in
aaa
movsb
sub
or
mov
mov
mov
cmp
shl
push
and
mov
inc
add
lret
imul
rorb
loopne
xchg
adc
rorb
leave
scas
push
bnd
mov
cmpb
mov
lret
fwait
mov
shll
dec
mov
sbb
sub
xchg
hlt
push
aaa
lcall
arpl
adc
data16
out
popf
push
push
lods
aas
shl
in
cltd
push
imul
xchg
incb
lret
mov
sub
mov
sbb
stos
stos
lcall
jecxz
jle
aas
in
pop
xchg
cmp
mov
scas
pop
stc
sahf
shrl
repnz
loop
add
test
lcall
adc
mov
fs
js
fsubrs
outsb
and
es
imul
push
lret
lock
push
addb
adc
mov
lret
inc
jg
push
xchg
lock
outsb
cmp
stc
xchg
mov
out
push
scas
outsb
xchg
enter
sbb
mov
mov
outsb
inc
clc
xchg
inc
mov
sahf
rol
lret
nop
cmp
rolb
xchg
mov
cmp
daa
hlt
push
into
pop
jb
data16
jecxz
pop
mov
cli
pop
iret
xor
sbb
test
cmp
push
iret
lea
push
mov
stc
fs
jecxz
movsb
lret
and
cmp
sahf
mov
loope
mov
outsb
mov
call
mov
rcll
mov
or
jns
jge
push
push
pop
sub
repz
andl
mov
sbb
mov
lods
xchg
cmpsl
test
daa
into
roll
adc
sti
pop
fldl
ja
xor
aad
in
fistps
xchg
add
jno
fucom
in
insl
call
pop
nop
adc
inc
push
pusha
stos
xor
xor
xor
pushf
or
xchg
faddl
mov
xchg
nop
mov
xchg
ja
orl
push
sbb
xlat
jnp
pop
cmp
and
push
mov
movsb
jns
jnp
aam
mov
fldt
clc
xlat
sbb
hlt
adc
sub
enter
dec
add
sbb
dec
and
andb
testb
jo
adc
xchg
outsl
loop
mov
mov
jb
pushf
jb
and
sub
jb
shrl
mov
aad
adc
push
ret
ds
cmp
xchg
push
xchg
or
cld
test
jno
jae,pn
mov
fcomps
pop
pop
sbb
mov
jb
repz
mov
call
adcb
or
test
int3
loopne
and
jmp
mov
cmp
je
sub
or
cli
in
sub
lcall
xchg
test
stos
loop
out
shrb
and
into
sub
mov
pop
inc
mov
in
mov
imul
inc
stc
call
iret
fdivrl
inc
testl
pushl
hlt
mov
and
aaa
mov
and
hlt
sarb
mov
pop
out
scas
movsb
test
mov
cs
mov
cmp
inc
sbb
mov
aas
jl
icebp
push
popa
out
or
and
in
mov
inc
cmp
imulb
inc
stos
fisubl
int3
cmp
push
mov
cmp
test
push
leave
jb
push
shll
pushf
ret
test
add
pop
gs
cli
scas
xor
rorl
mov
fisubl
pushf
adc
pop
repnz
repz
pop
sbb
and
aam
dec
lock
inc
outsl
aaa
loop
push
test
mov
out
or
mov
xchg
dec
ret
jg
sub
mov
or
inc
decb
jae
aam
shll
imul
out
push
mov
cld
push
jb
xchg
int3
jecxz
push
or
jl
dec
push
adc
adc
inc
push
cmp
inc
outsb
xlat
fsubr
xchg
sarl
push
aas
stos
gs
lds
dec
sti
pop
int
insb
push
inc
jp
inc
xorl
subl
pop
int
mov
mov
jbe
ss
test
cmp
mov
sti
dec
cltd
fsubrs
popf
add
je
enter
cli
adc
mov
inc
movsb
push
lret
sub
cld
scas
es
and
cmpsb
jmp
mov
cmp
push
popf
cli
pop
mov
stos
loopne
repnz
call
sti
movsl
out
push
sbb
mov
cltd
idivb
loop
data16
or
jb
sbb
lea
push
pop
pop
stos
iret
pushf
push
jno
xchg
and
fcompl
xchg
inc
pxor
mov
push
push
push
cltd
xor
gs
inc
jge
mov
int
jbe
mov
jmp
cmpsb
out
pop
sub
push
ror
gs
outsl
sbb
out
cmpsl
push
mov
xorl
rep
jl
bswap
push
inc
or
jl
push
adcb
sbb
pop
sub
sbb
mov
je
cmp
cmp
mov
int3
and
out
or
cltd
and
int3
mov
mov
cmpsb
add
xlat
and
mov
popf
xchg
mov
xchg
push
cltd
push
hlt
jo
jns
sbb
ret
jge
ret
std
mov
mov
scas
xchg
adc
xchg
arpl
and
fisttps
sbb
rcl
lret
mov
arpl
adc
outsl
lea
mov
jmp
mov
cld
push
psllw
sub
cmp
or
pop
jnp
pop
out
xchg
shlb
cmp
addr16
aam
inc
insb
xorl
xor
ds
mov
sbb
or
ja
mov
push
mov
mov
daa
shlb
out
push
js
shll
insl
adcl
cs
insl
and
jmp
lea
mov
and
popf
sub
aaa
popa
pushf
sub
add
mov
jp
out
dec
mov
negb
out
imul
das
sub
sbb
lahf
in
mov
sarl
enter
inc
add
insb
push
ja
pop
cmc
lahf
loop
fdivrs
adc
jnp
push
jno
jo
lgs
insl
sbb
cmp
dec
adc
pop
lahf
loop
pop
mov
xlat
pop
out
test
out
inc
popa
mov
jle
andl
xor
enter
inc
repz
scas
sub
cld
ret
repnz
repnz
and
push
int
daa
stos
mov
xor
cmp
imul
jb
pop
adc
or
xchg
fdecstp
cmpsl
push
lods
stc
pandn
rcrl
mov
ljmp
mull
loop
mov
mov
jge
dec
aaa
aad
lods
dec
les
lahf
bound
sarb
jge
out
pushf
lret
lahf
aas
mov
imulb
dec
out
adc
sahf
outsl
cmp
lock
sbb
lods
das
dec
push
cmp
jne
xchg
fldl
mov
lahf
hlt
mov
push
mov
nop
sbb
xchg
rcrb
xor
xor
pop
lahf
mov
or
adc
cmp
add
rcll
mov
clc
add
inc
push
push
push
mov
add
loope
xor
cmpsb
xor
out
mov
inc
mov
jb
adc
gs
aad
int3
pusha
jge
or
push
mov
add
xchg
ret
lahf
jmp
pop
add
jne
cmp
or
mov
jae
sub
sbb
cmp
xchg
dec
xor
in
push
lea
mov
dec
cld
and
add
ret
movsb
or
pop
pop
cs
xchg
jae
and
lcall
xchg
mov
test
or
dec
fstpt
pusha
jge
xchg
flds
and
xchg
rcl
or
jg
jl
sub
cmp
inc
push
or
mov
cwtl
sub
popf
hlt
jnp
lea
dec
lds
mov
data16
into
push
cmpsl
movsb
iret
in
sbb
push
mov
push
push
cmp
jae
mov
mov
xlat
mov
test
insb
push
xor
sbb
add
out
repnz
pop
pop
jne
mov
xchg
push
rcrl
fdivr
sub
and
bound
push
push
outsb
add
ret
stc
jmp
mov
popfw
scas
and
adc
and
xor
cmp
dec
xchg
push
shlb
mov
mov
cmpb
cli
lahf
mov
adc
fiadds
mov
mov
repnz
into
add
mov
int
pop
xchg
cltd
insl
icebp
rcr
pop
aas
cmp
sub
clc
mov
scas
inc
test
es
ds
adc
mov
cmpsb
stc
movsb
mov
pop
sahf
dec
out
xor
movsl
and
fnstenv
pop
dec
jno
jb
jnp
fdivrs
and
lcall
stc
andb
jge
rorl
push
xlat
xchg
call
or
fistpll
and
sub
stc
inc
jle
lods
sub
sbb
mov
shll
mov
js
mov
lcall
mov
idivl
xor
testb
sarl
mov
pop
add
popf
insl
push
and
and
jge
mov
enter
sub
and
xor
xor
lods
pop
or
hlt
outsb
adc
cld
sub
in
mov
mov
int
mov
xor
test
lods
dec
mov
inc
sub
outsb
movsl
pop
push
mov
ja
sub
jle
pop
jo
xor
andb
dec
pop
adc
hlt
iret
jg
cmp
pushf
out
inc
xor
inc
or
lods
jge
cmp
fisubrl
insb
inc
fbstp
daa
ret
xchg
cwtl
xchg
pop
jo
dec
and
adc
adc
push
or
xor
xor
lret
jmp
je
pop
negl
sti
test
jl
add
lcall
xchg
lahf
mov
dec
mov
mov
push
lock
dec
insl
mov
hlt
sub
int3
pushf
sub
aam
call
divb
jl
fs
or
sbb
test
andl
pop
sub
ffree
jb
ret
or
mov
push
mov
jb
xchg
adc
pop
jge
adc
das
jne
das
imul
in
test
icebp
cvtps2pd
xchg
xor
xchg
dec
xchg
adcl
out
mov
adc
xchg
or
mov
lods
in
test
fnstsw
mov
mov
aam
add
fsubrl
fwait
cmpsb
push
cmp
pop
test
sbb
dec
xchg
inc
mov
loope
lock
pop
fistl
sti
mov
mov
xchg
sub
or
mov
fnstenv
test
inc
xor
push
sub
into
push
fucom
or
and
xchg
push
sub
repnz
pop
mov
out
xchg
loope
mov
clc
cmc
orb
push
not
loope
ret
pop
mov
mov
jae
xorl
xor
es
sub
mov
sbb
out
rclb
push
cmp
das
dec
pop
flds
fmul
int
shlw
jae
sub
rcll
sti
scas
shrl
xorb
inc
mov
jle
and
mov
mov
leave
repnz
pop
jbe
ret
xchg
aam
mov
add
push
pop
jne
lea
jns,pt
pop
pop
jle
lds
inc
adc
jge
pop
mov
mov
jb
pop
je
and
out
cmp
pop
or
push
scas
in
jne
out
dec
xchg
mov
push
mov
sbb
mov
out
and
pusha
mov
pusha
pop
out
nop
scas
jge
loope
movsl
ret
jbe
enter
or
inc
scas
adc
lret
jp
mov
mov
and
popf
adcl
rclb
jo
sub
pop
push
ljmp
add
pop
sbb
dec
subl
xchg
push
xor
leave
je
cmp
xor
jmp
cmp
pop
xchg
pop
mov
fnstcw
out
or
cmp
imul
repz
icebp
or
lahf
pop
shrl
xor
nopl
lods
mov
pop
stos
shl
out
xchg
pop
int
inc
stos
imul
push
jne
mov
mov
xor
jmp
or
cli
stos
popa
xor
leave
sbb
push
jge
pop
mov
sub
icebp
cmp
fwait
or
arpl
add
dec
xor
mov
testl
test
aam
mov
or
pop
cmc
dec
xchg
jns
inc
xor
movsl
in
cs
call
popa
iret
mov
push
and
jg
idivb
mov
mov
pop
mov
mov
and
mov
push
add
push
push
std
mov
push
es
xchg
inc
ret
push
sub
cli
leave
or
lods
stc
rorl
sbb
push
test
fsubrs
ss
xlat
cmp
gs
pop
mov
popaw
inc
mov
sbb
and
fstpt
and
sub
es
pop
jbe
pop
gs
sahf
mov
mov
subb
subl
cmp
imul
outsb
movsb
add
mov
leave
cmc
inc
out
popa
xchg
notb
or
sub
lds
add
or
icebp
sub
adc
imul
mov
adc
xor
cmp
ss
cwtl
push
stos
add
sub
lds
and
add
jle
lea
jmp
push
push
std
dec
stc
imul
stos
fdivl
lret
xor
sub
sbb
pop
arpl
inc
out
imul
cmpsb
push
push
jo
mov
scas
xor
lahf
add
cmp
fdivl
add
xor
repz
jle
fdivrp
shll
adc
sub
adc
and
mov
mov
xorl
sub
pop
in
push
loop
cwtl
rcll
subb
jns
inc
xor
cmpsl
imul
movsl
dec
jmp
clc
dec
fmull
inc
pop
pushf
addr16
add
xor
inc
fistps
test
mov
or
inc
ret
leave
ss
pop
test
mov
fdivrs
aaa
arpl
shrl
aad
sahf
cld
les
cs
in
ret
or
pushf
mov
cmpb
pop
testb
test
cld
sbb
inc
fstl
inc
loopne
pop
jmp
movsb
pusha
xchg
ljmp
and
rolb
test
sbbb
leave
lods
and
in
ffreep
xor
or
xor
movsb
imul
dec
rorl
out
cmp
loopne
mov
jo
push
jb
stos
lret
jp
scas
sbb
inc
int3
pusha
push
mov
xlat
add
imul
in
inc
dec
fmull
jae
out
xchg
out
mov
jle
pop
cmp
inc
pop
outsl
fidivrs
pop
or
sbb
sahf
ss
jb
sub
in
lea
ficomps
mov
sub
cmc
leave
xor
js
xchg
pop
mov
mov
in
ret
lret
sub
cmp
push
popa
bound
int
ja
fwait
sbbl
data16
adc
add
fnstsw
or
enter
mov
sbbl
repz
nop
into
cmp
pushf
inc
dec
pop
xor
dec
adc
pop
adc
pop
ljmp
adc
sub
cmp
pop
or
stos
xor
jp
push
mov
jecxz
imul
xchg
jae
push
shll
popf
test
mov
inc
cwtl
add
dec
sub
push
je
faddl
test
push
sub
mov
push
in
insl
mov
mov
in
nop
push
and
add
mov
fcompl
das
mov
mov
aaa
loop
jb
xor
repz
inc
cld
stos
adc
jmp
shlb
jno
lock
mov
les
cli
lods
add
mov
in
xlat
sbb
mov
mov
popa
mov
and
int
mov
cmpl
push
dec
sub
mov
imul
aam
int
jle
out
lods
lcall
mov
fistl
push
mov
sub
sub
jnp
outsl
mov
adc
loope
js
push
mov
mov
fstpl
sti
test
mov
jno
fisttps
mov
in
mov
mov
ficoms
addr16
push
movsb
mov
push
nop
add
or
rcll
jae
icebp
inc
inc
mov
adc
imul
cmp
in
cli
mov
stos
outsl
loope
pop
cmp
jmp
fbstp
js
mov
add
pusha
ret
hlt
movsl
cmp
shll
fadds
cmp
popf
rclb
stos
loope
test
aaa
inc
mov
push
mov
inc
inc
outsb
out
push
fldcw
dec
jl
sahf
sbb
mov
or
sub
rcll
cmp
in
dec
dec
loopne
xchg
hlt
pop
xlat
or
jb
cmp
and
inc
cmp
xchg
push
out
push
test
loope
jle
sub
sahf
out
in
or
dec
inc
sbbb
jnp
add
mov
imul
xor
inc
lock
std
jecxz
sub
fcoms
push
test
jns
cmc
lock
in
add
cmp
xchg
sub
es
or
add
push
xor
jmp
inc
shl
lcall
cmp
xor
xor
and
inc
loopne
xor
mov
xor
pop
lock
and
cmp
rorl
xchg
push
je
inc
out
call
outsl
je
pop
or
shrb
or
test
sahf
mov
shlb
add
or
mov
add
xchg
pop
scas
xchg
hlt
out
jg
mov
add
cmp
data16
inc
in
cmp
push
fidivs
dec
iret
in
add
adcl
icebp
outsb
insb
ret
divl
jne
lods
insl
push
hlt
mov
js
push
mov
scas
mov
push
bnd
ret
out
rcl
daa
andl
mov
repz
sub
fnstcw
jbe
repz
sbbl
lods
jmp
sbb
jno
add
imul
dec
mov
pop
fdivrs
sahf
iret
fiadds
out
mov
pop
psubsw
push
and
rorb
pop
jae
insl
lret
xor
add
add
jae
xchg
repz
or
mov
add
xor
fcomps
jo
xchg
sub
or
leave
data16
in
cmp
fistpll
jp
fisubs
mov
sub
pop
push
inc
fmull
inc
dec
push
inc
dec
fdivrp
lret
adc
or
cmpsb
jmp
fldcw
es
dec
and
mov
jns
xchg
pusha
adc
push
cmp
stos
lahf
scas
addr16
inc
adc
xchg
pushf
dec
or
cmp
and
push
rorb
hlt
jne
push
fstp
mov
mov
sub
std
ror
sub
push
cmp
imul
addr16
cmpsb
enter
gs
mov
in
out
dec
jns
mov
add
mov
call
jae
cld
add
out
outsl
cli
rcrb
mov
clc
std
push
mov
jb
xchg
add
jne
xlat
pop
fcoms
repnz
mov
xchg
mov
push
add
adc
dec
loope
ljmp
shll
shrl
int
inc
pop
popa
dec
mov
dec
fwait
in
sbb
mov
sbb
and
ds
jmp
mov
lea
movsb
jae
or
adc
xor
nop
repnz
dec
call
test
xor
sti
pop
jb
out
insl
fsub
push
push
aam
dec
sbb
push
inc
int3
ret
sbb
mov
sbb
and
pop
ror
mov
sub
nop
ret
push
ss
xchg
and
xchg
in
xchg
lds
das
add
jmp
insl
int
scas
pop
push
mov
loopne
pop
adc
cltd
cmp
and
pusha
add
rcll
lret
stos
cmpsb
ret
jno
xor
pop
push
pusha
mov
pop
mov
test
les
in
or
xor
xor
cmpsb
jae
js
shlb
cmp
xchg
or
int
fwait
mov
jmp
mov
mov
push
or
popf
xor
mov
or
mov
dec
or
push
cmp
outsl
add
sti
or
cltd
popa
xor
sub
in
and
jl
js
or
inc
sbb
push
push
aad
ret
pop
dec
jle
sbb
dec
rcrb
mov
cmp
int3
adc
inc
test
lret
imulb
scas
and
jg
sbb
loope
dec
clc
std
test
xor
mov
pop
adc
ret
in
add
mov
and
movsl
daa
xchg
sub
in
push
push
popl
cmpsb
out
loope
sbb
sbb
iret
xchg
push
data16
xchg
aas
repnz
fs
and
jbe
inc
addl
xchg
dec
lds
sub
pop
je
jb
sub
int
inc
jmp
jmp
popa
xorb
sub
cld
inc
inc
mov
jns
jbe
sub
dec
jnp
shrl
movsl
outsl
dec
cmp
test
cmp
ret
push
mov
adc
push
ret
or
and
push
xor
fisubs
shr
frstor
mov
dec
fwait
pop
mov
int
or
aad
aas
cli
int3
leave
repz
dec
mov
fldt
imul
dec
lahf
cmp
or
mov
push
lock
addb
inc
and
sub
adc
mov
js
call
sbb
pop
lret
xchg
dec
shll
jl
je
xchg
cmp
mov
clc
out
and
push
jle
inc
popa
sub
ret
mov
pop
lds
mov
dec
xor
aaa
fxch
sbb
mov
in
fisubrs
add
and
jecxz
sub
xchg
push
cs
sub
lret
or
out
adc
sub
pop
jae
out
mov
filds
popa
and
push
clc
test
and
jbe
push
ja
cmp
in
subb
cmp
or
push
popf
loopne
inc
xchg
cmp
push
in
xchg
mov
jnp
aas
popf
and
mov
lret
fmuls
and
arpl
insb
ja
lea
add
data16
push
xchg
js
imul
adcb
jnp
orb
xchg
cltd
mov
push
es
push
fldl2e
push
into
cltd
bound
mov
jne
daa
cmp
dec
dec
out
in
cmc
div
mov
inc
out
cmp
mov
sbb
cmp
push
pop
inc
adc
ret
pushf
cmp
mov
mov
sbb
or
sbb
das
aas
arpl
mov
inc
cwtl
ret
jp
or
arpl
cmp
test
stos
xor
add
inc
and
inc
mov
iret
push
je
repz
insl
movsl
sub
orb
fsts
out
jmp
imul
fists
pushaw
pushf
enter
fmull
sbb
push
mov
in
adc
pop
flds
inc
sbb
repnz
sbb
in
jb
mov
clc
jg
jne
sub
xor
cltd
arpl
xlat
arpl
lock
jg
sub
or
mov
cld
lock
js
pop
push
jno
rclb
pop
mov
add
xor
gs
jmp
xor
mov
pop
mov
addr16
sbb
mov
insb
std
jo
lret
fwait
push
popf
cli
xor
mov
xor
shl
in
dec
push
mov
push
xlat
or
test
jns
shll
scas
add
push
add
leave
pop
test
xchg
test
incl
jb
outsl
test
lret
imul
inc
add
jo
mov
pop
popa
fisubl
mov
out
lods
mov
adc
aaa
div
lock
cltd
rcll
push
lret
mov
nop
stos
jo
jp
shrl
out
pop
dec
pop
out
movsb
cmp
or
and
bound
cld
lret
xor
and
out
mov
cmp
aas
adc
aad
aad
lret
dec
adc
inc
insb
cld
cmpb
sarb
ret
out
or
adc
mov
xchg
mov
lahf
aaa
mov
addb
xchg
or
sarb
lcall
dec
jbe
scas
insb
jns
push
mov
std
and
push
or
testb
roll
adc
gs
sbb
pop
movsl
jno
sub
cmp
add
in
js
in
push
jp
mov
loop
sti
out
mov
push
push
push
cwtl
lahf
test
add
movsb
mov
in
add
jae
xor
es
mov
xchg
clc
sbb
pop
rcrb
jg
add
cmpsb
xchg
lea
ljmp
in
sti
jns
aam
xchg
push
jnp
lock
scas
shlb
mov
lods
shll
mov
outsb
mov
in
sub
jbe
jmp
repnz
mov
mov
js
or
cwtl
mov
in
dec
cmpsl
push
daa
loope
xchg
cmp
adc
mov
adc
loopne
jmp
jo
imul
fcmove
pop
decb
sarb
int3
dec
mov
xchg
lea
sbb
mov
mov
fwait
pop
cmp
mov
out
ret
sbb
out
inc
jns
loop
clc
cwtl
fmull
pop
push
das
pop
insb
jne
mov
mov
stos
mov
xor
or
repnz
lods
jge
dec
sub
xor
sub
cs
xchg
and
fldl
nop
jns
cmpsb
popl
aam
push
in
mov
testb
cmp
addr16
out
inc
faddl
leave
cwtl
mov
lods
pushf
or
int
sarl
inc
adc
popl
jbe
arpl
dec
mov
xchg
pop
mov
testb
incl
bound
cli
test
dec
repz
jbe
repnz
and
sub
xchg
push
sahf
fs
mov
push
dec
aas
push
push
jge
pop
add
stos
adc
xchg
loop
add
imul
push
pop
repnz
out
leave
je
sub
fsub
imull
das
daa
test
xchg
pop
stos
mov
in
sbb
pop
dec
and
mov
jg
test
mov
loope
xor
or
xchg
ds
sub
adc
pop
bound
push
jne
mov
mov
aam
daa
push
add
ret
js
in
cmp
and
int3
cs
adc
insl
xchg
icebp
adc
movsb
popf
movb
out
bound
dec
fadd
adc
add
stos
mov
hlt
lods
and
repnz
jo
psrad
in
stos
int3
inc
imul
aaa
sahf
repz
dec
sti
lcall
or
scas
xor
xchg
push
sbb
lea
adc
pop
fcmovnbe
mov
jl
xchg
push
xor
repnz
es
ljmp
aas
movsb
sarb
pop
dec
push
or
mov
pop
xlat
aas
sub
jbe
aad
xor
add
sub
dec
push
scas
push
dec
int3
insl
mov
int
mov
mov
cli
in
addb
inc
test
gs
pop
mov
nop
pop
mov
cmc
xor
jb
rcrb
sbbb
jne
cmpsl
sbb
ds
cmp
pop
dec
and
xor
cld
mov
ret
mov
sahf
lds
jo
lock
popf
push
xchg
jbe
je
mov
sub
dec
xor
lret
daa
add
push
std
dec
imul
add
ja
jae
pop
enter
mov
mov
xor
or
loopne
adc
pop
push
add
lahf
scas
je
inc
lods
mov
arpl
mov
push
or
xorb
inc
pop
testl
lds
cmp
rep
fisubrs
pop
or
lret
jnp
inc
sub
xchg
or
insl
je
stc
scas
andl
inc
cmp
mov
sbb
mov
jge
out
push
cwtl
out
add
jge
sub
xchg
pop
push
out
pop
sbb
or
adc
or
jbe
jno
add
mov
push
lock
pop
lret
jnp
fnstcw
fstpt
mov
call
xchg
pop
push
out
add
and
sub
icebp
jp
adc
push
popf
rolb
test
dec
mov
pop
clc
dec
imul
iret
inc
scas
and
pop
test
pusha
pop
mov
add
add
mov
cmp
inc
adc
insl
and
jae
les
xor
popa
xchg
xchg
call
dec
xchg
pop
enter
push
add
dec
adc
mov
nop
jmp
add
jl
aas
ljmp
mov
xor
adc
xchg
or
add
push
and
and
ret
jle
inc
repz
sub
fsubs
gs
mov
lcall
xor
dec
fwait
fs
xlat
xchg
rorb
nop
clc
inc
pop
add
stc
and
cmpsl
dec
je
fsub
cmp
adc
lret
in
test
int
push
push
sub
mov
fmul
mov
out
add
add
push
idivl
test
std
call
cwtl
inc
cmpsb
pop
iret
insb
mov
in
int3
test
sbb
inc
pushf
push
loope
in
mov
subb
xor
xchg
dec
cmc
inc
xchg
cs
push
mov
and
mov
or
out
mov
clc
ds
movups
push
in
je
xlat
cmpsb
sbb
out
add
outsl
rolb
rcl
shll
add
sbb
pushf
stos
mov
pcmpgtw
lds
sub
popa
push
add
push
cmp
pop
orl
mov
xor
inc
popa
mov
xchg
cltd
mov
xor
and
add
jle
in
xchg
xor
arpl
lock
jbe
mov
sub
shr
mov
mov
jp
or
xor
rcr
push
sbb
mov
rcrb
icebp
out
in
or
inc
add
jno
push
bound
in
adc
sub
inc
mov
or
or
sbb
mov
sti
adc
push
xor
pop
mov
inc
jle
shlb
jl
mov
pop
xchg
popa
ja
fcomps
rclb
daa
or
aas
pop
fstpt
mov
jnp
or
xchg
mov
in
ficomps
outsb
out
movsb
ja
mov
bnd
movsb
lds
mov
or
pop
mov
ljmp
loopne
aam
push
sub
and
mov
mov
cmp
movsb
sub
cmp
stos
mov
movsb
jb
fmul
data16
arpl
jbe
sub
add
mov
loope
orb
hlt
adc
mov
ljmp
add
mov
cmc
jae
sub
es
jle
dec
enter
push
xchg
pushf
mov
stos
icebp
adc
enter
pop
sbb
pop
jecxz
inc
ss
add
mov
cmp
push
ljmp
je
insl
mov
jmp
add
in
xchg
call
lahf
mov
and
loope
xor
scas
pop
or
push
shll
pop
sbbl
push
push
pop
xor
ds
dec
outsb
lods
test
mov
stc
gs
push
xchg
ss
in
jp
call
pop
mov
popf
js
sbb
jns
jg
loope
adc
test
push
stos
jg
mov
fnsave
xor
jg
xchg
jle
xchg
cmp
dec
test
divl
daa
into
push
push
mov
pop
push
pusha
add
add
sbb
ret
stos
xchg
sub
mov
jae
je
sub
aad
mov
insb
in
pop
pop
icebp
or
lods
mov
into
mov
fstpt
out
push
cld
jg
adc
xor
outsb
outsl
jge
test
cli
aad
mov
jmp
inc
adc
mov
cmp
inc
test
or
daa
xchg
btc
push
xor
jb
jne
je
xchg
dec
fldl
and
test
or
les
inc
fwait
imul
movsl
in
loope
pop
ret
jg
xchg
jo
insb
fildl
pop
icebp
test
inc
std
push
out
insw
xchg
lea
jecxz
cmp
sbb
pop
mov
mov
jns
imul
cld
fisubrl
jb
jb
mov
das
jmp
xor
pop
outsb
inc
mov
test
add
fidivs
aaa
jns
adc
mov
decb
dec
testb
es
rolb
cmp
mov
lahf
out
sub
add
lcall
fiadds
gs
mov
mov
inc
mov
out
jo
fildl
daa
jg
jbe
jl
sub
mov
xor
jbe
adc
movsl
ret
inc
inc
icebp
cwtl
dec
dec
cmpsl
shl
aaa
lahf
dec
pop
push
mov
lret
pusha
fwait
or
loope
inc
pop
shlb
repnz
dec
mov
push
xchg
das
sarl
rcrb
dec
stos
cmp
jno
xchg
fwait
cmc
mov
out
adc
arpl
gs
and
jmp
pop
xchg
sbb
add
push
pop
xlat
or
cltd
dec
enter
loope
loopne
movsb
cld
enter
sbb
stc
js
mov
inc
addr16
mov
or
cmp
insb
jle
cmp
iret
out
in
adc
mov
mov
adc
rcl
sub
jb
lods
xor
fadd
loopne
add
add
sub
aaa
xor
adc
inc
push
xor
jne
mov
mov
cli
outsb
sbb
test
adc
call
cli
dec
mov
out
test
sbb
stos
test
or
pop
push
sbb
pop
push
cmp
es
movsl
or
pop
stos
mov
inc
mov
sbb
mov
popf
inc
fists
pusha
xchg
enter
adc
sub
jns,pt
add
stos
std
clc
jae
in
jg
jecxz
fdivl
or
int
hlt
pop
push
fiaddl
mov
xor
add
xor
decl
mov
movsl
xor
pop
cmpsb
popf
push
or
pop
popa
mov
into
mov
xor
dec
xor
jmp
mov
dec
gs
je
mov
or
cmpsb
jb
outsl
dec
in
sub
movsl
iret
insl
and
pop
sub
lea
ret
lock
jne
push
lock
lds
cwtl
aaa
and
enter
addr16
leave
jne
xor
mov
pop
sub
jmp
mov
into
stc
add
add
dec
int
test
mov
cmp
fdivl
cwtl
out
imul
repnz
and
push
and
mov
aas
sub
inc
adc
push
outsl
or
mov
stos
mov
out
shr
sti
xchg
push
inc
scas
imul
pop
jmp
dec
ja
leave
insl
int
jbe
sbb
sbb
shlb
jb
clc
cs
sbb
jp
jmp
cmp
test
jno
lock
insl
cmpsl
cmpsb
inc
or
pop
fcomip
sbb
push
mov
jg
inc
mov
inc
pop
xor
bound
dec
test
aam
mull
jmp
addps
adc
mov
stos
call
in
adc
addr16
pop
and
adc
jne
xchg
mov
loop
loop
sub
and
inc
inc
imul
fisubl
in
pop
mov
arpl
jbe
push
mov
sbb
mov
lods
aaa
xchg
adc
pop
xor
aaa
loope
pop
dec
orl
and
repz
pushf
icebp
xchg
fs
insl
popf
flds
pop
jg
je
push
xor
testb
mulb
add
sbb
std
cmp
xor
mov
imul
lds
ss
push
lahf
mov
sarb
dec
sti
jo
mov
insb
sub
fldenv
jle
cmp
add
push
sbb
sub
ja
adc
jle
push
mov
popa
ret
mov
mov
insl
adc
add
in
or
mov
lret
and
fwait
out
aad
push
daa
add
adc
cld
lods
push
in
push
pop
lret
sub
fstp
pop
decb
ljmp
add
setnp
ljmp
xchg
or
pop
movsb
jb
pop
cmpsb
adc
lds
xor
ja
test
out
stc
dec
jle
lcall
jmp
mov
fsubrs
pop
out
mov
xor
outsl
dec
bound
mov
arpl
xchg
sbb
fisttpl
vmovaps
inc
movsb
pop
scas
hlt
pop
lret
xchg
scas
mov
scas
and
aad
repnz
popf
in
icebp
jl
es
pop
push
arpl
mov
mov
add
sub
enter
shrl
je
mov
repnz
or
mov
push
arpl
or
pushl
jbe
pop
popa
cmpsl
fwait
icebp
popf
lret
hlt
movsl
push
testb
shlb
lock
iret
jo
into
movsl
xchg
jg
in
dec
dec
sahf
lods
faddl
lret
repz
mov
push
aam
jae
push
mov
lahf
incl
xchg
jge
adc
out
test
dec
sub
inc
in
das
movsl
push
outsb
test
std
iret
arpl
xchg
test
push
daa
sti
fstpl
fdivrl
rcrb
mov
jmp
std
subl
fsubrs
mov
add
pop
fbstp
inc
xor
shlb
dec
lea
fbld
sbb
jnp
mov
shll
or
fldenv
in
add
mov
inc
sbb
mov
imul
neg
ret
sbb
xchg
loope
xchg
adc
pushf
or
push
iret
inc
add
and
int3
in
das
add
inc
cld
cmp
ja
inc
cmp
pop
mov
or
cmp
cli
or
push
mov
cmp
jg
stc
sub
jae
xchg
xor
xor
aam
push
aas
pop
and
add
lret
test
xorl
push
jge
das
add
pop
lea
out
ljmp
cmp
sbb
ss
jbe
inc
movsl
xor
lcall
inc
xchg
xchg
and
pop
mov
xchg
hlt
xchg
dec
idiv
ret
aas
jno
in
xchg
mov
notb
inc
mov
mov
bound
xchg
jne
insb
push
mov
xor
mov
movsb
lock
add
ret
push
inc
inc
and
adc
mov
fmull
push
dec
je
cmpsb
sub
mov
mov
aad
jbe
sbb
out
jne
inc
cmp
push
mov
nop
jnp
mov
mov
cmp
inc
cmc
mov
push
pop
mov
jne
divb
and
jae
add
std
rclb
dec
mov
in
adc
cltd
jl
imul
stos
sub
jb
pop
mov
jns
push
push
jbe
inc
and
les
xlat
les
add
mov
jo
sbb
jbe
inc
fdiv
das
jmp
ja
mov
mov
and
insb
insl
xor
pop
mov
push
test
lods
sub
lret
insl
in
mov
sahf
jg
lods
push
or
push
push
dec
mov
fnstsw
fldt
outsl
cltd
adc
enter
inc
push
clc
in
jns
or
test
lea
mov
jecxz
mov
inc
sbb
jno
addr16
lock
nop
fdecstp
and
sub
out
stc
adc
jecxz
xchg
push
pushf
push
dec
pop
into
popa
mov
add
ret
dec
pop
andl
or
rol
call
push
rolb
xor
jno
xor
fbld
mov
scas
sbb
mov
xchg
adc
pop
bound
or
dec
xor
jmp
adc
out
lret
sub
mov
jae
movsb
shrb
lds
cmp
add
add
pop
jecxz
adc
fsubr
stos
add
xor
aad
fs
and
ret
and
cmp
stos
xlat
mov
pusha
jbe
imul
fs
outsl
xor
sub
inc
test
sub
dec
lret
leave
push
pop
cli
dec
cmpl
push
jg
adc
shlb
loop
in
add
sub
mov
xor
pop
pop
cmp
mov
rolb
sub
push
mov
cmpsl
ss
push
iret
sbb
sbb
jmp
sbbb
stos
les
enter
lahf
adc
pusha
cmp
or
ret
pop
daa
adc
or
mov
fsubp
push
cmp
or
sbb
test
and
add
or
jg
or
loop
dec
push
iret
or
push
outsl
xchg
xchg
imul
sub
pop
std
fadd
dec
test
cs
xor
mov
bound
mov
scas
idivl
lods
xchg
or
sbb
xor
jl
fucom
or
add
sbb
jo
rcrl
cmc
movsl
mov
call
or
pop
stos
xchg
lods
mov
or
jmp
jg
cld
aas
jecxz
add
cltd
rcr
adc
add
xchg
sbb
movsl
push
clc
lea
pusha
xchg
or
push
call
jae
xor
inc
popf
int
les
arpl
push
out
dec
popf
adc
pop
or
jmp
push
sub
sbb
mov
or
fstl
es
lcall
std
xchg
or
jbe
leave
daa
movsb
lret
or
clc
scas
scas
fisttpl
lock
dec
xorl
pop
xor
mov
jmp
sbb
imul
imul
jns
adcb
cmpsl
inc
pop
add
or
lods
mov
xor
lds
cmp
data16
inc
insl
xor
push
inc
test
movsb
jl
scas
mov
ret
lods
lahf
or
push
aas
add
int
pop
rcr
in
je
jnp
xchg
push
sbb
push
xor
xchg
gs
int3
je
and
jl
jl
sarl
out
in
imul
jno
cmp
mov
adc
stc
cmc
jbe
lock
fcmovnb
xor
sub
and
imul
cs
adc
stc
adc
daa
mov
insb
inc
mov
xchg
fstps
jb
mov
xchg
and
mov
lret
adc
popf
in
mov
repz
mov
mov
pop
mov
iret
les
rcrl
pop
cmp
aas
xlat
in
sbbl
dec
cmp
pushf
fstps
adc
lock
sub
add
jbe
arpl
les
lods
push
out
mov
fidivl
xchg
lock
dec
aas
mov
sarb
sbbl
shl
cmp
mov
lret
cmp
adc
xchg
push
adc
loop
insl
movsb
gs
xchg
in
add
push
into
ss
rol
in
push
mov
lcall
es
and
inc
sbb
pop
cmp
jmp
add
push
jl
out
push
das
rorb
je
and
flds
mov
cmc
push
pop
popa
sbb
and
or
mull
inc
sub
and
aaa
mov
fcmovu
jae
cmp
repnz
mov
jle,pt
jmp
incw
or
gs
arpl
xlat
out
jbe
adc
cmpsb
fisubl
mov
lods
sub
inc
fxch
jb
rcrb
clc
mov
cli
or
ja
test
addb
jo
xchg
sbb
adc
sbb
fisttpl
in
pop
jno
lds
stos
push
gs
adc
addr16
lds
loopne
fwait
xor
mov
shll
mov
mov
cmp
pop
xchg
mov
cmp
sub
cld
scas
mov
sub
out
out
insl
add
mov
dec
and
pop
add
addr16
and
aaa
inc
adc
fsubl
inc
pusha
mov
jle
jnp
pushl
stc
mov
add
nop
xchg
cwtl
xor
sbb
out
sub
fiaddl
push
sbb
add
sbb
adc
or
in
pop
push
mov
jecxz
shrl
sarl
jge
lods
dec
imulb
mov
sbb
dec
mov
cmp
inc
mov
divl
pop
test
mov
sbbb
addr16
clc
iret
xor
popf
xchg
xchg
mov
lock
jno
lods
pusha
fistl
xlat
mov
sub
xor
push
jo
js
mov
inc
arpl
rcrb
frstor
mov
and
lods
stos
sbb
mov
sar
test
mov
add
das
hlt
mov
dec
daa
push
aad
push
cmp
adc
cmp
dec
adc
add
sbb
dec
or
lcall
lahf
insb
in
adcl
add
push
add
iret
setne
cld
pop
jnp
push
cs
gs
js
stc
mov
push
push
xor
inc
loope
or
and
sub
jbe
add
out
aas
pop
and
testb
call
cmp
arpl
aad
inc
inc
fcoml
scas
icebp
mov
scas
rol
jo
aas
mov
sahf
test
mov
cmp
aad
and
call
fldl
xchg
pop
scas
push
imul
mov
cmp
shr
add
dec
pop
in
scas
xor
repz
test
pushf
add
lea
cmp
in
inc
mov
adc
push
jne
loope
mov
jbe
or
ret
fsubs
sbb
outsb
or
dec
push
or
daa
out
std
popa
leave
jmp
dec
or
pop
xor
xchg
add
mov
data16
hlt
lcall
mov
add
cli
cmp
adc
stos
mov
mov
xacquire
mov
inc
mov
xchg
cwtl
cmp
test
shr
sub
cmp
add
or
in
arpl
push
fmull
sahf
pop
aam
sbb
out
mov
xchg
and
inc
in
jge
cmp
jp
mov
vdivps
xor
xchg
push
fildll
xor
lods
push
push
das
push
ret
jmp
shl
jge
out
lcall
stc
ljmp
lahf
add
lea
imul
out
mov
sub
arpl
push
pop
or
mov
ljmp
cmpsb
add
jg
push
movsl
jecxz
lahf
int
adc
stc
adc
sbb
adc
les
fisubl
mov
inc
or
lahf
ret
rcl
das
lea
inc
mov
cmp
mov
fsub
cmp
xchg
dec
cld
xchg
jl
fdivr
jno
movsb
push
pop
jge
rorb
pop
pop
and
mov
in
adc
loop
sbb
push
scas
and
dec
adc
and
sbbb
push
xchg
daa
dec
xor
adc
mov
pop
adc
roll
inc
mov
cmp
bound
loop
xchg
outsl
sahf
jno
mov
xchg
aas
loope
sahf
inc
test
stos
out
fcmovb
test
xor
and
aaa
or
jge
aas
push
adc
cltd
fcmovnbe
lds
push
push
mov
pop
insl
ds
sub
inc
jb
test
insb
mov
out
ror
pop
xchg
repnz
mov
jle
pop
and
jl
imul
mov
loop
mov
ret
add
push
mov
jb
pop
mov
mov
je
in
mov
int
inc
pusha
xchg
add
xor
sbb
rcrb
or
imul
ds
cmpsl
mov
or
and
mov
out
fwait
sbb
cmp
loope
mov
jno
pop
mov
and
fcmovne
or
push
sbbl
jnp
push
xchg
mov
hlt
out
push
sub
xor
dec
lock
cmpsl
lcall
add
cwtl
fisttpll
xor
xor
mov
inc
pop
mov
notl
test
fcomp
inc
cmp
mov
stos
outsl
and
mov
mov
aam
daa
or
imul
js
jne
lea
clc
enter
adc
cltd
inc
or
jnp
cmp
jmp
adc
pop
adc
leave
outsl
fwait
push
mov
leave
in
dec
dec
sub
sbb
push
xor
push
std
push
xor
call
iret
dec
loopne
xorb
imul
call
jl
push
lods
adc
push
xchg
jmp
fstl
jbe
cmp
xor
mov
push
bound
cmp
lret
push
out
push
or
pop
push
xor
mov
xor
cwtl
popf
sti
inc
mov
loopne
in
stos
gs
xor
aas
add
and
jmp
daa
inc
push
jo
jecxz
mov
imul
mov
cmpsb
mov
rolb
jb
or
call
shlb
xor
adc
pop
dec
scas
leave
adc
cmp
mov
fsubs
out
call
mov
sahf
inc
into
ja
dec
or
or
dec
sbb
cmp
cmp
jnp
mov
rorb
hlt
xor
lods
clc
sbb
loop
ret
xchg
pop
lea
addb
dec
mov
or
sbb
sbb
lock
insb
loop
ljmp
outsb
cmp
xchg
and
mov
cld
out
cmp
pusha
pop
adc
test
or
faddl
push
call
cmp
in
sub
push
mov
je
imulb
push
push
call
in
jae
push
imul
fsts
xchg
call
cltd
in
mov
push
imul
sub
push
push
ret
mov
data16
rcrb
jns
xchg
add
jae
adc
jno
jle
iret
xor
add
test
xchg
jge
sbb
jp
in
pop
dec
scas
push
incl
out
jmp
cmp
pop
loopne
es
xchg
enter
dec
dec
jle
pop
fiadds
inc
out
mov
dec
sahf
xor
scas
add
scas
xor
lcall
or
inc
push
mov
imul
mov
insl
xor
mov
mov
rcll
xchg
lahf
lahf
sub
mov
repnz
and
stos
sbb
mov
sbbl
loopne
inc
ficoml
insl
mov
jg
jns
test
xchg
dec
pop
movsl
adc
cltd
push
scas
jnp
cmp
mov
aad
das
add
mov
lahf
xor
aad
push
shrb
int3
pop
aad
push
xlat
movb
adc
shl
xlat
pop
xor
lods
popa
stos
pop
jns
pop
push
sahf
gs
or
ljmp
not
pop
mov
sar
fistpl
ret
dec
mov
pop
pusha
jae
xor
push
int
mov
sbb
lock
out
jno
push
xor
add
jb
jle
cmp
shll
pop
xchg
js
jg
sbb
push
push
les
js
xchg
mov
jns
adc
iret
xlat
mov
fsubl
clc
dec
lret
sbb
adc
or
and
fdivrs
loop
paddusb
test
and
lds
adc
jge
mov
and
xor
mov
repz
cltd
cld
aas
fdivrp
loop
bound
mov
push
js
xorl
mov
fimull
ja
pop
mov
cmpsb
mulb
ljmp
xor
cmc
lea
pop
jge
dec
dec
das
push
jae
je
sub
popf
add
dec
mov
and
mov
fiadds
popa
sbb
xor
movhps
sahf
jecxz
lret
fnstenv
fwait
dec
sti
mov
rcrb
push
lret
lods
lods
inc
ret
push
andl
fstl
das
mov
inc
in
mov
insl
mov
jo
aad
pop
mov
sub
mov
cmp
pop
xchg
inc
ss
dec
shll
xchg
xchg
dec
data16
lahf
in
call
outsb
nop
arpl
arpl
scas
sbb
jmp
fisttpl
jg
jp
or
sahf
mov
das
xchg
dec
out
cmp
xor
cwtl
ja
mov
adc
fwait
push
in
mov
jmp
bound
jnp
not
mov
cwtl
mov
and
mov
lea
bound
pop
loop
or
and
mov
push
lea
jne
roll
insb
pop
inc
cmpsb
das
jne
leave
xor
mov
pop
pop
lcall
lcall
jg
cmp
mov
xorl
decb
inc
jnp
inc
fstpt
int3
jmp
outsl
lock
cmpsb
mov
mov
out
xlat
adc
ss
ficoms
fdivrl
fnstcw
enter
addb
ficompl
and
mov
jne
sub
or
imul
mov
subb
inc
das
mov
jae
rcrl
out
jnp
insb
sub
aad
lret
mov
mov
add
push
mov
gs
pop
lret
enter
add
adc
lret
lods
xchg
mov
test
jg
ja
dec
fbld
jg
sbb
xor
repnz
enter
inc
mov
scas
jge
mov
out
movzwl
lock
or
push
repnz
iret
loop
mov
adc
popf
stc
arpl
lret
mov
loope
mov
push
jnp
pop
xor
adc
push
lret
or
out
mov
out
scas
xor
sti
push
in
cmp
jge
pop
pushf
ljmp
cmp
rorl
mov
pop
lock
push
popa
test
adc
add
mov
loop
daa
inc
sub
notl
dec
dec
inc
mov
jl
or
repnz
jb
pop
pop
dec
sub
pop
stc
sub
mov
call
test
movsl
sub
into
pop
rol
pop
jmp
ds
adc
shrl
xchg
and
stos
divb
xchg
mov
lahf
or
jb
cld
cli
jns
mov
jg
xchg
push
cmp
adc
jno
cld
je
scas
fldenv
xor
sbb
cmp
imul
rclb
fsubs
fisttpll
test
pop
in
loop
push
mov
sub
jmp
sbb
sub
ja
mov
pop
sbb
scas
fcoms
inc
add
out
pop
adc
add
hlt
call
popa
je
mov
imul
in
dec
mov
sub
cmp
js
mov
mov
mov
iret
dec
sti
xlat
addr16
or
and
rolb
sbbl
add
mov
cltd
add
push
jno
add
sub
jp
mov
adc
cmpsl
sti
sub
flds
xchg
mov
xchg
add
adc
in
das
xor
mov
sub
insl
add
adc
xor
push
outsb
pushf
push
out
pushl
das
daa
dec
or
pop
repnz
bswap
cltd
cmpb
add
pop
push
push
push
gs
jo
cmp
negb
popl
mov
nop
mov
out
ljmp
pop
dec
fstl
inc
fcoml
sbb
divl
mov
or
mov
je
pop
ffreep
jmp
xlat
mov
test
adc
fldcw
nop
rcrl
pop
jo
mov
jecxz
sbb
mov
sbb
inc
shl
push
in
gs
sbb
dec
int3
mov
es
mov
push
outsl
inc
xor
mov
sub
cwtl
mov
repz
push
out
sbb
inc
adc
enter
fs
xor
pop
insl
push
into
scas
pop
xchg
sbb
mov
mov
inc
dec
mov
shl
jg
mov
ja
clc
xor
jmp
enter
jl
mov
push
movsb
add
movsb
inc
fcomps
dec
jecxz
pop
aaa
test
leave
popf
mov
loope
add
icebp
imul
mov
idivl
push
mov
insb
mov
xor
iret
ficompl
cmpsb
mov
push
arpl
pusha
movsb
pop
xor
dec
mov
inc
xchg
hlt
rorl
mov
add
cmc
sub
jecxz
xchg
iret
daa
fs
mov
jp
dec
fcompp
fidivl
stc
rcrb
jecxz
jnp
sbb
cld
or
lcall
mov
and
jg
jb
add
xchg
dec
sub
into
jno
shlb
jmp
or
jbe
push
pushf
push
and
xor
mov
cmp
push
fidivs
jbe
xchg
push
mov
stos
inc
lods
daa
xor
sub
or
and
movsb
nop
jno
sbb
rcr
xchg
xchg
mov
out
push
addr16
pop
in
sub
jns
add
cmp
adc
adc
loopne
lods
pop
loope
icebp
js
mov
dec
stc
and
dec
out
loop
stc
fdivr
add
test
or
es
test
out
pop
data16
xchg
lock
das
and
dec
lcall
je
mov
mov
icebp
cmp
cmpsl
fistps
leave
inc
inc
jl
or
insb
outsb
ret
repz
and
or
jg
inc
jne
pop
lods
fadd
ja
jae
bound
lret
cmpsb
push
push
adc
fstps
xchg
jbe
loopne
xchg
iret
int
mov
and
or
out
sbb
xlat
push
test
cmpsl
xor
stos
lock
cmp
outsl
sbb
out
gs
inc
daa
cmpl
popf
in
mov
in
stos
dec
pop
push
xor
fcmovnu
out
idivl
pop
das
sub
push
pushf
insb
aam
das
sub
outsb
outsl
and
je
cmp
int
pop
mov
jnp
js
out
ret
iret
pushf
pop
cmp
adc
add
jge
or
xchg
jle
dec
test
ss
mull
movl
sbb
mov
add
add
shll
imul
mov
stc
xor
dec
pop
int
jne
push
out
mov
lods
jle
ret
adc
pop
mov
jnp
ljmp
xchg
ds
shrd
mov
dec
sub
mov
rorl
rorw
mov
or
sahf
and
ss
stc
mov
hlt
in
adc
mov
rcll
sub
jg
cmpsl
sbb
xor
into
sbb
leave
xchg
mov
gs
cmp
cmp
shll
leave
adc
pop
xor
add
cli
testb
into
gs
nop
pop
jns
ficomps
ljmp
xchg
cmp
sub
push
sub
call
cmp
lea
dec
popa
push
stos
shl
dec
lds
sub
fwait
aas
jecxz
ret
adc
repz
cmp
cmp
sub
jne
lods
xor
jo
push
dec
enter
inc
xchg
loopne
dec
or
inc
xor
adc
mov
fsubs
cmpsb
push
dec
fcmovbe
mov
push
fstps
mov
leave
jg
mov
outsl
dec
lret
mov
dec
dec
or
cli
dec
mov
adc
ret
ret
push
nop
jp
mov
mov
xchg
or
pop
sbb
mov
cmp
pushw
jno
fldenv
adc
call
mov
movsb
xchg
aas
and
jbe
incl
loope
cmp
pop
hlt
cmp
or
lock
lcall
sub
bound
dec
inc
in
add
and
adc
je
fs
aad
aaa
incb
imul
mov
lods
push
cs
mov
jl
repz
pop
xor
ja
dec
xchg
shll
xchg
call
gs
or
adc
xchg
sbb
sub
filds
pop
fcmovb
insl
mov
shlb
xchg
pop
pop
or
and
cmpsb
andb
mov
adc
subps
cmp
rcl
cmp
andl
std
idivb
xlat
cmp
sbb
das
xchg
sub
push
out
lock
sub
push
mov
pop
jle
mov
cltd
cmp
cmp
pop
push
ja
inc
iret
shlb
dec
mov
dec
gs
push
cld
inc
out
mov
sahf
dec
pop
orl
roll
jmp
jp
es
cmp
ljmp
les
movsl
lahf
xchg
sbb
daa
sahf
int
jbe
es
popa
sub
imul
arpl
mov
std
rclb
ds
xchg
adc
cs
fistps
and
add
push
stos
adc
xor
push
fs
sar
int
push
jo
popf
xor
mov
imul
jae
fnstenv
push
rcl
sbb
cmpsl
cmpsb
pushf
ljmp
add
out
pop
out
out
sbb
mov
jns
mov
outsl
xlat
call
outsl
pop
cltd
sub
repnz
aad
test
cltd
out
xchg
jecxz
jecxz
pop
sbb
inc
push
jl
cli
mov
movsb
inc
push
push
mov
jmp
push
add
outsb
dec
jne
jb
xchg
mov
int
pop
outsl
jb
xchg
lds
push
mov
xchg
nop
xchg
adc
pushf
xchg
icebp
jle
insl
mov
fcmovbe
pop
out
and
hlt
idivb
sbb
das
addl
jle
sbbl
xchg
cwtl
fstl
in
fucomi
lahf
ret
rcll
jecxz
mov
dec
xchg
fcoms
out
inc
sbb
fcmovb
push
loopne
mov
push
stos
jge
xor
pop
cs
fwait
aas
in
popa
call
dec
out
rcrb
sbb
xor
loopne
ret
mov
or
jge
sbb
jns
jecxz
fisubrl
inc
movsb
push
popa
pop
call
out
inc
inc
lods
jmp
mov
push
lea
cs
sbb
mov
dec
pop
fnsave
lods
and
outsl
aad
call
and
cmc
mov
xor
iret
push
clc
unpcklps
mov
inc
push
jp
mov
ret
and
mov
notl
test
ds
cmp
xchg
cmp
mov
mov
shl
stc
xor
fisubs
dec
sub
loopne
in
mov
sub
add
mov
into
fsubrl
push
and
fnstsw
dec
in
push
jae
test
sti
push
gs
shl
xchg
push
fcmovu
cmc
mov
arpl
pop
pop
mov
loope
cmp
pop
pop
xchg
fsubl
inc
lock
rcl
cli
dec
std
popf
insb
xchg
mov
int3
mov
sub
jl
rcr
fldt
and
xchg
cmc
roll
push
test
ljmp
mov
shll
sub
shll
in
inc
cmp
sahf
test
jo
stos
and
lds
and
and
ficoml
cmp
cmp
or
addr16
cmpsl
loopne
in
cld
lahf
addb
lret
pop
ljmp
popl
sbb
sbb
mov
es
out
fadd
mov
adc
pushf
cltd
sbb
iret
push
sub
xchg
mov
mov
xlat
cmpsl
inc
loopne
in
add
shrl
inc
test
iret
ja
ljmp
jmp
push
in
mov
insb
idiv
adc
shl
imulb
in
out
fsubrl
lods
jns
subb
xor
xor
in
fadds
inc
dec
pop
cmpsb
mov
ret
adc
jne
sub
xchg
stc
sahf
aad
mov
sbb
mov
inc
sti
lcall
jne
outsl
jbe
addr16
cmp
pop
xchg
xor
in
jg
jecxz
out
fsubl
inc
les
data16
and
pop
cmp
dec
pop
call
call
push
insl
es
inc
fcoms
push
adc
or
mov
mov
jnp
pop
pop
aad
test
cmp
xchg
and
add
adc
jl
jb
lods
pop
imul
mov
jo
stc
sbb
jnp
jnp
add
inc
ret
outsl
js
int
fstp
sub
push
xchg
push
enter
inc
push
dec
lock
aad
int
xor
adc
je
ret
xor
and
mov
and
inc
mov
gs
dec
add
jge
shrl
sti
pop
lahf
or
mull
stos
loopne
push
adc
mov
xor
cli
imul
andb
adc
xchg
mov
inc
int3
outsb
cmpsb
andl
sub
mov
jp
or
leave
jecxz
jae
xorb
dec
arpl
xchg
adc
cmpsb
and
loop
mov
sbb
and
add
jl
std
pop
mov
cmp
cmp
loop
mov
adc
and
adc
and
and
sub
mov
pop
and
fisttpll
sub
dec
ret
andl
test
enter
outsb
daa
inc
mov
sbb
addr16
insl
icebp
push
inc
dec
repz
cld
ljmp
jno
xchg
lret
filds
sbbl
jmp
inc
dec
lret
aaa
mov
dec
cmp
daa
pop
call
pop
shll
xor
cwtl
fnstsw
rolb
or
ret
pop
jnp
pushf
mov
push
mov
sar
out
lret
dec
imul
cmp
sbb
js
std
movsl
pop
mov
int3
imul
push
stos
add
push
std
daa
mov
jp
cli
and
and
enter
insl
repz
popa
mov
call
mov
jbe
push
add
ret
xor
pop
xor
mov
cmp
ja
pop
mov
mov
mov
test
mov
ret
add
mov
mov
mov
dec
mov
add
aam
add
jbe
mov
cmc
call
fcom
xor
cmpsb
and
std
jg
js
in
lcall
mov
cwtl
fdivl
das
mov
icebp
add
repnz
xchg
fistps
pushf
fisttps
or
dec
xor
push
rclb
lret
mov
fistps
mov
xchg
adcl
mov
jle
es
int3
mov
mov
add
cmpsl
fs
bnd
cmp
sub
pop
xchg
lods
stc
mulb
pop
outsl
sbb
sbb
mov
loop
loope
mov
jmp
push
scas
test
shlb
xchg
mov
ljmp
xchg
std
js,pn
xor
adc
out
dec
mov
roll
sub
jne
xchg
add
mov
dec
rcl
mov
aas
xor
stos
xchg
stos
rorl
lods
std
push
and
fldl2e
xorl
xchg
lret
shll
cmp
sub
hlt
push
iret
cli
push
mov
push
mov
sub
adcb
push
outsb
jmp
mov
mov
psubb
and
adc
and
inc
inc
xchg
sar
push
cli
mov
xor
cmp
rolb
xchg
pop
movsb
mov
shl
adc
push
add
nop
sub
adc
iret
stos
imul
sbb
mov
sbb
testb
xlat
or
shl
xor
outsl
add
and
mov
negb
sub
roll
inc
dec
cs
std
mov
sahf
fimuls
ljmp
jl
inc
aad
pop
mov
xlat
test
fs
lods
xchg
aam
add
jmp
aaa
jns,pn
cld
imul
mov
add
adc
jb
adcl
inc
daa
cs
pushf
sar
mov
jecxz
sbb
or
add
in
out
ret
iret
es
dec
jle
adc
dec
push
dec
aas
bound
jbe
pop
fistpll
inc
jnp
inc
cmp
dec
arpl
pop
and
enter
lret
mov
xlat
push
mov
mov
aas
int3
mov
pushf
pop
push
lret
lahf
mov
repz
icebp
jp
xor
lods
mov
push
cmpsb
cs
mov
and
js
imul
or
xchg
lcall
andl
ja
add
in
in
adc
jl
mov
sbb
inc
inc
sub
push
outsl
cltd
icebp
loopne
loop
rclb
push
pop
jae
pusha
adc
adc
push
psubsb
mov
adc
lock
es
inc
ja
lcall
pop
sub
xor
mov
and
sub
stos
movsl
mov
pop
adc
push
aad
mov
push
or
jmp
add
out
insb
sub
mov
sbb
xorl
add
push
std
sbb
xchg
add
movsb
stos
ret
push
sti
pushf
movsl
pop
movsl
push
or
push
les
mov
pop
jp
lret
or
pop
inc
jle
jb
test
jge
sub
pop
scas
jmp
adcl
pusha
dec
push
outsb
scas
call
cmp
jmp
sub
and
and
outsl
push
ja
mov
cwtl
push
popf
stos
push
and
jmp
or
xchg
mov
push
cmp
push
out
test
dec
lret
loop
xchg
add
in
pop
and
das
scas
add
js
popf
lcall
sbb
add
stos
inc
mov
inc
stos
pop
mov
in
gs
popf
xchg
leave
mov
divb
nop
lret
or
sub
pushf
loop
push
jb
ljmp
fisubs
cmp
cmpsb
cmpsb
test
ja
fs
mov
mov
sub
fstpt
inc
xchg
dec
lods
loopne
push
jae
pop
adc
jl
sahf
pop
dec
lea
pop
cltd
jmp
jp
bound
fcomp
fildll
fs
mov
pop
push
push
mov
push
das
mov
push
gs
or
sbb
and
cmp
lock
cmp
in
mov
cld
jmp
lds
cmp
push
sbb
add
lock
and
pop
imul
repnz
mov
clc
jne
fs
fwait
or
test
inc
jnp
fwait
pop
xorl
push
xor
jmp
in
mov
push
dec
cli
mov
mov
push
pop
jle
jmp
add
imul
fnstenv
aas
adc
cwtl
sub
pop
push
mov
aad
sbb
inc
cmp
test
sbb
push
sub
enter
leave
push
sahf
out
lock
mov
inc
addr16
mov
push
xor
call
push
rcrb
xchg
shrb
fistps
shlb
mov
inc
mov
testl
pop
dec
jne
pop
and
das
xchg
insl
std
push
add
stc
test
sub
inc
cmp
movsl
icebp
out
call
cmp
imul
mov
mov
inc
adc
dec
xor
push
rcll
in
mov
push
imul
sub
and
lds
mov
cmc
dec
aad
push
push
xchg
mov
pop
jl
lcall
ja
lods
rorl
mov
cmp
fidivrs
xchg
cmc
out
daa
pushf
inc
and
leave
xchg
cltd
cmc
out
pop
fstps
and
pop
fs
xchg
pop
sbb
mov
xor
add
sbb
adc
loope
inc
adcb
ja
test
ret
testl
mov
cs
dec
dec
mov
out
xchg
push
shr
dec
mov
mov
jo
sub
inc
mov
mov
clc
ficoml
adc
lds
xor
cltd
lods
clc
cmp
xor
push
imul
call
into
dec
xchg
xchg
inc
out
push
loop
clc
mov
fildll
xchg
adcb
sti
shr
fisttps
scas
ficompl
sahf
adc
mov
mov
scas
dec
loop
xor
mov
xor
nop
mov
adc
rcrb
lret
aaa
sbb
in
fldcw
mov
in
rcrb
nop
pusha
pop
jmp
pop
or
cs
mov
push
adc
addr16
jo
xchg
out
cs
mov
es
mov
mov
pop
sbb
je
jnp
out
push
mov
test
into
inc
outsl
inc
shl
subb
add
outsl
push
fdivrs
in
or
xor
dec
cmp
andl
cmp
inc
insb
inc
push
adcb
sti
inc
outsb
test
mov
mov
nop
cmp
lahf
mov
mov
pusha
xlat
loop
cltd
push
mov
movsl
xchg
loopne
xchg
out
inc
xchg
mov
mov
sbb
dec
xchg
mov
lret
pop
in
inc
inc
aaa
jp
lods
or
addr16
hlt
popa
adc
or
cmpsb
jl
pop
mov
sub
cmp
test
nop
xor
adc
aas
jb,pt
or
xchg
mov
movsb
cmp
and
adc
aam
pop
cmp
mov
pusha
rorb
add
xor
xor
lds
xchg
mov
jmp
or
inc
test
and
mov
sbb
dec
out
mov
fmull
pusha
cmpsl
xor
andb
cld
mov
pop
sub
es
ljmp
jae
fwait
xchg
ret
fcompl
jl
ss
inc
mov
adcb
es
fdivl
inc
fisubrs
sti
add
mov
inc
mov
mov
testl
mov
inc
dec
daa
insb
mov
push
fcoms
das
jno
fmuls
test
pop
and
and
jno
ja
je
jecxz
ja
arpl
sbb
imul
std
add
outsb
mov
adc
mov
dec
repnz
and
add
arpl
mov
jp
dec
lds
inc
sahf
fs
push
sbb
jno
cmp
sub
clc
xor
mov
mov
cmpsb
sbb
call
mov
jns
ret
stos
andb
lcall
cmp
cld
test
sahf
and
jecxz,pn
jbe
sbb
sbb
nop
inc
lea
push
push
loopne
rol
and
fs
push
out
jnp
fdivr
outsl
jecxz
sub
cwtl
inc
lods
xlat
sbb
dec
inc
repz
dec
add
cmp
xor
stos
xchg
add
fmull
je
andl
fwait
cmpsb
and
sahf
sbb
loop
shll
pop
mov
mov
mov
iret
sahf
stos
lret
mov
or
mov
jb
testl
int3
data16
push
mov
inc
xor
cld
inc
aaa
sub
jno
divl
xchg
sub
in
xchg
dec
ljmp
jl
inc
cld
cmp
add
adc
mov
ljmp
int
sbb
push
jnp
and
cmpsb
jbe
push
push
xchg
lods
cmp
imul
in
pusha
jmp
icebp
repz
mov
jae
dec
cld
cmpsb
dec
sbb
hlt
jb
sbb
into
push
and
jno
jmp
and
sub
xor
fsts
dec
jp
dec
add
pop
jae
sub
pop
jmp
shlb
jno
int3
imul
out
insb
jae
iret
ljmp
fisttpl
jle
xor
insl
rcrb
mov
sbb
push
adc
lods
adc
fiadds
orl
push
insl
push
mov
push
sub
pop
repz
xor
inc
sahf
sub
int
jecxz
lret
cltd
mov
icebp
stc
loope
rorb
mov
loopne
push
imul
add
std
arpl
adc
xor
sti
push
sti
enter
sub
pop
add
lods
pusha
lret
jg
repz
adc
adc
add
mov
pop
loop
cli
aaa
inc
ja
rcr
imul
mov
data16
mov
jle
push
sub
jge
or
pop
pop
js
adc
jae
orl
mov
dec
or
pusha
mov
int
cmp
xor
sbbb
daa
mov
or
stos
sbb
ds
and
mov
shrl
push
pushf
mov
push
sub
pop
push
sbb
xorl
mov
inc
imul
int3
enter
stos
lret
push
xor
lret
pop
dec
sbb
insb
fwait
push
add
stc
popf
and
xchg
aad
lods
sub
push
cmp
mov
xor
mov
dec
fcoml
imul
push
dec
clc
pop
and
mov
add
daa
dec
inc
lods
jb
icebp
and
fsubrs
cmp
pop
pushf
mov
shl
xlat
jbe
bound
cmp
dec
inc
fcomps
in
jb
mov
jg
mov
mov
mov
mov
scas
xchg
bound
sbb
cs
in
xor
es
cmp
dec
mov
cmp
je
adc
mov
stos
cmpsb
pop
or
dec
cltd
add
std
adcl
sbb
and
aaa
mov
mov
pop
stos
cmpb
ret
jno
pop
inc
sub
jmp
inc
sbb
jno
pop
jmp
aad
adc
fdivl
clc
sbb
add
outsb
mov
pusha
and
adc
push
mov
dec
jae
cltd
lods
loope
xchg
hlt
sub
sbb
inc
mov
dec
pop
pop
mov
xor
cwtl
jnp
ret
into
pop
test
and
fiaddl
xchg
insl
inc
xchg
cmova
sbb
or
lcall
lds
lds
lods
insl
hlt
pop
fsubp
pop
lds
lret
push
outsl
jnp
sub
cmp
ja
ret
in
outsb
jl
aaa
imul
movsl
xchg
add
pop
and
aam
int3
gs
cmp
dec
cvtdq2ps
loop
inc
or
icebp
repz
adc
divl
pusha
sbb
fildll
and
pop
push
push
xchg
outsl
inc
int3
loopne
loopne
xchg
shlb
sti
pop
in
mov
pop
and
out
push
inc
andl
pop
push
jge
adc
sub
gs
addr16
sub
popa
shlb
je
xor
lret
jne
fcmovbe
push
stc
push
mov
pusha
testb
mov
subb
jbe
or
xor
sbb
lahf
pop
rcll
stos
sahf
in
fs
or
div
dec
out
lock
inc
jl
loope
cmp
mov
inc
lds
popa
add
int3
adc
push
cmp
pop
lea
mov
loop
sub
pop
sbb
in
dec
xchg
movsb
stc
daa
fadd
shl
adc
ret
ret
aad
cld
add
shrb
notl
and
and
adcb
cld
mov
or
cmp
clc
add
pushf
call
pop
add
dec
push
sbb
mov
adc
jl
out
push
int
add
pop
mov
insb
loop
cmp
jge
das
jne
or
cmpsb
aam
xor
out
sub
jae
neg
xor
sbb
inc
leave
jbe
push
jg
dec
sarb
sub
das
cmpsl
fildl
pop
dec
hlt
ja
mov
inc
push
jge
push
mov
daa
enter
xchg
mov
pop
sub
repnz
mov
loop
mov
lock
pop
in
cmp
pusha
js
into
icebp
lods
ret
js
xchg
adc
pop
mov
push
mov
out
mov
dec
int
test
dec
sub
xor
xchg
push
cmp
inc
cmpsl
movsl
sbb
loope
scas
cmc
mov
stc
imul
sub
sbb
pusha
shll
int3
adc
mov
xchg
lds
pop
mulb
and
adc
nop
sbb
cmpsb
mov
mov
leave
dec
popa
je
and
movsb
xchg
iret
inc
pop
addr16
inc
inc
mov
je
enter
jle
in
jmp
mov
and
ret
lret
sahf
mov
test
cli
rcrl
or
sbb
test
notb
out
sbb
addr16
stos
pop
adc
push
mov
seta
cltd
mov
pushf
hlt
out
adc
sbb
push
fisubs
js
sbb
and
les
and
and
xchg
or
test
xchg
sub
or
add
repnz
and
add
push
and
mov
ret
jne
sahf
adc
add
fldcw
int3
push
jbe,pn
cli
xchg
daa
in
mov
mov
ficomps
imul
mov
stos
mov
xlat
push
sti
mov
lahf
mov
inc
scas
popf
in
xor
jno
cmp
jp
cli
rcr
movsl
pop
outsb
scas
dec
mov
cli
popl
sub
jl
fsubrl
adc
dec
loope
mov
fisttpl
sbb
mov
mov
mov
repz
mov
sub
pop
xchg
jo
push
or
push
jge
mov
push
inc
push
jo
pop
rcll
xchg
and
sbb
in
lcall
lea
inc
push
mov
iret
loope
inc
cmp
xchg
sbb
lret
cwtl
test
pushf
sbb
pushf
jle
sbb
mov
sub
iret
gs
nop
repz
push
mov
test
mov
cli
ss
decl
mov
pop
fcoml
adc
arpl
dec
add
dec
arpl
mov
aad
outsl
dec
xlat
push
pop
hlt
cwtl
and
push
scas
sub
out
mov
lret
push
dec
pop
mov
jecxz
out
aad
xor
mov
mov
xchg
cmp
test
loop
pop
mov
test
push
xchg
sub
inc
pop
iret
push
push
insl
das
test
xchg
sahf
lret
fs
push
or
mov
jg
xchg
add
popl
sti
jae
adc
mov
mov
add
xor
xor
je
loopne
xor
sub
mulb
inc
inc
xchg
xchg
aas
lds
push
movsb
cld
push
and
sub
mov
sub
clc
repz
add
pop
lds
lahf
adc
daa
out
mov
incl
mov
ret
sub
xor
stos
and
out
shrl
or
or
jp
call
lgs
lret
xor
and
je
sub
and
and
mov
cmp
ret
mov
fs
test
aad
gs
push
lret
leave
or
adc
enter
mov
std
and
cs
push
mov
inc
pop
out
stos
js
in
add
jmp
sub
int
lods
loopne
sub
inc
sub
or
jns
sbb
scas
or
inc
idivl
add
imul
and
les
scas
xchg
mov
jmp
dec
adc
jae
or
loop
mov
pop
xor
or
sbb
jb
push
inc
loop
fsubrs
and
rsm
adc
or
lret
std
cmp
subb
jmp
in
pop
orl
andl
std
mov
test
inc
mov
sti
iret
fs
xchg
mov
push
inc
sahf
in
das
adc
jg
in
stos
sub
ljmp
xchg
cmpsb
shll
notl
in
loop
pop
cmp
das
mov
js
mov
sbb
mov
arpl
cmpsb
xlat
fdivr
sbb
fsubl
enter
movsl
jbe
movsb
scas
inc
sahf
bound
fdivrl
lret
adcl
popf
dec
mov
xchg
shl
xchg
mov
cmp
xchg
xor
fmulp
test
out
fwait
sbb
shll
mov
pop
lret
insl
int3
test
xor
and
sar
xchg
rolb
repnz
pop
scas
mov
pop
mov
popf
ds
or
in
ret
cmp
test
jg
incb
aas
sbb
and
or
popf
pushf
addr16
jmp
push
test
pop
int
xor
movsb
cltd
push
or
xchg
test
jle
cs
mov
push
adc
insl
cmp
mov
js
imul
imul
push
test
xchg
push
call
fdivrl
inc
negb
jecxz
or
loopne
push
push
or
enter
inc
sbb
lods
jne
sbb
inc
dec
jb
pop
jbe
mov
add
xor
sub
jle
sbb
daa
mov
sbb
rolb
icebp
inc
jae
sub
out
fs
add
mov
pop
test
cs
sbb
filds
fsubl
ds
push
stos
cmp
popa
adc
inc
ljmp
mov
xchg
jbe
sub
rorb
sti
loop
sub
fs
mov
icebp
rorl
mov
enter
in
loope
cmc
scas
stos
xchg
xor
mov
jo
enter
mov
pop
div
inc
fsts
cmp
jmp
cli
aaa
cltd
pop
rclb
outsb
shrl
jmp
push
pop
xor
mov
imul
cmp
stos
adc
scas
xchg
les
push
push
dec
pushf
gs
cli
mov
cmp
das
sbbb
xor
adc
cmp
aaa
and
xor
cmp
xchg
mov
roll
dec
js
or
jge
xchg
push
or
stos
cmovns
jns
push
sbb
icebp
mov
ss
insb
out
test
fadd
pop
jmp
hlt
sub
cmp
mov
lock
cltd
sbb
xor
subl
mov
mull
xor
sub
cmp
xor
sbb
jp
pop
cmp
and
loope
aad
push
mov
push
sbb
mov
xor
stc
add
and
inc
btr
push
loopne
pop
std
je
push
lret
test
xor
push
out
fstpt
mov
ds
jge
clc
ds
cmp
loope
repnz
arpl
in
leave
ja
mull
fwait
xchg
cmp
mov
jnp
sbb
sub
push
jp
movsb
xor
dec
cmpsl
add
and
or
scas
add
or
test
pop
stc
or
add
icebp
mov
xrstors
js
iret
pop
sbb
mov
xlat
gs
adc
lcall
xchg
dec
push
sub
mov
mov
ljmp
int3
pop
data16
repnz
pusha
mov
pop
xor
adc
sbb
imulb
dec
loopne
inc
mov
mov
in
jno
bound
push
out
sahf
push
mov
push
and
inc
inc
fstl
adc
hlt
push
pop
mov
sub
xor
mov
cmp
adc
cld
in
fidivrs
cmpb
mov
xor
data16
mov
xchg
push
mulb
cli
stos
sub
jb
mov
mov
dec
mov
lret
iret
cmp
ret
inc
and
or
dec
jns
jge
ret
xchg
adc
jbe
dec
xchg
push
aaa
xchg
leave
adcb
sub
mov
jae
add
adc
jns
xchg
push
xlat
dec
cmp
and
iret
out
data16
pop
shr
or
ficomps
mov
loope
pop
mov
jecxz
cmp
cltd
mov
fisttpll
sub
aam
lock
pusha
imul
lds
sub
and
sti
mov
sub
out
xor
sbb
sbb
push
add
mov
hlt
scas
imul
xchg
sub
add
xchg
and
pop
push
int3
push
pushf
pop
or
insl
mov
push
mov
mov
dec
and
lock
test
push
adc
pop
mov
in
jg
test
jb
repz
shrl
cmp
sub
jle
jns
pop
idivl
les
mov
xor
sbb
sbb
test
fdivl
push
std
ret
jg
clc
jns
clc
inc
and
imul
addr16
push
movsb
jge
mov
jecxz
jno
jl
adc
push
push
bound
aam
or
aad
xchg
xchg
shl
dec
fmull
das
and
jno
jno
andl
adc
push
add
cmp
xchg
dec
sbb
stos
vprotb
xor
xor
pop
add
push
insl
and
add
shlb
xchg
mov
pop
lret
xor
in
mov
in
dec
sahf
push
aam
mov
ljmp
fbstp
fisubl
and
in
sbb
pop
mov
insl
cld
adc
and
ds
jbe
dec
cmp
jmp
shlb
scas
xchg
aaa
and
mov
iret
popf
jne
sub
jge
clc
test
movsl
stc
insl
ja
sti
sahf
dec
ret
xchg
jl
pop
insl
push
ljmp
cmp
icebp
xchg
push
inc
lea
mov
or
stos
xchg
mov
mov
je
xchg
ss
inc
jno
xchg
sbb
jmp
jbe
outsb
dec
fdivrl
jo
aad
add
nop
in
mov
mov
icebp
jg
in
mov
in
ficomps
sbb
xor
out
mov
pop
jmp
push
cmpsl
movl
sbb
shlb
pop
sub
fcmove
mov
push
into
sbbb
mov
lcall
fistpl
xchg
je
xorl
mov
inc
out
sub
xchg
sbb
fstps
lret
loope
stc
jae
ljmp
mov
ret
loopne
stos
xor
xor
nop
jge
movsb
ss
neg
loope
push
lods
fs
sub
inc
xchg
sbbl
ret
sbb
mov
jnp
lds
adc
in
fwait
out
jle
clc
leave
adc
out
es
xor
stc
fists
and
fldcw
mov
xlat
outsl
push
add
mov
add
sbb
push
insb
adcb
lea
sar
xor
cmp
stc
movb
or
insl
jns
xchg
aam
ja
sub
call
xchg
lret
aaa
out
cmc
xor
cs
mov
out
aaa
adc
sti
movsb
cltd
mov
mov
cmp
lds
clc
cld
je
push
popa
arpl
das
icebp
xor
jns
or
mov
in
lahf
ss
out
cmp
repz
test
sarb
lahf
into
xchg
dec
mov
movsb
jl
lret
aas
enter
orb
mov
movsl
in
xchg
mov
cmp
xor
xchg
sub
add
push
loopne
push
mov
cmpsb
push
lds
repz
and
das
fbld
cmc
or
fildll
mov
xor
inc
adc
ja
or
ja
adc
out
out
fldlg2
push
imul
pusha
dec
adc
std
rol
mov
test
mov
jp
push
clc
jbe
cmp
into
cld
repnz
mov
mov
aaa
aas
cs
int
and
mov
xor
lcall
xor
cltd
adc
push
inc
sbb
pop
add
jo
mov
test
imulb
stos
out
in
or
data16
jmp
shll
push
mov
inc
fimull
adc
shl
imul
xlat
dec
rcr
push
ljmp
xchg
movsb
fstps
sub
jnp
lret
cwtl
inc
lret
jnp
lcall
cmc
fwait
pop
adc
pop
sub
outsl
sub
cltd
decl
fwait
mov
cltd
pop
xchg
xchg
dec
shll
xchg
mov
cmp
sub
sbb
xor
lahf
jecxz
mov
jb
lock
xor
push
dec
cs
fwait
shrb
enter
adc
xchg
sbb
cmp
mov
ds
pop
dec
adc
leave
outsl
outsl
gs
mov
lods
push
mov
adc
pop
xor
mov
popf
je
int
mov
addr16
pop
clc
adc
dec
push
popf
mov
adc
push
and
jb
in
jnp
out
add
and
pop
mov
repz
je
pop
shlb
scas
push
jbe
in
xor
jne
scas
inc
mov
mov
jae
push
push
cmpsl
call
je
mov
dec
push
xchg
daa
nop
lods
lahf
outsl
icebp
xor
pushf
xor
iret
adc
cwtl
adc
jecxz
push
dec
xlat
mov
stc
imul
sub
sbb
sti
jp
push
int
mov
dec
into
paddusb
out
or
incb
mov
adc
push
pusha
movsb
std
icebp
sub
push
data16
pop
and
add
shlb
cwtl
fstpt
enter
xorb
jl
addl
ret
subb
stos
outsl
repz
ret
push
xchg
shl
push
push
push
cmp
and
jmp
aaa
fcompl
mov
and
pop
mov
movl
clc
jp
mov
or
jno
pop
and
xor
jmp
pop
scas
jle
scas
adc
outsb
out
imul
fldcw
clc
mov
cmp
imulb
or
push
xor
add
ret
jg
cli
popa
and
push
pop
mov
movsb
js
mov
add
fstpt
jp
popa
mov
mov
iret
lret
out
shl
and
adc
mov
or
cmpsb
mov
push
push
xchg
lret
and
outsb
and
mov
loop
sbb
sbb
adc
pop
daa
mov
or
pop
sbb
sbb
push
int3
lods
loop
shlb
pop
incl
jl
cwtl
je
push
outsl
jno
mov
shlb
divb
sbbb
fdivs
out
xchg
orl
jo
insl
stos
inc
loop
push
mov
push
mov
or
lock
cmp
sub
inc
int3
xchg
outsl
mov
mov
or
movsl
sbb
cmpsb
push
dec
lock
divl
cmpsl
and
fdivr
mov
enter
sbb
mov
or
pop
andl
mov
mov
sub
rorl
fwait
inc
sub
xor
sbb
pushf
test
mov
jl
mov
enter
sub
std
aas
sahf
std
jae
inc
call
stos
push
out
movsb
adc
adc
test
xchg
jp
aam
jb
pop
mov
inc
xchg
cmpsb
mov
adc
gs
int3
inc
xchg
ret
adc
das
xchg
push
mov
jmp
test
lods
std
and
enter
mov
push
inc
mov
lahf
xor
mov
sub
popf
pop
test
lds
xor
orl
cmc
fsubs
xor
mov
ret
and
out
xchg
in
cmpsb
or
test
and
sbb
in
pop
cmp
shll
xor
jmp
enter
fnstsw
xchg
ss
lahf
scas
jbe
leave
out
push
fdivr
and
adc
cmc
mov
movsl
cli
cmc
or
mov
dec
scas
and
repnz
in
cs
sub
inc
push
xor
in
or
inc
test
mov
ret
add
out
testb
and
adc
cmp
in
mov
mov
mov
adc
mov
mov
imul
fisttps
rorb
scas
xor
xchg
test
bnd
xor
xor
cmpsb
mov
mov
enter
push
mov
fimuls
addr16
clc
sbb
sbb
and
sti
push
loop
inc
bound
xchg
mov
jg
push
adc
std
stos
pop
clc
jns
mov
rolb
xchg
addb
arpl
or
fs
jnp
inc
dec
xor
shll
sbb
frstor
jnp
ja
inc
or
xlat
push
das
mov
rclb
or
js
out
orb
xchg
scas
or
mov
mov
fistpl
std
leave
aas
sbb
and
pushf
lock
sub
pusha
add
inc
sahf
pushf
pop
push
out
fucomi
shufps
popa
or
adc
push
mov
xchg
cmpsb
fistps
iret
mov
adc
push
mov
data16
fadds
je
mov
arpl
ret
add
pop
jg
ficoms
sbb
subb
cmpsb
aaa
dec
lahf
inc
imul
das
dec
imul
mov
pop
or
mov
add
rclb
xlat
enterw
imul
dec
andb
loope
faddl
loop
int
xchg
add
test
test
popf
sbb
push
xor
mov
mov
and
sti
sub
std
sbbl
dec
lea
and
pop
loope
sub
fstl
fldl
dec
nop
push
fildll
push
jb
push
mov
repz
push
jns
push
lahf
stos
scas
outsl
and
inc
or
cmp
outsl
out
in
jp
dec
add
lahf
les
or
xor
stos
movsb
push
repz
jl
mov
repnz
xchg
inc
popa
cmp
movsl
pop
mov
outsb
inc
loopne
mov
cli
mov
xchg
sbbl
mov
mov
loope
inc
dec
xor
call
xchg
jmp
test
push
or
mov
cli
ja
push
push
imul
int
in
mov
mov
mov
lods
jle
mov
fdivs
aaa
orb
jbe
arpl
out
psrlw
dec
insb
add
or
mov
pusha
push
push
add
pop
or
jge
sbb
dec
lret
cmp
xchg
add
addr16
test
les
andl
mov
adc
es
xchg
ret
sub
ja
and
repz
lcall
pushf
xor
xchg
mov
pop
lcall
outsb
outsw
xchg
aaa
dec
mov
out
xchg
sarl
sbb
and
xchg
lret
pop
push
xchg
cmp
xchg
pavgw
lods
ljmp
imul
je
and
arpl
mov
testl
inc
dec
xor
cs
pop
cwtl
lods
notl
fs
xor
sub
ja
loope
dec
cmp
sbb
mov
add
sub
ret
inc
mov
xchg
cld
mov
popa
pop
ret
jnp
cli
push
icebp
in
dec
pop
lds
call
pushf
xor
xchg
push
xchg
mov
movsl
push
jnp
fldl
mov
mov
nop
outsb
adc
pop
fwait
outsl
sarb
xor
add
cmp
sti
add
pop
dec
gs
mov
in
xor
ja
or
inc
mov
dec
cld
lods
cli
pop
in
test
dec
divl
call
aaa
stc
jl
xor
popa
daa
das
jnp
inc
cmpsl
lahf
xor
pop
adc
fadd
popa
lahf
mov
mov
cmc
xor
xchg
lahf
fldcw
xor
fs
sbb
xchg
mov
insl
and
pusha
ss
mov
xchg
std
or
icebp
dec
cmp
push
test
test
and
jns
and
push
xchg
lahf
mov
add
lea
and
xor
sbb
jl
out
rcrb
and
jns
jb
xchg
repnz
dec
adc
movsl
fiaddl
clc
mov
lock
mov
mov
lock
mov
hlt
rcr
mov
add
sub
shll
scas
dec
adc
mov
stc
jns
pop
aaa
cltd
push
rorl
push
push
xor
adc
lock
inc
out
cltd
pop
out
jp
out
inc
jae
cld
xchg
or
ret
sub
aad
pop
lahf
test
add
mov
mov
sbb
out
adc
pop
push
gs
jmp
jne
push
mov
mov
xchg
pusha
inc
adc
outsl
call
in
add
jmp
dec
aas
ret
es
test
cwtl
lahf
xor
sbb
sub
pop
or
subps
outsb
pop
sub
jge
mov
aas
dec
jno
insl
call
and
fstl
mov
pop
pusha
ret
lds
imul
cwtl
aas
iret
push
cmpb
mov
mov
nop
lds
out
xchg
inc
imul
or
sub
popf
cmp
mov
lods
jno
mov
fsubrs
cmp
enter
test
inc
pop
nopl
inc
icebp
in
or
imul
ss
or
mov
dec
inc
inc
mov
inc
inc
enter
mov
jecxz
and
sbb
and
es
orb
inc
sete
lea
mov
adc
fdivs
call
lcall
shr
push
mov
hlt
test
lods
cmpsl
icebp
jbe
jno
imul
xchg
pushf
cmp
add
in
xchg
mov
mov
sub
mov
rcll
popa
push
or
aam
xchg
dec
sbb
aad
and
cmpsb
cmp
or
je
and
or
sub
insl
mov
pop
mov
fwait
jae
or
cwtl
sbb
push
mov
loope
push
cmpsb
lods
mov
data16
dec
jge
out
xlat
push
sub
fisubs
imul
cmp
sahf
and
inc
rclb
mov
rcr
push
pop
dec
fwait
or
xor
pop
dec
int
les
push
push
jb
or
and
pop
rorl
sub
push
xor
stos
mov
jo
ficompl
add
es
push
insb
sbb
iret
jb
jmp
mov
dec
testb
loopne
mov
ror
aad
inc
inc
push
leave
scas
and
pop
sahf
popa
rorb
xchg
fcoms
ficompl
xchg
ficompl
mov
jl
mov
push
fwait
push
in
dec
cmc
and
adc
jp
lods
outsb
and
outsb
dec
into
imul
sahf
sahf
loope
push
add
push
jb
push
shlb
push
rorb
push
ret
loopne
call
clc
in
lret
scas
jle
pop
and
jb
inc
fldt
inc
rcll
rolb
or
xchg
mov
test
outsl
dec
inc
push
mov
or
int3
popa
mov
gs
cmp
mov
fadd
sub
mov
or
jnp,pn
mov
adc
dec
mov
jns
xor
aam
push
ja
adc
add
dec
jbe
nop
lahf
lds
pop
sbb
inc
scas
out
shlb
shrb
cmp
addb
shl
shrl
nop
push
lea
mov
loop
add
int3
fstps
mov
cmpsl
cmp
and
pop
bnd
ficompl
mov
xor
push
jb
insl
call
push
push
fcompl
aas
push
dec
fidivs
jp
mov
pop
sahf
xchg
test
jbe
push
sahf
xchg
mov
test
out
or
in
add
cmpsb
and
lock
jnp
cmp
fcomps
cmp
inc
pushf
sarb
pop
in
jl
xchg
repnz
std
push
and
adc
mov
sub
ret
fcomi
adc
mov
in
or
mov
out
jae
dec
les
nop
in
popa
popl
cmp
fwait
mov
fisttpl
mov
fcoml
aas
sbb
ret
sbb
scas
mov
xchg
div
fstpl
adc
loop
stc
and
loopne
jae
aad
daa
mov
sbb
pusha
sub
cld
lock
pushf
popa
fldl
fnsave
mov
mov
ja
push
sub
and
inc
sti
arpl
pop
and
jne
jl
and
inc
xor
inc
adc
and
movsb
stos
push
aad
rcr
mov
xchg
pop
pop
inc
outsl
stos
inc
mov
pop
mov
sbb
pop
lods
les
movsl
push
pop
mov
mov
dec
mov
cmp
sub
addl
mov
push
push
aas
and
cld
sbb
stos
sub
or
sahf
stc
xchg
jns
pop
jbe
in
xchg
mov
fmull
nop
std
cmpb
popa
mov
ret
insb
outsb
sbb
jmp
sbb
mov
mov
lods
fucomip
mov
jp
jo
fs
scas
xchg
pop
mov
mov
pop
cmpsl
dec
ljmp
mov
add
ret
pop
stos
out
cld
insl
sub
push
push
jb
adc
dec
jmp
fisttpl
jge
dec
pop
dec
or
mov
aaa
or
roll
outsl
std
xchg
push
mov
addb
insl
sub
iret
add
and
fwait
testb
mov
xchg
fcomps
arpl
ja
xor
in
jecxz
sar
xchg
cmp
gs
imul
cmpsl
jecxz
fldcw
stos
in
mov
push
mov
gs
insb
xor
push
cli
in
jg
and
xchg
cs
inc
popa
jle
fsubr
mov
repnz
imulb
jne
mov
pop
cli
lret
std
loopne
add
lahf
insl
mov
adc
repnz
mov
lods
add
rcrb
or
pop
js
out
cs
pushf
add
gs
or
mulb
xor
mov
insl
adc
pop
pop
mov
loop
pop
shrb
xlat
mov
push
lret
dec
and
pusha
mov
cmp
mov
lcall
add
pushf
xchg
push
adc
in
in
xlat
pusha
pop
jmp
iret
pop
mov
xchg
mov
out
call
cmpsb
rolb
xchg
std
imull
ljmp
scas
dec
mov
test
pop
fwait
bound
lahf
movsb
jnp
xchg
push
lret
mov
sub
jg
imul
es
imul
stos
ds
std
or
xchg
out
lods
out
imul
and
dec
jbe
mov
sbb
push
jg
fstps
push
xchg
shrb
icebp
cld
jle
jbe
push
int
xchg
adc
cwtl
cmp
rorb
sbb
jns
insb
ret
fadd
and
daa
xor
add
stos
movsb
pop
xchg
loopne
out
inc
jb
xor
sub
mov
mov
push
jno
in
movsl
jne,pn
push
pop
jp
call
dec
clc
sbb
test
jle
inc
scas
mov
hlt
xchg
shll
jge
imul
insl
sub
xorb
rorb
jae
xlat
ja
push
stos
xchg
pop
add
lea
cld
insl
xor
addr16
test
stos
pop
inc
push
jmp
mov
pop
loop
lods
stos
stos
pop
dec
rcr
dec
daa
scas
cmp
out
cmpl
lret
shrl
push
mov
or
inc
pop
mov
call
mov
rcl
xchg
lret
movsb
jns
push
or
divl
fs
mov
mov
mov
push
cld
or
lea
sbb
inc
fisubs
and
mov
pusha
sbb
xchg
movsb
sub
insl
xchg
push
sub
shr
hlt
add
das
insl
dec
cmp
cmp
adc
sahf
fadd
cli
rclb
inc
mov
mov
lcall
mov
aad
adc
dec
fcomps
xchg
cmp
inc
enter
pop
in
pop
pop
xlat
nop
lea
push
sbb
or
gs
adc
mov
lahf
sbb
cmpsl
pop
cwtl
scas
rorb
mov
adc
imul
pop
mov
dec
push
mov
nop
mov
push
bound
std
loope
fmul
mov
ljmp
jmp
loopne
jg
js
out
and
daa
out
shrl
push
movsb
xchg
mov
sti
mulb
testl
fiaddl
out
test
stos
or
sbb
pop
stos
sub
xor
mov
or
test
scas
stc
repnz
jmp
or
in
push
xor
xor
in
in
cld
out
cmpsl
push
iret
repnz
mov
push
fbstp
cwtl
fs
add
insl
push
mov
stos
add
enter
jge
and
gs
cli
pop
inc
sbb
pusha
call
js
sub
insb
sbb
adc
jge
xchg
xchg
sarl
xor
js
fildl
push
push
mov
test
or
cmp
push
loop
push
inc
stos
pop
jne
lds
dec
nop
orl
jle
adc
leave
mov
sub
xchg
push
sub
adc
lds
sbb
dec
jnp
movsb
test
fnstsw
jp
pusha
test
into
fadd
mov
stos
movsl
inc
xchg
mov
outsb
add
adc
ja
add
jbe
xor
jp
mov
mov
pop
dec
mov
pop
femms
sub
movsl
aad
mov
fidivrs
add
inc
pop
iret
jo
dec
fisubl
notb
jo
out
mov
xchg
pushf
dec
dec
mov
jl
repz
mov
divb
mov
sub
popa
subb
xchg
imul
jle
lea
test
cmp
mov
insl
scas
fiaddl
stos
cmp
mov
cmp
leave
sbb
lods
xchg
jae
ret
xlat
jno
add
test
fiadds
sub
add
and
enter
rcrb
dec
lds
jns
pop
mov
test
leave
push
je
cmp
cmp
enter
cmpb
pushf
pop
pusha
addl
fwait
mov
sbb
es
push
mov
mov
mov
repz
xchg
notl
fcmovb
or
fstpl
pop
rcr
clc
movsl
test
inc
movsb
cmpsb
mov
repnz
mov
cmpsl
into
mov
fldcw
ljmp
and
negl
dec
in
xchg
add
leave
or
cmp
leave
push
mov
loop
and
mov
insl
sarb
pop
cltd
scas
xchg
pusha
xor
cmpsl
std
mov
cmp
xchg
in
rcrb
mov
negb
mov
gs
push
jmp
das
dec
pop
inc
lcall
adc
sub
push
mov
fcmovnb
mov
xor
mov
inc
mov
sbb
xor
daa
pop
stc
outsl
ljmp
fdivr
mov
ss
inc
jnp
mov
sbbl
scas
push
mov
mov
inc
fcoml
cmc
cld
fisttps
adcl
mov
ds
loope
lods
negb
ljmp
icebp
test
insl
addr16
lods
mov
out
dec
and
inc
ret
jg
ljmp
adc
cmp
and
jg
or
xchg
add
or
push
shrl
mov
cmp
push
cld
dec
sti
bound
xorb
iret
xor
jle
or
add
xchg
cld
jno
or
in
push
daa
inc
dec
test
sarl
push
data16
imul
mov
push
xchg
in
bound
or
pop
xlat
cld
dec
push
dec
or
sti
jno
mov
add
test
pop
ljmp
divb
push
daa
in
mov
pop
xor
rcll
mov
or
fcompl
addr16
ret
popw
mov
mov
add
lock
or
in
in
aaa
jge
lcall
addr16
xchg
fs
fwait
sbb
pop
jp
or
movsb
push
loope
fcompl
orl
cwtl
push
mov
dec
sub
movsl
lret
das
aad
inc
mov
lahf
cmpsb
outsl
mov
xor
lods
xchg
inc
or
jo
jae
pop
pop
lcall
lcall
pop
jnp
xor
adc
push
jbe
mov
movsl
daa
jb
xor
jl
mov
sbb
aaa
mov
pop
push
mov
testb
pop
or
int3
enter
pop
jmp
mov
sbb
std
imul
fmull
xchg
or
ds
js
add
orb
aaa
leave
push
je
and
push
fsub
inc
push
or
mov
ret
xor
cld
mov
xchg
jbe
mov
cmpsl
clc
subl
jns
sbb
sbb
cmp
scas
adc
ss
pop
and
jae
orl
mov
stos
in
jne
or
cltd
ss
mov
not
inc
ret
jns
les
out
and
pop
inc
push
push
cmp
xchg
xor
or
sarl
pop
test
in
mov
mov
popf
loope
adc
fisubrl
test
adc
add
xchg
mov
addr16
lds
jbe
scas
lret
inc
ss
loope
sub
insl
test
frstor
pop
aad
jmp
add
jl
pop
mov
fdivl
clc
mov
fwait
test
lret
daa
cld
pop
xor
sbb
aam
push
das
pop
out
call
xor
dec
fucomip
push
xchg
enter
ds
lea
out
outsl
sub
mov
bound
outsb
lcall
sbb
repnz
cld
add
subb
sub
push
jne
adc
pop
lods
int3
lea
xchg
cmc
leave
xchg
fistl
daa
add
mov
in
mov
xchg
push
into
xchg
mov
mull
ljmp
scas
insl
mov
daa
imul
repz
vpunpcklqdq
push
scas
fdivs
sbbl
fisttps
dec
rep
jge
loop
jnp
aam
jo,pn
sbb
scas
or
test
fdivrl
push
dec
sti
fiaddl
nop
addr16
aas
daa
xchg
jb
rcrl
xor
pop
outsl
out
fisttpl
je
call
or
pop
iret
es
insl
inc
or
inc
popa
push
std
and
mov
nop
out
mov
inc
push
fldenv
arpl
fwait
stc
add
mov
lret
mov
popa
inc
je
ds
aam
inc
xor
push
lahf
push
rcrl
int3
fdivrl
aam
imulb
jns
inc
pusha
mov
stos
ss
bound
imul
mov
dec
mov
scas
and
mov
mov
push
mov
and
mov
push
fiaddl
fnstcw
inc
mov
lea
gs
cmc
pop
mov
push
pop
push
cwtl
mov
add
inc
xchg
in
fcmovbe
div
adc
iret
sub
fsin
lds
xor
faddl
inc
out
repnz
lcall
aaa
jg
lds
or
loope
jp
or
jge
fnstcw
inc
xchg
push
mov
lret
cs
fcom
repnz
inc
mov
filds
xor
test
inc
out
stos
jnp
pop
mov
mov
dec
xor
inc
inc
out
leave
push
loopne
or
xchg
ds
mov
mov
pop
add
sbb
xchg
addl
loope
sub
sub
adc
xlat
cli
xchg
jg
imul
mov
push
xchg
in
push
sahf
clc
push
sbbb
imul
call
push
ss
jg
lahf
mov
test
xchg
pop
cmpl
shrl
xchg
scas
outsb
ret
inc
xchg
jo
pop
cmp
jbe
dec
mov
cmp
xchg
or
pop
and
ffree
xchg
rep
mov
enter
add
cmp
sub
jnp
xor
jnp
fcoms
or
sub
sti
pop
or
mov
jl
add
jbe
xchg
mov
jmp
aam
ret
cwtl
lret
xchg
push
add
push
xchg
popf
add
das
dec
cmp
pop
stos
lods
stos
push
shrl
push
fdivl
and
mov
jb
jmp
leave
sbb
add
ret
mov
jecxz
dec
inc
fdivrs
jmp
daa
cmpsl
sti
lock
mov
xchg
and
jns
pop
mov
pop
mov
aad
xor
js
fs
sarl
out
cmpsl
jg
pop
bound
pop
bnd
sub
mov
fildl
cmp
aam
mov
and
inc
mov
test
lret
jno
adc
adc
sbb
pop
mov
scas
jp
out
std
adc
xor
out
lock
int3
xchg
shlb
adc
mov
hlt
add
and
gs
mov
push
mov
mov
scas
jbe
add
jmp
stos
sarl
sub
daa
hlt
jle
cli
jge
ret
ret
add
lahf
cmp
mov
imulb
mov
mov
mov
lock
std
jb
pop
jno
xchg
pop
and
mov
or
pop
ljmp
stos
mov
sub
sbb
repnz
int
adc
movsl
subb
leave
pusha
lret
xor
inc
xchg
lock
add
andl
dec
jmp
outsl
jb
xchg
lret
inc
and
addr16
xchg
cmp
fnstcw
xlat
test
push
pop
cmp
jo
cmpsl
jnp
dec
push
mov
int3
ja
cld
imul
stos
icebp
jnp
mov
inc
sub
xchg
add
sub
sbb
pushl
test
push
mov
rcl
mov
or
nop
sub
inc
sub
mov
pop
adcb
push
sbb
push
xchg
scas
or
in
pop
mov
push
pop
scas
pop
out
ret
sarb
push
pop
and
dec
jno
mov
fidivrs
iret
lock
psadbw
subb
lahf
inc
icebp
rorb
fistpll
xor
jns
lret
pop
pusha
mov
jmp
insb
test
and
mov
sbb
into
imul
and
clc
arpl
cmp
jae
add
dec
and
cmc
popf
cmp
aaa
mulb
ret
rorb
mov
bound
aaa
or
cmpsb
adc
cld
loop
lods
mov
stos
cltd
popa
gs
inc
push
popa
jl
fs
outsl
or
ljmp
lock
sub
adcl
outsb
fistps
jg
mov
mov
mov
iret
lcall
pop
fst
int
rcll
xlat
fucomi
fadd
push
cmpsl
cmp
mov
idivb
addr16
xor
adc
inc
lock
shl
repnz
inc
lret
sahf
adc
mov
sbb
fs
sub
imul
add
ret
pop
pop
out
shlb
xchg
cld
jnp
popa
cli
adc
mov
leave
cmpsb
les
int3
jno
iret
clc
test
push
mov
inc
pop
jmp
addr16
xor
mov
sbb
adc
popf
add
insb
mov
pop
adc
in
les
int
stc
lock
push
inc
jl
inc
daa
pusha
pop
add
push
jo
out
ret
aaa
fcmovnbe
cmp
ljmp
stos
or
lods
scas
add
push
jge
or
xchg
lcall
dec
dec
or
dec
scas
or
push
xchg
and
shrb
adc
ss
cmp
mov
or
ror
cmc
add
inc
sarb
mov
adc
dec
aam
mov
cmp
add
adc
test
xor
adc
das
mov
insl
outsb
lcall
movsl
dec
int
mov
and
jne
cmp
ret
xor
fstps
out
rclb
jne
mov
fcmovbe
movl
pop
addb
mov
pop
jbe
or
repz
lahf
loop
mov
fisubs
pop
cltd
mov
xor
lahf
cmp
arpl
mov
mov
or
in
dec
pop
sbb
dec
movsb
negl
and
inc
mov
sub
pop
pop
cmp
or
and
lcall
sub
mov
test
ret
push
mov
adc
or
test
in
icebp
in
imul
sbb
mov
jl
insb
sub
dec
jno
aam
dec
out
movsl
jbe
jnp
fwait
test
addr16
lds
sahf
or
xchg
adc
stos
lcall
lcall
dec
imul
sbb
and
add
repz
xchg
mov
jnp
mov
rorl
movsb
and
adc
lahf
push
insb
xchg
jg
std
notl
sarl
mov
into
pop
lods
sti
or
orb
lahf
scas
pop
mov
pop
ret
adc
push
and
add
inc
xchg
imul
data16
outsl
cmp
xor
mov
std
icebp
jge
jmp
push
cmp
jno
dec
cwtl
insl
pop
mov
pop
sti
pop
out
jmp
push
push
xchg
inc
mov
push
cs
shlb
jno
je
jecxz
xchg
push
push
cmp
push
cmp
pushl
lds
sbb
lret
imul
push
fsubl
je
insb
les
mov
shll
mov
popa
xchg
nop
inc
cli
cmp
xor
out
sub
cmc
cltd
imul
xor
jnp
sbb
dec
fcompl
mov
and
inc
outsl
xchg
push
xchg
jmp
fsubrs
outsl
out
fisubs
sbb
js
mov
xchg
mov
sbb
es
or
pop
or
test
sub
repnz
clc
cmc
lds
filds
inc
std
mov
or
cmp
adc
ss
ret
test
sub
data16
push
inc
test
inc
inc
push
movl
fisubs
cltd
mov
sahf
lds
mov
pop
sbb
mov
cmpl
pop
inc
mov
decl
clc
nop
push
cmp
addb
into
xchg
lcall
add
lods
stc
push
in
inc
sbb
xchg
xchg
sub
fisubrs
xchg
clc
frstor
add
test
or
inc
es
test
cltd
jnp
cmp
xlat
ret
scas
add
add
or
cmp
pop
cmp
fcos
fisttpl
cmp
or
sub
mov
paddw
add
mov
sub
cmpsl
push
push
test
stc
fsubl
scas
pop
stos
mov
mov
mov
xchg
int3
addb
ss
stos
shll
xorl
pop
in
pop
jo
adc
mov
sub
popf
dec
dec
fidivrs
or
xor
mov
mov
pop
fdiv
out
sub
fstpt
push
test
inc
ret
push
ds
cs
xor
fadd
jae
negb
cmc
rcr
aad
les
leave
inc
cmp
jle
sub
cmpsb
pop
dec
out
clc
cmp
xor
mov
mov
jne
push
sahf
ss
sub
cwtl
pop
xchg
pop
adc
inc
fists
aad
mov
lods
arpl
push
dec
arpl
dec
dec
jle
mov
jno
jnp
pop
fimuls
mov
push
pop
dec
inc
clc
push
fs
xchg
cmc
jecxz
or
pop
fisttpl
out
int3
fistpll
aad
in
jnp
mov
andb
mov
incb
mov
scas
fucomp
lret
push
push
add
sbb
fsubrs
push
add
mov
fstpt
mov
pop
div
lods
adcl
dec
std
sarb
push
test
push
scas
sub
pop
in
movsl
or
inc
addb
data16
and
outsl
cs
nop
mov
rcr
sub
mov
xchg
fsubrs
mov
adc
sub
dec
and
movsl
iret
fcompl
les
mov
cmp
xchg
lahf
jns
pop
mov
test
jp
pop
add
jb
rclb
xor
dec
call
adc
leave
pop
scas
xacquire
ret
inc
shr
pop
ret
mov
and
and
in
jmp
push
dec
and
sbb
arpl
xchg
cmpsb
call
scas
mov
xchg
mov
imul
mov
call
dec
mov
sti
std
dec
mov
int3
mov
insb
add
and
and
jnp
mov
bound
mov
pop
pop
jbe
inc
adc
xor
xor
mov
call
or
aam
push
jecxz
das
popa
jns
das
xchg
lret
cltd
or
scas
add
das
mov
inc
cld
jl
les
repnz
jp
outsb
sub
movsl
jmp
pop
jge
jne
iret
test
sub
mov
dec
pop
cli
aad
pop
sbb
pop
mov
jns
jmp
mull
xor
cmp
add
sub
loop,pt
mov
pop
add
push
mov
or
lahf
inc
cs
add
push
and
xor
or
hlt
mov
xor
dec
idivb
jne
imul
dec
mov
adc
mov
sti
shr
sub
inc
and
jb
jmp
mov
ljmp
aaa
push
adc
fisubrs
sti
sub
int3
dec
addr16
inc
jb
pop
leave
leave
mov
mov
ds
es
loopne
nop
sbb
jge
stos
insb
lods
mov
adc
fs
cli
inc
push
test
fwait
cwtl
lods
dec
shrb
sti
push
das
lret
in
push
mov
mov
js
mov
lahf
sub
mov
mov
rcrb
cmpsb
push
mov
out
inc
xchg
int3
pop
movsl
dec
xchg
ret
je
add
rorl
ud2
popf
gs
int3
and
iret
sahf
jg
or
scas
iret
sub
jno
ds
sbb
adc
xchg
mov
mov
clc
jp
push
stc
jb
cmp
pop
and
enter
mov
fucomi
xor
ljmp
nop
xor
lock
ret
adc
inc
mov
cmp
idivb
rorl
mov
minps
daa
mov
inc
xorl
ds
adc
les
adc
sub
fld1
test
xor
xchg
in
enter
cmp
sbb
out
inc
inc
pusha
add
sbb
inc
in
cmp
mov
pusha
orb
adc
mov
aad
pop
stc
adc
mov
clc
gs
cmpsb
ret
popa
pop
ljmp
pop
std
mov
fldt
pop
and
xor
cltd
xlat
aam
lea
mov
test
test
and
dec
hlt
inc
mov
inc
iret
push
sub
insl
xor
imul
notb
inc
test
test
fdivl
pop
cltd
xor
pop
sbb
mov
jo
adc
or
mov
sbb
jno
pop
pop
mov
daa
les
inc
ss
mov
adc
or
push
notl
sbb
out
sahf
aas
icebp
pusha
push
pop
in
jecxz
mov
mov
adc
int
popa
pop
mov
dec
sahf
push
imul
out
push
jmp
cld
push
fmuls
out
inc
pop
xchg
add
imul
cwtl
cwtl
out
xchg
xor
pop
jb
pop
aaa
jp
les
test
iret
lock
push
test
out
jmp
test
xchg
xchg
add
push
cmp
mov
xchg
sbb
mov
cmp
pop
push
cmp
sahf
and
sbb
jmp
sarl
push
in
mov
mov
mov
lea
test
in
jp
imul
daa
sub
mov
cmp
fisubs
adcb
mov
cs
jp
mov
mov
xchg
leave
jne
lcall
mov
clc
cs
cmp
sbb
dec
pusha
push
dec
cmpb
dec
dec
cmp
mov
lock
dec
subb
and
movsl
je
dec
jnp
repz
or
xchg
enter
ret
fistps
adc
sbb
and
aam
mov
mov
xchg
xor
lods
fiadds
lock
dec
icebp
push
xchg
add
mov
dec
or
cmp
sbb
pushf
pop
inc
mov
mov
cld
lods
add
sbb
lahf
addr16
add
pop
cltd
outsb
xchg
inc
xchg
shr
fwait
sbb
in
stos
movd
inc
stc
ss
sbb
leave
ja
add
mov
addr16
lds
fcomps
sbbl
pusha
and
sub
imul
outsl
cmp
cmpsl
xor
xchg
fldl
cli
daa
ficoms
dec
lcall
mov
mov
mov
push
js
aas
adc
in
xchg
idivl
dec
lcall
dec
sub
push
inc
movsb
jae
movsl
fiadds
loope
addr16
test
adc
xchg
fdiv
iret
pushf
in
subl
cmp
dec
push
and
adc
add
mov
shlb
mov
cmp
ffree
test
xchg
pop
mov
xchg
cmp
incl
and
inc
mov
les
xchg
or
add
mov
jne
pushf
mov
loop
dec
pop
mov
mov
aas
pop
lods
sti
insb
adc
les
xchg
dec
jno
scas
in
xchg
push
arpl
cwtl
mov
xor
int
and
jno
push
cmp
rcll
sbb
scas
mov
sub
in
movb
add
mov
popa
sub
push
cld
xor
inc
or
pop
sti
lods
inc
mov
fidivrl
pop
aam
add
frstor
jl
lods
fs
mov
or
fnstsw
sub
mov
jno
aaa
adc
pop
and
hlt
out
std
or
adc
xor
sbb
mov
insl
pop
loopne
dec
mov
jle
nop
pop
inc
cmp
xor
mov
jge
and
int3
adc
lcall
mov
pop
and
dec
jnp
pushf
lret
push
or
jmp
jp
stc
stos
call
sub
mov
stos
fcomip
push
aaa
add
mov
leave
int3
add
adc
lret
or
cli
mov
mov
mov
push
lods
lea
orl
mov
es
ds
push
sub
adc
push
imul
mov
mov
mov
sub
pop
sbb
add
mov
popf
pop
movsbl
icebp
pop
and
outsl
shr
rorl
shlb
lods
and
push
jle
push
adc
sti
aad
xchg
pushf
xchg
mov
push
in
int
fs
lock
arpl
mov
jbe
xchg
pop
shll
dec
fwait
pop
test
in
jg
cmp
pushf
hlt
movsl
inc
dec
imul
sbb
sub
mov
jae
scas
jns
sbb
mov
test
push
nop
ljmp
stc
add
jae
jmp
out
mov
inc
xor
add
outsb
fisttpl
fiaddl
fstl
mov
and
adc
cmp
jb
dec
sub
pop
out
push
mov
mov
in
fwait
inc
test
mov
bound
mov
xchg
movsl
xor
pop
repnz
bound
rcll
adc
fs
xor
pusha
mov
cs
fstpt
mov
inc
jns
jmp
adc
fs
repz
test
mov
cmp
pop
jmp
jmp
cld
test
ret
xchg
movsl
cmpsl
vmovsd
rcrl
enter
test
loope
test
or
repz
sub
jno
in
rorb
jp
repz
rcll
orl
imull
and
aaa
aam
icebp
bound
sbb
shlb
xchg
subl
jp
xchg
mov
lahf
out
cmp
lahf
ret
inc
insl
paddd
into
and
jecxz
lret
mov
inc
mov
cmp
mov
xor
cmpl
dec
jecxz
and
dec
fcompl
mov
ds
jecxz
clc
mov
adc
pop
push
fnstsw
stos
loop
js
mov
in
hlt
cmp
sub
daa
enter
xchg
inc
sub
mov
sbb
cwtl
pop
jne
lcall
xchg
push
les
pop
lcall
fwait
scas
mov
xor
gs
pop
dec
ljmp
sbb
mov
jnp
push
cmpb
and
xchg
dec
push
lds
or
clc
inc
mov
xchg
jecxz
sbb
mov
jae
jnp
sbb
dec
and
cmp
pop
lret
jg
test
lock
int3
test
sub
inc
xorl
adc
sbb
insl
call
fprem1
pop
xchg
mov
xlat
std
pop
add
jno
inc
inc
jb
sub
loope
fnsave
xorb
cmp
pop
or
inc
mov
ss
inc
or
or
imul
and
lcall
dec
mov
xchg
jl
pushl
and
std
mov
cs
jbe
iret
dec
rcrb
aas
xor
sub
and
cmp
jl
xor
inc
adc
mov
mov
pop
in
and
adcb
daa
pop
push
lods
rorl
or
dec
lcall
fwait
orb
pop
cmp
pslld
fcomi
enter
inc
xchg
out
rolb
sbb
inc
pop
lret
push
lock
xor
push
in
mov
es
mov
out
and
xchg
sarb
out
clc
mov
sbb
xorb
iret
mov
and
rorl
aad
mov
in
out
test
sbbb
stos
jnp
or
xchg
and
aad
icebp
push
sub
push
jno
mov
fdivrs
mov
insb
cmc
addb
das
adc
fbstp
outsl
or
inc
or
jp
mov
inc
sub
int
or
gs
test
sbb
jge
or
dec
cli
adc
rorl
push
out
orl
add
and
ret
test
dec
pop
fsubr
shrb
lock
gs
jecxz
ja
push
nop
xchg
fisttps
movsb
pop
imul
sub
mov
in
shlb
adc
and
dec
stc
sbb
outsb
mov
adc
adc
sbb
inc
mov
cli
cwtl
jbe
jo
cmp
mov
push
mov
js
dec
pop
mov
dec
mov
mov
pushf
data16
add
test
mov
adc
shll
mov
mov
sub
movsb
push
pop
mov
and
push
add
jle
sub
pop
jg
add
rcr
push
in
and
insl
xor
cld
sub
inc
sub
and
jecxz
aaa
ljmp
test
sub
je
jnp
cmp
sub
adc
jb
daa
gs
add
popf
pop
lds
mov
or
les
arpl
xchg
add
and
sti
lret
dec
lret
inc
dec
stos
hlt
movsb
adc
fisubrs
mov
jl
lods
addr16
mov
ds
roll
lret
movsb
cltd
sbb
seto
jp
loope
sub
xlat
adc
xlat
inc
in
scas
adc
addr16
stos
jge
mov
inc
loop
mov
fistpll
daa
aad
push
and
mov
xor
fildl
into
and
xor
popa
dec
addb
inc
lock
dec
sahf
repnz
inc
addr16
pop
push
xchg
lret
cmp
mov
ja
dec
mov
jnp
aam
hlt
dec
lds
adc
out
aad
je
call
movsb
or
pop
fsubr
or
scas
out
dec
out
insb
ss
cwtl
dec
mov
xlat
push
fisttpl
scas
cmpsb
pop
xor
in
cltd
cld
cltd
aad
xor
xchg
sbb
test
cmp
push
insl
mov
and
pop
xor
lcall
inc
std
sub
rcl
ss
ljmp
pusha
loopne
inc
mov
mov
ds
mov
test
flds
mov
lds
xchg
dec
outsl
int3
mov
stc
daa
dec
pop
pusha
add
rcll
xchg
adc
push
adc
popf
pop
test
mov
lret
icebp
and
sub
mov
sti
add
lret
repz
cmp
lock
inc
dec
cmp
cwtl
jb
clc
and
mov
or
imul
xchg
cmp
and
repz
enter
inc
aad
cmp
sub
push
cmp
inc
add
adc
fcompl
cld
scas
icebp
outsl
call
out
jbe
xchg
rolb
and
cmp
xlat
xchg
icebp
pop
pushf
loop
cli
fidivrl
into
and
insb
cmpsb
mov
pop
dec
in
xor
js
add
add
mov
mov
and
push
sbb
jp
mov
cmp
jns
nop
lcall
push
rorl
addb
mov
loop
cs
ja
movsb
lea
fwait
lcall
and
push
add
dec
mov
aas
adc
cmp
jnp
push
mov
stos
adc
lds
movsl
aam
mov
pop
mov
arpl
mov
movsb
xchg
sub
rclb
push
pop
xor
pushf
pop
mov
xor
or
jecxz
mov
arpl
sbb
mov
imul
mov
add
jge
xor
jno
sbb
sahf
mov
mov
mov
mov
in
in
push
fildl
pushf
enter
add
adc
push
pop
je
sub
out
push
loopne
push
les
out
mov
into
dec
adc
stos
mov
aas
push
mov
sub
cmp
add
mov
ss
inc
mov
outsl
mov
out
mov
out
xchg
hlt
lds
sub
mov
loop
push
loop
addr16
je
dec
add
hlt
xchg
inc
in
es
rcl
lods
push
xorb
and
jl
mov
mov
xlat
and
inc
xchg
dec
pop
push
mov
mov
xchg
xor
or
xor
cli
or
add
adc
ljmp
sbb
push
ja
lods
and
cmpsb
inc
mov
adc
mov
dec
and
mov
cmp
icebp
scas
nop
into
mov
fsubl
adc
mov
movsb
sbb
lods
adc
xchg
out
mov
dec
cli
ja
sahf
push
mov
and
cmp
jmp
or
scas
movsb
mov
test
jne
int3
xchg
xorl
fmuls
inc
push
movsl
jl
lods
fwait
mov
dec
fsts
add
clc
cmp
cmp
pop
push
fnstsw
lret
cmp
mov
push
xchg
jp
insb
ret
aaa
mov
mov
or
pop
and
iret
mov
into
mov
sti
jno
mov
jl
jne
pop
mov
jne
jl
idivl
pop
aad
cli
and
lret
cmp
int
mov
xor
pop
aas
pushf
and
and
pmulhw
addr16
andb
stos
mov
repnz
inc
mov
lods
adc
xchg
dec
dec
xor
mov
xor
mov
lahf
hlt
test
push
sbb
movsl
xor
xchg
insb
int3
inc
lds
inc
testl
sub
jbe
xchg
cs
push
lock
mov
adc
lret
and
sbb
cmp
push
push
popl
mov
sub
mov
fst
or
mov
aad
cmpsl
rcl
movsl
pop
and
ficoml
imul
shrl
pushf
mov
inc
pop
enter
push
jae
mov
jmp
cmp
xor
popa
xchg
jg
mov
out
ret
repz
cmpps
ja
sub
mov
jp
test
insl
and
decb
pop
mov
rcrl
and
xor
hlt
cs
pop
mov
add
jb
add
mov
xchg
hlt
jecxz
stos
mov
add
xchg
pushf
pop
mov
mov
pop
push
or
jge
pop
movsb
fsubrl
sti
and
aad
pextrw
pop
scas
inc
imul
pop
lods
mov
fsts
mov
iret
cld
xchg
fldenv
jmp
mov
pop
inc
inc
sub
push
ret
mov
lret
aam
ss
mov
jle
std
jbe
sbb
pop
add
loop
aaa
bound
mulb
push
addl
xor
test
in
lds
and
popa
inc
clc
lock
test
sti
enter
nop
data16
xor
inc
sub
lret
cmpsb
pop
cmp
imull
inc
insb
lds
stos
ret
hlt
mov
lret
addr16
dec
pusha
jns
lahf
incl
fsubrs
cmp
testb
mov
adc
jo
jmp
loopne
jmp
xor
sub
push
sub
movsl
xchg
loope
mov
xchg
xor
pusha
shlb
and
xlat
push
sbb
jno
and
pop
aas
mov
jae
outsb
mov
pop
jo
push
ss
ja
scas
lds
mov
push
sub
scas
mov
popf
cli
inc
dec
sub
mov
jbe
push
pop
mov
jbe
jge
fmull
jle
mov
cmpb
mov
jp
dec
or
imul
cmpsl
ficomps
dec
rol
std
xchg
sub
sahf
push
sub
mov
mov
cmpsb
sbb
push
out
mov
sbb
rcrl
dec
cld
xlat
push
jns
jle
paddusw
xchg
jge
mov
lret
mov
shll
mov
xchg
ret
sub
xchg
in
mov
sarl
cmp
jp
les
xchg
lods
cmp
mov
xchg
movsl
sub
mov
dec
scas
and
leave
add
ret
sbb
ljmp
mov
aaa
mov
cltd
sbb
lods
in
add
sbb
lods
mov
ret
jmp
or
out
and
fdivl
stos
jae
xor
mov
ss
cwtl
sub
mov
jl
nop
test
out
cmpsl
cs
pop
jmp
pop
lods
adc
out
mov
idivl
mov
call
pop
inc
sub
sbb
and
cltd
mov
pop
test
movb
xor
test
mov
push
sbb
fsubrs
sub
pusha
cmp
rolb
xor
jne
addb
jl
in
cwtl
shlb
pop
or
clc
mov
mov
movsl
mov
daa
adc
xchg
in
sub
mov
xchg
jo
cmp
pop
dec
imul
loope
mov
xor
adc
lcall
fldenv
ss
mov
sarl
ljmp
pop
xchg
adc
out
popf
out
ds
fwait
cmp
jo
imul
lods
scas
adc
scas
lahf
in
cld
sub
pop
data16
and
mov
fistpll
into
movsb
fucomip
mov
dec
jp
add
mov
sbb
dec
out
jb
int
int3
cmp
inc
xor
in
pop
push
mov
adc
inc
mov
mov
sbb
inc
sub
test
lock
insb
mov
fstpl
inc
push
and
push
and
cmp
inc
ds
mov
dec
add
pop
jp
pop
xchg
std
hlt
jbe
xor
popa
pusha
push
gs
repz
pop
xchg
mov
add
add
subb
lret
clc
push
loope
mov
aas
sbb
pushl
insl
push
xchg
xor
push
loopne
jae
sub
popf
adc
mov
out
adc
cmpsl
cmp
notl
test
xor
shl
lahf
popf
test
lods
stos
push
or
in
shl
push
mov
out
fsubrs
push
cld
jg
xchg
mov
adc
cltd
pusha
mov
jg
mov
js
xchg
popf
fadd
fstpl
loop
and
xor
inc
jmp
mov
xor
or
xchg
dec
jg
aas
sbb
sub
scas
fadd
mov
mov
and
xor
movsl
xor
dec
cld
jno
lret
sub
push
in
inc
xor
scas
lods
mov
clc
add
push
pop
sbb
enter
jo
or
xchg
inc
push
mov
jns
movsl
pop
in
cld
jecxz
insb
jo
shlb
or
xchg
push
and
movsb
shlb
popf
lahf
xor
lret
std
sbb
or
adcb
es
adc
shrl
cmc
xchg
xchg
xchg
jno
frstor
adc
lret
movsb
sbb
jmp
mov
push
bound
lods
add
dec
inc
imul
je
inc
into
xor
pop
and
popf
jo,pn
test
rorl
and
cmp
ds
mov
xor
xchg
ds
sbb
fwait
adc
ret
scas
loopne
mov
dec
inc
mov
xlat
pop
and
lea
in
cmp
pop
aas
mov
pusha
jl
mov
lds
lea
lret
dec
push
dec
pop
and
xchg
or
xor
jae
stos
sub
jae
add
mov
cmp
ljmp
push
sbb
addb
pop
or
in
icebp
xor
iret
xchg
pop
stos
xor
clc
dec
pusha
or
cmp
xbegin
sub
repz
sub
mov
pop
je
sahf
inc
scas
lret
dec
mov
inc
in
cld
mov
in
pushf
adc
xchg
jge
cmc
adc
mov
pop
sub
scas
lret
bsf
ljmp
lds
or
test
mov
push
or
cmpb
inc
mov
xlat
das
mov
sub
add
gs
cld
in
adc
stos
or
mov
dec
imul
pop
stc
inc
xchg
jae
sub
inc
xlat
or
jno
mov
xchg
adc
test
adc
jl
dec
dec
pushf
xor
inc
sbb
xchg
movb
cmpl
roll
mov
cmpsb
aad
pusha
mov
jns
js
mov
dec
fisubl
mov
inc
pop
imul
jno
out
mov
jg
stos
int
jp
and
cmpsb
ffree
xchg
cmp
jnp
xor
imul
pop
shlb
push
xchg
out
loope
push
in
mov
mov
leave
xchg
dec
xchg
mov
pop
and
pop
jge
movl
dec
dec
pushf
pop
stos
push
imul
add
mov
sub
jmp
xchg
jno
fdivs
sub
aam
push
shlb
lahf
popa
mov
popf
mov
flds
in
or
nop
push
test
and
arpl
stos
sub
xchg
inc
pop
mov
mov
sub
ja
sbb
mov
movsb
xchg
inc
or
mov
rcrl
dec
xor
push
rcll
pop
or
cs
jo
jmp
or
adc
dec
aam
jge
shl
cltd
mov
mov
mov
push
iret
fiaddl
xor
ss
push
xchg
lock
jbe
push
lahf
flds
mov
and
mov
mov
mov
repnz
aaa
pushf
dec
add
dec
gs
mov
arpl
into
and
nop
jo
and
jbe
jae
je
es
aam
jle
mov
mov
xor
pop
test
xchg
add
dec
lret
cmp
jge
in
fdivrs
adcl
aad
aas
hlt
test
mov
mov
xor
sti
mov
int3
mov
insl
adc
push
test
push
pop
xor
dec
adc
mov
adc
push
ja
imul
lea
dec
xchg
shlb
data16
outsl
dec
ffreep
xchg
xor
pop
outsb
lahf
mov
scas
subb
sub
mov
hlt
jecxz
mov
das
pop
das
dec
imul
adc
xlat
mov
jb
enter
aaa
mov
sub
dec
sub
lahf
push
mov
test
fistl
shrl
imul
shlb
pop
mov
mov
das
jmp
sub
dec
lods
push
mov
rcl
sub
cltd
cmp
sar
and
jo
sub
add
xchg
push
mov
arpl
jle
xchg
je
mov
inc
cwtl
inc
xor
dec
push
push
xchg
lret
push
jns
fisubl
lret
xor
lahf
jl
add
lds
in
fs
sbb
inc
ficoms
mov
push
outsb
mov
inc
test
add
mov
xor
cmp
xlat
int
mov
adc
in
test
loop
movl
scas
int3
jo
sub
aaa
pop
in
dec
cmp
lret
sbb
sbb
jbe
sbb
cmp
ja
loopne
mov
in
sub
scas
sbb
scas
shrb
xor
or
out
outsl
imul
incb
mov
scas
inc
and
loope
xlat
or
shlb
stc
mov
sub
rorl
addb
pop
push
jecxz
mov
dec
sbb
in
xor
imul
js
cmc
fidivrl
scas
xchg
lret
and
aam
aas
or
push
imul
mov
jmp
mov
inc
mov
push
adcl
in
repnz
fcoms
xchg
je
pop
add
popf
and
dec
dec
sbb
adc
sub
mov
xchg
dec
mov
pop
dec
cs
push
les
pop
dec
and
popa
pop
out
push
sub
push
cltd
push
in
sub
js
sub
inc
ret
jle
jo
into
xlat
outsl
sub
cmp
shll
insb
out
imul
adc
divl
es
je
jge
cmp
fildl
cmpb
fwait
adc
xchg
and
sub
ljmp
lods
push
sbb
mov
test
mov
scas
lods
iret
pop
jle
xor
push
pop
aas
push
das
inc
pop
test
fldenv
mov
ljmp
xor
pop
xchg
push
ret
cltd
sub
and
add
add
js
or
movsb
push
jno
sub
xchg
insl
push
movsl
test
iret
insb
xchg
fisubl
ret
jb
jo
mov
hlt
orb
sub
add
cmpsl
es
sub
jl
xchg
xor
xchg
pop
cmp
mov
sahf
inc
ret
call
jmp
mov
cwtl
mov
fwait
inc
mov
jae
ss
in
mov
in
jno
or
and
cmc
mov
and
addr16
xchg
mov
add
dec
xchg
daa
rclb
jb
icebp
inc
add
fs
mov
ja
inc
imul
lret
xchg
add
loop
xor
jp
stos
fcmovu
push
mov
adc
mulb
loope
insl
push
jmp
adc
cvtps2pi
xor
fidivs
sub
cmp
mov
inc
mov
push
add
pop
in
mov
xlat
shl
mov
imul
sub
std
add
repz
leave
xchg
das
in
pop
xor
cmp
inc
call
sub
or
shll
pop
int3
or
mov
fwait
lahf
sbb
mov
push
xchg
cmpsl
repz
mov
or
xor
pop
dec
add
sub
mov
pushf
les
pop
pop
mov
hlt
shrb
mov
sbb
inc
ss
mov
mov
cmp
mov
push
xor
stos
ja
add
out
shl
leave
mov
inc
lcall
lds
cli
bnd
mov
mov
ljmp
mov
lret
sbb
jmp
mov
xchg
sbb
inc
mov
inc
dec
sbbl
or
call
add
fs
jae
in
scas
fwait
ret
push
mov
test
out
or
cmpsl
xchg
enter
jl
addr16
xor
imul
jle
or
xor
push
mov
mov
jno
inc
jmp
enter
mov
jb
aaa
inc
or
inc
test
mov
stc
lcall
loope
ss
sbb
pop
or
popf
pop
xchg
xor
test
repz
das
mov
pop
adc
push
jmp
xor
push
inc
aas
out
or
xor
shl
push
pop
mulb
mov
lods
push
out
std
int
or
cwtl
ja
inc
jno
aam
mov
stc
cld
sar
dec
cmp
jle
jb
cmp
fucomi
lcall
sbb
lods
orl
or
and
std
push
add
mov
or
push
js
mov
cs
clc
xchg
adc
ficomps
les
push
pop
mov
lahf
lea
stc
sbb
mov
xchg
jle
push
mov
scas
jbe
xchg
imul
jge
jns
dec
inc
cmp
mov
pushf
test
mov
push
add
inc
and
inc
sahf
jl
test
mov
das
stos
xchg
loopne
dec
xorb
mov
imul
mov
not
or
stc
pop
jne
data16
bound
and
dec
and
push
es
mov
pushf
push
mov
inc
lea
repz
mov
xor
cwtl
cmp
push
fnstcw
rorl
vhaddps
push
dec
mov
pushf
movsb
imul
mov
sarb
popf
jb
pushf
sub
lock
sub
incl
dec
xor
fsubrp
popa
cld
add
add
enter
xor
test
jbe
and
cmpsb
bnd
aas
or
sub
out
mov
cmp
mov
push
mov
out
dec
stos
add
and
or
jmp
movsl
es
scas
int3
ds
mov
scas
testb
jb
rol
cmc
daa
divb
pop
sbb
dec
mov
js
sub
sahf
stc
mov
in
enter
mov
adc
mov
insb
pop
pop
dec
jbe
mov
jno
loopne
lcall
inc
hlt
push
lahf
inc
bound
clc
sbb
jo
jp
fsubrs
daa
add
test
pop
aad
negl
lea
icebp
push
sbb
xchg
mov
in
and
cmc
inc
pop
ficomps
xchg
jp
xlat
inc
jbe
push
pop
cmpsl
sbb
stos
dec
aam
in
jp
and
and
xor
jmp
lret
jo
shl
fildll
mov
into
or
and
adc
jne
out
sub
jo
push
mov
or
mov
js
sahf
js
lahf
popf
inc
enter
sub
pop
adc
inc
jbe
dec
lret
out
popa
cmpsl
popf
jge
mov
shr
mov
sub
jmp
insl
les
xor
fstpt
cmp
sbb
dec
jo
cwtl
cmpb
cmp
or
cmp
icebp
and
mov
sbb
xchg
mov
fdivrl
pop
adc
cli
pop
ljmp
outsl
add
ljmp
test
and
cli
xlat
push
je
mov
and
or
pop
pop
scas
clc
pop
repnz
push
popa
or
and
sub
outsl
adc
adc
mov
rorl
push
cmp
inc
or
fwait
push
mov
jle
mov
insb
add
push
pop
push
pop
out
cmp
add
jecxz
mov
fwait
sub
push
pop
movsl
outsb
mov
loopne
je
mov
sbbl
es
orl
xor
fdivrl
test
jne
mov
idivb
cld
into
das
pop
push
pop
stos
ja
adc
or
mov
loopne
jne
mov
das
mov
pop
mov
or
push
andb
push
dec
add
lds
mov
popa
ret
outsb
scas
xor
mov
pop
rolb
dec
sbb
inc
les
push
or
mov
push
and
insl
lea
jne
inc
call
outsl
enter
scas
push
dec
emms
insl
std
mov
testl
jl
iret
mov
outsl
cmp
sbb
mov
jmp
adc
std
dec
es
mov
test
cmp
add
jno
hlt
dec
sub
fdivp
and
pop
das
shrb
push
movsl
leave
aad
adc
adc
jmp
aad
push
sub
dec
or
in
stos
pushw
dec
hlt
test
sbb
cs
int
lret
add
ret
add
push
imul
xchg
icebp
ret
shlb
out
cmp
loope
and
es
sub
cmc
mov
push
stc
mov
inc
ds
and
sbb
push
push
mov
mov
mov
negl
mov
in
das
or
and
loop
or
outsb
push
call
test
repnz
lock
ret
aam
lods
dec
inc
aad
inc
adc
clc
jecxz
inc
xchg
jns
fdivl
repz
popa
out
test
out
loopne
aaa
neg
fstps
sub
and
push
stc
inc
cmp
lret
lods
mov
mov
push
xchg
fsubs
or
push
mov
imull
push
mov
pop
xor
push
adc
movb
iret
xchg
dec
insb
xchg
in
fs
pop
ja
mov
adc
xchg
mov
xor
cmpsb
imul
popa
rcll
inc
inc
jno
pop
rcl
cmp
push
enter
jno
stos
jg
test
cwtl
in
xor
mov
into
mov
inc
xchg
outsl
xchg
int3
mov
pop
and
movsb
jecxz
and
xor
cmp
movsb
das
pop
fcompl
lcall
ds
push
scas
cmp
pop
push
dec
leave
jns
es
addr16
xchg
adc
imulb
clc
insb
popf
ret
inc
cmp
int3
adc
mov
sbb
sbb
mov
mov
xchg
out
jno
push
sbb
jae
in
mov
push
mov
xor
sub
or
and
mov
shrb
cmp
dec
into
xchg
aas
jns
add
fcmovu
loop
xchg
mov
fwait
and
push
ja
je
xchg
dec
lret
lock
xchg
cmp
stos
adc
and
sbb
inc
push
pop
add
mov
lea
and
sbb
in
pop
fmuls
inc
orl
and
push
xor
fdivrs
push
pop
add
push
push
imul
xor
pop
pop
scas
jmp
sbb
mov
stos
pushf
idivb
aaa
xchg
lcall
mov
dec
enter
stos
in
pop
jmp
popf
das
movsb
pop
mov
mov
iret
xchg
sbb
data16
pop
dec
dec
lods
mov
push
loope
lcall
adc
shrl
jl
pop
in
js
call
es
or
sub
lahf
sub
jl
ja
popf
cli
mov
push
or
roll
sbb
add
lea
outsl
adc
jge
pop
std
je
sbb
xchg
roll
fs
xlat
inc
inc
frndint
cmp
or
add
dec
iret
idivb
fdivs
popa
movb
mov
fsubrl
shrl
loop
or
mov
lods
sbb
bound
cmp
add
fdivl
dec
sti
movsb
insb
inc
lret
jae
jb
push
mov
dec
sbb
add
pop
lods
mov
pop
mov
xchg
pop
push
testb
fldenv
mov
and
push
aaa
sti
and
pop
jge
lcall
and
push
and
test
jnp
test
jmp
leave
mov
andl
or
adc
imul
mov
movsl
fldcw
loop
adc
add
dec
pop
mov
ret
adc
imul
mov
mov
jge
xchg
sbb
rcrl
push
test
ljmp
pop
push
hlt
mov
pop
scas
je
dec
loopne
mov
leave
sub
fwait
lea
stos
nop
pop
lds
psrld
or
jb
fwait
cmp
and
jmp
jnp
mov
xchg
clc
or
test
scas
fsts
xor
cmpsb
push
xor
mov
mov
in
xchg
pop
xor
stos
or
inc
rolb
and
and
push
lods
add
or
jecxz
jno
dec
jo
daa
xchg
lods
push
gs
xchg
add
push
movsb
sbb
js
js
mov
push
lahf
mov
cld
jnp
mov
mov
iret
sbb
jns,pn
push
pop
int3
xor
stc
dec
test
xchg
in
push
xlat
xchg
adc
popf
out
cmp
jmp
push
adc
test
test
and
shll
popa
jecxz
pop
call
ljmp
inc
xchg
inc
inc
and
cs
movsl
ss
subl
sbb
lea
inc
cmp
cmc
mov
cmp
je
mov
int
aam
jmp
cmp
fnstenv
addr16
negl
mov
lock
ljmp
ror
pop
rcrb
movsl
arpl
faddp
sub
inc
mov
xor
mov
add
jb
sub
fidivrl
aad
out
mov
mov
pop
cs
push
ljmp
aam
cmp
nop
jmp
in
jecxz
stos
cmpl
int
xchg
sbb
cmp
add
rorl
push
and
sub
add
aad
jb
sub
loopne
jmp
push
inc
pop
out
scas
faddl
or
jecxz
cmp
pop
jecxz
sbb
cmpsl
dec
lods
xchg
jl
jno
stos
xchg
and
cmp
imul
loope
mov
mov
inc
push
repnz
mov
adc
out
cmp
loope
and
pusha
push
push
adc
dec
inc
repnz
cmp
pop
ret
sbb
test
jg
sub
fbstp
testl
sbb
dec
xchg
and
cmpsb
outsb
or
and
cmp
pushf
je
or
into
xor
inc
shrb
cmp
jecxz
push
pop
int3
mov
and
aaa
xchg
les
adc
mov
int
mov
std
push
jo
jno
or
pop
cli
addr16
fs
cmp
jno
push
mov
pop
mov
jl
sub
lds
negb
and
lods
iret
das
aaa
mov
aas
mov
scas
mov
mov
outsb
sub
jge
inc
adc
add
xor
scas
scas
sbb
mov
or
sub
dec
sbb
in
xor
cmp
adc
pop
daa
mov
shll
into
dec
mov
les
push
int
mov
enter
cmc
jae
inc
push
jp
xchg
nop
jle
sub
insl
repnz
xlat
mov
lret
inc
mov
and
sti
inc
sbb
adc
scas
and
lock
adc
push
mov
mov
in
mov
nop
scas
std
mov
das
cwtl
dec
popa
insl
leave
jae
xchg
test
mov
out
outsb
xor
inc
dec
test
xchg
mov
fmul
insb
or
mov
insb
bound
mov
sub
pop
and
cmp
call
fcoml
jg
xchg
inc
adc
aam
or
inc
jmp
push
xchg
std
xchg
ljmp
mov
mov
xor
jae
cwtl
jecxz
jp
loope
js
pop
push
adc
shll
sbb
mov
push
or
mov
outsl
aam
dec
lret
jno
jge
cmp
pop
fsubr
add
cmpsb
repz
stc
or
mov
data16
dec
fiadds
nop
fsubrl
in
inc
lea
and
or
xchg
xchg
mov
loopne
in
adc
sbb
int
xchg
sbb
mov
inc
aad
xchg
pop
jg
mov
fadd
pop
add
ret
stc
mov
data16
out
pusha
data16
insl
xor
data16
mov
bound
sbb
rcrb
pop
andl
daa
inc
xchg
mov
pop
adc
jge
and
rcl
sti
rcl
add
mov
out
add
daa
xchg
pop
sbb
mov
imul
inc
js
push
xchg
cmpsl
loop
pushf
push
call
mov
mov
ret
and
cmp
dec
sti
mov
and
lret
in
pop
fwait
pop
cmp
hlt
add
jb
repz
mov
and
dec
mov
orl
inc
push
vmread
lods
adc
pop
test
xor
add
inc
insl
inc
push
lahf
pop
pop
mov
push
mov
mov
jb
lods
daa
push
jmp
jg
aam
in
sub
lods
sub
pop
je
dec
jg
xor
lods
mov
fcmovnu
cmp
fmull
inc
add
movsl
mov
pop
and
or
loop
or
mov
clc
scas
aam
sahf
mov
test
pusha
lret
lret
mov
lcall
scas
or
mov
mov
xchg
sbb
and
jno
xor
xchg
popf
lods
mov
leave
mov
push
in
out
or
hlt
ss
aad
shlb
xchg
mov
test
cmp
mov
mov
mov
stos
nop
loopne
popa
add
add
ret
nop
insl
and
dec
push
in
mov
rclb
stos
xlat
push
cmpb
and
test
xlat
pop
ds
or
fcoml
sub
add
sub
xchg
xchg
out
and
sbb
xor
add
test
cmpsl
cmp
lret
insl
add
aaa
repnz
jbe
fldl
push
pop
jne
mov
shlb
shll
mov
aam
mov
sbb
cltd
sub
pop
mov
mov
fiaddl
xchg
or
mov
in
stos
xchg
inc
mov
dec
mov
mov
clc
dec
insl
add
dec
orl
xchg
aaa
add
lods
imul
test
pop
loopne
sub
or
leave
dec
popa
adc
mov
mov
mov
repnz
divl
ds
inc
orl
adc
subl
fidivrs
imul
lods
cmpsl
push
loope
adc
hlt
xchg
mov
test
scas
pop
ja
jge
mov
dec
test
into
es
xor
mov
sbb
clc
jl
cmp
movsl
jl
xchg
add
and
jo
add
mov
stos
xor
mov
roll
mov
push
mov
adc
or
cltd
inc
clc
inc
xchg
nop
aas
nop
add
xchg
sbb
mov
xchg
or
in
xor
and
jmp
push
and
bound
fdivrs
sbb
sub
xchg
cmp
ret
lret
or
pop
jp
repz
test
add
and
scas
xor
pop
inc
adc
pop
lret
jge
add
bound
insl
in
fwait
pop
mov
cwtl
mov
int3
pop
inc
out
loope
cmp
jle
lret
int3
and
and
test
dec
jmp
xlat
fimuls
mov
es
sahf
mov
mov
mov
adc
push
pushf
arpl
std
inc
xchg
addr16
inc
mov
mov
add
in
push
inc
mov
pop
mov
ret
jae
push
lret
lods
out
jecxz
xchg
ret
in
pop
cwtl
shll
mov
mov
clc
sbb
ljmp
stos
add
pop
pop
syscall
mov
sbb
test
pop
fmuls
jge
aad
push
pop
pop
rcrl
aas
lds
push
and
or
cmp
dec
cmpsb
lea
xor
popa
arpl
cmp
mov
xchg
sahf
dec
adcb
push
sbb
cmpb
pushf
pop
and
mov
popa
in
dec
sub
rcrb
jb
sti
pop
adc
pop
jmp
sti
sub
jmp
add
adc
out
mov
imull
sub
leave
int
xchg
adc
jp
outsb
negb
stos
cmp
jp
push
es
cmp
pusha
mov
dec
or
lret
data16
inc
or
push
incb
lcall
popf
test
dec
mov
ljmp
lods
ret
pusha
push
or
fnstcw
mov
pop
mov
xchg
sbb
pop
sub
push
sbb
sti
dec
xor
mov
or
pop
adc
sub
sub
loop
xor
jae
scas
cmp
das
dec
arpl
data16
lods
in
dec
mov
out
xor
cwtl
cs
cli
loopne
adc
dec
add
ljmp
pushf
sub
and
mov
loopne
int
add
test
enter
add
dec
mov
lock
shl
push
outsb
imul
jp
cmpl
call
insl
mov
mov
cli
orb
or
out
xchg
ret
cmp
repz
out
leave
mov
dec
sbb
leave
push
cmpsl
test
adc
push
mov
push
stos
mov
repnz
pop
adc
movsl
in
jg
jae
dec
cmpl
mov
mov
pop
shr
sbb
pushf
pushf
mov
inc
mov
jae
dec
push
stos
jg
push
xor
pop
aaa
hlt
push
insl
push
aam
jmp
cmp
dec
cmp
fisubrl
das
shrb
xor
je
xchg
cld
add
sarl
pushf
xor
sbb
inc
out
add
xchg
lret
bound
adc
sti
mov
lea
and
dec
and
ds
cmp
xchg
adc
jne
add
stos
sbb
outsb
ret
pop
iret
or
mov
ja
xchg
pusha
test
in
xor
cli
enter
test
faddl
or
rol
and
lds
outsl
mov
fbstp
adc
sti
pop
pop
in
jb
xlat
cmc
out
and
push
xchg
add
insb
mov
inc
sub
pop
adc
and
pop
inc
loope
fldenv
push
mov
or
mov
jmp
jecxz
cmp
outsb
roll
add
jecxz
outsl
lods
out
dec
movsl
ror
pushfw
jecxz
mov
mov
arpl
lds
jb
int3
int3
sbb
pusha
xchg
rolb
cmp
stc
pop
adc
sub
jge
mov
ficomps
cs
aad
jbe
notl
add
out
push
cmpsb
sbb
xchg
pop
xor
pusha
lock
push
lea
lret
jnp
jo
push
bound
add
xchg
inc
ja
call
mov
bound
jge
repz
ret
test
sti
push
jle
inc
dec
or
rcrl
in
daa
outsb
jne
jo
cmp
sbb
dec
push
mov
pop
add
fistpl
xchg
in
xor
mov
decb
ret
xor
jmp
cmp
jae
mov
and
push
jg
fwait
movsl
test
dec
and
jg
push
push
and
dec
jb
clc
inc
and
and
pusha
movsb
icebp
movsb
movsl
call
imul
mov
jns
cmp
push
cld
or
icebp
mov
loop
mov
or
push
adc
or
adc
bound
xor
jb
aas
std
and
mov
lea
or
std
aaa
sbb
cmp
sbb
repz
arpl
xchg
dec
and
ret
pop
and
or
inc
hlt
call
inc
mov
inc
cli
adc
aam
xchg
jge
pop
ret
mov
lds
jo
mov
pop
fisubl
loopne
dec
xchg
xor
add
ja
aam
bound
add
mov
shll
insl
cmp
adc
xor
push
test
xor
adc
insb
es
mov
push
and
ss
cmp
pop
outsl
rcll
cmp
divb
sub
mov
insl
push
and
scas
loop
pop
xor
dec
int
adc
inc
fstp
cmp
push
sbb
movsb
cmp
fs
push
mov
aas
pop
arpl
and
sbb
pushf
fadd
outsl
movsb
repnz
rorb
lods
fidivs
adc
int3
aaa
sbb
dec
lods
inc
je
mov
and
xchg
mov
dec
stos
inc
push
mov
ret
xchg
mov
bound
dec
add
leave
jg
idiv
cli
push
in
out
pop
cmp
lock
sbbb
or
jecxz
pop
popf
fistl
bound
outsl
or
shll
pop
jg
cmc
sar
in
shl
or
das
mov
call
add
fdivrl
cs
dec
imul
nop
inc
and
mov
iret
popl
cld
imul
shll
addr16
in
pop
int3
xchg
mov
mov
inc
mov
pop
incb
call
js
push
jl
icebp
int3
xor
mov
push
not
std
pop
cs
lcall
dec
scas
xchg
mov
out
nop
or
nop
xchg
jns
outsl
pop
xchg
ret
faddl
jo
repnz
mov
imul
xchg
push
pop
data16
jns
xor
into
xchg
xor
ljmp
dec
push
call
ljmp
push
out
in
jp
xor
fcmovbe
mov
mov
jg
ret
out
repz
roll
mulb
out
arpl
das
xchg
xor
fld
test
mov
jno
insl
sbb
push
mov
mov
repz
pop
enter
ss
jecxz
pop
nop
mov
arpl
fimuls
cs
xor
mov
xchg
inc
enter
push
mov
mov
test
jbe
cmp
pop
lret
fwait
jno
inc
idivl
adc
mov
cld
mov
lods
or
shrb
dec
call
cmpb
jnp
and
dec
dec
adc
dec
hlt
pop
xlat
add
dec
cwtl
outsl
scas
jle
out
js
icebp
pop
mov
sbb
sub
jg
dec
cmc
rolb
shr
sub
dec
dec
loope
repz
aam
mov
jbe
shl
loop
add
mov
call
adc
xor
mov
mov
push
int3
pop
sti
or
sti
dec
add
adc
dec
inc
daa
cltd
push
fwait
pop
or
jp
mov
cmpsl
or
xchg
and
das
loop
cs
cld
addr16
cmp
or
xchg
cwtl
or
dec
mov
xchg
adc
xor
mov
or
push
jmp
cmpsb
pop
stos
jecxz
xchg
and
mov
mov
lret
fstl
xor
adc
adcl
js
jecxz
popf
test
lahf
nop
jns
cld
adc
jns
fnstenv
fsubs
rcr
cmc
push
dec
rcrb
and
dec
cli
stos
cmpl
jae
pop
jo
js
pop
xor
add
pop
pop
push
push
push
and
inc
mov
push
xor
movsb
cmp
mov
loope
sbb
fsubrs
test
push
rcr
sahf
push
ret
add
nop
pusha
addr16
filds
mov
test
mov
das
gs
enter
cmpsl
adc
mov
out
push
test
aas
sbb
cli
sbb
lods
minps
daa
stos
cmp
rorl
int
jae
data16
rorb
out
leave
or
dec
fistps
dec
das
icebp
pop
mov
pop
push
mov
add
aam
andw
push
int
nop
clc
cmpsb
mov
pop
or
popf
loopne
pop
jae
and
inc
outsb
xor
mov
xor
rcl
pop
xlat
data16
int
dec
mov
jg
jecxz
shlb
jecxz
jmp
enter
cld
pop
test
dec
dec
add
mov
cmp
data16
mov
cmp
mov
xchg
loopne
fidivs
or
sub
aaa
xor
test
aam
mov
add
out
or
xchg
sbbb
pop
pop
pop
lods
add
ja
fyl2xp1
inc
mov
and
rcl
mov
test
add
rcrb
sti
ret
lret
and
outsb
inc
dec
or
sbb
jmp
dec
push
push
icebp
or
movsb
pusha
insb
mov
xchg
sbb
and
mov
sbb
mov
ret
mov
popf
push
sbb
sbb
dec
cmpsb
repz
fs
sbb
cltd
sbb
int
scas
mov
or
mov
fsubrs
sahf
add
ror
and
adc
sub
nop
insl
cltd
push
lret
mov
and
nop
xchg
mov
jno
push
in
dec
pop
xor
je
xchg
add
jp
imul
inc
pop
js
inc
push
call
push
sti
pop
xchg
aaa
adc
pop
lret
pop
xor
rorl
es
out
filds
aaa
cwtl
mov
cmp
push
pop
and
clc
xor
in
ja
in
repz
and
xor
jp
jle
cmp
xor
jo
sbb
cwtl
jp
mov
inc
jg
xor
imul
mov
push
ret
in
lcall
and
ja
or
hlt
in
aas
xor
mov
insb
jne
cwtl
popf
cmpsl
xor
inc
jle
divb
aad
dec
jg
adcl
in
fs
in
fdiv
ss
aas
clc
jl
call
loope
jo
jle
inc
not
push
lods
inc
xlat
push
aad
fwait
cwtl
pop
add
pop
ss
push
fisubl
daa
aam
es
addr16
add
dec
mov
js
mov
daa
leave
mov
bound
jnp
fsts
xorb
cmpsl
adc
sbb
adc
arpl
sahf
xchg
ss
imul
jno
lock
xor
nop
leave
push
out
cmp
sbb
sub
repnz
cmpl
mov
and
jo
inc
mov
cmpsb
push
fsubl
loop
jecxz
adc
xchg
cltd
xlat
mov
xchg
fwait
gs
loop
sbb
jmp
push
mov
xlat
inc
jnp
fists
fidivrs
adc
dec
jbe
fsubrs
mov
xchg
movsl
add
sub
mov
sub
inc
lods
pop
adc
loop
add
sbb
cmp
les
add
fldenv
ljmp
sub
inc
xchg
je
mov
mov
mov
pushf
insb
jg
sub
daa
sti
cmp
cmpsb
push
mov
xchg
out
push
or
add
or
stos
pop
movsb
inc
dec
icebp
je
in
dec
leave
inc
mov
adc
cli
loope
lock
xchg
cmp
mov
call
pop
rsm
xlat
in
cmc
fistpl
aas
xor
xchg
push
mov
jb
mov
jnp
pop
push
mov
push
shll
gs
xor
inc
xchg
call
or
xor
gs
and
mov
lods
test
mov
mov
dec
xsaves
dec
insb
rcll
ja
xchg
xor
jns
out
add
jae,pt
daa
cmpl
daa
in
insl
movsl
cmpsb
js
gs
leave
test
xchg
in
icebp
sahf
xor
push
sub
outsb
imul
aam
outsb
add
outsl
sarb
inc
cmpsl
jnp
mov
mov
ds
adc
daa
jl
int3
lock
push
push
fisttpll
inc
cmp
popa
ror
cmc
insb
adc
push
out
ds
jno
push
jbe,pn
rcr
scas
add
mov
cmc
pop
ljmp
add
sbb
cmp
fwait
mov
and
sub
and
popf
xor
inc
adc
xor
jne
arpl
mov
repnz
mov
mov
int3
fnstcw
pop
push
inc
fdivrs
push
sub
outsl
push
inc
xchg
cwtl
call
dec
cli
jns
test
push
mov
js
fs
pop
dec
cli
test
insl
int3
mov
mov
adc
test
test
test
sub
add
mov
jae
mov
fs
movsb
outsb
out
mov
scas
cmp
icebp
pop
push
sbb
mov
inc
fadds
sbb
adc
or
popf
jne
or
xchg
cmpsl
dec
pop
sti
xchg
mov
mov
sbb
pop
aam
jbe
in
push
jg
pop
hlt
mov
stos
insb
add
and
rol
dec
jmp
push
and
pop
push
jge
adc
lds
int3
lret
and
push
jmp
test
ret
xor
insl
add
stc
ret
jno
imulb
hlt
cmc
xor
subb
jae
mov
xchg
cmp
scas
fsub
mov
filds
dec
outsl
ficoml
scas
sahf
adc
lret
add
das
out
in
loop
xchg
dec
mov
add
test
sbb
sub
fidivrl
popf
fwait
push
repnz
jb
sbb
or
ffreep
jbe
mov
andb
popa
inc
rclb
mov
cmpsl
clc
outsb
ret
inc
or
imul
fwait
mov
push
xor
cmc
pop
adc
lret
stos
daa
repnz
push
stc
pop
lds
shrl
mov
out
pop
fstpl
fs
stc
cld
in
cmp
rcrb
mov
adc
and
sbb
into
int
pop
jns
xor
add
jno
lcall
add
xor
lcall
mov
xor
cmp
popa
into
mov
lahf
jns
and
jg
pop
add
inc
loopne
mov
mov
inc
xor
xor
je
add
les
fisubrs
scas
pop
dec
scas
js
cmp
cmpl
repnz
pop
and
add
outsl
add
pop
or
mov
dec
mov
scas
jmp
push
loope
daa
add
aam
adc
mov
idivb
gs
adc
shlb
daa
insb
mov
imulb
call
pop
push
dec
cmp
adc
inc
or
xlat
mov
in
push
shrb
lock
fsts
sbb
sarb
cmpsl
fsts
roll
xchg
lock
xor
mov
es
push
lret
sar
xchg
xchg
shrl
mov
pop
outsb
popa
cmc
cmp
pushf
inc
cli
cld
shlb
lcall
orb
mov
cmpsb
jge
dec
movsl
cmp
push
pop
dec
jb
fcomp
pop
jo
pop
ret
fsubrs
ret
test
push
sti
xlat
sub
outsb
in
mov
movsl
in
mov
sub
hlt
pop
lods
xchg
mov
mov
aad
xor
jg
ss
repz
incb
rolb
je
push
push
jne
popa
inc
push
icebp
or
mov
sbb
mov
xor
mull
lods
sets
lret
int3
in
pop
sub
je
subl
fstl
adc
adc
mov
pop
imul
cs
mov
das
inc
sar
add
dec
insb
and
fisubl
outsb
cmp
icebp
movsb
dec
xchg
or
xchg
scas
pop
adc
cmp
cltd
sbb
xor
pushf
push
scas
sbb
iret
cld
jecxz
or
mov
rclb
lea
jnp
test
sbb
inc
adc
daa
int3
mov
xchg
push
std
rcr
dec
mov
iret
lret
or
ja
push
mov
and
cld
out
or
inc
out
mov
ja
cltd
mov
xchg
xor
ja
dec
fidivl
rclb
mov
pusha
loopne
jb
cmp
std
xchg
cmp
add
or
mov
stos
int3
pop
int
popf
dec
sarl
out
pusha
hlt
fldl
add
push
sub
xor
pusha
xchg
repnz
and
xor
sub
loop
es
lret
xorl
mov
movsl
jno
hlt
fwait
mov
loop
jns
mov
int
push
icebp
pop
stos
mov
or
je
adc
xor
add
jle
pop
inc
mov
mov
js
sahf
fcoms
lock
cwtl
mov
jnp
sub
inc
dec
mov
dec
test
cmp
imul
push
add
mov
scas
jb
iret
lods
pop
push
jl
outsl
push
insl
cs
add
jecxz
and
xchg
xchg
cmp
jno
cmp
inc
dec
sbb
aas
shlb
and
cmc
fadds
push
in
shl
call
sub
mov
xor
cmp
sbb
in
add
scas
dec
addl
dec
je
in
int
sbb
ss
sub
sti
cmp
push
shlb
int
mov
mov
insb
jl
xor
sbb
hlt
xchg
pop
clc
jp
dec
mov
mov
push
daa
jno
sti
in
hlt
inc
inc
mov
lcall
jg
lock
aaa
neg
leave
out
dec
push
test
inc
and
loopne
xlat
bound
nop
pop
and
icebp
fistps
test
mov
or
cmpsl
pushf
test
cmpsb
fnstsw
xchg
push
je
mov
stos
mov
sbb
push
push
xchg
sbb
jp
and
mov
repz
loopne
pushf
sub
test
shrl
sub
mov
dec
and
fwait
push
clc
xchg
xor
pop
pop
cmp
push
in
jo
test
lods
cld
cmp
sti
pop
bound
scas
and
and
ror
cmpb
or
push
adc
lcall
shlb
roll
addr16
sti
les
sbb
pop
mov
mov
adc
jb
push
mov
xchg
les
lcall
out
pop
xchg
imul
inc
pop
push
xchg
xchg
out
and
xor
fwait
mov
gs
mov
push
fdivrl
dec
mov
adc
pop
enter
xchg
sub
cld
mov
cwtl
dec
into
test
dec
test
lret
lret
call
sbb
in
xchg
push
inc
mov
lret
mov
sbbl
inc
lret
push
enter
jb
fiadds
and
jle
frstor
sarl
sbb
mov
out
movsb
add
adc
sbb
ja
rcl
addr16
xchg
fs
dec
inc
ss
aad
outsb
rcr
sub
push
push
fsubrl
shll
inc
ja
ja
out
xor
adc
pop
mov
pop
shrl
mov
xchg
fisubrl
insb
aad
mul
mov
dec
pop
pusha
push
mov
int3
out
inc
fldt
adc
hlt
movsw
mov
stos
jae
mov
mov
push
out
mov
pop
add
xor
fistpll
and
mov
mov
and
sti
and
sub
xchg
jnp
in
jnp
in
ret
enter
ljmp
test
add
jmp
cmp
push
pop
cli
scas
popa
ss
xchg
pusha
shl
jne
xchg
mov
int3
cld
jb
jb
dec
test
fisttpll
loop
or
orb
out
xor
push
lahf
inc
dec
xchg
mov
sub
fcoms
mov
mov
stos
arpl
in
rorb
jae
rolb
aad
movsb
cs
lods
scas
mov
daa
sar
pop
xorl
sbb
lret
mov
iret
pop
fcomps
mov
sbb
and
push
mov
int
jno
mov
sahf
fwait
scas
push
aaa
cmp
cmp
pop
imul
jl
addr16
fisttps
fisttps
mov
aam
push
scas
movsb
outsl
jge
mov
dec
daa
popf
cmpsb
push
std
repz
test
dec
out
and
mov
pop
gs
out
das
mov
cmpsl
repnz
roll
push
call
inc
and
jecxz
lods
roll
cmpsb
pop
shll
test
mov
pushw
mov
fs
xchg
int
fistl
mov
sub
inc
fisubl
repnz
nop
pop
fcompl
nop
lahf
repnz
ds
cmc
jae
push
es
xchg
cmp
or
ja
sbbl
call
ror
and
adc
imul
xor
repz
aad
lret
call
lcall
ja
stos
add
incb
in
ret
outsl
fistpl
jnp
enter
add
jmp
xor
mov
sbb
xchg
mov
mov
xchg
mov
inc
xor
mov
fs
dec
lods
and
add
mov
icebp
sub
fisttpl
clc
pop
adc
dec
out
loope
xchg
pop
pop
call
jbe
nop
or
das
lcall
cmp
add
imul
loope
push
mov
shll
inc
push
push
xchg
pop
stc
jb
mov
xchg
iret
sub
and
aam
js
jge
fistpl
mov
fs
and
mov
nop
inc
mov
mov
pop
cltd
sbb
pop
ja
cmpsl
fcmovnb
bound
add
mov
cmc
sbb
inc
movsb
ds
fstpt
or
add
in
xchg
shl
mov
mov
mov
movsl
push
adc
push
das
popf
push
sbb
wbinvd
mov
cmp
sub
xor
mov
mov
cmp
or
fwait
divl
mov
outsl
fwait
mov
sub
out
jns
inc
lds
push
cmpsl
popa
cmp
mov
and
bound
jle
shrl
rorl
paddw
mov
test
cwtl
inc
lcall
xchg
sub
cmp
test
jnp
jno
sbb
imul
pop
test
pop
mov
jecxz
leave
inc
mov
add
movsb
push
leave
push
sbb
push
ret
rol
pushf
gs
sarb
ss
mov
and
mov
push
mov
test
aam
cmp
xchg
mov
add
fisubrl
lret
out
je
jl
adc
in
jmp
cwtl
iret
xchg
mov
push
adc
or
jbe
je
imul
sti
or
sahf
std
or
cmp
pop
mov
lea
mov
int
ja
add
scas
xchg
jbe
xor
mov
push
insl
and
aaa
rorb
jae
imul
fwait
xor
push
repnz
mov
rcl
xor
mov
scas
pop
loope
ljmp
stos
fnstenv
xor
or
xor
inc
mov
push
pop
cmp
outsb
inc
imul
inc
arpl
push
daa
inc
inc
xor
call
inc
cs
mov
push
jge
push
out
pop
dec
xchg
sbb
dec
imul
jp
cmpsl
jno
or
cmp
movsb
jno
out
pushf
add
pop
jg
lea
ret
loop
test
aaa
cwtl
inc
adc
mov
push
sbb
shll
out
icebp
dec
leave
xor
stos
lret
cltd
cmc
lods
cld
inc
dec
add
pop
push
cld
js
jns
je
mov
ret
pop
and
adcb
call
and
adcb
add
aam
mull
aam
cmp
into
fcoml
xchg
push
popf
add
repnz
sbb
fdivrs
lret
xor
out
dec
ljmp
insl
xchg
roll
enter
pop
cltd
sub
push
js
mov
adc
xchg
push
mov
and
mov
sub
mov
add
ljmp
add
cmp
inc
lods
into
popf
push
xor
dec
push
scas
pusha
mov
lods
clc
sub
cmp
outsb
xchg
pop
and
nop
shrl
inc
add
and
inc
in
out
sub
pushf
and
sti
stos
jns
in
sahf
leave
push
push
cltd
add
xor
imul
sbb
adc
dec
mov
mov
jo
jo
adc
and
jns
mov
into
mov
test
push
pop
jmp
dec
out
push
pop
shrb
dec
test
xchg
xchg
xchg
fstl
cmp
call
out
movsl
push
sahf
sbb
push
jle
out
js,pt
notb
subl
xchg
test
cmpsb
or
imul
aam
mov
pop
mov
aam
add
jmp
push
icebp
adc
mov
cmpsb
xchg
lock
pop
adc
xchg
ret
inc
ds
sbb
cmc
sahf
popf
js
aad
xchg
cwtl
inc
sti
inc
imul
xchg
push
mov
int
data16
repnz
fdivs
dec
movsb
add
shll
lds
icebp
lret
fcmovnu
cld
add
dec
or
divb
cli
pop
imul
mov
mov
pop
je
jecxz
in
sub
lods
mov
and
jo
adcb
fidivrl
lea
cltd
mov
es
bound
mov
out
adc
xchg
dec
int
cmpb
push
sub
and
addr16
lock
fstpl
sbb
roll
std
shll
add
inc
and
sub
or
sub
xorb
push
cmpsb
int3
adc
ret
jmp
xlat
push
ret
jmp
aad
push
cs
xchg
adc
dec
pop
and
mov
call
xchg
xchg
cld
or
pop
xchg
push
das
dec
push
and
lds
add
repnz
and
xor
xlat
inc
js
xchg
and
and
fwait
out
push
inc
mov
lods
repz
imul
jne
insb
aas
loop
jge
divb
lds
sub
loope
out
sbb
lods
std
mov
cmp
into
lret
fidivs
loope
push
sbb
jle
cmp
push
in
lea
in
xchg
xchg
xchg
cmp
jae
push
pop
push
das
mov
sub
or
mov
dec
sahf
test
adc
icebp
dec
into
in
jp
push
xor
cs
test
fdivs
push
test
dec
cs
jmp
das
loopne
cmp
mov
inc
adc
xlat
fistl
and
mov
movsb
xchg
dec
cltd
pop
aad
cltd
cmp
ds
dec
cmp
sti
dec
int3
es
jge
add
int3
stc
mov
ret
es
andb
mov
xlat
in
jne
push
and
divb
cmp
sbb
xchg
mov
mov
lret
mov
cmp
xor
inc
into
mov
pop
shl
inc
xlat
or
dec
dec
xor
ja
aad
cmc
cmp
shr
lods
jg
sbb
sub
and
sub
sub
sarl
fstl
sub
jno
sub
int
ds
lret
push
dec
jle
sub
mov
xor
jge
xor
cli
sarl
loopne
sub
and
push
repz
sbb
adc
xchg
xchg
dec
jge
or
dec
ja
push
jmp
xlat
push
add
inc
int3
insl
push
pop
aas
and
jbe
ss
ljmp
mov
sub
mov
push
mov
push
mov
lea
imul
iret
mov
das
test
aad
int
inc
add
cmp
dec
pop
stos
test
pop
dec
cltd
aad
or
sahf
xchg
jbe
or
xchg
cmp
mov
into
or
addb
xor
xor
xchg
rcrb
xorl
roll
and
icebp
jb
pop
add
mov
in
std
and
pop
stc
mov
out
xchg
dec
loope
fmuls
jl
movsb
jp
jg
imul
dec
test
jb
enter
sub
xor
sti
fwait
hlt
movsb
jbe
add
ja
sub
inc
push
out
mov
sub
xchg
cmpsb
ret
dec
shrb
iret
repz
sub
mov
mov
xor
pop
xchg
sub
jg
mov
push
push
jne
adc
loopne
jno
add
xchg
shll
mov
sahf
jns
imul
or
mov
cmp
lret
movsb
imul
movsl
add
out
fildl
fcom
pop
lods
add
mov
in
jns
mov
iret
mov
out
shll
in
pusha
outsb
scas
ds
xchg
mov
movsl
test
es
pop
and
and
pop
xchg
jbe
fdivrl
jecxz
push
mov
push
push
enter
xorl
fwait
mov
push
dec
cmpsl
shrl
mov
push
cltd
push
or
and
or
mov
jne
test
ficomps
into
and
imul
add
sub
pusha
sbb
mov
cmp
mov
call
sub
xchg
sbb
xchg
lock
arpl
pop
xor
jns
arpl
or
jmp
lea
loope
gs
std
or
movsl
or
arpl
cmp
call
mov
jl
inc
cmp
inc
cwtl
sub
jl
loop
arpl
loopne
sbb
xchg
xchg
jge
sbb
inc
or
push
mov
popa
cmp
loop
dec
add
leave
mov
mov
int3
mov
jb
push
imul
repnz
xchg
or
out
and
inc
stc
adc
inc
pushf
mov
out
popf
lds
push
aas
int
mov
nop
mov
lds
fsubl
roll
sub
or
clc
out
ss
sbb
aad
sbb
lds
cmp
inc
bound
xor
lods
sub
insl
icebp
divl
sub
stos
fs
scas
xchg
insb
push
cld
out
loope
push
mov
pop
test
pop
mov
fdivrl
fisttpl
ja
imul
push
icebp
sbb
fistps
jge
jbe
and
add
mov
jae
jbe
stos
ficompl
ljmp
adc
cmc
push
mov
out
sbb
xchg
mov
dec
add
popf
fdiv
jo
rclb
sar
cltd
sub
lock
ljmp
sbb
xchg
dec
movsb
xor
or
mov
lcall
in
hlt
mov
leave
adc
divb
pushf
mov
mov
push
jl
or
test
in
push
jnp
insb
dec
int
inc
lcall
movups
push
inc
mov
fisttpll
loopne
mov
cmp
adc
push
in
arpl
cmp
outsl
aad
mov
adc
hlt
push
outsl
xchg
jnp
and
jmp
pop
push
sub
add
jno
ja
xor
int3
sti
cmpl
add
push
and
push
cli
addb
adc
xchg
jecxz
cmpsb
aas
and
clc
sub
pop
in
movsb
aam
and
jecxz
mov
and
int3
shlb
push
add
cmpb
mov
push
mov
mov
rolb
sbb
int
sbb
test
cmc
inc
in
rcll
jbe
and
fists
jl
aaa
pop
inc
lods
insb
pop
jo
jle
or
sub
cmpsb
dec
pop
mov
sub
jmp
fdiv
imul
fisttpll
push
mov
inc
xor
mov
mov
jmp
add
cmp
iret
push
lds
lods
dec
adc
jg
or
movsb
cli
sarb
xor
xchg
sub
imul
inc
sbb
lds
pop
sbb
sbb
ret
xchg
fsubl
insl
adc
xchg
cwtl
divl
pop
mov
dec
mov
lods
push
mov
mov
pushl
lds
add
sti
adc
xchg
mov
sarb
adc
lods
int
sahf
int3
inc
inc
faddp
out
xor
add
out
dec
sbb
shlb
xchg
jmp
mov
sub
mov
mov
cmp
push
icebp
adc
sahf
shll
sbb
test
aas
dec
adc
pop
outsb
jg
mov
lcall
nop
dec
pop
sbb
jo
loop
and
xchg
pop
adc
pusha
mov
adc
xor
mov
push
push
xlat
adc
ds
in
xor
mov
das
rorb
mov
cltd
add
ret
xlat
nop
pop
inc
sbb
leave
push
aas
loop
aaa
je
jne
mov
pop
test
cmp
push
push
sbb
cmp
arpl
ds
jne
push
mov
loope
pop
fsubr
stos
push
jb
pop
lret
fidivs
pushf
xchg
cmp
imul
push
add
std
out
aas
loopne
dec
test
imul
push
push
xor
divl
fwait
or
stc
shrw
xchg
je
mov
pop
dec
or
cmp
sub
pop
lds
repz
shrb
pop
lret
cmpsb
mov
and
enter
int
sub
outsl
add
mov
pop
jecxz
fisubrl
inc
mov
icebp
mov
sbb
data16
xor
nop
fstp
dec
jne
stos
xchg
inc
xor
jmp
ficomps
or
sbb
adc
loope
lock
mov
or
jp
inc
iret
cmc
mov
xor
mov
in
push
bnd
push
inc
sbb
fisubs
movsl
leave
test
pop
movb
sbb
fldenv
mov
imul
std
shll
mov
push
xchg
ljmp
xchg
sub
push
shl
or
das
test
dec
sarb
aad
add
adc
xor
notb
or
mov
leave
and
fdivl
in
push
out
xchg
push
clc
es
sub
cld
xchg
jle
xor
add
decl
test
popl
imul
sbb
add
mov
jecxz
sarl
dec
incl
je
push
jl
sahf
int
popf
mov
int
jecxz
shl
lahf
lea
outsl
ret
mov
stos
loopne
mov
and
popa
outsb
ret
xor
push
dec
faddp
mov
xor
inc
dec
add
pop
out
jno
adc
mov
jl
call
pop
in
lret
mov
dec
lea
mov
and
out
leave
in
pop
popf
repz
mov
dec
insb
mov
adc
jp
push
jae
enter
mull
std
hlt
aas
xchg
lea
repnz
je
adc
pop
rcr
pop
xor
lcall
bound
sub
cltd
mov
ret
push
popf
lock
pop
dec
xor
in
sbb
mov
jae
insl
mov
dec
inc
dec
es
je
fs
inc
hlt
inc
inc
lret
js
cli
addr16
lret
add
dec
adc
popf
mov
push
hlt
inc
push
and
jmp
xchg
leave
cmp
push
sarb
xchg
in
and
pop
shrl
mov
xchg
mov
add
lods
fimuls
or
mov
mov
lcall
mov
jbe
pop
push
push
fisubs
jg
mov
jo
or
cmc
sbb
cmpsl
inc
inc
sbb
fldl
jne
add
xor
test
ret
cmp
ret
jo
mov
lret
push
mov
lret
cwtl
sahf
cmpsl
lret
inc
out
sub
sub
xlat
jne
insb
adc
popf
cmp
mov
jmp
add
ds
lea
cmpsb
push
and
push
xor
jmp
adcl
xor
xchg
pusha
les
in
mov
cs
aam
call
mov
mov
mov
rcll
sbb
xchg
cmp
adc
sahf
push
andl
dec
std
push
adc
dec
sbb
aam
xchg
lret
jg
xor
cltd
and
ja
mov
test
int
or
mov
jae
add
aaa
insl
ret
jno
sub
cmp
iret
sbb
mov
inc
imul
adc
xchg
sub
out
and
inc
and
faddl
cld
lcall
mov
pop
mov
lcall
test
mov
push
nop
xchg
xchg
ljmp
pushf
sbb
adc
xchg
cmp
hlt
aaa
or
pop
out
das
xlat
mov
mov
mov
or
cmp
mov
data16
cmp
mov
negb
cli
aam
push
xor
mov
loopne
mov
push
fs
and
shlb
sarl
add
scas
cmp
test
lret
xchg
push
push
gs
addr16
popf
push
cmpsb
adc
out
fadds
xchg
dec
add
in
mov
xchg
adc
fwait
cmp
mov
jmp
inc
xchg
or
jecxz
mov
mov
xor
push
sbb
ret
inc
or
cld
imul
sub
push
jle
dec
pop
xchg
pop
in
jge
pop
fs
mov
add
sbb
scas
cmp
dec
mov
aad
loope
imul
clc
xor
add
pop
pop
sub
and
dec
scas
test
push
adc
mov
and
xorb
pop
dec
fadds
daa
iret
repz
dec
aaa
dec
pushf
mov
push
xchg
sub
daa
adc
lods
lds
sbb
pop
sub
mov
mov
cmp
jb
cmp
cmpsb
fildll
pop
sub
iret
cmp
stc
mov
dec
mov
mov
cs
jne
jecxz
mov
fidivl
imul
push
jo
ret
int3
cli
pmaxsw
pushf
jle
sbb
mov
xorb
fwait
jno
jp
adc
mov
loopne
mov
outsl
addl
inc
lret
add
xchg
pop
mov
mov
pop
movsl
nop
test
gs
dec
in
xor
lret
fnstsw
out
test
xchg
jno
inc
in
push
ljmp
shlb
mov
add
xor
jae
mov
jmp
lods
cwtl
add
es
icebp
fsub
imul
sub
cltd
pop
cmpsl
mov
jae
mov
rcrl
js
aaa
loop
movsl
sbb
xchg
add
sarb
sub
sub
mov
or
push
mov
aam
rolb
mov
or
cmp
jbe
fidivl
cmp
jns
ds
and
mov
mov
mov
mov
jno
adc
in
mov
lods
cmp
loope
jmp
mov
fimull
mov
mov
in
fwait
pop
mov
push
mov
fs
xor
fdivrl
sbb
pop
cmp
xor
enter
jo
xchg
push
add
aam
fidivl
cli
xchg
cmp
cmp
clc
mov
mov
jge
inc
mov
mov
andl
subb
addr16
sbb
out
jg
in
arpl
cli
cmp
dec
cmp
in
xchg
cmp
mov
cmpsb
adc
jnp
mov
adc
cs
jbe
rol
test
addr16
cmp
add
mov
or
cmpsl
ja
jge
mov
lods
xchg
push
ljmp
fs
fwait
dec
std
fisttpl
lods
lods
outsl
stc
xchg
or
hlt
jno
mov
out
adc
int
mov
pop
imul
outsb
mov
jbe
cmp
or
and
stos
jmp
jmp
cmpsb
arpl
stos
rcrb
jne
jg
pop
adc
or
packssdw
push
das
aam
mov
mov
in
test
cmp
and
pop
sahf
leave
out
dec
jmp
dec
push
lods
movsl
loope
mov
gs
mov
cmp
or
addb
int3
imul
pop
popf
sbb
dec
inc
jmp
mov
fucomi
jns
cmpsb
sub
dec
mov
push
aas
mov
test
hlt
jo
ljmp
mov
lcall
imul
pop
je
test
fs
adc
adc
add
jb
sarb
das
inc
mov
sub
aad
pop
pop
mov
cmp
das
loope
cmp
pop
mov
ss
mov
dec
or
jecxz
mov
ret
in
aas
mov
notl
jle
pop
jae
cld
inc
fmull
push
sarl
lock
shrb
pop
add
sub
loop
pop
or
adc
cmp
add
rcpps
xor
mov
mov
call
add
cmp
mov
xor
icebp
into
jge
or
inc
incl
out
ja
fdivrp
into
in
xor
add
lock
mov
lret
mov
fisttps
shlb
xchg
push
movsb
ret
icebp
xchg
test
out
sub
in
or
sub
sbb
shrl
jno
mov
test
mov
stos
repz
pop
cmp
movsl
and
jb
sbb
rolb
cli
es
fwait
jecxz
sub
ljmp
ret
fists
add
push
fadd
adc
mov
psraw
sti
and
test
jb
and
mov
inc
xchg
cmp
dec
rcr
pop
pop
pop
in
mov
jo
inc
dec
push
aam
add
mov
das
popa
aaa
jns
in
aas
lock
cli
arpl
mov
outsb
cwtl
cmp
notb
xor
cmp
cmp
mov
ret
clc
clc
lods
jmp
nop
int
push
dec
pop
frstor
in
clc
mov
jg
mov
adc
xor
inc
les
xor
insb
cwtl
xor
or
push
dec
pop
in
into
scas
sub
inc
xchg
lcall
out
lcall
jmp
mov
das
out
loopne
popf
in
push
fsubl
jg
push
in
roll
mov
in
fs
shll
fstpt
dec
scas
out
push
inc
pop
fistl
hlt
popa
adc
insb
cld
scas
loop
mov
std
push
sarl
mov
sub
push
in
fwait
data16
aaa
rol
jns
out
jecxz
mov
mov
jle
outsl
push
lds
cltd
adc
dec
orb
cmpsb
pop
scas
inc
and
sbb
add
and
stos
outsl
pop
cltd
repz
movaps
cmp
mov
sbb
clc
mov
mov
xor
into
dec
xor
pop
mov
and
sub
and
adc
pusha
dec
xchg
sarb
pushf
out
imul
fwait
outsb
pop
test
pop
xor
cmp
enter
mov
loop
cmp
jbe
es
pop
out
adc
xchg
fmuls
enter
push
into
mov
or
sbb
insb
jo
jb,pt
ret
or
popa
in
shl
daa
fucomp
movsb
adc
xor
lret
inc
inc
fwait
inc
stos
xchg
std
inc
rcll
inc
lret
or
sarb
popaw
adc
sbb
mov
lahf
sti
xchg
jg,pn
pop
stos
inc
bswap
sub
xor
adc
aaa
negl
or
jl
sbb
daa
into
mov
test
adc
inc
sub
std
dec
xor
incb
ljmp
in
insb
pop
testl
cltd
push
xor
dec
jnp
test
pop
cwtl
adc
test
insb
stos
clc
adc
ret
ja
or
xor
aaa
test
into
std
pop
fcoml
enter
dec
inc
lahf
shll
cmpsl
addr16
and
add
lods
aad
add
ret
dec
out
sub
mov
hlt
mov
mov
adc
ds
push
das
shl
jecxz
mov
cltd
jle
jmp
xchg
in
mov
or
cmp
arpl
es
dec
xchg
lea
add
or
mov
xchg
cmp
dec
sub
inc
push
cwtl
or
rolb
push
inc
jbe
push
adc
mov
negl
adc
sub
and
fstp
add
push
jo
push
out
cltd
iret
pop
imul
cmp
inc
test
or
push
sub
add
or
daa
jbe
iret
or
and
in
cli
mov
test
enter
decl
sbb
shl
clc
jns
iret
sbbb
add
xchg
mov
out
jnp
cmp
sbb
ja
add
and
jle
mov
pop
shl
inc
and
sahf
lea
push
inc
inc
pop
dec
cwtl
je
push
pushl
fsubl
test
roll
cmp
xchg
fisttpll
aam
jecxz
call
add
das
lds
mov
jb
push
dec
gs
mov
nop
jns
dec
adcb
fwait
jge
xchg
pop
mov
out
mov
dec
cltd
outsl
shlb
cmp
sti
idivl
cli
jle
add
cmpl
es
mov
lret
mov
inc
mov
sub
xchg
sbb
or
dec
fistpll
xor
mov
wbinvd
lea
mov
in
jg
sbb
add
imul
addr16
aas
xor
mov
scas
aaa
sahf
mov
xchg
in
mov
cmpsl
scas
pop
push
popa
mov
or
outsb
imul
adc
cwtl
lret
pop
and
fcomip
ds
inc
adc
call
aam
jge
mov
imul
clc
mov
movsb
sbb
roll
lea
adc
cmpsb
inc
bound
inc
dec
xchg
mov
mov
mov
sub
push
sahf
dec
pop
fisubs
xchg
pop
adc
and
movsl
in
mov
mov
jnp
rorl
lds
lods
xor
sbb
push
fs
push
lret
add
sbb
sbb
add
sbb
add
dec
push
jle
and
shrl
adc
in
xor
pop
mov
enter
ss
pop
and
dec
add
aaa
xchg
lret
and
clc
shrb
mov
sbb
push
aam
test
mov
or
push
rclb
scas
fcoms
xor
push
je
movsl
cmp
nop
jmp
mov
lock
xchg
mov
clc
or
dec
xor
out
dec
decb
inc
inc
xchg
lock
sbb
jge
jne
test
mov
push
pop
inc
pop
cld
cmp
mov
std
mov
ljmp
daa
push
pusha
mov
cmp
add
lods
and
mov
in
icebp
divl
aaa
inc
mov
mov
cld
rcll
sub
sbb
mov
cmp
push
mov
dec
mov
xlat
dec
sub
fsubrs
adcl
add
dec
test
fnstcw
dec
scas
xchg
inc
jno
add
push
push
repnz
mov
arpl
cmpsl
push
sbb
dec
fwait
and
dec
jle
imul
push
stos
int
rcl
sbb
or
ret
adc
jmp
and
or
mov
ss
test
dec
test
add
lods
and
outsb
push
cwtl
inc
xchg
enter
lods
push
xchg
add
dec
mov
in
lret
ljmp
cli
push
sub
dec
sbb
loope
push
push
push
test
ja
mov
push
cmpsb
cmp
pop
cmpsb
hlt
add
inc
mov
ret
popa
mov
popf
pushl
dec
adc
pop
jmp
jp
fcomps
pop
push
dec
dec
in
cmpsb
pop
jmp
fnstsw
adc
jl
aad
cli
data16
call
aam
mulb
shrl
inc
shr
outsb
int3
or
xor
jb
fistps
lock
push
mov
stos
cwtl
dec
cmp
fsubl
or
fldt
and
pop
xchg
cmp
mov
out
adc
sub
stos
notl
push
xchg
sbb
mov
fs
negb
repz
lods
fwait
aam
xor
cwtl
fisubrl
js
arpl
out
iret
or
cld
inc
push
fistps
lahf
in
popa
xor
or
in
in
sar
into
push
test
xor
adc
and
testb
outsb
mov
push
adc
fsts
jecxz
mov
ss
orb
repz
push
fdivrl
pusha
into
mulb
pop
xor
repnz
sbb
jno
stc
je
and
sbb
sarb
cli
roll
mov
aaa
inc
lret
in
xchg
fs
test
xchg
inc
jno
dec
xor
add
xchg
cmp
cmp
out
push
roll
mov
in
jmp
cmp
push
sub
dec
sbb
gs
psubb
mov
xchg
or
sbbl
or
jne
pusha
insl
data16
and
mov
jae
jecxz
mov
mov
das
sti
adc
stos
mov
sub
insb
hlt
lds
lock
mov
scas
mov
sub
ljmp
push
sbb
out
insl
pop
inc
lahf
push
inc
sbb
sbb
pop
data16
push
cli
mov
lret
inc
cmpsl
gs
jmp
inc
and
mov
lret
rclb
inc
gs
fstps
mov
iret
jecxz
and
sbb
mov
in
daa
push
cmp
aas
inc
jg
cs
or
dec
hlt
mov
inc
push
es
adc
jne
bound
sbbl
scas
jns
inc
call
add
sbb
addr16
xchg
loop
fsub
jb
adc
inc
fiaddl
jg
out
adc
shll
and
imul
sbb
xor
and
jp
loope
cmp
add
out
cld
push
mov
shl
mov
sbb
sti
out
and
cmp
aas
imul
ds
fbstp
cld
imul
shrb
dec
data16
fidivl
in
mov
shll
imul
dec
jmp
insl
std
jo
mov
leave
popa
in
pop
in
enter
mov
lret
loop
sub
jl
out
pop
mov
test
add
sbb
std
ficomps
jl
push
ja
aam
andb
pop
xchg
add
pop
xchg
fs
pusha
push
daa
jl
shl
or
daa
aaa
shlb
aaa
fbstp
loop
in
jne
and
stos
in
mov
mov
aas
outsl
mov
lds
fiaddl
xor
jno
sbbl
imul
fcompl
mov
loop
sub
sub
ficompl
xor
and
frstpm(287
push
fists
daa
xchg
jne
sbb
dec
xchg
mov
inc
cmp
push
lock
xchg
jp
popa
sbb
mov
les
fnsave
push
out
stos
xor
xlat
test
shrl
dec
push
insl
push
into
push
adc
aas
mov
add
in
addr16
dec
dec
daa
ret
pop
or
dec
aaa
ja
xchg
inc
mov
mov
xchg
push
sbb
lds
sub
testb
insb
mov
mov
aad
sub
lcall
mov
es
imul
jnp
incl
pop
div
sub
imul
in
add
xchg
imul
xchg
sti
pop
fistps
arpl
js
add
loopne
orl
stc
mov
sub
into
cmp
adc
fisttps
jo
in
cmp
dec
push
xchg
mov
test
mov
pop
inc
popf
xchg
arpl
xor
xor
rorb
ret
jbe
arpl
test
sub
das
pushf
or
jge
fmul
out
or
or
data16
mov
jne
xchg
test
not
test
mov
sti
adc
pop
clc
xchg
ret
mov
jg
stos
cmp
mov
iret
rcrb
dec
pop
in
pop
pop
cli
dec
out
xor
in
jbe
inc
js
adc
arpl
sub
mov
xor
jnp
ret
lods
or
mov
jae
xlat
int
cmp
pop
xchg
addl
in
pop
aaa
jmp
dec
and
mov
fcompl
jbe
push
pop
addr16
mov
cli
mov
aad
fisttpll
or
adc
loop
xchg
jae
adc
mov
xor
lea
insl
or
pop
push
into
insb
das
add
sbb
xchg
dec
dec
les
inc
testb
popf
mov
scas
sahf
cmpsl
adc
sarb
pop
or
cs
and
jo
jle
or
jle
jne
sti
mov
sbb
int
mov
pushf
out
mov
data16
das
or
enter
mov
loope
stc
mov
xor
shl
mov
pop
loopne
xchg
mov
adc
xor
cmp
into
mov
fsubp
cmp
stc
jecxz
scas
mov
loopne
scas
fcoml
out
loop
leave
adc
jne
pop
ffree
and
dec
jbe
dec
mov
xchg
imull
js
outsl
and
sbb
adc
push
loop
addr16
push
std
mov
lods
sbb
in
dec
mov
jg
std
adc
mov
xchg
mov
xor
xchg
and
push
cwtl
push
add
negb
lret
mov
testb
sahf
das
fstps
jge
insb
inc
xchg
cmc
jp
lock
roll
shl
dec
pop
mov
test
cmp
sbb
test
jp,pt
push
hlt
stc
jbe
ja
insl
ja
sbb
push
mov
scas
cwtl
sahf
fadds
arpl
call
pop
mov
mov
mov
nop
fs
fstps
lcall
stc
dec
sbb
fwait
test
aas
movsb
outsb
leave
mov
add
xchg
or
jp
xchg
pop
add
stos
les
sbb
sub
nop
insl
movsl
sbb
xor
cmp
es
sub
arpl
or
daa
pop
xchg
jno
mov
mov
push
lods
cltd
imul
enter
inc
or
