sbb
add
mov
dec
test
les
dec
unpcklps
sub
scas
push
mov
and
add
loopne
cmp
into
mov
mov
mov
pop
sub
shlb
mov
sub
xchg
push
jae
xchg
je
ret
daa
repnz
mov
imul
xchg
mov
and
pop
ficomps
ret
pop
ja
mov
push
or
or
aas
test
ds
cmpl
cmp
sub
icebp
icebp
mov
scas
jae
sarl
aam
mov
cld
add
cmp
stos
mov
or
mov
lea
push
xchg
xor
lcall
push
dec
roll
xchg
sub
cs
imul
insb
or
les
int3
xor
jno
jo
pop
outsb
jmp
jne
and
test
mov
mov
pop
sarl
jecxz
add
lea
fsts
push
insb
cs
mov
aad
addr16
imul
int
jne
cmpb
fwait
jecxz
pop
cmp
in
pop
mov
xor
shll
mov
fsubp
xor
inc
mov
fucomip
lock
ror
fnop
imul
iret
nop
push
cltd
jno
imul
jmp
xlat
mov
nop
jecxz
push
hlt
cs
cmp
into
js
xchg
jge
adc
push
jns
imul
jo
lcall
pusha
push
cmc
je
sbb
out
andb
mov
mov
js
cmp
push
aad
mov
cli
loop
adc
out
in
push
jmp
push
xor
rcrl
call
xchg
adc
push
data16
cmpsl
mov
repnz
pop
sub
addl
lahf
push
daa
xchg
jmp
loope
jb
dec
sub
mov
arpl
fcmovb
jl
adc
cmp
mov
lock
pusha
in
fidivl
testl
pop
aam
stos
and
inc
ret
imul
outsl
imul
dec
jecxz
out
lret
mov
pushf
pop
ret
pop
push
lahf
inc
iret
sub
xchg
jl
aaa
aaa
adc
testl
sbb
pop
mov
sbb
mov
or
xchg
xor
mov
aaa
push
adc
dec
sbb
push
scas
mov
sar
pop
jp
imul
adc
mov
repnz
jl
jle
cmp
xlat
pop
rol
pop
lods
int
adc
adc
fsubrl
jbe
ret
dec
fidivrs
daa
loope
xchg
mov
inc
mov
in
mov
sub
lret
in
inc
addb
mov
mov
and
andb
imul
mov
imul
cmpsb
in
sbb
push
fidivs
mov
negl
fidivs
adc
or
mov
cmp
dec
cmc
jbe
loopne
and
and
movsb
aam
aas
push
sbb
leave
mov
mov
inc
sti
push
xlat
pop
daa
or
sarl
std
add
inc
sub
int
mov
ret
mov
jo
add
aam
dec
rorb
sub
cld
aaa
loop
xor
mov
inc
scas
sbb
or
nop
fiadds
cli
frndint
imulb
into
and
sti
ljmp
inc
loop
push
cmpsl
or
mov
fidivrl
aad
stos
mov
mov
cwtl
or
enter
dec
mov
or
pushf
or
sti
icebp
push
dec
das
push
fstp
pushf
and
inc
adc
xor
dec
adc
cmp
test
sbb
sub
popa
loop
ret
lret
mov
xchg
idiv
ficoms
add
sahf
dec
test
lods
int3
cs
nop
mov
fs
push
add
adcb
stos
inc
ss
aad
inc
push
mov
push
cmpsl
push
out
gs
enter
inc
iret
sbb
inc
lcall
insb
cmp
xchg
movsb
pop
pop
js
xchg
xor
add
loope
xchg
xchg
pop
jg
push
sub
fnsave
cmp
jmp
cmp
sbb
lods
dec
xor
jge
jno
mov
lock
jo
mov
lret
xor
push
nop
or
sub
mov
xchg
mov
out
rcll
pop
push
xchg
in
lret
sub
in
xor
popf
ja
push
add
adc
lret
imul
pop
inc
cmc
jl
lcall
lahf
jns
mov
fwait
mov
fimuls
dec
dec
cmp
mov
dec
pop
jmp
test
aaa
popa
mov
sbb
add
push
push
add
lock
lods
scas
out
sbb
jge
inc
cld
out
out
popa
fsubl
std
scas
movsl
cld
inc
push
mov
dec
es
out
in
fs
push
aas
pop
sbb
or
push
inc
inc
cld
std
sbb
dec
dec
fadds
mov
dec
popf
sub
in
cmp
fisttps
aad
push
inc
outsl
mov
aaa
jo
mov
rcll
xchg
gs
adc
add
mov
fidivl
in
dec
pusha
jg
xchg
loope
out
mov
push
dec
mov
sbb
ret
and
cltd
in
mov
loop
dec
sub
cli
mov
cmpsl
xchg
pushf
sbb
stc
jno
scas
xor
subl
cmpsl
mov
xchg
fnstenv
xor
mov
or
jecxz
xchg
hlt
jle
loop
sbb
xorb
clc
mov
jg
cmp
xchg
aad
std
jmp
dec
int3
xor
push
insl
jno
sub
lea
xchg
stos
dec
inc
test
insl
sub
mov
lods
push
mov
push
sbb
inc
mov
pop
loope
jp
xchg
pop
fidivrs
das
pop
pushf
aam
out
xorl
cmpsl
outsl
xchg
lds
cltd
ja
pushl
ret
insb
cwtl
xchg
and
test
sbb
imul
inc
ja
lcall
out
mov
movsl
gs
enter
mov
mov
lret
push
mov
inc
push
jecxz
dec
pop
mov
jbe
mov
mov
sbb
inc
loopne
push
hlt
clc
ficomps
out
jnp
loopne
sbb
rcll
cltd
cmpsl
cs
inc
stos
pop
inc
mov
sub
out
repnz
je
pop
insb
es
xor
pop
mov
popa
sub
mov
inc
jb
pop
cmpsl
adc
pop
or
mov
sbb
in
dec
fdivs
es
lcall
movsb
shrb
sbb
adcb
pop
jns
aaa
lcall
cmp
push
dec
and
dec
jecxz
sbb
sub
aam
imul
es
xlat
dec
mov
cwtl
and
pop
rcrl
or
xor
xor
jmp
nop
pop
test
xchg
mov
shrl
insl
push
imul
xor
icebp
cltd
cli
mov
adc
or
addr16
push
mov
jnp
xchg
mov
icebp
lods
xchg
psubsw
mov
aad
movaps
cmp
mov
push
pop
js
sub
inc
popa
aam
enter
jnp
aaa
outsl
fldcw
mov
lods
dec
rol
test
dec
xchg
out
sbb
fwait
cwtl
add
daa
lds
cmc
mov
cwtl
sbb
scas
rorl
xchg
mov
cmc
xor
test
and
mov
adc
mov
bound
xchg
jge
jb
xchg
cs
aas
jb
iret
imul
insb
mov
push
mov
ljmp
xchg
xchg
aad
imul
jne
stos
lret
arpl
xlat
seto
repnz
loope
shll
push
and
add
imul
pushf
push
sbb
xor
inc
test
loopne
adc
icebp
mov
mov
and
xor
mov
dec
adc
mov
mov
mov
sbb
in
sub
add
dec
nop
fldcw
sbb
ret
sbb
adc
fsubrp
adc
lods
mov
std
gs
inc
stos
icebp
push
fimull
cmpsb
out
into
subb
and
push
xchg
gs
mov
inc
imul
mov
hlt
out
outsl
mov
push
sub
hlt
testl
mov
xchg
dec
stos
sub
addr16
lahf
cmp
stc
divl
pop
xor
cmp
gs
mov
aam
sbb
ret
in
fdivrp
pop
int3
scas
pop
adc
mov
dec
out
and
imulb
sbb
cmpsl
and
jp
mov
sbb
adc
dec
sub
pushw
mov
data16
xchg
sbb
imul
inc
insb
xchg
and
push
dec
inc
xchg
bound
cmp
cli
jmp
adcl
sbb
testl
push
into
and
add
push
mov
xchg
clc
pop
popa
mov
sbb
cmp
orb
jb
dec
mov
jno
faddl
and
cmp
pop
es
xchg
lods
xor
push
jge
xchg
cmp
xor
stc
adc
enter
sbb
pusha
adc
mov
jo
arpl
clc
mov
cmp
xor
lea
xchg
call
xor
es
nop
insl
xor
cmc
mov
dec
dec
pop
dec
dec
xor
enter
sub
push
mov
jmp
push
das
pop
movsb
sahf
mov
push
int
push
outsl
push
ja
in
dec
push
inc
mov
fimull
push
mov
mov
jp
adc
js
lret
gs
or
mov
leave
cmpsb
stos
shrb
inc
pop
or
jmp
outsl
addr16
out
add
add
and
mov
rep
add
fbld
jge
hlt
inc
adc
and
ja
mov
out
jmp
pusha
addr16
sti
or
xor
shlb
mov
lods
cmpsl
mov
push
xchg
xchg
dec
sahf
pushf
cmp
sahf
loop
stos
mov
sbb
jle
movsl
fadds
lock
pop
add
dec
sbb
mov
xlat
mov
lods
stos
dec
jo
jbe
aaa
test
out
dec
ror
pop
arpl
scas
cmp
jns
pop
or
stos
push
mov
jge
jecxz
mulb
jb
sub
js
cmc
fcoml
adc
cmc
sub
fldcw
in
mov
pxor
mov
cmc
cmp
cld
jl
pusha
pop
sub
xor
dec
xor
outsb
int3
lods
scas
nop
lcall
data16
push
scas
pushf
in
out
sahf
mov
imul
and
icebp
into
notb
lret
pop
popa
and
cs
imul
jmp
fisttps
jecxz
pop
rep
xchg
je
or
mov
mov
scas
cld
out
pop
xchg
in
arpl
cmpsb
mov
inc
out
sub
rolb
cmc
cltd
scas
push
sti
dec
cmp
int3
and
xor
test
adc
sbb
cmc
mov
pop
mov
icebp
addl
and
inc
adc
fbld
mov
repz
xchg
adc
mov
in
test
pop
dec
mov
dec
icebp
and
jae
cmp
lret
push
int3
cmp
mov
mov
test
pop
xor
mov
sbb
es
cmc
jmp
pop
adc
xchg
dec
lods
or
xchg
outsl
jb
hlt
cwtl
add
gs
ss
mov
mov
daa
cmp
in
sbb
mov
arpl
pop
fcom
daa
cmp
dec
std
push
mov
lea
subb
mov
les
bound
enter
sbbl
fucomi
dec
stos
aas
cwtl
push
pop
out
dec
xlat
dec
jnp
dec
outsl
sub
mov
sbb
sti
mov
sbb
jle
xor
pop
lcall
push
cmpsl
adc
jne
push
in
push
outsl
test
gs
sub
ret
and
xchg
loopne
mov
and
pmaddwd
jns
jge
jle
ret
repz
call
sbb
xchg
daa
jno
add
fmuls
xchg
fnsave
cmp
andb
jae
sub
xchg
push
mov
jne
movsl
stos
arpl
loopne
pushf
andl
mov
addr16
push
cmc
pusha
add
sbb
and
icebp
out
mov
rcll
stos
or
pusha
xchg
mov
sbb
sub
les
pop
aam
movsl
into
popf
notb
nop
rolb
adc
sbb
and
xor
mov
je
pop
mov
or
inc
xchg
jp
xchg
lret
jg
or
adc
dec
mov
stos
ljmp
pop
mov
test
push
pop
and
pushf
mov
xchg
stc
daa
out
arpl
dec
fcmovnb
insb
stc
scas
jmp
jecxz
sahf
fadd
pop
push
xor
popa
sub
outsl
cli
ds
push
adc
js
test
aad
inc
jecxz
jnp
aaa
movsb
inc
sub
push
scas
sub
ficoms
pop
push
pop
adc
out
insl
xor
test
sub
test
adc
cmpsb
pop
mov
xchg
mov
out
ds
movsl
idivb
clc
add
cwtl
cmp
add
lea
jo
test
dec
popa
mov
xchg
mov
cmp
inc
mov
mov
sarl
or
mov
pushw
or
xchg
in
sbb
std
xor
mov
push
mov
or
movsl
adc
cmpl
and
hlt
jmp
fwait
xchg
test
faddp
xor
cld
add
jo
leave
testl
lods
mov
inc
xchg
pop
iret
data16
pop
scas
sub
sbb
mov
add
dec
inc
loopne
std
pusha
mov
xor
mov
iret
jmp
xchg
mov
mov
push
ja
add
arpl
pop
or
lods
and
adc
cmp
es
cltd
imul
imull
xchg
shrl
and
das
mov
cmp
add
movsl
xchg
adc
aas
sbb
sub
cld
dec
dec
cltd
mov
and
popf
jno
sarb
sub
in
pop
mov
push
rcr
call
lcall
mov
or
shrl
xor
ja
jbe
daa
jle
sti
and
pop
fisttpl
push
xor
push
mov
push
xor
sbbl
int
insb
sbb
aas
test
cvttps2pi
adc
mov
test
cmc
cmp
xor
cmp
sub
ret
cli
loopne
roll
fimuls
mov
out
push
add
jno
cmp
push
mov
mov
jb
add
adc
sbb
pop
lods
fisttpl
fildl
xchg
push
test
xchg
jnp
loopne
fbld
shl
out
stc
cltd
sbb
push
pop
adc
jmp
js
jbe
and
rcrl
adc
stos
sbb
cli
or
sub
push
sbb
es
mov
repz
jmp
lock
in
or
sub
imul
pop
icebp
and
in
in
pop
mov
pop
or
mov
push
inc
adc
lcall
hlt
inc
dec
outsb
pop
ljmp
pop
repz
test
adc
cmp
pop
sub
mov
mov
or
clc
adc
aam
iret
adc
or
xchg
iret
icebp
sbb
or
pop
scas
int
decb
lcall
xchg
mov
jb
test
imul
dec
cmp
jns
push
push
mov
in
ljmp
outsl
andl
leave
cmp
mov
outsl
mov
fdivr
loop
xor
arpl
sarb
test
sti
cmc
push
cmp
pop
push
enter
push
mov
pushf
fsubrs
bound
dec
mov
orb
mov
fnstcw
scas
into
in
pop
fcomi
jb
inc
ja
sbb
fbld
xchg
loope
push
pop
mov
or
int
js
sub
fcompl
in
jne
pop
adc
mov
dec
fsubp
mov
mov
dec
lret
mov
jne
pushf
xchg
mov
ret
repnz
das
sub
ss
das
icebp
loop
aam
mov
pushf
iret
ficoml
sub
out
imul
je
inc
scas
and
in
out
adc
push
int3
cmpsb
andb
jbe
push
mov
imul
push
adc
gs
jmp
mov
xor
and
aad
sti
mov
add
dec
add
add
push
and
in
ficoms
lret
dec
xor
das
and
jp
pop
pusha
mov
xlat
in
fwait
cmp
lahf
clc
arpl
and
cmp
daa
and
mov
sbb
xchg
lds
inc
pop
cmpsb
adc
les
cmp
les
and
add
ret
inc
xchg
dec
rol
xchg
push
mov
jnp
jae
out
sti
popa
xor
loop
ret
adc
mov
popf
and
data16
xchg
xchg
loopne
aaa
in
pop
sahf
clc
and
rorb
rcrb
insb
push
loope
sbb
sarl
sub
inc
adc
js
xor
xchg
cmpsl
es
adc
inc
shlb
sbb
movsb
dec
movsb
pushf
lret
mov
inc
jno
jnp
into
dec
inc
xchg
fidivrl
pop
and
enter
mov
leave
mov
xor
outsl
repnz
fucom
lods
shll
aam
aam
daa
inc
mov
jmp
push
aaa
inc
inc
imul
rcrl
add
stos
loopne
fistpl
fcompl
sbbl
cmpsb
mov
mov
lret
sarl
loop
jne
xor
xchg
icebp
jnp
add
int
sbb
jo
imul
push
enter
push
fucomi
nop
mov
cmc
insb
ret
fldcw
xchg
cli
inc
mov
mov
rcrl
or
inc
insl
mov
xchg
inc
or
push
mov
cwtl
mov
aaa
sub
sbb
dec
mov
push
or
sarb
push
or
sub
sbb
aas
ds
scas
aaa
sbb
cmp
mov
inc
lcall
or
ret
out
lods
scas
imul
popw
mov
pop
push
xor
scas
sahf
sahf
xor
imul
in
push
lcall
cmp
fwait
inc
mov
jb
outsb
cltd
cli
inc
test
add
mov
or
xor
sub
inc
adc
lods
and
pop
sahf
shrb
mov
cmp
icebp
add
leave
ds
mov
mov
xchg
inc
test
pop
fadd
push
fisttps
pop
pop
fsub
lods
sub
sbb
stos
cmp
jp
push
pop
shrb
int
cld
lcall
mov
fstp
push
xor
and
xor
push
inc
xchg
pop
pop
cmc
mov
add
cltd
arpl
or
add
cmpsb
push
adc
mov
adc
add
jle
mov
loope
or
scas
sbb
fadds
jb
jno
loopne
mov
jg
push
enter
fisubrs
add
scas
daa
aam
loopne
cmpsb
mov
mov
push
int3
hlt
fwait
push
add
sub
xchg
testl
cwtl
sub
xor
xor
push
scas
mov
add
test
aaa
aam
jp
aad
mov
jl
mov
call
or
in
sub
pop
mov
cld
fstpl
cli
outsl
cld
aam
out
out
mov
xchg
push
inc
clc
fistl
sbb
pop
in
cmp
mov
out
mov
mov
push
inc
inc
sub
mov
lcall
jmp
mov
mov
cli
push
add
fwait
cmp
jle
outsb
iret
xor
lcall
out
std
sub
mov
and
push
adc
add
add
stos
inc
push
enter
scas
jns
xchg
jg
jge
loop
push
push
pop
or
push
mov
and
or
gs
in
fs
ret
xchg
xchg
dec
es
xchg
adc
popf
movsb
andl
xor
int3
mov
shlb
sub
popa
ss
insl
mov
ds
into
pop
and
out
lret
adcb
popf
fimull
mov
je
xor
cmovl
bound
sarl
xchg
jp
cmpb
out
sbb
inc
and
push
push
xor
sbb
mov
ret
sbb
mov
inc
mov
add
data16
add
popa
lea
loope
mov
cld
jl
cli
aas
lcall
and
mov
mov
in
daa
inc
ret
mov
scas
jge
xchg
out
push
mov
mov
xlat
lds
dec
jno
out
test
jne
jle
xchg
mov
xchg
jo
fdivl
cltd
sbb
cmp
xchg
stos
mov
shlb
sbb
and
sub
ds
mov
add
shlb
shlb
popa
in
cmpsl
add
ret
inc
xchg
sub
ret
lock
in
roll
cmp
cwtl
inc
sub
inc
sbb
aam
sbb
aas
mov
mov
push
mov
push
shlb
xchg
jle
ja
fiadds
cmp
mov
cs
add
lods
mov
xor
dec
push
jl
and
sbb
lcall
cmc
add
sub
aaa
in
sbbl
and
orb
xor
lds
jno
out
das
popa
daa
cld
jbe
pop
fcomip
inc
and
add
xor
inc
imul
jae
dec
jbe
stos
jmp
xor
push
nop
notb
arpl
insb
xchg
inc
movsl
push
fadds
lret
push
adc
shlb
push
nop
push
shl
add
popf
insl
nop
fisubrs
mov
pop
sbb
xchg
jne
sub
leave
out
sub
stc
cmpsl
nop
sti
int3
jne
push
nop
fsubp
lds
rol
andb
mov
out
fwait
cmp
pop
cmpsb
sti
enter
in
inc
xchg
xor
outsl
jmp
pop
pop
push
push
imul
js
cmp
enter
test
rsm
clc
or
cmp
push
roll
mov
outsl
shlb
jne
pop
dec
and
scas
push
cmp
jno
dec
adc
es
and
call
or
out
outsl
jl
xchg
pop
jl
mov
notb
lods
jns
ljmp
mov
xor
dec
mov
popa
mov
inc
mov
mov
pop
dec
add
lea
sub
xchg
xchg
ds
push
imul
push
ss
iret
sbb
sar
notb
fnsave
or
stos
pop
xchg
roll
out
mov
mov
adc
ret
out
mov
jp
pop
xchg
es
popa
sahf
lahf
xlat
adc
lods
sub
das
movsl
mov
xlat
sahf
lret
roll
hlt
inc
push
enter
out
dec
xchg
and
cmc
aad
icebp
fisubs
popf
adc
xor
sub
nop
std
sub
or
adc
arpl
and
and
test
clc
cmp
xor
or
push
mov
pushf
stc
xor
aam
adc
push
push
inc
popf
sub
popw
insb
cmp
lret
sub
xchg
jecxz
or
out
ja
xchg
xchg
mov
add
popa
outsb
xchg
adc
and
shrl
dec
enter
cmc
outsl
push
outsb
mov
add
mov
aas
cmp
mov
inc
adc
jbe
pop
int3
xlat
repnz
add
xlat
jg
and
mov
loope
dec
xchg
setne
lret
push
jbe
ret
dec
fbstp
in
cmp
out
add
adc
daa
xor
mov
jle
ret
mov
cmpsb
icebp
dec
push
and
add
and
inc
and
mov
lock
pop
loop
into
and
adc
jae
cmp
movsb
in
mov
lods
and
into
mov
leave
ss
cmp
data16
cmp
push
sub
loopne
cmp
xchg
xor
xor
out
ljmp
pushf
or
clc
adc
loopne
sub
xor
lods
orl
mov
movsl
idivl
loopne
mov
jo
mov
mov
xor
movsl
aaa
mov
jecxz,pn
lods
punpckhdq
mov
loopne
and
add
xor
sub
ljmp
loopne
testl
push
imul
les
stc
jo
mov
mov
loope
ljmp
adc
pop
pushf
test
ja
push
dec
stos
aas
mov
mov
add
arpl
popa
sub
lret
pop
ja
mov
stos
cmp
cmc
mov
mov
imul
lea
sti
shl
sbb
test
inc
gs
and
loopne
popf
mov
dec
leave
adc
clc
popa
test
out
movb
outsl
dec
divl
loopnew
adc
mov
lea
sub
jl
test
pop
xlat
add
addb
adc
fwait
sbb
xor
fstpl
movsb
inc
push
test
add
scas
dec
sahf
or
arpl
fadd
and
and
mov
in
leave
pop
sub
mov
gs
add
insl
sub
jecxz
add
jg
mov
mov
pop
inc
mov
test
loopne
xchg
pop
mov
cli
sub
jne
movsb
out
or
ja
lahf
sbb
cli
mov
jns
add
mov
mov
mov
les
ds
push
add
xchg
iret
dec
icebp
adc
dec
xchg
ljmp
xchg
adc
xchg
push
or
push
mov
test
pop
adc
int3
push
push
leave
pop
aad
aam
scas
or
jae
call
sbb
loope
push
adc
int3
mov
sub
outsl
push
cli
out
sbb
nop
adcl
push
push
mov
aas
lcall
xchg
jecxz
pop
iret
mov
sbb
dec
xchg
cmpl
les
fdivl
fxch
sub
movsb
mov
add
mov
sbb
sarb
xor
rcll
sub
inc
stc
adc
insb
sub
je
rolb
inc
addl
mov
mov
pop
and
ror
push
pop
mov
nop
cmp
jns
fidivrs
shll
daa
cmp
aas
jnp
mov
scas
add
nop
cmp
xchg
mov
cmp
jmp
cmc
cmp
enter
lea
xor
out
inc
jecxz
outsl
nop
and
rsqrtps
jns
mov
push
pop
scas
sbb
arpl
stc
adc
sbbb
pop
xchg
ret
pushf
add
mov
push
iret
or
imul
inc
xchg
int3
sub
or
outsl
lret
cmp
mov
cmp
in
adc
and
mov
nop
out
sub
fdivs
mov
pop
jp
out
push
and
dec
cmp
mov
sub
movsl
imul
mov
mov
xor
and
mov
jl
call
pop
sbb
lret
mov
cmp
pop
push
sbb
mov
inc
outsl
pop
loopne
movsb
into
adc
mov
mov
std
in
mov
fiadds
test
mov
fldcw
sahf
shr
imull
sub
mov
ljmpw
nop
int3
fwait
js
filds
test
mov
cmp
cmp
mov
push
ljmp
mov
dec
ret
sbb
push
imul
and
inc
mov
xor
sub
push
sbb
nop
addl
rorb
test
inc
mov
int3
fdivs
pusha
dec
std
push
pop
inc
jnp
add
aaa
notb
jle
xor
cwtl
pop
roll
ret
jns
cli
pop
sahf
inc
test
test
fdivs
hlt
test
bound
leave
xlat
inc
and
aas
aas
loopne
lds
lods
fsts
scas
aaa
cltd
adc
or
mov
cltd
dec
clc
sbb
adc
mov
test
rcrb
insb
mov
mov
pop
sub
jb
sahf
dec
adc
xchg
in
adcl
mov
imul
and
or
jp
xor
outsb
fwait
imul
push
fs
push
and
inc
nop
ja
cwtl
mov
inc
cmp
std
stc
test
les
scas
and
push
incb
add
cs
pop
addr16
xor
cmc
inc
sbb
mov
push
test
movsb
ret
cli
mov
imul
aas
hlt
in
and
mov
adc
cmp
movsb
sbb
lock
sti
pop
mov
pop
or
ss
in
insl
mov
in
inc
dec
aad
sub
mov
mov
jle
or
mov
mov
mov
nop
stos
in
sbb
xchg
loope
lcall
int
mov
mov
and
out
sub
push
lret
sbb
push
outsl
movsb
clc
pop
add
xor
push
inc
mov
in
sub
jp
iret
dec
les
outsl
into
adc
and
or
lods
sbb
inc
and
icebp
adc
stc
inc
xor
addr16
repnz
cmpsl
repnz
ret
cwtl
jle
cmp
jg
pop
lret
icebp
stos
pop
test
shll
ljmp
cmp
pop
xor
inc
int3
js
sbb
xchg
rcrl
jno
sarb
cmp
sub
jo
jns
outsb
push
popa
aam
adc
push
imul
push
sub
push
loop
inc
lock
scas
loope
adc
adc
mov
dec
push
lock
dec
mov
into
mov
cmp
in
cli
loopne
push
inc
inc
jecxz
sub
mov
daa
fisubl
mov
xchg
xor
in
addr16
xor
enter
sub
pop
ja
adc
insl
andl
lret
dec
out
push
das
jae
movsb
int3
add
xchg
aad
jno
push
add
mov
aas
xchg
popa
pop
add
lock
push
popf
or
mov
mov
rorl
imul
movsl
int
mov
inc
addr16
xchg
jno
loope
mov
cmpsl
out
add
jmp
xchg
cltd
inc
jns
jns
dec
push
xchg
inc
incb
stos
mov
repz
xchg
lahf
orl
out
xor
sbb
xor
and
xchg
xor
sub
int3
inc
add
pop
xchg
jo
cmp
outsl
lret
sbb
bound
mov
je
outsl
call
cmp
lds
jle
mov
iret
adc
xchg
inc
xchg
movsb
test
fcmovne
int
mov
fsubr
jge
movsb
daa
lcall
mov
pop
adc
sbb
shlb
enter
jbe
jae
jns
sub
push
xor
mov
push
inc
popa
lock
fsubrs
cs
xor
xor
jge
hlt
mov
mov
fstl
mov
sbb
jge
lds
cmp
xchg
sub
test
sub
mov
push
push
inc
jg
cmp
inc
mov
inc
jne
sti
pop
sub
fnstenv
pop
mov
pop
pop
or
stc
xorl
lcall
xchg
push
xorl
loopne
add
and
cld
fld
inc
xchg
add
jbe
je
pop
push
push
in
mov
pop
dec
scas
push
inc
inc
out
xchg
xor
jmp
push
inc
push
cmp
int
call
mov
stos
mov
jecxz
lahf
test
daa
repnz
dec
lods
xor
add
cltd
roll
mov
and
popf
sub
out
inc
push
mov
xchg
jmp
leave
ret
arpl
aam
nop
push
lea
add
pop
shrl
jle
mov
es
dec
lcall
pop
cs
aam
mov
sub
sub
cmp
adc
cwtl
push
pop
cli
shlb
ljmp
cmpsb
adc
test
jbe
push
aam
pop
push
repz
test
mov
lods
nop
leave
and
adc
pop
dec
lods
mov
rorl
fistpll
cltd
pop
cmp
in
pop
jno
sbb
lds
mov
pop
loop
mov
xor
jb
pop
jge
adc
xchg
push
jmp
insb
dec
or
andl
push
ror
jae
pop
mov
insl
xchg
sbb
xor
xchg
call
je
mov
shr
orb
in
xor
add
fisubl
jg
push
iret
mov
pushf
jbe
popa
jl
or
addb
cltd
in
cwtd
dec
xor
sub
or
adc
mov
gs
imul
lret
inc
std
mov
mov
ret
mov
cmp
sub
faddp
pop
mov
insb
push
popf
lea
inc
mov
imul
jno
pop
call
sahf
out
pop
mov
xor
bound
or
add
push
push
imul
and
cmc
subl
test
lret
mov
lea
aaa
adcb
mov
roll
cmpsl
in
dec
jb
jecxz
adc
push
and
aaa
jg
imul
add
sbb
in
jae
movsb
lcall
pop
pop
push
test
fs
movsb
pop
mov
mov
sbb
cltd
xchg
aaa
sbb
or
in
xchg
xchg
lret
adc
pop
cmp
dec
std
mov
jno
test
gs
adc
stos
or
pop
sub
mov
sub
aad
iret
mov
jbe
dec
add
mov
adc
xor
adc
orl
sbb
mov
jmp
rcll
sbb
popf
jmp
insl
push
mov
sarb
cmpsl
repz
add
loop
fistl
mov
mov
mov
xlat
cmp
ja
and
add
sbb
pop
imul
jmp
jle
loop
bound
mov
xlat
mov
and
or
int
mov
push
movsb
mov
mov
enter
aas
mov
push
xchg
mov
or
addr16
int3
jmp
cmp
xchg
cmp
push
dec
daa
inc
out
sub
jle
mov
movl
jl
add
sub
ljmp
xchg
inc
test
scas
fwait
adc
sub
popf
jno
xlat
push
jge
dec
sub
sbb
mov
fistl
mov
adc
push
xor
inc
or
jnp
iret
push
jg
jg
popa
xor
mov
push
inc
ficoms
pop
mov
mov
repz
fidivrs
pop
test
lahf
add
mov
pop
inc
call
pusha
add
mov
push
push
sbb
repz
rcrl
mov
adc
mov
gs
dec
xor
add
pop
jbe
lcall
inc
xor
xchg
jge
mov
jns
and
addr16
jae
mov
andl
push
jne
pop
in
nop
jbe
shll
jo
ljmp
lock
pop
lea
sub
or
iret
add
sub
es
call
jae
pop
inc
dec
xor
and
xor
addb
mov
lret
adcb
aam
mov
jp
pop
jbe,pt
mov
inc
stos
jbe
xchg
idivb
jge
mov
test
sub
jo
xor
inc
mov
rol
mov
xchg
pop
push
jb
mov
mov
sub
test
and
ret
mov
cmp
fimull
cmp
mov
fs
out
jl
xor
xor
popa
push
test
xor
popa
dec
add
mov
cltd
or
xchg
ret
ret
movsl
inc
sbb
xor
inc
scas
rcll
or
test
xchg
fdivrl
fs
and
and
js
in
sub
test
jecxz
fstpt
add
dec
cmp
mov
cmp
pop
push
inc
pop
sti
mov
inc
push
xchg
add
adc
cld
cld
add
sub
mov
sbb
jno
mov
push
cmpsb
mov
into
cltd
jbe
sbbb
sahf
pop
push
aaa
xor
push
add
xchg
repz
fiaddl
dec
xor
xlat
sub
and
in
ficompl
in
add
cmc
mov
push
mov
lahf
push
jb
jp
cmp
stc
xor
xchg
pusha
jp
arpl
mov
lret
xchg
xchg
int
imul
push
xlat
ja
cmp
sbb
je
lock
scas
pusha
in
enter
adc
movsb
sub
jge
jns
and
lcall
aaa
sahf
inc
incl
dec
into
mov
mov
nop
or
or
pop
pop
mov
pusha
mov
stos
lods
outsb
std
loop,pn
ret
ljmp
xor
fiaddl
dec
cld
push
loop
daa
sti
ret
cmp
lds
pop
sti
mov
loopne
hlt
inc
call
jae
loopne
aam
pop
mov
sbb
cmp
pop
ret
iret
mov
pop
test
cmp
jae
pushf
jno
test
cmpsl
js
xor
rcl
bound
fistpl
out
dec
out
js
sub
fwait
out
mov
adc
mov
lods
adc
jns
push
stos
pop
jo
sbb
xor
mov
mov
mov
mov
je
mov
decb
or
sbb
adc
leave
cmpsl
leave
lcall
ja
cwtl
out
mov
and
jle
inc
shl
lret
fucom
add
mov
cmp
mov
inc
push
mov
dec
and
dec
push
pop
movsl
lahf
xchg
push
pop
adc
lea
inc
cltd
ss
push
cmp
shlb
decl
xor
xchg
xchg
daa
or
aad
xchg
pop
adc
lcall
jmp
or
loopne
push
inc
or
jp
jmp
mov
adc
iret
push
cs
mov
mov
in
mov
in
bound
hlt
xchg
jmp
and
mov
push
dec
and
mov
lock
fidivrl
popa
and
lock
mov
mov
adc
push
fidivs
test
je
loopne
push
in
mov
inc
mov
scas
pop
rcr
pushf
leave
lret
mov
test
pop
mov
cwtl
pop
ss
mov
push
sub
outsb
test
xor
aas
cmpsb
fists
inc
mov
test
push
bound
xorb
and
int3
test
push
sbbb
rcrl
mov
leave
jae
mov
movl
push
popa
jnp
cmp
sbb
sti
sbb
cld
cmpsb
loop
mov
ret
test
mov
les
mov
adc
sarl
enter
dec
mov
add
cmp
popa
xor
jp
lods
sti
bound
lcall
shr
sub
or
pop
movb
mov
fmuls
mov
xchg
push
adc
int3
push
jae
jp
ret
lahf
insb
adc
cld
cmpsl
hlt
nop
loope
sbb
lret
dec
ret
test
js
flds
pop
xchg
test
dec
or
xchg
outsb
mov
xor
dec
imul
jl
stos
fmul
popa
movb
stc
sti
sbb
or
aaa
push
cltd
inc
xchg
xchg
jl
mov
insb
in
mov
xor
mov
cmp
es
pop
fisubs
into
test
xchg
adc
rcrl
andb
mull
and
dec
and
out
fmul
mov
nop
filds
sub
roll
cmovs
roll
xor
insl
and
movsl
or
inc
fiadds
sub
pop
xlat
pop
ja
xchg
cmp
bound
and
pop
iret
mov
and
pushf
xchg
repnz
lea
add
cmpsb
sbb
cmp
dec
add
sbb
pushf
cmpb
xchg
jle
mov
les
scas
adc
push
out
out
push
call
add
cltd
dec
pop
jbe
pop
push
pop
stos
outsl
ljmp
shr
jmp
sbb
cmc
cmp
cld
xchg
ds
std
bound
pop
or
mov
or
mov
jo
fnstsw
hlt
cmp
fildl
jg
mov
and
xchg
mov
arpl
sbb
stos
test
jg
sub
mov
push
xchg
add
mov
mov
cmp
cmp
rcrl
mov
fildl
fildll
adcl
movsb
lcall
fwait
std
cld
aas
pusha
stos
dec
pop
stos
jmp
pop
jmp
jge
xchg
lea
add
das
mov
fdivp
dec
testl
xchg
fwait
vphadddq
mov
mov
add
in
sbb
out
push
loop
in
adc
fldcw
xor
pop
cmp
add
dec
jg
cmp
or
mov
je
lds
xor
iret
sub
sti
ficoms
repnz
les
xor
jbe
push
sbb
mov
test
insb
push
sahf
bound
loopne
out
jb
sbbb
jb
rclb
bswap
ret
addr16
insb
cmp
adc
jecxz
pop
cmp
int3
scas
fistpl
adc
test
ret
add
imul
jp
dec
ss
arpl
add
lahf
push
pop
adcb
and
mov
mov
icebp
jns
je
jae
jns
into
lods
adc
mov
sbb
cmpsb
mov
ljmp
jbe
xor
ss
dec
xchg
mov
and
mov
arpl
scas
jbe
enter
mov
test
xchg
cmp
iret
add
sub
mov
cltd
jnp
mov
pop
fistl
push
insl
inc
and
jmp
sub
and
dec
sub
popa
or
cmp
mov
pop
xor
loope
mov
adc
and
sahf
stc
or
pop
fsubrl
mov
and
xchg
ret
xchg
lcall
or
fnstsw
sahf
ret
cmp
jae
adc
add
int3
ds
sbb
mull
popa
lock
or
pop
mov
pop
mov
shl
push
fucomp
test
lret
push
ss
push
jle
ja
sub
inc
mov
and
test
push
cmpsl
push
lock
addr16
fwait
jmp
shrl
fsubrl
repnz
jae
and
lds
xchg
add
in
mov
bound
jno
cs
xor
pop
add
sahf
outsl
or
cmpsb
sub
insl
hlt
shl
push
test
sbb
leave
xor
mov
xor
sub
jb
pop
xchg
ret
call
mov
loop
pop
add
in
fcoms
shrl
aad
movl
add
mov
xor
ss
push
subb
loope
pop
mov
dec
xor
or
les
sbb
ret
test
rol
xchg
push
cmp
xor
lods
imul
xchg
push
dec
inc
fucomi
xor
push
sub
jmp
repz
outsl
movsl
roll
mov
or
fildl
add
inc
jl
mov
dec
mov
xorb
pop
push
jl
ljmp
cwtl
mov
out
cmp
adc
sbb
cli
cmp
jg
xchg
lea
clc
jno
mov
add
leave
cmpsb
adc
pop
test
mov
jecxz
bnd
in
mov
rol
push
je
xchg
into
rorb
push
cld
dec
add
ret
mov
out
mov
lea
push
ror
cmpl
int
jo
xorb
pop
xor
mov
xor
fisubrl
mov
add
orl
cmpsb
add
fstps
addr16
in
nop
bound
dec
cmp
sti
in
xlat
test
jp
or
jnp
fstpl
cld
rol
push
incb
fucomip
vmovsd
mov
or
mov
mov
into
adc
out
dec
sti
leave
ljmp
dec
in
dec
pop
sbb
mov
mov
insb
jno
test
push
int3
dec
pop
jno
mov
xorl
test
mov
mov
test
adc
mov
sbb
icebp
xchg
ret
in
dec
out
je
bound
fisubl
jns
gs
pop
sbbl
jb
or
ret
pop
repz
mov
mov
shrl
xor
sbb
xchg
in
mov
rcl
iret
jg
jg
lods
les
sub
int
bound
das
scas
popa
lds
pop
inc
int
fs
sub
jge
xchg
loop
inc
mov
das
scas
mov
push
in
and
mov
aam
jl
loopne
push
sub
xchg
rcrb
mov
ret
outsb
sbb
ficoml
cmc
push
loop
sub
pop
mov
pop
cmp
pop
push
push
push
cmp
mov
ljmp
push
and
cmp
ret
adc
inc
fidivl
jno
cwtl
adc
mov
push
xchg
jno
cld
jno
loop
into
or
mov
jecxz
and
test
fwait
add
out
out
jno
movsl
mov
mov
and
xchg
pushf
push
popa
ljmp
rcrb
in
dec
and
push
xchg
push
cmp
ds
loop
or
jb
cmp
enter
or
fsubl
pop
lds
inc
out
jbe
cmp
aam
neg
mov
and
fsubl
jg
sahf
in
pushf
jl
dec
adc
jae
jecxz
jnp
sbb
cs
test
add
jne
stc
out
pop
jmp
cmpsb
adc
mov
push
movsb
ficoms
dec
scas
insb
fists
push
pop
sbb
lds
lret
dec
subb
jne
sub
mov
dec
test
lock
push
adc
mov
jle
popf
mov
lahf
js
jg
and
mov
xor
outsb
test
push
xchg
adc
pop
sub
xchg
clc
dec
add
mov
push
jne
js
out
test
dec
add
aam
cmp
inc
cmc
inc
addb
push
sti
add
adc
loope
into
jo
hlt
mov
sbb
cmp
int
sbb
adc
not
or
in
rcll
mov
jno
push
or
leave
roll
lret
and
push
push
sbb
add
jl
jmp
push
sbb
in
cld
mov
inc
or
mov
insb
in
lea
es
inc
imul
jl
jp
pop
inc
add
fdivl
bound
popf
jmp
and
fidivrl
xor
jno
and
cmp
subl
mov
adc
fadds
mov
push
dec
pusha
sbb
or
add
les
pop
xor
imul
cltd
add
int3
fldcw
push
push
jecxz
call
xchg
fisubs
das
leave
test
inc
adc
cmp
ja
fcmovbe
pop
dec
call
jg
jbe
testb
imul
mov
fidivs
mov
xchg
dec
scas
jnp
ret
testb
xor
jmp
xchg
dec
sub
nop
lds
pop
shr
int
mov
repz
pop
mov
sbb
ret
mov
cmpsl
mov
nop
mov
aas
dec
repnz
psubusw
mov
js
sbb
sub
or
pop
jo
mov
stos
mov
xor
cmpsb
push
inc
pop
je
imulb
lcall
lea
into
test
lods
sbb
xchg
sbb
mov
xorb
out
or
pusha
data16
out
into
and
dec
mov
ret
sub
or
sbb
in
pop
adc
push
push
icebp
pop
pop
scas
xchg
mov
cmc
jecxz
push
sbb
and
mov
repnz
rcll
imul
shrl
test
lods
inc
inc
pop
fistps
ljmp
sbb
iret
es
jo
cmpb
roll
mov
arpl
pop
insl
xchg
jns
fmull
xchg
pop
xchg
inc
mov
push
aam
outsl
push
mov
dec
out
or
adc
movsl
movsl
add
push
push
divl
cmc
fwait
imul
testb
and
inc
mul
pop
std
jo
divb
jbe
out
dec
ror
mov
pop
hlt
fadd
adc
cs
ljmp
xchg
push
sbb
sbb
sbb
cld
cmp
mov
pusha
int
and
mov
mov
ljmp
mov
in
int
push
mov
mov
loop
stos
and
xchg
fisttpll
test
cmpsl
push
cwtl
push
inc
lds
popa
aam
aam
in
cmp
dec
inc
and
add
stos
fstpl
push
sbb
inc
icebp
mov
popa
mov
mov
stos
loope
fisubs
idivl
pushf
push
loopne
pop
or
mov
arpl
arpl
pop
pop
add
cmp
subb
xchg
dec
sti
push
mov
movsl
add
lock
jle
dec
in
pop
dec
jno
jno
mov
out
cwtl
mov
cmp
add
movsbl
jo
jbe
inc
pop
cmpsl
out
adc
js
lods
push
push
adc
stc
mov
testb
sub
sub
push
movl
push
pop
or
aas
jg
js
jo
popf
and
cli
or
es
mov
cmp
lret
jne
data16
adc
aas
jbe
out
rcrl
sbb
add
inc
push
adc
insl
imul
cwtl
and
repnz
cmp
and
stos
or
stos
add
xchg
xchg
dec
sub
loope
xchg
lret
out
add
inc
and
pop
xchg
lahf
mov
aad
inc
into
add
pop
mov
dec
jnp
loopne
jnp
loop
push
sub
mov
push
aad
adc
xor
outsb
push
dec
arpl
pop
mov
loopne
push
mov
sub
lods
mov
mov
cmp
inc
int3
jmp
jge
mov
sub
pop
out
adc
adc
or
ret
outsl
mov
in
ljmp
inc
into
fidivl
cmp
or
movsl
adc
jmp
popa
pushf
aaa
enter
and
scas
aam
pusha
xorl
je
mov
test
les
inc
ss
add
test
aad
dec
xchg
pop
out
mov
fiadds
cmp
or
mov
jp
dec
outsl
js
push
mov
mov
mov
cmp
sahf
jne
mov
insb
jae
inc
out
inc
sarl
imul
es
push
imul
mov
cld
mov
jns
loope
movsl
sahf
jp
fsubrs
fstps
xchg
adc
aaa
scas
lods
lea
pop
sti
xchg
stos
and
push
xchg
cld
jne
pop
lock
push
dec
dec
xor
xchg
sti
cmp
loope
enter
xlat
inc
pop
cld
popa
jo
movsl
fistl
ret
shlb
xor
stos
icebp
push
or
scas
pop
test
daa
xchg
jg
in
stos
lahf
ret
mov
sub
and
icebp
xor
mov
push
mov
hlt
add
roll
lea
ss
pop
enter
data16
or
dec
iret
jmp
sbb
ret
jge
cld
inc
mov
lahf
adc
neg
mov
rolb
pop
test
incb
jg
xor
push
test
cmp
repz
jl
dec
mov
mov
cli
xchg
popa
xor
adc
jae
pop
push
cmc
stos
les
nop
cmp
lds
jnp
lcall
cltd
test
out
out
push
lods
mov
hlt
int
out
inc
lods
sahf
shrl
fwait
add
and
xchg
or
cmp
cmpsb
in
pop
dec
adc
mov
lret
mov
sub
mov
js
fisttps
sbb
shl
outsb
mov
shlb
or
sbb
movsb
mov
sahf
xlat
pusha
cwtl
lods
aas
mov
xchg
cs
cmp
je
jge
cmp
cli
sub
int3
cli
dec
jge
inc
or
mov
pop
js
lods
push
or
sbb
sti
cli
int3
cmpsb
push
push
inc
push
or
sbb
dec
sub
push
aas
popl
cltd
inc
jmp
push
push
in
push
and
pusha
out
arpl
jp
jne
in
mov
popl
repz
inc
shrl
popa
xchg
gs
push
popf
pop
mov
cli
mov
mov
lret
loop
repz
mov
cs
pusha
mov
ja
addr16
add
call
mov
jle
jge
rclb
pop
pop
pop
cmp
into
mov
xor
mov
pop
pop
xchg
and
clc
jne
jns
sbb
cmp
jle
adc
es
cmpsl
jno
mov
jo
popa
inc
or
sbb
pushf
out
jo
mov
stos
adc
arpl
xchg
fldenv
pop
out
sub
adc
repz
lock
sub
xor
dec
aad
inc
mov
arpl
push
dec
mov
sub
add
add
dec
mov
mov
xchg
push
sub
pop
push
bound
notb
rorl
enter
imul
or
scas
repz
mov
dec
adc
clc
pop
cld
mov
push
mov
inc
hlt
lea
repnz
jno
push
push
mov
dec
mov
cmc
cmc
mov
push
ja
adc
lock
repz
in
add
cmp
aam
out
rcrl
ljmp
push
cmpb
adc
stc
sub
arpl
adcl
pop
cmp
ja
mov
sahf
mov
add
movhps
sahf
fldcw
add
adc
or
mov
imul
shlb
cs
and
icebp
xchg
push
loop
sub
push
hlt
scas
xor
les
inc
jmp
mov
mov
xchg
je
data16
xchg
dec
icebp
popw
add
push
cmp
cmpsl
test
hlt
sbb
loopne
push
and
dec
das
shll
xlat
js
sbb
add
mov
addr16
cltd
pop
and
lock
pop
dec
jp
mov
test
scas
mov
inc
or
sti
dec
shll
inc
fs
sub
aas
adc
shrl
testb
xor
add
sub
xchg
ljmp
xlat
das
jne
pusha
lods
jns
push
popa
pop
in
pop
test
pop
xor
pop
and
nop
pushf
sahf
mov
push
hlt
xor
mov
adc
ds
and
mov
les
xchg
outsb
and
xchg
push
icebp
xor
rcl
sbb
inc
or
call
lods
out
xchg
stc
jbe
movl
jl
pushf
mov
or
leave
push
xor
adc
in
test
xchg
dec
ja
dec
cltd
mov
sub
mov
xchg
dec
shll
inc
lods
jle
dec
add
sbb
push
lods
shlb
out
lea
or
jo
dec
pop
jl
jmp
les
cmp
sbb
jp
movsb
mov
xchg
mov
add
push
lods
push
std
lret
sbb
sar
fmul
lret
cmp
sbb
mov
push
mov
cld
inc
push
daa
insb
pop
out
push
mov
enter
or
outsl
mov
adc
es
fwait
nop
enter
cmp
movsl
es
jmp
loopne
sbb
dec
add
and
mov
ljmp
mov
stos
lods
dec
cwtl
jbe
sub
xlat
sti
dec
sub
or
jp
rcll
popa
mov
ljmp
adc
xor
push
mov
fmuls
and
mov
mov
xchg
nop
call
cwtl
cmp
fisttpll
cld
int
or
shlb
aaa
xor
imul
ret
jbe
jl
iret
xchg
push
cmc
je
inc
jne
cmp
enter
xor
enter
jecxz
es
adc
cmp
xchg
add
push
decl
scas
fwait
out
movsb
popa
jg
mov
add
sar
fnstsw
push
hlt
mov
and
sub
lock
xlat
mov
jb
mov
icebp
xlat
scas
mov
stos
scas
push
mov
cwtl
test
loope
sarl
sub
subl
push
dec
inc
ret
rcl
rcl
arpl
xchg
mov
testb
pop
rcrl
incl
mov
ficomps
sub
data16
or
mov
xor
and
sub
fnstenv
shr
sbb
sbb
imul
or
mov
xor
sbb
push
loope
mov
test
mov
popa
pop
inc
arpl
jmp
in
mov
pop
mov
popf
filds
push
int3
push
xor
xchg
mov
arpl
dec
add
fsubp
fisubs
inc
mov
daa
roll
int3
xchg
jmp
and
mov
int
sub
fcoms
add
call
inc
pop
xor
jno
lock
mov
jns
mov
in
push
or
mov
lret
ficoms
dec
sbb
shrl
enter
mov
and
cmp
sbb
fidivs
stc
out
jbe
mov
adc
cmc
arpl
xor
sbb
mov
push
shll
fdivs
insl
movsl
pop
jo
loop
sub
call
pop
adc
fsubl
andl
dec
sub
les
ss
add
ret
mov
jbe
insl
loope
aad
inc
cmp
mov
mov
jnp
adc
jp
mov
mov
mov
pop
push
pop
or
add
roll
aam
and
adc
jns
add
mov
adc
jo
cmpsl
push
mov
incb
icebp
out
lcall
xlat
xchg
jo
pop
jb
or
mov
dec
in
test
cmp
cmp
push
js
loope
or
sub
iret
out
insb
clc
pop
add
shlb
aam
sbb
push
adc
ret
out
xchg
push
xor
insb
and
std
push
sbb
and
fnstcw
loope
scas
fucomip
enter
nop
insl
ja
mov
pop
shrl
out
repnz
fidivs
mov
mov
out
mov
ss
repz
lcall
xchg
xchg
cmpb
jle
xor
and
or
add
pop
test
je
sub
mov
call
fwait
icebp
imul
shlb
cs
mov
stc
lods
pop
sbb
pop
sti
lds
cmpsl
js
sahf
add
pop
lods
pop
pop
push
mov
add
pop
sahf
test
hlt
cwtl
or
test
out
sub
adc
lahf
mov
add
dec
or
sbbb
add
and
and
cs
cmp
lods
mov
hlt
jmp
add
and
push
mov
call
dec
and
lods
cli
sub
inc
cwtl
xor
adc
sbb
mov
addr16
aaa
into
push
pop
mov
in
or
jl
ds
iret
mov
sarb
add
mov
sbb
shll
add
hlt
insl
sbbl
mov
push
inc
pop
in
ljmp
mov
insl
les
inc
rorb
push
subb
mov
add
popa
and
out
inc
add
movsl
outsb
in
lret
sub
cmp
sbb
bndldx
mov
dec
and
das
xchg
cmp
and
in
mov
lods
lret
add
movq
xchg
iret
xchg
lds
je
sbb
add
addr16
outsb
scas
pop
lods
out
mov
call
jae
mov
push
sahf
adc
das
mov
cwtl
js
xor
aaa
mov
imul
sbb
dec
mov
shrl
xchg
dec
add
fdivrs
loop
jl
jae
mov
xor
sbb
adc
xor
cmp
ds
add
shll
out
mov
stc
repnz
cmp
popf
add
repz
lcall
jb
adc
lret
cli
adc
and
sub
rclb
sbb
dec
and
mov
das
repnz
sti
daa
addr16
jno
out
scas
mov
push
and
adc
aam
push
and
or
andl
and
push
gs
add
xchg
mov
push
jp
sbb
aas
out
cmp
jge
jbe
inc
xor
inc
cmpsb
add
jno
pop
dec
pop
xchg
dec
mov
pusha
push
jne,pt
push
sub
inc
cltd
clc
ss
mov
pusha
mov
out
sbb
sbb
mov
es
dec
pusha
push
add
sbb
push
fcomps
ds
int3
ljmp
lods
repnz
rcll
inc
mov
repnz
rorb
sbb
pushfw
in
popf
mov
mov
hlt
sahf
push
xlat
mov
xchg
popf
es
adc
rclb
clc
lret
lods
lret
leave
mov
inc
and
les
int3
sub
add
mov
pop
aas
push
xor
mov
jp
cld
repz
sub
jb
clc
jl
les
sbb
pop
mov
lahf
test
loopne
pop
push
mov
mov
push
mov
jae
pop
lahf
mov
pop
xchg
jo
adc
int
or
rcll
pop
imul
sub
cmp
stos
les
mov
aad
test
xor
and
adc
or
adc
scas
push
enter
out
dec
cs
dec
sbb
fwait
cmpsl
xchg
nop
js
call
and
or
add
outsl
xchg
je
dec
mov
lret
dec
add
pop
push
hlt
jb
jecxz
adc
xchg
fstpl
mov
xor
inc
arpl
xchg
clc
xor
imul
and
repz
pop
inc
aam
xchg
mov
mov
dec
in
add
sbb
dec
mov
cld
mov
jecxz
sub
xchg
sbb
into
xor
test
and
ds
ret
leave
lahf
and
cmp
sbb
aas
jns
lods
sbb
pop
loope
sub
aam
xorb
pop
in
push
cltd
mov
aaa
jmp
jb
jno
lahf
xchg
cwtl
inc
cmp
xorl
and
sbb
add
add
jge
jp
sbb
sbbl
fcomps
push
or
pop
xchg
lahf
pop
push
rol
mov
cmp
inc
mov
cmp
stos
jge
out
call
ficoml
fwait
sbb
and
dec
xor
dec
mov
sbb
jo
dec
xor
xchg
ljmp
adc
pop
push
ds
sub
add
dec
std
cmp
sub
or
add
inc
sbb
out
xor
dec
repz
push
arpl
imul
xchg
out
and
ret
push
adcb
sub
mov
dec
pop
push
adc
sbb
sub
sahf
test
scas
mov
xor
ja
mov
fs
jmp
insl
ljmp
pop
mov
repnz
and
aaa
lret
jo
dec
pushf
shll
sti
mov
or
call
fsubr
xchg
divb
out
inc
stc
dec
push
pop
imul
jns
cmp
adc
cmp
jnp
push
mulb
lret
lods
mov
xor
mov
inc
out
js
data16
sahf
dec
fidivl
cwtl
pop
outsl
loope
dec
sbb
push
cli
ljmp
jns
loopne
jg
lea
fiadds
ficoms
in
out
dec
les
pop
into
xor
pushf
lods
jb
movsl
daa
mov
enter
filds
data16
sub
mov
in
bound
adc
rcr
sbb
pop
pop
sub
cmp
out
sub
aaa
outsb
in
adc
test
add
rorb
shrl
hlt
sub
fbstp
in
mov
lcall
sbb
dec
pop
jae
jp
jge
outsl
pop
mov
or
ret
aad
jge
or
in
mov
push
dec
sbb
pop
fcomip
dec
out
inc
aaa
cmp
and
cld
loope
fildll
addl
dec
bound
xorb
pop
iret
daa
cmpsl
stc
nop
xorb
in
dec
inc
fistps
sbb
pop
add
dec
stos
testl
cwtl
add
inc
mov
and
insl
xor
sbb
xchg
inc
pop
addb
mov
mov
and
mov
test
mov
mov
dec
pop
aad
jl
pop
es
xchg
pushf
js
test
pop
mov
fstpt
dec
fldcw
leave
and
test
adc
mov
loop
sbb
shl
dec
add
test
fisubrl
adc
mov
aaa
mov
jmp
aaa
je
mov
jns
lahf
adc
insb
adc
xor
mov
sub
sbb
repz
popf
lods
push
lds
mov
jo
icebp
jno
jnp
xchg
fdivs
sbb
movsb
push
xchg
loop
outsl
inc
xchg
in
xchg
jbe
dec
push
mov
sub
mov
sub
jne
fdivrs
shl
and
decl
and
push
lret
outsb
push
cmp
and
dec
stc
out
jp
lods
popa
xchg
stc
push
in
leave
loope
dec
call
out
pop
ss
fstpl
dec
arpl
out
icebp
insb
push
cmp
push
adc
sub
scas
enter
jmp
lods
in
sub
movsl
imul
cli
xlat
sbb
jns
push
sub
inc
add
imul
mov
inc
ss
pusha
mov
rclb
inc
loop
xor
xor
mov
and
xchg
imul
xchg
hlt
popa
push
and
shrb
sbb
inc
imul
adc
xor
cld
mov
loope
call
xchg
pusha
adc
xchg
pop
fisttps
cwtl
pop
loop
and
rcrb
lds
sbb
icebp
test
jnp
ja
ret
pusha
adc
cmp
inc
push
cmpsl
push
fiaddl
pushf
rolb
inc
cmp
add
leave
sti
das
push
mov
aaa
push
fisttpl
loopne
inc
imul
mov
and
jge
xor
lea
mov
sbb
adc
out
cld
mov
push
into
dec
call
fisttpll
pop
adc
jno
test
lahf
push
cltd
stos
push
into
inc
lods
mov
imul
addr16
mov
pop
lret
mov
dec
lock
mov
inc
jo
adc
das
mov
or
lods
push
std
pop
jne
cmp
inc
add
repnz
push
outsl
outsl
add
jb
xlat
cwtl
adc
stos
neg
lea
cs
jecxz
inc
push
xchg
out
or
fnsave
mov
cmp
stc
pop
out
sbb
and
inc
fstps
cmp
adc
sub
mov
mov
jg
xor
outsl
idivb
xchg
push
sub
imul
pop
gs
cmp
repz
inc
fcompl
mov
leave
rcll
push
in
call
popa
daa
imul
add
and
pop
cpuid
mov
dec
test
insb
lods
ss
das
push
sub
mov
cltd
in
mov
adc
out
cmc
add
loop
mov
jp
push
daa
addr16
lea
and
inc
cmpsl
mov
mov
mov
mov
mov
mov
in
clc
or
cld
inc
scas
push
imul
adc
enter
cltd
xlat
in
fists
jno
xlat
mov
sub
pop
add
adcl
lods
mov
sub
and
insl
and
lods
pop
pushl
and
pop
sarl
push
movsb
hlt
mov
pushl
mov
push
cmc
sti
inc
in
imul
das
scas
inc
leave
lahf
lods
add
xchg
mov
lahf
outsl
stos
fs
push
push
push
xor
cld
cmp
xchg
out
sub
dec
fisubs
ja
decl
mov
mov
jno
sub
push
sub
jno
stc
gs
outsb
mov
enter
into
inc
and
dec
push
mov
sub
ficompl
inc
in
sub
orl
insl
cmpsb
jns
shll
pop
sbb
ret
and
sub
out
sub
push
lcall
clc
push
roll
push
mov
ja
fnsave
stos
dec
sub
sahf
mov
or
push
out
pop
inc
ds
push
mov
in
scas
push
push
add
pop
aaa
xchg
popf
jns
adc
push
ret
and
jp
orl
dec
xor
pop
jg
mov
jl
jo
addb
fistps
add
out
cltd
sub
mov
xchg
lret
sbb
pop
mov
aas
sbb
push
into
out
xlat
out
stos
les
fdivrl
inc
aad
xchg
mov
out
lea
inc
jp
das
jecxz
push
hlt
scas
pushf
xor
mov
int3
mov
pusha
in
pop
pop
xchg
cmpsl
lea
mov
popa
add
adc
jp
adc
int3
loop
mov
in
lods
outsb
es
mov
popf
sbb
jbe
scas
sub
pop
in
xor
dec
lret
mov
es
mov
push
mov
sarl
xor
mov
and
test
fwait
iret
pop
sbb
push
push
inc
cltd
decl
aad
mov
and
jo
lods
fisttps
in
lahf
adc
mov
pop
call
in
repz
mov
xchg
cmp
lods
inc
subb
sub
loop
imul
pop
pop
sub
jbe
mov
xchg
insb
mov
outsl
push
in
add
test
jbe
cmc
imul
out
pop
or
ret
push
mov
mov
rcl
jl
das
xor
cmp
xchg
adc
repz
push
mov
out
mov
mov
or
daa
mov
andb
out
or
push
fdivp
cmp
jo
push
mov
or
loop
ds
or
paddb
mov
mov
insb
cmp
jnp
lahf
iret
fadds
mov
sbbl
xchg
mov
iret
jg
xchg
enter
sti
out
hlt
add
loopne
or
jl
leave
hlt
xchg
mov
fcomps
into
xchg
pushf
inc
in
in
push
notb
xorl
xchg
xchg
fnstsw
add
addr16
adc
sti
mull
mov
das
sti
lods
mov
jo
iret
sbb
enter
inc
sbb
dec
inc
mov
les
inc
adc
div
insb
enter
mov
pop
cmpsb
dec
mov
inc
loopne
xchg
stos
push
addr16
inc
jbe
inc
clc
fmul
dec
jl
xchg
lods
mov
in
scas
adc
mov
arpl
fldl
fmul
outsl
fists
mov
or
mov
cmc
sahf
gs
dec
cs
rclb
std
and
jecxz
xchg
inc
cmp
bound
xlat
lret
push
test
clc
sub
in
sbb
loop
push
outsl
int
sbb
sub
xchg
adc
dec
scas
clc
inc
out
push
mov
mov
pop
cmove
dec
addr16
in
out
inc
pop
incl
xchg
jno
inc
add
pop
dec
cmp
ret
lods
sbb
or
shll
inc
inc
sub
rcll
pusha
push
dec
mov
loopne
and
jbe
push
mov
outsl
push
jo
mov
out
lock
pop
mov
xchg
inc
fimuls
cli
mov
in
cmp
pop
stos
fstl
mov
outsb
adc
test
xchg
stos
push
xchg
and
and
fnstcw
jmp
xchg
rclb
sub
jmp
es
jo
sub
add
pop
push
repz
mov
adc
pop
xor
mov
cltd
or
mov
push
in
xor
sbb
push
test
fidivrl
adcl
mov
cmp
push
ss
clc
push
scas
mov
dec
push
dec
sbb
pop
and
hlt
or
outsb
int
pop
or
iret
pop
loopne
mov
dec
icebp
push
add
pop
cmp
cmp
bound
hlt
push
lods
push
jge
xchg
shr
int
testb
inc
xchg
sub
dec
push
adc
and
xchg
out
jl
dec
shl
xchg
mov
push
enter
inc
push
dec
and
sahf
jge
cmpsl
ljmp
jno
insl
pop
mov
push
mov
int3
enter
loope
cmpsl
or
or
cmc
xchg
jmp
mov
out
mov
scas
and
inc
test
inc
pop
testb
mov
add
inc
out
rcrl
xchg
jb
add
inc
add
outsl
outsl
cmpsl
popa
push
inc
out
xchg
cmp
addb
and
dec
add
fidivrl
dec
add
ljmp
mov
cmp
dec
int3
inc
sub
lret
sub
xor
jg
mov
jmp
daa
pop
movsl
push
jle
jg
sbbb
jmp
push
enter
sub
fimuls
fcomps
repnz
dec
pop
out
cmpsl
sbb
icebp
out
xor
mov
inc
cmpsl
sub
stos
adc
rorl
stos
stc
jle
sbb
je
movsb
xor
xor
aas
xor
bnd
clc
fists
dec
push
pop
mov
call
push
inc
xlat
test
mov
das
xor
xchg
repz
sub
inc
out
jo
push
pop
cmp
mov
sbb
jle
dec
test
stc
fisubrl
outsb
lea
push
jp
add
fdivrl
movsl
sbb
popf
jg
or
xor
rcll
out
sub
push
shlb
nop
add
adcb
jge
pop
fwait
pop
push
mov
insb
jmp
outsl
mov
in
hlt
sar
jge
pop
add
adc
xor
xchg
add
pop
repz
cmp
popl
subl
adc
leave
stos
test
test
jge
in
push
adc
xchg
fs
enter
and
cli
negl
xchg
mov
repnz
inc
scas
jp
xor
call
and
lock
fsubrs
push
ds
test
inc
cmp
xchg
outsb
mov
add
pop
adc
cmp
sbb
push
adc
push
xor
dec
test
mov
cs
cwtl
add
out
sbb
outsl
pop
xchg
nop
pop
or
fcompl
movsl
lret
mov
pusha
cmp
lcall
bound
das
test
adc
jge
loopne
xor
aad
and
sub
out
aaa
arpl
mov
data16
test
lods
sub
aam
int3
add
sub
fs
enter
xlat
mov
dec
and
push
mov
insb
inc
icebp
xchg
add
popf
inc
in
xchg
js
xor
mov
aas
insb
dec
push
adc
sbb
hlt
inc
repz
or
lods
nop
mov
xchg
outsb
dec
jns
pop
mov
dec
test
sbb
xchg
out
addr16
mov
fistps
mov
movsl
das
pusha
stc
sub
vshufps
orl
jp
inc
or
arpl
dec
aad
pushf
and
int3
and
xor
jb
xor
inc
jmp
ljmp
and
notl
sbb
lcall
jmp
enter
mov
adc
popa
jle
pop
sub
sarl
int3
mov
jl
adc
fcomps
out
mov
cmpb
test
or
and
push
lcall
lahf
jb
pop
in
pop
mov
enter
push
fisubs
loop
cltd
sarb
mov
dec
ja
sub
test
push
out
fsubrl
and
out
jnp
cli
stos
sbb
xchg
fildl
bound
cltd
xor
and
pop
mov
aas
int3
or
pusha
add
insl
mov
lcall
and
jns
mov
shll
xchg
in
mov
in
add
lock
cmp
or
leave
sub
jl
mov
pusha
in
mov
shll
mov
push
rorl
or
mov
in
and
mov
idivb
jo
pusha
push
rclb
pop
in
xchg
hlt
int
sbb
lock
xchg
bound
loope
cmpsl
lret
jbe
test
leave
xor
push
jne
inc
xor
mov
repnz
sbb
outsl
jo
xor
shr
call
in
sub
jp
adc
cmpsb
xlat
push
push
shll
jmp
lds
mov
mov
dec
pop
push
push
out
xchg
and
lahf
mov
push
pop
fcoml
jbe
xchg
fsubl
push
test
pop
cmc
push
mov
sbb
xor
subb
jbe
hlt
sti
loop
imul
rorl
adc
mov
mov
jnp
sbb
ljmp
xor
ljmp
add
cs
sub
pushf
lret
mov
jbe,pn
insl
repnz
scas
mov
aad
testb
dec
js
adc
out
icebp
ljmp
or
dec
mov
jno
gs
notb
je
bound
mov
mov
ja
or
xor
fs
mov
js
inc
stc
mov
lock
pop
mov
arpl
fwait
hlt
add
dec
jno
stc
mov
dec
adc
ret
stc
rcl
sbb
add
add
jge
jmp
inc
jno
jle
jb
sub
or
sbbl
cmp
movsb
xchg
jo
mov
imul
fcompl
mov
push
xor
mov
imul
enter
dec
cwtl
movsb
xor
jne
mov
scas
jns
mov
mov
js
xlat
mov
cmpsb
adc
lods
xchg
push
lods
adc
hlt
add
sbb
in
cmp
xchg
mov
icebp
push
pusha
and
fnstcw
push
decb
pop
lcall
xorl
xor
aas
fildl
sbb
pop
scas
leave
ja
inc
xchg
lods
jge
pop
lods
mov
add
aas
dec
cld
orb
in
lock
sbb
xor
pop
cmp
inc
dec
jo
xchg
loope
daa
lds
repz
lcall
test
popa
mov
xchg
sub
cs
mov
shlb
inc
fstps
pop
pop
pop
fstpl
adc
inc
pushf
dec
inc
mov
js
push
test
fsubr
xchg
sbbb
mov
mov
sahf
lcall
xor
cmpsb
dec
sbb
dec
xchg
push
inc
push
mov
lret
ss
xorl
inc
sbb
lcall
int
mov
popa
xchg
iret
cmp
inc
jno
push
jno
mov
xor
bound
mov
icebp
stos
dec
xchg
and
jb
push
popa
ja
cmp
arpl
adc
shlb
mov
xor
sti
ret
sbb
ret
sub
inc
xchg
cwtl
lods
or
push
hlt
ret
nop
fsubp
jecxz
jne
xchg
mov
lcall
loopne
fcompp
jns
add
enter
cmp
sub
mov
jl
fwait
sub
cli
add
out
or
stos
insb
push
out
sti
nop
clc
mov
test
or
movsb
outsl
fsubp
imul
int
in
int3
push
movsl
jae
xor
nop
and
mov
push
jp
out
add
push
mov
add
nop
sub
cmp
jmp
mov
adc
stos
fdivs
cmpb
ds
sbb
pop
push
dec
mov
add
outsb
or
xor
mov
mov
mov
mov
add
out
dec
cld
fs
shlb
aam
scas
dec
and
popf
dec
repnz
aad
xor
jle
sbb
std
fsubs
xchg
aas
div
mov
add
xor
xlat
insb
add
std
dec
or
hlt
xchg
add
repz
loope
sbb
jb
push
ljmp
or
lea
daa
insl
cmc
movsl
aad
push
push
inc
jmp
cld
inc
pop
and
or
xor
fstps
addl
jb
add
dec
sub
shl
addb
sub
cs
out
mov
imul
fs
arpl
out
mov
add
inc
out
mov
xchg
dec
mov
xchg
sbb
addr16
shll
in
xorb
xor
shr
pop
push
jecxz
cmp
rorl
setb
mov
push
insb
stos
rcrl
cmp
aad
stos
int3
inc
insl
mov
mov
in
popa
ss
sti
loope
dec
dec
pop
xor
jle
stc
imull
stos
lcall
enter
jle
arpl
xchg
rorl
cltd
add
pop
jl
or
daa
xor
or
jl
fsts
loop
jge
out
xchg
inc
cmpsl
adc
mov
shl
mov
fisubrs
sub
jg
leave
push
hlt
and
xor
xchg
pushf
ljmp
inc
adc
push
scas
aaa
push
cmpsl
lret
adc
arpl
xchg
inc
loope
sarb
sub
mov
rclb
rcrb
ret
pushf
xor
out
dec
das
inc
ret
xorl
sub
mov
pop
cli
dec
push
dec
sub
leave
mov
daa
mov
cmp
in
insl
push
sahf
cld
ret
lcall
imul
call
jae
pusha
and
loop
mov
cmp
mov
add
xor
fwait
adc
test
cmp
fildll
cwtl
cmp
push
add
fwait
jo
mov
dec
cmp
ret
sbb
cmc
mov
mov
imul
ret
add
jg
jbe
xchg
adc
shlb
pushf
push
repz
loop
inc
popa
outsl
and
les
frstor
push
shll
mov
xor
xor
jno
xlat
cmpsl
mov
in
aas
and
or
add
mov
mov
mov
insl
stc
pop
daa
pusha
lret
test
pop
call
out
jecxz
push
push
andb
or
sub
in
cmp
pushf
shl
mov
jp
mov
out
lret
mov
mov
mov
cmp
cmp
pop
cmc
sarl
pop
jae
stc
sub
aad
jae
shl
add
frstor
add
repnz
fisttps
adc
mov
out
jns
aam
or
sbb
add
add
jno
ljmp
add
fs
das
dec
push
lret
add
fs
jns
dec
and
gs
iret
mov
sub
hlt
xorl
pop
push
addr16
mov
inc
jp
dec
xlat
ss
push
pop
movhps
mov
scas
mov
push
ljmp
fmul
push
rcll
sarl
xor
call
pop
mov
or
add
push
xor
mov
push
jne
push
mov
test
cwtl
test
mov
das
insb
test
push
fdivrs
cmpsl
or
addr16
lret
fmull
dec
loopne
jl
adc
xor
adc
cli
mov
out
and
adc
adc
ret
jmp
scas
repz
pop
pusha
mov
je
aas
in
adc
mov
roll
or
data16
adc
pop
inc
sub
insb
inc
pop
ret
cmp
mov
jmp
push
push
loopne
insl
nop
repz
push
mov
push
rcll
sub
addr16
add
add
mov
cld
push
mov
mov
mov
fcoml
inc
jle
lods
mov
icebp
xchg
cs
cmp
popa
test
fdivl
in
into
dec
pop
sti
xor
cmp
cld
xchg
cmpb
or
cmp
fs
jnp
stos
fst
dec
dec
pop
jo
mov
mov
jbe
movsb
sbb
or
daa
xor
lcall
and
push
das
cmpsl
xchg
out
jb
mov
inc
inc
cmp
mov
mov
add
je
mov
pop
xor
out
mov
jg
xchg
dec
in
mov
fidivrs
dec
addr16
and
jle
ss
fisubs
cmp
pop
or
mov
dec
pop
add
mov
cmp
das
imul
mov
pop
cmp
jle
and
cmp
lods
adc
dec
leave
insb
xor
cmpsl
arpl
xor
pop
mov
pop
cmp
cltd
cs
bound
into
inc
icebp
cmp
ds
sti
imul
adc
mov
arpl
lods
enter
lahf
or
push
aad
pushf
and
in
xchg
push
mov
mov
outsl
pop
cmc
rcrl
pop
xlat
sub
aam
sub
mov
fimuls
push
sub
mov
aaa
fbld
cmpsl
cs
clc
adc
sbb
lahf
fnstcw
gs
sti
mov
lahf
daa
outsb
and
push
dec
in
jne
das
outsb
push
jp
dec
out
insb
jg
mov
fisubrl
xlat
dec
popf
mov
je
loop
fs
dec
out
out
xor
cmc
outsb
out
mov
xchg
jp
xchg
call
dec
mov
jb
pushf
jns
cmp
jne
loop
pop
mov
pop
and
incb
faddl
iret
movsl
arpl
inc
stc
idivb
push
iret
jb
cmc
in
fbstp
or
out
out
movsl
xor
nop
add
xchg
das
subl
insl
sarb
adc
scas
and
jnp
dec
dec
outsb
push
pop
sub
out
dec
push
xchg
adc
jno
mov
adc
adc
into
push
cmc
pop
jge
shrl
dec
push
dec
in
or
jae
popf
cmpsb
push
dec
dec
mov
mov
data16
xor
jo
push
inc
pop
lret
pop
mov
sub
jge
lods
aam
cwtl
int
adc
jmp
out
frstor
ds
iret
das
lods
mov
dec
shlb
adc
dec
lds
popa
lret
xchg
subl
fcoml
cmp
push
and
pop
fnstenv
arpl
jb
vpavgw
or
xor
xor
sti
xchg
mov
movsl
adc
outsb
add
lods
repnz
cmp
cmp
and
outsb
mov
loopne
das
call
lahf
scas
aaa
sbb
mov
repz
adc
movl
fcomps
rcll
js
xchg
ret
test
inc
mov
add
xchg
xchg
pop
xchg
push
dec
sub
mov
out
xor
inc
add
popf
roll
mov
loop
inc
scas
loop
add
scas
sbb
inc
pop
push
mov
and
test
data16
cmpb
test
movsl
sub
pop
sbb
mov
and
popa
daa
ret
xor
stc
mov
add
hlt
sub
sub
sub
pushf
fcompl
inc
aam
adc
mov
ljmp
stc
xorl
aas
ret
jbe
les
ficompl
pop
lods
inc
lods
or
xchg
push
or
icebp
mov
jnp
push
xchg
push
loop
sbb
ljmp
adc
inc
dec
cmp
push
addl
rclb
lds
iret
inc
in
inc
clc
inc
aaa
popf
sbbb
dec
fucomp
addr16
adc
out
sub
lds
subb
iret
or
je
cmp
push
jmp
fsubs
mov
pusha
add
adc
iret
test
mov
out
in
jns
stc
mov
pop
stos
adc
shll
clc
ja
or
mov
pop
push
rcll
xor
jmp
pop
mov
stos
mov
add
pop
cmp
ds
out
data16
outsl
mov
cmp
cwtl
adc
adc
inc
mov
in
inc
sahf
adc
aam
mov
pop
cmp
jno
orl
aam
pushf
xchg
dec
es
pop
sbb
pop
ds
jl
jne
sti
mov
pop
inc
inc
les
lahf
sti
sub
insl
aad
xor
imul
cmc
test
bound
test
test
imul
ljmp
ds
adc
fwait
cmpsl
xor
rcrb
mov
cmp
or
push
or
mov
add
scas
xchg
sti
mov
cld
in
sar
fadds
popa
jmp
xchg
add
mov
imul
jmp
adc
scas
ficompl
pop
mov
mov
cmp
ljmp
sub
arpl
mov
pop
and
clc
pushf
stos
cmc
xchg
mov
sub
and
mov
into
push
xorl
in
mov
xchg
pop
push
mov
dec
lods
aas
sub
mov
xchg
out
lcall
cld
outsl
mov
jbe
and
aas
pop
mov
shll
xchg
lods
popf
out
lcall
xchg
or
and
insl
pop
sbb
jg
jle
mov
insb
std
push
in
andb
cli
cmc
xchg
stos
mov
sahf
jno
sbb
arpl
call
cmp
sahf
cmp
pop
jne
adcl
sub
pop
push
dec
cmpsl
sub
repnz
adc
out
xchg
or
inc
pushf
adc
icebp
ds
lods
xchg
jmp
add
aaa
cmc
sbb
andw
xchg
aaa
enter
sahf
test
push
jp
pop
icebp
adc
bound
and
loop
fsubr
push
inc
push
lahf
mov
stos
mov
leave
mov
es
mov
xchg
imul
or
int3
mov
mov
in
cmp
outsb
mov
pushf
jne
test
xor
mov
xchg
mov
mov
out
enter
fimuls
pop
inc
out
std
leave
loope
cmpsb
fisttps
stos
stos
pop
cli
adc
aaa
arpl
mov
mov
pop
cmp
mov
xor
mov
mov
loopne
pusha
ficompl
inc
fnstenv
addr16
movsb
mov
and
lahf
sbb
inc
loope
lahf
in
and
lahf
pop
or
shrb
fwait
pushl
into
push
push
in
ljmp
lea
out
mov
loop
and
push
rcll
out
pop
stos
mov
mov
jb
aad
push
fisubrs
push
insb
mov
push
stos
inc
aaa
js
lock
fldl
movsl
xor
in
adc
sub
push
mov
or
lds
movd
ret
int
je
push
scas
dec
rorb
cltd
test
pop
int3
les
jae
loopne
pop
pop
adc
push
stos
jnp
push
sub
js
mov
js
xchg
pop
push
jmp
pop
jp
scas
xor
dec
inc
jecxz
inc
movsb
mov
jg
aas
sbb
mov
push
mov
cmp
in
hlt
iret
mov
jp
iret
lahf
lods
mov
jns
inc
insb
ret
jmp
add
or
fstl
dec
daa
and
push
adcb
jo
pop
and
cmpl
push
ret
aas
lods
popf
sub
xor
repz
and
dec
cmp
and
popf
jno
imul
pop
cmp
outsb
sub
addr16
pop
out
add
mov
imul
movsb
cmp
lods
orb
mov
or
mov
fdivs
iret
imul
mov
sbb
daa
fdivs
ret
outsl
cmp
push
int3
cmp
addr16
pop
ret
sub
mov
mov
orl
and
pop
es
lds
popf
idivb
mov
rorb
popa
cmp
lea
scas
jnp
sarl
test
jle
imul
xchg
mov
dec
insb
jmp
mov
rcrl
gs
rol
push
int
adc
ljmp
mov
dec
sub
inc
xorl
or
pop
repz
add
and
push
add
imul
mov
fwait
jo
sub
dec
add
add
movsl
adc
test
mov
bound
pop
pusha
dec
inc
repz
into
add
les
js
aad
xlat
pusha
sub
in
push
addr16
jecxz
dec
das
mov
ret
roll
mov
fmull
and
stos
test
popf
inc
sub
fwait
iret
shrb
mov
in
imul
and
into
and
cmove
sbb
pop
gs
or
adc
bound
xchg
push
repnz
addr16
jp
dec
mov
dec
sarb
mov
mov
sbb
jno
pushf
js
mov
push
data16
adc
inc
cmp
adc
test
mov
iret
xchg
cmp
add
jg
rolb
call
cli
mov
pop
js
add
out
es
in
jp
aad
adc
sbb
dec
inc
or
ret
movsb
fistps
mov
mov
sti
rcrb
pop
and
cld
push
and
adc
push
aaa
fadd
fsubs
cmp
lret
xor
aad
fmulp
lea
push
jb
xchg
mov
add
clc
movsb
loope
jb
nop
jbe
sti
in
out
cltd
cwtl
cmpsb
test
imul
jmp
mov
fdivp
nopl
push
es
rclb
pop
out
jmp
jno
mov
mov
xchg
jl
push
cmp
test
insb
stos
mov
cmpsb
cmp
mov
mov
or
mov
lock
iret
jmp
add
inc
pusha
add
fimuls
outsb
add
sbb
js
xchg
ds
idivl
cmp
imul
xchg
out
sub
rcrb
xchg
js
das
adc
mov
mov
add
mov
out
jl
iret
mov
add
in
cmp
fistl
stos
aad
push
push
dec
mov
out
dec
mov
inc
ds
mov
int3
iret
sbb
mov
aaa
lods
pop
clc
or
jmp
mov
pop
in
dec
and
jno
lret
icebp
push
cmp
pop
mov
push
lods
or
mov
mov
pop
pop
cli
xchg
push
mov
nop
mov
xchg
push
xchg
mov
popf
mov
lahf
enter
les
inc
shll
jp
jl
sbb
addr16
sub
mov
scas
rcrl
dec
push
lret
adc
mov
mov
xor
dec
cs
pop
adc
lods
cld
jne
push
inc
mov
pop
lahf
iret
mov
scas
xor
push
je
loop
dec
seta
lds
bound
xor
shl
push
iret
fbld
pop
pop
idiv
test
or
dec
cmp
je
add
jg
add
jno
fidivl
ret
dec
addr16
popf
mov
fisubl
je
fsub
bnd
mov
push
mov
jp
mov
stc
push
mov
pop
imul
aad
xchg
push
inc
and
mov
add
cmp
add
cmpsl
ret
push
xor
lds
sbb
fsts
imul
push
xor
pop
movsb
orb
mov
inc
inc
movsl
sbb
aas
pusha
mov
mov
call
in
jnp
push
xchg
mov
push
dec
mov
cmpb
pop
adc
lds
icebp
sbb
fwait
cmp
clc
pop
jmp
jbe
shrl
mov
clc
cmpsb
pop
push
push
imul
and
or
dec
pop
mov
xor
mov
cmc
jo
mov
pop
push
sbb
push
mov
mov
mov
lret
js
xor
xchg
cmpsb
into
daa
in
shr
arpl
dec
inc
test
stc
cmp
mov
push
daa
lret
jbe
sbbl
cmp
sahf
push
xor
sbb
pop
mov
adc
cmp
je
push
dec
mov
mov
xchg
add
call
xor
xchg
loop
push
inc
xor
int
iret
mov
jg
mov
aad
cmc
sub
dec
subb
dec
add
call
arpl
dec
enter
adc
cmc
push
leave
ret
loop
xor
xor
cli
hlt
and
jnp
lods
add
fldenv
addb
lock
out
ds
stos
push
xchg
push
loope
cmpsb
xor
roll
scas
xor
push
add
rcl
push
adcl
inc
ror
in
in
hlt
sti
jno
gs
sub
and
xchg
xchg
sbb
sbb
jbe
repz
div
test
imul
fcmovbe
int3
push
jb
dec
sbb
popf
push
push
outsl
push
repz
adc
cmp
cmp
xor
ret
aaa
adc
and
test
push
pop
stos
mov
movsb
adc
pop
fdivl
sbb
mov
mov
daa
lahf
lret
fsubr
pop
jno
enter
je
pop
cwtl
pop
shl
and
inc
inc
fdivr
lods
cmp
inc
inc
in
mov
mov
scas
scas
cmpsl
inc
inc
jae
sbb
movsl
ret
fcmovbe
mov
and
adc
sbb
xchg
xchg
xlat
rorb
rol
in
pushf
das
mov
cmpsb
push
sbb
movsb
js
lds
nop
cmpsb
push
icebp
add
add
jl
iret
jae
cltd
push
mov
sub
aam
mov
inc
sbb
lcall
xlat
pop
inc
xor
lret
lock
loop
xor
jmp
sbb
icebp
dec
clc
js
das
add
mov
mov
hlt
mov
aas
inc
movsl
mov
gs
lcall
repz
xor
mov
add
stc
pop
dec
inc
dec
into
aad
insb
and
mov
or
aaa
xchg
pusha
notb
lds
mov
cltd
xor
push
movsl
lods
cmc
mov
es
js
scas
loope
add
jge
cmp
sarb
arpl
clc
pop
pushf
xchg
loopne
fdivl
jg
dec
mov
aaa
stos
xchg
and
mov
xor
scas
jg
pushf
out
imul
cmp
in
into
pusha
lret
cmpsb
mov
daa
shll
xchg
divb
nop
and
mov
cli
sub
in
or
jecxz
loopne
aas
xor
test
pushf
les
imul
sarb
orb
fidivs
jno
aas
mov
and
push
mov
insl
ret
lea
cmp
sbb
mov
pop
dec
ja
xor
iret
or
mov
fstpt
jns
sbb
adc
fisubl
adc
aad
ftst
sbb
lods
sbb
pop
mov
sub
or
mov
jb
dec
sbb
fldt
mov
test
push
stos
add
int3
sub
enter
xor
inc
sbb
and
mov
icebp
cltd
xchg
mov
dec
test
xchg
repnz
shll
js
mov
cmc
adc
movsl
test
loopne
jno
into
rolb
cmp
dec
les
imul
sub
jge
jb
sub
sub
nop
xor
xlat
xchg
das
outsl
imul
fstpt
sahf
je
jno
or
push
xchg
mov
out
inc
adc
lods
pop
cmpsl
scas
out
or
mov
ret
ja
dec
dec
repz
stos
or
pop
lods
pop
mov
lock
int
xchg
fnop
push
cmpsb
mov
pop
push
js
icebp
lcall
jle
jl
pop
push
mov
enter
or
inc
scas
lods
sub
jl
or
leave
jb
cwtl
push
in
fdivl
pop
xchg
imul
aad
jmp
cmp
pop
and
icebp
aaa
fdiv
in
popa
call
jae
or
sbb
jno
push
out
lahf
xchg
pop
and
iret
dec
cmp
pusha
sbb
lcall
psubw
in
mov
xchg
cli
jle
mov
cmp
popf
movl
and
or
movsb
xor
movsb
fcmove
nop
shl
mov
inc
movsl
sub
notb
aaa
fldenv
cmp
orb
stos
mov
mov
push
push
jnp
cmovae
or
add
cmpsb
adc
sub
pop
cmpsb
add
xor
jns
fistpll
and
push
iret
push
dec
bnd
mov
lea
cmp
add
cltd
or
add
mov
pop
ds
int
jnp
stc
add
cmp
mov
movl
scas
xor
sub
and
inc
pop
push
imul
aas
cltd
fs
sbb
pop
mov
xchg
cli
shlb
xchg
sti
jmp
add
mov
xchg
inc
fwait
loop
pop
ret
bnd
ds
mov
cmpsl
pop
out
shlb
pop
mov
dec
add
sbb
outsb
stos
inc
inc
mov
and
adc
lahf
xorl
ror
mov
jnp
xchg
dec
aaa
mov
data16
fwait
push
shr
jno
test
add
pop
fisubrl
pop
call
adc
stos
mov
lods
jno
xor
add
roll
and
aam
mov
or
loop
add
jp
adc
push
rcrl
and
dec
mov
pop
lds
jg
mov
ss
in
sub
addb
lds
fistpl
clc
cmp
xlat
jo
js
pop
repnz
mov
rclb
xor
sub
cli
jns
int
push
outsb
or
jmp
sbb
iret
mov
fwait
push
or
sub
pop
adc
and
lods
rorl
test
add
add
jb
repz
pushf
dec
adc
sti
xor
sahf
in
aam
ss
or
jle
lcall
add
jb
adc
mov
mov
mov
inc
shll
xor
aas
cmpsb
mov
xchg
cltd
xor
arpl
inc
pop
sub
sub
repnz
bound
pop
push
pusha
xchg
out
cli
sub
mov
hlt
jg
jge
cmpl
ror
loop
sub
out
push
sub
pop
push
fbld
scas
or
inc
dec
pop
xor
jno
mov
cmc
stos
push
push
jne
pop
out
jmp
in
sub
fucom
call
cmp
cmpsl
and
or
nop
repz
and
pop
add
push
adc
inc
jle
lret
int3
test
mov
mulb
pop
test
sbb
out
ret
cmp
mov
mov
pop
mov
fs
ss
sarb
jmp
and
push
mov
test
dec
imul
or
arpl
jno
pop
icebp
dec
dec
outsw
lret
aad
mov
push
jge
mov
aaa
rorb
loop
enter
mov
sbb
es
add
cs
cmpsl
lret
xor
in
mov
movsb
adc
shll
push
pop
loop
stc
inc
mov
mov
icebp
imul
sub
out
jmp
xor
jnp
js
mov
imul
imul
and
inc
ror
sub
push
add
orb
les
or
add
sbb
jle
adc
push
int
pop
xchg
daa
icebp
jecxz
jecxz
xchg
xor
pop
mov
adc
rcr
sub
insb
aas
push
push
fldl
mov
sub
ret
icebp
lret
pop
jmp
aam
or
sarb
stc
pop
cmp
outsb
shl
insl
adc
lret
imul
adc
ret
push
sbb
dec
mov
mov
sub
or
sub
sub
push
inc
pop
cmc
xorl
imul
int
pop
and
pop
fcoml
fs
mov
test
dec
add
mov
ja
xor
add
mov
std
pop
lods
fsubl
push
jne
cmp
sbb
pusha
jg
pop
pop
fldt
add
sarb
sbb
rolb
fdiv
sbb
pop
lock
mov
sbb
pop
sbb
icebp
pop
inc
fs
push
cmp
xchg
rorl
sbb
aam
leave
inc
and
aaa
push
inc
cmp
fsts
and
and
fwait
mov
cld
push
xchg
out
mov
aam
inc
sbb
stc
or
sbb
popf
push
xchg
mov
inc
mov
ds
add
adc
lds
sbb
fisubl
nop
xor
and
lds
jl
mov
lock
lahf
mov
push
xchg
cs
js
pop
andl
inc
xchg
jbe
mov
or
dec
test
xchg
in
dec
testl
adcb
stos
jno
lods
popa
leave
sti
clc
std
fwait
repnz
test
jmp
test
in
dec
loopne
jp
sbbb
and
sub
fdivrl
adc
pushf
adc
scas
cld
dec
jne
daa
jle
les
xor
je
jb
repnz
mov
inc
pop
nop
push
ret
xor
mov
lock
sha1rnds4
cmp
sbb
movsb
push
fcomps
cs
rorl
inc
outsb
cmp
mov
sti
rcll
mov
rorl
andb
mov
mov
loopne
cs
popa
das
mov
aad
lahf
enter
and
add
insb
adc
mov
sub
das
arpl
divb
inc
adc
jae
mov
and
fisttpll
jno
repz
lods
mov
mov
icebp
dec
insb
add
cmp
loop
mov
test
adc
and
adc
inc
enter
jmp
and
mov
push
out
xchg
scas
out
notl
inc
dec
pusha
sub
cmp
and
bound
jb
out
mov
adc
add
jp
int
pop
pushf
mov
mov
adc
rcr
add
cmp
mov
clc
in
mov
push
mov
xor
inc
mov
or
cmc
les
scas
lea
jns
orl
lock
xor
test
pop
les
xor
cmpb
jns
in
sub
inc
imul
cs
xchg
cmpsl
test
jecxz
ficompl
addb
sub
push
dec
mov
out
push
add
std
mov
dec
pushf
stc
cwtl
andl
cmp
sbb
cld
xchg
js
xor
cltd
mov
ljmp
sub
dec
ret
or
ljmp
adc
adc
push
mov
xor
je
jmp
lods
sar
push
test
clc
dec
fisttpll
sub
adcb
add
sahf
ss
xchg
cmp
jmp
in
jbe
xchg
push
mov
adc
xchg
iret
insl
popa
push
mov
pop
out
sub
ja
mov
ljmp
mov
mov
les
add
jbe
or
push
lea
inc
sbb
cmp
pop
aas
pop
push
mov
aam
nop
mov
mov
jae
leave
mov
pop
xor
jle
add
jb
test
mov
mov
fdivs
je
pop
das
add
mov
inc
push
dec
xor
imul
inc
jno
pop
mov
ror
dec
sub
stos
shlb
inc
popa
mov
adc
mov
sub
dec
push
pop
adc
cmovbe
xor
sbb
lcall
test
mov
sub
fstpl
and
aas
fpatan
push
adc
addb
add
sti
sti
test
xchg
sbb
inc
xor
xchg
dec
ret
or
fwait
jmp
fnsave
mov
das
and
fcomp
mov
push
push
mov
cmc
mov
fldt
push
aad
sti
test
or
jmp
inc
cld
pop
xlat
add
push
icebp
dec
pop
imul
jmp
jmp
nop
cltd
dec
inc
rcrb
rcl
mov
pushf
popa
inc
out
adc
aas
or
push
pop
mov
jmp
and
sbbb
pop
inc
mov
mov
fisubrs
push
lea
imul
out
pushf
incb
inc
fisubrs
ljmp
insb
std
or
in
test
test
and
cmp
mov
mov
push
xlat
cmp
lcall
cmpsl
dec
xlat
mov
fistpl
stos
mov
pop
jo
mov
push
jle
movsl
icebp
xchg
adc
cltd
popa
and
orb
mov
xor
jg
mov
out
fisubl
dec
outsl
pop
roll
das
cmc
dec
dec
push
pop
push
add
stos
test
mov
sbb
pop
ljmp
divb
and
fbstp
sbb
mov
push
roll
movsb
pop
cmp
popf
lds
push
xchg
sti
adc
sub
std
shr
sahf
into
push
push
push
mov
out
jns
jle
push
js
cmpb
jp
imul
push
jne
cltd
jno
fsubl
push
push
int3
das
and
xor
insl
aad
push
daa
ljmp
xchg
pop
cmp
fcoms
or
ja
sub
inc
popa
inc
inc
mov
enter
pop
loop
mov
xchg
push
shrb
pushf
data16
jle
mov
xchg
outsl
xchg
jbe
cmpsl
mov
xchg
cli
pushf
imul
mov
pop
insl
inc
fisubl
pop
rcrl
adc
inc
aaa
mov
les
inc
fsubl
jo
push
xchg
or
adc
test
adc
xorb
fs
jbe
push
sbb
imul
stc
in
fstl
pop
dec
test
sbb
mov
inc
xor
outsb
dec
lahf
movsl
shrb
std
rcll
or
mov
jg
mov
inc
xchg
or
outsb
cmpsl
cmp
xorb
cld
insl
loop
sbb
addr16
jecxz
xor
mov
pusha
js
sbb
mov
pushf
aaa
inc
mov
mov
rolb
sub
inc
xchg
cmp
mov
ss
fildl
xlat
mov
out
cmp
and
outsb
popa
stos
lea
cmpsl
pushf
xchg
adc
arpl
xchg
pop
imul
adc
pushf
cmpsb
inc
fsubs
dec
or
dec
mov
es
xor
pop
xchg
daa
andl
jb
adc
jg
mov
dec
shl
pushf
pop
addr16
test
stos
cmp
in
ds
addr16
jp
std
add
out
sbb
inc
fildll
daa
adc
popa
dec
lods
movsl
mov
xchg
inc
mov
call
mov
inc
pop
xlat
mov
jae
pushf
subb
punpckhbw
outsb
in
ret
adc
lahf
in
jmp
hlt
and
lret
sub
jno
mov
sub
movsl
mov
out
adc
jae
jo
jbe
sbb
mov
cmpb
add
jge
cmp
subb
loopne
and
mov
sub
adc
shrb
jo
cmpl
div
xlat
jp
aad
lock
bound
popa
mov
or
in
inc
scas
bound
cmp
test
in
inc
push
or
bound
mov
and
xchg
stos
jecxz
insl
andl
rcl
inc
adcl
outsl
pop
sub
push
add
sbbl
jecxz
fs
sbb
fbld
mov
pop
int3
out
push
cmp
dec
xchg
sub
lods
test
mov
push
int
out
sbb
xor
lods
fsubs
and
cmp
in
xchg
add
or
in
aad
fcoms
sarb
mov
cmpsl
jo
outsb
sub
adc
jns
mov
negl
cmp
and
jb
icebp
dec
mov
lods
xchg
mov
or
mov
aad
les
hlt
xor
sub
ds
adc
ret
dec
and
add
jge
lret
into
push
jo
ret
aam
out
fisttpll
sbb
push
cmp
add
sub
fcmovne
ror
xchg
addr16
pusha
sub
enter
adc
and
dec
mov
add
sbb
dec
or
out
or
mov
inc
data16
xchg
xchg
or
sti
scas
or
add
pop
insl
ja
adc
inc
sbb
sar
xchg
in
sbb
pop
pop
cmc
and
bound
vrcpss
push
mov
test
mov
cmp
aam
dec
sbb
shl
mul
xchg
aas
jns
xor
dec
dec
sbb
or
xor
repz
aaa
jge
push
push
icebp
push
fwait
push
shlb
adcl
pop
sub
adc
filds
jg
test
push
cmpsl
movsb
jb
mov
aam
fidivrl
ficomps
rcl
mov
pop
jb
loopne
push
lahf
testl
mov
cmp
mov
push
nop
dec
rcl
sub
push
cmc
rcll
xchg
cmpsb
push
xchg
xchg
or
notl
sbb
mov
cli
push
aam
jb
sub
inc
mov
shlb
icebp
aaa
in
xchg
xchg
sub
xchg
cmp
jecxz
xor
rclb
loope
add
out
repz
jns,pn
imul
push
hlt
mov
sbb
mov
mov
leave
pop
add
popa
aam
and
pop
pushf
ficomps
push
cwtl
mov
dec
in
addr16
mov
mov
add
xchg
loopne
lods
imul
mov
jne
in
aas
hlt
cmc
pushf
mov
jl
mov
mov
xor
popa
test
push
test
pushf
pop
mov
or
daa
xchg
add
push
cmp
insl
mov
jle
ret
test
outsl
xor
popf
aaa
add
xchg
rol
and
les
xor
ror
popa
iret
imulb
imul
mov
and
xchg
push
addr16
mov
mov
je
sub
movsb
rolb
int
out
fcmovb
pushf
push
jbe
iret
jmp
ret
test
mov
cli
and
mov
movsl
xor
lods
in
mov
sub
sub
shlb
lods
cmp
movsl
cmp
rclb
cli
shlb
mov
in
mov
insl
repz
push
mov
push
cmpl
inc
xchg
push
or
aaa
insl
push
outsl
or
in
decl
pop
sbb
cmp
push
aam
mov
daa
jo
xchg
mov
push
movsb
and
arpl
and
test
mov
mov
push
add
jp
push
movsl
les
sbb
mov
jmp
xchg
call
repz
xchg
fmull
push
mov
hlt
mov
pop
xchg
xchg
jmp
das
xchg
imull
shll
call
fnstcw
jno
fdivrl
dec
int3
xor
pusha
sbb
lods
mov
int3
popa
cmc
cwtl
das
adc
imul
add
jge
leave
jne
loopne
sub
jb
xlat
jg
jno
jl,pt
in
adc
add
inc
push
push
outsl
shlb
lds
test
jns
outsb
xchg
inc
lret
fdivl
sbb
mov
add
rorb
dec
xor
mov
ja
xor
aam
adc
xor
dec
sbb
jg
push
andps
leave
sub
mov
fisubrs
pusha
sub
dec
xchg
outsl
pop
sti
rcrb
pop
lods
data16
inc
mov
add
inc
int
pop
dec
in
cwtl
daa
dec
mov
ficompl
pop
int
in
int3
je
inc
sbb
pop
or
xlat
clc
pop
adc
push
sub
rorb
sti
jl
push
sub
dec
jge
js
and
sbb
adc
pop
lret
lcall
aaa
mov
xchg
icebp
sarl
bound
nop
xchg
push
loop
sub
xchg
adc
inc
insl
push
icebp
lods
push
sub
sarb
ljmp
inc
mov
and
pop
jp
dec
dec
out
jp
fadd
insl
fidivrl
dec
dec
xchg
ljmp
and
inc
in
xchg
outsl
push
inc
adc
xchg
push
xchg
sbb
mov
xor
push
cld
in
inc
ljmp
dec
cmp
xor
mov
out
jl
sarb
jbe
pop
adc
and
add
loope
sub
sub
jne
cmpsb
daa
jl
and
jno
dec
insl
leave
cmp
push
xchg
cltd
jl
mov
jmp
mov
mov
popf
xor
dec
stc
insl
and
nop
cld
daa
dec
sub
pop
out
pop
out
pusha
into
clc
aad
jp
mov
cmp
mov
add
jns
xchg
dec
dec
aas
push
push
into
mov
stc
popf
movsl
mov
imul
jg
rcll
sub
pop
mov
je
push
or
pop
dec
push
cmp
leave
pop
ss
cmp
fistpl
or
or
arpl
mov
sub
xchg
cli
mov
xor
cmp
push
pop
xor
push
inc
mov
lahf
xchg
push
lret
pop
add
dec
lds
mov
or
idiv
lcall
mov
mov
sarb
push
sar
stos
lahf
scas
outsl
lock
lods
call
adc
div
adc
push
das
mov
enter
xchg
lret
fisttpl
divl
dec
pushf
jnp
leave
sub
xchg
dec
sbb
lret
push
aam
lods
addl
dec
inc
mov
repz
test
inc
pop
cmpsl
cmc
push
fdiv
fdivrs
dec
bound
sbb
push
pop
push
pop
mov
xor
scas
xchg
scas
mov
ficompl
gs
cmp
stos
data16
insb
out
xchg
dec
push
mov
xchg
mov
repnz
call
cmp
xchg
add
outsb
adc
stc
mov
or
jae
xor
push
imul
pop
or
lock
addr16
mov
mov
or
xor
mov
or
or
cmc
stc
lret
mov
push
rcll
leave
outsl
ret
dec
in
mov
test
cwtl
outsl
mov
das
dec
ret
repz
adc
aaa
hlt
popf
sarb
test
adc
insl
push
in
into
js
call
lods
aam
bound
je
xchg
dec
push
sub
shll
ja
pop
lret
mov
jnp
into
mov
push
push
inc
cmpsb
add
neg
push
lock
or
rol
pop
push
shl
nop
subb
enter
sti
push
inc
ljmp
insl
jno
testb
pop
pushf
fmul
cs
leave
mov
dec
cmpsb
push
fs
in
icebp
pop
int
mov
and
adc
movsl
push
stos
das
xor
mov
xor
mov
cmpl
xor
or
arpl
int3
mov
fadds
xor
pop
xor
movsb
mov
adc
pop
in
pop
stos
dec
repnz
scas
xor
js
pop
xchg
pop
mov
ja
add
lret
adc
mov
sbb
test
push
shl
add
mov
sahf
ficompl
in
mov
in
shll
ret
idivb
and
mov
fisttps
sbbb
jnp
lds
loop
pop
mov
pop
ffree
shlb
or
xchg
push
mov
int3
xchg
add
jo
xor
jne
pop
inc
out
mov
push
es
imul
out
sbbl
ret
and
sbb
das
jp
insb
mov
cwtl
push
enter
clc
sar
inc
ljmp
lahf
jae
aaa
in
aam
mov
retw
inc
lds
mov
mov
mov
add
rcrl
xchg
mov
push
loope
xchg
jne
lret
aad
sbb
mov
mov
call
repnz
inc
push
out
mov
cmpb
inc
ja
pop
jns
fwait
dec
mov
js
push
dec
dec
aas
pop
gs
test
adc
or
cli
leave
popa
sub
fsubs
jbe
bound
loop
das
inc
movsb
clc
adc
aam
mov
out
cs
mov
into
xor
repz
dec
push
loopne
das
xchg
imul
hlt
jle
pop
cwtl
sbb
fsubl
mov
movsw
pop
mov
scas
arpl
dec
jae
lahf
outsl
push
sub
mov
add
mov
mov
mov
fs
lods
and
shlb
inc
je
test
push
mov
das
xchg
scas
xchg
xor
sbb
jae
test
ds
dec
jmp
mov
adc
adc
popa
sti
mov
cmp
mulb
cmp
stc
adc
inc
adc
add
fs
cmpsb
jp
adc
inc
mov
jge
stc
dec
in
cmpsl
jge
and
inc
dec
fnstenv
or
xchg
bound
pop
pop
in
or
pop
int
movsl
hlt
pushf
into
adc
lret
inc
popf
clc
nop
jbe
xchg
sbb
xlat
or
adc
jno
gs
test
shrb
ljmp
mov
aaa
inc
lret
adc
push
fsts
sti
inc
adc
or
ja
sub
jl
dec
scas
mov
imul
leave
jmp
add
enter
cmpl
or
pop
andb
xchg
pop
cmp
dec
shll
movsl
and
cli
pusha
jbe
jg
mov
ljmp
sbb
push
jno
mov
call
fiaddl
lods
idivl
rolb
sbb
in
icebp
es
jp
xchg
lods
pop
dec
lock
ja
sti
sbb
ret
out
out
clc
and
mov
adc
scas
mov
pop
jo
dec
lds
in
add
dec
pop
sub
xor
inc
ud2
data16
mov
inc
mov
mov
jb
mov
out
xlat
cltd
pop
jp
jl
enter
loopne
subl
bound
adc
loop
popf
sar
int3
aaa
dec
stos
dec
loopne
adc
outsl
xorl
push
cmp
inc
xchg
iret
les
into
sahf
or
and
in
push
test
inc
dec
mov
data16
lock
test
cmp
fnstsw
ljmp
jmp
sbb
xlat
loope
sub
int
mov
outsl
orl
mov
mov
out
shlb
mov
cmp
ss
lods
lahf
ds
movsl
fstps
cmp
jp
xchg
fndisi(8087
push
adc
sbb
mov
jae
std
ljmp
dec
mov
into
ja
sbb
xchg
mov
mov
and
dec
inc
or
fiadds
jmp
jae
dec
popa
out
cltd
add
int
mov
jne
addl
xchg
pop
cmp
adc
push
aaa
mov
pop
popa
jecxz
fs
popf
push
push
pop
das
mov
push
cmp
pop
ficomps
into
ret
es
cmp
into
push
imul
xchg
adc
arpl
icebp
push
mov
jo
lock
out
mov
out
or
mov
cmpsb
fldl
das
push
das
pop
push
imulb
dec
sbb
xor
shlb
mov
cmp
dec
mov
aas
clc
hlt
cmp
jne
cmp
outsl
out
push
dec
mov
fwait
dec
mov
dec
roll
jmp
insb
pop
sbb
ds
test
lret
add
ret
adc
lahf
mov
mov
mov
lods
dec
loop
negl
push
xor
cmp
loope
jp
daa
out
mov
iret
movsl
sti
adc
add
push
stos
mov
cwtl
sbb
pushf
cmpsb
insb
jmp
cs
lcall
nop
fidivs
mov
movsl
lcall
adc
repnz
pop
sbbb
cmp
and
mov
pop
mov
cld
inc
push
push
incl
or
rorb
adc
je
mov
push
xor
sub
in
xchg
loope
jo
xchg
push
test
mov
adc
ljmp
test
inc
stc
dec
dec
jle
lcall
push
cmp
xchg
xor
sub
ds
sbb
pop
xchg
mov
fidivs
fsub
fs
pop
pushf
scas
cmp
rorb
sbb
xchg
push
pop
mov
decl
cs
imul
divl
enter
in
mov
pop
divb
rorl
ja
xchg
inc
outsb
pop
pushf
sub
push
push
or
das
push
stc
cs
and
inc
dec
push
sub
fnstcw
push
into
loopne
and
out
insb
mov
and
mov
sbb
xchg
jmp
pop
sbb
mov
jo
sub
mov
cmp
sbb
mov
pop
jg
adc
lret
repnz
cmpsb
dec
cli
pop
ss
call
mov
cwtl
jecxz
inc
lahf
mov
dec
xchg
push
push
loope
xchg
dec
lea
or
in
jnp
inc
cmc
and
jb
xor
add
ds
adc
ja
movsl
ja
cmp
mov
jg
and
mov
xchg
repnz
mov
rcl
aaa
mov
movsl
pop
adc
lds
sarl
hlt
sahf
dec
jge
rcrl
pushf
mov
cmp
outsl
mov
xchg
popl
push
aas
in
mov
pop
mulb
inc
cmp
lret
pop
pop
cltd
mov
fdivs
push
sbb
mov
stc
loop
sbb
leave
sti
pop
lea
stos
dec
pop
xlat
inc
xchg
and
push
gs
popa
mov
pop
and
jle
push
and
inc
jo
aad
adc
mov
movsl
jae
xlat
dec
repnz
add
or
xchg
fs
arpl
rol
or
jns
fsubrs
mov
das
mov
aaa
xchg
or
xlat
decl
js
cltd
push
mov
add
xor
xor
sub
lret
and
sbb
mov
mov
fsubrp
mov
sahf
mov
push
andb
sbb
push
adc
xchg
lea
popa
enter
popa
testb
or
pop
mov
repnz
imul
mov
mov
dec
mov
aaa
mov
pop
cmp
jmp
pop
aas
cmpb
sbb
sbb
ret
mov
xchg
aad
add
xor
std
iret
and
out
push
fisubrl
mov
xor
lds
lret
dec
push
enter
sbb
nop
mov
pop
paddw
cli
aas
mov
xor
cmp
ljmp
outsb
imul
mov
movsl
adc
jns
mov
stos
movsl
lret
pushf
and
aam
enter
enter
mov
or
mov
nop
in
scas
sbb
adc
jns
in
stc
cs
jl
test
and
insl
mov
ss
mov
xchg
or
push
movsl
sar
adc
fcomi
jle
mov
pop
out
jbe
shrl
icebp
cmc
inc
jb
jmp
dec
add
cwtl
pop
push
sbb
xchg
push
out
or
jns
scas
mov
rclb
jle
inc
inc
ret
inc
outsl
or
ss
sub
or
inc
dec
cli
add
sahf
scas
ja
sbb
sub
scas
or
jmp
out
jmp
cmc
jp
cmp
cltd
out
loope
or
mov
out
mov
xchg
aad
adc
sbb
xor
mov
js
loop
popa
sbb
call
fdivs
xor
cmp
jb
dec
aam
lahf
mov
jns
in
dec
push
xor
ds
lahf
decl
xchg
daa
sti
std
xchg
mov
fnstenv
xor
push
jg
or
push
pushf
in
pop
pop
test
rcr
test
stos
push
outsl
outsb
fadd
mov
loope
outsl
inc
and
popa
xor
xchg
xchg
fcoml
in
jmp
mov
loop
mov
or
mov
or
int
inc
sarl
pop
add
out
fiadds
in
ds
mov
mov
xlat
push
test
adc
cmp
jmp
cmp
adc
mov
lret
fisubl
shlb
rcrl
arpl
and
add
add
fstl
cmc
jne
arpl
push
jne
adc
mov
jge
inc
ss
and
mov
sti
and
sbb
xchg
push
cmpsb
sub
ret
fdivrs
into
ljmp
push
inc
hlt
imul
les
jge
loop
jl
pop
std
daa
jbe
mov
mov
xor
mov
cli
mov
cs
pushf
testb
imul
cld
adc
aaa
sarl
into
dec
and
imul
fstl
inc
push
jae
or
push
or
dec
push
cmpb
rcrl
push
jns
push
dec
gs
inc
xchg
movsb
aam
push
jo
lock
dec
jg
nop
shlb
fadds
jl
cmpsl
or
int
pushf
adc
cmpsb
and
cmp
stos
gs
fdiv
es
adc
popf
add
shlb
mov
fwait
push
xchg
lret
sbb
jmpw
or
jae
lcall
or
sbb
jle
cwtl
and
sahf
pusha
lahf
push
fsubs
lds
fisttpll
std
mov
xor
xchg
gs
stc
mov
loope
sbb
jp
inc
push
push
rcll
cmp
mov
das
hlt
mov
push
mov
ljmp
mov
push
push
add
ds
push
and
xchg
orl
adc
cmp
test
shl
push
mov
push
jg
xchg
or
jecxz
sbbl
dec
addl
mov
xchg
jecxz
sbbb
idivl
aam
hlt
push
fistpl
lods
inc
cs
out
inc
ss
xlat
sahf
sahf
dec
dec
ds
cmp
xlat
mov
pop
cwtl
je
lahf
shll
dec
cmp
pop
inc
pop
add
add
out
push
cmp
ljmp
rclb
push
lods
repz
inc
inc
xor
clc
mov
pop
mov
pop
xor
jnp
pop
cmpsb
iret
jl
xor
push
xchg
add
and
jl
dec
pop
mov
mov
loop
fisubrl
push
push
lret
xchg
loopne
outsl
mov
mov
outsb
scas
jp
stos
inc
adc
pusha
pop
loop
fcoml
push
rcll
popa
mov
fwait
cmpsb
push
jecxz
shr
inc
loope
dec
mov
push
arpl
mov
mov
fisttpll
adc
pop
rcr
mov
or
stos
or
sbb
mov
stos
xlat
negl
and
jns
int
xchg
xlat
xchg
push
xchg
cld
mov
push
adc
mov
int
popf
jno
ljmp
sbb
mov
sbb
push
cmp
fistps
jg
cli
sub
shll
clc
sbb
mov
int3
jmp
popa
inc
loope
and
ljmp
xorb
rcr
leave
or
mov
pushf
stos
stc
inc
xchg
xor
lds
mov
lret
data16
lcall
imul
xlat
push
dec
mull
push
js
cmp
push
dec
ror
inc
inc
sti
je
or
cmp
movsl
arpl
popf
sbb
and
dec
imulb
mov
xor
lcall
xor
mov
xor
mov
icebp
inc
jge
scas
xor
es
scas
popf
pop
mov
jnp
fiadds
arpl
xchg
jle
test
data16
cmovs
loope
jp
inc
sbb
cmpsb
adc
sbb
jae
push
or
sub
stos
xor
cmp
mov
mov
sahf
mov
test
adc
mov
pop
cltd
hlt
add
shrl
jne
gs
push
xor
add
mov
sbb
pop
lock
mov
and
fisubl
add
inc
pop
sub
aaa
xchg
xchg
iret
cmp
subb
lret
xchg
mov
mov
or
hlt
add
jnp
xchg
stos
or
sub
dec
mov
lods
fisttps
sub
pop
addl
lods
es
daa
xor
xchg
jne
ja,pt
rorb
mov
and
clc
jle
div
cld
jp
lock
jecxz
and
cmpsb
dec
adc
pop
ss
dec
and
push
lods
jnp
push
push
or
mov
shlb
xor
inc
shrb
adc
das
insb
fnsave
jns
inc
div
mov
mov
dec
bound
mov
jnp
sbb
push
pushf
mov
xor
mov
aam
decb
push
out
loope
in
cmc
jno
mov
push
sbb
fsts
adc
pop
cmpb
mov
sbb
sub
push
pop
sub
xchg
cmp
sbb
mov
mov
xchg
mov
adc
bound
pushf
test
mov
aam
sbb
adc
pop
cld
xchg
std
or
add
inc
aam
fnstcw
xchg
push
aas
dec
xchg
pushl
push
jmp
jns
sub
mov
jl
in
push
sbb
push
lret
adc
cwtl
je
xor
xchg
inc
cmp
dec
jecxz
push
mov
push
mov
push
xchg
sub
xchg
pushf
dec
je
inc
sub
out
rol
jmp
adc
std
aam
sbb
add
or
jecxz
test
pop
push
add
cmp
rorb
pop
xchg
xchg
push
xchg
inc
fdivrs
aaa
add
fldcw
push
in
or
insl
cld
lods
sti
adc
into
or
ss
pop
jecxz
inc
shrl
mov
sbb
out
ss
push
lea
shll
jecxz
sti
inc
inc
cmpsl
loope
cmpsb
in
cmpsb
in
push
test
xor
cmp
or
in
mov
stos
pop
cwtl
sub
xor
iret
cmpsb
adc
lahf
in
loopne
inc
daa
daa
push
out
fwait
inc
rol
dec
out
inc
cltd
mov
pop
xchg
push
out
push
stc
jnp
movsb
pop
and
push
lods
jb
adc
imul
cltd
and
push
push
in
sbb
scas
push
xchg
aaa
sbb
ret
mov
cmpl
aam
ljmp
int
cs
pusha
ja
mov
xlat
sbb
fidivs
sub
push
iret
pop
xchg
dec
dec
jnp
mov
cmp
sbb
inc
rolb
inc
inc
das
adcb
gs
or
pop
push
cmp
xor
mov
jle
push
xor
mov
push
inc
mov
div
loop
outsb
xchg
mov
sbbb
out
cwtl
int
mov
outsb
cltd
inc
sub
fwait
xchg
ds
lret
pop
rep
mov
mov
stos
leave
dec
xchg
sti
and
fdivr
xchg
mov
push
add
test
test
stc
xor
fnstcw
cmp
data16
mov
insl
lret
xor
lods
mov
mov
les
dec
add
or
clc
sbb
or
pop
fisubrs
cli
fcmovbe
lds
scas
push
adc
sahf
or
jmp
push
xor
popf
ret
pusha
cwtl
push
inc
xchg
call
push
fildl
cmp
xor
mov
mov
mov
cmp
in
mov
or
jbe
inc
xchg
or
mov
inc
test
movsb
decl
or
addr16
out
cwtl
call
dec
push
bound
fwait
sbb
sti
adc
mov
pop
daa
jns
cmp
jns
jbe
fs
pop
sti
in
xchg
testl
call
xor
jo
sbbl
mov
neg
fisttps
pop
test
rclb
imul
es
jno
jmp
leave
push
insl
push
cwtl
jne
inc
mov
js
or
dec
popa
push
imul
rolb
leave
push
pop
sti
stos
loope
lock
add
test
cld
jne
jns
shr
mov
inc
push
or
cmpsb
jecxz
push
or
jae
mov
sub
add
cmp
xlat
dec
sti
mov
xchg
sub
push
pusha
test
subb
notb
aam
push
sbb
pop
out
mov
out
cmp
or
jge
daa
icebp
jp,pt
loop
scas
mov
mov
lods
leave
clts
inc
xchg
daa
sub
pop
jo
jno
dec
lock
jecxz
sub
lods
lret
insl
xor
mov
lock
out
incb
mov
loope
std
mov
sti
pop
xchg
mov
lcall
repnz
and
je
rolb
sub
mov
cli
inc
scas
fimuls
mov
and
inc
pop
jge
sti
popa
mov
push
ja
xchg
in
aam
adc
data16
and
jmp
mov
mov
jp
cld
addb
inc
xchg
arpl
mov
mov
cld
shrl
sub
imul
xchg
adc
mov
jbe
arpl
sti
or
fs
aad
sbb
dec
out
ss
cmp
mov
add
dec
cmp
ljmp
sub
addr16
add
and
sarl
xchg
scas
jno
inc
insl
data16
sbb
xchg
xor
rorl
sbb
daa
add
lods
xchg
push
jno
and
scas
mov
int3
fimuls
mov
rclb
mov
sbb
mov
inc
es
push
out
in
dec
gs
mov
es
inc
cmp
push
xor
jp
mov
sahf
cltd
cld
cmpsb
cmpsl
or
sbb
jno
shrl
mov
dec
std
sub
arpl
dec
insb
sub
push
fdivrl
insb
dec
mov
fwait
cltd
je
xchg
inc
mov
aaa
sub
add
cltd
loope
testb
xor
or
xor
jl
clc
stos
mov
xchg
mov
ss
aaa
sbb
lock
out
sub
dec
jp
cltd
sahf
mov
fdivrs
mov
cld
pop
cmp
loop
pop
incb
out
push
cmp
ret
enter
add
mov
xchg
repnz
mov
pusha
and
xor
out
fistps
cwtl
inc
push
gs
imulb
or
ljmp
push
call
jge
adc
fiaddl
cld
pop
imul
fdivs
std
mov
repz
add
rorl
pop
mov
mov
imull
cwtl
mov
pop
jp
push
jmp
xor
push
jecxz
mov
add
push
inc
jge
inc
jl
jmp
icebp
inc
outsb
mov
mov
push
stc
mov
pop
sub
cmp
adc
cmpsb
dec
lods
inc
add
inc
mov
mov
xlat
jb
sub
mov
mov
movd
jo
fdivr
leave
dec
xchg
cmp
xor
dec
adc
xor
jp
lret
cwtl
or
xorb
push
push
mov
mov
pushf
adc
dec
outsl
push
pop
or
mulb
jl
setno
inc
push
lret
adc
adc
cwtl
fiaddl
xchg
mov
lea
sub
jns
add
dec
fdivrs
adc
jns
xchg
std
xchg
sub
sbb
stc
jmp
jp
js
sbb
jl
xchg
aaa
dec
stos
int3
xchg
or
sub
outsb
dec
mov
pop
mov
xchg
cwtl
dec
mov
sarl
roll
pop
inc
loop
xor
enter
pop
or
add
pop
leave
cmp
dec
or
xchg
sub
push
scas
cmp
mov
addr16
push
jns
xchg
jp
push
into
je
jmp
test
mulb
or
insl
out
cwtl
and
xchg
scas
fucomi
fcmovu
pushf
scas
gs
fwait
orl
cmp
mov
xor
rorb
dec
mov
mov
cmp
pusha
adc
mov
in
dec
xchg
leave
pop
sbb
pusha
adc
fldt
add
xor
sub
inc
push
sub
mov
imul
mov
fstl
cmp
dec
mov
sarl
imul
xchg
inc
mov
and
rcrl
test
aas
rsqrtps
scas
fsub
add
adc
sub
mov
mov
clc
jl
lcall
js
popa
out
mov
into
mov
lcall
clc
pavgb
or
int
pop
inc
roll
into
xor
mov
repnz
add
outsb
jle
fcomps
fstpl
mov
aaa
decl
push
daa
xor
add
xor
mov
mov
adc
subl
mov
das
mov
adcl
mov
xor
cmp
data16
adc
std
cli
cmpsl
aad
mov
mov
mov
sbb
loop
rcrb
ja
jmp
dec
inc
arpl
popf
ljmp
push
rcll
into
stos
stos
das
in
dec
cmp
adc
pop
sbbb
cmp
push
or
fwait
jo
add
adc
outsb
jl
or
je
lea
pop
mov
mov
fdivp
inc
xchg
fisubl
popf
jbe
push
ss
mov
lds
scas
pop
lahf
fidivrl
xor
cmp
cmpsl
lcall
add
into
xor
movsb
shlb
in
jp
stos
cmp
icebp
testl
out
cmp
cwtl
add
stos
imul
sub
inc
inc
push
push
mov
outsb
loopne
mov
outsl
xchg
push
inc
cmp
fdivr
xor
cmp
outsb
add
test
ret
imul
inc
ffreep
mov
mov
sub
repnz
andl
xchg
shlb
or
inc
lret
dec
fidivrs
mov
cmp
inc
cmc
lds
mov
movq
outsb
cmp
cmpsb
ja
or
mov
insl
enter
adc
jle
scas
sti
out
jp
je
test
and
test
incl
push
cmp
insb
shll
les
pushl
inc
push
mov
jmp
cmpsl
hlt
mov
push
repnz
pop
and
stos
lcall
mov
addr16
andb
insb
rorl
loopne
movsb
or
adc
loope
decb
loopne
imul
xor
jge
jl
in
cmp
in
and
pop
out
fsubrs
push
sbb
hlt
xor
movsl
push
cmc
imul
loope
adc
xlat
divl
fs
push
sub
dec
push
ds
ss
or
or
jg
jb
jge
push
add
mov
mov
in
aaa
fnstsw
insb
xor
mov
scas
mov
push
cvttps2pi
jecxz
insb
sahf
sarb
sbb
in
mov
jecxz
je
mov
push
inc
les
jecxz
mov
mov
add
push
insb
adc
mov
imull
test
bound
jp
loop
das
cmc
and
sub
imul
aas
das
sbb
lahf
imulb
or
imul
or
pop
mov
aam
mov
mov
cmp
dec
mov
pop
sub
and
movsl
xchg
pop
xor
inc
sarb
jmp
cmc
pop
or
negb
faddl
test
and
adc
xor
adc
add
popf
gs
xchg
iret
imull
mov
cmp
incl
jae
icebp
inc
dec
inc
scas
and
inc
jb
mov
or
loope
sub
aas
xor
dec
aam
out
nop
mov
or
mov
push
clc
inc
cltd
sbb
out
cltd
cld
in
imul
into
xchg
pop
add
pop
xchg
mov
jo
cwtl
dec
shrb
iret
orb
pop
aaa
enter
xchg
movsl
jns
fbstp
or
lret
xchg
lods
sbb
lcall
and
das
pop
and
pop
int3
sbb
jg
jl
mov
fs
cmc
pushf
popa
dec
ljmp
add
mov
ret
xor
inc
mov
or
add
cmp
insb
out
lahf
mov
inc
call
or
call
subb
lock
movsl
into
mov
xlat
fcom
xchg
or
insb
ss
inc
out
scas
data16
jno
cwtl
popf
adc
push
cmpsl
mov
jecxz
inc
hlt
sub
hlt
stc
dec
sub
addb
imul
enter
pop
je
imul
mov
sbb
gs
cld
mov
xor
sub
mov
adc
adc
inc
pop
mov
jg
scas
fcmove
inc
jns
insl
push
dec
out
scas
adc
lahf
fistps
xor
into
sub
lret
sub
mov
xor
dec
pop
dec
dec
std
imul
jmp
mov
test
xchg
mov
cmp
jnp
mov
xchg
xlat
cmc
imull
adc
push
lahf
movsl
jecxz
push
sti
mov
xor
gs
mov
pop
mov
jbe
jl
add
jmp
mov
and
and
dec
adc
mov
into
sbb
daa
sahf
je
adc
ret
outsl
int
mov
and
pushf
xchg
fstps
xchg
dec
inc
sub
push
xchg
outsb
lods
icebp
mov
mov
jmp
cwtl
icebp
stc
or
arpl
das
loope
ret
push
movb
add
aaa
shl
icebp
dec
xchg
jmp
xchg
push
mov
add
mov
loope
sbb
mov
rcrl
movl
adc
dec
into
fucom
adc
xor
lea
push
fimull
lods
xor
popa
scas
cmp
pop
push
push
jno
pushf
or
add
popf
and
xchg
mov
ss
push
pop
test
enter
addr16
push
aas
inc
dec
add
cmpsl
push
sbb
les
lahf
ficompl
xchg
aaa
ret
dec
outsl
xor
cmp
loope
mov
inc
es
add
pusha
fmull
rcll
imul
mov
lods
insl
cmpsb
out
or
push
movsb
dec
push
push
test
pop
mov
iret
fnstenv
daa
cmp
das
shl
inc
roll
mov
sbb
xchg
dec
mov
mov
nop
inc
pop
push
aam
xor
mov
fidivl
rclb
jae
in
fsubrp
sub
mov
mov
lahf
cmpps
call
xor
stos
loope
jmp
ffreep
xchg
pop
ss
pop
stos
xor
das
aad
sbb
mov
push
fidivs
rorb
and
xlat
dec
dec
hlt
test
lcall
or
mov
mov
insl
xor
movsb
iret
and
aaa
inc
jle
jmp
push
cmp
and
mov
ljmp
popa
insl
mov
add
cmp
add
jmp
idivb
test
mov
out
ja
jno
dec
addl
in
test
rorb
out
je
pop
add
inc
ret
cmp
shlb
inc
xor
fnstenv
add
mov
xchg
xor
lds
sbb
outsl
jl
ret
scas
lods
negb
xchg
cltd
mov
sbb
lahf
enter
push
cmpsl
push
dec
jecxz
or
notb
mov
cmpsb
adc
outsl
popa
aad
je
ss
cmp
ja
mov
mov
mov
dec
aaa
lods
xchg
iret
inc
test
repz
dec
xchg
repnz
and
loop
sub
and
repnz
mov
mov
cmp
stos
testb
out
test
ror
xor
lahf
idivb
mulb
iret
movsb
adc
jp
mov
or
inc
arpl
ror
outsl
cmp
mov
ret
call
or
push
cmc
repnz
mov
les
push
aas
pop
pop
mov
xor
sub
push
mov
nop
test
inc
flds
mov
mov
mov
or
cwtl
pop
adc
pop
mov
fiaddl
inc
cmc
lock
jns
jb
sub
adc
sub
cwtl
cmpsb
sahf
push
cmpsl
orb
aam
or
aad
sbb
adc
cld
adc
lahf
shl
inc
lea
les
jg
add
mov
adc
movsl
or
or
in
loop
mov
aam
out
mov
xchg
cltd
and
add
xor
pusha
mov
adc
mov
ja
fs
shrb
lds
dec
fnstenv
aas
out
mov
sbb
dec
xor
lea
aam
xor
push
mov
jno
mov
mov
sti
mov
or
loop
scas
cld
mov
shl
adc
rol
inc
mov
hlt
icebp
mov
xchg
test
mov
jno
xchg
or
xchg
jg
sbb
jns
pop
std
xchg
adc
repz
loop
xchg
mov
cmp
fs
daa
sub
or
push
add
sti
fiadds
ss
mov
adc
aam
nop
fcompp
fs
xchg
push
jns
add
push
xor
inc
or
sbb
ja
mov
xor
daa
sub
inc
inc
jecxz
fnsave
adcl
push
jp
aaa
enter
add
add
pop
push
outsl
incl
std
std
test
out
lock
pop
in
in
divb
jp
pop
sti
fistps
lret
mov
dec
cltd
and
mov
cmp
jno
jmp
in
lock
inc
gs
daa
push
xchg
dec
shll
lret
imul
add
ja
adc
nop
adcl
mov
push
dec
ret
mov
imul
loope
xchg
mov
or
inc
lahf
jnp
mov
leave
ret
jp
shlb
jno
pop
sbb
test
or
lods
hlt
cltd
daa
mov
pop
rclb
outsb
add
mov
and
nop
add
add
int
insb
ja
sbb
add
mov
fsubrs
ret
movsl
imull
mov
mov
into
push
sub
push
push
push
jae
jecxz
push
test
in
imul
mov
outsl
call
mov
clc
add
mov
dec
jecxz
jl
lret
data16
lock
idivb
test
into
push
dec
fdivs
jl
mov
sub
das
inc
mov
sahf
dec
add
cmpsb
sub
inc
stc
push
mov
leave
in
mov
jne
inc
call
xor
imul
jmp
loope
cmp
jb
jb
sbbb
dec
adc
sahf
int
shr
fcoml
iret
jmp
data16
mov
push
inc
call
sarl
notb
pop
cmp
into
loope
les
outsb
mov
mov
xchg
jns
decb
call
add
mov
push
jmp
inc
cwtl
cmc
pop
add
inc
push
iret
push
popa
cltd
popa
xchg
inc
add
lea
sbb
bound
push
sub
jns
pop
jmp
sbb
loope
sub
or
jecxz
xchg
dec
cs
imul
ret
pop
enter
jl
and
mov
out
cmpsb
inc
mov
das
mov
push
xchg
mov
ja
adc
and
push
add
fdiv
shlb
inc
test
rcr
jae
pusha
roll
adc
and
pop
shrb
scas
push
adc
pop
inc
mov
mov
and
push
dec
loopne
icebp
hlt
push
push
push
lret
adc
cmp
jnp
out
jge
xchg
or
jae
and
mov
int
test
jno
jns
into
or
adc
gs
mov
inc
fs
jns
and
lahf
jge
or
outsl
add
jae
pop
addl
test
gs
jmp
pop
mov
das
ror
in
sub
pop
nop
mov
inc
add
mov
loope
rorl
and
xchg
jecxz
xchg
popf
mov
incl
xor
adc
push
scas
or
test
mov
enter
loope
ret
divb
mov
and
adc
cmp
mov
adc
outsb
loop
outsb
lock
pop
push
mov
clc
test
xor
enter
jle
sbb
rolw
std
neg
push
adc
push
sbb
mov
insb
sbb
sub
out
add
std
lcall
mov
mov
pop
in
into
cmp
lods
scas
stos
pop
loope
inc
in
and
loopne
popf
xor
iret
scas
cld
roll
shrl
sub
shl
repz
test
pop
mov
adc
ja
movsl
xor
insl
xchg
lahf
push
rolb
push
out
jb
push
xor
lcall
and
inc
mov
mov
xlat
notl
inc
imul
cmp
les
xlat
mov
jge
fs
xchg
aas
nop
add
jg
cmp
cltd
sub
cmp
add
push
mov
test
andl
pushl
mov
std
inc
into
push
cmp
mov
dec
pop
clc
ret
jecxz
pop
jne
out
or
shrl
jnp
lret
popa
and
pop
adc
ja
fsubrl
mov
aad
mov
mul
out
sub
push
push
add
sti
mov
fwait
cmp
clc
pop
fwait
aad
push
sub
push
push
xor
push
lsl
insl
inc
dec
fsubrs
into
jecxz
mov
stos
aam
fdivrl
aam
leave
bound
ret
dec
or
sbb
adc
push
dec
out
mov
std
cmpsl
adc
mov
mov
push
repz
scas
add
hlt
lret
inc
pop
cmpb
and
test
xor
cld
xor
jo
out
mov
clc
outsb
mov
lods
les
ret
push
stc
mov
hlt
pushf
jo
add
daa
lds
pop
cmpsl
cwtl
xor
mov
lods
addb
inc
shrb
xchg
and
dec
ss
test
sub
jae
shrb
xchg
lea
dec
pop
insb
outsb
and
pop
das
shlb
xor
or
fimull
popf
ret
aas
scas
xor
jno
sahf
mov
adc
sbbl
cwtl
nop
in
sbb
sar
aaa
lret
mov
jp
inc
mov
or
das
adc
and
in
fistpl
mov
mov
in
push
adc
xchg
sub
dec
sbb
mov
pop
mov
iret
dec
mov
cmp
add
cmp
mov
add
lret
nop
or
jnp
add
and
pop
pop
fnstsw
dec
insl
mov
jne
xor
mov
test
xlat
dec
stos
push
out
je
arpl
inc
jl
adc
jb
ss
lods
pop
sub
das
mov
xor
insl
js
push
mul
loope
inc
push
aad
pop
jl
aaa
lret
fnsave
mov
test
adc
rorb
ficoms
sbb
ret
jmp
xchg
repz
adc
aad
insb
dec
nop
jmp
stos
outsl
shl
stos
dec
push
jo
inc
cli
fstps
jne
aam
fdivp
addl
test
dec
sbb
fstp
lahf
xchg
sub
leave
icebp
sub
jno
adcb
ljmp
aas
xor
out
and
jg
mov
repz
test
or
imul
pusha
adc
push
fwait
mov
sbb
cmpsl
inc
push
jmp
lds
pop
jge
jae
stc
xchg
inc
fisttpll
fstpl
pop
inc
icebp
jno
inc
gs
clc
in
ss
shrl
or
xor
pop
or
push
aam
les
mov
mov
adc
cmp
jle
dec
cli
push
jo
lret
fldl
cmp
xchg
mov
xchg
fdivl
out
mov
jbe
or
mov
std
js
inc
negl
sbb
cmp
or
jmp
insl
push
lods
imul
dec
push
jbe
mov
or
xor
adc
push
add
cmp
outsb
cmp
xchg
scas
jbe
lds
in
jmp
sub
cmp
out
adc
push
aas
div
cmp
into
push
mov
mov
in
jge
dec
push
sub
jp
mov
sub
mov
imul
jecxz
sub
outsl
outsl
orl
cmp
cmp
aam
stos
pop
or
mov
sbb
sub
pop
sub
adc
out
sub
ja
leave
push
pop
push
lea
push
xchg
pop
push
movsb
inc
stos
pop
fldenv
cmp
outsl
fdivp
rcrl
jecxz
cld
mov
xchg
mov
fistpll
cltd
loopne
in
mov
adc
fmulp
jns
xchg
dec
test
sbb
sub
sbbb
sbb
sub
fildl
mov
sbb
repz
xlat
mov
frstor
cmc
out
fnstenv
out
mov
sbb
push
push
sbb
lea
push
iret
inc
imul
cmp
nop
int
stos
scas
test
mov
xor
mov
filds
xchg
in
sbb
sub
repnz
clc
and
imull
mov
dec
jnp
jl
cli
aad
pop
aam
stos
mov
or
iret
mov
test
add
jae
pop
inc
sbb
ficoms
dec
xlat
outsl
addr16
mov
mov
jp
ds
xorb
int
out
or
call
mov
sti
mov
cwtl
xlat
push
mov
cmp
loope
xchg
jecxz
dec
arpl
mov
cmpsl
inc
inc
call
sarb
mov
mov
mov
xchg
outsb
inc
mov
clc
jb
pop
fistpll
xchg
add
push
fdiv
mov
cltd
leave
std
loope
inc
mov
push
ds
push
mov
gs
mov
mov
je
or
addr16
dec
sbb
andb
int3
pop
cmp
sbb
int
aam
push
pop
repz
fldt
xchg
and
xchg
jbe
push
pushf
adc
mov
bound
sbbb
mov
cmpsl
inc
loop
enter
cmp
mov
dec
int
pop
js
sub
jl
out
iret
sahf
out
stos
push
aad
imul
mov
fcoms
repnz
mov
jle
xor
out
pushf
push
stos
sub
testl
imul
pop
lods
inc
sbb
gs
sub
xchg
sahf
fwait
scas
pusha
push
push
dec
cltd
les
mov
adc
lcall
ret
cld
inc
ret
jecxz
out
jbe
cmp
les
les
dec
jae
scas
sub
mov
mov
ret
lds
dec
cltd
xor
out
arpl
outsl
cmp
out
test
mov
push
jmp
xor
push
insl
push
or
mov
or
and
sti
lds
out
xchg
sub
or
test
fwait
xchg
xor
repz
mov
xadd
pop
adc
sub
andl
icebp
outsl
int
mov
push
ret
stos
cmpsl
pop
jb
mul
popf
sub
mov
dec
jo
ds
dec
xor
jne
adc
cmc
pop
test
roll
sub
repz
or
sahf
xlat
ret
push
xor
movsl
push
adc
loopne
and
rolb
jo
inc
aad
out
ja
push
sbb
mov
cwtl
jmp
mov
jecxz
sub
add
sub
mov
adc
testl
jnp
jecxz
idivb
imul
ss
test
mov
pop
je
jnp
scas
push
test
cmp
stc
add
cld
aaa
cwtl
setne
mov
movsl
mov
loopne
jg
mov
dec
rcrl
or
jno
repz
inc
jmp
es
shll
data16
mov
sahf
loopne
popa
shll
out
lods
pop
xlat
jg
cmp
out
shrb
xor
add
or
mov
outsl
xchg
bound
jg
xor
pop
rol
sub
aad
mov
scas
push
lea
inc
xchg
xchg
sub
mov
cmc
or
lahf
mov
data16
insl
std
out
int
das
in
or
xchg
inc
mov
mov
jg
inc
push
jb
mov
mov
das
jbe
rorl
pop
repz
rcr
cmp
mov
mov
ja
mov
mov
loope
xor
push
push
mov
inc
jae
cmp
or
stc
dec
sbb
dec
cwtl
dec
and
pop
cmp
xchg
mov
xor
pusha
jp
mov
insl
ja
fdivrp
mov
insl
xor
jae
imul
cmp
int3
xor
cltd
xchg
es
ret
jae
inc
pusha
inc
sti
out
mov
lock
xchg
enter
lcall
mov
ret
repz
mov
xor
xchg
or
dec
push
or
outsb
je
addr16
adc
ret
mov
leave
int
daa
sub
or
sub
add
push
sbb
hlt
cmp
dec
push
pop
mov
add
enter
lret
sbb
and
je
cmc
inc
fs
insl
fs
ret
iret
sbb
pop
jp
mov
add
aad
sbb
or
sahf
insl
mov
jae
fiadds
cwtl
hlt
lock
dec
jle
repnz
mov
cmc
divl
cli
xor
sub
push
es
push
data16
popa
addr16
arpl
pop
adc
hlt
lds
xor
gs
fidivrs
js
push
in
lret
and
adc
int3
cmp
mov
adc
jl
cmp
or
pop
repnz
mov
pop
test
cmp
aaa
mov
popf
mov
lock
scas
test
or
ret
aas
ljmp
ret
pop
ljmp
and
xchg
xor
arpl
jmp
test
cmp
pushf
push
jb
sbb
addr16
push
sti
and
inc
mov
and
lds
xchg
jmp
inc
ret
sahf
pop
jnp
push
lods
insl
sbb
mov
js
dec
mov
movsb
mov
mov
lcall
push
xor
rorb
pop
pop
sbb
fdivs
into
mov
popa
mov
sahf
adcb
push
leave
testb
cli
mov
xor
mov
scas
xor
lock
arpl
jg
ret
jnp
and
test
lea
aaa
mov
jne
cmp
in
stos
sti
mov
scas
stos
in
mov
data16
push
jb
cmp
imul
or
xor
pop
dec
popf
pop
in
fists
rolb
xlat
cltd
ljmp
loope
jnp
sub
pop
shll
std
sub
gs
mov
mov
fwait
xchg
ret
mov
cmp
mov
adc
pop
push
lret
dec
mov
stos
push
cmp
dec
mov
nop
or
scas
stos
mov
pop
add
push
push
fdiv
mov
ficoml
out
sbb
adc
push
mov
inc
adc
jp
repnz
lods
in
push
sub
rorl
shlb
mov
push
enter
jg
data16
aad
or
ss
jbe
mov
shrl
sub
cmc
xchg
mov
pop
subb
int3
and
jnp
in
pop
mov
ror
pop
rcll
push
fstps
jmp
sbb
pop
out
mov
ja
mov
push
adc
or
pop
jecxz
pop
sub
mov
popa
dec
push
lahf
daa
loop
pushf
xor
and
mov
mov
sub
in
jle
xor
subb
cmp
inc
sbb
inc
cmp
es
cmpl
ljmp
adc
xor
addr16
std
and
sbb
in
push
or
sbb
enter
gs
fdivs
mov
xchg
adcb
mov
push
sti
or
das
imul
pusha
add
inc
aam
stos
shll
push
es
test
cmpb
cmp
movsb
ret
dec
jb
jmp
aam
sbb
mov
xchg
imul
cwtl
dec
loopne
lods
and
dec
popf
jp
add
jmp
call
mov
stos
dec
inc
pop
in
jb
mov
imul
into
dec
cmp
mov
xchg
mov
xor
aas
fnstcw
push
gs
jmp
jns
adc
adc
xor
xor
inc
stos
pop
jne
les
mov
aad
pop
push
loope
pusha
loopne
dec
test
inc
cmp
dec
or
clc
jge
aas
sub
scas
mov
out
testb
xlat
cmpsl
mov
push
jo
push
enter
inc
inc
xor
sbb
sbb
addr16
pop
mov
jl
in
stos
test
enter
adc
add
mov
mov
pusha
mov
mov
jp
xor
rol
int3
mov
xchg
rclb
aad
frstor
dec
adc
stos
mov
xor
repnz
popa
leave
sbb
outsb
test
sub
adc
add
dec
mov
jecxz
inc
dec
push
push
sti
or
and
mov
dec
stos
jp
push
loopne
or
bound
inc
mov
add
gs
push
rol
out
cli
push
push
frstor
cs
jno
loop
inc
or
test
test
inc
mov
mov
shrl
sub
ret
jmp
test
cmpsb
xchg
iret
push
sbb
mov
mov
fld
mov
cmc
icebp
sub
int3
leave
adc
testb
outsl
mov
dec
push
leave
fldl
gs
adc
mov
push
cmp
adc
stc
jp
call
ja
scas
mov
in
adcl
xor
mov
mov
and
xchg
daa
xchg
adc
add
dec
dec
insb
mov
lcall
sti
mov
fmull
out
out
inc
mov
xchg
mov
cwtl
push
xlat
jns
fnsave
pop
adc
adc
inc
pushf
cwtl
sbb
sbb
pop
pushf
jge
jb
fnstenv
aas
pop
stos
and
out
rcll
iret
idiv
lods
jmp
pop
pop
adc
mov
mov
and
push
in
dec
mov
lods
ljmp
movsl
xlat
mov
cs
mov
and
outsl
push
adc
add
ret
xchg
cld
pop
push
sub
dec
jno
push
pop
jmp
mov
push
ficoml
test
dec
mov
popf
push
rorl
jbe
mov
scas
decl
iret
push
test
sub
dec
shll
pusha
lret
lock
sub
and
sbb
repnz
ret
lock
mov
sbb
fstpl
and
js
mov
xchg
setl
mov
repnz
daa
stc
dec
or
and
std
pop
cltd
sub
dec
insb
lods
icebp
cmp
insb
int3
movsb
inc
test
mov
mov
lret
xchg
movsb
cmp
lea
jb
or
mov
repz
mov
dec
lret
jb
not
movsb
imul
sub
inc
and
popf
xchg
out
test
mov
popa
enter
mov
mov
sbbl
mov
inc
fildll
mov
out
sub
aaa
mov
sbb
ljmp
dec
ret
xor
lods
iret
push
or
nop
adc
dec
pop
jne
ret
movsb
out
push
xchg
dec
rep
dec
dec
sbb
outsl
movsl
out
dec
std
cld
jae
lods
mov
outsb
insl
cs
fldl
ficoml
test
insl
testb
and
cmp
dec
int3
adc
or
iret
sub
jae
mov
lret
push
sub
loopne
mov
andl
test
cmp
adc
mov
ret
sub
test
gs
dec
filds
les
sbb
les
fdivrl
xlat
ljmp
cs
lods
xchg
inc
adc
cmp
xor
lcall
push
cmc
roll
adc
inc
dec
push
test
cltd
out
icebp
rcl
shlb
icebp
popa
mov
mov
jl
movsb
movsl
pop
pop
movsb
inc
cmp
push
roll
ror
sub
ss
stos
call
mov
fdivrs
cwtl
fdivrl
test
test
in
test
popa
or
pop
orb
cmp
cmp
popa
repnz
pop
cmp
adc
xchg
jb
mov
jae,pt
mov
mov
push
in
je
inc
jnp
push
not
and
stos
je
pop
enter
call
jmp
pop
mov
sub
rcrl
sub
and
xchg
jg
or
mov
xchg
stos
mov
sbb
fisubs
in
rorb
fsubl
cli
sub
leave
and
dec
subl
or
je
icebp
ja
ds
out
jp
cmpsl
adc
ss
add
mov
push
insb
push
out
cltd
outsb
cmp
jl
pop
sbb
out
mov
out
inc
mov
sbb
sahf
mov
push
mov
and
jecxz
pop
repnz
stos
adc
push
mov
push
bound
pusha
jnp
xchg
fwait
jl
mov
ret
or
arpl
add
lds
push
push
sub
lock
popa
sub
or
rcrl
cmp
in
jbe
pop
fisubrs
out
xchg
mov
hlt
jne
and
leave
cmp
add
jnp
mov
mov
jnp
adc
and
rcrl
stos
pop
into
mov
sub
and
jnp
xor
sbb
fs
jo
sbb
or
push
int
xor
outsl
lcall
push
sub
mov
gs
lods
loopne
pop
arpl
xchg
xor
popa
popa
or
pop
dec
dec
mov
imul
fldt
xor
xchg
pop
out
inc
adc
xchg
loopne
aad
aad
push
and
pop
cmpl
loope
mov
shl
hlt
and
pop
mov
mov
push
cmp
jo
adc
push
std
out
and
jb
pop
and
sbb
gs
xorb
dec
xchg
mov
dec
das
pop
andl
int3
pop
enter
mov
jo
add
jbe
ljmp
sbb
inc
cmpsb
mov
sub
inc
iret
mov
sbb
pop
int3
mov
test
in
data16
aaa
xor
cld
or
xchg
add
mov
rorl
dec
das
test
out
inc
xchg
add
mov
xchg
shr
adc
inc
scas
test
repz
cmpsl
pushf
mov
scas
dec
mov
jmp
dec
std
sub
xor
sub
jecxz
push
push
clc
fiaddl
insb
lea
aad
adc
pop
and
jo
loop
jl
push
add
shll
xlat
mov
mov
cmp
leave
sub
test
fnstcw
xchg
cli
cmp
or
dec
pop
ss
sub
lock
sbb
sbb
rclb
pop
cmpsl
push
cld
mov
sub
ret
add
stos
cli
pop
add
jae
pop
mov
jg
pop
rcrb
ret
mov
add
adc
cld
push
mov
fidivrs
xchg
mov
test
lret
pop
loopne
jge
mov
push
repnz
push
mov
cmp
out
and
xchg
xchg
popf
add
pop
dec
mov
daa
test
push
divb
cltd
jg
lock
cmp
jno
xchg
cmovo
push
movsb
push
rcll
jae
dec
cmpsb
or
inc
pop
je
inc
xor
sbb
mov
mov
adc
shl
mov
push
mov
popa
or
push
mov
ss
jnp
icebp
fs
cmc
rorl
mov
mov
mov
mov
insb
fsubp
test
lea
movsb
mov
mov
dec
mov
shlb
cmp
push
les
test
xor
and
pop
and
xchg
sub
loopne
cmp
cmpb
add
and
xor
and
imul
lcall
outsb
cwtl
mov
sub
push
sti
dec
andb
test
in
and
cmp
test
rclb
mov
xchg
jns
xchg
inc
push
ret
addps
xchg
daa
icebp
push
jb
fisttpl
sub
call
test
sarb
mov
and
and
cmp
xchg
inc
aam
lret
dec
adc
loop
xchg
sbb
jo
test
add
mov
jno,pn
or
pop
scas
mov
sub
mull
fistps
add
lods
imul
sbb
cmc
je
nop
aas
mov
cld
mov
shr
lahf
scas
push
fsubrs
dec
pop
mov
mov
push
xchg
jge
jmp
mov
push
cmpsl
inc
jg
mov
insb
out
popa
gs
dec
adc
dec
iret
scas
fucomp
pop
mov
sbb
jmp
pop
push
call
push
pushf
sub
jb
pusha
adc
inc
add
xchg
jne
xchg
pop
jg
orps
xchg
mov
mov
gs
scas
sbb
jo
les
shrb
and
popf
scas
add
jae
jg
sbb
push
idivl
pop
faddl
sub
incl
ds
addr16
arpl
hlt
mov
sub
pop
sub
ja
or
xor
adc
adc
push
jbe
int
sbb
outsl
clc
xchg
push
jl
ds
cmpsb
lret
mov
pop
lock
xlat
ds
mov
imul
lahf
mov
popa
movsl
mov
adc
ret
and
or
nop
hlt
aad
push
xor
repz
fildll
jle
mov
xor
jbe
sub
mov
jl
test
push
add
into
shlb
fcmovnb
mov
mov
test
cmp
adc
stos
ds
dec
push
dec
push
dec
pop
bound
xor
rcl
shll
cmp
and
sbb
inc
mov
movl
lea
adc
xchg
or
popf
mov
sbb
mov
and
repz
cli
adc
mov
inc
cmp
in
mov
dec
jnp
outsb
das
and
mov
loopne
into
jno
imul
sbb
jl
mov
lds
in
scas
jge
mov
xor
mov
lds
ds
cld
push
add
cs
aam
or
repz
call
imul
cmp
fists
lea
mov
cwtl
push
lods
mov
add
insl
out
aas
dec
jns
aaa
out
daa
xchg
push
sti
outsb
insl
mov
mov
push
imul
mov
mov
xor
pusha
dec
nop
decl
lret
inc
cmpb
push
adc
bound
fcoml
mov
pop
mov
sbb
jnp
xchg
adc
and
imul
pusha
pop
rcr
fwait
andl
leave
inc
xsaves
push
pop
push
dec
mov
xor
jno
cmp
push
add
inc
stc
cli
insl
and
jge
ljmp
and
lea
fsubl
sbb
sub
sbb
push
or
sbb
hlt
cmp
adc
hlt
xor
cmp
dec
sub
aaa
sub
je
jo
enter
add
dec
aaa
orb
cmpsb
int
imulb
mov
sub
and
push
adc
sbb
cs
stc
cmp
mov
jecxz
je
sbb
jmp
xchg
rcll
xor
fdiv
sahf
mov
push
sbb
dec
fs
movsl
xchg
insb
push
test
dec
rcl
push
add
mov
out
mov
lea
das
xchg
lea
cmc
push
dec
call
testl
lock
mov
fstpt
call
or
push
pop
out
push
cmc
call
in
sbbb
sti
filds
clc
stos
mov
or
addr16
cli
jmp
test
div
cld
data16
lea
popa
scas
shlb
popf
test
xchg
dec
pop
ret
sbb
fdivrs
out
lret
pusha
rorb
out
inc
xchg
in
hlt
mov
lahf
idiv
push
loop
push
or
sbb
push
pop
ljmp
fwait
rep
pop
jns
iret
push
lock
popa
and
add
je
sub
bound
inc
ds
mov
mov
rclb
mov
std
push
mov
xchg
js
ljmp
ljmp
test
xor
je
out
ficoml
hlt
or
clc
insl
sbb
mov
mov
and
xor
cmpsb
inc
mov
int
mov
mov
add
clc
cmp
jno
jecxz
inc
int
ret
clc
xlat
sub
aad
add
imul
fsubrs
loopne
movl
push
rcr
mov
sub
enter
movsl
mov
add
xchg
repz
leave
xor
xchg
in
jns
push
push
mov
dec
mov
mov
jb
pop
push
cmp
pushf
loopne
movsb
cmp
pop
inc
popa
fldl
mov
lcall
ds
pop
add
jmp
test
push
jl
jno
xor
xor
adc
push
iret
cmpb
cmp
mov
add
sub
mov
inc
pop
ficoml
xchg
dec
fcmovb
out
loopne
mov
outsb
cmp
mov
pop
and
xchg
and
mov
inc
cmp
dec
js
xchg
mov
push
repnz
inc
push
imul
jno
test
scas
imul
dec
and
add
adc
or
jb
shl
dec
adc
std
incl
inc
xchg
pop
insl
aaa
mov
arpl
lea
hlt
push
or
cmp
imul
or
enter
pop
mov
popf
jae
cwtl
cwtl
push
or
push
mov
adc
mov
sbb
mov
stos
mov
sbb
xor
ret
and
sub
inc
push
cmp
call
ret
mov
mov
in
loopne
jle
stos
xchg
mov
push
xchg
add
mov
inc
loopne
jae
cmpb
daa
jae
and
adc
dec
lods
mov
sti
into
test
nop
pop
fildl
aad
lods
jle
iret
mov
jae
fmulp
xchg
fcompp
sbb
sti
and
pop
movsl
and
pop
dec
xchg
lea
jl
shll
sbb
int3
mov
jmp
mov
mov
mov
cs
cmpsl
dec
mov
pop
mov
cmp
iret
inc
xchg
push
xchg
sbb
les
loop
mov
mov
push
jae
mov
add
insb
mov
mov
dec
cli
push
arpl
pop
xchg
int
fs
pop
dec
sti
xchg
mov
jns
xchg
stc
daa
or
inc
sub
repnz
push
add
sub
sbb
loopne
rcr
jb
adc
addr16
add
aaa
popf
push
pop
test
test
cmc
iret
cwtl
mov
aaa
cmp
push
mov
cmp
or
nop
movsb
aas
outsl
fdivrs
jmp
fisubl
or
aad
movl
loope
push
adc
call
jp
arpl
xchg
xchg
mov
inc
dec
daa
push
ss
sub
dec
mov
jb
cwtl
cmp
icebp
test
faddl
jno
mov
push
inc
xchg
mov
dec
sbb
pop
outsb
dec
addr16
mov
add
push
fcompl
sbb
cmpl
or
adc
je
in
test
push
inc
or
or
addr16
test
insl
sbb
pop
fidivrl
movsl
dec
lret
iret
jg
jne
add
pop
stos
ret
cwtl
jmp
or
xor
dec
cli
and
cmc
sbb
inc
fidivl
dec
mov
popa
cmpsb
lahf
dec
xor
jo
adc
jo
adc
movsb
add
fcompl
add
gs
dec
cmova
pop
jne
lea
stc
frstor
fidivrl
push
xchg
mov
pop
dec
mov
adc
faddl
dec
adc
mov
dec
and
shrl
and
adc
pop
sbb
push
outsl
dec
addr16
popf
inc
dec
and
sti
jge
sub
xor
ss
or
add
cwtl
aas
jae
xor
pop
mov
sub
and
push
out
or
mov
xchg
lret
lds
pop
addr16
inc
cmpsl
movsl
icebp
pop
out
pop
aas
mov
fs
cmc
inc
dec
movsb
pop
sbb
fsubrp
outsl
or
xchg
loopne
pop
jl
mov
jp
mov
das
subl
mov
mov
in
icebp
fldcw
movsb
jns,pn
js
loope
movsl
bound
int3
mov
sbb
mov
inc
test
mov
adcl
enter
insl
jns
adc
je
fs
pop
push
mov
cld
push
dec
mov
jg
push
xchg
test
add
inc
mov
pop
bound
iret
in
stos
ds
add
aas
fcompl
repz
xchg
pop
enter
push
cltd
or
push
daa
xor
cmp
int
call
aad
stc
pushf
adc
or
popf
das
push
nop
lret
fisubrs
cmp
insl
arpl
xor
sub
es
outsl
or
scas
dec
sub
and
test
jecxz
sarl
sbb
mov
repz
xchg
mov
dec
insl
mov
into
add
cmp
sti
mov
dec
in
stos
iret
test
je
xor
cmp
das
and
mov
das
dec
and
testb
stc
xchg
sub
sbb
adc
repnz
mov
push
pop
shll
or
adc
pop
ret
ss
mov
xor
adc
jl
and
cs
mov
add
jns
cmovnp
cmp
icebp
adc
in
xchg
out
dec
sbb
jmp
addr16
jae
pop
mov
stos
stos
pop
cli
insb
cmp
adc
test
adc
pop
cmp
jecxz
and
jae
outsb
ror
jp
sti
dec
sub
lahf
xor
ds
and
push
xorb
out
fwait
sub
out
and
idiv
lcall
ja
cltd
out
lcall
add
rcll
sbb
mov
movsb
das
add
mov
and
cmp
movsl
cmp
test
outsl
mov
mov
sbb
loop
cmp
repz
dec
bound
cmp
clc
or
pop
lods
ffree
or
pop
sub
push
pop
pop
and
lahf
mov
adc
dec
mov
ret
int
cli
lea
test
push
jge
or
lcall
add
sbb
adc
out
cmp
adc
add
rcl
pushf
and
xchg
fnstsw
sbb
inc
adc
adc
or
gs
fdivrs
mov
sub
jno
sbbl
filds
nop
adc
sar
add
popf
cmp
icebp
popa
jne
mov
xlat
mov
repnz
push
or
xchg
push
dec
pop
jo
jnp
stos
shll
popf
mov
dec
ss
mov
sbb
xchg
out
mov
jl
ss
mov
jae
imulb
cmp
add
add
pop
andl
les
cmpsb
gs
inc
loop
decl
pcmpgtw
loope
inc
add
call
dec
cmp
in
pop
test
xchg
sbb
jb
xchg
push
or
out
sarb
sub
jmp
push
sub
xlat
inc
pop
and
int3
in
mov
nop
mov
jl
int3
clc
fisttpll
dec
mov
enter
push
push
scas
mov
mov
push
leave
xchg
mov
add
pop
adc
sub
popf
push
arpl
int
dec
adc
call
or
adc
sub
call
pushf
mov
inc
rcrb
in
repz
sbb
sarb
faddl
xchg
fildll
rol
repnz
inc
js
inc
adc
cld
arpl
icebp
add
jle
sahf
aas
lret
mov
sbb
cwtl
test
pop
movsb
mov
push
leave
ljmp
mov
xor
mov
xor
sbb
out
stos
mov
inc
inc
mov
adc
mov
in
add
lahf
nop
cltd
push
mov
mov
xchg
addr16
ds
outsl
push
push
addr16
dec
push
inc
xchg
xchg
cltd
pop
repnz
mov
adc
jp
pop
dec
aas
gs
insb
fiadds
sbb
lahf
and
or
mov
inc
jecxz
shll
cmp
icebp
dec
test
push
aaa
aaa
mov
mov
inc
xor
mov
or
push
pop
lock
mov
push
mov
or
fucomp
movsl
pop
aam
daa
fldcw
andb
xchg
add
jg
repz
pop
sub
push
faddl
int3
sarl
pusha
test
cmp
fisubrl
sub
jns,pn
mov
rolb
dec
leave
fcoms
pop
dec
aaa
subl
or
pushf
and
lret
push
outsb
push
test
into
aad
xchg
test
add
bound
das
mov
dec
add
xchg
in
hlt
cmp
jg
sub
sub
or
std
jmp
pop
and
roll
out
andl
xchg
test
adc
jne
movsl
dec
loope
or
inc
cmp
scas
lahf
sbb
mov
dec
outsl
xor
push
movb
ss
bound
adc
popa
les
scas
mov
adc
add
xchg
mov
testb
stos
movsb
lods
push
inc
mov
fisubs
and
shll
enter
shrb
jp
adc
mov
repz
jmp
sub
loopne
xchg
icebp
int
xor
inc
adcb
mov
xchg
test
inc
sarl
lock
fiaddl
mov
xchg
insb
xlat
incl
pop
aam
push
fadd
outsl
push
orl
dec
icebp
adc
pop
movsb
stos
adc
adcl
popf
inc
fs
inc
inc
aad
inc
cwtl
hlt
cmp
insb
push
xor
adc
inc
jbe
cmp
mov
das
and
out
jae
pop
xchg
rolb
imul
cmp
pop
sub
stos
and
sbbb
mov
adc
sub
ss
mov
push
lret
xchg
jae
daa
or
lret
xchg
test
xchg
or
push
adcb
push
and
outsl
xor
and
mov
ljmp
adc
stos
sub
mov
jnp
adc
jbe
inc
or
lea
cmpsl
sti
roll
jo
adc
cwtl
push
fsubl
adc
imul
arpl
arpl
push
cmc
fldt
or
jmp
inc
mov
cmpsl
adc
mov
adc
mov
out
jbe
filds
jp
adc
add
jno
rcll
mov
js
shr
out
dec
lret
adc
iret
mov
adc
pop
mov
fidivrl
push
mov
mov
sbb
mov
cmp
ret
add
icebp
add
loope
mov
lret
jl
dec
xor
sahf
in
in
add
xchg
shrl
dec
call
pop
adc
sbb
jge
mov
imul
adc
pop
movsb
jbe
repnz
pop
xor
jbe
addr16
in
lret
xchg
sub
aad
pop
fadd
fcmovnu
outsl
jbe
cli
ret
jnp
sahf
dec
mov
fsubrl
push
les
sbb
stc
push
mov
xchg
fcmovbe
rcrl
cmp
negb
addb
pop
cmp
movsl
inc
xor
jmp
mov
pop
das
xor
sub
xor
and
dec
sbb
aad
lods
xchg
idiv
adc
jp
sarl
jnp
movsb
inc
adc
int
mov
sbb
nop
outsb
mov
xchg
pop
lcall
outsl
inc
cmp
jmp
dec
pop
rclb
pushf
cmc
out
cmpsb
xchg
and
dec
jo
aas
mov
mov
je
rolb
fmull
fimull
adc
mov
pop
sti
xor
xchg
adc
jl
push
sbb
dec
xor
pop
lret
xor
rcll
imul
jmp
aam
test
xchg
push
mov
cltd
sti
xlat
and
rorb
xchg
fistps
xchg
cmp
aaa
loop
leave
out
xor
push
rorb
mov
out
xchg
fcomps
movsl
adc
lcall
rcrb
jb
jg
adc
mov
pop
faddl
jae
pop
outsb
add
arpl
sbb
pop
push
add
cli
dec
stos
sub
ljmp
dec
movsb
sub
add
ss
leave
popw
bound
rclb
jnp
xor
sbb
push
cltd
or
sbb
adc
outsl
and
fs
sbb
add
push
xchg
pop
test
jb
sarl
lds
mov
push
xchg
pushf
pop
jnp
aas
jns
sahf
jbe
and
dec
inc
daa
and
jl
dec
mov
push
clc
mov
inc
pop
adc
mov
loope
sbb
arpl
addr16
push
lods
mov
fldl
push
or
or
mov
pop
add
cwtl
ja
mov
and
inc
imul
fwait
imul
adc
imull
aad
and
push
jae
adc
mov
pop
mov
imul
mov
sarl
lods
sbb
frstor
sbb
cmp
inc
or
scas
xor
icebp
into
dec
jns
pop
je
sub
fisubrs
mov
cltd
sbb
mov
pop
fldl
xchg
int3
stos
pop
ret
jno
adc
or
pop
mov
sar
pop
cs
dec
outsl
dec
fcmovnbe
add
push
hlt
frstor
jmp
and
clc
push
pop
je
mov
loope
adc
hlt
enter
aas
jl
ljmp
push
enter
dec
mov
fisubrs
hlt
pop
ss
sar
sub
dec
fwait
pop
in
lret
mov
sbbl
cmp
adc
les
js
mov
stos
lea
enter
adc
scas
mov
fchs
mov
leave
popa
adc
in
cmp
repz
ret
push
je
push
jnp
push
popa
inc
es
loop
push
mov
je
scas
inc
dec
cwtl
lock
jne
js
ljmp
mov
lods
arpl
mov
insb
sbb
int3
add
int
stc
mov
scas
std
jb
lret
xchg
jnp
dec
add
pop
xchg
repz
mov
cltd
or
lret
in
out
std
pusha
test
lcall
mov
sub
mov
insl
pop
hlt
push
mov
push
adc
pop
pop
out
clc
jl
cmp
repz
dec
mov
addl
add
scas
adc
dec
ljmp
mov
daa
mov
ljmp
dec
aaa
cmp
push
out
adc
jp
dec
sub
popf
out
or
and
or
insb
stc
mov
cli
test
mov
push
jecxz
and
adc
adc
and
sahf
lea
sub
cmpsl
jns
dec
add
push
mov
fwait
stos
pop
repnz
push
mov
pop
imull
or
aad
in
or
push
addr16
xchg
inc
push
jns
aaa
mov
push
pop
sahf
lods
out
xor
lcall
and
sbb
add
cmp
aam
inc
aas
js
mov
cmp
add
pop
cmp
je
mov
xlat
jl
push
xchg
gs
pushf
push
and
lods
pop
xor
mov
movb
push
jp
stos
clc
aaa
into
adc
sub
sub
pushf
jne
inc
je
repz
cmpsl
fisubl
xor
or
push
testb
inc
mov
sbb
and
cmpsb
push
stc
int
cmpl
mov
pop
xor
xchg
into
pop
push
sarl
std
xchg
push
cmp
and
and
dec
insb
sar
jns
push
inc
xchg
lret
or
fdivs
icebp
mov
test
lret
cld
enter
cmp
pop
incl
lret
xchg
repz
std
inc
push
into
loop
push
lods
fwait
int
fwait
and
in
stos
out
pushf
xchg
enter
sbb
jecxz
pop
loopne
scas
add
jecxz
inc
fcmovne
mov
pop
adc
loop
icebp
xlat
cmpsb
jae
mov
inc
mov
leave
iret
inc
faddl
ds
mov
or
cmp
add
xor
js
xor
popf
inc
dec
mov
std
mov
mov
nop
shll
inc
mov
ja
adc
sarb
dec
les
dec
aam
xchg
inc
push
push
add
subl
jnp
dec
les
not
jne
add
or
imul
xor
test
jg
mov
loope
xor
sub
push
rcll
xor
mov
sbb
cmp
push
cmpsl
cmpsl
hlt
add
pop
sbb
pop
in
mov
sub
mov
pop
jnp
or
fs
mov
cmp
fcmove
lock
js
mov
fcoml
cmp
dec
ficompl
pop
push
pop
sbb
mov
out
pop
sbb
and
mov
add
xor
cmpsl
xchg
xchg
sub
dec
lea
test
xor
jl
imul
scas
dec
enter
cmp
test
mov
xor
add
adc
mov
push
sub
aas
mov
test
test
cli
loope
mov
push
in
pop
and
es
aam
mov
popf
pop
mov
scas
out
rorl
xor
mov
jmp
pop
insl
stc
aad
aam
mov
pop
dec
mov
xchg
notl
cmp
sti
cs
pusha
lods
mov
outsb
jne
xchg
jl
cmp
or
jmp
out
popf
sbb
adc
leave
and
push
sub
pushf
sbb
dec
sbbl
scas
test
jbe
rorb
ficomps
test
ljmp
das
mov
cmpsb
pop
cld
repnz
ss
push
clc
jne
sub
das
les
ds
cli
lcall
scas
nop
icebp
jo
popa
pop
fstpl
orb
dec
adc
add
stc
shlb
xchg
and
iret
sbb
sahf
in
jb
mov
std
cli
xor
dec
adc
das
jnp
pop
and
ret
gs
icebp
inc
pop
push
jne
jo,pn
in
cld
mov
fs
push
lcall
movsb
adc
xchg
stos
jns
pop
cmpsl
dec
mov
cmp
pop
negl
and
inc
clc
test
mov
mov
ret
or
lods
xchg
xchg
cmp
xchg
inc
outsb
imul
sbb
xchg
mov
mov
push
sbb
into
shlb
add
inc
gs
ret
mov
xlat
jecxz
fdivl
je
mov
mov
xchg
adc
xchg
push
or
rorl
aam
gs
push
pop
adc
xchg
std
xlat
test
stos
cmp
pop
mov
mov
dec
call
daa
sub
icebp
ficoml
lods
sahf
xchg
shrl
scas
or
es
in
dec
push
lahf
inc
jle
outsl
cmp
or
push
mov
js
cmc
and
lds
xchg
mov
jb
and
mov
lods
fdivrl
xor
jl
push
out
stos
push
sbb
mov
sbb
cmpl
ret
ret
add
xlat
repnz
divb
fdivp
sbb
and
test
inc
stc
mov
fwait
xchg
fsubp
inc
enter
rcrb
mov
clc
andb
mov
xchg
aad
incb
xchg
mov
shlb
add
lahf
pushf
gs
and
lods
inc
dec
cmp
sbb
outsb
iret
sti
sbbl
jno
arpl
push
and
pop
out
lcall
aas
mov
jb
inc
or
repz
mov
adc
ds
xchg
popl
shl
add
inc
pop
xchg
rolb
mov
mov
aaa
aad
xor
test
cwtl
daa
adc
aas
cs
pop
sub
insl
enter
fsubr
jno
sbb
out
mov
scas
pop
hlt
inc
fistps
xchg
pop
pop
pop
xor
icebp
pop
jle
pop
push
jbe
xor
add
pop
addr16
cmp
sbb
mov
lds
pop
popf
aas
icebp
jp
mov
xchg
cmpsl
inc
inc
and
outsb
jp
iret
xlat
push
stos
cmp
ds
push
mov
btc
push
nop
sub
mov
cwtl
inc
push
lds
mov
aam
outsb
push
or
lret
mov
stos
fsubrs
cltd
daa
rorb
stos
add
cmp
adc
sbb
jmp
lcall
aam
mov
or
sub
jge
pop
dec
cmp
or
jne
xchg
fimuls
adc
push
popa
jg
in
cmpsb
fmul
cwtl
pusha
sbb
outsb
data16
dec
mov
push
adc
enter
mull
or
cmp
mov
adc
sbb
std
mov
sbb
jmp
mov
shll
dec
pop
mov
push
dec
push
mov
repz
cmp
add
add
mov
hlt
dec
in
lea
lret
push
out
lret
loopne
cmpsb
jge
sub
adc
pop
das
push
loope
ret
sub
icebp
mov
mov
push
psrad
cmpsb
xor
ror
nop
or
lea
cli
cs
mov
push
outsl
lret
cmp
mov
out
pmaxsw
out
idivl
mulb
dec
sbb
mov
popa
pop
sbb
xchg
jb
scas
mov
rorb
fisubrs
push
cmp
dec
or
mov
pop
pop
or
in
pop
sbb
out
sbb
hlt
cmp
int
es
lock
or
xor
sub
push
jne
out
push
cld
inc
fsubrs
jo
push
std
xchg
repnz
mov
xchg
jle
cmp
test
sub
mov
jl
xor
andb
cmc
ss
jo
add
inc
jge
xchg
and
push
lret
das
pop
cmpsl
mov
in
push
in
pushf
mov
rcrb
outsb
iret
xchg
loope
jl
xorb
dec
ja
fists
ja
in
lahf
push
cmp
aas
xchg
pop
sub
lock
test
mov
nop
ss
andl
pop
xchg
test
dec
leave
bound
mov
cmp
pop
lret
cmp
dec
xor
push
inc
push
andl
push
pop
leave
cmp
mov
dec
jmp
icebp
gs
testl
mov
adcb
cmp
add
in
shlb
hlt
mov
sub
mov
sbb
push
push
or
pop
sti
mov
in
push
xchg
scas
mov
shrl
aam
sub
shll
bound
jb
rcrl
jb
stc
xor
cmp
jnp
jecxz
sub
cmp
inc
xchg
neg
stos
adc
popf
pop
iret
jne
jl
arpl
sbb
jbe
mov
dec
sbb
std
sub
pusha
sbb
mov
mov
lahf
push
insb
pushf
test
push
mov
sbb
pop
lret
dec
test
pop
adc
shrb
pushl
fidivrs
cmp
inc
bnd
jbe
adc
pop
pop
pop
arpl
jb
aas
sub
xchg
or
jne
push
iret
push
fwait
xchg
pop
daa
adc
dec
pop
dec
push
enter
mov
fistpl
xchg
ljmp
cmp
xchg
movsb
insl
out
and
test
lds
lret
push
lret
stos
mov
fstpt
dec
mov
imulb
popa
dec
jo
xchg
insl
shll
jnp
ds
jns
das
ja
leave
push
roll
jle
flds
sbb
xchg
jmp
fistpl
enter
std
mov
sbb
cltd
call
jb
sub
push
mov
stos
iret
and
sbb
cmpsl
mov
inc
cli
mov
inc
ljmp
xchg
fdivr
imul
xorb
sub
xorl
mov
scas
jnp
dec
rolb
sbbl
xchg
lcall
mov
nop
jmp
mov
stc
pop
xchg
into
jo
test
push
adc
addr16
out
push
push
rolb
inc
test
dec
fildl
insb
sbb
icebp
cmc
add
mov
cs
adc
gs
in
adc
sbb
cmp
xlat
pop
stos
add
test
adc
lock
lods
ja,pt
adc
xchg
sbb
ret
fadd
or
pop
cmp
dec
testb
outsb
add
push
into
out
mov
xchg
enter
fsubp
jge
adc
scas
add
test
cld
add
cmpsb
inc
push
shrl
lock
dec
sbb
cmpsb
pop
mov
popf
cmp
fdivl
inc
sbb
mov
mov
pop
or
cmp
outsl
das
scas
cmpb
sub
lcall
cmp
in
pop
xchg
pop
inc
sub
or
sbb
xor
cmp
mov
push
mov
popa
iret
cmp
jg
sbb
fsts
pop
sbb
aad
cs
and
jmp
negl
adc
sbb
les
pusha
rol
movsl
pusha
adc
push
popf
xor
lods
je
testl
into
pusha
pop
inc
dec
add
adc
int
pcmpeqb
into
incl
loope
cmp
jp
ret
into
fs
les
outsl
jle
loope
lds
fxch
rol
inc
dec
fisubs
icebp
je
rorb
inc
dec
mov
xchg
jae
ja
pop
dec
xor
clc
test
in
pop
jo
push
add
addr16
xchg
xor
ja
cmpsl
inc
in
and
daa
mov
and
sub
push
clc
mov
mov
adc
shll
repnz
lods
jecxz
dec
jecxz
inc
test
push
pop
cmp
je
movsb
cmp
push
jo
loop
outsb
ja
lret
pop
pop
sbb
sbb
loopne
out
pop
int
negl
lds
add
cli
sub
or
fnstcw
fidivrs
adc
sbb
dec
gs
les
sbb
inc
mov
cmp
mov
test
mov
inc
xor
stos
je
pop
push
pop
sub
loope
dec
iret
shlb
mov
lds
cmpsl
in
sub
jecxz
daa
arpl
pushf
int
push
mov
fwait
push
inc
out
inc
xchg
and
push
sbb
int
adc
mov
mov
sarl
call
add
xchg
inc
ret
cs
cs
adc
das
add
mov
fsubs
js
stos
xlat
rorl
in
cmpsb
or
mov
and
jge
insl
jae
ficoms
inc
push
adc
mov
push
cli
cmp
sbb
sarl
jne
ret
inc
loope
outsb
movsb
in
insl
test
pop
xor
std
into
inc
mov
and
sub
lret
lods
inc
jmp
or
xchg
addb
adc
xor
pop
lcall
pusha
fisubrl
push
cmp
jge
fildll
cmpsl
data16
adc
fcoms
sti
pusha
arpl
or
mov
mov
jbe,pn
jae
pop
inc
pop
cwtl
xchg
mov
pop
push
sbb
add
push
mov
pop
push
xchg
fstl
cli
and
lods
ss
aad
xchg
cmp
shlb
or
xchg
mov
test
call
mov
iret
iret
lret
jl
out
mov
pop
mov
hlt
movsl
mov
xlat
xchg
push
icebp
outsb
mov
lret
leave
lock
leave
pop
and
scas
inc
sbb
add
lret
sahf
or
test
rcrb
test
jle
mov
xchg
or
mov
fsubrl
ds
es
xor
insl
rolb
mov
rcrl
out
pushf
mov
sbb
orb
xchg
xchg
pop
inc
xlat
mov
and
pushf
push
sarb
jb
inc
push
sub
lds
xchg
add
sub
out
aas
jnp
dec
imul
out
add
outsb
push
jns
pop
adc
shrl
stos
mov
test
jp
fsts
xchg
jb
adc
int3
outsl
aam
ficoml
push
movsl
js
pop
fisubs
shl
mov
int
lret
mov
xor
jae
lahf
add
rcrb
imul
andl
lcall
sbb
movsl
lret
cwtl
test
dec
jne
fs
cmp
arpl
pop
bound
ror
stc
xchg
lods
push
or
pop
cmp
mov
insl
leave
lea
mov
add
dec
shl
and
dec
scas
jbe
jp
adc
sbb
imul
pcmpeqb
clc
sbb
call
and
jbe
xchg
inc
or
dec
mov
mov
dec
xchg
mov
sbb
dec
lret
pop
mov
lret
test
and
mov
fldl
into
adc
push
push
hlt
js
fdivr
add
fucom
js
xor
dec
and
cltd
fisubl
push
add
xor
jne
jnp
dec
lret
inc
das
lret
fs
push
push
inc
leave
cmp
pop
cmp
cmp
aas
pop
loopne
pop
cmc
xor
in
add
stc
push
repz
movsl
add
mov
sti
cmpsb
lea
cmpb
pop
lcall
xor
xchg
add
sub
add
mov
in
fisubs
loope
fisttps
pop
adc
mov
in
arpl
add
dec
or
dec
aas
adc
push
insl
jecxz
scas
std
push
hlt
mov
mov
push
inc
stos
cmp
mov
sub
iret
pop
dec
add
pop
scas
push
inc
pop
insb
into
xor
cmpsb
add
pop
repnz
ja
jne
cli
mov
xor
inc
xorl
add
dec
adc
cmp
jnp,pn
cmc
pop
in
sub
outsl
cmp
inc
jge
roll
imul
and
xchg
mov
mov
dec
andl
dec
push
insb
movb
lods
adc
add
mov
fld
and
loopne
push
pop
addl
loopne
jecxz
lret
add
rcr
scas
sbb
daa
mov
negb
cltd
inc
sub
xchg
sub
mov
stos
push
inc
nop
aaa
cmp
movsb
xchg
pop
sbb
pop
cwtl
pop
sbb
movsb
add
add
pop
sbb
add
or
push
mov
push
pop
into
lods
push
clc
aad
aam
out
rcrl
push
push
insb
gs
arpl
or
cmp
ljmp
addl
cmc
adc
cmpsb
adc
fwait
mul
loop
pop
out
in
dec
sub
les
imul
mov
ljmp
push
mov
add
subb
loopne
cmp
mov
or
mov
sti
mov
int
in
pop
mov
xor
in
xor
add
mov
sbb
inc
leave
inc
in
adc
out
jbe
cmp
lods
and
push
mov
stos
imul
adc
add
cwtl
pop
sahf
dec
in
push
pop
jae
fsubrl
test
xor
mov
dec
test
jp
jnp
xorl
sub
add
lods
cmp
dec
mov
push
jp
movsl
leave
cli
movsb
sub
mov
pop
insl
cmp
add
sbb
push
add
mov
aaa
xchg
orl
pushf
sub
cld
sbb
mov
adc
mov
movsb
inc
push
fiaddl
iret
cwtl
xor
movsb
push
dec
or
push
pushf
rolb
inc
mov
rclb
enter
add
or
enter
jns
sbb
mov
mov
pop
xor
cli
loopne
lret
cmp
fwait
push
and
jmp
and
lahf
test
in
inc
pop
add
inc
adc
sbb
cs
mov
sub
data16
xchg
and
xchg
in
mov
push
mov
call
cmpsl
mov
mov
xchg
jg
imul
sbb
sbb
rorl
lods
dec
sbb
cmc
cmpsl
pop
movsb
mov
std
xchg
sti
dec
jne
imul
sub
in
xchg
shlb
fbld
jo
shll
daa
addb
cltd
sub
arpl
adc
lret
icebp
lea
sub
pop
cmpw
push
cmp
add
arpl
ljmp
and
or
xchg
aas
cltd
adc
insb
or
cs
aad
mov
test
loop
dec
out
fldcw
push
or
inc
xchg
lods
mov
lcall
xor
shl
in
mov
in
jns
sbb
inc
mov
cmp
stos
fld
mov
inc
mov
int
je
lds
inc
mov
or
mov
push
cmp
xchg
sbb
addb
or
jmp
testb
ficoml
push
jle
mov
pop
mov
stos
cmp
stos
mov
in
or
mov
pop
nop
mov
andl
loop
movsb
sbb
push
je
sti
xor
jo
data16
imul
outsb
ja
xchg
jne
xorb
fmuls
xchg
dec
jo
stos
les
neg
pop
divl
cmp
adc
es
sbb
rcr
ds
xchg
popl
jle
hlt
mov
idivb
dec
mov
rcll
in
jp
push
push
jno
insb
sub
repz
icebp
int
xor
mov
jge
cs
nop
cld
mov
fs
add
es
ds
push
test
mov
xchg
outsl
push
data16
mov
lods
pop
test
in
mov
cmp
shlb
or
cmp
jp
jae
scas
sbb
scas
jecxz
fsub
shrl
mov
push
insb
sbb
fmulp
or
adc
lods
sbb
fadd
mov
adc
jae
imul
sub
lahf
or
mov
mov
jl
ljmp
rclb
test
je
pusha
mov
xor
jl
mov
pop
and
call
and
movsb
push
xorb
repnz
mov
test
jno
cmp
mov
pop
inc
adc
ds
fs
shlb
inc
mov
out
js
imul
stc
adc
mov
je
loope
xchg
jge
jo
ljmp
pop
fldcw
mov
insb
dec
into
cmpsb
xor
imul
cmp
outsb
adc
in
daa
out
out
fadds
dec
mov
adc
xor
ja
mov
lock
cs
xchg
roll
and
sub
decb
jmp
or
jmp
pop
mov
inc
cmp
ret
nop
pushl
adc
aas
repz
scas
test
stos
outsl
fcomp
inc
jno
bound
pop
or
repz
sahf
out
add
inc
mov
mov
adc
negb
je
fs
das
aas
arpl
xchg
ds
mov
daa
pop
inc
or
pop
adc
addb
add
or
insl
call
dec
fdivl
and
std
lcall
lahf
sbb
push
lds
int3
stc
and
and
adc
incb
jecxz
lods
mov
repnz
jl
xchg
cmp
push
inc
dec
and
adc
addr16
aas
stos
inc
push
dec
fs
mov
ds
jmp
mov
clc
es
arpl
loope
add
pop
adc
pop
inc
mov
pusha
adc
push
cmp
aam
mov
addr16
xchg
xor
clc
cmp
pop
mov
push
cltd
aad
lea
aas
test
sets
ljmp
out
les
fwait
aad
jmp
xor
pusha
jle
repz
mov
daa
lods
sbb
sub
jnp
or
pop
dec
mov
psubb
cmpsl
inc
gs
nop
jecxz
xlat
mov
insb
cli
add
faddl
dec
sub
jns
scas
jge
jo
push
rolb
mov
sbb
sbb
jg
fwait
inc
jp
lret
lods
adc
nop
jo
jo
dec
xor
call
cltd
adc
sub
mov
mov
das
xorl
rclb
mov
mov
xchg
dec
sbb
pop
adc
test
xor
xchg
and
test
mov
xor
push
imul
sub
stos
mov
cmp
out
jg
iret
xlat
xchg
pop
mov
pop
mov
sub
add
sbbb
pop
cmp
fildl
out
adc
lcall
xchg
add
popf
mov
jecxz
mov
push
jbe
pop
xchg
jmp
xchg
mov
dec
push
out
in
mull
add
inc
jmp
add
negl
fildl
jne
lcall
in
loop
push
jae
ret
cwtl
lods
lret
js
mov
lock
cmp
inc
or
mov
cmp
mov
push
xchg
test
daa
xor
sub
xor
mov
js
mov
lahf
out
rcl
mov
jge
or
andl
int
loop
sub
shl
inc
loopne
ljmp
fildll
roll
cld
xchg
jg
push
sub
sbb
lds
xlat
and
out
dec
xor
fldt
xorl
mov
add
fnstcw
aad
mov
push
jns
testb
pop
test
js
fdivrl
repz
fcompl
xor
and
adc
xchg
in
popf
mov
loopne
pop
mov
sti
mov
bound
add
mov
xchg
pop
add
popa
jbe
xchg
jae
pop
mov
lock
push
xchg
aaa
and
lret
mov
pop
xchg
or
lahf
ja
inc
or
loop
imulb
movsl
pop
push
mov
sub
imul
lret
or
test
or
fs
lret
fiaddl
jmp
and
and
fwait
mov
cmp
shlb
jl
jg
add
dec
cltd
shlb
inc
mov
cvttps2pi
shl
pop
add
mov
pop
add
cmp
xor
fistpll
test
xor
and
setno
cmp
jo
lahf
push
xchg
pusha
movsl
or
sbb
sub
nop
mov
sbb
sub
jns
std
adc
lret
outsb
xlat
cmp
dec
hlt
call
imul
imul
ret
jnp
inc
jbe
bound
out
roll
popa
xchg
dec
nop
enter
imul
push
shlb
fsubrl
push
push
adc
or
sub
js
dec
adc
jl
xchg
and
xchg
push
out
pop
ffreep
stc
and
or
cmp
mov
adc
inc
xchg
loopne
fdivrl
and
mov
xor
call
push
incl
mov
xchg
arpl
mov
and
sub
mov
xchg
and
adc
jnp
push
jecxz
sub
leave
push
bound
into
pop
cltd
pop
sub
mov
orl
add
sbbl
pop
rcrl
mov
sub
std
jmp
dec
pop
mov
scas
dec
jp
and
pop
outsl
mov
inc
cwtl
jns
repz
test
int
or
pop
jecxz
lret
fistps
jg
sbb
push
cs
test
add
or
sbb
stos
test
push
sbb
icebp
mov
daa
aaa
add
pop
or
xlat
pushf
add
cmc
xchg
inc
dec
mov
xor
mov
or
pop
popl
dec
mov
sbb
dec
mov
push
int
fildl
xchg
and
mov
ds
push
mov
aaa
leave
in
cmp
inc
sahf
jns
adc
inc
nop
cmp
cmpsl
lods
stos
xor
pop
or
pop
xor
cli
xchg
rcr
call
imul
and
jo
jecxz
popa
adcb
and
pop
cmpsb
das
jecxz
mov
orb
push
out
insb
test
sbb
fldt
add
adc
xchg
jb
inc
mov
ror
js
pop
and
jge
movsb
scas
jg
mov
aam
loopne
das
int3
jo
lret
addr16
pusha
dec
lods
and
test
rolb
xchg
push
cmp
pop
rclb
sub
mov
and
roll
push
out
sbb
das
pop
aam
shlb
mov
xchg
in
inc
push
ds
xorl
std
xor
dec
loop
cmp
nop
enter
mov
xchg
or
sbb
jns
orl
out
fstpl
push
mov
jnp,pn
jo
cmp
sub
fwait
loope
inc
scas
cwtl
inc
fucomp
adc
lods
jecxz
jnp
loope
push
push
mov
add
pop
xchg
fcoms
or
out
jge
adc
imull
jbe
mov
loopne
mov
int3
aad
adc
imull
cmpb
lock
nop
cmpsl
adc
cmp
xor
adc
mov
pop
or
aaa
push
cmpsl
aaa
jnp
xlat
loopne
or
sbb
cmpsb
push
or
xchg
leave
xlat
or
jmp
pusha
add
std
lret
scas
out
lods
rcrb
adc
aas
mov
dec
sbb
arpl
or
cmp
pop
or
push
jbe
out
jne
and
xchg
into
or
mov
add
mov
xor
insl
or
cmp
enter
movsl
fiaddl
adc
mov
shrb
pop
mov
addb
push
and
dec
test
fstl
lahf
lds
rcrl
adc
dec
decb
cmpsl
xchg
sub
xchg
test
sub
push
clc
lea
loope
lea
out
daa
rorl
xor
jnp
nop
test
add
repnz
mov
or
xchg
lods
and
pop
push
push
rorb
mov
or
dec
dec
inc
dec
or
incb
inc
jecxz
jno
sbb
adc
lea
cmc
stos
mov
dec
push
rclb
jp
push
sti
add
es
push
aad
jbe
sahf
imull
or
movsl
add
xchg
ja
mov
in
stc
sub
bound
sub
or
ss
pusha
rorb
outsl
or
fsubrs
push
std
pushf
mov
ret
mov
xchg
push
xchg
jg
and
scas
mov
xor
mov
iret
xchg
int3
push
dec
pop
xchg
pop
pop
int
leave
push
out
inc
popf
int
repz
fstp
jnp
pop
jns
and
scas
fisubs
ljmp
out
lcall
inc
push
sub
dec
sbb
mov
push
aaa
icebp
push
adc
xor
test
cmpsl
loope
jae
repnz
fnsave
stc
and
insb
dec
and
push
jl
dec
dec
pop
push
push
fildl
test
jl
and
stos
testl
call
cwtl
mov
arpl
mov
loope
mov
cmp
push
scas
negl
xor
add
dec
pop
popf
cmpb
cs
xchg
cld
in
inc
xchg
in
insb
jno
loop
insb
cltd
je
jb
sbb
imul
nop
shll
push
mov
inc
inc
das
rcrl
dec
shrd
shrb
loop
jp
sbb
outsl
push
mov
and
fnstenv
mov
cld
mov
jne
ret
mov
inc
push
mov
jle
xor
jp
clc
nop
es
shlb
decl
test
out
or
dec
mov
nop
cmp
jo
lret
adc
adc
clc
imul
inc
sub
sti
cltd
pop
xlat
addl
aaa
stos
stos
push
and
pushf
repz
inc
mov
cmpsb
fistpll
call
mov
push
rorl
mov
stos
nop
sbb
push
xchg
popa
push
jo
mov
xor
pop
fs
cmp
in
lods
in
push
mov
dec
outsb
ds
xor
ds
out
xchg
std
int3
inc
addr16
and
pusha
jp
inc
aas
xlat
das
mov
push
mov
and
xchg
inc
jle
idiv
leave
cld
aam
ror
lret
test
stos
fidivrl
dec
xchg
insb
dec
mov
aaa
lret
push
sbb
xchg
cmp
sbb
mov
or
rcll
and
adc
fnstcw
jo
popa
in
inc
out
fdivr
stc
test
add
sub
mov
ja
enter
push
daa
fists
dec
mov
stos
stos
pop
lahf
test
sbbb
int
aam
inc
mov
jb
rolb
sti
mov
lret
pusha
dec
ret
int3
out
cwtl
adc
outsb
xchg
ret
mov
sbb
out
mov
pop
inc
xchg
and
imul
adc
popf
push
imul
xchg
dec
scas
int
mov
jo
cmpl
aam
loop
dec
mov
enter
je
insb
mov
dec
push
jge
adc
add
dec
inc
and
ret
sub
ret
mov
adc
mov
aad
imul
sub
jae
fs
gs
inc
in
movsl
dec
data16
test
inc
js
roll
add
sbb
jmp
icebp
in
xchg
xor
fcoml
nop
scas
stc
mov
outsb
testl
sarb
dec
push
mov
sbb
out
mov
and
hlt
mov
in
lods
jnp
lods
sbb
cmp
in
pcmpgtw
and
rorl
sub
mov
jno
jp
xchg
cwtl
jp
rcll
or
data16
push
mov
push
movsb
jmp
ds
stos
xor
stc
inc
push
out
lods
xchg
iret
and
jo
loop
cmc
lock
xchg
cltd
xor
jne
jge
in
mov
lcall
out
cmp
leave
mov
sub
sbb
ljmp
pop
arpl
xor
xor
adc
pop
inc
repnz
movsl
push
mov
push
xchg
andl
xor
lock
lret
es
test
repnz
into
xor
daa
into
aam
pop
lods
xchg
or
jle
pop
enter
or
mov
push
sub
out
into
xchg
cwtl
out
js
popa
sub
movsb
or
mov
insl
es
add
dec
xchg
mov
adc
push
jnp
lock
mov
ljmp
mov
shrb
scas
sbb
dec
scas
dec
ljmp
dec
out
pop
adc
push
pushf
lcall
mov
outsb
dec
jle
je
sbb
cmc
imul
inc
cmp
leave
sub
mov
outsb
rol
sub
xchg
xchg
xor
pop
mov
xchg
mov
dec
rorb
lahf
loop
xchg
nop
out
xchg
sarb
mov
mov
or
jle
pop
clc
dec
mov
push
inc
es
imul
sbb
jo
xorl
ja
or
cmp
ljmp
jae
movsb
and
and
pushf
shrl
cmp
lcall
ja
jl
adc
mov
xor
out
fsts
cmp
das
xor
add
in
insb
in
out
lret
lret
jg
lahf
fbld
xor
mov
jge
hlt
cmpsb
mov
xchg
ds
jg
mov
and
mov
sysexit
jbe
or
mov
xor
dec
scas
shrb
movsb
gs
notl
mov
push
jne
xor
jmp
pop
fcompl
ljmp
xchg
mov
es
mov
pop
jbe
xorl
outsl
or
sbb
adc
in
aaa
mov
je
push
pusha
lret
dec
push
xor
sbb
aad
adc
push
outsl
lret
into
xor
mov
mov
sub
test
xchg
mov
gs
mov
dec
dec
movsb
xor
xchg
dec
enter
adc
sub
mov
add
mov
scas
or
mov
jecxz
push
cld
arpl
mov
mov
in
call
xlat
shll
aad
cmp
int
mov
xchg
xor
cmpsb
adc
jge
xchg
xor
cmp
sub
xor
aaa
dec
cwtl
cld
ret
pop
rclb
in
imul
mov
fs
mov
fists
add
std
cmp
les
adcl
addr16
adc
fildll
sbb
pop
dec
push
shrb
call
cmpsl
or
mov
xor
sub
xchg
add
ret
or
cmpsb
aaa
or
push
push
fldt
dec
dec
inc
mov
fs
cmp
adc
and
jecxz
xchg
and
or
jp
enter
daa
inc
mov
stos
sub
mov
push
pop
call
aas
je
push
or
dec
daa
fwait
inc
lret
inc
aaa
mov
mov
or
enter
lds
rcrl
pop
or
stos
xorb
aas
test
lods
pop
jge
jbe
movsl
arpl
pushl
lods
int
dec
pop
jmp
ja
dec
sbb
jge
adc
iret
dec
rclb
jge
std
addr16
dec
int3
iret
jg
adc
push
loopne
sub
mov
mov
icebp
ret
pusha
ds
mov
enter
sti
or
aas
in
jge
repnz
sub
out
movsl
jp
cmp
lods
lods
sub
mov
jmp
or
xchg
je
add
lret
adc
push
ljmp
test
scas
push
aam
fidivrl
pop
out
jo
add
push
test
sub
xor
in
loop
hlt
jnp
xlat
cmpsl
imul
jb
push
mov
add
sub
rorl
cltd
sub
incb
dec
test
lret
pop
xor
int
js
jnp
lock
fstp
loop
mov
add
pop
xor
repz
jle
add
dec
lcall
push
mov
pop
pop
fdivrl
or
enter
push
xor
xor
shrb
push
pop
inc
mov
insl
mov
jbe
iret
xor
and
sahf
imul
fsubr
xchg
inc
mov
or
cmp
aad
mov
mov
int
in
push
std
dec
in
js
rcrl
sub
jl
stos
cmp
fptan
imul
out
push
lods
push
icebp
add
test
enter
into
mov
out
jg
mov
mov
es
pop
scas
rcll
push
xchg
push
mov
mov
movsl
mov
in
movsl
inc
jnp
xor
pop
and
mov
mov
movsb
mov
jmp
jl
mov
adc
call
xchg
rorl
shll
clc
jle
xlat
mov
xchg
daa
push
inc
aam
inc
or
xor
lods
xchg
xor
lods
pop
xchg
test
aas
rcll
out
add
into
pop
xor
inc
jns
iret
imul
mov
add
out
inc
add
pop
dec
jle
popf
mov
gs
stc
add
pop
xor
jnp
aad
dec
xor
xchg
xchg
cmc
fnstsw
inc
pop
cli
or
mov
pushf
dec
or
push
lds
dec
cmp
adc
fldenv
sub
js
xor
cmp
lret
cmpsb
imul
outsl
cmp
dec
jnp
jmp
mov
das
adc
push
jnp
mov
das
xor
xchg
shll
je
in
mov
repnz
sub
mov
xor
inc
cmpsb
adc
mov
cmp
iret
cltd
jbe
cltd
xchg
idiv
adc
je
cmpl
insl
push
ret
mov
fisubs
testb
xor
jb
push
mov
fldcw
and
sarl
leave
jp
divb
mov
addb
push
mov
lds
gs
adc
mov
lret
sub
aam
mov
push
push
mov
jmp
popf
ds
pop
xchg
cmp
aad
repnz
stos
sub
mov
mov
stos
aaa
cmp
pop
push
and
daa
ds
outsb
pop
jp
ret
fwait
cmc
lea
insl
inc
fchs
movb
xlat
lock
inc
xchg
mov
cwtl
add
sbb
cmpsb
in
add
add
and
shl
push
pop
fsubs
pop
fs
lds
cmp
addb
jo
pop
inc
jo
jbe
pop
push
sbb
ret
push
mov
ds
daa
and
test
loop
int
in
movsb
push
push
xor
aam
cmp
shrl
xor
mov
aas
sub
mov
mov
and
insb
or
mov
mov
mov
push
ret
je
mov
add
hlt
addr16
sbb
clc
mov
das
inc
xchg
lcall
jecxz
inc
ja
movsb
lahf
and
loop
pop
das
pop
cmp
mov
dec
push
pop
add
mov
ja
repnz
jg
or
mov
xor
mov
test
je
mov
fwait
imul
dec
cli
sub
dec
pop
and
mov
arpl
fildl
adc
pop
mov
sti
loopne
scas
jnp
outsl
cwtl
xchg
outsb
mov
sub
imul
in
add
pop
pop
pop
out
jo
aas
cmp
adc
arpl
hlt
sub
fmull
xchg
mov
shr
add
sbb
xor
push
rorl
pop
or
shlb
int3
popf
int
xlat
repnz
pop
or
or
lea
pushf
lods
dec
lret
outsb
push
lret
insl
fwait
bound
insl
insl
pusha
imul
sub
jns
inc
adc
mov
pop
lahf
repz
sub
out
jo
lock
jmp
idivb
xchg
add
xor
je
std
std
out
mov
mov
add
mov
pop
xchg
test
leave
add
dec
lahf
and
in
mov
rep
dec
mov
and
lcall
add
cli
jne
hlt
mov
push
jbe
push
xor
test
push
test
mov
ljmp
ds
jl
call
sub
call
cmpsb
mov
sarb
imul
out
inc
inc
adc
jg
rorb
ds
jnp
insb
jp
mov
jbe
pop
hlt
mov
icebp
sti
loope
es
adc
inc
lea
mov
inc
jl
cmpsb
call
xor
pop
push
stos
test
cmp
rolb
nop
into
test
jae
sub
sub
test
aam
test
int3
inc
push
popa
mov
pop
insl
or
scas
test
adc
cs
dec
or
cmp
lret
mov
lahf
and
daa
fstpl
sar
notb
push
ljmp
or
jp
fstps
xor
add
pushf
push
adcb
mov
stos
cmp
add
pop
xor
scas
popa
sti
shlb
ret
xchg
out
xchg
test
cmp
in
adc
xchg
lret
lret
push
add
gs
andb
dec
xchg
mov
pop
test
push
fcomi
popf
cmp
leave
testb
out
bound
lret
sbb
sub
push
xor
pop
fdiv
shlb
nop
rclb
int3
outsl
and
fmuls
lods
popa
movl
inc
fisubl
add
push
mov
sbb
cmp
push
inc
cwtl
cli
std
in
mull
fstpt
pop
pop
insb
data16
outsl
adc
addl
rcr
bound
out
rol
dec
sbb
pop
rorl
shlb
imul
js
mov
push
sahf
add
out
out
lret
mov
cltd
inc
xchg
fldt
jge
jmp
mov
xor
xor
std
movsb
xor
shr
bound
in
add
lcall
xor
addb
fistpll
shlb
aad
pop
stos
cmc
into
cmp
insb
xor
stc
repz
adc
push
fs
test
out
jns
fcoms
ss
int
inc
cmpsb
push
or
push
cmpsl
jge
mov
adc
xor
lock
es
inc
push
call
scas
out
inc
clc
jle
adc
stc
xor
ss
dec
xor
pop
or
into
icebp
shlb
jmp
loope
rcll
ja
rclb
xchg
adc
xor
push
dec
ret
jmp
jecxz
sub
mov
ja
stos
mov
mov
dec
rcll
mov
shl
pop
fs
popf
mov
pop
rolb
dec
nop
jb
lock
loop
jmp
movsb
aad
out
sbb
or
insb
ret
mov
stos
sbb
insl
jle
jb
test
pop
sub
push
dec
jb
cltd
jne
sbb
xor
xlat
adc
cmp
lock
mov
inc
test
xor
cmpsl
or
ret
test
and
mov
cmp
or
fildll
aaa
mov
mov
rorl
jnp
into
enter
and
pop
cwtl
add
xor
and
and
fucom
lret
jae
lahf
out
jge
pop
fadds
out
repz
cmc
jp
test
loop
sub
nop
out
aam
mov
fsubs
mov
mov
lret
mov
mov
mov
dec
push
ficoml
sbbb
mov
les
cmp
fldl
jne
sub
orb
push
sbb
int3
hlt
fwait
dec
jbe
fcompl
adc
subps
add
pop
sbb
repz
test
adc
jecxz
pusha
jae
ret
push
xchg
in
int3
lcall
and
cmp
jbe
push
mov
ljmp
add
scas
lret
cmp
aam
push
mov
lea
mov
out
jmp
add
and
add
loopne
pop
fmull
inc
mov
mov
adc
xchg
push
lods
and
add
pop
jmp
lea
in
and
mov
xchg
icebp
sbb
popf
aad
pushf
in
sub
bound
push
insb
mov
mov
outsl
mov
xor
adc
pop
testl
inc
xor
push
pop
cmp
fstpt
push
divb
jmp
cs
aaa
lret
fwait
ljmp
xchg
cltd
icebp
push
cmc
adc
out
pop
mov
push
test
xchg
pushf
inc
jl
mov
cmc
and
call
add
gs
dec
adc
dec
mov
push
hlt
mov
push
into
or
jne
adc
jecxz
les
out
jne
test
repz
cmp
pop
push
out
inc
into
divb
or
imul
inc
addr16
xchg
push
jbe
in
bound
sub
test
out
arpl
xor
loopne
ss
push
xchg
mov
jl
jb
inc
outsl
jno
stc
mov
push
pop
out
orb
mov
mov
pop
dec
inc
imul
rcrb
sahf
pop
inc
mov
add
add
xchg
out
add
or
into
xor
shrl
mov
test
pop
je
push
andl
ret
add
int
pushf
outsl
xlat
mov
xor
or
pop
outsl
mov
movsb
jp
dec
mov
in
aaa
jne
xchg
mov
inc
aaa
and
imul
xor
lds
xor
pop
cmp
mov
aad
enter
daa
inc
test
cmp
cmp
cmpsb
pop
cmp
popf
ret
jle
add
or
ds
push
xchg
lods
jo
xor
loop
insb
ss
or
in
fmul
mov
mov
jmp
imul
inc
jo
xlat
xor
push
stos
outsb
push
repz
sbb
inc
mov
mov
das
insb
jg
in
push
into
jp
popf
pop
insb
lret
or
jecxz
rclb
pop
rolb
sbb
push
dec
pop
jmp
push
enter
adc
mov
cmp
mov
pop
je
mov
stos
mov
call
jp
in
inc
jae
xor
and
lds
sub
cmp
fiadds
mov
push
aam
xchg
lahf
repz
push
notb
pop
adcb
and
inc
pop
or
roll
cmp
sahf
in
je
inc
sub
movsb
dec
cmp
sub
or
rep
inc
rcrl
andl
mov
and
data16
sbb
aam
sub
repnz
scas
pop
pop
push
or
or
pop
sahf
inc
adc
enter
hlt
addr16
leave
mov
shr
jecxz
pop
mov
aaa
test
jl
std
xchg
test
sub
cmp
push
sbbl
sbb
ret
pop
dec
shll
movsl
push
out
sub
and
shrb
and
inc
scas
cmpsb
push
sub
pop
in
inc
movb
jbe
std
ss
pop
or
scas
push
shlb
mov
inc
mov
jmp
sub
pop
jmp
xor
imul
mov
push
and
cli
scas
xchg
push
xchg
lahf
and
sbb
lcall
sbb
push
pop
adc
jl
into
dec
jcxz
mov
add
lret
lods
rcrl
sbb
test
enter
pop
jnp
decl
ds
je
jno
orl
andl
cmc
loop
add
xchg
fnstcw
filds
xor
or
inc
mov
sbb
loope
nop
ret
pop
lret
roll
sub
aad
call
loope
imul
mov
ds
push
dec
xor
aad
sti
imul
and
cmp
pop
hlt
xor
jae
cmp
ja
negb
sti
push
popf
ds
mov
xchg
cs
cmp
cmp
test
mov
das
inc
int
test
adc
sbbl
in
push
sub
pop
mov
cmp
ja
stc
fldt
sbb
mov
adc
hlt
rcrb
fcompl
or
dec
dec
dec
pop
fwait
pop
push
mov
int3
xor
sub
fidivrl
lds
mov
or
outsl
cmp
addr16
mov
inc
pop
icebp
ds
cmp
jecxz
sbb
add
cmpsb
sbb
mov
push
in
lea
out
addb
mov
fldt
mov
movsl
mov
imul
xor
das
dec
rcrb
ljmp
int
data16
lret
pushf
mov
jmp
mov
bound
arpl
mov
jge
popf
mov
pusha
and
cmp
pop
mov
test
ss
dec
xchg
addb
test
mov
subl
sbb
adc
add
xchg
or
mov
sbb
and
add
in
adc
cmp
mov
cwtl
fisubrs
mov
and
jo
insl
mov
roll
add
mov
jmp
insl
cs
negl
jecxz
repz
lock
push
xlat
negl
pop
es
das
xor
cmp
mov
xor
pusha
iret
push
imul
inc
add
in
es
mov
out
push
call
pop
dec
mov
cld
stos
xor
mov
jo
push
dec
outsb
stos
insb
adc
inc
ss
sbb
jne
addr16
mov
out
xor
imul
cli
xchg
pusha
fcmovb
and
orl
stc
das
jge
nop
out
shll
test
dec
ja
jnp
cmpsb
test
bswap
shl
cmp
or
idivl
adc
sbb
xchg
or
or
dec
fiaddl
lcall
push
pushf
inc
lcall
fisubs
lret
or
mov
movsb
aam
ret
mov
or
add
enter
lock
aam
mov
ljmp
data16
mov
lds
pop
adc
cs
sub
sbb
or
in
xor
sub
inc
dec
jmp
push
lahf
inc
pop
hlt
or
inc
cmpsl
loop
cwtl
scas
leave
aas
les
sub
cltd
xlat
popa
mov
and
mov
leave
xchg
sbb
dec
sub
add
xchg
add
rorb
mov
push
fstl
cmp
out
scas
int
repnz
and
int
pusha
sbb
sub
cmp
aad
movsl
mov
adc
sbb
push
pop
jns
movsl
popl
pop
push
xor
dec
daa
and
je
adc
test
jo
cmp
pop
xchg
mov
clc
into
dec
popf
int3
mov
or
dec
or
aad
cmpsb
mov
cmpsb
xor
in
dec
loop
jge
lcall
mov
xor
lret
adc
mov
aas
mov
stc
vdivss
out
mov
xchg
xchg
push
adc
jmp
mov
inc
add
scas
pusha
je
rclb
mov
fcmovb
sbb
pop
mov
adc
adc
sbb
insl
insb
movsl
aad
sti
movsl
lea
inc
inc
mov
push
call
cmc
adc
mov
lods
xchg
test
or
jl
mov
cs
dec
outsb
ret
fiadds
sub
dec
ljmp
inc
out
stos
outsl
movsl
and
sub
or
or
push
mov
dec
rcll
sub
pop
cmpsl
cmp
pop
mov
and
fsubr
popf
sti
mov
add
outsb
inc
jmp
addr16
hlt
das
cmc
jb
jle
out
in
sbb
pop
aas
icebp
int
nop
xor
or
dec
xor
mul
dec
scas
aad
ljmp
mov
out
inc
cmc
push
data16
hlt
mov
cmp
pop
mov
and
jae
dec
mov
pushf
inc
cld
loop
aad
inc
adc
inc
adcb
dec
daa
cmc
test
mov
or
jno
aam
icebp
xor
xor
inc
int3
aaa
js
mov
dec
loop
sub
outsb
xor
sbb
int3
sbb
cmp
daa
popf
in
adc
add
jmp
xchg
adc
test
xor
pop
pop
ret
push
jnp
movsl
xor
sub
ds
mov
push
jge
sbb
push
arpl
push
sbb
mov
loope
mov
pop
test
sbb
into
ja
lret
cmpsl
test
sti
cmp
xchg
cli
jne
loopne
cmp
push
mov
aas
imul
lret
stos
mov
mov
adc
dec
inc
and
ud0
inc
dec
mov
repz
cs
adcb
dec
push
stos
lcall
movsl
shll
out
push
mov
push
scas
ret
xchg
push
xchg
mov
adc
xchg
jge
inc
rcrb
jl
dec
sub
jbe
or
popf
add
sbb
and
lret
or
dec
adc
stos
or
push
shlb
cmc
lahf
imul
xor
cs
inc
xchg
insl
jle
jae
mov
scas
inc
lret
mov
dec
ds
popa
pop
subl
cmp
jnp
test
lahf
push
lcall
push
xchg
pusha
jo
or
sbb
test
mov
out
xor
inc
shlb
testl
hlt
dec
sahf
ja
xchg
les
or
stos
xlat
das
inc
out
sbb
cli
movsl
in
in
add
enter
lods
inc
mov
xchg
xchg
xor
mov
xchg
icebp
sbb
insl
jp
shll
sbb
push
mov
pushf
fnstenv
cli
adc
mov
cmp
cmpsl
pushf
js
mov
jbe
icebp
sub
push
dec
lods
leave
inc
pop
out
movsl
push
add
lahf
cld
push
inc
jae
pop
push
je
jp
fldl
fdiv
sarb
das
test
movsb
mov
rcrb
cmc
sub
adc
hlt
jnp
push
or
mov
es
ss
jae
inc
imul
cs
and
cmp
mov
pop
mov
enter
and
idivb
sub
test
mov
rcr
jb
loope
sbb
mov
in
in
stc
pop
dec
imul
cmpsl
ds
push
stos
and
rcll
into
mov
repnz
add
xor
xchg
xchg
jecxz
shll
and
addb
sub
out
into
js
lret
mov
push
das
and
dec
cmc
dec
jmp
dec
inc
xor
or
bound
cmp
cli
xor
jb
filds
shlb
inc
enter
imul
fwait
xchg
adc
hlt
fucom
movl
mov
ret
outsl
cmpsb
dec
fwait
sbb
movsl
ljmp
jno
pop
fadd
xor
xchg
aaa
fisubs
and
adc
or
sbb
insl
xor
js
and
scas
add
in
push
pop
icebp
mov
imul
pop
popf
inc
sbb
add
sbb
dec
pusha
imul
hlt
xchg
addr16
sahf
shrl
xlat
jb
sbb
arpl
mov
mov
xchg
or
push
mov
inc
mov
push
shrl
movsb
dec
dec
jp
lea
lock
mov
xor
inc
subl
mov
adc
fwait
shl
xlat
and
sbb
out
sub
roll
sub
dec
movsb
int3
lret
add
ljmp
aas
or
fs
enter
adc
pop
test
xor
mov
xor
xchg
iret
enter
jns
rorb
sbb
mov
sbb
out
push
mov
enter
sbb
in
ret
das
push
mov
cmp
pop
in
scas
test
clc
dec
sahf
and
movsl
fidivrs
mov
aas
adc
sub
insl
and
push
and
pop
cwtl
push
pop
pop
sbb
add
test
mov
mov
pop
loop
mov
imul
hlt
mov
adc
lods
cmp
lea
add
out
mov
out
jne
xchg
and
dec
dec
pop
ja
pop
pop
mov
adc
lds
jbe
sbb
pop
iret
out
insl
call
repz
adc
mov
push
jbe
xchg
xchg
sbb
xchg
lahf
arpl
or
mov
loop
pop
inc
jl
xor
jl
out
mov
addr16
mov
fs
mov
mov
push
push
xchg
ds
loope
sbb
cmpsl
xor
aaa
jb
xor
push
mov
sbb
mov
push
cwtl
dec
dec
xchg
cmp
push
sub
mov
fmuls
mov
xchg
daa
test
or
push
neg
aaa
sbb
mov
mov
cmpsb
inc
mov
or
push
and
lahf
popa
jne
ss
pop
dec
into
push
jbe
push
cmovle
push
cs
sbb
sbb
and
xor
mov
xor
sbbl
mov
sub
or
movsl
daa
data16
inc
xchg
pop
faddl
into
pop
fcomip
pop
ljmp
test
les
jge
aad
mov
adc
pop
jnp
push
mov
push
xchg
add
dec
add
dec
lds
xor
addl
mov
adc
jmp
iret
stos
jnp
mov
test
xor
mov
je
ret
push
lahf
mov
dec
adc
push
call
icebp
and
inc
push
jo
push
xor
dec
jno
rcrl
stos
rcrb
insb
cwtl
lcall
mov
jecxz
and
and
pop
lahf
in
sub
mov
or
not
mov
mov
cs
dec
icebp
jne
scas
xchg
fistpl
test
hlt
jae
int3
and
mov
xor
shl
negb
sbb
testl
mov
cmpb
jmp
icebp
pop
std
xchg
mov
outsl
push
sbbl
jmp
adc
iret
fsubrs
clc
adc
in
add
push
or
dec
sub
pop
imul
mov
jne
xchg
in
je
enter
jg
test
sub
les
ret
iret
mov
xor
jle
add
push
divl
mov
cmp
cmp
ds
inc
movsl
lret
mov
mov
aad
mov
sarb
bound
push
popa
ret
push
jae
aaa
iret
cs
jbe
outsl
inc
push
pusha
pop
popa
mov
dec
pop
lret
imul
cmp
iret
sbbb
enter
push
xchg
cld
es
mov
sub
mov
shrl
mov
inc
mov
and
jns
repnz
es
jg
lods
imul
fcoms
ljmp
mov
insl
pop
jno
cmc
sbb
repz
cmpsl
cmp
icebp
lret
outsl
dec
jae
aaa
aas
mov
ss
inc
push
nop
cmp
loope
pop
aam
push
daa
or
out
lcall
imul
into
cmc
xchg
sbb
inc
aas
aad
nop
fnstsw
stc
xchg
repnz
imul
jge
stc
jecxz
xor
adc
jmp
insl
es
in
mov
add
mov
and
and
mov
movsl
fdivs
mov
mov
inc
sub
sub
ss
pop
xchg
enter
ss
scas
jp
shl
dec
or
xchg
leave
sti
imul
mov
mov
push
cwtl
fisubrs
lea
mov
enter
lret
inc
ret
mov
dec
sub
xchg
icebp
mov
insb
mov
in
rorb
pop
sbb
xchg
out
cwtl
sahf
rol
jmp
mov
loope
cmp
mov
mov
add
dec
enter
rolb
daa
lods
mov
iret
jns
and
cmp
jae
and
dec
mov
cmp
mov
pop
jecxz
xor
fimuls
mov
add
rcrb
addb
pop
jns
int
cmp
adc
loope
cwtl
mov
xorb
sbb
pop
jbe
dec
sub
xchg
push
pushf
je
jge
ss
mov
sbb
and
js
sub
jbe
jne
push
lret
mov
pop
xchg
push
nop
pop
or
enter
jge
xorb
jg
iret
lock
xlat
xchg
mov
push
pop
pushf
ret
pop
mov
adcl
pop
daa
cmpl
xchg
jge
push
xchg
int
mov
ret
gs
pop
add
jbe
xlat
and
push
adc
inc
mov
lret
xor
inc
adc
fldenv
xchg
push
cld
subl
lahf
outsl
push
cwtl
mov
test
sar
sub
push
sbb
xchg
xchg
xor
imull
jg
mov
jo
jle
mov
jg
pushf
xchg
or
loope
fsubrs
or
popa
movsb
jg
imul
lods
jmp
and
das
adc
mov
jno
xor
mov
enter
dec
dec
jl
xor
repz
and
clc
repnz
xchg
xchg
jmp
sub
push
mov
cmp
xchg
cwtl
fnstcw
stos
xchg
mov
mov
aas
in
mov
test
dec
mov
fsts
sti
mov
outsb
in
and
jae
dec
pop
mov
pop
aaa
adc
sbb
mov
filds
negb
sub
xchg
incl
ss
repnz
insb
outsb
or
mov
in
fs
jl
enter
xchg
mov
sbb
xchg
cmp
sub
adc
orb
outsb
or
repnz
enter
out
shrb
or
aad
aas
in
std
lock
sub
push
jb
adc
or
int
subb
les
je
repnz
add
iret
inc
mov
and
inc
subl
mov
iret
adc
call
fldlg2
inc
push
aad
std
out
mov
sbb
and
adc
sbb
add
pop
clc
jp
orb
insl
jne
loopne
mov
xchg
lcall
mov
lahf
xchg
and
das
jnp
sbb
inc
loopne
shll
sbb
push
mov
sbb
xlat
or
push
es
cmp
test
stos
aad
call
sub
cmp
shr
inc
dec
mov
in
xor
dec
xor
jo,pn
testl
push
sti
fsubl
rorb
in
inc
xlat
jne
mov
insl
jnp
sbb
lahf
in
mov
stos
cmp
dec
adc
push
dec
sbb
mov
arpl
and
xchg
sbb
inc
cmp
cmp
cmp
jl
pop
cltd
icebp
push
out
ja
fsts
push
mov
pusha
jne
sbb
push
dec
inc
enter
mov
jno
das
inc
sbb
dec
repz
outsl
iret
rorb
jns
xor
sbb
insl
cmc
jmp
bound
cmp
jbe
lea
push
xchg
cmp
inc
test
jno
in
xchg
pop
xchg
stos
das
xor
sub
lahf
xchg
inc
push
mov
test
jl
jg
popa
jne
leave
sub
sbb
add
jbe
xchg
enter
cwtl
daa
push
jle
mov
js
ds
dec
sbb
in
mov
sbb
mov
add
dec
fwait
mov
xchg
shlb
sub
pop
in
shr
lret
int3
outsl
rcll
cmp
xchg
scas
int
pop
cmp
adc
dec
inc
out
dec
fmul
orl
cmp
or
cmc
test
insl
loopne
pusha
inc
xchg
mov
jno
popf
out
and
pop
inc
cltd
jae
pusha
dec
stc
fldcw
test
xlat
xchg
sbb
mov
sbb
push
mov
aad
inc
adc
jp
cmp
loope
stos
std
stos
repnz
ss
mov
clc
pop
jbe
dec
insl
loope
push
test
lods
jno
cmp
sub
and
adc
mov
mov
pop
fists
xor
mov
aaa
lret
mov
inc
push
push
sub
and
jl
mov
adc
pop
fimull
inc
rep
mov
rcr
stc
out
pop
and
pop
cld
lods
mov
xor
sub
addl
scas
and
cmp
xchg
dec
mov
push
jecxz
lock
movb
int
xchg
and
jp
pushl
insb
or
stos
lret
adc
fs
xchg
aad
ret
cwtl
insb
pop
cmp
jae
fldl
ss
fs
pop
push
and
jp
sub
cltd
fdivs
enter
pop
popf
inc
xchg
roll
jno
xor
sarb
in
push
daa
ja
lock
lret
mov
xchg
movsl
pusha
jns
outsb
into
cld
mov
test
cmp
adc
and
add
cmp
add
pop
mov
hlt
lods
jns
adc
lods
je
test
jge
and
inc
inc
js
fdivr
jnp
pop
add
filds
into
push
mov
data16
add
lret
and
xorl
sbb
or
pushw
xor
push
jne
insl
in
adc
lods
mov
sbb
push
pop
and
lret
jb
push
cmpsb
add
data16
mov
ja
ret
add
add
mov
jmp
dec
cmp
stc
xor
mov
out
in
pop
xchg
iret
mov
pop
mov
cmp
push
add
sub
cld
dec
adc
insl
aas
out
fldt
and
mov
fucomip
sub
imul
xor
pop
mov
adc
xchg
ret
adc
jl
mov
adc
jbe
inc
mov
pop
dec
jg
fwait
outsb
mov
and
push
xchg
xor
xor
mov
arpl
push
push
mov
lods
dec
stos
pop
and
push
rcrl
jl
add
dec
scas
mov
dec
cli
lods
imul
mov
mov
shrl
cmp
jbe
stos
inc
jle
pop
iret
cmp
cmpsb
ret
add
pop
jns
mov
and
inc
scas
jle
sub
xlat
mov
stos
inc
sbb
andb
push
add
inc
data16
or
sub
dec
fbstp
xchg
int3
imul
test
test
mov
adc
jno
mov
cld
xor
xor
cmpsl
mov
out
pop
aas
inc
xor
inc
push
xor
pop
sarl
movsl
push
or
fistps
mov
das
xchg
cmp
xlat
jb
aas
movsl
sbb
and
inc
xlat
fnstcw
lods
adc
xor
les
fadds
out
cmpsb
clc
pop
xchg
in
out
es
into
bound
fldcw
dec
enter
movl
cmp
mov
xchg
xor
inc
subb
or
das
cltd
jg
push
mov
ret
fdivs
movsl
push
xchg
jmp
cltd
test
jp
repz
jae
xchg
jne
sbb
mov
outsb
ljmp
and
sbb
jnp
insl
xchg
or
mov
xchg
aaa
or
jns
dec
mov
shrb
ret
daa
push
cmp
jmp
lret
and
push
pop
mov
dec
jp
js
jb
sbb
in
adc
inc
xor
frstor
add
ljmp
testl
dec
push
out
mov
ffreep
or
data16
rcrb
cmp
das
subl
cli
subb
inc
mov
xchg
out
jbe
adc
lock
cs
pushf
sahf
or
dec
jno
cwtl
push
and
dec
int3
cli
imul
push
mov
and
xor
xchg
xor
add
mov
popa
mov
fwait
jg
xchg
push
es
sbbl
movsl
mov
outsl
push
cmp
stos
ret
movsl
mov
sahf
lods
ret
lock
pop
mov
int3
mov
xchg
in
pop
idivb
xchg
cltd
or
push
xchg
sbb
and
push
outsl
jbe
jg
mov
push
adc
jne
lcall
lahf
sbb
imul
cli
xor
jae
jl
test
push
push
mov
adc
push
xchg
pusha
ja
xor
test
pop
aad
in
add
shll
test
jbe
mov
mov
add
dec
adcl
out
sub
daa
rcll
or
test
aas
add
pop
lret
das
sbb
and
mov
das
loop
pop
gs
cmp
xor
cmp
ss
xlat
sub
jnp
fnsave
hlt
push
cmpsl
jno
lods
jge
xor
int
insb
push
jmp
pcmpgtb
push
cli
sub
in
movsb
cmpsb
mov
cmp
test
cmp
mov
pop
sbb
fwait
mov
stos
pop
or
int
or
dec
ret
sub
out
stc
cmc
aas
jle
mov
dec
js
leave
adc
jl
push
mov
nop
lret
xor
or
or
out
cwtl
loopne
scas
test
jbe
mov
jl
inc
in
pop
xchg
cli
mov
in
leave
cltd
loope
in
jne
loop
dec
xchg
lds
bound
roll
fwait
insb
cmpsl
xchg
nop
pop
or
dec
pop
les
dec
inc
lds
aad
sti
and
stos
xor
pusha
addr16
add
call
leave
sub
jecxz
push
pop
xchg
dec
sub
sarb
add
dec
xchg
insl
jge
jo
and
cltd
or
sub
in
scas
ss
mov
sti
push
xchg
dec
xor
adc
inc
sbb
std
sub
inc
ss
sti
movsl
inc
cli
jbe
and
xlat
sarb
cmp
insl
movsb
jnp
push
scas
push
mov
cwtl
dec
mov
aaa
pusha
dec
pop
adc
mov
add
rcr
arpl
mov
sti
dec
sbb
push
aad
and
xor
out
movl
mov
sbb
andl
xchg
jle
fdivr
in
repnz
mov
cmc
push
mov
sub
jo
adc
inc
push
sbb
insl
dec
imul
inc
sbb
std
and
dec
pushf
addr16
jp
data16
and
or
push
xchg
pop
mov
movsb
call
std
ljmp
roll
loopne
mov
xchg
jl
mov
dec
addl
cmpsb
out
push
pop
int3
dec
dec
fdivl
rep
sub
adc
sub
inc
and
test
aaa
dec
pop
push
adc
jns
xchg
xchg
aas
cmp
mov
call
push
nop
cmpsb
or
add
mov
scas
or
sbb
inc
push
mov
xchg
addl
mov
jb
loopne
cmp
gs
js
pop
mulb
div
mov
mov
pcmpgtb
cwtl
cmp
dec
scas
mov
mov
fcompl
sbb
adc
dec
repz
in
xor
es
fwait
lods
cs
xchg
xlat
outsb
mov
xor
test
negb
push
or
or
mov
cmp
pushf
scas
nop
sbb
mov
daa
ja
or
repz
addl
filds
hlt
aas
xchg
stos
fisubrl
cltd
inc
mov
addb
xchg
and
xor
dec
push
out
cmp
mov
cmc
sub
xor
pop
jg
and
arpl
cmpsb
loop
xchg
push
xor
adc
enter
jae
pop
inc
and
popf
pop
jle
pop
jp
fwait
and
out
enter
fcoms
inc
in
mov
jecxz
movsb
sahf
pop
xorb
das
in
ja
or
cmp
insl
push
push
movsb
inc
or
jge
daa
fbstp
test
shll
into
mov
lods
aas
jo
cmp
inc
das
jg
inc
rol
enter
movsb
or
sbb
shlb
subb
js
rcrl
inc
or
mov
sub
xchg
aam
mov
adc
vmovhps
loope
pop
pop
sahf
mov
lock
mov
dec
arpl
scas
dec
sub
pop
inc
movsl
mov
lret
hlt
sti
adc
fcoms
xlat
sub
ret
lea
fistpll
nop
pusha
mov
sub
out
addb
sub
pop
sbb
mulb
xchg
rcrl
pop
pop
shr
jbe
pop
mov
pop
jae
loopne
je
test
inc
out
adc
adc
add
rcrl
out
scas
add
jle
shrl
add
outsl
inc
sti
jns
fisubrs
in
cli
or
push
fs
ds
dec
add
enter
cltd
in
add
xchg
ja
imul
movsb
jnp
inc
arpl
cmp
out
xchg
jecxz
push
pop
jnp
add
iret
cmp
je
add
lock
shll
jl
shll
out
data16
mov
cli
out
loopne
je
mov
ret
inc
out
lods
jbe
insl
push
xchg
add
cli
leave
mov
cmpsb
xchg
fisttpll
mov
addb
jp
outsb
sbb
in
call
or
jne
cmp
add
push
mov
test
add
cmp
or
test
sub
shll
mov
mov
fimull
jne
jge
roll
dec
shrb
data16
test
jmp
cmp
imulb
push
dec
mov
pop
lahf
xor
push
nop
mov
sbb
and
adc
sbb
xor
mov
call
fstps
dec
jns
shll
and
adc
or
pop
pop
jo
pop
rolb
sahf
adc
out
add
mov
xor
mov
ss
inc
jnp
mov
in
cs
dec
addr16
movsl
imul
scas
add
ror
jg
pop
fistl
popw
pop
push
push
stos
mov
dec
dec
sbb
push
mov
xor
jbe
fisttpll
cwtl
pop
lock
aad
dec
ds
jge
pop
outsl
inc
movsb
jno
mov
rcrb
jne
sub
mov
bound
mov
inc
popl
sbb
lret
inc
ss
ret
cld
jbe
xor
rclb
mov
test
gs
orb
inc
push
fptan
test
and
mov
mov
or
in
or
cmc
dec
dec
icebp
pop
stos
jp
pop
daa
incl
mov
lds
cmp
inc
cltd
xor
and
xor
xor
fwait
push
push
es
pop
or
and
stos
repnz
shlb
loopne
pushf
in
sbb
aam
or
shrb
out
fldt
int3
in
mov
cmp
jb
and
adc
cmp
adc
shr
cmp
lcall
arpl
sar
outsb
lcall
add
in
push
mov
mov
aaa
adc
adc
testb
mov
bound
fists
cmp
sahf
push
inc
sub
ret
rcrl
imull
loope
adc
pop
pop
cmpsb
add
jae
fldcw
and
and
in
jae
roll
sub
add
cwtl
les
adc
repz
jne
incb
inc
jp
jge
icebp
gs
and
add
rcrb
jl
mov
and
jmp
sub
sbb
in
pushf
sbb
in
cmp
dec
mov
or
add
gs
adc
pop
into
mov
mov
ficoms
fistps
xorb
insl
pop
or
int3
pop
fs
int
sub
call
or
aad
clc
and
adcl
sbb
jp
mov
dec
pop
cmpsb
pop
roll
js
pop
inc
fcmovu
xchg
sub
imul
adc
in
daa
testb
hlt
fcomp
leave
add
sub
mov
loop
cmpsl
sub
or
mov
pushf
xor
cs
test
mov
and
mov
xchg
int3
lret
inc
cmp
aaa
pop
imul
fnstcw
pusha
pop
push
repz
hlt
xchg
sbb
mov
lcall
into
mov
imul
jbe
lahf
add
jbe
aas
cltd
sbb
jo
scas
out
loopne
std
lds
sub
push
js
xor
test
filds
test
sbb
mov
aas
scas
adc
insb
sarb
push
sub
sub
sub
add
imul
leave
dec
aaa
or
bound
mov
sbb
std
pop
test
add
lret
gs
cmp
rolb
dec
jno
push
adc
mov
out
sub
mov
or
in
in
mov
inc
xchg
dec
repnz
pop
stc
ja
mov
pop
sarl
mov
aaa
clc
sub
inc
add
in
test
ja
xchg
xorl
movsb
mov
inc
scas
inc
imul
mov
dec
jnp
inc
stos
sbb
scas
stos
dec
les
pop
roll
ss
test
movsb
repnz
adc
xlat
pop
adc
xchg
cmpl
or
dec
cld
incb
es
imul
sub
ds
xor
add
xchg
jno
xchg
inc
outsl
dec
outsb
dec
xchg
cmpsl
or
mov
sub
mov
xchg
sub
cli
and
cmp
xor
gs
pop
jns
xor
inc
gs
or
jecxz
hlt
pop
mov
aas
dec
push
xchg
sub
gs
xor
dec
sbb
xor
call
fucom
or
sti
lock
stos
popf
inc
xor
lods
xor
push
mov
fsts
dec
mov
xor
xchg
mov
pop
xchg
aam
mov
andl
ret
pop
cmp
push
mov
movsb
push
out
mov
test
shrb
jmp
lret
adc
xor
mov
add
jae
mov
push
out
sbb
cmpb
loope
gs
mov
cmpsb
shlb
xchg
dec
fsubr
xor
in
out
cmpsb
mov
mov
push
mov
sbb
out
faddp
xor
shrb
add
call
xor
std
pop
xchg
sub
xor
icebp
sbb
adc
xchg
xchg
inc
lahf
adc
das
hlt
dec
sbb
pop
fs
mov
in
lea
mov
aaa
int
pop
jle
fmulp
dec
xchg
movsb
mov
in
fdivrs
hlt
fldl
inc
jecxz
out
addr16
sub
cli
mov
push
pushf
outsb
push
lds
and
in
add
test
lock
sbb
mov
add
dec
push
cmpsb
popf
es
imul
mov
scas
cmp
jl
sub
mov
cwtl
andb
lods
pop
gs
cld
mov
push
xchg
das
adc
rcrl
in
or
bound
loopne
add
mov
cmp
mov
fistl
repz
fnstenv
andl
das
inc
rcrb
nop
out
imul
lods
mov
pop
cmc
sub
xchg
cmpb
sbb
mov
int
sub
xor
cmp
sbb
or
xchg
es
pop
adc
js
jg
or
sbbb
repz
std
ficomps
dec
mov
les
and
int
pop
push
fs
jge
sub
xor
lds
inc
dec
subl
add
xchg
pushf
sbb
xor
pop
or
xor
adc
dec
andl
ret
cwtl
movsb
fidivrs
repz
mov
popf
hlt
fucomip
cs
mov
inc
add
lods
xchg
icebp
jg
inc
cmp
aad
push
adc
leave
es
and
daa
sbb
xor
fsubl
cmpsb
pop
enter
mov
push
lods
mov
dec
test
jns
xchg
pop
pop
scas
test
push
mov
mov
xor
push
xor
icebp
popa
aam
loope
mov
dec
adc
xadd
xchg
mov
cmp
ret
xchg
mov
jno
mov
das
dec
test
jns
cmp
sub
adc
leave
movsl
mov
aam
icebp
and
notl
pop
arpl
or
ds
dec
cmp
ljmp
mov
jns
sub
call
insb
push
mov
mov
pop
mov
shl
sub
push
fldenv
cmp
pop
dec
loope
mov
sub
pop
or
push
push
fidivs
jge
inc
lds
call
sbb
add
cld
xchg
dec
sti
inc
frstor
int3
icebp
sahf
sbb
jno
ds
adc
gs
bound
xor
sbb
add
dec
mov
stos
stc
jle
sub
outsl
cmc
aam
out
loop
repz
loopne
cmp
add
scas
sti
mov
add
adc
jns
loope
cmp
fdivs
pop
repnz
pop
aaa
cli
add
xor
mov
jno
imul
into
aad
mov
cmp
sub
xchg
andb
push
push
push
and
sbb
out
adc
test
xor
int3
xlat
movsb
push
lock
sbb
hlt
adc
pop
call
sub
cld
add
inc
or
inc
dec
mov
add
enter
sub
loop
repz
shrb
mov
add
aam
mov
dec
and
fildl
or
test
jp
cmp
push
xor
in
dec
mov
addr16
add
lods
jg
call
dec
dec
sahf
cmp
mov
aas
jo
mov
testl
push
bound
jmp
pop
lret
cmp
ret
in
testb
aas
jg
push
add
inc
push
push
into
test
jmp
cmp
popf
ret
stc
jno
aas
push
or
les
imull
mov
jmp
adc
xchg
xlat
insb
pop
xchg
cmp
popl
out
adcb
xor
push
fdivl
push
sti
js
dec
pop
aam
lods
das
xchg
cmp
dec
and
mov
mov
push
sbb
rcrl
mov
cmpl
ss
std
xor
scas
mov
xchg
xchg
pop
bound
aaa
fs
jp
fdivl
mov
add
aas
xor
ljmp
cmc
test
sbb
icebp
rcr
nop
call
icebp
cld
add
je
push
dec
jmp
jnp
dec
push
jecxz
cmpsb
dec
push
cmpsl
lahf
cmp
xchg
fistpll
fdivrl
mov
mov
jnp
iret
leave
push
sub
sbb
out
cmp
mov
out
mov
sbb
xor
mov
jns
jmp
xchg
xchg
cld
test
xor
ror
lds
inc
popf
pop
jbe
cmp
subb
out
inc
test
mov
bnd
jp
lock
xchg
mov
fucomi
dec
push
dec
and
fadds
roll
subl
cmp
call
insb
mov
frstor
in
loop
dec
push
sub
cwtl
rclb
cmpsl
sarl
addb
or
push
and
inc
pop
xchg
ljmp
dec
mov
fst
test
jae
add
jb
cltd
inc
and
xor
negl
outsb
insl
cmpsl
push
repnz
in
addr16
gs
dec
sar
add
mov
fdivl
xchg
dec
popa
pop
dec
xchg
filds
push
gs
cmp
jne
lret
popf
mov
sub
inc
data16
push
add
and
inc
pop
mov
mov
adc
mov
adc
stos
sbb
xchg
add
cs
sarl
lret
in
push
popf
pop
xchg
loop
mov
hlt
mov
lods
pop
mov
pop
arpl
and
and
gs
jle,pt
sub
fcoms
les
fldcw
pop
gs
les
outsb
xchg
and
test
and
lahf
pop
in
mov
push
mov
imul
xor
pop
jge
adc
insb
push
xlat
and
sbbb
push
fs
ret
ret
cwtl
movsl
xchg
jo
push
scas
aaa
hlt
pop
lret
fcmovnb
fstpl
jne
scas
aam
divb
je
mov
xchg
daa
mov
mov
daa
mov
and
xchg
xor
fistpll
mov
jge
fsubr
mov
pop
in
mov
or
fisubrs
aas
dec
jecxz
nop
xchg
loopne
push
loopne
mov
xchg
lock
xchg
jo
mov
int3
xor
jbe
xorl
add
or
xchg
and
xor
or
out
xchg
adc
outsb
cmp
in
mov
pop
or
push
popf
mov
gs
scas
out
cmpsl
jg
ret
inc
nop
push
lahf
pop
jecxz
fwait
add
adc
sti
sub
je
push
ja
lds
imul
stc
push
cltd
inc
jmp
lock
mov
je
sbb
iret
lahf
pusha
cmpsl
movsb
int
cmc
mov
mov
aad
cltd
pusha
in
sub
mov
pushf
cwtl
das
ucomiss
fldenv
push
push
insb
mov
pop
pop
shrb
cmpsb
sbb
xlat
mov
imul
jge
jne
nop
std
pop
mov
xchg
pop
cmp
inc
pop
push
lcall
sbbb
mov
clc
fcomp
pusha
andl
testl
push
fidivl
icebp
push
and
push
mov
andl
hlt
add
jnp
inc
es
pop
scas
scas
dec
xchg
jmp
push
test
pop
push
test
mov
pop
pop
inc
stc
int3
inc
jne
push
inc
imul
popf
pop
inc
popa
jg
in
js
pop
icebp
jno
dec
fstpt
xor
popf
nop
in
fstl
xor
aaa
inc
jnp
mov
std
lahf
and
dec
or
dec
mov
sbb
push
jne
inc
jnp
dec
cltd
inc
and
insl
jl
push
notb
loop
aad
jnp
fnstcw
enter
push
movsl
sarl
je
les
nop
loopne
mov
inc
rcl
ret
movsb
loope
insb
pop
sahf
xor
jg
inc
and
divb
test
dec
scas
inc
jo
mov
sub
lock
sub
cmp
inc
ficoms
xchg
or
fmul
jnp
mov
mull
xchg
pop
insb
jp
addr16
movsb
adc
inc
xchg
mov
pop
and
je
addr16
out
cld
sub
jp
movsl
dec
sub
pop
and
rorb
imul
bound
shll
insb
or
repz
add
sub
sub
mov
sbb
sbb
adc
mov
jmp
push
int3
add
in
daa
xchg
pop
xor
mov
andl
test
mov
lahf
sbb
outsb
das
lret
leave
push
mov
cltd
das
jae
adc
or
iret
mov
sub
mov
clc
jns
inc
mov
pop
cmc
sbb
dec
xchg
loope
cmp
leave
xchg
mov
jl
jne
in
inc
popf
add
mov
mov
adc
js
inc
es
sbb
mov
xchg
push
xchg
xor
test
pop
out
mov
xchg
or
jno
push
mov
imul
pop
jmp
cmp
fbld
xor
xchg
stos
stos
ds
test
lods
mov
scas
shrb
out
or
mov
fsub
gs
insl
aaa
add
push
sub
pop
ss
out
mov
xor
and
xchg
dec
loop
mov
mov
push
or
xchg
test
aaa
xchg
push
aaa
xchg
lods
cs
mov
out
test
fidivs
fwait
dec
sub
call
cmc
sahf
loop
mov
test
and
ljmp
mov
jl
xlat
sub
mov
mov
or
jge
sbb
xchg
mov
jle
cld
mov
sbb
pop
cld
fmul
jnp
fistpll
mov
inc
dec
insl
imulb
mov
add
out
sub
lods
test
adc
insb
inc
outsl
xor
xchg
sbbb
lahf
ja
lret
arpl
xchg
imul
add
inc
adc
cmp
sbb
xlat
je
rcl
int
iret
or
push
lcall
xchg
aaa
lea
imul
pop
lea
into
movsb
imull
rcr
out
ret
sahf
sahf
cmp
cmp
lods
or
push
add
mov
lock
xchg
jns
dec
sbb
leave
add
clc
dec
or
jae
cltd
mov
in
or
inc
mov
in
cmp
ret
lahf
sub
movl
pop
shll
stc
pop
mov
mov
out
int3
xchg
mov
leave
or
add
js
ja
mov
xor
fisubrl
inc
or
into
xlat
rcrb
inc
inc
jbe
mov
test
movzbl
pop
outsl
out
mov
push
or
sub
dec
not
subl
xor
cli
add
cmp
cmpb
loop
jo
int3
hlt
lahf
ret
push
jno
lret
insb
xor
sub
cwtl
js
in
ret
jb
cwtl
ja
lds
lahf
cld
test
jg
bound
sahf
aas
cld
push
jp
mov
inc
jl
fmuls
in
lods
es
mov
clc
sub
inc
aaa
push
sub
stos
add
xor
arpl
or
xchg
xor
sbb
cwtl
lods
stos
lods
jp
loop
test
cmp
aaa
cmp
out
adc
mov
loop
adc
mov
sbb
sahf
inc
ja
pop
ja
shl
xchg
push
fwait
inc
jnp
lret
test
jns
push
mov
loopne
das
inc
sub
lea
loope
sbb
adc
jmp
add
mov
pop
mov
fucompp
jl
pop
mov
sets
cmpsb
xor
mov
pusha
xor
ds
jne
cmp
ret
xchg
jae
ja
ret
scas
sbb
rcr
ficoms
das
int3
sti
sub
pop
out
push
shll
and
movsl
pop
push
movsb
inc
adc
fwait
mov
ror
mov
sahf
fs
lcall
popf
dec
vcvtss2si
test
push
daa
xlat
sub
adc
xor
dec
jp
mov
pop
bound
lods
lahf
mov
jecxz
pusha
lret
push
jb
mov
xchg
mov
ljmp
xor
dec
and
jo
lods
jo
lods
sub
clc
frstor
push
mov
fistps
and
movsb
mov
movsl
sbb
fs
rorb
leave
pop
pushl
lods
fdivs
repnz
sbb
lods
cmp
nopl
sub
ss
mov
out
insl
rcrl
lcall
dec
adc
rcll
mov
dec
mov
xor
test
loopne
pop
sbb
lret
sub
inc
jmp
mov
or
jno
shr
out
pop
add
loopne
vmwrite
nop
test
pop
sbb
inc
sarl
stos
jae
mov
fdivs
cmc
repnz
push
pop
cmpsb
pop
js
lea
and
mov
lods
shl
pop
bound
add
or
lahf
push
inc
aam
sarl
test
jmp
enter
mov
data16
push
repnz
fildl
xor
jno
xlat
mov
mov
jns
movsl
int
dec
adc
dec
ss
jb
sbb
loope
inc
xor
lods
dec
push
pop
push
int
pop
sti
sub
popa
ret
sub
aam
xlat
arpl
pushf
fcoms
xchg
inc
mov
or
imul
mov
mov
mov
or
or
aad
pop
cmovbe
dec
sub
or
sub
loopne
nop
xor
call
bound
std
testl
pop
fcomps
jnp
ret
pop
and
in
jne
mov
loop
pop
sub
cmp
mov
inc
cli
cwtl
xchg
lods
push
in
mov
push
ss
ljmp
js
jecxz
les
adc
xchg
cld
enter
in
lock
xchg
mov
or
sub
sub
fdivrs
in
in
sbb
push
pop
scas
mov
and
shll
mov
dec
mov
fcoml
enter
pusha
lret
shll
into
fwait
xor
data16
clc
pop
xchg
icebp
cmpsb
cwtl
sbb
mov
fdiv
adc
mov
lods
xchg
popf
dec
aam
aaa
pop
xor
ffreep
fxch
sbb
xchg
insl
fnstcw
push
jp
mov
lea
and
sbb
pandn
rorb
dec
daa
pusha
dec
mov
fdivs
gs
lret
je
mov
push
inc
jne
call
jns
pop
cmpsb
sbb
test
cltd
fsubrl
adc
jmp
xchg
sbb
push
push
mov
push
adc
xor
int
mov
cmp
mov
sub
shl
add
adcb
pop
sub
popf
mov
add
int3
je
popa
call
push
jmp
and
cltd
jg
xchg
popa
pop
out
mov
or
test
push
daa
mov
mov
out
mov
cmp
rcl
jb
pusha
scas
jnp
lds
fsubl
push
sti
pop
fstl
out
mov
or
push
repnz
ret
jno
ret
pop
jge
jge
lock
push
les
shrb
daa
xlat
int3
test
lods
aas
jb
add
int3
mov
pusha
mov
decl
inc
ret
push
dec
fisttps
ficoms
addr16
inc
insb
push
or
leave
arpl
aas
pop
outsb
hlt
sbb
or
sub
pushf
imul
add
sbb
xchg
xchg
icebp
add
pop
gs
lret
mov
and
cs
cmp
dec
mov
jo
fsubl
cmp
jnp
fldz
push
add
jle
mov
nop
jnp
loope
mov
add
cmp
add
jmp
or
roll
push
out
not
iret
cmpl
mov
into
inc
fdivrs
ret
jo
into
aas
mov
push
cmpl
gs
stc
insb
cwtl
push
test
jb
mov
push
add
dec
adc
jle
roll
add
pusha
dec
lcall
outsl
aas
rcrb
jne
mov
cmp
jle
movsb
sub
add
push
mov
push
in
shll
and
push
cmp
in
mov
fs
jo
movsb
iret
inc
and
rcrb
fwait
scas
xor
mov
jmp
add
inc
inc
jo
dec
push
xor
lahf
dec
xchg
dec
add
dec
in
aad
in
jg
mov
daa
mov
clc
push
nop
pop
inc
jmp
shlb
orl
or
pop
stc
imul
push
vunpckhps
push
es
inc
and
xorl
mul
or
outsl
imul
mov
lret
push
mov
adc
and
ja
test
jl
fnstenv
cltd
pop
mov
cs
push
jmp
inc
test
xor
cs
icebp
fldcw
dec
mull
fucomi
mov
popf
dec
lret
add
into
or
inc
bound
sbb
cmp
nop
adc
or
cmpsb
in
outsb
cmp
sub
sbb
imul
stc
mov
and
cmp
sub
mov
xchg
jg
push
in
pushf
lret
out
jecxz
jecxz
lock
int3
push
daa
jmp
xchg
jno
xlat
inc
dec
or
mov
cmp
pop
jmp
imulb
jle
dec
call
in
mov
xchg
call
add
adc
push
aam
pop
inc
mov
stos
bound
addr16
cwtl
push
jmp
jo
adc
mov
repnz
imul
jnp
fst
jns
xchg
aad
dec
stos
inc
cmp
popf
xchg
xchg
or
push
cli
mov
dec
cmp
divl
xor
lods
inc
inc
ja
popf
and
or
xchg
mov
shl
test
adc
int
cmp
add
cld
mov
mov
fimuls
xor
push
sarl
xchg
out
xor
jnp
jecxz
imul
push
sbb
sub
sbb
pop
testl
dec
scas
push
loopne
mov
mov
ret
fs
mov
jns
xchg
scas
mov
xchg
cmp
popa
jecxz
mov
or
sbb
sub
add
add
fs
cmpb
xlat
mov
fcoml
insb
mov
jecxz
pop
sub
mov
push
inc
iret
jl
test
in
dec
mov
adc
mov
test
pop
or
mov
sbb
sub
pop
jns
outsb
loop
push
ret
inc
pop
test
mov
shlb
jns
adc
push
js
inc
stos
movb
jecxz
jbe
mov
hlt
jle
push
call
sbb
lret
data16
dec
movsl
jmp
add
loopne
pop
movsb
xchg
add
das
loopne
inc
popf
jae
fwait
adc
clc
add
fstps
cli
insb
cmp
and
int3
rcl
movsb
dec
addb
shr
sti
test
add
mov
cmp
jecxz
jmp
roll
mov
mov
cs
sti
pop
pop
mov
inc
sub
popf
outsb
pop
add
xor
sbb
xor
into
bound
ret
xchg
arpl
lahf
movsl
pop
clc
shlb
adc
stos
jg
stos
je
push
push
lods
fs
pop
insb
mov
cmpsl
jno
mov
or
lcall
inc
push
mov
dec
push
push
dec
sarl
mov
jmp
xor
xchg
lcall
dec
push
add
outsb
in
or
xchg
mov
imul
sbb
insb
outsb
ja
or
lock
ja
cmp
add
sub
jnp
inc
cmc
inc
decb
fdivrl
xchg
add
fldenv
pop
xor
pop
mov
iret
cs
fisubrl
xchg
test
jbe
lea
nop
jbe
sahf
or
cltd
xor
int3
out
add
cld
stc
mov
mov
pop
nop
hlt
ss
nop
xchg
dec
sub
lahf
jg
fcmovne
popa
call
jecxz
push
push
jns
push
gs
sar
fmull
rolb
in
out
out
pop
mov
pop
cmp
lcall
push
pop
jle
imul
push
std
xchg
cs
in
jne
out
lds
mov
insb
in
enter
fisubrl
add
jmp
adc
jae
cmp
inc
gs
addl
mov
arpl
adc
push
xchg
or
outsl
jle
loopne
fstp
push
hlt
data16
call
adc
cmc
into
sbb
xchg
jno
or
std
popa
pop
packsswb
test
leave
fnstsw
add
xor
test
cmpsl
add
mov
hlt
icebp
jo
mov
push
adc
dec
xor
cmpsb
sbb
iret
fists
adcl
mov
inc
adc
insl
lret
ja
insb
sbb
mov
push
add
cmp
push
fwait
push
lret
sub
insb
sarl
int3
in
jns
xor
pop
sbb
outsl
push
xchg
or
or
sub
cmp
in
je
push
mov
or
jae
ss
lods
inc
sbb
repnz
inc
insb
call
bound
fnstenv
movntq
testb
ja
lods
sahf
fcoms
mov
data16
mov
sub
sti
nop
or
xchg
outsl
scas
push
scas
push
rcrb
lcall
les
inc
inc
add
and
call
or
mov
rclb
pop
xchg
adc
push
sbb
notl
fwait
and
dec
ja
icebp
lret
and
xchg
and
mov
push
sbbb
jl
shld
aam
cmc
push
inc
testb
dec
pushf
pop
roll
rorl
sbb
add
push
jge
test
aas
xor
sub
mov
cmp
cs
pop
jp
icebp
inc
cld
pop
cmpl
lret
mov
dec
imul
adc
decl
call
iret
push
roll
iret
jo
inc
mov
out
rcll
es
pop
cmp
inc
adc
shl
jg
mov
pop
fwait
loopne
and
xchg
pusha
push
mov
xchg
dec
pusha
jo
and
pop
fidivs
or
add
lock
jg
dec
aas
xlat
fmulp
jo
and
clc
adc
sti
or
mov
and
push
outsb
lods
xor
arpl
popa
jmp
adc
cmp
repnz
je
lcall
and
cmpsb
push
pop
sbb
push
jo
daa
push
sti
sahf
push
test
loopne
cmp
mov
movsl
lods
xchg
sub
xchg
mov
test
push
mov
mov
add
imul
out
jbe
jne
inc
pop
mov
sbb
cwtl
jns
pop
cmc
mov
jle
sbb
add
jb
push
test
cmp
and
push
inc
inc
scas
andb
inc
pop
fstpl
ss
dec
or
sbb
ss
jl
jle
ret
mov
clc
aam
les
stc
subb
rcll
in
dec
lret
loopne
lcall
imul
in
push
jg
jge
repz
jae
in
mov
lea
xchg
push
fnsave
fldcw
clc
push
cmp
xorb
movsb
mov
mov
dec
xchg
lods
mov
mov
add
jge
push
jno
mov
or
or
repz
bound
out
cmp
out
test
xchg
mov
subb
imul
or
cs
xchg
nop
cmp
je
icebp
push
icebp
push
das
dec
xchg
sahf
es
dec
fadd
xorl
mov
push
xchg
push
add
add
decl
cs
mov
int3
add
rcl
in
mov
outsl
xchg
fnstsw
or
cmp
popa
cli
mov
cmc
hlt
popa
je
lock
cs
cmp
lret
outsb
cmp
enter
into
negb
daa
mov
scas
insl
and
xor
mulb
push
xchg
int3
push
hlt
or
and
jne,pn
jae
pop
mov
jl
mov
pusha
dec
scas
setb
lcall
inc
mov
sub
mov
leave
push
dec
adc
loop
mov
popa
push
lcall
scas
add
nop
ficompl
and
mov
push
adc
das
mov
xchg
pop
or
push
and
jnp
cld
add
inc
data16
rcrl
xchg
jne
popf
or
mov
xchg
stos
push
push
push
movb
sub
loopne
cmp
add
inc
mov
sub
aam
stos
scas
and
lea
ret
in
jne
xchg
xchg
div
push
pop
mov
jmp
cmpsb
fmull
add
cwtl
xchg
cmpsl
xchg
mov
fwait
sub
jne
push
and
or
sbb
jecxz
test
cld
lcall
cmpl
outsl
adc
cmpsb
jnp
inc
xor
dec
ja
cwtl
push
pop
dec
sahf
jge
bound
in
jb
lods
sbb
ficoms
dec
lods
push
xor
cld
lahf
xchg
jo
mov
add
cltd
dec
cmp
clc
movsb
inc
xchg
cwtl
pop
es
mov
lahf
std
add
out
jecxz
xchg
sti
dec
add
loope
cmp
iret
imul
bound
gs
xchg
fisttps
mov
out
dec
mov
xchg
popf
outsb
sub
pop
or
mov
pop
iret
lahf
pop
dec
shll
in
insb
mov
popa
sub
jns
mov
aas
cmp
xorl
in
ljmp
rcrl
mov
add
jnp
add
idiv
les
mov
pop
inc
dec
pop
cmc
mov
out
sub
jne
movsb
pop
lods
cmp
inc
mov
test
ljmp
mov
xchg
pop
cltd
xlat
subb
clc
push
sub
jbe
lret
pop
mov
outsl
jmp
imul
push
inc
pop
add
in
xor
mov
int
or
mov
sbb
xor
enter
decb
jg
dec
enter
popa
imul
lahf
popa
xor
fcom
fs
scas
out
jmp
and
lods
push
mov
jp
idiv
dec
push
aam
dec
mov
xor
cmpsb
xchg
lret
scas
and
movzwl
pop
add
and
ficoml
or
sbb
or
push
mov
mov
jl
mov
xchg
or
ret
xchg
stc
mov
mov
cmp
out
xlat
mov
sub
cmp
cmpsl
arpl
lds
xor
cltd
pop
sbb
cmovb
dec
push
adc
adc
add
mov
mov
pop
sbb
cwtl
pop
jb
or
xor
test
loopne
insb
test
mov
popa
xchg
push
mov
hlt
xor
data16
rclb
pop
xlat
sbbl
loopne
mov
icebp
cmpb
inc
test
test
cmp
xor
scas
test
mov
loopne
push
xlat
repnz
lods
enter
cli
popf
cmpsl
xor
nop
push
push
movsl
lock
dec
add
mov
jecxz
cmp
aam
mov
hlt
pop
lret
pop
loopne
cmpl
cmp
pop
sbb
cwtl
adc
cmp
pop
adc
pop
push
in
mov
pop
repnz
and
or
sbb
popf
shr
sub
shll
dec
imul
mov
pop
in
movsl
scas
adc
pop
arpl
pop
je
pop
and
push
add
push
cmp
xchg
xor
incl
test
xor
in
fwait
push
stos
sub
dec
faddl
orb
dec
and
ret
mov
loope
pop
je
mov
pop
or
push
cmc
es
adc
aas
imul
mov
or
or
sbb
test
cwtl
mov
bound
add
rorl
cwtl
xor
int3
pop
pop
adcl
ficoml
outsl
cmpl
popa
je
xchg
jecxz
lods
shll
cmp
dec
mov
iret
jno
insb
dec
ret
in
popf
jle
sub
nop
in
jl
jnp
js
dec
push
mov
jns
repz
pop
push
lock
xchg
jbe
inc
arpl
sbb
jno
pop
icebp
ret
fdivl
mov
pushf
mov
vmovdqa
aad
test
xchg
cmp
test
sub
and
rcll
xchg
push
sub
icebp
loop
jecxz
pop
jo
push
xor
ss
adc
push
les
mul
push
xchg
mov
xchg
mov
sbb
cmpsl
xor
inc
iret
inc
push
and
int3
leave
outsb
push
nop
cmpsb
stos
dec
insb
ds
test
push
mulb
push
out
push
mov
int
das
sub
test
and
jne
mov
cmp
push
jnp
outsb
mov
insb
sbb
lahf
mov
inc
inc
repz
in
sbb
clc
outsb
out
lret
fmuls
mov
xchg
jne
jne
fldl2e
sub
aas
push
sbb
ds
xchg
pop
sub
fdivs
sbb
addr16
mov
mov
pop
fnstenv
pop
ja
in
mov
mov
push
mov
jp
loope
outsb
cs
aaa
sub
or
xlat
js
mov
lret
sbb
jp
insb
and
mov
fsubrs
cmpsb
xor
repz
add
in
push
mov
add
push
test
movsb
rcrl
sbb
xchg
clc
sbb
dec
add
fiadds
jns
mov
rep
outsl
sbb
jge
pop
dec
ja
inc
and
pop
mov
fs
bound
insb
mov
or
int
aad
gs
rep
loopne
xchg
pop
dec
xor
xchg
sbb
mov
adcl
pop
ficompl
rolb
xchg
out
dec
inc
jge
shlb
movsl
xor
mulps
mov
jnp
sbb
jle
mov
fs
sub
jo
push
insl
add
rorb
cli
std
test
jp
bnd
and
xor
data16
or
inc
in
push
aam
cmp
sub
mov
psubsw
xor
cs
push
cltd
mov
out
test
rcrb
add
arpl
push
fldenv
pop
clc
add
testb
push
mov
imul
cmp
xchg
xchg
lret
test
cmc
arpl
pop
and
test
ljmp
ds
mov
mov
outsb
cmp
sti
cmpxchg
jl
pop
mov
pushf
clc
jae
out
inc
mov
dec
popf
fnstsw
cmpsb
gs
and
xchg
mov
out
out
int
xor
fstpt
insl
adc
xchg
insl
dec
jg
mov
pop
and
xchg
decl
fildll
xor
stos
push
jge
and
push
add
xlat
mov
out
sbb
add
in
fadds
stc
loopne
or
sbb
flds
jmp
in
cmpsb
in
pop
movsl
in
loopne
mov
test
push
mov
mov
stos
sarl
inc
loope
push
push
add
sbb
mov
and
into
fwait
call
call
int3
std
pop
arpl
pop
mov
ficompl
adc
jno
inc
lcall
adc
lret
push
cmpsl
out
fucomi
and
cmp
dec
out
ja
hlt
cmp
xchg
dec
jp
jb
cld
jno
xchg
mov
pop
test
dec
and
jmp
push
mov
cmp
mov
push
mov
icebp
iret
jge
jbe
add
adc
test
mov
mov
xchg
scas
jmp
xchg
pushf
aas
adc
mov
mov
pop
mov
xchg
cmc
adc
ds
mov
jle
repnz
pop
and
bound
xlat
icebp
inc
std
sbb
mov
leave
fwait
daa
mov
and
shll
roll
or
les
iret
xor
test
lea
pop
sahf
jb
or
stc
stos
das
flds
dec
sbb
adc
add
pop
scas
loopne
dec
outsl
sub
xor
xor
clc
mov
dec
adc
cmpsb
dec
insl
and
or
push
es
inc
sahf
push
cmpsl
stos
jge
outsb
push
shll
inc
jbe
inc
cwtl
dec
xor
mov
fisttps
xor
outsl
push
pushl
mov
xor
xor
mov
pop
inc
or
shlb
lahf
cld
xchg
je
scas
mov
insl
lds
mov
add
dec
xlat
popf
aas
cmpsl
mov
ficomps
cmp
mov
cmp
inc
iret
mov
in
mov
aad
dec
jne
dec
addb
cmovp
jns
leave
jns
cmpsl
int3
dec
mov
dec
fstp
sahf
jl
shrl
pop
mov
sub
loope
pushl
jmp
cmp
push
loop
cmp
in
mov
push
neg
push
cmp
fwait
dec
jle
popf
rdmsr
dec
and
stos
and
cmp
and
sub
fmulp
add
imul
or
repz
in
loop
push
mov
add
push
xchg
fldl
mov
xor
xchg
xor
mov
lds
test
push
sub
inc
lret
adc
ds
out
xchg
sub
cmp
movsb
dec
jle
xor
xor
pop
mov
outsb
xor
in
cwtl
enter
subb
push
sbb
fisttpl
dec
and
sbb
addr16
int
or
pop
xor
mov
les
into
sub
out
rcrl
adc
add
negl
jp
dec
add
inc
pop
hlt
and
imul
jno
andl
roll
cli
out
mov
js
paddsb
xchg
jb
pop
pop
inc
loop
jne
push
bound
mov
add
insl
fwait
jmp
inc
or
sbb
movsb
imul
sti
mov
test
popa
push
insl
xor
or
stos
jge
addr16
popa
mov
jne
mov
mov
loop
sbb
cwtl
sub
sbb
insl
xchg
inc
imul
push
mov
mov
adc
idiv
rcll
push
mov
pusha
fcomps
stos
shld
int
lcall
dec
ret
in
lea
je
mov
xchg
jne
jne
add
loop
sbb
xchg
test
cmp
sar
jmp
and
add
ret
pushf
div
sbb
mov
scas
js
das
adc
sbb
push
clc
sahf
testl
lret
call
out
adc
jae
repz
dec
adc
dec
loop
push
sub
sbb
ss
sbb
sbb
cld
enter
sub
mov
outsb
les
lret
adc
dec
lret
test
xor
sub
dec
push
add
rclb
popa
inc
mov
sbb
xorl
pop
dec
inc
cmc
mov
pop
ret
arpl
out
fnstenv
mov
leave
inc
adc
testl
scas
xor
cwtl
into
inc
xchg
xchg
dec
jle
or
xchg
loopne
dec
out
ss
adc
into
data16
sub
lods
mov
loop
fsubrp
xchg
mov
mov
jo,pn
out
or
daa
call
cmp
lcall
enter
or
sub
lock
adc
pop
xor
xor
test
push
push
dec
sbb
sbb
jo
pop
pop
adc
or
ja
popa
mov
les
push
cmc
adc
dec
cli
jmp
imul
and
mov
stc
js
aaa
dec
mov
cltd
stos
push
push
push
out
pop
and
jmp
cmp
fldl
pop
pop
or
xchg
cmp
mov
push
push
inc
aam
mov
sahf
xor
sub
test
mov
in
loope
in
das
insb
adc
shll
dec
sub
js
mov
div
or
or
xchg
sbb
dec
loopne
lock
push
test
outsl
enter
inc
mull
movups
xchg
imul
arpl
imul
push
jo
rcrb
loope
mov
mov
cltd
insl
aad
cmp
mov
dec
push
dec
sbb
cmpsl
sub
mov
daa
xchg
cmp
jl
xchg
mov
iret
mov
add
imul
xor
mov
pushf
sub
jbe
mov
xor
add
ret
cmp
sub
mov
gs
mov
mov
sbb
mull
pop
sbb
pop
inc
jle
inc
bound
cmpb
lcall
shll
movsb
sti
or
pop
popf
test
inc
adc
daa
and
sbb
jb
out
stc
pop
clc
lea
fwait
jnp
test
out
dec
pushf
ss
jmp
sub
xchg
push
sub
mov
cmp
iret
mov
dec
xchg
adc
sbb
or
xchg
pop
sub
mov
pop
jmp
or
adc
xchg
xchg
mov
push
loope
test
mov
into
orb
enter
mov
stc
pop
shl
enter
adcb
and
imull
dec
jb
xor
cmc
mov
movsb
dec
xchg
xor
stc
std
in
jl
sarb
dec
pop
xchg
out
push
outsb
fbstp
dec
ja
jo
sbb
xor
and
stos
int
mov
movsb
shll
iret
xchg
cmpsb
cmp
stc
push
popa
sbbl
stos
int
sub
or
rcl
loopne
cmp
test
pop
push
jbe
pop
into
ror
popa
add
ret
pop
out
mov
inc
mov
shl
loopne
fistl
and
pop
sub
mov
scas
cmpsb
inc
pop
sbb
mov
aas
ss
pop
mull
ds
shl
cld
dec
imulb
jno
aaa
insb
add
inc
int
sbb
jns
cmp
jle
popa
stos
stos
das
std
incb
mov
sub
je
jo
inc
mov
aad
jnp
movsb
add
in
or
shrb
pop
int3
aas
xchg
or
repz
xchg
fildll
cmpsb
push
out
sahf
xchg
push
xor
dec
pop
jg
ss
pusha
fnstsw
iret
aam
inc
push
fwait
dec
insb
sarl
rolb
ss
call
lahf
shrl
movsb
pop
outsl
inc
insb
pop
jnp
pop
cmpsl
pop
xchg
es
into
pusha
add
push
ljmp
scas
loop
test
out
leave
addr16
loope
jae
and
adc
add
fs
int3
aaa
sub
cmc
adc
scas
cli
int
out
push
mov
repz
or
xchg
jecxz,pt
pop
sbb
xlat
repz
inc
adc
data16
fwait
dec
sbb
mov
push
mov
loop
ss
sbb
clc
out
fstl
rcll
fmuls
out
fisubrs
ja
imulb
outsb
mov
mov
cmpsl
lcall
jmp
mov
add
movl
lret
jmp
jae
ljmp
xchg
rcll
out
jo
jae
adc
outsb
xor
jmp
cmp
adc
inc
pop
pmulhw
cmp
hlt
jl
jg
adc
lds
roll
mov
inc
ret
in
pushf
lea
xor
push
int
movups
les
lahf
leave
mov
jns
out
or
push
xor
push
loop
loopne
aam
push
mov
jbe
rcrl
int3
jno
repnz
ljmp
lahf
lret
and
jl
andl
gs
es
push
or
mov
divb
add
js
jb
xchg
clc
loop
xchg
or
pushf
cli
loop
and
adc
dec
imull
mov
stc
out
jg
dec
adc
mov
xor
outsl
je
fs
push
aaa
cmpsb
and
adc
xchg
fwait
inc
in
sbb
daa
inc
sub
cmpsb
adc
or
sarl
fs
xor
negb
inc
insl
xor
cmp
add
leave
ja
cmpsl
add
mov
imul
and
sub
mov
and
mov
jnp
jnp
sub
cmp
xor
into
lods
sub
aas
shl
mov
gs
adc
push
sti
ret
addr16
adc
lds
jl
mov
es
cmpsl
inc
repz
sarb
jmp
and
movswl
lret
xchg
js
movsl
fdivl
pop
jle
pop
or
fistl
ret
sbb
xchg
dec
stos
or
xchg
mov
enter
mov
pop
mov
add
lock
sbb
sbb
shlb
lock
sbb
push
lea
push
pushf
push
std
stc
xchg
in
cmp
cwtl
jo
popf
or
or
jge
push
fcomip
jns
pop
cmpsb
add
stos
and
cmp
sbb
test
icebp
jns
pop
inc
lods
movl
mov
jae
enter
lcall
jns
xchg
mov
mov
push
in
push
roll
out
les
arpl
rclb
jp
jae
mov
cmp
xor
and
xchg
mov
add
push
mov
roll
mov
in
loopne
sbb
xchg
push
push
or
and
cltd
mov
jns
cmc
pop
inc
imul
mov
pop
jnp
inc
aaa
sarl
mov
call
inc
mov
jge
mov
inc
dec
orl
test
out
iret
es
adc
jb
shrl
lcall
negl
hlt
pop
in
movsl
inc
std
mov
test
loopne
ja
movsb
repnz
leave
fdiv
popa
addl
or
lods
add
mov
inc
sub
movsb
mov
jp
aaa
xchg
cmp
insb
and
sub
mov
test
in
jno
popa
lahf
test
xchg
test
idivb
mov
inc
mov
call
and
popa
push
fbld
cli
cltd
pushf
ljmp
negb
mov
fwait
xchg
cmpsl
xchg
ja
jne
ror
sub
dec
xchg
test
mov
dec
push
jl
shll
jl
rcrl
xor
xlat
sub
push
ret
push
push
loopne
inc
inc
mov
mov
mov
mov
jae
cmp
aam
mov
mov
sti
mov
and
mov
push
mov
xchg
in
push
rcll
lcall
xchg
xchg
enter
sahf
loop
cvtdq2ps
or
shl
out
mov
and
jnp
dec
out
stos
inc
movsb
xchg
pushf
icebp
lcall
fwait
xor
jmp
je
into
int3
das
mov
rcl
push
cmp
loop
int3
jns
push
cli
fildl
push
cs
outsl
in
sub
jbe
loope
dec
int3
mov
sub
mov
cmpsl
insl
or
int3
pusha
das
and
lret
lret
lock
xor
and
jp
fldcw
pushf
pushf
jl
jp
cmp
jg
inc
mov
mov
pop
pop
fidivrs
sbb
mov
add
jp
or
cmp
cmp
or
subl
jecxz
sbb
orb
adc
cmp
adc
into
dec
jb
scas
or
sub
sub
xchg
and
push
mov
in
mov
mov
fnsave
aaa
jge
jo
cmp
pop
incb
and
icebp
jb
mov
in
jne
or
ds
repnz
cmp
push
ret
push
cmc
cld
cmp
fwait
fdivp
insb
iret
popa
push
jb
xchg
jle
xchg
push
mov
lretw
les
pop
ds
adc
enter
cmpl
xlat
or
mov
sbb
cltd
dec
into
push
int3
out
pop
aas
bound
xchg
scas
sub
test
je
cwtl
xor
outsb
push
mov
std
push
dec
out
lret
jns
int3
pop
jl
push
fwait
jne
psubq
les
movsbl
call
and
pop
or
sub
insl
aas
xor
sbbb
mov
mov
js
mov
lods
ret
in
ja
pushf
xchg
sahf
or
je
sbb
test
mov
movaps
test
pushf
push
push
push
roll
mov
lds
jb
pop
adc
xchg
aad
jbe
cmp
hlt
addr16
test
push
cmpsb
ret
cmpsl
push
pusha
js
adc
movsl
add
xor
clc
lods
fstpt
add
frstor
icebp
mov
ljmp
cmp
rcll
mov
test
inc
pop
popf
and
cmp
xor
inc
testl
testl
subl
les
jns
pop
jo
loopne
or
pop
dec
pop
adc
call
in
sahf
das
add
movsl
pop
mov
sub
mov
nop
xor
fdivrl
outsb
mov
xchg
mov
dec
popf
pop
sub
jns
mov
xor
push
sahf
das
jbe
sub
add
daa
cltd
mov
andb
inc
add
jbe
cmpsl
cmpsb
xor
add
pop
repnz
int
divb
mov
xchg
xlat
mov
xor
or
lods
sbb
jmp
push
les
popa
push
arpl
adc
adc
push
jnp
scas
in
aas
addl
mov
test
je
xchg
sub
jp
mov
arpl
hlt
adc
mov
sub
mov
xchg
in
pop
insl
nop
sub
jae
xchg
cli
dec
arpl
out
daa
dec
fldl
xorl
enter
sub
and
ds
scas
mov
repnz
pop
lock
xor
in
jp
addr16
sbb
lods
nop
cmc
iret
jl
add
mov
push
or
pop
into
xlat
ret
ja
dec
lret
repnz
outsl
jle
or
push
mov
add
xchg
rorl
add
and
enter
jno
cmp
lods
jae
aad
call
pushf
jle
inc
sahf
pop
jp
shll
sub
mov
pop
je
ss
sub
out
icebp
iret
lcall
push
in
fmull
loopne
hlt
dec
pop
int
mov
inc
xchg
pop
ds
loopne
xor
jo
push
lfs
dec
pop
add
mov
lret
xor
mov
insl
test
out
jmp
ljmp
ja
pop
xchg
in
cli
stos
xorl
pop
cmp
insl
clc
fistl
notl
ljmp
add
pop
pop
scas
stc
xlat
cmp
dec
xor
fsubrl
fst
imul
mov
push
fistpl
mov
negb
xor
out
or
lock
jl
cmp
inc
jecxz
and
sbb
insl
pop
scas
test
xor
fcomip
testl
call
arpl
test
lods
nop
div
cmp
mov
fdecstp
xor
repnz
fimuls
sbb
mov
inc
mov
ret
cmpsl
ja
or
dec
jmp
outsl
jae
mov
in
loope
add
leave
push
sbb
adc
add
mov
ljmp
repz
fldt
add
jo
orb
xchg
repnz
inc
scas
sub
and
lds
imul
mov
pop
jecxz
sub
dec
push
pop
es
std
jns
jp
loope
jg
in
push
jno
mov
cmp
inc
call
sbb
jge
jne
dec
push
jbe
mov
push
aaa
jl
scas
repnz
push
mov
test
cmp
cmp
lahf
aam
sbb
xor
imul
pop
cmp
sub
mov
cmpsl
cmp
sub
les
push
icebp
add
mov
in
mov
std
in
inc
cmpsl
popf
and
sahf
jp
add
je
adc
sbb
rcl
mov
sub
ja
mov
insb
sti
inc
sarl
dec
dec
loop
sub
sbb
cwtl
mov
into
into
or
mov
xchg
dec
mov
jne
or
push
fldl
inc
gs
pop
inc
filds
and
add
test
lods
mov
fdiv
insb
pop
addr16
push
push
bswap
add
rolb
repnz
aaa
jp
ljmp
add
repz
mov
pop
dec
sahf
ret
mov
mov
dec
or
fs
leave
push
aas
in
mov
ljmp
xchg
mov
adc
xchg
xchg
mov
xor
sarb
aas
dec
ficoms
pop
ljmp
xor
in
inc
inc
repnz
test
cld
stos
mov
add
pop
xor
xor
cli
test
movsb
xchg
and
ret
inc
xor
pop
inc
push
push
shr
inc
sub
pop
and
jo
mov
sub
repnz
lea
dec
xor
mov
sub
cmp
lock
insb
add
nop
in
loop
inc
je
int
jp
and
push
push
mov
inc
gs
fwait
xor
add
daa
stc
xchg
stos
sbb
xchg
pusha
add
das
xor
or
cmp
jns
imul
pop
stos
rol
ds
test
fwait
mov
dec
xor
cltd
cld
out
in
outsb
and
in
bound
or
lahf
stc
add
fisubl
dec
data16
fildl
mov
adc
cmp
dec
cld
aaa
rolb
push
jle
add
lods
outsb
aad
aam
mov
insb
xchg
fwait
mov
or
jnp
sub
cld
rorb
push
das
adc
cmpsb
push
jge
xor
or
xchg
lods
rol
and
sub
xlat
test
push
lcall
mov
test
adc
mov
test
popf
xor
fadds
xchg
xchg
outsl
mov
scas
adc
mov
hlt
psubd
sub
inc
dec
stos
sbb
jno
dec
leave
and
jno
mov
ja
xchg
or
mov
arpl
cmpsl
in
shlb
adc
dec
jmp
dec
push
out
pop
mov
std
iret
sbb
ret
mov
sbb
fildl
mov
je
adc
inc
inc
inc
xchg
jle
es
out
lds
mov
push
in
cmp
and
pop
add
pop
jg
out
das
push
or
ret
icebp
jne
and
pop
mov
std
cmp
pop
insl
stc
sbb
int3
mov
pop
decb
addb
hlt
pop
bound
das
add
insl
loopne
dec
cmp
test
mov
bound
jno
rclb
loope
mov
add
pop
pop
or
mov
test
fdivl
mov
les
hlt
addr16
decb
lds
jg
add
movsl
sahf
and
mov
outsb
jae
or
mov
cld
and
aaa
inc
pop
inc
popf
addr16
lcall
sar
pop
add
inc
mov
out
outsl
es
and
clc
mov
jne
xlat
mov
add
inc
adc
cmp
insb
leave
stc
cmp
mov
lods
mov
roll
push
add
ds
add
mov
mov
cmc
in
test
xor
movsb
scas
cwtl
ss
push
jge
fldcw
mov
nop
mov
pusha
iret
jae
inc
cmp
dec
daa
dec
jb
ret
fldenv
cmc
ret
sub
testb
outsl
imul
movsl
stos
in
pop
and
mov
mov
pop
sub
mov
fsubrs
mov
pop
test
xor
push
ljmp
or
pop
xor
stos
mov
mov
lret
cmp
adc
and
sub
cltd
lahf
cmpsl
jl
pushf
pop
cmp
mov
mov
dec
leave
mov
stc
and
fnstcw
sahf
push
rolb
movsb
and
test
xor
repz
and
xchg
adc
push
shlb
in
jns
adcb
push
ja
les
iret
inc
jne
mov
popa
pop
or
scas
or
out
into
sbb
clc
icebp
mov
mov
dec
setp
cmp
rcll
pop
dec
mov
cmpsl
mov
lds
in
pusha
insb
lods
lahf
out
mov
mov
sbb
mov
push
enter
movsb
dec
insb
outsb
sub
cmp
pusha
lock
cmc
out
pop
adc
scas
pop
ret
add
inc
outsl
xor
push
lea
insl
cmp
stos
lds
das
cmp
sbb
xor
push
es
out
xchg
aaa
std
pushf
iret
sbb
pop
popf
adc
fidivrl
fdivrl
jle
mov
cmp
mov
dec
in
cvtps2pi
push
mov
outsb
out
mov
sbb
jge
push
sbb
pop
icebp
aad
stos
pop
lock
int
stos
push
dec
sbb
jae
cmp
in
clc
loop
ficomps
xor
jecxz
xor
adc
pop
mov
mov
and
out
scas
mov
ljmp
fmul
insl
jno
cli
arpl
lea
out
mov
out
je
mov
inc
cmp
out
mov
xor
call
sbb
jle
mov
and
xor
push
popa
jge
loopne
adc
adc
out
pop
enter
repz
cmp
mov
test
adc
fistpl
shl
cwtl
push
stos
sub
sbb
addr16
stos
fstl
add
adc
add
pop
out
into
xor
jae
call
mov
adc
movsb
hlt
xor
sub
outsl
pop
bound
adcb
mov
push
pushf
es
pop
pop
mov
packssdw
imul
jb
cmc
cmp
pop
jo
xchg
test
test
or
jns
mov
aad
jecxz
xor
jo
stc
fwait
roll
js
clc
call
cmpsb
push
cld
jno
push
push
jg
sub
inc
stos
scas
push
cld
dec
adc
push
sub
push
xchg
popf
sbb
movsl
and
adc
fs
fldt
jle
adc
loopne
cmp
std
jbe
adc
fxch
orb
jnp
pop
xchg
int3
outsl
roll
pop
insl
cld
stos
adc
int
mov
xor
push
in
icebp
loop
inc
sub
gs
xchg
mov
cmpsl
mov
mov
mov
imul
repz
sub
hlt
push
leave
xchg
push
sbb
jg
insl
add
mov
lahf
xor
sbb
insb
pop
jecxz
xor
adc
cmp
sub
add
xchg
scas
jl
mov
nop
int
je
or
push
mov
imul
adc
lods
leave
cmpsl
test
in
js
push
xchg
aaa
cld
pushf
xchg
and
sbb
cmp
ljmp
adc
iret
pop
pushf
or
imul
jecxz
scas
sbb
call
fcompl
mov
cltd
fwait
xchg
gs
lea
pop
cld
cs
insb
add
and
jg
and
rolb
mov
aad
sbb
adc
cmp
push
fs
mov
fwait
cmpsb
mov
rcrb
int
mov
push
fildll
cld
movsb
mov
enter
jp
or
pop
jnp
and
jbe
subl
mov
xchg
jno
xchg
jbe
or
mov
call
mov
mov
add
push
dec
sub
sbb
js
xchg
stos
add
and
lcall
dec
pushf
and
orl
cmp
push
push
push
and
mov
ret
and
decl
sbb
adc
xchg
xor
add
sbb
adc
scas
dec
cwtl
test
stos
outsb
ficoms
jae
test
inc
lods
cmc
push
push
cmpsl
and
xor
dec
inc
clc
cmpsb
stc
ss
lahf
imul
int
sub
mov
pop
or
sbb
inc
ret
pop
hlt
insl
sub
sub
scas
jge
push
nop
dec
dec
mov
popa
int3
dec
mov
jbe
pusha
inc
lock
ror
xlat
ljmp
dec
mov
sbb
cmp
fistpll
jmp
hlt
lods
lds
daa
or
adc
hlt
enter
xchg
leave
inc
fimull
adc
mov
and
daa
dec
push
test
jge
jg
xchg
jno
dec
fmuls
adc
mov
push
push
mov
cmp
jmp
bound
cmp
xchg
sub
jo
iret
xor
cltd
jne
jns
jle,pn
mov
add
pop
lahf
pushf
xchg
or
dec
inc
xor
insl
jle
sub
and
mov
and
inc
cmp
adc
push
fnsave
adc
xor
cmp
into
leave
xchg
lcall
ja
mov
imul
mov
shlb
fbld
mov
popa
mov
jge
sub
mov
out
add
jge
dec
popf
and
inc
cli
sub
sub
rorl
xor
adcb
mov
ss
jne
dec
pop
pop
imul
into
insl
push
out
dec
sbb
sub
int
lock
inc
lock
xchg
push
int3
lret
mov
mov
push
add
push
pop
addr16
outsl
out
xor
subb
mov
cmp
mov
pusha
dec
jmp
push
cmp
mov
int
push
inc
sbb
loope
sbb
mov
sbb
sahf
inc
mov
jge
mov
imul
xchg
enter
scas
dec
arpl
sarb
cld
inc
out
popa
sub
fstpl
pop
cmp
enter
sbbb
arpl
adc
xor
dec
add
sub
mov
stos
arpl
into
or
scas
dec
inc
iret
push
es
ss
cli
decb
jecxz
xor
add
loopnew
and
je
fdivrl
loop
pop
outsl
loop
xchg
inc
leave
adc
movsl
ss
orb
in
jp
sbb
pusha
sub
sahf
outsb
push
xchg
ret
iret
leave
mov
inc
mov
pop
mov
jg
sub
movhps
dec
test
xchg
imul
mov
and
dec
push
push
jp
loopne
mulb
popa
pushf
cs
push
xchg
add
mov
mov
xchg
out
and
inc
and
mov
jo
fwait
cmp
hlt
cmpsl
xor
push
mov
mov
je
sub
nop
les
out
enter
imul
test
cltd
aas
imul
mov
pushf
inc
movsb
insl
cld
rorl
mov
pop
xor
cs
movb
ret
dec
jns
and
inc
aas
and
js
scas
lcall
fisttps
jno
repnz
push
jno
cmovl
add
insb
xchg
sarl
mov
xchg
stos
jmp
mov
add
insl
mov
add
mov
xchg
jnp
push
dec
mov
inc
and
lods
cmc
into
outsb
ds
je
les
sbb
fwait
pop
mov
es
repz
adc
shrb
xor
outsl
cmp
stc
inc
fbld
pop
icebp
and
cs
hlt
mulb
pusha
and
and
fcompl
mov
fsubrl
mov
imul
enter
push
and
pop
and
in
jnp
or
mov
sub
dec
das
leave
incb
enter
mov
shll
mov
sbb
sbb
dec
mov
cmp
push
aam
adc
in
push
rcrl
fsetpm(287
mov
shrb
fs
out
sub
pop
cwtl
movsb
xor
addr16
out
push
jbe
mov
arpl
inc
ds
adc
xor
mov
pop
or
push
enter
je
call
cmc
stos
lret
hlt
ds
and
inc
faddp
xchg
adc
jecxz
enter
add
add
mov
gs
sbb
push
sti
cwtl
and
cmp
and
and
je
out
out
lahf
dec
dec
shrl
push
mov
pop
lock
jns
mov
addb
outsl
mov
sbb
mov
pop
mov
ficoml
jae
mov
pop
xchg
decb
xorb
and
jmp
pop
outsb
lods
int
jb
mov
or
pop
rclb
sti
sbb
push
clc
mov
lahf
loopne
inc
insl
lret
cmp
cmp
mov
movsb
fmull
xlat
jne
fildl
jecxz
xchg
leave
stos
cmpsb
mov
push
in
in
push
cmpsb
nop
cmpl
ljmp
jg
xchg
mov
sbbl
lea
fcos
mov
dec
xchg
mov
cwtl
jno
lock
movsl
pop
push
cmp
jmp
add
pop
and
in
pop
cwtl
mov
outsl
test
jp
push
jne
xor
pop
or
sbb
lret
pop
pop
hlt
push
addb
mov
repz
sub
int3
xchg
mov
test
and
push
adc
push
or
push
or
jns
mov
and
mov
or
and
adc
jne
test
es
nop
or
in
sub
adc
lahf
ret
or
mov
mov
inc
int
sarb
mov
mov
cmp
repz
inc
mov
out
jns
mov
lcall
cmp
gs
sbb
and
jno
sub
push
sti
pop
add
rorl
int3
js
inc
fbstp
dec
outsb
hlt
xchg
movsl
xchg
lods
add
scas
or
cs
xor
mov
xlat
stc
ds
cltd
rolb
test
stos
sub
mov
ret
es
ret
stos
lds
sub
lods
iret
xor
sahf
or
stos
orl
pop
and
lcall
nop
push
std
pusha
inc
adc
or
repnz
dec
scas
imul
imul
aaa
loopne
imul
es
xor
dec
cmp
in
mov
or
out
lcall
int3
into
and
and
adc
fidivs
into
inc
rorb
cld
js
cmp
enter
xchg
jmp
subb
and
test
add
mov
mov
jg
sahf
ja
pop
push
and
mov
and
sub
and
std
jl
pop
sbb
add
imul
mov
and
jnp
xor
xor
jb
jecxz
out
cwtl
loope
push
mov
mov
imul
xchg
ds
push
xchg
mov
sahf
mov
in
in
fsubl
inc
and
push
clts
rcl
add
sub
lock
fldln2
cmp
mov
push
mov
repnz
sbb
in
cmpl
adc
lahf
cmpsb
xchg
pop
notl
loopne
sarb
xor
sbb
repnz
push
out
pop
lods
data16
test
mov
xchg
aam
test
adc
test
sub
cmp
cmpsb
fisttpll
xor
shrb
push
imul
xlat
mov
pop
lcall
jle
dec
movsl
mov
rcll
dec
xorl
dec
enter
popf
popa
rcrb
jle
ss
mov
ss
test
jp
sbb
mov
mov
dec
xchg
movsl
repnz
js
add
and
divb
xlat
jne
adc
jns
ficomps
xchg
fwait
test
es
adc
jno
add
jp
jns
mov
pop
fcmove
repnz
mov
and
out
sbb
leave
sbb
scas
pop
push
sub
and
out
lahf
mov
lahf
sub
pop
cmpsl
push
imul
or
xchg
push
out
inc
aad
das
out
push
test
pop
xor
mov
jmp
xchg
mov
call
dec
fmull
fisubs
rcr
sbb
ja
inc
aam
sub
pop
cs
fidivl
adc
dec
iret
adcl
jg
into
sarb
ss
or
dec
stc
push
mov
ret
dec
rcll
mov
jmp
icebp
loope
cs
cs
mov
movsb
inc
jbe
adcb
add
or
dec
mov
loopne
and
adc
popa
cld
aaa
push
fs
add
ja
stos
js
pop
jmp
test
jecxz
insl
add
push
mov
js
inc
jno
xchg
inc
pop
lds
insl
push
jecxz
dec
imul
imul
inc
das
mov
jg
lret
mov
sti
or
iret
mov
xchg
mov
popa
fsubrs
repnz
mov
insl
lods
int3
aas
push
fists
filds
stc
cltd
sbb
fisubl
das
in
in
push
popa
sahf
push
xchg
xchg
stc
dec
push
xchg
inc
pop
jnp
adc
movsb
imul
dec
ret
repnz
cmp
dec
popl
jnp
mov
cmp
or
xor
add
js
out
mov
pop
pushl
mov
aaa
sub
dec
mov
fistps
inc
jmp
pop
xlat
or
push
rcll
sbb
and
push
sarb
pop
jp
lods
fs
push
test
and
lahf
bnd
sub
jns
dec
andb
inc
or
rolb
popf
mov
jmp
jb
cli
shll
jl
jmp
and
inc
in
lret
xor
test
and
insb
mov
scas
xlat
add
pop
push
lods
outsb
sub
es
shlb
inc
inc
cmpsb
push
adc
push
jg
cmp
movb
fists
push
xlat
jno
cmp
or
adc
arpl
leave
imul
or
mov
jle
cmc
cltd
sub
cmp
inc
lods
add
insl
add
push
gs
aas
loop
loopne
lods
mov
call
stos
mov
or
leave
pop
insb
clc
fwait
aam
idivl
push
push
xor
lds
mov
pop
push
in
dec
out
out
inc
push
push
mov
jmp
ja
mov
jge
aaa
cmpsb
jecxz
adc
cmp
stos
test
imul
sbb
push
push
mov
pushf
xlat
dec
pop
call
out
aam
je
sbb
mov
xchg
mov
shlb
orl
xchg
scas
mov
inc
adc
loop
xchg
adc
dec
rcr
xor
mov
mov
repz
or
sbb
adc
jmp
add
and
push
sarb
or
and
call
add
fiaddl
repz
loopne
inc
vmptrst
enter
xchg
mov
into
lcall
xor
dec
mov
pusha
insb
mov
rol
mov
or
mov
daa
mov
adc
jns
fucom
jnp
pop
xor
ret
lahf
mov
pop
shrb
sbb
fmuls
xchg
sbb
mov
mov
jg
cmp
rol
test
sbb
movsb
add
orl
data16
cwtl
sti
or
addr16
sub
arpl
xchg
inc
cmp
scas
xchg
lahf
pop
inc
mov
xlat
xchg
cmp
mov
loop
enter
test
cli
movsl
ret
scas
inc
jnp
out
and
xchg
jecxz
mov
dec
pop
rcr
adcl
scas
aas
sub
stc
sar
and
jp
cmp
add
pop
adc
push
lds
andl
pushf
pop
divl
pop
cmpsl
jle
jae
cld
fwait
cmp
out
cmp
inc
js
rcrl
icebp
sar
push
jae
imul
repnz
adc
and
inc
sbb
sub
and
sti
sbb
cmp
pushf
xchg
jbe
push
sahf
pop
lods
adc
mov
cmp
push
sub
add
push
addl
push
mov
add
fcoml
and
scas
adc
sub
sbbb
add
mov
pusha
xlat
stos
mov
iret
ljmp
and
mov
cltd
adc
add
loopne
or
push
pop
scas
cmp
or
fwait
data16
pmulhw
add
ds
lahf
xor
inc
aas
dec
cmp
sub
sub
std
movsb
jo
sub
icebp
sbb
lock
hlt
jae
adcb
mov
xchg
jno
pop
add
dec
dec
dec
fidivs
mov
dec
sub
mov
push
fisubrs
int3
dec
test
lret
lahf
xchg
shl
fimull
push
outsb
push
push
or
lds
aam
jne
mov
das
and
jl
dec
out
es
dec
sbb
ret
pop
add
push
ljmp
jp
nop
dec
ret
int3
addr16
rolb
cmp
cltd
mov
mov
jb
add
add
jp
push
cmc
lea
scas
test
stos
pop
sbb
cltd
or
mov
cmp
ja
mov
hlt
push
jle
aam
adc
mov
mov
nop
xor
imul
shlb
lods
xor
push
mov
mov
mov
sarb
enter
hlt
sbb
mov
in
mov
xchg
test
nop
jmp
inc
xor
sbb
xor
inc
mov
mov
push
sub
subl
xor
ja
les
rcll
sahf
mov
test
jge
out
push
jno
std
sub
cld
test
push
xchg
or
mov
mov
les
mov
scas
add
inc
mov
loop
pop
cltd
lock
or
xor
cmp
fldcw
sbb
mov
mov
push
mov
push
pop
lock
adc
xchg
test
mov
mov
movsl
inc
stos
das
jae
xchg
xchg
stc
in
inc
xchg
cmp
sbb
cmp
enter
sub
dec
adc
xchg
pop
rcl
add
or
out
notb
inc
call
movsb
cwtl
loop
xor
xor
jge
addb
aas
arpl
repz
fcomps
add
jmp
nop
inc
orl
or
dec
out
mov
jl
repnz
aam
jbe
fs
push
pop
cld
fcoml
or
xorl
stos
int
push
cli
xchg
lock
mov
pusha
dec
lock
lret
xor
icebp
xor
stos
mov
lock
push
movsl
test
fs
sbb
outsb
imulb
cwtl
iret
inc
adc
test
cli
test
mov
movsb
mov
dec
mov
pop
cli
lods
jb
test
pop
out
loop
pop
jo
bound
imul
les
xor
pop
jne
mov
add
cmp
repnz
popf
pop
cmc
and
add
cmpsl
add
bound
sub
sub
movsb
pushf
mov
mov
push
loop
ficoms
rcrb
mov
sbb
loope
and
or
lds
mov
mov
or
in
xor
mov
adc
das
mov
imul
fldt
add
daa
sub
add
jns
mov
movntps
mov
sbb
mov
sbb
push
out
test
imul
mov
fsub
test
scas
jecxz
aaa
inc
nop
frstor
push
dec
enter
scas
push
pop
cli
mov
pop
mov
std
shl
int3
or
pop
add
pop
addr16
insb
xor
cmc
adc
cmp
push
leave
std
mov
icebp
push
mov
mov
dec
mov
xor
mov
movsb
ljmp
xor
fsubl
jl
addb
insl
jb
add
lahf
cli
aam
and
iret
xchg
addr16
dec
mov
xor
rcrb
decl
and
adc
sub
sbb
es
out
cwtl
in
xchg
bound
mov
pop
sti
jle
push
jp
mov
cmp
xchg
xchg
add
ret
and
cmp
xchg
jno
jnp
cltd
push
int
lods
movsl
xor
lock
outsl
in
push
clc
das
jae
pop
clc
push
push
or
mov
outsl
pop
pop
jge
pop
ret
test
and
loopne
cmp
mov
ds
pop
mov
movsb
inc
mov
dec
scas
inc
pushf
cmpsb
loope
push
lret
sti
and
fstpl
in
push
mov
fwait
roll
repz
adcl
pop
or
sub
inc
add
cs
adc
sti
adc
rolb
fnsave
xor
cmp
je
cmp
pop
lea
mov
fisubl
je
vprotb
dec
mov
pop
cmp
pop
imull
adc
mov
and
cmp
sub
inc
sti
and
repz
and
cli
stc
leave
scas
push
fs
xchg
outsl
adc
or
xor
imul
movaps
insb
loope
movsb
insl
ficoms
arpl
cmp
je
mov
and
test
pop
movsb
adc
xor
out
aas
pop
or
pop
cmp
cmp
and
mov
pop
mov
pop
int3
push
test
sarb
shl
sti
mov
or
xor
xchg
mov
or
jne
repz
push
icebp
aam
dec
ja
pop
jp
mov
lret
lds
pop
movsb
popf
test
mov
mov
sbbl
sti
push
and
cli
and
xchg
flds
fmuls
mov
jle
push
add
pop
call
popa
out
fadd
pop
and
pop
jo
test
aad
mov
data16
ss
mov
jns
pop
in
sub
int3
mov
mov
clc
mov
sub
cmp
and
sbb
add
or
cmp
push
adc
fwait
daa
and
aaa
push
lea
mov
jl
xor
mov
and
add
pop
test
ret
xlat
add
mov
xchg
push
outsl
ret
lret
sbb
add
inc
int
mov
add
cld
enter
ret
xchg
int
pop
shl
cs
jg
or
scas
sub
push
xchg
inc
loopne
test
test
sub
repnz
repnz
mov
inc
rdmsr
xchg
out
jle
cmpsb
mov
sarb
popa
stos
call
fs
mov
mov
in
sbb
in
inc
sbb
loope
xchg
add
adc
pop
and
xor
imul
push
sysenter
xchg
ljmp
dec
pop
and
sti
mov
cld
dec
mov
xchg
movsb
cmp
lret
sub
mov
int
adc
dec
adc
or
mov
lock
mov
sub
jmp
push
cmpsl
mov
leave
push
scas
bound
adcl
sub
adc
das
mov
mov
mov
pop
inc
mov
mov
bound
sti
cwtl
int3
xchg
mov
and
scas
pop
inc
decb
push
dec
aad
out
pop
mov
cmp
or
push
mov
mov
and
insl
xor
in
insl
pop
stos
or
cs
mov
or
xlat
jecxz
xchg
cs
dec
std
arpl
test
cs
mov
add
or
mov
ror
push
push
xchg
imul
pop
lret
jno
fdivrs
cmp
xor
inc
imul
subl
xchg
sub
sbb
into
enter
and
push
jp
and
daa
sbbl
loopne
aad
scas
repz
frstor
cmp
xor
and
popf
or
mov
mov
and
cmp
jne
pop
jae
xor
push
push
push
mov
shll
les
call
call
or
xchg
sar
push
sub
ds
jno
push
jno
mov
mov
sti
fcmovu
cmp
cmpsl
pop
rep
jle
test
pop
orb
xor
mov
jmp
inc
sbb
and
pop
sbb
popf
sbb
ror
rol
jecxz
jge
add
mov
xchg
loope
dec
push
add
or
jle
push
daa
scas
sub
inc
xchg
fdivrs
popa
cwtl
fstps
insb
inc
pop
loopne
or
cmpb
dec
bound
jo
adc
and
and
sbb
mov
loope
jl
insb
mov
inc
and
push
aam
xlat
stos
ss
mov
and
nop
out
fidivl
cwtl
shl
cwtl
out
shll
xlat
push
jbe
cltd
dec
fldl
sub
jns
ret
dec
loop
jne
pop
inc
pushf
xor
mov
fistpl
push
add
push
stc
adc
aam
dec
lea
dec
push
mov
les
pushf
xor
je
jb
shlb
popf
call
jae
sbb
fucomp
push
cltd
xchg
shl
push
xor
movsb
daa
enter
popf
repnz
popf
fdivl
mov
data16
je
mov
adc
cmp
loopne
cwtl
pop
aad
aas
adc
jne
hlt
xchg
bt
int
rcll
xor
pop
les
sar
add
xchg
mov
dec
add
lcall
cmpsl
loopne
arpl
addl
arpl
data16
repnz
inc
cmp
mov
ret
dec
and
xor
pusha
jle
adc
and
push
xchg
fstl
cwtl
cwtl
lods
dec
out
jmp
insb
lahf
jmp
call
lret
pushf
out
sbb
pop
fisubrs
sub
popa
sbb
xor
push
or
mov
inc
pop
dec
xchg
dec
xchg
std
or
sub
imull
in
xchg
outsl
or
mov
jns
insb
xchg
push
adc
scas
push
jnp
loop
xchg
mov
jb
lock
sub
pop
mov
test
into
sbb
call
aam
mov
ret
xchg
subl
sahf
and
dec
data16
mov
gs
mov
imul
sbb
mov
pop
arpl
enter
dec
pop
cli
gs
popa
stc
aam
jg
in
dec
inc
sub
jns
iret
push
ja
sub
lods
add
lret
lahf
add
cmp
clc
and
pop
xchg
add
jmp
lock
mov
or
inc
pop
mov
repnz
adc
sbb
movsb
jb
test
test
aad
push
push
popa
push
into
xor
and
test
sbb
sbb
hlt
dec
rclb
and
aas
jae
stos
loopne
fcmovnb
mov
jmp
push
adc
xchg
rcr
mov
cltd
mov
stc
and
ret
jl
lcall
in
popa
mov
jne
movsl
dec
sbb
xor
mov
mov
jge
cmp
jo
enterw
mov
arpl
sbbb
je
push
lock
insl
mov
pusha
mov
sarl
add
xor
loopne
outsb
mov
stos
jno
inc
add
push
xchg
or
repnz
std
fildll
or
ror
xchg
add
xor
popf
cmc
xor
add
mov
pusha
js
pop
dec
push
pop
xchg
adc
or
aad
leave
out
enter
pop
push
jae
or
sbb
inc
mov
cmp
xchg
ret
jle
int
in
inc
sahf
loope
mov
out
mov
xchg
addr16
jmp
mov
pop
push
fisubl
add
adc
mov
imul
jge
ljmp
mov
insb
sti
sub
xchg
pop
push
notl
push
js
push
in
repz
movsl
jae
enter
mov
data16
xchg
mov
out
cmpsl
mov
hlt
sbb
pcmpgtw
adc
push
shl
rorb
mov
das
orl
sub
and
lock
sub
push
push
sub
cmc
inc
mov
std
sbb
mov
lock
xor
push
adc
popf
adc
mull
sbb
mov
sub
pop
or
mov
jle
xor
scas
adc
inc
add
push
dec
lods
aam
xchg
les
pop
sbb
fisubrl
mov
dec
cmp
shrl
cwtl
insl
das
icebp
add
insb
fwait
jns
lret
out
mov
or
mov
inc
sti
push
imulb
and
and
out
mov
xchg
mov
xlat
lods
sti
push
aaa
mov
cmp
mov
dec
pop
call
xor
mov
call
push
mov
rcrb
sub
or
push
and
inc
inc
mov
int3
inc
popa
pop
sub
dec
pop
dec
mov
inc
push
dec
out
iret
test
jno
cmp
pop
mov
xor
shll
jae
inc
sub
stc
jge
shll
or
or
out
add
mov
adc
dec
sub
iret
std
xchg
mov
mov
std
pop
lods
sbbb
xchg
mov
dec
push
inc
mov
lcall
cli
cltd
iret
xchg
mov
std
mov
inc
addr16
mov
xor
jge,pt
arpl
hlt
js
fwait
push
stos
sub
fs
mov
in
sub
in
and
fs
out
pop
dec
loopne
rorb
mov
mov
sub
dec
bound
xor
inc
cli
or
insl
stc
fidivrs
int
push
les
xor
cmp
sub
push
shll
icebp
popa
mov
lahf
xor
push
lods
call
mov
sti
adc
inc
xor
loope
xor
and
in
xor
cs
inc
jae
xacquire
lret
in
fwait
inc
inc
or
in
jbe
in
mov
out
out
xor
jnp
ljmp
mov
bound
out
and
add
out
mov
xor
nop
xlat
cmp
loopne
fnstsw
xor
or
sbb
pop
jnp
xchg
xor
cmpsb
inc
push
out
jns
inc
mov
and
inc
aaa
aaa
lods
add
xchg
sbb
js
add
outsb
dec
xchg
ljmp
cmc
fidivl
stc
nop
jmp
push
push
mov
out
push
rol
cmp
ret
insb
mov
push
jno
and
adc
popf
jbe
adc
inc
push
and
xor
jp
jno
and
push
mov
jg
aas
mov
icebp
mov
popf
or
adc
push
dec
nop
aad
mov
dec
shll
jmp
mov
pusha
push
neg
mov
push
and
pop
sahf
lcall
xor
pop
pushf
jmp
repnz
sub
fists
xchg
rcll
adcb
mov
loop
add
cs
pop
lods
add
test
or
mov
jae
xchg
mov
ss
mov
pop
insl
push
ss
or
in
test
cmc
xor
cld
enter
push
cmp
dec
cmp
push
and
fisubl
adc
std
dec
outsl
mov
cmp
adc
inc
mov
sbb
inc
mov
outsb
jp
sub
sub
fs
loopne
js
popf
sti
je
push
dec
sbb
repnz
inc
loope
sbb
fsubrs
adcb
pop
js
mov
sbb
out
aas
add
in
repz
mov
mov
xlat
push
fiaddl
pop
sbb
cmc
push
sub
cwtl
xor
cmp
stc
cli
lock
ret
add
cmp
orb
stc
add
xorb
push
sbbb
mov
xchg
out
sbb
dec
xor
push
loopne
mov
pop
xchg
stc
ja
mov
test
mov
xor
inc
and
dec
jp
or
fwait
lahf
jecxz
enter
pop
js
outsl
js
iret
popf
ja
in
ret
mov
gs
ret
sbb
imul
jle
aas
scas
inc
leave
ljmp
mov
inc
imul
fadds
lcall
push
and
mov
out
jge
scas
mov
jnp
sbb
push
jge
and
cmc
adc
mov
ss
into
pop
cmp
push
lahf
int
cs
add
inc
icebp
cmp
xchg
loopne
fisubs
cs
dec
int
jecxz
aas
cltd
mov
inc
jb
xchg
sub
pop
pop
movsl
push
test
xchg
ret
dec
jl
cld
insb
sub
pop
lock
repnz
sub
mov
push
adc
sub
adc
mov
mov
lds
shll
mov
call
and
data16
ja
sub
out
in
jp
xchg
adc
adc
sbb
mov
and
es
dec
leave
jp
inc
mov
xor
outsb
mov
outsb
fildl
rolb
or
xchg
test
adc
ret
aaa
outsb
sub
cmpsl
cmp
loopne
rolb
js
mov
jl
enter
cld
daa
mov
cmc
xchg
jg
jb
cld
mov
mov
or
add
jg
scas
and
pop
pop
fs
mov
scas
adc
daa
lock
call
ss
sbb
jae
out
mov
in
cmc
repz
sahf
rclb
mov
push
and
cli
mov
adc
lea
sbb
loope
jl
pusha
rorl
sub
icebp
in
add
lahf
jae
jbe
aaa
out
mov
xor
out
cld
lcall
cltd
add
rorl
pop
push
fucom
adc
dec
dec
mov
jb
and
add
ds
addr16
xor
add
out
imul
lods
popf
subb
jns
or
inc
std
jp
dec
divb
pop
mov
cmp
add
cwtl
mov
fstl
xchg
mov
xchg
arpl
push
push
scas
movsb
jp
daa
push
push
fiaddl
xchg
sub
jo
jb
lahf
test
in
outsb
clc
ljmp
fidivrs
jecxz
mov
in
cwtl
and
sar
jg
jnp
mov
cs
stc
xchg
add
xchg
hlt
sub
out
idivb
cmp
mov
jnp
sub
sub
jmp
mov
pop
in
sbb
popa
pop
incb
sbb
ffreep
cmp
pop
call
cmp
adc
mov
loope
and
jo
out
inc
std
cmp
cmp
pusha
addps
imul
jns
dec
notl
add
xor
add
cwtl
push
loope
ret
or
inc
and
xchg
fcoms
ret
pop
cmp
mov
stos
fstl
pop
xchg
inc
aaa
clc
adc
and
and
mov
sbb
fs
sub
nop
mov
mov
sti
add
sahf
aaa
out
adc
and
inc
arpl
out
lahf
push
hlt
jle
out
insl
jne
outsb
mov
ret
or
addr16
mov
jle
data16
dec
or
out
sbb
pop
xchg
and
addr16
push
sub
fs
and
and
jg
hlt
aas
add
pop
lods
push
pushf
es
sbb
push
xchg
or
mov
not
push
das
mov
pop
imul
push
subl
xlat
call
mov
lret
cmc
cmp
das
jge
lock
rcr
jnp
xchg
xor
lods
aad
in
loopne
or
cmp
dec
in
mov
scas
and
adc
arpl
lods
jo
insb
sub
push
bnd
outsb
loopne
mov
adc
cmpsb
cmp
les
js
or
xchg
adc
pop
cmp
and
jle
pop
loop
icebp
jnp
je
enter
mov
icebp
jmp
in
scas
xchg
in
or
jg
push
add
adc
ss
cmc
sbb
or
icebp
push
pop
dec
adc
loope
push
sub
sub
out
fadds
and
ret
inc
addb
push
pusha
aaa
xchg
and
or
int
inc
lea
mov
mulb
xchg
rcll
mov
mov
sbb
cmpsb
xchg
cmpsl
scas
dec
popf
movsb
jecxz
push
push
jbe
fwait
mov
test
stos
hlt
pop
ret
aam
add
pop
cmpsl
roll
repz
daa
arpl
lods
lods
xchg
xor
js
stos
jp
mov
xor
push
jge
std
sarb
and
xor
xchg
stc
bound
call
jb
mov
xchg
leave
stos
je
xchg
sarl
pop
add
out
dec
or
inc
pop
jae
scas
pop
bswap
aas
adc
push
and
out
xor
jl
push
and
addl
push
sarb
in
arpl
lret
mov
xchg
or
dec
push
ret
and
jle
out
push
ljmp
jnp
jb
fisubs
fs
adc
cltd
sbb
dec
data16
ret
sti
xchg
in
notl
into
or
loopne
cli
xlat
stos
pushf
decb
nop
fs
adc
add
test
jb
pop
je
pop
out
std
cltd
sbb
notl
shr
mov
sub
push
xchg
jno
lds
pushl
lock
sub
push
insl
mov
test
aad
push
mov
dec
inc
popa
or
push
push
cmc
fcmovbe
in
jb
mov
jge
jo
js
pop
ds
xchg
mov
lods
push
fistpl
adc
sbb
mov
les
pop
sahf
sbb
adc
enter
mov
mov
xor
scas
mov
rcrb
and
sub
xlat
shll
cmp
daa
sub
sbb
cmp
insl
ss
push
pop
sbb
mov
sbb
sub
movsl
jnp
std
xor
mov
adc
inc
pop
cmp
call
les
notb
fildll
push
std
sahf
popa
repnz
pop
inc
and
lret
jnp
lods
shr
fstpt
insl
mov
dec
icebp
jmp
fstl
repnz
aam
insb
jp
mov
sub
cli
pusha
xchg
jle
or
push
dec
push
jmp
mov
dec
pop
fmulp
mov
das
cmp
xlat
add
fbstp
dec
sub
push
cmp
xchg
fldl
cmp
test
cmc
jns
xchg
jecxz
imul
xor
das
repz
mov
gs
repz
add
ds
cld
cmp
fisubrl
jmp
test
lock
call
push
mov
call
xchg
push
xchg
movsl
lea
mov
int3
mov
stos
shlb
jmp
out
lcall
and
pop
fiadds
jge
xor
inc
insb
push
add
incl
adc
clc
std
push
mov
add
testb
mov
movsl
test
orb
lea
xor
add
sbb
test
call
jns
push
repz
in
movsl
add
lock
push
xor
or
imul
push
lret
pushf
aas
cmp
pop
rorb
or
arpl
inc
adc
jno
sbb
jno
jmp
push
mov
mov
sub
bound
scas
adc
xchg
out
adc
cmpl
mov
pop
imul
fisttpl
xor
xchg
dec
and
fldenv
adc
mov
mov
insl
mov
mov
out
pop
mov
push
xor
out
xchg
pop
xor
imul
ficompl
jg
sbbl
cmc
dec
xchg
add
mov
std
hlt
aad
jae
clc
lret
ss
lret
icebp
pushf
pop
cmpsl
cs
push
xlat
xor
data16
aaa
sub
xor
mov
outsl
popf
fisubrs
dec
ljmp
cs
xlat
sarb
icebp
int
pop
dec
push
cmp
sub
mov
mov
lcall
pusha
int
shll
or
pushw
fnstsw
aas
fucom
pop
bound
int3
cmovl
xchg
jae
jge
testl
adc
aas
loop
lahf
sub
scas
or
and
out
mov
and
lahf
jecxz
or
adc
xchg
hlt
rorb
push
pop
ud1
mov
adc
cmp
rorl
inc
cwtl
stos
sbb
mov
add
mulb
sbb
adc
sub
xor
and
jno
lea
in
cmp
rcll
iret
xor
xchg
pushf
push
enter
out
jne
jl
mov
cmpsb
fadds
test
cmp
cmc
ficoml
sti
sub
int3
sbb
mov
in
mov
cmp
daa
mov
xor
add
ljmp
jne
jmp
cmp
jne
add
cld
bound
cwtl
ret
enter
add
fimull
sub
xor
push
and
stc
outsl
xchg
mov
sbb
rcll
mov
pop
into
mov
dec
push
push
and
stc
xchg
outsb
pusha
pop
sti
pextrw
js
repnz
cmp
sub
sub
mov
xchg
xor
imul
push
jae
enter
ja
lock
xor
nop
js
jp
adcl
arpl
mov
mov
push
adc
push
in
push
dec
movsl
lahf
clc
adc
sub
xchg
rcrl
sti
fcmovb
bound
cwtl
push
jae
lret
test
inc
adc
inc
sahf
mov
jmp
xchg
push
ds
sub
mov
mov
je
inc
daa
mov
adc
ret
mov
pop
sub
loope
xor
add
movsl
xchg
sarl
nopl
mov
adc
mov
pop
mov
mov
adc
push
push
jae
fcompl
and
fisubrs
mov
std
insl
jb
outsb
pop
aam
pop
dec
or
push
addl
imul
jge
xor
cmp
mov
int3
lret
jo
pop
mov
and
mov
int3
mov
in
jnp
jp
sarb
scas
clc
cmc
lret
ds
xchg
add
outsb
cmpsb
lds
out
aad
fwait
loop
cmp
mov
jp
inc
push
fldl
xchg
scas
hlt
aaa
jmp
cli
and
incl
outsl
push
lods
pusha
negb
adc
sub
mov
cmc
cmc
test
vpaddusb
mov
mov
jge
jbe
dec
sub
adc
and
mov
jo
dec
sub
pop
test
js
mov
call
xchg
pop
aad
inc
pusha
push
enter
fcompl
and
and
add
ja
xchg
mov
daa
enter
rcl
jle
lods
dec
fistpll
mov
xchg
cmc
pop
repz
int3
or
xchg
cmp
pop
lcall
adc
int3
cmp
arpl
pushf
inc
aad
nop
xor
ret
pop
std
sub
xchg
pushf
mov
mov
cltd
out
adc
cmpb
cs
aad
aad
ja
cmp
lods
out
add
in
xchg
xchg
jo
aam
nop
sub
arpl
push
cmc
push
cmpsb
xchg
scas
ljmp
push
fmul
push
mov
fwait
cwtl
sbbl
mov
fistps
fdiv
jg
push
and
cmp
leave
je
and
outsl
out
push
inc
or
jnp
mov
xor
dec
cmp
pop
dec
and
or
inc
leave
pop
sbb
enter
mov
pop
stos
rcrb
bound
dec
inc
sub
test
xchg
cmp
add
add
popf
mov
test
cmc
xchg
jecxz
ret
jnp
fisttps
and
lods
data16
inc
pop
xor
adc
ret
push
lcall
xor
mov
pushf
out
rolb
push
mov
inc
jp
mov
adc
mov
test
ja
sub
push
aaa
cmp
push
imul
jns
insl
rcll
loope
les
xor
test
push
test
mulb
push
pop
jae
and
xchg
xchg
imul
out
cld
sbb
adc
or
add
xor
pop
inc
push
push
scas
pop
pushw
rolb
je
sbbb
fwait
shl
aam
dec
lds
add
jb
fs
in
fsubs
addr16
and
xchg
add
iret
cs
mull
xchg
mov
push
test
sbb
xor
test
adc
jb
jns
pop
mov
pop
push
fmull
stc
cld
fwait
lods
jae
xchg
xchg
jmp
xchg
mov
enter
cltd
xchg
ret
mov
inc
outsl
cmpsl
adc
sbb
add
xchg
dec
popa
sub
idivl
test
ds
ja
adc
hlt
cltd
xchg
jp
out
pop
sub
xchg
inc
push
stc
ror
push
mov
cli
repz
jno
scas
popa
int
inc
pop
jle
mov
test
push
push
cmp
jno
fmulp
xor
pop
ret
aad
icebp
jbe
test
test
lahf
cld
mov
leave
add
push
push
ljmp
hlt
push
dec
mov
shrl
enter
fsubl
mov
movsb
push
mov
rorb
add
sbb
jb
cmc
pop
fwait
pop
mov
mov
pop
inc
push
mov
xchg
xchg
cmp
xchg
rolb
pop
pop
fldcw
enter
adc
pop
or
ss
add
dec
sub
jl
nop
leave
xchg
loop
push
sbb
or
decl
stc
repz
dec
adc
cmpsb
push
leave
popf
adc
or
mov
jg
pop
adc
cmp
jmp
jmp
jne
or
mov
jp
sbb
pop
or
pop
lock
xor
jg
arpl
inc
scas
cli
shlb
jle
jb
xor
cwtd
repnz
int3
mov
enter
bound
repz
jmp
je
cmpsl
ficoms
or
dec
ret
dec
add
mov
mov
test
sahf
jg
icebp
mov
jns
fcomi
into
cmp
mov
sbb
pop
hlt
xor
fsubrs
cltd
push
cltd
mov
jg
mov
fidivs
xchg
sub
imul
pop
mov
cmpsb
stc
mov
jb
nop
scas
push
mov
and
mov
inc
sti
mov
rcll
push
enter
repnz
loopne
mov
aad
pop
dec
repnz
push
add
iret
inc
and
sbb
mov
in
nop
sub
and
sub
imul
or
and
dec
psraw
dec
cmp
inc
pop
jbe
xorb
loop
arpl
rcll
clc
rolb
sti
mov
mov
inc
and
test
cmp
push
dec
mov
divb
stc
adc
or
mov
mov
outsl
mov
push
xor
jb
int
ljmp
push
inc
inc
mov
ja
dec
cmc
fsubl
fisubrs
ljmp
sub
test
fisubrl
in
dec
cli
pop
cmp
cmp
adc
rclb
mov
cmp
rclb
inc
push
cmp
sub
mov
jp
std
aaa
xchg
dec
negl
mov
dec
rol
cs
xchg
int
jl
repnz
arpl
inc
sbb
inc
inc
loop
jno
clc
jecxz
mov
jge
addr16
jae
out
cmp
test
idivl
ss
repz
add
mov
jbe
out
aad
push
fmul
cltd
push
xchg
sarl
jge
mov
scas
adc
pop
lock
sub
jl
popa
adc
mov
call
mov
pop
pop
shl
repz
mov
cs
fnsetpm(287
inc
mov
ret
clc
and
enter
insb
ret
push
roll
xor
cmpsb
and
lods
inc
es
sti
pop
fs
mov
idivl
cli
fsts
pop
mov
fldl
jb
pop
imul
fidivrl
into
jp
xchg
out
or
sub
lret
addr16
stc
fdivrs
pop
mov
bound
lock
fldcw
fimull
lods
jbe
into
lock
sub
sbb
xchg
nop
add
xor
push
shl
jae
inc
pop
dec
popa
jne
lret
movsl
test
sahf
scas
pop
jno
fdivrs
inc
sahf
inc
out
in
add
sub
addb
dec
push
popa
mov
xchg
popf
shlb
cltd
ljmp
fisubs
fsts
jnp
xchg
cwtl
push
cld
cs
pusha
idivb
in
push
cmp
or
int3
inc
imul
mov
aas
pop
and
jne
jmp
fnsave
and
add
ret
in
fldl
cmp
lea
ficoml
mov
rcr
repz
enter
addr16
decl
inc
test
mov
call
push
jb
sub
cmc
shlb
xor
in
fnstenv
jae
out
sub
hlt
jge
movsl
pusha
ret
ficoml
pop
cmc
mov
les
daa
jae
mov
test
push
add
add
into
pop
dec
orb
jbe
push
rcll
or
test
rol
xchg
push
push
add
icebp
jp
mov
mov
scas
and
lret
loop
insl
jae
int
and
cmpsb
or
in
out
cmp
xchg
outsb
jne
repz
add
jmp
mov
movsl
or
addb
fnsave
cmp
sub
or
mov
cmp
push
mov
loope
xchg
xor
lahf
jns
jbe
jae
or
gs
push
pop
in
pop
mov
inc
fmull
mov
dec
add
sbb
sub
movsb
sbb
jmp
jae
cmp
lret
hlt
movsb
cmp
jmp
in
sbb
mov
ror
cmp
adc
push
add
mov
mov
and
stos
adc
xchg
push
inc
mov
lcall
pop
psadbw
push
lea
dec
push
shrb
push
rolb
in
sub
in
iret
lock
pop
xchg
mov
and
mov
dec
es
jo
negb
or
jecxz
stos
mov
pop
or
mov
add
std
sbb
jge
stc
xchg
cmp
fs
lahf
in
fisubl
push
fwait
push
xchg
dec
jecxz
imul
inc
hlt
jp
fadds
sbb
aam
and
mov
add
out
xorl
jno
incw
pop
lds
xlat
inc
sub
jb
clc
jae
inc
pop
pop
xchg
das
and
push
lcall
inc
sbb
jb
loopne
jbe
mov
jecxz
out
jge
sahf
int
mov
lret
sub
insb
ficoms
ljmp
dec
js
adc
cmp
push
fnstcw
sub
add
stos
nop
jae
out
sbb
fsubs
adc
pop
mov
ret
mov
and
lcall
mov
shlb
mov
js
xorb
mov
jns
mov
dec
aam
insl
cwtl
mov
aas
shl
mov
dec
jbe
jb
fldl
and
sub
ljmp
addr16
adc
in
push
mov
stos
xor
pusha
pop
leave
in
inc
xchg
mov
sbbl
mov
xor
iret
inc
out
push
sub
add
xor
daa
cmp
push
dec
sbb
aaa
pop
push
loope
addr16
arpl
sbb
add
xchg
testb
pop
pusha
adc
add
mov
shll
cmpsb
fdiv
filds
mov
and
popa
jno
rcll
ljmp
das
add
frstor
imul
hlt
adc
jge
or
mov
loopne
cmp
lea
sarb
jno
mov
lahf
sbb
dec
std
es
cmc
repnz
sub
cmp
sti
cmp
sub
jo
into
mov
stos
jne
adc
loope
in
int
loopne
xor
call
and
or
ret
inc
faddp
cmp
stc
fsubr
push
addr16
idiv
mov
cmp
lods
push
inc
nop
push
jno
out
mov
leave
pop
nop
rcll
xchg
loope
inc
lods
fidivl
pusha
ror
shll
pop
mov
repnz
in
jns
enter
adc
lods
jo
icebp
insb
fmull
jnp
fnsave
and
push
mov
cmp
and
pop
cmp
cmp
xchg
subl
xchg
out
xor
fnstcw
xor
cmp
into
push
bound
push
xor
inc
mov
xchg
inc
enter
sub
xlat
mov
add
or
xchg
pop
outsb
xor
mov
lcall
pop
xchg
popf
or
scas
cltd
mov
sbb
fwait
cmp
outsb
stos
sbb
pop
cmp
mov
lea
int
les
aad
push
jae
mov
xchg
mov
insb
stos
rcl
ret
xor
inc
popa
xor
icebp
sahf
inc
adc
fucomi
loopne
mov
push
aad
movaps
pop
mov
adcb
ljmp
movsb
push
cs
inc
xor
push
cli
mulb
aam
popf
je
addr16
jg
fsubl
stc
adc
loop
jae
sbb
sbb
lods
aad
push
or
or
lahf
scas
addb
out
call
add
lret
xor
sarl
xor
loop
repz
call
scas
mov
or
sbb
or
cmp
xchg
mov
or
pop
in
lret
cld
aas
jp
adc
ss
xor
adc
pop
mov
cwtl
adc
test
add
and
dec
test
and
add
adc
fsubr
sub
repz
iret
xor
xor
insl
das
hlt
sub
rcr
jge
fidivrl
and
lds
dec
fsubp
and
aaa
and
dec
leave
inc
scas
out
jae
inc
test
mov
push
mov
je
jg
sub
lcall
sub
cld
out
sub
out
arpl
ds
in
mov
jge
jae
lock
test
mov
fimuls
mov
lcall
add
or
fsts
cmpsl
test
aas
mov
jp
test
mov
ror
mov
cmp
jne
les
cld
dec
mov
popl
in
sarb
xchg
fsts
imul
sub
xorl
jns
lea
jne
in
fistpl
xchg
aaa
in
mov
cs
dec
sbb
imul
cld
mov
push
div
cli
hlt
jbe
mov
or
jns
cwtl
call
cltd
inc
xchg
mov
aad
pop
inc
test
fs
mov
xor
xchg
iret
push
dec
pop
jns
or
stc
adc
bound
dec
addb
pop
mov
sub
gs
pop
sahf
test
xchg
test
jb
pop
sbb
jae
pop
xchg
stc
in
insb
lea
sbbl
imul
pop
push
pop
fwait
cltd
jle
mov
jae
jae
pop
popa
stos
pop
imul
cld
bound
pushf
jg
pushf
fdivp
insl
pop
xor
jg
push
scas
loop
jmp
or
icebp
popf
out
fcompl
xor
cmp
imul
std
add
lret
xor
mov
out
xchg
lret
sbb
inc
in
adc
mov
insb
push
jbe
sub
pop
aam
sub
popf
out
inc
mov
push
lret
pop
fnstsw
mov
or
ret
inc
cmpsb
jmp
or
push
shll
mov
and
sub
inc
mov
testl
or
dec
jno
in
mov
gs
inc
jns
pop
cmpxchg
test
cmpsb
sub
out
xchg
cld
enter
add
push
stos
sbbl
xor
sbb
test
lcall
add
scas
cltd
xchg
scas
mov
sbb
scas
mov
push
pushf
push
add
int
jge
test
inc
sub
sbb
movsl
adc
sbb
jp
ror
into
mov
jns
push
imul
dec
sbb
jb
cltd
or
ss
fadds
dec
ljmp
cmc
inc
xchg
sti
int3
mov
int
mul
out
in
jns,pt
xchg
stos
test
lret
stos
dec
push
lcall
inc
pop
pop
fidivrs
out
out
dec
add
mov
inc
aam
push
and
cmp
sti
mov
insl
mov
mov
xchg
push
in
movsb
pop
adc
adc
lods
fs
lcall
int3
xchg
jns
or
push
xchg
cmp
bound
scas
inc
and
lret
inc
sti
jmp
jne
sahf
push
stc
cmp
mov
inc
in
stos
cmp
and
iret
jne
xor
mov
ljmp
popf
shll
or
dec
cmp
out
out
or
mov
mov
out
adc
movsl
or
into
std
adc
pusha
enter
mov
or
adc
xor
repnz
lret
or
bound
jne
sbb
sub
or
aaa
mov
jae
xor
or
xchg
jge
jo
pop
call
cmp
addr16
cmp
xchg
jb
std
rcrl
and
adc
or
imul
mov
enter
xchg
mov
pop
xchg
loopne
mov
lret
push
sub
sbb
and
mov
pop
mov
cltd
cwtl
adcb
das
mov
mov
addr16
mov
xor
idiv
cmp
inc
popa
mov
jbe
jecxz
add
outsb
or
xor
push
or
gs
ja
cmp
dec
xchg
scas
pop
je
roll
mov
adc
inc
mov
sti
jae
or
dec
mov
outsb
push
xchg
xorb
pop
jbe
push
mov
mov
es
leave
xchg
xchg
lcall
in
push
jae
popa
cltd
xor
mov
fstp
jmp
int3
ficoml
xor
pop
or
jmp
ss
cmp
mov
test
repz
mov
fcompl
mov
ret
xorl
mov
mov
mov
into
mov
clc
js
clc
xor
push
mov
repz
mov
mov
cmpsb
xlat
fldenv
insl
jmp
pushf
or
add
sub
test
xor
sahf
pop
push
dec
inc
sub
cmc
mov
cmp
lods
popa
add
add
inc
clc
in
or
mov
sbb
mov
jl
popf
std
xor
outsb
pop
push
xchg
loop
sbb
pop
rolb
repnz
mov
xor
test
sbb
dec
inc
lods
in
jns
mov
pop
enter
add
jl
inc
psubsw
fiaddl
dec
jg
ja
fs
js
jmp
xchg
fisttpl
icebp
mov
lret
jno
push
out
cltd
push
cmpsb
sub
jg
add
lock
testb
loop
je
mov
insb
in
add
insb
lret
lahf
adc
aaa
lret
iret
pop
jae
jl
push
mov
sbb
cmp
push
shll
sbb
lahf
hlt
xchg
mov
out
hlt
xorl
mov
jp
in
pop
mov
xchg
mov
cs
std
out
mov
jg
cmp
jmp
push
inc
inc
push
loop
pop
adc
sub
jl
pop
jmp
fidivl
test
xor
imul
xchg
push
pop
cmp
das
pop
and
jns
loop
idiv
mov
mov
dec
test
and
in
leave
out
adc
dec
cmp
adc
out
jnp
pop
adcl
add
jae
and
repz
push
xor
jge
rclb
mov
jp
in
out
cmp
pop
xchg
pusha
mov
inc
scas
lea
add
imul
or
std
into
enter
jb
fstpl
inc
outsl
ret
les
xchg
cmpb
pop
mov
pop
movsb
imul
xchg
xchg
inc
jns
imulb
lahf
xor
mov
xor
arpl
fmull
sbb
mov
push
lds
cmp
mov
repnz
dec
sub
hlt
test
cmp
clc
stc
sub
int3
jecxz
mov
int3
stos
lret
fwait
push
loope
and
xchg
and
cs
dec
test
les
neg
pop
add
mov
in
clc
push
sbb
adcl
push
fisttpll
push
test
aam
pop
and
insb
loopne
push
add
push
pop
dec
cmp
shlb
cmpsb
fsub
movsb
into
pop
push
testl
push
sahf
jge
xchg
lods
loopne
jg
adc
sbb
sbb
jp
enter
mov
adc
loopne
mov
loop
jecxz
push
stos
push
adc
and
int
xchg
mov
std
lahf
jns
orb
sbb
pop
jecxz
fsubr
inc
divl
orb
dec
popa
jno
and
push
mov
jmp
stos
clc
add
sub
inc
mov
lahf
sti
inc
pushf
fwait
jge
add
ja
cs
dec
bound
leave
jbe
pop
sub
sub
loope
adc
mov
xor
mov
inc
js
jnp
mov
sti
mov
shr
cmp
aad
fidivrl
insl
shlb
dec
sti
mov
jbe
mov
mov
cmp
repnz
rolw
push
iret
cwtl
xchg
or
xor
out
es
push
pop
ret
test
or
add
pop
mov
sbb
add
cmp
addb
arpl
cmp
es
mov
adc
imul
adc
cmp
out
in
iret
pop
sub
aaa
xor
push
cmp
pushf
pop
jle
and
and
fnstsw
gs
xor
imul
mov
imul
cs
ljmp
sub
sbb
sahf
and
xlat
xchg
inc
add
mov
aas
and
cmp
stc
fnsave
adcl
cmp
mov
jle
fldenv
mov
xchg
stc
ds
pop
insb
daa
fwait
mov
dec
repz
mov
loopne
test
clc
stc
mov
jle
sbb
inc
push
push
pop
lods
stc
cld
lcall
mull
leave
rcrl
xchg
mov
mov
xchg
stos
xchg
dec
cmp
or
loop
push
call
mov
mov
imul
pusha
jmp
lea
add
out
adc
jecxz
jl
adc
test
push
mov
pusha
gs
push
lret
orl
cltd
inc
fnstenv
sarb
mov
mov
lods
popa
jae
out
lahf
ja
dec
push
pcmpeqw
cmc
call
xchg
adc
out
repnz
xchg
mov
pop
test
fdivrp
into
js
dec
ja
enter
jbe
rorl
out
and
push
sbbl
cmp
dec
push
xchg
sbb
mov
sarb
cmp
mov
arpl
hlt
sub
lds
cmp
xor
pop
insb
sub
lret
fidivrs
pop
mov
scas
in
lcall
dec
jmp
push
sbb
mov
xor
shll
jmp
sar
and
xchg
jb
mov
sarb
outsl
mov
jmp
cmp
add
pop
ja
cld
decl
cmc
push
sub
xor
int
fdivl
and
lods
lods
mov
jge
adc
jns
xchg
cmp
jp
sub
repnz
ja
push
ss
repnz
cwtl
push
mov
aad
aad
push
cld
std
int3
xchg
sub
pop
pop
xchg
cmc
push
out
insl
arpl
mov
mov
inc
inc
dec
mov
mov
in
pop
sbb
es
popa
dec
into
not
push
fistpl
jo
push
jo
add
int
out
pop
fwait
jmp
imul
add
mov
jg
popf
dec
scas
roll
aas
call
push
fcomi
test
push
jle
mov
xchg
jmp
sub
ficompl
in
pop
mov
jo
orl
shlb
sti
lods
push
jl
shr
cmp
mov
pop
aam
mov
sahf
mov
aas
and
add
loopne
cmp
movsl
mov
test
xchg
lds
in
mov
shlb
and
pop
mov
ret
or
jge
shrl
add
addr16
and
mov
or
cltd
mov
sbb
mov
sbb
sbb
sbb
stos
dec
inc
cli
int
punpcklbw
sahf
and
cmc
call
xor
inc
mov
or
push
mov
mov
out
data16
jp
cmpsl
outsl
dec
xor
or
add
mov
xchg
push
mov
cwtl
loopne
outsb
stos
incb
lret
lds
and
sub
ret
test
pop
shll
mov
into
xchg
push
test
lret
rcl
dec
push
aas
pop
push
out
lret
ljmp
test
pop
xchg
jo
int3
dec
ficomps
loop
stos
cmp
imul
sti
mov
fists
inc
sbb
sbb
fnstenv
lcall
cmp
inc
std
cmp
test
sahf
mov
cld
add
js
out
jne
pop
dec
cmpsl
dec
stc
push
dec
adc
ficoms
push
rorb
loope
add
or
sbb
adc
jno
daa
fdivl
or
pushl
jb
push
aas
sub
jns
test
push
mov
and
ficoml
ret
outsl
shll
enter
push
dec
scas
aad
pop
or
es
sbb
pushf
cmc
push
jbe
in
pop
scas
loope
mov
incl
mov
mov
into
xchg
dec
mov
jmp
mov
les
sub
das
ret
and
addr16
ret
add
push
lret
push
pop
pusha
sbb
mov
and
add
sbb
mov
in
insl
inc
cmp
out
pushf
test
lea
out
sub
xor
stc
sub
add
dec
insb
push
lahf
cmp
les
mov
cmp
mov
cmc
cli
sub
enter
stc
cmp
pushf
or
or
xor
aad
ficoml
icebp
aad
inc
stos
inc
es
shlb
outsb
adc
data16
inc
or
pop
outsb
mov
jno
adc
mov
outsb
sarb
push
inc
mov
and
cmp
int
mov
pop
mov
fists
xchg
movsl
loop
icebp
inc
jmp
xchg
mov
lds
xor
mov
mov
fsubrp
adc
mov
sub
sbb
cmpsb
dec
int3
pusha
dec
rclb
push
adc
jno
movsb
or
xor
add
dec
call
sbb
fistpll
mov
lea
cmp
add
add
aad
jns
or
das
jae
sbb
pop
or
dec
mov
sub
std
cs
test
aad
gs
lea
push
scas
fdivrp
loope
sbb
sbb
fwait
ja
lret
sbb
add
movsb
mov
sbb
jb
aam
andb
or
xchg
aaa
mov
mov
push
sub
push
popa
lret
rol
inc
aaa
pop
mov
push
sub
dec
xor
pop
cmp
and
outsb
cmp
xor
dec
movsl
ljmp
jmp
adc
pop
sub
push
mov
insl
aaa
icebp
xor
movsb
or
loopne
mov
gs
shrb
loopne
xchg
fildll
mov
fimull
adc
and
stos
test
push
mov
dec
nop
out
sub
jno
orb
xchg
mov
mov
sub
imul
push
jae
sarl
jo
xor
adc
push
jnp
xor
push
jb
sbb
lahf
call
dec
je
leave
push
loope
adc
out
inc
scas
xchg
jo
or
adc
repz
mov
add
int3
mov
mov
mov
xchg
std
ret
inc
scas
jb
push
jb
stos
or
cmpsl
sub
push
ds
jns
movsb
mov
test
movsb
subb
data16
orps
ficoms
lock
mov
add
out
test
mov
jb
in
bts
fimull
dec
sub
out
rcrl
jns
jne
lods
test
and
push
ret
pop
sbb
aam
dec
movsl
xlat
sahf
mov
cmc
cltd
or
jmp
adc
popa
out
push
dec
sti
add
int
inc
mov
mov
loope
mov
sarl
ss
inc
or
inc
ds
lods
outsl
mov
push
pushf
push
icebp
movsl
pop
push
scas
dec
inc
es
in
aaa
push
aad
enter
xor
mov
popa
rolb
mov
and
int3
sbb
pop
or
fcompl
cmp
fsubrl
repz
fldl
jb
inc
lods
enter
into
into
xchg
arpl
mov
ret
lcall
pop
out
sub
jg
inc
xor
xor
or
test
xor
jnp
mov
dec
lods
mov
mov
subl
scas
jne
outsb
add
ljmp
or
insb
imul
sub
sub
and
dec
push
and
in
cmp
in
call
xor
sub
push
pop
dec
aas
mov
call
mov
clc
push
out
pop
stos
inc
cmp
jmp
dec
mov
enter
push
repnz
push
imull
mov
dec
jecxz
rcrb
push
jl
les
sub
fcom
add
pop
sti
pop
adc
cmc
js
ss
adc
loopne
test
cli
xchg
jns
mov
fdivrs
fdivs
iret
sub
das
fsubs
xchg
jns
loop
jge
in
jg
lock
pop
imul
or
je
add
fnsave
daa
jb
jl
ja
dec
push
jecxz
clc
jo
add
lock
cltd
ss
pop
and
adc
mov
cmpsb
push
pop
stos
dec
lret
dec
ja
jp
test
xchg
pop
cltd
or
adc
cld
jnp
mov
shlb
dec
mov
lcall
test
push
push
mov
test
or
mov
std
xlat
inc
sti
sar
sbb
pop
cli
mov
inc
mov
stc
push
lock
mov
lahf
sti
inc
or
pop
fwait
ret
fimuls
mov
mov
mov
cld
mov
xchg
or
dec
in
cmp
movsb
mov
lods
jg
fadds
or
ss
sub
mov
xor
ds
adc
rclb
lcall
cmovs
add
sbbb
rcll
cmp
mov
jb
out
or
mov
mov
ds
lret
repnz
test
xchg
outsl
lods
inc
jecxz
fs
jmp
jp
in
loope
or
sahf
mov
das
clc
out
mov
sbb
into
je
scas
sub
push
loop
fsubrp
inc
dec
cmp
nop
sbb
dec
pop
call
rorl
lcall
out
rcll
add
cli
mov
and
test
into
pop
cld
ficoml
jmp
insb
loop
negl
xor
lds
push
dec
jl
ja
sahf
jecxz
lods
sahf
pushf
js
cmp
mov
test
adc
adcb
pop
cmp
jmp
sbb
adc
lods
fadd
int3
mov
xchg
inc
cmp
hlt
cmp
mov
and
pop
or
clc
sbb
mov
mov
or
sbb
and
outsb
arpl
out
cs
imul
xchg
add
clc
cmp
mov
aaa
mov
arpl
leave
in
jp
push
push
xchg
pop
outsl
shlb
jmp
movsb
bound
adc
xchg
mov
push
or
xorl
jnp
pop
fldcw
stos
mov
adc
push
clc
mov
inc
xchg
xchg
pop
mov
push
scas
add
pop
cltd
aaa
fidivs
pop
aam
xchg
jecxz
imul
ljmp
je
into
xchg
fsubl
add
lds
mov
and
and
inc
cmpsl
mov
inc
mov
out
dec
push
mov
pop
add
xlat
shlb
popa
xchg
or
mov
inc
clc
hlt
jle
mov
adc
push
mov
push
mov
xor
push
inc
inc
cmpsl
or
fbstp
and
repz
fsubs
pop
push
mov
push
sub
ret
mov
out
lea
sbb
sbb
add
xor
sub
push
inc
xor
fiaddl
fcomi
mov
push
xchg
sbb
stc
cmpsl
test
fcompl
pop
sarl
mov
adc
jns
das
pop
fidivrl
and
inc
inc
hlt
xor
es
scas
fs
insl
add
pop
jae
push
mov
mov
hlt
and
fistl
or
fidivl
aad
mov
int
xchg
pusha
jmp
pop
xor
push
pop
rol
lret
xor
sub
sbb
aas
test
sbb
in
mov
or
scas
sub
fnstenv
stos
cwtl
fnstsw
pop
sub
mov
mov
test
pushf
rcrl
inc
fwait
sub
xorl
f2xm1
or
cltd
pop
mov
lock
mov
pop
inc
sub
andl
rcll
pusha
sbb
jne
popa
jp
jg
fs
jne
call
add
and
mov
jp
outsl
andl
rcr
ds
dec
pop
fisttpl
xorb
popa
aaa
jbe
mov
movsb
cwtl
insb
pusha
inc
xor
add
pop
mov
mov
add
fildl
cmp
push
enter
adc
mov
mov
pop
xchg
loope
cmp
aam
push
stos
inc
test
call
pop
test
jne
in
adc
lcall
shr
icebp
gs
sbb
or
mov
repz
jns
mov
das
mov
add
sbb
pop
mov
xchg
jecxz
sbb
xor
mov
sbb
jno
inc
jbe
sub
loop
cmp
cmp
bound
outsb
lods
push
xchg
inc
xor
and
movsb
es
jo
adc
sbb
xchg
jge
dec
mov
mov
xor
cmp
push
mov
repz
sub
fmuls
adc
jno
jp
jle
cltd
js
addl
js
mov
mov
div
push
cwtl
push
or
inc
and
imul
jmp
fists
jl
fldcw
add
mov
jecxz
pop
adcb
cmp
test
mov
jecxz
nop
pop
push
lahf
adc
out
add
mov
xchg
jae
rorb
xchg
mov
test
xchg
or
pop
mov
lea
mov
int
push
js
sub
xor
das
icebp
orl
popa
test
and
ds
out
test
movsl
and
cmp
mov
lea
sarb
adc
or
lea
inc
loop
jmp
icebp
out
cmp
lock
test
cmpsb
xlat
cld
cmpsb
out
jl
gs
call
sbb
pop
push
dec
ret
iret
pop
les
pop
addr16
sbb
pop
jg
pop
ss
shll
dec
add
push
int3
gs
das
and
mov
dec
sub
fcom
mov
xchg
test
xlat
daa
and
adc
cmpsl
mov
inc
mov
xchg
les
adc
fistps
std
out
arpl
mov
xor
in
jmp
inc
jl
xchg
lods
jae
sar
and
clc
aaa
dec
mov
sub
jns
mov
push
xchg
lock
stos
vmread
xchg
mov
and
imul
sbb
iret
mov
jo
fs
clc
xor
adc
out
mov
clc
divb
cli
jb
arpl
imul
sbb
jle
cmpsb
xchg
ljmp
push
adc
jp
pop
mov
mov
les
fs
push
loopne
mov
insl
adc
dec
xchg
cmpsb
cs
cmp
mov
aam
imul
and
stc
imul
mov
push
dec
and
add
movsb
push
mov
stos
pop
or
inc
push
lret
clc
outsb
dec
pop
mov
add
imul
mov
push
ret
xchg
out
mov
xor
push
scas
sti
cmp
addb
jmp
int3
jg
lahf
lret
jns
jnp
ljmp
xor
test
sbb
sbb
loopne
adc
data16
cmp
adc
cmp
sbb
xchg
inc
pop
loope
inc
inc
cmp
sbb
mov
dec
or
insl
cmp
inc
std
in
inc
arpl
loopne
pop
cmp
pop
and
cmpsb
mov
cmc
call
adc
and
scas
push
leave
fcoml
shrl
out
pop
gs
push
sbb
decb
out
or
mov
mov
shll
adc
add
stos
aad
or
sti
cmp
daa
lods
mov
outsl
jae
mov
jnp
dec
out
or
xorb
ret
insb
scas
int3
add
xor
jecxz
inc
icebp
xor
call
js
add
and
addr16
test
ret
sub
jmp
cmpsl
sti
pop
sbbl
sbb
mov
jnp
out
iret
iret
mov
aad
pop
leave
cmp
sbb
jl
pop
mov
jno
andb
movsl
out
and
lods
cmpsl
test
dec
popl
addb
xchg
xor
or
xchg
repz
inc
adc
mov
mov
xchg
sub
jmp
pop
xchg
dec
rolb
nop
mov
mov
psrad
hlt
shll
scas
pop
loope
xlat
cs
pop
aaa
out
and
scas
scas
loopne
push
or
shlb
mov
xchg
mov
les
test
pop
and
fildl
je
movsl
out
test
shlb
jmp
sub
mov
gs
hlt
jae
int
push
xor
pop
mov
std
loopne
dec
fs
cmp
lods
outsl
repz
and
cs
lds
and
popf
adc
fisubs
cli
jl
ret
add
cltd
jge
sbb
mov
nop
push
add
adc
add
add
adc
dec
mov
out
imul
cmpsb
addr16
fldenv
mov
mov
sbb
push
paddw
out
xor
cmpb
adc
movsl
imul
pop
xchg
mov
ret
les
sbb
jl
push
lock
add
mov
sbb
mov
js
mov
in
adc
imul
pop
jp
pop
xorb
negl
xor
push
sbb
ret
lahf
pop
mov
mov
negl
popa
es
xchg
jno
pop
test
loopne
ja
repnz
ret
pop
loop
push
cmp
sarb
lods
lea
xchg
sbb
dec
xor
inc
ds
fstpt
cmp
test
addr16
adc
dec
movl
or
mov
fwait
sbb
xchg
pushf
aad
lods
outsb
lds
leave
push
test
rcrb
es
mov
cmp
les
xchg
cmp
inc
inc
andb
xchg
pop
sub
imul
push
imul
or
out
pop
movl
rcl
sbb
mov
lods
iret
push
movsl
and
fisubl
adcb
mov
lock
xor
loope
fiadds
mov
jg
daa
inc
adc
mov
ret
lret
inc
pop
xor
das
daa
mov
xor
fwait
imul
aaa
sbb
adcb
mov
shlb
sbb
addr16
js
test
fisttpll
std
jecxz
xchg
push
dec
dec
leave
stc
or
lret
jge
fldcw
add
pop
cwtl
out
jle
aam
add
adc
and
ret
testb
and
lcall
sarl
and
leave
mov
int3
insb
sub
or
jl
ja
add
rolb
add
mov
sub
jb
dec
jge
mov
sub
mov
rcrb
ss
outsb
inc
shlb
and
xchg
push
xchg
push
push
cwtl
scas
xor
xor
pop
dec
xor
das
mov
out
adc
ret
mov
add
add
pushf
push
loope
insl
mov
mov
jmp
push
das
xchg
cli
xor
push
inc
xchg
jp
mov
mov
cltd
arpl
jnp
movsb
add
mov
jecxz
mov
leave
in
mov
sbb
shr
daa
sub
mov
adc
cmp
lods
jnp
out
xor
mov
dec
cmp
in
push
lods
pop
fcoml
jns
cmc
repnz
test
add
xchg
xchg
xchg
imul
sub
mov
icebp
adcb
fcoms
shlb
test
mov
mov
aaa
out
in
lcall
shrl
js
xor
test
cwtl
loop
iret
jmp
or
stos
sbb
les
sub
in
sbb
jecxz
mov
mov
jno
in
fnstenv
or
arpl
ss
add
mov
pop
sahf
pop
imul
pop
jmp
sbb
add
push
adc
mov
fwait
jbe
jb
xchg
mov
aas
aam
fildll
ret
push
stos
je
mov
adc
mov
xchg
jae
pop
sub
call
mov
push
jp
jb
lds
mov
cmp
mov
or
rcrl
mov
sarl
cmp
insb
push
aad
inc
rcll
bound
mov
mov
cmp
loopne
xchg
mov
dec
push
sbb
inc
dec
push
pop
loop
cld
cmpsb
mov
jb
test
push
je
lods
cltd
fldl
movsb
pop
aaa
mov
add
mov
mov
shlb
sarb
mov
fwait
aam
and
inc
inc
sub
pop
inc
inc
lock
aaa
ljmp
shlb
ret
cmpsb
std
pop
or
mov
jae
mov
sbb
leave
jne
imul
neg
fdivl
dec
cmp
data16
xchg
xchg
jg
cmpb
mov
test
or
inc
sbb
mov
xor
push
pop
lret
je
inc
adc
rolb
es
mov
lcall
sbb
push
movsb
jns
inc
jge
dec
lock
push
pop
mov
inc
lahf
mov
add
icebp
shrl
adc
aaa
pop
push
in
mov
mov
push
loope
jo
add
clc
shlb
stc
push
popf
clc
cmp
mov
cwtl
test
inc
insl
repnz
pusha
cs
iret
xor
push
popa
push
jo
lods
jmp
cltd
jae
aam
inc
lds
outsb
in
cmp
fisubrs
xchg
dec
mov
inc
aas
adc
lods
aas
test
dec
out
push
lret
inc
adc
pop
int
sbb
cmpsl
mov
lahf
pop
scas
leave
jle,pn
daa
dec
fdivs
sub
xchg
sub
jp
in
lret
jo
js
pop
in
sub
scas
lcall
mov
xchg
mov
loop
inc
sub
xchg
mov
add
dec
int
mov
pop
mov
mov
mov
dec
fldl
pop
or
add
sbb
repnz
jle
imul
imul
insl
push
into
cwtl
loop
mov
xchg
addr16
movsl
out
xchg
xor
imul
sub
dec
popa
sub
sbb
cmp
xchg
mov
xor
je
mov
pusha
pop
daa
pop
rclb
enter
mov
push
stos
pop
jmp
or
popa
jnp
sub
je
dec
test
jge
pop
sarl
sub
js
xchg
xor
add
or
test
into
sahf
cmc
in
or
push
mov
in
fistl
dec
inc
test
test
jb
or
loope
dec
push
in
push
xchg
push
adc
je
mov
stos
pop
jge
ss
and
or
add
scas
jo
inc
dec
icebp
lock
sbb
mov
add
loop
aad
popf
pop
xor
push
push
data16
ds
mov
push
cld
fcom
and
sete
test
add
xchg
jl
aaa
rcl
std
fs
rolb
dec
mov
enter
pop
xor
in
jmp
aas
out
mov
scas
and
movsl
gs
sbb
mov
sbb
inc
bnd
out
jle
mov
imul
xchg
gs
andb
fwait
mov
cmp
les
pop
inc
or
dec
jb
xchg
sahf
mov
insb
xchg
fnstcw
dec
out
fildl
adc
ljmp
mov
stc
and
fcmovbe
mov
popa
sbb
jns
xchg
pop
jb
pminub
popa
mov
fiaddl
inc
add
xchg
in
ror
xor
sub
or
paddsw
pop
cmpsl
mov
call
push
and
sub
push
insl
or
adc
divps
xor
ficomps
or
pop
stos
push
push
cmp
fcomps
push
cmpsb
jge
je
mov
fldenv
push
adc
testl
imul
iret
fwait
dec
andb
ret
fbstp
or
inc
xlat
adc
push
pusha
shll
jle
add
stos
movzbl
mov
sbb
cmp
out
je
jns
sub
push
jae
cmpsb
push
mov
scas
xchg
scas
fwait
inc
fst
data16
pop
out
lcall
fdivrl
lret
dec
xchg
int
and
nop
mov
cwtl
jno
sbb
jb
cwtd
scas
sub
push
inc
cmc
sarb
loop
ret
lock
inc
mov
inc
loope
outsl
out
and
add
push
mov
xchg
xchg
push
sbb
adc
lea
jmp
push
into
mov
imul
mov
in
adc
ss
sbb
in
repz
dec
ss
adc
stos
or
adc
push
addr16
lds
int
sbb
xchg
adc
dec
cs
or
addr16
sahf
cmpsl
or
adc
sub
sti
add
shll
jecxz
stc
xchg
push
sbb
pop
inc
add
movsl
lret
mov
and
inc
and
lahf
pop
push
faddl
repnz
xchg
repz
jne
in
push
movsb
test
xchg
cmp
dec
repnz
push
add
push
test
mov
dec
loopne
mov
sbb
add
lods
fsubrl
ja
out
outsb
jo
lret
xorb
push
jle
push
imul
sbb
and
xchg
sahf
mov
push
pop
dec
stos
and
and
popa
imul
pop
adc
bound
mov
xchg
inc
jl
imul
adc
sub
push
mov
dec
push
movsl
add
push
jae
lahf
dec
jl
inc
pop
out
in
lock
sahf
ds
ret
addr16
stos
repz
push
shrl
pop
mov
adc
lods
jmp
xchg
add
fwait
inc
adc
stc
inc
push
lcall
das
lds
push
loope
mov
insl
dec
mov
sbb
mov
lcall
mov
jmp
mov
shll
pop
iret
or
fxrstor
mov
pushf
pop
adc
xor
jo
incb
push
insl
stos
xor
inc
cmp
leave
hlt
mov
ja
sbb
pop
std
sbb
jge
or
mov
fisttpl
or
mov
mov
cmp
in
lahf
sar
xor
das
xlat
jo
mov
out
std
jge
insl
push
sbb
sbb
aaa
add
sub
dec
xchg
sahf
xchg
xlat
pop
or
dec
pop
jl
mov
pop
and
sub
les
lret
mov
inc
fstl
scas
addl
stos
push
int3
fwait
sbb
adc
pop
pusha
or
pop
lret
push
sub
fbstp
push
lods
sbb
popa
loopne
lock
arpl
out
ja
jae
lods
xchg
loop
pop
aam
shrb
test
bound
loop
add
pop
outsl
cmpsl
push
add
mov
mov
mov
mull
mov
pop
cmc
out
lea
outsl
fisttpll
xor
scas
mov
int3
cmp
sarl
fxch
daa
cs
and
lea
dec
mov
incl
dec
adc
scas
jb
pushf
cmp
jg
and
jg
or
inc
pop
push
jmp
fldt
int
loopne
adc
fstps
rcrb
pop
or
inc
fsts
xchg
adc
sbb
cmp
fisubrl
lcall
xchg
loope
xchg
lock
fiadds
addb
and
jb
pop
xor
push
gs
data16
cmp
cmc
cmp
mov
pop
jne
inc
sub
or
dec
pop
jle
mov
bound
out
jae
and
ljmp
repnz
nop
sbb
loopne
cmpb
popf
xchg
or
and
repnz
xlat
imul
out
popa
and
shl
cwtl
es
leave
and
sbb
nop
mov
push
add
adc
dec
xchg
movsb
mov
mov
inc
jb
popa
lods
pop
mov
dec
test
mov
adc
inc
ljmp
lods
fistpll
push
int3
shrb
jle
inc
lods
ja
xchg
wrmsr
add
stos
hlt
incb
cmp
testl
fbld
test
clc
outsl
cmp
sti
mov
xor
dec
and
out
fidivrs
sbb
sbb
push
imul
sti
xor
push
xor
gs
inc
int3
sbb
insl
sbb
xor
add
cld
jns
js
scas
incb
mov
test
lcall
in
mov
mov
dec
fidivrl
mov
mov
dec
pop
pop
adc
lods
shlb
mov
call
in
pop
sbb
scas
data16
and
lods
out
in
lret
lret
push
mov
stc
mov
lret
inc
jne
mov
mov
cmp
fcmovne
das
jecxz
imul
test
push
jecxz
jmp
lret
fcmovnb
mov
mov
in
pop
and
xlat
xchg
xor
push
jmp
sahf
mov
ljmp
ret
mov
xor
sub
push
bound
mov
cs
pop
xor
test
xor
adc
in
or
sub
js
into
leave
repnz
or
es
icebp
add
lcall
sub
je,pn
enter
push
dec
dec
scas
or
lahf
mov
sbb
xchg
mov
cli
jl
mov
dec
mov
adc
shrb
push
and
outsb
jge
or
hlt
sbb
out
or
test
test
enter
fmull
xor
mov
std
loop
jb
sahf
pop
add
mov
out
sti
orl
inc
addr16
incl
faddl
lock
adc
dec
decl
jp
loope
jo
push
cmpsb
cmp
xchg
sub
iret
fs
fwait
adc
inc
cmp
mov
dec
or
adc
xlat
mov
mov
cmp
out
in
mov
push
mov
das
call
sub
or
push
test
and
iret
arpl
sbb
ds
pop
in
push
pop
sub
push
sub
out
sahf
cmp
in
jge
push
inc
jg
cmpl
mov
pop
cs
add
inc
inc
pop
mov
xchg
sahf
mov
enter
adc
lods
inc
jnp
aaa
sub
fdivl
andb
mov
stos
data16
push
cmp
testb
xor
imul
lds
fisubl
sti
pop
aam
push
cli
lcall
pop
mov
sbb
aad
lcall
test
xchg
jno
enter
jmp
sbb
pop
jp
sbb
or
hlt
clc
out
popa
lahf
jne
inc
inc
xor
cmc
sub
lods
xchg
cld
call
movsl
pop
jbe
xor
xchg
insb
cld
leave
mov
push
add
xor
in
ljmp
sbb
and
push
addr16
inc
adc
repz
jge
xor
xchg
lret
xchg
mov
aad
aad
ror
mull
adc
xlat
lcall
sub
in
daa
sub
lock
lock
addl
push
xlat
daa
shrb
popf
ret
mov
adc
fwait
scas
push
dec
xchg
test
leave
filds
insb
cmpsl
icebp
adc
and
xlat
sbbb
xchg
scas
loope
pop
pop
sahf
mov
hlt
sbb
into
or
decl
jb
add
gs
inc
outsl
lea
pushf
xchg
cmp
aaa
std
and
inc
stos
xor
push
cmp
aas
stos
test
es
lods
pop
aam
clc
flds
xchg
lock
cs
sti
mov
scas
xchg
and
imul
push
mov
outsb
out
jbe
cli
jae
sbb
fistpll
dec
lea
mov
enter
mov
xor
jb
mov
js
mov
inc
imul
outsl
push
adc
inc
je
popa
mov
jne
sbb
push
mov
add
dec
hlt
fcomp
aam
bound
ret
push
cmp
ja
leave
outsb
test
shrl
es
inc
or
and
mov
in
test
add
mov
jle
cmp
and
ror
pop
into
mov
fidivs
xorb
mov
xchg
mov
pushw
data16
adc
ljmp
jmp
dec
popf
insl
xor
mov
pusha
mov
cli
push
lds
mov
loopne
mov
mov
cwtl
push
popa
insb
sub
mov
int
cld
stc
cs
loope
add
cltd
dec
cs
mov
neg
cld
lods
add
adc
adc
ja
popa
in
cs
cmp
jns
sbb
aam
push
std
inc
jmp
rclb
adc
mov
dec
cs
sbb
adc
pop
hlt
les
dec
add
sub
pop
imul
out
adc
xor
repnz
mov
adcl
loop
add
sub
cmp
call
sbb
ss
xchg
push
les
mov
jb
xchg
nop
jno
test
cmp
mov
xchg
insb
test
jae
ds
or
pop
lcall
lret
xor
jno
fwait
pop
mov
xor
out
fwait
or
fldl
inc
add
xchg
mov
adc
and
or
popa
adc
xchg
in
pop
sbb
jnp
dec
inc
and
pop
test
sub
mov
mov
hlt
or
cmpsb
jp
push
mov
dec
jb
pop
mov
std
cmp
cs
cltd
aam
dec
adc
in
scas
dec
xchg
je
and
gs
lahf
cmp
lea
jg
and
roll
xor
movsl
cmp
mov
les
add
xchg
xchg
push
lret
and
shl
rdpmc
sbb
sub
xor
dec
ds
pop
xor
enter
push
lahf
mov
mov
lods
jp
in
dec
and
push
cmpsl
std
jle
push
arpl
fsub
jg
inc
adc
push
mov
sahf
jb
fdivrs
push
pop
pop
ret
push
add
inc
dec
bound
or
mov
cmpl
stc
loopne
mov
aas
cmp
sbb
popf
clc
xchg
pop
ja
adc
mov
std
enter
dec
mov
jae
and
sahf
xor
nop
sub
fstl
push
sbb
cmovbe
scas
lahf
sub
std
cwtl
sbb
shl
arpl
mov
xor
mov
jmp
xlat
popa
scas
cmc
ret
gs
cmp
xchg
imul
push
lahf
or
stos
notb
les
lahf
add
sub
out
dec
inc
std
add
jns
ja
loope
pop
lcall
fsubrp
stos
notb
enter
adc
jmp
add
xchg
es
jle
ficompl
push
and
aas
arpl
xchg
movsl
jno
jae
cld
hlt
std
mov
jns
pushf
mov
push
cmp
roll
testb
push
inc
das
xchg
daa
xchg
xchg
mov
out
mov
or
mov
adc
push
pushf
and
fucomi
movb
call
orl
test
fs
fldcw
dec
dec
mov
pusha
test
pop
repz
test
ds
gs
cmpsl
xchg
bound
ret
xor
mov
cmp
icebp
mov
shl
xchg
sti
shrl
xor
lds
sbb
mov
btr
pop
add
push
mov
imul
loopne
iret
inc
jno
push
adc
xchg
enter
pop
xchg
add
inc
mov
inc
test
push
out
sti
adc
jg
jo
or
imul
dec
adc
sub
sti
push
in
push
rclb
push
int
or
in
out
jle
daa
dec
push
or
mov
pop
fbstp
sbb
xor
mov
lds
shr
pop
push
lock
lret
xor
es
outsl
repz
into
fstl
push
sub
lahf
sahf
aam
inc
sti
imul
jle
mov
lods
jno
xchg
inc
add
rol
add
add
mov
leave
cmp
scas
into
dec
sbb
inc
mov
cmp
xchg
out
data16
mov
inc
out
loopne
fcompl
mov
sub
fdecstp
rolb
rclb
xchg
ss
sub
mov
dec
out
std
das
addr16
rclb
cli
out
and
test
xchg
jg
or
and
int3
or
cmpsb
mov
roll
mov
lahf
pop
cmpsb
inc
aad
hlt
xchg
push
xchg
in
pop
pushfw
icebp
gs
leave
imul
ret
sbb
xchg
adc
mov
scas
cmpsl
push
push
sbb
and
adc
and
shrl
lret
je
pop
push
xchg
mov
mov
push
imul
dec
mov
out
sbb
hlt
sub
push
inc
lods
int3
sbb
mov
xor
jge
lahf
cmp
mov
or
popa
and
and
xchg
inc
ds
repnz
pop
jnp
je
repz
sbb
jne
lret
fs
push
inc
mov
sbb
mov
lock
pop
andb
mov
mov
dec
outsb
popa
jp
pop
leave
loopne
add
out
rcll
inc
jge
inc
cmp
jo
sbb
pop
aas
jno
pop
jmp
ljmp
hlt
dec
jp
add
inc
addw
push
mov
pop
cmp
fiadds
cmc
out
stc
test
mov
rclb
mov
xorb
into
jnp
insl
ret
jb
and
mov
inc
jle
pushf
jne
dec
stos
cmc
fiaddl
jns
movsl
push
adc
andb
and
pop
rcll
jbe
mov
cmp
lds
pop
movsl
es
dec
mov
cmp
dec
jmp
ret
sub
mov
sti
lret
and
mov
jns
aad
dec
shlb
inc
ss
je
lea
jmp
adc
aaa
jl
mov
mov
pop
lds
xchg
and
out
test
jne
sahf
and
cmp
pop
mov
lahf
xchg
imul
fs
shl
loopne
xchg
insb
inc
pusha
xchg
add
or
icebp
dec
push
and
dec
lret
aam
push
movsl
dec
jmp
cmpsl
cmp
leave
test
jp
je
sbb
rclb
mov
or
lods
pushf
jae
inc
add
and
jmp
push
mov
mov
out
sub
rcrl
div
jecxz
and
dec
jmp
adc
je
adc
pop
cwtl
push
inc
or
fldl
mov
push
out
lods
scas
push
push
add
icebp
add
jg
out
dec
jmp
cs
dec
out
jo
mov
addb
sbb
nop
inc
xchg
sub
mov
outsl
jmp
out
cmp
pop
mov
mov
addl
mov
adc
mov
xchg
pop
mov
scas
lock
stos
in
jle
fnstenv
std
sub
or
mov
pop
sbb
sbb
in
outsl
sub
adc
dec
in
jp
dec
dec
iret
mov
or
xchg
mov
add
jnp
xor
fimuls
lds
mov
mov
cmp
push
cmp
outsl
jmp
mov
aaa
movsb
lods
sbb
xor
ljmp
hlt
mov
mov
dec
fwait
loopne
xor
pop
ret
sahf
stos
lret
decb
mov
jns
mov
repz
mov
loopne
xchg
lret
sti
jns
dec
out
sbb
sbb
sub
mov
inc
fs
push
out
call
and
std
pushl
pop
sub
or
fsubs
jne
xchg
ror
mov
movsl
data16
out
pop
dec
insb
out
les
sbb
push
jb
stc
fsubs
shll
inc
xor
mov
repnz
mov
mov
cld
mov
loop
leave
and
sub
xchg
enter
cmpsl
dec
orb
out
sbb
and
inc
push
and
mov
pusha
pop
nop
inc
sub
shrl
ljmp
sbbl
cltd
lds
leave
test
repz
push
fcomps
mov
inc
jno
or
sbb
idivb
cwtl
pushf
lods
in
inc
gs
scas
inc
call
out
loopne
jne
in
ss
pop
fwait
aas
ja
fnstsw
loop
imul
mov
aas
cmp
out
lret
xchg
das
dec
push
mov
cld
push
mov
or
xchg
and
xor
or
add
loop
imul
sub
lea
adc
test
sub
xchg
jb
push
movsb
or
in
fsubrs
lahf
sub
cmp
daa
ret
gs
imul
inc
pop
add
push
jge
jno
and
out
push
hlt
xchg
cmp
lods
mov
sbb
fsubrs
sar
in
pop
jne
xchg
scas
adc
mov
loopne
mov
jmp
jg
cmp
lret
notb
ror
jne
daa
lods
cmp
xor
jle
mov
orl
fs
push
mov
add
fwait
test
cmpxchg
mov
paddsb
rcrl
pop
inc
add
mov
cmp
test
mov
xchg
xor
into
aas
and
test
pop
int
or
test
inc
sbb
fs
scas
movsb
sbb
addr16
and
cmp
dec
fdivs
inc
sub
push
sub
inc
push
xchg
jno
int3
cmpsl
mov
xor
nop
sti
mov
aad
inc
adc
xchg
stos
push
mov
push
fists
sbb
pop
data16
mov
pop
mov
jmp
sbb
repz
jmp
enter
inc
fidivrs
std
add
ds
mov
and
call
cmpb
sub
jb
fcompl
sbbl
and
lahf
fbstp
push
xor
sbb
mov
sbb
out
movsl
pop
dec
ds
mov
sbb
pop
lret
cli
fldenv
incl
dec
push
or
and
inc
movsb
mov
scas
imul
push
ja
adc
je
cmc
or
pop
dec
sub
test
lods
insb
mov
std
loope
fstpt
ficomps
cmp
scas
and
outsb
jbe
loopne
adc
lret
jecxz
fdivr
inc
dec
loopne
xlat
jb
popa
xchg
jns
mull
rorl
push
xor
push
leave
adc
mov
pop
ljmp
and
push
inc
pop
jns
js
sahf
std
insl
enter
insl
xor
das
lods
adc
scas
enter
jl
pop
stos
fxam
insb
push
mov
loopne
add
mov
sbbb
lahf
cmpsb
xchg
shrb
pop
dec
mov
js
dec
sub
pop
cmp
pusha
enter
pop
sbb
jp
mov
mov
imul
jne
xchg
repz
pop
movsl
jb
cltd
test
sub
push
out
xor
ss
add
cmp
lock
sub
sbb
fnstsw
jl
adcb
into
or
bound
movsb
jae
sbb
pop
mul
push
fisubs
ret
and
add
mov
out
cmp
cwtl
scas
push
inc
jecxz
dec
in
adc
fs
cmpsl
repnz
jae
mov
sbb
daa
popa
push
les
sti
icebp
sbb
notl
mov
arpl
inc
pop
mov
mov
test
xchg
or
inc
ret
push
xor
repnz
out
std
jge
pop
lds
mov
mov
dec
add
shl
test
or
and
sbb
mov
sbb
add
add
sub
mov
jl
cmp
rclb
mov
sub
jg
cli
lea
ret
jl
out
inc
and
mov
pop
addl
lock
dec
fistps
mov
push
jne
adc
stc
popf
mov
int
fcmovu
cmpsl
std
and
enter
kmovw
lret
push
ja
jae
movsl
mov
dec
lea
add
push
push
pop
sbb
insl
cmpsb
jne
sarl
adc
and
or
test
ljmp
or
and
add
movsl
adc
pop
pop
div
pusha
movb
push
or
and
jle
sbb
cmpsl
repnz
mov
fiadds
push
out
out
jnp
mov
lea
mov
xchg
popa
shrb
sub
cmp
aas
popa
adc
add
xlat
lock
sub
into
pop
sbb
ljmp
cwtl
xor
mov
pop
std
ds
cmpl
lea
add
xor
xchg
mov
daa
repnz
cmp
xchg
cmp
dec
mov
mov
aad
sbb
inc
das
hlt
icebp
jnp
mov
loope
jno
jns
sarb
or
or
mov
int3
pop
add
scas
xor
xchg
sbb
mov
sbb
jmp
jo
mov
fstpl
pop
lods
je
lods
sbb
inc
cwtl
out
xchg
insl
dec
sub
es
into
ret
inc
lods
mov
imul
sbb
sbb
xchg
scas
ret
cwtl
test
shrl
shll
dec
lahf
test
mov
aad
mov
test
insb
mov
jno
das
les
jge
or
fidivs
mov
mov
add
mov
pushf
push
adcl
mov
sbb
jg
mov
push
daa
dec
mov
or
mov
and
mov
sbb
sub
clc
push
mov
push
mov
in
jmp
inc
ljmp
dec
sub
inc
sub
popf
imul
jns
fldcw
xadd
xor
jp
lea
test
pop
popa
pop
rcll
fidivl
adcl
shrl
out
shrb
je
leave
jecxz
test
fldt
ret
xchg
push
sbb
pushfw
sbb
mov
rep
aad
andb
sbb
sbb
xor
ret
adc
xchg
rcr
cmpsb
out
arpl
ret
and
jbe
jo
popf
movsl
mov
mov
jg
mov
in
inc
xor
out
add
jae
jae
jnp
mov
xor
jns
push
fidivs
dec
repnz
pop
dec
push
outsb
push
and
push
inc
iret
sbb
lahf
movsb
fs
icebp
mul
js
xor
mov
mov
stos
stc
filds
dec
dec
pop
outsb
test
aam
fidivrs
loopne
adc
mov
mov
mov
mov
arpl
cmp
jae
mov
mov
xor
subb
mull
sub
fimuls
loopne
cmpsl
or
cmpsl
pop
adc
in
mov
dec
les
subl
add
add
or
and
outsb
lea
cmp
ret
dec
pop
xor
inc
and
shlb
mov
and
mov
gs
in
adc
out
xor
jge
xchg
fs
pop
je
lds
xchg
push
imul
mov
push
xorb
cmp
push
sub
lods
adc
test
out
mov
lcall
pop
mov
in
push
loope
ss
pop
cmc
es
ljmp
das
icebp
cs
out
into
pop
xor
jae
cwtl
cltd
lds
ss
test
xchg
das
cmp
sbb
fsts
aad
sub
pop
push
aad
or
xor
sbb
mov
jae
loope
test
or
rcl
dec
nop
andb
data16
push
push
pop
jbe
leave
lcall
cmpsb
mov
imul
push
xor
xchg
leave
mov
fucomp
mov
clc
not
cmpsl
loopne
lods
and
push
leave
xor
mov
stc
or
sbb
add
push
add
in
xrelease
fisubrs
pop
ret
adc
enter
jle
sub
dec
xchg
cs
mov
dec
dec
mov
mov
mov
int
mov
movsl
icebp
mov
push
nop
es
outsl
pop
pop
dec
and
pop
lods
jge
inc
insl
xchg
push
or
jns
hlt
cmc
scas
out
faddl
mov
pushl
sub
stc
xchg
ljmp
xor
inc
xchg
jp
cmp
cmp
xlat
in
ret
cmp
mov
rcrl
push
sub
jno
sub
mov
aad
push
loopne
xor
cmpsl
andb
lock
jle
roll
test
arpl
mov
jg
addr16
mov
fcomp
scas
dec
push
mov
mov
add
data16
in
and
jb
dec
add
jne
test
mov
andb
jecxz
sbb
xorb
sub
add
mov
jb
cmp
pop
push
inc
mov
mov
push
sbb
aaa
aam
bound
out
std
pop
pop
xor
sti
and
dec
or
inc
or
sbb
rorb
mov
cmpl
and
cmp
jmp
xor
pop
and
pusha
jae
cli
mov
stc
sti
lock
rorl
adc
rcll
fxch
xchg
sbb
sub
dec
lea
or
pop
test
or
cld
data16
and
addr16
loope
call
xchg
jp
sti
sub
dec
sbb
movsb
pop
mov
fcoml
rcr
push
cmc
iret
es
and
mov
scas
fcmovbe
mov
adc
test
xchg
mov
je
jne
sbb
fnstsw
loope
mov
xlat
add
xor
lcall
jae
in
sub
adc
dec
mov
int
mov
es
testl
clc
in
push
mov
cmp
enter
fiadds
jmp
add
ja
mov
xorb
aad
insl
fdivrp
les
repnz
mov
aaa
arpl
fs
xchg
movsl
add
fidivrl
xorl
faddp
pop
add
pop
fcmovne
mov
loopne
lahf
stc
stc
cli
jns
imul
arpl
xorb
rcl
mov
cli
je
aam
ficompl
out
push
xor
out
fwait
mov
push
movsl
out
rclb
xchg
sub
jecxz
out
insb
test
xchg
and
sti
fstpt
xor
cmp
push
std
jae
ss
aas
push
in
test
cld
dec
pop
addr16
cld
jno
ljmp
push
inc
out
mov
mov
shll
pop
sbb
jne
leave
pop
cmp
pop
int3
push
inc
jg
inc
movsb
xchg
repz
arpl
fdiv
mov
jns
arpl
xchg
xchg
pop
pushl
mov
dec
mov
cld
pusha
sbb
std
mov
xor
xor
das
loopne
mov
sub
pushf
push
clc
and
loop
mov
outsb
sbbb
jae
add
push
jecxz
loop
lods
jo
sub
cwtl
in
mov
cmp
sti
sub
sbb
pop
imul
sarb
inc
jecxz
sbb
cmp
pusha
out
lods
inc
inc
add
mov
inc
cmp
sahf
cmp
mov
test
or
xchg
ret
rcll
xchg
popa
xlat
pop
inc
nop
iret
in
dec
jmp
lcall
xchg
leave
pop
je
out
xor
sub
adc
fldenv
rorb
mov
out
mov
mov
jb
xchg
outsb
jp
addb
mov
push
addr16
icebp
xchg
dec
lds
cs
cmc
inc
cltd
xor
push
mov
mov
jecxz
fwait
mov
cmpsb
ret
mov
xor
ret
jb
pop
add
dec
mov
clc
mov
xchg
cmp
outsb
sub
mov
popa
popf
fninit
pop
aas
fwait
xchg
sbb
fcom
sahf
jne
and
xor
sahf
fimull
xchg
mov
inc
fsubrl
pop
xchg
cwtl
jno
jnp
and
inc
sub
inc
cli
dec
daa
xchg
pop
bound
jo
outsl
cmp
stc
fdivp
lea
lcall
repz
jnp
sub
and
mov
cs
pusha
push
inc
sti
add
mov
in
jmp
movaps
cmpsl
mov
movsl
out
add
jl
ret
in
mov
popa
cmc
cmp
dec
outsl
test
fmul
or
ret
ret
jg
sub
mov
fstpl
xchg
mov
mov
jnp,pt
adc
daa
adc
add
daa
sub
cwtl
outsl
dec
jb
ret
test
jne
adc
dec
mov
ljmp
pop
jle
sbbl
ret
mov
mov
or
mov
movl
mov
cltd
xorb
xlat
push
lea
sbb
mov
imul
dec
sub
pop
mov
jno
jno
lods
inc
cmp
test
push
mov
icebp
push
les
fcomi
cmp
ja
or
push
in
aas
adc
rol
pop
sbb
aam
pop
cltd
sbb
cwtl
pop
adc
mov
dec
xchg
push
fsts
lea
leave
adc
push
and
hlt
sahf
loope
and
js
xchg
mov
out
mov
aad
aas
fcomps
lods
addr16
sti
sbb
mov
cwtl
fidivs
lcall
jmp
add
push
aaa
jb
inc
sub
mov
push
cmp
cmp
test
outsl
lcall
or
fwait
clc
xorl
jbe
xor
mov
pop
push
jecxz
push
push
push
scas
mov
fidivs
aad
adc
popa
mov
and
cmc
out
fstps
cs
in
mov
call
fists
jae
in
scas
nop
arpl
and
xorb
or
pop
mov
mov
inc
jne
cmpsl
jecxz
mov
rcl
into
jbe
roll
out
pop
add
jle
cmpsb
rcl
fldl
add
gs
or
dec
xchg
sti
cmp
sub
jbe
imul
dec
in
push
shll
pusha
test
les
sub
pushf
cmp
inc
loop
aam
loopne
jge
and
and
and
pop
pop
inc
sbb
sbb
adc
fs
movsb
das
xor
stos
sti
rcrb
in
enter
or
stos
cmp
cld
xchg
xor
enter
add
adc
ja
adc
add
cwtl
sub
pop
jbe
dec
sti
test
aas
out
out
push
push
push
or
rcr
push
mov
std
pop
outsb
or
xor
mov
cli
sub
add
enter
push
and
mov
pop
mov
ljmp
int
sub
lock
xlat
jns
aad
repz
xor
adcb
fists
inc
cmpb
gs
adc
adc
xchg
lea
xor
out
aad
shll
dec
add
push
push
aad
movntps
or
imul
jne
idiv
loop
add
js
jns
jbe
cmpxchg
lock
inc
xchg
into
outsb
negb
lods
int
mov
ss
enter
cmp
push
test
sbb
or
popa
dec
add
jo
jbe
lret
cmp
sti
pop
xor
xor
xlat
das
and
outsl
shlb
lock
jg
mov
repz
sub
fimull
je
dec
fildll
sti
sub
mov
cmpsb
aad
sbb
push
sub
push
xor
cltd
jp
xchg
loopne
pop
xchg
stc
rcrb
pushf
pop
flds
sbb
scas
aam
pop
mov
mov
lret
fnstenv
jae
js
mov
cmp
cmp
add
jbe
jne
aad
pop
pop
inc
jae
jl
out
jp
mov
and
addl
push
cld
out
and
cmp
add
sub
imul
mov
repnz
fdivs
sar
sub
push
rcr
add
rcll
les
outsl
push
xchg
sar
outsl
daa
cmpsl
cmp
mov
daa
wrmsr
inc
jmp
subb
xchg
mov
jbe
notl
add
stc
cmp
aad
push
cltd
subl
clc
mov
lret
add
in
mov
fnsave
mov
cmc
repnz
dec
test
aam
aam
pushl
cmpsb
pop
mov
or
fisubrs
xor
cwtl
mov
aam
push
pop
jno
push
xor
jnp
jno
add
mull
stos
and
mov
loope
out
dec
and
shl
inc
mov
add
das
lret
loop
push
fstl
pop
sbb
imul
dec
inc
aam
lret
repnz
enter
mov
cld
out
sbb
insb
push
enter
push
xchg
mov
ljmp
push
popf
jg
lods
pop
fmuls
out
and
xchg
sahf
divl
xor
fsubrs
inc
pop
dec
mov
and
cmove
xor
xor
cmp
add
mov
inc
or
or
push
test
mov
jb
call
push
incl
rolb
lret
xlat
aam
mov
push
stos
push
mov
sub
cwtl
fdivl
movsb
pop
xor
mov
jg
cmp
jne
sahf
mov
xchg
lods
sahf
lods
repnz
dec
cmp
pop
dec
adcb
ja
divb
jl
test
xor
pop
cs
mov
dec
shrb
adc
mov
mov
cmp
fdivs
ds
loopne
movsb
lret
cld
fcomip
add
sub
push
inc
sub
push
mov
inc
loope
int
push
or
dec
and
outsl
inc
xchg
cld
and
sahf
jbe
mov
rolb
loope
arpl
lcall
xchg
das
xor
mov
sub
outsb
in
adc
dec
jle
fwait
jnp
test
fisttpl
leave
cmc
mov
mov
cmp
mov
stc
xor
or
mov
loope
sub
lret
xor
lods
mov
dec
fsubl
insl
push
in
sbbb
sbb
mov
push
out
inc
push
cmp
lcall
push
outsb
rclb
or
pop
xor
in
mov
jmp
or
jge
ficoms
add
mov
push
or
xchg
pop
jno
jp
int3
and
in
or
mov
jne
jae
out
fldl
pop
xor
xchg
push
add
arpl
lods
adc
lret
jp
enter
leave
xor
jmp
add
cmp
stc
mov
and
cmp
pop
ljmp
es
test
into
pop
mov
or
cld
push
cli
mov
sub
aas
stc
push
jnp
and
inc
out
loopne
test
add
inc
aas
or
mov
mov
push
jnp
cmpsl
aaa
in
jae
out
dec
xchg
jbe
and
or
and
pop
popf
pop
ret
pop
in
gs
add
sbb
je
mov
cmp
ja
hlt
pop
testb
iret
sbb
mov
loope
mov
lahf
push
mov
or
mov
ljmp
out
orb
mov
scas
jg
or
or
cmpsl
pop
inc
call
sub
lahf
mov
inc
je
add
adc
sar
dec
mov
inc
minps
inc
sub
sahf
gs
mov
lods
pop
or
cmpsl
lahf
dec
ss
es
mov
sub
dec
cmp
std
or
lock
shlb
inc
adc
jno
imul
push
jne
inc
arpl
lock
mov
rol
stc
cs
inc
inc
cmp
pop
sub
jp
xor
pop
test
xor
stos
test
in
fwait
mov
dec
mov
ja
jo
push
pop
lret
hlt
or
lods
xchg
mov
jmp
int
cmp
add
mov
outsl
pop
jge
or
lcall
cs
aas
sbb
add
push
jmp
add
daa
mov
mov
cmpsb
mov
fisttpll
cmp
lods
stos
mov
inc
sbb
test
pop
andl
fstps
push
lock
and
push
pusha
adc
inc
xchg
cs
jno
loop
sti
xchg
mov
rol
add
scas
int3
mov
jecxz
dec
mov
ror
add
aad
push
aam
sub
aas
imul
sbb
cmp
mov
push
jo
sub
add
or
aaa
sbb
or
flds
subb
mov
test
cwtl
ret
gs
pop
add
negl
test
pop
cld
repnz
jb
out
ljmp
add
push
sbb
mov
xchg
push
jl
in
or
ds
push
clc
sbbb
mov
push
fstpt
mov
fsubs
mov
add
or
filds
call
jmp
jne
pop
xchg
mov
xor
mov
sub
lock
mov
scas
push
in
scas
add
mov
mov
and
xchg
adc
xor
mov
mov
mov
inc
xchg
mov
push
push
sub
xchg
hlt
xchg
shl
ds
notl
mov
mov
lcall
cmpsb
push
mov
icebp
jl
ret
shll
shlb
cmp
rcrl
aam
mov
mov
xor
fwait
xchg
or
mov
inc
aam
fdivrs
push
aaa
jb
sbb
mov
daa
jnp
lock
add
adc
lret
imul
repz
add
bound
icebp
sbb
adc
cmp
xchg
and
or
mov
mov
in
add
fadds
pop
cmp
sarl
adc
rcrl
mov
sahf
push
test
xor
pop
in
stc
mov
cmp
xchg
mov
enter
push
das
cs
mov
cs
mov
leave
in
pop
inc
outsl
xor
mov
add
in
insb
inc
fistps
mov
dec
lret
fxam
addr16
or
pop
lea
push
push
lock
jecxz
icebp
pop
and
push
add
mov
leave
mov
and
jae
es
cmp
mov
push
pop
cmp
or
sbb
cwtl
imul
loope
nop
push
or
push
cmpsl
adc
add
pop
jg
mov
adc
pop
int
lea
sbb
xchg
inc
mov
std
jge
mov
sarb
ret
fisubrs
lods
xor
adc
ds
rorb
push
hlt
sbb
add
mov
ss
jns
mov
add
icebp
aad
daa
int3
iret
lahf
sbb
movb
push
test
mov
lds
xchg
inc
xchg
in
lahf
sbb
jno
scas
cli
jnp
cmpsl
hlt
mov
xchg
xchg
rcr
mov
popf
and
repz
adc
stos
div
out
xchg
pop
in
push
mov
cli
inc
jp
test
mov
push
adc
xchg
sti
mov
loop
movsl
mov
dec
push
xor
and
cmp
cli
fisubrs
adc
push
jno
mov
pop
mov
pop
clc
loop
shlb
test
jge
cld
aas
stc
sbb
jp
push
or
mov
cmp
jbe
pop
scas
adc
and
stos
pop
add
inc
stos
sbb
jmp
loop
stos
dec
rolb
cmp
scas
js
aaa
xchg
mov
push
test
mov
mov
mov
cmpsl
mov
es
les
and
shlb
jo
push
insl
cmpsl
icebp
into
sub
loopne
mov
dec
scas
es
jb
mov
imul
pop
xchg
mov
cmp
ret
mov
fwait
dec
cmc
mov
push
subl
scas
sbb
cmp
sub
push
pop
sahf
cmp
or
add
pushf
mov
xorl
pop
adc
jecxz
lahf
fsubrs
fdivs
inc
sbb
pop
dec
into
mov
js
push
xorl
sub
sub
adc
lea
xorb
dec
xor
mov
mov
es
lahf
call
popa
jp
stos
js
adc
and
jmp
ljmp
enter
dec
scas
pop
xchg
inc
je
fcmovnb
mov
mov
rolb
sbb
sub
movsb
loop
inc
int
fcmovb
pop
xchg
mov
test
fldcw
sbbb
xor
shrl
or
inc
inc
mov
pop
add
fimull
dec
sbb
stc
pop
sbb
push
aas
sti
pop
dec
pushl
clc
loop
orl
add
or
pop
jbe
test
sbbl
cmp
shlb
push
cmpsl
mov
push
inc
sbb
mov
sbb
ret
pop
std
push
xchg
jg
mov
cmp
mov
fdivr
dec
pushf
pop
mov
mov
lock
mov
xor
push
dec
fsubs
jle
out
fnstsw
xchg
inc
sub
jo
inc
and
push
fildl
push
insb
loope
mov
xor
mov
dec
ret
adc
lds
sub
mov
lcall
inc
inc
push
movsl
das
cmp
aaa
push
imul
xor
dec
cmpsl
push
cmpsl
or
loopne
inc
push
stos
xor
mov
xchg
and
add
leave
out
mov
pop
and
adc
aas
sbb
pop
imul
add
in
pmuludq
pushf
and
js
mov
bound
pop
push
test
push
jl
pop
adc
stc
xchg
stos
adc
cmp
je
mov
mov
loopne
imul
gs
mov
xchg
faddl
test
xchg
and
insb
nop
pop
fwait
cltd
xchg
nop
fildll
xchg
pop
sahf
lods
mov
cmpb
add
dec
les
and
sub
fwait
sbb
mov
pop
jne
mov
adc
sbb
bound
push
jnp
lcall
insl
jp
out
push
nop
call
dec
or
hlt
xchg
enter
aaa
pop
outsl
popf
jmp
and
jno
push
add
mov
jl
sub
jl
mov
imul
lods
in
mov
shll
out
out
mov
in
scas
or
inc
jge
lods
push
inc
pusha
or
js
push
mov
push
lret
das
jno
jne
dec
call
sub
xchg
mov
leave
push
leave
adc
loope
rcrl
addr16
sbb
dec
xchg
mov
inc
jge
pop
dec
or
cmp
sar
aam
sub
mov
movsb
std
mov
pop
mov
dec
outsb
inc
aaa
and
pushf
lret
std
test
add
ret
dec
mov
mov
jp
ret
push
xchg
dec
dec
xchg
add
aaa
pop
push
addr16
dec
dec
xor
sbb
sarl
xchg
clc
push
bound
mov
jl
push
mov
mov
mov
insb
push
jg
adc
es
sbb
hlt
clc
jb
packsswb
icebp
xor
aaa
adc
push
ror
iret
mov
into
dec
push
aad
mov
jb
int3
shr
les
fs
call
cli
inc
bound
rcrl
aas
jge
add
mov
add
int
aam
add
dec
faddl
mov
inc
cmc
cld
xchg
add
adc
jnp
aam
sbb
inc
push
outsl
pop
sbb
in
clc
add
add
lods
add
sub
ficoml
pop
adc
lods
and
cmp
in
cmpl
scas
loope
fildll
pop
js
cmp
cmpsb
or
sti
xchg
outsl
xor
jae
xchg
out
cmc
jns
mov
and
negl
mov
movsl
fdivr
pop
mov
test
sbb
sub
scas
addr16
hlt
inc
mov
dec
mov
andl
out
fadds
pop
push
adc
jae,pt
adc
imul
dec
orb
lret
lret
push
pushf
or
and
sub
xchg
xchg
push
rcl
loopne
call
jb
lahf
xor
ss
jmp
cvtdq2ps
gs
int
int
sub
movsb
inc
lret
es
or
cltd
cmp
fs
jns
xorl
hlt
jbe
xchg
lea
dec
inc
push
or
or
jae
leave
xchg
movsl
jb,pt
mov
incl
lret
adc
adc
iret
mov
and
std
jmp
push
jno
fs
dec
jg
jns
loopne
fiaddl
sbb
inc
aam
out
aad
inc
test
scas
ficomps
das
subb
popa
xor
dec
pop
sbb
adc
icebp
lods
call
dec
mov
int
loopne
xor
fisubrs
bound
inc
push
mov
fwait
sub
dec
mov
test
pop
aam
mov
negb
lret
or
add
jecxz
lock
mov
sub
inc
sbb
inc
push
mov
xor
adc
add
xchg
cld
add
sbbb
and
or
mov
nop
in
pop
jp
leave
jo
int3
cli
and
jns
shl
xor
int
xchg
push
insb
faddl
and
add
pushf
dec
ficompl
jecxz
mov
sbb
out
dec
movsl
loop
ds
mov
mov
sub
sarb
test
xchg
xchg
out
lods
pop
mov
cmp
mov
xor
outsl
imul
ficomps
and
cli
add
lret
subb
fimuls
imul
sbb
or
xchg
js
lods
sub
lds
or
repz
jge
push
pop
push
lds
ljmp
vpunpcklwd
stos
add
enter
mov
inc
xchg
cmp
fnstsw
xchg
sub
cltd
push
fcmovnbe
dec
mov
lods
fdivl
movsb
mov
lahf
lret
loopne
movsb
inc
jnp
mov
mov
push
mov
cs
inc
cmpsb
sbb
jp
pop
andl
pusha
rolb
fprem1
lock
mov
test
pop
cmp
cmp
test
scas
int3
imul
sub
pop
cmp
insb
dec
mov
xchg
repnz
jnp
sub
mov
or
lcall
frstor
cltd
repnz
pop
inc
pop
test
or
mov
imul
sbb
je
cmp
int
sub
mov
mov
mov
fimuls
lods
fnstenv
mov
jle
test
push
cld
imul
test
and
jge
inc
pop
jbe
mov
stos
cmp
cmpsl
dec
xchg
mov
sub
sti
mov
sbb
ucomiss
cli
in
or
and
adc
dec
fadds
inc
cltd
stc
mov
aaa
mov
jge
fbld
fisubrl
jbe
scas
mov
mov
sub
test
outsl
add
mov
dec
push
popf
and
int
loope
or
outsb
shr
pushf
add
dec
mov
dec
stos
mov
add
mov
bound
mov
jnp
mov
cmp
out
js
mov
incl
fwait
test
mov
bound
mov
jbe
shll
sub
xor
andl
xlat
in
ret
mov
mov
loop
cmp
jmp
pushf
sbb
mov
adc
and
repz
call
scas
scas
popf
mov
and
dec
testb
push
xchg
movsb
inc
push
out
sub
inc
push
mov
test
xor
sbb
bsr
mov
and
pushf
cmc
mov
cli
sub
jge
adc
dec
movsl
xlat
mov
sbb
jns,pt
stos
out
sbb
ljmp
ja
jae
ds
xor
jns
out
testb
pop
fcompl
fcoml
jl
mov
or
inc
sarb
popf
pop
arpl
jo
push
aaa
mov
cwtl
aaa
test
std
mov
cmpsl
mov
mov
inc
pop
jnp
add
daa
push
test
sub
or
dec
and
cmp
test
sub
jg
arpl
or
cmpsb
jns
mov
and
fldl
xor
aam
cli
adc
stos
sub
dec
out
cltd
pop
mov
nop
cmp
scas
pop
movsl
dec
fld
adc
loop
pop
adc
mov
sub
pop
and
lcall
adc
fisubrs
mov
mov
cmp
testl
enter
in
inc
push
jbe
cmp
jp
nop
inc
incb
pop
leave
add
push
bound
push
jge
jmp
aaa
outsl
pop
test
sub
shll
enter
pop
in
mov
cmp
mov
dec
xchg
shl
hlt
in
hlt
push
ret
push
popf
mov
aaa
sar
inc
sti
sahf
fwait
repnz
inc
mov
hlt
shlb
jle
sub
hlt
fisttpl
insl
mov
aad
pop
loope
sbb
cld
push
fisubrs
xchg
sti
stos
scas
xchg
sub
or
mov
sahf
push
add
ljmp
or
adc
mov
cmc
loop
mov
lret
cltd
mov
sbb
jno
add
test
stc
das
cmp
or
push
movb
out
les
jne
stos
cltd
add
push
jecxz
jle
xchg
push
xchg
ja
adc
jbe
mov
imul
divl
lods
mov
icebp
loop
shrb
std
mov
subb
or
fiadds
loope
or
ds
push
pop
jmp
mov
pop
loope
push
clc
test
mov
dec
sbb
shrb
enter
scas
sub
mov
pop
pop
lods
mov
cmp
fidivs
jg
cld
mov
xchg
test
add
jae
sbb
mov
jns
xor
mov
xchg
mov
rol
loope
imul
cmpsb
xor
xchg
sbb
pop
enter
rol
sti
sub
js,pn
mov
mov
je
loope
cmc
mov
cwtl
cmp
outsb
jnp
jmp
fs
mov
or
mov
aaa
mov
mov
mov
cwtd
aas
sub
hlt
mov
dec
ror
push
sub
push
inc
xchg
cmp
insl
adc
lahf
or
cmp
fsts
mov
xchg
icebp
cs
cmp
sar
mov
outsb
ret
jae
sub
push
dec
dec
mov
daa
ljmp
hlt
leave
ljmp
addb
add
idivb
cmp
repnz
mov
sbbb
mov
rcrb
fists
sub
jb
lods
inc
dec
adc
jno
into
jb
pusha
push
or
mov
mov
in
cmpb
xchg
in
push
pop
and
lock
push
cmpsb
lock
mov
adc
pop
flds
into
pusha
fsubrs
xor
icebp
fsubr
cmpsb
jo
xor
jecxz
aas
aam
mov
jmp
fsts
loope
das
ret
popf
ljmp
dec
cmp
jmp
jb
push
das
mov
push
push
jmp
int
sbb
fwait
lea
mov
int
add
pop
sub
xchg
les
ret
pop
mov
inc
push
out
add
es
cmp
test
das
ss
dec
pop
or
les
xchg
dec
js
aaa
sbb
stos
lahf
cmpsl
repnz
lcall
jae
pop
adc
push
imul
sti
movsb
xchg
aaa
push
loope
cmp
inc
pusha
mov
mov
dec
adc
cltd
das
cmp
jg
popa
stc
rcrl
sti
sub
jge
les
jp
push
xchg
jmp
clc
sti
lahf
dec
outsb
jb,pn
add
xchg
ret
std
jno
jno
xchg
imull
xorb
addr16
jmp
rol
xchg
push
arpl
cmpl
incb
and
rorb
adc
jb
push
ja
add
pop
sub
ficomps
sbb
push
cmp
mov
xchg
push
add
mov
aas
cmpsb
jb
inc
jg
push
and
int3
and
or
fadds
loope
mov
push
lea
cmc
fsts
das
jnp
sbb
int3
sahf
fwait
push
and
sub
add
das
push
insl
hlt
popa
fcoms
xlat
sar
mov
xchg
es
push
cmp
sahf
cmpsb
mov
ss
mov
enter
iret
sub
mov
jns
repnz
cmp
test
enter
cmpsb
test
movsb
pop
inc
lds
test
sub
movsb
mov
pop
sub
xchg
rcrb
xchg
push
outsb
aam
push
push
scas
fsubrs
push
sbb
jl
add
mov
call
ret
jmp
jg
hlt
mov
cmp
or
mov
popf
rorl
out
jmp
xchg
mov
and
icebp
cmp
and
jb
and
mov
cmpl
insb
bound
adc
stos
mov
andb
les
xchg
popa
adc
pop
push
aaa
in
or
pop
and
sub
ret
enter
arpl
mov
into
in
jmp
adcb
in
lods
cmp
dec
xchg
jmp
test
push
pop
jbe
xor
or
jo
frstor
xor
dec
inc
daa
dec
xchg
int3
jnp
push
gs
adc
inc
jae
lock
adc
pop
subb
and
jnp
fwait
xchg
aas
in
arpl
dec
call
aad
pop
dec
lods
sahf
bound
xor
lret
xlat
leave
in
out
inc
icebp
loop
mov
punpckhdq
in
sti
stc
or
sbb
cmp
lahf
ss
int
mov
pop
test
lret
aas
mov
mov
fisubrl
mov
fsubl
pop
xchg
daa
in
xorl
cli
jo
pop
xorl
inc
arpl
or
sub
std
insl
mov
mov
mov
test
out
and
pop
int
mov
add
pop
lock
or
adc
pop
sub
into
or
lock
jp
mov
lods
pop
and
mov
add
sbb
adc
pop
pop
adc
mov
mov
push
mov
in
jns
in
cmpsl
int3
jno
ljmp
mul
fsubrs
test
sub
shlb
lods
xor
xchg
sub
xor
mov
movsb
inc
rcl
out
xorl
std
ret
pop
mov
test
ljmp
inc
mov
test
into
ror
fs
addr16
push
pop
cmp
jnp
add
movsl
dec
cmpsl
add
iret
movsb
dec
lea
gs
push
fildl
hlt
or
mov
loope
push
dec
pop
clc
inc
sbb
scas
xchg
pop
iret
add
or
loopne
repz
sbb
mov
pop
sbb
pushf
mov
addl
arpl
aam
jnp
test
ret
pushf
loope
jne
add
sar
mov
mov
lahf
sbb
sub
test
test
addr16
repnz
sahf
or
lcall
xchg
cmp
sub
call
push
cltd
cwtl
scas
icebp
mov
mov
repnz
roll
arpl
cmp
aaa
and
shrb
pushf
in
std
push
lcall
out
mov
push
aad
js
movsb
jbe
lods
push
imul
shlb
pop
mov
mov
and
pushf
dec
addr16
mov
sbb
rcl
daa
xor
pop
outsb
rcll
inc
pop
mov
push
inc
stos
cmc
sbb
and
pop
ret
pop
sub
jmp
hlt
popf
dec
fs
mov
adc
out
mov
pop
adc
pop
outsb
sub
cs
sbb
xchg
or
mov
xchg
jne
adc
lahf
inc
ret
insl
out
xchg
int3
imull
ret
lods
push
xor
adc
mov
jo
cs
cld
or
fsubr
pop
cwtl
pop
sub
ljmp
mov
sbb
imul
inc
and
jbe
jae
std
or
xor
xchg
icebp
mov
push
mov
dec
xchg
pop
adc
dec
pop
add
sahf
aas
jb
aad
sub
cmp
insb
adc
sub
adc
aaa
push
lret
cmp
out
mov
std
ja
xor
xchg
add
mov
add
mov
fmuls
loope
mov
mov
lods
loope
out
stos
idivb
xchg
mov
idivl
push
mov
mov
mov
and
jb
sub
or
in
cwtl
mov
push
fsubrp
or
mov
sbb
inc
jmp
data16
out
js
fdivrl
scas
lret
jae
insl
arpl
insl
mov
and
pop
xchg
addl
adc
xchg
fldl
rclb
fnstenv
dec
adcb
rorb
pop
in
ljmp
sub
aaa
arpl
mov
or
mov
stos
jnp
cmp
cmp
js
test
test
js
int
push
and
xchg
push
jae
rcl
push
into
imul
mov
push
jb
fwait
sub
jae
pop
rcrb
push
and
test
rolb
fisubrs
jmp
test
daa
jns
std
in
lods
aam
and
xchg
dec
sbb
lea
dec
pop
movsl
xor
and
push
stos
pop
push
xchg
int3
xor
shl
xor
je
mov
faddp
sbbb
push
sub
jo
arpl
aaa
add
mov
je
shll
jae
in
cli
ret
mov
cld
nop
sbb
test
dec
jae
inc
test
movsb
push
xor
xchg
cltd
test
dec
adc
mov
xor
cmc
push
inc
roll
pop
xchg
add
add
push
and
push
mov
test
cwtl
aas
sti
pop
lret
je
test
mov
mov
cmp
cmpb
in
pushf
loop
icebp
add
xor
dec
jne
popa
adcb
mov
xor
sbb
and
mov
jecxz
repz
mov
pop
pop
xadd
movsl
cwtl
dec
xchg
xlat
fldt
out
xor
inc
jb
dec
rcll
push
stos
sub
bound
rorl
pop
sub
cltd
ret
scas
sarl
test
sti
mov
ds
cmc
sub
ret
inc
push
testl
inc
cmc
mov
xor
mov
push
pusha
mov
and
mov
xor
sti
mov
mov
popf
lret
jno
test
js
jae
insb
icebp
repz
mov
dec
jmp
mov
dec
test
dec
jno
xor
test
and
pop
imul
push
pusha
adc
inc
aam
hlt
dec
inc
xchg
inc
cmc
scas
aas
jns
aaa
subb
push
jge
xor
stos
emms
cmc
ret
cltd
hlt
mov
popa
xchg
inc
push
not
lock
jns
and
mov
jnp
lret
hlt
adc
cs
cmp
insl
in
mov
mov
xchg
cmpsl
mov
sub
mov
lret
pushf
je
xor
push
sti
add
xor
test
pusha
dec
mov
mov
adc
loop
and
fs
addr16
mov
sahf
pop
inc
and
in
rcrb
and
push
flds
movsl
mov
pop
pop
js
or
push
daa
xchg
push
mov
ljmp
sbb
xor
rep
test
pop
jmp
mov
xor
add
mov
and
xor
adcb
icebp
adc
movsb
mov
loop
jp
ljmp
jge
fsubr
xchg
scas
test
int
pop
pop
mov
mov
mov
repnz
add
or
xchg
mov
xor
cmp
pusha
jo
cmc
mov
xchg
shlb
stc
test
push
movsb
out
jb
jg
scas
loope
sbb
insb
in
popf
push
call
push
outsb
add
jp
cmp
sbb
ficoms
cmpsl
insb
dec
cmp
imul
fldt
dec
inc
insl
dec
jbe
ficoms
out
xor
daa
es
daa
sbb
xor
sub
dec
push
adc
cmc
or
pop
mov
cs
dec
dec
jecxz
sub
mov
es
mov
idivb
mov
js
push
data16
fidivrl
or
dec
rorb
jns
jp
stos
leave
insb
sbb
mov
ljmp
dec
fidivrs
lret
loope
dec
sbb
push
les
mov
mov
das
repnz
fwait
sub
add
fisttps
loopne
adc
mov
jnp
xchg
add
dec
xchg
movsl
mov
cld
leave
sub
jno
add
and
and
fwait
ret
pop
test
loop
add
in
pushl
jge
into
daa
ds
stc
jae
leave
or
mov
movsl
or
jno
pop
inc
pushf
stos
mov
jmp
sub
push
sub
push
test
aam
ss
sbb
sbb
fdivrs
rorl
jge
enter
and
orb
mov
inc
push
push
jbe
mov
fwait
xor
lahf
and
push
adc
pop
fmull
stc
mov
dec
xchg
mov
xor
add
lcall
mov
mov
imul
add
xlat
sbb
inc
ret
lock
adc
movsl
fnsave
xor
lock
pusha
jbe
enter
adc
mov
aam
int
pop
cld
sbb
in
xchg
jmp
or
sbb
xchg
xchg
sub
mov
jne
jl
enter
jge
dec
xchg
roll
xchg
fsubrl
sub
add
adc
imul
iret
movsl
mov
mov
adcl
mov
mov
push
cmp
leave
sarb
mov
andb
dec
pop
push
repnz
fiadds
lcall
mov
sub
sub
inc
out
cmc
cltd
lea
or
pop
stc
adc
dec
aam
clc
sbb
out
shlb
in
xor
sbb
mov
jg
xchg
fisttps
push
out
push
sahf
iret
xor
dec
cmpsb
xchg
sub
mov
nop
repnz
bound
jmp
dec
rcrb
mov
and
test
loopne
pop
sbb
movsb
sub
scas
test
fists
addr16
data16
xor
mov
or
push
sub
mov
loop
push
push
or
mov
xchg
dec
sti
mov
inc
push
sub
popf
dec
mov
sti
adc
es
push
xchg
clc
dec
pop
pop
js
sub
lcall
push
cmpsb
xchg
arpl
cmp
dec
insb
out
out
pop
pushf
mov
cmp
and
xchg
sahf
or
int3
inc
pop
sbb
aad
jbe
lods
add
push
push
and
movsb
shrb
mov
lods
push
popa
xlat
loope
loope
sub
jb
jae
fdiv
cltd
xchg
data16
pop
xlat
mov
sub
adc
fcmovnu
mov
or
cld
mov
pop
hlt
mov
dec
loopne
fsubl
xchg
mov
xlat
repnz
iret
inc
xchg
jne
xchg
push
shll
adc
ficoms
or
std
push
popa
cli
jecxz
negb
mov
mov
in
leave
dec
out
or
test
push
add
xchg
xchg
sbb
jge
pop
in
jbe
ret
ds
gs
xchg
push
shrb
or
mov
aam
jb
and
icebp
daa
shll
pop
push
mov
dec
int3
jnp
xchg
jp
cmp
mov
scas
fnsave
xchg
jl
stc
inc
lock
jmp
notl
bound
sbb
frstor
lods
push
vpaddusw
xor
or
lods
loop
and
add
mov
add
arpl
mov
inc
insl
imul
inc
scas
inc
xor
and
dec
mov
fld
in
daa
les
jne
inc
rorl
pop
call
icebp
cmp
iret
movsb
mov
ljmp
dec
fs
inc
lcall
or
mov
ret
mov
mov
cli
cmp
or
sbb
jb
lret
jle
pop
arpl
inc
dec
and
mov
sub
push
pop
call
test
cld
push
or
lahf
loopne
aaa
sti
jns
adc
imul
jb
mov
sbb
pushf
aaa
clc
and
das
or
mov
mov
jae
or
xor
push
aas
push
xor
jb
out
or
fwait
movsb
mov
mov
inc
orb
sbb
icebp
dec
pop
mov
incl
fcmovbe
push
les
cmc
cmpsb
out
xor
cmp
pop
int3
scas
jge
sbb
out
xor
fldl
add
xorb
loopne
dec
int
ret
jbe
add
and
jno
sub
iret
call
clc
or
mov
and
jmp
arpl
in
push
xchg
subb
mov
subb
loopne
enter
lods
dec
or
icebp
call
jb
out
lea
leave
out
or
mov
leave
pop
and
mov
sbb
ss
std
sbb
sub
out
push
arpl
xlat
add
add
sub
cmp
dec
ficomps
cs
sub
jns
mov
push
loop
cmp
push
fadd
push
jg
inc
jecxz
mov
adc
mov
xchg
or
aad
lods
push
and
pop
xchg
js
dec
inc
jg
cmp
jmp
frstor
sub
mov
fucomp
push
leave
dec
push
andb
iret
mov
dec
rorb
dec
cld
lds
ja
pop
in
or
pop
sahf
test
push
dec
push
mov
cmc
ficompl
shlb
pop
jp
pop
popf
in
push
adc
lock
test
iret
push
xor
fidivl
pushf
lret
inc
cmpsl
push
push
add
inc
cs
inc
jae
lock
mov
push
ret
pop
mov
xor
inc
test
dec
push
add
test
inc
cmp
shrl
scas
add
inc
xor
scas
jbe
pop
mov
dec
xchg
jne
mov
pop
dec
or
jo
add
xchg
lea
jp
popa
in
sub
outsb
popf
mov
icebp
and
mov
dec
sub
cmp
jp
pop
pop
xchg
add
imul
stos
stc
enter
or
data16
fninit
or
sub
ret
arpl
stc
pop
pop
out
add
push
pop
inc
outsb
in
pop
es
cmp
fwait
jecxz
sahf
mov
adc
push
xchg
test
xchg
cmp
xor
int
call
call
iret
in
mov
fstps
and
shll
cld
cmpsl
iret
sti
xchg
xchg
pusha
and
and
push
outsl
and
sub
test
inc
lcall
sub
and
xor
push
popa
pop
out
icebp
scas
rorl
inc
jge
jp
xor
cmpsb
fsts
xchg
cmpl
pop
push
idivb
and
test
and
pop
mov
and
fists
sub
cmp
cmp
inc
ret
mov
sbb
lock
arpl
cli
inc
hlt
imul
mov
shll
faddl
push
dec
mov
inc
add
aad
out
cltd
imul
adc
mov
lahf
cld
mov
add
shlb
mov
fidivrl
aad
in
or
call
ret
repnz
daa
sahf
push
addl
add
scas
es
xchg
mov
mov
aam
pop
add
mov
shlb
cltd
adc
pop
xchg
test
fstpl
mov
sbb
inc
lahf
insb
loop
mov
int3
xchg
repnz
aad
cmp
icebp
mov
test
cld
arpl
sbb
addr16
aad
fisubrs
imul
push
adc
addr16
aam
mov
lods
imul
push
sbb
jmp
enter
add
add
inc
js
je
xor
sbb
aad
sarl
adc
mov
iret
mov
mov
jl
clc
test
nop
popa
pop
fdivs
sub
clc
rcl
iret
mov
out
mov
or
xor
or
jge
mov
icebp
jge
inc
enter
xor
mov
cli
fildl
lds
and
inc
lcall
popa
jge
adc
add
clc
push
idiv
jae
test
jne
ljmp
mov
pop
scas
add
shll
dec
data16
or
lret
fstpt
or
pusha
dec
out
imulb
mov
repz
jnp
push
mov
xor
gs
lock
ds
jae
imul
adc
jecxz
and
mov
lcall
pop
xor
and
hlt
cwtl
xor
sub
mov
gs
and
in
pop
sbb
fisubl
jg
add
popf
mov
loope
jmp
std
push
imul
hlt
and
pop
mov
pop
gs
push
ret
mov
dec
xor
lcall
sbb
push
lahf
cld
mov
sub
inc
push
loop
ret
jnp
mov
lahf
cmp
sbb
in
adc
mov
sub
cli
xor
aas
xchg
mov
xchg
mulb
movsl
mov
mov
inc
mov
les
inc
adc
mov
insl
sub
hlt
pop
sub
adc
or
mov
jb
jnp
hlt
add
out
mov
mov
push
sub
in
dec
ret
push
xchg
jge
into
add
add
inc
mov
fwait
sub
jae
cs
jg
and
xorl
lret
xorb
xor
adc
inc
movsb
imul
fidivrl
mov
sub
or
mov
xor
jecxz
popf
sbb
ljmp
cmp
outsl
cs
xorb
aaa
cld
add
pop
fldt
push
repnz
jae
sahf
push
push
orb
mov
or
scas
call
mov
push
lods
add
dec
je
cli
test
rorl
fs
push
stos
pop
std
jb
das
fdivrl
sbb
cmp
cmp
lds
out
add
or
mov
imul
jae
or
pop
xor
add
xor
dec
and
sbb
aas
xor
int
call
mov
shr
push
stos
shr
mov
adc
sub
push
sbb
mov
sub
std
inc
sub
push
and
xchg
imul
in
int3
push
xor
xor
shll
mov
hlt
sub
cmpsb
pushf
sbb
jns
mov
loopne
rep
cs
pop
adc
adc
fs
push
cmc
mov
jae
daa
or
inc
incl
shlb
fnsave
push
movsl
xchg
insl
hlt
orb
mov
test
xor
mov
std
je
shrl
or
mov
lret
add
fs
dec
mov
fsubrp
cli
mov
movsb
mov
jg
rol
xchg
dec
mov
adc
test
mov
mov
push
xchg
xchg
inc
ret
or
and
cwtl
iret
testb
pop
sbb
pop
ret
psubq
and
mov
scas
mov
subb
push
fidivrl
mov
jg
push
mov
rcrb
push
push
ds
and
outsl
call
jge
pop
mov
test
aad
sbb
mov
push
int
inc
fcmovbe
or
mov
cmp
or
push
adc
inc
stc
jmp
sub
loope
popl
inc
mov
fwait
loopne
test
je
mov
pop
dec
dec
out
xor
push
lods
adc
pop
es
cmp
jmp
mov
mov
repz
xor
mov
rcll
ficompl
fucomp
ret
dec
push
nop
dec
js
imul
push
xor
fisubrs
lea
inc
xor
jle
punpcklbw
xor
pop
insl
dec
adc
mov
and
loopne
ljmp
testl
dec
inc
insl
ficompl
pop
call
mov
iret
jb
and
adc
sbbl
stc
sub
sub
sub
push
sub
add
mov
mulb
dec
out
hlt
scas
movsb
pop
sub
adc
mov
pop
mov
cmp
add
mov
iret
jge
stc
jg
aad
and
push
in
sub
hlt
sub
scas
or
pop
mov
push
rcrl
sbb
in
jl
clc
cli
test
sub
or
xor
test
and
push
sub
push
out
sti
mov
mov
in
lcall
test
out
sarb
and
pop
insb
mov
repz
call
jnp
decl
idivl
lahf
jb
jno
lods
lods
sub
clc
into
out
or
cmp
test
stc
mov
daa
in
mov
add
xor
adc
test
lock
or
test
push
jmp
mov
ljmp
or
cmpsb
jb
aam
sub
lds
cmpsb
adc
mov
jno
cmc
xchg
mov
test
nop
fists
adc
jl
lods
and
cmpsl
cmp
pop
or
mov
repnz
dec
sbb
inc
cmp
cmp
enter
std
imul
push
inc
in
fucomp
in
or
mov
and
mov
jle
lods
pop
out
fcompp
hlt
das
jns
cmp
and
add
xor
cmpsb
setae
and
cs
xor
xor
adc
popa
and
jmp
ja
mov
fstpt
movsb
or
cmp
inc
push
push
in
enter
cmp
lods
insl
jg
dec
sar
repnz
cmp
ror
sbb
or
inc
sbb
lods
leave
fwait
arpl
test
imul
pop
cs
dec
gs
mov
ret
push
jne
je
fldt
fstpl
das
leave
lods
loopne
dec
inc
mov
es
icebp
xchg
pop
or
std
clc
push
add
add
lods
stos
sbb
mov
aaa
and
mov
roll
or
ret
add
das
add
loope
ret
sub
sub
ret
or
sahf
test
in
mov
push
out
mov
lea
ljmp
xchg
adc
add
mov
dec
iret
sbb
scas
ficomps
notl
in
insl
sub
insl
sub
adc
out
loopne
out
int
mov
in
adc
in
adc
xor
cmp
adc
and
test
push
pop
pop
jg
jno
mov
in
sbb
mov
aaa
xchg
mov
dec
js
mov
jbe
pop
repz
lret
ret
push
inc
aad
mov
adc
push
nop
sub
dec
cmp
mov
lahf
sbb
scas
aam
push
out
sahf
fldpi
loopne
mov
pop
rclb
xlat
xchg
mov
aam
jno
in
and
and
lock
decl
pushf
shrl
cmpsb
dec
int3
js
xor
stc
aas
into
and
jne
and
jle
push
ss
les
cs
and
pop
xor
leave
arpl
sahf
sbb
jge
dec
fildl
xchg
test
xchg
fs
push
andb
adc
mov
mov
jae
dec
sti
and
push
add
iret
dec
inc
cld
dec
push
movsb
shlb
and
and
pushf
push
lcall
sbb
and
xlat
sub
enter
aad
pusha
or
cmp
insb
xor
jp
xchg
out
sub
lret
pop
add
clc
sbb
mov
push
ljmp
or
das
sti
out
js
and
push
xor
and
jo
push
test
movsl
and
mov
andl
mov
cmp
shll
mov
xchg
mov
lret
mov
das
movsb
rcr
ja
push
aaa
or
jg
inc
jmp
mov
pusha
pusha
ret
dec
cmc
jno
in
push
xor
ja
jb
pusha
das
ljmp
or
ss
mov
sbbl
xor
aaa
xor
sub
mov
loope
xchg
lods
stos
lods
mov
popf
mov
dec
cmp
sahf
test
shl
pop
in
movsl
es
sbb
xacquire
movsb
cld
and
filds
mov
sub
jge
lahf
and
jge
cld
repnz
mov
ds
sbb
scas
mov
int3
add
jbe
and
mov
enter
out
popf
jl
mov
loope
dec
scas
scas
push
mov
mov
std
push
mov
jae
in
rcrl
shrb
cld
adc
xchg
mov
pop
mov
jmp
xchg
fwait
lds
fcmove
inc
dec
cmc
and
mov
or
stc
pop
loop
jp
movsb
aad
adc
ss
mov
aad
shl
push
mov
jnp
and
lods
inc
add
imul
sbbl
adc
stos
arpl
lods
aaa
xchg
adcb
jecxz
fdivrs
inc
subb
dec
mov
sbb
inc
add
mov
mov
push
mov
loop
mov
out
into
push
ret
cmp
movsl
mov
mov
pop
mov
into
loope
or
cmp
pop
xchg
xor
xor
pop
mov
xchg
out
orl
push
mov
imul
jb
mov
test
cmp
xchg
outsb
pusha
dec
mov
dec
push
out
popa
mov
pop
cmp
jl
jnp
xchg
xchg
push
frstor
es
push
lret
xor
jecxz
int
enter
adc
in
fdivl
jo
lret
ljmp
imul
or
or
cmc
call
cs
das
jns
mov
flds
sbb
pop
and
cs
out
ret
adc
mov
dec
adc
mov
das
iret
cmp
mov
add
ljmp
fidivl
mov
mov
pop
push
js
js
mov
lret
fwait
ss
filds
cli
bound
fwait
jae
jle
lret
adc
fbld
adc
and
lods
push
sbb
mov
mov
nop
mov
movsb
mov
push
and
push
jbe
cmp
cmpsb
cmp
dec
scas
scas
xor
push
stc
mov
testb
pop
mov
mov
aam
sti
xchg
stc
outsb
xor
test
inc
arpl
ficoml
hlt
mov
test
xchg
aas
sarl
lret
xchg
or
sti
dec
loop
pop
jbe
mov
popl
in
call
xor
cmp
jmp
int
sahf
mov
movsl
push
rcrb
push
fists
pop
daa
lods
mov
inc
addr16
sub
sarb
add
inc
cmp
andl
or
fcmovne
adc
or
mov
jmp
dec
xor
or
sbbl
lret
test
call
add
jb
cmp
dec
imul
adc
jmp
mov
gs
xchg
cmp
ljmp
lret
cmp
push
pop
andb
sahf
mov
cmp
out
mov
xchg
push
cmp
lcall
pop
test
cld
int
mov
xlat
mov
and
pop
je
mov
loopne
xor
aad
in
leave
xor
mov
cmp
mov
shll
xor
xchg
sti
push
and
push
jge
call
lahf
sbb
daa
js
and
cmp
push
stos
mov
mov
mov
sbb
add
or
ja
scas
adc
out
and
in
push
clc
cmp
dec
ss
pop
xor
in
movsl
int
add
in
push
add
repnz
mov
jl
and
cmp
aad
mov
aam
push
add
icebp
adc
inc
mov
mov
adc
dec
and
addr16
stos
push
xor
jl
sti
out
ss
mov
hlt
dec
sub
lret
testl
shrb
sub
in
mov
sbb
xlat
mov
das
mov
loop
xchg
lcall
sbb
inc
scas
ret
ret
arpl
push
int3
add
bound
cld
push
mov
nop
push
mov
rorl
xchg
sbb
add
fmull
outsl
add
cmpsb
push
movsl
ljmp
xor
xor
loope
pop
fsts
call
imul
frstor
in
xor
cli
ja
xlat
in
xchg
int
repnz
jecxz
xor
idivl
mov
dec
mov
rcr
cmpsb
cmp
sbb
pop
iret
cmp
mov
dec
mov
imul
out
imul
cmpsl
rcrl
stos
mov
xchg
push
dec
push
push
mulb
repnz
xchg
mov
aaa
mov
lahf
pop
mov
pop
ffree
testl
nop
ss
xor
das
test
mov
or
push
scas
fmul
mov
jbe
mov
add
adc
aaa
jmp
cmc
popa
jo
arpl
mov
adc
jno
repnz
mov
outsb
pop
jo
sub
repz
scas
jge
mov
inc
cltd
enter
pop
push
mov
push
dec
pusha
subl
in
pop
mov
cltd
and
sub
arpl
loopne
pop
sub
add
mov
pop
lcall
inc
inc
dec
fnstenv
xchg
mov
sti
jne
imul
ret
adc
xor
push
mov
push
xchg
stos
dec
xor
xor
mov
adc
imul
xor
and
pop
jle
leave
mov
ljmp
mov
sbb
lods
fldt
fdivl
cld
arpl
cmpsl
lret
and
loope
or
cmp
pop
shlb
dec
mov
loopne
xchg
sahf
pop
pop
fstpt
or
int
and
mov
in
mov
dec
out
sbb
fwait
repnz
rclb
test
add
aam
xchg
sub
aas
cli
pusha
pusha
mov
lcall
mov
fldenv
imul
or
arpl
shr
rclb
ret
in
lret
mov
mov
mov
xor
jo
sub
mov
inc
push
in
fisubrs
cmp
fdivrl
jmp
sbb
push
lods
adc
sbb
pop
mov
int
jp
int
inc
movsl
mov
add
push
mov
jle
in
xchg
or
into
cmpsb
not
sub
or
push
dec
mov
es
jo
shr
mov
or
or
sbb
test
push
cmpsl
pop
xchg
scas
aaa
inc
pop
aam
mov
push
repnz
cmp
repnz
jbe
test
stos
cmp
jp
xchg
sbb
or
dec
push
push
test
insl
add
fwait
pop
pop
cld
jp
and
mov
js
dec
frstor
mov
jmp
sbb
and
jne
xchg
popf
insb
imul
pop
cld
xchg
mov
pushf
mov
mov
js
lret
add
cmp
and
push
push
dec
ret
xorl
adc
sbb
insl
mov
xor
ret
lea
jnp
test
lcall
daa
inc
ds
jae
lret
push
xchg
jb
test
mov
xchg
sbb
test
je
dec
ffree
sbb
jbe
pusha
in
xor
cmp
push
pop
push
loop
add
sub
mov
mov
fisubs
mov
mov
sub
fsubrl
push
cmc
xorl
fidivrs
mov
es
xchg
es
loope
inc
xor
inc
pop
mov
pop
inc
inc
jnp
dec
add
aam
sbbl
xchg
add
outsb
int3
stos
clc
jb
add
ja
push
punpcklbw
xor
in
push
cmpsb
cli
pop
cmp
aas
inc
ja
xor
nop
sahf
sub
pop
mov
aam
mov
lds
daa
push
sbb
jo
cmpsb
leave
mov
test
movsb
jbe
xor
add
sti
loope
sub
fsubrs
out
ret
call
sub
inc
fs
inc
int3
lods
push
scas
inc
cld
fucomp
in
nop
push
loope
jb
push
mov
or
faddl
or
xchg
adc
jecxz
cli
insl
cmp
inc
mov
ljmp
jle
jg
fistpll
add
dec
push
jnp
lahf
inc
stc
stc
sub
jg
faddp
mov
or
jg
or
loop
dec
mov
inc
cmpsl
sub
mov
jmp
scas
push
sub
mov
xor
cli
sub
fistl
sbb
pop
mov
rcrb
inc
ficoms
sub
jae
fistpl
arpl
test
inc
mov
mov
and
pushf
pop
repz
rolb
push
ret
aam
out
mov
sti
lds
ret
push
mov
sbb
cmp
jnp
ljmp
data16
xchg
in
mov
xchg
xor
ret
inc
and
xchg
je
aad
push
popf
inc
xchg
mov
fsts
xchg
mov
cmpsl
inc
dec
sbb
hlt
sarl
aaa
movsl
js
int
pmuludq
pop
andl
aam
sub
and
insl
in
and
ja
and
inc
insl
xchg
loop
je
and
sahf
dec
and
lods
jge
les
stc
dec
movsb
ja
cmp
enter
xorb
add
inc
cwtl
pop
ds
or
sbb
xlat
int3
inc
cmc
rorl
mov
or
in
pop
into
xor
mov
mov
mov
mov
add
divb
sub
xchg
mov
jmp
out
mov
push
ficoml
cmp
xor
xchg
lcall
test
insl
mov
shll
mov
lods
xor
jns
adcb
jno
push
fimuls
and
or
iret
lods
cltd
push
roll
les
mov
aaa
dec
mov
stc
lock
sahf
imul
lock
rorb
xorl
mov
cmpsb
and
sbb
or
pop
bound
addr16
cmp
lods
lret
mov
adc
add
jl
or
ret
cli
mov
add
fsubr
test
cltd
les
aam
lock
lahf
dec
xchg
sti
cli
cmp
mov
dec
pop
out
mov
addr16
loope
cli
sbb
push
in
shll
sbb
fwait
in
clc
xor
and
push
lds
sub
pop
dec
mov
add
jmp
cmp
push
add
mov
adc
daa
push
inc
jge
ret
sub
cmc
cmp
xchg
cmp
jnp
xchg
jbe
jo
inc
sbb
adc
sub
jbe
cltd
mov
xor
mov
fwait
sub
pop
and
add
sahf
fs
mov
sub
inc
add
mov
xchg
in
jmp
sub
sub
insl
ret
cmp
mov
std
push
lret
call
out
div
popf
xchg
push
lret
lret
bound
inc
inc
push
test
gs
jle
rolb
lret
jnp
jle
call
in
in
int
jl
lds
jecxz
lods
xchg
and
add
cld
adc
mov
std
ret
cli
push
jb
sahf
in
mov
call
sub
mov
xchg
xchg
xchg
mov
nop
pop
sub
test
cld
sub
imul
sbb
adc
push
sub
and
iret
push
fists
or
loopne
fsubl
inc
mov
jl
shr
sub
inc
aad
je
or
fs
scas
sbb
roll
mov
jmp
or
push
jp
cmp
lea
dec
int3
adc
testl
mov
or
or
fwait
in
inc
daa
mov
cld
insl
stos
test
jge
and
iret
mov
popf
xor
pop
aas
les
jae
sbb
inc
xchg
mov
adc
insl
mov
das
xor
adc
movsl
adc
xchg
push
fnstcw
stos
or
daa
and
cmc
in
std
sarb
fnstcw
pushl
mov
arpl
lock
ror
adc
enter
fs
test
or
add
sub
lcall
pop
andl
imul
or
xor
pop
and
xchg
stc
jae
mov
iret
lds
inc
pop
push
loop
aaa
bound
pusha
ljmp
stos
sti
dec
mov
cmp
movb
jge
fs
mov
test
lock
xchg
cmp
cmpsb
mov
pop
lds
cs
lods
jbe
cltd
aam
inc
iret
das
pop
jg
adc
cs
rcll
xchg
lods
xor
repnz
pop
pop
je
sbb
xchg
das
jecxz
scas
pop
stos
hlt
fdivrp
js
mov
adc
jbe
lahf
insb
dec
or
cli
fcom
repz
jns
test
mov
mov
push
or
movsl
and
fdivrs
addr16
inc
jb
aaa
push
leave
sbb
ss
or
push
int
sbb
clc
mov
pop
pop
dec
pop
clc
jnp
mov
movsb
pop
push
cmp
icebp
das
mov
inc
mov
add
movsl
stc
adc
sub
movsb
mov
mov
lock
and
mov
adc
inc
sbb
sbb
jle
cmp
mov
jns
and
stos
add
add
loopne
xlat
lret
test
aaa
rcr
dec
ficoms
movsl
lods
inc
addr16
ss
jmp
ds
imul
or
mov
bound
jae
mov
xchg
mov
nop
clc
push
adc
out
insb
iret
fisubl
jbe
fs
mov
addr16
scas
call
jle
jmp
fwait
stos
imull
jno
or
sbb
rcrl
ret
pop
xchg
inc
inc
push
out
adc
js
dec
or
pop
out
enter
xchg
jnp
cmpsb
addl
push
push
dec
push
or
jmp
in
shlb
add
mov
out
cmp
aam
xchg
xor
xchg
mov
cmpsb
rcr
jmp
fs
cmpsb
aas
mov
clc
ss
xchg
mov
test
fdivl
jp
or
push
leave
sub
mov
imul
sbb
push
xlat
pushf
rsm
testb
xchg
aad
stc
jne
ret
pop
push
xchg
jle
int3
xchg
out
cmp
pusha
shll
popf
fimull
cmp
fdivrl
pop
mov
mov
mov
and
jecxz
xor
shlb
leave
aad
xor
jge
push
sub
push
xor
ret
movaps
pusha
repz
pop
dec
sub
lret
cmpsb
sti
mov
bswap
call
mov
pop
shlb
adc
xchg
inc
adc
fwait
jle
pop
icebp
adc
lret
xchg
jge
xchg
in
dec
bound
mov
movsb
gs
mov
test
adc
and
inc
cmp
push
js
mov
inc
sub
aam
mov
imul
add
or
push
lret
jno
ss
in
gs
xor
xor
ds
lea
iret
movsl
jne
inc
adc
int3
jmp
sub
sarb
push
dec
cmp
jno
jmp
push
packsswb
sahf
push
push
pop
or
mov
divb
lds
leave
repz
sub
pop
push
add
xchg
sbb
mov
jl
jne
xor
sti
pop
xor
cmpsb
loopne
xor
test
lcall
insl
push
push
scas
sub
sbb
and
inc
or
fisttps
lods
and
pop
fsubs
sahf
pop
sub
jp
rorl
pop
push
push
outsb
test
addr16
cmp
test
in
faddl
stos
cmp
inc
movb
movsb
lods
jns
lret
pop
xor
mov
sti
or
pop
xchg
jno
clc
and
inc
pop
repz
mov
xor
divb
movsb
lods
nop
jmp
sbb
push
in
xchg
sti
fwait
popa
jl
xor
or
addr16
addr16
mov
jo
fiaddl
faddl
fdivl
add
addr16
movl
sbb
and
dec
cli
inc
int3
mov
loop
cmp
sbb
push
inc
repz
leave
out
dec
adc
es
cli
bound
shlb
xor
mov
xchg
or
mov
xor
mov
imul
and
pop
jno
xchg
jo
and
pop
dec
stc
in
pop
pop
insl
push
fcmovb
inc
ds
mov
pushf
out
and
sbb
jecxz
test
rcll
adc
inc
rcrl
cwtl
scas
lods
repnz
cmp
sub
cmp
sub
xchg
push
fcmovnu
sub
ds
fstpl
jecxz
hlt
hlt
testb
inc
sub
pop
pop
int3
int3
data16
cmc
adc
ret
xchg
test
loope
cmp
sbb
test
mov
insb
lahf
cli
cmp
pop
dec
or
aas
inc
xchg
lret
ret
sbb
fists
iret
sbb
sahf
leave
jmp
sbb
imul
xor
pop
xor
cmp
or
hlt
cmp
lcall
jne
jb
jp
decl
mov
dec
pop
std
mov
stos
cmp
jle
pop
lahf
xchg
scas
sub
sbb
loopne
fs
cld
push
mov
xchg
imull
mov
cmp
test
pop
cmpsb
loop
xor
fistpl
push
mov
and
mov
xchg
in
mov
int
inc
xchg
and
cmp
cwtl
in
enter
popa
test
xchg
cmp
mov
cmpsb
mov
pop
imul
data16
repnz
sub
in
repz
push
cmp
rcll
mov
aaa
or
sub
mov
stc
cmpl
mov
movl
lock
incb
mov
insb
mov
gs
sbb
add
negl
enter
mov
jle
mov
mov
aas
mov
stos
sahf
int
cmp
xchg
das
push
sub
pop
and
les
mov
mov
je
push
mov
jno
jecxz
daa
mov
iretw
or
mov
xlat
js
sub
ret
push
in
inc
dec
roll
test
xor
loopne
mov
aad
clc
imul
lcall
sub
testb
push
or
lcall
add
dec
dec
mov
ret
into
cmpsl
adc
mov
hlt
dec
movsl
adc
jne
jae
adc
inc
push
call
iret
sbb
pushf
mov
fidivrs
cmpsl
mov
repz
out
xor
add
mov
insb
jl
shl
xor
mov
pop
fsub
adc
out
jmp
xorl
jb
mov
in
push
outsb
popf
xorl
jg
out
inc
push
add
pop
xchg
movsb
or
imul
in
adc
leave
inc
mov
fxch
loopne
push
push
jg
dec
mov
arpl
out
out
jae
cmp
neg
movsl
inc
loope
in
mov
inc
adc
in
insb
sub
outsl
add
cmc
cli
inc
lods
cmc
sbb
les
mov
pop
out
or
das
jb
pop
sub
or
xchg
xor
jnp
sub
outsl
and
or
mov
jb
or
mov
add
cld
pop
daa
andl
fldl
nop
mov
shrl
or
sub
cmp
and
push
sub
mov
sub
icebp
subl
cmp
test
cmc
das
rclb
jmp
lds
imul
dec
dec
add
pusha
arpl
jg
lods
push
das
add
lea
or
push
xor
sbb
subb
fisubs
aad
xrelease
sbb
mov
xor
and
aas
out
or
movsl
addr16
add
mov
lahf
ret
fs
sbb
inc
adc
xchg
and
push
and
inc
or
sub
mov
cmpsb
add
std
es
inc
ret
cmp
imul
dec
jb
lock
push
xchg
xor
insl
xchg
loopne
iret
insb
jp
test
jmp
inc
push
pushf
mov
iret
std
shlb
xor
push
cmc
dec
into
jl
lock
and
sub
jmp
mov
mov
add
xlat
cmpsl
pop
cmp
cmp
popa
aas
daa
out
enter
push
fisubs
jno
aas
inc
dec
movsb
data16
cld
test
dec
ss
test
sti
mov
aad
lahf
push
les
cmpsb
push
arpl
jb
cli
xor
mov
push
xchg
pop
orb
jmp
in
int
add
pop
iret
lahf
mov
or
push
ds
les
test
mov
int
or
xchg
mov
mov
mov
nop
sti
or
jle
mov
mov
pop
mov
xchg
jg
lret
jle
push
out
test
sub
jb
movsl
cmp
pop
outsb
hlt
sub
sub
sub
shlb
pop
cmpsl
nop
pop
xor
inc
and
imul
icebp
dec
pop
jb
enter
cli
test
jae
ret
stos
jo
push
lea
aad
xor
sahf
pop
in
cmp
pop
sub
add
out
icebp
xor
test
cs
dec
mov
pop
sub
sbb
rclb
jo
mov
pop
add
inc
sbb
fstpt
mov
es
xor
pop
pop
push
loope
mov
xchg
pop
push
mov
push
popa
add
or
aaa
stc
sub
out
data16
push
cmp
std
xchg
pop
add
cmp
in
lcall
sub
sub
adc
sbb
add
push
inc
jecxz
es
clc
test
inc
popf
es
pop
int
ds
mov
xchg
shlb
jne
cmp
pop
fs
pop
ret
lcall
sub
xchg
loopne
cld
mov
lods
pop
xchg
sub
lods
cmpsb
add
cli
sub
mov
or
aad
data16
pop
inc
pop
push
aam
xchg
push
stos
pop
mov
int
movsb
cs
and
pop
inc
inc
mov
pxor
ljmp
add
ret
or
jl
andl
sbb
push
dec
je
in
adc
mov
mov
repz
and
cmp
cmc
cmp
arpl
ret
pop
bound
jp
in
iret
sar
dec
cltd
xor
rcrl
inc
sub
jmp
pop
xchg
jo
or
push
popa
dec
jmp
jl
cmp
dec
pop
sbb
lods
inc
adc
rcrb
cmp
shl
push
out
mov
jle
in
push
subl
push
xor
sub
rorb
hlt
lock
add
and
cmp
sbb
adc
dec
insb
mov
jmp
iret
xorl
pop
popf
add
gs
hlt
mov
or
cwtl
cltd
xor
movsb
dec
or
lods
aas
in
sub
popl
jne
pop
xchg
xchg
lea
push
lea
rcrb
mov
in
jns
ljmp
jno
mov
or
jne
vpaddq
pushf
sub
inc
int3
pop
and
in
sbbb
dec
jp
jo
jl
xlat
sbb
enter
mov
and
pop
mov
pop
lds
cld
repnz
add
rcll
call
push
mov
mul
xchg
addr16
jns
xlat
jl
loop
jae
push
mov
sub
sbb
sbb
scas
xor
xchg
push
mov
int
pop
xlat
inc
push
fwait
sbb
int3
jo
insb
mov
pop
pushf
xchg
mov
mov
cmp
dec
adc
dec
jp
push
or
ret
push
push
enter
sub
jnp
add
sti
sub
sub
leave
test
cmp
pop
jg
xor
bound
fistpll
ret
add
sbb
mov
aaa
in
jg
mov
bound
mov
mov
in
pushf
xchg
mov
loopne
xor
and
mov
or
add
push
push
pop
mov
pop
insl
inc
inc
push
jmp
xchg
scas
ret
pop
mov
std
mov
mov
sub
jnp
dec
daa
call
jl
push
xor
pop
ds
and
ss
jb
push
cld
push
mov
cli
inc
aam
xor
push
add
mov
idivb
and
popa
push
gs
and
pop
ret
pushl
xor
loope
push
out
xor
lods
pop
jne
inc
dec
sub
push
das
cmp
loopne
fidivs
pop
cs
testb
sahf
or
daa
jns
push
inc
into
sahf
sub
sahf
xchg
dec
sbb
jecxz
jl
mov
enter
hlt
xchg
jbe
stos
orl
clc
or
and
push
push
out
enter
add
cs
das
xchg
jno
test
iret
scas
and
sub
sbb
aas
mov
stos
lods
and
data16
stos
jge
sahf
jne
mov
mov
pop
cmc
arpl
outsl
push
dec
out
cmp
das
push
dec
push
or
fcmovne
inc
mov
ret
jbe
dec
push
xchg
in
pop
pop
das
shl
dec
mov
repz
cli
imul
lods
aaa
int3
pop
in
push
push
sbb
push
pusha
cmpl
clc
sub
mov
inc
dec
rcrb
dec
repnz
pop
and
fs
mov
mov
bound
pop
xchg
push
mov
cltd
loop
xchg
xchg
das
inc
out
aam
jns
pop
pop
jne
imul
pusha
add
testb
les
mov
pop
hlt
adc
jne
pop
fsubl
xor
sub
bound
into
jns
les
ja
ja
flds
bound
sub
push
sbb
icebp
sub
fildll
push
adcb
jg
out
sbb
addr16
push
outsl
inc
dec
mov
xchg
std
pop
lea
testl
arpl
gs
sbb
inc
dec
push
lahf
shll
cmc
jecxz
arpl
loopw
loopne
je
fidivl
iret
push
push
movsl
or
imul
jbe
cli
mov
in
out
sbb
jns
je
into
lahf
jne
xor
push
adc
out
sbb
push
adc
xchg
cmp
or
jns
repz
loopne
mov
jecxz
fadds
pusha
enter
or
xor
jecxz
f2xm1
inc
and
inc
and
arpl
mov
cs
add
or
mov
pop
in
jno
mov
push
enter
add
pushf
inc
popl
ret
popf
shrb
insb
adc
repz
rol
xchg
sti
or
cli
jecxz
inc
fs
pop
pop
aaa
sbb
xorl
pop
inc
out
loope
mov
stc
clc
xchg
jb
test
stos
inc
sub
mov
jge
icebp
inc
xchg
mov
loope
mov
push
pop
mov
xchg
sub
dec
data16
mov
cs
cmpsl
out
fidivrs
mov
xor
mov
lret
push
xor
add
imul
or
inc
stos
xor
xlat
or
nop
clc
arpl
add
in
mov
xor
mov
push
pop
mov
xchg
test
mov
int
mov
loope
sub
mov
cltd
loope
push
bound
xchg
push
add
popf
mov
sbb
xlat
lret
dec
push
cmc
fs
fbld
cmc
sarb
adc
mov
test
arpl
test
fwait
repnz
jle
shl
lret
es
push
sub
inc
xor
jno
lods
mov
and
mov
xor
pop
push
aaa
lret
sub
dec
and
jae
inc
xor
sbb
enter
sahf
cmp
mov
testb
stos
imul
xchg
movsl
mov
xchg
jmp
cmp
xchg
into
mov
and
popa
mov
or
cmp
out
dec
adc
mov
add
inc
arpl
mov
xchg
out
jge
mov
pushf
popf
data16
dec
js
mov
jb
imul
popf
pop
in
outsl
or
ljmp
imulb
imul
addr16
cmp
aam
in
push
dec
and
inc
movsb
insb
int3
fadds
clc
dec
addr16
mov
ss
jb
jno
dec
in
or
xchg
push
xchg
fcoms
adc
sub
add
frstor
cld
fwait
adc
stc
push
es
dec
popa
jns
pusha
loop
cld
lret
rcrl
jnp
mov
iret
mov
mov
jno
leave
fldt
loopne
xchg
pop
or
mov
sub
mov
mov
das
icebp
pop
inc
add
iret
push
je
cs
into
loop
sti
mov
popf
or
push
test
loopne
push
in
and
clc
jae
subb
mov
dec
add
out
pop
stc
push
jmp
das
push
outsb
dec
dec
in
inc
add
repz
and
repnz
fcompl
fcomps
aam
rcrl
nop
inc
mov
cs
lret
aaa
jmp
vpsrld
push
xor
std
scas
mov
sbb
add
mov
jp
gs
or
jne
gs
fwait
jb
and
pop
jg
mov
jp
inc
sbb
in
ja
pop
lea
xchg
ret
idivl
inc
test
pop
negb
sbb
pop
insb
jnp
or
test
jg
and
std
aaa
cli
add
sti
add
mov
mov
or
aaa
push
xchg
mov
fwait
pop
fs
mov
add
push
pushf
xor
lods
lods
std
ljmp
repnz
mov
push
dec
xor
jno
jecxz
and
mov
cmp
xchg
popa
fsubrl
mov
stc
lret
and
lret
jae
rclb
insl
sbb
xchg
add
repz
push
dec
jg
sub
xchg
ds
test
and
push
and
adc
ds
das
pop
cmp
jp
xchg
clc
mov
dec
int3
loopne
outsl
xchg
aaa
sub
in
fimull
aam
cmp
mov
stc
daa
dec
pop
push
pop
add
push
sub
scas
pop
jmp
mov
xor
jns,pt
or
lods
push
sub
jno
fisttps
jecxz
lock
lock
pop
push
ficoml
mov
in
stc
xorl
dec
pushf
jne
fnop
pop
stc
push
dec
jmp
sub
sbb
enter
pop
movsl
pop
movsl
lods
push
add
mov
xlat
mov
mov
pop
sbb
pop
ljmp
fwait
aad
loop
cmp
fildll
pop
pop
ret
xor
dec
outsb
out
and
mov
cltd
dec
inc
jne
cmp
bound
mov
aam
xor
fidivrs
std
inc
imul
inc
jmp
jl
fldl
call
shlb
sub
dec
not
sub
aam
cmp
jle
and
mov
sub
lods
pop
mov
outsl
mov
lret
lods
movsl
enter
std
or
repnz
add
jecxz
jnp
sub
insl
dec
jo
leave
mov
iret
mov
out
outsl
mov
outsl
mov
mov
jbe
fldenv
jbe
ljmp
out
dec
mov
std
push
stos
pop
mov
aam
mov
xchg
outsb
loope
add
cmpsl
and
mov
movsl
fisubrl
ljmp
push
test
or
dec
js
cld
out
pop
xor
shll
jle
pop
sbb
jno
xchg
jae
mov
enter
popa
pusha
out
jae
or
xor
ds
gs
inc
and
es
sbb
in
test
adc
clc
rol
mov
pop
bound
xchg
cli
and
sbb
jo
cmp
insl
sbb
cltd
std
pop
stc
pop
inc
cmp
cmp
xor
mov
repz
mov
inc
popa
sbb
or
pop
pushf
fcmovnu
and
xlat
les
cmp
xor
mov
fmul
enter
scas
inc
pop
fcmovnu
xchg
push
cmp
xchg
out
cmp
jg
inc
and
sub
out
mov
mov
fidivrl
push
xor
jl
mov
sub
mov
lahf
xor
popf
pop
jmp
xchg
or
lods
lock
inc
nop
subps
ja
sub
push
mov
iret
jmp
xchg
pop
mov
pusha
jno
pop
sub
test
frstor
enter
and
or
adc
mov
pop
jns
or
sarb
xor
jg
or
xor
outsb
and
sarb
ret
adc
sub
jge
and
lods
rclb
adc
and
je
or
aam
andl
adc
fmulp
mov
push
pop
push
outsl
icebp
mov
arpl
sub
mov
popl
mov
sub
mov
cld
nop
xor
or
insb
pop
pusha
sbb
jno
adc
cmp
mov
xor
jl
push
ficoms
fistps
loope
lods
rcrl
jo
cmp
cld
xchg
pop
out
mov
jl
pop
and
mov
scas
lods
mov
jnp
fdivp
pop
es
push
movsb
and
orl
inc
gs
rorb
and
sbb
data16
lock
inc
jns
scas
and
fnstcw
xlat
jl
test
push
mov
cmp
xor
fwait
test
ja,pn
les
and
addr16
inc
lods
fdivrs
enter
xchg
ljmp
inc
xor
fisttpl
xchg
inc
cmpsl
shrb
imulb
xor
test
cmp
push
out
mov
enter
mov
and
jbe
int
inc
lret
mov
mov
jl
or
pop
push
sub
clc
pop
cltd
fsubs
arpl
jg
dec
dec
outsl
jmp
shrb
push
int3
jge
sub
cmp
push
add
adc
ss
scas
mov
adc
sahf
mov
ds
in
dec
add
mov
ret
pop
push
out
mov
in
nop
out
cmp
stos
lahf
cld
std
les
sub
push
aaa
sub
cli
ljmp
inc
mov
int
adcl
and
pop
cltd
fxch
pop
mov
lahf
subw
int3
je
jmp
int3
int3
cmp
cmp
xor
fst
repz
lea
mov
pop
push
nop
shll
fnstsw
lods
cmc
sbb
ljmp
fisttps
repz
shll
addr16
lcall
mov
mov
out
or
xor
ret
push
pop
cltd
cmpb
ja
stc
pop
pop
mov
add
or
testl
jl
cmc
mov
jne
out
fildll
sub
stc
lods
dec
or
test
and
lret
jge
sub
loopne
and
mov
or
or
out
loopne
sub
inc
sub
ds
mov
mov
mul
jnp
fmuls
cmp
mov
mov
mov
push
clc
or
sub
and
inc
and
pop
in
sub
sub
lods
dec
inc
dec
into
outsb
ljmp
pushf
test
sarl
adc
jmp
mov
push
call
or
mov
cmp
sti
enter
ret
gs
aas
insl
mov
mov
test
outsl
jg
push
mov
push
std
and
int
ja
sub
or
sti
in
outsb
inc
add
nop
mov
inc
and
sbb
mov
test
inc
jbe
sbb
or
pop
xchg
popf
add
or
repz
arpl
fwait
sub
test
xchg
xor
cmp
adc
sub
sub
dec
out
cli
fisttps
gs
lods
mov
rcrb
mov
sub
push
addr16
cltd
xchg
sti
lahf
cwtl
sbb
inc
dec
mov
ja,pn
jb
push
addb
sub
ss
jecxz
cmp
adcb
addr16
pop
mov
lret
cmpsb
push
jp
fdivrs
repnz
mov
decb
fisubl
push
mov
aam
cmpsb
in
sti
sbb
les
inc
mov
int3
xchg
push
and
pop
inc
lcall
cmp
dec
adc
push
dec
xor
loopne
pop
out
cmp
jge
xchg
add
test
xchg
pop
push
test
hlt
bound
vpcmpeqd
xor
je
shrl
mov
and
lahf
or
jno
in
lods
fnsave
scas
xor
push
cli
and
iret
cli
stos
cwtl
popa
shll
adc
and
mov
pop
test
push
add
or
mov
inc
mov
fs
mov
js
das
sub
jg
add
adc
in
leave
add
push
sbb
adc
cmp
mov
adc
sub
adcb
jecxz
jne
andl
shl
outsb
xchg
icebp
push
mov
xchg
test
pop
inc
call
inc
sbb
je
push
shlb
push
movsl
cmp
popa
cmp
mov
push
je
jnp
fildl
pop
cmp
jbe
aad
pop
xlat
jle
xor
scas
push
pop
cmpsb
int3
inc
mov
rcr
leave
gs
mov
test
jge
dec
rcrb
jae
lret
ret
clc
decb
mov
bound
and
in
sbb
pop
add
addr16
inc
in
loopne
mov
roll
dec
adc
das
fsubrs
hlt
std
les
dec
jp
and
or
sbb
dec
lods
je
mov
mov
push
mov
data16
or
push
fiaddl
enter
pop
cmp
mov
adc
fdivrs
ret
dec
popa
out
or
shll
cli
shll
mov
push
in
push
sbbl
or
sbb
pop
aad
scas
dec
or
cmp
insb
sti
push
inc
add
sub
fwait
sub
mov
inc
lds
cmp
imul
push
sub
pop
xchg
push
pop
or
xor
lods
dec
xchg
in
jle
sub
push
dec
lahf
call
ljmp
test
lret
cmp
sbb
pop
lods
or
and
in
pop
cmp
in
imul
in
or
lods
lcall
lods
xor
inc
mov
pop
mov
testb
pushf
test
roll
add
xchg
xchg
mov
out
push
add
push
xchg
mov
mov
pop
push
and
sahf
mov
pop
xor
rorl
stc
xor
sub
arpl
xchg
fistps
pushf
arpl
push
cli
movsl
or
push
push
data16
mov
cltd
aas
mov
push
or
inc
xorl
insl
pop
jl
stc
bound
sbb
push
jmp
sub
inc
adc
imull
stc
jecxz
xor
lock
and
addr16
xchg
add
std
cmp
rcl
sub
int
jl
pop
jmp
and
sahf
push
cltd
cwtl
jmp
dec
aad
push
test
add
imul
dec
xchg
incb
in
mov
aas
inc
or
out
aam
mov
shlb
push
sub
cmc
push
iret
mov
sub
cld
subl
adc
inc
imul
sbb
and
xor
mov
push
add
cmp
inc
jo
inc
pop
fs
aaa
daa
jecxz
adc
push
jne
and
jl
mov
fldl
loop
fcmovnu
mov
hlt
js
sbbb
fsubr
add
inc
int
sarb
test
int
jl
inc
push
pop
sub
sub
inc
lods
faddl
fs
inc
adc
xor
mov
sub
sub
sub
xchg
adc
add
clc
jae
xchg
lods
sti
lcall
or
notb
add
sbb
dec
stos
lahf
ss
imul
mov
iret
idivl
imul
gs
in
flds
inc
fsubrs
sti
mov
mov
mov
cmpsl
insl
push
out
mul
insl
fcomps
sub
and
jno
cmp
aad
dec
jnp
or
outsb
or
jmp
pop
push
ds
pop
dec
ret
out
ljmp
lds
cmpsl
movsb
or
mov
sub
outsl
mov
movsb
stc
addr16
nop
mov
sbb
push
pop
adc
adc
imul
pop
sbb
inc
mov
xchg
das
ljmp
xlat
xchg
jmp
inc
cmpsl
dec
js
pop
cmp
sub
or
inc
mov
adcl
sbb
mov
xor
cmc
push
push
and
push
jl
xchg
outsl
pop
cld
lea
lret
fstl
insl
xlat
mov
popf
pop
ss
and
leave
push
pop
push
adc
inc
xchg
ja
adcb
inc
add
jne
iret
scas
je
ficoms
scas
scas
inc
push
das
mov
outsl
fisttps
push
cmp
inc
lret
xor
or
jbe
inc
or
in
inc
jb
jo
cmp
inc
rorl
nop
shl
jge
jle
inc
pavgw
xor
cmp
jl
rolb
pop
xor
repnz
sbb
adc
lahf
fsts
ret
xor
aam
sbb
fstl
and
int3
mov
dec
gs
scas
rcrl
ret
loopne
xchg
cmp
hlt
adc
sbb
push
test
nop
mov
adc
insb
call
inc
clc
jnp
ret
pop
mov
cltd
ficompl
ja
add
sub
sbb
cmp
das
shlb
xchg
and
loopne
jo
mov
lds
test
xchg
clc
mov
dec
dec
xchg
sbbb
imul
add
clc
cmovg
mov
jne
mov
mov
xchg
xor
lahf
and
call
mov
loop
lahf
lods
mov
mov
xchg
ret
fsubl
mov
outsb
nop
or
and
sbb
push
add
add
pop
sahf
dec
cli
mov
fldcw
test
add
and
mov
mov
addr16
test
jmp
push
loop
add
and
into
adc
jle
das
punpckhwd
andb
enter
inc
gs
cmpsl
pop
mov
xor
js,pt
cmpsb
mov
outsb
push
jnp
adc
and
sub
pop
ja
lock
pop
xor
adc
jno,pn
adc
repnz
sub
sub
paddusb
sub
inc
mov
bound
cmpsb
int
add
jbe
lods
add
cmc
sub
xchg
mov
mov
aas
test
cmp
insl
add
lret
xchg
inc
insb
lds
ljmp
in
and
sbb
enter
mov
cmp
gs
adc
test
clc
cld
pushf
mov
call
test
outsb
loope
jns
test
paddd
arpl
loop
xor
ret
mov
aad
add
xchg
in
dec
inc
jo
in
sbb
jmp
xor
dec
mov
repz
imul
sbb
in
movb
out
outsl
cli
mov
int
hlt
cmp
outsb
hlt
mov
movsb
leave
inc
fstpl
mov
push
test
or
sti
jp
jle
lods
fstps
ds
aaa
mov
call
jmp
inc
stc
mov
outsb
hlt
outsl
mov
mov
jns
cltd
das
pop
leave
mov
cmp
lret
pop
imul
dec
or
dec
inc
jle
enter
shrd
std
lods
loopne
call
mov
scas
stos
xor
pop
push
xchg
sub
push
push
jmp
push
jecxz
das
or
push
push
ja
cwtl
pop
mov
lds
rcll
jge
adc
out
ffree
adc
dec
leave
mov
xor
popa
jnp
dec
or
inc
testb
or
jp
xor
xor
jo
data16
aas
icebp
push
shll
mov
or
lret
dec
fnstcw
loopne
sub
gs
mov
call
iret
lods
add
testb
rcr
ljmp
outsb
jo
inc
sub
jmp
bound
xchg
out
inc
xor
mov
mov
fbstp
lock
inc
aad
push
xlat
shll
cmp
xor
sub
fsubr
and
pop
pusha
addr16
test
es
ja
mov
out
mov
repnz
lods
sub
adc
mov
mov
stc
iret
adc
rolb
pusha
in
in
xchg
push
mov
ss
lahf
negb
xor
addr16
js
jns
ja
xor
sub
cwtl
push
into
enter
jp
cli
pop
jbe
sub
es
hlt
ret
mulb
dec
cmp
in
jmp
movl
mov
jmp
sahf
hlt
sbb
add
das
mov
adc
pop
xchg
inc
adc
jp
pop
pop
imul
mov
jb
popl
xchg
insl
push
and
movsl
pop
and
jb
adc
mov
std
inc
and
or
and
outsl
xor
inc
push
mov
jnp
cwtl
push
pop
mov
fwait
sbb
gs
fstpl
jbe
sub
stc
shll
sub
jecxz
into
call
sahf
dec
lret
lret
stc
dec
pushf
pop
sbb
mov
outsb
mov
test
pop
inc
mov
imul
lret
lea
push
das
sub
inc
ret
mov
in
adc
popa
fwait
stos
std
pop
js
cmp
mov
lea
pop
add
fimull
push
pop
adc
cmpsl
lods
sub
mov
cmp
lret
push
mov
fstl
lahf
xor
cmpsb
jb
stos
pop
inc
sbb
inc
sub
sarb
sub
cmp
enter
cli
mov
ficomps
and
scas
jp
push
or
dec
sbb
mov
mov
pushl
cs
pop
test
and
cwtl
sub
sub
add
xchg
xor
jo
stc
sbb
sub
ret
ret
sub
add
sahf
fs
pusha
add
or
sbb
jnp
dec
add
push
fidivrl
pop
test
push
xorl
sub
or
xchg
mov
orb
test
dec
lods
in
out
cld
dec
test
and
out
dec
negb
dec
cmovns
ss
sbb
mov
jle
or
mov
inc
sbb
stos
inc
mov
sub
ret
iret
out
ja
outsb
sahf
iret
push
pop
mov
mov
out
out
shrl
sbb
out
xor
pop
cmp
mov
sbb
mov
mov
cld
shlb
xchg
int3
mov
int
fcomps
or
lods
mov
cli
xchg
cmc
dec
mov
mov
xchg
inc
adc
xor
mov
xchg
push
aam
inc
and
ljmp
mov
push
sarl
mov
scas
jg
sti
sub
fs
jmp
mov
rorb
inc
push
adc
mov
fdiv
xor
dec
inc
pop
cld
mov
mov
jle
push
lcall
aad
cmc
push
pop
jne
pop
data16
aas
and
addr16
add
stos
sarl
push
xor
cmp
lahf
or
jge
push
aas
pop
bound
les
cmp
lret
lea
jbe
popa
jne
dec
xor
jg
xchg
shrb
fwait
push
cmp
xor
test
mov
add
addr16
test
pop
les
out
leave
push
add
shl
std
popa
ret
inc
ret
int
lods
mov
sub
mov
arpl
cmp
mov
out
sbb
movsl
jnp
cltd
out
out
mov
lds
data16
shrb
mov
les
iret
test
mov
inc
mov
mov
leave
inc
cmp
xchg
fisubl
out
mov
movsl
cmpsb
je
mov
nop
cmp
bound
cmc
mov
cmp
push
pop
adcl
roll
mov
pextrw
ja
mov
pop
in
xchg
push
and
sbb
add
fs
test
lods
dec
loop
test
push
sbb
xchg
pop
push
dec
fcomp
lret
sti
mov
pop
adc
stc
sbb
inc
lods
inc
push
jno
inc
in
mov
filds
and
shlb
and
lahf
ret
shll
xor
xchg
push
lods
or
xor
dec
pop
daa
mov
call
ret
cs
dec
cld
sub
jnp
sub
es
popf
bound
cmp
js
adc
fyl2x
jp
and
sub
and
idivl
rdmsr
push
push
subb
cli
pop
rcrb
jns
mov
mov
les
inc
pop
sub
mov
jns
inc
mov
cmp
shrl
push
in
pop
xchg
mov
cmc
or
dec
std
aas
sbb
add
xor
imul
ljmp
sahf
int
sbb
add
inc
out
jge
push
movsl
mov
add
push
xor
stc
cs
xchg
paddb
adc
cmc
sub
xchg
sbb
and
adc
mov
mov
pop
aam
scas
mov
movsb
push
out
enter
dec
loop
mov
lcall
outsl
xchg
push
ljmp
js
cld
xor
push
xor
dec
lahf
outsb
std
rclb
repz
lcall
fiaddl
repz
imul
dec
sbb
xchg
jl
ds
std
xchg
push
fbstp
test
repz
js
and
cmp
and
cwtl
push
adc
idivb
push
lea
dec
xchg
dec
rorb
cs
xor
pop
fsubrp
or
popa
out
ljmp
lret
jl
mov
or
daa
cmpsb
pop
stc
inc
mov
test
lret
dec
inc
add
pushf
sub
daa
pop
das
push
push
mov
push
addr16
pop
jnp
add
inc
fwait
xor
inc
mov
xchg
jne
insb
ja
rcrb
test
test
ret
or
lret
repnz
jae
data16
pop
outsl
es
lods
xchg
into
daa
pop
mov
pusha
lods
inc
loope
adc
adc
mov
sarb
lock
sbb
ds
sbb
jns
ds
insl
testb
pushf
in
xchg
sbb
js
pop
stos
xchg
in
outsw
sti
mov
pop
jp
mov
mov
pushf
iret
dec
dec
and
xlat
mov
cmp
pushf
sub
pop
es
mov
repnz
pop
dec
jecxz
mov
jnp
inc
jb
push
xor
jne
push
cmpsl
inc
test
rorl
leave
pop
stc
movlps
adc
mov
int
in
inc
sub
and
xor
mov
cmpsb
test
push
mov
out
add
xchg
mov
cmp
aad
je
ficoms
scas
mov
loop
movsl
notb
mov
repnz
mov
push
fcmovb
popl
mov
dec
add
mov
popa
push
loop
xor
push
mov
mov
jnp
fs
cmpsb
int
xor
test
sbb
push
cmp
sti
mov
pop
inc
shlb
add
rorl
incb
dec
push
push
arpl
push
cmp
ja
or
jmp
push
mov
push
mov
mov
test
sarb
push
fnstsw
in
movsl
sbb
repz
movsb
stos
movsl
shlb
adc
and
mov
ficoms
icebp
pop
in
or
and
xor
rcrb
adc
cli
jne
mov
in
imul
jge
in
jp
mov
out
mov
ljmp
xor
xor
sbb
aad
or
and
js
rcll
or
je
stc
fdivs
loopne
adc
call
enter
divl
rclb
aad
stc
push
add
in
ja
push
cmpsl
sbb
or
data16
push
sub
ds
mov
mov
pop
pop
sarb
mov
in
or
test
sub
daa
popf
cli
mov
jl
loopne
push
jp
pop
push
dec
sbbl
gs
jno
xchg
sub
cltd
xor
jmp
call
jns
sub
aad
lods
in
jno
out
jmp
lcall
mov
mov
arpl
int3
popf
in
sqrtps
lods
and
or
into
mov
roll
ror
pop
mov
neg
push
jmp
xor
dec
outsl
xchg
or
popf
divl
push
or
mov
fildll
mov
das
imul
and
cmp
pop
in
dec
mov
test
and
fldz
mov
out
aas
pop
nop
cmpsb
in
sahf
lahf
sub
nop
xchg
ljmp
fwait
sbb
data16
movsb
mov
daa
cltd
shll
fisubrs
push
push
fcomps
fwait
enter
push
xchg
mov
pop
fsub
enter
addr16
mov
in
stos
ja
add
add
aad
push
xchg
or
push
push
push
push
mov
push
fwait
adc
ljmp
jg
enter
shll
and
sub
scas
fimuls
je,pn
ljmp
sbb
sub
inc
sub
mov
ret
fildll
inc
xor
push
cwtl
mov
push
out
decb
adc
sbb
out
mov
sti
and
xor
jo
dec
adc
xchg
cltd
and
std
bound
insl
rcll
jmp
sti
dec
cwtl
cltd
pop
fwait
in
andl
fimuls
push
jecxz
lret
jbe
mov
and
call
call
mov
mov
lret
jg
jno
cwtl
lods
inc
clc
sub
cmp
dec
out
notl
jbe
call
jo
push
mov
sarb
dec
jl
neg
pop
ficomps
mov
ss
aam
iret
inc
stos
cmp
inc
imul
mov
xor
cmp
cmp
ss
dec
sti
push
sbb
jno
sub
add
aas
sbb
mov
shll
lods
mulb
nop
in
fistpl
inc
jnp
rol
lcall
mov
lock
push
ljmp
jne
int
movsb
pop
hlt
push
pusha
pop
dec
ret
pop
test
or
mov
cmp
fwait
push
push
aas
aas
jl
add
or
shrd
adc
popf
sbb
or
and
mov
sub
jle
repz
xchg
aad
xor
push
or
decl
cld
jnp
add
fs
call
das
imul
mov
mov
enter
and
push
sti
out
sbb
ror
push
xor
sarl
inc
fisttps
ljmp
ja
mov
out
pop
add
push
xchg
mov
ja
ficoms
outsl
jbe
stos
mov
idivb
dec
add
gs
push
xor
stc
movsb
clc
lods
pop
into
stos
mov
subl
mov
sbb
cmpsl
cmp
iret
jmp
sbb
repnz
outsl
repz
mov
xor
sub
jne
pop
sub
xor
add
inc
js
mov
add
xor
push
push
jl
add
shlb
ror
push
sbb
fucomip
outsb
or
push
insb
cmpl
xor
jae
mov
cld
add
subb
push
out
push
movsb
adc
ljmp
bound
jne
pop
sub
fmul
mov
ss
mov
jnp
gs
icebp
jecxz
adc
pop
repnz
pop
das
cwtl
xchg
xchg
xor
cwtl
scas
jbe
xchg
mov
lds
sub
lock
sub
xor
cmp
sub
mov
cmpsl
xorb
out
pushf
or
adc
adc
cmpb
aas
cltd
mov
lcall
xor
fcomi
sub
pop
ret
mov
and
inc
bnd
sbb
cli
out
data16
rcr
mov
add
mov
rcrl
loopne
mov
xchg
xchg
push
or
mov
mov
lds
shrb
sub
adc
sub
push
add
push
movsb
add
call
psrlq
xchg
popa
mov
out
pop
test
or
or
fistpll
mov
adc
orb
xchg
and
rcll
xor
std
hlt
xchg
add
dec
pop
cmp
cmpsb
out
int3
jbe
arpl
add
ficompl
repnz
mov
into
stc
mov
pusha
nop
movsb
dec
scas
jecxz
std
mov
out
cmc
aaa
pushf
je
mov
dec
add
dec
ja
xor
iret
xchg
push
push
sbb
repnz
adc
rclb
rorl
jmp
pusha
mov
mov
lea
gs
hlt
push
xchg
cmp
cmc
out
xor
push
mov
pop
or
cmc
out
shlb
fcom
repnz
adc
or
popf
ret
pop
sbb
jecxz
and
sub
pop
push
and
cmp
rorl
mov
lods
dec
insl
incl
and
sbb
dec
or
jg
xor
cmp
cwtl
shrl
out
mov
dec
and
add
push
jp
fidivs
data16
test
jbe
cld
ljmp
stos
xchg
pushf
jo
xor
sub
adc
inc
scas
inc
adc
pop
xchg
les
push
lods
aam
stos
lcall
xor
and
shrb
loop
cmp
mov
jo
or
sbb
aaa
in
inc
xchg
mull
push
mov
mov
xor
movsb
lods
clc
add
sub
stc
leave
pop
adc
or
repz
pop
imul
pop
out
ja
jo
hlt
dec
mov
cltd
mov
push
add
pop
lret
mov
pop
xor
aas
dec
jmp
adc
mov
pop
add
pusha
push
pop
daa
pop
mov
shl
and
repz
stos
loope
lds
or
jbe
sbb
mov
mov
add
icebp
in
add
shl
adc
lods
popf
pop
xchg
sar
cmpsl
cmp
and
rol
andb
jp
and
xor
pop
fs
adc
lods
cmpsb
in
push
andb
cs
je
mov
js
int3
std
stos
push
shlb
sbb
aad
mov
xor
stos
in
add
leave
ljmp
daa
pop
mov
add
mov
adc
push
xor
test
cmp
sub
sub
jmp
inc
clc
mov
sahf
in
imul
subl
roll
faddp
lock
cmpsb
scas
mov
mov
or
xor
pop
ret
add
lahf
stos
mov
mov
xchg
js
jp
mov
aas
push
sbb
push
jae
sbbb
cmpsb
sar
cwtl
and
rcll
adc
sub
xchg
test
sbb
les
call
pop
inc
aad
push
add
lock
inc
test
ja,pn
gs
mov
cmc
nop
or
mov
sbb
std
hlt
sub
xchg
cmp
popa
sub
adc
mov
mov
or
jecxz
cli
inc
fidivrl
mov
push
xchg
mov
dec
and
xor
adc
lock
sbb
sahf
jle
sub
sub
mov
in
pushf
xchg
mov
repz
pop
pop
mov
andl
aaa
sbb
in
and
jbe
adc
dec
xchg
arpl
outsl
test
pop
push
psllw
pop
test
aad
repnz
les
imul
sarb
js
sarb
pop
cli
xor
mov
repz
shlb
mov
xchg
fisttpll
push
and
sub
dec
xor
jae
mov
leave
push
sbb
lock
lret
mov
insb
adc
push
jbe
imul
xchg
jecxz
push
cmp
jns
push
jmp
inc
sub
outsb
out
or
fldl
inc
data16
pop
dec
jne
std
out
idivl
push
mull
xchg
mov
sbb
fisubl
mov
push
inc
in
outsl
addr16
pop
nop
add
dec
xchg
sbb
shl
into
mov
dec
mov
ret
mov
mov
je
jp
fidivl
mov
js
dec
repnz
inc
xchg
xchg
scas
push
mov
je
push
ds
cmp
es
out
jmp
cmpsl
and
loop
xor
push
inc
addl
shrb
fcoms
scas
jae
xchg
dec
add
or
fcompl
dec
jge
cmp
inc
int3
inc
or
pop
rclb
adc
movsb
dec
mov
lock
mov
inc
std
mov
cltd
movsl
cwtl
xchg
mov
js
sbb
in
adc
inc
cmpsb
es
dec
outsl
pop
movsb
ss
inc
push
call
outsl
repz
xor
inc
push
outsl
push
jp
in
mov
jbe,pn
fdivrs
pop
sub
lods
and
bound
sbb
in
scas
mov
add
xchg
pop
jbe
xor
je
push
mov
fstps
xchg
insl
popf
int3
loopne
loope
jo
sub
add
fsubl
dec
stos
and
or
jbe
popa
shrb
stc
mov
outsb
dec
sahf
xchg
arpl
sub
jno
add
add
aas
js
jle
in
shlb
ret
enter
and
mov
mov
push
jge
cmp
dec
push
xor
mov
add
mov
and
mov
test
add
je
and
leave
jo
test
cld
movsl
rcll
and
xor
jp
pop
lret
daa
add
xor
sub
mov
lock
ret
cmpsl
jns
dec
inc
sub
and
cld
mov
fwait
xchg
adc
pop
decb
inc
fwait
jl
mov
adc
ja,pn
sti
in
mov
push
nop
call
cmp
mov
adc
dec
imul
les
mov
test
mov
sub
cltd
pop
pop
lods
pop
pop
ret
test
sbb
cmpsb
mov
stc
lock
mov
push
shll
jbe
pushf
jmp
stos
mov
mov
iret
jle
mov
xor
nop
mov
aaa
dec
xlat
jno
popa
out
push
ret
aas
xorl
or
inc
cmc
xchg
sub
inc
lret
cltd
clc
test
test
xor
adc
push
jnp
mov
cmp
dec
in
and
mov
inc
push
outsb
clc
ficomps
sbb
and
mov
sub
jle
fisubs
lret
pop
out
dec
adc
lcall
cmp
jge
clc
out
mov
in
push
out
push
cmp
cli
jle
stc
adc
mov
xchg
jnp
inc
push
adc
inc
fidivs
lea
sbb
bound
mov
sahf
jae
insl
mov
inc
divb
sub
mov
add
sub
ljmp
pop
inc
dec
xorl
iret
pop
cmpsl
xchg
pop
xchg
cmp
push
pop
stos
aas
sub
aaa
ret
out
in
leave
aas
mov
popf
lods
loop
mov
push
add
out
sbb
sti
call
push
xor
jmp
nop
movsl
out
into
add
xor
push
sbb
adc
js
add
dec
out
xor
push
xor
pop
lock
inc
mov
sub
pop
mov
pop
fsubrs
mov
mov
rorl
jo
push
repnz
aam
sbb
jbe
mov
mov
pop
mov
test
and
lock
pop
pushf
loope
pop
xchg
xorl
lret
adc
mov
sub
mov
subb
sub
lods
arpl
mov
cmp
sub
mov
and
loop
icebp
clc
push
adc
mov
jno
test
mov
pop
out
mov
sub
xor
fs
xlat
pop
cmp
int
lds
pop
std
push
movsb
and
dec
sub
mov
scas
dec
ret
les
pop
hlt
adc
out
mov
test
xor
rolb
outsb
rorb
loope
cmp
mov
xchg
pusha
sbb
call
iret
inc
cmp
lds
cwtl
das
ret
test
dec
adc
pop
adc
insl
inc
sbb
das
cld
sub
or
dec
cwtl
cmp
fisubl
test
popf
xchg
push
pop
push
arpl
xchg
outsl
std
add
shll
dec
repz
cmp
pop
fisubs
cmp
aad
mov
ffreep
shll
outsb
mov
mov
cmp
push
inc
adc
lods
ror
pop
jnp
sub
sub
cltd
in
das
mov
rolb
xchg
mov
lahf
jbe
push
cmp
insb
aaa
movsl
add
test
add
outsl
imul
xchg
mov
adc
movsl
stos
pop
outsb
pushf
sbb
lahf
xchg
dec
mov
mov
xchg
dec
push
fisubl
ja
mov
jbe
dec
test
pop
sahf
and
mov
stos
jne
lock
das
cmp
fisubl
jmp
mov
sub
push
mov
popf
jge
sub
out
lret
imul
orl
push
mov
xchg
in
das
dec
xchg
xchg
aas
jp
std
out
add
sub
jp
inc
cmp
int
ffree
inc
dec
jnp
test
addr16
call
sbb
movsl
pop
push
dec
hlt
int3
and
fwait
jne
xchg
cmp
mov
shlb
fwait
sub
outsl
xorb
out
xchg
fiadds
cli
inc
pop
stc
rorb
btrl
js
repnz
imul
movsl
dec
push
aad
mov
mov
mov
sbb
dec
push
pop
jne
mov
pop
dec
jo
xchg
cld
loopne
push
test
imul
aam
cmp
mov
push
mov
push
push
pop
inc
mov
inc
push
rolb
cmpsl
dec
hlt
in
and
aaa
jge
into
mov
xlat
sbb
cmp
cmp
xlat
xor
shll
scas
imul
and
ret
cli
aam
dec
ljmp
add
into
fiadds
das
mov
shlb
ds
sub
icebp
inc
pop
js
pop
push
sub
popa
sub
and
mov
add
test
popf
xlat
out
adc
cwtl
jle
cmp
xor
fs
xor
sub
inc
gs
lds
outsb
push
mov
out
push
xchg
lret
mov
pop
inc
movsb
mov
mov
mov
sub
out
pushf
cmpl
pop
dec
mov
dec
nop
fwait
add
jg
insb
add
cld
jecxz
lods
jp
add
dec
in
movsl
cmp
inc
jae
push
inc
aad
lret
and
inc
jl
inc
test
loopne
xor
daa
or
repnz
add
lods
stos
sarl
test
xor
xchg
mov
gs
pop
add
leave
inc
cltd
sbb
inc
sub
or
cmpsl
jo
addr16
dec
lods
cmp
cmpsb
add
jge
outsl
cmpsb
sbb
iret
jle
adcb
jmp
and
lahf
call
dec
mov
push
mov
repz
es
cli
popf
hlt
pop
xor
test
out
xor
lret
pop
mov
ja
and
dec
jmp
pop
lahf
aas
int3
adc
cs
lods
cmp
mov
mov
fcompl
jle
sub
nop
sub
pop
sti
into
es
out
pushf
pop
aam
push
addb
jb
mov
adc
or
data16
into
fwait
mov
jl
mov
add
cmpsb
xchg
fcoms
test
into
add
daa
addr16
ja
lods
mov
xchg
jbe
pop
movsb
adc
xchg
mov
mov
jb
inc
jecxz
push
fldcw
icebp
int3
lahf
insl
daa
jb
pusha
dec
enter
push
neg
movsl
dec
test
cmpsb
clc
dec
jae
idiv
testl
xor
jns
test
inc
push
ds
ljmp
aad
push
jmp
leave
adc
xchg
xor
push
ja
in
mov
inc
test
mov
sub
lods
xchg
out
fldcw
cmp
loop
lods
mov
jp
push
mov
jbe
xchg
pop
in
push
hlt
jmp
or
and
hlt
and
push
jno
and
dec
cmpsb
xchg
fstl
dec
push
bound
pop
lods
jb
and
mov
add
cmp
leave
mov
mov
mov
pushf
mov
daa
mov
aas
pusha
js
xchg
lock
iret
pop
add
sub
ljmp
jb
dec
jb
push
pushf
dec
into
adc
jp
jge
mov
test
and
pop
sarl
loop
mov
xor
aam
data16
and
mov
idiv
pop
in
cmp
mov
sti
adc
gs
add
sbb
mov
jg
movsb
int3
adcb
nop
clc
loop
aad
push
lea
adc
add
and
mov
xor
loopew
shlb
and
lods
push
and
in
js
push
inc
or
adcl
ja
nop
mov
bound
sub
jle
pop
or
shr
aad
fildll
scas
xor
adc
out
arpl
xchg
push
aas
mov
push
jne
popf
and
into
mov
push
inc
insl
xchg
fstpt
sub
and
cwtl
arpl
test
dec
mov
call
testl
fadd
cmpsl
dec
jg
out
jecxz
sbb
stos
inc
mov
out
mov
int3
add
inc
mov
mov
push
std
or
pusha
add
test
stos
es
movsl
jbe
in
sub
adc
mov
or
pop
push
sbb
sbb
inc
jo
push
iret
mov
push
mov
cmp
mov
pop
je
mov
sahf
je
and
in
add
adc
mov
jo
aam
es
pop
push
leave
shll
pop
enter
jmp
in
fsqrt
sarl
pop
data16
push
shrb
pop
daa
call
mov
push
loope
dec
mov
out
in
pop
jbe
mov
xchg
arpl
pop
jge
sahf
adc
sbb
add
mov
stc
les
pushf
push
fs
mov
lds
sbb
mov
mov
jno
clc
imul
loopne
leave
inc
mov
pop
inc
cli
pop
cmp
mov
or
mov
cmp
pop
adc
jnp,pn
jb
mov
push
fmull
xchg
cmp
aam
sbb
mov
mov
ret
loope
jmp
mov
aaa
gs
sub
cmp
sti
cwtl
xchg
push
mov
xchg
insl
adc
cmp
cmp
lods
insl
pop
fcmovne
lds
cld
jg
jp
dec
or
jbe
jmp
shll
lret
jmp
jne
jg
sub
adc
lods
sub
and
xor
aaa
pop
roll
ficompl
adc
shlb
push
je
xor
out
xchg
sbb
sbb
jo
push
cmp
mov
and
pop
stos
mov
loopne
sbb
std
cli
cwtl
hlt
sbb
fildll
xchg
dec
in
dec
sub
arpl
and
fsubrs
or
push
loopne
push
hlt
movsl
jp
pop
mov
push
les
mov
push
add
leave
add
js
je
xorps
xor
xlat
add
fdivl
fists
pop
sbb
mov
cmp
mov
cmp
sti
icebp
xorl
stc
xchg
and
sub
cmp
fwait
shll
imul
cmp
xor
cmc
xchg
add
loop
and
in
cmp
rcr
test
xchg
jp,pt
nop
xchg
daa
xor
mov
lods
pop
int3
push
mov
inc
jae
add
add
outsb
daa
push
loope
insb
xchg
add
pop
lret
rorb
out
sahf
mov
loop
lret
push
mov
mov
xchg
pop
movaps
mov
data16
arpl
ret
inc
mov
mov
out
arpl
call
pushf
pop
inc
incl
push
push
jne
push
outsb
xor
sahf
push
aaa
insb
push
in
divb
imul
jns
jnp
cmc
in
cld
or
xchg
cli
inc
popa
mov
mov
mov
or
jns
adc
jg
sbbl
push
add
outsl
les
lahf
jmp
call
rcl
adc
push
repz
testl
xor
push
out
mov
sbb
stos
xchg
popf
imul
xor
push
pop
aad
push
push
and
lods
or
jl
stos
push
jmp
dec
cli
inc
lock
jmp
data16
fadds
dec
jl
sub
out
cltd
push
jns
xchg
push
and
in
jnp
dec
inc
scas
mov
push
mov
nop
mov
dec
sti
adc
inc
scas
icebp
xchg
or
sbb
xor
mov
sbb
cmp
and
sub
cmp
xlat
lret
and
mov
test
push
popf
loopne
dec
fistpl
jb
adc
rcl
fsin
ja
lcall
fs
adcl
jg
jl
in
dec
mov
xor
sbb
in
dec
add
sub
sbb
movl
xchg
in
lods
inc
shlb
pop
mov
jae
dec
mov
leave
call
out
sub
sarl
inc
subl
dec
xlat
imul
add
push
adc
fdiv
jmp
loop
and
out
scas
xchg
xor
jge
cmpl
lock
mov
pusha
sub
scas
iret
out
xchg
iret
in
push
sahf
xchg
xor
iret
pop
cld
pop
loopne
or
movsl
pop
push
sbb
push
les
mov
dec
ljmp
sub
lods
add
pop
pop
int3
rorl
out
in
popa
stc
test
mov
js
mov
sbb
jl
int3
push
mov
loope
push
iret
ljmp
mov
js
add
add
sbb
dec
pop
mov
mov
cmp
jno
std
imull
fnstsw
cmpsl
inc
arpl
cs
fidivl
xor
inc
lret
xchg
mov
push
xchg
push
mov
sub
jns
fcoms
cwtl
xor
cmpsb
mov
ficomps
mov
inc
sbb
lahf
mov
les
movsl
enter
lds
fdivrl
jp
int3
bound
lretw
xor
cmpsb
xor
or
pop
pop
mov
dec
ljmp
or
movsb
nopl
inc
cld
in
fs
cli
xchg
js
je
cmp
fwait
shrl
push
insl
mov
fdiv
inc
jecxz
fmulp
loope
aad
test
aas
add
inc
inc
sub
or
jbe
cwtl
jne
sbb
scas
adc
add
dec
cmpsb
fisttpll
shl
data16
jl
jo
loopne
pusha
mov
cli
push
jmp
push
aad
inc
faddp
cmp
int3
iret
addr16
xchg
add
pushf
fmul
sti
lcall
dec
movsb
jb
dec
mov
into
into
faddl
fiadds
andb
sahf
dec
pop
call
pop
lds
and
arpl
pushf
lods
mov
xor
rorl
pop
mov
mov
cmp
or
jno
imul
add
leave
and
sub
xchg
inc
popf
cld
inc
filds
es
mov
rcrl
inc
jmp
hlt
sbb
inc
das
aad
cmp
ror
jle
push
push
ja
pushf
cltd
add
xor
stc
dec
jns
idiv
xchg
repnz
pop
popa
clc
fxch
test
std
jmp
lret
jbe
icebp
jmp
sahf
jmp
insb
pop
dec
arpl
jp
mov
sbb
push
xchg
fldl
repnz
in
inc
mov
and
sub
test
je
xor
in
bound
cld
push
movsl
shrb
dec
xor
les
ds
loopne
gs
cmp
dec
push
inc
cmp
push
std
mov
cmpsb
sbb
adc
jle
push
mov
andl
push
popf
mov
adc
enter
and
icebp
out
sbb
mov
xchg
dec
je
mov
jmp
nop
test
or
out
or
cmpsb
or
test
lock
xor
xchg
mov
mov
outsb
mov
ds
fistps
cmp
out
insb
outsl
push
cmp
testl
mov
mov
neg
pop
jno
das
testl
jae
pop
lret
test
stc
add
outsb
sub
test
int3
xor
xchg
stos
jnp
icebp
lea
inc
fisttpll
out
mov
in
pop
jne
add
aam
inc
sbb
fcompl
mov
repnz
inc
cmp
adc
xor
fstpt
outsb
sahf
xchg
mov
dec
bound
mov
popf
xor
cmpsl
or
les
cmpsl
dec
divl
aas
ud2
and
adc
dec
repz
mov
mov
dec
dec
mov
and
inc
aaa
push
add
inc
xor
pop
push
pop
rcll
lods
stos
cltd
cmp
rolb
jmp
je
ljmp
xchg
mov
je
dec
pop
in
mov
add
in
mov
push
dec
das
enter
in
cld
mov
fistpll
sbb
movsl
mov
push
frstor
adc
lock
dec
xchg
xor
movsl
mov
xchg
push
xchg
sub
pop
lcall
mov
pop
insl
stos
pop
and
xchg
fsubp
jp
outsl
add
xor
mov
fsubl
inc
sub
jl
pop
and
sbb
imul
sub
sub
adc
ja
push
push
add
in
jno
jp
mov
test
jg
or
xor
shrb
xor
gs
test
out
add
mov
insb
insl
xor
jne
sti
movsb
movsl
scas
cmp
out
cmp
and
insb
call
repz
movsl
mov
and
xchg
push
jae
push
scas
push
cmp
mov
dec
lods
add
leave
adc
into
ss
mov
or
push
mov
iret
mov
fildl
or
ret
push
aaa
add
addr16
push
iret
std
sbb
mov
push
push
movsb
call
xchg
mov
mov
das
and
cmp
inc
mov
lds
add
rol
xor
mov
outsb
incb
mov
pop
push
mov
icebp
pushf
mov
dec
je
lahf
jle
push
lcall
cwtl
lods
mov
fcmove
fiadds
mov
adc
js
lret
xchg
adc
aaa
xchg
fimuls
nop
cmpsb
xchg
ret
xor
xorb
and
adc
pushf
push
test
xchg
push
inc
in
sbb
jb
pop
xchg
int
mov
push
inc
js
mov
aas
shll
sbb
xchg
mov
mov
xchg
hlt
xchg
stos
movsb
pop
das
leave
fs
mov
xchg
movsl
daa
lret
inc
cmp
sbb
insb
iret
test
movsb
loop
pusha
lds
repnz
mov
addr16
sbb
xor
push
stos
pop
jle
push
xor
fistpl
cwtl
in
cmp
ret
in
fimull
xchg
inc
sub
shlb
mov
adc
pop
dec
in
aaa
dec
enter
push
cs
dec
adc
xchg
mov
mov
mov
cli
pop
push
int
mov
test
les
fs
push
sarb
mov
pusha
jae
stos
insl
jg
mov
add
clc
dec
jecxz
jno
inc
ret
push
jmp
lods
in
mov
add
cltd
mov
jg
cmp
xchg
fstl
xorl
adc
adc
imul
xchg
push
test
out
bound
push
jb
mov
xchg
sti
lret
jmp
jecxz
cmp
fdivrs
lods
cmp
and
mov
daa
sub
mov
fidivrl
sbb
test
sahf
pop
inc
pop
push
iret
cmp
hlt
sub
js
outsl
sbb
insb
push
das
mov
out
shll
int3
ss
jae
or
loopne
lret
xchg
add
test
lds
xor
js
inc
push
jno
jmp
dec
jb
in
pusha
test
and
outsb
cmp
idiv
repnz
pop
repnz
push
outsb
ljmp
movsl
imul
daa
dec
xchg
je
xorb
push
cmc
popa
insl
insb
lcall
sti
add
pop
dec
je
add
test
popa
and
inc
test
ret
cmp
pop
adc
loop
add
and
rolb
mov
cmc
insb
dec
js
mov
jnp
std
inc
sbb
scas
je
xchg
push
jg
mov
xchg
loope
enter
mov
into
test
js
sub
mov
adc
ds
dec
dec
pop
sti
xchg
insl
dec
std
in
xchg
push
xor
adc
iret
jno
js
mov
lods
push
cmpsb
fs
mov
push
mov
loopne
pusha
stos
add
orb
hlt
mov
mov
ficompl
sbbl
js
sbb
and
jmp
mov
pop
inc
sub
dec
in
flds
js
pop
pop
mov
movsb
daa
xor
mov
inc
pop
or
fwait
push
fisttpll
aam
pop
sbb
inc
sti
iret
jns
and
xchg
add
mov
sub
push
cmp
mov
adc
popa
xchg
pop
or
or
jp
clc
mov
mov
mov
iret
pop
mov
fstl
mov
inc
loope
jecxz
out
roll
mov
lods
sub
inc
or
lock
inc
ret
adc
cmpsb
or
mov
sub
mov
loopne
jmp
imul
adc
fs
arpl
icebp
push
or
dec
mov
pxor
mov
sbb
sub
dec
add
hlt
mov
xor
lea
inc
aad
mov
loope
enter
cmp
in
in
pusha
sub
jg
push
or
loope
sbb
mov
inc
cmp
repnz
fldenv
push
stc
xor
scas
push
inc
lret
jle
jne
mov
insb
loope
int
cmp
and
ret
shrl
hlt
scas
scas
or
lea
loop
hlt
aam
bound
lods
idivb
lahf
sub
dec
rol
jmp
or
fcomi
push
int
or
decb
adc
sbb
mov
sbb
sub
dec
cmp
mov
push
sbb
dec
lock
cltd
adc
mov
cmpsl
sarb
mov
inc
shll
loope
int
repnz
inc
and
dec
push
sbb
push
cmpsl
adcb
mov
add
sub
popf
in
sub
das
data16
mov
add
jmp
les
fcompl
xchg
loope
add
pop
mov
add
std
and
fstpl
push
lds
hlt
roll
leave
push
xchg
sbb
stos
add
in
mov
dec
jbe
js
xchg
cmc
ret
inc
mov
fwait
and
lods
jne
xor
mov
ss
sbb
push
inc
rolb
pop
sbb
push
fnstcw
sub
movsb
stos
loop
loopne
dec
mov
inc
bound
fcompl
or
xor
pushf
out
in
jmp
fidivl
hlt
popa
xchg
or
lea
bnd
mov
sbb
xor
int
ljmp
push
je
fwait
int
outsb
sbb
imul
inc
mov
cmp
scas
jl
inc
pusha
test
jge
add
mov
dec
es
mov
ss
cltd
add
cltd
frstor
push
aad
push
rcl
lock
lcall
sbb
push
test
sbb
jecxz
cltd
mov
pop
aad
imul
data16
push
out
pop
rcll
outsl
mov
push
mov
int3
xchg
bound
lods
dec
sbb
orb
loopne
mov
daa
sti
cmp
sub
jle
and
xor
test
push
bound
rcrb
divl
inc
imul
inc
fwait
lret
gs
repnz
pop
cmp
loope
data16
fnsave
xchg
in
pop
xor
call
dec
clc
hlt
orb
cmp
mov
xchg
push
orl
cmp
outsl
scas
add
pop
xchg
sub
stos
lods
jne
sahf
dec
jmp
push
repnz
stos
or
sub
jg
shrl
sub
fadds
mov
xor
adc
outsb
pop
mov
adc
or
pop
inc
xchg
jle
std
leave
sub
sub
aas
lcall
xor
add
inc
in
mov
xor
mov
gs
ljmp
cmp
mov
das
mov
loop
inc
jle
adc
jnp
pop
stos
scas
out
xor
jo
sub
aam
add
sub
adc
push
in
and
mov
cmp
push
jmp
in
mov
cmc
stos
ljmp
repz
repz
dec
mov
fcmovnbe
and
fst
mov
jg
bound
je
mov
ds
andb
sbb
enter
add
mov
lahf
fldz
jno
mov
enter
dec
mulb
xlat
dec
test
push
pusha
jle
jno
jo
fisttpl
mov
shl
in
cmc
mov
sbb
fstl
jp
shrl
pop
fsts
andb
ds
imul
mov
xor
cmp
ja
mov
clc
daa
xchg
pop
out
xchg
push
push
mov
push
aas
cmp
and
xchg
cmc
xor
int
imul
shll
in
rcl
ss
cmp
fs
lret
inc
mov
fsubrp
jge
jo
dec
fdivp
repz
jno
or
das
mov
incl
fldt
data16
arpl
push
mov
or
movb
sub
add
repz
and
lods
rcr
std
scas
add
mov
pop
into
adc
out
push
ss
jecxz
int3
in
cmp
sbb
outsl
xor
cld
adc
push
push
ret
test
scas
sbb
rep
push
pop
rorb
cwtl
xor
jno
or
mov
mov
les
scas
push
inc
test
cmp
dec
aas
lret
push
jmp
popf
lcall
nop
out
pop
jg
addr16
cmpsb
test
dec
fnsave
ret
jmp
xor
mov
fmull
pop
popf
jmp
stc
int3
std
in
jg
push
jne
jmp
nop
dec
jns
leave
adc
dec
xchg
cltd
mov
in
adc
dec
mov
lret
enter
cmp
addl
dec
aad
push
stos
xchg
scas
adc
or
lahf
xchg
lret
pop
sahf
jb
jno
dec
mov
adc
jecxz
jb
fbld
mov
xchg
in
out
mov
sbb
sub
lret
fldt
pop
and
fsubl
addr16
clc
ret
pop
push
sub
enter
dec
inc
jb
in
mov
cld
ret
daa
pop
ljmp
cmpsb
lds
repnz
in
cmp
dec
scas
leave
iret
jae
cld
pop
jmp
jle
shlb
call
jmp
and
inc
mov
insb
and
cmp
adc
hlt
fildll
lds
movsb
sub
mov
sub
and
lds
in
sub
insb
popa
pop
mov
mov
mov
and
mov
test
pop
je
dec
arpl
and
lds
std
movsl
mov
ficompl
xchg
mov
rcll
mov
dec
enter
icebp
outsl
mov
addr16
shrb
out
jle
cwtl
sti
cmp
cvtps2pi
xor
pop
sbb
mov
ret
mov
mov
adc
cwtl
jns
cmp
in
cmp
add
mov
das
jge
mov
fidivs
mov
add
and
and
push
mov
sbb
xchg
pushf
cmp
inc
inc
sbb
addr16
insb
mov
hlt
xchg
mov
out
mov
addr16
stc
mov
call
daa
fildl
inc
fcoms
mov
dec
das
lret
cmpsl
out
and
nop
fdivr
inc
cmp
dec
adc
adc
xchg
jnp
fdivrs
mov
hlt
loop
sub
jp
cli
test
and
ret
cmp
sbb
sub
push
pop
pop
cmpsb
dec
mov
lds
jno
fs
jmp
cmp
rorb
xor
pop
xor
push
lahf
fnsave
sbb
jns
and
repz
shll
sar
jb
loope
inc
lret
or
jne
dec
imul
sbb
arpl
mov
nop
insb
shlb
jecxz
rorb
popf
xchg
fstpt
push
xacquire
jl
inc
fiadds
add
or
shlb
es
imulb
aaa
pop
xchg
aas
mov
push
jnp
lcall
std
push
bnd
movsl
and
repnz
jo
stc
dec
sub
nop
cmp
pop
xlat
sub
imul
outsl
sbb
ljmp
jbe
lret
sar
xchg
je
fsubp
mov
loope
subl
xchg
jg
add
push
outsl
or
arpl
dec
sub
cmovge
mov
mov
jb
and
mov
shl
pop
xlat
dec
mov
push
lods
loopne
xchg
dec
outsl
adc
jno
pop
ret
jecxz
jl
sbb
fidivs
add
adc
dec
loop
mov
es
lea
in
les
in
push
xchg
imul
cmp
aaa
sarb
dec
sbb
mov
insb
fwait
sbb
gs
adc
lcall
cmp
das
scas
cmc
push
loop
add
sbb
iret
repnz
xor
lahf
fistps
dec
push
and
fwait
jmp
or
xchg
jns
insl
pop
es
mov
dec
mov
lods
pop
add
mov
mov
repz
sub
pop
pop
cmp
into
cmc
mov
fs
lods
adc
cwtl
push
mov
pop
fcmovnu
loope
mov
mov
xchg
ss
imul
mov
inc
inc
or
jns
aaa
dec
and
xlat
adc
push
lret
or
dec
insb
mov
jnp
mov
sub
push
cmc
or
sub
sbb
cmp
inc
xchg
les
mov
sub
ret
cltd
ret
enter
pushf
shlb
cwtl
ds
mov
xor
inc
loopne
fidivs
sub
inc
out
jmp
popl
or
sti
mov
sbb
dec
shl
into
movsl
adc
push
pushf
cmp
xor
in
mov
inc
push
nop
out
xor
loop
inc
jg
adc
inc
xor
jae
repz
jbe
cld
push
ror
cmp
mov
movsb
cmpsb
int
push
mov
mov
push
into
push
lret
ss
into
je
dec
into
mov
outsl
sbb
dec
pop
pop
cmp
adc
loop
mov
sbb
ja
sub
das
mov
leave
iret
hlt
and
into
dec
fwait
jl
xchg
sbb
repnz
mov
lock
sub
mov
or
iretw
fistl
popa
icebp
mov
leave
sub
sub
adc
ds
adc
outsb
xor
xor
int3
cmpsb
sti
das
mov
xor
mov
lret
adc
insb
xchg
xchg
out
outsl
dec
leave
lahf
aas
push
jno
xchg
movsl
lahf
idivb
dec
push
xchg
adc
lahf
bound
push
mov
mov
ret
in
test
insb
repz
out
lods
adc
push
adc
lods
jg
cmp
das
into
outsb
sub
mov
cmp
sub
scas
aam
adc
inc
shl
mov
mov
dec
and
ret
xor
sub
loop
push
sub
jecxz
inc
and
and
cltd
fdivl
jae
mov
jne
mov
pop
adc
out
fadds
add
mov
imul
daa
sbb
out
imul
out
cmpsl
sub
xchg
cmpsb
ret
pusha
cmp
fiadds
dec
outsl
pop
xor
pop
ljmp
pop
and
fildll
jl
add
cmp
mov
inc
pop
push
fmul
rol
xchg
les
mov
push
mov
into
fimuls
and
mov
into
dec
adc
ljmp
mov
aam
fs
mov
sub
sbb
stos
in
and
sub
xchg
sbb
xor
imul
pusha
or
push
sub
into
inc
push
inc
jno
shlb
push
pop
loope
enter
fmulp
shrb
mov
outsl
inc
loop
cmp
mov
or
pushf
jb
stc
lea
mov
adc
push
mov
push
lds
loope
jle
daa
mov
xchg
insl
movsl
and
and
movsl
inc
pop
stos
xor
xor
es
mov
popa
or
test
jo
leave
pusha
call
jne
in
inc
std
pop
xchg
movsb
out
loopne
je
xor
outsb
movsb
scas
mov
xchg
sbb
int
pop
lods
mov
pop
int3
xor
orl
push
dec
divl
mov
sbb
out
shrl
rcll
or
iret
lcall
sahf
ret
cltd
loopne
test
divl
icebp
mov
jl
sarb
data16
lods
or
sbb
xor
inc
das
sub
sahf
push
nop
loop
fidivl
aaa
mov
mov
stc
dec
add
pop
and
mov
cmp
int3
mov
pop
sahf
call
cmpl
lock
dec
imul
lods
out
mov
rclb
icebp
sub
sub
sete
cli
pop
stos
das
imul
pushf
fwait
in
mov
inc
popa
movsb
xor
fildl
jl
add
mov
aaa
arpl
aam
lahf
int3
mov
mov
icebp
or
mov
jmp
dec
sbb
push
lea
push
adc
push
movsb
sub
mov
leave
jl
xchg
pop
aas
test
imul
mov
call
or
mov
setns
mov
je
movsl
cmp
and
pop
add
loopne
filds
xor
add
cmp
pop
inc
add
mov
test
lahf
sbb
sub
jmp
xor
data16
xchg
fiadds
sub
inc
jge
aad
cld
icebp
jp
test
push
sub
pop
adc
add
push
mov
std
out
push
out
leave
loop
pusha
xchg
dec
inc
out
adc
xchg
dec
inc
lcall
sbb
imul
fnstsw
cli
test
shlb
cmpsl
mov
gs
mov
pop
stc
pusha
addr16
loope
adc
mov
data16
das
adc
ljmp
gs
mov
lahf
and
xchg
jge
adc
push
dec
push
inc
mov
mov
fidivs
repz
je
sti
sub
lock
out
ss
sbb
jmp
jns
add
mov
jne
mov
inc
rclb
aam
jb
insb
mov
orl
lds
aas
ds
dec
adc
lret
enter
dec
push
scas
push
cmp
sub
repnz
clc
fildl
stos
fimuls
add
cmp
ja
dec
jo
mov
pop
ja
jae
in
in
mov
sub
cmpsb
inc
dec
into
mov
pusha
stos
inc
mov
cmp
push
into
inc
xor
ficompl
inc
cwtl
sub
lcall
add
xchg
jmp
scas
les
ret
shrb
jecxz
jb
add
cmp
cli
adc
sub
outsl
aas
testb
adc
mov
fadds
pop
std
rcrb
xor
pop
jl
pop
ficompl
pop
xor
subb
adcl
shrb
jae
or
mov
cs
pop
add
fcoml
cmp
and
and
fisubrl
fwait
push
xchg
push
xor
mov
test
xor
add
lcall
sti
pop
stos
sarl
jl
pusha
xchg
orl
mov
in
insl
and
fcoms
mov
imulb
push
sbb
add
push
jbe
push
add
inc
mov
fnsave
into
inc
or
cmp
fistl
insb
loopne
adc
cltd
sub
push
movb
test
mov
sub
aas
stos
xor
mov
jmp
cli
loop
inc
outsb
test
add
psubd
data16
test
inc
add
jne
or
mov
daa
shlb
ja
sub
jmp
inc
and
fwait
add
sbb
pop
lahf
insb
pop
mov
and
sub
inc
push
outsl
out
sub
cmp
sbb
pop
popa
xchg
adc
or
aad
inc
clc
fsts
shrb
mov
push
push
leave
sub
test
jge
push
xchg
push
repz
cmp
sbb
xor
mov
addr16
push
push
mov
in
aad
pop
jno
fwait
sub
xchg
movsb
mov
sbb
stos
lds
dec
arpl
xchg
adc
xchg
mov
scas
repz
sbb
and
add
pop
ret
jle
dec
aad
in
or
or
aas
push
sub
jo
push
mov
cltd
push
xchg
mov
call
jne
das
iret
fimull
stos
cmp
dec
sahf
rcr
fildll
aad
mov
das
jo
jns
loop
push
sbb
adc
mov
add
or
lock
cltd
mov
int3
push
dec
in
imul
stos
mov
loope
ret
pop
sbb
jnp
addl
fistpl
lods
icebp
imul
mov
jnp
inc
test
cmp
cmp
sahf
mov
pop
test
shrl
call
mov
sarl
push
or
addb
adc
push
int
rcrl
int3
xchg
mov
in
outsb
xchg
mov
leave
mov
cmp
lcall
mov
ret
push
mov
mov
jecxz
addr16
stos
add
das
sbb
and
push
jnp
mov
shll
mov
mov
add
xchg
lods
pop
outsb
jecxz
mov
lods
test
mov
xchg
ljmp
mov
bound
sbb
cmp
inc
arpl
leave
xchg
pop
in
stos
shlb
pushf
jbe
fldt
cmc
add
into
or
adc
mov
mov
sbb
divb
xor
mov
insb
xor
dec
out
add
outsl
sbb
cli
mov
sub
fsubl
add
jnp
movsb
mov
fnsave
mov
push
mov
pushf
push
or
jl
call
xor
xchg
test
jg
cmp
cmpsl
fistps
cmp
xchg
loop
mov
xchg
and
mov
es
pop
xchg
inc
or
cld
jle
std
mov
out
mov
mov
add
popf
cmp
mov
xchg
in
sub
clc
es
mov
jns
pmaxub
es
mov
ds
sti
add
ljmp
sbb
mov
dec
cld
cmp
lods
sbb
jno
lsl
in
mov
lret
inc
inc
sarl
iret
sub
mov
adc
out
les
pusha
jnp
lret
pop
sub
mov
popa
mov
jns
addb
pop
mov
mov
dec
mov
rorb
sub
adc
add
loop
dec
adc
fwait
mov
sbb
rolb
daa
roll
or
mov
xchg
dec
pushf
hlt
lea
cmp
adc
js
push
sbb
clc
fld
cld
sub
out
sbb
mov
in
jle
icebp
add
vsubsd
popa
push
stc
jl
mov
or
test
cmp
dec
fisttps
dec
pop
jge
fldt
pop
popf
mov
out
nop
xchg
xchg
add
push
ret
mov
mov
mov
mov
popa
pop
lahf
xor
sti
je
in
outsl
jb
cs
sarb
notb
push
test
and
mov
fisubrs
pusha
andl
cld
push
mov
out
std
pop
into
push
leave
mov
test
add
js
add
sbb
pop
mov
out
adc
bound
mov
push
jbe
loop
mov
jmp
sub
mov
loopne
xchg
mov
rolb
or
in
push
add
jp
mov
pop
inc
mov
fidivl
jecxz
jmp
icebp
in
mov
cmpsl
lcall
push
cmp
mov
addr16
call
insb
push
mov
call
lock
jmp
push
or
inc
ljmp
clc
divb
mov
push
scas
dec
ds
loopne
cmp
repnz
jge
xor
gs
sub
xchg
dec
dec
fidivl
cmp
inc
imul
add
sahf
mov
ret
lret
ja
inc
pop
aaa
jbe
xchg
daa
push
nop
pushf
ret
inc
out
dec
call
push
orb
out
xor
lcall
mov
xchg
jg
xor
mov
xor
dec
pusha
push
fcompl
enter
notb
inc
dec
hlt
sub
inc
pop
enter
xor
js
in
push
les
ja
leave
jle
xchg
mov
stos
add
cmp
xchg
inc
push
jno
aaa
lods
adc
adc
xchg
std
cmpsb
aas
mov
sti
mov
sarl
push
popf
ret
aam
iret
jg
inc
push
popa
jecxz
sbb
mov
xchg
dec
popf
call
and
xorl
pop
xor
nop
add
push
xchg
repz
das
iret
repnz
pop
pop
ss
mov
subl
sub
push
lds
lcall
and
hlt
push
gs
aas
arpl
jp
ljmp
adc
fwait
out
out
mov
popa
iret
movsb
push
jae
fdivr
cmc
scas
sbb
sahf
mov
je
adc
pop
jge
pop
lret
test
orb
repnz
or
clc
cli
mov
mov
call
sbb
inc
push
arpl
pop
jbe
sub
lret
lea
push
lcall
sbb
into
lret
fldcw
and
or
arpl
dec
ficompl
test
out
mov
jno
jno
stos
clc
push
ljmp
lock
out
sbb
dec
subb
push
sbb
rolb
xor
gs
and
clc
dec
mov
push
xchg
leave
push
xchg
aas
nop
test
cwtl
dec
or
lcall
ret
popa
das
shrb
pop
push
jb
jmp
ljmp
arpl
popf
or
lock
idivl
ret
lahf
cmp
fcmovne
jbe
and
movsl
pushf
xchg
mov
adc
jo
cmpsb
jo
fsubs
scas
out
lods
movsb
notl
xchg
arpl
dec
leave
test
repz
jle
mov
jne
rclb
test
dec
sbb
adc
adc
fcomp
icebp
test
cmpsl
outsb
lods
mov
inc
add
insb
sarb
je
pop
xchg
ret
out
lcall
ret
sbb
lock
pop
push
rcrb
insl
xchg
lea
mov
test
cmp
mov
cmp
in
xor
ret
sahf
mov
mov
jo
fcmove
sub
dec
or
in
cli
and
push
cmc
sub
mov
lock
outsb
adc
lds
inc
or
push
mov
pop
loopne
sti
fldt
dec
inc
dec
rcl
bound
cmc
dec
arpl
popf
dec
js
lods
xor
lea
fnstcw
push
add
mov
test
ret
inc
out
js
inc
mov
lret
xchg
ljmp
cltd
inc
lock
sub
test
lret
mov
or
test
add
pusha
adc
pop
cmp
jge
push
xor
icebp
or
lahf
sbb
mov
je
mov
call
movsl
or
dec
fisubrl
sub
dec
mov
fwait
lds
push
dec
xchg
lret
adc
shll
sbb
stos
mov
popa
pop
lcall
js
aas
out
fisttpll
daa
mov
repz
scas
jle
pop
push
lahf
cmpsl
push
rcll
subl
adc
or
adc
jno
dec
push
pop
push
pop
repz
fwait
inc
mov
dec
sahf
sbb
xchg
sti
mov
or
push
cmpw
or
and
out
fsts
inc
movsb
mov
enter
xchg
xchg
int
xor
cmp
aam
cltd
popl
test
ja
jno
aas
lcall
xchg
psllq
decb
or
jmp
stos
fyl2xp1
ss
inc
mov
jb
clc
movsl
mov
lock
in
push
pop
push
mov
cltd
clc
lret
add
or
push
inc
cmp
in
push
ret
jmp
inc
and
icebp
rcr
jmp
cwtl
jmp
or
jb
aad
repz
js
sbb
lds
insl
fsubrl
fwait
loop
aam
jmp
in
lret
mov
adc
push
push
hlt
repnz
je
pop
stos
mov
ret
sub
mov
jle
mul
sub
cmp
repnz
and
call
cwtl
sbb
push
adc
ret
mov
dec
in
imul
jo
out
cmpsl
cwtl
pop
mov
or
scas
adc
addl
add
sbb
outsl
dec
enter
popf
mov
js
or
and
leave
stc
sahf
xor
loopne
push
lret
inc
rcrb
inc
push
xchg
or
repnz
push
andl
mov
popf
adc
aas
adc
stos
pop
xchg
adc
aas
cmp
pop
sub
or
pop
sbb
addr16
mov
push
pop
xchg
mov
imul
mov
arpl
insl
mov
or
adc
pop
dec
xchg
sahf
dec
mov
stos
cmp
push
sub
adc
scas
jl
data16
insb
fcmovnb
and
dec
arpl
shll
bound
mov
jl
jo
mov
lock
fdivp
fstpl
sub
inc
js
inc
in
or
daa
cmc
mov
clc
stos
cld
les
les
mov
xchg
leave
cmp
pop
mov
mov
mov
xchg
psadbw
sub
inc
jnp
and
xor
pop
pushf
cmpsb
ja
push
pop
sti
mov
icebp
ja
xchg
inc
test
stc
std
cmp
adc
popa
push
inc
jae
clc
sbb
jle
mov
std
sarb
shlw
out
and
movl
push
mov
mov
inc
shl
inc
bound
ss
sub
ficompl
test
xor
outsl
jl
add
pop
shlb
mov
jno
icebp
jecxz
sub
outsl
inc
mov
xlat
xchg
xchg
or
jne
andb
cmpsb
inc
jb
inc
jbe
arpl
mov
repz
loopne
ret
mov
jb
insb
mov
lahf
xor
lahf
add
popaw
cltd
fmul
mov
cld
daa
jnp
or
out
push
cmpl
sub
xchg
leave
sub
sub
jnp
aam
cmp
jns
mov
fwait
mov
sbb
add
inc
sti
fwait
and
scas
aas
mov
adc
shlb
icebp
lock
loop
mov
arpl
mov
stos
shll
jle
or
or
lret
or
test
loopne
xchg
popf
outsl
outsb
cs
int
lock
dec
jnp
addr16
cmp
movsl
cmp
sbb
xor
orb
sbb
sub
packssdw
divl
sar
das
sub
dec
fnsave
out
fsubrs
xor
in
dec
mov
nop
mov
dec
pop
pop
mov
int3
jnp
cmp
mov
xor
jno
ror
sti
mov
mov
push
rolb
pop
in
lcall
cmpb
sti
lret
fadds
mov
sub
mov
les
cwtl
sub
sbb
dec
les
pushf
leave
aad
shrb
push
pop
xrelease
ret
fisttpll
xlat
xchg
mov
rcrl
ret
adc
daa
outsl
clc
fucomi
dec
fsubrl
shll
sbb
mov
jbe
aaa
cltd
adc
divl
in
xchg
cmp
inc
xor
cmp
inc
jno
mov
push
lock
sub
xor
adc
pop
push
cld
or
inc
std
pop
movsl
movsl
out
les
push
ficomps
jae
cmp
inc
scas
fistpll
adc
push
inc
xchg
bound
xor
or
xlat
adc
in
inc
fcoml
pusha
xor
jge
or
push
pop
popf
mov
lods
out
lods
fists
daa
out
add
lock
enter
shrb
fildl
subb
dec
or
addl
dec
jbe
pop
cmp
jge
mov
push
andb
cmp
dec
mov
iret
ds
shll
hlt
aad
mov
adc
adc
jb
fisubrs
cmpsb
in
std
add
push
test
push
adc
in
adc
daa
sub
cmpsl
sub
and
cmp
pop
mov
cmp
mov
pop
adc
pop
das
insl
shlb
and
clc
lahf
dec
and
and
cmp
sbb
lock
xchg
inc
and
xchg
and
sahf
add
push
out
mov
sbb
aam
lahf
inc
xor
xchg
icebp
or
xor
pop
inc
push
adc
je
push
inc
mov
mov
and
dec
dec
push
jp
sbb
jmp
out
xchg
inc
jbe
int3
outsb
fsub
outsl
lods
out
jb
addr16
sub
sbb
jbe
out
clc
xchg
in
adc
push
pop
xchg
push
aad
cmp
icebp
cltd
movups
leave
xchg
adc
aas
or
rcll
loope
sbb
xchg
stc
popa
loopne
iret
jns
out
lcall
mov
jp
mov
cmp
into
cli
stc
pop
mov
lods
decl
popf
fcoml
and
xor
jl
leave
out
inc
and
aam
popf
xor
ja
ret
fcmovnb
hlt
mov
stc
dec
and
xchg
mov
inc
fidivrs
and
xor
pop
push
aas
xchg
ja
lcall
adc
mov
es
xchg
dec
lea
sarl
pop
lret
sbb
test
or
sbb
cltd
push
js
add
inc
das
jg
sbb
icebp
push
xor
jecxz
add
or
push
push
inc
cmp
leave
popf
in
inc
loope
or
loopne
fstpt
pusha
adcb
and
cmpxchg
loop
iret
cli
test
ljmp
enter
xchg
out
jns
mov
repnz
dec
jo
popf
add
jbe
pop
or
inc
pop
push
and
cmpsl
ficoml
hlt
addl
fiaddl
and
xor
xchg
filds
test
xor
movsl
mov
mov
dec
cmpb
mov
mov
xchg
rolb
sub
scas
pop
and
out
pushf
cmp
scas
mov
js
dec
xchg
xor
inc
aad
push
xchg
push
neg
xor
adc
pushf
xchg
add
sbb
loop
add
mov
adc
and
mov
mov
fstps
sub
pusha
je
add
hlt
inc
call
jne
pop
fsubs
test
sub
mov
pop
fwait
pop
bound
filds
test
ljmp
stos
iret
or
popf
fidivrl
jge,pn
sub
mull
add
lret
cld
fcoml
in
ret
stc
dec
xor
loopne
push
add
rcrl
xor
dec
cmp
xchg
push
faddl
roll
jb
mov
fst
mov
out
push
inc
pop
mov
je
mov
mov
add
push
mov
popf
xchg
mov
fld1
push
loope
shrb
popa
mov
mov
dec
add
icebp
xor
shr
sub
lods
and
xchg
push
test
inc
rclb
loop
dec
pop
in
mov
jle
or
dec
cwtl
xchg
imul
push
lock
leave
cmpsb
dec
test
out
loopne
jmp
frstor
and
stos
xorl
jge
mov
scas
xor
shll
enter
ficompl
shrl
stos
data16
adc
repz
and
int
dec
xchg
out
or
cld
out
js
sub
into
int3
mov
outsb
push
stos
shl
mov
and
mov
push
sub
leave
imul
icebp
std
fisubl
repz
outsb
xchg
adc
dec
push
push
rorb
daa
stos
aam
les
sbb
aaa
lahf
andb
out
inc
movsl
mov
scas
and
repz
xchg
or
rorl
jl
mov
mov
jno
sti
xor
push
stos
lds
add
int
xor
adc
adc
adc
lret
or
test
mov
push
gs
mov
les
or
lret
test
pop
jbe
outsl
jno
add
mov
dec
jp
jmp
push
inc
in
sub
inc
out
bound
pop
mov
cld
inc
sbb
push
icebp
push
mov
bound
sbb
add
faddl
rep
lret
cmp
and
out
in
aam
je
xor
rclb
outsl
push
lods
ret
mov
jg
push
dec
and
mov
movl
out
out
dec
mov
das
jns
or
adc
push
jl
xchg
imul
into
inc
cmpsl
xor
movsl
add
sbb
repnz
into
popa
nop
dec
jae
scas
in
sub
cmp
les
or
xlat
inc
push
xchg
imul
in
mov
add
fildll
in
sarl
jle
fimull
cld
iret
rcr
mov
xchg
jnp
es
cmp
cmp
jno
xchg
call
out
dec
lock
into
repz
loop
int
cs
adc
mov
sub
test
sbb
cmp
rcr
inc
out
sarb
fists
lock
pushf
jle
and
test
cmp
test
or
imul
cmp
sbb
roll
sbb
iret
test
sbb
push
jge
and
seta
adc
inc
mov
pop
fnstsw
imul
stc
xor
test
loop
xor
dec
pop
ret
fimuls
xchg
popl
call
push
std
je
cs
jge
dec
cmp
xchg
push
jae
or
push
sar
or
or
mov
fistpll
out
mov
jnp
adc
cwtl
aam
pop
xor
xchg
inc
daa
cld
out
divb
ret
push
out
mov
rorb
loope
cmp
sub
loop
add
loopne
xor
add
mov
ja
mov
ljmp
aam
inc
sbb
mov
out
lret
xlat
add
js
outsl
lds
mov
cmpsl
test
cmc
xchg
mov
js
push
mov
int3
jne
lock
repz
inc
sbb
mov
push
ret
adc
jl
pop
xor
call
lcall
jle
aad
movsl
stc
adc
adc
push
mov
push
mov
inc
xchg
ja
addr16
cmpsb
ds
rcrl
in
insb
adc
push
out
cmpsb
incl
mov
push
dec
adc
test
sub
nop
adc
jb
outsl
jns
mov
loope
fbstp
sub
dec
jne
ret
mov
mov
icebp
and
es
push
cmpsb
nop
cwtl
sub
xor
pop
xchg
cmpsb
hlt
mov
fwait
add
lcall
add
xchg
xchg
adc
daa
lds
loopne
pushf
enter
loop
sbb
in
or
mov
lahf
cmp
jae
mov
inc
mov
inc
loop
fwait
jmp
repnz
sti
ljmp
jge
push
push
or
pop
call
adc
cmp
addl
fwait
adc
fdivl
mov
insl
jle
xchg
dec
arpl
add
pop
gs
call
shll
cmpsb
jmp
lods
xchg
adc
enter
cli
mov
sbb
shlb
mov
adc
xor
jbe
fcmovbe
mov
xchg
mov
mov
add
jo
or
addb
xor
test
dec
popa
push
test
mov
lret
push
lret
mov
xor
xchg
jb
adc
call
bound
fsub
xor
jo
xor
and
mov
dec
mov
repz
mov
les
push
imul
mov
mov
mov
or
int3
adc
fadds
mov
dec
dec
cli
ret
mov
pop
and
imul
or
xchg
idivb
popa
mov
cmpsb
pop
cmpsl
inc
push
in
lret
mov
mov
pop
jo
out
mov
push
xchg
insb
arpl
rcll
push
fiaddl
aas
sahf
hlt
out
push
jg
push
xor
push
sbb
lea
ljmp
punpckhdq
xor
cmp
cwtl
adc
leave
adc
dec
mov
jg
cmp
rcl
mov
cmc
and
hlt
inc
aad
sti
xchg
mov
loop
jg
push
and
mov
cmp
xor
sub
sbb
fsub
adc
pop
pushf
aam
loop
pop
mov
hlt
push
test
test
adc
mov
aas
add
in
fidivs
lods
aaa
lods
dec
xchg
push
mov
xor
inc
fcmovne
jns
xchg
ja
imul
mov
push
ja
xor
dec
inc
push
js
nop
sub
dec
pop
push
adc
addr16
mov
sbb
sub
xchg
pusha
sbb
ja
sahf
aam
outsl
lret
loopne
cltd
sbb
jl
in
mov
and
fstpl
xorb
mov
stos
pop
push
cltd
aad
sbb
les
or
fbstp
pop
in
rclb
out
pop
sti
add
test
das
mov
daa
js
mov
rorb
aaa
mov
jmp
repz
sbb
scas
int
insb
dec
push
not
mov
aam
ja
loop
and
mov
add
mov
in
and
push
xchg
xchg
sbb
cmpsl
dec
sbb
pop
mov
out
mov
clts
push
enter
call
lock
xcrypt-ofb
cmpsl
jmp
cmpsl
bound
push
sbb
shr
mov
into
movsb
and
inc
rcrl
jle
pop
rolb
inc
push
mov
shl
mov
fs
xchg
out
and
push
lods
push
scas
jge
pop
pusha
dec
popf
addr16
aad
adc
fidivrl
or
adc
shl
daa
out
sub
js
bound
mov
sub
loopne
push
mov
cld
sub
jp
adc
mov
decb
xor
ds
fcomps
jns
shrb
xchg
sbb
sub
adc
jbe
mov
lods
pop
adc
and
fidivrs
pop
js
ljmp
push
out
insb
sbbl
adc
dec
xor
lds
imul
fwait
inc
sub
xlat
xor
cmpb
mov
sarb
dec
test
mov
movsl
jg
gs
ds
dec
pushf
cmp
mov
xchg
add
pop
inc
nop
sbbl
jnp
xor
cmpsb
mov
jl
lods
xchg
push
cmpsb
idivb
sub
shl
adc
push
push
popf
mov
mov
movb
or
cs
js
ja
jmp
out
orb
enter
stos
mov
and
out
push
lret
mov
pop
in
subb
push
jns
ja
and
xchg
mov
int3
adc
ljmp
inc
stos
hlt
popa
out
scas
adc
adc
mov
pop
adc
mov
ds
ret
jecxz
cmp
push
rolb
cwtl
ffree
fdivl
push
imul
enter
ljmp
push
jg
jne
dec
adc
jo
mov
fsubs
ljmp
js
dec
jno
jecxz
mov
dec
jp
xor
push
das
cmp
test
add
enter
call
imul
xor
jns
inc
push
pop
and
xchg
sbb
xor
xchg
out
cs
aam
sub
cli
adc
and
pusha
or
frstor
repnz
ret
dec
or
jecxz
adc
pop
fstpt
cmp
cmp
push
adc
out
ljmp
xchg
fidivrs
lods
jmp
lods
insb
xor
xchg
test
xchg
lcall
pop
push
push
add
mov
sbb
adc
iret
in
icebp
adc
pop
mov
lock
sub
sub
xchg
js
xchg
cmpsb
mov
fistps
das
scas
sbb
mov
and
test
cld
lea
ja
repnz
cs
xchg
addl
stos
ja
iret
cmpsb
push
aaa
push
fistpll
cmp
repnz
pop
push
rcr
cltd
add
pusha
dec
popf
and
lret
notb
push
stc
sub
push
push
mov
and
lahf
lcall
movsb
cmc
cltd
xor
pushf
cld
rolb
popa
jo
xchg
rolb
mov
negl
std
adc
sub
fdivl
inc
cwtl
call
loopne
adc
cmp
jae
outsb
pop
xor
dec
or
bound
rorb
insb
cmp
mov
pop
jno
lods
mov
inc
lahf
mov
mov
popf
cmc
xor
and
jb
push
cmp
lcall
inc
das
and
dec
cmp
mov
or
fbld
adc
mov
outsl
lods
xchg
movsb
rcrl
ss
rcrb
out
cmpsl
outsl
clc
mov
xchg
ljmp
pop
in
data16
inc
mov
aam
movsb
jmp
sub
sbb
or
jecxz
sbb
jp
data16
stc
xor
xchg
ret
xchg
inc
push
jp
jbe
movsl
lods
add
push
sub
inc
and
into
aaa
test
addr16
and
scas
mov
inc
inc
adc
jb
pop
std
call
adc
mov
inc
adc
les
and
rcll
mov
lods
in
movsl
add
sub
fistl
adc
push
fs
lcall
push
ljmp
inc
pusha
mov
gs
ds
cli
jo
fs
iret
xor
mov
pop
cmc
mov
aad
test
lahf
pop
pop
fucomi
in
in
cmp
sbb
mov
jg
adc
or
call
add
imul
lods
cmp
mov
stc
mov
mov
testb
mov
and
mov
mov
imul
rcll
mov
push
inc
out
inc
out
sbb
pop
negb
dec
mov
mov
das
mov
sarb
mov
test
idivl
test
cltd
xor
je
and
fists
sub
xor
dec
std
lret
pop
cs
inc
lods
in
in
sbb
iret
mov
inc
jmp
iret
cli
fldl
dec
fwait
imul
cs
or
repz
das
bound
fdivl
mov
shrb
out
jns
negl
xchg
cli
ss
out
xchg
jl
mov
pop
cld
pushl
stc
mov
lds
cmp
xchg
push
mov
and
push
xor
cmp
cld
and
sbb
test
xchg
cmp
int
cmp
and
mov
popf
mov
stos
add
pusha
ja
dec
mov
cmp
pop
push
cmpsb
mov
cmp
imul
jecxz
add
pop
in
adc
je
or
push
subl
xor
mov
ja
push
adc
jae
addr16
xchg
decl
roll
mov
add
mov
sarb
inc
xchg
mov
inc
sbb
cmp
repnz
rorb
mov
test
data16
int
cmc
xchg
scas
pop
mov
cmc
jge
out
mov
aaa
bound
cmp
outsb
dec
jle
iret
lret
imul
jp
pushf
xchg
or
push
lods
xorb
cmp
jne
sub
fcomps
cmp
mov
jmp
or
in
push
fsts
cld
inc
pop
cmp
push
imul
xor
or
mov
int3
xchg
lods
mov
fwait
mov
add
hlt
addr16
add
ljmp
push
fidivrs
jecxz
xlat
mov
outsl
dec
inc
pop
popf
fwait
jo
xor
mov
pusha
pop
in
adc
lcall
xchg
cmp
sub
mov
imul
mov
repz
mov
mov
cmp
fs
jg
xchg
out
pop
sti
inc
std
icebp
bound
mov
or
lret
lods
mov
xor
cli
pop
adc
mov
cmpb
ror
push
xor
stos
lds
adc
sbb
jge
sbb
clc
int3
jns
jno
cli
dec
in
jl
xchg
and
xchg
pop
xchg
and
inc
inc
cmpsl
js
cwtl
jb
ljmp
xchg
lods
sub
add
jnp
xchg
bnd
orl
daa
sub
inc
cmp
inc
sub
out
xchg
nop
shlb
xchg
mov
iret
push
rclb
or
push
repz
fiadds
adc
stc
pop
cmp
imul
add
icebp
add
je
divl
inc
pushf
add
test
aaa
pop
js
adc
cwtl
sub
fcoms
sahf
adc
ss
cld
adc
dec
inc
mov
add
and
inc
push
lods
not
idivb
aas
jne
xlat
cmp
mov
test
rcrb
imulb
add
xchg
mov
aaa
add
sbb
dec
sub
sbb
xchg
xchg
jmp
ja
inc
wrmsr
lahf
jg
or
add
mov
out
ror
int3
sti
loop
idiv
bswap
add
call
gs
mov
sbb
or
and
sbb
fnstcw
outsb
jae
daa
out
mov
cmp
xor
insl
mov
cltd
cs
xlat
js
or
lock
ljmp
pop
xchg
aad
cmpsl
inc
in
adcl
push
sbb
and
pop
mov
iret
ljmp
testb
inc
push
sub
push
cmpsl
pop
data16
inc
xchg
xor
adc
push
cmp
adc
cmpsb
enter
lcall
out
stos
int
dec
dec
imul
loope
mov
ret
fs
stc
add
sbb
pushf
rclb
out
jno
sar
mov
imul
stos
or
stos
xor
xor
fstp
movsb
jp
inc
add
nop
sbbl
adc
shl
jo
mov
je
out
aam
in
das
adc
push
decb
ret
xor
mov
mov
and
xchg
adc
js
cmpsb
clc
lcall
jge
and
out
ja
or
and
repnz
xor
lahf
lods
push
jge
mov
or
or
int
jns
out
sbb
pop
jl
inc
inc
jnp
mov
pop
pop
push
adc
addr16
test
roll
shlb
aam
aas
mov
mov
lock
jmp
jbe
or
lea
and
imul
pop
loope
fimuls
out
pop
xchg
sub
and
inc
nop
cmc
cmpsb
add
cmp
push
lret
adc
mov
pop
test
push
pop
ficompl
xor
jmp
add
jns
mov
cmp
jl
ret
test
jmp
xor
fwait
mov
stc
and
xor
cmpsb
js
push
es
sbb
and
popa
aas
mov
or
roll
cmp
iret
test
aam
inc
rol
ret
andb
add
sub
lock
pop
fistps
pop
pop
lret
push
divb
push
cmp
xchg
push
and
subl
ret
mov
sahf
cmp
xor
or
or
add
xor
rcrl
push
mov
insl
ret
mov
sub
pop
scas
cmp
aas
pop
mov
and
push
dec
popf
lahf
lock
mov
fsubs
stos
imul
mov
cs
cmp
lcall
insb
adc
mov
dec
lock
jo
xor
out
js
mov
mov
lahf
or
inc
sbb
fcompl
out
ja
loop
cmpsb
test
and
outsb
jne
flds
repz
xchg
test
mov
loopne
xor
mov
aas
es
sub
mov
push
cmp
repz
mov
pop
mov
xchg
cmp
add
or
fcmove
enter
sub
push
sarl
daa
ss
insb
repnz
cmp
xchg
or
mov
mov
out
add
test
adc
pop
movsb
mov
leave
testb
jae
cltd
cwtl
push
xchg
in
daa
pop
sbb
or
sbbl
cmp
adc
mov
push
test
add
xor
fsubrl
cmp
decl
jnp
pop
mov
mov
inc
mov
out
subl
out
call
cmp
sub
cmc
pop
pop
add
push
out
imul
add
call
lods
cld
pop
andb
dec
mov
cmpsb
rorb
and
jp
cmp
mov
out
push
and
add
or
mov
rcrb
cmc
mov
loope
adc
stos
pop
or
jg
test
leave
fcompl
pop
or
lahf
xchg
fsubrl
sbb
das
lcall
push
rorl
out
stos
faddl
or
clc
mov
jg
stos
xchg
cmp
ret
mov
or
mov
in
cmc
push
in
ja
out
and
jbe
sarb
test
pop
repz
dec
and
or
lret
sub
inc
mov
add
fsubrp
test
lcall
pop
sub
lahf
jnp
mov
insl
sti
add
mov
and
repnz
test
fdivrs
sub
sahf
out
jp
mov
andb
push
imul
adc
ss
test
sub
daa
lcall
mov
aaa
cs
add
leave
lods
bnd
cltd
loope
sub
daa
pop
xchg
mov
and
push
repnz
stos
faddl
adc
ljmp
cwtl
fisttpl
inc
jp
pop
push
mov
mov
pusha
jp
xor
inc
roll
mov
popf
fldt
shlb
xor
xchg
push
int
jg
aam
outsl
jmp
dec
icebp
xor
sub
or
call
daa
xor
cli
jb
cmp
jo
push
cmpsb
jecxz
pop
bound
pop
dec
cmp
xor
jl
jbe
movq
adc
sarb
sub
jle
pop
mov
pushf
push
pop
mov
push
ljmp
dec
jno
popf
jae
push
mov
enter
mov
add
pop
add
sub
jge
ror
dec
je
dec
mov
int
aaa
xchg
test
inc
mov
adc
sarb
push
mov
shlb
xor
inc
stc
push
or
cmpsb
jb
lret
imul
lret
pop
push
daa
out
sbb
mov
jecxz
rcll
stos
sbb
jl
test
xlat
pushaw
pop
inc
pop
hlt
in
and
ret
push
sub
sarb
aaa
pop
xchg
les
ficoms
movsl
cmp
aad
sbbl
xchg
cmp
in
cli
mov
xor
jge
and
js
scas
test
mov
cmpsl
mov
call
jae
add
push
loop
mov
xor
rcl
and
in
add
push
pop
jge
out
or
sub
lret
shr
jg
jo
mov
mov
in
xlat
and
jg
sbb
stos
jmp
add
pminsw
aam
push
mov
push
pop
sbb
test
sbb
jbe
addb
and
scas
icebp
xchg
mov
or
mov
out
cmc
pop
outsb
pop
dec
cltd
out
adc
add
xchg
mov
mov
rolb
mov
sbb
popa
mov
int
imul
gs
xchg
sarl
mov
inc
mov
inc
incl
nop
testl
scas
icebp
mov
and
add
or
mov
imul
dec
sbb
push
add
fimull
mov
pop
jmp
sub
pop
std
lock
sti
fbld
jg
sbbl
mov
pop
jne
pop
pop
repnz
mov
push
stos
mov
call
sub
scas
sub
sbb
inc
imul
mov
push
inc
mov
pop
inc
jbe
cs
scas
pop
cmp
lahf
inc
add
nop
pushf
xchg
stc
mov
mov
mov
add
or
popa
enter
ja
aas
int
stos
pop
push
pop
fcmovu
cmpsl
out
orl
lods
push
sub
sbb
sbb
loope
cwtl
push
out
sbb
push
or
adc
xor
dec
cld
add
add
dec
fidivrs
call
addr16
add
and
dec
pop
xchg
cmpsb
jo
out
push
adc
push
sbb
adcb
push
mov
aas
and
xchg
loopne
sahf
cmpl
mov
cld
inc
mov
outsl
pushfw
or
pop
aad
fs
lock
jb
jb
mov
mov
jp
mov
popa
add
push
mov
adcb
or
repz
adc
fsub
lret
xor
out
dec
imul
jno
push
negb
sahf
inc
add
rcr
jae
scas
inc
xchg
cmp
cmp
fcompl
arpl
push
shlb
jnp
dec
dec
popa
fwait
arpl
mov
xor
jb
int3
push
xlat
mov
add
ret
in
adcb
jb
enter
cmc
pop
push
cmp
cmp
sbb
mov
mov
push
pop
ja
or
sahf
out
and
mov
mov
lcall
cmc
mov
fwait
adc
mov
cmp
ds
pop
push
in
cmpsl
inc
mov
cmpsb
mov
xchg
shlb
addr16
dec
inc
daa
rcll
inc
rorb
cmp
scas
xchg
sbb
mov
inc
sbb
out
sub
cs
add
test
lea
out
push
mov
and
ljmp
int
and
xchg
mov
xchg
icebp
fsubrs
divl
ljmp
sub
ss
mov
mov
scas
sbb
mov
xchg
ja
lods
xchg
cmpsb
xchg
in
fwait
xadd
in
push
rorl
subl
push
cmp
pushf
mov
icebp
add
mov
jne
dec
shlb
iret
pop
pusha
dec
cwtl
dec
es
sub
cs
test
mov
push
fnstsw
fcomip
adc
inc
arpl
or
jae
out
xchg
pop
fldenv
out
adc
jb
movsb
push
mov
adc
movsl
jb
das
out
mov
xchg
inc
fstp
jo
movsl
push
xor
jnp
cwtl
fstp
sti
mov
adc
mov
adc
loopne
pop
cmp
data16
repz
and
push
leave
mov
push
ror
shr
and
mov
roll
push
mov
cmp
and
sbb
clc
push
xor
and
jp
mov
sbb
popa
ret
xchg
add
add
mov
push
push
pop
loope
jle
dec
mov
and
insl
inc
jns
je
scas
add
addl
mov
outsl
xlat
mov
fidivl
out
cmp
jbe
dec
fidivl
in
jge
fistps
shlb
int
aaa
out
add
in
inc
jo
imul
xor
mov
sbb
icebp
imul
jne
sub
xlat
xchg
and
aad
aam
xor
and
ljmp
loope
testb
inc
daa
sub
jnp
push
cmc
jl
sub
adc
sarb
in
sbb
add
cmpsl
and
jmp
lcall
lods
and
inc
dec
dec
pop
and
lods
sbb
cmpl
aas
or
push
pop
or
lret
insb
stos
int
xchg
push
jno
mov
xchg
mov
push
movsb
or
and
jno
fbstp
sbb
icebp
sbb
add
adc
adc
roll
ret
jb
pushf
xchg
jmp
jae
ret
and
mov
cwtl
stc
jle
test
jecxz
out
mov
adc
adc
or
xchg
mov
mov
dec
imul
push
jns
sarl
sub
fists
test
stc
roll
daa
insl
leave
popa
scas
std
in
inc
mov
mov
cmp
cmp
sahf
lret
jg
outsl
hlt
push
repz
pop
and
enter
fcomps
leave
std
xor
cwtl
enter
jg
mov
stos
out
jl
and
mov
lods
dec
addr16
mov
mov
popa
mov
leave
into
push
pop
sub
mov
in
jl
adc
ss
lods
enter
pop
rclb
inc
pop
push
sbb
inc
es
mov
pop
dec
mov
outsb
dec
pop
cmpsl
mov
jp
out
cltd
outsl
mov
in
cli
cli
lods
xchg
xorps
js
loopne
xchg
into
inc
andl
in
xlat
xor
es
data16
cmpsl
es
dec
dec
inc
sbb
add
cwtl
sbb
xor
mov
mov
xchg
jae
inc
leave
aas
es
mov
pavgb
mov
popf
fwait
nop
loop
inc
cmpsl
icebp
adc
cmp
xlat
loop
push
pop
pmuludq
ret
pop
out
mov
jno
cmc
andl
inc
mov
cmp
xchg
mov
xor
cmpsb
lahf
adc
les
cmp
clc
mov
add
or
push
xchg
pop
std
xor
sahf
popf
orl
lret
fbld
pop
leave
fcompl
push
jecxz
aam
sub
sub
push
push
sti
mov
mov
js
shlb
repnz
dec
enter
dec
out
jle
insb
shlb
cltd
addr16
cmc
xor
dec
sbb
jns
push
out
enter
sub
sbb
fldenv
lret
aas
hlt
dec
lock
movsb
adc
push
mov
mov
dec
sub
cmpsl
out
lret
cwtl
lahf
ret
cli
lds
dec
insb
dec
xchg
cmpsl
shll
dec
lret
enter
test
cmp
or
movsb
xchg
bound
cs
in
icebp
xor
pushf
nop
outsb
sar
sub
cmp
enter
jecxz
adcl
fstp
or
les
int
add
mov
mov
lea
ljmp
scas
dec
jle
mov
ret
repnz
sub
inc
mov
dec
out
gs
push
mov
bound
ja
aam
inc
fdivr
aaa
and
scas
adc
cmp
dec
ret
adc
adc
cmpsl
jecxz
mov
fisubl
xchg
inc
add
ret
adc
jmp
sbb
or
jns
int
dec
jg
dec
jecxz
jg
push
lret
dec
sub
pop
js
sti
adc
mov
sub
mov
push
and
inc
cmp
push
inc
xchg
jge
daa
aas
jmp
and
shrl
stos
mov
mov
sub
jnp
xlat
mov
pop
mov
inc
lods
cmp
lods
addr16
rcrl
xchg
inc
sub
imul
push
out
add
xor
sbb
out
leave
pop
dec
xor
or
mov
jge
add
loopne
add
inc
sub
andb
add
push
and
adc
jae
cmp
andb
mov
cmp
sbb
rep
movsl
clc
pop
inc
fiadds
cmp
cli
data16
sub
lods
pop
sbb
lods
shl
or
dec
bnd
mov
popa
add
xor
jl
lea
sub
arpl
loop
out
and
pop
into
pop
fs
pop
ret
sub
in
shrl
lret
shll
rolb
dec
ret
bound
and
loop
add
mov
push
fstl
aaa
out
add
inc
les
mov
add
push
clc
cmp
mov
cs
out
jb
iret
fbstp
xchg
jge
xchg
rep
xchg
dec
insb
mov
fimull
idiv
push
mov
dec
mov
adc
or
xlat
loop
mov
sub
or
stc
movsl
or
cwtl
dec
leave
je
loop
imul
nop
pusha
push
out
jl
sbb
mov
stc
sbb
cltd
adc
test
mov
fisubl
add
aam
mov
mov
in
and
mov
rcr
insl
lock
sarl
jbe
ret
testl
sub
mov
dec
icebp
add
mov
ret
xchg
lds
jnp
xchg
lods
imul
mov
aas
pop
mov
scas
add
pop
xor
inc
mov
xchg
sbb
xor
jne
push
mov
inc
dec
xchg
pop
lds
lock
ret
mov
rcrb
outsb
push
pop
push
mov
out
xor
mov
es
stos
jbe
push
cmp
jo
stc
dec
push
flds
call
sti
lret
lahf
scas
loopne,pt
jns
cmp
addr16
lods
cs
fsts
pop
lret
mov
sbb
cmp
pop
jo
ds
enter
push
lret
push
jbe
xchg
int
aam
fdivr
int
sbb
outsl
daa
and
inc
stc
roll
dec
std
inc
scas
aam
pop
pop
sub
das
pop
xchg
sahf
test
jmp
ret
xchg
jns
dec
or
and
and
popa
in
lods
pop
mov
int3
faddp
insb
push
iret
and
sarb
xor
pop
fiadds
mov
add
ja
inc
dec
stos
mov
mov
push
push
les
mov
dec
cmp
mov
insb
sbbl
lods
and
int3
xchg
loop
or
pop
jmp
mov
mov
mov
int
aam
jl
inc
stos
enter
inc
mov
inc
wbinvd
enter
xor
xchg
push
jle
and
fcmovbe
movl
aas
push
mov
lock
sarl
jmp
xchg
movsl
mov
fiadds
and
and
movsb
andb
xchg
insl
mov
jg
test
inc
rcr
xor
lret
cmpsb
sbb
sbb
sub
xor
xor
jns
aam
rclb
popf
or
movsb
shlb
jbe
shrb
fdivr
scas
aad
pop
sbb
push
jnp
mov
lds
cmpsb
lods
pusha
pop
pusha
lods
mov
jge
mov
mov
std
inc
daa
jae
push
decl
hlt
test
adc
cmp
pushf
inc
sub
adc
xor
pop
jno
sub
and
add
sarb
test
addr16
ljmp
sahf
jg
pop
sub
xor
aas
cli
insb
sbb
lds
xlat
ds
cmpsb
adc
in
sti
xchg
add
jg
inc
out
xor
fcmovnu
push
stc
int
or
fmul
jo
repz
xor
or
je
jno
js
test
and
ret
pop
test
add
push
inc
mov
push
rorl
push
xor
popf
popf
sbb
sar
cs
mov
sub
mov
cmp
nop
addr16
fstps
add
jmp
movsb
cwtl
xchg
sti
mov
xor
test
add
mov
and
lcall
je
lea
nop
jle
sub
adc
or
mov
andl
jmp
xchg
out
mov
sti
xchg
into
dec
cmp
shr
pop
sbb
icebp
pop
push
mov
jno
mov
loope
adc
jae
shrb
cmp
xor
les
and
cmc
cmp
btr
mov
addr16
jmp
fs
int
xor
jle
xchg
xchg
pusha
push
mov
stc
int3
sahf
adc
mov
xor
xchg
mov
mov
out
scas
cmp
cmpsl
sub
push
loopne
incl
mov
mov
les
cmp
mov
mov
stos
push
cmpsl
inc
sbb
repz
push
push
xor
inc
sahf
add
inc
xor
push
and
jp
pushf
add
hlt
and
jge
imul
push
mov
add
and
lcall
lahf
je
or
xor
loope
pop
jnp
fwait
xchg
xor
push
dec
dec
mov
pop
dec
rclb
jmp
scas
mov
or
and
mov
test
cli
repz
sub
cltd
mov
and
fisubs
jo
push
and
inc
jbe
vandnps
sub
mov
ficoml
lods
jmp
arpl
lods
cmpsb
bswap
xchg
scas
mov
test
cltd
clc
ret
and
repz
jg
pop
or
mov
cmc
mov
xchg
adc
ljmp
pop
jle
adc
out
enter
insl
ljmp
mov
cld
and
clc
lods
push
fwait
add
clc
xor
or
xchg
mov
dec
addb
push
ret
push
inc
sbb
jmp
ja
rcr
test
bound
dec
mov
shlb
test
data16
jns
lahf
cltd
and
adc
inc
rolb
pop
sub
sub
mov
dec
xchg
cltd
loop
fldt
in
and
mov
out
push
pusha
pusha
into
aam
lret
or
xchg
dec
lds
or
xchg
fsubrl
mov
dec
jo
jl
iret
lock
gs
jg
dec
inc
mov
xor
and
je
fldl
addl
jle
cli
sub
and
or
les
jno
in
cmp
dec
adc
fdivrs
mov
cmpsb
dec
in
aaa
inc
das
in
pop
cmp
out
xchg
push
lods
es
xlat
push
nop
or
inc
jmp
in
sbb
stc
ret
clc
shrb
repz
jle
js
mov
jp
in
lods
lock
dec
or
popa
add
insl
adc
mov
jge
mov
cmc
iret
dec
pop
add
or
lock
orps
sti
stc
or
push
mov
in
lods
or
sbb
and
loopne
bnd
push
sbb
int
mov
fbstp
insb
mov
or
out
adc
stos
add
inc
mov
mov
repnz
dec
adc
jl
pop
lds
mov
in
xor
mov
je
aad
jb
push
dec
push
lods
ja
lcall
jnp
fidivs
sbb
scas
ss
rolb
xchg
inc
inc
adc
adc
add
stc
dec
jo
cmpsw
test
mov
out
jnp
adc
out
in
ss
rsm
mov
mov
scas
xorl
sahf
in
push
fs
push
sub
imul
add
rorb
sub
ja
movsl
mov
dec
mov
push
cmpsb
xor
xchg
div
add
dec
adc
pop
pop
divb
pop
add
jmp
mov
pop
jo
mov
aad
out
leave
xor
orl
pop
mov
pop
adc
pop
in
call
jne
fimuls
dec
dec
cmp
xor
jnp
mov
ret
scas
and
fnstsw
sbb
clc
or
and
inc
iret
mov
lea
push
shll
adc
stc
cmp
and
mov
aas
clc
jge
jp
jecxz
sbb
push
dec
mov
adcl
sbb
fwait
stos
sbb
shrb
xlat
je
mov
lahf
push
xchg
push
lods
mov
aad
cltd
std
pop
into
xchg
sbb
mov
test
je
inc
fistl
mov
out
adc
mov
dec
seto
jle
bnd
divl
fwait
icebp
or
clc
cld
jb
test
inc
test
jmp
lea
adc
inc
cmp
push
cmp
inc
int
pop
out
loop
out
daa
aaa
push
sub
cs
push
cmp
or
cld
adc
pop
clc
dec
lahf
mov
xor
sub
mov
xchg
xor
lret
cld
cmp
jne
push
test
pop
int
or
inc
mov
and
outsb
cli
add
push
rcl
add
and
push
mov
mov
cs
jecxz
inc
xor
lea
push
out
aas
stc
xchg
lods
pop
xchg
xchg
mov
stc
pop
fiadds
mov
sbb
int
loopne
mov
jns
cmpsb
scas
leave
movsl
and
add
inc
adc
bound
xlat
sub
pop
int3
push
xchg
add
cld
sub
pop
fadds
add
loope
push
out
xlat
sub
mov
mov
mov
jns
or
fsubrp
test
std
mov
sub
cltd
mov
mov
pop
push
cmp
repnz
and
addr16
sub
out
lret
rcrb
sbb
lret
jp
mov
loopne
jmp
movsb
fldenv
xchg
mov
cmp
negb
push
and
pop
das
cltd
in
xor
in
decb
jmp
sbb
test
jno
cmp
pop
jl
subb
fdivl
clc
gs
jg
test
test
inc
dec
gs
and
adc
fwait
cld
cld
popf
cli
aad
ret
xchg
scas
dec
cmc
xchg
jno
jp
iret
mov
fiadds
inc
xchg
loopne
insl
and
add
movsl
push
mov
dec
jl
ja
aaa
pop
das
stc
dec
adc
push
push
sbb
pushf
pop
sub
sbb
pop
or
xor
dec
out
push
push
mov
sub
xchg
mov
inc
mov
repnz
cltd
xchg
inc
in
jl
inc
sbb
jecxz
fstp
icebp
orl
gs
mov
sbb
decl
mov
inc
sub
cmp
js
pop
or
push
inc
xor
scas
enter
fs
mov
outsb
mov
mov
ret
dec
cmp
cmc
fwait
mov
xchg
scas
sub
inc
into
ficoml
push
lahf
cwtl
testl
pop
addb
pushf
dec
push
adc
aaa
dec
movsb
packsswb
add
xor
fcoml
or
in
cmp
iret
ja
out
cmpsl
add
rcll
bound
dec
fildl
sahf
jae
mov
and
bts
cmp
stos
out
clc
adc
fcmove
lcall
pop
clc
loop
pusha
dec
or
int
mov
lahf
mov
jno
dec
sub
add
jmp
mov
sub
out
dec
scas
mov
sub
jmp
add
mov
inc
mov
dec
lret
sbb
jecxz
or
jne
lds
and
or
rorb
loopne
push
push
das
fcomp
leave
bound
lea
xchg
shrl
loopne
pop
imul
adc
bswap
fsts
test
stc
aam
mov
insl
push
jmp
shll
dec
das
and
cmp
adc
call
push
icebp
inc
xor
js
mov
sub
inc
cmp
jl
leave
push
daa
addb
lahf
mov
and
cld
sub
mov
pop
lods
outsl
out
push
in
aaa
cs
sbb
into
mov
inc
loopne
add
mov
sarb
sbb
in
xchg
sahf
dec
mov
jle
dec
mov
mov
idivl
js
or
and
or
push
jecxz
dec
imul
xor
jnp
inc
pop
xchg
fidivs
lods
sub
scas
sub
xchg
sub
fwait
and
scas
pop
pop
sbb
push
ljmp
sub
xor
xchg
testl
dec
or
cli
daa
sub
je
aad
lea
in
push
and
inc
push
mov
insl
push
mov
clc
and
inc
push
orl
push
sbb
mov
dec
sbb
inc
dec
pop
out
sbb
adc
lcall
jge
sbb
dec
jnp
pop
aaa
mov
subb
pop
adc
repnz
lods
xor
jle
cmp
fmuls
sti
sbb
rolb
shll
cltd
mov
arpl
insl
xchg
fcmovnb
js
sbb
repnz
add
xchg
jmp
jecxz
gs
mov
xchg
push
jno
jmp
mov
mov
mov
shl
fwait
dec
sti
fwait
mov
sbb
sets
push
fs
mov
pop
pop
xchg
movsb
push
outsb
mov
sbb
in
popf
mov
jg
ds
rcll
sbb
add
xchg
pop
sbb
and
mov
test
lret
iret
cmp
in
mov
leave
jp
out
mov
pushf
negb
stc
outsl
mov
xor
xchg
jnp
push
addr16
fldenv
loop
js
sti
and
or
jb
and
shll
pop
jg
push
lods
sub
and
orb
mov
adc
jle
pop
push
sbb
out
add
movsl
sahf
push
and
jp
je
ret
lods
cmp
loopne
xchg
lds
stos
sbb
fsts
or
addr16
push
sahf
xchg
fcmovnb
out
mov
xchg
sbb
enter
hlt
lcall
dec
test
int3
in
insb
inc
adc
jecxz
jb
xor
imul
in
mov
iret
jae
xchg
xor
dec
adc
out
xchg
adc
push
mov
push
fldl
pop
pop
movsl
pusha
mov
dec
or
push
fwait
ljmp
xor
fucomi
and
dec
inc
orb
or
mov
bound
xchg
stos
dec
not
push
cs
sbb
mov
out
jno
xchg
adc
xor
pushl
test
in
sti
loope
mov
jecxz
mov
lea
fdivr
sbb
xor
pop
iret
inc
mov
sahf
cmp
popa
pop
pop
pop
pop
cmp
or
es
sub
cld
out
cmp
mov
mov
mov
xor
lea
decl
fdivs
jo
mov
inc
cwtl
cld
mov
fnstenv
ljmp
insb
adc
pop
and
test
push
shll
dec
add
imul
cmpsl
dec
popa
bound
xchg
rcrb
ret
repz
insb
icebp
adcb
dec
arpl
loopne
cltd
inc
push
in
mov
add
jg
xchg
pop
cmp
inc
mulb
or
aam
sbb
mov
xor
jb
shlb
and
not
adc
and
and
mov
mov
insb
dec
bound
push
and
ja
rcl
cmp
movsb
mov
test
cs
mov
adc
ss
imul
jae
pushf
mov
mov
and
xchg
loopne
sbbb
sub
jo
in
lock
mov
fs
mov
xor
xchg
cmp
mov
int3
pop
add
ljmp
inc
pop
ja
jb
sahf
cltd
sbb
mov
adc
call
int
es
rcr
push
arpl
shlb
loop
push
out
test
jmp
and
out
std
cmp
fstpl
push
fwait
xchg
mov
xor
in
xor
std
loop
pushf
insl
imul
loopne
push
sub
mov
cmp
cmp
xchg
ljmp
cwtl
xchg
push
xor
push
jl
jmp
inc
test
xchg
dec
leave
sub
mov
call
repnz
imul
inc
pop
loope
iret
xor
int3
push
and
xchg
loope
data16
loop
push
loope
insl
repnz
mov
push
dec
sbb
and
sahf
and
cmp
sbb
xlat
adc
addr16
cmp
dec
sarb
sbbl
pop
clc
mov
mov
mul
mov
xor
or
nop
nop
jmp
aaa
orl
pop
inc
jg
pop
daa
add
cld
leave
les
jecxz
xchg
jns
data16
orb
mov
or
leave
inc
enter
subb
adc
pop
xor
inc
mov
std
sti
int
out
push
inc
xchg
out
dec
sbb
test
sbb
js
sbb
push
xchg
in
and
dec
inc
cmpsl
add
js
ss
jbe
sahf
popa
in
fs
ja
lahf
cmpb
sti
sbb
das
mov
mov
jmp
dec
test
cmpsb
sub
pop
adc
push
seta
mov
insb
lds
inc
test
fs
cmp
lret
pop
mov
enter
and
int
sbb
imul
daa
incb
jns
mov
pop
lods
stos
jnp
and
push
xchg
ret
pop
pop
popf
and
jl
mov
mov
lods
sbb
cld
imull
and
out
pop
test
into
sub
pop
das
bound
cmp
loop
scas
adc
sbb
outsb
xchg
scas
ror
sub
aad
cmp
inc
mov
and
jecxz
jg
xor
rep
ret
insb
cwtl
je
fmull
xor
xchg
lock
loopne
loope
aam
jmp
dec
dec
sub
adc
out
test
aam
mov
cld
xchg
mov
and
clc
mul
jo
jno
adcb
loopne
jne
sub
push
jo
arpl
push
adc
mov
pop
lds
cmp
test
push
inc
and
daa
mov
roll
push
cwtl
cmp
sub
test
lods
pop
gs
jb
ljmp
pop
cmp
fists
or
fs
test
pusha
pop
ret
stc
out
mov
scas
mov
lret
fiaddl
lea
sbb
push
ds
xor
pop
adc
insl
cmpsl
in
jp
xchg
into
xor
add
mov
pushf
in
adc
xchg
lods
jl
pop
aad
loopne
fcmovnu
adc
mov
xchg
roll
push
inc
sbb
xchg
or
push
push
sub
imul
je
in
lods
pop
adc
cmpsb
movsb
and
cmp
sub
in
cmp
lock
cmc
fisubrs
mov
sub
pusha
movsb
adc
mov
iret
push
push
pop
jmp
fidivrl
pop
pop
jle
imul
cld
inc
je
fldl
inc
aaa
testl
pop
fdivl
fnstenv
inc
out
mov
cmpsb
mov
lret
jp
imul
test
insl
sarb
add
roll
xor
dec
ret
mov
rcrl
out
test
push
xchg
jbe
les
popf
bound
cltd
push
flds
mov
dec
sbb
or
paddsb
xchg
push
mov
hlt
and
and
dec
cmp
or
jbe
addr16
sub
dec
popf
das
push
pop
lahf
push
adc
cmc
ljmp
add
xchg
imul
or
iret
je
scas
loopne
inc
adc
in
fwait
loope
rorl
pop
push
lods
pop
xor
nop
negb
add
sbb
scas
clc
pop
in
pop
stos
adc
lock
sbb
dec
iret
sbb
fwait
push
fs
inc
jnp
pushw
cmp
pushf
or
shll
mov
sbb
rorb
data16
mov
mov
js
cmp
rorl
cmp
mov
add
mov
std
fwait
sbb
push
in
test
cmp
lahf
inc
and
out
jecxz
push
cmpsb
add
hlt
mov
into
ret
sarb
mov
cmpsb
subl
jp
jb
pushf
xchg
add
jg
bnd
adc
and
movsl
adc
scas
dec
movsl
movsb
mov
cwtl
inc
rclb
sarl
mov
add
ja
lods
es
jl
fstpl
inc
pop
movsb
clc
or
test
push
stos
or
mov
jno
inc
ss
and
loop
cmpsb
mov
loopne
and
sub
addr16
ss
xor
push
cmp
xor
sbb
pushf
in
je
mov
mov
jle
mov
cld
rcl
mov
mov
movsl
adc
cmpsl
jg
dec
xor
or
inc
sub
movsl
outsl
push
std
test
in
jmp
jg
sahf
pop
push
test
sbb
or
xchg
xorb
stos
lock
cli
dec
fdivrl
push
push
outsb
fistl
dec
test
fst
repz
pop
and
inc
mov
movsl
dec
mov
inc
lods
in
loop
sbb
hlt
sti
pushf
push
stc
mov
cmp
jl
sbb
outsl
in
add
adc
ret
out
or
pop
or
ss
pop
ret
call
movb
fs
xchg
bound
mov
cmpsl
xor
jecxz
mov
xor
call
and
mov
push
sbb
icebp
ret
or
stos
imul
aad
xor
ss
arpl
mov
fcomps
and
jo
cmpsb
int3
repz
mov
in
xor
xor
loop
shlb
in
aad
clc
xchg
in
dec
xor
or
fbstp
ja
jnp
xor
popf
inc
cs
or
dec
pop
aad
cmp
in
adc
and
mov
xchg
push
inc
xor
push
inc
push
mov
andb
iret
das
rcl
ret
mov
std
adcb
and
xorl
adc
and
outsl
jge
pop
cmp
repnz
or
fwait
push
adc
in
cltd
ror
mov
inc
xlat
mov
clc
cmp
in
mov
test
push
push
cli
sarb
ss
cmc
mov
xchg
and
add
mul
and
mov
fcmove
es
iret
jecxz
sub
es
cmc
gs
cltd
hlt
mov
xchg
inc
das
lods
pop
sbb
addr16
xchg
sbbb
clc
xchg
mov
jge
mov
or
int3
pop
pushf
mov
dec
push
cs
popa
xchg
add
movl
mov
dec
sar
mov
xchg
scas
mov
cli
arpl
push
fidivrs
sarb
dec
jbe
test
mov
stos
das
mov
sub
push
andl
sahf
ds
sbb
lods
aam
das
mov
dec
add
aad
dec
mov
jb
push
scas
js
in
sbb
add
lea
mov
daa
aam
push
push
mov
cwtl
or
push
cmp
movsb
cmp
in
mov
and
ret
std
push
out
mov
hlt
outsl
inc
cmpsl
and
dec
cmp
jbe
aas
into
mov
int
mov
push
aaa
aad
repz
dec
cmp
push
adc
add
adc
pop
pushf
aad
mov
lea
inc
loope
scas
aam
jmpw
shrb
push
loopne
data16
aam
idivl
xchg
sub
into
testb
cmpsb
das
mov
mov
mov
mov
xchg
or
subl
xlat
add
pusha
add
cli
outsl
sub
inc
jne
cli
mov
or
loopne
or
adc
movsl
jo
test
sub
mov
mov
and
dec
mov
sbb
jl
push
das
nop
pop
jecxz
outsl
pushf
inc
sbb
bound
xchg
and
xor
imul
lea
xor
xlat
push
and
pushf
pop
add
xchg
xchg
sbb
rcll
inc
or
adc
xchg
fisubrs
bound
shlb
movsl
inc
addr16
in
inc
pop
cli
add
sahf
loop
or
or
fs
mov
orb
xor
jge
enter
and
adc
push
dec
mov
shrl
pop
adcb
jno
and
xchg
sub
push
lret
fildll
xchg
cmpsl
jg
fiadds
loop
pop
inc
imul
iret
inc
into
push
cltd
outsl
xor
es
lods
mov
add
popa
mov
andl
xor
cmpsb
daa
xchg
in
push
imul
push
rcll
xor
and
push
sbb
mov
xor
ficoms
cmpsl
lret
fisubrl
inc
jae
mov
shlb
in
sbb
xor
jecxz
inc
or
mov
lods
lods
jo
sti
xchg
xor
sbb
ret
pop
adc
sbb
cmc
sti
inc
sbb
orl
sahf
out
iret
mov
sbbl
mov
js
fs
add
fcomps
cmp
jae
jp
and
pop
add
in
or
popf
sub
push
push
repnz
out
sub
mov
out
pop
xor
jmp
imul
out
sbb
mov
dec
aaa
fnstsw
xchg
pop
inc
mov
or
cmp
nop
sbb
and
int
mov
mov
dec
jno
lahf
jmp
inc
outsb
xchg
test
push
dec
ljmp
sbb
cmp
stos
and
cltd
enter
loop
jne
mov
cmpsb
and
sub
mov
cltd
xchg
sti
xor
pop
loopne
das
mov
arpl
negl
insl
nop
jl
sub
push
inc
fistpl
cli
and
daa
fwait
cs
add
jb
fadds
mov
sbbb
push
mov
add
xchg
out
in
push
ss
lea
xchg
xor
into
jecxz
mov
repnz
and
jge
sub
aas
pop
xchg
cltd
xchg
stc
jno
loop
jmp
into
in
lods
pop
jbe
mov
jae
lock
aam
dec
jl
ret
cmpsb
add
test
mov
cwtl
and
cmp
test
add
add
cmc
sbb
jnp
pop
xor
enter
sbb
int
lcall
int3
cld
fildl
sahf
lret
movsl
mov
push
or
push
out
adc
jmp
inc
outsl
mov
xor
push
adcl
cs
sahf
lcall
cwtl
cmpsb
inc
jge
stos
add
sub
mov
cli
test
std
pushf
mov
mull
stos
sbb
cld
add
xor
scas
jmp
fldenv
repnz
cmp
inc
aad
stos
lret
push
sub
mov
inc
inc
add
les
test
popa
imul
data16
dec
int
mov
outsb
adc
and
push
cwtl
lret
loope
ret
shr
xor
mov
mov
mov
leave
push
push
inc
das
inc
adc
stos
sbb
rcr
and
fwait
jae
xor
shrl
sbb
xchg
ja
pop
mov
stc
cmpsb
out
pop
pop
xor
test
push
push
enter
dec
cmpsl
cmpsb
pop
dec
or
pop
mov
leave
les
jb
push
mov
xchg
sub
mov
push
popa
lods
mov
orl
mov
xorb
adc
pop
and
pop
movb
lea
jns
das
mov
cmpsl
sub
pop
push
std
ljmp
push
add
xor
adc
rorl
mov
icebp
lds
leave
fsubs
cmp
dec
xchg
mov
pop
cmp
imul
add
sbb
hlt
inc
fisubs
lds
xor
imul
xor
std
shlb
dec
repz
mov
push
jmp
out
add
xchg
pop
pop
repz
xor
repnz
add
lods
mov
loopne
loopne
inc
cmc
shl
pop
outsb
scas
dec
xor
mov
cmp
dec
xchg
andb
push
push
hlt
shll
fidivrs
stos
cmp
mov
and
popa
cs
mov
sub
mov
push
movsl
pop
sub
fsub
sub
jecxz
cltd
jne
add
mov
jge
cmp
jae
sbb
add
mov
sub
mov
jg
mov
mov
xor
and
pop
sti
pop
jo
push
or
xchg
pop
and
push
add
xchg
icebp
std
xor
xchg
sbb
adc
push
adc
inc
mov
test
bound
movsb
leave
cmp
mull
mov
pushf
fisubl
fcomps
add
cmp
push
imul
xchg
mov
repnz
int3
dec
test
jne
jecxz
add
ficomps
mov
repz
testb
loopne
rclb
or
out
cld
xor
sub
pushf
call
mov
ss
and
repz
add
jbe
popf
rolb
in
xchg
enter
sarb
jecxz
loop
je
loope
pushf
mov
inc
and
jl
rcll
fistpl
call
shrl
pop
dec
repnz
clc
sbb
adc
xor
xchg
add
aas
dec
cmp
sub
and
add
inc
sub
pop
jb
jg
xlat
lods
jmp
xchg
or
lods
xlat
inc
jecxz
cltd
pop
and
push
xchg
cwtl
jp
jmp
push
aas
jg
xchg
out
cld
mov
sub
inc
mov
addl
add
rcll
movsb
negl
mov
movsb
sbb
fdivrs
ljmp
hlt
dec
jno
or
xchg
jg
repz
into
leave
loop
add
push
xchg
sbb
cmp
sarb
xor
adc
xchg
call
xchg
outsb
jbe
and
dec
mov
imul
dec
inc
dec
jle
xchg
or
loop
arpl
xor
jmp
clc
out
aad
cmc
add
repz
sub
mov
jo
inc
or
adc
fsubrs
push
mov
jno
push
aas
jecxz
or
mov
xchg
lret
js
fwait
mov
pop
xor
mov
jno
xchg
cmp
daa
pop
testl
dec
stos
pop
neg
aas
push
pop
mov
jo
jae
and
js
test
stos
mov
adc
dec
and
add
xor
sbb
jg
or
sub
mov
mov
xor
xor
imul
cmp
xlat
je
or
push
pop
movsl
push
dec
lea
ja
lods
lcall
or
es
ss
movsl
loope
mov
hlt
jecxz
fmull
seto
pop
mov
repz
or
sbb
test
loopne
add
jno
push
sarl
pop
jb
notl
stos
cmc
and
xchg
movsb
jmp
mov
mov
and
sbb
setbe
push
into
cmc
lcall
adc
iret
in
sbb
lahf
lock
les
dec
ret
cmpsb
add
mov
dec
xchg
pop
inc
jnp
lahf
mov
outsl
mov
and
adc
aad
mov
pusha
sbb
jae
or
out
and
cs
ret
shl
movsl
movsl
push
pop
fnstcw
mov
cmp
stc
mov
jmp
pop
hlt
xor
mov
repnz
cwtl
xor
sub
xchg
ret
movsb
les
lcall
testb
adc
xchg
ret
inc
push
mov
sbb
jnp
pop
ret
std
mov
xor
add
jmp
mov
lock
pop
pop
into
lahf
loope
frstor
mov
jmp
cwtl
xchg
pop
test
jle
ret
test
add
sub
sbb
cmp
or
ficoml
aaa
cld
sarl
shrb
xchg
push
inc
cmpsl
daa
add
jbe
push
cmp
inc
testl
cli
sub
xor
sub
mov
or
lret
out
lock
repz
xor
call
sbb
sub
push
jae
cmp
pop
pop
xchg
pop
inc
add
inc
sbb
mov
cmp
je
cmpsl
mov
mov
or
jae
push
mov
xor
lods
int3
aaa
and
scas
pop
stc
mov
add
fistpl
negl
ljmp
xchg
sbb
lcall
add
mov
jns
xchg
notl
pop
enter
fbstp
ficoml
rcll
xchg
fs
pop
push
shrb
inc
mov
int3
sbb
cmp
jecxz
xchg
xor
xor
xor
jbe
push
mov
cld
jo
pop
fsin
sub
sbb
fdivs
xchg
rclb
in
ja
sti
ret
lock
xchg
pushf
pop
cmp
imul
ss
jbe
out
push
mov
lock
pop
and
int
lcall
mov
or
shlb
jne
xor
sub
adc
outsl
cmp
or
mov
shl
inc
sbb
lock
pop
nop
fists
fnstcw
lret
hlt
adc
adc
out
out
pop
push
jp
mov
mov
sbb
lds
adc
jno
xor
adc
mov
jmp
or
movq
pushf
lahf
ret
xchg
push
dec
dec
pop
and
sub
fidivs
add
pop
ja
ljmp
into
adc
imulb
add
ret
in
push
out
pop
jne
add
jg
fildl
jo
push
mov
aad
cmp
add
aad
data16
jno
add
neg
iret
inc
add
shll
aam
xchg
movsl
jns
daa
fsubl
pop
repnz
mov
mov
fwait
iret
push
mov
and
inc
pop
jle
hlt
jns
push
lcall
mov
stos
outsl
lds
sbb
add
push
jl
add
xchg
and
mov
adc
or
gs
inc
sub
popf
in
ljmp
hlt
sub
push
decl
subl
mov
daa
mov
idivl
shlb
push
subl
js
inc
adc
and
mov
test
movsb
shlb
dec
cmp
inc
lahf
dec
pop
fdivl
aad
or
xor
in
mov
mov
scas
outsb
movsb
in
pushf
cltd
scas
mov
dec
cmp
mov
setge
lods
cmp
ja
xchg
push
fwait
out
push
xchg
mov
adc
mov
pop
dec
xchg
xorl
xchg
jle
rcl
and
mov
mov
fs
pop
loopne
inc
rcll
jl
pop
popf
lcall
pop
inc
in
icebp
mov
or
xor
jne
or
cmpsl
sbb
rorb
mov
sub
insb
xor
push
push
pop
pop
stos
fcmove
sbb
out
sbb
push
mov
dec
ffree
sbb
neg
push
fs
sbb
mov
and
aam
xor
repz
dec
ljmp
js
xchg
push
jg
add
add
call
popa
push
xchg
pop
mov
dec
or
stos
cmp
ja
shlb
push
sbb
push
lods
movsl
imul
bnd
loope
and
ret
add
into
mov
adc
push
and
shlb
and
sahf
jecxz
iret
fwait
inc
pop
inc
mov
xor
cltd
mov
push
dec
cmc
inc
pop
xchg
jne
int
fs
popf
stc
add
dec
js
movsb
jae
fdivp
jb
lods
and
pop
aam
inc
fwait
call
scas
xchg
mov
dec
icebp
cwtl
ret
cli
cmp
fucom
arpl
imul
pop
lret
stos
or
popf
mov
add
imul
lods
or
pop
cmpsb
arpl
mov
inc
es
sahf
cmp
es
lds
sub
inc
shlb
add
mov
mov
data16
packuswb
loope
push
iret
push
icebp
push
mov
loopne
adcb
clc
push
xchg
adc
jg
nop
mov
xchg
sub
pushf
push
mov
pushf
es
lmsw
mov
cs
cwtl
int3
fisttps
lahf
repz
push
mov
xchg
iret
lods
mov
inc
ret
lds
jo
orl
enter
subl
pushf
jne
aad
vpaddusw
pop
mov
stos
scas
movsb
xlat
cmp
out
lea
or
mov
movsb
in
int
sbb
add
inc
enter
inc
push
les
lock
dec
pusha
inc
inc
jecxz
outsl
shl
xchg
or
test
and
sbb
dec
dec
jmp
sti
sbb
lods
sub
outsb
test
lcall
out
mov
sbb
jl
popa
dec
fucomi
aas
into
cmpsb
movhps
adc
mov
cmpsl
add
rorl
imul
sub
sub
lcall
jne
lock
ja
filds
lods
sub
or
xor
stc
mov
jle
dec
cwtl
push
jbe
adc
fistpll
arpl
fadd
push
cwtl
sub
jns
rorb
not
rcl
jmp
call
inc
lret
xor
pop
std
mov
add
push
lret
and
adc
dec
repz
ss
adc
loop
stos
daa
fbld
nop
outsb
pop
mov
cltd
mov
lret
lahf
insl
mov
and
fstpt
xor
cmp
aaa
jno
int
mov
mov
dec
adc
test
popf
je
jle
popl
insl
out
or
xchg
mov
imul
inc
xchg
inc
les
mov
mov
cmp
and
mov
jnp
orb
mov
imul
mov
mov
addl
adc
adc
dec
mov
stos
and
mov
jg
cli
lods
add
sbb
fwait
xchg
ds
inc
adc
pop
pop
xor
push
sbb
sub
or
mov
in
xor
hlt
mov
xchg
add
dec
cld
pop
and
idivl
ljmp
repnz
push
mov
out
dec
jl
sti
iret
test
nop
inc
dec
mov
leave
maskmovq
notl
xchg
mov
cmpl
insl
ficoml
mov
hlt
sarb
in
das
or
scas
sbbb
ds
add
push
arpl
mov
ss
jge
negl
aam
call
shlb
add
cli
inc
cmp
lret
int3
jb
subl
pop
data16
add
pop
cmp
fisubs
call
mov
sbb
int
addr16
fcom
or
push
test
inc
add
add
test
pop
repnz
dec
out
sub
jns
mov
jmp
push
mov
xlat
dec
xor
or
fisubrs
adc
xchg
repz
aam
jge
lcall
cwtl
out
scas
pushf
xchg
cmpsb
dec
ja
movsb
cs
add
int3
and
mov
adcl
mov
fidivrl
call
jg
arpl
cmpl
not
add
repnz
add
hlt
aad
fiaddl
inc
pop
pop
pop
call
adc
add
rclb
mov
aaa
rcll
xor
rcrl
or
jae
fldt
or
mov
icebp
and
pop
shlb
jnp
jnp
xchg
xchg
xor
in
ja
lret
xor
mov
jnp
inc
lods
outsb
inc
lods
shrl
push
mov
push
sti
lods
mov
or
xor
push
mov
ds
mov
mov
xor
add
bound
pusha
sbbb
inc
mov
push
pop
mov
stos
in
das
sbb
mov
rcll
sbb
sbb
dec
inc
scas
ds
lods
sbb
inc
in
fnstcw
orb
gs
mov
push
ja
lret
test
fistps
jmp
mov
mov
cmp
in
push
xchg
pusha
ja
dec
fimuls
mov
mov
jg
inc
in
fmull
mov
xchg
push
gs
test
push
scas
aad
cmp
mov
adc
ljmp
add
mov
dec
hlt
mov
inc
dec
sbb
jbe
imul
dec
fsubs
inc
lret
sbb
loopne
push
inc
movsl
mov
lret
nop
add
cmp
rcrb
adc
les
jnp
lret
jnp
sbb
mov
decb
jl
jne
out
inc
mov
push
lahf
push
pop
jbe
call
cmp
mov
sti
sbb
ljmp
mov
jbe
push
lret
cmp
push
mov
movsb
cmp
mov
pop
xchg
pushf
movsl
test
pop
insl
pusha
mov
iret
das
aam
ja
test
and
add
xchg
es
lret
sub
imul
mov
neg
jne
les
mov
mov
cwtl
popa
xchg
ret
adc
xor
lds
mov
gs
cs
jae
push
loop
inc
xchg
je
mov
mov
rorl
je
add
call
pop
js
pop
aas
and
icebp
adc
mov
sbb
ds
clc
ljmp
cwtl
adc
jmp
cmpsl
push
lret
arpl
cld
leave
push
adc
ss
mov
cltd
into
popa
mov
sbb
je
repnz
cmp
and
sbb
push
adc
nop
testb
dec
push
push
cmp
aas
xor
adc
mov
pop
jge
ss
xchg
sti
repnz
mov
pop
xlat
addb
cltd
mov
mov
jg
out
cwtl
push
inc
bound
out
push
outsb
adc
jp
dec
rcrl
adc
daa
push
aam
xor
dec
add
js
add
mov
adc
mov
mov
arpl
xor
lock
add
cmp
insb
gs
mov
mov
negb
sub
cwtl
std
imul
roll
ror
mov
imull
jb
cld
mov
mov
pop
cmp
jae
call
add
test
mov
dec
and
add
adc
ret
or
jp
notb
test
das
cmp
mov
sahf
or
inc
sti
aaa
mov
bound
mov
aad
sbb
lods
pop
andb
movsl
shll
loop
shll
jbe
or
mov
mov
add
into
mov
scas
jge
les
aas
divb
cmp
movsl
gs
mov
push
out
movsb
movsb
cmpl
clc
ror
pushf
or
loopne
ljmp
and
ss
jno
xor
xchg
leave
adc
lds
pushl
add
std
test
xlat
sub
xlat
push
int
xlat
add
in
ret
jo
xchg
int
jmp
xlat
mov
xor
push
xchg
pop
ffreep
cwtl
outsb
lods
add
push
dec
pushf
sbb
or
out
and
rorl
dec
ret
mov
adc
dec
inc
dec
dec
lods
inc
jne
cmp
lahf
repnz
push
xchg
xor
test
adc
lahf
dec
rorb
test
rol
mov
add
cmp
bound
out
in
xchg
jnp
inc
or
mov
add
data16
jle
xchg
add
pop
sbb
enter
add
xchg
outsl
mov
jns
scas
lods
mov
mov
add
rorl
jne
xchg
add
xchg
lahf
dec
mov
cmc
mov
insl
lret
pop
pop
das
ret
ss
jp
jns
outsb
pop
call
mov
outsl
or
aad
shl
roll
sub
push
test
mov
push
in
aam
int
daa
mov
xor
gs
cmp
fwait
mov
mov
xor
inc
mov
jo
test
int
orb
enter
lahf
pushf
repnz
mov
movsl
jge
adc
loop
stos
and
cmp
push
and
or
movsl
cmpsl
icebp
outsb
push
mov
sti
shlb
cmp
adc
lds
inc
sbb
sahf
fstpt
xchg
fdivl
out
stos
add
cld
cmp
sub
shrb
les
and
test
ss
mov
leave
sti
mov
mov
pop
sub
aam
cld
xor
sbb
scas
and
subl
sbb
dec
pop
dec
mov
popa
dec
popa
mov
negb
je
add
add
mov
pop
mov
mov
adc
mov
mov
xor
inc
xchg
add
iret
int
mov
pop
xor
jp
lret
sub
cltd
mov
or
mov
and
es
jge
cmp
es
mov
movsb
das
adc
jmp
ds
or
dec
add
sbbb
rorb
fistl
jb
imul
adc
in
aaa
cli
imull
dec
bound
repz
dec
in
mov
xchg
or
outsb
inc
insb
ficoms
jge
rcll
adc
inc
push
sbb
in
jmp
xchg
fbstp
fwait
sub
mov
mov
sbb
sub
pop
fsubs
mov
cmp
stc
push
xchg
xchg
mov
in
cmp
jp
sbb
jl
inc
daa
ds
mov
out
dec
add
lods
dec
ret
cltd
xchg
sbb
adcb
adc
fxch
pushw
xchg
push
stos
xchg
dec
fadds
std
repnz
mov
mov
mov
gs
or
cmpsl
aaa
jnp
xchg
pop
push
push
in
pushf
lds
jle
stos
xchg
adc
inc
mov
mov
in
lods
testl
sarl
ja
movsb
das
cmpsb
into
sbb
inc
mov
lods
jb
sub
push
push
sub
hlt
cmpb
fisubl
sub
mov
jmp
aad
sub
mov
sbb
jno
inc
ret
mov
fs
gs
insl
cmpsb
leave
mov
cmpsl
xor
push
mov
push
mov
js
lret
addr16
mov
rcrl
xchg
mov
sti
std
lret
mov
loop
aam
int
inc
sti
in
add
imul
insl
insb
jne
rcl
add
movsl
test
lea
dec
xor
cmp
mov
push
or
inc
sbb
lahf
inc
lds
into
je
aad
je
je
and
sub
pop
pop
pop
xor
clc
clc
mov
inc
xor
inc
bswap
cmp
mov
adc
push
dec
pop
adc
scas
out
repnz
push
cmp
jbe
leave
and
adc
cmp
in
inc
cmp
leave
lret
cmp
outsl
test
div
dec
dec
or
test
adc
popa
arpl
rclb
mov
fiadds
cmp
popw
cli
cmp
icebp
jb
aam
xchg
push
mov
or
adc
dec
bound
js
sub
out
jle
mov
inc
push
fucomp
pop
in
inc
idiv
outsl
inc
mov
inc
mov
push
mov
mov
sahf
stc
scas
aaa
cli
adc
ss
jp
fistpll
inc
jp
mov
jmp
js
push
out
iret
mov
mov
jne
iret
and
je
and
sbb
pushf
and
mov
test
ret
sbb
push
sub
fwait
sbb
and
fdivrl
loopne
enter
push
roll
push
push
cmp
jp
cmovno
sbb
lahf
mov
es
nop
inc
dec
repnz
jg
in
and
in
adc
jg
sti
movsl
cmp
fcoms
and
sub
mov
mov
loopne
imul
and
pop
pushf
fisttpl
pop
push
inc
or
adc
fisttpll
test
xchg
call
sbb
mov
mov
dec
pop
add
or
xor
jecxz
sar
pop
je
fwait
in
mov
aas
xchg
xor
dec
adc
inc
sahf
test
or
mov
push
notl
pop
add
mov
xchg
inc
in
mov
les
push
loope
fnstenv
stos
and
enter
xchg
sbb
sub
int
out
jno
shl
add
cmc
add
sub
fcompl
inc
mov
sub
mov
ret
push
fnstsw
pusha
adc
movsl
sub
jmp
sub
add
fbld
icebp
pop
aam
pop
movsl
xor
cmc
mov
mov
push
cmpsb
xorb
or
loopne
dec
or
cmp
aas
or
mov
xchg
fildll
inc
mov
sbb
ret
mov
lcall
and
sub
cmp
adc
inc
lret
es
in
push
push
lds
ror
cmpsb
and
cmp
shr
mov
push
mov
sub
push
outsl
pop
jnp
js
or
sbb
daa
stos
loop
mov
fs
notl
xor
bound
in
sub
out
aas
jmp
xor
dec
loope
mov
dec
iret
idivl
adc
add
dec
inc
mov
pop
aaa
mov
mov
sbb
push
or
scas
popa
pop
fsts
and
aam
fidivl
mov
mov
cmp
mov
jbe
imul
inc
adc
icebp
orl
cmp
mov
test
jmp
out
cmp
cwtl
negl
addr16
repz
jmp
jbe
subb
repnz
gs
dec
push
imul
jns
ror
and
ja
push
loopne
adc
mov
repz
sbbl
mov
lret
add
dec
push
fcomp
cmpsl
popa
mov
jl
jbe
je
int
mov
sub
fadd
movsl
jno
dec
jle
xchg
or
lret
inc
inc
movsb
push
add
mov
bound
sbb
mov
sub
and
int
aam
je
dec
repnz
dec
pushf
repnz
mov
rcr
adc
xor
pop
dec
and
movsb
decl
xor
lea
ljmp
jl
jp
movsl
lahf
sbb
int
jmp
push
sbbb
lods
sbb
adc
outsb
rdpmc
dec
leave
stos
push
mov
inc
aam
jecxz
adc
ds
outsb
jnp
popa
loope
inc
mov
jbe
mov
dec
bound
out
shlb
xchg
xor
es
push
scas
add
cmp
int
loop
lcall
push
pop
mov
fmuls
or
push
jns
cli
adc
cltd
pop
inc
in
lret
ss
ss
dec
dec
lock
hlt
sahf
sbb
int
or
test
jae
lds
mov
punpckhbw
push
aad
sbb
push
sub
pop
push
cmpsl
idivl
cltd
daa
mov
sbb
aas
js
xchg
cmp
pop
inc
mov
or
inc
fnstcw
hlt
xchg
mov
mov
mov
fwait
xchg
lods
inc
mov
xlat
jg
adc
add
mov
mov
mov
push
repnz
dec
ds
ljmp
fdivrl
sub
xchg
aam
ljmp
mov
js
xlat
idiv
and
movsl
mov
fldl
pop
add
outsl
push
aam
xchg
fsubrl
fs
iret
jne
sbb
cltd
gs
shlb
xchg
jnp
sub
or
sti
mov
mov
stos
flds
lret
dec
dec
insl
or
cmp
stos
xchg
imul
dec
leave
inc
cmp
lock
std
ret
sub
aaa
iret
rclb
add
sub
mov
out
mov
in
jns
test
lds
sub
stos
addr16
icebp
dec
xchg
rorb
idivb
in
adc
xchg
xchg
es
and
sub
sbb
leave
mov
pop
push
lret
in
jl
test
pop
jmp
movsb
outsb
or
cmp
inc
lret
inc
push
icebp
out
mov
xor
pusha
idivb
and
in
dec
xchg
adc
adc
ja
arpl
xor
data16
dec
push
mov
sub
xor
faddl
hlt
dec
adc
dec
ret
jb
bnd
jno
mov
aas
adc
pop
jb
mov
dec
das
or
bound
insb
sti
and
push
cmp
cwtl
int
lahf
aam
dec
sub
jmp
mov
mov
sub
mov
jo
daa
hlt
or
lret
loopne
lret
and
mov
int3
pop
nop
sbb
rcr
jae
js
sub
and
dec
enter
repz
cltd
inc
test
fmull
repnz
xchg
fs
adc
xchg
cmp
out
je
sbb
jle
mov
jmp
leave
mov
out
sub
jb
dec
fdivs
scas
sub
push
jmp
pop
cmpb
cltd
mov
push
test
neg
imul
and
xchg
jae
lret
cwtl
jns
xorb
jbe
jp
mov
pusha
mov
stos
out
mov
in
adc
sub
sbb
push
mov
inc
xor
mov
and
xchg
in
push
repnz
adc
push
mov
push
les
sbb
out
movsl
jbe
lods
or
bound
frstor
ds
adc
aad
fs
or
adc
add
push
adc
stos
mov
cmp
inc
je
cmpsl
cmp
js
mov
subb
mov
cmp
lods
aad
mov
or
xchg
push
and
mov
add
pop
dec
sub
xor
rcll
inc
scas
test
xchg
push
mov
dec
testb
mov
jb
je
pusha
push
dec
sbbb
nop
add
scas
add
cmp
sbb
test
adc
call
popa
fs
nop
or
fs
stc
jae
xor
imul
das
ljmp
mov
or
mov
mov
mov
mov
into
mov
inc
js
adc
xor
aaa
je
jnp
jecxz
test
fiaddl
nop
nop
aad
xor
bound
nop
mov
je
push
gs
push
push
mov
out
xchg
fildll
jne
jo
mov
dec
sub
int
mov
sub
aad
add
jle
pop
add
loope
scas
sub
arpl
jo
or
subb
subl
sub
mov
push
shll
std
scas
out
push
inc
andb
dec
push
je
or
sahf
push
repz
cmc
addr16
loop
sub
popf
lcall
adc
cli
mov
lea
movsb
cmp
mov
xor
dec
and
add
mov
xchg
pop
push
pop
scas
les
or
xor
imul
or
mov
adc
jbe
frstors
stos
cmp
fdivr
std
push
mull
popa
mov
lcall
and
fdivs
or
lahf
xchg
fstl
in
enter
insb
sub
ss
in
daa
mov
sub
push
out
cmp
and
push
popf
loope
cmc
add
cmp
push
jg
inc
sub
scas
scas
pop
pop
lahf
ret
popa
cs
scas
stos
pop
and
push
sahf
mov
jb
xlat
in
push
insl
lcall
imul
mov
push
jmp
pop
roll
jns
dec
loope
push
in
pop
inc
xchg
mov
sbb
add
pop
xchg
scas
sbb
daa
iret
fdivrl
sbb
xchg
push
clc
imul
lret
icebp
mov
sub
das
pop
jg
and
push
adc
data16
sbb
adc
mov
sarb
lahf
cmpsl
sub
outsb
mov
test
cld
jb
xchg
mov
and
sub
mov
and
fwait
out
cmp
cmp
dec
sub
xchg
rcl
repnz
adc
nop
enter
add
push
fcompl
mov
hlt
stos
mov
pop
add
fisubl
push
push
sub
and
test
sbb
test
add
pop
mov
or
loop
push
xor
cmp
jle
daa
test
pop
ljmp
push
sub
sub
jmp
ficomps
lods
cmp
int
das
call
lods
pop
rorl
adc
loopne
jno
jnp
insb
icebp
sbb
mov
ds
imul
loope
dec
pop
push
push
mov
aam
pop
inc
ljmp
dec
lods
xchg
adc
cmpsl
dec
nop
lret
aas
sahf
shll
gs
xchg
or
sti
daa
mov
push
xor
xchg
jno
pop
imul
adc
imul
out
in
aam
inc
mov
add
cmp
jge
add
idivl
cs
mov
dec
sbb
enter
clc
aam
inc
push
shrl
enter
lods
xor
xor
mov
aam
xchg
shrl
mov
out
inc
shl
fmull
xor
cmpsl
shlb
in
jb
adc
loop
dec
cmpb
sub
shr
mov
dec
stc
pop
fs
xchg
mov
cwtl
xchg
fidivl
cli
cld
mov
add
dec
cmpsl
push
ret
sbb
inc
inc
and
jnp
fisttps
push
or
sti
or
or
inc
flds
das
icebp
dec
xchg
icebp
frstor
insb
push
add
or
mov
cs
stos
and
rorb
insb
nop
pop
dec
push
push
jge
push
and
xor
js
lret
mov
push
inc
fwait
sbb
jne
je
mov
fdivs
les
pop
push
adc
push
out
ljmp
mov
sub
mov
jae
xchg
sub
lea
ljmp
ret
pop
bound
cmp
jnp
nop
aam
push
inc
mov
jecxz
xchg
jnp
daa
sub
mov
sahf
cwtl
dec
mov
aad
sbb
cmpsl
in
lcall
int
rolb
dec
inc
mov
push
out
lods
stos
xchg
insb
sbb
push
push
inc
pop
mov
clc
dec
mov
push
mov
push
mov
xchg
stc
stos
lcall
mov
cmpsb
aam
ja
pop
cmp
sub
rcr
into
cli
mov
mov
push
xor
mov
lcall
scas
stos
cwtl
mov
das
ret
mov
nop
fisttpl
lret
and
jge
popa
mov
repnz
jo
scas
mov
hlt
popaw
inc
leave
mov
ret
adcl
xchg
fistpll
mov
push
lods
div
push
dec
int
cmp
loopne
and
and
xchg
ss
sub
loope
push
mov
inc
inc
sahf
movsl
cmp
in
dec
scas
push
std
push
push
hlt
clc
xor
push
ss
jno
sarb
loope
mov
jmp
push
data16
dec
rcrl
jp
das
cmp
stos
push
mov
es
push
loope
xor
in
cmp
repnz
aaa
shll
xchg
xor
push
js
mov
flds
test
or
aam
sbb
sub
rol
dec
adc
jmp
add
ret
jnp
mov
xchg
lcall
test
dec
cmpsl
bound
stos
mov
mov
pop
subl
mov
dec
mov
popa
push
das
lea
xor
mov
insb
inc
mov
adc
pop
xor
and
popa
jno
lds
xor
loopne
cmp
sub
test
cmp
dec
call
push
popa
aas
jge
inc
and
sbb
mov
bound
adc
into
push
xchg
push
fistl
mov
jle
test
add
int
outsb
pop
jecxz
stc
ljmp
mov
or
mov
into
rorl
ss
cmp
push
int
adc
sbb
test
enter
clc
fcomps
aas
inc
pop
add
lret
cwtl
loope
add
addr16
clc
xchg
repz
xabort
and
inc
idivb
xchg
sarb
pop
xor
fstl
add
xor
mov
pop
subb
xchg
decl
test
jb
je
mov
dec
adc
imul
push
push
inc
push
lock
aam
adc
insb
aaa
cmp
push
mov
push
mov
in
inc
jle
cltd
in
sahf
cli
add
loope
into
lods
mov
lcall
imul
pop
inc
mov
shr
sub
cmp
add
icebp
sbbl
fs
jge
xchg
das
or
push
jnp
sbb
fsubl
jp
cltd
and
sbb
faddl
push
cmp
outsb
pop
mov
push
stc
dec
call
inc
mov
lcall
lods
pushf
jge
popa
mov
rcrb
aam
fnsave
and
pmaxub
inc
mov
es
scas
fidivrs
cmc
test
in
and
sub
mov
insl
inc
and
xchg
loop
inc
dec
std
or
xchg
cmp
add
xchg
jmp
mov
movsl
xchg
xor
in
out
test
ret
loopne
std
jo
out
rorb
and
cmp
xchg
fwait
adc
inc
lahf
sbb
xchg
leave
push
jecxz
dec
add
ljmp
add
sub
cmpsb
mov
gs
mov
adc
pop
xchg
outsl
inc
inc
cmp
jge
and
lret
jmp
sub
mov
ljmp
mov
stos
pop
out
pop
fimuls
rorl
cmpsb
push
xor
xchg
icebp
push
bts
dec
outsl
push
lahf
test
test
jae
or
scas
inc
mov
daa
sti
imul
or
jmp
insl
jge
fisubs
cltd
test
inc
mov
fldt
and
xor
xor
and
inc
sub
sub
mov
sub
cmc
out
cmp
test
adc
or
dec
sub
mov
aad
mov
mov
dec
ror
inc
test
push
loop
in
push
insl
sub
ja
lock
mov
dec
jo
aad
std
push
imul
movsl
mov
mov
shlb
dec
push
push
jl
in
nop
cmc
adc
into
mov
outsl
push
ds
into
cmpsl
sub
test
cmp
inc
dec
jge
out
pop
lds
and
out
std
dec
xorl
scas
popa
icebp
mov
or
or
std
jno
arpl
mov
scas
dec
test
or
mov
test
scas
pop
cmpsl
rol
in
or
dec
inc
out
push
mov
pop
in
push
push
push
jmp
or
or
xor
or
xchg
pop
les
loop
push
fs
xchg
jne
pop
out
scas
xlat
fstl
xor
aam
leave
outsb
lock
inc
or
push
ror
push
sub
in
inc
les
add
das
test
pusha
xchg
lods
or
push
sub
pop
icebp
mov
shrl
loopne
jb
inc
inc
xchg
fdivrl
mov
and
push
lcall
sbb
ds
lds
andl
arpl
add
dec
pop
xor
push
rclb
lock
push
mov
mov
inc
in
or
pop
insl
outsl
in
pop
jge
test
icebp
push
jge
mov
push
mov
push
add
mov
or
in
jl
pop
sbb
repnz
movsl
aaa
fcom
jbe
int
inc
push
inc
notb
cmp
push
and
xor
js
jns
fbstp
mov
clc
push
insl
adc
push
pop
push
cmp
in
mov
popa
int3
movsb
mov
inc
inc
in
pusha
rclb
ror
or
lahf
cltd
insb
and
mov
aas
mov
xlat
and
dec
mov
frstor
adc
dec
xor
pshufw
cmp
loopne
test
lea
or
std
inc
push
loop
push
iret
sbb
add
fistpll
in
jne
leave
jle
dec
ja
movsb
and
inc
int3
mov
mov
cli
mov
call
ret
out
pop
mov
xor
sar
mov
xor
neg
xchg
pushf
jno
enter
and
lret
xlat
addb
cmp
adc
mov
addb
dec
push
cld
ds
inc
imul
or
mov
out
arpl
je
mov
lods
add
adc
mov
jno
fsts
sbb
nop
out
or
stc
pushf
negl
cmp
std
aad
adc
mov
dec
sub
or
dec
or
push
in
out
xchg
divl
fsubs
inc
push
jae
cmpsb
in
xlat
pop
dec
das
dec
cld
out
mov
mov
mov
mov
ja
repnz
ljmp
cld
scas
mov
stos
xchg
cld
and
push
inc
push
stc
cmp
adc
les
dec
inc
mov
dec
lds
cmp
jnp
movsb
xor
repnz
in
or
and
test
dec
mov
lret
dec
sahf
cmp
ljmp
adc
rcrb
sbb
inc
push
xchg
inc
fucom
jge
mov
dec
push
movsb
mov
xlat
aaa
rcrb
mov
jne
jb
fdivl
in
pop
loope
ficoms
pop
mov
mov
pop
lret
mov
fildl
shll
mov
xor
std
pop
and
mov
jnp
sub
imul
test
dec
mov
mov
fisubrs
push
dec
dec
pusha
xor
jns
out
nop
push
add
xchg
mov
aad
push
xor
rclb
jmp
xchg
add
or
divl
out
jae
jns
ja
or
call
pop
je
pop
jmp
sbbb
pop
sar
mov
popf
cmp
daa
loopne
loope
in
jmp
inc
xchg
mov
push
popf
stc
sarl
push
icebp
jo
rcrb
and
adc
jbe
lock
push
iret
das
push
mov
loopne
imul
mov
xchg
inc
jmp
pop
mov
jo
js
mov
mov
movsb
mov
add
jmp
or
pushl
push
fs
shl
inc
add
and
aad
pop
mov
loop
xchg
fildl
jl
sub
dec
mov
testb
adc
data16
call
out
movsb
mov
das
pusha
xchg
stos
mov
bswap
lret
jle
pop
add
push
xor
out
fwait
xchg
add
mov
jae
adc
cmpsb
pop
enter
dec
icebp
jg
stos
xor
test
jecxz
cmpsl
movsb
or
aas
cli
inc
inc
repnz
xor
mov
out
filds
inc
aad
push
sti
or
push
dec
xchg
pop
in
test
addr16
in
lock
xchg
adc
push
sub
inc
stc
aaa
cmp
rol
daa
push
dec
or
rcl
xchg
or
enter
cwtl
pop
and
dec
sahf
xor
adc
neg
cmp
clc
outsl
data16
jae
sub
sub
repnz
out
movsb
lods
rolb
pop
jge
pusha
outsb
out
add
insl
mulb
cmp
sbb
jbe
je
ffree
inc
push
aaa
jp
add
hlt
testl
fdivrp
orl
stos
xor
cmpsb
out
aad
bound
xchg
out
or
cmpb
lret
sbb
sahf
dec
sub
pop
pop
mov
das
mov
xlat
fnstsw
or
jo
or
fidivrs
push
pop
std
es
pushf
mov
xor
out
pop
cmp
aam
mov
outsb
cli
sub
lea
push
push
xchg
icebp
clc
adc
aas
mov
test
cmc
push
jl
pop
clc
jmp
sub
add
dec
xor
sbb
repz
add
adc
sub
mov
outsb
fisubl
nop
push
insl
inc
mov
es
cmpsb
sub
cmp
mov
movsl
test
inc
or
imul
or
adc
mov
mov
mov
fs
repnz
jle
mov
lcall
jmp
out
push
xchg
test
adc
pop
js
pop
stc
in
mov
inc
mov
cmp
mov
push
pop
rorb
fnstenv
leave
adc
jb
fsubrp
and
cmpsb
sahf
movsl
dec
xchg
mov
push
mov
push
mov
xchg
and
jo
dec
push
insb
inc
jns
push
rcr
ja
cmp
sub
xlat
imul
js
fistl
pop
inc
push
repz
int3
cmp
jo
iret
xlat
mov
mov
cmp
jmp
push
pusha
hlt
por
popa
adc
shll
sbb
sub
inc
or
xchg
sbb
mov
add
call
cltd
adc
test
jmp
rorl
sbb
mov
fcoml
add
movsb
inc
jl
mov
xlat
lcall
mov
stos
inc
pop
add
xchg
lcall
popf
jne
cmpsl
mov
jmp
in
cmpsl
notl
pop
popf
mov
xchg
outsb
insl
pop
xor
sub
adc
js
ss
push
or
les
and
jp
pop
scas
loope
mov
push
mov
jmp
sbb
movsb
pop
je
push
mov
jle
loope
mov
call
mov
cmp
or
sub
sbb
pop
repz
push
mov
cmpsb
cmp
sbb
inc
and
mov
push
aad
bound
sub
mov
les
scas
or
push
xchg
movsl
and
dec
ret
sbb
and
fildll
sbb
into
call
or
pop
cmp
or
xor
jne
or
mov
push
sbb
test
mov
sbb
cltd
pop
mov
aaa
pop
fisubs
in
push
je
dec
xor
jo
lea
test
and
aas
imull
mov
lcall
nop
push
mov
data16
mov
xchg
and
jle
mov
dec
ss
pop
cmp
std
xchg
dec
xorb
cs
or
add
lret
xchg
rcll
fists
sbb
and
dec
call
out
lcall
sarl
aam
test
shll
sbb
arpl
rcrl
add
test
loope
jge
add
xchg
cmp
adc
cmpsl
xchg
popf
xchg
xor
xchg
js
bound
test
aas
mov
mov
mov
shr
test
lcall
imul
lds
pop
out
lret
gs
mov
addl
fistpl
jg
inc
xor
mov
outsb
pop
or
dec
push
inc
in
push
lret
repnz
inc
loopne
sub
lods
jae
dec
popf
ds
add
mov
popf
icebp
ds
inc
ja
xchg
aam
jnp
dec
test
loopne
ja
rorb
aas
inc
fstl
scas
daa
push
stc
pushf
mov
dec
ret
mov
mov
inc
cltd
fucomp
in
dec
shlb
sbb
jp
mov
sub
xor
hlt
imull
rcr
inc
lret
mov
xor
adc
pusha
add
data16
pop
mov
sbb
enter
ret
xor
jb
in
or
mov
or
out
cwtl
jge
and
dec
fbld
icebp
ret
jmp
jecxz
xchg
js
xor
xor
push
jle
ret
pop
rorb
lcall
sahf
push
mov
cvttps2pi
imul
pop
sub
rorb
movsl
enter
xchg
movsl
jge
fidivs
dec
pop
or
xor
mov
loope
test
xor
cli
mov
in
adc
mov
dec
rolb
repz
sbb
jae
sub
dec
pop
outsl
outsl
fsubrl
popa
or
push
pop
adc
cmp
cmp
cli
dec
pushf
cmp
push
out
xchg
movsl
or
mov
call
rol
add
xor
and
sbb
aas
dec
inc
mov
ljmp
mov
or
fwait
roll
sbb
lahf
mov
cmp
in
add
sub
xor
adc
out
arpl
inc
dec
cmp
jnp
jae
jb
lock
mov
daa
lds
cld
jge
psrad
pop
mov
scas
dec
mov
dec
subl
mov
mov
js
out
call
pop
or
cs
pop
mov
jns
stos
rolb
test
adc
xchg
popa
and
cwtl
or
cmp
fst
repz
out
stc
cmp
cwtl
rclb
mov
in
test
rcr
mov
mov
jl
pop
jle
jp
call
ss
xor
mov
loopne
xchg
jbe
lret
out
mov
sti
or
lret
mov
push
movsb
sub
mov
lret
mov
adc
fldt
icebp
mov
or
fisttpll
pop
or
pop
dec
rclb
push
das
pop
mov
xlat
mov
jge
push
ljmp
and
inc
push
mov
mov
dec
cs
mov
jmp
jg
push
dec
jg
push
adc
mov
and
popf
fdivrs
jo
pop
adcl
leave
mov
in
imul
jb
jae
rcll
pop
sbb
into
loopne
lcall
fldl
add
sub
aas
sub
adc
or
stos
xchg
mov
shl
mov
jo
and
sar
adc
cmp
and
dec
out
mov
imul
dec
popf
out
sbb
and
aaa
mov
xor
mov
or
fisttpll
xor
inc
movsl
pushf
in
jns
jg
aad
ja
ffreep
jge
and
sub
cli
add
cmc
mov
scas
and
dec
inc
or
aaa
mov
les
mov
addb
jmp
adc
shlb
pusha
sbb
mov
jne
inc
sbb
movsl
jo
pop
fsqrt
iret
fisubs
add
js
cmp
pop
pop
stos
popf
mov
push
lcall
mov
or
std
push
ret
andl
add
andl
jmp
mov
sub
dec
nop
aam
subb
in
ret
cmp
mov
movsb
out
idivl
aaa
jecxz
sti
rorb
hlt
icebp
pop
dec
mov
jmp
mov
ja
cld
orl
cmpl
push
xchg
sub
clc
cwtl
adc
sbb
jle
pop
nop
sub
or
arpl
outsl
rcll
js
xor
out
pop
push
mov
adc
ss
bound
sbb
cwtl
sbb
add
ljmp
cli
daa
sub
out
popa
mov
ss
sbb
xor
xchg
movsb
adc
shll
pop
lock
fs
addr16
ljmp
inc
pop
sbb
cmc
mov
popf
cmc
jae
lret
in
stos
pop
loop
mov
ret
imul
enter
xorb
cli
jecxz
push
and
sub
shl
dec
adc
cmp
jl
shlb
sub
xchg
rorb
mov
sarl
in
adc
lahf
pop
movsl
sarb
movsl
rol
outsl
inc
shll
xor
xchg
gs
pop
inc
out
in
cmc
push
and
mov
mov
mov
ds
mov
cmovno
lock
in
and
push
fbld
lahf
mov
or
xor
lret
call
popa
ret
and
loopne
imul
cmpsl
cwtl
psrld
or
or
mov
loope
pop
dec
shrb
jbe
out
int
bound
outsl
rcrl
or
inc
imul
inc
outsb
mov
clc
or
lcall
jmp
or
mov
sti
xor
je
and
lret
mov
jbe
dec
jge
pop
pop
lret
sbb
xchg
add
shll
xlat
mov
and
les
mov
fwait
xor
dec
jb
mov
cmpsb
push
pop
jo
mov
dec
xchg
lcall
into
inc
clc
push
adc
xor
mov
inc
sbb
lcall
xchg
ljmp
mov
xor
xor
xchg
jp
loop
cltd
in
dec
add
adc
cmpsl
and
add
mov
cmc
adc
scas
mov
pop
cli
sbb
fs
xor
or
inc
jge
int3
or
dec
je
jns
mov
lea
arpl
pop
ret
popa
cmpsl
es
loope
mov
enter
inc
imul
push
jmp
ss
mov
imul
and
gs
jbe
popa
xchg
or
cmp
and
js
test
in
frstor
xchg
add
into
daa
out
and
mov
in
mov
mov
leave
aaa
shll
imul
iret
clc
push
insl
popf
rorl
jnp
sahf
mov
mov
mov
xor
dec
icebp
xor
rcr
push
mov
sarl
mov
insb
les
xchg
cmpsl
jb
mov
clc
enter
fucomp
cld
ss
mov
push
sbb
mov
mov
xchg
dec
cltd
stos
dec
push
lea
sbb
mov
pushf
cs
out
xchg
gs
dec
push
sahf
mov
dec
cltd
aas
into
inc
sbb
cld
pop
mov
cmp
lret
or
cmpsb
and
cmpsb
sbb
xor
pusha
pop
addl
push
arpl
ljmp
xchg
movsb
pop
fs
mov
dec
fmull
lock
cmp
into
adc
add
mov
push
dec
cmc
jmp
outsl
pop
cmp
mov
or
xchg
add
mov
sbb
inc
mov
lods
aaa
ja
jecxz
or
xor
jae
cmpsl
or
cmpb
xchg
dec
out
movsl
push
dec
inc
cmpsl
mov
jne
jae
cmpsl
cwtl
sub
divb
or
xor
fbstp
jb
std
arpl
sbb
xchg
mov
cmpsl
sub
mov
pusha
ficomps
stos
push
lea
movsb
stos
movsl
adcl
mov
sub
inc
sbb
adcl
ss
adc
in
mov
outsl
jae
test
cmc
sti
dec
lock
mov
dec
sub
xor
push
mov
lret
outsl
xchg
daa
test
insb
cmp
orl
mov
daa
mov
bnd
int
ret
fadds
xchg
leave
xchg
pop
jg
loope
data16
mov
shll
mov
sub
leave
and
inc
push
jl
xchg
xchg
or
scas
sbb
add
test
xchg
test
add
push
ret
jns
ret
pop
cmp
cmp
movsl
pop
inc
movsl
pop
fsubrs
push
je
and
pop
hlt
leave
lret
aad
mov
testl
adc
xchg
cld
loope
adc
mov
cld
cmpsl
rcrb
lahf
adc
call
cmp
fldl
push
sub
in
dec
loope
add
pop
les
jmp
inc
adc
jge
inc
jp
dec
jno
mov
pop
and
mov
sub
adc
sbb
xchg
xlat
fsubl
das
mov
or
bound
shrl
data16
jmp
out
mov
ds
jg
cmc
sub
inc
pop
cmp
mov
sub
jp
cmpsl
cmp
mov
decb
mov
cmp
pop
cld
mov
rdtsc
fsubp
test
scas
push
fisubl
dec
ss
sub
dec
adc
mov
int3
stc
cltd
icebp
xchg
je
jno
inc
das
mov
gs
enter
aad
pop
jmp
push
sbb
enter
xor
jmp
xchg
add
mov
mov
mov
daa
push
jbe
push
dec
pop
out
xor
dec
adc
lcall
inc
jnp
xchg
outsl
sbb
insb
loop
jns
repnz
inc
mov
adc
aad
lret
mov
pop
jb
add
dec
mov
dec
insl
sbb
jge
jb
rcl
insl
out
jns
inc
mov
subb
xor
or
xchg
adc
jne
sti
and
rol
dec
xchg
xor
dec
aaa
mov
fwait
jnp
lods
daa
push
rcrb
mov
xor
mov
sbbl
in
outsb
push
movsl
add
dec
ss
sub
sarl
xor
je
data16
xchg
xor
ljmp
and
outsl
sub
dec
jg
popf
and
aaa
xchg
cmp
enter
push
es
sub
push
sub
shlb
push
lret
pop
aad
pop
dec
dec
es
rcrl
xchg
jge
insl
cld
ret
stos
cmp
xchg
jo
sahf
mov
in
sbb
push
sbbb
jl
scas
lahf
das
scas
sub
out
rcrb
sub
lret
jg
test
dec
movsl
xchg
clc
push
ja
sbb
call
cmpsl
adc
fucomp
fsubs
push
mov
push
inc
stos
mov
adcb
imul
jmp
into
mov
fistl
add
aam
inc
pop
dec
outsl
test
inc
mov
xlat
ret
pop
jb
jl
popf
loop
outsl
cmpl
int
stos
outsb
push
mov
cli
cmp
xchg
lret
cmpsl
xchg
decl
inc
or
xchg
or
pop
cs
fisttpll
add
mov
mov
sub
shlb
adc
mov
adc
mov
hlt
int3
cltd
mov
push
aam
inc
fcomps
cmc
inc
enter
je
test
addr16
mov
neg
lock
dec
repz
aas
mov
pop
push
shll
mov
hlt
lret
fxch
movsb
cmpsl
adc
cmc
mov
in
mov
xorb
rclb
adc
out
test
into
test
mov
push
jle
insb
jno
sti
xchg
or
test
mov
inc
popa
lods
mov
xor
lret
mov
mov
push
jae
inc
lea
sub
ljmp
lahf
and
jecxz
mov
loope
mov
pop
out
push
loopne
bound
loop
jecxz
or
lret
das
xor
jae
dec
aad
mov
jb
mov
jge
add
icebp
movd
and
test
fcmovb
jns
lret
inc
loop
test
xlat
push
aaa
outsl
inc
sti
daa
cli
mov
push
pop
or
sub
mov
xchg
out
pop
pusha
cmpsl
inc
dec
dec
cli
imul
sbb
cmp
sbb
push
in
pop
loope
mov
ja
adc
data16
dec
sbb
iretw
data16
xchg
pop
movsl
lea
inc
push
imul
sub
and
and
aas
pop
pop
loop
mov
mov
js
lret
rcl
push
jmp
jl
popf
ja
aad
test
popf
mov
loop,pt
roll
addr16
test
andl
xchg
ret
lock
inc
cmpb
xor
jbe
mov
cmp
inc
xchg
filds
scas
mov
popf
cmp
mov
cli
fcomip
addb
pusha
mov
cmpsl
fisubs
mov
push
jl
out
bound
notl
ja
and
repnz
sbb
jo
push
and
arpl
jge
fs
mov
int3
dec
rorl
mov
aam
in
jmp
push
ret
dec
push
mov
rcll
loopne
adc
push
push
xor
daa
inc
daa
fisubrl
enter
test
sub
cmc
lret
mov
jns
add
sub
adc
mov
mov
dec
mov
xchg
fwait
cmp
lcall
dec
jns
push
push
call
mov
add
xor
cs
mov
or
rcrb
inc
popa
pop
sub
xchg
negb
loop
ds
mov
xor
popf
sbbb
pop
pop
cmc
mov
rcr
dec
test
movsb
movsb
cmp
xor
fcmovbe
sbb
sub
jns
andl
out
mov
jecxz
test
push
mov
fnstenv
rcll
pop
cmp
movsl
jo
fistpll
and
ficomps
lds
cld
movsl
jnp
mov
subb
sbb
or
pop
or
pop
cmc
push
pushf
push
mov
xchg
into
je
xchg
incb
jbe
inc
in
sub
adc
lret
dec
sub
popf
hlt
bound
and
sub
cmp
fwait
js
es
testb
inc
lret
mov
aaa
jge
shlb
xchg
rclb
ffree
out
inc
pop
ret
outsb
int3
adc
test
mov
xchg
push
push
pop
sahf
xchg
outsb
lods
scas
test
mov
mov
pop
call
stos
push
or
jnp
or
jmp
inc
out
rcrl
add
pop
out
sbb
lcall
xor
mov
cwtl
inc
jb
out
les
ljmp
push
jge
icebp
pushf
sub
push
xlat
repnz
mov
push
in
mov
dec
mov
adc
push
mov
add
insl
sbb
push
out
add
pop
sbb
jne
xor
orl
scas
pusha
int3
call
xlat
mov
in
sti
repnz
test
mov
pusha
mov
outsl
and
inc
mov
add
jl
inc
sub
mov
or
sub
lods
das
fldl
lods
sub
pop
ror
mov
ja
aam
fildll
jns
loopne
cmp
xlat
push
xchg
jmp
and
fistps
mov
enter
out
lock
dec
mov
mov
dec
xchg
scas
lret
repnz
adcl
je
adc
rorl
sbb
mov
insl
jmp
test
movsl
out
jae
jl
pop
frstor
mov
mov
stos
repz
stos
arpl
gs
dec
dec
sub
cmp
xchg
cmp
and
or
jns
shll
pop
mov
push
out
xlat
add
cs
test
sti
dec
leave
push
ljmp
fisttpl
shlb
mov
imul
or
jae
outsl
clc
je
and
cltd
fidivs
mov
cmpsl
jp
and
or
push
cli
les
out
lcall
fisttpll
push
push
rorb
repz
inc
in
sub
int3
call
pop
jne
mov
int3
pop
ficompl
fists
cmpsb
mov
add
or
stc
pop
jne
xchg
aas
push
dec
call
test
rcrb
sub
inc
cmpsb
mov
mov
pop
mov
jae
popa
push
mov
fs
push
mov
xchg
outsb
aas
and
jb
dec
push
in
jnp
mov
xlat
imul
fdivs
mov
lahf
jge
adcl
add
es
pop
mov
mov
loope
addr16
jge
mov
outsl
add
adc
or
adc
xor
in
push
rclb
in
loopne
lcall
mov
inc
ds
inc
aas
test
fstps
xor
icebp
bound
dec
mov
ss
cli
leave
sti
pushf
cltd
and
sub
in
imul
push
mov
inc
loop
sbb
sub
in
fsubl
cmpsl
or
add
jg
jl
sbb
mov
inc
lret
mov
add
lret
mov
xchg
out
sbb
gs
imul
lods
mov
mov
out
inc
mov
pop
aas
ljmp
int
pushf
xchg
aas
into
es
scas
lcall
add
dec
mov
add
add
pop
sub
push
mov
adc
xchg
lret
fnstsw
iret
mov
fwait
add
inc
jp
aam
mov
or
cmp
jns
sbb
or
loopne
xlat
add
popf
out
lods
add
cwtl
or
addr16
shrb
xlat
ds
in
jl
mov
mov
mov
lret
xchg
cmp
inc
lock
hlt
or
push
inc
xchg
sti
jbe
inc
cmc
inc
jmp
div
mov
mov
mov
hlt
subl
out
scas
jg
or
sti
xor
pop
cmpsl
mov
shlb
push
addr16
lahf
mov
test
cs
and
stc
push
popf
jle
adcl
xchg
sbb
xchg
dec
divb
mov
fwait
mov
icebp
fsubrs
xchg
jne
das
pusha
adc
xorl
mov
mov
mov
lds
andb
fsubs
mov
push
xchg
mov
xchg
mov
les
add
mov
inc
adc
adc
les
pop
jno
repnz
das
stos
insb
cmp
xchg
lcall
jl
lcall
mov
push
mov
sub
xchg
shrb
aam
pop
adc
push
loop
out
and
xor
fucomip
scas
xor
fnstcw
mov
imul
mov
jmp
xchg
pop
dec
cmp
daa
push
in
cwtl
jb
and
xchg
leave
jmp
shlb
call
pushf
jb
cmp
mov
cmp
lods
dec
lret
das
pop
das
out
mov
pop
in
in
cwtl
popa
popa
push
jecxz
ficompl
push
fldl
clc
cmp
lcall
jmp
loopne
sarb
pop
fnstenv
daa
and
scas
loope
cmpsb
push
test
push
or
clc
sbb
in
loop
add
pushf
daa
add
cmp
mov
sub
int3
xchg
ficomps
cltd
cmp
lock
sbb
cmp
jne
and
jl
add
std
inc
lcall
add
dec
mov
xor
cmc
ja
ficompl
scas
aam
hlt
mov
iret
xchg
lds
sbb
jge
adc
xchg
insb
jmp
jno
add
sub
push
or
mov
gs
bnd
or
arpl
cs
ret
jno
shll
push
clc
mov
rcr
scas
mov
lret
lret
icebp
push
cmp
sub
mov
jp
subb
pop
mov
inc
inc
push
jnp
and
roll
fwait
es
mov
push
adc
mov
mov
mov
jns
push
dec
lock
leave
fwait
inc
adc
and
pushf
stos
test
sbb
inc
adc
sub
adc
aam
ret
mov
cwtl
xor
mov
lods
mov
std
imul
xchg
in
popa
dec
out
mov
orl
in
std
sbb
cmc
jo
add
and
push
sbb
in
fistps
xchg
jbe
mov
pop
and
and
pop
mov
popf
addl
scas
push
mov
bnd
jb
ds
or
push
das
or
pop
decb
cmpb
sub
or
out
cmp
pusha
adc
lret
xor
adc
pushf
pop
loop
es
je
xchg
xor
mov
inc
mov
roll
ss
arpl
dec
push
mov
lahf
sarb
xor
jl
and
mov
mov
call
inc
push
jmp
xor
mov
adc
subb
mov
icebp
jns
pushl
jns
push
push
out
popf
in
pop
jae
and
cmp
pop
jo
or
cmc
inc
cmp
jo
pusha
out
mov
dec
xor
push
cmp
orb
aam
cmpl
jb
loop
test
or
cwtl
add
fisubrl
and
test
cmpsl
ljmp
inc
push
pop
pop
push
cmc
aad
lods
fistpll
mov
movsl
sbb
inc
xchg
adc
or
add
insb
add
insl
hlt
insl
jl
mov
fistpll
inc
xlat
pop
xchg
cltd
insl
je
fdivrl
sbb
ss
into
mov
mov
shll
shr
sahf
cmc
in
add
or
dec
nop
movsb
pop
inc
sbb
push
in
ljmp
xor
repz
mov
pop
jmp
ds
popl
or
int
fistpl
stos
jnp
out
jne
shrl
test
je
test
call
inc
mov
xchg
out
push
mov
bound
loope
pop
mov
cmp
pop
in
in
jbe
scas
mov
push
adc
mov
leave
loopne
notb
imul
jmp
mov
mov
push
sub
shl
push
sub
out
add
fidivs
lods
popf
ljmp
push
pop
mov
iret
movsl
mov
loop
dec
jle
xor
xlat
fwait
adc
shlb
mov
in
push
jno
pop
jbe
pop
scas
pop
and
xorb
inc
mov
aam
jp
fsubl
mov
xchg
mov
decl
jge
lods
jge,pt
jne
adc
mov
xchg
das
xchg
jmp
addr16
push
movsl
dec
or
mov
decl
cmp
mov
jle
stos
dec
mov
mov
and
adc
sbb
inc
outsb
jns
xchg
push
mov
mov
jb
inc
loopne
outsl
and
pusha
cltd
mov
mov
dec
dec
clc
inc
inc
mov
push
nop
dec
shl
sahf
scas
out
pop
fsubl
lock
dec
mov
sub
and
fwait
or
or
inc
xchg
pop
iret
into
and
nop
lret
adc
idivb
adc
xchg
push
sub
mov
push
ror
mov
cli
das
lock
leave
leave
jge
and
ljmp
cmp
sbb
cmp
inc
mov
vextracti64x2
mov
push
mov
xor
cmp
mov
pop
mov
pop
mov
xchg
jns
ficompl
mov
loop
dec
dec
in
out
mov
or
pop
mov
xchg
pop
fwait
or
cltd
flds
dec
mov
fisttpl
sub
cmp
add
sahf
shll
jp
lahf
pop
adc
push
cs
xchg
pop
dec
jg
mov
sub
fdivrs
and
and
mov
push
adc
mov
in
addr16
mov
push
sbb
jmp
xor
mov
stc
mov
aam
xor
outsl
out
lods
mov
gs
sub
mov
roll
jmp
dec
sbb
mov
pop
jno
jp
xchg
inc
fmulp
push
stc
mov
shr
mov
dec
push
mov
xor
add
inc
sbb
popf
rcr
and
out
aam
cli
leave
pop
jne
mov
inc
cwtl
or
test
movhps
pop
call
adc
je
in
mov
push
mov
add
adc
rorl
xor
and
mov
lock
cwtl
mov
adc
das
ds
mov
int3
lcall
fwait
aad
pop
test
stos
call
dec
pop
pop
lods
xor
or
or
mov
add
adc
adcb
pop
or
cmp
push
fwait
cmpsl
jmp
xchg
add
pop
cmpl
loope
xchg
decb
arpl
lods
rcr
stc
sub
mov
jnp
cwtl
movaps
lret
xor
lret
jp
pop
lds
push
fcmovnbe
push
sti
rcrl
mov
roll
jmp
daa
mov
in
cwtl
rorb
in
sub
cmc
fs
jmp
movsb
in
inc
add
adc
mov
adc
mov
hlt
or
xchg
push
xor
rorl
dec
iret
clc
sbb
cltd
adc
mov
mov
ljmp
xor
fs
fdivrs
cwtl
out
sbb
scas
out
pop
lcall
dec
jl
xchg
call
cltd
add
xchg
dec
arpl
out
pusha
cmpsl
fs
push
in
cmpsb
repz
popf
ret
shll
dec
push
mov
inc
push
add
lahf
ret
add
xchg
out
in
xor
inc
cld
pushf
shlb
or
sub
adc
loop
rcr
lods
xchg
inc
cmpsb
dec
sahf
ja
movsb
cmp
jno
jmp
xchg
test
ja
sub
es
sbb
out
ficoml
loope
xor
fists
inc
cmpsl
jmp
xor
mov
dec
jns
adc
push
hlt
mov
std
aaa
aad
xor
popf
dec
mov
and
xchg
pop
adc
gs
test
stc
sbb
lds
xor
cli
xor
xor
adc
repnz
cmp
push
inc
outsb
and
ja
roll
jp
ljmp
push
and
insl
aam
or
movsb
push
adc
and
sti
push
push
dec
mov
cltd
imulb
cmp
in
mov
dec
addr16
aaa
jg
push
push
sbb
outsb
inc
out
add
dec
push
fidivrs
sbbl
push
insl
pop
or
shlb
arpl
popa
insb
xchg
adc
ds
addr16
sub
mov
fcompl
arpl
fwait
out
sub
pop
movsb
fmull
mov
push
bnd
out
aas
push
in
call
or
ja
mov
subps
pop
ja
inc
jle
xchg
xchg
mov
add
in
test
cmp
adcb
gs
push
hlt
divb
sahf
xchg
pop
shr
fsin
mov
push
mov
lcall
jnp
jmp
xchg
aad
xor
cmc
fcompl
popa
sbb
xchg
push
pop
inc
pusha
aas
in
iret
mov
gs
push
cmp
push
fmull
lcall
push
jo
push
out
xor
fidivrs
or
pushf
call
xchg
in
fsts
call
ljmp
fwait
repnz
lret
loopne
inc
push
ret
ljmp
fcomps
pop
pop
pop
lock
repz
fimull
push
mov
xor
rcll
and
cwtl
std
not
pop
lods
cmpsb
dec
xchg
jl
inc
add
push
fstpt
or
xor
and
xlat
lcall
cmp
hlt
mov
sbb
adc
or
sub
dec
clc
je
cwtl
or
wrmsr
pop
pop
jne
mov
arpl
hlt
pop
dec
cld
mov
ss
sbb
movsl
movb
sarb
mov
add
add
xchg
xchg
adc
push
movsl
push
inc
stos
data16
jle
aam
test
mov
daa
in
or
add
xor
xchg
or
sub
jno
mull
or
push
cs
sub
fs
test
jecxz
xor
mov
outsl
outsb
mov
mov
cmp
cli
scas
popaw
mov
mov
sub
jo
fsubs
call
xor
stc
adc
add
xor
inc
stos
jae
cmp
pop
pop
or
dec
push
jbe
mov
daa
in
xchg
inc
mov
pop
in
xor
adc
xor
fcoms
mov
adc
loop
outsl
or
movsb
cmp
orb
out
iret
in
inc
cmc
andb
scas
sahf
jmp
cli
out
fldcw
mov
imul
mov
loopne
in
in
insl
mov
mov
nop
popa
das
sub
sahf
addb
dec
jo
out
cld
jmp
outsl
sub
call
jge
or
rcll
lds
pusha
mov
pop
pop
fwait
sbb
adc
sbb
enter
or
sarl
addb
jge
dec
stos
fnstcw
add
pop
imul
inc
bound
xchg
data16
fmuls
xchg
pusha
mov
pop
jle
inc
mov
dec
add
ret
push
inc
test
sbb
bound
aam
mov
mov
pushf
cli
xchg
jl
xchg
stos
push
jno
push
mov
mov
sbb
lods
dec
cmp
into
xor
and
fstpl
inc
roll
xchg
xor
daa
aad
es
insb
cmp
sbbl
repnz
rcrl
xor
ror
hlt
jmp
inc
mov
xlat
jbe
leave
xor
data16
rcrl
pop
mov
out
adc
pushf
push
cwtl
out
out
orl
mov
mov
cmp
add
pop
bound
popa
and
push
and
fiaddl
xlat
dec
xchg
cmp
mov
ss
xchg
mov
and
pop
repz
sets
sub
pop
shrb
pusha
mov
push
mov
adc
xor
int3
into
pop
ret
mov
fisubl
das
dec
les
push
jl
test
popa
inc
addb
dec
popf
inc
jecxz
push
jne
pushl
lcall
fisubs
daa
mov
push
add
mov
push
fisubrs
jbe
and
add
cmp
pop
mov
cld
ljmp
cld
lret
and
out
jp
mov
inc
jmp
jne
out
into
cmp
out
and
mov
lret
in
cltd
js
or
fcos
enter
nop
push
jae
int
movsl
mov
out
sub
aaa
ljmp
das
inc
mov
adc
nop
mov
popf
arpl
aas
std
adc
pushf
add
push
jle
sbb
jb
xor
flds
pop
or
xor
loopne
adc
test
inc
jbe
setge
sub
mov
insb
inc
and
xor
jo
inc
insb
in
lea
lds
outsb
pop
push
jle
pusha
jg
arpl
in
fwait
push
lret
add
or
fistpll
xchg
inc
mov
mov
inc
outsl
xor
bound
in
int
or
adc
imulb
mov
push
sub
mov
fs
data16
inc
inc
les
and
inc
pop
repnz
jb
in
sbb
out
jp
push
shl
mov
push
cld
cwtl
ljmp
cmp
add
gs
int
xor
push
mov
pusha
icebp
bound
cmp
sbb
pop
mov
iret
jp
pusha
mov
insl
cmpsb
aas
jp
ss
xchg
andb
add
addr16
push
push
sub
mov
pop
sbbb
jae
mov
mov
mov
scas
push
push
stos
js
push
mov
cmpsl
xor
pop
and
repnz
inc
imul
push
jl
pop
rcll
sbbl
ljmp
insb
popl
aad
subl
pusha
mov
sub
mov
push
std
cli
loope
pop
mov
cmpsl
jmp
data16
dec
lods
pop
dec
gs
dec
lahf
fwait
or
fnstsw
pop
aaa
adc
xchg
sbb
enter
loope
jmp
and
dec
or
push
cld
test
mov
scas
mov
repnz
push
xchg
jge
cmc
neg
add
jge
push
jmp
lret
fiaddl
call
jmp
fs
mov
mov
dec
ret
xchg
cs
test
cmp
jl
push
mov
lret
cs
xchg
ja
add
adc
xor
push
cmp
add
mov
out
cli
pop
sbb
dec
daa
dec
and
jbe
xor
pop
insb
rcrl
stos
jl
pop
clc
pop
dec
xchg
sbb
popa
xchg
cli
sub
movsb
dec
cmp
push
sub
or
mov
jecxz
push
inc
cwtl
mov
lret
cwtl
push
dec
mov
cli
je
xchg
mov
aaa
sar
pushf
mov
mov
xchg
stc
xlat
push
cmovno
fnstcw
aas
mov
loope
mov
iret
jp
es
stos
aam
cmpb
enter
adc
adc
mov
stc
movsb
or
inc
in
pop
xlat
test
xchg
pop
mov
inc
xor
int3
mov
jl
mov
imul
sti
add
icebp
mov
pop
xchg
inc
sub
iret
xchg
lea
lods
nop
inc
cmpsb
loopne
testl
fisttpll
pop
mov
xor
mov
sarl
mov
cs
mov
pop
call
sbb
insb
jne
nop
xor
cmpl
xchg
dec
movsb
lahf
fldcw
dec
xlat
movb
mov
ffreep
cmpsb
movsb
xchg
int
lahf
rcrb
stc
push
jno
fwait
pop
fistpl
cltd
shlb
cwtl
rcrb
ds
pop
and
pushf
mov
add
sbb
out
mov
and
es
xor
iret
dec
incb
xor
pop
shlb
fs
mov
andb
xchg
or
js
push
mov
xchg
aam
repnz
xor
mov
inc
inc
jl
mov
pop
xor
xor
cltd
hlt
lods
call
decb
xchg
addl
xchg
rolb
rolb
cmpsl
aam
rcll
mov
mov
arpl
jbe
dec
testb
dec
mov
clc
test
add
ss
xor
push
mov
ficoml
das
xor
mov
mov
popa
ss
fsubrl
mov
mov
std
pop
jmp
mov
dec
xor
sahf
fs
jl
pop
hlt
fsub
xor
push
arpl
push
lods
jnp
mov
std
sub
jge
or
cltd
push
mov
mov
and
outsb
pusha
mov
push
in
dec
mov
insb
adc
sub
scas
mov
sub
inc
sub
cmpsl
in
sbb
and
inc
int3
add
pop
je
adc
xchg
call
in
ucomiss
xchg
out
sbb
lods
xchg
das
cmp
xor
push
stc
loop
imul
jg
jge
sbb
xchg
jbe
pop
sbb
pop
movsb
and
mov
mov
cmpsl
xor
xchg
mov
mov
pop
pop
inc
pop
fidivs
push
lret
inc
add
nop
add
aaa
jg
inc
pushf
cwtl
or
cmpsb
out
sahf
je
pop
pop
or
or
push
sbb
mov
ja
cmp
fbstp
scas
hlt
pop
sub
push
bnd
and
pusha
pop
adc
cmp
push
cld
adc
mov
push
ret
mull
rcrb
rcll
scas
xchg
pop
in
pop
das
adc
push
rcrb
add
movsb
out
fbstp
enter
dec
test
sub
push
mov
jo
add
dec
dec
aas
sub
js
add
pop
and
scas
mov
pop
sub
movsl
sbb
push
xor
cmp
dec
stos
cli
aam
sub
in
mov
push
into
iret
pusha
into
enter
pop
cld
adc
mov
pop
lret
add
andb
daa
fmull
loope
test
out
adc
outsb
xor
ret
xorl
xchg
jmp
sub
xor
aaa
xor
scas
xchg
inc
jnp
lock
inc
aam
rclb
inc
xchg
jns
mov
das
jecxz
mov
aam
call
mov
jo
adc
test
cmpb
mov
push
add
ret
cs
sbb
xlat
mov
xchg
mov
scas
pushl
call
test
jge
pop
mov
jno
outsb
inc
xchg
daa
daa
or
and
xor
pop
push
or
addr16
mov
gs
movsl
mov
pop
mov
inc
jne
sbb
bound
jge
mov
xorb
gs
in
outsl
add
dec
xlat
shlb
xchg
and
pop
push
lahf
sahf
sub
mulb
cmp
out
mov
mov
cmp
test
js
je
mov
jne
mov
repnz
lcall
pop
test
hlt
and
inc
adc
jns
imul
pcmpgtd
scas
adc
ret
jmp
lock
mov
mov
mov
popf
mov
sub
clc
xor
jmp
notl
out
inc
fsubr
repz
jp
iret
sbb
and
xchg
xchg
xchg
shll
imul
cmp
jns
adc
adc
stos
mov
shll
inc
mov
sub
popa
leave
fstps
jo
add
sti
sbb
xor
loop
cli
bound
and
xchg
dec
xor
pop
add
in
fsts
aas
negl
or
add
sarl
mov
pop
into
fisttpll
mov
mov
pop
inc
int3
pop
in
dec
je
jmp
and
xchg
mov
push
sub
gs
cmp
dec
rcl
jo
cmpsl
jp
pop
push
jmp
aam
rcl
imul
push
sub
loop
inc
stc
push
push
pop
xchg
pop
lret
cs
cmp
stc
aam
popf
in
mov
dec
incb
push
nop
das
mov
push
inc
addl
jmp
out
xchg
jno
xchg
orb
test
inc
mov
xchg
and
ss
xchg
sbb
sub
push
xchg
jno
sbb
out
mov
xor
sarl
movsl
cmpb
insb
sbb
shrb
xor
push
xchg
orl
addl
enter
pop
fwait
mov
mov
div
cmpsl
dec
test
out
jns
inc
xor
jg
mov
push
pop
sbb
jmp
sub
cmp
cli
std
ret
mov
pushf
sbb
cwtl
dec
sbb
push
xor
subl
push
imulb
fwait
cltd
cmp
or
or
and
testb
dec
ja
dec
xor
mov
dec
push
mov
pop
pop
test
mov
pop
ret
cmp
or
mov
call
lretw
push
or
mov
cltd
push
mov
mov
ja
rcll
xchg
arpl
repnz
xchg
imull
dec
int
pushf
mov
daa
dec
sbb
imul
roll
xor
lret
and
sbb
pop
cmovge
sti
xchg
outsb
adc
lods
aaa
cmpsb
into
mov
lock
les
mov
xchg
cmp
out
cmpsb
rcrl
sbb
jno
ljmp
aad
out
sbb
xchg
mov
test
sub
loop
fists
push
adc
ljmp
adc
repnz
cmp
cmp
test
rcl
mov
pop
imul
imul
jecxz
jne
or
in
pop
push
xchg
gs
repz
rorb
cli
shl
out
and
mov
stc
push
lods
mov
cmp
push
cmp
clc
or
or
lahf
lods
xchg
sub
dec
lea
pusha
push
into
dec
sbb
mov
testl
mov
mov
cmp
fwait
dec
lea
xchg
push
xchg
adc
dec
jge
and
and
not
mov
cmp
dec
mov
sahf
sti
stos
outsl
arpl
fidivrs
push
daa
mov
int
or
scas
scas
cld
sbb
lock
inc
cmpsl
jle
call
xor
xchg
nop
outsl
push
ret
mov
cwtl
cli
jno
fsin
movsb
jp
adc
bound
jae
push
mov
and
data16
in
pop
ret
mov
mov
add
sbbl
aas
out
adc
imull
jmp
insb
or
fsubrl
fwait
popf
jmp
adc
lret
dec
inc
mov
popa
cmp
cmp
sbb
sub
pop
push
data16
mov
cmpb
incb
jl
idivb
xchg
dec
gs
mov
xchg
popaw
mov
xor
vmaxps
pushf
xor
cwtl
imul
sub
jne
loop
sub
loopne
cli
mov
xor
push
test
cltd
test
pusha
out
pusha
push
mov
push
imul
scas
out
js
cli
mov
movsb
add
sbb
out
imul
daa
shlb
add
in
popf
movsb
push
clc
mov
in
sbb
cmp
add
aas
xor
mov
push
loope
jno
jge,pn
add
pop
sbb
push
hlt
and
jns
add
sbb
lock
xchg
or
mov
sub
ficompl
inc
setg
nop
adc
push
push
cmpsb
and
imul
and
movb
ror
fdivrl
iret
adcl
jbe
mov
sub
push
dec
sub
rclb
sbb
aam
std
adc
sbb
mov
mov
in
andb
pop
pop
cmpsl
pop
imul
xor
fsubr
xor
or
test
dec
ja
mov
fs
mov
add
aas
dec
inc
jp
xchg
lds
out
outsb
jecxz
lods
lock
daa
adc
jl
repnz
mov
pop
loope
push
pop
and
sahf
adc
in
fucomip
aas
jge
aas
in
ficomps
pushf
rcrb
loope
add
les
bound
ljmp
daa
dec
mov
stc
ljmp
and
push
push
pop
lods
push
addl
jne
push
cmpsl
leave
js
cwtl
push
sbb
insl
sub
neg
mov
icebp
jb
mov
cmpsl
loope
push
or
les
adcl
pop
pop
aam
xchg
xchg
xor
into
dec
mov
mov
icebp
push
mov
adc
pop
lea
data16
daa
popa
dec
popa
jmp
push
mov
jl
int
inc
das
aas
mov
cli
std
or
jne
testl
adc
add
stc
cmp
cmp
xor
pop
add
mov
push
bound
test
jl
xchg
inc
add
dec
shrb
pop
xchg
dec
arpl
adc
xlat
dec
inc
in
mov
lcall
add
lret
out
and
iret
shrb
aaa
shrl
mov
jno
mov
mov
insl
popf
repnz
lahf
cltd
mov
dec
xor
std
mov
fs
jo
rcrl
lea
or
jnp
xor
mov
mov
mov
outsl
push
movsl
lret
ret
sarl
dec
rolb
in
call
daa
pop
sub
adc
rcrl
mov
jnp
mov
jle
jge
nop
xor
outsb
push
jmp
inc
jnp
mov
push
pop
gs
ljmp
add
fs
inc
sahf
adc
inc
mov
fldenv
add
cmc
fdivs
ret
push
push
jmp
pop
push
js
push
gs
pop
les
lods
cmpsl
dec
cwtl
je
sbbb
lock
ret
mov
cmpsb
or
mov
aam
jae
push
divb
lods
je
in
xchg
xor
stc
shlb
mov
sbb
mov
jecxz
adc
mov
repz
daa
sub
out
pop
cmp
jmp
pop
inc
jnp
adc
sahf
pop
aas
pop
in
int
int
jo
xchg
jns
and
jns
inc
aad
xchg
test
pop
test
dec
pop
add
les
sarl
sub
cmp
dec
xchg
fisubs
test
dec
notb
fstl
out
or
push
pop
sahf
popl
rorl
stc
mov
add
add
xorl
scas
adc
mov
cltd
js
dec
mov
ss
dec
mov
or
jne
inc
mov
jbe
xor
sbb
push
cmc
mov
mov
insb
mov
mov
das
xchg
out
and
xor
mov
cld
sub
pushf
repnz
imul
mov
lock
out
into
mov
pop
addr16
js
sub
or
sub
push
test
jle
mov
pop
inc
fucomp
jecxz
xor
jnp
leave
mov
movsl
pop
movsb
cltd
push
xchg
lret
xor
scas
movsb
std
mov
out
jg
jmp
mov
jge
jmp
cmp
mov
or
imul
and
rclb
stos
sub
es
jne
je
push
test
jl
stos
mov
dec
mov
mov
hlt
sahf
xor
lret
fwait
inc
push
test
adc
loop
sbb
lea
push
cmp
into
push
push
xor
ja
ljmp
and
push
cmc
add
rcrb
sti
jne
inc
outsb
call
xchg
pshufw
jmp
push
push
push
or
or
or
data16
add
lahf
icebp
and
loop
sarl
dec
mov
mov
cmp
xchg
add
mov
jae
or
inc
and
insl
or
sub
out
andb
dec
mov
cmc
popa
and
out
rolb
out
mov
xchg
jmp
mov
pop
aam
ljmp
mov
in
stos
dec
rorl
mov
mov
push
je
es
mov
pop
cwtl
dec
xchg
or
push
pop
pop
xchg
push
inc
pop
sbb
clc
sbb
ja
loopne
aas
mov
imul
mov
sub
scas
jle
pop
dec
lds
xchg
inc
repz
pop
adc
mov
push
stos
and
cmp
cmc
fcompl
int
mov
mov
aas
cmp
mov
push
jae
dec
test
cmp
jo
cmp
inc
js
jg
jle
add
xchg
add
mov
adc
js
push
sbb
aam
and
adc
sbb
pop
dec
in
jne
aam
xlat
lret
cli
roll
xchg
cmpsb
push
xor
push
ss
movsb
lock
es
pushf
mov
adc
jae
out
test
or
mov
loope
pushf
pop
das
add
fbld
mov
add
cld
cmp
leave
lret
jmp
push
stos
dec
sub
lret
adc
lret
xchg
push
shlb
push
mov
mov
mov
cwtl
sbb
adc
ljmp
xlat
mov
xor
out
into
sub
js
sbb
jns
enter
inc
xchg
clc
xorb
outsb
push
scas
inc
push
les
xchg
adc
xchg
adc
in
sti
je
loopne
adc
pop
add
mov
scas
nop
les
push
mov
movsl
cld
int3
imul
mov
cwtl
rcr
lods
ret
inc
pop
sarb
fildl
fs
inc
addr16
repz
cld
sbb
mov
call
int
rcrl
cwtl
lock
jp
out
adc
fcomi
insl
jnp
faddl
mov
std
sub
pop
sub
call
lahf
jae
or
lret
imul
sbb
sub
adc
xor
out
xor
loop
adc
push
je
imul
cmpsb
pop
xchg
xor
adc
rclb
or
inc
sub
pop
mov
pop
jae
cs
inc
xor
jecxz
jmp
jmp
push
xchg
pop
cld
shrb
and
popa
lods
add
cmpsl
xchg
pop
ja
call
adc
xchg
jo
lods
push
xlat
or
sbb
jmp
cmpsb
mov
mov
sbb
fisttpll
mov
adc
xlat
fwait
sarl
or
or
andl
fucomip
insb
cmp
lret
inc
mov
mov
ds
cmp
jbe
scas
lods
jnp
push
js
mov
inc
xchg
sub
push
scas
mov
xor
sub
in
lods
and
test
sbb
popa
std
mov
fnsave
and
ret
int3
mov
repz
popa
mov
dec
cmp
jne
call
test
fwait
dec
in
and
xlat
mov
stos
gs
fidivl
je
std
hlt
notl
push
push
push
sbb
js
mov
ljmp
push
mov
js
fs
cmp
cmp
inc
ljmp
xchg
mov
aas
mov
mov
push
pop
clc
xor
dec
popf
jg
mov
inc
lea
or
mov
mov
decl
mov
jbe
xor
push
push
inc
lods
in
out
mov
fsubrs
ficompl
fidivs
pushf
loope
push
in
add
inc
fbstp
adc
add
rcrb
pop
mov
rclb
sbb
mov
repnz
js
sub
aas
das
andb
pop
and
add
call
mov
int3
aad
mov
fildl
outsl
and
mov
fsubl
push
sub
cmp
out
repnz
lea
nop
pop
sub
xchg
std
shr
jge
push
mov
paddd
push
aam
push
sarl
es
or
and
add
pop
or
dec
test
adc
sarb
sub
sbb
loopne
std
add
dec
leave
add
push
arpl
sar
xchg
int3
outsl
dec
aam
pop
clc
inc
sbb
mov
in
push
out
mov
cmp
sbbb
xorb
negb
inc
jnp
xor
and
mov
sbb
and
push
and
cmp
call
ret
inc
xor
out
fisubl
dec
loope
enter
test
repz
jbe,pt
push
movsl
lret
cmp
sbb
rcl
cwtl
pushf
stos
popa
inc
ds
or
negl
dec
jo
cmpsb
imul
aam
sbb
mov
int3
mov
mov
stos
outsb
in
dec
add
push
dec
sub
lds
add
lods
jl
aam
pop
cmpsb
pop
xchg
out
xchg
sub
jg
mov
jg
lods
rclb
subb
add
lods
out
pop
push
xchg
xor
movl
pop
std
dec
add
jae
xchg
xchg
fdivs
aas
popf
or
pop
sbb
iret
xchg
into
hlt
fnstcw
cld
xchg
dec
dec
push
mov
subl
or
mov
loopne
pushf
aaa
lock
and
icebp
push
cmc
scas
fcoml
cs
push
jmp
mov
pop
and
adcb
xchg
rcrb
or
loopne
mov
cmp
fistps
movsb
xchg
inc
dec
cmp
ljmp
add
or
in
leave
pop
test
in
rorl
mov
mov
adc
lods
std
sub
loopne
inc
in
vmwrite
fidivs
pop
add
jmp
add
fldcw
faddl
and
mov
scas
ja
mov
pop
cmp
mov
mov
add
enter
cli
dec
jbe
jecxz
cmp
mov
inc
lcall
or
lret
mov
push
out
rolb
loopne
sti
adc
xor
test
aam
push
push
and
sbb
jae
mov
and
xor
mov
ljmp
cld
mov
sahf
stos
addr16
cmp
jae
fistps
jns
xchg
nop
cmp
lcall
cli
scas
pop
pushf
add
adc
movsl
imul
jns
shrl
lcall
xchg
bound
xor
sti
add
movsb
test
mov
divl
call
loop
incl
inc
fnsave
rol
addr16
xchg
dec
cmpsl
adc
push
arpl
mov
cmp
cli
sub
dec
lcall
cmpl
in
shrl
jbe
shr
cmc
jl
mov
pop
rclb
dec
lds
dec
push
arpl
push
or
inc
mov
iret
pop
scas
ss
loopne
sub
fldcw
push
sub
in
ret
pop
icebp
test
popa
dec
lds
pmaxsw
mov
xchg
mov
mov
sbb
ret
pushf
movsl
pcmpgtb
pop
test
call
cwtl
xchg
enter
fdivr
pop
sub
cmp
bnd
repnz
clc
dec
and
dec
lds
dec
testb
dec
add
mov
fs
mov
lods
rcrb
xor
xchg
dec
lods
inc
shll
pop
js
shlb
cmp
movsb
mov
push
mov
sub
push
xchg
aad
fistpll
add
test
inc
aaa
or
dec
aad
dec
les
jo
push
or
xchg
jg
ja
das
das
pop
mov
and
pop
sub
dec
test
fwait
adc
push
je
ja
fsubs
cwtl
sahf
mov
sahf
shl
inc
and
push
mov
inc
lahf
xchg
xchg
adc
cs
mov
cmpsb
shlb
pop
fsts
sub
push
and
pop
dec
stos
add
push
jae
stos
flds
jmp
jle
dec
insb
jnp
inc
xchg
frstor
jnp
mov
add
and
fwait
pop
ljmp
push
mov
jp
in
movsl
icebp
mov
lcall
pusha
jg
dec
mov
lds
call
and
jmp
push
std
adc
adc
add
sbb
xor
in
negb
push
aas
std
inc
outsb
sbb
subb
pop
adc
mov
xlat
bnd
in
subl
scas
adc
jmp
xchg
jo
fwait
pop
inc
mov
push
ficomps
lock
sbb
mov
rclb
cwtl
dec
jbe
sbb
add
aaa
mov
aad
mov
cmp
push
xlat
mov
xchg
cmp
shlb
jmp
or
push
cmp
adc
xor
xor
mov
adc
adc
or
and
aam
xchg
push
lods
sub
pop
imul
mov
xchg
movsb
stc
sbb
mov
pop
mov
push
fistpll
shll
jp
dec
ja
mov
out
dec
jp
loop
pminsw
cmp
mov
jecxz
xor
cmp
adc
mov
mov
add
ret
sbb
fstcw
inc
roll
push
call
dec
daa
test
adc
xchg
pop
decb
or
lret
loope
inc
flds
jbe
loope
xor
pop
pop
cmp
loop
mov
pop
push
cmc
std
into
and
iret
arpl
pop
inc
jle
sub
stc
jecxz
add
sbb
adc
dec
push
push
pop
push
in
xor
aas
fisubrs
cltd
and
adc
shlb
mov
push
int3
lods
sbb
sbb
fwait
xchg
mov
mov
mov
xor
add
roll
aad
movsb
jecxz
add
and
push
arpl
mov
add
xchg
cmpsl
lods
mov
or
and
mov
add
xorb
popa
pop
jge
dec
add
sub
outsl
xor
jecxz
adc
test
fs
ss
add
decl
int3
xchg
jb
dec
inc
scas
stos
mov
inc
gs
daa
dec
inc
jecxz
and
lahf
and
mov
orl
sbbl
aas
ljmp
cmp
andl
jge
movsl
shll
repnz
outsb
xchg
cmp
test
es
jmp
jbe
hlt
mov
dec
fdivrl
scas
lcall
clc
es
jb
sub
loopne
xchg
mov
stc
out
loope
pop
mov
fidivrs
fildl
xchg
xchg
push
mov
pop
rclb
jge
jmp
fsubr
aas
ret
mov
mov
nop
and
add
leave
into
data16
std
xchg
clc
lcall
or
lahf
dec
jns
ret
cwtl
js
adc
loope
inc
mov
and
out
push
mov
jecxz
inc
push
in
lea
jo
mov
sub
repz
div
push
mov
hlt
pop
push
test
int
out
call
jne
imul
stos
mov
dec
out
jmp
jnp
jecxz
adc
jg
cs
pop
iret
addr16
mov
xchg
orl
movsl
fldcw
bnd
cmp
pushl
dec
iret
loop
out
in
adc
dec
sub
lods
adc
dec
aaa
out
sbb
pop
sub
ss
dec
pop
nop
fsubp
sbb
lret
popf
in
push
insl
xchg
xchg
cmp
fistpl
addr16
fwait
loopne
xchg
imul
push
and
mov
das
fcoms
and
insl
add
mov
iret
push
push
xchg
cmc
mov
rcl
jl
adc
inc
or
andb
inc
inc
incl
je
fs
fwait
pop
insl
movsb
lods
inc
mov
mov
cmp
and
dec
and
ja
lret
lea
imul
pushf
sbb
into
bound
cmp
xor
in
sub
sub
cld
in
ss
mov
sub
sub
xchg
jo
xor
stos
test
add
inc
inc
pusha
add
cmp
add
jecxz
ret
jg
pop
push
insl
cmp
sub
les
add
call
movsb
mov
aam
addr16
mov
inc
xor
mov
or
fsubr
sbb
mov
fstl
test
cmp
push
fyl2x
or
movsl
fs
sbb
jbe
and
ja
aaa
jns
adc
jbe
mov
xor
repnz
push
lcall
pop
cmp
jb
jge
mov
dec
jl
iret
lret
imul
pop
cmp
movsb
xor
add
lods
jne
outsb
jne
fadd
sbb
inc
test
lcall
test
push
int
inc
cld
mov
adc
mov
mov
pop
repnz
inc
and
pop
fsubr
push
cltd
jbe
dec
ja
push
lea
add
add
stos
int
lahf
mov
push
and
repz
scas
sbb
out
pop
fisubl
jmp
jge
cmp
xor
stc
mov
and
push
data16
movsl
push
push
lock
push
inc
cmc
pmulhw
daa
dec
push
cltd
and
pop
int3
imul
jae
inc
xchg
sbb
dec
sub
inc
lods
sub
iret
xchg
push
dec
aaa
std
les
in
inc
test
mov
adc
mov
rcr
push
scas
push
add
lret
cmp
nop
fnstsw
hlt
cld
movsb
out
pusha
cmp
fdivrs
frstor
add
pop
sub
sub
pop
shr
inc
sub
aad
push
addb
cmp
shll
mov
ds
add
and
repz
enter
mov
sbb
cmovge
je
jp
in
lcall
pop
cmc
sub
adc
idivb
jae
xor
lods
lock
push
cld
imul
and
xor
or
iret
inc
js
popa
mov
adc
adc
out
xchg
jle
push
shlb
xor
mov
hlt
movsl
xchg
mov
outsl
sbb
loop
xchg
push
xchg
lahf
mov
sbb
push
mov
adc
mov
sbb
movsl
inc
lods
mov
inc
dec
pop
in
imul
popf
xchg
jp
icebp
cli
adc
lods
mov
hlt
push
lea
shrl
out
pushf
push
jo
mov
inc
xor
ds
pop
dec
push
aam
jno
ja
mov
pop
stc
aas
xor
jae
add
adc
dec
pop
scas
sbb
pop
jecxz
cld
mov
icebp
pop
lea
or
mov
mov
aaa
lea
pop
enter
pushf
sti
stos
fsubp
inc
cmp
movsl
or
add
cmp
or
jl
movsb
out
stos
cltd
jge
dec
ljmp
adc
call
dec
push
subl
ret
mov
pop
lock
jo
imul
andl
mov
sub
inc
psubusb
sbbl
addr16
in
xor
fstl
test
inc
inc
lods
aad
xchg
cli
shll
jecxz
mov
adc
push
loope
sub
enter
std
adc
jecxz
leave
sbb
in
mov
jmp
sahf
xchg
int3
xchg
push
xor
xor
xor
pop
pop
je
pop
mov
test
ret
adc
adc
ret
add
shll
movsl
inc
stos
dec
jo
mov
outsl
add
jo
or
sti
mov
divb
mov
scas
jbe
in
scas
or
clc
popl
cmp
test
add
push
pop
fsts
in
xchg
xor
dec
pop
rcr
mov
mov
xchg
mov
jge
dec
icebp
mov
icebp
jge
notl
fcomps
test
rcrw
pushf
lods
and
out
and
sbb
stc
aaa
mov
and
xchg
insb
lds
jnp
scas
imul
dec
sbb
int3
mov
js
adc
and
or
movb
aad
fs
xlat
ljmp
push
jmp
jle
fwait
aas
cmp
nop
bound
push
sbb
lock
xor
or
ret
ret
inc
std
movb
icebp
test
xor
test
xchg
xchg
stc
dec
jae
push
sbb
cmpsl
jmp
sbb
jb
cmp
leave
arpl
jbe
jge
out
jb
subb
jmp
adc
jno
or
mov
daa
sbb
and
mov
mov
ss
dec
sub
test
cltd
sahf
push
sti
in
cltd
cmp
dec
sar
fs
loop
lcall
mov
fwait
addr16
mov
push
pushf
mov
push
adc
out
sbb
cmp
mov
sarl
cld
sub
test
inc
data16
jg
fs
adc
shrl
jmp
mov
mov
shlb
cli
sarl
in
leave
inc
sub
dec
shlb
xchg
push
int3
sub
fwait
mov
sbb
je
fdivr
in
cmc
jle
mov
xchg
adc
popa
aas
add
fldt
dec
mov
push
or
sub
and
stc
ja
sbb
lret
fxch
cmp
test
repnz
and
shlb
fwait
push
pop
aaa
sub
sub
dec
and
outsb
cmp
mov
jmp
xchg
and
out
shlb
cmpsl
outsl
lds
push
adc
dec
mov
jo
xchg
scas
pop
loopne
pop
pop
ja
add
sahf
inc
cmp
push
cmc
les
imul
add
sub
loop
sbb
addr16
popf
sbb
pop
pushf
dec
xchg
cwtl
scas
cmc
mov
mov
xchg
mov
xor
data16
push
or
mov
sub
mov
dec
add
dec
cmp
cmc
jmp
lret
or
push
ss
xchg
xor
dec
push
imul
hlt
loop
loope
inc
in
lods
jne
ror
jmp
xorb
repnz
out
jmp
sub
push
pop
pop
cwtl
jns
sarb
mov
scas
mov
sbb
clc
rcrb
sbb
loop
inc
jp
cwtl
xchg
sub
loope
mov
div
arpl
cmp
jae
popf
xchg
xchg
mov
push
inc
nop
aas
lahf
dec
call
mov
cld
sbb
sub
rorl
sub
push
shll
xor
lret
inc
or
sbb
dec
into
test
dec
dec
pop
fcomi
adc
xchg
push
push
aaa
pop
cwtl
xor
clc
cmp
int3
data16
xchg
mov
iret
loopne
pushf
in
mov
cmpsb
jb
fidivs
roll
icebp
dec
sar
mov
test
jnp
pop
enter
call
test
xorb
cmp
adc
ljmp
rcrl
xchg
rcr
fldenv
mull
mov
mov
inc
jp
xchg
pop
mov
xchg
push
arpl
add
sbb
pop
add
sahf
cmp
stos
mov
mov
or
dec
sub
and
sahf
pop
pusha
out
cmpsl
add
rorb
and
ret
sahf
pop
scas
sahf
push
js
rclb
insl
cmp
popa
ss
stos
mov
mov
adc
adc
aad
lock
and
insl
push
inc
daa
xchg
popl
or
pop
or
pop
cmc
fsincos
add
push
inc
data16
aam
pop
notb
std
sub
aad
ret
mov
pushf
dec
fcmovnbe
fcoms
cwtl
cmp
sbb
add
inc
shrl
cmp
mov
push
arpl
shlb
test
push
add
imul
in
aam
nopl
shrb
jg
inc
xor
stos
test
and
dec
mov
push
inc
jno
cmp
sahf
push
lahf
repnz
and
dec
pop
das
sub
frstor
aas
or
adcl
pop
arpl
mov
cld
pushf
lock
hlt
pop
jmp
push
jle
pop
sub
push
loopne
sti
mov
lahf
jmp
pop
movsl
jb
mov
faddl
pop
cltd
rolb
insb
xchg
add
inc
pop
push
hlt
or
out
jle
xchg
outsb
cltd
jae
mov
cmp
push
mov
add
inc
popa
jmp
in
mov
mov
popf
pop
jecxz
xchg
dec
xor
pop
adc
push
movsl
add
pop
xchg
xor
negl
ror
std
es
sarl
pusha
mov
push
mov
push
sub
dec
xor
mov
aam
push
adc
clc
aas
sbb
push
stos
imul
shll
subl
mov
sti
push
xchg
jecxz
adc
fdivs
insb
jbe
shlb
inc
cwtl
jl
inc
leave
add
leave
xor
push
pop
or
lcall
popf
repz
repz
das
and
push
cmp
nop
push
cs
inc
dec
cld
push
pop
loopne
mov
xlat
jle
add
mov
sbb
add
das
or
inc
jae
stos
cmpsl
xor
mov
inc
es
pop
pop
das
andb
ror
inc
pop
cmp
and
sahf
into
cld
loop
cwtl
cltd
leave
outsb
jmp
frstor
pop
add
fisubrs
repnz
test
sbb
aad
mov
inc
xchg
lcall
jmp
jb
lods
and
out
inc
jmp
mov
mov
jae
enter
and
xor
das
inc
cwtl
das
test
mov
jae
aam
pusha
mov
xor
dec
mov
adc
cmpsb
test
mov
xlat
out
rcrl
int3
ret
call
mov
out
cmpsl
or
and
inc
sbb
aas
xchg
xchg
pop
jb
fisubl
pop
jae
lods
xor
pop
pusha
imulb
pop
xlat
data16
sahf
lahf
xchg
push
and
mov
fistps
icebp
fwait
pop
out
das
dec
xor
xchg
jl
sub
lods
or
mov
in
pushf
add
cs
sub
pop
rcrb
sub
pop
pop
sbb
mov
push
mov
xor
stc
cmpsl
mov
in
mov
data16
adc
pop
rcrb
fildll
dec
pop
pop
xlat
fisubs
daa
xor
addl
inc
lods
add
xor
outsl
sbb
mov
hlt
popa
mov
loop
in
dec
push
cmpsb
sbb
int
mov
push
daa
dec
xor
lods
add
sub
and
mov
out
cmp
popf
jnp
sbb
mov
push
and
fnstcw
pop
and
mov
xor
les
shrb
dec
pop
jb
lcall
fs
mov
inc
fisttps
sbb
aam
jae
add
loope
mov
loope
mov
rcrb
add
pop
imul
into
insb
mov
ret
loopne
sbb
leave
fsubs
mov
dec
in
jge
push
mov
ss
dec
mov
or
insb
cmp
cli
lods
mov
sarb
hlt
push
out
xchg
or
mov
out
stos
mov
and
bound
jae
cmp
inc
test
hlt
mov
mov
mov
push
cmp
mov
pop
and
or
testl
push
sub
daa
outsb
cld
dec
lahf
iret
sbb
inc
arpl
testb
dec
and
mov
jb
stos
jp
ret
ljmp
pusha
pop
clc
movsb
pushf
or
or
dec
xchg
push
xchg
and
mov
jae
jb
into
js
xchg
popa
dec
sbbb
lods
movsl
pop
das
movsl
mov
inc
push
mov
push
push
test
dec
out
cld
test
inc
pop
push
or
pop
aad
and
movsl
xchg
movsl
scas
add
xchg
push
insl
or
add
mov
jno
xor
or
insb
in
ret
fcoml
mov
std
add
or
test
push
cmp
loopne
lods
dec
lds
pop
popf
lahf
and
xorb
leave
pop
cltd
into
or
shll
jecxz
call
sub
add
int3
add
subb
jecxz
jne
lahf
jbe
test
xor
inc
mov
add
and
mov
pop
inc
cmp
mov
cmpsb
rol
subl
and
pop
dec
movsl
inc
adc
push
push
pushf
repz
push
bound
insl
sub
pop
std
xchg
inc
push
sbb
in
in
outsb
inc
mov
rol
mov
jecxz
mov
pop
jle
shrb
int3
lods
ljmp
xchg
dec
cmpsb
cld
dec
pop
jnp
dec
mov
test
fucomp
out
dec
adcb
out
insl
pop
dec
cmp
mov
mov
mov
outsb
call
sti
and
push
test
cmc
add
mov
jmp
sahf
mov
mov
out
gs
sbb
mov
mov
bound
and
or
aad
pop
cmpsl
cmpsb
cmp
and
addr16
and
insb
imul
fbld
ds
cmpsb
push
addr16
mov
lods
lock
pop
xchg
stos
push
xchg
or
or
push
mov
dec
push
dec
dec
out
sbb
shufps
push
jne
lock
aas
jmp
and
cltd
and
jecxz
test
pop
push
hlt
mov
orl
mov
out
mov
xor
add
jmp
xchg
dec
cmp
sub
addr16
push
cld
push
push
lcall
rorl
sub
faddl
mov
imul
push
insl
iret
repnz
mov
sti
enter
mov
inc
out
dec
fisttpll
cmpsb
add
sbb
jnp
iret
jo
fwait
or
sub
pop
jmp
roll
jbe
push
mov
jp
jb
xor
cmp
xor
pop
aaa
add
outsl
dec
jb
lahf
pop
aam
inc
jo
xrelease
adc
add
dec
xchg
adc
jbe
push
insb
xchg
std
cmp
pusha
mov
jne
dec
xor
xlat
cmpsl
bound
mov
add
adcb
addb
pushf
fidivl
les
aaa
inc
cli
adc
ficompl
jle
push
fwait
mov
into
sbb
icebp
mov
jp
push
dec
inc
stc
addr16
add
xor
and
push
jge
inc
loop
and
lods
fs
out
nop
or
push
cmp
push
sub
jl
loope
lods
rcrl
add
push
shr
les
and
dec
jp
jno
lock
shlb
push
mov
sub
stos
cs
mov
out
xor
xor
pusha
pop
out
sbb
popf
jmp
mov
dec
cli
js
push
negl
push
pop
inc
mov
setns
rolb
ds
cs
shll
lahf
mull
popf
jno,pn
jbe
rcr
and
rorl
push
mov
fcoml
aas
mov
push
lea
in
or
jecxz
popf
add
shlb
add
dec
test
mov
mov
imul
enter
inc
dec
mov
dec
sbb
dec
sub
shrb
leave
mov
cmp
loope
lods
frstor
into
rcl
daa
inc
cwtl
jg
outsb
mov
loope
jns
cmpb
inc
lret
inc
mov
adc
push
pop
inc
xor
cmpsl
sti
push
mov
outsb
bound
jbe
fucomp
fdivr
dec
add
ja
cmc
push
mov
jmp
mov
jnp
shl
imul
pusha
mov
dec
xor
sub
xchg
cmp
mov
bound
testl
lcall
or
mov
dec
jp
pop
push
or
outsl
sub
mov
sbb
testb
mov
and
test
jmp
repz
and
push
cmp
push
mov
jno
adc
inc
enter
sbb
jmp
test
fidivrs
mov
mov
hlt
mov
lret
adc
cwtl
repz
enter
in
fdivs
xchg
pop
daa
xchg
push
mov
aas
inc
ljmp
lret
loopne
jecxz
sbb
inc
or
mov
inc
add
pushf
cltd
aam
aaa
leave
or
xlat
xor
mov
and
adc
inc
ror
jne
mov
sbb
cltd
sbb
push
outsb
dec
loope
pop
sahf
add
push
xor
pop
outsl
imul
pushf
icebp
jl
push
cmp
sbb
fxch
lods
mov
or
fisttps
mov
orb
jnp
xchg
mov
mov
push
xchg
xchg
adc
shlb
mov
or
mov
inc
fnstcw
inc
ds
jp
xlat
aas
jmp
adc
xchg
dec
movsb
sub
pop
lret
add
int
addr16
push
into
cwtl
imull
shll
andl
push
sub
fsts
jmp
fbstp
ds
push
in
mov
icebp
push
push
cli
loopew
out
fldcw
pusha
fistpl
inc
xor
mov
xchg
dec
test
cmpsl
sbb
jo
outsb
adc
add
jno
pop
orb
ret
repz
dec
jb
leave
repnz
mov
jnp
jo
lret
fdivl
pop
dec
or
push
xor
rcrb
sbb
push
and
pusha
inc
pusha
jne
pop
fbld
xchg
mov
push
in
sbb
mov
lcall
xchg
icebp
jmp
lret
shrb
fsubl
sbbl
mov
inc
stos
xor
and
cld
mov
testb
inc
mov
das
adc
sub
rorb
icebp
pop
adc
call
mov
inc
scas
pop
push
dec
jle
shrl
repnz
dec
int
fsubr
jae
js
and
loopne
iret
int
mov
push
mov
xor
xor
jle
pop
idivl
and
push
clc
mov
mov
jecxz
out
lods
lods
cli
mov
or
shr
mov
xchg
cmpsb
inc
dec
incb
out
fisubrl
popl
cmpsb
test
inc
lock
loopne
cmp
cld
dec
addr16
test
jg
orb
gs
bswap
adc
scas
hlt
fidivl
dec
pop
and
mov
pop
cltd
push
sub
clc
jnp
das
mov
dec
push
aaa
jno
push
ss
stos
loope
pop
nop
mov
jbe
pop
out
mov
and
cltd
sbb
std
push
dec
pop
pop
daa
mov
imul
and
push
sub
add
xor
lret
ffreep
lret
jge
int
cmp
push
push
and
arpl
sub
pop
arpl
mov
mov
movsb
fsubrs
pop
rcrl
jnp
out
xor
and
subb
sub
cli
enter
adc
js
push
test
outsb
or
in
push
lock
mov
ret
movsl
pop
adc
stos
out
mov
pushf
inc
sub
xor
sbb
rcll
inc
xchg
mov
push
inc
rclb
in
jecxz
ret
test
mov
lods
mov
jge
shrb
jb
loopne
loope
dec
push
outsb
in
pop
loopne
cmpl
add
or
insb
stos
loopne
jmp
and
inc
or
aad
cmp
sar
add
movsb
andl
les
in
mov
adc
push
sbb
mov
push
addb
push
in
adc
inc
adc
mov
adc
mov
xorb
sub
xor
and
insb
cmc
add
dec
jb
xchg
dec
cmpsl
mov
cmp
push
nop
fsubrs
mov
aad
fcomip
fs
inc
fadds
lds
stos
and
mov
std
out
js
xchg
jae
mov
test
pop
out
xor
and
push
aas
and
or
push
ds
loopne
imul
mov
cli
iret
int3
adc
sahf
mov
jne
sets
and
mov
out
or
cmpsl
and
loop
mov
mov
ret
pushf
adc
jo
jp
inc
stos
cmpsl
addr16
dec
jae
cli
or
lock
inc
shrb
sub
lods
fwait
sub
das
push
ja
lds
push
addb
cmp
mov
sub
mov
iret
in
dec
mov
mov
ss
xchg
lahf
mov
dec
loope
cmp
or
stos
stos
adc
push
ficoml
loopne
gs
or
xor
xchg
ss
dec
fs
js
int
shr
adc
fprem1
jns
icebp
sbb
aaa
leave
push
and
addr16
out
lret
and
cmpb
inc
jno
and
dec
sbb
push
adc
cwtl
xchg
je
inc
addl
shl
dec
in
jmp
cmpsl
lret
cmp
sbb
je
mov
pop
ffree
daa
mov
lods
insb
mov
and
mov
inc
inc
lods
cmc
push
nop
das
pop
das
mov
insb
add
mov
jg
jecxz
bound
jb
aaa
int3
test
cmp
int
addr16
cmpl
and
mov
jb
das
sti
enter
bound
outsb
out
xor
adc
shll
jl
fbld
repnz
test
add
aas
jnp
sbb
and
pop
cmp
fwait
or
pushf
cmp
insb
dec
test
mov
add
adc
adc
pusha
stos
les
lods
sahf
mov
mov
nop
pop
movsl
push
sub
cmp
call
jb
test
sub
insb
or
outsl
loopne
das
addl
xchg
lock
or
subb
xchg
out
nop
movsb
lea
sub
sbb
cmp
cmp
mov
adc
sbb
jne
adc
and
xchg
or
add
adc
jbe
inc
mov
xchg
imul
pop
popf
jp
jb
push
in
repz
lock
inc
std
test
or
and
push
enter
addr16
push
or
xchg
addr16
jnp
dec
sub
inc
cmp
shlb
xchg
test
ljmp
in
dec
inc
jb
jg
ret
xchg
add
gs
in
in
mov
pop
daa
lret
push
mov
ret
ss
adc
rcr
sbb
sbb
lcall
repz
sbb
imull
rcrb
adc
xor
enter
jecxz
lcallw
cmp
lcall
rcll
roll
shlb
mov
outsb
xchg
or
lods
call
mov
add
cmp
ret
lcall
inc
push
adcb
iret
aam
jmp
mov
cli
fwait
es
repz
test
mov
nop
push
cwtl
add
inc
inc
cmp
dec
ss
inc
sbb
aam
jle
test
mov
push
xchg
loopne
lods
inc
leave
jo
test
jnp
or
xchg
mov
mov
xchg
or
cli
xchg
loopne
inc
sbb
or
icebp
inc
and
xchg
xor
cs
fsubrp
sbb
fldl
lret
xchg
aas
mov
das
insb
fnsave
sahf
popa
pop
mov
movl
adc
movsl
xor
jne
nop
cwtl
mov
mov
mov
neg
mov
inc
adc
sti
inc
sbb
notb
dec
imul
std
loopne
icebp
aaa
stc
push
mov
push
out
jle
icebp
cmpb
scas
sarb
test
cmpl
sub
jl
test
out
add
ror
cli
mov
movsb
inc
mov
les
pop
in
jb
add
jmp
xor
je
ds
sahf
lcall
clc
adc
ret
mov
imull
repnz
xlat
stos
jo
xchg
sbb
negb
mov
loope,pt
adc
and
ss
xlat
add
int
push
push
mov
popf
movsl
cmp
iret
bound
fdivrl
inc
mov
inc
add
dec
ds
jmp
lahf
in
push
jns
pop
lret
add
cmp
insb
jg
adc
pop
cwtl
inc
std
imul
adc
andl
xchg
mov
fists
jmp
dec
or
sbb
test
cld
pop
mov
pushf
pop
cwtl
and
add
in
inc
xor
inc
push
mov
push
lcall
push
sub
cmp
push
addl
movsb
out
addb
push
mov
adc
add
mov
and
add
es
hlt
and
dec
leave
sbb
leave
push
ret
mov
cmpsb
popf
pop
pop
cltd
fisubrs
stc
notl
inc
sbb
in
push
cmp
push
jg
push
ja
sbb
dec
in
inc
call
jns
add
out
adc
add
sub
sbb
sub
pop
mov
icebp
aaa
popf
iret
imul
adc
stos
in
jo
shl
mov
sbb
inc
repnz
mov
lret
fcmovne
sbb
jb
leave
and
inc
push
ret
movsl
adc
rcrb
jmp
adc
dec
xor
roll
fsubs
xchg
int
dec
movsb
aam
lock
loope
push
push
iret
push
inc
jae
inc
cs
es
or
push
mov
sbb
dec
and
divb
test
mov
jecxz,pn
and
nop
pop
iret
rol
mov
nop
das
pop
or
dec
mov
xor
sarl
pop
cmp
notb
adc
cld
adc
mulb
testb
adc
in
cmp
mov
add
fmull
mov
jmp
call
divl
pop
enter
mov
nop
add
mov
sbb
mov
add
imul
xchg
pop
adc
and
pushf
sub
mov
jb
loop
fwait
cwtl
in
or
hlt
jmp
push
pop
or
hlt
sbb
pop
mov
faddp
mov
loop
cmp
insl
leave
pop
cwtl
addr16
lods
sbb
mov
jno
xchg
pop
or
imul
call
adcb
insl
popf
mov
sub
xor
inc
push
popa
xchg
or
inc
ret
pop
popf
pop
xchg
mov
lea
cmp
xchg
mov
xor
scas
sub
adc
sbb
fsubrs
cmp
test
sub
sbb
iret
shrb
or
testl
out
push
mov
jl
mov
mov
in
lods
adc
adc
mov
sbb
iret
insb
leave
xlat
pop
and
decl
dec
add
sbb
test
mov
xchg
arpl
xchg
push
jecxz
lock
hlt
insb
fwait
mov
inc
cmp
rcl
sub
and
xor
sub
jg
push
out
in
call
iret
data16
pop
pop
mov
gs
jp
add
xor
imul
jnp
and
loope
mov
in
loope
test
jle
cs
std
ja
or
jno
jns
mov
push
xor
or
pop
lret
mov
loop
jns
mov
jae
jne
int3
bound
cmp
push
in
loope
stos
mov
ja
jp
or
and
fnstenv
mov
sbb
cmp
mov
insb
and
push
fstl
nop
dec
into
pop
lret
popf
mov
mov
repz
cmp
cmp
loop
xchg
repz
pop
push
jle
les
or
outsl
lcall
nop
or
repz
lods
mov
idivl
mov
icebp
or
cld
repz
or
add
inc
jnp
cwtl
andl
leave
ljmp
mov
jae
push
pushf
sub
pop
shl
fldt
fwait
jnp
icebp
dec
mov
inc
jp
test
adc
cmp
xor
adc
test
mov
or
movsl
movsb
mov
jnp
jne
incl
sar
jns
sti
and
jmp
subb
ret
xor
fcomip
enter
xchg
popf
fs
out
fmuls
pushf
scas
push
add
out
roll
sbb
sbb
fcoml
push
incl
and
mov
push
insl
mov
aas
mov
or
pop
mov
adc
jbe
jl
sbb
arpl
jns
ljmp
std
fcmove
stc
mov
daa
adc
test
repz
gs
pop
jecxz
or
xchg
scas
adc
mov
cwtl
outsb
sbb
sub
add
pusha
cmp
xchg
inc
fs
push
imul
sub
loopne
cmp
xchg
lret
in
lcall
out
fnstenv
clc
inc
dec
jb
sub
mov
je
enter
loope
test
inc
xchg
sbb
xchg
pop
insb
mov
fs
les
sbb
jno
push
adcb
push
ja
jle
mov
hlt
dec
aam
mov
in
add
outsb
pop
in
test
sub
shll
js
mov
popa
addr16
sti
dec
sarb
cmp
sbb
add
add
push
adc
lret
jecxz
push
mov
fnstenv
pop
cs
faddl
sub
ljmp
mov
daa
dec
mov
dec
xor
bound
fstps
arpl
rcl
pop
nop
sub
out
orb
in
addl
out
or
lret
add
pop
sti
dec
arpl
sbb
mov
out
and
out
jecxz
inc
xor
loope
mov
jmp
in
cli
jg
lret
out
pop
xchg
sub
xor
push
pop
pop
push
ret
arpl
jo
std
pushf
add
movsl
cmp
xchg
or
mov
add
cmp
sub
push
cmc
mov
incb
pop
pop
dec
fildll
mull
add
cwtl
aaa
test
xor
ficomps
aaa
ret
pop
adc
aas
xlat
cmpb
push
xor
cmpsl
nop
xchg
jnp
lahf
and
cmpsl
int3
push
roll
pushf
push
jecxz
mov
inc
push
into
pusha
dec
inc
inc
dec
cmp
mov
mov
lahf
movsl
rdtsc
in
dec
in
or
sub
sti
push
push
out
lea
iret
rol
cmpsb
lds
inc
rolb
xchg
mov
push
ret
push
xchg
adc
gs
xchg
call
insl
dec
jmp
jb
in
mov
mov
sbb
cmc
adc
loop
arpl
je
dec
lock
subl
fwait
xor
dec
ret
clc
mov
andb
jl
pop
mov
push
xchg
jp
pushl
jne
mov
rcr
mov
pop
rcrl
test
inc
lock
jbe
in
mov
sbb
dec
mov
or
adc
imul
in
lea
lahf
test
mov
jne
or
cli
push
inc
xlat
je
inc
dec
ljmp
jno
push
cwtl
loop
aas
outsl
test
mov
jo
xchg
jg
int
je
in
mov
scas
jno
inc
jo
pop
sti
pusha
shrb
mov
lods
add
test
cld
nop
orl
jp
jb
mov
push
mov
lods
pusha
ficomps
ss
stos
ljmp
inc
out
jb
mov
dec
pop
push
out
mov
inc
scas
or
rcl
movsl
in
mov
gs
xchg
sub
add
mov
movsl
xchg
test
out
gs
jle
test
sbb
je
fistpl
xor
fnstcw
out
dec
and
dec
and
and
xchg
sbb
xor
push
sysexit
negb
sti
inc
jns
jl
sub
dec
mov
outsb
sbb
push
push
ret
int3
cltd
je
push
orb
fdivrs
pushf
xchg
push
ds
and
add
cmp
sbb
adc
das
xor
xchg
push
inc
xchg
data16
cld
cmpsl
aas
test
or
adc
inc
aas
inc
movsb
lds
or
jo
addb
cmp
in
dec
rcll
inc
jge
pop
pushf
pop
xlat
dec
add
and
jno
enter
pop
sub
mov
adc
jbe
inc
mov
pop
mov
add
je
ficomps
pop
sub
or
ret
shll
lcall
push
add
bswap
or
arpl
lds
mov
xor
in
sub
and
pushl
cmpsl
cmp
mov
pop
mov
inc
popf
addr16
out
jecxz
je
pop
icebp
movb
test
daa
mov
fcmovb
mov
push
out
lahf
test
sbb
jae
dec
insb
mov
sub
or
adc
out
mov
clc
push
or
rcll
dec
int3
das
bound
nop
mov
ljmp
hlt
and
mov
test
test
push
movsl
sbb
fsubp
enter
push
dec
mov
int3
jecxz
data16
inc
rorl
mov
jl
repz
mov
jnp
ss
icebp
cmp
stc
mov
push
jle
xchg
mov
push
in
sbb
push
sti
out
mov
jg
ret
push
shl
jo
cmp
mov
xor
int
bound
dec
lock
movsb
cltd
mov
lods
out
out
out
or
out
cvtpi2ps
rcl
aaa
in
mov
sahf
dec
pop
stos
inc
jb
cli
icebp
cmp
aam
pop
jb
mov
jbe
stos
lea
sub
mov
mov
jg
mov
sub
shll
lea
sbb
lea
jl
lea
sbb
push
cli
mov
mov
xor
mov
mov
nop
daa
ficomps
out
test
mov
xchg
mov
pop
aad
push
mov
rolb
addr16
mov
out
sbbb
neg
mov
jne
push
sub
xchg
fdivrl
sbb
sub
cmp
hlt
push
test
loop
jb
out
mov
xor
outsb
sbb
cwtl
mov
pop
mov
dec
adc
popf
xor
or
pop
sbb
adc
mov
sub
mov
imull
mov
cs
ljmp
loope
lahf
mov
clc
leave
out
inc
sbb
cmpsl
std
add
cmp
cmc
fistpl
adc
dec
aaa
adc
xchg
push
dec
xor
pop
cli
sub
pusha
fcomp
push
mov
mov
rcll
xlat
jle
sahf
aas
movsl
pop
jae
and
lret
inc
or
cwtl
orl
inc
sub
int3
sbb
inc
icebp
adc
cld
ret
cmp
xorl
pusha
cltd
push
jns
mov
sti
mov
cmovns
pop
mov
iret
outsb
jp
pushf
and
stos
mov
pop
xlat
and
fldl
int3
xchg
lods
lret
scas
lcall
and
pushf
push
or
xchg
pushf
jl
push
adc
clc
stos
push
js
addr16
movl
cmp
imul
test
fnstenv
es
out
mov
push
js
xchg
cld
sbb
and
lock
shrl
lcall
or
mov
push
fisttps
fwait
test
loope
pop
cmp
cs
inc
das
into
lock
cmpsl
add
inc
out
call
flds
xchg
mov
icebp
inc
das
or
mov
dec
xor
mov
ret
shl
mov
leave
pop
shlb
cmp
dec
repz
pop
addr16
adc
int3
addr16
ds
leave
mov
jecxz
adc
ja
test
enter
cs
in
mov
in
popf
insb
call
inc
jg
and
jns
gs
insl
cmp
and
es
shrl
into
xor
push
cs
xor
mov
aad
push
sub
loop,pt
mov
rolb
pop
sbb
cli
mov
mov
adc
xchg
add
scas
out
dec
sbb
nop
and
in
inc
mov
cmp
popf
and
xchg
aas
popf
xchg
xor
enter
stc
and
hlt
leave
imul
fs
adc
and
add
pop
shrl
push
sbb
lods
movsl
cld
cli
cmp
dec
mov
dec
lods
cld
testl
inc
xlat
sbb
js
in
out
adc
hlt
lahf
cmc
inc
mov
sarl
clc
push
lahf
hlt
inc
lret
fmull
pop
mov
dec
inc
push
pusha
pop
sub
inc
lret
sbb
pop
adc
clc
stos
cmp
scas
jge
cs
push
cmpb
ret
xor
cmpsb
pop
dec
inc
cmp
sti
cwtl
mov
rcr
push
ret
nop
cmc
push
mov
mov
mov
dec
mov
adc
push
mov
xchg
inc
inc
xchg
inc
sub
mov
jl
adc
jle
call
push
rcpps
popf
xorps
sbb
push
popa
addr16
cmp
aas
sbb
xor
mov
cmpsb
xchg
and
mov
repnz
stos
mov
test
lret
outsb
popa
es
mov
xchg
fsts
inc
cmpsl
mov
pop
inc
mov
adc
sbb
out
and
sbb
and
rorb
lock
dec
or
clc
insb
loopne
movnti
xor
mov
xchg
rcrl
mov
xor
and
mov
shrb
adc
sub
mov
jo,pt
pop
jle
xchg
and
rol
lahf
into
jg
jo
rolb
xchg
jb
in
rcrl
fstpt
inc
lods
cmpb
xchg
cmp
push
xchg
adc
xor
dec
mov
insb
rcl
inc
push
fmulp
or
imul
xchg
test
jge
add
cmp
add
jb
ds
shll
sbbb
aas
int
mov
lods
dec
xchg
dec
jnp
jmp
test
cld
cltd
addl
push
mov
imul
ret
jb
push
xchg
mov
adc
xchg
insl
xor
xchg
popf
sbb
out
shlb
aaa
mov
mov
stos
jnp
lods
sbb
pushf
xor
cmp
inc
pop
test
xor
nop
push
imul
or
pop
out
popa
das
mov
roll
shll
inc
sub
xchg
test
mov
mov
enter
stos
jne
pop
mov
je
sahf
pusha
cmp
inc
outsb
mov
je
testl
icebp
pop
xchg
ja
jmp
mov
rclb
fsubrp
or
pop
clc
jecxz
mov
push
aam
xchg
cltd
pop
and
adc
test
and
cwtl
lret
jbe
mov
pop
push
xor
xchg
cmp
ret
cmp
push
loope
xor
xor
dec
sbb
push
paddw
jle
jge
mov
pushf
loope
xchg
cmp
xorl
add
xlat
inc
xor
mov
add
inc
cltd
movsl
fucomip
aam
dec
add
sub
loop
shr
push
pop
stos
inc
sub
jbe
test
push
enter
nop
aas
cltd
cmc
push
xchg
xchg
sbb
mov
jl
push
mov
mov
jo
mov
and
cmp
sbb
test
mov
repz
faddl
pop
push
sbb
lds
loope
fists
loope
push
fcoms
mov
mov
and
scas
clc
xchg
pop
outsb
leave
call
into
xchg
sub
test
or
push
insb
jmp
xchg
xor
mov
addb
ljmp
shrb
ret
inc
and
xchg
jl
pop
scas
dec
inc
sub
lods
adc
loop
inc
repz
pop
insb
loop
stos
ljmp
out
cmp
sub
outsl
lock
ljmp
adc
iret
xchg
into
jmp
insl
or
cmp
jg
mov
test
mov
aam
fs
rolb
mov
pop
jno,pn
fdivl
adc
loop
fidivrl
push
rclb
xchg
pusha
ljmp
ret
jnp
sarb
cmc
mov
mov
xchg
lret
sbb
and
add
mov
in
xor
nop
inc
jo
dec
jecxz
addb
or
cmpsl
sbb
xor
cmp
mov
cs
cmpsb
incl
xor
xchg
out
mov
pusha
push
int3
and
pop
std
cmpsl
into
stos
adc
insl
dec
jo
inc
pop
xchg
or
push
sub
or
icebp
xchg
and
mov
pop
pop
das
lret
jl
aad
js
imul
fstpl
adc
rclb
pusha
ljmp
inc
cmc
scas
stos
pusha
dec
xor
push
jb
mov
sub
hlt
addl
es
mov
xor
jl
iret
jg
push
int
andl
push
in
mov
addb
out
pop
addr16
lahf
xlat
mov
nop
lret
mov
adc
fdivrs
push
leave
and
ret
imul
jb
sub
sarl
test
and
popa
int3
loope
fstpt
and
dec
cltd
sahf
add
sbb
xorl
push
push
mulb
pop
jmp
xchg
dec
in
ds
loopne
cmc
cmp
icebp
jmp
shlb
jae
pop
cmp
aad
adc
inc
xor
push
cmp
mov
fadd
and
in
xchg
pop
pop
add
add
popf
stos
xchg
mov
test
shll
cmp
mov
adc
fildl
stos
loope
pop
mov
inc
movsl
pop
mov
sbbl
mov
repnz
idivl
aad
adc
inc
fisubs
or
iret
pop
out
loop
in
add
push
out
sub
cmp
mov
roll
adc
sti
push
outsl
out
jge
rolb
and
icebp
out
lock
aad
jne
fwait
adc
cltd
in
sti
shll
jb
inc
pop
mov
inc
pop
icebp
xchg
fcompl
ds
nop
inc
imul
pop
arpl
adc
scas
xchg
lods
sub
mov
arpl
pop
push
and
fstpt
jge
nop
push
dec
xlat
data16
inc
shl
sbb
pop
xchg
andl
std
icebp
js
cld
rorl
aas
decb
lock
js
outsl
cmc
iret
add
insb
xchg
mov
and
mov
jg,pt
inc
push
cmpl
sub
cmp
int3
stos
or
push
cs
mov
rcr
sahf
gs
xchg
xor
scas
imul
ficomps
leave
ljmp
jecxz
into
adc
mov
push
pop
and
cwtl
hlt
xlat
andl
add
stos
jmp
sarl
paddsw
mov
gs
iret
mov
adc
lahf
in
cmc
fs
add
rorb
arpl
xor
jge
call
or
mov
cmpb
and
pusha
sbb
adc
xchg
xchg
sbbl
scas
push
scas
or
mov
adc
push
xchg
and
and
xor
xchg
pop
test
inc
or
xor
mov
push
scas
mov
gs
int
pop
test
pop
xor
stos
push
or
gs
push
loopne
gs
ret
jno
rcl
jmp
or
mov
pop
outsl
fmull
and
cmc
aam
jle,pn
cmpsb
pop
sti
or
jo
mov
sbb
ja
or
xchg
and
push
xor
rolb
mov
inc
add
out
int3
and
andl
sbb
push
mov
xchg
popl
and
test
inc
mov
bndldx
leave
int3
stos
test
mov
out
fisttps
sbb
mov
mov
sbb
adc
out
scas
push
push
lea
inc
xor
addr16
push
inc
ret
mov
or
xchg
insl
cmp
jl
mov
pop
hlt
and
sbb
dec
icebp
in
sbb
fstl
ja
add
pop
pop
xor
movsb
or
add
shrl
cli
negb
sbb
mov
jb
sbb
shrb
mov
mov
fisubrl
inc
aaa
cmpsl
adc
and
std
sbb
push
pop
sbb
add
js
mov
lret
mov
das
pop
cmp
inc
scas
bound
movsl
loopne
sub
cmpsb
push
cmc
mov
xor
test
inc
push
mov
sub
jmp
ljmp
pusha
pop
ror
xchg
mov
ja
xchg
out
in
sbb
cmpl
pusha
add
mov
sbb
sub
cmp
mov
cmp
lods
loope
jns
out
push
sbb
lahf
pop
es
mov
aam
test
ljmp
lods
mov
xor
addl
notl
and
aaa
pushf
inc
pop
jns
or
scas
out
inc
leave
vpcomd
and
fildl
adc
adc
and
loopne
mov
call
jge
in
mov
repnz
outsl
xchg
aas
aaa
in
icebp
mov
into
adc
ret
and
test
cltd
mov
in
mov
dec
out
sbbb
stc
xor
dec
cli
pop
popa
mov
in
push
fidivs
movsb
fadd
std
iret
mov
pop
push
fists
sub
inc
push
pop
xchg
xchg
sbb
jns
pop
inc
cs
sbb
mov
mov
pop
mov
xchg
xchg
out
pop
fbld
int
pop
or
out
adc
cmp
insb
shll
cld
call
in
cmp
mov
mov
clc
add
out
fsts
mov
dec
scas
sar
aad
xchg
mov
fs
out
cmp
jmp
mov
add
jbe
sbb
xor
xchg
ds
leave
das
mov
adc
jmp
and
ljmp
mov
lret
adc
xchg
xchg
mov
loop
test
fucomp
insb
addr16
sbb
push
inc
shll
mov
std
or
pop
jmp
push
push
pushf
in
jmp
fistpl
inc
aas
cmp
cltd
mov
in
pop
pop
cmp
dec
fdivrp
fstpl
subl
filds
xor
xchg
ja
xchg
or
mov
add
jmp
popa
shrb
leave
add
xchg
xchg
sub
mov
xchg
sahf
std
iret
pop
fbld
cmp
decl
xchg
pop
loopne
sbb
xchg
rolb
add
push
andl
popa
jmp
test
add
jmp
in
cmpsl
adc
xchg
testb
lahf
pop
clc
push
add
fimuls
xor
iret
fidivs
push
cli
in
cmpsl
in
mov
scas
mov
cltd
leave
enter
cmp
popa
jle
and
pop
sub
shrl
shl
insb
xchg
sub
mov
das
std
je
and
pop
or
test
loope
push
out
aas
jp
in
je
add
mov
or
jns
push
fwait
cvtpi2ps
jl
lret
sub
inc
xchg
mov
out
jp
jbe
push
lods
jmp
jmp
clc
jge
jge
imul
adc
mov
test
js
lea
add
leave
mov
ljmp
addl
push
iret
test
push
fnsave
push
ja
jmp
sub
lcall
lret
in
test
rolb
shll
ljmp
lods
xor
lret
cmp
jle
in
dec
mov
or
and
or
cmp
sub
cmpsl
adcb
fs
in
mov
push
ja,pt
jg
jbe
sbb
gs
or
aas
adc
push
aad
movsb
hlt
cltd
popf
inc
cmp
call
jb
xor
dec
pusha
jb
xchg
out
jne
inc
repz
dec
popf
push
pop
fadds
into
sbb
cmpsl
iret
jbe
fdivrl
lods
ljmp
mov
leave
jbe
xor
repnz
inc
cld
andl
lret
adc
subb
mov
pop
xor
shll
mov
insb
dec
add
inc
sbb
aas
or
and
inc
gs
jae
inc
lock
pop
sbb
cmpsb
out
repnz
xor
xlat
out
push
or
adc
adc
jo
out
push
mov
nop
and
dec
lea
in
inc
cmp
aad
mov
fs
je
or
cmp
int
lcall
pop
inc
dec
push
cmp
dec
sarb
pop
and
cld
pop
add
shlb
xor
and
les
sub
inc
cmp
cmp
mov
mov
test
cmpsb
loop
lret
jg
dec
add
dec
sub
mov
scas
mov
fcoml
out
mov
xor
sbb
pop
pushf
push
dec
ja
rcrl
dec
mov
imulb
fistpll
shlb
inc
iret
mov
jnp
cmpsl
sahf
jg
and
aas
gs
out
jo
adc
adc
fisttpll
repnz
and
aas
or
push
adc
in
jb
dec
and
jo
rcll
sbb
dec
gs
add
std
es
pop
mov
mov
cmpsl
jne
push
out
cmp
aaa
xlat
mov
lcall
jbe
hlt
out
dec
mov
xor
adc
shrl
push
movsl
adc
xlat
cli
pandn
sub
fisttps
sbb
adc
repnz
std
fwait
sbb
fstpl
out
adc
xchg
out
jno
fnstsw
aam
outsl
icebp
mov
fstl
shl
jge
jns
add
mov
aas
or
icebp
mov
xchg
jl
jmp
es
loopne
xor
movsb
xchg
pop
fcoms
es
movsl
mov
add
popf
mov
fcmovnu
jg
imull
add
cmp
sub
pop
orl
jmp
test
cmp
jns
pop
outsb
sbb
xchg
pop
pop
mov
xchg
popa
cmp
test
jb
sub
sub
adc
cmc
sub
sub
ja
clc
push
shll
jo
faddl
jmp
faddl
sub
stc
mov
cmp
and
ja
xlat
mov
scas
es
and
xor
push
xchg
les
jno
cmp
gs
test
sub
lret
mov
xor
repnz
das
mov
push
or
pop
add
dec
push
in
dec
pop
outsl
scas
int
pop
add
add
cmp
clc
inc
pop
jno
pop
sti
push
xor
fxtract
push
sbb
pop
sbb
pop
push
mov
rorl
in
clc
inc
les
jmp
int
push
ficoms
add
mov
mov
inc
ret
hlt
mov
mov
divb
test
sbb
sbbb
out
pop
sbb
ret
arpl
lret
ds
enter
std
sub
jl
testl
sub
or
repz
sbb
sub
push
testb
out
gs
dec
inc
push
mov
out
dec
adc
and
scas
fimuls
mov
fcompl
aas
mov
aas
outsb
ret
push
sahf
popf
push
dec
jmp
ret
sti
out
fucomip
xchg
mov
divb
xchg
cwtl
test
stc
dec
jbe
xchg
pop
in
push
sbb
ret
les
les
mov
push
adc
or
not
push
in
lods
lea
imul
int3
dec
repz
inc
or
icebp
mov
xor
repz
xchg
stos
jnp
cs
mov
jecxz
sbb
mov
sti
pop
jecxz
cmc
out
add
test
mov
icebp
mov
mov
cmp
jl
dec
cmp
je
cmp
mov
cmp
mov
pop
sbb
iret
fidivs
or
dec
dec
hlt
lods
push
jns
pop
repnz
adc
xchg
jbe
pop
jae
cmp
xchg
shl
fdiv
adc
jno
repnz
cmp
out
jl
and
cmc
in
sub
mov
mov
mov
stos
xor
push
mov
std
int3
fdivrl
xor
mov
mov
and
cmp
mov
loop,pt
dec
in
pop
xchg
xchg
shll
lds
popa
cmp
push
xor
push
push
dec
les
iret
mov
xor
aaa
insb
inc
lods
das
mov
into
daa
ja
arpl
nop
lret
int3
rcll
divl
push
repz
mov
arpl
sub
popl
mov
cltd
test
cmp
psubusw
and
add
inc
xor
jg
aad
inc
ret
movaps
sarl
pusha
push
sub
push
int
jns
ss
out
sub
repnz
or
cmp
adc
mov
orb
jne
and
fcoms
or
test
jo
mov
adc
mov
bound
fwait
rcll
push
scas
pop
cmp
lret
loopne
push
outsl
pusha
lahf
movsl
ss
pop
repnz
xor
sbb
lret
and
test
sarb
dec
add
imulb
fadd
jae
sbb
or
es
xchg
mov
sti
lods
adc
test
pop
ljmp
xchg
in
jbe
dec
out
pop
cmc
sbbl
jae
inc
aad
cmc
inc
mov
iret
sbb
xor
lcall
cmp
test
xchg
mov
fistl
push
push
movsb
adc
repnz
f2xm1
ja
outsl
push
pmulhuw
repnz
sub
add
popa
pop
lods
dec
imul
lahf
jno
fdivs
jno
mov
dec
pop
sbb
jl
sub
insb
push
popa
je
and
pop
xor
mov
add
out
es
dec
pop
arpl
mov
int
adc
add
and
xor
imul
aam
pop
ret
popf
out
ljmp
movsl
mov
pop
roll
add
inc
and
mov
int
push
jl
scas
stos
out
ljmp
pop
lock
into
push
popa
mov
dec
fcmovnbe
cmp
and
sub
hlt
sahf
fs
loop
cs
dec
mov
push
sbb
cli
addr16
cmc
push
mov
inc
decl
fcoms
dec
and
movsl
mov
jg
mov
enter
jbe
hlt
jne
cmp
scas
add
sub
mov
sbb
jnp
push
jne
mov
fsubr
int
icebp
clc
bound
pop
pop
in
jmp
incb
sbb
pop
dec
pop
pop
mov
or
roll
cli
pop
out
sbb
leave
mov
into
add
ds
dec
jge
je
js
sbbl
or
sub
cli
push
fidivl
aas
sbb
and
aaa
add
popf
movsb
loope
pop
cwtl
pop
mov
push
push
pop
in
int3
not
repz
xor
int3
mov
je
insb
rcr
test
xchg
enter
mov
push
ss
cld
stos
xlat
xor
rorb
in
lds
icebp
sbb
mul
or
add
lret
mov
or
add
jb
lds
out
movsl
cmp
adc
lahf
jae
push
push
out
out
pop
in
adc
or
mov
mov
mov
mov
and
cli
cmp
jle
push
sub
mov
nop
mov
cmp
sub
mov
sub
jmp
test
mov
pop
lret
aas
pop
jb
lcall
in
pop
mov
push
shll
pop
mov
xor
cmc
jmp
xor
pop
xchg
and
mov
dec
cmp
jl,pn
int3
pop
jbe
cs
sbb
jo
xor
mov
mov
loopne
dec
outsb
dec
shrb
mov
push
lods
stos
inc
xorl
dec
ret
inc
push
js
js
cltd
repz
movsb
push
rorl
inc
fsubrl
jecxz
mov
push
adc
jnp
or
pop
jge
jns
rcl
test
hlt
jae
cmpsl
pop
addr16
ror
clc
push
mov
cmp
adc
xor
les
jnp
push
fnstenv
je
out
lods
out
sub
dec
dec
inc
adc
cmp
inc
sti
rcll
mov
nop
dec
xchg
lock
aad
cltd
ds
sbb
jns
jb
orl
cld
movsb
scas
scas
mov
or
cmc
enter
xchg
rcrb
and
cwtl
notl
movsl
ds
inc
add
push
add
and
clc
inc
les
add
push
adc
je
js
cwtl
jnp
lret
cmp
fldcw
dec
aas
decl
mov
sub
mov
loopne
fimull
xor
sub
mov
jle
das
lea
in
loope
cmp
nop
ret
sub
mov
dec
fistps
test
inc
jns
jae
aaa
imul
jle
pop
out
pop
out
dec
daa
adcb
cmp
imull
xor
inc
cmp
xchg
ficompl
stos
jns
xor
lcall
mov
mov
pop
inc
sub
test
pop
mov
out
cmp
pop
pop
lret
mov
add
dec
adc
inc
jns
cmc
and
mov
or
jo
ret
push
mov
mov
and
in
in
popa
pop
xor
mov
repz
pop
movsl
dec
sbb
fists
scas
hlt
stc
aas
pushf
fistl
test
mov
popf
dec
dec
test
xlat
stc
xchg
in
dec
dec
xlat
pop
inc
shll
mov
cmp
and
aas
cs
mov
lahf
mov
test
add
dec
inc
pop
and
call
fisubrl
jno
push
aas
loopne
xchg
clc
out
push
xchg
aam
das
xor
fwait
xor
in
into
cwtl
xchg
pop
int3
jbe
scas
mov
dec
sbb
popf
ret
insl
push
dec
push
clc
jbe
sub
enter
xor
xchg
ja
mov
cmc
shl
scas
cmp
ret
adc
repnz
sub
add
lds
int
int
leave
jg
lcall
cmc
int
andl
mov
add
push
or
dec
rcrb
sbb
mov
call
jmp
hlt
dec
shlb
ficompl
mov
lds
inc
into
roll
fcmovbe
aad
jne
mov
addl
xchg
or
cmpsb
and
out
fmull
out
cmpsl
hlt
jp
adc
pushf
adc
movsl
dec
insb
push
jecxz
hlt
xlat
outsl
push
mov
and
inc
sub
xchg
add
push
ljmp
push
js
pop
sbb
dec
fmuls
xchg
mov
mov
push
jl
subl
mov
jp
add
outsb
ret
push
out
js
imul
jmp
testb
outsw
out
pop
sbb
ss
pop
mov
jne
push
mov
add
sub
or
aam
daa
scas
dec
and
sub
fstps
pop
fidivrl
push
sbb
add
pop
cmp
sub
js
cmp
test
xchg
jge
in
lea
fiadds
jno
add
out
sti
into
inc
push
sti
mov
dec
aaa
test
pop
lret
jmp
testl
outsb
int3
sti
test
mull
aam
sarl
je
orl
xlat
aas
dec
int
xchg
sub
fdivl
insl
int3
add
cmp
pop
xchg
xor
pop
sub
and
ss
sbb
adc
test
push
mov
aaa
cmp
xorb
lcall
push
jo
push
frstor
repz
mov
into
cmpsl
jno
xchg
cli
or
adc
les
or
mov
mov
sbb
fwait
pop
mov
jnp
out
daa
sahf
in
mov
mov
cld
sub
cmpsb
dec
push
inc
mov
aaa
adc
push
add
sbb
jle
aam
out
mov
js
dec
es
mov
ret
ret
mov
sbb
push
fisubl
ficompl
jb
out
test
lock
and
sarl
mov
scas
inc
ret
jg
lahf
jmp
in
lods
xchg
aaa
push
icebp
inc
rorb
out
test
push
cmp
fcmovu
cs
fsubs
jmp
les
mov
out
push
repz
inc
cmp
nop
mov
addl
je
inc
test
test
ss
insl
test
jmp
int
cwtl
mov
insl
pop
lock
dec
push
sub
pop
lods
insl
cs
mov
mov
pop
mull
dec
push
inc
lcall
mov
sbb
pop
jp
pop
push
aas
daa
sbb
movsb
pop
cmp
es
xchg
insl
insl
xchg
outsb
mov
out
movsl
xlat
push
mov
and
je
stc
lods
dec
jo
jle
fs
jmp
add
jp
int3
inc
xchg
popf
jp
lret
lahf
jne
inc
arpl
push
xor
movsl
pusha
mov
insl
xlat
xchg
jle
jg
lods
js
sbb
mov
cmp
sbb
or
lret
inc
sub
leave
cli
sbb
xor
mov
mov
inc
nop
pop
ds
mov
adc
xlat
imul
or
xor
pop
lret
mov
xor
or
jno
aad
xchg
int3
sub
and
mov
fs
shll
mov
cltd
cs
fidivl
dec
cmc
addr16
das
outsl
xor
stos
into
sub
incl
movsl
je
repz
add
inc
lods
xor
and
data16
aaa
cmp
ffreep
in
stos
std
loope
mov
lret
push
jb
nop
shll
aam
jns
cmc
cld
outsb
sbb
sbb
int3
fsts
adc
repnz
shlb
sbb
mov
mov
adc
sti
push
pop
jmp
outsl
push
mov
sahf
std
push
test
and
jnp
pop
clc
sbb
into
in
lahf
shll
fisubl
je
cmc
pop
cmp
cmp
adc
movsl
lahf
push
fs
push
imul
adc
shlb
lcall
ss
sub
subl
add
paddsw
sbb
cmpsl
stc
add
dec
movsl
mov
xor
mul
fwait
xor
mov
sbb
dec
outsb
xchg
mov
fildl
std
mov
fisttpll
outsb
xchg
and
push
pop
dec
cli
pusha
xchg
mov
lahf
xchg
das
out
mov
cmp
jl
mov
push
stos
pop
shlb
dec
movsb
in
mov
icebp
fdivrs
les
push
fdivrs
fcomp
in
les
loopne
jp
jno
aaa
in
cmpsb
lret
sub
xchg
int3
mov
xchg
adc
insl
in
lret
adc
int3
xchg
lret
je
int3
xchg
pop
dec
call
inc
mov
pusha
inc
int3
add
cmp
cmp
leave
push
sbb
into
fstpt
inc
out
lods
xor
lret
jl
mov
orb
jbe
daa
popa
xchg
mov
push
loop
lock
into
repnz
sub
popa
insb
mov
sub
cwtl
pop
xor
adcl
mov
leave
jecxz
cmp
jne
and
enter
xchg
sbb
hlt
cli
jge
ret
push
xor
ds
clc
dec
mov
adc
cmp
xchg
jne
imul
adc
pop
inc
mov
stos
cmc
jecxz
adc
call
stos
push
dec
int3
sbb
mov
out
neg
outsl
cli
pop
mov
mov
xor
in
mov
iret
bound
mov
pop
popa
out
lret
imul
mulb
push
ret
jb
arpl
xchg
cmp
sub
sbb
icebp
nop
aas
mov
pop
test
mov
adc
dec
or
idivb
scas
clc
xchg
call
dec
loopne
insl
mov
jecxz
sbb
inc
cmp
out
shlb
repz
cmpsl
inc
fs
mov
sbb
sarb
out
mov
sahf
enter
movsb
js
pop
push
mov
cmp
roll
sbb
bound
test
xchg
nop
jno
imul
jb
push
testb
insl
pop
cli
out
mov
lods
js
xor
sbb
pop
mov
dec
jno
outsl
mov
jmp
add
push
jmp
mov
dec
push
and
into
scas
sbb
andb
gs
dec
xor
fcomip
int
xchg
inc
xor
adc
lcall
push
push
cmp
jno
cmp
int
xor
jle
jge
pop
repnz
into
dec
push
mov
andl
outsb
stos
fisubs
push
cmp
clc
cmp
out
aaa
add
repnz
mov
inc
movsl
xor
xchg
sbb
dec
push
jno
xchg
mov
das
add
addr16
xchg
popf
jns
pop
cmp
and
mov
shrl
mov
sbb
rol
sti
fisttps
cwtl
clc
pop
stos
daa
dec
add
adc
pop
aam
push
js
rorb
sarb
pusha
addr16
ret
pop
stos
jecxz
adc
fcoms
mov
mov
ljmp
ds
fistps
insb
xor
ret
subb
lods
jp
js
jo
cli
pushl
nop
or
imul
push
paddq
push
movsl
in
out
add
fwait
and
hlt
sbb
push
xor
cmp
fs
sbb
inc
mov
rclw
andl
jo
push
or
sbb
scas
in
dec
jns
cli
les
shrl
lods
jns
mov
icebp
xor
pavgb
add
movsb
mov
fs
jns
iret
push
rcll
lds
mov
insl
cli
aas
adc
or
mov
dec
stos
lods
fwait
pusha
and
mov
not
dec
cmpsl
lret
mov
loopne
push
lret
dec
pop
dec
cmc
in
popf
popa
jg
cmp
in
fldenv
mov
sub
adc
cmp
xchg
xchg
repz
sbb
pushf
cmp
inc
or
mov
fwait
mov
xchg
sub
pop
aas
fsubs
push
lahf
jp
mov
push
or
mov
jl
jno
push
test
adcb
inc
xor
test
mov
les
add
ret
jno
leave
xchg
out
fistl
dec
dec
popf
ds
into
test
repz
pop
cmc
pusha
cltd
push
setle
mov
sub
dec
daa
xchg
roll
loopne
enter
sbb
test
daa
jo
mov
pop
dec
inc
popf
adc
and
ret
fsts
cmpb
repz
clc
lods
pop
addr16
push
xchg
lahf
inc
and
mov
push
mov
js
lret
adc
sbb
icebp
add
popa
mov
lahf
daa
cli
add
cmp
mov
lret
imulb
aaa
ss
shrl
mov
mov
cs
idiv
and
xor
jg
into
xchg
sbb
push
xchg
push
clc
xchg
cs
pop
cmp
xor
fwait
leave
adc
int3
xchg
into
outsl
aas
in
stc
sub
jo
es
inc
nop
nop
dec
xor
imul
sbb
mov
idivl
jl
push
jp
out
and
push
mov
mov
aad
arpl
dec
push
push
movsb
movsl
xlat
stc
push
sti
pop
xchg
test
ja
andl
jg
push
or
repnz
pop
in
mov
or
xchg
xor
callw
ljmp
arpl
sub
pop
nop
mov
pop
lods
out
jmp
dec
mov
push
mov
test
mov
in
xchg
outsb
fwait
mov
jnp
cmp
cmp
mov
cmp
xchg
cmpsl
or
je
and
inc
mov
push
into
das
repz
jg
inc
pop
test
aam
or
pop
les
xor
mov
jge
addr16
rorl
loopne
scas
mov
and
stos
repnz
mov
loop
das
mov
jae
mov
add
in
rcrb
mov
push
cmpsl
xorb
xchg
sahf
aas
or
lcall
rcll
inc
mov
cmc
loop
mov
cmp
add
stc
data16
mov
in
mov
lret
jb
clc
mov
fstpt
add
inc
push
outsl
add
movl
fistpll
addps
js
test
out
jno
mov
xor
cld
jl
or
ret
cs
sahf
mov
aaa
add
sbb
lods
pop
mov
lcall
xchg
or
lret
fisttpl
sub
jle
inc
xchg
push
stos
cmp
popf
sub
pop
loope
dec
jnp
sbb
out
or
ficoml
jo
adc
stc
push
jo
push
movsb
sub
sub
fucom
push
mov
and
insb
xor
repnz
cmp
jmp
mov
adc
push
add
lock
or
xor
popf
mov
outsl
cmc
jl
mov
test
test
aam
fildl
adc
push
inc
shr
insl
daa
mov
push
daa
icebp
jmp
jo
mov
popf
mov
dec
mov
cmp
stos
xchg
jp
jns
and
stc
adc
dec
repnz
xor
out
mov
add
mov
push
or
cmp
repz
sbbl
nop
and
out
mov
dec
pop
xor
hlt
inc
adc
jle
lea
lds
xchg
sub
pop
shll
shrl
aam
xor
insb
push
adc
arpl
sbb
lahf
jo
xchg
push
adc
out
adcb
xor
pop
aas
sub
inc
loopne
popf
lret
aaa
lea
mov
push
sbb
push
in
dec
pusha
jge
popa
scas
and
lret
mov
mov
cli
add
insl
fdivrs
in
mov
call
test
ja
xchg
aam
mov
pop
pop
fwait
test
push
gs
add
insl
outsb
adc
fcompl
loop
sub
ficomps
cmpsb
idivb
pop
push
in
xor
jae
shll
adc
iret
and
mov
and
sbb
movups
pop
in
sbb
cmc
pusha
insl
or
cmpsb
mov
mov
sub
xor
je
out
cltd
rolb
mov
xorb
out
sub
pop
mov
shrb
dec
js
xchg
inc
dec
daa
stos
pop
int
pop
jns
rcrl
in
dec
dec
push
mov
cmpsl
or
clc
jnp
out
out
xor
sbb
repnz
testl
xchg
mov
mov
cmc
push
loop
mov
jecxz
cmpsb
dec
adc
jnp
push
mov
lock
adc
in
sbb
mov
push
repz
pop
jae
pop
ljmp
hlt
xchg
stos
add
sarb
or
adc
sub
cmpsb
popf
leave
rorl
add
pop
sti
shll
out
pop
dec
jb
pop
in
mov
movsb
inc
pop
mov
cmpsl
mov
sub
lods
dec
add
cmp
pop
les
mov
adc
push
pusha
ret
je
mov
lcall
push
inc
lods
xor
test
ficompl
sti
mov
inc
push
ds
mov
stos
shrl
push
mov
add
mov
outsb
in
stos
test
and
movsb
jecxz
jmp
inc
jle
aas
xchg
mov
cltd
scas
cld
lret
pop
loop
loop
mov
cmp
adcb
mov
mov
addr16
add
js
stos
push
rcrl
cmp
jl
inc
ss
dec
jbe
and
xchg
inc
testl
inc
icebp
jmp
sti
cltd
enter
inc
or
mov
and
add
or
std
mov
daa
jl
dec
mov
aad
mov
sub
insb
test
leave
shl
xor
sbb
and
pop
pop
ret
or
push
insb
ret
and
pop
dec
jo
push
test
sub
icebp
aaa
or
in
imul
jns
scas
mov
jge
mov
fistl
pushf
pop
push
cwtl
push
lds
int
cmp
push
fs
loopne
lret
jno
adcb
xor
inc
enter
mov
adc
fldt
je
shl
and
test
fistpl
mov
sbb
dec
sbb
out
cli
cmpb
pop
addr16
js
inc
fcmovb
add
mov
pop
mov
in
jne
adc
jp
pop
mov
imul
in
pop
bound
iret
icebp
arpl
jno
in
xor
insb
sub
cmp
dec
repnz
jg
dec
jecxz
mov
mov
dec
mov
xchg
or
pop
por
cmp
xor
imul
sub
inc
es
lods
add
movsb
int
sbb
adc
xlat
xor
repz
loopne
sar
adc
push
mov
lods
lea
jb
scas
aas
loop
repnz
loop
cmp
push
inc
cmpsb
ss
mov
lods
add
sbb
in
repz
loop
flds
mov
pop
divb
mov
xlat
inc
mov
add
xchg
xor
in
pop
xchg
dec
jl
imul
and
jle
pop
ss
sbb
cmc
aaa
outsl
xor
lret
sub
jmp
fstps
clc
jbe
xchg
sahf
cwtl
addb
sub
stos
jno
add
jle
dec
xorl
lods
inc
fstpt
pop
fisttpll
jns
inc
pop
pop
leave
sub
bound
dec
fldenv
mov
ficoml
mov
sub
in
icebp
fs
repz
outsb
in
call
xor
cmc
mov
jns
mov
or
mov
scas
pop
sbb
aad
push
pushf
jbe
gs
stc
dec
inc
push
mov
jb
shrb
jp
ret
pop
inc
jl
mov
popf
jae
aam
sub
aam
xchg
fcom
into
lods
cltd
adc
xlat
inc
push
or
hlt
mov
stos
ljmp
ja
call
jae
sub
insl
daa
mov
pop
jae
call
insl
xchg
or
mov
push
jecxz
mov
das
and
jecxz
pop
and
jne
hlt
or
pop
push
call
mov
cmc
cltd
jecxz
les
sub
fsubl
add
sub
test
mov
stos
adc
mov
cmp
fiaddl
xchg
fmuls
pop
adc
ja
pop
jns
clc
inc
jecxz
insb
push
mov
fisubl
xor
invd
mov
call
stc
hlt
orl
inc
into
daa
push
lahf
cmpsb
mov
clts
loopne
cwtl
add
in
push
enter
nop
mov
sub
or
ds
cmp
out
push
jp
and
into
in
addl
clc
push
xchg
xchg
jle
inc
lret
loop
lahf
addl
jle
test
dec
cmp
mov
hlt
mov
or
xor
mov
or
push
xor
mov
xchg
add
out
aad
push
lahf
int
or
jle
xchg
push
js
lods
fdivrs
mov
and
adc
andl
in
mov
adcl
rcl
aas
les
lahf
loope
dec
sbb
jge
push
scas
sar
repnz
push
xchg
and
or
cmp
mov
add
sub
lcall
push
xor
outsb
ret
imul
rorl
sub
inc
xor
sbb
xor
adc
mov
adc
imul
inc
dec
mov
divb
push
fidivrl
and
inc
or
leave
xchg
imul
outsl
cmpsb
std
sbb
out
lods
xchg
pop
cmp
clc
add
addl
or
push
les
mov
pop
int
movsb
pop
scas
repnz
leave
lds
fcompl
call
mov
lcall
sub
mov
pop
cmc
xor
fsubp
jmp
mov
cmp
mov
testb
inc
mov
movsl
xchg
sub
iret
push
dec
in
sub
xor
sub
into
xchg
pop
xor
lahf
cmp
ds
or
fstpt
xchg
andb
push
je
roll
loopne
hlt
in
shrb
mov
ret
in
mov
mov
dec
push
jns
xchg
inc
xor
mov
icebp
mov
bound
jb
mov
add
hlt
int3
aad
cwtl
cmp
or
aad
in
sbb
push
mov
lcall
rolb
jne
in
xorl
jecxz
test
or
push
aad
insl
pop
push
daa
lock
subb
xchg
hlt
insl
sub
ds
ret
in
in
mov
in
mov
add
add
add
and
out
pop
jmp
sahf
nop
das
outsl
in
in
int3
lock
jnp
sahf
xor
stos
sbb
pop
test
xchg
jb
inc
aad
ds
lret
dec
repnz
in
stc
daa
test
adc
add
pop
jnp
sbb
call
frndint
jmp
stos
cmpsl
cmpsl
fistpl
cmp
add
or
or
pop
pop
dec
sbb
and
cltd
inc
dec
cmp
testb
aam
mov
jmp
adc
jns
inc
xor
std
sub
movsb
outsb
scas
dec
cmpl
insb
or
punpckhbw
push
push
jmp
pushf
xor
ss
ds
jmp
or
lahf
sub
rorl
add
xchg
mov
sub
pop
or
mov
and
ljmp
jo
stos
loope
pop
sub
test
aam
ret
adc
xor
lods
pop
mov
int
mov
leave
gs
dec
push
sbb
push
insb
mov
lcall
or
and
stos
dec
sbb
mov
push
adc
inc
sbb
popa
imul
sbb
call
decl
out
sub
mov
out
stos
xchg
pop
xorb
sub
xchg
in
roll
out
mov
icebp
icebp
cmp
addl
pop
push
mov
lahf
xchg
jo
cmp
jmp
call
mov
mov
cwtl
mov
mov
xor
inc
outsl
add
and
out
pop
test
es
xchg
int3
cmp
mov
xchg
fadd
jns
ja
fidivl
sbb
loope
mov
mov
push
pop
sub
inc
dec
push
test
push
push
jo
add
inc
lret
scas
adc
add
inc
cmpsl
in
shr
loop
aas
nop
cmp
cs
leave
xchg
sub
mov
cmp
add
repz
mov
pushf
add
xor
shl
dec
pop
mov
cmp
imul
sbb
or
xor
rolb
sarb
xlat
insl
sbb
out
dec
sub
add
test
inc
lock
stos
and
sbb
lds
inc
mov
adc
mov
dec
add
mov
aaa
sbb
sahf
xor
rcr
xchg
cltd
push
in
cld
push
jns
ds
mov
popa
sub
pop
adc
jmp
mov
out
stc
aas
add
imul
mov
ds
decb
subb
mov
cmpsl
jne
hlt
mov
sbb
mov
lea
fsubs
imul
pop
xchg
test
xchg
pop
xchg
cmp
cwtl
and
incb
cmp
mov
mov
addb
into
pop
leave
mov
jp
je
mov
dec
or
or
pop
sti
mov
or
mov
shlb
xchg
lds
fs
mov
or
call
lods
bound
mov
sub
bound
jmp
bound
imul
pusha
dec
jns
mov
in
pop
ljmp
imul
push
into
lods
movhlps
adc
leave
mov
movsl
test
xchg
cmp
sbb
je
or
cmpsb
scas
out
dec
divl
in
lret
jp
cmpsb
add
fistpl
loope
mov
lea
push
rcll
pop
xor
out
ljmp
add
out
dec
sbb
fsts
sub
hlt
dec
rolb
addr16
or
outsl
dec
loop
xchg
fsubrl
nop
jmp
sbb
mov
adc
xchg
mov
pop
jge
out
xchg
jb
lahf
push
xchg
pop
xchg
mov
mov
call
mov
dec
dec
pop
push
jne
mov
pop
out
add
stos
mov
imul
repz
les
clc
in
cmp
outsl
or
popa
sti
and
and
sbb
xchg
xchg
push
mov
mov
jle
lods
jp
clc
lods
mov
sub
adc
mov
push
inc
aaa
jns
mov
sar
addl
add
add
cltd
or
dec
push
mov
jno
mov
data16
mov
sbb
inc
sub
push
pop
cwtl
sbb
dec
lcall
gs
jmp
std
out
sahf
movsb
into
js
dec
sti
ret
jo
test
sti
sbb
cmp
out
loopne
mov
int
lock
add
shl
subl
test
daa
scas
aam
push
insb
sbb
imul
into
mov
imul
or
or
xchg
push
jo
sbb
push
iret
out
sub
mov
push
pop
int3
sub
mov
scas
out
inc
loop
inc
push
dec
rcl
into
pop
inc
or
leave
mov
xor
in
adc
add
in
xor
cmc
cmp
mov
loop
lods
fisttpll
repnz
je
pop
imul
add
mov
cltd
cmp
fcompl
pop
int3
daa
mov
dec
lcall
push
lret
cmp
sub
out
mov
sub
push
movsl
xchg
iret
call
inc
into
idivb
mov
cmp
insl
xor
movsb
or
jno
sbb
repnz
pop
add
cmp
clc
mov
cmp
mov
clc
clc
mov
fwait
mov
pop
movl
pop
mov
ljmp
cmp
mov
imul
or
push
xlat
mov
mov
inc
pop
jl
push
mov
ret
dec
sbb
cmpsb
test
and
orl
icebp
sub
xchg
xorl
mov
fildl
arpl
insl
pop
add
pop
out
fwait
repz
addb
add
mov
lock
pop
cmpsb
xor
lret
xor
add
adc
pop
shll
jecxz
xchg
add
or
sub
nop
sub
notb
movsl
inc
add
dec
add
fldl
sbb
int3
push
push
leave
or
iret
cmp
add
lea
sti
or
and
test
push
mov
xchg
push
fists
adc
shll
xchg
or
aas
jecxz
xchg
or
pop
bound
subb
mov
cmp
popf
dec
lret
fists
iret
mov
mov
adcl
inc
pop
in
in
jp
pop
rclb
push
inc
ljmp
jae
jg
sti
test
mov
ret
mov
mov
test
aaa
out
jmp
jp
push
adc
or
inc
ja
dec
fnstsw
imul
pop
arpl
cmp
mov
scas
jno
aad
flds
popf
jmp
jo
out
inc
idivb
daa
loop
xchg
testl
arpl
in
testb
xchg
aad
mov
mov
sub
test
ret
iret
outsl
add
ret
enter
pop
lds
outsl
sbb
fcompl
or
test
push
addb
das
pop
mov
pop
add
ret
inc
mov
aad
shrl
es
loope
leave
mov
arpl
mov
push
inc
cmp
pop
mov
ret
idivl
popa
add
js
arpl
push
sub
or
jle
and
pusha
das
pop
jge
orl
push
cmp
jns
outsl
mov
xor
cs
mov
sbb
ja
int
mov
stc
mov
or
int
push
test
stos
pop
push
xor
jmp
jno
dec
push
out
push
mov
cmp
mov
or
pushf
push
mov
pop
int
xlat
out
imul
nop
xchg
jno
add
psllq
and
sbb
ret
mov
and
cli
repz
adc
cmp
mov
sub
insb
or
andl
rolb
test
push
jbe
shrb
mov
pushf
fidivs
cmp
push
jne
push
rcrb
lret
mov
xor
cltd
imul
sbb
inc
push
push
adc
loope
loopne
imul
mov
adc
cwtl
fwait
push
cmpsl
jne
sbb
adc
orl
icebp
push
mov
pusha
ret
push
jae
sbb
mov
cs
xchg
outsl
jne
add
mov
pop
push
pushf
test
pop
dec
xchg
movsl
push
mov
insb
jb
test
jnp
mov
push
sub
in
add
mov
loope
and
pop
cmp
mov
fcmovnu
call
andl
imulb
mov
mov
lret
jmp
fistps
cmc
push
xchg
sub
mov
out
xor
icebp
mov
insb
add
mov
mov
add
sti
es
xchg
stc
xchg
in
inc
dec
mov
fisttpll
fnstsw
jnp
je
push
inc
cmp
push
jl
jns
mov
iret
jae
mov
std
inc
dec
gs
xchg
push
ficompl
pop
shl
pop
scas
xor
lods
inc
dec
daa
dec
xor
daa
jns
cmp
aas
pushl
mov
xchg
pop
mov
pusha
shll
daa
outsl
push
jmp
pop
xchg
nop
aaa
or
or
ljmp
call
outsb
popf
mov
negl
icebp
pop
into
ret
insl
add
fstl
inc
addl
ret
xchg
jae
xorb
loope
mov
push
js
push
and
pop
push
insl
scas
loope
lret
xchg
pop
jns
adc
jbe
xor
mov
or
mov
mov
push
fisubs
mov
mov
iret
fadds
sub
subb
fiadds
fwait
out
jb
loopne
pop
lret
in
xchg
jmp
mov
pop
jl
sbb
adc
movsb
pop
out
pop
call
bound
adc
mov
clc
int
cltd
cmc
pop
push
leave
xchg
inc
cmc
fldl
test
add
pop
popa
xchg
adc
ljmp
push
sbb
push
pusha
add
jg
loop
stos
pop
lods
rcrb
sub
xchg
push
cmc
sahf
pop
shr
mov
ret
jno
adc
cmp
inc
dec
sti
pop
mov
bound
mov
mov
sbb
adc
jp
pop
hlt
rolb
inc
cmp
shr
out
sahf
sti
cvtps2pd
shlb
out
add
mov
das
clc
mov
out
xor
mov
cltd
cmp
dec
mov
mov
lods
call
fdivl
jb
sub
xor
mov
sub
sbb
push
mov
xor
lods
aas
es
mov
test
fimull
faddp
hlt
jge
xlat
enter
mov
aaa
cmp
pop
sbb
aad
push
sub
mov
dec
cmp
inc
mov
mov
lods
mov
jbe
mov
mov
insl
jmp
inc
scas
scas
dec
sbb
data16
insb
or
or
mov
cli
pushf
fwait
and
call
mov
inc
out
stos
jno
pop
mov
sub
cmpb
sbb
cs
adc
pop
xchg
loopne
inc
out
dec
nop
cmp
in
jns
dec
pop
jb
sbb
ds
mul
sbb
in
iret
dec
and
inc
xchg
hlt
lods
enter
and
jno
in
dec
int
je
mov
test
insb
enter
dec
cld
mov
ds
adc
mov
flds
sub
adc
fstps
movb
popa
pop
bound
mov
lods
scas
mov
mov
dec
imul
out
pop
jnp,pt
cmpsb
mov
fisubrs
dec
hlt
inc
cld
xor
mov
or
adcl
inc
jbe
leave
bnd
mov
mov
lods
rorl
mov
xor
mov
pop
xchg
push
imul
mov
push
lcall
cltd
pop
cmpl
stos
pop
lcall
mov
scas
cmc
out
adcb
cltd
aad
fs
cmp
pop
popa
insb
fists
pusha
adc
cmp
adc
mov
mov
loope
adc
jae
mov
push
loope
xchg
mov
out
jl
iret
cmpb
lods
sahf
inc
idivl
sbb
add
mov
aas
lea
jae
and
mov
fwait
push
and
mov
sub
mov
push
frstor
fcmovb
adc
inc
jl
add
daa
in
dec
dec
lcall
aad
add
hlt
dec
sbb
les
mov
push
mov
jmp
and
adc
cmpsb
push
testb
movsb
rorl
xchg
nop
clc
jb
xor
shll
fidivs
iret
sbb
push
in
testl
leave
hlt
es
push
pop
cmp
fdivs
rcrb
inc
js
dec
pop
jno
xchg
adc
cmpsl
sub
sub
or
testl
fldl
mov
push
jge
lret
cmpsl
cmp
cld
sbb
xlat
jp
mov
xlat
push
arpl
out
jg
mov
dec
jo
or
jno
mov
shrb
xchg
test
jle
out
out
sahf
pop
mov
mov
jmp
jg
mov
mov
dec
ret
mov
imul
adcl
jp
adc
dec
xor
mov
gs
xor
lods
stc
xchg
es
jmp
incl
lcall
or
daa
push
arpl
in
addr16
stos
jmp
and
icebp
pop
dec
enter
adc
inc
pop
push
int
subb
add
lds
push
aam
xor
cli
push
jo
push
or
mov
sahf
push
xor
sbb
or
scas
movsl
mov
and
inc
pop
jno
cli
loopne
pop
daa
call
mov
test
mov
mov
sbb
and
inc
inc
mov
mov
push
cmp
cmp
test
or
cld
mov
sbb
lcall
xor
das
mov
into
out
mov
cmp
loope
shll
std
cmp
imul
cmp
and
arpl
sahf
sbb
test
stos
je
bound
and
xchg
mov
lods
and
ljmp
xchg
test
scas
sub
sub
mov
ficomps
add
dec
and
push
cmpl
lahf
cmp
test
jbe
xor
call
loopne
add
mov
ret
pop
out
stc
cmpsl
cmpsb
fisubl
and
mov
cmc
ljmp
xor
pop
rcrl
mov
loope
mov
fstpt
add
andl
jo
lods
mov
inc
lods
fwait
stos
mov
mov
pop
dec
sbb
push
pop
cmp
lods
adc
mov
mov
jmp
addb
ja
pop
inc
shrl
jecxz
push
jae
in
xchg
jg
stos
xchg
daa
xor
push
cmc
sti
sub
mov
nop
cmpsl
pop
mov
and
sub
xchg
cs
sub
sub
cmp
fpatan
int
mov
imul
push
mov
into
mov
inc
lcall
mov
outsb
fimuls
mov
xadd
in
push
mov
sub
xor
push
sub
pop
into
into
mov
es
insb
cmpb
dec
jg
ljmp
and
xchg
pop
xchg
hlt
loope
or
inc
add
rorl
inc
hlt
ds
mov
jns
mov
mov
inc
pop
int3
xor
rcrb
aad
push
dec
cmp
xor
pop
popf
xchg
cmp
fs
mov
lahf
or
ljmp
pop
push
adc
and
xchg
cli
sub
dec
push
sbb
lcall
enter
out
adc
subb
mov
add
imul
popf
xlat
xorb
ljmp
and
std
mov
xor
cmp
iret
mov
jb
lahf
jp
pusha
sub
aas
shrd
mov
mov
stc
popfw
sub
mov
ret
sub
in
adc
mov
push
in
int
addr16
push
subl
push
pextrw
cmp
cltd
test
jae
js
jle
sub
js
xchg
mov
rcrb
push
cmp
mov
push
es
flds
or
push
or
push
rclb
ret
xchg
sbb
inc
push
aaa
sbb
mov
push
sbb
dec
test
xor
mov
mov
int
push
pop
jns
sti
mov
inc
jb
mov
jb
adc
xchg
mov
shrb
mov
lea
add
fwait
jb
lcall
scas
test
jecxz
imul
aas
mov
and
outsl
inc
push
aaa
loop
jl
and
jbe
cmp
in
and
aas
pop
divl
mov
push
cmp
insb
add
xchg
jmp
push
sub
fldcw
insb
jae
xor
js
push
mov
xor
stos
clc
cli
xchg
push
shrl
xchg
out
push
mov
jg
cmpsb
jl
gs
sub
cmp
mov
cmp
xchg
xor
scas
pop
aam
jle
sbb
imul
mov
imul
lods
les
scas
test
sub
mov
jae
dec
dec
inc
pop
inc
xchg
xchg
nop
fwait
and
xor
scas
and
popf
mov
bswap
dec
adc
loop
adc
mov
iret
je
mov
xchg
mov
adc
adc
pop
mov
jo
loop
jns
stos
in
aam
fldenv
into
sub
roll
in
cmp
in
pushf
push
or
fistl
mov
jb
shlb
pop
stc
gs
jo
loop
jge
adcl
dec
xor
dec
or
mov
add
enter
mov
mov
inc
orb
sub
inc
mov
push
aaa
mov
inc
stos
adc
mov
clc
mov
mov
fmuls
pop
imul
lock
mov
pushf
inc
popf
pop
add
rcrb
xchg
std
pop
shlb
setnp
sti
pushf
pop
icebp
jno
cwtl
fdivrs
mov
les
mov
mov
in
dec
push
and
xchg
lret
cmc
cwtl
add
enter
daa
push
cmp
shlb
inc
adc
sub
xchg
sub
add
push
push
in
adc
addr16
jno
mov
mov
loopne
int
and
or
ret
mov
jns
loop
loopne
sbb
sub
jno
cmp
pop
jmp
mov
iret
jbe
mov
dec
mov
ss
cmpsb
loop
push
stos
cmp
shrb
lcall
movsl
and
lods
mov
mov
pop
repz
mov
insb
add
icebp
shll
mov
stc
and
adc
mov
popf
fidivrs
nopl
out
out
notl
push
fs
test
repnz
or
and
out
enter
insb
imul
push
pop
or
iret
mov
das
xchg
sbb
adc
xor
js
mov
mov
imul
push
shlb
add
mov
mov
in
xchg
mov
adc
lcall
test
jo
inc
mov
and
fistl
sub
test
sbb
and
in
pushf
clc
cmp
popa
clc
cli
push
push
rorl
push
popa
adcb
adcb
push
sub
adc
cmpsb
pop
fldenv
iret
in
dec
imul
stos
pop
shrl
jmp
pusha
xlat
xor
movsb
out
imul
inc
and
cli
mov
xchg
add
jbe
or
add
addl
sbb
cwtl
lods
xchg
pop
dec
outsb
adc
ja
jae
rcrl
scas
push
push
repz
ja
sbb
call
popf
imul
xchg
in
or
shr
adc
dec
inc
pop
sub
scas
push
cltd
push
in
cmp
mov
mov
lcall
xchg
mov
cs
xchg
inc
icebp
ljmp
jns
cli
xchg
repnz
sub
jp
in
cmp
push
subb
popa
arpl
dec
int3
stos
in
cmp
cmp
or
daa
adc
sbb
push
cmp
and
cld
std
mov
dec
ljmp
jno
enter
adc
mov
movl
push
incb
scas
dec
cmp
dec
adc
lods
adcl
dec
jl
push
mov
enter
dec
outsb
mov
sbb
push
xchg
or
pop
mov
test
mov
pop
mov
adc
add
cmp
mov
jb
jbe
loope
imul
loopne
xchg
dec
sub
mov
sub
inc
push
out
push
insl
mov
imulb
movsl
cwtl
pop
rcrb
pop
or
and
cmp
loopnew
mov
push
pop
out
jle
mov
push
scas
xor
mov
or
sahf
push
in
mov
xlat
lock
cmc
stc
aam
pusha
xchg
pop
shr
mov
xor
add
xchg
das
aas
lret
inc
mov
xchg
push
xchg
or
push
ret
shlb
lds
ss
mov
jecxz
int3
int
jge
xor
cmp
cmp
jns
pusha
std
inc
imul
dec
sub
fwait
xor
or
dec
jne
jno
mov
mov
imul
insb
test
adc
vmovlps
pop
and
push
lahf
xchg
pop
dec
aaa
xchg
cmp
mov
jns
add
int
fcmovb
in
insb
shll
xchg
jno
pop
in
outsb
repnz
mov
xchg
and
mov
push
cmc
dec
or
notb
rdpmc
push
mov
mov
and
das
jno
pushf
sub
cmpsl
xchg
dec
xchg
out
cltd
inc
sub
mov
inc
jg
sub
repz
pop
pusha
int3
scas
pop
setno
pop
clc
dec
shlb
sbb
std
xor
lods
in
stos
inc
pop
andb
clc
and
jo
repnz
ret
idivb
xchg
xlat
imul
rol
adc
movsl
lds
cmpsb
cld
addr16
daa
xchg
enter
xchg
push
mov
inc
adc
sub
jg
sub
adc
jno
mov
leave
xor
fwait
insb
nop
xor
aam
add
mov
push
lret
leave
sar
fsubr
repz
aam
filds
push
mov
int3
mov
dec
xorl
fmuls
pop
fs
jns
pop
xchg
mov
jle
xor
push
loopne
pop
push
and
testb
mov
mov
push
dec
sbb
push
and
mov
shll
push
pop
daa
lret
xchg
jno
std
push
jo
adc
popf
pushf
mov
fsubrs
adc
bound
lahf
xor
push
jmp
sbb
mov
shlb
popf
xchg
dec
mov
and
pop
pop
enter
repz
cmp
dec
fwait
ja
inc
adc
cmp
mov
pushf
add
inc
jle
imul
and
clc
or
xor
and
push
sub
test
insl
incb
jbe
xchg
ja
mov
pop
movsl
mov
mov
dec
lahf
sbb
andb
mov
fimuls
pusha
loope
cltd
lock
jecxz
aaa
negl
xor
cs
mov
rorb
cmp
mov
push
jmp
repnz
negl
or
icebp
sub
fwait
pop
ja
adcl
cltd
mov
repnz
loopne
pop
or
sbb
jecxz
test
jbe
xchg
leave
mov
mov
test
out
sub
dec
cmpb
repnz
adc
mov
insw
das
xor
or
and
aaa
sub
fildl
lods
shll
jnp
dec
repnz
ret
aas
and
testb
push
mov
out
femms
gs
sbb
out
jecxz
fsubrl
and
loop
int3
cmp
sti
stos
dec
or
mov
shlb
push
or
lret
jle
fwait
jg
fwait
adc
mov
push
je
out
insb
scas
js
stos
rol
dec
ret
mov
ret
jle
es
icebp
ret
push
cmpsl
jecxz
loop
mov
jns
adc
cmp
sbb
rorl
jecxz
and
outsb
imul
pop
mov
mov
out
stos
ss
jecxz
jge
xor
jo
int
sbb
or
lods
add
out
daa
punpckhdq
mov
mov
sub
arpl
jmp
dec
scas
pop
fnstenv
js
jmp
jo
add
add
ror
mov
pop
stc
push
repnz
rol
cmp
je
mov
inc
and
push
dec
sbb
dec
lds
ficoml
jp
out
loope
dec
or
jno
mov
sbb
push
cwtl
mov
jge
dec
hlt
push
daa
cmp
lods
hlt
mov
push
mov
or
dec
mov
enter
pop
pop
pusha
push
ja
mov
imul
cmp
cld
fwait
cmp
imull
cmpsl
mov
ljmp
mov
enter
xchg
xchg
adc
enter
xchg
inc
xchg
aam
mov
add
push
or
popf
cmp
sbb
push
and
push
les
popf
or
dec
aas
ror
mov
xchg
lea
negl
adc
or
lods
and
and
cmp
dec
sub
lods
in
loopne
jo
into
stc
xor
mov
xor
inc
lock
mov
add
sub
mov
cmp
repz
push
xlat
scas
mov
test
movsb
mov
lock
icebp
xchg
insb
idivb
dec
adc
lods
arpl
insl
sub
rcrb
dec
mov
push
outsb
aaa
fwait
push
into
in
ret
movsl
clc
jbe
data16
cs
imul
cmc
clc
sbb
fidivl
mov
sbb
fwait
popaw
sub
aad
iret
mov
stos
lret
mov
stos
cli
mov
jnp
mov
orb
xor
and
mov
enter
mov
xor
int3
and
imul
cld
jl
dec
sbb
test
jg
lods
mov
add
cmc
pop
inc
push
mov
fisttpl
xor
push
rclb
sub
jbe
shrl
sbb
lds
xchg
xchg
int3
push
flds
sti
pop
jmp
xchg
test
adcb
mov
arpl
push
xchg
inc
mov
jmp
cmpsb
and
mov
xor
clc
pop
adcb
push
xchg
and
sbb
jne
lcall
sbb
dec
inc
dec
or
mov
ret
inc
mov
cmc
inc
movaps
xor
cpuid
xchg
cs
out
mov
fisubl
pop
fnstenv
out
arpl
ror
push
ret
mov
pop
dec
rorl
xchg
lahf
outsb
fiaddl
mov
mov
push
sbb
dec
cs
cld
arpl
jp
js
mov
jae
int3
addl
xchg
mov
push
add
pop
push
cmp
sti
rorl
loop
int3
dec
outsl
mov
or
push
call
and
scas
cwtl
mov
out
xchg
mov
cmp
rep
pop
lea
fnstcw
xlat
jmp
bound
orb
cwtl
dec
fwait
hlt
sbb
push
add
jmp
xor
adc
push
lock
pop
xchg
cwtl
rclb
add
test
push
xor
fisubrs
cwtl
push
out
jmp
icebp
insl
aam
mov
adc
pusha
cmp
mov
xchg
sub
call
sbb
dec
adc
mov
call
and
add
dec
pop
or
fwait
cmpsb
daa
pushf
fstpt
sbb
in
push
pop
lret
les
in
mov
jne
jb
dec
pop
sbbl
imull
stos
push
inc
sub
push
mov
popa
sub
or
pop
sub
test
push
test
js
fsubrs
dec
arpl
sysexit
xchg
shll
iret
jnp
xchg
mov
cmp
adc
and
das
jns
inc
test
xor
jecxz
pop
sbb
push
jno
push
repz
nop
pop
mov
outsl
jnp
pop
sbb
hlt
push
movsb
mov
xchg
rclb
pop
popf
pop
ror
lahf
or
mov
sub
aas
outsl
insl
stos
outsl
or
cli
test
inc
int
dec
dec
outsb
xchg
xchg
xchg
hlt
lds
fdivl
mov
sar
loope
cmp
lret
mov
lock
out
ret
imul
popl
and
aaa
cmpsl
cwtl
test
loop
jns
movsl
aam
xorb
cmp
call
xchg
aas
push
into
dec
xor
push
lods
vpshaw
cld
pop
out
outsb
xor
hlt
lret
loopw
xchg
fldenv
sub
xchg
imul
test
xlat
mov
xor
lret
int3
inc
adc
mov
jl
ja
fildl
mov
jb
shr
pop
movsb
insl
sub
mov
lock
pop
call
push
repnz
scas
adc
and
push
outsb
and
push
pop
imul
xchg
mov
or
lods
xchg
xchg
aad
dec
add
lret
in
mov
addr16
cwtl
outsl
or
lods
cmp
xchg
fstpl
shll
sti
adc
int3
sbb
cmpsb
insb
aad
data16
sub
and
out
sahf
outsl
mov
dec
or
test
inc
inc
or
out
popf
test
lea
jb
stos
adc
jge
and
or
pop
arpl
xchg
out
mov
and
dec
inc
cmp
jmp
xor
xchg
repz
pop
xor
shll
in
add
dec
test
or
sti
sbb
jecxz
push
std
imul
sub
jmp
das
jne
addr16
fidivrs
and
leave
sub
es
pushf
dec
fmuls
repnz
sbb
int3
inc
pop
dec
mov
add
cmpl
lock
mov
or
jb
aaa
or
stos
testb
add
mov
and
dec
push
loop
ljmp
lods
add
lcall
es
add
cli
stos
aaa
je
into
imul
dec
adc
int
das
xor
cmp
into
imul
cmp
xchg
ret
push
or
mov
mov
cld
sarl
scas
imul
dec
enter
test
push
stos
xor
push
ret
sbb
push
or
lcall
dec
insl
or
repnz
lds
data16
test
addr16
mov
mov
dec
pop
pusha
in
xor
aad
or
xchg
sti
lods
xor
push
jns
shl
mov
out
fldcw
enter
adc
jae
push
jg
mov
dec
hlt
enter
adc
aaa
sbb
stc
imul
xor
scas
sbb
xlat
mov
mov
in
cmpl
je
inc
push
lods
inc
cmp
add
int
sub
xchg
popf
push
mov
bound
negl
mov
fwait
sub
scas
push
mov
daa
xor
clc
dec
pop
sahf
scas
add
data16
out
or
adc
mov
sbb
insb
es
jl
repz
sbbb
mov
push
mov
imul
int3
iret
xchg
lock
cmpsl
and
add
call
xchg
lea
jno
lret
lahf
mov
insl
lret
pop
repnz
xor
xor
and
dec
or
pop
movsb
inc
popa
aam
sbb
aas
xor
sbb
xchg
stos
pop
ftst
pop
fsubrl
push
sub
xchg
lock
in
jbe
cmpsb
and
movsb
inc
fistpll
mov
push
out
test
sub
mov
sbb
fisttps
adc
and
xchg
mov
push
out
xchg
insl
repz
and
aas
push
ja
data16
xor
ret
popf
xchg
int3
cltd
and
pusha
mov
out
mov
cmc
add
outsl
sub
dec
inc
xor
push
jmp
inc
sbb
or
add
mov
imul
sti
sub
aad
xchg
lds
aas
push
xchg
adc
push
adc
or
mull
mov
les
int
bound
int
arpl
outsb
jmp
dec
xchg
imul
push
or
dec
inc
scas
int
xor
xor
or
mov
sahf
mov
stc
mov
das
or
iret
mov
lcall
or
mov
adc
in
or
call
xor
sbb
es
xorl
cmc
out
mov
lods
je
out
pop
das
aad
add
andl
outsl
stos
pop
cmpsl
imul
mov
sub
jns
addb
xor
imul
movsb
sub
xor
lods
pop
fdiv
mov
dec
adc
xor
test
scas
mov
push
inc
in
mov
or
adc
mov
orb
iret
test
in
xchg
lods
or
mov
shll
cmove
mov
xchg
inc
movsl
aam
ljmp
cmp
adc
loop
mov
cmp
dec
lcall
fcos
mov
sahf
and
subl
mov
pop
lock
xor
cwtl
sahf
mov
xor
jge
mov
es
inc
rcrl
daa
push
sbb
js
es
data16
fwait
bound
aam
stos
inc
or
in
repz
add
mov
mov
add
jl
pusha
imul
imul
jmp
xchg
mov
mov
dec
mov
aam
or
and
lret
pusha
or
push
adcl
xchg
sbb
iret
rolb
sub
push
imul
mov
adc
mov
popf
xchg
int3
or
mov
cltd
xchg
or
mov
and
imul
fidivrl
loop
mov
cmp
outsb
mov
mov
lods
xchg
lock
bound
push
jp
sub
xchg
mov
xchg
sbb
inc
jl
xchg
pop
inc
aad
hlt
aad
and
mov
inc
cld
xchg
shlb
cld
mov
xchg
jnp
cmpsl
js,pt
insb
les
outsl
shrb
cmpsb
xor
mov
dec
push
mov
xorb
je
test
push
adc
mov
or
lahf
mov
dec
addr16
adc
mov
lods
sbb
and
mov
mov
aam
pop
nop
add
and
mov
stc
mov
jp
rsqrtps
clc
stc
lods
aaa
in
icebp
repz
adc
icebp
push
mov
and
int3
clc
hlt
jae
xor
shr
fdivp
adc
jns
fbstp
xor
ds
repz
sub
inc
mov
jge
push
sbb
push
pop
fistpll
mov
cmc
les
inc
jno
push
mov
xchg
orb
cmp
push
cmpb
mov
mov
cmp
adc
dec
adc
inc
and
out
ds
stos
out
dec
mov
jecxz
add
pop
mov
jb
jg
sub
or
cmp
adc
dec
repnz
push
push
and
sub
dec
jb
lock
dec
adc
mov
inc
cmp
sbb
jle
lds
mov
scas
in
aaa
andl
sbb
icebp
outsb
movsl
push
push
popa
inc
adc
mov
inc
sbb
lcall
pop
aad
popa
mov
fsubp
mov
sbb
rcll
mov
fldt
out
nop
das
mov
jl
cli
shrl
jmp
mov
test
cmp
dec
push
lahf
mov
loopne
cmp
or
fstps
jecxz
stos
and
in
add
lcall
or
jne
add
pusha
pusha
dec
adc
jns
mov
jae
cmc
sbb
pushf
fs
ds
push
or
int
sub
dec
sbb
mov
cmp
push
out
add
stos
sbb
mov
mov
shl
outsb
insb
ficomps
add
subb
ficoms
inc
cltd
subl
in
into
in
iret
mov
dec
insb
test
aam
out
pushf
scas
pusha
pop
fstpt
mov
cmp
jnp
xor
xor
sub
in
dec
mov
lods
add
xor
loopne
rcrb
adc
in
shl
sbb
mov
test
test
xor
addl
mov
push
mov
mov
jbe
rcll
and
pop
loope
dec
or
sbb
push
xlat
jbe
jb
xchg
iret
scas
mov
stos
ss
insb
mov
fwait
jns
enter
pop
les
movsl
mov
insb
lea
insl
xchg
sbb
in
push
xchg
fmull
stos
scas
push
sub
insl
mov
mov
nop
mov
mov
clc
xor
imul
std
cld
lcall
aam
popa
shlb
sub
subb
jecxz
push
adc
popa
bound
mov
or
out
inc
lds
add
sub
outsb
xorl
test
imul
cmpsl
jbe
leave
sbb
sub
mov
dec
push
add
sub
xor
mov
std
or
push
mov
fdivrs
sub
ds
call
in
xchg
and
cmpb
push
stos
roll
jno
mov
add
cmovle
std
push
cwtl
movsb
test
addr16
fdiv
mov
sbb
push
push
out
push
jno
imul
push
sub
mov
adcb
lret
fcmovnb
mov
in
sub
pop
aad
popa
push
and
inc
sub
adc
sub
sbb
fiaddl
ljmp
and
lds
cmpsb
jmp
test
inc
inc
jl
xor
xchg
lcall
lret
hlt
mov
movsb
xor
cmp
fcoms
pop
fsub
cmpsb
dec
cmp
std
add
shl
outsl
in
add
cmc
rcrl
mov
repnz
add
mov
jo
sbb
jne
jns
dec
jle
mov
jae
cs
mov
xor
mov
mov
xor
ds
test
ret
dec
and
push
dec
int
push
add
adc
test
in
out
movsl
out
pop
and
cs
dec
cmc
jg
inc
pop
dec
xchg
lods
xor
sbb
sbbl
div
sub
sub
pop
mov
aam
cmp
jne
dec
or
xlat
mov
or
das
std
push
cmp
inc
std
and
test
mov
or
mov
test
call
sbb
jb
les
dec
sbb
fisubrs
addr16
mov
mov
jecxz
dec
xchg
push
or
push
sbb
sub
fnstsw
outsb
outsb
cmp
roll
cld
ja
xor
mov
jnp
cli
pop
int3
pop
sbb
xchg
pusha
or
cmc
cs
mov
xor
and
fstl
addr16
dec
push
mov
mov
imul
and
popa
in
fbld
and
inc
sub
hlt
orb
andl
frstor
push
cmp
dec
mov
lret
add
push
mov
addr16
add
lods
ret
imul
mov
movsl
fnsave
push
mov
mov
sub
insl
test
fmuls
xchg
je
aaa
jge
fwait
repz
sbb
inc
sbb
scas
imul
bound
jl
mov
sbb
or
lahf
outsl
mov
rcl
xchg
or
lcall
gs
test
jo
push
lods
mov
out
enter
cmp
mov
xlat
hlt
push
adc
out
shrb
loop
mov
pop
xor
outsb
jns
jo
or
push
fidivrs
push
xor
dec
pop
clc
push
push
xor
pop
clc
sbb
inc
cmpsb
stos
outsb
stc
clc
arpl
pop
sub
test
fcmovne
decl
ljmp
jle
enter
outsl
test
pop
sub
lahf
pop
adc
dec
les
mov
adc
pop
aas
push
mov
add
icebp
inc
dec
inc
out
data16
adc
inc
jae
pop
lods
cmpsb
loopne
jb
jp
and
dec
xor
shll
leave
mov
mov
mov
fwait
pushf
dec
out
pop
sahf
sti
mov
jb
nop
ret
add
cld
add
inc
jmp
mov
xchg
rcrl
lret
ja
add
jle
imul
add
ror
or
popa
mov
enter
inc
sub
mov
mov
divb
sbb
inc
mov
icebp
adc
adc
je
popf
pop
pop
rorl
loopne
popf
xchg
jp
std
outsl
outsl
push
test
ret
cs
loop
mov
pop
into
cmpsl
lret
pop
push
ficoml
push
jb
xorl
outsl
sub
mov
es
lahf
sbb
loop
enter
sti
adc
sbb
mov
or
xchg
xchg
push
stos
scas
les
movsb
movlps
mov
inc
dec
mov
mov
movsb
adc
shll
push
aaa
dec
fnstsw
inc
jmp
mov
repz
aaa
xchg
popa
xor
ljmp
and
ficoml
xchg
push
push
inc
xchg
sbb
iret
push
jp
jle
pop
mov
scas
test
jns
or
mov
push
test
andb
das
int3
shl
mov
into
dec
push
mov
rcrb
pop
sub
aas
pop
negb
or
ret
aaa
inc
sbb
jae
cmp
adc
adc
dec
in
jle
sbb
mov
test
or
movsb
je
add
adc
mov
lods
sbb
xchg
xor
cld
mov
and
nop
enter
sbbb
dec
mov
push
or
sbb
inc
ljmp
loope
lods
mov
and
sbb
bound
mov
push
mov
inc
mov
mov
loope
sub
dec
mov
es
lea
push
or
popf
leave
lcall
dec
out
decb
and
pop
fisubl
clc
or
jns
enter
fstpl
test
jae
cmp
iret
pop
filds
jge
idivl
dec
pop
adc
xor
hlt
add
hlt
dec
jne
mov
sbb
fwait
mov
jg
mov
stos
notl
loop
imul
jo
subl
fisubrl
xor
dec
mov
inc
push
addr16
pop
cwtl
mov
fidivl
dec
mov
call
shll
das
test
lahf
repz
pop
push
sub
addb
rcrb
fstps
fcoms
adc
ss
shr
and
hlt
mov
sti
mov
aam
mov
out
jnp
dec
add
or
fisubs
adc
arpl
inc
ret
push
fdivrl
cltd
jg
mov
mov
das
dec
lods
inc
push
and
mov
xchg
inc
jb
push
fwait
outsl
dec
add
add
nop
jp
dec
dec
ficoms
sub
stc
es
and
push
lahf
and
in
jl
and
std
xchg
dec
mov
jo
xchg
call
mov
mov
cltd
cld
iret
pop
sbb
sub
add
mov
sub
mov
jns
cmp
out
shrb
loop
jle
xchg
pop
pushl
cld
inc
xor
gs
sbb
inc
cli
push
mov
sahf
stos
js
mov
in
cltd
and
add
and
xchg
adc
cmc
lock
stos
je
jecxz
jns
adc
lea
add
call
mov
push
orl
mov
push
and
mov
xchg
hlt
icebp
adc
xchg
rclb
mov
push
into
cmpsl
test
mov
jle
out
cmc
rol
or
add
adc
lcall
add
out
popf
faddl
jns
and
ret
jmp
subb
bswap
mov
orl
and
mov
mov
fs
pop
xor
in
sub
adc
in
fldt
jbe
negl
cld
mov
mov
pop
or
stc
loop
jo
fnstsw
or
mov
pop
int
cltd
pop
daa
arpl
sub
cmp
sub
jnp
repz
movsl
push
sbb
ds
jecxz
xchg
insb
push
jbe
div
lcall
ficoms
push
xchg
push
mov
dec
sbb
push
mov
add
adc
cli
pop
scas
mov
xchg
and
in
cld
or
sbb
stos
pop
or
addl
popa
call
inc
mov
imul
push
outsb
aas
pushf
add
pop
sub
sub
mov
sbb
sti
adc
movsl
out
loop
stc
movsb
popf
mov
cmp
push
sub
jno
popf
daa
xchg
push
xchg
adc
mov
fwait
jp
sbb
fs
scas
mov
jl
lods
dec
in
adc
or
and
stos
dec
es
loopne
jno
pusha
push
in
aaa
inc
leave
inc
dec
scas
sarb
lcall
push
sub
xchg
rol
icebp
in
add
xchg
jb
enter
stc
sbb
inc
push
fs
sub
iret
scas
mov
mov
in
pop
clc
ljmp
ret
movsl
xor
stos
nop
fistl
aad
cmc
pop
psrad
popa
add
ds
ret
addr16
in
mov
adc
push
mov
arpl
pop
add
cmpb
mov
mov
add
ret
mov
ljmp
mov
xchg
movsl
cld
fistps
cmp
int3
cmp
cmc
popf
clc
js
sbb
pop
lret
push
dec
ljmp
scas
ficompl
xchg
add
fcompl
or
cmp
sbb
and
dec
ss
bound
test
add
mov
inc
dec
shl
lcall
mov
pushf
mov
mov
cmp
fxch
pop
into
dec
stos
sbb
in
mov
add
jle
mov
shll
ret
or
push
fcomps
jae
shll
and
or
sub
or
pop
fcomps
xchg
decl
in
cmc
scas
in
stos
dec
ds
mov
sbb
or
fidivrl
xchg
aam
pop
mov
incb
pop
jl
insb
jno
movsb
lret
jmp
push
dec
pop
push
xor
mov
mov
lods
pop
gs
sti
xchg
lods
jecxz
fistpl
setns
xchg
inc
cmpsb
int3
push
ja
cwtl
nop
movsb
sbb
sub
dec
insl
or
fmull
mov
pop
test
inc
daa
loop
addr16
xchg
lods
jg
roll
int3
mov
pop
inc
test
xchg
loop
xchg
std
cli
xor
jnp
fwait
cs
jns
pusha
imul
mov
fstpt
mov
repz
push
cltd
fistpl
add
in
rorl
flds
or
add
data16
inc
dec
mov
cld
mov
push
cmpsb
ret
ret
and
out
out
movsb
sbb
or
outsl
dec
cmpsb
push
loopne
std
jbe
aad
mov
loop
mov
push
dec
repz
pop
fstpl
test
xor
sbb
shlb
and
push
enter
call
mov
push
inc
mov
int3
gs
inc
test
pop
push
push
sbb
dec
jo
xor
adc
gs
jo
jo
adc
mov
sbb
xchg
cs
jle
loope
xor
inc
pop
scas
jle
xchg
stc
xchg
sub
outsl
in
xchg
popf
sbbl
pop
adc
xchg
mov
xor
cltd
jp
push
out
jle
mov
cs
idivb
ljmp
mov
gs
flds
sub
fisttpl
dec
jbe
pop
push
xchg
inc
icebp
fsubrl
fwait
dec
cs
nop
dec
aam
loop
mov
lock
aam
cmp
lahf
fcmovbe
in
or
js
popa
clc
lea
cmp
mov
outsl
or
mov
roll
pop
dec
test
arpl
xchg
sbb
aam
je
lcall
dec
lock
cltd
std
lea
sti
inc
push
mov
sbb
inc
sub
adcb
sub
mov
pop
aad
push
or
inc
ficomps
adc
fiadds
push
into
ret
jl
mov
sub
test
das
push
xchg
and
in
test
xor
pop
pop
pusha
mov
addr16
in
add
and
inc
fs
sbb
sbb
je
mov
adc
jmp
hlt
stos
aaa
xor
or
xchg
and
jb
leave
and
pop
fidivl
xlat
hlt
xchg
or
jne
fisubl
xchg
add
adc
cs
and
xor
test
ret
hlt
fbld
sub
sub
xchg
imul
pusha
mov
mov
push
clc
jns
push
decl
mov
mov
mov
adc
lods
sbb
sti
mov
fiaddl
mov
cs
aaa
or
aad
fcoml
outsl
sub
decl
mov
in
pop
xor
adc
aaa
sarb
stc
push
shrl
sbb
dec
dec
xchg
test
fwait
xor
sbb
push
outsb
add
adcl
clc
pop
gs
xor
adc
bound
add
out
xchg
sbb
or
cmp
mov
std
push
fldl
loopne
or
add
mov
icebp
das
inc
and
adc
repz
fdivrl
scas
and
imul
jne
mov
mov
js
cmp
jno
pusha
imul
cmp
gs
iret
mov
loope
push
jns
pop
push
lahf
daa
dec
rolb
andb
jne
outsl
push
movsl
xchg
xchg
cltd
scas
cmpsb
pop
icebp
test
int
std
dec
int3
int
pop
inc
jp
sub
mov
in
sub
cmpsl
cld
test
loopne
fs
adc
mov
mov
push
xor
mov
cmp
xchg
xchg
cmp
cs
xorl
sbb
adc
add
adc
pop
ljmp
cld
imul
aaa
push
mov
pop
sahf
lret
jle
xchg
hlt
leave
xchg
push
ret
loopne
movsb
sbb
pushf
xchg
dec
out
mov
into
mov
push
inc
int
les
push
iret
ret
sub
adc
nop
aam
sahf
mov
inc
cltd
cmc
imul
dec
and
stos
and
inc
xor
inc
addr16
xor
pop
mov
std
pop
dec
out
xchg
cmpsl
mov
sub
addr16
into
shll
test
insl
add
add
lods
lret
mov
xor
lahf
xchg
popf
pop
mov
lar
inc
das
sbb
push
lods
sbb
mov
rcrl
push
inc
adc
lret
and
mov
pop
stc
fldt
in
ja
test
mov
sbb
dec
pushf
hlt
jp
jg
testl
scas
inc
cmp
aas
add
pop
pop
mov
mov
push
sub
scas
push
lret
out
cld
gs
es
cld
je
scas
int3
cmp
test
loope
pushf
inc
notb
addl
test
jns
movsl
in
arpl
or
xor
movb
xor
incl
icebp
inc
leave
jmp
clc
adc
pusha
arpl
mov
addb
jbe
sti
loop
push
sbb
push
das
mov
mov
movsl
mov
sub
out
das
retw
outsb
jbe
incb
mov
jl
fnstsw
xlat
sbb
mov
pop
or
pop
sarl
aam
push
dec
cmp
insl
jge
jmp
data16
scas
jecxz
shl
inc
aam
fisttpll
insl
test
aas
xchg
out
inc
push
cmc
aam
inc
lea
mov
adc
jns
lcall
xor
shlb
xor
sub
int
scas
lret
sbb
push
pop
jmp
fidivl
callw
hlt
shll
adc
fcmovb
cmpsb
cmp
mov
and
pushf
repz
addr16
mov
mov
ljmp
xor
adc
pop
scas
adc
lcall
adc
in
inc
repnz
mov
sub
inc
dec
jecxz
daa
xchg
sbb
dec
pop
pushl
jns
mov
adc
js
push
popa
sarl
xor
jecxz
repnz
adc
sub
dec
inc
fiadds
jp
into
enter
xchg
inc
movsl
adc
jmp
stos
mov
cmp
pop
sbb
mov
xor
cmp
mov
xchg
call
test
mov
movl
aas
xchg
int3
cmpsl
test
adc
mov
fmull
data16
push
mov
mov
cli
shlb
test
test
fisttpl
sub
ret
push
jb
movsl
out
dec
fsub
jmp
hlt
adc
faddp
xchg
xchg
jae
shlb
xlat
mov
mov
jne
add
incb
xchg
xlat
xchg
or
test
arpl
notb
cld
call
mov
fnstsw
push
sub
shll
xchg
pop
adc
push
mov
inc
cmp
adc
pop
or
ljmp
cmp
sub
dec
ds
ds
and
adcl
loope
lret
pop
lahf
xor
in
sub
mov
mov
je
fldl
adc
jle
push
add
and
shl
xchg
das
jg
jno
cmc
or
add
enter
cld
xchg
push
into
xor
ds
pop
aam
jno
jbe
test
or
jns
xchg
push
push
rorb
in
push
lahf
mov
sub
repnz
xor
repnz
dec
lahf
cmp
mov
dec
push
inc
jnp
lea
ljmp
add
add
les
ret
in
and
cmp
bound
push
xchg
jmp
mov
loop
sub
dec
xor
addr16
outsl
lret
jg
cli
lods
jecxz
fidivl
inc
lret
add
adc
push
daa
fdivl
inc
push
popa
orl
movsb
cmp
xor
outsl
jl
pop
add
test
out
mov
fcmovnbe
pop
add
push
inc
inc
imull
movsb
push
add
adc
stos
es
xlat
push
aaa
insb
or
aad
stos
push
jne
xchg
scas
mov
cli
int3
mov
pop
es
jecxz
pushf
inc
mov
mov
sbb
out
cld
mov
jo
xchg
stos
sub
jl
or
frstor
and
loop
mov
adc
mov
xor
and
shlb
push
cmp
push
test
mov
sub
push
cmp
loope
push
clc
ja
jle
jno
scas
ds
cmpsb
inc
pop
mov
pop
add
fsubs
push
mov
jge
inc
mov
in
lea
sbb
lods
xchg
rclb
xchg
jno
gs
xor
jl
xor
femms
into
stos
mov
jge
dec
arpl
xor
lcall
push
sbb
or
lea
push
std
add
in
push
jmp
mov
repnz
xchg
inc
pop
push
xor
push
ret
lcall
sahf
push
fnstcw
cmp
ds
aas
mov
mov
push
idiv
je
filds
idiv
mov
dec
test
test
jmp
adc
pop
scas
faddl
xchg
jnp
adc
call
stos
test
int
lret
sbb
cmp
and
push
sti
mov
aam
in
xor
stc
imul
mov
adc
fistps
out
xchg
push
sub
roll
fidivl
dec
cmpsb
aas
fdivrl
stos
js
push
sub
in
sarl
rorb
jp
inc
jmp
sbbb
and
mov
push
jae
stc
push
lea
push
ret
jae
jp
xor
sub
push
int
mov
mov
jb
mov
push
cmp
ret
sub
cmp
pop
outsb
rcrl
mov
outsb
jecxz
out
push
inc
mov
sbb
pop
out
adc
push
pop
xchg
sub
fcompl
sub
mov
or
push
fldl
lods
jnp
xchg
call
insb
pop
clc
push
movsb
cmp
mov
mov
inc
inc
sbb
stos
mov
xor
aam
outsl
sbb
shl
ss
movsb
nop
nop
sbb
dec
inc
mov
arpl
lret
nop
outsl
icebp
mov
cld
je
dec
outsb
ja
test
fidivrs
pop
imull
cmc
outsb
dec
dec
xor
stos
mov
in
mov
dec
imul
xorb
mov
add
add
push
pushf
es
insl
gs
js
lcall
lods
inc
mov
std
dec
jb
mov
lcall
test
in
das
gs
add
adcl
fildll
cld
sub
dec
addr16
cmp
push
xchg
push
sti
dec
cmp
shll
arpl
pop
test
sub
je
and
adc
xchg
rol
adc
gs
inc
cmp
xlat
mov
int3
fisttpll
lahf
fsubr
and
lea
int
jg
mov
dec
pop
mov
cwtl
sbb
daa
mov
sbb
das
int
addl
xchg
pop
pop
enter
jne
in
addr16
xchg
pop
rcl
add
fidivrs
or
lock
cld
xchg
icebp
lods
xor
sarb
add
pop
sub
dec
repz
shlb
int3
dec
xchg
pop
mov
orb
in
adc
fistpll
jo
mov
push
mov
inc
xchg
adc
xchg
inc
mov
sbb
outsl
jns
in
sub
out
push
mov
adc
mov
adc
ja
sahf
push
rorl
lcall
popa
add
sub
mov
or
cltd
cs
je
sub
movsl
sarb
push
jae
jns
mov
mov
ret
pushf
fildl
and
gs
and
fs
pushf
bswap
xchg
add
negb
pop
jb
xor
je
arpl
insl
jp
jb
mov
xor
or
sub
test
push
bound
dec
xchg
pusha
xchg
rol
or
push
or
ss
fmull
sub
jecxz
ficoml
cmp
dec
push
lea
aam
mov
nop
xor
xchg
in
arpl
xchg
loopne
mov
scas
mov
adc
sti
jno
dec
sahf
push
cmpsl
xlat
data16
fidivs
orb
jno
xchg
xor
push
fsubp
xchg
dec
lret
adc
or
lret
sub
iret
cmpsb
in
out
cs
test
push
xchg
mov
call
cwtl
repz
punpcklbw
in
mov
sbb
xor
or
push
pushf
cmc
or
das
mov
mov
cld
dec
call
scas
orl
fisttpl
shll
mull
jmp
add
dec
cmc
gs
pop
adc
mov
and
leave
in
repz
push
bound
ja
movsl
lea
mov
negb
push
fwait
cmpsl
ja
mov
into
xor
cmc
add
xlat
jg
ljmp
stc
cmp
jmp
pop
repz
data16
rolb
lods
iret
lahf
mov
fsubrs
cmp
cltd
cwtl
les
and
xor
shl
jo
iret
into
and
pop
xchg
and
or
loop
jg
adc
jecxz
out
imul
notl
insl
jle
adc
mov
dec
pop
add
jmp
mov
mov
mov
frstor
dec
pop
xor
out
mov
pop
mov
in
dec
xchg
sarl
cmp
pop
pop
or
stos
xor
sbb
jecxz
sbb
pop
mov
sti
mov
jecxz
push
push
sbb
daa
test
ficoml
ljmp
push
cli
jo
xor
mov
scas
dec
out
sbb
das
sub
ja
subb
leave
test
pop
repz
js
lret
jb
cs
insl
mov
or
cmc
sbb
mov
mov
cmp
xchg
pop
outsl
pop
leave
cltd
or
rcrb
xchg
test
out
je
mov
dec
xchg
dec
and
pop
push
pop
cmp
sarl
add
pop
test
add
test
mov
inc
outsl
cld
fdivp
test
cmc
xor
inc
fdivrp
cmpsl
push
loopne
push
sub
cli
aam
pop
loop
fld
cmp
gs
out
mov
in
push
mov
jle
enter
adc
rclb
jmp
mov
iret
mov
xor
popf
mov
mov
std
jp
mov
push
mov
dec
sub
rorb
mov
fdivrs
push
ljmp
mov
cwtl
lods
mov
es
scas
iret
shlb
enter
dec
dec
fldl
insb
add
mov
inc
push
scas
dec
push
mov
xor
cmp
add
cwtl
add
js
shrl
and
aaa
andb
incl
js
push
xchg
inc
dec
dec
in
mov
into
repnz
pop
lods
loopne
cs
pushf
sub
repz
cmpsl
xchg
xor
mov
sbb
and
test
and
pop
fwait
dec
subl
add
add
ljmp
xlat
push
jne
mov
es
pusha
sub
divb
dec
push
or
decb
mov
and
rorl
test
in
sbb
add
adc
roll
xchg
jnp
popf
add
loope
stos
nop
pushf
jae
xor
pop
and
xor
cmp
das
adc
pop
dec
jg
add
pop
push
ja
jbe
jns
mov
imul
pop
cmp
sub
hlt
and
xor
fidivs
fdivrs
addl
cli
test
pop
sub
pop
lock
sti
add
mov
push
nop
and
jns
sbb
aam
mov
clc
movsb
movsb
ret
aam
pop
push
push
ds
add
jge
scas
test
mov
adc
xchg
cltd
add
andl
shr
in
in
xor
push
icebp
mov
or
ficoms
out
cmpb
nop
or
or
pop
fidivs
stc
mov
jbe
sbb
incb
pop
dec
push
add
rolb
pop
mov
mov
popa
jl
ret
repnz
xchg
jns
mov
mov
cmp
adc
fcos
pop
fdivl
sub
mov
andl
push
sub
or
push
call
mov
ret
lea
mov
dec
pop
je
jg
scas
push
lcall
into
xchg
sbb
add
xor
fdivl
pop
mov
subb
dec
cmp
mov
jae
push
test
gs
mov
mov
sbb
jns
xlat
sbb
cmp
sahf
jne
push
ljmp
ret
insl
jno
mov
ret
rcrl
jmp
xchg
adc
mov
outsl
loope
mov
push
jnp
inc
push
and
sbb
shlb
insl
int3
mov
icebp
iret
insb
inc
adc
cmc
inc
inc
dec
mov
sbb
xchg
scas
test
adc
sub
fwait
cmp
cmp
cmp
push
loopne
add
shl
xor
pop
in
and
loope
js
scas
push
sbb
cld
pop
out
add
ss
int
jg
add
popa
and
xchg
jo
jne
bound
lods
ljmp
fcoms
mov
pop
hlt
push
out
push
inc
adc
adc
sbb
pop
cld
jecxz
cmc
fdivl
push
ret
outsl
xchg
imul
xchg
add
rcrl
jmp
lods
mov
out
cmp
fs
pop
sahf
or
mov
hlt
jl
sub
push
popa
mov
sub
mov
xchg
xchg
outsl
lock
dec
sti
lret
stos
mov
xchg
movsl
lret
test
fstpt
mov
adc
int3
jmp
ret
mov
mulb
pushf
push
xor
ret
cmp
xchg
push
arpl
add
ret
cmpsl
fldenv
sub
push
sub
mov
sbb
mov
xchg
cmpsb
xchg
aad
test
dec
lds
mov
addr16
xor
std
xchg
pop
cwtl
jbe
sbbl
sbb
pusha
sti
jns
in
xor
imul
ljmp
pop
mov
call
xchg
imul
stos
or
jmp
pop
jno
xchg
sbb
pop
mov
mov
jle
shlb
fisubrl
pop
int
inc
movsl
adc
divl
popa
xor
outsb
insl
mov
cmpsb
mov
xor
mov
and
pand
int3
loopne
cltd
push
cmpl
sub
xor
sub
sbb
xchg
push
cmpsb
ljmp
sahf
pop
xchg
out
or
or
insb
jne
add
out
fs
sub
jne
push
imull
ljmp
insb
ja
xchg
jg
xor
dec
mov
or
fdivrs
in
jecxz
leave
add
push
sahf
loopne
xchg
test
outsb
pusha
jbe
repnz
js
adc
inc
imul
adc
bound
jp
cmp
fcomip
jb
jle
shll
loope
xor
pop
adc
xchg
std
mov
xchg
mov
stc
add
dec
in
push
jge
fst
stos
sub
fidivs
add
mov
sahf
cltd
pop
jbe
popf
dec
mov
icebp
cmpsb
push
in
mov
jb
inc
xchg
aas
ljmp
daa
mov
lods
xchg
or
sbbl
pop
adc
stos
icebp
std
call
loope
cld
mov
push
hlt
lcall
push
dec
lock
adc
je
arpl
pop
mov
shll
das
cwtl
sahf
add
sti
or
notl
cli
test
clc
and
inc
test
jle
adc
cmp
sub
sub
rcr
je
push
cmp
xchg
scas
pushf
lahf
mov
xor
lret
sub
mov
lds
mov
inc
or
scas
and
jl
es
enter
in
lret
loop
push
pusha
push
fwait
insl
dec
xor
in
aaa
mov
jmp
lea
test
jns
pop
jno
add
test
cs
dec
jmp
es
sub
sub
fnstcw
cmp
pushf
cmp
int
push
xchg
fstpl
aaa
push
push
push
and
out
mov
pop
call
adc
mov
outsb
add
xchg
lret
fnstsw
shlb
mov
cmp
xchg
jo
push
mov
test
stos
aad
aad
dec
xor
outsb
in
leave
call
ret
jns
push
loope
insl
jg
daa
push
mov
xchg
cmp
les
int
adc
mov
pop
mov
and
jmp
xchg
icebp
movl
jbe
jp
ret
inc
in
imul
movsb
arpl
cld
imul
pop
idiv
push
pusha
and
pop
sti
icebp
sbb
xchg
cli
xor
dec
add
xor
push
les
push
outsb
scas
ret
mov
jne
xchg
mov
and
push
dec
popa
sahf
ja
outsl
aaa
pop
cltd
inc
pop
shrb
jbe
daa
test
imul
mulb
das
lcall
xchg
pop
push
out
sbb
pop
push
push
jae
lret
cmpl
decl
ds
enter
push
clc
repnz
fiadds
fst
insl
stos
loop
mov
into
fwait
dec
pushf
fwait
mov
hlt
add
std
jle
inc
xor
aas
data16
push
shl
dec
cmp
repz
addl
imul
int3
mov
pop
mov
test
cli
push
jne
dec
jmp
shll
xchg
add
fcomps
cmc
lods
mov
sti
pop
pop
push
fisubrs
add
cmp
sub
xor
sbb
jg
int3
dec
and
fdivs
and
pop
dec
cwtl
repnz
xor
sub
ret
rorl
stos
shll
into
sbb
and
cmp
pop
imul
push
push
jmp
cmp
iret
in
in
loopne
mov
cwtl
in
popf
mov
add
aaa
sarl
test
cmpsb
mov
xchg
shll
js
cli
add
pop
stc
cltd
sbb
push
iret
stc
xchg
mov
xor
dec
jo
xchg
stos
sbb
pop
cmpsl
cmpl
pop
int3
aaa
and
mov
rorl
enter
jg
sahf
daa
push
xchg
loope
add
dec
enter
scas
xor
mov
nop
mov
fcmove
or
lods
in
mov
sahf
das
aam
inc
xchg
or
clc
test
daa
gs
or
adc
insl
lea
cltd
pushf
sbb
adcl
notl
push
push
pop
mov
pop
jbe
imul
int
dec
sbb
lahf
in
or
cmp
ret
outsb
mov
xchg
int3
addr16
dec
push
out
jmp
fcmovu
dec
hlt
xacquire
pop
adc
mov
scas
shl
test
sub
cmp
inc
sub
or
adc
sahf
mov
and
pop
fs
add
out
lods
and
lock
clc
ret
or
fistpl
sub
popa
add
pop
cmp
xor
mov
mov
adc
or
jle
mov
dec
test
iret
and
mov
aam
lock
push
jge
xchg
inc
cmp
push
mov
mov
mov
and
or
std
jl
in
and
gs
mov
mov
loope
cs
cld
dec
and
cmp
xor
or
sbb
inc
cs
aaa
call
sub
mov
push
movsb
loope
add
scas
lea
lock
jnp
jecxz
xor
pop
lahf
xchg
sub
stos
test
mov
std
mov
shl
aas
jp
jecxz
mov
test
jnp
ss
repnz
mov
lods
add
sub
lock
or
push
enter
lcall
rcrl
hlt
je
mov
out
icebp
fisubrl
pushf
dec
sti
cmp
xchg
pop
mov
cmp
ficoms
jmp
push
sub
pop
lods
imul
xchg
cmpsb
pop
data16
movsb
in
jbe
fdivs
dec
sbb
sub
faddl
jnp
in
dec
scas
or
xor
in
jno
jb
mov
jmp
sbb
addb
repz
cmp
test
cs
lods
test
push
lret
cmc
mov
leave
fmuls
das
or
add
xor
push
mov
aaa
mov
mov
subl
mov
fcoml
xlat
cld
rorl
das
push
adc
pop
mov
cmpsl
lea
and
and
ds
dec
add
movb
imul
adcb
fists
andl
xlat
xchg
ret
popf
in
jbe
in
shlb
cmpsb
das
add
pushf
clc
xchg
das
lds
xor
sub
push
pop
daa
rclb
in
push
push
pop
gs
mov
xor
into
stos
push
add
cmp
lahf
aaa
jns
sarb
scas
lret
mov
dec
or
mov
pop
or
push
insl
adc
aas
adc
mov
fidivs
movsb
mov
aad
mov
mov
mov
pop
jb
pusha
ficompl
dec
cmpsb
cmc
dec
mov
fs
imul
add
loop
pushf
scas
xchg
jecxz
out
dec
int3
ljmp
adc
ds
sbb
dec
loop
mov
sbb
cmp
imul
sub
xchg
cmp
pop
cwtl
or
repnz
cwtl
dec
bound
xor
cs
inc
jbe
rcl
loop
adc
pop
orl
pop
bound
andb
jecxz
test
in
repz
test
stos
lods
sahf
jo
leave
cmp
pop
adc
popa
push
cmp
lret
jmp
std
jg
aaa
andb
cld
aad
jb
jo
mov
popf
clc
mov
sbb
cmp
jle
jl
or
idiv
movl
xchg
clc
inc
xor
xchg
das
hlt
xchg
jecxz
stos
mov
jl
cs
flds
sbb
lahf
push
xchg
enter
lret
outsl
jecxz
dec
rorb
jo
mov
decl
das
fnstsw
push
xchg
xchg
inc
xchg
pop
xor
jnp
addb
inc
sarb
push
push
jge
mov
adc
push
fnsave
enter
in
sub
loop
pushf
fsubp
push
pop
adc
push
gs
fwait
in
or
rcrl
push
mov
rolb
popf
andl
sbb
push
in
ret
mov
ss
mov
pop
movsb
ret
mov
pop
and
cmp
lods
jns
outsb
fsubl
shr
push
adc
ljmp
lock
inc
testb
dec
mov
test
inc
in
sbb
stos
xor
pop
jmp
xchg
int
cs
ljmp
fcmovb
inc
mov
mov
and
adc
xor
sbb
dec
inc
mov
lret
lods
popw
inc
ffree
pop
sub
jp
push
jne
sbb
mov
lds
in
sbb
xor
jo
pop
stos
cmp
cmp
aad
xor
stos
loopne,pn
xor
jge
xor
mov
jp
mov
vmwrite
fbstp
sbb
cld
mov
pop
xchg
dec
jecxz
dec
sbb
popa
notl
push
mov
cmp
pop
int3
xchg
dec
popf
inc
cmp
add
xchg
loope
js
and
mov
sbb
xchg
shlb
jp
push
xor
outsl
pop
jns
dec
pop
cld
ss
insb
outsl
sub
outsb
cwtl
outsb
ret
jp
sti
jecxz
mov
cmp
popa
dec
rcrl
cmpsb
push
es
dec
dec
bound
inc
mov
dec
cmp
cld
push
daa
mov
mov
das
lret
in
adc
mov
leave
jp
lahf
xchg
add
outsb
pop
cmp
jp
popa
dec
dec
repnz
jnp
sahf
popf
xchg
fldl
adc
sub
rorl
sub
das
das
cmpl
loop
into
mov
jb
int3
ret
adc
or
or
icebp
insl
cmpsl
add
lods
in
ror
cld
insb
sub
out
aas
cltd
pushf
arpl
in
scas
push
mov
and
out
out
test
fwait
cwtl
add
jp
mov
xchg
scas
push
cs
jg
push
jo
cmp
aad
icebp
mov
ljmp
inc
test
mov
mov
sbb
int
push
xacquire
push
adc
mov
dec
aam
and
or
daa
scas
xchg
leave
lods
leave
jnp
loope
cli
imul
push
jbe
addl
adcb
filds
shl
mov
shlb
jne
push
mov
cmp
lret
xor
cltd
pop
js
test
mov
shl
add
adc
mov
mov
dec
xchg
jmp
ret
xor
mov
je
push
shll
xchg
std
mov
mov
std
push
dec
icebp
jo
divb
dec
lock
loope
xor
cmp
arpl
test
jo
or
jbe,pn
sarl
sub
imul
iret
adc
jb
mov
lret
pop
into
and
mov
clc
mov
mov
lcall
stos
cmp
fistpl
pop
out
pop
push
push
mov
ror
fdivrl
lock
es
add
into
adc
call
sbb
sbb
inc
jnp
add
lret
ljmp
or
push
scas
addr16
sbb
fs
leave
push
fstps
hlt
mov
inc
loopne
scas
gs
stc
out
add
mov
adc
popa
add
xor
mov
bound
lret
dec
imul
jo
pusha
add
or
pushf
daa
inc
adc
in
divl
jmp
mov
fstl
jne
push
xor
cmp
ss
enter
cltd
mov
dec
cltd
int
xchg
dec
test
inc
add
icebp
jge
fs
push
jmp
inc
pop
ja
xlat
shl
leave
add
stos
push
mov
daa
sarl
cmpsb
orl
jg
jae
mov
lret
jge
add
aad
cmp
hlt
fcmovbe
pusha
add
pusha
nop
dec
fucomip
jns
add
cli
repnz
ret
pop
xchg
fnstenv
mov
push
inc
out
data16
mov
and
or
mov
std
pop
inc
or
push
fistpll
rol
mov
leave
divl
fcoms
pmulhw
mov
sarl
push
and
cmpsb
jo
lcall
xchg
xchg
mov
nop
test
xchg
test
in
les
mov
repnz
cs
mov
sbb
imul
into
sar
pop
sar
aas
and
push
inc
enter
std
call
add
sub
aaa
cmp
stos
sahf
pop
int
or
pop
or
lock
jp
push
loope
pop
jo
sub
fcomp
xchg
mov
jle
xchg
sub
xor
data16
jle
negb
inc
nop
addr16
mov
imul
fadd
pop
test
pop
sbb
daa
mov
mov
lock
mov
lret
es
jle
enter
push
mov
loop
pop
pop
xlat
push
in
mov
subl
cltd
inc
nop
dec
sub
lcall
mov
xchg
add
pop
xchg
sub
lcall
rcrb
pop
jo
adc
hlt
sbb
subb
fwait
sub
sarl
ret
dec
stc
sub
fcomp
pop
fdivrl
insb
das
push
pop
mov
add
adc
cmp
jl
cmp
push
push
popl
dec
fidivrs
xchg
daa
adc
pop
je
scas
fstpl
test
and
loop
mov
mov
mov
xchg
jg
lea
sbb
xor
xor
jecxz
xchg
pop
dec
fs
lret
mov
mov
and
add
xor
push
sub
scas
push
mov
aam
xchg
dec
andb
or
mov
mov
adc
inc
mov
inc
xlat
loopne
cltd
xchg
mov
xchg
jg
sbb
push
incl
mov
push
repnz
ja
and
fwait
jge
loope
pop
cli
add
ss
fistpl
dec
mov
scas
out
mov
mov
and
loopne
push
out
test
movsl
dec
sbb
inc
insl
loope
daa
jns
fwait
jb
or
outsl
cmp
jecxz
mov
aam
in
and
stos
test
pop
inc
enter
scas
movsb
jbe
adcl
hlt
lods
ds
sub
sbb
stc
mov
test
andb
dec
lods
xchg
jmp
icebp
lret
outsb
movsb
sub
mov
xchg
pop
scas
loop
cmp
jne
xchg
or
movsb
dec
sbbb
cmp
mov
int3
rep
xor
or
fwait
test
mov
or
sub
jns
stos
push
xchg
lcall
ja
in
xor
and
or
stc
es
inc
pop
or
or
mov
mov
push
xchg
sub
mov
inc
imul
jg
insl
mov
aam
dec
cld
mov
push
add
pop
outsb
dec
fistpl
push
lods
pop
jae
lret
sbb
in
dec
test
mulb
push
neg
or
jns
enter
dec
aad
test
ss
cmp
jo
cli
and
aas
enter
pop
ljmp
js
inc
test
and
sub
dec
idivl
mov
mov
incl
and
pushf
cli
inc
sbb
lret
dec
mov
shll
pop
in
sub
push
pop
popf
or
dec
dec
sbb
jecxz
mov
xor
or
mov
xor
mov
jb
sub
lahf
imul
ja
je
push
in
mov
in
stos
ds
cwtl
imul
js
cmp
xor
sbb
pop
imul
jns
mov
cmc
jno
cmpsb
xor
loopne
lret
lahf
lret
sbb
iret
inc
ljmp
lds
popf
je
lahf
je
std
mov
cmp
sti
inc
cmp
add
lret
pop
dec
ret
dec
out
cld
repnz
jbe
lret
cmc
movsb
pushf
jo
jo
ret
in
mov
push
mov
or
ja
xchg
cwtl
sti
push
mov
or
pop
sbb
aas
fdivrl
shrl
test
sub
xchg
idivb
mov
jmp
ss
mov
mov
fdivrs
mov
push
les
add
faddp
mov
stc
imull
push
scas
loopne
aam
adc
push
cli
add
lock
jge
nop
imul
or
jecxz
nop
cmp
sbb
orb
jb
pop
test
stos
inc
imul
fstpt
cli
iret
sbb
imul
hlt
or
dec
sti
fdivrs
jp
gs
pusha
adc
adc
and
mov
fisttpll
mov
mov
aas
scas
push
mov
xor
mov
movq
jno
test
pop
test
aam
dec
push
cmp
cmp
les
icebp
mov
dec
aas
dec
xchg
xor
xor
inc
mov
test
lret
call
pop
mov
xor
movsb
cmp
pop
fs
out
mov
fnsave
inc
add
lods
mov
xchg
pop
pushf
mov
xor
adc
arpl
inc
or
out
cmp
fstps
jle
ljmp
cmpsb
mov
pop
shll
shrb
rcr
sbb
adc
insb
dec
arpl
push
popf
lea
inc
loopne
cmp
inc
jno
int
dec
jnp
sbb
into
jg
mov
leave
fisubs
xchg
mov
ljmp
cmpsb
push
jbe
push
test
lret
inc
push
das
push
xchg
jae
loopne
adc
cmpsb
xchg
rcrb
jae
insb
jmp
das
xchg
ror
inc
add
loopne
dec
std
mov
mov
sti
adc
push
jbe
pop
lods
rcll
dec
adc
jmp
cmp
in
adc
mov
fs
adc
push
icebp
fsts
lock
add
sub
xorl
cmp
pop
mov
neg
pop
jmp
cmc
xchg
loopne
pushf
jns
lea
xchg
dec
insb
add
pop
or
idivl
ljmp
pop
ret
ret
fbstp
divb
pop
add
or
je
roll
jg
ja
jmp
gs
sub
adc
inc
fwait
add
and
mov
dec
popf
loop
xor
push
jno
push
ja
jl
lds
fs
aad
hlt
cwtl
or
stos
and
jg
shr
das
adc
incb
cli
pop
xchg
bound
mov
insl
outsl
fisubl
fdivs
repnz
les
orb
leave
inc
sub
adc
lods
and
js
loopne
adcb
out
popl
sbb
imulb
mov
clc
rclb
fstl
mov
push
sub
push
out
arpl
insl
jno
mov
stc
push
pushf
ja
add
add
sbb
jo
arpl
inc
test
cld
out
fs
lret
faddl
mov
cmp
fucomip
lret
ret
decb
ss
jno
inc
mov
push
ja
mov
mov
test
adc
pushf
in
mov
je
and
aaa
mov
cmpsb
and
in
aad
sbb
neg
sub
xor
pop
lods
in
clc
xor
mov
push
sbb
pushf
bound
ss
jno
sub
imul
fisubs
adc
dec
mov
and
adc
dec
push
dec
sub
pusha
pop
inc
sub
test
mov
push
or
sahf
dec
adc
sahf
jnp
dec
pop
jmp
fisttps
inc
fisubrs
xchg
mov
and
mov
jl
jnp
jge
loop
push
call
sbb
pop
leave
sbb
lret
fisubl
addr16
jge
std
sbb
in
jecxz
lcall
jl
sbb
mov
das
stc
xorl
mov
ds
adc
lcall
xor
aaa
pop
dec
out
cmpsb
add
mov
xchg
xchg
xchg
icebp
push
in
and
inc
aaa
outsl
int3
push
mov
es
sub
or
sbb
iret
lds
frstor
inc
decb
nop
push
sub
test
imul
dec
cmpsb
mov
inc
push
jmp
adc
pop
lock
dec
jl
jae
cmp
jae
push
mov
mov
mov
ret
xchg
stos
das
test
pop
pop
dec
je
inc
pop
das
or
inc
stos
int
in
sub
jmp
sbb
mov
divl
addr16
add
xchg
cmp
test
sahf
cs
imul
jge
sarl
pop
ret
and
addl
or
cmp
rcrb
or
and
xchg
push
xorl
push
pop
out
insl
lcall
jb
arpl
bound
jg
inc
add
dec
sub
loop
or
cmp
jl
fs
push
add
mov
pop
and
mov
lret
sub
sub
imul
mov
mov
or
addr16
aaa
orl
hlt
shlb
add
add
call
mov
ss
sbb
aam
mov
cld
and
nop
mov
cmpb
and
and
pop
rclb
int
xchg
mov
stc
push
jns
mov
cli
push
jecxz
flds
pop
xchg
ret
rolb
xchg
fdivs
out
in
push
pop
adc
or
inc
push
xchg
popf
cmp
pop
js
dec
cmc
sbbb
fsubl
cmp
pop
and
repnz
jne
xor
push
mov
cmp
shr
adc
enter
adc
xchg
dec
lods
mov
xchg
das
lcall
cmp
loop
mov
mov
and
ret
inc
enter
and
mov
or
repz
cmpsl
inc
xchg
stos
pop
lods
sbb
dec
lahf
push
jae
adc
fists
into
movsb
add
ljmp
addr16
cmp
in
lods
jle
xchg
sub
pop
cmp
call
mov
addb
cmp
popa
cltd
fnstcw
outsb
insl
xchg
pop
mov
or
fmull
jmp
mov
rolb
clc
mov
pop
jno
cmp
pop
scas
sti
adc
adc
and
rol
ret
pop
jnp
pop
ljmp
cmp
push
xchg
pop
pop
aam
xchg
jmp
or
sub
jo
in
push
mov
test
pop
add
fstp
mov
sbb
imul
lret
jg
out
dec
pop
subb
xor
push
xchg
and
enter
and
sahf
mov
xor
pop
aam
and
loop,pt
xor
add
jnp
sub
cmp
xchg
notl
sbb
jge
jae
ljmp
sub
les
loop
inc
sbb
sub
imul
add
testl
inc
adc
push
mov
mov
mov
lahf
ret
push
insb
pushf
or
out
xchg
push
rcrl
daa
jge
int3
les
jae
sub
daa
sahf
pop
jbe
jne
adc
outsb
cmp
rcrb
add
dec
and
dec
adcl
push
pop
cmpsb
cmp
ds
fisubs
cmp
sub
int3
test
fdivr
xor
add
test
negb
cmp
sub
andb
push
pop
inc
mov
push
shrb
cmp
lods
jo
decl
lea
jg
mov
popf
arpl
stos
mov
int
cmp
adc
push
cli
xor
adc
mov
or
xor
lds
in
lret
mov
int3
imulb
mov
test
push
lds
leave
or
dec
jns
push
mov
ds
push
xchg
inc
pushf
inc
cmpsl
into
mov
icebp
mov
in
push
inc
in
test
inc
imul
inc
scas
stos
xor
push
sbb
cmpsl
in
pop
nop
cwtl
xchg
fistl
xlat
inc
mov
adc
test
cwtl
fiadds
shl
cld
fisubrl
gs
arpl
rolb
xchg
mov
fstpt
mov
pop
cmpb
or
call
pop
or
sbb
movsl
inc
in
out
popa
jecxz
add
enter
aaa
push
pop
call
inc
cld
hlt
outsb
addr16
inc
les
ret
jge
xlat
loope
mov
xor
les
mov
adc
or
pop
pushf
push
adc
ss
jge
xor
nop
sbb
push
cs
add
and
out
dec
mov
mov
jb
decb
inc
add
inc
mov
mov
mov
pop
xchg
cmp
out
enter
push
aaa
adc
inc
push
adc
add
vpaddw
add
insl
test
lods
movsb
lock
xchg
mov
jb
push
test
dec
outsl
clc
rol
pop
mov
outsb
ja
sbb
int
and
fwait
push
frstor
lahf
dec
xor
add
and
mov
insl
stos
decl
fs
and
orl
jae
test
ficompl
cmp
mov
mov
cmp
dec
sbb
dec
adc
adc
das
call
jo
push
or
xchg
mov
jge
cmpsl
lahf
dec
gs
stos
adc
scas
push
inc
inc
mov
add
jge
mov
mov
xchg
pop
mov
lret
lea
or
pop
pushf
mov
sub
xchg
xchg
rcr
aam
repnz
fistl
sub
hlt
pop
je
pop
jne
dec
sub
stos
mov
and
andl
sbb
inc
fiadds
out
cltd
pop
xchg
push
sub
adc
sub
pop
ss
test
scas
repz
mov
or
sbb
xchg
adc
or
arpl
outsb
sbb
sub
and
pushf
leave
fisubs
sub
sub
cltd
add
xor
lods
xor
mov
and
ja
cwtl
mov
clc
loope
pop
mov
sub
sarb
jnp
ja
xchg
cmp
jecxz
pushf
push
mov
mov
sub
pop
fsts
je
fstpl
fistpll
mov
push
mov
pop
movsl
sti
les
jns
push
push
push
iret
stos
sub
inc
int3
or
push
or
test
nop
pop
loope
inc
sbb
adcl
xor
stos
mov
lds
xchg
cmp
inc
fbld
mov
jnp
push
sub
mov
fnstsw
sarb
fistpll
and
mov
inc
nop
jno
mov
imul
test
and
lahf
gs
pop
movsl
push
int
inc
push
mov
adc
lret
aaa
pop
xchg
push
push
cltd
repnz
imul
ret
call
mov
mov
gs
and
fstps
loope
mov
sub
dec
mov
pop
add
leave
cltd
adc
jp
nop
movsb
mov
pop
out
jmp
xor
data16
mov
inc
mov
jbe
adc
lds
pop
movsl
xchg
inc
sub
scas
clc
sub
cld
dec
lret
lahf
adcb
test
mov
mov
movsb
push
push
enter
loop
jno
push
mov
pushl
jle
cmc
lret
sub
xor
mov
or
movsb
dec
enter
mov
loop
sub
test
adc
xchg
rolb
xchg
bound
inc
bnd
pop
pop
cmp
jle
int3
jb
loope
cli
ret
sbb
add
imul
popf
mov
cmp
or
test
icebp
inc
notl
cmpb
fimull
loop
dec
xor
test
mov
pop
dec
std
out
and
dec
ret
pop
cltd
inc
push
cmp
aad
bound
sbb
stos
pop
mov
xorb
pusha
inc
mov
pop
and
or
and
hlt
xor
andl
fs
test
pushf
jne
adc
shlb
int3
out
xchg
mov
ljmp
filds
jnp
das
mov
xchg
clc
pusha
jae
add
or
sbb
stos
sbb
mov
push
sub
es
out
inc
les
repz
orb
jb
pop
fwait
mov
adcl
imul
inc
dec
loop
and
mov
lret
mov
testb
mov
mov
xor
inc
jl
dec
jae
in
aas
jae
sti
lods
pop
mov
pop
popf
pushf
scas
icebp
arpl
pop
test
std
lds
sarl
pop
jns
push
mov
dec
inc
jnp
popa
pop
inc
inc
out
enter
add
out
push
xchg
add
mov
stos
mov
dec
inc
sbb
test
subb
leave
call
xor
inc
jo
cmp
enter
test
je
cli
les
test
sbb
pushf
pusha
popa
push
dec
xchg
sub
jge
xacquire
test
sbb
sub
scas
aaa
mov
sub
sub
xchg
bound
leave
and
xorb
stos
lahf
dec
xchg
test
jl
popl
adc
outsb
loope
cmp
cmc
dec
in
push
dec
mov
push
cli
sub
repnz
int
lock
adc
xchg
aas
xorl
xchg
out
sbb
jle
push
in
mov
jae
adc
and
mov
stc
test
push
cmp
mov
js
sub
rcll
call
dec
add
pop
outsb
adc
js
stos
push
or
jnp
jp
iret
loop
inc
or
pop
xchg
cmp
lock
icebp
fstps
inc
mov
sbb
ljmp
mov
mov
imul
cmp
xor
fstp
mov
cmc
cmc
sahf
mov
jns
add
mov
int
je,pt
addr16
mov
mov
mov
dec
and
movsb
sbb
xor
jg
mov
insb
sub
out
mov
ffree
lods
mov
push
hlt
cmp
adc
push
movsb
lcall
imul
mov
sbb
cmpsb
fcompl
mov
mov
repnz
je
lock
adc
mov
jb
inc
or
lea
sbb
out
adc
pop
sub
sub
fistpl
test
mov
jp
xchg
cmp
insb
nop
scas
add
and
xchg
gs
push
test
mov
mov
faddp
stc
fimuls
int3
inc
enter
in
xor
cmp
mov
pop
aaa
add
in
lcall
scas
jg
js
outsl
or
popl
sbb
cmp
test
pop
or
jmp
mov
jp
int3
rclb
push
daa
add
xor
mov
or
and
aam
dec
inc
test
dec
out
xchg
xchg
cltd
jns
mov
or
bound
or
lock
aas
lods
jnp
push
imul
outsb
stos
arpl
fsubrl
ret
pushf
lahf
or
jae
rorl
decb
aad
cmpsb
and
mov
dec
dec
inc
push
push
dec
iret
jecxz
push
lea
clc
addr16
out
stc
and
mov
sbb
popl
mov
fdivl
mov
stc
mov
shrb
bound
xor
mov
jo
ret
sub
or
ljmp
call
loop
push
imul
scas
mov
cwtl
fistpll
mov
and
dec
mov
push
pushf
aas
cmp
sub
jmp
fcmovbe
mov
mov
addr16
and
in
pop
fldenv
and
mov
nop
sbb
cmp
mov
daa
scas
pop
inc
cmp
sbb
dec
mov
lahf
and
cmpsl
arpl
mov
or
xchg
repz
pushf
dec
arpl
repnz
ja
mov
and
stos
push
je
mov
insl
ret
popa
mov
jae
lcall
pop
pusha
dec
ret
push
and
lods
cli
and
cmp
pop
scas
mov
arpl
call
je
inc
pop
sub
test
out
or
jb
sub
dec
adc
inc
fisubs
lahf
xor
fistl
mov
stc
cmp
cmp
xchg
cli
xor
ljmp
xchg
aam
dec
mov
loop
jecxz
in
pop
clc
sub
mov
mov
or
xor
fdivs
cltd
mov
mov
iret
xchg
adc
sub
mov
fisubrs
or
lcall
test
aaa
dec
repz
add
ja
sbb
jo
xchg
pushf
and
mov
test
xor
popa
and
lock
add
cmpsb
pusha
push
push
inc
push
mov
or
leave
out
lret
test
dec
pusha
mov
stos
and
test
jnp
inc
adc
xor
jmp
ss
inc
sub
pop
imul
mov
ljmp
dec
into
dec
sub
or
in
jp
cmp
xor
rorb
inc
es
push
cli
test
push
add
xchg
dec
js
out
adc
cli
or
mov
scas
hlt
imull
mov
xchg
js
fwait
sbb
insl
fsubr
cmp
pop
push
add
je
jno
pushf
cmp
jb
or
popf
xchg
pop
jg
xchg
call
pop
push
xchg
pop
inc
pop
lea
lret
scas
cmp
cmp
dec
stos
int3
mov
sbb
add
push
addr16
push
shlb
add
test
sbb
hlt
popf
repz
out
sbb
sub
or
xor
cmc
cs
push
xchg
mov
mov
inc
adc
jmp
add
pop
inc
les
gs
in
pop
lea
icebp
cltd
mov
js
mov
nop
mov
sub
cmpl
mov
pop
fsub
clc
mov
dec
xor
xchg
out
mov
out
jecxz
xlat
cwtl
ffree
sahf
je
and
mov
or
adc
mov
fsin
sub
dec
cmc
loopne
gs
cmpsb
pop
adc
mov
fsub
in
jecxz
push
lcall
add
push
add
sub
sbb
stos
mov
pusha
mov
int
jecxz
jne
mov
mov
fsubs
iret
cmp
hlt
lret
mov
mov
xchg
and
push
int
rol
mov
lock
dec
addr16
out
xchg
cltd
inc
lods
mov
and
adc
push
repnz
rclb
mov
and
testb
daa
fyl2x
dec
mov
cmp
sbb
and
mov
popa
push
test
xchg
add
out
push
fs
test
into
mov
fisubrl
and
in
push
fistps
shl
cmp
cltd
es
mov
lcall
pop
mov
or
mov
lods
lods
mov
cmp
lock
cmp
inc
repz
call
lret
bound
adc
daa
pop
fsts
and
sti
mov
or
adc
in
xor
adc
pop
outsl
popf
pop
inc
jo
stc
cmp
adc
in
mov
xchg
push
and
ret
xlat
sti
sarl
stos
lea
popa
popf
push
add
mov
dec
jg
add
xchg
lahf
imul
cmp
outsb
inc
jge
movsl
xchg
mov
lods
test
or
mov
gs
sbb
cmp
pop
cld
push
ss
jp
stos
orl
ds
les
int
cwtl
mov
adc
sbb
into
pushw
sarb
push
and
je
ss
sbb
sbb
jmp
pop
and
rcrb
test
lea
icebp
out
jl
cmp
test
call
sbb
shll
in
punpckhdq
pushf
dec
add
push
cmpsl
or
adc
in
pop
sub
mov
mov
rcrl
out
xor
jg
push
push
jns
aas
ja
shrb
arpl
and
popf
jle
repz
mov
lea
xchg
rcll
gs
addl
and
lahf
jge
insb
ja
adc
stos
stos
call
inc
fs
pushf
fldcw
push
test
bound
in
mov
xorb
fmul
add
call
adc
mov
or
cltd
insl
xchg
cmpsl
int3
push
call
aam
sti
test
filds
mov
xor
mov
fistpll
dec
mov
add
push
outsb
movsb
push
lds
enter
and
cld
cs
inc
mov
or
push
inc
clc
insb
or
mull
inc
dec
dec
dec
es
pop
call
aaa
frndint
push
mov
or
xlat
xchg
mov
insb
popa
fwait
sbb
inc
xor
dec
sti
icebp
jmp
adc
or
das
add
test
je
mov
out
adc
xchg
repnz
iret
dec
in
cltd
out
mov
pop
jmp
push
xchg
in
xor
in
add
in
cmp
pop
or
sbb
pop
inc
jae,pn
ss
inc
test
xchg
xchg
xor
inc
pop
sti
aas
mov
fnstenv
mov
or
sub
xchg
js
xchg
push
jmp
sub
xor
mov
mov
jbe
addb
jge
inc
enter
sahf
sbb
mov
dec
mov
sbb
sbb
stos
sti
push
outsb
xchg
mov
xor
adc
sti
lea
sti
fdivrs
mov
imul
pop
into
ja
leave
dec
popa
rcl
jb,pn
mov
out
inc
cld
dec
mov
enter
jno
pop
das
loope
stos
jb
sbb
aad
push
mov
xchg
cltd
push
xchg
cmp
mov
inc
out
mov
jmp
and
mov
jnp
cld
mov
dec
mov
xor
dec
ret
xor
idivl
arpl
mov
loopne
add
jle
mov
aaa
fcoml
je
cmpsb
addr16
xor
and
mov
test
pop
loope
and
adc
in
pushf
out
lret
xchg
iret
and
pop
mov
nop
pop
movsb
sbb
pop
push
lahf
or
pop
icebp
dec
test
testb
ret
lret
int3
mov
mov
leave
and
mov
inc
out
stos
out
pop
test
repz
lret
into
jg
cli
pop
add
gs
sti
jge
xchg
rclb
mov
pop
xor
lds
cs
fs
xchg
stos
inc
fmuls
stc
js
cmp
sbb
ja
mov
popa
out
mov
or
test
stos
dec
mov
ja
idiv
dec
and
bound
sub
movb
inc
stc
sbb
cld
fdivrl
or
fcoml
pop
test
popa
adc
xor
add
sbb
insb
push
sbb
add
lds
cwtl
and
fmull
pop
mov
xor
lret
jae
xor
lds
jg
in
mov
add
and
fcomip
lock
loop
mov
mov
fimuls
int3
jge
xor
xchg
movsl
sub
cwtl
std
aaa
ja
imull
jl
fidivs
js
movsl
mov
or
pushfw
es
add
ret
dec
shlb
loope
insb
movsb
jae
jge
jb
inc
adc
cmp
cltd
in
pop
adc
fnstcw
inc
add
int
aad
and
mov
jl
push
pop
adc
scas
push
inc
fiaddl
jp
rorb
add
and
shrb
dec
data16
cmp
inc
xor
loope,pt
scas
repnz
das
fwait
repz
lea
sub
pop
stos
or
and
imul
sbb
or
loopne
cmc
jg
cwtl
leave
adc
enter
roll
daa
xchg
testb
out
fwait
gs
and
movsl
cmp
xchg
fildll
pushf
push
xor
push
popf
stos
mov
xor
stos
sbb
sub
cmc
fs
fisubs
sbb
in
jmp
popa
scas
adc
imul
movsl
ljmp
aad
jg
sbb
mov
imul
jnp
xor
arpl
and
fisttps
pop
jns
shll
fisttpll
xchg
and
sarb
jp
cld
scas
sbb
and
jns
inc
xchg
mov
hlt
lds
pop
movsl
test
repnz
or
add
or
fcoms
les
negb
push
pop
ret
inc
add
xor
or
mov
inc
and
dec
nop
leave
fsubl
fwait
jecxz
imul
stos
ficompl
pop
ret
aaa
stc
addl
mov
adc
cld
outsb
cmpsl
mov
jnp
xchg
xor
cwtl
enter
bound
cld
fdivl
lock
jne
and
xchg
or
faddl
sbb
xor
inc
sbb
mov
push
mov
out
call
inc
cmpsl
mov
adc
xchg
pusha
and
jmp
scas
test
cmpsb
ss
les
mov
jb
imul
pop
inc
adc
aad
rcrl
mov
orl
pavgw
push
in
mov
dec
or
and
adc
xchg
pop
sbb
jno
addr16
and
add
mov
sbb
das
lock
insl
addr16
jnp
cltd
xor
adc
jns
xor
or
rcrb
jmp
jp
ja
outsb
out
jns
jne
pop
dec
push
popa
adc
push
les
lahf
inc
dec
gs
pop
xchg
jle
nop
lds
sub
sbb
insb
pop
call
fneni(8087
jg
bound
cmpsb
jle
pop
mov
xor
dec
dec
fs
mov
xchg
jns
negb
push
push
mov
mov
fldenv
jns
and
jle
or
mov
xchg
je
mulb
cmp
fadds
lock
pop
insb
xchg
out
shll
int
mov
cmpl
mov
pop
cmp
xlat
push
dec
dec
loope
pushf
psubsw
jae
sbb
cwtl
decb
dec
and
mov
xor
fwait
int
xor
in
pop
mov
sub
sub
pop
xchg
loope
add
cmp
sti
xchg
push
dec
roll
popa
inc
dec
daa
adc
fidivs
and
push
lods
adc
outsb
mov
mov
sub
xlat
mov
push
inc
xchg
dec
push
and
insb
adc
int3
rcll
push
dec
aad
xchg
and
cmpsl
pop
sbb
fcmovb
xchg
outsl
out
repz
stc
lret
push
xlat
in
xchg
mov
pop
mov
mov
sub
xor
dec
fldcw
mov
std
test
jns
adc
bound
inc
lret
icebp
inc
cld
jne
adc
and
sti
adc
ja
push
dec
dec
push
hlt
cltd
fsubrl
fsubrl
cli
add
imulb
mov
int3
push
cltd
lret
mov
cs
addb
aad
jae
inc
pop
pusha
push
mov
push
push
push
outsl
imul
int
mov
repz
cmp
in
sbb
movsl
xchg
iret
or
sbb
push
sbb
dec
call
fstl
cmpsl
loope
dec
int
cmc
lods
xchg
or
mov
dec
push
mov
lods
test
sub
ss
icebp
iret
lock
outsl
push
mov
sub
xchg
cwtl
xchg
cmp
jl
mov
or
fsts
mov
repnz
les
jbe
rclb
mov
fisubrs
jg
jne
testl
das
mulb
ret
movsl
or
test
rolb
rcll
fldcw
out
jp
inc
mov
push
or
add
and
adc
movsl
and
fsubrl
push
aaa
push
pop
inc
jl
cld
push
mov
rorl
mov
xchg
mov
sub
lock
fldt
dec
sub
pop
das
cwtl
loope
addr16
mov
negw
add
push
fucom
push
fadds
sub
jl
pop
fcmovb
sub
mov
jmp
fnstenv
push
and
test
cmp
inc
pop
add
mov
cmp
jp
push
and
pushf
fdivrs
in
xchg
xchg
das
jg
pop
movntq
testl
fldt
inc
xchg
xor
loopne
add
cmp
pop
scas
dec
adc
mov
mov
sbb
sbb
inc
adc
pop
dec
lahf
lods
or
clc
stc
std
fildl
jbe
cmc
xor
lahf
jae
enter
fwait
cmp
xchg
sbb
ficoms
xchg
rolb
sbb
outsb
lods
jmp
push
mov
outsb
std
cmpl
xor
cmp
mov
sbb
hlt
or
push
ss
adc
loopne
or
pop
loop
mov
addr16
stos
adc
out
pop
scas
cli
in
pop
inc
je
or
daa
testl
pop
lods
ficoms
xor
push
jl
cwtl
lea
lahf
or
mov
cmp
adc
mov
pop
imul
mov
test
fnstenv
mov
or
cmc
stos
push
outsl
mov
imul
arpl
push
mov
stc
pop
adc
lret
pusha
pop
mov
adc
out
push
add
mov
int3
mov
or
dec
jmp
and
and
add
mov
fsubs
sub
pusha
ss
int3
test
lret
mov
sub
sbb
and
lahf
lret
dec
fists
inc
enter
loopne
scas
push
outsw
in
in
scas
fisubl
jmp
or
push
mov
imul
call
shrb
mov
inc
popa
hlt
xchg
popa
xchg
mov
pop
push
andl
stc
and
repnz
in
jl
lods
jp
addr16
mov
sbb
pop
mov
cli
and
inc
xchg
div
jbe
hlt
popf
inc
sub
imul
mov
cmp
push
dec
xchg
cli
inc
jno
nop
adc
fwait
iret
mov
pusha
in
xor
stos
mov
xor
push
inc
adc
sub
cmpsb
stc
sub
pushf
push
xor
mov
push
add
lahf
push
cwtl
dec
lret
dec
mov
add
inc
movsb
shll
mov
aad
mov
mov
sbb
jne
fyl2x
xor
incl
imul
ret
xor
cltd
outsb
mov
fidivrs
divl
pop
cmp
xlat
adc
enter
lock
int
dec
and
sahf
mov
pop
and
enter
or
pop
shll
mov
scas
mov
lock
sbb
ffree
cmpsl
arpl
aam
and
pop
dec
je
mov
ret
add
adcb
xor
sahf
dec
push
aas
loope
fdiv
xor
sbb
xchg
pop
xor
push
addr16
cmc
mov
push
dec
xchg
mov
push
mov
add
std
lods
cld
ss
sbb
jae
sarl
push
sbb
cli
fwait
movsl
or
adc
add
aad
xchg
jbe
and
cmp
movsl
scas
mov
xchg
xor
cmp
ja
sub
or
and
jmp
dec
shl
xor
rorl
sub
fcomip
in
and
xchg
test
leave
dec
lcall
cmp
mov
ja
stos
cmp
loope
neg
cld
inc
jp
add
mov
aad
movsb
mov
jmp
in
movsl
test
mov
aaa
scas
jbe
push
dec
fcomp
call
cwtl
cmp
testl
jb
add
or
bound
ficompl
or
inc
call
xchg
popa
int3
or
fiadds
insb
imul
xor
inc
in
scas
jns
mov
iret
mov
int3
mov
push
pop
cmp
push
dec
nop
inc
push
inc
leave
dec
xchg
xor
test
rolb
imul
mov
or
movsl
scas
pop
push
mov
outsl
lret
xchg
xchg
xor
jg
adcb
outsb
add
in
iret
inc
mov
int
clc
xchg
sub
add
imul
dec
cmp
fwait
inc
out
movsb
sub
xchg
aaa
pop
or
sub
xor
push
xchg
xor
sbb
sub
mov
sti
andb
mov
push
lcall
out
test
sbb
jp
lock
lods
je
addr16
fldl
popa
fimuls
loopne
and
jne
xlat
push
jp
cwtl
push
out
sbb
sub
loop
or
or
mov
leave
push
flds
sub
mov
xchg
aad
fsubl
dec
jo
cmp
rcrb
xor
adc
jecxz
cmp
data16
je
or
shl
sbb
push
jbe
cltd
jae
ss
outsb
or
pop
iret
pop
add
cltd
jae
sbb
repz
jne
push
pop
sub
outsb
cmpsb
jecxz
fidivs
mov
xor
mov
or
sbb
xor
je
and
add
insb
and
mov
bound
pushf
sbb
add
inc
xorb
pop
push
dec
pop
jp
out
sti
xchg
sub
push
lock
aam
roll
xlat
pusha
cmp
sub
inc
mov
push
mov
or
mov
mov
aam
inc
or
and
mov
stos
push
ljmp
enter
test
shll
mov
mov
xchg
sbb
pop
sbb
sbb
ljmp
mov
loop
lods
repnz
mov
pushf
pushf
int
mov
push
push
and
mov
loop
int
lds
xor
cmpsl
fldt
ss
xor
addr16
lds
dec
and
ss
or
jae
mov
pop
sahf
mov
lret
cld
aam
dec
and
pmulhw
cmp
je
int3
subb
fidivrl
jnp
jg
jge
pop
mov
dec
dec
push
sarb
pop
jg
int
dec
inc
lock
cmp
xor
jge
jmp
cmp
mov
testb
es
inc
inc
rcll
push
adc
jno
das
shl
jle
dec
xchg
and
aad
mov
and
push
aaa
ds
daa
add
mov
pushl
mov
mov
hlt
cmpsb
shlb
lea
cmpl
sbb
cmp
dec
jo
jecxz
xor
in
pop
divb
movsb
ror
sbb
mov
stc
stc
icebp
lock
push
imul
xchg
mov
imul
in
xchg
icebp
lock
ficoml
add
mov
cwtl
js
xor
in
pop
inc
stc
lods
out
cmp
jno
xor
out
ja
jge
or
cltd
pop
push
push
idivb
xchg
idivb
mov
call
cltd
cmpsl
cmp
out
cmpb
fldl2t
mov
mov
icebp
pop
xor
pop
jecxz
mov
mov
icebp
lea
ja
rsqrtps
mov
xchg
xchg
mov
add
lods
jmp
sahf
in
lea
les
adc
fcomps
cltd
daa
jbe
pop
lds
ret
lds
daa
xchg
gs
loopne
jg
add
adc
jle
insl
cmpsb
cmp
or
icebp
flds
fistpl
imul
rorb
enter
push
mov
aaa
das
je
test
sbb
addr16
mov
xchg
mov
clc
lock
movsb
loope
ret
sar
sbb
inc
sbb
aad
jno
pop
dec
montmul
cmpsb
shl
cmp
mov
mov
jl
dec
fistl
aam
push
mov
mov
dec
shrl
xor
pop
fisubs
pop
xorl
mov
dec
das
mov
mov
ss
iret
aas
orl
arpl
adc
cmp
cltd
lret
lret
ffree
addr16
and
bound
fmull
xchg
or
cmp
insb
fnstsw
sbb
aad
ficoms
orps
xchg
pop
imul
add
and
sub
popa
lcall
pop
insb
js
xchg
inc
xchg
sarl
sbb
xchg
test
rcl
fists
rcrb
into
add
test
xor
ds
xor
push
aas
popf
jne
dec
or
push
pop
jns
negl
lret
in
scas
xlat
xchg
pop
jl
dec
add
jae
fs
adc
nop
out
cli
test
sub
xchg
xor
xor
pop
popl
sub
fdiv
pop
xor
stos
push
sbb
jns
ds
mov
arpl
xchg
add
push
sbb
lcall
aad
cmp
xor
dec
ja
sub
inc
jmp
outsl
rcl
adc
lock
mov
and
hlt
ljmp
lods
es
add
or
in
cmp
mov
aad
cmp
insl
jno
xor
adc
js
popl
aad
mov
testl
hlt
inc
adc
dec
xor
mov
ret
adc
inc
cmpsb
lahf
out
xchg
iret
popa
xchg
mov
push
and
test
in
jecxz
test
mov
sahf
pop
jge
cmp
lahf
mov
mov
outsb
clc
imul
hlt
or
adc
shll
xchg
mov
pop
das
testl
dec
popa
dec
inc
push
dec
out
idivb
pop
push
xchg
push
sbb
sub
rorb
stos
xchg
inc
xor
push
pop
pop
inc
adc
icebp
enter
out
loopne
xchg
lret
push
outsl
int3
xor
push
mov
inc
jp
imul
sub
fidivl
aam
cmpsb
sub
push
mov
in
cmp
lods
fldt
imul
jg
add
mov
mov
sub
ret
jecxz
pusha
push
inc
insl
ret
mov
aaa
clc
out
jb
jge
lcall
cltd
mov
jl
jnp
sub
jmp
ret
not
imul
add
int3
xchg
mov
mov
push
push
faddl
hlt
popa
out
inc
fwait
sbb
scas
and
test
pop
push
adc
dec
mov
in
mov
jg
ror
push
imul
mov
test
pop
lea
shll
cmp
inc
or
jmp
mov
cmp
pop
cwtl
dec
pusha
fs
outsl
push
sub
mov
xchg
les
ror
xchg
sbb
lock
sub
and
and
hlt
out
or
jb
push
mov
in
cmpsl
cmp
lock
lock
inc
std
mov
shrd
stos
dec
mov
xor
mov
stos
pop
dec
jbe
add
xchg
loopne
ds
mov
call
out
xchg
sub
repz
call
and
push
cwtl
test
or
pushf
and
xlat
pop
jae
push
and
sub
hlt
xor
cmp
in
xor
sbb
mov
cmpsl
pop
lock
mov
jb
and
jb
add
shl
push
aad
sahf
inc
lea
cmp
push
or
sarb
mov
mov
mov
aad
outsb
sub
andl
sti
call
in
pop
call
das
mov
and
mov
dec
pop
shlb
stc
nop
scas
sub
inc
cltd
rol
dec
loop
sub
mov
mov
jnp
imul
inc
divb
jae
bound
imul
dec
mov
aas
and
pop
cmp
gs
push
pop
jae
xchg
xchg
scas
add
mov
arpl
mov
adc
push
pop
insb
repnz
pop
or
nop
lcall
sub
mov
pop
sub
mov
or
mov
or
and
adc
hlt
push
and
xor
ret
jl
aaa
mov
jle
fnstcw
pushl
das
mov
out
into
cmp
inc
or
daa
divb
test
nop
jle
pusha
popf
inc
fidivs
test
icebp
movsb
jecxz
pop
and
test
nop
lea
adc
jbe
insl
test
inc
mov
mov
sub
test
or
bound
jmp
mov
testl
loopne
into
lret
fs
lock
movsl
add
hlt
mov
dec
inc
je
outsb
repnz
test
push
sbb
divb
push
mov
sbb
dec
aad
lock
das
sub
jnp
push
sub
stos
and
inc
sub
mov
jg
dec
pop
jmp
dec
mov
aaa
stos
adc
cltd
and
fsubs
lcall
int
mov
aas
in
xlat
imul
cmpb
out
dec
call
pushl
das
adc
fimuls
mov
test
imul
mov
loop
daa
imul
cmp
pop
ret
jno
mov
sub
and
dec
dec
ffreep
inc
orl
dec
sub
xchg
push
imul
xchg
ljmp
dec
mov
dec
jae
jp
mov
sti
mov
xchg
sbb
cmp
jb
lock
xchg
mov
adc
call
dec
in
sar
cmpsl
sub
imul
leave
xlat
orl
sbb
and
mov
mov
inc
fidivs
lret
cmpsb
rorl
pop
decl
iret
arpl
in
xchg
clc
sub
mov
pushf
orb
adc
xor
orb
inc
or
outsb
adc
mov
sub
fiaddl
insl
decl
out
pop
outsb
jne
inc
inc
dec
rorl
pop
pushf
ss
or
arpl
xchg
fs
aas
sub
xchg
out
cmp
incl
or
sahf
push
loope
jge
scas
ljmp
andb
xchg
mov
aam
aas
shll
mov
fistpl
sub
push
fwait
jg
push
test
shll
aam
mov
dec
add
out
ljmp
not
sti
fsubl
movhps
jmp
icebp
int
push
icebp
ljmp
mov
add
bound
mov
xor
sbb
in
sub
shll
xchg
mov
dec
out
pop
jne
xchg
adc
jp
push
js
stos
mov
mov
testb
pop
mov
push
inc
mov
jmp
rcr
cmp
mov
stos
xor
cmp
test
mov
inc
jb
mov
inc
loope,pt
arpl
outsl
test
daa
cmp
in
sub
mov
sub
xchg
aam
sbb
pusha
stc
je
sub
jno
mov
rolb
jo
and
cmpb
jo
adc
xor
cs
add
push
scas
and
add
lahf
imul
jle
jne
push
mov
incb
xor
mov
mov
test
mov
xchg
int
cmpsb
popf
roll
xchg
repz
std
and
and
rclb
popa
mov
xor
lods
outsl
repz
adc
adc
push
js
loop
call
push
mov
and
ss
or
inc
rcrb
daa
movsb
popa
mov
test
push
sbb
lds
sub
stc
int
clc
xchg
sarb
ja
push
cs
scas
leave
mov
mov
divb
imul
pop
mov
repnz
or
test
sahf
sbb
aaa
pop
mov
out
pop
push
pushf
sbb
xlat
inc
mov
jge
lock
pop
addb
imul
jnp
in
inc
xchg
sub
daa
xchg
stc
pop
mull
xchg
lods
push
mov
in
addb
pop
ja
pushl
cmpsl
xchg
xchg
jecxz
push
lods
jae
mov
mov
mov
jns
scas
xor
sarl
mov
or
into
jno
scas
cmp
adc
fsqrt
push
icebp
xor
dec
ja
or
repz
or
mov
push
push
adc
push
cmc
or
in
in
xor
cmp
push
adc
sub
and
dec
les
cs
dec
rcrl
out
rcll
lcall
adc
sbb
scas
aaa
sbb
ds
sbb
stc
test
lds
arpl
jle
ret
jo
inc
test
aam
or
pop
or
fcmovbe
xor
xchg
and
imul
jle
push
push
mov
xchg
push
inc
int
push
sarb
loopne
xor
int
pop
bound
sbb
jge
cmp
inc
pushl
out
and
mov
shll
cmp
cltd
cmpsb
adcb
mov
popf
pop
test
xchg
scas
jo
jae
sub
push
lcall
xchg
je
jle
and
cmova
movsb
faddp
loope
fmull
mov
xchg
test
cld
push
fcmove
adc
jns
mov
imulb
add
dec
xor
mov
int3
push
pop
xchg
cs
xchg
adc
aas
loopne
pop
and
cltd
pop
mov
jns
mov
jnp
mov
orb
mov
mov
pop
aad
addr16
adcb
out
cli
outsl
out
popfw
loopne
aaa
andl
imul
inc
inc
mov
xor
sub
dec
ja
jl
ljmp
add
dec
and
adc
dec
pusha
push
bound
std
adc
ljmp
push
hlt
out
pop
into
insb
call
push
push
ja
push
sub
test
adc
pop
xchg
cmp
ljmp
jb
clc
pop
add
dec
ss
pusha
mov
push
sbb
jbe
cltd
or
out
or
fidivl
das
jmp
mov
add
push
jge
inc
movsb
push
loope
cmp
popl
ss
je
xor
ret
repz
xor
add
cmpl
dec
inc
js
xor
sub
push
cmp
or
into
jbe
add
movb
ror
test
nop
movsl
int
fcmove
and
push
psubb
out
adcb
sbb
int
and
mov
jl
or
sub
push
mov
cmpsl
shr
push
into
pop
xchg
dec
inc
or
sbb
pop
pop
adc
sbb
fwait
into
in
icebp
mov
shll
xchg
mov
aad
jnp
mov
sbb
cmpsb
mov
aad
adc
dec
sarb
fldt
mov
jo
dec
test
dec
dec
call
mov
loope
addb
sbb
cmpsl
fcompl
cmpsb
xor
ret
inc
push
adc
adc
imul
and
jmp
xor
pushf
jno
test
xchg
jb
out
mov
push
add
add
ret
mov
and
mov
in
dec
add
mov
cmp
mov
xchg
cmp
lock
add
shrl
rcl
negl
mov
or
lock
popl
or
jnp
imul
cmpsl
pop
dec
adc
sbb
or
mov
cmpsl
mov
mov
xor
jg
out
add
inc
out
push
cltd
inc
popa
jbe
mov
mov
sahf
test
cmp
push
out
fwait
sbb
imul
lret
lcallw
xchg
mov
movsb
push
mov
mov
adc
mov
imul
aaa
sub
sbb
jo
push
mov
and
sbb
cmp
pusha
lods
test
jns
and
mov
pop
imul
lahf
das
xor
mov
lret
sbb
js
shl
pop
int3
test
in
add
aad
aaa
xchg
push
xor
pop
test
mov
cli
and
xchg
loop
ds
jo
jmp
ljmp
jne
fwait
loop
push
lods
insl
cmpsl
xchg
push
mov
add
enter
add
inc
arpl
stos
and
stos
sti
and
pop
int
sbb
xlat
mov
clc
xchg
mov
stc
popa
cmpsb
fs
mov
sub
jb
ror
sub
cmp
hlt
or
cwtl
dec
into
in
or
adc
mov
push
inc
mov
jbe
inc
sbb
and
cmpsl
sbb
lods
xor
es
stos
stos
into
and
imul
mov
xchg
push
sbb
adc
out
aas
call
jmp
int
ret
popf
add
mov
out
adc
nop
adc
hlt
cli
pop
mov
ljmp
rcl
stos
jno
lcall
outsb
jmp
shrl
jg
and
data16
pop
push
js
push
icebp
or
scas
sub
insb
loop
std
add
or
fldt
cmp
jb
lds
out
int
mov
ja
adc
and
adc
cs
mov
out
jecxz
cs
aas
test
push
cmpsb
push
int3
xchg
orl
imull
stos
push
adc
fbstp
shlb
push
pop
dec
lcall
mov
jnp
inc
lock
dec
pop
divb
fistpll
adc
adc
out
test
dec
jecxz
into
test
jmp
cwtl
sbb
or
or
jmp
std
adc
add
daa
mov
xlat
inc
xchg
jmp
xchg
mov
jbe
xor
and
ret
mov
cmc
push
setnp
pop
int
frstor
daa
mov
icebp
push
mov
sti
mov
or
pushl
pop
mov
arpl
fsubl
xor
add
je
mov
negl
hlt
cmp
jecxz
xor
pop
mov
push
fcmovb
addb
scas
shlb
add
aam
inc
inc
xchg
mov
testl
int
into
fs
adc
adc
repnz
mov
shrb
loopne
sub
inc
loop
repz
sar
pop
iret
jl
stos
lods
ds
sbbl
sbb
fsubr
adc
jb
push
out
sbb
ja
je
pop
or
imul
sbb
daa
ljmp
sub
add
xchg
jae
mov
hlt
ret
inc
adc
cmp
popa
pop
ss
and
push
mov
xor
push
sub
insb
dec
mov
imul
sbb
shr
rorb
push
or
sub
xchg
ds
sub
cmp
orps
pop
fsts
aad
dec
in
insb
cmpsb
mov
int3
in
mov
mov
dec
out
repnz
enter
add
pop
loop
jne
jp
ljmp
mov
inc
mov
push
dec
jecxz
xchg
lods
xor
cli
jb
std
xchg
xchg
sahf
push
decb
xor
push
mov
adc
sbb
pop
loop
loop
sbb
mov
hlt
sbb
sub
scas
adc
aaa
inc
push
inc
mov
pop
enter
inc
rclb
push
in
mov
shl
fstl
out
or
stc
mov
push
jge
flds
out
sub
push
pop
bound
test
test
das
ret
std
sahf
jmp
inc
insl
fwait
mov
sbb
sbb
rorb
pop
shlb
out
or
add
into
mov
jno
aad
add
adc
cmp
outsb
xchg
jb
ss
in
sbb
mov
add
fwait
push
loopne
icebp
pop
idivl
cmp
bound
sub
push
xor
fwait
sbb
mov
insb
mov
mov
shl
sbb
sbb
loope
cs
dec
mov
ja
push
push
mov
inc
sbb
jmp
in
ret
sbb
fstl
xor
mov
cmc
mov
inc
nop
pop
sbb
pop
leave
cmc
xchg
push
pop
ret
xchg
inc
xorb
hlt
push
pop
jne
sub
jmp
jno
out
cmp
add
mov
jae
sub
call
adc
jmp
fisubl
mov
mov
repnz
push
pop
mov
cs
mov
mov
insb
loope
ss
fcomps
jp
push
push
and
sti
cmp
push
jbe
lods
mov
and
dec
push
rcr
mov
xlat
and
and
push
pop
ret
mov
ds
lods
mov
xchg
sbb
imull
loopne
dec
fistpll
mov
jae
scas
enter
cmp
pusha
adc
arpl
jns
stc
sbb
stos
rclb
pop
jns
jmp
arpl
xlat
cmp
adc
mov
subl
push
sbb
xchg
cmp
imulb
iret
push
addr16
adc
andb
sahf
lret
out
and
inc
jmp
loop
outsb
inc
push
sub
rolb
jns
fisubs
adc
jb
dec
enter
pop
mov
fbld
imul
and
icebp
dec
cmp
outsl
leave
orl
xlat
jmp
jo
xor
std
pusha
push
cmpsl
pushf
adc
mov
ret
mov
adc
mov
fsubl
hlt
pop
lahf
cmp
cltd
lret
js
adc
add
xor
int
xchg
ds
sti
inc
push
cmp
sbb
dec
dec
xlat
jmp
lahf
cmp
clc
add
int3
and
pop
mov
lahf
push
lcall
xchg
into
jne
scas
cmp
data16
jno
lahf
int
mov
jno
aaa
incl
and
jb
popf
sub
or
mov
pop
mov
mov
inc
dec
pushf
and
dec
notb
and
scas
inc
inc
ds
mov
lahf
stc
xchg
ds
pop
je
adc
pop
in
mov
push
inc
sub
fidivrl
add
and
lock
into
hlt
or
mov
sub
add
adc
add
outsl
add
add
jp
ds
ret
addr16
dec
dec
sbb
push
sbb
movsb
lods
jae
jmp
call
xchg
fidivs
add
inc
dec
sub
test
lods
in
xchg
or
inc
xchg
mov
cli
jne
lds
sub
xor
lahf
out
data16
sbb
adc
mov
xchg
and
mov
ja
gs
cltd
ds
add
xor
mov
mov
mov
cmpb
ret
cltd
mov
jb
push
cmpsb
or
popa
xor
sarb
and
addr16
xchg
in
fs
data16
je
insb
xchg
sbb
nop
mov
leave
test
lods
lcall
xchg
shr
setge
icebp
jmp
and
jmp
push
xor
pop
or
pop
xchg
test
sub
and
jbe
and
fisttps
aas
sahf
adc
pop
insl
out
and
mov
in
jnp
pop
imul
cmpsb
jl
add
or
jb
test
enter
mov
mov
xor
in
inc
push
xor
subl
fcmovnu
dec
xor
out
leave
rcrl
sub
aas
popf
mov
fwait
push
into
stos
daa
pop
call
cmp
xor
xor
mov
mov
xor
loop
dec
sbb
call
js
neg
mov
cmp
dec
mov
js
stc
cltd
mov
int
out
pop
into
ja
adc
cld
fs
sub
xlat
and
js
out
xchg
bound
or
adc
mov
push
pop
sub
fdivrs
out
ss
iret
out
cmp
pop
adc
sub
inc
pop
jae
and
int3
inc
add
push
ret
jp
jmp
or
cmp
lods
jg
out
xor
decb
ror
sub
mov
and
and
cwtl
arpl
sub
inc
test
inc
int3
xor
fidivrs
mov
and
es
or
gs
fwait
jle
pop
stc
cmp
cmp
xchg
xchg
pop
repz
sbb
hlt
xchg
jns
jbe
push
mov
mov
cwtl
pop
add
lods
das
test
test
sub
dec
aad
scas
cwtl
sub
push
andl
jo
dec
cmp
flds
das
shrl
cltd
and
jno
in
fistps
or
insb
out
sbbb
jle
icebp
jno
or
js
loopne
dec
ja
jmp
mov
scas
cmp
das
adc
lods
jbe
lds
and
ja
mov
sub
jns
dec
lret
jnp
cmpsl
push
cmc
mov
in
pusha
cmc
push
xor
jp
adc
movsb
cmp
inc
ja
inc
stos
dec
add
mov
xor
lret
inc
mov
ljmp
dec
jmp
int3
dec
jno
push
jge
ret
sub
xor
rol
xor
call
xchg
cmp
sub
xchg
nopl
adcl
mov
scas
push
fwait
push
xchg
jmp
dec
cmp
fidivrs
dec
jbe
push
out
cmc
jg
push
jmp
repnz
mov
icebp
cs
pop
test
xchg
xchg
xor
sub
in
dec
dec
sbb
in
lcall
cld
add
sub
inc
dec
aas
sarl
mov
xor
adc
gs
cltd
mov
sbb
arpl
mov
movsl
xchg
in
call
stos
ss
xchg
mov
push
sub
sub
dec
xchg
pop
lret
enter
xor
xchg
mov
jnp
mov
dec
cmp
stc
jecxz
mov
imul
dec
aad
stos
inc
jbe
sbb
rol
lret
fstps
pop
and
cwtl
jl
insb
dec
or
dec
xor
pop
int3
fs
lret
repz
mov
test
sar
sbb
mov
nop
setae
jne
jb
fidivs
lret
xor
cmpsb
mov
xor
mov
push
fs
out
outsb
and
pop
xor
scas
loop
dec
dec
push
sbb
dec
addr16
and
sti
pop
jns
mov
push
xchg
std
pop
es
adc
cmp
enter
pop
adc
mov
cwtl
xor
ss
and
mov
mov
sub
fistpll
fadds
sahf
divb
je
sbb
xchg
mov
or
mov
loop
gs
sub
push
add
insl
add
call
pop
int
or
xchg
or
lods
cmp
fsts
mov
mov
mov
adc
imulb
fbld
ja
mov
jmp
mov
sarl
sub
in
mov
clc
aaa
cmpl
push
push
in
mov
jne
add
inc
mov
inc
push
loop
js
jns
int
idivl
cmp
mov
jle
jno
dec
pop
cs
xor
fsubrs
jp
mov
mov
sbb
sub
jae
test
lods
fdivl
in
mov
jg
cmp
icebp
cli
mov
sub
sub
insb
jle
xor
fidivs
jecxz
or
jb
mov
ja
lcall
ret
loop
stc
call
push
push
add
and
and
les
daa
iret
stos
into
or
in
or
jg
adc
outsl
int3
and
scas
pusha
rorl
shl
cld
clc
fadds
aam
pop
call
rcrb
push
mov
push
repnz
push
subl
sub
push
loope
nop
fisubrs
push
aas
cmp
in
cmp
bound
divl
ja
add
cmp
fiadds
pop
jae
fs
mov
rorb
ret
jns
cmpb
popa
xchg
and
cmp
xlat
and
mov
je
add
lcall
inc
pop
jnp
mulb
jo
lret
mov
push
fidivl
jne
out
cmpsl
sti
push
mov
scas
inc
popa
repnz
jecxz
fldcw
mov
sbb
mov
mov
das
and
idiv
bound
mov
cmc
or
xor
lea
xchg
insb
insb
out
fldenv
mov
xchg
push
jno
insl
ret
rsm
xchg
sbbb
or
mov
lahf
xchg
test
jne
inc
jne
sahf
into
ds
mov
sub
lods
in
mov
lds
insl
jl
mov
enter
repz
sti
bound
and
cmc
mov
adc
xchg
adc
test
fstp
xchg
cs
sub
les
mov
mov
sarl
dec
push
aad
ficoms
repz
mov
xchg
mov
idivb
cmp
repz
test
or
fs
cmp
outsl
jge
fadd
jno
outsl
in
icebp
repz
sbb
test
out
sub
mov
das
sbb
adc
idivl
jecxz
stc
test
push
repnz
mov
adc
jb
and
jne
fcompl
std
js
ret
pop
pop
outsb
mov
jp
lret
xor
ret
inc
inc
test
sbb
cwtl
nop
mov
addr16
push
cmp
cmpsl
sub
sub
mov
adc
lods
jl
dec
push
in
sbb
sub
jmp
adc
jae,pn
test
cmp
call
mov
addl
and
sti
inc
repnz
xchg
movsb
mov
pusha
sarb
pop
adc
mov
imul
mov
outsb
das
xor
add
adc
insl
and
push
jle
cmp
in
mov
pusha
push
pusha
test
insl
inc
frstor
mov
out
iret
sti
cmp
pop
ret
int3
sub
mov
jno
mov
cltd
fwait
and
jge
cmpsb
mov
cmc
iret
xchg
cmp
pop
pop
aam
cltd
lds
mov
pop
jecxz
pop
inc
lods
cmpsl
inc
lds
arpl
mov
xor
lods
divb
xchg
cmp
mov
add
mov
lods
mov
xor
popf
hlt
shl
fistpl
lret
test
stc
pop
mov
cmp
lret
in
push
popf
mov
cmpsl
sbb
adc
cltd
popl
fldcw
mov
inc
enter
pusha
inc
stc
cwtl
xchg
enter
hlt
mov
cld
xchg
push
imull
dec
jl
inc
arpl
repz
lods
jne
imul
dec
fldcw
push
xchg
icebp
sbb
add
xor
inc
fbstp
inc
clc
inc
lret
sarl
sahf
aaa
ficoml
sub
lock
stc
sbb
shll
mov
lret
ljmp
dec
stos
gs
out
stc
mov
mov
imulb
daa
test
mov
aas
inc
nop
or
or
add
adcb
xor
pop
stos
cli
cltd
sub
adc
fadds
jae
outsl
and
dec
test
cmpsb
and
notl
shr
push
push
outsl
into
not
outsl
xchg
push
cmp
int3
insb
ret
loopne
aaa
lcall
mov
cmp
gs
jmp
xchg
rol
xchg
cmp
stos
lret
xor
insb
not
in
loopne
insl
sti
xchg
negb
imul
xor
enter
stos
dec
lds
cmpsb
inc
inc
sub
pop
sub
daa
out
xchg
clc
xchg
imul
dec
mov
shlb
add
and
shrl
lds
dec
flds
xor
mov
fs
and
cmp
iret
movsl
sub
jge
sbb
xchg
or
out
mov
mov
test
sub
mulb
ret
into
jmp
adc
je
inc
sbb
inc
aas
sbb
pop
xchg
mov
xchg
inc
inc
loopne
push
lock
je
bound
call
std
mov
dec
cmovae
notb
cmpl
push
adc
movsb
ffree
mov
sub
sub
jecxz
add
scas
icebp
mov
xchg
movsb
repz
dec
jp
addr16
movsl
pusha
fsts
in
pop
sbb
js
cmpb
sub
jecxz
popa
push
ficoms
cltd
dec
push
sbb
mov
in
sub
pop
in
pop
leave
cs
sub
cld
aad
mov
lcall
inc
adc
xor
nop
pop
push
xchg
sbb
adc
sbb
iret
outsl
loop
rorl
insl
inc
lcall
in
in
lods
lret
jns
adc
cltd
popa
mov
mov
mov
jbe
cmpsb
into
outsb
sti
xchg
and
jmp
leave
push
mov
movsbl
cmp
or
add
lcall
mov
push
jle
push
or
mov
jl
rorl
cmp
inc
dec
push
xrelease
in
mov
sub
jne
sbb
xor
cmp
jae
arpl
jg
icebp
aam
sub
dec
daa
repnz
out
outsl
jle
pusha
pushf
ds
jg
pop
dec
push
iret
mov
cmpsb
aad
stos
cmpsl
mov
mov
mov
div
test
call
xor
mov
imul
cmp
fstpt
pushf
jno
mov
test
jp
movsb
movsl
pop
mov
mulb
stc
lcall
xor
ret
repnz
syscall
lods
out
stos
fiadds
sub
mov
and
sub
bound
mov
mov
push
xlat
icebp
xchg
push
sbb
inc
add
dec
push
push
xor
loope
subl
mov
scas
loop
imul
xchg
cmpsl
pop
aam
mov
cmp
inc
insb
mov
mov
popf
pop
dec
and
xchg
pop
repz
in
jae
mov
xchg
adc
in
sub
mov
out
mov
std
xchg
push
sbbl
xor
shlb
inc
cmp
cmc
mov
repnz
pop
or
dec
sbb
int3
pop
cli
push
stos
lods
mov
jl
inc
rclb
push
and
ret
pop
xchg
lahf
inc
mov
mov
push
push
push
rcrb
stos
pushf
sbb
daa
inc
cmp
aad
aas
pop
mov
aaa
and
imulw
inc
lods
inc
hlt
xlat
push
lahf
mov
es
mov
lods
test
fistpll
insl
aaa
insl
lock
in
mov
sbb
loopne
jge
cmpsb
es
pushf
aam
hlt
fcompp
adc
hlt
and
fwait
shl
fsub
jp
xchg
fbld
in
xor
sarb
cmp
int3
mov
xor
ret
fcomi
add
or
enter
xchg
inc
mov
cmp
popf
aas
inc
push
jmp
inc
loop
ds
daa
sub
xchg
lock
xor
jns
cwtl
movsl
insb
xchg
or
xchg
insb
lea
sub
jmp
add
add
ret
jge
sbb
jecxz
xchg
adc
insl
mov
gs
mov
scas
mov
mov
or
sub
and
cmpb
cmc
int3
cmpl
mov
idivb
and
jno
jae
push
push
inc
mov
add
stos
dec
popl
push
mov
cmp
xchg
divb
xchg
inc
push
jg
ds
mov
hlt
cmp
sbbb
and
pop
dec
cwtl
in
sbb
xchg
or
fnstenv
movb
sub
xor
inc
add
scas
inc
xor
xchg
sub
jmp
js
sahf
adc
sub
enter
sub
inc
aad
addr16
jae
mov
out
mov
sbb
xchg
inc
clc
jns
xlat
pop
scas
fnstcw
push
jmp
into
cmpsb
repz
repz
je
mov
mov
pop
mov
in
cmp
in
repnz
dec
das
fsubrl
cmc
push
add
mov
popa
sub
xchg
jecxz
lds
mov
sbb
adc
enter
sub
add
add
pusha
fadds
lret
in
je
lret
aaa
or
outsl
out
fldt
mov
bnd
jbe
cmp
sub
mov
shll
lret
jl
inc
ret
inc
mov
push
stos
scas
cmpsb
or
sarl
jnp
in
and
sub
cmpxchg
mov
shlb
jmp
add
and
jl
mov
lret
adc
pop
xor
jbe
in
mov
jae
mov
imul
jp
xor
test
jb
push
test
add
ret
push
cmc
int
xchg
add
daa
mov
in
mov
rcr
in
dec
repnz
icebp
aad
fadds
adc
mov
mov
pop
lods
clc
fwait
cmp
add
daa
or
cltd
ss
ss
push
fldcw
dec
insl
outsb
jp
stos
js
xor
mov
ret
push
test
jns
dec
xchg
pushl
and
test
add
sbb
jno
addb
insl
out
clc
adc
mov
popf
das
cli
sbb
lds
push
shl
mov
inc
mov
ficoms
leave
leave
or
test
mov
adc
arpl
dec
or
sbb
aad
ds
xor
mov
xchg
scas
cmp
out
out
jb
jge
pop
cmp
nop
adc
test
in
stos
pop
imull
lea
sbb
orb
jbe
xchg
aad
xchg
dec
and
dec
and
inc
cli
jmp
mov
mov
mov
xor
jg
sbb
dec
adc
xor
mov
test
andl
popf
std
insb
mov
flds
outsb
add
mov
out
fwait
movsl
idiv
fstps
fistl
or
and
pop
jae
in
jne
jmp
fisttpll
out
in
rolb
and
lods
repnz
adc
mov
dec
pop
sbb
xchg
dec
push
pop
out
fiadds
aaa
cltd
adc
in
jecxz
mov
mov
movsb
dec
jp
stos
add
rep
mov
and
call
inc
add
insb
or
xchg
jmp
je
dec
aas
adcl
sub
fcompl
jle
sub
insl
cltd
xor
inc
lret
xor
das
repz
sub
push
xor
sbb
add
dec
nop
je
test
lods
pop
or
loop
mov
add
cmp
push
fcoml
movsb
out
sahf
sbb
mov
or
call
inc
clc
insb
cld
jns
sbb
in
or
mov
clc
divb
jl
punpckhbw
stos
bound
rorb
sub
test
jle
js
mov
pop
mov
push
mov
jo
enter
stc
in
jmp
xchg
xchg
das
cltd
sub
mov
pop
or
stos
jne
aas
fsts
add
fsubrl
adc
push
push
push
push
rcll
and
pusha
stos
fbld
in
mov
cltd
mov
jg
dec
sbbl
movsl
pop
xchg
les
insb
repnz
lret
mov
push
or
or
add
lcall
mov
popf
cmp
outsl
push
fs
hlt
or
aas
push
jns
dec
js
int3
jmp
rcrb
icebp
rcr
jno
cltd
repnz
mov
es
xor
jg
xchg
ljmp
add
cmp
mov
jg
loopne
aad
pop
data16
add
orl
ljmp
mov
gs
lcall
repnz
push
in
jecxz
call
mov
dec
les
cmp
push
add
push
push
scas
lcall
pop
cwtl
fidivrs
xlat
mov
repz
dec
ds
jbe,pt
sbb
sub
nop
cmp
call
or
lods
xchg
pop
lock
in
xor
ret
push
mov
cwtl
fs
mov
xchg
daa
fsubr
or
push
xchg
test
rcrb
mov
mov
and
dec
xor
push
pop
int
cmp
push
les
mov
mov
pop
dec
stos
xor
subb
xchg
lea
cmpsb
aaa
add
aaa
jg
jo
adc
sub
xor
sbb
pop
lret
mov
aam
xor
scas
aam
xor
insb
xchg
inc
jge
js
push
popf
dec
sub
jbe
add
push
jns
fisubrs
dec
movsb
push
jbe,pt
inc
outsl
add
xchg
inc
push
mov
push
mov
aam
in
fmuls
sbb
mov
pop
les
add
mov
push
push
test
shll
xlat
neg
jae
bound
dec
jle
out
fildl
cwtl
out
stos
sahf
popa
mov
sbb
mov
data16
pop
test
adc
sbbb
data16
flds
push
and
cmc
mov
xor
dec
leave
sbb
cli
add
sbb
xchg
das
push
imul
lods
test
test
pop
stc
aas
lock
add
xor
mov
inc
jecxz
pop
jmp
stc
add
pop
pop
and
insl
fdivrl
out
jbe
shlb
xor
xor
jl
push
popa
or
add
adc
jge
and
and
cltd
popa
jne
sub
into
test
push
lea
sti
mov
dec
in
cmp
cmp
sarl
pop
jecxz
test
mov
sub
lret
ror
cmp
int3
mov
movsb
faddl
push
idivl
push
insb
lock
adc
testb
xchg
outsl
test
dec
inc
aam
jb
lret
jne
aas
fucom
adc
adc
stos
dec
adc
mov
xlat
sub
insb
xlat
movsb
add
push
es
pop
inc
dec
push
ficoms
xchg
lods
pop
ljmp
mulb
cmp
pushf
or
lret
inc
cmp
push
cmpl
jne
out
fisubl
add
xchg
loope
xor
loopne
mov
sbb
xor
outsl
test
push
push
cmpb
jp
jno
out
push
rorl
aad
xchg
loope
sub
xchg
cmc
lea
xchg
push
inc
add
push
jl
pusha
imul
popa
cmp
in
addr16
pop
data16
das
mov
scas
and
xor
iret
fmull
je
dec
dec
sahf
and
outsb
add
cmpsb
hlt
addr16
fwait
ret
jbe
testb
add
fstl
pop
pop
out
rorl
sub
adc
lahf
jecxz
test
cmp
mov
or
loopne
iret
or
jmp
lcall
sub
or
aas
jb
in
fcomp
mov
xchg
outsl
test
cli
subb
aam
es
xchg
hlt
cli
mov
mov
add
pusha
add
insb
or
or
stos
sbb
icebp
and
cmpsb
push
jns
mov
icebp
cmp
sbb
and
push
sub
loope
cmp
jae
add
sar
shl
rcl
adc
test
inc
mov
or
pop
std
dec
int3
dec
cmp
sub
data16
pop
xlat
movb
stc
insb
frstor
out
dec
dec
xchg
fdivr
cmp
lcall
cmp
jecxz
rcr
inc
lea
add
jne
popf
cmp
mov
inc
xchg
dec
mov
outsl
xor
fimull
add
imul
inc
std
mov
xor
jecxz
out
in
adc
jge
cmpsb
cwtl
hlt
xchg
aas
mov
sbb
xor
mov
push
int
xor
inc
es
cld
mov
pop
xchg
or
imul
cli
mov
arpl
cmpsb
sub
pop
std
pop
jno
outsb
push
push
xchg
sbb
iret
mov
add
iret
mov
cmp
xor
jne
leave
push
push
add
movsl
outsl
int
sbbl
ret
lret
push
inc
subl
bound
adc
add
push
cli
pop
mov
rorl
mov
dec
adc
stos
lret
push
push
daa
push
imul
mov
insl
bound
clc
lret
or
or
divb
lcall
scas
or
inc
pop
aam
xlat
jmp
mov
mov
out
fisttpl
sub
pop
or
xchg
jae
shrb
sti
sub
cld
add
dec
test
jg
stos
into
sbb
stc
loope
mov
dec
sub
adc
pop
test
or
push
xlat
xor
hlt
in
pop
jle
xor
loop
inc
test
pop
or
or
shlb
cmp
test
xchg
push
lds
loope
cmpsl
add
call
mov
jnp
mov
adc
ljmp
cmpsb
adc
pop
lock
cld
adcl
clc
lahf
xchg
stc
jg
fnstsw
pop
cli
lods
cwtl
imul
and
jne
jmp
out
dec
xor
jl
lock
mov
imul
jg
in
push
pop
out
outsb
xor
mov
xchg
jl
aad
sarb
ds
insb
ret
dec
mov
gs
lret
aas
std
pop
js
lds
mov
dec
bound
fcompl
stc
cmp
fs
push
dec
dec
nop
pop
dec
jnp
ret
inc
mov
push
mov
add
lea
push
push
cmpsb
in
int
int
jnp
repz
jno
inc
jae
sbb
cwtl
fists
and
rcll
aam
mov
xchg
push
loop
and
push
xor
lcall
imul
leave
and
icebp
sbb
lcall
inc
pop
mov
std
and
mov
mov
decb
xchg
insl
sub
ss
daa
adc
test
inc
dec
add
arpl
sbb
pop
xor
dec
lret
cwtl
or
jp
test
push
movsb
lea
sarb
lods
pusha
sbb
jp
add
scas
jae
aas
jnp
sbb
xchg
add
mov
lock
ret
add
sbb
jno
daa
mov
push
loopne
inc
dec
mov
or
fisttpl
cmc
push
insl
testb
mov
cli
add
sub
addl
icebp
add
popa
mov
insl
push
cld
popa
pop
stos
xor
xchg
mov
vunpckhps
jo
mov
xor
or
fdivs
mov
jno
and
jge
jmp
xchg
cld
or
ljmp
test
mov
orl
sub
or
je
adc
stos
iret
inc
xlat
fnsave
cmp
pop
out
into
push
ja
stc
cmp
xchg
dec
roll
scas
sbb
sub
outsb
lods
ds
jae
es
es
or
fucomip
xor
jmp
inc
push
cmp
int
or
sbb
test
xchg
leave
test
dec
dec
mov
cli
xchg
pop
xlat
les
sub
fisubrl
cwtl
dec
fwait
mov
or
xor
push
pushf
int
mov
push
fisubrs
test
gs
mov
push
es
xor
sub
pop
xchg
mov
cmc
xchg
faddp
cmpb
or
mov
xor
shlb
jnp
and
enter
js
roll
mov
mov
xchg
add
cmc
sbb
stos
addb
aad
icebp
sbb
xchg
fstpl
stos
and
mov
adc
pop
xor
mov
loop
lods
push
add
repz
pop
mov
push
add
adc
cwtl
xor
cmovp
cmp
fsubrl
in
sbbb
sbb
test
leave
ja
stc
jo
add
cmp
mov
mov
sti
ret
xchg
push
sub
enter
fisttpll
lock
push
and
sti
add
xor
inc
mov
push
test
mov
lret
jnp
out
repz
leave
push
and
mov
cs
add
daa
add
lret
nop
loop
mov
cmp
ret
sbb
sub
clc
push
adc
jg
stos
addr16
inc
jae
lahf
stos
fldl
fstps
sub
sbb
cmp
jp
std
fnstcw
xchg
mov
cltd
pusha
das
pop
adc
mov
imul
pushl
dec
mov
into
adc
adc
mov
pop
lret
ljmp
fisttpl
lcall
sub
inc
into
lock
push
xlat
int
cwtl
xor
les
call
cld
rolb
stos
andl
std
fldl
pushf
je
sbb
sub
and
mov
lcall
ret
and
push
jo
in
dec
aam
dec
cmp
jp
mov
cmp
pusha
fwait
dec
test
enter
leave
inc
mov
jnp
repz
or
insl
xchg
test
cmp
or
shlb
int3
clc
jne
orb
pop
jmp
jmp
cmp
stos
jne,pn
jo
add
push
dec
enter
dec
jo
sub
add
fdivr
ffree
mov
daa
jne
xchg
js
mov
ret
pop
js
inc
repz
fwait
mov
jmp
loope
outsb
adc
in
pop
and
int3
lods
test
mov
pop
out
dec
data16
aad
in
bound
mov
pop
or
sub
jbe
xchg
push
xor
xchg
cmp
js
jns
out
inc
in
das
cld
daa
cli
mov
icebp
sub
push
dec
into
cmp
aam
inc
es
pop
pop
add
sub
cmp
repnz
outsl
push
xor
push
sti
rolb
mov
mov
or
dec
sar
sub
push
mov
aas
outsb
add
repz
xchg
negb
xor
xchg
or
xor
mov
cmp
mov
mov
dec
mov
cmp
out
in
and
pop
insl
xchg
orl
mov
popf
andb
push
cs
ss
jo
cmpsl
mov
test
xor
je
jo
gs
dec
movsb
pop
mov
fs
scas
mov
lret
xor
call
in
idiv
mov
and
mov
mov
or
outsl
lods
mov
inc
stos
dec
adc
ljmp
jb
nop
jns
mov
jbe
hlt
xchg
int
in
push
jns
lods
jns
stos
jmp
adc
push
nop
mov
cwtl
cli
ficomps
mov
pop
dec
pop
sahf
sbb
xchg
js
push
repnz
mov
and
add
add
or
push
nop
xor
pop
dec
lret
notb
mov
xlat
jmp
dec
push
shlb
push
sbbb
sbb
fwait
cli
xor
rcll
loope
inc
push
std
imul
shlb
inc
mov
xchg
mov
into
add
fisttpl
cmpl
stos
fildl
aam
push
jg
xor
lcall
xchg
test
and
jb
popf
inc
push
cltd
call
leave
sub
inc
dec
pop
mov
push
mov
into
push
lods
jl
and
aas
mov
roll
popf
mov
int3
ss
inc
cmp
ljmp
lods
sbb
cmp
pop
ror
daa
push
xchg
jb
out
sbb
sbb
and
fisttps
adc
sti
outsb
ds
je
fwait
and
sub
fidivrl
jo
test
rolb
xchg
jle
cmpsb
movsl
dec
dec
adc
cwtl
mov
pusha
mov
pop
loopne
pop
in
and
dec
xor
add
xchg
xchg
out
pop
ficoml
test
jle
shrb
rclb
inc
xor
or
jmp
or
mov
mov
or
nop
mov
push
popf
push
push
lea
xchg
xor
xor
pop
aaa
dec
scas
cmpsb
xchg
sub
in
push
adc
pop
leave
pop
outsb
leave
xchg
inc
mov
jg
push
lcall
lcall
cltd
push
adc
cwtl
call
mov
adc
push
stos
pop
ret
loop
in
add
mov
mov
aas
push
add
imulb
outsb
fldenv
inc
jg
jmp
enter
lahf
imul
in
pop
fcompl
cmp
xchg
les
mov
inc
xchg
lods
pop
lahf
jl
dec
imul
jno
negl
xchg
jle
sub
jle
enter
into
add
pop
dec
mov
test
imul
jo
bound
stos
out
movsl
xchg
xchg
mov
xchg
cmp
notl
fstpl
mov
ljmp
in
test
jp
dec
out
in
scas
pop
nop
push
dec
cmpsb
sub
movsl
jmp
arpl
inc
push
xor
cmc
fnstenv
test
xchg
ja
inc
jae
mov
mov
mov
xchg
or
lahf
mov
xor
stos
call
add
jecxz
and
out
xorl
push
and
fs
dec
hlt
adc
aas
pusha
cwtl
or
daa
xorb
aas
ret
push
rcrb
dec
xor
sub
sub
les
jmp
imul
in
fdivr
mov
leave
push
add
sbb
aaa
inc
cmp
sbb
cmc
jl
mov
cli
push
xorl
movsb
sub
test
out
or
pop
iret
sbb
push
mov
mov
repnz
mov
pop
sti
cmp
bnd
xor
pop
push
dec
filds
repz
jp
lcall
pop
cmp
ja
inc
lahf
pop
xchg
jbe
sub
in
or
mov
inc
cmp
push
pop
jecxz
mov
cmp
lahf
ffree
mov
in
outsb
fidivrl
out
pop
les
dec
decl
sub
mov
cld
mov
dec
xchg
and
addr16
cbtw
mov
stc
dec
push
cmp
js
movsl
dec
dec
out
or
inc
lods
mov
mov
jmp
jg
fnsave
mov
cwtl
sbb
fs
xchg
xlat
mov
mov
xchg
rorb
mov
outsl
sub
xchg
mov
out
dec
mov
adc
movsb
fadd
jne
pushf
cmc
mov
shll
lret
dec
leave
hlt
dec
ret
cmp
imul
iret
jmp
fwait
xchg
divb
jmp
lcall
movsb
xchg
adc
xchg
sarb
movsb
js
xchg
gs
mov
out
popa
mov
mov
mov
jns
lods
dec
repz
and
push
shll
jae
stos
into
cli
call
sub
mov
hlt
mov
add
insl
adc
jl
push
jecxz
out
push
lret
aam
ret
push
mov
jge
repnz
sub
cmp
lret
dec
daa
xchg
jns
lret
mov
add
icebp
popl
dec
mov
cmpsb
lret
nop
sbb
mov
add
adc
pop
out
add
mov
inc
jo
dec
stos
js
hlt
aaa
dec
cs
pop
push
imulb
dec
fbld
lcallw
test
push
cmp
mov
lds
push
jb
sub
cmp
int3
push
test
cltd
add
mov
dec
xor
mov
out
mov
jno
insb
xor
lahf
outsl
out
sbb
sahf
add
xlat
shl
shl
and
mov
mov
dec
rcrl
pop
xchg
xchg
in
xchg
push
jge
test
movsl
stos
jle
stos
mov
fs
jge
popa
inc
xchg
dec
inc
jbe
pop
add
into
sti
xlat
loopne
out
push
xchg
divb
xchg
jno
cltd
dec
cmovle
filds
ds
cmp
cs
jg
inc
sbb
push
mov
inc
pop
sbb
popa
loopne
mov
add
push
sbb
sbb
push
or
push
into
mov
push
sub
xchg
sub
dec
fdivl
jmp
sar
add
aad
cmc
mov
xchg
dec
and
sub
sub
adc
push
mov
out
mov
daa
sbb
test
jg
or
jb
divb
aaa
cmp
imul
add
mov
clc
or
cmp
mov
mov
push
xchg
sbb
cmp
jp
jmp
ljmp
test
jl
sbb
jge
sarl
imul
jge
arpl
in
push
loopne
jge
and
mov
push
mov
jle
sbb
out
fdivrs
xor
adc
inc
icebp
ds
mov
ljmp
test
dec
push
push
movsb
ja
or
sarb
jg
add
dec
and
mov
pop
sub
mov
dec
stos
or
xlat
mov
cli
arpl
cmp
leave
gs
push
jae
xchg
xor
leave
xor
xor
push
cmpsb
dec
xchg
pushf
mov
movsl
adc
inc
inc
dec
arpl
std
ret
dec
and
mov
aas
ljmp
jns
popa
inc
out
mov
inc
lods
imul
sahf
and
adc
mov
jp
std
jo
jge
mov
les
cmp
and
mov
xchg
inc
ljmp
and
xor
and
mov
in
sub
cmpsb
int3
aaa
les
xchg
push
rcrb
std
shll
xchg
jne
addr16
ficoms
insb
fs
bt
movsb
sbb
orb
rclb
sarl
les
stos
inc
ja
add
insb
fdivrs
add
mov
xor
jl
outsb
push
fs
mov
ss
push
popf
stos
or
sbb
and
cld
sbb
cmc
inc
mov
inc
cmpsb
shrb
xchg
ret
mov
mov
repz
sti
jge
mov
and
int3
jns
lret
mov
out
adcl
das
js
add
push
pop
lods
adc
ret
push
adc
dec
loopne
inc
int3
xchg
xorl
mov
inc
mov
push
jne
in
clc
dec
in
mov
mov
jno
pop
idivb
movsl
in
fidivl
dec
sbb
mov
aad
adc
movl
mov
sbb
pop
push
inc
cwtl
outsl
jmp
mov
es
mov
or
adc
jle
cmp
add
push
inc
sub
cmp
popa
test
xchg
movsb
mov
aas
mov
test
sbb
sbb
clc
sbb
sbb
hlt
aad
xor
sub
inc
xchg
mull
or
fwait
jl
ljmp
es
in
jns
stos
mov
out
aaa
adc
jno
imul
lret
aaa
add
add
sbb
inc
cmc
cmpsl
and
dec
jg
outsl
xchg
in
add
pusha
adc
insb
push
pop
fsubrs
jmp
lcall
and
fdivs
rcrb
push
psubusb
lods
pop
repz
aas
cmpsl
shll
pop
inc
lods
mov
jp
scas
jl
inc
in
push
lcall
cmpsb
pop
and
in
mov
lods
add
inc
dec
hlt
imul
mov
vandnps
out
adc
cmc
negl
cmp
pop
scas
int
pushf
lret
cmc
cmp
push
jle
insl
dec
sbb
in
jmp
sub
cltd
popf
adc
xchg
into
xchg
sbbl
divb
pop
mov
mov
insb
negl
stos
daa
and
rcll
in
adc
in
add
jae
test
add
lret
pusha
add
jo
call
add
xchg
ljmp
out
xchg
fs
cmp
pop
ja
sub
mov
sub
push
mov
std
push
or
lods
adc
les
loopne
mov
xadd
aas
lock
inc
int
pop
sbb
pushf
ds
loope
pop
cs
push
pop
into
xor
aam
add
jmp
or
fmul
lods
xor
sbb
jmp
fidivrl
adc
or
and
cli
jl
adc
jno
add
adc
iret
xchg
mov
cwtl
repz
mov
mov
push
cltd
test
push
clc
inc
aaa
cmp
xor
loopne
test
dec
in
sar
daa
xor
repz
les
sbb
add
inc
mov
jb
push
add
icebp
popa
xchg
std
xchg
sub
ffree
push
sbb
xchg
repnz
inc
mov
loop
scas
bnd
mov
shrb
mov
pop
ret
sbb
add
sbb
add
xchg
in
orl
popa
and
mov
add
mov
test
int
addl
sub
nop
sub
stos
sbb
sbb
jae
pop
mov
jp
int
dec
xchg
shl
jl
aad
ja
mov
cmpsl
test
pop
push
fdivrl
fs
push
mov
jecxz
lock
dec
es
addr16
jmp
sbb
pop
jnp
popa
sbb
dec
sub
add
cld
push
or
mov
inc
lret
enter
pop
out
xor
xor
insb
push
push
or
in
arpl
notl
in
mov
jns
mov
add
out
add
jle
xor
pop
cmp
push
jle
fists
pushf
sahf
pushf
aam
loope
icebp
pop
sbb
pop
je
flds
mov
add
jo
jmp
adc
cmpsb
cmp
mov
popa
jns
loopne
mov
mov
mov
xor
ss
lods
sbb
and
mov
ret
dec
push
push
cmpsl
sub
push
push
xor
pop
adcl
pop
fsubrs
movsl
inc
cwtl
pop
cmpsl
jns
fs
dec
adc
daa
adc
sbb
rcll
fldenv
cmpsl
in
fwait
je
pop
dec
rcr
xor
testb
mov
repz
push
cmp
fsubrs
sub
cmp
mov
fmull
inc
ficompl
sub
jecxz
cmp
loopne
daa
adc
packuswb
insb
lds
repnz
push
dec
dec
xlat
ljmp
clc
je
dec
in
int3
sbbl
pop
xchg
xchg
mov
fimull
push
jae
xchg
push
test
xlat
sbb
pop
mov
cmp
js
xchg
fdivrp
adc
pop
inc
pop
push
sbb
hlt
fisttps
mov
jne
mov
mov
jne
sub
ss
and
lods
enter
sbb
dec
aaa
cmp
rorb
cmpsl
push
sbb
shrl
mov
icebp
or
push
cmp
enter
ds
xlat
xchg
adc
stos
xchg
jmp
adc
fisttpll
in
adc
je
fwait
aam
adcb
dec
pop
sbb
mov
clc
jnp
hlt
mov
stos
loop
or
or
xrelease
sub
mov
out
pop
fnstenv
aad
in
sbb
sub
jg
xorl
pop
aas
xchg
test
push
pop
dec
scas
dec
ljmp
mov
test
clc
fs
lea
pushl
pop
jmp
mov
or
cwtl
call
lods
cmp
into
lahf
xlat
or
ret
pusha
mov
aaa
cs
imul
mov
xor
xchg
loop
incb
shlb
clc
sahf
filds
addr16
mov
mov
push
mov
pop
inc
mov
dec
add
stc
lea
cmp
push
and
repz
xchg
inc
mov
fistpll
dec
mov
adc
push
in
ss
add
and
out
in
repnz
ljmp
push
pop
stc
fisttpl
dec
pushf
pushf
mov
and
xor
xchg
repnz
or
stos
pop
rol
jge
ja
pushl
push
inc
push
clc
mov
xor
fimull
or
cmp
xor
pusha
popa
fwait
shrl
mov
fisubl
lret
enter
xchg
or
push
fsubs
mov
lods
sub
mul
and
mov
fsubs
xor
test
adc
xchg
push
dec
lahf
jnp
cld
push
dec
cltd
jae
daa
iret
loopne
or
mov
lods
sub
ja
addr16
push
loope
jmp
in
pop
sbb
or
mov
mov
push
mov
lock
insl
push
sbb
lock
xor
push
int3
cltd
or
mov
mov
aaa
mov
pop
push
mov
pop
aam
outsb
cwtl
xchg
mov
out
jp
push
xchg
js
sbbl
sub
pop
lea
rcl
or
mov
push
hlt
stos
sahf
xor
pop
leave
push
pop
sar
mov
cmpsb
cmp
fstpt
shl
in
cmpl
lock
sbb
cmpb
mov
jle
cmp
xlat
outsl
stc
daa
mov
fsubl
xchg
jb
sub
andb
inc
movsb
dec
push
jae
insl
pop
push
xchg
push
mov
add
cs
jge
repnz
mov
roll
scas
inc
push
cmp
and
adc
cmpsb
or
pop
punpckldq
loop
popa
inc
or
test
mov
push
hlt
popf
mov
pushf
jbe
jle
dec
daa
nop
adc
in
ljmp
jno
and
dec
sub
sub
ffree
fwait
ljmp
and
push
dec
outsb
push
mov
push
inc
pop
push
cltd
inc
ljmp
movsl
negb
xchg
mov
push
insl
mov
add
add
loope
push
or
xor
in
add
insl
sub
push
test
inc
ret
xor
mov
lret
subl
sub
pop
sbb
push
sub
push
lcall
das
inc
or
cmp
inc
leave
leave
test
push
mov
dec
mov
std
push
jl
inc
inc
pop
out
fistpll
mov
daa
pusha
insb
mov
lods
lds
inc
cmp
loope
xor
xor
push
dec
xor
adc
shr
fwait
lods
insb
out
mov
cmp
fs
mov
lcall
loopne
fwait
dec
and
cltd
das
jbe
mov
lret
add
mov
sub
pop
pop
out
les
in
push
out
rcr
add
mov
sbb
mov
rorl
out
inc
enter
mov
mov
xchg
and
mov
das
cld
shll
sub
ss
fs
das
add
pop
nop
mov
rcr
cmp
pop
leave
or
push
push
fisttpll
push
cltd
pop
sti
push
rcl
dec
add
cmpsl
arpl
lock
sub
cmp
xchg
sbb
test
cmp
stc
xchg
test
daa
test
add
fsubrs
outsl
jae
xor
and
mov
int
imul
fimull
shrb
pop
ja
xchg
sbb
frstor
loop
vpaddusb
sub
insb
ret
sub
imul
mov
pop
adc
sbb
xchg
ljmp
cmc
cs
ljmp
lods
sbb
fs
mov
data16
lock
and
shlb
sbb
pop
jne
add
sbb
cmpsb
jb
popf
or
std
push
fldcw
negl
ret
iret
es
mov
mov
add
repnz
in
inc
lret
cmp
sub
arpl
imul
xchg
popa
mov
stc
out
enter
cltd
pop
loopne
repnz
xor
test
pop
hlt
push
push
cltd
orl
push
dec
jne
xchg
or
ljmp
outsb
pusha
hlt
mov
aaa
push
lock
push
xor
dec
sub
xchg
cmp
aad
aaa
aas
mov
xchg
ficoms
push
test
movsb
mulb
pop
out
jg
mov
mov
je
xchg
push
jae
aas
push
inc
lock
repz
imul
and
dec
xor
fcompl
cs
fldenv
mov
test
mov
jg
xchg
xchg
xchg
dec
push
mov
movb
cmpsl
imulb
cs
lock
imulb
mov
aas
cs
cwtl
or
fbld
xlat
cmp
push
outsb
sbb
movsl
out
pop
push
push
mov
pop
test
rclb
mov
xchg
js
mov
fistpll
sub
cmp
xor
dec
cwtl
cmpsb
jmp
and
rclw
mov
mov
jne
cmpxchg
add
mov
sub
outsb
stc
adc
pop
pop
fs
out
push
pushf
scas
out
add
popw
imul
iret
xchg
mov
repz
mov
gs
sahf
lcall
ljmp
ss
cmpsl
push
rep
push
adc
xor
mov
ljmp
mov
pop
ret
xchg
push
lcall
dec
clc
dec
stos
sahf
call
mov
test
lahf
lea
loopne
xchg
lods
mov
jo
lcall
rcl
add
in
push
into
cwtl
cld
push
dec
insl
sbb
pop
add
dec
inc
cmp
cmc
cmpsb
mov
shr
lds
inc
cmpsb
and
outsb
lret
shrb
inc
adc
ret
test
jnp
add
pop
mov
xorl
test
jne
cmc
das
mov
fistpl
repz
or
repnz
lahf
mov
and
mov
sub
mov
xor
push
cmp
push
lret
xor
lret
mov
lret
out
adc
pop
sub
sti
add
bound
decb
lcall
out
jg
inc
xor
xor
bound
sahf
int
out
out
icebp
mov
mov
dec
daa
enter
xchg
sti
cli
int
fadds
and
in
scas
or
dec
fidivrl
fs
lods
psraw
daa
popa
add
movsb
js
jno
sarb
dec
outsb
cmp
sub
sub
dec
out
in
popa
arpl
outsb
jp
mov
cli
cli
dec
cmc
icebp
aas
inc
paddq
aaa
enter
xor
nop
sub
pop
into
inc
nop
loopne
stc
jo
mov
and
fidivrl
fsubrs
adc
iret
adc
loop
les
ret
ss
push
test
loop
xchg
ret
pop
in
int
cmc
and
aam
cmp
mov
jg
ret
decl
outsb
fmuls
stos
popf
ljmp
stos
or
or
jnp
fiaddl
ljmp
inc
cltd
sub
push
xor
dec
aas
cmp
add
cmp
mov
ja
das
int
mov
movb
lds
popf
jnp
mov
sbb
push
je
cmc
mov
movsl
or
cmp
jp
push
inc
pop
inc
jmp
mov
pop
add
push
pop
inc
jmp
clc
jne
xchg
addr16
inc
jge
pop
mov
ret
xchg
adcl
mov
fistpll
rcr
aam
sub
jl
negl
mov
jo
pop
sub
xlat
push
push
int3
sub
xorl
adc
insb
test
js
fists
adcb
jecxz
lcall
pop
inc
sub
pop
pop
pop
shll
inc
add
popf
pop
adc
mov
push
adc
aas
rorl
fmuls
push
int
cmp
imul
es
mov
add
and
add
jge
out
push
mov
fcmovnb
sbb
xor
or
lea
jo
inc
jl
xor
in
push
rcl
bound
add
sbb
add
push
ds
cmp
mov
push
je
nop
cmp
sbb
adc
iret
fwait
movsb
sub
dec
aas
pop
divb
mov
ja
xchg
pop
cli
mov
pushf
bound
jb
shlb
ljmp
push
xor
mov
jno
cmp
int
xor
mov
or
stc
pop
cmc
aas
push
outsb
cmp
ljmp
test
cmp
loopne
aad
mov
fnstsw
imul
jbe
sub
sub
sub
push
mov
data16
ret
sbb
add
jae
rcll
test
addb
je
js
cmovp
and
int3
jmp
push
push
into
repz
addl
mov
sub
pop
sbb
sub
sub
xchg
sub
xchg
stos
mov
ficomps
and
add
add
aad
insb
inc
sub
clc
pop
mov
add
in
mov
jle
movsl
andl
sti
pop
xbegin
cmc
pushf
xchg
scas
or
in
xchg
aas
and
mov
pop
stos
mov
insl
mov
mov
push
sbb
sub
jle
xchg
call
or
rcrl
mov
add
sbb
and
pop
sub
sbb
lock
cmpsb
mov
dec
cmp
movsl
cmp
cmc
mov
inc
push
jo
dec
inc
loop
push
sbb
mov
xor
loopne
std
lahf
fdivrp
and
sbb
mov
lret
dec
and
mov
dec
adc
sbb
cli
mov
cmp
xor
dec
sti
leave
xchg
popf
sbb
repnz
inc
stc
repnz
add
stos
mov
enter
inc
cmp
lcall
inc
sub
xor
pop
iret
sub
aaa
cli
push
aas
sbb
push
pop
nop
sub
icebp
sbb
inc
sti
into
xor
mov
loopne
push
inc
and
in
and
call
fiaddl
decb
and
ftst
dec
iret
sbb
jle
pop
xchg
into
shrl
ror
push
mov
mov
xor
sbb
dec
adc
shrb
fs
cltd
addb
bound
dec
xor
clc
popa
xchg
movb
cmp
ljmp
pop
shlb
in
pop
fwait
negl
and
cwtl
mov
notb
sbb
subb
aam
rorl
lahf
cmpsb
pop
stos
mov
add
cmpsb
inc
dec
xor
mov
adc
insl
incl
jmp
mov
or
add
ja
dec
pop
lods
out
mov
lahf
lcall
nop
xlat
nop
out
sub
xor
cld
in
call
ds
jns
lods
out
mov
lock
xor
dec
stos
in
dec
cmp
jp
insb
rclb
cmpsb
mov
add
jno
jno
push
mov
imul
jo
or
mov
mov
pop
add
test
in
fdivp
add
sub
test
andb
mov
jle
shll
mov
sub
or
cli
loop
jno
hlt
xchg
jle
lcall
fs
ret
push
mov
add
scas
xchg
mov
adc
sub
fwait
inc
es
mov
cmp
lea
orl
adc
mov
lcall
dec
pop
imul
mov
mov
sbb
push
mov
shlb
sub
lret
mov
es
les
fwait
inc
fnstsw
cmp
jge
adc
fisubl
mov
cmp
xchg
js
and
mov
out
popf
imul
movl
sub
mov
pop
out
jnp
jecxz
jno
test
sbb
out
fnstenv
aam
add
jecxz
sub
push
xchg
push
push
test
int
push
fildll
loopne
pop
sbb
das
xor
shll
aad
adc
adc
inc
mov
fcoms
inc
cmc
mov
cmp
jecxz
in
xchg
inc
pop
and
insb
cmpsb
pop
mov
test
clc
sbb
push
repz
repz
jp
and
repz
ret
mov
imul
shlb
popa
sarl
cmp
vpslld
shrl
aas
ss
sub
sub
jg
jne
push
cmp
mov
cmpsb
enter
dec
psubw
aas
lret
adc
insl
or
mov
xor
mov
shrb
xor
fbstp
sbb
dec
stc
push
cs
sbb
push
push
jne
mov
cltd
xchg
subl
imul
jp
push
movsl
js
andb
ds
xor
ret
xchg
push
test
sub
ret
mov
std
test
out
xor
adc
stos
push
lds
pop
pop
mov
fadds
push
insl
cmpsl
push
pop
xchg
add
add
fidivs
inc
jns
movsb
arpl
cltd
and
loopne
insl
mov
jno
hlt
adc
add
jb
insb
popa
arpl
scas
sahf
cltd
jne
std
jns
insl
js
or
ds
in
stos
leave
ds
ret
aad
sbb
sbb
outsl
xor
inc
iret
jge
ja
adc
xchg
xor
pop
repnz
imul
das
lret
mov
movsl
mov
popf
roll
or
dec
add
or
fcmovnbe
das
shlb
dec
icebp
push
xor
aad
add
jmp
je
in
mov
mul
dec
out
jle
enter
imul
call
dec
into
lahf
sbb
movsl
mov
cmp
fidivs
push
dec
in
add
mov
mov
fcmovbe
add
dec
out
test
leave
and
jne
repz
mov
movsb
mov
add
scas
cmp
and
insl
pusha
clc
jg
sub
fdivs
cli
test
sub
mov
fnstenv
push
push
stos
fisttps
rclb
or
xor
in
pop
popf
stos
in
es
mov
out
adc
push
xchg
inc
inc
jnp
inc
clc
xchg
aas
adc
outsb
stos
test
out
incb
mov
jnp
loop
fs
and
dec
testl
xchg
lods
xchg
test
popa
cmp
rcl
xor
pushf
daa
scas
cmp
lods
inc
cwtl
mov
std
lds
jo
cmp
pop
push
stos
xor
fldcw
sub
mov
imul
inc
outsl
mov
pop
pop
test
xchg
push
dec
cld
pop
sarl
sbb
sti
or
push
ds
test
push
xor
popf
insb
es
cld
inc
sub
mov
mov
jae
imul
into
push
jae
cmp
cmp
sub
in
das
inc
sub
or
daa
inc
sub
pop
jge
pop
js
pop
lcall
dec
js
mov
mov
mov
fidivrl
xorb
mov
add
mov
out
rolb
add
jb
dec
popa
lods
xorl
cmp
xor
dec
pop
int3
inc
or
and
or
leave
scas
inc
iret
or
clc
into
in
sbb
xchg
push
sub
lea
in
lret
jae
mov
pop
idivb
jno
cmp
mov
or
sar
jb
push
aam
nop
mov
in
cmp
pop
mov
icebp
mov
pop
and
xor
adc
out
outsl
mov
imul
add
imul
or
add
pushf
push
adc
popa
or
push
ret
in
outsl
sbb
in
imul
mov
dec
mov
dec
push
sarb
add
jo
aaa
or
jp
in
inc
jge
call
in
scas
adc
cwtl
pop
pop
add
jo
sbb
pop
aam
xchg
xor
cs
hlt
jge
fmull
xchg
mov
es
xchg
push
jnp
mov
pop
jl
push
popa
cli
stos
pop
push
inc
cmp
hlt
ret
push
xor
out
mov
ds
js
mov
pop
lret
xchg
jae
lcall
and
lea
and
add
out
or
cmp
or
xor
in
sbb
mov
lock
fldcw
push
mov
mov
lret
out
or
cmp
movsl
insl
shll
rcll
pop
xchg
test
bound
fs
ljmp
lods
dec
xchg
test
push
push
push
dec
ljmp
outsl
mov
xor
aad
mov
pop
or
mov
mov
mov
fwait
out
pop
int3
adc
cli
clc
push
cmpsb
xchg
orl
or
xchg
inc
movsb
leave
jg
adc
std
cmp
movsb
pop
imul
cltd
pop
insb
fbld
mov
int3
sbb
arpl
inc
jl
pop
hlt
cmp
enter
inc
in
mov
ficoml
daa
push
mov
mov
ljmp
xlat
mov
psrad
inc
imul
mov
gs
sub
lods
iret
int
shlb
mov
icebp
lret
or
aas
divb
fxch
ja
xorb
addr16
fcmovnbe
dec
jne
sub
mov
adc
into
sbb
jecxz
pop
pop
shll
cltd
push
inc
popa
cmpsl
sub
lea
repz
and
es
ss
rorb
or
push
pop
in
sub
inc
dec
jb
jnp
pushf
aam
adc
mov
frstor
outsl
xchg
mov
gs
outsl
aas
jl
inc
inc
stc
inc
je
xchg
shlb
dec
negb
mov
mov
sub
sub
pop
bound
aad
xchg
pop
leave
adc
jl
mov
imul
inc
sar
xor
dec
add
sub
arpl
or
cltd
sbb
popf
pop
in
out
xchg
lods
call
addr16
data16
aas
push
jno
ret
outsl
sahf
cmp
sub
mov
jge
out
loop
or
adc
cmc
mov
or
sbb
pop
dec
mov
leave
fstl
pushf
test
cmp
mov
or
cmp
mov
adc
cmc
outsl
outsl
or
sahf
inc
shr
push
and
outsl
dec
jns
add
fldenv
sbb
fsubr
push
push
cmp
inc
mov
xor
and
jnp
cltd
and
jp
insb
dec
dec
push
mov
negl
hlt
ret
fs
cmp
sub
push
inc
mov
sbb
add
pop
mov
cltd
fimull
pop
mov
jecxz
or
pop
mov
or
arpl
jge
shlb
fsubs
dec
pop
imul
inc
push
jle
sbb
repnz
leave
loope
data16
lcall
mov
hlt
test
inc
int
stos
daa
and
pop
mov
or
mov
xchg
scas
push
mov
loopne
sbb
outsb
inc
cld
dec
sti
gs
aas
adcl
or
cltd
pop
sub
add
in
add
jg
cs
sbb
add
imul
das
mov
pop
insl
mov
adc
fistpl
push
dec
sbb
lea
fildll
sahf
jns
fwait
push
incl
pop
jle
lds
icebp
mov
loopne
popf
pop
fisubrs
scas
inc
add
call
ss
or
cmpsb
ret
testb
dec
scas
pusha
xchg
in
sarb
cmp
ret
int
push
arpl
pop
dec
xchg
pop
and
into
xor
lds
jbe
aaa
test
clc
mov
mov
xchg
iret
rcrl
js
inc
jne
xchg
cmp
pushw
rol
movb
ss
negl
rclb
fwait
in
push
pop
iret
cmp
xlat
push
notb
ds
pop
mov
dec
in
aam
mov
divb
das
inc
cmp
push
inc
ljmp
in
sub
dec
pop
sbb
mov
cmp
cwtl
inc
and
pop
sub
jo
mov
pusha
xlat
and
imul
mov
and
mov
loop
dec
mov
jp,pt
mov
mov
ficompl
je
xor
stc
pop
rclb
scas
mov
shrl
or
pop
loop
bound
insl
aaa
inc
cmp
repnz
test
jns
insl
xchg
push
lret
inc
inc
pushf
xchg
pop
scas
inc
in
pushf
out
mov
test
cmp
xlat
xchg
cmp
and
sub
cmp
jmp
cmp
mov
sbb
imul
xor
int3
jle
xchg
arpl
ret
das
fcoml
js
fildll
xchg
pop
mov
loope
and
jne
out
inc
fldt
mov
ret
adc
jne
outsb
enter
push
xchg
lret
ret
pop
movsl
dec
and
pusha
or
mov
mov
imull
jmp
sbb
daa
dec
das
mov
daa
xchg
xor
cmpsl
dec
dec
mull
movaps
ss
test
pop
mov
lret
cmp
cmp
xchg
lea
adc
mov
pop
xchg
jp
cmp
or
cs
fisubs
in
pusha
fs
shl
mov
push
add
add
into
xor
mov
mov
dec
mov
mov
scas
jnp
test
adc
outsl
test
xlat
mov
xchg
mov
fdivs
movsb
pop
cs
sub
jnp
dec
mov
cmp
dec
lods
shll
or
iret
rcrb
gs
dec
push
or
call
xchg
rcrl
add
rorb
jl
cld
cs
mov
or
and
fdivs
inc
push
push
aaa
leave
cmp
inc
push
adc
sbb
int
int3
or
sub
cmp
ljmp
or
mov
and
jg
loopne
cmp
aam
add
mov
mov
adc
add
sub
xor
and
xlat
outsl
jno
sbb
add
push
push
adc
adc
jno
ss
out
mov
pop
cs
ret
loop
fucomi
call
out
iret
ret
cmp
push
outsl
sbb
mov
and
jmp
clc
pop
loope
inc
icebp
dec
imul
and
psrad
addr16
push
std
mov
pushl
xchg
lret
mov
addr16
loop
outsl
mov
mov
mov
stc
cld
mov
sbb
mov
adc
scas
sub
rcll
mov
xchg
imul
adc
pop
test
and
lods
xor
out
imulb
fdiv
xor
jns
shll
adc
repz
repz
or
cs
fbld
inc
xlat
out
dec
fisubs
sub
xor
mov
js
and
add
insb
dec
cld
add
xchg
xor
lret
or
inc
adc
lahf
scas
js
test
or
mov
inc
inc
jge
xor
ret
jecxz
shlb
push
ror
inc
enter
ret
push
pop
ret
add
out
shll
adc
xor
clc
inc
add
faddp
in
xchg
notb
mov
mov
xchg
nop
insl
lock
aam
fwait
and
jmp
pop
and
inc
pop
push
xor
dec
push
ret
cmc
sahf
in
movsb
xor
jo
mov
pop
push
cmp
loopne
jnp
addr16
and
flds
out
xchg
mov
ret
int3
scas
and
xor
arpl
mov
push
insl
lock
mov
hlt
adc
push
ret
xchg
pop
bnd
xlat
or
lret
sbb
and
push
fsts
fwait
push
inc
pop
in
inc
xor
sarl
fisttps
mov
mov
mov
mov
jg
sbb
out
popa
jecxz
mov
rcrb
fnstenv
xor
les
lods
jns
or
insb
xor
insb
rorl
cmp
sub
push
sbb
sub
loop
jno
jl
mov
popf
lahf
sub
mov
insb
xchg
fst
daa
dec
jae
in
adc
int
rcrb
cmc
enter
cs
or
int
push
cwtl
out
imul
mov
dec
stc
push
add
add
lret
xor
and
ret
in
xchg
in
je
jbe
leave
mov
or
jmp
push
aaa
test
pusha
fistl
ds
aas
sbbl
mov
out
mov
sub
shll
jle
lret
in
sbb
inc
jnp
jecxz
lds
fsts
push
and
sbb
outsb
or
xchg
rorb
mov
lret
mov
fnstenv
aam
or
mov
dec
cmp
icebp
in
popl
rcrb
data16
mov
jle
add
add
loop
pop
xchg
out
icebp
mov
push
inc
subb
jg
xchg
xorb
inc
in
imul
or
vmovddup
jne
gs
sub
cmp
aam
sbb
sbb
std
xchg
mov
jno
test
mov
or
in
cmp
mov
cld
jno
inc
mov
outsl
cmpsb
dec
and
out
pop
pop
out
jge
dec
or
add
xor
or
and
pop
ja
xor
sub
sbbb
push
outsl
push
lahf
call
aas
out
lods
insb
outsl
dec
popa
stos
repz
pop
mov
push
push
xor
dec
cmp
fimull
fs
imul
xchg
movsl
jmp
cli
mov
cltd
add
test
jnp
mov
das
cmp
jb
push
sbbb
je
imul
test
ds
jb
lret
xorl
repnz
mov
std
test
sub
pop
adc
out
lcall
shll
nop
mulb
jle
subb
pop
xor
inc
bound
add
jl
rclb
and
mov
fcoml
pop
sub
shrb
or
lock
sahf
out
arpl
jb
inc
je
leave
out
mov
pusha
bound
lret
aad
cmc
dec
inc
pop
mov
sub
xchg
pop
mov
rep
add
jl
shl
jle
leave
mov
mov
mov
adcl
pop
add
leave
pop
arpl
cmp
loope
mov
fwait
inc
pop
divb
xlat
xchg
cmc
shlb
lods
push
add
mov
sbbb
xor
in
mov
pop
ja
int3
nop
pop
sbb
cli
jns
and
jg
in
je
daa
add
xchg
pushf
mov
test
lods
ds
xor
or
fs
ljmp
sub
dec
mov
arpl
orb
jp
sub
add
lods
js
add
addr16
ret
mov
xchg
mov
mov
inc
pop
jg
or
mov
hlt
push
xor
inc
xchg
and
in
lds
push
sbb
mov
inc
nop
jg
loope
mov
test
std
push
int3
ljmp
push
pop
inc
sbb
test
js
ja
ja
inc
mov
out
or
cmp
mov
jo
adc
inc
push
xor
cmp
aas
push
adc
xchg
addr16
or
dec
dec
cmp
add
sbb
aam
jmp
or
mov
scas
inc
aam
push
lods
xor
mov
arpl
test
push
clc
jle
rolb
mov
sti
xchg
das
pop
sbb
outsl
bound
popf
push
add
push
mov
xchg
insb
inc
push
popf
sahf
add
lret
stos
xchg
outsl
xchg
xchg
sbb
jmp
push
mov
push
mov
cmp
scas
ljmp
pusha
jns
divl
les
mov
pop
mov
adc
ja
adcb
mov
add
in
jno
mov
inc
ss
adc
pop
xor
cmp
or
xorl
mov
insl
and
push
mov
aaa
push
fistl
or
xchg
mov
rclb
fsts
mov
sbb
cmpsl
mov
aad
fstps
pop
arpl
movb
jnp
or
jge
stos
pop
cmp
pusha
mov
in
inc
enter
popa
cmp
adc
xor
dec
ss
rcr
sbb
in
add
jp
xor
adc
addl
sub
adcb
xchg
sub
cmpsl
and
lods
shrb
push
cld
dec
xchg
or
sub
cmp
push
or
sbb
test
jle
mov
cmc
pop
xchg
mov
shll
xor
inc
jg
push
imul
add
push
jmp
pop
std
into
dec
pop
xchg
std
cmp
cmpsb
test
xchg
lds
cltd
cwtl
cmpsb
xor
jg
push
xor
inc
xor
loop
imul
les
neg
cmpsl
lods
aaa
adc
jge
stos
lods
ret
ja
orb
xchg
jmp
in
add
xor
push
push
fwait
pop
push
jcxz
mov
or
in
cmpsb
sub
inc
cmpsb
fidivl
dec
stos
xor
pop
aaa
push
xor
sub
adc
movsb
cwtl
mov
cmp
lock
sub
add
push
sbb
mov
adc
sar
mov
mov
enter
stos
add
imul
div
pop
gs
sub
fsubl
js
xor
mov
sub
jl
cmp
xlat
movsb
out
mov
fwait
in
fidivrs
popf
dec
xchg
sub
xor
stos
or
mov
fildll
mov
and
mov
int
inc
and
test
movsl
ss
jle
pop
sti
mov
aam
enter
sub
cmpsb
dec
pop
mov
adc
pop
or
inc
mov
out
pop
dec
add
mov
mov
scas
xchg
mov
xor
cmpl
iret
mov
pop
pop
or
js
inc
outsb
push
shlb
dec
dec
lea
pop
insb
loopne
ja
pop
sub
ret
testl
jmp
mov
inc
ja
add
orl
int
sbbl
and
orl
adc
pop
cwtl
xor
mov
jnp,pt
jecxz
mov
jb
sarl
mov
ss
fsubl
addl
cmpsb
cmp
test
pop
clc
dec
mov
inc
push
mov
popf
sub
imul
movsl
into
pusha
inc
icebp
mov
dec
imul
mov
cmp
inc
pop
cmp
fdiv
add
movsl
push
push
enter
popf
arpl
xor
push
or
inc
inc
dec
cmc
out
dec
test
adc
or
jbe
icebp
popa
loopne
jl
jae
mov
xor
cmpsb
arpl
xor
std
xor
jmp
mov
sbb
mov
cmp
dec
fisubs
popf
mov
outsb
add
jg,pt
mov
cwtl
sub
loopne
sub
in
mov
cli
mov
clc
mov
repnz
hlt
ljmp
ffree
inc
in
cltd
in
adc
and
or
sarl
test
mov
mov
xor
test
push
jmp
dec
push
lock
loop
cmp
imul
out
jg
ret
test
not
pop
stc
add
mov
imul
stc
rclb
pop
loopne
fwait
mov
sub
out
push
lea
and
adc
fcmovnbe
dec
mov
aam
or
mov
int
int3
xchg
daa
inc
imul
xchg
xor
pop
cmc
dec
jle,pn
imul
jg
sub
jne
pushf
or
mov
les
adc
or
mov
and
sbb
aas
clc
mov
and
inc
jne
lods
inc
jl
cmp
int
cmp
je
rol
popf
or
pop
inc
dec
xor
push
pop
lret
into
adc
clc
lds
inc
loop
sar
in
sbb
pop
addl
xor
inc
dec
sbb
repz
mov
faddl
or
and
imul
push
dec
xchg
mov
dec
pop
lret
xchg
das
into
cmc
dec
adc
sub
and
movsb
in
and
leave
clc
mov
push
inc
in
pop
push
add
mov
scas
call
xchg
fcomp
into
push
dec
sub
push
lcall
test
cmpsb
mov
jno
xor
hlt
add
add
imul
hlt
push
cmpsl
mov
outsl
mov
sahf
adc
add
xor
sbb
cmp
call
jne
push
xor
fsts
loop
or
push
fdivrl
shll
mov
and
fistl
int
lret
adc
cld
mov
push
and
stos
movsb
mov
mov
mov
repnz
into
cmpsb
xor
mov
test
xor
add
leave
add
pop
mov
lea
stos
cwtl
lds
test
dec
xchg
xchg
pop
push
cmp
arpl
pop
inc
arpl
cmpsl
popa
or
mov
inc
mov
mov
jge
cmp
bound
aas
add
enter
lret
lea
lahf
mov
or
mov
sub
imul
movsb
mov
sbb
dec
sbb
fcmovne
loop
stc
test
xchg
clc
mov
loop
ljmp
pop
xchg
data16
data16
cmpsb
and
jl
psubusw
fs
cwtl
aaa
jnp
mov
sbb
mov
aaa
fwait
outsl
pushf
daa
fcompl
mov
and
leave
xchg
jbe
scas
bound
cmp
lds
sub
jno
cld
inc
inc
pop
ljmp
pop
xor
out
repnz
push
push
cmp
hlt
xchg
int
mov
inc
lods
mov
adcb
in
add
pop
push
clc
lods
adc
dec
inc
enter
xchg
mov
push
or
mov
jg
pop
shlb
scas
hlt
jb
mov
lahf
jmp
add
xor
xchg
test
dec
cmc
orl
push
or
dec
push
lret
std
mov
sti
lds
jp
lret
push
or
out
xchg
jp
outsl
mov
aad
add
adc
test
adcl
mov
lcall
or
lock
jnp
cli
sub
pop
mov
sub
cmpsl
push
and
pop
add
shl
cmp
push
xbegin
aam
js
pop
adc
test
add
imul
int
dec
push
inc
jl
fbld
inc
inc
sub
cmp
fnsetpm(287
sbb
jmp
into
incl
sbb
lods
repz
ret
adc
ss
sub
mov
push
adc
fnstsw
insb
and
aam
dec
cld
out
pop
test
adc
xor
insl
out
sub
data16
mov
cwtl
cmpl
or
mov
or
gs
pop
cli
popf
les
fdivr
adc
in
mov
sbb
and
add
lods
dec
sub
movb
gs
xchg
xlat
mov
sbb
adc
movsl
jmpw
push
add
cli
icebp
cmp
sahf
fiadds
cmp
inc
arpl
pop
push
dec
gs
push
add
cmc
mov
inc
mov
and
xchg
push
rcrb
sahf
ljmp
int
cmp
or
jle
pop
stc
and
mov
movsb
jne
add
cmp
sbb
in
out
orb
mov
lahf
mov
in
rcr
cmp
xor
sub
pop
stc
jge
mov
aad
sbb
into
cs
fistpll
arpl
cmp
je
add
imul
push
push
sbb
out
add
add
sbb
lahf
cmp
out
mov
add
fistps
mov
mov
jle
cmc
lea
adc
into
or
popf
in
mov
imul
or
and
std
pop
mov
or
and
test
sbb
sbb
xor
fcomi
sbb
lcall
mov
mov
jle,pn
stos
push
pusha
outsb
adc
mov
hlt
adc
ficoms
cmp
mov
mov
adc
pop
pop
adcl
outsl
or
mov
pop
lods
inc
mov
loope
inc
sar
sub
cwtl
mov
inc
shlb
mov
popf
cmp
andl
push
adc
sub
mov
xchg
aad
mov
insl
cli
iret
arpl
jo
pop
divl
cltd
repnz
aaa
mov
lock
testb
adc
dec
sahf
sub
lods
into
mov
fsubr
bound
push
jbe
rcrb
std
adcb
sbb
lds
test
lock
push
call
adc
lods
sub
pop
lahf
rcrb
lea
xor
xchg
test
mov
sub
or
pop
enter
aam
push
push
inc
call
dec
aam
pop
push
jne
test
or
mov
loopne
xor
orl
jb
loop
pop
sarb
mov
rcrb
out
into
or
sbb
adc
mov
inc
scas
jnp
mov
pushf
xor
add
dec
jg
pop
push
mov
pop
sub
orb
cmp
imul
call
popf
mov
push
push
xor
sbb
fcoml
and
loopne
mov
stos
clc
push
outsl
xchg
and
jbe
inc
ret
mov
imulb
sub
addl
shl
mov
js
fabs
sahf
mov
push
xchg
push
xchg
fcomps
lods
repnz
dec
fsubrp
lret
jmp
jno
fdivl
mov
cmp
adc
jecxz
addb
xorb
arpl
fucom
lcall
jno
xor
int
dec
sti
adc
clc
movsl
dec
jne
pop
scas
sbb
or
arpl
test
inc
hlt
mov
sub
sub
inc
fcom
adc
std
dec
mov
mov
inc
cmpsl
fbstp
in
or
mov
sub
sub
insb
or
xchg
pop
add
mov
inc
pop
push
cmp
and
sub
icebp
mov
mov
push
xor
mov
insl
and
or
mov
stos
xchg
aas
jl
pusha
push
dec
push
mov
sbb
and
add
and
loope
and
push
xchg
pusha
or
scas
push
test
nop
mov
xchg
fwait
ss
in
stos
test
into
push
addr16
xor
mov
jns
out
mov
mov
outsl
cmp
mov
fwait
sbb
loopne
sahf
push
lcall
rcl
cmpsl
jp
mov
pusha
push
mov
addr16
jno
aaa
jmp
ja
test
inc
cmp
repz
adc
xor
rcr
jbe
push
inc
sbb
inc
jp
dec
fisttpll
jne
xchg
fists
dec
outsb
and
hlt
jnp
mov
leave
cmp
outsb
inc
loope
ja
sub
lret
inc
mov
dec
xchg
mov
stos
cs
inc
mov
jbe
rolb
cmp
sbb
lcall
inc
xor
sahf
mov
int3
dec
mov
xchg
jb
mov
xor
xchg
dec
pop
push
pop
test
dec
inc
mov
mov
ret
jns
mov
xchg
and
or
xchg
popf
push
mov
mov
xor
mov
lcall
jae
jmp
mov
sbb
jecxz
jb
cli
iret
add
and
push
add
mov
push
sub
xchg
sbb
mov
sub
xor
or
fnstcw
mov
imul
sub
sbb
adc
adc
lock
fisubl
add
push
mov
mov
push
test
loope
xchg
sub
add
and
scas
addr16
mov
push
loope
aaa
lahf
xchg
jg
lret
and
sub
dec
fiadds
jnp
repz
jne
fcmovu
lea
xchg
into
push
inc
inc
idiv
mov
xorl
jecxz
test
ja
ljmp
jns
arpl
shl
hlt
mov
jge
jns
shll
into
divb
pop
out
inc
test
out
orl
push
and
push
xchg
dec
ret
mov
pop
mov
cmp
adc
pop
inc
in
adc
cmp
dec
or
insb
std
pop
outsb
dec
mov
pusha
insb
fdivrs
mov
outsl
jns
jl
fwait
push
sub
ret
ja
xchg
pop
lock
addr16
lods
sbb
push
ss
mov
or
jns
ret
fucomi
scas
ss
rcrb
jp
arpl
int
das
inc
and
div
ds
addb
lods
fwait
je
aaa
into
xor
xchg
add
bound
mov
das
jle
cli
xor
or
hlt
xor
in
pop
aaa
push
scas
decb
push
sbb
sahf
sti
push
mov
rclb
xor
fstps
inc
jo
xchg
sub
out
popf
and
add
fcoml
sub
es
mov
jo
pop
fimuls
orl
shlb
and
jns
js
adc
out
stos
pop
adc
pop
hlt
mov
ret
and
sbbl
stc
addr16
flds
insb
jnp
pop
push
addr16
jp
push
aam
mov
dec
sbb
mov
in
jp
jae
adc
stos
loope
mov
loop
mov
sarl
add
jno
mov
sbb
cmp
sti
inc
cmp
jo
cmp
mov
sub
xor
stos
sbb
je
xor
sub
add
leave
movsl
and
mov
ljmp
pop
arpl
enter
in
hlt
dec
jg
test
test
jbe
shll
mov
test
jge
scas
mov
outsl
ret
adc
ficomps
mov
mov
cmpl
mov
jle
popa
cmp
loop
sub
rclb
jp
pop
and
stc
adc
loope
mov
cmp
shlb
fcompl
daa
mov
xor
bound
int
les
and
loope
cmp
inc
popf
jne
xchg
and
inc
stos
decl
arpl
test
pop
add
aaa
adc
stos
aaa
aaa
fdivs
stos
dec
mov
xchg
add
mov
add
xor
pop
test
pop
mul
mov
rcrl
movsl
mov
sub
xchg
or
and
data16
rolb
adc
inc
bound
add
jl
and
cld
leave
and
push
inc
imul
ljmp
inc
pop
stos
mov
cmpsl
mov
sti
pop
mov
mov
xor
les
mov
pop
adc
outsb
test
test
sbb
mov
mov
gs
jbe
dec
je
insb
icebp
lretw
cmpsl
xchg
add
cmpsl
ror
mov
int
sbb
pop
sar
fsts
lock
or
cmp
rcrb
xchg
and
mov
cmpsl
stos
jno
mov
xchg
xor
shll
or
in
add
cs
jns
adc
shll
repz
mov
jo
jle
lea
sbbl
mov
push
sbb
cwtl
adc
adc
sub
mov
mov
jae
mov
mov
dec
in
sbb
or
imull
xor
xchg
sub
mov
pop
incl
int3
cmp
adc
jbe
inc
sbbb
pop
pop
and
insl
addr16
scas
mov
movsl
push
cmp
pushf
inc
push
mul
push
ds
test
jae
icebp
vunpcklps
cwtl
sub
xor
jbe
and
arpl
pop
rcll
or
dec
mov
push
fldl
int3
pop
test
xor
push
pop
cmpsl
ret
push
in
dec
inc
jae
test
sub
sbb
dec
pop
jmp
test
rclb
ret
xor
notl
mov
inc
push
dec
stos
data16
mov
pushf
loope
sub
xor
xchg
inc
jecxz
push
xchg
test
fisttps
insb
adc
test
pop
xor
shrb
hlt
jns
enter
loopne,pn
into
jp
popf
inc
dec
xlat
bound
or
mov
add
pop
mov
or
jecxz
negl
xor
pop
adc
or
dec
sub
sbb
dec
movsl
xor
rcll
mov
push
sbb
das
adc
call
sti
dec
jp
jle
aaa
mov
or
dec
imul
dec
pop
test
jl
repnz
cmp
ret
das
cli
lock
arpl
or
rclb
push
add
mov
sub
mov
add
gs
out
out
mov
add
arpl
dec
stos
fsubrs
add
fwait
imul
mov
xor
inc
clc
mov
push
and
mov
sbb
out
iret
fisttpll
fdivp
int
enter
ficomps
ljmp
sbb
cmc
sbb
ljmp
mov
in
jp
mov
shl
cmpsl
mov
xchg
jo
cmpsb
incb
adc
jo
add
scas
aaa
xor
sub
mov
and
out
xchg
xlat
inc
call
nop
sub
es
push
test
pop
pop
add
icebp
cmp
enter
fsubs
ljmp
push
dec
ret
dec
enter
sub
mov
inc
outsb
mov
mov
aam
mov
movsb
dec
cmpsl
aad
mov
pop
mov
stos
movsl
inc
into
loope
and
and
jo
divl
inc
pop
inc
popf
in
fwait
xchg
and
mov
addr16
addr16
push
pop
or
jno
adc
xchg
jae
aaa
add
adc
push
add
andl
and
or
sub
mov
and
aas
out
xor
xchg
mov
inc
es
lret
mov
or
pop
and
pop
jl
mov
pop
scas
ljmp
aaa
jge
sbb
int
jg
add
pop
fiadds
push
pop
push
jnp
mov
subl
outsl
sbb
not
or
out
insl
je
stos
daa
jge
sti
add
ljmp
dec
mov
fs
push
jge
push
jmp
and
pusha
icebp
inc
les
xor
jle
or
xor
xchg
int3
iret
push
nop
cmp
stc
xchg
cs
xchg
jmp
jo
repnz
bound
outsb
cmc
mov
or
mov
ret
test
pop
loop
es
xlat
imul
mov
mov
movsb
sbb
mov
sub
loopne
mov
scas
mov
fs
imul
dec
pop
inc
frstor
fistpl
dec
enter
push
dec
es
jg
repz
dec
sub
hlt
test
sub
mov
or
mov
inc
imul
inc
cs
sub
sub
pop
dec
pop
and
pop
add
pop
nop
gs
loop
jb
mov
or
inc
and
and
mov
add
dec
ds
les
cmp
fs
sbb
xchg
jmp
scas
sub
push
mov
addr16
pop
mov
setl
dec
mov
int
jbe
jge
jb
les
dec
test
pop
jmp
mov
jae
aad
mov
sarl
mov
mov
pop
pop
lods
lock
insb
pop
push
jae
ret
add
mov
mov
imul
shll
fs
int
pop
scas
jl
cmp
mov
ja
cltd
in
frstor
stc
inc
insl
mov
pushf
out
cmp
pop
add
jae
cmp
add
repz
fwait
mov
mov
repz
or
cmp
fnsave
push
mov
fbld
push
popf
push
cmpl
shl
mov
pop
pop
jne
pop
loope
jne
mov
cld
test
arpl
or
adcb
xchg
jmp
sbb
xchg
xchg
mov
nop
cld
in
push
aam
in
push
call
sahf
jmp
push
loop
sbb
xchg
incb
fdivs
fadds
repz
and
mov
adc
aad
das
sub
sahf
push
sbb
jl
lret
stos
shlb
aad
movsb
mov
jp
lret
enter
mov
pop
and
lcall
lods
xchg
add
adc
push
jg
sbb
js
jecxz
pop
mov
or
cmp
in
cmp
sbb
xorb
fists
scas
aaa
repz
rcll
jne
scas
mov
and
adc
jns
sub
in
xchg
mov
jns
xchg
mov
jo
fcompl
jno
sub
scas
loop
xchg
das
cmp
adc
push
mov
aad
jecxz
inc
push
test
inc
sub
movsb
xchg
sub
xchg
fcmovnu
mov
and
sub
outsl
dec
adc
aas
lahf
add
mul
xchg
mov
cmpsb
sahf
clc
push
dec
andb
mov
and
repnz
in
xchg
sub
jnp
mov
mov
mov
aas
subl
xor
cmp
mov
fiaddl
jae
pop
sbb
cltd
or
nop
out
mov
gs
mov
mov
loopne
inc
xor
mov
xbegin
sub
cmpsb
lock
xchg
pop
xor
repnz
shr
lods
scas
sub
and
and
fidivrs
mov
push
mov
xchg
push
sub
test
test
adc
push
or
mov
out
pop
js
cli
out
enter
fwait
and
stos
mov
repnz
aam
sub
push
push
and
lret
leave
insl
pop
dec
cwtl
or
pop
jmp
nop
sbb
sbb
ret
and
into
cmc
lret
mov
sbb
adc
xor
mov
mov
cmp
insl
enter
decl
mov
pop
cmp
mov
or
or
rolb
dec
lret
xor
lret
mov
adc
test
or
in
jecxz
repz
jp,pt
out
xchg
lea
cmp
aam
rcll
int3
fwait
insl
dec
dec
mov
loope
jg
pop
dec
gs
mov
jmp
adc
aad
mov
sbbb
orl
daa
cmp
fcmovb
fistpl
dec
call
aad
inc
mov
jns
xor
lahf
mov
push
fwait
pop
shll
les
jae
addl
dec
add
inc
jp
push
add
arpl
aad
test
or
mov
pop
gs
into
mov
roll
inc
incl
rcr
xor
pop
or
mov
add
hlt
dec
movsl
gs
add
add
mov
int3
iret
cmp
dec
jo
or
add
adc
push
lahf
cmp
ds
ja
mov
xor
lods
insb
xchg
les
lret
add
cld
and
fsubs
addl
fisttpll
xchg
imul
inc
clc
in
out
jae
push
cmp
sub
xchg
pop
movsb
movsb
mov
jno
add
fcomp
push
xchg
ret
pop
sub
inc
cmp
ds
mov
add
mov
std
jae
jne
sub
out
popa
daa
adcl
lds
jo
int3
lret
mov
xchg
cmp
adc
mov
cli
ljmp
and
or
ficomps
jg
cmp
leave
cmp
pop
xchg
les
sub
inc
cwtl
push
scas
cmp
les
push
aam
jecxz
rolb
mov
xlat
xchg
jnp
add
cltd
in
and
and
xchg
sahf
sub
sub
cmpsb
mov
adc
roll
push
sub
inc
test
xchg
out
sti
leave
xchg
xlat
iret
xor
cmp
divb
stos
xchg
mov
adc
cmp
inc
xor
aaa
faddp
jl
push
or
test
fwait
dec
mov
in
jp
imul
iret
out
mov
sub
fidivrs
cmpsb
mov
iret
stos
call
iret
sti
mov
das
push
sbb
xlat
stc
xor
adc
jmp
xor
je
xlat
mov
inc
lds
xchg
test
pop
std
into
movsl
roll
sbb
cmp
mov
in
ret
es
xlat
mov
int3
jo
scas
sbb
jp
cmpsl
ljmp
jbe
sub
mov
push
rorb
cmc
jbe
xor
cmp
jmp
std
and
mov
or
imul
cltd
and
hlt
mov
icebp
addr16
cmp
push
faddp
dec
adc
xchg
outsb
pop
test
cltd
lea
adc
mov
inc
loop
cmpb
xlat
fisttpl
sbb
jns
mov
jo
mov
mov
cwtl
fistpll
ficoms
in
jns
push
aas
lahf
dec
pushf
mov
sbb
adc
enter
mov
fidivrs
addr16
mov
sahf
in
enter
fildll
inc
sub
dec
leave
jecxz
push
sub
dec
mov
push
adc
loop
dec
mov
push
jmp
js
clc
mov
aas
popa
lea
ret
or
dec
cmp
push
mov
mov
std
orl
pop
in
fnstcw
lahf
ljmp
movsl
roll
jge
sarl
push
mov
bound
jge
push
ja
popa
test
cmp
insb
lahf
lret
test
fwait
xor
das
sub
sbb
lahf
cmpsb
cmp
add
call
insl
lcall
rcrb
mov
lcall
cltd
shlb
xor
push
and
shll
ficompl
inc
adc
push
mov
mov
inc
xor
hlt
fsubrp
filds
mov
sub
clc
cs
aad
mov
jb
xchg
sub
movsl
inc
pop
push
mov
fcomps
testl
mov
xor
fstps
xchg
scas
roll
xor
xchg
push
lds
push
fidivrs
fwait
out
adc
loop
fldl
stos
add
fcmovne
add
dec
mov
xchg
xchg
loop
cmp
sub
repz
sbb
pop
ds
in
int3
lahf
pop
sbb
cmp
loope
stos
fsubrs
pusha
sub
out
out
enter
into
dec
bound
cld
sahf
pop
mov
push
test
cmc
scas
or
sbb
popa
insb
movsb
ja
loopne
shr
adc
test
mov
cmc
movsb
ds
sub
adc
or
das
cmpsl
lcall
ja
mulb
xor
xor
sub
mov
inc
pop
pop
push
int
cmp
sub
xor
and
adc
push
pop
xor
ljmp
xorb
enter
pop
out
and
inc
shrl
mov
pop
xor
int3
es
lea
xor
icebp
jl
nop
mov
inc
std
cmp
push
data16
fwait
sbb
cli
loopne
push
imul
push
xchg
cs
dec
push
inc
mov
mov
mov
cmp
out
lock
fiadds
adc
outsb
sbb
push
movsl
push
push
mov
dec
inc
jb
dec
push
mov
pop
cli
cs
sahf
in
inc
sbb
pop
scas
dec
inc
sub
in
sbb
jns
jl
push
xor
sbb
les
xorb
push
sub
nop
dec
adc
push
mov
mov
or
pop
mov
outsb
jge
shlb
pop
jae
data16
xchg
cmp
or
fiaddl
in
push
inc
push
dec
or
inc
dec
clc
jne
inc
aaa
in
scas
jp
mov
mov
jbe
push
loop
int
outsb
cwtl
push
loopne
cld
bound
popf
mov
pop
push
aad
xchg
mov
icebp
out
jp
ljmp
pop
mov
push
hlt
inc
ds
jb
mov
repnz
repz
pop
push
push
push
sbb
mov
cmp
pop
push
adc
jne
pop
adc
setb
push
packsswb
pop
scas
push
mov
mov
ret
les
mov
and
dec
movsb
mov
stos
add
mov
pushf
pop
jge
mov
sbb
add
jl
pop
out
ret
sbb
ljmp
addps
mov
rorb
loopne
inc
fs
sbb
dec
leave
stos
pushf
outsl
jbe
pop
pop
mov
shlb
fwait
aam
outsl
fstp
out
push
ret
into
into
push
mov
push
mov
aaa
out
insb
pop
adc
xchg
sub
xchg
and
cltd
cld
repnz
xchg
mov
mov
cmp
mov
xchg
loope
sahf
test
mov
popf
mov
and
mov
andb
das
mov
frstor
jle
pop
subb
lret
or
pusha
or
jno
inc
cmp
lock
jae
push
lods
inc
mov
add
out
mov
outsl
pop
push
mov
add
push
mov
ljmp
loopne
cmp
nop
mov
jae
int3
push
lea
outsb
cmp
sbb
jo
mov
rcr
sbb
addr16
pcmpeqd
or
or
add
xor
xor
jecxz
and
mov
mov
vmwrite
mov
dec
push
jns
adc
lret
dec
into
mov
aam
into
cmp
push
dec
or
std
insl
add
imul
sahf
mov
outsl
in
mov
or
icebp
into
lret
in
aad
cmp
andl
and
inc
scas
push
mov
hlt
divl
xchg
in
push
jecxz
inc
jg
pop
out
adc
and
into
bound
and
pop
or
imul
cmpsl
cmc
adc
stos
cmc
mov
inc
pop
pop
lea
enter
or
scas
mov
cmp
and
ja
stc
adc
mov
repz
xor
fbld
or
std
inc
push
out
cmp
roll
pop
mov
inc
push
cmc
mov
jb
pop
arpl
pop
push
in
mov
ds
and
loop
xor
fldt
gs
das
aaa
mov
inc
jecxz
jo
and
push
cmp
test
push
ss
fsubp
cmpsb
data16
cli
push
push
inc
jno
push
inc
stc
inc
jno
mov
push
test
divl
mov
lds
loop
add
ljmp
inc
sahf
addr16
jo
in
mov
out
push
adc
repnz
mov
xor
loope
mov
pop
test
inc
js
dec
js
or
sub
call
aas
and
es
xlat
stos
adcl
dec
mov
pop
int3
pusha
sub
xchg
std
lock
mov
and
data16
mov
scas
cmc
push
inc
add
adcb
je
int3
stc
jecxz
adc
sbb
lahf
jmp
mov
pop
call
mov
mov
cltd
cwtl
cmc
call
popl
in
mov
out
mov
cmc
mov
inc
mov
dec
mov
or
pop
lahf
or
cmp
ret
mov
lahf
lret
aaa
push
int3
jb
push
sar
sbb
mov
sbb
mov
out
fstp
sub
sbb
js
das
mov
adc
shlb
lods
scas
ret
adc
pusha
outsl
cmp
sub
clc
fisubrs
int
dec
scas
lock
aaa
jne
ss
lahf
lahf
push
stos
imul
lea
loop
scas
push
les
das
iret
shl
jns
mov
xchg
gs
scas
sbb
repnz
cmpsl
jb
pop
stc
stc
xchg
or
xchg
es
rolb
jmp
push
pop
mov
imul
mov
out
addr16
shrb
rcr
jns
test
cli
jle
pop
cmp
mov
mov
push
sbb
cmp
je
inc
shlb
add
sbb
cli
sbb
ds
lds
adc
fisttpl
popaw
cwtl
out
or
imul
xor
fsts
sahf
or
xchg
cld
sub
pop
and
pop
xchg
sub
adc
cmp
mov
add
rclb
pop
stos
loopne
cmpsl
mov
add
decb
xchg
test
insl
mov
cmp
mov
sahf
cmp
and
ror
mov
mov
dec
adc
add
or
dec
aad
dec
sbb
cmp
notl
cwtl
lds
sbb
xor
adc
adc
ljmp
jb
stos
lock
int
jp
xor
xor
lcall
pusha
outsb
mov
add
stos
push
lret
sub
fidivl
jecxz
scas
add
inc
out
xchg
push
in
adc
mov
repz
inc
jl
mov
mov
cmp
lret
aaa
andb
pop
jno
je
xchg
push
icebp
in
mov
arpl
xor
das
dec
push
jle
les
mov
cmp
mov
jg
xchg
push
loope
jp
lea
xor
fldenv
pushf
out
xchg
je
push
dec
popf
cmp
adc
jmp
movb
jge
jl
or
out
mov
push
arpl
dec
push
xor
xchg
mov
jnp
xchg
inc
cmp
pop
push
dec
pop
repz
popf
sub
sub
clc
and
fcoml
inc
dec
or
fmuls
adc
mov
nop
add
notl
add
or
out
ja
fwait
or
test
movsl
jne
push
inc
out
in
xchg
rcll
xor
out
xor
repnz
movl
data16
cmp
mov
mov
js
mov
jecxz
xchg
pop
mov
sub
test
add
mov
iret
mov
cmp
sub
xchg
and
jnp
pop
dec
jg
in
and
in
xchg
popf
dec
cmc
mov
dec
jmp
mov
int3
sahf
push
sub
testb
dec
aaa
test
jp
mov
xchg
stos
push
popa
js
push
xchg
and
pop
mov
ss
outsl
and
imul
int3
pop
xchg
inc
subl
jecxz
lcall
xchg
inc
add
mov
jns
jle
mov
push
loope
hlt
mov
jp
xchg
repz
xor
and
iret
ljmp
push
and
sbb
fsubr
xlat
cli
jmp
sub
adc
hlt
fstl
shll
sti
scas
ffreep
out
xchg
sub
out
imull
xor
aad
into
and
call
push
cmpl
dec
enter
inc
inc
xchg
pop
fwait
sarl
sbb
xchg
lods
add
clc
add
sub
hlt
daa
xchg
mov
pop
push
and
clc
mov
add
sub
push
push
and
das
loop
sbb
cmp
aas
ss
stos
ficompl
popf
push
jno
imul
cmp
leave
mov
push
jle
pop
imul
std
and
setnp
fmul
jl
mov
outsl
mov
pushf
jbe
imull
aas
pop
test
sbb
jbe
das
lret
mov
dec
jl
stos
push
add
fdivrs
sub
aad
push
and
aaa
xor
out
jnp
jae
xchg
dec
or
out
and
mov
or
jp
cmp
call
aas
cs
adc
call
inc
pop
jge
xor
add
push
mov
rep
notl
sub
and
int3
aaa
shl
std
dec
push
xor
fstl
xlat
sbb
enter
mov
mov
pop
rcl
mov
adc
sub
jmp
lcall
mov
cmp
sub
mov
jmp
or
fbld
pushf
mov
mov
xchg
mov
lahf
mov
xor
pop
int3
movsb
lcall
pop
dec
add
out
xchg
in
mov
fwait
and
shrl
push
das
and
fists
xchg
out
cmp
adc
pop
push
xchg
fadds
mov
out
mov
push
inc
push
add
iret
scas
pop
xchg
add
pavgb
sbb
rol
out
out
lds
mov
inc
mov
or
out
mov
lcall
sub
mov
outsb
pop
mov
bound
mov
cmpsb
inc
daa
ljmp
push
pop
fsubp
and
stos
jl
mov
in
dec
dec
sub
cmp
repz
mov
add
js
out
adc
outsb
fistps
inc
mov
push
test
jmp
js
dec
cmpsb
push
gs
lret
std
add
xchg
das
push
push
stos
inc
sub
insl
lretw
mov
mov
and
dec
lods
movsb
mov
xlat
andb
lret
pusha
push
sub
repnz
test
nop
mov
addr16
inc
push
push
icebp
loope
cmp
repnz
inc
les
cmpsl
ror
and
push
push
stc
daa
dec
leave
pop
xor
sbb
loop
mov
test
int
xchg
push
imul
lcall
mov
xor
sub
popa
sar
cmp
mov
dec
mov
cltd
cs
je
sbb
pop
sahf
push
adc
ljmp
add
lock
add
and
xchg
imul
ret
xor
mov
out
cmpsb
xor
movsl
add
lea
or
popa
push
mov
std
or
aam
dec
sbb
xor
xor
cmpsb
incb
push
sub
dec
cmpsb
ret
sub
aaa
push
lcall
cmp
es
add
mov
cmp
add
mov
fstpt
je
or
lea
jge
xor
shrb
mov
xorl
scas
fstl
pop
call
in
test
insb
pop
fstpl
xor
imul
mov
lahf
push
cltd
repnz
jmp
lods
repnz
cmpsb
rclb
out
xchg
xchg
and
ret
int3
fstpt
or
stos
jnp
mov
add
jg
jno
movsl
sub
cmpsl
add
dec
push
and
std
add
imul
sti
gs
adc
push
or
sbbb
push
arpl
sbb
inc
fcos
mov
mov
dec
xchg
inc
daa
insb
and
rcrb
add
mov
mov
lea
inc
shll
pop
ret
popa
or
jl
insl
dec
fstpl
cmp
ret
pop
dec
push
cmp
mov
cli
sbb
mov
lret
sub
pop
into
in
into
clc
out
cmp
testb
mov
out
xor
scas
lcall
xlat
lea
pushf
arpl
push
popf
add
and
add
in
shrl
adc
icebp
into
sbb
or
fwait
sbb
add
je
mov
dec
les
es
jmp
sbbl
xlat
add
jecxz
pop
fldl
scas
hlt
mov
fidivrs
test
loopne
movsb
sub
ficomps
inc
loop
push
nop
mul
or
inc
aas
xor
or
xchg
jne
scas
stc
dec
loopne
daa
sub
add
xor
out
cmp
ja
adc
subb
nop
jnp
outsl
fisttpll
dec
jns
fisubrs
and
mov
cmp
and
jbe
pop
dec
or
repz
push
dec
and
out
cltd
pop
and
push
xchg
push
jp
pop
lods
jno
lods
push
mov
data16
and
mov
loop
lret
test
movsb
mov
mov
jp
mov
xor
dec
xchg
cmp
fwait
dec
xchg
jne
sbb
jae
xor
pusha
push
into
rcrb
inc
push
movsb
pop
sub
iret
mov
in
aam
ljmp
test
push
sbb
out
or
cld
jg
loop
ret
in
add
js
or
out
in
jnp
ss
loop
popf
in
das
jo
xor
mov
lret
sbb
push
mov
lds
fstp
jl
icebp
push
push
sbb
xchg
shlb
pop
xor
or
pop
movl
subb
mov
or
fisttpl
lret
fdivl
and
cmpsb
mov
push
mov
fistl
rclb
dec
scas
xor
dec
push
and
dec
fwait
or
clc
cmp
and
fs
ror
add
inc
push
xchg
int
xchg
stos
addb
ja
xchg
stos
adcl
rcrb
or
push
sahf
mov
loop
jne
popf
xchg
push
jl
inc
out
lcall
jmp
lods
bound
daa
subb
jg
sbb
andb
fwait
sub
data16
shlb
nop
cmp
lahf
andb
jecxz
pop
or
adc
and
adcl
jg
add
movsb
mov
dec
movlps
icebp
xchg
push
dec
sbb
add
sti
sub
jg
shlb
clc
xchg
cld
arpl
movsl
mov
ffree
test
pop
mov
xor
inc
lods
pop
testl
xchg
gs
cmpsb
mov
inc
xor
sub
repnz
mov
lea
xchg
mov
decb
mov
push
xor
std
loop
lcall
lock
lcall
arpl
jl
sti
cmpsb
fisubs
inc
dec
inc
aad
out
or
mov
iret
mov
or
cmpsl
loop
loopne
adc
or
in
inc
or
and
inc
nop
lcall
xchg
lods
adc
nop
dec
movsb
xor
cmpl
mov
mov
fldl
inc
cmpb
xchg
andb
addr16
inc
or
cmpsb
add
cmpsl
sahf
ljmp
lcall
test
int
test
js
xor
mov
mov
sarb
insl
testb
xchg
inc
imul
xor
jle
gs
mov
fldl
xchg
fdivl
inc
cmp
jp
xchg
pop
mov
lea
daa
imul
and
into
or
outsl
add
mov
pop
push
inc
sarb
rcr
repnz
movl
inc
test
inc
xchg
mov
shl
push
and
sbb
dec
or
or
jmp
push
xor
gs
aam
test
daa
arpl
cmp
mov
pop
jmp
dec
jg
insl
inc
mov
dec
inc
cwtl
movsl
out
inc
fldenv
jns
shrb
inc
fsubr
ljmp
or
rorl
cmpsl
ss
ret
xchg
pop
into
subl
fstpl
and
adc
cmpsl
mov
nop
adc
fsubrl
into
push
pop
jle
pop
sub
loopne
and
shl
adc
dec
mov
pop
xlat
fsubrl
je,pt
ds
ljmp
or
aas
push
sub
in
out
mov
dec
movl
sub
xchg
sti
push
nop
adc
loope
mov
jno
dec
lcall
inc
enter
add
xor
inc
ret
pop
push
fcmovnu
pop
xor
and
xor
xchg
test
mov
sbb
cli
jmp
insl
or
xchg
lock
xor
adc
mov
outsb
jmp
enter
lcall
xchg
xchg
out
aad
pop
sbb
jo
into
jo
and
cmp
add
sub
int3
pop
mov
dec
or
loope
lds
orb
iret
xor
pop
mov
mov
jno
out
pop
sbb
push
lea
xor
iret
fadd
xchg
int
test
roll
and
xchg
pusha
cs
or
inc
adc
dec
push
pop
nop
push
out
jne
jne
xchg
push
movsb
ror
outsl
dec
add
int3
add
or
jbe
jnp
hlt
cmp
jmp
aas
push
sti
je
test
mull
mov
inc
push
adc
xchg
loope
test
insl
cmp
sub
fldenv
sub
repnz
cmp
add
cmp
insl
xor
movsb
push
push
sbb
jecxz
push
daa
push
clc
pop
xor
popa
xor
jae
andl
ret
inc
das
scas
ja
std
fldl
rcl
negb
sti
cmp
push
adc
jnp
lahf
stos
cmc
stos
scas
jmp
cld
arpl
std
push
movq
stos
pop
fldl
fdivrl
sub
jae
sub
stos
shll
clc
push
pop
jecxz
jae
orb
loop
insb
pop
sarl
cmp
test
jne
cmp
xchg
out
cli
loop
inc
sub
les
dec
rcrl
push
cwtl
popf
je
mov
jecxz
leave
repnz
out
mov
ds
pop
mov
inc
add
mov
int
mov
xadd
lahf
jnp
ror
imul
rcrl
ror
sub
rol
insl
call
out
sub
icebp
xchg
and
rol
inc
push
inc
xor
push
mov
pop
sbb
and
and
mov
clc
or
scas
movb
dec
out
call
out
xchg
dec
cli
add
add
push
xor
mov
push
jnp
into
roll
pop
test
in
mov
mov
idiv
in
mov
out
and
add
adc
mov
pop
pop
push
mov
push
scas
mov
lea
pop
cmpsl
mov
sub
stc
lods
fdivl
add
dec
aas
and
lods
mov
xor
push
or
xlat
cltd
aam
testl
dec
popf
ret
pop
and
push
lret
push
insb
pop
leave
cmpsl
jmp
in
dec
adc
xchg
xchg
xchg
rcll
adc
out
lock
sub
dec
imulb
pusha
out
adc
xchg
sub
jae
outsb
mov
ljmp
ror
shrl
mov
and
nop
sub
js
lock
or
xor
push
idivl
loop
addr16
sub
jns
cmp
xchg
xor
pop
xchg
push
mov
and
ds
dec
ds
cli
aam
pop
js
enter
sub
lock
cltd
fucomi
mov
test
adc
scas
jb
pop
add
stos
ja
outsb
cmp
jecxz
pop
sbb
jae
cmp
mov
dec
jbe
jecxz
mov
das
fstpt
dec
add
ja
hlt
test
rol
push
jns
sub
mov
jecxz
xor
adc
cmpsl
push
xchg
push
cmp
adc
mull
mov
mov
fsts
mov
cmp
xchg
push
xorl
scas
xchg
pshufw
orb
push
jl
ret
pop
aaa
sarb
sar
subb
cmp
jns
imull
cmp
mov
es
imul
movsl
cmp
jg
outsl
mov
pushl
lcall
cmp
mov
xlat
jp
adc
cltd
inc
dec
mov
xor
lock
jmp
xchg
pushf
mov
cmp
add
test
lods
scas
clc
faddl
mov
mov
lods
jle
movsb
fisubs
mov
cmp
or
std
sub
adc
popf
imul
lock
fmuls
cltd
cmp
cmp
loopne
cli
push
cli
out
and
jns
fdivrs
push
jno
push
mov
jp
ret
mov
mov
mov
lcall
pop
dec
jae
dec
pop
jmp
pop
add
ds
jns
inc
ficoms
stc
outsl
fdivp
cmp
out
adc
dec
cld
adc
adc
in
pop
push
mov
orb
mov
out
inc
into
movsl
jno
sbbb
mov
rolb
sahf
rcll
pop
cmp
cmc
cmp
in
cli
test
iret
xlat
les
sub
inc
stos
lret
push
jle
test
popa
and
fimuls
lods
out
in
incl
mov
lret
movlps
xchg
inc
sbb
loopne
jmp
js
sbb
jmp
loope
inc
jo
sbb
and
lds
pusha
mov
scas
int
xchg
mov
pop
adc
pop
out
push
push
pop
pusha
push
orl
lret
mov
imul
ljmp
xor
bound
cmp
mov
xor
push
sarb
sbb
in
les
xor
cmp
movsl
dec
add
push
add
jns
inc
lret
ljmp
mov
pop
cmp
mov
sbb
cmpsl
push
xor
lods
mov
fs
push
pop
ds
loopne
jecxz
mov
add
ds
iret
jg
mov
mov
pushf
fadds
mov
jnp
pop
pop
push
pushf
cwtl
add
scas
sbb
jge
xchg
adc
dec
insl
fwait
or
dec
xchg
pop
push
les
xchg
jns
ds
cmc
setne
sub
stos
jmp
xchg
mov
or
xchg
cmp
cli
das
mov
test
push
mov
pushf
mov
or
popa
add
test
xlat
cmp
cmp
mov
add
pop
xorl
sub
adc
dec
push
inc
testl
in
dec
pop
addl
jp
stos
out
xchg
ljmp
mov
jno
icebp
lcall
mov
test
xor
sub
or
push
in
dec
std
stos
inc
addb
cmp
call
xchg
sbb
push
loope
xchg
shll
mov
push
xchg
fs
iret
ds
jle
addb
addr16
mov
jae
inc
js
push
jmp
ss
mov
insb
in
mov
lea
repnz
or
pop
mov
mov
data16
in
adc
sub
cmc
movsl
xor
inc
jne
inc
std
inc
and
in
mov
pop
ja
sbb
cmpsl
dec
lret
mov
fistpl
xchg
xor
fdivl
hlt
iret
je
jo
sbb
aaa
or
add
shl
or
xchg
xchg
in
xor
cli
icebp
jg
push
pop
clc
push
mov
ja
dec
jns
scas
add
insb
dec
mov
cmc
sarb
push
movsl
scas
cmpsb
mov
jle
adc
leave
cmp
push
outsb
fldl
daa
cltd
nop
shll
add
jb
pop
mov
dec
gs
mov
sub
insl
push
sbb
int3
add
lods
sub
lahf
push
sahf
pushf
pop
mov
scas
orb
mov
test
pop
jno
sti
push
ret
sbb
fisubrl
sti
cltd
and
sbb
cmp
in
sbb
and
mov
or
fisubs
fneni(8087
fsubl
js
xlat
inc
not
scas
jnp
xlat
xchg
gs
sbb
ljmp
stc
imul
lods
jmp
shlb
shrb
xor
xchg
test
scas
dec
mov
add
xchg
aad
mov
fst
sti
xorb
out
fistpll
shll
cmpsb
mov
lahf
mov
dec
push
push
jb
xchg
mov
cld
sbb
fstpl
or
cltd
leave
mov
in
mov
fistl
popf
aaa
and
pop
dec
aam
imul
sarb
inc
call
es
das
jns
lea
pusha
out
shll
push
bound
dec
lds
ljmp
inc
test
cmp
pop
dec
dec
mov
jo
mov
insl
idivb
cmp
dec
push
cli
cld
push
sub
enter
lahf
push
adc
cltd
push
dec
outsl
das
xchg
mov
push
fistpl
mov
adc
in
aas
int
mov
jmp
cli
fs
pop
es
lds
xchg
movups
mov
lock
shlb
psubusb
in
fwait
sbb
or
lcall
loope
sub
insl
jo
movsl
mov
ret
je
sub
mov
imul
or
push
jae
ljmp
mov
mov
mov
sub
out
mov
jecxz
nop
cltd
pop
sub
cld
mov
cmpl
mov
scas
testb
dec
gs
fldenv
or
sub
sahf
push
lods
and
clc
lahf
mov
mov
arpl
movl
sbb
push
xchg
dec
int3
jge
outsl
outsl
test
into
addr16
and
rcrb
sub
inc
ret
hlt
jle
scas
inc
addr16
mov
xor
lea
sbb
mov
out
cmpsl
hlt
sbb
xor
sti
push
in
jbe
fcomi
xchg
sbb
cld
scas
fildl
dec
popa
push
sbb
jg
fdivrp
dec
nop
lret
mov
adc
jp
add
cmp
jmp
xor
and
in
icebp
mov
push
inc
bndstx
push
and
push
or
jbe
fcmovnb
sub
xchg
sub
mov
outsl
dec
lcall
aas
or
loopne
ret
mov
and
pop
inc
das
out
lock
fisubrs
cld
insl
out
jns
mov
dec
pop
sahf
mov
xor
pop
push
int
hlt
outsl
or
int
adc
add
adc
and
xchg
popa
jg
pop
rcr
jae
into
insb
jmp
and
stc
jnp
jge
inc
jecxz
movsl
scas
ss
iret
jge
mov
lods
or
sub
stos
push
enter
fsubrs
mov
add
adc
cmp
leave
xor
out
and
cmp
movb
fsubrl
mov
movsl
scas
frstor
hlt
xlat
jae
fiaddl
ja
pop
pop
daa
lea
fidivs
lahf
aam
or
je
pushf
push
sbb
fsubr
negb
jl
sub
lods
lods
loope
add
push
xchg
dec
iret
and
cmp
movsl
in
jmp
sbb
fcomps
or
loop
rorl
jp
imul
jmp
in
les
aas
ljmp
adc
push
xchg
or
lea
mov
or
std
leave
pop
mov
les
jb
xchg
les
popa
scas
imul
inc
inc
int3
out
dec
mov
push
lods
cltd
icebp
call
aas
jbe
popf
pusha
pop
inc
sub
icebp
jp
adc
lret
decl
aad
jle
fisubrl
add
sbb
insb
loope
lahf
jnp
inc
pop
mov
mov
and
push
xchg
aam
outsb
dec
insl
add
jl
mov
adcb
es
sbb
in
pop
jmp
push
mov
lds
gs
jle
pop
cmpsl
push
pop
mov
push
lret
out
fiaddl
repnz
dec
lahf
or
popl
popa
scas
and
xor
sbb
out
dec
sub
outsb
cwtl
roll
push
out
dec
or
pop
pop
fidivs
xchg
insl
mov
or
xlat
aas
shl
or
sub
test
lcall
call
mov
inc
popa
mov
xor
inc
es
and
inc
test
bound
daa
jmp
lds
test
aam
popa
push
dec
cmpl
and
pop
sbb
test
dec
sub
ja
sar
fs
pop
inc
inc
sub
mov
arpl
repz
rcrb
mov
je
imul
sbb
fsubl
inc
push
push
push
dec
data16
adc
mov
aad
xlat
pushf
cmp
push
dec
adc
sub
pop
pop
adc
mov
pop
dec
and
les
adc
js
sub
int
adc
lret
mov
xchg
mov
in
addr16
sbb
mov
or
mov
mov
mov
movsl
cld
in
xor
test
add
sahf
push
adc
insb
imul
mov
mov
sbb
addb
inc
into
fldl
fldl
ljmp
push
jo
addb
rorb
mov
xor
nop
adcl
mov
mov
lods
insl
rcrl
push
adc
mov
cmp
sub
xchg
cli
push
aad
iret
mov
fimull
mov
popa
iret
mov
xor
shll
mov
rorb
div
mov
scas
or
xchg
or
fstps
call
das
xchg
fdivl
mov
sbb
push
inc
repnz
mov
adc
xchg
mov
into
or
mov
aas
shll
push
sti
cmc
sbb
scas
inc
gs
jbe
push
jbe
and
loope
repnz
int
pop
jb
cltd
in
inc
cwtl
jg
insb
xor
aam
or
adc
adc
shl
mov
je
popf
fistps
bound
sub
jnp
jle
dec
mov
movsb
lret
and
hlt
enter
sbb
cmovno
jno
mov
shll
jg
mov
out
pop
ror
test
rol
or
add
shlb
imul
jns
ror
sbbb
fcomps
mov
faddl
pop
dec
arpl
or
scas
xchg
lock
shlb
or
decl
and
mov
int
sub
test
mov
pop
xor
mov
ret
lds
pop
or
xlat
in
cmp
mov
push
and
lahf
inc
mov
cmpsl
out
dec
cmp
cmp
add
lahf
and
push
sbb
fnsetpm(287
mov
shlb
cmp
xchg
sub
jge
cmp
mov
cmpsl
fstps
out
shl
adc
mov
add
das
into
fisttpll
out
adc
popf
xor
mov
jnp
add
inc
cmpsl
lods
add
lea
mov
sahf
jns
jno
dec
sahf
mov
jecxz
add
jecxz
inc
in
stos
and
out
loop
in
xchg
and
dec
es
roll
insl
jne
insb
adc
cmc
ds
add
cmpsl
scas
mov
push
fucomip
jmp
add
mov
adc
xorb
inc
popa
and
in
leave
and
enter
pop
das
and
cmp
lahf
fsubp
or
mov
xor
mov
fidivl
pop
popa
inc
cmpsl
loope
mov
and
push
jae
mov
mov
sbb
insb
xchg
popa
ja
jl
cmc
fidivs
call
inc
insl
push
mov
test
hlt
fs
sbb
push
xchg
jp
leave
ja
mov
faddl
daa
adc
fcompl
aad
sbb
add
xor
xchg
cli
cmpsl
xor
sahf
mov
imul
xor
xchg
shll
pop
cmp
test
push
xchg
daa
mov
push
shrl
xor
ret
icebp
sub
jecxz
xchg
xorb
pop
pushf
scas
lahf
or
lahf
int
mov
ss
xchg
std
mov
push
jb
dec
repz
dec
push
inc
pop
cwtl
mov
mov
shlw
mov
rorl
lahf
and
test
dec
int3
pop
add
inc
shrb
lcall
aam
pushf
cwtl
fs
test
ret
sub
bound
mov
jg
sub
adc
xchg
outsb
jmp
data16
movsb
mov
inc
cwtl
xchg
insl
push
pushf
pop
adc
xchg
lret
clc
push
in
pop
aaa
in
fiadds
inc
xchg
cmp
pop
cmc
push
fmull
fcmovbe
stos
and
lret
stos
xchg
mov
sub
xorb
je
jo
lock
test
inc
mov
pop
nop
dec
xchg
mov
xor
fs
into
and
xchg
pop
push
pop
push
pop
dec
jmp
pop
stos
out
cld
out
enter
cmpsb
or
inc
mov
and
pop
sahf
test
add
nop
std
shrb
mov
add
inc
fcomps
jae
cli
and
and
inc
dec
pushf
clc
loopne
divb
icebp
jbe
push
xor
test
andb
out
fsubrs
aaa
dec
dec
xchg
rcl
xchg
dec
movsl
call
add
and
movsb
out
incb
mov
stc
adc
imulb
out
mov
out
mov
jbe
sub
hlt
ror
sub
cwtl
mov
or
fstpt
fistpl
adc
scas
aam
ret
add
js
out
adc
faddl
add
ror
lds
dec
cmp
out
dec
mov
xchg
fs
xchg
xchg
xor
cmpl
push
ljmp
cmp
shl
rcrl
sub
fidivs
imul
sbb
pop
andb
pop
sbb
pop
sbb
adc
inc
int
push
xor
push
pop
aaa
push
mov
inc
out
test
xchg
jb
inc
sub
lds
scas
stos
ror
insl
cltd
sub
je
xor
mov
xor
repnz
mov
jmp
mov
mov
jecxz
dec
adc
mov
mov
jecxz
adc
pop
mov
ljmp
pop
jl
ds
movsb
je
dec
in
jbe
adc
push
jns
std
jp
sub
rorl
int3
mov
testl
push
ja
fstpl
push
lret
into
sti
push
cmpsb
stos
fdivrl
lret
pop
pop
aaa
inc
movsl
adc
pop
lret
and
and
test
inc
cmpsb
mov
mov
mov
adc
jo
jne
neg
cmp
mov
outsb
add
fucomi
arpl
push
ficomps
mov
dec
pop
fmulp
aas
cmpsl
push
sub
sbbb
inc
dec
sbb
insl
sub
mov
xchg
test
push
mov
ficompl
cmp
call
outsl
das
lods
adc
outsl
push
pop
ljmp
das
je
ja
jb
dec
and
dec
dec
inc
jno
and
in
sahf
mov
mov
mov
dec
into
mov
daa
enter
into
enter
addb
mov
ret
es
daa
fistps
leave
loopne
jbe
test
push
xchg
ljmp
imul
mov
shrl
mov
imull
push
add
jmp
mov
sub
mov
and
pop
or
add
pop
mov
into
pop
mov
js
stc
test
inc
frstor
aam
push
jo
lea
and
lret
les
mov
mov
and
cmp
xor
mov
mov
stc
adc
mov
jp
cmp
and
loopne
dec
sbb
push
pop
adc
lcall
jns
scas
inc
in
push
sbb
insl
dec
jnp
xchg
fs
int
push
sbb
pop
jbe
push
out
xchg
push
add
or
pop
mov
dec
inc
mov
xor
and
xchg
xor
aas
sub
rorl
cmc
jno
jae
insb
lds
push
xchg
cwtl
fwait
push
or
cmp
pusha
xchg
adc
pop
inc
cmp
mov
mov
ljmp
pop
in
gs
xchg
xor
inc
jle
insl
add
sbb
negb
or
in
sbb
xchg
and
xchg
jns
xchg
xchg
sub
gs
ja
push
xchg
cmp
jg
jmp
movsb
dec
cld
les
add
imul
add
ljmp
aad
mov
scas
and
mov
cmpsb
or
je
pop
sahf
subl
cmp
jl
sbb
cs
loopne
or
pop
es
ret
jmp
popf
xor
mov
loope
lock
push
xor
fmuls
outsb
push
adcl
inc
dec
imul
aam
add
xor
xacquire
push
and
fsubr
repz
movsb
push
xor
es
mov
pop
adc
faddp
fisubl
das
mov
jns
out
out
pop
inc
sub
push
or
pop
loope
popa
out
mov
adcb
les
inc
cmc
sub
jb
bound
xlat
jbe
aaa
lock
clc
add
dec
dec
sbb
fimull
out
mov
jns
push
pop
sbb
shlb
ds
pop
addr16
xlat
jl
jle
pusha
fdivp
adc
cmp
push
jb
das
mov
int3
mov
mov
add
add
loop
jge
pop
sub
cmp
testl
popa
sub
push
and
aas
ljmp
cwtl
insb
fs
jo
adc
add
mov
nop
cmpsl
pop
push
into
xchg
jecxz
mov
add
fistpll
js
mov
push
push
or
mov
lock
das
out
inc
inc
pop
push
xchg
fwait
loope
xchg
imul
add
push
je
mov
adc
jmp
out
shl
add
lds
divb
or
fildl
gs
pusha
mov
push
mov
fs
or
cli
js
pop
push
test
xor
loop
lea
icebp
xlat
lahf
out
or
mov
inc
sbb
push
ret
cli
jmp
mov
xor
sbb
fwait
ss
mov
js
jns
pusha
shl
mov
fstl
mov
cmp
out
out
jmp
jmp
jno
xor
jns
sbb
sbb
je
sub
test
mov
pop
ljmp
lods
push
sub
mov
sub
push
push
jge
add
filds
xor
jnp
add
or
loope
aas
lock
jb
fwait
mov
dec
sbb
inc
pop
aad
stos
popa
sub
jne
subb
pushf
mov
cmpb
int
xor
mov
pop
aad
popf
hlt
inc
rcll
dec
out
inc
test
fadds
fbld
and
fildll
mov
pop
subl
hlt
push
cmpsl
xor
dec
cmp
pushf
fwait
jbe
shll
mov
push
push
fcmovu
or
or
add
jne
rcrb
hlt
fisubrl
rcl
out
sub
mov
push
cmp
push
test
inc
mov
shrb
loop
popa
mov
je
loope
orl
popf
inc
ss
lret
sbbl
cmova
ds
sub
fbstp
xchg
fmuls
in
mov
int3
sbb
xchg
movsb
jp
fistpll
rclb
inc
mov
popa
lcall
jb
mov
dec
insl
das
jo
jns
xor
inc
ds
push
sbb
inc
xchg
or
and
les
mov
pop
mov
scas
xlat
pop
popa
or
mov
stos
mov
pop
cmpsb
and
inc
or
xor
ds
clc
stos
leave
cmp
in
fldt
insl
rcrl
sub
pop
jb
xchg
inc
mov
cmp
outsb
lret
shrl
pusha
loopne
aam
daa
mov
stos
xor
lcall
test
pop
fisubl
pop
xchg
pop
fistpl
adc
mov
movsl
add
xor
je
xor
test
jb
aas
idivl
shrb
xchg
push
dec
cld
jmp
pop
stos
dec
sbbb
sub
orb
fdiv
into
add
mov
movsl
ret
loope
hlt
lods
popa
push
inc
cmpsl
jmp
shrb
add
push
sbb
push
cmp
cmpsb
in
mov
and
mov
sbb
neg
fxch
popf
adc
lcall
insl
pop
sarb
pop
jnp
sub
aaa
gs
sbb
and
add
and
sbb
dec
shll
cmp
lahf
arpl
sar
adc
and
jmp
test
ja
push
shrb
fists
mov
cld
aad
add
xchg
lock
ret
sub
fdivrl
mov
nop
rolb
imul
pop
inc
std
out
in
jbe
leavew
mov
push
daa
sbb
les
xor
fisubl
stos
gs
push
xor
imul
je
aas
push
aaa
add
ret
dec
icebp
and
cmp
push
ja
cld
and
mov
add
dec
add
sbb
call
ud1
or
sub
jle
int3
shl
clc
push
rclb
subl
dec
push
dec
dec
or
xchg
or
gs
stc
daa
in
pop
pop
xchg
mov
iret
xor
xchg
sub
inc
bound
leave
cmp
add
jmp
lret
adc
sahf
mov
insb
iret
push
add
imul
sbb
jo
daa
das
xor
out
ljmp
scas
cmp
xor
mov
mov
ja
jmp
sbb
bound
int3
mov
xlat
or
test
out
scas
xchg
mov
lret
in
pushf
movsb
push
push
or
popa
inc
or
mov
idivb
sbb
xor
adc
cmp
ret
inc
sbb
enter
andl
movsb
or
xor
adc
rolb
sub
pop
inc
mov
xor
test
push
jo
sti
ss
lret
sub
inc
and
jge
repz
ret
into
sbbb
adc
inc
inc
insl
or
dec
cmp
cs
mov
pop
cli
ret
fnstcw
push
lods
xor
pop
mov
jl
mov
iret
pop
xchg
add
int3
lret
dec
fadds
mov
cmp
push
cmp
xor
lret
jae
xor
in
xor
movsb
add
add
cmp
in
jle
adc
stos
filds
and
cmp
sub
inc
fs
pop
aas
insl
and
cmp
mov
push
xlat
aaa
jb
js
lock
adc
roll
push
loope
push
cld
cld
sub
pop
mov
pop
cmp
mov
nop
and
lds
cmp
icebp
arpl
pop
faddl
in
ja
out
jne
fs
mov
outsl
std
cmp
xor
push
mov
clc
pusha
scas
xor
add
xchg
jbe
scas
movsl
xchg
ret
sbb
sub
jae
mov
ja
lahf
pop
xor
xchg
gs
call
push
lcall
pop
and
and
and
mov
cs
sti
sub
push
enter
or
adc
and
int
sahf
aas
stos
or
dec
and
mov
sub
pop
pop
inc
out
push
mov
and
lds
stc
push
lahf
cli
decb
std
fcmovu
mov
and
sarb
inc
adc
movsb
fs
xor
in
inc
fisubrl
cmc
int3
cmp
cmpsb
in
push
push
adc
leave
mov
pushf
loop
orl
push
sarl
push
xor
xchg
xchg
mov
add
clc
dec
fisubrl
sub
les
cmp
test
sahf
int3
sbb
adc
jle
mov
xchg
pop
pop
pop
push
lds
pop
loope
push
pop
int3
jmp
sbb
sbb
pushf
add
pusha
in
mov
fs
cmc
stc
arpl
outsl
sub
popa
not
adc
in
fildl
xchg
mov
push
push
out
lret
or
mov
inc
lods
cltd
rorb
mov
mov
test
pop
jge
mov
cli
jg
aam
and
adc
shrb
xor
sbb
leave
pop
shrb
adc
cmp
push
jno
fldpi
lahf
dec
cltd
and
scas
sub
cs
push
in
xchg
jae
fstpl
xchg
sahf
jmp
and
std
cmpsb
out
mov
xchg
sbb
fstpt
es
loope
sub
add
das
test
dec
mov
jmp
sub
xchg
xchg
leave
fldcw
cmpsl
mov
iret
cli
pop
and
jns
icebp
add
popf
jo
pop
and
mov
mov
dec
stc
inc
or
jno
rcrb
sub
jne
pusha
inc
fsubl
loopne
out
lods
lret
pop
push
and
movsb
roll
inc
daa
inc
rclb
test
repnz
in
mov
cmp
jle
stc
inc
mov
and
mov
pop
insb
test
dec
movsl
cli
xor
and
popf
mov
insl
xor
add
repnz
mov
sub
sbbl
mov
cmp
popa
mov
mov
jnp
cmp
or
cli
mov
jl
pop
scas
addr16
and
mov
push
xchg
outsb
inc
test
aas
mov
mov
clc
add
cld
pushf
fnstenv
xchg
xor
sub
aas
push
xor
mov
and
dec
pop
enter
add
in
pusha
fsubrl
sti
jge
sub
sbbl
push
aas
jo
add
icebp
jo
enter
lods
push
aad
int3
mov
and
xchg
out
lods
inc
cmp
sub
mov
ss
sar
faddl
fdivs
iret
je
sub
mov
mov
cli
sbb
and
sar
ds
ror
mov
lea
mov
push
mov
and
or
cwtl
lods
nop
ficomps
mov
sbb
insb
pop
mov
mov
pushf
sbb
loop
xorb
sbb
pop
jg
sub
push
outsb
repnz
repnz
mov
mov
roll
popf
ret
or
test
pop
test
pop
xor
add
je
lods
cmc
or
ja
xor
ret
test
cwtl
push
xlat
insl
mov
push
or
es
sbb
sti
arpl
or
addl
and
shll
inc
jp
jmp
push
inc
cltd
dec
mov
cmpb
inc
loopne
jecxz
or
int3
ja
aam
cmp
aad
lock
dec
out
test
gs
nop
mov
les
int3
sbb
lcall
fdivr
or
or
push
out
dec
call
popa
movsb
test
and
push
pop
mov
call
mov
sbb
movsl
stos
insb
jb
gs
testb
and
push
cpuid
in
sti
dec
xchg
mov
in
push
addb
movsb
fisubl
into
jmp
mov
into
and
sti
out
or
out
lret
sub
lahf
xor
mov
pop
jb
divl
add
cs
cmp
jbe
pop
jge
xchg
movsl
gs
xor
aaa
push
mov
push
imul
stc
rcl
dec
das
js
inc
inc
inc
popa
stos
lods
nop
stos
int3
xchg
push
stos
adc
ds
cmp
pop
xchg
xchg
jnp
rclb
pop
pop
ja
dec
aad
xchg
shll
aaa
ss
and
fdivrl
xchg
adc
sbb
dec
mov
inc
xor
adc
andl
dec
mov
or
add
and
sahf
or
lea
lret
inc
icebp
in
sub
dec
push
stc
pop
push
pop
push
sub
stos
adc
clc
call
cmpsb
mov
fcmove
ss
iret
icebp
dec
in
pop
pop
inc
in
inc
fldt
pop
jge
cld
adc
mov
push
rclb
std
rolb
pushf
cwtl
sbb
cmpsb
cmp
adc
push
add
cld
xchg
repz
inc
nop
in
pop
jecxz
mov
fsts
xchg
dec
push
ja
xor
mov
xor
loope
dec
sbb
mov
scas
mov
xor
xchg
outsl
mov
subb
xchg
jbe
add
push
popa
jge
andl
pushf
xor
ljmp
mov
mov
out
mov
jmp
inc
jno
loopne
pop
frstor
dec
jno
adc
xchg
jno
mov
mov
adc
mov
and
lcall
add
into
mov
popf
ljmp
rcrb
dec
cmp
and
and
aam
fnstenv
loop
or
sub
xor
out
out
add
imul
or
inc
loop
and
das
cmpsl
popf
clc
sbb
adc
dec
inc
sbbb
push
mov
sbb
xor
xchg
aam
pop
xor
push
ja
sahf
add
add
int3
das
xchg
mov
fs
std
scas
rolb
pop
idivl
lock
inc
ss
mov
stc
and
aas
sti
add
test
sub
push
ret
ja
aaa
mov
jo
test
jge
inc
out
mov
sbb
test
xor
in
or
repz
jae
fwait
jae
fldl
xor
mov
lret
outsl
shrb
les
inc
lret
movl
jge
dec
sub
sbb
cli
bound
sar
adc
imul
fdivrl
rol
daa
shrl
mov
push
sbb
xor
xorl
or
test
mov
rclb
mov
cmp
fsubrs
push
mov
jge
out
addr16
lret
movsb
mov
bswap
dec
subb
imul
push
lahf
into
cmc
mov
jg
in
cmpsb
jl
mov
aam
adcb
out
adc
mov
cs
jle
leave
sbb
jge
xor
sahf
ds
scas
jp
add
and
les
xor
clc
fsubrs
jl
test
mov
int3
pop
ffreep
das
jle
jae
data16
nop
pop
push
out
jp
dec
popf
xchg
add
or
mov
xchg
or
lds
loop
mov
mov
jno
cmp
pop
dec
bound
xchg
dec
popa
in
movsl
xor
mov
imul
stos
fdivl
imul
jmp
or
daa
mov
inc
add
xchg
je
mov
gs
pusha
stos
mov
shlb
ja
jle
test
sbb
out
imul
adc
scas
dec
sub
out
xor
test
sub
xchg
xchg
inc
mov
movsb
pop
repnz
dec
in
jns
cs
mull
js
mov
push
and
orb
jle
leave
or
mov
jl
jle
dec
pushl
mov
and
out
popa
adc
mov
jl
push
mov
loop
xor
xchg
cmp
movsb
fwait
cmc
sub
notl
into
iret
test
sbb
mov
btrl
jle
xchg
in
popa
add
inc
fs
xlat
test
repnz
mov
xchg
fsts
mov
mov
mov
xchg
lea
pop
imul
inc
rcrb
cmpb
mov
push
xchg
stos
shrb
aam
add
iret
xchg
sti
sub
and
jbe
jle
jne
sarb
iret
lret
in
inc
lcall
push
repz
std
sub
pop
shlb
jecxz
xchg
inc
dec
in
dec
cltd
pop
sbb
nop
and
je
dec
jle
xlat
loopne
sub
add
mov
nop
cmc
adcl
mov
cmp
fs
outsb
xchg
cmp
jp
sub
scas
jecxz
sbb
fucom
jmp
movsb
rclb
in
jmp
push
mov
cld
mov
cld
lret
and
data16
inc
lret
lcall
mov
xchg
popa
call
popf
and
cmp
clc
xor
push
lcall
inc
pop
mov
mov
cs
out
or
sbb
pop
pop
or
mov
cmp
repnz
and
enter
cmpsl
pop
lods
inc
pushf
inc
popf
jne
loope
xor
and
std
insb
cmp
mov
arpl
lret
jno
pop
adc
loop
push
push
insb
cmpsl
and
mov
mov
insl
inc
scas
push
movsb
test
in
bound
fisttpll
cli
ret
dec
aas
mov
sub
lret
faddl
xor
and
iret
add
ljmp
push
test
push
xchg
outsb
mov
push
add
subl
inc
scas
clc
adc
jno
subb
pop
shr
outsl
or
mov
xor
push
aam
push
lret
lods
xchg
adcl
repnz
rcrl
jle
lods
aas
xchg
or
in
push
ror
push
mov
pop
popa
xor
lods
movsl
mov
int3
leave
pop
iret
dec
add
orb
aam
sub
insb
cmp
test
fnstsw
cs
lods
add
or
sbb
into
xchg
movsb
mov
out
lea
cltd
inc
repz
imul
pop
or
push
stc
scas
cltd
add
pushf
and
mov
jnp
fcompl
fildll
push
fidivl
jmp
lea
and
sti
mov
jne
pop
xchg
jle
push
push
jp
xchg
daa
fildll
das
pop
xor
pop
push
mov
mov
sbb
movsl
stos
shrb
push
jo
xor
psubusw
mov
in
xchg
sub
sti
push
xchg
mov
rcr
xor
mov
pop
mov
push
outsl
push
mov
aaa
and
cmp
or
adc
test
fstpt
xchg
xor
xor
and
aad
inc
inc
sub
push
gs
adc
inc
mov
mov
cmpsl
sub
cs
pop
dec
sti
repnz
in
jecxz
adc
sbb
push
bound
into
nop
gs
stc
int3
mov
arpl
pop
and
dec
hlt
cmp
das
dec
mov
arpl
xchg
stc
nop
xor
cmp
rolb
mov
dec
inc
and
or
outsb
les
test
divl
cmp
xor
add
cmp
lock
in
ss
jb
inc
popf
xchg
add
lret
sub
or
cmp
das
sub
push
lea
lea
mov
imul
push
jne
jae
inc
inc
mov
push
je
enter
mov
bound
mov
sub
push
add
test
cmp
pop
sbb
jo
add
dec
jecxz
cli
lea
movsb
dec
loope
imul
or
les
test
push
fldenv
cs
test
cmp
xchg
adcl
pop
push
dec
daa
xor
push
inc
sbb
jecxz
imul
jne
out
aas
fldt
push
mov
sub
mull
ja
xor
inc
mov
bound
stos
push
sub
push
sbb
shll
iret
xchg
lret
lds
cltd
lret
vmovaps
cli
adc
mov
icebp
aam
sti
pop
popf
jns
test
or
out
imul
push
neg
sbb
imul
sub
push
or
push
inc
mov
mov
or
pusha
jecxz
mov
xor
adc
mov
lock
scas
push
in
push
sbb
adc
adc
scas
dec
popf
stos
rclb
insb
mov
adc
pop
loop
xchg
lcall
fs
jg
xor
or
adc
call
and
ss
xchg
fbstp
xchg
cltd
inc
jle
imul
sbb
cmp
lods
ss
pop
sub
jne
dec
sub
cmp
xchg
std
dec
jmp
xchg
movsl
cli
mov
mov
shll
or
push
das
sahf
dec
jle
ljmp
xchg
int3
pop
in
arpl
aas
jns
stos
pop
dec
cmp
mov
push
xchg
adc
cwtl
stos
or
jg
jne
fsubrl
mov
test
xor
inc
imul
sub
and
mov
push
aas
sbb
iret
add
cmp
jge
push
jo
jbe
xchg
push
out
pop
decl
data16
jbe
loopne
aam
rorl
mov
lret
cmp
adc
cmpsl
mov
jmp
and
lock
jg
adc
out
dec
pop
inc
jle
addr16
mov
push
in
lret
sbb
jecxz
xchg
pop
mov
out
lcall
fists
dec
shrl
and
mov
jb
and
std
rolb
popa
push
into
pop
loopne
adc
sub
xchg
imul
sbb
fstpt
jge
xor
push
pop
push
pop
cmp
cmp
mov
jg
adc
add
jp
and
leave
out
sbb
pop
imul
sbb
pop
fdivl
and
jnp
out
sub
insb
arpl
ljmp
add
sbbb
in
pop
xchg
fnstsw
push
jecxz
pop
sub
mov
mov
inc
clc
lcall
mov
mov
loope
incl
lret
cs
sbb
lret
aaa
cmp
call
mov
cli
nop
jp
add
andl
pop
or
and
mov
mov
sbb
bound
mov
mov
and
mov
sahf
sub
or
jb
rcrl
jno
enter
leave
orl
mov
iret
inc
mov
mov
sarb
testb
test
int
cwtl
cltd
push
into
cmp
out
loopne
xchg
sarb
push
add
mov
out
xchg
fdivl
addr16
clc
in
xorl
push
idiv
mov
xchg
mov
jmp
pop
lock
mov
mov
das
xor
cmp
in
inc
into
pop
inc
xor
pop
test
sub
mov
jb
jecxz
lds
sarb
inc
mov
fs
xor
sub
test
cmpsl
jmp
add
repz
call
jmp
xlat
mov
dec
and
add
out
fsts
jge
sub
mov
jmp
lock
andb
scas
mov
mov
shl
and
je
imul
mov
push
add
cltd
and
out
shrl
in
mov
in
cmpsl
pusha
pop
imul
xor
std
and
and
xor
jnp
loopne
out
iret
push
or
into
dec
add
nop
pop
shll
insb
in
mov
dec
sub
xlat
push
push
xchg
outsl
push
outsl
lods
inc
pop
das
call
pop
pop
xor
mov
nop
pop
fistl
sub
dec
push
mov
int3
pop
cwtl
std
push
mov
dec
cwtl
jle
mov
out
pop
ja
jb
push
nop
ljmp
call
adc
repz
pop
out
xor
mov
icebp
gs
bswap
mov
sub
ret
inc
push
dec
sub
daa
pop
pop
push
pop
arpl
mov
ja
dec
mov
fisubrs
mov
pop
mov
push
cmp
enter
or
ret
stos
cwtl
dec
repz
push
inc
dec
aam
push
push
jae
aam
shl
aad
pop
mov
dec
cmpsb
out
or
cmp
testb
rcrl
imulb
and
sahf
mov
fiadds
mov
mov
andb
in
loopne
call
adc
iret
cltd
sti
mov
mov
outsb
add
decb
ss
adc
nop
pushf
inc
adc
out
push
push
pusha
mov
mov
sbb
in
inc
in
or
lock
xor
or
mov
scas
lcall
test
cmp
pop
mov
push
mov
push
lret
fidivs
or
jno
xor
fsts
lods
inc
mov
inc
jno
cli
jl
dec
push
mov
push
xlat
icebp
fucomp
stc
out
push
sbb
pop
xchg
inc
lods
mov
mov
addr16
adc
push
cmp
movsl
add
out
les
pop
xor
loopne
lahf
lret
cli
jmp
adc
inc
icebp
sub
rol
cmp
mov
push
and
jne
and
in
int3
mov
xchg
xor
jbe
sub
cmp
cs
ss
shrb
loope
arpl
cmp
add
mov
arpl
test
out
out
pop
pop
xor
xchg
adc
inc
stos
dec
enter
ljmp
mov
mov
je
and
mov
mov
sub
data16
nop
imul
andl
fidivs
jb
in
nop
mov
fistpll
cmp
shlb
je
fs
in
stos
cmc
add
int
clc
andl
arpl
xor
lods
xchg
leave
pusha
xchg
push
mov
mov
xor
movsb
adc
jecxz
fnstsw
cwtl
shrl
xlat
jp
ljmp
push
rorb
adc
cmp
xchg
mov
pop
not
sub
insl
pop
cmp
hlt
test
jecxz
push
adc
aam
xlat
mov
sbb
loopne
mov
int3
js
sarl
or
pop
sbb
add
add
test
xchg
imul
sub
xabort
sahf
std
outsl
test
xor
cmp
cmpsb
sahf
test
adc
mov
dec
scas
mov
push
sbb
call
jbe
inc
cmp
cmp
xchg
or
pop
sahf
shll
pop
aad
cmp
lea
add
inc
add
adc
inc
inc
jns
cmp
inc
jle
dec
movsb
lods
ds
mov
faddl
mov
sub
xchg
pop
push
clc
test
bound
mov
popa
fadds
es
test
mov
jbe
lcall
lcall
hlt
adc
out
adc
pop
fs
daa
std
sub
aam
xor
pop
mov
fwait
mov
sub
dec
cmp
xor
cmp
push
push
repnz
push
inc
mov
add
cmp
pusha
jbe
fmuls
jbe
cmp
cmpl
xchg
cltd
add
sub
pusha
or
jno
sarb
sbb
imul
push
scas
jmp
cmp
mov
out
dec
jecxz
js
ljmp
add
iret
js
das
lcall
mov
addr16
and
xor
xchg
popf
xorb
mov
insl
push
arpl
xchg
mov
or
xlat
sti
out
iret
xor
test
rolb
xlat
jmp
or
inc
int
mov
cmp
jbe
fcomps
jb
jp
mov
xchg
mov
inc
daa
lea
insl
cmp
pop
insb
xor
lea
sbb
jne
insl
testb
push
mov
in
dec
hlt
fldcw
inc
sbb
jp
jg
fs
push
inc
push
ss
xor
xlat
jecxz
xchg
mov
daa
scas
pop
icebp
mov
addl
sub
outsb
push
aad
jp
test
cmp
xchg
ret
jge
push
inc
bound
pop
xor
rcl
mov
std
fdivs
sbb
mov
mov
ficoms
sub
jp
xchg
or
xchg
out
mov
inc
sub
pop
int3
mov
sub
in
push
cmp
push
cli
dec
addl
lahf
push
sub
sbb
and
rcrl
imul
inc
adc
mov
scas
aas
in
int
sti
jne
enter
leave
pop
sbb
imul
pusha
mov
lahf
inc
add
out
pusha
push
mov
mov
mov
rolb
pop
push
aaa
xchg
repz
jle
mov
add
out
int
cmpsb
dec
into
push
jo
scas
add
loopne
push
cmp
jno
xchg
lea
dec
in
test
decb
xchg
mov
pop
and
sbb
imul
adc
jge
adc
enter
out
adc
cs
into
mov
and
sbb
pop
pop
jo
mov
jo
aam
or
incb
out
sti
mov
pop
mov
push
stc
in
inc
insb
jge
and
cli
repz
pop
xchg
xchg
movsl
test
mov
jns
sbb
aam
mov
jmp
jbe
movsl
sahf
fiadds
lret
and
push
xor
inc
in
push
lahf
cmp
scas
push
sbbl
inc
jg
outsl
dec
insb
stc
jl
add
mov
loopne
stc
movsl
cmp
in
pop
imul
dec
inc
sub
jmp
ffree
cmpsb
testl
jbe
sub
pop
fwait
lea
into
sarb
daa
stos
pop
push
sub
lret
jl
in
xchg
cmp
hlt
xor
inc
sahf
add
sbb
movsb
cmp
jmp
out
popa
push
div
fists
pop
sbb
dec
rol
or
mov
xchg
ds
out
cli
sbb
pop
imul
mov
stos
cmp
test
loop
push
fcmovbe
and
mov
iret
adc
movsl
mov
scas
sub
cmpsl
mov
add
push
pop
iret
jmp
jecxz
lea
push
and
pop
pusha
dec
inc
test
mov
jbe
mov
inc
ret
mov
mov
push
lods
dec
inc
fcoms
jno
pushf
loop
xor
xor
mov
cld
shll
mov
out
xlat
cmpsl
ficoms
scas
aaa
push
js
insl
sub
ret
ffreep
inc
ret
call
roll
mov
mov
cmp
icebp
dec
and
sub
xlat
aaa
sub
and
add
push
lods
aad
sub
dec
outsl
push
pop
and
push
pop
fsts
lea
dec
push
push
cmp
dec
fildll
pop
cld
mov
add
inc
jae
push
out
aaa
cmp
cmc
jmp
mov
test
ret
push
xchg
fsubrs
mov
mov
sbb
lods
adc
lret
inc
dec
mov
mov
xchg
cmpsb
push
lods
lcall
adc
jg
cmp
aam
dec
jmp
add
pop
and
rorl
lods
loop
gs
inc
call
pop
into
and
mov
add
lea
imul
loope
or
ds
gs
adc
pop
dec
mov
sub
mov
jb
jmp
mov
fsubrs
dec
imul
bound
jl
mov
add
xchg
aad
cmp
push
jo
or
push
sub
out
jecxz
test
and
ss
jg
cwtl
or
cmp
mov
pop
mov
enter
cmp
pop
pop
pop
lods
sti
rep
out
mov
adc
xchg
dec
mov
in
push
fisubl
fwait
pop
ret
insl
cld
push
cmp
cmpl
cwtl
pop
fdivrp
dec
fprem1
scas
cltd
in
xor
stos
dec
fcmovnu
lds
mov
mov
adc
nop
test
xor
fstpl
in
cmp
rorb
into
xor
xchg
aam
push
subl
jns
insb
sub
and
ss
ja
inc
pop
test
adc
sahf
ja
in
xchg
xor
lahf
add
dec
andl
lods
inc
push
daa
xchg
add
push
pusha
lret
test
shlb
call
cmp
push
cmp
mov
xchg
in
and
jecxz
out
xchg
push
repnz
cmp
sub
xor
pusha
jne
mov
pop
popf
sub
lea
or
add
pop
cmp
mov
xlat
pop
push
call
jo
loope
fiaddl
js
sub
notb
jae
ss
clc
int3
fiaddl
ds
test
cli
lahf
sahf
addb
mov
das
dec
add
cmp
mov
inc
fsubrp
or
test
adc
and
pop
div
dec
pop
rclb
popa
mov
pop
aad
mov
cld
movsb
in
push
and
out
orb
or
mov
jp
and
jmp
ret
jb
loope
and
adc
mov
in
negl
dec
mov
adc
fisubrl
test
hlt
daa
mov
scas
cmp
hlt
xor
push
cmpsb
mov
paddb
sar
test
xchg
mov
into
sub
out
pop
xor
jbe
push
shlb
dec
dec
shlb
andb
outsl
sti
test
xor
out
ds
jl
shrb
pop
pop
inc
aad
je
daa
dec
mov
stos
mov
push
mov
mov
inc
scas
mov
cld
addr16
xor
xor
rclb
adc
fidivrl
add
roll
into
and
inc
inc
ret
inc
pop
jns
fists
jge
in
fwait
sbb
mov
mov
outsb
repz
pop
cmp
and
pop
cmpsb
lret
mov
mov
adc
adc
add
loope
and
stc
push
out
ret
inc
mov
mov
popf
dec
dec
xor
test
icebp
imul
add
pusha
inc
enter
daa
leave
mov
enter
lahf
ret
cmpsl
fildll
test
mov
cli
popa
icebp
je
dec
aam
dec
imul
jb
call
data16
jns,pt
pop
mov
imulb
mov
stc
mov
and
or
sarl
fsts
mov
fidivrl
ds
mov
cli
adc
jmp
adc
fisubl
cmp
or
or
aad
jl
loop
add
dec
call
imul
mov
push
xchg
pop
xchg
daa
sbb
push
or
mov
nop
xchg
sub
addb
lahf
sub
out
mov
scas
pusha
cwtl
adc
nop
js
sarb
inc
dec
loope
and
enter
inc
rolb
test
repnz
sbb
push
insb
ret
imul
std
mov
popf
xchg
inc
fsubrs
ss
inc
lret
fmuls
sbb
rol
cli
sub
adc
loope
pop
jae
repnz
pop
dec
add
xor
into
scas
xchg
aad
nop
fisttpl
arpl
leave
out
jmp
pop
push
stos
or
xchg
cmp
mov
jne
idivb
mov
subb
stc
xchg
sti
mov
stos
lcall
loope
mov
jno
inc
sahf
add
dec
lds
jae
fmuls
imul
iret
stos
shlb
sti
aaa
adc
lret
lcall
pushf
orb
ret
mov
aad
and
test
fdivrl
aas
cli
mov
mov
add
in
ret
mov
xor
cltd
xchg
test
and
negb
das
mov
pop
adc
mov
push
fs
nop
andl
loopne
test
mov
sub
cli
rclb
lods
xchg
das
out
mov
jge
lret
sub
imul
adc
xlat
loopne
inc
xor
movsb
repnz
test
call
dec
movsb
mov
cld
cmp
fildll
dec
out
sbb
cs
xor
add
jo
mov
push
ds
addr16
sbb
xor
je
loop
sbb
sub
dec
popf
dec
xor
outsl
sahf
fisubrl
sahf
int3
call
jmp
out
cli
les
cmpsl
mov
xchg
sub
cmpl
icebp
jo
inc
aaa
adc
mov
dec
in
inc
cmp
jb
pop
xor
fisubl
mov
or
dec
add
xor
or
mov
nop
mov
ret
rcll
loop
dec
movsl
cltd
cld
out
pop
dec
or
dec
jns
dec
aam
xor
jp,pt
pop
icebp
andl
xchg
ret
dec
add
test
mov
push
inc
lods
xor
jge
cmp
pushf
sub
mov
imul
ret
movsb
shlb
iret
rclb
out
insl
notl
xchg
adc
into
fstl
adc
nop
or
xchg
lretw
or
jns
in
push
push
mov
mov
imul
std
dec
incl
mov
cmpsb
movsl
stos
cmp
test
lcall
ds
fdivl
fldl
mov
jle
fisttpll
push
cmp
xor
adc
stos
out
pop
xchg
bound
sub
push
sbb
jecxz
or
out
imul
sub
pop
call
pop
popa
ficoml
fbld
xor
xchg
aas
jle
rorl
fs
fst
jecxz
aaa
sbb
arpl
sbb
pop
das
jb
jae
xor
sbb
lret
push
repz
dec
inc
xchg
xor
jns
aas
adc
fwait
push
fldl
cmp
ret
inc
jecxz
out
pop
lret
xchg
or
inc
mov
stc
xor
xchg
aaa
pop
leave
cmpsl
or
jb
pushf
ret
mov
mov
fcmovne
sub
inc
adc
jecxz
inc
jp
cli
hlt
dec
pop
ljmp
jnp
cmpsb
pusha
dec
test
mov
data16
shlb
rcrb
add
xchg
lock
mov
mov
or
pusha
stos
cmp
ljmp
icebp
push
push
test
mov
or
pop
faddl
pop
xlat
jp
cmp
adc
repz
std
add
adc
xchg
rcrb
lods
xor
push
sub
icebp
mov
int3
sub
stos
adc
pop
sbb
mov
adcl
repnz
xor
fadd
jp
jle
lock
push
xchg
into
fcom
or
fldcw
addr16
ret
mov
stc
push
xor
mov
mov
cld
pop
mov
ficoms
ret
xor
test
popf
mov
lds
adc
and
and
mov
xor
cmp
jae
movsl
and
jecxz
fidivs
stos
xor
mov
mov
lds
add
pop
ljmp
les
sbb
jge
insl
mov
gs
xorl
fistl
mov
fimull
xchg
call
jmp
call
sbb
xor
xchg
adc
cmp
jg
arpl
jp
lret
lods
xchg
sbb
scas
sub
add
ret
ja
mov
ja
stc
bound
pop
pop
in
lods
mov
les
jmp
mov
loope
adc
iret
fdivl
sti
sbb
sbb
stos
xor
mov
pop
addr16
pop
add
mov
mov
loop
jg
jle
jge
jecxz
add
aas
rcl
mov
push
movsb
jmp
mov
into
dec
adc
xor
out
push
fstps
mov
loope
xchg
adc
jmp
lcall
or
jp
lea
jecxz
int
inc
inc
pop
out
rcll
xor
fisttpl
pop
or
mov
test
jp
incl
xchg
scas
push
sbb
repnz
jp,pn
bound
loop
lret
cmp
dec
sarb
lret
data16
cld
xor
add
cwtl
sbb
cmc
mov
mov
dec
jg
mov
push
inc
je
loopne
ja
inc
dec
cmpsl
scas
int
lds
pop
fstpl
cmpsl
lret
ds
out
pop
dec
pop
pop
std
and
ljmp
movsl
push
push
dec
sti
clc
inc
push
in
aad
or
pop
cmp
jns
test
comiss
movsb
sub
mov
or
lcall
sti
mov
mov
xor
inc
mov
stos
loopne
insl
jle
dec
xor
out
cwtl
fcomp
inc
mov
repz
cwtl
fstps
cmp
inc
imul
fwait
mov
in
dec
enter
mov
add
iret
jmp
dec
xor
aaa
ja
iret
inc
fldlg2
inc
stos
fdivr
xor
std
je
stos
xchg
dec
push
cmp
movsb
xor
jmp
mov
mov
xchg
and
push
add
dec
push
stos
lahf
repz
imul
jmp
pop
insb
lods
jnp
mov
call
aaa
mov
nop
jb
iret
adc
fwait
mov
test
mov
jo
sbb
inc
adc
add
fisttps
and
fdivl
leave
stos
mov
and
and
mov
aaa
loopne
mov
inc
sbb
jbe
inc
lcall
dec
xor
fistpl
dec
movsb
pop
xor
shr
out
nop
sub
mov
add
inc
push
pop
test
mov
xchg
imul
lods
jae
jge
std
pop
jnp
jle
mov
rcll
movsb
loope
popa
fstl
mov
inc
fisubs
cltd
or
loopne
or
xchg
mov
pushf
mov
cmpsb
out
std
jbe
fmull
cld
push
cmpl
test
push
xor
add
test
or
mov
test
inc
imul
ret
pop
je
pop
leave
sbb
or
mov
xor
xor
or
cmpl
sub
call
insl
xor
enter
adcl
xor
movsl
mov
mov
sbb
jnp
pop
rcrb
scas
rcl
xchg
or
loopne
jne
sti
sbb
and
ds
daa
das
ret
pop
or
push
fcompl
mov
sahf
sub
data16
pop
fcmovb
jp
imull
mov
ret
leave
or
add
push
inc
xor
sbb
mov
jbe
xor
add
shll
vmovd
lret
pop
mov
xor
adc
out
inc
and
cmc
dec
and
stos
lahf
pop
negl
pop
fidivl
sub
push
inc
insb
sub
aad
sbb
aaa
xor
ret
loop
or
stos
cmpsb
sub
hlt
dec
ds
bound
in
jns
sahf
outsb
add
cmpsl
outsl
pop
xchg
bound
stos
cmp
add
push
mov
xlat
pop
sub
adc
ret
out
mov
jge
bound
aad
mov
aam
sahf
xchg
ss
pop
testl
cmp
bound
pop
cld
cs
mov
xor
mov
call
jns
stos
mov
movb
aam
add
sbb
add
fisttpll
jmp
testb
cmp
mov
and
divb
dec
jg
adc
mov
or
std
out
pop
aas
mov
inc
xor
push
pop
sahf
mov
mov
gs
aaa
inc
mov
scas
test
mov
jmp
test
addr16
pushf
adc
pop
xchg
leave
insb
je
stc
pop
cwtl
jnp
and
popa
fstpt
sgdtl
mov
push
imul
adc
mov
push
mov
in
jp
sub
fdivr
dec
ss
adc
jle
add
jg
in
fs
and
add
das
sbbb
pop
sahf
adc
sub
bound
sub
sub
mov
mov
sbb
xchg
sbb
dec
or
out
mov
sub
cmp
lret
pop
leave
daa
ds
adc
pop
pop
add
jp
daa
push
inc
cmpsl
fbstp
mov
pusha
cmp
enter
xchg
aam
sti
pop
jo
bound
inc
pusha
aad
mov
lock
icebp
imull
decb
mov
pop
pop
cmp
xor
out
negl
or
fistpl
mov
mov
mov
xor
push
or
outsl
jp
push
pop
out
and
or
lods
adc
cmp
repz
cwtl
xchg
mov
xchg
dec
test
push
imul
mov
repz
adc
cmpsb
mov
insb
pop
ficompl
cmp
xor
mov
aaa
fbstp
mov
jns
jbe
or
push
jp
inc
call
mov
push
ret
fdiv
lahf
mov
or
adc
in
cli
fstps
fmuls
ljmp
sti
inc
push
repz
dec
jle
inc
add
fbld
and
ror
xlat
inc
rcll
cs
jecxz
sub
sbb
mov
in
in
std
loope
adc
jae
xlat
and
out
in
jbe
adc
pop
leave
es
inc
xchg
lods
rcrl
and
cmp
popf
test
pop
sub
push
jg
call
and
clc
push
andb
sets
xchg
iret
jbe
icebp
jecxz
inc
test
frstor
sub
cmpsl
mov
xor
or
sahf
push
xor
push
and
pop
xchg
push
shll
sbb
push
jle
push
inc
pop
sbb
sub
cmp
sahf
xor
std
mov
pusha
dec
lahf
shll
in
cwtl
hlt
out
in
or
cmp
in
arpl
icebp
cmp
inc
xlat
xchg
insl
fdecstp
cli
sub
clc
push
xor
inc
aam
hlt
fldenv
ljmp
mov
movsb
jle
mov
mov
xor
lahf
inc
and
jmp
sahf
call
mov
add
and
sti
sub
push
jns
fldcw
imul
fdivr
imul
and
xchg
pop
popf
and
push
ret
cmp
aaa
loop
dec
idivl
dec
imul
jp
std
sahf
fldt
and
pop
test
dec
lods
jmp
cmpsl
mov
jb
fsubrs
mov
adc
mov
cltd
mov
ret
cmc
or
sbb
sbb
ret
jge
jbe
mov
or
ds
cmp
jo
push
ficomps
cmpsl
push
jmp
loop
inc
fwait
dec
scas
push
and
or
pop
icebp
dec
sub
xchg
xchg
ret
xchg
cmp
push
imulb
xchg
cmp
xchg
cltd
pop
fisttpll
popf
mov
mov
popa
jmp
xor
shlb
and
pop
cmp
sti
and
inc
shlb
lret
cmpsb
sub
xlat
mov
stos
call
stos
and
jnp
xchg
xor
mov
aam
sbb
mov
xchg
mov
xor
or
inc
cmp
std
add
fnstsw
adc
roll
ds
daa
jle
adc
in
mov
or
mov
icebp
hlt
inc
cmpsb
fldt
movsb
sub
xor
out
adcl
xchg
xor
clc
and
adc
jl
jecxz
add
bound
testl
stc
fadds
sbb
push
jmp
mov
xchg
test
repz
lret
sbb
test
stos
lods
stos
orb
inc
repnz
sbb
divl
lea
or
sbb
dec
std
shlb
sbb
sbb
add
decl
jmp
neg
xchg
test
shl
out
sub
add
aaa
sbb
mov
adc
jecxz
ss
mov
test
pop
add
push
shll
pop
mov
aaa
and
imul
lret
jle
sbb
loop
sbbb
icebp
inc
mov
in
mov
flds
fiaddl
rolb
pushf
xchg
dec
mov
data16
cmpb
movsl
stos
push
pop
sub
cltd
loope
cmp
clc
sbb
sbb
les
ret
and
ret
sub
add
js
or
out
movsl
xor
inc
and
sub
xor
js
push
stc
and
icebp
push
cltd
inc
icebp
lds
gs
xchg
xchg
cmp
std
gs
or
mov
lret
mov
ljmp
push
mov
jae
inc
fcompl
popf
lcall
push
mov
jge
mov
out
imul
jl
mov
mov
movl
pop
jp
js
icebp
adc
fistps
sub
xchg
test
push
cld
in
xchg
dec
aad
fisttpl
push
or
cwtl
pop
mov
xchg
fmull
and
jno
sbb
cmc
sbb
mov
lahf
cmp
pop
out
jge
push
sub
shrb
icebp
cmpsb
mov
into
movsb
adc
mov
cmp
adc
leave
mov
leave
out
sbb
push
inc
lret
enter
int
out
jl
pop
inc
lahf
and
pop
cmp
insb
pop
in
jo
clc
and
stc
pop
inc
jae
add
mov
inc
movsb
push
lea
shl
sub
ret
sbb
mov
cld
sarb
jae
movsb
mov
bound
fidivrs
pushf
pop
dec
xor
popa
jae
mov
std
xchg
inc
jo
add
pushf
dec
cmpl
popf
loope
aas
cwtl
or
cmpsb
sub
test
xchg
adc
fldl
jl
jg
ffreep
sub
jb
in
inc
adc
lahf
push
mov
jge
mov
dec
xorb
sub
sbb
push
jge
or
mov
rclb
jmp
test
mov
pusha
das
orb
insl
lea
xor
bound
test
adc
cwtl
cmp
sub
jb
jl,pn
ret
or
jge
adc
stos
mov
sbb
dec
jno
fwait
sbb
cmpsb
mov
fists
je
push
stos
push
dec
rcl
test
jae
or
mov
xor
bound
dec
aad
xor
sub
fistps
sbb
rcrl
sub
xchg
dec
lods
xchg
inc
cmp
fildl
leave
mov
cmp
and
adc
stos
cmpsl
cmp
mov
push
xchg
cmc
push
lds
sub
push
outsb
loope
push
cwtl
mov
xchg
loopne
or
jns
sbb
fmuls
cmp
and
in
push
and
sub
cltd
inc
mov
ret
mov
jl
and
std
inc
stc
xchg
movb
arpl
push
pop
inc
inc
xchg
outsl
popf
and
scas
fimull
xor
xchg
push
lret
xchg
fs
ds
xlat
mov
sarl
adc
mov
mov
adc
or
pop
iret
sub
cmc
sub
adc
ret
gs
andb
hlt
in
inc
jmp
enter
mov
leave
ret
test
inc
addr16
dec
icebp
dec
mov
mov
arpl
ja
subb
enter
or
aaa
loope
sub
in
pop
adc
dec
dec
or
xchg
into
fisttpll
mov
clc
sbb
lods
jecxz
jl
push
sti
lahf
inc
inc
xor
lds
test
clc
mov
adc
dec
xor
and
adc
xor
cmp
xchg
in
ds
dec
std
add
fmull
mov
lods
dec
sti
ds
mov
sub
mov
fnstenv
jno
jnp
xchg
cmp
data16
adc
pop
int3
jl
xor
and
push
sbb
sbb
idivb
add
or
cmp
dec
icebp
paddsw
movsl
add
call
mov
and
int3
adcl
or
je
ficoml
fwait
cmp
and
xorl
fdivrs
movsl
mov
adc
xchg
xchg
test
jg
sbb
je
sbb
stos
cli
gs
jl
sub
leave
jmp
jp
sub
cmp
int3
pop
mov
jno
aam
xor
in
adc
mov
dec
mov
scas
push
sbb
sti
dec
lods
pop
mov
cmp
xor
cmp
loope
pop
lock
jecxz
or
bound
xchg
imul
arpl
mov
sbb
lock
sub
jmp
ds
fisubs
mov
jbe
aaa
in
mov
lea
mov
mov
sub
call
fsubp
push
cmp
std
in
xchg
loope
and
fcomps
test
and
pop
iret
mov
sbb
xchg
jae
fcompl
inc
cmpsl
cmpsb
jns
ss
jne
bound
movsl
and
or
inc
xchg
and
pop
mov
jo
inc
test
insb
in
mov
pop
lret
push
push
xor
iret
cmp
es
es
fstl
lods
es
push
inc
xchg
shlb
push
sahf
out
mov
fidivs
push
and
jmp
push
mov
sbb
adc
insl
fimuls
add
jecxz
bound
cmc
mov
lcall
adc
mov
add
pop
in
shll
arpl
js
xchg
xchg
sti
cmpsl
popa
jnp
dec
jl
adc
cmp
aaa
adc
inc
inc
fildl
or
xor
pop
iret
stc
addr16
jbe
mov
mov
jbe
lods
sbbl
xor
pop
imul
ljmp
mov
xor
sub
pop
mov
mov
fldt
repnz
lret
lea
adc
mov
cli
lret
test
xchg
xchg
aas
add
hlt
test
hlt
hlt
jne
test
sahf
fidivs
imul
jb
int
add
in
jl
imul
lahf
sub
movsl
divb
mov
push
cltd
and
dec
dec
pop
loop
popf
lcall
fld
movsb
sub
mov
jge
sbb
ja
push
jp
adc
dec
mov
add
idivb
mov
mov
faddp
mov
xor
cs
and
and
test
adcl
int
mov
mov
js
dec
movsb
das
xor
test
mov
pop
mov
inc
call
lods
aam
jne
stc
xchg
lahf
gs
sbb
xor
or
stos
cmp
ss
lds
sub
lahf
lret
and
xor
adc
mov
cmp
mov
push
fsubrp
loope
cmp
outsb
fwait
into
push
outsb
sbb
mov
and
lds
mov
jmp
or
ljmp
xchg
fistps
mov
scas
push
add
sub
cs
sub
mov
ret
push
fisttpl
data16
xchg
ss
addr16
rolb
pushf
mov
ficoml
cmp
dec
pop
outsl
xchg
roll
and
dec
mov
test
inc
push
pop
xchg
rcrl
pusha
mov
dec
or
imul
outsb
and
imul
pop
xchg
hlt
xchg
push
in
jmp
fld
mov
cli
sbb
add
lods
xchg
mov
xchg
push
loope
lds
cmpsl
loopne
ret
push
jmp
or
or
jae
insl
out
mov
inc
test
repnz
outsl
loop
or
outsl
mov
dec
mov
andb
xchg
loop
jnp
xor
ret
cmpsb
jbe
mov
sbb
test
add
xlat
xor
sahf
xchg
add
xlat
push
stos
xor
xchg
xchg
stos
sbb
das
or
ja
pop
pop
push
mov
sub
call
std
test
add
loop
in
dec
lret
inc
sbb
pop
mov
ss
dec
loope
push
rcrl
cmp
mov
inc
scas
sbb
into
dec
leave
dec
inc
fistpl
repz
incb
or
repnz
mov
out
cmp
repnz
fidivrs
cmp
add
jo
popa
sbb
inc
leave
pusha
push
test
cmpb
add
outsl
adc
lret
adc
jecxz
out
test
decl
inc
xchg
sub
cmc
subl
insl
rol
shrb
mov
push
or
pop
in
jno
or
pop
dec
mov
fcompl
out
dec
loope
fdivs
sbb
xchg
xor
call
int3
lret
cld
push
cmp
test
jae
adc
cltd
inc
enter
icebp
mov
mov
add
mov
xlat
imul
jge
popf
decb
shrb
xorl
fdivp
sbb
adc
cmpsb
push
jle
dec
jo
fmuls
insb
das
cmp
test
pop
sbb
pop
push
jne
leave
adc
pop
cltd
out
xor
push
stos
push
fldt
ja
inc
sub
ja
stos
jns
aas
packssdw
mov
insl
push
dec
insl
xchg
aas
adc
cwtl
test
mov
daa
mov
cs
inc
fwait
cmp
jnp
fsts
jg
jge
or
mov
cli
mov
cld
call
pop
inc
pop
dec
cld
add
imul
addl
lds
loop
popf
nop
pusha
in
ds
xor
cmp
jno
inc
cmp
aas
fbld
rcr
xchg
pop
movsl
and
xchg
mov
cmp
push
stos
pushl
push
insb
pop
ds
jbe
lods
andb
pusha
cltd
xchg
repnz
testl
jecxz
jl
cmc
push
jp
push
jmp
test
bound
inc
fisttps
mov
add
enter
push
inc
push
out
insl
sub
dec
mov
pop
shrb
xor
rol
ret
mov
dec
popa
movsb
mov
mov
xchg
or
dec
ret
pop
inc
push
inc
mov
jecxz
sbb
subb
in
sbb
fcompl
xchg
cld
jge
xchg
xlat
add
cmp
jge
in
jmp
jo
dec
pop
shrl
cmp
ja
pop
in
loopne
jb
add
add
push
xchg
jp
cwtl
mov
loop
test
dec
dec
mov
js
rorb
es
xor
ror
imulb
sarb
inc
sub
fstps
sbb
sbb
sarl
shrb
js
adc
mov
sub
int
sub
les
pop
into
ja
rorb
jge
je
outsb
dec
cmp
dec
xchg
adc
lock
rorl
enter
sub
cmp
inc
cmp
or
pushf
inc
adc
push
lods
adc
lcall
push
out
xor
sub
adc
cli
ljmp
ret
sbb
stc
push
dec
add
pop
add
xchg
ja
adc
sahf
add
mov
sarl
add
xchg
aas
std
adc
imul
inc
iret
adc
fs
fs
pop
pushf
sbb
sbb
shl
lahf
flds
dec
call
shll
lock
mov
adc
shrl
ds
sbb
mov
out
lret
push
ret
and
adc
push
insb
rorb
xor
out
decl
mov
adc
dec
decl
and
cmp
mov
je
je
cmp
clc
mov
jns
mov
enter
mov
rcl
jmp
dec
jge
xchg
stc
imulb
into
hlt
enter
mov
cltd
stos
mov
jo
mov
adc
or
or
test
int
dec
and
out
cmpsl
mov
jp
xchg
cld
mov
fiadds
insb
xor
movsl
or
pop
decb
push
shlb
adc
jle
xor
jg
mov
mov
jmp
mov
jno
xchg
jge
add
or
xor
push
imul
int
push
xor
sbb
or
loop
lock
ret
dec
dec
lods
shrl
xchg
cmp
cmp
int
fwait
cmc
pop
push
daa
rclb
pop
and
mov
jmp
ljmp
xchg
push
insl
dec
iret
mov
push
cmp
out
or
sbb
or
sub
mov
pop
inc
xchg
jbe
pop
jecxz
lea
test
gs
data16
je
cli
mov
lock
add
mov
dec
cmp
lds
out
cmp
push
xlat
lea
mov
or
push
daa
xchg
pop
cmpsb
out
int3
inc
pop
ret
mov
stos
sub
xor
rol
xchg
inc
xor
call
inc
clc
pop
dec
add
xchg
aas
mov
push
fs
or
mov
lock
in
leave
aas
shll
enter
xchg
dec
add
movsb
orb
sbb
or
sub
and
lock
push
lods
std
ljmp
or
popa
aaa
mov
jbe
cltd
push
add
imul
sub
adc
decb
adcb
pop
and
pop
mov
cli
jp
fsub
shr
adc
push
stc
fidivrl
insb
fnstenv
jl
or
pop
nop
hlt
jecxz
or
or
mov
das
out
repz
xchg
push
mov
xor
push
das
mov
sub
lds
lahf
cld
jmp
loopne
and
rcll
in
xchg
xor
loope
xchg
mov
xchg
jns
fiaddl
mov
int3
or
insl
data16
jmp
ret
cli
sbb
mov
pop
or
loopne
in
imul
cmp
push
xor
shr
jbe
cmp
and
fisubrl
sub
and
shrb
fisttpl
cltd
addr16
int3
add
aas
aaa
inc
dec
xchg
jg
jnp
stos
fcmovnbe
shld
sti
adc
xchg
scas
push
add
xchg
dec
inc
xor
repnz
lcall
push
adc
outsl
mov
sahf
inc
push
bound
mov
adc
jbe
pushf
mov
cli
insl
push
and
inc
arpl
add
pop
sbb
gs
jns
push
pop
jae
inc
mov
dec
mov
and
imul
int3
fsubr
scas
mov
sub
pop
xchg
jmp
mov
mov
jns
ljmp
lret
outsb
jp
shr
ljmp
adc
dec
sbb
icebp
cmpsl
sub
mov
pop
push
pop
and
mov
xor
and
mov
sarb
xor
push
das
adc
in
adc
dec
cmp
xchg
or
pop
xlat
out
jecxz
xor
sbb
sub
dec
xor
push
sbb
push
sub
cld
pop
and
popf
ret
enter
dec
shll
add
jne
mov
pop
arpl
out
mov
push
add
sub
in
aam
faddp
mov
mov
mov
subb
xorb
stos
sahf
adc
int
dec
sbb
clc
or
call
test
push
rclb
pop
xchg
rorb
js
cltd
jl
mov
add
xchg
or
stos
aad
movsb
push
dec
pop
cmp
in
sub
jmp
cmpl
or
cs
inc
movsb
add
pop
ficomps
icebp
ret
xchg
push
mov
imul
cmp
jo
pop
imul
inc
xchg
lods
std
add
aad
in
pop
jae
inc
in
imul
daa
subl
mov
xchg
or
jo
in
xchg
jmp
sbbl
movsb
gs
inc
das
mov
pop
pusha
mov
jnp
pop
dec
std
aas
mov
mov
pop
pop
push
inc
push
jbe
daa
popf
push
mov
pcmpeqw
jno
insl
pushf
sbb
dec
shrl
addr16
jne
mov
sub
popf
sub
les
push
imul
inc
sar
std
jb
popf
data16
sub
cmp
movsl
outsl
jg
cmp
in
stos
addr16
test
jnp
scas
sub
mov
dec
in
xchg
xchg
xchg
sbbb
sub
jo
fiaddl
mov
adc
jp
push
repz
repnz
into
nop
hlt
push
mov
into
inc
jmp
aas
and
mov
clc
shll
aaa
mov
movsb
ds
mov
sub
loop
xor
jnp
xor
stos
xlat
xchg
and
add
mov
push
out
lahf
fistpl
mov
shlb
jno
dec
cmpsb
stos
jno
push
inc
xor
shrl
ret
mov
sbb
pmulhuw
repz
xchg
jae
inc
inc
sbb
cmp
jmp
pop
lcall
fimuls
or
les
mov
jnp
rcll
mov
sub
inc
rcrb
mov
lret
cmp
xchg
jbe
or
pop
pop
xchg
out
jg
xchg
imul
popf
pop
andb
sub
ret
xor
xor
out
test
xor
andl
popa
cld
pop
lock
or
fldcw
out
je
ss
cmpl
outsb
je
jnp
cwtl
lahf
add
xchg
ljmp
jbe,pt
and
pop
xor
xchg
fldl
xchg
fdivrl
pop
into
mov
mov
lret
shrb
hlt
dec
dec
movsb
jb
pop
or
and
in
call
stc
inc
inc
gs
cld
xchg
insl
rcll
out
ja
les
icebp
jne
xchg
mov
testl
sti
jl
sub
mov
jbe
subb
mov
xchg
lret
cmp
jle
sbb
test
pushl
jno
cli
cmp
mov
adc
jecxz
ret
mov
xchg
out
fildl
dec
lock
inc
mov
aam
xor
ds
cmpsl
xchg
sahf
aam
divb
dec
or
es
in
push
imul
and
or
jp
sbb
fdiv
mov
dec
aam
sbb
sub
jecxz
inc
in
mov
aas
jbe
dec
pop
push
scas
ss
or
push
leave
adc
and
movsl
sbb
sbb
outsl
cmp
xchg
dec
scas
shrl
je
sbb
test
ret
mov
lret
testb
push
stos
push
lds
imul
cmp
sahf
push
cmpsb
mov
loope
test
pop
out
cmp
dec
mov
cmp
pop
shlb
add
xchg
push
repnz
jecxz
shl
sbb
stos
mov
mov
pop
xchg
sub
lock
sub
faddp
add
inc
jl
repz
or
lret
push
scas
mov
dec
adc
les
pop
ret
cltd
sub
mov
sahf
repnz
inc
and
imul
lcall
push
imul
cmp
push
sarb
stc
mov
cmp
mov
loop
push
les
faddl
add
in
jge
mov
stos
dec
xchg
movsl
jmp
inc
ja
adc
xor
cmpsl
imul
pop
into
daa
or
adc
movsl
mov
inc
xor
or
push
xor
arpl
xlat
fstpl
fdivrl
cs
cmp
ret
jo
les
and
jo
jmp
cmpsb
pop
mov
sahf
lods
das
push
sbb
dec
sbb
test
xlat
aas
loop
push
fimuls
add
adc
mov
lret
jl
adc
and
sbb
sbb
outsb
jns
jo
outsl
imul
fsub
mov
lss
dec
xchg
leave
mov
ret
xchg
pop
loop
lods
int
xor
popa
dec
pop
in
aam
push
jecxz
js
push
loop
call
popa
push
add
jg
xor
sbb
pop
repz
jbe
jno
jle
scas
add
imul
leave
mov
dec
sbb
out
imul
xchg
mov
in
loopne
adc
xchg
mov
ret
sub
fcom
push
mov
out
cmp
cmp
imull
jno
mov
dec
xor
pushf
push
stc
inc
in
ljmp
mov
push
rorl
xor
jnp
jmp
cmp
nop
jmp
cs
jge
insl
sub
sub
sub
das
loope
sub
mov
out
cli
je
fwait
push
insl
jno
jbe
mov
mov
xchg
pop
push
leave
call
outsl
push
push
sub
sub
sahf
xchg
xchg
dec
rorl
mov
pusha
hlt
inc
scas
dec
or
add
add
ja
jmp
mov
cmp
pop
pushf
push
xor
add
lret
pop
pop
pop
jl
push
mov
mov
ret
outsb
jns
mov
push
je
xchg
jns
sbb
fdivrs
push
in
or
or
flds
les
xlat
cmp
adc
insl
push
pop
adc
loopne
push
movsb
mov
mov
adc
aam
xchg
add
pop
aam
cmp
mov
push
push
lods
xchg
dec
add
sub
pushf
dec
mov
fmuls
loop
rorl
pop
fiadds
or
icebp
nop
mov
mov
xor
mov
mov
adc
test
push
sbb
jg
pop
xchg
pop
ja
imul
mov
xor
jp
pusha
pop
and
cld
cs
outsb
mov
sbb
aas
xor
fwait
jo
mov
jg
pop
inc
adc
mov
inc
push
mov
div
cmp
xchg
sub
cmp
in
test
fildll
fucomi
fistpl
int
push
cltd
sahf
outsb
stos
sbb
inc
inc
push
outsb
ss
mov
push
insb
leave
test
test
shll
or
adc
or
mov
mov
loop
sub
push
lcall
pop
xor
in
cmc
arpl
add
inc
inc
jb
or
sbb
je
add
out
je
xor
push
mov
mov
inc
pop
push
mov
lahf
lret
call
in
lods
sub
xor
sub
push
cwtl
sub
cltd
test
and
xchg
nop
dec
jno
shll
scas
pop
jle
mov
pop
mov
cld
jl
out
in
lea
repz
shrl
test
outsl
adc
cltd
rcrb
xor
ds
xchg
xchg
xchg
out
pop
cmp
ja
and
out
inc
cltd
mov
cmp
test
jns
movsl
sbb
fcompl
test
add
out
xor
push
and
or
fdivr
aas
sbb
push
shlb
jne
movsl
push
jne
outsl
int
push
rcll
test
push
in
lds
jae
aad
xchg
cmpsb
fwait
rol
dec
into
nop
mov
or
leave
dec
jmp
clc
in
cmpsl
mov
sti
andb
int3
out
ljmp
mov
bound
or
push
data16
jl
shrb
push
cmpsb
fwait
sahf
pop
cli
jle
inc
jns
jge
and
movsb
and
inc
andb
js
fidivrl
mov
pop
loopne
cmp
bswap
push
push
outsb
outsl
sarl
and
js
scas
mov
lahf
fdivrl
lods
mov
xor
mov
int
push
test
ss
mov
jae
testl
or
cwtl
push
out
push
scas
pop
loop
psubsw
pushf
add
pop
xchg
scas
fwait
cmp
or
push
in
xchg
adc
mov
rorl
popa
sahf
out
pop
mov
fs
jb
xor
fisubrs
cmp
adc
shll
aad
adc
mov
insb
dec
scas
std
nop
insl
mov
data16
sbb
add
pop
xchg
mov
in
aad
dec
add
out
fnstsw
pusha
mov
fdivrs
aaa
mov
imul
mov
test
imul
and
aaa
push
ljmp
andb
sbb
addb
xchg
and
insl
pop
loope
cwtl
mov
xchg
mov
mov
dec
inc
mov
cli
fidivrl
cmp
cmc
popf
xor
jne
jae
pusha
mov
lret
dec
jns
pop
or
shlb
pop
dec
mov
or
jg
cmp
push
adc
aaa
dec
pop
repnz
iret
jno
push
andl
dec
mov
push
int3
mov
push
sysexit
repnz
xor
mov
xchg
push
jb
pop
sbb
mov
call
jo
pop
sbb
repnz
bound
not
loopne
pop
scas
ljmp
test
in
add
sub
adc
pop
cli
xchg
jno
dec
outsl
add
lods
outsb
sbb
pop
mov
lret
push
jne
fwait
negb
jg
repnz
pop
ljmp
mov
xlat
inc
pop
pop
pushf
push
mov
out
scas
sub
xor
in
inc
adc
dec
inc
bound
sbb
add
orb
imul
in
lahf
sarl
jo
sbb
fldl
pop
xor
js
pop
rorl
gs
icebp
fucomi
xor
push
int
mov
or
nop
mov
arpl
imul
in
push
xchg
inc
test
jecxz
sahf
arpl
out
push
cmc
or
fistl
enter
faddl
clc
in
sub
pop
xchg
adc
aam
mov
clc
xchg
dec
in
dec
movsb
dec
lods
pop
inc
movsb
or
test
inc
dec
stos
sub
mov
dec
ret
add
int3
xchg
add
pusha
mov
dec
loop
test
pop
negl
daa
mov
loope
out
inc
stos
xchg
sahf
sbb
inc
pop
fnstcw
je
xchg
popf
adc
inc
cmp
frstor
mov
inc
xchg
imul
push
cmpsb
adc
add
cwtl
cmp
jmp
cmp
pusha
rcrl
sub
add
das
shll
in
and
hlt
mov
stc
pushf
pop
loope
aas
inc
push
fcoms
and
pop
mov
or
cs
mov
iret
jae
fisubrl
mov
sbbb
push
inc
scas
xor
jns
clc
sahf
push
sarb
popa
pop
mov
xor
fdivrs
jnp
imulb
enter
add
movsb
pop
jecxz
pop
lea
xlat
data16
inc
js
mov
push
inc
xor
fdivs
jae
out
xor
mov
lahf
xchg
popf
and
insb
pop
test
out
arpl
jnp
adc
fcmovbe
adc
push
cli
sbb
jl
js
outsl
std
jge
dec
hlt
mov
push
es
adc
add
cwtl
pusha
cli
aam
mov
dec
xchg
call
es
mov
cmpsl
jne
mov
sar
pop
sub
mov
jge
add
add
aad
push
out
leave
dec
arpl
and
add
inc
mov
dec
pop
and
ret
or
push
imul
adc
loop
sub
inc
dec
jl
jnp
call
es
lods
fs
ret
adc
aam
not
add
pop
mov
pop
ret
orl
pop
lahf
popf
jl
je
mov
add
out
mov
test
lods
pusha
xor
adc
and
cmp
xchg
pop
mov
insl
es
mov
mov
outsl
jp
cmp
pushf
add
loope
cs
sbb
lret
insb
cmp
push
add
mov
mov
idivb
in
pop
cmp
addb
and
sub
mov
dec
add
enter
imul
or
cmp
jb
es
mov
jmp
das
or
jae
fs
xor
leave
je
es
in
push
xor
cmp
fldt
dec
aaa
sbb
jle
cld
push
dec
pusha
cmc
imul
loope
movsl
idivb
lds
jle
popf
rclb
mov
clc
mov
push
imulb
cmp
xor
clc
or
es
ds
test
push
test
add
push
shrb
sub
push
sbb
popf
aas
or
xchg
mov
out
jne
lahf
mov
inc
mov
xor
mov
adc
mov
clc
xchg
mov
pop
outsl
mov
int3
push
out
add
dec
xor
aam
jno
dec
outsb
add
loope,pt
fs
out
ret
sub
data16
xlat
insb
push
mov
fs
dec
pop
and
mov
out
in
xlat
sbb
and
mov
sbb
ss
loope
leave
push
daa
xchg
inc
stc
or
inc
mov
frstor
arpl
pop
cli
inc
addb
insb
mov
jne
adc
xor
and
insb
pop
aaa
popa
pop
xchg
and
adc
int3
jae
pop
xor
scas
testl
dec
xchg
jbe
sti
dec
cmp
dec
jae
arpl
stos
mov
mov
fnstsw
jbe
or
cmp
rorl
push
inc
shl
cmpsb
fdivl
fnstcw
in
js
out
inc
stos
jp
outsl
cltd
ret
lods
scas
mov
mov
dec
insb
repnz
lods
pop
in
and
pop
pushf
daa
cmp
cltd
les
das
xchg
scas
jne
popf
cmp
sub
mov
les
loopne
cmp
leave
pop
add
jb
add
pop
rcrb
cmp
bound
inc
adc
in
xchg
push
cli
mov
into
push
inc
ret
imul
or
push
add
sbb
mov
scas
add
fidivs
shr
dec
mov
shll
add
xor
lahf
testb
or
mov
xchg
add
dec
mov
insl
add
push
fs
cmp
jbe
clc
insb
ja
sahf
repz
push
pusha
arpl
fistps
insl
test
xor
in
scas
and
lret
sub
xchg
pop
adc
std
movsl
mov
lods
ss
sbb
repz
ret
rorl
ljmp
clc
dec
ret
sbb
sbb
mov
lcall
cltd
push
rcll
pop
mov
sub
jecxz
pop
in
mov
sub
je
or
or
movsb
push
mov
aam
mov
or
adc
and
stos
dec
mov
mov
insl
cmc
stc
pop
stos
push
iret
mov
lods
or
jecxz
popf
pop
inc
mov
ljmp
fistpl
or
gs
sub
outsb
fmuls
mov
mov
fldcw
adc
pop
outsb
outsl
mov
insb
pop
and
lea
jp
sub
xchg
shlb
xchg
jno
xchg
js
pop
rcll
popf
mov
es
add
or
into
pop
aam
call
popf
rcll
shr
mov
push
pop
xchg
push
fistpl
xchg
mov
mov
insb
lahf
cmp
aam
and
push
test
aaa
sub
mov
push
push
pop
sbb
inc
adc
mov
test
out
or
xor
mov
outsb
push
das
pushf
in
nop
lock
xchg
mov
lret
cltd
shlb
test
in
xchg
pop
in
idivb
xor
adc
lea
stos
push
das
add
ss
cmp
dec
push
mov
jne
nop
inc
fidivrs
push
cmp
sbbl
fmuls
xor
push
lock
loop
ffreep
xchg
cmp
push
dec
pop
sbb
int3
push
icebp
lret
lcall
push
mov
fstl
stos
pop
in
ja
cmc
push
clc
push
pop
ljmp
dec
inc
lcall
mov
popf
rcrl
cmp
pop
jns
icebp
jge
cltd
xchg
add
arpl
data16
push
mov
andl
mov
ret
mov
mov
mov
bound
iret
or
cmpsb
clc
call
jg
std
dec
push
or
ret
aam
jo
inc
in
xor
mov
pop
mov
shlb
dec
orl
push
cmp
movsb
pop
dec
loopne
rcrb
sbb
arpl
cltd
stc
sub
mov
push
xor
add
int
fbld
dec
sahf
inc
fsubrl
aaa
dec
ljmp
sbb
xchg
test
das
repnz
xor
je
push
mov
rcrl
push
lea
adc
cmp
das
les
mov
loope
push
sbb
sub
nop
pop
mov
int
lds
insb
push
test
xorl
xor
cmc
sub
cmp
jmp
int
mov
xchg
repnz
es
daa
jno
adc
lcall
aad
push
fbstp
jge
int
data16
lods
xor
lret
movsl
imul
int3
rolb
or
and
mov
jo
out
xchg
bound
inc
notb
push
or
push
mov
pop
sti
mov
loope
out
push
sar
mov
test
sub
mov
mov
mov
and
cltd
js
call
insb
jne
mov
sbb
xor
xchg
stc
pop
push
mov
cmp
cmpsl
pop
in
pop
jae
ljmpw
xorl
cli
nop
mov
dec
pop
add
mov
out
cs
shll
xor
jb
lahf
aam
aad
cmp
or
icebp
pop
popf
dec
popf
jl
or
test
or
cmp
jle
pop
add
mov
lods
mov
sub
ss
xor
jae
and
fwait
shr
push
arpl
fmull
scas
mov
lahf
ds
sbb
push
test
dec
adc
pop
cmp
int3
mov
cmc
add
iret
dec
imul
inc
ja
test
jl
int3
out
add
dec
cli
xor
hlt
nop
or
push
push
lock
scas
or
rolb
cmp
xchg
xchg
nop
pushf
hlt
adc
lcall
cmp
or
lret
adc
cmp
or
pop
xor
add
cmp
aaa
fcmovne
push
cmpsl
cmp
sbb
or
and
jo
negb
mov
xor
iret
mov
push
dec
adc
and
mov
mov
lcall
ja
in
mov
pop
and
daa
jb
xor
cmp
cld
out
pop
loop
fdivrl
jmp
xor
xor
popa
mov
mov
push
rcll
xor
pop
pop
ret
cmp
sbb
xchg
xor
cmp
popf
add
outsl
and
adc
sbbb
idivb
pop
int3
mov
pusha
inc
add
cmc
xor
push
inc
gs
daa
loopne
bound
cmp
into
inc
icebp
pop
mov
adc
addr16
inc
lret
xor
out
adc
shll
cmpsb
push
fmuls
stos
fcoml
xchg
xchg
rol
fbld
or
xchg
sbb
cmp
jecxz
sub
pop
or
or
adc
inc
jp
jae
mov
sbb
es
dec
adc
pop
or
out
pop
stos
cmp
push
or
in
loope
fcomp
setle
xchg
cs
iret
gs
inc
push
push
cmpsb
inc
inc
sahf
andb
pop
sbb
sbb
fwait
mov
xor
call
mov
dec
sarb
dec
fwait
mov
aam
insb
or
les
lock
adc
mov
xor
ja
sar
mov
fists
sub
mov
xor
test
adc
add
sub
dec
test
inc
rcrl
adc
mov
lret
cltd
sub
xchg
mov
popa
inc
cmp
fsubl
cs
sub
andb
jge
jb
fwait
adc
sub
push
in
cmp
push
push
lahf
movl
jbe
xchg
loope
inc
add
ljmp
cmp
or
ret
inc
arpl
push
aas
mov
fiaddl
pushf
or
adc
call
mov
fxtract
jb
stos
mov
mov
jb
xchg
loop
cltd
lock
arpl
orl
lret
mov
mov
movsb
push
cli
inc
shll
repnz
push
sti
dec
outsl
pop
sbb
insb
jle
in
sarl
adc
and
jno,pt
mov
shrb
repz
mov
rorl
adc
mov
in
mov
les
stc
push
pop
es
dec
jmp
jmp
in
sub
fs
out
arpl
add
insl
dec
rorb
mov
jge
out
jp
push
fucomip
fwait
add
pop
test
xchg
xor
mov
mov
repz
push
in
int3
fnstenv
sahf
adc
sti
test
test
movsl
lret
or
movsb
cld
lret
and
pop
add
mov
mov
sahf
mov
je
iret
xchg
arpl
xchg
xchg
scas
xor
mov
dec
xchg
xor
sub
jnp
arpl
sbb
cmp
mov
jge
mov
and
bound
imul
xor
jns
scas
and
push
out
loopne
cmpsl
arpl
mov
cmp
shrd
sub
fstps
and
mov
sbb
mov
cmp
jg
movsl
adc
aam
clc
lcall
sbb
in
mov
mov
fldt
mov
cmp
ret
out
xchg
lds
inc
rcl
fnsave
jnp
mov
lahf
push
xchg
shlb
es
jp
push
mov
or
cltd
pop
testl
test
pop
lds
mov
fwait
inc
movsl
pop
aas
mov
iret
fcoms
and
xchg
sbb
mov
fsub
shl
jns
add
push
roll
inc
mov
push
mov
fs
fs
cli
int
lcall
mov
jl
sub
xor
jle
mov
lahf
mov
testb
jo
rcrl
mov
mov
call
xlat
test
add
jge
into
ljmp
fs
jns
inc
push
xchg
inc
xchg
lds
call
test
mov
mov
aaa
stos
push
or
or
jno
repz
fisubl
mov
pop
pop
lock
enter
jg
inc
rolb
lock
mov
mov
pushf
jns
ss
mov
mov
data16
cmp
xor
and
inc
dec
jbe
call
lret
fsubrs
repz
out
aaa
int3
jecxz
mov
aad
out
pop
cmpsb
mov
push
or
dec
xor
sub
int
jecxz
jno
cmp
cmp
neg
pop
negl
data16
adc
mov
fbld
or
adc
adc
loope
inc
std
xor
sub
bound
aad
pop
mov
dec
lret
std
adc
push
push
and
in
push
inc
jb,pt
add
gs
sbb
mov
imul
mov
inc
int3
lahf
or
inc
fbld
inc
add
les
adc
movsl
lods
insb
xchg
aad
sbb
cmp
xor
adc
cmc
fimuls
xor
lea
repz
cmc
add
pop
mov
stc
jg
testl
loopne
pop
rcl
imul
or
jmp
lret
mov
jns
pop
dec
dec
cmp
movsw
inc
sahf
and
push
cli
shll
dec
sbb
cld
fisubs
aad
cmpsb
xchg
jle
je
push
jmp
call
mov
jbe
gs
shlb
xchg
lea
xchg
or
jnp
movsb
fdivl
adc
icebp
ss
ficoms
add
jae
cmc
imul
leave
ds
scas
iret
jle
outsb
sub
inc
push
mov
mov
or
jg
lea
insb
pop
push
xor
adcb
push
mov
sbb
pusha
test
daa
jns
imul
cltd
mov
inc
imul
dec
fdivl
arpl
or
gs
loope
inc
addr16
cmp
mov
cmp
jne
xchg
adc
mul
popl
push
or
cmpsb
mov
mov
sbb
adc
mov
lock
cmpsb
or
pop
mov
jbe
xchg
jecxz
stos
shrl
inc
cmpb
test
mov
sti
fsubrl
pop
mov
xchg
in
fucomip
es
adc
dec
adc
and
xchg
mov
xor
jns
xchg
ljmp
les
insb
xor
mov
ljmp
cs
adcb
cmc
jo
popa
and
leave
lcall
mull
and
inc
xchg
js
out
nop
jae
leave
push
rorl
or
dec
decl
fcmovnbe
insb
and
pop
pushf
mov
shlb
mov
jle
imul
push
xor
add
and
sbb
and
daa
fwait
mov
shrl
fstl
and
inc
dec
int
dec
cmpsb
pushf
xchg
xor
leave
ret
aad
in
xchg
jg
stos
push
popf
rcrl
shlb
fcomp
sub
mov
sahf
sub
or
or
in
cmp
fs
jg
movsl
xor
icebp
jecxz
mov
push
imul
cld
and
aaa
fstp
push
ljmp
or
aaa
je
movsl
test
fucomi
int
and
and
stos
lock
shll
fs
fsubrs
inc
xor
je
nop
into
adc
sbb
jecxz
sbb
or
dec
cmp
loopne
in
mov
test
jbe
test
push
outsb
lods
dec
out
lret
dec
mov
leave
push
pop
sbb
sbb
das
sbb
xchg
fsubr
mov
ret
bound
fidivrs
sbb
mov
cmpsl
jmp
jecxz
xchg
dec
xchg
sub
inc
lret
dec
and
sub
mov
icebp
rcrl
and
mov
movsb
call
enter
xor
push
popa
nop
jns
mov
push
sbb
test
cmc
sbb
cmp
aam
repz
shll
pop
es
cli
adc
dec
mov
aas
or
lds
loope
hlt
not
cs
xor
incb
scas
sbb
xchg
add
into
xchg
mov
aam
je
cmp
mov
pop
add
jmp
fs
in
icebp
mov
cmp
test
outsb
lcall
in
mov
movsb
sar
mov
add
and
adc
pop
mov
inc
xlat
ret
inc
movsb
sbb
mov
push
lock
insb
xchg
in
jge
xchg
and
shll
and
jne
cmp
mov
cmp
in
dec
sahf
xchg
adc
jo
test
cmpsl
mov
jecxz
lods
pop
mov
adc
jnp
xor
mov
popf
mov
sbb
jl
sbb
dec
faddl
idivl
xchg
aam
repnz
frstor
push
cli
sarl
rcll
push
jae
dec
pop
lock
sub
inc
fidivl
jb
jp
es
pop
add
ret
clc
jne
adc
fimuls
xor
popa
dec
xchg
rcrb
ficomps
push
inc
stos
and
inc
xchg
jno
dec
jl
push
cmp
mov
adc
and
jg
push
cli
add
pop
fisubs
pop
inc
xor
loopne
in
xchg
push
mov
filds
insl
sub
stos
aas
dec
popa
test
jns
pop
sub
je
and
mov
sarl
dec
sub
cmp
xchg
push
subb
push
out
inc
sti
pop
std
sahf
int3
dec
inc
out
or
jo
mov
inc
add
xor
repz
xchg
adc
add
sahf
test
or
sub
bound
ret
in
xor
adc
ja
popf
adcl
lods
xchg
inc
add
lcall
xchg
std
cmp
ja
xchg
inc
add
fs
cmp
clc
shlb
outsl
es
mov
or
jbe
ret
in
dec
push
mov
pop
stos
test
in
pusha
inc
jmp
push
pop
dec
xchg
fcos
mov
add
iret
cmp
mov
push
sbb
inc
outsl
testl
sbb
jle
mov
mov
fstps
sti
xchg
mov
dec
inc
jno
push
jb
dec
leave
lcall
cs
fldenv
xchg
jo
leave
dec
mov
std
popf
bound
sar
fwait
es
ret
aaa
clc
dec
jo
insb
fcmovnu
mov
mov
sahf
mov
add
pop
mov
int
and
icebp
inc
mov
xor
xchg
sub
rcrb
movsl
leave
push
or
pop
inc
sbb
mov
mov
adc
mov
or
lods
inc
stos
int3
add
ja
out
dec
and
sub
aam
cltd
cld
xor
aas
sahf
jecxz
fisttps
or
inc
xchg
mov
fidivs
mov
jns
push
mov
loop
xor
fs
mov
xor
fcomi
ja
inc
lret
notb
jb
ss
inc
imul
dec
xor
fcmovb
loope
movsl
bound
xor
movsb
fstps
out
dec
add
add
stc
adc
mov
jnp
push
hlt
flds
and
xchg
int3
out
incb
adc
dec
repnz
sbb
dec
push
adc
cmp
sub
jecxz
jge
pop
sbb
cmpsb
ljmp
sbb
push
mov
xor
mov
push
imul
add
mov
clc
orl
sahf
dec
sub
mov
jb
iret
and
cmp
xchg
in
pop
jne
dec
xchg
dec
xlat
push
mov
add
jmp
mov
push
imul
sub
data16
add
and
adc
es
test
inc
sbb
push
add
cs
jb
xchg
ret
cltd
in
pop
stos
sub
lock
mov
ljmp
pop
pop
adc
cmp
es
xchg
cmp
cs
mull
clc
adc
shlb
jl
enter
sahf
pop
jbe
push
xlat
add
and
lods
in
xor
shrl
jnp
sub
aam
orb
gs
lcall
movsb
sbb
dec
orb
scas
pushf
fidivrs
mov
fcompl
lea
sub
pusha
adc
sub
sbb
test
and
jmp
sbb
jl
cmp
mov
std
sub
or
and
out
inc
out
pop
icebp
adc
arpl
mov
jge
adc
inc
inc
fxch
sub
or
cld
addr16
pushf
jecxz
pop
incb
in
out
lods
movsb
fwait
icebp
aas
pop
mov
mov
subl
mov
scas
bound
xor
mov
dec
cmpsb
lcall
inc
aaa
icebp
lock
fidivrs
in
inc
add
rorb
lret
imul
sub
push
jg
outsb
cmp
or
lcall
ret
in
xchg
ss
int3
cld
push
adc
and
cmp
xchg
sub
sbb
stc
clc
mov
les
sub
push
mov
or
jmp
mov
xor
lods
sbb
jp
cwtl
or
adc
gs
xchg
sub
cmp
into
push
mov
sbb
push
jl
ja
cli
push
xor
pushl
cmp
icebp
push
xor
and
add
sbb
iret
lea
inc
repnz
imul
xlat
mov
dec
hlt
xchg
fsubrp
dec
scas
pop
dec
fincstp
sub
das
and
pop
mov
xchg
fsts
sub
ficompl
sub
jg
lods
aad
xchg
scas
xor
enter
sbb
imul
aas
adc
inc
cmp
dec
mov
out
xor
mov
jae
stos
add
sub
adc
xchg
lret
icebp
lahf
rcrb
lea
xor
stos
sarb
add
lods
mov
negl
cmp
jecxz
adc
ds
sub
jl
mov
lock
xor
daa
aad
lock
idivl
push
or
add
call
jns
into
pushfw
fsubl
push
jns
andb
fwait
push
icebp
je
push
mov
cmpsl
leave
mov
sbb
fdivl
bound
pushf
loope
fs
sarl
ror
pop
ficomps
je
mov
fcmovu
popf
jle
xchg
sbb
lods
cmpsb
or
lret
les
mov
adc
cmp
mov
adc
mov
out
push
add
cltd
mov
mov
icebp
rorb
dec
adc
mov
aas
scas
and
inc
mov
mov
shlb
sub
insl
mov
sbb
loopne
or
push
mov
jns
roll
in
adc
cmp
jo
sti
push
jne
jnp
movsb
push
sbbl
jl
int3
xchg
out
adc
cmpsl
shll
dec
out
ret
mov
pop
cs
stos
sbb
jo
mov
inc
dec
push
sub
mov
clc
out
mov
out
movsl
xchg
and
or
fstps
adc
rcrl
push
lret
in
add
and
sbb
lret
push
pushf
in
aam
int
dec
sbb
xor
sbb
pop
mov
negb
or
xlat
les
xor
push
and
aaa
mov
pop
clc
inc
or
out
fnstsw
fmull
sti
dec
push
arpl
cmp
sbbl
hlt
jnp
or
jnp
push
dec
xchg
mov
out
xor
cld
mov
test
aaa
push
fiadds
inc
lock
push
imul
mov
cmpsb
sub
xor
int
or
jne
mov
pop
mov
enter
mov
adcl
jb
out
leave
mov
push
cwtl
jle
mov
add
mov
dec
inc
divb
fldcw
dec
stos
call
mov
dec
pop
std
scas
js
and
xor
cmp
mov
mov
jg
ds
daa
je
rorb
push
adc
nop
ljmp
inc
scas
fbld
imul
dec
add
dec
sbb
cmc
not
xchg
jle
push
in
cwtl
push
fisubrl
jl
addr16
das
or
mov
pop
stc
mov
fsubs
arpl
sbb
div
inc
jg
adc
lret
mov
xor
push
pop
xchg
popl
pop
in
sbb
sbb
xchg
js
mov
insl
pusha
cmp
jbe
jno
aad
mov
cmp
push
xchg
stc
cmp
push
sub
mov
sub
jle
pop
ret
std
insl
mov
fisubl
push
shll
mov
out
jb
insl
rcrb
outsl
imul
das
and
add
or
cmpsb
mov
inc
cmpsl
sub
pop
adc
dec
fildll
inc
sbb
out
popf
xchg
imul
add
jns
mov
fsubl
test
std
sbb
mov
sbb
mov
hlt
sbb
test
push
cmp
pop
adc
fisttps
orl
push
adc
daa
jne
mov
sub
sub
push
dec
push
insl
fcoml
out
jp
ffree
adc
bound
out
jecxz
int3
xchg
arpl
aaa
jmp
test
mov
sbb
add
outsb
add
enter
or
out
bound
jl
out
jmp
and
and
inc
mov
mov
mov
push
dec
sbb
ds
iret
dec
dec
mov
add
add
aad
jmp
imul
ret
sbb
push
daa
shl
scas
mov
jp
imulb
cld
pusha
arpl
and
xchg
pop
sub
or
faddl
sub
sbb
dec
xchg
das
mov
lret
insl
notb
mov
arpl
dec
and
adc
ret
movsl
pushf
cs
mov
sub
mov
stos
movsb
dec
hlt
sbb
xor
cmpsl
pop
push
sbb
imul
mov
rolb
jbe
adc
xchg
inc
mov
xor
jo
xchg
jae
lock
xor
mov
int
daa
cs
inc
shll
in
gs
cmc
xchg
dec
push
fs
movsb
or
inc
mov
jl
adc
jl
adc
add
pop
lea
xchg
adc
mov
cmpsl
cld
push
sub
das
ret
fwait
cmp
rcrb
in
in
std
jne
push
sbb
push
lret
ficompl
scas
inc
or
div
lcall
pop
movsl
cmp
mov
das
jg
sbb
push
mov
xchg
out
imul
ds
dec
sbb
hlt
movsb
xchg
push
int
and
mov
cwtl
push
push
repnz
gs
xchg
loop
pop
adc
fisubs
inc
xchg
inc
lock
push
xlat
inc
pop
aad
scas
xchg
dec
loope
shll
inc
sub
in
nop
mov
mov
jg
test
sbb
pop
push
je,pn
or
sti
xor
xchg
scas
mov
bound
sbb
and
fsubrl
arpl
std
pop
sbb
cmp
imul
orb
adc
push
mov
dec
stos
xchg
lods
insb
mov
loopne
push
out
les
popa
in
in
loopne
lret
out
inc
cs
out
lea
jno
xchg
xor
fs
das
mov
jnp
xchg
sbb
fistps
mov
mov
sbb
jae
xchg
inc
rcl
fistl
out
int3
mov
adc
mov
jae
push
xchg
mov
xchg
mov
mov
rcll
dec
mov
lret
dec
pop
aam
jno
mov
pop
pop
pop
clc
xor
xchg
adc
cs
mov
push
and
iret
xlat
lahf
stos
lcall
sbb
add
sahf
ds
sub
mov
xor
xor
jno
jmp
ret
add
cmp
loop
clc
xchg
mov
add
leave
jmp
aad
in
mov
fdivr
mov
mov
stc
dec
js
mov
or
inc
in
cld
std
imul
loopne
xor
aam
ds
mov
add
lcall
fsts
cld
pusha
jno
adc
adc
cli
cld
pushl
in
push
adc
in
or
out
add
inc
cli
lds
arpl
sub
and
xchg
pop
imul
add
xor
andl
stos
mov
or
jns
insl
mov
repz
repz
mov
sub
and
xchg
hlt
inc
mov
jae
xchg
jecxz,pn
std
popf
dec
int
in
fs
adc
cmp
sbb
push
sub
sar
add
adc
jb
sbb
pop
mov
aam
xor
pop
fidivrl
adc
sub
cli
mov
addr16
dec
out
aam
lret
dec
push
leave
inc
ljmp
dec
xor
pop
pop
jno
mov
fnstcw
call
adc
pusha
shl
and
and
int
add
lds
test
mov
xchg
icebp
xor
mov
enter
push
jbe
xchg
xchg
sub
insl
int3
sbb
add
test
mov
add
rcrb
lods
sarl
shlb
push
movsb
xchg
mov
mov
inc
lock
pop
jecxz
out
mov
mov
jp
mov
test
incl
xchg
sbb
ljmp
fdivr
cmp
adc
jne
mov
xchg
xorl
cmp
push
jne
push
and
push
mov
popf
sub
add
mov
out
pop
sbb
lods
inc
loopne
stos
popf
or
mov
or
cmp
in
xchg
mov
adc
adc
jg
push
daa
pop
aam
fcoms
out
mov
mov
jb
sub
in
lahf
jae
cmp
inc
jl
movsb
push
pop
lret
ret
ljmp
cmp
dec
xchg
dec
adc
imul
or
pop
in
std
cmp
mov
test
pushf
sbb
mov
or
fimull
jae
cvtps2pi
subl
mov
add
mov
mov
lcall
je
and
das
dec
and
inc
adc
inc
push
out
pop
pop
lcall
dec
aaa
and
mov
int3
pusha
sbb
insl
or
sub
xchg
pop
sbb
arpl
sti
and
test
js
fnstenv
mov
call
arpl
xchg
sbb
outsl
push
mov
xchg
shll
sub
scas
xor
cmpsb
cmp
es
sbb
nop
insl
inc
push
cmpl
test
mov
or
push
out
push
scas
ds
out
adc
sub
popa
xchg
xchg
lcall
stos
push
add
mov
push
dec
divb
imul
mov
mov
aam
push
das
outsb
in
out
pop
hlt
ja
ja
repnz
lret
jne
cltd
cmp
dec
ret
test
jge
dec
test
inc
aam
std
dec
or
leave
fdivrs
aam
and
in
jecxz
out
test
pop
add
rcrb
cmpl
inc
clc
add
jmp
xor
in
cmc
pop
ret
mov
ss
push
push
mov
cmc
ds
jbe
mov
and
lods
insl
mov
in
mov
or
out
cwtl
sbb
incb
jecxz
or
xor
ss
xchg
dec
xchg
mov
fisttps
xchg
into
sti
repz
fstl
mov
loopne
int3
inc
xchg
scas
adc
js
sub
loop
cmp
or
orl
popf
add
repnz
sub
bound
lock
sbbb
sbbb
aas
mov
xchg
pushf
out
cltd
add
test
or
sbb
jp
cld
cli
fidivrs
push
ljmp
mov
or
jl
pop
into
loope
leave
sti
xchg
ds
xor
push
inc
pusha
sub
repnz
sbb
lods
test
sbbl
add
jecxz
xor
mov
xchg
dec
inc
xchg
jl
jae
mulb
lahf
adc
leave
mov
cld
jg
sbb
outsl
sbb
jb
mov
xlat
mov
in
sbb
add
shrb
popa
sub
cli
jmp
int3
sahf
cwtl
inc
sbb
mov
and
loop
xchg
sbbb
lds
test
in
out
dec
cwtl
mov
mov
sti
fcmovb
jmp
xchg
jae
bound
lods
js
cmp
test
dec
adc
pusha
andl
inc
scas
test
xor
cltd
mov
aad
jno
lret
rolb
ret
rcl
clc
sub
push
ljmp
in
mov
sub
shll
mov
outsb
mov
pop
mov
mov
popf
mov
xchg
xchg
mov
push
mov
xor
daa
xor
sbb
pushf
mov
imul
mov
ss
xor
mov
pop
aaa
pop
xchg
pop
mov
jo
and
pop
or
mov
fs
dec
sbb
cmpsl
imul
clc
mov
push
and
xchg
and
enter
mov
mov
dec
rorl
imul
out
nop
les
fbld
cmp
cli
daa
sahf
in
push
cmpsl
fwait
xchg
xor
nop
idivl
jl
sbb
mov
cmp
xchg
subl
add
mov
cwtl
jmp
aaa
mulb
xor
mov
mov
pop
in
sbb
and
adc
pop
inc
lods
aaa
cmp
dec
and
or
js
ss
loopne
in
lds
xor
push
dec
inc
mov
mov
or
int
sub
xlat
pop
mov
xchg
pop
xorb
sub
lods
or
jno
dec
and
mov
in
aad
aas
and
mov
aam
dec
sbb
push
cmp
inc
adc
adc
adc
and
sub
pusha
sbb
insl
mov
rorl
shll
adc
pushf
lea
sub
add
loopne
dec
mov
popa
push
insl
mov
mov
iret
jp
cltd
mov
popf
dec
paddusw
cmp
outsb
enter
cmp
cmp
lahf
loopne
sahf
movsb
or
push
and
imul
dec
addr16
fisubl
jg
mov
pop
jns
push
loopne
dec
jns
or
sub
sbb
pop
in
inc
stos
je
mov
pop
mov
jmp
add
out
fstpl
shlb
sti
pop
lret
cs
push
hlt
mov
inc
fbld
fdiv
aam
sbb
mov
ja
loopne
mov
int
mov
cmpsl
test
icebp
jmp
cmp
loop
test
pop
scas
clc
ret
mov
jecxz
fnstcw
xorl
insb
in
in
popa
in
dec
test
xadd
push
popf
inc
inc
dec
add
inc
dec
jle
cmovno
sub
push
clc
jb
aas
sub
sub
add
pop
lea
mov
cwtl
add
lret
mov
mov
jno
clc
adc
jb
inc
xchg
cmp
jnp
dec
inc
and
sub
sbb
ds
jns
pop
fldl2e
lcall
ret
cmp
sbb
and
mov
lret
pop
sti
pop
adc
out
xor
jae
sub
xchg
out
mov
or
cmpsb
addl
in
iret
mov
xchg
stc
cmpsb
jge
mov
adc
lahf
dec
orl
imul
icebp
xor
fwait
lds
std
into
aas
arpl
push
loop
popa
scas
fisubl
push
fnsave
xchg
insl
orb
lods
rorl
xor
and
mov
divl
jae
jl
mov
jno
inc
in
scas
mov
mov
xor
scas
ret
outsl
lock
jb
cmc
repnz
aad
fwait
fwait
sbb
arpl
mov
add
push
cmc
int
push
mov
push
jno
adc
enter
lret
mov
and
inc
aas
test
jle
jb
sti
mov
loop
and
sub
xlat
pop
mov
test
addr16
adc
popf
fsubrs
cmpsb
xlat
push
jecxz
jnp
adc
lods
cmc
imul
or
sbb
pop
shlb
cmp
sub
add
popf
es
bound
insl
inc
xchg
cli
jo
xchg
enter
inc
sub
mov
inc
repz
mov
cmpsl
adc
ret
js
lods
mov
inc
mov
js
jb
inc
inc
rcrl
adc
lods
mov
cltd
xchg
pop
and
dec
out
jge
xor
insl
inc
imul
fists
stc
rcrb
inc
decb
aas
pop
dec
xor
xor
inc
push
push
fdivp
cs
and
jmp
int3
push
mov
sbb
js
cmp
out
xchg
mov
jmp
dec
pop
pop
loope
add
sub
mov
daa
ror
fidivrl
pop
dec
repnz
cwtl
imul
sub
mov
mov
pop
lret
loop
pop
push
pushf
push
and
ds
stos
cmp
js
std
xlat
adc
stos
xchg
dec
pop
xchg
add
mov
mov
dec
femms
mov
lret
jl
test
cwtl
mov
sarb
push
loop
js
sub
mov
jp
sbb
xchg
mov
cld
insl
icebp
adc
mov
scas
xchg
mov
sub
push
pop
mov
dec
mov
and
adc
pop
jecxz
jge
sti
divl
mov
xor
repz
mov
jge
loope
and
aad
mov
testl
jle
xorb
push
insb
mov
arpl
or
lods
and
shrl
sub
cmpsb
andl
sub
xchg
adc
xchg
cmp
jbe
add
and
cmpb
test
insb
add
jg
aad
dec
inc
in
jae
xor
push
jmp
sub
pop
xchg
adc
jns
jne
add
insl
aam
sub
jbe
out
lret
jmp
cmpsl
mov
or
pop
rorb
sub
sbb
and
leave
test
sbb
rcrl
cld
xor
sahf
int3
test
mov
or
xchg
sti
mov
outsl
cmpsb
inc
cmpsb
inc
sub
ljmp
out
mov
inc
mov
outsb
aad
lret
xor
mov
inc
xor
inc
jecxz
pop
repz
jne
or
icebp
fcmovbe
fs
jl
scas
sti
push
movsl
inc
pop
in
or
ss
lock
sub
pop
lock
xchg
outsl
clc
push
lods
xchg
inc
jg
push
jne
push
xor
fmul
data16
sbb
mov
mov
adc
in
testb
mov
pop
pop
xchg
je
cmc
jne
xor
sub
sub
stc
rclb
adc
pop
gs
push
dec
push
imul
lret
pop
loope
push
xorl
lds
xchg
bound
push
add
out
inc
inc
pop
je
jl
mov
test
or
icebp
flds
fsubrp
push
fldt
push
and
jl
mov
push
jge
push
push
and
add
cmp
stos
add
aaa
mov
dec
xor
xchg
xchg
mov
push
mov
pop
mov
pop
push
jb
and
jp
push
xchg
xchg
xor
pop
sbb
adc
mov
int3
pop
mov
mov
arpl
mov
cmp
test
mov
lea
mov
cmp
cmp
jno
sbb
les
cld
xor
je
jne
push
jnp
xchg
leave
sub
loop
pop
bound
mov
and
inc
jb,pt
push
movsl
rclb
xchg
or
push
pop
in
rcrl
ret
cmp
rcr
cmc
dec
icebp
test
dec
cmp
popf
cltd
mov
sbb
or
inc
fldcw
mov
jae
ja
mov
jl
jl
ss
pushf
sub
and
sub
push
sbb
leave
in
mov
jecxz
mov
lods
inc
mov
sahf
fldcw
dec
dec
incb
and
xchg
or
or
fisttpll
sub
adc
push
incb
bound
adcl
sbb
fsts
cmc
aas
jns
stos
pop
cmp
fucomip
push
push
adc
inc
pusha
sbb
rcrl
fisubrs
adc
test
push
xchg
or
fidivrl
lcall
out
ja
cmpsb
sbb
xor
ja
icebp
sbb
pushl
enter
fwait
mov
sarl
adc
int
cmp
inc
out
add
jg
loopne
repnz
lds
cwtl
aas
dec
imul
inc
sbb
mov
jecxz
stos
mov
ljmp
mov
ret
into
aam
and
cmc
jmp
xchg
adc
cmpsl
jmp
add
xor
aaa
int
pop
mov
xor
sbb
add
ss
add
je
mov
popa
fwait
sbb
movsl
test
dec
mov
lock
in
push
jnp
xchg
lods
imul
sub
and
add
jge
outsl
out
je
push
fs
adc
pop
mov
rcrb
and
sub
repnz
int3
inc
lods
or
rorl
adc
imul
xchg
add
xor
lret
push
outsl
sub
mov
stos
mov
test
nop
jp
ret
sbb
sbb
fistpl
push
cs
mov
cwtl
addl
test
ss
cld
shl
lahf
test
xor
dec
mov
out
sub
rcll
les
mov
xchg
ds
arpl
ja
pop
mov
cmp
push
je
add
ss
loopne
inc
in
lods
cmovle
pop
mov
xor
lret
daa
fsubrl
hlt
mov
push
cmp
ret
enter
popa
test
xor
fcmovnu
insl
mov
fstpl
lea
jle
shrb
fbstp
mov
dec
out
pop
jl
iret
xchg
mov
dec
mov
outsb
scas
outsb
mov
sub
call
mov
sub
cli
xchg
aas
lahf
loope
test
push
test
mov
gs
ss
pop
lret
lods
mov
idivl
jmp
adc
mov
xor
jns
xlat
jnp
or
ljmp
jnp
fstl
or
cmpsb
negl
or
xchg
jl
or
xchg
or
adc
mov
outsb
into
mov
fcmovnbe
xchg
jl
push
fsubrs
sahf
add
rcl
xchg
push
loope
mov
arpl
push
pop
pop
test
or
xor
inc
push
ja
mov
arpl
push
sub
mov
in
xchg
test
mov
outsl
cmpsb
push
add
cwtl
aas
mov
dec
arpl
cmp
outsl
nop
lcall
mov
sbb
jl
dec
inc
add
rorl
pop
insb
imul
ss
pop
cmp
or
fdivl
and
repnz
push
lret
adc
clc
push
xchg
mov
xchg
ss
outsb
mov
push
add
cmp
push
fisttps
imul
int3
mov
or
shll
cli
xor
pop
aaa
pop
mov
xor
ret
mov
lret
dec
mov
dec
minps
xchg
aas
add
shll
ficomps
sbb
push
lds
adc
and
cmp
dec
hlt
add
repz
pop
mov
cmpsl
stos
mov
mov
shl
mov
dec
xchg
enter
pop
mov
pop
cld
inc
into
pop
xor
xchg
hlt
add
dec
mov
xor
adc
imul
call
das
mov
jecxz
fs
xchg
or
jp
fs
ret
and
outsl
inc
push
pop
cmp
sub
imul
ljmp
or
bound
rolb
cmp
divb
inc
push
out
rolb
xchg
add
and
xor
sbb
jmp
sub
xor
mov
push
out
imul
insb
push
stos
mov
arpl
insl
xor
bsr
neg
pop
movsl
in
stos
aaa
xchg
movb
ss
lea
jle
xchg
andb
je
sarb
mov
mov
mov
adc
adc
testl
adc
adc
pop
and
cmp
xchg
mov
aaa
jmp
dec
mov
out
mov
xchg
fsubrl
sbb
dec
rep
jae
jbe
nop
lcall
scas
mulb
aas
sarb
sub
cld
flds
add
pop
out
lods
loope
mov
mov
jle
xor
pop
pop
sub
mov
jae
pushl
xchg
test
aad
ret
mov
adc
ja
pop
push
out
je
loope
jbe,pn
ficomps
jp
push
push
jmp
push
adc
rolb
and
int3
xchg
insl
inc
popa
pusha
test
inc
xor
fs
outsl
hlt
adc
xchg
das
mov
sbb
push
push
ljmp
push
adc
xchg
push
stc
push
in
cmp
inc
jae
dec
mov
xor
mov
fstl
scas
ror
sbb
push
adc
int
mov
popa
int
jne
jmp
mov
pop
loope
push
inc
icebp
cmp
repnz
push
adc
andl
div
pop
cmp
arpl
testl
push
xchg
jle
addr16
mov
jb
mov
pop
lock
pop
inc
pop
insl
sub
xor
js
lret
ret
mov
stos
mov
mov
add
cmc
arpl
data16
pop
sbb
lret
fnstsw
mov
out
jle
insl
push
pop
inc
out
mov
in
orl
je
xchg
scas
dec
testb
push
incl
repz
adc
sbb
xlat
and
jmp
stc
mov
push
stos
mov
fimull
out
jo
xor
jbe
inc
ss
inc
daa
dec
lret
fldcw
jge
lcall
adc
out
pop
sub
cwtl
cmp
je
call
mov
loop
cmpsb
ja
xchg
ret
out
popa
loopne
enter
mov
sub
sbb
pop
sbb
xchg
xorb
or
int3
int
movsb
stos
testl
cmp
pop
lds
addr16
xor
push
and
xchg
cs
pop
pusha
call
pop
add
push
ds
movsb
fwait
in
lock
push
aam
xchg
inc
mov
fistl
xlat
scas
and
cltd
loope
xchg
adc
popa
jno
mov
addr16
scas
rcrb
xor
inc
mov
lds
sub
fiadds
sti
pop
stc
shrb
push
frstor
in
jl
mov
std
push
test
dec
repnz
out
xchg
sub
add
in
sub
sti
xchg
mov
push
fisttpll
jp
gs
in
pop
xchg
mov
mov
call
in
test
stos
and
ds
ljmp
iret
xchg
push
or
imul
mov
pushf
in
movsb
mov
dec
mov
mov
dec
inc
leave
loope
scas
outsl
popf
mov
clc
stc
inc
das
push
cmp
sub
mov
fldt
push
push
lcall
loopne
aas
mov
xor
or
pushf
mov
push
enter
daa
mov
ret
jns
push
xor
cld
mov
int
ja
inc
mov
or
in
ljmp
jmp
mov
imul
fcmove
nop
imul
shrb
sbb
inc
outsb
addr16
dec
nop
cli
adc
adc
cmp
pop
popa
insb
out
adc
jp
inc
mov
dec
in
mov
mov
in
leave
add
rorb
int3
leave
adc
ret
jmp
xor
xor
sub
cli
cmp
push
das
rclb
push
popa
xor
iret
pop
insb
or
push
add
or
mov
out
xchg
cs
jb
test
sub
push
loopne
jns
pushf
xchg
rolb
sbb
xchg
outsl
sbbb
std
or
dec
out
dec
repz
inc
stos
aaa
mov
test
cmpsb
push
popa
and
pop
popa
jmp
jg
out
ficoms
push
movsl
jnp
adc
mov
cmp
sbb
mov
cmp
pop
test
sbb
aaa
mov
inc
mov
adc
das
data16
sbb
adc
push
mov
lds
add
ljmp
mov
stos
jle
loope
lret
loopne
jnp
fwait
out
shlb
inc
jo
sbb
pop
or
and
xchg
in
jae
add
dec
mov
fs
sar
in
fwait
or
fiaddl
push
and
loopne
and
stos
dec
and
test
fnstenv
sbb
pop
cmp
xchg
roll
pop
aaa
je
sub
scas
adc
into
jl
mov
pop
dec
repz
sarl
out
adc
fisttps
lock
and
and
adc
stc
adc
sub
lcall
dec
and
lea
loopne
mov
pop
shlb
and
mov
fstps
out
and
in
lea
dec
sub
xchg
mov
jne
mov
add
jl
aad
and
scas
gs
push
into
sub
dec
cmp
pop
insb
cmpl
pop
ss
outsb
pop
mov
lock
xchg
scas
mov
mov
test
es
or
push
jnp
and
cmp
cmp
push
cltd
jmp
repnz
xchg
sbb
fmull
lods
inc
mov
adc
lea
repnz
es
std
addl
sbb
cli
outsb
divb
lret
push
xchg
cmp
and
inc
out
add
push
shll
es
loop
in
lahf
cmp
int3
insb
mov
out
daa
out
mov
int
mov
push
mov
and
divl
aad
adc
jle
inc
aaa
push
sti
ret
les
js
enter
rol
int3
mov
dec
les
arpl
mov
std
sub
sahf
push
out
jb
std
xchg
mov
fdivp
nop
dec
and
outsl
cmp
movsb
mov
in
pop
mulb
inc
ret
fmuls
and
add
push
test
shlb
dec
inc
mov
dec
iret
pop
inc
xor
and
and
aaa
out
shlb
and
rorb
dec
dec
arpl
adc
fs
mov
popf
inc
and
and
mov
out
test
scas
cltd
push
arpl
fwait
pop
decb
cmp
mov
test
fwait
cltd
jp
mov
repz
sbb
jp
or
lea
insb
shll
adc
mov
rcrl
fxch
dec
addr16
push
mov
or
xchg
int
adc
push
sub
repz
cmp
xchg
xor
lret
xlat
jmp
dec
jo
imul
push
xchg
in
dec
sub
es
xorb
and
xchg
iret
pop
stos
pop
jo
mov
jmp
cs
in
pop
cmpsl
add
lret
jnp
dec
int3
mov
sti
nop
lods
movsb
stos
testb
call
bound
add
fistpl
adc
pop
xchg
lret
insl
cs
adc
call
mov
outsb
jns
xchg
scas
fildll
fcomi
mov
and
repnz
sbb
bound
mov
nop
jecxz
mov
pop
mov
or
xlat
maskmovq
or
jmp
hlt
sub
jle
ds
mov
scas
push
adc
out
cld
mov
pop
jle
sbb
loopne
push
into
test
int3
stos
cmc
mov
ret
hlt
mov
call
mov
iret
sahf
or
mov
dec
das
gs
insl
fimuls
cli
movsl
fisubrs
inc
push
bound
sbb
mov
xchg
xor
dec
and
push
jmp
sbb
ret
imul
test
in
stc
xchg
jecxz
cwtl
mov
push
sub
shr
jle
imul
sub
hlt
mov
xor
and
push
add
adc
arpl
movsb
stos
mov
xor
or
scas
jne
test
push
inc
push
and
stc
lods
xor
jnp
cltd
mov
jg
xchg
aaa
jmp
insb
jno
in
adc
clc
cltd
notl
pop
pop
add
sub
repz
xor
testl
inc
aas
and
jg
inc
jbe
sub
push
cld
sbb
sub
shll
jl
mov
lods
dec
rcll
dec
in
mov
int
or
or
mov
fstpl
aas
aas
repnz
pop
shll
mov
enter
insl
push
cmp
outsl
insb
xor
pop
xchg
jl
and
push
mov
push
and
jg
mov
fnsave
mulb
jns
xchg
mov
jecxz
add
add
aam
dec
lods
ja
mov
ret
and
movsb
loop
ret
jno
adc
insl
lea
inc
or
mov
xor
mov
mov
rcrb
enter
mov
test
ss
daa
leave
enter
dec
sbb
cmpsl
lods
mov
pop
sbb
lea
or
mov
out
mov
es
xchg
xchg
push
cmp
cs
jno
mov
dec
inc
mov
lahf
push
lock
ds
hlt
movsl
psubd
cld
mov
xchg
pop
fistpll
enter
scas
les
repz
cmp
cmp
mov
nop
dec
sub
mov
jb
sbb
mov
fidivs
inc
mov
xor
xor
pop
enter
mov
cmp
faddl
mov
cmc
cmp
adc
push
mov
and
cli
add
cwtl
icebp
cmp
ret
repnz
pop
cmp
mov
in
addl
aad
testl
out
sbb
popf
js
mov
pop
jnp
xor
mov
inc
inc
in
jl
lret
jo
mov
dec
inc
stos
cmp
bsf
mov
call
lds
in
out
fstps
fnstcw
sbb
sub
mov
add
scas
add
setne
das
or
addr16
add
vcvtps2pd
insl
fisttpl
fsubrs
test
mov
aaa
sbb
xchg
sbb
fld
test
es
mov
pop
pop
repnz
js
into
loop
out
or
or
pop
lods
inc
icebp
sub
sbb
in
shrb
jae
cmc
sub
shll
cwtl
or
ljmp
pop
dec
push
ljmp
dec
push
ss
stc
push
jb
adcl
out
push
pop
stc
notb
fildl
inc
test
jae
pop
adc
out
daa
mov
xchg
pop
and
add
sub
les
call
sahf
ja
leave
jnp
ja
xchg
stc
adc
mov
add
mov
bswap
sub
jo
or
aaa
sub
mov
jo
icebp
gs
mov
decl
enter
nop
xchg
dec
pop
mov
imul
test
mov
cmpsl
fs
xor
insl
cmp
loop
pop
dec
je
pop
jmp
lcall
movsb
out
cmp
lds
stos
jge
pusha
btr
out
iret
lcall
subb
and
pop
aaa
or
sub
repnz
and
clc
jp
xchg
dec
outsl
dec
add
out
xor
bound
fistpl
add
inc
push
jo
mov
push
sbb
jge
dec
call
mov
jg
jnp
dec
push
outsl
mov
mov
int3
out
dec
add
cwtl
sub
pop
mov
shlb
dec
mov
jo
push
lret
clc
xchg
jae
add
inc
mov
xchg
popf
dec
insb
fwait
mov
mov
and
sarl
xchg
ss
mov
jg
mov
lods
popf
push
ja
adc
lahf
out
mov
nop
jl
or
mov
out
das
and
int3
stos
mov
inc
bound
ja
imul
xchg
push
movsb
pop
fsubs
jp
data16
and
fbstp
cmc
jl
push
pop
shlb
loop
sbb
es
adc
and
lret
sub
lock
lea
ss
ja
testl
sub
daa
or
test
mov
incw
jle
jp
dec
mov
or
dec
dec
nop
in
arpl
mov
add
push
loop
out
xchg
jp
mov
dec
xchg
loopne
adc
sbb
outsb
cli
adc
cmp
ja
movsl
jbe
xor
stc
mov
mov
mov
ret
add
insl
dec
mov
ljmp
sbb
jecxz
enter
cmp
push
sbb
dec
das
inc
cld
pop
jo
das
or
movsl
cs
fisttps
jmp
lcall
hlt
xchg
sub
in
xchg
cmp
mov
mov
mov
mov
out
ljmp
int
dec
out
cmc
mov
lahf
xlat
and
mov
pop
out
mov
sbb
cmp
xchg
mov
jmp
push
fiadds
ss
push
ds
and
xchg
scas
push
pusha
dec
xorl
in
inc
cwtl
scas
or
xorb
pop
mov
jo
lods
jae
sub
mov
jle
cs
in
jecxz
pop
rcrb
clc
adc
mov
int
out
cs
mov
call
repz
rcl
ljmp
rcll
xor
loop
sahf
les
test
fdivl
or
in
add
stos
and
stos
sub
int
test
pop
adc
roll
jl
insl
mov
sar
cmc
push
aas
movsl
outsl
je
aaa
mov
cmp
jne
decl
xor
jmp
js
jecxz
jae
je
xchg
mov
cmp
xchg
addr16
mov
lret
movsb
push
pop
push
bound
insb
fcomp
das
das
ljmp
inc
les
jge
cld
bound
jl
mov
and
or
add
fcoml
enter
fnstenv
cmp
cmp
dec
str
arpl
mov
or
cmp
mov
sub
mov
or
dec
jnp
xlat
mov
adc
mov
ljmp
push
lock
nop
mov
ret
and
cmp
mov
push
jnp
add
neg
pushf
fistpll
sub
xor
test
iret
push
add
inc
push
lret
dec
push
orb
adc
jnp
sub
xchg
adc
mov
data16
push
out
insl
lret
push
popf
pop
mov
aaa
pop
lahf
pop
int
testl
sahf
mul
add
sub
and
pop
sub
bound
sbb
imulb
add
shrl
mov
push
in
flds
push
shlb
sub
test
fbld
je
sbb
pop
ret
lahf
mov
popa
add
push
shlb
cmp
xchg
outsb
adcl
pop
mov
pop
push
dec
pop
push
dec
jns
fdivrl
xchg
push
pop
daa
cs
jno
sbb
loope
hlt
push
and
enter
insl
xor
ss
push
adc
adc
or
push
ja
clc
and
xchg
insl
add
cmp
mov
xor
arpl
in
add
and
mov
mov
mov
push
adc
cmpsb
push
pop
pop
jl
daa
fs
arpl
jae
sti
push
mov
pop
mov
adc
add
and
leave
lods
mov
push
sub
ljmp
xorl
mov
add
sub
xchg
lcall
shll
push
enter
aas
add
fwait
cltd
pop
add
pop
ja
and
mov
iret
mov
dec
out
in
push
push
cmpsb
sub
and
xor
shrl
int3
xor
fdivl
mov
sbb
xchg
or
insb
xchg
push
and
into
add
xor
inc
mov
xor
dec
mov
dec
shrl
arpl
decb
hlt
aaa
movsl
xchg
and
icebp
fsubp
nop
pop
xlat
pop
cmp
into
jns
dec
in
cmp
lcall
sbb
shlb
and
sub
mov
mov
inc
xorb
add
cwtl
xorb
shlb
or
mov
mov
fsubl
xchg
popa
subl
cmp
sbb
jno
das
es
pop
daa
fldt
sub
or
test
fsts
mov
clc
mov
inc
xchg
jnp
jbe
mov
mov
fs
inc
dec
loop
mov
add
mov
rcl
xchg
lds
int3
ss
mov
pop
sub
jnp
das
pandn
in
mov
mov
out
jne
in
sub
pop
inc
jge
scas
loope
push
and
adc
inc
in
sub
shll
jecxz
fsub
outsb
das
fs
push
in
xor
test
inc
les
xor
xor
push
mov
pop
pop
rorb
dec
arpl
orb
dec
mov
pop
andl
mov
sub
cmp
iret
xchg
into
add
cmp
icebp
sub
ss
xor
out
pop
mov
addr16
add
sbb
or
xor
xchg
sbb
jge
enter
in
shl
push
test
adc
add
mov
cmp
aam
test
aam
popf
jge,pn
cmp
sti
cs
icebp
xchg
in
cwtl
jnp
xchg
or
xor
push
les
sbb
inc
data16
out
inc
bound
sarb
mov
or
jle
cmp
mov
sarl
sti
jmp
sub
fisubs
inc
push
arpl
pushf
orl
and
sbb
mov
andnps
sti
les
mov
fdivrl
sbb
imul
outsb
add
fdivrl
mull
int3
in
xorb
xor
imul
dec
daa
aad
aas
or
out
lret
and
mov
xor
aaa
xor
pop
int
jae,pt
nop
push
jecxz
adc
inc
pusha
dec
cltd
sub
or
jge
stos
or
inc
mov
sbb
js
fiaddl
je
inc
xor
std
and
imul
dec
insl
pop
mov
stos
dec
pop
jae
or
xlat
push
sbb
sub
adc
push
out
or
sete
sbbb
dec
pop
lds
mov
adc
pop
out
xchg
cmp
or
movsb
stc
neg
in
push
adc
inc
std
pop
dec
mov
test
sub
ljmp
add
xor
or
rorl
dec
adc
cwtl
js
sbb
ss
ja
or
inc
enter
int
push
cmpsb
outsb
inc
jo
dec
outsb
jp
test
mov
and
xor
repnz
or
shl
loopne
aad
sbbl
mov
outsb
cltd
out
inc
add
inc
mov
jno,pn
icebp
cmpsl
icebp
dec
lods
call
pop
jae
and
roll
call
dec
push
lret
ret
push
xor
push
push
sub
cmc
scas
mov
icebp
jbe
jp
std
push
cltd
rorb
add
pusha
stos
filds
xchg
sbb
inc
cmpsl
sbbb
jne
jae
cld
je
dec
loop
push
pandn
lea
and
outsb
mov
mov
rol
js
cmp
js
mov
pushf
adc
loop,pt
cmp
push
push
pop
fsubl
pop
dec
jle
and
ljmp
in
subps
inc
fldenv
jmp
in
push
addl
mov
jmp
mov
arpl
in
pop
sar
cld
or
into
std
lret
aaa
fldz
mov
pop
push
je
cmp
add
adc
lahf
or
jns
imul
jl
dec
xor
cld
or
stos
jbe
adc
adc
push
pop
test
sar
mov
add
jmp
xor
movsl
cmp
sbb
jp
insb
hlt
cmpsl
fs
out
push
add
pop
and
mov
mov
xor
or
cmp
sti
rorl
inc
mov
jle
pop
js
sub
jnp
pop
add
test
ret
pop
popa
cmp
pop
xlat
aaa
push
iret
jge
cmc
sbb
lods
subb
out
push
xchg
mov
notl
mov
dec
out
sub
hlt
or
repz
jb
insb
cs
stos
dec
clc
dec
cli
out
sbb
jne
shr
push
and
roll
loop
jae
xlat
into
in
popa
sbb
jbe
aad
out
adc
out
sbb
popf
mov
dec
clc
dec
jecxz
daa
mov
mov
cmpsl
mov
dec
or
jnp
in
xchg
or
pop
push
push
xlat
dec
mov
mov
pop
adc
add
int
and
shlb
sbbb
insb
mov
or
push
jmp
mov
mov
sbb
imul
dec
or
fiaddl
adcb
xchg
xchg
orb
js
inc
mov
fpatan
ss
cmp
mov
jecxz
cli
inc
das
push
outsl
outsl
mov
cmp
and
and
cmp
jbe
lds
repz
cld
or
dec
xor
cmp
sbb
jne
insl
inc
in
cmpsl
push
and
jmp
push
icebp
fsubr
je
adc
fisttpll
lret
ret
mov
mov
xchg
test
pop
xor
mov
jl
fwait
addr16
in
ds
sub
stos
scas
mov
mov
pop
mov
dec
mov
jge
insl
or
out
add
sbbl
mov
pop
xchg
pop
adc
push
add
sub
add
and
sti
sub
imul
out
js
push
cwtl
inc
push
add
lret
cld
xor
lods
xlat
dec
push
cltd
xor
ja
lret
inc
stc
jno
daa
xor
mov
lods
testl
push
std
mov
pusha
addr16
or
gs
incl
aaa
mov
xchg
push
gs
inc
jge
fyl2xp1
push
xchg
sub
pause
cmp
adc
sahf
sar
pop
mov
fstps
or
mov
sbb
inc
jnp
scas
inc
aas
add
cld
pop
or
push
cmpsb
mov
xchg
imul
inc
leave
ljmp
mov
shrl
outsb
sub
push
sub
and
enter
pushf
jns
push
add
out
cmc
in
cmp
pop
enter
mov
cmp
and
shll
add
cs
inc
outsb
add
cld
mov
gs
mov
loop
or
sahf
test
shll
pop
pop
xor
dec
cmp
cmpsl
xchg
add
mov
lds
xor
int
mov
add
inc
push
or
scas
in
mov
xchg
mov
imul
fsubrs
aad
or
and
imul
icebp
imul
lret
dec
or
call
inc
fadd
outsb
pop
pop
sub
dec
cli
cltd
repnz
insb
loope
cmpsb
xor
dec
sbb
leave
ret
clc
and
pop
scas
jns
pop
loop
lret
insb
mov
test
in
inc
push
fimull
or
cmp
int
adc
ljmp
push
mov
lods
and
and
dec
addb
jge
push
push
mov
mov
jp
loope
loop
push
pop
or
pop
mov
inc
add
add
xor
and
pop
mov
leave
stos
xlat
xor
lret
and
test
pop
es
and
push
stc
sbb
pop
test
sbb
popf
aad
ror
push
sub
cmp
xchg
outsl
mov
arpl
in
mov
mov
mov
inc
mov
and
loopne
sti
lret
bound
movsb
test
mov
push
add
mov
pushf
aas
test
and
gs
rclb
mov
mov
sbb
lret
fxch
mov
lock
or
dec
loopne
pop
xor
jae
push
cmp
mov
and
mov
push
add
daa
test
movsl
sti
dec
aam
jns
cmpsb
cmp
inc
inc
bound
or
fmull
insl
xchg
clc
dec
xchg
sub
lcall
mov
pop
mov
out
mov
outsb
add
pop
cmc
mov
jne
arpl
fisttps
stos
sub
jo
aas
sti
cld
fidivrs
pop
add
pop
dec
push
add
jl
dec
ljmp
xor
bound
jbe
aaa
sub
je
in
aaa
movsb
sbb
ss
mov
adc
lock
mov
sarb
adc
inc
cmp
into
mov
xchg
xchg
rclb
insl
cmpsb
sub
add
or
in
popf
fs
jle
xlat
push
mov
fs
repnz
adc
scas
dec
pop
cmpsl
outsl
lods
es
dec
test
cli
push
mov
sti
imul
xchg
aas
mov
ds
neg
jmp
and
push
out
add
repnz
fstpt
je
pop
fldl
mov
xchg
addr16
iret
inc
popa
sub
dec
push
add
cmp
sub
in
imul
fwait
mov
ret
fisubs
ret
xchg
and
pop
mov
push
mov
push
lea
sub
dec
dec
sahf
cmp
out
enter
push
popf
and
pusha
jle
or
es
inc
outsl
outsl
mov
jno
or
dec
push
push
add
jg
pop
imul
cltd
sti
fisubs
loopne
pushfw
pop
xchg
ss
in
bound
ja
mov
in
insb
push
push
in
dec
les
mov
pusha
rcr
add
jl
lahf
xchg
pop
call
or
pop
std
out
dec
or
adc
out
sub
idivb
sbb
stc
sbb
mov
ljmp
mov
sub
dec
jne
pop
daa
jno
call
jge
or
xor
lds
push
xor
cmp
out
push
ret
mov
notl
testb
stos
les
std
and
jb
jmp
xor
outsl
stos
lahf
bound
dec
add
and
xor
and
scas
jg
repz
fadds
lds
scas
jne
push
mov
push
fcmovnu
xor
mov
lret
mov
sbb
test
les
es
mov
or
addb
int
sub
pop
dec
xor
pop
out
cmp
push
and
mov
pop
test
inc
mov
or
pushf
inc
push
adc
xor
adc
mov
pop
jns
sbbl
int
xlat
std
clc
jns
icebp
test
push
adc
jno
push
inc
or
les
in
mov
adc
xchg
mov
ss
cmp
push
repnz
jp
sahf
std
jle
jl
leave
push
mov
inc
inc
lret
les
add
pop
jl
cwtl
negl
xor
sub
and
jne
jmp
cmp
aaa
popf
mov
sbb
and
push
or
cmpsb
shll
lds
fdivl
dec
aas
pop
jno
je
dec
test
outsb
in
jne
inc
push
dec
sbb
mov
sub
cmp
lods
dec
mov
cmpl
stos
js
mov
jno
fdivs
mov
inc
sub
pop
mov
sbb
pop
sub
mov
pop
dec
iret
clc
jmp
jnp
jmp
cmpsl
ss
inc
sbb
xchg
pop
ret
push
add
adc
pop
or
sbbb
xchg
xchg
cmp
mov
inc
cmc
pop
fs
into
sbb
ljmp
inc
ljmp
gs
push
rclb
cwtl
and
rcr
xchg
push
pop
push
jnp
cmp
mov
mov
push
std
ss
and
lods
xor
fdivl
cmp
sti
adc
pop
cmp
shlb
pop
mov
jnp
xrelease
int
mov
xor
pop
mov
jno
lods
cmpsl
aam
mov
or
jmp
pusha
cltd
fwait
sbb
push
dec
mov
jle
lds
jne
out
jp
icebp
fdivl
jecxz
pushf
ror
and
xor
inc
adc
lods
sub
idivl
xor
ss
repnz
add
imul
mov
mov
imul
jmp
push
push
daa
out
mov
mov
sbb
xor
adc
add
dec
or
sub
push
push
inc
lea
jno
call
cmp
stc
rcrl
test
pop
mov
mov
in
data16
repz
xchg
pop
call
fdivrs
mov
sbb
push
sub
xorb
pop
dec
inc
pop
aam
mov
popf
mov
adc
mov
xchg
and
sub
fstpt
mov
ljmp
dec
xchg
add
push
push
fs
sub
loop
addr16
mov
es
sbb
fcomps
lds
cwtl
aas
sbb
js
lahf
iret
sub
push
push
pop
ret
cmpl
or
mov
mov
inc
in
in
xor
xor
sbb
adc
lods
mov
loope
jo
ss
jbe
jl
out
gs
adc
pop
out
cmp
or
mov
and
xchg
xor
jno
xlat
cmp
jne
mov
pusha
xlat
fwait
lcall
je
and
stos
stos
jmp
icebp
mov
pop
subb
cmp
mov
lock
bound
sti
jae
cmp
scas
out
rorb
xchg
and
pop
loop,pt
in
addr16
push
and
push
push
sbb
xor
sub
and
mov
test
cmpsb
rol
jmp
xchg
sbb
aam
and
hlt
loop
popa
mov
bound
xor
cmc
adc
testb
cmpsl
aas
mov
das
in
xor
adc
xor
orb
fucompp
sub
popa
mov
repnz
xchg
dec
fcoml
cltd
sub
inc
dec
ja
ret
mov
xor
adc
fs
iret
movsl
int3
push
lock
insl
push
gs
insl
inc
es
cs
es
pop
pop
loope
jne
fs
pop
in
jno
xor
mov
ljmp
add
cpuid
cmp
adc
mov
xor
mov
mov
pop
add
jmp
xor
sub
loope
lret
pop
cmp
std
cmp
and
andb
incb
mov
or
lea
push
xchg
repnz
cli
mov
sub
push
les
jmp
popa
pmovmskb
data16
mov
loopne
pop
mov
add
lret
js
xor
and
mov
inc
mov
pop
fisubrl
insb
cwtl
xorb
inc
xchg
mov
push
arpl
mov
add
inc
cmp
xor
pushl
dec
add
sub
test
clc
jns
leave
call
cs
jecxz
jo
movsb
dec
mov
or
push
jno
mov
jno
andl
pop
in
aad
push
add
push
and
out
mov
dec
adc
cmp
pushf
adc
rcl
popa
dec
imul
push
push
dec
call
aas
pop
or
lods
inc
aaa
mov
pusha
xor
xor
adc
cmp
or
fldt
sbb
xlat
xchg
dec
jbe
sbb
or
aad
rorb
cmpsb
pop
xor
jp
lock
lods
js
inc
aam
inc
into
gs
fnstenv
lods
outsb
push
xchg
int3
mov
test
insb
lahf
xor
loopne
push
cmp
xchg
lds
mov
jl
aas
scas
stos
mov
ret
sbb
pop
gs
add
xchg
xchg
fmuls
xor
xchg
adc
es
popf
rcll
mov
out
dec
in
pop
push
or
pop
es
lds
or
xlat
jle
xlat
jae
dec
adc
pop
je
sbb
in
notb
mov
xchg
stc
leave
fldt
jb
adc
dec
fdivs
pop
es
in
xchg
mov
mov
xchg
jl
jp
mov
std
dec
mov
inc
add
lret
setae
mov
pop
es
int3
ja
adc
movsb
jg
sbb
int
push
fists
ds
ja
pushf
scas
jle
mov
add
lock
and
cmp
adc
and
lds
das
adc
test
add
sub
int3
pop
inc
jb
lcall
pusha
mov
lahf
and
sub
leave
cltd
insl
jne
sbb
push
lods
inc
inc
mov
cmpsb
insb
test
lds
dec
xchg
das
movsl
jecxz
dec
cmc
shl
dec
std
xlat
ljmp
push
scas
scas
test
or
loop
pop
mov
dec
mov
push
lods
dec
mov
pusha
ja
fcoml
rclb
in
leave
and
add
aam
xchg
movsb
test
lahf
xchg
ss
popf
std
jno
dec
leave
and
mov
jl
out
mov
out
cmp
push
movb
jmp
aam
sbb
mov
jecxz
outsb
or
fwait
aam
cltd
mov
dec
jl
mov
aas
push
rol
xlat
mov
mov
test
dec
sbb
or
daa
and
jp
and
or
pop
push
lret
ret
scas
dec
outsl
sub
and
stos
nop
pop
pop
movsb
gs
sahf
sub
or
xor
sbb
repz
in
test
lds
sub
mov
js
call
or
mov
pop
dec
xchg
dec
push
mov
and
aaa
xor
repnz
loope
push
sub
sti
cli
gs
fnsave
repnz
dec
sbb
es
dec
or
and
lret
imull
in
cmpsl
pop
clc
inc
aad
push
inc
pop
or
mov
mov
sbb
sub
mov
enter
push
dec
jecxz
cli
rcrb
xor
jo
outsl
into
push
pop
dec
jnp
mov
push
push
dec
push
rorb
mov
test
add
inc
and
mov
sahf
jb
and
sub
dec
cmp
pushf
mov
lods
mov
imul
mov
mulb
add
insb
cmp
sub
adc
push
mov
mov
icebp
jg
repz
jecxz
xchg
andb
add
aas
dec
push
mov
pop
addr16
stos
mov
push
fcoml
xchg
stc
xor
lahf
jg
dec
mov
xchg
sbb
out
out
loopne
inc
push
adc
jbe
cwtl
inc
pop
lods
mov
push
out
mov
adc
push
daa
dec
test
xchg
xchg
cmp
imul
jnp
ret
shll
sbb
mov
or
negb
xchg
inc
ja
scas
mov
sbb
inc
push
jb
cli
inc
fs
dec
ret
or
nop
std
aam
scas
jns
sub
xor
lahf
sbb
nop
fwait
lods
andl
fsts
sub
fisttpll
push
std
jae
daa
jb
ret
les
cli
sbb
insb
mov
pop
lahf
xor
dec
andl
jge
jns
dec
pusha
es
dec
je
jmp
mov
clc
cmp
imul
dec
push
in
jle,pt
ret
rclb
push
add
lods
test
inc
add
push
fcomps
fdivrl
lcall
push
rcl
cmpsb
mov
xchg
xor
mov
dec
sbb
cmp
cmp
lock
hlt
jge
mov
mov
test
jbe
sbb
fidivrl
stos
dec
mov
push
rorl
inc
push
daa
outsb
mov
fsubrl
cmp
mov
jle
mov
mov
ret
push
mov
xchg
mov
mov
pop
inc
push
jmp
jo
call
push
and
pop
iret
mov
movsl
adc
loopne
mov
test
xor
add
add
lods
adc
in
inc
and
addr16
js
cmpb
out
adc
or
jl
ja
jae
popf
lahf
mov
dec
ret
mov
sbb
sub
imull
sbb
jns
dec
push
jo
jnp
stos
cli
inc
leave
ror
jb
ffreep
cltd
das
repz
pop
mov
pop
ljmp
inc
loop
mov
movsb
insl
stos
inc
cld
or
aas
or
xor
add
inc
inc
sub
or
fptan
inc
testl
push
clc
or
push
pop
or
stos
aaa
mov
aad
sub
int
push
sahf
xor
and
dec
mov
pop
pop
aad
jmp
sub
mov
cmc
hlt
sub
mov
dec
mov
pop
inc
lahf
jb
out
cmc
push
clc
repnz
sub
movsl
sbb
scas
mov
or
fstps
adc
bound
mul
mov
jl
or
sub
xor
push
loope
icebp
mov
jecxz
mov
push
int3
push
cld
push
and
adc
nop
cmpsb
and
lods
pop
push
rep
push
cld
pusha
lock
shr
and
and
push
scas
rcr
sub
xchg
and
in
repz
cld
add
adc
loopne
shrl
mov
out
jns
cmc
inc
mov
movsb
mov
sarl
cmp
repz
pop
adc
pop
jl
add
mov
jecxz
repz
pop
in
lret
add
int
adc
mov
xchg
mov
sahf
xor
fisttpll
mov
xor
sbb
xor
and
lea
test
pusha
jecxz
adc
jae
mov
pop
xchg
inc
xchg
push
or
add
push
and
pop
out
sub
rcr
cli
loopne
jg
xchg
lcall
push
js
lcall
adc
mov
mov
jae
hlt
loope
push
push
in
inc
sarb
or
sbbl
shll
cmp
sti
sahf
dec
cmpsb
cmp
std
xchg
xchg
xchg
shll
cmp
cs
sub
mov
xchg
out
sbb
ss
cmpsl
hlt
mov
xchg
mov
in
jo
xor
or
cmp
lock
in
add
lret
mov
sbbl
adc
jb
add
les
movsb
cmp
ljmp
lcall
jl,pn
lret
lods
sub
mov
push
inc
fbld
or
xchg
add
sbb
std
sbb
repz
outsl
orl
jnp
popf
insb
xor
pop
or
cmp
dec
rol
xchg
in
insl
sub
jecxz
jmp
lods
mov
mov
xor
nop
das
test
fsubl
jo
jb,pt
xchg
mov
xor
mov
imul
je
outsb
cld
or
imul
push
xor
cmp
arpl
sub
cmp
fcoms
or
and
xor
mov
add
aas
pop
sbb
test
fldenv
divl
cmp
mov
mov
jl
mov
jns
xor
ret
cwtl
shll
sete
sbb
xor
xorl
bound
add
pop
jp
aas
xor
leave
pop
mov
push
xor
das
xor
pop
cmp
test
add
push
ret
sbb
cltd
inc
jo
inc
frstpm(287
dec
leave
ds
aaa
orl
shrb
inc
lea
aaa
cltd
or
in
jnp
int3
push
insb
into
mov
mulb
mul
mov
push
xor
lcall
add
je
inc
mov
xorb
jle
inc
lods
push
iret
clc
mov
lds
test
lcall
std
jns
pop
in
and
rcl
neg
out
jl
cmp
cmp
out
shl
ret
xchg
ret
jecxz
push
jb
lret
push
out
bound
insl
sub
mov
pusha
in
addr16
into
mov
dec
push
xor
mov
push
mov
lds
pop
cmp
or
push
mov
mov
add
cmp
fsubs
test
mov
cmpsb
iret
cmp
sub
mov
adc
cld
xchg
je
dec
std
ret
and
rorl
movsb
adc
rorb
insb
in
int
xor
pop
ret
daa
mov
inc
dec
cwtl
xchg
and
ja
jne
sbb
sub
cmp
or
xchg
ljmp
mov
movsb
sbb
or
push
es
mov
fwait
sbb
jbe
filds
jg
inc
neg
jo
aam
stos
pop
jecxz
pop
fcmovne
add
or
sub
pop
mov
lods
cli
mov
int
xchg
sub
or
push
gs
insl
push
test
inc
movsl
dec
inc
add
pop
sub
lcall
push
push
mov
mov
loopne
loop
std
clc
adc
sti
aad
sub
loop
xchg
mov
sti
sbb
inc
or
xor
leave
test
fwait
in
into
dec
fistpll
lret
sub
sbb
fxch
into
rcrl
loopne
sbb
pop
pop
mov
xchg
lcall
xor
xchg
xor
mov
mov
cmp
test
es
bound
inc
aaa
xor
out
xchg
push
and
sub
jle
stc
insb
shl
add
insb
push
jo
mov
sub
inc
sti
addr16
test
test
gs
fidivrs
or
popa
inc
jl
testl
xlat
xor
mov
and
pushf
ljmp
outsb
and
addl
or
pop
or
ud2
mov
jmp
or
into
out
jno
jl
jbe
and
popl
enter
movsl
outsb
and
pop
rcrb
mov
insb
xor
iret
test
jge
insb
mov
add
ljmp
jmp
movsb
imul
mov
mov
mov
inc
insl
mov
sbb
loopne
mov
xlat
xchg
xor
xchg
loop
dec
orl
lds
xor
bnd
lahf
dec
lods
mov
sub
add
xlat
nop
out
out
and
insl
loope
mov
in
adc
sub
sti
jbe
into
aam
jo
mov
push
cltd
dec
cmp
xor
scas
rcrb
pusha
in
cmp
scas
outsb
pop
out
mov
stc
dec
insb
icebp
sahf
or
xor
adc
fucomp
ja
mov
out
loope
mov
and
or
fstpl
es
pop
enter
sbb
or
fisubs
inc
lcall
das
sbb
jb
pop
mov
sbb
mov
add
sub
mov
imul
and
test
lret
xchg
fwait
cmpsb
js
and
std
push
sub
rolb
lea
mov
mov
adc
cli
lods
add
nop
and
adc
xchg
mov
mov
inc
or
clc
mov
aad
int3
arpl
arpl
lods
loopne
mov
sbbb
arpl
stc
pop
sub
pop
mov
jns
icebp
dec
mov
cmp
test
pop
lahf
pusha
mov
and
cli
jns
rorl
xlat
stos
jmp
cmpl
ficompl
pop
jbe
mov
xchg
fucom
or
pop
ljmp
aam
jp
and
stc
aaa
cld
jb
fistps
ljmp
jge
xchg
mov
mov
sbb
and
dec
mov
fnstenv
cmp
pop
jne
filds
shlb
pop
jo
nop
shrb
xchg
imulb
std
ss
pop
leave
clc
loopne
into
inc
mov
mov
ret
cmp
mov
lods
int3
roll
jb
mov
xchg
cltd
push
fiaddl
out
out
mov
inc
sahf
jecxz
gs
xlat
push
push
adcl
cli
daa
adc
lods
add
cmp
mov
imul
or
pop
mov
adc
ret
push
or
and
fidivrs
xchg
cmp
xchg
jecxz
ljmp
test
mov
mov
cmp
pusha
sarl
xchg
shlb
jns
pop
dec
leave
mov
pusha
jg
cmp
fiadds
mov
insl
fisubs
push
sbb
mov
pop
test
insl
movsb
loop
std
adc
mov
sub
pop
dec
ret
outsl
test
push
xor
aam
lds
cmpsl
cs
popf
aad
jnp
sbb
addr16
adc
es
loopne
xorb
mov
lods
adc
popf
dec
push
je
mov
jecxz
pushf
rcl
jmp
pop
dec
imul
mov
inc
test
ljmp
pop
cmp
fidivl
fildl
and
fs
sbbb
jns
sbb
sti
lea
cli
pop
inc
or
loopne
pop
outsb
lret
ret
add
cmc
fsts
mov
jl
mov
pop
cwtl
js
ret
inc
mov
aas
cmc
pop
mov
push
out
add
inc
ja
ss
mov
popf
add
in
das
iret
dec
mov
xchg
push
sbb
fbstp
int
aam
inc
jnp
imul
in
popf
or
out
insb
dec
or
rorb
js
jns
loopne
inc
add
xchg
dec
enter
jae
ja
sub
jno
push
fsubrl
push
div
mov
popf
or
jnp
pop
xchg
jnp
add
fwait
test
adc
cmp
xor
mov
xchg
mov
ss
vcmppd
leave
xchg
test
shrl
or
adc
jno
jbe
cmp
repnz
int
and
stos
mov
mov
xchg
xlat
xchg
adc
jg
inc
and
push
mov
pop
pop
fnstsw
adc
inc
or
or
xor
inc
and
in
xor
imul
xlat
out
mov
es
mov
or
test
mov
mov
lret
xor
dec
add
adc
loopne
incb
mov
mov
cmp
repz
mov
dec
push
mov
out
add
push
test
inc
pminsw
jge
aad
xor
mov
clc
xchg
jmp
std
dec
aam
dec
mov
insb
sub
add
loop
pusha
or
cmp
out
cmp
xchg
divb
pop
aas
add
cltd
addr16
movswl
dec
icebp
cmpb
push
mov
cmp
addr16
dec
xchg
mov
pop
jg
in
push
cmp
out
jg
ja
psllq
jmp
mov
les
mov
mov
sub
push
mov
mov
inc
xchg
push
mov
repnz
adc
repnz
sbb
push
pop
and
aam
test
jmp
adc
fwait
sub
movsl
jge
mov
mov
push
in
dec
push
dec
adcl
sbb
or
jge
push
shl
cs
lahf
movsb
mov
xlat
data16
add
jg
rcrb
push
bound
dec
mov
sub
mov
popa
cwtl
cmpb
lea
fldenv
mov
jge
add
xchg
fisttpll
add
xchg
inc
outsl
mov
lahf
filds
in
insl
and
inc
add
and
or
jecxz
or
lock
xor
xor
pop
push
or
xor
and
xor
push
and
or
stos
shl
jg,pt
add
mov
sbb
lds
or
mov
lock
das
add
and
and
shl
xor
pop
dec
shlb
int
imul
jp
inc
dec
mov
aaa
push
test
cmp
cmp
popa
aaa
push
ret
push
mov
test
mov
not
rolb
stos
push
test
sub
cmp
add
adc
add
or
in
mov
jl
ja
inc
sbb
iret
jmp
xor
dec
fcoml
aam
fidivrs
jmp
cmp
jns
xor
or
rclb
scas
mov
sbb
loopne
adc
ss
jne
add
repnz
hlt
pop
das
lret
jecxz
ss
add
xor
out
mov
inc
outsb
xlat
mov
mov
icebp
repz
int
roll
push
add
inc
cltd
mov
push
loop
mov
mov
movsl
cmp
insb
das
pop
out
xchg
cmp
lret
jnp
sub
pop
roll
es
repz
std
push
daa
jno
mov
jecxz
and
xchg
test
lock
pop
xchg
leave
test
stos
xchg
shl
dec
enter
test
insb
xor
mov
sub
and
mov
pop
or
add
adc
mov
mov
in
lea
pushf
xor
jl
icebp
sub
filds
lcall
xchg
inc
jp
and
and
or
int
mov
sbb
cmp
in
xchg
jnp
cmp
pop
loope
xchg
xchg
xchg
jmp
addb
push
es
aad
fldt
sbb
xchg
aas
xchg
inc
pop
lahf
or
popf
mov
sti
int
jecxz
js
ss
out
dec
push
inc
and
out
adc
or
push
push
jbe
jl
push
bound
mov
sti
test
es
pop
shld
xchg
xor
out
dec
xlat
cmp
inc
mov
jno
jnp
dec
xor
mov
xor
xchg
mov
xchg
push
add
cmp
dec
das
pop
ds
add
jmp
scas
mov
out
cltd
cmovae
cmovg
gs
lock
cmp
addr16
jbe
dec
addr16
imul
xchg
mov
ret
xchg
xor
out
jnp
jp
sbbl
add
xor
add
cld
dec
cmp
adc
shl
inc
adc
in
push
scas
mov
push
cmp
cs
or
test
jp
xor
idivl
cmp
movsb
js
shl
and
xchg
lods
jne
adc
adc
loopne
insl
sbb
fsubrl
push
cld
ds
icebp
mov
xlat
out
push
or
nop
ja
dec
xchg
out
mov
inc
iret
test
lea
or
sbb
insl
xlat
bound
rcrl
divl
rcll
fcmovnb
int3
lods
push
or
outsl
adc
into
out
aaa
mov
dec
jecxz
iret
mov
repz
mov
ja
ljmp
repnz
hlt
pushf
or
movsb
aam
xchg
mov
out
jb
cmp
and
lods
aaa
jno
out
mov
lahf
adcl
xor
inc
adc
add
ja
jbe
lret
jmp
ret
movsl
push
test
push
adc
sbbl
mov
add
xor
mov
jmp
jl
and
fstl
dec
lcall
lret
xchg
xchg
xor
out
cmp
rclb
cmpsb
ret
add
cmpsb
scas
test
or
dec
fistl
or
enter
xlat
pop
fdivs
arpl
or
data16
pop
adc
aam
lret
mov
dec
inc
popf
out
cltd
jge
xor
pushf
and
cmp
push
dec
adc
add
test
std
xor
jb
push
jnp
sbb
sbb
jecxz
push
call
pop
jne
dec
jae
andb
loopne
jno
mov
in
in
jnp
das
xchg
mov
push
gs
or
push
jge
adcb
xchg
fwait
in
mov
and
jmp
push
jl
sbb
dec
mov
addl
add
mov
mov
and
shll
mov
mov
das
push
mov
ret
sub
or
push
sbb
das
inc
sub
cmp
sbb
pop
aam
xor
adcl
leave
pop
in
push
mov
aam
dec
push
sub
push
ljmp
jmp
aad
out
lahf
movsl
sahf
mov
data16
rcrl
rol
lahf
pop
outsb
in
int3
inc
mov
test
ret
xchg
add
mov
jo
cs
sub
mov
in
insb
jb
or
add
mov
cmp
and
cmpsl
fs
xor
pop
test
cld
hlt
cli
pop
std
sbb
cmpb
and
lods
mov
loope
mov
mov
imul
inc
mov
mov
lods
movsl
jg
scas
mov
pop
pop
test
das
inc
sub
xor
pop
lret
mov
imul
popa
push
pop
adc
mov
movlps
les
pop
and
mov
clc
and
fwait
aad
int
jle
andb
lret
movsb
loope
das
adc
jae
cld
cli
imul
mov
adc
cmp
jle
cltd
fldenv
fcompl
push
xchg
imul
outsb
popf
adc
xchg
push
jg
or
popa
sbb
stos
in
outsl
aad
jne
fistpll
jg
fs
sbb
call
pop
adc
rcrb
push
dec
dec
sbb
jmp
popf
pusha
orl
mov
xor
in
into
ja
dec
pop
push
outsb
inc
pop
bound
cmc
mov
pusha
sti
jne
xchg
dec
cmp
inc
test
sbbl
mul
ret
fnsave
loop
mov
call
push
ds
mov
pop
test
mov
mov
std
cmpsl
sti
rorl
push
leave
das
sar
mov
sbb
and
mov
int3
pop
mov
sub
sub
sub
sub
or
sbb
xor
es
xchg
push
fstpl
push
clc
negb
jno
ret
pop
sub
cld
push
inc
out
push
fdivl
dec
hlt
stos
mov
jg
out
mov
fadd
addr16
xchg
stc
iret
mov
mov
adc
mov
addr16
imul
pop
lcall
addl
xchg
pop
test
divps
enter
push
xor
push
cmp
jmp
int3
js
cmp
sbb
fdivrl
cmp
iret
ss
into
out
xchg
xchg
mov
push
pusha
pop
aas
les
pop
mov
in
mov
neg
sbb
fildl
imul
stos
mov
lock
xor
out
mov
aaa
lds
out
mov
stc
imul
xor
sbb
aam
adc
cmp
xchg
mov
ja
iret
das
pop
popa
pop
dec
dec
or
insl
shlb
pop
push
pop
mov
sbbb
push
or
dec
push
inc
popa
jae
sub
mov
notl
inc
dec
sbb
jne
jecxz
push
into
mov
inc
xor
faddl
mov
daa
arpl
mov
xchg
cmp
clc
add
dec
push
push
mov
xor
push
jg
bound
or
add
loopne
fcoms
cmp
sti
daa
jo
mov
jmp
inc
mov
push
faddp
adc
stos
xchg
clc
iret
mov
aaa
fidivrs
outsl
sub
sub
push
xchg
fwait
pop
xchg
and
xlat
mov
pusha
repnz
data16
or
cmp
sub
pop
fdivp
mov
mov
rcrb
cmp
xorb
aam
popf
push
inc
push
cmp
adc
jl
in
fldenv
add
inc
pushf
pop
sahf
pop
xor
imul
jmp
loop
sti
push
fwait
cmp
mov
fwait
cmc
mov
bsr
add
sub
add
cmpsb
push
sub
jge
in
xlat
and
cs
into
push
test
dec
mov
push
sub
sbb
fistpl
nop
mov
lock
repz
and
xchg
loop
push
push
fidivl
lret
scas
xchg
xchg
jb
shrl
sbb
stc
add
stc
mov
and
adcb
jnp
push
lds
pop
inc
xor
dec
loopne
bnd
imul
add
mov
ffree
xor
int
dec
icebp
pop
outsb
insb
push
sub
jb
mov
jmp
lds
aam
in
fisttpl
jbe
mov
iret
lcall
int
pop
sahf
and
push
cmpsb
lahf
cmp
hlt
leave
aaa
cmc
int
js
mov
mov
mov
sub
cltd
lahf
push
loopne
push
push
jg
jecxz
pop
test
sarl
mov
xchg
aas
dec
push
sti
test
mov
iret
clc
sbb
out
jmp
pushf
lret
jb
call
int
dec
or
ret
or
xor
out
retw
in
enter
sub
insb
push
mov
movsb
xchg
push
jge
arpl
dec
lret
stos
mov
pusha
cmp
adc
stc
cmp
xchg
dec
sbb
dec
push
daa
add
jbe
orl
or
or
movsl
ret
xor
repz
notl
repz
scas
sti
mov
push
or
rclb
or
out
adc
mov
aam
mov
mov
cmp
callw
aaa
fwait
pop
ja
les
pop
cli
in
lcall
jmp
xor
mov
pushf
dec
int3
add
fs
xor
mov
movsb
lret
push
int3
xchg
in
and
popf
jnp
xchg
add
scas
scas
xchg
gs
popa
ljmp
mov
inc
push
push
stos
loope
insb
mov
and
decl
pcmpgtw
xchg
lods
inc
sbb
aad
push
mov
rolb
push
shr
dec
mulb
in
bound
sahf
or
cld
cli
inc
mov
xchg
test
dec
leave
or
mov
cltd
dec
mov
add
mov
out
add
test
cmpsl
or
and
or
jmp
pop
adc
popa
and
push
xchg
stc
cmp
sahf
pop
dec
push
pop
pop
nop
clc
lods
popa
jge
adc
lds
orps
addb
xor
add
xchg
dec
mov
inc
push
lock
lcall
sub
mov
imulb
stc
sbb
mov
rorb
imul
xchg
jle
add
sub
inc
add
inc
mov
pop
xor
test
cmp
daa
push
add
jns
and
add
pop
xor
adc
mov
or
mov
pop
aam
pop
or
dec
and
aad
idivl
sbb
push
sbb
cmp
mov
inc
fdivrl
pop
jge
out
add
cmp
data16
loope
mov
jp
js
scas
jg
data16
into
adcl
adc
das
xchg
push
xorb
mov
and
add
shrb
nop
dec
mov
mov
add
adc
mov
jmp
daa
pop
jle
je
mov
outsb
enter
out
stc
and
mov
mov
lret
cmp
insb
lea
jle
jnp
outsb
mov
repnz
jle
mov
lahf
add
push
es
dec
add
jg
cmp
mov
jbe
pop
pusha
mov
mov
mov
lret
mov
imul
jb
jmp
pusha
or
ret
lcall
cmp
dec
mov
bsr
sbb
ds
push
jecxz
sbb
js
dec
testb
xchg
fcoml
popa
sbb
loopne
add
xchg
fdivl
cmp
notb
lret
aad
xor
mov
dec
ja
push
push
jecxz
or
ret
fbstp
add
cmp
lds
inc
push
mov
pop
sbb
mov
push
jnp
es
jg
push
stos
cwtl
add
push
je
xchg
ret
push
loop
xchg
pop
ss
add
adcl
mov
xor
in
mov
test
mov
or
mov
test
hlt
nop
gs
push
cli
mov
mov
aas
in
xchg
test
mov
fbstp
cmp
inc
add
and
adc
xlat
and
mov
add
or
fisubs
xor
fprem
hlt
adc
xor
jae,pt
push
faddl
add
into
pop
fldenv
in
sbb
cmp
cs
int
icebp
mov
push
or
mov
cld
inc
addr16
int
insb
fsubs
cmp
sbb
push
fldl
pop
loopne
enter
lret
jns
inc
ljmp
cmpsb
push
mov
popf
pop
enter
ljmp
mov
mov
pop
cmc
cmp
call
xor
scas
das
adc
mov
xchg
out
std
xchg
dec
xorb
test
mov
xor
push
xor
fdivr
jmp
mov
mov
out
sti
imul
add
inc
test
xchg
in
add
sar
jae
xchg
jno
iret
push
int3
adc
xor
pop
aas
testb
mov
sbb
loop
xor
ljmp
xlat
inc
sbb
pop
pop
mov
fsubl
cmpsb
jg
les
lret
add
lret
adc
mov
movsl
nop
mov
das
popf
xor
mov
idivb
mov
lret
and
push
sub
ss
das
ret
push
rcrb
imul
lahf
aaa
fwait
jne
fnstcw
outsb
xor
sahf
adc
push
test
das
ja
mov
stos
fldcw
mov
in
lea
or
loopne
stos
cmpsl
aam
out
or
mov
dec
sub
xor
das
stos
sub
adc
pop
mov
xor
fldl
hlt
popa
ret
je
fwait
inc
pop
insl
dec
mov
movsl
cmp
popf
mov
lret
xor
hlt
jb
xchg
adc
and
push
or
outsl
pop
test
out
inc
scas
mov
jg
stc
roll
push
mov
stos
inc
add
adc
mov
testb
inc
in
add
leave
push
and
cltd
ficoms
jo
inc
test
sti
add
mov
leave
movsb
cmc
cmp
scas
loop
pop
add
mov
cwtl
mov
xchg
sahf
push
or
fisubrs
call
ret
add
fisubs
xor
pop
outsb
pop
jno
es
mov
sbb
mov
sub
fsts
jae
mov
loopne
jp
lock
cmp
rcr
adc
adc
inc
sarl
sti
stos
adc
les
int
dec
and
and
xchg
clc
jl
xchg
or
inc
ja
pop
cltd
cmp
ficoms
mov
xor
jg
aaa
in
jnp
xor
pop
mov
push
dec
movsb
jns
pop
ds
stos
xor
pop
xchg
insb
shl
repz
inc
daa
adc
fwait
mov
xlat
shl
mov
fsts
fldt
inc
je
fs
xchg
xor
inc
cmp
xchg
mov
sarb
cmp
imul
cltd
outsl
add
sub
push
add
jge
test
incl
enter
mulb
mov
sti
sbbl
xchg
inc
push
push
in
mov
fbstp
mov
cmp
dec
xchg
in
flds
std
inc
jne
sub
hlt
mov
and
xchg
and
pop
aas
je
lret
sub
fsubl
add
pop
cmp
daa
pop
fwait
dec
lods
ret
repz
jae
pop
mov
out
call
std
add
jno
sub
rcrl
add
pusha
in
repnz
std
cltd
push
mov
sub
dec
int
jnp
mov
xchg
jb
fwait
sub
and
divb
int3
popa
lock
adc
out
adc
add
jle
dec
xchg
repz
data16
jno
add
xchg
mov
push
add
jns
leave
xchg
adc
dec
and
dec
pop
cmp
and
xor
inc
gs
in
mov
cli
pop
inc
or
fiaddl
mov
js
aad
jmp
lcall
mov
cltd
mov
inc
call
pop
pusha
into
sbb
stc
les
xchg
rcrb
push
xchg
adc
aam
or
push
ss
scas
cmpsl
or
jns
enter
sub
movq
pop
dec
adc
mov
add
sbb
push
and
jb
mov
add
sarb
xlat
pop
ret
xchg
int3
dec
int3
mov
inc
jecxz
dec
xchg
inc
xor
scas
fcmovbe
mov
call
dec
aaa
mov
pushf
cmp
dec
jnp
push
stos
dec
xor
and
cld
scas
cmp
jl
sbb
sub
inc
fmuls
inc
cli
movsl
add
add
int3
out
xor
cmc
jg
orb
mov
inc
mov
and
sar
lds
pop
and
xchg
popa
nop
call
mov
insb
xchg
xchg
mov
decb
xchg
ja
push
shlb
and
stos
mov
mov
and
xor
popw
mov
and
sbbl
dec
xchg
mov
mov
lods
push
xchg
push
pusha
or
mov
fs
outsl
lret
shlb
faddl
mov
shrl
pop
test
repnz
lds
mov
std
ds
fimull
fstl
cmc
inc
or
mov
and
inc
add
pop
inc
sarl
cwtl
sub
push
popf
out
adc
dec
in
add
dec
mov
xchg
mov
lret
pusha
les
out
subb
add
shlb
aad
jbe
in
pop
add
or
mov
mov
or
rorb
loope
push
xchg
jnp
mov
add
movsl
dec
jbe
sbb
cmp
fcmovnbe
lods
lret
fldcw
inc
inc
add
loopne
icebp
sbb
sbb
adc
cmp
xor
jne
clc
lret
movsb
sbb
jae
cld
negb
cmp
stos
pop
jae
sbb
mov
add
xlat
and
fmuls
dec
cli
add
push
mov
fs
fldcw
push
ss
mov
insl
mov
ljmp
clc
and
das
iret
fwait
sarb
add
cmp
enter
sbb
inc
mov
sbb
add
cmpsb
mov
jge
or
push
int3
ljmp
mov
fisubrl
leave
and
push
sbb
aad
insl
mov
cltd
fabs
dec
gs
nop
lahf
cmp
dec
cwtl
pop
jl
pop
mov
cmpsb
xchg
mov
mov
scas
cwtl
and
int3
leave
xchg
enter
loope
divl
les
jnp
aad
push
in
call
call
mov
pop
lods
lds
xchg
scas
rclb
test
lret
shll
imul
addr16
inc
push
scas
lock
cmp
jecxz
leave
popf
sbb
out
mov
les
pop
xchg
pusha
push
ja
ljmp
ds
lret
xor
test
xor
popa
rcrb
pop
inc
push
dec
push
xchg
and
stos
mov
lcall
inc
mov
ret
in
add
pop
pushw
lgs
hlt
inc
bound
imul
lods
sbb
pop
ss
pop
data16
lds
adc
ja
jne
scas
outsl
roll
shll
shl
cwtl
mov
sti
mov
nop
out
cmp
pop
pushf
stos
sbb
cs
nop
xchg
negb
inc
ret
mov
dec
les
cmpsb
jmp
adc
push
loope
mov
mov
sar
cmpsb
shlb
shrb
lds
scas
test
popa
pop
xchg
adc
xor
subb
data16
jo
pop
cwtl
ret
or
sub
test
adc
jge
lret
push
add
mov
pop
cs
pop
adc
lods
lret
jo
mov
lock
xchg
jmp
sub
mov
add
cwtl
fstps
popf
mov
xor
and
std
push
dec
test
call
jne
cmp
ljmp
mov
adc
adc
lcall
inc
outsb
inc
dec
jno
pop
mov
sbb
xchg
ret
add
jecxz
push
and
outsl
enter
xchg
dec
aas
adc
mov
aas
jecxz
out
pop
aam
push
les
stc
repz
ljmp
and
ds
xor
mov
testl
ja
xchg
test
mov
cmp
push
mov
sbb
roll
push
add
fadds
cmp
xchg
sahf
xchg
push
nop
mul
mov
jecxz
clc
mull
mov
in
bound
andb
pop
jbe
stc
adc
mov
and
mov
sub
xchg
mov
out
enter
ljmp
insb
mov
imul
xorb
cmc
and
xor
call
addl
and
test
outsb
pushf
in
shlb
sub
ds
pop
cmc
daa
cmpsb
xlat
mov
movsl
stos
push
test
scas
jmp
xchg
push
push
or
mov
dec
int3
pop
in
scas
adc
jnp
inc
movsl
lock
mov
cmp
inc
andl
mov
sub
adc
fimuls
lahf
jae
aaa
popa
cmp
mov
ffreep
xchg
ret
call
add
xor
loope
stos
sub
jge
mov
ss
jl
and
pop
js
sahf
in
or
cmp
xchg
mov
xchg
sub
or
sub
in
ljmp
add
inc
inc
push
mov
mov
js
sbb
or
pop
in
inc
pop
inc
ljmp
jmp
cmp
lea
icebp
sub
push
jmp
jb
mov
stos
dec
adc
push
mov
xchg
pop
leave
lea
jno
pushf
test
lods
fisubs
push
lods
lahf
sbb
mov
mov
clc
movsl
adc
lods
xchg
cmp
gs
mov
pop
inc
sbb
cwtl
out
mov
xchg
insl
fs
imulb
daa
lret
pop
test
sub
mov
dec
cmpsb
nop
stos
xchg
outsl
jecxz
inc
cmp
jb
and
xor
pop
pop
cmp
sbb
mov
imul
imul
lock
stos
popl
pop
cli
cmpsl
xor
sub
cmpsb
cmpsl
data16
imul
lret
rcrb
adc
fld
xchg
xchg
push
pop
lods
xor
jmp
jne
dec
push
or
fsubl
data16
xchg
es
pop
sbb
icebp
cs
fists
mov
js
xor
xchg
icebp
in
xor
imul
pop
dec
in
call
addb
data16
cmp
imul
lcall
cwtl
inc
pop
subl
stos
ret
inc
into
or
jbe
enter
adc
jb
sbb
mov
xor
dec
xlat
mov
insb
push
cs
scas
sub
arpl
negl
mov
call
xor
pushf
mov
jnp
shlb
sub
push
jmp
icebp
dec
xor
fwait
pop
mov
mov
and
dec
pusha
into
pop
add
in
pop
xchg
fsubs
int3
adc
xchg
push
add
shr
and
pop
lds
xchg
movsb
pop
mov
pop
and
push
jle
mov
mov
inc
dec
js
test
in
sbb
outsb
adc
and
dec
js
test
or
aam
mov
out
xchg
xchg
fcmove
ljmp
enter
xor
pop
insl
ljmp
sub
mov
mov
rclb
cli
dec
cmp
data16
mov
adc
lds
mov
push
popf
fnstcw
push
ljmp
xlat
iret
and
outsb
in
mov
mov
fisubs
xor
push
mov
movsl
cmc
loopne
xchg
jno,pt
inc
jmp
mov
popf
das
cli
dec
sub
stos
cmp
sbb
loop
je
pop
adc
cmpsb
sub
ret
push
out
sti
jne
and
dec
in
ja
sbb
scas
sbb
fwait
mov
movsb
mov
repz
pop
or
add
stc
xor
or
popa
je
loop
jge
mov
xchg
inc
jae
outsl
xchg
cmp
leave
and
and
mov
daa
movsb
mov
sbb
xor
jo
repnz
lret
mov
stos
dec
xchg
test
pop
push
xor
xchg
fwait
mov
xorl
or
fcomps
jno
xchg
repz
mov
nop
loop
je
outsb
sbb
and
pop
add
cwtl
sti
push
lret
xchg
in
rclb
xor
in
dec
jns
cs
or
and
mov
sti
dec
inc
mov
xchg
int3
lock
xor
hlt
les
leave
dec
movsl
in
or
push
jno
inc
dec
ret
outsb
ret
call
lcall
int3
pop
test
loopne
dec
adc
mov
repnz
or
jae
mov
push
in
jl
xlat
mov
hlt
and
divb
mov
repnz
rcll
jge
xchg
aam
xor
pop
and
test
pop
or
xchg
movsl
lods
mov
pushf
cmp
mov
mov
mov
ja
push
pushl
shrb
jmp
std
mov
dec
sub
add
mov
xor
adc
popl
push
mov
aas
call
filds
lds
bound
les
cltd
lods
and
mov
cltd
ret
je
hlt
mov
push
pop
out
fldenv
or
push
mov
stos
mov
adc
cmp
jns
xlat
sbb
xchg
dec
pusha
mov
cmpsl
rcrl
gs
divl
lds
inc
mov
push
idivb
add
jno
ljmp
mov
dec
repz
push
test
cmp
in
dec
adc
add
sub
mov
cmp
and
fnstsw
mov
sub
adc
icebp
jb
enter
xchg
cmp
xor
cmpsb
and
rcl
inc
ds
jbe
cmp
sahf
in
dec
inc
sbb
fisubrl
data16
or
mov
mov
jnp
in
repz
imul
inc
cld
insb
push
je
idivl
xor
jp
enter
rorl
sub
pop
lahf
jecxz
push
mov
shl
or
or
leave
and
and
fs
rcrb
fwait
and
repz
fisubs
loop
jbe
sahf
add
fadd
cli
inc
or
adc
lds
jecxz
fwait
and
sub
daa
insb
sbb
out
mov
cmp
icebp
jle
xchg
movsl
mov
xchg
sti
lds
mov
addr16
xchg
lods
mov
imul
fwait
movsl
imul
or
or
add
push
jo
in
push
add
jmp
fwait
pop
mov
stc
xchg
push
dec
xchg
ja
xchg
mov
or
jmp
mov
jae
jo
movsb
lret
add
push
lods
lahf
lahf
xchg
mov
pop
idivl
enter
addr16
fwait
aam
test
pushf
ffree
xor
and
pop
fwait
sbb
shufps
add
les
cwtl
lcall
sub
mov
arpl
enter
dec
xchg
mov
sbb
test
add
xchg
xchg
mov
pop
test
xlat
jnp
mov
sbb
cmp
mov
cmp
lods
sahf
and
and
mov
fsubl
lret
popf
sbb
loopne
mov
lcall
lods
jbe
inc
mov
mov
xchg
fadds
xor
dec
adc
lret
orl
jne
xlat
dec
inc
mov
and
testb
pop
loop
cli
movsb
inc
pop
pop
lods
pusha
ljmp
cs
in
shll
or
jg
je
jmp
mov
mov
mov
add
xchg
sbb
xlat
pop
adc
cli
or
xchg
pushf
aad
pop
jne
xor
das
rorb
xchg
mov
stos
out
mov
mov
in
add
rorb
mov
dec
pop
in
xchg
sbb
push
aad
sub
pop
mov
scas
xor
push
stos
xchg
dec
in
mov
jns
in
push
es
add
mov
cs
loopne
xor
or
loop
sti
test
testb
or
xchg
mov
out
adc
jl
xor
lret
orb
inc
xor
jmp
stos
test
mov
aad
xor
xorb
push
push
or
or
dec
dec
mov
or
adc
pop
pusha
push
ds
jno
sub
cmpsb
out
pop
jbe
clc
fcmovnb
cmp
pop
movsl
pop
clc
push
fsub
and
xchg
loop
pop
data16
lret
mov
roll
rcr
repz
movsb
jecxz
mov
add
es
xor
sahf
hlt
dec
and
or
stos
and
pop
push
xchg
orl
jmp
fnstenv
fwait
sub
int3
addr16
leave
insb
mov
inc
jl
and
fcomip
adc
sbb
lea
scas
cmp
test
cmp
fprem1
pop
scas
jns
or
imul
test
mov
push
sahf
pushf
stos
pusha
loope
subl
adc
jecxz
fsubrs
xor
into
inc
xor
lahf
push
sarl
es
push
iret
or
fdiv
mov
jmp
js
mov
dec
test
xchg
pop
shlb
push
nop
fs
push
mov
fs
or
imul
loope
mov
out
mov
adc
mov
aaa
popf
jne
aaa
cmp
mov
cmpsl
mov
stos
and
jbe
push
mov
dec
mov
inc
push
outsl
mov
dec
std
je
sbb
mov
ss
cmp
mov
clc
pop
pop
push
xchg
cmpsl
jg
pop
pusha
or
adc
push
into
sbb
cmp
xchg
xor
xchg
or
fs
mov
andl
arpl
std
fnstsw
mov
add
xor
rol
push
mov
adc
lods
mov
mov
sub
sub
add
and
inc
scas
mov
clc
gs
dec
fidivrl
mov
mov
fmuls
or
loope
std
in
insl
pop
cwtl
push
add
mov
xchg
test
push
fsub
inc
pop
push
push
test
xchg
into
fwait
iret
or
les
jnp
jl
popa
cwtl
add
cmp
and
mov
gs
sub
add
mov
and
cmpsl
and
and
pop
xor
jge
mov
xor
popf
xor
xlat
stos
aaa
cs
cmp
cltd
pop
pop
stos
ret
movsl
lods
push
xchg
and
add
clc
aas
or
cmp
lock
cmpb
pusha
jbe
sbb
mov
js
push
cmp
cmp
mov
jmp
sub
jno
inc
inc
cmc
inc
fisttpll
out
imul
jge
lahf
and
insl
cmp
dec
adc
jle
xchg
popf
mov
repnz
and
fnsave
push
jnp
lods
arpl
jb
dec
ret
ret
nop
cmpb
filds
lahf
cs
mov
pop
cmp
hlt
insb
cmp
popf
inc
scas
push
les
std
push
dec
test
nop
cltd
dec
jmp
or
mov
sub
mov
add
adc
or
les
xor
cmc
js
inc
arpl
inc
movl
sub
aam
pop
cltd
add
jnp
fidivrl
clc
sub
rclb
into
push
mov
pop
inc
mov
shlb
jge
adc
iret
in
push
mov
ljmp
xchg
in
xor
fiaddl
cld
sbb
xorb
dec
scas
inc
pusha
sbb
push
push
repz
mov
dec
mov
popf
test
and
push
iret
inc
push
push
push
push
daa
fadds
xor
fldl
pop
lods
out
push
push
movsl
inc
mov
sub
in
inc
mov
xlat
jmp
xorb
ljmp
mov
adc
push
loope
in
imul
loopne
popa
xchg
test
cmp
mov
cmp
or
bound
lds
adc
orb
test
and
out
iret
pop
sahf
pop
lea
push
push
out
orb
xchg
dec
mov
mov
and
rorl
pushf
or
sahf
adc
sub
dec
cmp
xchg
popa
and
pop
lods
and
push
xor
lcall
das
sub
or
iret
adc
jg
mov
cmp
push
stos
inc
arpl
adc
xor
movsb
xchg
adc
xchg
idivl
outsb
inc
or
das
repz
out
verw
cmp
sbb
jbe
movsl
push
cltd
popf
or
out
add
adc
cmp
xor
in
negl
fnstenv
inc
shr
or
test
mov
aas
sti
ret
mov
dec
shr
or
add
xor
push
lods
or
aas
pop
es
or
in
fistpll
out
push
sbb
daa
pop
xchg
ss
mov
test
mov
lock
xor
ficomps
push
mov
xor
mov
ret
lret
mov
scas
arpl
repnz
nop
pop
and
xor
mov
jne
cmpl
mov
daa
repz
lahf
outsl
jl
andb
jl
adc
mull
inc
push
pushf
add
call
les
adc
inc
call
loop
les
add
lea
mov
sbb
pop
mov
xchg
inc
adc
jmp
cltd
cmpsl
loop
aas
cmp
into
filds
gs
outsl
jo
je
je
or
mov
add
in
cmp
mov
cmp
jle,pt
push
mov
and
jno
jle
push
cmp
sbb
nop/reserved
dec
mov
cwtl
insl
pop
mov
cmpb
sub
and
lahf
repz
push
js
sbb
ljmp
mov
xchg
pop
not
aad
loop
push
add
cmp
in
jecxz
vpmacssdql
incl
outsl
mov
mov
ror
xorl
sbb
cmp
or
sahf
pop
mov
and
jecxz
lods
push
into
movsb
outsb
loopne
shll
fdivs
dec
jns
repnz
fcmovbe
ljmp
cmp
and
rcll
hlt
imul
jns
in
mov
inc
es
xchg
in
mov
out
mov
cmpsb
fstp
or
mov
lret
aas
lock
adcb
daa
fsubr
add
sbb
pusha
push
and
jle
pusha
push
test
xchg
inc
mov
and
fisttps
xchg
aad
push
add
cltd
iret
loop
aas
sbb
xchg
movsl
fcomp
and
divl
pop
and
pop
xchg
jge
notl
xor
inc
xchg
inc
fnstcw
mov
sub
outsl
lds
sti
add
mov
mov
add
push
pop
inc
mov
mov
lea
xlat
out
sub
xchg
xlat
adc
fbstp
mov
pop
push
add
push
mov
adc
iret
dec
xor
jnp
xchg
mov
mov
jnp
addps
pop
addr16
test
cmp
popa
lods
inc
fildll
sbb
xchg
xchg
cmp
mov
lret
adc
outsb
xchg
cmp
leave
fstp
jae
dec
and
push
ret
rcrl
shrl
xchg
mov
pop
inc
into
sbb
xor
mov
adc
imulb
or
sbb
insb
xchg
xor
stos
mov
orb
sub
push
mov
jmp
stc
jle,pt
loope
mov
mov
les
or
dec
ret
jmp
out
ret
add
mov
sbb
lods
int3
pop
arpl
frstpm(287
inc
leave
push
push
sub
lret
sub
or
add
dec
adc
roll
push
xchg
and
jo
fldl
pop
test
fwait
jae
aad
cli
or
add
push
jl
adc
neg
mov
fidivrl
mov
dec
jbe
and
jmp
shl
js
dec
jp
xchg
es
aaa
subl
dec
cwtl
add
cmp
inc
call
cli
pop
test
adc
out
test
and
cwtl
add
sub
sbb
or
adc
in
mov
xor
adc
test
jne
mov
mov
out
mov
jmp
mov
pop
rcrl
adc
mov
push
divb
xchg
fnstenv
or
mov
cltd
dec
das
fwait
mov
hlt
xchg
or
xlat
lock
mov
jle
psubsb
xor
lahf
sarl
add
std
mov
inc
fstpl
mov
push
cli
pop
pop
rcrb
pop
loope
or
jnp
sbb
add
ret
mov
sub
push
scas
add
dec
popf
inc
push
jmp
rcl
lea
fistpl
shrb
imul
cmpsl
cmp
movsb
xchg
shll
in
lea
mov
imul
push
repz
in
mov
mov
mov
add
lods
adc
das
inc
mul
mov
xchg
adc
push
int3
daa
push
negl
and
or
mov
xor
movsb
repz
sar
xor
and
or
sub
pushf
mov
lea
dec
stos
gs
in
xor
cvtps2pd
jle
jle
psrad
or
xchg
add
or
aas
mov
inc
stos
dec
jbe
out
sbb
mov
enter
cmpsb
cmp
dec
mov
fisubl
and
and
add
nopl
pop
jle
out
and
xchg
lods
cmpsl
cmp
or
loopne
pop
in
xor
mov
sub
mov
add
scas
mov
xchg
in
mov
aas
mov
jle
mov
or
test
repnz
xchg
mov
mov
popa
imul
pop
les
pop
push
adcl
cmp
rclb
mov
pop
and
dec
mov
mov
les
cmp
xor
adc
in
pusha
push
leave
and
sbb
or
jb
cmp
ja
mull
cmpsl
and
cld
inc
and
pusha
fldz
int3
fucomp
sub
push
andb
rcrl
pop
push
jb
inc
test
sbb
cmpb
dec
and
mov
xorl
rorb
jp
aaa
dec
std
icebp
xchg
mov
lea
lret
xchg
dec
mov
movsb
nop
iret
inc
into
fiaddl
fscale
lods
fstpl
out
out
out
or
imul
mov
fwait
movsl
mov
std
push
nop
jae
loope
rep
filds
jnp
inc
pop
pop
adc
push
imul
test
js
movsb
sbb
out
aas
ror
add
push
xchg
mov
inc
fwait
in
mov
jg
ja
nop
or
adc
xchg
cmp
fbstp
dec
and
mul
mov
test
and
orb
leave
std
ss
dec
pop
push
test
int
nop
ud0
je
mov
mov
or
dec
fadd
leave
sahf
jae
clc
rcr
test
enter
xchg
ss
gs
add
decb
xchg
or
lcall
fucomip
les
inc
cmp
repz
icebp
pop
and
rorl
sti
mov
push
and
cmp
inc
push
leave
push
xchg
inc
xchg
sbb
mov
bound
mov
cmp
jbe
pop
shrl
mov
xchg
sub
mov
adcb
cltd
or
sbb
sbb
jp
dec
pop
push
in
and
jecxz
pop
jge
xlat
addr16
shr
jle
push
xchg
mov
nop
sub
mov
xchg
sbb
cwtl
sbb
outsl
es
inc
mov
inc
jle
jge
test
or
test
jg
sahf
xor
mov
cltd
inc
xor
sarb
ficoms
add
aam
pusha
iret
ss
inc
push
out
lea
mov
mov
loopne
mov
and
jmp
mov
in
dec
fisubl
test
sahf
loope
xlat
sub
loop
jmp
pop
jae
shll
sbb
insb
in
sbb
std
sti
push
ljmp
popf
lods
fmul
ficomps
xorb
inc
mov
cld
dec
mov
test
ljmp
push
dec
lods
mov
pop
push
pop
fistpll
jnp
push
and
sub
popa
nop
fistpl
push
push
les
nop
mov
lcall
divl
push
bound
mov
inc
and
test
loop
cld
pushf
jge
cmp
jp
scas
dec
xchg
jmp
notb
enter
jmp
mov
inc
out
shll
add
xchg
call
inc
push
mov
push
jbe
inc
fmul
cmpsb
mov
cmp
xchg
out
mov
incl
sarb
xor
jo
mov
jno
or
add
jo
int
inc
sub
pop
test
add
test
xlat
jle
sbb
cmp
mov
test
lahf
xor
sbb
arpl
in
punpckhbw
insl
inc
loopne
lcall
fs
adc
inc
imul
add
xchg
scas
test
or
aaa
jae
lods
pop
inc
cmp
fwait
aad
repnz
or
jle
mov
xor
and
or
je
pop
inc
fsub
mov
into
cmp
ret
aam
bnd
sub
mov
xlat
lock
jae
ds
cmp
sbb
lds
fnstcw
mov
add
decb
movsb
mov
jne
xchg
pusha
jge
pop
lahf
out
lahf
adc
lock
sub
inc
jns
lcall
and
aas
or
ret
push
add
sub
push
dec
sti
mov
push
pop
es
add
in
or
sub
into
pop
push
lods
mov
jp
repnz
push
or
jb
inc
pushf
push
pop
stc
inc
cmp
movsb
push
xchg
out
push
mov
cmp
mov
xchg
mov
lret
cwtl
sbbl
lods
clc
lahf
in
aad
popf
sub
mov
jno
mov
mov
mov
insl
mov
mov
mov
test
out
jnp
ret
jnp
enter
lods
sarb
ret
pop
insl
push
insb
mov
ds
xchg
mov
insl
sbb
pop
xchg
loop
lds
cmp
pushf
ficoml
mov
lods
loopne
or
push
xor
xorb
lods
test
inc
lods
sub
lret
fwait
stos
sub
fcmovne
pop
adc
ss
dec
dec
pop
sub
mov
int
ret
push
xchg
jnp
sbb
nop
mov
fdivrs
xor
jnp
push
xchg
outsb
inc
insl
cmc
in
sub
ds
test
andb
lods
call
nop
dec
push
scas
add
outsl
out
mov
dec
xchg
mov
outsb
jno
jno
pop
mov
adc
pop
push
xchg
fidivrl
faddl
add
mov
mov
add
sbb
inc
sbb
icebp
push
insb
arpl
cmp
fadds
xor
push
rol
movsl
mov
and
fisttpl
loopne
popf
sti
arpl
lds
and
mov
jns
sub
mov
sub
mov
sarl
int
and
mov
sub
cmp
sbb
jmp
mov
mov
mov
das
aaa
xlat
xchg
add
bound
shlb
adc
lock
dec
add
cmp
psrad
xor
adc
test
cmpsb
pop
push
outsl
popf
or
hlt
mov
push
xlat
test
jmp
andl
mov
inc
sub
push
mov
xchg
dec
ja
or
lds
mov
xchg
pop
std
xor
out
ljmp
in
push
ss
ret
mov
cmpsl
push
stos
inc
sub
adc
dec
sub
lret
cmpsl
mov
cmp
outsl
pop
dec
xchg
add
cmp
inc
lods
mov
js
rclb
and
or
test
sahf
pop
int
scas
lret
inc
into
xlat
mov
popa
mov
rcr
int3
adc
addb
imul
sub
sub
pop
dec
mov
out
or
test
add
jae
test
in
fisttpll
insl
push
xchg
dec
sbb
adc
mov
sub
jmp
arpl
jp
pop
std
pop
add
iret
stos
mov
mov
push
pop
inc
mov
stos
lcall
mov
mov
mov
and
inc
std
mov
xor
fs
data16
add
pop
into
cmp
push
ja
stos
mov
in
imul
out
or
inc
adc
mov
test
imul
pusha
pop
popa
icebp
mov
stc
push
pushf
or
and
cltd
jne
ds
addr16
bound
and
aas
lods
pop
lds
enter
dec
push
icebp
imul
int
repnz
pusha
and
mov
push
dec
and
pushf
lret
jae
xchg
adc
rol
adc
clc
out
push
pushf
jb
push
das
pop
xchg
pop
sbb
cmp
ss
sub
notl
sub
das
fsubl
out
test
adc
pop
fstpl
sub
mov
push
or
mov
data16
popf
cli
ret
cmp
test
jg
or
mov
sbb
jp
popf
push
pand
jp
scas
push
inc
push
and
outsb
lahf
les
lahf
push
sti
nop
jbe
repnz
inc
daa
cld
push
lods
frstor
lret
daa
push
lcall
xchg
mov
fcompl
xchg
jo
ja
mov
mov
imul
out
in
loop
daa
mov
sahf
push
jne
xchg
sbb
repz
and
or
push
push
das
jae
or
jns
pop
popa
sbb
xor
rol
out
xchg
mov
xlat
mov
in
fbstp
sub
xor
mov
sub
cmp
mov
test
cmp
push
data16
mov
inc
out
inc
in
jmp
pop
fwait
rclb
inc
sbb
xlat
fildl
push
and
cmp
cld
jne
sbb
pop
jne
dec
lds
stc
ds
push
jb,pt
arpl
mov
push
xchg
pop
in
push
pop
push
btr
mov
push
ret
sub
mov
je
pop
cli
and
subl
sub
addr16
aad
lock
cli
ret
xchg
cli
inc
xor
mov
and
popf
movsl
ljmp
mov
lret
add
imul
fistps
xchg
jo
add
orb
inc
sbb
or
mov
pop
inc
inc
popf
iret
ss
inc
jmp
or
fadds
jnp
xorb
and
jbe
es
dec
dec
or
scas
testl
push
adc
sub
mov
jl
xlat
jl
rcr
dec
pop
push
sub
dec
xbegin
jns
les
sub
stos
ffreep
jo
cmp
sar
sub
dec
mov
aaa
loopne
ds
lock
cmc
clc
mov
mov
fisubrl
jns
iret
cmp
shll
std
xchg
inc
adc
push
or
out
data16
std
loopne
call
mov
fimull
out
in
sbb
aad
dec
aas
dec
or
and
ss
jl
cld
cmp
aam
lahf
out
pop
jge
into
mov
clc
mov
or
or
sub
mov
dec
push
repz
scas
xchg
mov
add
in
inc
inc
cld
add
ret
lahf
or
push
outsl
push
jl
ljmp
jle
cwtl
into
dec
les
push
imul
sbb
test
xor
dec
out
jge
jl
cmc
aad
cmp
pusha
movsl
sbb
aas
subl
orb
jo
lods
cli
xorl
imul
push
mov
add
cmc
outsb
ficomps
mov
push
icebp
repnz
mov
pop
jecxz
mov
out
in
xor
sbb
sbb
rcll
scas
pop
je
lods
pop
fsubr
bound
or
mov
sbb
arpl
lods
xchg
xchg
les
cmp
stos
std
add
and
inc
gs
pop
jb
push
cli
loop
mov
push
popa
into
xor
lcall
imul
outsl
dec
or
outsb
cli
daa
ret
sti
add
psrlq
inc
outsl
xor
add
and
mov
adc
xor
mov
add
in
daa
cwtl
fists
adc
xor
dec
dec
adc
arpl
in
dec
les
pop
mov
mov
push
or
jle
adc
js
mov
pop
outsl
mov
sbb
sub
imull
sub
or
cmp
jbe
xor
cmpsb
pop
ret
push
ret
xor
test
jnp
xor
mov
cmp
jecxz
stos
inc
gs
in
ret
test
les
test
xchg
fimull
sub
fdivs
cmp
jo
loopne
int
ret
jns
lock
jl
xchg
pushf
inc
push
dec
dec
pop
lods
dec
xchg
or
int3
jle
mov
push
in
jle
push
shrb
repnz
rorb
mov
out
mov
int
fcoms
test
sbb
xchg
stc
inc
sti
dec
aad
in
dec
imul
sub
mov
xor
mov
mov
xchg
jmp
pop
bound
push
push
mov
test
push
mov
ss
call
and
stos
dec
nop
out
je
clc
mov
arpl
inc
cmp
je
aaa
mov
ds
cmp
or
sub
loopne
psraw
inc
ljmp
outsl
scas
and
jl
dec
gs
xor
pushf
push
jo
lods
cltd
xchg
pop
jae
jmp
sahf
ja
insb
sar
jno
mov
cwtl
insl
xor
cmp
mov
cmc
push
lcall
jg
pusha
push
lods
rclb
cwtl
movsb
adc
iret
mov
jne
push
or
or
xchg
sbb
add
int
pop
jnp
inc
enter
jo
push
shl
xchg
mov
jae
push
sbb
jbe
push
cmp
nop
mov
dec
mov
mov
xor
cmp
adc
flds
inc
das
test
adc
push
out
andl
mov
jl
cmp
aad
or
js
mov
jbe
add
loop
outsb
enter
pop
mov
pop
ret
sub
xor
std
jns
pop
int3
ss
in
mov
or
ficompl
hlt
imul
outsb
divl
mov
out
jle
cmp
stc
push
and
inc
cmpsb
push
clc
cmc
sbb
mov
cmpsl
adc
js
mov
push
cs
addr16
out
popa
adcb
arpl
cmp
pop
push
jbe
adc
jno
mov
mov
jo
sub
jb
push
xchg
cltd
xchg
test
in
mov
mov
cmpsl
popa
xchg
pop
inc
push
push
stos
push
add
movsb
arpl
mov
add
and
xlat
repnz
adc
sub
aam
subl
and
pop
lret
xor
sbb
jb
int3
sti
leave
fdivrs
sbb
insb
test
idiv
shlb
dec
cmpsl
stc
rep
orb
jns
jbe
fdivp
shld
andps
mov
mov
cwtl
jmp
les
leave
sub
add
xchg
push
sbb
aaa
push
mov
rcr
pop
mov
std
data16
fildll
pop
xor
test
loopne
nop
mov
fimull
and
pop
sbb
incb
div
int
jmp
mov
sub
sahf
imul
sarb
sbb
in
sti
xchg
iret
in
fwait
ja
imul
lods
dec
stc
jg
in
push
cmpsl
mov
adcl
jp
test
xchg
test
push
bound
popf
xchg
push
bound
in
xor
hlt
add
roll
xchg
xor
sub
jnp
jmp
jmp
and
or
sub
fwait
cmpsb
fmul
divl
jmp
mov
inc
arpl
cwtl
stos
jge
sbb
mov
mov
xchg
loopne
test
lret
arpl
fwait
inc
pop
push
aam
ret
mov
add
cmc
push
cmpsb
incl
lock
repnz
loop
loop
add
push
jge
fwait
pop
scas
inc
mov
icebp
sbb
les
dec
cmpsl
mov
bound
cli
ja
cli
cmp
scas
lods
andb
ljmp
adc
pop
fdivrl
xchg
sti
inc
loope
call
fs
inc
mov
jo
divb
or
jecxz
shrl
cmpsb
sbbb
mov
pop
in
int3
pusha
aam
enter
scas
xor
iret
xor
lret
mov
mov
decb
cmp
lret
insb
dec
cld
std
sbb
arpl
in
mov
ret
mov
popf
adc
ret
inc
pop
dec
jmp
pop
sub
out
xchg
mov
jns
jg
ret
xor
or
add
adc
push
sub
cmpsb
addr16
pop
mov
cltd
test
out
dec
push
mov
add
out
outsb
push
ds
lret
in
xor
bound
nop
enter
cmp
adc
sbb
push
das
pushf
xchg
hlt
repnz
pop
push
dec
rclb
jb
dec
ret
lret
or
add
dec
pop
xor
xor
sbb
mov
adc
repz
mov
mov
out
sbb
mov
jb
dec
push
add
jnp
push
roll
test
fldt
lcall
test
ss
mov
imul
add
lret
das
idivl
jb
das
out
out
sbb
pop
insl
in
in
das
or
sahf
pop
pop
xchg
cwtl
cs
mov
jge
je
sub
mov
stos
andb
mov
lret
xchg
jg
mov
inc
out
into
mov
sarb
repz
push
fwait
or
shrb
fbld
cmc
sub
daa
xorl
fcoml
popf
fs
stos
imul
mov
rorl
cmpsb
jle
or
push
push
lea
test
iret
lock
ss
and
and
mov
lea
xor
cmp
xor
arpl
and
leave
ds
jno
cmp
test
mov
dec
imul
mov
cltd
and
loop
adc
ds
or
pop
jno
or
sub
popa
and
std
subb
mov
test
fists
pop
adc
mov
outsl
mov
in
lea
add
fsts
dec
cmc
dec
jne
mov
lods
cmp
mov
cmp
popa
ret
jae
mov
xchg
das
inc
loope
push
lods
fcompl
inc
sub
pop
cmp
add
jbe
stos
push
sub
mov
mov
push
dec
scas
fldl
push
clc
cwtl
dec
mov
lcall
scas
out
adc
mov
push
lret
add
and
fdivr
jae
xor
xor
adc
rcrl
stos
stc
fcomp
jge
xchg
rolb
mov
jg
mov
insb
cltd
int3
jp
lret
mov
pop
adc
cmp
xor
add
test
push
in
das
xchg
lock
lock
adc
sub
push
fsubrs
pop
inc
out
aas
mov
bnd
fldt
add
add
adc
jno
ja
adc
imul
cmp
mov
sbb
mov
fwait
aad
das
push
adc
xor
sbb
mov
adc
scas
insl
bound
daa
cmp
xchg
xchg
dec
mov
pop
out
sub
jo
lahf
loopne
orb
xor
push
adc
movb
or
sub
das
daa
pushf
push
mov
mov
lgdtl
sub
cmp
out
pop
add
mov
icebp
jbe
push
mov
sbb
sti
aad
lret
xchg
rcl
cmp
cmp
jmp
fists
lock
sbb
std
icebp
xchg
call
jnp
pop
sbb
xchg
fimull
and
stos
loope
or
mov
jl
movsl
stos
jne
call
insb
mov
pushl
movsb
adc
xchg
outsb
out
jg
lock
pop
xchg
imul
ds
shlb
push
aaa
and
sbb
in
loopne
in
cli
ljmp
mov
xlat
cmp
mov
dec
loop
pushf
addl
aas
stos
out
adc
or
enter
add
mov
sub
xor
stc
imul
push
inc
jb
mov
mov
xchg
mov
push
cld
jp
sub
les
lods
xchg
les
scas
andb
mov
pop
pop
repz
inc
or
jg
std
scas
push
xor
xchg
repz
subb
pop
cmp
lcall
jno
xor
and
ja
add
mov
out
outsl
jne
add
lea
push
loop
aas
fdivs
or
inc
out
pusha
jmp
adc
xor
shll
adcb
loopne,pn
scas
add
jbe
push
cmc
sti
fsubrp
fnstenv
jmp
das
xchg
or
xor
xchg
cmp
ds
sub
push
jno
fcomps
ds
fcomip
dec
fldl
fwait
in
fistpl
mov
add
pusha
xchg
cmp
and
jge
dec
lahf
int3
push
and
and
mov
das
out
inc
pop
fdiv
lretw
dec
xor
movsl
dec
jns
int3
and
pop
xor
mov
mov
subb
das
xchg
loopne
dec
out
xchg
daa
leave
pop
nop
arpl
xchg
xchg
mov
mov
ds
mov
dec
jp
mov
mov
mov
xchg
ret
mov
mov
xchg
fnstenv
inc
xchg
cmp
hlt
stos
cmc
pop
rcrl
out
xor
je
mov
pop
js
xor
cld
fistpl
add
orb
sub
mov
sarl
decb
test
jb
addr16
pop
loope
lock
sbb
out
push
xchg
fidivs
add
pop
mov
fisubrl
or
xor
ss
sub
cmp
das
mov
add
inc
and
lds
ret
test
bound
bound
xchg
mov
out
fildl
stos
mov
pop
sbb
sbb
inc
in
orl
aad
mov
lahf
push
sbb
inc
inc
test
cld
out
inc
out
mov
gs
cli
movsl
fs
hlt
popl
scas
mov
ljmp
mov
add
push
push
scas
rcr
mov
pop
shl
inc
cmp
sub
insb
add
sbb
das
push
push
pushfw
push
push
ljmp
rorl
pop
and
mov
and
xchg
pop
xor
lcall
xchg
test
insl
jl
pop
mov
ja
stos
sub
lods
push
in
pushf
xchg
out
fistpl
setg
dec
clc
or
popf
fidivrs
in
sub
xlat
pop
sbb
mov
or
jmp
shll
inc
cmpsl
xchg
mov
sahf
and
sbb
jno
mov
pop
in
sbb
in
add
loope
sti
push
fwait
out
adc
outsl
sub
sbb
mov
lret
pop
xlat
xorl
ret
rcrl
inc
test
xchg
adc
inc
cltd
jg
cmpsl
rclb
cli
mov
sbb
xor
inc
xchg
out
imul
test
in
push
mov
loop
dec
inc
xchg
pop
cmpsb
js
iret
in
sub
mov
add
std
pop
pop
pop
scas
nop
mov
movb
add
rcrl
xor
mov
push
and
popf
test
out
sub
push
push
adc
out
ficoms
cvtpi2ps
add
cmp
out
mov
or
jbe
shll
dec
div
aad
jl
mov
rorl
and
ljmp
mov
dec
or
loop
clc
pusha
xor
rorb
add
insl
fwait
dec
or
push
scas
aam
xchg
mov
pop
cmp
sbb
inc
push
inc
sub
push
add
add
mov
jge
add
mov
mov
or
popf
out
mov
std
mov
xchg
xorl
jl
icebp
pop
lahf
or
jge
and
jl
mov
cmpsl
pushf
stos
mov
inc
and
jnp
mov
or
scas
mov
mov
sbb
xchg
in
xchg
pop
sbb
outsb
cmp
enter
pop
dec
push
fcompl
sahf
and
into
ret
xlat
mov
orl
fwait
add
aam
bound
js
cmp
adc
test
mov
mov
push
and
add
aaa
testl
ret
cltd
test
into
xchg
mov
cwtl
xor
insl
outsl
jb
sahf
loopne
mov
adc
mov
sbb
add
adc
pcmpgtd
dec
mov
repz
mov
mov
pavgw
add
xor
push
aaa
repz
popf
aad
aad
pop
jno
int
mov
cmpsb
loope
sbb
cmpsl
aad
push
out
lds
sti
cli
fcoms
add
scas
shll
test
js
inc
out
rcrl
jno
ds
cmp
clc
iret
movsb
fcomps
cmp
or
sub
inc
shlb
adc
push
aas
js
adc
push
rorl
push
pushf
mov
ret
cmp
push
data16
push
adc
jo
enter
std
fnstsw
mov
mov
sar
loop
pop
addr16
fnstenv
jae
in
push
push
popa
and
inc
push
push
xchg
push
imul
or
push
ja
mov
xchg
mov
or
cmp
mov
sti
or
adc
and
fidivl
jno
xchg
scas
into
mov
add
pop
int3
pop
or
fsubl
pop
mov
adc
inc
xrelease
stos
mov
icebp
push
xor
jns
test
xchg
adc
sub
loop
mov
or
ficomps
aam
test
adc
pop
cltd
dec
and
sbb
jecxz
pop
sub
dec
add
test
gs
xchg
ljmp
mov
cmpsl
ss
sbb
mov
xchg
pop
push
adc
sbb
pushf
je
stc
cld
xchg
mov
arpl
repnz
mul
cmpsb
bound
clc
sub
in
inc
push
clc
mov
leave
jmp
mov
push
out
sar
jl
sbb
dec
in
pop
pop
aad
mov
or
and
lock
pop
adc
mov
jns,pt
mov
push
mov
cmp
mov
lcall
xchg
xchg
dec
dec
jl
je
pop
ficomps
pushf
aam
jg
cmp
sub
xchg
movb
and
les
andb
mov
sbb
repnz
push
sbb
or
xchg
push
fiaddl
lret
push
bound
sub
push
sahf
inc
mov
jbe
dec
dec
xchg
adcl
xchg
test
loope
rorl
sub
cmp
idivl
sbb
insb
or
sarb
push
call
jae
in
int
inc
lret
aad
insl
das
jp
lock
pop
cmp
sbb
movsb
cmp
sub
out
xor
and
inc
sbb
imul
les
cmp
mov
mov
fwait
leave
pop
pop
dec
push
pop
sahf
ret
ljmp
fmuls
in
mov
mov
cwtl
xchg
mov
push
xchg
inc
cmp
hlt
mov
adc
sbb
addb
je
or
add
mov
xchg
xor
mov
or
cs
mov
orb
adc
and
inc
and
sbb
add
aas
sti
sbb
adc
mov
and
mov
mov
or
in
or
adc
cmpsb
lds
sbb
shr
pushf
fcomi
sub
in
pop
and
ds
mov
loop
fsubl
bound
mov
addr16
mov
push
adc
test
lea
sbb
mov
xchg
mov
pushf
out
or
pop
lds
push
sbb
mov
push
popa
popa
mov
les
or
shl
repnz
push
mov
addr16
xor
in
xchg
in
pushl
push
dec
jge
clc
push
out
xlat
lods
push
ret
xchg
loop
es
aas
cld
stos
shl
mov
lret
aad
pop
push
je
loopne
dec
inc
es
mov
dec
xor
repnz
ds
test
dec
pop
test
push
jmp
pusha
fucomi
pop
sbb
fisttpl
bound
xor
in
dec
jno
add
mov
in
sub
repnz
inc
cmp
fwait
shll
push
int3
inc
adc
sti
mov
push
lods
push
dec
jbe
lods
mov
pop
test
push
xchg
jae
rcll
mov
mov
les
daa
adc
mov
sbb
aas
mull
inc
inc
inc
ficompl
call
aam
test
jo
icebp
xor
xchg
pop
ds
mov
sbb
xchg
int3
loop
xlat
sbb
and
jle
sti
xchg
adc
int3
inc
cld
mov
cmpsb
jne
adc
insl
ja
bound
sbb
jmp
mov
push
pop
test
es
out
lret
dec
setne
es
in
leave
dec
fcoms
and
mov
push
repz
lods
cld
loopne
ja
dec
xor
adc
add
add
out
xchg
pop
rcrb
arpl
je
popa
dec
push
push
stc
cli
aaa
fwait
fwait
imul
ds
movsb
mov
ret
sub
mov
arpl
pop
call
adc
jl
cwtl
ds
in
adc
mov
test
fcomps
jne
mov
popf
inc
mov
pop
stos
stos
mov
xchg
mov
push
cli
sar
xchg
aad
iret
sub
arpl
imull
cwtl
lods
add
cmp
dec
push
in
shrl
stos
shrb
pop
mov
aad
out
jb
sub
cmp
andl
paddw
pop
sbb
inc
shrb
and
push
rol
jg
pusha
xchg
push
cltd
or
aaa
jne
aad
rorl
or
jmp
subb
sar
pop
xchg
cmpsl
jl
push
rcll
test
insl
mov
fdivl
data16
test
mov
add
loopne
and
les
ja
movsb
shrl
sbb
imul
dec
mov
mov
inc
out
lock
fidivrl
cwtl
mov
fcoms
fs
out
lds
inc
rorb
jge
sarb
lds
jns
pop
pop
repnz
add
popa
lret
inc
ds
daa
dec
pop
ret
cli
xchg
stos
inc
xchg
lcall
sbb
pop
push
fistpl
je
cld
add
xor
in
xchg
lds
xor
fnstsw
inc
cwtl
pop
repz
cmp
ljmp
test
pop
out
push
fbld
sti
pop
aam
mov
adc
mov
or
and
outsl
xor
xorl
ljmp
pop
jnp
cmpl
inc
iret
and
sub
jmp
mov
mov
ds
add
testb
xchg
fildl
add
adc
cmp
into
push
dec
das
insl
cmp
mov
sbb
cwtl
jne
jg
and
ds
lret
mov
jmp
push
sbb
pop
sub
sbb
aas
push
imul
ljmp
scas
inc
lods
jb
fdivl
jge
insb
scas
or
les
mov
lahf
stc
sub
xchg
bound
push
aad
movsb
cld
out
mov
or
in
insl
push
inc
shlb
xchg
stc
movsb
out
cmpsl
and
int3
xor
push
stos
decb
call
pusha
rcrl
lea
mov
jg
imul
nop
js
mov
imul
insb
ret
xchg
jbe
ljmp
icebp
repz
sbb
imul
imul
stos
xor
jge
lret
mov
xchg
adc
adc
stc
xchg
aad
add
and
cwtl
adc
pop
and
push
shr
push
enter
lds
movntps
sbb
push
jmp
adc
mov
leave
mov
jae
lds
shld
nop
ja
mov
jne,pn
mov
dec
mov
sub
xorl
mov
sti
aad
imul
jae
pop
jecxz
inc
xchg
pop
pop
and
cmp
cmp
xchg
dec
stos
push
in
and
lahf
ds
jl
sbb
cmpl
icebp
hlt
push
lea
mov
jns
sbb
inc
mov
sbb
pop
push
inc
pop
fildll
mov
int3
rclb
sets
aam
pop
inc
insb
add
fstpl
mov
pushf
loop
stc
jmp
xor
jb
pop
aam
shrb
push
into
nop
sub
dec
pop
dec
into
sub
adc
sbb
push
xlat
ds
sub
sub
stos
push
ret
xchg
stc
cmp
fwait
or
ljmp
and
stos
dec
pop
jmp
jmp
lahf
gs
rclb
sti
aam
out
mov
shrl
sbb
and
sbb
lret
out
cmpsl
xchg
lret
divl
adc
and
repnz
or
imul
shll
sbb
inc
pop
aad
dec
pop
std
daa
mov
inc
mov
sahf
fildl
or
fiadds
and
cmp
sbb
out
hlt
add
add
ret
inc
lea
pop
sub
in
stos
hlt
xchg
fucomip
sub
jno
or
into
push
lret
sub
loopne
lret
xor
cltd
jmp
fbstp
bound
jne
xchg
loop
int
mov
in
negl
push
dec
fnsave
leave
test
mov
movsb
cmp
add
fldenv
mov
add
ja
push
call
test
gs
pop
sbb
inc
or
jmp
nop
add
jg
or
ss
sbb
dec
fldt
and
call
sub
sbb
and
je
jecxz
jecxz
cwtl
pop
aam
push
push
fwait
sahf
hlt
jp
sub
pop
and
aam
call
cmp
aad
lret
into
or
xchg
int3
sbb
jmp
xor
fwait
adc
test
movsb
leave
imul
xchg
insl
fadd
lret
aam
pop
inc
adc
mov
xchg
pop
mov
add
shll
or
loopne
add
aaa
lret
dec
ficompl
hlt
push
mov
inc
cmp
hlt
mov
bound
inc
stc
mov
jbe
xlat
enter
orps
mov
push
push
lock
out
jb
mov
cmpb
push
and
xor
rclb
in
pop
in
cmp
movl
mov
in
iret
clc
test
mov
jecxz
insb
out
xchg
jbe
clc
cmp
cmpsb
push
shrb
pushf
fcoms
dec
mov
clc
mov
adc
mov
orb
lods
pop
test
repz
mov
jae
pop
jb
lea
cmpsl
dec
scas
inc
or
jecxz
sar
clc
enter
cltd
sbb
fwait
jle
fwait
cld
movsl
lea
call
inc
ss
pop
xchg
jbe
fs
jecxz
mov
lret
and
mov
mov
jg
mov
xor
or
xor
ficompl
out
in
repnz
add
int3
jo
or
call
insl
pop
push
in
cwtl
dec
sub
nop
aam
nop
loop
mov
or
fnsave
icebp
mov
adcb
push
sbb
xor
inc
ds
loope
out
fbld
mov
push
jecxz
pop
mov
insl
xchg
nop
pop
or
scas
cwtl
negl
out
lret
sbb
mov
addb
jmp
push
cmp
pop
xor
dec
mov
and
in
xchg
shlb
fs
ljmp
jb
imul
cwtl
pop
lods
arpl
mov
sbb
push
inc
push
pop
js
sarl
jmp
and
inc
xchg
in
je
cmp
pop
enter
arpl
or
dec
mov
lret
dec
mov
sar
add
mov
sbb
cs
aam
pop
test
jp
mov
xor
mov
call
daa
sub
add
inc
pop
popa
pop
mov
lret
test
and
rcl
jp
mov
insb
mov
mov
mov
ret
cltd
lea
sub
mov
mov
bound
mov
push
les
or
test
mov
push
xchg
stos
loopne
bound
cmp
imul
push
push
push
icebp
ret
arpl
inc
mov
outsb
je
popf
dec
pop
jge
andl
pop
pop
into
xchg
inc
fpatan
insl
jbe
fsub
mov
testl
dec
lret
cmp
push
mov
nop
mov
call
add
add
loop
and
and
inc
lret
lods
stos
inc
bound
sbbl
sarb
scas
jno
sbb
sbb
sub
xchg
pop
call
xor
or
push
push
cmp
mov
test
inc
mov
outsb
jle
adc
in
cwtl
insb
ror
es
scas
pop
inc
repz
pop
addw
push
cwtl
ret
es
outsb
btc
sub
clc
jns
mov
mov
lds
lock
shll
jne
sub
adc
lock
mov
mov
rol
xchg
cltd
cmpsb
mov
loope
or
inc
fucomi
xchg
daa
mov
int
nop
fmuls
xor
adc
inc
xor
gs
scas
fldcw
push
rcl
ret
sub
add
repz
or
sti
stos
jecxz
mov
cli
mov
cs
repz
or
or
push
mov
jle
xchg
in
sub
imulb
pop
sub
iret
lock
in
mov
scas
jl
in
sti
lret
cltd
adc
fs
filds
xchg
andb
inc
mov
lret
adc
rcrl
cmp
and
ja
imul
mov
push
pop
in
scas
mov
into
lcall
jb
stos
mov
stos
imul
ljmp
cs
mov
rcll
and
jnp
movb
sub
out
or
add
fucomp
xlat
cmp
xchg
dec
sbb
sbb
cmp
leave
ficoms
and
stos
call
jmp
test
lret
dec
adc
jle
fs
aas
call
cwtl
pop
push
push
imul
inc
mov
jae
or
lcall
sub
adc
jns
cld
cmp
mov
pop
cmpb
lods
out
add
jl
dec
sub
xor
hlt
add
cli
adc
dec
int
push
sub
dec
popf
mov
mov
movsl
add
xchg
adc
lret
out
gs
daa
sub
in
test
fnstcw
daa
mov
data16
pop
push
jne
adc
rorl
pop
mov
loopne
push
ror
cmp
or
cld
movsl
lods
sahf
bnd
mov
push
pop
jge
add
add
mov
int3
aaa
mov
lret
mov
lret
movsb
nop
inc
mov
addr16
mov
rcrb
test
sub
enter
inc
inc
int
push
dec
repnz
scas
lcall
cmp
iret
addr16
inc
mov
shl
xchg
mov
loopne
push
ret
add
mov
divl
sbb
insb
mov
add
sub
or
ss
clc
inc
sbb
dec
jge
mov
mov
sbb
jo
jge
xchg
adc
mov
add
out
xchg
into
aam
ds
push
add
pop
cmpsb
lret
mov
jns
call
cmp
pop
leave
or
movsb
lret
lret
out
roll
sub
pop
and
leave
jne
loopne
jg
movsl
xor
jp
adc
sbb
mov
es
bound
cmpsl
xor
pop
mov
loopne
xor
push
and
jb
sub
cmp
dec
jl
aaa
fs
ss
sbb
cmp
fisttps
es
mov
inc
and
or
mov
mul
adc
jg
mov
inc
in
call
icebp
jns
cmovbe
or
add
xlat
jmpw
stc
not
les
sub
les
mov
loopne
loop
xor
ret
jle
shll
cwtl
shlb
push
inc
sahf
call
jp
xor
insb
fmuls
adc
repnz
jb
mov
sub
xchg
jbe
lret
adc
sbb
inc
dec
jp
ficoml
inc
sti
cmp
sub
sarl
xlat
fdivrl
into
rorl
idivl
xor
add
fimuls
adc
adc
lds
lret
cmpsl
sbb
adc
lret
or
fsubrs
pop
sarb
add
lahf
mov
adc
xorl
xor
xor
repnz
sti
adc
aad
dec
in
jg
jae
out
cmp
jb
repz
mov
sub
sbb
pushf
ret
imul
dec
ja
xchg
arpl
inc
cmp
or
sti
fmul
nop
stc
cmp
xchg
mov
lcall
jns
jb
add
xchg
movsl
push
in
push
push
ljmp
mov
pushl
vpshlb
ret
and
popw
mov
mov
or
push
mov
fistpll
fistl
nop
shl
fsubr
cwtl
mov
lret
xchg
pop
ret
in
adc
xchg
stos
test
inc
add
xchg
xchg
fwait
lahf
icebp
sub
lock
imul
mov
cmp
push
mov
gs
add
rcl
enter
push
cmp
icebp
mov
add
cwtl
lret
add
add
pop
push
dec
mov
lret
xor
in
dec
push
clc
sbb
push
jne
aad
imul
stos
mov
notl
xor
adc
adc
cmpsb
jle
aad
leave
lds
js
stos
push
inc
xchg
ret
decb
cltd
stos
arpl
out
shrb
popa
jg
outsb
fisubrs
pop
icebp
adcb
and
adc
push
add
mov
shl
sbb
push
cmc
insb
stc
push
inc
mov
fsub
aam
test
cs
movb
das
sar
leave
in
out
mov
cltd
pop
outsl
dec
pop
fs
add
insl
rorb
adc
data16
mov
out
iret
out
fmull
mov
mov
gs
ror
and
cmp
mov
pop
arpl
or
in
mov
insl
lds
cmp
pop
sarb
pop
mov
adc
nop
and
adc
mov
imul
jge
ljmp
lret
dec
sbb
imull
xchg
mov
dec
mov
sbb
jmp
les
frstor
mov
lea
mov
push
in
pop
adc
mov
mov
mov
test
and
or
mov
jae
or
rclb
add
jbe
adc
push
jnp
pop
pop
movsb
cmp
xor
into
sarb
shlb
mov
and
add
ret
mov
movsl
cmp
cmp
or
inc
insl
repz
cmp
dec
sbb
data16
jo
or
mov
hlt
clc
mov
js
mov
inc
jns
pop
iret
xchg
xor
adc
shrl
jbe
mov
stos
xchg
sub
sbb
adc
hlt
mov
fistpll
stc
cmpsb
flds
or
jmp
dec
jle
and
fsubrs
dec
mov
xor
mov
or
aam
inc
xlat
pop
rcr
clc
mov
popf
or
out
or
push
int3
notb
roll
xor
lahf
or
mov
push
lcall
leave
int3
stos
subl
jle
mov
lods
inc
and
in
aam
mov
popf
mov
in
jo
bound
mov
sub
imul
sbbb
outsb
lahf
not
inc
jne
sub
call
mov
setnp
pusha
pop
imul
dec
outsb
scas
jns
xchg
ss
inc
inc
stc
inc
cmp
inc
sbb
popa
jp
lock
cli
jg
jo
xchg
dec
cli
cs
iret
inc
mull
jmp
push
mov
mov
xchg
out
cs
dec
push
push
inc
lcall
push
rcrl
or
jno
paddusb
sub
pop
aaa
jge
xchg
and
lds
lcall
cmp
mov
scas
mov
cwtl
jnp
pop
sti
add
jns
lds
pop
cmp
call
adc
insl
inc
lcall
sbb
dec
scas
xorl
cmp
cmp
pop
test
inc
inc
cltd
jae
xor
push
repnz
pop
out
mov
mov
imul
sbb
jnp
mov
les
movsb
mov
cmp
mov
movsb
xchg
insb
orl
insb
jbe
pop
dec
adc
jecxz
ja
fists
sub
pop
pop
and
ret
inc
pop
jmp
gs
mov
rcr
adc
push
push
cmp
pop
dec
mov
pop
adc
ljmp
fcomps
ss
cmp
icebp
sub
xchg
sbb
enter
dec
lds
and
outsb
daa
out
lods
xchg
shlb
jge
test
mov
cmp
bound
leave
inc
cmpb
xor
and
and
pushf
jp
rcrl
in
dec
xor
jns
bound
loop,pn
mov
mov
sub
xlat
adc
add
dec
mov
ljmp
jno
or
sub
jne
and
and
out
cmc
outsb
and
std
pop
or
jmp
inc
jmp
sbb
dec
aad
in
xchg
pop
jmp
andl
rcrl
pusha
cld
ucomiss
hlt
push
dec
cmp
xor
int3
imul
sub
movsl
fs
out
or
into
lea
xor
mov
cwtl
cmp
jmp
mov
pop
jge
pop
push
adc
shll
shlb
cmovb
pop
repnz
mov
cmpsb
mov
jb
or
sub
stos
sbbl
arpl
adc
loopne,pn
call
dec
fildl
fldt
cwtl
in
jnp
aad
sbb
adc
inc
inc
mov
scas
cld
mov
xchg
movsl
cwtl
icebp
sarb
or
cmp
push
mov
jl
cmp
mov
jl
ret
cmp
cmp
inc
imul
sub
or
pusha
inc
jle
scas
loopne
movsl
fimuls
or
add
test
mov
outsl
inc
jle
xor
outsb
jge
in
mov
daa
loope
xor
xchg
jno
jg
mov
call
xchg
lahf
out
sbb
fwait
xor
je
mov
insb
xor
push
fldt
jl
push
aas
xchg
jl
test
pop
clc
pop
pop
movsl
fdivrp
add
or
mov
or
push
aaa
mov
out
or
subb
icebp
jb
jno
adc
sub
adc
adc
sbb
mov
jno
add
adc
lretw
cmpb
dec
cmp
idiv
or
dec
push
mov
int
pop
test
fsubrs
xor
mov
std
jle
pmullw
add
cltd
into
ret
out
aad
cmp
push
les
out
inc
sub
cli
inc
call
mov
aam
test
add
push
xor
adc
insb
call
int3
push
lods
pop
out
push
fisubl
or
xor
es
push
add
lret
aaa
outsl
pop
roll
add
clc
mov
icebp
pop
lds
imul
mov
popa
and
cmp
mov
mov
inc
push
into
lcall
pushf
rcrl
ds
pop
lods
add
xchg
dec
imul
aas
pop
push
or
push
or
in
dec
dec
mov
mov
jb
sbb
xor
or
lds
pop
jae
inc
rcrl
fistpll
rclb
mov
hlt
cmp
jmp
nop
dec
fstpt
cs
pushf
mov
dec
cld
adc
cmp
mov
fldcw
lods
push
dec
adc
sbb
or
inc
mov
sub
adc
lea
cmp
inc
js
inc
add
mov
sti
xchg
aam
cmc
xlat
subl
or
mov
mov
fcmovnb
mov
dec
movsl
xor
ficoml
andb
js
fstpl
sbb
repz
loopne
adc
fldenv
fcmovu
movl
pop
data16
fcmovne
arpl
sbb
and
add
or
lcall
fdiv
lock
mov
ss
das
jb
push
rorl
push
and
cmp
aad
cmpsl
pop
daa
ljmp
ss
xchg
mov
outsb
xchg
scas
fbld
div
adc
fcmovnb
lret
jl
sub
and
adcl
rcll
inc
push
cmpsl
mov
fbstp
ja
jno
mov
out
dec
je
dec
aaa
ret
out
test
jnp
push
add
shll
mov
cmpsb
imul
icebp
xchg
xor
jecxz
subb
or
xchg
rcrb
stc
ds
scas
add
pop
cltd
lcall
inc
xchg
out
jne
xor
call
inc
pop
insl
mov
mov
jne
ret
mov
jl
xor
nop
inc
jae
mov
leave
mov
fs
pop
mov
xor
pop
jo
fnstenv
nop
pop
cltd
lahf
inc
outsl
lock
movsl
fbld
pop
inc
jb
cmc
push
dec
out
xchg
fcoms
out
adcl
lcall
push
loop
sbb
outsl
sub
test
in
pop
or
xchg
mov
loopne
xchg
dec
jle
xchg
aas
mov
ds
daa
adc
repnz
push
adc
inc
subb
push
push
rol
fs
cli
cmp
shll
inc
mov
sbb
dec
xchg
loopne
mov
mov
ror
das
imulb
cmp
clc
add
mov
sbb
sbb
cmp
cmp
mov
je
adc
rcr
pop
and
xchg
mov
mov
fstpt
inc
or
sbb
push
adc
lods
dec
push
jne
or
addb
and
mov
inc
shll
mov
dec
int
cmp
cmp
sahf
mov
push
imul
pusha
sbb
loop
cmp
and
pop
lods
mov
mov
adc
mov
ss
out
push
cltd
push
ret
fnstsw
inc
push
sbb
mov
iret
outsl
je
and
xchg
jne
sub
adc
inc
sti
or
add
push
stos
jne
iret
andl
push
mov
adc
push
cli
lea
hlt
and
push
pop
dec
add
repnz
test
xor
mov
or
cmp
sbb
jmp
push
ja
imul
popa
test
mov
ret
bound
notl
mov
jmp
lods
pop
in
mov
add
push
ds
out
cmp
ljmp
inc
jge
fidivs
add
pop
or
mov
outsl
inc
popa
stos
xor
insl
pop
ds
fistl
call
in
in
mov
aam
mov
mov
repnz
fistl
push
cltd
stos
mov
pusha
imul
neg
aaa
cmpsl
mov
fsts
repnz
cli
adc
push
and
sub
and
mov
push
jl
jge
ret
sub
jns
mov
cwtl
lret
bound
movsl
sub
icebp
mov
les
mov
dec
cmp
fs
iret
lret
ds
lret
lea
loopne
cmc
cmp
pop
adc
mov
pop
xchg
jne
adc
stos
push
add
xor
enter
xor
cmp
lods
repz
lods
jae
jge
out
lahf
cmp
adc
or
xchg
mov
and
push
imul
or
jge
and
and
xchg
aas
sahf
inc
mov
data16
xchg
fs
jae
fwait
sbb
es
cmp
popf
arpl
cli
jp,pn
imul
xor
pop
popf
aas
xchg
sbb
mov
sar
mov
add
inc
jge
std
subb
jb
xor
data16
cmp
pop
pop
adc
pop
hlt
or
xchg
xor
je,pn
int3
or
push
repnz
rcr
xchg
sbb
xor
mov
lret
push
loope
loope
in
iret
or
loopne
daa
mov
mov
pop
sbb
mov
mov
cmpsl
xchg
mov
add
arpl
or
cs
shlb
cmpsb
mov
pusha
jmp
fs
jecxz
mov
fisttpll
cmc
test
inc
call
dec
dec
je
mov
pusha
mull
push
out
fisttpl
cltd
mov
outsb
insl
out
jns
push
adc
jne
mov
mov
repz
or
xor
sub
mov
insl
fs
xor
mov
call
push
inc
mov
ret
mov
aaa
nop
xor
fldln2
in
int3
bound
sub
sbb
clc
fs
mov
fwait
sub
out
lea
scas
xlat
ljmp
add
aas
daa
leave
fimull
cs
fs
mov
xor
sahf
insl
sbb
addr16
imul
mov
push
xlat
cmp
cld
rcl
dec
and
ds
fcmovne
add
add
xchg
mov
out
push
cmp
sub
popa
loopne
jle
loop
sub
out
or
int
or
inc
xchg
mov
nop
xchg
and
jbe
sbb
in
xchg
xchg
scas
repnz
xor
push
das
arpl
cmp
imul
aad
fisubs
rclb
aam
pop
iret
add
fdivl
inc
je
sbb
push
sbb
test
in
xor
pop
mov
test
popa
es
imul
fsubrl
pop
xor
cmp
or
sub
leave
jl
jno
out
imul
inc
adc
notl
ja
dec
out
or
in
inc
rolb
mov
or
cmp
pop
cmpsb
lret
and
pop
and
lret
dec
cwtl
dec
loopne
jmp
inc
xor
inc
leave
rolb
dec
dec
mov
dec
data16
sub
inc
jg
inc
jl
xchg
sbb
jge
mov
inc
mov
or
lcall
mov
xchg
pop
out
fnsave
pop
addr16
sbb
out
jecxz
push
in
pusha
xlat
jg
and
mov
stos
push
fdivrs
adc
push
adc
mov
insb
in
fcoml
xor
cld
cli
lret
call
or
sti
ret
test
sti
mov
jp
leave
push
das
mov
push
xchg
xchg
or
lahf
cld
rcrl
mov
fs
and
sub
sub
cmpsb
xchg
insl
add
dec
sti
std
rclb
sbb
loop
stc
fucomip
sahf
dec
pop
mov
stc
xor
or
pop
mov
sub
sub
in
xor
adc
clc
pusha
xor
aad
pop
add
daa
jae
and
popf
push
and
sti
mov
mov
inc
pop
sbb
imul
and
movsb
or
jbe
adc
cltd
jle
sarl
pusha
mov
or
add
out
mov
inc
mov
fldenv
fildll
dec
shrb
mov
mov
and
or
shrl
cmc
cltd
pop
repnz
sub
in
dec
call
dec
aaa
dec
inc
or
inc
vpsubusb
daa
das
clc
dec
lret
ret
xchg
pusha
loope
or
inc
dec
mov
int3
and
cmpsb
adc
mov
out
cmp
shrl
out
mov
xor
inc
scas
adc
inc
push
sti
cmp
int3
gs
adc
mov
adc
addr16
sbb
int
or
into
pop
and
mov
dec
jbe
jbe
push
inc
pop
test
jg
adc
lea
imul
jno
call
sub
mov
jecxz
loope
fs
and
roll
test
pop
sbb
dec
jb
lahf
gs
mov
scas
xchg
pop
shl
pushf
sub
shll
xchg
lcall
and
push
mov
fiadds
inc
hlt
dec
jne
fimull
pop
outsl
addr16
mov
cltd
aas
lret
mov
xchg
sub
add
add
cld
cld
push
pop
mov
lods
inc
jmp
imul
js
and
fbstp
flds
notl
mov
cmp
rolb
xchg
jb
sarl
loop
mov
shlb
push
sbb
mov
daa
int
lret
adc
in
inc
repnz
ljmp
dec
mov
push
push
xchg
mov
cwtl
loopne
mov
and
lret
insl
andl
push
enter
mov
lcall
out
lea
pusha
inc
xchg
rorb
outsl
pusha
mov
scas
or
mov
ds
sti
movsl
sbb
and
mov
pop
jmp
xor
mov
pop
mov
jp
outsb
mov
repz
insl
stc
or
add
pop
push
fisttps
add
mov
out
lods
js
stos
jle
es
insb
inc
fsubrl
mov
std
imulb
adc
mov
sub
hlt
pop
mov
or
loope
fdivr
sbb
push
lea
mov
mov
pop
xchg
xlat
xchg
xchg
mov
sbb
add
xlat
pop
pop
fsubs
sbb
stc
jle
push
inc
scas
movsb
das
movsb
dec
sbb
pushl
sbb
rolb
stos
sub
in
push
xchg
and
lock
pop
sbb
or
pusha
popa
add
imul
jb
push
push
movsb
call
insl
pop
es
icebp
test
jmp
cmp
xor
call
movsl
punpckhqdq
lock
test
adc
xor
rcl
bound
xor
sar
jns
movsb
cmp
ret
ds
ljmp
outsb
jle
fstl
pop
cltd
bound
push
pop
add
leave
out
cmp
or
mov
lcall
leave
pop
imul
call
mov
addb
lret
pop
sbb
or
inc
pop
xor
push
rcrl
cmc
xor
leave
lret
imul
inc
fmuls
jg
adc
xor
jne
test
lahf
flds
dec
movl
testb
xor
xchg
inc
push
subb
mov
jl
or
sbb
mov
xchg
inc
jae
mov
or
sahf
push
repnz
out
lods
inc
pop
cmp
popf
xchg
cmc
jb
mov
mov
je
in
sbb
jle
cmc
rclb
int
push
sub
mov
cmp
push
dec
mov
std
xchg
lds
xor
lods
dec
inc
xchg
stos
and
orw
hlt
push
add
icebp
mov
mov
mov
add
test
inc
pop
filds
inc
xor
call
push
jg
mov
scas
aam
cld
fidivs
int
mov
mov
mov
cld
icebp
mov
sbb
xor
mov
sbb
insb
stos
jmp
add
repz
js
std
shll
push
iret
jle
fucomip
and
push
nop
insb
int
dec
adc
jbe
out
or
pop
sbb
data16
pop
shrb
push
lret
dec
insl
push
mov
or
jl
sahf
test
mov
pushf
fldenv
cwtl
testl
sub
push
sbb
pop
push
adc
mov
inc
rcr
dec
adc
pop
push
jl
and
cmp
stos
pop
cmpsb
add
or
jecxz
popf
imul
or
out
loop
sub
arpl
in
fucom
lods
in
std
or
fmul
jno
std
push
mov
aam
inc
cmpsb
faddl
mov
lret
cwtl
or
mov
lods
push
shll
test
leave
sub
push
das
mov
sub
add
test
sub
rcll
jnp
pushf
icebp
call
cmpsb
les
ficoml
push
icebp
pushf
imul
add
repz
js
sti
mov
xor
inc
pop
or
aas
dec
inc
fimuls
sbb
pop
xor
rorl
dec
cld
mov
cmp
push
sbb
mov
ljmp
clc
sbb
gs
cmp
pop
sahf
and
loop
mov
and
mov
leave
lods
adc
cld
clc
jecxz
je
test
push
xchg
push
lds
and
pop
add
xor
adc
jp
movsb
je
push
and
and
dec
aaa
ficompl
add
dec
pop
push
push
cmp
test
subb
adc
repz
dec
push
push
aam
lock
cmp
mov
arpl
inc
adcl
jno
pusha
std
ss
fmuls
in
push
lahf
test
add
in
cmp
jns
ret
jns
movsb
push
mov
dec
loopne
cltd
in
mov
fstp
and
hlt
loope
movsb
push
ja
ss
xchg
fs
in
aas
repnz
xchg
pushf
cmc
iret
jl
out
ret
push
es
mov
push
cmp
dec
sbb
loop
jne
and
shlb
mov
sbb
xchg
inc
mov
dec
adc
inc
add
sub
mov
mov
test
lahf
ja
cmp
xchg
mulb
cwtl
push
bound
push
xor
mov
sahf
mov
jge
mov
lds
popa
orb
stc
cmpsb
adc
jno
sub
jmp
xchg
cld
int3
lret
jae
xchg
push
add
repz
je
nop
sbb
out
sub
sub
outsl
test
push
lret
shrb
andl
pop
aam
loope
pop
jbe
ljmp
repz
movsb
sub
les
subb
xor
iret
sbb
decb
sbb
scas
adc
push
shlb
mov
mov
pop
adc
out
aam
inc
xchg
push
stc
mov
insl
mov
xchg
mov
pop
pop
idivb
and
push
sub
pop
outsl
repz
push
repz
leave
pop
pop
inc
fwait
pop
rorb
jo
jg
add
call
adc
jmp
outsl
mov
cmp
push
xor
call
fdivr
xor
lcall
lret
mov
mov
fnstcw
out
inc
add
leave
cmp
fisttpl
sbbl
daa
pop
adcl
insb
repz
pop
nop
jge
hlt
or
std
cmp
inc
jae
sbb
add
fsts
imul
test
cmp
xchg
xor
add
jp
jns
mov
push
dec
popf
mov
jnp
out
and
jecxz
pop
pop
xchg
mov
adc
out
es
xchg
push
popf
int
push
ss
pop
scas
sub
jo
lea
inc
inc
out
lret
push
nop
shrd
xchg
pop
jae
dec
fcom
adc
mov
fiaddl
ret
mov
jecxz
or
cmp
or
sub
mov
lret
inc
push
popa
jno
jge
adc
lret
hlt
and
push
cli
daa
xor
test
icebp
sbb
scas
sbb
sub
dec
push
js
mov
in
xor
push
fbstp
mov
add
dec
or
xor
cli
mov
in
stos
cltd
xor
out
es
into
sub
or
adc
push
test
sbb
testb
rcrl
mov
sub
and
xor
sbbb
icebp
stos
push
in
push
lret
mov
pusha
sahf
push
clc
sbb
sbb
add
xor
mov
mov
mov
cmp
inc
scas
dec
sti
cmpsb
push
aad
mov
cmpl
iret
sbb
sub
mov
xor
sub
sub
popa
mov
mov
pmaxub
jns
pop
cmpsl
shll
iret
lret
mov
call
daa
fistpll
xchg
movsl
sti
sub
mov
sbb
xchg
decl
inc
inc
mov
mov
dec
sub
cli
jg
aas
test
cmpsl
aam
inc
outsb
subb
sub
mov
push
mov
pop
pop
xchg
xchg
pusha
lcall
fadds
arpl
add
sbb
out
sub
inc
imul
pop
or
rcl
dec
adc
cmpsb
arpl
lret
cmpsl
in
or
mov
cmp
addr16
int
data16
add
ss
xchg
inc
ret
fcompl
sbb
pop
jb
shll
dec
and
div
gs
in
out
and
lret
xor
jo
xchg
adc
xchg
mov
pusha
daa
cli
inc
call
test
mov
dec
rcrb
xor
mov
mov
sub
dec
ret
nop
push
negl
outsl
and
cmp
dec
sub
imull
mov
mov
int
add
jbe
aad
sub
arpl
repz
cwtl
sub
lcall
xor
and
fldl
jecxz
lock
mov
mov
cmpsb
dec
aaa
adc
inc
or
xor
xchg
loopne
sbbl
inc
repnz
stc
xchg
pop
in
xor
addr16
lock
mov
sub
sbb
sub
addr16
shl
lock
ret
mov
xchg
xor
mov
mov
decb
xor
jecxz
add
rclb
std
cli
xchg
cmpb
sub
iret
int3
add
xor
int3
mov
and
loope
fdiv
xlat
lds
fistpl
fisubrl
fisubrl
rep
adc
inc
aas
jp
test
shlb
sub
push
inc
add
sub
int3
jg
jl
cmp
insb
cmp
sti
push
xchg
leave
cmp
sub
lods
mov
mov
or
rcrb
adc
sub
cmp
adc
inc
call
xchg
adc
sub
test
shl
jo
hlt
push
stc
jg
adc
sub
cmp
call
fcomps
push
insl
ss
push
jae
shll
cmc
inc
insl
int
outsl
mov
xchg
mov
arpl
mov
dec
mov
jno
cs
nop
faddp
pop
sbb
jle
jo
push
sarl
lret
rorl
les
sbb
jne
adc
les
mov
cmp
add
pop
xchg
sbb
dec
sub
push
test
aas
xchg
aas
test
das
mov
test
test
shlb
adc
pop
dec
fstpl
ret
sti
xchg
mov
hlt
bound
pop
ja
lcall
mov
ret
mov
shlb
mov
fcmovnb
arpl
div
or
dec
inc
lcall
mov
pop
in
xchg
pop
sub
addr16
repnz
push
mov
loop
js
fwait
jno
dec
dec
sub
lret
pop
les
push
int
and
sbb
repz
cli
jmp
sahf
dec
xor
aaa
sbb
jle
and
pusha
sbb
mov
or
sahf
fiadds
mov
jnp
jp
shrb
in
scas
data16
and
stc
fdivrs
push
fstl
std
mov
xchg
scas
sbb
das
mov
adc
mov
and
cmpsl
cmp
vxorpd
mov
andb
cmpsl
and
jmp
xor
pop
adc
enter
mov
std
cmp
sbbb
ds
pop
test
or
dec
adc
clc
lods
fsubl
ja
out
cmp
pop
xor
pop
lds
fcmovb
dec
arpl
mov
cmpsl
mov
hlt
nop
xlat
mov
lret
test
pop
aam
add
mov
and
cld
jecxz
cltd
loop
insl
push
jl
pusha
insl
dec
popa
imul
xchg
xor
pop
pop
push
xchg
pop
outsl
out
push
pusha
call
pop
sub
add
test
shl
outsl
push
sti
inc
pop
sub
inc
lcall
or
xor
cmp
sub
adc
fstpt
sub
ljmp
mov
cmc
pushf
or
testl
sub
xor
rcrb
lods
pop
xor
in
adc
add
push
int
imul
divb
imul
in
lods
mov
adc
mov
outsl
cmp
jae
xchg
mov
pop
lock
iret
jbe
cmpsb
stos
lods
lahf
flds
stos
aad
xchg
mov
inc
ljmp
int
push
adc
sbb
mov
ret
repnz
ljmp
mov
por
adc
mov
fdivr
pop
xor
add
xchg
arpl
aas
push
loopne
jno
mov
outsl
push
pop
jge
clc
imul
jno
xlat
add
push
push
ljmp
mov
inc
fwait
mov
mov
cmp
fistpll
cmc
dec
jg
dec
inc
pop
sbb
movsl
xor
movsb
and
cmp
test
push
cmpsl
push
pop
orl
stos
lods
fsubl
sbb
cmp
dec
das
xchg
xchg
movsl
imull
inc
dec
or
pop
ja
out
fildl
es
popa
push
sub
adc
sbb
mov
push
dec
xchg
mov
repz
add
push
pop
das
outsb
mov
xor
pop
les
xchg
scas
fs
pop
mov
pop
xor
pop
adc
xchg
nop
and
iret
loope
imul
dec
std
or
jl
imul
cld
mov
rcrl
mov
push
jp
and
subl
mov
dec
mov
mov
insb
inc
dec
lock
faddp
in
rclb
inc
mov
mov
and
mov
pop
stc
fisttpll
cld
cwtl
sbb
test
jl
cs
push
outsb
stc
sub
or
jbe
ja
mov
cmp
push
pusha
mov
and
xlat
mov
ret
xor
mov
sub
xchg
popf
iret
data16
mov
xchg
adc
fsubl
lods
jne
dec
push
scas
fstpl
js
inc
sub
xor
xchg
ficompl
pushf
add
pop
enter
movsl
repnz
pusha
out
enter
aaa
mov
gs
ret
dec
nop
jnp
jbe
rol
fnop
iret
loope
mov
call
push
stos
pushf
ret
push
lea
dec
xchg
negb
jge
daa
leave
nop
pop
jmp
scas
loop
sbb
jns
xor
xchg
std
sub
aam
clc
and
jmp
inc
sbb
jp
cs
stos
sahf
and
out
xor
xor
imul
sub
dec
jecxz
stos
xchg
scas
icebp
mov
xchg
jnp
dec
mov
bnd
mov
dec
add
sbb
int
push
ljmp
mov
sub
aam
addb
jno
pop
rolb
out
inc
call
sbb
mov
mov
sahf
cmpsb
inc
push
push
pop
pop
inc
ja
decb
mov
scas
iret
mov
and
std
addr16
aad
adc
push
aaa
adc
xchg
xchg
mov
push
dec
hlt
xchg
scas
or
out
push
pop
pop
cmp
cmp
pop
mov
push
lock
xchg
dec
xchg
cmp
inc
fstl
negl
adc
aas
shl
insb
stc
mov
sub
cltd
repz
pushf
inc
sub
les
push
sub
sbb
and
lods
pop
shlb
inc
mov
stc
mov
js
sub
test
shrl
fnstcw
sti
mov
jno
xchg
adc
jae
lret
cmp
jg
leave
fcomp
inc
cld
decb
movsl
jge
jge,pn
pop
fwait
sub
rcrl
add
enter
push
stc
das
fisubrl
jnp
inc
xchg
pop
mov
push
inc
sbb
xor
sbb
pop
xor
das
aad
xchg
test
sbb
pop
insb
jb
fldenv
mov
mov
mov
mov
imul
in
cmpsb
pop
add
lcall
mov
out
pop
dec
inc
repz
add
mov
xor
mov
inc
add
aad
cmpsl
popf
jl
popa
cmp
aad
add
mov
fidivrs
cmpsl
xor
nop
xchg
aad
sbb
sub
jp
sbb
xor
and
xor
xor
es
and
push
outsb
adc
aas
mov
dec
pushf
dec
subl
arpl
xor
dec
rorb
adc
loopne
leave
sub
sbb
cli
inc
and
adc
add
jne
mov
push
and
iret
outsl
xor
xor
rcl
or
outsl
ret
dec
cmp
into
cltd
aas
jno
dec
sub
cmpsb
sbb
and
mov
pop
xor
rorb
daa
mov
inc
sub
pop
inc
addr16
fldl
cld
pop
in
sbbl
cmp
or
cmp
xchg
pop
add
inc
das
test
cmp
mov
hlt
or
imul
xchg
xchg
loop
ds
adc
xchg
fdivr
push
xlat
inc
inc
dec
xchg
pop
out
jl
scas
cmp
std
add
and
inc
cmc
mov
out
pop
push
outsb
sub
pop
jnp
sub
and
js
loopne
add
add
in
inc
pop
mov
int
dec
or
mov
pushf
mulb
or
std
jne
pop
mov
sub
cli
iret
inc
dec
mov
fimuls
jnp
test
cltd
pop
pop
add
outsb
sub
aas
adc
std
mov
adc
push
sub
dec
sbb
lret
and
jmp
pop
sub
jp
sub
adc
lods
in
xchg
jecxz
mov
cmpb
adc
mov
stc
lahf
mov
arpl
cmp
jns
lret
aaa
dec
iret
fldlg2
test
mov
orb
or
lods
fnstenv
mov
es
dec
jmp
cmp
or
stc
cmp
mov
dec
cmp
xchg
daa
mov
scas
inc
cltd
dec
jmp
or
push
pusha
mov
fmulp
sbb
jp
popf
rcll
scas
push
inc
fs
push
push
scas
jbe
loop
stos
add
xlat
cmpsb
sbb
into
rclb
jl
pop
les
aam
pop
pop
sub
push
pop
pop
lods
inc
push
test
jne
push
cmp
popf
push
out
xlat
push
lea
movsl
lret
ror
sar
inc
cmp
jnp
fucom
mov
lds
call
pop
pop
cmpsl
stos
cmp
and
lock
sbb
jmp
jns
pushf
cmpsl
cmpb
xchg
dec
mov
shlb
ja
jne
sbb
or
pop
xchg
xchg
and
fwait
xor
cmp
inc
popf
inc
xchg
loop
cmpsl
xchg
test
repz
mov
add
mov
xchg
sbb
cmc
scas
out
pushf
xchg
imulb
jno
or
inc
dec
add
leave
lahf
rcrb
jg
adc
pusha
push
xor
xchg
clc
ja
xchg
loop
test
mov
pop
jmp
in
mov
mov
popf
faddl
popl
fidivl
rcrl
mov
push
jl
iret
arpl
adc
and
mov
fs
mov
movsl
dec
jo
mov
fs
pop
sub
jnp
cmpsl
aas
inc
push
fsubl
inc
inc
clc
lret
sbb
and
inc
xchg
ret
cmp
sbb
pop
jle
xchg
mov
int
xor
movsb
cld
xchg
adc
negl
sahf
dec
pop
jg
daa
push
fiaddl
daa
dec
jno
insl
test
cmp
jae
enter
out
ficoml
or
jge
gs
or
inc
cmp
or
xchg
cmp
icebp
stos
adc
push
dec
push
or
daa
jecxz
loopne
mov
xchg
push
pop
inc
mov
ds
mov
ret
popa
rorl
cld
mov
sub
add
shrb
sbb
jns
sbb
int
pop
pop
imul
jo
pop
mov
jp
cwtl
sub
mov
xchg
mov
in
enter
stos
inc
xchg
mov
dec
js
aas
adc
les
and
push
and
xor
jl
je
aas
in
push
jae
xor
xchg
and
in
bnd
adc
js
cltd
fsubr
ror
xchg
lods
adc
cmp
pop
pop
out
inc
add
and
ds
mov
jb
push
hlt
jbe
pop
push
aam
xchg
test
inc
push
add
pop
lret
adc
xchg
and
mov
nop
or
adc
ret
adc
push
xchg
rcll
mov
repnz
scas
jnp
inc
cmpsl
aad
je
sbb
and
add
mov
cli
pause
push
lret
sbb
jmp
adc
mov
iret
int3
cmp
sbb
or
xchg
xor
sbb
cmpsb
loope
push
pop
push
sub
push
sti
sar
mov
ljmp
cmp
xchg
jnp
pop
ja
mov
and
clc
fwait
ja
je
je
mov
sub
and
jge
iret
dec
xor
fs
mov
data16
or
lahf
popf
dec
dec
xchg
mov
mov
into
roll
xchg
adc
jecxz
sub
or
xchg
aas
imul
in
hlt
shrl
stos
out
dec
loop
jecxz
mov
int3
test
jl
call
pop
mov
in
scas
loop
adc
adc
fcompl
test
repnz
dec
xchg
cmp
sbb
push
or
dec
pop
jl
xor
xor
scas
es
repz
jp
enter
das
sbb
jae
and
fwait
add
pop
es
cmp
idivb
xchg
pop
cmp
mov
sbb
or
test
out
cli
test
xor
outsl
or
fs
std
xchg
scas
sub
fistps
inc
ds
add
std
scas
jecxz
fstl
xor
js
adc
insb
icebp
movsb
sub
lods
fdivp
mov
xchg
in
jmp
inc
in
jno
add
inc
xor
sbbl
pushf
ds
dec
call
dec
sbb
adc
mov
fnstsw
mov
push
mov
insb
sbb
mov
adc
lahf
xchg
and
and
loope
int3
daa
push
or
jmp
jns
ret
cwtl
mov
insb
je
test
mov
lahf
cli
ror
out
mov
movsb
jg
and
lods
sbb
push
lods
std
mov
or
int3
and
or
add
sbb
out
mov
push
mov
roll
aaa
push
pop
push
inc
push
insl
ss
filds
cmp
inc
cltd
sbb
jmp
int3
cli
jge
daa
in
sbb
test
add
inc
jb
or
clc
int3
rclb
mov
sbb
ret
xor
inc
into
movsl
pop
cs
pop
xor
and
je
cmp
cmpsl
fbld
push
cmp
jo
ret
js
cmpsb
mov
in
adc
pusha
cmp
inc
and
cmp
nop
repnz
lea
out
jge
fsubl
mov
lcall
daa
xchg
push
xor
adc
mov
mov
dec
pop
cmpsb
test
cmpsb
jo
and
xor
lret
xchg
and
popa
out
mov
or
enter
mov
insl
inc
push
sbb
mov
or
das
jge
fisubl
push
in
pop
mov
push
leave
or
ljmp
pop
xlat
outsl
cmpsb
repnz
filds
mov
es
out
push
lcall
stos
jbe
out
adc
out
xor
mov
mov
add
jg
aaa
mov
pop
jne
xchg
and
lret
xor
mov
cmp
dec
in
cli
cs
jo
mov
notb
popf
loop
fimull
push
gs
mov
arpl
add
jg
lcall
or
std
js
mov
xor
test
ret
dec
pushf
lock
test
cmpb
sbb
inc
testb
scas
jg
add
lea
xlat
lods
test
and
pop
adc
push
popa
out
mov
out
mov
xlat
cmc
mov
shlb
mov
mov
mov
cmp
cmp
jnp
loope
mov
xchg
jne
jp
inc
scas
ret
and
sbb
das
jo
push
push
rolb
cmp
lcall
ret
int3
sti
dec
sub
test
cli
jnp
out
jp
xor
pop
xorl
cmpl
mov
in
sbb
add
and
repnz
mov
sbb
clc
and
pop
inc
clc
mov
jnp
icebp
inc
dec
or
sub
fstps
xor
xchg
shlb
and
push
push
out
xchg
ljmp
sahf
dec
mov
adc
and
xor
stc
scas
jecxz
jmp
add
mov
in
into
test
adc
jo
cmpl
repz
ja
cmpsl
push
add
mov
push
pusha
arpl
cltd
mov
cmp
insl
lds
dec
inc
xchg
add
daa
lods
inc
cmpsl
ljmp
stc
jecxz
jge
int
lods
mov
les
mov
mov
push
dec
jnp
popa
inc
in
cmp
or
pop
jbe
push
flds
cmpb
pop
push
sub
sahf
int
xchg
test
add
xchg
cltd
dec
loopne
arpl
sahf
inc
add
stc
push
sti
sub
sbb
orl
ja
pop
xor
call
push
fmuls
pop
mov
sub
test
es
dec
mov
jmp
xlat
sti
sahf
push
push
cli
pop
push
dec
xor
adc
int
popf
xor
or
add
sar
insl
push
add
stc
mov
stos
out
clc
in
jle
addb
lahf
sub
rclb
xchg
pop
xchg
ljmp
insl
into
push
int3
jl
sbb
xchg
lds
out
mov
push
and
and
test
mov
mov
mov
inc
cli
pop
xor
cmp
inc
ss
addr16
das
cld
int
leave
mov
or
outsb
nop
ds
mov
xchg
adc
jecxz
mov
mov
cmpsl
aas
dec
pop
std
cmp
call
popa
inc
mov
into
cmp
ss
adc
pop
fdivrl
xchg
dec
xchg
ljmp
xchg
into
pop
das
out
lret
jmp
pop
or
dec
mov
mov
sub
push
loope
mov
mov
jg
fdivrs
cmp
out
fldcw
out
jmp
ds
mov
dec
xor
xchg
mov
test
xchg
jecxz
ficomps
jge
andb
jbe
das
insb
into
lcall
aad
pop
les
jle
test
negb
addr16
sub
mov
jne
inc
pop
mov
xor
dec
and
dec
arpl
rolb
mov
push
add
ret
and
cmp
insb
sbb
inc
mov
jb
or
repz
xor
icebp
fcomi
mov
push
dec
loopne
mov
or
bound
aaa
cltd
lea
xor
fists
mov
sub
sub
popa
push
xor
mov
lret
in
ja
mov
sub
xor
inc
mov
mov
xchg
pop
ret
xor
pop
iret
sbb
stos
movsb
pop
popa
imul
outsl
popf
outsb
mov
pop
mov
xor
lret
inc
test
in
stc
dec
mov
ds
sbb
mov
loop
lds
aam
clc
add
stc
pop
push
rcrb
in
ror
cmpsb
lock
xor
xor
mov
inc
call
mov
fucomp
and
lods
push
and
xchg
cmc
hlt
je
inc
add
imul
cltd
pusha
push
push
mov
test
xor
sbb
clc
adc
adc
add
into
xchg
pop
cmp
sahf
push
sub
inc
flds
and
pop
sbb
ffree
sub
and
add
in
pop
jp
mov
mov
jnp
push
jl
dec
cltd
inc
adc
gs
adc
and
je
les
jns
and
sub
sbb
push
inc
gs
push
sbb
jo
jns
lahf
push
mov
fdivl
mov
ficoms
iret
inc
filds
and
mov
dec
adc
mov
mov
dec
out
imul
push
jae
pop
iret
sarb
mov
sub
fistl
lcall
in
push
jo
cmp
xor
ficompl
push
bound
mov
je
sti
ret
icebp
fnsave
inc
insl
mov
ss
enter
pop
mov
xchg
iret
decb
decl
mov
mov
pusha
mov
inc
imul
jmp
bound
ja
ja
scas
call
out
pop
mov
out
lahf
neg
inc
dec
pusha
pop
cli
fsubrl
mov
sub
in
insl
push
jp
or
xchg
fcmovnbe
dec
lods
pop
repnz
cltd
enter
or
lds
out
or
mov
sbb
fcomi
push
call
xor
mov
adc
data16
and
xchg
in
lcall
out
in
jle
push
or
push
loope
cmp
addr16
add
pop
movsb
jo
mov
int3
push
push
push
xchg
xchg
and
jge
int3
cmpsl
cmc
fnstenv
sub
pop
loopne
in
iret
adc
or
pop
pop
les
cltd
mov
lret
inc
cmp
sub
sub
or
jge
ficompl
sti
dec
jae
or
dec
xor
and
mov
popf
pop
rcrb
bound
pushf
mov
incl
rorb
xchg
loop
push
fwait
xor
fidivl
negl
mov
cmpsl
sbbb
dec
mov
lods
pop
fildll
jno
cmc
shrb
cld
xchg
and
sti
push
xchg
sbb
in
mov
or
mov
jmp
shll
sbb
je
repnz
mov
pop
sbb
mov
cmpsb
xor
mov
mov
cli
jmp
js
jmp
and
cmp
pop
lods
sub
out
sub
std
jo
xor
dec
cmc
fiadds
mov
nop
pushl
jle
inc
mov
sub
inc
int3
shrl
cmp
fmuls
outsl
js
and
inc
push
sahf
xlat
mov
push
mov
sti
xor
mov
push
xchg
mov
fsubr
mov
lret
xor
mov
mov
mov
cmc
mov
ret
fsubrp
adc
into
stc
ret
movsb
pop
int
pop
js
jg
mov
fbstp
popf
movsl
std
repz
push
and
insl
mov
mov
push
rol
pusha
into
ljmp
lret
fdivr
pushf
inc
leave
popa
iret
ret
or
sub
test
shr
in
cmp
gs
xorl
sarb
adcb
cmpsl
push
xchg
shll
push
insb
xchg
les
inc
sub
dec
or
push
lahf
dec
js
sbb
inc
xchg
shl
loop
sub
add
pop
test
lcall
movsl
aad
loope
push
ja
dec
cmp
and
mov
testb
inc
add
inc
decb
xlat
lret
jbe
subb
dec
leave
orb
or
fisubrl
xor
mov
inc
push
icebp
test
mov
test
stc
cmp
add
repnz
jmp
dec
or
mov
jo
aas
xchg
push
icebp
les
mov
xor
sub
jle
jbe
hlt
test
stc
insb
mov
scas
clc
cmpsb
add
pop
cmpsl
mov
pop
mov
jae
mov
add
nop
add
inc
loopne
std
addr16
test
sub
in
sbb
or
mov
aad
adc
add
xchg
test
xor
dec
repz
mov
push
imul
sbb
lds
xor
mov
call
cmpsb
aam
sub
pop
fwait
push
push
push
repnz
loop
pop
xchg
addl
cld
jmp
adc
addr16
and
xchg
mov
mov
mov
jle
push
leave
adc
dec
insl
ficomps
leave
inc
adc
mov
dec
jp
inc
xor
fnstenv
ja
add
inc
push
lea
fmul
sub
push
adc
daa
fnstsw
lcall
inc
push
xchg
mov
fcoml
fistpll
cmp
imul
push
sub
mov
jl
clc
call
call
in
add
xchg
fadds
pop
inc
pshufw
aad
or
cmp
int3
add
jge
dec
mov
sbb
lcall
pop
jge
lcall
mov
adc
hlt
mov
insb
pop
mov
leave
or
push
into
mov
test
andl
lea
push
jbe
iret
mov
add
mov
js
add
xchg
int
inc
xor
insl
scas
push
mov
daa
sti
popa
mov
sub
add
inc
rolb
daa
sub
bound
mulb
jnp
imul
pop
jge
add
scas
mov
push
in
mov
shll
pop
std
cmp
fistpl
aam
xor
xchg
movsb
mov
inc
mov
adc
mov
or
dec
loope
sbb
dec
std
imul
sub
xchg
or
push
fimull
xchg
clc
in
enter
pushf
in
sub
or
or
xlat
ret
hlt
rorl
lret
sub
sub
adc
cmp
in
jl
push
es
or
xor
test
cmp
stos
lret
imul
sbb
js
mov
lea
inc
call
mov
cwtl
pop
dec
sbb
jne
inc
movsb
xchg
push
jmp
xchg
and
pop
push
push
xchg
fdivrp
jno
mov
test
xchg
setp
jp
js
stc
pop
repnz
leave
pop
or
decb
out
push
cmp
mov
push
lods
cwtl
or
or
jge
xchg
loop
jmp
xor
push
lock
in
cmpsl
fsubrl
jp
sbb
mov
int
bound
lahf
xchg
mov
ljmp
loop
add
push
pushf
sbb
sbb
push
push
and
push
sub
or
sti
jecxz
lahf
mov
loopne
mov
adc
aad
xchg
repz
enter
movsl
das
int
mov
xchg
xchg
jg
adc
mov
xchg
fwait
imul
lret
lret
ror
repnz
orb
xor
sbb
cmp
add
cmpsb
adc
push
popf
sti
jge
popf
test
sub
mov
dec
push
les
add
lods
or
dec
std
stos
dec
push
mov
cs
in
lahf
mov
push
cmp
sub
in
fidivrl
and
aad
pop
fimull
cmp
sti
mov
jnp
mov
stc
lret
hlt
call
in
fsubrp
xchg
jae
std
cmp
mov
mov
inc
scas
jl
cmpsl
and
stc
xchg
pop
and
cmpsl
push
sub
lods
ret
sub
mov
fcomi
pop
adc
or
xchg
xorl
into
imul
push
loope
dec
sarb
icebp
data16
jns
add
bswap
mov
sbb
lea
ja
js
insb
decl
mov
imul
cmp
mov
loop
sbb
inc
jle
cmp
adc
adc
jae
xchg
dec
pop
and
adc
xor
cmp
sbb
fucomip
sub
iret
cmp
adc
je
add
sub
lret
nop
adc
add
pushf
orl
mov
xchg
push
ss
rolb
or
add
mov
and
xchg
or
pop
lock
adc
mov
jecxz
movsb
les
dec
iret
lret
mov
testl
push
mov
pushf
mov
or
int
jle
nop
sub
stos
test
inc
jg
lods
jg
mov
jmp
fidivrl
js
stos
xor
leave
jne
mov
aad
out
jl
mov
sbb
and
cmpsb
roll
add
or
mov
jle
mov
jecxz
repnz
mov
fisttpll
pop
xor
dec
mov
ja
sbb
aad
out
dec
push
sub
stos
cmp
leave
mov
lock
je
push
adc
add
and
clc
arpl
mov
xchg
cwtl
xor
push
imul
data16
imul
add
adc
xor
jge
jg
cwtl
or
and
and
addr16
nop
pop
addr16
fwait
cli
dec
mov
and
or
mov
inc
popf
push
pop
mov
scas
data16
mov
adc
mov
jb
das
lods
jae
mov
pcmpeqw
add
xchg
inc
sbb
jp
sub
cmpl
fisttps
divl
mov
jmp
arpl
mov
insb
ss
cltd
cmp
dec
lods
out
enter
cmp
movsl
jne
or
lods
mov
scas
pushf
ss
cmp
xlat
fldl
in
push
xlat
xchg
mov
xlat
aaa
sub
push
push
loopne
mov
dec
mov
hlt
dec
test
mov
jge
add
cmpsb
or
mov
fsubrl
xchg
call
jno
inc
push
cs
or
stc
sbb
int
mov
mulb
cmp
leave
jl
mov
xor
or
aaa
xor
jb
push
aaa
mov
test
fsubr
add
mov
or
hlt
sbb
push
jle
jl
test
inc
lcall
iret
test
and
mov
in
movsl
cs
ljmp
mov
cmc
inc
or
and
push
insl
jle
push
cmp
out
test
scas
shr
mov
enter
dec
addr16
rclb
fmull
stos
fadds
sub
mov
xor
ljmp
add
into
test
dec
sub
movsl
into
int
iret
imul
cmp
pushf
and
test
shll
in
into
pop
loope
mov
outsl
mulb
dec
cwtl
js
outsl
sti
out
icebp
rclb
mov
test
mov
and
and
enter
mov
fnstsw
ret
shrl
jno
xchg
mov
and
fwait
cwtl
inc
or
aas
popf
lods
cmpsb
popf
dec
loopne
sarb
pop
sbb
movsl
push
sbb
fsubp
daa
jae
mov
xor
inc
jmp
data16
ret
outsl
mov
xor
and
adc
jl
stos
loop
lods
jg,pt
int
mov
das
out
push
jae
out
fnsave
jb
mov
sub
xchg
jmp
cmp
xchg
add
movsb
xor
add
xchg
mov
sub
cmp
in
movsb
and
iret
dec
or
jnp
repnz
xor
sbb
pop
sbb
lret
pop
or
mov
roll
loop
sbb
aas
push
cmp
jle
test
mov
cmp
cli
imul
sub
fimull
adc
dec
fcomi
push
cmp
enter
cmp
je
mov
push
pop
stc
dec
int3
mov
or
mov
mov
das
cltd
in
or
fiaddl
outsl
adc
popa
sbb
scas
shrb
cmp
shll
mov
adc
push
movsl
cmc
loopne
add
aaa
pop
dec
inc
adc
cwtl
rclb
push
mov
inc
xorb
mov
lds
mov
mov
daa
jmp
add
mov
lock
dec
stos
enter
addr16
leave
and
das
or
xor
jge
cs
cltd
in
xor
mov
mov
mov
jle
xor
sub
push
add
push
xor
mov
push
shr
cld
jbe
fsubrl
inc
jp
mov
push
js
cmp
xchg
cld
sbb
int3
clc
inc
into
data16
or
and
ja
stos
sub
inc
je
dec
push
pop
mov
pop
jae
gs
jle
xor
push
sub
repz
add
or
add
test
sub
rorl
movsb
mov
movsb
sub
lret
pop
or
addr16
push
mov
aas
es
dec
mov
js
jmp
cmp
das
outsl
mov
fsub
jg
xchg
int
into
faddl
repnz
sbb
mov
popa
push
jmp
lock
jne
and
jle
inc
inc
movsb
adc
stc
inc
pop
jg
cmp
mov
sbb
xchg
jg
inc
cmp
call
mov
dec
ljmp
sub
std
inc
pop
aam
dec
in
push
data16
add
cmp
movsb
mov
stos
das
adc
sub
stos
stos
hlt
lea
fildl
or
shlb
sbb
inc
cmp
cmc
fsubp
sbb
pop
cmp
ficomps
test
cmpsl
mov
cmc
pop
daa
fisubrl
test
out
sahf
mov
outsb
cmc
aas
xchg
push
ret
inc
push
pushf
xchg
pop
xchg
dec
ret
sbb
mov
add
stc
loopne
std
fidivrl
mov
ds
jnp
das
lds
loop
out
and
adc
push
mov
outsb
lods
adc
icebp
subb
xchg
cltd
jae
jo
roll
pop
inc
pop
repnz
xor
mov
gs
aas
lret
dec
add
jnp
sub
ljmp
xchg
punpcklwd
mov
sub
inc
add
std
adc
or
or
rcl
sub
cmp
lcall
add
mov
sbbb
rorb
test
js
loope
jno
adc
jecxz
dec
cli
pop
inc
gs
or
les
and
leave
movsb
mov
adc
mov
lret
mov
mov
negb
mov
lret
dec
js
ljmp
fstpt
stos
cmp
imul
sub
rcrb
push
divl
call
mov
pushf
jnp
pop
inc
das
sbb
xchg
movsl
add
lcall
enter
push
and
sahf
push
rol
mov
mov
lds
sub
mov
fmull
mov
mov
shufps
sbb
pop
scas
pop
adc
push
sub
mov
or
ja
xchg
pop
mov
insb
cld
add
adc
inc
sbb
lods
jmp
ds
enter
rorb
push
push
in
mov
addr16
lods
hlt
jne
in
aaa
testl
push
cmp
out
push
xlat
or
repz
inc
fs
shrl
xor
and
add
jle
or
imul
mov
push
add
jb
dec
inc
cwtl
xor
test
inc
clc
out
sar
push
xlat
mov
je
push
insl
adc
xchg
xchg
imul
mov
sti
orl
pop
adc
push
adc
stos
shl
add
mov
sbb
adc
insl
daa
pop
sub
xchg
stc
fisubl
cmp
push
popf
idivb
sbb
rcl
lea
cmpl
inc
jl
push
add
mov
and
sub
add
sbb
std
lods
xor
inc
mov
lea
mov
sbb
add
lds
mov
mov
iret
cld
add
adc
xchg
jle
mov
mov
cmp
and
jbe
push
lods
add
inc
nop
loope
sub
dec
in
mov
test
clc
stos
in
cld
mov
movsb
sub
and
mov
rcrl
shrb
inc
jo
cs
and
mov
loopne
in
fcompl
mov
sahf
push
arpl
dec
arpl
push
jle
push
loopne
sub
mov
xor
xor
lahf
daa
fwait
in
cmp
testl
icebp
cmpsl
cmp
cmpsb
cmp
aaa
incl
xlat
lock
pop
test
push
sarl
cmp
xor
cmp
cmp
out
xchg
lds
pushf
iret
xchg
dec
popl
pop
inc
push
outsb
idivl
jo
inc
nop
pusha
leave
or
and
int3
mov
sub
push
xchg
dec
fbstp
lret
lods
push
insl
mov
shll
dec
in
leave
pop
loope
mov
dec
push
xor
mov
adc
xchg
das
mov
into
cmc
inc
mov
sub
cmp
pop
das
lcall
or
bound
xchg
ljmp
ret
cs
leave
jg
cmp
push
sbb
call
pop
cmp
pop
inc
iret
sbb
pop
cmp
ret
clc
inc
sbb
mov
imul
xchg
imul
dec
mov
sbb
and
ds
push
mov
xor
push
clc
movsl
xchg
movsl
sub
add
popa
add
mov
sarl
push
add
adc
dec
mov
mov
rolb
pop
push
ss
mov
cmpsb
xor
sbb
inc
aad
and
loop
iret
aas
xchg
mov
push
push
orb
sti
jecxz
lock
push
mov
into
andb
adc
fdivs
cmp
dec
mov
cld
xor
scas
jno
lds
test
shl
and
rcll
or
loop
iret
test
mov
jp
in
dec
jl
sub
jge
inc
mov
fsubp
or
mov
cmpsl
pop
xchg
divl
cmp
jp
jae
inc
pop
and
cmp
fisubrs
je
ja
push
data16
in
fcompl
mov
orl
cmp
cmc
cmp
mov
pop
dec
fistpll
lods
call
stos
clc
outsb
lret
xor
out
inc
imul
adc
cmpsl
and
pop
jp
inc
jae
movsb
outsb
cltd
mov
fbld
ljmp
imul
mov
push
push
sub
pop
arpl
cs
mov
cmp
and
into
cwtl
loope
mov
fwait
xchg
mov
push
shlw
adc
icebp
mov
jl
adc
int3
cmp
mov
mov
pop
aas
out
mov
mov
into
imul
aaa
dec
add
mov
sti
fnstsw
or
test
xchg
xor
add
and
pop
and
fwait
add
mov
fisttpll
inc
xchg
clc
push
or
cmpsb
jp
dec
dec
cmp
aas
in
imul
in
fildl
push
sbbb
imul
dec
add
add
push
subb
xor
sarb
out
cmpsb
jle
das
mov
loop
sahf
mov
and
ficoml
mov
add
push
push
push
les
mov
xorb
sbb
push
mov
sbb
sub
jge
and
cs
ljmp
mov
mov
or
jge
pop
movsb
ret
ljmp
sub
shll
adc
ret
add
adc
nop
les
dec
and
sbb
xchg
clc
sub
or
out
ret
add
xor
imul
shlb
test
addr16
loop
jae
jbe
lea
rclb
mov
jl
subl
rcrb
add
loope
popf
mov
fnstenv
inc
pusha
mov
mov
imul
inc
xor
sti
fidivs
cli
jno
jo
sbb
mov
fiaddl
add
js
inc
cmpb
ret
int3
and
aad
cmp
pop
dec
insl
repnz
int
xchg
jg
addb
and
jmp
sub
xor
mov
xor
sub
dec
and
inc
aas
mov
sahf
scas
mov
push
sbb
xor
xchg
jmp
mov
popa
push
es
cs
jp
pop
mov
adc
mov
and
xor
mov
sbb
fsubs
sub
cmp
jno
push
jbe
adc
sbb
stos
and
lock
pop
sbb
lea
rcrb
sbb
mov
cs
add
add
xor
sbb
sub
bound
push
xchg
out
dec
stos
xor
pop
add
inc
inc
inc
push
fimull
out
lahf
pop
rorl
cmp
fdivr
pop
pop
lock
cmpsb
jmp
mov
iret
sbb
jmp
aaa
pop
out
in
in
xchg
xlat
es
adc
test
and
orl
pop
pop
imul
mov
inc
cmp
lcall
or
xchg
mov
or
push
cld
push
push
mov
add
aad
jo
push
jl
push
xchg
orb
adc
jne
mov
into
jo
push
scas
add
rorl
mov
adc
out
mov
loopne
cld
das
xchg
fsubs
nop
pop
stos
inc
inc
mov
sub
mov
or
in
lods
in
xchg
mov
js
ret
lea
iret
adc
dec
call
dec
push
push
sub
jle
loopne
subl
inc
mov
sti
mov
test
pop
or
mov
scas
sub
insb
ficompl
push
rcrl
aad
adc
loop
ds
aas
addb
inc
jg
inc
iret
push
cld
pusha
dec
outsl
lret
mov
mov
sub
arpl
cmp
sahf
pop
cs
jne
xchg
shl
int
idivb
xchg
decl
cmp
je
lods
jnp
loop
xchg
test
sbb
sbb
movsb
jl
inc
pop
lea
je
mov
xchg
pop
mov
pop
lret
sub
xchg
popf
paddd
mov
xchg
rcrb
adc
dec
loopne
cltd
dec
xchg
xor
push
mov
or
push
mov
cli
test
dec
and
push
and
cmp
aam
xchg
cmc
mov
sbb
psubusw
imul
out
push
gs
pop
adc
les
jle
cmpsb
in
cli
sbb
stos
mov
push
out
ret
jbe
repnz
jg
add
or
sub
testl
sbb
dec
lds
rorb
test
and
mov
das
aam
jae
insb
test
inc
sbbl
lods
and
fwait
arpl
mov
gs
cmpsl
mov
push
rorb
mov
out
fsubr
inc
sbb
inc
xchg
xchg
add
sub
dec
and
fdiv
jp
data16
push
js
jno
add
sub
or
lret
xchg
mov
dec
lcall
pop
subl
push
mov
mov
mov
ds
cmp
xor
je
jp
arpl
mov
inc
imul
clc
fistl
ret
das
and
cwtl
dec
sub
jge
mov
ljmp
cwtl
fadds
mov
test
push
cmp
loopne
pop
stc
push
sub
cmp
ret
sub
lret
mov
mov
pop
or
cmpsb
mov
outsb
daa
cmp
dec
jg
outsb
adcb
imul
test
add
push
into
mov
clc
imul
pop
stc
xor
cld
add
push
sbb
inc
xchg
in
push
dec
in
ja
das
repnz
mov
mov
mov
movsb
jge
fldcw
ss
pop
or
pop
popa
sarl
push
mov
into
hlt
int3
cmp
int3
or
lock
mov
push
xor
inc
xor
sbb
and
xchg
scas
imul
pop
dec
pop
mov
out
ds
mov
int3
jg
jge
cmpsb
lret
cmc
mov
out
or
dec
movsb
sbb
xor
mov
in
je
push
adc
cmp
mov
test
push
jbe
mov
sub
xchg
xchg
jbe
mov
stos
push
arpl
cmp
std
mov
cmp
xor
add
dec
lahf
xadd
xor
or
mov
inc
aas
lcall
cli
mov
jae
inc
xchg
orb
int3
jb
mov
sti
imul
xchg
xchg
or
inc
jb
rorl
sbb
cld
xchg
stos
dec
push
jne
add
add
in
imulb
dec
cmpsl
mov
mov
pusha
shll
test
push
stos
fstpt
notl
outsb
jo
add
inc
push
jnp
push
sbb
pusha
xor
or
mov
scas
rorb
and
xor
negb
push
call
test
sbb
jae
lret
lock
jnp
pop
loopne
jg
and
repnz
add
test
lods
iret
nop
and
repnz
iret
mov
or
adc
fcomps
fldl
repnz
pop
cli
das
mov
mov
lods
in
push
dec
and
adc
mov
test
xor
adc
test
jae
xlat
xchg
ret
test
cmc
mov
xor
roll
dec
loopne
shrb
inc
pop
adc
sbb
xchg
sbb
xor
nop
xor
or
mov
dec
sub
sbb
xchg
or
cs
cli
mov
sbb
outsl
fmul
and
out
cmp
jns
push
test
push
jns
mov
and
xchg
shll
or
mov
insl
gs
mov
roll
push
push
and
sub
or
xchg
pop
xchg
cld
std
lods
rolb
fnstenv
popf
inc
cmc
mov
in
inc
fdivl
jle
dec
add
mov
int3
xchg
aad
out
dec
ljmp
adc
inc
dec
leave
aaa
jl
push
bound
jl
pop
outsb
mov
loop
divb
xchg
or
fcoms
add
lods
and
subl
popf
cwtl
mov
mov
jl
push
call
iret
test
pushf
fwait
push
dec
add
notl
mov
inc
shr
in
mov
cmpl
lods
popf
cmp
es
fistl
js
mov
leave
daa
mov
jecxz
loop
shr
mov
stc
insb
hlt
aam
int
mov
push
and
jmp
pop
test
mov
xor
mov
adc
mov
jno
adc
in
iret
xor
mov
addr16
out
fs
ficomps
dec
cmp
leave
imul
pop
aad
iret
mov
loopne
inc
leave
cmpsb
scas
jge
pusha
mov
xor
movsb
lahf
xor
stos
mov
inc
add
cmpsl
inc
dec
pop
je
pop
adc
push
jnp
repz
add
fdiv
sub
mov
jle
jp
mov
mov
inc
add
mov
pop
rcrl
popa
sbb
sbb
add
in
mov
pushf
mov
pop
lret
add
pusha
stos
jns
loop
icebp
xor
lret
repz
fbstp
jl,pt
xlat
lahf
out
enter
dec
push
ljmp
cmp
xchg
sub
push
mov
pop
mov
inc
dec
lods
mov
push
fsubrl
sub
icebp
jmp
data16
ret
push
cmp
fisubl
sahf
cmpsb
cmpl
out
fcmovne
mov
jg
sbbl
dec
orb
inc
aam
fldt
stc
jmp
lret
mov
cmpsl
and
fs
sub
js
inc
mov
vmwrite
sub
inc
test
push
push
sbbb
dec
mov
mov
sahf
push
jae
xor
inc
cmc
sti
xor
cmp
and
shll
sbb
xor
dec
push
or
test
sbb
int3
mov
xchg
push
pop
divl
inc
sti
int3
data16
cld
sahf
jb
jmp
cmpsl
mov
ret
lock
mov
repnz
in
adc
jecxz
cs
stos
sbb
xchg
inc
jne
mov
xchg
fnstenv
mov
aaa
sarb
adc
sub
dec
push
mov
das
cmp
shlb
loope
fwait
jl
lret
aas
xor
cmc
pop
mov
sti
jle
sbb
gs
je
push
or
cmp
xchg
mov
mov
dec
jbe
mov
outsl
mov
push
inc
pop
mov
shlb
call
push
pop
xchg
cs
sbb
stos
lods
pop
aas
stos
cmp
stos
cli
inc
pop
xor
lcall
mov
jmp
sbb
fstpt
fs
mov
daa
sbb
adc
add
or
or
mov
es
aad
lods
loop
push
add
hlt
lcall
mov
or
cs
mov
jp
cld
ret
mov
test
jb
push
loop
sbb
adc
popf
fcoml
push
sbb
dec
add
push
add
es
das
test
std
sbb
mov
sbbb
std
fists
inc
dec
jmp
jle
push
test
popa
fadds
sbb
sbb
out
sub
mov
or
jo
loope
mov
mov
or
scas
add
add
push
in
dec
mov
out
jg
sbb
xor
or
out
push
fnstcw
sub
stos
or
xlat
xchg
jns
pop
leave
aam
mov
nop
loop
int3
int
andl
push
bound
inc
push
arpl
lea
and
imul
dec
cmp
and
jg
insb
ljmp
popf
or
xor
sub
jae
mov
out
jge
subl
icebp
jo
js
icebp
inc
and
mov
jecxz
iret
dec
add
cmpsl
push
ss
fisubs
mov
sbb
inc
aam
negb
xchg
in
nop
lahf
je
lret
push
mov
and
sub
nop
mov
mov
xlat
push
jae
xor
leave
stos
mov
jl
test
mov
das
pop
jnp
inc
jge
jne
lret
sbb
hlt
sub
lods
test
push
aas
fs
fwait
ret
xlat
adc
push
shlb
jmp
sub
test
mov
adc
aad
inc
out
cmpl
push
xchg
sahf
aas
or
mov
das
mov
fimull
mov
out
std
les
inc
inc
mov
stc
dec
popa
cld
frstor
pop
cltd
dec
fstpt
xor
aaa
cltd
jb
ret
push
pop
add
out
mov
test
into
pushf
jne
imull
and
sbb
mov
mov
ds
xchg
stos
scas
mov
popf
push
push
adc
lahf
dec
fsin
fs
ret
into
pop
or
jle
and
mov
test
mov
ret
les
push
jb
pushf
jae
mov
push
adc
scas
xor
cmp
push
pop
test
std
scas
scas
xor
test
push
ret
repz
xchg
adc
pusha
mov
addr16
jb
push
subl
cmp
inc
das
out
mov
fdivr
sbb
es
negb
ret
mov
movsl
add
mov
mov
push
mov
arpl
fnstsw
cmp
pop
sbb
adc
mov
enter
dec
mov
repz
mov
sbb
imul
movsb
and
js
inc
or
mov
lahf
ret
jge
pop
push
sbb
xchg
add
adc
jb
pop
push
mov
jge
je
jae
jp
arpl
je
imul
into
inc
loop
or
xor
shrb
xchg
xlat
mov
test
lret
cltd
xchg
mov
push
sbb
cmpsb
mov
fists
jne
jns
fstps
rcll
or
mov
adcl
sbb
jb
cs
iret
sbb
push
popf
rol
sarb
mov
xlat
dec
push
call
inc
add
sub
repnz
sbb
cmp
dec
out
into
ja
imul
shll
dec
out
icebp
incb
das
xchg
xlat
add
loop
cmp
shr
sbbl
test
imul
jae
push
rcrb
push
arpl
rcl
ret
adc
scas
dec
push
xor
mov
mov
xor
pop
lock
push
es
dec
xchg
aaa
add
sbb
cmp
jae
ljmp
fcoms
daa
mov
cmp
pop
mov
hlt
inc
push
cs
adc
lods
outsl
insb
push
dec
sbb
xchg
or
inc
jno
mov
nop
leave
or
sub
push
fisttpl
popa
inc
fs
mov
dec
xchg
sub
xchg
notl
cmp
pop
sbb
mov
dec
pop
lcall
sarl
fstps
mov
leave
xchg
cli
insb
cmp
jno
pop
jle
jecxz
adc
lods
jo
jno
jmp
fcomps
cmp
test
mov
movsl
imul
rolb
mov
scas
push
jne
pop
lret
push
movsl
dec
mov
fmuls
pop
pop
lock
pop
inc
push
push
sub
and
cmp
mov
in
cs
pushf
xor
ret
add
push
pop
ret
xchg
fldl
add
push
stc
icebp
cmc
add
lcall
int3
in
in
push
icebp
outsl
pop
jg
xchg
imul
int
pop
insl
movsb
addr16
push
pop
outsl
movsb
out
jne
cmp
jle
cmpsb
aas
scas
push
lret
xor
dec
push
out
daa
and
cmpl
sbb
fmuls
and
js
or
or
enter
inc
dec
mov
jecxz
jg
mov
cmpsl
cld
in
pop
inc
push
loopne
lcall
pop
jg
mov
sbb
xchg
iret
stos
jnp
test
out
add
dec
or
or
int3
push
inc
or
data16
jmp
and
es
xchg
pusha
notl
adc
pusha
push
scas
xchg
adc
popf
sub
lods
pop
test
out
mov
es
push
clc
test
pop
loope
fnop
inc
xchg
outsl
ret
jo
ret
cli
aas
add
out
jae
mov
insl
cmp
outsl
enter
int3
loop
mov
push
xor
dec
ss
shlb
pop
dec
sub
fbstp
mov
iret
cmp
dec
inc
mov
icebp
out
adc
sub
rcll
add
inc
in
scas
dec
sub
outsl
pop
fidivl
cmp
repz
outsl
int3
out
xor
mulb
xor
fs
sbb
and
mov
mov
in
and
pop
jne
sbbb
jmp
cmp
xchg
out
and
dec
sbb
jnp
or
pop
fldt
aas
in
je
and
and
jno
and
fildll
mov
dec
pushl
sahf
sahf
mov
lds
int
out
enter
push
add
pushf
xchg
movsl
sbb
push
gs
adc
lcall
add
xchg
hlt
in
rcrl
ds
pop
pop
test
or
nop
pushf
add
cmp
push
cmpxchg
stc
dec
xchg
aas
rolb
mov
lea
out
push
xchg
stos
mov
jle
sub
roll
scas
js
xchg
gs
push
push
fcmovu
sub
fimuls
fwait
cltd
xor
sbbb
outsb
xlat
add
jbe
shrb
outsl
dec
xor
push
mov
jno
jo
jne
add
in
or
jbe
sub
loopne
dec
jno
jbe
adc
mov
iret
inc
pop
sbb
cmp
push
dec
andl
decb
dec
or
mov
sbb
xor
jp
or
add
test
imul
jae
xchg
loop
shlb
cmpsb
add
pusha
xchg
add
repz
ret
cmp
inc
lea
xchg
and
mov
mov
jb
lods
pop
stos
iret
mov
xchg
adcl
ds
jl
sbb
mov
push
fdivr
lods
sbb
les
in
inc
data16
out
dec
lds
sub
cmp
imul
ja
jmp
cmc
push
push
push
mov
pop
inc
xchg
lahf
movsl
dec
jo,pn
lret
add
dec
aas
mov
and
jbe
and
add
notl
leave
int3
push
xchg
jmp
adc
inc
in
mov
xchg
inc
xchg
pop
sbb
iret
add
pop
xor
xchg
ret
inc
inc
out
jp
sbbb
ret
aam
movsl
and
icebp
fs
jge
outsb
push
mov
xor
pop
xchg
mul
xchg
rcrl
les
cmp
pop
sub
mov
push
lret
fisubrl
aam
in
rcrb
inc
fbld
fmull
adc
mov
and
imul
ss
pop
pop
dec
mov
xchg
movsb
pop
or
xchg
jb
je
in
loopne
mov
pop
jp
dec
push
mov
test
jmp
mov
jns
loopne
mov
pop
pop
cmp
inc
cmp
gs
add
fucomi
jmp
jns
xor
jae
sub
mov
jge
test
daa
icebp
loope
test
jl
repnz
rolb
insb
aaa
mov
shrb
outsb
push
aas
adc
cmp
shrb
bound
out
daa
scas
mov
daa
adc
leave
ja
arpl
pop
lret
push
ds
push
mov
add
daa
ret
fstp
repnz
pop
xchg
mov
addr16
mov
xor
jmp
js
jle
ljmp
fdivrs
pop
cmp
mov
popa
lods
fisttpl
stos
pop
lret
loop
pop
push
jg
nop
into
jmp
div
aam
gs
cmp
mov
adc
clc
popa
pop
dec
sub
clc
push
js
mov
lea
adc
nop
dec
dec
lret
inc
stos
mov
inc
lahf
std
mov
inc
jmp
adc
out
rorb
sub
push
mov
mov
fldenvs
shrl
popf
lret
lock
out
popa
out
adc
mov
jo
lds
cltd
mov
iret
pop
cmpps
xchg
sbbb
bound
or
add
repz
jmp
sar
mov
jl
call
shrb
cmpsb
sub
mov
popf
pop
xlat
arpl
loopne
hlt
test
sub
xor
mov
xchg
mov
xchg
lea
out
inc
xor
xchg
mov
pop
push
cltd
mov
aaa
sbb
fcompl
push
push
cmp
push
mov
pop
cmp
cmp
mov
jae
out
adc
inc
jnp
jno
xchg
adc
add
mov
ret
je
xlat
xor
sub
adc
mov
jae
sub
fwait
int
sbb
cmp
insl
xchg
inc
js
int
jl
cs
inc
inc
or
fnstcw
and
and
out
icebp
xor
push
stc
mov
repnz
pop
xchg
aam
sbb
cltd
mov
loopne
fisttps
pop
pop
xchg
nop
popa
xchg
mov
mov
stc
ja
pushf
mov
cld
iret
push
push
push
stc
inc
adc
mov
jle
and
dec
lea
in
cs
fsubrs
ds
dec
ss
in
in
pop
xchg
repz
jmp
inc
jbe
xchg
add
push
add
je
sbb
rcll
inc
sahf
dec
icebp
gs
sub
inc
test
mov
inc
mov
cmpl
cmp
movsb
jg
jne
sahf
out
loopne
xor
dec
lret
nop
xchg
and
sbb
sbb
fnstsw
dec
js
xchg
scas
test
jp
sbb
lock
or
mov
sbb
push
add
xchg
sub
cmpsl
popa
jbe
push
flds
stos
inc
adc
mov
cltd
fs
out
and
bound
push
mov
enter
cmpsl
jmp
push
mov
lods
mov
loop
inc
movl
pop
repnz
inc
xor
add
nop
fstpt
add
lcall
push
es
jge
outsb
dec
mov
cwtl
in
aad
out
dec
mov
push
xchg
mov
lods
sti
sub
stc
or
das
clc
in
lds
shlb
xor
cmp
test
iret
add
add
loop
mov
mov
fs
enter
cmpsl
into
mov
jnp
inc
and
lret
imul
xor
xor
js
out
mov
pop
inc
push
cmpxchg
ret
mov
std
mov
jg
add
xchg
fcomi
fldcw
out
mov
cmp
popf
push
std
int
mov
jbe
add
sub
movsl
call
jb
data16
sub
or
add
pop
mov
stos
mov
xor
shlb
clc
in
lods
pop
loope
popa
xor
test
shll
xchg
out
iret
sub
iret
insl
and
adc
pop
shll
xchg
jbe
leave
loop
mov
jae
add
imulb
fisubrs
movsl
sub
mov
dec
outsb
xchg
pop
jbe,pt
xchg
out
xorb
dec
sub
in
aad
pop
popf
cmp
das
lahf
push
push
test
mov
in
add
imul
push
sub
sub
sbb
out
int
and
push
daa
pop
push
imul
push
pop
inc
sub
cmpsb
cwtl
mov
push
out
out
pop
pop
sbb
pop
xor
cmpsb
pop
mov
scas
adc
push
aam
das
push
cmpsl
ds
sub
cli
stos
std
and
pop
filds
pop
stos
sbb
xchg
int3
sti
pop
mov
fdivr
pop
push
adc
jecxz
stos
je
lret
dec
pop
pop
gs
les
pop
pop
and
imul
loopne
js
ror
aad
push
sub
jle
clc
mov
mov
sti
push
xor
je
push
adc
xor
gs
push
into
fisubrl
lret
sahf
xchg
movl
insl
cmp
pop
scas
fsubs
imull
add
test
jle
push
ffree
inc
xorl
js
js
push
mov
stc
sti
jl
fcompl
push
sbb
add
xchg
cld
rcr
leave
arpl
add
jecxz
scas
xor
add
cmpsl
mov
test
and
stos
lods
fldenv
add
and
push
faddl
xor
mov
or
clc
jnp
push
leave
inc
mov
int
pop
jbe
ljmp
pop
push
pop
out
in
shr
pop
or
and
scas
cmp
mov
daa
sub
mull
mov
xor
in
pop
pop
xchg
popa
mov
insb
test
sbb
dec
pop
loope
stos
inc
cmc
js
scas
pop
push
xchg
or
inc
inc
outsb
cld
lret
pop
mov
pop
sbb
jle
dec
cmpsb
sbb
sbb
std
in
mov
fcmovu
dec
mov
push
add
adc
jle
into
sbb
mulps
pusha
mov
add
add
orl
mov
jmp
xor
movsl
add
xchg
mov
push
mov
pop
addr16
inc
lock
cltd
pusha
inc
out
push
push
dec
scas
xchg
jne
mov
push
lods
add
and
shl
test
add
arpl
sbb
inc
addl
push
push
mov
inc
scas
add
jo
rclb
push
xor
sub
test
sbb
xchg
sbb
push
xor
xor
mov
inc
xor
cmp
dec
push
mov
cmp
addps
dec
jno
nop
pop
xlat
pop
xlat
call
cmpsb
imul
inc
pop
in
aas
dec
leave
daa
icebp
in
pop
push
or
push
int
test
mov
ficompl
jecxz
and
xor
scas
pop
xchg
pop
sub
push
mov
stc
push
and
es
scas
mov
jle
pop
sub
fistpl
mov
repz
iret
xor
repnz
icebp
push
jge
mov
xor
mov
sbb
push
mov
cmp
clc
int
pushf
and
bound
imul
mov
rolb
cmpb
fnsetpm(287
nop
shl
cs
xchg
cmp
shll
fildl
rsqrtps
xlat
fcmovnbe
dec
es
out
in
movsl
jb
jnp
mov
lret
push
sbbl
xchg
aas
out
xor
xor
jbe
hlt
mov
jo
cmp
pop
push
sub
loope
fnsave
lahf
adc
ja
or
or
jmp
or
cltd
xchg
dec
ljmp
add
jns
and
dec
daa
nop
loopne
jl
dec
jns
fldenv
dec
dec
into
sub
and
xchg
or
jnp
xor
decb
fisubl
and
xchg
adc
addb
adc
rcrl
insb
inc
sbb
inc
fdivl
cmp
inc
fwait
jne
xor
loopne
lcall
repz
xor
repz
fstl
xor
mov
and
fmulp
bound
fs
sub
push
push
loop
pop
jl
add
push
mov
negl
pop
dec
test
jl
cwtl
mov
popf
push
in
jl
push
push
push
rcll
fs
addr16
sub
in
sbb
mov
inc
js
or
in
rorb
pusha
hlt
mov
mov
mov
pop
mov
jb
dec
push
call
fimuls
out
clc
and
dec
ljmp
jno
push
fisttpl
aas
cld
imull
push
out
cmp
cmp
and
inc
and
call
es
xchg
or
pop
mov
mov
fdiv
inc
stc
movsb
push
aaa
push
cmp
pop
mov
ret
add
inc
lods
dec
lea
pop
xchg
push
shll
or
fwait
xchg
sbb
fmul
sbb
mov
cs
sub
aaa
aas
add
int
clc
insb
addr16
fdivrs
movsb
test
mov
sbb
ret
test
jmp
push
cltd
add
inc
pop
add
adc
xchg
xor
dec
sbb
jno
add
jmp
mov
jae
sbb
out
dec
jns
jg
outsl
lret
divl
xor
sub
mov
stos
popl
jecxz
fisttpll
rcrb
xor
cmp
adc
hlt
push
int3
push
xchg
outsl
mov
jns
cwtl
orl
popf
add
not
pop
xchg
mov
xor
fldenv
aam
mov
das
push
sbb
pop
and
or
mov
cmp
icebp
enter
test
or
push
outsb
mov
jg
imul
jne
ljmp
sbb
fcoml
xor
push
and
pop
ret
mov
push
fcmovnu
testl
jne
sbb
cld
arpl
ljmp
xchg
cmp
or
pop
pop
pop
enter
jne
cmpsb
cli
into
fisubrs
sub
adc
pushf
jne
hlt
xor
insl
inc
cmp
icebp
popf
out
adc
or
cmpsl
dec
pop
jecxz
jae,pt
pusha
jbe
in
gs
pop
dec
fstpt
cmc
clc
add
scas
mov
mov
lods
les
jae
cli
cli
and
mov
ljmp
clc
xor
loop
stc
mov
and
popa
or
andb
add
push
sbb
out
outsl
push
adc
ja
jne
adc
clc
xchg
aas
fstl
in
xchg
xlat
outsl
xorb
imul
int3
inc
aad
mov
adc
mov
push
jge
ljmp
iret
out
cwtl
mov
test
pop
in
and
cmp
pop
ss
cmpsl
out
in
push
or
add
fwait
xorl
gs
cmp
adc
scas
arpl
js
loopne
and
fs
xchg
jle
hlt
mov
mov
and
push
push
bnd
rcll
movsl
imul
pushf
out
inc
sub
jl
mov
mov
fwait
in
adc
les
call
lods
lock
sub
clc
push
xchg
xor
pop
addr16
test
xor
ja
inc
mov
stos
fdivs
mov
push
sbb
dec
bound
and
mov
adc
or
or
cmc
leave
fiaddl
fadd
dec
mov
xchg
pop
sbb
imul
mov
mov
in
fs
jmp
mov
pop
inc
push
push
cmp
mov
add
loope
imul
xchg
out
sub
fwait
subb
aam
add
dec
sbb
test
div
mov
mov
push
andb
cmp
fldcw
jb
call
jne,pn
adc
sarb
inc
arpl
scas
aam
daa
mov
cli
mov
imul
shr
push
lahf
testl
cs
lods
movsb
xchg
push
jecxz
fwait
jle
loope
mov
gs
mov
cmp
mov
push
js
in
subb
jp
and
sbb
cmp
push
jb
sbb
test
dec
pop
or
jp
mov
dec
push
push
scas
movsb
cld
scas
push
bound
mov
jnp
jmp
clc
insl
dec
jbe
xchg
ja
mov
sbb
add
sbb
fcoms
into
movsb
ss
movsb
add
movsl
lods
in
cwtl
inc
stos
sarb
sbb
xchg
scas
shr
mov
insb
push
push
mov
sahf
js
adc
bound
adc
xchg
fcomps
cli
sub
pop
mov
dec
adc
jg
mov
insb
push
pop
xor
out
xchg
mov
roll
jg
andb
mov
jl
lcall
fsubrl
mov
or
lock
sbb
jmp
les
xor
scas
and
pop
sahf
xlat
arpl
movsb
mov
cli
add
pushf
jmp
popa
dec
dec
aaa
mov
imul
lods
fimull
dec
popa
subb
and
jl
je
xor
rcll
arpl
xchg
push
popf
mov
fnstcw
push
and
mov
mov
outsb
lahf
imul
xor
jne
or
add
or
push
das
cwtl
mov
out
and
nop
cltd
xchg
inc
xor
inc
movb
adc
xor
stos
pop
dec
or
mov
stos
leave
divb
dec
add
bound
popa
mov
rorl
push
daa
jnp
insb
les
imul
gs
xchg
cmc
or
pop
pop
insb
inc
stc
xchg
outsb
gs
dec
xlat
sbb
dec
xor
pushf
mov
jo
repnz
or
fs
fistl
ds
sbb
test
sarb
outsb
mov
insl
cmp
cmp
repnz
cltd
or
pop
cmp
imul
pop
jae
jno
jne
mov
mov
or
daa
dec
lea
fmull
das
cld
lcall
scas
cmp
out
mov
mov
cmp
push
push
in
inc
fiadds
xchg
cmp
outsb
adc
or
xor
dec
sbbl
testl
sbb
pop
test
pop
or
les
sub
dec
xor
push
jle
sbb
movb
or
ja
loop
icebp
adc
lock
adc
inc
adc
nop
xor
pusha
loope
in
sub
jne
jp
xchg
stos
add
mov
outsl
cmp
inc
shrb
mov
lret
bound
or
imul
daa
xor
loopne
in
pop
repz
in
mov
fimull
shll
fwait
js
dec
movsb
mov
movsb
imul
dec
mov
and
shr
cmp
or
mov
sbb
and
out
icebp
test
xchg
cmp
push
sahf
pop
adc
aad
loopne
xor
in
movsb
inc
movsl
pop
jo
mov
movl
add
rolb
das
iret
aam
popa
rorb
mov
pusha
repnz
dec
loope
repz
test
shr
pop
mov
sbb
pop
xchg
ja
lods
test
arpl
and
jae
fsubrs
das
rorb
sub
iret
loope
ds
stos
outsb
lods
mov
xchg
dec
jns
jno
or
pop
cmp
mov
xchg
pop
jnp
xchg
sub
in
lretw
mov
sarb
pop
fs
sub
sbb
fcomps
loop
in
in
enter
lds
dec
mov
clc
in
push
mov
mov
xchg
in
sti
mov
adc
mov
orb
out
js
in
pop
lretw
lcall
mov
or
cmpsl
testl
int
hlt
jp
adc
xchg
imulb
loop
jecxz
add
sub
enter
ljmp
sub
imul
repz
sarl
mov
mov
xor
loop
sti
test
cmp
stos
push
inc
xchg
ss
sub
lds
mov
cmp
dec
movsb
lret
in
mov
stc
adc
mov
adc
sbb
inc
loop
dec
xor
sub
mov
call
inc
in
cmp
inc
mov
pop
push
pop
inc
lcall
jne
inc
stc
enter
adc
xor
cmp
jle
int3
push
flds
push
pop
mov
sti
mov
push
xor
cmp
or
ja
mov
dec
hlt
and
xchg
pop
test
mov
jae
jne
imul
dec
adc
xchg
lods
pusha
push
cltd
sub
call
sbbb
dec
xchg
adc
xchg
fwait
pushf
in
mov
sbbl
cltd
cld
pop
dec
ja
jo
cmpsb
cmp
push
xlat
in
jnp
rclb
push
adc
fists
cld
fstpt
cs
roll
sub
sbb
sub
sahf
jo
daa
add
cmp
mov
mov
shlb
pop
movsl
fcmove
lods
cmp
pusha
dec
scas
out
aam
xor
dec
imul
xchg
mov
cmp
in
out
in
ljmp
mov
lock
ds
bound
cmp
aas
and
pop
mov
nop
rorl
scas
add
mov
mov
das
xchg
dec
in
lds
sub
cmp
jae
pop
test
sbb
imul
jne
std
or
push
push
adcb
dec
int3
xchg
xor
mov
js
and
jl
aam
in
pop
pop
mov
cmp
push
lds
out
sti
hlt
sub
pop
sbb
pop
out
mov
fsubrs
or
push
pushl
dec
mov
inc
xchg
cmpsb
les
fsubrl
dec
ja
pop
aaa
mov
lock
push
stos
rcr
leave
xor
jo
sub
fildll
hlt
ret
or
mov
or
in
cmpsl
roll
gs
stc
adc
jno
outsb
and
mov
and
imul
lock
ja
xchg
adc
push
ficomps
jecxz
xlat
js
xorl
fstpt
inc
jp
add
int
mov
cwtl
mov
fdivp
popa
pusha
out
leave
decl
pop
sub
adc
push
int
and
fs
inc
xor
dec
movsb
pop
je
testl
xchg
pop
out
adc
add
hlt
xor
push
and
pushf
pop
popf
test
or
mov
out
cmpsl
pop
aaa
shlb
cwtd
or
dec
lret
and
notl
mov
adc
inc
bound
test
fbstp
adc
mov
pushf
xor
mov
test
push
jmp
dec
and
ret
andb
in
jmp
inc
fistps
add
ficompl
and
js
addb
sbb
cwtl
dec
in
pop
or
test
mov
mov
dec
mov
fnstenv
jge
insb
push
scas
xchg
lret
xchg
and
pop
in
ret
xchg
enter
dec
fcmove
movsb
adc
rcl
cmp
sbb
jp
insl
sub
mov
jp
sub
cmpl
shl
dec
lods
xor
lods
les
sub
xor
xor
mov
cmp
or
and
shr
sbb
xchg
mov
xor
mov
adc
push
mov
mulb
dec
dec
ficompl
jbe
cld
or
xchg
insb
aam
mov
jns
inc
sub
jl
mov
lret
dec
fcmovne
loope
popf
test
mov
jns
ja
jbe
stc
fcomip
je
dec
xchg
mov
xchg
shr
es
fs
test
subl
rcr
pop
jecxz
repnz
mov
mov
aad
in
sbb
sbb
jb
xchg
xor
mov
mov
shr
mov
leave
scas
insl
in
std
push
bound
cld
jno
cltd
sti
add
lock
mov
push
jne
fwait
aad
adc
push
lods
xchg
pop
stos
ret
jg
sbb
xchg
decb
xchg
scas
into
loope
xor
mov
pop
push
popl
or
daa
or
addr16
fcomip
adc
in
gs
outsb
mov
xchg
ja
mov
xchg
jle
jp
jg
into
push
or
cmc
pop
jle
test
lret
cs
jle
stc
hlt
or
push
add
je
mov
push
imul
lret
jbe
mov
mov
jo
jnp,pn
sub
aam
cld
xchg
fs
in
lcall
sub
or
daa
cmp
shr
dec
jnp
sub
sub
push
sbb
or
adc
adc
pushf
in
push
xchg
sub
pop
popf
jb
xor
fadds
test
xchg
loop
jbe
movsb
xorl
mov
push
je
inc
push
jecxz
rcll
adc
scas
push
mull
mov
ljmp
jmp
fisubrl
jo
pop
fimull
sub
sbb
mov
inc
or
je
jp
orl
push
cmpsl
jmp
inc
lods
int
aad
enter
insb
fstpt
nop
mov
dec
iret
add
pop
imul
add
stos
out
push
adc
fstpt
leave
sub
mov
cmp
or
daa
sbb
test
cmp
in
xchg
inc
push
repnz
nop
mov
bound
jae
push
popf
xchg
push
xor
in
sbb
movsl
loop
mov
lods
and
movsb
movsl
sub
lods
mov
and
cmpsb
add
and
fwait
sbb
aam
pop
xchg
mov
push
jno
pusha
in
adc
dec
adc
cmpsb
data16
mov
rcll
adcl
shr
adc
pop
aas
daa
adc
je
dec
cmc
mov
mov
or
sub
idiv
and
pop
mov
lea
xor
pop
push
nop
xlat
gs
inc
dec
fldt
pop
bswap
pop
dec
stos
xor
outsb
repz
insb
fmull
dec
xor
mov
lods
cmp
mov
mov
mov
cmp
mov
dec
xlat
mov
mov
cmp
pop
loopne
lret
cmpsb
mov
and
inc
or
dec
pop
sub
or
dec
pop
mov
xchg
jo
sub
inc
mov
mov
gs
inc
mov
mov
inc
cmp
in
sbb
mov
mov
or
jbe
push
adc
out
adc
aad
lret
xor
nop
dec
pop
lods
daa
imul
inc
fadd
sarb
lret
arpl
inc
ffree
sub
divb
js
stos
je
mov
dec
inc
rorb
mov
leave
out
xchg
lret
add
mov
movsl
mov
sub
or
sub
sub
fldcw
mov
and
inc
ljmp
mov
xchg
xor
test
jne
xchg
cmp
push
sbb
cmp
bound
test
aas
and
sar
push
pop
lods
mov
mov
es
jae
movb
mov
pop
lcall
mov
hlt
stos
daa
adc
mov
push
lods
xchg
mov
pop
and
ret
cmp
in
sub
and
dec
cltd
pop
pop
mov
mov
test
outsl
push
pop
pusha
jl
push
subl
xchg
fcoms
in
addr16
adc
mov
sahf
mov
lods
pop
sub
into
jp
cld
dec
xor
movsl
ds
popf
sub
jno
push
rcrb
mov
call
jecxz
xchg
xchg
int3
js
pop
clc
mov
js
insb
mov
cmp
dec
fwait
mov
cmpsb
jne
cmp
add
jo
jbe
ja
xor
jge
jmp
fdivr
pop
movsl
mov
es
or
lret
mov
in
dec
outsb
jmp
insl
push
cli
jbe
cld
dec
dec
pop
ja
push
test
insb
in
aad
or
ret
stc
jnp
sbb
or
iret
adc
mov
test
clc
dec
pop
push
add
cmc
xchg
dec
xchg
mov
scas
mov
sti
les
sti
into
ljmp
mov
lock
jbe
sbb
lea
cmp
call
inc
dec
push
sub
and
sbb
push
inc
daa
iret
movsb
push
std
imul
mov
dec
adc
fldcw
dec
stc
or
insl
sti
mov
cmpsb
rcr
test
mov
or
dec
ffreep
push
cmp
sbb
push
mov
add
dec
orb
inc
std
lods
xchg
icebp
lahf
xchg
inc
mov
cmp
xor
fsub
mov
xchg
jo
push
lret
fdivrl
xor
xor
enter
dec
out
pop
mov
rclb
enter
add
add
mov
cmpsl
xor
lahf
rcll
scas
repz
into
scas
pop
in
push
xor
adc
pop
mov
mov
out
xchg
pusha
sti
int3
xchg
rorl
popa
jp
stos
sarb
sti
aam
out
cmpsl
notb
das
xor
xor
add
lahf
cwtl
fs
mov
test
cmp
testl
sub
fsubs
and
push
loopne
pushf
and
mov
pop
xor
nop
dec
xchg
sub
inc
pushf
mov
sub
mov
or
arpl
test
sub
insb
fnsave
test
xchg
lods
shl
movsl
outsb
cmpsl
or
lods
adc
prefetch
or
in
or
mov
mov
and
sub
stos
dec
dec
mov
push
jne,pn
aam
loop
xchg
js
lea
sbbb
scas
cld
cli
dec
adc
loope
sub
mov
lahf
pushf
jl
bound
mov
adc
in
sbb
sub
lahf
repz
mov
or
sahf
or
jle
ss
lahf
cmp
cs
xor
xor
add
orb
add
dec
cmp
out
adc
cltd
xchg
xor
cmpl
jno
shrb
mov
rclb
into
mov
mov
mov
xor
xchg
stc
mov
in
cmpsl
std
xchg
and
xchg
cli
mov
pop
adc
jge
jmp
jb
push
add
or
clc
fisubl
ljmp
inc
jecxz
cmp
mov
fs
add
cli
push
sub
sub
xor
test
dec
mov
imul
xchg
jecxz
xchg
jmp
dec
xlat
mov
sbb
shl
cmp
or
ja
fcomp
mov
ljmp
outsb
cld
push
and
mov
inc
xchg
inc
mov
mov
pushf
and
sbb
cmp
add
mov
and
lcall
xchg
or
pop
aad
mov
mov
inc
inc
mov
dec
sbb
into
dec
adc
lret
into
fwait
sbb
push
jg
sar
sub
js
push
xchg
fcoml
and
push
or
scas
inc
xor
in
rclb
add
add
cmp
loop
inc
lods
jb
sub
jb
test
punpckldq
adc
pop
lods
cmp
adc
pop
add
int3
cs
lea
mov
inc
inc
dec
jne
ljmp
push
dec
mov
into
pop
pop
inc
xchg
cmc
mov
dec
inc
mov
push
aam
cmp
orb
jb
fstpl
cli
gs
xlat
aam
adc
jb
sbbb
mov
and
mov
pop
mov
add
adc
aad
stos
cld
lcall
sub
arpl
mov
mov
es
bound
pop
leave
cld
in
cmp
dec
test
mov
pushf
push
pusha
xchg
mov
pop
xchg
sub
xor
inc
push
ret
sarb
aas
mov
and
cmpsb
in
push
ret
fisttps
dec
xlat
loopne
mov
xor
cmpsb
aaa
xchg
fldl
aas
sub
sete
mov
and
jbe
fwait
out
xchg
fimuls
xchg
bound
fwait
pushf
jae
pop
test
sub
loope
and
dec
xor
push
xchg
in
mov
mov
lahf
clc
cli
cmp
ljmp
enter
sub
ds
imul
dec
cli
inc
fs
stos
pop
and
inc
dec
sbb
roll
mov
pop
add
cs
mov
ljmp
adc
addr16
arpl
jno
in
jb
jle
test
pop
out
cli
icebp
push
jns
pop
add
jg
pop
sub
pop
ja
mov
push
test
sub
xor
aam
push
sub
sbb
popa
and
add
lds
sarb
lock
fcomps
mov
pop
mov
repnz
sti
mov
xor
mov
sti
or
xchg
push
bnd
xchg
mov
xor
fimull
js
inc
sbb
cmpsl
aam
xor
xchg
arpl
push
inc
jmp
mov
loop
in
push
lcall
jae
cmp
jmp
mov
cwtl
cs
push
in
icebp
pop
fidivl
orl
movl
dec
mov
in
sub
and
mov
mov
jo
mov
or
inc
pop
adc
jae
adc
test
subb
out
icebp
in
insb
jnp
ret
cmp
fdiv
aaa
clc
icebp
out
scas
sub
xchg
push
jg
cmp
inc
icebp
cmp
or
ret
sbb
and
inc
inc
inc
dec
jae
lret
dec
insl
pop
idivl
cmpsb
outsl
jecxz
cmp
rolb
push
pushf
mov
and
test
xor
fistpll
sbb
fwait
imul
mov
aam
pop
shrl
push
sahf
lahf
icebp
xor
imul
push
sub
movsl
lea
cltd
mov
inc
mov
lds
loope
cwtl
fwait
jle
sbb
pop
dec
cmp
sbb
cmp
jne
mov
adc
fwait
ret
ret
es
pushf
insl
rep
cmovg
dec
leave
popa
mov
sti
mov
int3
add
sahf
xchg
and
out
xchg
sub
push
sbb
jmp
mov
jns
adcl
mov
or
mov
or
enter
pop
test
push
ret
sub
lea
or
mov
outsl
enter
lock
or
dec
roll
ds
adc
adc
jbe
jb
mov
scas
and
out
and
xor
adc
ss
popf
je
ret
aam
cmp
icebp
shrb
mov
and
fcomps
jl
dec
das
cmp
fs
ret
add
in
jmp
fsubs
pop
das
dec
xchg
mov
fadds
mov
clc
lds
sbb
xor
push
mov
int3
insl
call
jmp
adc
inc
aam
addl
mov
jge
mov
into
cmc
dec
mov
adc
xchg
push
aam
fwait
std
movl
mov
or
adc
cmp
cmc
repnz
xor
mov
sbb
add
dec
sbb
xchg
lret
dec
in
xorl
sbb
or
push
xchg
push
or
xchg
mov
sbb
sbb
fnstenv
mov
xor
push
jo
jbe
leave
cmp
inc
sbb
outsb
in
dec
dec
aad
xor
sbb
jbe
fcompl
hlt
sub
pop
mov
jecxz
jge
or
sub
xchg
mov
insb
cmc
subb
cltd
aaa
andb
cmp
add
push
xchg
push
jp
ds
icebp
push
jb
test
hlt
sbb
xor
dec
pop
imul
mov
out
out
lret
es
xchg
insl
mov
mov
fdiv
popf
ficoms
hlt
cli
stc
aam
loope
push
out
das
mov
std
sub
xorb
sub
or
in
movsl
pop
fnstenv
xor
ud2
fsubp
insl
iret
fisttpll
cli
into
test
aaa
lods
jo
push
add
xchg
faddp
push
outsl
push
cli
setp
test
xor
xchg
cmc
out
lret
cmpsl
shr
jge
pop
ss
rolb
imull
and
add
jbe
sbb
rol
jae
and
push
shlb
in
test
add
dec
ljmp
sbb
add
lcall
jg
inc
mov
rcrl
and
push
lds
fistpll
xchg
out
mov
js
fildl
push
sbb
sub
xchg
jle
adc
flds
pop
iret
pop
push
shr
mov
scas
fnstenv
rcr
sbb
out
xchg
and
insl
fmull
push
lods
add
int3
orb
repz
lret
repnz
and
push
cmc
into
inc
lds
hlt
rolb
cmpsl
jae
mov
pusha
inc
sti
call
shlb
dec
cmp
pop
pop
xchg
shrl
lock
cmc
lret
pop
aad
mov
or
xchg
and
mov
pushf
fiadds
fsubs
xor
into
dec
in
out
ret
outsl
jge
mov
lds
les
stc
add
or
aam
mov
fsubl
sbb
out
pusha
lds
lahf
push
lock
pop
repnz
add
mov
addr16
and
push
jg
inc
push
pop
in
shlb
pop
cwtl
loopne
test
push
shll
lods
icebp
jae
imulb
pop
ja
mov
fimuls
xchg
cmp
addr16
xchg
inc
cwtl
push
in
clc
inc
pop
or
mov
dec
ds
push
stos
mov
in
sbb
push
inc
es
je
or
stos
aaa
cmc
es
das
fadds
sbb
jg
in
add
dec
out
clc
xor
add
mov
lock
or
test
add
clc
out
test
aaa
and
cld
mov
push
jg
stc
sub
xor
push
fisubs
inc
mov
xor
dec
ss
imul
adc
pop
mov
outsb
push
mov
sbb
jo
xchg
std
leave
test
dec
push
xchg
and
in
dec
jecxz
mov
xor
xor
roll
jns
aaa
add
and
imul
out
fmul
ljmp
or
xchg
cmp
fildll
iret
push
in
sbb
cmp
mov
shrl
add
sti
push
imul
xchg
pop
shrl
scas
push
inc
arpl
or
ss
adc
and
cmp
fisubrs
xchg
add
dec
nop
dec
xor
or
push
je
cmpsl
cmp
in
stos
xor
mov
movb
xor
adc
rcr
sub
arpl
ljmp
dec
push
neg
push
cmovs
mov
les
ficomps
int
dec
xchg
jmp
mov
bound
jne
or
cmp
sbb
add
lea
jne
jg
in
jl
xor
push
push
mov
push
loope
jo
xor
dec
mov
iret
das
sbb
push
xor
repz
mov
ret
push
test
inc
xor
mov
add
test
divb
sbb
mov
jge
call
mov
cmp
adc
lret
out
mov
or
dec
push
cmp
shld
ljmp
fwait
adc
fdivrl
imul
cmc
imul
dec
sbb
subb
xchg
cld
loopne
push
lcall
fs
fs
pop
in
ret
pop
mov
push
and
inc
test
mov
lahf
repz
sub
adc
scas
pop
xor
pop
lret
xlat
test
arpl
cltd
or
jecxz
xchg
aad
dec
cmpsl
inc
add
ds
inc
mov
mov
mov
hlt
cmpsl
ds
mov
movsl
jae
dec
pop
or
cli
sbb
fadd
mov
aaa
adc
pop
lret
push
dec
fwait
mov
ror
aas
iret
sahf
pop
lods
xor
mov
int3
mulb
ja
adc
pop
les
js
js
sub
insb
pop
aaa
mov
or
mov
sti
mov
outsb
sahf
fs
les
and
cmp
fldl
xor
dec
sti
icebp
outsl
jg
sbb
mov
jmp
in
or
das
ljmp
loop
pop
mov
sahf
and
cmp
mov
cmp
sbb
mov
into
fdivrs
push
mov
xchg
idivb
inc
inc
cmp
cmpb
mov
adc
sbb
inc
aaa
push
xor
fcmovnbe
clc
cmc
cli
mov
pop
es
sbb
add
add
stos
int
test
pusha
repz
mov
add
or
mov
cmc
jnp
jns
mov
jp
or
sub
cmpl
add
lods
inc
stos
jge
stc
mov
push
repz
rcr
mov
stc
or
movlps
cmpsl
cltd
xlat
adc
shlb
loopne
out
ja
jp
mov
rolb
scas
inc
adc
pop
subps
repnz
mov
rorl
jl
fsubl
mov
add
rcr
std
xchg
clc
sarl
icebp
icebp
sbb
inc
or
mov
repnz
cmpsl
or
in
mov
movsl
cmp
fs
mov
lds
ja
stc
aam
jl
adc
adc
or
rcll
fstp
lret
sahf
test
call
imul
stc
jecxz
fimull
mov
hlt
dec
mov
sbb
ljmp
aas
rcrb
daa
outsb
test
and
in
jbe
xor
imul
sub
jp
pop
inc
lock
push
insl
call
outsb
or
add
inc
in
fbstp
imul
adc
sti
pop
iret
jmp
adc
test
cmp
xchg
pop
mov
jl
cmp
movb
jo
arpl
inc
pop
cmc
iret
aaa
pop
push
iret
mov
dec
mov
clc
or
addl
setl
jo
push
mov
sub
push
into
jg
and
enter
xchg
sub
adc
inc
jo
fldlg2
push
aaa
add
jne
les
mov
adc
cwtl
filds
inc
sub
lret
loopne
and
xchg
movsl
xchg
jmpw
fsubl
frstor
mov
loopne
dec
and
fidivl
pop
jecxz
in
scas
xchg
push
fcoml
or
push
sub
dec
pop
fnstenv
repz
mov
sub
xor
mov
mov
ret
mov
mov
aaa
ljmp
es
xchg
loope
xchg
xorl
int
jmp
and
rcrb
inc
popa
mul
mov
aad
repz
pushf
std
sbb
std
loop
sbb
scas
push
adc
xchg
xchg
xor
add
lret
mov
iret
cld
sbb
out
and
jg
xchg
clc
jbe
add
xchg
push
das
pop
and
xor
xor
adc
pusha
mov
int
cmc
nop
repz
movsl
repnz
push
iret
add
insb
aam
inc
mov
mov
lods
pop
dec
sub
xchg
stos
sbb
or
sub
mov
insl
jo
into
out
fistpl
fdivl
incl
mov
xchg
scas
repnz
sub
pop
fcmovnu
xor
movsl
idivl
push
mov
push
pop
mov
rol
repnz
ret
add
sub
subl
insl
fcoms
lods
lods
loop
push
xor
dec
sbb
jno
fdivrl
mov
lret
negb
xchg
or
dec
xchg
call
pop
cmp
cmc
pop
sub
mov
pop
addr16
int3
jnp
fsubrl
stos
xchg
push
sub
sarb
pop
or
push
mov
fidivrs
sar
push
jns
hlt
popa
popa
sbb
aaa
movsl
and
xor
jg
popa
push
sbb
or
das
popa
jb
pop
aam
inc
xchg
cwtl
push
insb
sub
sub
loop
cmp
ss
mov
nop
xchg
lods
push
hlt
push
adc
mov
fcoms
imul
jb
outsl
push
jl
xor
mov
push
push
jecxz
mov
cmp
ljmp
push
cld
jne
xor
lods
mov
xchg
ds
lea
imul
leave
jge
sbb
xor
icebp
hlt
mov
jl
mov
add
dec
adc
inc
and
out
lret
push
in
lahf
xor
jmp
sbb
xchg
mov
out
adc
add
pop
cmp
in
xor
fmuls
fisubl
xor
and
xchg
addr16
xor
add
test
fldcw
dec
sbb
push
xchg
adc
es
je
stos
lods
aam
xchg
cmp
mov
gs
sbb
cmpsb
outsb
pop
xchg
and
push
pop
mov
jle
and
xchg
outsl
xor
push
cmp
jbe
jno
adc
or
cmpsb
sub
shl
cmpsb
mov
lea
mov
jae
pop
pop
push
popf
shr
ds
xor
shll
mov
iret
clc
stc
lods
and
or
pushl
repz
xor
cld
sbb
pop
mov
xchg
gs
cld
dec
sarb
mov
leave
sub
mov
cwtl
addb
xchg
subl
inc
xchg
push
jne
push
fisttps
and
repnz
mov
adcl
in
les
or
mov
inc
add
aam
cwtl
mov
pop
mov
sahf
push
cmp
es
lods
cmpb
test
mov
add
mov
int
ret
sub
and
jmp
inc
lea
add
and
movsl
fs
out
fucom
jb
int3
leave
aam
stos
aad
push
xlat
xor
movsb
in
adc
or
jnp
iret
aam
out
add
scas
inc
aas
push
push
push
rcrb
pop
rclb
cmpb
bound
fiaddl
sub
in
mov
mov
adc
cmp
mov
loope
mov
insb
decl
aas
pop
jmp
nop
pop
mov
dec
xor
je
insb
mov
and
push
xchg
pop
pop
sbb
outsb
push
cli
mov
dec
imul
das
sbb
cmp
ja
adc
cmp
iret
dec
pop
subb
and
xchg
add
jne
in
xchg
xor
fstpl
fcoms
popf
and
lcall
cmc
mov
aas
adc
fmull
fbld
jp
jo
test
inc
xor
inc
jmp
rol
cwtl
mov
xchg
fidivl
xor
call
sub
inc
mov
inc
adc
ljmp
xchg
fnstcw
test
add
jmp
cmp
cwtl
fisubl
outsb
push
push
lods
mov
test
repz
dec
insl
into
push
insl
fisttpll
add
mov
mov
aaa
sub
fucomi
out
gs
mov
mov
jle
aad
call
push
into
mov
jo
pop
jns
loopne
iret
push
xchg
rclb
mov
popf
lock
lods
xlat
clc
je
inc
jb
aas
mov
inc
pop
pop
xchg
lcall
cmp
scas
dec
inc
aaa
dec
and
dec
test
outsb
ror
xchg
loop
nop
or
adc
and
in
and
in
dec
dec
ficoms
push
cli
fucomp
ljmp
mov
fmuls
jmp
push
shr
xchg
pop
mull
mov
xor
adc
cmp
and
mulb
inc
adc
pop
mov
js
int3
inc
fimull
pop
jo
insl
jg
xchg
xor
xchg
pop
ret
and
insl
mov
ret
sarb
mov
mov
std
inc
push
push
out
cltd
mov
scas
pop
fists
into
clc
pop
sbb
pop
cmpsb
movsl
daa
popf
loop
sarb
cli
adc
push
push
jno
fsubrp
scas
stos
xchg
and
mov
addl
gs
out
aam
mov
loope
push
es
rcrl
daa
mov
gs
mov
out
mov
mov
mov
loopne
lret
pop
sahf
mov
push
mov
mov
push
adc
mov
mov
push
stos
stos
outsb
push
or
pop
mov
lahf
mov
mov
scas
popa
or
push
mov
daa
mov
iret
repnz
sbb
mov
xchg
mov
or
leave
insl
inc
inc
ret
mov
mov
jbe
add
or
and
jb
dec
clc
std
xchg
push
sub
add
subb
out
mov
dec
mov
or
movsl
movsb
xor
lea
mov
in
pop
jae
xchg
std
or
aam
xchg
filds
sub
fwait
cmp
lcall
or
test
outsl
ficomps
jae
shl
ja
jno
pop
cmpsl
dec
xchg
inc
lods
pop
xlat
f2xm1
insb
or
xchg
lahf
out
add
clc
xor
xchg
inc
dec
mov
xchg
mov
xchg
push
and
arpl
pop
cld
push
hlt
inc
daa
and
out
arpl
sbb
sub
daa
aaa
push
in
rorl
data16
into
in
inc
fimuls
pop
adc
loop
out
dec
js
insl
mov
repnz
inc
jg
mov
or
sbb
hlt
mov
sbb
adc
cmpsb
add
dec
cmp
loop
add
stc
xchg
sti
loopne
hlt
popf
outsb
dec
jp
bound
jp
push
adc
pusha
ss
gs
enter
pop
inc
jl
ret
pop
add
adc
ja
jb
xor
stos
jmp
jne
imul
and
out
adcb
pop
push
and
test
shlb
sub
pop
stos
stc
mov
sbb
adc
jl
fdiv
fnstsw
adc
mov
adc
vhsubpd
xchg
and
loop
rcr
inc
mov
mov
jb
xorb
or
loopne
lea
rorb
idivl
and
push
xchg
lds
dec
sbb
sbb
fadds
dec
test
lods
dec
pop
push
std
mov
pusha
adc
xchg
sarb
or
sti
in
jns
rcl
cmpsb
pop
mov
or
sbb
addr16
or
push
addl
and
aas
jbe
aad
daa
pop
loopne
mov
dec
jmp
arpl
mov
cs
ljmp
lds
je
jle
mov
ret
cmpsb
ret
mov
pop
adc
inc
nop
daa
xor
sbbl
hlt
xchg
pop
mov
fwait
mov
jb
adc
sti
in
xor
mov
xchg
enter
jmp
dec
ret
ds
and
jge
jecxz
lds
ret
leave
mov
shlb
call
arpl
push
inc
adc
arpl
ds
push
mov
cs
and
jbe
test
xchg
sti
inc
add
lea
fisubs
push
cmpsb
add
sysret
add
sub
and
mov
popf
imul
push
cs
out
push
into
lock
jbe
lcall
test
push
xchg
jmp
lods
inc
es
add
and
pop
jo
in
dec
jmp
int3
pop
xor
or
mov
push
cmp
imul
rcl
sarb
add
fstps
mov
push
stc
or
jp
pushf
stos
mov
pusha
jnp
sub
dec
xor
push
fcompl
popf
movsl
mov
sub
rorb
jge
mov
imul
jg
out
push
mov
push
jbe
xchg
jbe
insl
ret
mov
scas
inc
xlat
aaa
and
xchg
and
or
test
jge
mov
or
add
inc
cld
nop
xchg
test
cltd
push
in
cmp
jbe
std
fnsave
in
out
insb
pop
nop
lcall
not
lods
in
xor
xor
test
push
sbb
hlt
push
dec
aas
test
fstpt
test
lock
popf
and
push
stc
sbb
fchs
fidivl
inc
rcr
mov
lahf
adc
and
sbb
sahf
lock
aad
mov
jae
xchg
jno
mov
or
movsl
push
cmpb
subb
xor
sub
lcall
scas
cs
repz
jno
mov
sbb
testl
popf
mov
shll
dec
push
test
and
enter
push
xchg
xlat
cmp
cmp
repnz
xor
mov
insl
cmp
cmp
andl
fldcw
fstps
xchg
pmuludq
int
fldt
jne
in
push
popf
movb
jle
lahf
movsb
push
xor
sarb
and
aam
and
adc
adc
inc
cs
mov
in
push
sbb
push
jns
cli
lods
jp
pushf
mov
push
jno
jge
add
xor
adc
lods
jns
std
or
in
xor
mov
jo
inc
movsb
mov
int
out
jno
pusha
sub
mov
ds
add
or
adc
test
stos
lock
mov
xor
and
aad
gs
mov
out
insl
mov
sub
jmp
test
sub
stos
jo
sbb
dec
xchg
test
adcl
jae
pop
loope
adc
pop
shlb
fadd
add
xor
stc
movsl
xchg
mov
cld
xor
jo
sahf
push
fistps
push
jecxz
inc
lock
cs
gs
jno
fldt
sub
xchg
dec
ljmp
in
push
fstl
sub
mov
clc
add
xor
lods
popa
lret
mov
pop
or
std
icebp
inc
mov
and
jae
sub
aas
mov
or
and
dec
jl
inc
lea
push
ficomps
scas
ffree
icebp
hlt
lods
call
int3
push
shl
cmc
test
add
daa
and
xor
xchg
pop
pop
pop
pushf
outsb
inc
fxtract
scas
ret
mov
cmp
fs
out
sub
into
mov
jmp
jmp
bnd
mov
jbe
subl
movb
cmpl
outsb
xchg
push
mov
in
xchg
int
dec
movsl
and
rolb
xchg
lock
jb
jns
aas
in
and
mov
repnz
pop
dec
jns
test
dec
into
pop
rol
inc
orl
jnp
and
and
sti
addl
jl
mov
mov
lret
or
lea
roll
xlat
xor
ss
mov
pushf
ficoml
pop
insl
das
in
ja
negb
cli
popf
mov
mov
mov
hlt
leave
push
mov
and
mov
adc
int3
notl
adc
jle
int
lret
fnstenv
add
adc
dec
gs
aam
and
lods
into
adc
mov
xchg
cmp
cmp
sub
push
insl
xor
dec
push
push
decl
jecxz
clc
pop
adc
aas
mov
in
shll
dec
add
rorl
mov
push
lods
sub
dec
leave
addl
in
stos
push
and
imul
add
add
sahf
push
imul
arpl
nop
pusha
xor
or
jae
sbb
and
push
xorb
and
in
movsl
mov
cs
stos
jno
dec
mov
icebp
cmpsb
or
ret
jnp
ret
mov
cmpl
std
jae
das
mov
push
mov
pushf
jp
xorl
out
mov
sub
dec
or
call
scas
mov
test
call
or
stos
push
jl
call
in
jo
cld
xchg
aam
orl
mov
inc
icebp
test
aad
pusha
jo
xchg
repz
dec
xor
pop
jecxz
ja
mov
and
aad
inc
and
sti
jecxz
aaa
mov
insl
jnp
sbb
sub
and
lcall
mov
add
push
jne
roll
adc
stc
rcr
popa
adc
push
lahf
stos
cmp
pusha
cs
jg
mov
aad
imul
sbb
rclb
leave
scas
rorl
aam
cmp
call
push
xor
repz
sti
jmp
mov
inc
add
pop
xor
nop
out
es
jne
inc
aad
add
pop
popa
jmp
filds
pop
xchg
popf
or
pop
mov
fsubl
lods
lret
sbb
lret
fwait
lods
mov
shlb
push
rcrb
mov
bound
scas
movsl
dec
mov
add
mov
add
fwait
rcl
cmp
adc
out
push
test
push
xor
pop
lds
or
inc
pusha
mov
mov
test
push
ss
ljmp
dec
xchg
mov
scas
loop
mov
loope
adc
repnz
es
sbb
push
dec
mov
jg
inc
lahf
jl
out
icebp
jo
jl
je
out
jle
mov
mov
adc
je
jg,pt
mov
nop
ror
mov
cs
or
and
mov
inc
add
jecxz
pop
and
mov
adc
stos
gs
push
bound
push
xchg
lea
push
and
cmpl
push
clc
adc
dec
jmp
cmp
int
pop
test
idiv
pop
lahf
addr16
sahf
push
mov
push
addr16
clc
jp
sbb
sub
inc
mov
movsl
fdivs
add
adcl
decb
xchg
sahf
idivb
mov
lahf
loop
sarl
mov
stos
dec
lds
cmp
je
stc
and
insb
and
pop
mov
inc
lods
mov
lahf
mov
add
inc
or
mov
pushf
mov
cs
aas
movsl
xor
ss
mov
movsl
xor
mov
scas
mov
inc
inc
mov
dec
fcomps
int3
dec
mov
fistps
pop
movsb
inc
and
xor
inc
arpl
cmp
test
daa
cwtl
loopne
lods
pop
cmp
lahf
nop
movsb
lock
mov
popa
gs
cmp
fstpl
mov
shll
jno
add
jnp
xchg
mov
or
push
pop
popa
xchg
sub
mov
push
pop
imul
pop
add
iret
push
cmp
and
xchg
jecxz
fwait
out
mov
shlb
pop
loop
insl
mov
pop
aam
iret
mov
int
and
mov
mov
xor
shlb
negl
add
dec
shll
push
xchg
pop
inc
jge
out
or
je
add
adc
icebp
add
push
or
fildl
call
imul
mov
imul
pop
cltd
xor
imul
repnz
nop
sbb
jmp
xor
xor
mov
adc
lahf
push
dec
dec
inc
test
imul
mov
and
pop
dec
inc
stos
add
or
mov
or
repnz
sbb
or
xchg
jnp
fnsave
push
inc
loopne
jg
popa
add
imul
shll
fs
cltd
ljmp
out
stc
aas
adc
arpl
std
rorl
adc
add
mov
xchg
xchg
iret
std
xor
xor
add
imul
fcomp
jmp
dec
iret
fwait
out
xor
xor
stos
into
sti
sub
inc
jl
in
loop
or
xchg
sub
in
xor
insb
push
push
mov
push
jae
mov
into
sarb
or
ret
dec
mov
clc
mov
data16
sub
idivl
ret
insb
pop
lea
inc
dec
pop
punpcklwd
leave
addr16
inc
adc
negl
jns
insl
push
add
mov
pop
add
dec
aaa
pop
jnp
icebp
jo
roll
sbb
xor
mov
imul
lret
inc
xor
adc
je
fucomi
stos
shlb
pop
fistpl
pop
mov
jbe
or
xchg
and
sti
jmp
out
fmuls
ljmp
fimull
sub
mov
arpl
sub
cmp
and
mov
push
xchg
out
popa
loop
xor
push
daa
insb
scas
lcall
stos
add
fbld
pop
nop
imul
jle
xor
add
add
push
ljmp
outsb
gs
mov
push
and
push
pop
lock
nop
lret
add
iret
inc
push
cmp
mov
and
js
xor
mov
pop
jne
push
pop
ds
div
rorl
ficoms
jmp
aaa
out
nop
pop
sbb
cmpsb
jg
pop
cmpsl
xor
jecxz
xchg
mov
into
out
xchg
dec
repz
dec
iret
dec
int
xor
pop
pop
cmp
in
sub
jno
sahf
push
test
sbb
imulb
jne
inc
pop
data16
push
stos
mov
pushl
sbb
pusha
inc
sbb
adc
jle
mov
inc
and
mov
ret
and
lds
pop
adc
nop
test
test
fldt
dec
dec
jmp
enter
imul
add
icebp
or
xchg
jmp
insb
jg
adc
shll
arpl
mov
or
cltd
test
mov
dec
outsl
nop
cmp
and
mov
scas
xchg
stc
movsl
and
movsl
loopne
push
add
fs
int3
pop
dec
mov
loopne
subb
out
ljmp
sbb
lea
aam
sub
sti
pop
icebp
mov
mov
outsl
mov
xor
jb
cli
in
arpl
call
and
test
orb
jl
jae
xchg
fcomi
iret
fdivrl
ljmp
mov
repz
lret
fnstsw
mov
out
cmp
scas
mov
sbb
test
test
sub
sti
xchg
test
rolb
and
mov
push
pop
shll
jge
xor
pushf
test
sub
xchg
or
mov
pop
cmp
int3
repz
shll
jbe
shll
call
ja
call
dec
fldl
jne
clc
insb
cltd
cs
jno
push
xor
xchg
lds
pop
loopne
insl
jge
pop
cmp
sti
sbb
dec
mov
or
out
add
pop
jmp
dec
xchg
adc
mov
add
pop
out
inc
psubd
ror
hlt
or
jb
fs
mov
repz
in
push
add
pop
cmpsb
push
mov
add
xlat
xchg
std
and
xchg
dec
cmc
mov
outsl
mov
outsl
jmp
aas
inc
pop
mov
add
rcrl
push
bound
jne
cmpsb
sub
scas
ss
arpl
ds
jge
mov
sbb
pop
clc
push
icebp
push
mov
pop
call
orl
mov
push
divb
or
ss
pop
jbe
sub
inc
add
mov
js
mov
dec
rorb
mov
loopne
sbb
sbb
in
inc
xchg
jo
fwait
popf
dec
ficoms
mov
or
xchg
jl
jl
test
cmc
adc
test
std
inc
sbb
repz
sub
frstor
jnp
rol
cltd
mov
outsw
adc
ret
stos
fcmovbe
and
int3
mov
in
push
sbb
leave
popf
loope
xchg
fimuls
push
dec
push
cltd
xchg
mov
insl
sub
inc
mov
mov
fdivrp
mov
push
rol
sub
dec
aaa
stc
pushf
push
xchg
add
imul
or
sbb
sub
test
test
push
mov
xor
mov
mov
shll
pusha
loope
stos
fistl
or
cs
sbb
jnp
pop
sub
rcrb
sub
je
cltd
pop
push
lret
push
rcrl
je
adc
xor
cmpsb
fnstenv
dec
sbb
jns
icebp
mov
add
jo
add
int
outsl
mov
mov
int
inc
add
jo
cli
rcrl
rcrl
fsubrl
out
cwtl
and
adc
mov
pop
push
mov
and
dec
push
aaa
adc
jno
in
idivb
sub
adc
xor
cmc
mov
jbe
cmp
add
cld
add
xchg
in
inc
sbb
imulb
cmc
mov
mov
aaa
jae
jbe
out
adc
inc
pop
mov
dec
cmc
mov
sub
mov
fldcw
xchg
jnp
or
jns
push
loopne
into
ja
fimull
dec
mov
clc
push
popf
out
int3
sub
das
pop
jbe
xchg
push
jne
inc
scas
cmpsl
ss
push
inc
xor
pusha
lds
cltd
push
into
into
pop
cmp
xchg
dec
xchg
push
data16
cmp
or
das
adc
pop
add
dec
ss
cmp
in
cli
jne
mov
fs
in
pop
cmpsl
test
and
insb
ljmp
mov
inc
fidivrl
imul
xchg
xchg
lods
or
lret
enter
inc
loopne
aam
rcl
in
outsl
fdivrs
das
cli
test
ret
in
push
in
test
mov
mov
cwtl
sti
push
pop
jne
and
lods
xor
ja
mul
es
xor
scas
testl
pop
aad
dec
in
xchg
call
pop
push
pop
cmpsl
inc
fwait
xor
lcall
je
call
shll
mov
push
inc
push
stos
dec
xchg
mov
pusha
adc
aaa
jo
mov
jno
in
rcrb
hlt
mov
xchg
jb
xor
flds
repnz
insb
jp
xor
sbb
inc
mov
or
mov
inc
jp
call
scas
cli
into
rclb
jmp
xor
sub
xchg
sub
pop
xchg
stc
mov
shlb
xchg
push
mov
xor
jbe
and
std
cltd
cmp
ret
mov
push
dec
adc
faddl
lcall
cs
insl
jne
sahf
lea
and
lods
xchg
and
enter
daa
and
xor
movsb
dec
stc
fucomp
mov
into
and
cltd
or
sub
ljmp
in
pop
loopne
ret
fs
hlt
hlt
call
iret
outsb
js
fisttps
movsl
ds
dec
pop
pusha
lods
and
out
es
repz
dec
sub
mov
aaa
dec
adcl
imul
push
jbe
and
out
inc
insb
lds
xor
ja
cmc
mov
scas
sub
inc
ljmp
pop
int
push
icebp
jmp
pop
mov
xor
iret
in
shrb
push
xor
int
pop
repnz
insl
std
jge
mov
shl
out
popa
mov
repnz
in
or
jle
repz
insb
repz
into
or
xchg
pop
inc
sar
psubq
inc
dec
in
gs
mov
negl
ljmp
test
aas
addl
hlt
aad
stos
cmp
push
or
fdivs
dec
adc
dec
stos
lahf
sub
idivl
rcr
and
xchg
aam
js
ret
test
in
mov
mov
pop
scas
arpl
mov
cmp
lods
enter
push
sarb
and
fisttpll
ret
jmp
sbb
xor
sub
jp
lret
shlb
scas
adc
or
dec
enter
and
dec
add
jne
movsl
push
aad
jb
adc
test
shlb
negb
sahf
out
mov
mov
subl
push
movsb
inc
fdivs
in
fld
pop
jmp
out
push
adc
inc
es
daa
cmp
mov
clc
rclb
lods
das
arpl
push
incl
fdivl
repnz
pop
or
addr16
outsb
mov
insb
bnd
fildl
jb
ss
inc
hlt
xchg
rolb
cwtl
shlb
push
and
sbb
scas
mov
gs
inc
pushf
ss
sahf
adc
lcall
outsb
mov
cwtl
in
mov
xchg
scas
or
mov
sbb
add
and
ja
fs
sbb
add
fcomi
or
mov
cmpsl
mov
jae
pop
out
icebp
dec
pop
rcrb
mov
dec
push
adc
mov
adc
jmp
loopne
enter
popf
rol
jg
pop
daa
jae
cmpsb
sbb
inc
sbb
sarb
and
cmp
add
daa
pop
popf
or
imul
xor
testl
fcomp
jl
ret
scas
insl
shrb
fsubl
out
data16
sti
pusha
icebp
ja
adc
mov
adc
enter
je
inc
inc
divb
xlat
push
or
loopne
fwait
aas
add
pop
xchg
std
push
cmpsl
adc
popa
stos
or
sbb
fdiv
and
fbstp
popf
rcll
pop
stos
pop
into
mov
pop
loopne
dec
adc
cmp
testl
jne
jmp
scas
fildl
dec
inc
jb
adc
sub
and
jge
lock
push
mov
mov
inc
push
sub
js
jmp
shr
bound
pop
or
stos
inc
lods
movsl
mov
fwait
inc
adc
sub
enter
clc
and
mov
iret
pop
mov
sub
sub
pop
pop
out
aad
push
outsb
or
sbb
mov
or
les
fimull
cmp
xlat
leave
test
jmp
dec
mov
pop
pop
repnz
jbe
jecxz
into
out
adc
cmp
sbb
mov
mov
test
aaa
mov
cmpsb
test
adc
test
test
hlt
rclb
cli
idiv
cmc
mov
or
push
xlat
dec
xor
mov
dec
xchg
sbb
push
loope
les
shr
pop
cmp
jge
jle,pn
jbe
pop
dec
ret
int
mov
and
add
mov
ja
int3
popa
repnz
ret
repnz
cltd
push
or
xor
das
ficoms
popf
mov
loope
dec
push
push
push
push
push
movsl
pop
addb
hlt
xchg
push
and
fbstp
pop
cmp
jge
pop
and
cwtl
jg
les
mov
pop
cmpl
sub
fnstsw
lahf
xchg
mov
mov
vpcmpuq
movsb
subl
adc
js
push
push
push
stc
and
mov
pop
mov
mov
push
sbb
inc
mov
inc
xor
adc
mov
lds
data16
popf
xchg
xchg
je
es
pop
leave
mov
movsb
dec
test
out
mov
ja
bound
lret
jae
repnz
out
mov
inc
jns
call
xor
dec
pop
or
xchg
cmp
ret
test
adc
movb
js
stos
icebp
inc
in
ret
in
ret
in
xchg
jns
sbb
insl
mov
lods
ror
pop
cmc
cmp
dec
fldenv
push
aad
in
ror
mov
add
mov
addl
stc
mov
jecxz
sub
mov
not
in
gs
fwait
es
jno
push
sbb
mov
je
jno
xchg
aam
shlb
add
adc
or
testl
mov
cli
cmp
mov
sbb
out
lods
inc
and
cs
sub
mov
sub
jecxz
mov
push
and
in
popa
sbb
pop
decl
aam
fiaddl
inc
jmp
enter
xchg
sub
adc
mov
in
dec
pop
fistps
out
stos
sbb
bound
mov
push
jp
xchg
mov
dec
shlb
jle
mov
shufps
scas
inc
and
sbb
jbe
rorb
push
inc
xor
lcall
call
gs
pop
xchg
leave
fldenv
mov
and
icebp
sbb
lock
pop
out
jp
push
ficoms
popa
in
jnp
jmp
js
push
andb
sub
jae
fyl2x
xor
ss
xchg
xor
dec
sbb
insl
sbb
jb
lea
test
push
sahf
fs
adc
repz
aaa
daa
cmp
int
xchg
out
addr16
pop
into
jmp
sahf
jecxz
call
mov
adc
and
cmp
or
loope
xor
out
xor
clc
and
and
std
aas
pop
shrd
loope
add
xor
adc
or
inc
mov
lret
push
mov
int3
push
stc
hlt
pop
xchg
xor
sbbb
mov
cmp
fs
movsl
adc
inc
xchg
mov
jno
out
inc
repnz
outsb
fbld
popa
mov
daa
mov
push
mov
mov
ret
rcrl
mov
or
inc
int3
sub
stos
repz
pop
dec
dec
aad
arpl
jmp
or
lret
xchg
mov
mov
stc
stos
stos
loopne
daa
mov
fwait
out
notl
xchg
addr16
xchg
push
hlt
or
add
shl
push
loope
mov
pop
aaa
pop
or
pusha
pop
pop
scas
mov
jno
cmp
and
or
inc
daa
cli
icebp
in
and
lds
inc
rorl
and
pop
and
out
sbb
jl
jp
cmp
inc
mov
jp
mov
js
pop
cwtl
dec
jns
lahf
xor
ffreep
sti
xor
cmp
imul
mov
mov
inc
inc
pop
in
outsl
mov
mov
xor
scas
scas
sbb
fs
push
mov
cltd
sbb
shll
shrl
lods
cmpsl
out
jmp
imul
inc
inc
dec
mov
js
repz
dec
jg
bound
out
xor
lahf
sub
in
scas
dec
lcall
sti
jns
fdivrl
inc
fildll
xor
adc
mov
mov
sub
pop
inc
out
jno
mov
fistl
xor
les
jno
xchg
adc
mov
sbbb
jge
xchg
outsl
pushf
stc
sub
fucomp
push
fdivs
test
dec
outsl
pop
cli
sub
mov
sub
pusha
mov
sbb
scas
push
lods
and
add
lds
ror
inc
inc
loop
test
in
pop
xchg
sbb
adc
add
shll
sbb
pop
jbe
not
xor
push
mov
sti
add
jo
mov
mov
hlt
imul
jp
pop
sbb
ficompl
outsb
cmp
repz
or
jns
pop
jno
sbb
mov
shl
cmp
popf
push
ss
mov
mov
xchg
xor
scas
gs
adc
add
mov
xor
add
mov
push
push
pop
xlat
shrb
sbb
adc
fistpl
mov
jbe
std
lods
fcompl
and
outsb
les
xchg
add
mov
and
and
out
sbb
icebp
imul
cmpsl
push
rcrb
incb
jo
mov
iret
popf
jl
lret
clc
lcall
insb
jns
pop
cwtl
icebp
sub
jl
adc
mov
data16
push
enter
push
ljmp
sub
inc
jle
movsl
and
lods
clc
jmp
and
sarb
scas
adc
imul
shlb
iret
push
mov
jo
push
mov
rol
jbe
das
lods
adc
or
xchg
outsl
in
adc
dec
jae
leave
sub
jne
sub
icebp
xor
lods
test
cs
mov
mov
add
and
adc
inc
add
mov
xchg
fmuls
xor
jo
cmp
mov
mov
xchg
ds
mov
pop
mov
nop
push
cmc
push
mov
xchg
test
sar
mov
addr16
mov
or
cs
scas
aad
adc
mov
push
ljmp
jnp
mov
mov
rcrl
push
push
xchg
inc
and
out
push
sub
scas
push
insb
or
sbb
pop
pop
dec
jmp
imul
inc
adc
mov
rorb
lcall
rcrl
jg
dec
shll
sahf
sub
pop
jae
mov
outsl
mov
imul
lahf
push
stos
push
or
and
pop
into
scas
xchg
cli
mov
and
aad
arpl
or
pusha
stos
je
fistl
pop
mov
stos
mov
movsb
dec
adc
cltd
add
pushf
shrl
mov
xchg
leave
dec
fsubl
xchg
aam
rcll
mov
add
mov
and
fimuls
insb
push
mov
fs
ret
sub
mov
pusha
jns
and
or
sub
ds
sbb
clc
push
cmpsl
addb
aad
push
xor
scas
push
je
push
mov
scas
cmpb
or
scas
push
lahf
and
repz
adc
jbe
sub
ja
ja
out
repnz
mov
dec
mov
rolb
ja
sahf
movsb
inc
xor
popf
das
sub
add
xor
push
jo
ret
sbb
xor
or
icebp
dec
mov
and
addb
cmp
pop
add
mov
pop
cmpsl
pop
xor
xchg
push
sbb
aad
push
loopne
push
dec
and
inc
gs
dec
fdivr
cmp
popf
push
addr16
push
test
ljmp
pop
adc
mov
lea
sbb
outsl
mov
aaa
add
mov
faddl
mov
mov
mov
sub
or
sbb
adc
jb
pop
xchg
imul
xchg
adc
pop
data16
and
insl
jns
add
int
push
out
pop
xor
out
and
lock
sarl
iret
mov
and
and
jb
ret
cmp
in
jnp
xchg
dec
aam
inc
hlt
push
jp
jl
push
mov
fidivrs
out
add
pop
push
popa
int
pop
clc
daa
and
in
outsl
ja
fwait
shl
cld
stc
or
adcl
jp
cmp
xchg
mov
mov
mov
not
dec
mov
jg
mov
push
pop
jo
sti
jmp
es
xlat
adc
xor
cmp
pop
outsl
inc
aaa
cmpsl
insl
or
and
sbb
in
sbb
pmuludq
lds
inc
inc
jae
add
pop
rorl
jmp
push
xor
loopne
mov
ljmp
mov
pop
jb
jge
leave
or
mull
sbb
cmp
insl
mov
mov
pop
aad
loope
cwtl
mov
std
test
xchg
cwtl
add
pushf
push
lods
aam
xchg
push
mov
jp
fdivrs
aas
sub
lahf
push
into
fwait
mov
jmp
dec
xchg
jmp
je
inc
sub
xchg
loopne
adc
fisttpl
lret
mov
dec
jecxz
mov
rcrb
addl
inc
push
jbe
je
es
nop
xor
xchg
inc
test
xchg
addl
lret
or
jnp
dec
enter
dec
nop
enter
daa
add
enter
push
popf
sub
pop
mov
fcoms
lea
rclb
sbb
and
int3
pop
sbb
leave
cmp
mov
pop
lcall
nop
sahf
xchg
ret
out
mov
mov
and
aad
add
fstpt
sbb
jle
orl
mov
adc
aas
dec
cmp
mov
pop
shll
js
lret
xchg
notb
pop
mov
fmuls
dec
fsubs
sarl
xor
inc
sub
fwait
dec
and
ljmp
and
add
dec
mov
mov
sarl
and
inc
jg
loop
inc
call
push
lods
bnd
data16
leave
decb
mov
movsb
ljmp
iret
xchg
and
cld
cmp
add
push
sub
xor
jl
pop
push
subl
fnstenv
jp
divb
push
add
push
scas
dec
test
faddp
cmp
jns
imul
pop
cmp
dec
ds
and
imul
adc
jo
push
test
push
xor
mov
jae
xor
scas
sbb
jmp
shrl
aam
movsb
mov
add
mov
mov
fcmovnb
sti
in
negb
cli
xchg
test
lods
sub
jne
pushf
cmc
and
adc
and
jmp
or
test
pushf
cmp
xchg
out
out
adc
and
cld
fldt
test
lds
sahf
stos
xor
int
mov
out
icebp
addr16
xlat
iret
int
lock
fisubl
xchg
pushf
mov
jno
inc
cmp
add
adc
pop
fcomp
ljmp
dec
pop
fdivrs
and
add
push
xchg
pushf
mov
lock
pop
sub
and
stos
pop
mov
andb
mov
mov
adc
das
jle
subl
or
mov
inc
adc
mov
sub
aam
pop
das
dec
addr16
sti
cld
mov
jl
out
jmp
sbb
ss
aaa
imul
sbb
iret
inc
call
es
cmc
or
repz
adcl
push
int
cmc
xchg
mov
xor
dec
lds
jmp
push
movsl
es
and
inc
mov
mov
mov
jbe
test
in
inc
jecxz
cld
fs
xor
aas
out
jne
mov
pop
data16
cmp
inc
cmpsl
loopne
subb
movsb
add
add
es
ret
addr16
jmp
xlat
xor
sub
sub
xchg
mov
pop
fistpl
cmpsl
cmpsb
jp
cmp
or
fs
in
outsl
lods
pop
jle
scas
mov
cli
mov
inc
push
add
shll
les
cmpsl
jmp
shld
jecxz
lahf
jle
xchg
push
dec
loopne
add
int
mov
xlat
mov
mov
icebp
scas
mov
pop
cmpsl
sbb
xchg
xorl
xchg
adc
cmp
push
xchg
fnstsw
xchg
add
imul
sbb
jg
pop
jnp
and
out
in
cmp
mov
ss
mov
rol
in
fstps
mov
xchg
xchg
sbbb
sbb
rclb
add
decb
mov
and
or
jnp
jae
mov
ret
andb
je
mov
jp
fadds
and
out
push
shl
sbb
stos
sbb
movsb
and
or
arpl
in
into
or
mov
lret
add
imul
sub
shlb
andl
jo
push
mov
adc
scas
adc
pusha
pop
xchg
test
pop
or
jo
jns
mov
mov
jg
andl
popf
push
sar
inc
xchg
inc
out
add
push
repz
xorb
aad
xor
push
xor
xchg
fmul
ds
fadds
pop
jnp
inc
mov
mov
into
aad
and
xor
pop
mov
stos
jle
bound
sbbl
insl
inc
xor
mov
mov
jmp
idiv
mov
int
lds
cld
or
mov
stc
mov
movsl
xchg
mov
shr
sbb
insl
or
mov
cwtl
xor
cltd
test
outsl
adc
sub
sub
jne
push
int
sbb
call
scas
mov
jns
nop
movsb
mov
stos
dec
dec
xchg
cld
push
mov
imul
mov
aas
xchg
fmull
pop
xchg
movb
rol
mov
xor
cltd
adc
fdiv
or
divb
sub
test
xchg
in
pop
mov
xchg
jb
adc
mov
add
test
pop
sbb
popf
mov
cmpsb
loopne
in
jmp
fsubrs
les
push
jmp
movsl
out
push
push
fcomps
ret
mov
loopne
and
sub
xor
insb
inc
stc
icebp
test
data16
test
xor
fists
add
fistps
nop
fimull
cs
cli
aaa
push
lea
popf
gs
sarl
jecxz
mov
add
shll
jns
mov
xor
pushf
es
enter
or
xchg
lahf
pop
loope
or
in
mov
jnp
mov
add
or
mov
ffreep
ds
mov
pop
fimuls
sub
push
int3
scas
adc
add
dec
pop
ficomps
or
dec
jo
lea
fcomps
pop
xor
scas
mov
arpl
aas
mov
stos
es
push
and
sub
add
das
push
push
pop
mov
sarb
and
das
outsb
mov
into
sti
popa
add
lods
adc
jbe
loop
cwtl
int3
movsb
or
popa
mov
push
sub
xchg
pop
mov
daa
clc
pop
dec
mov
push
adc
out
inc
dec
or
jp
aad
mov
xchg
jnp
outsb
cmp
dec
popf
rcr
ja
push
cmp
cltd
jge
mov
jmp
data16
pop
add
xchg
inc
pop
cld
lret
test
lods
xchg
lods
xchg
cmpsl
inc
stc
mov
cli
bound
lea
cld
pop
pop
and
inc
mov
mov
pop
cmpsb
stos
dec
and
push
mov
xchg
test
inc
xchg
int3
sarl
lahf
cs
push
or
je
xchg
mov
push
daa
cmp
mov
push
mull
push
cltd
imulb
leave
nop
dec
orl
rorl
pushf
out
cmpsl
xchg
sbb
or
push
psubw
cmp
dec
nop
pop
mov
les
jle
push
aad
inc
shrl
rorl
lret
notb
pop
shl
mov
xchg
addr16
iret
icebp
ss
sub
xchg
mov
xchg
dec
fsts
push
roll
xchg
push
and
in
add
dec
into
stos
xor
scas
movsb
push
inc
push
lods
push
out
bound
jl
jl
inc
dec
mov
or
test
mov
js
push
jl
scas
sbb
imulb
fidivrs
addr16
add
jl
or
movsl
xorl
or
dec
roll
test
dec
xchg
int
std
xlat
dec
cmpsb
sarl
sbb
jmp
push
push
or
jns
mov
mov
mov
insb
and
xor
mov
popf
in
faddl
rcrb
or
or
pop
inc
pop
clc
idiv
pop
push
jbe
bnd
mov
les
cmpsl
aam
or
fldlg2
lods
sub
popf
mov
pop
stos
inc
dec
ret
add
ss
pop
sarb
jnp
mov
sub
jle
fldt
pop
inc
xchg
xchg
push
jp
test
pop
cwtl
xor
mov
mov
lcall
xchg
roll
xlat
out
xor
pop
adc
insb
test
dec
ljmp
xor
repz
pop
push
icebp
daa
and
add
out
sbb
in
sbb
fimull
cwtl
mov
mov
fnclex
cmpb
push
fwait
xchg
mov
xorb
sarb
or
and
pop
jl
ret
sahf
rsqrtps
aaa
cld
jne
pop
sbb
adc
sub
mov
xor
lock
negl
shlb
xchg
dec
mov
fwait
jb
push
cld
int3
push
cmc
mov
cmp
dec
std
push
inc
inc
push
cmp
pop
sbb
jns
mov
pusha
cmp
stc
daa
and
repz
xchg
stc
orl
loopne
cmpsl
xorl
adcl
inc
sbb
push
jg
imul
lahf
mov
or
jg,pt
jge
adc
dec
loope
jno
push
sbb
out
dec
jns
jmp
or
loop
fstps
sbb
dec
out
pusha
adc
icebp
ret
mov
shl
gs
push
xchg
sub
iret
sub
push
mov
icebp
dec
or
adc
lahf
ret
sbb
mov
adc
push
xchg
sarb
leave
daa
iret
push
pop
jo
test
aaa
push
push
pop
xchg
xor
dec
pop
xchg
pop
mov
test
xchg
fbstp
pop
imul
fs
adc
frstor
pavgw
aaa
mov
pop
icebp
sbb
jnp
and
cwtl
test
repnz
fcoms
popa
dec
add
lcall
imul
dec
push
mov
push
cld
scas
fistl
lret
add
faddl
sbb
mov
cmp
cmp
shl
xor
and
or
outsb
mov
xor
mov
js
and
xor
es
lahf
mov
fists
fiadds
jle
mov
xor
xorl
cmpsb
in
aad
rorb
out
fcmovne
xorl
mov
jno
or
mov
push
scas
movsl
mov
adc
mov
pop
iret
mov
adc
rorl
cld
sbb
cmp
xor
pop
xor
jmp
cmp
fstl
rcl
sub
jmp
push
pop
outsb
ljmp
sub
sbb
lds
mov
push
pop
push
lahf
push
imul
outsl
std
cmc
popf
out
jecxz
pop
or
push
dec
or
js
sbb
xchg
insl
lods
insb
push
daa
mov
test
mov
xor
sub
mov
mov
xchg
es
sub
pop
pop
shlb
test
push
movlps
mov
gs
addr16
dec
cli
mov
pusha
imul
dec
xchg
dec
fdivrp
enter
ret
and
nop
cltd
xlat
cmpsb
dec
pop
push
into
xor
pop
imul
cmp
stos
movsb
aad
lods
sub
add
dec
xchg
cmp
movsl
repz
js
mov
fsubp
jle
xor
fcmovb
lods
jbe
xchg
push
out
xchg
pop
jns
mov
sti
jge
mov
mov
sbb
sbb
jno
repnz
sti
xchg
dec
or
lock
pop
out
int
mov
andb
neg
ljmp
orl
mov
xchg
negl
popf
mov
into
inc
mov
mov
inc
adc
mov
into
fisttpl
sbb
sub
add
mov
cmpsb
adc
mov
pop
add
aad
ret
pop
adc
sub
mov
mov
fsubs
mov
fs
aam
je
mov
lock
push
out
mov
fcoml
mov
push
int3
adc
mov
iret
push
std
out
dec
loop
xchg
inc
sub
mov
lret
cmp
ja
push
add
inc
jnp
pop
mov
pop
movsb
dec
insb
cmpsl
outsl
das
iret
jns
sti
enter
xchg
cmpsb
sbb
insb
inc
fdivrp
ds
dec
mov
or
xchg
xchg
xor
mov
adc
sahf
jo
sbb
add
inc
imul
xchg
mov
cwtl
iret
inc
arpl
mov
add
or
pop
stc
es
mov
lea
xchg
pop
adc
fisubrs
sub
loopne
push
adcl
adc
push
repnz
sarl
leave
movsb
mov
jns
setge
mov
outsl
dec
into
inc
test
iret
push
adc
jae
pop
mov
inc
shlb
imull
lock
inc
fsubs
out
push
outsb
pusha
jl
sbb
aad
pop
xlat
push
loope
sbb
scas
jg
mov
dec
sub
pop
dec
popa
gs
and
xchg
inc
scas
mov
cmp
lods
aas
cmp
dec
loopne
xor
and
mov
clc
sbb
pusha
out
xchg
add
aam
std
mov
in
or
loope
push
lock
push
pop
pop
cmp
outsb
pop
push
aaa
mov
imul
add
cltd
sbb
mov
imul
and
popf
call
xchg
sbb
inc
leave
push
jecxz
inc
mov
mulb
xor
push
loop
push
sti
adcl
bound
shlb
bound
and
jecxz
push
mov
outsb
nop
cmp
lret
adcb
lcall
loop
sub
mov
xorb
push
xchg
xchg
movb
stc
shl
mov
stc
je
mov
xor
notb
push
inc
stos
test
scas
pushf
dec
sub
pop
xchg
pop
or
and
jne
pop
fst
adc
subl
push
mov
fsubrl
pop
xlat
pop
jecxz
mov
cs
jg
popf
sarl
cmp
in
mov
jns
mov
sub
dec
jl
dec
call
es
es
enter
negb
or
pop
mov
data16
mov
mov
inc
jne
insb
out
pop
ret
das
fs
in
es
out
mov
dec
cmp
mov
aam
cmp
jmp
xchg
mov
dec
int
mov
cmp
xchg
add
sbb
ret
push
xor
int3
lods
xor
sti
andb
adc
or
cmpsl
sbb
pop
xchg
aam
cmc
outsb
stos
jno
cli
fmull
mov
inc
mov
icebp
xchg
test
cmp
in
push
insb
jecxz
insb
push
mov
mov
icebp
in
ja
xchg
pusha
loopne
leave
iret
and
jmp
leave
movsl
lret
mov
lds
lea
arpl
data16
inc
lods
inc
into
jo
ds
aam
andl
mov
scas
mov
add
push
jmp
and
sub
ljmp
xor
adc
ret
aad
push
adc
jg
fcoms
mov
bound
je
adc
mov
invd
xor
cltd
push
adc
xorl
outsb
xor
into
jbe
push
cmp
and
push
adc
or
jmp
rolb
lods
rol
bound
faddl
inc
leave
dec
mov
mov
and
sub
fiaddl
pop
int
add
out
or
inc
pushf
scas
mov
push
inc
cwtl
pop
ja
call
inc
sub
ja
jge
inc
jae
mov
fwait
scas
inc
in
mov
mov
sbb
insb
and
cld
pop
jle
jmp
lods
loope
pop
hlt
jae
push
cli
mov
xchg
sbb
repnz
dec
mov
orl
clc
pop
cmc
jecxz
xor
pusha
sub
xor
add
les
inc
cwtl
les
test
pop
fsts
push
in
jp
sub
dec
lds
call
xor
outsl
xor
loopne
in
lock
add
inc
adc
cmp
xchg
jo
inc
lret
xchg
test
push
gs
dec
push
jbe
fmuls
adc
pcmpgtw
add
inc
and
outsl
cmp
xor
sar
sbb
jmp
jb
sbb
shlb
cmp
loop
fs
ds
and
das
inc
ret
adc
cmpsl
shrd
cmp
adc
movsl
xor
pushf
or
sbb
push
or
das
inc
pop
imul
das
jg
push
cmpsb
call
push
repz
jmp
cmpsl
dec
dec
js
bswap
pop
xchg
les
mov
and
mov
or
inc
cmp
sbb
loop
mov
incl
mov
ret
out
mov
sbb
adc
xchg
mov
enter
xchg
aaa
sub
loopne
orl
ret
add
jnp
fnstcw
inc
rcll
mov
xchg
aaa
xor
xor
adc
jle
xor
push
rcrl
int3
cwtl
add
nop
cltd
add
adc
pop
add
xor
xchg
jecxz
mov
je
xchg
push
pop
cmp
mov
jno
fsub
dec
int3
fs
pop
cmp
jp
sub
xchg
sti
lods
or
repnz
clc
stos
pushf
in
xor
adcb
lret
shll
sbb
or
stos
bound
lcall
mov
sub
rorb
dec
dec
and
scas
leave
fsubl
lret
test
xchg
xchg
pop
icebp
outsl
cs
je
push
outsl
pop
ljmp
or
loopne
pop
mov
addr16
and
std
sarl
les
mov
cmp
and
sti
ss
inc
aaa
in
aaa
inc
and
pop
ljmp
dec
push
xchg
add
iret
cli
or
loop
ljmp
or
nop
mov
push
movl
data16
xor
pop
in
fisubs
and
or
das
xchg
fcompl
xorb
push
sbb
cmp
or
sub
daa
jb
jns
pop
mov
fstpl
cld
orl
mov
scas
mov
mov
mov
jbe
pop
sbb
push
dec
out
xchg
adc
pop
mov
cmp
daa
dec
dec
popa
ret
mov
dec
push
lahf
pop
clc
jbe
fdivr
leave
fcoms
mov
fimull
cltd
mov
jle
mov
or
stos
push
and
nop
js
ds
xchg
mov
les
sbb
dec
and
xchg
loope
and
and
lcall
test
add
add
push
lds
leave
nop
pop
push
inc
dec
xor
fbld
mov
jns
adc
les
ljmp
jae
xor
ds
sbb
sbb
add
mov
das
push
mov
nop
jp
xchg
rcl
sbbl
divb
jp
jnp
push
pusha
gs
mov
jne
jge
loop
jmp
lcall
ret
lds
inc
xor
cmp
not
push
mov
mov
ds
ror
addr16
xchg
fwait
ret
dec
dec
push
in
cld
pop
push
pop
int
mov
adc
cmp
mov
mov
sub
fisubrl
orl
lahf
mov
adc
mov
fadd
movsb
rorl
testb
fwait
mov
ret
and
sbb
inc
xchg
cmpsb
fsts
jb
push
lahf
mov
ret
xchg
stos
movsb
out
imul
push
outsl
mov
and
sub
adc
lret
sbb
lock
xor
loop
gs
xlat
push
icebp
xlat
jne
sub
push
int
add
fmul
mov
je
xor
cld
jbe
inc
out
push
andb
clc
repz
xorb
fnstenv
mov
ss
jp
adc
test
shl
jo
sub
add
mov
iret
mov
adc
adc
adc
dec
lret
aad
xchg
lret
pop
lahf
pop
adc
mov
lods
cmp
jmp
mov
inc
pop
shl
mov
jns
and
je
push
pop
mov
pushf
mov
enter
mov
mov
aam
jecxz
mov
rolb
jmp
mov
sbb
pop
stos
mov
negl
jae
cmp
pop
mov
fistl
lret
pop
lahf
mov
div
pop
ds
fldl2e
jge
fdivrs
cld
lea
sahf
test
and
sub
dec
ficompl
int3
aam
fwait
lcall
xor
or
pop
cli
ljmp
rorl
lock
shrb
or
push
jns
xor
push
push
and
adc
push
jle
insb
cmc
cld
dec
jecxz
aad
stc
and
cltd
inc
fldcw
shll
in
es
adc
mov
cmpsl
in
xor
mov
in
negl
dec
and
shlb
rolb
add
push
xchg
aad
incb
jbe
lock
dec
sbb
imul
pop
cltd
sahf
cltd
push
inc
fiaddl
sub
and
pop
inc
xchg
sub
add
sub
mov
sub
xchg
adc
mov
xor
pop
mov
aaa
inc
inc
int
scas
cmp
in
jno
sub
push
adc
sbb
xchg
mov
outsl
in
fdivs
xchg
les
jno
pop
ss
andb
arpl
jp
imul
pushf
jg
repnz
popa
xchg
lcall
loopne
xchg
pop
adc
or
stos
test
mov
xchg
or
dec
mov
inc
jmp
daa
imul
pop
push
mov
dec
ss
and
fs
mov
jle
mov
push
mov
rcrb
movl
and
pushf
in
add
out
sub
loope
into
aam
cmp
mov
test
add
add
test
jp
insb
sti
imul
iret
adc
mov
jge
stos
mov
mov
insb
out
lea
imull
push
dec
push
jge
fdivrs
inc
push
int3
loope
pop
das
call
cmpb
mov
fwait
sbb
addl
daa
xchg
cmpsl
mov
les
daa
inc
scas
mov
pushf
dec
out
gs
pusha
repnz
cmp
cmp
in
outsb
xchg
adc
hlt
cmp
mov
faddl
jecxz
rolb
or
push
scas
cmp
addb
or
inc
sahf
out
xchg
lahf
cmp
push
pop
inc
movsb
hlt
sub
ret
inc
mov
iret
or
mov
fmulp
push
neg
dec
push
xor
jb
or
mov
je
dec
rcrb
imul
in
push
mov
pop
cmp
adc
xchg
mov
out
in
sbb
lcall
xor
outsb
mov
mov
add
cs
push
pop
sub
push
mov
fiaddl
cli
jns
in
jge
ss
and
add
idiv
std
int
inc
dec
mov
xor
pop
xchg
das
int
xchg
inc
mov
arpl
les
cmp
js
jae
sbb
mov
loope
fsubp
cmp
mov
fwait
pushf
xor
xor
out
aas
fcomip
insb
sbb
popa
sbb
das
mov
mov
add
dec
shll
imul
je
jg
je
and
xchg
arpl
inc
jb
fmul
push
cli
movsl
inc
jecxz
push
push
pop
scas
mov
pop
in
mov
xor
jae
xor
cltd
lods
leave
jae
mov
data16
aaa
pop
inc
mov
insb
cmpb
cmovne
sbb
lahf
bound
cld
push
ficompl
repnz
sbb
popf
push
in
int3
insb
sub
imul
loope
test
fistpl
out
or
mov
push
cmpsb
pop
sahf
movsl
scas
and
rorb
or
mov
xor
push
mov
jbe
dec
test
push
xchg
pop
cmpsl
dec
fsubrs
mov
pop
pop
cli
jg
sahf
divl
fwait
dec
call
adc
cmp
and
mov
jl
or
fs
mov
sub
push
dec
das
std
cli
or
add
mov
incl
mull
js
push
enter
stos
xor
jae
fcomip
pop
fsubrp
movsb
daa
sub
nop
fwait
xchg
jle
push
dec
and
push
out
push
sbb
lds
js
cmpsb
loope
fnstcw
mov
push
loope
ss
jge
sub
stc
and
push
movsb
pop
xchg
sub
cmp
cmpsl
lock
pop
adc
sahf
mov
mov
inc
in
push
xchg
data16
scas
xor
stos
cmpsl
inc
cmpsl
push
push
xchg
fldlg2
fists
and
cmp
mov
repz
dec
aam
nop
fmull
pop
xor
arpl
fiaddl
sub
lahf
pop
and
mov
test
xor
scas
sub
push
ret
mov
sub
mov
xchg
mov
sbb
jecxz
dec
push
xlat
push
filds
xchg
cmpl
push
dec
or
jb
mov
ljmp
ret
ljmp
and
cld
into
cmpsb
in
inc
repz
sub
or
popf
cmc
pop
test
push
imul
fs
add
arpl
and
ss
cwtl
dec
cwtl
fcmovu
jmp
outsb
andb
sbb
sarb
jmp
jg
add
movsl
add
xor
test
dec
in
mov
mov
clc
or
stos
fildl
push
outsb
enter
cmp
dec
dec
movl
in
add
cmp
rcll
cmp
pop
dec
pop
sub
nop
and
stc
xor
mov
int3
mov
in
testl
mov
fsubrs
repnz
sbb
int3
xchg
sub
movsb
sbb
mov
sbb
insl
imul
data16
or
jmp
fsub
ficoml
lahf
mov
xchg
lcall
iret
popf
or
repnz
jnp
mov
mov
xchg
mov
movsl
jb
test
dec
lods
and
dec
in
cmp
in
cmp
mov
jo
inc
in
mov
push
pop
mov
gs
ret
push
lea
lret
or
xchg
mov
andb
js
xor
outsl
pushf
mov
mov
mov
mov
dec
scas
test
inc
jmp
xor
cmp
push
push
lds
inc
popa
sbb
in
ja
mov
lret
rcl
in
sbb
cwtl
push
xor
sarl
dec
repz
popw
dec
pop
out
gs
popa
rcrb
mov
mov
es
arpl
jae
mov
in
lret
std
push
push
daa
insl
lds
and
sbb
xchg
cmc
dec
mov
cmp
dec
adc
mov
pop
lods
and
clc
add
arpl
inc
and
aas
iret
fcoml
sbb
pop
fucomi
loopne
cli
or
daa
pop
pop
outsb
mov
je
enter
mov
pushf
xor
push
xor
test
shlb
mov
jne
xchg
ret
dec
add
ja
cmp
cltd
sub
in
enter
adc
outsb
push
pop
movsl
movsl
pop
outsb
add
inc
dec
mov
push
cmp
dec
je
mov
jns
jmp
or
adc
addr16
sahf
out
decl
filds
popf
push
mov
mov
lahf
mov
js
inc
cmpsl
dec
popa
adc
rolb
mov
jnp
lahf
aaa
fists
mov
pop
ljmp
arpl
fldenv
movsb
mov
shlb
addr16
std
lcall
test
test
stc
repz
add
ror
cwtl
icebp
adc
xor
add
mov
out
aad
push
fisubrl
pop
out
push
inc
sub
push
push
insl
mov
negb
push
xor
hlt
dec
fildll
mov
lock
stos
bound
or
adc
sub
mov
rcll
jmp
repnz
loop
out
xchg
add
pop
data16
repz
add
test
pop
dec
mov
or
sahf
pop
sub
ljmp
cwtl
inc
push
xchg
cmp
mov
cmpb
cli
push
gs
sub
adc
xchg
sub
pop
mov
fidivrl
xlat
cmpsl
cmc
aas
sbb
mov
inc
cli
int3
inc
pop
and
inc
xchg
xor
movb
adc
push
cmpsb
fnstcw
mov
call
lcall
icebp
imul
inc
sarb
push
insl
xchg
push
push
std
pushf
repz
jnp
dec
jbe
or
and
les
push
insl
xchg
or
push
scas
inc
push
jnp
xchg
popf
and
test
cmpsl
inc
push
dec
pop
mov
mov
add
ss
xor
outsl
fisubrs
push
mov
cmp
scas
ret
lret
andb
pushf
mov
sub
pop
in
gs
dec
mov
push
pop
mov
lcall
aaa
push
push
lods
ja
ja
sbb
cltd
push
loop
push
inc
mov
mov
or
dec
jle
sub
push
sbb
das
ret
in
dec
dec
test
sbb
leave
sub
loopne
fisttps
push
adc
pop
mov
push
mov
mov
sbb
in
add
push
or
pop
xchg
pusha
test
mov
into
sub
jb
test
cmpsb
outsb
mov
loop
cmp
mov
push
mov
mov
clc
lods
leave
daa
or
test
loope
fisubl
or
pop
adc
mov
push
mov
mov
push
test
shll
clc
dec
insl
shrb
repnz
pop
rolb
dec
testb
mov
lds
imul
fldl
adc
pop
push
jno
sbb
loop
mov
daa
adc
dec
xor
daa
or
repz
outsb
lret
jo
add
sub
adc
sbb
xor
push
leave
imul
jns
ja
pop
data16
lret
popa
cs
inc
in
mov
repz
repnz
sub
shl
insl
lods
or
mov
std
loop
test
mov
loop
lret
pop
mov
pop
cmpsb
fwait
sti
or
repnz
xchg
dec
inc
push
mov
adc
jecxz
stos
mov
sub
mov
jmp
mov
dec
mov
test
in
sarl
lcall
add
add
gs
int
pop
xor
sbb
fmull
cmp
into
cmp
ret
pop
cmp
scas
shlb
lret
call
adc
pop
in
lods
arpl
push
or
xchg
mov
pushf
xor
incl
dec
lahf
push
jge
cld
outsb
cli
stos
pop
xlat
sahf
push
inc
ds
inc
rcr
add
ljmp
ljmp
sub
cli
mov
in
push
inc
jo
cld
push
mov
push
rorb
enter
arpl
sbb
mov
mov
push
adc
das
cmpsb
out
testb
cmp
and
push
fsubrs
and
pop
ret
pop
push
fidivrl
dec
shll
imul
adc
cltd
jb
and
lea
addl
adc
adc
clc
cmp
scas
lahf
push
loop
stos
or
scas
leave
xchg
adc
mov
push
test
je
adc
or
pop
leave
sti
sbb
jo
pop
xorb
jge
adc
imull
mov
push
and
or
mov
xor
out
pop
pop
mov
jae
xchg
add
into
push
gs
add
mov
adc
push
push
cli
cmc
xor
pop
int
cmpsl
add
mov
push
lret
mov
mov
cmpb
add
push
mov
lret
mov
aam
push
inc
sbb
sub
bound
lods
mov
out
mov
pusha
or
inc
xor
mov
shl
into
scas
xchg
incl
js
mov
cli
pop
mov
insl
push
xor
sub
int3
and
mov
sbb
dec
dec
sbb
and
in
adc
mov
stc
inc
mov
pop
add
enter
pop
mov
mov
out
inc
cmp
shlb
nop
push
mov
add
lret
imul
mov
sbbb
out
sbbl
ficoml
xlat
mov
test
mov
nop
dec
or
lcall
mov
mov
pusha
cmp
push
push
lods
shll
stos
sti
push
mov
sub
dec
adc
stos
pop
add
cmpsl
pop
js
lods
out
filds
add
dec
cmp
ljmp
push
push
sub
sti
and
xchg
cmp
mov
testb
in
push
dec
loope
mov
cli
mov
jg
xchg
ficoms
shl
fcompl
cmpsl
add
cmpsb
push
jp
adc
adc
mov
clc
mov
imul
push
cs
pop
mov
xor
iret
jge
pop
scas
pushf
adc
sbb
insb
cltd
pop
sbb
dec
insl
aaa
dec
call
adcl
adc
test
sbb
and
and
mov
sub
cmpsl
mov
dec
mov
fcmovne
xchg
dec
jnp
jo
sub
nop
pop
lock
dec
xchg
loop
sbb
je
int3
push
adc
mov
scas
inc
in
fsubl
rcrl
push
mov
push
hlt
dec
mul
imul
add
leave
xor
xchg
inc
sbb
aaa
cmpsb
push
int3
je
movsl
mov
popa
lahf
sub
dec
cmc
lea
daa
arpl
xor
xchg
or
aaa
sbb
and
pmaxub
insb
jmp
mov
sub
into
sbb
loopne
scas
sub
cli
pop
into
add
mov
xor
sbb
mov
lea
jnp
pop
cmp
loopne
nop
cwtl
sahf
loopne
lret
sub
xor
jmp
daa
or
or
and
mov
sarl
testl
cmp
pushf
pop
push
push
xor
decb
and
xchg
jbe
test
sbb
leave
xchg
sbb
pop
jns
lahf
test
mov
fldcw
push
leave
mov
nop
sbb
aas
int
outsl
push
xor
inc
cmpsl
add
mov
and
xrelease
movsl
jae
shl
xor
outsb
push
dec
das
jo
and
cs
addr16
sbb
pusha
push
ljmp
orb
sar
cmp
repz
mov
inc
or
cmp
push
adc
ja
or
mov
cmp
bound
jg
and
stc
mov
jbe
fistpl
sub
cmp
pop
pop
mov
movb
hlt
adc
and
cmpb
or
sbb
out
or
fmuls
push
sar
lds
sbb
mov
dec
xchg
inc
das
cld
xchg
nop
orb
iret
and
jns
cs
inc
pop
jle
add
xor
shlb
add
and
fsts
cli
mov
cmp
adc
inc
mov
mov
or
cld
mov
stos
idivl
jbe
iret
cmpsb
xlat
adc
jbe
dec
mov
loope
in
fdiv
adc
mov
inc
iret
lods
mov
call
aad
dec
xchg
add
add
jecxz
hlt
test
lret
jmp
pop
xchg
mov
or
lea
test
rcll
popa
fidivl
push
mov
adc
mov
mov
in
iret
xchg
fnstcw
out
out
add
sbb
and
inc
jno
test
cmp
inc
mov
inc
xorl
xchg
add
lcall
adc
ljmp
cmp
jge
adc
ljmp
and
xchg
scas
mov
add
sahf
sub
adc
das
imul
mov
or
mov
jae
dec
scas
push
lock
push
imul
daa
movsl
or
pop
push
lds
mov
or
sub
mul
mov
jp
lds
push
mov
imul
mov
ljmp
push
mov
mov
xchg
fisttpl
shll
je
sub
cwtl
ret
cwtl
cmc
xchg
insl
jb
call
addr16
mov
push
pusha
or
inc
je
mov
mov
mov
xchg
out
sub
push
push
jle
ret
adc
add
add
sub
xor
fidivrl
cmc
movups
ss
mov
inc
pop
jno
dec
cmp
lahf
nop
inc
dec
or
or
or
fimuls
loopne
sub
jnp
pop
outsb
push
test
pop
push
dec
cmc
and
loopne
xor
in
pop
movsb
xor
addr16
fistpll
mov
or
adc
add
inc
fmulp
cld
pop
cli
ret
ja
sbb
les
sbb
in
lods
xor
mov
dec
cmpsb
clc
data16
lock
lock
icebp
push
insl
cmp
mov
mull
cmpsl
adc
es
sbb
loopne
sbb
dec
mov
jae
mov
sbb
dec
adc
out
add
xor
cltd
dec
cmp
cmp
sub
xor
xor
test
pop
out
sbb
push
sbb
and
pop
neg
lods
add
xlat
inc
sbbl
call
cmpsb
adc
lret
xor
iret
lods
clc
cmpsl
pop
stos
jb
xor
fbld
add
ss
push
sarl
dec
lods
lahf
add
pop
das
xchg
notl
popa
push
fists
negb
jl
xlat
shl
js
mov
pop
pop
lret
and
repnz
sbb
icebp
xchg
dec
fldenv
lret
cmp
popf
test
adc
repz
xor
imul
stc
sbb
enter
push
stos
inc
mov
push
and
pop
and
mov
cmp
mov
aam
ljmp
sub
ss
cmc
jmp
pop
cmp
loopne
scas
mov
jge
inc
jae
fadd
shrb
pusha
iret
pushf
scas
adc
loopne
lret
cmpsb
insl
daa
jle
pop
lock
lds
xor
test
mov
std
test
lods
pop
cmp
das
imul
popa
sbb
push
aaa
stos
inc
outsl
addb
jo
or
mov
negb
sub
adc
sbb
jp
mov
jbe
insb
push
inc
jecxz
sub
xor
mov
sub
jmp
cmc
xor
rorb
add
sti
xchg
fisttpl
pop
cmpsb
jne
jl
pop
ljmp
call
mov
stc
sahf
insl
lock
hlt
add
pop
shrb
lds
push
jge
push
pushf
jg
mov
adc
pushf
jl
scas
jle
sbb
dec
sub
sub
lret
adc
push
shl
mov
sbb
or
pop
push
outsl
xchg
ret
pop
push
std
sub
outsl
lds
and
xchg
sub
xchg
xchg
les
je
mov
and
lahf
loop
loopne
pop
aaa
pop
xor
into
jb
inc
xor
mov
inc
cwtl
xlat
test
fists
sub
int3
clc
jbe
xchg
ret
js
jl
insb
push
add
inc
jp
fadds
rcll
mov
test
pop
xchg
subl
daa
ret
xchg
jmp
pop
push
push
aas
mov
subb
mov
mov
test
test
movsl
pop
push
jmp
out
inc
shll
stos
outsl
leave
jmp
ss
add
jae
sub
call
pop
in
add
push
or
mov
or
sub
sub
xor
cmp
xchg
mov
push
mov
rolb
push
das
lret
fucomip
cmc
xchg
and
cmp
adc
stos
rcll
dec
enter
sub
shl
mov
push
inc
jecxz
mov
adc
outsb
push
xchg
loope
dec
cwtl
adc
sbb
lea
sbb
dec
fsubrp
mov
sbb
shl
daa
loopne
cmpsl
mov
fnsave
xchg
out
ss
sbb
push
jmp
enter
xchg
ja
mov
das
or
ret
in
sahf
das
push
pop
add
jnp
cltd
pop
mov
fs
into
mulb
cmp
mov
cld
jl
insl
or
xchg
mov
cs
adc
inc
loope
lods
pop
mov
fsts
xchg
test
lret
lret
neg
mov
out
push
sub
sub
add
lcall
push
les
pop
ret
dec
in
jl
mov
lds
mov
int3
fld
adc
add
push
fnstcw
sbb
fldl
mov
fst
or
cmp
add
and
and
lds
inc
dec
popf
xor
dec
xchg
mov
test
mov
or
jno
in
xor
mov
mov
mov
movsb
stos
mov
scas
and
add
les
sub
js
mov
mov
into
loop
xchg
cltd
scas
push
addr16
mov
cwtl
or
test
xor
fdivl
xchg
insb
jg
int3
rcrl
aam
es
push
push
xor
mov
decl
pop
ljmp
xchg
push
stos
push
mov
add
mov
sti
mov
call
sbb
ja
into
adc
int3
cmc
cmp
sub
mov
mov
sti
xchg
inc
mov
inc
test
cmp
or
movsl
jo
inc
outsb
imull
hlt
loopne
mov
iret
shr
push
mov
addl
lret
pushf
xlat
adc
insl
sub
xchg
pop
ret
mov
sub
loop
jmp
mov
imul
loopne
clc
dec
pushf
xchg
or
lods
mov
lods
jl
mov
sub
ja
repz
push
or
dec
mov
sub
jle
icebp
add
cld
inc
mov
shlb
push
sbb
lods
fbstp
inc
adc
sub
inc
lock
std
cmp
jns
sbb
jo
or
xor
fildl
push
pop
inc
push
repnz
movsb
not
jnp
adc
aas
adc
aas
pop
cld
and
inc
cmp
test
jmp
cltd
lret
jbe
add
aaa
jl
push
ljmp
xchg
imul
jne,pt
xchg
xor
rclb
xchg
lahf
jb
mov
xchg
push
test
fidivrl
addr16
clc
shrl
push
in
ja
pushf
repz
pop
xchg
inc
test
sbb
and
shrb
jb
pop
dec
jo
outsl
cmp
fs
xchg
jne
insb
loope
mov
xor
in
stc
call
mov
mov
mov
mov
pop
xor
xor
adc
mov
push
dec
jo
out
mov
cld
mov
add
in
pop
or
test
mov
mov
and
out
adc
inc
movsb
andl
mov
stc
fadd
pop
jecxz
sbb
lods
hlt
push
pushf
sti
imull
mov
ljmp
sub
repz
jne
adc
or
mov
mov
paddusb
pop
cmp
dec
rcll
mov
add
mov
imulb
cmpsb
sbb
fcmove
into
fadds
outsb
push
add
ds
pop
push
sub
fs
js
and
mov
cmp
jno
dec
xchg
and
and
mov
mov
xchg
daa
mov
xchg
and
cmp
sarl
inc
add
popf
hlt
add
cmp
and
sub
xchg
in
dec
pop
roll
jno
add
les
fdivp
cmpsl
out
push
inc
mov
jl
inc
push
cmp
mov
xorb
aad
dec
or
add
je
in
or
xor
mov
pop
test
sbb
push
sbb
dec
lods
mov
call
lret
popa
jbe
xlat
pop
cmp
sar
shl
test
shlb
pop
inc
shll
call
out
add
sbb
mov
mov
testb
aad
addl
je
out
add
add
outsb
iret
mov
fwait
mov
inc
dec
scas
fcomps
addb
and
movsb
das
mov
in
pop
repz
jnp
dec
fldl2e
arpl
push
push
mov
mov
aaa
adc
out
fisttpl
jge
cmpsl
mov
adc
fstps
cmp
cmp
cli
shlb
popa
test
and
cmpb
mov
mov
div
sar
mov
clc
jae
je
mov
cmpsl
mov
pop
push
mov
mov
hlt
cvtps2pd
add
dec
inc
adc
sahf
mov
xchg
xor
mov
arpl
pop
inc
sti
mov
lods
movsb
pushf
shrb
popa
out
in
imull
lock
insl
xor
addl
xchg
xchg
enter
jae
and
pop
iret
jb
dec
les
sub
jg
lea
dec
out
cli
movb
inc
sbb
inc
xor
dec
or
or
fs
outsl
dec
mov
pop
add
xchg
pop
pop
jge
les
add
mov
dec
pop
push
dec
push
ljmp
inc
and
mov
in
data16
mov
xchg
add
cmp
push
into
xchg
push
in
repz
or
loop
push
in
add
mov
popf
mov
pop
jns
call
jmp
ds
mov
jns
push
scas
xorl
add
or
sbb
inc
adc
fs
mov
and
iret
popf
xchg
pop
mov
out
stc
lods
mov
push
enter
fdivs
inc
xchg
cmp
mov
cmp
push
sbb
mov
or
mov
aam
mov
push
adc
inc
sub
icebp
xor
sbb
js
lret
lcall
dec
enter
mov
sbb
in
jae
adc
xchg
pop
dec
pop
icebp
call
dec
xchg
shll
pop
push
aad
jl
or
or
movsl
cli
test
mov
xchg
outsl
out
inc
inc
ds
add
lret
inc
push
and
les
fwait
push
pop
and
outsl
add
add
rclb
jns
cmc
cmp
cs
sti
mov
std
xor
pop
push
pop
imul
jno
push
push
jne
dec
add
cmp
xlat
cltd
and
int3
call
xor
outsb
loope
hlt
sub
and
fmuls
dec
push
mov
call
punpckhbw
sub
hlt
mov
sub
outsb
in
bound
popf
in
xor
cld
jge
dec
lock
mov
dec
shrl
add
pop
mov
jg
mov
mov
in
mov
push
loopne
xor
lcall
cwtl
and
ljmp
hlt
add
inc
movsb
gs
add
add
xorl
iret
data16
xor
lds
push
sub
jg
mov
push
mov
mov
pop
dec
imul
shl
push
rcll
loop
gs
sbb
lds
in
rcr
pusha
cmp
pop
inc
sub
js
sub
fldenv
xchg
push
sub
pop
ljmp
cmp
movsl
rcrl
fs
pushf
test
jle
xchg
and
bound
mov
jg
jo
jnp
mov
mov
es
stos
push
dec
jnp
adc
mov
test
dec
mov
xchg
cmp
insl
nop/reserved
insb
cmp
mov
sbb
int
fcompl
movsl
add
int3
stos
test
ljmp
xchg
fs
mov
andl
sti
scas
xor
inc
push
xchg
dec
adc
add
aaa
cmp
mov
add
push
or
idivl
rolb
jl
stos
mov
push
jae
dec
test
push
jb
scas
punpcklbw
xor
or
in
in
adc
and
dec
movsl
pop
xlat
and
adc
or
cmpsl
ljmp
mov
enter
push
dec
nop
jns
add
mov
mov
add
jl
mov
add
aad
add
mov
ds
dec
xchg
adc
fdivrl
lds
push
je
or
push
imul
mov
aaa
not
pop
cmp
test
in
adc
push
xlat
sbb
push
jno
and
out
mov
pushf
fs
jp
mov
scas
inc
mov
jge
adc
mov
pop
out
xchg
iret
mov
test
test
js
xor
and
loope
in
adc
ret
cmp
xchg
push
sub
xchg
push
push
sbb
cmc
mov
jne
add
push
scas
out
push
fdivr
lret
test
roll
inc
xlat
shll
shl
mov
mov
lods
sbbl
cmp
stos
sbb
out
dec
adc
sub
xor
pop
call
mov
repnz
data16
mov
int
sbb
inc
pop
out
aaa
add
adc
nop
lock
xchg
clc
xchg
stos
enter
rorb
in
pushf
push
ljmp
pop
push
ljmp
cmc
repz
lods
mov
mov
jae
adc
pusha
xor
mov
mov
loope
js
pushf
cmpsl
in
jp
sbb
cmpsl
cltd
xor
cld
mov
clc
es
sub
sbb
cmp
dec
pop
mov
sti
jbe
pop
lahf
je
xor
add
push
outsb
cmc
xchg
int
inc
dec
xchg
aam
test
movsb
inc
ja
lods
stc
pop
sub
lahf
inc
push
out
mov
inc
push
in
xchg
ss
lods
cld
xchg
lea
in
xor
xchg
push
lds
pop
inc
les
imul
lahf
mov
push
inc
mov
sub
pop
cs
mov
mov
mov
out
ret
jae
mov
fnsave
push
imul
int3
cmp
add
shrb
aas
jbe
sub
fs
mov
mov
jge
mov
and
pop
call
or
inc
insl
rorb
jbe
data16
clc
sahf
loope
mov
or
icebp
leave
push
push
mov
loop
cwtl
mov
xchg
fwait
push
jo
sub
sub
ljmp
sub
mov
jbe
xchg
and
into
sbb
mov
jmp
jecxz
mov
fsubr
adc
lahf
cltd
in
ror
into
js
lea
int3
outsl
fdivrl
cmp
jp
push
xchg
cmpsl
sarb
faddl
mov
aam
sub
clc
and
adc
aad
ja
pop
cmp
and
xchg
pop
scas
inc
data16
test
sbbb
or
rcll
mul
faddl
test
push
fisttps
pushf
fwait
pop
fnstsw
sub
mov
sub
xor
push
fidivrs
ret
repz
xor
cmp
sbb
jae
negl
add
iret
mov
jbe
mov
pusha
mov
sub
mov
and
jg
lods
data16
xchg
lret
orl
mov
inc
xor
xchg
sub
jmp
mov
xchg
xchg
cmp
pushl
sbb
mov
jno
fstps
stos
push
aas
ja
repz
add
test
mov
test
and
hlt
ret
adc
jl
xor
stos
pushf
sbb
inc
cmp
daa
inc
and
in
ret
nop
xor
mov
cmp
lret
cs
dec
cmp
cmp
dec
pop
dec
xchg
enter
mov
ret
xchg
pop
mov
xchg
xchg
imul
xlat
pop
xchg
loopne
pop
pop
cmpsl
or
iret
pop
sbb
mov
nop
iret
mov
push
jae
xchg
pop
jne
fxch
fistl
aam
inc
outsl
add
pop
es
insl
mov
push
das
or
or
fcom
hlt
dec
sbbl
out
ss
jo
pop
push
dec
jmp
jg
mov
add
push
jge
or
jp
jl
jbe
xchg
sub
mov
sub
xchg
mov
call
mov
scas
lahf
push
fwait
and
and
jge
xor
jo
clc
and
sbb
std
or
lock
ret
xchg
xor
dec
movsb
jmp
push
push
mov
movsl
rol
mov
mov
inc
gs
adc
xchg
cmp
jno
inc
mov
or
pop
test
dec
data16
scas
mov
sbb
jno
cmc
into
and
aad
push
cltd
push
pushf
cmp
adc
popa
inc
mov
pop
dec
fcomps
and
leave
mov
sbb
loope
mov
push
dec
repz
cwtl
std
das
adcb
insb
ret
inc
sbb
cmp
ljmp
fldenv
sbb
inc
xchg
addr16
mov
and
jmp
popf
stc
sbb
sbb
push
dec
xor
push
pop
in
adc
mov
popa
lock
pop
push
je
xor
sub
jae
dec
adc
out
lods
pop
icebp
lock
cmpsb
inc
lds
data16
mul
adc
test
push
and
bound
push
xor
ficomps
movsb
push
fdivrl
or
daa
shrb
push
inc
adc
push
pop
dec
in
sub
or
xchg
gs
pop
jb
out
outsb
insb
and
daa
and
pop
sub
mov
xchg
pushf
jne
hlt
test
mov
repnz
subl
or
loope
jg
or
sub
sbb
xchg
test
hlt
mov
push
ret
sahf
jae
lods
adc
sub
and
enter
mov
sbb
mov
push
lret
pop
mov
fistl
xorb
mov
mov
call
movsl
popf
xor
push
fnstenv
cld
cwtd
mov
push
pushw
aaa
pop
dec
xchg
mov
mov
cmp
add
ret
test
or
scas
mov
pop
mov
lods
sub
int
dec
pop
cwtl
mov
inc
push
out
and
ja
scas
sbb
jns
addr16
aam
pop
push
shl
lods
enter
or
out
add
push
testb
sbb
xchg
mov
jp
add
pop
mov
addr16
outsl
push
push
adc
ljmp
dec
mov
push
es
pusha
xorl
pusha
es
jle
adc
adcl
fisubrl
das
push
xchg
sub
mov
rcl
add
cmp
push
cwtl
sbb
in
jecxz
out
or
jne
sbb
pop
pop
aas
cmp
jg
lods
jae
mov
cmpsb
movsb
mov
mov
add
mov
es
test
push
ret
cmp
ret
lahf
add
inc
cli
mov
xchg
dec
test
mov
in
fwait
xchg
xchg
push
loope
jl
jmp
dec
sub
ret
mov
mov
push
add
jl
jnp
or
bound
clc
stos
adc
mov
dec
sbb
lahf
pop
push
stc
cmp
movlps
xchg
scas
cmpsb
push
mov
aad
push
lea
xchg
jg
jno
ja
enter
stc
adc
jb
shr
sub
and
shr
adcb
mov
fbstp
loopne
ror
xor
cs
dec
loopne
xor
jecxz
lcall
push
arpl
fwait
add
dec
imul
jecxz
push
jmp
cwtl
push
adc
push
icebp
ss
pushf
iret
cmpsl
rclb
out
and
xor
xchg
clc
jb
stos
mov
jae
sub
scas
cs
std
sbb
fdivrl
loopne
add
leave
out
jbe
mov
sub
push
push
pop
cmp
mov
std
test
push
or
and
notb
push
mov
sbb
data16
inc
inc
xor
popa
mov
repnz
xchg
in
mov
add
ja
enter
dec
xor
push
enter
pop
enter
mov
sub
push
lods
sbbb
jo
xchg
pop
loope
addb
in
push
lods
cmp
pop
leave
mov
cmp
clc
adc
aam
mov
into
ficompl
pusha
push
clc
mov
xchg
data16
movsb
popa
xchg
fldenv
lret
push
fwait
mov
lock
in
sbb
dec
in
fwait
xchg
jb
mov
insb
in
and
or
andb
jle
repnz
fcoml
testl
inc
cli
sar
daa
jle
adc
out
dec
sub
repnz
sub
push
cmp
outsl
test
sti
out
cmp
leave
jne
push
push
pop
pop
xchg
inc
pop
data16
add
cmpsb
ficompl
push
call
rolb
ret
repnz
sarl
ljmp
xchg
mov
js
ret
sbb
addb
sub
and
push
int
mov
mov
repnz
adc
push
or
out
dec
cmp
shrl
push
or
adc
dec
pop
mov
popf
in
dec
pop
xchg
cmp
cmpsb
std
dec
insl
popf
xchg
fwait
jb
mov
pop
and
xchg
lock
or
out
push
sbb
push
fists
xchg
lahf
pop
loop
xchg
loopne
mov
adc
mov
lret
jle
xor
rcr
movsl
add
xchg
cmpsb
mov
inc
jnp
das
mov
dec
in
push
add
cmpsb
mov
jecxz
cmp
scas
cmpsl
stc
fs
fnstenv
dec
lcall
rcrb
or
dec
inc
add
add
and
add
cmp
ficompl
adc
cmp
cltd
outsl
arpl
iret
jecxz
rcr
xchg
addr16
imul
lret
mov
pop
pop
fnsave
imul
push
pop
clc
fsubl
fstpl
dec
out
add
mov
mov
mov
push
pop
loope
shll
jmp
cmp
icebp
push
cmp
in
and
xchg
shrb
fistps
out
mov
inc
or
xor
mov
rcrb
add
jbe
cmpl
sub
pop
lret
inc
pop
adc
inc
popa
mov
movsl
jl
cmp
jecxz
aam
and
add
std
jecxz
pop
popa
bound
fstpl
jne
jae
sbbl
jno
mov
rolb
repnz
jae
pop
jnp
pop
loop
ret
cmp
cmp
sahf
cmp
sub
fstpl
leave
iret
notb
lea
jo
xlat
outsl
jb
sbb
enter
inc
push
les
rcrl
stos
and
nop
add
lret
pop
aaa
sahf
lds
push
cmp
xchg
cli
mov
cmpsl
mov
xchg
sahf
es
mov
test
push
insl
mov
ret
push
cmp
cltd
movsl
xor
lock
jl
aad
xchg
or
cmpsb
adc
ljmp
scas
fistpl
mov
or
out
rorl
jmp
dec
inc
mov
aaa
loop
aam
pop
push
lods
mov
pop
sti
jo
dec
jle
and
adc
inc
mov
sti
shrl
das
std
and
cmpsl
sarb
dec
xchg
add
xchg
adc
cs
lods
sub
int3
cmp
xchg
mov
xor
je
in
adc
cld
sub
test
xor
pop
jns
jl
mov
inc
mov
xchg
add
jp
cmp
fwait
lret
daa
and
aam
adc
data16
jmp
pusha
pop
jo
cli
sub
daa
and
cltd
lods
mov
cmpsb
lock
xchg
mov
shrl
xchg
data16
mov
enter
fstpl
scas
adc
mov
out
jbe
loopne
sahf
scas
jbe
rorb
pop
sbb
xchg
lods
inc
arpl
sbb
mov
mov
add
push
or
loope
sahf
sti
jne
jge
gs
sarl
push
mov
xchg
or
adc
xchg
jns
rorb
push
mov
fwait
gs
nop
adc
jne
inc
aad
push
rorl
xchg
clc
sbb
es
fs
add
pop
stc
push
test
push
mov
addl
inc
push
jne
das
and
sbb
es
dec
inc
in
xchg
dec
fisttps
hlt
lea
loopnew
testb
ja
les
cltd
dec
scas
push
movsb
fdivs
fidivrs
xchg
call
rcll
mov
scas
fdivs
xchg
cld
mov
mov
sti
das
adc
push
pop
stos
daa
stc
xchg
pop
xor
pop
test
xchg
jmp
ret
repnz
fcmovb
add
xchg
add
mov
ja
mov
repnz
into
sbb
insl
lahf
xorl
loopne
pop
jmp
mov
mov
xor
negb
or
xchg
cmc
and
js
aam
inc
jns
lret
loopne
or
popa
cli
jl
push
test
dec
push
cmpsl
notl
cltd
dec
loopne
loopne
cmp
psllq
xchg
push
add
sahf
push
cmp
push
or
sub
pusha
dec
data16
and
stos
rol
out
mov
xor
imul
inc
xor
push
inc
xchg
cmpl
xchg
stos
movsl
loop
mov
dec
addr16
shlb
mov
insl
movsl
xchg
iret
fdivs
jge
out
mov
sti
mov
push
mov
cmp
ret
std
out
out
push
sti
les
cmpsb
sbb
sub
pushf
xor
test
mov
sahf
and
pop
lods
iret
push
adc
pop
pop
aaa
mov
lock
stos
in
in
call
int3
test
lock
dec
mov
adc
xlat
mov
inc
or
in
test
loopne
adc
repnz
in
xor
mov
jl
or
sarb
mov
std
xchg
int
shlb
das
out
pop
mov
adc
sti
test
mov
push
jb
jo
popa
cmp
mov
push
dec
repz
addr16
jae
movsb
in
aad
push
inc
xchg
sub
clc
insl
les
std
cmpsb
test
hlt
sbb
fwait
dec
mov
test
or
pop
leave
sbb
push
out
push
mov
inc
lods
inc
xor
sbb
nop
pop
outsl
jns,pt
dec
ja
bound
inc
repz
mov
push
jns
mov
mov
and
push
xchg
push
add
sub
pop
ds
notl
mov
loop
shll
jg
mov
insb
mov
inc
mov
and
add
push
fsub
sub
push
cs
pop
mov
clc
test
repnz
imul
outsb
cmp
add
inc
sbb
inc
popa
nop
adcb
cmpsl
mov
mov
fcomi
repz
dec
pusha
inc
stos
cli
xor
mov
xchg
xor
repz
adc
pusha
mov
sub
dec
in
push
shll
push
addr16
fs
imul
push
mov
sub
inc
xorl
mov
jmp
fildl
mov
orb
sti
movb
push
sub
fnstcw
in
pop
clc
push
mov
leave
push
popf
add
add
hlt
mov
loop
lds
adc
ds
adc
push
in
push
jnp
lods
cmp
dec
imul
out
add
adc
jns
mov
dec
sbb
cltd
adc
cmp
xor
shl
addb
add
loopne
mov
jge
aaa
xchg
insb
outsb
mov
xor
sub
inc
movb
fildll
enter
or
cmp
dec
push
outsb
pop
push
iret
pop
loopne
push
fbstp
lret
jle
fidivl
mov
sub
adc
push
jle
sub
mov
shlb
bound
iret
sahf
mov
jg
jbe
repnz
std
push
mov
mov
mov
and
sub
mov
adc
fwait
mov
and
sbb
loopne
dec
xor
mov
fsubrs
notb
in
icebp
and
mov
and
stos
xor
idivb
xchg
xor
cmp
movsb
inc
test
mov
popf
stc
sub
mov
mov
ds
or
xlat
arpl
jne
mov
cmp
jae
and
lock
fcmovnbe
xor
cld
loop
jp
shlb
inc
mov
loopne
and
sub
iret
fbstp
lds
hlt
sbb
dec
and
rcrl
mov
cmp
imul
sbb
inc
jle
mov
cmp
pop
lcall
push
jge
or
repnz
int3
test
cs
enter
mov
test
loopne
jecxz
xor
lret
dec
lcall
push
mov
int3
movsb
lret
xchg
sbb
push
out
inc
xor
mov
popf
fistpl
lock
int
push
cmpsb
fstpt
jl
pop
les
sub
xor
push
dec
push
ds
pushf
cmp
or
ljmp
and
popf
movb
fimuls
mov
mov
ss
ljmp
call
cmc
nop
stos
dec
xchg
jnp
nop
pop
insl
cmpsl
add
pop
adc
and
or
movsb
or
jbe
adc
cwtl
mov
shlb
movsl
sub
sbb
jg
jnp
sub
iret
inc
mov
cmp
pop
sub
cltd
push
mov
pop
daa
or
les
mov
ds
faddl
bound
fldt
mov
jb
inc
mov
stc
test
rclb
out
insb
xchg
cli
jno
test
incl
ret
stos
mov
fisubrl
out
pop
mov
xor
mov
je
jmp
jmp
or
dec
test
negl
ret
jae
scas
cli
stc
dec
sub
adcb
lret
ljmp
inc
mov
push
ret
or
mov
add
and
adc
cmp
sub
fidivs
mov
movsl
push
adc
lea
icebp
in
aaa
xchg
or
aas
dec
mov
mov
popa
jno
pop
adc
mov
jmp
mov
fadd
xor
in
cmp
sub
enter
sbb
sub
cmp
cmp
add
inc
lods
enter
add
call
xor
dec
pop
imul
je
dec
cs
in
mov
aaa
int
scas
mov
shll
cmpsb
scas
mov
test
mov
andb
je
in
fwait
stos
add
dec
xchg
inc
mov
mov
rorb
pop
hlt
adc
insl
lods
fidivs
mov
inc
dec
push
sarb
cmp
ret
shrb
fistpl
lods
les
rcll
ljmp
decb
aaa
push
sub
inc
in
data16
mov
mov
loope
nop
pop
aad
lahf
jl
std
pop
adcb
ljmp
sti
xchg
jns
mov
push
jno
out
push
pop
and
mov
add
cltd
jge
sub
push
cli
scas
jecxz
js
in
mov
stc
ljmp
sub
adc
imul
lretw
stos
pop
imul
lret
xor
test
pushf
sub
cltd
dec
cld
xchg
cltd
in
out
icebp
inc
ret
ja
dec
pop
lret
rclb
sub
fadds
mov
mov
loop
pop
cmp
aad
divb
and
jl
dec
mov
push
fcomip
jl
pop
pushf
xor
in
neg
cmpsl
lret
jecxz
outsb
jp
xorl
es
lret
inc
test
stos
in
cmc
aas
outsb
mov
in
mov
mov
jne
cmp
aas
dec
sbb
mov
cld
add
mov
aam
add
mov
or
fs
mov
loope
test
aas
out
mov
jecxz
dec
mov
out
fstpl
mov
push
dec
fbld
lds
sub
clc
jg
out
add
mov
dec
inc
ja
aad
add
add
sub
jo
sbb
lahf
jb
push
jno
dec
in
mov
jbe
out
mov
inc
sub
push
cmp
jle
cwtl
xchg
jae
jg
mov
dec
ds
test
nop
iret
daa
aas
lods
and
push
mov
jno
das
pop
mov
jae
inc
push
push
sub
pushl
fstl
adc
js
xor
or
mul
mov
mov
pop
sub
cs
adc
cld
adc
stos
sarl
jl
cld
push
cmpsb
cmp
xchg
push
out
pop
ret
arpl
repz
fiadds
loop
out
shlb
lret
and
test
jo
add
les
enter
ret
jecxz
add
xchg
push
pop
xor
pop
cmp
ja
cmp
inc
shll
add
outsb
jecxz
jae
lods
mov
push
decl
xchg
mov
or
mov
sub
or
fistl
in
sub
bound
push
and
sub
rorl
into
imul
sub
adc
std
out
std
scas
rorl
aaa
push
aaa
out
xchg
sbb
lret
push
ss
jle
pushf
mov
repz
dec
mov
mov
mov
jmp
cmp
sbb
outsl
sahf
push
pusha
dec
movsl
pop
jge
imul
pop
out
xorb
inc
dec
rcll
imul
loopne
xchg
xorl
inc
ja
fisttpll
dec
stc
aas
mov
fmuls
cli
scas
lcall
mov
adc
jp
in
pusha
pop
imul
mov
inc
std
dec
loope
outsl
stos
and
or
xchg
adc
popf
xor
sbb
lea
adc
inc
jmp
xor
cli
push
sbb
push
and
leave
in
js
inc
mov
incl
in
jne
loopne
insb
insb
inc
adc
sbb
rolb
or
jle
jbe
xchg
sbb
pop
rcrb
out
imul
sbb
xorl
out
jb
das
dec
aad
cmp
pop
jecxz
insb
out
mov
xor
jns
mov
das
inc
inc
gs
mov
cmp
mov
outsl
out
xor
sub
push
xor
add
clc
leave
mov
sub
stos
data16
rol
cmp
push
out
jo
mov
pop
add
or
imul
cmp
dec
enter
jg
adcl
adc
iret
scas
jmp
jnp
adc
xchg
inc
insb
ficoml
int3
add
jno
lock
pop
and
jbe
iret
ret
mov
mov
cmpsb
aas
arpl
les
cld
aas
mov
sbb
mov
inc
out
lret
inc
sub
mov
push
lea
scas
add
fidivl
popa
mov
add
jbe
fsubrl
daa
cwtl
cmp
adc
fwait
push
sbb
xchg
or
xor
dec
arpl
outsl
and
aam
dec
jnp
mov
data16
loop
outsl
cmc
out
or
sub
ret
cmp
iret
xor
insl
add
mov
mov
xor
mov
mov
out
test
sbb
enter
jmp
jle
sub
ss
sub
adcb
ret
add
into
rorb
repnz
sbb
cld
in
dec
test
arpl
loop
xor
movsl
lcall
hlt
push
cmpsl
push
xchg
daa
lds
loope
pop
rol
ljmp
aaa
repz
aam
loope
xchg
rcrl
push
sub
lods
clc
int3
testb
or
mov
and
loope
lret
js
or
push
adc
subb
add
lods
in
scas
lock
das
jbe
stc
inc
inc
mov
gs
fsubp
icebp
sub
cmp
xchg
and
add
jmp
adc
add
mov
adc
mov
mov
sti
jg
mov
adc
mov
leave
mov
xchg
out
ret
push
jecxz
lea
call
jmp
dec
mov
das
or
cltd
aad
and
out
js
in
pusha
mov
loop
rolb
cmc
or
mov
sub
in
fiaddl
mov
xor
ficomps
mov
and
xchg
dec
stos
fsubl
fmul
and
sbb
sbb
popa
and
adc
inc
in
cltd
adc
jae
jmp
cmpsb
push
rorl
sub
mov
lret
ja
pop
aam
dec
mov
pushf
xor
ds
mov
adc
outsl
fists
mov
lock
adc
push
mov
cmp
adc
xchg
jno
jb
xchg
faddl
xchg
int
lret
test
outsl
xor
ds
out
push
hlt
jns
jb
lods
and
cmp
or
popa
jmp
inc
scas
mov
mov
js
shl
popa
or
xchg
xor
dec
push
mov
fcomp
bound
popf
jg
adc
jnp
loope
push
or
jge
movsw
xchg
inc
mov
movsb
push
movsl
adc
rcll
sti
lcall
fiadds
rorb
out
mov
inc
sbb
ficoms
cmp
sbbl
jp
sbb
movsl
inc
xchg
out
jp
std
mov
cmpsb
daa
inc
imul
int3
jmp
gs
fnstcw
and
aas
repz
pusha
data16
mov
stc
cmp
push
idivl
lock
mov
sbb
mov
and
dec
add
xor
or
inc
cmp
adc
in
mov
adc
xor
mov
dec
pop
mov
loopne
scas
mov
sbb
aaa
xchg
call
cwtl
mov
cmp
mov
mov
ret
divb
addr16
sahf
shrl
push
xchg
or
or
sub
jbe
orl
les
outsb
or
dec
pusha
jbe
rorb
sub
into
jle
stc
aam
xchg
enter
daa
dec
cli
cwtl
lods
mov
jne
lcall
xchg
psadbw
gs
mov
lods
push
mov
lods
sub
adc
adc
popf
or
mov
jno
push
adc
mov
sub
cmp
adc
adc
mov
testb
inc
clc
bound
sub
ljmp
pop
jbe
mov
ficoml
jne
in
js
and
mov
test
rorl
inc
movsb
xor
je
cmpsb
ja
cmp
lock
dec
jns
jo
push
mov
mov
pushf
arpl
sti
lret
leave
xor
jge
pusha
fadds
push
inc
push
mov
adc
push
repz
leave
adc
mov
or
imul
out
popf
mov
dec
imul
dec
sbb
insl
mov
mov
enter
inc
xbegin
mov
lock
in
cwtl
xor
xor
int
das
dec
mov
mov
dec
lock
xlat
test
inc
sub
push
and
xchg
jb
loop
or
jmp
mov
sub
mov
pop
push
pop
leave
xor
mov
int3
mov
out
mov
out
adc
xor
pop
icebp
stc
jae
stos
push
leave
adc
movsl
lahf
aad
xchg
mov
jne
sub
cli
ffreep
pop
aam
xor
shlb
out
and
into
add
insb
notb
sub
fcmovnbe
loope
sub
push
add
cmp
jno
adc
pushf
mov
fbstp
cld
mov
cmpsl
mov
je
hlt
mov
fwait
xchg
out
rclb
jbe
push
sbb
mov
mov
fs
jle
pop
rcr
inc
movsb
sbb
and
pop
cmpsb
inc
mov
inc
or
xchg
mov
lods
ss
and
cmpsb
dec
pop
jl
out
or
shlb
cmp
out
mov
dec
mov
xchg
jg
test
inc
xchg
cli
sbb
lds
sub
ss
repnz
fcoml
push
cmp
jns
mov
inc
inc
cmp
sahf
sahf
jmp
and
jmp
lahf
jb
pushf
push
push
mov
je
push
push
dec
mov
fs
fistps
sbb
sbb
scas
jo
pop
or
test
arpl
sub
push
cwtl
pop
les
add
lds
stos
xlat
aaa
lcall
pop
orb
fstpl
xor
jge
mov
loopne
movsl
pop
fldcw
out
outsb
popa
das
test
jecxz
and
inc
scas
xchg
xor
scas
shll
loop
mov
ror
pop
loope
ds
mov
xor
test
int3
push
inc
mov
xor
inc
ss
ljmp
idivb
fcmovnu
pushf
push
addr16
dec
inc
dec
rcl
inc
out
ret
mov
stc
icebp
xor
dec
push
fnstcw
enter
fnsave
dec
push
ja
popa
clc
mov
rorl
test
clc
cltd
push
push
pop
jo
dec
iret
cld
test
iret
inc
jmp
push
orb
daa
xchg
outsl
mov
pusha
xchg
or
or
je
jle
inc
adc
mov
and
scas
les
jp
cli
stc
insl
in
mov
rorl
fiadds
push
mov
insb
inc
mov
jmp
lahf
leave
jge
add
push
mov
mov
sbb
into
aam
add
imul
mov
adc
and
xor
repnz
mov
test
mov
push
lret
or
pop
and
pushf
cltd
bound
ljmp
add
xchg
sub
sbb
jg
mov
insw
pushf
in
pop
stc
lss
call
sub
sub
push
inc
mov
sub
inc
scas
inc
add
xlat
es
cltd
into
lret
inc
mov
stos
mov
push
and
xchg
test
xor
pop
push
push
or
push
sbb
or
xor
or
cmpl
les
repz
xchg
shlb
loopne
cwtl
xchg
daa
mov
insl
lods
ret
in
pop
je
xchg
es
and
xor
dec
ljmp
pop
xchg
jae
mov
addr16
jns
das
add
xchg
pop
mov
stc
pop
sbb
lock
mov
imul
jns
sahf
and
jnp
lahf
xchg
adc
pop
xor
jp
sbb
es
and
mov
faddl
pop
dec
lock
cmp
stos
cmpsl
push
lret
inc
add
inc
pusha
mov
dec
xchg
xchg
jo
jp
cmp
loope
xchg
scas
out
iret
mov
ljmp
sbb
sub
mov
dec
cltd
mov
int3
aas
cmc
enter
and
push
aam
mov
out
xlat
and
jge
sbb
jp
test
jge
lret
push
mov
fcoms
shr
cmp
fmul
inc
or
mov
jle
and
inc
fnstcw
ficoms
add
test
push
lock
loopne
jge
decl
sti
clc
xor
jmp
dec
jle
jge
mov
loope
out
add
inc
in
lds
mov
jmp
and
pop
aaa
add
test
out
mov
popf
or
into
xchg
lcall
enter
inc
push
jns
out
and
sahf
sahf
hlt
hlt
jns
arpl
and
test
cwtl
mov
pop
fwait
mov
inc
add
flds
xchg
mov
add
aad
xchg
xchg
std
push
popa
pop
dec
jl
xchg
mov
je
das
jmp
loop
clc
ljmp
cmp
movsb
mov
in
test
cltd
inc
adc
push
fs
sti
add
adc
dec
out
aad
mov
cmp
xor
mov
je
data16
std
imul
jmp
adc
mov
pop
mov
movsl
fstpt
mov
shrb
mov
jns
xor
push
mov
lret
pop
add
cmpsb
add
xchg
push
cmp
lret
adc
scas
dec
dec
sbb
pop
jns
sbb
sbb
cwtl
mov
pushl
cmp
push
mov
loopne
or
pop
mov
adcb
outsl
fidivs
xlat
jle
enter
hlt
outsb
iret
xchg
or
xlat
or
lret
jmp
aas
sti
push
push
mov
andl
mov
xor
repz
cs
sbb
movsl
icebp
mov
sbb
jae
push
std
cmc
mov
jb
mov
jb
and
dec
addr16
icebp
mov
icebp
fsub
into
mov
and
js
and
jbe
sbb
nopl
daa
sub
lret
xor
adc
scas
lea
push
cmc
lods
shl
popf
push
hlt
les
test
ljmp
inc
cmp
fwait
xor
jl
in
cmc
arpl
ret
andb
arpl
ret
jae
xchg
push
push
mov
outsl
inc
cs
dec
push
xor
outsl
xchg
dec
xor
pushf
int3
dec
lds
test
test
mov
mov
add
je
mov
outsl
lods
mov
pop
lcall
or
jge
loopne
popf
insl
lock
enter
notl
mov
mov
andb
dec
stc
or
pop
out
push
pop
xchg
dec
in
mov
push
outsl
movsl
mov
jle
std
in
add
inc
xor
mov
gs
push
jns
in
fsubs
lcall
cwtl
mov
and
js
fmuls
pop
xor
add
clc
lea
roll
movsl
and
data16
jb
sbb
mov
jnp
popa
mov
std
or
xchg
out
or
jo
sub
and
fdivrs
sub
sti
pop
out
pop
sbb
shlb
sub
add
and
xor
lock
sahf
pop
mull
data16
push
pushf
inc
lods
imulb
into
sub
sbbl
cmp
push
xor
sub
lahf
lods
int
decb
mov
jae
sahf
pop
insb
pushf
xor
pop
jo
add
mov
adc
push
and
xchg
cmp
js
mov
mov
jo
mov
xchg
cmc
or
jge
mov
fisttpll
test
xor
mov
sbb
push
push
or
sbb
mov
adc
bound
cmp
xchg
xchg
push
pop
arpl
push
sub
lock
data16
or
and
in
sahf
pop
dec
mov
pop
pop
xchg
cld
jno
xor
cmpb
pop
push
addr16
testl
mov
cmpsb
ret
int3
aad
fildll
in
sbb
mov
gs
sub
dec
loop
cmp
clc
xor
sbbb
push
cwtl
loope
add
mov
inc
adc
shrb
inc
popa
mov
cmc
lahf
fwait
or
subl
dec
xor
push
pop
and
xor
enter
stc
in
imul
mov
jns
adc
inc
push
pop
sbb
sub
test
popa
push
push
sub
cltd
inc
add
dec
xchg
sub
inc
mov
mov
xchg
cmp
ds
cmp
sbb
pop
pusha
xor
mov
cld
imul
test
jno
test
xorb
mov
xor
and
ret
ficoms
fstp
into
fldt
cmp
mov
jle
les
add
roll
in
scas
push
jle
xchg
sbb
and
adc
xlat
rcll
mov
pop
cwtl
loope
xorb
jle
lock
mov
and
test
cli
mov
cmp
inc
int3
lods
fsubrl
adc
mov
jmp
daa
fbstp
out
je
pop
adc
add
mov
shrl
dec
jmp
sub
shll
xchg
dec
das
mov
add
loope
dec
insl
jae
shrb
push
mov
pop
jo
jp
cmpsb
loope
adc
adc
sahf
cmp
dec
iret
mov
call
es
push
arpl
repnz
push
xorl
rcrl
das
adc
mov
adc
popa
femms
xlat
scas
pop
mov
out
mov
out
sbb
bound
cmp
dec
or
lea
cmc
jg
push
fsubrs
add
jle
lock
pop
push
sbb
push
and
in
test
mov
insl
or
idiv
rcll
add
and
xor
add
mov
xchg
jbe
pop
jp
push
pop
mov
cmpsl
inc
rolb
pop
outsl
cmc
sub
testl
icebp
and
stc
pop
sub
fists
sbb
pop
cli
dec
mov
in
mov
mov
push
movsb
lods
mov
xchg
outsb
outsb
shr
fs
int
pop
and
sbb
insl
scas
addr16
sti
cmp
jae
bound
and
xor
nop
mov
sbb
sarl
aam
fists
aas
xor
pusha
and
pop
and
push
cmp
dec
out
sahf
cmp
push
lret
mov
sub
scas
adc
fisttpl
and
inc
scas
push
pop
cmc
or
push
shl
sahf
loop
mov
jae
adc
mov
adc
mov
clc
pushf
sbb
sub
add
cmp
lock
les
sub
adc
shll
pusha
in
push
or
or
push
sbb
sbb
test
data16
cmp
jbe
das
aas
xor
lcall
xlat
leave
sbb
push
into
mov
js
in
in
or
and
test
loope
popa
or
add
sub
inc
outsb
jb
xchg
and
pop
xchg
jmp
jb
andb
jno
and
js
cwtl
je
std
push
push
jo
jno
jecxz
lds
sub
sbb
stos
faddp
mov
scas
retw
cmp
jbe
dec
daa
arpl
clc
fnsave
lock
dec
pop
arpl
pushl
sub
sub
ds
into
pop
inc
shlb
and
mov
enter
addb
mov
cmp
loopne
add
lret
lcall
nop
jbe
pushf
stc
dec
pop
dec
adcb
or
mov
xlat
inc
sbb
cmp
pop
hlt
rolb
pop
push
pop
xchg
pop
jbe
in
into
mov
jb
jns
xchg
iret
mov
incb
loop
in
movsb
lods
popa
aaa
dec
jle
je
mov
movsb
roll
aaa
cltd
js
pop
insl
ror
jbe
lods
inc
or
cmc
arpl
sbb
mov
je
push
jmp
xchg
popa
xchg
jbe
cs
jmp
sub
lods
xchg
add
std
lods
sub
add
popa
inc
push
cmp
mov
inc
inc
mov
int3
lahf
mov
out
pop
mov
jbe
mov
xchg
jle
iret
inc
icebp
int3
jmp
xchg
cmp
dec
adc
cmpsl
clc
loop
or
outsb
mov
cmp
mov
push
mov
pusha
lret
adc
xor
shll
aas
dec
icebp
adc
loope
jp
cmpsb
adc
lcall
sub
ret
mov
stos
inc
idivb
mov
movsb
inc
jl
addb
pop
mov
outsb
fadd
push
push
loopne
cmpsl
mov
outsl
ret
or
ljmp
lock
jns
pop
dec
and
das
jne
rcrb
repnz
pop
mov
cld
mov
rcr
loope
shlb
pop
pusha
shll
scas
pop
mov
call
mov
push
adc
ss
mov
call
lods
add
jp
ret
sti
movsb
mov
imul
test
jle
rorb
or
and
jb
mov
sbb
push
and
repz
sbb
push
cltd
loopne
adc
jecxz
mov
stos
mov
mov
add
mov
pop
ret
adc
dec
repnz
ficomps
test
popf
sahf
jae
pop
fcoml
cld
or
sbb
or
jl
loopne
jl
inc
push
or
stc
imull
inc
jo
je,pt
jns
mov
shll
cmp
leave
jmp
outsb
testl
std
fdivl
or
or
stos
aas
arpl
je
lahf
mull
test
mov
test
rorb
push
shll
jb
push
or
out
xchg
insb
or
cltd
push
aam
adc
adc
daa
cld
clc
sahf
cmpsl
inc
push
mov
sub
js
pop
jg
pop
fsubrp
inc
test
mov
sub
popf
je
jecxz
push
pop
ret
sbb
daa
mov
mov
lea
out
sti
or
pop
movsb
mov
mov
adc
cmp
inc
mov
or
je
inc
mov
ss
mov
xlat
mov
loop
or
cmpsl
add
and
dec
adcl
sbb
pop
mov
mov
push
add
inc
insb
mov
leave
into
mov
dec
push
mov
insl
jae
mov
scas
aad
inc
enter
bound
and
cltd
sub
sbb
ret
out
lds
in
shlb
mov
stos
xchg
dec
stc
cmpsb
rclb
cmp
push
add
cld
fs
hlt
fstl
xor
aad
mov
das
xor
stos
jns
lods
xchg
sbbl
sbb
or
addb
das
jnp
enter
lea
fdiv
leave
rcl
das
popf
ss
in
or
dec
xor
jbe
lods
cmp
mov
movsb
leave
ss
divb
lds
mov
stc
rcll
andb
mov
insb
mov
pop
push
sub
dec
iret
icebp
push
jae
leave
rcrb
push
dec
sbb
mov
mov
les
mov
loopne
cmp
add
mov
inc
inc
je
mov
jb
mov
ror
and
xchg
mov
jp
adc
adc
ljmp
mov
jbe
mov
dec
sub
mov
icebp
shrl
or
mov
push
adc
and
xor
adc
mov
out
sbb
add
cli
rcrb
enter
cltd
xor
lods
imul
and
repnz
outsl
jno
dec
xor
stos
aad
jo
xchg
sbb
iret
popa
push
cmp
loop
pop
sub
pop
in
popa
ljmp
mov
popf
inc
jg
insb
inc
fidivrs
cmp
into
or
sub
out
mov
shll
push
cmp
push
jb
loopne
mov
test
xchg
ret
inc
mov
sbb
mul
ss
js
mov
jl
mov
orb
cmp
jg
out
mov
iret
loopne
pop
ds
or
incb
sbb
repnz
xor
stc
dec
mov
and
mov
mov
lret
subl
call
xor
test
pop
mov
and
pop
mov
jns
xor
xchg
out
xor
lret
mov
jmp
push
push
or
mov
fcoml
fsubrs
shll
or
xchg
das
and
cmp
or
or
imul
push
pop
sub
loope
xchg
add
jp
mov
cmp
inc
jns
mov
xor
call
dec
sbb
aas
jmp
sbb
subl
out
dec
xor
into
mov
cmp
addr16
test
mov
mov
sbb
outsl
push
xor
mov
sub
pushf
add
pop
push
icebp
pop
lcall
stos
cmp
int3
lret
cmp
cmp
dec
ja
scas
into
cmp
and
ja
js
inc
sbb
scas
jg
out
sahf
mov
inc
mov
fcmovnb
xchg
mov
jno
dec
shll
std
mov
mov
and
stos
xchg
sub
movsb
and
cmpsl
sbb
jmp
int3
adc
xchg
dec
test
jp
out
pop
pop
xchg
cmp
jge
mov
sub
addb
call
adc
lcall
inc
insb
inc
or
scas
pushf
lahf
xchg
xor
xchg
mov
fs
jns
nop
popa
roll
rorb
test
mov
leave
xchg
pusha
mov
popf
mov
push
dec
into
pop
lea
xor
mov
cmp
adc
add
les
mov
mov
mov
lea
xchg
and
mulb
clc
xchg
outsb
mov
es
sub
pop
stc
mov
ds
andl
nop
pusha
jae
stos
sbb
mov
test
sarb
pop
ja
cmpsb
loopw
notl
dec
popa
sub
inc
mov
mov
test
pusha
inc
je
mov
mov
mov
mov
sub
mov
push
mov
and
fmuls
lret
xchg
decl
lret
jmp
pusha
imul
push
dec
sub
mov
sub
dec
leave
ljmp
dec
mov
xor
loop
icebp
cmpsb
outsl
mov
es
jbe
fiadds
fcmovne
and
aad
xor
pop
fldl
add
inc
sub
adc
push
cltd
sub
and
popa
in
push
jg
loop
bound
sbb
int
cwtl
xor
xor
and
mov
jge
gs
sbb
inc
xlat
push
repnz
mulb
mov
ret
mov
push
lret
and
dec
mov
push
pop
xchg
iret
xchg
and
bound
jp
sbb
nop
inc
mov
fstps
sub
mov
aaa
dec
sahf
enter
mov
mov
jno
pusha
out
cmp
adc
mov
rcr
cmc
insb
faddl
xchg
and
bound
lcall
inc
inc
or
push
enter
dec
jecxz
sub
fimull
xor
jl
sbb
enter
jae
jg
and
mov
mov
fiaddl
xchg
mov
dec
jb
aas
movsl
fsubl
jo
fisubrs
lahf
adc
fstps
xchg
sbb
fcoml
aam
addr16
mov
cmpsb
rolb
add
mov
xor
push
pop
push
in
cmpsl
into
clc
mov
dec
sub
push
adc
mov
cmp
leave
sbb
mov
mov
fcmovb
push
adc
mov
cmpsb
mov
mov
ret
jmp
iret
dec
test
inc
mov
and
rolb
loop
mov
nop
out
sub
mov
popf
sub
data16
test
lods
test
cmpsb
test
jnp
test
xchg
cli
roll
sbb
and
leave
cmp
sub
dec
daa
cmp
ds
mov
mov
mov
push
xchg
sub
test
push
outsb
out
add
pop
push
leave
inc
cltd
movsb
ja
or
sub
and
fdivrl
loope
inc
adc
jle
in
sub
cmpl
ficoml
pop
sub
and
cmpsl
mov
jae
daa
inc
mov
outsb
into
popf
mov
xor
add
push
lcall
mov
jmp
int
or
adc
mov
mov
lahf
sbb
cmp
push
into
aad
adc
or
rclb
je
int3
test
dec
or
mov
lret
fcmovne
jae
inc
add
xchg
cmp
pop
call
sub
mov
mov
test
outsb
aaa
imul
push
mov
jmp
jbe
and
xchg
call
addl
jle
sti
cli
andb
xor
sti
imul
mov
jg
xor
inc
into
rcrb
pusha
out
enter
ficoml
cmp
adc
fildl
push
push
lods
inc
xchg
mov
lcall
push
cltd
fsubrl
sbb
push
xchg
push
dec
lahf
insl
enter
mov
pop
rol
lahf
fpatan
dec
scas
lret
inc
mov
fsubrl
xchg
out
add
out
mov
mov
ficompl
pushf
sbb
push
lods
testb
mov
xorl
test
aas
sub
fistpll
aaa
push
jle
fcoml
pop
sub
jno
hlt
pushf
subl
mov
stos
push
xchg
cmp
fdivl
cmp
mov
ds
adc
lret
push
dec
mov
add
sbb
mov
icebp
push
ret
fs
cmp
and
shl
xchg
dec
cltd
fistpl
mov
xchg
sahf
mov
std
jnp
cmc
xor
cltd
xchg
adc
frstor
dec
pushf
outsl
dec
cmp
lcall
pushf
fiadds
scas
mov
aaa
sarl
or
gs
stos
dec
xchg
daa
push
bswap
rcr
jnp
scas
push
inc
mov
loope
xor
shrl
inc
mov
sbb
ret
pusha
sub
lret
imul
in
ja
pop
aaa
dec
mov
enter
jns
cmp
cltd
pop
shrb
push
pop
nop
testb
in
je
dec
mov
sbb
push
repnz
jecxz
loope
dec
dec
int3
rcrl
inc
sbbl
dec
out
sti
bound
loop
inc
jo
ds
pop
dec
add
aas
or
sub
mov
retw
movsl
stc
into
push
lahf
and
jp
fistpl
xchg
nop
inc
inc
mov
das
test
pusha
dec
ljmp
rorb
test
insl
sar
iret
fwait
or
mov
outsb
jle
rcrl
adc
ret
xchg
jns
sbb
icebp
fsubrs
jo
and
push
scas
lods
sbb
or
test
mov
subl
mov
xchg
ja
push
push
sahf
jae
add
std
and
cmp
dec
push
mov
fildll
aaa
xlat
cmp
adc
dec
mov
xor
fdivl
fists
push
orb
fcmovb
xor
mov
loope
pusha
pushf
std
ljmp
jl
inc
lret
test
cmp
xor
daa
push
pop
dec
loopne
movsb
add
gs
add
ljmp
adc
mov
movsl
jb
sub
iret
imul
jmp
xchg
pop
dec
inc
mov
popf
dec
sbb
xor
ss
inc
mov
fs
imul
push
incb
mov
xlat
push
lea
add
out
and
cmp
sub
lret
xor
pushf
sarb
cli
rolb
xchg
mov
dec
test
mov
xchg
mov
sub
aaa
sub
clc
sbb
orb
and
mov
int
sarb
cmpsl
adc
xchg
adc
or
lea
repz
cmpsb
add
cmp
js
int3
mov
pop
dec
adc
cmp
sub
mov
insb
not
les
dec
and
mov
adcl
add
lods
cltd
xchg
leave
int3
jno
xor
pop
push
xchg
pop
lea
mov
add
sbb
popa
int3
int3
cmpb
sbb
or
scas
out
push
jno
jp
mov
loope
cmp
mov
outsl
ja
enter
dec
jecxz
push
and
frstor
lds
loopne
les
shlb
dec
pop
cmp
fimull
imul
mov
into
mov
dec
scas
jne
and
inc
and
sahf
mov
aas
xor
xor
pop
scas
fstpl
mov
inc
mov
fcoml
mov
bound
lds
xchg
rclb
enter
jo
arpl
mov
adc
mov
popf
dec
es
scas
lahf
decb
test
pusha
xor
xor
out
adc
push
clc
and
inc
repnz
inc
xchg
cmp
add
add
std
mov
into
movsb
add
mov
add
fisubrl
out
int3
das
sbb
xchg
int3
rorb
mov
pop
daa
dec
leave
leave
scas
fnsave
loopne
xchg
cmp
les
xchg
jo
popf
inc
pushf
adc
outsl
and
mov
or
aam
pcmpgtw
lea
jae
push
or
add
jb
sub
jae
xorl
jo
sbb
out
fwait
pop
push
cmp
arpl
dec
jbe
sbb
lcall
adcl
jl
fbstp
mov
roll
scas
or
inc
mov
and
xchg
lcall
mov
aas
cmp
imul
pop
fwait
mov
mov
mov
xor
aaa
sub
test
or
inc
and
icebp
inc
inc
test
sbb
cmp
inc
sti
repz
pushl
ficoml
dec
sbbb
mov
pushf
jp
mov
adc
pop
or
adc
mov
stos
and
xchg
and
mov
repnz
out
mov
mull
imul
sbb
leave
ret
jecxz
imul
in
inc
jb
movsl
mov
dec
and
int
pop
mov
cmpsb
out
andl
pop
jb
pop
aam
je
xchg
lahf
adc
hlt
roll
js
pop
mov
es
jb
lods
ss
pusha
mov
sub
push
cld
pushf
jle
or
and
xor
loope
xlat
sub
push
je
mov
loopne
inc
bound
sti
jl
jne
xor
out
pop
out
mov
repnz
repz
testb
dec
ljmp
mov
mov
cs
push
loopne
push
pushf
arpl
or
fisubs
ret
inc
sti
and
mov
outsb
imul
and
sub
dec
xorb
ljmp
js
adc
xlat
or
fcomi
jle
pop
ffreep
dec
inc
mov
arpl
lret
pop
cmp
push
add
pop
jo
push
ret
imul
mov
mov
push
inc
mov
xor
pop
push
or
jg
daa
pop
dec
inc
jg
mov
inc
add
in
jecxz
pop
jp
or
inc
and
inc
mov
xchg
push
mov
xor
mov
mov
mov
sbb
mov
xchg
int
jbe
lret
in
jg
das
mov
mov
push
out
insb
fnop
test
mov
enter
cmpsl
jns
ss
stos
jmp
lock
cld
sub
aaa
push
sbb
mov
xchg
dec
add
in
and
repz
popa
add
inc
test
mov
cli
rclb
lret
mov
cmpsb
push
xchg
push
cmp
add
lcall
mov
test
iret
sub
test
jbe
adc
and
div
outsl
cmpl
fimuls
test
icebp
test
pop
xchg
add
fisttpll
rol
mov
aam
or
xchg
sub
cltd
jb
adc
or
fcmovne
out
sub
call
jne
and
pop
xchg
lock
popa
xchg
lahf
test
inc
stos
inc
add
aam
dec
pop
int3
mov
inc
cmp
and
pop
in
popa
sub
push
cmpsl
dec
push
cmc
fbstp
fucomp
outsl
push
lds
repz
lds
or
arpl
ficomps
dec
subl
ret
dec
adc
imul
jbe
mov
xchg
lods
cwtl
add
dec
jno
cmpsb
adc
bound
addr16
aaa
hlt
mov
bound
fnstenv
mov
and
xor
jge
jo
scas
jno
repnz
sbb
sub
mov
mov
stc
inc
out
cmp
and
jbe
xor
mov
xor
lcall
push
subb
in
adc
nop
dec
inc
mov
sbb
push
lods
cmp
xchg
test
and
mov
pop
push
leave
sbb
adc
aaa
inc
adc
divb
into
cmp
adc
xor
xor
inc
pop
dec
test
test
or
lret
test
stos
stos
xlat
lock
adc
sub
mov
rep
dec
lret
pop
inc
or
stos
mov
mov
or
mov
imul
sbb
dec
inc
repnz
mov
fwait
dec
sbb
call
sub
pop
out
in
mov
jne
mov
jge
sub
cmp
adc
enter
daa
or
sbb
lahf
les
mov
inc
sahf
jg
fsubp
push
test
fld
cld
inc
adc
mov
add
pop
inc
das
lods
mov
mov
xchg
push
leave
out
inc
cld
and
mov
adc
cmp
pop
imul
mov
out
adc
mov
pop
rorb
rorb
cmp
xchg
das
or
bound
fprem1
adc
lret
jae
in
inc
xchg
cmp
pushl
jne
pop
dec
daa
addl
mov
mov
pop
jecxz
add
insl
idivb
ja
and
ret
sub
outsl
and
sub
jno
ljmp
push
je
jae
popa
mov
mov
jae
cmp
ds
mov
push
push
rolb
out
and
fsubr
or
xchg
nop
fstl
testb
sub
imul
dec
lret
mov
dec
jnp
fs
mov
push
rcll
int3
sarl
sub
mov
dec
pop
cltd
cmp
lods
clc
nop
fdivs
fcoml
mov
xchg
jecxz
les
lret
inc
lahf
inc
arpl
cmp
or
xor
jecxz
ja
mov
sub
aad
mov
push
xchg
aaa
test
aad
sbb
gs
add
dec
mov
inc
jg
and
insl
rorb
pop
test
dec
in
fmul
inc
gs
mov
mov
int3
fistl
lods
dec
adc
mov
adcb
xchg
mov
push
dec
add
pop
sub
lock
out
icebp
cmpsb
and
push
iret
xchg
mov
push
cmp
test
jg
pop
mov
fcomip
pop
jbe
inc
out
mov
push
call
jb
cmp
lea
js
cmc
xor
std
jno
push
jmp
push
loope
mov
adc
loopne
iret
sbb
ret
sbb
xchg
jno
mov
jbe
fdivs
sbb
lock
or
jp
cwtl
pop
and
arpl
mov
add
nop
push
roll
mov
dec
and
or
mov
mov
or
push
xchg
add
sub
inc
fs
scas
push
js
jp
les
and
cmpsl
push
iret
push
and
adc
mov
into
inc
jmp
pop
mov
test
push
xor
mov
xchg
mov
mov
outsl
push
mov
mov
sub
repnz
xchg
cmpsb
dec
std
sub
pop
or
out
jne
dec
fimull
sub
mov
inc
test
dec
xor
neg
xor
out
cwtl
outsl
xchg
jo
jno
lcall
pop
inc
mov
cmpsl
add
pop
cmpsl
inc
out
push
mov
test
sub
dec
adc
outsl
addr16
xlat
loope
rcl
pop
roll
and
mov
dec
xchg
push
inc
in
inc
stos
cmp
fstl
xchg
jecxz
pop
cli
das
cmp
jecxz
js
daa
mov
shrb
mov
sub
repz
mov
and
xchg
roll
or
adc
jae
lea
int
mov
scas
rorb
fwait
nop
testb
push
xchg
movsl
add
mov
jns
pop
pop
test
cs
mov
mov
push
pop
ret
ret
popa
fsubrl
outsl
sbb
pop
pusha
sub
sub
and
stos
pop
pop
push
and
xchg
mov
push
daa
push
out
jae
sub
mov
test
cs
mov
pop
push
inc
and
sub
pop
pop
sub
xor
insb
movsl
stos
call
or
xor
add
mov
inc
mov
adc
ret
stos
addb
pop
ret
pop
mov
mov
add
icebp
jno
stos
sub
mov
jbe
add
outsl
call
lret
jmp
jl
jb
insb
popa
hlt
push
jnp
xchg
popa
test
cmp
adc
dec
adc
aas
insl
sub
fsts
add
scas
push
xchg
pusha
lock
iret
popf
ficomps
fcoml
mov
adc
outsb
faddl
mov
shll
cli
cli
imul
loop
pop
sbb
push
xor
xchg
add
sub
pop
popa
imul
lea
sahf
pop
sbb
fsubrl
aaa
bound
insl
cmp
inc
imul
ret
sbb
push
sahf
jnp
sub
pop
lods
test
jo
and
fcompl
sbbl
rol
cltd
and
loopne
push
int3
xchg
cmp
jp
pop
sub
push
mov
xlat
fsubl
mov
aam
rcrb
cld
xor
fwait
scas
dec
xor
scas
mov
loope
cli
pushf
mov
insb
leave
and
cmp
out
ja
mov
push
addr16
loop
push
xor
lea
push
sub
jae
sbb
sbb
cmp
sbb
xchg
aam
sub
insl
mov
inc
jge
dec
jecxz
inc
out
cmp
mov
jb
cld
out
push
fdivl
scas
add
jns
rcrb
decl
inc
sarl
fs
mov
xchg
pop
pop
mov
mov
add
stos
repnz
aad
fmuls
jl
das
cmpsl
sub
cmpb
or
mov
adc
sti
clc
xchg
lcall
jg
fsub
rorl
cs
scas
add
int3
sub
ljmp
adc
sbb
out
lret
or
adc
push
in
or
jle
cmc
mov
and
or
sub
out
add
aam
inc
pop
rolb
idivb
dec
xor
jo
into
inc
adc
mov
out
adc
xchg
test
pop
dec
jo
in
int
stos
arpl
bound
push
push
movsl
mov
jg
aaa
aaa
pop
jnp
std
pop
aad
sbbl
sub
or
push
jmp
sahf
pop
push
fldt
mov
add
sbb
stos
mov
out
fistpl
mov
pop
stc
sub
mov
inc
js
and
pop
mov
jge
fimull
popf
mov
xchg
inc
xchg
dec
pop
xor
mov
ja
sub
xor
test
pop
mov
inc
jp
mov
dec
pop
lea
push
sbb
dec
cmc
or
lods
fstl
xor
stc
stc
xor
imul
add
mov
add
testb
push
sbb
dec
fst
push
clc
notl
push
mov
ss
xchg
mov
and
into
arpl
dec
adc
adc
jae
push
jb
cmp
stos
addl
adc
in
outsb
xchg
jbe
lahf
into
insl
subl
push
jmp
xchg
lret
jbe
outsl
xchg
cmc
sti
inc
inc
cli
push
js
in
lret
adc
push
fnstcw
sub
adc
repz
ja
imul
xchg
mov
xchg
subb
dec
test
mov
loopne
les
daa
push
add
cmp
outsb
sbb
cmp
lods
comiss
sub
mov
dec
mov
cmc
pop
es
mov
jbe
mov
in
lea
pop
lods
mov
adc
ljmp
xlat
fs
fcmovb
sub
out
sbb
cmp
xchg
xlat
ror
xchg
data16
sub
cvtps2pd
xor
cs
cs
adc
insl
mov
push
mov
cli
mov
mov
lea
popa
adc
decl
jecxz
jnp
push
add
into
jmp
mov
or
cmp
js
pop
mov
pop
popa
loopne
icebp
scas
adc
jmp
sbb
push
xorl
cmpsl
pusha
fistpl
inc
iret
jbe
push
xor
xor
dec
das
sub
dec
pop
inc
mov
stos
jno
jg
lods
cmc
mov
adc
filds
les
scas
push
mov
js
jns
pop
mov
add
test
loop
push
xor
cltd
nop
roll
popa
fisttpl
lahf
xchg
inc
insb
and
sbbb
fmull
and
loopne
lock
jae
add
push
dec
add
mov
mov
stc
inc
scas
or
loope
or
call
mov
lret
add
ja
jmp
pushf
and
stos
dec
or
fs
sahf
mov
xchg
mov
mov
sbb
jg
hlt
mov
sahf
int
mov
cmp
pop
push
repnz
movsl
inc
ret
add
mov
mov
dec
mov
mov
push
xchg
cmp
inc
ret
test
cli
mov
xor
inc
in
sub
out
and
adc
faddl
cmpsl
int3
jo
cmp
imul
push
or
int3
mov
inc
and
icebp
test
mov
cltd
xchg
mov
int
cltd
pushl
out
movsb
dec
fldt
leave
pop
pop
data16
adc
push
jo
div
sbb
out
mov
shlb
pop
jg
das
das
pop
fwait
mov
and
shl
pop
mov
mov
pop
cmp
dec
push
pop
in
mov
pop
xlat
mov
das
das
sub
popf
imul
mov
fnsave
jecxz
rcrb
out
or
aas
xchg
lret
rdmsr
cmp
aad
xchg
idivb
mov
adcl
leave
add
fwait
cmp
int
jne
fimull
xor
lret
or
jo
sbb
xchg
pop
das
adc
jg
mov
into
cmc
sub
cltd
int
ja
adc
cltd
push
mov
mov
pop
popa
cmp
das
jp
imul
popf
aam
imul
mov
mov
pop
inc
cmp
pop
rolb
stc
xchg
cli
je
or
lods
shl
ja
jmp
mov
jle
xor
stos
test
mov
xchg
dec
js
sbb
inc
jmp
sti
pop
inc
mov
add
cmpb
das
push
sbbl
jnp
imul
lods
dec
xchg
daa
dec
cld
cltd
lret
pop
int
das
rcll
sbb
or
iret
and
clc
pop
lret
imul
mov
inc
je
or
pusha
cwtl
test
or
test
in
clc
outsb
jo
jmp
out
repz
test
add
outsl
xchg
imul
pop
cmp
push
in
mov
test
mov
jle
mov
push
jns
cmp
sbb
out
test
sti
pop
rolb
push
cs
pop
sub
push
sbb
pusha
mov
nop
xchg
stos
or
jg
or
xchg
mov
lret
jmp
daa
sub
out
add
push
addb
test
lahf
adc
add
out
xor
inc
dec
jne
jge
adc
sbb
ss
int
and
xor
aaa
pop
cmp
fisubrs
or
sub
popa
jmp
xchg
jmp
jno
push
xor
pusha
jns
xchg
andl
repnz
lret
sti
arpl
jbe
sbb
mov
imul
inc
repz
jmp
adc
loope
cs
fimuls
and
mov
inc
imulb
pop
xor
dec
repnz
outsl
int
xor
jae
add
popa
and
cltd
lcall
adc
xchg
xchg
gs
cld
fadds
jmp
mov
or
cmpsb
push
in
sti
lea
inc
pop
push
inc
inc
inc
mov
lock
out
lods
cltd
inc
jae
jno
aam
sbb
scas
movsl
ret
adc
add
jae
inc
push
inc
mov
dec
xor
push
sub
nop
sbb
jl
sbb
sub
sub
sbb
stc
inc
xor
jp
sub
add
add
insl
inc
jnp
xor
lcall
aaa
outsb
xchg
rcl
bound
pop
xchg
subb
popa
pop
ds
mov
loopne
dec
loope
or
imul
clc
cltd
js
pop
ss
push
sbb
jp
cmp
inc
mov
fisubrs
cmp
out
movb
push
or
mov
stos
repz
into
cmp
jge
mov
push
cwtl
js
repz
ljmp
or
test
jbe
in
inc
push
pop
popf
fidivrl
pop
sti
data16
cmc
cltd
leave
cld
outsl
jmp
sub
ljmp
ds
inc
fwait
es
repz
insb
iret
imul
sbb
loopne
sbb
sub
incb
lcall
ds
ja
out
test
shrb
dec
mov
xchg
outsb
pop
push
in
and
outsl
mov
xor
call
sub
pop
cltd
adc
fisttps
and
test
data16
clc
sbb
icebp
cmpsb
lds
jl
push
xor
hlt
mov
cmp
mov
push
dec
jle
cmp
push
or
dec
divl
and
mov
mov
cmpb
flds
ret
sbb
mov
loope
daa
xchg
jo
adc
lea
les
jnp
ret
push
imul
xchg
lret
mov
xor
out
jle
out
mov
nop
scas
test
std
pop
ja
jle
pusha
fwait
mov
mov
test
mulb
xchg
inc
jb
rol
xlat
pop
fcmovnbe
daa
sbb
xchg
or
outsl
mov
pop
mov
sbb
mov
lret
call
dec
sti
ja
divl
cmpsb
push
xchg
mov
mov
mov
and
push
xchg
mov
in
xor
aad
jb
loop
adc
sbb
cltd
mov
outsb
popf
aas
jb
lds
mov
roll
inc
std
sbb
lds
and
int3
cs
outsb
shrl
dec
dec
lods
das
mov
dec
inc
push
lret
xchg
jl
fwait
cld
mov
jmp
movsb
dec
xlat
mov
push
inc
mov
out
push
movsl
pop
iret
inc
mov
mov
outsb
pop
ret
bound
pop
push
pop
jne
add
pop
sbb
jle
outsb
xchg
out
add
scas
mov
cmpsb
push
mov
add
loopne
cmp
je
jmp
xchg
fdiv
in
push
mov
or
dec
stos
loope
test
cmpsb
mov
in
in
in
sbb
std
cmc
jne
push
add
and
ja
push
inc
pushl
sarl
leave
xor
or
imulb
or
push
shrl
mov
pop
and
push
popf
add
fists
hlt
sarb
out
into
sbb
ss
add
clc
dec
cmp
test
imul
icebp
in
and
and
add
xchg
lds
and
add
das
bound
addr16
in
inc
ljmp
mov
xor
test
inc
push
hlt
xorb
scas
out
jno
subb
stc
xor
fistps
insb
test
cmp
insb
aaa
repz
sub
out
out
ljmp
adc
repnz
dec
xchg
xor
xchg
aaa
xor
mov
or
pop
es
in
inc
mov
mov
mov
cmp
test
inc
inc
lcall
adc
pop
outsl
fistpll
insl
ret
and
pop
rorb
call
lds
fistl
fsts
in
stos
mov
dec
jp
xor
jo
mov
mov
lods
cmp
add
or
mov
pop
add
jmp
push
jmp
lret
sbb
cmpsb
jo
pop
sahf
xor
enter
and
lret
pop
cmpsb
fnstenv
pop
pop
imul
or
mov
cmpl
flds
cs
shr
mov
imul
sub
mov
jno
enter
sarb
out
das
and
mov
mov
jmp
mov
push
lret
inc
clc
testb
cltd
fbstp
push
lret
cmp
hlt
enter
push
fmuls
xchg
aam
stos
in
outsb
mov
aas
inc
sbb
cli
flds
sbb
xchg
add
cwtl
mov
lret
mov
sar
xor
push
add
mov
xor
negb
arpl
mov
mov
dec
jle
pusha
xchg
gs
out
pop
inc
or
inc
cltd
jp
mov
ja
dec
stc
mov
fdivl
cmp
ds
or
xor
mov
mov
adc
fistpl
pop
jbe
lods
jbe
fs
mov
fistpl
sbb
aad
rolb
lcall
fwait
call
cmc
out
cmc
and
xor
xor
xchg
getsec
mov
rcll
ss
mov
das
sub
daa
mov
test
dec
mov
movb
ret
sub
dec
push
andl
lea
push
popf
js
push
mov
inc
jnp
inc
sarl
ds
add
adc
shrb
dec
sub
fiaddl
cltd
imul
mov
loopne
ja
ret
push
fisubrl
lods
mov
pop
sbb
insb
or
sahf
lods
les
lret
pop
cmp
stos
fisubl
call
cltd
push
fldenv
sub
stc
ret
push
out
shl
adc
or
mov
lret
incl
call
push
inc
sbb
idivb
xchg
add
or
dec
out
les
jecxz
cld
insl
inc
push
mov
mov
jp
dec
lahf
int
mov
movsb
push
sti
js
fmuls
or
ds
dec
cmp
or
test
mov
mulb
xchg
shrl
xchg
nop
mov
imul
xchg
sub
dec
in
rol
adc
nop
pop
jg
mov
hlt
in
pop
cltd
cmp
push
mov
test
jl
rorl
fcmovu
lret
loope
cmp
jns
mov
mov
repz
popf
or
lds
cmc
sub
js
mov
lcall
dec
cmp
push
jb
and
aad
add
xor
cmp
dec
jae
add
fcmovnb
movsl
mov
loop
negb
shl
fs
out
ds
jnp
stc
in
sub
sub
js
and
lret
aam
lahf
dec
divb
mov
jno
hlt
fisubl
dec
fistpl
ret
sbb
lods
lret
out
mov
movsl
lods
mov
mov
stc
cmp
sysret
fs
aas
and
stos
test
test
mov
int3
jo
rorl
xchg
les
insb
xor
fsubrs
frstor
push
lods
inc
jp
insb
lcall
cmp
lea
pop
std
hlt
sarb
gs
outsl
cmp
enter
mov
in
pop
adcl
bound
stos
test
imul
cmp
in
xor
outsb
in
shrb
jbe
mov
inc
mov
outsb
xchg
xchg
inc
stos
fldt
inc
mov
push
call
mov
cmp
out
jno
sarl
cmp
fs
insl
add
mov
aad
dec
jnp
imul
outsl
mov
dec
inc
into
sub
fdivs
minps
cmpsb
sbb
out
xchg
and
shlb
aad
popa
cmpsl
inc
sbb
jo
test
dec
mov
pop
cltd
mov
xor
or
xor
in
jb
iret
xchg
addb
cmp
sbb
lcall
hlt
bound
sti
or
stc
movsb
lock
mov
dec
call
lahf
enter
imul
ret
decl
pop
sub
jo
jb
xchg
mov
and
mov
sbb
cmp
push
or
cwtd
clc
inc
cld
pushw
movsl
push
sub
movsl
lods
insb
jns
call
pusha
jmp
or
or
dec
jge
in
adc
test
mov
mov
cltd
or
or
int3
mov
sbb
shrl
fldenv
add
popa
dec
mov
xchg
lods
scas
in
cmpsb
mov
ja
movsb
mov
xchg
adc
icebp
pop
test
or
xchg
cwtl
jg
xchg
adc
xchg
push
sub
js
mov
mov
mov
cmp
jns
addb
mov
icebp
fistpll
xor
or
andl
add
icebp
lods
ss
or
xchg
inc
dec
sub
pop
movswl
xor
jg
mov
pop
insl
pop
jp
push
sub
mov
sbb
mov
mov
pop
rolb
repz
fcompl
dec
fmull
test
jl
cld
in
call
xor
jecxz
pop
shll
icebp
rorb
aaa
rorl
cwtl
jg
test
idivb
pop
mov
movsl
fstl
xchg
sahf
pop
gs
outsb
testl
lret
push
sub
das
call
xchg
add
xchg
add
popf
jmp
dec
or
pop
inc
addl
cli
xlat
sub
cmpsl
dec
add
pop
xchg
ljmp
les
test
mov
add
das
stc
int
xchg
push
imul
lcall
or
sbb
inc
cld
dec
adc
xor
add
mov
insb
cmc
in
add
or
test
cmp
dec
subl
mov
push
rclb
sbb
test
adc
jb
push
ljmp
jne
lods
xor
or
cs
fwait
ret
mov
dec
andb
ss
gs
and
cli
mov
outsl
dec
inc
test
mov
mov
fucom
xchg
es
je
fxsave
push
into
add
rcr
pop
jo
divb
adc
inc
sbb
lret
arpl
mov
scas
in
lahf
push
lea
fiaddl
and
xchg
shll
or
call
mov
mov
jmp
sbb
inc
and
xorb
sbb
test
rcr
sbb
push
clc
test
sub
movsl
push
loop
and
lea
inc
xchg
ret
cld
jns
inc
out
arpl
in
jecxz
xchg
fisubs
push
movsl
xor
push
lcall
mov
cld
jbe
rorb
outsl
pop
xchg
pusha
mov
pop
and
lods
dec
ja
adc
imul
stos
nop
mov
jecxz
inc
ss
aad
or
in
mov
testl
pop
sbb
xchg
fwait
scas
xchg
mov
lcall
xor
in
xor
je
pop
push
xlat
dec
je
pop
jmp
add
add
jo
in
cld
sbb
and
mov
push
jl
in
mov
js
jae
shufps
orl
out
push
add
movb
je
dec
hlt
jbe
jo
fnstenv
fiaddl
add
movsl
push
mov
push
jle
daa
add
dec
in
out
dec
mov
push
or
jae
data16
inc
or
push
mov
cli
pop
out
jecxz
lock
dec
stos
aaa
fstpt
and
stc
xor
jae
jo
mov
xchg
pop
test
and
cmp
add
shr
or
mov
pop
mov
pop
sub
adc
and
clc
lods
mov
mov
xchg
nop
add
adc
push
out
push
ljmp
into
mov
daa
cmp
int
mov
fidivrl
add
lahf
scas
sbb
sub
jno
cli
cmpsl
sub
inc
hlt
fsub
or
mov
fsub
cmc
and
fmull
sub
or
xchg
ljmp
leave
fcompl
imul
lahf
decl
in
loope
adc
outsb
repnz
scas
cmp
mov
mov
pop
sahf
pusha
push
xchg
fdivrs
dec
call
xor
mov
nop
rcrl
ret
adc
iret
enter
dec
xor
js
jae
pop
insb
sub
movb
jbe
out
fistl
inc
dec
xchg
sbb
lock
dec
sub
cmpsl
add
gs
out
sti
div
shr
lahf
mov
test
sarb
stos
test
js
sbb
mov
sbb
sbb
fcmove
xor
push
data16
jno
adc
fwait
xor
scas
int3
push
shrb
mov
test
ffreep
sub
pop
adc
lahf
cli
jae
call
lods
out
outsl
dec
push
push
xchg
jb
imul
pop
mov
ret
rolb
mov
jmp
std
xor
pop
out
out
daa
pop
scas
std
int
loopne
mov
mov
leave
jg
add
ret
leave
hlt
movsb
xlat
xchg
cs
mov
mov
je
cld
sbb
mov
stos
mov
inc
imul
push
test
jnp
mov
loop
test
fidivrs
mov
dec
xor
scas
lea
pop
out
inc
pop
std
dec
mov
mov
xchg
pop
push
pop
out
xchg
test
mov
add
and
pushf
xchg
xor
sbb
lock
sub
cmp
mov
pop
jb
push
or
pop
leave
mov
mov
repnz
shlb
fadds
fsubrs
push
stc
jb
aaa
pop
test
aas
pop
and
or
in
iret
sahf
cmpsb
leave
dec
imul
pop
xchg
adc
inc
sub
and
push
imul
je
jmp
ja
pop
cmp
xor
popf
dec
cld
and
test
js
pusha
add
popa
inc
or
fidivs
loopne
das
lods
mov
jmp
xchg
in
shll
fs
jecxz
cmp
xor
int3
aam
sbb
add
dec
loope
jns
mov
inc
insl
xor
loop
inc
mov
in
fisubrs
out
lods
cmp
jb
adc
inc
dec
arpl
mov
and
mov
mov
cmp
push
mov
push
jo
and
inc
orb
pop
jo
shrb
and
cmpsb
insb
pop
push
ret
shlb
test
aaa
fstl
mov
out
xor
repz
jge
out
mov
dec
scas
jns
fdivs
loope
shrl
sbb
mov
nop
clc
orb
mov
mov
add
not
jecxz
xchg
gs
dec
mov
mov
jo
cmp
aaa
mov
mov
pop
push
lahf
mov
in
sbb
xor
repnz
mov
dec
mov
fiadds
xchg
ret
xchg
xlat
mov
add
loope
js
cld
adc
and
push
and
add
mov
or
int3
out
sbb
popf
xchg
lahf
fidivrl
xchg
mov
and
adc
cmp
or
xchg
dec
je
add
lds
cs
xor
sti
pop
lcall
in
cltd
mov
call
sub
inc
ret
or
lock
cmp
sbb
dec
seto
sti
int3
push
mov
mov
add
mov
push
mov
ljmp
jmp
add
cmp
nop
sub
fwait
mov
adc
aad
pushf
mov
jl
push
inc
adc
push
mov
repz
jg
sub
call
cs
subl
jo
cwtl
fxch
outsb
js
mov
test
lds
mov
stos
mov
push
fidivs
xchg
mov
negb
xor
jp
pop
in
inc
insl
mov
fdivrs
xor
ret
jecxz
push
inc
mov
jns
add
add
lds
scas
cld
xchg
sbb
pop
ljmp
add
dec
enter
dec
leave
js
add
mov
mov
cmp
cwtl
pusha
or
fistps
adc
mov
inc
pop
test
roll
mov
cmp
outsb
jp
xor
rcrb
in
adc
xlat
fstl
stc
or
stc
inc
push
xor
pop
je
repz
call
movl
push
pop
mov
pop
popf
dec
icebp
or
jns
sbb
add
aaa
lods
out
jno
mov
test
pusha
jno
testl
ja
dec
push
jg
or
arpl
movsb
pop
sub
repnz
xorl
inc
jp
xchg
sbb
lock
add
loop
lods
in
ret
loopne
jno
gs
push
outsb
mov
and
xor
mov
mov
insb
stos
iret
loop
and
or
adc
xlat
fmulp
insl
jg
inc
lahf
xor
sbb
mov
fwait
push
test
dec
jmp
sub
and
push
mov
jl
ljmp
mov
push
mov
xor
push
pop
mov
imul
ljmpw
push
out
pop
xor
das
mov
pop
mov
adc
cld
aas
inc
out
fisubs
jno
fldcw
cli
dec
cli
mov
stc
jl
dec
xchg
pop
ss
out
push
jecxz
mov
xor
imul
mov
jbe
int
cmp
enter
loop
mov
cmp
flds
inc
or
mov
je
jnp
adc
mov
pop
adc
jle
xchg
outsb
mov
or
dec
fsubr
pop
les
push
cmpsl
push
ljmp
cld
jae
adcl
mov
ret
fwait
and
jo
xor
mov
jbe
xlat
push
les
push
dec
out
inc
js
imul
mov
xchg
inc
scas
divb
rclb
in
sub
jmp
jns
push
cmpb
mull
sbb
bound
cwtl
mov
inc
sub
inc
mov
jns
ljmp
pop
mov
pop
fwait
mov
push
push
daa
ret
lcall
cmpsl
push
or
test
loop
inc
shrl
leave
cmpsb
cli
cltd
data16
jmp
or
mov
rclb
sahf
fs
cmpsl
neg
je
arpl
pop
mov
mov
cmp
fsubl
xor
shrl
jmp
dec
out
xchg
ret
jno
adc
mov
xchg
lret
pop
lret
push
pusha
and
insl
cld
popa
sbbl
ffree
jbe
or
lret
cs
int
idivb
int3
aam
jnp
pop
pop
mov
lods
movsl
cmp
inc
in
push
aaa
sti
lock
stos
insb
push
cmpb
cmpsl
in
mov
pop
int3
pop
fidivl
or
iret
roll
mov
adc
mov
xchg
xlat
dec
push
inc
imul
sub
xchg
mov
mov
jo
fmull
inc
fs
adc
test
daa
loop
mov
adc
fildl
sbb
xchg
out
add
cmp
leave
dec
fildll
jb
aad
push
xor
dec
jo
mov
stos
push
dec
loop
push
cmpsl
lcall
xlat
les
cmp
arpl
in
fdivrs
push
cmp
pop
mov
stos
sar
fidivl
mov
rcrl
push
fs
es
mov
cmp
cmp
roll
fldlg2
pop
jno
aaa
inc
sub
arpl
cmp
js
add
or
and
frstpm(287
daa
and
mov
into
pop
jge
mov
jbe
xchg
fistpll
adc
or
pop
js
pop
dec
ret
and
inc
xchg
xchg
mov
jmp
xchg
ret
jl
cmp
fsubl
mov
xchg
decl
adc
sar
adc
adc
dec
xor
jbe
sbb
test
pop
push
leave
loope
push
std
and
or
je
loope
dec
cmp
loop
leave
xor
mov
aas
bound
jno
xor
aaa
bound
mov
sub
loopne
ja
stc
pop
test
mov
fdivp
cld
mov
xchg
push
fcomp
test
arpl
cld
and
xchg
incb
and
sub
jle
scas
insl
push
fistpl
or
lcall
adc
mov
mov
pop
ljmp
std
jno
inc
test
jbe
loopne
ficoml
add
subl
inc
std
cmp
gs
inc
pusha
push
adc
lret
lahf
jle
cwtl
jle
rcll
add
and
dec
xor
cmp
jo
cmp
mov
jno
jb
flds
mov
rolb
mov
sub
mov
cmpsl
mov
aam
push
nop
cmp
adcb
loopne
or
loop
inc
stos
test
pop
pop
adc
sub
jo
xor
adc
mov
jo
jne
mov
cld
loope
loop
lahf
xchg
push
xor
xlat
aas
popf
scas
sbb
jns
pop
fistpl
ds
mov
sub
test
ret
xchg
loop
movsl
or
dec
loope
mov
lahf
lods
mov
loop
cli
dec
outsb
movsb
or
roll
das
jbe
xor
imull
sub
and
mov
fcoms
fldenv
mov
xchg
pop
xchg
aas
xchg
in
pusha
xor
jns
push
push
jne
je
add
sbb
dec
imul
cmpsb
push
movsb
fsubl
cmpsb
mov
xorb
pop
mov
out
sbb
rcrl
fnstenv
inc
outsl
int3
add
push
adc
push
adc
push
pop
mov
fiaddl
adc
cli
test
push
push
clc
iret
in
mov
aas
outsl
and
sbb
cld
ljmp
push
mov
std
and
cli
xor
and
lods
pusha
imul
or
xchg
arpl
gs
sbb
pop
sbb
sub
xchg
jp
arpl
scas
or
loope
enter
mov
lahf
popf
push
push
movsl
inc
sbb
pop
mov
je
ret
xor
mov
xor
frstor
push
push
out
xor
in
rcl
mov
repz
lahf
and
lock
jg
mov
or
arpl
xchg
insl
mov
cmp
mov
jp
les
fs
lea
insb
add
mov
mov
or
ret
mov
push
pop
test
adc
movsb
and
in
daa
negb
lea
ds
shll
movsl
gs
enter
sbb
sbb
in
inc
xor
out
sbb
add
int
mov
ret
das
stos
enter
dec
push
icebp
jmp
inc
in
addr16
jne
xchg
adc
fsubr
lahf
shll
push
sbb
test
mov
jae
dec
push
adc
mov
push
jnp
dec
shlb
fwait
shlb
dec
jno
mov
pop
fadd
dec
dec
mov
jbe
hlt
sbb
lahf
add
fisubrs
xor
jle
addr16
push
sahf
bound
mov
sbb
adc
adc
pop
out
mov
sbb
fabs
ljmp
cmpsb
mov
jbe
fcoms
inc
test
flds
std
adc
mov
push
jne
xlat
mov
out
inc
pop
jmp
cmp
aas
lock
ss
or
out
xchg
cmp
cltd
xor
shrl
lcall
cs
xchg
out
sbb
aam
std
lcall
add
jp
stos
cld
inc
add
jle
cmpsb
out
shll
push
cmpsl
pop
arpl
mov
cmp
imul
dec
xchg
adc
or
sbb
jmp
inc
lahf
inc
leave
iret
mov
leave
xor
xorb
sbb
inc
xor
adc
xor
add
iret
add
mov
push
add
out
imul
mov
fidivs
pop
outsl
adcl
fisttpll
cwtl
mov
pop
and
xor
lahf
pop
cmp
and
addb
cmp
rorl
push
mov
stc
and
iret
mov
ss
sub
stos
insb
or
repz
mov
xchg
mov
mov
fdivr
adc
mov
lds
sbb
dec
std
insb
loopne
pop
adc
cmp
xchg
das
test
pop
push
nop
je
rolb
bound
pop
jle
jo
lods
outsl
or
sarb
adc
mov
fidivrl
dec
ja
roll
mov
int3
mov
repz
dec
and
or
jno
aaa
stos
or
test
push
aad
dec
stos
sarl
ret
outsb
dec
data16
or
imul
or
adc
out
data16
add
testl
pop
mov
jle
and
and
shll
jnp
push
sub
fimull
lahf
cs
push
test
out
in
add
pop
fsubrs
in
das
dec
adc
lods
xorps
loope
rcll
ss
mov
mov
mov
mov
rorl
call
adc
xor
mov
fsub
dec
push
push
pop
out
cmp
add
stos
push
jno
sbb
adc
jecxz
neg
pop
inc
lret
cld
pop
dec
push
dec
decl
xor
jle
gs
call
gs
out
sbb
mov
shl
test
and
sbb
push
gs
popf
nop
sti
jmp
dec
in
add
push
pop
inc
or
popf
sbb
nop
pop
mov
jge
jg
sbb
mul
add
jae
adc
addr16
and
inc
fbld
ja
sub
pop
movsb
in
ja
jnp
mov
test
test
nop
xor
cltd
cmpsl
xchg
xlat
inc
pop
stc
sub
sbb
ficoml
mov
adc
pop
ds
mov
dec
mov
leave
aaa
dec
push
dec
rorl
pop
mov
sbb
add
pop
lcall
jp
push
cmc
leave
pop
idivb
mov
or
stos
push
adc
icebp
jmp
cmp
jae
dec
lea
test
fucomp
popa
jo
bound
aaa
arpl
daa
dec
leave
push
idiv
cmc
lcall
stos
xchg
cmc
and
clc
int3
push
xor
jmp
sub
fmull
bound
loope
add
mov
jb
aaa
cltd
pop
or
mov
mov
dec
fwait
js
cwtl
dec
andl
and
inc
in
inc
push
test
inc
push
or
gs
inc
xchg
sbbb
fwait
adcl
mov
mov
mov
std
xchg
sbb
scas
sub
in
mov
pop
or
jmp
jmp
xchg
rclb
or
inc
jns
test
xchg
sar
jl
int3
mov
adc
cmpsl
inc
sbb
rorb
daa
adc
add
out
in
dec
fdivrl
pop
xlat
scas
mov
or
loop
loop
lods
sub
push
fnstenv
jo
int3
xchg
ja
mov
sarl
jo
pushf
sub
dec
aas
imul
filds
jg
inc
js
dec
pop
rol
inc
movb
or
add
loopne
test
test
ss
inc
sbb
stc
xchg
jecxz
cli
add
pop
or
test
pop
mull
sub
and
jp
xor
ja
leave
adc
cli
loope
incl
sbb
inc
sbb
dec
cmp
cmpsb
fwait
mov
or
cld
and
push
mov
fcoml
lds
lock
into
mov
subl
les
jg
aad
pop
pop
scas
loopne
or
and
icebp
inc
stos
loop
cmp
aam
out
dec
js
or
sub
outsb
cmp
push
arpl
loope
jae
call
test
roll
xchg
mov
ficoms
sub
rclb
fcoml
inc
xchg
inc
imul
cmp
pop
mov
inc
mov
test
nop
inc
cmp
cli
addl
xchg
add
sbb
fildl
enter
out
jmp
pop
cmp
loop
mov
push
jno
sarb
in
cmp
aam
ds
xor
mov
int
je
mov
cmp
cwtl
out
movsb
xchg
adc
and
or
cmpl
xor
mov
cmp
mov
add
inc
inc
fidivrl
xchg
xor
js
loope
cwtl
imul
sub
mov
fidivrs
insw
loop
in
pop
lods
or
sub
out
adc
and
cmpsb
mov
jl
lds
mov
and
outsb
and
dec
je
imulb
fimuls
clc
bound
or
call
cmp
jo
adc
xor
xlat
and
or
js
shll
or
xchg
jnp
ja
in
push
pop
mov
insb
inc
out
test
test
mov
aaa
jg
and
sbb
aad
jecxz
pop
iret
xlat
sbb
push
loope
fcmovnbe
insb
lods
add
lret
je
or
push
cmp
inc
push
aas
lahf
imul
mov
fstl
jmp
in
mov
ret
cwtl
pop
je
mov
hlt
xchg
es
adc
cmpsb
dec
and
mov
pop
cmp
andl
jo
lock
adc
jp
orl
sub
movb
mov
inc
les
lret
cltd
mov
addb
mov
inc
stos
adc
adc
std
jnp
fwait
cmp
loop
push
outsl
xchg
xchg
sbb
sbb
int3
xor
sub
xor
sub
inc
lret
and
push
fs
add
icebp
cs
pop
sbb
in
mov
add
pop
inc
xchg
add
jb
int
mov
dec
xor
jp
lock
arpl
fwait
cmp
int
cmp
js
dec
lods
adc
inc
pop
ja
insl
outsb
mov
jb
stos
sbb
or
jle
sahf
ljmp
cmp
jg
bound
xor
je
nop
test
cli
add
fs
pop
push
movsl
out
stos
lret
push
cmp
push
test
add
jmp
stos
xchg
cli
in
sar
push
mov
cmp
scas
mov
sub
xor
jae
mov
outsl
mov
add
jl
addl
xor
cmpl
cmpsb
in
xchg
or
and
xor
sub
add
ss
insl
sub
mov
pop
and
ja
push
iret
mov
mov
jecxz
rcrb
in
and
dec
cmovge
and
jle
mov
sbb
jno
and
js
mov
imul
push
and
data16
nop
sbb
fstps
push
mov
in
out
push
adc
cmp
mov
mov
in
inc
fnsave
sbb
aam
imul
dec
out
loope
fisttpll
lea
adc
adc
dec
xor
inc
ret
shrb
pop
lds
inc
cmp
cmpsb
es
inc
in
xchg
inc
push
call
insl
iret
mov
add
cltd
out
lahf
inc
inc
leave
int3
mov
add
jnp
pop
cmp
mov
pop
js
movsl
iret
ret
add
push
imul
cmpsb
xor
imul
push
sahf
push
xor
pop
bound
dec
jb
out
jecxz
sub
push
popf
mov
addr16
aas
xchg
xchg
xor
push
add
and
or
iret
mov
and
leave
mov
mov
imul
out
sub
sub
adc
mov
adc
popf
jle
pop
incl
cltd
sbb
push
mov
lea
mov
shlb
rorb
sbb
mov
inc
js
inc
test
mov
ret
add
xchg
lret
sahf
add
les
jae
dec
shlb
test
ficompl
sbb
movsl
aaa
jne
dec
adc
lcall
mov
pushw
mov
push
insb
popf
fcmovnu
pop
and
std
sub
mov
jle
ss
fwait
mov
or
mov
push
negb
les
dec
mov
fwait
imul
inc
in
lret
in
popf
jno
or
jg
mov
jns
xor
addr16
jmp
lret
inc
scas
push
mov
icebp
or
lret
ss
sub
push
jecxz
js
bnd
pop
movsb
pop
orl
mov
fnstcw
or
fucomi
bound
inc
or
xor
stos
ret
fstl
push
pop
cld
lea
test
stos
and
mov
insb
test
dec
aad
imul
push
sbb
nop
lea
and
ljmp
pop
push
mov
sarb
jbe
lods
aad
in
pushf
xchg
cmp
add
push
inc
xor
fst
inc
arpl
aas
push
push
sarb
and
lret
or
jle
inc
and
stc
repz
jecxz
xor
pop
or
jp
xor
or
shll
inc
lret
jmp
adcb
adc
notb
popa
movb
sub
les
fdivr
inc
popa
sub
fistpll
xorb
push
or
sub
mov
insl
cli
lcall
xchg
lcall
pop
pusha
sub
jns
aaa
mov
pop
addr16
mov
mov
sbb
xchg
sti
and
subl
movsb
out
arpl
sub
fimuls
xchg
sub
jmp
dec
aas
sub
imul
cs
xchg
inc
aad
les
xchg
push
mov
aad
cwtl
dec
daa
inc
mov
and
jecxz
pop
sub
mov
scas
movsb
pop
dec
mov
jmp
negl
imul
clc
sub
mov
fildl
bound
cmp
inc
int
insl
jmp
scas
xchg
js
aaa
adc
push
filds
mov
sub
and
gs
das
push
mov
lods
popf
inc
mov
add
imulb
sbb
sahf
push
pop
addr16
mov
insl
fldenv
adc
aad
cltd
and
and
and
xchg
inc
movsb
lea
les
fwait
inc
mov
jp
jmp
inc
mov
pop
sub
mov
adc
sub
cmpsb
in
sub
xchg
imul
cmp
cmpsb
jb
repnz
and
into
aad
mov
fmul
jno
into
add
and
out
mov
and
and
jle
mov
mov
pop
fcompl
loopne
and
je
pushf
notl
xor
jp
push
jg
decl
sti
enter
scas
xchg
adc
add
rorl
movsl
loop
adc
mov
jge
daa
jns
popa
rcr
shrb
sub
imul
push
jge
add
cmp
adc
aad
mov
inc
fstl
or
mov
fnstcw
fdivl
pushf
cmpsb
imul
mov
adc
gs
lea
pop
mov
xchg
lahf
clc
ja
daa
mov
push
pushf
imulb
pop
add
cli
jo
jbe
inc
mov
jbe
adc
loope
xchg
test
dec
pop
and
jns
inc
cmp
dec
cmp
jle
mov
stos
dec
lea
inc
and
jle
jnp
cmp
inc
aas
and
cs
lds
test
gs
sub
je
into
mov
dec
lret
add
out
lahf
xor
cld
or
jl
mov
rcrb
out
pop
push
icebp
test
shll
jnp
jo
lcall
adc
popa
imul
sub
ss
addr16
inc
adc
dec
cmp
cld
cmp
sbb
repz
pusha
xlat
lahf
adc
dec
hlt
pop
scas
sbb
rorb
and
aad
dec
jae
dec
lods
cmp
and
mov
add
mov
mov
sub
pop
cwtl
call
rorb
push
xchg
xchg
mov
sub
leave
jne
cmp
pop
dec
inc
iret
inc
fwait
add
inc
sar
adc
mov
inc
fiaddl
dec
std
call
xchg
rcl
insb
ss
sbb
or
or
add
loop
ss
movsb
shr
out
cltd
xchg
sub
arpl
pop
inc
test
push
xchg
xchg
incb
stos
dec
cltd
imul
adc
jns
xor
repnz
js
gs
cs
jmp
out
xor
push
and
xchg
mov
std
inc
bound
add
pop
lods
jns
mov
inc
xchg
inc
cmpsl
dec
mov
mov
movsb
shrl
icebp
push
inc
out
push
inc
repnz
stc
pop
aam
rcll
jmp
jmp
xlat
loop
xchg
dec
ja
adc
jle
xor
ret
insl
sahf
push
inc
lcall
sub
inc
test
scas
cld
lcall
popa
fs
shll
mov
andb
xor
faddl
cmp
and
and
jl
ds
jp
movsb
mov
xchg
outsb
inc
repnz
addr16
dec
pop
add
add
mov
nop
cmp
aam
xor
std
imul
or
sbb
jno
test
mov
test
movsb
push
mov
insb
xor
jl
mov
dec
cmp
outsl
mov
jp,pn
rcrb
inc
dec
mov
inc
jl
ds
pop
adc
pop
out
mov
pop
and
adc
arpl
mov
xor
xchg
cmpsl
loop
lods
sarb
inc
cmp
negl
mov
out
or
repz
mov
mov
jle
or
or
repnz
jecxz
sbb
insb
xchg
les
jns
or
mov
mov
nop
hlt
jecxz
out
xchg
mov
push
jnp
cmp
insl
in
sbb
std
fscale
icebp
ljmp
dec
mov
mov
inc
mov
xchg
sub
adc
dec
pop
and
sbb
dec
bnd
xchg
adc
popa
xor
movsb
add
mov
lods
dec
cmpsb
inc
sar
mov
idivb
xor
push
mov
or
sub
loopne
ret
mov
mov
xchg
push
lock
add
icebp
into
add
push
jp
mov
loop
ret
inc
sbb
add
aam
sbb
icebp
jl
xchg
andl
or
or
or
lea
and
push
sbb
jecxz
sub
cmp
cmp
fmulp
cmpsb
cwtl
mov
jp
pop
mov
mov
push
pop
setl
insl
xchg
insb
scas
jl
scas
shll
inc
push
jne
xchg
dec
cwtl
push
test
aas
and
bound
cwtl
push
xchg
mov
add
imul
gs
fwait
outsb
jae
enter
mov
sub
sbb
ficoms
adc
push
or
scas
les
imul
jg
lock
pop
jmp
adc
push
pop
push
cmpsb
in
adc
leave
xor
movsl
rol
mov
stc
into
and
push
or
xlat
mov
mov
mov
pusha
adc
mov
call
mov
in
cmp
or
dec
push
bound
or
push
iret
sbb
shll
in
dec
push
xor
mov
jecxz,pn
sub
mov
test
ficoml
adc
add
xor
jp
lods
push
fldl
sbb
ret
scas
adc
idivb
test
adc
les
icebp
mov
inc
cmc
lcall
sub
out
push
pop
mov
inc
lret
jo
sbb
and
movsb
xchg
popf
loope
pusha
pusha
jmp
lods
push
and
shll
das
les
fiadds
sti
outsl
adc
mov
sub
adc
lods
cmp
repz
push
hlt
sbb
inc
aam
pop
mov
sbb
nop
mov
mov
pop
mov
mov
mov
xlat
fisttps
mov
mov
fwait
xchg
cmc
xchg
pop
or
mov
das
in
divb
sbb
adc
inc
imul
xor
daa
push
fdivrl
xchg
push
sbb
inc
sti
ss
mov
data16
dec
enter
mov
pop
cltd
sti
pop
repz
mov
lods
add
mov
pop
mov
mov
push
fucom
adc
aad
mov
loope
jnp
test
sub
jb
mov
jno
je
xchg
lock
inc
and
sub
jl
xchg
shr
and
xor
icebp
in
or
test
pop
adc
mov
mov
test
mov
addr16
inc
mov
xchg
jl
movsl
lods
sub
div
mov
nop
sti
scas
sbb
sub
or
sub
xchg
notl
dec
in
incb
sbb
out
or
mov
cwtl
add
adc
dec
pusha
jle
fsubr
dec
incl
popf
mov
push
add
fwait
mov
rcl
pushf
mov
gs
jmp
fldl
cli
xchg
in
fadds
inc
lcall
les
mov
and
test
xchg
aaa
jg,pn
sub
push
mov
pop
rolb
aas
lcall
lcall
ret
inc
add
js
sub
fwait
test
sub
pop
adc
and
sti
outsl
ret
jno
mov
inc
sub
mov
lock
test
and
testb
adc
imul
jb
pop
sub
mov
cmpsl
popf
xchg
jl
addr16
push
cmp
cld
cmpsb
jmp
clc
addl
adc
fcmovnb
in
cld
jl
adc
test
repz
popa
inc
negb
lock
int
and
xor
add
loope
xchg
sbb
pop
sub
sbb
mov
loope
iret
stc
push
jecxz
pop
xor
sti
int
lods
jg
cwtl
call
mov
jb
sub
repz
cmp
push
pusha
dec
lock
lret
mov
mov
push
push
mov
rcrb
into
jp
sbb
mov
dec
xchg
sarb
loopne
iret
sbb
popa
inc
enter
iret
adcb
mov
and
cmc
mul
popf
and
movsb
int3
cmpsb
jge
adc
out
pop
jae
jg
dec
fwait
popa
shll
jmp
xchg
cwtl
pop
dec
cmp
pusha
dec
test
lret
mov
ret
jbe
mov
enter
stos
mov
test
push
movsb
mov
test
add
sub
or
mov
xchg
mov
cmpsl
and
sti
cmp
dec
fldt
stos
add
ljmp
xchg
js
cmp
xlat
popl
and
jns
pop
mov
inc
out
sti
xor
push
int3
mov
dec
fstl
popf
imul
movsb
clc
dec
mov
dec
scas
push
dec
leave
jbe
mov
shl
and
adc
imul
sbb
fcoml
jno
mov
sbb
incb
daa
mov
outsl
pop
xor
lahf
rolb
mov
mov
push
dec
insb
pop
daa
pop
mov
adc
mov
test
aaa
adc
adc
xor
mov
fnsave
mov
push
hlt
dec
pop
push
std
sbb
fdivl
lds
sbb
mov
das
ud1
xor
jbe
enter
iret
mov
jbe
adc
mov
dec
jo
pop
sbb
cltd
inc
aas
jp
ret
arpl
fwait
aad
in
mov
shll
xorb
mov
and
jp
sub
nop
mov
int3
mov
subb
sbb
xchg
cmp
adc
inc
sbb
mov
sbbb
rorb
std
ds
jo
cli
inc
fcom
cltd
cmp
test
sub
pusha
mov
daa
insl
sbb
dec
add
and
push
lds
pop
add
jecxz
out
cmp
sub
rorl
lcall
jmp
mov
insl
pop
mov
fs
push
movsl
insb
scas
rorb
mov
add
shll
sti
adc
mov
lret
mov
adc
inc
jno
push
mov
call
shrl
sbb
fistps
leave
mov
pop
add
in
dec
repz
imul
mov
rcrb
stc
mull
insl
pop
jmp
incb
out
jge
mov
mov
imul
xchg
adc
into
push
or
push
and
or
insl
jge
imul
outsl
mov
imul
xchg
mov
sub
test
inc
mov
scas
mov
jmp
lds
jnp
lret
lret
xor
test
mov
push
xchg
adc
mov
and
sbb
mov
xchg
adc
dec
or
mov
cmp
jge
push
sub
inc
sbb
push
xchg
fcompl
add
pop
daa
dec
orb
fidivs
icebp
pop
cmpsl
cli
fistpl
push
arpl
lods
pop
sti
adc
push
sbb
or
add
cmp
ds
rorl
pusha
shlb
sbb
adc
push
cmpsb
sbb
bound
fidivrl
add
pop
test
fnstenv
daa
ss
cmc
call
hlt
int
sub
call
outsl
or
mov
ds
dec
lock
das
and
outsb
popf
rolw
sub
mov
or
xchg
and
cltd
jle
lret
fidivs
sub
cmp
inc
xchg
mov
clc
mov
lock
ss
mov
sub
pop
test
lret
stc
cli
andb
rcrb
xlat
and
fsubrp
sbb
dec
adcb
repnz
jge
mov
out
ljmp
jge
andl
adc
or
jb
mov
and
push
push
lods
inc
push
js
loop
jge
and
dec
mov
incl
ret
or
xchg
in
in
pop
xchg
test
in
add
mov
jae
scas
mov
add
outsl
je
cmpsb
pushf
shr
sahf
mov
push
aas
and
ja
jae
das
adc
xor
in
xchg
bound
das
cmp
cmc
out
push
arpl
out
aaa
rorl
pop
xchg
test
or
je
xchg
cmp
pop
push
dec
dec
shrb
cmpl
ja
rcrl
mov
jp
mov
in
jnp
pop
fldcw
pop
daa
testb
jns
sbb
test
mov
xor
inc
mov
pop
mov
mov
jecxz
mov
xor
fdiv
adc
lods
xor
lods
push
mov
test
push
stos
pop
aaa
pop
popf
ret
std
sarb
sbb
test
bound
inc
das
xor
xor
test
fstp
rcr
in
mov
lods
add
lea
in
icebp
add
and
adcb
rcll
lods
xchg
aaa
pop
out
pop
aad
imul
push
dec
jo
cmp
scas
in
imul
inc
es
push
push
or
cmc
sbb
mov
pop
and
mov
mov
mov
aam
stc
test
repz
push
pop
and
inc
loop
in
inc
mov
ret
cmp
inc
rcr
sub
jns
mov
mov
std
cmp
daa
adc
and
push
push
push
vpextrw
lds
adc
movsl
cmp
and
push
outsl
add
sub
pop
dec
xchg
daa
loope
or
cmp
popf
flds
pop
outsl
je
cwtl
fldenv
ret
les
sub
xor
repz
cmpb
adc
fcomps
pop
out
icebp
cld
lahf
imulb
pushl
in
mov
sub
xchg
mov
mov
sarl
cmp
iret
adc
sbb
sbb
sbb
stos
mov
or
add
das
add
dec
ss
or
out
adc
call
mov
jne
stc
insl
mov
cmp
sbb
add
add
in
rclb
add
decl
jl
pop
xlat
int3
ss
sub
rcl
xor
fwait
xor
push
mov
cld
sub
pusha
adc
push
adc
mov
lods
cld
adc
mov
aad
scas
jg
inc
mov
adc
popa
fistl
mov
mov
xchg
inc
mull
gs
mov
rcl
pop
and
dec
pop
inc
or
pop
mov
out
lret
cmp
cmp
arpl
out
inc
std
xchg
aad
mov
fndisi(8087
xchg
test
pop
cmp
jbe
fadds
rcrb
adc
pop
inc
inc
mov
mov
or
test
lods
cmp
test
inc
mov
shlb
and
mov
push
jno
sbb
iret
sbb
push
xchg
fstl
cmp
inc
mov
sarl
xchg
rorb
ds
xor
test
test
rcl
les
icebp
icebp
cmpb
mov
loop
fistps
gs
adc
and
leave
mov
shll
pop
pop
cmp
mov
xchg
in
in
mov
fwait
dec
mov
sbb
inc
ret
xor
popa
mov
rolb
add
vprotw
xor
mov
negl
imul
push
outsl
and
ficomps
shlb
dec
popf
add
out
xor
cwtl
clc
test
sbb
mov
scas
push
mov
dec
nop
mov
pop
leave
stos
out
push
std
inc
insb
or
repnz
repnz
cmpsb
daa
jns
clc
jb
push
fnstenv
mov
aas
loop
adc
push
sbb
fnstsw
add
xchg
sahf
or
sub
push
movsb
fsts
fimuls
insl
or
lahf
sub
xchg
xchg
or
mov
xlat
or
call
in
test
test
or
inc
push
and
scas
pop
jl
jne
out
xchg
cmp
popf
jle
push
cwtl
and
xor
movq
jne
fs
inc
adc
pop
ljmp
or
push
test
lods
mov
rcrl
call
pop
jb
mov
cmp
sub
jp
add
stc
sbb
cmpsb
push
mov
and
pop
xchg
dec
sub
xor
mov
jp
dec
jl
xchg
and
aas
adc
pop
int3
adc
cs
sbb
js
cld
jns
jge
and
or
adc
and
lea
ss
data16
cmp
call
mov
jp
xchg
add
mov
pop
ds
aad
loopne
sbb
push
mov
xchg
sbb
xor
pop
mov
mov
mov
or
mov
lret
fimull
test
sbb
inc
sti
aas
fnstenv
out
jno
mov
aas
shlb
movsb
xchg
jbe
xor
fs
mov
ror
mov
divb
push
ja
inc
lar
sarl
ret
xor
mov
mov
mov
push
out
stc
mov
int3
jge
mov
outsb
fs
andb
rclb
je
scas
pop
out
xchg
shll
ljmp
cmpsl
jne
cs
sub
nop
flds
fcoml
frstor
daa
loope
sbb
movsl
mov
adc
jle
jae
mov
je
shlb
adc
ds
add
pop
mov
mov
movsb
push
ret
mov
dec
sub
fisttpl
mov
leave
and
fs
cwtl
mov
mov
push
clc
adc
dec
packsswb
scas
pop
mov
xlat
sbb
mov
mov
je
push
jl
or
rorl
call
pop
xor
nop
iret
cmp
xchg
scas
push
subb
inc
popf
and
and
aaa
dec
or
adc
xchg
mov
pop
sub
imul
sarb
push
push
xor
sahf
popf
xchg
xchg
push
jbe
fsubr
repz
jmp
test
and
in
dec
sbb
adc
jmp
xchg
popf
or
adc
mov
shlb
sbb
or
jbe
fmull
pop
arpl
push
sbb
xchg
movsb
pop
push
xchg
dec
xchg
shr
lcall
pop
cmp
add
fldt
cmp
pop
jo
pop
sbb
in
scas
cmpsb
pop
dec
xor
stos
inc
js
insl
jge
pushf
xchg
xor
fsts
push
mov
jmp
out
dec
sub
mov
insb
mov
out
mov
out
leave
xchg
mov
and
iret
adc
xor
leave
and
mov
mov
out
push
xor
fucom
lahf
mov
ficompl
test
test
push
add
lods
push
daa
bound
pop
fmull
lret
push
xor
bound
push
scas
cmp
fisubrs
xchg
and
add
xchg
add
lcall
jge
test
jecxz
hlt
add
xchg
adc
or
test
adc
lret
push
jae
mov
sub
outsl
daa
xchg
dec
jg
loopne
xchg
out
adc
cmc
xor
cwtl
mov
mov
mov
lods
mov
xor
cmp
mov
in
stc
mov
ljmp
sti
lcall
mov
in
sub
and
sub
pop
push
mov
sbbb
cltd
add
xchg
sub
mov
push
fcom
xchg
sbb
lcall
mulb
xor
mov
fucom
or
stc
add
test
scas
cmp
inc
inc
lods
mov
adc
mov
sahf
addr16
add
xor
lret
je
sbb
push
mov
add
adcb
or
push
jle
stos
inc
rep
xchg
sti
out
es
or
inc
dec
add
or
sbb
out
xor
mov
addr16
push
in
clc
repz
push
xchg
push
jmp
mov
es
rcrl
adc
ud0
push
into
cwtl
add
fs
xor
sub
and
les
out
daa
jb
dec
js
xlat
inc
out
loop
and
sub
jecxz
pop
out
mov
pop
ficoml
sbb
fcmovnbe
and
mov
aad
inc
xor
cmp
pushf
lods
xorl
lret
jo
iret
cwtl
jo
mov
lahf
adc
lret
or
imul
clc
test
push
cmp
sub
fstl
mov
push
add
jne
jb
dec
jmp
shrl
or
cli
loopne
sub
sub
cmpsb
call
cmp
sub
movsb
xlat
mov
jl
test
xchg
loopne
or
scas
mov
pop
push
and
and
jae
xor
out
lret
inc
push
xchg
mov
fdiv
mov
out
in
push
scas
filds
add
jo
mov
mov
or
dec
outsb
outsl
pop
push
imul
popf
mov
shrb
or
arpl
movsb
cmp
mov
pop
mov
hlt
nop
test
cwtl
adcl
mov
cli
aam
movsb
add
int
ss
push
push
dec
cmp
addb
not
pop
add
xor
jns
and
into
sbb
jl
insl
xor
ljmp
inc
inc
xchg
sub
xor
icebp
dec
bound
pop
arpl
cmp
and
pushf
fs
popf
int
inc
daa
mov
ret
mov
xchg
mov
sub
mov
lcall
imul
push
stos
popa
xchg
mov
mov
lret
loope
bound
xchg
sti
hlt
cld
pop
or
mov
adc
ja
testl
or
mov
bound
sbb
sub
ljmp
dec
or
and
dec
mov
in
dec
iret
inc
jle
add
mov
aad
push
ret
out
cmpsl
and
std
shrl
lods
lea
jne
inc
pop
js
inc
xchg
repnz
mov
jnp
in
jmpw
cmp
sbb
inc
loope
in
dec
clc
push
out
icebp
xor
sbbb
imul
iret
sbb
inc
sbb
sbb
rclb
xchg
sub
jbe
fwait
stos
adcb
xor
dec
sbb
jge
btsl
stc
popa
insb
data16
xor
cmp
in
mov
sbb
sbb
jecxz
rolb
xor
xor
call
xorl
negl
in
gs
jne
sar
inc
int3
shlb
and
out
inc
lcall
push
or
out
cmpsb
in
cmp
popf
loope
fidivrs
cld
mov
jp
out
call
inc
das
in
outsl
xchg
clc
cmp
lock
cmpsl
fldenv
fdivl
inc
xor
pop
lea
push
cmp
and
or
xchg
stos
push
and
push
sub
call
mov
mov
inc
imul
fildl
xor
imul
and
les
jno
xchg
sti
and
add
mov
xchg
lcall
lahf
inc
in
mov
mov
pop
sub
cmp
dec
push
mov
add
icebp
mov
push
aas
int
scas
jecxz
mov
xchg
jmp
xchg
mov
sbb
add
sub
push
xchg
mov
scas
movsb
jmp
movsb
fidivrs
cwtl
cmc
inc
mov
int
jb
mov
out
jae
movsb
mov
pusha
testb
adc
jae
xor
orb
data16
ja
and
les
mov
enter
mov
js
addr16
mov
icebp
mull
fscale
ja
mull
jbe
loope
xor
adc
adc
inc
popw
ficoml
movsb
push
sbb
lock
push
pop
fisttpl
push
add
sti
sub
adc
cli
sub
xor
mov
xor
sbb
loop
test
xor
xor
test
mov
imul
mov
and
jns
push
stos
jo
popf
dec
testl
inc
int
push
xlat
dec
jge
mov
xorb
popf
popa
call
das
das
dec
dec
mov
or
mov
jae
and
xor
sbb
jmp
test
mov
xor
xchg
sub
jmp
jbe
or
add
cmp
enter
xor
cmpsl
cmp
xor
les
sbb
dec
sub
sub
mov
jb
cmpsb
aas
push
xchg
fdivl
fs
jno
sub
or
imul
and
cs
movsl
inc
xor
inc
mov
out
add
out
jae
sub
clc
jle
push
rcrb
push
inc
stos
mov
sti
and
and
inc
pop
negl
mov
sbb
neg
out
or
jmp
push
shlb
mov
into
sub
mov
and
imul
sahf
jo
pop
rclb
fmull
sub
adc
sub
push
sub
push
mov
adc
sbb
frstor
cmp
repnz
cmp
ss
gs
dec
shrb
jecxz
loope
mov
outsl
ret
jae
push
fldl
lods
aam
cmpl
mov
push
outsl
push
xlat
push
and
imul
and
sub
lea
mov
push
inc
insl
inc
mov
sbb
jb
aas
jno
lea
mov
out
add
or
jle
ljmp
mov
jge
andl
enter
gs
add
sub
or
aam
test
fs
jb
push
mov
sbb
je
xor
cmp
pushf
push
or
mov
sahf
mov
xchg
xor
pop
push
adc
xor
out
dec
int3
scas
adc
gs
mov
mov
seto
mov
and
inc
aas
and
mov
test
lret
outsl
mov
jmp
lcall
or
adc
outsb
inc
ret
into
cmpsl
pop
nop
leave
sbb
outsl
xor
adc
leave
loopne
lret
xor
aas
sar
sarb
pop
xchg
insb
mov
mov
xchg
mov
movsb
pop
popf
scas
pusha
pop
jmp
lret
cmpb
push
data16
and
cmp
leave
push
ret
dec
push
outsb
push
add
das
test
sbb
test
jl
pop
in
andb
xchg
jb
pop
inc
ret
cmpsl
out
lcall
in
push
sti
imul
mov
or
inc
or
cmc
xor
pusha
add
cmp
dec
push
pop
mov
cmp
leave
loopne
cmpsb
mov
in
pop
inc
ja
cmp
xchg
jp
ret
xor
cmpsb
in
rorb
adc
fnstcw
and
dec
sbb
cmpb
lock
push
lcall
jo
xchg
shrb
imul
lahf
cltd
adc
dec
ret
insl
cmc
and
pop
mov
and
mov
popa
outsl
push
push
push
lcall
sub
int3
fwait
in
jmp
lods
sahf
cmp
mov
mov
cmp
cmp
loope
xor
dec
sbb
hlt
mov
les
adc
pusha
jno
in
int3
inc
insb
sub
roll
mov
ljmp
push
mov
sti
dec
inc
ja
cs
inc
mov
fsubs
cmp
pop
dec
lret
dec
imul
mov
fldenv
roll
mov
testb
sahf
pop
dec
sbb
test
dec
mov
jne
mov
and
mov
xor
add
ja
add
push
or
sti
xchg
jle
ffreep
loop
dec
sti
jne
push
sbb
jp
mov
inc
rorb
aas
add
cwtl
jno
xchg
pop
mov
push
xor
sti
lret
push
lock
xchg
push
sub
xchg
add
lods
pop
pop
shl
lret
popa
add
sbb
fisubrs
popf
movsb
popa
lods
pop
hlt
pop
push
rorb
add
cmpsb
lret
ljmp
lock
iret
sub
lds
push
mov
out
aam
mov
jmp
inc
fdivs
in
icebp
loopne
sbb
andl
pop
lods
push
insl
or
jmp
xor
mov
jmp
rorb
add
push
pop
adc
jge
out
movsl
sbbl
xchg
push
aad
mov
addr16
mov
fmuls
pusha
xchg
cwtl
xor
dec
xor
lock
sub
lea
lock
cmp
jno
sahf
inc
dec
leave
mov
insl
ljmp
sub
bound
fcoms
lea
jns
xor
cld
lods
fsts
xor
jle
jmp
lret
adc
addr16
inc
cmp
loope
dec
adc
or
cmpsb
mov
push
in
fidivs
aam
loopne
dec
adc
cmp
pop
lods
ret
jle
cmp
iret
add
lret
xchg
mov
rol
xchg
into
dec
mov
bound
xchg
push
inc
mov
mov
pop
loop
imul
pop
sti
dec
aam
mov
add
dec
inc
lods
sbb
jnp
inc
push
andb
dec
inc
mov
js
mov
ja
mov
arpl
jl
jecxz
sbb
mov
push
pop
mov
ret
cmp
pop
imul
dec
call
repnz
lock
and
and
mov
rclb
pop
xchg
jp
xor
cltd
xor
push
gs
mov
movsl
lahf
push
inc
mov
sbb
pushl
daa
jp
adc
popaw
or
sti
fs
dec
adc
adc
and
jne
clc
lret
movsb
xchg
and
sahf
pop
jg
adc
fs
fwait
pop
scas
inc
sarl
dec
aas
pop
faddl
push
cmpl
jl
fiaddl
popa
pop
rcl
testl
mov
stc
loop
mov
jno
mov
sti
lods
insl
mov
sub
push
add
mov
call
pop
mov
xchg
and
stos
mov
dec
repz
xor
or
scas
in
sub
push
std
popf
lea
and
sbb
sahf
push
lock
mov
cmp
test
xchg
clc
idivb
jo
sub
cmp
nop
add
lret
inc
mov
pop
addr16
ror
mov
loop
data16
inc
push
gs
into
test
es
shl
pop
mov
inc
out
sarl
cmp
inc
dec
lods
cmpsb
mov
jg
into
mov
sub
cmpsb
rcrl
and
dec
mov
imul
push
iret
push
lahf
xor
dec
inc
mov
mov
xchg
ret
jno
clc
lcall
aas
inc
out
and
popa
movb
mov
mov
call
inc
je
push
push
pop
xchg
and
inc
dec
fcomps
in
cs
lds
js
pop
cli
es
aas
xchg
js
hlt
movb
loop
jmp
push
ss
outsl
fbld
jl
xor
adc
cmc
arpl
negb
jns
cmp
pushf
mov
mov
movsb
pop
dec
cltd
fdivr
sbbl
xchg
mov
cmp
test
mov
mov
aaa
popf
loopne
cmp
das
lock
mov
out
or
mov
mov
push
loop
sbb
jnp
pusha
xchg
or
push
test
inc
and
add
fwait
pop
push
stc
inc
or
icebp
jb
lods
mov
rorb
int3
xor
dec
daa
out
and
inc
mov
test
js
add
imul
insl
mov
mov
sub
aad
inc
fidivs
test
cmc
jg
xchg
adc
enter
cmp
popa
int
cs
hlt
into
jno
cld
into
stc
and
cmp
sbb
stos
jmp
add
lds
mov
push
loope
cmp
sub
jb
add
mov
shlb
lret
out
jp
jecxz
or
mov
cmpsb
cmpsb
outsb
pusha
subb
jle
out
mov
xor
push
orl
lahf
icebp
enter
mov
clc
mov
dec
dec
add
lret
jo
dec
add
nop
ret
dec
enter
pop
popf
lds
mov
and
pusha
adc
push
jge
xchg
test
fiadds
insl
aas
nop
dec
hlt
adc
cmp
mov
jne
adc
leave
sub
fldenv
jge
loop
loopne
mov
mov
pop
pop
xchg
inc
jne
cmc
fs
push
inc
outsl
add
int3
mov
insb
fs
iret
iret
lods
divb
pop
add
pushl
sub
push
dec
jns
sub
xlat
leave
andl
in
add
mov
sbb
scas
je
shrl
incl
outsb
cli
ds
mov
and
dec
cmpsl
pusha
dec
fdivp
xlat
into
inc
jge
jmp
push
out
mov
and
sub
push
es
and
fidivrl
sbb
imul
stos
sub
add
mov
mov
stos
in
xchg
ret
lds
cmp
movsb
test
jmp
mov
mov
xor
outsl
aas
dec
cmc
int3
ret
js
call
fmull
xor
add
leave
jge
sahf
sbb
les
jmp
aaa
fldenv
sbb
add
mov
sub
add
jl
fisttpll
mov
sub
add
sbb
mov
ds
out
enter
stos
lret
push
gs
or
cmp
movsb
test
jl
loop
and
cmp
loopne
inc
repnz
or
loop
inc
pop
cmp
setnp
sub
imul
fistps
outsb
aas
aaa
ds
scas
sbb
and
dec
dec
cld
inc
call
jp
adc
jecxz
and
xchg
dec
add
cmc
inc
stos
out
jp
pop
lret
xchg
mull
and
in
imul
cmp
mov
dec
stos
lahf
nop
pop
lret
jno
mov
mov
inc
idivb
js
mov
int
iret
mov
xlat
mov
add
xchg
push
dec
mov
into
sbb
int3
or
xor
fbld
into
cmp
sub
cli
mov
sub
iret
movsl
or
inc
adc
daa
stos
popl
xor
subl
push
mov
ja
jns
inc
or
adc
add
mov
rep
inc
pop
mov
dec
adc
rcr
or
stos
fdivrp
insb
ret
test
sub
mov
inc
scas
cmp
pop
jae
jno
inc
dec
mov
push
das
clc
xor
stc
jns
out
sbb
push
sbb
call
xor
lcall
xor
std
test
popa
xor
or
mov
or
cmp
mov
sub
ror
imul
rolb
gs
sbb
push
push
pop
inc
loop
mov
rolb
mov
push
bound
insl
xchg
outsb
and
inc
inc
enter
rcr
das
ja
sub
rorl
je
pusha
xor
je
cli
sub
and
sub
int
lea
pop
ret
jb
mov
out
jno
adc
out
in
popf
lea
fsubp
cltd
gs
inc
and
dec
mov
mov
or
jg
cwtl
add
and
cmpsb
lret
xlat
push
popf
in
in
in
xchg
cmc
jecxz
cmc
add
popa
divb
pushf
jae
mov
add
jecxz
out
push
shl
jo
mov
dec
add
iret
lock
or
insb
adc
aas
mov
popf
mov
aad
mov
inc
add
inc
pop
cltd
mov
lret
mov
sub
cmp
mov
lea
jmp
cltd
jmp
call
xor
clc
sbb
dec
fiaddl
mov
mov
cltd
jg
ljmp
addps
pop
notl
inc
push
aaa
fdivl
add
popf
sbb
jb
mov
sahf
aam
xchg
bound
lea
loop
sub
or
xor
dec
jno
int
into
add
jbe
and
inc
popa
fadds
adc
into
aam
in
or
xchg
xchg
loop
cmp
int
xor
mov
cmc
sahf
pusha
mov
pop
jecxz
mov
popf
test
or
push
scas
lret
in
mov
lods
adc
add
add
scas
dec
data16
mov
or
mov
out
insl
leave
scas
cmp
xchg
or
lcall
bswap
fimuls
jle
ret
testl
or
dec
sub
inc
cld
out
or
aad
add
movsl
pop
push
mov
pop
jle
xor
xchg
hlt
scas
pop
mov
popf
ffreep
jmp
push
jge
fucomip
inc
sbb
shrl
xchg
and
add
jg
popf
daa
icebp
repz
andb
jo
mov
adc
xor
xchg
lea
rolb
add
mov
and
and
enter
repnz
xchg
add
lods
in
jmp
xor
pop
fistpl
jo
dec
mov
fwait
sti
mov
add
xor
jmp
cmp
xchg
loopne
xchg
push
bound
xchg
fnstsw
jno
into
aam
negb
testl
shlb
mul
clc
push
das
jae
in
pop
mov
cmp
jb
jg
sub
scas
cld
int
lcall
jp
adc
pop
pop
mov
sarl
leave
sub
pop
int3
out
push
js
je
mov
iret
xlat
std
fisubl
data16
inc
push
pop
mov
add
pop
fs
sub
cmp
xor
xchg
xchg
call
add
rol
pop
dec
sbb
sahf
dec
push
sub
pop
xchg
mov
mov
jl
xor
movsb
xchg
inc
mov
bsf
xor
add
fsubs
dec
cmc
repnz
or
scas
fsubp
xchg
mov
ljmp
test
cmp
icebp
jp
xlat
int
xchg
dec
jecxz
add
inc
std
dec
pslld
dec
xor
ficompl
loope
mov
mov
imul
fistl
mov
mov
imul
push
xor
call
cmp
rclb
test
dec
cld
lahf
lret
test
pop
sahf
jb
in
insb
addb
enter
jle
mov
bound
icebp
xchg
popa
cld
cltd
pop
das
out
pop
cli
inc
push
xchg
sbb
adc
push
or
or
push
sbb
das
adc
shrl
push
pusha
cmp
movsl
add
mov
push
decl
adcl
movsl
addb
push
pop
jmp
pushf
cmpsb
nop
and
inc
jl
sub
rorb
mov
stos
rorl
scas
imul
mov
push
jg
sbb
and
cmpl
inc
dec
mov
xchg
sub
sub
stos
inc
add
add
bound
dec
stc
push
jb
mov
inc
imulb
cmpsb
xor
inc
xor
mov
les
push
mov
cwtl
mov
adc
sbb
sub
add
stc
int
lods
xchg
ja
pusha
mov
dec
xor
or
ja
pop
push
ds
jg
mov
lahf
leave
dec
cmpsl
jno
int
xlat
dec
mov
or
jmp
jmp
push
mov
arpl
ss
daa
push
cwtl
adc
xor
sub
loope
cmp
adc
out
aaa
out
loop
add
ret
push
sbb
pop
push
es
pop
pop
loop
cmp
fwait
test
inc
lock
mov
xchg
and
lret
or
orl
das
mov
test
push
imulb
or
aaa
or
and
cmp
jle
sub
add
andl
jg
outsl
cmp
btr
add
and
mov
mov
je
inc
dec
cmp
test
xor
outsl
ret
jo
mov
sti
lcall
fisttps
test
cmc
outsl
sub
dec
lcall
rcll
sub
and
mov
xor
inc
pop
xchg
adc
xchg
mov
adc
cmc
and
dec
sbb
dec
adc
xchg
ljmp
add
and
pop
scas
xchg
lret
movl
sub
cmp
sbb
cs
aaa
test
imul
xchg
push
aaa
or
dec
jl
les
mov
fdivs
xchg
in
sub
lods
cmp
cmp
ret
or
lret
mov
sbb
jmp
sbb
scas
lret
sbb
sub
addr16
or
mov
daa
push
lds
mov
xor
rorl
outsb
addl
imul
fbld
xchg
cmp
xlat
mov
fisttpll
or
jmp
mov
add
xchg
sub
adc
sti
adc
mov
jmp
scas
cmp
mov
push
jno
mov
adc
sbb
enter
xchg
sub
addb
push
add
jno
jge
push
loop
sub
push
mov
sti
out
and
leave
adc
jg
lcall
cmpsl
pop
pop
out
divb
data16
jo
inc
xchg
imul
fisubrs
mov
mov
cmpsl
inc
int3
daa
lcall
jmp
add
mov
rcrb
pop
jns
imul
jb
adc
jne
dec
int
dec
sbb
xor
xor
popa
inc
aas
and
setns
popf
pop
sbb
mov
sbb
lea
sbb
gs
dec
mov
sbb
loopne
mov
insl
sbb
adc
mov
sbb
or
inc
adc
mov
pop
cs
jp
pop
adcb
stos
xchg
and
pop
jle
xchg
pop
inc
lods
aam
loope
loopne
push
add
or
repz
push
movsl
push
lds
sub
push
dec
jle
inc
test
pop
xchg
or
pop
mov
and
cmp
cmpsb
je
jmp
loop
dec
inc
insb
mov
cmpsb
sbb
cmpsb
xchg
ret
sahf
mov
test
loopne
inc
push
xor
push
adc
cmpsb
vmread
xlat
fs
lock
iret
jp
cmp
jb
test
mov
and
aad
hlt
push
mov
pop
in
repz
or
xchg
mov
jno
iret
inc
test
imul
fistl
dec
das
mov
addr16
je
addb
subb
fnstenv
outsb
adc
out
loopne
mov
ds
iret
push
int3
mulb
pop
or
mov
jecxz
sub
push
in
pop
mov
xchg
xor
xchg
adc
sub
loopne
jmp
sbb
xchg
mov
movsl
insb
xlat
cmp
mov
adc
hlt
loop
push
cmc
stos
pop
mov
xchg
pusha
aam
or
mov
clc
or
jg
ret
aaa
cmp
xor
cmp
pop
lock
cmp
hlt
pop
push
fnstcw
popa
fdivrs
xchg
jns
sub
push
push
pop
mov
adc
xchg
xchg
loop
xor
bound
mov
in
sti
loopne
and
stc
out
push
pop
dec
hlt
lds
mov
repz
clc
push
mov
movb
pop
dec
sbb
or
imul
xor
fiadds
mov
ljmp
inc
or
push
into
mov
repz
inc
pop
pop
mov
mov
shl
sub
loop
ljmp
xorb
jp
jne
xor
out
adc
add
aam
or
mov
pop
std
mov
pop
xchg
add
dec
scas
add
mov
lahf
jl
adc
fstps
xor
and
in
mov
push
add
xor
xchg
test
cmpsl
and
shlb
cmp
and
je
xor
mov
pop
mov
xchg
in
or
fnstsw
inc
fdivrs
lahf
imul
push
outsl
shll
mov
aad
call
cmp
xchg
sub
pop
cmpsl
aas
xchg
mov
sbb
and
pop
test
or
cli
sbb
and
mov
cmp
fisttpl
xchg
fbld
mov
into
sbb
inc
int
int3
adc
or
jo
pop
jmp
mov
pop
loope
daa
mov
das
cmp
outsl
mov
fwait
inc
mov
push
push
lret
negb
insl
sbb
popa
sbb
dec
outsb
fcmovu
lret
xor
or
dec
insl
add
ret
stc
fdivrl
fsubrl
hlt
mov
and
fistps
lea
or
or
mov
push
mov
add
lcall
out
or
int
scas
out
sbb
aad
nop
dec
add
sbb
mov
jl
dec
bnd
sbb
insl
adc
cmc
mov
shlb
mov
xchg
test
mov
js
or
lods
aad
es
or
dec
mov
test
xchg
inc
ret
ret
fisubrl
sub
int
or
jnp
jge
push
jp
in
mov
jle
sub
add
mov
adc
repnz
mov
cld
mov
add
lods
arpl
xor
xor
mov
sbb
adc
out
shr
cmpl
std
sub
insb
pop
adc
mov
push
imul
pop
fisttpll
bndldx
push
and
pop
sbb
jno
rcrb
cs
xchg
pop
mov
sub
lea
jnp
in
shll
cmp
cmp
ret
mov
loope
sbb
or
pushf
mov
jb
push
stos
scas
iret
mov
jp
jge
pusha
in
push
mov
loope
push
ss
mov
sbb
insl
jle
jns
cwtl
sbbl
loope
cmpb
cmpsb
cmpsb
sahf
cmc
adc
push
mov
dec
idivb
cmp
and
push
jg
cmp
pop
jbe
adcb
cmc
std
lea
fwait
je
in
neg
out
test
sbb
sbb
inc
pop
pusha
mov
clc
cmp
add
int
add
int
shll
loopne
stc
aas
jnp
les
sub
dec
adc
adcb
fs
jno
fisttpl
sub
inc
ja
or
inc
xor
push
adc
pop
in
cmp
pop
fnstcw
and
sbbb
daa
mov
push
aas
jbe
xchg
outsl
xchg
ljmp
jmp
hlt
div
xchg
test
loopne
popa
push
adc
leave
pop
enter
inc
bound
add
mov
inc
aaa
pushl
xchg
dec
xor
mov
pop
adc
subb
xor
fwait
pop
lret
cmp
mov
loopne
lods
addl
pop
push
jge
cli
mov
dec
loopne
shl
pop
in
data16
pusha
lahf
cmp
mov
loope
push
popf
outsl
pop
fbstp
inc
sbb
nop
popa
sbb
jno
cwtl
cwtl
dec
call
aaa
cs
sarl
popa
test
adc
in
movsl
cmp
xor
sub
mov
dec
mov
jbe
aam
push
outsl
cs
xchg
lods
or
push
lret
jge
aaa
mov
nop
xchg
mov
inc
sub
pushf
and
and
or
dec
fwait
xor
pop
mov
jp
cmp
mov
xchg
lds
int
mov
cmc
mov
and
mov
xor
mov
movsl
movsl
ret
inc
outsb
clc
lcall
dec
push
popf
cmpsl
pop
dec
test
lock
lahf
dec
push
inc
cmp
dec
ret
and
in
cld
adc
mov
pop
ret
xor
roll
jb
adc
xor
mov
scas
jge
fucomp
inc
lods
repnz
mov
sbb
push
sbb
jle
or
insl
int3
pusha
mov
inc
mov
movsl
mov
scas
sbb
fistps
sbb
in
push
fwait
jns
add
sbb
push
jl
fildll
cmp
sub
jnp
push
mov
dec
je
push
sub
das
loop
and
arpl
jne
pop
scas
xchg
inc
dec
xchg
arpl
sub
jae
incb
xor
sti
jno
int3
dec
nop
pop
dec
test
aaa
add
clc
jb
mov
push
aad
xor
mov
mov
das
sub
adc
or
rcll
int3
add
xor
ss
dec
je
mov
push
mov
aas
add
popa
fucom
xor
into
jge
loopne
jnp
test
cld
aam
inc
nop
cs
in
frstor
ret
inc
sub
and
sub
mov
shrl
xlat
xor
mull
outsb
lds
test
divl
xor
loopne
gs
xchg
or
imul
out
jecxz
enter
mov
inc
and
insl
addl
xor
out
addr16
add
push
int3
mov
mov
jecxz
mov
mov
push
lret
stos
movsl
movsb
loop
rorl
add
jae
and
ds
sub
sbb
push
test
cmp
sar
fmull
mov
adc
in
mov
cmp
push
adc
dec
xchg
xchg
cmp
mov
ret
andl
shll
add
aas
jge
js
or
jnp
out
lcall
and
push
inc
push
xchg
or
test
into
xchg
rcll
shlb
add
push
mov
rorl
mov
or
pop
push
jne
push
je
cld
push
mov
ja
sub
imul
scas
add
sub
push
test
mov
push
jno
dec
add
xchg
shll
cmp
out
adc
stos
cwtl
mov
rorl
adc
mov
repnz
lods
shll
push
mov
fwait
cmpsl
gs
pop
push
in
jnp
fstpl
sub
les
mov
nop
ss
sarl
bound
arpl
sarl
insb
decb
out
mov
mov
adc
ds
sbb
test
pop
test
fcmove
jecxz
test
inc
push
pushf
adc
popf
and
inc
out
mov
xchg
adc
pop
ljmp
mov
cmp
out
or
fidivl
imul
add
dec
add
je
and
je
inc
das
mov
and
mov
add
jg
or
ss
sub
sub
and
ja
dec
add
sbb
adc
xor
xor
pusha
test
dec
pop
push
push
in
add
js
imul
add
or
stc
mov
cmp
mul
scas
xor
lret
and
mov
cmpsb
ret
mov
xor
or
iret
cmp
cmp
jne
icebp
aad
mov
mov
pop
lea
scas
mov
mov
nop
repnz
repnz
adc
mov
fwait
pusha
or
xchg
in
loopne
sbb
jmp
inc
inc
mov
loope
jecxz
rcll
add
push
gs
inc
push
pop
add
inc
stos
mov
test
push
fildl
jge
xchg
sahf
mov
mov
out
xchg
cmp
testb
cmp
nop
adc
xor
push
les
ss
jp
cmpsl
das
dec
cwtl
pop
fadds
inc
adcb
leave
lds
and
sbb
inc
and
xor
cmp
rorb
cld
inc
jno
stc
mov
lea
xchg
stos
fucomi
and
fistps
jae
inc
in
mov
push
mov
adc
jge
adc
inc
outsl
repnz
cli
and
cwtl
dec
mov
fsubrl
jns
sbb
xlat
push
mov
in
lahf
sti
fs
sbb
pusha
jne
dec
push
mov
pop
jg
dec
add
test
push
hlt
xchg
lods
sbb
cmp
cmpsb
insl
adc
cmc
stos
push
jge
sti
push
aad
addr16
jo
lret
stos
dec
xchg
lretw
lcall
dec
or
fs
add
cmp
dec
lods
iret
mov
push
jae
jns
adc
and
mov
dec
je
mov
rcll
std
ss
push
jnp
fwait
shr
pop
pop
jg
push
adc
loop
notb
mov
mov
xor
lea
sbb
aaa
jne
out
jg
mov
outsl
cmp
mov
mov
sbb
and
adc
popa
cli
js
repnz
inc
test
enter
mov
fldt
ret
or
arpl
call
imul
and
and
dec
xor
lret
jb
ds
jne
xchg
cltd
subb
pop
lret
mov
jno
popf
add
bound
je
or
push
aad
pop
sbb
or
ja
insl
cld
imul
xor
enter
stc
insb
and
hlt
adc
sub
jle
shlb
inc
xchg
sub
xor
mov
jg
movsb
jns
xchg
cld
leave
lahf
test
push
loop
or
lret
ror
nopl
cmp
adc
in
add
cmpl
ret
sbb
fsubs
xchg
pop
subl
inc
add
adc
push
pop
adc
data16
cmp
cmp
imul
addl
movsb
nop
repz
cltd
test
dec
add
xor
xchg
das
cltd
push
out
insb
xchg
cltd
push
push
mov
aam
daa
inc
outsb
adc
sbb
ljmp
test
adc
cmpsb
mov
xor
cmc
xchg
or
movsl
data16
fldcw
pop
xchg
mov
pop
jle
pop
mov
jp
fistl
mov
sub
jp
adc
inc
pop
xchg
stos
rclb
adc
jae
test
jg
andl
insb
mov
aad
jne
mov
out
push
inc
cli
pop
lods
jb
imul
outsb
fimull
or
call
imul
lahf
add
pusha
ret
or
cmp
das
mov
scas
dec
into
dec
cmp
orb
mov
insl
dec
pop
int3
mov
jecxz
ret
stos
lods
xor
adc
xor
rcll
adc
and
fs
pop
pushf
int3
filds
lret
pop
jg
mov
rcrb
sub
imulb
popf
mov
sub
cmp
mov
test
mov
fwait
push
sub
sub
xchg
out
arpl
xor
pop
cwtl
jns
cmp
faddl
mov
imul
push
pop
inc
jmp
fidivs
adc
shrb
sbb
and
insl
adc
sub
cmp
sbb
mov
sub
jae
mov
mov
loopne
push
jae
insb
add
mov
stc
les
fs
sbb
mov
push
cs
ret
les
ror
pusha
movsb
lret
mov
push
bound
push
lock
fistpll
xor
jmp
jmp
cs
fs
in
ss
test
xor
sti
cmp
iret
sahf
adc
add
lahf
cltd
lods
dec
mov
testb
sub
cmc
jmp
xchg
psrad
push
and
cli
arpl
sti
shl
mov
mov
or
stos
mov
cmp
add
push
call
mov
out
repnz
and
lds
jnp
mov
ljmp
insb
movsl
and
adc
fists
sub
ds
mov
or
outsl
pop
scas
andl
movsl
fs
aaa
rcll
mov
xor
ss
mov
cmp
adc
mov
mov
iret
and
mov
ja
shl
mov
andb
pop
add
aas
jge
rcrb
dec
lods
xor
sbb
pop
inc
in
sbb
or
mov
lds
sub
mov
test
imul
push
dec
imul
push
cmpsl
stos
pop
sub
add
xor
pop
int3
movsb
jle
add
ds
mov
mov
fcompl
xchg
push
adc
pop
sbb
pop
jmp
ss
sbb
inc
nop
out
cltd
sbb
dec
mov
push
jnp
lret
mov
shll
lret
clc
jl
cld
jne
or
out
repz
xor
jns
or
xorl
inc
cwtl
jb
xor
in
cwtl
in
jg
aaa
in
mov
pop
in
push
test
mov
shlb
aad
adc
movsl
push
fbld
dec
loope
mov
mov
or
fbld
bound
ds
aam
call
and
push
cmpsb
jle
movsb
pop
data16
iret
ficomps
loope
mov
add
mov
int3
sbb
or
cltd
bound
xor
movsb
or
sbb
lea
std
mov
call
adc
xchg
lahf
btc
mov
lock
push
inc
pop
inc
lret
fcompl
ja
dec
mov
dec
and
lahf
jecxz
xor
rorb
cmp
cmc
imulb
xchg
and
and
cmpsl
jnp
insb
jl
push
xchg
out
test
sub
out
mov
add
xor
jecxz
cmp
sbb
adc
icebp
add
jecxz
sbb
std
cwtl
jnp
outsb
pop
inc
pshufw
dec
sbb
mov
adc
lock
dec
dec
jmp
add
xlat
aas
mov
cmpsb
test
hlt
mov
ficomps
cmp
sbb
int
and
pop
xchg
dec
not
fxch
push
test
ret
lea
je
adc
loopne
cwtl
out
popa
adc
bound
add
jae
cmp
fs
es
sbb
cmp
scas
pop
dec
mov
push
sbb
sub
jl
in
sub
xchg
loope
xor
xor
fbstp
mov
out
pop
sbb
add
addr16
mov
lds
or
pop
add
jl
call
sbbl
or
mov
xor
aad
jns
pop
bound
jmp
sbb
or
fnstsw
ds
jmp
mov
scas
mov
adc
mov
loop
mov
xlat
lods
jne
fbld
popa
xchg
lret
std
inc
jge
and
jns
aam
in
daa
sar
pop
mov
mov
sub
das
pop
xchg
sbb
arpl
daa
push
pushw
dec
cmp
dec
loope
out
mull
ret
andb
jae
adc
aas
lcall
dec
lds
daa
scas
cmp
cmp
push
arpl
mov
repz
adc
cwtl
add
shr
xchg
bnd
sub
insb
lods
cmp
jns
jle
ficoms
out
adc
dec
xchg
popf
bnd
cmc
icebp
xchg
imul
mov
lds
pop
movsl
clc
jns
out
mov
jb
add
cmpsl
cmc
pop
jecxz
push
xor
bound
int3
xchg
dec
movsl
mov
inc
jae
adc
cmp
mov
out
ljmp
lahf
sbb
dec
dec
jg
xchg
sbb
xor
std
lahf
xor
mov
fcoms
mov
fwait
jp
jge
or
into
dec
add
fs
and
jnp
push
xor
fwait
push
mov
sub
add
negb
cs
pop
jge
dec
js
cmpsb
sbb
je
in
add
int3
mov
mov
cmp
inc
adc
push
adc
sub
xorb
addr16
sbb
jp
lods
cmpsl
loopne
cmp
push
subl
subb
clc
nop
aaa
sub
shrb
push
out
int3
dec
pop
pop
sub
imul
adc
in
in
imul
mov
sub
sti
jno
stos
test
mov
icebp
and
scas
shrb
push
mov
xor
insl
or
cmp
xchg
sub
sub
inc
jp
jno
pusha
mov
ret
dec
rcr
push
jp
rcrl
rclb
leave
mov
jp
push
cwtl
into
xchg
imul
push
sti
iret
fsub
subb
add
aas
test
imul
pop
stos
xor
movsb
les
adc
fidivs
out
adc
mov
mov
fdiv
insl
cld
mov
cmp
pop
xchg
imul
data16
xor
or
mov
sbb
sub
js
enter
mov
and
shl
jge
pop
flds
mov
adc
sbb
es
into
loop
movsl
mov
in
sub
mov
cmp
jae
int
xchg
sub
addr16
adc
repnz
cwtl
xchg
mov
push
xor
adc
and
and
mov
push
dec
pop
add
test
repnz
add
jg
xchg
jmp
jmp
leave
test
sti
cmp
jns
fadds
mov
pop
sub
xlat
mov
leave
mov
in
lret
dec
fs
int
mov
inc
lock
cmp
jmp
pop
cltd
in
jmp
inc
mov
subl
inc
leave
fsubl
sub
mov
pushf
cmp
cmpsl
xchg
lods
lret
movsb
add
test
and
or
push
cmpsl
sub
jge
fsts
push
or
mov
sarb
roll
js
sahf
aas
pop
cmp
cmpsl
pop
mov
jecxz
mov
cmp
jae
pop
pop
aas
or
bound
push
ficoml
sahf
cmp
in
mov
xchg
jp
dec
add
dec
and
and
aas
mov
and
out
cmp
adc
mov
pop
lea
leave
mov
in
loope
push
out
call
jne,pn
ja
das
imul
call
jo
into
pop
jae,pt
push
xchg
jo
push
or
push
inc
xchg
inc
mov
loope
push
orb
cld
shll
dec
push
stos
jno
pop
call
lock
shr
aam
push
pop
jle
add
imul
dec
xor
lods
pop
mov
call
push
sub
adc
xchg
out
and
pop
adc
adcl
xlat
or
outsb
push
add
lods
mov
inc
mov
sahf
or
popf
mov
lods
pushf
decl
frstor
cmp
hlt
and
sarl
xchg
and
or
sahf
push
inc
mov
addr16
mov
sub
mov
addl
lea
hlt
xchg
aad
xchg
outsb
xor
fsubs
ret
and
in
lret
or
sbbl
inc
xchg
lret
rdpmc
pop
in
lret
add
test
rcrl
test
inc
inc
adc
add
push
push
mov
add
xor
add
clc
dec
jno
outsb
leave
or
das
in
sub
mov
es
jne
cmp
sahf
ss
ficoms
jge
jno
and
and
push
outsl
xchg
mov
enter
cmp
leave
lret
loop
mov
lret
in
cltd
ret
and
add
push
jge
es
sbb
notb
add
repz
cli
popf
mov
sub
aas
inc
sub
or
and
push
and
jne
aam
cmp
inc
inc
mov
xor
int
stc
or
mov
es
jle
cld
xchg
xor
arpl
mov
call
imul
dec
les
jecxz
lret
xor
pop
inc
in
mov
shll
bound
dec
pushf
mov
mov
inc
xor
ss
leave
adc
mov
mov
xchg
addb
iret
or
aam
add
jecxz
ljmp
ret
add
fucom
and
data16
stos
sti
adcl
imul
data16
sti
movsb
xchg
dec
sbb
daa
xchg
or
jo
popa
pop
ret
dec
jb
leave
pop
in
test
icebp
movsb
adc
xchg
enter
out
pop
inc
mov
addr16
pusha
cmpsb
cmp
cmp
push
fdiv
fiadds
in
bound
cmp
pushf
push
pusha
mov
xor
cmp
ja
mov
adc
je
packsswb
bound
mov
and
mov
inc
cmp
loop
ffree
pushf
jmp
mov
adc
in
xor
mov
push
push
pop
lcall
in
cltd
jo
xor
jg
enter
insb
add
and
and
xchg
outsl
test
test
pop
repz
sub
call
fists
clc
adc
das
mov
xor
add
jne
adc
movsb
mov
mov
jecxz
adc
xor
decb
mov
mov
outsl
mov
adc
xchg
andl
inc
cmp
adc
pop
xchg
pop
das
jg
lret
xor
push
pusha
lret
sub
add
daa
lcall
cmp
pop
in
jp
xor
outsl
xchg
flds
sarb
sbb
mov
adc
mov
jecxz
dec
mov
cs
into
inc
push
adc
cmpsl
fisubrs
popa
and
movsb
push
fcoms
inc
or
fmuls
ficoms
add
sbb
mov
mov
rcrb
jae
ljmp
loope
push
cmpsb
sbb
push
lods
scas
jo
sahf
inc
clc
mov
jnp
add
push
loope
subl
sub
repnz
pop
add
clc
mov
mov
sub
mov
xchg
aam
nop
pop
test
and
sub
insb
dec
repnz
imul
dec
adc
pop
fs
out
xor
push
fidivrl
in
pop
adc
sub
sbb
je
pop
inc
aad
jg
push
fwait
mov
ja
in
sbb
aad
rcl
dec
je
xor
push
out
pop
ljmp
es
add
add
pop
lret
push
adcl
cmpsb
or
test
adc
fists
push
mov
xor
ret
sbb
pop
sbb
inc
mov
mov
add
test
xchg
xlat
xchg
lods
dec
lods
sub
sbb
xor
incl
aam
mov
jno
arpl
dec
lcall
xchg
add
enter
jne
push
negb
shlb
imul
inc
dec
and
mov
lods
push
inc
or
pop
loopne
xor
or
xchg
cmpsl
lods
dec
mov
icebp
mov
pop
movsb
daa
jno
and
add
pop
dec
xor
loopne,pt
xor
jb
outsb
sub
dec
mov
push
mov
lret
sbb
rolb
xlat
or
lret
adc
movaps
xor
xor
cmpsb
and
xor
pusha
jnp
inc
and
dec
mov
jge
or
popf
add
mov
mov
mov
aas
inc
dec
int3
dec
pop
lahf
ss
add
loopne
xor
jmp
xchg
jo
aaa
mov
fbstp
pop
test
dec
out
int3
mov
pushf
fists
mov
enter
xor
mov
daa
pop
out
pop
inc
ds
dec
dec
jns
cmp
in
pop
cmp
mov
xchg
xor
cmp
imull
sub
mov
pushf
int
cs
inc
sbbl
pop
or
fwait
dec
imul
scas
push
xor
pop
sahf
aaa
jp
lcall
in
jbe
pop
fiadds
sub
test
scas
push
pop
lods
into
mov
popa
divb
push
or
test
in
add
movsl
xor
daa
imul
outsb
sbb
dec
jnp
lock
repz
loop
and
lock
jp,pn
push
rcrl
mov
cmp
fcmovb
jg
sub
fs
push
leave
sub
jo
dec
xchg
aam
inc
ljmp
add
dec
xchg
jns
enter
mov
les
testb
sahf
ss
push
mov
ret
movsb
push
ja
scas
cld
mov
pop
fldcw
lret
scas
inc
jp
es
dec
jne
cmp
pop
bound
dec
jb
mov
ja
cmp
xchg
xchg
inc
mov
dec
addr16
sub
sub
xor
scas
call
shlb
dec
iret
add
add
or
lahf
scas
sbb
push
int3
or
push
inc
mov
pop
push
adc
sbb
enter
add
repnz
lea
int
int
or
out
sbb
xchg
ret
xlat
pop
xchg
in
out
and
cs
adc
push
cmc
add
jnp
call
mov
insl
imul
mov
iret
and
lods
add
mov
push
jns
push
fwait
mov
jno
stc
repnz
aas
pushf
xlat
imull
orb
vmovaps
mov
mov
lods
pop
push
inc
or
fistpl
xlat
inc
inc
mov
sbb
out
incb
in
in
stos
adc
lahf
jmp
xchg
mov
sbb
inc
inc
mov
xchg
test
and
push
bound
int
ret
jno
jbe
fildll
dec
rclb
xchg
push
inc
mov
xor
mov
sub
stos
push
jns
ret
loopne
inc
cmpl
push
ds
jmp
sahf
psubusw
xor
int
pop
cmp
out
add
mov
cmc
leave
je
out
aad
xlat
loopne
dec
out
fbld
mov
sbb
push
cmp
xor
xor
movsl
inc
pop
cmp
xlat
dec
inc
cmpsl
adc
loop
aam
pop
mov
adc
mov
dec
lret
mov
dec
push
into
push
or
ret
leave
xor
jno
test
mov
inc
loope
mov
jnp
fisubs
sbb
mov
push
cmp
adc
insb
jge
and
mov
inc
test
jg
aaa
pop
bound
scas
stos
leave
lea
push
stos
test
scas
in
dec
xorb
out
lea
cmovns
push
inc
lret
mov
lcall
movsb
test
jmp
xchg
cmp
imul
repz
je
out
shll
push
stos
inc
mov
and
orl
cmp
mov
jo
out
ja
jle
outsb
test
add
stos
mov
xchg
mov
push
fldcw
into
add
push
jae
jo
loop
into
imul
shlb
xchg
das
decb
push
mov
mov
int
aam
ja
popa
sub
jno
mov
jl
test
and
lret
mov
repz
push
imul
in
mov
jno
in
inc
lahf
cmc
ss
mull
ljmp
xlat
int3
rolb
push
lods
sub
mov
mov
int
xor
lret
cmp
test
mov
cs
jmp
and
mov
mov
popa
jnp
jmp
inc
shll
mov
add
xchg
dec
fmuls
pop
sahf
mov
insb
mov
in
cmc
mov
dec
icebp
fistpl
mov
mov
dec
or
xor
push
icebp
in
popa
push
jae
xor
aaa
push
es
xchg
push
in
call
fwait
sub
lds
int
std
in
mov
adc
mov
fidivrl
or
movsb
ret
fmul
dec
insl
arpl
lea
popf
pop
lahf
js
sbb
lea
int3
push
jl
nop
or
ljmp
movsl
jne
pop
and
jl
push
int3
ret
jp
push
test
mul
fistps
xor
jmp
pop
xor
mov
push
dec
mov
and
sub
or
jae
cld
mov
lods
lret
adc
hlt
out
adc
xor
mov
and
and
jbe
std
shl
or
sbb
and
adc
popf
xlat
mov
out
roll
rcrb
shlb
sub
sub
fwait
hlt
adc
lcall
or
cs
iret
in
fbstp
mov
pop
cs
repnz
cmpsl
icebp
push
je
pop
push
mov
mov
xchg
jmp
out
cs
frstor
add
enter
jp
mov
and
fcmovnb
jl
iret
mov
test
rcrb
pop
jnp
inc
es
mov
insl
popa
mov
cmp
aad
mov
pop
jecxz
add
lcall
pusha
sbb
popl
fistpll
test
lahf
jl
push
mov
cmp
int
cltd
or
xor
imul
cld
mov
data16
ja
pop
xor
ror
mov
jg
cltd
jp
fsts
xor
push
ror
jo
jmp
cld
gs
out
out
fiaddl
inc
mulb
jno
jl
sbbb
cld
aad
je,pn
cmp
push
jg
jp
xchg
jnp
mov
out
mov
clc
pop
je
jb
pop
cmp
scas
int
mov
jnp
push
hlt
mov
pop
inc
enter
in
sbb
cmpsl
dec
das
in
out
mov
cwtl
jle
daa
call
adc
inc
call
pusha
inc
out
mull
in
mov
mov
jp
mov
adc
xor
int
xchg
lods
mov
fmul
mov
inc
jns
mov
icebp
cmp
sub
mov
xchg
iret
arpl
insb
jnp
xchg
inc
addb
sub
push
jnp
scas
testl
shrb
shl
into
xor
repnz
and
jno
lds
aaa
mov
add
push
dec
mov
cltd
mov
push
ljmp
fwait
sbbb
aaa
add
mov
pushf
inc
push
fdivrs
sbb
xor
mov
pop
arpl
imul
adcl
cld
aaa
pop
push
fmul
dec
daa
or
mov
mov
neg
js
inc
cmpsl
in
std
test
jbe
jo
dec
push
mov
sti
adc
pop
mov
bound
inc
enter
mov
pop
mov
xchg
sbb
cmp
cli
es
xor
bound
out
inc
mov
fbld
daa
mov
inc
jae
jmp
das
mov
cmp
xchg
jns
fs
fisubrl
jecxz
das
out
mov
ja
or
cs
sbb
xchg
sub
stc
push
dec
ret
clc
into
stos
jno
pop
xlat
xor
mov
push
mov
jbe
inc
rorl
cli
push
dec
aam
push
pop
fidivl
test
or
jb
adc
data16
nop
sbb
imul
stos
pop
pop
gs
int
js
mov
xor
push
out
ljmp
stos
imul
ret
int
loopne
mov
add
inc
call
rolb
mov
inc
loopne
xor
std
or
inc
push
cmp
xor
aam
movl
jb
jbe
adc
push
jnp
adc
les
mov
pop
xchg
pop
pop
jl
sub
pop
sub
lods
sbbl
and
mov
mov
add
mulb
stos
push
insl
dec
push
xchg
imul
mov
insl
mov
pop
adcl
stc
pop
cmpsb
or
sbb
fwait
xchg
push
sbb
sub
pusha
pop
mov
adc
fs
data16
push
ret
xor
push
dec
pop
in
fldcw
pop
outsb
test
popf
xchg
jne
pusha
xlat
cs
sub
jecxz
sub
cmpsb
jo
adc
dec
dec
out
data16
lods
lods
jmp
lahf
push
std
sbb
int3
push
leave
popa
mov
std
lods
rcl
mov
xlat
mov
pop
xchg
fwait
icebp
lahf
fidivrl
in
pop
cmc
jae
add
std
loopne,pt
adc
arpl
scas
sbbb
lea
stos
aad
cmc
ret
pushf
rorb
xchg
mov
mov
inc
mov
push
outsb
xchg
addr16
mov
add
add
jb
xor
rolb
sbb
inc
stos
sub
mov
dec
mov
sub
mov
pop
xlat
loope
push
xchg
je
add
cmpsl
arpl
std
xlat
xorb
xor
cmp
fidivrs
lods
jbe
sbb
shlb
iret
adc
div
mov
sub
test
adc
sbb
sti
dec
push
cmp
fsubl
or
or
sbb
popa
push
jl
cltd
xor
enter
mov
movsl
rcrl
ret
jge
int
push
loopne
mov
or
rorb
sarb
inc
sbb
leave
or
gs
jo
adc
shlb
mov
cmp
mov
aaa
cli
dec
ljmp
mov
rorl
pop
and
orl
pop
jnp
insb
mov
outsl
mov
in
and
mov
dec
std
int3
imul
movsb
mov
mov
mov
clc
fwait
xchg
jae
addr16
sub
jmp
scas
cli
push
add
or
adc
push
hlt
jmp
scas
lcall
test
inc
mov
mov
inc
sti
fldt
shlb
sbb
push
mov
push
xchg
pop
lock
insl
fists
xor
jecxz
pop
scas
cmc
dec
loopne
jle
les
sub
int3
gs
cmpsl
inc
mov
out
or
cld
je
mov
jnp
sub
hlt
rolb
int3
push
sarb
pop
cmc
leave
mov
in
dec
add
or
es
sbb
jmp
xchg
enter
paddd
mov
xchg
xchg
adc
or
shrl
icebp
push
pop
ret
imul
mov
fisttpl
mov
jno
push
aad
int
stos
mov
leave
add
add
sub
mov
sub
add
and
pop
mov
add
mov
fwait
adc
jb
xchg
and
lahf
ss
sub
add
out
jno
jae
jecxz
js
jo
aam
jb
loop
rorb
adc
nop
sbb
lahf
incl
pushf
mov
mov
inc
cmp
popf
and
mov
inc
or
pop
pop
movsl
fs
movsl
aad
in
fwait
mov
mov
mov
cmp
fstpt
adc
jne
mov
dec
add
out
std
clc
mov
pop
cld
mov
mov
in
clc
mov
jne
mov
pop
sub
data16
imul
fwait
inc
les
cld
lea
sub
sub
add
pop
and
lock
xchg
es
lds
imulb
mov
scas
fadds
mov
test
in
test
popa
or
out
pushf
mov
fildll
inc
dec
out
pop
in
pop
cmp
or
sbb
shll
add
mov
sarb
dec
or
mov
push
pop
adc
inc
dec
sti
fcompl
iret
adc
mov
jmp
dec
repz
add
pop
es
into
sbb
daa
xchg
movsb
sub
mov
adc
mov
jns
add
jg
or
add
ljmp
inc
mov
es
fistpl
sbb
lods
push
adc
mov
sub
cmp
sahf
arpl
sub
or
pop
mov
mov
cmp
add
es
lret
fsubrl
push
sbb
xlat
arpl
push
cmp
sub
jae
adc
lods
push
mov
sub
mov
xor
js
fcomi
lods
cmp
mov
xor
pop
int
test
insb
lds
sahf
aad
add
mov
cli
nop
out
pop
movb
roll
ret
xor
outsb
xlat
out
and
add
or
daa
mov
xchg
jmp
xchg
mov
sbb
js
pop
pop
les
int3
stos
or
mov
mov
das
sbb
movsb
xchg
lods
or
in
subb
pop
dec
xchg
push
mov
xchg
repnz
and
jno
pop
xchg
cli
lock
leave
jg
push
cmpsl
cs
call
adc
lods
push
xlat
push
jnp
xor
fldl
mov
jne
adc
mov
imul
inc
mov
xlat
mov
es
jbe
inc
lahf
dec
dec
sub
int
xchg
add
jecxz
dec
xchg
aam
jmp
lock
inc
sbb
sub
in
mov
stos
mov
sbb
and
mov
sbb
inc
adcb
add
add
pop
gs
mov
mov
inc
shlb
add
mov
rcr
push
or
mov
lea
xchg
xor
inc
lret
mov
idivb
or
imul
jno
cltd
lea
adc
cmpsl
sub
mov
add
int3
mov
cwtl
lods
cmp
push
jns
pop
iret
jp
loope
stos
jo
and
test
cmp
jl
xchg
cmc
test
mov
scas
or
cmpsl
hlt
aas
and
dec
repnz
cmp
mov
dec
aad
lret
call
lods
pop
dec
pop
xchg
pushf
es
push
xor
sahf
add
mov
scas
pop
adc
pop
mov
or
sbb
push
add
cmpsb
js
mov
hlt
repz
rcll
push
divb
xorl
or
push
pushf
and
lret
mov
add
mov
adc
and
ret
in
xchg
xchg
cmp
icebp
fisubrs
pop
mov
sbb
and
leave
and
adc
dec
cli
sub
and
out
push
pop
push
sbb
or
test
jae
imul
ljmp
xchg
jne
loopne
sbb
sti
ret
insl
push
jmp
popl
cmpb
popa
xor
int
fwait
xor
fsubs
pop
pop
adc
jl
jb
pushf
dec
data16
mov
ss
jb
shl
das
sbb
movsb
mov
pop
stc
stc
clc
cmp
xchg
add
out
mov
sbb
xchg
fisubrl
in
lea
xchg
and
imul
outsl
push
test
jmp
repz
movsb
fdivrl
subb
jmp
scas
aam
jne
imul
xor
jp
lret
cld
lods
xchg
and
imul
ret
inc
pop
andb
lea
lret
into
jnp
dec
and
dec
jne
rcll
mov
hlt
inc
adc
push
jle
inc
repz
and
data16
xor
pop
ret
ret
hlt
lahf
jae
pop
cld
add
sbb
ret
xchg
mov
dec
inc
negb
ret
sub
dec
out
adc
enterw
test
inc
pushf
sub
out
aad
sbb
mov
jne
adc
lahf
and
dec
pop
mov
sub
test
out
adc
push
call
in
xorb
shl
lods
inc
xchg
into
test
adc
out
xchg
ret
xchg
add
mov
xchg
fucomi
pop
lret
iret
lahf
sub
je
iret
loope
fsubrl
pop
dec
enter
cld
mov
pop
aas
jo
jmp
jo
pushfw
cltd
jno
push
cmpsl
outsl
sbb
int
movsl
out
outsb
or
mov
jp
test
jbe
iret
push
outsl
hlt
pop
ret
push
mov
inc
add
cs
fcomps
inc
mov
xchg
aas
jl
jbe
pusha
pusha
shrl
dec
outsl
cs
sbb
mov
out
jp
shll
inc
inc
and
insl
push
shl
xor
ret
mov
in
xchg
or
negl
xchg
push
outsb
pop
mov
xor
add
pop
mov
mov
add
add
in
xchg
movsb
xchg
insb
cmpl
sub
cltd
inc
das
and
addl
aas
push
inc
das
in
int
lds
mov
mov
mov
hlt
pop
mov
lret
pop
cmpsl
sbb
and
xchg
dec
xor
mov
out
fwait
sarl
insl
cmc
lods
fwait
dec
leave
push
mov
cwtl
xor
push
mov
xlat
xor
cwtl
xchg
mov
mov
fs
jg
repnz
subb
xchg
mov
jb
xchg
enter
pop
dec
int3
ret
pop
inc
jecxz
fstp
pop
or
mov
test
pop
lcall
subb
cmp
sbb
scas
push
push
sbb
sbbb
out
inc
in
sub
mov
sbb
scas
sub
cli
jecxz
xchg
stc
xchg
pop
inc
xor
cmp
mov
movsl
mov
testl
rcl
pop
dec
jbe
gs
in
jbe
jle
mov
pop
inc
jns
fldcw
sbb
cmp
out
loopne
ljmp
xchg
or
lock
lea
rol
addr16
outsb
add
dec
lret
mov
pop
pushf
pop
xchg
dec
insb
sbb
jbe
xor
movsb
nop
pushf
lock
les
push
das
or
jl
imul
mov
lahf
mov
scas
jae
insb
sahf
cltd
test
repnz
inc
fisttpl
imul
sbb
xchg
or
adcb
add
out
or
call
es
and
xchg
enter
xor
jo
rcrb
inc
imul
xchg
or
nop
cmp
rcrb
jp
push
in
fldl
xchg
lcall
in
sbb
push
mov
dec
daa
mov
inc
fists
inc
pop
inc
sub
mov
ret
and
or
sbb
jg
mov
scas
rcll
jnp
sbb
mov
fcmovnu
iret
pop
and
lods
inc
adc
rcl
push
sbb
jle
outsb
dec
push
inc
aam
xchg
inc
pop
cld
sbb
or
lret
in
xlat
inc
lret
jo
jl,pn
pop
and
repnz
aad
pop
mov
shll
mov
call
popa
stos
lret
inc
nopl
shld
dec
or
dec
sahf
or
lcall
cmp
sbb
popl
in
xor
sbb
ds
adc
adc
mov
push
cmp
insl
clc
or
aas
and
jnp
push
orl
out
mov
cmc
pop
iret
mov
adc
fxch
lret
mov
lahf
fimull
xor
add
mov
add
push
mov
hlt
aas
repz
fnstenv
sub
iret
adc
mov
hlt
test
je
jge
fiadds
repz
adc
cmp
mov
jb
scas
cmp
jne
rcr
test
jle
and
scas
imul
push
xor
jle
mov
push
dec
sub
adc
scas
test
ret
push
mov
sub
adc
sub
cmpsb
jl
xor
sub
out
sub
mov
push
dec
adc
jnp
jo
dec
popa
idiv
sbb
sub
sbb
pop
pushf
in
cmpsl
mov
dec
dec
test
cmp
xor
insl
add
lods
xor
mov
mov
aam
mov
dec
test
dec
push
mov
popl
test
jno
mov
cld
arpl
xor
dec
ja
out
pop
push
rcrb
daa
aam
sbb
fsubp
jo
push
iret
add
cmp
adc
jg
jo
mov
jp
adc
shll
adc
sub
leave
das
fs
and
adc
cld
movsb
aad
std
popa
or
insb
imul
mov
mov
adc
inc
out
jbe
test
lret
pop
loop
out
aad
xor
sbb
inc
mov
push
pop
fnstcw
clc
push
fsub
inc
mov
adc
and
rorb
rcrl
imul
pop
jnp
sbb
repz
pop
push
mov
leave
push
fdivl
jle
mov
mov
sbb
push
stos
sub
icebp
test
pusha
jmp
sbb
adc
mov
out
lock
adc
in
xlat
andb
ficoms
rorb
cmpsb
test
push
enter
or
sbb
push
add
dec
pop
mov
push
sahf
mov
sub
add
icebp
sub
testb
repnz
out
adc
ror
mov
movl
stc
mov
ss
int3
shlb
pushf
sbb
mov
lret
sub
mov
and
scas
pop
mov
dec
loop
iret
xchg
fwait
out
in
in
xchg
int
mov
xchg
ss
lahf
add
cmp
jno
rcrl
rcr
iret
dec
loopne
repnz
fcomi
pop
or
mov
gs
mov
sub
cld
xchg
push
in
outsl
stc
and
sub
jbe
xor
jnp
loop
je
jge
outsl
popf
cmpsb
adc
scas
adc
sub
mov
mov
inc
out
add
mov
jg
int3
inc
into
data16
xchg
push
sahf
fcomps
call
jno
push
dec
and
call
arpl
daa
xlat
push
aad
mov
cli
cmpsl
icebp
jge
mov
pop
mov
pop
push
xchg
call
jge
dec
inc
add
jge
loop
icebp
add
mov
outsb
cltd
es
cli
add
loopne
enter
bound
adc
pusha
mov
scas
sti
push
cmp
jg
outsb
jmp
punpckhwd
mov
shrl
pop
negb
cmp
fsubs
stos
xlat
mov
sub
sub
cld
or
into
dec
add
dec
mov
fstpl
xchg
adc
icebp
mov
jns
jnp
xor
jo
xchg
call
fmuls
sbb
jbe
inc
outsb
pop
pop
shlb
and
push
rorl
add
jnp
xchg
aaa
mov
pop
movsl
and
stos
rorl
add
xchg
mov
cmp
adc
cld
dec
stc
xor
sbb
rorl
shl
mov
addb
mov
in
shl
ljmp
xor
mov
stos
faddl
aad
inc
mov
fisubl
cmpsb
mov
pop
jbe
inc
int
pop
ljmp
add
inc
scas
fucomip
nop
gs
xchg
inc
pop
cmp
xor
cmp
xchg
cwtl
push
imul
mov
dec
jne
jbe
sub
cmp
test
mov
insb
jg
xor
aam
test
pop
in
movsb
adc
dec
leave
int3
mov
out
add
cmp
xchg
mov
loope
arpl
pop
incl
imul
ss
icebp
fldl
cmp
nop
inc
loope
mov
pop
flds
inc
fdivp
mov
enter
dec
vcomiss
loop
clc
mov
cmpsl
stc
stos
rcrb
in
pop
nop
ljmp
push
data16
gs
jp
inc
fstpt
aas
js
loope
cwtl
jbe
sub
push
std
dec
daa
call
jge
cwtl
lahf
inc
testb
xchg
inc
push
adc
stos
cmp
in
cmp
jecxz
sub
mov
push
sbb
dec
xor
cmp
cmp
mov
mov
int
jno
bound
and
pop
je
mov
setg
hlt
lds
in
loop
fimull
fisubrs
je
jp
hlt
hlt
cmc
xlat
fwait
jg
mov
inc
jp
cmp
scas
pop
adc
std
aad
ret
cltd
xchg
pop
dec
push
inc
sbb
push
aad
mov
mov
cmp
sbb
frstor
jl
sub
mov
pop
shrl
int3
inc
fdivl
xchg
jp
mov
dec
shlb
xor
or
mov
sbb
stc
neg
jno
dec
pop
or
or
mov
jbe
mov
and
idivl
jb
mov
sarl
jb
rorl
in
or
ss
cmp
js
cltd
outsb
into
out
push
cld
sub
lret
jne
sbb
aad
mov
andb
repz
dec
loop
loopne
mov
inc
jo
mov
or
xchg
es
mov
or
pop
insb
inc
in
jecxz
loope
pusha
xchg
mov
or
cmpsb
shrl
mov
repz
aad
jnp
cltd
loopne
jge
out
jge
add
into
xor
pop
xchg
fdivl
into
cli
pop
leave
dec
in
sbb
cmp
jp
add
or
sbb
jmp
dec
out
imul
shrl
push
cmp
insl
mov
call
fucomp
sub
out
int
cli
fcoml
jecxz
mov
outsl
jmp
addr16
test
jbe
and
mov
pop
cmc
mov
fcomp
out
jae
mov
jae
pop
and
jmp
ds
lret
xchg
cmp
daa
inc
in
int3
cmc
loope
dec
rcrl
jl
outsb
inc
jg
mov
xor
scas
pushl
cmp
add
pop
insb
add
nop
pop
xchg
sbb
push
add
test
shll
jbe
add
and
push
mov
jle
push
pop
fucom
cmp
cld
xchg
rolb
pop
stc
in
aad
icebp
fbstp
cmp
push
push
mov
mov
and
cmp
imul
mov
leave
or
das
notl
cs
sti
inc
addl
ret
adc
push
sub
pop
stos
add
pop
push
mov
sub
lret
orl
add
xchg
xchg
cmpsl
orl
or
push
xor
shrl
cltd
xchg
adc
out
scas
and
and
or
jp
jbe
or
xchg
leave
frstor
xchg
mov
fnstsw
lds
push
jl
dec
pop
push
orl
lahf
into
add
nop
dec
divl
xchg
aas
jno
out
fnstsw
sub
setnp
daa
stos
mov
int
push
aaa
or
sub
mov
inc
mov
pop
lret
jo
outsb
fidivrl
pop
jnp
test
jecxz
and
xchg
xor
add
sub
xor
rcrl
lcall
mov
or
test
mov
jnp
dec
mov
mov
mov
mov
icebp
loop
test
lahf
mov
dec
sub
scas
add
out
xlat
xchg
in
stos
add
fnstenv
or
fbstp
cld
scas
mov
fs
lret
fs
imul
xchg
mov
call
imul
call
pusha
je
xor
mov
or
sbb
shrl
in
enter
cmc
sub
mov
lret
cmc
in
mov
rorb
ja
lock
xchg
inc
or
xor
out
ficomps
hlt
mov
fisubs
xlat
cmpsl
jg
jne
add
loopne
call
imul
xchg
push
ror
mov
fstps
xor
inc
inc
xorb
paddsw
push
stc
mov
sub
add
adc
clc
or
in
out
sub
push
jnp
cmp
adc
mov
ja
push
push
jg
hlt
and
lret
cmp
sub
sbb
inc
call
jecxz
sub
outsb
push
xchg
xlat
pop
into
ret
cli
ret
fiaddl
sbb
nop
dec
lcall
xchg
andl
xchg
aad
inc
xor
andl
inc
fisubrl
mov
popa
mov
cmp
je
add
in
or
outsb
jl
pushf
jno
subl
jg
mov
sbb
dec
mov
repz
out
lods
mov
lret
adc
adc
adcb
cmp
shufps
jmp
jp
mov
stc
daa
pop
icebp
ficoml
packuswb
ds
push
fsubl
out
mov
in
iret
or
test
aad
sarl
add
lcall
cmp
jbe
xor
mov
arpl
sbb
std
adc
add
rolb
shl
addb
hlt
test
scas
pop
rolb
sbb
ja
mov
popa
lock
push
test
aad
xor
push
adc
addr16
mov
in
jmp
mov
lret
cs
mov
dec
cmp
cmpsb
push
add
pop
jne
xlat
push
jge
mov
outsl
or
mov
movsb
insb
cmp
and
rclb
hlt
adc
std
and
in
push
sub
pushf
in
pop
inc
sbb
sbb
iret
cwtl
or
jb
mov
popa
ja
jno
scas
cmpsb
ret
mov
repz
aad
std
mov
pusha
add
cmp
xor
jno
test
fdivrl
pop
vpandn
and
mov
sub
in
out
xlat
sbb
add
popf
in
ret
xor
inc
cld
xchg
into
cmp
xor
in
je
lock
push
sub
xor
or
xchg
lods
ljmp
arpl
insb
mov
aam
popa
or
pop
adcl
lcall
cmp
pop
clc
lock
cld
int3
ret
dec
xchg
xor
leave
adc
aas
xor
repz
sbbb
lea
movsl
pop
jl
test
jnp
mov
mov
pop
adc
mov
cmp
out
mov
nop
aad
icebp
dec
idivl
fiadds
mov
loope
mov
pop
inc
pop
stos
mov
push
jecxz
loope
and
shll
adc
cmp
cltd
pop
aaa
sbb
shll
jle
mov
pushf
bound
data16
test
dec
insb
stos
and
imul
xchg
mov
push
sbb
jmp
cltd
dec
cmovbe
mov
enter
jnp
dec
popl
add
fwait
push
ss
xchg
push
aam
lret
call
adc
stc
xchg
mov
sbb
or
cmc
pop
addb
mov
sbb
jmp
dec
fnsave
ja
orl
movsl
stos
push
out
or
mov
repnz
mov
mov
rcrl
scas
nop
fadd
mov
lods
adc
outsb
ror
xchg
xchg
add
and
hlt
mov
xchg
negb
mov
and
pop
fcmove
jg
imull
in
repz
mov
push
and
cmp
cmp
rorl
mov
js
dec
gs
xchg
les
aam
in
pop
scas
pop
fs
lret
rcrb
push
fisttpll
mov
pop
aam
bnd
mov
cmp
lcall
mov
adc
dec
in
mov
xchg
pop
outsl
push
popa
ret
stos
cmpb
nop
out
es
rcr
jp
shr
jl
and
push
sbb
or
and
adc
cltd
cmc
es
or
std
jbe
pop
sub
or
dec
test
repnz
mov
jmp
xchg
and
ljmp
mov
mov
rcll
scas
sub
addr16
daa
xor
adc
inc
in
sub
jbe
xchg
bound
adc
sbb
mov
mov
icebp
enter
lods
lcall
mov
and
pop
mov
data16
movl
push
fs
cmp
jno
jnp
repz
sbb
clc
adc
xor
divb
clc
in
loope
lret
dec
mov
outsl
icebp
add
movsl
mov
les
cmp
cld
cmc
call
gs
push
mov
fsubl
icebp
fstpt
test
ror
daa
jmp
cwtl
movsl
test
jecxz
xchg
lods
shlb
adc
pusha
adc
pop
pop
mov
xchg
mov
inc
push
add
subl
pop
lret
in
in
push
add
repz
enter
push
lds
pop
arpl
ljmp
movsl
fwait
lret
dec
mov
and
push
push
adc
xchg
push
js
lret
shrl
outsl
mov
cwtl
into
addr16
push
shlb
test
sti
ret
inc
mov
lahf
popf
dec
add
pop
sub
or
xchg
repz
iret
adc
xchg
in
dec
push
xor
push
add
sbb
and
pop
mov
insb
jg
in
popf
or
pop
jge
adc
mov
push
scas
jo
push
stos
aad
fmulp
inc
addr16
popf
sub
sub
out
pop
pop
and
and
push
cmp
mov
fnstcw
jl
mov
fisttpll
mov
pop
pop
or
stos
sbb
in
dec
lret
dec
inc
cmp
pusha
outsb
jmp
in
ljmp
sbb
std
jmp
and
push
fcmovb
push
push
test
int
cmp
sbb
pusha
loopne
rorb
xchg
add
dec
ret
add
mov
xchg
xchg
and
sbb
mov
jg
lcall
mov
pop
ja
js
je
push
sbb
int3
sbb
mov
jp
stc
insl
adc
dec
jge
aam
and
lock
and
std
movsl
in
or
addb
mov
sub
inc
cmp
out
nop
int
push
mov
or
leave
pushf
pop
out
nop
test
jnp
orl
out
lret
into
cmp
and
in
push
stos
push
fisubl
mov
mov
pop
shrb
push
sahf
sbb
mov
int3
or
sahf
scas
or
daa
jl
ja
outsl
call
sbb
test
inc
add
lahf
jo
rcrl
js
pop
sub
push
loopne
lahf
adc
lods
fcomi
imull
add
push
and
or
out
jbe
in
iret
adc
sbb
movb
xor
test
jle
jno
mov
movsb
lods
fbstp
cmp
xchg
test
gs
in
mov
mov
out
adc
jg
nop
adc
movsb
lret
out
out
xchg
mov
cmp
push
and
pop
inc
and
bound
dec
mov
jbe
imul
inc
or
int3
inc
int
popa
jmp
imul
mov
cmp
push
inc
imul
and
repnz
cld
int3
ss
pop
pop
repz
shl
lcall
sti
jg
adc
icebp
adc
out
in
pop
inc
outsl
fidivrl
push
rcl
or
test
push
insb
pop
inc
jge
std
inc
das
sub
testb
bound
push
xchg
cli
shl
push
pusha
and
xlat
fs
and
lea
push
xchg
mov
add
fdivr
pop
popf
pop
push
dec
jecxz
ss
fisubs
mov
mov
and
imul
xchg
jmp
jcxz
cmp
rorl
mull
mov
dec
push
cltd
repnz
adc
inc
je
lods
mov
mov
mov
pop
popf
fdivrl
rol
jb
daa
lret
pop
mov
mov
pop
scas
mov
adc
cmp
add
daa
lahf
dec
les
in
xor
aad
push
in
lea
int3
jb
test
push
inc
sbb
sub
imull
xchg
notb
shrl
jb
insb
dec
mov
jg
dec
aad
inc
dec
xchg
loopne
clc
inc
repz
cmc
inc
mov
push
sbb
test
outsl
add
cmp
rorl
jle
push
pop
fistps
and
jo
xor
popa
push
out
add
icebp
push
add
pop
js
dec
insl
mov
mov
mov
popa
adc
xchg
pop
ja
lahf
es
pop
ja
pop
mov
cmp
aas
sbb
aas
insl
xchg
push
and
ficoml
arpl
mov
mov
sub
add
push
jae
flds
sbb
out
mulb
or
jns
xchg
or
dec
cmpsl
test
aas
cli
mov
mov
mov
cmc
push
aas
gs
pop
fstps
jle
lock
mov
cld
inc
fistl
or
in
push
xor
icebp
aas
mov
sbb
dec
pop
jb
sarl
cmc
and
xchg
sbb
jp
add
lock
xorl
sbb
dec
jbe
lods
dec
add
push
mov
dec
sbb
push
mov
lds
je
daa
fdivl
or
jb
stos
in
and
and
pop
inc
fnstsw
aam
xor
mov
std
xor
ss
mov
ret
sub
sub
xchg
push
dec
aas
dec
negb
and
mov
cs
es
fwait
inc
push
push
add
push
cli
cmp
sbb
adc
jae
stc
add
dec
sub
inc
data16
movsl
pop
pop
in
jge
adc
popf
pop
loop
out
pop
int
popf
xor
hlt
test
pushf
js
shlb
test
or
push
jb
in
out
aad
mov
xchg
fldenv
test
repz
outsl
mov
xor
sbb
lahf
sub
xor
add
gs
outsb
in
lret
pmullw
in
and
xor
mov
sub
movsl
in
inc
mov
jge
push
sub
ror
movsb
and
and
push
or
fadds
adc
jno
repz
scas
or
cmp
or
cmp
iret
sub
jmp
cmpsl
adc
pop
xchg
shrb
rorl
rcll
jmp
ficoml
jo
fcmovne
aas
in
daa
fs
inc
push
add
push
sub
cmp
les
mov
lahf
dec
ljmp
xchg
sbb
or
sbb
xor
add
lret
and
in
lcall
cmp
sub
xchg
mov
mov
mov
and
lods
jmp
int3
imul
add
icebp
hlt
xchg
mov
out
sbb
js
popf
jae
scas
jnp
and
outsb
addr16
cmp
fsubr
rcrb
push
xlat
and
cltd
jo
mulb
cli
call
push
lds
in
mov
cmpsb
lock
pop
mov
rclb
and
lahf
push
int
mov
mov
adc
sti
cwtl
and
fsubrs
push
hlt
out
mov
vsubss
ss
mov
int
inc
xchg
inc
and
clc
jmp
xlat
dec
inc
les
jne
int
stos
mov
sahf
adc
test
das
ljmp
repz
dec
popf
pop
ds
stos
mull
ljmp
testl
push
mov
out
adc
pop
add
xchg
mov
pop
pop
dec
add
xchg
jo
pop
xchg
adc
dec
mov
idivb
inc
push
xchg
stc
test
notb
je
dec
cs
dec
push
int
lock
adc
mov
movsl
mov
cmp
mov
fmul
icebp
scas
int
ret
roll
jp
test
xchg
sahf
or
movsl
outsl
xor
inc
push
movsb
xor
rorl
out
out
mov
jg,pn
or
fimull
adc
pop
pop
push
jmp
js
jne
leave
lret
sar
xchg
xchg
stos
ja
daa
mov
dec
mov
loop
push
ret
leave
repnz
fs
popf
push
pop
ljmp
in
ss
pop
mov
push
test
je
out
dec
out
into
sub
leave
mov
pop
pushf
imul
flds
ljmp
pop
mov
faddp
push
sbb
call
lods
imul
jp
mov
cld
adc
in
aas
lods
test
pop
or
sub
mov
add
pop
jbe
xchg
icebp
in
push
jae
sbb
jmp
lods
pusha
cwtl
push
add
pop
test
ret
xchg
xchg
imul
fwait
rorb
cmp
into
push
fdivrp
mov
lret
mov
sbb
ja
addr16
aad
xor
mulps
shrb
mov
cmp
aam
jge,pn
xchg
push
mov
sbb
xchg
scas
mov
adcb
push
out
stos
adc
jne
das
xchg
cs
popf
ja
shll
mov
add
ret
lds
loope
adc
or
cmp
xchg
adcl
lcall
dec
and
shrl
out
xchg
arpl
subb
cli
sub
pop
fcmovnbe
cs
in
cmp
mov
aam
pop
xchg
stos
test
shl
test
ja
push
and
xchg
push
int
loopne
and
mov
decb
xor
out
data16
sbb
in
add
bound
stos
jnp
xor
xor
scas
dec
pop
inc
adc
leave
movsl
je
cld
mov
fdecstp
mov
adc
sarl
test
xchg
xchg
jge
out
sub
sub
testl
inc
jb
shlb
inc
xchg
lcall
es
ret
fisubrs
pop
sti
and
je
pop
mov
cmp
test
xchg
mov
loopne
cmc
in
dec
pop
mov
cmp
test
ljmp
in
sub
inc
pusha
dec
fwait
jo
maskmovq
idivl
repnz
mov
fadds
cmp
xchg
iret
stos
mov
insl
loope
std
loopne
push
lea
mov
dec
or
mov
popa
push
iret
subb
shll
lock
inc
popf
leave
mov
test
je
cld
out
mov
stos
and
loope
test
dec
divl
push
mov
sbbl
mov
repnz
out
lahf
icebp
sti
movsb
xor
pop
push
leave
insl
add
out
push
pop
in
in
jp
adc
mov
das
dec
xchg
xchg
adc
and
xor
divl
aaa
mov
mov
pop
sbb
gs
std
and
ja
dec
mov
in
repz
scas
xor
or
or
pop
popa
mov
movsl
mov
aam
fstps
popf
shll
mov
jle
mov
mov
insl
inc
ds
sub
lods
mov
mov
xor
daa
in
mov
addr16
sti
mov
adc
dec
and
pop
addr16
mov
icebp
pop
add
aaa
ljmp
or
popa
ljmp
adc
icebp
push
push
lahf
jmp
jae
jns
movsl
mov
pop
xchg
iret
pop
mov
loopne
js
mov
sub
xor
xchg
mov
arpl
or
test
mov
lret
ja
out
cmc
fsts
mov
jge
xor
in
pop
fwait
mov
adc
sub
mov
ljmp
cmp
shrl
jmpw
and
in
push
dec
inc
inc
push
bound
xchg
lods
test
jle
jno
repz
imul
aad
data16
sti
or
jge
add
mov
into
test
adc
xchg
mov
cli
int
jmp
repnz
jno
sbb
jp
call
xchg
pusha
hlt
popf
mov
cmp
fdivrp
mov
inc
std
lods
jne
out
out
addr16
or
fs
mov
movb
xorl
adc
pop
pusha
mov
xor
shl
pop
lock
xchg
out
xchg
ljmp
dec
aad
jne
es
push
jge
dec
sub
test
add
xchg
jle
mov
lret
mov
jns
sub
pop
bound
hlt
and
inc
outsb
dec
mov
add
stos
push
xchg
inc
add
mov
lret
icebp
push
inc
insb
ds
dec
in
lods
clc
cltd
jno
lret
rolb
mov
cmpsb
mov
adc
push
sar
std
mov
test
sbb
xchg
lret
ret
sub
dec
mov
mov
pop
mov
push
and
push
cmc
push
cwtl
stos
in
aad
lods
sub
scas
pop
cmp
dec
cmp
jne
out
testl
fs
mov
mov
mov
jbe
push
dec
xchg
push
rcrl
inc
mov
dec
add
dec
fcmovu
testb
hlt
lock
push
dec
dec
jmp
nop
push
in
push
mov
jl
mov
sbb
ficoml
int3
outsb
iret
popa
mov
sbb
popf
push
sbb
popa
mov
cmp
jp
fmuls
fs
dec
movsl
push
ret
mov
test
adc
push
pop
or
cmp
push
push
leave
push
jbe
pop
aaa
iret
pop
xchg
cmpsb
out
xchg
scas
loopne
and
shlb
sbb
outsb
xlat
xchg
test
mov
fldl2e
adcl
mov
push
nopl
sbb
sub
ficompl
adc
test
lcall
jns
sahf
mov
inc
mov
jno
push
popa
mov
mov
testl
lods
sbb
sbbl
add
dec
out
fnstcw
sbb
mov
hlt
and
cmp
test
inc
add
pop
xor
iret
inc
mov
mov
xor
cmp
inc
andb
test
add
xlat
ja
repz
clc
int
shlb
xchg
mov
test
push
popf
pop
sahf
or
pop
push
xchg
std
inc
cmpsb
jmp
push
insb
push
lods
and
ret
push
icebp
ret
fidivl
jno
ja
mov
push
or
ljmp
pop
pusha
mov
xchg
out
xchg
inc
or
lahf
sbb
mov
pop
int3
push
push
jg
mov
mov
vsubps
int
and
ljmp
test
xor
vmovups
outsl
pop
push
sbb
cmp
cmc
imulb
js
pushf
fs
add
mov
daa
and
outsb
fcomi
jp
insl
es
js
sbb
cmpsl
dec
xor
mov
mov
adc
mov
ficoms
mov
int
and
inc
call
and
outsb
repnz
or
daa
scas
mov
cmp
test
into
xchg
mov
dec
dec
out
and
mul
jecxz
sub
and
cmp
sub
mov
and
mov
and
add
aam
and
sahf
out
sub
movb
mov
shrb
xor
inc
jne
cmp
shrl
lods
push
lcall
inc
in
xor
adc
insl
mov
mov
lods
or
dec
xor
ja
sub
in
push
jb
lret
xchg
push
in
rcrl
or
push
pushf
mov
cld
testb
loop
adc
mov
decb
cmc
jnp
lret
xchg
leave
cld
adc
rorl
loope
icebp
jge
fs
lea
lea
cld
out
sub
in
mov
aam
or
mov
jp
out
in
mov
call
adc
stos
dec
lret
test
fisubrl
jmp
enter
push
fstps
adc
push
ss
out
push
or
in
xor
xor
aad
cmp
out
push
push
xor
xchg
pop
jae
dec
xchg
push
icebp
xchg
es
push
inc
es
dec
aam
popa
gs
push
clc
aas
test
sti
lock
jl
dec
xchg
jmp
push
jno
test
mov
incl
imul
xor
push
xor
repnz
push
and
hlt
iret
xchg
fstps
popf
xor
sub
shll
testb
xchg
mov
pop
cwtl
pop
push
mov
sub
adc
or
cwtl
fwait
lock
xorb
xchg
sbb
xchg
pop
hlt
int3
loope
or
add
jb
push
and
pop
lret
in
add
mov
pop
sub
les
filds
inc
jae
push
out
jecxz
push
rcll
fld1
sub
imul
test
shr
jmp
test
dec
repz
push
daa
jns
sahf
into
push
inc
dec
ret
sahf
pop
xor
insl
maxps
push
sub
mov
push
shlb
repz
jl
lret
popa
shrb
jnp
jg
in
add
xchg
aas
enter
icebp
aam
aad
pop
jae
repz
fbstp
mov
imul
cld
cs
pop
xchg
ja
arpl
pop
fisubrs
inc
sahf
lods
fisubl
mov
mov
cmp
mov
sbb
mov
or
lods
int
loopne
imulb
ficoml
cmpsb
lret
add
cmp
and
not
mov
xor
mov
mov
ret
mov
adc
xor
in
cmp
loopne
add
cmp
mov
mov
jg
dec
jg
push
ds
daa
ljmp
inc
in
pop
push
mov
lods
jae
dec
mov
clc
mov
sbb
mov
push
dec
push
ficoms
xor
pusha
ret
jp
jmp
push
nop
ja
or
cmpl
fwait
xor
push
mov
icebp
sbb
xchg
lret
jnp
pop
hlt
mov
mov
and
jno
arpl
pop
sti
mov
loop
aad
mov
outsl
loop
xlat
sub
loopne
sbb
or
mov
dec
aas
in
js
xchg
or
mov
shlb
pop
sbb
lret
jl
stc
pop
mov
incl
mov
outsb
push
test
sub
pop
jmp
mov
or
andb
xchg
jmp
mov
push
push
add
mov
js
mov
jo
xchg
adc
ds
mov
mov
push
andl
xchg
mov
xchg
adc
addr16
xchg
pop
dec
inc
repz
dec
adc
mov
dec
ja
inc
inc
push
clc
pop
inc
mov
jmp
push
flds
cwtl
test
aas
jg
sbb
fcoml
fldt
dec
cmp
mov
jmp
cmp
sbb
cmp
stos
sub
push
mov
addr16
sub
ja
hlt
xchg
mov
xor
test
jo
dec
loope
add
loopne
xchg
push
lods
in
lea
hlt
push
and
add
mov
lcall
mov
mov
outsl
daa
push
stos
push
fildl
out
mov
adc
xchg
mov
test
movd
and
decb
xchg
hlt
addr16
ss
lcall
sub
lcall
fstps
sub
jle
sbb
add
sbb
mov
ret
jmp
cltd
inc
loopne
sbb
ljmp
outsl
and
dec
or
push
fwait
lret
push
mov
jmpw
sub
mov
xor
loope
ss
xchg
jg
mov
clc
mov
in
mov
jge
xchg
sub
ljmp
lock
add
cwtl
and
roll
jb
push
ja
jae
pop
mov
in
mov
mov
jg
enter
xor
mov
stos
add
popf
or
add
scas
pushl
jecxz
push
imul
pop
xor
adc
sti
pusha
in
out
dec
inc
outsl
pop
xor
inc
leave
or
xor
cltd
sarl
jnp
push
loopne
dec
jmp
scas
bound
push
mov
ret
pusha
mov
lahf
mov
stos
dec
loop
mov
dec
lret
mov
mov
outsb
shrl
lret
jnp
xchg
push
cmp
mov
ljmp
cld
aas
je
out
sub
xor
xchg
aas
lret
adc
inc
fucom
mov
push
movsb
in
or
pop
add
add
inc
jl
out
aam
dec
push
aaa
adc
js
ds
daa
pminsw
jge
je
pop
inc
in
push
popf
in
inc
ss
lret
js
push
lods
jb
mov
cmp
jmp
xchg
jbe
sahf
loopne
je
push
xchg
rcr
sahf
int3
cli
fsubl
sub
js
jg
negb
sahf
adc
pusha
adcb
pop
mov
xor
test
push
mov
or
mov
lock
xchg
lods
or
test
sbb
and
xlat
test
ljmp
jo
mov
shrb
pusha
lret
shll
and
or
inc
iret
sbb
stc
insb
test
jmp
popf
jmp
fsubrl
je
jecxz
repnz
mov
addr16
pop
je
mov
cmc
lods
and
data16
pop
inc
aad
outsl
mov
jno
pop
outsl
fldl
shl
test
jb
add
push
stos
ss
cmpb
pushf
push
and
sbb
lcall
pop
js
mov
dec
sbb
mov
int3
mov
and
xchg
jmp
and
sub
lock
push
jg
mov
pushf
daa
jge
mov
inc
and
and
push
js
push
ljmp
into
cwtl
ror
int
xchg
loop
fwait
lret
js
or
or
push
jg
imul
mov
fldcw
cltd
sbbl
push
push
std
insl
pop
ss
mov
fidivl
into
and
pop
dec
push
sbbl
add
sub
aas
notb
lahf
add
popa
push
ds
adc
aad
xor
and
pop
xorb
inc
les
cli
inc
sahf
dec
fwait
daa
add
or
fdivr
adc
xor
bnd
xor
jns
add
xchg
xor
mov
hlt
jecxz
xor
pop
add
sub
dec
cmp
iret
mov
inc
ljmp
adc
dec
pusha
inc
int3
test
sub
scas
cli
in
jne
jnp
mov
or
movsb
stos
xor
mov
repz
mov
cwtl
lock
mov
in
add
je
movsl
mov
stos
pop
loop
push
sarl
mov
adc
shlb
mov
out
aas
xor
repnz
add
sub
sub
mov
pushf
imul
adc
adcl
mov
iret
je
lret
add
ret
pop
jl
cli
insl
popf
push
sub
mov
inc
jl
test
cli
sbb
cltd
mov
cwtl
aam
outsb
mov
rcll
mov
cmp
cs
stc
nop
ret
jge
inc
pop
pushf
dec
out
cmc
cmovno
jnp
fiaddl
push
mov
mull
mov
aas
punpckhdq
jmp
pop
mov
push
mov
push
inc
movsl
push
in
mov
sub
adc
add
rcrb
mov
stos
gs
or
scas
pop
lock
loop
cmp
adc
pushf
out
fnstenv
inc
jp
das
sub
in
outsl
cmp
mov
jb
sti
sbb
sbb
jg
pop
xchg
mov
addr16
mov
inc
xchg
mov
add
addr16
cs
pop
lcall
and
lods
xchg
lret
cwtl
lea
push
sti
loop
rorb
add
std
push
fidivl
xchg
xchg
push
jbe
lret
daa
hlt
sbb
push
dec
inc
addr16
or
aad
rcll
stos
and
fcmovbe
xchg
ja
test
xor
test
gs
push
jl
mov
mov
fs
adc
frstor
pop
fidivs
jb
punpckldq
imul
mov
loopne
scas
icebp
pop
cltd
rcr
xchg
aad
jecxz
jb
inc
sub
push
fsubrl
lds
ss
or
clc
mov
stc
rcrl
shufps
into
pushf
mov
das
xor
cltd
enter
enter
mov
push
push
in
pusha
aas
hlt
sbb
cltd
jmp
adc
lock
in
mov
insl
es
int
cmp
ja
sub
scas
sbbl
adc
mov
adc
arpl
aaa
xor
jmp
add
sbb
add
je
daa
inc
ret
mov
leave
pop
inc
and
xchg
testb
mov
or
mov
xchg
mov
xchg
xor
mov
ret
incl
lret
imul
lret
insb
xchg
outsb
sub
popf
lcall
les
and
jg
call
inc
xchg
add
bndldx
sbb
mov
adcb
sbb
pop
add
xchg
movsl
lds
adc
ret
lea
dec
pop
out
sub
and
hlt
pusha
pop
mov
and
stc
mov
outsb
xor
pop
loopne
sahf
xchg
fmuls
push
jmp
loop
xlat
push
xor
jmp
fdivrl
and
inc
adc
push
xor
jo
loope
mov
jns
pop
sub
stos
xchg
aam
and
aam
push
sub
fsubl
and
mov
call
insb
xchg
dec
jbe
ret
xor
cmp
sar
scas
mov
insl
clc
jg
mov
lds
jns
mov
insb
sub
inc
in
cmp
les
jge
fs
xchg
or
inc
insl
push
jnp
mov
xor
outsb
sar
es
loope
les
jno
sub
inc
mov
fiaddl
pop
xor
cmpb
push
sbb
sub
mov
mov
or
dec
mov
adc
jbe
mov
ret
mov
fbstp
mov
aam
add
rcrl
xor
lret
pop
mov
pusha
shlb
inc
cmp
imulb
mov
idivb
jl
test
sbbb
xchg
inc
aaa
in
hlt
lods
add
mov
jb
insb
in
addl
nop
dec
and
rcl
add
loopne
dec
aam
imul
ficompl
push
pop
dec
pop
std
xchg
xchg
movl
mov
repz
push
jle
jnp
and
dec
adc
das
jg
imul
fwait
pop
mov
out
cmpsl
xchg
cli
je
inc
shr
push
inc
or
ja
jb
mov
fwait
push
jb
shlb
sbb
sub
pop
in
int
pop
repz
and
lds
sbbb
in
std
ds
or
inc
stos
xchg
mov
cmpsb
int
cmp
inc
jg
insl
aad
sub
ja
jnp
stos
xor
leave
dec
xchg
enter
pop
testb
inc
popa
bnd
cmpsb
popf
sarb
cmp
cmp
nop
jg
fwait
mov
shrl
into
les
mov
loop
and
or
push
ds
insl
outsl
adc
sub
and
mov
mov
xchg
jbe
std
mov
or
fcoml
mov
mov
and
dec
dec
ffreep
repnz
xor
push
mov
bound
mov
pop
xchg
inc
xor
xor
sbb
pushf
jmp
sbb
mov
shrb
lods
test
in
xchg
sub
pop
jp
xlat
je
cmpsl
dec
xchg
pop
xor
and
dec
push
imul
dec
push
lock
enter
push
adc
dec
ljmp
cmpsl
inc
mov
or
adc
jg
sbb
lcall
jmp
out
jmp
cmp
faddl
fidivrl
mov
das
rorb
jg
imul
push
mov
je
imul
fldenv
int3
int
pop
loope
popa
lds
lods
xchg
sbb
out
rorb
popf
mov
push
mov
dec
xchg
pop
sub
xor
jbe
gs
xchg
xchg
inc
popa
int
outsl
sub
push
es
insl
scas
mov
in
cmpsl
je
sbb
pusha
mov
in
movsl
cmc
leave
mov
push
cmpsb
xchg
push
pushf
ljmp
pop
pop
and
ret
clc
sub
into
xchg
push
ljmp
cmp
xor
enter
fisubs
jmp
cmp
leave
stos
pushf
movsb
out
out
pop
dec
cmp
cmp
jecxz
mov
js
in
jns
push
xlat
in
xchg
inc
mov
inc
adc
cmpsb
push
stos
ds
pop
pop
lods
xchg
test
imul
add
mov
jno
pop
inc
xor
out
sub
aam
jns
addr16
fimuls
push
cmp
and
lods
test
pop
aad
mov
sbb
in
sub
cmpsb
pop
ds
clc
imul
fbstp
mov
cmp
cmc
mov
aas
and
stos
je
xchg
add
into
xchg
dec
xor
mov
nop
cmp
xchg
mov
mov
iret
fs
or
push
pop
push
andb
mov
jmp
mov
repz
push
ds
mov
dec
loopne
and
cmp
test
or
xchg
mov
mov
add
sub
out
and
push
xor
pop
mov
movl
lods
icebp
repz
xchg
mov
psrad
icebp
das
cld
mov
jl
into
push
jmp
test
pop
repz
inc
sub
sbb
stos
fdivrl
mov
inc
int3
adc
cwtl
xor
scas
out
xchg
push
xor
inc
cmpsl
in
inc
mov
mov
xorb
cli
fcmovnbe
or
dec
aaa
mov
cltd
test
xor
ja
out
mov
test
mov
jne
xor
jno
xor
fstpl
icebp
into
mov
in
fnsave
sbb
ja
xchg
or
push
push
xor
les
jno
mov
add
push
pop
movsb
sbb
test
inc
dec
rorl
xchg
sbb
push
inc
jbe
mov
mov
inc
je
cmpsl
pop
sahf
cmp
cs
sbb
cli
add
pushf
fisubl
mov
sub
inc
fsubr
xor
mov
cld
test
jmp
ss
dec
dec
mov
aad
mov
setne
inc
push
cmp
push
sub
jge
sub
adc
jp
mov
or
adc
aam
push
pop
jno
sub
or
icebp
popf
and
out
notb
sub
add
mov
push
fbld
mov
popa
pop
fdivl
cmpl
lds
cltd
pop
mov
clc
es
movsl
cmc
dec
fnstsw
add
movsl
fs
loop
ljmp
jno
aas
or
add
dec
jmp
add
leave
in
push
clc
mov
stos
enter
incl
mov
mov
das
mov
or
inc
or
popf
mov
adc
inc
or
cmp
cmc
sbb
lods
enter
sub
adc
sub
sti
repnz
mov
pop
xlat
or
push
outsl
sbb
js
loopne
add
lret
fsub
sub
mov
lods
and
jae
mov
test
mov
add
jle
aaa
hlt
ja
pop
sub
push
cmp
xchg
mov
lret
push
loop
js
repnz
and
mov
gs
cmp
xor
lahf
or
xor
adc
je
leave
dec
sub
jg
inc
xlat
je
or
inc
mov
or
in
inc
inc
popa
xchg
jbe
insl
sub
and
mov
and
mov
dec
inc
dec
fcoms
lret
or
dec
push
add
mov
mov
testb
adcb
daa
xchg
popa
lahf
fwait
xchg
xchg
or
jmp
push
mov
xchg
cmp
js
inc
stc
or
adc
clc
loop
add
les
sub
mov
xchg
xorb
adc
jns
into
repnz
les
mov
lea
jecxz
aas
stos
cltd
mov
jecxz
jns
pop
imul
push
inc
mov
cld
testl
fldenv
jge
push
push
mov
jge
xor
and
in
push
cltd
test
es
inc
xor
das
outsl
push
push
xchg
adc
sub
pop
push
and
ret
jle
inc
push
jle
cmp
js
xor
sar
mov
and
orb
jae
sbb
add
sbb
lds
leave
xor
cmp
jae
imulb
test
mov
jecxz
enter
push
clc
mov
fimull
inc
pop
ljmp
xorb
push
sub
lcall
data16
loope
sbb
ljmp
cld
mov
sub
jnp
push
inc
mov
aam
jmp
pop
je
dec
add
jmp
popa
out
and
fistpll
inc
push
jbe
mov
cmc
rcrb
push
mov
pop
xchg
lcallw
xlat
out
insl
lock
lret
and
mov
daa
insb
pop
cmc
iret
add
rcll
and
decb
or
mov
lods
add
movsb
std
cmp
adc
imul
or
mov
mov
cld
mov
mov
xlat
xchg
andb
jg
das
cmovg
mov
pop
test
daa
push
ja
push
lods
adc
adc
push
push
xor
add
inc
xor
and
js
add
jnp
fucom
cli
ljmp
loopne
push
mov
mov
int3
jecxz
and
push
xchg
daa
jmp
mov
inc
jb
jnp
jbe
je
bound
data16
stos
or
popa
or
push
xor
sub
clc
add
jle
mov
addr16
shl
jp
imull
jne
sbb
mov
and
repnz
adc
and
xor
sbb
cli
dec
inc
jg
dec
push
fildll
clc
std
sbb
sbb
popa
mov
push
data16
out
repz
sahf
push
fisttps
loope
pushf
xlat
insl
mov
and
ror
mov
add
xlat
mov
pop
nop
imul
push
xchg
push
mov
pop
movsl
xor
dec
xor
fnstcw
test
and
push
adc
jl
cmc
xchg
les
les
mov
xlat
inc
mov
shl
hlt
inc
adc
repnz
adc
mov
push
daa
stos
test
sti
mov
mov
push
mov
movsl
mov
pop
pop
cmc
test
rol
les
loope
ret
lods
imul
outsl
dec
addr16
aas
push
std
scas
das
les
sub
data16
add
inc
mov
mov
add
dec
sub
pop
ret
stos
icebp
cmpsl
addr16
sbb
lea
rclb
sbb
dec
idivb
lahf
mov
sub
mov
std
das
sbb
imul
stos
sbb
rcl
enter
and
outsb
jge
xchg
aad
movsl
mov
mov
push
cmp
mov
sub
fldt
mov
mov
and
loop
mov
or
and
enter
lcall
and
mov
jecxz
push
cmp
das
inc
pop
fwait
jl
xchg
mov
ss
sti
repnz
push
inc
sbb
xchg
xchg
loop
cli
movsl
adc
sbb
stos
xor
push
mov
mov
jg
ret
stos
sbb
sub
mov
js
sbb
dec
daa
sahf
mov
lahf
mov
loopne
jns
jg
mov
and
and
out
xchg
sub
movsb
mov
inc
lods
xchg
lret
fstpt
inc
icebp
aad
scas
addr16
outsb
dec
out
pop
xor
cli
in
aaa
das
stos
push
leave
sbb
jp
sarb
je
xor
mov
pop
push
sub
loopne
into
jmp
lods
push
cmpb
xchg
dec
cmp
sbb
sub
xor
repz
outsl
cld
insl
call
adc
pop
cmp
mov
in
xor
lock
sbb
in
xor
adcl
aaa
and
add
int3
push
insl
pop
mov
ss
mov
aam
daa
xor
jl
icebp
cmp
xchg
add
jno
sti
outsb
pop
push
test
pop
popf
cmp
notb
leave
std
stos
xor
ret
jl
sbb
negb
cld
cmp
test
mov
cs
shll
pop
xlat
into
mov
and
loope
rcl
fwait
out
sub
jns
pop
in
mov
out
mov
loope
int
cmpb
mov
jae
lahf
dec
iret
cmp
sbb
icebp
pusha
and
dec
adc
lahf
mov
cmp
cmc
into
pop
je
jnp
push
out
sbb
jle
aad
cmp
fisubs
aad
dec
cmp
xchg
ret
sub
mov
pop
test
mov
scas
int
lcall
mov
mov
lea
popa
lods
or
arpl
in
xor
mov
fucomip
push
ds
cmp
mov
pop
push
inc
dec
int
mov
pop
xor
negl
cmp
jne
pop
sub
dec
aas
dec
push
pushf
sbb
ljmp
add
shr
popa
xchg
jbe
aam
push
in
pop
outsl
cmp
out
popf
icebp
and
out
sbbb
ja
mov
sub
mull
repnz
dec
ffreep
push
imul
movsb
outsl
les
hlt
add
add
mov
or
std
loope
add
xchg
mov
es
les
stos
cmp
pop
mov
pop
inc
mov
xchg
xchg
clc
cmp
xor
jnp
addr16
mov
fldenv
dec
repnz
and
inc
add
je
xchg
inc
dec
lcall
pop
out
clc
dec
fists
or
or
cmp
sti
es
push
out
inc
sub
and
test
inc
lahf
mov
ja
pop
pop
sbb
adc
pop
inc
pop
sub
or
cmp
movsl
outsl
test
rcr
clc
shr
out
out
cmc
sub
in
inc
movsb
push
repnz
sub
mov
bound
mov
mov
out
sbb
fidivl
fistps
loope
or
out
xor
inc
push
int
xor
dec
inc
and
mov
lods
push
je
and
lahf
shl
in
xchg
jle
dec
add
push
jge
push
ja
adc
sub
sub
push
pop
test
std
mov
jmp
jno
scas
insl
or
dec
xchg
and
orb
stos
jo
fbstp
sbb
mov
xchg
jmp
xor
xor
pop
mov
pop
cld
cwtl
adc
aad
in
fnstsw
push
insb
movsb
mov
lea
mulb
jle
cmp
push
je
iret
lret
jp
sub
mov
pop
pop
push
mov
mov
sub
and
iret
adc
in
sub
in
stc
push
add
and
or
push
loope
repz
jge
loope
and
mov
lret
cmp
stc
dec
mov
imull
push
dec
pop
jb
rcll
out
cli
dec
pop
sbb
movsl
dec
or
repz
fimull
repz
mov
mov
int3
or
xchg
and
inc
rorb
out
dec
fildll
loop
test
xor
add
ljmp
inc
jb
pop
pop
push
aaa
jle
inc
lods
int
lods
jnp
add
aad
mov
adc
mov
iret
cmp
jae
cld
cld
sub
cmc
fisubrs
out
int
dec
dec
pop
jmp
dec
and
or
xchg
adc
add
xchg
jecxz
repnz
outsb
cmp
ljmp
dec
xlat
mov
or
mov
mov
popa
adc
cmp
enter
es
cld
mov
fsubs
mov
dec
imul
jne
adc
pushf
xchg
lret
iret
jo
cmp
aad
scas
adc
xchg
pop
sarl
adc
shrb
lret
push
cli
adc
inc
xchg
push
int
mov
aaa
dec
xor
shrl
xor
fcomps
call
call
xor
adc
into
rcll
and
ds
lret
push
in
pushl
cs
jo
nop
aam
imul
js
jle
inc
or
sahf
inc
mov
out
pop
lahf
pop
cmp
lods
jne
in
roll
add
cmp
fidivrl
push
push
mov
dec
xchg
xchg
xchg
xor
pop
std
add
mov
mov
fbstp
xchg
out
and
and
sbb
jp,pn
cmpsb
sub
loope
xor
lds
dec
cld
test
in
mov
or
adc
xchg
mov
mov
ds
das
jmp
add
jnp
push
or
push
xchg
ds
addr16
in
add
fstpl
push
aad
loop
clc
xorl
and
pop
shrl
mov
or
cmc
pop
pop
movsb
cs
push
adc
xor
mov
jge
test
sub
movb
jl
xchg
inc
pop
sub
mov
xchg
sbb
mov
cwtl
loop
sub
mov
stos
fists
adc
fnstsw
lock
mov
scas
insl
hlt
dec
inc
clc
cmp
add
subb
addb
lret
jb
lock
cs
add
sub
in
clc
adc
pop
push
shll
inc
aas
leave
xor
xlat
mov
jns
in
cli
pop
pop
pop
cmpb
fnsave
icebp
ss
pop
jge
int
adc
sbb
xor
lahf
data16
in
xchg
cmp
repz
xchg
mov
and
cmp
xchg
pop
and
jp
pusha
hlt
scas
cmp
pop
rol
scas
ret
in
cmp
test
and
or
test
sub
xchg
stos
mov
add
ljmp
cmpsl
pushf
mov
cmp
or
pop
inc
jo
data16
push
aad
cmp
cmpsb
gs
nop
cmp
add
push
sbb
jl
sbb
jl
jnp
add
pop
cwtl
add
inc
aad
xchg
repnz
mov
or
pop
je
jb
push
testl
mov
cmp
add
pop
rorl
test
pushf
mov
iret
jle
cmp
ja
xchg
mov
wrmsr
insl
xor
popa
mov
xchg
stos
xchg
rcll
fisttps
movsl
inc
jp
push
test
ret
ss
rorl
idivb
lods
icebp
add
mov
xchg
and
cmp
or
fstps
sti
rcl
repz
mov
xor
popf
xchg
ret
dec
jge
sarl
jnp
sbb
or
in
xchg
lock
lock
roll
jge
negl
hlt
add
inc
xchg
fxch
add
repz
and
and
push
push
shll
push
pushf
aad
das
dec
mov
imul
je
push
push
div
jle
ds
mov
add
ret
mov
lret
push
rep
push
push
or
loope
jge
repnz
aaa
mov
xchg
push
loop
jmp
out
mov
cs
pop
test
popw
jle
mov
push
push
test
into
sub
push
mov
pusha
ret
repnz
stos
add
hlt
mov
add
addr16
inc
inc
imul
pop
scas
dec
jl
ret
add
fs
aas
mov
fidivrl
stos
orl
push
jae
outsb
cmp
sub
ret
mov
dec
push
mov
lret
stc
xorb
mov
in
xchg
sarl
shll
inc
les
repnz
aas
mov
movsl
push
rorl
pop
out
xchg
and
pop
mov
dec
lret
fildl
dec
xlat
jno,pt
jbe
rclb
inc
dec
ret
push
or
mov
mulps
cmpsb
mov
arpl
sbb
sbb
shl
repz
cmpsl
pop
sub
imul
int
gs
psubsb
fucom
cmp
loop
mov
les
in
push
repz
sbb
sbb
ljmp
scas
incb
sub
lret
inc
adc
dec
lahf
shrl
sbb
pushf
xor
mov
mov
fnstsw
pop
jg
add
mov
sbb
mov
xor
mov
sbb
and
jns
xchg
inc
push
xor
mov
es
popf
mov
rcll
stos
cmp
jmp
cmp
jbe
repz
mov
outsl
push
dec
arpl
xor
into
inc
pop
movsl
inc
sti
sub
xchg
and
lea
ja
pop
xor
cmp
inc
xchg
fcompl
enter
filds
shlb
in
jno
mov
xor
addr16
dec
bound
divb
leave
fstl
push
imul
das
sbb
stos
idivb
ss
loopne
mov
test
mov
and
mov
jns
xchg
adc
jl
test
jb
jb
scas
popa
fninit
add
sarl
scas
or
lahf
or
push
mov
nop
pop
rorb
add
push
out
mov
pop
aas
sub
sbb
pop
pop
and
mov
fidivs
scas
lahf
push
jae
fwait
jo
mov
and
rcll
lahf
jl
outsb
pop
hlt
scas
pop
add
out
sarl
subl
mov
add
xchg
mov
cmc
out
fldt
xchg
pop
pop
adc
test
cmp
leave
or
cltd
fprem
pop
fneni(8087
and
out
sub
jnp
jge
movsb
mov
xchg
popa
negb
lods
mov
nop
clc
movsb
fwait
sbb
inc
std
push
clc
and
inc
arpl
out
pusha
aad
mov
push
das
icebp
inc
rolb
add
in
rcl
sahf
inc
frstor
outsl
test
scas
sub
ljmp
pop
inc
out
adc
enter
dec
sub
divb
cmp
mov
xchg
je
cmp
mov
loope
pusha
mov
fucomp
scas
sti
call
popf
test
dec
push
pusha
nop
push
lcall
push
mov
or
in
xchg
stos
or
les
sub
dec
cwtl
sbb
lock
adc
sbb
inc
and
sub
mov
iret
jmp
jg
pop
mov
jno
cltd
xchg
pushf
enterw
and
sbb
cmp
testb
hlt
mov
mov
stos
push
jle
sbb
pushf
mov
mov
push
mov
test
aaa
xor
jbe
jmp
sub
mov
les
cmp
sub
cmp
mov
dec
xor
test
pop
sbb
fcmovnbe
lods
jmp
data16
nop
lahf
in
pop
mov
inc
xchg
pop
sti
mov
fwait
add
jecxz
sbb
fisubs
test
dec
and
push
mov
gs
or
negb
sti
add
iret
lea
xchg
lahf
jp
filds
cmp
lret
jecxz
dec
insl
inc
jae
dec
ja
add
call
add
fsubr
std
mov
das
sub
pushf
pop
and
rorl
cld
in
mov
notl
mov
mov
stos
lahf
mov
jo
xchg
adc
movsb
ret
fdivrs
adc
out
imul
push
cli
hlt
faddl
pop
cmpsb
xchg
std
push
out
ret
pushf
es
repnz
sbb
pop
decb
fnstsw
sarl
inc
push
pop
mov
scas
or
pop
push
mov
fisubs
rcl
jge
xchg
loope
or
test
xchg
pushf
fucomi
jge
add
push
in
icebp
cwtl
xchg
loope
push
pusha
adc
add
pop
scas
shl
and
stos
adc
fwait
lahf
movswl
aaa
adc
push
arpl
xor
scas
cmp
xchg
subb
xchg
push
mov
icebp
nop
add
mov
std
shlb
push
jo
pusha
push
in
adc
jge
lds
shll
mov
and
shll
lock
imul
cmp
cmp
loop
ret
hlt
pop
adc
mov
jb
mov
mov
xorb
jb
sbb
sarb
adc
xor
dec
ror
arpl
jno
xlat
pusha
xor
loop
ficomps
in
sub
subb
push
push
leave
sahf
stos
popa
mov
icebp
icebp
xchg
jns
sti
inc
cmpsl
mov
insb
imul
test
lret
add
out
add
jns
pusha
aaa
ret
or
fptan
cwtl
std
mov
fdivl
jae
call
cmp
cmp
cmp
jne
mov
adc
mov
jo
jns
jle
enter
add
xchg
scas
cmpsl
in
mov
mov
out
mulb
and
sub
push
adc
movsb
mulb
mov
mov
pop
adcb
in
popl
ljmp
jo
mov
addr16
inc
dec
pop
in
loopne
sbb
cmp
icebp
pop
data16
pop
sub
ror
sahf
xchg
loope
ret
imul
pop
mov
aam
sub
loope
dec
sbbl
sti
mov
es
iret
and
adc
push
xchg
leave
push
pop
inc
pop
sbb
insb
xor
je
gs
cmp
mov
sbb
dec
iret
cmc
in
mov
sar
popa
push
inc
data16
lret
movsl
mov
dec
lcall
fnstcw
push
mov
inc
cmp
dec
sti
adc
add
add
pop
sbb
leave
lret
inc
mov
sti
insb
mov
test
in
fisubrs
add
out
adc
inc
add
push
sbb
cld
mov
xor
popf
dec
lcall
push
mulb
lret
ds
ret
cmc
pop
push
mov
shrl
sbb
push
jecxz
orb
add
xor
dec
out
and
lods
ret
add
loopne
sarb
in
dec
outsl
xchg
xchg
lds
int3
fwait
xor
js
pop
icebp
popf
mov
or
rorl
subl
mov
dec
and
cmc
push
pop
dec
sub
aas
sbb
inc
ss
stos
mov
or
jmp
pop
jb
mov
mov
xchg
add
push
mov
mov
addb
push
and
xor
out
xchg
mov
std
jns
and
adc
test
pop
mov
faddl
jbe
jnp
lcall
and
or
pop
addr16
subb
and
out
mov
xchg
addb
pop
cmp
pop
in
push
leave
jnp
aaa
xor
in
pop
sbb
push
dec
ds
ret
pop
icebp
cmpsb
enter
sbb
inc
int3
jo
lret
sub
aas
pop
sbb
jle
and
aas
add
or
lret
add
push
add
imul
xchg
add
cs
xchg
ret
in
test
cli
mov
mov
xchg
out
fisubs
ret
sahf
in
or
xchg
mov
jbe
dec
jbe
cmp
enter
jno
xchg
xor
add
pop
in
bound
or
test
fcomi
in
loopne
loope
inc
mulb
inc
sahf
or
loope
pop
sahf
shrb
std
push
je
loope
hlt
daa
lahf
push
lahf
hlt
mov
daa
jno
adc
flds
jp
ss
rcl
or
les
scas
js
mov
inc
sbbl
addr16
vcvtpd2dq
pop
pusha
popa
aam
xchg
pop
xacquire
xchg
mov
ds
inc
lods
orb
sub
jb
das
push
lods
sub
xchg
mov
xchg
adc
push
int3
or
shrl
dec
mov
xchg
jp
mov
adc
pop
jb
push
and
lret
sub
mov
or
adc
pop
stos
stc
mov
out
mov
pop
dec
xlat
mov
jl
xchg
ret
cld
aam
test
cmp
push
ret
jmp
int3
push
popa
pop
mov
sub
std
dec
adc
scas
xchg
lret
aas
es
aas
fisttps
mov
mov
fdivrl
in
push
clc
sub
divl
push
mov
pop
clc
jbe
imul
ljmp
cmp
sbb
cmpsl
aas
scas
mov
lock
jg
mov
test
cld
decl
cmpl
movsl
cmpsb
mov
orl
inc
call
jb
popf
push
dec
loopne
sbbl
xor
push
xchg
mov
mov
adc
cmc
mov
xlat
xchg
xchg
inc
shll
cli
inc
xchg
jns
lods
xchg
add
andw
repz
pusha
in
mov
shufps
div
icebp
inc
out
pop
sub
sahf
mov
and
sub
xchg
js
mov
cmp
lods
in
push
mov
and
imul
or
add
enter
int3
andb
fdivr
into
dec
xor
mov
mov
sub
xchg
ret
xor
insb
add
lods
cmpsl
iret
fdiv
and
cmc
insb
xor
and
lret
mov
inc
dec
xchg
shll
inc
or
sub
dec
dec
hlt
mov
dec
and
sahf
jb
inc
das
adc
or
sbb
fwait
push
mov
loope,pt
adc
ret
cmp
jbe
fidivrs
into
cs
mov
lret
lods
xchg
sbb
push
cmp
adc
cmp
mov
movsb
loopne
insl
ds
je
je
cmp
or
jae
sbb
lds
lea
mov
cmp
in
mov
mov
out
or
xchg
inc
mov
cmp
test
add
ret
stos
xor
imul
andw
inc
and
and
sub
pusha
mov
and
dec
test
aam
dec
add
push
test
jns
mov
sarb
or
dec
movsb
push
add
cmp
stos
fiadds
xor
shrb
fdivrl
inc
js
push
or
fcomps
inc
jmp
gs
test
aas
insl
pop
mov
pusha
mov
stos
add
mov
or
jmp
push
pusha
mov
stos
lahf
scas
and
mov
inc
inc
mov
pop
inc
loopne
repz
xchg
dec
rcrb
fimuls
pop
clc
mov
sub
lret
in
shlb
outsl
sbb
sti
imul
test
push
sub
lahf
xchg
test
mov
inc
out
imul
out
enter
add
jo
xchg
sbb
mov
mov
jge
or
sbb
cmp
sub
ficoms
mov
ljmp
pop
dec
xor
enter
push
adc
scas
loope
ss
shrb
mov
rcll
stos
xor
in
rol
lret
pop
jbe
icebp
movsb
add
cmp
dec
xchg
in
test
pop
aam
xor
mov
jecxz
lret
cmp
std
mov
push
pop
clc
lds
subb
ret
outsb
je
pop
push
cmpsl
out
xchg
jbe
sub
mov
insl
pop
out
sti
jmp
outsb
dec
pop
mov
pop
xchg
out
xchg
outsb
and
adc
imul
nop
js
mov
mov
mov
xchg
rolb
mov
add
mov
mov
aam
aaa
ret
into
inc
or
loope,pn
aaa
push
lret
fsubrl
fs
dec
adc
test
cmp
mov
fwait
xor
push
out
xor
out
in
lcall
cwtl
jae
ret
dec
lds
mov
push
mov
sahf
and
stc
scas
out
mov
test
in
jo
dec
in
sbb
int3
frstor
je
adc
mov
daa
mov
pop
fdivl
or
addr16
and
push
xor
mov
test
dec
lret
fidivrl
leave
jmp
add
xor
mov
inc
das
inc
and
sub
cmp
ja
rcrl
mov
xchg
dec
adc
mov
leave
cld
ds
fbld
loop
enter
mov
xor
add
shll
sarb
push
cmp
mov
enter
and
jg
sub
jl
hlt
xchg
pop
cmp
pop
mov
loope
nop
xor
and
shlb
xchg
clc
xor
mov
xor
or
sbb
dec
inc
fwait
cmpsb
jo
aas
loop
loop
in
jl
lret
add
imul
in
jp
sbb
mov
mov
lock
sub
cmp
mov
jecxz
in
lcall
pop
arpl
call
mov
pop
jno
and
aad
pop
es
rcr
movsb
leave
push
lea
sbb
sub
mov
in
or
xchg
mov
xchg
clc
in
outsb
or
lret
fmuls
and
xchg
or
and
dec
sarl
movsl
add
adc
mov
sub
vmovntps
xchg
and
jb
xor
mov
rcrl
xchg
add
lea
dec
xor
sarl
add
int3
jnp
movsl
pop
addr16
imul
and
shl
or
es
pop
xchg
jb
dec
arpl
stc
gs
loopne
movsl
repz
in
aaa
xchg
push
xchg
xor
inc
int3
and
mov
cmp
xor
pop
xchg
test
cmp
jnp
cli
cmp
or
aaa
lea
xchg
rorl
adc
and
aaa
xor
mov
push
jl
mov
add
dec
cmpsl
sbbl
in
lock
in
lea
rcrb
mov
mov
and
ljmp
push
adc
cmp
pusha
mov
pushf
jae
cli
or
data16
xchg
and
pusha
and
xor
cwtl
dec
mov
out
push
in
aad
mov
fwait
or
insl
aas
push
mov
rcrb
mov
push
mov
leave
mov
fdivp
aam
sub
negb
das
mov
jbe
xchg
test
loop
cvtpi2ps
scas
shlb
outsl
lods
in
pop
out
comiss
ret
or
pop
jge
lret
add
roll
sbb
out
test
mov
hlt
pop
mov
jecxz
push
enter
mov
ljmp
sbb
add
jnp
aas
stc
adc
cltd
fidivs
add
jne
nop
jl
or
ss
mov
mov
push
push
scas
add
push
lock
cmpsl
fcoms
mov
cmpsl
push
pop
daa
repnz
cmp
or
fildll
jle
jg
insb
lea
xchg
sbb
inc
adc
sahf
loope
leave
push
shll
mov
sub
fsubrs
add
imul
popa
push
mov
cmpl
incl
pusha
jge
ret
pop
imul
inc
repnz
cmpsl
ret
mov
and
pushf
mov
nop
sub
xchg
mov
fwait
pop
xor
push
xlat
cmp
and
dec
out
pop
aam
shll
inc
std
scas
mov
mov
cwtl
lahf
stos
sahf
mov
scas
xor
das
imul
mov
cmp
or
push
jno
inc
mov
mov
sti
and
les
mov
fstpl
or
cltd
mov
cmp
pop
ja
jb
and
icebp
pshufw
cld
mov
int
shll
scas
adc
call
mov
fbld
stos
iret
jns
fnstsw
repnz
dec
add
popa
push
push
mov
dec
cli
loopne
hlt
in
fnstenv
xor
mov
xor
sbb
cmpb
cld
std
push
lds
or
cwtl
or
inc
cmp
mov
sub
lret
stos
popa
test
mov
push
xchg
popa
cmp
mov
aad
mov
addr16
scas
int3
imul
imul
sbb
xor
jmp
adc
dec
and
and
mov
orl
je
cli
aad
enter
push
mov
or
rcll
dec
inc
fdivrs
rcll
shll
jnp
imul
sub
xor
lea
stos
js
add
gs
xchg
adc
mov
or
jbe
pop
loopne
xor
push
nop
jno
ja
or
sbb
mov
mov
or
xor
pop
negb
mov
mov
repnz
iret
mov
pop
cmp
dec
xchg
cwtl
sub
jle
push
stc
cmpsb
sub
mov
outsb
shlb
xor
jecxz
or
inc
je
pop
sahf
pop
cmpsb
jne
jno
mov
xchg
jns
ret
gs
into
rcll
adc
jp
mov
daa
xchg
jb
cmc
or
ret
cld
cmpsb
daa
or
lds
rolb
cli
and
and
fldl
int3
leave
fnstsw
outsl
mov
inc
dec
dec
jnp
add
call
mov
fsubr
jp
push
mov
cmpsb
insl
xchg
clc
ss
loopne
mov
jne
xadd
add
sbb
dec
xchg
xchg
adc
mov
sub
dec
jo
fildl
sbb
or
jp
filds
sahf
andl
jle
lds
stc
cltd
mov
lock
dec
js
test
je
fisttpl
fwait
pop
pop
pop
shlb
mov
movsl
lock
cli
dec
movsb
lret
cmp
jle
stc
pop
sbb
or
mov
lret
add
pop
fcmovnu
jbe
add
jecxz
sub
fstpt
cltd
and
mov
out
insl
dec
rcrb
out
xor
dec
popa
out
pop
jp
cmp
repnz
clc
lods
push
in
jle
mov
pop
repz
in
push
sub
shll
xor
xor
nop
test
clc
jl
movsb
cmc
jge
pop
es
mov
lock
dec
icebp
adc
inc
or
push
bound
mov
testl
or
or
adc
in
addr16
xor
xor
xchg
in
ret
dec
jae
cwtl
into
movsb
and
inc
jmp
outsl
dec
xchg
and
push
jb
mov
jo
out
jbe
gs
xor
ret
repz
fisttps
jmp
fcompl
add
and
mov
mov
add
sti
imul
sbb
cmpsb
sarb
jp
repnz
fsubr
loop
stos
dec
or
iret
mov
out
ret
lods
insl
test
inc
lahf
sbb
inc
cmp
pop
xchg
push
mov
push
add
xlat
std
adc
shrb
icebp
ret
xlat
ds
jbe
stos
cmp
pop
ljmp
shlb
xor
frstor
pop
fidivrs
push
hlt
test
mov
push
lret
enter
mov
lahf
mov
stos
dec
xor
dec
add
cmp
dec
pop
dec
es
xchg
insl
mov
inc
icebp
imul
cli
jns
jle
ja
dec
test
cld
push
cmp
fmull
mov
and
mov
mov
sub
movsb
call
mov
js
jle
ret
and
mov
aaa
aad
mov
dec
mov
call
aam
add
iret
andb
xor
shl
pop
pop
dec
xor
and
js
test
push
je
push
les
cltd
sarb
jle
inc
cmp
push
mov
rcrl
out
jbe
lret
xchg
stos
push
lods
push
ret
or
xchg
divl
ds
cmp
xor
jp
inc
xchg
test
sti
and
inc
cmpsl
or
aaa
clc
xor
jge
xchg
cs
pop
pop
push
test
mov
cwtl
add
mov
jg
clc
imul
push
push
pop
pop
jmp
enter
fs
pop
scas
gs
bound
xchg
pop
pushf
aas
mov
or
lods
pop
or
pop
icebp
lods
gs
lcall
jle
lahf
mov
lods
testb
hlt
das
sbb
mov
dec
push
mov
dec
aaa
push
aas
imul
pop
lods
add
and
inc
adc
cli
and
jle
mov
shrl
scas
fadd
rcl
mov
xchg
sarl
xor
push
setp
push
sub
iret
js
add
and
int
cld
mov
lret
into
dec
ds
int
leave
fmul
jmp
leave
or
cli
aam
mov
imul
and
dec
fs
and
jns
xchg
outsl
loop
loopne
stc
std
xchg
or
and
lret
repz
adc
lods
ja
inc
lds
xlat
je
inc
cmp
stos
ja
divb
pop
jae
lds
fbld
xor
inc
nop
mov
loop,pt
nop
mov
int3
dec
lret
outsl
dec
pop
cld
imul
cltd
xor
loope
icebp
iret
and
adc
inc
imul
xor
xor
inc
push
adc
sub
inc
dec
mov
daa
iret
adc
test
cmovb
ss
cs
ret
out
sahf
mov
vminss
jae
repz
mov
mov
adc
xor
insb
outsb
jp
bound
shll
mov
nop
xchg
dec
adc
xorl
lods
data16
sbb
jl
mov
int3
inc
inc
mov
pop
cld
xchg
js
rcrl
mov
icebp
repz
loop
clc
mov
or
out
sub
jg
inc
mov
mov
je
sub
fidivrl
imulb
int3
in
push
mov
loopne
pusha
insl
lret
add
sbb
adc
adc
sub
ljmp
into
gs
or
and
outsb
or
sahf
fxch
out
outsb
aam
adc
and
pop
adc
fs
rcll
rcll
icebp
lods
xchg
or
ds
mov
add
mov
cwtl
repnz
cltd
cli
fstl
pop
jbe
cmpsl
mov
sbb
mov
cmp
cmc
mov
fwait
imul
mov
clc
sub
xorb
mov
and
or
push
or
cwtl
enter
insb
iret
fdivrl
in
das
push
mov
sbb
nop
je
and
sub
xchg
clc
shll
lea
jno
iret
jle
dec
dec
arpl
add
negl
outsl
xchg
iret
pop
cmpsl
push
imul
in
fs
jnp
dec
mov
lods
push
add
xchg
inc
ret
sbb
xchg
inc
out
int3
mov
mov
adc
inc
shll
scas
and
add
lret
outsl
sbb
xchg
ljmp
inc
cmpb
jge
inc
push
push
in
fdivrl
lret
fsubrs
repnz
mov
mov
fs
and
mov
or
and
jecxz
fsubl
dec
xor
lock
fstpt
test
lea
in
cmp
mov
inc
lds
insl
aam
cli
or
add
pop
sbb
loop
dec
and
or
out
push
test
stos
daa
dec
dec
mov
xchg
iret
mov
mov
sbb
shll
scas
mov
jbe
jb
sub
xchg
int
aaa
mov
aad
je
aad
test
and
inc
lahf
rorb
out
imul
sti
repnz
xchg
xor
out
mulb
lods
sub
or
pusha
dec
mov
je
push
xor
add
dec
push
scas
dec
jb
add
mov
jae
sbbl
int3
std
in
cmp
es
xor
and
fsub
mov
aas
ds
pop
insb
dec
pop
mov
inc
in
mov
dec
sub
imul
nop
sbb
xchg
push
fdivrl
push
sbb
out
and
popf
lea
sarl
testb
imul
cmpsl
add
jo
dec
mov
iret
cmp
mov
sub
cwtl
cmp
mov
cld
lcall
push
inc
insl
cmpsb
loopw
pop
cwtl
xchg
adc
pop
mov
sbb
stc
hlt
sbb
inc
in
xchg
lock
idivb
iret
add
in
pop
test
out
pop
scas
sarb
fldenv
aas
ret
mov
jecxz
addr16
xchg
inc
das
das
cwtl
push
lea
mov
sarl
xchg
daa
dec
mov
mov
mov
roll
outsl
adc
ds
repnz
ljmp
div
push
adc
dec
mov
ret
mov
jns
pop
sbb
test
add
pop
and
jae
rolb
test
pop
int
xchg
mov
mov
sub
jbe
mov
xchg
cmp
aad
data16
mov
dec
and
rolb
sti
imul
stos
rcl
xchg
push
cmp
mov
and
push
stos
pop
mov
and
insb
cmpsl
jle
jno
dec
fdiv
rcrb
jge
sahf
pushf
pop
clc
sub
shrb
std
fcmovb
nop
cmpsw
inc
cmp
into
sbb
lcall
fisttpl
in
mov
in
xor
pop
decl
dec
jg
xlat
cmpsb
clc
or
jne
pop
inc
push
mov
cmpsl
ljmp
adc
inc
push
shrl
mov
adc
sub
punpckhbw
setle
fldl2t
jle
push
int
nop
test
pop
or
loopne
inc
aaa
or
mov
lods
mov
int3
hlt
and
jae
sub
aam
leave
jno
fcoml
or
cmp
adc
dec
or
cmp
fdivs
add
xor
jae
fsubrl
std
xor
push
rorl
mov
jmp
cmc
notl
inc
push
sbb
jno
and
jl
jae
mov
insl
pop
decl
xchg
push
dec
mov
les
add
or
xchg
sub
adc
inc
xchg
cltd
cwtl
sbb
mull
mov
mov
adc
pop
mov
testb
outsl
sub
in
fstpl
in
ret
pop
dec
imulb
add
push
add
cmp
in
leave
xor
fwait
mov
mov
subb
push
lret
or
call
fdivl
jae
xor
cltd
hlt
adc
movsb
adc
xor
xchg
mov
push
or
push
sbb
int
shl
jae
mov
fdivs
addr16
popf
popa
dec
popa
dec
ret
fwait
cwtl
adc
sub
add
jle
test
push
cld
in
es
sbb
es
or
inc
or
movsl
movsb
inc
xchg
add
scas
sti
xchg
jecxz
cmc
adc
mov
mov
add
cmp
loope
insb
aas
cmc
sbb
sub
sbb
out
mov
icebp
in
mov
lock
jg
out
std
xchg
fistpll
clc
xchg
push
lret
pop
les
in
sub
jge
add
adc
add
in
add
enter
gs
dec
insl
dec
push
cld
jnp
and
add
pop
jle
pop
mov
inc
orl
mov
mov
popf
dec
dec
jge
outsb
in
cmp
lds
jg
inc
outsb
jecxz
rcrb
lcall
lds
aam
xlat
xchg
sub
fldt
mov
imul
testb
jbe
pop
add
out
xor
stos
stos
flds
push
int
lret
xchg
xchg
in
xorl
icebp
sbb
lock
loop
ljmp
es
pop
fldt
leave
subb
out
call
and
xor
pop
lcall
jmp
and
stc
jge
sbb
inc
das
cwtl
ret
rcrb
pop
repz
add
cmc
push
ror
adc
push
les
push
mov
popf
xlat
out
pop
ds
lock
shl
aaa
add
pop
xchg
cmp
fs
mov
pop
inc
and
push
ret
lahf
ljmp
push
pop
and
jecxz
lahf
daa
mov
stos
insb
sub
xor
push
stos
cmp
in
jg
sub
pop
ss
fmuls
cmp
int3
test
sub
mov
dec
dec
stos
pop
inc
xchg
mov
push
es
imul
cmpsb
adc
mov
mov
push
xchg
out
jns
jae
or
fisubrs
cld
jp
dec
stos
es
pop
fldcw
vpcmpeqb
fwait
xlat
jo
std
jne
add
mov
out
dec
and
cmp
mov
push
dec
test
mov
cmpsw
out
hlt
or
int3
pop
std
popf
xor
add
mov
pop
mov
stos
stos
pop
test
jns
xor
mov
xorb
adc
xor
adc
dec
int3
sub
std
out
nop
stos
cmpsb
int3
jmp
xchg
inc
mov
loopne
xchg
test
mov
bound
shlb
mov
fisubl
mov
xchg
or
push
int3
dec
push
fldt
sti
aad
mov
fstpl
jmp
jne
mov
inc
jo
jge
jp
or
sarl
int3
cmp
mov
loopne
push
mov
test
inc
sub
mov
fmuls
pushf
lods
dec
jae
and
push
jp
add
cmpsb
cmpb
popf
pop
jle
add
adc
and
pop
adc
and
push
or
outsl
and
rcl
xor
movsl
insl
outsl
jo
cli
into
jmp
cmp
xor
mov
fs
pushf
mov
jne
in
jbe
sbb
aad
adc
repnz
mov
icebp
cmp
aad
push
xlat
cmp
imul
xor
dec
push
lret
in
jo
adc
inc
xor
rorl
lcall
rorl
inc
add
pop
and
pushf
les
notb
mov
add
or
cltd
shll
jns
mov
push
mov
loopne
sbb
mov
jns
loopne
ljmp
orb
insb
pop
imul
xchg
subl
fiadds
add
mov
stos
xor
sbb
pop
rorl
pop
in
dec
push
adc
push
jno
push
fsubs
jecxz
dec
pushf
cmp
adc
mov
repnz
push
fists
and
jmp
dec
cwtl
nop
push
mov
in
rorb
and
leave
cs
jno
repnz
popf
aaa
int3
jl
cmp
test
ss
xchg
dec
xor
lea
or
in
sub
pop
inc
sub
and
insl
inc
es
das
les
xor
and
inc
loope
mov
jne
aad
adc
ljmp
jl
jo
int3
sub
es
test
ret
arpl
xchg
es
dec
push
fcompl
add
ja
cmp
or
jl
or
les
incb
iret
fimuls
bound
xchg
adc
or
inc
fucomi
ret
jno
in
inc
mov
jo
testb
cmc
test
cs
les
lods
add
cmp
bound
fwait
mov
xor
sub
lret
std
fidivrl
lods
aam
adc
dec
mulb
and
test
mov
cmp
out
sbb
add
movsb
add
lcall
inc
in
arpl
push
cmpsl
dec
test
push
pop
in
cmp
jge
insb
sub
push
cmpsl
stos
fadds
mov
stos
ja
hlt
imul
add
inc
shrl
iret
fildll
xor
cmp
popf
push
lea
fwait
ret
jno
test
in
sbb
daa
inc
add
aad
add
lods
hlt
mov
xor
out
lea
xor
mov
lahf
and
je
aad
das
addl
icebp
cmpsl
fisubrl
inc
les
cli
push
mov
pop
fdiv
sub
add
jns
test
pop
ljmp
fiaddl
je
mov
push
dec
add
pop
call
and
sub
lods
testl
inc
pop
mov
xchg
loopne
xlat
mov
jno
mov
xchg
and
xchg
in
lock
ret
outsb
push
out
lds
sub
jne
aaa
or
cmp
in
jge
sbb
je
popf
cwtl
dec
out
ficoms
pop
unpckhps
push
lock
push
dec
xorl
out
aas
andb
lret
xchg
mov
outsb
xchg
sbb
inc
data16
pop
out
jo
movsb
sbb
pop
fistps
pop
lar
imul
outsb
sbb
shrl
int3
add
mov
sub
sbb
ret
xchg
sahf
js
push
add
int
rorb
lahf
push
sarb
xor
loopne
jmp
add
dec
inc
adc
lret
lds
ja
rol
cmp
and
cmp
adc
xchg
xor
adc
ds
cltd
pop
add
lret
xor
mulb
arpl
or
adc
pop
cmpb
and
pushf
jp
test
loop
and
xchg
xchg
and
into
imul
push
mov
or
mov
in
sbb
mov
in
jle
daa
dec
addr16
cmpl
out
dec
cld
ret
imul
imul
outsl
pop
dec
lcall
js
cmpsb
pop
je
mov
hlt
aas
shll
jmp
mov
addr16
xor
sub
xchg
pop
sti
cmpsl
cli
lea
mov
xor
out
push
in
fwait
mov
xor
adc
mov
inc
enter
ret
sub
mov
hlt
cli
mov
sub
lret
in
jo
and
jno
pop
jo
add
add
test
pop
fwait
jno
adc
js
add
dec
and
xor
jle
lods
inc
add
test
bound
inc
push
out
ja
nop
sub
mov
nop
test
add
fwait
out
cs
mov
sbb
data16
lds
cmc
pop
pop
mov
pop
gs
decb
jle
mov
cmp
cmp
or
cli
sbb
aad
rclb
in
cwtl
in
ja
iret
fidivl
sarl
push
icebp
test
mov
test
test
push
jo
mov
and
pop
in
sbb
xor
mov
add
aas
movsl
outsb
inc
add
ds
jae
xor
inc
push
enter
push
pop
hlt
testl
pop
xor
adcb
pop
in
das
xchg
rcrl
add
sahf
bound
xor
shlb
rclb
js
lret
rorb
das
xchg
lret
fsubrp
data16
xor
shlb
jp
popa
push
pop
or
inc
loope
std
pop
out
aaa
jo
mov
fucomi
inc
dec
sbb
imul
rcrb
les
and
clc
std
shlb
or
je
xor
addr16
nop
jb
lret
or
repnz
mov
icebp
int
sub
lcall
stos
add
cwtl
push
jno
repz
mov
ljmp
out
push
cmc
in
inc
andb
ret
add
aas
sbb
jge
fisubs
cmpsb
cmp
sub
pop
mov
sub
mov
and
loop
mov
fisubrl
mov
mov
xchg
add
cmp
fidivl
mov
sub
and
mov
aas
jecxz
das
mov
xchg
insb
lret
mov
xor
pop
faddl
inc
out
push
insb
xor
jbe
and
popf
sbb
xor
or
xor
popf
insb
push
leave
add
shr
push
ror
pop
cld
dec
or
jl
mov
addr16
mov
mov
mov
clc
jne
jecxz
push
mov
shl
sahf
add
out
imul
lods
pushf
div
mov
mov
sub
jp
fdivrp
mov
lods
dec
adc
adc
or
fists
jae
cld
adc
nop
push
sbb
push
out
fwait
add
lock
xchg
mov
pop
or
ffreep
cwtl
pop
cltd
gs
lcall
sahf
jg
mov
nop
aas
cmp
lds
and
inc
jb
das
inc
shrl
out
cmc
sbb
jb
imul
ds
mov
sbb
and
clc
pop
inc
aad
jmp
mov
mov
ss
push
in
xchg
sbb
xorb
inc
push
lods
or
sub
or
mov
dec
jle
fidivl
movsb
push
add
mov
push
andl
adcl
cmp
ja
mov
pop
inc
or
negl
aas
xor
mov
clc
dec
cmpsb
mov
adc
aaa
pop
adcb
push
and
mov
pop
and
test
push
stc
popf
xchg
ds
ret
lret
in
push
pop
or
mov
pop
idivl
cmp
jnp
insl
adc
pop
loopne
iret
pop
add
pop
dec
lods
lret
jb
lcall
dec
into
fstpl
cltd
mov
scas
mov
popl
mov
movsl
mov
sub
test
rclb
sbbb
test
in
sbb
popa
popf
xor
xchg
add
insl
cmpsl
xchg
jo
mov
ds
push
or
je
stc
pop
xor
jb
jbe
ja
inc
fidivs
pushf
out
pop
cld
cmp
xchg
lret
out
iret
rcl
js
cmpsb
mov
popf
mov
shr
andl
insl
jge
gs
or
and
ss
sbb
test
or
adc
fcmovu
out
leave
int3
movsb
cli
sub
subb
and
jnp
and
xchg
ficoms
or
cli
xor
mov
inc
adc
push
into
scas
jp
jb
inc
xchg
dec
aas
sarb
push
and
fsubrs
jge
and
loop
aaa
inc
push
es
cs
and
pusha
push
cmp
in
popa
pusha
in
sarl
arpl
push
sbb
std
mov
mov
lcall
lock
jecxz
pop
sbb
cs
push
xor
xchg
and
mov
pop
ljmp
iret
lahf
xchg
adc
in
jle
mov
addb
xorl
xchg
sbb
cmpsl
cmp
pop
cltd
cmp
imul
add
mov
mov
mov
xchg
cmp
xchg
mov
ffree
mov
pop
push
popf
ljmp
cmp
add
lock
sbb
arpl
sbb
or
inc
cwtl
outsb
sbb
icebp
xor
sahf
jbe
lds
repz
aas
test
add
mov
jg
aad
jns
cmp
mov
in
push
outsl
add
loopne
imul
or
ljmp
sahf
imul
sbb
fwait
cmp
fmuls
xor
mov
fwait
jns
jbe
pop
and
pop
in
movsb
loop
mov
imul
mov
adc
xor
push
xchg
push
mov
pop
mov
inc
cmp
orl
shll
loopne
xlat
cltd
ss
dec
jb
test
jmp
mov
divb
jmp
sahf
jge
xchg
sub
sbb
sbb
mov
xchg
lret
cmc
xchg
pop
inc
cmp
popf
mov
and
sbb
add
gs
bound
inc
mov
pop
xor
mov
mov
sbb
repz
sub
test
loope
shr
xor
mov
mov
jge
mov
movsb
mov
test
mov
imul
js
iret
cmp
mov
dec
jl
or
test
sub
push
jle
pop
pop
fs
lea
mov
mov
add
iret
test
dec
cmpsb
lret
shl
ja
insb
lods
dec
enter
or
push
push
mov
fwait
int3
icebp
or
in
and
sbb
scas
fildll
xor
je
and
jnp
and
mov
xchg
test
mov
pop
xor
cmp
inc
aad
test
les
es
ds
xor
rcr
mov
lea
movsl
jne
and
cwtl
cmp
sub
mov
addb
repnz
cmp
or
xlat
insl
movsl
call
sub
fstpt
jb
movsl
or
mov
push
cs
mov
pop
mov
fisttpl
cmpsb
cmp
fistpl
loop
lock
icebp
shlb
xor
das
sahf
push
shlb
mov
fcmovnbe
push
xchg
xlat
cmp
popa
movsl
pop
js
xchg
movsl
sbb
rcl
movsb
ret
xor
sub
popf
sbb
imul
dec
jb
inc
push
xchg
dec
mov
mov
loop
mov
data16
mov
sarb
cmp
dec
jmp
int
xor
test
lock
ret
push
jecxz
pop
cmpsb
pop
ret
mov
dec
jge
imul
out
adc
cld
add
push
insl
fwait
sahf
cmp
aad
cmp
mov
inc
lods
inc
ret
adc
lahf
push
adc
ror
mov
out
fwait
in
xor
in
clc
je
fdivl
stos
inc
adc
and
mov
pop
bndldx
or
in
xor
mov
js
jle
add
nop
sbb
fistps
xchg
adc
dec
dec
icebp
add
pop
xor
add
ss
dec
cld
push
inc
mov
xor
sub
push
xchg
sub
call
or
std
adc
test
test
gs
adc
ljmp
dec
das
jge
insb
jae
mov
leave
jbe
or
subb
daa
shl
mov
repnz
loope
xor
dec
and
negb
aam
fucomp
rorb
sbb
sbb
jno
or
mov
sarb
xchg
notb
stc
push
add
fwait
inc
imul
dec
dec
xchg
pop
ja,pn
add
mov
fmuls
in
out
sub
ja
or
and
sub
or
dec
cwtl
filds
out
pop
fcompl
xchg
push
ret
pop
out
pop
jae
popf
ja
adc
push
in
fistpll
mov
pop
aam
pop
scas
push
lods
pushf
test
and
cmp
nop
int3
mov
xlat
lea
sub
sti
sbbl
mov
pop
jle
fwait
mov
and
icebp
dec
or
insb
push
cltd
mov
mov
push
inc
jno
cs
bound
adc
lds
mov
mov
repnz
pushf
sbb
test
loop
test
push
push
lret
repnz
push
adc
mov
jge
sbb
mov
dec
jg
jno
sbb
mov
jne
inc
mov
into
inc
mov
sub
pop
sbb
orl
sub
pushf
sub
add
lock
mov
loopne
pop
pusha
pop
icebp
adc
lcall
ret
pop
xor
xchg
mulb
aas
adc
mov
cmc
movsb
out
sbb
inc
cli
mov
xor
and
cmp
mov
fiaddl
xchg
adc
cld
lods
and
mov
mov
inc
out
dec
adcl
mov
and
xchg
cmpsb
call
stc
push
fdivs
dec
aad
pop
jmp
repz
leave
cmp
sti
enter
xor
movsb
xchg
sub
push
or
in
lret
loope
out
es
iret
xchg
jo
xor
cmpsl
xor
scas
cmp
lea
ficomps
dec
mov
xchg
out
fwait
lock
and
mov
inc
scas
insl
xor
xchg
call
or
mov
or
xor
adc
daa
jnp
scas
mov
les
adc
cld
fcom
sub
shl
out
cmp
xchg
sub
pusha
xchg
jo
xchg
aam
aam
test
xor
mov
mov
pop
mov
push
jno
js
sbb
jg
cli
loope
test
push
lcall
inc
xor
xor
sti
test
adc
push
loopne
movsl
stc
mov
into
mov
cmc
test
adc
sbb
insl
jg
clc
loopne
jnp
sub
pushf
and
lea
test
lcallw
cs
stos
mov
xlat
cmp
fidivl
push
xor
inc
dec
xchg
repz
dec
jge
popf
and
notl
mov
mov
clc
gs
decb
push
xchg
inc
repz
mov
popa
dec
xchg
jecxz
dec
bswap
vpsubq
addr16
clc
xor
pop
into
loopne
sbb
mov
shlb
sahf
es
cmpsb
sbb
mov
test
inc
shrl
sbb
lods
lods
sbb
scas
and
fwait
push
popf
xchg
lret
insl
std
push
daa
jmp
lods
and
and
mov
cmp
ljmp
jecxz
cmp
mov
push
lret
sub
arpl
testl
ljmp
sbb
mov
xchg
push
or
fs
mov
mov
add
fwait
mov
int3
push
fstpt
mov
xchg
movl
lea
loopne
fs
pop
stos
lods
lds
popa
mov
or
sbb
adc
inc
jns
sub
adc
shll
int3
fsubrs
add
movsb
pushf
icebp
mov
jle
rorl
push
mov
cmp
mov
test
lods
adc
mov
data16
sub
xor
jne
mov
pop
je
and
pushf
xchg
popl
ljmp
lahf
jg
sbbl
sub
jmp
xchg
fs
mov
fidivrl
aas
es
pop
xchg
outsl
jnp
psrlq
jnp
add
dec
fisubl
lods
pop
mov
inc
and
jb
dec
push
jns
jo
cmp
jmp
loopne
orb
rcll
or
test
xchg
lods
push
out
jg
mov
dec
xchg
mov
mov
adc
mov
pushf
aas
lds
jg
dec
inc
aad
cmp
clc
aad
fistps
or
repz
sti
push
or
jmp
pop
rclb
and
add
sub
das
cmp
xor
jp
in
lea
sbb
jb
fs
ja
sbbb
hlt
insl
cwtl
dec
xchg
cmpb
sub
cltd
add
jge
or
or
aad
inc
jnp
cmp
xchg
sub
cmc
roll
and
jl
test
mov
adc
xchg
sbb
xchg
cmp
mov
jns
xchg
stos
xchg
jb
cmc
insb
aaa
xchg
jno
les
xor
pusha
data16
ss
repnz
cmp
and
sub
and
fcomps
cmp
lret
jns
imul
add
fstpl
mov
and
movsl
idivb
das
into
test
xor
xchg
mov
mov
shll
out
popa
xor
jge
inc
mov
stc
aad
pushf
dec
iret
push
xchg
push
lcall
push
mov
mov
sub
cmp
xor
bound
data16
jb
mov
pusha
test
test
cwtl
push
mull
xor
in
cmp
mov
pusha
addr16
mov
dec
ficomps
pop
je
inc
outsb
and
sub
subl
insl
push
cld
jmp
lea
lock
and
lret
arpl
mov
xchg
push
adc
push
mov
repnz
lcall
loop
lret
fsubrs
adc
cmp
rcr
sbb
out
or
dec
test
scas
call
cmp
adc
repnz
inc
sbbl
std
cmp
aas
jns
fwait
mov
insl
pop
or
hlt
dec
mov
int
ljmp
sarl
lods
add
into
and
movsl
mov
std
aas
inc
jge
xchg
iret
imul
xor
fstpl
dec
dec
sbb
sbbl
jnp
pushf
rolb
inc
stos
mov
jp
xor
dec
stc
cmp
push
xor
scas
jb
jg
cltd
movsb
hlt
popa
outsl
inc
pop
xchg
push
mov
jmp
mov
jge
mov
mov
xchg
push
jl
out
loope
or
mov
add
inc
cmc
shll
cmp
insb
push
xor
out
lea
jp
fimuls
dec
inc
add
jbe
cmpsl
mov
push
fimuls
pop
lds
add
sub
push
jb
fldl
push
xlat
xchg
xlat
mov
out
repz
fsts
sub
jg
push
mov
or
popa
mov
or
popa
xor
mov
ret
aaa
dec
lds
mov
xlat
lods
sub
aam
mov
dec
jmp
sub
js
pop
sub
data16
je
scas
inc
add
into
ja
rclb
sbb
into
dec
dec
pop
dec
mov
or
push
in
out
mov
out
ror
xchg
mov
daa
sbb
mov
mov
xchg
les
sub
xchg
in
jb
dec
push
fmull
adcl
cmp
and
inc
lds
pop
rcrb
sub
loopne
dec
and
fwait
fisubrs
popa
mov
mov
jg
in
daa
sbb
data16
xchg
push
jp
xchg
and
and
dec
das
jne
in
lods
mov
clc
mov
and
xchg
sub
js
jl
mov
repz
out
out
inc
sub
jns
cmp
sbb
sbb
pop
cwtl
jp
int
stos
xor
icebp
mov
jb
inc
jbe
js
jp
popf
cmpsb
push
stos
in
lret
js
mov
pop
mov
aam
pusha
stos
rcrb
sub
insl
mov
xor
or
adc
scas
xor
aaa
sub
pop
add
pop
or
push
ret
inc
pop
jmp
add
sub
add
cmp
jecxz
add
jg
stc
add
fwait
add
dec
test
push
mov
add
push
mov
add
decl
neg
nop
adc
inc
test
shl
ljmp
std
sub
jl
dec
inc
pop
pop
sbbb
fwait
mov
cmp
in
lods
fcoms
push
rcrl
add
sbb
loopne
xchg
ljmp
int3
cmp
and
pop
mov
cltd
add
mov
addl
les
jle
xchg
sub
sub
xchg
lds
sahf
cmp
sub
js
xchg
shl
lahf
cmp
mov
les
or
push
leave
add
roll
xor
loope
loopne
lods
pushf
mov
ficoms
icebp
rclb
sub
imul
jmp
inc
mov
mov
jno
lds
ljmp
shrl
cwtl
es
pop
xor
jecxz
inc
cmpb
mov
enter
pop
das
xchg
xor
outsb
test
or
sub
fldl
push
das
and
inc
pop
xchg
test
cld
mov
push
ljmp
adc
or
sub
in
inc
dec
mov
mov
and
adc
xchg
mov
or
add
addr16
xchg
mov
fwait
lret
add
xchg
cmp
push
iret
icebp
xor
daa
lock
push
out
push
aaa
js
nop
dec
mov
add
out
jecxz
js
sub
xchg
aad
int3
ljmp
mov
sti
pusha
lods
push
fs
jmp
imul
or
scas
mov
sub
inc
xchg
sti
out
sti
push
push
lret
xchg
sbb
inc
jecxz
add
in
popf
stos
test
lahf
cmp
xor
repz
loope
loope
mov
dec
xor
idivl
cmp
ret
insl
loop
in
mov
test
call
push
ljmp
inc
inc
add
mov
ret
sub
sub
inc
cld
repz
repnz
out
add
mov
fsubrs
movsb
in
mov
das
fistps
and
mov
icebp
and
push
jae
ljmp
in
in
ficoms
pop
in
sbb
shl
aad
pushf
dec
inc
xchg
mov
cmp
stc
cmpsb
aam
sbb
loopne
sbb
dec
enter
loopne
inc
pushl
testl
xchg
jnp
jnp
lods
or
dec
das
cmp
dec
mov
sub
sub
pop
mul
jg
push
jb
subb
cmp
dec
cmp
jecxz
fs
mov
xchg
repz
ficompl
and
gs
in
repz
pop
shlb
mov
push
int
in
into
dec
and
cmp
cmp
and
jge
imul
inc
jmp
pop
xor
cwtl
dec
cmp
mov
pushf
push
repnz
xchg
fstpt
dec
ror
test
ret
in
int
cmpsb
movsb
xchg
fisubrs
pop
mov
les
stc
and
inc
cli
sbb
mov
jmp
gs
stos
loopne
pop
cmc
imul
lcall
push
shlb
xchg
das
cltd
pop
xor
pop
movsb
and
or
icebp
ljmp
std
hlt
adc
pop
mov
repz
dec
jno
pop
or
cmpsb
mov
sub
adc
jne
pushl
mov
fldt
scas
icebp
mov
sbb
std
out
jmp
pop
imul
inc
mov
sub
out
add
mov
or
sub
inc
fiaddl
int
into
lcall
xchg
rorl
mov
in
mov
gs
dec
jge
cltd
jb
xchg
leave
sbb
jle
mov
pop
je
out
lcall
and
or
dec
xchg
das
mov
fcoml
les
ss
fsubs
mov
lcall
arpl
outsb
mov
mov
xor
or
ljmp
scas
jae
adc
sbb
mov
jmp
sbb
mov
adc
cld
outsl
push
xor
jnp
sub
jl
les
push
add
or
clc
add
sbb
sub
mov
push
cmp
push
pop
out
mov
push
mov
data16
js
xor
lods
cmp
xor
movsl
pop
in
sub
cmp
ss
dec
ret
mov
sbb
jno
cld
test
xlat
orb
cmp
jg
lods
int3
adc
sbb
mov
push
ljmp
mov
imul
outsb
xchg
mov
std
test
movsb
lret
xorw
sub
in
jp
pshufw
cmp
xor
rcrb
jmp
mov
push
cli
add
push
xchg
cmpsl
into
fwait
pop
or
add
and
sti
into
xor
test
popf
lahf
leave
int3
stos
and
xchg
mov
pop
push
hlt
xor
mov
scas
iret
imul
ja
ficoms
cmp
test
xchg
dec
repnz
push
dec
ret
aas
nop
cmp
adc
mov
daa
cmpsl
test
push
push
and
mov
test
push
xor
stc
mov
xchg
add
dec
inc
and
insb
sub
push
pop
cmp
negb
insl
je
mov
test
popf
jmp
mov
pop
cmp
xor
dec
mov
jg
imulb
jecxz
cmp
in
mov
cli
insb
scas
cs
pop
jmp
and
into
push
test
out
mov
adc
aad
xchg
scas
xchg
arpl
adc
cld
dec
push
jae
jle
push
addr16
std
or
xlat
fstps
jnp
mov
mov
movsl
jb
outsl
add
aas
or
xor
pop
in
jle
and
xor
cmp
sub
das
je
movsb
xchg
adc
lods
sbb
cwtl
int
jo
addr16
mull
add
frstor
sarb
push
mov
aad
sbb
or
shll
addr16
lret
sub
dec
pop
and
dec
bound
mov
fnstsw
and
ret
pop
or
jo
mov
push
jns
cld
mov
ss
fidivrl
push
sub
mov
push
fwait
ss
out
push
data16
outsl
repz
lods
push
cmp
dec
pop
shll
cmp
pop
mov
fwait
loope
mov
movsl
enter
fsts
jmp
int3
sarl
push
adc
xlat
mov
mov
lret
in
adc
dec
push
xchg
adc
stos
push
jno
sbb
push
adcb
daa
aaa
test
mov
loope
gs
xchg
loope
pop
pusha
push
cs
addr16
js
pop
push
pop
popf
mov
adc
mov
or
cld
push
leave
push
jb
outsb
pop
loopne
arpl
neg
inc
xchg
bound
sub
mov
repz
jl
shlb
loop
aas
scas
sub
ja
sub
pusha
dec
adcb
imul
mov
cltd
cld
jae
xlat
jo,pn
xchg
imul
fwait
jle
cmp
xor
sub
jb
iret
add
mov
in
inc
mov
mov
sbb
ret
add
rorb
pop
dec
loopne
aad
add
lahf
xor
jle
addr16
and
fists
stos
cwtl
dec
add
aad
push
adc
mov
mov
hlt
subb
icebp
lret
pushf
lret
push
cmp
mov
scas
arpl
sbb
mov
mov
cmp
pop
xchg
pop
and
xor
push
ret
testl
fcmovnbe
aas
jl
jge
or
sti
clc
sahf
movsb
addr16
cs
es
ja
cmc
adc
hlt
jp
pop
jno
loope
and
mov
mov
int3
dec
sub
out
pusha
loop
test
mov
mov
scas
add
and
push
xchg
push
cmpsb
add
orps
add
jbe
dec
pop
jmp
mov
xorb
icebp
in
out
lock
aam
cmp
adc
cld
mov
add
lea
in
sbb
xor
ja
jmp
pop
repz
inc
xchg
push
xchg
inc
aas
mov
mov
jg
ds
pop
mov
or
xor
lods
xor
scas
pop
out
push
leave
mov
fnsave
xchg
cmp
xchg
sbb
adc
pop
nop
sub
loope
xor
fs
mov
imul
out
out
cmp
movsb
lods
scas
push
pushf
ds
sub
xchg
in
mov
lahf
and
xchg
add
add
imul
mov
adc
dec
cmp
sti
and
mov
frstor
sub
add
icebp
pop
mov
cwtl
jbe
rol
adc
flds
movb
scas
inc
hlt
mov
cld
in
jle
push
js
inc
adc
faddl
loope
mov
and
xchg
jmp
roll
inc
daa
in
mov
fstpl
in
and
scas
cs
cmp
test
in
push
xchg
dec
cwtl
push
std
imul
xchg
jp
add
dec
cmpsb
mov
and
pop
inc
out
cwtl
mov
mov
dec
hlt
jns
cltd
dec
nop
fs
idivb
iret
in
and
and
sahf
sub
mov
add
adc
adc
adc
pop
jb
xchg
inc
aad
loop
out
add
in
mov
out
xor
jmp
push
jbe
mov
test
xchg
dec
jnp
sbb
ret
sti
popf
jge
mov
add
dec
std
arpl
pop
jp
out
fsub
cli
sub
mov
es
mov
xchg
mov
les
arpl
jge
fcomps
push
shrb
push
outsb
sbb
and
inc
ss
cmp
aas
mov
mov
les
mov
cmp
jle
movsb
outsb
sub
icebp
fdivs
hlt
in
pushf
shll
fcoms
scas
fidivrl
jae
sbb
jp
xor
and
sub
scas
icebp
loopne
sub
or
stos
jns
mov
and
mov
dec
push
lods
pop
mov
cmc
jnp
aaa
xlat
push
jg
dec
lahf
mov
xchg
into
mov
inc
adc
or
std
popf
jmp
jnp
mov
out
jb
mov
jo
addl
sub
mov
imul
jp
inc
cwtl
xor
xchg
dec
cmp
and
into
dec
mov
xor
mov
jo
inc
or
lods
mov
mov
into
mov
outsl
push
or
sub
mov
aad
loop
pop
jnp
ret
fstpl
mov
xorb
dec
lcall
dec
leave
ds
cli
fwait
std
dec
fldenv
popf
cmp
testl
jbe
and
fists
xchg
jbe
mov
adc
mov
leave
movsb
inc
push
je
inc
or
stos
cld
push
mov
xchg
add
jmp
mov
hlt
mov
push
push
movsl
adc
adc
outsl
ds
dec
pushw
mov
inc
inc
add
je
xor
fsts
jae
rcll
enter
je
cli
push
bound
cmp
repnz
arpl
sbb
les
jp
insb
pusha
sbb
add
fwait
cmp
loop
das
inc
xchg
fisttps
aaa
jb
xchg
adc
add
dec
cmpsl
sbb
mov
mov
ret
mov
pop
xchg
or
xchg
cmp
cmp
adc
add
mov
inc
mov
aas
jae
sub
cmpsl
imul
or
jnp
mov
push
mov
ss
mov
ret
jo
xor
lcall
jbe
xor
adc
icebp
xchg
adc
push
and
add
xchg
inc
cmpsl
movb
dec
jle
andb
mov
hlt
cmp
clc
push
xchg
repnz
pop
ret
cld
andl
inc
dec
imul
and
mov
negl
jmp
fadd
lret
std
cmp
aas
add
lods
jo
fldenv
cmpsl
out
xor
cmc
std
sbb
imul
fcmovne
lcall
xor
andb
or
popf
cmpsb
std
or
mov
jecxz
inc
mul
orl
lods
pop
std
icebp
adcl
fidivrl
push
sbbb
jns
stos
mov
loopne
scas
push
cmpsl
icebp
jg
lods
mov
mov
or
out
cmp
movsl
xor
inc
dec
and
push
repnz
pop
das
cltd
inc
ret
mov
jmp
xchg
in
adc
mov
xchg
shl
insb
ret
cmp
push
jge
ror
jg
inc
addr16
getsec
mov
outsb
jb
inc
lock
js
xor
push
rorl
jbe
xchg
adc
jb
ret
hlt
cltd
movl
ret
ret
push
out
lcall
outsb
cmp
rclb
add
push
mov
sub
and
lods
dec
mov
sbb
rorl
xor
mov
rcrl
rolb
aad
xchg
mov
mov
xor
mov
rol
in
stos
aad
cmpsl
dec
jge
mov
and
sub
imul
not
push
les
popf
mov
jmp
sbb
adc
inc
adc
rcl
mov
scas
aas
inc
cmp
pop
xchg
fstpl
or
out
fsubrl
call
xchg
call
lcall
and
adc
movsl
fldl
pop
lret
dec
arpl
in
sahf
mov
push
lock
or
push
insb
cli
inc
mov
out
mov
jo
cmp
movsb
enter
sbb
ss
aaa
inc
push
xchg
dec
icebp
mov
ret
mov
aaa
pop
inc
or
lahf
dec
mov
push
in
ja
les
and
xchg
fs
enter
cmp
jnp
cmp
ficomps
arpl
test
xor
sbb
xor
addr16
sahf
push
sbb
mov
imul
mov
pop
out
pusha
lods
inc
jo
aaa
les
sub
leave
mov
and
pop
out
loop
mov
out
jge
xchg
outsl
push
mov
test
call
pop
inc
outsl
insb
pop
stc
repz
jbe
jmp
inc
add
mov
mov
pushl
testb
inc
outsl
sub
xlat
sub
jae
gs
das
dec
mov
inc
push
popa
jge
pop
icebp
mov
mov
cltd
mov
lret
nop
inc
std
mov
lods
adc
das
lods
icebp
arpl
mov
clc
push
popa
cmp
shr
inc
mov
pop
xchg
mov
mov
push
andl
adc
adc
jp
pop
pop
ljmp
cmpsb
mov
mov
pmuludq
xor
das
aas
xor
and
sub
or
popf
cmc
das
insb
mov
xchg
rcr
sbb
out
fs
cmp
add
cmp
sbb
into
mov
ret
push
in
push
cmp
cmp
icebp
pop
rcr
out
lods
cs
xor
outsl
jmp
push
pop
xor
ret
lahf
scas
out
cmp
shrb
lcall
aad
jae
out
data16
movsl
roll
lcall
cmp
testl
xor
lcall
mov
daa
ret
outsl
pop
aad
ja
in
int3
fsubrs
pop
flds
mov
xchg
cmp
mov
mov
push
stos
push
into
jae
xchg
hlt
push
cmp
pop
inc
lods
cmp
pop
and
adc
push
pop
lds
push
and
adc
aad
xor
adc
pop
mov
lds
push
ljmp
mov
fildll
mov
xor
cmp
push
in
test
push
add
sub
mov
fistl
fwait
cmpb
inc
dec
jno
pop
fistl
push
and
inc
lods
xor
andb
pop
or
jo
movsl
insb
icebp
jecxz
xchg
test
rolb
bound
push
mov
mov
dec
inc
xlat
dec
adc
push
sbb
mov
mov
mov
and
aad
aad
lods
push
fstl
cmp
push
out
fstps
iret
mov
aaa
int3
mov
xorl
adc
out
mov
out
data16
mov
fistps
sbbb
sti
test
adcb
mov
and
mov
test
xchg
xor
shrb
sbb
jle
mov
jle
xchg
std
rcll
insl
andl
add
call
pop
sti
sbb
cmp
lret
or
mov
insl
mov
enter
lock
scas
xlat
jp
fisttpl
sbb
jl
xchg
and
hlt
and
fwait
repz
aaa
push
dec
xchg
and
mov
addr16
sti
adc
outsb
ljmp
cmpsl
in
xchg
mov
icebp
inc
enter
jmp
add
rorl
pushf
lahf
and
shl
mov
push
sbb
mov
sub
inc
aas
ja
cmp
mov
pop
ljmp
aaa
push
push
xor
lock
or
sbb
out
outsl
imul
and
mov
mov
ss
jg
sub
aas
xchg
out
push
dec
ficoml
dec
sbb
and
and
sbb
test
imul
les
jl
push
sti
pop
roll
std
mov
je
sbbl
pop
and
enter
lods
cld
dec
sahf
les
add
mov
repz
cmp
lahf
int3
jbe
and
push
jg
dec
test
daa
das
lock
cmp
sbb
subb
mov
add
dec
mov
push
inc
push
inc
jmp
xchg
or
gs
clc
cmp
pushf
repz
fisubs
test
pop
fmull
ljmp
out
mov
pop
add
ja
and
add
aam
mov
mov
or
test
ds
push
mov
dec
jno
daa
subb
test
mov
jns
fiadds
pop
jbe
movsb
jg
negl
xchg
or
out
pop
movsl
out
inc
lock
pop
dec
stc
add
cli
xchg
test
xchg
adc
mov
sbb
clc
cs
mov
xor
hlt
stos
fbld
imul
sbb
pop
jb,pt
push
jmp
fildll
jae
daa
cmpsb
pop
xor
dec
jp
out
mov
push
arpl
test
in
mov
pop
inc
inc
leave
and
mov
dec
push
lods
loope
mov
pushf
jmp
or
pop
mov
sub
mov
out
imul
cmp
mov
neg
lock
fidivs
popa
mov
cs
jo
lret
daa
andb
jg
jae
xchg
mov
pop
loop
sbb
add
add
push
enter
xchg
push
xor
dec
xchg
jno
rcr
arpl
aaa
jle
dec
xchg
and
mov
sbb
lock
adc
scas
jne
leave
adc
add
and
push
and
jbe
sub
aaa
lds
dec
adc
or
pop
xchg
pushf
add
mov
test
mov
or
mov
inc
jge
addr16
pop
scas
pusha
adc
insb
into
push
add
pop
cmc
mov
movsl
mov
pop
mov
mov
dec
cmp
in
sbb
out
and
and
int3
decl
test
push
sbb
sub
cmp
daa
dec
sbb
lahf
ss
sub
ret
cmpsl
in
mov
push
hlt
or
cmpsb
sbb
sahf
testl
and
push
inc
adc
popa
shll
xor
pop
cmp
cmp
imulb
sub
dec
jae
ret
rorl
clc
sarb
std
sub
into
movsb
repz
scas
sub
push
or
add
jo
ret
inc
or
jbe
test
mov
mov
push
iret
jle
mov
cmp
xchg
fiaddl
and
push
push
loope
je
pop
decl
cmp
and
les
mov
mov
rclb
or
or
push
out
sbb
es
inc
sub
jge
bound
icebp
inc
jbe
mov
mov
dec
aam
inc
popa
adc
sub
loopne,pt
leave
adc
fisubs
fnstsw
mov
jmp
test
and
fdivrs
add
fdivl
es
mov
add
jge
sarb
lods
cmp
xor
inc
call
aaa
repz
and
fidivs
mov
bound
fs
cmp
mov
lret
cmp
and
mov
sbb
pop
enter
jp
ds
xchg
test
test
insl
scas
xor
xchg
xor
mov
daa
and
inc
shll
pop
in
inc
inc
jbe
mov
addr16
pusha
mov
into
sbb
sbb
dec
call
xchg
xor
inc
ret
popl
les
popa
mov
push
pop
adc
in
stc
xor
hlt
mov
pop
xorb
mov
push
jne
mov
cmp
inc
in
mov
push
push
mov
push
imul
push
leave
push
stc
insl
jl
inc
inc
inc
aas
lock
icebp
jb
adc
ds
fs
sbb
inc
push
push
out
push
bound
in
jg
verw
sub
loopne
outsb
inc
xor
ja
add
lret
bound
jo
push
movsb
icebp
and
bound
fcoms
dec
mov
pop
loop
flds
leave
or
pop
aad
or
cmp
icebp
ja
xchg
ficomps
xor
pop
call
andb
cmp
insb
dec
out
cmp
lret
popa
pop
jp
cld
iret
enter
les
or
rcll
xchg
xchg
inc
jmp
pop
in
and
enter
call
les
lret
push
dec
lcall
add
stos
mov
outsb
mov
mov
subl
daa
int3
dec
xor
or
dec
mov
xchg
pop
jb
push
out
fnstsw
fcompl
repz
jns
dec
xchg
jne
xor
bound
daa
lds
mov
shlb
sub
or
inc
push
adc
mov
push
int3
add
jle
dec
mov
add
mov
cs
cmpsb
adc
push
mov
inc
fs
icebp
negl
mov
cvtpi2ps
push
fsts
lods
xor
cmp
scas
jmp
popf
aad
xor
fdivp
or
mov
sub
leave
mov
pop
ja
pop
icebp
jbe
imul
fbstp
add
mov
cs
int
push
inc
aas
add
cs
in
jmp
sub
loop
test
fiadds
stc
insl
inc
sbb
cmpsl
in
pop
scas
push
cmp
sbb
pop
cwtl
pushf
subl
aaa
and
mov
or
pop
inc
cmc
lods
fnstsw
mov
push
stos
inc
daa
test
in
mov
dec
cltd
mov
sti
push
dec
dec
add
movsb
ret
in
mov
sbb
dec
pop
sub
icebp
xor
pop
push
sbb
dec
push
lock
mov
leave
dec
pop
pop
dec
add
cmp
mov
xchg
ficoms
push
dec
fwait
and
push
testb
and
xchg
fdivrp
jg
fsqrt
into
xor
xor
lods
and
popa
lods
mov
sbb
imul
scas
pop
jg
shll
nop
popa
cmp
sub
lds
cmc
call
loope
dec
cmp
repz
inc
rol
mov
jno
pop
add
gs
mov
nop
pop
xor
ja
xchg
pusha
mov
int
xchg
sub
sti
addr16
addr16
cmpb
ret
mov
ss
cmpsb
push
add
mov
es
stos
pcmpeqb
mov
add
in
inc
out
loope
push
fstpl
shll
movsl
jns
mov
pop
sbb
sbb
xchg
mov
cmpsl
orl
mov
test
adcb
push
sub
add
inc
imul
stos
loope
cmpsb
dec
xchg
mov
idiv
or
cmc
aas
mov
cmp
and
push
dec
push
and
cwtl
mov
xor
aad
sbb
fadd
gs
ljmp
out
decl
cmp
add
icebp
clc
jo
push
imul
mov
jmp
mov
mov
dec
fs
jle
push
sti
xchg
addr16
into
aaa
xor
xchg
push
fstps
jle
mov
pop
arpl
mov
mov
rcll
mov
sbb
outsb
loop
and
in
loopne
sbb
mov
popf
out
xor
leave
mov
arpl
jne
and
cltd
cmp
inc
jecxz
inc
movsl
sbb
cmp
add
adc
into
leave
verw
jmp
cmp
jnp
rorl
jle
and
daa
inc
in
loop
lea
jge
pushf
mov
jmp
inc
pusha
mov
push
outsl
fisttpl
lret
addr16
hlt
add
add
negl
pop
inc
cmp
lods
xor
ds
dec
xor
mov
xchg
mov
or
push
dec
jns
je
sub
das
movsb
pop
shlb
mov
outsb
and
in
mov
dec
ljmp
lea
addr16
loopne
dec
sti
jae
jge
xor
in
sti
push
dec
jo
popa
lods
jo
aad
lods
outsl
ljmp
loop
xor
aaa
ret
push
outsl
inc
xor
cwtl
fildl
cmp
mov
mov
test
in
repnz
ljmp
pop
jp
cmpl
inc
pop
fistps
hlt
sahf
hlt
in
lods
mov
mov
xchg
sahf
stos
dec
loopne
out
loop
push
test
or
enter
cwtl
mov
inc
mov
orb
dec
in
and
mov
cmp
movsl
adc
in
stc
sbbl
push
repnz
in
jecxz
jl
xchg
dec
xchg
fcompl
jge
adc
popf
adc
mov
ds
les
testb
pop
push
xchg
daa
add
and
idivl
rorb
fwait
aas
jo
pop
push
sbb
sbb
or
mov
jle
loope
dec
push
jo
xchg
dec
jp
sbb
push
lea
mov
adcl
xchg
inc
push
loopne
lock
scas
and
and
jmp
insl
push
push
addl
aaa
loop
mov
xor
or
bound
pop
and
clc
cmp
cmp
adc
cmp
lcall
sbb
test
dec
stos
pavgb
test
xchg
cmp
movsl
mov
insl
xchg
fidivrl
cmp
aad
iret
xlat
sub
push
adc
xchg
imul
push
fisubs
pop
sbb
sti
sarl
push
sbb
movsb
insb
stos
mov
sbb
pop
xor
cli
cmp
pop
dec
cmpsl
imul
out
add
clc
dec
pop
dec
push
sub
fcmove
add
push
enter
mov
rclb
jl
stc
test
dec
mov
addr16
push
xorb
cmc
incl
push
scas
jecxz
jno
fcmovbe
mov
push
mov
loope
cmp
sbbb
pmuludq
movsl
xlat
aad
push
adc
lea
sbb
imul
and
sbb
lret
out
jmp
pop
mov
loopne
sub
sbb
and
rorl
sbb
popf
cmp
data16
loopne
mov
imulb
test
fs
and
es
mov
ror
and
xor
sbb
hlt
cmpsl
fidivrs
mov
push
xchg
stc
rcrb
fwait
aaa
fwait
xor
int3
pop
xor
sbb
jne,pn
jmp
movsb
je
mov
outsb
lods
mov
and
and
iret
fmulp
fcmove
jb
dec
inc
mov
pop
mov
pop
dec
lahf
jns
aas
outsb
subl
ds
test
dec
sbb
mov
loop
rcll
and
pushl
daa
and
addr16
mov
imull
jecxz
xor
js
inc
aad
jmp
sub
pop
xlat
mov
in
mov
push
pop
dec
mov
sarb
sbb
jae
popf
add
mov
adcl
lea
mov
imul
fnstsw
add
pop
iret
push
sarb
dec
push
xchg
push
mov
sub
inc
idivl
ds
cmp
jl
cmp
xchg
fldt
inc
inc
jae
lret
sbb
rcrl
sbb
into
xlat
jb
and
jo
aam
fadds
fdivrl
ret
cmp
stos
xchg
daa
pop
xchg
jno
les
jmp
or
lea
mov
mov
inc
jnp
fs
jl
xor
test
sbb
mov
adc
xlat
pop
sbbb
push
and
push
push
divb
ljmp
xor
xchg
jno
insl
add
push
push
jb
out
and
pushf
cmp
pusha
movsb
aad
xchg
xchg
hlt
into
int
jmp
mov
not
mov
add
dec
xor
fisttps
leave
xchg
orb
lods
dec
sub
pop
dec
mov
dec
pop
xor
out
test
and
jo
int3
movsl
jne
inc
lock
enter
orb
add
mov
scas
fildll
imul
adc
in
xchg
jge
add
pop
jno
sbb
fidivrs
fistpll
lcall
push
sub
lcall
xchg
cmp
xchg
in
mov
pop
push
xchg
jp
pop
xchg
rolb
pop
cmpsb
adc
jnp
icebp
scas
clc
movsl
xchg
int
sub
mov
mov
dec
dec
xorl
jns
cmp
xchg
or
and
ror
dec
mov
popf
xchg
fwait
push
test
or
add
cmpl
dec
pop
pop
pop
sbb
repnz
mov
and
daa
lcall
sbb
lea
lods
add
orb
imul
and
repz
popa
out
cwtl
stc
ljmp
out
mov
aas
out
es
add
adc
xchg
jle
divl
es
in
mov
jg
adc
xor
xor
xchg
xchg
sbb
mov
dec
mov
pop
popf
cs
rorl
adc
test
rclb
add
insl
xchg
cmp
lret
xchg
imul
lahf
mov
xlat
imul
das
dec
cs
test
and
gs
iret
xchg
xor
popa
ror
imul
enter
data16
adc
cmpsl
mov
lods
or
jp
pop
es
cmp
jg
sti
loop
loopne
js
in
lret
mov
or
inc
dec
xchg
mov
pop
inc
cmp
ja
jb
cld
enter
aas
or
mov
lahf
pop
cmp
repz
inc
mov
adc
jl
mov
jp
inc
mov
cmp
scas
dec
push
mov
into
mov
and
aad
es
pop
cmp
test
cmpsl
xor
mov
leave
fidivl
inc
push
mov
orl
outsl
jae
in
jne
inc
out
imul
xchg
mov
in
mov
push
dec
push
lods
push
cmc
fmull
repz
mov
sbb
mov
lahf
mov
jge
es
lahf
mov
test
dec
insl
jne
dec
jb
cli
out
lahf
sub
xchg
xchg
or
or
cld
lods
lret
push
ret
push
or
ds
add
push
jae
int
xor
and
notl
and
mov
movsb
sahf
sub
addr16
jmp
dec
cwtl
repz
insb
add
mov
movaps
lret
push
mov
cli
adc
rcrl
xor
pushf
push
lock
out
aas
or
pop
cwtl
mov
xor
rcrb
lock
cld
mov
or
cmc
in
adc
popa
ja
push
cwtl
or
fbld
jb
pop
sbb
pusha
cmp
fstpl
cmp
ffree
or
mov
dec
mov
mov
icebp
dec
int
fcomip
jecxz
push
push
sbb
inc
push
lahf
gs
cmp
cld
or
in
push
sbb
or
iret
xor
and
mov
setp
sub
shrl
imul
cmpsl
push
lahf
mov
test
push
jl
leave
fldenv
pop
inc
pop
push
fcomi
test
fstpl
cmpsb
rorb
hlt
inc
in
push
mov
sub
leave
add
and
push
into
or
aam
sbb
test
push
or
add
ret
shrl
mov
movsl
bound
jbe
add
xchg
add
xchg
mov
cmp
mov
shr
or
repz
xor
jae
mov
ficompl
cmpsl
cwtl
cmp
pop
ret
das
push
imul
fcmovb
das
xchg
les
mov
xchg
mov
xchg
mov
fisubs
sbb
shlb
jle
addr16
xchg
fbstp
sbb
aaa
sub
or
cld
sub
push
test
mov
pushf
pop
mov
pusha
fsubs
test
push
mov
xchg
pusha
xor
push
dec
les
and
loop
fwait
insl
lret
push
popf
pop
inc
ret
push
sub
rcrl
andl
fidivrl
pop
add
cltd
cltd
inc
scas
stos
sbb
or
xchg
cmpsb
shlb
mov
adc
scas
push
jno
stc
mov
icebp
test
xchg
cli
test
add
je
or
adc
jl
aad
loope
inc
dec
rcrl
sbb
add
sbb
or
push
pop
push
cmp
pushf
jp
mov
and
jmp
pop
inc
add
jp
lcall
shrl
adc
sbb
dec
mov
inc
jbe
push
popa
pop
push
test
jg
mov
pop
cmp
out
inc
mov
xchg
pop
pushl
popf
add
addr16
mov
imul
loop
sti
sub
testl
adc
int3
and
out
jne
insl
cmp
xchg
inc
inc
adc
cmpb
add
cwtl
sub
loop
call
aaa
inc
pop
and
xchg
mov
and
in
lret
outsl
mov
or
mov
loopne
cmp
mov
imul
out
jne
sbb
insb
cmpsb
inc
test
xchg
or
xor
insl
cmc
push
imul
ss
inc
dec
imul
jmp
mov
push
xchg
jno
push
in
xor
pop
sub
add
cmp
cmpsl
in
mov
cmp
xor
lods
dec
scas
or
jmp
xor
sub
cmpsb
and
ja
data16
iret
outsb
dec
mov
mov
and
inc
out
movsb
push
icebp
jl
xchg
test
or
xor
test
jl
add
imul
mov
mov
js
les
ljmp
inc
and
ljmp
enter
jl
xor
xor
into
ficoms
sahf
dec
or
call
fdivs
cmp
xchg
dec
icebp
lods
push
fwait
inc
neg
addr16
add
shrl
mov
divl
jno
jge
loop
jmp
sub
andb
inc
xchg
call
adc
add
mov
jecxz
mov
and
xchg
and
fwait
lods
nop
aaa
je
mov
sbb
leave
sub
pop
xchg
sbb
mov
imul
int
dec
lret
push
push
test
cs
push
cltd
jnp
nop
mov
je
sbb
ds
scas
jge
aaa
xchg
mov
pusha
popa
sarb
arpl
ljmp
inc
ss
add
sbb
mov
out
pop
mov
inc
dec
xchg
fdivrs
cmpsb
jns
and
sahf
lods
cmp
std
jbe
xor
or
dec
loopne
inc
imul
cld
rcl
jns
cmp
pop
sub
jnp
fisttpl
jg
mov
mov
xchg
inc
mov
and
popf
inc
sub
adc
insb
nop
es
out
loop
orb
mov
push
test
inc
js
adc
lea
dec
adc
fildl
faddl
fldt
mov
jp
sti
mov
jg
nop
sub
sbb
outsb
rcll
and
fimull
int3
jnp
fnsave
mov
lea
jnp
adc
faddl
or
fisttpll
xor
and
xor
pop
stos
mov
lret
pop
adcl
and
xchg
jge
lret
clc
add
xor
ret
lcall
lods
xchg
cmpsl
int3
mov
psraw
pop
sti
js
xchg
adc
daa
hlt
jg
mov
neg
aas
fiaddl
outsl
jb
in
mov
ljmp
movl
ja
mov
mov
imul
scas
xchg
out
push
sub
xlat
std
xor
sub
sub
mov
mov
sbb
xor
mov
outsb
mov
rorb
jg
mov
pop
in
fisttps
xchg
mov
stos
lds
loope
faddl
outsl
xchg
cs
dec
inc
lret
stos
rclb
fildll
sub
push
iret
testb
gs
jne
rcrb
andb
imull
outsb
test
lcall
clc
xlat
imul
xchg
mov
aas
lods
mov
movd
fistps
mov
sbb
aaa
clc
aas
clc
fs
insb
sub
dec
repz
push
jp
jge
loopne
or
shrl
push
or
adc
xor
push
roll
fldl
rcrl
not
mov
in
sub
dec
inc
mov
fsub
and
leave
pop
ljmp
movsb
push
lock
sub
fsub
mov
dec
xchg
mov
pop
hlt
push
cltd
push
call
call
aaa
cmp
inc
addr16
sbb
mov
sbb
mov
aaa
sbb
xor
cltd
jle
movsl
jo
mov
ljmp
rorb
test
rclb
leave
es
sbb
rcrb
movsl
push
cmp
rclb
jmp
pop
jo
loope
mov
cmpsb
bound
mov
or
sbb
repz
insb
lret
outsl
adc
pop
inc
bound
fdivrs
daa
shll
cmpl
pushf
call
sbb
sub
adc
adc
in
xor
xor
sub
fidivrl
insb
insb
mov
repnz
or
jge
mov
pushl
ljmp
das
jmp
stos
xchg
xchg
repz
aas
adc
pusha
jo
jl
adc
xor
iret
inc
mov
enter
sarb
add
xchg
in
pop
pcmpeqb
inc
xor
xor
cltd
into
test
sbb
call
nop
imul
jnp
cs
out
mov
and
xchg
mov
pop
pop
std
ret
or
imul
test
arpl
psadbw
test
ja
or
and
mov
fwait
bound
out
loope
jne
iret
aam
mov
adcl
push
adc
cmp
jae
out
scas
push
pavgb
mov
inc
shll
and
sbb
add
test
sbb
mov
hlt
arpl
rorb
aas
jno
mov
mov
mov
fmuls
pusha
push
mov
mov
repz
fisubs
inc
enter
adc
into
xor
into
scas
cwtl
in
aam
cmpsl
jbe
and
jb
data16
jmp
add
arpl
jecxz
nop
jecxz
mov
add
das
fdivs
dec
push
and
jecxz
das
ds
pushf
inc
cmpsb
xor
push
mov
lods
out
push
and
and
inc
jo
pop
ljmp
fsubs
lock
popf
mov
stos
push
fildl
xorps
ljmp
test
mov
adc
mov
pop
adc
xor
xchg
fstps
fldcw
pop
mov
add
sub
xchg
jge
test
fs
cli
idivl
cmp
cmp
ds
fstpt
stc
pop
push
add
outsb
inc
push
int3
outsb
mov
or
push
jl
repz
test
mov
shrl
outsl
pop
iret
fisttpll
jo
adc
inc
lods
mov
fcoml
xlat
push
fsubl
fsub
iret
xchg
xor
cmpsb
loop
iret
ret
push
and
and
imul
fbstp
sbb
test
adc
push
ficoml
mov
cmc
and
mov
push
mov
mov
lock
and
xchg
rclb
adc
fidivs
mov
pop
scas
shrb
fistpl
dec
cltd
cmpsl
jbe
xchg
stos
out
rol
dec
add
dec
outsl
mov
pop
aad
movsl
dec
bound
dec
and
or
push
out
lahf
cvtps2pi
push
adc
fldl
in
fldl
shlb
adc
cmc
and
insl
testb
out
add
xchg
lea
scas
cmp
push
insl
into
xor
mov
das
cmp
cmp
imul
sbb
pop
push
inc
jl
sub
or
mov
push
subl
clc
fstps
adc
inc
out
cmpsl
and
pop
pushf
movsb
xchg
aaa
loope
fisttpll
sub
sub
or
cmpsl
je
mov
fildll
and
xchg
in
fcmovbe
aam
mov
outsb
adcl
and
cmp
aas
jno
add
cmpl
jp
mov
add
repnz
inc
lcall
add
cmp
imul
sub
mov
mov
test
fwait
sub
jle
fs
dec
xchg
inc
adc
adc
scas
fdiv
imul
mov
adc
mov
test
arpl
push
fnsave
data16
xchg
jmp
outsb
push
dec
sbb
mov
shrb
push
xchg
je
push
es
cmpsb
push
ja
pop
and
sbb
or
rcr
pop
and
call
xchg
movsl
mov
dec
push
negl
push
adc
icebp
dec
pop
and
inc
outsb
xchg
cs
push
out
fmul
jo
xchg
add
stc
xchg
adcb
icebp
pop
rcll
add
fldenv
mov
mov
xor
mov
pop
xlat
loope
or
or
fwait
lods
loop
pop
sub
xchg
dec
inc
pop
or
pop
dec
sub
daa
push
cmpsl
jmp
mov
outsb
and
xor
int3
pop
fiaddl
push
xchg
in
and
arpl
or
outsl
mov
sub
cmpsb
and
pop
pop
loope
data16
rorb
int
ljmp
xchg
dec
fcompl
cltd
sbb
add
cli
arpl
loopne
jns
xor
mov
jg
dec
sub
imulb
xchg
push
int
lods
aam
and
inc
iret
add
jns
jno
xchg
fsubrl
jge
shrl
jo
push
sbb
cmp
in
push
in
in
cmc
in
sub
and
cmp
inc
movsl
sub
mov
js
mov
and
sbb
fsubrs
push
and
mov
imul
jle
xor
fwait
mov
mov
sub
lods
iret
xchg
lods
sarb
addb
push
mov
outsl
loope
clc
rcrl
ja
stos
loop
push
jne
testb
and
mov
setnp
or
xchg
pushf
test
jp
dec
cmp
ss
repz
into
aas
loopne
xchg
aaa
fbstp
xorl
ss
imul
mov
hlt
mov
push
sub
xor
xchg
add
dec
fstpt
mov
je
pop
mov
jmp
nop
shl
mov
jne
xchg
adc
dec
sbb
test
xor
je
dec
andl
mov
or
xchg
xor
lds
sbb
mov
pop
ds
dec
pop
cmp
pop
sbb
lahf
cmp
mov
inc
fmul
jno
push
lock
sahf
or
sbb
call
adc
rorl
inc
call
lcall
sbb
push
add
repz
mov
lcall
scas
loope
mov
mov
mov
es
scas
lds
jns
pop
ficoms
es
push
xor
lock
fs
fidivrl
mov
loop
sub
adc
sub
shrb
jg
out
mov
lds
adc
sarl
loope
pop
fldcw
loopne
inc
adc
movsb
jle
sbbb
pop
out
negb
loop
cmpsl
pop
pop
cli
int3
daa
adc
test
sub
pop
bound
mov
xor
cmp
xchg
out
sahf
stc
mov
stc
pop
lret
lock
addr16
stc
int3
lahf
insb
ficomps
push
xor
push
sbb
dec
shlb
ljmp
lea
stc
sbb
mov
jmp
insl
sti
mov
rcrl
daa
pop
out
ja
sahf
inc
in
xlat
fistpl
cmp
fstps
xchg
fcomps
mov
out
push
je
mov
dec
or
push
jns
pusha
xchg
mov
jge
add
mov
cmp
and
mov
sbb
xchg
push
in
sbb
les
mov
ret
popl
call
pop
adc
inc
aad
clc
rorl
ja
loope
andb
mov
movsb
sub
sbb
lahf
pop
xor
sbb
inc
js
call
testl
cmp
sbb
shl
fsub
decl
out
adc
sub
ja
addr16
jne
xchg
mov
push
jbe
xchg
insb
inc
arpl
cmp
ret
push
or
rcr
dec
pop
frstor
sub
out
pop
insb
movsb
inc
mov
push
orb
loop
out
adc
inc
xor
movsb
xchg
xchg
stos
push
dec
adc
arpl
push
inc
xor
mov
push
xlat
data16
sub
mov
jo
in
jno
mov
repz
mov
add
loopne
lahf
stos
shrl
sub
inc
sbb
psllw
rclb
jne
aad
insb
stc
dec
ret
mov
add
mov
pushf
push
inc
or
fidivrl
test
add
fs
or
sub
ffree
mov
mov
xor
fcoml
pop
jbe
and
mov
cmp
inc
jno
scas
int
sub
out
inc
push
arpl
and
ja
cmp
pushf
shll
and
fidivrs
es
aaa
sarl
mov
test
mov
lret
pop
adc
cmp
and
push
lods
xchg
jae
jnp
repnz
and
adc
ret
andl
ljmp
sbb
mov
sbb
xorl
mov
cmpsl
and
inc
adc
xchg
pop
cmp
dec
xor
sbb
outsb
mov
lods
lea
mov
mov
pop
std
pop
loop
scas
aas
test
push
fwait
push
arpl
or
insl
ret
cwtl
jp
out
mov
dec
lcall
xchg
push
mov
std
ja
out
cmp
jnp
jbe
andb
aad
aam
adc
cmp
pop
mov
dec
cmp
outsl
out
dec
fnstcw
test
popf
int3
je
repz
pop
mov
or
mov
shrl
ds
out
dec
out
divb
jnp
jle
dec
fisubrl
adc
mov
out
sbb
xor
pop
cwtl
clc
mov
ret
jno
shrb
xchg
mov
repz
xchg
jbe
adc
insb
je
pop
jmp
addl
roll
call
cmpsb
test
or
push
js
loopne
out
subl
or
xchg
xor
xor
andb
add
sbb
lea
mov
dec
pushf
jp
add
push
stos
jno
ds
scas
iret
js
push
repnz
jbe
roll
addr16
lock
sbb
loope
jbe
pop
cmp
pop
lcall
pusha
mov
imul
pop
subb
xchg
lret
out
aas
sbb
inc
mov
ljmp
lret
mov
inc
fs
xor
dec
aam
out
outsl
jle
push
pop
shl
jno
loope
add
std
loope
cmp
jne
pop
rcrl
imulb
imul
mov
dec
or
pushf
push
or
int3
rcrb
push
push
out
push
push
xchg
mov
dec
dec
out
popa
shll
mov
int3
lret
cmp
dec
sub
sbb
pop
mov
mov
ja
fwait
pop
in
fsub
data16
adcl
lods
sahf
repnz
jns
inc
roll
shrb
sbb
ja
jle
jmp
push
test
inc
pop
int3
jb
std
add
cli
outsl
lret
pop
jns
dec
sub
insl
pusha
pop
js
inc
and
mov
rcl
sbb
jmp
aaa
xchg
xor
das
cltd
bound
push
lret
pop
or
ds
insb
sub
aaa
jo
test
cmp
push
pop
movsb
cmc
mov
outsl
mov
addl
dec
lcall
jg
nop
cmp
pop
inc
popf
iret
or
stc
add
shll
not
adc
cmp
insl
push
std
cmp
mov
lods
icebp
push
xor
xor
arpl
imul
pop
nop
loope
mov
testl
das
lods
mov
sbb
mov
scas
lock
mov
outsb
pop
lret
fisttpll
sarb
pop
aas
test
and
inc
les
sbbl
jns
aam
push
pop
cmp
xor
add
incl
mov
mov
in
popa
ret
pop
insl
in
aaa
xlat
push
in
push
jle
cs
testb
xchg
sbb
xchg
fnstenv
and
rorl
jns
cmpsl
enter
xor
pop
add
loop
lret
cmp
dec
mov
jbe
mov
test
gs
push
mov
aam
cmp
mov
shlb
push
repz
addb
lea
inc
adc
adc
push
sub
int
pop
xchg
cmp
jns
sar
fbstp
push
test
adc
push
icebp
xor
or
aam
lahf
in
inc
or
aad
inc
sub
sub
movsl
loopne
stc
test
xor
mov
sbb
scas
add
std
or
repnz
mov
test
sub
adc
mov
testl
xchg
push
cmc
dec
mov
mov
enter
push
in
test
shr
pop
add
add
cli
lods
cmpsl
xchg
shll
lret
jmp
addr16
add
gs
test
push
movsl
add
and
filds
push
in
loop
pop
sub
jae
pop
insb
dec
mov
sbb
jae
sbb
adcb
dec
jg
or
fcoml
fwait
sub
loop
jg
and
xchg
sub
cmp
add
enter
sahf
cmp
mov
ret
icebp
in
pop
xchg
rcll
das
xor
xchg
lods
dec
rcll
fimuls
int3
push
push
jo
xchg
cmp
or
ja
xlat
dec
push
ret
fadd
jg
mov
test
sbb
movsb
xchg
enter
into
movsl
and
cmp
loopne
int
sub
or
std
cli
pop
or
mov
rol
shll
and
lds
inc
gs
ret
rcrb
cmp
dec
jns
jmp
xor
fisttpll
movsb
fisubrl
adc
or
shll
xchg
and
das
cwtl
call
fdivl
repz
orl
push
fisubs
das
cli
cmp
mov
xchg
lds
ss
in
or
pop
xor
in
inc
xchg
outsb
ret
or
cmp
lret
mov
lcall
ret
xlat
jge
movsb
ljmp
fmull
call
fdivs
cli
out
mov
xor
out
jae
xchg
negb
cmp
testb
orb
int
push
fucom
mov
jmp
or
imul
adc
dec
mov
jb
rorb
fs
int3
xchg
cmpsl
test
pop
test
sbb
loope
dec
subl
add
lods
loope
loop
push
push
addps
jae
pop
mov
gs
sbb
orl
push
lods
arpl
or
xchg
sbb
lahf
test
mov
popa
nop
je
insl
sbb
stos
leave
decl
scas
fucom
cltd
mov
leave
mov
ja
mov
test
mov
sti
xchg
xchg
cmp
sarb
sub
hlt
aad
and
mov
mov
add
stc
cwtl
sbb
lea
ficoml
sbb
dec
inc
loope
lea
arpl
adc
xor
mov
sub
mov
xor
pop
imul
mov
fwait
inc
movl
mov
shrl
fimuls
mov
cmp
je
dec
jbe
fldt
sbb
stos
lahf
push
and
stos
fwait
rorl
lret
push
movsl
adc
rol
adc
out
mov
ret
push
mov
jbe
rol
dec
cmpsl
out
mov
mov
or
adc
dec
pop
push
mov
and
xor
sbb
outsl
rorl
nop
xchg
ror
sbb
adc
xchg
into
in
inc
sbb
jae
or
dec
jle
ds
out
test
testb
xchg
or
push
je
dec
insb
imul
aas
lcall
out
sti
movsl
into
xlat
mov
xor
dec
push
cld
dec
push
xor
ficoml
inc
stc
std
cmp
lods
arpl
mov
or
xchg
xor
push
cmp
inc
aaa
pop
xchg
sahf
fs
dec
int
sub
pop
stc
sbb
xchg
out
in
jecxz
imul
cmp
inc
jnp
pop
jle
fs
lea
outsl
adc
sahf
js
jp
outsl
dec
xchg
adc
xchg
jle
cwtl
rcll
aaa
add
jb
clc
mov
pushf
cmpl
sbbb
aam
mov
stos
xor
test
js
std
cmp
das
mov
add
cmp
cs
and
ret
in
lcall
and
pop
adc
mov
ret
dec
aad
rorl
popa
stos
out
pop
js
inc
mov
cltd
cld
rclb
jmp
out
add
in
lahf
popf
in
stc
into
dec
fstps
push
push
test
jo
insb
js
add
aam
sbb
jbe
aad
or
pop
cmpsb
rcrb
enter
sub
aaa
push
sbb
inc
js
inc
push
sbb
and
sbb
call
mov
pop
out
pop
scas
sub
xchg
and
lds
data16
andl
clc
mov
insb
daa
push
lret
xchg
jecxz
sti
ret
insl
mov
mov
lcall
shr
mov
cli
jmp
icebp
ljmp
pop
mov
sahf
push
ret
push
sbb
push
nop
movsb
jbe
std
inc
aad
pushf
adc
fimull
lods
inc
pop
cli
push
shl
les
or
cmp
std
dec
mov
shll
popa
xchg
in
iret
fadd
mov
fisttps
pop
sub
pop
adc
sbbl
and
int3
add
pop
xchg
out
aas
or
push
mov
xchg
cmp
pusha
mulb
gs
and
movsl
nop
and
pop
dec
lds
mov
out
jae
lret
push
pop
ja
andb
dec
inc
lcall
imul
shrb
lods
scas
div
setbe
fldl
incb
mov
mov
fwait
cmp
lret
pushf
pop
int3
adc
xor
insb
mov
cmp
sar
inc
arpl
jl
dec
cmpl
bound
inc
test
in
mov
xor
ficoml
jp
or
jns
outsl
push
sbb
adc
xor
pop
cmc
jl
aaa
mov
jg
cmp
addr16
out
insl
pop
rcr
jg,pn
and
test
ljmp
mov
lds
adc
movsb
jae
xor
or
shrl
lea
sti
in
sub
out
jae
movsl
and
lret
pop
gs
xchg
lock
shl
jo
add
or
or
inc
pop
inc
dec
call
sub
int
mov
cltd
jle
pop
xchg
xchg
mov
imul
mov
sarl
out
mov
xchg
jns
jo
dec
int3
mov
or
je
sbb
iret
jns
mov
cs
lods
scas
andb
cmp
sahf
fwait
mov
or
sbb
push
cmpsl
or
add
cld
or
pop
mov
repz
cmp
lcall
xor
notl
sbb
popf
in
call
rorl
jge
push
roll
mov
pop
mov
cld
xchg
inc
push
push
push
pop
testb
bound
push
mov
inc
xlat
rol
jg
add
mov
mov
adc
add
xchg
sbb
dec
inc
jle
outsl
lret
sbb
pop
pop
fldl
add
add
push
lods
jae
mov
popa
push
sahf
out
mov
inc
ss
enter
mov
mov
add
push
sub
cmp
loopne
test
bound
or
mov
outsb
clc
mov
adc
scas
lods
xchg
das
sub
and
cli
mov
dec
push
cli
mov
push
and
jno
and
xchg
add
dec
out
mov
mov
sub
dec
dec
mov
test
loop
lret
adc
pop
pop
inc
mov
aas
icebp
sbb
pop
ljmp
in
push
xchg
addr16
nop
mov
bound
cmp
mov
outsb
leave
lods
push
xor
xor
ja
es
mov
gs
repnz
mov
sbbb
jo
loopne
sbb
push
aaa
and
pop
mov
sbb
push
sbb
shl
xchg
push
in
std
xor
jnp
lcall
mov
lods
pop
cmp
in
push
adc
push
pop
xchg
popf
mov
iret
cmp
enter
sub
xor
or
sti
jp
cmp
mov
dec
push
out
repz
cmpsl
xchg
scas
cmp
mov
mov
scas
push
push
sub
add
dec
push
fdivrs
lds
jmp
and
pop
ds
dec
pusha
fimuls
mov
lahf
mov
out
test
push
and
sub
and
fildll
rolb
xchg
sub
lret
and
jg
shlb
mov
ja
jecxz
xor
jns
mov
mov
and
dec
mov
push
mov
xchg
jl
scas
clc
insb
inc
inc
cmp
mov
out
decb
xlat
lods
jne
xor
jno
leave
mov
mov
push
bound
leave
mov
insl
xchg
loop
push
stos
enter
fcomps
dec
cs
cmc
test
sbb
ret
sub
fstpt
xor
nop
cltd
xchg
jge
out
mov
scas
mov
and
add
jle
stos
jle
jno
xchg
jmp
dec
jo,pn
jmp
push
popa
push
xchg
cmp
flds
les
jo
pop
cmpsb
shr
scas
rolb
scas
jl
add
mov
cmc
pusha
sub
pusha
mov
jg
pushf
cli
les
iret
cmp
lea
lods
mov
xchg
pop
mov
fidivrs
les
xor
aam
mov
adcl
dec
sub
xchg
dec
xchg
dec
stos
jmp
pop
add
movntq
jae
add
shl
fdivs
push
pop
fildll
xchg
mov
fninit
scas
int3
addl
or
push
sub
jo
and
insl
loopne
call
fsubrl
call
subb
out
sbb
push
add
cmp
shr
mov
cmpsl
xchg
jge
pusha
pop
fwait
jg
xor
je
push
pop
mov
push
subb
mov
imul
scas
cmpsl
mov
flds
test
cmp
lret
pop
aad
mov
xchg
cmpb
popf
xchg
pop
cmp
sub
scas
jo
mov
fistpl
aad
jl
mov
inc
repnz
ss
pop
push
mov
cmp
and
inc
test
adc
mov
ret
repz
aad
sbb
mov
jo
int3
jmp
push
sti
testb
fwait
fs
cmp
and
loope
daa
imul
shll
ljmp
jns
mov
add
mov
pop
xchg
sti
mov
mov
adc
rcrl
je
sbb
push
out
and
adcb
cs
adc
mov
adc
xor
outsb
jg
jnp
xchg
imul
cmp
jp
and
and
dec
sbb
and
test
inc
out
push
loopne
pop
cmp
test
subb
frstor
push
lcall
or
sbb
fsubrs
sbb
cmp
popa
scas
ss
in
cmpsl
mov
mov
sub
fldl
lods
xor
rclb
lods
cltd
cld
sar
push
divb
xor
insb
imulb
pop
pop
jmp
pop
je
insl
outsl
mov
cmp
popl
into
test
pop
int
lea
test
cmpsl
lea
and
sub
push
sbbb
aas
jo
out
jno
cmp
fst
pop
sbb
pushf
sub
jecxz
adc
pop
test
xor
cmp
dec
push
dec
xchg
cltd
ja
push
mov
fcoml
dec
je
xor
dec
dec
jns
sub
mov
sbb
sub
std
hlt
cmpl
pushf
aad
sub
sti
lcall
pop
mov
repz
call
rolb
outsl
sbb
pop
out
popf
imul
adc
les
push
ror
dec
dec
fsubl
inc
lret
jl
mov
xor
enter
aaa
pop
daa
rolb
pushf
dec
mov
out
xchg
pop
push
int3
push
test
xor
cs
pop
and
out
rol
cmp
inc
xor
add
xor
stos
aad
lea
fldl
xor
jne
add
xchg
out
fldcw
jmp
dec
fcomip
push
stc
arpl
fcomi
push
sbb
fistpl
ret
cs
imul
jno
mov
iret
nop
inc
inc
lahf
mov
mov
cmp
add
test
adc
add
jbe
xchg
mov
xor
xor
pop
xchg
push
test
pushf
push
imul
fildll
adc
push
push
sub
sar
sub
adc
insl
vaddpd
mov
nop
sbb
jecxz
mov
adc
imul
sti
scas
and
mov
cmpsb
ljmp
test
lahf
movsl
movsb
adcb
imul
xchg
repnz
iret
cmp
gs
popf
test
movsb
mov
mov
add
testb
test
mov
push
xor
repnz
subl
dec
rcr
adc
mov
mov
push
sarb
pop
inc
or
jecxz
pop
cmp
push
fdivrs
cmp
cmp
add
pushf
jno
sub
xchg
std
sbb
adc
xor
in
cmpsw
cmpsl
add
ret
aaa
xchg
inc
xor
mov
mov
fsubs
pop
push
jnp
js
aaa
jg
adc
scas
push
sbb
sbb
lds
les
xchg
pop
adc
decl
jo
ror
mov
dec
leave
cmpsb
je
ds
daa
clc
scas
xor
sub
sar
jmp
or
add
loopne
sub
jl
jno
ljmp
mov
repz
jmp
stos
dec
and
push
pop
mov
aad
pop
jns
jnp
ljmp
mov
je
xchg
mov
lock
out
push
lock
sbb
pop
add
xchg
popf
add
fs
and
sub
xor
inc
popf
lret
hlt
divb
pop
sub
ja
xor
jne
push
pop
or
or
movsl
cmp
mov
outsb
cwtl
xor
lahf
sbb
add
adc
lock
ljmp
lret
sub
lods
mov
sub
pop
dec
data16
inc
mov
movsl
xchg
mov
cs
outsb
js
clc
jae
les
pop
incl
es
pop
test
jp
adc
jmp
mov
mov
cmp
mov
clc
or
or
out
iret
arpl
inc
pop
test
dec
nop
ficomps
fcmovu
imul
fldenv
push
ljmp
mov
add
push
pop
inc
xchg
push
lds
pop
dec
mov
js
cli
jg
repz
mov
repz
mov
push
jge
ficoml
push
adc
push
cwtl
push
aaa
int
shrl
rcrb
mov
cmp
lahf
xor
into
xor
arpl
call
mov
push
or
pop
mov
mov
pop
decb
lcall
mov
adc
test
push
aad
nop
jmp
xchg
bound
add
xchg
mov
jge
and
sbb
loop
sahf
addr16
mov
xor
pusha
add
push
jecxz
pop
jle
xchg
push
dec
push
test
repz
insl
mov
push
out
repnz
push
fildl
mov
xchg
ret
mov
shrl
mov
add
mov
popa
mov
rcrb
and
xor
pop
addl
ret
add
add
adc
lcall
jbe
mov
jb
inc
rorb
enter
cmc
arpl
dec
cld
repnz
lock
cmp
and
jo
jae
and
sbb
mov
and
cmp
insl
aad
int
push
movsb
imul
cmp
push
dec
sbb
push
mov
shl
ret
pop
lea
push
ret
ret
insb
cmp
mov
sub
mov
sub
enter
cld
pusha
outsb
repz
xchg
pop
movsl
test
mov
cmp
pop
xor
aad
push
aam
movd
test
test
jg
in
sub
mov
ds
das
xor
cltd
xor
xor
inc
cmp
int3
in
jae
imul
sbb
popf
in
or
or
mov
mov
repz
mov
push
push
push
inc
sbb
inc
xor
fld
fmull
lea
push
adc
mov
pop
or
pop
inc
push
adc
mov
xlat
pop
cmpsb
gs
adc
xchg
pop
les
inc
mov
mov
dec
fadd
and
jbe
cmp
cmc
adc
inc
testl
mov
insl
pop
cwtl
lcall
add
xor
add
out
negb
mov
sub
add
call
dec
mov
orl
int
ret
inc
pop
lahf
add
dec
push
sahf
xchg
aas
sbb
and
push
rcr
mov
shlb
dec
out
jp
xchg
or
aam
jbe
scas
cmp
pop
pusha
loopne
pop
mov
mov
dec
lds
xchg
adc
jmp
cmpsl
mov
scas
xchg
xchg
lcall
inc
pushl
or
jg
xor
mov
push
testl
out
cmp
inc
daa
mov
into
lret
push
xchg
ds
mov
cmp
inc
push
lods
aad
jns
pop
mov
push
cmp
add
cmp
and
or
xchg
das
andb
jge
pop
mov
push
lods
adc
scas
and
stos
adc
sti
into
xchg
out
push
imul
jno
dec
shlb
sbb
in
xor
or
pop
jnp
mov
push
movsl
scas
or
incl
xchg
push
sbb
pusha
jo
sbb
lahf
shrb
movsb
fsubrs
imul
mov
call
sub
lahf
addr16
xchg
ljmp
or
mov
xor
xchg
sub
cmpsl
lahf
call
fnstenv
lods
or
mov
push
jge
inc
pop
ficoml
pop
mov
cmp
outsb
mov
push
add
in
xchg
rcrb
insb
ja
and
popa
or
xchg
adc
cvttps2pi
loop
push
push
add
enter
adc
xchg
pop
adc
or
mov
in
pushf
mov
out
push
pop
adc
lods
xor
cmpsb
add
aam
int
neg
fbstp
sub
test
mov
movsl
in
push
insb
leave
pop
and
fwait
sti
mov
ja
jp
scas
and
daa
sub
dec
add
popf
mov
in
or
mov
xor
mov
jne
sbb
xchg
jnp
rolb
aaa
ss
pop
fidivl
and
and
stos
mov
or
pop
cwtl
mov
ds
outsl
popf
sbb
inc
fldl
sub
repz
mov
lret
add
into
mov
xor
add
push
aas
xchg
fldenv
xchg
sbb
test
sti
int3
adc
cmpsb
out
and
sub
popa
fwait
in
dec
jle
push
or
test
sbb
ficomps
mov
into
xor
or
xor
push
adc
mov
add
repz
mov
cmp
cmpsb
sub
jns
loop
or
push
shlb
movsl
into
mov
xchg
fdivrs
cmp
push
int
jecxz
dec
fisttpll
test
mov
mov
int
jmp
adc
loope
mov
mov
fcmovnb
mov
in
mov
mov
add
adc
out
pop
and
faddl
out
or
addr16
aam
pusha
and
aam
sbb
insb
mov
xlat
les
movsl
test
popf
in
push
loop
xchg
mov
insb
or
xchg
mov
sbb
sbb
aas
addr16
dec
sub
or
push
inc
mov
aad
xor
mov
fwait
push
sti
les
lock
cmp
mov
sbb
cltd
gs
push
outsl
outsl
ss
or
lods
es
testl
sbb
inc
and
xor
roll
into
cs
sbb
scas
out
inc
shll
ret
test
bound
xor
xor
cmp
mov
aam
mov
data16
xchg
addr16
fists
popa
insb
lds
jge
cli
sbb
lea
mov
dec
dec
cmp
int
add
imul
fidivl
inc
xchg
dec
aaa
sub
or
push
mov
lods
ret
push
sub
loop
add
mov
aaa
popf
dec
lea
imul
pushf
xor
aam
lods
loope
call
icebp
add
mov
lds
pushl
decb
push
mov
std
push
sub
ss
jo
cwtl
push
leave
mov
adc
loope
outsb
ljmp
addr16
repz
fistpll
repz
or
pop
dec
aas
mov
inc
jmp
or
or
jecxz
stos
pushf
cmp
push
dec
repz
push
push
and
mov
in
mov
xchg
insl
int3
jp
das
jb
adc
jp
adc
pop
lahf
outsb
jne
mov
lcall
rcl
pop
in
mov
inc
lea
or
mov
and
repz
ss
add
jnp
add
xor
mwaitx
xchg
out
pusha
les
pop
xchg
push
adc
jge
insl
push
pushf
hlt
add
pop
ja
enter
and
and
call
fistps
push
into
or
aas
and
int
push
and
shll
mov
sub
sub
jmp
enter
icebp
pop
inc
popa
mov
xor
addl
push
push
cmp
insb
and
jmp
add
pop
out
test
call
mov
movsl
push
or
sub
cmp
or
jo
lret
cmp
rclb
cld
push
ret
insl
xchg
inc
mov
sub
add
mov
imul
fwait
repnz
push
jae
push
xchg
gs
movsb
lock
jp
mov
sahf
fwait
jle
lods
call
adc
sub
nop
test
std
scas
loope
lds
fildll
pop
sbb
aam
adc
inc
jne
out
mov
ret
fcoml
dec
jle
mov
push
dec
fistpll
sti
or
inc
out
mov
add
ljmp
rcrl
pop
jns
ret
add
dec
call
cmp
fisubl
outsb
mov
xchg
dec
sbb
sahf
aad
dec
cwtl
mov
rcl
movsl
jl
jp
push
mov
imul
popl
sub
push
pop
sub
imul
jle
mov
cwtl
inc
sub
xchg
inc
xor
ss
adc
mov
imul
jmp
xchg
adc
cs
testb
add
push
rcl
shrl
and
stos
or
add
xchg
and
pop
or
daa
xor
mov
popa
pushf
inc
out
push
push
sahf
jbe
sbb
jmp
sub
imul
test
add
cmp
stos
lock
inc
popf
xor
js
xchg
in
call
arpl
cltd
imul
dec
mov
repz
xchg
ret
popf
cmpsl
xchg
test
aad
mov
mov
or
outsl
jecxz
fsubrl
insl
or
pop
jbe
out
fstpt
movsl
daa
add
mov
fcomip
cmp
iret
in
mov
leave
jns
cmp
mov
ret
ret
cmp
js
cmpsb
jge
or
test
jl
out
mov
fadds
or
mov
mov
xchg
cs
jo
outsb
lret
sbb
test
jo
mov
lret
mov
mov
push
or
loopne
popf
scas
jne
outsb
xlat
fmull
pop
in
dec
cld
setns
loopne
jnp
jecxz
ja
adc
mov
push
cmp
test
in
sub
shrl
xchg
mov
arpl
xor
leave
sub
sbb
jl
pop
shl
jg
xchg
loopne
mul
xchg
mov
xchg
jmp
addr16
mov
jne
lea
dec
inc
cmp
push
xrelease
lock
nop
xor
mov
popa
sub
outsb
ss
sbb
cli
inc
sarl
sub
adc
push
xchg
xchg
push
add
sbb
fs
out
cld
pushf
stc
jg
xchg
inc
xor
mov
dec
mov
and
pop
mov
popf
in
cmp
cli
push
rorb
movsb
inc
in
xchg
data16
mov
inc
fmull
pop
lds
xchg
mov
mov
pop
mov
lret
sub
inc
out
movsl
loope
ja
call
xchg
push
ret
fimull
jbe
and
push
shlb
or
subb
mov
testl
addb
int
jne
sti
cmpsb
stos
fs
sbb
cs
xlat
inc
jbe
imull
imul
outsb
sub
jne
imulb
dec
ficomps
pusha
paddusb
pop
jl
push
push
xor
cltd
cmpsl
pop
cmp
cltd
pushf
mov
mov
mov
in
mov
js
aam
or
adc
inc
sarb
pop
dec
mov
cmp
in
add
xor
xchg
sbb
or
maskmovq
testl
pop
rclb
mov
cmc
inc
int3
mov
cmp
lods
add
or
xor
xor
adc
lock
jo
sbb
pop
sub
adc
dec
mov
pushf
jp
icebp
cltd
xor
mov
add
dec
mov
jnp
jmp
mov
mov
xchg
out
and
or
push
xor
or
mov
pop
mov
pop
clc
sbb
in
popa
and
xor
lcall
ds
imul
outsl
push
scas
add
out
pop
lds
int
pop
arpl
inc
and
mov
ret
xor
mov
dec
inc
dec
jecxz
xchg
mov
mov
or
cltd
push
test
push
in
stos
push
inc
jae
mov
xchg
inc
sbb
aad
fimuls
jg
std
push
jge
cs
ret
loop
mov
jecxz
rorb
adc
dec
test
and
mov
int3
jp
and
test
in
pop
cmp
insb
jnp
shll
dec
xor
sbb
lock
jb
daa
test
out
test
xlat
es
mov
js
shrb
jl
or
sbb
pop
sbb
loopne
scas
jge
stos
incl
inc
xor
mov
cmpsb
iret
xor
mov
mov
lods
jge
mov
pop
call
mov
enter
add
je
and
inc
stos
cmp
sarb
mov
mov
fdivr
mov
es
out
sub
int3
push
dec
call
mov
mov
jge
and
dec
imul
lods
movl
loop
shrl
lds
cmp
pushf
dec
std
ja
and
pop
pop
fistl
icebp
ds
bound
xchg
pop
cmovle
inc
inc
sub
neg
xchg
inc
push
subl
mov
mov
out
jno
cmpsb
pop
jno
sbb
mov
outsb
mov
out
pop
imul
aam
rorb
lret
dec
orl
push
cmc
push
jbe
in
pop
mov
jl
mov
int
xor
mov
adc
mov
xlat
xlat
sub
int3
sbb
idivb
enter
jbe
cmp
push
sbb
mov
ss
xchg
cmpsl
ljmp
add
xchg
out
pop
add
inc
push
cmp
stos
imul
jmp
push
dec
repnz
cli
ljmp
iret
sub
and
shlb
pop
or
xchg
fisttpl
adc
mov
and
jp
push
inc
mov
adc
pop
mov
mov
shll
das
mov
loope
repnz
pop
sub
test
enter
mov
scas
jno
stos
lock
push
add
mov
adc
lcall
pop
mov
mov
or
cmc
sbb
jecxz
and
rcrl
lods
repz
push
movsb
mov
mov
inc
dec
xchg
mov
arpl
lods
outsl
inc
sub
push
sti
loope
pop
sub
roll
fisttpl
and
aas
in
inc
ret
in
inc
or
in
add
aas
aaa
mov
int3
movsl
xchg
insb
fildl
mov
push
sub
push
outsb
mov
sahf
lret
mov
or
lds
dec
rorb
sbb
inc
inc
sbbb
inc
push
push
jbe
aad
or
adc
pop
loope
ret
mov
adc
pusha
popa
sbb
addr16
mov
pop
daa
sahf
out
add
mov
imul
call
or
cs
iret
repnz
aam
sbb
or
shrl
call
cmp
loope
dec
popa
stos
sub
mov
out
mov
adc
xchg
aad
mov
test
cmc
cmpsb
dec
xchg
mov
insb
aad
clc
pusha
loop
push
cmp
ljmp
loopne
pop
out
adcl
inc
sti
pop
or
xchg
clc
pop
test
bound
inc
sub
jge
pop
mov
imul
scas
inc
push
jp
pop
push
push
stos
cmpsb
fisubrl
addr16
and
mov
xchg
ss
or
sti
xlat
pop
jle
movl
lret
inc
xor
loopne
arpl
ss
mov
cld
loope
ss
mov
and
lret
dec
das
mov
mov
scas
xchg
cmp
xchg
loopne
cld
icebp
jmp
das
or
fsubrl
pop
cmpsl
dec
cmpsb
dec
push
hlt
es
and
pop
cmp
int3
test
or
ret
and
xor
sbb
jmp
fiadds
imul
push
push
ds
daa
xor
popa
jmp
mov
and
call
sub
div
xchg
lds
test
jmp
fidivl
popf
movsl
adc
pop
std
ja
iret
inc
xor
mov
inc
or
iret
scas
mov
sbb
data16
leave
jbe
insb
cs
jecxz
mov
sbb
imul
mov
insl
lods
add
je
movsl
jns
sub
xchg
mov
popa
cs
lods
paddb
xchg
and
mov
loope
cld
cmpsl
cs
ss
inc
mov
mov
pop
shlb
mov
dec
rcll
das
test
sbb
cwtl
inc
data16
pop
xchg
gs
gs
insl
mov
inc
xor
je
testb
xor
or
gs
cmp
fwait
pop
dec
jne
or
lock
inc
or
lcall
xor
add
dec
shll
jl
pusha
cmp
jp
addb
ficoml
push
pop
mov
xorb
push
mov
nop
cwtl
cmp
pop
mov
jg
mov
nop
push
jno
adc
xchg
pushf
xchg
mov
addl
movsl
insl
push
mov
add
or
mov
or
outsl
fmull
pop
ja
fists
lcall
cwtl
cwtl
fildll
lock
outsb
negb
call
cmp
out
mov
cmp
mov
mov
loopne
push
push
test
jecxz
cltd
fistpl
out
sub
jo
shrb
ds
lock
push
push
mov
mov
mov
or
lods
xchg
jp
inc
sbb
gs
push
or
jp
int3
inc
rorb
ja
or
jecxz
int3
jg
ficompl
inc
mov
shl
xchg
ret
push
mov
jmp
dec
out
gs
stc
fists
fucomip
decb
push
mov
adc
repz
adc
fcoml
inc
pop
pushf
cli
les
shlb
lea
fwait
and
inc
repz
or
fwait
sbb
xrelease
idivl
xor
sbb
jge
nop
aaa
mov
xchg
dec
or
xor
aaa
fwait
sbb
inc
pop
mov
stos
and
in
xchg
add
pop
mov
sahf
pop
movsb
and
push
pop
bound
adc
jle
clc
es
jge
sti
jg
lcall
add
sbb
sbb
mov
jb
fmuls
mov
cmp
fidivrl
dec
xchg
popf
push
icebp
repz
sub
mov
jg
test
cmp
pop
push
rorb
out
test
sub
sahf
enter
xchg
loopne
lahf
hlt
mov
nop
adc
std
pop
mov
xor
push
flds
or
inc
xchg
and
repz
out
lret
scas
in
pop
ror
push
fdivs
push
and
and
test
fiadds
adc
sbb
or
adc
jns
sub
loope
daa
imul
inc
inc
inc
cli
push
out
setle
cmp
in
mov
adc
mov
adc
and
jp
inc
das
mov
xor
icebp
scas
test
fcmovnu
or
mov
mov
jge
add
push
testb
fwait
push
fwait
and
inc
mov
lahf
lcall
xchg
add
fsubs
and
dec
inc
sbb
fwait
aas
into
pop
rorl
andl
mov
fisttpll
jmp
dec
pop
pop
jo
int3
lock
jnp
je
cwtl
test
inc
adc
mov
cmp
inc
adc
jo
lcall
arpl
mov
das
cmp
fsts
ret
mov
inc
divl
loope
ret
movb
mov
in
sub
mov
stos
push
int3
test
insb
ret
jno
imul
clc
jne
xor
cvtps2pd
mov
and
jno
sub
bound
jns
das
pop
pop
aad
cli
mov
pop
adc
mov
lods
std
xor
cmp
inc
xorl
mov
fsubs
lcall
call
sub
jge
sub
mov
jo
hlt
inc
add
mov
and
and
out
scas
icebp
push
jecxz
daa
sti
mov
fnstsw
mov
mov
mov
xchg
inc
addb
mov
sub
leave
mov
mov
inc
sbb
adc
jo,pt
cmpsl
add
ss
insb
lahf
es
shlb
inc
mov
add
stos
inc
cs
daa
and
mov
dec
xorl
pop
lret
cmp
mov
daa
push
sti
add
and
mov
add
popl
cmp
and
lret
xor
add
stos
addr16
test
jns
or
cmpsl
mov
roll
addl
test
lock
mov
ret
cld
repnz
fildl
xlat
jl
sbb
mov
cmc
addr16
sbb
push
push
imul
push
cwtl
cmp
jne
push
push
push
mov
and
inc
clc
je
push
arpl
or
push
xchg
movsl
js
in
sbb
or
sbb
lret
xchg
jae
les
scas
mov
in
les
jp
ja
int3
in
xor
fsts
pop
adc
lcall
pop
push
fbld
sbbl
lahf
jg
lcall
inc
hlt
leave
je
or
lock
mov
xchg
mov
adc
arpl
test
pop
stos
jnp
push
cs
fldt
je
scas
lret
in
rol
loopne
ss
dec
mov
xchg
pop
jno
mov
and
push
dec
es
jmp
fstpl
imul
jl
mov
adc
loope
push
mov
loope
push
test
dec
pop
ss
iret
add
loopne
repnz
aam
sarb
cmp
add
jb
test
cvtpi2ps
fdivl
es
push
add
push
mov
test
push
les
filds
into
mov
push
add
jmp
mov
loop
imul
and
nop
pushf
push
pop
xlat
push
pop
imulb
and
xor
pop
sahf
add
push
stc
jne
xor
adc
pop
in
cmp
jge
arpl
or
dec
dec
inc
sbb
and
or
cli
jge
jg
rorb
subl
das
js
jb
je
sbb
xchg
and
aam
lret
notb
popf
pop
dec
xchg
xchg
xchg
mov
or
mov
in
scas
mov
dec
adc
mov
out
pop
xlat
adc
daa
stc
xchg
adc
push
push
sub
mov
ljmp
dec
jo
loope
test
lock
mov
negb
aad
std
aas
sbb
mov
aad
les
jge
jns
add
enter
in
bound
and
lret
sbb
inc
sub
repz
mov
aaa
out
and
dec
popf
lea
xlat
mov
push
or
es
in
popa
ja
dec
and
insb
je
leave
inc
and
jp
sbb
outsb
and
inc
addl
sbb
out
popf
test
mov
sahf
sub
inc
mov
xchg
loope
pop
dec
and
call
scas
add
cs
dec
sub
int
addr16
jp
cmc
sub
outsl
incl
out
test
insb
cli
arpl
xchg
dec
mov
cltd
jno
clc
mov
outsl
cmp
pop
mov
xlat
sub
or
mov
pop
in
adc
dec
cs
hlt
inc
incl
jge
and
notl
push
sbb
lret
jmp
pop
stc
out
loopne
stos
aaa
mov
dec
pop
cwtl
or
push
scas
mov
sub
sub
lods
inc
popf
xlat
scas
pop
ficomps
je
jmp
mov
push
ss
testl
test
cwtl
xchg
mov
repz
jle
movsb
push
shlb
cs
mov
add
pusha
pushf
hlt
ret
pop
adc
scas
cmpsb
int
pushf
fimuls
lcall
div
fcmovnbe
movsb
jg
xchg
loopne
out
fidivl
sub
test
fprem
aaa
adc
mov
jp
push
mov
es
mov
cmc
sub
ljmp
ret
scas
cmp
pop
movsl
sbb
sbb
sbb
pop
rcll
add
fimuls
jnp
leave
add
movsb
xor
lcall
testl
out
mov
nop
aad
adc
and
and
push
imul
pop
scas
jns
lods
push
xor
mov
scas
sub
cld
das
scas
sub
xlat
xchg
jge
sub
aam
xchg
mov
mov
inc
cmp
data16
les
xchg
shrl
aas
mov
orb
andl
stos
and
add
push
insb
or
fs
sbb
inc
xor
inc
jg
shlb
out
add
addr16
lcall
jne
loope
adc
mov
ret
mov
inc
mov
into
xchg
inc
inc
mov
lcall
insb
daa
mov
sarb
into
add
inc
mov
mov
xchg
lods
mov
mov
lea
addr16
inc
xchg
jmp
sub
push
aaa
sub
es
sub
jo
adc
and
add
out
xlat
xor
or
andl
and
fisubl
xchg
inc
push
ret
in
outsl
ds
cltd
adc
arpl
rcrb
add
push
lcall
loope
ja
push
aad
cwtl
and
imul
arpl
je
jl
jp
pop
jbe,pn
dec
test
mov
insl
jp
aas
mov
repnz
lahf
pop
fwait
clc
or
ret
pop
push
xor
jae
andb
add
shll
lret
xor
lods
mov
imul
mov
scas
mov
rcr
mov
gs
inc
movsl
ja
or
pop
or
lea
stos
push
rcl
je
xlat
out
test
pop
push
xchg
imul
pop
lea
je
enter
mov
lret
lods
lea
sbb
or
pop
gs
xchg
jecxz
xor
inc
sbb
fs
cmpb
sub
xor
push
push
clc
loopne
nop
and
jecxz
push
push
inc
divl
dec
sub
jp
movsl
pop
sti
push
je
push
out
pinsrw
les
mov
jmp
in
xor
scas
mov
adc
shl
mov
pop
xchg
aam
lcall
jbe
outsl
mov
sub
sbb
dec
mov
test
cmpsl
out
xor
fsubr
ds
lret
sbb
cmpsb
cmp
clc
std
fs
fbld
xor
fisubs
mov
jmp
fs
scas
rcll
pop
cmp
xor
adc
and
cltd
add
push
fs
jp
lret
mov
mov
icebp
sarl
adc
mov
adc
and
outsb
sbb
repz
mov
push
aas
repnz
ret
fsubp
add
ljmp
adc
outsb
sti
inc
in
ficoml
dec
imul
pop
stos
imul
lret
mov
es
das
xor
dec
dec
dec
xor
cmpsb
ss
jb
lods
aad
shl
into
xchg
adcl
dec
outsl
jg
ljmp
in
roll
mov
adc
ret
ljmp
pop
xchg
jp
addr16
mov
jbe
test
push
inc
icebp
mov
ficoml
ss
jbe
xchg
mov
dec
xchg
movsb
xchg
push
roll
out
xchg
shl
mov
iret
xor
sub
scas
in
add
jle
shlb
cmpsl
lret
fistpl
sub
jmp
xchg
popf
push
movsb
out
movsb
sbb
aam
or
xchg
mov
enter
test
repnz
cltd
scas
pusha
xchg
shrl
mov
shll
pop
push
inc
les
push
addl
pop
je
movsl
pop
add
cmp
movl
mov
mov
or
xor
cltd
rorl
adc
arpl
jle
xor
pop
mov
dec
icebp
sti
add
pusha
cmp
push
scas
pop
sbb
aas
dec
sub
add
jns
pop
lods
popa
adc
into
mov
add
dec
js
shll
push
dec
call
mov
fwait
cmp
sub
add
cli
mov
xchg
cmp
out
jge
test
cmp
shr
cmp
repnz
inc
loopne
xchg
icebp
xchg
shl
fldenv
add
test
or
stos
jp
imull
fcmovb
popf
jne
mov
fsubs
mov
or
sbb
mov
sbb
enter
fptan
add
jo
dec
sub
out
mov
push
sbb
jbe
shl
push
test
dec
xor
fnsave
jns
pop
fistpl
dec
or
fidivs
mov
or
out
xor
adc
test
cmpsl
cmpb
out
push
mov
nop
cmp
jb
jne
sbbb
inc
push
mov
pop
jbe
fs
push
sub
or
dec
push
xchg
out
mov
sub
cltd
mov
jne
repnz
inc
mov
nop
ret
cs
ja
or
or
sbb
jl
add
cli
adc
lahf
xchg
pop
push
sbb
aad
icebp
xchg
into
fdivrl
cmp
sahf
es
loopne
push
pop
mov
xor
push
idivb
in
or
lea
xor
xchg
iret
loope
inc
push
jno
out
loop
add
aam
push
jp
out
lds
mov
adc
pop
cwtl
jle
insl
fisubl
mov
mov
sub
popf
cmp
dec
in
pop
add
es
xchg
fiaddl
jne
cmp
and
dec
js
cmp
test
ret
dec
ss
pop
das
push
fdivr
jp
in
sbb
lcall
mov
sub
adc
int3
aas
add
push
push
sahf
and
cmp
mov
push
cmp
xor
jo
mov
sbb
and
push
pop
daa
push
cmp
xchg
dec
xchg
repnz
mov
add
mov
scas
xlat
jb
rcrb
dec
mov
out
push
in
dec
mov
mov
popa
les
xor
fdivs
mov
lods
scas
jno
jle
in
loope
mov
ja
and
adc
cmp
or
notl
sbb
je
sbb
icebp
bound
cltd
jno
sahf
inc
dec
mov
fcoml
dec
dec
cmp
xor
pusha
les
sarl
fsubl
pushf
mov
or
test
int
or
rcrl
xchg
popf
cmp
stc
sbb
and
out
pop
mov
mov
dec
pushf
and
push
or
jp
cmp
jb
ss
inc
lds
jno
xor
arpl
out
test
push
lret
dec
fwait
cmp
cmpsb
cmc
inc
pop
test
and
mov
faddl
mov
insb
adc
mov
add
push
cld
sub
mov
jp
mov
xchg
mov
inc
xor
movsb
mov
stos
push
and
push
mov
fistpl
int3
ds
cmpsb
mov
add
mov
add
xor
add
test
stos
push
int3
outsb
cld
test
outsb
mov
adcl
xor
pusha
inc
mov
ds
xor
mov
fs
arpl
mov
orl
les
jno
sbb
jge
pop
pop
sub
jl
xor
add
sahf
pop
cmpsl
pop
mov
pushf
jle
mov
push
int
cmp
or
test
and
fidivrs
add
leave
xacquire
scas
or
inc
ds
ja
movsl
and
push
dec
loope
push
add
adc
jmp
add
fdivr
clc
mov
jo
sub
inc
jmp
sub
imul
inc
sub
loopne
aam
or
adc
std
idiv
int3
or
xchg
mov
jecxz
bound
jb
inc
mov
mov
out
gs
mov
mov
sbb
stos
cld
movq
aas
push
push
flds
outsl
mov
cmc
sbb
push
jne
mov
mov
adc
mov
jge
je
mov
pop
ficompl
out
push
sbb
fdivrl
inc
int3
outsl
mov
shr
jns
sub
and
xor
dec
ja
popa
out
stos
or
sub
stc
lret
sbb
cmp
pop
cmp
xchg
cmp
or
xchg
in
lds
mov
lahf
cld
lret
bound
movsl
cmpsb
movsb
mov
not
popa
frndint
push
mov
insl
inc
add
cwtl
xchg
mov
imul
pushf
test
push
daa
fnstcw
mov
lret
shrl
push
dec
les
adc
les
out
cli
push
iret
or
loope
scas
pop
ja
fcoms
ret
loope
mov
xor
stos
xchg
arpl
dec
xor
test
fsubrs
loopne
pop
mov
ret
shrl
push
popa
filds
shlb
aas
add
xchg
mov
jb
mov
push
ds
repz
sahf
add
push
and
jb
adc
pop
sub
js
mov
nop
and
pop
jo
add
xor
ret
jle
dec
pop
sbb
adc
push
xorl
fbld
dec
jecxz
into
arpl
jbe
decb
rcl
ret
outsb
adc
mov
sbb
arpl
fdivs
out
loopne
rcl
mov
sbb
lcall
test
inc
je
in
mov
mov
data16
out
jle
pushf
mov
stc
dec
push
dec
into
shll
push
mov
cmp
fbld
push
adc
sbb
fneni(8087
loope
jecxz
cmp
cmp
mov
jnp
dec
dec
or
sbb
jle
movb
outsb
dec
out
movsb
sub
lds
xor
mov
jp
mov
xchg
jecxz
or
mov
sahf
add
mov
cld
or
push
lahf
xchg
aam
sbb
mov
movb
inc
cltd
sub
cmpsl
insb
or
push
inc
mov
insb
and
rcr
xchg
ret
shr
enter
arpl
mov
std
fldenv
in
dec
scas
or
adc
sbb
clc
fbld
in
push
sbb
notb
push
mov
lahf
es
or
dec
xor
xor
mov
push
sub
icebp
inc
mov
lcall
scas
fadds
adc
fcmove
scas
dec
cmp
or
push
or
fwait
push
ficoml
into
fistps
jl
jl
adc
jp
ret
movsb
call
js
and
popf
sub
sub
popa
cmpsb
dec
mov
xchg
pop
xchg
into
pop
lcall
test
fmulp
cwtl
movsb
call
sub
shll
pop
movsb
xorb
jge
outsl
sbb
mov
cmpb
inc
and
cmp
sbb
sbb
fisubl
movsb
push
push
fmulp
nop
fsubs
push
sbb
call
movsl
cld
jno
mov
push
inc
cld
out
loop
adc
les
nop
enter
cmp
push
popf
sub
mov
adc
stc
pop
xor
mov
xchg
bnd
pop
xorl
pop
stos
jmp
inc
in
imul
int
xchg
push
jbe
dec
movsl
pop
and
mov
es
bound
and
cmp
aaa
inc
leave
outsb
loop
and
mov
inc
arpl
xorl
sbb
stos
jecxz
jle
ds
xor
sbb
cld
adc
icebp
sarl
jns
fs
js
xchg
mov
in
pop
into
fnstsw
or
in
ljmp
mov
inc
lods
sub
push
lret
jp
mov
pop
mov
and
pop
lahf
popa
fwait
rorb
fcompl
aaa
call
inc
cmpl
and
jb
pop
jle
dec
sbb
sbb
repz
cwtl
sub
iret
incb
ret
fisttpll
dec
sbb
cmpsb
mov
imul
ja
shl
fs
mov
into
fdivl
fwait
stc
cs
sub
or
in
movsb
testl
inc
xor
sbb
pop
data16
sub
jmp
fisubs
adc
insl
or
fidivl
cvttps2pi
out
icebp
aas
addr16
dec
fcoms
imul
in
mov
scas
mov
sub
cltd
or
mov
inc
mov
pop
cmpsl
scas
mov
in
les
mov
and
in
cld
rorb
dec
sub
cmp
fsubr
loop
adc
mov
lods
inc
cwtl
shl
test
in
pop
inc
cli
xchg
imul
cs
jnp
add
fwait
cmp
cs
xchg
ss
mov
mov
clc
xchg
mov
repnz
dec
stos
lods
dec
aad
cld
aam
fisttpll
aam
dec
mov
scas
push
add
sub
xchg
rorb
cs
mov
xor
xor
mov
sub
cmp
stos
in
or
sbb
rcll
mov
ret
imulb
mov
gs
ret
movsl
adc
and
jno
outsl
mov
add
jbe
in
xchg
scas
je
insl
push
fcomp
je
add
pop
lods
sbbl
xchg
push
xchg
push
sbb
sbb
pop
dec
push
xchg
mov
ljmp
test
or
fsubrl
jns
pop
jno
mull
loopne
sbb
cmp
pop
push
sbb
ja
mov
or
jle
dec
loopne
adc
sbb
mov
mov
hlt
loopne
inc
popf
sub
pop
stos
mov
inc
xor
push
sbb
xor
adc
bound
mov
mov
xchg
dec
inc
pop
cmp
xor
xor
push
dec
push
xor
sub
mov
lea
ret
sbb
je
js
pop
mov
pushf
dec
pop
jle
iret
or
mov
stos
data16
cmc
int3
movb
pop
adc
and
jae
test
sbb
inc
idiv
aaa
mov
sbb
mov
push
jb
mov
or
sbb
pop
mov
xchg
outsl
xor
lcall
mov
mov
and
mov
mov
push
sbb
jp
xchg
mov
mov
adc
into
sub
ljmp
lea
jb
cmpsb
movsl
outsl
daa
pushf
inc
rcrb
add
add
sub
stos
jge
mov
inc
fcmovne
lods
and
and
cli
sbbl
mov
sbb
out
add
pop
dec
in
adc
test
out
cmp
dec
sbb
dec
cmp
sbb
inc
jl
mov
loop
pushf
bound
sbb
outsl
clc
outsl
addb
punpckldq
jnp
psubw
inc
leave
ds
or
jge
test
add
mov
mov
mov
rcr
mov
aas
test
repnz
repz
xlat
inc
mov
add
push
sbb
mov
mov
xor
pop
ljmp
mov
insl
into
loopne
cmp
out
adc
xlat
lods
pop
test
aaa
call
outsb
mov
int
daa
lods
dec
std
jp
adc
adc
aaa
rep
cwtl
imul
push
adc
jecxz
xchg
pop
pop
jb
jns
push
negb
mov
xor
jne
sub
pusha
cmp
push
popf
scas
popf
adc
test
push
jne
scas
jns
pop
and
lret
test
ds
insl
pop
popf
cltd
negb
xchg
clc
sahf
popf
xchg
adc
push
add
loopne
or
adc
decl
repz
jae
pop
cwtl
xchg
xchg
jl
shrb
sbb
test
jb
fcmovne
sub
sbb
fidivrl
dec
jne
adc
bswap
push
sbb
es
dec
jge
mov
mov
insl
call
and
and
test
push
testl
sub
mov
xchg
rcrb
stos
jle
mov
and
or
jge
push
xlat
adc
bound
rorb
leave
fmull
addr16
jle
and
jbe
xor
or
sub
or
jg
mov
jp
dec
pushf
cmp
cmp
scas
cmp
push
imul
push
fucomp
call
mov
cs
add
outsb
push
push
jae
lahf
lods
xchg
adc
jmp
and
icebp
stos
mov
or
mov
call
rcll
mov
adc
and
mov
imul
into
xchg
ds
xor
jg
and
dec
jbe
pushf
mov
dec
and
ds
xchg
pop
add
jne
mov
cwtl
sti
mov
jnp
insl
mov
lcall
fdivp
pusha
mov
scas
cli
mov
add
call
push
jg
dec
test
add
in
ds
imul
gs
aas
push
movl
cs
pop
call
dec
jmp
repnz
daa
jns
push
sub
mov
adc
loope
addr16
xor
mov
pop
jl
xchg
mov
mov
push
aaa
mov
inc
mov
or
es
or
xchg
xor
jmp
fsubp
daa
and
push
mov
inc
push
test
cmp
fnstsw
or
mov
ret
and
xorl
fs
gs
xchg
inc
inc
sahf
mov
mov
fsts
cli
xor
mov
rol
inc
inc
test
push
xor
icebp
add
cmp
jnp
sub
adc
sub
aad
push
stc
sti
iret
scas
arpl
mov
pop
jnp
stos
mov
jae
adc
push
jge
test
cli
clc
int
ljmp
sub
xchg
adc
fistpl
push
cmp
cmp
repz
popa
xchg
xchg
shr
adc
insl
push
jno
arpl
imul
and
fs
jno
ljmp
adc
xor
or
leave
data16
or
cltd
lret
loope
jbe
das
sbb
ficoms
inc
mov
jmp
mov
mov
js
sbb
add
rcll
shll
jbe
adc
icebp
xchg
lahf
cmp
sarl
push
or
lahf
mov
xlat
mov
call
mov
adc
pop
xor
mov
js
cwtl
mov
xchg
frstor
cmpl
push
sar
mov
xor
and
nop
push
inc
mov
aaa
xchg
pop
out
enter
ds
mov
outsb
aaa
cld
mov
mov
test
aad
mov
xchg
push
cmp
pop
cmp
inc
repz
adc
sub
adc
sbb
lods
lret
jbe
fisubrs
pop
and
dec
or
jg
fwait
or
inc
adc
sub
push
sbb
mov
js
push
fisubs
xor
pop
int3
mov
sbb
adc
xchg
or
decb
xchg
add
jbe,pn
jmp
lock
in
jg
jge
daa
sbb
jnp
pop
popf
push
adc
cmovne
adc
aas
mov
das
outsl
mov
test
mov
cmp
adc
clc
add
cmpsb
stos
rorb
stos
js
aas
dec
sbb
push
in
cld
mov
jns
cmpl
mov
mov
das
je
mov
sub
mov
ljmp
and
int3
fimuls
push
stos
pop
cmp
loop
push
xorl
pop
sarl
lds
movsb
dec
fcmovb
inc
sbb
aam
and
fists
lret
dec
fcomps
xor
jne
aaa
stc
jl
cli
ds
cltd
pop
lahf
xchg
into
inc
pop
jbe
jo
cld
lret
dec
shll
inc
addr16
mov
lods
cmp
mov
fimuls
fnstenv
sub
popf
fidivl
cld
lahf
loopne
int
mov
addr16
dec
jge
mov
sub
xor
mov
xor
inc
iret
mov
ss
xor
scas
addr16
in
add
out
in
lcall
loope
or
inc
mov
push
dec
out
enter
lods
mov
fidivrs
idivb
repz
call
xchg
dec
lods
xor
inc
inc
imul
dec
mov
clc
jmp
sub
js
cmp
adc
sbb
jl
lods
shlb
xchg
xchg
scas
decb
jne
fstps
addr16
mov
add
movsb
movsb
cmp
mov
pop
adc
movsl
in
adc
cwtl
xchg
shlb
insb
sbb
insb
stc
adc
imul
sub
lahf
push
rclb
or
lret
mov
jle
mov
sub
xchg
lahf
pusha
jecxz
jb
sbb
dec
lods
out
in
dec
aas
and
or
inc
xchg
into
popa
pop
das
xchg
ljmp
mov
shrb
cmp
xor
sahf
test
lds
stos
mov
dec
jb
dec
xor
shrl
insl
aam
mov
cmpsl
and
push
test
xchg
xchg
bound
sub
cmp
in
cmc
nop
dec
inc
ljmp
push
movsb
inc
mov
mov
mov
in
nop
xchg
ret
xor
sbb
in
adc
clc
into
inc
inc
fisubrs
paddw
je
mov
dec
pop
arpl
loope
in
mov
aam
or
xor
jmp
vmread
mov
rcrl
xor
mov
adc
pop
out
xor
int
cmc
outsb
fisubrs
cltd
lock
je
vpshuflw
mov
and
xchg
pop
pop
inc
out
or
dec
pop
sti
outsb
fdivrl
scas
in
push
jp
jnp
lcall
aam
movsl
adc
nop
add
fwait
pushf
xor
dec
mov
inc
ds
jge
xor
sub
jae
cmp
mov
sbb
and
sti
xchg
out
cmp
fimuls
inc
or
bound
pusha
inc
addr16
adc
loop
movsl
ret
inc
or
ja
push
mov
movsl
push
cmp
les
nop
push
mov
adc
push
int
shrl
das
mov
das
cmp
dec
xchg
push
test
into
addl
sahf
add
jmp
cwtl
stos
sahf
int
dec
iret
sbb
hlt
cld
push
js
lret
fcomps
fldl
inc
jo
mov
out
mov
ss
subb
fdivs
sarb
sbb
mov
add
test
les
shll
shlb
lds
mov
shll
outsb
les
stos
test
adc
push
pop
dec
push
testl
push
jb
imul
xchg
scas
dec
fisttpll
jl
push
mov
shrl
mov
jb
jnp
sub
cmp
movsb
mov
notl
lahf
and
sbb
mov
fwait
push
lcall
ss
outsb
nop
cmp
mov
shlb
adc
push
xchg
gs
cld
mov
call
sub
leave
lcall
mov
mov
mov
jae
insb
ret
mov
adc
in
es
fwait
or
nop
subb
xchg
movsb
shlb
leave
sbb
pop
int3
sub
jb
jns
jno
add
jae
test
mov
loope
movsl
mov
stos
lret
xchg
jmp
mov
pop
ficoml
add
xchg
or
cmp
mov
in
arpl
loope
mov
sub
jge
mov
fstps
adcl
dec
jmp
daa
mov
movsb
std
add
jmp
mov
cwtl
scas
push
jmp
test
xor
add
mov
dec
and
jge
sbb
dec
inc
pop
jo
fwait
jno
dec
out
sub
mull
adc
dec
scas
mov
in
cltd
icebp
les
scas
orl
sahf
push
sbb
sahf
inc
cltd
andl
and
shl
in
inc
cs
mov
movsb
jmp
das
test
shll
data16
mov
mov
in
aam
mov
cmpsb
cmp
push
lods
jne
ret
cmp
int
test
mov
loope
dec
push
shll
das
mov
sub
cmp
jp
cld
mov
xor
mov
and
push
daa
xor
repnz
xchg
cmp
cmp
cltd
and
jmp
aam
and
xor
xor
jnp
cmp
imul
pop
insl
mov
lcall
bound
cmc
xlat
push
popa
faddl
inc
les
addr16
xor
xchg
dec
add
mov
cs
lahf
push
xor
mov
fisttpll
push
hlt
gs
icebp
sub
call
ljmp
adc
pop
xor
insl
pusha
cmp
mov
sbb
int3
sbb
adc
clc
outsb
mov
inc
dec
nop
ds
mov
cmp
dec
mov
and
ror
dec
xor
shr
or
lods
pop
and
adc
inc
add
jmp
inc
fwait
lcall
jno
push
push
outsb
cmpsb
out
pusha
jno
cmc
aad
cld
in
mov
and
push
or
add
push
stc
jp
mov
xchg
mov
sbb
mov
xchg
jnp
sbb
mov
jns
jl
je
negl
out
sub
inc
test
sbb
xchg
aad
inc
decl
xor
fsubrl
pop
lds
int3
or
popa
sbb
cmp
in
lea
add
push
stc
xchg
addb
mov
ds
into
lds
push
js
imul
dec
retw
inc
mov
ljmp
and
push
je
loopne
test
sti
xchg
pop
push
fcompl
pop
inc
adc
jp
xor
sub
jmp
lods
mov
lods
test
pop
roll
stos
addr16
std
mov
lock
fdivrl
lahf
pop
jl
mov
sub
shrl
pushf
sahf
xchg
inc
or
sub
sbb
mov
dec
xchg
mov
xchg
xchg
jbe
cmp
lret
mov
pop
cmp
sbb
cmpsb
les
cmp
dec
js
and
add
cmp
or
pop
dec
or
or
mov
not
mov
lock
cmpsl
xchg
jnp
cmp
mov
clc
lcall
push
mov
ljmp
mov
sub
push
adc
sub
mov
stc
push
mov
mov
sub
add
shl
lret
xor
pop
xchg
sbb
mov
add
leave
cltd
mov
into
pop
dec
aad
mov
stos
and
hlt
aaa
xchg
js
xchg
adc
push
shlb
sahf
inc
pop
mov
sbbb
xchg
mov
push
push
jecxz
pop
hlt
adc
and
adc
mov
ret
sbb
bound
test
pop
ja
aad
lcall
mov
pushf
scas
bnd
loop
cmp
jecxz
daa
mov
ret
xchg
jne
cltd
adc
les
imul
loop
rcll
ja
jae
movsl
mov
cmp
push
or
repz
cmpl
out
ret
push
rcrl
push
arpl
stos
aas
mov
insb
fadds
shl
repz
nop
and
int3
sub
adc
mov
mov
popa
xchg
pop
cmpsl
adc
pop
adc
addb
ljmp
xor
je
or
add
movsb
cmp
and
daa
and
arpl
jb
mov
adc
out
cltd
adc
push
jl
lcall
shlb
dec
test
or
pop
jge
fs
insl
cmp
jl
push
cld
jno
push
add
sbb
clc
out
sub
std
xchg
or
xor
sub
mov
lock
lds
add
ja
or
xchg
into
mov
cmp
or
mov
jmp
mov
xchg
jmp
inc
push
mov
mull
add
ds
dec
pop
enter
bound
addr16
pop
mov
and
sbb
clc
lods
push
push
mov
dec
rcll
test
add
cltd
inc
push
add
fldt
jno
leave
in
mov
pop
push
fstp
out
cmp
xor
mov
push
ljmp
xor
in
sbb
roll
bound
mov
pop
add
xchg
adc
adc
ds
shrb
bound
outsb
adc
sbb
fcomip
jl
cs
inc
xchg
and
lea
pop
test
add
push
or
xchg
mov
lret
aam
mov
daa
mov
out
or
insl
cmp
push
rolb
pop
int
addb
rcl
fsubrs
lahf
std
mov
adc
mov
out
in
mov
sbb
push
xor
pop
pop
repz
sub
imul
jne
int3
inc
xchg
out
cli
mov
push
jb
iret
stc
jae
inc
cmpl
mov
mov
adc
sub
mov
mov
jbe
sub
outsl
je
mov
fdivp
iret
pop
jg
roll
mov
push
xchg
fstl
mov
arpl
ret
lret
mov
es
pop
arpl
mov
add
jbe
adc
jg
rol
xor
or
mov
lds
sub
in
insl
inc
pop
call
push
or
jmp
xor
jl
pushf
scas
xor
push
jb
popf
cmc
inc
jo
add
mov
lea
les
add
mov
pop
adc
jno
sub
sub
adc
mov
decb
inc
sub
or
stos
mov
sbb
dec
sbb
dec
test
pop
push
fiaddl
sbbl
js
mov
mov
adc
stos
xor
pop
mov
xchg
push
dec
and
test
mov
jmp
push
ds
xchg
or
cli
fdivl
xchg
stc
adc
addr16
mulb
scas
sahf
sbb
inc
xchg
cmp
out
pop
in
aas
pop
xor
aam
adc
or
rolb
out
jl
pop
jg
xorb
adc
mov
or
dec
js
push
inc
lods
mov
addr16
jae
jge
and
inc
or
movsb
lods
in
xor
jnp
xchg
mov
cmp
push
inc
mov
shlb
xrelease
adc
xor
fimull
aaa
sarb
daa
xchg
mov
outsl
imul
icebp
mov
ja
push
sub
cwtl
sbb
sub
rcr
lods
mov
push
lds
pop
dec
lea
repz
stos
push
push
xor
test
and
dec
push
jo
add
push
push
xor
pop
cmp
icebp
xor
into
mov
and
test
ja
loop
xor
inc
xchg
cmpsl
lret
pop
pop
cmp
mov
scas
xor
outsb
pop
andl
clc
in
popf
sahf
mov
jg
bound
mov
cltd
mov
mov
jnp
pusha
jnp
int
lods
or
ja
mov
sbb
mov
mov
test
int
insb
jbe
jecxz
jecxz
xchg
hlt
lea
and
dec
mov
mov
add
cmpb
cmp
dec
adc
das
jg
aaa
les
jge
mov
lahf
fisubrl
nop
jb
gs
ds
leave
fxsave
cs
mov
sahf
or
cwtl
sar
jb
icebp
ds
sbb
pop
cmc
dec
or
in
aad
stc
lds
pushf
hlt
mov
popf
pop
jb
and
cmpsl
dec
fisttpll
jno
mov
xor
call
mov
xchg
xchg
adc
xlat
repnz
adc
fildl
jne,pt
test
cmp
mov
into
pusha
or
sbb
jb
mov
pop
rcrb
xor
or
lods
dec
inc
pop
cs
or
sbb
xor
and
jl
shl
pushf
push
jns
lahf
aad
repz
insl
mov
fcmovnbe
inc
les
jnp,pn
pop
shll
inc
testl
loopne
and
int
cmc
cmpl
mov
xchg
xor
pop
daa
mov
adc
mov
jle
adc
loopne
sbb
scas
cwtl
inc
xor
mov
pop
ss
or
inc
scas
ret
test
fsubl
idivl
ss
push
test
lcall
shll
dec
mov
push
dec
repnz
cmp
sub
mov
jmp
xor
mov
pusha
test
jbe
lock
add
shrb
rcll
or
in
les
mov
mov
leave
stc
cli
or
imull
pop
out
divl
fimull
pushf
in
push
jns
push
pusha
imul
inc
cli
cmp
cmp
pop
loop
sub
add
mov
cwtl
xlat
pop
pop
mov
lret
jecxz
sbb
test
add
and
or
call
pop
adc
mov
mov
xchg
dec
or
inc
sbb
inc
test
mov
es
xchg
aas
mov
cmp
pushf
adc
inc
xchg
sub
fdivrl
adc
sti
fcomp
fstpt
lret
lret
sbbl
inc
xchg
lods
sub
dec
xchg
or
je
dec
aad
push
std
or
cmp
shll
push
jns
adc
std
xor
add
mov
and
fidivl
cltd
and
pop
cmpsb
inc
mov
outsl
jle
cli
loopne
lods
les
xlat
sbbl
pop
sti
test
add
cmp
shrl
rcrb
cmp
in
xorb
lods
sbb
pop
fnstenv
cmpl
and
xchg
pop
mov
dec
lahf
in
xchg
xor
xor
repnz
repz
aam
adc
mov
aad
xchg
mov
out
rcrl
repz
jmp
adcl
or
or
gs
lret
inc
adc
mov
jle
mov
mov
inc
subl
push
ja
dec
mov
push
inc
lea
insb
and
inc
js
cwtl
sbb
out
cmc
addl
cltd
mov
in
int
fstl
dec
lcall
xor
std
add
enter
mov
jae
pop
lock
jp
lds
mov
jb
adc
lea
imul
inc
rcrb
shll
movsl
gs
xchg
sub
sub
leave
or
mov
mov
mov
aas
pop
fidivrs
out
push
fcompl
mov
outsl
out
movsl
mov
in
mov
inc
sub
lret
movsl
pop
sbbb
inc
add
or
loopne
leave
cmpsl
sbb
movl
push
sbb
push
mov
cld
jbe
rcll
in
push
cmp
adc
rcr
lds
shl
pminub
jns
sub
clc
cltd
mov
xchg
add
fistpll
jmp
imull
inc
sbb
sbb
cmp
sbb
outsl
push
mov
lret
jb
popa
cwtl
cld
or
jl
cmpl
fsub
mov
fwait
sbb
sbb
in
xchg
lea
xor
ss
sbb
pop
inc
fmuls
ja
arpl
pushf
mov
int
cs
popf
mov
cmpsl
fdivp
pop
psubd
ficomps
dec
cwtl
jns
adc
mov
sahf
rclb
jle
movsl
ja
out
andl
inc
es
ret
sbb
pop
xorl
fs
mov
cmp
arpl
adc
or
jno
loop
and
inc
push
sbb
or
sbb
jbe
mov
xor
sbb
out
aas
push
in
xor
mov
mov
cmp
insl
add
jae
push
mov
xor
jl
gs
inc
test
mov
sub
sub
sti
outsb
call
xchg
icebp
fdivs
pop
filds
pop
pop
notb
lds
aas
sbb
ljmp
rcl
scas
and
jg
cld
outsl
iret
pop
jns
movsb
mov
cmp
loopne
adc
test
scas
andb
mov
push
jo
jnp
push
mov
mov
adc
push
loopne
lods
mov
pop
jns
leave
test
daa
xor
push
xchg
lahf
repnz
out
into
jmp
orl
sti
insl
push
std
or
jns
sti
ret
lea
div
adc
dec
xchg
xchg
lea
sysenter
push
and
rclb
aas
sbb
cmp
mov
loop
pop
cmp
scas
stos
or
enter
cwtl
lods
jp
inc
hlt
in
pop
mov
repz
dec
or
lods
pop
inc
pushf
pusha
mov
mov
dec
xchg
mov
movsl
pop
mov
jecxz
out
pop
jb
mov
hlt
loope
mov
mov
adc
add
mov
in
into
adc
xchg
sub
xchg
orb
insb
mov
and
dec
add
pop
loopne
jp
addr16
jno
push
jmp
pop
adc
movsb
fdivs
jle
sub
cltd
lock
add
add
out
add
iret
aaa
push
jae
cwtl
mov
arpl
or
clc
cmp
lcall
inc
pop
add
imull
or
and
cmp
cmp
inc
dec
inc
mov
mov
movsb
pop
mov
cmp
jecxz
out
shrb
inc
aad
rcll
andl
addr16
xlat
jne
mov
fadds
sub
jb
xchg
mov
mov
lock
mov
das
sub
pop
ret
das
inc
inc
rcl
sbb
cmp
sbb
outsb
fsubs
lock
shll
mov
push
sti
mov
or
push
add
push
out
ret
fidivs
ja
mov
mov
cmc
inc
xor
xchg
scas
imul
xchg
jno
stc
fisttpll
sti
jp
add
add
cwtl
inc
inc
push
push
cs
frstor
and
fucomi
cmp
sbb
repz
mov
push
popa
popa
xchg
jb
leave
adc
push
outsb
cmp
adc
roll
test
test
cmpsl
xor
ret
adc
lods
and
aam
pop
pop
imul
dec
sbb
pop
stos
cs
popf
fcmovnu
adc
gs
xchg
sti
lcall
jp
scas
in
insl
shlb
jo
dec
jno
cli
push
jb
sahf
pop
or
mov
jmp
inc
inc
dec
aaa
xchg
sub
repnz
pop
jns
mov
inc
or
adc
fdivs
dec
stos
lahf
or
push
lcall
pop
xchg
fwait
rclb
mov
adc
jnp
nop
lds
mov
fs
mull
cmc
test
je
imul
lcall
jecxz
xor
shr
sbb
push
lcall
xchg
adc
cmp
push
push
and
out
mov
sahf
icebp
sub
jnp
popf
pushf
cmc
jae
enter
lret
or
lds
negl
dec
testl
inc
iret
decl
dec
jl
jecxz
or
fwait
sub
iret
sarb
stos
inc
sub
cmp
jg
cmp
or
jle
dec
mov
dec
pop
jae
pop
mov
negl
inc
pop
loop
sub
rcr
mov
fcomps
sbb
and
cmpsl
aam
push
leave
shlb
dec
sbb
fidivs
and
out
add
pop
int
push
mov
stos
push
rcr
sub
aaa
aaa
xlat
repnz
add
cmp
push
pop
add
in
repnz
shrb
push
inc
int3
or
sub
mov
ficomps
test
pusha
inc
cltd
sbb
and
dec
xlat
mov
fisubs
and
or
mov
inc
in
pop
dec
push
cmp
mov
cmc
jo
adc
rcrl
dec
imul
cli
movsl
addl
out
and
or
outsl
pop
mov
add
inc
xchg
in
jae
iret
push
call
or
movsb
insl
push
mov
pop
arpl
movsl
xor
mov
adc
push
inc
es
cmp
ret
push
int
sub
mov
and
or
mov
or
mov
sub
jg
stos
pushf
dec
popa
jnp
fisubs
push
xor
sbb
orb
fdiv
add
sub
push
icebp
test
push
leave
pop
sub
mov
ds
int3
int
jge
cmp
cld
in
dec
pop
push
sbb
out
fbstp
out
sbb
sub
xor
sbb
imul
ljmp
mov
inc
cmp
out
loope
mov
jo
xchg
and
mov
xchg
outsl
add
adc
pop
ss
push
ds
cmpl
cwtl
xchg
push
cmp
and
mov
mov
mov
aaa
scas
jns
pop
push
scas
and
push
xchg
xor
test
adc
push
adc
push
mov
ffree
outsl
dec
int3
addr16
nop
test
mov
pop
xchg
sti
pop
mov
icebp
mov
movsb
leave
sbb
xchg
xchg
add
daa
mov
nop
out
dec
xor
inc
in
mov
popw
cmp
pop
push
inc
lods
jbe
aas
insl
xchg
push
mov
lahf
mov
loopne
cmp
jne
xor
fwait
sub
mov
test
mov
xchg
lret
stos
sub
pusha
mov
test
scas
sbb
ljmp
adc
sbb
int
xor
cmc
aas
mov
in
cmpsb
icebp
mov
insb
pop
xchg
xor
imul
aas
cmp
icebp
dec
hlt
lret
fnstenv
mov
and
xchg
mov
and
mov
ret
in
adc
ret
push
pop
jbe
xor
out
inc
lret
mov
mov
fisubl
xchg
gs
ljmp
lock
or
orb
fldt
mov
adc
out
mov
arpl
mov
pop
inc
mov
mov
cmp
mov
imul
sub
mov
les
cmp
mulb
add
mov
mov
mov
add
adc
cmpsl
or
test
stos
nop
mov
dec
movsl
dec
inc
add
ds
ja
pop
pop
pop
push
popa
adcl
std
inc
bound
mov
and
mov
adc
dec
cmp
inc
repz
stc
xor
loop
jbe
mov
lods
pop
je
push
pop
xor
and
les
movsb
mov
in
mov
dec
and
inc
sahf
jne
dec
enter
fdivrp
and
bound
pop
fnstsw
hlt
or
movsb
or
xchg
adc
sub
lret
ret
or
aaa
xor
fsubs
adc
mov
cmp
ret
add
pop
fcmovu
dec
push
lret
lahf
cmp
test
sub
mov
clc
stc
mov
sub
repnz
fbld
insl
jp
lcall
add
mov
stos
daa
frndint
test
lea
scas
int
repz
aad
cmp
lods
rorb
xchg
fs
xor
clc
or
popf
nop
fisubl
daa
jb
daa
inc
mov
es
xchg
ja
shlb
sti
test
neg
idivl
pop
mov
dec
jbe
mov
mov
sbb
scas
xchg
xor
loop
push
add
and
data16
xchg
cmpl
out
push
jo
push
mov
pop
pop
sahf
dec
shll
addr16
mov
mov
hlt
fidivs
pop
jno
aad
test
hlt
push
inc
push
fwait
mov
addr16
jno
dec
or
shrb
pop
out
dec
popf
in
dec
punpckhbw
test
and
clc
mov
pop
dec
ret
sbb
adc
xor
fs
ljmp
clc
jbe
into
mov
mov
sbb
cmpsl
movsb
fincstp
dec
cmp
cmp
and
lret
jp
mull
test
mov
enter
test
in
cltd
mov
icebp
pop
xor
jnp
xchg
test
pop
shlb
pop
inc
ds
test
xchg
mov
add
sbb
aas
xchg
in
popa
fdiv
out
into
cmpsl
in
adc
fs
into
leave
push
add
bound
inc
scas
jb
dec
pop
mov
jecxz
adc
xor
call
push
lds
xchg
lock
or
xchg
int3
inc
add
std
cmpsb
push
jmp
xchg
push
ret
inc
nop
xchg
cmpsl
cltd
push
mov
outsl
add
daa
cli
mov
sbb
shll
mov
loop
rcrb
mov
mov
test
jne
ja
test
xchg
pop
add
shrb
or
push
inc
cmp
fldl
aam
inc
pusha
lods
roll
data16
clc
push
not
in
out
adc
lds
inc
es
nop
xadd
mov
daa
js
xor
jmp
mov
pop
mov
lods
leave
dec
dec
outsl
mov
hlt
push
scas
ljmp
stos
fcompl
out
mov
fsubrl
push
dec
mov
cmp
pop
hlt
stos
jns
and
or
mov
lea
lods
add
mov
inc
mov
cltd
addb
daa
int3
add
test
imul
decl
cmp
add
cs
jmp
lahf
or
and
push
mulb
inc
sahf
xlat
jae
adcb
fcoms
jne
clc
add
ret
add
aaa
mov
pop
std
rorb
jne
pop
xchg
aas
dec
subl
fwait
cmpsl
sub
push
jnp
in
mov
fwait
xor
jg
mov
dec
sub
add
jle
dec
int
adc
outsl
mov
rcll
inc
and
cmp
addr16
adc
lret
sbb
or
mov
jnp
popf
leave
inc
test
js
jg
adc
iret
out
push
xchg
jecxz
or
movsl
pop
pop
pusha
xorb
dec
test
into
pusha
pop
or
rcl
lcall
and
inc
and
sbb
js
cmpsl
inc
push
xor
pop
sub
sbb
jmp
arpl
enter
pop
mov
xlat
inc
or
dec
cmp
aam
fsubr
movb
push
pop
inc
jl
jg
pop
pop
mov
push
ds
add
int3
stos
inc
inc
adc
out
and
test
lahf
repz
popf
js
aaa
xchg
adc
call
lods
scas
pop
lods
sbb
xor
or
repnz
xor
xor
push
inc
cmpb
push
pop
dec
and
divl
ds
cmp
fs
sahf
in
adc
jae
in
pop
cmpsl
sbb
jecxz
mov
dec
fisubrl
imul
fildll
mov
pop
inc
mov
arpl
inc
fs
loope
lock
adc
jl
mov
imul
movl
xchg
adc
cmpsl
filds
pop
sbb
push
inc
mov
cmp
aam
into
mov
cs
das
dec
mov
call
sub
sbb
cli
notl
cmp
or
push
mov
pop
adc
orb
cld
mov
hlt
pop
adc
divl
pop
pop
fcoml
xor
jge
inc
mov
mov
ss
xor
gs
subb
push
idiv
shll
rol
cli
int3
loop
sub
and
insl
and
lock
mov
enter
pop
dec
mov
ret
sahf
sub
insl
push
dec
mov
gs
loopne
push
sub
cmpsb
insl
xchg
hlt
psubd
sti
jno
push
push
sbb
adc
mov
ljmp
shl
and
cs
hlt
pop
insb
xor
lods
dec
test
jno
sub
cmp
rclb
xor
xchg
xchg
xchg
pushf
mov
shlb
pop
jge
pushf
stc
fs
pop
inc
addl
pop
and
jp
push
pushf
or
sbb
lds
sbb
inc
jecxz
or
out
add
xchg
or
mov
jle
pushf
in
insb
mov
repnz
mov
mov
fistpll
sbb
sub
insb
pusha
adc
sub
mov
cwtl
movsl
xor
testl
insl
jmp
adc
fsubs
xor
fcoms
dec
sub
jns
lret
mov
ljmp
cltd
adc
add
repnz
or
out
add
mov
xchg
imul
add
inc
mov
xchg
push
outsb
add
gs
mov
pop
int
sub
js
push
jmp
mov
adc
mov
out
aaa
mov
xor
inc
jne
push
cmpsb
shl
xor
adc
mov
mov
adc
fdivs
arpl
jo
fisubrs
mov
fwait
loopne
pop
mulb
aaa
push
xor
dec
mov
stos
push
xchg
ror
nop
xchg
mov
insb
dec
and
shl
imul
xor
jg
enter
movsb
inc
ja
popa
sbbb
test
sub
out
xor
jl
mov
pushf
xchg
nop
xchg
rol
add
dec
rcrl
push
and
cs
rcrb
jbe
scas
and
out
xchg
jmp
hlt
int3
sbb
jg
xorb
arpl
xchg
pop
add
test
int3
and
xchg
loopne
sub
xlat
sub
push
add
jge
loope
ret
pop
pushf
outsl
adc
pop
xor
ret
lods
xor
int3
mov
mov
or
aaa
push
imul
je
sbb
and
xor
push
pop
jle
xchg
or
addr16
add
int
xchg
in
adc
xchg
sbb
fnstsw
out
cwtl
int3
movsb
push
aad
int
imul
jmp
pushf
jnp
imul
or
inc
test
cmp
shll
stos
sti
push
cld
xor
in
or
xchg
idivb
sbb
cld
fisubs
sub
cmc
rorb
mov
xchg
dec
sbb
icebp
movsb
lcall
push
jl
int3
push
ja
cmp
jl
fnstenv
popf
inc
cmp
pop
jno
arpl
xchg
xchg
push
cwtl
xor
mov
sahf
das
pushf
in
fistl
dec
scas
in
minps
push
sbb
ljmp
insl
out
call
sbb
ret
or
xlat
push
sbbb
xchg
and
and
mov
inc
loopne
aad
lods
mov
loope
pushf
sbb
or
xor
inc
mov
jle
add
arpl
xchg
aas
dec
inc
mov
loop
lods
in
sti
sbbb
add
jle
divl
sub
or
pop
xchg
mov
push
jne
aas
adc
xchg
cld
mov
jne
pop
popa
dec
sbb
sar
sub
mov
mov
push
loopne
mov
xchg
test
pop
adc
push
inc
sub
fdivl
sub
rcrb
cmp
sbb
pusha
jne
in
leave
mov
pop
aad
add
inc
lds
clc
flds
mov
mov
mov
mov
int
pop
fcomps
aaa
inc
inc
stos
pop
leave
push
mov
ss
mov
cmp
xlat
dec
mov
xchg
js
sub
and
jmp
jl
sti
inc
pop
out
daa
arpl
xor
es
mov
ja
mov
test
cmpsl
imul
in
pop
push
loope
repnz
xor
loopne
mov
xabort
fstl
jp
adc
sbb
js
sub
sub
into
ljmp
outsl
fwait
jp
push
and
fidivrs
hlt
mov
pop
popf
lock
int3
out
jnp
inc
jnp
sarl
and
add
adc
mov
inc
sbb
dec
fwait
jge
loopne
sbb
scas
jbe
aaa
or
hlt
mov
ss
arpl
loopne
or
fwait
mov
out
lds
sbb
stc
inc
fsub
add
hlt
mov
mov
cmp
xchg
loope
ds
repz
jbe
add
sahf
popa
jl
stos
adc
cmc
scas
pop
lret
shrl
push
or
sbb
mov
xor
popf
jmp
add
add
mov
arpl
and
popf
and
addb
int3
pop
or
jle,pn
bound
xchg
movsl
sub
aad
jp
mov
or
push
fdivrs
pop
mov
dec
lret
jp
popa
jne
or
shll
jns
mov
xor
sbb
lock
out
ja
addr16
and
sub
fwait
mov
sub
imul
push
das
sbb
push
in
inc
dec
enter
xchg
jbe
das
mov
testl
into
outsb
push
mov
sbb
or
cli
cmc
orb
push
ja
pop
xor
mov
out
xor
sbb
sub
dec
inc
fcomps
call
mov
sub
cmp
cmpb
negb
or
popf
stc
or
add
push
push
into
jle
mov
jae
cld
mov
stos
cs
push
xor
mov
bt
in
popa
cld
pop
movsl
pop
and
dec
mov
lods
rcl
adc
popf
testl
pop
dec
adc
popf
mov
sbb
faddl
or
xlat
mov
pop
test
sbb
enter
cwtl
icebp
dec
jge
dec
or
mov
mov
jne
int3
xchg
push
int3
out
inc
ss
add
mov
or
clc
shlb
ret
mov
addl
sbbb
lret
scas
mov
aaa
push
xor
push
insb
mov
sub
push
add
rorl
aam
les
out
push
fmul
push
push
add
sub
jb
daa
xor
push
pusha
jmp
mov
sahf
repz
pop
push
mov
adc
jmp
or
jg
cli
cwtl
sbb
mov
jge
lret
testl
and
gs
test
ja
insl
inc
dec
pop
and
mov
pop
fmul
or
aad
adc
icebp
add
aad
pop
mov
je
fadds
or
push
lock
cwtl
jo
xchg
dec
popa
jae
enter
inc
pop
mov
xchg
ds
aad
cmp
cli
sbb
lahf
sbb
icebp
popl
aad
sub
mov
addr16
push
jmp
cwtl
and
add
mov
popf
pop
mov
jp
in
shll
pop
mov
sub
cmc
fildl
stos
lods
push
mov
into
lret
add
sbb
in
clc
cmp
jge
mov
in
push
fdivs
pop
jg
add
dec
and
push
dec
pop
testb
jmp
cltd
mov
add
xchg
sub
mov
ja
inc
ret
cld
jmp
cmp
pop
lock
jg
repnz
test
dec
in
mov
in
sti
inc
fmull
xchg
xchg
pushl
dec
cs
shlb
push
mov
les
cmp
pop
int3
dec
imul
test
sbb
dec
push
push
cltd
inc
add
xchg
push
fnstenv
mull
jnp
out
stc
mov
jle
jo
icebp
push
mov
mov
mov
stos
dec
std
in
mov
or
enter
xor
mov
mov
insl
mov
xchg
pop
out
mov
dec
push
js
js
adc
loope
sub
inc
cmp
mov
push
jle
cs
push
outsb
movsb
push
cmp
jbe
das
in
pop
js
mov
icebp
jmp
mov
movsb
dec
frstor
sub
adc
pop
and
sbb
ret
and
cmc
or
add
and
scas
cmp
mov
push
stc
sub
mov
aas
aaa
into
push
enter
test
cmp
lods
ja
in
std
pop
lcall
test
mov
daa
mov
addr16
adc
popf
adc
stos
jl
mov
dec
test
arpl
jo
mov
std
sub
shrl
les
sti
iret
pop
and
jbe
in
out
dec
jno
jge
cmpsl
cwtl
lods
fbld
mov
movsb
ror
mulb
xchg
bound
pushf
test
lds
pop
popa
adc
bound
and
mov
bound
lret
fildll
xchg
inc
add
clc
out
roll
xor
into
pop
jo
mov
ret
in
lahf
jmp
cmpsl
mov
inc
adc
sub
cli
stos
or
sbb
jno
mov
lret
pusha
add
int
jnp
lods
shll
lods
gs
inc
std
mov
in
fucomp
ffree
pop
or
add
pop
adc
push
fwait
pop
mov
and
pop
fldl
scas
inc
insb
dec
cld
xlat
adc
repz
pop
xchg
std
cmc
shlb
das
cmc
dec
xor
jl
xchg
add
cmc
loopne
daa
pop
sub
cmp
xchg
fadds
imull
pop
fmull
inc
rcrl
mov
pop
daa
sbb
aas
ds
sbb
cwtl
fdivl
xorl
testl
add
jnp
rorb
fucomi
icebp
test
dec
cmp
out
ret
shll
xchg
fldenv
shrl
out
lock
shlb
xor
test
add
cmp
loop
dec
xchg
insb
loope
loop
rorl
sbb
pop
out
xor
stos
ret
sbb
adc
aad
adc
cwtl
xchg
or
movsl
mov
jecxz
inc
xlat
cld
in
cmpb
xor
push
inc
mov
push
std
fstl
push
adc
mov
cmp
outsl
xor
or
jb
jl
aas
jmp
aas
mov
mov
pop
fwait
xor
lds
hlt
xchg
add
dec
sbb
xor
adc
into
or
or
inc
push
sbb
lea
mov
jb
inc
or
dec
cmp
insb
cmp
sbb
add
ficoms
fistpl
fsubr
inc
cld
pushf
cwtl
outsl
cld
fdivrs
dec
cs
mov
cli
push
aas
fsubrp
in
mov
add
repz
testb
jne
add
imul
pop
je
stos
aam
sbb
dec
notl
or
lods
and
cmp
test
cmc
add
or
call
lahf
mov
and
jo
add
cltd
or
loop
mov
in
mov
loopne
pop
sti
mov
and
mov
shl
xor
es
and
mov
shll
insb
xchg
xor
adc
sbbb
and
outsb
negl
jbe
fisubrs
call
imul
lds
add
cwtl
test
sub
jg
inc
inc
int
in
xchg
xchg
into
push
and
pop
test
and
mov
das
sbb
daa
in
xlat
cmc
inc
ror
add
inc
add
cmp
outsb
divl
add
jl
sub
sbb
scas
addl
push
sub
sub
or
insb
push
inc
into
inc
dec
cmp
mov
lret
test
scas
cmp
pop
lods
jo
lock
sbb
add
mov
or
stos
dec
mov
or
repnz
adc
pop
push
test
xabort
idivl
jle
mov
cmp
cmp
push
inc
xor
xchg
adc
xchg
icebp
add
fs
mov
lods
leave
in
ja
mov
mov
enter
mov
adc
add
pop
mov
data16
jmp
sarl
lods
cmp
out
jg
cmpsl
fistpl
stos
mov
arpl
ja
movsl
imul
add
insl
or
popf
push
scas
movsb
rcrl
sub
not
cmp
popl
insb
mov
cmpsl
push
aad
aad
imul
push
test
mov
cmp
jae
inc
das
mov
cmp
sub
call
ret
sti
dec
popf
imul
fwait
push
daa
mov
sub
dec
in
lret
add
ljmp
fldt
and
push
dec
aam
stc
dec
push
dec
jo
mov
adc
push
cwtl
push
cmpl
pop
push
pusha
pop
rorl
mov
xchg
jns
mov
shrb
or
adc
add
aam
pushf
fistl
imul
dec
sub
or
xor
push
push
and
jmp
insl
jl
lods
ja
mov
test
stc
pop
lcall
out
sarb
xchg
mov
int3
iret
adc
idivl
or
push
enter
add
repz
loopne
stc
stc
pusha
stos
dec
pop
and
movl
ja
popa
or
push
cmp
addr16
or
fsubr
mov
jp
pop
xchg
xchg
and
xor
pushf
dec
mov
js
sti
fldl
mov
stos
popa
aaa
push
loopne
shll
sbb
js
xchg
mov
mov
and
lods
push
xor
and
dec
movsl
push
js
out
xor
out
in
enter
roll
cwtl
jecxz
cmp
sub
dec
sub
add
jecxz
jbe
mov
movsl
pushf
fwait
xchg
mov
pop
subb
push
cli
sbb
lret
test
addr16
or
inc
pop
xor
lods
ret
int
jne
mov
aam
mov
lock
mov
cmp
std
push
push
mov
push
fidivrl
test
repnz
pop
lcall
stc
push
pop
add
pop
cmp
or
fisubrs
adc
fsetpm(287
xchg
notb
fstl
mov
inc
or
mov
lods
outsb
xlat
and
das
add
and
in
stos
mov
and
pushf
and
iret
add
mov
cmp
add
mov
aad
mov
inc
scas
das
add
jbe
dec
stos
sub
xchg
clc
cmp
and
jo
cmp
sub
shll
stos
cmp
daa
cmp
xchg
inc
sahf
test
push
rcrb
mov
mov
call
push
push
pop
cmpsb
cmp
mov
lret
pop
sbb
loope
sbb
dec
data16
cmp
mov
mov
pushf
adcl
sub
xchg
mov
shlb
push
and
add
sbb
sub
lods
dec
data16
fdivrs
dec
adc
mov
pop
in
xor
push
roll
sub
mov
gs
push
pusha
outsl
mov
pop
mov
pop
std
inc
pusha
enter
xchg
loope
stos
dec
es
cwtl
pop
inc
stos
mov
mov
dec
pusha
int3
push
inc
lods
lcall
jae
nop
mov
dec
inc
sub
mov
int3
pop
lret
repnz
lods
push
frstor
mov
add
push
adc
lcall
sub
jmp
mov
test
xchg
lret
arpl
mov
out
inc
xchg
cmp
cmpsb
and
or
jmp
scas
jp
bound
out
mov
call
out
dec
cmp
xor
xor
mov
push
jae
lret
lahf
aad
mov
enter
out
mov
shlb
int
and
pop
mov
pop
xor
ret
sub
pop
insb
outsl
xchg
mov
xchg
or
mov
jno
hlt
cmp
xchg
fcoms
mov
mov
push
and
gs
gs
out
sub
std
scas
xchg
pop
mov
mov
push
aam
dec
les
cli
fcoms
mov
aam
int
repz
icebp
iret
repz
sahf
jmp
adc
cmp
pslld
hlt
jo
xchg
movb
ss
rorb
insl
lret
push
cmp
pop
aad
popf
movsb
dec
test
push
std
pop
hlt
sub
iret
mull
xchg
add
scas
test
loopne
imul
jne
sar
adc
adc
rcll
sbb
or
xchg
mov
xchg
sbbl
sub
into
mov
dec
push
mov
sbb
pop
add
add
jl
cmc
in
sbb
inc
push
mov
dec
shrl
pop
xchg
jns
movsb
lods
xchg
in
cmp
jg
leave
push
popf
hlt
jne
lea
cmp
out
sub
out
nop
sbb
inc
sbb
out
and
fnstenv
lcall
push
mov
rol
sbb
push
out
scas
sub
dec
cmp
cwtl
insb
xchg
div
in
pop
adc
push
aas
cmp
scas
sbb
adc
add
jne
sub
xor
pop
scas
andl
xor
imul
dec
stos
push
pop
aad
xorl
push
icebp
xchg
xor
xchg
adc
fwait
test
lock
in
ljmp
inc
inc
stos
out
gs
and
cmpsl
call
daa
xor
pop
inc
mov
pop
insb
out
add
xchg
cmp
pushw
bndldx
pop
xchg
int
dec
and
mov
pop
mov
pop
add
out
out
stos
push
mov
out
jne
sbb
mov
out
test
push
and
stos
add
stos
jle
mov
cwtl
push
test
and
jmp
bound
dec
stc
or
sub
pop
out
out
test
adc
mov
aam
dec
jmp
xchg
int
mov
xchg
sub
mov
push
xor
test
bound
sub
or
std
or
xor
jp
xchg
dec
jo
not
push
push
inc
and
lds
xlat
lret
cs
stos
mul
pop
pop
insb
jmp
pop
popa
cwtl
mov
mov
xchg
rclb
lret
inc
jge
pop
push
push
out
pop
mov
ljmp
push
xor
cmp
add
xor
inc
ds
sbb
pop
es
push
test
mov
inc
pusha
inc
cmpsl
into
dec
add
lock
pop
lock
cltd
add
mov
insb
push
int3
and
push
fnsave
jbe
roll
sbb
fmull
leave
imul
jnp
jecxz
push
xchg
js
cmp
mov
mov
cmc
jmp
dec
inc
sbb
xor
cs
or
movsb
xchg
sbb
pusha
cltd
jbe
or
call
xor
fdivl
movsb
out
out
add
pop
push
sahf
and
jbe
cmp
idivl
sbb
test
pop
imul
mov
jnp
mov
jle
ljmp
les
shll
push
and
push
notl
jp
hlt
aas
movsb
sub
mov
scas
xchg
dec
or
and
jmp
mov
inc
mov
fbld
in
ficompl
in
inc
daa
sahf
in
xchg
pop
jno
movsl
scas
fidivs
clc
movsb
sahf
pop
inc
bound
enter
cmc
mov
push
sub
in
push
cmp
loope
pop
push
jae
xchg
mov
lcall
out
pusha
lcall
outsl
push
fs
pop
cld
jge
mov
and
ltr
ljmp
fwait
sti
add
mov
push
sub
addl
and
pop
mov
mov
out
mov
adc
inc
pop
loope
dec
push
xchg
fidivrs
das
fcomi
xlat
inc
iret
mov
or
rcll
hlt
bound
cmp
pop
push
rcr
iret
push
adc
cmpsb
jg
or
cmpl
ss
jo
pop
notl
lods
pop
shlb
inc
dec
pusha
cli
xlat
pop
push
cmc
sbb
dec
into
test
mov
insb
lock
mov
test
push
dec
adcb
jo
jbe
mov
or
cmp
add
mov
je
push
imul
mov
ja
pop
js
mov
sbb
fchs
jno
cmp
mov
jmp
test
mov
push
or
dec
cmp
mov
sub
data16
jge
and
cltd
roll
xor
xchg
ficomps
cmpsl
cltd
insb
loopne
in
jmp
sub
pop
xor
mov
jge
aaa
fs
and
jbe
or
ds
adc
and
jle
push
jmp
jle
aam
in
adc
movsb
pusha
shlb
popw
push
or
roll
scas
repnz
add
pop
fmull
cwtl
repnz
push
pushf
jle
jae
jns
insl
mov
sub
cmpsl
inc
call
negb
insb
jbe
adc
inc
sub
mov
xchg
xchg
jne
cmp
mov
xchg
out
push
xchg
sub
outsl
xchg
sbb
inc
orb
in
adc
enter
mov
ror
int3
xor
jo
push
mov
xor
xchg
dec
stos
dec
push
ljmp
daa
jo
lock
mov
cs
xchg
inc
movsl
and
dec
cmp
inc
mov
pop
dec
sub
sahf
jbe
ljmp
jno
mov
push
sbb
and
outsl
mov
stos
sbb
fs
fimull
in
cmp
adc
add
js
inc
sbb
adc
or
sub
push
ret
or
lea
mov
and
imul
mov
int3
popf
in
sahf
outsl
and
inc
lods
into
ja
stos
cmp
test
jmp
xchg
inc
mov
and
data16
mov
pop
dec
movl
mov
dec
insb
call
lret
mov
jbe
jbe
pop
add
inc
push
jbe
imul
leave
movb
mov
fcoml
pop
add
js
clc
mov
or
fistpl
cmp
aad
pop
lret
inc
lods
cmp
and
subl
outsb
nop
or
lahf
mov
fisttpll
loope
lret
mov
test
or
or
test
push
clc
std
retw
xchg
mov
nop
push
push
stc
or
xor
in
sbb
jecxz
jne
xor
mov
in
and
std
dec
mov
cwtl
mov
nop
sbb
or
leave
dec
add
jp
xchg
lahf
dec
add
xor
inc
push
or
add
jmp
lcall
ret
repz
popf
pop
add
cmp
ljmp
adc
pop
mov
inc
out
sub
push
sbb
sbb
adc
jo
xchg
imul
cmp
mov
mov
push
dec
sti
mov
pop
ss
stc
mov
inc
pop
fwait
mov
sbb
fst
or
xchg
xchg
es
dec
dec
xchg
inc
fnstsw
or
jle
jo
pushf
test
and
and
push
cmpsl
mov
jo
cld
icebp
int3
xor
mov
xor
fwait
sarl
icebp
sub
mov
rcll
cmc
pop
subps
neg
mov
inc
mov
sub
jle
sub
pop
popa
mov
or
imul
ljmp
mov
mov
out
dec
sbb
pop
es
in
lcall
ret
mov
lods
test
repz
jbe
or
or
call
xchg
roll
scas
lods
leave
fdivrs
add
aas
ret
shr
pop
nop
cwtl
jns
fstl
lahf
push
out
arpl
sbb
stos
fimull
aas
xor
in
pusha
pop
leave
int3
mov
add
sti
cmc
add
mov
call
fdivrl
xchg
adc
adcl
lcall
iret
add
xchg
pop
push
fidivs
sub
jl
rcrl
xchg
idivl
testl
mov
arpl
pop
pop
shl
cmp
je
enter
dec
test
mov
add
shll
jge
in
pop
xchg
gs
je
popf
mov
gs
jo
push
sub
inc
push
jmp
jo
out
pop
add
into
jmp
pop
ss
jg
add
add
dec
jb
fcmovb
dec
cwtl
ret
rolb
fisubrs
je
mov
out
lcall
aas
adc
in
mov
xor
inc
mov
sub
in
mov
out
ljmp
push
inc
shll
jnp
pop
div
push
daa
adc
enter
fsubp
clc
orl
xchg
cmp
adc
jmp
cmp
out
shrb
xchg
into
aam
mov
movsb
jg
cmp
aas
out
ja
xchg
add
lods
mov
mov
cmp
insb
sub
mov
xchg
adc
inc
mov
xor
jns
mov
push
mov
pop
add
dec
mov
push
dec
jle
mov
pusha
and
rorl
sub
insl
dec
sub
mov
ds
pop
insl
loop
stc
mov
loope
add
push
jg
pop
xchg
xchg
sub
fisttps
adc
add
add
inc
js
push
fistl
mov
outsl
das
mov
xor
rcl
xchg
mov
shrb
pop
or
stos
movsb
mov
mov
jbe
push
int
inc
adc
and
jl
pop
rol
jle
push
add
pop
hlt
pop
or
fwait
in
in
icebp
sti
lea
mov
repz
test
test
pop
mov
pop
out
out
sub
out
cmp
roll
std
std
jae
add
xor
and
lret
adc
stos
dec
push
lds
sbb
or
adc
pop
jb
lds
mov
inc
js
iret
test
xor
mov
iret
and
daa
sbb
xor
imul
loope
jns
push
in
insl
pop
xor
pop
xor
fwait
pushf
push
call
notb
cltd
lods
mov
mov
cli
int
lds
and
sub
fs
mov
ljmp
xchg
or
les
ret
lea
enter
sbb
out
jb
fcomps
out
sbb
insb
mov
push
xor
int3
jl
cmp
cld
leave
pop
jne
bound
mov
push
scas
scas
or
addr16
jne
shlb
imul
call
ja
cmpsl
jnp
push
jp
inc
cltd
bound
fisttpl
and
push
xchg
xlat
shl
jbe
int3
int3
out
idiv
gs
jmp
and
dec
orb
std
sbb
fwait
cmpsl
cmova
arpl
mov
jg
loopne
mov
js
jno
repz
mov
mov
fwait
xchg
orl
pushf
pop
icebp
test
dec
cmp
jmp
xchg
pop
mov
push
lea
or
das
imul
movl
mov
fldl
lock
shrl
jg
insb
xor
or
sub
out
mov
push
cmp
aam
mov
jne
push
or
out
dec
jns
add
cmp
outsl
or
and
cmpsl
sub
aaa
jb
add
fdivrs
js
fdivs
add
test
cmpsl
sarl
pusha
mov
cld
cld
nop
mov
xor
jo
es
sbb
cmpsb
dec
int
inc
mov
lahf
push
mov
adc
jns
xor
loopne
mov
or
and
mov
cltd
movsb
outsb
push
lds
sbbb
in
push
push
mov
mov
cli
lahf
push
mov
iret
ds
cmp
js
cmp
pop
outsb
pop
lods
mov
and
call
lods
insb
pop
je
js
pop
sbb
mov
sbbb
je
cmp
sbb
fistpl
test
arpl
mov
fs
dec
lock
ds
mov
push
call
fcomps
pop
pop
addr16
iret
sbb
inc
fdiv
inc
fstl
push
add
xorl
or
cltd
outsb
xchg
sets
push
xor
push
jae
lods
outsb
push
and
xchg
inc
sahf
jp
jno
mov
mov
jbe
pop
int3
fistl
popa
add
xchg
pushf
sbb
imul
mov
rolb
cmpsb
addb
jp
int
adc
dec
jb
fisttpl
cmp
jb
std
dec
xchg
in
adc
andl
xchg
test
cmp
loope
dec
pop
adc
adc
nop
push
in
repz
movsb
fcompl
stc
fmull
adc
mov
and
out
xlat
sbb
in
fdivrs
sbb
les
sahf
pop
adc
inc
jge
mov
ja
xchg
xchg
inc
insl
jmp
cmp
sbb
das
sub
xchg
xchg
mov
shl
or
fwait
stc
adc
cmp
push
or
mov
xchg
adc
test
rol
pop
add
pushf
sub
pop
xchg
inc
jne
push
punpckldq
adc
pop
pop
xor
adc
dec
push
sti
sahf
lcall
fwait
std
jno
inc
push
int3
imul
cmp
mov
fnstsw
data16
call
sahf
xchg
shlb
pop
cmp
test
jge
mov
xor
cmp
popf
mov
mov
add
or
mov
cltd
or
cli
daa
jl
das
xchg
mov
stos
push
jne
ret
mov
shlb
or
sub
sahf
sub
and
push
inc
inc
mov
movups
jno
aas
shrb
ds
push
pusha
mov
sbb
xorl
scas
into
fimuls
xchg
les
sti
popf
sub
jns
dec
mov
sub
in
iret
jle
sbb
daa
pop
pop
sbb
lret
outsb
or
pop
inc
mov
pop
fwait
pop
push
sbb
ljmp
roll
pushf
lcall
cld
push
or
ljmp
push
pop
and
xlat
xchg
arpl
loope
mov
jb
adc
insl
mov
push
test
sbb
mov
inc
in
jne
jp
dec
ja
dec
shlb
dec
mov
jmp
lea
sbb
and
sbb
cs
shll
fldln2
scas
notl
pop
jge
mov
mov
inc
mov
jecxz
test
scas
sub
fdiv
jle
loop
movb
sub
pop
loop
jbe
nop
xchg
xchg
pop
or
xchg
shll
and
and
lahf
inc
xrelease
jp
fisttps
mov
jo
js
test
scas
loope
aad
jp
leave
call
enter
stos
xchg
fdiv
xchg
lahf
iret
add
mov
dec
pop
pop
test
xchg
mov
mov
aam
mov
pop
add
ret
pushf
xor
mov
add
adc
jle
ja
sub
xor
push
or
je
pop
leave
out
xchg
sub
dec
call
lret
jns
xlat
dec
xchg
pop
mov
leave
mov
adc
cmp
in
aam
sub
lods
jge
inc
jo
inc
hlt
je
out
or
pop
ljmp
mov
fisubrl
inc
jo
popf
push
and
out
mov
pushl
sub
into
bound
mov
inc
enter
cmpsb
pop
pop
cs
in
roll
inc
lods
mov
data16
pop
xchg
pop
xor
mov
xorl
lods
lret
jae
stos
cli
and
xor
mov
mov
repnz
inc
dec
xchg
dec
sti
add
cltd
sbb
mov
xor
popa
pop
outsb
ficompl
or
lea
dec
pop
fists
push
es
push
addb
push
mov
lret
cs
dec
jmp
push
mov
sbb
aaa
sub
pop
mov
mov
outsl
cmp
and
mov
adc
cmp
sbb
push
shr
cmpsb
push
add
cmp
fcoms
scas
and
int3
les
inc
push
mov
jb
pushf
pop
repnz
je
xor
fsubl
dec
xor
dec
jbe
xchg
pushf
push
mov
mov
imul
mov
jne
push
insb
jne
lods
jl
push
loopne
std
inc
mov
mov
sub
xor
daa
cli
faddl
push
xor
ljmp
mov
in
pop
pop
jnp
shr
idiv
pop
addr16
int
test
das
and
cmc
loop
xchg
faddl
jge
cmc
test
ljmp
xor
test
mov
xchg
cli
adc
insb
cli
push
xor
add
jmp
dec
test
mov
adc
cmpsb
and
fdivl
or
bound
add
inc
sbb
inc
cwtl
add
cmp
push
mulb
jp
mov
jl
push
or
lahf
cltd
push
std
pop
mov
jno
mov
dec
cmp
mov
insl
sub
shrl
mov
adc
sbb
add
xor
fbstp
stc
jg
imul
adc
push
ret
jge
insl
sub
cs
mov
lock
cmp
push
jne
mov
cmp
test
test
sub
iret
mov
sbb
and
ljmp
in
xor
leave
sbb
rclb
xchg
inc
dec
push
push
dec
xchg
jle
stos
jmp
call
fwait
or
iret
shlb
aam
call
out
aas
adc
jg
xchg
jmp
fcomi
dec
mov
orb
mov
aaa
dec
xor
hlt
and
push
pushf
lret
lss
lcall
push
mul
loop
inc
loopne
lret
aad
outsb
hlt
dec
decl
pop
cmpsb
push
mov
xor
addl
cwtl
and
jle
jno
aam
leave
aas
mulb
sbb
scas
mov
addr16
mov
enter
mov
mov
fldenv
arpl
cld
adc
xor
add
lock
mov
pop
mov
fs
pushf
xchg
ja
sbb
xchg
sub
lret
icebp
or
ds
pop
mov
scas
mov
addr16
pop
mov
arpl
dec
lcall
inc
jae
xor
xchg
imul
mov
mov
loop
xchg
pop
adc
add
mov
xor
cltd
mov
lds
ja
jmp
xlat
push
pop
cmp
movsl
xchg
shr
push
mov
fnstcw
lahf
xchg
cmc
xor
scas
aad
in
inc
dec
test
dec
xor
andl
and
push
inc
leave
test
fsubl
insl
lea
fcmove
mov
lret
loop
or
xor
cmp
sbb
enter
es
adc
mov
sti
pop
xchg
dec
jae
aaa
gs
sub
jnp
in
out
mov
dec
popf
jl
fistpll
aad
int3
sub
push
into
test
push
jp
adc
cmp
popa
sbb
mov
sbb
out
popa
inc
cld
out
dec
push
movsl
or
push
sbb
outsb
lret
xor
xchg
mov
jae
lock
mov
cli
nopl
pop
inc
fwait
aas
fadds
out
cmc
push
test
outsl
ss
aas
sbb
push
call
clc
adc
and
in
pop
imul
int3
xchg
daa
pop
clc
stc
imul
xor
sub
leave
fs
das
push
mov
xchg
ret
or
jl
loop
nop
sahf
loope
mov
lods
stos
inc
jno
daa
inc
mov
sbb
mov
dec
fst
aaa
outsl
filds
xchg
in
cld
push
or
lds
dec
add
flds
outsb
xlat
mov
jae
or
dec
popa
cmpsl
jp
andl
stos
jb
push
lea
divb
mov
adc
jns
jnp
pop
arpl
mov
ret
adc
xor
ss
dec
js
std
out
mov
test
sbb
sub
ljmp
mov
cmp
or
inc
cwtl
lret
xor
push
fmull
test
loop
mov
hlt
mov
fimull
mov
inc
out
adc
jae
mov
out
sbb
add
jno
push
jge
adc
adc
dec
mov
mov
adc
leave
pop
lds
das
cli
das
imul
xlat
mov
insl
cld
sub
xchg
js
clc
and
lods
inc
cli
adc
leave
and
cmc
mov
mov
pop
push
movb
adc
mov
mov
cmc
cli
add
outsl
popf
inc
lock
sarb
imul
ret
lds
call
int3
add
inc
cmp
add
pushf
lock
imul
stc
lds
inc
mov
aaa
imul
mov
dec
stc
negb
nop
fnstcw
mov
ds
jge
out
lret
in
mov
xor
repz
mov
int3
jle
jle
fistpl
pop
mov
xchg
and
lret
or
repz
sbb
lea
dec
movsb
jge
xor
mov
and
push
outsl
icebp
xor
xchg
mov
or
inc
cli
lods
aas
fnsave
cmp
jae
jbe
inc
pop
sarb
push
inc
rorl
hlt
aaa
push
xor
cmp
push
jge
mov
jae
out
adc
sti
dec
mov
movsb
inc
lea
cmp
inc
jmp
push
mov
cmc
pop
loope
push
ljmp
jl
data16
clc
das
sub
leave
xchg
outsb
mov
adc
pop
nop
lods
add
roll
cli
cmp
lea
lock
push
jns
xchg
jo
inc
icebp
mov
je
sbb
int3
lods
pop
jg
mov
addb
rcl
enter
repz
outsb
mov
and
aas
sahf
cmpsl
push
push
dec
stos
leave
pop
loope
jge
xchg
movl
sbb
inc
gs
jns
push
mov
jno
cmc
fcomip
cmp
fwait
push
ret
jno
push
cltd
mov
pop
push
mov
push
xor
jne
dec
orl
adc
sub
in
repz
mov
mov
push
mov
aaa
scas
cmp
jp
js
cli
cmova
clc
fs
jmp
mov
sub
push
cmc
cmp
sbb
push
lods
lea
negl
out
mov
out
inc
nop
mov
xchg
mov
jno
push
push
in
sub
fcomps
xlat
in
add
push
aad
fadd
fmulp
jmp
xor
sarb
pop
mov
es
insl
pusha
sbb
ret
mov
loopne
cld
mov
insb
scas
mov
or
inc
or
cmc
adc
shll
lret
pop
stos
int3
pop
mov
aam
pop
dec
xor
addr16
in
sub
fstpl
mov
rcr
jno
inc
xor
pop
lds
scas
jb
imul
jg
popf
add
jl
pop
std
mov
fdiv
cmp
jno
cli
pop
mov
sbb
pusha
mov
adc
sub
call
loop
inc
fistpl
jp
fwait
pusha
lods
push
mov
xchg
push
out
jmp
pop
iret
sbb
scas
add
cmpsb
in
push
push
ljmp
pop
push
outsb
mov
xor
fcmovb
scas
pop
orl
pop
push
mov
dec
outsl
jmp
and
mov
rcrl
movsb
notl
stc
push
lock
inc
add
cld
movb
adc
xchg
ret
xchg
pop
jecxz
dec
cmp
add
aas
je
arpl
pusha
add
dec
xor
in
roll
pop
dec
and
jl
and
aaa
fsubs
in
fistl
btc
outsb
jns
jmp
pop
sbb
pop
cli
cmp
xlat
aaa
sti
jno
and
int
and
add
xor
mov
push
lea
loopne
lea
jnp
lods
cltd
call
ds
add
sbb
mov
stos
arpl
inc
jne
loop
and
jno
mov
pop
or
decl
ret
in
cs
and
pop
cmpsb
push
cmp
cltd
lea
fstps
ljmp
nop
call
push
daa
out
xchg
push
push
sti
aaa
jo
dec
arpl
sbb
insl
ss
into
gs
int
jg
mov
pop
ficoml
aas
push
cmp
sbb
fmuls
mov
xchg
mov
inc
ret
mov
filds
cmp
mov
pop
jno
addr16
pushf
adc
and
cmp
add
nop
mov
and
xor
xchg
add
pusha
pop
mov
bound
xor
push
rcr
jl
es
fstp
sbb
stc
and
pushf
mov
jmp
mov
jle
cmp
addr16
daa
dec
clc
sti
lea
decl
bound
push
stos
scas
outsl
std
cmp
mov
jnp
sub
cld
mov
pop
popa
aad
hlt
xchg
mov
or
jg
sbb
dec
leave
in
aam
jle
loopne
push
ss
xchg
jle
clc
insb
xchg
fstl
cmp
lock
jno
insl
movsb
mov
add
lds
pop
add
mov
popa
and
popf
aaa
rcll
adcl
lds
cli
dec
ss
aaa
inc
test
test
pop
dec
xchg
add
les
sbb
dec
jmp
shl
xor
cltd
mov
push
shlb
aaa
xchg
lret
pushf
pop
icebp
mov
pushl
add
xor
pop
out
sbb
clc
das
pusha
or
je
lock
enter
adc
mov
xor
push
mov
cmpsl
in
sbb
leave
insl
xchg
or
sbb
mov
fcmovbe
loop,pt
xchg
daa
imul
add
sub
pop
das
test
and
sbb
xor
and
je
sub
das
popf
jmp
adc
pop
fmuls
repz
xor
jae
mov
xchg
ljmp
mov
jg
cltd
in
ret
fwait
mov
pusha
jmp
sbb
mov
pop
mov
outsb
hlt
outsb
nopl
pop
mov
mov
into
out
cs
lret
aad
mov
repz
clc
int
sbb
sub
and
cmp
lret
ljmp
and
in
mov
xchg
mov
mov
fldl
mov
cwtl
outsl
ret
out
xor
in
mov
in
pop
sbb
adc
sbb
jg
stc
mov
xorl
jmp
mov
xchg
inc
add
inc
xchg
aam
les
pop
mov
jo
push
stos
aaa
cmp
cmc
or
scas
mov
pop
andl
bound
shrl
icebp
adc
xchg
shll
push
daa
push
xchg
shll
roll
mov
icebp
test
push
xchg
loopne
push
loopne
cmp
push
or
xor
xchg
mov
stos
cmp
xor
mov
cmpsb
movsl
mov
mov
lahf
mov
mov
jmp
cmpsl
out
sarl
rcll
clc
xlat
mov
int
fs
arpl
add
cltd
jp
mov
addr16
nop
inc
sub
and
pop
data16
ljmp
test
cli
cmpsl
fnstenv
jb
sbb
stc
pop
jnp
jl
adc
pop
int
arpl
scas
mov
mov
lahf
loopne
xor
stos
sub
les
lahf
add
in
push
into
orl
xchg
sbb
aaa
pop
add
cltd
lock
pushf
sbb
inc
daa
test
dec
mov
and
push
xchg
insl
add
adc
inc
xchg
inc
js
and
jmp
pop
les
jecxz
jae
ljmp
nop
in
adc
push
adc
imul
stc
jb
mov
pusha
jge
popl
sti
sub
mov
dec
mov
cmpsb
mov
xchg
push
pop
test
test
adc
xor
pusha
sbb
or
fsub
jg
in
call
sub
lods
int
ja
jae
xlat
adc
or
iret
jle
pusha
inc
inc
mov
mov
sub
add
mov
imul
mov
pop
mov
fists
stos
mov
and
or
xlat
ja
dec
xor
mov
das
aaa
mov
lahf
call
push
dec
dec
lock
mov
out
or
mov
push
push
dec
xor
movsb
rorl
jmp
xchg
add
pop
jne
fisttps
inc
mov
jbe
int
jmp
mov
mov
mulb
inc
add
cmpsl
js
xchg
fwait
and
frstor
sub
jecxz
cmpsb
andl
imul
fdivp
xchg
popa
scas
and
pop
jnp
mov
adc
jge
popa
jo
push
fwait
inc
pop
adc
mov
mov
cmp
sub
adc
mov
mov
lret
push
pop
jno
test
xorb
test
out
dec
testb
push
cli
loopne
aaa
push
aad
ret
cwtl
jo
and
mov
insl
add
xchg
xchg
mov
fs
adc
lea
mov
jnp
repz
pop
xor
adc
sub
fwait
dec
mov
loop
rorl
lods
cmc
fsubp
and
and
testl
cmpsl
std
mov
mov
jl
lret
jno
pop
push
lods
jge
mov
push
scas
push
das
lods
aad
cli
mov
mov
cli
mov
push
stos
jae
rcrb
faddl
daa
xchg
bound
mov
mov
push
fisubrs
cmc
jmp
sbb
fucom
out
nop
push
incl
jb
pop
sub
inc
inc
jl
lret
mov
popa
fimuls
shll
bound
xor
loope
fidivs
xchg
xor
add
xor
in
outsl
cmp
cltd
jp
sub
adc
fmuls
shr
sub
mov
adc
ljmp
sbb
jmp
mov
inc
xlat
out
sub
dec
data16
sbb
mov
loopne
hlt
lods
inc
cmp
dec
sub
or
push
fstpt
je
sarb
or
mov
cmp
mov
mov
push
mov
cmpsb
loope
lret
adc
out
loopne
aam
dec
add
jl
sbb
inc
sub
ret
out
adc
dec
xchg
adcl
sub
jecxz
push
pusha
imul
mov
in
mov
mov
cmc
xchg
mov
xchg
pop
mov
daa
fs
das
inc
mov
jne
inc
adc
xchg
sbbl
fsubl
mov
mov
sub
mov
mov
es
inc
add
stos
cwtd
mov
popf
jmp
sub
call
cmp
adc
xor
gs
sbb
rclb
out
and
push
cmp
ljmp
mov
addr16
lret
or
testb
or
push
jle
jecxz
fwait
cltd
xor
mov
inc
iret
out
sbb
stos
sbb
ret
ja
jg
loope
dec
mov
roll
out
lods
out
call
xchg
mov
mov
jecxz
insl
push
mov
pop
mov
aam
fwait
dec
es
pop
mov
and
cmp
imul
inc
xchg
fstl
fisubrl
jl
popf
cmpsl
loopne,pn
popf
ret
ret
adc
aad
in
jbe
hlt
movsl
xor
cmpsb
fwait
out
dec
cmpsl
pop
dec
test
pop
pusha
lods
jns
std
jno
leave
les
jbe
mov
mov
and
push
inc
xchg
push
jge
pop
in
or
push
inc
adc
repz
mov
pop
dec
push
shr
xor
sub
jne
xchg
jp
pop
aaa
mov
aam
adc
add
and
nop
cmp
inc
jmp
push
cld
xchg
cmc
jle
pop
lods
dec
and
fwait
nop
cmp
mov
and
cmovle
in
jnp
pop
pop
xchg
mov
lahf
jp
cmc
shll
sbb
jae
stc
out
incl
ja
gs
sbb
test
insl
cs
or
fcomip
daa
test
push
mov
rcll
pop
ss
icebp
into
xlat
aaa
dec
std
mov
lea
jne
xor
lret
popa
xchg
cmp
add
inc
push
mov
mov
stos
aas
int3
nop
repnz
pushf
inc
inc
xchg
mov
movsb
icebp
dec
pop
add
je
and
fld
push
sub
mov
dec
fdivl
std
iret
pop
mov
loopne
ret
ficompl
cmp
fwait
imul
shll
mov
jb,pn
push
xor
xor
mov
sub
sbb
insb
push
enter
inc
jno
out
jl
cmp
arpl
mov
ss
mov
cmp
scas
jmp
icebp
cmc
pop
data16
pop
rcll
mov
mov
imul
push
outsb
cs
mov
rcrl
scas
push
jmp
cmp
stc
call
cmpsb
sub
sbbb
mov
into
mov
in
adc
int
xor
test
fstps
jmp
repnz
jge
or
pop
xchg
mov
loope
lcall
inc
call
xorb
je
cmpb
sbb
pop
out
pop
enter
lods
lods
or
stc
mov
fnstenv
pop
adc
outsl
and
cmp
test
fdivrs
jp
jg
jecxz
cwtl
js
adc
mov
sbb
fs
adcl
and
mov
loop
pop
inc
push
xor
sti
xchg
outsb
lods
shrb
xor
pushf
cmpsb
cmpsb
jae
pop
mov
mov
ja
mov
in
mov
jne
inc
push
frstor
dec
mov
jg
push
jp
cmp
shrb
inc
in
cmp
add
jl
mov
xchg
jae
into
aam
in
sub
icebp
push
cmp
xchg
push
adc
mov
jns
outsb
movsb
push
lret
rolb
mov
movsl
push
nop
mov
int
addr16
clc
push
fldenv
pusha
dec
mov
push
mov
and
aad
dec
outsb
push
push
push
cmp
je
jmp
sbb
push
mov
xchg
andl
ret
mov
add
imul
cltd
dec
jbe
pop
scas
cltd
push
repz
stos
mov
inc
xor
fstps
xor
pushf
mov
push
sub
fcmovnb
jb
xlat
lret
cmp
dec
mov
xor
fistpll
je
sahf
xchg
popf
fstps
andl
xchg
sub
add
outsl
fbstp
and
mov
inc
mov
mov
cmp
jb
aaa
lret
or
scas
or
and
or
push
push
push
testb
jmp
and
jnp
cmp
data16
mov
out
mov
inc
ja
fdivs
fidivrs
pop
fcoms
stc
repnz
pop
xchg
pop
lock
or
xchg
sbb
jb
and
icebp
mov
push
jbe
daa
flds
lods
dec
cwtl
sub
push
aaa
stc
pop
arpl
add
inc
sbb
inc
mov
xchg
sbb
inc
push
adc
dec
push
repz
push
xor
lods
fbstp
lcall
testl
jle
loope
dec
repnz
cmp
or
mov
mov
js
dec
jl
sub
jno
xor
jo
cld
outsb
lret
dec
dec
bound
fists
jo
xchg
sbb
jns
je
mov
int3
lcall
loopne
adc
divb
mov
add
push
fdiv
cmp
aad
loop
pop
jae
rol
stos
xchg
jns,pt
and
ss
jmp
andl
dec
outsl
icebp
ja
mov
call
or
adcb
adc
fists
jg
and
in
aas
stos
test
test
cs
mov
jmp
pop
sbb
mov
pop
or
mov
pop
pop
and
orb
push
fidivl
ja
cmc
inc
jne
pop
mov
push
cmp
push
test
push
jmp
push
xlat
testb
scas
mov
sbb
cmpsb
pop
pop
inc
shlb
in
es
cmp
add
jns
fdivl
int3
inc
xor
mov
pop
jge
xor
out
sub
popa
int3
pop
imul
mov
lret
cltd
mov
sbb
popa
cmc
cs
dec
loope
leave
cltd
pushf
test
aas
pop
sub
jp,pt
sub
je
mov
mov
lea
xchg
mov
mov
cmp
push
movsb
xchg
xchg
lret
push
test
mov
cmpsl
in
sbb
rorl
xchg
pop
mov
add
adc
push
add
icebp
ss
mov
mov
mov
nop
add
jle
out
jle
mov
test
xchg
lock
sbb
imul
jns
cmpsb
add
aaa
cld
mov
pop
jp
subb
sub
out
sbb
mov
cmpsb
imul
pushf
cltd
push
jo
hlt
jl
mov
and
popa
fsubl
je
push
lahf
out
or
das
into
jo
mov
outsb
add
jmp
movsl
mov
testl
mov
lock
cmp
jmp
add
sar
sbb
jge
not
jle
bound
pusha
sub
jns
test
xor
hlt
shl
test
scas
mov
sbb
mov
or
lods
jns
pop
insb
or
sbb
push
cltd
and
lods
sub
sahf
adcb
addr16
cmp
pop
adc
shll
out
adc
lods
ficoms
test
cmpsl
jbe
or
lret
popf
loopne
daa
jg
add
push
dec
sti
dec
sub
inc
dec
inc
mov
cmp
in
in
pop
xchg
fbld
xor
mov
sbb
mov
push
cmpl
shlb
into
push
add
sarb
sbb
sbb
add
jne
jecxz
mov
add
inc
dec
mov
dec
cli
pop
jmp
gs
rcrb
push
xchg
push
push
and
testb
popa
mov
out
lret
pop
int3
in
rolb
es
iret
xchg
xchg
movsl
and
mov
mov
push
popa
mov
sbb
jle
into
mov
sub
ja
cmp
in
aaa
in
jnp
adc
iret
insl
out
sarb
pop
pop
and
xchg
sub
cmpsl
jb
push
push
push
xchg
xchg
sti
inc
jo
rcrl
mull
mov
decl
adc
xor
je
pop
add
loopne
repz
loop
pop
aas
or
mov
push
sbb
and
lcall
cs
push
push
adc
lret
out
cmp
loopne
lret
in
fsin
int3
test
subb
sub
arpl
out
icebp
add
lods
sub
or
in
mov
stos
lcall
and
movsl
cmp
jecxz
push
sbb
push
lret
xor
repz
cld
xchg
mov
jne
inc
sbb
and
xchg
jge
repnz
mov
or
lds
mov
mov
icebp
scas
xor
mov
and
dec
or
inc
call
lret
stos
and
test
sbb
or
push
pop
mov
fimull
mov
or
and
or
dec
icebp
dec
icebp
dec
inc
mov
mov
push
icebp
dec
aas
nop
std
rorl
lods
lods
repnz
push
clc
pop
bnd
ja
aam
imul
adc
jge
in
call
push
mov
out
mov
add
mov
mov
mov
jp
xchg
inc
out
mov
or
pop
out
dec
mov
rcl
or
loop
int
sar
adc
mov
xor
cld
fidivrs
mov
push
mov
mov
mov
jo
mov
xor
popl
aas
push
pop
cld
aam
fwait
and
pop
stos
in
dec
xorb
insl
mov
call
fwait
stos
outsb
mov
adc
xor
mov
sub
inc
fcomps
mov
sbbb
out
shrb
pop
xchg
in
in
movsl
mull
push
mov
psllw
fistpll
out
lods
ja
fxch
inc
mov
add
push
jno
lahf
ljmp
pushf
and
aaa
or
mov
pop
push
sbb
sbb
and
je
pop
adc
cmp
imul
shlb
out
and
or
jge
mov
pop
adc
mov
aad
xor
dec
xor
mov
dec
xor
xchg
pop
sub
push
sbbb
movsl
cmpb
adc
xchg
out
inc
arpl
mov
in
repnz
xchg
pop
cmp
mov
enter
fwait
loop
in
mov
xlat
aaa
in
sub
fwait
popa
jo
scas
pop
adc
xchg
ja
pop
pop
mov
rorb
scas
mov
nop
jg
cmpsl
mov
and
xor
add
adc
in
and
fldl
cmc
out
dec
stos
popa
fstpl
sub
push
mov
mov
mov
and
mov
add
add
pop
inc
push
repz
addr16
push
addr16
adc
lock
hlt
xorl
cmp
cmp
sub
jmp
lcall
repz
shlb
test
cmp
push
test
icebp
and
iret
shll
xor
test
int3
add
jnp
sbb
clc
push
pushl
add
repz
in
jmp
pop
and
xchg
push
mov
pop
pop
dec
pop
mov
sub
push
int
popf
pop
insl
and
dec
lds
cmc
ss
cmp
cmp
pop
cmp
cmc
and
sub
xchg
adc
xorb
dec
mov
idivl
pop
cmpl
mov
cmp
nop
jge
loope,pt
mov
dec
js
lret
xchg
test
jne
pushf
sub
mov
cld
inc
pop
loope
cmpb
mov
mov
movsb
mov
pop
lahf
push
cli
push
add
pop
pop
mov
orl
add
inc
xlat
dec
adc
and
ss
imul
scas
pop
jecxz,pt
adc
sub
mov
movsb
inc
fstl
aad
test
cmp
sarl
jb
jo
mov
scas
jp
add
inc
lea
mov
xchg
inc
ja
jo
cmp
iret
sti
or
sbb
shrl
jo
and
push
cmp
ss
adc
dec
cmp
push
test
mov
xchg
popa
sbb
lcall
stos
add
lds
in
and
push
inc
add
movsb
leave
out
out
xor
mov
sbb
call
repz
call
mov
xor
js
xor
mov
loopne
rolb
and
push
mov
sti
sub
or
jno
lea
add
imul
sbb
mov
push
xor
mov
sbb
jae
jmp
jge
or
loopne
shll
sbbl
cmp
adc
test
leave
loop
inc
hlt
xchg
adc
cmp
outsb
pop
lock
in
mov
loop
lret
call
add
xchg
push
jge
mov
add
scas
in
iret
sub
mov
push
sub
xchg
out
inc
dec
sub
aad
insl
fmulp
xchg
cli
xchg
xor
and
pusha
dec
mov
test
in
dec
imul
fildl
in
pop
cs
movsb
jp
outsl
bound
add
fcmovu
push
dec
jle
push
and
loop
push
test
xchg
add
pusha
je
out
fists
jmp
ffreep
fsts
add
mov
movsb
or
movsl
int
add
dec
repnz
sbb
mov
int
ljmp
mov
cmpl
push
jne
std
push
push
ret
lods
lret
lret
pop
aad
adc
sti
fcmovnu
leave
sub
rclb
sbbb
lods
mov
xchg
inc
sub
xchg
adc
mov
jecxz
dec
jmp
xor
inc
push
push
pushf
ljmp
leave
fcomps
sarb
adcl
mov
scas
xchg
outsl
pop
xor
das
scas
adc
and
mov
aam
popf
mov
jmp
sbb
inc
xor
in
in
xlat
pop
or
adc
incl
pop
dec
fbld
inc
push
jb
cmp
inc
add
shlb
shll
inc
shrl
push
cwtl
jb
dec
inc
clc
lcall
sbb
adc
pop
mov
jecxz
ja
sub
xchg
ds
lcall
xchg
fisttpll
mov
stc
jge
mov
add
mov
ds
or
or
and
movsb
xchg
ss
xor
mov
xchg
add
in
and
jns
pushf
add
inc
loop
mov
cmp
aam
push
cmp
push
repnz
outsl
lahf
lds
or
imul
stc
stc
sub
aam
aad
repz
add
mov
xchg
and
insb
xor
nop
imul
popl
call
push
or
mov
adc
mov
add
loopne
pop
mov
fdivs
outsb
fs
lods
cmpsb
inc
push
mov
int
dec
sti
or
cmp
or
sbb
dec
rcr
mov
fimull
loope
mov
xor
adc
movsb
cmpsb
mov
outsl
jl
mull
mov
or
orb
aad
push
out
scas
cmp
mov
adc
fstp
xchg
and
js
jl
xchg
adc
daa
mov
aas
je
or
or
cmp
add
dec
inc
cmp
mov
cmp
pusha
shll
jge
inc
adc
gs
aad
nop
and
xor
xlat
out
fpatan
mov
mov
adcb
cmpsb
orl
repnz
mov
xchg
lock
mov
sbb
loop
scas
icebp
pop
pop
insl
out
shll
sbb
lea
jl
sahf
out
ret
add
cmp
popf
cmc
push
dec
or
push
mov
test
fadds
xchg
cmp
loop
and
xchg
fnsave
add
cwtl
or
rcll
shrl
jg
xor
fcoms
push
adc
sub
sub
fistpll
add
es
mov
or
leave
xor
mov
push
inc
aaa
scas
adc
mov
lods
out
ja
bound
int3
sub
adc
roll
sar
sbb
jnp
clc
and
stos
lock
cmp
ds
fsts
ficompl
xor
xor
mov
rolb
dec
mov
stos
push
in
popa
dec
mov
sbb
push
out
cmpsb
add
dec
mov
and
pushf
lcall
lock
sub
push
or
mov
dec
repnz
jmp
push
aaa
outsb
gs
sbb
sub
pop
pop
test
adc
inc
mov
ret
push
xorl
cmp
cmpsl
lret
dec
outsl
xchg
and
inc
pushf
imul
xor
scas
or
out
mov
mov
popa
mov
cwtl
cld
jo
adcb
mov
in
iret
push
adc
lcall
cltd
xchg
cwtl
icebp
enter
jnp
bound
inc
imul
test
add
loopne
lcall
pop
enter
bound
dec
mov
ds
mov
ret
int
inc
sti
sbb
cmp
cltd
dec
ja
out
je
push
xchg
xchg
leave
push
cmp
cmp
push
sbb
cmpsl
sbb
jbe
mov
lret
sbb
jns
inc
add
call
fs
aas
add
xchg
shlb
push
shlb
and
call
add
cmc
mov
xor
or
gs
scas
sti
add
lret
sahf
xor
cmp
jg
mov
cs
mov
jmp
xchg
pop
and
dec
sbb
sbb
sub
dec
push
dec
and
or
lahf
hlt
push
ds
lahf
sub
cmp
lods
add
clc
xor
dec
mov
jo
pop
test
push
data16
ds
sti
popf
mov
xor
adc
lret
nop
scas
xchg
mov
sub
mov
aam
outsb
dec
dec
dec
add
or
or
data16
mov
mov
jge
or
call
jae
mov
std
add
andl
ss
jge
mov
ljmp
sbbb
push
stos
sbb
iret
fimuls
pop
mov
sbb
or
or
movsl
or
jmp
dec
mov
rorl
sbb
mov
mov
pushf
inc
and
data16
cmpsb
int3
fstps
mul
push
pop
fsubl
pop
shl
cmp
sbb
adc
cmp
inc
xchg
sbb
and
sarl
and
popa
out
and
rorb
je
aad
push
pop
loop
in
push
sbb
cwtl
pop
mov
fildl
pop
sti
icebp
call
add
lock
jmp
mov
or
lock
pop
pop
je
test
cmp
pop
jl
out
outsb
lcall
ret
aas
xlat
outsl
fwait
cmp
adc
popa
je
sub
out
hlt
loop
and
cmp
mov
out
and
test
jl
jne
shr
scas
mov
ds
out
jo
outsb
push
mov
shl
jmp
pop
pushf
jne
pop
loop
pop
pop
sub
pushf
ret
daa
cmp
insl
adc
out
xchg
imul
repnz
daa
jl
mov
adc
and
fistpl
in
pop
add
divps
and
push
in
xor
out
pop
inc
fnstcw
and
mov
push
ret
and
rclb
add
aas
stos
mov
push
pop
xchg
mov
pusha
fdivrl
dec
push
cmpsb
inc
pop
enterw
push
mov
dec
loopne
mov
leave
cmp
fidivrl
dec
jnp
pop
xor
testl
xlat
jecxz
bound
fdivr
mov
fwait
push
cld
into
or
sahf
and
cwtl
push
adc
xchg
gs
or
add
and
inc
dec
jecxz
insb
adc
pushl
push
scas
adc
iret
xchg
cld
aas
pop
rorb
mov
rorb
xor
jnp
xchg
iret
mov
lock
dec
sbb
shlb
aas
lret
add
sub
jg
xchg
rcrb
push
cmp
jmp
inc
jecxz
inc
push
lret
insl
or
stos
cmp
sbb
and
iret
aas
xorb
or
movsl
xchg
push
je
dec
ret
nop
xchg
cmp
mov
pop
push
sbbb
addr16
inc
sbb
test
mov
leave
add
xchg
mov
jne
or
push
add
inc
ljmp
cmpl
ljmp
jle
xchg
sbbl
and
push
test
push
or
lret
cmp
fs
pop
out
pop
or
into
aad
pop
int3
cmp
adc
addr16
scas
sub
xor
cmp
inc
shlb
hlt
out
cmp
push
inc
js
or
fisubs
jbe
push
mov
mov
jg
mov
into
rcrl
adc
imul
dec
icebp
stc
pop
xor
jae
xchg
jl
test
xor
mov
icebp
int
mulb
dec
fidivrl
dec
push
ret
repnz
sbb
xchg
rcll
push
sub
xor
repnz
sub
bound
ljmp
pop
xor
pop
mov
das
jns
cwtl
addb
mov
jmp
adc
pusha
imul
fnsave
jb
cmp
ret
sub
test
insl
pop
sub
xchg
push
and
test
aas
fcoml
pop
dec
cmp
xor
jae
mov
add
pop
sub
sahf
mov
jb
push
dec
push
lret
jg
imul
inc
jmp
add
cmc
jnp
lea
int3
adc
pop
sbb
lock
cli
cmp
fcmovnb
mov
repz
add
mov
int
sahf
pop
lahf
add
dec
arpl
xchg
popf
adc
inc
out
add
mov
daa
mov
xchg
enter
sub
pushf
mov
movsb
orl
cmc
pop
xor
add
mov
push
das
mov
rolb
fstps
cmpsb
iret
aad
add
and
test
repnz
js
rcrl
mov
fsts
xor
shlb
mov
cmp
jb
pop
out
std
and
dec
test
aad
aam
or
lock
clc
mov
imull
xor
addl
subl
sbb
loope
jo
adc
xchg
dec
push
repz
xchg
and
jp
ljmp
lea
iret
or
jp
repz
jg
push
mov
push
js
mov
pop
test
addr16
rcr
ret
sbb
pop
sbb
xchg
jmp
fdiv
dec
xlat
andl
shll
out
dec
popl
sbb
cltd
cwtl
lar
ret
shl
mov
sti
loope
into
addl
stc
or
push
xor
insb
mov
pop
scas
and
mov
and
mov
sub
adcb
pushf
push
dec
movsl
push
mov
popa
test
std
fcom
dec
sarl
dec
push
pop
icebp
lea
lods
xor
ret
cmp
dec
pop
fisubrl
dec
xlat
sti
out
or
mov
scas
out
scas
cmc
pop
scas
cmpsb
mov
jmp
pop
jae
outsl
xlat
jbe
sbb
adc
jbe
imul
or
int
popf
sub
xchg
jae
sub
xchg
mov
cmp
add
into
jge
mov
adc
arpl
pop
lahf
lock
mov
xchg
and
fistps
mov
adc
mov
mov
daa
mov
fsubr
cmp
pop
add
cmp
leave
jmp
aaa
push
push
dec
testl
jnp
ret
scas
outsb
popf
loop
xor
rcrb
or
jo
inc
rcrl
in
inc
arpl
lods
xchg
cmp
hlt
xchg
int3
add
sub
pop
cmp
popf
cmc
xchg
je
or
movsl
inc
sub
arpl
insl
sbb
std
cmpb
jge
inc
cmp
mov
inc
mov
pop
out
dec
ret
lret
das
test
pop
push
jmp
dec
xchg
mov
int3
add
je
or
dec
dec
push
jns
pop
mov
in
in
lods
push
add
arpl
test
and
cld
dec
pop
ret
imul
pop
mov
fnstsw
popl
push
jle
and
pop
mov
sbb
movsb
shll
xor
enter
into
insb
sbb
push
sub
jl
mov
hlt
adc
mov
imull
xchg
and
adc
mov
inc
shlb
popf
add
xor
jmp
pop
out
push
push
pop
pushf
clc
in
outsb
xor
xor
jmp
and
pop
mov
mov
mulb
add
push
mov
push
push
or
outsl
scas
cmp
shr
imul
add
sti
ja
mov
in
mov
jo
push
mov
fsubs
adc
xor
xor
jae
pop
outsl
lahf
jle
and
scas
aas
mov
mov
sub
push
xchg
lahf
mov
ret
dec
inc
lea
dec
add
aam
ljmp
sbb
outsl
cvtps2pi
aam
addr16
movsb
cmp
imul
jle
out
leave
mov
cmp
mov
bound
adc
jbe
dec
hlt
stc
jmp
aad
shll
sub
cmp
ja
insl
cmpsl
scas
imul
pushf
adc
ret
dec
cmp
push
adc
idivb
mov
pop
mov
addr16
shlb
inc
pop
mov
or
sub
mov
and
or
ja
jbe
lea
enter
imul
fdivs
aas
bnd
xor
clc
shrl
enter
ret
fimull
mov
sbb
push
sahf
fstpl
arpl
sub
loopne
cs
sub
adc
fldl
xchg
xchg
or
fwait
aaa
mov
jbe
sub
das
sub
cmp
sub
sub
cld
add
ret
out
sub
scas
lds
dec
lods
adc
push
push
mov
sbb
pop
adc
lds
repnz
adc
jo
movsl
arpl
jge
adc
xor
sub
xchg
je
mov
adc
fnsetpm(287
push
lret
dec
shlb
out
std
jmp
inc
inc
mov
sbb
lea
dec
pop
idivb
cmp
adc
cmpsl
or
lds
out
sub
cltd
js
mov
mov
jl
sub
addr16
subl
sbb
mov
inc
subl
cwtl
dec
add
mov
jmp
jnp
mov
mov
inc
mov
aad
pop
jmp
mov
dec
mov
xor
mov
lahf
rorl
adc
push
mov
cvtpi2ps
mov
lds
pop
faddl
xlat
test
jmp
inc
pushf
in
shrb
xchg
fistpl
dec
and
test
xchg
ja
jb
pop
fisubs
dec
movsl
mov
and
cli
and
aas
xlat
jp
and
pop
ljmp
es
inc
push
addr16
fucomi
addr16
iret
repnz
cmpsl
lea
call
xchg
xchg
push
mov
into
jp
cmp
test
push
cltd
dec
in
sub
andl
dec
aaa
pushf
push
scas
push
cmpb
cwtl
popf
aas
sub
push
lds
loopne
push
fmulp
inc
sub
orl
mov
out
pop
mov
mov
jb
popa
jle
lcall
inc
lock
pop
cltd
mov
xor
fsubl
jno
xchg
call
fisubrs
popf
data16
ret
or
loop
aad
push
sbb
or
mov
pop
sti
push
xchg
gs
sbb
mov
inc
dec
xor
push
cld
add
xor
push
repnz
repz
scas
shlb
ror
pop
into
scas
pop
jge
sub
sbb
cmc
push
int
and
je,pt
lret
dec
pop
inc
xlat
push
xor
push
and
stos
repz
insb
hlt
jb
fldl
ss
add
stos
sbb
jnp
in
std
pop
add
aaa
aad
xorb
enter
fsubr
lret
or
cmp
sbb
dec
and
cmpb
mov
mov
repz
push
mov
int3
and
cmp
in
cmpsb
pushf
push
and
fs
xor
stos
add
stos
inc
jg
leave
xor
rcrb
stc
add
mov
push
pop
inc
clc
iret
mov
push
mov
add
mov
mov
cli
fmuls
in
fwait
movsl
add
adc
xlat
pop
pop
xor
push
shlb
mov
notb
fsubrl
jp,pt
sbb
hlt
mov
cmp
shl
mov
inc
xchg
and
mov
fistpl
pop
paddd
arpl
int3
dec
or
popa
xchg
jmp
dec
call
fidivl
cmpb
daa
enter
ret
in
inc
repnz
dec
adcb
xor
fs
xchg
mov
push
adc
pop
int3
and
mov
sub
inc
adc
cmpsb
xchg
leave
or
or
test
lods
mov
cmc
jp
dec
or
test
scas
idivb
mov
jp
or
mov
xor
xor
test
mov
add
ret
cmp
lds
lods
xlat
push
xchg
mov
dec
aam
push
jo
cs
jae
and
sarb
aam
jno
and
lds
push
jae
ss
mov
testl
mov
repz
sbb
adc
testl
sub
mov
pop
push
out
lret
dec
outsl
sarl
mov
mov
adc
mov
push
cwtl
push
fistpl
lock
pushf
adc
push
mov
push
shl
scas
jp
pop
test
inc
aaa
and
xor
mov
fs
add
rcr
fs
cmp
cmp
lret
cltd
repz
fistps
inc
nop
imul
pop
fsubl
mov
sbb
fsubs
repnz
ja
in
mov
stos
pop
mov
pop
je
fists
pop
dec
jl
sub
icebp
jmp
int
and
call
shrl
ds
scas
mov
or
sub
mov
ja
jmp
pop
add
mov
lret
bound
pop
add
es
movsb
push
arpl
sbb
out
inc
icebp
fdivrp
or
js
cmc
jecxz
ljmp
dec
jnp
or
sahf
lret
push
addr16
dec
outsb
out
xchg
add
insl
jecxz
jo
roll
adc
push
mov
xchg
and
jge
ret
add
xlat
mov
jle
ret
or
dec
cmpsl
psllw
imul
in
addr16
mov
loopne
cltd
xor
sub
mov
dec
push
xchg
fcoml
out
test
push
pusha
ret
push
test
mov
fwait
in
les
scas
std
jg
movsb
sahf
clc
xchg
addr16
sub
or
imul
fldl
inc
or
cmpl
adc
mov
cmp
scas
ja
arpl
or
pop
enter
clc
xchg
xor
insb
movsb
clc
lcall
inc
sahf
popf
jnp
scas
pushl
ret
inc
mov
or
lock
popf
xchg
pop
pop
mov
xchg
mov
xor
fsts
adc
mov
cwtl
cmp
std
mov
in
mov
inc
jno
push
mov
es
shll
in
sub
imul
in
outsb
pop
mov
ljmp
push
and
cmp
mov
out
mov
lahf
jo
clc
stos
fld
inc
and
iret
lea
dec
add
sbb
inc
mov
test
add
sti
shrl
dec
loope
cmp
add
mov
lret
icebp
sarl
mov
in
repnz
mov
cli
mov
das
add
loop
cmp
addl
push
out
out
dec
out
mov
push
lods
shrb
cmp
cwtl
jae
sbb
mov
push
jecxz
sbb
int3
loope
or
jle
dec
inc
or
cltd
push
push
cs
dec
sub
add
sahf
mul
or
icebp
add
fldcw
sbb
outsl
and
push
lods
arpl
pop
mov
adcb
mov
addr16
add
pop
inc
jmp
imul
jl
mov
mov
sbb
jge
stos
xor
mov
js
jp
scas
dec
mov
loope
stc
mov
xchg
mov
jno
pop
pop
cmp
das
insb
cmp
adc
aas
or
pop
test
shll
xchg
inc
cmp
and
xchg
enter
jecxz
xchg
pop
fwait
out
lods
je
pushl
int
xor
add
loop
cld
sbb
adc
add
or
dec
xchg
push
aas
jo
mov
mov
jns
cmp
aam
jns
jnp
daa
dec
je
inc
sbb
sti
movsb
mov
jle
addr16
out
shlb
int
movsb
mov
mov
lret
pushl
dec
movsl
mov
dec
outsl
mov
mov
shll
xor
mov
add
das
and
int3
sub
out
aas
sub
aaa
aad
dec
movsb
mov
sarl
lahf
out
mov
decl
and
and
sub
jmp
js
movsl
aas
pop
testb
cmp
mov
ljmp
in
dec
inc
jmp
repz
push
jge
and
add
ss
loope
mov
jnp
fs
ljmp
insb
or
sub
sbbl
cmc
je
repz
gs
ss
mov
mov
xor
mov
hlt
scas
pop
xchg
push
hlt
pop
aam
je
inc
pop
adc
movsl
xchg
sbb
test
xchg
mov
cmpsb
adcl
fwait
xor
push
sti
add
ljmp
mov
mov
or
dec
jb
xor
test
jno
push
push
aas
stc
jp
aad
mov
jbe
and
add
rorl
xchg
xor
stc
sbb
mov
xchg
sub
and
or
jns
stos
outsl
mov
mov
ficoml
pop
mov
pop
xchg
ss
cmp
movsl
pop
das
jge
push
ss
outsl
push
loopne
or
fwait
or
roll
cmp
xchg
jle
lods
scas
adc
inc
dec
lcall
insb
int3
aaa
enter
iret
mov
andb
das
pop
in
sar
inc
cmp
and
test
loop
cwtl
cmp
add
adc
outsl
xchg
js
clc
cmp
mov
push
mov
std
adc
jg
and
sub
adc
push
mov
sbb
out
ljmp
pop
ret
push
ljmp
inc
rcr
or
jg
movsl
mov
jno
xlat
cmpl
cmp
push
mov
xchg
in
gs
mov
movsb
idivl
xchg
fmuls
repnz
dec
sbb
and
idiv
push
test
inc
mov
sub
bound
pop
jnp
outsb
fisubrl
jl
inc
push
jb
xchg
sbb
test
cwtl
je
dec
icebp
arpl
add
out
lds
cs
xchg
cmp
sub
loop
jae
dec
data16
cld
xchg
addb
pop
lods
repz
push
push
lcall
pop
jae
cmc
dec
dec
and
mov
das
inc
lds
fsubrp
push
cs
sbb
xor
jae
int
cld
jp
ja
xchg
loope
jbe
ljmp
stos
cld
jg
dec
int3
and
xchg
sbb
jb
sti
stos
dec
lods
xchg
sahf
pop
inc
inc
enter
jp
adc
jmp
cmp
cmp
xorl
outsb
imul
cwtl
std
pop
test
aam
std
pusha
cmpsb
cmp
es
or
fldcw
mov
in
add
jmp
pusha
mov
bound
mov
jno
cs
fucomi
test
pop
xor
push
dec
leave
adc
jb
cli
sbb
lds
test
daa
inc
mov
sbbl
sub
lret
jae
psubsw
call
push
je
push
lcall
pop
dec
mov
push
adc
lds
cmp
movsl
fwait
imul
lods
pop
addr16
mov
sbb
mov
xor
fstpt
movl
cmp
mov
mov
mov
and
xchg
imul
sbb
xchg
mov
lock
push
xchg
mov
adc
and
and
add
dec
out
lds
add
xchg
pop
ljmp
jmp
pushf
je
dec
cs
jp
inc
jg
sbb
adc
insl
aaa
cmp
and
mov
xor
fisttpl
popf
mov
jnp
mov
mov
fsub
mov
dec
mov
out
sbb
nop
mov
pop
xchg
pop
aad
enter
or
mov
sbb
or
stc
andb
aam
test
ret
mov
ret
pushf
cmpsb
xor
and
scas
pop
mov
pusha
mov
test
repz
aam
xor
push
or
leave
sbb
add
hlt
fnstsw
fstp
push
cmpsb
cmp
cmc
dec
add
jp
out
fildl
xchg
cltd
sub
cltd
cmpsb
outsb
loopne
aaa
pop
shr
iret
out
dec
arpl
mov
imul
add
mov
add
mov
fdivs
or
jecxz
xor
xor
mov
add
and
push
mov
jno
and
dec
sbb
ds
insl
jne
mov
adc
push
loope
xchg
pop
mov
mov
roll
stos
scas
and
mov
and
mov
addr16
aam
ss
inc
ret
in
ds
movsl
mov
stos
lock
pop
dec
add
inc
divb
sbb
push
jmp
fcomip
insl
mov
dec
mov
sbb
mov
in
jbe
push
sub
cmp
maskmovq
testl
mov
jp
push
es
bound
out
inc
inc
push
xor
call
add
mov
lret
push
mov
lods
pushf
push
sahf
lds
das
cmp
fdivp
ja
jmp
mov
mov
les
stos
push
sub
and
xchg
out
mov
icebp
or
adc
inc
push
fildll
and
bound
xor
sub
xchg
mov
dec
xor
inc
and
push
push
xchg
in
lcall
pop
es
push
dec
pop
addl
and
cmp
pop
mov
sbb
sub
repz
bound
out
dec
int3
pushf
jno
cmp
xchg
dec
cmpl
and
jecxz
adc
push
loopne
or
mov
push
mov
xor
out
sbb
cmp
jbe
pop
mov
stc
in
mov
push
cmpsl
jecxz
mov
ja
jmp
hlt
pusha
inc
int
mov
sbb
rorb
jo
ret
pop
adc
cld
push
pushf
test
popf
pop
test
push
push
or
push
aam
popf
stos
dec
leave
imul
xor
cmpsb
mov
xlat
popa
jne
xor
mov
xor
popf
adc
sbb
repz
testl
xor
xchg
negl
xor
and
push
push
sbbb
int3
or
xchg
mov
sub
pop
cmc
out
je
sbb
xor
int
mov
std
dec
push
sbb
insl
jo
scas
mov
mov
cwtl
aad
adc
dec
dec
fsubrs
cmp
cmp
out
filds
pop
pop
ret
xor
adc
fmul
clc
push
xlat
jp
sub
mov
xor
jb
in
or
enter
hlt
mov
lds
cmp
fidivrl
xchg
decb
mov
xlat
and
ret
or
and
adc
jb
push
out
pop
mov
xlat
daa
data16
and
xor
arpl
push
add
imul
fsubl
psrad
imul
pushf
lret
lea
les
outsl
std
nop
cmpb
nop
mov
insl
insb
js
fmull
das
pop
insb
pop
mov
pop
or
mov
jbe
aam
in
add
jecxz
loopne
lahf
sbbl
pop
sarb
rolb
sbb
mov
xor
xchg
push
hlt
add
pop
mov
xor
in
sub
lods
andl
mov
adc
cltd
push
sarl
out
int
and
and
xchg
add
popf
sbb
push
sub
mov
pop
mov
ret
jp
sti
ds
sub
addr16
push
inc
test
lcall
out
add
aas
add
not
jne
jecxz
fstpl
sub
xchg
insl
adc
jmp
ret
in
cmp
lds
push
shrb
out
pop
mov
cmp
testb
dec
rcr
aas
fistl
imul
dec
js
jge
pop
ret
ss
kunpckwd
out
sahf
outsb
les
xchg
mov
dec
pushf
int
shll
dec
sub
inc
xchg
adc
repz
das
sarl
psllq
mov
mov
sar
lret
inc
lret
cmp
dec
push
stos
sbb
into
inc
cmp
hlt
inc
ret
shrb
push
pop
xor
hlt
cmpsl
test
lock
outsb
test
aad
stos
add
ljmp
call
fstps
sbb
sbbl
jns
or
inc
scas
push
xchg
cmp
pop
je
addr16
stc
dec
enter
dec
stos
pushf
adc
lock
add
fst
xchg
cmp
pop
stc
sbb
lods
ficoms
push
fs
inc
fldenv
and
rolb
rcll
iret
mov
testb
shll
and
push
or
push
sub
push
or
mov
imul
call
fisubl
imul
std
fcompl
call
mov
jns
fdivs
jnp
int3
test
mov
adc
aaa
repz
push
push
bound
test
sub
pop
xchg
lea
cmp
cld
loopne
inc
iret
sbb
in
repnz
push
nop
push
cld
sbb
mov
add
dec
std
jl
adc
push
bound
sbb
sahf
push
pinsrw
in
dec
inc
xor
sbb
mov
mov
mov
jg
dec
out
mov
js,pn
jmp
movl
pop
xor
inc
adc
scas
ss
add
scas
fwait
add
pop
clc
lahf
push
outsl
test
pop
or
pop
sarb
mov
lock
dec
jo
sbb
add
sbb
dec
jmp
daa
pop
cs
add
mov
inc
inc
ljmp
sub
fadds
iret
inc
out
cmc
pop
mov
aad
enter
xor
es
push
mov
int3
ja
aam
pop
enter
push
push
add
sbb
iret
leave
or
jge
es
mov
sub
out
xchg
cmp
fdivs
jb
mov
ret
fwait
loopne
into
fsubl
dec
in
test
fwait
xlat
idivl
and
add
pop
pop
icebp
inc
sub
andl
daa
jmp
ss
pop
or
sbb
mov
sbb
into
aam
repnz
into
mulb
arpl
scas
lret
adc
sbb
loopne
adc
pop
inc
sbb
fists
mov
in
stos
sbb
lret
mov
setno
stos
pop
pop
jb
pop
xchg
mov
fstpt
pop
dec
adc
repnz
shll
movsb
sub
bound
insl
or
pop
mov
pushf
jns
adc
imul
rol
lahf
add
pop
aas
int
mov
dec
add
xor
lds
xor
inc
fsubr
cmpsl
pop
adc
mov
insb
mov
cmp
movsl
jns
jl
mov
js
jmp
sub
mov
xlat
and
adc
lret
push
ljmp
xor
repnz
iret
xor
mov
jl
push
hlt
das
repnz
sub
xor
aam
cmp
data16
sbb
xchg
repnz
mov
rorb
jmp
push
in
inc
xchg
insl
pop
imul
rorl
xor
sub
jmp
sbb
pop
rol
add
push
jl
dec
dec
jae
jns
jg
cmp
inc
adc
inc
or
insl
xlat
add
jnp
push
jmp
jnp
loope
scas
sub
adc
and
dec
out
and
jp
movsl
fists
cmpsb
push
dec
dec
sbb
cmc
subl
stos
push
push
pop
sub
jmp
sti
cmc
vpsraw
or
add
ss
insb
movsb
and
popa
push
insb
jns
sub
test
cmp
mov
lods
push
mov
add
dec
loope
cmp
ds
addr16
jbe
cwtl
ljmp
inc
sub
jno
cld
dec
lock
sbb
pop
test
inc
inc
mov
push
add
fbstp
and
inc
sbb
je
jno
scas
xchg
pop
or
mov
addr16
mov
ja
cmp
aas
addr16
shl
adc
add
push
and
and
or
arpl
ss
in
sbb
lcall
inc
data16
adc
push
cmp
dec
shl
xchg
and
push
into
and
sbb
popa
das
jae
cmp
in
divb
outsl
cmp
jnp
lahf
ss
rcrb
and
xor
outsl
enter
fisubl
clc
test
mov
cmpsb
lret
jno
sub
inc
fldl
mov
arpl
imul
or
bound
scas
and
pop
aas
add
push
scas
ret
cmpb
and
loopne
or
and
pop
jmp
pop
mov
cmpsb
push
nop
sbb
xor
sbb
setp
push
cmp
sbb
adc
pusha
lea
cwtl
into
enter
testb
pusha
mov
cmp
call
jnp
out
aas
insl
sbb
jae
jmp
mov
dec
loop
dec
adc
clc
adc
cmp
xor
mov
and
cmp
jnp
lahf
fs
sti
stos
jb
adc
movsb
test
jno
mov
stc
jp
pop
hlt
imul
loopne
lock
add
cmp
push
scas
inc
mov
cmp
ret
or
mov
popa
xchg
clc
rcr
outsl
adc
rorb
jle
xlat
cli
loop
rclb
addb
xor
aas
or
leave
add
sbb
cmc
dec
lret
out
mov
into
xor
sbb
mov
jae
mov
scas
rclb
repnz
push
fadds
mov
rep
mov
outsl
cmp
and
mov
or
push
adc
sub
hlt
lock
mov
mov
xor
jbe
incb
in
xor
in
xlat
lods
les
fisttpll
repz
mov
add
dec
pop
sahf
or
or
mov
jnp
lock
fwait
sbb
filds
jl
sub
popa
loop
sti
jg
fdivr
out
xor
and
das
inc
cwtl
and
sub
cmpsb
out
inc
lods
loop
xchg
stos
jl
xor
jl
push
jmp
inc
in
push
insl
xchg
lds
push
cli
idivl
int
mov
out
cltd
inc
rcrl
sbb
stos
out
mov
add
push
jnp
loop
mov
mov
jge
enter
ror
mov
in
or
aad
push
push
lds
and
mov
add
xor
pop
cmpsl
xor
push
mov
cmc
data16
in
inc
mov
or
adc
test
push
inc
inc
push
xchg
pop
xor
dec
adc
arpl
xor
push
mov
mov
insb
cltd
ficomps
adc
xchg
jp
ror
divl
ljmp
or
repnz
xor
xor
in
aad
adc
icebp
fdivrl
fisttps
dec
call
push
das
push
stos
imul
mov
ja
pop
scas
or
cmpsb
sub
dec
popf
cmpsl
stos
loop
out
or
mov
jnp
iret
sbb
ss
push
xor
std
mov
sub
dec
sarl
in
xor
movsb
add
aad
dec
insb
shl
adc
sbb
incl
or
jecxz
repz
sbb
stos
inc
icebp
sbb
xchg
mov
mov
in
rcl
jg
push
xchg
lret
scas
ss
lods
les
in
cwtl
ljmp
loopne
xor
adc
or
jae
mov
aam
js
sbb
xor
mov
sub
nop
popa
in
or
roll
das
jbe
sbb
repnz
adc
fidivrs
adcl
xor
mov
pcmpeqb
jge
adc
and
xor
sbb
subl
push
mov
fnsave
outsl
inc
xor
pop
clc
push
mov
pop
jg
jge
jnp
nop
fldl
aaa
fnsave
mov
xchg
adc
insb
movsb
dec
lret
mov
in
pop
mov
fninit
mov
jno
shll
jno
mov
mov
aam
mov
jbe
je
out
xor
jl
mov
mov
shr
mov
and
mov
stos
int
fs
and
incb
fisubrs
dec
pusha
jp
sbb
fchs
pop
mov
loopne
add
daa
adc
jmp
jge
in
push
and
shrl
xor
push
stos
pop
push
popl
inc
fcomps
add
xchg
lods
xchg
pop
test
lret
fldt
mov
sbb
out
std
or
inc
sti
inc
lahf
int
fsubrp
inc
jge
cmpsb
clc
fwait
push
xor
int
bound
xchg
xchg
jp
stos
sbb
mov
add
cmp
xchg
scas
pmaxub
dec
or
push
roll
push
dec
lret
sub
in
ja
xor
xor
rorl
push
jp
cs
inc
inc
iret
jl
pop
jp,pn
jecxz
mul
add
rorb
mov
data16
dec
adc
fs
mov
out
movsb
jl
fdivr
jae
rcr
xchg
popa
sub
dec
mov
sbb
daa
xchg
in
sti
mov
pop
cld
out
adc
push
sbb
mov
mov
clc
adc
jecxz
das
jno
xor
cmpsl
aaa
inc
inc
mov
nop
stc
add
push
or
popf
sub
dec
xor
and
mov
add
adc
mov
pavgw
inc
fdivrl
sub
int3
or
dec
sub
in
pop
movsb
xchg
fistpll
cltd
cmp
mov
adc
in
nop
rclb
push
in
jmp
cmp
fwait
xor
rcr
push
int3
xor
and
scas
loop
pop
jmp
jo
dec
lds
call
movsb
add
shlb
jns
mov
std
int
ret
mov
rcll
push
and
and
bound
jmp
aad
pop
cwtl
jo
or
push
xchg
inc
sbb
cmpl
call
dec
jns
lock
scas
adc
clc
lcall
mov
jno
cs
jnp
bound
lods
inc
orl
push
ss
aad
lcall
daa
inc
js
stc
and
mov
out
xor
mov
out
inc
mov
pop
rcrl
add
jae
ds
lods
shl
adcb
and
push
sbb
and
xor
aas
gs
adc
sub
xchg
mov
pop
jl
and
enter
and
les
sub
cmp
scas
push
cmp
mov
fldl
cwtl
xchg
xchg
rcll
icebp
push
jo
mov
pop
sbb
sub
fsubs
cmc
arpl
inc
aaa
jle
mov
push
ss
iret
sbb
mov
pop
xchg
cltd
fnstsw
stc
mov
lds
std
dec
je
jns
mov
das
loopne
xor
xor
in
jmp
loop
mov
cmovge
mov
popa
sub
movsb
fyl2x
hlt
gs
pmullw
jns
cmpsb
mov
cmp
inc
push
sbb
and
into
popa
jb
mov
dec
sub
out
cmp
int3
ror
nop
cmpsb
dec
insl
aaa
lcall
shll
imul
repz
or
xchg
mov
fwait
sbb
mov
pop
jge
jmpw
jecxz
cmc
scas
xchg
fiaddl
out
adc
pusha
add
mov
loopne
push
mov
mov
pop
rol
and
pop
ret
pop
inc
push
fdivs
jl
pop
rorb
or
add
lcall
pop
je
into
cmp
add
enter
loope
jo
lods
and
test
outsb
sbb
jecxz
add
icebp
stc
ljmp
enter
pop
dec
pop
mov
popf
mov
mov
int
rcrb
aas
les
arpl
nop
jecxz
fs
xchg
cwtl
xchg
adc
cld
int
inc
rcl
cmp
int
scas
mov
inc
add
sub
sub
jae
xor
fsubl
mov
pop
std
jo
popf
add
xchg
aaa
stos
dec
fwait
insl
dec
ss
ljmp
jp
lods
mov
push
sub
ret
leave
mov
repnz
jg
icebp
fbld
pop
sbb
iret
sub
xor
jmp
lcall
or
daa
cs
test
pop
adc
scas
push
inc
pop
jl
arpl
jge
das
orb
data16
sarb
xor
mov
xor
sub
out
adc
fmull
push
leave
mov
lret
mov
fwait
xchg
cmp
rcrl
sub
pop
push
pop
adc
xor
mov
rolb
inc
les
imul
ds
jg
mov
xchg
repz
test
iret
mov
cmp
addr16
iret
or
xchg
or
push
jae
jno
cli
inc
adc
orb
shrl
mov
lahf
xchg
mov
or
push
movsb
jne
sbb
cld
ja
push
imul
je
pop
mov
xchg
mov
pushf
sub
lods
sbb
test
sbb
mov
jg
push
or
push
lahf
add
xchg
mov
adc
mov
out
stc
jne
jbe
mov
lods
cmp
divb
data16
mov
jns
repnz
dec
fstps
cltd
notl
and
js
nop
std
fdivrs
fldcw
mov
inc
enter
inc
loope
aam
dec
addr16
or
or
sbb
mov
rcrl
lcall
jmp
push
push
mov
fimuls
fsubs
fisttps
sub
jmp
adc
pop
inc
lea
cwtl
pushl
dec
mov
lods
addl
je
jl
pop
push
fisttps
dec
push
in
and
neg
pop
cmp
sub
pop
fildl
xchg
or
andb
lret
inc
sbb
xchg
lds
ja
nop
imulb
lret
sub
fstp
testl
pop
dec
mov
cmp
inc
mov
mov
cmp
aad
fisubrs
cmpb
sbb
mov
add
xchg
sub
pop
pop
jp
sarl
xor
mov
lea
dec
push
sbb
sbb
les
jns
push
lea
and
sub
jno
jo
cs
add
jno
mov
sub
mov
xchg
lret
not
ret
adc
pop
sub
addr16
stos
adc
push
int
movsl
mov
xor
push
xor
das
dec
pop
add
push
or
add
lcall
lret
mov
cmp
testl
fsubrp
dec
outsb
dec
std
add
xchg
push
cmp
inc
add
sbbl
add
aas
pop
mov
filds
imul
out
mov
push
sub
mov
mov
ror
rep
inc
pop
mov
push
dec
sub
jle
fwait
sti
iret
sti
movsl
pop
dec
out
push
push
dec
adc
lds
test
fdivs
imul
es
adc
sbb
cmpsl
pop
inc
pop
mov
fstpl
aam
ficoms
fisubs
jge
and
pop
popa
pop
push
out
sub
and
add
repz
ljmp
out
cltd
int3
cmp
cmpb
push
inc
dec
rorb
outsl
shlb
adcb
push
gs
adc
repz
inc
lods
fldt
in
pop
rcll
mov
dec
imulb
aas
lea
stc
xor
pop
jle
fidivrl
sahf
popw
repnz
sti
lahf
jbe
jns
lods
jo
fistpll
movsl
js,pt
mov
sahf
lcall
not
lds
mov
nop
pop
enter
push
das
xor
sub
push
cli
xchg
xor
aad
insb
lret
cld
arpl
fdivrs
inc
sub
or
push
sahf
repnz
popf
les
lahf
add
and
pop
or
pop
mov
in
mov
jmp
popf
addr16
lock
loopne
shrb
push
add
pop
mov
pop
jne
leave
mov
pop
add
loopne
sbb
sbb
xchg
aad
mov
ds
xor
xor
mov
mov
pop
ljmp
xor
dec
pop
xor
dec
or
mov
inc
cmp
dec
mul
xchg
dec
or
loope
pop
shll
out
push
movsb
dec
faddl
pop
sub
mov
adc
add
mov
movsb
adc
shr
into
mov
adc
inc
pop
out
mov
push
lret
xchg
movsl
ret
inc
lock
mov
popa
fnsave
aad
or
pop
insb
mov
and
jecxz
leave
jmp
mov
adc
jns
repnz
ds
es
mov
xor
gs
pop
cld
aas
or
mov
push
pop
hlt
mov
jb
mov
xchg
add
insb
mov
jl
dec
or
das
cmpsb
sbb
adc
fidivl
jmp
xor
pop
mov
lea
fsub
adc
and
int
lods
or
jnp
fisttpll
call
addb
das
gs
xchg
inc
out
je
stos
jecxz
and
fcmovnu
in
mov
pop
mov
fnsave
push
aad
addr16
aad
lret
ror
dec
neg
xchg
jns
jne
push
add
nop
cmpsl
popf
pop
push
sti
xor
test
sub
push
fsubrs
sbb
inc
sbb
movsl
stc
pushl
push
out
dec
hlt
pop
sbb
xor
jns
xlat
mull
nop
mov
ret
push
pop
pushf
pop
mov
mov
sub
mov
dec
add
ds
or
xlat
insb
nop
or
in
out
or
xor
adc
imul
test
xor
rolb
lea
out
shl
or
stc
aas
fs
cmpsl
add
mov
test
sbb
addr16
or
jno
adc
mov
push
lods
xor
mul
mov
out
cmp
leave
inc
inc
cmp
push
adc
adc
pushf
dec
negb
in
std
or
icebp
mov
adc
lds
arpl
or
sahf
mov
cmpsl
mov
dec
call
pop
pop
cmp
pop
xchg
test
lcall
loope
sarl
aam
inc
rcrl
xor
aam
pop
adc
mov
inc
mov
pop
pop
pop
fdivrs
sbb
iret
addr16
rolb
mov
fs
fstpl
scas
aas
push
inc
lods
dec
fsubr
mov
cli
add
cmpsb
js
in
add
mov
cmp
loopne
loopne
lahf
movsb
fsub
loopne
pop
stos
aad
push
jno
in
aad
cltd
ljmp
jecxz
dec
rol
rorb
aad
in
jle
lahf
fstps
lods
mov
mov
jo
sbb
mov
mov
aam
jns
adc
outsb
jnp
xchg
pop
sbb
cld
in
jns
pop
xchg
xchg
dec
jle
aad
inc
int
jle
add
cmp
bound
dec
inc
outsb
dec
mov
arpl
cli
sarb
mov
push
sub
sahf
and
jge
pop
sub
fidivl
cmc
mov
push
sbb
in
adc
shll
dec
ret
bound
test
sbb
test
and
imul
in
add
divl
loope
fcoml
mov
std
xor
dec
loopne
daa
sub
nop
push
mov
mov
xor
xlat
test
loope
sub
ret
add
jae
sbb
lret
nop
out
push
and
xchg
fldcw
push
loop
xor
inc
push
dec
pushl
mov
mov
push
and
jmp
leave
fwait
adc
outsl
iret
and
test
shll
or
fwait
fs
pop
push
pop
lods
std
test
pop
sub
cmp
sub
int
mov
scas
pop
push
jae
sbb
adc
mov
enter
cmpb
fisubs
push
push
shlb
pop
pminsw
xchg
scas
lds
lret
jae
mov
mov
jb
xorb
and
icebp
insb
dec
out
je
and
mov
push
jns
loope
add
push
add
lods
in
sti
repz
jmp
xchg
sbb
flds
sti
xchg
mov
xor
out
push
cmc
test
mov
in
sub
ficompl
lcall
cmpsl
sub
add
mov
mov
clc
pop
in
sub
adc
outsb
in
lock
jmp
xchg
pop
test
mov
mov
and
pop
sub
jle
fsubrs
out
and
into
fisttpl
stos
setb
inc
outsl
rcll
out
inc
mov
xchg
movsb
movsl
jg
lds
test
aam
enter
test
mov
mov
repz
jg
repnz
clc
leave
sub
fimull
or
das
data16
lds
adc
xchg
call
push
xchg
lock
outsb
je
loope
push
std
mov
fistps
add
repnz
push
jne
jo
pop
fldenv
pop
daa
adc
outsl
loope
sub
dec
sub
or
inc
sbb
sbb
nop
xchg
push
adc
rcrl
adc
cmc
lret
fisubl
mov
fdivp
loop
jae
lcall
arpl
push
adc
aaa
cmpsl
or
cmc
push
fwait
insl
outsl
push
mov
sbb
mov
sahf
in
outsb
or
out
out
cmp
dec
xor
jns
fstpl
loop
mov
mov
ljmp
jl
hlt
adc
mov
push
sbb
test
xor
sub
push
cmpsb
lea
inc
xor
xor
pop
mov
popf
mov
lea
and
out
inc
outsb
or
cmp
jge
cmp
mov
jnp
pop
imull
jp
std
scas
and
lret
loope
cmp
inc
sbb
pop
out
jno
fcmovbe
pop
xchg
and
mov
cmp
aaa
adc
cwtl
outsl
adc
push
dec
pop
repz
inc
in
lcall
or
xchg
clc
dec
test
and
imul
xor
pop
adc
xchg
mov
xlat
std
jnp
cmp
inc
or
add
pop
ss
mov
jae
shlb
push
aam
cld
mov
push
sahf
nop
int3
scas
mov
rdpmc
jne
push
or
pop
cmp
jns
popf
sub
mov
cwtl
sbb
xlat
rolb
jle
scas
out
popf
jb
jmp
lods
add
movb
adc
dec
in
and
pop
mov
popa
and
out
stc
cltd
pop
pop
push
dec
sub
mov
pop
test
insl
jne
lds
mov
cmp
lret
test
cltd
and
mov
mov
sbb
mov
push
sub
push
inc
aas
xchg
dec
inc
mov
xchg
fmuls
cmp
pop
in
mov
dec
dec
or
jp
cli
mov
cmpsb
mov
cli
adc
repz
jmp
pop
cs
sbb
or
idiv
push
mov
xchg
fcmovnb
aas
mov
int3
sbb
arpl
lcall
ret
and
je
arpl
jne
ja
and
out
cvtdq2ps
cs
lret
jp
mov
es
ret
pop
mov
cmpsb
cmpsl
insl
mov
push
sahf
xor
dec
add
cmpsl
mov
gs
adc
or
jns
cltd
push
sbb
sub
push
daa
push
dec
bound
adc
pusha
nop
push
fldcw
adc
xchg
imul
jae
dec
loopne
test
pop
dec
sub
and
divb
sbb
ds
sarb
adc
scas
xchg
fisttps
aas
adc
push
inc
xchg
push
push
push
cmpsb
or
or
adc
jbe
cmpsb
or
jmp
pop
fldenv
movd
or
sub
data16
mov
xor
nop
cmp
xor
rep
pop
add
xorb
in
in
imul
add
inc
mov
movsl
xor
sbb
mov
jb
clc
jecxz
push
mov
push
sbb
fisubrl
inc
aaa
dec
ds
or
dec
inc
ret
sti
mov
push
das
hlt
rclb
in
adc
xchg
xchg
push
xor
mov
xor
dec
scas
mov
sub
xor
and
jg
out
lds
stos
pop
enter
inc
test
movsl
adc
xchg
push
movsl
pushf
aaa
faddl
jmp
mov
mov
mov
xchg
ja
jo
int
and
enter
xchg
stos
jmp
xor
clc
jmp
jecxz
push
sub
aam
push
inc
test
pop
icebp
sbb
orb
lea
roll
pop
jmp
mov
frstor
sbb
xlat
mov
orl
cmp
lea
aas
cmp
and
popa
inc
stos
xor
cli
loope
sti
mov
dec
imul
fsubrp
jl
js
cs
and
xor
dec
and
pop
jns
add
or
dec
jmp
test
mov
daa
sub
sbb
dec
jge
mov
push
pop
les
push
mov
inc
es
in
sti
sbbl
lcall
xchg
jnp
mov
in
loope
out
sbb
xchg
subl
xor
push
xor
ret
pop
lret
mov
dec
lods
push
iret
push
or
shlb
lea
jmp
pushf
testl
cltd
fbstp
fsubrl
loopne
sbb
sub
imul
xchg
cld
ja
push
les
les
insb
lcall
insl
in
js
xlat
jg
push
lds
aaa
push
jp
int3
pop
aaa
or
xchg
popf
pop
lds
add
sbb
xor
xchg
xor
cmp
and
jp
sbb
dec
sub
testl
sub
add
or
mov
mov
ja
repnz
nop
mov
push
cmp
xor
js
fnstenv
mov
jno
mov
mov
add
pushf
pop
add
pop
cli
pop
push
xchg
addr16
inc
mov
cmpsb
fstpl
pop
mov
sub
subl
loope
cmpsb
dec
and
sbb
in
sbb
mov
scas
xor
movsl
lcall
fwait
xor
or
inc
loop
dec
inc
adc
repnz
jo,pn
mov
mov
pop
cmp
ficoms
idivb
aam
cli
mov
or
cwtl
pusha
movsb
add
pop
fimull
lods
and
pushf
ret
shlb
or
cmc
jecxz
and
aas
std
jno
shr
add
mov
pop
dec
test
jo
dec
dec
gs
cmp
sbb
roll
mov
test
push
jnp
or
jecxz
mov
sub
pop
nop
sub
roll
inc
mov
sbb
mov
in
xchg
dec
rcll
xor
sub
popa
mov
xchg
aam
sub
mov
or
es
cmc
inc
ror
mov
fidivs
int3
sbb
std
and
inc
stc
or
in
imul
mov
xchg
addr16
sti
subl
sarl
test
repz
sbb
or
push
pop
je
jecxz
sbb
jne
or
mov
xchg
inc
fldt
xor
mov
aas
xchg
and
jo
data16
and
dec
cld
repz
add
std
int
lcall
loopne
test
inc
icebp
addb
dec
insb
dec
popf
mov
jo
rcll
push
es
add
pop
cwtl
jp
mov
addr16
adc
sti
jmp
subb
push
push
hlt
add
test
add
push
aam
ftst
test
cmpsl
jle
icebp
push
ja
dec
pushf
mov
lcall
sub
cli
add
lods
xchg
fiadds
sbb
pushf
mov
push
jecxz
push
clc
outsl
push
cli
xchg
leave
jg
in
dec
push
cmovs
add
repnz
sub
push
jmp
mov
roll
cmp
and
jmp
repnz
mov
add
or
and
scas
test
sbb
cmp
mov
adc
stc
pushf
psrad
and
loop
vdivss
xchg
sbb
cltd
adc
ficoms
pop
cmp
loop
cmpsb
inc
jae
scas
jecxz
int
daa
adc
inc
adc
add
test
mov
or
dec
mov
scas
lret
xor
sahf
mov
popa
jl
mov
adc
subl
cs
loop
pushw
xchg
fisubl
ret
jb
xchg
dec
push
add
mov
push
add
pop
sub
stc
imulb
add
fcomip
das
xor
mov
bound
insl
popf
loopne
sbb
jmp
dec
cmp
sbb
jnp
dec
into
fcomp
data16
insb
shlb
inc
sti
fcoml
sub
cs
stos
inc
xchg
dec
adc
sub
or
mov
push
cmpl
imul
cmpsl
pushf
or
fstps
dec
mov
and
stc
test
or
lods
test
cld
dec
imul
sub
dec
gs
sahf
gs
stc
dec
mov
bound
or
outsl
inc
test
sub
adc
pushf
icebp
dec
clc
pop
pop
lahf
jl
cltd
jno
cmp
add
je
je
ss
sub
mov
mov
in
xchg
cmpsl
jecxz
or
clc
push
mov
mov
popa
xchg
movsl
ljmp
sub
rclb
cmp
cmp
pop
in
popf
lea
mov
loop
or
lcall
mov
jle
sahf
repnz
mov
push
cmp
cltd
xchg
and
lret
outsl
inc
out
jg
or
cwtl
mov
mov
sub
sub
add
mov
pop
sbb
fldt
cmp
dec
jae
xor
jp
and
ret
mov
xor
addl
aaa
mov
adc
call
test
xchg
out
mov
js
fiaddl
cld
push
sub
fnstsw
call
dec
jae
dec
fwait
mov
jle
in
mov
mov
or
negb
negb
ds
cmp
test
fisttps
hlt
mov
pop
jb
push
and
and
je
fstpt
and
sub
mov
adc
jge
xchg
sub
shrl
lret
lea
test
cli
inc
sar
mov
lret
adc
jae
daa
xchg
jecxz
push
sbb
and
clc
rcrb
xor
daa
add
xor
jnp
ds
sub
aad
adc
data16
xchg
xchg
int3
jbe
add
sub
push
test
fwait
lock
ja
fisubl
and
mov
xlat
adc
fildll
inc
cmpsl
and
pop
xor
lods
xchg
pusha
sbb
scas
fsubrl
int
xor
or
mov
jg
inc
add
dec
xchg
cwtl
fimull
xor
jns
jbe
mov
outsl
adc
clc
adc
fsubrp
pop
test
mov
movsb
mov
jge
adc
push
mov
lret
or
inc
push
jle
mov
gs
loope
jl
dec
or
dec
das
imul
sysret
pushf
loope
or
and
sbb
pop
jbe
ss
lret
xchg
aam
cmp
xchg
sbb
mov
add
mov
mov
das
pop
imull
cmp
xchg
push
sbb
jge
nop
xchg
leave
xor
and
cmp
and
out
inc
xor
out
adc
or
mov
js
in
mov
scas
pop
aam
sbb
lds
ss
push
push
push
adc
leave
pusha
inc
sbb
mov
or
leave
pop
fimull
das
fs
inc
xor
pop
in
mov
fwait
rcr
and
lahf
cmp
push
dec
or
fidivrs
mov
push
jmp
add
std
jg
mov
push
push
jno
inc
cmp
dec
arpl
out
bound
das
push
mov
or
fistps
shl
pop
lret
out
int3
fs
dec
mov
sbb
inc
cmpsb
insl
xchg
mov
sbb
ret
insl
rclb
in
mov
xchg
sbb
cmc
sub
and
arpl
cs
orl
mov
sub
popl
pusha
fs
sub
adc
jne
vsqrtsd
pusha
scas
cmpb
cmc
rorb
ftst
add
out
loop
pop
mov
jae
inc
sahf
into
cmp
mov
xor
jmp
es
dec
xchg
pop
sarl
icebp
out
popf
xor
xchg
add
ljmp
cmp
shrb
inc
and
mov
stc
mov
aam
das
push
int3
pop
jmp
adc
cli
inc
repnz
loope
jb
mov
data16
inc
xchg
adc
shrl
data16
pusha
loope
xchg
out
cmp
xchg
in
rcl
outsb
fistpl
lret
lds
test
icebp
icebp
push
and
mov
fstl
cli
sub
lods
xor
lret
mov
mov
lods
insl
decb
cli
lret
fcomp
clc
loope
daa
cli
dec
pusha
sbb
shlb
stos
push
cmp
sub
dec
xor
xchg
mov
jge
cmpsl
outsl
jl
cwtl
fcoml
mov
jl
fwait
shl
cmp
shrl
pop
inc
add
or
shrb
std
pop
mov
mov
mov
xchg
sub
inc
adc
sub
xchg
inc
imul
enter
aas
iretw
outsl
addr16
or
push
cmp
std
scas
imul
cmpsl
adc
push
jbe
repz
icebp
shll
cltd
and
cltd
test
lock
sbb
pop
fwait
aad
stos
out
stos
outsl
int
mov
xor
add
mov
cltd
cmpsl
dec
movsb
mov
push
testb
jle
and
loopne
sub
pop
movsb
push
jae
nop
adc
push
mov
cmp
cmc
jecxz
mov
lds
mov
repz
popf
fisubl
pushf
xchg
fwait
aad
mov
pop
mov
filds
movsl
push
ror
mov
jge
sbb
sbb
shl
popa
fdivrl
out
push
lret
xchg
lret
inc
or
xchg
lods
add
dec
mov
lret
mov
push
andl
add
sub
mov
into
adc
mov
sbb
scas
cli
outsb
pusha
pop
jg
mov
mov
jp
mov
lea
xchg
add
jge
push
shrb
leave
inc
and
mov
out
sbb
inc
xchg
dec
inc
mov
repz
inc
mov
adc
mov
lret
and
sbb
pusha
jecxz
mov
adc
dec
test
or
mov
cmp
sbb
ds
dec
aad
add
inc
iret
ss
repz
xor
xor
jle
inc
mov
dec
jb
out
jbe
xchg
dec
adc
and
push
cmp
es
xchg
inc
push
ja
push
xchg
or
les
imul
bound
adc
lea
xchg
ficoms
lret
loopne
inc
mov
cwtl
push
rcrl
or
push
pop
lahf
clc
jne
jmp
scas
fisttps
test
push
xchg
xchg
push
aad
stos
or
inc
test
stos
test
xor
out
pop
dec
aas
int
imul
pop
push
sbb
fisttps
lret
lret
jl
mov
mov
pop
js
pop
repz
cmp
scas
sbb
sbb
fcomps
shll
stos
xlat
roll
je
push
dec
stos
pop
out
cmp
push
insb
aas
mov
sbb
push
xchg
rorl
adc
in
cs
fs
lcall
nop
jp
cmpl
and
xor
out
leave
xchg
mov
mov
bound
nop
push
out
insb
mov
jb
notb
fwait
add
mov
jno
push
jbe
faddl
inc
int3
leave
imul
sbb
shr
push
lret
sub
push
dec
lret
and
call
lea
lret
mov
adcl
pop
outsb
dec
ja
clc
xor
es
pop
and
stc
or
int
mov
sub
push
pop
mov
loopne
fsubr
test
sbb
test
addr16
dec
jge
inc
sbb
rolb
ficompl
ficoms
xchg
mov
js
adc
mov
testl
or
cwtl
jne
fwait
adc
mov
adc
add
mov
add
and
mov
sti
dec
fcom
pop
mov
pop
mov
pop
jecxz
pushl
sbb
adc
xchg
inc
ljmp
push
or
or
xor
lcall
and
mov
xor
rolb
push
xchg
xacquire
or
mov
pop
jbe
daa
adc
push
xor
sbb
jmp
jne
jae
iret
cmp
jne
mov
jle
loopne
add
loop
sbb
movsl
ret
inc
cmp
ss
inc
and
push
out
imul
pop
sbb
xchg
ljmp
fmul
push
mov
pop
xchg
jo,pn
mov
dec
sub
sub
aas
leave
jne
fwait
pop
aas
lods
js
xlat
mov
mov
xchg
ds
in
sub
ffreep
xchg
data16
inc
push
push
add
sub
repnz
push
sub
cli
push
lods
ror
cmp
in
in
fadds
xchg
cmp
pop
push
popa
sub
roll
xchg
and
or
push
mov
ret
mov
ret
sahf
mov
sbb
push
lret
mov
fstpl
shlb
imul
and
adc
outsl
stc
push
xor
push
push
enter
lods
xchg
fstpl
mov
les
enter
mov
das
jecxz
sub
in
or
and
in
dec
jp
push
jp
pop
add
cltd
aaa
xlat
loop
add
pushf
addb
jmp
cltd
fmul
inc
inc
pusha
lret
push
xchg
js
add
jecxz
jo
stos
int3
cmp
dec
push
cmp
test
adc
popf
push
in
and
mov
or
loope
outsb
cld
lcall
inc
in
test
das
mov
andb
js
xchg
jp
and
inc
cmp
xchg
sub
sub
test
push
adc
dec
or
sti
jns
push
in
inc
ret
sbb
pop
add
jl
inc
xchg
test
call
mov
int
pop
jle
dec
or
mov
lods
and
inc
push
pop
or
in
sbb
push
test
mov
mov
sub
push
add
xchg
and
pop
std
pop
and
jbe
fbstp
sbb
insb
push
divb
shll
inc
notb
insb
outsl
xchg
out
out
mov
shlb
lods
popf
xor
scas
shlb
test
jb
test
xchg
or
popa
cmpsb
push
das
lods
adc
lods
cmpsl
fmuls
xor
dec
or
ret
sub
jp
mov
ja
pop
mov
jbe
push
xchg
pusha
scas
mov
mov
les
xchg
js
push
sahf
ret
shlb
dec
lock
das
cmp
jo
dec
pop
cmp
cmpb
outsb
xor
addr16
fisubrs
imul
popf
daa
pop
shrl
loop
pop
and
cli
xchg
stos
repnz
andb
or
mov
or
push
inc
push
and
jp
mov
shlb
xchg
push
aam
hlt
jge
dec
xlat
mov
or
popf
pusha
dec
mov
pop
into
cld
out
dec
mov
jnp
xchg
stos
push
out
pop
inc
jae
jge
xchg
mov
lcall
push
rorb
push
into
sub
pop
jp
fwait
aad
enter
sarb
andl
insb
jb
orb
adc
cmp
in
jno
xchg
ljmp
xor
je
adc
stos
sub
xor
gs
dec
inc
mov
jbe
jae
fmull
stc
orl
stos
and
in
cmpb
sub
dec
lods
outsb
jbe
out
jae
xorb
imul
cs
mov
sub
in
in
add
rcrb
dec
arpl
xchg
test
mov
cs
out
in
cmp
jns
cs
ret
lret
nop
jbe
mov
adc
stos
scas
jnp
je
aas
test
imul
inc
dec
or
int3
popf
jno
or
jp
popf
incb
arpl
cli
enter
mulb
scas
shlb
or
lret
pop
or
and
and
mov
sbb
jecxz
mov
sub
cmp
sahf
in
mov
mov
push
lods
stos
andl
inc
sub
out
imul
mov
dec
data16
push
imul
jl
mov
cmc
mov
jg
adc
pop
test
out
shrb
mov
inc
sub
add
ret
sbb
adc
jb
aam
add
mov
mov
mov
jp
sbb
mov
ds
aam
out
js
mov
adc
mov
mov
xchg
mov
ss
sbb
adc
and
scas
mov
cmpsl
inc
daa
xchg
lcall
jecxz
xchg
popa
add
sti
leave
ss
sub
xchg
pop
fnstsw
in
lret
ret
xlat
sbb
negb
adc
cmp
imul
mov
pop
test
jecxz
add
sub
add
jb
shrl
mov
mov
lods
xchg
bnd
adc
pop
pop
add
xor
repz
pop
icebp
add
scas
scas
inc
ds
push
inc
hlt
mov
sbb
lcall
sub
mov
adc
or
jmp
mov
insb
or
jle
rcrl
adc
mov
scas
jecxz
data16
and
lcall
pop
not
sub
popa
pop
xor
pop
xlat
add
bound
hlt
push
push
arpl
aas
les
cmp
aaa
stos
in
and
sub
sahf
inc
inc
dec
mov
cmp
shlb
out
and
xor
outsb
pop
roll
mov
sub
std
adc
jg
aaa
lds
push
sbb
ret
scas
cmp
call
lahf
jno
push
mov
imul
push
cmp
jnp
xchg
lcall
lock
jg
mov
data16
jae
jmp
inc
or
mov
bound
sbb
or
fisttps
or
bound
dec
jne
dec
adc
jbe
mov
xchg
scas
out
pop
hlt
fwait
mov
mov
pusha
sub
pop
push
mov
mov
aaa
cmp
mov
mov
cmpsb
out
imul
adc
xchg
lods
lods
push
lahf
cmc
stc
jbe
fildl
std
inc
rorb
fdivs
sub
aas
ret
cmp
pusha
gs
cli
divb
stos
aaa
jle
inc
add
ljmp
mov
in
into
out
dec
and
or
dec
out
xchg
xor
jb
stos
loopne
insb
inc
lds
xchg
loop
lea
cmc
jmp
add
ss
mov
jbe
repnz
hlt
scas
dec
adc
inc
bound
das
fs
lods
adc
les
repnz
fstpt
sub
push
bnd
test
push
mov
daa
sahf
inc
mov
adc
scas
fs
jbe
out
pop
orb
fwait
lret
jmp
mov
leave
mov
loop
outsl
scas
jnp
push
scas
push
in
lahf
xor
addr16
xor
lock
aas
incl
inc
or
ficoml
in
adc
and
movsl
lods
jmp
lret
addr16
cmp
xchg
jns
pop
xchg
repnz
inc
iret
mov
add
pop
jae
mov
dec
push
inc
xchg
mov
xchg
jo
sbb
adc
shr
sti
mov
das
mov
leave
adc
sbb
ss
push
xchg
maxps
imul
fmull
lds
mov
into
jl
push
push
testb
ja
pop
mov
ror
lock
pop
ror
and
sub
into
in
xor
xlat
mov
push
ret
rcll
dec
inc
xor
dec
mov
xchg
rcr
lds
cli
notl
ficoml
pop
cli
pop
cmp
movsb
jae
inc
movsl
xor
jne
pop
sti
cmp
push
mov
mov
xlat
addr16
and
repz
in
adc
test
shll
xor
pop
imul
pushf
das
cmp
aam
repz
icebp
lds
in
jbe
call
shrl
mov
push
int
cmp
inc
xor
cltd
cmp
pop
into
dec
das
movl
or
repnz
cli
or
and
sub
stos
ret
sub
mov
push
sub
cltd
xor
sub
inc
xchg
or
adc
sub
es
add
roll
jne
nop
jne
and
adc
or
push
inc
xor
or
sub
xchg
jmp
push
and
ljmpw
jae
push
mov
aas
addr16
sbb
repnz
or
adc
sub
or
mov
negb
add
icebp
cmp
add
jge
push
or
pop
mov
lods
push
sti
xchg
nop
push
mov
cli
pop
scas
fsubrs
mov
xchg
adcb
jecxz
out
inc
divl
aad
out
test
mul
and
cld
out
pop
xor
add
cmp
mov
ljmp
jle
pop
xor
inc
xchg
mov
cld
pop
ljmp
shlb
xchg
aaa
in
lret
mov
pop
fsubrl
mov
movsb
xor
ss
test
lret
out
bound
jmp
push
rcrl
sbb
nop
mov
lcall
xor
dec
hlt
jae
scas
adc
jnp
adc
ret
into
pop
aas
bound
mov
enter
ret
cmc
in
ret
cwtl
and
xchg
push
into
xor
aaa
mov
mov
xchg
test
or
aas
push
in
fcomip
insl
jae
sub
adc
xchg
in
test
aaa
lea
xlat
cmpsb
mov
es
stos
ja
xlat
inc
mov
stos
jp
shrb
es
test
mov
xor
adcb
xchg
lods
dec
mov
popf
push
cmpsl
adc
lods
push
xor
mov
mov
in
clc
int3
jmp
lahf
bound
sbb
mov
sub
push
xchg
and
lret
push
and
sbb
or
addr16
jge
sbb
adc
paddusw
inc
push
clc
xor
pop
dec
fistps
negl
push
popf
hlt
std
ds
xchg
jns
jae
cmc
fldt
mov
enter
xchg
rclb
cmp
je
cmpsl
cwtl
gs
mov
pop
mov
lea
push
mov
pop
jmp
sub
dec
sbb
pop
cli
jp
stc
xchg
je
pop
cmpsl
and
jecxz
add
push
cli
in
fists
adc
jns
mov
pushf
fists
mov
ljmp
push
jbe
or
into
je
cmp
outsl
mov
stc
push
and
fidivrl
cli
enter
bound
std
rolb
xchg
dec
and
push
xchg
test
call
mov
lock
inc
cmp
cltd
lods
add
and
jae
and
iret
xlat
pop
pop
addr16
cmp
and
and
sbb
and
fstp
xchg
aad
push
nop
xor
dec
sub
mov
sahf
xor
inc
adc
sbb
or
xor
xor
pop
add
cmp
lret
es
jae
out
mov
fwait
sbb
xor
pop
shl
popf
cmp
sub
cmp
push
and
pop
test
xor
xor
dec
jns
or
sub
mov
mov
int
xchg
push
push
pop
mov
movb
jns
push
jb
aad
jg
icebp
jns
fcomi
pop
shlw
int
das
and
dec
in
adc
pop
jl
xchg
sti
xchg
cmp
aas
sub
les
sbb
sarb
add
shl
xchg
inc
mov
fldl
xchg
xchg
pop
jge
leave
mov
mov
lods
or
cmp
push
xor
outsl
xor
pushf
rolb
lds
sub
mov
lea
hlt
xorb
lods
test
dec
mov
mov
daa
add
mov
cmp
mov
or
and
adc
cmp
lret
xor
fistps
jl
mov
xor
mov
and
sarb
mov
push
mov
outsb
fnstenv
cmp
arpl
cmp
lock
clc
cmpsl
xchg
xchg
pop
jle
push
and
pop
in
filds
xor
cwtl
sub
rolb
ljmp
and
adc
xor
mov
stos
add
add
into
lret
in
mov
lret
and
lds
jecxz
sub
pop
fwait
mov
push
sahf
dec
ds
jae
adc
cmpb
sbb
mov
mov
aad
sbb
inc
xlat
arpl
mov
mov
xor
mov
xchg
into
iret
and
push
pop
faddl
insb
add
daa
jns
inc
xor
pop
addr16
imul
pop
aas
int3
outsl
pop
ja
push
or
lcall
outsl
scas
out
fsubrp
cmp
sbb
out
push
ficompl
mov
jl
stos
outsb
scas
fsubrl
out
cltd
jmp
or
in
inc
out
lock
push
lds
sbb
mov
adc
push
test
mov
cmc
ret
clc
imul
stos
xor
mov
fs
push
mov
push
xchg
outsb
aaa
jmp
sti
xchg
mov
in
aam
movsb
ror
js
in
loop
xor
cwtl
ss
jae
repnz
dec
adc
mov
and
ss
xchg
and
dec
mov
std
xor
xchg
pop
and
and
out
sti
scas
mov
pushf
in
sub
lahf
jl
add
cld
xchg
clc
movsl
mov
inc
xlat
jne
mov
mov
jmp
cmp
or
popl
mov
adc
lahf
push
pop
nop
cmc
jecxz
out
or
pop
or
push
push
add
jne
icebp
leave
sbb
lods
push
xor
adc
add
mov
mov
rcl
cmp
lods
dec
jp
push
dec
addr16
xchg
fdivl
xor
add
je
dec
outsl
sbb
push
mov
ds
xchg
xchg
push
fidivrs
xchg
test
jns
aaa
insl
pop
pop
les
loop
into
mov
daa
and
sbb
pop
cmpsb
decb
and
adc
addr16
mov
pop
adc
xchg
jge
push
mov
and
dec
bound
xor
movsl
cmp
sbb
mov
mov
jp
decl
outsb
inc
insb
sbbb
imul
ret
cmp
test
mov
jb
decl
mov
arpl
sbb
pusha
out
cltd
pop
lahf
pop
dec
push
cmp
insb
outsb
lods
push
inc
jb
fwait
pop
dec
inc
inc
movsl
mov
cmc
lret
cli
add
icebp
dec
and
adc
hlt
test
cli
aad
mov
in
mov
add
sub
mov
idiv
sbb
dec
jno
xchg
dec
push
sub
sbb
imul
test
ljmp
and
popa
aad
sbb
pusha
fisttpll
test
rcrb
lret
and
lret
mov
add
push
mov
push
ret
and
aad
jb
test
out
mov
ret
inc
shlb
push
out
mov
les
stc
lret
add
jo
mov
inc
xor
mov
push
cwtl
or
bnd
leave
mov
cltd
roll
negb
bswap
xchg
int3
cmc
lret
cmc
inc
adc
sbb
jns
dec
sahf
mov
xchg
adc
insl
clc
sbb
ljmp
stc
test
seto
dec
or
push
push
mov
pop
mov
mov
testb
mov
stos
cli
arpl
dec
js
ret
outsl
cmc
dec
xchg
push
adc
repnz
hlt
dec
sub
rolb
add
push
jns
test
fsubp
and
fistl
sahf
in
and
sub
inc
in
jne
mov
jo
mov
div
mov
movsl
cmp
xor
shr
sbb
shl
dec
mov
pop
cwtl
mov
out
rclb
push
adc
dec
sbb
popa
cmpsl
xchg
loop
nop
call
test
cmpsb
lahf
int3
add
iret
data16
jae
clc
add
lods
mov
inc
adc
cmp
sbb
or
and
add
imul
daa
icebp
add
jbe
mov
ds
jb
lds
sub
jle
into
ret
inc
cmp
mov
sub
lahf
psubq
aad
cwtl
adc
test
jb
jp
daa
es
insl
push
lock
xchg
mov
jp
andb
adc
jge
mov
pop
push
cli
arpl
out
jae
aaa
fdivrs
inc
sub
idivb
xchg
aas
jle
lods
scas
push
mov
dec
and
pop
mov
mov
lea
mov
sub
xchg
jecxz
aaa
dec
test
dec
inc
in
adc
jbe
fidivl
cld
xchg
and
pop
int
add
aas
orl
pop
shlb
xchg
or
out
cmpsb
push
sub
std
push
dec
mov
lret
ljmp
repnz
and
sti
fwait
cmpsl
out
movsl
and
sub
jmp
push
mov
adc
add
sbb
in
stos
in
popa
cli
rorb
and
hlt
xchg
adc
sbb
and
lods
movsb
pop
push
pop
cwtl
nop
xchg
cmp
xor
addr16
fisubl
lahf
jp
shlb
jle
mov
sbb
inc
cmp
aaa
ret
mov
adc
aad
inc
aam
jnp
mov
imul
call
jnp
or
cwtl
ljmp
lods
or
lret
sbb
and
fldt
inc
xchg
xchg
in
fisubs
lahf
pop
clc
hlt
pusha
aas
jmp
imul
insb
ret
lret
lods
dec
jo
ja
in
mov
icebp
mov
jl
mov
loop
cmp
cmc
mov
add
mov
loopne
jnp
icebp
and
xchg
test
lret
mov
xchg
out
mov
and
movb
mov
sbb
jae
or
mov
ljmp
jp
int
outsl
pop
push
out
xchg
dec
mov
adc
pop
and
add
push
adc
jb
rclb
inc
push
cmp
inc
fs
aam
adcb
push
push
out
xchg
repz
sbb
insl
js
sbb
push
sbbl
and
sbb
xchg
inc
push
mov
adc
pop
dec
gs
mov
jbe
jecxz
pushf
mov
and
clc
dec
pushf
mov
insl
inc
fisttpll
sub
pop
ret
cmp
lahf
jmp
movb
sbb
test
fdivrs
mov
inc
daa
roll
pusha
scas
cmp
pop
or
sbbl
jle
xor
pushl
inc
cld
in
jno
cs
in
and
fstpl
pusha
xlat
test
jne
mov
negl
loope
pop
int3
inc
hlt
and
loop
add
in
mov
adc
jo
cwtl
adc
jmp
mov
dec
jo
xor
out
loope
adc
movsb
lock
lcall
add
and
inc
lods
fmull
pop
mov
in
cmpsb
mov
bound
cmc
std
jbe
xlat
xchg
ljmp
push
adc
in
mov
ljmp
push
push
int
push
adc
adc
shrl
push
scas
jno
test
and
mov
mov
sbb
fwait
mov
or
movsb
mov
push
jb
mov
arpl
add
into
enter
out
pop
pop
ds
subb
jmp
sub
mov
ljmp
aas
mov
fimuls
js
sbb
mov
cmp
pop
movsl
inc
inc
adc
add
fisttpl
jnp
xor
dec
xchg
xchg
cld
jns
loope
push
out
cmpsw
lret
sub
cmpb
fidivrl
lea
stos
js
xlat
mov
or
cmp
pushf
mov
testb
iret
mov
in
lds
mov
push
rcl
and
push
push
mov
mov
push
and
xchg
repnz
dec
movl
rol
lahf
or
xor
mov
in
aaa
sub
jae
dec
ljmp
xor
lret
inc
mov
xchg
call
mov
sub
cmp
add
mov
aas
and
mov
push
aas
mov
inc
jge
cmpsb
jmp
cmc
push
aas
inc
dec
lea
stos
cmp
ret
mov
sbb
imul
cltd
rcrb
cmp
or
pusha
cmpsl
lods
mov
xchg
cli
push
pop
xchg
loop
in
adc
cmp
xchg
out
sub
fiadds
sub
fbstp
fdivrl
pop
out
jp
xor
mov
and
and
mov
sbb
mov
out
and
mov
mov
mov
cli
and
out
lret
faddp
fadds
mov
pop
incb
pusha
mov
add
in
mov
in
rcll
adc
add
or
nop
sbb
fdivp
jmp
loope
ret
jecxz
icebp
mov
inc
push
sbb
sbb
xlat
decl
xchg
mov
outsl
out
pop
dec
fistpl
sub
into
push
cwtl
mov
push
jae
in
dec
test
iret
fistps
or
repz
loopne
pop
data16
pop
jbe
imul
and
dec
sahf
xor
hlt
in
push
movsl
sub
push
jle
arpl
aad
mov
jmp
cmpsb
sti
clc
rolb
cmpsb
int
cwtl
test
sub
add
cmpl
pop
push
stos
lods
xor
cmp
sbb
nop
pop
mov
cmp
cmp
lods
mov
cmp
cmpsb
and
cmpsl
mov
or
shrl
lods
sahf
cmp
lds
cmc
dec
or
dec
mov
out
mov
aaa
push
and
dec
mov
sbb
or
push
cmpb
push
dec
push
xchg
mov
jae
mulb
push
sub
xchg
ljmp
hlt
sub
add
add
sub
inc
stc
test
into
vcvtsd2ss
xor
jge
into
xor
scas
mov
inc
cld
cmp
call
inc
cmp
jmp
std
jnp
in
xchg
cmp
in
lret
or
cmpsb
sub
mov
scas
adc
mov
or
jnp
jo
stos
inc
xchg
pop
movsb
jno
ljmp
jb
shrb
sti
test
test
cmp
pop
movsl
or
mov
sbb
mov
mov
push
mov
ja
pop
aam
ja
and
add
push
fucomp
adc
in
xor
stos
mov
clc
mov
cmp
push
pop
fldt
inc
and
movsl
cmpb
mov
jmp
sub
sti
adc
paddusb
ret
pushw
lret
mov
mov
ljmp
adc
cld
or
test
movsb
mov
mov
xor
and
rorb
sahf
mov
test
js
shl
fsubs
add
jmp
fistps
jo
lahf
jae
cmp
imul
push
iret
lods
and
sahf
cli
mov
insl
pop
push
xchg
frstpm(287
xchg
fwait
lea
aad
call
cmpsb
pop
fwait
gs
frstor
outsw
jae
add
pusha
sub
xchg
int3
jmp
push
jmp
shlb
cltd
test
or
test
xor
mov
cmp
and
aam
lea
or
fs
cmp
jmp
sbb
rcrb
in
sbb
mov
int
aad
cmp
ds
pusha
mov
inc
xlat
lods
jne
adc
mov
mov
and
mov
xchg
scas
inc
jecxz
std
imul
mov
test
cmpsb
cld
pop
loopne
imul
mull
xchg
int3
or
pop
lret
sbb
or
sbb
lahf
inc
out
push
mov
mov
add
jae
clc
jne
repz
ja
test
fistpll
mov
outsl
cli
xor
hlt
lcall
xchg
int
sbb
pop
or
sarb
rclb
mov
je
dec
jo
pop
movsl
mov
pop
loope
adc
test
xor
andb
mov
loopne
add
hlt
aad
popf
mov
aas
push
xchg
and
mov
mov
xor
fmul
jo
repnz
fistpl
inc
sbb
cmc
mov
aad
imul
nop
sbb
sbb
std
xchg
lcall
push
into
out
popf
testl
dec
lahf
cs
and
or
faddl
pop
sbb
repz
mov
inc
mov
loope
mov
mov
out
loope
int3
mov
adc
jecxz
inc
lods
pop
pop
fs
leave
cmpsl
add
and
jno
ficompl
sarl
das
sbb
dec
mov
test
decb
jns
pop
fdivrs
mov
out
mov
outsl
or
idivl
mov
pushf
es
cmp
add
ret
iret
cli
pop
or
push
jmp
push
adcl
enter
cmpsb
ljmp
sub
cmp
jne
adc
push
pop
pop
jg
pop
shlb
das
loope
dec
cld
nop
or
popf
xor
adc
stos
lods
xchg
or
out
cmp
pop
mov
cltd
mov
pop
int
jnp
mov
jmp
cwtl
or
ds
sahf
nop
stc
mov
test
jo
and
sbb
jmp
cli
aam
sbb
stos
data16
pop
cltd
jl
mov
or
push
dec
std
repnz
aas
pop
lock
sti
sahf
mov
cltd
repz
xlat
jecxz
enter
in
dec
pop
pop
push
jbe
inc
mov
sub
pop
stos
jbe,pt
mov
in
sub
in
sbb
shl
rorb
ljmp
rcl
xor
ds
fildll
js
cmp
in
sbb
fsubrs
pop
xchg
inc
jl
xor
sti
das
fcompl
pop
mov
inc
lahf
dec
pop
les
mov
pop
lret
pop
and
test
rorl
in
in
scas
clc
dec
cmp
pop
dec
daa
xchg
enter
out
movsl
adc
outsb
mov
aad
push
je
mov
jecxz
jmp
lret
dec
pop
je
jns
add
and
add
sahf
movsb
stos
push
fmuls
mulb
sub
jb
sub
in
ret
cld
js
pusha
test
popf
mov
lock
popf
and
pop
sbb
mov
hlt
sar
push
ljmp
cltd
pop
add
or
and
xorb
push
lods
mov
mov
cs
mov
stos
or
cmc
mov
in
push
lcall
cmp
cmp
into
fisttpll
mov
xor
jg
sbb
xorl
jo
shl
and
mov
addr16
xchg
pop
pop
jl
inc
cmp
stos
jl
mov
push
inc
outsb
adc
out
jg
stc
mov
jg
int
dec
jb
adc
fcoms
stos
adc
xchg
outsl
into
lret
sbb
mov
stos
lret
icebp
mov
popa
adc
fwait
fwait
pop
mov
cltd
dec
sahf
push
js
add
mov
inc
or
mov
stos
xchg
addr16
test
popa
inc
dec
lock
add
mov
inc
sahf
sbb
das
pop
int3
mov
movsb
scas
push
das
sbb
add
das
lret
les
pop
mov
stos
pushf
and
popa
andb
insl
dec
push
sahf
cs
in
xor
or
mov
mov
adc
outsl
js
add
test
sbbb
int3
jo
ret
mov
hlt
stos
cmp
jle
cs
lea
pop
jb
jne
sbb
cmp
in
orl
fwait
arpl
cmpsl
add
test
or
cs
push
push
lahf
test
mov
mov
adc
xchg
or
adc
in
jge
cmp
push
mov
popa
xchg
push
fisubl
jbe
movsl
xor
fmull
xchg
adc
mov
dec
out
test
shrl
and
lahf
mov
fcoms
sbb
mov
iret
xchg
inc
xchg
nop
mov
loope
into
adc
pop
xor
and
xchg
mov
ret
lea
test
jg
pop
or
mov
inc
xchg
ljmp
lods
ret
sbb
cmp
push
imul
jb
in
arpl
lahf
inc
xchg
test
ds
mov
and
push
xchg
mov
enter
fmuls
push
jnp
gs
cmp
jp
pushf
xchg
add
shll
stc
scas
add
cmp
xchg
shll
lret
add
jl
jne
data16
inc
push
xor
cmp
pop
fldl
out
dec
or
jne
outsb
ja
jge
xchg
mov
insl
inc
mov
inc
mov
icebp
jno
shlb
arpl
xchg
js
popf
inc
sub
xchg
shr
inc
bound
mov
je
pushf
rorl
push
pop
sub
mov
or
mov
lret
sub
xor
add
test
xchg
cld
push
pop
sbb
jnp
mov
adc
adc
mov
or
jns
aaa
loope
sbbl
cmpsl
stos
out
lret
sbb
fstpt
cmp
mov
rorl
clc
cmp
dec
mov
cwtl
or
add
adc
addr16
cmpsb
inc
icebp
push
push
pop
cmc
aaa
gs
xchg
das
pusha
pop
insl
aas
jns
cld
xchg
lcall
pusha
mov
addl
shll
jo
mov
movsb
loop
or
lea
dec
mov
mov
xor
movl
scas
jne
xor
data16
or
jg
pop
pushf
adc
and
inc
std
inc
fwait
aas
stos
ficoml
xrelease
mov
rol
fidivs
jle
fidivrl
outsl
ret
hlt
decl
mov
sbbb
popa
inc
and
negb
adc
repnz
sahf
dec
loop
mov
mov
lds
pop
add
or
mov
push
jg
mov
out
inc
cmpsl
mov
lret
mov
ret
sub
int3
sahf
push
cmc
pop
notb
mov
scas
sub
orl
mov
dec
xor
sbb
jae
enter
into
sbb
mov
add
xchg
int3
sbbb
push
add
inc
daa
out
add
fistl
sbbl
inc
movsl
xor
sarl
mov
xchg
int
pop
mov
popa
add
movsl
cmp
into
mov
je
in
in
push
mov
in
xchg
mov
insb
mov
push
cmpb
aad
sub
pop
ror
mov
outsb
out
push
call
shrb
sbb
push
stos
out
dec
mov
push
push
loop
xlat
adc
sub
loopne
mov
loop
mov
push
pop
aam
push
mov
outsb
xchg
mov
je
loope
xchg
mov
inc
sbb
push
push
inc
notl
outsl
add
xor
xchg
sbbl
pop
sahf
movsl
mov
test
pop
cli
outsb
jbe
push
lret
in
sar
mov
or
addb
dec
mov
xchg
fcoml
call
xchg
lret
rorb
call
cpuid
out
jae
pop
fsts
aas
xchg
cmp
fsubrs
andb
in
decb
or
adc
mov
lret
movl
fisubs
cmp
lret
out
pop
mov
cwtl
push
dec
lods
test
sub
jl
xor
cmp
inc
push
mov
sbb
pop
mov
adc
and
nop
dec
and
inc
push
in
add
and
dec
add
jo
xchg
mov
inc
outsl
loopne
jo
cmc
sti
out
xchg
cwtl
daa
ficoms
test
mov
adc
insl
push
or
cmp
mov
into
inc
pop
fnsave
or
fcmove
cmpl
jno
and
xchg
repnz
sbbb
out
xor
xor
in
data16
add
pop
inc
jbe
sbb
subb
inc
jecxz
incb
mov
jne
and
mov
in
sbbb
ds
addr16
mov
out
xchg
popf
and
mov
jmp
xlat
movsl
mov
addr16
cs
call
mov
iret
aaa
loop
lods
cmp
shlb
xchg
adc
inc
repnz
and
mov
rol
fstl
push
sub
jl
xor
push
mov
rcl
faddl
sub
sub
neg
push
xchg
in
mov
cmp
pop
jle
jle
aas
xor
in
xor
sub
adc
pop
mov
jns
insb
push
fnstcw
fdiv
rorl
test
xchg
push
inc
outsl
push
in
push
repnz
mov
xor
pop
popa
jae
dec
xor
xchg
scas
les
inc
mov
or
idivl
sub
addr16
mov
fnstsw
inc
addr16
xchg
sbb
mov
pop
mov
fldenv
dec
mov
out
sahf
mov
stos
or
push
in
insb
sahf
dec
sub
mov
cmp
pop
jecxz
jae
mov
push
mov
pop
popf
mov
test
push
lods
aas
add
ret
cld
scas
data16
paddusb
call
xor
arpl
stos
mov
jnp
ljmp
mov
in
jecxz
stos
test
dec
mov
popa
cli
xor
adc
out
loope
xor
or
out
nop
mov
fwait
notb
jecxz
outsl
add
fnstenv
sahf
sbbl
lcall
daa
lret
hlt
mov
sbb
mov
or
or
mov
lahf
xchg
data16
mov
mov
sub
popf
cmp
mov
sarb
pop
cmc
cmp
fiaddl
shrb
loopne
jnp
pushf
jae
cmp
es
fidivrs
loope
mov
jl
lret
mov
ja
popa
addb
loop
dec
add
repz
adc
add
and
test
push
rcr
sbb
push
push
je
pushf
std
insb
add
movsb
testl
sub
out
push
xor
sbb
int
fs
fmulp
pop
xor
je
fmulp
jle
stos
jmp
xchg
dec
fistpll
repnz
inc
cli
into
out
add
notl
mov
fdivrs
bound
mov
ror
out
xchg
movsl
jae
push
lods
xchg
or
cli
sub
add
fldcw
push
loop
pop
cmp
push
inc
stos
das
mov
xor
dec
xor
dec
cli
jecxz
mov
inc
jecxz
fs
jns
fs
push
fisttpl
leave
lods
data16
test
pushf
ss
mov
lods
cs
cli
jbe
fcom
xchg
movsb
iret
jns
stc
iret
movsb
inc
xchg
dec
mov
cwtl
push
pop
stos
sbb
das
aad
pop
imul
dec
hlt
insl
sbb
bnd
pop
adc
out
lahf
ret
iret
pop
lock
jp
fisttps
jmp
pop
jg
sti
addb
in
js
inc
mov
out
mov
aaa
outsl
sbb
insb
dec
pusha
mov
xchg
xchg
mov
test
mov
out
dec
ljmp
xor
xor
rol
jne
dec
mov
movsb
in
imul
loopne
iret
test
xlat
aam
jne
cwtl
and
sti
push
sub
sarb
int3
pop
fildl
xor
add
push
or
fcompl
les
orb
out
inc
andl
inc
int3
xchg
add
mov
repz
int3
sbb
fldenv
xor
pushf
push
or
stc
ss
rol
jg
fucompp
stos
fcomps
dec
in
pushf
movsl
call
push
cli
inc
lret
pop
aaa
pop
icebp
shrl
or
mov
jnp
fisubrl
clc
inc
test
pop
push
sar
shr
push
lret
pop
xchg
and
fsubp
out
xchg
sub
mov
out
push
cmp
notl
pop
popf
sub
out
cmc
inc
lods
popf
jl
xchg
adc
push
cmc
cmp
sub
xor
xchg
in
fbld
addb
sar
fucompp
rol
sub
cmp
lret
cltd
nop
and
adc
xchg
sub
clc
push
or
mov
scas
or
loope
sahf
lods
or
ja
in
adc
loopne
imul
xchg
inc
xchg
lea
inc
mulb
sub
dec
out
jg
or
arpl
sub
aaa
pop
dec
mov
xor
mov
mov
js
ljmp
jb
and
add
push
dec
xchg
test
dec
jecxz
cmpb
ficoms
je
sbb
adc
or
call
pusha
sub
mov
and
addr16
andl
mov
std
cmc
sbb
push
mov
mov
sbb
jmp
mov
cmc
insb
data16
xchg
push
cmp
pop
sbb
jecxz
popf
jae
popf
stos
orl
add
cs
mov
pop
mov
loop
sub
inc
in
orl
mov
dec
call
and
lahf
dec
lcall
sarb
jb
fcmovnbe
lock
sbb
cmp
cmp
pop
lea
xor
jns
test
aad
jmp
push
pop
fiadds
outsl
xor
xchg
xchg
test
jg
stos
roll
jae
flds
xchg
cwtl
dec
in
sbb
lret
ss
addb
out
arpl
test
jge
sub
je
adc
pop
cli
sub
xchg
fxch
hlt
mov
inc
xor
xchg
mov
xchg
ffree
pop
loop
in
aas
xchg
stos
cmp
and
out
int
add
aam
and
cmc
cmp
out
adc
negb
aam
addl
mulb
dec
insb
hlt
and
rcrb
test
mov
scas
dec
fisubl
push
fs
xor
sub
cmpsb
mov
lret
out
mov
out
ja
ret
shrl
enter
ljmp
mov
pusha
push
sub
add
stc
hlt
mov
push
fcoms
dec
fwait
dec
inc
xchg
das
into
xchg
mov
daa
nop
fidivl
mov
push
mull
rolb
pop
jecxz
stos
cmpsl
mulb
inc
pop
loop
or
xchg
test
ret
imul
mov
and
aad
out
leave
sub
bound
icebp
dec
adc
pop
adc
gs
loopne
outsb
rcrl
ljmp
cltd
cmpsl
ds
rolb
add
sub
push
sub
push
and
jmp
fdivl
int
clc
dec
rclb
lock
daa
sbb
mov
mov
out
or
sahf
fsubrl
fists
imul
push
mov
aam
mov
cmp
daa
gs
sub
movsl
jg
xor
mov
mov
pop
dec
push
jbe
xor
decl
pop
mov
mov
ss
add
jl
push
sbbl
mov
out
ds
and
mov
enter
pushf
pushf
cld
cmp
ret
in
js
jg
and
jp
loop
push
clc
inc
movsb
push
xchg
bswap
cld
fisubrl
enter
fnstsw
xlat
or
jo
or
mov
jo
xchg
mov
ss
mov
pop
push
das
idiv
jno
test
cmpsl
adc
in
push
roll
adc
shl
movsl
roll
loope
iret
xlat
shrb
dec
mov
xchg
scas
cmp
mov
jns
mov
mov
xor
sbb
push
mov
popf
or
pop
dec
adc
jl
and
mov
mov
xchg
andl
pop
lds
dec
fwait
mov
lcall
sub
and
lret
rsm
ljmp
or
add
push
daa
fmull
inc
xor
and
mov
sbb
out
aas
test
and
push
stc
lcall
cmpsb
subb
test
or
jb
or
sbb
in
or
aas
in
xor
dec
pop
xor
test
lea
test
cmp
jb
mov
dec
and
sbb
fcoms
cmp
repnz
mov
push
xchg
test
call
mov
sub
inc
jae
pop
loopne
jecxz
stc
outsl
jnp
imul
push
mov
icebp
sub
inc
push
outsb
hlt
or
sti
cmc
std
addr16
jg
cli
pusha
jge
ja
lock
mov
dec
shrb
inc
xchg
push
dec
xchg
or
dec
cmpl
pop
push
movl
loope
testl
jne
pop
pop
lock
dec
imul
add
fldt
out
inc
or
ret
js
jle
das
testl
sub
add
scas
aad
adc
or
jecxz
mov
mov
in
mov
add
scas
cwtl
movsbl
loope
divl
popa
pop
add
jmp
aas
fisttps
rcrl
xor
mov
push
pusha
ds
add
sbb
mov
sub
or
mov
cld
mov
inc
ja
test
xchg
cmp
add
cli
pop
jb
jae
push
jb
mov
inc
arpl
fnstcw
cltd
cltd
inc
add
subl
mov
or
testl
lods
push
rorl
pusha
mov
mov
sub
pop
sbb
inc
stos
xor
dec
loope
stos
mov
sbb
mov
lock
mov
sub
in
mov
in
hlt
pop
out
jmp
push
mov
push
push
fcomi
mov
ds
push
insb
jae
dec
sbb
pushf
mov
add
mov
jo
cli
inc
dec
inc
mov
fdivr
mov
pop
add
sti
pop
dec
mov
mov
test
bound
cmp
xlat
rcrb
and
xor
sub
adc
shll
jmp
loopne
push
into
cmp
adc
sub
pushf
jno
or
ret
mov
outsl
dec
dec
or
sbb
inc
arpl
das
in
enter
jmp
sbb
sub
or
repz
insl
es
push
push
jg
xchg
xor
popf
mov
xor
nop
xor
fs
sbb
sahf
and
add
repz
inc
fs
push
xchg
test
jmp
aaa
sub
lea
xor
push
add
daa
jecxz
jno
push
ljmp
sub
mov
xor
push
push
leave
pop
aaa
push
movsl
and
xchg
cs
into
cmpsl
jbe
in
push
push
out
insb
dec
lret
bound
cmc
mov
adc
mov
in
arpl
pop
scas
xchg
mov
add
or
les
iret
cld
ds
mov
push
imul
cmpsb
scas
jge
pushf
push
sahf
pop
outsb
push
push
sahf
stc
sbb
push
cwtl
and
mov
adc
jbe
or
add
jnp
lds
push
mov
jg
mov
icebp
mov
dec
mov
repz
dec
dec
in
aas
cmpsl
adc
jo
mov
sbb
sub
push
add
xor
mov
push
insw
xor
rclb
jno
inc
cmc
mov
mov
push
movsb
shl
sbb
and
lock
mov
cmp
dec
in
es
data16
cmpsb
inc
inc
cmp
sub
inc
pushf
cltd
js
push
dec
sbb
mov
insb
pop
in
pushw
cli
jle
sub
sbb
iret
push
xor
fmul
clc
pop
fldt
jp
scas
sbb
call
dec
or
sahf
orl
ret
das
mov
fidivs
popa
push
mov
add
xor
pop
and
mov
out
xlat
adcb
data16
add
out
fs
fprem1
cmpsb
loop
out
int3
test
sbb
icebp
sahf
jae
inc
and
push
adc
mov
popf
xchg
stos
xchg
sbb
in
int
inc
jp
ljmp
push
dec
add
stc
addr16
fldenv
fcompl
mov
test
mov
lods
or
dec
mov
bound
stc
push
incb
movsb
mov
adc
inc
daa
int
ret
ja
xchg
adc
dec
and
loopne
ret
inc
orl
ret
inc
outsb
push
imul
aas
jg
push
je
shrl
lahf
dec
dec
push
adc
or
nop
imul
push
arpl
in
gs
inc
jl
xor
cmp
mov
xchg
dec
and
push
mov
jo
pusha
pop
cmp
pop
into
xor
aad
sahf
jbe
pop
clc
or
popa
pop
mov
push
in
inc
test
push
xchg
mov
negl
hlt
sub
addr16
or
or
add
mov
out
data16
jae
jle
push
rcll
push
mov
push
sbb
fistl
inc
mov
push
inc
or
cs
cmp
xor
mov
sbbb
mov
daa
push
jb
adc
and
push
xor
mov
mov
sub
xchg
jbe
stos
sub
jnp
test
cli
out
mov
add
pusha
std
push
enter
cmp
jle
pop
lea
in
lods
popa
loopne
mov
nop
mov
cmp
outsl
fcmove
dec
jge
or
notb
aas
inc
test
dec
mov
push
xor
movsl
in
scas
bound
sahf
fcomps
in
pop
lods
mov
cmpl
fldt
inc
mov
sarb
xchg
mov
push
sbb
xor
std
imul
dec
lret
mov
push
mov
push
mov
pushf
pop
aad
pop
cmc
insb
mov
inc
mov
leave
mov
popa
and
jmp
mov
stc
repz
das
stos
fisubs
xchg
jnp
and
xchg
das
inc
rcr
stos
daa
xor
xor
pop
push
xchg
jmp
or
movsl
in
stos
fs
adc
lock
lret
push
dec
xchg
push
ds
xor
ret
imul
dec
movsb
add
adcl
xchg
xchg
add
gs
mov
and
sub
push
clc
dec
mov
xlat
mov
xor
xor
add
xchg
in
into
cmpsb
adc
sbb
adc
test
adc
push
movsl
mov
out
jp
loope
jg
sbb
pop
div
loop
mov
shl
push
sbb
add
inc
cmp
mov
mov
xchg
rolb
jae
and
xor
mov
dec
repz
inc
fdivr
insb
lock
push
roll
and
bound
loopne
jae
xchg
inc
in
cltd
cmc
gs
adc
push
ss
dec
adc
lret
addr16
pop
into
jbe
jecxz
jae
insb
and
mov
cmp
cmp
lods
fwait
inc
push
fwait
push
es
add
mov
mov
push
in
fbld
jmp
adc
in
in
cmc
addr16
adc
subb
outsl
hlt
xchg
das
aam
mov
mov
call
ja
mov
mov
sbb
and
rsqrtps
mov
mov
jle
add
cmovl
jge
sbb
pop
and
das
push
jecxz
jnp
stc
cmc
and
addb
ret
lahf
std
mov
pop
shrb
cmp
xchg
jb
test
test
pop
popf
je
imul
pusha
sub
xor
pop
or
cld
jnp
jle
jo
or
mov
ret
leave
add
jns
inc
stos
iret
pop
andl
rorl
dec
xor
sub
insb
xchg
or
dec
and
inc
jp
cmpb
pusha
cld
into
mov
orl
and
and
mov
jnp
pop
fwait
imul
cltd
inc
inc
das
ja
sub
jg
daa
fwait
and
jno
mov
lcall
cltd
negl
fsub
adc
jg
mov
loope
jg
cmp
and
xor
lahf
lds
or
ljmp
push
cmp
ds
sub
imul
push
mov
xchg
clc
xchg
xor
in
inc
pusha
arpl
iret
jb
fisubrs
lds
je
sub
lcall
mov
cli
xchg
out
pushf
add
xchg
ss
andb
mov
push
cmp
inc
leave
and
in
shl
xchg
jo
lods
data16
testl
cs
mov
sti
les
fidivs
shrb
xlat
ja
aad
je
mov
or
add
loopne
negl
clc
jnp
sub
xor
aas
popa
fldcw
xlat
leave
sarl
or
arpl
push
js
and
cmp
add
insb
movsb
es
in
sbb
mov
sub
jne
dec
mov
stc
xchg
sbb
xchg
imul
mov
nop
lret
cld
fsubrp
sub
mov
adc
push
lahf
pusha
mov
adc
adc
xchg
aaa
fdivl
jnp
lds
cli
test
dec
test
inc
bound
ret
xor
ficomps
jnp
cld
mov
mov
sti
inc
scas
test
clc
inc
cmp
push
pop
movb
and
xor
pminub
and
sub
notb
mov
xorl
fucomp
inc
aad
mov
jmp
cmp
stos
dec
or
shrb
shll
mov
xor
cmpsb
insb
mov
nop
jo
push
popa
add
adc
cmp
jns
jp
adc
mov
pop
lcall
lret
test
jecxz
mov
stc
nop
mov
fbstp
and
jb
addl
mov
pop
insb
fildll
out
jo,pt
adcl
jne
insl
xorl
lods
cltd
mov
and
push
mov
js
dec
sbb
pop
in
cmpsb
inc
iret
imul
loopne
in
dec
adc
add
pop
adc
clc
dec
mov
aaa
mov
or
and
jb
or
xchg
ss
mov
mov
mov
shl
cwtl
mov
add
lods
ret
adc
imul
mov
popf
push
arpl
sub
in
in
push
das
jp
push
out
out
hlt
rorl
xchg
imul
enter
xor
icebp
xlat
mov
das
cmp
daa
adc
sbb
aam
je
adc
lret
jecxz
pop
clc
outsl
pop
and
imul
jle,pn
out
aam
adc
xlat
decb
in
or
xchg
xchg
test
pushf
enter
xchg
pop
ret
mov
or
out
inc
stc
push
mov
jp
xor
out
push
loope
mov
js
or
ds
data16
jge
cmp
push
pop
out
adc
xchg
inc
push
insb
dec
mov
fs
loop
xchg
push
lahf
xchg
outsb
incb
jo
xchg
ficoml
rcr
lds
fmull
pop
mov
lock
mov
in
adc
ds
lods
hlt
and
shrl
and
outsb
int3
jb
lds
imul
push
loope
lds
lods
and
jae
aad
cmp
dec
push
push
dec
jbe
mov
mov
mov
rcrl
or
or
jmp
arpl
stos
sbb
dec
sbb
scas
sbb
out
popf
nop
sub
jnp
xchg
cmp
aaa
bound
pop
mov
push
fwait
mov
pop
jecxz
leave
int3
stos
pop
dec
rcrl
imul
in
hlt
cmp
lock
mov
fisubrs
mov
fidivs
fstpl
add
loope
cmp
pop
inc
mov
je
mov
enter
fstl
ss
and
inc
and
and
push
iret
pop
iret
or
sbb
jp
out
push
push
addr16
divl
in
push
push
aaa
in
mov
pop
ljmp
imul
mov
popa
pop
cltd
pop
cmp
xchg
pop
daa
aas
or
mov
lret
pusha
ficoml
or
mov
cmpsb
adc
sub
fiadds
push
push
ja
adc
or
pusha
fwait
ss
inc
cmp
cmp
scas
fcoml
and
sbb
sub
pop
popa
data16
mov
in
jg
addl
push
dec
sbb
stc
dec
cs
xor
mov
dec
inc
lock
iret
int3
add
fstpt
hlt
cld
pop
popa
mov
sub
cmp
jmp
inc
xchg
sbb
ljmp
ret
lods
sahf
pop
dec
lret
lods
and
or
test
in
inc
jle
mov
movsl
shr
mov
rorb
dec
stos
mov
lds
addr16
or
hlt
cld
push
xchg
dec
dec
push
dec
fs
fbld
dec
or
icebp
mov
dec
pcmpgtd
insb
xchg
fidivs
cmp
lcall
mov
pop
sarb
repz
mov
adc
jns
movsb
pop
jo
jle
mov
stc
inc
scas
cli
mov
add
inc
scas
cmp
add
and
push
mov
int
out
sub
loopne
adc
mov
test
dec
mov
xor
repnz
cmp
outsl
xor
mov
mov
and
push
movl
inc
in
mov
mov
push
pop
stos
adcl
push
sbb
push
rorl
add
das
aas
push
add
pop
out
or
add
jg
jl
stos
and
mov
dec
or
call
xchg
divl
aad
mov
fiadds
inc
add
dec
cwtl
mov
sbb
insl
pushf
mov
xor
xlat
mov
xor
xchg
mov
lds
dec
fmuls
incl
in
jne
adc
jmp
cwtl
or
push
sahf
fbstp
mulb
cmc
jle
lock
movsb
in
pop
subb
adc
lods
push
faddl
or
ret
push
jmp
push
mov
fildll
test
outsb
mov
jle
imul
mov
ret
dec
nop
shr
stos
daa
mov
in
mov
out
addr16
fdivrs
lret
mov
cmp
xorb
pop
mov
ljmp
ret
rcrl
pop
cli
mov
leave
xor
sahf
sub
and
repz
jmp
mov
add
jbe
ljmp
push
cmpsb
jnp
in
mov
stc
add
in
enter
mov
das
mov
shrl
scas
scas
push
iret
jns
cmp
sub
pop
push
outsl
dec
scas
or
jne
push
add
xchg
xchg
cmp
cmp
mov
js
sbb
jmp
mov
test
in
or
ja
or
xchg
loop
jp
push
jns
dec
sti
negl
lods
mov
clc
sub
aad
push
xchg
cltd
das
xchg
lds
inc
push
jne
stos
icebp
xor
pop
sbb
xchg
mov
jp
xchg
stos
jle
inc
aas
movb
mov
imul
sub
insb
mov
adc
xlat
push
xor
out
mov
icebp
mov
sub
mov
jecxz
mov
and
out
jne
imul
push
pusha
xchg
fs
popf
sbb
test
not
les
aad
cmpsl
add
mov
in
addr16
repz
test
mov
adc
movsb
cmp
lahf
ja
push
jo
movsb
xor
xchg
roll
idivl
mov
dec
sti
movsl
scas
mov
sti
dec
movb
fwait
ss
fadds
add
out
jmp
sbb
fwait
xchg
mov
out
push
lods
jle
popf
pop
mov
lret
sbb
push
insb
lds
ret
and
jmp
lds
xor
pop
repnz
pop
mov
push
fimull
jmp
push
arpl
xchg
mov
add
cmp
and
addr16
xor
out
push
sub
pop
sbb
add
fwait
mov
xchg
and
int3
jae
fisubs
xchg
rol
mov
call
clc
jno
popa
push
bound
bound
mov
inc
sbb
lods
ja
mov
lock
mov
cli
das
lea
add
jmp
push
adc
sti
jecxz
in
mov
jae
sub
jns
sub
ficoml
pop
push
inc
xlat
ljmp
in
mov
jae
jp
push
pop
aas
lret
popa
movsb
inc
mov
mov
sbb
mov
loopne
xor
and
lea
int
jne
sbb
mov
jge
mov
push
scas
xchg
xchg
sti
out
mov
test
jns
or
outsl
mov
mov
cmpsb
adc
mov
fiadds
ljmp
lock
pop
shrb
mov
pusha
movsl
aaa
inc
add
lret
fwait
inc
jge
dec
xchg
jmp
inc
rorb
xchg
adc
or
fs
roll
xchg
xchg
mov
xor
sarl
mov
sbb
lods
mov
xchg
push
lret
sti
std
into
pop
xchg
jae
lahf
jecxz
daa
out
mov
cmp
pop
cmp
adc
cmp
jle
jmp
aaa
mov
jmp
lahf
leave
out
jae
inc
mov
inc
jne
or
or
mov
jmp
scas
cs
xchg
push
pop
pop
addr16
dec
fistl
xor
sbb
mov
xchg
push
pop
insb
nop
nop
pop
cmp
pop
add
sbb
sub
ja
pop
jne
gs
pop
das
cli
cltd
adc
xchg
gs
movsb
jp
dec
clc
fs
sbb
jo
sub
jp
pusha
or
dec
mov
rclb
fnstcw
adc
xor
leave
xor
test
pop
cli
mov
xor
call
pop
roll
aaa
rclb
inc
adc
xchg
in
mov
and
jne
xlat
andb
icebp
push
pop
mov
sbb
cmp
jle
lret
lahf
je
adc
xor
insl
xchg
pusha
sub
or
test
mov
das
cmp
pop
outsb
cs
lods
xlat
fldenv
sbb
add
out
jne
call
pop
imul
popa
fimuls
xlat
or
scas
sub
sub
movsb
loope
mov
jns
dec
pop
add
aam
test
stos
aas
sbb
inc
push
sbb
imul
dec
lods
lcall
sarl
cmp
sub
lahf
mov
fdivrl
mov
popf
cmp
sbb
jle
ja
pusha
jno
sub
pop
inc
fidivrs
push
cltd
adc
and
push
push
out
add
jno
imul
aaa
and
push
xchg
out
push
lods
iret
icebp
gs
sbb
stos
filds
mov
push
xor
or
and
imul
adc
test
and
fstps
addr16
sub
mov
mov
out
adc
xchg
cmp
jg
loopne
inc
clc
xchg
rol
pop
mov
adc
jno
mov
fnstsw
xor
bnd
jl
jbe
outsl
jae
push
rclb
mov
insl
add
xchg
dec
fistl
and
jecxz
rcl
cli
ds
push
and
cmp
in
mov
inc
ss
inc
lds
inc
jmp
xchg
mov
jg
leave
outsb
imul
mov
rolb
cmp
and
or
lds
scas
shl
mov
inc
adc
mov
push
ret
jl
cmc
sbb
lods
pop
insl
push
scas
iret
movlps
push
cmp
jmp
ret
shl
cld
xlat
filds
addr16
dec
out
in
out
mov
and
roll
shlb
jg
aam
add
scas
fisubrs
mov
in
inc
dec
into
sub
addr16
fildl
add
mov
mov
jns
dec
xchg
jns
mov
es
push
int
stos
or
fmulp
lds
outsl
je,pn
add
fs
mov
mov
jbe
stos
pushl
dec
lods
pop
pop
aad
add
ret
daa
stc
xor
sub
push
jmp
mov
mov
cmp
xor
shll
es
xchg
call
call
scas
addr16
les
rcrb
jb
jno
add
jnp
inc
movsb
out
in
push
pop
add
lahf
mov
rorb
mov
cmp
cmp
mov
pop
and
xor
lret
inc
nop
mov
daa
fwait
nop
cmp
aaa
mov
xor
inc
or
add
adc
fsubrs
mov
sub
mov
outsl
les
jle
adc
clc
cmp
out
jmp
out
push
pop
cld
xchg
and
out
adc
lock
cmp
int
inc
push
aam
fs
add
out
andl
or
je
jbe
data16
stos
int
jge
rsm
loopne
jns
inc
pop
xlat
jmp
xchg
sub
jae
nop
mov
mov
sub
mov
mov
inc
adc
test
jge
inc
pop
ret
jb
lds
nop
mov
stos
mov
int3
rcll
rcr
dec
jecxz
sbb
fidivrl
fiaddl
or
repnz
pop
bound
test
and
jbe
mov
push
mov
je
mov
cmp
pop
aaa
cmp
ret
mov
and
mov
cli
push
adc
push
stc
das
mov
rcll
push
fistpll
cmpsb
mov
xor
loopne
adc
hlt
adc
xchg
sahf
mov
iret
rcl
cli
orl
dec
adc
adc
mov
pop
enter
pop
cs
lods
push
push
sbb
cmp
jbe
and
js
stc
mov
sbb
fildll
mov
stos
xor
jmp
out
mov
test
je
movsl
mov
int
mov
push
mov
cmp
inc
dec
and
dec
dec
xchg
movsl
xor
dec
movsl
adc
mov
push
and
sub
pop
jg
sub
mov
add
mov
sub
inc
xchg
leave
jnp
sbb
std
scas
adc
not
mov
sti
std
jmp
aam
repz
jae
shrb
inc
repnz
es
lea
mov
aam
lahf
mov
or
ret
nop
xor
in
out
inc
xor
cmp
mov
rclb
or
sti
ret
xor
and
sub
insb
ss
add
dec
adc
fisubrs
stos
jle
loopne
ret
pop
xchg
popa
sahf
add
fmull
leave
mov
repnz
mov
adc
aad
pushf
or
scas
std
cmp
scas
lcall
mov
and
adcb
pop
popa
jg
and
jp
roll
xchg
movsb
in
clc
pop
mov
adc
pushf
mov
sarl
push
mov
lods
inc
int
inc
xchg
pop
push
insb
jo
sbb
lds
in
out
jp
imul
hlt
std
pop
insl
jl
in
scas
mov
sub
clc
outsb
jmp
lahf
repz
outsl
out
pop
sub
fs
pop
ret
adc
xchg
push
dec
rolb
mov
fldenv
adc
jb
or
movsl
popa
cmp
movsl
test
pop
movsl
stos
test
add
mov
push
das
inc
push
cltd
or
inc
das
inc
out
and
daa
and
aaa
pop
into
iret
push
daa
insl
mov
or
enter
or
fisttpl
in
and
faddp
mov
fistpl
cmpsb
mov
das
sbbl
jp
pop
into
icebp
pop
fistl
jl
xor
filds
fisubrs
push
inc
xchg
pop
outsb
sbb
sub
ja
sub
ret
jbe
inc
mov
push
lcall
std
cmp
mov
aaa
sub
mov
testb
xchg
stc
xor
push
or
mov
fst
sub
inc
mov
mov
pop
lods
aad
std
rolb
cs
sbb
inc
scas
adc
add
xor
aaa
xchg
push
ljmp
adc
and
incb
add
scas
cwtl
mov
mov
bnd
jbe
lret
shlb
xor
shrd
aam
push
push
stos
dec
mov
push
repnz
test
xchg
lods
dec
roll
mov
clc
adc
sub
nop
cmp
xchg
mov
mov
inc
add
rorb
inc
xchg
mov
js
inc
loop
mov
push
lods
xor
pop
lcall
ret
out
mov
push
adc
push
imul
rorl
add
cld
sub
add
out
ljmp
in
fwait
scas
in
aad
xchg
mov
mov
fldt
push
lods
sub
inc
call
mov
rclb
into
sub
lock
xchg
or
lock
leave
mov
out
nop
in
dec
movsl
call
loopne
inc
xchg
ds
push
xlat
repz
repnz
dec
jmp
inc
lcall
out
adc
xlat
neg
andl
loop
cmp
fbld
sub
lcall
xor
adcl
dec
jns
jmp
incl
nop
imul
mov
pop
addr16
fcomps
fstl
mov
fistpl
sarl
neg
sbb
sub
xchg
mov
or
repz
dec
andl
fnsave
and
cwtl
push
and
into
inc
in
loopne
xchg
scas
jle
int
mov
in
or
mov
popf
fwait
je
outsl
pop
fdivrs
insb
inc
xchg
add
repz
ret
mov
inc
dec
mov
mov
and
stc
xor
lock
jae
fs
adc
dec
push
push
add
xor
pop
mov
jo
test
sub
mov
dec
aaa
cmpsb
push
fldenv
in
jno
cmp
push
mov
call
pushf
pop
cmpsb
and
jns
jg
sub
sub
xchg
jbe
push
jge
jns
gs
sub
push
mov
and
add
xchg
lea
sbb
push
inc
loopne
stc
mov
pop
dec
sub
imul
mov
jb
jnp
mov
mulb
ficomps
mov
jge
adc
cmpsb
inc
into
mov
push
dec
push
jno
pop
mov
cmpsl
fists
leave
inc
sti
rol
and
imul
jmp
mov
jae
mov
rclb
int3
outsb
cltd
in
sbb
or
sbb
inc
shrb
movsb
xor
lret
imul
fstpt
push
stos
and
adc
push
popf
stos
fidivl
xor
pop
icebp
cmc
jb
cmp
pop
rep
popf
lret
sub
nop
and
inc
xor
int3
mov
xor
pusha
mov
sub
cmp
mov
sub
insb
imul
sbb
scas
xor
ss
push
daa
adc
clc
sar
inc
test
xor
xchg
jge
inc
mov
ljmp
nop
stc
scas
inc
movsb
pop
dec
mov
loop
lods
jg
jp
mov
dec
imull
jmp
mov
mov
es
jecxz
or
and
xor
popa
bound
enter
xchg
sub
aam
jnp
scas
cmp
and
xchg
outsb
fidivl
cmp
scas
push
mov
xor
mov
les
sbb
pop
mov
xor
scas
out
nop
int
sub
pop
jb
jge
out
jl
pop
adc
js
push
sbb
fwait
push
shll
push
cmpb
insl
rorb
lods
idivl
push
cs
hlt
mov
push
push
cs
bound
sbb
je
insb
mov
test
cmpsl
mov
call
shll
lcall
mov
mov
mov
mov
aad
and
sti
inc
ljmp
xor
xchg
fs
or
mov
or
daa
xor
jo
mov
lahf
adc
aad
mov
ret
shll
dec
sbb
xor
inc
cmp
lods
inc
ds
inc
std
jno
xor
aad
add
outsl
test
inc
repnz
dec
aad
cli
les
push
push
stos
add
call
cmp
and
rcrb
sub
push
popf
divl
sarb
mov
mov
dec
inc
test
insb
adc
mov
into
jmp
data16
fwait
enter
jge
inc
insb
pop
adcl
scas
inc
lea
adc
or
pop
dec
adc
iret
pop
add
fwait
adcl
and
addr16
stos
stos
pop
aaa
dec
sbb
mull
or
out
or
mov
and
rcr
inc
lahf
jge
mov
cwtl
cltd
nop
in
sbb
and
orl
cmp
int
outsl
or
dec
rorb
sub
ss
push
mov
outsb
inc
std
jae
insl
push
xor
mov
iret
add
cmp
lcall
inc
fbld
xchg
mov
popf
add
icebp
dec
jmp
out
push
sbb
cmp
in
xchg
push
mov
movsl
in
xchg
mov
lret
std
std
pushf
cmp
jo
fistpll
sbb
and
add
mov
sub
out
mov
insb
jg
mov
leave
xchg
and
dec
jno
loope
xchg
mov
inc
cmpsl
sbb
add
ja
cmpl
pop
dec
out
popa
call
movsl
inc
stos
dec
push
out
test
aam
imul
and
lret
cld
sbb
mov
xchg
xor
lret
scas
clc
cwtl
add
imul
cli
call
mov
sbb
aaa
sub
pusha
cmpsb
and
sbb
xchg
ret
leave
ret
pop
mov
push
sbb
add
in
mov
or
xlat
cmpsb
mov
dec
cli
jne
mov
es
ljmp
mull
icebp
mov
sub
test
add
pop
out
mov
mov
jb
sar
xchg
adc
roll
xchg
bound
mov
aad
ficomps
mov
enter
sbbb
call
hlt
clc
stos
shr
iret
jg
cli
mov
popf
mov
xlat
je
cmp
and
scas
pop
sbb
fsubs
mov
and
pop
push
lcall
cmp
out
inc
jl
xor
pusha
xchg
sbb
sub
outsl
insl
adc
add
adc
xchg
add
jae
inc
pop
pop
mov
aaa
imul
dec
testb
sub
jae
shrb
adc
loopne
pop
jle
es
mov
pop
cmp
sub
add
ret
cmpb
add
aas
hlt
inc
iret
cltd
mov
ss
and
push
dec
pop
pop
mov
push
cmpsb
shll
das
loopne
jb
imull
xor
mov
adc
shrd
call
in
rcll
sti
sub
push
js
pop
scas
jmp
test
fdivrl
inc
and
push
sub
pop
lret
cmp
pop
addr16
mov
mov
or
sbb
and
inc
lods
push
nop
and
adcl
das
push
fimuls
bnd
push
sub
fimuls
imul
lock
push
xchg
call
adc
pusha
mov
pop
in
push
hlt
xor
cmp
push
loopne
aam
hlt
sbb
inc
cli
bound
lods
sub
aaa
flds
sub
loop
popf
inc
mov
jne
jge
fnstenv
popf
xor
and
movsb
cmp
shll
add
mov
pop
inc
call
hlt
jecxz
mov
jne
dec
ret
push
fdivrs
xchg
inc
fsub
jae
xor
inc
jp
mov
pop
xchg
data16
jb
or
int
fwait
mov
mov
roll
cmpsb
mov
fldcw
sub
jp
xchg
repz
push
cltd
pop
test
movsl
roll
mov
dec
add
enter
sarl
jns
lds
cmp
sbb
jne
das
call
je
ja
jb
or
mov
add
jbe
pop
mov
ja
jb
fcmovb
je
push
lds
das
shll
and
ficomps
rcrb
aad
cmp
adc
repz
push
dec
xor
and
add
je
rorl
ds
fnstcw
shrl
or
inc
ret
imul
sub
and
lea
pusha
mov
call
pop
dec
decl
iret
ret
pop
or
rcl
fmull
icebp
inc
ret
xlat
jno
mov
mov
int3
shl
jmp
dec
push
rep
arpl
push
add
ljmp
or
cmp
dec
sbb
pusha
adcl
cmc
jl
subb
cmp
sub
iret
inc
call
loope
inc
das
cli
test
pop
es
outsl
jne
jnp
dec
xorl
js
mov
call
push
lock
pusha
add
mov
push
cmp
out
adc
and
cs
out
int
repz
push
push
inc
and
push
div
jnp
ljmp
jl
mov
jmp
push
lock
adc
add
in
sub
loop
rcrb
xchg
shll
dec
shlb
mov
jge
pusha
inc
test
adc
jno
imul
push
cmp
push
xor
mov
pop
pop
jle
out
int3
idivb
lret
or
bound
punpcklwd
lret
movsl
fst
xor
inc
scas
in
pushf
das
mov
clc
nop
push
dec
addr16
scas
into
out
das
adc
xor
cs
jo
loope
clc
lds
scas
fcmovbe
push
add
jecxz
aas
pop
pop
loopne
faddl
xor
and
sub
ja
cmp
add
push
inc
xor
mov
loopne
sub
xchg
pusha
arpl
mov
mov
arpl
and
or
enter
es
push
or
movsb
xchg
mov
js
mov
jns
jecxz
jno
jg
inc
mov
loopne
and
out
aaa
xchg
test
ret
push
pop
adc
mov
imul
mov
cmp
mov
or
in
push
mov
and
jns
mov
outsb
mov
xor
or
dec
cmp
inc
xor
in
jge
frstor
sbb
in
mov
mov
imul
sub
adc
fdivrl
lcall
and
out
push
jb
fmuls
push
mov
test
test
push
push
mov
int
pop
pushf
cltd
out
rolb
imul
sti
cltd
push
cwtl
xor
and
insb
mov
sub
leave
arpl
movsl
jp
mov
aas
sbb
xchg
cmp
adc
bound
push
or
inc
jo
rcll
mov
sbb
mov
rcll
cli
daa
aas
push
or
leave
or
adc
outsl
fs
push
cmp
cmp
sub
dec
sub
inc
pop
sahf
adc
sbb
out
or
testb
cmp
xchg
sbb
xor
andl
loop
xchg
sub
cli
test
outsl
mov
imul
jno
mov
lea
arpl
lods
shlb
scas
mov
xchg
test
cmp
pushf
cs
cmc
cs
xor
repz
cmc
aam
sub
sti
mov
mov
sti
mov
jb
movsl
mov
jg
xor
rcrb
sbb
jae
sub
sbb
inc
adc
sub
ficomps
test
push
in
stos
lahf
push
fs
addr16
lods
insl
xor
loop
and
ljmp
mov
cmp
cs
mov
filds
ss
ret
aas
or
into
add
mov
in
mov
add
or
pop
jo
aam
cmp
push
xchg
mov
xor
loop
xchg
int3
dec
jmp
clc
push
push
mov
jbe
xchg
jnp
test
xchg
test
sub
inc
dec
mov
pop
mov
fprem
cmp
push
or
mov
sbb
je
lods
lock
xor
and
insb
sbbb
jge
mov
jo
mov
fcomip
rolb
mov
or
inc
cs
lahf
clc
mov
xchg
test
cmp
insl
push
xchg
ss
daa
mov
mov
out
add
cli
adc
es
testb
mov
out
mov
xchg
jns
dec
fistps
loop
sbb
push
std
jnp
pop
jl
fisubrl
jle
test
lds
mov
hlt
xor
dec
fcoms
insb
lcall
push
cmp
insb
push
jg
notl
call
mov
jbe
jmp
cs
dec
je
stos
mov
dec
rorl
xchg
into
in
out
inc
stc
fisubrl
push
test
add
fsts
pop
shlb
sub
ljmp
sbb
pusha
push
iret
and
sub
aam
jo
cmc
dec
fistl
lcall
jle
cli
fs
icebp
mov
aaa
cmp
test
into
rorb
cs
shlb
jle
inc
dec
xor
das
rcrb
add
outsb
mov
sub
aad
push
add
ret
inc
stos
shr
sbb
xchg
insl
mov
imul
cmpsb
sarl
arpl
dec
jp
cmp
mov
out
inc
out
inc
jle
sub
mov
pop
adc
adc
icebp
mov
sbb
xchg
xchg
std
pop
dec
inc
fstl
fiadds
add
cltd
pop
xchg
sar
js
add
push
sti
jg
lret
sahf
ror
mov
aaa
fs
push
sbb
into
push
dec
jecxz
int
mov
ret
jmp
push
cmp
jae
or
add
lret
pop
clc
lds
cmp
fstps
push
push
pop
int
inc
inc
in
loope
adc
add
cmp
push
mov
pop
popf
in
sub
adc
ds
mov
lock
or
mov
inc
adc
dec
and
push
daa
arpl
roll
addb
stc
lahf
jae
sbb
inc
mov
mov
imul
test
out
jno
or
jmp
push
xchg
mov
iret
dec
cmp
mov
fimuls
fcmovnbe
xchg
rclb
enter
sbb
inc
es
aam
mov
int3
dec
cwtl
std
js
out
les
roll
jg
push
movsb
push
js
das
fcom
lret
ljmp
pop
loop
sarl
fstpl
in
popf
imul
adc
jne
push
xor
fnstsw
call
ret
andl
cmp
test
cmp
leave
sbb
stos
test
es
pop
sbb
mov
adc
dec
xchg
fcmovbe
or
dec
andb
cmpsl
pop
add
das
rclb
pop
es
sar
add
imul
xchg
mov
enter
adc
stos
cld
sbb
push
mov
pop
jge
in
mov
aam
xlat
adc
mov
popf
fisttpl
mov
push
xchg
mov
rolb
push
cli
inc
test
add
cs
fisubl
mov
sbb
pmaddwd
pop
pusha
jmp
outsb
inc
movsl
dec
jg
inc
fiaddl
ret
mov
xchg
mov
add
ljmp
lea
pop
inc
shl
mov
inc
fistpll
daa
pop
fstl
jae
aam
inc
aaa
mov
aaa
lcall
and
enter
lds
shl
and
enter
lcall
xchg
hlt
imul
jmp
stc
jmp
jge,pt
ret
cmpsl
fsubl
mov
adc
enter
mov
cld
push
ret
jne
lcall
fisttpl
sarb
mov
outsb
mov
stos
cwtl
lods
or
pusha
sbb
rcrl
cwtl
xor
push
dec
je
andl
pop
jnp
ljmp
jnp
xor
xor
ss
lret
add
sahf
mov
and
sub
jmp
shrl
mov
pop
scas
sbb
lar
xchg
data16
sbb
jae
xorb
popa
pop
sbb
rclb
fdiv
jl
cwtl
scas
jecxz
sbb
fwait
scas
out
jmp
out
repz
mov
stc
enter
mov
lods
pop
xchg
push
shll
mov
pop
arpl
inc
lret
push
outsl
lea
inc
aas
mov
add
test
aam
mov
lcall
pop
scas
xchg
lret
pop
mov
lock
push
fdivrs
out
xchg
jns
sbb
rorb
push
pop
leave
cmpl
xchg
adc
or
mov
scas
push
push
push
es
xor
rolb
jae
cmpsb
adc
notl
cmpsb
ljmp
scas
cmpsb
sarb
or
and
test
jo
cmp
lcall
test
fsubl
loop
movsl
jmp
test
jmp
jmp
stos
jo
xchg
lods
jnp
fnstsw
scas
sahf
mov
pop
add
cli
dec
and
or
mov
xchg
push
cwtl
das
mov
fdivrp
sub
and
sbb
ss
scas
mov
push
ja
jno
scas
fnstsw
cld
stos
fnstsw
stos
mov
fimuls
les
loop
mov
mov
and
test
out
fisubl
sub
dec
div
add
fucom
addl
sbb
add
out
adcl
xlat
sbb
xorl
jnp
add
arpl
sbb
sub
cwtl
jmp
out
pop
fimull
pop
or
fwait
sarb
addr16
and
push
std
jbe
dec
mov
jge
ss
dec
pop
jg
mov
enter
xchg
xchg
imul
lods
or
sub
ljmp
fists
pop
inc
pushf
hlt
pop
add
jmp
jb
outsb
fisubs
imul
aam
je
push
and
test
stos
ret
cmpsl
cmp
loop
addb
lahf
fistps
mov
adc
sbb
das
adc
or
test
adc
lret
inc
xorb
push
addl
pop
push
mov
jecxz
sub
push
icebp
mov
stc
outsb
mov
rclb
mov
push
pop
ljmp
enter
or
xor
data16
fmull
dec
frndint
dec
pop
pop
ret
in
jne
popf
mov
je
in
loop
xor
je
jmp
adc
dec
sub
dec
pusha
imul
cmc
lods
pop
mov
xchg
push
add
pop
xor
sub
mov
movsb
or
fisubl
mov
sbb
sbb
jb
pop
pop
mov
gs
rclb
sahf
pop
jle
rcrb
sbb
or
popa
out
mov
xchg
sbb
frstor
xchg
sbb
and
push
pusha
fdivl
inc
mov
inc
sub
insl
ljmp
rcll
in
xchg
pop
jne
pop
ds
pusha
lahf
shrb
push
je
ljmpw
icebp
dec
or
cmp
stos
out
popa
loope
in
dec
sub
test
cltd
or
mov
lds
push
scas
mov
sbb
add
fistps
js
cmp
pushf
cli
pop
inc
push
rorl
push
push
or
mov
js
ljmp
pavgb
adc
mov
inc
insl
iret
aas
insb
in
or
push
es
clc
jle
fstpt
lds
imul
lods
mov
cmp
leave
jmp
aaa
xchg
test
push
outsl
mov
mov
jl
push
xchg
inc
sub
adc
adc
jbe
push
adc
and
repz
mov
into
push
dec
xor
jo
cmp
pop
jp
mov
add
call
sub
xchg
repz
loope
rol
in
push
iret
adc
or
push
push
in
xchg
int
jp
jp
addr16
fsubs
sti
int
xchg
xor
imul
ret
dec
add
inc
test
xchg
out
scas
mov
mov
ret
cmp
aam
cmp
mov
into
pop
push
shl
rorl
pop
pop
int3
jge
dec
mov
xlat
mulb
lock
pop
or
cltd
ret
popa
sub
xchg
fadds
jg
in
mov
push
icebp
fidivl
in
cltd
fidivrl
outsl
jo
and
aaa
cwtl
fldl
push
cmp
lds
cmp
mov
mov
dec
xchg
xchg
jge
shl
inc
clc
icebp
jns
scas
lret
outsb
arpl
pop
fs
outsl
imulb
inc
out
push
inc
cmp
fcmovnbe
push
jge
jb
inc
mov
xor
cmpsb
sahf
in
cmp
add
inc
lods
loope
les
mov
pusha
dec
cltd
inc
xchg
push
jb
push
dec
or
movsl
or
push
enter
mov
sub
cmp
xor
sub
sub
mov
add
sbb
adc
mov
jae
add
ret
idivb
xchg
ljmp
push
popf
lds
lcall
pop
fs
in
bound
ja
or
int3
ds
xor
int
mov
nop
push
mov
fiaddl
cmp
pop
adc
es
mov
mov
inc
jb
push
add
push
stos
mov
cld
push
iret
mov
iret
outsl
mov
pop
jmp
negl
mov
push
test
cmp
js
adc
and
in
or
xchg
sub
adc
repz
dec
jl
push
xor
cmp
int3
push
sbb
add
mov
sub
test
sbb
adc
out
lcall
fs
pop
adcl
or
add
scas
outsb
xor
mov
mov
and
dec
sub
dec
xor
jne
js
mov
lods
xchg
out
jg
loope
lret
imul
cld
loopne
in
test
daa
push
pop
into
or
add
incb
ss
out
je
nop
jmp
hlt
xchg
cwtl
xor
xchg
sbb
or
mov
xchg
dec
xlat
sti
pop
mov
nop
cli
and
cmp
cmp
mov
test
out
push
adc
dec
mov
aam
pop
aas
push
jp
xor
lret
out
dec
jo
inc
or
mov
mov
scas
add
testl
fwait
stos
out
fildl
pushf
push
xchg
test
dec
and
jae
cwtl
xchg
add
stos
fimull
sahf
leave
pop
or
inc
orl
add
movsl
pop
and
add
cmp
xor
jns
fistpll
lahf
jg
cmp
cmp
pop
movsl
mov
fcmovb
jge
jp
sub
js
lock
jecxz
sbb
imul
daa
lea
jle
icebp
pop
aaa
or
mov
rcrl
xor
sub
leave
ds
push
mov
xor
popf
push
cld
mov
cltd
and
xor
mov
cmpsb
sbb
mov
inc
outsb
ret
xchg
in
in
or
dec
es
cli
dec
adc
fdivrs
movsb
cwtl
push
pop
fwait
inc
push
inc
xchg
mov
idivb
jge
xor
jo
mov
ljmp
xorb
sbb
cmp
rcll
or
enter
jmp
dec
lea
js
mov
pop
orl
cmp
cmp
mov
and
xchg
icebp
lds
mov
lea
fldt
inc
sbb
out
xchg
xor
xchg
dec
mov
sarb
mov
aaa
leave
or
paddsw
inc
push
orb
icebp
out
decb
repz
cmp
jnp
fwait
hlt
lock
push
or
arpl
bound
jne
ja
sbb
adc
or
jb
es
js
ret
aam
mov
stos
rorl
sbb
pop
push
xchg
test
dec
jae
and
icebp
adc
out
es
push
push
imul
fsubrl
and
jne
cmp
dec
push
xchg
mov
cltd
jmp
idivb
sarb
mov
stc
inc
fldenv
mov
sub
enter
cltd
lret
jmp
cmp
lcall
rorb
call
sbb
jg
movsl
std
mov
sahf
adc
jae
enter
mov
pop
mov
cld
or
xor
sti
nop
jne
jmp
sbb
pop
jno,pn
cli
stos
jnp
in
or
mov
dec
cs
lods
jbe
ljmp
je
jae
inc
push
out
into
inc
add
mov
xor
sahf
loopne
stc
push
sbb
bound
lds
jmp
sub
jge
popa
in
data16
stos
rcr
cmp
pop
idiv
push
loope
arpl
pop
cltd
aas
push
add
sahf
sbb
shrl
int3
and
popf
xchg
clc
dec
es
lahf
mov
jae
jb
mov
xlat
scas
mov
adc
insl
test
shrl
xchg
mov
lock
shl
add
bound
imul
push
sub
cmc
insl
popf
fs
xor
call
pop
add
pop
jge
hlt
mov
cld
inc
out
dec
push
jb
lahf
mov
jp
push
popa
in
adc
xchg
add
inc
jns
repz
cmp
cmpl
clc
add
xchg
jno
aam
adc
mov
dec
mov
iret
cmpsb
fdivl
jns
adc
mov
test
gs
testb
xchg
ljmp
mov
sub
ja
inc
icebp
sub
lret
fiaddl
sub
dec
pop
aaa
xor
inc
cli
sti
sbb
cwtl
or
push
pop
mov
fmull
xorl
stos
pop
dec
cltd
lds
add
jle
filds
lret
mov
fwait
mov
or
mov
push
mov
in
add
pop
iret
cltd
inc
cmp
dec
lret
push
push
fisubl
aas
imull
pop
push
ljmp
xchg
pusha
xchg
xcrypt-ctr
cmpsl
sbb
inc
xchg
pop
pusha
pusha
outsl
jbe
sti
mov
dec
ja
dec
dec
fmul
mov
push
movsb
sbb
in
aad
xchg
movsl
dec
dec
std
imul
dec
in
pop
push
popl
ds
mov
pop
int
xchg
xchg
mov
mov
inc
loope
dec
or
call
sub
cs
fsubrs
lret
push
sbb
cmp
clc
mov
popa
sti
daa
or
sbb
mov
lret
out
pop
xor
sahf
aaa
lret
xchg
fistl
insb
sub
mov
push
mov
mov
ret
push
rclb
cwtl
sbb
mov
orb
imul
push
adc
cmp
cs
inc
outsb
inc
jno
bts
xor
push
mov
popa
mov
lock
fwait
popf
loop
test
jg
aam
imul
cli
cmpsb
test
sub
push
stc
push
bound
push
fwait
inc
lods
adc
mov
mov
mov
push
cmp
je
outsb
rcrb
test
mov
enter
test
stos
test
and
and
pop
or
orb
pop
cmp
mov
cmp
mov
hlt
inc
add
fcoml
fdivs
mov
pop
inc
ds
inc
lahf
adc
sbb
hlt
xlat
jne
sub
add
repnz
jecxz
ljmp
xchg
push
sbb
outsb
pushf
ret
dec
or
add
hlt
dec
push
popa
add
xor
jnp
dec
mov
test
sub
and
ja
sbb
in
rorl
outsl
arpl
inc
add
outsl
popa
sub
lret
loop
in
aad
jne
jmp
mov
aad
add
or
jae
cmpsl
push
test
jp
jmp
jp
fidivl
scas
xor
jne
ds
or
scas
mov
fyl2xp1
in
lret
popa
shrl
jmp
mov
js
dec
and
shlb
daa
jne
cwtl
xor
out
int
insl
dec
mov
outsb
shll
cmp
fs
clc
nop
movsb
push
or
push
xchg
fdivrs
push
out
sarl
xor
aad
test
inc
orb
xchg
push
divb
mov
push
outsb
or
sar
or
jns
gs
mov
xor
dec
xchg
mul
sub
out
insb
lea
imul
insl
test
jl
jo
ret
xchg
jl
stos
and
bnd
push
mov
lret
xor
add
dec
insl
outsb
pushf
xor
negb
pop
adc
push
fildl
imul
stc
mov
add
lods
pop
in
adc
mov
fistpll
and
movsb
mov
pop
fwait
aam
mov
fnstsw
jmp
mov
leave
cmp
fmuls
mov
xchg
mov
cld
jmp
push
xor
xchg
xor
cld
push
clc
pop
gs
rcrl
xchg
add
test
out
orb
add
xlat
push
das
clc
adc
push
or
xorl
lods
xor
push
setle
pop
mov
cwtl
pop
mov
test
push
push
jb
cmpsl
lds
leave
andb
and
mov
jns
cs
test
or
outsl
jne
cmp
icebp
mov
clc
inc
fdiv
inc
push
mov
jno
push
subb
jo
or
out
leave
cmp
ds
inc
pop
inc
daa
xchg
push
lea
jo
ljmp
hlt
inc
mov
pop
cmc
mull
and
pop
outsb
inc
sahf
push
lret
or
call
xchg
les
jae
test
das
push
and
pusha
xchg
pop
test
and
into
jo
stos
rolb
sub
mov
mov
sub
mov
inc
fcompl
test
sub
mov
into
sub
jae
in
mov
sub
ret
push
daa
movsb
in
pop
xor
mov
or
into
mov
xor
add
cmp
gs
jne
xchg
inc
fmuls
sbb
jns
pop
fs
dec
aas
or
cmp
in
sbb
rorl
fistl
sbb
jmp
push
insl
xor
adc
add
or
push
xchg
jbe
xchg
sbb
mov
sti
andb
pop
shll
mov
mov
and
hlt
scas
popa
mov
mov
scas
mov
js
sbb
inc
inc
enter
repnz
clc
arpl
xchg
addr16
mov
test
jecxz
jne
dec
pop
inc
push
pop
out
out
aad
mov
inc
inc
cmp
mov
lcall
aaa
popa
xorl
dec
cltd
and
call
pusha
sbb
sahf
and
dec
data16
inc
ja
mov
jmp
lcall
cmp
ret
xlat
and
mov
je
pop
cmp
rorb
lahf
mov
mov
fisubrs
mov
xor
lret
std
pusha
in
adc
int3
mov
dec
and
mov
iret
aam
cmp
nop
addb
aas
xchg
sti
out
cli
and
mov
push
hlt
dec
mov
xchg
mov
sub
ljmp
mov
mov
lea
push
xor
xor
cmp
mov
and
mov
dec
and
sbb
sbb
shll
xchg
ds
hlt
iret
push
movsl
pushl
ja
imull
test
dec
mov
jg
shrl
dec
dec
and
pop
xchg
push
lods
inc
mov
push
std
and
sbb
es
icebp
xchg
call
or
shll
sub
xor
pop
mov
pop
pop
mov
xchg
push
adc
jg
xchg
and
sbb
pop
or
imul
inc
mov
sub
and
fisubs
push
stos
jl
push
dec
ss
or
popf
dec
cmpsb
divb
mov
xchg
or
xchg
ja
cmpsl
stc
dec
fbld
aas
jle
dec
push
mov
or
sub
mov
and
sub
out
add
call
call
addr16
fwait
outsb
movsl
jge
pop
pop
sub
adc
test
mov
pop
shlb
ret
and
mov
push
ja
jb
jns
into
mov
call
add
ljmp
jne
or
and
or
mov
mov
inc
hlt
mov
and
scas
push
xchg
xor
cmp
mov
repz
aam
js
mov
mov
test
and
lahf
stc
scas
mov
pop
mov
or
mov
add
fucomip
mov
inc
cli
imul
xchg
xchg
iret
fbstp
mov
aas
adc
addr16
divl
sbb
or
ja
sar
insl
pop
leave
and
in
push
das
pop
jae
dec
rsqrtps
jl
fidivs
cmpl
push
mov
inc
push
push
inc
lret
out
inc
loopne
pop
int3
cmc
sub
sub
stos
sbb
movsb
fnstenv
dec
mov
rclb
stos
push
dec
inc
and
es
lock
or
push
out
popa
mov
pop
imul
out
mov
movsb
mov
lods
inc
sbb
push
imul
sub
cmp
sar
leave
iret
xor
aaa
scas
mov
dec
fwait
and
ret
sub
movsb
jmp
sti
and
int3
fwait
clc
mov
icebp
mov
int
stos
fcom
sub
dec
jnp
ss
xchg
push
adc
jmp
fisttpll
call
xchg
push
mov
lods
sbb
divb
nop
cmc
js
jbe
repz
sti
mov
cltd
sarl
les
fwait
cmc
pusha
imul
mov
inc
dec
std
inc
fsubrp
cwtl
mov
push
cmp
mov
add
adc
lock
dec
inc
orl
fildll
cmp
repnz
test
sub
js
fldl
lahf
mov
stos
inc
stos
and
test
adc
inc
ja
lods
or
ss
cld
cmc
xchg
das
lods
and
jl
ret
push
pop
test
fisttps
dec
int3
xor
lcall
insl
call
cmp
xchg
sahf
ror
rolb
int
repz
ret
lahf
cmp
js
mov
add
lcall
xor
xor
mov
cwtl
out
mov
pop
sbb
mov
sahf
sbbl
movsl
jge
and
and
adc
or
jge
es
mov
jmp
sub
lds
aad
outsl
mov
out
mov
movsl
mov
sub
fmull
ss
jle
xchg
pop
in
cmpsb
add
int
lret
and
js
dec
out
cli
in
mov
fld
fcomp
sbbl
pop
jo
scas
add
idivl
dec
sbb
dec
jno
cmp
xor
jae
inc
or
sarl
adc
insb
mov
sbb
adc
mov
out
insl
xor
lahf
fcmovne
das
adc
cmpsl
aam
inc
pop
out
sbb
inc
ja
in
mov
sub
addr16
pop
pop
and
sahf
mov
jle
jmp
pop
push
movsl
stos
dec
lahf
test
nop
mov
or
mov
mov
cmc
dec
add
push
orl
int3
mov
call
dec
test
cli
add
test
push
movsb
fucom
push
mov
aam
ja
inc
cmpsl
push
inc
and
jmp
call
cmp
mov
adc
push
xor
sub
mov
add
mov
xchg
cmp
xlat
xor
addr16
xor
sbb
add
fld
mov
mov
orl
imul
push
je
or
jnp
mov
ss
sbb
mov
xorl
sub
pop
mov
shll
push
jmp
pop
adc
out
sbbl
pop
mov
xchg
pop
xchg
pop
xchg
iret
inc
std
in
mov
movb
sub
nop
rsm
or
pop
mov
add
jl
xchg
push
xor
hlt
inc
xorb
jl
lahf
jge
fcmovu
xchg
sub
sbbl
stc
jmp
lahf
hlt
push
pop
out
xchg
push
inc
sub
andb
decl
adc
inc
js
xchg
mov
in
xchg
xchg
ss
xchg
nop
pop
stos
add
gs
je
sub
push
and
pop
xchg
aaa
mov
jbe
sub
es
pop
push
pop
fdivs
data16
in
dec
push
xlat
and
jbe
pop
jno
mov
pop
fnstcw
sub
xchg
or
jp
sahf
and
cltd
mov
and
movsl
dec
clc
adc
mov
data16
mov
mov
xchg
and
push
fnsave
cmp
dec
mov
js
repz
sahf
sbb
xchg
mov
xchg
jge
or
dec
pop
xlat
jno
das
mov
sbb
bound
xchg
rcrb
rcrl
jo
add
sbb
daa
inc
jnp
mov
das
aaa
pusha
jo
inc
shlb
and
jbe
xchg
jns
bnd
scas
cmpsb
add
pusha
cmc
push
pop
ljmp
sub
ljmp
pop
sbb
scas
cmpl
sbb
insl
sub
test
jae
or
mov
subb
cmp
scas
mov
mov
mov
imul
hlt
and
pop
sbb
inc
push
add
nop
jb
fcomps
inc
dec
js
push
cmp
ja
sbb
lds
gs
ss
pop
jo
xlat
addr16
inc
mov
sub
mov
sahf
push
mov
and
adc
icebp
pop
mov
stc
movsb
push
lds
mov
call
sarb
out
pop
mov
ret
mov
mov
shlb
sbb
fldenv
xchg
out
fucom
push
lock
arpl
je
in
mov
push
test
or
into
jnp
mov
stos
cmc
sbb
cltd
mov
out
das
inc
and
jb
mov
sbb
jle
sub
iret
pop
in
sbb
sub
out
popf
inc
xlat
mov
mov
loope
pop
dec
ds
stos
dec
adc
repz
aam
sbb
lcall
sbb
in
imul
mov
outsb
out
int
lds
xchg
enter
push
stos
jge
mov
xor
mov
and
add
int3
outsb
int3
mov
inc
cltd
faddl
mov
fstl
push
inc
xchg
mov
mov
inc
xor
cld
loopne
into
sub
lods
imul
mov
sbb
stc
dec
lret
jle
ljmp
push
out
icebp
pop
pusha
clc
gs
mov
jns
pop
cld
outsl
pop
fsubrl
ret
mov
pop
xchg
lcall
divb
loope
cli
sbb
divb
outsb
ret
mov
movsb
inc
mov
cmp
adc
inc
add
adcb
sbb
or
adc
sti
sbb
daa
imul
and
mov
into
jne
jo
stos
aaa
incb
lods
out
xchg
scas
movsl
lahf
push
orl
dec
push
popa
xor
and
cmc
andb
pop
mov
lds
xor
jno
insl
sti
leave
xchg
cmp
sub
out
dec
sbb
adc
test
outsl
clc
cmpsl
pop
pop
outsl
push
and
lock
sub
xlat
adc
jns
dec
es
or
jb
mov
xchg
and
pop
pop
mov
sbb
hlt
mov
aaa
cmpps
fnstenv
inc
rcrb
je
push
aam
cmc
loopne
dec
ss
and
scas
sbb
xor
loop
or
jnp
sbb
aas
dec
ja
in
xchg
test
and
testl
and
loope
shl
in
out
or
sahf
test
mov
lock
sbb
push
arpl
stc
push
xchg
xor
orl
or
cmp
in
test
lcall
and
es
lock
push
dec
inc
mov
int
push
pusha
and
cmpsl
cmpsb
add
mov
sbb
xchg
inc
xor
pop
cmp
xor
in
sbb
int
daa
mov
mov
dec
xchg
xchg
cmp
add
sbb
add
in
inc
in
in
js
mov
xchg
add
or
outsl
inc
test
push
mov
out
in
fbld
ficomps
and
mov
jl
mov
mov
lock
cltd
xchg
daa
mov
jno
enter
jecxz
mov
cmp
and
ljmp
ja
test
mov
cmp
add
xchg
jns
mov
add
lret
mov
movsb
inc
mov
adc
call
and
repz
pop
mov
xor
and
xchg
adc
stc
loop
xor
mov
clc
dec
cmp
mov
or
lock
rcr
arpl
mov
xor
sub
jae
fildl
ret
ror
jl
sbb
pop
testb
in
and
mov
jl
xor
dec
pop
fcomp
in
ret
mov
inc
clc
add
cmp
lahf
jp
stos
pop
iret
std
fnstcw
xlat
push
into
jae
stos
movsb
test
jecxz
sbb
mov
xchg
rcll
std
cld
shr
sub
je
pop
out
test
pop
lock
push
cltd
xchg
nop
xchg
or
pop
inc
xor
adc
xor
mov
stos
scas
cmp
cmp
mov
jo
mov
jl
jnp
imul
loopne
sub
fs
inc
repz
cld
xor
iret
into
in
test
jo
dec
jnp
mov
data16
out
dec
pop
mov
jb
aas
mov
pop
pop
adc
dec
pusha
ffreep
js
in
lods
in
xchg
ss
mov
push
add
out
inc
into
fldl
in
add
cmp
push
fmul
sub
aam
insb
in
out
repz
mov
hlt
dec
fcompl
dec
xchg
sahf
scas
shlb
in
clc
add
push
leave
pop
mov
mov
ret
mov
sbb
arpl
and
testl
imul
popf
push
cmpsb
or
jp
mov
jl
xchg
xchg
stc
cmp
cltd
pop
ja
push
roll
push
jp
sbb
rcll
dec
and
and
sbb
leave
jbe
iret
pop
sahf
push
xchg
stos
mov
movsb
addr16
sets
es
inc
adc
test
cmp
jl
addr16
lea
dec
jg
repnz
cmp
cmp
nop
movsl
es
cmpsb
xchg
xor
adc
inc
iret
xor
fistps
loopne
pop
xchg
nop
loopne
repz
call
push
sub
sbb
cmp
in
pushf
cs
or
cmc
mov
sbb
leave
or
pop
je
xchg
pop
pop
sahf
lds
gs
daa
xor
pop
and
dec
add
loop
xor
inc
bound
pop
jle
push
clc
xchg
cmp
mov
movsb
enter
pop
mov
xorl
or
adc
mov
and
add
out
out
adc
mov
dec
lcall
mov
mov
cmpb
jmp
sub
fs
adc
iret
fcmovu
and
cmpsl
enter
loopne
jle
pop
adc
push
rcrb
mov
fsubrs
mov
pop
sub
sbb
pop
insl
cmp
cmp
adc
mov
sub
sbb
sbbb
add
outsl
ret
jl
add
mov
gs
aas
adcb
aad
cmc
sbb
sbb
out
fldenv
out
or
dec
xor
cmp
or
addb
pop
and
popa
gs
into
inc
cmpsl
icebp
aas
mov
ja
mov
adc
xor
aas
loop
jb
or
rclb
fisttpl
aaa
cmp
push
cmp
inc
xchg
ljmp
push
mov
adc
or
jo
push
jb
xchg
inc
xor
lods
push
push
push
loope
lahf
popf
inc
push
rcrl
sub
pop
adc
jecxz
je
or
dec
inc
insb
push
fucomi
cmp
jns
dec
jecxz
cmpsl
lahf
imul
and
jle
or
sti
rcr
test
xor
xchg
mov
dec
sub
inc
jnp
ret
icebp
stos
cmp
aam
cld
out
jbe
inc
mov
push
xchg
jno
imul
push
mov
pop
bound
xor
int3
and
dec
mov
push
loopne
sahf
and
cmc
mov
mov
rorl
cmp
mov
xchg
mov
aam
cmp
daa
cmp
ss
push
sbb
and
inc
xor
add
mov
pusha
mov
ljmp
lods
xchg
mov
lods
xor
add
lock
in
lcall
or
lds
push
imul
or
adc
xchg
cmc
mov
xchg
dec
pop
jecxz
pop
sbb
sbb
test
mov
loope
insb
push
mov
addr16
inc
cli
mov
les
jns
test
movb
sub
outsb
mov
cmp
sti
js
mov
dec
or
jbe
decl
fsts
xchg
mov
push
jno
push
xchg
sbb
adc
or
lds
andl
iret
and
int3
aad
mov
cmc
stos
adc
cwtl
xor
jns
enter
outsb
jl
stos
sub
gs
decl
addr16
adc
and
lea
in
scas
xchg
pop
enter
in
mov
jns
add
fnstcw
pop
sbb
ficomps
mov
pop
and
hlt
dec
icebp
push
enter
add
mov
aad
pop
push
fdivrl
mov
jae
sarb
mov
mov
mov
jo
popa
cli
pop
movsl
sub
test
in
mov
push
inc
mov
into
data16
fnstenv
mov
popa
pop
push
out
cmpsl
mov
mov
into
inc
and
jp
push
push
pop
daa
fcmove
adc
jge
mov
pop
jo
sarb
fistl
pop
divl
sarb
ja
notl
jbe
pop
mov
fildl
dec
lcall
aad
in
mov
dec
dec
js
int
fmuls
fwait
dec
mov
das
enter
pop
cmp
iret
cmp
mov
mov
hlt
xor
int3
dec
sbb
daa
dec
fnstenv
popa
push
pop
int
mov
loop
in
mov
and
xor
cltd
fstpl
sbb
pushf
jg,pn
jae
in
stc
or
or
inc
xchg
add
mov
mov
jmp
sti
nop
popf
xor
insl
negl
fwait
lret
sbb
sub
adc
cmpsl
scas
dec
rclb
rcr
fdivrs
pop
outsl
lock
mov
lret
add
add
dec
lods
outsb
add
lods
and
lods
add
add
mov
jmp
sub
or
lret
push
cli
loopne
sub
popf
ret
ljmp
mov
dec
or
mov
lock
js
cmp
lcall
inc
pushf
cmp
mov
mov
add
xor
stos
adc
shll
fadds
adc
aas
and
mov
lea
sub
jmp
jo
sbb
fidivs
mov
or
out
out
test
sub
adc
xchg
mov
mov
push
js
add
sbb
mov
cmp
mov
xor
xchg
or
dec
call
inc
push
ss
mov
andb
mov
dec
int
sub
mov
lret
adc
shlb
mov
dec
fidivl
jns
adcb
mov
repz
jle
loop
lods
pop
xchg
or
push
inc
fbld
bound
adc
pop
pop
pop
scas
pop
sub
scas
mov
mov
rolb
gs
imul
sub
fstpl
adc
xorb
pop
aam
roll
data16
cld
mov
adc
pop
inc
push
inc
jmp
mov
fs
pop
aaa
mov
pop
adc
xorb
sar
ret
xor
repz
jo
pusha
xlat
push
dec
or
in
and
inc
or
enter
inc
jge
test
xchg
lds
popa
test
rolb
inc
imul
adc
mov
mov
push
fiadds
inc
push
ficomps
cltd
stc
jecxz
mov
and
xor
pop
mov
and
mov
pushf
daa
pop
ret
mov
sub
adc
adc
pop
imulb
cmpsb
je
inc
sub
jl
adc
decl
inc
xchg
pop
sbb
stos
shlb
test
jge
push
dec
sbb
add
mov
loope
ja
xchg
xchg
shlb
and
mov
mov
inc
inc
mov
mov
sub
mov
das
sti
adc
filds
sbb
inc
jp
stos
or
stos
cmp
imul
xlat
mov
mov
aaa
xchg
or
mov
cmpsl
sub
adc
xchg
arpl
stos
cwtl
fcmovbe
or
cs
lret
cltd
mov
inc
dec
and
jne
mov
insl
push
jl
imul
xor
push
hlt
jle
frstor
sub
jmp
jnp
movsl
orb
pop
pop
pop
cmp
jno
cld
jae
jl
jmp
insb
out
icebp
xor
pop
arpl
jecxz
pop
orl
inc
mov
mov
lret
lret
arpl
jns
cwtl
lea
xor
insb
push
adc
test
in
outsb
fs
sti
inc
fmuls
fwait
push
out
push
jge
sarb
clc
std
std
roll
and
mov
inc
aas
pop
ljmp
dec
mov
xchg
sbbb
in
loope
insb
stos
incb
repnz
fdiv
pusha
lods
push
push
xchg
sbb
icebp
xchg
mov
sbbl
sub
jg
outsl
xor
stos
xchg
std
push
out
rol
xchg
pop
pop
imul
mov
into
pop
xchg
mov
in
sub
xor
jle
xchg
adc
out
xchg
jle
jl
lods
push
outsb
xchg
icebp
cmp
xorl
data16
dec
xchg
cs
cmc
into
hlt
jecxz
cld
or
mov
inc
jae
int
push
xchg
sbb
sti
mov
push
push
sub
fdivrl
xor
test
jmp
mov
pop
lock
cwtl
scas
pop
aas
cmp
addr16
clc
mov
cmp
mov
jp
sbb
mov
push
cmpsb
movsb
sub
cwtl
mov
sub
int
cmp
xchg
pop
xchg
in
cmp
mov
mov
inc
mov
movsb
xor
cmpl
ds
cmpsb
je
or
insl
cmc
cmpsl
inc
xor
inc
mov
sbb
ds
dec
negb
dec
addr16
push
push
cmp
mov
pop
jle
pop
jge
fists
mov
xchg
adc
addr16
cld
sub
jnp
or
out
push
je
sub
pop
push
fcomp
loope
adc
into
testl
jg
or
xor
inc
sub
sbb
pop
push
push
push
cld
pop
addr16
shll
fwait
xor
mov
cmc
fdivrl
lods
sbb
cmp
nop
pop
movsb
loop
add
and
push
loopne
fs
push
pop
lcall
mov
out
pop
adc
jecxz
aas
shl
incb
clc
sbb
cs
outsl
mov
stos
hlt
xor
push
pmaxub
pop
or
mov
insb
enter
inc
das
mov
jle
lock
dec
push
adc
and
ret
pop
sbb
daa
xchg
mov
inc
cld
jbe
ficoms
out
sbb
testb
hlt
sub
loop
jge
inc
mov
in
fisttpl
cli
sbb
xchg
movsb
fs
lret
xchg
shrb
icebp
push
push
cli
ficompl
mov
dec
cmp
imul
adc
xor
sbb
icebp
leave
out
orb
lcall
fbld
jo
push
xor
or
imul
sbb
mov
pushf
cmp
pusha
dec
arpl
into
aaa
movsb
inc
inc
test
ja
cmp
and
push
mov
cmp
dec
ja
flds
xchg
add
shll
jns
push
pusha
rorb
jne
test
xchg
pop
mov
sub
push
push
xor
dec
dec
sub
hlt
ja
cmpsb
shlb
sbb
adc
test
mov
pop
int
xchg
dec
mov
pop
iret
dec
cs
popa
add
orb
div
mov
push
lea
cmpsl
lock
sarb
mov
cmc
sub
pop
aas
mov
subl
and
aaa
icebp
sbb
hlt
call
mov
or
inc
fcompl
cmpl
push
stos
std
movl
outsb
fld
cmp
lock
mov
bound
mov
addr16
xor
cmc
or
in
jmp
pop
or
push
cli
popf
cmp
clc
fnsave
xor
cmp
outsb
ficomps
mov
sahf
inc
xor
insb
rcrb
in
push
mov
fwait
or
xchg
out
mov
dec
push
jo
int3
mov
imul
lret
enter
bound
mov
outsl
jbe
xchg
sysexit
mov
sub
pop
inc
pushf
inc
pop
inc
pop
andb
insb
fcmovbe
adc
xorb
inc
test
testl
idivl
or
mov
dec
mov
out
scas
pop
jne
into
adc
fdivl
cmp
jb
cmp
push
add
mov
ljmp
insl
adc
xchg
ljmp
adc
push
push
adc
fcom
popa
scas
push
xchg
push
aaa
in
pop
lcall
mov
pusha
cmp
pop
sbb
int
int
lcall
arpl
pusha
mov
adc
lods
js
xchg
xchg
jne
or
fnsave
mov
mov
int3
xlat
sti
jmp
popa
pop
mov
icebp
clc
enter
cli
out
jbe
add
push
imul
mov
aaa
jbe
jns
xchg
pop
lret
xchg
aad
ds
fsubr
sbb
adc
or
int3
push
mov
mov
mov
shll
outsl
inc
scas
in
lcall
es
rcr
add
push
mov
jo
cmp
push
sub
testl
jns
mov
dec
das
lea
xchg
movsl
out
arpl
inc
sub
shrb
pop
rcr
inc
or
push
shl
mov
imul
ja
inc
shll
lock
out
sub
jo
push
and
sbb
and
mov
push
nop
movsl
clc
stos
inc
pop
daa
and
nop
xchg
inc
test
xor
jae
leave
scas
mov
dec
cltd
fistl
push
popa
ret
test
mov
add
xchg
xor
fdivrl
xor
addb
lds
lcall
adc
add
dec
sub
pop
fsubrp
push
or
leave
shrb
sahf
mov
lahf
fiaddl
shlb
or
jbe
jmp
jbe
xchg
popf
push
jecxz
icebp
mov
mov
test
fucomi
cmp
aad
mov
aam
jle
or
jle
dec
fistl
repnz
les
popf
ss
mov
pop
jecxz
mov
xchg
add
outsb
arpl
inc
mov
mov
nop
shr
and
insb
inc
out
ja
mov
lds
and
and
repnz
inc
push
cltd
jo
jg
mov
cld
aad
mov
xor
mov
cmp
dec
test
pop
pusha
fisubs
pop
inc
mov
xlat
mov
lahf
xor
ret
imul
sub
mov
xchg
sbb
scas
addl
repnz
sarl
cmp
loope
fbstp
mov
cld
lods
cwtl
pushf
insb
and
sbbb
lret
jl
and
bound
sbb
mov
fwait
iret
add
pop
inc
cmp
push
dec
lods
pop
dec
lea
xchg
jge
arpl
sti
or
sub
lock
dec
xchg
push
mov
pusha
aas
fimuls
rep
inc
and
add
movsb
insl
pop
aaa
call
push
loope
push
cmpsb
shrb
push
loope
sahf
xchg
or
add
sub
mov
ret
test
mov
xchg
adcl
pop
push
iret
sti
shr
data16
out
lea
dec
daa
ret
xor
xorb
data16
mov
clc
out
decb
sbb
push
push
mov
or
iret
ret
dec
arpl
adcl
subl
sbb
in
stc
sub
xchg
les
jmp
ret
adc
and
test
sbb
pop
pop
pushf
ss
adc
out
lret
and
arpl
aaa
imul
sbb
adc
add
insb
xchg
es
sub
push
push
sbb
inc
lock
sub
xchg
inc
lea
jns
sub
sbb
mov
in
dec
test
jecxz
and
adc
dec
xchg
mov
shrb
dec
out
cmp
adc
jb
out
in
sub
mov
mov
sbb
arpl
pop
inc
mov
push
daa
or
iret
xchg
xor
cltd
push
in
fcmovnu
cmpsb
and
les
imul
loopne
dec
xor
dec
jmp
sbbl
enter
aam
lcall
test
push
nop
insb
cwtl
ret
inc
pop
enter
out
in
push
inc
shl
stos
enter
test
jmp
mov
mov
iret
xor
dec
push
in
jnp
or
adc
ljmp
daa
jp
sahf
push
call
pop
sbb
ja
fimuls
mov
test
sub
insb
jns
clc
mov
xchg
lock
popf
jp,pn
xchg
aam
cmc
mov
imul
cmp
test
and
movsl
xor
or
inc
clc
or
add
cmpsb
jl
loope
push
cmp
ret
or
mov
xchg
lcall
mov
out
inc
call
test
fstpl
popf
mov
fwait
mov
lret
mov
inc
stos
xorl
out
sahf
fwait
jge
pop
and
jb
and
push
sbb
xlat
xor
dec
sub
movsb
push
int3
rorb
inc
jnp
push
cltd
aaa
insb
stc
aad
sbb
in
adc
add
add
stc
mov
ss
inc
cmp
jge
jno
dec
int3
jge
testb
or
daa
xchg
adc
mov
mov
jo
xor
jl
xlat
hlt
mov
fiadds
mov
repnz
jb
out
outsl
pop
xchg
rcrl
js
cli
sub
comiss
pop
mov
cltd
shl
mov
cld
cmc
or
xchg
xchg
mov
outsb
insl
sahf
hlt
lds
xchg
sbb
cld
js
sbb
loope
nop
pop
dec
test
lret
mov
pusha
imul
divl
fstps
inc
lcall
test
jmp
and
test
inc
popf
mov
das
sub
mov
popf
fisttpl
movsl
and
scas
sarb
ss
call
xchg
and
lods
cwtl
mov
test
jle
cmc
mov
imul
lret
popf
xorb
xor
push
pusha
adc
pop
dec
sbb
jo
mov
cld
mov
dec
add
lds
xor
jo
or
into
bound
push
repnz
cli
shrb
dec
jg
mov
aaa
add
cli
aad
or
or
jmp
lock
mov
xorb
mov
repz
adc
or
push
sbb
cli
arpl
pop
cli
jecxz
or
pop
lods
mov
adc
dec
xchg
aad
and
mov
pop
subb
in
out
xchg
call
inc
mov
test
lods
mov
mov
inc
mov
dec
mov
imul
mov
movsb
or
inc
faddl
xor
add
lea
lock
lods
and
and
scas
lcall
in
xchg
mov
adc
add
jg
add
xlat
int
popa
xor
clc
aas
xchg
mov
sub
fsubrl
cmpsb
dec
sub
xchg
in
popa
and
push
ret
cmp
rcr
or
dec
repz
adc
jnp
sbb
jns
sub
cmpsl
mov
push
icebp
push
leave
loopne
data16
pop
inc
mov
inc
aaa
inc
inc
and
inc
lahf
sbb
sbb
cmpsb
lret
dec
inc
inc
xor
xor
jg
pop
cmp
xlat
mov
mov
mov
adc
outsb
jp
ds
push
jno
notb
add
mov
and
lods
mov
inc
dec
shll
mov
mov
sub
pusha
outsl
ret
cmc
xor
sub
pop
aaa
pop
dec
mov
dec
dec
popa
jp
sbb
rorl
movsl
enter
rolb
push
sahf
rcr
jo
or
cli
cmp
pop
push
arpl
imul
pop
mov
or
ret
inc
das
add
mov
push
push
cmp
shlb
mov
jb
push
rep
push
test
insl
fsubrl
leave
std
in
mov
rcrl
stc
jne,pt
fbld
jae
leave
ds
stos
clc
push
outsl
mov
xchg
aas
cld
push
jae
and
fcomp
std
orl
inc
mov
outsb
mov
push
jle
xchg
nop
cmp
pushf
cwtl
sub
push
andb
jle
lock
adc
out
adc
std
out
inc
sub
mov
inc
mov
mov
in
adc
not
sub
jb
mov
je
or
lret
or
or
std
cmp
movsb
jb
add
cmp
or
cld
faddl
jo
aad
insb
ds
jge
and
pop
cmp
pop
or
adc
xor
sub
dec
xacquire
xorl
dec
mull
jo
jns
inc
pop
movsb
push
dec
pop
push
fists
stos
inc
cltd
mov
mov
pop
test
movsl
sub
xor
shll
imul
sti
inc
loope
mov
in
push
or
or
push
mov
mov
dec
pop
mov
dec
push
add
test
or
fisubs
mov
cmpsl
mov
inc
adc
or
xor
test
or
test
push
push
icebp
popa
add
mov
push
loopne
and
arpl
call
mov
data16
loope
movsl
push
mov
lret
mov
jle
inc
push
out
push
push
cwtl
adc
out
jbe
inc
sbb
dec
into
test
repnz
mov
lods
into
sbb
cmp
jge
scas
cs
jp
mov
pop
shlb
add
scas
pushf
adc
call
daa
movsb
mov
mov
dec
sbb
movsl
and
int3
and
xlat
add
mov
sbb
cli
jne
xchg
icebp
enter
pop
jge
loope
pop
cwtl
jmp
xor
outsb
dec
dec
sub
jp
adc
lock
aam
sbb
outsl
pop
aam
add
icebp
and
jnp
jg
push
negl
das
or
popf
mov
pop
test
pop
cmpsb
inc
xchg
sbb
repnz
jg
xor
test
lret
sahf
xchg
ljmp
dec
or
xchg
dec
jecxz
aam
dec
push
cmp
movsb
mov
int
iret
adc
aam
cwtl
mov
mov
int3
pop
popf
sub
outsl
xor
fs
pusha
mov
xchg
mov
insb
jge
add
roll
add
cmpsl
and
fdiv
xchg
incl
fcomp
mov
xor
pop
push
and
scas
stc
lahf
xor
sbb
stos
ljmp
clc
pop
int3
mov
push
movb
push
test
inc
sbb
pusha
xor
adc
cmp
jmp
arpl
mov
and
out
mov
stos
adc
out
push
mov
inc
pop
add
pop
fistpll
pusha
lods
or
scas
push
cs
mov
or
nop
jl
pop
sub
inc
sub
dec
and
ljmp
pop
cmp
and
rcll
fstpt
jae
mov
sarb
ja
xlat
mov
push
mov
ficomps
lahf
ficompl
pop
out
sbb
insb
out
andb
aas
leave
cwtl
mov
test
jo
aaa
aad
add
arpl
ss
pop
and
push
nop
ret
movsl
xchg
ret
imul
mov
pop
or
scas
push
add
cwtl
fnstenv
jb
push
pop
jnp
mov
add
add
pop
mov
fs
push
cmpsb
ja
outsl
add
and
test
or
sub
mov
ret
lret
data16
divb
rcl
inc
xor
pushl
and
and
push
push
sahf
jl
xchg
and
out
push
pop
jne
insl
inc
jge
mov
adc
lret
dec
mov
pop
test
mov
pop
push
mov
enter
in
inc
xor
je
icebp
pop
data16
ja
jecxz
jl
pop
sbb
jle
mov
or
lret
dec
fs
cli
mov
scas
mov
fildl
cld
loopne
xor
inc
cmp
sbb
inc
mov
pusha
mov
mov
xor
ficoml
pop
fbld
pop
cmp
sbb
shrl
adc
push
dec
out
mov
sti
lret
data16
ds
xlat
das
dec
jo
xor
int
arpl
fildll
sub
sti
out
mov
call
mov
leave
adc
jle
xchg
cwtl
int
push
pop
adc
ret
push
sbb
aaa
jo
inc
push
loopne
hlt
fsubrl
adcl
add
xchg
les
shlb
pop
pop
jge
or
jecxz
push
inc
xor
dec
xchg
test
iret
and
ret
add
ret
out
pop
adc
pop
inc
inc
fdiv
xor
dec
fisubrl
js
lds
cmpsl
sbb
mov
mov
loopne
lods
mov
mov
and
movsb
in
mov
lcall
sti
sub
fwait
stc
push
mov
push
sbb
cmp
xchg
lds
movsl
popa
daa
mov
and
std
in
dec
repz
cmp
loop
xchg
jl
data16
leave
or
out
jo
scas
add
and
in
mov
cmpb
movsl
scas
ss
icebp
les
mov
mov
repz
xchg
clc
dec
mov
fiadds
pop
inc
sbb
inc
jne
mov
adc
das
pushf
xchg
sarb
mov
rcrb
ss
sbb
xchg
mov
in
add
and
mov
cmp
jo
sub
adc
es
lods
cmp
hlt
cli
pop
xor
mov
clc
cmpsl
mov
cmpb
jg
xchg
cmp
fwait
jo
inc
xchg
arpl
jp
push
jg
fistl
enter
filds
xor
jne
push
or
sti
int3
aas
imulb
jg
ja
inc
adc
inc
xor
lret
in
mov
jns
inc
and
pushf
dec
or
xor
fcmovbe
ret
cs
push
in
add
and
cmp
sub
sbb
lahf
shl
lahf
sbb
inc
xchg
cmp
repnz
jl
mov
mov
adc
test
jns
arpl
jmp
and
push
pop
es
in
xchg
sbb
insl
cs
ljmp
xchg
subb
xchg
lea
mov
mov
pop
lahf
mov
mov
ret
insb
ja
rcll
or
mov
and
lds
cli
and
jg
xchg
stos
shrl
cld
aad
mov
jno
fmull
hlt
jl
mov
arpl
dec
std
sub
out
out
mov
daa
push
or
push
cmp
sub
mov
int3
mov
push
imul
xor
aad
xor
cmpl
mov
mov
mov
pop
popa
cli
shrb
cmp
test
jle
stos
in
pusha
and
and
lds
and
mov
jle
jo
repnz
dec
inc
dec
xor
fdiv
push
aas
adc
rcrl
jnp
mov
loopne
sbb
test
out
add
loopne
idivl
xor
dec
adc
push
bound
pop
test
xor
shl
dec
clc
test
fadd
jb
push
and
adc
bound
nop
repnz
cmc
les
ror
xchg
pop
test
addr16
push
rorb
adc
stc
aad
stos
or
int3
loopne
and
inc
movb
mov
cmp
sbb
pusha
jbe
mov
cmp
loope
mov
adc
scas
outsb
cmp
mov
rcl
inc
jnp
mov
push
add
and
scas
fldenv
fcompl
in
aam
in
rcr
fdivl
add
mov
cmpl
mov
fstl
rcrb
repz
popa
sub
or
xchg
mov
lea
lea
push
push
das
cmpsl
mov
movsl
cmp
and
jmp
mov
scas
dec
cltd
mov
jge
inc
jmp
outsl
ret
pop
pop
and
cmc
sbb
insl
imul
sti
and
out
aas
or
xor
xchg
mov
pop
jnp
mov
jl
aam
mov
adcl
add
imul
mov
mov
lret
dec
lods
int3
call
mov
stos
es
icebp
push
mov
in
and
mov
leave
push
sbb
mov
mov
pop
push
mov
frstor
sbb
sub
push
cmp
dec
imul
xchg
daa
xor
add
fcomip
mov
or
iret
in
aaa
test
rcl
repz
iret
scas
lock
aas
pop
inc
or
pop
int
inc
sbb
dec
pop
out
mov
das
and
mov
sarl
cmp
add
mov
test
jmp
scas
lea
cmpsl
add
mov
mov
daa
xchg
xlat
jge
inc
adc
das
loope
js
jns
lea
clc
filds
push
dec
sub
orb
sahf
pop
jge
pop
sbb
sub
loop
add
or
outsl
insl
mov
push
addr16
push
aad
fnsave
jne
mov
cli
xor
mov
call
sbb
std
clc
rcrb
adc
mov
jg
popf
lock
loop
fwait
jge
je
icebp
cmp
sub
xchg
inc
xlat
imul
decl
jne
iret
cmp
sub
jns
lods
fldenv
push
mov
dec
ret
outsb
repnz
xchg
nop
sub
out
push
je
loop
xchg
lods
sar
sbb
stc
fwait
cmpb
pop
pop
sbb
adc
cltd
cmp
dec
iretw
dec
shlb
cmpsl
xchg
cmpsb
push
or
inc
push
mov
sarb
pop
mov
mov
push
mov
add
jae
icebp
testl
lahf
dec
pushf
xchg
fcmovnb
repz
dec
call
outsb
push
ljmp
xor
icebp
xlat
aaa
push
out
inc
xorb
add
cmp
and
inc
push
ljmp
mov
es
icebp
mov
xor
fs
fadd
aaa
dec
push
mov
or
lods
inc
int3
cmpb
fwait
jle
pop
js
inc
xchg
cmp
mov
data16
lods
divl
sbbb
inc
and
lahf
int3
add
or
push
insl
inc
test
push
loope
stos
push
ret
insb
pop
pop
mov
es
cmp
imul
push
mov
scas
xor
sub
mov
popf
cmp
push
xrelease
fucomp
fldt
jge
dec
cltd
ret
xchg
xor
xlat
mov
es
aad
jnp
fs
push
adc
sti
bound
outsl
push
jg
cltd
mov
mov
ret
jmp
aad
rcr
das
aas
shll
popa
cwtl
insb
in
insl
inc
arpl
cmp
push
bound
jbe
addr16
add
mov
lea
int
fwait
dec
test
out
movsl
les
inc
or
imul
movb
pop
popf
jg
mov
inc
push
cs
mov
test
cltd
sub
add
fwait
orb
lock
clc
popf
adc
add
xchg
ljmp
jge
testl
jae
mov
out
xor
roll
int
fisubl
inc
mov
into
jge
iret
iret
dec
and
inc
jno
cmpsl
cmp
addr16
jo
pop
mov
dec
test
xlat
push
lds
decb
jne
sbb
jo
aaa
dec
idivb
jg
addr16
out
sti
xchg
cmp
aaa
inc
cli
fbstp
push
xor
adcl
int3
pop
and
dec
outsl
lret
push
mov
adc
push
inc
add
addr16
add
aas
ss
insl
inc
jmp
push
inc
xor
jmp
das
mov
aam
lods
xchg
push
out
std
icebp
cmp
xchg
aam
scas
int
sub
stos
mov
pop
lret
or
bswap
and
loope
repz
pop
fsts
push
xor
push
scas
divl
and
dec
js
push
aaa
enter
sbb
add
enter
pushf
nop
ss
xor
jns
mov
shll
into
aas
add
add
pop
push
movsl
jns
ja
inc
inc
js
sub
mov
add
push
xor
xor
je
inc
jmp
jbe
adc
cld
mov
jno
push
aam
aas
xor
orl
jge
or
add
inc
mov
mov
rol
add
enter
out
icebp
ss
aam
xchg
ret
rclb
pop
aam
or
movsb
loopne
lds
mov
ljmp
jl
jp
push
jns
scas
mov
subl
xlat
sarb
pop
cwtl
dec
dec
mov
icebp
mov
test
in
xchg
addr16
cld
adc
push
push
sbb
xor
cmpsl
jnp
cmpsb
jb
cli
ret
ror
clc
mov
adc
clc
and
cmp
mov
hlt
std
nop
cmc
addr16
adc
ja
xchg
aaa
mov
and
dec
xchg
popa
mov
into
and
sbb
es
dec
sti
lcall
decb
mov
outsb
pop
add
xor
test
lret
cmp
cmp
ret
insl
cmp
enter
enter
mov
cmp
lret
push
jg
cmp
inc
adc
xchg
jle
cmp
lahf
les
loope
repnz
pop
cmp
out
clc
out
or
sub
sbb
pop
mov
pushl
sahf
lsl
adc
or
in
icebp
xchg
scas
and
xchg
sahf
cmp
inc
movsl
sub
enter
ja
out
shrl
cmc
ret
add
mov
jp
sbb
add
js
inc
scas
int3
sahf
mov
test
shll
mov
push
inc
mov
daa
jge
push
and
in
jne
insl
push
xchg
in
mov
mov
push
xor
sbb
cltd
inc
orl
je
xchg
movsl
mov
shrl
cmp
add
or
out
fbld
xchg
cli
lret
or
and
cld
push
sahf
sbb
inc
stc
daa
dec
cmp
adc
jo
testl
loop
int
sbb
gs
js
jbe
jle
lea
cmp
cmp
jmp
aam
or
loopne
rol
and
sbb
cmp
push
inc
jae
pop
and
lcall
test
jg
adc
jb
dec
pop
xchg
ror
fisttpl
mulb
sub
insb
jne
pop
sbb
sahf
in
lods
mov
and
testb
adc
inc
inc
or
dec
test
inc
fwait
arpl
sbb
jp
aam
fs
stc
mov
inc
push
mov
jp
mov
push
pop
mov
jno
test
js
cmp
push
jae
adc
push
dec
xchg
or
pop
and
orb
xor
pop
imul
sub
movsb
icebp
lahf
pop
sub
int3
sbb
mov
hlt
test
das
mov
pushf
mov
adc
add
lret
xchg
adc
stos
outsl
push
mov
imul
and
mov
neg
jne
stos
popa
xor
xchg
push
sahf
lcall
pop
out
jge
addl
leave
mov
aaa
pushf
aas
mov
hlt
inc
inc
and
or
mov
call
push
icebp
push
xorl
mov
hlt
jne
aam
pop
or
rol
mov
imul
adc
xchg
xchg
das
bound
push
pop
sbb
adc
sbb
or
dec
addl
mov
rcll
pop
fcomps
xchg
adcb
fbld
test
inc
add
pop
push
adc
ss
bound
jns
pop
loope
push
adc
sub
cld
jle
and
adc
dec
sub
movsl
cmpsb
shrb
push
outsb
fwait
jge
jp
xchg
xchg
mov
adc
das
jb
pop
add
fldenv
lret
pop
cmp
lods
pop
push
or
xchg
ret
mov
sbb
mov
fsub
imul
mov
xor
mov
ss
jne
mov
dec
cmc
out
pop
add
inc
adc
scas
xor
pop
sbb
dec
add
btc
ljmp
mov
sarb
xchg
leave
pusha
dec
mov
and
fisubs
daa
jl
inc
mov
std
ljmp
dec
mov
cmp
jge
repnz
lcall
std
daa
lret
or
jp
cmc
mov
xchg
shrb
push
cltd
icebp
or
push
mov
and
sti
jp
xchg
setge
and
sbb
inc
xor
imul
pusha
sbb
mov
cld
stos
jecxz
mov
xchg
gs
and
adc
stc
sub
xor
xor
jns
inc
fnstcw
out
mov
adcl
out
xchg
call
testl
sub
test
mov
sbb
mov
dec
xchg
cmpl
orb
js
movsl
fisubrl
push
es
cmc
xor
jae
sbb
mov
xchg
inc
js
adcl
mov
jl
mov
into
fildl
and
xor
in
dec
push
dec
shlb
xor
das
clc
or
xor
popf
pushf
mov
scas
cltd
stos
pusha
push
ret
xchg
movsl
inc
lahf
add
fnstsw
in
push
mov
sbb
fldcw
pop
add
mov
loope
mov
sti
push
ja
and
out
in
pusha
cmp
add
add
inc
mov
mov
fisttpl
inc
shll
mov
sub
pop
out
xor
mov
jnp
sub
sub
scas
dec
ret
push
and
ret
adc
into
call
arpl
mov
cmpsl
push
xor
xor
jmp
je
push
aam
push
test
jno
adc
daa
lock
rcll
mov
loopne
inc
pop
insl
data16
ret
mov
jl
loope
dec
mov
push
jb
sbb
jno
in
mov
pop
or
cltd
jecxz
push
popa
aam
inc
cltd
push
sub
repz
add
mov
cmp
inc
not
push
hlt
out
fldt
dec
cmp
add
mov
aam
fisubs
fdivp
xchg
jl
lds
and
jecxz
icebp
mov
jmp
adc
or
ret
addr16
adc
mov
popl
add
adc
inc
add
mov
xchg
cmp
sahf
push
movsb
add
loope
cmpsl
mov
inc
loope
sbb
adc
xchg
mov
dec
mov
sub
push
lret
loope
ss
push
or
mulb
insl
in
arpl
sbb
mov
dec
cmp
dec
popf
cmp
adc
pop
incb
mov
jbe
int3
ja
test
sbb
imul
fisubrs
dec
cmp
xchg
pushl
mov
xchg
or
cltd
mov
fcmovbe
clc
push
dec
jle
lret
ret
mov
sub
in
push
add
out
sub
imul
aam
dec
push
sub
add
pop
inc
arpl
mov
repnz
lahf
repnz
sbb
aaa
int
in
sbb
fldcw
cmp
arpl
stc
or
icebp
xchg
ret
mov
xchg
or
aad
scas
enter
pushf
sub
test
mov
jbe
fdivr
mov
pop
movsl
enter
movsb
adc
xchg
mov
orl
repnz
and
xchg
fxch
xchg
in
push
insb
jge
add
fwait
ret
out
mov
sbb
insl
shl
push
inc
xor
jns
pop
mov
mov
clc
lcall
addr16
add
add
sahf
mov
push
les
cmp
mov
cmpsb
dec
push
add
sub
dec
movsl
xchg
mov
stos
adc
jle
ret
push
popa
bound
or
add
mov
or
pop
ret
test
jle
daa
int3
sbb
mov
lret
jnp
sbb
xlat
xchg
jle
fiaddl
cmp
mov
lock
jo
jne
dec
sbb
jne
or
subb
loop
or
cwtl
gs
inc
inc
mov
xchg
push
inc
mov
out
fdivs
dec
in
stos
xchg
ret
lar
scas
dec
jbe
in
jne
fs
js
pop
lret
pop
or
lods
mov
lret
jo
jle
inc
jge
imul
leave
mov
mov
mov
jae
addr16
mov
pop
stos
jecxz
push
fadds
cltd
loop
dec
pop
adc
dec
fsubrs
add
clc
in
cmp
push
movsl
insb
dec
jns
sub
nop
stos
mov
iret
sub
dec
pushf
mov
jns
pusha
mov
push
ffree
mov
adc
test
mov
add
adc
adc
fxch
ja
notl
adcb
lea
std
movsb
lcall
cmp
sbb
inc
loop
iret
jge
xchg
out
dec
adc
dec
loopne
mov
pop
xchg
iret
xchg
aas
xor
and
or
cltd
fwait
cmpb
rolb
fs
adc
xchg
add
fld
dec
inc
jae
popa
sub
cmp
shl
aam
dec
xor
repz
mov
lahf
into
js
adc
mov
lods
sbb
dec
pop
inc
jmp
movsb
jnp
ret
inc
out
clc
rclb
sub
sub
mov
fidivrs
add
dec
cmp
arpl
pushf
push
mov
cs
scas
lcall
push
add
cli
test
cmp
imul
leave
test
mov
lret
jp
test
in
movsb
jge
rorb
orb
and
lret
mov
ficompl
aad
dec
mov
mov
sbb
ret
in
insl
into
repnz
lea
adc
clc
mov
dec
test
mov
push
xchg
pop
mov
cld
and
inc
mov
mov
adc
int
popf
xor
lea
insl
orl
sbb
sahf
repz
shlb
pop
push
inc
leave
cmpsl
pop
mov
shll
xchg
adc
xchg
scas
pop
cmpsb
jecxz
xchg
test
test
notb
mov
xchg
pusha
ss
insb
mov
js
test
mov
lret
sub
jge
jno
cmp
in
inc
mov
mov
push
ljmp
sbb
mov
inc
push
inc
or
aam
cmp
pushf
mov
xchg
fisubrl
test
push
jp
mov
sbbb
xor
sbb
mov
xchg
into
xor
jle
add
lahf
cmp
push
or
jbe
mov
mulb
mov
movsb
in
vmread
dec
cmp
inc
test
int3
lods
std
xchg
dec
loop
fmuls
ja
das
mov
cmpsl
test
jge
mov
lock
cmc
xchg
cmpsb
sub
data16
fcoms
xor
jmp
jae
in
mov
jmp
aam
fimuls
sbb
shlb
fwait
xor
or
xchg
xchg
mov
sub
sbb
sbb
sub
out
sub
xchg
mov
ret
mov
mov
out
jo
dec
mov
negb
fimull
lret
lret
pop
push
push
adc
daa
pop
enter
jmp
dec
push
bswap
fbld
call
xor
xchg
ljmp
mov
repnz
adc
cmp
push
adc
mov
loope
out
cpuid
aaa
sbb
push
xor
fdivr
cmc
es
stos
jecxz
and
jge
rcll
lret
adc
xor
ljmp
int
addr16
dec
mov
scas
pop
int3
popa
mov
jo
or
sbb
lahf
jo
cmpsb
in
dec
lret
and
jb
aas
cmp
jle
mov
xor
push
push
incl
sahf
in
or
sub
sub
inc
addb
in
sub
in
add
stos
xor
add
add
mov
je
xor
pop
hlt
ja
jmp
pop
jecxz
xor
jae
jecxz
pcmpgtd
pusha
cmp
jp
and
inc
imul
les
inc
imul
in
andl
es
cld
data16
daa
iret
cwtl
pop
loop
pop
fnsave
mov
cwtl
mov
jne
call
fildll
and
test
out
movnti
xor
pop
pop
fidivrl
pop
popa
dec
pop
xchg
mov
into
shl
xor
mov
sbb
pop
push
mov
in
push
sti
fwait
push
sub
je
std
nop
jno
scas
loope
shll
out
insl
aam
divb
nop
mov
enter
xor
dec
fsubrs
imul
mov
add
or
xor
push
lods
sbb
popf
and
mov
imul
push
arpl
adcb
cmp
xor
int3
fidivl
fisttpll
test
out
cmc
ret
fsubrs
in
cwtl
inc
cmp
and
jb
and
xor
cmp
xchg
xorl
or
sub
jno
imul
adc
leave
dec
popa
clc
fdivrs
pushf
xlat
push
or
and
mov
sahf
dec
jge
sbb
rolb
ljmp
std
pushf
test
repz
adc
mov
add
add
pop
cmpsl
mov
dec
fiaddl
filds
push
pop
dec
mov
fiadds
and
push
fiadds
int3
cmpsl
adc
sub
je
fimull
mov
daa
orb
cmpsb
aam
movsb
sub
sbb
mov
rclb
add
sub
xchg
stos
xlat
rorb
xchg
sub
int3
jl
xchg
int3
insl
jg
dec
nop
jns
stos
in
andb
out
jbe
cs
push
shrb
mov
xchg
pop
dec
mul
lcall
sub
rorb
mov
push
xchg
jl
scas
xor
adc
jnp
mov
sub
cmp
xchg
lea
cltd
pop
xchg
mov
cmpb
inc
pop
sub
inc
bound
sarl
xchg
test
or
out
pop
xchg
out
pop
adc
adc
in
lds
jmp
mov
sub
mov
jp
mov
pop
mov
loop
pop
sbb
lock
popf
movsb
or
leave
sti
imul
xchg
enter
out
jmp
bound
xor
mov
cwtl
jg
sbb
sub
xchg
push
fwait
jo
mov
pop
vcvtdq2pd
je
icebp
lods
xchg
push
push
loopne
and
pop
mov
in
aaa
sti
pop
dec
in
jb
daa
jae
xchg
sahf
lock
icebp
mov
int3
add
push
lods
jge
mov
imul
dec
dec
rcll
data16
pop
jg
xchg
xor
and
jbe
mov
cmpsl
push
and
add
sub
sbb
or
push
test
mov
push
ja
enter
shrb
cmp
pop
dec
cltd
das
jne
ret
and
daa
or
ss
pop
cli
repz
sub
sub
test
pop
xchg
in
pusha
or
sar
fwait
xor
pop
jne
lret
push
pop
ljmp
sub
xchg
loop
gs
push
sbb
mov
inc
out
in
psubusb
jl
jmp
pop
dec
pushf
push
jmp
xor
dec
mov
and
adcb
push
inc
inc
push
cmpsb
fsts
lods
les
sbbl
test
in
data16
std
adc
bswap
add
jmp
or
xchg
ds
in
sbb
adc
add
and
push
outsb
jae
lods
cmp
out
icebp
pop
repz
repz
or
adcb
and
outsb
in
outsl
adc
lret
xor
jbe
loopne
sub
push
cwtl
mov
test
popf
push
repnz
xchg
pop
aam
insl
fimull
sub
orb
dec
mov
or
inc
test
cmc
jle
ja
adc
xchg
icebp
and
mov
inc
bound
arpl
aas
mov
push
roll
lret
sub
jecxz
fstp
mov
add
dec
xchg
pop
xor
mov
fidivrs
idiv
fs
loopne
sbb
dec
shlb
aad
dec
or
sub
ds
xor
ret
jb
push
ss
push
sahf
shll
sub
out
cld
add
mov
push
mov
xor
fildll
in
mov
stos
nop
dec
sbb
cli
or
mov
mov
add
xor
dec
stos
fmul
stos
and
jp
cltd
movsb
fisttps
inc
mov
dec
mov
popa
ds
into
push
hlt
icebp
xor
int
sbb
inc
rclb
adc
mov
mov
adc
sarl
jmp
dec
stos
xor
pusha
sub
lret
in
inc
jp
sub
mov
je
add
setno
dec
mov
js
fcomps
pop
outsb
mov
inc
fs
out
dec
sbb
inc
push
mov
sub
cmp
stos
mov
xor
xchg
xor
push
test
call
sub
dec
rcrb
mov
sbb
sbb
ljmp
nop
outsl
std
jnp
insb
mov
cmc
out
sub
fsubrs
or
push
daa
fs
leave
jle
jnp
testb
xchg
jmp
xchg
popf
sbb
cmp
adc
cmp
outsl
ljmp
test
mov
sub
and
and
jnp
mov
icebp
cmp
lret
mov
sbb
sbb
and
mov
mov
jmp
sbb
cmp
xchg
adc
cmpsl
orl
bound
jnp
mov
loop
cmpsb
xchg
and
and
add
sti
adc
push
xor
mov
jnp
push
ljmp
mov
rdpmc
imul
add
std
jmp
dec
pop
ud1
push
loope
inc
sahf
jae
stc
dec
repz
das
mov
jmp
xchg
push
inc
cmpsb
fnstsw
push
imul
mov
push
jecxz
mov
dec
movsb
mov
fcoms
jb
enter
fucompp
and
jg
jne
inc
mov
pop
inc
xor
fwait
pop
je
adc
adc
out
mov
mov
xchg
ror
hlt
jmp
dec
and
jbe
or
aaa
push
or
ss
and
jnp
mov
das
test
adc
mov
scas
roll
adc
lds
mov
movsl
mov
mov
rolb
lret
cmp
pushf
push
inc
hlt
fstpt
fucom
lds
dec
cmp
stc
ljmp
cmp
jbe
xchg
movsb
ficoms
xchg
xchg
adc
fistl
movsl
cmp
dec
outsl
inc
in
pop
aam
cmc
xchg
and
popa
adc
lcall
xchg
inc
movsl
add
lock
and
sub
mov
push
push
sub
mov
call
fldl
gs
fldl
xchg
pop
test
sub
and
xor
jbe
lock
aas
ret
sub
mulb
jl
cmc
xlat
pop
mov
cmp
movsb
pop
and
xchg
xor
jecxz
pop
or
out
xchg
movsl
fisubl
andl
test
lcall
fs
xchg
cmp
outsb
xchg
push
ror
lods
xor
inc
sarb
popa
pop
into
xchg
xchg
sbb
sarl
cli
shll
jae
jne
cmp
xchg
adc
mov
adc
pop
sarb
pop
dec
inc
rclb
inc
jne
insl
and
inc
sub
and
mov
mov
fs
mov
fwait
loop
or
loopne
mov
pop
adc
mov
das
xorl
pop
mov
in
cmp
or
xor
adc
aam
addb
loopne
jnp
test
xchg
add
scas
xchg
mov
aam
sub
push
xlat
dec
mov
cmpsb
push
sbb
das
mov
imul
or
pop
sub
mov
nop
test
add
lret
pop
lea
stc
push
leave
xor
inc
aam
aas
cmp
adc
je
jge
daa
jge
stc
stos
imul
lods
xchg
cmp
insl
xchg
xor
loop
lds
push
jbe
in
mov
call
mov
mov
cmc
int
jl
daa
incl
cmpsl
or
aaa
punpcklwd
dec
push
pop
or
test
rdtsc
aaa
cld
sar
jmp
sbb
add
jmp
test
xchg
mov
movb
or
inc
xor
sbb
cmpsl
ljmp
mov
pop
xor
mov
popf
nop
push
ljmp
ljmp
ds
push
adc
in
popf
mov
hlt
daa
inc
jmp
outsl
mov
or
mov
xor
and
xchg
dec
cwtl
xchg
rcrl
cltd
adc
mov
mov
ja
icebp
aaa
add
cwtl
je
sub
cltd
cld
pop
out
add
cvttps2pi
test
sub
bound
movsb
dec
out
addr16
or
cmp
or
adc
adc
notl
add
mov
cmpsl
mov
ficompl
fisubrl
dec
imul
leave
sbb
sbb
call
and
test
test
ja
sub
dec
mov
jb
push
lods
fisttps
imul
les
jg
test
fsubrl
add
inc
jb
jae
pop
sbb
and
mov
les
rclb
jae
lock
inc
outsb
leave
ljmp
push
sub
mov
adc
adc
sub
in
ss
and
ja
dec
jmp
inc
shlb
and
insb
lods
mov
stc
insl
jge
and
sbb
dec
mov
iret
xchg
pop
dec
int3
mov
movsb
repnz
mov
jo
cmp
push
rcr
mov
fdivs
data16
aaa
jb
stos
xlat
inc
mov
out
sarl
and
cld
mov
lds
nop
pop
std
mov
add
cs
pusha
sbb
ds
mov
mov
jecxz
jae
pop
or
inc
cld
push
inc
push
and
xor
imul
jb
hlt
in
add
aaa
xchg
xchg
sbb
sbb
cmp
sbb
icebp
sub
sub
test
in
adc
es
pop
nop
jo
popl
inc
fildll
test
loop
repz
stc
mov
xor
and
sub
cmpsl
scas
xor
add
idivb
xor
push
pop
fiadds
cmp
mov
fs
xchg
xchg
out
mov
outsb
es
lret
jge
pop
test
push
mov
cmp
cmp
sub
adc
js
cmp
js
xor
ret
mov
add
test
mov
hlt
cmp
sbb
icebp
adc
imul
jae
push
in
nop
into
pop
ja
out
insl
dec
xchg
notb
add
test
push
jp
ss
inc
xchg
repz
enter
pop
jnp
jp
xchg
or
mov
test
aas
xchg
cltd
pxor
mov
mov
jo
pop
cs
fwait
add
movl
sarl
pop
sti
jl
es
jmp
and
insb
push
idivb
mov
mov
into
pop
popf
sarb
test
popa
cltd
ror
xchg
add
fildl
pop
dec
cmp
jp
mov
xchg
pop
ss
mov
rcll
mov
dec
cmpsl
mov
out
dec
xor
data16
inc
fld
push
movsl
loopne
xchg
sbb
in
test
or
push
dec
xor
into
call
jge
stos
fmull
and
movsb
push
cmpsb
add
sbb
jmp
lret
cs
cmpsb
sbb
inc
dec
sahf
pop
pop
and
repnz
in
add
push
lods
daa
mov
mov
dec
call
sbb
xor
adc
bnd
lahf
das
mov
popf
dec
jb
rolb
adc
jbe
mov
rorl
sbb
xor
out
and
adc
and
sub
aam
sbb
add
cmp
shr
push
mov
fnstsw
xchg
jp
hlt
les
push
xor
cmc
push
xor
sbb
out
dec
cmp
xchg
push
shrl
sub
add
inc
out
popf
mov
jne
dec
mov
inc
and
jb
xor
fnstcw
outsl
enter
call
and
pop
arpl
shll
or
dec
leave
dec
or
das
cmp
outsl
mov
mov
push
xor
in
push
add
mov
in
lret
mov
xor
and
clc
sub
inc
outsb
cmp
or
push
mov
pop
cmpb
push
mov
add
sahf
outsl
dec
xchg
or
mov
fld
pusha
insb
rolb
in
xchg
repnz
xor
mov
into
or
adc
out
mov
add
stc
ret
sub
loopne
dec
mov
mov
sub
pop
jno
jbe
int
push
jmp
stos
add
imul
add
arpl
leave
xchg
cmc
adc
stos
xchg
jae
mov
hlt
sarl
hlt
adc
push
lods
arpl
test
rcrl
push
sbb
out
dec
jge
xchg
fs
sbb
cltd
test
iret
rol
clc
mov
daa
cmpsb
loope
lods
add
jnp
mov
js
subb
push
fildl
push
cltd
insl
mov
pop
das
adc
scas
xchg
bound
xor
pop
stos
iret
push
outsb
ljmp
scas
fwait
sub
cmp
lret
lahf
xlat
sahf
insb
jecxz
iret
dec
mov
loop
jbe
and
xor
inc
fwait
jmp
and
mov
inc
jle
les
in
arpl
ds
sti
cmpb
dec
and
hlt
rolb
mov
movsb
mov
test
push
sti
pop
insl
sbb
pusha
fstpt
test
filds
movsl
dec
dec
fstps
lods
add
sbb
xlat
mov
sub
mov
push
pop
loop
movsl
rcrb
inc
dec
pop
jae
iret
lcall
add
mov
inc
cmpsl
adc
pusha
push
pusha
mov
xchg
inc
sti
mov
es
into
jge
icebp
pushf
shrl
and
xchg
mov
test
std
ret
mov
push
stc
lret
pop
cmc
add
andb
gs
fiaddl
imul
jecxz
leave
es
xchg
adc
xchg
jno
jp
insl
cwtl
in
pop
jge
shlb
stos
out
repz
mov
mov
mov
imul
dec
sbb
sbb
xchg
lcall
ret
mov
les
enter
movsl
mov
imul
sahf
rolb
xchg
xchg
ds
nop
mov
mov
scas
ss
add
mov
in
pusha
addr16
and
fidivl
or
cltd
xor
das
jbe
xlat
mov
adc
mov
int
jp
xor
jl
push
imul
mov
icebp
aas
mov
mov
dec
adc
jae
iret
fbld
fmull
jbe
js
sub
pop
add
rcl
pop
cmpsb
or
lods
xchg
stos
stos
scas
sub
mov
icebp
cmpsb
ficoml
inc
jb
arpl
mov
xchg
mov
shll
lods
add
pop
fnsave
not
dec
and
test
add
adc
ret
stc
xchg
dec
fistpl
mov
push
push
negl
pop
pusha
fyl2x
sbb
test
fwait
jmp
add
mov
mov
clc
in
imul
xorb
xor
loopne
xchg
aaa
lds
fnstcw
lcall
andb
xor
movsl
mov
lret
int
stos
mov
lret
fisubrl
mov
imulb
fldt
fadds
cmp
mov
ret
add
and
dec
xor
push
mov
lret
jp
lock
xor
jg
out
cmpsl
insb
cli
aas
out
adc
mov
arpl
iret
subb
nop
inc
out
add
jnp
lock
jb
leave
mov
fyl2x
fcoml
loopne
dec
dec
loop
and
push
xor
push
mov
pop
imul
push
push
bound
xchg
rorl
out
cmc
sub
ss
enter
push
push
dec
mov
jecxz
mov
icebp
mov
jne
hlt
fadd
or
mov
popa
ret
or
mov
adc
mov
stos
fisubrl
cmp
xor
xchg
dec
fstl
sbb
test
mov
jge
lea
mov
pop
test
sbb
push
stos
sbb
imulb
test
hlt
movsb
aam
les
push
inc
lds
cmc
push
add
xchg
pusha
lret
orl
pop
mov
sub
lret
in
lock
and
jl
out
out
lcall
ret
lret
test
jb
fcompl
pop
int
cmpsl
mov
test
jecxz
out
push
pop
in
jmp
loop
gs
xchg
xchg
fisubrs
pop
neg
inc
lock
cmp
enter
iret
movsl
sti
and
rcrb
lods
mov
in
sbb
clc
aad
push
lcall
shlb
loope
mov
adcl
cmp
cltd
push
xchg
ror
daa
jae
les
pop
cltd
xchg
sbb
inc
test
xchg
or
jo
std
test
movsb
pop
jnp
das
jae
imul
adc
add
aad
popa
repnz
dec
push
cli
xchg
and
sbb
jb
xor
shlb
jb
test
filds
mov
xchg
add
aaa
faddl
out
lcall
into
jne
rcl
movsl
icebp
cld
xchg
xor
clc
sbb
stos
jb
insl
popf
cmp
mov
leave
add
inc
xor
pop
sub
in
leave
mov
pop
ret
cs
xchg
call
push
mov
ja
cmp
lea
mov
xor
ja
movsl
add
cwtl
xor
andb
aas
popa
xorb
sarl
out
ss
jp
pusha
addb
nop
aam
mov
int3
mov
data16
cli
scas
sbb
jmp
ror
pop
sahf
xor
mov
es
je
pop
xor
iret
les
loop
pop
in
imul
sbbl
fsubp
pushf
mov
and
clc
cmpb
or
dec
or
test
ds
mov
xor
mov
cmc
cmp
mul
fwait
mov
sbb
sti
xchg
and
dec
test
ss
lret
push
pop
xchg
push
mov
movsb
ljmp
rclb
xchg
xchg
cmpsl
or
push
shll
sub
sbb
push
jb
pop
in
cmpsb
pop
mov
mov
cmp
cmpb
push
add
call
add
shrl
js
ja,pn
ret
xchg
pop
sub
mov
aaa
mov
in
cld
scas
cs
fcomps
lods
jbe
test
xor
loopne
enter
or
jg
cld
jl
jl
sbb
jecxz
fcmovu
faddl
and
jp
aas
push
inc
mov
int3
adc
jecxz
roll
rcll
sub
mov
lret
xor
jl
ficomps
mov
jge
sub
push
fldcw
data16
jge
sbb
jbe
jle
inc
iret
or
push
mov
xor
enter
xchg
jnp
jge
sbb
and
add
jmp
fsubp
or
cmp
mov
jmp
int3
mov
mov
mov
sub
loop
xchg
add
call
aaa
arpl
fmuls
or
int3
fs
fwait
mov
cwtd
es
add
mov
pop
lods
push
arpl
addb
outsb
inc
imul
iret
inc
stos
and
mov
fnsave
mov
xor
xor
mov
mov
scas
lods
xchg
xor
xchg
or
pop
idivl
dec
into
outsl
inc
pop
dec
mov
inc
addr16
adc
xchg
insl
push
pop
sub
add
push
cmp
lds
mov
push
dec
adc
lret
jae
sub
mov
jnp
mov
aas
popf
pop
test
out
xchg
jl,pn
je
jg
pop
cmpsb
lods
pop
in
mov
jecxz
lret
sti
sti
lea
push
or
cmp
dec
pop
aad
shl
xor
shlb
enter
clc
jg
sahf
rol
and
inc
xor
sbb
cmp
mov
mov
out
pusha
inc
ss
testb
test
ret
or
or
inc
vpavgb
sub
sbbl
cmp
cmp
inc
jae
push
nop
add
addb
and
sub
shll
clc
rcr
shrl
mov
push
daa
gs
mov
cmpsb
mov
lods
xchg
mov
push
in
shll
adc
jge
sarl
fwait
stos
inc
es
das
stos
xorb
aad
add
loope
cmp
xchg
and
lret
mov
fxch
cmpsb
dec
add
push
int3
sarl
insl
jecxz
mov
inc
mov
adc
or
add
lds
lods
test
cli
mov
cmp
mov
sbb
adc
lock
mov
dec
ret
fists
shrb
mov
loop
push
andl
cs
out
pop
push
lahf
sub
mov
fxch
js
xabort
movsb
inc
stc
add
mov
mov
mov
pop
stos
rorl
lret
aad
xorb
mov
sbb
add
fwait
jge
pop
lods
push
push
xchg
aaa
jb
push
pop
aad
xchg
fwait
pop
inc
jnp
fists
es
cltd
js
aaa
add
dec
dec
daa
fwait
or
into
and
push
mov
xchg
mov
ss
mov
mov
js
add
push
test
mov
daa
inc
ficompl
push
jmp
addr16
and
fistl
jne
repnz
inc
lahf
imul
pop
js
mov
and
jo
mov
push
stc
lcall
out
ss
xor
xlat
mov
mov
xchg
mov
pop
add
leave
and
leave
ficoml
push
adc
int3
sub
adc
loopew
xchg
xor
rcll
mov
data16
inc
stos
xchg
mov
test
imul
xor
xchg
add
ficompl
sub
sti
gs
add
fldenv
jge
and
loope
adcb
repz
add
cwtl
add
add
aam
ljmp
loop
mull
sbb
incl
pop
ret
sub
pushf
in
ret
dec
xor
das
ljmp
push
or
pop
lea
inc
mov
xor
ret
sub
pushf
and
insl
in
jmp
test
scas
jg
dec
pinsrw
push
xor
pusha
mov
test
and
xor
sbb
and
sbb
in
xchg
push
xchg
ljmp
jg
xchg
mov
popf
dec
mov
push
jle
in
pop
mov
movb
xchg
xchg
andb
mov
or
cs
lods
mov
ret
cmp
mov
push
xor
int
mov
and
add
out
jns
pop
fldl
mov
add
addr16
aad
out
shll
push
repnz
and
add
xor
xlat
fwait
cmp
mov
pop
xor
jl
add
push
cmc
icebp
inc
push
push
in
int
sbb
dec
xor
test
jl
sti
mov
lret
pop
xor
push
xchg
out
jnp
clc
jae
mov
push
push
cld
mov
pop
jle
or
jge
and
ret
outsb
les
cmp
pop
out
orl
jae
jge
arpl
ret
pop
push
hlt
iret
pop
test
movsb
push
or
sarb
aam
add
mov
addr16
xchg
lods
loope
repz
cmp
pop
mov
and
popf
and
jno
add
popf
push
lahf
mov
adc
ljmp
popf
jnp
jg
fdivs
dec
inc
gs
pop
loope
mov
dec
mov
out
pusha
dec
inc
jle
mov
xchg
or
sub
push
jae
or
or
add
std
add
mov
dec
lea
adc
inc
fimull
pop
dec
push
cld
jo
mov
mov
sub
mov
sub
popf
sub
or
jnp
jp
fists
push
test
jnp
push
ja
mov
fsubs
mov
add
movups
in
xchg
repnz
out
test
ss
bound
and
sbb
fdivl
or
in
xor
imul
inc
shlb
scas
lods
cwtl
gs
sahf
sbb
iret
test
pop
out
inc
add
pusha
push
rcrb
jecxz
cwtl
stos
shlb
mov
out
xor
lods
push
ret
xor
fdivs
mov
mov
aad
shl
adc
push
movsb
js
ficoml
sbb
and
and
and
pop
lahf
push
mov
push
outsl
jp
ret
scas
jp
or
mov
dec
dec
mov
data16
repnz
xor
pop
add
sbb
push
pop
fucomi
test
inc
shl
adc
inc
scas
sub
movsb
flds
inc
xchg
xchg
cmp
jp
jge
mov
ljmp
xor
xchg
stos
sbb
mov
sahf
repz
cmp
inc
ss
mov
insb
out
cs
outsb
pop
popa
sub
rcl
in
jo,pt
mov
jg
or
push
out
adc
jo
pusha
imul
mov
pop
mov
aaa
out
jmp
fs
xchg
aas
in
pusha
int3
cmp
sahf
lret
ret
cmp
sbb
subl
repz
aad
pop
jae
add
popa
cmc
mov
ret
dec
and
arpl
rorl
pop
fcompl
scas
inc
mov
mov
mov
push
push
out
std
sub
cli
and
shll
sbb
cmp
pop
pusha
push
in
inc
arpl
dec
or
lret
enter
shr
adcl
insl
enter
fwait
stos
pusha
xchg
popf
mov
fs
mov
ljmp
lret
xchg
jp
or
mov
adc
dec
sahf
in
aad
imul
mov
sbb
cmp
jle
movsl
inc
orl
add
jmp
cmp
mov
jbe
ljmp
xchg
xchg
call
in
jle
sbb
in
and
call
sahf
inc
pusha
fucomi
push
xchg
jecxz
add
mov
out
outsb
sub
insl
mov
inc
hlt
outsb
inc
out
or
int
pusha
add
xchg
iret
dec
xor
out
decl
xor
daa
lahf
fcoms
es
fidivl
xor
or
aas
sub
enter
out
dec
or
out
or
mov
popf
cwtl
aaa
popf
das
add
repz
xchg
sub
lret
in
mov
mov
and
pop
orb
fnstsw
scas
jecxz
xchg
ret
lahf
add
xchg
out
add
mov
mov
cmp
sub
jg
mov
mov
ret
add
out
sub
mov
xor
xor
mov
dec
pop
push
jne
jbe
sbb
or
movb
shll
xchg
fs
inc
ret
rcrb
xchg
mov
sahf
dec
shlb
loopne
ret
aas
inc
cmp
push
cmp
or
inc
mov
push
addb
stos
ja
mov
pusha
xchg
mov
dec
std
add
mov
cwtl
jl
test
add
add
stc
xchg
push
pop
ja
leave
add
jb
imul
or
outsb
dec
pop
push
ficoml
mov
popa
push
pop
lods
jno
push
js
jmp
mov
int
cld
test
loop
pop
inc
inc
jns
or
jbe
xchg
pop
std
adc
pop
jl
mov
jmp
sub
mov
cmp
sbbl
lret
jbe
pop
mov
dec
gs
pop
mov
xchg
push
movntq
divb
cmp
cmc
jo
mov
inc
movsb
pop
das
into
xor
lcall
ljmp
dec
sbb
and
fcomip
into
mov
movsb
or
mov
push
pop
adc
dec
lods
cmp
cmp
cmp
cmp
dec
shlb
es
fsub
sbb
push
xor
fistl
mov
lds
mov
mov
push
pop
cmp
sbb
or
sbb
test
sub
lahf
clc
lds
mov
push
or
mov
push
or
dec
cmp
js
aam
sbb
inc
xchg
cmp
scas
roll
fsubrp
inc
lods
cmp
adc
out
clc
push
pop
je
test
mov
cld
sbb
xchg
cmp
fldt
mov
xchg
mov
dec
and
adc
cmc
jns
cmp
mov
or
mov
repz
clc
sbb
ds
inc
mov
mov
pushf
fs
fdivrl
mov
sub
mov
cmpsb
push
out
pop
mov
or
pushf
repz
fisttps
sub
cmc
or
lods
fmull
jl
inc
das
pop
dec
mov
in
into
testl
into
jmp
pop
mov
sub
mov
cmpsl
sub
mov
in
add
and
test
mov
or
fisubrl
mov
subl
sbb
popa
call
sbb
lfs
repz
out
rcll
adc
lock
push
push
jmp
push
lock
repnz
fs
repz
or
and
out
or
popa
mov
imul
mov
adc
mov
cmp
sub
sti
fs
sbb
pop
jnp
cwtl
pop
xchg
rcrl
std
mov
dec
ljmp
pusha
shll
dec
decl
pop
test
pop
push
mov
sbb
jmp
movsb
mov
add
pop
or
mov
adc
jmp
pop
jns
movsl
lods
mov
inc
hlt
pop
jp
lock
jmp
ljmp
cmpsb
mov
mov
jmp
test
xor
and
dec
lahf
push
cmpsb
jmp
sub
fcom
mov
je
mov
push
mov
pop
out
pop
scas
int
sbb
jbe
sub
mov
notb
test
dec
xchg
repnz
sub
push
jecxz
push
clc
dec
gs
jl
stos
popa
adc
call
lock
jp
xchg
cmp
ror
loope
and
arpl
dec
cli
ret
negl
push
xchg
sub
or
inc
js
mov
insb
xchg
pop
inc
jecxz
sti
bound
stc
fmuls
mov
mull
adc
pop
sbb
int
outsb
addr16
pop
es
pusha
adc
daa
ss
mov
adc
inc
les
loopne
xchg
sti
lahf
hlt
xchg
aas
sub
loop
pusha
mov
mov
and
adc
inc
imul
inc
shlb
cltd
inc
ret
add
adc
jo
dec
popf
add
shl
or
rol
and
mov
iret
in
inc
jae
xchg
fs
jecxz
jb
fnstenv
cmp
push
shl
std
xor
xchg
stos
push
push
cmp
push
cmp
std
insl
cmp
xchg
jle
or
cwtl
ror
es
mov
cmpb
scas
and
std
add
sti
loopne
push
fisttpl
leave
insl
push
xchg
add
mov
mov
lods
xchg
jecxz
xor
push
sbb
cs
sbb
test
adc
pop
arpl
decb
adc
into
push
mov
mov
jmp
mov
outsl
cwtl
jecxz
sbb
cmp
cmovb
call
in
or
sbb
cmpl
call
pop
int
mov
outsb
mov
push
sbb
scas
stos
adc
jp
xchg
pop
adc
lock
sbb
std
lock
enter
xchg
bound
pop
mov
in
lea
adc
lcall
push
rol
add
dec
mov
mov
rclb
movsl
sub
sbb
out
and
cmp
mov
add
pop
xchg
pusha
sub
repz
or
xor
mov
movsb
inc
or
xchg
xor
xchg
arpl
pop
cmp
dec
mov
inc
fwait
addr16
pop
xor
jecxz
adc
mov
loopne
jge
jecxz
mov
add
cld
or
das
arpl
les
mov
jns
out
mov
lods
dec
cmc
push
pop
lcall
aam
lds
in
push
cmpsl
xchg
movswl
xchg
jnp
mov
dec
rcrb
push
jg
add
pusha
mov
sti
fisubl
jl
rcll
int
inc
cltd
pushf
ds
cli
jp
sbb
pop
ret
cmp
fidivrl
movsb
out
ja
and
pop
stos
sbb
push
sbb
test
and
ds
std
adc
into
gs
arpl
add
insb
mov
into
mov
push
add
push
push
mov
mov
mov
xor
add
xor
das
sub
mov
pop
sub
jp
enter
or
push
xchg
lods
sub
in
pop
stos
push
jbe
lret
cmp
movsb
testb
push
adc
inc
xchg
scas
out
and
pop
mov
outsb
ret
and
fsubrs
sub
mov
pop
loop
ljmp
arpl
sbb
fidivl
aaa
push
loop
subl
lods
mulb
lds
stos
mov
out
in
ret
push
jmp
inc
mov
outsl
outsl
movsb
sbb
pop
add
pop
mov
out
repnz
sub
popf
xchg
xchg
mov
dec
test
fcoml
lds
jns
bound
insl
fistl
and
jmp
stos
fs
pop
filds
ficompl
push
add
mov
mov
fcomp
mov
xchg
pop
or
add
add
and
int
pop
cmp
cltd
bound
and
push
loop
xchg
scas
xchg
dec
add
es
xchg
in
sbb
shl
cmp
loope
inc
pop
lods
pop
pop
lods
loope
test
mov
jae
loope
loopne
sub
mov
push
insw
ret
fwait
and
mov
dec
loope
int
repz
sbb
lret
or
jecxz
push
movsb
ficoml
cmp
mov
fcoml
xchg
and
sbb
jp
mov
daa
jecxz
outsl
cmp
jo
add
shlb
xor
pop
jl
adc
push
fcoms
loopne
and
cmp
pop
xor
jl
in
mov
in
ljmp
test
std
and
cmc
test
mov
push
sti
pop
mov
and
dec
outsl
aam
stos
cmp
mov
xlat
mov
lea
xchg
cmp
les
mov
addr16
add
and
adc
pop
fcoml
xlat
jo
mov
adc
push
jmp
popa
ljmp
push
push
mov
into
jns
dec
clc
mov
lods
xchg
lods
xchg
hlt
xchg
aaa
daa
mov
in
fnstenv
pop
or
in
mov
int3
aad
push
repz
out
xchg
inc
out
add
pushf
add
or
push
pop
xchg
sbb
fisubs
mov
cmc
arpl
push
fildll
ret
je
aas
mov
lahf
add
cmp
and
mov
inc
xchg
fwait
aaa
insl
cltd
and
sub
ss
and
les
repnz
xlat
js
xchg
imul
aas
push
push
sub
fsubl
push
cld
sbb
clc
lcall
sbb
dec
mov
lods
jo
cmp
aad
mov
gs
mov
sti
lds
add
inc
lods
loopne
sbb
sub
inc
pusha
pop
push
in
jl
xorl
pop
in
pop
loope
xchg
test
data16
push
pop
xchg
xchg
jo
nop
pop
ret
or
repnz
or
sub
add
adc
pop
sbb
sub
add
popa
test
mov
xor
pop
movsl
or
faddl
les
mov
inc
inc
sbb
sub
ss
cmp
dec
nop
leave
pop
dec
adc
enter
lods
lock
inc
cmp
mov
sbb
sub
adcb
imul
sar
out
ds
pop
inc
xor
popa
mov
int3
mov
loop
loop
xchg
jecxz
fimuls
movsl
xor
popf
xor
jno
push
xchg
lahf
les
daa
jnp
push
int
pop
lret
pop
sub
cmc
popf
arpl
push
stos
add
int
insl
xor
aaa
mov
dec
daa
nop
push
or
push
mov
sbb
jnp
shrl
and
mov
insl
pop
pop
mov
in
xchg
fmulp
inc
mov
mov
mov
cmp
mov
sub
je
stos
into
rcll
or
jmp
xor
fwait
mov
leave
and
jecxz
push
lret
shll
lcall
call
movsb
cmp
push
dec
hlt
push
sbb
stos
je
adc
jb
insb
xor
xchg
mov
xor
sbb
div
ss
sub
add
ret
cmpsl
mov
dec
frstor
xchg
mov
out
mov
pop
cmc
jmp
pop
inc
and
loop
mov
lret
pop
mov
roll
outsl
pop
imul
iret
lods
mov
cmpsl
int3
xchg
movsl
push
mov
inc
jne
movzwl
jns
push
and
cmpsb
jle
cmp
push
pop
lret
cmp
pop
repnz
mov
loop
lods
aam
leave
lods
mov
imul
es
lock
jmp
bnd
pop
pop
xchg
xchg
mov
jp
test
mov
pop
pop
sbb
mov
int3
mov
dec
inc
aaa
xchg
mov
test
insb
fsts
sub
cltd
ds
mov
scas
pop
pop
pop
xchg
aad
movb
fsubrl
xchg
fsubl
stos
call
dec
sub
lods
iret
dec
xor
clc
div
fidivs
stc
fs
aaa
xlat
mov
decl
lds
push
cs
data16
xchg
xchg
add
leave
cmp
loopne
sti
cmpsb
lret
mov
add
push
or
mov
push
arpl
lahf
push
gs
enter
sbb
and
lret
repnz
mov
xchg
jecxz
fcmovnb
in
stos
sbb
sub
xor
push
fbld
cmp
mov
icebp
mov
xlat
icebp
loopne
pop
pop
xchg
repz
call
xor
lds
ss
cmp
movsb
push
std
or
or
movsb
cs
scas
fiaddl
cmpsb
dec
jmp
or
pop
mov
mov
lea
cmp
jns
mov
pop
mov
push
outsb
pop
pop
push
mov
inc
jecxz
mov
gs
and
sub
mov
and
xchg
les
loop
fistpll
jecxz
xlat
stos
pop
jne
rclb
xchg
xchg
jmp
cltd
push
aad
cmpsb
and
pop
mov
es
cmpsl
sub
adc
movl
cmp
outsl
pop
hlt
xchg
mov
scas
mov
push
inc
sbb
sbb
and
and
test
icebp
xor
pop
popf
lret
xor
loop
in
xchg
cmp
pop
inc
aaa
shlb
inc
stos
fwait
push
push
loope
filds
daa
out
shll
popl
xchg
shl
lock
ja,pt
in
dec
movsb
fsubs
cmpsb
mov
jno
jl
pop
cmp
or
mov
aas
jbe
dec
jp
es
cmp
xchg
push
mov
es
mov
cmp
push
pop
inc
flds
loope
idivb
leave
mov
cmp
mov
fisttpll
sbb
lods
adc
and
adc
jae
xchg
lret
mov
rcl
inc
jmp
xor
icebp
and
jp
dec
test
rorb
xchg
stos
mov
stc
mov
call
sbb
dec
jnp
adc
test
or
or
cmpsl
or
pop
hlt
stos
mov
and
and
shlb
dec
mov
pop
push
stos
imul
sbb
stos
pop
test
sub
leave
xor
mov
xor
out
test
frstor
fs
out
jmp
lds
jne
js
ficoml
js
dec
sbb
push
and
xchg
fs
call
push
cmp
add
ds
movsl
cmp
pop
pushf
loopne
or
push
notl
out
mov
cmp
clc
xor
sbbl
es
cmpl
mov
in
and
push
mov
sub
popa
aam
shll
stos
insl
jecxz
jg
shl
pop
xchg
adcl
mov
or
rcl
iret
mov
scas
add
addl
mov
out
lock
mov
stc
push
loope
rcpps
xchg
mov
xchg
nop
aaa
adc
jo
sub
fs
insl
dec
notl
lds
cmp
scas
call
sti
push
mov
mov
sti
dec
addb
test
adc
subl
jle
sub
push
jnp
enter
pop
outsl
shl
adc
nop
hlt
add
cmc
aam
adc
push
jb
jb
int
cmp
jl
dec
add
mov
mov
cli
jnp
dec
scas
push
jge
ja
or
stos
jge
jmp
fs
and
stos
lahf
jg
mov
cmp
xor
shll
addr16
jbe
dec
mov
add
bound
dec
xor
es
mov
xchg
inc
inc
mov
mov
fwait
addr16
and
sub
jge
mov
into
xor
mov
fldpi
jne
adc
and
mov
or
cli
out
cmpsl
test
sub
xchg
test
xchg
cmp
lcall
cmp
push
mov
pop
imul
xchg
jp
pusha
mov
and
pop
fimull
mov
and
add
dec
pop
repz
adcl
fadds
ds
ss
sbb
testl
mov
mov
js
cmp
or
pop
fiaddl
rcrl
add
cmp
dec
call
xlat
call
cld
dec
loop
or
pop
push
inc
and
mov
push
movsl
inc
test
ret
cwtl
jmp
mov
adc
mov
mov
jp
mov
test
and
lock
out
aam
repnz
lret
testb
lret
out
mov
outsl
popa
mov
adc
repnz
cmc
fsubrs
mov
popa
bound
lret
push
lock
xor
subb
cmpsl
stos
mov
mov
out
lods
mov
and
loope
inc
and
lret
mov
outsl
cmp
insl
in
stc
mov
jge
test
repnz
and
lods
sub
xor
cmp
sbb
test
sbb
sub
sub
push
fwait
cs
fisubl
pop
inc
sub
pop
xor
dec
mov
jge
mov
mov
nop
out
daa
aaa
pop
shlb
mov
push
mov
idivl
lahf
outsl
jg
out
dec
movsb
sbb
cmp
mov
lahf
cs
xchg
stos
jmp
jg
sbb
jnp
jbe
out
outsl
lods
cmpsw
inc
cld
sbb
pop
push
xchg
ret
add
inc
mov
scas
mov
nop
iret
jmp
jge
inc
loope
pushf
lods
mov
and
hlt
sub
push
stos
rcrb
mov
mov
iret
ss
pusha
std
cmpsl
mov
inc
mov
mov
xchg
je
daa
or
mov
mov
frstor
in
lret
stc
pop
cmc
jne
adc
sub
mov
movsl
aas
fdivrs
and
add
jl
fadds
outsl
lods
fistl
cmp
add
cmpsb
push
movl
mov
adcl
sbb
bound
mov
arpl
jge
pop
xor
xchg
shrb
adc
mov
dec
sub
adc
and
lods
out
loop
cwtl
stos
mov
and
test
iret
mov
fldt
jmp
das
ficoms
aas
imul
out
scas
fisubs
lds
out
cmc
and
pushw
in
pop
mov
into
adc
mov
sub
push
sub
aas
cmp
ret
mov
leave
movsl
xor
dec
into
mov
mov
sbb
dec
or
dec
pushf
sbb
push
out
int
icebp
outsb
in
out
orb
shlb
xchg
sub
movsl
adcl
fucompp
pop
ja
xchg
popf
push
test
dec
pop
loope
popf
xchg
sbb
cltd
adc
mov
scas
or
mov
aad
sub
jle
jnp
test
scas
xor
cld
test
leave
sbb
xchg
push
and
arpl
pop
push
jecxz
jbe
into
jo
push
xchg
in
cmpsb
cmp
jne
push
ja
fcoml
mov
push
call
loope
scas
je
mov
xor
mov
mov
cltd
push
leave
push
adc
jge
push
add
mov
sbb
jp
cmp
and
jae
jns
ljmp
das
pop
shrb
dec
xlat
jns
sub
cmp
sti
xchg
xchg
cmp
out
add
cmp
lret
sbb
push
repnz
dec
xor
pop
jl
mov
cmp
push
mov
add
or
xor
fisubrs
mov
es
mov
xor
xor
jno
mov
cmp
mov
pop
mov
subl
inc
mov
in
sub
push
mov
mov
cmc
pop
insl
sti
cs
mov
loope
stc
orb
jge
fiaddl
or
jle
and
sub
sub
lea
ljmp
lea
out
into
mov
aam
add
cmpsb
cltd
loopne
sbb
sub
or
dec
mov
cmpl
xchg
ss
repz
lcall
cltd
push
out
test
cmp
sbb
add
stos
icebp
xor
or
push
adc
outsl
ret
inc
cmpb
mov
and
stos
push
cmp
in
sbb
popf
enter
mov
pop
fldl
fdivrs
xor
or
ffree
nop
jae
sahf
xor
add
adc
cwtl
imul
in
test
adcb
aaa
cmpsb
mov
in
scas
push
jle
movsl
xor
mov
push
data16
aad
rclb
jge
popf
cmp
pushf
movb
xlat
rorl
mov
in
mov
shl
mov
out
lea
jle
add
xchg
in
mov
xlat
insl
xor
sarl
out
adc
cmpsl
xchg
xchg
mov
inc
inc
imulb
int
sbb
je
xchg
test
shrb
mov
add
lahf
icebp
xchg
sub
bnd
test
xor
push
jge
cmp
rcll
shll
shl
mov
lock
jge
pushl
leave
push
cmp
clc
out
push
xlat
clc
addl
pop
pop
adc
out
dec
mov
fsubl
scas
cmp
insl
push
jge
adc
push
outsl
outsl
add
pop
pop
ud1
inc
pop
cmc
push
sub
rorl
pop
frstor
mov
jp
cwtl
sbb
mov
dec
aad
cmpsb
les
pop
jl
adc
dec
cltd
ret
mov
xor
stos
mov
inc
pop
adc
mov
cli
insb
cmp
or
jbe
scas
insl
or
je
mov
add
xchg
mov
lahf
xchg
sbb
das
dec
ficoml
ljmp
dec
pop
or
xchg
or
inc
int3
lret
sub
xchg
xlat
in
add
xchg
pop
inc
call
outsb
lahf
scas
outsl
lret
jns
ss
scas
pop
push
cmpsb
ret
test
cmc
cmpsb
bound
dec
mov
jle
stos
cmpb
mov
jns
test
out
dec
scas
adc
cwtl
insl
dec
add
fidivs
mov
sbb
jp
popf
jbe
xchg
mov
aam
mov
iret
in
jae
cli
clc
ljmp
lahf
or
hlt
and
and
dec
or
push
lret
xchg
add
lea
out
xchg
xchg
cmp
mov
adc
test
pop
or
hlt
mov
in
enter
pop
jl
push
fiaddl
pop
mov
xchg
movsl
sub
mov
adc
lods
mov
sahf
sbb
push
jnp
inc
dec
aas
lea
bound
push
xorb
les
xchg
or
push
out
inc
inc
test
cmpl
es
mov
or
mov
aas
xor
sub
push
push
jmp
dec
lea
rcrb
lcall
mov
xor
repz
pop
mov
sub
sar
inc
adc
sti
cld
inc
sbb
mov
stc
push
jb
and
test
cli
mov
repz
pop
jb
mov
fstl
xor
mov
arpl
push
lcall
xor
cmova
jle
jb
fsubl
jmp
fsubr
sub
and
fistl
jne
pop
push
loop
add
push
lcall
or
pop
and
mov
sbb
stos
out
cltd
jns
xchg
les
int3
mov
inc
sub
sbb
xlat
notb
lcall
aam
repz
rcl
adc
loopne
mov
outsl
or
xchg
inc
jb
lcall
insl
movsl
xor
lods
mov
jae
lea
or
push
enter
inc
lcall
pop
xor
push
outsl
je
xor
xlat
js
pop
jns
cli
imul
jg
cmp
push
sub
loop
sbb
inc
out
arpl
mov
out
ret
xor
push
insl
imull
iret
cmp
rcrb
lret
jecxz
insb
xor
xchg
add
sar
outsl
dec
or
cwtl
mov
cmpsb
loope
xlat
sbbl
sahf
into
add
fimull
lods
sbb
fcompl
mov
bound
stos
addr16
push
add
cmp
adc
sub
cmp
lods
jmp
push
cmpsb
call
imul
sub
fwait
lret
jbe
jp
pushf
mov
fdiv
sbb
popf
scas
inc
ss
es
dec
xor
fwait
sbb
xor
lods
pop
outsb
sti
imul
movsb
popf
push
jns
inc
imul
lds
into
xlat
int3
cmc
out
rcrl
les
into
xchg
loop
das
pop
push
movsb
cmp
iret
adc
sti
scas
cli
lahf
lock
das
incl
sarl
negl
push
jbe
adc
mov
lea
fxch
cmp
cmpl
repz
icebp
mov
enter
ret
mov
sbb
mov
xchg
push
shlb
fnstcw
std
cmp
into
add
xchg
xchg
and
mov
jle
je
sbb
lret
pop
jns
add
lds
fldcw
and
mov
shr
pop
repz
scas
mov
push
push
test
xchg
test
in
dec
cmpsb
mov
insl
jne
nop
lods
add
test
int3
and
lea
fbld
jno
into
add
push
mov
stos
test
hlt
es
lcall
clc
ret
test
and
push
push
pop
mov
popf
mov
mov
cmp
xchg
add
mov
push
push
mov
cmp
jb
or
cmc
jae
xlat
push
outsl
jl
mov
aas
dec
aas
pop
jle
pop
jnp
aas
in
movsb
inc
cltd
rclb
incb
cmp
or
sarl
lds
idivl
cmp
loop
cld
pop
loope
push
es
aam
mov
popf
shlb
aas
ljmp
loop
movsl
icebp
xlat
cwtl
aad
ret
das
pop
or
insb
nop
dec
mov
inc
fld
test
jns
jns
sbb
mov
xchg
cmp
repz
lock
pop
shlb
cld
push
push
inc
mov
mov
cmp
dec
inc
int
cmp
out
daa
subl
pop
dec
arpl
out
add
repnz
fidivs
fidivs
or
push
test
push
inc
adc
aam
inc
jae
jae
sbbl
and
fwait
dec
sub
imul
imull
fbld
clc
push
test
or
jo
test
aaa
vpaddsw
sti
mov
pop
xchg
test
jbe
sbb
sub
stos
mov
out
rcr
insl
fsubl
rorl
push
andl
fldt
repnz
xchg
push
jae
jecxz
push
fsubr
pop
int
jl
inc
stos
sub
cmc
xchg
sub
sbb
js
fs
dec
push
jns
sbb
sub
or
mov
or
data16
out
jo
cmpsl
movsl
addr16
mov
stos
cmp
call
lret
cmp
mov
pop
stos
mov
pop
ret
add
cmpsl
cwtl
roll
test
in
js
shr
cli
xor
xchg
pop
xchg
lods
or
adc
fists
and
push
jl
cmpb
cmp
pop
mov
pop
ljmp
cltd
sub
mov
es
inc
das
push
add
pop
clc
push
and
xchg
out
jp
sub
bound
js
push
adc
js
sub
sub
add
pop
jle
int
outsl
lds
enter
or
jecxz
cmc
mov
shll
sbb
sub
xchg
call
clc
pop
sub
rep
data16
jb
mov
mov
adc
xchg
xchg
arpl
jb
jno
inc
cmp
inc
and
sub
ret
push
dec
xchg
push
lds
push
add
jbe
test
mov
dec
adc
dec
insl
pop
cmc
sbb
sbb
pop
dec
adc
daa
xchg
xchg
stos
fadds
push
xor
sub
lret
ret
cmp
shll
sbb
out
pop
inc
ds
ja
movsb
sub
mov
pop
sbb
mov
out
test
fnstcw
mov
inc
mov
jge
push
jecxz
and
add
adc
pop
or
lock
xor
pop
lahf
aad
fcoms
stos
sti
push
cmp
es
jb
lahf
pop
or
push
adc
arpl
ror
rorb
std
pop
pop
and
fstpt
push
jmp
xor
inc
mov
sub
pop
lret
int3
dec
adc
arpl
and
aad
sbb
jns
inc
jl
push
ret
insb
jge
iret
xchg
std
xor
lret
lea
or
xlat
mov
repz
push
es
xchg
roll
cmp
test
push
xchg
out
lds
fwait
xor
add
pusha
cmp
testl
mov
push
psrld
jb
push
sbb
inc
dec
scas
xor
adc
cld
call
bnd
inc
xchg
lea
xchg
push
mov
rorl
cli
arpl
mov
mov
xor
dec
xchg
fldt
dec
push
or
mov
pop
mov
sbb
xor
sbb
jmp
out
call
xor
inc
push
inc
mov
test
mov
sahf
xchg
mov
xor
fs
xor
sbb
xor
imul
cld
inc
and
inc
mov
insl
pop
jo
sub
add
clc
and
cmp
aaa
das
inc
push
test
cmp
and
les
push
fdiv
ljmp
test
push
xorl
loop
mov
movsl
out
mov
or
lock
out
das
ss
icebp
jle
mov
mov
test
push
xchg
push
out
cmp
jp
sbbl
sub
je
sti
enter
jno
repnz
push
pop
and
rolb
pinsrw
jp
nop
repnz
sub
fisubrs
lret
insl
test
cmp
frstor
aam
loope
xchg
ljmp
or
outsb
xchg
movsl
lods
cmp
pop
scas
popf
mov
dec
xor
pushf
jmp
lods
mov
jmp
xchg
mov
jecxz
mov
and
or
in
test
xchg
fnstsw
lret
dec
inc
pop
pop
iret
mulb
or
out
or
mov
rcrl
dec
scas
xchg
dec
lahf
pushf
cwtl
fnsave
cmc
pop
fwait
push
inc
in
cmp
push
xchg
mov
add
loope
enter
xchg
dec
imul
imul
ja
repnz
and
xlat
loop
add
jae
push
std
adc
and
mov
jno
pop
inc
push
add
dec
pushf
test
int
dec
outsl
shl
loope
out
pop
and
in
ljmp
imul
xchg
insl
sub
cmp
stc
add
and
in
dec
dec
inc
inc
dec
mov
dec
pop
inc
addr16
cmp
mov
or
mov
cwtl
mov
cmp
adc
cmc
cli
hlt
loope
lahf
cmp
push
cmp
mov
xchg
sub
lds
mov
and
add
push
mov
push
push
ret
into
aad
insb
fcom
inc
popf
cmpsl
icebp
data16
scas
sub
bound
lahf
insb
out
mov
insb
pop
or
les
pop
push
in
or
bound
xor
lret
adc
cmc
cmpsl
fcompl
imul
mov
or
lcall
dec
ss
sarl
nop
and
sbb
inc
test
enter
adcl
movsl
shll
xchg
xor
xchg
orl
push
hlt
scas
jmp
gs
dec
or
and
dec
jecxz
dec
pushf
inc
cmp
stos
jg
adc
test
bswap
inc
stos
js
dec
lahf
hlt
xor
adc
lock
idivb
push
dec
lret
jae
jecxz
xorb
lahf
cmp
inc
inc
sbb
ficompl
inc
lret
push
int
sbb
sbbb
test
nop
icebp
ljmp
pop
int
xchg
sbb
fisubs
aaa
sbb
dec
aas
and
push
insb
jge
in
lahf
sub
inc
sub
cmp
pop
dec
out
sbb
jno
andb
lods
movsl
cmovbe
into
pushf
and
mov
outsl
aaa
mov
dec
jmp
insl
xchg
incb
mov
pushf
test
repnz
fcmovnbe
fstl
popf
dec
neg
pop
mov
cmp
call
inc
sub
daa
aaa
leave
pusha
jb
inc
leave
addb
jae
mov
mov
jp
enter
push
out
insb
movsl
xlat
shl
xor
mov
lahf
add
and
bound
add
adcb
je
in
push
push
scas
adc
mov
hlt
mov
mov
cs
lods
cmp
inc
lcall
inc
mov
fistl
pop
dec
jecxz
loopne
loopne
push
test
add
push
mov
pop
cmp
xchg
rclb
icebp
or
xor
push
fcmovnb
sar
sbb
shll
xchg
sbb
dec
lcall
jb
mov
push
cmp
out
mov
or
add
out
int3
fistps
cmp
sbb
xor
cmp
lret
movsl
xor
outsl
add
jbe
cmp
out
mov
push
mov
mov
push
test
cmp
pop
jecxz
lahf
xchg
lahf
js
xchg
fimull
xchg
test
lret
insl
sub
cmp
es
rcrl
imul
mov
xchg
jg
jnp
xor
test
xor
mov
inc
xor
and
mov
sti
outsl
cmp
jo
not
jle
adc
shrb
je
and
sti
mov
popa
or
jbe
pop
iret
js
xchg
les
jp
cmp
lret
xor
jno
adc
lahf
lods
into
in
mov
insl
jb
mov
cmp
add
outsl
js
repz
ret
pop
fwait
inc
sub
fcomp
cmp
lret
loope
push
repz
mov
inc
jo
adc
mov
insb
stc
lods
test
mov
scas
pop
push
or
and
mov
adc
clc
popf
add
aad
push
movsl
pop
xchg
lock
cld
cs
xlat
inc
shl
fucomi
mov
lods
insl
jmp
sbb
aad
dec
add
sub
xor
enter
push
and
jnp
dec
andb
mov
push
call
stc
xor
loop
pop
popf
in
fwait
push
jle
cmc
pop
dec
adc
pusha
enter
xchg
push
jne
negl
add
xlat
int
sub
pusha
sti
fldl
dec
push
and
cli
push
push
mov
out
dec
lcall
xor
or
or
adc
aaa
xor
cmp
mov
mov
dec
lea
pop
jp
lods
outsl
fcmovb
addb
inc
mov
dec
push
jnp
ror
mov
and
jge
add
in
or
xchg
outsl
push
dec
popf
popf
push
lcall
ja
test
ss
incl
or
rcrb
cwtl
lcall
ret
add
gs
or
mov
sbb
pop
scas
mov
jle
loope
das
mov
hlt
leave
lea
adc
dec
cld
lods
aaa
mov
rep
pop
test
sti
fcompp
clc
dec
xchg
mov
loopnew
fidivs
xor
cmp
dec
cmp
inc
sub
or
fs
inc
ljmp
jp
inc
fstl
adc
mov
fldt
jl
xchg
ss
mov
pop
jno
xor
clc
jbe
aaa
fldenv
ret
mov
jle
sbb
dec
mov
popa
adc
int
test
out
add
icebp
roll
or
enter
cmp
shll
xor
xchg
lret
pop
dec
dec
inc
cmpsl
loop
jae
mov
mov
xchg
mov
sarl
mov
in
enter
subl
insl
mov
mov
inc
test
loop
or
into
mov
and
sbb
mov
je
xchg
mov
pop
jecxz
mov
nop
push
fucom
into
imul
adc
or
pop
out
jnp
pop
dec
mov
popf
mov
fidivl
mov
jb
add
popa
sub
mov
outsb
pop
adc
je
lahf
and
dec
cld
outsl
jp
or
cmp
push
psubd
inc
pushf
fisttpl
or
inc
xchg
aad
call
push
sti
and
and
push
test
int3
stos
push
out
mov
shlb
test
cs
jbe
rcrb
mov
inc
inc
pop
pop
icebp
xlat
enter
orl
loop
aaa
repz
lods
sbb
add
lret
gs
je
lock
mov
rorb
and
mov
lods
jb
popf
xchg
aam
hlt
dec
or
pop
jb
adc
fwait
jb
pop
or
xchg
mov
ret
cld
inc
sub
test
pop
jp
adc
test
mov
mov
jmp
xor
sbb
mov
sbb
pshufw
cmp
ss
jle
loopne
les
cltd
xor
or
sub
sub
pop
jo
outsb
mov
mov
ss
mov
aas
shlb
jne
and
ror
ds
adc
sub
cmpsb
xchg
xlat
push
bound
push
repz
xchg
cmpsb
fcmovu
movsl
add
repz
sbb
cmpb
sub
lcall
imul
jnp
in
out
frstor
lds
loop
add
clc
inc
push
fsubrs
cmp
ja
jp
jnp
dec
mov
cmp
mov
adc
subl
xor
ss
scas
inc
pushf
and
hlt
pop
dec
mov
mov
mov
inc
cli
pop
lods
scas
xorb
scas
mov
clc
mov
xchg
out
lea
sbb
icebp
mov
jno
lret
cmpsl
sbb
jbe
push
clc
adc
or
push
pop
xor
mov
mov
push
inc
outsl
popa
out
daa
test
sub
lcall
sarl
mov
mov
in
icebp
sarb
shll
rolb
mov
into
popl
jge
fldenv
push
sbb
jo
mov
jbe
or
cmp
sub
mov
mov
pop
sub
loop
xchg
push
out
inc
shlb
adc
jns
repz
jg
dec
clc
mov
outsl
xor
sbb
int
fcoml
cli
out
clc
sub
and
dec
xchg
dec
sub
xor
xor
mov
rol
mov
mov
pop
ds
pushf
adc
jmp
ret
mov
sahf
repnz
mov
repnz
stos
mov
add
cmp
in
mov
loope
dec
xor
fidivrl
cmp
jecxz
pop
test
dec
pop
push
mov
pop
push
xor
dec
pop
xchg
hlt
repz
and
pop
mov
xchg
ret
sahf
jge
mov
loope
xchg
push
inc
popa
inc
pushf
pop
inc
lods
or
in
leave
cmp
xchg
or
add
sarb
dec
das
sub
mov
in
lea
sub
mov
mov
inc
adc
inc
cmp
pop
jg
mov
fisttpl
pop
fcmovbe
jecxz
or
in
push
push
push
mov
lcall
mov
jg
push
mov
mov
jmp
stos
sbb
adc
jmp
mov
or
xorl
xor
ja
aaa
cwtl
mov
xchg
cltd
negl
cmp
int3
mov
fiadds
push
test
test
jb
sarl
stos
and
adc
lahf
sbb
cmp
loop
push
stos
pop
push
sahf
sar
fiadds
addb
or
hlt
inc
sub
lret
sti
cmp
out
jo
insb
add
xchg
shl
in
and
jmp
pop
xchg
mov
pop
xchg
test
and
test
inc
in
mov
daa
jnp
movsb
out
sbb
test
push
fistpll
or
int
xor
and
loope
rcrb
jmp
jp
sarb
ss
inc
pop
daa
mov
xchg
and
xchg
and
in
je
loop
lock
test
push
ljmp
pop
fnstsw
dec
push
jmp
cltd
inc
mov
lods
frstor
pop
ja
pop
cmp
call
mov
mov
jno
mov
adc
sbb
mov
and
sti
xchg
loopne
mov
movsl
cmp
enter
sbb
pop
insb
dec
cmp
shlb
test
je
iret
in
mov
clc
or
testl
adc
and
out
and
or
jmp
dec
mov
mov
dec
fsubrl
lcall
cwtl
sub
into
xchg
and
aas
sahf
aam
in
mov
movsb
ss
lock
fldcw
in
std
les
mov
cmpsb
adcl
paddq
pop
mov
out
lahf
nop
jle
cmpsl
mov
fisttps
lret
mov
mov
pop
popl
add
aad
jg
dec
jmp
inc
mov
mov
pushf
jmp
fiadds
push
xor
adc
xchg
xchg
cmc
push
xchg
xchg
or
out
rclb
push
fwait
imul
pop
stc
movsb
mov
xchg
sub
rcrb
mov
cmp
cmp
pop
popf
or
inc
cli
mov
hlt
mov
and
dec
add
popf
sub
popf
xchg
xor
es
out
xlat
jns
std
js
bound
cmp
add
mov
js
push
pusha
mov
add
xchg
repnz
gs
mov
fistl
mov
in
rcll
dec
lcall
sbb
jge
and
or
incb
push
push
out
mov
rolb
data16
and
cmp
jge
cmp
xorb
xchg
dec
dec
xchg
push
lcall
dec
fwait
out
sbb
outsl
mov
lret
icebp
scas
out
xor
adc
add
sub
cltd
inc
xchg
or
test
in
mov
gs
pop
lret
int
scas
mov
fsubs
popf
loope
repnz
ss
mov
and
xor
and
push
xchg
cmp
mov
addr16
cltd
cli
pop
mov
xor
xor
lods
daa
call
inc
fwait
cmp
push
popa
lahf
call
adcl
cmp
sbb
push
push
lods
sub
sbb
int3
mov
addr16
xchg
inc
outsl
test
fildl
ja
add
les
mov
cs
nop
lret
fcoms
ljmp
inc
push
cwtl
add
inc
push
rcl
sub
adc
roll
inc
cld
push
sub
xlat
jle
dec
int3
in
pminsw
ret
mov
dec
rcrb
sub
xchg
cs
cs
fistpll
test
dec
sar
repnz
in
sub
pop
pop
mov
add
jb
and
dec
fidivrs
cltd
js
push
lcall
clc
sub
vmovntdq
test
shr
insl
dec
int3
push
das
cmp
daa
pop
push
bound
int
mov
jmp
mov
sbb
jecxz
jle
lods
movaps
dec
xchg
or
pusha
xchg
inc
cmp
mov
repz
into
push
leave
mov
stos
sbb
jno
in
gs
test
sbb
add
push
iret
and
pop
cli
cwtl
shlb
dec
mov
or
push
fucomp
mov
in
sub
dec
xchg
icebp
sarl
jae
int
xchg
inc
mov
cmpsb
loopne
pop
jge
push
jo
stc
cmpsb
ret
pop
mov
dec
insb
aad
jl
mov
xchg
lods
push
xlat
or
sti
push
xor
in
or
xchg
xchg
jge
test
outsl
lds
add
mov
sub
xchg
in
aad
mov
push
mov
or
dec
popf
cmp
cmp
jmp
repnz
jns
out
pop
cwtl
dec
sub
xor
aad
xor
mov
push
ss
cmp
and
call
xor
jb
sbb
jns
ss
sbbb
leave
sbb
leave
add
push
mov
adc
or
or
jbe
sbb
lods
cmp
arpl
mov
push
xchg
ja
mov
stc
lea
cmpsb
lret
sub
jns
in
pop
mov
and
fsubr
or
jno
push
mov
xchg
mov
hlt
mov
inc
adc
jmp
int
stc
jbe
subl
ja
xlat
and
out
jnp
fistpll
adc
mov
clc
call
jl
xor
fninit
mov
xlat
sbb
sbbl
popf
outsl
ds
add
lret
aad
in
add
lods
int3
cmc
mov
or
stos
mov
addr16
jle
and
testl
push
xchg
repnz
inc
xor
xchg
xor
ret
rcr
rcll
sub
xchg
or
xchg
xchg
and
lds
adc
or
adc
outsl
sub
jecxz
pop
ret
dec
lods
jb
pop
fcoms
mov
mov
mov
sub
jmp
push
xchg
mov
push
cmp
pop
jns
jecxz
jmp
jno
mov
fsubs
neg
sub
pop
push
test
pop
xor
les
shl
add
push
stos
cld
aad
into
inc
sbb
pop
pop
pop
inc
aas
or
test
mov
jl
and
jmp
int3
mov
aad
sub
popf
sbb
mov
cmp
mov
and
lret
into
fcmovb
sbb
xchg
pop
scas
mov
sub
inc
pushf
jmp
mov
xchg
pushf
push
ret
fldt
jb
push
pop
je
push
fwait
rcll
add
push
sbb
sbb
jnp
jl
out
mov
sub
dec
addr16
cmc
inc
lds
sub
push
popf
in
lods
or
cmpsl
pop
int3
cmp
cmp
sub
adc
testb
xor
fimull
mov
jecxz
ja
insb
cli
mov
imul
incb
pop
sbb
mov
mov
dec
pop
out
xchg
pop
sub
dec
sub
rolb
sub
push
adc
pop
sti
mov
rcrb
in
and
stc
add
cmp
imul
lods
int
cmp
inc
inc
jb
cli
inc
inc
mov
xchg
iret
lea
in
stos
push
aas
jmp
fidivl
jge
ror
lret
out
add
adc
lods
xchg
mov
sub
fcomp
mov
fidivrl
mov
lcall
mov
and
and
into
insl
dec
adc
int
inc
sub
fwait
movsb
scas
fsubs
loopne
into
dec
movb
mov
push
dec
and
pop
adc
stos
cmpsb
adc
fcoms
xchg
inc
add
mov
lds
lea
jne
push
or
push
xchg
cmp
sbb
pop
adc
adc
sub
stc
or
fwait
mov
out
mov
imul
add
test
inc
and
maxps
mov
mov
xorb
sub
dec
add
xchg
sbb
mov
shll
inc
adc
mov
push
sub
jle
cmp
xor
fs
pushf
cld
xchg
or
mov
pusha
mov
mov
in
loopne
xlat
mov
into
push
aad
push
push
push
sbb
sub
imul
out
mov
daa
mov
scas
cmpsl
sub
xlat
add
jmp
inc
repnz
sub
jbe
cmp
rorb
and
mov
inc
pop
int
iret
cmpsb
nop
enter
mov
cld
imul
push
fdivrl
push
mov
dec
mov
imul
sub
cmpl
arpl
mov
xor
int
push
push
mov
pop
dec
fistps
popa
inc
and
lahf
sarb
mov
aaa
stc
pop
jge
mov
xor
cmpsl
adc
mov
out
xchg
cmp
lahf
mov
and
add
out
popf
testl
inc
daa
outsl
lods
jns
pusha
push
xchg
movsl
push
call
int3
jmp
std
xchg
fbstp
jne
ljmp
cmp
dec
fwait
jnp
iret
in
cmpsb
inc
mov
mov
mov
xor
stos
insb
movsl
adc
divb
jmp
icebp
dec
mov
pop
dec
test
mov
jl
pushf
xchg
imul
sbb
lret
aad
xor
adcl
lret
lods
cmpb
xchg
lret
ds
pop
add
leave
movsb
int
leave
push
jnp
pop
negl
call
insl
loope
xor
mov
scas
inc
and
imul
lret
repnz
std
fsubp
jle
ss
adc
fisttpl
ss
daa
xchg
int3
mov
mov
std
add
fwait
sub
dec
imul
sahf
hlt
mov
and
aaa
test
xchg
inc
xor
pop
xor
inc
and
loope
push
pop
pusha
jne
mov
outsl
and
andl
sti
nop
cmpsb
aad
mov
xchg
sub
in
pusha
xlat
insl
sbb
sbb
jnp
mov
or
jnp
mov
jg
pushf
test
imul
sub
test
ja
loopne
aam
mov
jae
movsl
mov
mov
sbb
push
mov
sti
mov
pop
jge
mov
lea
or
rcrl
fisttpl
add
xchg
or
sbb
insl
adc
mov
imul
lods
mov
dec
aaa
nop
pop
js
movsb
pop
scas
pusha
js
push
scas
shll
int3
incl
int3
pop
out
push
cwtl
mov
dec
cmp
shlb
mov
and
push
ficomps
stos
enter
enter
ss
pop
ror
fcomp
push
inc
gs
add
mov
sti
xlat
jmp
loopne
stos
fcmovu
leave
xor
mov
mov
inc
pop
and
clc
mov
jp
mov
int
adc
jb
xlat
sbb
dec
mov
and
fildl
js
inc
mov
imul
sbb
scas
test
shll
adc
sbb
and
gs
xchg
jnp
mov
and
sbb
jle
icebp
sub
mov
lods
jp
es
lahf
push
es
iret
mov
adc
pop
jne
dec
jb
mov
cmp
mov
sti
jecxz
pop
xor
pop
bound
xorl
ljmp
call
ds
add
xchg
pop
inc
mov
xchg
daa
test
test
jle
mov
mov
pop
pop
shll
sbb
mov
jae
les
inc
call
testb
xor
xor
bnd
ss
xchg
inc
cmp
pop
data16
scas
xor
pop
hlt
mov
stc
mov
jle
add
fsub
adc
jl
inc
repz
and
jbe
mov
jnp
mov
insl
insl
pop
xchg
sbb
std
loope
mov
loope
sbb
jne
sbb
hlt
sahf
sub
cwtl
push
mov
aaa
shrl
jge
stos
jb
jp
inc
pop
xchg
add
out
jns
stos
out
popf
xlat
mov
adc
jl
inc
inc
dec
lock
cmp
lods
lret
popf
add
xchg
inc
addr16
jns
mov
jo
les
jg
ja
out
xor
sub
sahf
shl
movsb
sbb
xchg
add
adc
xchg
lcall
xor
out
jae
scas
ja
out
jbe
xchg
xchg
addb
cmc
lock
call
clc
sbb
or
daa
bnd
fsubr
outsb
xor
cli
mov
jecxz
inc
and
fidivrl
mov
cmp
jge
inc
clc
adc
push
ljmp
pop
ljmp
loope
sbb
mulps
iret
mov
test
mov
push
mov
incl
popa
popf
std
daa
inc
inc
sahf
test
sub
jne
popa
sbb
inc
jp
pop
mov
lcall
mov
sbb
decb
es
jae
ss
out
push
testl
xor
out
lret
mov
incb
dec
mov
fldcw
xchg
lods
cmp
xchg
cmp
fiadds
pop
push
inc
pop
fisubl
pop
push
rorb
push
adc
out
jb
ja
in
rorl
pop
imul
adc
insl
test
fsubrs
jnp
dec
xchg
and
dec
mov
xchg
stos
push
xchg
xor
mov
loope
sbb
ficompl
cli
mov
and
or
fidivrs
cmp
dec
pop
stc
dec
fucom
mov
dec
jmp
ret
jns
xchg
imul
out
shlb
testl
aaa
lret
call
lret
push
in
pushf
stos
lret
jl
cld
cmp
iret
or
cmp
dec
lds
pushf
inc
or
push
addb
ror
push
ret
pop
sub
sub
data16
and
mov
sub
xchg
sub
pop
movsb
out
aas
mov
push
sub
jns
lahf
dec
icebp
and
xchg
bnd
add
stc
jl
push
sahf
push
adc
mov
sbb
push
imul
add
xchg
pop
jg
push
pop
subb
jmp
or
jg
shll
jecxz
xchg
mov
je
ljmp
dec
sub
dec
push
xchg
and
jbe
xor
sbb
mov
sub
xchg
inc
fwait
sub
mov
roll
es
sub
jmp
mov
push
add
cmp
aad
data16
aas
into
lcall
push
cmpsb
stos
xor
lea
xchg
or
jb
push
adc
cmp
xchg
jg
and
dec
movl
adc
mov
mov
push
pop
lods
incb
mov
gs
xchg
stos
dec
iret
inc
dec
fsts
es
es
movsb
mov
test
out
ja
sti
mov
ljmp
imul
ret
mov
adc
pop
dec
mov
inc
pop
int
pushf
adc
xor
cli
adc
jp,pn
or
xchg
and
das
fs
pop
sbb
test
fiadds
mov
pop
add
or
sub
jle
mul
push
pushf
xchg
jo
pop
popf
in
sbbb
or
lods
mov
int
ja
pop
iret
bound
aaa
ljmp
aad
jle
cmpsb
fidivl
inc
enter
adc
ret
fs
lods
xor
out
sbb
push
sub
adc
adc
repnz
popf
jnp
popa
je
clc
xchg
fdivs
loop
add
shrb
pop
shlb
addr16
jecxz
xchg
ss
lret
hlt
out
sarb
ror
xchg
jmp
das
xor
lds
xchg
jp
xchg
aad
movsl
push
test
sub
mov
in
shrl
lcall
sub
fnstenv
clc
ret
mov
loope
pushf
add
scas
inc
popf
repz
popa
xchg
dec
add
sub
mov
add
dec
cmp
mov
cmp
push
btc
addb
add
movsb
cmc
cmp
int
sub
outsl
adc
pusha
aam
enter
xor
xor
push
or
aaa
sti
mov
out
stc
das
aas
mov
movsl
int
orb
aam
cmp
out
ret
mov
ss
lret
lcall
int
sti
push
movsb
pop
out
icebp
xchg
data16
cmpb
out
sbb
sub
movsb
mov
mov
cwtl
pop
xor
lea
xchg
mov
lret
sbb
cmc
inc
ret
cwtl
and
sbb
sub
adc
xor
fdiv
stos
fcmovnbe
scas
out
jle
fdivs
xor
dec
loop
adcl
jmp
or
inc
pop
fcoml
ffree
jae
pop
push
scas
subb
lret
cli
or
icebp
pop
jle
mov
ficoms
shlb
pop
popa
sub
push
dec
push
inc
idivb
sar
jae
and
ss
pop
adc
bound
fwait
push
or
jnp
adc
lods
mov
add
loope
out
adc
inc
ljmp
adc
push
jb
fistl
daa
lods
outsb
push
mov
and
sub
pop
sbb
lret
dec
test
scas
xorb
into
ret
pop
dec
lret
and
jge
es
gs
jge
fmull
push
jg
bound
jae
cs
cmp
add
inc
iret
mov
test
lahf
imul
lock
fstl
or
dec
lahf
xchg
test
mov
mov
imul
add
icebp
out
pusha
jns
mov
add
inc
sub
adc
inc
sbb
push
loop
or
xor
lds
ja
pop
mov
loop
or
ret
nopl
cmp
in
inc
scas
popf
add
and
lahf
incl
subb
sbb
xor
dec
mov
ljmp
fistpl
out
push
aam
ret
add
pusha
jp
pop
jecxz
dec
mov
dec
inc
inc
lret
cmp
arpl
out
and
lret
aad
push
cmp
pop
xchg
sub
mov
enter
sti
je
push
or
or
push
scas
xor
iret
stos
lahf
in
pop
mov
mov
add
call
jno
mov
cmp
stos
cli
addr16
mov
pop
push
popa
lea
or
shr
add
addl
adc
mov
cmpsl
sub
xor
dec
lea
pop
cmp
cmp
int
dec
jne
clc
push
mov
lds
sub
xchg
shrl
cld
push
rorl
scas
xchg
cmpb
mov
andb
jg
sub
xchg
xor
insl
cmp
xchg
dec
mov
cli
jbe
add
jbe
jb
addb
or
int
loop
fwait
inc
pushf
push
mov
or
je
push
xchg
out
icebp
sub
mov
sarb
mov
imul
sbb
notb
or
repnz
xchg
lea
test
in
add
inc
ds
inc
outsl
sahf
call
out
inc
stos
sti
dec
fildll
sbb
ret
ja
xchg
sub
push
mov
jns
jg
scas
jge
jno
je
scas
loope
jne
jecxz
pop
adc
xchg
ja
mov
shrl
inc
rolb
dec
push
inc
insl
hlt
xchg
cs
mov
inc
pusha
fisubrl
movsb
and
xor
rol
lret
stc
xchg
movsl
jb
cltd
adc
adc
cltd
and
cmpsb
int
inc
in
mov
rcll
fldenv
hlt
into
or
sarl
imul
in
xchg
dec
pop
jle
or
out
ret
pop
cmc
xchg
jbe
jl
and
cltd
inc
mov
sti
in
pop
dec
xor
in
stos
jle
mov
aam
inc
addr16
in
test
cmp
call
and
mov
xchg
hlt
scas
sarb
int3
shl
pop
stc
xor
addl
hlt
mov
mov
sub
scas
jecxz
add
out
stos
fs
dec
jl
jb
out
test
xor
scas
mov
inc
mov
xchg
fnstcw
rcr
outsl
sti
jmp
cmpl
or
cmp
push
repnz
cmp
xor
mov
cmp
add
adc
out
lds
je
cmpsb
add
pop
daa
rcrl
pop
push
stos
das
sub
outsb
mov
pop
imul
dec
push
out
rcrb
jecxz
dec
mov
jno
mov
test
mov
xor
and
push
pusha
es
mov
cli
xlat
xchg
int
jns
fcomps
mov
lret
and
add
pusha
push
pop
xor
or
cmp
addr16
call
sahf
std
aas
dec
loope
test
xchg
push
add
xor
xchg
adc
jcxz
mov
add
sbb
xlat
sub
pop
loopne
ja
stos
sbb
jae
jle
push
add
dec
pop
out
pop
rorb
rcrb
jecxz
cmp
and
dec
test
movsl
mov
cmpsl
xor
rcr
xchg
sbb
bound
mov
faddl
fsts
inc
mov
ret
push
hlt
and
adc
fidivs
test
pop
pop
stos
mov
xor
and
cli
or
jle
mov
stc
cmpsb
push
cmpsb
test
mov
adc
stos
lcall
scas
mov
int
femms
dec
mov
jmp
jle
addr16
mov
in
xor
sar
ss
cmp
jg
jmp
outsb
shll
mov
je
jge
loope
jmp
ret
adc
xchg
sbb
lds
add
lock
cmp
add
pop
pop
sarl
push
cld
push
pop
sahf
mov
xchg
xchg
xor
cld
aad
and
insl
and
push
jp
rorb
sub
pop
fs
adc
call
movsb
mov
mov
mov
or
xchg
aam
adc
xchg
cmpsb
lea
xor
jno
cli
insl
mov
pop
test
xchg
fstps
push
jmp
dec
jg
stc
jno
push
adc
pop
jecxz
insl
cmpsb
std
aam
loop
in
cli
push
aas
jnp
mov
loop
inc
sub
test
lret
rcll
mov
jb
bound
repz
dec
fbstp
sub
cltd
leave
mov
clc
rolb
push
fsubrl
pop
inc
call
mov
ss
push
repnz
mov
cs
and
bound
ss
shll
rorb
cmp
inc
pop
insb
adc
push
push
xor
cltd
or
sub
fistl
xor
pop
xchg
sbb
mov
lods
stc
loopw
dec
or
das
das
xor
fiadds
loop
pop
lock
call
xchg
out
pop
or
dec
mov
roll
pop
sbb
outsb
mov
das
jle
push
add
adc
mov
pop
adc
ss
shrl
fcomip
pushf
jno
cmp
mov
je
ja
add
lods
and
mov
inc
aam
mov
adc
inc
clc
xor
push
cltd
fisubrs
inc
or
ret
inc
cs
je
add
adc
mov
sbbb
lret
push
pop
mov
pop
rcrb
and
mov
imul
push
aaa
add
jbe
jle
fwait
mov
sub
ljmp
rorl
sub
adc
dec
stos
or
cmp
loopne
push
or
inc
daa
rcll
push
orl
xchg
frndint
not
outsb
dec
dec
push
cmpsb
out
out
sbb
mov
adc
rcr
int
in
inc
aad
imul
sahf
dec
push
inc
jmp
lea
dec
lock
lret
fwait
ds
rcl
push
push
sub
or
es
sarl
dec
insl
and
je
jle
ret
and
jae
mov
rorl
loop
jb
inc
mov
jle
pop
fildl
out
cltd
mov
out
int3
je
in
jbe
sahf
jecxz
dec
push
mov
mov
pop
lcall
dec
cmpsl
mov
out
cmpsl
addr16
or
int3
ja
cwtl
arpl
dec
scas
and
cmp
push
xchg
mov
xchg
xchg
cmp
ss
jp
lods
push
rcll
loope
arpl
mov
mov
mov
movsb
inc
mov
sbb
insl
dec
in
andb
or
cmp
jns
std
or
shlb
fidivrl
jl
push
adc
int
pop
mov
cs
pushl
movsb
xchg
je
xchg
mov
icebp
lock
mov
divl
inc
sbb
rolb
ja
xor
xor
inc
pop
xchg
jae
or
jo
cwtl
fadd
mov
mul
lahf
data16
aas
sbb
push
popf
xchg
xor
add
mov
clc
sbb
lock
sbb
sbb
mov
aas
lock
es
jg
sbb
mov
outsb
mov
sbb
clc
sbb
mov
shrb
mov
bound
pop
pusha
inc
int
mov
mov
and
pop
sbb
or
cwtl
dec
in
mov
jnp
ds
int3
inc
mov
mov
fmul
adc
mov
sahf
mov
stos
xor
sahf
stos
in
ja
and
mov
mov
xor
push
push
arpl
stos
sbbl
std
popl
add
dec
out
fdivp
pop
movsl
pushf
jne
push
lret
mov
sbb
out
mov
mov
pop
int
dec
sahf
cmp
or
dec
ljmp
mov
pusha
mov
xor
jb
dec
add
xchg
es
mov
enter
dec
insb
xchg
js
sub
add
or
hlt
inc
cmpb
inc
loope
loop
in
xor
mov
mov
xchg
ficomps
cmp
lahf
nop
daa
xlat
stos
xchg
mov
jge
xchg
pop
lcall
sub
scas
mov
mov
scas
mov
dec
cwtl
pop
jge
sbb
in
pop
popf
xchg
call
sbb
xchg
dec
jns
xor
test
sub
inc
clc
ror
jne
add
push
push
jg
xchg
lret
inc
add
xchg
mov
call
mov
jo
jl
ret
repz
scas
or
enter
jmp
jg
icebp
test
lcall
pop
and
inc
divb
addb
and
add
sarb
jo
jecxz
mov
sub
ret
add
test
dec
sub
and
push
cmp
dec
lcall
xorb
cmc
cmp
rolb
jle
push
dec
add
int3
addr16
pop
cld
jmp
cs
test
xchg
adcl
xor
out
loopne
mov
stc
int
jl
jnp
xchg
mov
xor
add
inc
fdivrs
sbb
mov
sbb
popa
inc
aad
mov
jmp
xchg
inc
cmp
test
xchg
and
jg
mov
sub
pop
std
test
add
push
das
mov
ljmp
adc
outsl
cmp
in
inc
cmp
clc
shlb
jle
dec
mov
cmp
mov
jg
xor
ds
sarl
push
rcrl
test
movsb
mov
out
movsb
cmpb
push
cwtl
mov
std
leave
fisubrl
jno
xlat
mov
jmp
fnstcw
xchg
mov
or
insb
xchg
int
jnp
xor
fisubl
or
mov
xchg
sbb
sti
inc
in
sub
lock
mov
lret
or
fistpll
or
xor
sbb
call
in
sub
mov
xchg
mov
insl
lret
pop
mov
test
push
pop
inc
inc
js
out
mov
push
sub
mov
dec
mov
out
add
lret
scas
std
push
push
mov
les
dec
jo
nop
sti
in
aas
cmpsl
inc
in
imul
mov
out
imul
sub
dec
sbb
stos
lock
movaps
cmp
cmpsb
cmpb
bound
ja
sbb
sub
cwtl
cltd
enter
mov
mov
sbb
inc
idivb
out
lret
pop
loope
xor
int
mov
jg
pop
inc
test
inc
and
or
orb
lock
repnz
repz
pop
xchg
and
cmc
decb
insb
jmp
aas
or
scas
dec
xor
test
dec
sub
lods
inc
ror
mov
mov
insl
xor
in
dec
and
ret
jmp
gs
stos
push
cmpsb
sahf
inc
lahf
bound
lock
aas
add
rorl
mull
mov
pop
outsl
inc
adc
lods
adc
mov
jne
push
or
fcoms
fwait
enter
cmc
inc
fcomp
cmpsl
addr16
or
aaa
cmp
mov
aam
pop
xor
stos
int
ret
in
or
lret
push
je
arpl
xchg
dec
lcall
push
cmpsl
sub
js
and
jl
pop
mov
lds
or
orb
movsb
loopne
pop
inc
xchg
mov
lahf
sub
es
mov
enter
and
test
movsb
fstl
mov
sysenter
add
data16
stos
test
icebp
mov
xchg
aad
inc
fwait
sub
jg
je
fldt
xlat
jnp
shrl
in
mov
cli
add
xchg
movsl
addr16
shrb
pop
add
mov
outsb
cmc
xor
add
clc
cmc
xchg
lcall
cmp
les
pushaw
or
mov
enter
jge
mov
xchg
sub
cmp
cli
cld
xor
je
mov
imul
outsb
jo
adc
stc
mov
popa
push
addl
inc
cltd
negb
inc
push
sarl
mov
cld
out
test
pop
outsl
jl
add
jmp
rorl
xchg
dec
add
sub
mov
cmp
sub
mov
out
das
testl
sbb
push
adc
adc
out
xchg
jmp
stos
mov
xor
dec
xor
xor
xchg
enter
ja
testl
in
pop
inc
xchg
xlat
inc
jae,pt
mov
jmp
cmpsl
adc
sahf
bound
adc
enter
jmp
jmp
jmp
shrl
xor
stc
add
and
xor
data16
inc
cmpsl
int
mov
imul
xor
movsb
or
cmp
push
or
or
mov
out
stc
jb
pushf
sub
testb
mov
out
or
fcoml
push
dec
mov
test
adc
jns
mov
out
xchg
cli
sahf
mov
push
mov
xchg
mov
inc
sbb
mov
aad
testb
add
fwait
cmp
add
lahf
sub
jl,pn
cmp
mov
cli
pop
cmp
lock
jge
cmc
idivb
jno
clc
ja
cwtl
adc
jae
pop
cltd
inc
cli
dec
outsl
out
sub
mov
lods
shlb
adc
loopne
mov
inc
lcall
or
sbb
pop
and
cmpsl
fldt
or
stc
add
repnz
aaa
imul
hlt
scas
into
pop
bnd
mov
loop
dec
ljmp
mov
mov
adc
test
sbb
xor
mov
in
push
cmp
xor
push
push
mov
lods
dec
lock
test
cmp
push
cmp
ret
arpl
popa
dec
out
movsb
and
add
incb
mov
arpl
pop
add
imul
adc
sub
in
pop
sub
sub
cli
sub
sti
daa
arpl
adc
pusha
aam
loopne
push
inc
inc
or
subl
cs
aad
in
push
fistpl
test
inc
cmp
xor
push
test
mov
int3
insl
mov
dec
jno
imul
mov
mov
xor
push
cmpsl
jnp
sub
jae
add
jnp
push
nop
call
test
sub
add
inc
fdivrs
xchg
mov
mov
inc
adc
push
pop
mov
jl
fcmovbe
lods
pop
paddb
sub
jo
jmp
in
sub
lock
shll
inc
xchg
int3
xlat
sbb
push
mov
in
mov
mov
dec
xchg
jl
pushl
adc
in
fcmove
negl
ss
or
inc
xchg
jns
fidivs
inc
rep
jle
pusha
mov
or
stc
stc
mov
jns
jne
mov
iret
and
mov
lods
push
call
mov
sbbb
fwait
inc
mov
sahf
pop
push
lock
bound
push
dec
jle
mov
pop
or
dec
call
aad
cltd
inc
mov
jb
xchg
in
dec
lods
out
jecxz
mov
jle
cmpl
stos
popa
jp
test
dec
sbb
imul
pop
pop
push
lret
dec
sub
dec
sbb
add
xor
pop
jecxz
or
jecxz
xlat
stos
add
stc
stos
pop
pop
clc
cli
data16
dec
rorb
cmc
and
dec
push
xchg
loopne
or
popa
mov
and
mov
clc
fwait
sub
js
xchg
fwait
jmp
out
adc
insb
mov
mov
inc
push
push
in
lods
ljmp
testl
or
test
or
mov
call
in
sub
cmp
andl
loopne
pop
cmp
xchg
rorb
jo
cwtl
ret
shll
adc
inc
pusha
lock
pop
xlat
mov
xchg
ja
sub
mov
cwtl
cltd
test
pop
shlb
push
repnz
das
std
xor
or
sbb
loopne
adc
sbb
icebp
adc
mov
aam
cmpsb
sbbb
int
cltd
or
ror
popf
pop
sub
ds
sbb
add
fwait
sbb
jbe
fisttpll
jnp
xchg
dec
adc
and
push
and
jne
mov
or
cmp
and
fistpll
push
pop
dec
test
in
or
ja
mov
cmp
movsb
mov
inc
icebp
xchg
cvttps2pi
ret
jb
mov
and
mov
out
push
pop
jbe
pushf
je
dec
cmp
imul
mulb
pop
cmpsb
mov
jae
fists
test
mov
mov
mov
cltd
lea
xor
je
mov
push
mov
add
ss
mov
mov
pop
add
xchg
mov
xlat
loope,pt
jge
pop
jo
inc
scas
ret
cmp
sbb
mov
fisttps
in
xchg
data16
xchg
fsts
movl
fwait
cmp
jmp
and
cmpsb
sarb
sub
mov
pop
xor
shr
mov
into
add
add
rcr
cli
rcr
jge
add
loop
fucomp
hlt
xor
addl
sub
xchg
xor
in
push
test
and
in
ljmp
inc
sbb
mov
dec
mov
cli
test
imul
xchg
dec
les
dec
mov
aad
jge
in
xchg
rcr
dec
shlb
add
inc
and
xorb
fidivrl
cmpsb
adc
fbstp
rorb
adc
aam
or
mov
inc
inc
movsl
loope
clc
rcrb
rolb
out
mov
pop
ja
es
jbe
mov
cs
popf
repz
jae
sbb
mov
enter
clc
sbb
push
xor
lret
push
call
xchg
lods
jno
add
test
sub
jmp
adc
fistpl
lret
in
jns
repz
pop
fists
mov
mov
xchg
insb
add
pop
loop
lea
fidivs
testb
mov
leave
xchg
or
fisttpll
rcrl
daa
adc
or
sub
aam
repz
ret
sbbl
dec
push
sbb
hlt
fstl
or
mov
in
push
adc
sahf
pop
in
roll
push
cwtl
les
lea
orb
mov
xchg
scas
push
popl
ret
mov
ret
mov
hlt
lods
int3
stos
int
or
movsl
popf
xor
imul
in
jno
fidivl
sbb
movsb
pop
imul
pop
push
pop
out
dec
cs
popf
stos
cmp
jge
cmp
inc
test
in
scas
cmpsl
push
mov
mov
sbb
imulb
and
cmp
adc
icebp
sub
mov
into
inc
fdivs
fmul
sub
sub
mov
dec
push
add
xlat
sub
inc
lret
clc
scas
dec
adc
out
aas
fwait
aad
lcall
cmpsb
mov
lcall
inc
push
push
in
jns
dec
cmp
int
inc
inc
fstps
fisubl
fnclex
xchg
mov
aad
aaa
and
in
adc
xor
lcall
cmp
pop
adc
inc
movsl
push
xchg
repnz
inc
stos
sub
xor
popf
cmp
jb
fnstsw
int
aam
adc
push
scas
xor
push
push
pop
lea
jecxz
add
pop
jge
dec
add
loop
add
les
jno
or
dec
fistl
and
pop
push
imul
cs
xchg
mov
stos
sbb
jno
or
aam
js
jae
shll
xchg
pop
shrb
dec
je,pn
jae
xchg
lcall
stos
hlt
pushf
cmp
xchg
lods
mov
ret
gs
stc
outsb
pop
hlt
addr16
loope
mov
push
jb
enter
cmpsb
mov
pop
aam
xchg
call
inc
adc
fists
inc
test
shr
jl
push
sub
je
mov
lcall
sub
sbb
push
mov
movl
xor
daa
sub
and
imul
out
adc
or
mov
movzbl
lea
imul
sub
rorb
mov
leave
fstp
test
pop
test
pop
adc
test
lods
gs
and
sbb
leave
push
imul
add
xchg
or
push
cltd
cli
pushf
jae
jns
cld
testl
or
mov
pusha
lds
push
shlb
pushl
inc
adcl
imul
insb
inc
mov
dec
pop
xor
cld
push
dec
lock
pop
rclb
mov
mov
sub
jno
fisubl
shl
push
mov
dec
fdivs
mov
repz
xchg
xchg
add
inc
lea
shll
stc
mov
push
xor
cs
daa
cmp
inc
add
cmpsb
mov
stos
out
int3
rclb
push
xor
push
xchg
fldcw
sub
dec
outsl
sbb
dec
jnp
test
lods
sti
pop
addr16
dec
jmp
xchg
sbb
mov
scas
mov
cmp
sti
scas
test
xor
cld
mov
inc
mov
into
test
pop
push
xchg
mov
adc
sub
aaa
cmp
mov
movsl
xchg
cmc
addr16
jno
xchg
mov
fmull
inc
shll
aam
aaa
push
sub
mov
pop
cmp
mov
addr16
dec
mov
pop
cmp
imul
mov
push
dec
roll
xchg
sbb
and
add
xchg
mov
sbb
int
or
bound
imul
inc
dec
pusha
or
stos
inc
ljmp
ja
les
ret
popa
arpl
sbb
xchg
sub
cmp
push
sbb
push
inc
adc
pop
ss
mov
cs
rcrl
idivb
mov
push
std
lock
jp
dec
hlt
pushf
jle
cmp
iret
test
dec
sbb
and
mov
clc
repnz
aas
daa
outsl
and
cmp
xlat
outsl
ucomiss
jge
aad
aam
mov
mov
pop
cmp
add
dec
sbbl
mov
inc
ljmp
ja
inc
xchg
stos
data16
sbb
fs
dec
lret
cwtl
jecxz
push
xchg
xchg
out
add
std
lea
xchg
adc
inc
pop
dec
test
imul
mov
xor
dec
add
push
fstp
out
dec
mov
cmpsb
xchg
cmp
sbb
adc
shrb
sbbb
mov
adc
das
movsl
cmc
ffreep
das
outsl
jns
pusha
shll
negl
popa
or
aad
cmc
hlt
jl
cs
mov
pop
mov
test
sub
mov
daa
test
leave
cmp
dec
rorb
sahf
mov
xchg
inc
xchg
rcl
nop
dec
sbb
out
loopne
cmp
push
pop
sti
movsl
addr16
xor
xchg
je
or
adc
stos
or
dec
clc
sub
dec
enter
cli
push
inc
xor
dec
rorb
sbb
push
aad
loop
mov
jecxz
lret
ret
push
std
cmp
cmp
pushf
insl
cld
mov
data16
mov
dec
outsl
inc
scas
imul
mov
jo
cmp
xor
dec
push
sub
bound
cmp
aad
cwtl
mov
test
lock
sbb
mov
cmp
pop
gs
mov
popa
bnd
movb
pop
add
ss
push
or
jp
adc
jbe
addr16
faddp
push
mov
sub
int3
pusha
cmpsb
rorl
leave
cmp
sbb
ljmp
mov
testb
sub
test
fdivl
push
or
sbb
and
cmp
adc
in
mov
jp
cs
popf
xchg
int3
sahf
aas
cmpsl
mov
sbb
adc
popf
ljmp
sbb
arpl
jg
aaa
cmc
ja
popa
test
inc
mov
fsubrl
pop
repz
and
std
out
xor
mov
out
push
xchg
push
icebp
jae
mov
ds
add
sub
js
xchg
in
xchg
jg
pop
iret
pmaxub
rcll
dec
dec
int
sub
popf
lahf
jns
dec
mov
pop
inc
xchg
dec
loope
aas
pop
in
sahf
lret
lret
inc
ljmp
lcall
pop
xor
fldenv
cmpl
in
sti
add
mov
shr
loopne
cmp
shl
dec
testl
mov
mov
mov
push
call
and
js
mov
mov
imul
les
dec
adc
xchg
mov
stos
es
test
movl
bound
xchg
notl
cltd
jnp
repnz
test
orb
scas
repnz
mov
ret
loopne
mov
push
int
pop
xor
jne
pop
aaa
arpl
xor
stc
xor
ficoml
cwtl
cltd
cmp
sbb
cmp
cmp
push
mov
sbb
jne
cmpsb
xchg
mov
xorl
jne
loopne
insb
mov
jo
imul
cmp
je
inc
mov
adc
jno
mov
mov
pop
adc
lods
push
pop
lock
and
lock
test
xchg
in
xchg
rcr
jae
addr16
fwait
push
scas
add
sbb
sbb
or
add
data16
lea
or
int3
in
repnz
enter
mov
xchg
fcmovne
xchg
push
adcl
and
sbb
rcrb
aas
add
xchg
inc
pop
popf
call
aas
push
cmp
imul
subl
add
mov
mov
jle
add
or
stos
jg
test
xor
pop
adc
das
jnp
aaa
js
cmp
push
push
loope
xorb
js
mov
lods
jmp
jae
adc
das
lods
cmp
int3
ljmp
add
pop
addr16
xchg
out
or
push
bound
mov
jmp
inc
ljmp
mov
push
cmpsb
lods
inc
sbb
dec
xchg
aaa
pop
aaa
pop
lods
repz
mov
arpl
insl
inc
sbb
dec
add
mov
jg
push
push
xor
pop
xlat
push
fcmovb
out
mov
mov
imul
xchg
jb
or
cs
popa
cmp
fcompp
xchg
rdmsr
pop
xor
hlt
icebp
push
int3
xchg
push
push
jl
das
inc
fisubrs
and
xor
fisubrl
inc
les
xor
sub
leave
jns
bound
sbbb
jbe
or
pop
cmp
add
cmpsb
mov
scas
mov
jecxz
push
cmp
inc
fcmovnb
add
out
in
cli
test
icebp
push
out
xchg
push
add
rcll
sbb
sbb
inc
es
rcll
rorb
cmpsl
movsb
aaa
mov
enter
rcrl
cli
fcmove
xorl
xorb
cmp
push
or
dec
dec
inc
rol
xor
and
insl
outsb
out
sub
mov
fstpl
add
xchg
push
cmpsl
sbb
loope
adc
test
lcall
insl
xchg
shlb
daa
clc
iret
push
fstps
loope
mov
xorl
jno
pop
sbb
test
setle
or
inc
in
int
andb
and
xlat
jb
mov
adc
sub
xor
push
and
jmp
dec
cmp
cs
or
or
sbb
xchg
test
sbb
jne
mov
or
sub
cmp
pop
cmp
pop
pop
aas
addl
popf
mov
lods
cmp
cmpl
fcompl
cmp
loope
leave
loopne
push
xchg
mov
sub
scas
repnz
into
add
inc
movsb
mov
imul
and
mov
mov
mov
jbe
idivb
and
push
xchg
test
popa
or
js
fxch
cli
test
sbb
dec
sarl
aaa
mov
stc
test
jb
cld
jae
fwait
and
lock
cld
mov
cmp
adc
mov
lahf
push
pushf
pop
add
in
mov
xchg
push
rcll
cmpsb
fcomps
lods
popf
or
adc
movsl
and
add
mov
push
mov
mov
jp
mov
daa
push
push
cmc
or
call
cmp
fcomp
out
or
icebp
push
ss
out
cmc
xchg
mov
pop
xchg
jecxz
testb
testl
sbb
mov
dec
out
xor
add
mov
xor
je
subl
jae
or
inc
shlb
lcall
ss
daa
and
xchg
enter
sub
scas
or
push
rep
ret
xor
ja
aam
test
testb
or
xor
stos
aam
repz
inc
sar
mov
mov
mov
mov
mov
inc
or
ja
sbb
mov
lds
aaa
outsl
es
mov
in
loope
push
scas
jo
incl
scas
cltd
jbe
add
in
jp
sub
es
test
and
xor
lret
dec
cmp
lock
stos
or
pop
je
ret
rclb
jg
xchg
and
bound
test
inc
push
pop
mov
jae
nop
popa
leave
ficompl
or
addl
pop
lcall
pusha
dec
add
in
pop
lret
xor
sbb
addl
movsl
shrb
and
mov
mov
pushf
mov
sub
outsl
sti
mov
xchg
pop
mov
cwtl
xlat
and
xor
popa
loop
jne
in
lds
fwait
pushf
inc
orb
mov
aad
sub
int3
jno
mov
inc
out
or
push
xor
xlat
cmp
inc
loop
mov
into
sbb
or
fs
cmpl
sub
imul
mulb
adc
cmp
js
xchg
mov
dec
add
mov
jmp
xor
mov
xchg
jns
enter
les
popa
add
scas
rcl
test
sbb
dec
dec
pop
fbld
sub
add
outsb
sbb
add
test
popa
aas
imul
cmp
imul
rcl
repz
inc
xchg
js
and
pop
xchg
dec
xchg
pusha
push
sahf
imul
popf
mov
jmp
mov
js
cmp
xor
jnp
mov
mov
ds
fdiv
cld
add
xlat
js
out
in
repnz
xchg
sbb
push
jo
inc
mov
or
cmpsb
jb
sub
and
xor
je
push
ss
add
adc
xchg
rdpmc
pop
js
inc
inc
adc
clc
xor
lds
inc
int
add
dec
fst
push
pop
les
pop
pop
pop
jmp
or
mov
das
inc
daa
adc
add
or
cmp
add
sbb
lcall
jnp
pop
jb
arpl
jno
pop
sbb
dec
push
cmpsb
jle
cmp
test
push
and
mov
jle
mov
mov
into
lgs
loope
push
lea
mov
movsl
jo
stc
data16
mov
inc
xchg
mov
mov
inc
mov
push
sbb
push
jo
sub
push
out
cmp
iret
push
and
jecxz
or
ret
push
aad
mov
mov
fisubrs
leave
int3
xchg
push
scas
outsl
sub
sbb
cwtl
and
mov
pop
mov
hlt
dec
shrb
add
bound
fdivrl
xor
lods
mov
mov
lcallw
cs
iret
sbb
pusha
ja
test
jge
sbb
sub
pop
xor
mov
mov
xor
std
jge
dec
mov
mov
adc
insl
ret
int3
push
cmp
test
rolb
lea
or
enter
and
cmc
xor
ja
mov
pop
lret
adc
sbb
movsl
mov
aad
fildl
add
sbb
sahf
jmp
out
scas
insl
mov
into
cs
dec
popa
in
pop
push
xchg
in
jmp
adc
mov
xlat
mov
xlat
pop
mov
sbbb
cmp
leave
mov
cmp
xchg
enter
mov
scas
loope
sbb
mov
test
pop
add
ja
pop
and
arpl
test
lahf
jae
ret
xchg
xchg
or
je
icebp
dec
fnstenv
pop
mov
or
inc
fdivrs
enter
mov
ret
in
ret
xchg
int
jp
and
xlat
dec
mov
stc
mov
xchg
les
sbb
cmp
lods
xor
add
in
push
and
cmp
mov
xchg
xchg
inc
add
int
in
adc
sub
jmp
loopne
das
xchg
fcomi
dec
mov
add
dec
scas
pop
xorb
add
addr16
lret
cmp
or
pop
or
or
pusha
xchg
xorl
mov
iret
fs
lahf
push
dec
popa
jbe,pt
jge
imul
lahf
mov
jmp
jbe
insl
and
cld
pop
pop
push
sub
and
adc
subl
fisttps
aam
movsb
fisttps
lds
test
pushf
jecxz
add
movsb
repz
pusha
mov
mov
and
test
mov
popfw
idivl
addr16
add
lea
scas
adc
sub
pushf
lcall
repz
cli
je
add
orl
inc
inc
adc
push
adcl
xchg
pop
ret
or
push
ret
rorb
and
fdivl
lret
in
popa
jl
jns
daa
mov
dec
pop
xor
nop
lds
dec
enter
xchg
mov
add
push
fs
test
rorb
popa
mov
cmp
lods
push
bound
mov
sbb
fbld
push
adc
xchg
dec
test
movl
pop
xchg
push
mov
jb
lods
push
dec
push
pop
push
mov
and
mov
pop
or
stc
aas
xchg
andl
dec
xchg
adc
outsl
pop
lahf
cmp
jns
arpl
insb
dec
arpl
sarb
jp
mov
mov
jno
ret
mov
push
or
pop
fidivs
test
xor
xor
dec
popa
push
ja
daa
mov
adc
mov
pop
and
scas
outsb
cmpsl
pop
test
xor
clc
jns
fildll
push
dec
cmpb
inc
lcall
sbb
sbb
in
add
xor
lods
adc
push
sub
mov
xchg
fdivs
sbb
or
push
fdivrp
push
pop
fcoms
push
xor
sub
push
idivb
movsl
mov
outsb
inc
push
mov
ja
sti
and
ss
xor
jmp
mov
mov
jno
add
decb
imul
adc
push
outsb
imul
cmp
je
fstpl
push
mov
inc
or
sub
clc
mov
test
pop
hlt
gs
scas
or
pop
and
sahf
sahf
enter
dec
pushf
pop
mov
and
imul
mov
movsb
add
push
push
je
jnp
in
mov
xchg
dec
pop
sub
jmp
jne
icebp
mov
jl
mov
fdivr
mov
xchg
nop
push
shl
bound
insb
mov
mov
stos
lea
adc
ss
add
xchg
popa
stos
pop
add
jp
andb
lahf
jo
bound
hlt
jnp
sub
lret
test
push
jnp
jne
add
pushf
add
sahf
mov
out
mov
dec
or
hlt
stos
push
or
or
cmc
loope
repnz
sub
outsb
xor
sahf
push
repnz
pop
inc
inc
fsubp
aaa
mov
adc
mov
call
push
aam
das
movsl
mov
shrl
or
lret
xor
jge
into
mov
add
pop
cmpsl
xlat
outsl
pop
jno
jb
jo
shl
aam
lods
or
and
repz
fsts
push
cmpb
cmp
inc
mov
xor
out
loop
mov
out
or
fs
mov
mov
out
mov
sub
push
xchg
outsl
imul
pop
dec
add
cmp
js
sub
pop
pop
inc
std
test
dec
mov
dec
jl
test
xchg
loop
fmuls
call
clc
lret
dec
loop
fsqrt
cmp
out
lds
repnz
inc
and
mov
add
iret
bound
push
test
bound
dec
push
daa
mov
dec
jge
cmp
je
jmp
dec
inc
mov
or
insl
pop
or
cs
push
pop
sbb
inc
arpl
mov
add
mov
jle
icebp
cmc
push
xor
xchg
mov
mov
jp
inc
pop
inc
mov
cmp
lea
aas
jg
inc
add
cmp
add
sbb
dec
cmp
shr
xor
inc
dec
imul
sbb
and
pop
in
dec
mov
sti
add
movsb
sbbb
testb
mov
xor
add
xchg
decl
addr16
js
in
into
sub
insl
out
xor
sub
xor
add
push
or
and
bound
bound
inc
jecxz
sti
fwait
and
add
lret
inc
xorb
lcall
es
aam
xor
ja
iret
or
push
sub
outsb
sahf
loopne
jg
adc
cld
js
pop
adc
pop
add
incb
mov
mov
or
shlb
jno
sbb
sar
in
test
pop
incl
xchg
jmp
leave
not
xor
and
or
imul
hlt
sti
sub
test
shl
inc
dec
popa
xchg
mov
cmpsb
push
test
mov
pop
sbb
push
xor
inc
add
xchg
lock
aam
scas
repz
mov
ds
mov
mov
xchg
xor
int
or
fbstp
stos
test
sbb
shl
mov
mov
sub
mov
sub
pop
xlat
iret
inc
shrl
flds
cmpsb
cmc
sub
xchg
push
pop
mov
movsl
xor
setl
mov
cmp
mov
popf
stc
ffree
jbe
ja
cmp
stc
mov
aaa
push
mov
fistpl
stc
push
ss
push
sub
xor
sbb
sbb
insb
push
cmp
insb
sahf
and
xlat
jle
sub
test
cld
popl
outsb
out
stc
cld
push
inc
jle
iret
lea
mov
mov
xlat
js
add
pop
cmpsl
test
popa
mov
aad
adc
lods
cmc
ss
mov
mov
push
das
scas
sbb
jae
or
adc
inc
jns
sbb
sbb
inc
and
gs
aas
dec
inc
loop
xchg
loopne
cmpsb
dec
or
icebp
pop
rep
js
cwtl
in
outsl
insl
jge
fisubrs
mov
mov
cwtl
sbb
cli
pop
insl
pop
cmp
out
movsl
scas
es
in
jg
or
popa
ret
pusha
mov
enter
lock
fwait
or
xchg
lock
and
nop
gs
jp
sub
mov
aam
jg
mov
fsubs
mov
sahf
xchg
mov
pop
testl
cltd
add
into
and
xchg
mov
pop
fstps
sub
lahf
cli
in
sub
fildll
push
or
mov
xor
jb
push
negl
lcall
mov
jge
repz
gs
adc
cld
ret
sahf
cmp
mov
jne
push
js
pop
mov
inc
dec
dec
aad
flds
xchg
push
jp
push
loope
jl
sub
mov
lcall
out
mov
ret
sub
xor
xchg
inc
lods
mov
pop
stc
mov
in
roll
es
mov
xchg
orl
fstps
cmp
push
aad
jp
out
mov
call
clc
insb
in
dec
add
jnp
and
pop
stos
out
out
fwait
repnz
jno
mov
mov
daa
mov
xchg
and
ljmp
push
jbe
xchg
into
jg
popf
jmp
notb
mov
out
or
repz
ss
pushf
cmpsl
fisubrs
pop
push
adc
and
sub
jae
pop
aad
pop
mov
ror
xchg
add
sbb
in
aaa
test
push
jnp
rcr
pop
aaa
popf
int3
pop
cmc
or
imul
daa
mov
mov
cld
filds
or
in
inc
pop
push
scas
and
fisubrl
xchg
mov
add
mul
xor
adc
lds
leave
cmp
xchg
push
mov
jb
pop
popa
jne
addr16
inc
push
sbb
lcall
mov
jae
aaa
push
adc
jbe
mov
push
mov
mov
popa
adc
das
and
iret
cli
hlt
sub
mov
pop
es
loopne
out
gs
mov
or
dec
dec
xchg
xor
ficomps
lcall
mov
popa
push
and
outsb
dec
sub
xor
push
sti
jbe
fs
xchg
sarl
jns
add
test
add
aaa
push
rcrl
test
outsb
cmp
mov
mov
sbb
jecxz
sti
daa
test
jp
hlt
test
adc
pop
divl
aam
shll
jmp
push
pop
pop
lahf
push
loope
dec
insb
pop
dec
adc
in
xor
fstpt
mov
xchg
jle
xchg
jo
fwait
cmpsl
inc
in
hlt
loopne
sbb
mov
sbb
ljmp
inc
repnz
inc
or
into
ja
xor
insl
iret
inc
insl
dec
ljmp
sbb
lahf
sbb
fldcw
adc
mov
dec
enter
enter
add
mov
xor
cmp
inc
and
jne
xor
mov
sahf
aaa
test
stos
in
xchg
jae
fs
and
fisubrs
gs
mull
dec
xor
cmc
lret
mov
mov
xchg
jge
cltd
cwtl
cld
sbb
mov
test
leave
mov
aas
inc
movsl
xor
sti
sbb
pop
out
ja
lds
jmp
pop
and
faddp
inc
test
push
and
aad
idivb
sbbb
hlt
xchg
leave
or
repz
lahf
sub
rcr
xchg
inc
je
aas
add
sub
jno
mov
mov
dec
clc
shll
mov
sbb
inc
es
lods
imul
idivb
aaa
jecxz
sarl
pop
xor
and
xor
sbb
add
notl
sbb
cmp
dec
in
mov
add
repz
popa
data16
std
inc
push
push
ljmp
shlb
fsts
fsubs
and
out
add
jg
mov
out
fwait
or
pop
test
push
dec
aaa
lds
lcall
sbb
outsb
xchg
xchg
sbb
loopne
fsubrl
push
ja
fistl
popf
mov
and
inc
loopne
add
push
xchg
xchg
pop
popl
data16
inc
mov
dec
fwait
jg
notl
lods
adc
adc
push
repz
lock
mov
jb
xchg
mov
fs
dec
add
dec
jns
pop
mov
lret
addl
test
into
rol
rcrl
dec
inc
lahf
mov
stos
fcomps
ret
icebp
inc
clc
mov
into
scas
cmp
std
in
rclb
loop
push
movsl
lcall
xchg
loopne
mov
jg
dec
and
mov
mov
ljmp
xor
popa
movsb
rcll
ja
out
mov
inc
pop
mov
mov
mov
dec
cmp
aad
adc
jle
and
cld
adc
pop
dec
ficoml
inc
mov
ret
mov
pop
das
mov
es
mov
mov
pop
ds
les
gs
stos
sbb
int3
and
aam
cltd
xchg
mov
aas
xchg
jbe
pusha
sahf
daa
xchg
fildll
xchg
inc
testb
cmpsl
aad
dec
add
andb
imul
cwtl
and
in
xchg
test
add
stc
out
movsl
inc
mov
xor
jo
add
into
mov
adcl
ror
add
adc
out
mov
xchg
push
xchg
cs
or
jecxz
ss
sarb
fstpl
frstor
sbb
pop
cmp
xchg
repz
mov
jle
ficomps
push
mov
push
lret
scas
and
jne
cvtps2pd
cwtl
sbb
scas
test
jbe
xchg
mov
dec
pop
add
in
inc
test
pop
mov
in
jnp
and
dec
sub
andb
cmc
ss
pop
or
int
lods
mov
inc
lret
add
aad
dec
popa
jp
sub
jecxz
inc
test
pop
dec
sahf
mov
rclb
push
enter
rol
outsl
dec
js
xchg
inc
push
mov
daa
ret
push
jae
movsb
movsb
dec
adc
js
add
mov
aad
add
add
outsl
pop
icebp
movsb
jl
push
xchg
scas
imull
shll
and
jp
pop
jmp
inc
mov
cmp
mov
jnp
xchg
nop
sarl
jle
je
or
pop
cld
enter
or
mov
or
ljmp
mov
push
inc
aas
aam
rclb
cld
inc
or
mov
add
cmc
int3
or
stos
or
mov
je
lcall
jmp
repz
dec
mov
inc
xchg
or
xchg
inc
sarl
cs
mov
push
lods
scas
imul
in
push
jge
jl
cli
in
fldenv
js
addr16
adc
cld
xchg
ret
cmp
add
lods
movsl
jne
movsl
jo
pop
lahf
push
and
sbb
jge
std
push
mov
fimuls
scas
pop
ja
lret
fdivrs
mov
adc
xchg
inc
dec
div
mov
popf
jp
cwtl
lds
jno
repz
add
mov
push
popa
push
mov
insl
das
out
aas
div
leave
adc
push
mov
add
cmpb
lret
testl
inc
pop
jns
pop
push
cmp
jecxz
inc
or
push
dec
cmpsl
popa
jp
shrb
ret
dec
scas
pop
lahf
cmp
pop
xor
cmpsb
popf
lods
pop
rolb
cwtl
cmc
xchg
cmp
dec
loopne
adc
lea
data16
add
mov
mov
mov
pusha
shrl
sbb
inc
andb
enter
shl
add
adc
test
arpl
mov
add
mov
daa
sub
add
push
divb
mov
pop
imulb
aaa
xchg
movsl
jle
std
test
int
mov
and
cmp
call
lods
mov
imul
loopne
sub
imul
in
xchg
sub
dec
mov
cmc
inc
cmp
jp
sbb
scas
call
rol
notb
cwtl
push
dec
cmp
sbb
mov
jge
mov
sarl
pop
and
jnp
inc
xchg
cwtl
aad
or
movsl
lret
push
xchg
outsb
add
add
movsb
xchg
movsb
sub
adc
and
data16
fdivrs
pop
pop
or
add
xor
mov
mov
cli
or
cmp
dec
mov
sub
shlb
pop
pop
sub
ret
jl
das
ss
test
lcall
pop
aam
xor
sub
sbb
loope
jl
xor
pop
and
std
cmp
mov
xchg
mov
scas
icebp
mov
movsb
fwait
loopne
xor
dec
std
or
mov
in
fwait
pop
aaa
adc
dec
add
js
mov
jb
push
int
cmp
mov
arpl
mov
cmp
pushf
pop
fdivrl
andb
inc
jnp
lods
xor
dec
ret
cmpsb
pop
mov
mov
add
mov
dec
ljmp
test
ljmp
mov
pop
and
inc
aam
adc
jg
mov
inc
jle
iret
enter
sub
or
test
sbb
jl
repnz
loopne
test
cmp
ficoms
fisttpll
pop
test
sub
sbb
movsb
cwtl
mov
test
outsl
push
rcr
jp
test
inc
xchg
fistl
add
dec
add
test
and
rorb
jae
inc
repz
pop
out
mov
lds
xor
fsubl
mov
std
fwait
lods
flds
adc
idivb
inc
sbb
sub
imul
xchg
int3
push
stc
aaa
lea
stc
mov
loopne
or
cli
popa
cmp
inc
mov
sbb
stc
das
shl
repz
inc
push
lods
xor
dec
fdivrs
xchg
addr16
push
dec
xlat
jle
popf
in
add
jecxz
cmp
in
pop
lods
sub
div
test
ret
pushf
cld
lret
cmpsl
mov
inc
push
add
or
sub
xlat
add
into
pop
sub
mov
loope
adc
adc
inc
pop
push
adc
mov
enter
loopne
xchg
push
shll
loopne
pop
cmpsl
aas
mov
jp
xchg
lret
imul
aaa
lahf
stos
stc
xor
add
cmpsb
jle
fwait
jne
pop
aam
adc
and
mov
jge
bound
stc
iret
in
cmpsl
add
push
push
inc
xchg
insl
pusha
jb
stc
mov
test
pop
pop
aam
shll
call
in
popf
subl
inc
insb
fmuls
scas
push
and
cmpb
fwait
les
jne
cvtpi2ps
jl
gs
out
test
xchg
sub
cs
shl
aas
push
xor
roll
pop
std
sub
jb
push
test
ret
mov
adc
addr16
test
sub
fstl
negb
jb
jae
aaa
addr16
push
push
in
movsl
loope
icebp
xchg
push
jmp
cmp
cmp
test
pop
mov
cwtl
flds
mov
lcall
pop
cmpsl
sahf
xor
lcall
xor
lahf
xchg
mov
push
push
dec
dec
adc
jle
sbb
arpl
lods
and
ljmp
into
push
jnp
clc
repz
or
jl
rorl
add
repz
test
adc
sub
popa
mov
jge
bnd
mov
cli
jge
clc
aam
and
lret
icebp
mov
jnp
mov
xor
and
fnsave
mov
jns
push
xchg
adc
icebp
or
lds
adcl
push
cmpsl
into
cltd
sarl
fistpl
loop
dec
in
add
pop
xchg
int
xor
jnp
add
lcall
js
aad
push
lcall
test
and
out
loop
sar
dec
in
pop
or
pop
lea
insl
mul
aam
mov
xchg
loope
adc
jmp
dec
inc
sbb
xor
mov
js
pop
mov
sub
int3
cli
push
fstpl
or
lock
mov
hlt
jne
das
cwtl
jge
or
loop
inc
nop
gs
xor
sahf
loope
cmp
sahf
add
push
lods
mov
or
lret
cmpsb
rcr
pop
inc
loope
sbbl
or
push
shlb
leave
aad
repz
js
fdivrp
push
inc
iret
out
push
jge
cmp
mov
mov
mov
inc
loopew,pn
dec
pop
jmp
out
cs
lods
cld
jnp,pt
lods
cs
repnz
inc
and
add
dec
clc
jmp
fcmovne
xor
dec
dec
mov
mov
das
imul
dec
adc
mov
sbb
and
lods
push
fldl
adc
cmp
push
das
mov
cmp
pop
sbb
mov
enter
into
and
push
insb
leave
outsb
sbb
push
pop
mov
outsb
lea
dec
push
cmp
mov
call
repz
or
ljmp
push
mov
cmpsl
shll
scas
arpl
jle
cmp
inc
add
xchg
incb
dec
xchg
adc
es
insl
xor
add
jl
shll
fisttps
divl
pop
pop
out
repnz
icebp
and
out
and
stc
mov
fsubr
or
push
in
xchg
mov
push
insb
sti
arpl
mov
neg
cmpsb
push
push
gs
mov
inc
push
mov
popa
xchg
xor
imul
ja
aaa
mov
add
fwait
ja
cmp
aas
xor
mov
dec
loop
andl
rclb
cld
cmp
cmpsl
cmc
sub
or
push
pushf
add
inc
xchg
fldt
or
lods
xor
les
jg
out
inc
movsb
aas
inc
or
dec
movsl
xchg
cmp
push
je
sbb
push
jmp
and
movsb
adc
aaa
xor
enter
xor
cmc
cmp
push
outsl
push
cmp
pop
sub
adc
cmp
sbb
cmp
insb
adc
lcall
dec
call
mov
add
mov
mov
bound
lret
lds
adc
out
ja
lods
or
aad
push
push
ljmp
mov
xchg
outsl
push
push
inc
sar
clc
aam
or
or
out
sub
bound
ja
cmp
fstpt
stc
imul
je
push
jmp
dec
cmp
jnp
les
ficompl
mov
pop
add
push
xlat
xchg
into
ss
cmp
aaa
xchg
xchg
shlb
dec
push
and
gs
push
xor
sbb
std
xor
scas
lret
push
push
mull
jne
adc
or
divl
cld
popf
fstp
jge
test
jp
fcoml
cltd
stos
cmp
add
jnp
lret
push
je
mov
pop
pusha
cltd
add
out
and
mov
mov
cli
stos
and
ja
in
mov
add
adc
inc
popf
out
aad
cmp
mov
sti
orl
ljmp
mov
sbb
arpl
mov
and
dec
stos
or
mov
mov
pop
mov
fucomip
ret
dec
dec
popa
push
sbb
xchg
adc
push
loopne
test
mov
cmc
insl
hlt
adc
dec
lods
mov
jo
push
leave
mov
lods
rclb
cld
insb
mov
dec
sbb
dec
insb
mov
sahf
inc
mov
adcl
sbb
cli
insb
loopne
loopne
rclb
imul
jnp
js
jns
lcall
sbb
dec
mov
lcall
push
xorb
mov
jle
pop
push
pop
loop
movsb
adc
cld
sub
in
gs
xchg
sbb
xor
in
outsl
push
adc
push
mov
lret
ret
push
imul
adc
call
jae
ss
mulb
clc
loop
push
test
mov
sbb
add
scas
daa
leave
mov
stos
imull
mov
test
in
roll
adc
mov
push
add
aas
test
stos
aad
sbb
add
jge
dec
in
inc
mov
add
pop
pop
xchg
mov
lods
sbb
xor
mov
inc
xor
ss
in
repz
adc
cmpsb
test
pop
sub
test
and
and
cwtl
and
inc
and
ficoms
mov
stc
dec
lret
pop
pop
sbb
push
fmuls
mov
dec
cmpb
rol
outsb
out
and
les
cmc
inc
pop
and
jle
mov
sbb
cwtl
ja
subl
jge
test
mov
push
test
popf
push
pop
cmp
adc
ds
add
cmp
cs
add
ds
xor
int3
mov
xor
out
incb
mov
xor
fstps
rcll
ljmp
dec
dec
sub
cld
mov
daa
inc
rclb
addb
stc
jg
cmpsl
jmp
mov
jnp
push
notl
mov
add
sub
into
aam
push
pop
adc
xchg
inc
xor
mov
pushf
mov
and
sbb
or
arpl
loope
push
pop
popf
pop
adc
xchg
push
xchg
sbb
push
push
addr16
fldenv
mov
sub
mov
mov
jo
jae
pop
nop
inc
out
divb
outsb
mov
add
or
push
adc
push
cli
and
adc
jmp
fisttpl
push
adc
insb
in
adc
fisttps
mov
jp
jbe
aam
add
shll
dec
mov
push
mov
ljmp
ja
and
jge
xor
gs
add
test
scas
xadd
int3
dec
jl
mov
push
aad
fdivs
pop
add
push
and
cmpsb
int
clc
das
stc
repnz
or
daa
call
add
mov
adc
jge
enter
les
pop
cwtl
mov
call
cmpb
mov
mov
cmp
loope
jbe
outsb
pusha
xchg
popf
shl
insl
ss
aas
and
out
mov
in
pop
rcll
add
dec
pop
mov
cli
inc
aad
dec
mov
das
mov
adc
ficompl
or
or
mov
dec
dec
jno
inc
jns
sti
mov
pop
addl
xor
scas
cli
mov
jno
js
imul
cli
push
repnz
mov
rcrb
icebp
int
mov
lods
mov
ret
cmovle
imul
mov
mov
imul
fldl
push
inc
out
test
push
pop
sub
mov
cmpsl
and
pop
pop
cmc
mov
lcall
hlt
inc
subl
jg
jbe
dec
loope
jne
dec
mov
push
sahf
call
lds
adc
add
fucomip
rorb
scas
fs
jg
add
call
jmp
lret
cmp
add
xchg
add
cld
cmp
pop
scas
out
xchg
outsl
daa
ret
outsl
sbb
xor
lea
push
repnz
inc
jns
in
lock
dec
push
or
mov
mov
add
fs
std
shll
dec
xor
xor
repnz
jno
adc
arpl
je
push
push
test
pusha
or
dec
test
and
ds
or
cwtl
pop
xchg
mov
inc
mov
insl
out
nop
and
sbb
push
pop
pusha
cmp
mov
in
xor
add
push
ja
decl
stos
push
in
mov
arpl
mov
fnstcw
or
push
pushf
in
lahf
jnp
out
cmp
sub
xchg
das
inc
and
movsb
repz
jno
push
mov
pusha
cmp
imul
or
jnp
lret
call
test
lea
fdiv
jne
push
adc
jp
stos
loope
in
sbb
loop
dec
push
es
push
dec
pop
ljmp
lea
lret
mov
shrl
sbb
sbbb
jp
rcll
pop
data16
pop
loope
mov
or
jg
pusha
dec
sub
int
popa
hlt
pop
pusha
outsl
loope
in
and
cld
pop
popa
inc
std
pop
out
mov
leave
xchg
nop
adc
js
cmp
shr
fcom
inc
dec
cwtl
or
jg
stc
mov
arpl
dec
jo
lock
push
cltd
push
adc
ret
add
sbb
sahf
arpl
aaa
popf
xchg
sub
dec
pop
pop
push
lods
icebp
fdivs
je
cmpsb
push
xchg
out
or
jp
dec
int
cmp
xchg
push
add
fdivr
add
mov
ret
and
sbb
mov
fisttpl
sahf
xor
add
add
or
nop
mov
dec
fs
stos
loope
push
adc
shll
add
push
mov
adc
cmp
dec
add
ficoml
or
lahf
sbb
mov
mov
pop
shlb
sarb
ret
test
int
add
in
dec
xchg
mov
adcl
mov
into
xchg
outsb
push
cmpsb
lret
push
in
into
mov
jecxz
cltd
icebp
ret
mov
adc
filds
imul
jne
push
popf
stc
jae
cmpsb
fwait
mov
adc
lods
cmpsb
adc
mov
data16
mov
iret
gs
hlt
icebp
rcll
jne
cmp
out
jecxz
aas
mov
mov
lods
aaa
dec
or
mov
stos
mov
mov
dec
add
scas
popa
mov
test
xor
out
insl
int
mov
pop
into
mov
push
sbb
mov
test
mov
sub
mov
dec
scas
out
push
pop
adc
insb
ffreep
add
and
mov
outsb
testb
test
imul
push
mov
ss
repnz
inc
ret
roll
pusha
or
in
fwait
push
sub
arpl
cmp
lahf
and
mov
call
repnz
sub
and
jae
movsb
sub
movb
push
mov
scas
jae
out
lret
inc
test
dec
movb
inc
movsl
test
push
and
test
dec
or
xor
sub
pop
push
mov
bound
dec
sbb
or
loope,pt
fs
scas
mov
inc
push
in
in
sti
inc
test
cli
in
cmpsl
repz
push
stos
imul
jp
xchg
fdivs
sub
push
mov
xor
es
adc
xchg
mov
jl
and
mov
imul
mov
jnp
loope
xchg
xor
push
stc
mov
push
jne
add
jp
shl
ficoms
or
cs
push
rorl
push
cld
and
xor
jb
popf
repnz
xchg
cmp
push
aaa
out
scas
dec
js
push
sbb
sbb
push
xchg
dec
push
sbb
pop
jg
xchg
fadds
xor
pop
mov
jns
sahf
pop
push
mov
adc
es
cmp
add
scas
jb
mov
lret
sbb
roll
adcb
and
jecxz
aad
add
data16
das
inc
jb
bound
dec
pop
enter
cltd
jne
fdivl
js
jp
lcall
jl
arpl
imul
fdivs
sbb
push
and
push
into
sbb
ret
xor
mov
xchg
lret
mov
std
nop
or
sub
lods
subb
push
out
push
push
repz
das
sub
leave
cmp
enter
mov
inc
in
enter
push
addb
xchg
inc
or
adc
es
enter
xchg
fsubr
aaa
push
push
lret
pushf
sbb
xchg
mov
in
mov
test
cmp
adc
pop
in
dec
and
clc
mov
cmp
add
xor
lds
cmp
outsb
and
ljmp
lar
mov
lea
addr16
cmp
jne
call
scas
js
icebp
call
or
fs
mov
jge
pusha
and
mov
cmpb
leave
sbb
or
rcrl
xchg
mov
and
rcll
xor
push
daa
mov
sahf
mov
cltd
in
cmp
sub
add
cld
mov
std
jg
add
std
call
jl
sbb
idivb
sub
std
mov
pop
std
jmp
sub
call
loope
sti
sahf
scas
sbb
dec
inc
pop
rcrb
pop
pop
ss
outsl
add
xchg
xchg
aas
enter
fists
cmpsb
lds
jmp
mov
mov
leave
addr16
pop
mov
cli
stos
sub
xor
imul
lods
lcall
inc
movsl
sti
aam
mov
sub
outsl
mov
lret
mov
mov
mov
jne
pop
sub
xor
clc
in
mov
outsb
ljmp
repnz
add
jbe
push
lea
fst
mov
xchg
inc
add
add
pusha
or
gs
inc
xlat
push
xlat
mov
loope
shlb
mov
pop
insb
inc
lret
and
and
pop
adc
dec
adc
pop
mov
out
call
dec
fstpt
repnz
inc
jb
jmp
xchg
fsubrl
jns
iret
lock
jns
mov
sysret
jbe
jl
xor
fwait
addps
pop
out
std
repnz
out
lock
push
mov
ljmp
dec
rorl
jg
pushw
into
fistpl
or
aam
jmp
or
adc
add
imul
sub
es
fistpl
je
jecxz
addl
and
cmp
nop
or
mov
sub
aad
or
imul
xchg
jp
shlb
pop
xor
jg
jo
adc
shrb
mov
inc
jnp
adc
mov
inc
stos
rolb
jmp
mov
push
xorl
inc
arpl
ds
inc
shl
adc
jo
push
jno
jnp
xor
inc
fcmovnb
pop
mov
ss
mov
push
sbb
lret
mov
pushf
outsb
jo
ret
outsb
fdivrl
shrb
shr
jo
das
pop
cmp
cmpb
cld
xor
pop
mov
jns
fstpt
icebp
mov
sbb
pop
clc
gs
aad
pop
es
mov
mov
ret
xor
enter
cltd
addr16
adc
add
sti
mov
cmp
xor
push
inc
lods
inc
or
jae
mov
sbbb
pusha
orb
mov
or
hlt
sub
dec
and
lea
aas
lret
cmp
pop
stos
adc
imul
push
test
das
inc
xor
lcall
repnz
test
in
adc
in
mov
lret
sub
inc
sub
scas
jg
jle
fwait
aas
addr16
or
add
pop
adc
data16
add
nop
cmp
fwait
jmp
nop
mov
or
and
add
imul
lds
add
inc
dec
pop
xor
popf
mov
xor
ljmp
push
adc
jge
jne
and
add
icebp
cltd
adc
int
ret
pushf
inc
pop
or
mov
mul
testl
dec
icebp
mov
push
andl
mov
call
pushf
arpl
pop
dec
arpl
enter
bnd
mov
xchg
push
addb
pushf
or
clc
mov
dec
fmull
xchg
push
dec
xor
sbb
adc
repnz
pop
leave
insl
pop
adc
sub
jp
pop
xchg
xor
sub
inc
out
sbb
imul
ljmp
and
repnz
movsb
outsb
mov
les
jno
aam
sbb
movsb
xchg
or
xor
pushf
mov
shrl
mov
leave
cmpsb
pop
mov
inc
push
push
mov
iret
out
pop
clc
push
add
sarl
jge
or
pushf
in
add
mov
or
add
push
mov
jae
xchg
inc
aam
push
stos
sbbb
loopne
sahf
mov
call
mov
pop
loope
stos
inc
clc
mov
sub
adc
xor
sub
test
gs
jp
and
aam
and
lret
sub
sti
mov
in
cmp
orb
sub
cmp
push
cmpsl
cli
mov
ret
jl
imul
xchg
pop
cmpsl
inc
outsb
or
scas
push
xchg
out
mov
push
mov
mov
aaa
jp
and
rcr
cmp
mov
rcl
adc
push
mov
mov
xchg
roll
jle
into
test
scas
jns
lods
ljmp
nop
cwtl
movsb
sbb
dec
test
add
or
dec
jmp
in
icebp
xchg
arpl
loop
xchg
mov
inc
xor
xor
mov
dec
cmc
pop
in
pop
cmpsl
ja
xchg
in
cs
popa
in
sbb
lds
fbld
aad
cmp
pop
mov
mov
jns
and
sbb
das
mov
int3
cli
jae
xchg
push
jp
cmp
jo
xor
jb
mov
dec
push
inc
andb
sar
sbb
scas
sbbb
jno
jae
and
test
fmuls
cli
mov
pop
push
mov
rorl
inc
xchg
repz
inc
jmp
test
jle
out
mov
jns
and
fs
jno
xchg
imul
push
push
sub
push
in
push
pop
outsl
out
push
sub
xor
mov
xchg
jl
push
loope
mov
pop
fmuls
out
push
ds
xchg
mov
repnz
ljmp
jns
andl
push
les
jbe
mov
and
xlat
pop
sub
mov
rclb
pop
test
stc
rcrb
popa
fistpll
scas
das
stc
adc
adc
xchg
subl
divw
pop
dec
je
fbstp
repnz
pop
les
roll
out
xchg
jne
add
cmp
enter
clc
mov
shll
mov
push
adc
lcall
stc
aad
cmp
addr16
es
xchg
ljmp
jae
push
inc
fldcw
mov
movsl
inc
mov
or
into
arpl
hlt
out
cmpsb
dec
mov
loope
add
hlt
mov
imul
out
scas
fsts
jno
std
dec
loop
sbb
ficoml
add
inc
stos
div
mov
mov
leave
push
or
pop
data16
ds
int3
jle
and
outsl
cmp
dec
cli
imul
cmp
sub
das
in
aad
ljmp
fdivl
stos
mov
add
and
test
leave
rorl
jnp
add
jns
sahf
out
sar
lcall
in
fistpll
or
ret
mov
gs
or
and
dec
adc
leave
test
dec
xchg
push
adcl
xor
pop
adc
cmp
push
push
clc
std
outsb
mov
push
push
cld
les
ret
inc
mov
mov
stos
push
sti
or
cmp
in
fcmovnbe
sti
lock
fisttpl
pop
fldt
nop
mov
mov
adcb
inc
add
xchg
jge
pop
add
mov
sbbb
das
out
scas
leave
inc
mov
push
and
push
xor
adc
xor
test
dec
cmp
mov
mov
stos
dec
repz
mul
lods
leave
and
addr16
enter
ret
icebp
lret
mov
pop
jp
sub
icebp
pop
pop
dec
ret
mov
jg
sbb
cmp
jo
sbb
adc
push
jo
ljmp
jnp
xchg
add
and
xlat
daa
ds
dec
imul
stos
dec
push
js
pusha
cltd
lcall
mov
mov
push
das
cmp
xor
cld
inc
or
jmp
imul
xchg
mov
add
xchg
outsb
sub
push
xor
and
out
push
mov
push
inc
push
fcomi
xlat
and
sub
dec
pop
xor
lock
addr16
es
mov
divl
aas
cmc
lds
enter
sbb
dec
iret
ret
lds
mov
test
pop
aas
mov
adc
into
stos
cmpsl
fmuls
dec
xchg
sub
or
clc
inc
mov
outsb
rcl
add
push
rcrb
cli
aaa
insl
dec
cmpb
sarl
das
mov
sbb
pop
push
addr16
fcmovnb
repnz
xor
pop
sub
and
adc
push
jle
fldcw
mov
cmp
pushf
xor
push
fisubrs
rcrb
xor
test
subl
jo
sub
push
pusha
lock
ss
add
ss
adc
clc
add
ljmp
inc
mov
sbb
test
inc
in
dec
inc
or
repz
adc
and
xchg
cmp
inc
jecxz
or
or
nop
sbb
inc
push
mov
mov
jo
xor
ds
mov
cmp
into
outsb
sub
popa
daa
dec
sub
in
cmp
pop
les
sbb
or
xchg
js
adc
add
push
cmp
stos
pop
aas
fs
outsb
cmp
adc
lock
mov
push
out
inc
shlb
lods
in
pop
call
jb
pop
xor
add
sub
xor
mov
movsl
mov
jae
mov
xor
in
push
dec
ficoml
aaa
push
daa
mov
imul
pop
fiaddl
scas
jecxz
bswap
mov
sub
mov
in
daa
pop
aas
mov
lods
sahf
xchg
push
loop
jbe,pn
movsl
fwait
mov
insl
test
sbb
xchg
dec
cmp
outsl
mov
push
push
cmp
jg
sarl
in
pop
loopne
lods
leave
push
icebp
jmp
outsb
and
loope
pop
and
popf
fmull
rclb
into
fildll
es
stos
ret
int
pop
fcom
xor
ds
inc
pusha
jne
lret
push
dec
or
push
cs
hlt
sub
pop
push
sbbb
jne
addl
mov
gs
loop
mov
fdivr
adc
mov
sbb
mov
mov
jo,pn
mov
push
imul
out
cmpl
adc
dec
out
scas
aad
cld
dec
push
pop
lahf
dec
sub
leave
mov
in
jne
rorb
cld
cmp
insl
insl
inc
stos
shlb
add
pop
mov
and
jle
popf
shll
push
insl
out
xor
addr16
cli
sbb
daa
cltd
mov
sbb
push
sub
mov
lods
push
out
xchg
outsl
idiv
repnz
dec
test
and
lret
roll
dec
push
cmp
fimuls
xchg
mov
and
jne
lahf
xor
out
repnz
xchg
xchg
and
inc
out
addl
or
jl
pop
cmpsb
sbb
fisttps
das
jmp
call
dec
mov
ljmp
lcall
mov
stos
sbbl
mov
lea
aad
lock
ret
add
sbb
jb
mov
sub
mov
xor
stc
mov
pushf
sbb
int3
push
mov
or
lret
push
adc
push
out
push
fwait
jb
mov
lock
mov
pop
insl
dec
lock
clflush
mov
icebp
cmpsb
mov
lahf
out
sbb
idiv
std
movl
test
sub
sbb
aaa
xchg
sub
add
and
insl
adc
repz
icebp
incl
xor
or
in
inc
insl
pop
push
dec
dec
aas
data16
repnz
out
lahf
in
xchg
cltd
sti
add
fucom
negl
jl
mov
loopne
shlb
into
bound
icebp
shll
xor
xchg
jb
cmp
pop
add
inc
xor
int
cmc
adc
xor
insl
add
jp
fs
les
rorl
dec
add
ret
add
jp
enter
pop
jbe
jb
sbbl
sbb
divb
sbb
cmp
sbb
call
cmp
or
cs
mov
sbb
les
mov
js
xchg
scas
or
ret
test
mov
or
shlb
arpl
mov
or
dec
fldln2
xor
aad
mov
pop
clc
es
iret
out
adc
nop
jl
xchg
lods
lds
bound
imul
cmpb
int
pop
push
mov
xchg
into
adc
iret
shll
in
cmp
xchg
add
pop
out
mov
pop
in
adc
idivb
pop
int
daa
cli
into
imul
aaa
jecxz
outsl
cmp
mov
xchg
pop
jb
xchg
lods
xor
jge
push
jno
outsb
pop
cmp
int3
es
inc
mov
push
xchg
test
ret
hlt
mov
push
xor
xor
scas
test
mov
push
sub
jecxz
icebp
or
add
adc
out
sbb
sub
fcoms
mov
push
jecxz
leave
ror
lea
clc
xor
mov
pop
shlb
inc
inc
mov
xchg
out
lock
data16
jge
fdivrs
xchg
fisttpll
push
ljmp
ljmp
push
outsl
push
pusha
call
pop
pop
es
mov
dec
rol
adc
xor
or
sar
stc
adc
roll
loope
clc
int
pop
xor
stos
pop
ja
pop
xchg
loope
lret
inc
jmp
push
popf
fidivl
lahf
aam
pop
jno
lret
nop
cmc
dec
jns
xor
pop
dec
lods
arpl
xlat
xor
lock
dec
dec
push
mov
sub
dec
test
sbb
or
cwtl
test
inc
push
mov
adc
add
in
mov
xor
dec
jne
inc
pop
or
lcall
adc
scas
and
insl
scas
jns
dec
sbb
aam
cmc
dec
mov
add
popf
hlt
or
ss
jo
jl
inc
scas
push
inc
out
fcompl
sbbl
dec
shr
inc
pop
int
mov
fwait
out
mull
pushf
mov
out
jns
test
mov
push
orl
add
test
pop
rcr
idivb
adc
addr16
cwtl
cmp
cmp
inc
adc
and
test
inc
out
sbb
test
stc
lcall
aas
addr16
dec
push
inc
call
cmpb
push
or
in
jmp
scas
fstl
mov
add
jnp
fists
adc
push
and
mov
aas
xorb
ret
mov
inc
push
jle
push
clc
cmc
dec
adc
jmp
mov
into
dec
cwtl
std
pop
iret
pop
cmp
sub
jecxz
movsb
or
push
push
mov
xor
jne
adc
rcrb
int
sub
adc
mov
fcoms
lea
jmp
lea
es
mov
push
cltd
js
fnsave
lds
jno
into
inc
xchg
mov
data16
iret
scas
aaa
imull
pop
and
ljmp
outsb
xor
sbb
dec
out
data16
dec
pusha
sbb
xchg
mov
pop
push
sbb
lahf
jmp
adc
test
xorb
stc
mov
lahf
cltd
lods
fcmove
or
lret
mov
xchg
push
jp
and
lods
inc
xor
test
ds
xchg
in
loopne
jecxz
mov
mov
cmp
in
inc
mov
xchg
inc
fisubrl
sub
jg
jle
fcomps
in
fs
inc
das
stc
in
xchg
scas
shr
in
sub
stc
xchg
int
in
gs
movsl
push
sub
jo
fs
jmp
mov
orb
jns
mov
adc
inc
aaa
mov
mov
cmp
test
sub
mov
cmp
jb
xor
mov
shrl
ret
push
dec
jb
mov
neg
std
out
add
lahf
adc
pop
sbb
pop
fldl
inc
ljmp
push
sbb
int
imul
enter
jmp
loopne
sti
xor
push
jbe
jae
pushf
das
push
pop
scas
push
lds
sub
push
cmp
aad
cmp
lcall
lock
imul
jl
mulb
hlt
mov
cmovge
pop
aaa
add
repnz
mov
sbb
stc
or
aaa
jge
clc
in
xchg
or
add
leave
and
inc
xchg
dec
adc
bound
js
adc
test
bound
movl
xchg
out
cmp
add
lret
inc
jge
div
xchg
add
shrl
mov
jl
in
jle
aad
dec
push
and
xchg
mov
imull
imul
mov
fmull
push
test
cwtl
sbb
push
cmpsl
add
icebp
jno
add
jnp
shr
nop
adc
js
js
dec
popf
fcomps
cmpsl
pop
shlb
jo
clc
imul
orl
sub
pop
loopne
cwtl
add
push
cwtl
lods
out
test
xorl
push
cmc
inc
sub
push
repnz
jae
inc
jl
loope
shl
popa
adc
xchg
mov
unpckhps
xchg
movsl
cld
ss
cli
xor
inc
rcrl
inc
xchg
cmpsb
inc
xchg
pop
in
mov
sbb
stc
lds
jmp
pop
loop
jae
loopne
cmp
scas
lcall
jge
xlat
xchg
testb
xor
lcall
lods
sarb
shll
and
ja
int
iret
jmp
mov
test
and
cltd
icebp
frstor
push
out
ficoml
data16
adcb
idivl
addr16
mov
iret
cmp
addr16
add
add
push
test
sbb
daa
dec
out
xchg
inc
xchg
xchg
outsl
or
pushf
and
lds
scas
mov
outsl
xchg
repz
pop
sbb
jne
bound
repnz
xchg
iret
mov
iret
cli
int3
dec
jnp
jle
jnp
pusha
xchg
int3
xchg
dec
mov
cmp
imul
add
std
or
dec
xchg
loop
jp
mov
pop
mov
fmull
jns
test
lods
cmp
push
aas
les
push
xchg
xchg
sub
jae
int3
test
stc
ds
add
rorb
das
in
test
xchg
xor
push
movsb
or
loopne
rcrl
adcl
mov
lret
sbb
lods
inc
push
inc
mov
push
int3
push
mov
jbe
push
jo
xchg
xor
sub
cmp
aam
cs
pop
jns
cld
push
jge
rcrb
pushf
xchg
mov
cwtl
roll
jge
mov
fists
cmp
jle
add
jge
scas
push
enter
xlat
call
pop
pusha
std
dec
jo
xchg
fisttps
mov
jns
jle
enter
jmp
push
pop
adc
ret
repnz
inc
mov
add
xor
bound
cwtl
xchg
js
mov
mov
sbb
mov
jo
stos
out
xchg
inc
push
or
callw
dec
std
push
icebp
sbb
lret
add
xor
inc
daa
and
mov
sub
cmpsl
insb
and
xchg
js
and
call
or
pushf
sbb
mov
sub
lock
pop
or
pop
jmp
xor
outsb
xor
insb
stos
and
lcall
mov
fbld
push
mov
sbbl
imul
push
xchg
cltd
add
xor
sbb
xor
push
and
es
jo
test
pop
sbb
adc
mov
in
es
sub
adc
pop
jbe
mov
push
pop
ss
xor
and
mov
jg
shlb
ret
iret
popa
jg
or
test
dec
pop
mov
clc
outsl
cltd
cmpl
iret
xor
fmul
pop
std
subl
push
push
in
imul
and
ret
xchg
mov
lret
cld
fdivr
mov
cmpsl
jno
sbb
jb
sub
cmp
mov
jp
and
xchg
cwtl
add
mov
mov
nop
pop
lods
or
out
lcall
fisubl
in
cmpsb
xorl
dec
ret
sarb
xchg
xchg
call
xchg
mov
popa
mov
xor
push
pushf
ret
jb
sbb
lea
pop
lock
add
iret
lret
and
add
jb
mov
lahf
mov
jg
push
int
push
adc
push
lret
push
mov
cmp
lret
inc
rcrb
push
cwtl
adc
out
scas
aad
imul
push
mov
mov
mov
inc
je
cmp
cmp
mov
xor
xor
add
mov
and
outsb
cmp
int3
dec
sbb
cmpsb
out
push
in
xor
scas
or
jns
xor
sub
test
lock
xchg
pop
jne
adc
stos
enter
out
rolb
mov
icebp
xchg
xchg
jmp
addl
jb
dec
out
shlb
fbstp
mov
xor
adc
scas
pushf
ret
aad
or
mov
mov
loopne
pop
mov
cmp
mov
push
sbb
xchg
mov
cmp
push
outsb
mov
inc
mov
xchg
lret
andb
cmp
stos
imul
call
ret
outsl
mov
xchg
xlat
loopne
cmp
jg
xchg
add
mov
pop
mov
repnz
shll
ss
test
jmp
mov
sub
int3
cmpsl
xchg
push
cmp
iret
adc
mov
adc
inc
fcoml
repnz
pop
into
cmp
loopne
mov
cli
hlt
stc
fnsave
mov
cs
lea
and
jns
call
pop
xlat
pop
stos
cli
xchg
movsl
push
xor
aaa
add
sbb
cs
test
and
repnz
cmp
sub
fcoms
inc
cld
data16
fimuls
je
mov
out
out
pop
adc
sti
jge
clc
cmp
iret
xchg
add
dec
jnp
mov
ret
rcrl
xor
mov
xchg
cs
mov
sub
and
inc
mov
cmp
xchg
aaa
adc
cmp
aam
sbb
push
mov
out
pop
popf
jae
rorb
in
sahf
pop
inc
fidivrs
arpl
mov
dec
scas
adc
dec
sbb
and
loope
pop
mov
inc
mov
or
loop
dec
jg
pop
pusha
dec
ds
repnz
adc
add
inc
lods
adc
jge
inc
shr
test
xchg
pop
and
nop
addr16
mov
pop
scas
jno
jmp
push
or
test
hlt
popl
sbb
arpl
cmpsb
int
mov
mov
aam
xchg
call
inc
out
mov
adc
stos
push
push
add
adc
inc
ds
mov
pop
pop
adc
lods
mov
pop
rorl
lods
sbb
mov
sbb
iret
or
and
jmp
adc
aad
jmp
bound
lods
adc
adc
mov
sbb
sub
dec
sbb
and
mov
jecxz
out
mov
clc
in
sub
mul
cli
insl
sub
jo
notl
pop
jp
out
les
fxch
mov
add
add
mov
icebp
test
mov
or
or
pop
dec
aaa
les
aam
rolb
xchg
andb
mov
pop
leave
ret
adc
mov
xor
std
repnz
xchg
cmp
sub
dec
cmp
es
std
jp
dec
xor
imul
pminsw
pop
jl
jl
in
fcoml
outsb
dec
and
in
mov
sbb
xchg
xchg
or
xorb
xchg
ljmp
sub
inc
mov
xchg
loopne
test
test
repz
xchg
imul
fsub
xchg
std
pop
mov
push
cmovp
imul
aam
xchg
je
sti
or
es
pop
test
insl
cld
and
xor
std
cmp
shr
das
mov
dec
stos
cmp
cs
push
js
jno
or
call
dec
pushf
and
sbb
ret
imul
dec
inc
idivb
pop
push
imul
pop
sbb
and
adc
imul
data16
sub
sub
and
add
push
jp
add
jns
movsl
repz
sub
adc
dec
repnz
sub
repnz
xor
pusha
outsl
pop
int
cmp
sarb
and
mov
or
xor
cli
cmp
inc
mov
imull
js
out
je
sbb
sub
arpl
and
or
ljmp
outsl
pop
imul
rclb
fidivrl
cmc
std
xchg
xor
ss
insl
add
and
and
cwtl
repz
fwait
jno
jb
or
ret
pop
cmpsb
rcll
aaa
aad
popf
je
scas
xchg
out
pop
lret
xlat
cld
pop
xor
xchg
fdivrl
ja
jle
in
cld
bound
ds
test
mov
icebp
les
jmp
mov
and
dec
data16
sub
add
lods
pop
or
cwtl
xchg
dec
and
sbb
sbb
push
cwtl
lea
adc
add
addl
mov
aad
hlt
push
jnp
adc
mov
push
cmc
test
jo
mov
cmpb
pop
cmp
andb
js
sub
mov
pop
xchg
aam
xchg
mov
rol
or
or
aad
outsb
sti
es
cmp
jp
mov
dec
pop
jle
add
and
cltd
xor
aad
icebp
mov
sub
adc
push
xchg
mov
cmp
mov
inc
imul
shlb
xchg
aas
mov
inc
jge
pop
pop
out
stos
ret
xchg
lcall
push
loop
mov
push
test
push
xor
into
adc
test
fwait
pop
cmp
push
push
adc
cmpsl
popf
inc
cmpsl
dec
mov
mov
out
js
sbb
outsl
lret
cmp
pop
cmpsl
and
mov
ret
rolb
rorb
sbb
mov
jg
jl
in
fimull
or
in
mov
daa
adc
in
lods
push
scas
adc
dec
lods
add
fsubrs
sub
cltd
fs
or
or
and
mov
mov
and
mov
mov
mov
in
movsl
dec
test
jne
xor
adc
shl
test
mov
inc
fcoml
push
cli
sub
addr16
sbb
int
test
aam
mov
jmp
push
aas
or
pushf
mov
add
ljmp
insb
xor
jbe
arpl
rorl
inc
cmp
pop
cmp
sub
out
sub
les
lahf
sub
lock
stc
mov
ret
pop
xorl
sahf
sahf
mov
push
xorl
pop
pop
in
ljmp
lahf
dec
push
sub
pop
cmc
pusha
cmp
stos
jle
push
fimuls
out
mov
int
pop
stos
and
push
jae
sbb
cmp
push
testl
popa
and
cmpsb
outsl
fidivrs
daa
and
jbe
popa
imul
gs
mov
outsl
cmpsl
add
repnz
or
es
mov
xchg
xchg
shlb
lret
mov
stc
std
push
movb
shll
dec
iret
fisubrs
xchg
xchg
cmp
mov
mov
push
sbb
sahf
adc
stc
lods
movsb
out
dec
inc
pop
cs
popa
sahf
dec
arpl
sahf
jo
and
lods
popf
rorb
mov
addb
pushf
xchg
pop
sbb
xchg
xor
sbb
mov
adc
xchg
and
addb
push
cmp
cmp
fimull
push
icebp
loop
scas
add
ja
mov
hlt
out
imul
test
jne
pop
adc
adc
xchg
jno
sbb
xor
aam
imul
pop
jnp
push
int
stos
orl
or
arpl
mov
inc
sub
ds
mov
fimuls
add
push
hlt
mov
inc
decl
dec
jnp
insl
lock
mov
mov
adc
lret
fcompl
xor
add
mov
pop
sti
cli
pop
outsb
jnp
aas
jo
jle
sbb
out
hlt
mov
notl
rcrb
insb
lea
cmp
mov
cmp
xchg
adc
ret
xchg
mov
mov
and
lcall
adc
jp
pop
or
jg
mov
jb
stc
stc
pop
test
repz
arpl
or
rorl
push
insb
sub
pop
jns
jg
mov
out
xchg
loop
mov
xor
xchg
in
popf
ret
or
sub
pushf
and
inc
adc
lahf
test
pusha
les
and
decl
xchg
insl
fbld
xor
xchg
fstpl
mov
xlat
clc
sub
xor
jp
notb
mov
pop
subb
jnp
pop
mov
mov
stc
imul
xorl
or
cmp
and
push
adc
dec
dec
push
repz
mov
pop
ljmp
cld
jmp
lods
fucom
negl
cmp
cmp
es
notb
fwait
and
popf
fwait
pop
jp
neg
xchg
pop
push
cwtl
fwait
cltd
call
mov
out
ret
stc
inc
test
addr16
cmp
test
int3
adc
arpl
pop
inc
jb
cmp
test
or
hlt
test
pushf
les
lahf
add
test
xor
loop
xor
test
xchg
lods
lcall
pop
js
mov
sub
mov
mov
jns
lret
insl
cs
add
out
lock
jp
shlb
je
sti
dec
arpl
dec
dec
push
xchg
cld
mov
mov
adc
movsb
sub
xor
mov
cwtl
adc
call
inc
dec
mov
shrb
push
movsb
jle
sti
inc
cltd
dec
or
xor
dec
mov
int
daa
lock
inc
scas
or
xor
scas
adc
xchg
inc
sbb
xlat
inc
loopne
push
mov
pop
add
sbb
pop
mov
add
lods
insb
jp
mov
sbb
xchg
adc
xchg
sahf
adc
adc
pop
adc
pop
push
mulb
push
jecxz
mov
add
mov
ljmp
sbbl
popf
test
or
and
jmp
test
insl
xor
popf
push
jbe
rorb
insb
lea
pop
mov
cmp
stc
sub
dec
push
mov
rcll
adc
mov
imul
mov
les
loope,pt
mov
movsl
adc
dec
pop
mov
pop
out
cmpsl
out
or
pop
aad
test
cmp
xor
adc
lds
sub
insl
jb
xchg
bnd
mov
addl
loope
in
adc
mov
fmuls
fisubs
push
mov
out
mov
in
in
jbe
daa
fwait
xchg
and
xchg
in
outsl
push
sub
adc
sahf
adc
or
subb
inc
push
in
fldl
js
mov
rorb
cmpsb
dec
fmuls
or
imul
je
jle,pn
sbb
add
mov
mov
outsl
in
sub
jecxz
xchg
jb
xchg
nop
pop
and
in
test
addr16
xorb
inc
mov
sub
insl
fildll
gs
xchg
pop
and
sti
aaa
dec
scas
ret
loop
sti
insb
adc
mov
insl
stos
dec
dec
xchg
fwait
bound
jmp
out
lods
daa
adc
sub
jmp
pop
sbb
add
xchg
xchg
add
push
movsl
scas
clc
lahf
fwait
dec
xchg
pop
fnsave
lret
das
ror
nop
inc
inc
sub
lods
fisttpl
push
mov
cmpl
lds
shrb
pop
pop
fisubrl
outsl
cs
movl
arpl
adc
jge
mov
or
in
pop
xor
out
xor
ret
dec
jg
scas
mov
outsl
mov
sbb
push
mov
lret
arpl
imul
sarb
add
mov
jecxz
adc
push
cld
add
mov
xlat
jno
and
ss
cmp
push
scas
mov
cmpsb
dec
lods
xlat
mov
insb
out
fisubs
xor
jb
pop
lret
and
inc
jle
hlt
in
subb
mov
int
movsl
mov
or
dec
outsl
sbb
mov
or
and
add
cmp
xor
sub
ljmp
data16
dec
in
pop
xorb
pop
pop
or
ret
incl
subl
add
pop
cmp
or
icebp
cmp
push
stc
adc
push
loop
jmp
movsb
and
xchg
xor
data16
out
inc
out
daa
into
sub
scas
fidivrl
pop
popf
or
lahf
jle,pt
dec
outsl
cmp
hlt
out
and
sub
or
dec
sbb
mov
ficompl
fidivrl
pop
add
scas
pop
popf
aaa
inc
inc
sti
push
popf
mov
lock
push
in
mov
cltd
xor
mov
pop
fldenv
sbb
dec
rol
sti
nop
test
xlat
int3
xor
mov
cld
movsb
jne
push
notb
out
fdiv
mov
jnp
stos
cmp
cmp
clc
xchg
mov
stos
push
sarb
push
aad
in
and
jae
push
fsubrl
inc
push
push
push
aas
add
outsb
pop
sub
loope
lock
les
rcll
std
scas
inc
test
in
mov
jg
in
scas
call
out
jmp
xchg
aas
cli
addb
cmp
ljmp
dec
cld
gs
lea
jbe
mov
sbb
jge
xor
xor
or
add
xlat
cmp
push
sarl
loopne
lret
pop
ud2
pop
inc
xchg
pop
mov
stos
orb
adc
movsl
or
xchg
ret
scas
and
cmc
fwait
jnp
fdivr
lahf
jo
inc
arpl
in
imul
test
mov
dec
movsb
test
dec
xchg
add
outsb
or
data16
filds
flds
add
jg
jne
jge
jp
fsubs
sub
mov
lahf
fwait
adc
sub
out
fs
in
lret
xor
fwait
jb
in
xor
cld
mov
push
mov
ret
cli
dec
loope
xchg
xlat
clc
cmpsl
pop
out
pop
ljmp
or
inc
push
test
and
mov
push
pop
and
lahf
std
dec
jae
push
movsl
sub
stos
movsl
jno
ljmp
shrb
add
mov
add
sahf
mov
adcb
and
dec
mov
je
out
fisubs
jmp
push
cmp
mov
jge
jge
std
sub
add
rclb
sub
scas
jnp
out
enter
xor
lret
jge
cmpb
ss
aam
test
xchg
mov
outsb
arpl
mov
sbb
mov
sub
aam
jno
fdivs
add
xchg
sbb
add
adc
int3
lahf
fstpt
ja
scas
mov
insl
out
loope
push
and
sbb
cmp
out
ds
push
stc
int
xchg
inc
aas
adc
stos
or
inc
int3
popf
insl
sbb
lea
xchg
popa
stos
pop
pop
dec
adc
movsb
imul
cmp
scas
and
bound
dec
mov
xor
mov
rcrl
dec
mov
sbb
out
mov
pop
sub
xor
sarb
push
add
insl
loope
or
aad
cmp
test
xor
repnz
add
repnz
sbb
jg
enter
jae
adc
dec
xchg
std
sbb
add
add
add
mov
sub
cmpsl
imul
leave
adc
jo
cmc
fildl
mov
mov
inc
sti
xor
mov
imul
xorl
inc
sub
jmp
repz
inc
pop
inc
mov
mov
lods
jp
push
ljmp
orb
cmp
push
lahf
inc
lahf
fimuls
jecxz
or
in
pop
push
fiadds
cmp
or
xorb
lods
enter
int3
dec
dec
stos
in
mov
jl
push
hlt
movsb
cwtl
push
les
sub
add
add
in
xor
mov
scas
jno
adc
add
jp
faddl
sub
or
dec
sti
sbb
adc
push
lea
xor
or
sub
cmpb
imul
addr16
ja
sbb
fstpt
inc
sbb
mov
pop
xchg
shl
iret
xor
lret
iret
xchg
movb
lods
shr
aam
pop
add
mov
mov
inc
jmp
out
adc
in
sub
cmpsl
adc
insl
lea
in
pop
test
xor
dec
or
inc
mov
sbb
loopne
pop
adc
mov
add
ds
jns
jmp
dec
mov
gs
xor
jns
rcll
mul
xchg
mov
in
mov
add
dec
cmp
pop
pop
mov
fnstcw
aaa
push
adc
repnz
shrl
loopne
int
push
xchg
pop
aad
sbb
int3
test
dec
dec
div
ret
in
jnp
fists
xchg
mov
jne
ss
popf
mov
or
lods
jg
lcall
jbe
test
dec
pushf
filds
int3
mov
inc
mov
cmp
xor
ret
dec
jl
fsubl
jnp
jnp
lcall
int3
xor
sbb
ljmp
adc
cmpsl
jae
idivb
mov
adc
push
xor
popa
mov
xchg
fwait
fwait
dec
push
inc
add
jge
sbb
xchg
mov
xor
xchg
xor
shrb
loop
aaa
jmp
sbb
rclb
sbb
sahf
outsb
mov
shll
jmp
sahf
mov
das
xor
push
orl
out
dec
cwtl
sub
mov
mov
sti
inc
lret
je
cmp
rclb
add
loope
inc
lds
jo
test
fldln2
adc
and
add
mov
push
clc
loope
dec
inc
enter
inc
std
stc
enter
aam
das
inc
jo
xor
aas
loopne
jp
rcll
push
cltd
mov
in
xchg
popa
inc
out
xlat
sub
dec
cmp
jno
adc
sub
loopne
pmulhw
loopne
jg
mov
lret
in
imul
out
cwtl
or
mov
push
sub
push
int
pop
mov
stos
pop
adc
enter
adc
mov
adc
sbb
int
dec
iret
push
ja
inc
popf
and
or
sqrtps
pop
mov
aas
dec
inc
arpl
push
xbegin
jl
stos
cmp
push
jecxz
and
dec
mov
xor
jle
js
and
mov
dec
fstl
cmp
push
out
in
scas
dec
xchg
inc
jle
inc
out
xor
add
pusha
faddp
mulb
lcall
fucomip
adc
mov
pop
loope
adc
loopne
mov
push
cmpsl
xchg
adc
push
icebp
das
pop
push
jle
mov
les
sahf
push
insl
adc
pop
movsb
lock
push
xor
imul
imulb
mov
pop
sub
dec
xor
fists
inc
pop
aam
out
bound
ret
mov
mov
nop
dec
jne
and
push
sub
jmp
fwait
icebp
cmp
mov
ds
fcmovu
add
lcall
stos
mov
aam
or
out
dec
aas
rcrb
xchg
arpl
out
add
jo
pop
ret
inc
fnstcw
dec
pop
sub
add
bswap
adc
sti
push
pop
xor
in
enter
or
int3
lds
shrl
addr16
shlb
mov
imul
xchg
xor
fildll
in
pop
lea
pop
cmpsl
enter
leave
imul
shll
mov
push
xorl
mov
lock
out
inc
pop
and
mov
leave
js
sub
imul
outsb
mov
mov
idiv
in
arpl
js
aaa
cld
mov
xchg
or
inc
inc
xor
jle
mov
push
jae
mov
cmc
bound
jmp
jge
aaa
jp
aad
jae
mov
add
mov
sbb
cmpsb
adc
and
test
shlb
out
outsb
outsl
cmp
pop
adc
dec
xchg
cmp
sahf
lret
add
inc
dec
jmp
cmp
jno
mov
in
cwtl
mov
std
test
popf
adc
inc
push
sbb
jne
je
mov
add
push
dec
sub
mov
sub
sbb
imul
dec
addr16
sub
test
jnp
add
into
xchg
icebp
jp
in
or
push
outsb
insb
in
test
cmpsl
test
and
dec
lods
jnp
push
push
pop
rolb
mov
stc
mov
push
xchg
xchg
mov
sub
mov
sbb
ja
test
insl
xchg
sbb
add
mov
enter
loopne
lcall
mov
imul
mov
out
xchg
push
hlt
sahf
ds
daa
ret
lcall
push
sub
mov
push
mov
loop
push
outsl
sbb
mov
adc
push
lcall
mov
imul
cs
jp
int
adc
sahf
inc
inc
jo
push
bound
mov
stos
sbb
mov
and
pop
add
ljmp
or
jb
scas
imul
out
adc
lahf
and
clc
in
inc
cmpsl
push
fisubrs
add
outsb
dec
push
mov
ds
jp
add
mov
add
jno
shlb
popa
jae
pop
cmpsl
stos
and
jge
cmp
leave
push
sub
test
aaa
aam
xchg
lret
xchg
fldenv
mov
leave
pop
enter
out
push
es
icebp
adc
jecxz
push
adc
inc
add
inc
fldl
and
mov
enter
fldcw
testl
lods
loop
sub
test
fs
sbbl
movsb
lcall
pop
out
pop
gs
jp
mov
stos
sub
mov
clc
push
xor
xchg
xor
cltd
cmpb
xor
xor
adc
jbe
and
movsb
jge
hlt
xor
cmp
mov
mov
leave
lock
sub
cmp
inc
xchg
adc
mov
lds
push
mov
imul
shrb
movsb
outsl
gs
or
fnstsw
mov
xchg
sub
out
jmp
in
scas
movsb
cmpsb
sub
mov
stc
adc
sbb
in
jp
ljmp
jmp
push
fsubrs
into
jbe
cmpsl
or
sbb
cli
and
pushf
sahf
jl
xchg
xchg
push
jno
iret
inc
pop
insl
loope
stos
cvtsd2si
in
lahf
ljmp
cwtl
xchg
loopne
mov
push
dec
push
mov
xor
insb
jae
or
jg
inc
sub
add
inc
adcb
ds
jl
push
or
xor
test
pop
insl
sti
or
popf
jns
mov
mov
test
xchg
les
and
bound
pop
repz
mov
pop
xor
push
cmpl
mov
cli
push
in
push
lds
clc
and
push
imul
pop
sbb
adc
aad
lcall
mov
out
mov
test
rcr
cld
mov
mov
sub
jno
push
mov
add
cmp
xlat
add
vhaddps
shlb
pushf
lods
add
orl
inc
inc
mov
int
dec
cmp
pop
es
notl
pusha
into
pop
cmp
out
adcb
in
mov
in
inc
movsl
mov
dec
cmp
mov
push
mov
sub
loop
fiaddl
jmp
push
mov
mov
xorl
ljmp
pop
push
cmp
mov
roll
fldt
cmpsl
mov
cwtl
bound
sub
adc
clc
jecxz
ss
mov
mov
into
inc
pushl
xchg
inc
inc
repnz
lcall
mov
scas
mov
cmp
jbe
test
enter
xor
inc
sbb
jle
sub
mov
xchg
loopne
mov
fists
aaa
rcrl
cmpsb
movsl
xchg
cmp
xchg
and
jbe
push
lock
jecxz
mov
sbbb
scas
insl
or
mov
jmp
xor
pushf
rcl
aas
and
jl
jp
das
jno
addr16
icebp
push
dec
or
rorl
mov
cli
jmp
repnz
mov
jle
jno
mov
mul
rolb
adcl
enter
cmp
daa
ja,pt
mov
movsl
push
sub
movsl
sbb
pop
add
jecxz
into
popa
jl
in
mov
loope
mov
xchg
mov
and
mov
inc
ja
shlb
pop
xchg
pop
insb
fstl
mov
lret
cmc
and
inc
das
int3
cmp
push
gs
xlat
and
mov
aas
dec
arpl
imul
ret
cmp
push
mov
pop
aaa
jp
push
bound
adc
pusha
mov
mov
pop
shlb
sahf
xlat
push
dec
icebp
or
mov
clc
jmp
fstpt
test
dec
xor
rcrl
lock
mov
fistl
jb
lcall
ds
repz
push
lea
sub
into
orl
mov
incb
or
jne
mov
xchg
or
scas
clc
data16
js
test
mov
jbe
leave
rorl
sub
jmp
adc
mov
out
cmpsb
ss
mov
jae
and
sub
in
gs
or
and
daa
ja
cmp
pop
mov
or
mov
scas
loopne
xchg
cli
jp
inc
int
inc
cmp
xorl
adc
mov
fldcw
call
inc
sarl
in
mov
or
cmp
fistl
mov
lretw
cwtl
popf
jae
mov
subb
or
inc
fst
mov
push
bound
xor
mov
mov
jns
mov
dec
sub
and
aas
imul
dec
lock
mov
mov
into
mov
cmp
cwtl
pop
mov
test
push
push
aas
sub
push
push
mov
sub
enter
or
icebp
test
jnp
inc
lret
aam
mov
adc
jp
fildll
out
sub
cwtl
jns
xor
adc
mov
movsl
xchg
pusha
shl
in
adc
mov
jg
pop
or
and
clc
xchg
subb
inc
xchg
out
popf
repnz
mov
jecxz
pusha
push
dec
and
lret
inc
out
add
add
lock
arpl
xchg
imul
jno
loop
lcall
mov
fs
mov
jle
scas
sub
rcrl
dec
cmc
jnp
in
adc
push
into
andl
cld
jne
stos
jmp
mov
mov
xchg
shlb
loop
mov
test
dec
shll
out
mov
popa
xchg
jbe
mov
inc
repnz
aad
cwtl
sub
popf
pop
push
nop
xlat
push
or
fsubs
and
jae
insl
inc
jmp
aad
scas
push
push
mov
mov
movsb
dec
leave
mov
sub
es
sub
or
pop
xchg
push
dec
cltd
lcall
add
fxch
cmpsb
xor
dec
or
xchg
xchg
fdivr
pop
or
push
mov
sbb
jg
negb
jns
pop
cmp
pusha
mov
rclb
mov
jnp
push
test
cmp
es
jle
pop
mov
cmp
mov
call
mov
adc
stos
jp
mov
pop
call
xchg
je
dec
jbe
movsl
ret
xor
repz
sbb
out
mov
in
aaa
inc
incb
cmp
xor
xchg
decb
lahf
aad
jl
mov
stos
leave
ret
pushf
jnp
imul
std
mulb
enter
sarb
out
imul
lahf
stc
jo
inc
pop
scas
cwtl
mov
loope
lods
or
add
push
xchg
outsl
or
push
and
add
scas
std
fstpt
lds
lock
insl
or
jnp
pop
jnp
xchg
push
add
sub
lcall
mov
stos
mov
dec
dec
mov
sub
popw
xor
ljmp
mov
hlt
enter
mov
lea
gs
cmp
jl
mov
mov
jg
jno
outsb
inc
and
push
into
pop
pop
arpl
mov
mov
mov
jns
sbb
mov
jno
dec
je
cmpsb
loop
les
aad
sub
pop
sub
pop
push
jno
out
nop
cmp
inc
test
ljmp
testl
test
aam
push
mov
pushf
dec
jo
mov
push
insb
fwait
sub
testl
subb
push
aad
stc
inc
aaa
jle
mov
push
in
sbbl
ss
adc
mov
nop
sahf
repz
scas
and
lret
mov
je
fildl
arpl
sbb
ja
aas
scas
cmp
xchg
fstps
adc
add
std
and
call
inc
fidivs
mov
sarb
lret
inc
add
sti
mov
aam
pusha
pop
clc
push
xor
in
cld
push
call
popa
or
adc
mov
push
push
dec
jge
xor
aam
cmpsb
fistl
mov
inc
xchg
iret
scas
or
movsl
sarb
movsb
es
mov
out
dec
lahf
jno
fstl
aas
out
daa
sub
pop
or
push
sub
cld
pop
outsb
sbb
xor
sahf
and
cmp
ret
xchg
lcall
shrb
xchg
fists
loopne
push
rolb
ret
and
push
nop
jge
or
insb
bound
sub
aas
fisubs
lret
negb
sbb
mov
call
push
popa
lods
push
fwait
and
dec
mov
test
xchg
jg
pop
xor
jle
xchg
xor
sub
movsl
xor
adc
sub
mov
sbb
pop
daa
xchg
dec
cmp
sbb
movsb
pusha
xor
js
xchg
push
dec
ja
outsl
adc
xchg
xorl
cltd
inc
fs
dec
outsl
sub
loope
sti
imull
cli
dec
xchg
sub
into
jbe
shlb
pop
iret
int
int3
rorb
testb
push
in
sti
rorl
cld
dec
jns
enter
add
cmp
fwait
sti
iret
popf
out
mov
ds
cmpl
out
jmp
dec
add
fcompl
leave
cmp
push
loopne
outsl
mov
pop
mov
mov
jg
imul
jl
ja
fdivrs
xchg
or
in
mov
test
out
cmp
cmc
pop
ljmp
lcall
inc
repnz
sahf
mov
test
inc
fldt
mov
cmp
lcall
cmp
rcll
xchg
mov
pop
xchg
mov
nop
xchg
jno
outsl
enter
jp
insl
cmp
jl
adc
orb
xor
mov
inc
mov
mov
repz
and
adc
leave
xor
lock
addr16
or
push
daa
inc
popl
es
jp
mov
stos
or
rcll
fs
pop
sbb
inc
rorl
out
testl
mov
shll
xchg
imul
lock
sub
inc
int3
pusha
fisttps
and
cltd
or
stc
xchg
mov
sahf
or
sbb
fdiv
add
pusha
adc
shrb
sub
mov
pop
lods
or
mov
mov
cmp
lods
fs
sub
push
mov
pop
push
push
xor
sahf
mov
ret
xchg
add
out
popa
inc
loopne
dec
mov
adc
adc
lret
pop
out
adc
dec
jg
inc
adc
jge
popf
push
adc
lock
adc
pop
call
and
inc
js
movsl
xchg
cli
pop
add
cmp
dec
or
adc
dec
mulb
int
test
and
test
or
fnstcw
hlt
and
jge,pt
inc
mov
lcall
ret
pop
mov
js
push
cmp
mov
lds
sub
inc
lret
mov
lea
movsb
xchg
aas
into
lock
mov
lods
pop
sub
in
scas
jge
xchg
jp
dec
pop
fbld
adc
adc
mov
push
pop
in
movlps
ljmp
mov
sahf
loop
pop
addr16
pushf
fwait
adc
pop
or
lds
pop
adc
adc
push
inc
add
add
jo
mov
cmpb
jns
mov
lret
push
xchg
push
mov
fcomps
dec
fisubl
or
cmpsb
or
xor
std
pop
jb
jmp
in
js
mov
mov
xchg
xchg
push
mov
cwtl
jge
mov
dec
cld
fs
cmc
ljmp
mov
enter
lret
pop
mov
iret
xchg
dec
mov
outsl
out
pop
xchg
mov
or
scas
pop
insl
cmp
ljmp
cmp
insl
inc
push
or
and
scas
je
imul
scas
cmpl
lock
inc
ljmp
mov
jno
and
mov
fisubs
jg
std
adc
enter
cmc
push
ljmp
xchg
scas
dec
lret
inc
gs
fidivrs
int
into
mov
aaa
repnz
jae
test
call
jb
out
lea
xchg
push
sub
push
push
lods
mov
ds
bound
les
xchg
sub
insb
cmp
dec
cmp
mov
adc
pop
out
adc
cli
mov
sub
push
inc
lret
and
addb
gs
add
xchg
mov
fcoms
lahf
inc
mov
arpl
imul
out
in
jp
rcrb
cmpl
push
gs
cmp
lcall
mov
gs
and
and
in
cmp
cltd
push
out
imul
call
stos
lea
mov
repnz
mov
jb
xchg
rol
rcrb
outsl
and
rclb
inc
imul
dec
xor
dec
pop
mov
imul
sbb
xchg
dec
dec
jle
add
mov
sbb
fwait
jmp
pop
or
or
jmp
loop
mov
xchg
add
mov
sbb
fdivs
int3
xchg
sbb
mov
or
pusha
pop
jmp
inc
pop
jo
xchg
sbb
mov
ret
and
fcoml
movb
negb
xor
mov
dec
mov
or
popl
je
cmp
lock
aas
jns
add
imul
outsb
arpl
xchg
addr16
xchg
das
repnz
xchg
and
nop
cs
and
or
inc
sti
test
jnp
jl
sahf
imull
lea
jge
pop
je
jbe
mov
mov
pop
test
out
repz
call
daa
icebp
fcompl
scas
xorl
in
int
mov
push
inc
test
fdivrl
outsl
mov
in
bound
lods
sbb
daa
sti
ja
ret
dec
xchg
sbb
xchg
jg
xchg
in
mov
push
mov
and
dec
outsb
and
and
add
or
call
xchg
mov
in
jne
daa
pop
jmp
mov
bound
xchg
xchg
in
lret
jo
push
cmpsb
cmp
cltd
mov
and
sbb
sbb
loope
sbb
jmp
jae
mov
pusha
aas
xchg
je
push
mov
repz
mov
mov
cmp
cs
loop
lods
dec
pop
xor
out
lcall
dec
rcl
sbbl
pop
fsubl
loope
dec
xchg
cwtl
flds
mov
push
xorl
mov
pop
cltd
pop
adc
not
outsb
dec
fucomi
inc
cs
sbb
mov
sub
ret
fsubp
inc
jle
push
out
out
into
pop
pop
mov
es
push
jne
pop
mov
in
int
arpl
icebp
lea
sub
sub
add
xchg
pop
sub
xchg
hlt
test
pop
dec
ss
push
je
clc
stos
mov
xchg
pop
pop
shrb
sbb
pop
pop
sti
jecxz
or
xor
lods
lods
ja
jne
pusha
lds
lahf
rcl
sarb
frstor
sub
outsb
pop
cmp
in
ret
push
lret
and
jae
jbe
pop
cmpsb
sub
loope
dec
js
xchg
in
mov
aam
cmp
inc
scas
aad
aaa
pop
fmuls
daa
push
mov
push
dec
inc
jns
cmc
popa
leave
xor
adc
mov
adc
inc
call
out
int3
mov
ss
hlt
stos
push
or
out
push
outsl
sbb
cmpsl
jmp
lods
and
xchg
push
cmpl
call
add
pop
incb
adc
add
mov
pop
out
push
es
insl
cmc
ja
or
sbb
pop
roll
outsb
inc
mov
subb
das
outsl
in
lods
data16
cwtl
or
add
subb
mov
decl
test
loope
or
std
fimuls
gs
dec
xlat
xchg
pop
xchg
loopne
movsb
inc
nop
std
int
mov
mov
sub
or
pop
mov
push
mov
mov
xchg
or
dec
out
push
out
mov
adc
int3
add
cmp
add
cmp
sbb
les
mov
pop
jmp
add
test
adcb
fisubrs
xchg
mov
ret
int
jecxz
cmp
fcomps
inc
add
lods
mov
loope
pushf
fcmovnbe
dec
scas
mov
xchg
fisttpll
push
imul
js
add
dec
sbb
jge
adc
addr16
popa
in
cmpsb
incl
cmp
adc
outsb
inc
dec
lock
mov
or
ljmp
xchg
mov
mov
insl
loopne
mov
inc
push
push
das
iret
jecxz
or
mov
xlat
pop
pop
in
push
mov
xchg
insb
and
nop
jae
lea
inc
leave
xchg
xchg
lock
mov
mov
add
lea
inc
lds
adc
sub
cmp
scas
inc
fistps
or
addr16
mov
xchg
fldl
bound
mov
mov
jbe
adc
xor
sbb
fsts
ret
stos
jle
add
mov
cmc
ja
das
xor
fcoms
inc
lahf
mov
adc
lahf
insb
fwait
sub
xchg
aad
push
loope
mov
fs
cmp
jmp
outsl
mov
jg
mov
je
xor
add
mov
push
cltd
cmc
scas
pop
daa
pusha
push
mov
push
and
push
xor
inc
push
push
mov
leave
daa
insb
xor
lcall
pop
insl
in
mov
jno
popf
xor
dec
leave
add
adc
mov
xchg
enter
mov
inc
clc
mov
test
cmp
sbb
pop
stc
es
dec
shll
bnd
add
adc
and
inc
push
dec
push
xchg
fistps
mov
imul
testl
into
jle
aaa
sbb
popl
repnz
xor
or
rorl
adc
ja
sbb
push
shll
decb
iret
lea
nop
xchg
out
repz
arpl
inc
and
xchg
or
adc
xchg
sbb
and
jb
fisttpll
lret
xchg
or
jg
clc
ret
adc
loope
ljmp
xor
popl
fstps
adc
sti
push
xor
ljmp
mov
call
jecxz
cmp
pop
lret
cmp
dec
insl
push
scas
adc
cmp
cmp
and
fwait
push
lret
jmp
int
aad
hlt
fs
xor
mov
xchg
out
jge
push
add
mov
stos
adc
jns
std
test
mov
push
addr16
test
cmp
inc
pushl
lods
inc
outsl
rclb
sub
adc
sub
dec
pushf
or
fnstcw
loope
push
pop
sbbb
mov
mov
cwtl
pop
add
cmpsl
scas
mov
repz
xor
sti
jns
dec
jp
sub
in
mov
pop
sahf
pop
out
pop
repnz
lret
push
jmp
jb
jp
fnstcw
or
sti
inc
insb
xchg
ret
mov
mov
xlat
lds
iret
aaa
mov
ret
lods
fs
data16
std
push
cli
jne
fcomip
push
push
repz
add
push
jnp
xor
insl
dec
negb
push
ret
inc
pushf
lahf
shrl
loop
ror
stc
dec
fildl
aad
enter
ja
dec
cmc
mov
mov
push
xor
adc
jne
push
push
fildl
aaa
fistl
jl
int3
ss
daa
testl
jp
jne
lret
inc
mov
sub
out
inc
js
icebp
mov
sub
jns
nop
inc
data16
jno
mov
push
push
scas
outsb
repz
and
fld
inc
lret
stc
add
rolb
in
addb
inc
mov
pop
push
rcll
mov
push
sti
or
mov
jl
push
xlat
movsb
lret
mov
imul
cltd
mov
jnp
mov
sarl
xchg
mov
sbb
in
mov
xchg
cli
xor
mov
xchg
loop
daa
mov
cmpsl
inc
or
fistps
cld
lahf
inc
into
dec
pop
in
or
scas
addr16
pop
jb
out
ret
cltd
shlb
mov
sarl
mov
sbb
pushf
aam
cmp
cmp
pop
jp
mov
ret
scas
das
loope
fcmovu
inc
bound
clc
in
sbbl
dec
repz
mov
sub
mov
hlt
cmpsl
out
es
mov
xchg
cs
mov
jp
jnp
push
jbe
mov
inc
push
cmp
add
test
scas
jns
xor
sbb
sbb
push
adc
or
push
adc
ljmp
mov
rcrb
and
mov
clc
dec
xor
orl
sbb
dec
mov
or
mov
clc
je
or
push
mov
or
sbb
ja
and
jnp
rorl
incb
lods
xchg
mov
das
out
insb
cmpsb
call
popa
cltd
out
rcll
pop
cmp
jmp
mov
push
cld
in
add
sahf
ret
mov
xchg
and
fldt
test
je
mov
data16
in
aaa
popf
inc
pusha
sbb
std
inc
jae
or
fisubrl
xchg
mov
data16
sbb
shlb
xchg
xor
inc
fistpl
hlt
push
add
jns
lret
icebp
sub
xchg
ds
inc
mov
sbb
mull
sub
enter
nop
movsl
xorl
das
xor
fucomi
das
add
and
pop
mov
addr16
push
movsb
fsubrs
adc
mov
rcr
arpl
inc
pushl
and
fcoms
mov
mov
repz
xor
or
jle
mov
sbb
out
aam
mov
jecxz
adc
outsl
imul
loopne
nop
pushf
fimuls
popf
ja
lcall
and
not
pop
fmull
lea
mov
xor
aam
mov
std
push
out
orl
mov
icebp
cltd
insb
push
ror
loopne
cmc
mov
aas
ficompl
push
inc
push
std
arpl
jns
inc
call
test
shl
jne
xchg
out
enter
rcrb
fs
jmp
lcall
push
mov
je
cltd
addb
push
add
setle
sbb
xlat
jl
leave
es
les
movsb
pop
mov
push
mov
inc
add
and
xchg
lock
loop
lds
or
push
lahf
mov
fcomi
xchg
push
insl
push
xorl
outsb
bound
data16
fiaddl
adc
xchg
ss
aam
ljmp
sbbb
add
cmc
jns
decl
lcall
or
mov
or
dec
dec
faddl
xchg
jge
pop
mov
mov
mov
hlt
mov
jmp
and
fcmove
in
test
out
push
fwait
or
fwait
hlt
sub
movsl
adc
mov
pusha
cmp
cwtl
sbb
push
or
fldenv
pop
loopne
or
mov
pop
lock
adc
scas
nop
in
imul
mov
imulb
pop
xchg
addl
mov
mov
into
sub
xor
jae
sub
aas
jge
sub
lret
jno
sub
sahf
mov
mov
push
mov
adc
pop
mov
in
sub
push
int3
lods
adc
cmp
xor
filds
cmp
int3
push
fiaddl
scas
inc
jae
jmp
pop
jb,pt
adc
je
mov
shrl
stc
lock
test
out
lods
in
popf
mov
repz
sbbb
testl
xor
pusha
mov
push
jb
adc
pop
lret
fsts
dec
rcrb
jae
adc
xor
jno
pushf
icebp
mov
mov
jb
adc
movsl
mov
push
jl
push
mov
popf
repnz
and
movsb
aam
or
pop
cmp
outsb
adc
shr
notl
add
mov
jle
cli
ljmp
popf
and
scas
ret
and
bound
mov
jp
filds
push
outsl
jecxz
sub
and
arpl
stc
push
sbb
push
dec
std
rolb
push
push
cmp
loop
bswap
sub
or
dec
pop
sub
js
les
es
pcmpeqd
loope
xchg
adc
sbb
je
out
xor
int
lcall
push
invlpg
cmp
xchg
add
fs
je
icebp
inc
jo
sarl
dec
push
sbb
sahf
jle
adc
pop
repnz
xor
mov
or
xor
in
mov
inc
push
pop
adc
add
cld
mov
repnz
stos
adc
out
mov
pusha
sub
movsl
mov
cmp
add
mov
das
push
sub
orb
xchg
test
sbb
jo
mov
pop
mov
lret
cmpsb
or
das
dec
lock
sub
test
rcl
sbb
cmc
inc
int3
xor
mov
scas
jp
adc
orl
pop
push
div
aam
adc
mov
jo
mov
int
lea
adc
push
push
inc
cld
mov
and
out
out
pop
mov
test
rorl
cmpsb
out
and
xchg
sbb
sarb
les
out
add
into
int
sub
xor
cmp
daa
cli
divl
lods
aam
ljmp
imul
test
mov
popa
pop
jg
jb
iret
adc
aas
stos
xlat
in
jge
adc
ss
xchg
sbb
mulb
loop
add
data16
mov
loopne
rol
subl
cmp
test
inc
fs
cwtl
mov
mov
out
inc
aas
lret
add
cmc
lds
sub
iret
fldt
in
add
xchg
fadds
jl
insl
jecxz
outsb
cli
icebp
xor
inc
add
cli
inc
xor
aas
pop
call
pop
daa
sub
inc
and
test
mov
push
sarl
jne
in
clc
fisttpll
imul
adc
dec
cs
cmp
cltd
in
in
jo
dec
inc
xchg
stc
or
lods
sti
fdivrl
sbb
addr16
stos
cs
sbb
push
loopne
popf
sarb
push
ret
mov
xchg
push
xor
ret
mov
or
pusha
leave
jmp
outsl
stos
push
cwtl
sbb
aam
cs
in
add
in
loope
add
sbb
cmp
push
loope
push
or
dec
sub
or
jl
inc
jne
push
sbb
adc
sbb
cmp
push
sahf
mov
aad
xchg
pop
scas
push
arpl
cs
lea
das
stos
ret
rcrb
addr16
sbb
jg
push
inc
sub
in
pop
es
push
cmp
bound
jge
adc
push
xchg
movsl
xlat
jmp
outsl
stos
pop
or
ljmp
scas
adc
ret
dec
cs
push
mov
and
and
lods
dec
negl
add
add
jae
cs
push
data16
adc
sbb
mov
jmp
aas
fcmovbe
fildll
jg
mov
iret
sub
pusha
test
or
adc
add
dec
sarl
int3
push
lret
mov
xchg
stc
cld
jmp
or
adc
insl
xchg
nop
pop
rcr
dec
push
dec
fistl
inc
loope
mov
jmp
cmp
push
pop
das
arpl
jae
out
loope
xchg
aam
dec
push
or
out
push
sub
ss
xchg
jns
jmp
push
ficompl
xor
push
pusha
jle
iret
fidivrl
xlat
movsl
inc
jae
and
inc
mov
notb
inc
add
and
jge
lcall
in
mov
push
jns
jle
xchg
cwtl
fcomp
mov
insl
add
data16
dec
mov
pop
sbb
test
jge
jo
sub
mov
in
rorb
push
xor
jmp
lds
out
fwait
mov
stos
inc
sti
shlb
jns
cmpsb
mov
clflush
mov
sub
and
xchg
pop
test
dec
popa
in
pushf
push
loop
jbe
ror
insb
cmp
dec
repnz
push
sahf
stos
scas
orb
add
dec
pop
lock
jo
int3
cmpsb
mov
xlat
rcrb
jecxz
sbb
test
inc
add
pop
mov
into
jnp
mov
js
loopne
mov
negl
cs
stc
sbb
sub
add
fs
push
fcomps
add
leave
jns
xor
pextrw
add
pop
xchg
adc
xchg
xor
push
jnp
pop
fwait
imul
das
xor
ret
mov
sti
jmp
inc
repz
das
sub
loopne
cmpsl
pop
fdivr
mov
push
mov
fistl
pop
xchg
push
mov
lea
int3
cmp
faddl
in
or
sbb
jnp
in
shr
jnp
push
lea
es
adc
jp
ja
xchg
cmp
stos
gs
push
test
int3
jmp
daa
or
into
cs
sti
hlt
or
pushf
xchg
cmp
jno
dec
inc
pushf
repnz
push
data16
mov
jmp
jmp
movsl
rcll
jbe
mov
mov
nop
aas
fiaddl
add
pop
leave
stos
adc
cld
mov
cmc
mov
inc
xor
mov
lcall
sbb
pop
cmp
pusha
inc
sub
int
and
sub
push
cli
xchg
std
push
cmp
rolb
push
push
loop
in
mov
pop
dec
std
mov
stc
push
aam
in
or
add
sbb
or
mov
pop
add
lret
clc
sbb
iret
std
mov
jne
mov
repz
pop
cmp
or
inc
or
xchg
and
add
leave
cwtl
adc
mov
jl
pop
and
stos
stc
mov
xor
dec
dec
cmp
jge
rcr
pop
clc
in
cld
mov
dec
mov
gs
push
sti
out
and
sti
pop
cli
jle
ret
sarb
jmp
scas
adc
fucomp
not
inc
mov
dec
mov
pusha
push
lret
jecxz
mov
and
jbe
jo
pop
loop
popf
mov
in
xor
int3
pop
mov
sub
in
jns
stos
mov
pop
mov
out
mov
jb
es
xchg
andb
dec
inc
inc
sbb
pop
or
mov
mov
hlt
sbb
mov
scas
xor
movsl
out
pop
sub
lret
fs
stos
push
or
sub
stos
adc
push
aaa
adc
div
add
pop
jno
pop
add
stos
mov
and
js
mov
movsl
and
mov
lret
loop
jle
and
mov
inc
loop
int3
jg
bound
dec
add
shll
add
pop
inc
cmp
pop
iret
mov
pop
inc
mov
jne
mov
ret
negb
adc
cltd
xor
inc
jl
pop
cwtl
sub
xlat
outsl
rcr
fdivl
jge
sbb
imul
or
add
adcb
push
repnz
in
adc
ljmp
xchg
in
je
mov
and
sub
sub
orl
mov
cld
push
sub
imulb
das
jnp
gs
leave
bound
ret
pop
sti
add
cwtl
jle
mov
lea
mov
mov
test
sbb
out
sti
xor
movsb
xor
push
aaa
test
xchg
out
xor
jl
pop
xor
sub
stos
mov
pop
xor
popa
cmp
aaa
jo
nop
test
push
pop
pop
mov
imul
ret
popa
insl
xlat
into
xorb
mov
mov
test
jno
punpckldq
imul
mov
imul
push
mov
lods
pcmpeqw
iret
and
clc
or
test
push
out
mov
in
push
lds
xor
push
jmp
mov
movsl
std
data16
xchg
pusha
sub
mov
push
sbbb
push
arpl
add
test
cwtl
lret
or
mov
push
push
pushf
adc
out
add
inc
add
dec
mov
adc
in
and
cmpsl
test
sbb
dec
test
hlt
sbb
sahf
push
sub
mov
fldcw
cmp
lds
fdivs
ljmp
test
adc
cmp
leave
and
enter
gs
aad
fs
rolb
gs
mov
xorb
xchg
out
cld
jb
pop
fidivrs
inc
add
and
jb
stc
aam
sub
incl
pop
dec
cmp
out
pop
xchg
shrl
ret
imul
sbb
xchg
icebp
pop
sbb
adc
lods
test
push
fnstenv
and
xor
pop
rorb
std
cmpsb
sahf
mov
stos
xor
out
outsb
mov
es
nop
test
push
jns
mov
add
xchg
mov
mov
roll
add
pop
lods
sbb
mov
mov
inc
cmp
fs
sbb
ss
sub
pop
and
repz
idivb
inc
mov
test
and
scas
and
adc
xchg
cltd
iret
sbb
lds
in
or
rcrl
out
push
and
push
cmp
dec
cmp
xchg
popf
loope
and
mov
mov
cmp
shr
mov
lds
jecxz
out
push
pop
jmp
es
mov
lahf
xchg
dec
sti
jnp
fcomip
mov
loopne
repz
pop
xchg
push
jge
sub
mov
push
and
jge
jne
xchg
adc
in
jecxz
mov
fs
mov
or
shl
test
sahf
mov
fmuls
mov
sub
out
hlt
int
or
xor
sbb
in
cmp
das
dec
jle
mov
sbb
inc
ja
mov
or
add
cmp
push
mov
add
in
jl
fldcw
push
ja
sub
mov
fisubrs
xor
jp
rcrb
iret
xchg
lock
out
push
hlt
xchg
imul
mov
es
call
fstp
cmp
add
mov
pop
and
cmovg
int
shl
pop
pusha
sar
jns
add
mov
pop
cld
jne
sub
inc
or
test
jne
lcall
int
fldenv
mov
jnp
ja
outsb
jmp
jns
lahf
and
aad
rcr
xchg
mov
mov
mov
dec
dec
cmp
data16
jg
mov
fdiv
jmp
ficomps
and
and
aaa
mov
mov
cmp
push
inc
fisubs
loope
or
insb
or
ljmp
adcl
mov
andl
in
cmpb
lret
mov
rclb
sbb
and
dec
push
mov
pop
or
pop
dec
add
xchg
jge
mov
push
scas
push
sub
push
jle
cmp
jae
jnp
popa
mov
dec
js
fnstcw
cmp
jo,pt
pop
stos
out
push
adc
jmp
adcl
sarl
jae
xchg
xchg
icebp
mov
aad
or
jo
mov
inc
jno
or
sub
push
ret
and
adc
dec
popf
in
mull
jns
aam
idivb
pop
icebp
icebp
imul
push
xchg
jp
gs
xchg
push
les
call
and
popa
jo
std
mov
adc
lret
cs
push
and
jmp
repz
ret
mov
cld
arpl
push
adc
cmp
test
insl
aam
ja
fsts
mov
arpl
mov
daa
pusha
fiaddl
dec
jae
scas
sahf
xor
fnstsw
push
sub
arpl
pushf
xor
jecxz
es
xchg
xor
popa
add
aas
mov
fsubrl
imul
dec
inc
mov
dec
and
orl
add
xchg
mov
movsl
test
inc
icebp
iret
add
adc
push
idivb
sbb
scas
and
bound
push
ret
push
push
or
cmp
jne
and
xor
pop
push
jo
fsubrl
jmp
out
xor
jo
xchg
push
into
inc
inc
cld
or
add
std
or
pop
mov
aam
push
lcall
daa
mov
out
enter
push
das
inc
out
mov
push
test
iret
push
lcall
xchg
fadds
jg
ljmp
and
mov
or
lds
out
addl
inc
cmpl
lds
mov
lods
add
sub
jns
mov
jae
dec
sbb
and
pop
push
mov
adc
xchg
or
push
rclb
adc
stos
xchg
test
div
lahf
dec
outsb
mov
dec
xchg
xchg
xor
or
nop
ljmp
mov
ja
js
fldcw
mov
inc
outsb
mov
sub
jns
sarb
inc
scas
insl
sbb
lret
cld
int
xor
sub
mov
sbb
ret
add
sbb
mov
ss
inc
arpl
and
fidivrl
add
sti
inc
xchg
pop
fdivrl
mov
adc
adc
adc
dec
sbb
pop
shr
add
les
push
push
bound
mov
mov
xor
dec
dec
pusha
sub
mov
scas
sar
push
pop
rclb
rclb
jns
js
jb
bound
fdivrs
fnsave
aad
loopne
rolb
mov
pop
add
mov
push
adc
ss
fsts
mov
sahf
insl
or
push
adc
pop
stc
inc
in
enter
insl
push
jmp
and
sub
or
out
stos
rclb
mov
shl
lea
test
mov
xor
dec
cmp
popf
cmpsb
and
pop
dec
mov
mov
rorb
or
jb
ret
jno
sti
dec
mov
or
adc
aaa
mov
and
sbb
std
jne
mov
mov
out
jo
or
sbb
cmp
fwait
mov
mov
cmc
mov
iret
incl
mov
cmpb
and
dec
popf
shlb
outsl
jle
cmc
xor
imulb
imul
insl
pop
aas
mov
push
repz
inc
imul
xorl
mov
daa
test
adc
out
sahf
leave
das
pop
rorl
jle
mov
sub
scas
sbb
pop
sbb
xor
ficomps
imul
icebp
lret
xor
std
insb
cmc
mov
lods
mov
dec
xchg
pop
jns
daa
movsl
es
scas
addr16
out
movsl
and
push
popa
movl
mov
insl
sarl
dec
out
push
mov
lret
xchg
adc
adc
imul
adc
faddl
xchg
pop
addr16
or
pop
js
sub
mov
or
adc
out
lods
fwait
push
push
std
mov
lock
lahf
divb
mov
push
xor
sub
sub
popa
jmp
pop
into
gs
aam
lea
mov
add
push
mov
xchg
jle
cmp
push
push
ds
mov
pop
sarb
push
fildl
inc
scas
inc
in
sbb
mov
rorl
mov
pop
cmp
out
jmp
stos
lret
sub
fidivrl
xor
leave
popa
sub
sub
fmull
jb
stc
push
push
cli
cs
stos
adc
repz
add
js
xchg
aas
pop
add
dec
in
fisttpl
lds
lea
popf
or
dec
js
xchg
fdivrs
mov
int3
xchg
fisubl
jnp
out
cmp
nop
push
push
push
push
or
xor
push
add
mov
mov
in
rcl
mov
test
lcall
aas
shrl
pusha
pusha
xor
and
test
dec
jp
cmp
or
ja
aaa
mov
loope
andl
inc
test
and
push
or
dec
sub
mov
cmp
xlat
xchg
inc
add
outsb
mov
add
addl
cmpsb
jle
es
fsub
pextrw
jp
cmpsb
daa
pop
pop
adc
mov
cltd
and
mov
push
cmpsb
aas
aaa
loopne
fidivrl
xor
shrb
test
addl
imul
nop
sbb
push
popf
fisttpll
fbld
mov
jns
hlt
xchg
js
je
xchg
pop
repnz
mov
and
push
or
cmp
sbbl
sub
data16
ss
add
cmpsb
jmp
adc
xchg
or
inc
mov
hlt
and
data16
jge
aad
adc
and
je
pop
icebp
jmp
jecxz
inc
into
movsl
or
and
fsts
bound
and
cld
jle
repz
aad
xor
mov
adc
add
fstpl
dec
add
and
out
fisttpl
push
das
loope
arpl
push
mov
mov
loope
jb
push
sub
clc
jl
or
arpl
leave
mov
fs
mov
cmp
sbb
mov
dec
in
mov
sbb
insb
push
cld
and
lock
cwtl
nop
ficomps
insb
push
fistl
arpl
rcr
in
sub
imul
test
dec
lds
jns
loopne
adc
std
dec
lret
fsubrl
pop
fidivs
imul
movsb
out
cld
xchg
das
push
rclb
scas
imul
adc
mov
xchg
in
push
and
lret
das
daa
mov
fistps
fiadds
decl
jae
hlt
xor
and
imul
mov
pop
aaa
jb
lods
jne
addb
imul
stos
mov
and
es
jp
pusha
jo
and
leave
jmp
xchg
fcomi
sbb
mov
inc
mov
lods
xchg
andb
cmp
push
imul
add
or
jnp
pusha
mov
and
sbb
fnstenv
pop
jmp
nop
sub
fbstp
and
inc
lods
xor
popa
cld
out
movsb
stc
mull
sub
adc
dec
add
repz
repz
mov
lret
mov
and
negl
jns
adc
xor
pop
dec
jge
pushf
mov
shll
cmp
push
xor
mov
push
xor
adc
fdivrp
add
in
xor
push
dec
mov
dec
xor
cld
push
mov
push
dec
mov
xor
fmuls
sbb
dec
or
xchg
scas
bound
xchg
xchg
mov
xor
cmp
sub
jl
dec
sub
test
jbe
mov
jge
cmpsb
mov
pop
stos
ljmp
cli
fistl
dec
out
xchg
adc
push
and
add
pop
cmp
fwait
inc
mov
inc
xchg
subb
adc
lret
adcb
cld
dec
mov
add
or
jo
scas
xchg
ficomps
cltd
mov
insb
sbb
mov
xchg
adc
hlt
cltd
subb
and
push
push
shll
cs
mov
cwtl
xor
lea
sub
testl
daa
sbb
cmp
ficomps
and
fcoml
in
sbb
divl
sbb
mov
mov
stos
mov
pop
jae
stc
mov
and
cmp
dec
jb
mov
jecxz
decl
adc
inc
addr16
out
mov
or
sub
xorb
in
std
push
xlat
pop
mov
add
seta
popf
shrb
or
sbb
jnp
mov
xor
adc
sub
and
ret
call
adc
dec
and
movsb
enter
sub
jmp
or
jb
into
sti
ds
xchg
fistpl
fs
inc
mov
iret
inc
or
pop
push
xchg
mov
inc
mov
or
and
mov
stos
sbb
outsb
shrb
ret
out
out
lahf
add
xchg
inc
push
stc
les
test
xchg
mov
xchg
sti
or
ja
lret
inc
pushf
dec
push
push
jecxz
loopne
jne
cmp
in
xchg
mov
ret
js
mov
adc
adc
add
mov
test
imul
mov
sbb
scas
shlb
mov
push
adcb
hlt
leave
insb
sti
push
shll
xchg
mov
mov
shr
mov
jmp
pop
inc
cmpsl
js
jns
popf
mov
nop
mov
mov
daa
cwtl
dec
das
in
out
stc
mov
dec
ret
pushf
add
xchg
popa
cli
test
cwtl
sahf
cmpsl
mov
stos
push
cmpsl
cmp
pop
sbb
popf
xchg
mov
out
int3
cmp
mov
xchg
dec
mov
jo
mov
popf
loope
in
aad
sub
xchg
imul
fisubs
xchg
cmp
fldt
rol
ss
mov
mov
stc
rorl
adc
jae
pop
add
js
mov
pushf
inc
sub
mov
push
dec
cmc
popf
fmuls
mov
fimuls
jno
int3
add
sbb
fs
mov
mov
sbb
cli
arpl
loop
dec
push
jns
rorl
scas
leave
fcmovbe
mov
or
imul
jg
add
clc
cld
push
imul
ja
subb
mov
xlat
fildl
pop
ds
xchg
or
jmp
push
pop
xchg
mov
out
fwait
mov
and
cmpsl
cli
pop
jo
dec
arpl
repz
pop
xor
sub
outsb
ret
add
push
mov
mov
or
pop
jno
fucom
cmp
mov
call
lret
fwait
adc
rcrb
mov
aas
rcrl
das
mov
mov
sub
stos
inc
loop
pop
cmp
test
hlt
add
dec
scas
push
ds
imul
inc
inc
mov
jbe
sbb
jo
lock
and
add
mov
out
sub
es
test
add
stos
dec
xchg
jecxz
dec
push
or
xor
cwtl
dec
cltd
push
cltd
leave
test
mov
js
mov
mov
xchg
add
arpl
adc
stc
mov
xor
clc
lds
pusha
bnd
test
cmpsb
adc
adc
mov
les
cwtl
cmp
out
cli
jl
dec
jle
xchg
pop
lds
arpl
cmp
out
fistpll
jae
das
add
sti
rolb
lahf
rol
movb
adc
inc
aaa
mov
int3
out
sub
scas
mov
or
mov
shl
dec
enter
fisubrs
cwtl
push
pop
insl
lret
inc
push
ljmp
adc
xchg
lcall
adc
sbb
adc
mov
stos
ret
sbb
std
ss
jmp
cmp
xchg
mov
test
mov
out
jb
mov
lahf
pop
fucomp
xor
in
push
fcompl
inc
in
cwtl
sbbb
push
aad
add
dec
lds
push
push
sahf
in
cltd
cmpsl
or
or
mov
mov
xor
fs
std
cmc
imul
dec
mov
or
addl
fnstcw
les
adc
dec
push
jns
push
stos
imul
outsl
push
addr16
into
aam
mov
mov
push
add
rclb
sub
sub
popa
mov
outsb
insl
ficompl
inc
jmp
repnz
sbb
push
movsl
mov
dec
xchg
iret
inc
or
add
hlt
add
stos
loope
int
arpl
daa
in
stos
jns
lods
popf
cmc
out
test
sub
add
inc
dec
adc
ret
bound
std
loop
jg
mov
clc
ljmp
test
xchg
inc
movsb
fstpt
mov
pop
rorb
leave
and
adc
push
mov
femms
inc
adc
ss
push
push
add
sahf
ds
mov
ds
pop
aaa
jnp
inc
adc
xlat
movsl
pop
repz
lock
ljmp
sub
mov
cmp
mov
pop
jmp
mov
push
cmpsb
cmpsb
jb
mov
std
mov
jae
mov
add
lahf
sbb
sub
mov
mov
push
dec
cmpsb
pop
xchg
jl
bound
testb
mov
pop
rclb
adc
mov
push
cmc
xchg
jge
xlat
jle
loop
ds
cmc
cmpsb
mov
int3
aas
pop
push
mov
and
and
jmp
in
out
popf
insl
lods
or
popa
std
inc
data16
faddl
mov
cld
scas
mov
pushf
ja
stc
ret
mov
cltd
xchg
dec
adc
ret
stos
repnz
inc
jno
rolb
aaa
imul
mov
lods
jbe
call
out
ja
les
mov
mov
insl
pushf
scas
idivb
mov
negl
adc
insb
repz
pop
dec
inc
mov
mov
ja
xchg
out
cld
cltd
movhps
cwtl
aad
cmpsl
mov
and
xor
shl
dec
jmp
jge
xor
aad
xor
stc
aas
dec
das
test
int
inc
inc
imul
imul
dec
mov
push
mov
push
xor
in
cmp
sub
sub
scas
mov
je
mov
add
xlat
cwtl
jp
stc
das
pop
addr16
leave
js
sarb
mov
mov
inc
jne
push
sub
push
jb
test
cltd
loopne
dec
and
mov
xchg
inc
bound
jge
sub
stos
fistpl
cmp
push
push
lods
stc
hlt
adc
and
pop
sbb
inc
or
xacquire
and
dec
mov
cmp
arpl
in
test
jne
add
pop
data16
fldenv
jae
stos
test
fmuls
or
rolb
lea
push
cmp
adc
add
les
jo
lea
sahf
out
or
pop
in
xor
sahf
out
lods
pop
popf
mov
hlt
xlat
jmp
push
add
dec
adc
mov
adc
fadds
pushf
adc
sbb
das
xor
lods
sbb
pop
pop
les
fisttpl
xchg
or
inc
pop
mov
jl
add
cmp
add
push
sarb
mov
add
daa
push
int3
data16
lods
sub
push
sbb
jp
xchg
and
fwait
dec
pop
dec
add
sbb
cmpb
lods
mov
addr16
push
cmc
mov
clc
loopne
loopne
sub
pop
mov
adc
or
cvtpi2ps
xchg
stc
loop
inc
dec
ficoms
mov
ss
fndisi(8087
xchg
movsl
xchg
das
arpl
sub
mov
pop
add
push
add
sub
cmpsl
and
push
pop
add
sub
xchg
push
idivb
loop
mov
mov
xor
xchg
and
daa
cld
aam
fs
xor
adc
in
sbb
mov
lahf
mov
mov
xor
cmp
xchg
fdivrs
jle
cmp
aad
push
jo
add
out
adc
repnz
stos
cmp
inc
lds
adc
sbbb
pop
pop
inc
stc
inc
or
popa
dec
popa
imul
add
sub
xchg
push
add
cmp
fwait
push
outsb
cs
addr16
xchg
mov
in
push
mov
mov
pop
lahf
sbb
and
cmpsl
js
shrl
mov
loopne
add
shll
outsb
pop
push
push
pop
mov
js
sbb
sub
xchg
adc
inc
mov
push
mov
pop
test
lods
xchg
shrb
push
fisttpll
out
lods
scas
int
pop
xchg
and
fmull
cmp
push
push
addr16
dec
aam
inc
pop
adc
sbb
jns
lds
stos
mov
int3
das
fisttpll
and
push
xchg
aam
es
mov
pop
pop
sub
pop
int3
mov
pop
cmp
and
adc
sbb
mov
ret
bound
iret
adc
popa
dec
mul
cmpsb
mov
adc
mov
mov
cmp
or
stos
inc
iret
cmp
mov
in
imulb
ret
into
lea
add
out
mov
mov
dec
and
clc
push
inc
insb
lahf
xchg
xchg
loope
cmp
rcrb
fidivs
xor
sti
je
movsb
iret
dec
xor
cmp
cmp
int
cmp
mov
push
mov
pop
push
sub
es
lea
mov
inc
adc
sub
mov
push
outsl
test
sbbb
ret
pop
arpl
push
lods
lea
xor
shr
dec
lret
lods
mov
or
repnz
lods
or
imul
movsb
mov
test
daa
mov
sarl
iret
add
jmp
cmp
pop
pop
rol
aas
dec
addr16
add
adc
fistpll
mov
dec
sub
icebp
loop
sahf
adc
sbb
and
inc
mov
add
mov
cmp
jl
inc
jnp
adc
stos
push
loope
int3
or
cmp
ljmp
push
xchg
lea
cwtl
inc
cld
lea
mov
andl
xor
sbb
int
cli
mov
roll
aad
or
lea
imul
ret
ja
adc
mov
sbb
cmp
std
loop
add
adc
xor
pushf
movsl
loope
pop
repnz
mov
jnp
jl
fwait
into
add
jne
adc
in
inc
int3
insl
dec
push
jmp
mov
imul
in
dec
or
scas
gs
mov
push
cmpsb
repnz
and
test
or
mov
mov
mov
and
sub
shrl
mov
clc
mov
into
mov
xor
mov
out
cmpsl
fists
lret
fsubrp
xchg
xor
push
sahf
or
jle
loopne
rolb
aaa
add
lods
stos
mov
sub
sbb
xor
minps
rolb
pushf
sub
push
push
xor
rol
out
lds
movsb
or
scas
jp
test
and
imulb
popa
cmpsl
mov
xlat
dec
cmp
xlat
lret
fwait
outsl
and
mov
jge
fadd
cmpsb
mov
shl
rorl
jno
and
dec
xchg
popa
dec
fisubl
pop
xchg
cltd
aam
out
jl
jno
push
bound
push
loopne
push
sbb
mov
xor
rolb
add
mov
shrl
push
dec
push
xor
xlat
movsl
xchg
sbb
out
loope
xlat
add
test
out
sub
ret
xchg
mov
push
sbb
pop
pop
mov
or
ret
lods
push
xchg
lret
leave
push
add
or
jl
push
ljmp
fiadds
dec
xchg
xchg
test
jge
scas
cmpsb
sub
xor
adc
xor
jbe
int3
inc
xchg
imul
push
out
mov
mov
push
xchg
roll
xchg
imulb
lock
cmp
testl
or
jmp
addb
cmp
jle
cli
icebp
jns
lock
idivl
rcr
loopne
repnz
add
xor
nop
pushf
push
insl
pop
or
sub
lcall
xor
sub
mov
jb
sbb
inc
mov
jo
mov
cmp
and
sub
pop
or
dec
jp
popf
push
sbbl
shlb
hlt
adc
mov
or
and
out
psubb
cli
inc
aam
xorb
aaa
pop
and
mov
in
pop
xlat
xor
adc
hlt
mov
cmp
mov
xlat
mov
sub
cld
mov
fwait
pop
loope
out
sbb
cmp
mov
xchg
push
test
movsb
push
cmovnp
sbb
or
sub
mov
pop
js
repz
mov
pusha
test
mov
mov
inc
mov
jge
hlt
into
imul
push
xor
dec
inc
inc
es
or
pop
lahf
test
sub
push
xchg
adc
outsl
ret
lret
hlt
out
bnd
xchg
inc
loopne
pop
cmpsl
shll
push
daa
je
ret
push
in
enter
fdivr
mov
cli
sti
loop
cmp
mov
pop
push
and
pop
imul
lock
xor
cmp
test
add
push
imul
jbe
movsb
cld
push
push
mov
xchg
pop
push
cwtl
mov
stc
and
jg
hlt
mov
out
int3
xchg
mov
xor
sti
dec
jp
iret
mov
xor
pop
repnz
mov
into
aam
dec
push
hlt
leave
shl
jmp
int3
mov
loopne
jne
mov
xchg
int3
jp
nop
mov
ja
cmp
ss
pop
jnp
or
dec
scas
mov
movsl
push
sub
lea
xchg
jbe
cmpl
mov
call
mov
jecxz
enter
jle
mov
pop
mov
inc
fadds
mov
fwait
sub
aam
inc
mov
xor
sbb
push
sbb
push
fstps
cmp
xor
fbld
pop
ja
xchg
rorl
lahf
xchg
mov
sbb
imul
inc
xchg
and
fwait
imul
lcall
divb
popf
push
xchg
sub
xchg
imul
dec
daa
fmuls
xchg
cs
inc
es
push
mov
outsl
dec
push
fwait
arpl
shr
jmp
imul
dec
hlt
imul
push
xor
clc
push
adc
xchg
cmp
test
test
ljmp
dec
sbb
dec
mov
imul
dec
enter
decl
xor
lods
lret
addl
out
in
mov
mov
jbe
xlat
test
icebp
cmpb
les
loopne
push
cmpsb
lods
xlat
mov
into
andb
cmp
add
pop
addr16
and
jge
pusha
xor
jbe
movsb
and
adc
add
xor
mov
nop
lea
push
pop
repnz
idivb
push
imul
sbb
xchg
xchg
imul
shrb
xor
inc
bound
repnz
add
jbe
dec
cli
mov
push
in
jecxz
mov
loope
pop
in
pop
jge
adc
loopne
mov
sti
rclb
fildll
dec
ljmp
sbb
aam
in
ss
test
test
sbb
mov
inc
mov
cld
addb
cmp
lods
xchg
test
lds
mov
mov
cmpsb
pop
or
cwtl
pusha
sub
fdivl
imul
lret
js
inc
dec
dec
adc
cmp
cmc
or
or
mov
cwtl
and
mov
loop
push
ljmp
mov
xlat
mov
sub
lods
pop
int
pop
cmpsl
mov
mov
inc
lret
dec
outsl
lds
sbb
lea
or
rclb
ret
jp
into
xor
test
push
pop
xchg
les
mov
sub
mov
outsb
lea
mov
adc
lds
jmp
fldt
stc
inc
inc
cwtl
inc
pop
fildll
cltd
loopne
ret
test
outsb
mov
insb
aas
mov
addr16
test
stos
mov
xchg
cmp
out
rcr
mov
jg
sbb
enter
xor
sbb
insl
int
mov
cltd
dec
push
mov
insb
fiadds
mov
mov
sub
jb
fs
sbb
loope
sbb
filds
jl
aad
push
ds
scas
ja
scas
push
mov
mov
pop
mov
in
xchg
sub
mov
mov
sub
movsb
pop
mov
jmp
arpl
maskmovq
divl
rcrl
icebp
movsl
sbb
inc
rcr
push
mov
lock
mov
or
sub
push
test
jo
mov
add
iret
in
sbb
pop
xor
lods
and
imul
mov
loop
fisttps
int3
add
pop
fdivr
cmp
subl
xor
pusha
sahf
xchg
sarl
stc
das
imul
mov
loop
xchg
insl
adc
push
fidivrs
xor
fidivrs
or
nop
movsb
sahf
pop
jbe
xchg
xorw
xchg
add
inc
push
xchg
jne
dec
sbb
cmp
mov
popf
pop
test
dec
pop
test
push
xchg
add
in
insb
xchg
fsincos
jb
movsl
mov
js
inc
insb
jno
fistpl
inc
push
enter
lea
xchg
test
push
imul
pop
inc
cmpsl
fsubrl
jp
insl
jge
in
inc
aam
xor
jb
cltd
loop
push
cmpsb
mov
or
andl
adc
inc
loop
int3
divl
aad
pusha
ret
out
jg
adc
mov
jns
scas
cmp
insl
sub
add
dec
xor
cmpsl
xchg
pop
mov
jns
cmp
scas
adc
in
andb
inc
sub
iret
jl
aad
push
xor
jmp
cmp
lret
push
xlat
sub
xchg
push
pop
mov
mov
repz
out
push
stc
adc
xor
add
rorb
js
mov
xchg
cld
inc
push
mov
aaa
jmp
cld
insl
jmp
xchg
xor
cmpsl
or
scas
dec
add
adc
shll
testl
cli
mov
idivb
pop
ljmp
fbstp
xchg
and
sub
mov
sbb
mov
imul
das
aad
in
xchg
inc
daa
lock
js
mov
loop
ss
fnstcw
pop
sbb
sub
mov
mov
loopne
push
enter
xchg
pushl
push
sub
out
lock
adc
cmp
pop
adc
jp
mov
dec
jmp
push
shll
jno
mov
push
cmp
test
pop
in
das
aas
mov
xchg
bound
cmp
out
fwait
push
mov
lods
into
jle
inc
cmc
push
test
pushf
fwait
pop
fmul
mov
cmpsl
aaa
sti
cld
leave
pop
int
fwait
xor
dec
adc
sub
icebp
in
inc
outsb
out
cmp
mov
cld
divb
shrl
jmp
dec
pop
aam
jecxz
and
or
out
add
cmp
mov
fcoml
inc
ljmp
adc
or
mov
mov
pop
jb,pt
test
ret
cmp
push
adcl
mov
lret
xlat
fisttps
in
xchg
iret
pushf
and
mov
add
xchg
mov
inc
jb
daa
sub
aaa
out
popa
out
cltd
ja
dec
xchg
pop
arpl
pushf
or
add
out
xchg
push
loope
jge
adc
std
inc
outsb
ret
cld
push
xchg
and
hlt
dec
js
cmp
push
push
lcall
ja
js
cmpsb
stc
fadd
sub
ret
lock
out
xor
xor
cmpsl
inc
adc
stc
shll
pop
mov
sbb
lods
dec
test
xor
sti
add
les
stc
insb
xchg
rol
hlt
hlt
mov
jno
gs
mov
sub
push
inc
mov
mov
or
sbb
pop
cltd
pop
sete
jns
mov
ret
pop
arpl
hlt
outsb
fwait
mov
fistps
mov
outsb
rclb
pushf
mov
lret
cmc
dec
fucomp
dec
subb
mov
jae
cmp
in
fimull
mov
add
adc
and
mov
in
sarb
mov
in
push
or
cmc
mov
sar
sub
jnp
xor
pop
inc
repz
dec
dec
mov
stos
cli
mov
cli
sub
mov
push
insb
mov
sub
aas
jnp
jmp
fs
xchg
mov
pop
call
shrb
scas
cmp
inc
adc
mov
test
rcr
push
pushf
cmc
fnstsw
and
xorl
fsubs
clts
sbb
sbb
lret
jle
dec
xchg
movsl
divps
sub
inc
pop
daa
adc
fstpt
outsb
sbb
ja
outsb
or
aaa
test
mov
xchg
cld
sbb
or
mov
push
xchg
faddl
jnp
xor
repnz
mov
jnp
sahf
mov
hlt
jae
mov
xor
push
jnp
cmpsb
test
sbb
inc
lods
mov
insl
sbb
sti
pop
loop
cmpsl
idiv
dec
test
or
adc
and
ret
movb
jae
push
inc
mov
mov
jmp
icebp
fwait
sub
xchg
mov
xchg
enter
in
mov
cmp
bnd
xchg
xor
insl
sbb
xor
xchg
adc
ja
add
pop
lret
pusha
xor
cmp
jl
fildll
mov
mov
fsubrl
jmp
aam
fldenv
mov
fnstenv
or
scas
mov
push
shlb
shll
pusha
mov
jmp
stos
call
or
or
push
shll
sbb
cltd
call
sbb
stc
cmp
aaa
pop
sub
jmp
roll
icebp
push
inc
push
je
inc
or
dec
cwtl
aad
sbb
cmp
in
mov
push
cmp
cmp
bound
add
or
shlb
sti
lahf
lret
out
dec
mov
stc
mov
sub
cmp
mov
lock
mov
pslld
fadds
jo
push
fdivs
hlt
mov
mov
insb
ret
mov
xlat
xor
imul
pop
leave
add
jno
outsl
fsubl
adc
hlt
mov
xor
or
or
insb
arpl
lcall
rorb
repnz
cmp
mov
jns
test
repz
es
setl
jb
scas
and
mov
cmp
cltd
lds
push
inc
shll
das
call
test
cmpb
jne
ret
gs
stos
jge
scas
jno
mov
push
inc
and
mov
in
pop
add
mov
aam
lret
gs
sbb
cld
pop
inc
js
lea
int3
in
or
mov
cmpsb
aam
mov
fimull
es
loop
and
es
cmpb
jecxz
push
mov
mov
or
arpl
mov
lret
jbe
imul
cld
dec
cmp
push
aam
fisttps
xchg
in
sub
jmp
fcomps
rcl
jmp
sub
mov
jbe
cmpsl
fidivl
leave
lock
pop
decl
sarb
aas
cli
sarl
mov
adc
dec
sbb
jne
push
enter
icebp
push
popa
cld
bound
fldcw
mov
out
fwait
cmovl
scas
adc
add
jno
adc
mov
mov
pop
sub
cltd
dec
aaa
dec
mov
pop
movsl
jno
pop
cmp
xor
cmp
and
adc
mov
int3
repz
mov
test
cmp
and
cltd
xchg
xchg
lret
cmp
xchg
xor
ljmp
popf
pop
inc
dec
repz
inc
sbb
fcmovbe
and
aam
xor
inc
fxch
out
popf
mov
in
testl
add
call
jl
mov
out
pop
fists
or
ja
mov
add
hlt
aad
push
sub
adc
cmp
inc
adc
push
inc
jp
cs
out
jb
popf
loope
aaa
add
stos
mov
inc
sbb
add
inc
jne
movsl
inc
cmpsl
test
inc
add
insb
mov
push
and
pop
and
lahf
not
adc
mov
imul
mov
fadd
push
inc
lea
add
stos
loopne
arpl
outsb
mov
pushf
es
pusha
xor
pushf
mov
imul
push
clc
jne
mov
out
ljmp
push
das
roll
loopne
xor
or
aaa
xchg
and
cld
sub
insb
sub
lds
mov
lret
push
adc
loopne
arpl
xchg
jge
lods
jg
scas
add
inc
pop
test
popa
pop
mov
lods
xchg
pop
dec
jae
xchg
pushf
xor
outsb
dec
cwtl
cmpsb
mov
lret
sub
pop
jnp
sbb
leave
aad
clc
mov
subb
clc
push
cwtl
lret
addr16
xor
adc
movnti
rorl
mov
std
inc
push
push
fsubrl
and
dec
insb
aas
ret
idivl
sbb
aam
push
push
cli
in
sub
sbb
dec
or
outsl
fwait
sahf
push
ja
pop
out
jnp
push
sub
pop
test
ds
add
andb
mull
push
fistpll
adc
pop
mov
push
lock
sbb
inc
push
into
out
pop
push
xor
ds
mov
test
or
add
es
clc
aam
loopne
or
jnp
mov
in
cli
loope
sti
xchg
ss
jbe
sub
shl
mov
lods
fcmovnu
sub
in
push
in
addr16
mov
test
js
fsubl
jo
jo
sbb
pop
lret
fisttpll
xchg
xchg
jge
inc
je
push
sub
jle
mov
adc
fxch
aaa
push
push
sub
faddp
mov
or
aad
iret
inc
mov
data16
pop
cmp
and
jns
mov
inc
in
icebp
push
push
mov
jg
mov
push
cmp
cltd
cmovge
daa
ja
ja
and
sub
imul
stc
xor
and
mov
jmp
test
sarl
lods
nop
dec
mov
xor
stos
adc
fists
or
push
cmpb
push
mov
dec
test
mov
orb
xor
iret
push
dec
mov
inc
xor
push
sbb
push
adc
sbb
ja,pt
push
lahf
and
repnz
mov
test
fistps
cmc
repz
mov
popa
lods
mov
add
add
fiaddl
shll
cwtl
shl
mov
mov
dec
xor
les
outsl
push
mov
sub
lds
pushf
xor
pop
push
lods
jecxz
mov
shlb
and
cwtl
loope
adc
andb
ret
xor
int3
jecxz
call
das
jg
mov
shr
jg
and
lods
adc
or
scas
mov
imul
repnz
mov
jg
jp
lock
jmp
pusha
jne
push
rorb
add
jl
out
xchg
dec
xorl
cld
jp
dec
lods
pop
pop
add
fimuls
pop
mov
mov
mov
es
cmp
xchg
fiadds
pop
frndint
mov
out
mov
xor
jle
dec
mov
js
mov
mov
sbbb
lds
sbb
in
test
flds
and
sub
icebp
scas
or
xchg
mov
dec
rcrl
mov
adc
imul
fmul
lods
scas
push
lret
xchg
test
aas
dec
fisubs
stos
and
cmp
lcall
into
notl
mov
jne
cmp
push
cwtl
sub
aad
fcomi
inc
int3
jbe
fiaddl
lock
mov
mov
ljmp
cld
inc
pop
cli
cmp
sub
mov
lods
stc
pop
aas
sub
and
xor
and
cwtl
cmp
pop
lods
mov
repnz
mov
xchg
dec
jae
xor
or
pushf
mov
rolb
popa
xchg
sub
aas
sbbb
inc
mov
clc
and
push
aas
rcrb
orl
gs
xor
push
and
js
jle
nop
push
pusha
aaa
mov
or
and
xchg
pusha
test
mov
test
inc
aam
daa
dec
adc
imul
xlat
std
lods
xchg
mov
repz
push
or
xor
addl
nop
dec
and
fldcw
cmc
dec
cmc
mov
jg
in
ror
shrb
shr
xchg
and
push
jnp
mov
add
xlat
jns
add
into
xchg
loop
mov
cmp
sti
hlt
mov
lock
jae
movsl
jle
inc
add
sub
adc
or
ds
std
xor
popf
test
lahf
mov
repz
lods
mov
call
mov
ds
mov
push
lahf
xchg
cli
adcl
loopne
imul
mov
pop
jnp
ret
ljmp
insl
popa
loop
push
mov
xor
and
out
sub
dec
ret
or
sub
scas
xchg
mov
lds
jmp
fcoml
es
imul
shlb
inc
test
loop
nop
mov
ss
aas
push
xchg
inc
divl
add
stos
xchg
rcrb
jo
push
mov
add
pusha
mov
lock
dec
std
mov
in
cmp
mov
fistl
clc
push
cli
mov
xchg
xor
inc
sbb
mov
lods
ret
leave
and
jae
lock
push
leave
xchg
shll
insb
mov
js
fstl
jno
pushf
in
hlt
pop
dec
jecxz
add
sbb
dec
fcomps
lcall
xor
xor
jbe
or
and
adc
clc
aaa
mov
mov
pop
cwtl
mov
jns
or
mov
int
test
add
std
adc
gs
cmp
push
mov
xor
push
and
add
adc
lcall
mov
xchg
xor
cmp
rol
cmpsb
or
jb
push
or
ret
sub
push
jecxz
lea
pop
stc
mov
stc
or
out
sahf
loop
popf
daa
cmp
mov
fsubr
sbb
sub
mov
xchg
cmp
add
add
aaa
cltd
dec
push
pop
mov
pop
dec
adc
fdivl
mov
jbe
jecxz
roll
push
jne
les
test
jmp
sbb
loop
mov
or
sbb
inc
adc
and
divl
std
into
std
ljmp
mulb
in
dec
in
mov
mov
xor
xchg
cmp
mov
ljmp
ret
pop
cmp
and
add
mov
cs
mov
or
jbe
shr
push
fsts
ret
ss
push
or
push
clc
pop
ret
xchg
inc
mov
xchg
mov
push
inc
dec
cmpb
pusha
xor
mov
add
incb
js
xor
bound
cmp
sbb
mov
cs
fsubrp
adc
ret
xchg
je
js
xchg
test
lret
cmp
cli
add
int3
push
cmp
push
cmp
mov
mov
ds
mov
add
push
decb
hlt
jbe
repnz
mov
in
sub
in
or
int3
lods
mov
mov
dec
xchg
fisttps
push
xchg
mov
ljmp
outsl
imul
cld
sbb
lock
fistps
pop
leave
push
jmp
dec
fs
xchg
popa
outsb
push
and
add
dec
cmp
push
push
lods
lock
sub
aad
fistps
sbb
mov
movsl
cmp
inc
iret
test
add
push
jo
push
mov
fistl
dec
jecxz
dec
push
add
or
sbb
xorl
mov
mov
iret
in
scas
xor
mov
daa
adc
repz
ja
adc
hlt
jmp
xor
mov
in
cmp
inc
xchg
jge
lods
hlt
pop
cmp
inc
mov
dec
bound
xchg
mov
mov
or
sbb
jbe
add
fildll
imul
scas
mov
fcoms
or
rcll
push
iret
xor
popf
dec
mov
imul
in
push
xchg
testb
pop
lods
insb
pushf
in
cmp
mov
mov
bound
cmpsl
mov
push
cmp
das
pushf
adc
fcoml
notl
mov
push
inc
aas
imul
andb
divb
out
rcl
in
pop
mov
cmp
or
mov
sbb
psrlq
es
sbb
movsb
sbb
movsl
mov
cmp
dec
add
les
push
push
bound
xchg
decl
movsb
pop
mov
xchg
fs
mov
adc
inc
mov
idivb
movsl
icebp
lret
jecxz
scas
push
insl
push
mov
fisubs
jge
mov
lock
xchg
cmp
pop
add
sahf
mov
out
dec
ds
divb
mov
add
jo
fmull
adc
call
loope
push
xor
je
mov
gs
sti
push
popa
negl
loope
hlt
cmp
rclb
fistpl
cwtd
pushw
adc
insl
fcomp
xchg
arpl
xchg
push
das
out
repnz
mov
dec
fldenv
fmul
mov
push
popf
push
and
sti
push
push
lea
outsl
mov
jne
aas
sbb
or
sub
fistpl
jae
jns
scas
and
in
repnz
jbe
frstor
and
push
jo
push
lds
std
cli
sub
aaa
dec
insl
scas
jnp
xor
xchg
mov
das
jno
mov
and
inc
repnz
sbb
adc
xor
clc
xchg
inc
sub
das
in
mov
mov
mov
xor
out
imul
adc
cmp
jb
and
idivl
mov
nop
or
stc
subl
adc
pushf
out
cltd
jp
fidivl
inc
inc
pop
xor
jp
addb
aad
inc
pop
push
xchg
or
adc
xor
cwtl
jl
les
push
in
sti
push
xor
inc
js
jo
dec
sub
dec
outsl
lods
addr16
jnp
arpl
adc
mov
das
leave
add
xchg
inc
loop
jae
cmp
push
addr16
xor
insb
and
out
aam
out
push
xchg
push
faddl
sahf
mov
out
imul
das
fwait
and
and
iret
out
les
out
lret
pusha
mov
push
jne
lret
cmp
outsb
pop
add
xchg
rclb
test
std
dec
xchg
pop
sbb
mov
loop
jl
ret
inc
lcall
inc
push
sub
icebp
fs
adc
in
out
cli
je
fwait
inc
or
in
faddp
out
loopne
xchg
fildll
lods
cmc
cmp
sbb
insl
dec
mov
cld
pop
xchg
pop
loope
cmp
in
ja
inc
adc
shll
clc
ljmp
icebp
es
in
dec
push
cwtl
outsl
bound
jb
fstpt
cs
addr16
mov
cltd
push
shlb
adc
mov
jge
sbb
push
and
cmpsb
out
push
pusha
xor
push
mul
lods
mov
cmpsb
insl
shrb
adc
jge
add
push
pop
or
fisubrs
je
ds
cmpsl
push
lock
les
and
xchg
mov
and
loop
jnp
rol
loop
sbb
test
mov
ds
popf
mov
mov
dec
lret
dec
inc
stos
out
xchg
push
adc
sbb
pop
cld
add
lods
mov
clc
adc
clc
xor
aas
inc
in
jp
lea
adc
test
fs
jns
in
imul
push
add
lds
lock
pop
lret
roll
sub
mov
ds
aaa
jns
adcb
cltd
dec
int3
call
or
adc
imul
les
dec
jp
in
sti
cmp
int3
imul
icebp
lahf
mov
jle
enter
addr16
es
adc
mov
iret
fidivs
fisubs
jb,pt
int
and
mov
adc
in
insb
call
adc
xor
jae
out
and
adc
inc
rcrl
push
inc
inc
es
xor
shll
push
xor
xchg
out
repz
aam
pop
lret
sub
iret
movsb
js
xorb
push
pop
cmp
mov
mov
fnstcw
and
dec
jmp
push
mov
ret
adcl
push
dec
mov
enter
rorl
mov
add
mov
and
pop
push
xchg
data16
inc
or
sub
out
jae
jae
outsb
mov
adc
shll
or
loopne
mov
pop
jle
jmp
aad
stos
out
inc
insb
test
arpl
jb
stos
pop
lds
cmpsb
xor
inc
pop
or
scas
movsl
popf
jle
xor
mov
pop
out
jnp
sub
rol
pop
mov
outsl
into
xchg
sar
test
dec
mov
xor
fildll
shl
mov
jl
cmp
outsb
pop
pusha
xchg
xor
js
fdivl
add
jg
jecxz
jno
insl
inc
mov
aad
rclb
or
nop
xchg
mov
cwtl
mov
jbe
lock
jae
mov
shll
jecxz
jne
cld
aas
pop
sub
ss
push
in
jmp
cmc
sbb
movsl
dec
mov
jno
dec
mov
pop
aam
in
cltd
pushf
adc
cltd
out
mov
mov
xchg
cmp
xchg
dec
into
mov
cmpsb
mov
inc
pop
out
push
xor
in
pop
pop
pop
cmp
dec
cltd
mov
cmpsl
jle
test
sbb
ja
xchg
arpl
mov
lret
xchg
push
or
out
fsubrl
in
fcom
ret
outsl
out
push
neg
inc
pop
push
loopne
scas
dec
adc
lods
xchg
xor
and
jle
popw
pop
adcb
jne
cmpsb
cwtl
pop
mov
sub
sti
int
cmpl
xchg
pop
pop
rclb
push
hlt
dec
lcall
adc
popf
jns
mov
sbb
lret
dec
pop
adc
and
inc
add
mov
jge
push
push
xor
dec
ret
cld
outsl
push
mov
xlat
mov
pop
lea
push
cmp
xchg
push
call
sub
test
mov
arpl
mov
loope
insb
or
scas
xchg
stos
push
out
or
xchg
xchg
sbb
shll
jge
int
ror
insb
dec
add
popf
outsb
ja
roll
push
out
sti
cltd
sarl
std
add
xorl
sahf
call
adc
adc
dec
jo
cmp
mov
lods
test
mov
clc
cmp
sbb
cmp
out
shrb
sbb
dec
iret
sahf
ret
sbb
pop
lods
ja
lret
pusha
xchg
sbb
hlt
arpl
xchg
xchg
lret
dec
sub
fstpl
in
les
xchg
xor
inc
sbb
fwait
push
fistps
ret
arpl
push
dec
xchg
fs
mull
nop
aaa
jo
dec
cmp
call
mov
pop
add
mov
cmp
mov
pop
mov
and
mov
push
xor
and
add
and
scas
xchg
jmp
test
cli
xchg
add
in
aad
mov
shrl
adc
and
ja
mov
cwtl
stos
jno
inc
in
cld
aad
sub
out
es
fisubs
or
lock
sbb
fs
ret
pop
xchg
in
arpl
inc
inc
mov
jno
rcl
in
bound
sarl
mov
mov
push
sahf
inc
jnp
popf
mov
inc
aad
mov
or
xor
in
icebp
daa
fisubl
mov
push
cmp
add
jg
add
mov
std
movsl
dec
cmp
mov
gs
dec
sahf
push
cld
mov
in
nop
jmp
push
insb
mov
adc
and
divb
out
sbb
loopne
mov
push
xchg
jl
mov
sbb
inc
jnp
pop
add
inc
into
mov
das
sub
les
inc
fisubrl
pop
push
scas
ljmp
sub
push
out
sbb
xchg
xchg
sbbb
mov
nop
inc
fcomp
ja
mov
xchg
std
mov
lea
jo
cltd
push
movsb
fs
add
xor
push
or
rcl
int
jl
movsb
ss
push
stos
and
inc
jbe
jecxz
lretw
mov
aas
pop
cmpsb
cmp
icebp
test
test
sbb
or
pop
imul
or
nop
dec
jle
or
jno
jnp
lret
rorl
ja
leave
out
neg
pop
or
xor
sar
es
sahf
push
xchg
out
inc
jb
ss
dec
add
pop
dec
mov
outsb
add
inc
xor
pop
pop
pusha
and
push
test
inc
mov
js
clc
lods
jae
dec
xchg
sbb
icebp
jle
push
in
fisttpl
jp
cli
push
add
jg
mov
cmpl
cmp
shll
mov
sbb
mov
loop
dec
xor
inc
xor
out
mov
jmp
mov
lds
sub
fsubrl
lods
jg
mov
fstpt
mov
sub
mov
stos
jbe
js
inc
fildl
xchg
insb
fsubs
jno
add
xor
jl
sti
or
inc
jmp
jmp
bswap
xor
mov
push
xor
xchg
jmp
push
xchg
xlat
inc
cmp
fcmovb
push
jge
cmp
jo
add
pop
out
roll
cmp
mov
xor
sbb
hlt
test
dec
pmullw
movntq
fidivl
mov
lahf
xor
cli
jno
fs
mov
lods
inc
push
adc
leave
repz
out
dec
push
nop
adc
int3
jl
fcmovu
pop
fldcw
jae
rclb
in
lock
idivb
or
dec
jge
pop
mov
out
repz
outsl
jl
mov
imul
mov
loopne
aam
ljmp
push
dec
bound
lock
std
jns
daa
pop
ja
xor
xchg
ret
je
sbb
nop
mov
in
arpl
out
jne
cmc
js
sub
cwtl
je,pn
stc
add
andb
sbb
pop
faddl
das
add
dec
in
outsl
cmc
aad
pusha
iret
inc
pop
jns,pt
call
jecxz
inc
push
out
mov
popa
push
xchg
jns
and
mov
or
imulb
mov
jnp
dec
outsb
xor
sbb
or
cmp
push
into
xlat
mov
jl
leave
repnz
shlb
pop
mov
sbb
or
lahf
sbb
add
repz
lods
jne
mov
subb
mov
inc
aas
push
outsb
jge
jb
mov
aam
push
xchg
out
rorb
aad
push
cmp
sub
fistl
ds
inc
movsl
cmp
loop
sahf
incl
inc
push
jnp
ficomps
hlt
scas
pop
cmpsb
sub
ljmp
dec
iret
pop
rcrb
dec
testb
mov
es
jecxz
popf
xchg
xor
test
dec
out
dec
nop
fisubl
xor
mov
or
mov
add
jle
aad
jno
je
pop
aaa
test
push
gs
es
call
es
gs
call
stos
adc
fimuls
dec
dec
lods
push
pop
jnp
xor
adc
cwtl
sbb
movsl
dec
sub
push
call
jne,pn
popf
adc
pushf
into
shl
sub
jg
or
or
or
ret
or
mulb
xchg
sbb
bound
cltd
mov
jne
xor
pop
xlat
add
inc
pushf
mov
jle
ftst
arpl
rcrb
bound
insb
xchg
int3
in
mov
test
xchg
or
jbe
aam
add
and
dec
jns
mov
ret
mov
lods
mov
bound
sbb
or
call
xor
ret
shll
gs
pop
push
aaa
enter
or
test
or
mov
mov
ja
pop
cmp
mov
mov
dec
iret
mov
sub
xchg
imul
jmp
cmp
scas
imul
dec
shll
mov
fnclex
dec
xlat
stc
add
fs
jno
xchg
mov
sbb
push
aam
cld
in
xchg
cmp
std
cmpsb
das
test
xchg
movsl
mov
pop
mov
cs
test
jo
inc
test
in
mov
push
mov
aas
bound
test
jp
adc
or
jge
xor
shrl
call
test
sbb
or
js
aam
mov
outsb
push
out
jo
add
leave
sub
ret
inc
shll
into
iret
movsb
jns
pop
jmp
shl
fmull
pop
push
sbb
imul
adc
mov
add
mov
les
jmp
inc
imul
fildl
adc
or
push
sbb
ja
or
sbb
xchg
rcrl
stos
pop
icebp
mul
addr16
jle
aad
pop
mov
or
repnz
sbb
rolb
jge
mov
jg
jbe
movsl
stos
int3
movsl
inc
test
sbb
stc
movsl
sahf
call
xchg
jb
lahf
sub
call
imul
or
add
mov
in
ja
xchg
dec
popf
cmc
push
cli
xlat
fdivrp
in
and
dec
mov
aad
add
test
jmp
dec
mov
xor
pop
xchg
jno
je
sbb
sbb
adc
mov
or
nop
push
aaa
jp
mov
xor
or
sar
add
clc
mov
dec
mov
jl
fcomps
jb
cmp
int3
inc
ss
push
jp
inc
mov
pop
lea
testb
stos
stos
sahf
es
and
pop
inc
std
mov
adc
mov
jb
cmpsb
push
insl
fistps
aad
jae
addr16
add
sti
and
adc
sahf
and
mov
mov
cmpsb
xchg
jne
lahf
dec
or
out
cmp
lea
cltd
arpl
and
movsl
std
pop
jns
fcmovnb
fiaddl
inc
inc
dec
int
pop
cmp
popf
mov
xor
icebp
mov
add
cmp
insb
mov
push
shlb
popa
jno
lcall
roll
mov
cmp
into
push
out
cs
cld
jnp
xchg
adc
adc
rolb
push
div
mov
rorl
bound
or
xchg
test
push
xchg
inc
pop
fisttpll
daa
sarl
ret
repz
cltd
mov
adcb
int
mov
test
dec
hlt
push
aam
int
mov
cmp
pop
testl
inc
mov
sbb
insb
pop
pop
add
pop
push
in
pop
les
add
cli
hlt
in
insb
imul
xchg
inc
loopne
xchg
pop
int3
shll
scas
fs
sub
adc
ljmp
pop
mov
leave
sbb
call
push
lods
jb
and
push
ret
into
cs
gs
sub
fiaddl
test
sahf
hlt
dec
and
cwtl
sub
mov
adc
xchg
sbb
not
lret
fimuls
mov
ds
xchg
std
or
jmp
jge
arpl
cmp
adc
mov
pop
clc
lods
mov
jne
mov
mov
shrl
call
rorb
nop
or
sbb
sahf
and
xchg
shrb
adc
xchg
movsb
ljmp
mov
jmp
push
scas
ja
mov
jg
insl
push
push
jecxz
push
fwait
psubd
std
aad
flds
add
sahf
xchg
jp
imul
add
lds
jle
pusha
add
adc
in
mov
pop
sub
dec
push
xchg
imul
cmpl
movsl
sbb
lock
pop
sub
and
xor
shll
mov
ror
cmp
and
jne
stc
lret
out
scas
out
jb
aad
test
fwait
push
das
cmp
mov
sbb
lock
das
cmpsb
cmp
push
icebp
mov
sbb
movb
lret
int3
mov
test
scas
sbb
rcrb
mov
mov
mov
and
or
pop
insb
xchg
pop
and
movsl
insb
lods
or
sub
and
push
lret
add
test
out
insb
hlt
sub
xor
jl
jb
and
push
movsb
andb
ss
cld
xor
pop
inc
mov
aas
repnz
mov
out
cmc
or
je
test
push
xchg
ljmp
out
xor
push
adc
cmc
xchg
pop
es
mov
dec
pop
lock
mov
or
mov
clc
jns
imul
jne
lods
cmp
pop
and
addr16
xchg
pop
xchg
loope
cmpb
xchg
mov
ljmp
sub
dec
bound
shll
notb
mov
sbb
rorl
jo
push
inc
inc
push
sbbl
add
xchg
adc
or
adc
cs
es
dec
mov
jle
jg
mov
popa
jns
mov
ja
js
out
nop
and
in
push
xchg
cltd
sbb
adc
fs
outsb
xchg
pop
into
dec
sbb
ret
sbb
pop
mov
je
cmp
dec
ss
push
sahf
mov
loop
xchg
sarl
add
pop
int
cmp
test
in
les
xchg
test
gs
cld
clc
mov
adc
pop
and
lods
subb
mov
jb
lods
pop
mov
sbb
stc
lds
mov
pop
adc
or
and
cmpsb
xor
shlb
or
pop
sbb
inc
shrb
fcoms
jecxz
sti
push
or
mov
pop
ja
imulb
addr16
fsub
insb
jg
jno
lret
sub
jmp
stos
pop
xchg
adc
ja
sbb
ja
pop
and
ja
sbb
inc
xchg
push
pop
in
cmp
sbb
stos
sarb
test
mov
ljmp
test
stos
fimull
push
mov
out
sahf
fs
and
imul
and
insb
and
xor
ja
pushw
xor
arpl
pop
fldt
loope
or
dec
jns
adc
cmpsb
cmp
cmpb
jbe
or
or
cmpsl
push
cmp
dec
dec
inc
js
cmc
xor
into
and
ljmp
mov
or
add
ret
pop
xor
cs
mov
gs
rcl
push
dec
jbe
ljmp
out
je
sub
lahf
out
lcall
stos
pop
or
shll
xchg
sbb
sbb
pop
mov
sti
addb
add
cmp
aam
in
shl
cmp
xor
sub
and
jl
lock
jno
mov
mov
jb
sti
cmp
sbb
je
and
mov
mov
jmp
mov
xchg
and
sbb
jb
enter
lods
lock
xor
rclb
cmpsl
adc
rcr
addr16
decl
shll
add
push
inc
sti
stos
lea
cli
mov
inc
bound
out
lahf
insb
cmp
je
mov
stc
add
pushf
mov
push
cmp
sbb
jp
sbb
stos
mov
test
repz
jge
jno
jmp
dec
push
das
mov
adc
pop
pop
xchg
xchg
aas
popf
add
stos
std
inc
sub
xchg
dec
and
xchg
int
xlat
add
clc
jl
enter
mul
sti
push
test
sub
scas
aam
mov
rcll
xchg
add
push
cs
gs
mov
inc
pop
inc
sbb
pop
xchg
mov
test
fisttpll
mov
outsb
and
sbb
xor
push
insb
push
enter
dec
pop
loopne
imul
int
out
stc
jbe
mov
push
lret
dec
and
mov
in
push
ljmp
lods
rcll
iret
jne
mov
inc
in
push
jnp
sub
gs
cmp
push
gs
scas
in
push
xchg
and
outsb
inc
mov
xchg
clc
dec
cmp
lds
mov
aam
pop
fwait
mov
mov
movsl
pop
add
xor
stos
sti
fldt
popa
int3
icebp
dec
stc
cwtl
pop
inc
mov
xor
fsubp
aaa
adcb
or
out
int3
mov
fwait
ja
cmp
inc
andb
jg
dec
inc
sbb
fwait
sbb
xchg
dec
repnz
ficompl
idivb
jbe
popf
ds
fimuls
popa
fstpl
pop
sub
inc
jecxz
fadd
cltd
xor
movsb
out
in
and
add
sbbl
loop
inc
mov
stc
arpl
shrb
mov
jp
stos
jo
jg
inc
mov
jmp
add
movsl
pop
movsl
jmp
aas
cmp
inc
jnp
and
mov
lea
jmp
call
xchg
mov
jge
mov
hlt
mov
push
subb
out
lea
movb
add
movsb
mov
xlat
push
scas
lcall
std
std
repz
push
jecxz
or
dec
sahf
iret
and
bound
lods
fistl
jno
mov
shlb
in
fsubrs
mov
add
inc
in
mov
or
lret
mov
aaa
lret
adc
or
lcall
lds
push
imul
mov
or
shll
mov
dec
sbb
jmp
add
ss
ret
or
or
jae
dec
out
stos
cs
push
sbb
fcmovne
das
shlb
inc
les
arpl
aaa
repz
add
mov
push
pop
orl
movsb
xchg
test
loopne
add
push
mov
cmpsl
xchg
out
sub
ret
icebp
popa
mov
mov
add
scas
fisttpl
xchg
push
imul
bndldx
and
xor
repnz
and
dec
mov
push
cwtl
sbb
nop
mov
loope
mov
outsl
call
and
push
xchg
sbb
xchg
add
mov
or
mov
mov
add
push
test
or
xchg
xchg
jno
test
movsb
jg
cmp
mov
lock
nop
cwtl
or
arpl
xchg
push
xor
cli
notb
shll
mov
xlat
xchg
popa
sbb
cli
xor
adc
popf
sbb
sub
xchg
jb
inc
sub
sub
jo
divb
dec
mov
and
lcall
pop
fwait
sbb
sub
test
add
test
adc
pushf
sub
mov
test
repnz
pop
jle
inc
in
pop
adc
dec
push
cmp
in
cli
hlt
sub
aaa
mov
or
add
xor
inc
add
xlat
lret
pop
cld
adc
add
sbb
test
fidivl
rcrb
arpl
jge
mov
push
outsl
gs
ficompl
inc
inc
fmuls
mov
in
mov
jmp
lds
aaa
es
adc
fld1
loopne
in
or
dec
cmp
lret
mov
mov
sub
cwtl
popf
adc
pop
jae
or
xchg
aad
sub
mov
pop
xchg
xchg
cltd
outsb
pop
loop
dec
les
jmp
cmp
test
fisttps
mov
repnz
jp
add
pop
orl
and
pusha
dec
call
repz
lret
mov
arpl
shlb
add
inc
pop
rcl
call
sbb
call
scas
or
in
mov
sahf
adc
xor
add
pop
outsb
mov
mov
lret
ret
add
mov
cmp
lock
cmp
cmpsl
rorl
dec
mov
inc
mov
loope
mov
hlt
xchg
inc
mov
int3
and
jmp
cmc
mov
rcrl
bound
in
sbb
outsl
mov
xchg
xchg
xorl
stc
call
movsb
add
insl
mov
push
cmp
xchg
sbb
dec
jo
fwait
mov
ljmp
fs
gs
mov
jp
mov
in
mov
add
ror
ret
fwait
icebp
inc
paddd
fisubrs
xchg
je
sbb
cmp
stos
adcl
fisubrs
pusha
mov
push
push
jns
mov
ja
int3
shrb
inc
jnp
roll
lcall
adc
adcb
sub
roll
inc
andb
or
sub
cmp
cwtl
pop
xor
fisubl
orb
icebp
or
repz
cmp
fdivrl
and
sarb
imul
adc
lret
pop
xor
xor
pusha
xchg
sbb
cmpsb
icebp
roll
xor
fidivrl
push
test
push
add
and
dec
dec
shll
clc
or
dec
clc
sub
enter
pop
mov
out
mov
cmp
repz
jb
imul
adc
cmpsb
fistps
cmpl
add
fstpt
out
stc
test
inc
adc
sbb
fs
mov
imulb
adc
jb
pop
and
mov
xor
orb
mov
data16
pop
sahf
stos
pop
pop
and
test
xchg
jecxz
adc
add
jge
push
mov
scas
or
sub
aam
pushf
xchg
pop
stos
inc
add
fst
xchg
push
inc
stc
lcall
mov
loopne
in
sarl
xchg
xchg
popf
xchg
dec
or
ja
sbb
mov
lea
xlat
dec
shrb
scas
add
mov
jbe
pop
movsb
dec
adc
insb
adc
aam
sbb
sti
add
and
dec
push
das
cmpsb
cmpsb
mov
sbb
insb
xor
adc
fstl
push
cmc
cmc
gs
dec
sub
negl
or
dec
popf
push
fldl
mov
out
pop
lds
cmp
sub
or
jne
jb
or
cltd
ror
repz
lcall
repz
scas
xchg
or
jbe
repz
xchg
jge
das
mov
jle
inc
sbb
jae
mov
adc
xchg
js
adc
addb
scas
pop
push
es
in
jle
or
das
jg
int
or
arpl
clc
sub
inc
cmpsl
insb
mull
mov
cwtl
and
inc
mov
imul
imul
addr16
pop
mov
enter
sub
js
pushl
loop
xorl
out
cli
cmp
push
mov
loop
add
adc
mov
jo
shrb
sub
xor
lret
pop
push
push
icebp
sbbb
mov
lahf
mov
or
jae
lret
lock
fwait
mov
data16
jge
jno
out
rcrb
lea
add
pop
cwtl
pop
xchg
push
jno
jns
jg
mov
pop
aam
add
aam
aaa
lods
mov
cmpsb
cltd
int
loope
repnz
adc
bound
clc
xchg
shll
sub
pop
pop
mov
std
test
in
push
push
fcoml
mov
jae
cmp
lods
sub
lock
cmp
jnp
or
xchg
inc
mov
insl
pushl
mov
je
movsl
fwait
shlb
addl
or
dec
loop
xor
aaa
inc
decl
loope
lret
cli
fwait
push
stc
sti
inc
cmp
xchg
dec
push
xchg
add
repz
xchg
sahf
xchg
outsb
bnd
dec
js
mov
jno
insl
scas
rolb
stos
jns
xchg
push
mov
jge
stos
iret
aad
add
dec
mov
fcomp
scas
push
and
jmp
xor
xor
pop
shlb
and
adc
cs
sti
loope
add
ficoms
in
call
into
negb
pushf
ja
adc
xor
imul
outsb
insl
mov
mov
test
jmp
xchg
popf
idivl
cmp
mov
pop
pushl
mov
icebp
int3
punpckhdq
lahf
mov
sti
repz
jle
pop
or
pusha
jno
orl
pusha
shll
aaa
lock
cmp
adcb
mov
sbb
mov
pushf
outsb
push
adc
movsl
and
jecxz
xchg
movsb
stos
sbb
int
imul
cmp
mov
dec
xlat
fsubs
mov
pop
imul
repnz
dec
sub
inc
pop
cmpsb
fwait
cmp
jmp
adc
lret
mov
sub
jl
lahf
dec
in
add
dec
femms
test
negb
and
pop
movsb
rorl
arpl
insb
dec
sub
icebp
inc
ja
mov
loop
mov
popf
fisubl
dec
imul
xchg
and
inc
fistps
push
fmuls
jmp
shr
lcall
pop
out
mov
inc
lret
jg
mov
enter
aam
subl
imul
incb
hlt
jb
push
pop
push
mov
push
loop
xchg
dec
fwait
mov
sti
scas
dec
ljmp
jg
mov
mov
enter
pop
pop
insl
scas
mov
outsl
or
test
movsb
xchg
jle
adc
inc
dec
mov
jo
xchg
push
out
jecxz
mov
popa
dec
lods
sub
sti
jne
lahf
das
movsb
imul
pop
push
dec
inc
pop
inc
jnp
sub
push
pusha
dec
or
cmp
in
inc
dec
mov
cmp
inc
ret
mov
ds
ret
pop
pop
sub
pop
mov
ss
mov
loope
inc
push
mov
daa
inc
cmp
mov
lock
imull
dec
addr16
jle
push
mov
sti
inc
std
jo
pop
xchg
push
xchg
es
pop
push
movsb
aaa
cli
ljmp
insb
push
rolb
push
adc
nop
outsb
out
xor
mov
outsb
stc
fcomp
rcll
or
in
push
lret
sbb
ret
je
sahf
xchg
into
pop
push
repz
test
add
or
mov
cmp
adc
sbbb
or
xlat
repnz
xchg
fmull
sub
jne
sbb
mov
cmp
inc
rclb
cmc
mov
fwait
cs
push
pop
ret
pop
push
fsub
test
xchg
ret
cmp
lods
fistl
push
push
movb
sub
shl
leave
jnp
loope
push
jns
lret
mov
pusha
or
cmpsb
ljmp
sbbl
sub
in
fwait
adc
dec
shl
sbb
or
rep
cld
push
push
or
inc
sub
sahf
pop
inc
push
jnp
mov
mov
sub
inc
pop
jecxz
pop
std
or
out
add
ret
mov
cmp
add
aam
es
sbb
lea
inc
lds
loop
jbe
push
xchg
scas
ljmp
enter
scas
shll
jo
orl
xchg
dec
and
add
push
xor
mov
sub
jo
shrl
cmp
addr16
popf
jmp
enter
in
push
add
sbb
rol
dec
cld
pop
daa
xor
repnz
mov
mov
jno
jno
mov
pop
push
push
inc
ljmp
jbe
or
mov
jg
mov
add
or
adc
imul
dec
inc
test
je
inc
jnp
scas
xchg
out
dec
cmp
pop
call
sahf
shll
push
ret
xchg
push
stos
mov
enter
icebp
sub
push
and
lcall
xchg
xchg
mov
test
arpl
mov
pusha
sub
ret
les
jecxz
sub
stc
nop
adc
mov
dec
or
adcb
bound
and
adc
jb
add
sub
mul
ficoms
lret
pop
push
mov
daa
aad
insl
xchg
push
adc
xchg
sbb
mov
inc
xor
push
rolb
lret
mov
loopne
lahf
repz
dec
adc
xchg
fcmovnu
addr16
test
insb
jle
je
push
mov
mov
adc
dec
leave
adc
inc
repz
sti
cmp
pop
call
cld
sbbl
movsbl
pop
sub
loope
imul
loopne
sahf
shll
jb
pop
add
aas
cmp
arpl
jp
push
adc
pushf
or
fdivr
jmp
ljmp
aas
or
aad
in
sbb
pop
js
out
dec
dec
scas
sub
sarl
into
push
lea
sub
add
loopne
in
mov
mov
pop
arpl
loop
gs
cmp
js
and
sub
xchg
push
push
aam
push
stos
popa
outsl
cmpsb
js
mov
loop
sbb
inc
repz
cli
enter
scas
or
mov
sbb
fidivrl
jnp
mov
stc
jno
mov
inc
aam
jge
mov
and
mov
inc
or
sub
jb
in
sub
push
shl
dec
xlat
fisubl
imul
adc
add
push
rolb
xchg
mov
ljmp
std
sbb
cwtl
into
dec
movsl
push
ss
or
push
and
ds
ss
jne
testl
mov
xlat
sbb
fldcw
pop
pop
icebp
cld
iretw
out
popa
xadd
loope
repz
xchg
ret
and
mov
dec
jl
mov
into
lcall
lret
hlt
daa
mov
aas
test
or
mov
stos
inc
xor
sbb
call
rcl
inc
jmp
mov
jbe
ss
out
jbe
sbb
push
xchg
subl
cmpsl
scas
pop
cwtl
ljmp
les
mov
mov
jno
or
jnp
and
or
jmp
mov
jne
inc
popa
inc
mul
inc
fsts
loope
xchg
xchg
jns
cwtl
stos
insl
push
sbbb
ret
and
jbe
add
lods
test
cmp
subps
pop
into
popa
jp
mov
jno
xor
pop
xchg
iret
mov
cld
push
pop
cwtl
pop
dec
movsb
jae
sti
mov
jb
fwait
inc
cli
sbb
test
adc
xchg
jne
fcom
jnp
pop
into
out
xorb
stos
cmpsl
shrl
lahf
into
xchg
aaa
jmp
inc
in
and
sbb
iret
out
mov
jge
jae
mov
xor
jge
add
sti
movsb
pop
dec
xlat
inc
sbb
ficoml
pmulhw
lock
add
xor
ja
lret
mov
or
mov
jecxz
cs
sar
or
les
xchg
out
imul
mov
sub
sbb
xor
inc
outsb
movsl
pop
sub
and
xor
sbb
mov
cld
inc
rcrl
iret
xor
das
lds
movsb
cmp
inc
cwtl
pop
mov
shlb
es
push
out
andb
gs
lds
call
xor
or
leave
adc
mov
outsl
adc
mov
lahf
rcr
sbbl
or
and
sub
outsl
xchg
mov
mov
imul
mov
dec
mov
sbb
in
or
adc
jae
into
sub
stos
push
mov
sbb
pop
ret
js
fiaddl
jno
js
xor
jp
leave
scas
pop
push
mov
pushw
insl
sahf
sub
jns
inc
test
fucomip
lea
sub
fs
jae
inc
xor
mov
sbb
hlt
mov
popl
repz
dec
imul
imul
mov
mov
cmc
andb
mov
jns
mov
lea
daa
sub
scas
in
sub
loopne
add
imul
sbb
or
pop
jae
int
cmc
mov
incb
pop
mov
insl
inc
inc
je
jbe
loopne
js
fidivs
jnp
call
je
sbb
rol
mov
inc
adc
cmpsb
je
mov
push
jbe
gs
push
ljmp
xor
stos
mov
and
pop
jns
xchg
rorb
xchg
pop
pop
jmp
sub
cmc
xor
in
cmp
rclb
inc
int3
ror
ja
rcr
nop
prefetchw
je
stos
push
adc
call
mov
sahf
enter
ficomps
lea
in
push
adc
fwait
pop
repnz
push
dec
rol
rol
mov
scas
or
loopne
jge
aas
inc
je
test
inc
sahf
out
xor
jmp
inc
pusha
sbb
lretw
mov
adc
and
pop
les
lds
dec
insb
xchg
push
rorl
clc
in
leave
push
and
cmpl
ljmp
test
movsl
inc
adc
pop
rclb
pop
int3
pop
jge
inc
cmp
sti
cmpsb
scas
push
clc
inc
inc
insb
pop
cwtl
je
push
jp
js
jmp
cwtl
mov
imul
adc
ret
adc
add
cmp
mov
fcoml
into
ss
iret
rorb
pop
dec
scas
push
stos
jecxz
outsb
pop
add
pop
outsl
xchg
cmp
pushf
icebp
arpl
push
mov
and
enter
mov
ds
inc
out
jae
or
xchg
push
inc
jnp
mov
rcrl
int3
sbb
jg
dec
dec
xchg
or
imul
dec
stc
es
cltd
out
push
out
pop
in
leave
pop
into
push
add
xchg
insl
test
cld
dec
pop
fiaddl
notb
mov
adc
cwtl
xor
sbb
dec
pop
sbb
stos
lcall
icebp
or
loop
pusha
adc
in
leave
mov
fucomip
jnp
sub
aad
mov
stos
sub
pop
lock
add
arpl
mov
lahf
pop
test
cmp
push
int3
clc
data16
fsubs
fldenv
insl
pop
sbb
pop
lcall
or
bound
jl
fst
fimull
jl
mov
outsb
int3
push
or
mov
scas
pop
xchg
pop
ret
sahf
cmp
pushf
jnp
test
and
lods
xchg
lcall
das
cmp
fs
lock
add
ja
push
dec
inc
imul
adc
push
add
jmp
dec
cmp
mov
cmp
mov
sahf
adc
ret
out
add
sub
fs
pop
jle
lret
cpuid
dec
jno
les
sbb
fisttpl
ret
jl
sahf
repnz
adc
push
negl
sahf
dec
xorb
call
test
push
imul
sub
jg
add
jmp
or
xchg
pop
mov
icebp
sbb
gs
cld
stos
cmp
push
jecxz
notl
lahf
and
mov
push
mov
or
mov
out
shlb
lock
mov
stc
test
xchg
out
popa
daa
xchg
ja
lods
xor
inc
xchg
ljmp
cmp
pop
aas
scas
arpl
mov
mov
mov
or
xor
cmpsb
xor
addr16
ss
inc
imul
mov
lods
insb
push
dec
or
ja
dec
push
add
mov
in
test
orb
sbb
test
ret
fiaddl
xorl
inc
jmp
ret
dec
sbb
int3
loope
inc
or
xchg
aam
push
pop
cmpb
xlat
jmp
xchg
cli
imul
or
das
pop
mov
mov
incb
ret
les
push
pop
push
sbb
ds
pop
mov
shl
mov
out
sbb
ss
jp
xchg
xlat
xchg
mov
mov
mov
out
mov
dec
xor
cmp
and
enter
mov
cmp
sub
xchg
lods
pop
inc
sbbb
mov
lcall
cmp
mov
int3
xor
rsm
ja
inc
adc
orl
push
pop
mov
loope
dec
pop
inc
rclb
sbb
xchg
dec
push
ret
jmp
ds
jno
fcmovu
xlat
lods
out
outsb
pop
mov
lods
lods
test
xor
xlat
push
jae
sbb
add
dec
push
mov
pusha
cli
lcall
daa
sbbb
lods
jne
leave
lahf
sub
pop
les
mov
push
stc
lea
sub
mov
sub
mov
ret
add
add
xor
lods
and
adc
imul
pop
adc
inc
pop
mov
leave
lcall
jmp
push
mov
jmp
out
sahf
int3
adc
mov
pop
mov
sub
shl
test
dec
add
mov
decl
inc
mov
cmc
packuswb
pushf
and
test
stc
adc
push
andl
ret
pushf
out
cmp
xor
or
jg
adc
sub
lahf
xchg
divb
imulb
jae
cmovle
sbb
sti
call
bnd
xchg
arpl
xchg
bound
std
pop
ja
ss
mov
jle
enter
stc
xchg
jle
int
cmc
xchg
outsl
cmpsl
xchg
xor
je
inc
clc
shll
pop
cwtl
mov
sub
call
jns
mov
mov
mov
mov
loop
and
pop
push
xor
mov
sbb
inc
mov
xchg
in
inc
push
fs
jmp
fsubl
jle
mov
add
out
push
inc
jnp
test
mov
ret
inc
mov
lahf
or
daa
pop
and
int
mov
xor
mov
cmpsl
mov
mov
lret
xorb
jge
stos
jle
add
rcll
pop
dec
mov
pop
out
xor
mov
imul
sub
aas
mov
mov
ficomps
dec
mov
jmp
and
cltd
fucom
push
rclb
and
mov
xchg
popa
add
sbb
ljmp
pop
aas
push
in
and
fnstcw
mov
dec
pop
pop
mov
mov
sub
xlat
mov
and
repz
popf
mov
outsb
sar
sub
xlat
divb
into
pop
in
lcall
mov
pop
in
xchg
sbb
or
mov
inc
fidivs
adc
xchg
add
loopnew
xchg
add
std
xorl
jns
aaa
push
cltd
cmpsl
into
sub
push
sub
mov
cmc
cwtl
and
cmp
mov
and
sahf
loop
popa
in
fistpl
sub
icebp
hlt
ja
std
mov
mov
repz
fistps
inc
popf
fs
push
mov
jecxz,pn
arpl
dec
fisttpl
test
cmp
mov
ja
xchg
inc
and
adc
push
in
out
out
jmp
stos
dec
jecxz
xor
inc
clc
adc
pop
and
mov
mov
aad
sbb
ja
xor
xor
cmp
cwtl
push
in
sbbl
mov
inc
sarb
lret
mov
inc
mov
mov
test
insb
push
push
fs
adc
out
icebp
and
dec
add
stos
and
fdivl
adc
popf
or
mov
popa
scas
es
mov
push
sahf
cmp
out
scas
std
xor
sbb
icebp
cmp
sbb
je
push
cltd
jmp
daa
les
mov
mov
mov
mov
outsb
aam
and
popa
push
jno
ja
lret
and
lret
test
int3
mov
pop
cmp
cwtl
nop
inc
leave
fimull
push
hlt
push
in
inc
out
jb
sbb
test
adc
jle
les
stc
roll
ss
aam
cmp
xor
ja
imul
cmc
out
loope
shr
orl
and
loope
jle
and
adc
imul
inc
push
insb
dec
std
imul
push
mov
sub
sbb
ret
loopne
fldt
mov
jo
dec
enter
dec
imul
jno,pt
xor
or
mov
stos
and
fwait
cwtl
ljmp
outsl
repnz
jl
fstpl
mov
fbstp
mov
pop
roll
arpl
subl
dec
pop
out
jnp
lea
push
xchg
push
push
leave
jne
xor
aaa
pop
push
lcall
mov
or
mov
and
sub
mov
jb
test
ljmp
xchg
addr16
je
sub
dec
aas
data16
sub
shll
fidivrl
ja
push
fs
cmp
jge
sahf
cmp
cmc
lea
mov
xlat
and
mov
and
dec
pop
pop
add
dec
sbb
cmc
frstor
mov
add
xchg
sbb
test
mov
lahf
jge
cmp
mov
insl
aas
xchg
dec
xor
in
jae
mov
mov
mov
sub
push
into
mov
out
dec
sbb
xchg
jne
lods
fnstcw
jns
cwtl
hlt
pop
jo
jb
mov
sub
aam
or
push
fdivs
and
xor
dec
mov
fs
roll
xchg
stos
loop
add
jg
xchg
inc
add
mov
repz
fwait
aam
shrd
mov
push
sarl
adc
push
adc
fsubrl
or
mov
insl
adc
es
add
or
adc
push
mov
dec
pop
jb
sbb
xchg
scas
lret
adc
je
inc
lret
dec
cmpsl
cmp
mov
movsl
div
push
scas
data16
rsqrtps
xchg
icebp
mov
xchg
pminub
lcall
sub
lcall
xor
push
in
std
sahf
loop
cld
dec
adc
jge
push
into
adcl
movsl
jae
pop
sub
bound
ret
jnp
mov
pop
sbb
daa
push
dec
sub
pusha
loopne
addr16
jnp
shlb
or
and
sub
mov
int
or
movsb
arpl
out
lock
mov
sar
loope
aam
mov
rorb
xchg
insb
dec
xchg
jbe
out
or
in
sub
push
and
and
clc
inc
mov
add
sarl
mov
pusha
mov
fdivr
push
movsb
inc
shrb
lahf
adc
xchg
xor
cmp
aam
jnp
repz
mov
mov
ja
mov
jecxz
mov
sub
add
lahf
mov
pop
push
mov
pusha
mov
arpl
pop
gs
mov
push
mov
mov
inc
pop
mov
ret
cld
pop
xchg
sarl
fsubrl
mov
inc
mov
test
in
sub
ret
xchg
fdivrl
mov
xor
bnd
push
sti
add
ds
dec
stos
lock
adc
cmpsb
fidivrl
cmpb
push
out
cmp
lds
fwait
stos
lret
bound
pop
mov
scas
sub
sub
and
out
and
xor
ret
fdivp
cld
lret
lret
filds
xor
mov
jae
je
adc
add
stc
shlb
sbb
pushf
repz
lds
jp
dec
mov
lcall
nop
cmp
fwait
lret
divb
cmp
cmp
push
scas
in
loop
sbb
idivl
jle
lods
popa
sahf
lret
jbe
subl
push
iret
outsl
icebp
adc
movsl
nop
or
into
popf
xchg
fidivrs
sbb
lods
cmp
jge
dec
dec
iret
cmp
push
xor
xlat
or
ja
push
cmp
imul
and
sar
inc
push
pop
test
mov
imul
xor
lods
fwait
cmp
js
insl
test
ret
cmp
out
cmpsb
push
and
and
faddp
scas
xchg
in
int
jo
mov
jns
clc
insb
add
lret
sub
inc
orb
jo
fisubrl
xchg
dec
sbb
mov
dec
clc
pop
test
mov
arpl
adc
rolb
push
xchg
cmc
jmp
test
cmpsl
push
sbb
mov
and
inc
test
cmp
sub
ljmp
sahf
xchg
mov
dec
xor
mov
dec
mov
sbbb
aam
adc
lock
shl
inc
inc
inc
lcall
neg
jg
jb
xor
or
dec
dec
scas
rcrb
inc
sub
pop
cmpb
in
jecxz
out
ljmp
add
or
jae
jae
push
mov
cs
sbb
jg
stc
mov
repz
and
mov
insb
rcrl
push
scas
add
mov
ds
sub
sbbb
sub
cmc
dec
add
ja
or
mov
inc
cmpb
pop
rcrb
jns
out
push
dec
nop
sbb
pop
movb
lret
cmp
divl
pop
imul
mov
popa
test
decl
inc
stc
jl
clc
sbb
pop
test
pop
lods
enter
inc
push
or
out
stos
or
mov
jb
pop
pushf
std
push
or
push
xchg
push
cmovg
mov
insb
mov
jecxz
mov
or
jns
jo
sub
std
xchg
outsl
push
in
inc
push
enter
xchg
jl
repnz
sbb
repnz
jo
cmc
jp
xor
pop
aas
push
data16
in
jle
sbb
loope
xor
fwait
rcrb
xchg
imul
xor
jmp
pop
xor
push
ja
jecxz
lahf
pop
push
pop
xchg
inc
ljmp
sbb
cmp
push
xor
addr16
mov
pop
movsl
push
outsl
out
imul
int
jbe
xor
xchg
pop
test
dec
dec
mov
pop
insl
mov
add
daa
lahf
pop
xor
fs
mov
popf
pop
movsl
cwtl
or
lea
in
inc
mov
sbb
icebp
clc
push
imul
xor
sbb
xor
mov
or
adc
daa
frstor
pop
adc
dec
jle
int3
or
jmp
nop
popf
pusha
lods
cltd
sub
sbb
mov
cmpsl
scas
popa
add
jns,pn
xlat
sarb
shl
aam
push
push
dec
cs
cs
and
jl
inc
rcrl
nop
inc
jmp
sti
out
push
jns
push
lods
inc
out
pop
dec
cmp
sbb
mov
std
sti
adc
mov
lcall
or
gs
and
aaa
rorb
aaa
gs
sub
adc
add
aas
inc
mov
hlt
movsb
cmp
and
push
cmpsb
dec
push
orb
push
mov
out
mov
cltd
clc
push
mov
loop
pop
mov
int3
and
rcll
fcmovu
and
mov
pop
xor
pop
mov
dec
xor
cld
pusha
dec
or
fwait
rclb
rclb
data16
jl
rolb
es
jb
mov
cmpsb
dec
adcl
sbb
push
mov
and
incb
push
inc
xchg
cmp
add
repz
cmpsb
mov
decl
lock
ficoml
xchg
test
pop
negl
jns
or
cmp
aaa
and
cmp
sbb
out
cmpsl
mov
outsb
cwtl
fsubs
out
xchg
subb
repz
pop
subl
adc
jb
adcl
imul
mov
pop
gs
mov
pop
and
xchg
mov
add
push
mov
add
loopne
loop
mov
scas
ficoms
cmpsl
dec
push
cmpsb
jge
jge
rsqrtps
cmp
sbb
mov
test
insb
rcl
stc
inc
pop
dec
mov
stos
jmp
cmpsl
sbbb
mull
mov
fdivrl
and
xor
add
adc
sub
je
sub
add
icebp
inc
jnp
pop
testb
into
das
push
scas
outsl
enter
iret
jge
dec
cmp
shll
fwait
leave
sbb
gs
cltd
mov
mov
adc
xchg
pop
hlt
xor
insl
lods
sub
mov
icebp
gs
push
je
cmc
out
popa
push
adc
stos
icebp
stos
jno
lret
sub
adc
jp
sbb
sbb
outsb
lahf
inc
and
inc
fnstcw
shlb
mov
and
divb
mov
lea
int3
test
js
xor
movsb
pop
insl
pop
dec
iret
jmp
dec
add
sub
mov
insb
lock
lcall
out
mov
ja
loope
jo
ljmp
loope
dec
xlat
and
ret
movsb
popa
cmc
mov
jbe
movsl
fldl
mov
sbb
adc
pop
push
cwtl
subb
pop
jbe
ret
pop
in
hlt
xchg
dec
popa
jno
jae
inc
shl
jno
stos
pop
adc
cs
ret
test
mov
mov
inc
sub
js
jb
mov
mov
adc
stc
jmp
push
icebp
aam
aam
shl
pop
jg
cmc
mov
rorb
jmp
jle
mov
sub
cmpsl
ja
or
sbb
pop
sub
adc
pushf
xlat
push
mov
sub
loope
and
inc
mov
sbb
es
or
out
xchg
xchg
das
jb
mov
out
daa
std
ja
pop
or
push
push
add
and
and
xor
shrb
push
inc
push
arpl
adc
dec
mov
inc
cmp
mov
dec
int3
xor
daa
cmp
aas
xchg
mov
jle
ficomps
mov
jns
jno
xor
jecxz
and
stc
cmp
lds
cmp
call
scas
scas
lds
int3
jecxz
int3
aad
xchg
cmp
iret
sub
test
or
rol
push
lret
cmp
int
outsl
aas
pushf
push
jecxz
or
push
mov
cs
punpcklwd
fcmovnu
sub
sub
arpl
clc
mov
dec
jae
mov
stos
pop
icebp
jne
cmpsb
imul
cltd
mov
sub
and
test
out
xor
clc
add
push
faddl
inc
enter
jno
dec
rcll
lods
mov
das
aad
ficompl
jmp
jmp
mov
loopne
adc
inc
into
inc
ds
push
push
inc
mov
sub
mov
ficompl
xchg
push
fucomi
push
xchg
and
aas
mov
pop
xchg
jle
jns
pop
add
cmpsl
fsubl
or
cmp
xlat
xchg
jne
bound
jbe
jns
dec
xor
mov
add
jns
fimuls
mov
cli
add
pop
mov
dec
dec
aad
lahf
pop
ret
ficompl
js
mov
mov
test
mov
inc
fwait
push
cmp
inc
bound
mov
cli
push
cmp
shr
arpl
inc
out
and
push
mov
jb
dec
jmp
fmuls
add
in
mov
in
push
push
call
jb
mov
dec
jmp
adc
and
dec
bound
push
mov
or
cltd
sbb
push
jb
lret
pop
mov
mov
sahf
outsb
mov
int3
gs
fcomi
dec
mov
pushf
jns
mov
mov
jmp
jne
mov
aaa
das
inc
dec
mov
std
add
roll
fcomp
call
aaa
fildl
pop
imul
xor
mov
jp
fwait
sti
and
shll
cmpsl
cmc
dec
test
repnz
inc
nop
adc
vrsqrtps
mov
aam
loopne
xor
or
push
xchg
iret
jb
jne
pop
inc
or
fistpll
daa
ds
xlat
pop
sub
imul
out
div
mov
jne
jp
out
lahf
je
arpl
sub
arpl
outsb
pop
out
ljmp
sahf
stc
mov
add
sub
movsb
cld
jl
adc
mov
cmp
inc
shlb
pop
jae
out
stc
fiadds
jl
ds
decl
rcl
aad
xor
out
lcall
xchg
pmulhw
mov
xor
mov
jne
pusha
ds
mov
xchg
ja
cmp
in
push
pushf
out
out
jo
outsb
sbb
pop
or
inc
sub
fbld
je
shld
mov
push
les
mov
out
call
mov
lods
sahf
loopne
ja
dec
lods
and
xor
push
out
jmp
sub
movsb
jmp
push
mov
mov
add
pop
lea
das
ljmp
xor
cli
jns
sbb
pop
xor
xlat
in
mov
lods
das
jle
js
jg
push
stc
int
sbb
push
lods
stos
sbbb
movsb
ret
cmp
and
sub
andb
shll
jle
jnp
xor
pushf
decl
popf
enter
xchg
dec
test
rcrl
lods
mov
mov
mov
xor
je
scas
xchg
inc
push
push
mov
stc
and
pop
in
cld
sub
push
int
pushl
clc
test
adc
or
es
movsb
not
jp
dec
pop
adc
jp
pushl
lea
xchg
imul
mov
inc
fwait
icebp
std
adc
dec
addr16
subl
add
test
xor
lock
test
movsb
pop
icebp
push
adc
idiv
stc
nop
mov
mulb
cmp
clc
addr16
cmp
push
adc
mov
test
pop
mov
jne
andb
into
xchg
sbbl
ret
sbb
inc
lods
push
pop
stos
pop
cld
cs
or
jge
call
dec
int
loop
or
add
pop
mov
xchg
ljmp
in
shrl
mov
cmp
dec
lods
push
ret
push
cwtl
enter
dec
lods
push
add
stos
adc
aam
fisttps
inc
add
xor
dec
mov
movsb
push
loopne
movsb
jl
outsl
clc
push
jnp
cmp
xor
outsb
je
cmp
mov
mov
xchg
and
ljmp
pushf
mov
jl
mov
jl
popf
scas
mov
xchg
add
lret
aas
mov
mov
dec
arpl
dec
dec
test
pusha
insl
mov
pop
push
sub
pop
das
and
int
xchg
lods
bound
vaddss
pushf
call
fdivrl
sub
out
pusha
loopne
adc
or
pop
rcrb
shrl
sbb
fstpl
xchg
mov
aam
push
mov
inc
pop
or
icebp
std
lahf
push
je
push
popa
add
sub
add
decl
pop
xchg
aas
cmpsl
dec
push
sbb
lock
inc
and
ficoml
mov
lods
fidivs
pop
loopne
pop
and
fisubs
ds
pop
lea
sbbl
jo
or
sti
xchg
or
roll
and
fildll
aas
in
cmp
sub
repz
test
jmp
shll
fsubrl
mov
out
sub
mov
cwtl
repz
gs
dec
mov
push
cltd
call
push
mov
outsb
mov
mov
sub
push
inc
test
mov
nop
mov
mov
sbb
jle
pushf
cld
ret
mov
jb
lret
sarb
mov
xlat
jae
jb
pop
mov
jne
pusha
pop
dec
int
stc
xchg
sub
sub
cmpsb
mov
int
and
lock
lcall
xor
pop
les
jge
cmp
cwtl
cmp
xor
xor
loope
xchg
repnz
scas
loopne
xchg
mov
sbb
jmp
inc
adc
jecxz
stos
fs
out
ret
adc
mov
jae
mov
xchg
mov
lods
or
sbb
fsts
jle
sbb
xchg
sbb
and
fisubrs
jp
cwtl
out
xor
in
add
push
sbb
lods
xchg
repnz
mov
loopne
cmpsb
inc
notb
pushf
insl
pop
dec
and
jno
stos
in
mov
imul
addl
inc
cmc
cmp
pop
iret
xor
or
loop
in
movsb
dec
jmp
test
cld
je
popf
sbb
pop
add
fcompl
cmp
addr16
jge
or
popf
jae
mov
adc
sbb
dec
jnp
push
rcll
mov
push
faddl
pusha
fsubs
popa
cmp
hlt
lods
pop
xchg
adc
xor
insl
je
adc
sbb
lds
mov
imul
mov
mov
xchg
shll
add
sbb
jp
xchg
mov
shl
adc
in
out
xor
sub
or
arpl
add
sbb
xor
dec
leave
xor
and
test
out
insl
arpl
jl
imul
or
ss
call
jl
lea
lods
call
push
cmp
pop
push
imul
mov
and
popl
pop
ret
iret
adc
xchg
cmpsl
jns
mov
lret
popf
fimuls
cltd
gs
dec
flds
aas
fistps
xor
adc
sbb
lea
movsb
leave
faddl
cld
or
jns
mov
push
sbb
dec
or
cmp
mov
ret
and
rcll
ret
mov
ret
and
sahf
mov
scas
xchg
jmp
or
and
fdivrs
insb
xchg
and
pop
stos
push
push
jne
add
add
cld
cmp
test
pop
and
mov
mov
xor
mov
iret
fimull
test
loop
pop
pop
and
imul
inc
jecxz
add
mov
cmp
jmp
lock
inc
pushf
out
push
push
jecxz
or
in
outsb
pop
push
xchg
dec
imull
adc
jno
pushl
sub
fnstenv
jns
and
cmp
or
test
fwait
mov
jecxz
dec
call
xor
idivl
sub
outsl
mov
jmp
repnz
loopne
push
inc
fiadds
adc
pop
pop
mov
orl
lret
mov
adc
xchg
lea
lods
inc
shll
pop
mov
add
add
dec
or
lret
xor
add
dec
out
and
xchg
cmpl
cmpsl
mov
out
pop
mov
icebp
scas
xchg
or
fbld
mov
and
cli
inc
or
cmpsl
or
and
bound
push
adc
xchg
loope
jmp
imull
cld
pop
nop
scas
mov
imul
popa
cmpsb
out
ret
sub
repnz
in
xchg
inc
xor
push
jns
push
mov
jle
ret
sub
adc
mov
adc
test
popa
cs
outsb
adc
arpl
lret
sbb
inc
cmpsb
mov
adc
imul
pop
sahf
mov
lock
dec
fs
or
xor
pop
inc
fisttpll
dec
sub
sbb
pop
hlt
imulb
inc
mov
lret
mov
or
push
mov
call
call
mov
jle
xor
mov
add
mov
lods
bound
insb
out
stos
pop
xchg
jg
out
jmp
push
test
shrl
adc
repz
gs
arpl
pop
push
pop
sbb
sub
xlat
lock
addl
out
lods
or
jbe
or
in
pop
mov
dec
xor
sub
cmc
pop
sub
stos
jne
loopne
pop
rcl
ljmp
stc
mov
add
loope
jne
aad
mov
mov
dec
dec
jge
filds
stc
lock
sbb
sti
sahf
pop
pop
aad
das
iret
dec
mov
ret
dec
das
mov
push
lret
mov
lock
mov
jecxz
and
scas
pop
mov
scas
sbb
mov
ret
icebp
adc
pop
hlt
movsl
jle
cmp
mov
mov
mov
xchg
dec
mov
popa
sub
mov
cmp
hlt
stos
push
mov
dec
mov
jb
fnstsw
shl
mov
orb
movsb
mov
cmp
xor
cli
adc
push
lock
scas
mov
pusha
lea
popa
xchg
sub
xor
cmc
and
hlt
push
stos
fxch
inc
jecxz
push
xchg
lods
shll
and
fisubs
mov
dec
fs
mov
dec
inc
incl
dec
pusha
mov
stos
add
mov
repz
cld
pop
xorl
push
xlat
mov
jle
sbb
xor
imul
aas
data16
std
or
pop
sbb
pop
les
jge
shlb
ljmp
inc
cwtl
loop
mov
push
and
add
cmp
cmc
sbb
call
xchg
and
out
or
pop
or
mov
fsts
aaa
inc
fstps
dec
ret
adc
mov
cltd
sbb
mov
jmp
cmp
loopne
push
push
push
add
inc
fldt
sub
push
call
lahf
pusha
push
sub
shr
inc
push
arpl
cld
jge
ss
lock
addb
into
xchg
pop
outsl
push
mov
test
insl
in
fdivrl
test
xchg
inc
or
mov
ss
xor
mov
leave
push
in
movsl
in
push
xchg
ja
ljmp
jle
mov
sbb
adc
cmp
pop
cli
addr16
cmp
xor
daa
int3
cmp
sarb
and
adc
rol
enter
jns
mov
or
jno
lret
repz
test
in
das
in
inc
dec
jmp
scas
xchg
push
js
or
pop
rolb
cltd
sti
shrl
cltd
xchg
test
test
mov
cld
pop
dec
orb
sub
fdivrl
xchg
mov
jbe
add
gs
lcall
cwtl
jge
aam
test
mov
push
gs
dec
cli
stos
push
xor
mov
lahf
cmovge
cld
dec
bound
shrb
cmpsl
cmpsb
mov
and
fisttps
sbb
shll
xchg
enter
mov
push
and
insl
sub
adc
mov
jno
insl
mov
addl
or
or
das
lret
movsb
push
lods
dec
sahf
addb
sbb
jbe
arpl
in
fnstcw
mov
jle
mov
mov
in
scas
ret
xchg
inc
fisttpl
inc
cmp
int
jp
mov
maskmovq
imull
rcrl
popa
ja
dec
push
push
xor
adc
cwtl
xor
push
lods
pushf
scas
fnstcw
dec
inc
das
xlat
addr16
jbe
shl
jecxz
shlb
sbbl
addr16
sbb
mov
xor
cmp
xchg
lods
dec
pop
lods
dec
dec
push
fwait
pop
add
inc
mov
xchg
mov
fs
stos
jnp
dec
lea
sub
adc
mov
ret
std
mov
movsl
add
mov
mov
lcall
out
in
in
loope
mov
jp
cmp
sbbl
sub
cmp
sbb
add
push
test
mov
pop
add
mov
sub
push
jp
inc
test
add
movsl
push
push
adc
add
sbb
mov
dec
repz
enter
or
in
push
lods
in
adc
sub
push
gs
xchg
sbb
stos
gs
mov
pop
mov
adc
jb
out
or
or
adc
or
stos
icebp
mov
add
movsb
mov
jecxz
dec
scas
vrcpps
mov
or
lcall
inc
fcmovb
movsb
and
sbb
test
fadds
push
int3
xor
jp
cmp
inc
mov
mov
jmp
iret
dec
data16
cli
push
mov
out
leave
mov
mov
cmp
in
test
sahf
fisubs
dec
push
cmp
repnz
movb
outsb
daa
or
enter
bound
in
xor
call
out
aad
leave
jmp
rorl
ficoms
dec
cmpsb
popf
lret
cmpsb
incl
fwait
push
ss
mov
stos
xor
cld
insb
std
sahf
jecxz
shrb
shll
je
sub
cmp
clc
dec
orl
in
jmp
inc
mov
mov
out
cmpsb
js
cmpsb
movsb
insl
cmpsb
push
push
daa
js
pop
adc
and
mov
std
dec
je
jbe
in
test
xchg
sub
arpl
mov
loop
aam
lock
mov
imul
aam
mov
sbb
rolb
fs
dec
push
sub
mov
xor
les
push
pop
push
fistl
pushf
push
in
cmp
scas
or
dec
sub
add
fwait
mov
and
cld
hlt
stos
cmp
inc
in
repnz
mov
mov
stos
inc
lods
mov
loope
shl
add
cmpb
jo
movsl
fadds
push
lea
xchg
lds
lcall
add
shll
push
xor
jbe
je
sub
push
mov
outsb
pop
jb
jae
mov
popl
push
lcall
or
pop
sbb
and
cmp
xchg
or
mov
mov
dec
rorl
pop
xchg
cli
xor
bound
sub
fistpl
jb
je
push
xor
sahf
mov
orb
arpl
sarb
mov
add
xchg
jnp
push
fdivrp
jne
je
fs
mov
loope
and
jb
lret
or
mov
or
xchg
xchg
add
mov
adc
imul
jb
and
sub
andl
push
sub
dec
sub
arpl
out
pop
cs
divb
call
or
cs
adc
sub
push
lods
or
shlb
jge
mov
inc
into
insl
dec
mov
cli
std
aam
lock
std
sbb
addl
adc
popl
lock
bound
pop
adc
cmp
bnd
sub
mov
pop
ljmp
dec
xchg
cwtl
adc
test
fcmovu
cmp
adc
test
mov
push
loopne
jnp
daa
inc
xor
pop
pop
test
movsl
push
pop
push
pop
adc
sbb
out
gs
jp
popf
push
inc
pop
dec
clc
jb
into
and
cmp
movsl
push
icebp
scas
in
jle
lahf
inc
mov
adc
dec
inc
fimull
movsl
ja
jae
mov
cmp
shl
mov
std
loope
dec
ljmp
and
sbb
mov
sub
dec
sti
jg
mov
popa
add
push
jge
inc
fisttpll
xor
cmc
pop
outsl
fnstsw
mov
mov
sbb
inc
fsubs
test
out
jge
push
shl
push
fdivrs
cli
packuswb
shl
xor
inc
test
punpcklwd
inc
jge
or
ret
sahf
sub
ret
imul
inc
mov
jo
and
or
and
out
nop
xor
shlb
or
inc
sub
cmpsl
aas
pop
test
cwtl
jns
imul
gs
mov
stc
rorl
dec
sti
leave
sub
movsl
mov
mov
dec
inc
mov
out
rorl
out
and
push
xor
adc
test
sbb
xchg
xchg
cmp
pop
jmp
mov
pop
fs
cmp
fisttps
push
pop
inc
adc
repz
seta
cltd
sbb
pop
lods
xchg
cmpsb
hlt
shll
popf
imul
iret
je
jp
inc
push
dec
add
data16
cmp
call
daa
into
pop
aaa
sub
testb
adcl
and
xor
lods
dec
dec
mov
fisubl
or
sub
mov
xchg
cmpsl
cmpsb
int
in
stos
mov
sub
out
cltd
in
bound
pop
mov
mov
jo
xchg
mov
push
adc
mov
xchg
push
jnp
add
mov
xchg
adc
rorb
test
ror
ljmp
mov
and
loope
mov
sub
subl
fcomi
lods
stos
out
scas
movsl
jecxz
cltd
xor
aaa
mov
icebp
dec
xchg
es
arpl
mov
dec
adc
gs
or
ljmp
fwait
or
outsb
jmp
sbb
stos
mov
xchg
out
sub
mov
mov
or
cli
imul
sbb
fsub
in
mov
jae
push
scas
xlat
dec
into
clc
pop
sbbb
roll
jle
mov
loop
push
or
jmp
mov
jecxz
out
adc
js
loop
sbb
adc
lods
cmpsb
repz
cmp
fwait
sub
sbb
stos
xchg
mov
mov
cmp
loope
push
cs
push
mov
sub
inc
cmc
gs
lret
add
adc
and
movsl
hlt
lret
add
jp
xchg
sub
lret
push
sahf
fstpl
mov
repz
xor
push
pop
jecxz
mov
addb
inc
fwait
lret
jmp
clc
fsubs
decb
sbb
rcll
leave
fwait
sub
rol
and
ja
jmp
mov
dec
sbb
call
jnp
cmc
js
insb
test
inc
jp
cmp
jnp
jge
fldt
lock
push
movsl
mov
jge
mov
sub
cmp
mov
and
inc
mov
fbld
lock
mov
cmp
jge
mov
adc
fldenv
in
dec
lret
repnz
mov
add
orl
mov
cmpsl
outsb
xor
test
inc
fs
sahf
adc
loop
xchg
lahf
outsl
push
movb
shl
cmp
jmp
outsl
iret
dec
jp
and
ja
and
in
and
lds
nop
or
and
ljmp
fbld
mov
cmp
add
sbb
sbb
mov
or
ss
sub
jnp
mov
sahf
es
xchg
push
mov
jo
incl
cli
arpl
xchg
aaa
adc
add
pop
int
cmp
stos
insl
es
rol
mov
and
fs
sbb
push
jnp
jmp
xor
push
orl
push
mov
loop
mov
xchg
js
in
pop
popa
in
dec
mov
mov
dec
sbb
imul
add
jnp
pop
add
dec
out
push
adc
out
dec
jae
and
sti
lea
imul
clc
xor
and
push
adc
aaa
arpl
pushf
leave
int
into
push
mov
ret
gs
lcall
mov
loopne
sbb
push
cs
xorb
gs
cmpsl
pop
imul
inc
pop
push
mov
mov
ss
icebp
scas
loope
lret
jp
mov
ljmp
ljmp
mov
mov
mov
and
daa
add
mov
arpl
dec
xor
out
mov
mov
adc
sub
jae
mov
xlat
pusha
stos
inc
sbb
ljmp
mov
xor
inc
inc
or
shl
xchg
data16
fbstp
rorb
mov
lods
cmc
and
cltd
dec
xlat
sub
movsl
dec
ja
cwtl
outsl
pop
loop
pop
push
lret
sbb
imul
mov
xchg
dec
loop
les
xlat
sbb
push
addl
jmp
push
rcrb
push
mov
or
mov
rcr
cmpsb
pop
push
dec
mov
lret
mov
flds
repnz
arpl
xchg
and
push
pop
fistpl
push
xor
add
cmpsb
dec
stos
adc
add
jmp
cmc
jmp
imul
rcr
repnz
loopne
xchg
subb
xor
int
push
inc
cmpsl
jo
mov
pop
outsb
dec
leave
jge
in
sbb
pop
push
push
sub
pop
xor
mov
sbb
xchg
lcall
xlat
out
es
dec
mov
or
lock
stos
lea
aam
in
sarb
imul
roll
popa
xor
lods
sub
test
jmp
and
sub
pop
jge
jmp
cli
test
in
lods
sub
fs
es
mov
push
out
inc
lcall
adc
push
inc
mov
ja
mov
and
mov
adc
int
sarl
mov
pop
subl
lea
in
pop
xorl
adc
sbb
xor
enter
ds
lret
popf
in
pop
sub
dec
loopne
stos
and
jns
out
stc
cmp
imul
fwait
xchg
mov
data16
jns
xor
jp
ljmp
jecxz
push
insb
push
push
push
jge
insb
outsb
in
in
rolb
mov
leave
add
mov
add
fstps
cmp
inc
jo
and
and
mov
addr16
dec
push
dec
push
xor
xor
xor
fsubs
outsb
cmpsb
xchg
xchg
out
cli
inc
test
cmp
cmp
push
stos
sub
jecxz
test
outsb
jae
std
xchg
dec
cmpsb
fmull
mov
in
ljmp
sbb
inc
sub
inc
jmp
inc
pop
out
lea
test
ds
sarl
lea
inc
jnp
push
mov
pop
push
jno
cltd
sub
repnz
xlat
pop
adc
push
add
arpl
arpl
and
sub
adc
pop
sarb
sub
lret
push
sub
sub
sbb
inc
cli
xor
sti
xchg
mov
mov
add
xchg
testl
xchg
inc
pop
call
ret
cmc
sub
mov
insl
mov
push
add
mov
pop
ret
ret
sti
cmp
push
aaa
push
aam
push
clc
das
mov
push
fs
int3
xchg
or
mov
jmp
mov
cmc
fmul
mov
gs
xchg
xor
pop
inc
out
adc
fnstenv
xchg
adc
mov
xor
psllw
aam
mov
pop
setbe
jg
orb
mov
jecxz
lods
imul
fwait
sub
test
jne
popf
data16
repz
inc
mov
jg
mov
mov
mov
mov
mov
fwait
mov
cltd
mov
out
mov
loop
stos
mov
adc
cmp
dec
push
mul
arpl
or
dec
push
xor
repz
mov
int
jno
sbb
movsb
mov
out
rclb
sti
mov
pusha
repz
rcrb
nop
rcrl
aad
mov
es
dec
loop
rclb
cmp
jp
call
push
lods
testl
inc
sub
jbe
cmp
insl
push
jmp
test
mov
jge
pop
and
adc
fdivs
mov
xchg
clc
les
inc
cld
push
mov
sub
cli
into
or
inc
pop
jo
xor
ja
movsl
lods
or
hlt
popa
add
lahf
lret
mov
leave
pop
movsl
xchg
cmp
adc
insl
jns
mov
sti
gs
or
add
in
fldenv
jbe
aas
adc
je
cmpsl
xor
sahf
or
sbb
mov
lahf
cltd
ja
dec
imul
lds
dec
in
sub
jge
lret
movsb
jmp
push
std
out
loopne
pushf
nop
jae
sbb
push
das
or
jae
ret
arpl
or
mov
pop
jg
cmp
push
xor
add
jne
mov
inc
cmc
inc
dec
inc
push
test
dec
dec
sub
mov
inc
test
push
test
sbb
jns
rcrl
in
push
test
sbb
and
sub
inc
push
outsb
xor
jne
loop
popf
ret
inc
mov
icebp
pop
pop
pop
insl
sub
cmp
in
cmp
mov
fldcw
xchg
xchg
sahf
test
cmp
xchg
xor
dec
in
insl
jbe
pushf
pushf
outsb
clc
in
or
hlt
jg
lds
lret
cltd
fstpt
test
dec
or
xor
cmp
outsl
dec
jae
aaa
dec
fstl
push
jle
sbb
pop
adc
push
out
leave
shl
mov
dec
cmp
jns
fldl
lods
mov
lods
stos
adc
outsl
js
or
test
lea
mov
data16
dec
and
addr16
fwait
mov
xor
and
push
ret
or
aas
leave
mov
sbb
icebp
jl
sbb
pop
testl
popa
leave
repnz
add
and
std
cmp
jne
testb
js
jbe
cmp
movsl
ret
mov
fsubrs
dec
push
xchg
fcoml
ds
xchg
xchg
int
add
arpl
std
cmp
inc
pop
aad
jbe
jge
fldenv
add
loope
cltd
or
jl
xchg
jae
ret
pop
insb
mov
mov
dec
leave
jg
mov
fdivrs
push
sbb
icebp
fsubrp
mov
pop
add
inc
mov
pavgb
ror
adc
and
dec
cmpsl
dec
cmp
lcall
pop
lcall
pop
gs
push
inc
mov
leave
mov
outsl
mov
cmc
mov
or
mov
aam
fistps
jo
and
mov
int
das
mov
loope
jb
sbb
mov
pusha
xor
add
in
push
dec
mov
mov
popa
dec
or
shr
jg
fisubrl
sub
pushf
push
push
jecxz
fmull
fsubrl
and
jg
rorl
in
clc
gs
loopne
cmp
cli
dec
ss
xchg
test
out
jae
and
push
dec
int
dec
addr16
ret
lret
xor
add
mov
stc
mov
adc
pop
lcall
fistl
loopne
imul
bound
and
push
das
sbb
add
mov
mov
push
add
fdivrl
sbb
in
sub
jge
decl
inc
arpl
clc
push
sti
and
cmp
push
imul
mov
cmp
add
daa
push
sbb
aaa
cmpsb
test
jo
mov
sbb
push
add
add
cmpsb
mov
incl
subl
mov
adc
inc
xchg
mov
jo
in
lret
jne
popfw
pop
ret
mov
pop
xchg
arpl
mov
test
out
sbb
test
pushl
insl
inc
and
mov
repz
push
xchg
faddl
add
sbb
fnsave
push
aas
xor
add
fcmovnbe
dec
imul
sub
flds
sbb
test
sbb
xor
mov
mov
mov
cmp
mov
out
push
add
xchg
aas
xchg
sub
arpl
and
add
jno
leave
mov
and
mov
cmp
jmp
cmc
mov
lea
sahf
repz
fidivrs
dec
fisubrs
and
loopne
popf
fsubs
inc
mov
fdivl
sar
sbb
xor
sub
shrb
imul
sub
xor
sahf
jmp
adc
outsl
adc
in
push
mov
sahf
pop
fxam
pushf
fbld
stc
cld
pop
adc
cmp
mov
mov
stos
mov
lret
test
test
imull
out
pop
pop
ja
je
mov
or
add
mov
arpl
jg
mov
fnsave
xchg
sub
imulb
std
lds
lods
pop
mov
insb
mov
jge
subb
jne
fsubs
imul
jnp
shl
mov
popf
movsl
pop
mov
scas
stc
fstpl
fstpt
mov
loope
adc
push
fwait
push
xor
sbb
xor
dec
daa
cli
dec
add
icebp
lock
add
inc
popa
pop
xor
sbb
test
leave
scas
cwtl
gs
add
sub
pop
movsl
imul
out
popf
and
jne
xchg
mov
jnp
or
add
xchg
cmp
jecxz
adc
add
xchg
dec
jnp
mov
std
or
addb
movsb
and
int3
jmp
les
push
mov
ret
xor
out
cmp
inc
lds
loop
xchg
stos
repnz
lods
jnp
insl
or
jne
mov
nop
imul
in
dec
rorb
outsl
dec
sbb
movsl
mov
arpl
stc
leave
fwait
jp
daa
les
sub
into
push
inc
stos
adc
xchg
les
push
cmpsb
rorl
lret
cmc
aad
jns
daa
call
aaa
add
mov
sbb
mov
mov
pop
jg
xor
adc
add
stos
scas
jnp
jmp
cwtl
mov
dec
lock
scas
fs
fwait
jg
orl
mov
xlat
enter
and
adc
jmp
mov
sbb
xchg
test
push
pop
cmp
sbb
loopne
dec
cmpb
in
add
adc
or
jb
pop
sub
cmp
mov
repnz
cmc
jnp
orb
sub
dec
fcmovne
aaa
out
lahf
adc
hlt
popa
and
rorb
sbb
scas
popf
ss
pusha
adc
or
mov
out
insl
mov
stos
mov
daa
xor
les
cmpb
xor
pop
push
into
add
test
cmc
fs
xchg
pop
mov
xor
push
out
insl
scas
add
lret
dec
push
adc
insl
jle
bound
inc
cs
sbb
inc
sarb
jns
ret
inc
push
mov
lods
aam
mov
add
daa
gs
or
xor
aas
cmpsb
push
add
fwait
cmp
mov
dec
cmp
insb
add
xchg
hlt
ljmp
call
pop
lahf
jmp
pop
int3
cltd
iret
pop
daa
jnp
jp
fcomps
or
das
dec
test
pop
test
sbb
cmc
inc
sub
jae
sbb
fwait
bnd
std
lea
xor
shlb
lock
aaa
push
mov
pop
or
lret
mov
dec
lret
mov
jo
mov
sbb
adc
add
mov
insl
push
leave
pop
cmp
adc
cmc
lock
add
inc
in
into
stos
lods
push
ljmp
mov
push
sub
dec
in
mov
imul
je
aas
pushf
jmp
out
repz
lret
fisttpl
insl
sub
rcrb
cli
push
div
xor
idiv
str
dec
int
cmp
sbb
mov
out
addb
push
repnz
dec
jmp
inc
filds
inc
pop
xor
rcll
into
mov
daa
inc
push
int3
mov
mov
jbe
fmulp
xchg
mov
ret
xor
jns
jge
sbb
mov
jg
xor
shl
push
lahf
jnp
leave
cmp
fistpll
lods
sbb
iret
fmull
ljmp
or
lds
sub
inc
xorl
popa
leave
cmc
pop
xor
mov
jbe
adc
gs
sbb
ja
xor
pop
mov
cltd
xchg
adc
in
mov
adc
scas
movsl
xor
stos
cltd
fsubrl
inc
shll
cmp
xchg
xchg
sbb
add
insb
add
xchg
sbb
aad
int
mov
inc
ss
push
push
aaa
adc
xor
mov
dec
or
mov
pop
clc
inc
lock
fisubrs
insl
add
or
lods
into
addr16
ja
adcb
pop
add
add
push
adc
dec
and
out
push
scas
in
mov
lcall
out
stc
mov
inc
hlt
cs
das
push
iret
push
sti
aaa
js
push
jecxz
pusha
sub
ficompl
mov
test
incb
push
jl
pop
fbstp
shll
lahf
wrmsr
xchg
cmp
cli
push
sub
push
shll
sahf
xchg
into
lock
pop
in
jge
xchg
mov
into
mov
add
clc
lods
fists
loop
pop
xor
xor
jnp
add
loope
mov
and
mov
push
cmp
cwtl
dec
dec
les
or
pop
adc
icebp
fsts
cli
lret
mov
into
stos
test
xor
mov
cmc
cmp
test
mov
pop
in
mov
mov
jae
fnstenv
lret
imul
lods
xchg
nop
adc
cld
fisttpl
push
sub
xor
sub
sbb
pop
pop
push
push
cs
push
inc
dec
hlt
xchg
sbb
mov
xchg
inc
fldenv
or
std
movsl
out
popf
fwait
jg
pop
mov
push
mov
loope
je
movb
sub
dec
into
clc
and
ret
or
aaa
fcoml
sti
je
pop
fwait
jl
and
and
je
pop
pop
fmull
ror
out
or
inc
lret
test
dec
sahf
scas
inc
mov
std
mov
add
repnz
push
repz
jmp
cmp
xchg
sbb
add
adc
dec
jl
mov
inc
scas
or
xchg
sbb
adc
or
mov
in
fwait
test
stos
int
iret
mov
lods
negl
aad
movsb
inc
jb
mov
mov
cwtl
xor
and
push
daa
aaa
pop
pusha
icebp
push
dec
jge
cmp
mov
arpl
sbb
ficoms
pop
pop
or
lcall
mov
out
data16
je
mov
fsubs
adc
arpl
int3
rcl
out
cltd
mov
mov
and
push
pop
or
sub
cs
test
mov
testb
adc
xchg
mov
mov
xlat
negb
sub
or
cmp
lret
lret
dec
cmp
in
pop
pop
testl
je
mov
sub
repz
xor
pop
pop
push
jns
lds
jp
in
dec
fadds
dec
out
out
mov
shlb
dec
mov
inc
repz
insb
xchg
loop
pop
scas
sub
std
ret
cmp
arpl
pop
sub
lea
push
xchg
es
addr16
jo
sub
cmp
add
jmp
ds
pop
bound
mov
stc
inc
ds
sub
jmp
jo
fdivl
fildl
mov
inc
imul
pop
in
mov
adc
popf
and
cmpl
inc
cmp
mov
insb
add
imul
int3
mov
popa
mov
sbb
pop
jnp
test
add
repz
xchg
iret
jns
fbld
in
cmp
push
mov
cwtl
cmp
sbb
adc
jnp
push
repnz
loop
inc
adcb
and
loopne
rcr
in
mov
push
cmc
xor
mov
dec
sbb
sub
pop
xor
div
ljmp
adc
stos
mov
push
icebp
stos
jecxz
insl
in
in
call
xrelease
adc
sbb
bound
movsb
fidivrl
sarl
and
fs
bound
mov
dec
dec
sbb
add
rcll
outsb
jecxz
cmp
cltd
jnp
xchg
rorl
sub
dec
cmp
jge
mov
sbb
inc
mov
outsl
sbb
sbb
mov
in
int
aaa
stc
mov
cmp
mov
popf
sbb
out
xor
adc
adc
pushf
fdivl
mov
cwtl
test
sbb
cmp
test
loop
in
mov
outsl
ret
mov
popf
jge
jecxz
pop
jge
scas
sub
inc
ljmp
mov
enter
push
ja
inc
xor
inc
fsubl
repnz
out
jno
mov
dec
pop
shl
inc
push
notb
subl
xor
lcall
dec
add
daa
dec
int
sub
xchg
add
dec
hlt
sbb
push
push
cltd
es
inc
mov
fsubl
jne
push
xchg
or
mov
scas
loope
ret
push
inc
inc
and
jo
and
jo
dec
add
inc
ss
cmpsb
fimull
mov
decb
test
sub
shlb
jns
loopne
lds
and
std
mov
sub
mov
and
sbb
mov
lcall
hlt
ret
divl
mov
jnp
iret
jns
sbb
cld
shl
sahf
ljmp
add
out
mov
sti
fs
lods
nop
insl
mov
or
sub
js
mov
sub
jmp
les
imul
shll
shrl
aad
fnsave
inc
nop
fidivl
push
cmp
jno
stc
cmp
es
or
shlb
add
lods
mov
in
fisubrl
inc
mov
orl
jp
sub
jns
jmp
test
test
addb
fwait
dec
pop
cmp
data16
lret
insb
mov
aaa
mov
push
loope
ljmp
sub
mov
hlt
jno
pushf
rol
loope
fdivrp
push
mov
jmp
cmc
add
bound
orl
mov
aas
into
popf
and
outsl
cmpsl
bound
jns
shrl
pop
insb
mov
dec
inc
stos
cmpsl
aam
jge
iret
sbb
xor
mov
and
icebp
imul
cmp
clc
in
jae
pop
repz
loop
sub
inc
enter
push
mov
sbb
cli
add
ljmp
adc
mov
stos
js
lds
insl
push
out
ror
fs
aam
push
cmc
xchg
sbb
and
jns
or
pop
jmp
das
std
hlt
test
dec
inc
or
sarl
inc
or
gs
insl
mov
and
pop
in
and
mov
addr16
jne
jecxz
inc
or
cmp
add
push
cmp
adc
fistpll
out
dec
nop
daa
add
gs
imulb
inc
adc
push
lahf
pop
insl
adc
pop
lods
or
test
xchg
loope
dec
or
je
dec
popa
outsb
xchg
int3
cmp
in
repz
js
push
mov
fnstsw
das
cmc
cmp
daa
xchg
test
mov
jg
adc
mov
adcl
jnp,pn
mov
ljmp
or
aad
outsb
mov
fnsave
and
pop
sti
pop
xor
cmp
cli
adcb
jecxz
push
or
daa
lock
lods
fsubr
xor
addl
out
sahf
pop
inc
inc
adc
cld
fnsave
push
insl
aaa
and
jmp
imul
stos
in
popa
loope
jnp
das
setl
in
sub
add
push
pop
inc
stos
test
mov
cmc
pop
mov
mov
push
cmpsb
clc
out
inc
test
mov
and
push
sbb
cmp
fs
ret
fnsave
cmp
out
loop
or
call
pop
push
xchg
push
aam
inc
cwtl
ja
mov
xor
iret
loopne
rclb
sarb
dec
mov
push
cld
imul
jecxz
aam
sar
aas
and
lcall
in
popf
icebp
xchg
cmp
xor
ljmp
push
cmpsb
push
pop
movsl
imul
jp
mov
mov
mov
jne
popl
sbb
and
mov
sbb
jp
daa
dec
ljmp
gs
mov
xchg
and
movsb
xchg
cmp
push
pop
insb
out
out
push
mov
push
iret
lock
sub
fisttps
or
jae
icebp
subb
jl
push
int3
mov
push
stc
sbb
lods
add
add
test
aas
sbb
push
or
or
out
inc
and
cmp
scas
adc
sahf
mov
mov
ja
or
movsb
xchg
sbb
mov
das
mov
jno
push
fcoml
pop
or
negb
cmp
lcall
inc
fimuls
dec
cwtl
jne
sarl
in
and
add
mov
sti
lds
stos
repz
mov
push
arpl
fsts
fwait
sub
mov
scas
and
xchg
adc
sbb
cmp
inc
into
jg
es
mov
into
dec
add
pop
or
jo
or
and
jne
mov
mov
cli
stos
popa
loope
scas
fcompl
sub
out
ss
and
mov
add
push
aaa
shrb
ss
aas
xchg
scas
jo
xor
jmp
add
dec
ja
ds
fisttpll
pop
fdivs
in
mov
cli
mov
hlt
xchg
ret
push
jg
adc
mov
rcll
or
repnz
shll
inc
enter
inc
sahf
ja
in
inc
insl
out
mov
fnstenv
add
mov
hlt
push
jno
dec
add
ljmp
pop
test
cwtl
repz
mov
jne
outsl
cmp
outsl
or
das
inc
add
arpl
push
into
repnz
icebp
test
add
add
daa
lret
inc
sbbb
movsl
mov
and
popa
subl
insb
or
mov
inc
repnz
xlat
movsb
popa
xchg
pushf
sbb
outsb
imull
jbe
lcall
sahf
js
xchg
loopne
rolb
movzwl
mov
xlat
inc
mov
xor
pop
cwtl
cld
nop
ret
imul
js
loop
stos
fucomp
les
testl
subb
cmpsl
andl
xchg
sub
or
dec
and
mov
xor
mov
cwtl
xor
test
or
jmp
push
comiss
mov
div
testl
jae
lret
jae
jecxz
jbe
shl
into
repz
insl
mov
mov
inc
ficoml
inc
jp
or
sbb
mov
sti
pop
test
inc
addr16
ja
movsl
cmp
aam
inc
das
adc
hlt
add
or
out
jne
dec
inc
jnp
pop
xorb
es
jae
dec
add
lcall
clc
jbe
cmpsl
insl
icebp
mov
iret
out
lahf
and
fsubrs
lods
jno
scas
jecxz
xor
addps
mov
rclb
jne
scas
or
and
hlt
lret
mov
mov
fcoms
dec
and
sti
cmp
mov
leave
mov
dec
inc
out
pop
inc
adc
mov
cld
jge
testl
xor
hlt
and
add
push
popa
xor
sub
push
add
and
jnp
daa
in
out
andb
xchg
iret
std
xor
shrb
mov
int3
adc
mov
xchg
out
push
sbb
das
sbb
cmp
outsb
jns
sbb
cmc
add
bound
test
shlb
test
mov
adc
xchg
jno
adc
add
and
pop
pop
mov
dec
sub
adc
pop
dec
push
leave
jae
sarb
pop
sbb
rorb
mov
notb
stos
stos
mov
jp
sti
jo
xchg
cltd
out
mov
lods
fwait
lret
sbb
mov
rorb
xchg
inc
sbb
and
pop
aaa
lret
add
imul
ret
or
fdivs
fld
les
mov
sbb
inc
stc
push
cwtd
pop
test
adc
and
clc
scas
loop
sub
jne
mov
push
orl
sub
mov
inc
push
hlt
insl
xor
addl
or
pusha
insb
and
loop
aas
test
sub
adc
jns
sub
dec
adc
divl
std
into
test
jae
in
xor
mov
jp
outsl
mov
int
dec
lahf
cmpl
mov
add
mov
aas
divb
gs
push
test
popa
arpl
das
pop
sbb
mov
bound
push
xchg
in
fisubl
push
adcl
fcmovb
lods
jns
fs
imul
mov
in
pop
in
jp
sub
mov
adc
push
cmp
decl
pop
jnp
inc
out
push
clc
rcrb
clc
pushf
int
cli
jmp
stos
popf
test
jno
pop
sub
leave
fisubrs
clc
push
cmpsl
lahf
or
xor
aas
int
pusha
testb
xchg
mov
inc
clc
inc
cmpsb
aas
cmpsl
aad
imul
rorb
pushl
sbbb
scas
in
push
mov
cs
ret
mov
lret
xchg
aad
dec
ja
inc
out
rorb
mov
cmpsb
out
mov
sbb
jmp
or
inc
mov
push
adc
shll
cmp
cmpsl
jl
adc
insl
add
lahf
adc
dec
mov
jle
std
pop
cmp
fsubrl
jge
pop
mov
mov
fcomip
add
dec
mov
cmp
add
push
cmc
sbb
inc
cmp
xchg
sti
jns
xchg
loopne
add
push
xor
cmp
inc
daa
imul
mov
addr16
add
sbb
fstpl
xor
insl
pop
dec
cmp
or
xchg
mov
call
xchg
push
fs
xor
es
cmp
mov
arpl
cmpsb
clc
fmull
test
out
mov
inc
cmp
ret
in
push
mov
mov
cmp
jg
in
stos
sub
jne
shrb
lahf
ret
sbb
enter
inc
add
push
sar
dec
mov
mov
out
arpl
jns
dec
xor
adc
or
icebp
cltd
xor
std
cmp
mov
add
dec
sub
sub
jecxz
imul
jb
lahf
sub
inc
push
les
lret
out
arpl
and
out
push
or
dec
push
xchg
fwait
xor
sub
movsb
jbe
cmp
mov
dec
mov
mov
mov
xchg
ficomps
add
cwtl
popa
clc
scas
mov
les
add
cmp
cmp
sbb
in
add
sub
movsb
cs
dec
insb
test
xchg
mov
xchg
addr16
mov
nop
xor
add
push
mov
stc
pop
cld
in
push
fildll
and
stos
xlat
dec
jno
fcmovb
sub
pop
xlat
lods
pop
test
repnz
in
sbb
shlb
lcall
jno
xchg
dec
pop
cmpsl
testb
outsl
std
mov
cs
loope
aam
sbb
pop
sub
sbb
aad
cmpsl
test
inc
sub
mulb
dec
sub
cwtl
ss
fldt
jg
arpl
out
pop
das
std
xor
mulb
and
sub
popl
and
adc
jo
dec
xchg
mov
sbb
dec
shlb
cld
in
xchg
dec
xchg
push
xchg
pop
lock
push
dec
inc
outsb
or
and
mov
lods
insl
shll
mov
push
fdivr
cs
addb
imul
jno
test
mov
adc
jnp
lret
xchg
repnz
push
enter
mov
orb
cmp
push
mov
push
test
xchg
ljmp
loop
or
aad
cmp
cmp
mov
inc
jno
mov
es
movsl
ss
mov
xor
dec
lret
or
adc
in
cltd
int3
mov
test
dec
fists
pushf
push
push
adcl
fidivrs
mov
dec
dec
sbb
inc
lret
iret
mov
adc
xchg
enter
mov
inc
push
loopne
mov
sbb
andb
pop
nop
dec
adc
ret
inc
xchg
and
pop
sbb
movsl
jae
sub
repz
or
sbb
stos
movsl
in
xchg
xlat
test
vcvttss2si
pop
pop
or
out
mov
xchg
dec
push
mov
shlb
and
fnclex
inc
pop
and
jbe
mov
mov
outsl
std
mov
add
pop
mov
push
hlt
jbe
xorb
arpl
xchg
pop
push
and
insb
adc
loope
mov
enter
movsb
in
cmp
cmp
lods
subl
ljmp
pop
movsl
aas
hlt
inc
xor
loope
mulps
fisubs
aas
sti
stos
cmpb
xor
cs
shrl
jno
or
jae
fadds
test
pop
lea
xchg
xor
daa
xor
or
cmp
call
insl
in
addb
pop
aad
repz
out
add
fistps
mov
ss
loopne
rclb
and
pop
popf
pushf
cmp
cmp
lods
movl
data16
in
jmp
fwait
in
fldt
add
addr16
push
arpl
sbb
in
es
push
xchg
cwtl
or
outsb
sub
icebp
jp
xor
hlt
in
sbb
loop
push
inc
in
jmp
mov
aaa
imul
dec
out
adc
mov
sub
jle
xlat
mov
sbb
jmp
add
or
fs
incl
cmpsb
lcall
cld
shr
int3
push
neg
jle
scas
xchg
mov
jecxz
iret
sub
outsb
or
rcr
xorb
pop
add
inc
dec
pop
push
push
shlb
subb
jno
rclb
dec
cmpsl
iret
inc
sbb
pop
and
ljmp
sub
cmpsl
sbb
jno
sbb
xchg
mov
xor
fdivrl
popf
imul
aas
je
std
outsl
and
lret
out
stos
mov
dec
mov
xor
xor
idiv
adc
aaa
adc
adc
jg
loopne
push
push
mov
and
jnp
mov
inc
adc
into
and
push
push
push
push
pushf
mov
xchg
aam
xchg
inc
negb
into
pop
mov
sub
jge
pusha
js
arpl
add
test
and
scas
enter
pushf
mov
sarb
push
dec
mov
cmpsb
scas
cmp
rclb
xor
shll
jmp
nop
aam
sbb
adc
jbe
jno
pop
dec
aad
and
cmc
out
int
pop
push
shrl
add
arpl
adc
jbe
popa
or
sub
add
inc
dec
rorl
lea
mov
rclb
test
imul
fwait
xor
dec
add
fdiv
cwtl
pop
dec
pop
arpl
out
mov
das
dec
and
jp
subb
sbb
das
mov
cmp
test
jmp
pop
js
data16
dec
sahf
lret
and
pop
nop
cmp
cltd
cmc
mov
sarb
test
jo
push
cmpsb
lock
cmp
into
jbe
movsb
dec
and
aas
inc
into
testb
andb
nop
scas
xor
nop
xlat
mov
jmp
movsl
sbb
daa
adc
addr16
clc
sub
cmp
adc
pop
aam
pop
xlat
out
imull
fstpl
sahf
imul
jo
rorb
cmp
mov
inc
outsl
enter
in
dec
dec
pop
cmp
jp
pop
mov
add
mov
push
dec
cmp
flds
into
stos
mov
pop
js
test
in
pusha
inc
xchg
ficompl
insl
stos
pop
mov
dec
gs
test
cs
xor
jecxz
and
cmp
push
mov
icebp
hlt
into
jno
ljmp
cmp
in
add
add
mov
push
push
aas
adc
cs
mov
lods
out
adc
filds
test
mov
or
sbb
fidivrl
or
mov
sbb
mov
mov
xchg
or
in
out
or
and
out
stos
and
xchg
fwait
lcall
cmp
out
enter
loopne
and
sub
je
pop
stos
jns
sbb
add
push
or
cmpsl
movsb
and
mov
dec
xchg
mov
mov
sbb
xor
xor
ret
add
and
fld
jo
out
lret
dec
push
mov
pop
xchg
add
ja
push
xchg
sahf
pusha
repnz
jmp
sbb
jle
in
xchg
push
std
jge
xor
push
mov
inc
push
and
pop
lcall
flds
mov
push
mov
leave
cmpb
popa
sarl
andb
mov
nop
lds
cs
xchg
jo
mov
test
bound
into
xor
cmp
out
jg
jne
ficoms
xlat
xor
je
addl
jno
pop
inc
xchg
ffreep
adc
cmp
push
out
jne
jp
ja
pop
cmp
xchg
insb
jp
mov
mov
lods
in
daa
cmp
pop
cmp
test
mov
xor
jb
or
mov
jg
mov
loope
mov
lds
iret
loop
push
in
mov
xorb
fiadds
mov
shl
lods
push
and
loope
add
arpl
stc
fs
mov
push
dec
movsb
std
mov
mov
mov
mov
fistpl
mov
sbb
dec
inc
shrl
clc
inc
pushf
mov
adc
dec
pushf
pop
jns
jnp
or
imul
pusha
leave
idivb
pop
daa
inc
data16
nop
sub
or
nop
cmp
femms
xchg
mov
arpl
cmp
mov
adc
popa
ljmp
es
je
dec
pop
addl
mov
xchg
jge
mov
test
mov
xor
lock
dec
mov
fcmove
pop
ror
sbb
mov
bound
aaa
pop
dec
outsb
leave
pop
sbb
cmp
lcall
cmp
pop
pop
cmpsl
shll
mov
cmpsb
inc
mov
jmp
jnp
in
or
fnstsw
iret
inc
xchg
mov
mov
pop
xor
jmp
aam
adc
ror
fcomp
push
mulb
xor
fwait
sbb
icebp
stc
or
cmp
adc
mov
in
sti
mov
loop
iret
shlb
lods
adc
addl
aam
xchg
adc
push
jge
push
xor
mov
add
fcomi
jmp
inc
push
pop
out
push
or
inc
push
jl
dec
ret
sbb
xor
int3
push
stos
es
jbe
xor
add
in
insl
sarb
daa
mov
jbe
or
cs
mov
push
sub
mov
add
jle
out
jecxz
mov
out
sub
xor
jns
roll
dec
push
push
pushl
jno
out
mov
sub
lahf
fcmovne
fmuls
inc
bound
pop
lret
xchg
sarb
jl
jno
js
fildl
xor
push
add
cmp
outsl
cmp
scas
inc
inc
adc
cmpsb
cmp
cmp
xor
mov
mov
adc
mov
shr
outsb
fwait
push
and
cs
dec
pop
jae
sub
sub
mov
or
cmp
orb
jns
jns
lret
mov
adc
movsb
lods
jbe
cmovb
mov
sbb
mov
push
das
sbb
push
mov
jne
jg
lods
mov
jle
aaa
subb
add
lds
sbb
loope
lods
cmp
pop
ficomps
fildll
popa
fwait
sbb
push
dec
mov
aad
loope
leave
push
imul
loopne
push
sbb
and
movsl
int3
dec
mov
and
loop
imul
lock
jne
lock
sti
testl
sbb
push
sbb
rcrl
aad
and
and
daa
add
push
rol
imul
adc
jl
clc
fs
inc
cmp
adc
inc
test
xor
cli
mov
adc
push
dec
loop
repnz
pop
subb
and
adc
mov
jbe
in
loope
push
adc
in
add
aad
jb
rclb
les
sub
fwait
mov
call
lcall
jnp
std
das
pop
add
mov
iret
cs
jbe
mov
iret
ja
loopne
das
jg
loop
pop
loop
rcrb
push
lock
push
fs
jnp
sub
jg
xor
sahf
jne
push
add
xor
out
push
mov
lea
push
pushf
lea
xchg
xor
or
sub
push
or
mov
pop
daa
sbb
lcall
cmp
clc
cltd
ret
sti
sub
xchg
bound
int3
ljmp
in
lret
sbb
mov
xchg
adc
adc
mov
add
mov
popf
mov
into
sahf
mov
xor
ja
bound
js
mov
inc
movsl
call
mov
jg
test
in
popa
dec
mov
stos
add
pop
rorb
std
jle
sbbl
sbb
add
or
dec
jmp
hlt
jge
shl
inc
jecxz
div
int
scas
enter
imul
inc
fs
inc
andb
popa
out
pop
xor
dec
adc
jno
ret
out
js
mov
mov
xlat
pop
andb
jge
adc
je
mov
adc
add
rcll
jne
adc
imul
std
nop
aas
cltd
xor
fsubl
push
jle
and
mov
test
fdivl
fwait
je
call
adc
sbb
mov
jae
lock
sarl
mov
inc
dec
movsb
sbb
add
xchg
es
sub
mov
adc
jle
sbb
push
adc
sahf
inc
add
loopne
aam
das
cmpb
lock
mov
dec
addr16
mov
out
lds
mov
xor
pop
pop
sub
jbe
sub
add
push
mov
daa
xor
jl
cmpsl
int3
ds
daa
cld
fisttpl
and
mov
pop
mov
fs
dec
dec
das
dec
sub
pushf
dec
push
jmp
xor
das
shlb
adc
sub
push
push
incl
mov
not
add
pop
rcrl
insb
pushl
sarl
cwtl
or
cmp
loopne
imul
cmp
pop
add
out
clc
movl
aas
fnstcw
cmc
loope
mov
sbb
cmp
ret
out
orb
or
cmc
jne
jno
nop
fisubs
fwait
test
fdiv
xchg
pop
dec
enter
inc
loop
mov
fisubs
cmp
adc
mov
repnz
or
mov
inc
mov
loopne
adc
push
or
pusha
pop
arpl
xor
jmp
push
ret
lock
cltd
push
mov
add
xor
test
mov
add
xchg
cld
movl
add
mov
sbb
cmp
out
fistl
mov
cli
aam
xchg
sbb
pop
out
loop
jp
xor
and
nop
dec
ljmpw
outsb
out
adc
xchg
push
cli
mov
mov
cmp
xchg
je
rcr
lret
loop
mov
inc
lret
or
ja
pushf
shll
push
lahf
jecxz
aad
mov
adc
scas
fcmovu
push
push
mov
dec
lods
scas
inc
lahf
lods
fcompl
in
or
icebp
aas
into
aas
mov
imul
loopne
testb
sti
fcoms
jg
ret
xchg
lcall
stos
jmp
pop
out
ret
sub
iret
fsubrl
push
test
push
mov
mov
mov
jnp
popf
fldenv
in
insl
jmp
cmpsl
jns
jp
ss
es
push
and
addl
mov
lret
mov
sub
mov
inc
std
sbb
pushf
cmp
cld
pop
int3
adc
outsl
or
xchg
clc
stos
imul
jb
xchg
jae
movsw
mov
mov
stos
mov
pcmpgtb
inc
out
in
js
addl
cmp
sbb
addr16
test
adc
ret
and
sub
ret
and
add
lea
imul
xor
inc
and
sub
fdivl
out
inc
stc
aas
and
xchg
out
push
insl
cld
add
out
mov
aad
dec
sahf
inc
sub
out
fwait
repz
cmp
sbb
fisubrs
push
arpl
lret
jle
cmp
mov
pop
ss
and
xchg
xlat
jo
jmp
incb
cli
fsubrs
movsb
sbb
jecxz
add
outsl
inc
stos
dec
jmp
sbb
scas
mov
adc
mov
clc
insb
jo
cltd
cmp
inc
daa
mov
push
das
xor
sub
sbb
xchg
mov
loope
popf
xchg
push
fnsaves
in
xor
add
subb
pop
or
xchg
popa
and
popa
stc
clc
int
sti
and
mov
adc
aas
rclb
xchg
xlat
inc
mov
mov
and
or
pusha
jbe
push
out
inc
dec
sar
test
fmull
scas
sub
mov
mov
mov
jg
mov
stc
outsb
pop
test
lcall
sarb
push
add
js
mov
xchg
mov
xchg
xchg
cmp
mov
jl
arpl
inc
jg
movswl
std
inc
xchg
push
jge
xor
xorb
lahf
mov
movsb
push
sti
sub
imul
fsubs
inc
sbb
xor
mov
pop
xor
in
scas
dec
mov
scas
inc
push
cmp
nop
or
mov
test
icebp
jo
iret
pushf
adc
jecxz
mov
imul
fsubrl
cmp
mov
hlt
push
jge
imul
sub
in
push
sarb
shrb
adc
xchg
xor
inc
faddl
xchg
dec
cmp
hlt
jo
dec
loope
jbe
lock
aas
js
rolb
popa
mov
ss
in
adc
and
ret
test
lret
sahf
jmp
dec
lock
les
mov
or
lahf
inc
in
out
add
inc
stos
sub
sub
dec
dec
lcall
addr16
out
pop
loope
sub
sbb
cmp
sub
push
xor
dec
fwait
add
filds
mov
mov
les
aas
scas
push
pop
jo
jae
sbb
out
add
push
add
imul
push
adc
inc
inc
aad
push
out
mov
aad
cmpsb
cmpsl
mov
jecxz
or
lock
push
cwtl
add
and
jl
adc
jge
sub
adc
cmp
sarb
sbb
and
lds
nop
dec
cmpsb
mov
jne
xchg
xchg
pop
stc
insb
xor
outsl
cmp
push
lock
insb
int3
inc
aam
xchg
or
mov
pushf
not
sub
fwait
rclb
inc
ja
imul
rol
jecxz
dec
sub
xor
jp
in
mov
test
in
push
out
lock
mov
in
push
inc
shlb
fisubs
add
pop
test
lcall
adc
pop
xor
or
leave
movsl
adc
lret
sub
int3
in
sahf
add
mov
mov
xchg
movsb
adc
or
pop
loopne
rorb
jl
xchg
stc
dec
out
les
lds
das
jns
fsubs
mov
sldt
gs
fmuls
pop
dec
divl
pop
mov
dec
insb
sub
dec
push
mov
cmp
movsb
add
popf
movsl
xchg
pop
or
cmp
xor
xor
int3
es
scas
ss
dec
lahf
fidivrl
popf
test
xchg
stos
imull
loope
mov
cmp
out
push
pop
popa
into
es
lea
movsl
jnp
test
xchg
movl
aaa
rcrb
lcall
pusha
mov
out
xchg
jl
jns
jnp
sbb
lods
dec
sbb
xor
adcb
movsl
into
sti
andb
aad
test
xchg
xor
adc
lds
jbe
outsl
jmp
insl
in
stos
cmpsl
mov
pusha
push
lret
mov
mov
lea
mov
sbb
inc
fcoml
jo
shll
fistl
in
mov
xchg
push
lret
fidivl
mov
lret
mov
dec
jns
sub
dec
sbb
les
leave
stos
push
leave
adc
cli
mov
sub
cmp
inc
mov
in
aas
fucomi
call
sub
and
push
pushf
or
add
mov
push
fcoml
dec
scas
stc
and
push
or
stc
in
repz
mov
push
dec
das
cwtl
ret
lea
mov
or
popa
test
inc
add
jl
sbb
add
pop
outsb
out
shr
push
enter
cmp
daa
xor
xor
mov
ret
faddl
leave
xor
jno
xchg
pop
ljmp
add
or
inc
lods
inc
int
fsubrl
adc
ret
add
sahf
mov
call
arpl
scas
or
jnp
and
add
negl
loope
into
repnz
cmp
push
negl
mov
add
cmp
mov
pop
sbb
lods
fwait
out
cmpl
lods
incb
loop
xchg
xchg
in
jp
enter
ret
lea
add
pop
nop
mov
sub
aaa
aaa
xlat
sbb
and
cmp
xor
rcrl
es
frstor
pop
mov
adc
jns
pushf
inc
pop
cld
outsl
rol
imul
test
pmullw
iret
push
andl
jbe
mov
ljmp
addr16
and
adcl
sbb
mov
cmp
mov
lcall
and
rolb
stos
fisttpll
add
xor
sbb
adc
outsb
jb
add
aam
repz
or
adc
mov
fcomps
adc
push
dec
cmp
aam
clc
dec
cmp
mov
into
cltd
aas
test
outsl
xchg
xlat
hlt
cpuid
neg
and
js
incl
loope
out
pushf
testl
add
movsl
pop
test
call
addr16
sub
sahf
cmp
ljmp
jle
adc
sbb
jecxz
cli
dec
pop
out
jns
fistl
or
out
leave
or
cmp
xchg
jbe
push
lahf
fwait
out
je
je
cmp
mov
out
icebp
push
lods
loope
psrlq
int3
mov
jo
xchg
mov
int
pusha
cmp
sbb
sub
aad
push
cwtl
push
js
xchg
add
nop
in
jecxz
rcrb
out
xor
mov
pop
imull
pop
or
dec
flds
jmp
dec
sbb
adc
repz
pop
fwait
mov
clc
dec
sbb
es
push
pop
mov
xor
xchg
jl
adc
rcrb
cmpsb
jbe
aam
arpl
imul
inc
nop
xor
fstpl
push
cmc
adc
xor
dec
xchg
lods
mov
gs
and
sbb
fbstp
lds
pop
mov
pop
mov
add
fiaddl
js
jmp
orl
or
adc
jp
jge
rcll
addl
jno
or
lock
divb
mov
and
add
mov
ds
rcl
mov
cwtl
lods
into
push
addr16
jmp
xor
jno
inc
pop
mov
cmc
scas
mov
xchg
fxch
fcoml
scas
fisttpl
mov
or
sbb
adc
dec
push
cmpsb
loope
xor
sahf
fistpl
sbb
jbe
push
outsb
sbb
push
xchg
repnz
adc
push
jns
lods
pop
adc
mov
xchg
ret
xchg
inc
insb
ja
ss
mov
pusha
adc
fsubrl
mov
stos
stos
outsl
repz
lahf
xor
push
mov
sbb
pop
xor
sub
dec
std
pop
mov
dec
mov
sarl
mov
lahf
hlt
js
cmp
push
add
mov
xchg
pop
mov
adc
mov
adc
stos
adc
dec
lock
lret
fistps
jecxz
insl
je
xchg
fs
lret
cmpsb
mov
adc
push
leave
into
or
dec
mov
dec
xchg
cmp
cmp
mov
xor
sbb
or
pop
xor
mov
gs
inc
imul
sub
and
jg
sbbl
pop
test
in
jmp
cmpsb
xlat
inc
movsl
mov
mov
test
outsb
outsb
or
jo
insb
and
xchg
int3
adc
les
jle
js
jnp
push
rcll
out
mov
sti
mov
inc
adc
out
hlt
mov
sub
jge
xchg
mov
scas
or
in
or
push
jp
and
loop
jg
and
sub
dec
xlat
mov
fmulp
mov
pushf
sti
js
jle
jo
sbb
enter
mov
in
ret
outsl
lahf
loope
out
pop
rclb
ret
and
cld
jp
ljmp
sbb
sub
sub
sahf
js
idivl
dec
cs
or
pusha
imul
lods
push
add
out
cs
or
mov
sbb
sbb
mov
sub
out
mov
add
xorb
pop
enter
xchg
jns
iret
arpl
xchg
inc
aad
je
ss
pop
mov
push
scas
jg
pop
jo
fstpt
mov
xchg
mov
lahf
in
fstps
push
and
xor
aad
inc
dec
and
sub
icebp
mov
pop
xchg
or
add
or
inc
xor
lahf
sub
imul
adc
lock
mov
negb
test
arpl
sbb
icebp
sub
jle
cmp
fs
or
das
push
shrb
into
dec
add
pop
sahf
sahf
mov
inc
lar
in
fcoml
jecxz
inc
jl
int
push
jb
mov
sbb
adc
mov
data16
push
or
aam
sub
in
mov
mov
test
xor
push
aas
dec
pop
push
lods
sub
inc
cmp
fisttps
mov
jnp
xchg
or
mov
into
push
jge
inc
nop
cmp
stos
out
adc
rorb
or
movsl
lds
xchg
or
gs
sub
call
jmp
mov
sub
push
lea
out
test
add
out
dec
lret
dec
sub
jge
outsb
jae
stc
dec
rclb
mov
jecxz
sbb
cltd
pop
xchg
sub
popf
insl
cmp
inc
orl
and
in
cmp
rcrb
popf
dec
jns
and
into
sarl
adc
sti
and
fsubrl
push
ljmp
out
xchg
xchg
mov
push
inc
in
pushf
xchg
cmpb
jno
or
mov
mov
loope
popl
movsl
add
add
aaa
or
arpl
aad
push
inc
ss
jmp
rol
cmpsb
fs
in
cltd
inc
mov
shl
cld
dec
and
stos
in
arpl
sub
rolb
mov
xlat
arpl
es
mov
xor
mov
dec
loop
and
in
push
mov
std
pop
jp
mov
dec
lea
fs
cld
add
inc
test
mov
das
mov
lret
fbstp
jecxz
lret
outsb
xchg
subl
in
imul
outsl
js
pop
stos
jbe
jge
cmp
pop
daa
jp
bound
aad
clc
mov
add
inc
jge
dec
sbb
imul
adc
mov
orb
es
jne
jg
dec
ret
sbb
inc
adc
cmp
push
lds
fmuls
ja
nop
rolb
add
sbb
or
decl
repnz
and
stos
jo
xor
aam
pop
mov
shlb
mov
pop
call
mov
rcrl
jge
cs
mov
imul
movsb
pop
xchg
ljmp
mov
aam
incl
mov
inc
test
or
nop
std
jge
lret
push
dec
popa
repnz
imul
dec
testb
into
jne
mov
gs
in
push
or
or
dec
js
ds
pop
outsb
dec
stos
dec
mov
mov
nop
adc
cmp
jle
arpl
loop
inc
lret
dec
xor
pop
call
sbbl
ds
ljmp
subl
ja
mov
js
dec
idivl
flds
into
notl
add
outsl
mov
ffree
adc
xchg
movsl
jns
mov
add
adcl
mov
xchg
xchg
insb
mov
xor
inc
sub
into
lods
pop
xchg
jo
cmp
and
lods
and
xor
adc
fxch
fildll
nop
add
in
or
roll
inc
dec
into
std
inc
stc
lock
mov
add
les
scas
mov
and
outsb
sub
jnp
sti
and
push
mov
fiadds
or
sbb
shlb
mov
rcrl
mov
shrl
mov
shl
push
js
push
andl
fnsave
aaa
sub
loope
sbb
xchg
paddsw
push
or
and
and
sbb
push
sub
lcall
in
jmp
or
je
lret
sti
or
inc
movsb
scas
jb
or
in
dec
dec
dec
ljmp
pop
movsl
mov
sbb
incb
ds
movsl
mov
sub
cmp
dec
test
test
cmp
sub
sarl
enter
int3
push
cmc
add
addr16
fadds
movb
addr16
pop
push
shl
xor
pushf
cld
popf
loop
aad
xchg
loope
inc
jmp
scas
ret
ret
adc
sub
or
jg
mov
cmpsb
fst
inc
mov
arpl
push
pop
sbb
xor
das
jg
push
ds
and
loope
push
fldl
insb
adc
cld
xchg
lea
mov
int3
cmpsb
out
rorb
and
je
mov
push
lcall
adc
loopne
insb
stc
xlat
ds
cmp
rol
jo
lret
out
mov
cmp
and
cmp
inc
pop
movsl
xchg
mov
and
add
push
mov
into
cmp
enter
mov
andl
push
in
mov
lret
in
pop
and
jno
mulb
jecxz
fwait
mov
jne
sub
scas
sbb
fs
cmc
push
xor
ds
sbb
xchg
mov
lret
nop
cmc
js
pop
int
mov
mov
dec
sbb
sbb
and
or
scas
and
jl
push
push
repnz
sub
and
xchg
outsl
sub
mov
jbe
dec
imul
mov
and
ret
mov
dec
or
jl
addr16
mov
loop
ss
fbstp
daa
adc
adc
jne
cld
out
lea
mov
outsl
or
mov
bound
les
xchg
into
ror
es
push
mov
or
movsl
lods
pusha
dec
inc
fcomip
pop
xchg
mov
jmp
adc
add
popa
test
mov
pop
ja
fistpl
sbb
lea
pushl
mov
and
push
shl
jg
mov
xchg
lret
add
rorb
xchg
std
adc
xchg
sbb
imul
popf
jecxz,pn
sahf
fmulp
mov
fst
push
pop
dec
sbb
fisttpl
jmp
idivb
addl
fwait
dec
pop
xor
jl
pushf
in
and
bound
inc
popf
add
adc
xor
push
xor
push
adc
cmpb
add
pop
in
xor
movsb
cld
cwtl
dec
cmpb
outsb
popl
add
mov
ss
jge
fildl
loop
lock
shll
scas
mov
dec
es
lds
out
call
xchg
loop
sub
aam
fsubs
mov
cmpsb
push
lahf
cwtl
lods
mov
mov
roll
cs
fucom
cld
pop
pop
shl
jle
notl
pop
lahf
sub
jge
and
fnstsw
mov
movsl
push
inc
adc
in
pop
xchg
inc
jle
mov
test
jmp
ds
mov
aaa
mov
xchg
cmp
jp
inc
adc
mov
test
mov
stc
xor
push
push
rcrb
or
push
ja
dec
stos
nop
popf
stc
jno
dec
push
shlb
icebp
mov
mov
cmp
and
xchg
pop
ret
ljmp
movsb
jne
dec
lods
aas
jg
mov
sbb
xor
adc
xchg
popa
repz
mov
pusha
mov
jnp
movsl
movsl
subl
cmpsb
pusha
cwtl
sbb
push
jno
aaa
mov
mov
sub
adc
push
scas
cmpsb
loopne
fsub
ljmp
aad
sbb
scas
in
dec
mov
stos
jge
aaa
imul
adc
test
fidivl
add
xchg
xchg
in
enter
icebp
mov
mov
loop
lret
arpl
rolb
aad
push
push
sbb
ja
pop
fisubl
mov
pop
js
jmp
aas
and
cld
mov
dec
sti
pushf
mov
inc
sti
cmp
mov
nop
setns
hlt
jnp
jmp
in
outsb
dec
mov
pushf
insb
xchg
test
cmpsl
xor
xchg
repz
mov
mov
pop
jns
filds
incb
and
out
icebp
mov
lods
xor
xchg
and
jns
pop
jne
scas
out
or
mov
xor
push
addr16
mov
xor
jl
cmp
cld
hlt
dec
fadds
jg
mov
decl
sbb
push
lcall
inc
jae
mov
in
xor
and
adc
lock
adc
inc
shl
leave
test
sti
hlt
pop
icebp
add
sub
mov
dec
loopne
cmp
mov
mov
stos
xorb
popa
mov
and
gs
scas
mov
push
fbld
adcl
push
and
cld
fimull
std
xchg
cmc
outsb
imulb
roll
scas
out
mov
jb
and
mov
cmpsb
cmp
jo
fstpt
dec
push
in
push
stc
or
sbb
cmpsl
inc
mov
dec
mov
aaa
idiv
ds
mov
loopne
cmp
xor
imul
mov
push
fstl
push
pop
pop
pop
adc
jb
mov
xor
sub
stos
fisubrs
adc
or
mov
and
iret
sbb
mov
jae
dec
cmp
repz
pop
or
push
decb
and
jmp
in
cmp
cld
rcll
adc
pop
jge
mov
pop
mov
xchg
fisttpll
inc
jp
sbb
imul
subb
in
jne
leave
sub
mov
pop
aas
fdiv
cmpsb
xlat
push
dec
adc
jbe
pop
adc
lret
dec
xchg
repnz
mov
ljmp
push
cmp
mov
adc
dec
push
shrb
xor
addb
in
popf
sahf
fxch
mov
mov
outsl
test
mov
mov
dec
insl
or
and
mov
xchg
push
mov
mov
mov
clc
daa
xchg
or
jo
xor
push
lods
cmp
jnp
pop
das
push
mov
lahf
cld
addr16
fwait
cmp
or
push
xchg
jne
push
inc
add
mov
xchg
inc
dec
dec
popa
jb
rorb
imul
jnp
dec
cmp
stc
test
aaa
rcr
fld
cmp
xchg
lret
out
push
xchg
lea
cltd
lods
add
push
mov
popa
pusha
push
cwtl
xchg
test
test
add
xchg
aam
jb
rcl
mov
popf
hlt
mov
adc
test
dec
aad
sub
in
mov
icebp
enter
jbe
lods
sbb
fdivrp
movsl
pop
mov
mov
into
sbb
gs
push
psrad
mov
sbb
jmp
call
rolb
pusha
or
xchg
bound
mov
jmp
ds
mov
pop
stos
add
rorl
sub
mov
sub
push
notb
sub
test
lahf
adc
dec
dec
test
popa
cmp
leave
mov
shrl
cs
mov
ret
cmc
xchg
mov
pop
push
stos
movsl
imulb
lods
dec
sub
jbe
dec
mov
xlat
push
fdivl
sub
int3
fwait
in
das
subl
mov
pop
cmp
out
test
add
xchg
jo
and
pop
out
xor
in
mov
fidivrs
or
arpl
loopne
xchg
cli
and
stos
cmp
in
add
mov
xchg
xchg
push
sbb
push
js
pop
stc
repnz
push
negl
inc
jmp
cmp
bound
test
cmp
cwtl
lret
jmp
pop
xor
fpatan
shlb
push
mov
jecxz
in
jo
cmpsb
cmp
and
lahf
xchg
xchg
pusha
ljmp
xlat
insb
or
ljmp
mov
call
pop
icebp
mov
or
push
xor
addr16
out
addr16
lods
cmp
push
jmp
stos
jle
mov
sub
movsl
adc
lods
mov
ret
push
out
xchg
and
in
dec
fsts
cld
repnz
push
fimuls
mov
or
loopne
xchg
popf
fiadds
hlt
lahf
cmp
xchg
test
dec
dec
push
cmp
jp
mov
sbb
cmc
cmpsb
jg
add
xchg
and
add
sbb
test
and
leave
inc
cld
add
rolb
push
stc
and
dec
add
or
rorl
jmp
pop
mov
dec
or
add
adc
pop
mov
cmpsl
mov
dec
loopne
subl
push
inc
lods
jmp
bound
push
mov
enter
jecxz
cmpsb
and
test
dec
mov
icebp
mov
loop
fwait
inc
stos
imul
sbb
arpl
ret
xor
fnstsw
mov
in
mov
es
stos
fiaddl
jae
xchg
jb
fidivs
int
dec
popa
xlat
add
jb
adc
out
mov
in
xor
arpl
popa
jnp
lds
lods
jo
test
xor
arpl
cmc
cmp
add
std
xor
iret
mov
ljmp
dec
inc
xchg
loopne
cmp
arpl
and
jae
cmc
sti
cli
xorb
xor
pcmpeqw
out
repnz
fcoml
mov
ret
fstpl
inc
push
add
rclb
push
xchg
aam
or
xor
fs
shrl
or
lods
mov
dec
cmp
mov
pop
dec
cmpsl
les
jge
les
xor
or
popf
and
ss
sti
adc
dec
mov
push
icebp
popa
aad
mov
push
mov
inc
loop
push
insl
mov
in
out
sahf
xchg
push
push
repnz
jo
lea
push
nop
cwtl
mov
inc
lret
mov
movsb
gs
push
js
sbb
add
scas
cld
pop
and
decl
rolb
outsl
mov
leave
addr16
ljmp
jno
jnp
lods
sbb
test
daa
int
mov
stos
mov
mov
mov
in
popf
push
xor
fildl
cmp
push
lods
sarl
arpl
sbb
push
xchg
sub
popf
jmp
mov
inc
pop
xchg
loopne
pop
out
rclb
add
mov
mov
push
aaa
pop
mov
fdivs
xor
decb
inc
add
insl
or
xchg
iret
mov
popa
mov
cmpsl
sub
aad
sarb
cld
or
sbb
outsb
movsl
add
jge
xchg
pop
dec
mov
xchg
icebp
fdivrl
std
mov
je
fcoml
cli
adc
jmp
repz
inc
xor
xchg
aam
shll
sbb
out
scas
into
jg
std
iret
mov
lret
xchg
adc
lret
mov
xor
cs
xchg
mov
push
les
push
xchg
cld
inc
and
dec
cmpsb
pusha
mov
imul
mov
movsl
mov
mov
in
push
cmp
mov
sahf
mov
jnp
bound
in
out
sub
or
and
jbe
push
push
mov
dec
xchg
jns
int
das
adc
and
inc
nop
jo
jbe
leave
jns
mov
loopne
or
xchg
pop
ss
mov
outsl
jecxz
insl
popf
jne
jne
sahf
cwtl
aaa
cltd
insl
xor
je
stos
dec
dec
add
xabort
adc
sbb
in
arpl
sbbl
xor
aam
ds
pop
or
ds
xchg
iret
pop
cmpsb
dec
sbb
pop
nop
push
xchg
pushf
adc
out
ds
clc
xor
popa
stc
and
repz
jo
fwait
es
out
into
sahf
mov
pusha
lret
rorl
xor
insb
and
callw
mov
xor
fidivrl
push
sbb
rcll
push
sbb
push
js
and
jo
inc
jo
clc
inc
mov
xor
xlat
xchg
add
inc
dec
aaa
loop
ja
xor
xlat
rclb
mov
push
fildll
sub
aam
pop
fdivrs
xchg
dec
mov
iret
aaa
stc
into
dec
mov
push
or
arpl
daa
lock
pop
gs
sbb
arpl
insb
jg
sbb
cmc
pushf
add
lods
or
pop
hlt
inc
push
cmpsl
xchg
push
mov
adc
xchg
adc
mov
cld
int
sbb
dec
mov
xchg
jns
aaa
jb
fiaddl
dec
add
push
fsubrs
rorb
jge
pop
stos
cmc
int
and
test
pop
and
mov
dec
sbb
pop
mov
popf
test
cmp
mov
sar
lcall
xchg
cmp
es
lock
loop
cmp
fyl2xp1
lock
inc
xor
mov
inc
or
sub
cltd
cld
out
push
add
orl
clc
pop
mov
lods
push
mov
scas
pusha
stc
inc
or
decl
sbb
add
hlt
pusha
xor
xchg
into
inc
int3
decl
adc
movsl
mov
or
xchg
push
in
sbbl
push
jge
ljmp
leave
or
cmp
clc
imul
dec
xor
sbb
and
xor
pop
sbb
movsl
ret
xorb
in
push
inc
lods
dec
stc
xchg
and
inc
sub
fs
xorl
pushf
je
rolb
sub
sbb
xchg
incb
sbb
dec
push
std
pop
inc
mov
loope
mov
aaa
mov
xorb
mov
in
xor
sub
push
daa
mov
xchg
in
add
jecxz
cwtl
xchg
mov
add
mov
sti
pop
movsl
subl
test
push
lahf
mov
bound
push
push
insb
mov
imul
aas
sti
sub
imul
aam
pop
dec
jp
loopne
mov
and
icebp
insb
pop
cmp
cmpsb
imul
sahf
cltd
mov
repz
cmp
xchg
mov
cmp
popa
lret
pop
mov
scas
or
cli
and
lret
aam
lret
jne
cmp
sub
es
sbb
and
inc
add
iret
clc
pop
ffree
mov
fwait
dec
pop
movsb
push
mov
inc
out
xchg
pop
ss
push
fbstp
nop
enter
lahf
pusha
mov
pop
arpl
daa
loop
mov
sub
sqrtps
clc
int
adc
mov
dec
pushl
enter
std
out
mov
jp
jb
xor
mov
fsubrp
sti
stos
sbb
and
pusha
test
cmp
cmp
scas
push
adc
pop
xchg
int
xchg
lcall
lock
fistps
adc
sbb
daa
mov
sub
pop
mov
and
jne
sub
std
int3
push
cmp
mov
dec
loop
fidivrs
mov
outsb
ficoml
pop
sub
stos
lahf
pop
fldenv
ss
xor
dec
sub
ljmp
fadd
testl
fldt
mov
lods
cmp
mov
sbb
je
sub
inc
test
icebp
std
xchg
jbe
sub
sbb
jne
pop
sub
or
pushf
cmp
clc
pop
popa
mov
imul
mov
and
mov
cmc
iret
clc
xchg
mov
into
sub
mov
mov
imul
icebp
int3
sub
fs
shl
stc
cmc
mov
ret
sti
mov
mov
or
daa
and
test
loop
das
bound
inc
xchg
insl
cmp
pop
sub
cltd
or
xor
adc
mov
les
mov
or
mov
mov
dec
into
xchg
or
scas
je
mov
inc
loope
inc
mov
or
lahf
xchg
out
and
adc
in
lret
push
jne
cmp
xchg
pop
sub
pop
popa
iret
push
cmp
pushf
xorb
das
lahf
test
stos
xchg
insl
movsb
push
or
or
cmpsl
sbb
pusha
pop
in
mov
xor
out
xor
mov
xor
push
adc
mov
dec
lcall
shrb
les
jo
jns
jle
pop
adc
dec
push
cld
xlat
dec
mov
lods
scas
fucomi
jl
or
mov
push
sub
sub
out
neg
dec
lcall
push
xchg
imul
add
rorb
xor
sbb
loopne
push
jnp
inc
dec
lds
sarb
shlb
cmp
outsb
testb
adc
xchg
cmp
sti
aam
ljmp
push
dec
ret
pop
arpl
fmul
push
mov
int3
dec
aam
icebp
cmp
lea
mov
xchg
xchg
or
cmp
jge
xor
int3
sbb
bound
pusha
sub
sbb
insl
mov
pop
aad
sub
dec
dec
cmpsl
mov
lea
loop
inc
lret
push
push
insb
ss
cmp
jg
int3
lods
int
mov
leave
outsl
fsubrl
mov
fcmovbe
mov
lret
sbb
push
dec
or
cmpb
jnp
cmp
push
stos
loope
sub
lcall
or
test
lret
les
psrld
shl
push
clc
add
test
mov
cli
adcl
push
inc
add
es
pop
sbb
movsb
testl
xlat
rorb
dec
mov
add
sub
mov
hlt
add
fs
sub
push
cmp
pop
imul
dec
jo
loope
adc
sbb
or
cltd
push
cmp
mov
mov
xor
sub
cmpsb
leave
jge
ret
je
outsl
jecxz
int
std
mov
sbb
in
xchg
pop
cwtl
push
ret
mov
pop
fstps
dec
ljmp
pop
inc
fistpll
enter
lcall
mov
mov
loopne
es
ret
pushf
ds
xchg
adc
jno
shrl
cmpl
ficoms
test
or
jnp
fstpl
add
sbb
loopne
adc
and
imul
repnz
cwtl
outsb
mov
lock
mov
push
es
shr
push
mov
sub
call
clc
mov
dec
bound
xor
pop
xor
cmp
push
outsb
repz
adc
cmp
push
shlb
je
jne
adc
push
push
push
jp
iret
sbb
push
and
es
sub
jge
sbb
outsb
addl
mov
scas
jne
pushf
adc
aad
out
std
movsl
xchg
pop
std
push
lods
dec
std
test
dec
mov
add
dec
add
and
push
dec
sbb
mov
sub
loop
jns
shrb
fdivrl
jmp
mov
sbb
dec
pop
mov
adc
test
cmp
cltd
adc
clc
cmpl
ret
dec
xor
cmp
scas
clc
sbb
cltd
sbb
dec
mov
out
lods
push
mov
inc
jl
xchg
mov
mov
dec
popa
ss
bound
mov
mov
lods
or
pop
inc
dec
cld
jmp
sub
jp
rclb
jp
xchg
ret
add
xor
push
aad
push
hlt
mov
push
push
jge
push
hlt
jae
dec
icebp
sub
pop
push
jle
push
cwtl
or
push
repnz
rolb
sbb
gs
ds
jge
lock
or
push
shr
ja
pop
and
pop
dec
or
adc
insb
jmp
out
xor
xor
cwtl
loope
or
ret
dec
repz
add
sub
xchg
daa
inc
out
ret
std
cmpsb
icebp
outsl
mov
loopne
inc
adc
add
test
shlb
outsb
mov
std
ficompl
xchg
aam
cmp
mov
fildll
cmpsb
pop
hlt
and
sbb
insl
subl
insl
rcrb
and
inc
sbb
pushf
js
sbb
push
jae
push
ljmp
shlb
test
sbb
ret
sub
fwait
mov
push
mov
inc
xchg
cmp
cmp
test
mov
sbb
stos
out
lahf
jecxz
repnz
mov
lret
insl
and
pop
cmp
test
cmpsb
and
mov
dec
jmp
push
shlb
aas
xor
cmp
icebp
imul
fildl
jg
mov
jae
mov
sbb
jbe
lret
out
stos
test
pop
adc
mov
fildll
cmp
lret
mov
es
cltd
dec
add
aad
jge
adc
rcl
mov
divb
fdivl
aam
rolb
fcoms
add
xor
sbb
cwtl
add
out
push
or
cmp
xor
cmp
idivl
outsb
popa
mov
inc
add
js
sub
sub
movsb
push
fxch
fstpt
pushf
sub
in
lret
jnp
xchg
scas
jno
loope
out
inc
fsubl
xor
pop
cmp
cmp
push
push
rcr
jl
mov
aas
out
inc
xchg
mov
or
ss
mov
add
icebp
jno
adc
mov
push
mov
cmp
andb
mov
inc
mov
fmuls
or
hlt
test
cld
inc
cmp
test
cmp
pop
push
insb
leave
or
pushf
or
dec
xor
or
adc
dec
dec
dec
push
iret
in
add
add
outsl
adc
or
loopne
pop
push
les
data16
jecxz
sar
pop
ret
in
iret
scas
mov
jecxz
in
mov
cs
cld
xor
cmp
inc
and
xchg
pop
fisubrl
cmp
and
cmp
cld
idiv
and
pop
out
into
xor
test
out
or
int3
in
test
test
mov
outsl
jo
push
cmp
dec
and
je
lret
ja
loop
pop
scas
push
inc
mov
xchg
leave
adc
pop
fbld
add
out
ljmp
cmpsl
loope
sub
loop
leave
ds
mov
pushf
ret
xor
push
push
inc
mov
das
enter
dec
popa
pop
fnsave
cmpsb
pop
cs
call
or
leave
add
push
push
call
cmp
frstor
dec
sbb
jecxz
or
data16
lds
xor
fmuls
cmp
shll
mov
mov
adc
stos
add
fnstsw
sbb
xor
fbld
jne
cmp
es
outsb
aaa
adc
mov
test
std
addr16
mov
adc
lret
mov
rclb
cmp
shlb
cmp
pop
leave
jl
out
or
pop
mov
cmc
jge
in
dec
mov
mov
aas
ret
aad
mov
bound
pop
gs
popa
inc
sbb
and
push
mull
sub
repnz
adc
inc
mov
jl
xchg
xorl
mov
and
fmul
inc
popa
mov
pop
out
add
pop
je
leave
fisubrs
inc
xor
loopne
movsb
outsb
daa
and
pop
nop
pusha
or
jl
enter
lds
sbb
adc
ficoml
pop
mov
inc
out
lock
push
insb
sub
jb
inc
loopne
mov
pop
pop
inc
popf
inc
stc
iret
je
shrb
rcl
movsb
int3
fstpl
jecxz
into
arpl
jnp
and
jecxz
add
add
adc
movsb
ret
movsl
hlt
xchg
push
cmp
aas
scas
sbb
lds
xor
xor
sub
inc
pusha
sub
mov
sbb
xor
inc
adc
push
fisttps
jns
xchg
xchg
sarl
ja
lahf
inc
xor
call
and
aad
test
push
jmp
or
and
popf
xor
sbb
mov
arpl
sub
mov
pop
outsb
xchg
fstps
sbb
mov
ljmp
arpl
jb
ljmp
mov
cmc
scas
sub
push
ret
sub
or
out
push
pop
lods
add
mov
loope
insb
and
sub
aaa
cmp
scas
dec
add
in
xchg
xchg
mov
mov
jno
fistpl
push
subb
dec
insl
or
std
ss
je
xchg
or
cmp
ja
shl
jl
push
xchg
xchg
leave
lods
mov
cmp
or
push
shrb
outsb
and
mov
test
shlb
push
mov
ret
ljmp
push
loope
es
jb
sub
sub
repnz
push
nop
inc
sbb
int3
sub
inc
and
sti
fistps
sub
pop
mov
in
insl
and
mov
and
ret
xor
or
negb
and
xchg
test
xchg
pushf
outsl
mov
loope
test
mov
ja,pt
cwtl
or
adcb
out
sub
lods
rcr
mov
inc
sbb
mov
or
rcr
mov
ret
decl
sbb
lods
sub
fmul
rorb
bound
sahf
nop
iret
mov
pop
je
and
aas
mov
push
dec
mov
arpl
sbb
idivb
dec
ds
mov
pop
mov
lret
fildll
lcall
lock
pop
movsb
lock
and
je
mov
xchg
jmp
push
in
inc
and
pop
lods
xor
mov
mov
xor
push
xorl
jae
mov
in
mov
mov
pusha
lods
xchg
ljmp
ss
scas
js
cs
mov
cmc
call
lods
js
mov
filds
add
ljmp
xlat
or
mov
cmp
testl
push
nop
adc
xchg
repnz
cs
or
ret
idiv
push
pop
setne
daa
cld
loope
test
xorl
jg
out
xchg
push
dec
cmp
loop
jle
sahf
sbb
lahf
lahf
mov
cwtl
push
add
lock
lea
loope
insl
mov
mov
mov
jo
rorl
mov
iret
aas
test
lock
add
mov
xor
or
mov
add
xor
scas
mov
mov
mov
es
adc
jle
lea
xchg
dec
mov
fcmovnbe
mov
pop
arpl
arpl
jl
psadbw
ret
mov
and
jg
icebp
lods
imul
les
mov
xor
pusha
cmp
sub
dec
mov
and
out
fisubs
divb
stos
lock
jbe
jo
push
xchg
xor
sub
ds
in
out
cltd
sarl
test
cmp
mov
aam
pop
push
add
mov
add
add
pop
loop
sahf
xor
xor
adcb
mov
mov
mov
cmpsb
scas
rcrl
hlt
fimuls
popf
ret
sub
mov
sub
scas
and
pop
push
jnp
cmc
jecxz
test
dec
add
jae
push
std
sahf
fstpt
push
or
clc
repnz
test
adc
xchg
rcr
test
icebp
or
or
sti
fs
pop
mov
lret
popa
mov
test
and
mov
dec
pusha
loope
mov
int3
sbb
sbb
clc
jo
sbb
js
loop
push
sub
sub
jae
inc
ret
test
inc
sub
inc
sub
insl
jne
shrb
ja
dec
sub
add
xchg
and
and
dec
sbb
inc
aaa
fists
cmp
aam
hlt
imul
add
sbb
mov
jne
pop
mov
jns
or
and
loop
push
outsl
xchg
das
sbb
sub
xor
cmp
loop
out
sbb
les
inc
lds
out
lods
xchg
outsl
sub
dec
cld
sub
int3
jle
cmp
mov
pop
xchg
dec
stc
jg
dec
outsb
mov
dec
mov
or
mull
mov
adc
sbb
lock
daa
outsl
out
dec
cmp
inc
cwtl
dec
jo
hlt
dec
movsl
xchg
enter
push
mov
dec
and
pop
jns
in
fisubl
repnz
cs
sbb
push
jp
add
or
push
lahf
cmp
xchg
lahf
fcomps
into
and
fbld
gs
and
test
test
in
dec
cmpsl
fmull
add
dec
push
add
inc
ja
xchg
or
push
mov
test
popa
inc
mov
out
jno
js
sub
addr16
add
pushfw
push
ds
sub
jl
pushf
push
mov
stos
fnsave
xlat
imul
comiss
xchg
and
pop
add
mov
ja
mov
sahf
sbb
adc
cmp
mov
lcall
inc
je
add
movsb
xor
hlt
repnz
mov
outsb
mov
xchg
dec
mov
dec
and
das
push
dec
mov
aaa
inc
aas
lods
dec
pop
pop
mov
mov
xorl
leave
out
sbb
test
and
lods
add
test
sub
pop
jge
fdiv
mov
loope
daa
out
mov
push
lcall
sti
push
sub
movsb
ja
lahf
shl
into
aas
jo
mov
dec
insl
mov
mov
mov
xor
sbb
mov
insl
cmp
out
or
xchg
cli
fnstenv
insb
push
sbb
pop
cmpsb
push
xchg
inc
push
call
out
out
daa
mov
popa
sbb
sbb
movsl
xor
das
pop
mov
pop
mov
add
repnz
mov
scas
adc
pop
pop
mov
dec
loope
addr16
sti
pusha
mov
adc
or
adc
pop
sti
loopne
arpl
out
nop
xchg
jo
aad
gs
adc
mov
xchg
incb
lds
test
jno
subb
test
clc
cmpsb
test
xor
mov
cmp
aam
clc
shrb
mov
mov
bound
dec
mov
in
sahf
xchg
vpcomd
jo
add
pop
jecxz
fnstcw
ficompl
mov
jae
mov
mov
mov
and
mov
inc
sub
adc
fisubs
mov
mov
adc
ja
int3
mov
pop
pop
pusha
sar
fstps
inc
rolb
stos
shr
pop
push
imul
mov
or
cs
cmp
add
fwait
shl
mov
iret
mov
add
stc
ds
imull
add
adc
aaa
shlb
cmp
push
rcrb
popf
pushw
mov
and
gs
mov
pushf
cmpsl
aas
xor
adc
shrb
or
loope
dec
mov
or
dec
and
cmp
mov
sbb
mov
in
cmp
xchg
dec
cmp
push
outsl
jmp
dec
xchg
pop
mov
jg
lret
inc
stc
incl
testl
fbld
fcoml
stos
repz
ljmp
inc
out
loopne
add
mov
repz
sbb
daa
ss
mov
xchg
das
add
adc
sbb
fcomp
pop
pusha
mov
hlt
out
sbb
mov
cwtl
jl
pcmpeqb
jmp
fwait
inc
xchg
fadd
sub
mov
mov
mov
pop
sbb
mov
jmp
fwait
sub
lcall
movsb
inc
xchg
mov
push
add
mov
ficompl
out
pop
xchg
stos
add
mov
out
sbb
fcmovnb
ret
fists
mov
in
xchg
sub
clc
pop
push
xchg
popf
jge
test
fwait
cmp
outsl
mov
mov
cmc
into
lods
sub
dec
fsubp
mov
cmp
push
cmpsl
cmp
jp,pt
lods
repnz
dec
push
xchg
pop
hlt
pop
fsubrs
xchg
mov
mov
sbb
sbb
mov
xadd
or
or
loop
stc
loopne
pusha
cli
in
add
das
insl
je
fucom
loop
out
les
test
inc
pop
push
mov
adc
lods
cltd
mov
fnstsw
dec
add
cli
pshufw
adc
push
ret
imul
aas
fidivrs
outsl
jno
push
sbb
aam
sub
xchg
in
mov
enter
cmp
lods
adc
adc
add
adc
stos
insl
shll
inc
clc
mov
mov
xor
pop
dec
in
aam
int3
inc
jne
call
sub
int
mov
xor
mov
dec
andl
mov
dec
dec
pop
sub
jo
sbb
or
lcall
mov
xchg
out
sbb
jae
push
inc
aaa
dec
decb
insb
cmpsb
fsubrp
pop
nop
adc
es
pusha
xchg
push
mov
dec
outsl
sub
or
adc
xor
inc
cmovp
xor
push
adc
jp
ss
mov
mov
dec
pusha
ljmp
movb
lret
add
sub
insl
and
and
push
push
mov
aad
mov
loopne
sarl
mov
push
addr16
sbbb
mov
sub
imul
mov
pushf
addl
cmp
aam
bound
mov
aas
mov
aaa
fsubs
push
push
jne
test
push
cmp
arpl
ss
xorb
andb
lock
inc
sar
pusha
aaa
lret
ret
sub
data16
insl
lods
mov
and
dec
ret
jmp
in
iret
das
sbb
mov
lods
roll
scas
dec
xchg
cmp
data16
cwtl
and
cwtl
stc
sahf
and
pop
adc
or
pop
inc
frstor
popa
rorl
inc
mov
call
mov
mov
push
inc
push
in
xchg
ja
dec
adcb
push
test
and
jae
aad
push
jnp
loopne
pop
dec
test
stos
cmpsb
pop
jae
and
jge
jp
dec
orb
pop
xor
xchg
lods
mov
push
loopne
stos
and
dec
fxch
xchg
jl
pop
push
add
cmp
mov
cli
add
repz
pop
iret
lahf
mov
sub
xchg
das
pusha
cmp
stos
mov
sbb
insl
add
xchg
sbb
mov
jbe
adc
sub
in
cmpsl
mov
or
std
repnz
cltd
mov
iret
shlb
clc
nop
es
call
aam
jecxz
add
jns
mov
mov
fistl
mov
push
dec
je
mov
fnsave
pop
or
or
cmpsl
jo
out
in
push
or
xchg
loopne
xchg
cmp
or
call
out
xor
dec
push
fimull
inc
mov
xchg
out
mov
mov
in
sbb
mov
cmp
shll
in
mov
dec
lods
out
xchg
ja
sub
jb
std
pop
loope
cmpsl
bound
add
jle
and
xchg
movsb
loope
fwait
daa
or
movsl
pop
mov
mov
jno
mov
jg
sti
test
rcl
jnp
das
jg
test
cmp
xlat
mov
test
jg
mov
inc
scas
sbb
jb
push
xor
mov
aam
add
fimull
aam
aam
mov
dec
mov
and
pop
mov
subb
jae
sub
cltd
ret
arpl
sub
xor
out
loop
pop
scas
add
push
inc
and
loop
and
shll
mov
or
mov
sbb
imul
xchg
push
jl
and
and
lret
mov
add
push
aam
pop
sub
loop
jl
stos
xor
arpl
xchg
inc
sub
popf
loopne
dec
cld
aad
xor
pushf
push
cmp
cmp
ljmp
push
jp
repz
xlat
fldenv
sub
pop
cltd
ficoml
jmp
sub
inc
push
mov
lret
push
pusha
sub
mov
mov
dec
push
icebp
stc
push
addr16
push
test
mov
cmp
add
icebp
scas
clc
lret
inc
add
fs
xor
dec
mov
sti
lods
inc
aas
mov
mov
xchg
dec
inc
lahf
ficompl
testl
icebp
xor
mov
mov
pop
mov
dec
or
cmp
add
fsubl
cltd
push
jl
push
xor
xchg
sub
push
ror
inc
jb
jg
cmpsl
lods
ror
mov
nop
movsl
xor
pop
int3
push
int3
loop
push
xchg
mov
add
sahf
movb
mov
xchg
popf
xchg
cmp
xor
jns
out
add
scas
cmc
imul
inc
call
cmpsl
pop
xlat
pop
inc
lret
cmp
fcomps
push
sub
pop
js
lcall
jbe
jl
scas
cltd
adc
cmp
mov
subb
loope
mov
movsl
sarl
jp
fs
dec
jno
dec
mov
in
push
aam
sahf
xlat
jo
and
popa
and
test
inc
xchg
sahf
ss
hlt
test
or
call
lcall
dec
aam
lcall
cltd
std
gs
test
mov
adc
pushf
sub
inc
dec
pop
ret
mov
sub
xchg
inc
mov
mov
cmp
jl
or
js
jle
stos
mov
mov
movups
inc
in
out
in
mov
inc
sbb
and
cmp
imul
cmpsl
sub
push
cmpsb
inc
pop
sahf
ljmp
cmp
cmp
sub
cmpsb
sub
dec
push
or
call
jl
sbb
popf
xchg
inc
leave
sbbb
push
xchg
lea
and
jmp
dec
rcl
in
lods
mov
in
push
xchg
mov
sub
pop
popw
xorb
mov
add
push
lods
pop
fs
sbb
mov
xor
lds
jnp
pop
xchg
push
fxch
and
dec
sbb
pop
leave
int3
cli
int
lret
mov
lret
jno
shr
in
out
insl
sbb
mov
fisttpll
insl
popf
cmp
mov
cwtl
out
test
pop
adc
test
mov
sbb
out
xchg
jle
cld
and
inc
out
add
push
pop
pop
test
mov
jl
add
jns
jge
scas
adc
fdivs
pop
movsb
aas
inc
loopne
sahf
push
mov
sahf
jnp
jne
fdivrp
xor
scas
in
aas
cld
lret
and
sbb
addb
imul
push
orb
inc
jb
mov
push
jge
pop
movsl
inc
nop
xchg
stos
xchg
imul
mov
movsb
mov
das
mov
xlat
mov
addl
pop
dec
or
push
ss
mov
xchg
xorl
jnp
cmpsb
nop
sbb
pop
cmp
inc
mov
nop
sbb
cmc
or
lods
pop
mov
jno
leave
or
mov
and
adc
jle
add
xchg
mov
ret
push
and
mov
rorl
jo
cmpb
imul
icebp
mov
mov
inc
daa
sbb
mov
mov
sbb
sarl
xchg
and
push
mov
lret
ret
mov
adc
orb
jle
clc
xor
push
jmp
add
inc
sub
add
dec
in
jl
divb
mov
mov
fildll
push
hlt
lahf
sahf
gs
lahf
test
mov
aas
cmp
outsb
into
lock
das
je
stos
dec
mov
or
sub
inc
or
into
xchg
sub
jmp
sti
test
mov
std
mov
lea
xchg
mov
clc
push
jecxz
pop
cwtl
scas
sub
fstpl
inc
aam
shl
xor
xchg
push
sub
fidivrl
repz
cmp
mov
stos
stc
inc
loopne
nop
je
inc
sbb
push
dec
lea
xor
sti
into
lock
inc
jl
jne
jmp
jne
pop
icebp
repnz
sub
es
cmp
dec
cmp
cmp
or
cmp
cmpsb
call
xchg
jno
xor
xchg
add
pushf
xchg
lret
push
lcall
insb
xor
pop
std
in
dec
mov
repz
pushl
fidivl
arpl
daa
cmp
lea
push
loop
repz
stc
je
add
and
test
lahf
push
shlb
adc
nop
imul
in
je
pop
loopne
cld
adc
hlt
and
in
lock
repz
pop
test
out
or
inc
addb
and
pop
cmc
xchg
dec
insb
push
sub
loope
lds
fisttpll
mov
out
xor
or
mov
enter
mov
mov
rorb
out
mov
mov
aaa
cli
orl
shr
mov
fs
xor
xor
or
repz
cmp
xchg
out
lcall
orl
xchg
inc
je
in
pusha
movsl
jns
or
lds
leave
adc
mov
scas
push
sti
fmuls
stos
jmp
ljmp
mov
fsubl
dec
out
add
xor
mov
mov
stos
sbb
hlt
popf
pop
addb
lods
roll
xchg
jp
sti
or
dec
or
mov
aas
mov
cmp
rol
pop
stos
call
add
clc
enter
xchg
aas
mov
xor
mov
pop
dec
mov
or
mov
mov
in
call
stc
jmp
xchg
jecxz
jl
jno
push
out
test
and
lds
push
outsl
jp
mov
and
inc
dec
xchg
adc
testl
int
js
clc
and
add
pop
out
subl
js
inc
stos
xchg
mov
add
dec
mov
pop
imul
push
jmp
adc
lods
clc
ss
add
push
jo
sub
jle
jbe
leave
int3
jbe
dec
mov
and
ja
inc
mov
jmp
push
push
mov
in
dec
data16
je
aad
fidivrs
mov
jmp
test
sub
out
dec
fsubrl
lock
and
add
std
adc
clc
jne
or
jo
xor
mov
adc
stos
test
mov
inc
mov
outsl
and
inc
jae
negb
scas
ficoms
adc
leave
jnp
dec
xchg
sub
add
cmpsl
sub
hlt
cmp
and
or
shrl
push
push
stos
sbb
ficoml
rcl
lea
mov
lcall
cmp
ljmp
inc
aas
imull
jmp
push
push
stos
add
int
into
xorb
fildl
fadds
and
mov
insb
incb
sbb
pop
arpl
add
clts
jne
popf
and
fcmovne
mov
jmp
add
test
shll
repz
mov
lea
inc
dec
aam
sub
mov
and
adc
xor
ret
push
mov
lcall
scas
rclb
popf
lods
fdivs
jle
mov
fldl
xor
lret
inc
rcr
push
pop
cli
add
fcompl
and
xchg
rol
lds
cmpsb
stc
mov
pop
orb
mov
mov
hlt
test
fwait
push
rcr
push
jge
addr16
jnp
insl
cmp
ja
out
mov
cmpsl
out
pop
sub
xchg
xor
in
movsb
enter
fisubrl
mov
xlat
push
lea
or
bswap
add
adc
wrmsr
inc
arpl
movsb
sub
dec
insl
and
adc
mov
insl
out
add
sti
pop
inc
je,pt
js
fisubs
pop
dec
xor
push
push
fisubrl
sub
in
jns
add
out
ds
out
addr16
cmp
jg
pop
inc
xchg
add
aad
push
jle
adc
xor
mov
jne
xlat
divb
in
push
or
int3
dec
fwait
popa
fiadds
in
test
gs
in
adc
sahf
fildl
inc
movsb
jne
jno
cmp
adc
roll
scas
jbe
aas
clc
sbb
mov
add
in
mov
fnsave
or
and
dec
cli
loop
sahf
out
jns
fimull
push
sub
push
push
sub
ljmp
jecxz
aad
jbe
fwait
mov
iret
sub
cltd
cltd
call
jecxz
push
movsb
fcomip
js
mov
jns
das
pop
or
xchg
push
jae
pushf
cmp
in
cmpsb
loop
mov
dec
nop
out
scas
adc
lret
add
fnsave
pop
stc
mov
loope
and
pop
fnsave
mov
push
push
dec
jp
cli
ds
jns
or
mov
jnp
cli
xor
lret
push
jecxz
cmpsb
and
or
cltd
push
jo
mov
je
vaddss
rorb
in
inc
mov
pop
es
mov
imul
lahf
and
xchg
shrb
jbe
jne
xor
push
dec
and
subl
cmp
mov
inc
fistl
insl
mov
jle
push
nop
mov
mov
cmp
cmp
cli
data16
mov
test
sbb
rcrl
ja
jbe
loopne
stos
into
mov
repz
loop
add
es
out
mov
movsb
sub
incb
call
and
mov
frstor
add
cwtl
outsb
jb
mov
mov
leave
fstpt
jl
inc
jb
les
pop
ds
jbe
out
fcompl
mov
xchg
aad
in
leave
mov
lods
into
mov
and
sub
shrl
loope
jle
out
stos
inc
sub
ljmp
add
cld
cmp
outsl
mov
inc
jo
add
arpl
fisubl
in
mov
hlt
gs
or
sbb
sbb
pop
fisttpl
add
in
cmp
lods
iret
movl
add
ljmp
stc
in
jbe
stc
push
lahf
or
dec
lret
test
dec
jno
push
pop
add
ret
sbb
into
je
in
imul
inc
pop
pop
out
shr
imul
push
shlb
mov
xchg
mov
jno
pop
or
in
outsb
fwait
push
and
gs
xchg
pop
mov
test
rcll
fdivr
dec
mov
out
inc
dec
sub
cmpsb
and
cmpsb
mov
repz
mov
dec
xchg
stc
push
or
lds
or
into
lods
ret
jl
push
mov
add
sbb
sbbl
hlt
das
clc
xchg
scas
cli
inc
sub
rolb
call
mov
enter
xchg
and
repnz
aam
stos
mov
mov
mov
out
cmp
das
xchg
outsb
sbb
push
scas
dec
dec
or
aam
in
jae
sarl
xchg
cmp
xor
inc
xchg
mov
mov
movsb
lahf
push
jb
adc
std
pop
sub
xchg
scas
addl
adc
hlt
fwait
xor
dec
jg
out
mov
adc
jne
pop
inc
xchg
pop
jnp
push
mov
jp
xchg
xchg
push
add
jns
out
fstpt
movl
jmp
or
repz
in
in
inc
je
icebp
cmpsl
adc
shl
push
out
movsl
cmpsl
pusha
loop
imulb
and
adc
pop
cmp
xchg
pop
stc
xor
pop
call
icebp
scas
push
fistpl
subb
dec
xchg
cld
add
jecxz
shll
int3
pushf
xchg
pop
addr16
cs
jmp
and
icebp
jno
vmovntps
loopne
mov
sub
xchg
push
sbb
out
cli
mov
mov
jo
ljmp
xchg
mov
dec
cmc
pop
add
ds
push
mov
mov
push
cwtl
lret
dec
test
notb
cltd
mov
call
pop
out
mov
cmpl
pushf
xor
clc
std
fnsave
nop
inc
insb
and
sub
popf
and
mov
or
add
mov
sub
or
out
pushf
or
push
in
or
mov
push
push
cmpsl
arpl
call
jne
xchg
sbb
iret
xchg
test
je
in
adc
ja
data16
sbb
outsb
sbbl
jle
repz
stc
xor
push
sarl
and
fildll
or
std
jmp
cmp
mov
movsb
cmp
test
push
leave
cltd
sub
adc
in
sbb
icebp
sahf
push
fdivs
jge
sub
paddw
jmp
push
mov
mov
ret
jecxz
sbb
dec
std
jae
push
daa
sbb
pop
fiaddl
sbbb
xor
ss
js
fcmovnu
filds
xchg
pop
pop
mov
lea
xor
addr16
loop
das
jnp
int
push
and
pusha
xor
pop
and
pop
ror
sub
cmp
sahf
jecxz
lods
arpl
out
pop
loopne
cmp
inc
lret
loope
test
push
jae
ljmp
pop
dec
jno
sbb
mov
jecxz,pn
jne
sbb
push
xchg
cld
lcall
aam
loop
cmp
outsl
packuswb
out
shlb
push
rol
adc
imul
stos
mov
jg
popf
cltd
popa
mov
test
dec
mov
xor
jne
jmp
xchg
xor
fidivrs
jmp
sahf
ret
inc
push
bound
lods
lcall
add
fsub
jmp
mov
decb
jl
test
and
jecxz
inc
lods
or
pop
mov
jnp
mov
jbe
mov
mov
iret
addr16
loop
loop
jb
sarb
dec
mov
jge
adc
mov
es
add
mov
lahf
pop
popa
and
xchg
mov
xchg
pop
mov
xchg
dec
inc
push
int
cltd
stc
in
xor
inc
ret
push
push
xchg
into
popl
add
cs
or
sbb
addr16
xor
push
in
lds
inc
xor
mov
aad
mov
popa
mov
sbb
fucom
clc
mov
stc
daa
inc
std
jo
push
pop
dec
ret
push
dec
popa
cmpsl
mov
inc
andb
clc
mov
and
mov
or
adc
inc
jp
out
inc
out
add
int
mov
lods
push
repz
push
test
test
mov
mov
lahf
push
rcl
push
paddq
hlt
jl
adc
sub
jns
mov
mov
cmp
sub
fsubrl
enter
or
xorb
add
jle
sub
mov
jle
dec
imul
imul
adc
mov
dec
mov
and
addr16
in
nop
mov
fldcw
idivb
mov
xor
jl
push
cmpsl
pop
psubsb
sbbb
inc
xor
lock
inc
fstpt
pop
and
push
mov
add
xchg
repz
rcll
jnp
int3
mov
and
out
jle
into
adc
xor
or
and
orb
sub
xchg
jb
sbb
addr16
jle
push
dec
jecxz
nop
jbe
push
shll
mov
es
sbb
addb
jmp
repnz
sti
aam
sbb
es
mov
jne
add
push
cmpsl
outsb
pop
cmp
mov
stc
movsl
in
lods
pop
or
imul
cmpsb
aas
cmpsl
sbb
xor
test
bound
mov
leave
mov
and
add
jb
aas
mov
or
test
clc
jnp
xor
fmull
scas
sarl
cmp
adc
adc
xor
mov
clc
xchg
push
das
popa
inc
ss
dec
movb
in
lods
sub
clc
dec
push
xchg
mov
fidivs
rcrb
sbb
jp
push
push
movsl
fisttpll
out
add
and
sti
sbb
dec
jb
lods
fnsave
xor
aas
add
ret
or
test
push
sbb
imul
jmp
in
insb
inc
sub
aam
mov
mov
out
inc
push
push
out
test
or
or
subb
jo
outsb
mov
inc
roll
cmp
sbb
pop
mov
dec
adc
or
sbb
jmp
jl
ror
cwtl
sub
enter
mov
and
mov
repnz
adcl
cmp
inc
dec
sahf
add
imul
mov
out
popa
divl
inc
pop
push
pop
pop
adc
ret
imul
rorb
sbb
daa
cmpsl
enter
hlt
sbb
pop
or
jle
movsl
repz
dec
mov
cli
fs
pushf
lods
mov
test
je
jmp
lahf
xchg
pop
pop
xor
sub
stos
mov
subl
or
jnp
dec
mov
push
inc
lret
inc
fdiv
cmpsl
xchg
pop
aad
cmp
and
dec
xchg
dec
pop
daa
xlat
popa
dec
int
xchg
insb
push
xchg
jecxz
rorb
push
push
movsl
adc
in
cmp
push
inc
jg
inc
add
push
xorl
jns
mov
xchg
xchg
sub
adc
aas
push
stos
pop
mov
push
dec
adcb
out
leave
push
int3
lar
fildl
add
dec
testb
xchg
inc
xchg
rol
test
pop
int
pop
cmpb
test
or
cmp
xchg
shrb
and
jge
fldt
ds
enter
dec
iret
cmp
call
lds
jo
outsl
xchg
repnz
rorl
pop
or
and
imul
xor
fcmovu
in
es
cli
push
pop
in
push
cwtl
jo
mov
mov
enter
mov
jo
or
pop
in
icebp
cmp
fstl
xchg
xchg
bound
stos
mov
inc
lret
jbe
js
sub
mov
dec
inc
fmuls
scas
jnp
mov
in
inc
xor
push
lds
push
pop
dec
aas
cmp
aaa
jl
mov
cld
pop
mov
sbb
loope
mov
push
mov
add
das
sub
jmp
and
push
and
and
push
jae
mov
push
dec
xchg
sub
jge
mov
add
pushf
mov
das
and
cmpsb
mov
mov
std
mov
lahf
iret
lret
add
mov
dec
scas
movsb
insl
pop
mov
xor
sub
nop
popw
or
sbb
dec
push
mov
sbb
imul
mov
lods
lret
lret
imul
add
in
jne
dec
jmp
push
in
sarb
leave
and
inc
addr16
fnsave
inc
jb
repnz
mov
mov
push
sub
and
imul
pop
and
into
sub
and
jmp
sbb
pop
aaa
outsb
inc
jo
lahf
dec
out
jg
push
inc
imul
mov
outsl
imul
cwtl
dec
sub
mov
pop
cmpsb
and
ljmp
xchg
add
mov
push
pop
stos
mov
mov
or
repnz
outsl
fcoms
cmp
sub
js
incb
pop
jmp
push
push
mov
lret
mov
out
jmp
push
push
inc
xor
jecxz
xor
push
loopne
sub
cli
out
sti
lret
sub
outsb
fsubs
mov
ja
sbb
aas
adc
pop
repnz
cmp
out
test
fdivrl
das
jl
and
popf
arpl
push
orb
shl
out
pop
test
aad
jns
xchg
hlt
aam
movsb
call
push
push
cmp
pop
push
and
dec
add
repz
xor
xchg
inc
lods
in
adcl
cmp
mov
andl
test
adc
sbb
fistpll
aad
cmpsl
mov
cmpsl
adc
int3
mov
shrl
mov
shlb
xchg
imul
mov
and
subl
sbb
cs
push
loope
sbb
lods
mov
xchg
cmp
push
adc
push
in
adc
lcall
xchg
je
sub
clc
lea
jg,pn
ss
push
into
pushf
arpl
hlt
jne
into
scas
add
arpl
cli
iret
pop
or
sbb
hlt
repz
mov
jbe
arpl
lss
repz
jmp
or
scas
insb
mov
adc
inc
jmp
cld
and
cs
movb
sbb
dec
mov
aad
or
mov
pop
pop
sbb
mov
shrb
pop
dec
mov
push
nop
mov
inc
cli
inc
aad
cs
sti
imul
sub
pushf
bound
sub
pop
mov
or
adc
xchg
ds
fiadds
test
popa
popf
mov
xchg
lcall
addb
jae
gs
std
sbb
add
call
pop
mov
xchg
sub
mov
dec
jp
mov
pushf
sti
jecxz
adc
mov
or
hlt
in
adc
ja
inc
sbb
xor
or
xchg
pusha
mov
lcall
ucomiss
sbb
pop
pop
inc
out
daa
fists
pusha
aam
fstl
cmp
in
fwait
push
pusha
imul
and
fstps
lret
loop
push
out
xchg
outsl
popf
clc
pop
pop
imul
adcb
xchg
in
ljmp
rorb
xor
jns
ss
test
or
pop
iret
stc
cmp
xor
inc
inc
mov
xor
outsl
cs
mov
xchg
pusha
or
inc
mov
lea
push
dec
and
and
jge
subb
and
ret
mov
lahf
mov
lods
lcall
jmp
adc
jae
outsb
and
out
sbb
xchg
inc
jno
loope
in
xor
addr16
ficompl
pop
sbb
sbb
xchg
xchg
pushf
scas
and
incb
incb
and
clc
mov
and
and
psrad
mov
lods
int
iret
mov
insl
push
rcll
mov
test
push
sub
xchg
add
inc
outsb
jo
ss
inc
and
adc
xor
or
sub
jg
xchg
cltd
clc
stos
std
repnz
scas
js
cmp
rorb
xor
lock
adc
mov
cli
xchg
jp
sub
sbb
test
das
mov
inc
or
add
pop
rcrb
push
sbb
loope
mov
jnp
adc
sub
cmpsb
out
es
adc
ja
mov
decb
aam
loopne
xor
add
pop
je
pop
int3
mov
out
ret
push
out
fcmovu
add
mov
fcom
sti
push
mov
or
shl
xchg
clc
xor
mov
icebp
add
jecxz
mov
rcrb
and
inc
int
dec
or
sub
or
popa
enter
mov
dec
and
pushf
nop
fistps
lds
jg
and
mov
inc
shrb
sub
or
mov
xchg
ret
scas
dec
dec
rcl
stc
mulb
jne
ja
mov
mov
sbb
movb
test
dec
pop
xor
shlb
ret
sbb
aam
pop
pusha
push
in
mov
cs
in
mov
jmp
xor
jo
or
ja
mov
inc
cmp
mov
ljmp
sub
outsb
push
popf
les
jo
inc
fldenv
imul
inc
or
mov
popf
push
in
call
lret
ja
mov
fstpt
xchg
dec
dec
call
mov
test
mov
xor
subl
out
pop
jmp
push
ds
or
lcall
cld
xlat
add
push
mov
push
lods
mov
addl
sub
ret
mov
push
bound
aad
insl
clc
dec
sub
inc
mov
lcall
cs
xchg
enter
ja
daa
jp
cmp
mov
cltd
popa
int3
xchg
in
sbb
inc
add
mov
addr16
mov
cmp
mov
ss
cltd
xor
adc
stc
adc
mov
mov
dec
inc
mov
adc
int3
and
pop
outsl
sbb
xor
mov
xor
rcrl
push
mov
mov
dec
push
sbb
pop
loop
pop
xor
out
lods
call
cli
sub
mov
leave
fs
or
testb
imul
jmp
mov
jne
adc
and
movsl
pop
add
aas
nop
jno
cmp
xor
int3
pop
push
scas
and
loopne
and
push
mov
lds
loopne
nop
xchg
xchg
mov
in
adc
pop
fisubs
mov
lahf
mov
pop
push
pop
fsubl
jb
loopne
and
adc
inc
jnp
ljmp
sub
xchg
and
adc
aam
inc
add
mov
repz
inc
jmp
repz
inc
mov
iret
fwait
push
xchg
dec
mov
cmp
cltd
pop
or
xlat
cmpsb
inc
xor
nop
lahf
cmp
dec
sub
or
lods
stc
or
xlat
jne
mov
jl
test
loopne
cmpsl
int3
xlat
cltd
xchg
jno
adc
jg
test
clc
jnp
fadd
mov
cltd
mov
lea
daa
jl
call
fdivr
sahf
sub
rcll
es
mov
lds
outsb
out
sub
sti
negl
repz
xor
aad
out
aad
add
shl
sub
pop
mov
or
sti
xor
dec
ss
sub
ret
in
and
fmuls
mov
lahf
mov
dec
cmp
xor
shrl
and
lods
fs
cmc
fnsave
std
in
and
movsb
xlat
imul
into
das
pop
sarl
ljmp
push
shl
dec
insl
sub
and
adc
imul
in
or
jne
cmp
rorl
dec
adc
fdivrp
int
or
add
adc
pop
popf
pop
shlb
lock
jg
pop
or
mov
icebp
jne
outsb
adc
lret
scas
pop
icebp
shll
mov
jne
mov
scas
stos
add
addr16
xlat
mov
sbb
filds
push
sti
mov
cltd
push
mov
out
outsl
add
sub
sub
stc
bswap
jb
repnz
gs
sub
mov
out
loopne
inc
sbb
push
jne
cmp
push
vmwrite
in
jnp
cltd
ret
mov
cmp
sbb
inc
xor
aam
mov
mov
loop
mov
jl
fst
cld
shlb
cmp
sbb
testb
sti
int
lock
test
jecxz
stc
lret
sbb
in
xchg
rorl
add
int3
add
cmp
outsb
push
jl
cmc
sub
ja
es
fs
jno
daa
mov
cltd
mov
insl
popf
cmpsl
jae
movsl
movsl
shrb
jbe
dec
push
pushf
mov
push
adc
sub
sbb
inc
pop
ret
pusha
jge
inc
rclb
mov
cmp
scas
iret
stos
aad
jp
add
shrb
mov
jo
push
sbb
cmc
clc
jae
add
push
dec
sbb
vmwrite
test
or
shll
test
adc
sub
mov
das
sbb
adc
stos
insb
push
pop
fs
pop
mov
mov
push
out
bound
pusha
mov
pop
hlt
cmp
les
jo
xchg
pop
cmp
imul
fidivrl
xchg
jmp
xchg
outsb
xor
shll
aaa
xchg
mov
or
adc
in
lods
cli
jge
mov
adc
xor
lock
fisttpl
jg
jg
ficoms
es
xchg
mov
adc
jnp
or
loopne
sbb
mov
repz
fwait
int
jge
test
test
pop
je
or
in
mov
frstor
lret
outsl
gs
dec
mov
rorl
fiadds
sbb
lret
mov
xor
imul
push
xor
stos
aad
dec
add
mov
out
push
cmp
lods
lods
push
dec
push
push
mov
popa
mov
imulb
push
in
mov
arpl
mov
fwait
lea
addr16
cmp
xchg
and
pop
fldcw
add
lods
pop
sbb
sub
rcr
jb
scas
xorl
sbb
in
sub
cmpsl
xor
jmp
mov
mov
nop
mov
call
mov
or
out
mul
xor
jl
sti
inc
shrl
cmp
subb
mov
out
pop
xorb
pop
fstp
repz
and
outsb
andl
clc
scas
push
fdivrp
jne
pop
ss
idivl
jno
gs
mov
mov
xlat
inc
in
xchg
imul
push
aad
out
pop
xchg
test
xor
das
dec
fs
lea
add
call
nop
cli
jle
mul
xor
hlt
and
pop
imul
jbe
jge
stos
jbe
cld
sahf
xchg
cmp
sbb
sbbb
sub
std
pop
push
orl
ds
add
iret
les
shrl
dec
inc
cmc
call
adc
inc
mov
fdivrs
xchg
mov
mov
outsl
adc
cmpsb
or
dec
lea
movsb
xor
ja
or
cmpsb
xchg
dec
imul
lods
pop
xor
and
mov
sub
mov
or
leave
mov
pop
mov
sti
clc
es
or
iret
shll
das
push
jle
inc
je
xchg
dec
popf
dec
inc
cltd
cmp
clc
popa
shrb
in
stos
pop
mov
push
cwtl
jg
cli
adc
inc
sbb
test
push
les
pushf
add
fsts
jno
pop
mov
sub
lahf
out
into
ficoms
adc
and
jge
inc
pop
into
fisubrs
xor
inc
mov
cld
adcb
std
mov
jg
jg
shlb
dec
jae
rcrl
daa
int
and
loope
es
push
pop
lcall
ret
adc
mov
mov
out
jo
mov
cwtl
mov
mov
lds
mov
out
xor
bound
sti
shlb
cmp
xchg
inc
xchg
add
cltd
outsl
shll
mov
xchg
jne
lods
ds
stos
dec
iret
cmp
hlt
xor
jmp
ss
inc
sub
mov
mov
js
cltd
mov
jb
push
push
icebp
shrl
pushf
sub
sub
inc
fmul
out
dec
aam
pop
por
les
ror
icebp
aad
imul
lret
leave
or
fsts
cmovne
iret
inc
shll
pop
and
dec
shll
push
dec
cmp
jnp
sbb
arpl
cmp
out
lcallw
add
mov
popf
dec
imul
int3
orb
push
xchg
mull
ror
cwtl
pop
jl
push
call
aas
sbb
xor
push
mov
cli
bound
test
cli
aam
lahf
sarl
in
enter
lods
stos
mov
rcrb
push
inc
das
into
inc
clc
add
cltd
jge
test
mull
jmp
push
pop
popa
fimuls
mov
mov
bound
push
add
mov
les
lret
mov
jg
into
cs
jbe
xor
rcl
loope
lock
or
jecxz
pushf
fdivs
std
inc
jnp
rorl
sbb
adc
inc
faddl
push
push
push
or
push
or
mov
out
push
xor
jns
popa
insb
xchg
cli
mov
rorl
and
jmp
in
bound
rep
loop
xchg
dec
push
jge
jns
scas
lret
xchg
rol
adc
mov
shll
push
test
loope
add
cmp
ja
std
push
add
cld
push
mov
out
fwait
cs
xchg
repz
mov
leave
dec
xlat
cmc
add
aas
adc
mov
movb
cmp
int
lcall
repz
unpckhps
leave
rcrb
outsl
xchg
dec
inc
sub
push
jmp
pop
jbe
cmp
jp
xor
xor
mov
nop
pop
cwtl
push
cmp
mov
stos
imul
push
xor
pop
push
ret
adc
jmp
mov
inc
jg
repz
pop
je
out
es
sub
cmp
aaa
mov
xchg
mov
lret
mov
aas
cmpsb
xchg
adc
and
push
mov
out
in
mov
jmp
sub
mov
xor
rorl
cmc
ljmp
add
dec
daa
scas
mov
and
jae
xor
pushf
mov
cmc
lea
fsubrl
insb
les
jge
decl
xchg
cmp
lods
push
cmpsb
daa
repz
es
add
xor
mov
push
cli
iret
mov
mov
pop
repnz
imul
and
mov
fsubp
les
mov
mov
lods
pop
push
mov
cmp
sub
enter
xor
adc
add
push
bound
mov
out
ljmp
add
xorl
and
fwait
xchg
mov
add
aaa
add
push
xor
push
push
movsb
hlt
aam
mov
mov
xchg
mov
decl
cmp
push
pop
ret
test
daa
hlt
mov
mov
addr16
lods
test
jne
es
das
ficomps
inc
sub
push
cmp
add
hlt
cmc
adcb
add
inc
pushf
inc
inc
pop
mov
cmp
sub
mov
adc
push
pop
out
inc
and
stc
xchg
iret
lock
add
add
or
rclb
cmp
imul
or
pop
xor
fdivrs
xor
movsl
call
push
mov
ja
mov
sub
mov
ret
out
add
loope
clc
inc
cmp
aas
inc
enter
push
add
xor
ret
mov
ljmp
das
and
mov
cmp
cmp
or
xor
sbb
cltd
mov
dec
in
xchg
and
xor
outsb
out
shrl
pop
dec
xor
mov
shll
fdivl
sbb
fs
cmp
and
pop
inc
sbb
push
jmp
pop
aaa
aaa
int
mulb
lods
shl
mov
orl
push
or
cmp
nop
cld
cmp
mov
inc
xor
cmp
arpl
shrl
dec
repnz
popa
sarl
roll
add
mov
fsubs
loopne
pop
xchg
dec
pop
mov
into
sbb
push
sti
xchg
mov
and
xor
cwtl
or
cltd
sbb
mov
addr16
push
mov
push
jg
lea
iret
cli
pop
mov
notb
pusha
stos
push
inc
mov
xchg
add
out
pop
and
daa
and
outsb
insl
jno
push
int
pop
lahf
outsl
popa
hlt
rcpps
cld
pop
xchg
incl
test
rcr
adc
fsts
rcr
shlb
add
out
mov
jae
add
rolb
lret
push
xchg
jmp
loop
enter
xorb
test
fidivs
sub
out
sub
push
sbbb
loop
les
sub
push
sbb
sahf
mov
xchg
cmp
aaa
add
fsubrs
adc
jmp
xchg
sub
inc
xchg
or
dec
cli
lods
es
mov
icebp
into
mov
subb
mov
or
push
hlt
gs
pop
mov
stos
lret
outsb
js
mov
addl
inc
ss
arpl
jae
test
dec
or
xor
bound
inc
adc
mov
sbb
std
aaa
shll
mov
loopne
in
cmp
and
rcll
aaa
jmp
js
rcrl
xor
cmp
push
sub
addl
ljmp
adc
es
dec
cmpsb
cmp
outsl
mov
sbb
fisttpll
clc
imul
pop
inc
in
adcl
inc
lahf
cmc
mov
cmpl
adc
push
popf
rolb
std
add
int
push
xchg
ret
je
mov
arpl
bnd
jmp
cmp
ljmp
shr
adcl
sbb
xor
pop
int
lahf
fxch
mov
int
adc
xor
add
jmp
outsl
sbb
mov
mov
inc
sub
sar
cwtl
dec
roll
mov
cmp
les
push
imul
subl
stos
xchg
inc
lret
mov
shll
or
pop
clc
fnsetpm(287
xor
jmp
iret
cltd
and
int3
fldl
movsl
or
popa
mov
dec
in
pop
inc
out
scas
or
xchg
stos
test
js
pop
pusha
cmp
inc
xchg
mov
push
aas
or
xlat
sub
dec
xor
xor
pop
bound
jl
xchg
bound
imul
scas
jno
inc
add
imul
or
mov
out
and
xchg
and
mov
aad
cmp
dec
shrb
adc
push
in
int
lock
mov
fs
jle
stc
jno
sub
or
cmpsl
sbb
xchg
sub
and
int3
push
iret
fdivp
push
xor
in
insl
jbe
mov
cmp
and
or
dec
lahf
call
fcomps
jmp
cli
lahf
sbb
scas
in
push
xchg
lcall
sbb
xor
cmpsb
mov
test
mov
cmp
ret
stc
mull
jp
cmpsb
xchg
or
mov
sbb
sub
aam
sarb
cmpsb
dec
inc
sbb
push
orb
into
inc
and
les
ss
mov
mov
push
push
dec
xchg
flds
scas
cmpsl
jle
ja
sbb
scas
icebp
xchg
fs
sbb
add
inc
inc
mov
clc
sbbb
sub
sbb
das
nop
inc
mov
addr16
loop
mov
ja
or
add
pop
add
adc
push
rcll
stos
rcll
jne
push
lret
fisubrs
sub
mov
xchg
or
adc
dec
cli
pop
mov
and
mov
mov
adc
out
push
sbb
stc
xor
imul
dec
push
jle
jo
adc
dec
push
sbb
out
lret
aas
and
add
sub
sbb
xor
lods
mov
daa
mov
pop
and
dec
dec
push
jns
jne
movsl
sub
std
scas
lret
std
out
mov
cltd
js
pop
push
mov
icebp
clc
and
xchg
lret
cs
mov
jle
fldcw
mov
stos
inc
repz
call
xchg
xor
ja
int3
imul
pop
icebp
lods
insl
popf
daa
into
pusha
jle
xor
pop
mov
js
mov
sbb
loopne
xor
and
pop
ja
mov
test
out
sbb
mov
test
adc
xor
inc
jecxz
imul
jno
push
lock
inc
mov
fbstp
enter
jl
shll
pop
imul
mov
mov
in
int3
lahf
out
lods
or
cmpsl
jnp
or
dec
rorl
xchg
nop
fs
cmpsl
pop
xor
sahf
shlb
jg
add
xor
xor
in
stos
xchg
xchg
mul
lds
mov
cli
and
lds
or
int
jne
or
mov
scas
icebp
xor
outsb
loopne
repz
sahf
mov
cli
pop
pop
or
xor
out
adc
test
test
jp
or
gs
mov
jbe
imul
out
sub
fwait
xchg
pusha
push
or
sti
pop
push
mov
test
out
or
jnp
icebp
push
jns
test
cmp
pop
movsl
jnp
ja
lret
pop
cld
andb
movsl
in
jbe
mov
dec
jb
xchg
jle
fwait
aam
push
inc
add
add
nop
pop
cld
xchg
arpl
inc
jmp
mov
imul
lods
jle
lcall
xor
cmp
es
out
lds
jmp
in
and
ja
bound
and
movl
mov
imul
leave
lcall
insl
loope
cmpl
fdivrs
add
mov
fidivs
and
jo
sub
mov
std
sahf
push
outsb
pusha
xchg
dec
adc
ret
jl
cmp
popf
testl
negb
cltd
xchg
dec
aam
inc
into
mov
mov
leave
add
mov
sbb
dec
mov
imul
mov
outsb
movsb
sbb
and
ret
or
stos
sbb
xchg
pop
jno
push
arpl
dec
call
push
adc
inc
cmp
dec
pushw
lods
mov
add
xchg
pavgw
mov
and
ret
inc
fcoms
mov
sti
movsl
sub
cmp
push
nop
push
gs
cwtl
mov
cmp
inc
sbb
dec
lahf
test
jbe
stos
mov
ljmp
iret
loope
add
test
jne
xchg
lahf
mull
add
mov
push
pop
push
pop
loop
adc
xor
inc
ficomps
cld
mov
xlat
cs
out
inc
out
push
test
out
adc
dec
lds
xlat
repz
stos
pop
mov
cs
add
sbb
mov
movsb
pop
sub
cs
add
ret
sub
popl
aad
mov
sub
add
adc
mov
fcompl
sbb
and
mov
xor
out
inc
inc
sbb
scas
jp
mov
mov
mov
fildl
repnz
leave
outsl
in
daa
aad
pop
shrl
out
popa
and
ljmp
xchg
shlb
out
xor
out
inc
push
jl
ss
lret
into
leave
lea
in
pop
pop
or
jns
bound
pop
andl
nop
add
leave
mov
inc
sbb
ret
mov
or
and
int
jl
in
test
xor
jb
in
pop
push
and
hlt
mov
bound
js
insb
mov
jne
jg
lods
jae
mov
inc
jle
cmp
in
and
cmp
data16
loopne
sti
dec
in
push
ja
mov
push
push
push
cmc
push
mov
xchg
lods
out
push
xchg
daa
out
push
shlb
add
jae
outsb
dec
dec
cmpsl
and
insl
in
push
hlt
mov
xchg
push
mov
pushf
sub
pop
sbb
dec
data16
cmp
xlat
or
in
and
sub
xor
lcall
mov
push
fs
dec
and
pop
jo
adc
xchg
gs
ljmp
or
lock
cmp
divb
es
jle
ret
cli
pop
inc
push
pusha
repnz
adc
fwait
lock
insb
push
push
insl
fidivrs
jno
mov
inc
lods
mov
sahf
jmp
pop
iret
sub
push
jnp
jno
pusha
mov
and
repz
jmp
dec
cmp
cmc
sahf
sbb
xor
mov
pop
out
cmp
aam
push
fidivrs
xorl
lock
test
dec
fucomp
xchg
arpl
push
sub
popl
cmp
popf
sarb
or
data16
jno
cwtl
push
mov
in
xchg
hlt
mov
and
dec
push
fistl
pop
push
sbb
mov
add
in
mov
sbb
adc
dec
fidivl
andb
inc
stos
inc
pusha
outsb
cmp
inc
xchg
dec
stos
mov
push
mov
lods
adc
mov
sub
sub
inc
nop
aad
movsb
aad
push
pop
jg
bnd
pop
push
xchg
ds
aaa
xor
xchg
jp
sub
push
jns
in
mov
call
sbb
test
lret
ret
stc
sbb
cmp
adc
adc
push
xor
jle
inc
push
mov
sub
jbe
ficomps
inc
dec
push
inc
out
inc
mov
xchg
adc
pop
mov
shl
inc
jo
data16
push
sub
aam
xor
add
negb
sbb
andb
or
adc
pop
leave
mov
or
mov
pop
fucom
mov
pop
adc
clc
adc
xor
pop
and
fnsave
test
es
imul
and
sbb
sub
insb
dec
fldt
push
adcl
je
add
movsl
sub
outsl
xchg
insl
out
movsb
decl
mov
mov
and
daa
fadds
imul
sub
fwait
xchg
or
push
sbb
lcall
imul
mov
and
adcb
cmpb
fsubl
mov
mov
fsubs
addl
popf
sub
mov
cmp
adc
insb
dec
xor
fcomps
testb
jo
popf
mov
outsb
add
outsl
fwait
cs
adc
adc
fsubp
mov
ret
popf
cmp
push
jmp
repz
rcl
cld
push
or
sahf
mov
sub
push
aas
add
sub
xor
outsb
and
jo
out
cmp
repnz
mov
push
leave
rorl
cmp
test
mov
inc
cmpsl
mov
add
and
aad
dec
or
lods
xor
adc
ja
js,pt
jb
jmp
and
xchg
dec
das
sbb
test
xor
ret
xchg
xchg
inc
dec
and
scas
mov
mov
je
adc
js
push
push
ss
mov
pop
subl
sub
movsl
mov
dec
jno
xchg
std
adc
adc
jnp
out
rcr
in
scas
cmp
cmp
cmp
mov
jno
add
and
push
aam
adc
mov
xor
popf
cmp
insl
mov
mov
xchg
pushf
dec
fcoms
out
xor
fldenv
inc
dec
add
pusha
dec
test
les
test
repnz
imul
imul
mov
arpl
sbb
notb
mov
leave
mov
inc
pop
pop
or
and
in
xchg
das
adcl
addb
adc
leave
in
inc
shll
sbb
jns
clc
jbe
push
lcall
push
in
cmp
mov
inc
push
sub
lcall
adc
jecxz
in
jecxz
mov
xchg
lea
cmp
out
jge
in
and
xchg
shl
cmp
nop
mov
fs
mov
mov
lcall
test
sub
cld
cmp
push
ret
mov
pop
popl
aad
sub
out
bound
push
mov
sbb
cmp
add
add
adc
les
or
cmc
enter
pop
jl
pusha
push
mov
xor
and
jle
adc
icebp
mov
loop
stos
popa
lret
loop
inc
fwait
iret
sub
pop
sti
insb
xchg
cmp
add
adc
inc
push
jge
pop
in
push
cmpsl
fcomip
testl
xchg
mov
dec
call
pop
cld
outsb
push
jle
fidivrs
shlb
inc
negb
subl
fcoml
pop
lods
sbb
and
cmp
sub
es
jp
pop
inc
xchg
push
sbb
jo
mov
jo
fpatan
jg
inc
testb
cmc
cs
push
int3
and
cmpl
dec
xor
xor
xchg
xchg
leave
ljmp
mov
jb
pop
lcall
ret
test
xor
mov
jns
xor
fs
fmuls
lds
dec
xchg
mov
jno
ja
and
push
inc
adc
scas
inc
pop
mov
and
and
movsl
push
mov
lcall
loop
add
pop
push
add
mov
and
push
xchg
int3
not
les
mov
mov
or
fwait
push
xchg
xchg
xchg
lock
push
xorl
daa
cmpsb
mov
int
test
lea
lcall
cwtl
xor
add
push
sbb
addr16
shr
shrb
xor
ljmp
inc
ret
or
mov
or
xchg
ds
cmp
icebp
loope
pop
shr
mov
lods
mov
insb
movsl
sub
pop
xchg
aas
insb
aaa
jne
or
xchg
in
jo
cmp
or
mov
xor
pop
ds
sbb
jb
cwtl
mov
cmp
cmp
jno
cmp
xchg
cmp
xor
cmp
mov
mov
outsl
xor
inc
push
js
scas
xorl
xor
and
clc
push
leave
rcr
push
sti
pop
ljmp
jb
adc
dec
cmpsb
jns
push
dec
adc
int
dec
push
xlat
jo
popf
xchg
gs
or
es
mov
lahf
dec
mul
loope
xchg
sub
rcrb
icebp
mov
push
in
add
andb
or
out
negb
pop
shl
pop
mov
xor
cmp
fistpll
sbb
mov
adc
sbb
pusha
in
pop
push
adc
out
jne
es
or
cs
push
xor
mov
fbstp
push
adc
loopne
popa
outsl
xchg
push
nop
add
sahf
cli
jmp
mov
in
stos
pusha
jp
adc
nop
data16
lods
daa
cmp
cmp
push
das
sub
lock
sub
cltd
mov
pop
movsl
popa
jbe
cs
fisubrs
inc
cld
mov
pop
nop
or
fprem
nop
lcall
xchg
rorb
mov
mov
test
lds
mov
and
cltd
inc
push
xchg
aaa
mov
xchg
es
out
lods
ja
jae
push
inc
outsb
scas
xchg
pusha
cmp
sbb
out
fstps
add
cmp
push
sbb
push
adc
ljmp
push
test
dec
lds
ja
ja
in
sbb
loopne
xor
stc
push
call
scas
stc
or
int
jae
es
sub
xchg
xchg
out
ficomps
and
das
sbb
inc
nop
iret
shll
and
test
scas
cmp
in
sub
xchg
mov
ja
xor
sub
jge
cwtl
add
imul
or
addl
call
loopne
sahf
fcmovne
adc
loope
js
mov
dec
fsubrl
mov
rcrl
mov
xchg
mov
fnstcw
popa
inc
push
pop
jbe
add
dec
cmp
test
fdivr
mov
xchg
mov
pushf
daa
xor
stos
inc
dec
ret
push
cmp
aaa
xchg
insl
es
inc
add
outsb
std
dec
inc
je
and
popf
pop
insb
fstps
nop
pop
test
cltd
cmp
setb
xor
leave
outsl
push
das
jo
push
mov
mov
pop
jmp
push
in
add
xchg
out
fidivl
push
jae
and
mov
jle
mov
cli
add
repz
jnp
xchg
dec
jno
call
xlat
and
push
fimull
aad
xor
std
std
clc
cwtl
sub
cmp
jmp
nop
lock
fldenv
mov
xorb
inc
dec
sbb
push
aam
nop
sub
or
cmp
mov
xor
inc
imul
push
xor
adc
add
ss
nop
outsb
stos
add
in
in
adc
lea
or
out
or
loopne
outsl
sbb
xor
aad
add
xchg
frstor
incb
cmp
testb
push
fs
push
add
or
jp
iret
push
mov
dec
xor
addr16
mov
sbb
mov
push
scas
mov
negl
andb
je
cltd
pop
ficompl
out
mov
ja
cmp
arpl
mov
dec
push
stos
pop
shrl
jbe
mov
rolb
cmp
push
rorl
int
popa
fistl
cmp
pop
ss
or
hlt
stos
mov
sbb
sub
mov
test
rol
sbb
enter
in
mov
mov
mov
add
pop
jne
js
xlat
sub
call
cmp
or
popa
jmp
push
push
push
mov
xchg
cmp
add
jle
sti
mov
cmc
cli
lods
ja
xor
mov
fs
push
aad
test
pushf
inc
cmp
mov
loop
lods
cltd
ds
mov
stos
scas
daa
mov
and
lcall
inc
pusha
and
ds
or
loop
cmp
call
pusha
imul
inc
loope
sbb
push
add
add
mov
test
sbb
dec
ja
movsl
cmpsl
je
or
xlat
cs
inc
call
or
fstps
cwtl
sub
and
push
in
xchg
push
scas
and
push
hlt
das
sub
pushf
xchg
lock
xor
adc
ret
jns
les
xorl
and
pop
inc
call
dec
jno
outsl
stc
mov
pop
cmp
add
decb
movsl
nop
sbb
fmul
mov
push
in
imul
and
or
loope
loopne
movsb
nop
adc
je
gs
mov
js
jge
xor
dec
mov
inc
inc
fwait
mov
push
dec
push
sbb
sahf
out
dec
inc
pop
gs
and
ror
lods
or
out
and
mov
mov
push
repz
adc
push
loopne
mov
mov
sub
test
negl
les
insl
sarb
or
sbb
data16
inc
dec
mov
jbe
inc
add
cmpsl
mov
sub
mov
mov
pop
inc
mov
push
in
insb
pop
mov
sbb
aam
mov
xchg
and
ficoms
ret
jno
and
call
inc
jecxz
jno
xchg
mov
adc
fcmovu
or
test
dec
mov
mov
loop
sbb
xchg
dec
sub
mov
testb
pop
mov
jne
pop
xchg
scas
mov
aaa
mov
jg
jns
insl
rorb
or
sub
or
ljmp
leave
gs
insb
sbb
xchg
sbb
fdivrl
inc
lcall
add
cmpsb
popa
pop
dec
pminub
js
neg
fwait
dec
inc
mov
daa
int
inc
repz
ret
lcall
pop
xlat
int
repnz
aaa
mov
dec
sub
test
mov
dec
dec
test
inc
gs
xchg
jp
mov
dec
cld
shrl
xchg
rolb
sbb
sbbl
mov
jae
mov
xor
je
lock
mov
gs
sahf
clc
or
scas
sbb
das
iret
pop
inc
hlt
adc
dec
push
dec
ret
xchg
pop
jb
mov
movsl
jp
popa
es
ret
arpl
cs
cmp
fwait
out
jae
and
lret
cmp
mov
mov
fstps
sbb
mov
enter
jo
xor
add
mov
cmpsb
pop
sti
mov
cmp
mov
cltd
call
pop
add
push
pop
jo
cmp
js
cwtl
sub
int
or
dec
fsqrt
push
loopne
xor
push
test
jecxz
aam
push
cld
mov
mov
aad
cmp
jno
dec
mov
ffree
mov
mull
inc
popf
mov
jl
push
cmpsl
jae
inc
repnz
inc
roll
lock
cmp
push
cld
insl
int
xor
cmpsb
add
pop
fdivrl
out
fnstenv
leave
fcoml
cmpsl
aam
and
mov
test
jl
mov
lahf
inc
sub
mov
loop
ja
je
stc
and
inc
mov
add
hlt
das
int3
insl
and
pop
test
fstps
lahf
sub
sbb
push
sub
sub
loop
add
ja
or
pushf
ret
test
loop
mov
lock
mov
jg
xchg
xor
mov
xchg
adc
mov
sahf
leave
call
mov
addr16
cwtl
dec
ja
daa
int
and
xor
inc
inc
aaa
insb
aad
jbe
dec
adc
repnz
jmp
cmp
pop
cltd
daa
movsl
push
jno
pop
or
clc
imul
sub
mov
and
lcall
loop
lret
addb
mov
faddl
dec
pop
adc
into
push
add
aaa
xchg
sbb
mov
mov
sub
ret
xor
dec
mov
das
sti
cmp
sub
add
push
push
fisttpll
clc
divb
sar
stc
inc
pop
and
xchg
inc
pop
sbb
push
pushf
dec
popf
mov
adc
arpl
cli
jmp
sbb
popa
dec
mov
mov
pushf
push
inc
sub
sbb
cli
sub
cmp
jmp
push
jl
data16
sbb
insl
test
mov
lret
fdivl
cmp
lea
or
dec
inc
inc
adc
lea
insl
mov
out
jb
dec
push
cmp
xchg
repnz
arpl
data16
xchg
dec
std
lahf
jbe
push
xor
xor
jnp
addb
mov
lock
dec
adc
push
clc
or
xchg
sub
xorl
push
and
shrl
mov
xchg
outsb
jmp
cs
push
sbb
daa
outsb
mov
add
mov
insb
outsl
inc
imul
jmp
pop
test
cmpl
and
xchg
outsb
mov
dec
dec
add
cmpb
xor
inc
adc
or
and
pop
push
lcall
into
push
jo
add
ss
adc
rorb
mov
pop
push
add
pop
lcall
gs
mov
in
pop
inc
mov
sub
mov
xchg
xchg
mov
mov
inc
into
pop
mov
mov
adc
mov
scas
inc
xchg
fnstcw
adc
pop
push
lcall
seta
aad
pop
adcl
sub
inc
sbb
ret
les
outsb
jnp
lret
test
stos
imul
jge
pushf
jmp
pop
pop
xchg
push
push
inc
mov
dec
lock
mov
lcall
mov
ljmp
fnsave
sarl
mov
loop
int3
pushl
inc
dec
sbb
call
inc
push
cmp
je
iret
inc
bound
in
stos
sub
pop
mov
sub
ss
aas
daa
mov
pop
into
test
sub
cmp
pop
mov
sbb
adc
sbbb
outsl
xchg
shr
xor
push
lock
pusha
xchg
push
xor
mov
or
and
orb
cmp
sahf
inc
sub
jae
iret
jbe
adc
mov
mov
sub
mov
pop
and
pop
inc
imul
lcall
and
rcl
sbb
aaa
pop
mov
and
cs
cli
xorb
lahf
out
sub
mov
and
dec
xchg
xor
repz
push
push
inc
in
sbb
nop
cmpsb
sbb
adc
pop
jnp
jmp
int3
sub
mov
mov
ret
xlat
adc
std
xlat
push
xchg
inc
pop
cs
in
iret
sub
rorb
pop
mov
push
xchg
into
jno
pop
pop
sub
inc
push
jb
mov
add
xchg
push
stos
mov
outsl
lea
push
aas
pop
jle
inc
out
shl
in
and
leave
mov
jbe
dec
sbb
push
mov
std
jecxz
cmp
push
dec
or
flds
rorb
push
popa
dec
or
mov
and
inc
ret
test
push
pop
mov
imul
xchg
xchg
movsl
iret
sbb
sbb
shll
lods
nop
pop
xor
xlat
push
inc
mov
push
or
adc
inc
or
xchg
and
out
cltd
adc
shll
std
mov
add
cld
in
cmc
mov
cmp
pop
loope
imul
iret
adc
inc
ss
and
push
mov
mov
mov
into
outsb
lods
cmp
sub
pushf
js
seto
mov
icebp
pop
xchg
into
jae
scas
cmp
mov
sub
mov
xlat
repnz
stos
insb
sti
push
pop
ja
mov
das
aaa
mov
mov
mov
dec
lahf
mov
mov
jecxz
pusha
int
outsl
sar
orb
adc
xor
leave
jb
mov
mov
dec
bound
dec
fldenv
dec
fwait
and
inc
fisubl
and
test
push
cmpsb
movsb
mov
mov
in
test
shll
pop
jae
mov
ficompl
mov
inc
jg
adc
jno
mov
scas
lods
ja
out
in
pop
fistpl
int3
lea
pop
dec
xor
or
data16
mov
sub
dec
out
outsl
iret
out
adc
xchg
cltd
cld
loopne
into
popa
mov
ds
rorb
lds
xlat
jo
mov
fwait
loop
aaa
fldl
xor
les
pop
push
daa
cli
sahf
stc
xlat
push
push
fadd
in
lds
outsb
jecxz
lcall
sub
fnstenv
pop
imul
xchg
lods
and
adc
add
outsl
nopl
sub
out
cmp
fldl
xor
bound
sbb
jno
in
inc
sub
shlb
mov
imul
mov
pop
data16
xor
or
sahf
ss
stc
push
mov
popa
cld
and
insl
inc
nop
cmp
add
inc
frstor
lea
lea
sbb
mov
movsl
xor
mov
lret
mov
ret
mull
dec
pop
mov
xchg
stc
lock
js
jp
into
call
push
cld
cli
inc
xlat
or
push
int
mov
movsb
jmp
xor
cmp
push
add
and
popa
sub
lea
sub
pop
popf
cmpsl
mov
in
inc
dec
inc
jne
xlat
fnsave
ret
pop
sbb
xor
stc
xchg
outsl
jg
clc
sub
loope
push
test
xorl
repz
lret
push
and
fildl
stc
mov
addb
stc
mov
jae
mov
adc
repz
pmaxsw
dec
scas
repz
adc
cmc
clc
fiadds
fdivl
dec
shl
idiv
adc
pop
mov
test
daa
aad
add
pop
jmp
mov
and
incb
leave
hlt
sbb
insl
cmp
stc
mov
jge
stc
mov
fdivr
and
pop
xlat
test
inc
sbb
and
lea
data16
push
cmp
out
and
cld
int
mov
ret
aas
fisttpll
xchg
sub
pop
flds
adc
pop
mov
jbe
and
inc
mov
mov
xchg
pop
push
rcrl
stos
and
mov
add
gs
pusha
outsb
fwait
ljmp
mov
loope
adc
mov
add
mov
mov
mov
xor
jne
stos
cli
lods
not
mov
pop
movsl
jmp
lock
fmul
mov
pop
jmp
cmpl
cmp
not
mov
pop
xchg
repz
test
imul
xor
mov
xorb
hlt
adc
loopne
jge
jno
adc
sub
cltd
inc
decb
dec
fcomps
cmp
jnp
fwait
je
and
and
pop
mov
insl
sub
scas
in
xchg
jno
adc
nop
stc
mov
nop
sar
jmp
sub
xchg
daa
inc
push
and
mov
xor
rcr
mov
std
pop
cmc
in
push
fiaddl
cld
adc
mov
sub
sbb
in
andb
xchg
mov
mov
xor
add
jmp
sbb
push
sub
mov
pop
dec
fildll
adc
pop
xor
and
jge
inc
fmulp
das
mov
stc
jle
push
push
fcmovnu
mov
cmpl
add
dec
das
sub
fstps
adc
pop
mov
test
adc
inc
mov
mov
iret
cli
dec
fsubr
mov
inc
xchg
repz
insl
sbb
push
xchg
xchg
sbbl
pop
mov
sub
fcoms
push
push
adc
sbb
in
jge
pop
lods
loope
mov
fcmovnbe
or
or
cmp
cld
cmpsl
xchg
push
pop
push
mov
add
loop
mov
sbb
cld
jno
and
jecxz
testl
inc
rolb
mov
pop
ds
sbb
inc
jl
cmp
aaa
jo
adc
cli
in
movsl
pop
sub
sub
std
mov
jno
cmp
push
jne
pop
pop
adc
push
mov
mov
aas
pop
mov
mov
dec
cmpsb
or
xchg
jb
mov
clc
test
dec
scas
pop
gs
add
shr
sbb
push
les
add
mov
ror
sub
xrelease
push
pusha
inc
and
jp
sbb
sub
cmp
jp
hlt
and
pop
addr16
inc
out
test
stos
adc
les
cmp
mov
shlb
fstps
iret
mov
jne
cmpsb
in
mov
jo
xlat
inc
fldl
add
fidivrl
mov
insb
pop
xor
fdivrs
fwait
adc
pop
not
cli
hlt
std
cmpsl
iret
pop
and
sub
sub
push
mov
pop
or
jb
pop
shll
add
flds
xchg
lods
xchg
mov
xchg
and
in
sub
pop
movb
xchg
dec
je
pop
imul
nop
cwtl
into
aad
jge
loopne
nop
into
pop
mov
out
sub
mov
es
jl
jbe
lcall
and
hlt
xchg
mov
mov
nop
push
mov
mov
loopne
rcl
outsl
or
daa
pop
hlt
sub
or
adc
and
in
pushf
push
fadds
xor
fisubrs
xchg
repz
pop
insl
mov
xchg
pop
lock
jne
js
inc
fsub
leave
stos
shll
js
and
lods
mov
sti
mov
cwtl
pop
test
mov
addr16
out
push
push
stc
add
scas
adc
pop
mov
jecxz
xchg
pop
cld
lahf
jle
pop
cmp
stos
lcall
repnz
xchg
add
test
jnp
adc
lret
and
mov
in
adc
fnsave
pop
mov
xchg
rcrl
sub
imul
into
dec
inc
fwait
sub
xorl
pushf
xchg
cmpsb
and
and
sbb
cmp
imull
cmp
test
pop
jp
scas
addr16
push
mov
js
mov
movsl
jno
clc
adc
pop
add
dec
dec
push
mov
daa
das
pop
les
ficomps
cmp
dec
pop
jo
add
mov
movsl
leave
int3
insl
or
xor
filds
adc
repnz
dec
inc
enter
sbb
nop
aas
xor
das
leave
jle
loopne
xchg
inc
insb
adc
push
push
addr16
xor
mov
mov
xchg
push
mov
in
dec
xor
shll
xor
jg
xor
mov
inc
mov
testb
lret
leave
mov
mov
stos
mov
inc
xchg
xlat
jne
in
pop
mov
mov
dec
jmp
xor
lahf
inc
push
cmc
mulb
sarb
jecxz
outsl
cld
cmp
ja
fcomps
insb
mov
xchg
cmp
fidivl
daa
test
and
dec
popa
negb
pop
clc
mov
out
mov
aam
aas
xchg
movsl
inc
jmp
sbb
dec
shll
mov
xchg
clc
mov
mov
scas
fidivs
adc
arpl
xchg
jge
loope
pop
inc
or
lcall
loope
mov
sub
mov
fidivs
pop
fisttps
fsubrl
iret
rsm
or
shlb
int3
mov
lahf
cmp
mov
pop
fwait
and
jmp
sbb
cmpsl
add
sub
addb
shrb
xchg
test
gs
mov
xchg
repz
aaa
das
popf
and
mov
adc
mov
push
mov
pushf
adc
loopne
cmpsl
or
dec
rolb
cmc
ds
inc
std
jne
mov
push
mov
push
mov
outsb
xor
xlat
nop
fmull
sub
xchg
xor
mov
mov
push
xchg
mov
inc
or
inc
lcall
lahf
test
mov
mov
rolb
mov
imul
cli
push
lahf
push
hlt
pop
test
mov
rcrb
sbb
movsl
inc
inc
rolb
jecxz
push
inc
enter
cmp
mov
aam
movsb
imul
dec
add
push
pop
lret
sub
add
stos
inc
imul
test
inc
sbb
pop
push
sbb
gs
mov
insl
shr
sub
pusha
cmc
or
or
addl
pushf
sbb
and
pop
inc
jg
inc
jmp
lret
sbb
punpcklbw
aam
arpl
roll
movsb
aam
sub
je
out
cmc
add
cmp
dec
or
fildl
lret
sub
inc
mov
adc
in
fistl
xor
jo
stc
ss
mov
ljmp
pop
add
rcrl
xchg
loop
sub
mov
jo
jl
ret
std
pop
mov
sub
aaa
je
bnd
add
push
in
push
pop
inc
sbb
sub
jne
lds
nop
int
ss
nop
aaa
push
sub
cltd
in
mov
test
jb
lret
sahf
mov
adc
xchg
push
add
test
adc
jbe
into
add
push
pop
xchg
mov
lds
dec
sbb
xor
push
lods
mov
mov
pop
in
xlat
adc
pop
in
jmp
sbb
fdivrl
or
add
clc
icebp
cmp
dec
je
mov
xor
pop
inc
jle
in
xorb
pop
mov
incl
cmp
cli
fadd
mov
test
mov
loopne
mov
je
mov
mov
push
enter
scas
fildl
fpatan
scas
pop
xor
stos
push
ja
sub
jo
test
xor
jne
inc
out
fisubl
fs
scas
mov
out
addr16
std
pusha
rcr
out
test
pop
fs
pop
cmpsb
incl
jge
jbe
das
push
aas
xor
sbb
mov
cwtl
pop
adc
test
fisttpl
push
cwtl
or
and
push
mov
and
xchg
fdivl
aad
pop
inc
fwait
jnp
icebp
jno
fidivs
pop
int
and
cmpsb
in
mov
icebp
jns
adc
xchg
cmpsl
in
mov
mov
test
aam
cmp
stos
mov
cmp
std
mov
sub
test
mov
jb
fs
push
pusha
push
fstp
push
shrl
test
mov
pop
out
shll
ret
mov
jnp
fwait
sbb
mull
loop
xchg
xor
aad
repz
cmp
leave
or
call
or
push
in
lcall
add
xchg
mov
shll
and
add
jns
repnz
sub
mov
cmp
bound
pop
test
push
push
stc
push
cltd
xor
and
jae
outsl
lahf
sarl
sahf
mov
push
test
mov
int
xchg
push
add
repz
das
jns
mov
mov
setl
cmp
push
insl
ds
inc
test
push
pop
and
add
imul
xor
out
adc
xchg
nop
mov
popa
dec
arpl
mov
or
inc
out
ficomps
push
add
repnz
stc
push
adc
callw
pop
iret
cmp
subb
cltd
cmpl
inc
into
movsb
dec
mov
jecxz
dec
add
arpl
stos
and
cmpsb
xchg
nop
and
cli
iret
popf
sahf
insb
mov
and
aam
pop
addl
pushf
addl
and
pop
mov
fs
divl
xor
sahf
sub
movsb
add
mov
pop
test
popf
inc
jo
jbe
inc
loope
ss
xchg
pusha
pushf
shrl
adc
ds
fwait
cmpsl
cld
or
mov
out
loopne
gs
shr
rcll
sarl
cmpsl
jo
out
inc
xchg
and
scas
dec
decb
aaa
in
scas
dec
pop
ja
aam
adc
adc
xlat
jbe
pusha
push
sub
xor
mov
mov
or
xchg
jp
fcoml
xor
dec
xchg
push
vshufps
fsub
cmp
cmp
int
enter
mov
mov
popf
mov
test
out
bnd
ret
sub
xor
xchg
inc
mov
pminub
std
imul
mov
ficompl
aaa
in
inc
xor
xchg
arpl
dec
mov
pop
add
cs
fs
out
data16
mov
adc
les
scas
into
push
jmp
add
mov
sbb
out
sub
mov
les
inc
or
mov
enter
hlt
mov
push
mov
xchg
mov
jle
sbb
jl
sub
call
subl
mov
ret
bnd
bound
lret
es
mov
mov
aas
ret
jecxz
pop
mov
jg
stc
sbb
dec
sbb
jl
push
xor
outsl
loop
testl
inc
push
ja
cmp
sub
mov
mov
cmc
mov
shr
fstpl
ljmp
iret
ja
addb
inc
inc
jbe
gs
pop
jecxz
orl
pop
jb
scas
pop
xchg
lock
arpl
pop
fisubl
in
test
jle
repz
xor
adc
jnp
mov
fisubl
das
jle
inc
push
dec
cmp
nop
jp
pusha
push
adc
jno
ds
lcall
icebp
cwtl
ficompl
pop
lret
xchg
xchg
mov
mov
pop
push
popf
ret
pusha
add
aam
xor
loop
ljmp
adc
insb
pop
mov
cs
mov
sub
pop
pop
test
adc
adc
and
cmp
in
adc
mov
xchg
jle
dec
push
sub
je
and
add
cltd
inc
cli
scas
dec
out
xlat
test
adc
dec
push
faddl
sti
mov
cmp
mov
mov
add
bound
inc
xchg
push
and
sub
test
cmp
xor
fdivl
push
les
popa
jno
jb
inc
fdivr
iret
js
mov
shlb
add
cmp
mov
mov
jns
jp
cmp
test
add
sbbb
aas
popf
add
xchg
shll
in
ds
iret
sub
dec
xor
sbb
daa
call
test
sbb
fbld
clc
mov
rcr
sbb
addr16
sub
stos
or
enter
div
mov
repz
xchg
imulb
jns
jae
add
sbb
sbb
ret
jnp
sbb
incl
xlat
xchg
aaa
outsb
rol
hlt
xchg
mov
and
inc
fimuls
cmc
pop
filds
jp
aaa
loope
sub
imul
fs
mov
out
popa
mov
xor
add
std
dec
xchg
and
decb
gs
sti
iret
dec
mov
fcomps
push
cmp
cmpb
popa
push
mov
daa
out
nop
sub
mov
adc
call
iret
sbb
push
inc
sar
dec
jnp
ret
cmc
add
mov
jge
fmuls
std
pop
inc
jns
cmpsl
daa
xor
push
xor
mov
inc
jl
push
cmpsl
push
mov
adc
fstl
jg
mov
adc
xchg
xlat
push
movsl
xor
out
sbb
ror
dec
add
cmp
popa
in
outsl
js
test
mov
xchg
sbb
lods
xchg
and
xor
xchg
outsl
ret
sbb
test
cld
iret
push
or
faddl
pop
mov
mov
xchg
mov
jbe
mov
and
cmpsl
daa
or
sub
into
jmp
push
in
sarb
mov
sti
mov
jge
imul
or
gs
outsl
icebp
shll
mov
call
mov
arpl
cld
test
sbb
push
sub
subb
mov
fst
daa
rcrl
dec
das
mov
les
pop
repnz
adc
int
pushf
jle
add
scas
loop
mov
and
cwtl
or
sub
test
das
jmp
xchg
jp
in
out
adc
pushf
cmp
jmp
fucomp
stos
leave
xchg
add
sbb
imul
add
iret
leave
pushf
iret
iret
xchg
stc
sarb
movsb
add
lods
les
inc
les
lock
orl
pop
cmpsl
and
push
test
xor
sub
dec
jge
lahf
sbb
lea
std
mov
xor
rcr
mov
sub
jnp
or
iret
outsb
inc
decb
enter
xchg
push
mov
inc
fstp
sbb
sbb
pop
fwait
xor
inc
pop
or
sbb
and
inc
mov
mov
enter
inc
mov
add
icebp
int3
ret
fiadds
xor
bound
imul
push
push
xchg
jno
add
jmp
sbb
ret
add
cmc
leave
js
call
jnp
fcom
add
or
mov
lock
frstor
jno
and
push
cmp
rcrl
dec
loopne
dec
pop
xchg
mov
push
jmp
xlat
mov
notl
xor
push
add
test
jp
cmp
leave
arpl
mov
inc
pop
loop
dec
push
movsl
mov
mov
enter
mov
sahf
mov
out
shll
cmp
sbb
pop
popf
pop
nop
and
in
xchg
jno
inc
addr16
cmc
aam
les
xchg
lds
in
dec
inc
sahf
negl
sahf
xor
jb
cmp
pusha
xchg
jmp
in
mov
icebp
cmpsb
and
sbb
psubusb
scas
cmp
in
push
mov
int
lcall
sub
mov
dec
out
cmp
cs
push
sbbl
hlt
stos
hlt
pop
div
push
lds
sarl
enter
mov
mov
xchg
pushf
cwtl
fmull
and
lods
jo
xchg
arpl
push
das
sub
sahf
push
lret
pop
sub
push
in
outsl
repz
or
int
sti
pop
xchg
add
insl
jns
mov
ret
jl
dec
adc
xor
cmpsb
pop
sbb
mull
sbb
popf
cmp
xchg
jmp
mov
les
in
and
into
dec
imul
pop
es
push
cmp
mov
xor
or
mov
adc
sub
aaa
and
mov
mov
popf
push
xor
mov
pop
call
outsl
sub
inc
hlt
loope
loop
fadd
jp,pt
fbstp
inc
cmp
mov
push
mov
mov
cmp
and
cli
xor
pop
jp
pop
cmp
dec
mov
sbb
nop
or
fsubrs
adc
call
and
sub
cli
jb
imul
nop
ja
mov
imul
and
xor
push
sbb
andl
mov
sbb
aaa
inc
fwait
cs
lahf
pop
stos
adc
sbb
xchg
std
and
inc
pusha
cmp
xchg
jecxz
fidivrs
adc
or
nop
mov
adc
dec
mov
cmp
dec
cmova
mov
outsl
pop
inc
and
rcrb
xor
pop
jb
xchg
adc
xor
mov
xchg
inc
push
pushw
loop
push
push
sub
js
loopne
add
in
mov
leave
inc
push
in
xchg
push
xchg
cmpsl
push
push
fadds
mov
sbb
mov
cmp
enter
and
cmp
mov
add
push
xor
mov
fnstenv
aad
inc
and
loop
mov
clc
push
es
nop
fcomp
lods
jne
push
inc
je
aas
pop
movsl
mov
xchg
and
subb
xchg
int
outsb
int
push
fmull
cli
add
mov
sub
xchg
sbb
std
in
inc
mov
xchg
inc
clc
out
loope
pop
push
dec
add
jb
inc
mov
sbb
pop
jge
daa
call
xchg
mov
fsubrp
loope
jl
push
xor
shlb
jnp
inc
cld
push
in
gs
xchg
or
mov
test
out
aas
leave
fldt
pop
sbb
shlb
les
add
les
jecxz
mov
adc
xchg
pushl
jg
mov
pop
int
add
mov
filds
jnp
test
mov
mov
mov
into
mov
test
aam
xchg
or
in
out
sbb
push
stos
pop
arpl
ficoml
jns
cltd
fwait
inc
pop
int3
adc
cmp
jl
pusha
ljmp
xor
sbb
lods
movb
push
addr16
leave
loopne
add
mov
mov
imul
jnp
push
nop
pushl
mov
test
test
push
lds
mov
add
xchg
cmpsl
xor
out
sbb
lods
daa
mov
or
dec
hlt
loope
pop
int
mov
and
jns
inc
add
enter
pushf
mov
pushf
movsb
ds
pusha
fisubs
lahf
push
inc
push
ja
outsl
in
loop
aaa
dec
mov
loop
addl
movsl
pusha
subb
jbe
stos
cs
sbb
inc
sbb
or
dec
push
stos
pop
push
flds
add
jecxz
outsl
lahf
pop
mov
rolb
shll
cwtl
out
or
pushf
cmp
hlt
adc
adc
mov
jge
aas
test
es
mul
cld
test
lahf
dec
ds
pop
jge
mul
xchg
jbe
inc
xchg
loop
lods
sub
mov
and
aam
testb
mov
fstpt
pop
insb
mov
xchg
lahf
cmpsb
pop
dec
sbb
push
mov
add
inc
inc
push
or
mov
push
ljmp
mov
add
and
add
mov
jno
dec
xchg
inc
lods
xchg
int3
fnstsw
and
lds
sub
dec
inc
jmp
aad
lcall
inc
das
push
mov
sti
aad
data16
push
je
pop
xchg
sub
lret
dec
pop
sarl
test
mov
mov
dec
test
popf
roll
pop
lods
bnd
out
lret
mov
in
popa
and
sub
xchg
mov
imul
adc
clc
dec
fnstsw
in
jns
je
cmp
or
test
and
stc
mov
and
fnstsw
pop
sbb
filds
sbb
sahf
mov
cmp
or
movsb
add
inc
je
xchg
sarl
mov
iret
jnp
lret
jo
mov
decb
insl
xor
lcall
clc
or
xor
mov
mov
scas
adc
xchg
xor
push
test
inc
mov
adc
mov
cltd
xor
sub
cmp
pop
dec
and
mov
cmp
push
pop
scas
scas
jb
ret
pop
aaa
mov
mov
add
lret
lret
sub
inc
mov
nop
push
sbb
int3
das
js
test
leave
mov
or
cmovg
and
and
sbb
mov
nop
loope
ror
sbb
push
orb
cmp
jno
fnstsw
xor
imul
and
inc
add
stc
push
scas
xor
push
ss
test
xchg
adc
into
movb
mov
push
scas
dec
cmp
mov
xacquire
dec
jnp
js
push
shlb
test
cmp
jl
rcl
outsl
jnp
adc
sbb
mov
mov
orl
or
xchg
xor
mov
sub
mov
xchg
xor
mov
jmp
fcompl
data16
pop
cmc
imul
pusha
test
mov
dec
or
jbe
push
mov
sbb
fs
push
cmp
xchg
pusha
mov
stos
sbb
mov
inc
es
xor
out
sahf
cmpsb
cwtl
adc
dec
imul
das
icebp
and
pop
cmp
mulb
jns
pop
pusha
push
mov
or
xor
inc
sbb
testb
sub
mov
dec
imul
cmp
sbb
cmp
stc
shl
jg
mov
xor
test
cmp
mov
and
mov
push
jp
fdivs
repnz
sbb
int
repz
lods
or
sbb
push
in
fbld
test
jle
pop
out
and
pop
jae,pt
push
testb
push
bnd
push
cli
push
sub
mov
adc
push
addl
sbb
sub
or
std
pop
fnstcw
add
jecxz
mov
sarl
loope
fisttpll
jge
lods
out
loop
shll
mov
addl
jmp
movsb
xor
mov
cmpsl
jp
mov
dec
add
sbb
mov
push
mov
sarb
sar
pop
lea
movsw
dec
daa
add
xor
mov
xchg
adc
xchg
jnp
es
flds
mov
xchg
cs
cld
pop
xchg
fdivl
mov
mov
mov
pop
fnsave
fnsave
sub
xor
xchg
arpl
sbb
push
push
iret
scas
jno
es
xchg
cmc
fadds
push
mov
call
xchg
sarb
push
jl
dec
loope
push
test
xlat
out
inc
imul
or
nop
sahf
shl
sbb
xchg
xlat
jmp
mov
and
fmul
test
cmp
xchg
mov
clc
les
xor
pop
mov
or
into
shrb
mov
in
aaa
jnp
test
sti
fadds
sub
mov
test
dec
push
sub
incb
mov
in
jmp
cmc
out
cs
jecxz
xchg
inc
xor
lahf
dec
jnp
or
pop
xorb
adc
negl
test
xlat
loop
aam
js
inc
xor
or
and
mov
inc
xor
xor
jns
lcall
aas
fstps
je
hlt
test
pop
pop
xor
xchg
in
or
mov
rclb
shll
leave
repnz
push
push
clc
into
repnz
into
add
in
das
not
cmpl
dec
inc
xchg
into
and
fisubrl
push
pop
jecxz
push
mov
test
pop
jae
dec
mov
jp
mov
insb
loopne
sub
or
push
mov
sub
int3
or
jg
cmp
dec
sbb
sub
pop
xchg
test
and
mov
sbb
out
sahf
mov
sbb
sub
out
shl
mov
dec
mov
xlat
imul
add
ljmp
out
outsl
dec
cmpsl
add
or
push
int
xlat
mov
shrb
test
scas
or
sbb
sub
js
pop
add
or
inc
and
imull
xchg
lahf
dec
ret
cmc
rcll
es
cmc
loope
mov
imul
les
dec
cwtl
loop
ret
mov
leave
rcl
xlat
inc
mov
dec
das
popf
cs
mov
xchg
cmp
xor
mov
push
in
cmp
loopne
aaa
fstpt
jmp
adc
and
mov
xor
inc
dec
subw
mov
popa
daa
xlat
push
test
xor
ds
loope
in
test
pop
cmp
inc
enter
bound
jnp
rorb
rolb
xlat
sbb
gs
sbb
arpl
in
repnz
xchg
into
sbb
dec
aaa
scas
pusha
mov
mov
jecxz
xchg
pop
fdivrl
xchg
xor
ret
push
enter
fbstp
movsl
mov
jle
and
out
mov
and
loop
sub
sub
roll
test
shrb
cli
sub
adc
dec
fdivl
push
add
test
ja
xchg
adc
movd
and
fs
cltd
divl
and
xchg
push
rorb
add
outsb
sbb
jge
jmp
out
xchg
push
or
sub
mov
lret
mov
mov
mov
lret
cmp
js
mov
or
pop
test
test
aam
mov
xchg
and
jo
loop
push
ret
push
mov
xor
sbbl
popl
xchg
sti
dec
pop
jge
sahf
rorl
scas
orl
fldcw
pushf
mov
int
ja
pop
std
scas
add
mov
mov
push
push
mov
popa
xchg
in
neg
test
call
and
idivb
fwait
stos
sub
orl
mov
cmp
inc
into
xlat
mov
mov
insb
cmp
dec
scas
shr
cmp
jno
pop
arpl
sahf
xlat
inc
xchg
andl
ja
mov
pop
sbb
add
ljmp
movsb
cli
sbb
jle
clc
in
cmpsl
fildl
test
jmp
jg
ljmp
and
jns
int
xor
dec
inc
popa
jno
es
jno
xor
add
aam
xchg
xor
push
outsl
cltd
jnp
pop
mov
sub
xor
fdivl
jg
lahf
jbe
sbb
jnp
iret
popf
or
lods
inc
inc
sbb
arpl
stc
stos
pop
clc
clc
dec
sbb
adc
fists
or
mov
adc
jae
stc
sub
js
fs
adc
cmp
popl
and
add
jns
mov
xchg
push
add
aaa
ror
mov
lret
inc
or
adc
sbb
sarb
sub
aaa
xor
roll
and
mov
sar
or
sbb
cmpsb
xlat
push
pop
sbb
das
aas
or
in
xor
cmp
fsubrl
xchg
cltd
out
xchg
lea
pop
out
shll
cwtl
mov
jo
push
pop
cmpsl
fsubr
dec
stos
ja
mov
sbb
and
push
xchg
dec
or
test
cmp
xchg
sub
xor
or
leave
adc
mov
pop
cmc
and
pop
sub
inc
jb
lcall
xchg
lods
cmp
pushl
xor
cmp
sahf
jae
xlat
stos
in
dec
rcrb
scas
mov
and
mov
stos
fisubl
add
or
mov
ret
jl
scas
mov
push
stos
cmpsl
dec
adc
hlt
call
xchg
sbb
push
pushl
pop
je
lock
fldcw
sub
mov
pop
mov
inc
lock
lahf
dec
mov
test
and
mov
data16
cmp
test
test
ja
loop
mov
mov
sub
dec
shll
inc
cmpsl
sarb
xor
pop
lcall
or
inc
push
arpl
inc
or
mov
push
mov
arpl
mov
xchg
pushf
sti
and
xor
mov
outsl
pop
sahf
pushf
outsb
xchg
mov
mov
popf
inc
push
jp
push
gs
call
inc
and
rclb
lcall
addb
je
mov
lret
lock
clc
and
jecxz
mov
loope
mov
sbbb
inc
xor
mov
xchg
ficompl
mov
shl
sti
add
std
jnp
inc
cli
xorl
push
fidivs
jnp
push
push
test
mov
addr16
cmpsl
pop
aaa
xchg
dec
imul
xchg
into
xor
scas
xchg
cli
ds
add
pop
jne
push
in
lods
xor
sbb
es
dec
xchg
out
imul
ja
ljmp
out
outsb
jp
mov
icebp
jle
std
lret
xlat
cmc
stc
mov
insl
cs
mov
andb
gs
and
out
adc
mov
cmp
jne
adc
rclb
lods
add
add
in
add
jnp
sarb
mov
mov
xchg
add
push
pushf
iret
imul
fisttps
mov
lret
fwait
add
aam
das
pop
cmpsl
call
xor
test
sbb
and
inc
xchg
xchg
jae
out
ljmp
sbb
fmull
scas
push
mov
imul
test
xchg
cs
adc
xchg
test
je
push
inc
sub
xchg
sbb
and
adc
lcall
pop
insb
xor
mov
inc
push
repz
ror
add
xchg
jne
je
xchg
rclb
dec
jne
sbb
xchg
lods
pop
pop
and
jo
pop
adcb
shr
ja,pn
in
lcall
clc
mov
lret
clc
mov
cltd
pusha
sbb
jno
xor
fists
lret
test
lds
mov
addr16
lea
mov
loop
stc
adcb
lods
jp
ja
sbb
adc
loop
sbb
mov
adc
dec
fmuls
xor
pop
movsb
lcall
jp
jnp
test
fnstenv
lret
xchg
push
orb
add
push
ja
rclb
popa
sti
jae
inc
cmp
and
mov
xchg
or
arpl
shl
push
add
pop
int3
aam
stos
das
loopne
jecxz
jecxz
mov
cmp
inc
xlat
xor
inc
xchg
imul
pop
std
fsts
idivl
inc
pushl
sub
dec
lea
mov
lcall
cltd
inc
add
add
popa
rdtsc
mov
addb
push
inc
xchg
jge
jl
mov
addl
lcall
dec
mov
push
mov
cmp
jb
fcmovbe
sti
fistl
add
cs
push
mov
pop
in
jmp
dec
inc
leave
das
push
cmp
and
mov
push
icebp
inc
mov
mov
mov
adc
jns
es
or
and
push
scas
lds
cmp
xor
stos
push
lret
xlat
loopne
mov
inc
dec
scas
mov
das
add
push
mov
inc
movsl
test
pushf
ja
dec
dec
cli
gs
or
sbb
dec
pop
xchg
in
inc
outsb
inc
pop
add
xchg
jge
ret
sbbl
mov
fs
lret
out
or
out
push
into
push
inc
je
arpl
sahf
cltd
add
jnp
dec
xchg
test
test
cwtl
inc
pop
fdivrs
mov
out
mov
fwait
push
jecxz
pop
xchg
sub
rolw
aas
rcrl
repnz
nop
fmul
dec
call
in
add
out
xchg
adc
scas
les
scas
xchg
push
je
call
cltd
mov
outsl
std
out
pop
je
test
cld
in
xor
push
insb
xor
xor
cmp
test
dec
ret
xchg
xlat
jnp
mov
push
xchg
vmwrite
rcrl
pop
add
add
addr16
or
pop
daa
bound
aas
mov
popf
cmp
in
push
loopne
imul
push
pop
sub
repnz
mov
imul
sahf
lods
fistpl
mov
enter
pushw
sub
push
adc
sub
scas
mov
xor
add
lret
ret
inc
sarl
inc
xor
int3
lret
mov
or
rorl
dec
les
out
mov
in
ret
sbb
jno
lahf
in
fdivr
and
sti
bound
jnp
push
lcall
aam
dec
mov
sub
divb
mov
cld
cmp
jne
mov
ss
pop
lret
adc
lea
test
aaa
bound
jne
stc
int
enter
nop
enter
enter
adcl
mov
xor
bound
dec
int3
mov
ljmp
das
push
cwtl
mov
xlat
adc
cs
sbb
popf
test
or
ret
int
cmp
in
inc
int
pop
and
pushl
loopne
insb
dec
adc
sbb
mov
test
or
push
jb
lahf
jno
sbb
push
or
sub
sbb
mov
inc
cmp
fidivl
stc
sub
mov
or
xchg
jmp
fldt
xchg
aas
js
jbe
xchg
push
test
xor
add
movsb
add
cmpsb
or
mov
into
mov
stos
mov
mov
mov
loopne
or
dec
jne
push
call
add
fwait
xchg
fs
mov
xor
ficompl
stc
mov
ret
dec
pop
fdivrs
aam
lods
and
pop
ljmp
lcall
sub
loop
subb
leave
popa
adc
mov
imul
fucomp
jge
push
or
sbb
sarb
popf
js
sub
addb
add
adc
jle
and
add
fldl
repnz
add
push
stos
fstps
push
mov
push
cwtl
aad
stc
data16
inc
mov
push
xchg
imulb
movsl
sbb
jne
mov
inc
push
into
or
add
ret
or
adc
pusha
loop
dec
adc
pushf
pop
mov
mov
mov
pop
push
int3
mov
add
jnp
orb
jg
xor
incb
imul
xchg
sub
pop
cmp
aaa
xchg
inc
jge
leave
xor
xchg
in
xchg
mov
push
cltd
lods
inc
test
cmp
pop
fidivrs
push
sbb
in
jl
shll
fs
mov
sub
cmp
inc
arpl
mov
imul
sarb
add
int3
mov
fcoms
aam
jae
mov
ds
xchg
mov
or
mov
stos
insb
xchg
inc
and
icebp
push
mov
inc
cmc
add
pop
aad
pop
imul
inc
das
add
std
mov
cmp
ret
loope
sub
xor
jecxz
lds
cltd
je
jb
cmp
mov
and
pop
cmc
loope
pop
lret
sti
pop
mov
sub
xchg
ss
popa
xorps
adc
negb
ficoms
or
jg
jp
movsl
adc
fisttps
cmpsl
sub
mov
push
and
cmp
imul
mov
daa
es
and
cli
cmp
loope
dec
jmp
mov
fsts
and
shlb
sti
sbbb
mov
cli
dec
dec
jp
adc
fistps
push
lods
cmc
lcall
aas
mov
outsb
mov
test
ss
aad
loop
xor
jge
lret
in
or
jae
addr16
mov
inc
cmp
cmp
sbb
jl
fdivl
mov
jge
jbe
adc
ja
adc
or
jp
adc
or
in
popa
mov
xor
xor
pop
cmp
adc
enter
loopne
xor
push
mov
inc
inc
insb
clc
pop
add
xor
fnsave
loopne
shll
mov
push
pusha
xchg
inc
idivb
fildl
sti
pop
pop
mov
or
mov
es
rcrl
push
cmpsl
mov
fcoml
jo
mov
mov
cmp
mov
loopne
or
dec
xchg
gs
imul
mul
lods
cld
and
testl
inc
jae
push
and
mov
or
daa
into
xor
loope
and
out
mov
pop
xchg
push
push
repz
mov
xchg
arpl
or
and
sub
fcomi
dec
pop
mov
mov
pop
adc
jbe
clc
fucomip
testl
lret
mov
xchg
xchg
pop
add
in
sbb
data16
adc
loop
es
ljmp
sbb
sub
ss
outsl
ret
pop
sbb
movsl
clc
and
data16
aas
imul
mov
fdivl
outsb
jne
test
mov
scas
mov
inc
je
lea
nop
test
shlb
lods
cltd
pop
in
fmuls
fistps
mov
in
cs
or
xchg
adc
data16
lock
sbb
mov
sbb
in
or
enter
loopne
xor
lret
lods
cld
std
paddd
fiadds
push
nop
stos
ss
dec
xchg
sbb
sub
and
imul
aaa
add
push
xchg
cmpsb
push
push
insb
xor
lcall
ret
imul
aam
mov
push
stc
or
xor
inc
cmp
add
daa
cwtl
shrl
outsb
mov
loopne
add
pop
cmp
es
jb
jno
imul
hlt
jb
push
inc
in
mov
cmp
ret
or
push
arpl
pop
sahf
pop
into
and
or
insb
ds
es
fs
mov
mov
sbb
push
fstps
and
mov
xchg
dec
sbb
cmp
add
pop
lret
mov
insb
inc
dec
xor
mov
cltd
or
push
cmp
mov
cmp
xchg
jbe
aas
sqrtps
pop
push
aam
add
lcall
scas
rcll
xorb
fwait
or
jl,pn
loop
in
mov
push
int3
or
shlb
dec
push
cs
out
rorl
xchg
adc
and
cmp
jns
dec
repnz
pop
sub
data16
dec
jmp
or
mov
or
shrl
gs
mov
cli
push
sbb
bnd
out
or
call
mov
imul
lret
xchg
mov
mov
push
int3
int3
push
pop
scas
adc
inc
mov
cmp
std
add
stos
jp
mov
jno
mov
mov
rolb
int
pop
inc
aas
inc
add
out
sub
push
call
add
cmc
cmp
stc
fiadds
out
movsb
xchg
loop
push
xchg
jl
ja
mov
popf
or
pop
daa
les
inc
sub
fdivs
pop
inc
push
push
push
test
jecxz
insb
out
aaa
cmp
addl
xchg
push
aam
xchg
and
adc
jle
and
mov
test
add
sarb
mov
outsl
push
ret
push
jo
es
or
jns
mov
cmc
adc
fxch
adc
mov
and
mov
jns
lret
shll
mov
sbb
shlb
inc
pop
pop
dec
xchg
enter
das
cld
dec
add
aas
xchg
mov
mov
or
les
pop
test
rclb
rorb
adc
jne
out
mov
movsl
add
sub
les
inc
dec
jmp
mov
faddp
xchg
mov
das
stc
cs
dec
test
cmp
notl
imul
lds
mov
imul
scas
mov
inc
popa
push
int
outsb
cltd
ljmp
mov
loopne
mov
jl
inc
mov
insb
icebp
and
sbb
lods
mov
push
ficomps
jecxz
adc
and
lods
cmp
mov
push
cmp
lea
test
cmp
incb
adc
dec
mov
push
adcl
rorb
sub
aas
dec
ret
lret
lcall
push
pop
pop
add
movsb
mull
subb
xor
pop
add
push
lea
add
and
jle
in
pop
rorb
mov
push
pop
aam
or
adc
adc
ficomps
mov
adc
scas
je
loope
outsw
loope
sub
inc
or
test
push
mov
sub
outsl
lret
xor
inc
mov
mov
mov
adc
pop
jl
sub
lret
push
pop
dec
push
fwait
ds
dec
xchg
mov
sbb
je
inc
cs
cmpsl
in
test
jnp
aam
js
xchg
sbb
sub
dec
subb
inc
xor
out
xor
lret
jg
dec
push
test
mov
ret
cmp
pop
adc
jbe
daa
cs
jo
sub
and
inc
fsubrl
cmp
bound
nop
inc
xchg
push
jmp
mov
lret
lds
test
pop
cmp
leave
ret
incl
ret
jecxz
outsb
cmp
sti
aad
sarl
dec
pusha
repnz
xchg
push
and
adc
in
xchg
shrb
repnz
fstpt
mov
jae
xchg
lea
xchg
inc
fldt
mov
cmp
sti
imul
sbb
cmpsb
jecxz
and
lcall
jb
mov
rcr
jp
cmpsl
loopne
mov
jnp
out
cs
cwtl
arpl
cli
sub
std
xor
xchg
ret
add
or
cmp
int3
cmp
cli
pop
int
shll
loopne
inc
std
xlat
clc
aam
and
popa
mov
arpl
push
jge
icebp
dec
sahf
aad
andb
repz
rcll
adc
mov
cmpsb
xor
sbb
xor
ret
iret
stos
mov
inc
and
dec
and
lret
leave
xchg
pop
popa
cmp
scas
jg
inc
inc
or
mov
mov
pop
or
jo
in
push
dec
jb
cmp
clc
aas
and
adc
xor
js
mov
repz
cmp
push
pop
sub
push
push
lods
sbb
or
flds
ljmp
cmp
jmp
xchg
dec
cmc
cmp
cli
sahf
cld
mov
mov
push
add
adc
into
sub
ficoms
add
nop
xlat
pop
inc
xor
xchg
push
cmpsl
inc
sarl
push
sub
jbe
lcall
jmp
test
fildl
pop
enter
loope
lahf
dec
push
jns
or
or
dec
test
out
sub
jecxz
xor
push
test
mov
fistps
ja
push
pop
clc
data16
fnstcw
adc
lods
fcoml
jne
cmp
pop
outsl
jmp
cmp
enter
pop
xor
sub
add
mov
cmp
jnp
adcb
loop
sub
hlt
int
mov
jge
xor
cmp
mov
mov
int3
xchg
pop
jmp
decl
les
inc
dec
inc
pop
aaa
test
push
mull
insl
push
or
addr16
mov
lcall
xor
repz
orb
jns
mov
into
pusha
jns
mov
cmp
outsb
popf
xor
out
das
push
adc
dec
jb
dec
test
es
mov
mov
push
push
ffreep
sbb
add
sbb
xlat
fst
dec
xchg
movsb
mov
add
jbe
aaa
fdivp
jb
jns
jl
je
nop
xchg
je
out
jecxz
fs
dec
outsb
iret
lret
mov
mov
jnp
subl
sbb
sbb
int
sbb
dec
sub
adc
sti
call
jne
rcr
push
sbb
aad
xchg
mov
out
pop
dec
outsb
sub
imul
lcall
test
rorl
sbb
pop
pop
xor
xchg
and
jle
inc
shlb
push
sub
dec
jp
insl
fmul
adc
inc
pop
mov
xchg
mov
mov
cld
jbe
popa
out
pop
into
out
stos
psrlw
add
fisubl
dec
sarl
sti
mov
ja
sbb
jg
push
shll
mov
push
insl
ficompl
and
in
iret
fnstsw
mov
aas
jns
jmp
dec
cmc
loopne
ljmp
xlat
pushf
aas
imul
or
lret
dec
pushf
popf
mov
imul
sbb
cmp
andl
mov
aam
movsb
in
push
sub
xorl
gs
in
mov
rclb
iret
inc
out
push
dec
leave
mov
or
add
inc
xlat
jae
lret
shll
pop
jae
cltd
in
or
pop
add
mov
add
jne
icebp
subl
insb
das
mov
mov
popa
pop
std
stos
inc
dec
mov
cli
ja
leave
push
mov
aas
xor
stos
push
add
push
movb
and
in
jmp
push
das
jg
pop
or
push
shl
xchg
daa
add
mov
xchg
imul
push
popa
mov
mov
movsb
cmp
and
stos
and
fistpl
sbb
add
cmp
aam
rorb
scas
mov
enter
les
ds
sub
imul
stos
dec
arpl
push
cmp
test
push
adc
lock
xor
or
fisttpl
inc
out
repz
jl
setle
mov
adc
cmc
xchg
adc
js
jo
inc
push
pop
call
into
ds
mov
dec
ja
adc
lds
setg
clc
mov
and
jle
cmpsl
sub
mov
pop
jecxz
xor
stc
leave
lret
mov
sbb
push
jg
or
jmp
mov
mov
inc
shl
mov
pop
add
ljmp
add
inc
jae
mov
in
xchg
add
movsl
jecxz
mov
out
xchg
cli
dec
xor
lock
or
cltd
push
dec
outsb
out
aam
jmp
mov
fnstenv
sub
inc
adcb
dec
ss
repz
push
arpl
mov
xor
test
pop
leave
mov
push
inc
jns
push
shll
shlb
xor
shlb
inc
pop
adc
mov
stc
out
pop
cli
inc
cmp
and
test
push
out
add
push
or
stc
insb
jmp
dec
data16
std
hlt
mov
jp
data16
cmp
bound
jb
pop
shll
mov
lods
out
ror
sub
fnstenv
sbb
xchg
dec
mov
sarl
sti
mov
imul
or
ljmp
jne
ja
xor
into
jmp
adc
dec
movsl
push
adc
dec
fbstp
decb
cmp
outsb
sahf
in
je
scas
lods
cmp
js
push
jg
sub
cwtl
push
imul
scas
jmp
jl
aaa
test
adc
lea
lret
xchg
sbb
cmp
push
and
adc
clc
jns
jae
popa
std
and
loopne
push
xchg
pop
inc
dec
sbb
sti
sub
pop
mov
movsb
xor
xlat
cmpsb
jg
aas
dec
lods
xor
adc
rorl
dec
scas
icebp
inc
fistpl
mov
fwait
jne
pop
push
mov
xor
mov
mov
lock
mov
mov
call
mov
pop
mov
pop
cmpsl
pop
test
mov
mov
bound
mov
mov
enter
push
ret
rcrb
adc
scas
inc
or
popa
push
outsl
pop
outsb
sbb
movsb
rol
add
or
lcall
imul
fldl
and
mov
lahf
imul
fld
pop
ret
lret
jbe
dec
gs
jmp
aad
cmp
repz
clc
stos
xchg
js
outsb
loop
dec
mov
andb
inc
movsb
inc
std
xchg
inc
adc
pusha
mov
add
mov
push
and
xor
dec
xor
xor
jae
dec
movsb
xor
mov
push
xor
xchg
mov
jge
inc
adc
pop
add
jl
pcmpeqb
es
test
ss
orb
inc
adc
push
sbbl
adc
fisubl
scas
lea
sub
push
ja
jno
dec
out
into
add
mov
dec
test
popa
js,pn
ror
inc
pop
lock
push
or
jns
ret
xchg
pop
adc
pop
jo
fstpl
pusha
addr16
push
sbb
or
test
inc
mov
mov
lods
in
sahf
cmc
popf
push
neg
gs
test
dec
mov
ja
popa
xor
fcompl
ret
mov
pop
daa
pop
mov
adc
in
cs
gs
scas
aad
inc
push
or
cmp
adc
movsl
cld
repz
xchg
popf
adc
xor
mov
cwtl
into
scas
stos
lea
pop
stos
push
rorb
arpl
xor
aaa
pop
fcompl
shl
mov
cmpsl
push
mov
mov
test
add
insl
xchg
xor
scas
xchg
push
addr16
sub
jb
ret
insl
cli
aam
push
adc
test
mov
jnp
add
jmp
and
xchg
lock
test
jmp
inc
add
sar
pop
mov
sub
mov
jbe
mov
rep
xor
push
mov
inc
int
rclb
shr
jl
xchg
mov
push
es
popa
sbb
push
mov
mov
jle
and
push
mov
dec
push
rolb
faddl
in
lret
fisubl
jb
insb
push
loopne
push
xchg
cs
push
sbb
test
es
in
sub
mov
jg
mov
push
inc
popa
push
xchg
mov
fs
dec
or
sub
jmp
insl
xor
push
hlt
cltd
mov
or
punpcklbw
dec
js
adc
sarb
dec
adc
daa
xor
in
leave
popf
out
ror
ret
mov
jmp
pop
daa
jmp
shll
fdivrs
or
movsl
stc
outsl
cmpsb
sbb
pop
xchg
test
dec
sbb
push
dec
or
jp
cmpsl
jno
iret
adc
cmp
scas
cmpsl
add
dec
lahf
mov
sbb
and
out
insl
jg
mov
push
and
das
lods
and
jle
jl
lret
rol
pop
inc
rcrb
jge
jmp
sarl
adc
sub
mov
into
push
mov
addr16
sub
data16
mov
hlt
xor
cmpsl
popa
lods
adc
dec
stc
loope
sbb
mov
adc
lret
fisttpl
insl
xchg
cmp
xor
mov
pusha
lods
cld
sub
and
out
in
daa
adc
dec
mov
lahf
or
popa
arpl
mov
inc
jge
test
outsb
mov
add
imul
mov
notl
add
das
in
fiadds
push
jge
pop
xchg
lret
pop
nop
fdivrp
repz
sub
cwtl
movsb
jecxz
push
addr16
test
jnp
hlt
jcxz
js
push
das
sub
lods
cmp
inc
sub
ficoms
mov
pop
std
icebp
lcall
nop
pop
out
leave
je
mov
adc
push
or
ljmp
scas
divl
mov
jl
sbb
jmp
pop
or
notb
push
das
cli
push
lret
movsb
ja
dec
mov
push
adc
xor
lahf
xor
loop
mov
mov
iret
xchg
std
and
adc
mov
stos
sti
sbb
xlat
cwtl
and
aaa
scas
sahf
push
nop
inc
testb
sub
pop
lods
xor
add
enter
in
xchg
cmpsb
bnd
add
mov
pop
sbb
mov
lret
pop
lock
xor
leave
mov
pushf
dec
call
lds
cs
dec
fdiv
cli
lret
sbb
rorb
inc
and
pop
mov
fsubrl
sarb
push
out
sarl
or
add
stos
repnz
sbb
xchg
bound
add
loop
xlat
outsb
and
lahf
jo
mov
insb
ljmp
mov
or
imul
pop
mov
fisttps
jp
negb
add
pop
insb
push
push
rolb
inc
aas
out
lock
dec
cli
testb
mov
xchg
loope
cmp
loope
aam
test
cmpsb
lock
daa
imul
mov
jge
cmpsb
jl
fndisi(8087
and
adc
lock
mov
or
add
mov
and
sti
push
xchg
jb
lret
daa
cmpsl
test
out
imul
push
xor
es
mov
insb
sahf
in
lahf
xchg
gs
fisubrl
inc
mov
lret
insb
xchg
xchg
cmp
jne
out
push
pusha
push
roll
or
jl
inc
cmp
addb
popf
std
mov
cmp
arpl
lea
jge
test
pushf
sub
ret
adcl
pop
pop
mov
insb
dec
fcmovbe
mov
lahf
cmp
mov
cs
inc
and
scas
fs
xchg
push
xchg
xchg
sub
test
lea
imul
push
pop
mov
jb
jne
outsb
stc
or
add
enter
mov
jbe
jecxz
or
dec
sbb
cmp
mov
or
loop
fs
pop
push
and
es
push
pop
movsl
lahf
mov
pop
lret
lcall
pushf
daa
mov
call
jecxz
dec
push
sub
dec
push
dec
sub
pop
fldt
sub
fidivrl
or
and
dec
fs
std
sub
jg
cmpsl
out
inc
test
shl
subb
sar
sbb
inc
mov
add
std
adc
cmp
jecxz
call
sbb
jne
mov
mov
shrl
arpl
push
inc
repnz
add
jmp
js
bnd
arpl
insb
and
test
das
mov
xchg
bound
or
mov
movsl
sbb
push
push
ja
xor
andb
or
and
adc
in
and
dec
xchg
add
push
adc
inc
mov
rcll
insl
jb
cwtl
jb
divl
add
idivl
lret
js
dec
jae
sub
mov
ret
aam
iret
cmp
sub
inc
xor
out
sub
push
js
jmp
sub
daa
mov
pop
insl
xor
icebp
lods
shrb
in
lcall
je
dec
addb
pop
pop
sti
sub
lods
mov
jmp
push
dec
ljmp
jge
aaa
or
shll
aaa
inc
in
pushf
dec
pushf
mov
add
push
and
and
adc
iret
push
outsl
icebp
xchg
in
pop
lahf
mov
out
mov
stc
mov
jnp
mov
push
sub
mov
leave
mov
xchg
std
jnp
int3
popf
xor
add
sarl
mov
jge
in
mov
cmp
in
push
xor
iret
cmp
lcall
test
dec
and
jnp
inc
call
fwait
or
bound
mov
movb
or
pop
push
lds
pop
adc
xlat
push
push
addr16
inc
stos
popl
shrl
dec
das
fmuls
pop
add
inc
subl
jle
adc
push
data16
push
cmp
adc
mov
xchg
movsb
dec
scas
dec
adc
lods
pusha
xchg
adc
xchg
test
mov
push
movsbl
push
jg
mov
inc
mov
mov
movsl
decl
xor
dec
lods
dec
mov
mov
adc
scas
pop
or
add
sti
scas
iret
mov
out
int
jb
sub
sbb
aaa
pop
out
jns
cmp
mov
iret
aas
pop
and
mov
mov
mov
mov
pop
sti
xbegin
mov
push
std
pop
cmp
test
or
add
xor
aaa
test
nop
sti
add
cmc
cmp
xchg
pop
lods
xchg
adc
stos
sbb
imul
pop
sahf
out
sbb
mov
mov
sti
pop
stc
lret
mov
das
sbb
xor
inc
fcoml
les
and
xchg
mov
adc
sbb
lock
rcrb
pop
std
dec
cmpsl
xchg
js
dec
fcomip
mov
rcrb
add
add
xchg
nop
sbb
movsl
push
jp
pop
mov
mov
jmp
inc
mov
sbb
mov
xor
dec
test
pop
sub
push
movsb
add
rclb
cmp
repz
loop
xlat
pushf
mov
sahf
cmp
cmp
push
mov
pslld
mov
fisubrs
inc
mov
add
int
adc
stos
mov
lea
aad
mov
pusha
mov
cmp
mov
scas
and
xchg
aas
aas
sub
jge
ja
xchg
sbb
mov
xor
add
jle
mov
xchg
shl
pushf
rcll
push
add
and
mov
mov
pop
xchg
gs
push
insl
sbb
por
fisubrl
in
pop
push
xor
sbb
push
push
xor
lods
jmp
add
push
cli
cli
mov
cltd
scas
mov
mov
lds
push
int
addb
push
or
adc
xchg
hlt
jb
dec
dec
sarb
lds
testl
jns
push
into
xor
jnp
mov
push
fxch
jb
dec
roll
out
fsts
pop
cmpsl
mov
fidivrs
std
fistl
fnstcw
adc
mov
fidivrl
xchg
push
icebp
dec
jle
adc
add
add
mov
cmp
cmp
xchg
mov
cmpsl
jle
cwtl
cld
sbb
ffree
pop
lock
mov
xor
dec
fstps
mov
mov
push
jnp
dec
gs
jp
xchg
das
push
or
fwait
sbb
sub
lea
xchg
push
cltd
rcrl
or
push
jg
pop
test
jle
push
mov
iret
adc
sbb
dec
and
outsb
stos
xchg
stos
enter
je
out
fwait
pmuludq
fildll
and
push
mov
icebp
pop
cwtl
xor
add
stos
lret
ret
push
cmc
add
or
xchg
lret
mov
mov
roll
dec
mov
test
fdivp
jae
dec
xor
push
aas
xchg
in
pop
aaa
rcrb
test
mov
loope
sahf
mov
in
fildl
hlt
nop
add
cmp
loope
mov
jbe
sbb
xchg
repnz
mov
faddl
ja
or
sub
sbb
adc
incb
push
mov
nop
roll
adc
push
imul
cltd
mulb
call
enter
adc
add
iret
pop
lahf
or
lar
addr16
push
loopne
out
das
add
adc
xor
sti
lea
add
lock
pop
or
testb
adc
pushf
ja
sar
test
lret
into
xchg
adc
ljmp
popa
std
ficomps
aam
push
ficomps
mov
mov
mov
out
push
shr
roll
addr16
in
sbb
xor
scas
lods
stos
call
ljmp
aad
scas
out
adc
aaa
push
dec
ficompl
sbb
push
push
mov
mov
cmpl
insb
and
push
test
xchg
inc
sbb
outsb
mov
inc
movsl
cld
cmp
icebp
cmp
mov
inc
sbb
rorb
and
mov
outsl
imul
das
and
fcomip
ret
pop
xlat
jns
repnz
pop
dec
dec
add
outsl
daa
add
and
push
cmp
movsl
sub
mov
inc
add
inc
cmp
jecxz
add
lods
ja
cmp
cmp
dec
inc
fmuls
shrl
sub
mov
jl
push
ljmp
ss
shl
push
sub
ja
jno
aam
in
leave
pop
sahf
cwtl
xchg
cmpsb
mov
push
popf
pop
push
sub
and
xchg
pmaxsw
sbb
sub
cmp
rcr
jecxz
xlat
fs
mov
cmp
push
mov
xchg
ret
push
xchg
sahf
sub
dec
mov
add
imul
inc
jae
popf
push
into
lods
ret
inc
outsb
scas
rol
mov
test
test
arpl
loopne
out
pop
and
xchg
dec
das
jo
daa
xchg
jle
daa
pop
cmc
dec
sub
pop
daa
lahf
mov
cmp
clc
xor
add
out
sbb
or
sbb
pop
mov
jmp
mov
movl
ljmp
jnp
mov
xchg
push
sub
and
mov
outsl
addl
sarb
mov
mov
or
incb
adc
pop
mov
adc
addr16
pop
sub
mov
add
in
out
popa
ret
push
add
dec
lahf
and
sub
movsb
cmpsl
out
add
insb
mov
jge
ja
xchg
into
orb
sbb
pop
arpl
and
ret
mov
mov
sub
test
std
out
inc
push
mov
pushf
cmp
push
adc
imul
jle
inc
or
and
push
adc
imul
pop
sarl
in
pop
test
mov
pop
jo
mov
push
dec
bound
fs
lea
xor
les
outsl
adc
and
pop
fisubs
sbbl
gs
mov
dec
sbbb
gs
sbb
mov
or
pop
mov
dec
jl,pn
xchg
scas
aaa
pushf
or
je
jp
xlat
and
jmp
push
sub
push
push
cmp
xlat
inc
popf
je
mov
movsl
dec
or
sbb
pop
or
xchg
scas
sarb
out
lock
ss
inc
lods
xchg
sbb
pop
aad
outsb
mov
sbb
xchg
xchg
aad
gs
adc
xchg
jnp
sbb
fcomps
int3
jbe
aas
stos
imul
popf
cs
das
push
dec
push
dec
orb
leave
pop
leave
aaa
push
xchg
je
dec
movsb
jnp
mov
push
adc
inc
push
out
dec
push
aas
add
sub
add
or
rcll
gs
adc
xchg
adc
fiadds
ret
pop
les
pop
mov
sbb
mov
or
pop
fsts
outsl
jmp
mov
ss
inc
loope
cmp
mulb
or
pop
fwait
leave
stc
sub
fs
bnd
mov
clc
dec
imul
pop
into
mov
push
push
scas
pop
les
shl
xchg
adc
orl
lds
mov
xor
inc
push
push
mov
mov
sti
sbb
pop
add
sbb
mov
cld
jge
jmp
ja
sub
fs
into
sub
pop
hlt
push
pusha
jl
sbb
imul
vmovups
rolb
rep
popf
sub
xor
pop
mov
mov
out
cmc
scas
push
sub
jge
in
mov
imul
scas
lret
jecxz
ret
xchg
mov
hlt
enter
arpl
sti
call
call
fninit
push
push
cmp
pop
jmp
test
mov
cmc
ss
fnstsw
fwait
ds
iret
int
jle
iret
std
pushf
outsb
inc
mov
mov
xchg
imul
xchg
add
lahf
sub
xchg
loope
add
das
rorb
call
sti
incl
test
push
sti
jns
sahf
lret
pop
das
lea
stos
sbb
ljmp
int3
pop
pop
test
mov
xchg
shlb
cld
mov
inc
jmp
pop
shl
sub
xor
in
mov
loope
jo
daa
out
stos
dec
and
ljmp
mov
push
rcrl
or
rcrl
add
int
ret
and
idivl
cmp
and
pushf
lods
inc
mov
cs
xchg
pop
inc
xor
pop
ret
dec
cmpsl
add
mov
mov
stos
or
test
lea
repnz
sbb
repnz
ljmp
pop
xor
mov
or
xchg
or
bound
mov
psllw
dec
in
jmp
adc
xchg
aaa
adc
jge
cli
xor
jecxz
loop
bound
sub
xchg
add
push
fsubrs
push
rorl
andb
or
mov
mov
test
sar
aam
fdivrl
nop
cmp
loope
adc
out
cmpb
movsl
shrb
add
fcmovu
xor
pushf
mov
push
jle
jecxz
test
mov
pop
xor
iret
sti
push
mov
mov
lods
in
adc
bound
in
sti
xchg
aam
sub
inc
insl
mov
popa
stc
jecxz
xchg
ds
fnstcw
pusha
sbb
lret
pop
mov
dec
pop
cld
add
pop
nop
push
fs
adcl
jecxz
add
lods
mov
inc
mov
jns
popf
xchg
rclb
jle
cmpsb
xchg
sbb
das
and
lods
outsl
adc
jmp
pop
add
jno
icebp
fs
inc
cmpl
sbb
pop
test
sbb
cli
pushf
scas
jp
mov
xchg
cmp
fs
cmc
ds
imul
cmp
loop
cmp
push
data16
outsb
jb
std
xchg
push
push
fdivrs
aam
push
ds
or
sub
sub
pop
iret
lret
xor
iret
pop
mov
xorl
or
push
sahf
out
sti
loope
es
lock
adc
popf
push
mov
std
sbb
mov
aas
repz
ds
fists
shrl
push
sbb
jge
mov
test
fistpll
enter
roll
enter
cmc
push
lea
mov
sarb
out
ss
int3
test
ror
arpl
or
and
lds
mov
mov
divl
scas
sbb
rorb
dec
hlt
adc
lock
fwait
out
insb
repz
lahf
push
test
data16
lahf
sub
hlt
insl
and
pop
dec
jnp
sbb
pop
jnp
push
and
mov
mov
outsb
jmp
cmpsb
jb
test
shll
push
gs
sbb
lret
shlb
sahf
dec
and
sub
sub
out
and
arpl
sub
and
test
ret
aas
pop
test
icebp
cmp
inc
fdiv
push
mov
inc
sub
jg
push
mov
into
sub
push
imul
lret
xor
and
mov
addr16
add
inc
or
outsb
roll
icebp
inc
pop
sti
icebp
mov
cwtl
xchg
js
aam
orl
fwait
inc
jbe
add
xor
lea
daa
mov
jge
jbe
or
push
sbb
dec
push
sub
sub
cltd
jo
test
push
pusha
out
push
jb
dec
ret
adc
mov
cmp
movsl
jg
stos
jne
fbld
sub
divl
das
fisubl
jae
add
pop
mov
xchg
sub
cltd
sbb
jo
je
dec
cwtl
mov
stos
cmp
cmp
loope
gs
lret
mulb
scas
shl
mov
std
sbb
int
call
and
and
je
mov
movsb
gs
jno
jne
push
outsl
shrl
add
jp
cmp
push
fistl
mov
dec
adc
dec
push
lret
add
jecxz
stos
fwait
xchg
sbb
rcrl
adc
mov
fistpll
rcrl
loope
and
push
das
mov
fcmovnu
xchg
mov
std
sub
xchg
sbb
rcr
mov
mov
inc
jmp
lods
decb
scas
int
mov
sbbb
add
sub
sub
aam
sbb
pushf
pop
mov
dec
push
cmp
sti
mov
scas
daa
adc
fbld
cmpsl
xchg
mov
cwtl
or
addr16
imul
pop
mov
pop
mov
fs
and
inc
lock
ret
sahf
nop
cltd
ja
and
and
adc
movsl
in
sbb
pop
mov
arpl
test
daa
loope
mov
mov
sarl
xor
std
and
mov
cli
dec
fcoml
roll
sub
sub
rol
stc
ljmp
aas
sahf
fbstp
pop
hlt
mov
and
jns
xchg
test
test
ret
cmpsb
push
mov
pop
mov
repz
ds
in
loope
and
test
xchg
icebp
sahf
mov
or
out
pop
adc
xchg
xlat
mov
and
push
cmpb
out
sarb
dec
inc
ret
push
pop
xchg
jecxz
mov
nop
test
pop
jb
cmpsb
jle
jae
jo
lret
mov
aas
mov
leave
xchg
pop
xor
xor
or
test
xor
js
test
mulb
fs
fs
push
scas
gs
orb
dec
loopne
mov
icebp
bound
inc
mov
mov
repz
sbb
or
es
dec
push
inc
mov
mov
xchg
cmpl
dec
inc
aaa
xor
adc
sbb
push
mov
push
decb
mov
nop
mov
aas
xchg
outsb
mov
jnp
sahf
jno
loope
pop
lods
ficompl
xor
jns
movsb
lock
fisubl
rcr
cmpsb
incb
or
pop
jmp
mov
adcl
jl
ss
pushf
hlt
mov
sbb
cmp
ret
xchg
sub
into
int3
repz
js
in
jae
jns
dec
dec
rolb
jnp
fwait
out
ret
shr
sub
dec
ljmp
or
xchg
lahf
aam
shll
std
jl
loop
cltd
mov
test
pop
push
repz
jp
cltd
rclb
inc
stos
and
push
and
lcall
inc
add
bound
fmuls
out
imul
imul
pop
xchg
clc
dec
sbb
scas
shll
xchg
loope
xor
xor
inc
icebp
subb
jnp
xlat
or
mov
gs
jbe
xlat
ret
insl
xor
pop
leave
cmp
mov
lods
in
push
fwait
adc
mov
imul
icebp
dec
adcl
pop
mov
call
xor
cmpsb
cmp
cwtl
push
nop
jbe
pop
lds
std
leave
or
icebp
iret
jmp
pop
pop
rcll
fcoms
jl
cld
out
cld
jno
mov
fimuls
pusha
imul
test
out
mov
adc
js
cli
sbb
cmpsl
dec
inc
or
jae
jg
ja
mov
sub
notl
inc
loope
xor
clc
ret
ret
popf
push
jo
add
mov
jecxz
dec
inc
dec
ror
mov
jle
push
cmp
jo
push
mov
mov
aam
aas
mov
mov
add
test
jecxz
jmp
add
ds
mov
aas
push
icebp
inc
sbb
fidivs
ja
xchg
movsl
cmpsb
pusha
fisubrs
mov
movsl
xchg
mov
ja
mov
fisttps
or
int3
cld
mov
mov
hlt
cmpsl
cmp
dec
test
push
int3
ficomps
fsubs
dec
int
push
cwtl
insb
mov
addr16
cmp
lock
xlat
xchg
out
imul
push
clc
push
arpl
rorl
mov
scas
fs
outsl
test
into
xor
repnz
pushf
jmp
sub
and
adc
lods
fcmovnbe
je
mov
testb
pop
dec
cmpsb
fldenv
imul
push
mov
lcall
pop
jecxz
mov
mov
fdivrl
dec
sarb
lcall
mov
inc
xor
add
daa
xor
inc
sub
or
pop
cmp
jnp
cmpb
int3
mov
and
aad
loop
cmpsl
sbb
loop
in
fcompl
mov
xchg
sbb
add
pop
scas
mov
push
es
imul
pushf
xor
jnp
pop
cmc
cmpsl
xchg
jg
and
pop
jecxz
mov
pop
fst
sbb
stc
jne
jo
adc
mov
jnp
pop
push
jno
mov
mov
out
pop
stos
mov
fbld
jecxz
push
jmp
push
out
cmp
insb
dec
lods
sub
ss
sbb
movups
movsl
xchg
imul
sti
fidivl
divl
mov
push
lret
mov
iret
jp
xor
addr16
ljmp
adc
adc
shll
clc
mov
ds
loop
cmp
repnz
inc
out
cmp
inc
test
mov
outsb
divb
inc
fcompl
jmp
stc
sbbb
fmull
int
lods
sbb
mov
push
jle
bound
fdivp
pushf
xchg
dec
pop
mov
and
pop
lds
popa
inc
pop
out
add
xchg
scas
sbb
scas
hlt
xor
pop
pop
dec
shll
xor
xor
insb
lret
sub
push
call
pushf
and
xor
adc
and
fimuls
imull
dec
pop
inc
loopne
mov
mov
ds
xor
sbb
sub
add
lea
movsl
jne
outsb
push
fldcw
xchg
ret
aas
mov
inc
imul
insb
jbe
dec
sub
out
pop
mov
add
popa
jl
pop
and
lcall
es
dec
pop
stos
cmpsl
divb
dec
enter
sbb
sbb
dec
xchg
ja
call
sub
mov
pop
leave
outsl
mov
lods
sub
xchg
lahf
test
xor
sti
push
jbe
jns
imul
ljmp
lahf
fdivrs
ds
dec
popf
scas
or
dec
inc
adc
sahf
icebp
nop
push
jne
inc
fucomp
dec
imull
sbb
rcrb
xor
xchg
int
int
pop
test
adc
call
std
inc
xchg
fsts
mov
cmp
xchg
and
cs
cmp
and
inc
out
cld
push
jo
dec
xor
cltd
dec
mov
and
sbb
mov
mov
sti
stc
mov
pop
out
jecxz
lcall
or
adc
into
arpl
mov
clc
and
aaa
pop
mov
imul
mov
mov
stos
push
cmp
fistps
mov
xlat
jbe
pop
fcomp
imul
stos
aam
xchg
loop
scas
inc
push
cltd
and
pop
test
pushf
and
sbb
dec
cli
sbb
popa
fimuls
xor
add
testl
push
in
sub
les
mov
fldenv
mov
sub
jae
addr16
inc
shll
inc
mov
mov
adc
mov
pop
ljmp
call
aaa
dec
popf
loopne,pt
dec
jecxz
sbb
jle
sub
cmp
stos
stc
dec
ds
jle
mov
bound
aam
roll
pop
inc
enter
xchg
adc
cs
xchg
mov
hlt
add
aam
jmp
arpl
sbb
dec
jmp
mov
push
lea
push
inc
dec
divl
loope
xchg
dec
inc
xchg
push
lahf
das
das
dec
inc
add
mov
jmp
loope
xchg
lret
dec
movb
shll
test
xchg
test
ficomps
mov
cmpsb
sub
out
mov
andl
test
and
in
cmc
and
adc
push
fsts
dec
xor
sub
mov
inc
lds
out
sub
pop
add
subb
sbb
add
xchg
movsl
cmc
call
nop
push
xor
in
in
aas
cltd
jg
pop
pop
pop
pop
xchg
repnz
das
fbstp
or
jg
mov
ret
sti
lods
fadds
shl
shlb
jo
icebp
inc
scas
aas
add
adc
les
cmp
push
pusha
out
push
sub
in
lds
mov
lea
dec
xlat
add
scas
inc
outsb
xor
sub
jbe
dec
or
lds
ljmp
xchg
movsb
sbbb
sub
iret
idiv
jp
xlat
jmp
notb
orb
sbb
push
and
rcrb
int
jp
jns
mov
aad
xlat
pop
shl
insl
cwtl
sahf
and
mov
sbb
cld
ficoms
lret
leave
ret
orl
xchg
jo
mov
adc
rol
out
jp
in
push
jnp
add
inc
lret
daa
pop
and
mov
inc
leave
call
xor
test
sbb
inc
sub
jb
mov
dec
dec
jmp
mov
call
lcall
mov
pop
pop
sbb
bnd
sub
push
inc
lea
jbe
and
mov
pop
fdivs
xlat
stc
ja
pop
and
adc
insl
xor
icebp
insb
mov
frstor
andl
sbb
sti
mov
fs
fwait
sub
or
inc
xchg
pop
rcrb
mov
push
outsl
aas
enter
in
cmp
ss
imul
mov
sahf
subb
xchg
xchg
jne
adc
inc
xchg
cvtpi2ps
lods
jmp
inc
and
cmp
call
inc
push
cmp
xchg
call
lcall
scas
add
mov
mov
sub
insb
es
mov
cmpb
mov
inc
stos
lods
adc
mov
jbe
ret
mov
sub
imul
pop
lock
dec
jle
aaa
pop
sbb
dec
push
outsl
lret
xlat
stos
adcl
fisubs
push
mov
or
ja
mov
sbb
and
pop
jae
mulb
jns
imul
push
and
das
ficompl
popa
xor
cmp
ds
out
lods
push
cmp
jmp
int3
jmp
sbb
sbb
in
pop
movsl
movl
aam
adc
sbb
mov
xor
dec
cltd
rorb
movsl
daa
mov
or
pop
adc
xor
xchg
lods
xchg
inc
dec
enter
pop
stc
cmp
jmp
movl
das
mov
aad
push
scas
add
push
ret
int3
cwtl
mov
in
into
ljmp
dec
flds
mov
mov
xchg
shll
mov
add
mov
or
cmp
gs
dec
mov
cmc
pop
mov
roll
push
mov
push
adc
aam
test
mov
dec
xchg
pop
stc
scas
jnp
jge
push
shlb
jl
arpl
jne
ja
adc
xchg
out
int
dec
loopne
or
dec
jnp
cwtl
movsl
imul
xchg
mov
sahf
or
stos
push
mov
out
mov
scas
xchg
in
movmskps
xor
fildl
repz
dec
ret
aam
and
and
repz
and
sbb
repz
cltd
adc
adc
pop
cli
les
mov
iret
sub
addl
in
stc
push
jbe
scas
sbb
sbb
adc
fs
push
mov
cltd
fiadds
mov
add
push
fisubrs
adc
movsb
popa
and
test
sub
xlat
lret
movsb
stos
and
jle
push
jb
test
jmp
clc
dec
jmp
cld
xchg
and
xor
adc
sbb
add
mov
mov
add
clc
addr16
loopne
mov
push
push
jno
hlt
add
in
js
jecxz
cwtl
xor
pop
in
adc
cld
or
ds
cltd
iret
adc
xor
mov
pop
xchg
js
jns
sub
xchg
adc
xchg
out
xor
ficoml
jmp
pop
arpl
mov
xor
xchg
mov
enter
dec
imul
xchg
inc
dec
or
imul
jb
insb
popf
cmp
icebp
or
jl
mov
fnsave
rolb
shlb
and
dec
xchg
jle
adc
insb
mov
dec
rcll
jmp
pushf
sub
mov
xchg
or
aas
mov
loopne
or
test
adc
pop
sub
ds
or
addr16
cwtl
fstpt
cmp
cs
in
sub
mov
in
gs
cmp
in
and
cs
lret
fs
test
lds
push
loope
xor
sbb
sbb
mov
fwait
lret
mov
int3
je
mov
inc
xor
lods
ss
out
or
lods
ljmp
lock
call
mov
push
frstor
mov
bnd
mov
outsl
popa
xchg
mov
add
arpl
push
jge
sahf
sti
mov
push
xchg
push
or
pop
leave
push
test
cltd
mov
repz
notl
pop
push
test
test
add
and
lahf
sub
test
xchg
xor
xchg
mov
insb
fcomps
in
and
stos
mov
jb
mov
fsubrs
xor
jne
dec
xchg
adc
xor
fnstsw
xor
jae
ret
xchg
jle
notb
push
xchg
std
jae
int3
dec
aad
adc
sub
cwtl
xor
scas
dec
sti
mov
icebp
add
pushf
fcomps
sub
gs
lds
and
out
or
sbb
int3
mov
mov
push
xlat
fs
movsl
leave
pop
pop
clc
inc
subb
add
lods
dec
popf
int3
push
sbb
lcall
pop
pop
shlb
adc
je
mov
pop
sub
mov
mov
push
popf
negl
cmp
pusha
and
sti
push
pop
test
in
cmp
pop
shrb
outsb
mov
sbb
add
cmp
xorb
nop
cmpsl
xchg
stos
aad
out
movsb
orb
gs
or
out
jns
icebp
xchg
fdivr
cmp
lds
sub
or
aas
push
mov
movsb
fcom
fidivrl
pop
outsb
cmp
cmpsb
jno
cmp
out
popa
xor
cmp
mov
aas
inc
push
cmp
adc
pop
xor
pop
cmp
jg
fistl
test
sbb
test
adcb
les
popf
jno
iret
pop
ss
mov
xchg
idiv
rcrl
in
mov
imul
sub
popf
xor
jae
jns
mov
cmpsl
dec
push
icebp
jno
mov
sub
pop
fsubs
mov
sbb
pop
and
scas
shlb
cltd
or
dec
jl
lahf
loopne
jno
xchg
mov
fcompl
dec
repnz
test
into
dec
cmp
mov
and
or
aad
jo
fists
push
ss
add
push
push
cwtl
xchg
mov
or
incl
xor
mov
lret
dec
jle
addr16
in
jle
mov
sbb
adc
arpl
adc
jo
lcall
in
mov
cmp
int3
sub
inc
bound
inc
pusha
cmp
jge
sub
xchg
sub
divb
sbb
gs
test
rcr
packsswb
mov
inc
inc
inc
mov
adc
push
xor
cmp
xor
loopne
push
loopne
mov
sbb
movsl
mov
mov
enter
int
sarb
jmp
nop
testb
cli
fildll
es
es
das
push
dec
movsl
das
shlb
dec
xchg
das
adc
clc
xchg
mov
xor
rol
xor
push
cmp
inc
ljmp
lock
sub
adc
lds
push
and
mov
cmp
or
roll
inc
sbb
adc
repnz
xchg
xchg
mov
pusha
insl
sbb
add
jl
push
adc
push
or
inc
out
je
cmpsb
orl
imul
adc
push
push
in
mov
test
into
scas
andb
mov
inc
out
fsubp
in
addr16
imul
sbb
and
test
setg
cmpsb
mov
pusha
mov
mov
sub
es
daa
cli
enter
sub
in
jecxz
dec
data16
dec
nop
mov
pop
or
mov
ja
stc
sti
push
mov
adc
push
mov
pop
xchg
sub
xchg
scas
cmp
dec
movsl
add
xor
out
outsb
faddl
cmp
ss
add
xlat
add
push
add
push
mov
in
xor
pop
insb
sbb
insb
xor
mov
addr16
pop
outsb
pop
cmp
leave
cmp
xchg
jge
xor
jmp
outsb
mov
lahf
xchg
xchg
je
jno
daa
mov
and
fcomip
data16
ficoms
setl
les
sub
jecxz
push
mov
rcl
loope
data16
pop
fmul
shrl
bound
imul
mov
outsb
xchg
out
outsb
add
add
pop
and
push
jmp
sub
and
pop
push
ret
call
cwtl
mov
jmp
jns
sub
lea
mov
enter
mov
cmp
and
ficompl
fs
xor
sbbb
inc
add
jmp
shl
popa
lods
adc
insl
sub
shrb
mov
inc
icebp
cmpsb
inc
inc
adc
and
sbb
idivb
jl
aad
shrl
mov
in
into
sti
dec
movsl
sbb
mov
and
sub
lahf
xchg
shl
xor
inc
or
test
and
add
test
push
add
xchg
test
int
cli
mov
stos
xchg
add
jo
jmp
aaa
cmpsb
mov
pop
imul
or
lea
out
mov
sub
xchg
inc
mov
bound
pusha
cmpsl
push
push
adc
jmp
xchg
adc
mov
bound
not
sub
adcb
jle
adc
cmpsb
sub
aas
push
sarl
xlat
gs
scas
inc
clc
jge
dec
cwtl
push
imul
out
or
lret
lret
inc
xor
std
jnp
enter
fstl
bound
roll
ret
std
pop
adc
mov
or
cmp
push
dec
cltd
push
lea
adc
adc
mov
pop
pop
lds
gs
sbb
inc
mov
mov
leave
sbb
jle
addr16
dec
loopne
call
lock
stos
rclb
sub
and
gs
fldenv
jg
daa
je
mov
push
adc
inc
and
jl
pushf
pop
ret
ret
xchg
or
xchg
sbb
push
dec
scas
aaa
lret
cli
insl
jge
sub
cmp
aam
pop
in
loop
out
subb
inc
mov
push
sbb
lods
fs
inc
test
fwait
mov
or
xchg
sbb
in
daa
dec
cmp
mov
dec
inc
xor
outsb
jp
icebp
shlb
insl
int3
dec
mov
inc
aam
cmpsb
das
or
lock
ljmp
ja
out
ficomps
lea
and
cmp
scas
cmc
shrl
in
dec
mov
mov
imul
mov
or
call
and
stos
lods
int
mov
daa
cltd
scas
out
and
out
mov
and
adc
dec
or
mov
repz
inc
iret
xchg
pusha
push
lret
outsl
inc
and
lock
cmp
pusha
cwtl
lea
int3
dec
xlat
jb
nop
pushf
add
sbb
jae
icebp
fdivrp
test
cmp
jg
xor
jbe
ds
dec
and
pop
xchg
pop
clc
xchg
in
adc
or
mov
dec
fimull
mov
cltd
lods
push
in
test
bound
dec
aam
adc
push
mov
imul
add
push
xor
jmp
imul
int3
sbb
lcall
push
sarl
push
imul
hlt
call
into
jo
jl
test
enter
mov
xchg
adc
fwait
jl
stos
cmp
cld
sbbl
sub
sub
addr16
xchg
in
mov
xor
xchg
mov
repnz
hlt
lret
out
testl
mov
ss
mov
and
js
push
stc
push
lds
fisttpl
scas
add
xor
rcll
in
addr16
jecxz
xchg
fisubl
adc
push
push
and
loopne
sbb
loopne
xchg
daa
jae
int3
pop
jns
jmp
xchg
pop
add
mov
add
mov
push
xchg
outsl
js
and
dec
dec
mov
lahf
pop
rcrl
sub
xor
push
sbb
push
jnp
mov
and
and
in
xor
insl
fwait
xchg
jbe
enter
neg
into
out
nop
popa
roll
test
lret
adc
sub
inc
roll
jb
mov
or
ja
repnz
iret
push
mov
fmull
and
pop
pop
pop
lds
enter
in
jecxz
cwtl
xchg
into
mov
jecxz
aas
loop
mov
add
adcl
mov
out
insl
push
cmpsb
les
or
xor
pop
and
push
insl
stos
test
lea
std
je
stos
adc
test
mov
cwtl
xchg
add
push
adc
push
and
testb
add
arpl
adc
cld
mov
int3
mov
insl
mov
cmp
in
xlat
in
push
std
call
jl
test
push
fucomip
out
mov
cmp
ret
popf
test
adc
rep
mov
insb
sub
mov
pop
mov
cmp
mov
hlt
xchg
in
ja
jb
fisttpll
icebp
outsl
aaa
push
in
push
xor
xchg
aas
push
mov
add
sbb
ret
push
or
sub
mov
jbe
mov
xor
ja
inc
add
mov
fmuls
xchg
stos
push
push
mov
insl
jmp
mov
adc
push
push
shl
or
pusha
adc
aas
aad
add
sbb
fistpll
iret
xor
push
cmc
cmp
cld
and
jg
mov
call
cmp
int3
jge
sub
and
jmp
imul
xchg
cmp
call
mov
jle
pushaw
mov
mov
fsts
nop
mov
js
xor
and
call
shrl
icebp
xor
rcrl
xor
popf
in
fxch
fisttpll
in
imul
push
mov
lds
sub
test
ljmp
mov
addr16
mov
fmuls
inc
lock
inc
loopne
fldenv
inc
pop
stos
adc
and
inc
test
xor
xor
cmp
in
sub
sub
divb
sbb
stos
mov
lds
and
stos
sbb
jmp
ret
jecxz
js
fsub
cmc
inc
fisubrs
mov
cmpsb
movsl
rcr
cmpsb
ret
add
jl
ljmp
jle
in
sbb
loope
js
push
mov
xchg
xlat
out
xchg
test
jl
or
or
xchg
fdivl
cmp
mov
lock
xor
push
jns
aam
leave
cmp
das
mov
xchg
bound
cwtl
xchg
les
test
jne
xchg
and
push
clc
or
daa
add
add
mov
xchg
repnz
subb
andb
mov
fs
icebp
dec
unpcklps
aad
cwtl
mov
jecxz
test
aaa
ja
rcll
out
dec
daa
mov
shlb
movsl
mov
inc
jecxz
pop
ret
imul
testl
roll
push
pop
hlt
out
xchg
jnp
lods
mov
xchg
sub
dec
inc
mov
lods
jmp
adc
rclb
cmp
mov
xor
xor
adc
mov
sub
js
xor
mov
mov
jbe
dec
inc
testl
cmpsl
push
les
es
push
jns
mov
adc
add
outsl
xchg
add
ljmp
and
mov
sub
fldz
and
mov
out
sub
popf
and
imul
lret
dec
xchg
dec
mov
imul
into
cmp
bound
addr16
mov
cmp
push
push
in
sbb
pop
mov
inc
aaa
iret
jb
daa
lahf
cld
nop
xchg
ds
loop
fisubrl
fbld
int
jp
in
jne
jp
jmp
and
in
decl
jle
xchg
mov
xor
rorl
xor
shll
push
sbb
addb
js
xchg
pop
and
xor
int3
int3
jecxz
mov
lods
mov
push
xchg
leave
nop
mov
push
xor
icebp
jmp
sbb
lahf
xchg
mov
ficoms
xor
add
inc
inc
xchg
aad
mov
pop
sub
fiadds
scas
jae
jl
sti
mov
insb
sbb
fnsave
lea
pop
pop
cmc
sti
mov
fucomip
jnp
push
loop
je
out
lret
imul
fistps
shrl
frstor
mov
sub
ds
flds
push
cmp
movsb
adc
ficoml
pop
push
subl
je
pop
mov
ja
test
outsl
in
pop
or
bswap
cld
pop
dec
dec
ret
push
imul
or
lahf
lret
stos
scas
push
int3
sahf
lahf
jb
loope
mov
adc
mov
dec
dec
mov
push
aad
inc
imul
ds
hlt
adc
insb
and
shll
or
lcall
and
sub
lea
mov
test
sub
push
mov
mov
outsl
jp
leave
jo
aaa
and
or
mov
xchg
inc
push
pop
rcrb
or
mov
ljmp
rcrl
xor
inc
mov
into
movsl
add
xchg
push
ret
and
sub
call
insb
mov
subl
xchg
lret
adc
pop
mov
pop
mov
mov
jle
iret
test
out
jl
jle
cmp
fmul
cwtl
shll
leave
jecxz
stos
push
mov
dec
stos
sub
flds
scas
adc
push
push
out
jmp
nop
ret
cli
imulb
fdivp
jle
popa
cmp
xchg
mov
dec
adc
lods
sub
add
adc
and
test
scas
cld
push
dec
push
lcall
adc
bound
fmuls
mov
adc
adc
mov
sub
test
push
ret
or
add
lret
mov
inc
es
jge
xor
test
xchg
pop
inc
xchg
test
or
push
loopne
data16
lods
or
enter
out
outsb
pop
mov
dec
lcall
mov
loopne
xchg
mov
aas
stc
sub
sbb
lock
mov
dec
enter
push
pushf
fmul
fisttpll
mov
notl
mov
pop
loope
std
ljmp
and
push
or
push
lahf
mov
jne
xchg
push
int
mov
and
addr16
and
mov
aas
jecxz
mov
mov
leave
loopne
and
lods
into
mov
repz
xor
in
pushf
fstps
mov
fisttpll
xchg
push
push
dec
lcall
scas
rcrl
jmp
or
inc
mov
ja
cmpl
loop
test
pop
rcrl
insl
test
jae
adc
xor
lea
or
inc
push
push
divb
mov
cmp
push
mov
jge
nop
iret
xchg
aaa
cmp
insl
popf
adc
pop
loope
mov
push
clc
jl
cmovl
mov
inc
inc
dec
push
shll
loopne
push
jb
pop
or
sbb
mov
out
sbb
fs
mov
cmc
aam
scas
pop
mov
mov
rorl
jbe
jg
jp
es
jno
xor
icebp
js
or
rorb
mov
push
insb
push
fmulp
mov
sbb
adc
push
adc
aas
xor
stc
dec
enter
dec
mov
pushf
sbb
xchg
sbb
mov
lds
push
sbb
jns
inc
fwait
mov
mulb
imul
xor
sahf
xor
jmp
inc
jmp
jb
sub
or
mov
inc
mov
ror
or
push
cmc
and
lods
test
pusha
or
adc
add
mov
pop
lahf
in
sarl
pushf
imul
ja
and
cmp
push
jns
sub
pop
jnp
sahf
movsl
pop
lea
and
or
loop
add
or
sub
mov
idivl
and
lds
lret
sar
idivl
sub
mov
orb
fmuls
push
pusha
into
aas
dec
mov
sbb
sbb
or
push
lcall
fsubr
cmp
in
dec
inc
inc
mov
ja
mov
and
fnstsw
popa
dec
inc
inc
xor
pop
je
ds
test
loope
mov
mov
hlt
and
inc
imul
aas
xor
sbb
push
hlt
scas
cmp
stos
in
mulb
cs
ljmp
pop
mov
test
popf
aam
xchg
loopne
scas
fwait
ret
cmp
or
pop
movsb
imul
add
mov
jmp
sarb
call
dec
dec
dec
add
hlt
scas
test
add
je
dec
jmp
les
xor
pop
in
or
jmp
mov
gs
addr16
cmp
test
xchg
out
out
mov
das
lods
pop
cmp
test
push
cmpsb
scas
dec
ror
arpl
push
imul
xchg
lea
fsubrs
ja
js
pop
mov
jmp
sahf
push
inc
adc
xchg
pushf
cmpb
je
leave
mov
push
mov
in
mov
push
mov
stos
out
aad
mov
cmp
fbstp
mov
cwtl
adc
shll
xchg
mov
add
insl
adc
sbb
pop
dec
pushf
shll
out
cmp
loope
je
and
scas
pop
pop
cmp
jl
hlt
xchg
sti
cmpsb
and
cmpb
iret
out
xchg
mov
aaa
in
aad
sub
sub
or
sbb
or
insl
repnz
and
lods
pop
mov
mov
outsb
pushf
mov
sbb
mov
jle
sub
divb
dec
push
xchg
adc
adcl
inc
ret
adc
mov
xchg
or
adc
or
xchg
leave
xor
and
mov
xor
shrl
ss
add
outsl
xchg
rcrb
add
jl
fwait
jbe
aaa
addr16
out
stos
orl
mov
mov
cld
mov
adc
xchg
out
fcom
in
fwait
pop
arpl
sub
mov
mov
pop
test
les
loop
mov
dec
cwtl
aam
rcrl
ucomiss
sahf
cld
sbb
test
out
xchg
mov
mov
dec
lret
ja
push
popf
mov
pop
push
jnp
sti
inc
pop
fmulp
xor
sbb
cmpb
std
and
movsw
jle
jmp
sti
movsb
mov
cmp
xchg
mov
lock
repz
mov
xchg
in
jle
mov
movsb
inc
mov
mov
push
pop
nop
mov
fsts
push
int
mov
popf
inc
sbb
fiaddl
stc
imul
mov
mov
sbb
in
or
movsl
pusha
ljmp
aad
mov
or
adc
popf
jmp
out
xabort
xor
into
rcrl
popa
add
sub
pop
shl
mov
or
fisubrl
adc
and
or
aam
mov
xchg
push
mov
mov
jno
stos
jp
test
lods
push
xor
scas
cmpsb
jle
jmp
push
lcall
loope
adc
inc
gs
test
popa
mov
add
daa
push
lea
push
add
repnz
ror
cmpsb
lret
pop
hlt
push
hlt
cmpsb
inc
add
jne
mov
sti
test
push
ja
dec
int3
sub
lret
int
stos
dec
xchg
and
mov
and
subb
call
aas
das
cmp
xchg
sbb
pushf
mov
pop
cmp
cmp
xchg
pop
test
lahf
inc
out
arpl
fnstcw
fwait
sbb
lahf
lds
adc
mov
jbe
sub
dec
xchg
stos
stc
jne
gs
fwait
lret
std
movsb
jb
mov
mov
jle
cmp
adc
mov
rol
sub
psubw
adc
dec
sub
mov
xchg
rolb
sbb
icebp
es
dec
into
inc
sti
and
stos
mov
std
xchg
and
cmpsb
dec
lahf
es
pop
jbe
scas
inc
stos
data16
loop
lods
or
cli
sbb
push
cmpsl
cltd
fcoms
jnp
and
cmpl
sub
cmp
inc
cmp
pop
mov
fists
ljmp
mov
out
mov
enter
xchg
dec
fldt
faddl
aam
xchg
cmp
lods
arpl
mov
sub
dec
mov
xchg
cmc
je
adc
sub
sbb
jae
icebp
sub
mov
jae
xor
cmp
fwait
sub
popl
mov
fisubrs
xchg
inc
stos
mov
inc
jmp
sub
mov
add
push
add
loop
mov
nop
pushf
or
std
sub
test
xchg
ss
es
rorb
rcrl
dec
les
cmpsl
push
and
and
mov
rorb
jg
inc
add
mov
push
pop
mov
mov
test
iret
insl
mov
pop
or
and
test
lret
fstpt
pusha
enter
in
outsl
movsb
es
dec
gs
icebp
xchg
adc
push
or
ret
mov
call
ficompl
ljmp
adcl
lahf
daa
and
mov
mov
in
test
repnz
mov
flds
in
adc
ds
mov
dec
adc
dec
mov
push
cmp
clc
xchg
cmpsl
lcall
adc
roll
adc
mov
sub
aad
fsub
pop
adc
fisttpll
out
jmp
push
push
pop
jmp
aas
out
mov
fcoms
ja
or
add
je
insb
push
hlt
pop
jbe
test
xorl
jl
mov
mov
mov
and
push
sub
pusha
or
arpl
lret
jo
mov
sub
loop
adc
ret
xor
jecxz
loopne
mov
adc
adc
xlat
mov
cmp
or
mov
cld
scas
inc
xchg
push
mov
add
mov
mov
mov
inc
jge
dec
es
xchg
sbb
cmp
mov
add
shrb
dec
movsl
and
jne
fwait
test
sub
adcb
scas
lret
mov
mov
xchg
push
ss
fwait
xchg
nop
das
loop
sbb
pop
jg
aaa
in
outsb
in
mov
popf
rol
enter
jg
mov
fwait
into
test
inc
loop
dec
and
leave
mov
clc
fistpl
enter
daa
jecxz
add
lret
jbe
in
mov
push
push
pop
fistl
sub
in
and
dec
cmpsb
test
sub
cmp
das
out
jmpw
inc
ficompl
je
and
gs
rcll
sub
mov
aad
push
pop
sahf
sti
movb
mov
push
scas
adc
jg
mov
pop
lods
jnp
stos
mov
fadds
adc
cmp
jle
ljmp
incb
adc
xchg
repnz
outsl
fnsave
test
movsl
subb
in
imul
sahf
mov
push
sub
dec
psubq
call
idivl
add
mov
push
ret
and
out
filds
aam
xchg
jle
inc
and
xchg
and
cmp
sbb
push
mov
inc
pop
xchg
and
adc
add
xchg
push
dec
lret
decl
cs
repnz
mov
jo
push
idivb
lahf
add
mov
addr16
fisubl
test
push
sti
xor
jns
add
test
hlt
lret
sub
clc
cli
inc
push
jl
pusha
stos
fistpl
push
xchg
mov
adc
subl
int3
jecxz
ja
push
or
mov
dec
pop
inc
mov
pop
testb
sbb
ljmp
push
push
cmp
mov
lret
popa
mov
stos
cli
daa
test
rorb
mov
subl
push
sub
inc
in
cmpsl
fidivl
cmp
cltd
xlat
adc
fwait
jb
in
add
sahf
insl
xchg
sbb
stc
adc
adc
push
sahf
pop
shrb
shl
inc
push
pop
test
adc
sub
sahf
jnp
insl
mov
mov
sti
and
mov
mov
adc
ret
out
or
clc
inc
pop
mov
lret
loop
jg,pn
cmp
test
in
jmp
push
popf
fildll
repnz
cmp
idivb
jbe
cwtl
pop
repnz
or
and
sbb
jmp
popl
mov
xor
mov
xor
sub
xchg
and
ja
push
mov
je
or
xchg
mov
push
mov
mov
adc
test
sahf
jno
push
mov
or
js
cmp
cwtl
mov
js
bound
sub
lock
int
jo
js
adc
ret
mov
xchg
cmp
subl
ret
dec
xor
lods
jbe
jb
push
pop
xor
xor
rcrb
push
pushf
clc
sbb
js
fsts
mov
pusha
xor
lret
xchg
adc
mov
ret
xchg
test
js
loopne
popf
in
mov
in
xchg
cmp
es
mov
push
xor
sub
or
add
lods
pop
out
cmpsl
nop
mov
cmp
inc
adc
jae
cmp
mov
dec
test
fs
je
add
test
repz
push
xchg
faddl
fsubl
or
loop
mov
je
xchg
cltd
add
adc
movl
in
aas
in
mov
fwait
push
aaa
pop
mov
aaa
push
aad
enter
insb
adc
fidivs
push
inc
xlat
mov
mov
out
test
call
xchg
pusha
push
jo
jecxz
xchg
nop
lret
pop
leave
cmp
out
scas
stos
insl
movsl
xchg
inc
xchg
xchg
pop
mov
push
loopne
mov
mov
adc
cmp
xchg
gs
inc
fstl
sti
sbb
ja
mov
xchg
adc
aas
mov
in
gs
stc
in
xor
xchg
rclb
jmp
pusha
pushf
push
inc
adc
in
sahf
sbbl
stos
stc
sbb
cmp
push
inc
cmp
outsb
or
sub
movsb
mov
insb
inc
ret
cwtl
sub
xchg
hlt
mov
add
pop
sbb
cwtl
jb
lret
dec
sarb
mov
arpl
mov
rcrb
int3
and
ja
lret
push
sub
cmp
mov
jl
mov
out
cld
das
ljmp
sub
pop
stos
dec
pop
push
jg
mov
push
test
mov
jge
pop
imul
and
ret
push
jge
add
cmpsb
push
sub
cmpsb
cmpsb
scas
dec
mov
lock
xlat
xor
xchg
mov
loopne
ss
loopne
push
repz
divl
fnstsw
cmp
mov
sub
addb
pushf
repnz
pop
test
shlb
inc
ret
mov
cwtl
xchg
mov
xlat
xor
mov
lds
rcll
shr
std
add
ret
mov
std
dec
fsubl
sub
lods
jmp
loopne
pop
enter
scas
xchg
jo
movsb
enter
mov
add
mov
ja
xchg
les
mov
es
and
gs
sahf
ja
sbb
cld
bound
xlat
and
pop
leave
inc
inc
push
lahf
jbe
sub
test
push
sub
test
dec
daa
xchg
push
cli
stos
sbb
inc
movsb
sbb
jno
daa
mov
sbb
adc
mov
clc
enter
add
dec
fdivrl
fstpl
mov
cli
cmp
sub
data16
push
fistpll
mov
jno
sub
xchg
xchg
adc
or
sti
mov
punpcklwd
add
mov
pop
icebp
push
sbb
jbe
or
push
inc
inc
insl
push
xor
add
push
push
out
insb
pop
sub
aaa
mov
xchg
cli
mov
cmc
stos
adc
fdivs
fmull
rsm
filds
xorb
imul
ficompl
lds
std
dec
cmp
xor
iret
mov
loope
sub
dec
insb
mov
adc
mov
sbb
aaa
jbe
mov
and
mov
popf
mov
and
scas
and
fisubl
cmpsl
imul
outsl
cli
stc
out
and
loope
sbb
push
fwait
pusha
lcall
pop
dec
pop
enter
outsb
scas
ret
cmp
mov
lret
add
or
add
push
test
insl
ret
inc
lods
inc
sbb
mov
jmp
sub
addr16
in
data16
add
stos
dec
push
mov
notb
pop
movsb
adc
repnz
jns
mov
in
sbb
pop
dec
int3
or
jecxz
inc
insl
movsl
and
cmp
sarl
lret
adc
add
xchg
sbb
push
sbb
jmp
lcall
mov
cmpsl
aam
mov
and
out
sub
and
dec
xchg
and
cmp
or
fdiv
inc
and
push
adc
shlb
rcpps
mov
out
add
adc
aaa
jnp
sarb
jno
and
cmc
pusha
cwtl
loop
sbb
or
loope
icebp
push
inc
mov
inc
ljmp
movsb
fiadds
pop
push
popf
cmpsl
push
negb
and
cwtl
stc
push
inc
adc
dec
fisttps
sbb
cmc
scas
test
inc
mov
and
daa
jge
cmpsl
lods
xor
xchg
sbb
and
adc
mov
mov
mov
push
lea
jnp
dec
xlat
xchg
jecxz
gs
arpl
jle
loopne
pushf
dec
shlb
js
mov
hlt
add
call
jp
hlt
cmp
push
pop
sub
mov
mov
je
jl
ret
sbb
push
out
mov
mov
cmpsb
repnz
add
imul
lods
inc
sbb
or
notl
lahf
cwtl
mov
out
sarl
mov
mov
daa
jns
test
fs
insl
xchg
jns
sub
stc
adc
fwait
mov
jl
fisubl
lahf
lret
ret
inc
fs
pop
mov
cmc
cs
pop
mov
mov
movsb
dec
and
mov
push
jp
icebp
call
xchg
loope
dec
cmpsb
ljmp
adc
repnz
scas
mov
jne
out
jge
ficompl
mov
test
insb
jge
gs
imul
sbb
or
subl
in
int
add
xchg
cmp
hlt
sbb
in
repz
pop
mov
decb
jge
movsl
sub
fwait
iret
inc
xchg
popa
jnp
or
xchg
pop
mov
mov
xor
fsubs
jmp
push
and
jl
adc
sbb
xor
imull
cli
loop
pop
lcall
add
add
out
sbb
or
shlb
outsl
fisttps
mov
jnp
hlt
push
pop
sahf
mov
inc
mul
lret
push
int3
xchg
fstl
stos
mov
cmp
mov
clc
inc
sti
in
push
jmp
inc
inc
in
and
jmp
movsl
jbe
cmp
cs
pop
cmp
pop
lret
push
push
ss
lods
subb
xchg
xor
add
inc
mov
mov
or
adc
sub
xor
pop
je
mov
inc
lods
fwait
loope
in
and
cmp
mov
push
add
add
outsl
stos
ja
clc
xchg
pop
stos
hlt
jns
mov
into
ljmp
xchg
mov
add
push
xor
sbb
icebp
jb
xchg
push
repnz
sbb
outsl
fcmovnu
mov
push
test
dec
mov
jnp
xor
jae
cli
dec
adc
sub
jge
pop
mov
adc
dec
or
jmp
enter
xor
jle
jno
add
add
pop
adc
pop
subb
and
dec
test
movsb
mov
movsb
int3
xchg
and
jecxz
or
jg
loope
add
or
xchg
lds
xor
call
sbbb
xor
out
sbb
push
xchg
addr16
push
xchg
cli
push
iret
je
cmpsl
sub
xor
dec
call
out
push
add
jl
lret
mov
pop
pop
xor
or
ret
add
fs
mov
jne
adc
dec
repz
or
mov
xchg
test
out
cs
mov
cmp
ss
sbb
mov
push
or
jmp
xchg
imul
enter
xchg
push
in
imul
adc
scas
push
inc
cmp
jmp
neg
rorb
je
cmpsb
lcall
cmp
das
mov
es
pop
xchg
add
pop
push
ja
int
xchg
bound
inc
int3
mov
test
sub
cld
sbb
pop
jb
mov
shll
repnz
inc
xorb
call
ss
push
xor
jne
movsl
adc
testb
test
das
lret
mov
dec
in
cmpsl
mov
sbbl
mov
pop
pop
jmp
fs
jbe
jno,pn
or
or
cli
add
pushf
sbb
jnp
nop
jmp
push
aad
loop
mov
push
inc
outsl
cs
insb
mov
xchg
ja
scas
sub
push
push
outsb
jbe
stos
movsl
sub
scas
sub
xchg
jne
jno
ficomps
fisubrs
out
ja
ret
sub
add
out
sbb
jno
test
fcoml
js
pop
mov
pop
movsl
repz
std
out
stos
push
fisttpl
sahf
cmpsl
das
xorb
push
mov
cvtdq2ps
or
push
push
cmp
in
inc
xorl
xor
gs
dec
push
push
mov
mov
shlb
test
or
add
repz
or
and
popf
jmp
add
mov
push
push
inc
jo
xor
orl
add
daa
roll
lods
sahf
pop
push
xchg
sti
cltd
clc
and
or
xor
in
xor
fiaddl
lahf
pop
sub
sub
adc
xchg
push
out
mov
xchg
mov
xor
ds
lds
dec
lock
mov
repz
push
shlb
jno
imul
out
pop
pop
sub
nop
call
lock
fsubrl
fdivr
outsb
cmp
mov
sbb
sub
out
icebp
sbb
xchg
push
in
pop
bound
mov
sub
ficompl
fidivrl
and
fidivrl
gs
cltd
lret
movsb
fcmovbe
push
out
xlat
clc
xchg
and
mov
addb
xchg
pop
mov
aaa
cmp
es
jge
mov
fiaddl
fdivs
or
nop
in
jae
shr
int3
addr16
mov
pop
arpl
das
nop
jl
push
mov
cmp
nop
scas
pop
adc
aas
xchg
les
mov
in
aad
mov
cltd
cmp
xchg
push
lcall
push
jge
and
mov
out
push
js
test
pop
sbb
xchg
xor
xor
mov
inc
jo
scas
andb
cs
sti
cmp
sbb
ds
xor
pop
mov
mov
mov
adc
pushf
fldt
cmp
adc
fsub
add
adc
cmc
stos
out
aad
push
mov
and
adc
out
scas
xlat
xchg
adc
pushf
mov
sbbb
mov
mov
mov
mov
push
xchg
repz
fdivl
call
jecxz
lcall
ds
sbb
jae
test
popa
clc
or
sub
repnz
out
dec
aas
sub
jmp
xor
cmpsb
dec
cltd
mov
sbb
pop
dec
fs
xor
mov
xor
out
in
rorb
mov
xchg
jmp
insl
adc
fdivrp
inc
aaa
jnp
test
pop
dec
cmp
push
clc
adc
and
pop
fstpt
loope
loope
jp
rcll
hlt
aad
flds
lds
cmp
aas
sub
adc
adc
popa
jns
call
xchg
and
ret
loope
lcall
out
xchg
adc
push
js
xlat
mov
mov
bound
xchg
rcll
pop
shrb
push
sbb
cmp
rcll
jo
stos
or
dec
or
pop
into
lret
dec
inc
mov
enter
pop
inc
xlat
lahf
cli
or
push
es
dec
mov
clc
mov
fdivs
out
inc
ret
push
ss
sbb
cmp
mov
push
hlt
vfmsub132pd
insb
mov
aad
pop
xor
push
cld
ret
jp
adc
sar
rolb
pop
adc
lahf
movsb
push
push
js
icebp
mov
push
push
aas
outsb
add
shrl
jecxz
jecxz
fcompl
adc
mov
das
xchg
aaa
xchg
sub
mov
sbb
or
repz
push
xor
fcoms
dec
inc
shlb
cmp
das
lea
je
adc
repnz
xor
xor
inc
imul
mov
cmp
push
hlt
dec
cmpsl
fildl
popa
xchg
cmpsb
dec
subl
xor
push
xlat
or
xor
pop
test
lds
sbb
sbb
push
cmp
cmp
pop
test
mov
inc
jo
jb
out
aad
pop
adc
sbb
push
dec
fstpt
rorl
jmp
rol
cltd
adc
sub
add
ja
lods
dec
loop
mov
lcall
mov
push
loope
sar
jae
sub
leave
push
addr16
js
jne
xor
dec
test
xor
or
cmp
rorl
cmpsl
decl
aaa
mov
cli
xchg
push
or
sub
fcompl
les
adc
adc
fs
push
inc
cmc
xchg
adc
mov
xor
ret
or
test
xchg
negb
lea
jmp
mov
sti
push
or
jnp
pop
dec
cli
add
cmc
jno
loop
clc
mov
mov
lret
jns
jp
pushf
inc
xor
subb
clc
daa
xchg
mov
test
lcall
in
push
xchg
inc
sbb
jbe
sbb
push
shl
jecxz
popf
mov
jns
out
and
mov
mov
dec
cld
mov
push
cmp
dec
ds
jno
sbb
cmc
jae
fildl
andb
dec
adc
test
lcall
imul
mov
and
inc
sahf
inc
fisubrs
sbb
mov
jmp
in
sub
and
push
movsb
decb
scas
sbb
jg
ret
stc
mov
fld
xchg
ja
mov
mov
mov
add
xlat
mov
lahf
cwtl
cmp
ljmp
enter
mov
adc
xlat
jle
ds
outsb
mov
inc
adc
adc
and
inc
sbb
jl
cmp
pop
in
xchg
std
lds
dec
xchg
rcrb
adc
push
ja
icebp
adc
push
or
xor
cmp
xchg
sbb
loope
mov
mov
fists
shr
dec
mov
add
jle
fists
xor
sub
rcrl
or
cmc
jmp
mov
mul
push
cmpsl
xlat
mov
inc
mov
adc
mov
mov
sub
xchg
dec
pop
adc
mov
dec
push
sbb
incb
sub
shrb
in
jb
mov
jmp
out
or
jl
mov
clc
cmp
adc
je
add
dec
and
adc
and
push
out
pushf
icebp
and
out
mov
cmpsl
lcall
cmpsb
mov
mov
and
mov
sub
xchg
movsl
push
in
popf
ss
rorb
imul
frstor
xor
mov
pop
les
and
andb
outsl
test
mov
push
add
mov
ss
jge
loopne
dec
les
fucomip
adc
push
mov
stos
and
mov
dec
jmp
js
sbb
jecxz
lods
push
mov
jge
pop
and
or
int
lock
test
jecxz
push
and
inc
mov
mov
xchg
jnp
adc
sbb
sbb
xchg
popa
popa
xor
cwtl
xor
fstpt
pop
jb
repnz
into
fcomps
jl
pop
aad
cs
sbb
hlt
xlat
push
ds
push
imul
sub
fadds
ja
fwait
insb
movsb
ret
cld
sbb
pusha
std
icebp
mov
das
in
dec
out
insl
loop
aam
adc
jmp
mov
ljmp
mov
and
lods
mov
add
sbb
lods
sub
sahf
inc
jl
inc
xor
stc
pop
dec
mov
ljmp
adc
cmpsb
xchg
lea
mov
inc
jg
test
outsb
and
adc
dec
ret
call
xlat
lods
aas
adc
mov
mov
mov
data16
hlt
arpl
sbb
lock
cltd
push
adc
jnp
xchg
rorb
cs
ss
sbb
addr16
gs
out
repz
aam
cs
xchg
push
mov
inc
loope
and
div
int3
mov
cmp
mov
adc
mov
lret
rcrb
xchg
fidivl
icebp
out
dec
xchg
xchg
pop
mov
aam
cmpsl
or
insb
push
out
dec
fucomp
stos
ljmp
lods
pop
lock
sti
fisttps
and
test
mov
int3
mov
adc
add
mov
repnz
inc
xchg
push
and
nop
mov
inc
push
add
jbe
push
scas
les
out
mov
and
adc
cmpsb
cmp
mov
xchg
js
adc
aaa
sti
inc
int
xor
roll
mov
or
ss
out
or
filds
jge
lock
pop
xlat
lea
jge
nop
xor
jg
or
cmc
pushf
mov
ret
mov
mov
push
dec
outsb
cs
jp
js
mov
push
adc
loope
ficompl
lret
jnp
pop
mov
ja
scas
aad
xor
lea
inc
mov
mov
je
js
ret
movzwl
dec
inc
das
pop
inc
fadds
aad
int3
and
mov
lcall
in
in
loopne
jns
mov
enter
imul
push
inc
repnz
cvttps2pi
and
loopne
mov
arpl
gs
stc
aaa
push
iret
dec
subl
outsl
jg
popf
xor
repz
popa
jo
lret
mov
dec
sti
mov
pop
insl
mov
in
gs
add
push
test
gs
xor
imul
test
int3
arpl
adc
stos
xor
mov
adc
aaa
es
add
stos
test
sub
mov
mov
lret
xor
push
das
out
gs
subl
mov
cwtl
ds
mov
mov
mov
mov
mov
dec
cmc
jp
loop
push
test
pop
xchg
push
in
and
mov
sti
pop
loope
outsb
adc
mov
int3
mov
stos
lock
mov
and
in
mov
lret
xchg
sti
sub
cmp
mov
xor
iret
cmp
fisttpl
bound
mov
mov
or
or
add
pop
push
jmp
cld
xor
jne
out
mov
shrb
add
push
aas
fists
add
xchg
mov
aas
dec
mov
mov
fwait
push
aas
imul
sahf
mov
arpl
nop
lcall
mov
dec
mov
inc
into
subb
or
insl
sbb
push
xor
movl
dec
xchg
sti
test
cmpsb
mov
ret
leave
outsl
pop
movsb
inc
cmpsl
mov
cmpsb
faddl
and
sub
and
enter
adc
xchg
outsb
clc
inc
jp
push
xchg
fidivrs
jp
clc
pop
mov
orl
mov
cwtl
pop
xchg
dec
cmpl
pop
mov
push
test
lcall
mov
add
pop
repz
xchg
sub
push
movsb
lea
hlt
sbb
xor
adc
cmp
mov
out
bound
ds
pop
jb
pushf
dec
xor
cmpsl
lock
push
jno
bound
mov
pop
loopne
adc
adc
repz
movsb
into
mov
push
xor
push
test
inc
add
mov
mov
mov
fsubl
loopne
gs
dec
fsubs
push
bound
jle
sub
rcrl
sbb
jb
dec
pop
jns
mov
scas
lods
push
push
out
inc
lds
jnp
in
gs
xchg
sub
insb
cs
jne
sub
out
mov
sub
xchg
in
sbb
xchg
rcll
cmp
fwait
into
into
mov
pop
xchg
mov
and
mov
push
clc
mov
test
jae
outsl
adc
mov
xchg
jo
xor
mov
mov
and
enter
cltd
jns
mov
cmp
pop
lea
ficomps
and
or
fcmovbe
fldenv
or
mov
sub
mull
scas
xchg
fwait
inc
push
lret
int
sbbl
mov
iret
push
and
outsb
jnp
scas
je
in
cmpsl
mov
dec
ss
ja
xor
sub
icebp
test
fcomps
pop
in
popa
pushf
jg
mov
push
cmc
sub
xchg
dec
xchg
loopne
out
jne
adc
dec
dec
xchg
outsl
push
xlat
notl
mov
rcrb
inc
push
add
jbe
cld
leave
inc
xchg
jno
shl
dec
test
stos
jns
cld
nop
icebp
mov
mov
dec
ret
jno
into
fildl
jle
lds
xor
fwait
cmp
add
loope
mov
mov
fldt
mov
xor
loope
or
out
pop
dec
inc
test
lret
cmc
xchg
fwait
jnp
sahf
pop
dec
or
add
add
test
sub
sbb
rcr
sub
jp
push
popa
inc
stc
mov
lock
jne
test
inc
mov
jg
add
and
pop
mov
xor
rcr
enter
aad
pop
pop
mov
icebp
push
repz
push
into
test
sahf
mov
imul
iret
add
and
dec
mov
inc
inc
insb
arpl
lock
or
movsb
inc
mov
std
add
lcall
adc
jge
adc
cs
stos
lret
mov
enter
bound
es
or
xchg
add
andl
test
mov
inc
rorl
cwtl
inc
pusha
mov
push
xchg
sub
vmovss
stos
int3
orl
enter
xor
stos
jb
cltd
mov
mov
inc
cmpsl
pusha
int
jp
sbb
mov
int3
out
cmpsl
or
mov
pop
push
push
pop
int
and
mov
add
clc
mov
mov
sahf
fsubl
push
jl
mov
pop
daa
cmpsb
mov
pop
leave
dec
shl
push
adc
nop
outsl
add
stos
enter
adc
subl
hlt
jecxz
inc
lcall
stos
xor
push
dec
sbb
inc
add
mov
xchg
std
dec
loopne
out
dec
shrl
adc
ret
or
xor
xorl
and
es
jmp
pop
cmp
aas
xor
pop
or
fsub
pushf
sbb
test
push
add
dec
fs
hlt
int3
adc
push
outsl
mov
adc
sbb
punpcklwd
stos
repz
inc
dec
mov
push
lea
sar
popa
out
sahf
cmp
int3
xor
jbe
mov
or
mov
pop
xchg
mov
add
sub
dec
test
leave
mov
mov
aam
sarl
sbb
mov
call
dec
add
int3
dec
mov
push
shrl
cmpsb
fcoml
aas
js
mov
pushf
cld
out
in
xchg
add
jg
push
imul
es
leave
jns
jnp
movsb
mov
mov
pop
and
mov
std
jne
test
aad
pop
loop
jp
fstl
pop
lret
xchg
xchg
ffree
push
xchg
sub
std
mov
ja
test
or
out
daa
mov
sub
xchg
inc
test
lds
test
repnz
pop
mov
mov
outsl
lcall
testb
je
and
xchg
enter
out
adc
sub
test
sbb
jae
push
dec
mov
ja
pop
mov
cmp
mov
push
and
adc
aam
insl
cmp
pop
or
movsl
add
pop
stc
sbb
ss
mov
pop
scas
rolb
sbb
popa
stos
mov
outsb
dec
sar
je
inc
and
rclb
test
dec
lods
in
fucomi
pusha
and
jmp
pop
jno
mov
psubusb
mov
call
sbb
mov
jge
test
sub
jb
stos
pushf
sti
and
mov
idivl
push
aad
or
or
sbb
or
bound
jns
sbb
ljmp
in
ljmp
dec
xchg
popf
jmp
fisttps
js
xor
fmuls
push
add
subb
lock
loope
movsb
or
xlat
or
xchg
in
dec
sbb
pop
repz
or
rcrl
adc
mov
push
jnp
fldl
ror
dec
sbb
push
mov
mov
and
outsl
stos
pextrw
aam
inc
push
fbld
and
movaps
cmpsb
sbb
loopne
adc
add
dec
push
cmp
pop
in
xlat
sbb
cmp
lret
in
mov
in
push
xor
sub
adc
or
icebp
test
push
adc
adc
add
jb
inc
fwait
scas
mov
mov
fwait
and
xchg
daa
jmp
dec
in
imul
xchg
pop
sti
jmp
into
stc
test
or
xchg
xlat
mov
push
push
or
in
cmc
dec
popa
popa
or
insl
or
dec
sarl
push
mov
repz
and
cmp
lods
andl
shlb
adc
xchg
stos
mov
mov
cmp
jle
ljmp
aaa
outsb
xor
pop
insl
xchg
pop
and
jno
jle
call
cmp
lea
je
ja
or
jge
mov
lahf
add
dec
dec
xchg
pushf
sahf
mov
repz
xchg
js
shll
mov
xor
in
outsl
mov
xor
mov
xchg
cmp
in
sub
xchg
adc
pop
push
test
das
pop
arpl
pop
lret
inc
adc
push
repnz
mov
outsl
scas
dec
call
pop
mov
jne
outsb
je
sub
test
adc
mov
popa
xor
inc
stos
popf
das
add
out
std
sub
xor
pop
pop
hlt
cmp
scas
ficoms
dec
pop
lret
adc
daa
push
and
mov
negb
fadds
and
aam
pop
add
inc
inc
insl
lahf
xchg
cwtl
cli
jae
inc
ret
out
fsubrl
push
add
mov
jge
lcall
jns
xchg
jb
movsb
mov
dec
xchg
lea
arpl
sub
js
hlt
fs
ja
jl
or
inc
cwtl
jl
mov
and
loop
mov
test
pop
shll
mov
push
add
mov
and
cmp
adc
jae
push
cmp
dec
mov
dec
sbb
cmp
cmc
sbb
outsb
mov
lock
cmp
inc
negb
test
bound
push
cmp
or
imul
stos
lods
in
xor
pop
xor
inc
xlat
popf
and
jb
into
cmp
pushf
lods
test
sub
fwait
xchg
test
pop
jle
jno
push
stos
out
inc
xor
lock
testl
xor
and
mov
mov
xchg
loope
rcrl
and
imull
cltd
or
repnz
subw
push
xchg
or
inc
cwtl
and
inc
imul
sahf
out
ja
orl
pop
jecxz
push
aad
add
loopne
outsl
ljmp
and
jmp
pushf
in
aas
jecxz
ds
xlat
pop
mov
add
or
mov
scas
push
lea
pusha
dec
js
xchg
cltd
push
repnz
jo
sbb
aas
add
xchg
fadds
idivl
or
out
xchg
mov
fwait
or
xor
popf
pop
lock
or
pop
imul
sub
add
cmove
pop
addb
pop
cmp
jno
pop
push
xor
in
stos
aad
fndisi(8087
test
mov
xor
pop
roll
mov
sub
sub
std
frstor
sub
xlat
push
push
icebp
mov
mov
or
add
or
pushf
ret
jl
loop
test
or
jecxz
lret
jb
inc
mov
sub
repnz
cmp
dec
xchg
jo
push
cmpsl
mov
movsb
sbb
pop
sti
test
mov
jns
push
dec
mov
push
int3
jae
sub
ja
mov
sub
adc
dec
adc
lds
mov
mov
fsubp
push
adc
jo
aam
les
fldt
jmp
shll
pop
add
daa
jle
loopne
jg
repnz
inc
pop
cld
cld
xchg
fwait
test
sarl
lods
insl
imul
inc
jnp
ljmp
outsb
jecxz
jne
ljmp
mov
inc
rorb
jg
mov
bound
movswl
int
repnz
and
mov
je
fs
mov
aas
imul
popa
pop
jle
js
jmp
lds
jno
adc
jl
mov
cld
mov
into
dec
pop
xchg
sbb
mov
push
jge
pop
cmp
push
insb
lods
int
pop
cwtl
inc
jbe
sbb
inc
rcll
ror
pop
sbb
jns
cmc
mov
lret
nop
add
insb
jnp
xlat
mov
repz
mov
mov
jmp
frstor
and
hlt
in
ret
lcall
inc
mov
mov
jecxz
sbb
aaa
push
dec
ds
and
je
rcl
mov
push
fisubrs
adc
pop
xor
sbb
stos
cmp
inc
ss
loope
std
fwait
mov
xchg
popf
fidivl
sub
sub
lcall
cmpsb
sbb
push
ret
xchg
out
shlb
imul
and
adc
jp
jl
mov
pop
inc
scas
icebp
imul
clc
jmp
cltd
sub
insl
arpl
popa
lods
xchg
mov
jle
negb
xor
inc
mov
add
pop
mov
mov
mov
mov
or
icebp
mov
or
and
mov
cmp
jmp
bound
into
pushl
xchg
sbb
in
insl
aad
andb
outsb
mov
into
fnstenv
ret
inc
xor
adc
pop
sub
jge
mov
popa
stc
rclb
push
inc
data16
dec
dec
in
inc
add
mov
test
pusha
outsl
lds
into
xchg
mov
mov
jno
ds
pop
inc
mov
jp
out
rclb
mov
loop
mov
mov
sarl
xlat
pop
mov
adc
adc
xor
popa
leave
lock
dec
inc
inc
jl
in
cmpsl
ja
addr16
xchg
cmp
sbb
sbb
mov
pop
dec
out
cmpsl
shll
in
push
movsl
jg
imull
push
lret
sbb
out
jg
and
and
andb
stos
in
ljmp
push
sbb
inc
add
lcall
stos
test
adc
push
fisubrl
aas
scas
xchg
hlt
ljmp
xor
xchg
push
cld
mov
jnp
cmp
fsubrl
jge
push
dec
jae
fildll
or
cmp
dec
add
push
in
xchg
or
mov
sbb
add
test
add
ja
std
sub
in
xlat
sti
and
imul
cmp
leave
cmc
incl
loopne
xor
mov
out
sub
test
test
sahf
lds
dec
cli
jae
jns
mov
lret
dec
stos
cmp
popf
dec
adc
stos
and
dec
jne
pop
or
inc
je
mov
out
sub
cmp
jle
pop
mov
ljmp
xor
popa
into
cmp
subl
dec
pop
or
jae
addr16
das
repz
jns
test
cmp
sbb
push
sub
and
fwait
arpl
sub
ja
aad
shl
mov
ret
fistps
inc
insl
aas
imul
rcrb
xor
xlat
repz
int3
push
in
xchg
and
inc
or
cmc
movsb
stc
push
or
test
hlt
mov
mov
jo
les
fidivrs
and
sbb
cld
or
call
out
push
inc
cmpsb
in
and
inc
xor
or
dec
fcmovnb
push
mov
movsl
test
cli
or
mov
or
adc
sbb
mov
mov
push
and
sub
pop
stos
inc
adc
lahf
ja
cmp
stos
fdivl
adcl
loopne
jbe
push
mov
daa
xchg
subl
xchg
mov
loope
cmc
jb
add
fnsaves
in
or
xchg
repz
fstpt
in
test
dec
in
lea
or
iret
mov
mov
jle
cmp
outsb
addb
pop
pop
cmp
iret
push
mov
les
adcl
jecxz
dec
sbb
pop
inc
mov
jecxz
mov
and
mov
jne
pop
jo
lds
sub
push
test
sti
push
xchg
pop
dec
outsb
cmp
inc
call
pushf
xor
dec
mov
lods
bound
mov
test
idiv
cmc
aam
pop
fnsave
push
sbb
movsb
or
sysexit
sbb
pop
xchg
add
pop
push
ljmp
push
scas
adc
out
fwait
test
mov
ret
shll
mov
lret
dec
push
test
outsb
lret
bound
fsub
push
dec
mov
dec
out
cmc
int
stos
pop
push
inc
mov
int
jae
mov
pop
mov
adc
std
mov
inc
sbb
dec
mov
repnz
adc
push
in
aam
mov
out
pop
inc
xchg
sub
pop
mov
pop
lcall
mov
nop
popa
cmp
in
ffree
and
jp
stos
dec
dec
add
cltd
mov
rclb
pop
adc
addr16
push
cmp
xchg
scas
outsl
dec
add
jge
notb
push
ss
add
pop
lods
sbb
sbb
cwtl
movsb
pushf
xchg
xchg
repnz
fyl2xp1
fldl
data16
data16
push
fdivrs
repnz
sbbl
mov
aaa
cmp
mov
jne
lock
fs
iret
mov
pop
sbb
mov
jo
clc
lods
adc
cmp
mov
rcl
call
jle
add
fiadds
jge
lods
push
cltd
int
out
loop
fs
adc
repnz
rolb
xchg
rol
fimull
inc
pop
and
aad
mov
icebp
jo
in
jmp
sarb
and
shlb
jno
rcll
adc
inc
jmp
les
and
imul
in
sbb
dec
in
jbe
and
enter
mov
mov
test
je
xor
adc
loopne
xor
jae
int
mov
repnz
sub
rorl
movl
mov
mov
inc
test
jo
fldl
add
dec
lret
xchg
dec
dec
fsubrl
sbb
inc
fsubrl
sbb
shlb
hlt
adc
mov
mov
jecxz
inc
test
test
mov
cmpsl
sbb
ret
xchg
lea
mov
add
mov
xchg
out
xchg
out
xor
cmp
add
lea
mov
loope
adc
xor
mov
popa
pop
or
adc
movsb
roll
ds
sub
ljmp
mov
pop
inc
xchg
sarl
push
es
jg
dec
es
movsb
imul
mov
push
cmp
add
adc
mov
jl
fbld
lret
push
popa
cmp
fdiv
mov
dec
adc
negb
sarl
jne
jae
xchg
stc
jle
jno
outsb
dec
xor
jne
sub
icebp
leave
pop
pop
pop
cmpsl
test
xchg
dec
mov
xchg
pop
xor
jg
jnp
stc
or
mov
jb
fwait
enter
xchg
mov
xchg
mov
mov
sub
jbe
add
inc
mov
push
and
dec
dec
add
in
mov
pop
out
sarl
arpl
mov
nop
fdivs
cs
push
dec
idivl
inc
cmp
jp
and
in
jmp
cmp
mov
jae
das
sub
fisubrs
xlat
sub
out
and
imul
mov
ja
divl
addb
pop
mov
jmp
stos
out
xor
dec
mov
add
push
jo
sbb
int
xor
in
add
mov
arpl
jne
mov
fnstcw
into
ja
sub
and
sbb
mov
fdivp
sbb
mov
out
sbb
dec
notl
test
sub
rcrb
sub
mov
xor
outsb
fisttps
dec
das
scas
inc
adc
dec
jo
xor
repz
decl
stos
test
pusha
cmp
in
test
and
push
scas
xchg
out
adc
pop
ret
les
mov
das
mov
mov
insb
and
pop
push
push
imul
or
in
and
and
pop
ss
mov
cmp
push
mov
sbb
mov
inc
jmp
ss
jle
inc
cli
mov
jl
stos
popf
repnz
addr16
cmpl
cltd
ss
cld
sbb
fdivp
jo
stos
xor
xor
pop
mov
fistpll
outsl
mov
mov
pop
jl
cmpsb
push
addr16
lods
cmpsb
mov
xor
push
push
add
mov
int
pushf
jl
stc
test
sub
jns
pop
and
ljmp
jno
pop
fadds
add
lds
rol
or
divl
test
mov
mov
and
xor
cmp
mov
cli
call
jle
pop
shlb
adc
fs
xchg
call
adcb
movsb
mov
stos
push
in
sti
dec
inc
outsl
or
shl
addr16
mov
test
ret
testb
push
sub
outsb
xchg
gs
xor
in
mov
push
fstps
test
loop
ds
and
mov
lea
lahf
adc
or
out
and
sbb
jp
icebp
cmp
jbe
test
mov
pop
ds
push
sbb
push
xor
mov
lea
add
jae
inc
cmp
or
scas
fisttps
es
out
jl
hlt
xor
xchg
test
pop
lcall
push
mov
dec
ret
push
dec
mov
std
pop
inc
and
or
and
mov
in
mov
sub
enter
stos
shlb
pop
scas
aas
cs
xor
mov
inc
shlb
loop
mov
fwait
andb
mov
add
jb
mov
fwait
repz
cld
push
mov
fcmovne
fldt
stos
mov
push
sbb
cmp
scas
add
adc
movsl
push
sub
add
push
jp
in
arpl
in
gs
push
mov
jp
xchg
ficomps
jl
lret
pop
sti
pop
pop
mov
cmc
xor
test
std
xor
loopne
popa
fucomi
lock
mov
jmp
loopne
adc
rorb
mov
hlt
dec
fs
xchg
jge
in
filds
insl
ja
leave
js
loope
and
out
cmc
into
ljmp
daa
pop
mov
je
jbe
sub
xchg
mov
mov
into
addl
lcall
mov
mov
sbb
test
xor
push
fwait
xchg
rcr
popf
ret
ret
fs
fistpl
add
in
push
mov
cltd
adcb
or
aas
sbb
mov
je
push
lock
int3
and
insb
mov
xorb
cmpsl
pushf
mov
mov
xlat
xor
and
les
xor
dec
adc
in
sti
dec
adc
or
outsl
inc
std
sahf
sub
iret
sarl
sub
dec
add
adc
rolb
cltd
pop
inc
adc
pop
adc
imul
lds
aaa
sub
dec
cmpsb
push
sti
add
xchg
push
push
cmpsl
xorl
inc
daa
dec
outsb
xchg
aas
movsl
dec
or
cmp
fildl
jae
rcr
jne
lahf
lods
sbb
cld
push
cmp
cmp
jbe
pop
loop
test
aad
push
inc
rcrl
adc
scas
mov
jae
push
or
pop
insb
and
loop
xchg
rep
movsl
add
mov
cmp
repz
movl
repnz
push
dec
jle
mov
int
das
mov
push
test
xchg
adc
mov
mov
je
aad
leave
imul
xchg
pop
loopne
xor
jnp
int
add
rcrl
add
lods
in
lods
repz
push
aaa
adc
insl
adc
or
dec
jb
push
addb
jb
mov
sub
push
dec
sahf
ja
xchg
jb
aaa
and
inc
jg
es
add
sub
push
outsb
push
pop
nop
enter
adc
int
jle
aad
stc
or
or
sahf
add
cltd
adcl
gs
xchg
shlb
xor
movsb
mov
dec
mov
jmp
repz
and
jg
popa
out
sti
jns
jp
jge
or
roll
pop
push
sarb
xor
fldl2e
and
xchg
jge
ss
pop
insl
jbe
mov
mov
dec
out
push
in
sbb
lahf
xor
repz
xchg
add
jmp
fdivrp
mov
mov
xor
stos
mov
cmpsl
jecxz
in
iret
into
xchg
mov
xor
mov
jne
inc
popa
push
andl
jne
mov
test
push
cmp
subl
adcl
jo
push
ret
cld
dec
mov
jp
and
mov
fwait
lock
out
cltd
addr16
pop
xor
movsb
mov
jp
mov
pop
mov
bound
cmpsb
popf
jl
das
loop
mov
sarl
xor
popa
ljmp
cs
loope
dec
gs
cmp
loopne
loopne
cmc
cmp
loopne
mov
aam
sub
shlb
cld
sbb
xchg
cmpsl
jge
mov
push
pop
adc
faddl
test
rclb
sbbb
out
jno
ljmp
mov
mov
sbb
pop
mov
cmpsl
enter
or
xchg
push
in
xchg
jl
add
push
lods
loop
out
xchg
sub
xchg
fisttps
mov
add
popf
enter
push
sub
cltd
fsubrs
and
pop
mov
aaa
into
mov
jecxz
and
ss
pop
jno
cmp
sub
in
jmp
in
fcmovnu
sbb
push
or
inc
push
mov
aam
pop
sbb
push
xlat
pop
adc
ljmp
push
xor
add
mov
sti
out
mov
loopne
movsl
jge
cmc
mov
cld
ljmp
filds
jmp
sub
adc
xor
test
into
test
inc
imul
ljmp
cwtl
sahf
addr16
mov
jae
fs
repnz
pop
xor
and
dec
mov
loope
jns
sbb
aad
inc
xchg
jb
lods
inc
bound
and
loopne
mov
add
and
stos
push
or
xor
enter
icebp
je
or
xchg
gs
mov
xchg
mov
add
in
lahf
jnp
mov
std
add
lea
jle
mov
mov
cwtl
je
pop
je
jmp
jnp
push
push
pop
cmp
jnp
jmp
and
lret
mov
mov
sbb
lods
dec
push
bnd
push
sub
push
int3
movsb
cmpsl
out
scas
popa
das
dec
repnz
xchg
push
pop
mov
scas
inc
ret
and
fwait
xchg
stos
pop
mov
or
shll
data16
stos
inc
fcompl
pop
xlat
popa
aam
inc
int3
push
pop
rcrl
insl
add
add
dec
shrl
mov
mov
in
add
add
push
shll
shrb
sbb
jnp
dec
cmp
xchg
out
mov
aaa
mov
lret
jnp
rcll
shrl
aam
cld
or
dec
repnz
sti
xchg
inc
sub
jl
cmp
mov
push
sbb
mov
cmpsl
dec
fisttps
mov
int
fs
dec
cwtl
jg
dec
ja
mov
fdivl
js,pn
and
fcoml
push
or
lods
push
ret
pop
add
inc
mov
gs
fldl
outsb
into
lcall
push
pushf
ret
out
repz
fisttpl
cli
dec
jmp
cmp
sbb
mov
in
or
test
inc
loop
js
cmp
mov
inc
xchg
ret
push
mov
nop
dec
xchg
divb
mov
repnz
in
push
mov
xchg
pop
fistpll
fldl
sbb
out
pop
mov
sbb
ss
loope
fbstp
sub
insb
int
pop
inc
xor
cmp
test
sbb
inc
xorb
outsb
and
cmp
call
hlt
adc
loopne
ret
enter
dec
dec
mov
xor
sti
sbb
dec
mov
dec
sahf
lods
ljmp
mov
lahf
enter
pop
daa
cmp
xor
mov
mov
xor
loop
sbb
mov
scas
cs
cmc
and
daa
ljmp
adc
mov
aam
mov
cmc
int3
xchg
and
imul
mov
inc
add
dec
jle
stc
cmp
imul
or
cmpsl
stos
ret
mov
push
in
sub
pop
enter
dec
jne
jg
jge
test
rcr
fistps
shrb
leave
rcr
loop
lods
cmc
mov
test
adc
inc
adc
and
aas
jl
adc
dec
pop
sbb
adc
iret
jp
xchg
cmpsl
into
stos
adc
mov
mov
mov
push
movsl
aas
fwait
lcall
mov
lret
mov
ljmp
or
dec
cmp
pop
pop
pop
jge
push
sub
sbb
jnp
sub
or
jge
fbstp
pop
leave
pop
hlt
ljmp
imul
dec
jns
cld
jbe
repz
dec
enter
hlt
sub
pop
and
xor
push
lods
outsb
rorb
loopne
inc
adc
fcompl
outsl
enter
nop
jmp
out
push
aam
and
or
aam
inc
jmp
lret
stos
repz
sbb
lret
sti
fists
and
out
clc
pop
push
push
or
cmp
push
pop
cwtl
mov
fs
hlt
popf
mov
adc
movsl
jg
addr16
sbbb
pop
push
xor
mov
int
jns
push
lock
out
xor
sub
xor
inc
mov
out
xor
add
dec
mov
aad
mov
repnz
fnstenv
jnp
mov
fiadds
pop
push
pop
rorb
inc
daa
push
or
adcl
fmuls
mov
sub
sub
in
or
leave
ljmp
mov
inc
cmp
sar
and
orb
out
cmp
cmp
jp
and
stos
scas
add
adc
cmc
sub
mov
in
add
cmc
pop
divb
mov
hlt
xchg
and
dec
divb
jns
add
add
jecxz
push
test
jg
mov
pop
xor
and
std
pop
int
xor
out
fwait
cmc
pop
xchg
add
jns
jl
in
out
ja
xlat
mov
push
and
inc
les
cs
stc
push
or
popa
dec
jg
test
sbb
jae
stc
or
push
mov
push
sbb
pop
rol
mov
adc
iret
push
leave
add
cmpsb
xchg
scas
pusha
mov
dec
into
dec
dec
lret
cmp
sub
test
pusha
outsb
inc
xor
push
bnd
dec
dec
inc
lcall
mov
dec
outsl
shll
js
test
sub
jmp
lods
movsb
sahf
or
adc
xchg
xchg
or
jle
aad
xor
xchg
dec
imul
push
jno
add
inc
pop
push
pop
cmp
jle
lcall
sbb
xor
mov
sbb
pop
mov
mov
in
sbb
push
jmp
in
xchg
fcmovnu
repz
inc
xor
adc
insb
stc
hlt
nop
sub
or
jp
add
inc
ljmp
xchg
jno
cmpsl
mov
pop
inc
mov
jo
cwtl
insb
popf
xlat
xor
push
int
fsubl
push
cmp
movb
shll
sbb
mov
jae
and
xor
dec
cltd
ret
cli
or
push
xor
jl
push
push
jl
stc
push
std
lds
or
mov
dec
mov
rolb
out
mov
push
repz
sahf
out
push
mov
fiaddl
sub
mov
lret
xor
cwtl
repz
push
adc
lock
push
jmp
pushf
xor
pop
sub
or
mov
call
in
out
rcll
mov
cmp
arpl
cli
mov
out
xchg
lods
lret
sti
mov
bound
aad
xchg
sub
mov
in
test
mulb
inc
les
sbb
xor
testb
and
sub
inc
insl
add
sbb
enter
fs
mov
push
in
jno
lcall
lret
outsl
push
inc
repz
cmp
test
mov
popa
jno
inc
fwait
insb
cwtl
or
sub
movsb
in
pusha
insb
movsb
mov
jecxz
outsb
pushf
into
mov
xor
daa
xchg
outsl
and
xor
fldl
xor
mov
adc
sub
sub
imul
jae
mov
push
fstl
ljmp
rcr
rclb
outsb
sub
je
mov
xchg
pop
push
popf
mov
leave
jnp
and
dec
xchg
stos
faddl
dec
mov
imul
sub
adc
mov
and
jns
sub
xchg
mov
xchg
xchg
xlat
jmp
test
int3
push
xchg
pop
mov
sahf
lds
aam
xchg
sub
and
sbb
sarb
cmpsl
add
loop
pop
push
es
cmpsb
and
aad
rclb
movsl
ret
sbb
mov
pop
lods
out
fdiv
lcall
andb
aam
mov
mov
movsb
pop
call
cwtl
ljmp
insb
iret
dec
shrl
movsb
test
sbbl
es
rcr
add
insb
push
pop
lea
cli
and
push
xor
aad
xchg
add
pop
icebp
push
lea
inc
daa
stos
cmpsl
jp
stos
and
aaa
jbe
xor
xor
orps
jno
mov
cmc
jns
push
cmp
pop
dec
dec
adc
sarb
or
cmp
push
aaa
leave
jne
sbb
insl
push
jno
pop
out
mov
adc
xor
mov
enter
je
xor
nop
rolb
inc
dec
call
outsl
mov
pop
sbb
mov
jns
fstpl
jmp
xchg
push
jmp
fiaddl
int
addr16
aad
fiadds
sahf
push
xchg
arpl
jno
loop
lds
mov
js
jae
inc
gs
dec
in
iret
dec
sub
mov
fwait
or
pop
fwait
pop
pop
xorb
push
add
pop
adc
mov
inc
mov
or
xchg
mov
lods
addr16
fiadds
mov
jmp
pop
fs
fcmovnu
mov
push
stc
cmpsb
mov
in
mov
cmp
push
mov
pop
add
repz
pusha
movsb
test
jnp
xor
sahf
addr16
push
adc
inc
lods
dec
movsl
scas
mov
iret
mov
sub
cmp
or
test
jmp
inc
pushf
js
push
dec
inc
dec
dec
addr16
adc
mov
jmp
test
sub
loope
or
les
test
js
inc
lds
ja
call
negb
lock
mov
sbb
inc
inc
ja
sbb
test
jp
test
shrb
or
pop
pusha
js
add
ljmp
mov
clc
push
cmp
mov
jge
xor
mov
sub
pop
pushf
sbb
push
shlb
rorl
test
jge
popa
inc
pop
pop
pop
pop
loopne
loopne
lahf
test
or
in
insl
clc
mov
nop
icebp
add
adc
test
aam
int3
popf
dec
pop
inc
mov
xchg
inc
inc
mov
in
aam
fdivs
adcb
or
add
push
int3
ds
inc
lcall
fldenv
aad
dec
cmp
xchg
xlat
repnz
pop
hlt
rcrl
rclb
das
incb
jae
push
ljmp
inc
mov
xchg
inc
ret
lock
out
icebp
aas
dec
mov
sub
xchg
mov
jo
mov
in
lods
jmp
repz
jae
es
fs
popa
xchg
sbb
adc
xor
xor
out
scas
push
cltd
inc
pusha
pop
xchg
sub
jp
out
mov
lods
push
mov
or
add
mov
popf
rep
or
push
cmc
lods
out
jnp
js
sbb
mov
popa
fistpl
and
cmpsb
jbe
push
out
add
loope
scas
imul
cltd
hlt
mov
xchg
scas
sbb
jge
imul
rep
dec
mov
mov
sub
test
cmp
push
fbstp
cltd
fistps
aaa
out
pop
jg
sub
imul
imull
dec
sub
inc
loop
lods
pop
push
rcll
mov
lcall
fs
loopne
dec
pop
sbb
test
jbe
or
jge
push
xchg
call
sahf
cmp
or
push
decb
cmp
stos
ror
idivl
aam
inc
mov
jo
pop
imulb
lahf
and
fldcw
or
jns
xor
add
jmp
imul
jmp
xor
movsb
into
mov
dec
mov
imul
and
arpl
jmp
jno
jmp
das
flds
call
xor
add
les
mov
les
fldenv
idivl
jmp
ja
in
sub
imul
negb
or
xchg
mov
mov
xchg
mov
pop
movsb
pop
xchg
jbe
cmp
in
cmp
mov
jnp
out
dec
and
aaa
out
add
xchg
gs
mov
and
sub
or
push
ss
int3
sahf
jle
cs
aaa
pop
inc
int
enter
test
sar
or
lea
push
dec
and
push
jne
jno
int
xchg
cmc
mov
cmp
enter
rcll
gs
leave
into
jns
pop
and
mov
lods
push
sbb
dec
dec
or
jb
or
mov
mov
xchg
xor
inc
inc
cmp
push
cmpsl
cld
ja
js
mov
xchg
push
iret
inc
mov
cmp
xchg
fstpl
push
push
aad
sub
mov
shrl
sbb
sar
in
cmp
out
pop
or
into
mov
sbb
sbb
mov
pop
orl
int
pop
adc
sub
inc
imul
xchg
mull
dec
dec
fisttpl
outsl
and
push
insb
sahf
mov
dec
gs
cld
orl
sub
xor
pop
xor
adc
push
cmp
nop
inc
fwait
ljmp
xchg
jmp
out
xchg
inc
add
das
rcr
adc
jae
adc
cmpsb
dec
sbb
arpl
cmpsb
repz
sub
push
xchg
packssdw
xchg
out
je
push
jle
adc
add
ror
outsb
pusha
sub
lea
fs
lahf
imul
sub
sbb
cli
repnz
mov
es
loop
sub
jae
push
jns
pop
mov
xor
dec
test
dec
cld
push
jne
cmpsl
in
add
mov
fcomip
aad
clc
test
inc
shll
cli
jmp
ss
sub
push
out
add
xchg
insb
mov
dec
inc
cmp
xor
ror
push
cmc
es
iret
repnz
pop
pusha
inc
and
ljmp
roll
add
push
sub
jp
adc
aas
or
fisubrs
out
movsl
repz
mov
into
insl
in
cmp
mov
pushf
fcompl
mov
mov
and
lahf
jne
mov
inc
loop
adc
inc
call
in
outsl
dec
adc
mov
cmp
push
cli
pop
cmpsl
lahf
in
jno
mov
lock
int3
daa
mov
xchg
adc
inc
mov
mov
push
mov
icebp
mov
pop
repnz
sahf
pushl
arpl
lahf
add
jns
lock
mov
lcall
jb
sbb
ret
mov
lods
aad
ror
dec
mov
jp
and
mov
xchg
and
jp
repnz
lea
loope
test
add
mov
imul
stos
xor
and
mov
xlat
adc
pop
es
dec
pop
ljmp
add
sub
into
es
adc
mov
mov
lcall
je
mov
popa
pusha
arpl
aas
mov
mov
btc
bound
out
push
sbb
jno
popf
pop
and
push
jb
insl
scas
sub
fdivs
mov
mov
insb
fldcw
stos
jl
aaa
mov
push
push
das
fwait
and
dec
leave
push
jbe
push
inc
stos
pop
pop
sub
punpcklbw
mov
call
xor
inc
push
jns
fistpll
out
ljmp
insl
dec
out
and
mov
push
xchg
subb
cmp
int3
int3
dec
pop
loop
lds
pop
js
xor
test
push
aam
add
add
lahf
mov
mov
cmp
lods
call
ret
aad
fadds
ret
jmp
sub
pop
lods
mov
cmp
sbb
mov
mov
and
sub
in
cmp
sbb
push
jp
stos
mov
inc
pop
jmp
cmc
stos
aad
xchg
inc
popa
or
pushf
pop
and
pusha
movsb
in
stos
aad
aas
imul
jbe
pusha
or
add
in
mov
shl
dec
stos
out
int
addr16
xchg
ljmp
aad
jmpw
mov
jmp
adc
mov
add
imulb
xchg
pusha
call
enter
ret
imul
sarl
imul
sub
jo
fmull
push
cmc
pop
insb
pop
int
fcmovne
cmp
sahf
cmp
xchg
repnz
adc
mov
scas
repnz
adc
in
ror
lea
inc
add
test
fcoml
jae
adc
add
sbb
dec
push
adcl
mov
xor
dec
inc
into
xor
adc
push
clc
jl
insb
sub
or
push
fiadds
ljmp
fsubrl
out
fidivrl
mov
xor
ss
xchg
hlt
xchg
sub
mov
mov
ja
add
fldl
repz
adc
fdiv
jbe
dec
inc
shll
int
aad
jns
cmp
push
out
pop
in
repnz
push
add
sbb
dec
or
push
mov
adc
das
inc
mov
pop
ss
and
pop
lods
jecxz
mov
mov
out
xchg
sbb
jo
xor
mov
sbb
hlt
fdivrl
jns
xchg
pusha
fsubrs
data16
out
cwtl
dec
ret
adc
dec
xor
stos
scas
scas
ljmp
push
xor
mov
mov
ror
mov
mov
xor
je
test
or
gs
out
rcrb
test
add
fdivs
cltd
add
stos
add
cmp
adc
std
inc
lods
fmulp
jmp
lcall
test
add
cmp
xor
fcmovb
fwait
stos
mov
out
sub
lret
push
cmpsb
xchg
pop
popf
sbbb
push
ljmp
in
jo
insb
mull
insb
mov
push
cmp
cmp
lods
mov
push
int
jb
pop
push
into
pushf
adc
gs
nop
mov
or
mov
ja
adc
dec
pusha
jae
loop
jge
mov
fnstenv
jnp
gs
mov
notl
mov
sbbb
sbb
mov
test
sub
cmp
or
sub
inc
sbb
add
addr16
leave
jnp
fs
sub
aaa
imull
stos
mov
jnp
cmp
cld
push
inc
les
push
cli
mov
dec
cmp
outsb
fs
jmp
add
jp
dec
testb
stc
xchg
ret
clc
jmp
push
test
dec
and
shlb
sbb
jns
shll
cltd
rcr
add
ljmp
ficompl
sarb
mov
and
jbe
call
cli
and
mov
inc
adc
lcall
lods
push
ljmp
int
xchg
adc
imul
dec
sbb
inc
leave
fucom
fbstp
cld
das
fbstp
fcomps
or
test
mov
sbbb
dec
in
or
test
add
test
inc
fimuls
and
test
out
mov
cs
shlb
out
stc
fimull
roll
mov
dec
and
rclb
mov
lret
cmp
outsb
scas
in
pop
cld
sub
xchg
mov
cmp
in
out
enter
ret
mov
and
mov
clc
das
inc
xchg
mov
sub
subb
int
sub
jne
loope
movsl
test
jecxz
fsubs
mov
test
in
cld
and
push
push
xlat
repz
lret
stos
js
mov
mov
add
push
es
jecxz
bound
pop
iret
or
sub
add
movsw
adc
loope
call
mov
sub
jb
sub
mov
gs
enter
roll
cwtl
push
fldcw
sub
fistpll
sbb
icebp
add
push
shll
lret
xchg
xor
mov
or
and
mov
sbb
daa
test
lret
add
push
mov
sub
jae
mov
inc
jns
pop
and
lahf
mulb
sbb
jle
dec
cld
popa
adc
loop
into
fimull
cmc
sub
pop
out
repnz
aam
in
push
add
pusha
push
or
out
inc
add
aas
mov
mov
cmp
lret
jae
adcl
fidivs
mov
inc
push
push
in
xchg
pop
adc
inc
mov
scas
cmp
sbb
stos
in
rorl
aaa
sbb
lahf
orl
pop
stos
int
push
adcl
adc
jo
repz
mov
push
add
push
outsl
and
push
adc
imul
xor
insl
adcl
loopne
out
je
dec
mul
push
out
shrl
fs
add
aaa
and
or
sbb
rcrl
add
clc
imul
cmp
or
jg
cmp
in
or
or
ret
mov
pop
repz
fcoms
jecxz
scas
fdiv
jp
daa
mov
mov
mov
and
xchg
gs
into
sbb
std
lret
xchg
popf
mov
jnp
xchg
mov
icebp
fucomi
inc
shlb
stc
idivl
mov
xor
les
cwtl
jg
jge
rol
clc
jbe
mov
inc
cmp
push
test
test
add
jbe
cltd
lods
scas
and
test
nop
loopne
jb
scas
lods
xor
int3
or
int
xchg
cmc
pop
dec
clc
test
divl
fwait
pop
iret
cmp
pop
sub
fs
xor
mov
inc
inc
xchg
pop
roll
and
push
cmpsb
and
cmp
in
sub
jo
inc
pop
movl
dec
push
or
aaa
ljmp
dec
jp
orb
mov
je
test
fdivrp
jge
mov
scas
mov
pop
pop
pusha
fiaddl
cmp
leave
adc
ret
pop
sbb
pop
mov
int3
jmp
sbb
sub
lcall
test
cmpsb
loope
add
sbb
aaa
movsl
dec
fwait
inc
inc
or
lea
push
je
subl
pop
or
fisubs
imul
movb
pop
lds
cmpsl
mov
ss
jmp
dec
das
mov
mov
repz
out
sub
pusha
movsl
mov
xchg
repnz
enter
hlt
sbb
sahf
and
mov
pop
out
mov
mov
or
in
pop
in
push
lods
push
rorl
pop
movsl
jne
enter
add
jmp
cmc
lret
cmp
insb
movsb
xor
iret
ja
into
int
or
in
adc
cmp
jp
jne
push
add
and
push
or
in
cmp
or
cmc
popa
pop
outsb
loope
sub
cmp
xchg
xor
sbb
mov
les
js
sub
sub
fidivs
pushf
jmp
mov
xor
movl
push
dec
sub
jno
das
ret
pop
cwtl
call
mov
in
je
dec
insb
scas
add
cmc
sub
mov
add
in
xchg
sbb
jbe
inc
jmp
or
imul
push
test
pop
jno
in
fst
addb
lret
stos
jp
mov
fwait
in
push
mov
aas
xor
loop
fisttps
push
inc
mov
unpcklps
add
sub
jns
sub
sub
fdivrl
daa
inc
les
pop
push
inc
dec
and
jge
jmp
jp
sti
aad
cmp
pop
inc
test
mov
fmuls
mov
or
imul
sahf
ds
mov
data16
std
cmc
push
adc
xchg
xor
dec
out
sbb
test
jle
rcr
and
jle
cvtdq2ps
add
dec
xchg
adcl
pop
mov
adc
invd
arpl
xor
mov
adc
lcall
mov
enter
mov
jns
sbb
scas
test
cmc
inc
je
add
mov
into
xor
cmp
pop
fnstsw
cmp
mov
cmp
in
stos
xor
xchg
in
repnz
negl
lret
testl
pop
mov
jns
inc
inc
mov
sub
jae
fiaddl
lret
jg
pop
cmp
or
fisttpll
fdivrs
movsb
dec
gs
push
add
adc
fdivl
or
ret
xor
outsb
movsb
test
rcrl
xchg
sbb
cmp
fs
xchg
xor
or
xor
inc
or
rcl
out
push
and
push
push
outsb
mov
into
ss
lea
cmp
jns
movzbl
mov
and
mov
xchg
fsubrl
cld
and
sahf
and
ja
faddl
sub
sub
pop
cmp
mov
fwait
or
sub
rcl
lahf
std
insl
or
test
std
mov
clc
pushf
enter
dec
mov
mov
sbb
sub
mov
cwtl
inc
mov
or
icebp
jle
jnp
dec
lods
jl
inc
jo
add
add
imul
jne
aad
jl
xlat
push
adc
adc
popa
jnp
notl
scas
mov
or
pop
pop
push
jp
jne
shr
fcompl
inc
arpl
or
leave
lahf
jne
lds
stos
cltd
cmp
mov
xchg
repz
push
loopne
xchg
outsl
scas
fisubrl
mov
fimuls
mov
loop
rorb
aad
paddw
cltd
ret
cld
and
or
pushf
push
outsb
push
fstpt
mov
cmp
enter
mov
or
mov
mov
push
repnz
push
xchg
pop
add
xor
xchg
pop
jbe
sarb
enter
lock
inc
in
fsubp
mov
jg
aas
jnp
iret
negl
adc
div
dec
rorb
cli
sbb
sbb
sub
fisttps
lods
cmpsb
movsb
pop
rcl
jmp
cmc
mov
jae
int
push
mov
call
pop
test
shrl
std
outsb
push
lcall
mov
inc
outsb
rolb
push
fsubl
and
xchg
mov
cmp
jo
mov
adc
cmpl
movsl
sbb
dec
jge
pop
adc
sahf
cmp
nop
les
and
shlb
inc
dec
xchg
stos
dec
or
sub
sbb
xor
and
daa
lock
pop
push
dec
jg
or
and
mov
das
add
pop
inc
and
or
mov
and
adcl
aad
xchg
jmp
call
lods
push
mov
dec
cltd
ret
mov
mov
notl
sub
cmp
mov
xchg
adc
std
or
pusha
sbb
popf
ljmp
addl
and
int
bound
shlb
cmp
lock
sub
test
jl
rclb
mov
ja
clc
and
shlb
fidivrs
int
jne
inc
dec
add
lret
inc
std
inc
or
add
cmp
ret
push
adc
outsb
xchg
test
adc
xor
mov
ret
pop
ja
mov
inc
cwtl
jmp
pop
movsl
ror
inc
mov
das
push
cwtl
mov
jne
dec
cmp
loope
outsl
pop
outsb
sub
test
push
xchg
mov
scas
lcall
xor
aaa
popf
sti
lods
adc
cmpsl
mov
push
out
sbb
pop
xchg
mov
test
ds
cli
addl
call
pop
int
cmpb
pop
pop
mov
pop
sub
test
faddl
push
push
cmc
mov
orb
hlt
leave
jbe
adc
aaa
jl
mov
mov
bound
out
pop
mov
aad
pop
in
add
mov
in
in
and
mov
xorl
pop
and
je
jno
xchg
cwtl
stos
pop
mov
adc
outsb
aam
and
rolb
xor
inc
jmp
xor
sbb
insl
xchg
mov
sbb
cmpsl
jbe
pop
push
pop
imul
pop
jnp
movsb
cmp
sub
cmp
stos
cmc
jg
out
and
sub
push
add
jns
dec
lahf
and
test
xor
mov
imul
inc
sub
out
imull
fsts
jle
mov
jl
push
push
popa
cld
jnp
xchg
mov
mov
cld
sti
cld
push
pop
loopne
push
clc
and
imul
dec
test
rorl
and
ljmp
or
fbstp
jecxz
mov
push
ja
lahf
in
cmc
ljmp
outsl
test
inc
mov
mov
mov
cmpsb
mov
dec
dec
popa
lea
nop
or
cltd
imul
push
roll
stc
mov
icebp
adc
ficoms
pop
adc
cwtl
sarb
pop
xchg
mov
cltd
add
xor
and
xor
shlw
aam
mov
pop
nop
bound
jb
loope
data16
jmp
cli
or
sbb
mov
ds
icebp
ss
sub
jno
cmc
in
push
or
inc
subl
xchg
or
and
add
fsubrs
dec
bound
dec
pop
repz
dec
repz
cmp
pusha
ja
sub
cmp
and
das
imul
lock
das
and
and
sbb
cmpsl
sti
jo
adc
cmp
sti
mov
bound
cs
aad
dec
iret
and
repnz
push
test
imul
movsl
inc
cmp
data16
outsb
clc
xlat
xor
mov
cmp
je
or
jae
cld
scas
push
movsb
test
cli
imul
js
loop
cltd
push
inc
pmaxub
and
aaa
or
pop
jns
lret
test
push
jnp
push
movsl
adc
movsl
jmp
xchg
xor
cs
daa
inc
pop
sub
fs
jmp
stos
dec
jl
pop
add
xchg
jno
jge
jg
cmp
mov
js
mov
cmp
dec
movsl
or
cs
add
clc
mov
xchg
push
mov
cmpsb
lret
mov
jg
movsb
das
mov
inc
adc
clts
push
call
or
or
arpl
and
sbb
ret
sub
push
jg
cltd
loope
mov
enter
xchg
jmp
jo
scas
imul
pop
inc
sbbb
mov
idivb
cmp
insl
mov
inc
das
ror
hlt
adc
sub
pop
addr16
mov
xor
call
test
daa
mov
testl
cmp
leave
xor
mov
aam
add
add
fsubs
mov
insb
mov
outsl
xor
mov
lods
ret
push
movsb
push
insb
add
sub
mov
xor
fsubrl
sbbb
pop
cltd
xchg
loop
cltd
int3
mov
sub
add
cmp
cltd
or
pop
inc
outsl
mov
mov
lret
mov
ljmp
ljmp
vpminsw
movsl
push
push
outsl
sbb
sbb
bnd
jge
pop
lcall
cmp
and
mov
rclb
push
jg
test
inc
xor
call
inc
std
lea
pop
push
xor
int
push
dec
fdiv
lock
in
or
mov
mov
jmp
mov
mov
popf
jle
into
gs
movd
cmp
fisubl
push
stos
insl
test
lock
inc
in
into
lret
pop
fists
les
inc
pop
rolb
negl
adc
outsl
mov
or
inc
cmp
push
in
xor
dec
sbbb
stc
sbbl
and
pop
lahf
xchg
jo
xlat
sbb
jge
popa
pop
loope
cmc
jg
xchg
ds
xchg
sbb
push
dec
jae
sbb
mov
rorl
test
pop
cmc
cs
or
loope
and
jnp
cmp
inc
or
xchg
and
das
shlb
xchg
cmp
mov
xchg
xchg
xor
xchg
xchg
jns
mov
les
mov
fbld
popf
add
xor
fstl
sbb
lds
outsb
rclb
test
scas
gs
pushl
sub
cmc
xchg
mov
jb
aaa
push
add
cmp
out
dec
rorl
fldl
mov
test
push
xchg
ds
inc
inc
test
push
jg
mov
xlat
sub
mov
ret
sarl
sbb
dec
pop
lahf
outsl
add
cltd
aas
imull
and
dec
cmpsb
or
popa
xorl
push
push
aad
cwtl
jg
xor
mov
jb
mov
pop
xchg
aaa
adc
imul
jg
das
jb
pop
adc
loop
push
push
gs
and
jge
dec
aam
ret
push
and
xchg
stos
mov
inc
idiv
fbstp
or
cli
xchg
push
fildl
or
add
push
cmp
cmp
stos
pop
jmp
mov
adc
sub
es
push
aas
adc
xor
cmp
test
pop
mov
sbb
fisttpll
mov
push
pop
and
out
in
adc
es
test
out
sub
sub
lcall
cld
mov
pop
sbb
dec
or
jnp
arpl
lds
aad
out
jo
push
dec
sahf
andb
lods
sbb
and
jbe
jbe
test
push
push
or
imul
sbb
dec
cs
xchg
xchg
xchg
enter
loope
cli
xchg
cmp
inc
xlat
popa
mov
mov
push
call
push
dec
mov
push
mov
add
stos
cli
cmp
insb
xchg
leave
les
popa
shll
call
jg
das
mov
pop
inc
imul
inc
push
stc
jmp
adc
pop
lret
inc
es
push
scas
push
sub
and
pop
ret
jb
sbb
jecxz
xor
dec
sti
pop
cltd
xorl
jmp
mov
pop
dec
push
inc
mov
clc
lock
imul
int3
pop
pop
dec
push
ret
inc
push
lret
inc
dec
adc
int3
and
gs
mov
and
lea
add
inc
out
pop
mov
xor
adcb
in
ffreep
jbe
sbb
fnstsw
mov
out
insb
in
push
inc
mov
icebp
add
sahf
xor
push
out
popf
loopne
xor
sub
cmp
repnz
shl
push
repz
sahf
clc
mov
imulb
add
arpl
fimuls
out
push
xor
push
add
scas
and
shlb
sarl
cmp
sbb
mov
popf
orb
mov
cmp
and
aad
inc
xchg
dec
lret
push
repz
lods
data16
sbb
mov
cld
call
mov
pop
pop
in
sbb
push
cltd
mov
clc
inc
das
add
rolb
pop
cmp
out
xchg
push
mov
add
and
mov
add
imul
inc
mov
xchg
ljmp
sbb
rcr
into
mov
nop
xor
jp
push
xor
ret
sub
adc
push
test
jb
lahf
clc
adc
pusha
mov
xlat
mov
sub
call
cmc
leave
mov
xchg
pop
and
dec
scas
rcr
lods
scas
outsb
xchg
rol
lret
lcall
outsb
push
adc
xorb
jns
icebp
add
notl
add
lret
fdivl
rcl
add
push
loopne
or
cmpsl
sub
rcr
cmp
mov
movsl
adc
xor
or
or
pop
xor
imul
push
int3
popa
ucomiss
cmpsl
jle
movsl
fidivl
test
mov
add
cmp
pop
mov
add
or
sub
or
mov
arpl
cmp
mov
add
ret
cs
cwtl
shl
into
icebp
dec
jns
in
loop
cmpsl
cmp
jmp
or
arpl
and
pushw
xchg
fmull
stos
jecxz
mov
dec
gs
mov
ja
pop
das
sub
adc
and
mov
jae
lret
int3
test
sub
in
dec
mov
jp
mov
jb
mov
std
testb
clc
cmp
adc
mov
cmp
push
mov
dec
icebp
ljmp
pmuludq
cli
lock
fistpl
or
iret
add
mov
jo
pop
jne
jg
adc
repz
out
ljmp
pop
mov
jp
insl
and
inc
push
lea
cs
jnp
ror
lock
push
xor
test
mov
push
pop
mov
gs
pop
popa
lock
test
inc
int3
jnp
imul
adc
aam
sub
gs
mov
jmp
repnz
adc
je
clc
or
jl
out
and
scas
mov
lods
xchg
pop
adc
jb
sub
aas
dec
aaa
add
fisttpll
mov
inc
or
aam
pop
out
xchg
lret
adc
and
rcrb
mov
push
test
mov
pushf
leave
lahf
mov
push
or
xor
mov
jns
push
xchg
adcb
in
push
icebp
sbb
fstpl
push
push
mov
sti
push
mov
xor
rcr
or
les
out
data16
jmp
jno
add
cmp
stos
sbb
scas
lret
je
repz
push
inc
movsl
pop
inc
mov
outsb
pop
and
xor
jp
lahf
sti
mov
sahf
es
xchg
cmp
add
mov
sahf
pop
out
call
or
ret
push
cwtl
pushf
sub
mov
pop
jno
cmpl
xchg
sti
popa
xchg
cmp
adc
mov
jb
mov
push
mov
jl
mov
stos
loope
jnp
push
dec
adc
and
jb
mov
scas
adc
js
pop
push
sarl
jl
fs
test
or
ss
mov
repnz
pop
adc
xchg
sub
jl
shlb
testb
push
movb
pop
cmp
push
repz
sub
lcall
cmp
xchg
sub
mov
adc
xor
outsb
adc
adcl
popf
and
ficompl
mov
jns
sub
pop
mov
rcll
mov
and
mov
sub
or
sub
loopne
cmp
mov
roll
aas
xorl
out
push
call
sbb
fwait
popa
mov
fidivrs
cmc
and
sub
test
dec
adc
xchg
insl
test
mov
mov
jle
fs
adc
xlat
pop
jae
je
imul
aas
enter
loope
mov
fsubrl
add
adc
inc
iret
and
hlt
arpl
sti
idivl
test
add
ds
xchg
mov
pop
imul
push
and
loopne
test
mov
rcll
ret
mov
cmp
pusha
fisubl
jbe
cmpsb
sub
in
mov
mov
pshufw
cmp
mov
mov
stc
inc
xchg
shlb
test
clc
idiv
in
movzbl
std
sbb
sub
std
lea
cmp
pop
xchg
shlb
std
lock
sbb
es
push
and
sbbl
add
sub
xor
mov
dec
adc
clc
pop
or
rcrb
jbe
fnstcw
or
je
enter
adc
outsl
pop
pop
fmul
shll
ds
sahf
cwtl
rorl
mov
dec
mov
xchg
mov
add
adc
cmp
and
xor
out
mov
popf
jne
decb
jp
mov
cmpsb
jl
jns
enter
lea
and
jge
mov
dec
es
sub
les
scas
mov
dec
xchg
in
imul
ret
or
mov
aad
xchg
in
hlt
shrb
imull
cmp
imul
sbb
lret
cmp
push
or
cmp
ret
sahf
pop
stos
pop
iret
lahf
dec
or
nop
push
dec
mov
or
sub
pop
jecxz
les
aam
stos
cmp
test
sub
mov
jb
in
cld
and
xchg
call
pop
add
and
pop
push
xchg
in
or
cmp
ljmp
pushf
pop
js
shr
out
fsubs
add
js
loopne
xor
jae
cmp
mov
xlat
ret
xchg
cmp
adc
mov
cmpsl
mov
jae
xor
div
mov
mov
hlt
xchg
dec
mov
mov
in
sub
fisubs
push
loop
pop
adc
cmp
cmp
out
sbb
sub
sub
jbe
and
cmp
addl
add
mov
pushf
sti
adc
jmp
addl
sbb
or
add
sub
jmp
mov
inc
cmc
inc
popa
push
mov
outsb
push
fwait
dec
test
subl
rorb
jae
mov
test
in
or
mov
hlt
adc
mov
or
lcall
mov
and
xchg
mov
cmpsb
mov
imul
jae
loop
aas
bound
add
fldl
xchg
hlt
cmp
xor
aas
fildl
sbb
push
aam
cmc
movsl
pop
inc
imul
mov
jno
pop
divb
jl
pause
push
xor
dec
bound
jg
mov
icebp
push
lods
xchg
mov
test
add
dec
adc
cmp
decb
in
das
ficomps
nop
sahf
xor
icebp
cmp
lods
pop
ret
pop
out
es
adc
in
test
pop
ljmp
push
test
fsubrs
loop
and
cmp
xor
mov
out
out
inc
fcomi
arpl
sarl
push
loopew
sbb
dec
push
mov
xchg
or
stc
xchg
mov
mov
sub
fcomps
and
jno
lcall
aam
sbbl
in
xor
out
xchg
lods
rclb
cmp
cs
xchg
enter
popa
push
daa
mov
jbe
and
or
add
scas
nop
xchg
inc
mov
xor
lods
jbe
bound
pop
insl
push
cwtl
cwtl
push
es
xchg
hlt
mov
xchg
xor
sbb
std
divb
outsl
mov
pop
les
xchg
xor
push
xchg
and
cmp
and
stc
into
jb
jo
outsb
push
mov
repz
pushf
push
cmpsl
jnp
int
sar
and
hlt
jbe
aas
in
lcall
rcl
push
pop
nop
scas
cwtl
aaa
adc
neg
inc
shlb
fcmovnb
rorl
xchg
pop
mov
clc
lods
adc
pusha
xchg
jge
lock
inc
add
scas
shrb
mov
push
mov
repnz
fwait
in
fildll
xchg
mov
inc
pop
jge
repz
shlb
mov
aad
xchg
jg
and
and
jg
lahf
pop
jns
ja
add
add
and
mov
icebp
fwait
lea
adc
in
notl
jl
lods
nop
dec
test
cmc
insb
ret
je
js
call
mull
push
xchg
push
not
lock
imul
inc
pop
cmp
popa
movsl
ds
jnp
int
inc
and
icebp
gs
adc
xchg
mov
cmp
lock
mov
iret
out
pop
mov
pop
inc
jle
dec
je
pop
dec
lods
and
aad
cmp
fs
add
ret
add
mov
cmp
mov
xchg
sbb
fisubl
mov
pop
dec
lock
fstl
xchg
sub
fimull
cmc
stc
or
add
stos
jne
mov
inc
jmp
lock
xorl
mov
inc
shlb
hlt
enter
jbe
fbld
mov
or
subb
pop
or
out
jge
pop
jge
mov
mov
sbb
pop
divl
and
pop
mov
mov
xchg
or
push
jnp
and
add
addr16
in
scas
pusha
outsl
mov
bnd
cs
nop
mov
inc
lahf
call
cmpsb
fistpl
add
mov
add
loopne
and
xchg
std
aaa
pop
aaa
test
jns
xorl
pop
adc
in
cmc
mov
aas
inc
or
sbb
xchg
out
out
xchg
mov
mov
sti
clc
push
ret
adc
mov
xchg
inc
loope
call
or
rorb
nop
mov
stc
call
ja
aaa
push
xchg
xor
adc
xchg
dec
shr
sub
pop
pushf
dec
sub
lret
ret
imul
std
jae
sub
dec
sti
pushf
dec
push
adc
xchg
lds
outsb
sbbl
and
jle
bound
insb
jmp
mov
cmp
adc
pop
das
lcall
jle
jle
mov
int3
add
pop
and
mov
jne
lret
or
jl
xchg
test
aas
fldenv
lcall
dec
sub
sbb
jae
lahf
inc
addr16
pop
xor
bound
lret
xor
sti
mov
pop
fwait
fwait
pop
adcb
clc
cs
inc
adc
xor
pop
push
mov
dec
mov
inc
push
adc
or
push
push
fsubrp
mov
int
fwait
mov
mov
mov
aaa
lahf
add
sub
push
das
test
lret
mov
xor
std
mov
shll
inc
cs
inc
fdivl
mov
adc
repnz
outsl
repz
cltd
lock
into
dec
aaa
push
inc
and
mov
pop
add
push
add
push
repnz
int
lea
fidivl
fmull
sub
fsubs
inc
fisubs
add
push
push
sbbl
aaa
mov
js
jmp
or
xchg
push
pop
clc
mov
sub
lea
loopne
add
fcomp
rcr
dec
in
rorl
jbe
jno
inc
pop
push
or
jnp
inc
cmp
test
leave
test
mov
repnz
out
shll
jnp
jo
xor
test
enter
loop
jmp
das
ljmp
call
enter
call
push
push
test
repnz
insl
pop
dec
cli
loop
out
push
xlat
dec
or
xchg
ja
xor
mov
mov
stos
or
push
xor
bound
sahf
ja
dec
add
scas
jne
sbb
lods
add
mov
fisubs
bound
movsb
shrb
or
out
jl
adc
loop
addr16
cmp
pop
add
xor
jne
add
mov
mov
addl
xor
cld
sub
sub
mov
mov
or
xchg
push
sbb
cli
int
stos
pop
int
fcoms
enter
test
jb
stc
sub
mov
insb
fwait
cmpsb
scas
mov
pop
ljmp
mov
mov
sub
pop
insb
cld
outsb
inc
add
fxch
mov
xchg
inc
adc
sbb
push
sti
pop
cmp
in
rcrb
push
std
nop
call
imul
hlt
pop
in
dec
inc
popf
sbb
pop
loope
cmp
sahf
jns
dec
jle
lock
stc
inc
mov
aam
arpl
sbb
fisttpl
mov
add
pop
lods
jg
subb
cmpsb
jg
xor
imul
pop
dec
mov
aad
lods
push
or
push
sbb
mov
imul
insl
and
jb
jbe
and
pop
pop
in
addr16
xor
mov
dec
inc
jle
cmpsl
push
ret
pop
mov
pop
in
mov
push
imul
rcrb
push
stos
sub
divl
shrl
xor
mov
jne
mov
mov
outsb
std
sub
cmp
outsl
test
sub
mov
rorl
pushf
cmp
ljmp
jg
cmpl
push
inc
inc
jns
cmp
stos
xchg
cmpl
push
nop
mov
jae
xor
aaa
repz
pop
popa
fidivs
aaa
out
fs
add
mov
gs
clc
lret
jb
cs
sbbb
xor
adc
outsb
hlt
inc
mov
and
std
ffree
mov
inc
push
mov
jl
bound
cmpsb
addr16
pusha
xor
xor
fisttpll
pop
xchg
xor
adc
dec
in
popf
add
aad
in
mov
ljmp
mov
xchg
mov
push
aam
add
scas
sti
adc
dec
nop
cmpsl
sbb
loopne
ja
push
jne
ss
addb
loopne
and
xchg
cmp
jnp
loop
adcb
dec
ret
jmp
inc
xchg
das
test
ret
ljmp
push
cwtl
inc
and
push
mov
add
xchg
mov
mov
in
leave
mov
mov
sbb
mov
adcb
jnp
sbb
cmp
add
in
mov
and
cmp
sub
cltd
mov
sti
stos
cmpsl
mov
push
mov
jae
mov
mov
imul
jns
inc
pop
ja
pop
dec
or
add
adc
cmc
pop
pop
mov
pop
nop
sbb
xchg
push
rcrl
ds
jl
xchg
inc
jge
adc
push
xchg
rolb
inc
loop
test
pop
add
lahf
xor
in
lcall
cmp
pop
xor
pop
mov
andb
loopne
xchg
sahf
xchg
test
sbb
cwtl
sbb
adc
arpl
enter
sub
pop
test
aas
mov
mov
mov
xchg
sbb
and
xlat
cld
cmp
mov
inc
sahf
mov
gs
inc
xchg
xchg
es
and
xchg
inc
xchg
mov
movsb
imul
clc
xchg
push
std
hlt
xor
aaa
fbstp
fcoms
hlt
lcall
pop
jns
xor
addl
push
pop
setne
push
clc
push
ret
add
gs
decb
mov
fisubrs
add
movsl
out
imul
test
sub
xor
xchg
jb
aaa
int3
adc
pop
jno
js
inc
loopne
lods
and
sub
push
stos
sbb
mov
mov
aam
cmp
repz
lods
cmpsb
fpatan
movsl
pop
mov
xchg
cltd
aam
inc
push
icebp
negl
push
repnz
jle
adc
and
xchg
js
repz
lods
stos
jge
fildl
das
push
pop
dec
ja
test
dec
mov
mov
das
push
sub
stc
jno
dec
and
popa
push
imul
das
int
push
xchg
ret
out
jae
adc
sub
cs
or
mov
push
fisubrs
fisubl
das
push
adc
stos
insb
ljmp
xchg
sti
push
sbb
pop
push
sti
jns
pop
mov
jne
sub
mov
inc
cmp
movsl
je
push
jno
sub
icebp
pop
pop
mov
jmp
push
dec
and
mov
pop
cwtl
js
cwtl
adc
rcrb
xchg
dec
aas
fs
xor
test
repnz
es
push
xchg
loope
test
or
xchg
push
cmp
ja
fcompl
sarl
out
mov
ret
xchg
add
sub
mov
xor
insl
rorb
popa
mov
jbe
sahf
pop
mov
jo
andb
leave
sti
ret
sbb
jp
cmp
jno
int3
mov
jbe
cmc
dec
sti
xor
int
pop
push
popf
roll
sub
fisttpl
ret
xor
cmpsl
ror
sub
negl
movsl
jo
fistl
sub
sbb
mov
loope
mov
ss
mov
push
into
xchg
pop
xchg
mov
stos
loop
dec
or
mov
imul
push
xchg
push
mov
cld
mov
fimuls
sbb
dec
and
mov
pop
lret
cwtl
enter
loope
dec
sub
inc
push
mov
cmpsl
jno
jmp
jg
adc
xor
or
andb
cmpsl
bound
push
shr
mov
loop
shr
gs
ffree
jg
mov
test
xchg
mov
es
mov
iret
aad
jno
rol
push
dec
vmovlps
mov
lods
icebp
int
dec
pop
stos
or
js
push
jge
push
cld
sbb
fidivrl
jmp
push
movsl
inc
div
pushf
xor
or
fisubs
repz
push
cmp
mov
lret
repz
or
stc
or
movsl
cltd
test
sub
mov
stos
sti
mov
cld
mov
jne
out
jo
ljmp
enter
data16
xchg
in
aad
mov
fcoml
jecxz
push
outsb
inc
scas
sub
lahf
pop
outsl
inc
sti
xchg
out
and
inc
xor
add
cwtl
push
ja
cltd
cmpl
jne
fwait
add
fstpl
or
mov
jp
idivl
leave
stos
aas
out
cmpsl
mov
je
pop
cmc
ljmp
lock
adc
adc
out
movsl
fdivrl
fisubrl
mov
mov
cs
movsb
sti
or
daa
mov
push
jmp
cmpsb
shll
iret
mov
push
sub
mov
dec
insb
loopne
sarl
ja
rol
jno
stc
movsl
xchg
jo
mov
add
pop
mov
mov
push
cmp
imul
mov
mov
lods
add
loopne
or
bound
fldcw
push
jnp
xor
xchg
aad
adcb
out
movsb
pop
fmuls
mov
fwait
dec
adc
xchg
xor
inc
std
sbb
push
lock
out
popf
or
cmp
insl
lock
push
push
ds
movsl
or
in
nop
add
mov
mov
xor
push
and
icebp
mov
cli
xor
mov
adc
mov
push
mov
loope
aas
xor
outsb
vzeroall
sbb
lret
mov
cli
fsts
push
or
mov
lcall
pop
and
mov
addl
add
cld
inc
and
and
daa
lahf
add
jg
xor
push
loope
sbb
or
and
mov
cmc
xchg
xchg
pusha
dec
and
das
pop
mull
lea
leave
das
lods
ret
jl
loopne
lahf
call
lods
push
loop
xor
fcmovb
or
cltd
fmuls
inc
outsl
or
das
popa
pop
test
bound
xchg
xchg
insb
pop
push
and
xor
inc
mov
jecxz
lahf
jns
pop
daa
or
push
jg
lret
mov
mov
je
ret
fcmovnb
aaa
jmp
sbb
pop
mov
xor
pushf
movsl
xor
xchg
push
ss
adc
mov
fsubr
jb
mov
jp
sub
rorl
jns
stos
nop
arpl
xchg
ret
add
popa
ljmp
lds
andl
xor
rorb
dec
mov
shlb
cmp
and
cld
jae
pop
sub
loope
in
mov
fnstcw
loopne
jmp
test
arpl
cmp
pop
sub
sub
fs
adc
popa
push
out
pop
mov
ljmp
scas
sub
jne
lds
mov
cmpsb
dec
xchg
aaa
stos
ja
popf
es
stos
ljmp
ja
lods
adc
dec
dec
add
or
fnstcw
sub
push
jle
scas
cmpsb
js
or
fdivs
xchg
push
pushf
push
push
out
inc
mov
loop
clc
lea
lret
mov
cmp
out
test
adc
xchg
jbe
xchg
sub
jle
push
arpl
jl
jae
repnz
sub
and
mov
and
addr16
aaa
adc
stos
adc
xchg
std
jnp
into
fistps
mov
inc
dec
xor
in
add
subb
push
push
sub
das
mov
mov
pop
pop
jno
add
mov
shll
xor
adc
cmp
dec
cmp
or
gs
les
scas
jecxz
jecxz
xchg
jle
fstps
push
fwait
sbb
mov
js
lret
mov
or
adc
or
fists
push
adc
in
cmpsb
sub
jne
loop
sarl
jmp
scas
stc
pop
leave
shll
sarl
mov
ljmp
aas
mov
sbb
in
adc
xchg
or
mov
sub
nop
mov
mov
je
xchg
jb
push
aaa
xchg
nop
and
mov
repz
and
sbb
lods
test
pop
nop
arpl
stc
rclb
andl
test
loope
test
ret
gs
repz
jae
pushf
push
push
lret
pop
in
and
rcrl
in
jle
in
inc
cli
gs
aas
cvtdq2ps
mov
adc
mov
add
gs
mov
lods
ss
sbb
push
call
sahf
inc
in
adc
xchg
lea
xor
mov
adc
push
popf
adc
cs
pop
inc
add
clc
or
movsl
and
push
movsl
subb
cmp
popa
pop
fsubl
inc
fwait
xchg
fildll
loope
sbb
inc
out
js
shrb
mov
outsl
cmp
mov
fstl
nop
ret
lcall
push
jno
lahf
push
movsb
imul
call
push
add
xchg
ja
jne
sub
xchg
mov
shlb
insb
nop
clc
dec
cmp
cld
test
add
push
das
xchg
mov
lods
int
sti
repnz
js
out
push
inc
sbb
and
outsl
xor
push
push
push
sub
jns
data16
jne
pop
test
rcrb
pop
pusha
outsb
into
push
dec
mov
adcb
pop
cmp
push
adc
ds
test
or
add
cwtl
in
ret
xchg
xchg
pushf
xchg
mov
jge
push
jns
xchg
jecxz
psadbw
mov
jl
sahf
jmp
lea
add
leave
mov
cmp
sbb
sbb
out
sbb
fstpt
mov
dec
in
dec
sahf
es
jb
popa
jbe
push
mov
jp
lret
mov
pop
mov
jns
fs
fwait
mov
clc
jns
sbb
mov
or
sub
in
pop
push
pop
rclb
or
aad
mov
adc
js
jno
in
data16
xchg
popf
dec
loopne
xchg
les
movsl
sarb
cs
xchg
or
add
xor
out
cmp
add
dec
pop
js
rorb
shl
adc
stc
aaa
in
jecxz
mov
hlt
pmaddwd
imul
fcom
inc
lcall
gs
call
mov
adc
push
nop
bnd
test
cmp
dec
pop
lret
dec
sbb
out
xchg
and
repz
jbe
imul
divl
jecxz
add
lret
clc
sub
or
jp
in
mov
loope
push
jnp
adc
mov
pop
scas
xchg
sub
xor
jmp
add
out
sbb
pop
shl
jbe
pop
lahf
inc
xchg
sbb
mov
lds
xchg
out
mov
frstor
lea
scas
sbb
es
cmpsb
xchg
in
subl
lods
jo
ficomps
add
lds
add
stos
xchg
testl
cwtl
movsl
sub
es
outsb
idivb
add
and
xchg
rcrl
or
inc
sub
pop
push
push
out
test
jbe
cmp
leave
mov
or
pusha
incb
psrlw
push
push
xlat
mov
adc
movsl
in
sbb
push
cmp
mov
in
xchg
cltd
jl
adc
adc
mov
inc
int
pop
pop
pushf
jge
sub
cld
in
vpaddq
mov
jnp
push
jmp
sub
std
lds
pop
cs
adc
je
push
and
mov
mov
test
add
ficompl
into
stos
inc
andl
jp
cs
das
outsb
adc
xor
ret
pop
mov
sti
int
jp
insl
test
inc
mov
push
scas
jno
pop
rol
adc
pushf
or
mov
cwtl
stos
iret
cmp
and
mov
and
push
add
out
jle
aas
int3
xchg
mov
cmp
scas
mov
and
xor
dec
sbb
cmp
mov
pop
gs
mov
cmp
stos
mov
cmp
cmp
pop
sub
movl
push
stos
fucom
clc
popa
test
xor
sub
in
cmc
std
and
sbb
mov
mov
cmc
mov
mov
adc
xchg
sub
xchg
push
pop
lcall
test
and
test
mov
lcall
and
inc
push
orb
iret
imul
shrl
jp
mov
andb
push
jbe
mov
popa
fwait
xchg
jl
sub
fdivrl
rcl
pop
not
fwait
dec
das
add
scas
mov
mov
pop
cmp
iret
mov
clc
cwtl
and
leave
jno
imul
xor
push
das
sub
add
push
xor
jge
mulb
daa
jno
pop
scas
shl
adc
loopne
cmpsb
sbb
cmpsl
mov
arpl
cmp
xchg
dec
fcmovnu
out
inc
cli
dec
aam
fdivrp
or
mov
jp
sarb
mov
mov
das
insb
js
loop
xchg
xchg
cmp
aad
mov
sbb
mov
add
loope
mov
dec
aas
push
jnp
movsb
ljmp
repnz
adc
pop
adc
pop
outsl
jmp
insb
lea
lahf
jbe
aas
cld
xchg
sub
aam
jno
test
mov
mov
movsb
sbb
fmulp
daa
pop
or
cmpsb
aas
add
and
andb
push
out
push
mov
scas
fwait
pop
stos
mov
lods
cmp
fsubs
jecxz
shrl
cwtl
in
lods
jno
xor
je
and
add
jmp
lock
jge
push
test
sbb
pop
inc
aaa
popf
aam
push
subb
int3
jbe
push
adc
icebp
out
or
mov
and
pop
xchg
jmp
cmp
xor
not
mov
pop
in
cmc
bound
fcomps
mov
dec
adc
rcll
lock
daa
iret
cmp
xor
push
dec
fmuls
pop
arpl
dec
mov
jb
popa
and
cmp
data16
or
dec
or
pop
aam
sbb
rolb
xor
in
push
addr16
mov
sarb
stos
sbb
or
xchg
mov
cmp
rcll
lcall
subl
push
push
jne
xchg
cmp
pop
xchg
xchg
fdivrl
mov
adc
push
mov
xchg
cmp
leave
in
xchg
or
repz
xchg
push
lods
adc
nop
push
xchg
pop
sbb
adc
test
or
mov
mov
xchg
pop
inc
ret
gs
sub
xchg
xchg
xchg
cmpsb
int3
aas
mov
cmp
cmc
std
mov
cmp
mov
repz
cmp
mov
dec
and
and
jne
std
fnstcw
push
fdivl
lods
cs
xlat
call
fdivr
cmc
add
stc
inc
fsub
add
scas
xchg
inc
mov
adc
test
xor
icebp
iret
inc
rorl
movsl
popf
xor
push
add
into
sub
arpl
xchg
mov
jbe
cmp
lcall
fsubrl
mov
dec
mov
dec
sar
pop
test
or
in
bound
lcall
or
lea
das
xor
int3
dec
push
xor
or
sub
sbb
adcb
push
dec
leave
cmp
cmpsb
shlb
dec
rolb
xor
jbe
cmp
fxtract
out
dec
jne
jne
es
xlat
es
ret
xor
adc
mov
mov
jp
push
cmp
push
jb
and
or
cmp
jecxz
jge
add
jecxz
cmp
sbb
sbb
fldl
pop
hlt
cld
pushf
leave
rolb
dec
movsl
jb
outsb
inc
imul
mov
pusha
fistl
and
xor
stc
data16
sti
imul
loope
inc
dec
push
inc
sarb
addr16
cmp
inc
lahf
shrl
adc
insl
xchg
fldl
or
scas
jmp
rcll
jno
adc
mov
mov
insl
xchg
out
push
inc
jo
cmpsb
stos
insb
inc
movzwl
pop
pop
addr16
mov
ss
addr16
mov
jmp
push
lahf
sbb
outsl
outsb
test
lcall
pusha
sbb
fistl
cmp
cld
not
dec
xor
dec
dec
rorl
cmp
rclb
dec
and
xchg
leave
ficoml
aas
jae
int
inc
mov
push
and
xchg
pushf
xor
add
lret
iret
mov
orl
or
push
inc
outsb
mov
inc
xor
lock
mov
dec
scas
pop
or
jbe
xor
or
repz
jecxz
or
jnp
sub
ljmp
push
sbb
jnp
and
cmp
scas
out
insb
call
movsb
popf
jns
dec
or
xor
pop
push
mov
mulb
jo
xchg
sbb
fstps
cwtl
pop
sub
sub
or
pusha
imul
call
fisubrl
mov
test
cmc
in
iret
dec
cwtl
aaa
and
aas
sub
lock
adc
inc
add
sti
sub
push
daa
icebp
xor
in
fildll
sub
daa
push
ja
dec
sbb
jp
mov
call
inc
push
cmc
pop
std
insl
dec
sub
out
outsl
sbb
mov
pushf
daa
lea
ja
mov
xlat
bnd
sti
inc
nop
xchg
mov
jae
daa
pop
pusha
xor
sub
notl
inc
mov
outsl
add
mov
iret
mov
aas
pop
out
mov
xchg
pop
movsl
and
into
adc
imull
mov
stos
dec
int3
lcall
lcall
dec
pop
outsl
fs
adc
xor
xor
push
jo
add
xor
add
shlb
out
popa
inc
cmp
aam
dec
out
call
ja
insl
pop
inc
call
call
pop
push
cmp
ret
pop
std
testb
xor
imul
lods
xchg
mov
cli
cmc
sbb
mov
fstpl
mov
mov
int3
sub
nop
xlat
mov
mov
mov
sub
xor
stos
xor
xchg
cmp
push
or
pop
mov
xor
jno
mov
mov
adc
sub
jo
or
mov
pop
mov
sarl
jmp
cltd
mov
test
cwtl
cltd
fiadds
repnz
or
lret
nop
cmp
ljmp
mov
mov
dec
or
cmpsl
add
sbb
mov
jns
jmp
addr16
test
out
pushl
stos
insb
dec
sub
jb
xor
add
push
mov
sarb
xchg
add
xchg
test
stos
fnstsw
aad
and
in
ds
rorb
lret
cwtl
imul
mov
addr16
orl
pop
out
arpl
pop
adc
dec
push
icebp
fisubrl
xchg
or
ss
rcl
out
into
xchg
loop
inc
test
mov
jecxz
je
ds
call
into
rolb
xor
testb
xchg
cmp
or
out
jge
lret
sub
add
into
loop
int
xlat
in
imul
jp
aad
mov
xchg
jne
cmp
or
xor
and
mov
cwtl
xchg
mov
pop
jge
inc
mov
std
fcoml
xchg
test
insl
add
cwtl
jb
cli
insl
or
mov
outsl
inc
inc
cmp
pop
mov
mov
in
sbb
jb
inc
pop
push
xchg
insl
into
es
cmp
jmp
in
fidivs
imul
std
push
sti
mov
mov
cs
mov
bound
nop
mov
mov
mov
in
mov
pop
in
stc
mov
dec
sbb
xor
mov
mov
sub
add
popf
sub
cmc
cmp
shll
adc
pop
or
push
mov
xor
sub
xchg
push
add
movsl
and
mov
fdivs
or
clc
aas
inc
cli
dec
je
rorb
ret
fidivrs
je
dec
sbb
mov
xchg
cli
pop
lea
xchg
and
mov
fucomi
jno
push
adc
push
lahf
mov
test
call
fwait
push
mov
pop
lahf
popf
dec
add
loope
jbe
inc
push
pusha
xor
cmp
icebp
sahf
es
xor
ss
inc
out
out
sahf
sbb
data16
gs
in
les
and
rdpmc
ds
inc
sti
jne
out
mov
pop
scas
sti
xchg
mov
add
int
jne
adc
dec
xor
lret
or
push
mov
fmul
pop
or
push
call
mov
sub
dec
idivb
push
jnp
pushf
mov
leave
pop
mov
iret
jmp
dec
lods
pushf
xor
push
test
cld
xor
mov
fldl
ss
cmc
sub
mov
push
inc
call
push
sub
sar
addl
inc
rcll
or
mov
mov
sub
push
inc
inc
in
ret
or
mov
test
dec
sbb
fnstenv
and
pusha
mov
popa
js
jne
xchg
mov
jae
push
ljmp
inc
insl
in
ja
xor
push
sbb
and
fisubs
jmp
adc
jg
add
mov
dec
pop
jl
sub
movsb
mov
xor
mov
stc
lea
push
lea
ror
ds
and
cmpb
les
in
adc
sub
rcrb
out
mov
cld
dec
lea
lcall
in
test
dec
jp
mov
mov
jae
inc
or
pop
mov
adc
lock
jns
inc
lds
ret
jnp
jnp
jbe
adc
daa
imulb
xchg
xor
scas
add
out
ret
rol
adc
add
lods
and
bound
inc
push
push
orl
call
shll
nop
jmp
push
pop
jne
addl
repnz
adc
int3
out
hlt
enter
jmp
fisubrs
pusha
mov
imulb
fidivl
pop
pushf
addr16
xlat
pop
xchg
pop
mov
scas
push
add
xor
mov
lea
insb
mov
mov
sbb
lret
xchg
lret
cwtl
mov
sub
sbb
stos
nop
push
xchg
sbb
scas
out
add
js
popa
mov
mov
insb
aad
ss
aaa
push
inc
ljmp
clc
cmp
int3
xchg
scas
in
dec
inc
mov
add
cmp
nop
jmp
ror
scas
jmp
xor
packssdw
jbe
add
pop
fiaddl
or
into
ret
lds
xor
lea
xor
out
icebp
aam
repz
sub
in
popa
mov
mov
ret
dec
in
sub
push
inc
mov
out
dec
ljmp
stos
mov
or
call
test
in
xor
popa
push
aaa
xchg
sbb
in
xchg
popf
mov
aam
sbb
jl
pop
mov
or
add
jnp
ljmp
fidivrs
mov
repz
adc
push
popa
lea
sarl
xchg
sub
repz
popf
mov
stos
rcr
test
lret
dec
push
mov
jmp
in
dec
xor
xor
or
imul
inc
test
outsb
lds
aas
pop
pop
xchg
fisubs
pop
xchg
mov
xchg
mov
jno
mov
add
lahf
lea
aad
fsubrs
cli
pop
or
pop
sbb
lods
dec
dec
mov
cmpsl
repnz
push
pop
pop
fldt
jns
loopne
aam
lock
xchg
ficomps
adc
in
fimuls
mov
fisubrs
xchg
or
push
inc
test
cmp
popf
dec
xchg
or
sbb
clc
popa
push
nop
cmp
lock
loopne
cmp
ss
rcrl
lods
cs
fmull
fsub
pop
dec
xor
sbb
bound
mov
jno
inc
mov
orl
notl
rcll
sbb
mov
daa
lret
sbb
stos
push
dec
ss
loope
push
mov
pop
pusha
fists
add
jl
outsl
out
call
cmp
fadd
test
aad
push
mov
lahf
scas
daa
jbe
insl
mov
mov
xchg
jmp
inc
jp
movsb
cli
sbb
cmp
leave
lret
insl
cmpsb
jo
dec
test
or
roll
fstps
add
cmp
jg
cmp
pop
ss
sub
adc
leave
inc
lds
mov
jmp
ss
push
mov
call
pusha
fchs
mov
les
jnp
notl
pop
sbb
scas
out
dec
xchg
sbb
xor
xor
lock
pushf
test
lock
and
lcall
mov
movsb
or
inc
mov
adc
in
cmpsb
ljmp
leave
xor
int
adc
and
inc
dec
scas
add
bound
sub
out
ret
xchg
in
aaa
lahf
in
sub
xchg
jmp
mov
xchg
aam
dec
cmp
adc
and
or
call
xor
pop
arpl
adcb
mov
mov
xchg
mov
fcoms
sbb
pop
pop
fcomps
adc
cwtl
dec
pop
push
movsl
dec
loope
pop
jnp
xlat
test
jb
pop
ja
loopne
mov
fdivp
popf
sti
jge
mov
mov
bound
add
pusha
mov
out
dec
or
sbb
popa
leave
xor
nop
cmc
je
pop
mov
pushf
cwtl
fwait
btr
push
fisubrl
pop
mov
push
sbb
cmp
ret
pop
jno
das
sub
xchg
cmp
outsb
sahf
sub
cmp
add
dec
bound
gs
adc
dec
xor
jnp
mov
lods
rcrb
iret
mov
xchg
mov
cmp
imul
and
jmp
xchg
xor
xor
push
icebp
nop
inc
inc
adcb
pop
and
adc
daa
pop
test
stos
insl
dec
mov
jb
aaa
in
push
jae
cltd
movsb
in
test
dec
jp
enter
decb
leave
jne
jno
andl
aaa
push
push
pop
mov
mov
arpl
mov
js
ret
lahf
and
lods
cs
jae
inc
pushf
cmpsl
scas
push
test
jecxz
imull
sbb
inc
dec
out
pop
jl
scas
nop
jle
jmp
push
lock
inc
leave
int3
sbb
sub
ficoms
testb
push
stos
ja
sbb
cmp
cmp
repz
add
pop
pop
adc
inc
or
adc
sub
xor
jno
jl
dec
int
fmul
and
push
mov
ret
fisttpl
je
push
test
loope
sbb
fadds
add
jecxz
pop
ds
mov
adc
jnp
jg
cmp
and
movb
rclb
movsl
mov
lret
iret
repz
cmp
or
add
mov
inc
and
hlt
push
and
repnz
sbb
sahf
fsts
popa
sub
mov
data16
push
jge
mov
adc
or
xor
ja
imul
inc
scas
sub
repnz
cltd
fisttpl
das
shll
mov
xor
inc
jb
out
pop
repnz
dec
mov
mov
and
lock
movsl
inc
cwtl
xchg
dec
jecxz
and
test
lea
cmc
mov
mov
lahf
sub
adc
rcrb
pop
lock
orps
add
xchg
sbb
or
or
enter
fxch
add
lahf
pop
imul
pop
jge
rol
popa
imull
sub
clc
addr16
add
lea
cltd
pusha
lds
mov
cmp
jo
out
imul
and
mov
jecxz
add
es
cmpsb
clc
mov
js
aad
or
mov
lcall
mov
pushl
rep
mov
iret
rclb
js
imul
out
mov
inc
das
dec
decb
lret
adc
jo
inc
cmp
jg
dec
imul
or
xchg
push
icebp
pop
pop
jmp
cmp
mov
mov
aad
dec
and
jbe
bound
addb
fsubrl
cmpb
jl
jmp
je
push
add
xchg
aad
aaa
test
ljmp
test
dec
lds
cmp
dec
push
jl
loope
pop
int3
data16
sbb
repz
faddl
pop
pop
outsl
jnp
inc
adc
push
loope
cmpb
fcomip
xor
lea
and
test
and
xlat
testb
pop
add
dec
mov
mov
jb
cs
mov
mov
js
pop
lock
dec
mov
stos
fisttps
cmp
push
pusha
inc
sub
or
pop
mov
loopne
pop
mov
pusha
ret
push
repnz
ja
pushf
pop
jb
xchg
mov
in
sub
add
loope
je
push
mov
mov
pop
ja
jns
mov
push
mov
jl
xchg
data16
ret
or
ja
xor
pop
cmpsb
xchg
sbbl
jp
cmp
stc
xchg
xchg
inc
icebp
cs
inc
out
fisttpl
pop
gs
aam
mov
pop
or
sbbl
psubsb
xlat
mov
xchg
jp
xor
inc
aam
rcrl
sbb
dec
and
sbb
cmpsl
mul
inc
sarl
ret
inc
movsb
outsl
jg
fsub
add
cmp
jg
out
jp
test
xchg
inc
std
mov
mov
mov
adc
and
into
mov
sbb
mov
jb
movsl
mov
divps
aas
lea
pop
bound
and
push
shlb
ret
inc
call
dec
dec
push
xor
sub
rcl
add
mov
mov
lret
lock
mov
out
mov
bound
mov
incl
cmc
repnz
scas
mov
inc
scas
insl
xor
sbb
scas
adc
out
popf
mov
imul
push
adc
andl
call
add
rcrb
jb
in
lock
ss
nop
jae
sub
lret
sbb
jg
outsl
rol
push
cmp
pop
das
in
add
inc
sub
cmp
adc
ret
dec
cmp
es
sub
inc
add
shlb
loop
push
outsb
mov
scas
incl
shll
sub
xchg
lcall
mov
sbb
add
mov
aad
sub
test
imul
mov
or
cmp
popf
cmp
jno
mov
cmp
aaa
cmp
daa
lcall
pop
mov
addr16
flds
push
sbb
stos
jno
jnp
xchg
adc
roll
mov
shlb
ss
jo
sti
inc
shll
sub
push
lahf
addl
enter
rcl
pop
adc
mov
cmpsb
insl
and
cmc
mov
xchg
jno
sbb
mov
jbe
cmp
xchg
mov
out
test
mov
loop
adc
push
adc
fisttps
mov
xor
inc
and
into
or
repz
sbb
js
divb
sbb
add
cmp
scas
dec
or
ljmp
popf
out
jp
nop
bound
decl
sub
push
cmp
or
and
jnp
or
sub
insb
push
xlat
adc
or
dec
js
mov
pop
ljmp
negb
fldt
iret
test
je
fadds
add
and
xchg
mov
mov
addr16
dec
lret
jo
push
hlt
loop
insl
push
idivb
push
sbb
xchg
pop
add
lahf
pop
cmp
shrl
movl
xor
mov
clc
idiv
into
nop
add
notl
aam
cmp
aam
pmuludq
and
push
mov
or
dec
hlt
pop
mov
subl
sub
pop
mov
cmp
inc
popf
insl
mov
loopne
cmp
sub
xor
mov
jne
mov
outsl
add
out
mov
inc
xchg
add
pop
pop
pop
fsub
aad
insb
ret
loop
pop
fwait
test
in
xchg
data16
loop
fisubrl
dec
insb
inc
mov
es
insb
mov
lds
outsl
pop
or
jbe
mov
int3
repz
pusha
sahf
cmpsb
add
stc
sbb
sub
imul
in
in
and
sbb
inc
lds
lret
scas
and
dec
ret
les
jno
sbb
xchg
pop
ljmp
push
ret
jns
push
lcall
mov
lret
lods
xchg
cmp
repz
insl
idivl
clc
dec
push
sub
dec
adc
inc
mov
adc
arpl
sbb
cmpsb
mov
popa
pop
lret
sub
je
xchg
mov
out
mov
dec
pop
mov
push
or
or
mov
mov
xchg
xlat
sbb
dec
data16
ss
add
or
sbb
cli
push
arpl
pop
xchg
lret
ja
add
push
out
xchg
sub
cmp
cld
mov
mov
mov
or
mov
bound
xor
leave
adc
xchg
sarb
sahf
fildl
sbb
add
ror
sub
popa
stc
jns
add
mov
ret
jl
mov
jl
mov
push
adc
inc
test
ret
cs
incl
jne
mov
mov
jb
mov
push
cmp
mov
aaa
add
or
leave
sbb
and
dec
int
fwait
cmp
movsb
mov
cmc
outsl
inc
in
mov
outsb
insb
out
jmp
lret
pop
stc
pop
jbe
add
cmp
cmc
rcl
jne
and
cli
jns
xchg
xchg
out
popa
adc
sub
icebp
push
cmove
icebp
dec
xlat
insb
imul
and
notl
lret
clc
mov
mov
xor
push
adc
dec
stos
in
rcr
jnp
mov
jge
mov
div
fldenv
es
adc
cmp
xchg
ss
sahf
ret
xor
cmp
cld
icebp
add
cmc
adc
dec
clc
xchg
fsubl
cmpsb
push
inc
rorl
inc
fists
pushf
jo
ljmp
insl
xchg
or
cwtl
aas
loop
loop
in
int
sbb
mov
and
xchg
xchg
inc
rcr
push
loop
out
pushf
test
and
out
jge
cmp
out
insl
das
inc
cmpb
decb
push
jl
and
mov
insl
stos
ds
xchg
jbe
add
pop
jl
sub
and
in
les
xor
fs
adc
push
push
cmp
gs
aaa
negl
cld
out
out
add
mov
inc
inc
pop
bound
or
sub
push
push
add
imul
in
das
inc
add
mov
rcr
nopl
lock
or
iret
lock
jp
push
ret
add
mov
outsl
mov
jg
lock
sbb
ds
test
jp
cmp
push
inc
cmp
sbb
in
dec
das
popl
ss
push
cmpsb
mov
rcrl
jg
add
push
or
das
mov
inc
out
and
das
dec
jo
popl
stc
mov
mov
ss
inc
xchg
mov
inc
icebp
arpl
rcrl
xchg
sbb
dec
mov
arpl
inc
fsts
inc
lds
shr
adc
xor
mov
loopne
pop
adc
fidivrl
pop
bound
subb
in
jg
push
test
outsl
inc
jge
sub
lds
add
dec
dec
js
icebp
lods
popf
pop
xor
jnp
xchg
loop
in
cmp
mov
lock
shl
xchg
loop
push
fwait
push
es
shll
mov
or
push
les
mov
sbb
xor
aaa
xorb
sub
fcmovb
sub
popa
push
xchg
cld
mov
mov
or
js
lds
cmp
pop
shr
aaa
mov
adc
mov
das
pop
js
lds
out
mov
mov
lret
jnp
sub
xchg
ljmp
fldenv
mov
push
sbb
fldl
fwait
pop
je
shrb
mov
loopne
icebp
movsb
adc
mov
sub
or
es
pusha
and
inc
jl
xchg
xchg
xlat
insb
xor
test
imul
push
mov
addr16
jmp
mov
stos
cmpsl
xchg
loop
cmp
ret
mov
ljmp
sahf
xor
pop
insb
pop
sahf
inc
sbb
xchg
addb
enter
jae
xor
cwtl
lcall
sub
fbstp
push
xchg
icebp
or
add
and
in
fisubrs
jmp
in
or
daa
out
pop
imul
jnp
push
cwtl
mulps
andb
mulb
inc
xchg
or
and
push
jp
mov
add
add
test
cs
sahf
pop
inc
cs
cltd
mov
ljmp
adc
lcall
lahf
mulb
sbb
loop
add
pop
mov
or
gs
inc
nop
push
sbb
outsl
sbb
mov
lret
aad
push
fisttps
hlt
fwait
mov
inc
pop
mov
dec
aas
pop
imul
inc
pop
jb
mov
mov
rolb
adcb
pushl
pop
cmpsl
cmp
stc
cmc
jne
mov
loopne
jmp
rolb
cltd
adc
inc
clc
mov
and
xchg
and
or
clc
xor
ss
xchg
xchg
decb
jmp
push
and
sub
add
mov
xor
aas
aad
scas
mov
scas
daa
pop
das
fwait
or
das
mov
sbb
mov
cmp
cmpsb
pop
push
mov
xchg
sub
pop
es
flds
or
adc
sbb
xlat
xchg
push
test
lahf
push
jns
scas
pop
jge
rorl
pop
cs
push
xchg
add
sbb
jnp
lcall
inc
outsl
movsl
jbe
lock
push
xchg
fwait
xchg
fldl2t
icebp
sub
shr
loope
cmp
or
ror
fwait
inc
leave
xor
dec
int3
or
insb
push
cmp
mov
loopne
pop
idivl
jae
daa
pushf
ret
into
add
aam
cli
stos
ret
or
shrl
sub
push
add
dec
iret
cmp
dec
int
arpl
jae
pop
sbb
xor
andb
fdivrl
or
push
testl
js
dec
enter
ljmp
sub
cwtl
roll
xor
lods
or
mov
lds
icebp
ror
dec
mov
xor
sub
or
jae
pushf
test
lcallw
pop
xor
daa
and
out
mov
mov
dec
adc
cwtl
addb
ljmp
cmc
mov
ljmp
js
add
inc
movsb
xchg
and
push
xor
pop
lret
and
push
xor
lea
mov
and
pushf
xchg
pop
xlat
stos
push
mov
xlat
in
loopne
or
mov
mov
fsubrl
inc
xor
mov
push
fsubrs
pop
cmpsl
mov
push
rorl
fwait
xchg
lcall
xor
mov
xchg
mov
mov
jmp
adc
shlb
aaa
ret
in
cmp
fcoml
arpl
xchg
inc
mov
xchg
out
xchg
adc
sbb
xchg
xor
xchg
mov
mov
sti
inc
aam
adc
cld
or
pop
lcall
adc
jge
adc
mov
daa
pop
adc
and
mov
push
jbe,pn
repz
and
ljmp
xchg
push
mov
sti
xchg
jmp
icebp
dec
out
mov
mov
icebp
sub
aaa
add
jnp
push
movsb
leave
leave
rcrl
movsb
in
push
stc
jl
int3
push
fbld
sbb
es
loope
inc
xchg
decl
test
push
test
xor
xlat
fisubl
jns
test
push
loopne
push
fdivrl
fs
xor
ret
sub
fadds
mov
mov
adc
int3
jo
in
das
shr
push
mov
ds
jbe
inc
lret
xchg
aas
or
sahf
jp
icebp
push
fs
jp
out
test
pusha
sbb
cmp
xchg
pop
dec
insb
xor
cmc
data16
pop
xor
mov
pmulhw
jl
les
jae
sti
xor
add
or
adc
or
test
fninit
out
push
add
cli
mov
jg
rol
cli
sub
sub
mov
cmp
in
push
out
sbb
test
lret
jmp
out
add
cmp
mov
pop
stos
inc
or
pop
sub
add
insb
cmp
jl
rol
pop
mov
xor
fcmovu
xchg
hlt
mov
shll
push
fwait
inc
cmc
mov
add
test
push
shll
push
push
imul
adc
jno
add
pusha
sahf
jmp
lods
sbb
lods
adcl
push
lock
sbb
sbb
shl
jmp
add
paddsb
dec
lea
add
cld
popa
jl
adc
dec
jbe
dec
inc
pop
mov
sub
jno
mov
inc
sti
mov
mov
movsb
add
ficoml
jno
add
adc
mov
push
adc
cld
movl
mov
pop
test
sub
push
data16
in
mov
push
fwait
jne
iret
xor
insb
insl
repnz
cmp
ret
into
xchg
xchg
roll
adc
out
or
add
sbb
push
jb
or
out
std
lret
imul
xor
add
jb
hlt
fldcw
sbb
out
stc
fcmovu
jecxz
imul
or
cld
xchg
mov
inc
sbb
fisubrs
dec
sub
mov
push
jne
rol
cmpsb
or
fsubr
insb
loopne
push
movsb
scas
lods
test
xor
add
shl
jns
ljmp
sub
or
sbb
cltd
call
and
hlt
sub
nop
push
fs
loopne
cmp
ds
addr16
cltd
sub
pop
and
icebp
movsb
stc
jp
dec
or
cltd
mov
aaa
popa
lds
and
sub
pushf
repnz
cmp
mov
lahf
lcall
push
xor
enter
imul
int
mov
rorb
pop
cmp
dec
jns
out
fadds
insb
ljmp
test
repz
out
or
int
outsb
mov
sub
jae
test
aam
shlb
in
popa
add
xor
jbe
iret
rcll
aas
aaa
pop
inc
adc
jne
dec
fmul
sub
jecxz
cmc
fcmovnbe
xchg
js
lds
hlt
jmp
imul
sub
jns
faddl
movsb
int
mov
pop
fisubrs
scas
test
clc
mov
or
and
test
lock
push
jge
jne
repz
in
mov
add
shll
ss
dec
loope
loope
fwait
rcrb
jmp
aaa
stc
push
loop
inc
lods
jae
push
leave
add
icebp
or
dec
push
loop
jns
pop
xchg
adc
or
cmp
aad
jo
push
mov
jmp
sbb
or
dec
hlt
add
ss
outsb
push
es
inc
lret
bound
loopne
xchg
outsb
jo
pop
dec
mov
adc
div
cltd
in
fnstcw
das
lods
int
add
push
gs
cmp
dec
push
nop
adc
push
fsubr
or
jno
dec
test
xchg
or
sahf
mov
nop
pushf
shrb
fwait
mov
repnz
push
out
cwtl
cs
push
fistps
pusha
neg
jge
cld
adcl
dec
les
cltd
test
pop
mov
push
sub
and
int
adc
add
test
leave
jmp
dec
jne
sub
ret
mov
jo
add
push
insb
jl
jp
loope
imul
cmpsb
in
hlt
das
cmp
loop
test
lea
leave
das
addr16
or
loope
push
jg
push
pop
pop
mov
daa
xor
mov
push
cmp
or
xor
xor
push
addl
mov
in
lcall
insb
call
mov
sar
cmpsl
popf
dec
test
adc
mov
jno
xor
sbb
add
ror
jle
popa
dec
addr16
mov
divb
aad
xchg
clc
mov
xchg
loop
fimull
dec
mov
nop
lahf
add
inc
inc
loop
push
mov
jo
in
test
xchg
nop
lcall
pop
aas
push
or
das
nopl
jmp
cmp
mov
call
cltd
adc
rolb
push
jae
pop
popf
mov
sbb
in
aaa
lea
iret
xchg
or
push
and
cs
fwait
mov
pop
jb
rorb
jbe
sub
icebp
sub
mov
mov
lret
jne
cli
jnp
xchg
jge
call
mov
mov
add
inc
hlt
jmp
jb
mov
ljmp
sbb
inc
xchg
xor
pop
das
mov
adc
out
fstps
lcall
push
pop
enter
add
pop
movb
mov
movsb
loopne
insl
jnp
iret
mov
push
pop
jl
fadds
stos
in
movsl
add
nop
inc
mov
adc
inc
dec
push
sahf
std
push
sub
scas
xchg
adc
inc
lret
imul
mov
into
cltd
jbe
aad
xorl
ficoms
push
xchg
sub
mov
mov
inc
or
fnstenv
test
sbb
ret
pop
or
dec
movsb
out
das
mov
test
xchg
cmpsl
sub
lock
push
and
inc
mov
cs
insl
outsl
lahf
cmp
sbb
movsb
mov
aad
aam
pop
cmpsl
pop
dec
mov
dec
cmp
inc
pop
fsubl
push
mov
cmp
and
sbb
mov
movsl
test
jne
lcall
popw
ret
or
cltd
hlt
mov
ds
adc
out
je
ret
adc
cs
adc
inc
inc
sbb
mov
mov
loopne
scas
sbb
pop
test
mov
sub
xchg
rol
push
ss
pusha
push
clc
jae
sarl
push
ds
adc
test
lock
aad
mov
push
test
lds
sarl
push
jg
xchg
enter
fisubrl
xchg
out
daa
aam
imul
subb
or
xlat
mov
mov
adc
std
sbb
addb
mov
mov
inc
ja
test
ret
jo
call
or
pusha
mov
movsb
subl
loop
push
sahf
mov
xchg
roll
aaa
dec
in
in
pusha
js
or
stos
pushw
out
or
mov
loopne
scas
sbb
and
ljmp
outsb
pop
xchg
aas
mov
dec
adc
jmp
lcall
sbb
stos
jnp
push
mov
and
dec
xor
xlat
hlt
nop
mov
fdivr
lret
test
int
test
dec
mov
inc
loope
rol
xchg
dec
push
es
stc
xor
lret
sub
cli
jno
stos
popf
pop
cmp
std
scas
rep
cmp
cmpsl
test
mov
subb
fisubl
jae
fdivl
mov
sub
aas
fidivs
jmp
and
or
and
aaa
fsts
cwtl
dec
cmp
pop
test
cmc
or
mov
daa
ret
test
push
out
js
pop
lahf
movsl
xchg
or
cmpsb
and
dec
push
insb
ljmp
mov
push
pusha
sub
sahf
out
mov
xor
movsb
push
imul
add
aam
mov
nop
shll
je
daa
mov
ljmp
jb
or
push
insl
test
lds
mov
lock
cmp
and
push
inc
pop
lea
xor
cmp
jg
sbb
inc
cmpsb
pusha
mov
adc
jmp
test
jb
mov
sbb
ret
bound
pop
je
icebp
and
bound
cltd
push
in
inc
and
cmp
in
stos
jae
mov
lods
inc
push
inc
xor
insb
cmp
xchg
lods
add
movb
mov
into
xor
fsubrp
sub
sbb
fdivrs
shl
push
fisubl
pop
pop
xchg
inc
mov
sub
sub
inc
add
jge
push
or
jl
out
repz
repz
js
dec
rcrl
fwait
loope
cwtl
xchg
cmp
in
jge
shll
xchg
push
aaa
xor
out
out
popf
jp
sub
xor
and
rorb
mov
cmc
cmpsb
hlt
xchg
jns
jae
xor
cld
pop
dec
sar
popf
sub
iret
pusha
loop
aam
sbb
push
cmp
stos
inc
aas
sub
aad
fistpll
inc
dec
movsb
nop
call
in
test
xchg
ret
xchg
pop
lods
dec
pop
xchg
inc
adc
rorl
mov
fucomp
mov
jnp
pop
insl
loope
sbb
shll
clc
sub
dec
xor
inc
and
push
arpl
lret
pop
xor
int
xor
popf
fisttpl
dec
push
push
and
push
std
push
hlt
daa
jae
call
lret
push
sub
cwtl
cmp
stos
fstpt
cmp
push
scas
popf
divb
add
mov
push
pop
shrb
in
pop
not
lods
mov
sbb
cmp
data16
dec
jmp
mov
mov
outsb
ret
loop
sahf
shlb
imul
inc
orb
ret
mov
loope
repnz
outsb
lret
fs
scas
pop
jecxz
out
daa
ljmp
aaa
xchg
pop
pop
inc
je
mov
mov
insl
xchg
add
mov
mov
dec
xchg
xchg
xchg
sbb
shl
push
fmuls
push
jno
stos
xchg
cmpl
cmp
xor
fcmovnb
jo
inc
mov
je
add
data16
call
arpl
mov
cmpsl
jae
push
and
shlb
jnp
pop
repz
aaa
xor
adc
adc
adc
in
xor
hlt
imul
add
ret
and
leave
mov
xchg
jl
addr16
iret
hlt
or
popa
ja
push
loope
ja
jp
mov
mov
std
sub
leave
icebp
add
sub
lea
jecxz
dec
lret
into
in
xor
pop
test
fwait
sub
jl
and
xchg
gs
stos
sub
mov
mov
fucomip
push
into
pop
mov
pusha
sub
jno
cmc
mov
mov
push
divb
stos
sub
push
test
pop
scas
xchg
stc
and
into
test
imul
mov
stos
hlt
cs
fisubs
xchg
lods
ja
or
push
jl
push
mov
mov
js
ret
mov
jmp
sub
jl
add
add
jae
mov
push
cmp
sbb
lret
inc
dec
pop
popf
jecxz
pop
cld
in
les
subb
mov
pushf
push
mov
subb
scas
rorb
inc
pop
xor
xlat
ror
xchg
andl
or
sbb
imul
adc
mov
sbb
mov
mov
repz
dec
in
dec
mov
cmc
mov
jmp
in
outsb
sub
dec
xlat
mov
scas
lods
cmpsb
and
push
mov
cmc
into
lods
push
popf
notb
movsl
popf
add
stc
in
popf
stc
mov
inc
nop
mov
and
inc
xor
aam
dec
cwtl
xor
mov
xor
pusha
cld
loopne
mov
js
negb
dec
xor
dec
mov
pop
outsb
mov
xor
mov
mov
jl
fdivrs
mov
mov
fiaddl
jl
mov
pop
les
xor
mov
xchg
xchg
js
or
cmpsb
cld
push
xchg
adc
xchg
hlt
adc
test
es
ffreep
cltd
pop
push
push
addb
push
ret
dec
mov
rclb
shl
gs
mov
add
lods
gs
and
gs
aas
jne
dec
inc
cwtl
xor
cmp
int
aaa
mov
pop
push
mov
add
mov
xchg
push
or
add
pop
inc
push
jecxz
lods
test
sbb
dec
cli
or
xchg
push
sbb
jl
sub
pusha
shrb
roll
inc
cmp
mov
push
test
push
ja
lods
lock
fistl
mov
pop
into
dec
sbb
add
jb
jge
pop
loope
inc
inc
sub
mov
mov
sub
cli
mov
sar
xor
pop
sbb
sbb
pop
jp
popa
mov
or
sub
aam
add
mov
cmp
repnz
or
push
sub
xchg
fstl
mov
mov
roll
push
push
mov
cmp
inc
adc
cld
loopne
mov
sub
enter
adc
and
ja
sub
mov
jno
sahf
push
mov
adc
xchg
cmc
and
mov
sbb
xor
idivl
add
mov
push
inc
std
add
in
into
mov
pop
push
sbb
push
in
or
jmp
rcll
faddl
cmc
stc
cmpb
fcomi
mov
test
lds
xor
scas
frstor
or
jge
xchg
pop
mov
test
fdivrp
lcall
insl
cmp
repz
fcomps
aas
mov
shl
mov
lods
cmp
mov
mov
cmp
sbb
mov
mov
xor
mov
rep
adc
inc
test
xchg
pop
push
dec
mov
leave
ja
dec
cmp
inc
shlb
shl
addb
mov
popf
aas
arpl
mov
adc
stos
gs
frstor
adc
loope
inc
mov
adc
clc
pop
adc
sbb
cmc
cmp
pop
inc
test
ficomps
mov
fbstp
push
xchg
test
daa
xchg
rorb
stc
test
pop
pushl
mov
icebp
loope
imul
jae
jl
in
and
xor
lret
push
mov
fs
xchg
add
pop
inc
das
rcr
or
testl
jecxz
dec
cmp
and
out
aam
adc
ds
xchg
stos
fisubrl
hlt
xorl
cmp
and
iret
push
mov
popa
mov
negb
sbb
test
popf
cs
pop
mov
cmp
outsl
cmp
roll
shrl
loop
pop
repz
lods
out
sbb
std
and
inc
mov
push
jns
jno
loope
bound
in
lret
rolb
in
xchg
xchg
test
scas
push
mov
js
ljmp
push
sub
jmp
adcb
xor
jmp
mov
inc
pusha
dec
inc
lods
stos
push
int
out
jl,pn
out
pop
in
jo
rorl
fidivl
mov
popf
test
jecxz
inc
add
ja
push
jae
addr16
in
roll
cmp
outsb
rcrb
sbb
lcall
xchg
and
mov
sub
cmpsl
mov
rcll
xor
dec
mov
insl
pop
xchg
dec
scas
push
mov
jns
inc
jmp
push
pop
jne
int
aam
sbb
xor
ror
nop
push
mov
loope
imull
sti
mov
insb
and
and
jg
sbb
outsl
addr16
jecxz
dec
fidivl
push
push
popa
mov
xor
lret
imul
push
iret
stos
pop
push
inc
mov
inc
test
scas
loop
cld
nop
in
xor
push
sub
fucomi
call
xor
cmp
pop
mov
pop
fiadds
dec
push
in
push
mov
sub
xchg
add
loopne
inc
out
pushl
cmp
mov
repz
jno
xor
fsubrl
nop
ds
xchg
add
mov
je
fnstcw
adc
sub
enter
cli
push
jl
data16
cmpsb
add
daa
cltd
jle
mov
mov
mov
and
ljmp
aad
aas
jno
mov
or
push
ss
adc
sti
sarl
imul
inc
inc
xchg
push
and
imul
inc
repz
push
sub
mov
shlb
div
xchg
push
xchg
in
imul
xorl
jb
cli
cld
pop
pop
lds
cmp
hlt
push
add
and
cltd
jmp
pop
xchg
and
xrelease
ret
and
and
mov
jae
push
pop
gs
xlat
dec
mov
icebp
cld
adc
mov
cmc
inc
test
pop
cli
xchg
sbb
stos
dec
std
sbb
lret
fdivrl
or
lahf
pop
out
mov
subb
sarb
jo
imul
lock
push
loope
sahf
jns
xchg
outsb
popa
jns
jne
fnstsw
xor
jmp
sbb
lods
mov
push
mov
push
xchg
or
ficompl
pop
push
adcb
cmpsb
cmp
mov
std
test
inc
pop
xchg
mov
add
mov
cmpsb
mov
jp
jbe
and
cs
sbb
sbb
aam
scas
cmp
bound
ret
jns
cmovbe
mov
sub
jmp
int3
call
outsl
jle
lods
ja
jns
mov
xchg
test
cmp
lcall
movsb
mov
or
push
andb
inc
adc
mov
cmpsl
iret
sub
into
outsb
lret
push
push
pop
jecxz
and
push
lcall
jecxz
mov
jmp
push
xchg
es
imul
dec
jb
sub
pop
scas
mov
adcl
push
je
jle
fistpl
fsubr
cmp
arpl
or
push
jecxz
mov
call
lods
xchg
lret
jmp
inc
mov
repz
ret
cmp
fisubrl
sbb
push
sub
popa
je
sub
fsubr
push
lds
sbb
and
cmp
mov
xor
mov
dec
mov
add
test
mov
fwait
sahf
loopne
mov
dec
sub
mulps
mov
es
dec
mov
xor
mov
mov
nop
push
adc
mov
mov
pusha
mov
lods
jmp
je
lds
sub
xchg
leave
out
jae
jl
cmp
sbb
adc
mov
push
sbb
xchg
xlat
aam
out
loopne
cltd
je
push
xor
sbb
ss
les
pop
std
push
xlat
pop
movsl
test
dec
leave
sbb
mov
popf
data16
inc
dec
sarl
out
xlat
rolb
jp
jbe
jge
into
mov
or
jns
xchg
int
scas
mov
orb
fwait
push
stos
jbe
adc
jae
pop
push
out
scas
in
das
xchg
cmp
cld
pop
ret
push
cwtl
jb
pop
outsb
dec
cmp
fistps
sbb
and
jg
inc
aas
push
in
ljmp
add
sub
jle
xor
decl
aad
scas
faddl
xor
mov
add
mov
sahf
jle
fwait
lcall
push
stos
pop
divl
adc
shl
sbb
stos
and
mov
cmp
pop
stos
std
in
ret
jp
scas
pop
ret
scas
xor
xchg
mov
adc
sarb
fwait
mov
out
xchg
enter
dec
test
xlat
sub
mov
ja
adc
push
mov
cmpsl
add
sbb
jp
or
data16
lds
dec
mov
fdivs
gs
dec
daa
xchg
mov
je
outsb
and
sbb
nop
hlt
movsl
pop
mov
pop
enter
and
sub
dec
inc
shr
xor
ljmp
jae
mov
fisubs
adc
test
xchg
xor
or
mov
xchg
shll
or
push
flds
into
fwait
mov
push
xor
cli
sub
adc
repz
push
inc
in
sub
movsl
lret
inc
cmp
pop
insb
mov
jbe
mov
mov
and
mov
sbb
sbb
mov
or
bound
andl
or
sbb
xchg
addr16
or
xchg
out
xchg
mov
in
or
bound
pop
push
mov
das
sbb
ret
sub
mov
repz
xorb
cmc
je
stc
add
test
out
in
out
cmp
add
jle
xor
outsb
push
loop
dec
test
mov
mov
std
pop
xor
fsubrl
push
mov
push
fs
aam
scas
mov
dec
cmp
push
cmp
cmp
xor
lods
push
mov
fstpl
addb
mov
inc
fisubrs
nop
jle
push
adc
gs
pop
ds
sahf
sub
cmp
sub
and
fucomi
lods
repz
cs
out
jge
adc
into
repnz
das
insb
xor
jecxz
mov
push
jbe
push
sti
mov
test
inc
jno
ficomps
cmpsb
das
cwtl
or
adc
push
inc
jnp
add
imul
into
cwtl
mov
cmpsb
shlb
outsb
mov
adc
iret
adc
add
dec
daa
push
es
jle
in
outsl
or
mov
adc
pop
lock
mov
cmp
pop
xlat
daa
test
iret
repz
in
sbb
filds
jl
enter
test
in
sub
outsb
pop
mul
sbb
pop
sti
addr16
icebp
push
cmpsl
xor
cmp
inc
mov
sub
jo
jno
cmp
imul
fildll
mov
pop
dec
in
mov
faddl
add
mov
nop
and
mov
or
xor
sbb
out
pop
movsb
fs
adc
loope
shll
cwtl
lods
xor
adc
adc
nop
fstpl
dec
ja
rorb
iret
mov
adc
filds
lcall
aas
fmul
fidivs
adc
jb
jmp
mov
cmpl
cmp
rcll
add
sbb
dec
test
lcall
clc
or
dec
icebp
imulb
mov
into
mov
jg
xchg
shrl
cmpsl
sbb
pop
sbb
push
cmp
cmpsl
loope
push
and
dec
dec
ret
shll
xor
pop
adc
call
add
and
into
popf
rclb
incb
rol
push
and
add
pop
xor
in
xchg
inc
lret
fdivrs
adc
inc
hlt
mov
aas
add
xlat
shll
daa
mov
inc
int3
clc
ret
enter
shll
push
sbb
cmp
test
push
pop
int
aam
rcrb
sbb
mov
add
pop
scas
cmpxchg
jp
pop
daa
xchg
aaa
lea
lahf
mov
pushf
test
xor
int3
sbb
mov
pop
mov
cmpl
pop
pop
mov
pop
mov
aas
or
or
pop
mov
rcrb
gs
cmp
jecxz
add
mov
test
inc
ficompl
mov
or
push
movsb
mov
popl
pop
adc
xor
xor
lods
decb
repz
mov
mov
push
sar
adc
ret
icebp
or
loopne
sbb
mov
aaa
fstpl
xchg
insb
jno
stos
dec
cmp
sub
jl
sti
fsts
wbinvd
ficoml
aaa
addr16
push
sbbb
test
ds
lods
xor
jg
mov
inc
or
scas
inc
adc
outsl
jl
mov
out
aaa
inc
pop
imul
push
sub
scas
jge
push
rorb
loope
imull
adc
push
scas
inc
aas
ja
jne
aam
xchg
sub
mov
inc
sbb
scas
testb
movsl
aam
sub
notb
movsl
xor
iret
sub
icebp
enter
testb
mov
sarl
xor
jae
js
sbb
out
sub
mov
pop
negb
loop
je
and
stc
lret
mov
add
cwtl
adc
jno
gs
data16
icebp
mov
sub
repnz
mov
sub
jb
add
lret
adc
pop
call
push
cli
push
xor
loopne
xchg
sbb
scas
sahf
push
jle
cltd
test
dec
jmp
jge
push
mov
xor
jp
xor
push
scas
xchg
push
jns
push
mov
jl
jae
cmp
dec
push
cmc
xor
js
xchg
push
jg
pop
add
pop
ds
add
repnz
push
cmc
or
jnp
sbb
and
fists
sub
sar
insl
jnp
xchg
scas
push
subl
lods
imul
sbb
mov
jno
push
outsb
int3
inc
sub
jp
xchg
loopne
lea
inc
addr16
xchg
add
int
mov
jg
jmp
notb
xchg
pop
daa
sbb
scas
jle
pop
repz
imul
dec
test
xor
push
jle
dec
mov
ljmp
push
out
imul
adc
inc
and
pop
aas
mov
dec
test
sbb
dec
add
lods
mov
aam
ficompl
mov
les
dec
dec
lods
adc
pop
pop
ljmp
xchg
lds
adc
inc
fstpl
and
insb
pop
mov
push
ja
jl
sahf
rcrb
rolb
sbb
sbb
in
cmpsl
push
mov
mov
fisubs
jb
jg
fistl
cmp
rolb
nop
leave
pop
xor
out
and
mov
jns
push
fwait
leave
and
fmul
sbb
jne
mov
insb
jbe
bound
ljmp
outsl
and
or
dec
jnp
dec
mov
jp
push
or
inc
jge
sbb
ret
mov
call
std
negb
jbe
subb
lea
out
shll
adc
out
jg
sbb
les
push
jle
sub
icebp
fildll
mov
and
mov
or
mov
rcr
in
sarl
mov
addr16
scas
out
adc
test
sub
mov
je
das
out
xchg
orl
movsl
lahf
mov
push
jle
test
arpl
dec
inc
dec
cmp
push
out
fsts
xor
dec
push
sbb
mov
mov
xlat
push
mov
pop
aam
jne
out
jae
fildll
xchg
ret
outsl
mov
cltd
mov
pop
lahf
inc
cld
mov
cld
mov
and
or
dec
lret
fdivrl
sbb
jne
mov
inc
add
pop
push
mov
xchg
imul
scas
cmp
jb
insb
aaa
push
adc
pop
adc
imul
push
lret
jns
push
xchg
test
and
adc
sbb
adc
pusha
adc
xchg
pop
dec
pop
jg
mov
movsb
sub
loope
scas
out
xor
and
imul
cmp
xchg
add
sub
aad
xor
dec
cmp
push
scas
out
mov
lods
out
nop
mov
cmp
movb
popa
dec
fwait
mov
ljmp
mov
mov
mov
or
or
fisttpl
div
insl
dec
subb
lret
xorb
dec
daa
loopne
subb
lret
ror
dec
in
push
jp
xor
sti
and
sub
out
cmp
add
xlat
addb
sub
sbb
adc
dec
mov
fnstcw
mov
icebp
sbb
jae
test
dec
mov
push
mov
mov
dec
add
test
rol
sub
fprem
mov
scas
cmp
fisubl
xchg
scas
or
enter
push
ja
in
test
sbb
out
ja
call
and
mov
mov
push
addr16
mov
orl
jae
ds
mov
movl
adc
add
bnd
add
movsb
out
pop
mov
push
int3
das
push
call
test
cmp
jb
xchg
xchg
mov
mov
add
push
dec
shl
sub
ret
add
imul
and
popa
pop
icebp
cltd
fstps
lret
dec
adc
dec
stc
xchg
insb
sysenter
pop
nop
into
cmc
imul
cwtl
inc
ja
imul
jg
pop
shlb
js
sbb
add
pop
push
ficomps
inc
jno
xor
mov
xor
mov
and
cld
inc
xchg
notl
cltd
mov
cmc
mov
push
data16
std
arpl
jnp
mov
pop
ss
jg
rcrl
jno
movsl
dec
imul
xchg
repz
adc
lahf
pop
insb
imul
mov
insb
pop
cmpsl
pop
jo
es
repnz
ss
fwait
clc
js
mov
stos
jnp
jge
dec
push
rclb
xchg
call
and
ja
pop
aam
sbbb
sub
push
or
xlat
nop
cs
push
cmc
push
sub
push
pop
inc
movsb
xor
adc
and
out
daa
loop
je
shrl
or
out
mov
out
jb
push
mov
add
fsubr
jno
mov
xor
adc
test
es
cli
jl
movsb
lock
mov
jle
adc
push
xchg
mov
sbb
es
sub
shlb
insl
adc
pop
scas
sbb
testb
xor
outsb
xor
jbe
stos
outsb
gs
insl
cmp
test
jno
insl
call
pushf
ficoml
fildll
mov
push
pop
mov
stos
clc
cmp
add
mov
int
ret
adc
sbb
idivb
int
jo
sub
sub
and
jle
gs
lea
lahf
pushf
leave
jne
test
dec
imul
push
movsb
bound
xor
sub
adc
or
pop
xchg
mov
jecxz
sti
cmp
xor
popf
test
inc
das
or
inc
pop
push
imul
pop
mov
pop
and
jbe
lret
mov
xchg
test
jge
in
push
cltd
sbb
xchg
cmc
idivl
dec
cwtl
mov
mov
aam
or
data16
inc
ficoml
popf
inc
arpl
sub
addb
lods
scas
mov
add
mov
enter
jle
shl
dec
cmpsl
test
cmc
lret
sub
js
lock
scas
xlat
sti
lea
cmp
je
mov
jo
jl
push
clc
incl
test
scas
mov
mov
xor
fiadds
dec
aas
stos
sarb
pop
or
iret
adc
push
push
inc
or
push
dec
sub
add
push
sub
sub
out
dec
std
or
dec
in
pop
pop
mov
cmp
push
and
fnstenv
outsb
cmp
popf
and
jp
cwtl
iret
mov
je
jp
shl
dec
mov
sbbb
js
mov
mov
sbb
cmp
icebp
loope
je
loopne
inc
and
fdivrl
outsb
jb
jnp
mov
out
sub
pop
inc
sbb
sbbb
inc
cmp
dec
ss
dec
das
data16
push
xchg
push
fsubs
mov
pusha
dec
jmp
xchg
lret
popf
jns
cld
fldcw
pusha
js
test
nop
push
out
or
outsb
mov
sbb
pop
jae
sbb
lea
cmpsl
mov
pop
clc
xchg
add
sub
pushf
xor
icebp
dec
ret
sbb
sub
sub
fcmovb
pop
xchg
fsubrs
mov
enter
xor
cmp
stos
mov
push
icebp
and
shlb
cltd
xchg
inc
push
das
inc
xor
pop
inc
call
jmp
mov
jle
imul
sub
pop
mov
in
cwtl
mov
sub
pushf
push
adc
jmp
sbb
xor
lahf
cmp
test
and
ret
or
push
adc
mov
dec
push
push
out
pop
out
in
sub
setns
push
xchg
cmpsb
inc
insl
adc
movsl
pop
jbe
loop
stc
aas
ret
dec
cltd
fistl
gs
pop
ret
mov
mov
xchg
jne
dec
xchg
lods
test
ret
inc
or
fstpt
mov
cmpsl
mov
inc
mov
or
jmp
lret
cmpb
sti
jne
popf
pop
mov
fidivs
lahf
xor
cld
outsl
pop
add
popf
dec
jge
gs
xchg
lahf
xor
ja
movhps
lock
ljmp
jg
dec
addb
or
cwtl
sbb
ret
cs
pop
xor
jmp
ljmp
jb
lock
push
cmp
mov
add
popf
push
push
movsl
cmp
sti
sub
xchg
jns
pop
cltd
cli
jo
mov
and
mov
mov
loopne
mov
imul
out
cmc
shll
fistl
test
fwait
aad
loop
cmp
or
imul
xlat
xchg
mov
mov
iret
mov
test
xchg
and
insl
push
imul
popf
dec
jge
enter
push
sarl
dec
jbe
and
push
mov
lcall
nop
jns
repnz
fwait
negl
movsb
aad
sahf
std
lods
arpl
cli
xor
sarb
fwait
push
push
stos
mov
xchg
sbb
and
or
fcoms
push
cld
or
in
pop
ja
andb
loop
fs
lock
std
adc
and
mov
sbb
insb
je
adc
leave
cmpsb
xchg
lahf
in
mov
xor
frstor
sbb
imul
or
mov
mov
xchg
jnp
xchg
jecxz
into
stc
scas
push
lea
dec
imul
sub
int
lret
cmpl
inc
inc
cmp
sub
into
aad
cmp
jae
lahf
cmpsb
mov
jae
mov
push
xlat
out
jecxz
lock
movsb
inc
sub
sahf
cmp
mov
cmpb
dec
mov
loope
fisttpl
dec
adc
pop
jo
sub
fdivrs
lods
ja
sbb
cmp
mov
fnstcw
fcoms
mov
cmpsl
aad
sti
sub
outsb
pusha
in
cltd
mov
cmpsl
pop
ds
shll
dec
lahf
mov
mov
lret
int3
mov
out
adc
imul
push
stos
test
mov
or
xchg
clc
lds
pop
cmp
es
push
jns
and
in
movl
repz
gs
jae
pop
aaa
jmp
rcll
dec
rolb
adc
adcl
pop
movsl
mov
lea
sbb
xor
subb
incl
je
mov
push
roll
aas
adc
shl
nop
push
ss
stos
cmpsl
or
mov
lds
pop
sbb
loopne
lcall
mov
cmp
arpl
sub
test
add
sub
and
insb
bound
imul
shrb
jne
xor
das
push
les
jns
outsb
std
inc
and
enter
or
cltd
jnp
out
jecxz
mov
bound
repnz
sarb
mov
ficompl
push
xchg
dec
xchg
pop
pop
pop
int
cmp
jp
mov
loop
mov
mov
dec
and
push
divb
inc
adc
fidivrs
stos
loop
scas
adc
and
cwtl
mov
sbb
outsb
pop
out
loope
cwtl
movsl
test
scas
fcoms
rorb
dec
add
xor
stos
mov
outsl
lods
iret
dec
xor
mov
cltd
sbb
or
arpl
mov
and
or
cwtl
rol
sub
outsl
add
mov
mov
dec
jl
ss
loop
je
push
outsb
shl
cmpsb
test
lods
repnz
pop
insl
mov
cmpsb
mov
mov
jae
roll
and
sub
outsb
sub
sub
mov
ds
test
out
pop
sub
add
mov
pop
inc
xchg
pushf
inc
xchg
out
jecxz
cmpsl
xchg
push
jge
xor
cltd
mov
in
bound
scas
and
in
lds
fidivs
notb
xchg
cmpsl
mov
aas
testb
nop
inc
dec
jb
mov
hlt
in
fcoml
push
xchg
jg
cld
and
mov
mov
cmp
mov
cmp
sub
fwait
out
movsl
lret
push
jo
pop
dec
aad
mov
nop
add
inc
pop
fildl
insb
add
mov
add
mov
sti
fldenv
mov
pop
pop
loopne
or
ss
int
sbb
inc
mov
lock
out
jae
and
sub
cmp
mov
rcl
adc
mov
sbb
cmpsb
js
popa
cmp
fdivl
inc
cmp
aas
sbb
aad
mov
lret
cld
push
into
xorb
sarl
push
sbb
push
jns
jle
ror
jmp
pop
out
inc
ret
mov
shll
mulw
test
and
fsubs
sub
aas
and
rcl
ljmp
stos
mov
aam
js
mov
stos
sub
sbb
popf
gs
std
cli
rcll
or
inc
mov
jecxz
xor
ret
sbb
int
mov
shl
xchg
lods
icebp
adc
mov
stos
lea
mov
adc
dec
das
loope
xchg
push
aas
test
mov
dec
jbe
out
jo
iret
fsubs
stos
les
push
xor
mov
inc
lea
and
sub
mov
mov
scas
dec
fcoml
les
dec
sbb
pusha
scas
fnstenv
les
and
leave
mov
push
and
outsb
xchg
push
inc
addps
in
out
ds
cmp
jl
xor
cmc
ret
out
sub
orl
out
lretw
in
or
xlat
popf
xor
sub
jmp
fs
scas
sbb
or
jge
dec
pop
clc
sub
cmc
js
aaa
jge
mov
test
cmpb
ljmp
cmp
repz
cs
sub
mov
imul
cmp
pop
mov
out
ret
mov
pop
jns
jp
pop
adc
rorb
bound
divl
rcrb
lret
inc
mov
nop
xor
push
inc
lret
adc
pop
sbb
ficoms
adc
pop
sbb
dec
xchg
pop
fidivs
mov
js
fmull
xorl
repnz
dec
sbb
or
scas
inc
shlb
mov
cmpsb
xchg
xchg
ret
scas
mov
and
mov
xchg
inc
and
mov
jmp
and
xchg
jge
cmp
lahf
jnp
pop
pop
call
pop
xor
ret
imul
mov
call
out
scas
push
sub
xchg
orb
mov
adc
repnz
addr16
jo
adc
push
mov
jno
dec
jmp
jge
aam
adc
push
js
rolb
fcomi
mov
stc
xor
mov
xlat
inc
movsl
mov
jnp
dec
mov
jg
subl
or
out
mov
and
mov
xor
add
lods
xchg
sbb
out
fs
rol
ja
popf
pop
ja
rcrb
out
pop
and
jge
loop
arpl
dec
jnp
mov
mov
adc
jb
aas
or
icebp
fsts
mov
xchg
inc
shll
aas
fcmovbe
jmp
and
xchg
sbb
sahf
push
nopl
fsubs
sti
dec
jns
sbb
cwtl
scas
cmpsl
cltd
and
in
dec
cmp
les
daa
scas
pushf
xor
add
push
rcl
sti
cmp
daa
xor
adc
mov
pop
xlat
mov
fistps
ss
shrb
mov
js
test
rcrl
or
aam
mov
pusha
ja
jl
loope
sub
or
clc
mov
push
dec
jle
lea
repnz
sbb
jle
cmpsb
push
aaa
call
jbe
outsl
sub
push
adc
loope
cmp
mov
addb
sbb
andl
inc
sub
cmp
insl
and
push
or
rcrl
lods
insb
xor
or
sahf
sbb
cmp
or
cltd
test
inc
fcomps
aas
iret
mov
add
push
fwait
arpl
jne
pop
fildll
push
jecxz
ret
repz
call
dec
scas
mov
ss
jle
pop
or
xor
int3
sbbb
mov
add
mov
xchg
jmp
subl
repz
aad
push
rep
and
sarb
out
ss
jnp
in
pop
jmp
push
lock
fnstenv
jl
or
xchg
arpl
mov
xchg
jb
pop
mov
mov
inc
fnsave
fildll
xlat
fcoms
sarl
pop
mov
roll
in
repz
addb
cmp
lret
push
int3
and
mov
xlat
push
lret
mov
jl
roll
dec
jnp
repz
pop
imul
jp
and
aad
inc
inc
xlat
xchg
outsb
js
xchg
inc
das
movsb
inc
fsubrl
ficoml
xchg
inc
pop
sahf
shrl
rorl
mov
into
sub
mov
jmp
cmp
bound
xchg
mov
sbb
lret
cmpsb
sbb
lods
push
lahf
xlat
adc
je
and
lock
sub
adc
sub
shlb
adc
mov
cmp
dec
jne
leave
cld
jp
data16
pop
push
fcoms
in
das
rol
enter
mov
xor
inc
or
jo
ret
mov
dec
mov
mov
jbe
ss
jbe
mov
mov
shrb
outsl
aam
and
adc
or
stos
stos
clc
negl
test
add
pop
mov
mov
sub
lea
stos
cmpsb
pop
add
cwtl
fcompl
and
jno
rclb
in
jo
pop
mov
out
pop
pop
push
dec
sbb
and
dec
and
cmc
adc
add
lods
mov
xchg
and
sbb
inc
int
mov
xchg
leave
or
inc
jo
jp
rorl
sub
stc
jns
xlat
outsb
pop
xchg
sub
push
je
mov
shll
sarb
cmpsb
and
lahf
hlt
inc
cmpb
adc
insb
test
and
jmp
lds
jl
out
repz
stc
sub
jnp
sub
movsb
add
sarb
lret
aad
xor
in
mov
cmpsb
xor
out
leave
jmp
push
xlat
insl
cli
xchg
add
mov
mov
fs
mov
add
pop
xchg
dec
mov
loopne
rolb
add
lahf
and
popf
cmp
mov
and
test
mov
lret
lahf
cmp
repz
cli
adc
ss
xlat
mov
iret
pop
outsl
sarl
sbb
inc
ret
pop
xor
add
lcall
jno
push
cmpl
mov
repz
jno
fimuls
inc
xor
pop
jecxz
rorl
std
mov
arpl
out
lret
dec
fsts
in
sbb
scas
sub
adc
jmp
cmc
gs
outsl
cmp
out
and
daa
pop
fwait
test
shl
mov
lods
nop
pop
sbb
icebp
into
cltd
dec
mov
jp
lods
aad
xor
push
inc
cmp
lahf
jle
sub
test
sub
sub
cvtdq2ps
rorl
rcrl
out
outsl
or
je
xor
ss
rolb
leave
ja
por
cmp
and
mov
jnp
cmpsl
fnsave
fmulp
inc
sub
and
xchg
mov
clc
push
sarb
lret
ljmp
cmp
push
mov
bnd
adc
sub
enter
jo
xchg
sbb
les
mov
ficompl
pop
lods
sub
lahf
dec
xchg
testl
adc
rcl
mov
fbstp
push
filds
pop
in
ret
call
imul
fldt
fnstcw
arpl
or
nop
xchg
mov
fldl
in
push
ljmp
mov
ljmp
jmp
stos
ret
iret
es
pop
stos
divb
into
aam
adc
loop
xchg
insl
inc
cmc
or
xchg
stos
pop
jnp
gs
imul
push
fbstp
shrb
dec
add
ret
test
je
mov
in
mov
push
mov
push
fwait
lahf
pop
pop
adc
fistps
lods
mov
xor
repz
test
movsl
ret
in
adc
jle
push
jge
inc
mov
push
iret
ja
adc
rcr
loope
pop
push
cld
mov
sar
or
in
inc
dec
mov
jne
loop
popa
sub
ror
insb
push
mov
mov
xchg
in
adc
or
adc
lahf
mov
in
mov
stc
data16
outsl
cs
outsb
jo
inc
sti
ss
iret
adc
pushf
ja
scas
unpcklps
jo
cli
mov
mov
mov
mov
in
add
sahf
pop
leave
xchg
inc
ss
scas
cld
mov
sub
int3
js
add
lret
xchg
sbb
mov
pop
jge
outsb
cld
mov
int3
mov
inc
fiadds
je
cmpsb
mov
jg
je
pop
aam
js
jo
das
xor
popf
jno
jge
hlt
ljmp
mov
xor
roll
adc
rclb
aaa
dec
rcr
xchg
xchg
nop
cmpsb
pop
outsb
cld
push
std
lcall
enter
and
test
aas
call
or
ja
xchg
or
lods
es
mov
fxtract
and
icebp
xchg
mov
js
loopne,pn
data16
test
fimuls
add
push
xor
xchg
aam
out
pop
inc
sub
and
test
mov
imul
inc
cmp
js
cmpsl
pop
pop
sub
cmp
add
aad
cli
into
ljmp
imul
test
and
inc
xchg
xchg
adc
sub
clc
mov
aad
jnp
cmc
and
cmp
dec
sahf
test
xor
mov
subl
test
fisubl
dec
cwtl
push
adc
adc
jp
cld
iret
and
pop
and
aas
jnp
sub
aaa
xlat
jge
or
ja
or
cmc
mov
inc
test
xchg
push
and
jg
xor
push
and
push
cmp
sbb
push
fwait
jnp
mov
mov
sub
outsb
inc
mov
add
inc
adc
ljmp
testl
in
jns
lds
jns
pop
mov
sbb
les
test
into
push
ss
int
lods
and
xchg
hlt
lcall
xor
rol
pop
push
popf
pop
lds
es
cli
adc
xor
and
xlat
mov
int3
scas
adcl
fldl
jne
stos
sbb
pop
xor
xchg
ret
sub
jmp
hlt
add
stc
scas
push
repz
int3
movb
pop
mov
push
push
pop
sub
sub
mov
aad
enter
shlb
in
loope
adc
inc
lods
push
lret
insl
xlat
mov
xchg
cli
mov
jl
gs
adc
or
int
lret
pop
mov
rorb
ror
insb
lock
imul
mov
add
stos
pusha
fisubl
jo
push
inc
xchg
pop
cmc
cltd
xor
lock
or
and
jns
mov
pop
xchg
mov
test
addr16
mov
mov
popa
mov
inc
je
test
dec
jmp
daa
xchg
adc
jnp
jecxz
fmull
add
push
shll
cmp
xchg
pop
shr
dec
sbb
sbb
inc
stc
fdivl
xrelease
dec
dec
js
xchg
sti
test
mov
enter
xchg
sbb
cltd
cmp
fstl
mov
xchg
pop
mov
xor
divb
pusha
mov
js
fdivs
clc
orb
mov
inc
mov
insl
pop
mov
adc
inc
push
ret
sbb
pop
outsl
xorb
cltd
mov
and
repnz
popf
sti
jnp
loope
add
push
dec
rolb
push
imull
and
push
gs
ret
mov
jmp
hlt
mov
mov
add
aad
and
lret
call
xor
dec
cmpsb
js
fsts
mov
lahf
cld
sarb
mov
and
mov
cmc
mov
shrl
cltd
pop
mov
insl
pop
rorb
aad
jo
pop
stos
xchg
pop
mov
cltd
lea
pushf
pushf
jnp
xor
pop
mov
mov
xchg
sti
push
ret
pusha
repz
lods
pop
pop
jbe
mov
xor
xor
xchg
lret
in
clc
xchg
mov
add
sub
test
add
dec
mov
inc
sbb
pop
pushf
dec
mov
iret
mov
xchg
cmp
out
inc
pusha
mov
sti
xor
xchg
cwtl
sbb
pop
add
clc
arpl
dec
pop
push
inc
stos
imul
fldenv
push
sti
jge
jecxz
call
jecxz
cmp
gs
and
sbb
pop
and
data16
ljmp
subb
dec
shlb
mov
dec
jg
sub
rclb
pop
testl
fidivrl
mov
stc
inc
fs
leave
sub
lock
jbe
das
fs
xorl
fistpll
fldl
push
lds
push
sti
mov
and
mov
sub
stos
cmp
fcoms
outsb
xchg
xchg
adc
pop
out
pop
aad
aad
ljmp
dec
inc
lods
add
xchg
sub
shrl
fsubs
icebp
lret
fmull
sbb
inc
inc
adc
ds
movsb
inc
pop
in
nop
popf
stos
cld
lret
xchg
cld
movsl
dec
outsb
lods
test
sbb
in
orl
aam
cltd
xchg
xchg
cmp
cli
or
mov
xor
adc
jmp
lds
fcoml
mov
sbb
mov
sbb
icebp
push
sbb
add
outsb
shl
inc
pop
lds
shll
aaa
mov
push
fsubrs
or
cmp
rorb
ss
or
xor
jb
push
outsl
add
inc
adc
push
out
or
lcall
popa
mov
js
add
sub
pop
mov
dec
in
ds
test
xchg
mov
outsl
cmc
add
int3
gs
push
jmp
mov
dec
in
lcall
test
mov
mov
pop
add
movb
jnp
je
push
aam
insb
pop
pop
fldenv
sbb
pop
fs
mov
rcrl
clc
sub
pop
dec
xlat
jne
jecxz
jg
xor
adc
push
jno
sti
adc
test
jmp
aam
adc
or
jp
adc
stos
gs
inc
or
les
cli
inc
mov
dec
lea
mov
test
lods
stc
leave
xor
xchg
fstpl
push
aam
xlat
xchg
push
xchg
xor
mov
dec
repz
sti
mov
add
jae
mov
sti
sbb
adc
mulb
insl
shrb
nop
stos
sub
ret
aas
aad
adc
xchg
push
push
in
inc
jle
fcomip
stc
stc
popa
std
sarb
jne
dec
repz
sar
out
push
jmp
jnp
mov
add
out
dec
fldenv
pusha
xlat
aas
mov
dec
shrl
rol
cs
xchg
scas
jmp
push
inc
xor
cmc
mov
adc
std
mov
repnz
out
mov
sti
cmp
xchg
adc
dec
lds
sbb
lea
icebp
lods
cltd
ret
clc
xchg
ret
pushf
mov
imulb
leave
fisttps
cmp
mov
ss
and
pusha
dec
mov
lods
cmp
insb
dec
mov
dec
pop
std
icebp
add
push
dec
orb
adc
fisttps
xlat
pop
test
subb
sub
pusha
clc
sbb
pop
cmp
test
cwtl
lods
xchg
inc
sbb
les
adc
xor
cwtl
jg
loopne
mov
mov
jge
sbb
add
sbb
lcall
divl
outsl
and
xchg
mov
rol
mov
jmp
cmp
lods
sub
jge
jnp
lahf
shll
cs
call
std
test
imul
int
in
add
inc
lret
jo
cld
xor
cmp
jp
pop
test
test
clc
fnstenv
inc
adcb
aad
rcrl
out
jmp
stos
cld
dec
xor
mov
pop
test
add
test
mov
or
repnz
out
out
arpl
mov
pop
out
jg
and
inc
scas
xor
lods
push
push
push
pop
inc
lods
mov
cli
ljmp
cmp
cmp
mov
dec
cwtl
mov
movsl
jne
inc
loop
lret
test
cli
lods
les
icebp
sub
lret
fidivrl
aad
divb
aas
xchg
cwtl
movsl
ja
sub
in
les
into
leave
pop
mov
dec
cs
adc
psubsb
xor
add
cmc
mov
add
aam
pushf
mov
ficompl
cmp
push
ljmp
push
xchg
addr16
sub
sarb
cmp
sub
push
les
cmovle
fnstsw
js
je
inc
rcrb
lods
jg
cltd
popa
mov
test
jg
mov
arpl
mov
lret
or
lods
mov
outsl
pop
jns
es
fcoms
mov
mov
push
mov
mov
sbb
in
fcomp
aam
hlt
sbb
lcall
mov
xor
icebp
xorb
add
imulb
js
add
pushf
push
pusha
add
and
and
push
and
outsb
pop
and
lret
jle
pop
sbb
sbb
test
mov
mov
or
mov
mov
out
sbb
push
xchg
repz
cwtl
in
in
xor
mov
in
insl
jecxz
add
push
ja
xchg
rorb
xchg
add
ja
push
sti
rcr
adc
rcll
scas
and
jge
into
push
sahf
scas
repnz
out
pop
in
outsl
les
mov
add
popf
adc
scas
jb
xchg
pop
sbbl
jecxz
pop
aaa
cmp
scas
out
insb
popa
mov
or
faddl
pop
jecxz
xchg
or
cmpsl
das
inc
inc
fs
shlb
dec
out
xor
imul
xor
outsl
sub
pop
mov
mov
pop
mov
int3
pop
negb
mov
imull
inc
sti
outsl
fldenv
push
inc
daa
inc
xchg
sub
stc
xchg
out
xchg
sbb
sbb
inc
lcall
dec
loope
aam
out
dec
popa
pop
icebp
aaa
sti
pop
loope
sbb
pop
cmpl
mov
mov
jl
mov
lods
test
nop
mov
inc
jbe
push
xor
and
popf
mov
mov
adc
dec
in
mov
mov
stc
cmc
movsb
incl
jbe
sub
lock
fs
xchg
lock
sub
ret
std
jae
mov
xchg
cmc
ss
or
xor
mov
fwait
js
mov
sbb
jp
jno
cmpsb
rcll
nop
stos
xor
xor
adc
lds
pop
add
lods
dec
lret
daa
sbb
add
add
sub
or
sbb
mov
sub
mov
ja
inc
ss
mov
scas
ljmp
lods
push
dec
mov
mov
out
fcos
movsb
sbb
test
jo
movsb
les
push
cmc
loopne
jmp
out
jecxz
inc
push
jecxz
cmpsl
cmc
adc
aad
sbb
aas
sarb
scas
outsl
xchg
in
mov
push
addb
mov
movsl
wbinvd
cwtl
and
mov
inc
jle
std
out
dec
mov
cmc
lcall
pop
lahf
outsl
xchg
sub
pop
cmp
fnsave
xchg
test
dec
out
jb
and
sti
fwait
lock
xchg
cltd
bound
jno
jnp
xor
ret
dec
add
or
popf
in
sub
fcoml
push
or
les
xchg
dec
rcrl
push
push
lret
mov
popa
push
out
js
out
inc
push
and
inc
fidivs
cmpb
mov
push
insl
mov
mov
mov
jnp
jb
xchg
pop
ss
sub
rorb
scas
test
and
dec
flds
push
fnstsw
dec
loope
jae
popa
popa
mov
sbb
push
jmp
xchg
dec
push
or
xchg
test
and
daa
dec
lcall
dec
or
popf
test
dec
mov
jmp
cli
mov
lods
inc
repnz
mov
mov
dec
rclb
and
or
inc
inc
jle
out
or
stos
jg
sbb
adc
lcall
test
xchg
lods
nop
stos
lods
enter
xchg
cmpsl
ss
push
dec
scas
je
jecxz
aam
mov
js
sbb
repnz
test
sti
xor
dec
pop
add
mov
test
in
inc
stos
sbb
sti
push
jg
jg
sbb
sbb
jne
sub
and
mov
push
cmp
xor
inc
and
push
ret
andl
in
and
or
mov
mov
pop
lods
and
out
outsb
lahf
shll
fmull
shlb
push
sbb
and
mov
jno
fdivs
lea
repz
adc
fs
cli
cs
push
data16
aam
mov
test
mov
mov
dec
inc
xor
cld
rcl
push
push
inc
mov
xor
cld
repnz
xor
jb
das
fs
addr16
std
iret
push
pop
cld
push
mov
jmp
jae
mov
inc
dec
sbb
ljmp
imul
mov
push
adc
xchg
mov
das
fstps
dec
add
mov
pop
imul
pop
dec
pop
jne
enter
enter
stos
fwait
sti
sub
push
call
inc
jmp
mov
sbb
pushf
push
insb
xchg
xor
cmp
rcll
je
pop
fimuls
shr
test
mov
inc
jae
add
adc
mov
jae
dec
mov
adc
stos
nop
arpl
nop
inc
testb
aaa
ret
add
cmp
add
inc
pop
stos
and
push
ljmp
mov
not
clc
scas
dec
stos
xchg
imul
imul
arpl
dec
mov
imul
repnz
lret
fsts
in
inc
aam
and
adc
and
shl
sti
ficompl
sbb
jl
dec
mov
test
xor
adc
iret
jle
and
mov
inc
jb
dec
and
out
sbb
movsb
icebp
push
cmp
mov
sub
mov
mov
negb
es
cmp
push
xchg
enter
jmp
xor
scas
repnz
push
std
aas
dec
push
add
dec
mov
out
in
fnstsw
scas
or
jns
mov
ret
test
mov
ret
inc
repnz
push
scas
adc
nop
jmp
repnz
stos
enter
ret
xchg
adc
xchg
jecxz
sbb
divb
test
aam
ds
ficompl
cs
xchg
jno
pop
and
testb
xchg
aad
in
stos
sbbl
push
in
jb
and
or
sub
into
mov
js
icebp
icebp
ret
mov
scas
xchg
inc
mov
pop
aam
scas
movsl
fimuls
in
xchg
add
ja
fwait
imul
stc
mov
shll
fists
pop
lret
lds
notb
ljmp
cmp
sub
jne
int
mov
push
ja
sti
dec
dec
pop
mov
add
outsl
cmpsb
stos
adc
insl
mov
mov
out
xchg
sub
filds
add
adc
cwtl
xchg
cmpb
out
sub
inc
push
popl
xchg
mov
xchg
shlb
push
ret
push
xor
fsts
xor
sbb
cmpsl
sub
cwtl
adc
mov
mov
or
mov
clc
mov
sub
push
lahf
jge
loopne
dec
shll
sbb
add
pop
mov
popl
gs
stos
or
test
ret
adc
in
das
and
dec
stos
dec
mov
lock
jge
sub
xor
int3
subb
or
outsb
jl
mov
add
mov
cmp
xor
mov
and
lds
inc
pop
subb
xchg
mov
and
mov
push
xor
adc
mov
sbb
call
mov
loope
loope
nop
les
scas
xor
cmp
push
rolb
push
inc
popf
mov
lods
mov
lahf
cli
ror
mov
clc
sti
fcoms
daa
xor
aas
xor
out
roll
iret
in
adc
xor
lea
mov
inc
mov
adc
mov
add
les
jl
shlb
cmp
jge
repnz
iret
sub
jl
sahf
sub
repz
mov
pop
fisttps
and
out
jo
ss
out
mov
pusha
sbb
aad
push
mov
add
jp
outsb
mov
scas
cmp
pop
outsl
pop
shl
test
and
pop
xchg
mov
nop
mov
lods
cmc
in
add
adcb
shll
scas
dec
xchg
ret
out
lods
adc
xor
push
mov
pusha
aaa
rcrb
js
daa
cmp
xchg
inc
stc
xor
or
insl
mov
movsb
add
jecxz
and
movsl
cmp
cltd
cmp
xor
mov
fcoms
mov
outsb
inc
ficompl
mov
rcl
cmc
sbb
xchg
movl
xor
jl
sti
mov
gs
sbb
pop
rcll
xchg
stc
bound
lretw
fimull
fwait
sub
pop
dec
dec
inc
lret
outsb
cwtl
sub
dec
imul
inc
out
flds
push
js
add
add
push
jns
lahf
lods
fiadds
adcb
mov
mov
ret
or
addr16
lods
jmp
mov
enter
cmp
ss
sub
mov
push
xchg
ficompl
push
bound
fmull
push
inc
stc
and
sbb
subb
fsts
push
dec
rcrb
popf
inc
stos
push
inc
les
out
test
jns
sbb
in
sub
iret
xchg
into
lret
pop
xchg
stos
fucomp
jns
in
sbb
mov
mov
mov
hlt
mov
cs
mov
mov
xchg
cwtl
sbb
dec
js
mov
inc
inc
shll
je
xor
dec
push
xor
test
fsts
shll
add
jbe
inc
les
icebp
jp
in
cli
xchg
cmpsl
push
scas
insl
push
jmp
cmc
sbb
pop
lds
sbb
push
jno
sar
push
in
pop
cmp
jg
or
clc
cs
je
xor
mov
cli
in
cltd
dec
push
out
mov
mov
or
gs
pop
push
cmpsl
xchg
cmp
nop
sahf
inc
cmc
leave
ficompl
mov
xchg
imul
and
shll
clc
repz
insl
lods
movsl
xchg
insb
ds
loopne
test
into
addr16
or
xor
test
adc
fldenv
out
xor
inc
insl
dec
or
scas
pop
int3
cmp
push
inc
rclb
xchg
lret
push
mov
sub
or
sbb
adc
gs
inc
fisubl
dec
inc
jl
js
pusha
adc
in
jb
arpl
pop
outsb
push
jnp
xchg
jno
repz
cltd
inc
test
sbb
adc
mov
pusha
nop
sbb
leave
into
mov
pop
push
daa
add
rol
inc
fs
jl
pop
xor
stc
xor
dec
jecxz
push
pushf
pop
fnstenv
insl
push
aam
or
xor
sbb
lods
pop
dec
add
xor
inc
leave
xor
mov
sub
test
rcll
cmc
push
push
jns
ret
xchg
pop
cmp
repnz
sub
mov
fucomip
andb
mov
mov
test
add
subb
push
sub
stc
add
pop
sbb
pop
mul
imul
pop
mov
sub
mov
jo
push
add
int3
sub
sub
lret
ljmp
jbe
xchg
cmp
repz
in
jns
lods
or
fldl
sub
xor
movsb
cmp
xor
xlat
lods
or
outsl
inc
inc
cmp
out
popa
popa
push
leave
or
sub
lahf
insl
xchg
repnz
cmp
dec
cmpb
xor
lret
jno
popf
test
inc
movsb
movsb
dec
xor
push
aaa
stos
xlat
jo
cld
dec
fsubs
ffree
inc
jo
lret
stos
fistl
adc
or
adc
ja
xrelease
hlt
lahf
xchg
loop
jmp
stos
sbb
es
adc
mov
pop
mov
out
or
inc
cli
pop
outsl
icebp
inc
lret
fcmovnbe
test
push
pop
cmpsb
andb
lea
ds
or
jb
pop
inc
in
repz
mov
push
mov
adc
data16
cmp
pop
pop
pop
es
imul
inc
outsb
fcompl
insl
jp
pop
xchg
roll
sahf
and
inc
xor
sbb
pop
and
dec
xchg
sbb
push
mov
stos
lret
jnp
add
cs
shr
lock
cmc
push
scas
popf
pop
add
lds
and
lea
fmulp
lahf
loope
dec
movsb
bound
inc
push
das
loope
push
les
mov
neg
xchg
mov
lcall
or
shl
out
call
shrb
sub
cmp
jns
addr16
sbb
mov
loop
shlb
and
push
shlb
fwait
mov
popf
inc
cmp
popa
push
jb
or
pop
mov
pop
in
loop
fs
dec
cmp
dec
das
push
call
pop
jl
dec
xchg
mov
ja
es
ja
iret
mov
fidivrl
popa
fsts
jb
notl
jnp
mov
fwait
sbb
pusha
shr
push
push
out
shrb
push
push
jl
xchg
mov
pop
ret
mov
adc
mov
xchg
pop
repnz
nop
xchg
sti
ja
dec
cmp
jp
outsb
jp
pushf
xor
push
rolb
lcall
insb
leave
adc
jnp
push
sub
and
inc
push
or
mov
push
dec
insb
cmp
xlat
push
xor
sbb
into
in
out
mov
iret
add
mov
pop
pop
leave
dec
repnz
into
pop
imul
push
mov
adc
sub
pop
fdivrl
push
cli
dec
or
fidivs
into
xor
fdivs
sbb
adc
or
mov
jmp
int3
fs
inc
sub
cs
mov
int3
xchg
repnz
mov
and
sahf
andl
mov
pop
adc
xor
sbb
xor
mov
jg
or
lret
pop
imul
pop
mov
jmp
inc
fstp
jae
iret
fldenv
out
xchg
and
data16
jno
push
arpl
jp
adc
xchg
in
jecxz
inc
push
push
xchg
xor
movsb
pusha
subb
jmp
mov
hlt
pusha
mov
es
pop
sbb
setle
lods
scas
inc
mov
je
mov
pusha
xchg
pop
mov
push
push
popa
nop
ljmp
jbe
push
mov
ret
bsf
mov
pushf
inc
lret
push
jns
aas
and
sub
dec
mov
pop
inc
and
and
inc
xor
or
stos
push
in
mov
hlt
ret
inc
fwait
sahf
push
sub
icebp
mov
jmp
popa
int3
dec
adc
scas
adc
adc
mov
push
int
push
mov
mov
push
push
cmp
sub
adc
shrb
push
cmpsl
mov
gs
cmpb
xor
and
cmpsb
lahf
sub
in
xchg
ret
mov
and
testb
or
and
pop
insl
lods
xor
push
push
xchg
xor
mov
scas
cmp
inc
rorl
fnsave
jne
int
dec
cmpsl
xchg
jecxz
jecxz
push
dec
sub
loope
scas
xor
jge
add
jae,pn
pop
mov
jae
pop
xchg
xchg
cmp
push
cmp
fdivrl
int
das
push
js
push
shll
cs
popf
dec
lret
sub
cmpsl
cmp
mov
mov
loope
les
or
adc
gs
add
inc
gs
ds
adc
rorl
jge
cmp
cwtl
test
shl
push
lea
pop
dec
push
ss
or
xchg
clc
push
mov
adc
pushf
lock
insb
cwtl
mov
cmc
jp
sub
jne
sbb
lock
fadd
push
xchg
xchg
aaa
jae
jb
mov
inc
sbb
mov
idivl
jnp
mov
xor
mov
pop
xchg
jns
sub
mov
dec
push
jle
repnz
xchg
push
imul
mov
dec
enter
test
inc
mov
negb
push
fistl
adc
cmp
sbb
pop
xor
js
mov
outsb
mov
push
lret
push
dec
test
mov
sbb
xchg
sar
js
pop
xor
scas
adc
push
inc
sub
sub
xchg
fnsave
out
jne
pusha
rcrb
mov
bndldx
adc
mov
add
jne
mov
hlt
es
jecxz
xlat
xor
ljmp
jo
cmpsb
cli
inc
add
mov
pop
cmp
fdivrs
lock
das
test
into
out
add
sbb
jne
stos
aad
jne
jo
add
and
ret
xor
clc
cmp
or
pushf
cmp
repz
imulb
inc
xchg
loopne
sub
mov
arpl
xchg
cmp
jl
push
sbb
test
push
dec
and
fs
dec
addr16
dec
dec
out
dec
imul
mov
mov
mov
test
sub
and
jle
shlb
push
stc
xchg
subl
lea
sub
addr16
xor
mov
aad
out
xchg
lds
dec
call
pushf
cmpsl
outsl
dec
xchg
sti
fisttpll
xchg
xchg
mov
lret
mov
sbb
sub
sahf
insl
fcmovnu
in
mov
mov
inc
lahf
lods
pop
sub
and
sub
aad
xor
and
xchg
leave
stos
pop
divl
sbb
push
inc
adc
add
dec
jno
roll
lret
push
inc
mov
adc
add
sarb
lret
shr
fists
mov
cmc
inc
push
bound
je
or
insl
push
sbb
pop
lods
nop
push
inc
xor
push
jo
pop
es
mov
push
jne
fcoms
jnp
adcb
dec
ja
sahf
leave
mov
inc
jge
les
loope
das
out
xchg
jae
pushf
adc
dec
mov
dec
cwtl
pop
mov
sbb
dec
adc
or
lahf
xchg
cltd
js
les
insb
mov
fstpt
arpl
fldenv
xor
out
add
loope
insb
stos
jno
push
jbe
imul
nop
sbb
mov
sbb
inc
inc
in
rcll
adc
and
lock
cwtl
repnz
jo
and
and
imul
xchg
push
mov
out
inc
push
jne
inc
mov
push
xlat
hlt
fwait
jae
and
jo
xchg
rclb
fiadds
into
push
in
aam
cmpsl
or
sti
enter
iret
out
pop
test
adc
jg
add
mov
xor
subb
mov
jge
out
mov
jbe
jle
subl
hlt
cli
xor
icebp
leave
xchg
je
add
xor
xor
inc
dec
int3
pushf
rcrl
out
jo
push
iret
jns
xchg
add
stos
movsl
sbb
test
pop
mov
and
mov
mov
out
mov
mov
int3
mov
mov
push
test
movsl
dec
add
and
daa
arpl
repz
cmpsb
fdivs
dec
inc
rorl
call
mov
insl
rolb
jg
xor
cmc
mov
pop
lahf
or
arpl
mov
mov
mov
pop
testl
in
in
or
jmp
andl
inc
loopne
subl
mov
lods
xor
arpl
xchg
inc
in
dec
mov
out
aaa
or
mov
cmpsb
cltd
mov
lods
pop
cmpl
testb
jnp
push
sar
push
lock
adc
pop
mov
mov
bound
push
nop
inc
mov
out
sub
insb
daa
add
cmp
hlt
rorb
popa
push
add
dec
test
pushf
and
sbb
aad
or
jns
xchg
jp
or
cli
fsub
test
js
mov
jle
aaa
pusha
mov
xchg
or
ds
add
push
inc
jno
pop
pop
repz
mov
inc
mov
pop
imul
jle
xchg
lret
out
inc
cmp
push
cmp
outsb
xor
mov
add
sub
inc
lret
dec
push
xchg
jo
or
lret
cmp
xchg
js
add
dec
cs
ss
add
je
imul
adc
sub
cs
mov
call
lock
es
push
mov
je
jns
mov
out
rcl
cmp
bound
or
bswap
fldt
shlb
jp
test
and
fs
inc
xchg
les
push
pop
gs
jle
lea
push
xor
xchg
and
scas
jns
je
sbb
and
fdivr
icebp
xor
fwait
adc
push
adc
push
jno
std
xchg
movsb
fstl
ret
fs
xlat
sbb
mov
or
std
pushf
inc
xor
and
push
mov
stos
out
mov
aad
cwtl
mov
aas
xchg
daa
pushf
insb
mov
into
rcl
mov
sbb
lret
pop
cmpsl
insl
mov
mov
mov
adc
mov
add
loopne
or
in
movsl
enter
lret
in
ret
insb
mov
or
mov
mov
xor
loope
push
jp
arpl
fdivrs
ret
outsl
pop
sub
sbb
xor
pop
cmp
cmpsl
and
and
aaa
cwtl
pop
mov
mov
fimuls
loop
adc
out
mov
out
pop
shl
sbb
mov
mov
push
test
jmp
std
lret
fs
das
fnsave
outsl
movsl
ljmp
shll
push
xchg
loopne
jbe
insb
sbb
cli
xchg
lret
fisubrl
sbb
imul
sbb
cmp
xchg
push
push
jo,pn
enter
sub
adc
ret
fisubrl
mov
daa
jo
test
mov
dec
add
lea
jns
cmp
jae
scas
xor
mov
xor
ror
repnz
jns
sbb
mov
pop
and
fdivrl
imul
popf
pop
adc
lds
push
mov
enter
jb
imul
sbb
in
push
push
inc
mov
fisubrl
fcompl
xorb
mov
fmuls
cld
imul
je
rolb
xchg
dec
mov
xchg
negb
hlt
xor
ds
mov
idivl
into
fmull
fidivrl
inc
adc
cmp
sbbb
xchg
icebp
mov
jge
fmul
js
or
insb
loopne
rcrb
sub
aas
test
mov
mov
jg
jb
mov
outsl
xor
push
sub
loopne
daa
push
clc
pop
mov
pop
imul
inc
imul
stc
int
mov
add
push
fcom
xchg
in
xor
and
sarl
add
mov
adc
loopne
cli
xor
scas
inc
bound
int
pop
pop
mov
pop
dec
add
and
insl
icebp
ds
ss
lds
lock
int3
pop
divl
inc
jl
mov
inc
xchg
gs
nop
stos
mov
cltd
cwtl
xor
fistpll
cltd
pop
fidivl
mov
cltd
lods
push
jae
cltd
mov
sub
inc
jbe
and
jle
and
fsubrs
push
repz
popa
xchg
movl
roll
xor
mov
mov
xchg
sub
movsl
mov
nop
sbb
adc
push
cmp
pop
addr16
test
lds
ret
leave
push
mov
or
add
cmp
mov
or
inc
cmovle
dec
adc
pop
mov
jns,pt
jecxz
out
push
push
out
mov
push
sbb
pop
pop
dec
or
jecxz
movsl
cmp
and
sub
pop
dec
mov
enter
push
xchg
sti
test
jno
hlt
enter
sub
sub
cmpsl
test
loop
jae
into
inc
mov
fs
or
pop
subl
push
jae
idiv
into
cmpsl
sub
push
mov
mov
ds
dec
push
hlt
xchg
dec
jl
imul
xchg
js
loopne
and
in
insl
xchg
hlt
xchg
xchg
and
pop
outsb
mov
xchg
shrl
add
mov
adc
fadd
data16
stos
push
lds
jb
jb
sub
shr
in
or
dec
xchg
sahf
nop
mov
mull
addr16
mov
xor
addb
mov
cwtl
dec
fstpt
mull
mov
outsl
mov
loop,pn
mov
inc
inc
mov
and
stos
jns
cli
adc
inc
movsb
nop
or
and
scas
aam
jo
sahf
or
sub
pushf
sub
dec
es
das
clc
aas
jmp
and
sub
sysexit
jne
lahf
or
ja
adc
jg
gs
sub
mov
xchg
cmc
lcall
mov
sub
outsb
imul
aad
sub
stos
xchg
iret
sub
adc
addr16
movsl
sbb
pop
sub
cmp
mov
xor
mov
mov
pop
xor
popa
imul
ret
in
imul
push
push
xchg
add
aaa
adc
fdivrl
push
fiadds
stc
sbb
jecxz
in
fiaddl
xchg
jg
fsubrs
cmp
ss
push
sub
aaa
mov
rcll
insb
test
int3
mov
pop
xchg
adc
jmp
lds
sub
fistps
push
arpl
cmc
sahf
rol
scas
pusha
xchg
pop
sbb
jbe
and
fisttps
lods
lret
jecxz
popf
lret
xchg
jg
mov
lds
xchg
cwtl
popa
roll
imul
push
mov
out
mov
pusha
test
pop
pop
xchg
sti
fcmovbe
pop
aad
aaa
int
not
cltd
sarb
add
ret
xchg
scas
mov
or
and
cmpsb
jbe
ljmp
mov
pop
cmp
lcall
xchg
push
call
pop
inc
stc
cmp
in
fdivl
dec
inc
aas
jl
mov
sub
add
int3
popa
ljmp
sub
inc
cmp
jmp
add
mov
adc
dec
dec
mov
rcr
or
push
or
push
iret
popa
sub
das
loope
mov
iret
jb
mov
cmpl
jae
mov
lea
repnz
int3
xchg
sbb
adc
jbe
stc
fidivs
shlb
movl
shl
push
scas
stc
orb
mov
sbb
add
lods
mov
pop
xchg
sti
sbb
mov
xor
pop
testl
notl
or
ficoml
imul
jne
insl
mov
sbb
jl
xor
dec
out
jg
add
xchg
fldcw
ss
lahf
pop
push
xchg
sti
mov
or
insb
jl
out
jg
rcrb
pusha
mov
mov
ss
cli
fwait
inc
sub
in
aam
sub
stos
out
sbbb
jb
ja
dec
lds
jmp
lcall
es
daa
sub
outsl
mov
je
fwait
xlat
movsl
sub
fwait
dec
sub
std
ss
mov
cmpl
xchg
and
sbb
in
divl
sub
sub
fistpll
ds
sbbb
adc
add
push
mov
adc
add
int3
sbb
sti
mov
lea
add
push
ljmp
insb
into
add
jl
pop
aas
lahf
or
mov
dec
jl
out
jmp
test
ja
or
test
adc
jnp
cmp
pop
mov
mov
rorb
roll
jne
xor
mov
pop
in
data16
jo
sub
mov
mov
sub
in
mov
mov
inc
cmpsb
xchg
jge
cli
sub
or
push
sbb
xor
dec
and
or
testb
loope
fcoml
sub
mov
ret
iret
hlt
or
inc
jmp
mov
outsl
outsb
jg
pushf
push
mov
loopne
pop
mov
je
gs
lret
dec
and
fcoml
sbb
push
repz
sahf
arpl
out
je
movb
cld
cmpsl
bound
jne
mov
es
cmp
push
push
or
push
stos
and
sbb
jp
jg
cwtl
mov
cltd
inc
or
cmpsb
cmc
stos
ret
hlt
jne
push
fucom
sbb
rcrb
or
cwtl
scas
lds
xor
xchg
out
repz
sbb
or
hlt
pop
repz
test
jns,pn
push
mov
insb
mov
outsb
cmp
or
into
sarb
pop
dec
mov
sub
call
dec
jmp
sbb
xor
or
cmc
push
fmull
sahf
jbe
add
mov
rclb
jo
xor
dec
addl
imul
loope
pop
jmp
jecxz
xchg
dec
cmc
mov
scas
push
sub
xor
pop
jg
add
and
and
js
cmp
inc
repnz
push
loop
fiadds
call
jecxz
lcall
je
popf
or
gs
loopne
sbb
rorb
fsubrl
dec
cmc
xor
mov
decb
jnp
mov
cmp
loope
aam
insl
mov
or
xchg
sub
stc
outsl
js
inc
push
sti
cmc
enter
inc
pop
sbb
mov
call
lods
or
mov
repnz
ja
mov
push
xchg
jae
int3
inc
cmp
jg
jl
or
icebp
ljmp
mul
mov
les
rolb
pop
xlat
push
cld
jge
js
mov
adcb
iret
pop
jp
outsl
jb
dec
fdivs
std
push
test
xorb
jo
mov
in
xor
ss
sub
sbb
push
add
jns
jb
sub
sub
sbb
repz
ljmp
pop
daa
or
mov
mov
dec
cli
jo
sbb
mov
test
cmpsb
loopne
enter
mov
jmp
pop
mov
adc
aam
pushf
fwait
cld
jp
xchg
sub
lea
jge
push
insb
jns
insl
sub
mov
out
lods
test
mov
xchg
push
int
fdivrp
shrb
mov
sub
dec
and
stc
cltd
push
faddp
clc
fadds
stc
push
leave
jmp
insb
push
dec
xlat
outsl
fs
add
sub
pop
filds
lret
aam
and
xor
js
fadd
dec
shlb
jbe
jns
mov
dec
xchg
push
test
mov
sub
mov
inc
cmp
mov
cmc
cmp
ljmp
cltd
aas
inc
xor
in
cmp
sbb
cmpsb
fisubrs
sbb
sti
mov
xchg
push
fidivrl
sbb
mov
fldcw
adc
jo
cmp
int
mov
mov
cmc
adc
into
out
sub
je
incl
lea
lahf
lods
ja
inc
loop
iret
gs
sbb
xlat
inc
mov
dec
cmp
or
jle
insl
xor
xor
div
ret
dec
scas
add
sti
popf
out
add
je
adc
mov
and
xchg
sbb
push
jo
mov
mov
add
add
nop
mov
shr
jge
mov
and
sub
stc
jge
cmp
scas
mov
loopnew
jmp
xlat
rep
lea
lock
sub
int
push
cmp
sbb
jp
mov
stos
aaa
mov
xchg
jmp
dec
fidivl
inc
inc
cmp
xor
xchg
rol
sbbl
nop
inc
jb
pushf
mov
jne
out
es
pop
xchg
mov
rorb
and
loopne
insl
ja
dec
rorb
lret
dec
stos
imul
or
sbb
lcall
sti
jnp
pushf
fdivp
or
inc
mov
in
popa
cwtl
ljmp
add
in
push
pusha
xchg
push
in
out
sahf
imul
in
mov
fwait
add
pop
jae
inc
inc
mov
dec
lea
jecxz
insl
imull
inc
dec
add
cmp
mov
and
outsb
jmp
shlb
insl
mov
jle
inc
mov
icebp
xchg
mov
and
add
arpl
cld
xlat
and
dec
imul
mov
gs
divl
je
sub
sbb
sub
sbb
or
push
inc
jb
hlt
stos
loope
neg
cmp
xor
popl
xor
jne
outsl
and
xor
std
pop
stos
fs
int
sub
enter
pop
andl
call
or
mov
xor
pop
ret
mov
insl
adc
faddl
pop
pop
pop
mov
lcall
lock
scas
fisubrl
ds
movsb
add
outsb
mov
and
lret
dec
cmp
inc
ret
mov
push
xchg
add
pop
test
std
in
clc
in
lcall
hlt
jo
pushf
dec
jae
push
mov
fs
ss
stos
add
idivl
cwtl
jno
mov
popa
adc
adc
inc
jb
leave
lock
push
mov
outsb
push
inc
clc
add
adc
ljmp
movsb
or
cmp
pushf
fwait
push
add
ja
inc
clc
fsts
cmp
cli
or
outsl
out
cmp
test
lods
dec
or
and
inc
subb
inc
push
hlt
push
fidivrs
and
pop
in
out
sub
add
aaa
xor
mov
xlat
sahf
push
out
mov
jo
mov
in
setp
lods
jmp
cld
pop
je
push
xchg
ficompl
cmp
lods
js
xchg
mov
loop
sti
sub
push
xchg
mov
adc
in
mov
inc
sub
les
fnsave
pop
add
jmp
int
pop
dec
pushf
aam
js
mov
mov
clc
xor
out
jge
cmp
fs
mov
mov
jmp
iret
jno
mov
out
push
jae
jp
les
in
shl
pushf
cmpsb
jle
andl
or
sahf
mov
sub
adc
mov
mov
and
ds
dec
int
loopne
icebp
push
outsl
cmc
loopne
sti
pop
ljmp
into
mov
lret
ret
sahf
popf
fwait
mov
mov
les
xor
and
xchg
cli
bound
mov
jnp
call
mov
xchg
sub
out
lahf
push
fdivrl
mov
rcrb
mov
inc
lds
jb
dec
push
mov
push
in
rcrb
pop
movsl
inc
push
cmovb
sbb
lahf
jle
mov
jne
mov
inc
sar
ja
cmp
aas
sub
adc
adc
xor
lock
xor
mov
movsl
sbb
sub
xchg
pop
jg
jecxz
xchg
fdivrl
mov
cld
adc
sub
dec
hlt
movlps
out
scas
lea
or
lret
ret
and
xchg
mov
xchg
inc
ret
addr16
pop
jnp
xchg
xor
call
push
int
nop
and
aad
sub
mov
pop
jge
mov
xchg
pushf
stos
cmp
ret
scas
and
aad
jno
cmpsl
and
daa
pop
sbb
or
mov
inc
flds
in
push
jmp
lcall
xchg
cmc
idiv
inc
sub
mov
ljmp
jae
and
mov
jecxz
lahf
divl
cmp
mov
insl
lahf
push
mov
test
inc
pop
cs
std
sarl
iret
inc
add
mov
imul
ret
shl
cs
xchg
stos
dec
sbb
jle
adc
ss
jo
cmp
mov
clc
test
enter
aaa
and
xor
mov
lcall
fidivl
xor
push
pop
jmp
pop
cwtl
pusha
inc
cmpsl
ret
jnp
call
mov
ja
mov
lea
mov
mov
sbb
xchg
mov
xor
adc
lock
pop
mov
scas
sbb
inc
mov
sti
fdivrl
or
lock
and
fdivrl
mov
xor
xorl
rorl
loop
stc
pop
cmp
push
hlt
xchg
push
cmc
add
pop
stos
xchg
push
lods
out
xlat
stc
sbb
aad
mov
rorl
add
shlb
daa
mov
andb
iret
adc
inc
js
rcrl
inc
loopne
cli
jno
pop
mov
andl
loop
mov
cs
push
sqrtps
adcb
mov
frstor
mov
push
xchg
sbb
aam
scas
xchg
xchg
xchg
pop
adc
cmp
mov
ficoms
and
outsb
faddp
loop
dec
enter
inc
mov
mov
xchg
idivb
jle
out
inc
out
xlat
lds
ss
pop
fcmovnb
es
xorb
jmp
orb
subl
jle
add
out
sti
pop
inc
pushf
push
stc
and
data16
cmc
inc
ljmp
or
ret
cmp
lods
std
mov
div
jne
outsb
inc
inc
dec
mov
xchg
push
fcoml
adc
and
lret
stos
dec
icebp
ds
mov
cmpl
stos
inc
jmp
ss
pop
sahf
xchg
inc
mov
sarl
out
nop
dec
lcall
lret
ja
dec
push
push
inc
fwait
repnz
and
xor
test
adc
stc
aad
add
mov
test
std
jbe
test
movsb
ljmp
or
insl
sbb
add
xchg
fiadds
enter
adc
loop
jb
pop
imul
mov
mov
lret
fdivrl
cmp
jmp
iret
test
hlt
int
mov
dec
cmpsb
xlat
dec
les
or
inc
icebp
push
insb
or
mov
aam
jmp
in
jbe
fwait
repnz
cmp
mov
bound
and
daa
push
or
popa
je
add
pop
arpl
test
cmc
and
cmp
lods
ljmp
outsl
out
or
daa
pop
sbb
in
or
mov
adc
dec
add
push
fcompl
lods
push
scas
xchg
into
call
adc
outsl
fwait
xor
jge
lock
sbb
pop
imul
daa
imul
jno
mul
or
xchg
jbe
inc
push
cli
mov
ret
test
mov
add
inc
mov
dec
mov
or
loop
mov
mov
lahf
testb
xor
fmuls
test
jne
and
inc
cmp
imul
and
push
and
push
les
adcl
inc
adc
jl
pop
sbb
lea
hlt
cwtl
jecxz
in
or
inc
lahf
orb
fcmove
xchg
in
mov
dec
xlat
or
fisubrl
jmp
sbb
jle
push
mov
stc
jp
xchg
sub
cmpsl
jle
mov
push
mov
mov
or
inc
and
cmp
dec
frstor
repz
addb
fs
push
out
bnd
sahf
add
xorb
jnp
xchg
jae
xchg
adc
cmp
ret
in
pop
hlt
popa
scas
pop
repz
add
push
xchg
mov
xchg
jne
cmp
add
xor
mov
addr16
jno
ret
cli
jp
push
fisttpl
test
xor
xlat
cmpsb
mov
sub
sbb
imul
in
insb
int
xorps
lods
movsl
xchg
jne
cmp
adc
or
sbb
sub
jg
add
outsb
xchg
lds
scas
fldenv
fs
pusha
les
push
clc
and
mov
lds
inc
data16
sbb
or
xor
lret
push
push
mov
cmpsl
push
xchg
ja
adc
iret
sub
xchg
mov
push
jp
push
push
dec
xchg
sbb
arpl
xor
push
add
mov
or
push
xorl
push
sbb
cmpsb
sbb
test
inc
add
lods
jg
jno
subl
fnstcw
dec
cli
jge
aam
pushf
nop
js
cmp
mov
xchg
lcall
push
cmpsb
ja
mov
cmp
insl
sub
popa
shrl
ds
int3
insb
or
rdtsc
inc
nop
je
dec
pop
jnp
xchg
addr16
adc
jle
testl
inc
aad
popa
loope
mov
jp
dec
mov
mov
add
adc
push
jno
pop
int
mov
and
pop
adc
fbld
cmpsl
in
bound
push
ja
add
icebp
testb
call
mov
jge
stos
stos
mov
mov
clc
xor
fwait
dec
ja
push
mov
std
cltd
dec
ret
xchg
out
xor
add
adc
push
mov
aam
lods
jb
pop
or
aad
nop
and
cli
ret
mov
orl
das
aaa
les
pop
insb
repz
cmc
repz
dec
outsl
in
insl
inc
mov
mov
lret
xchg
xchg
test
gs
inc
repnz
push
loope
sub
js
sbb
psadbw
in
stos
mov
mov
ljmp
shrb
mov
gs
je
jg
cld
mov
add
fdivrl
mov
xchg
out
pushf
ja
std
add
loopne
mov
adcb
dec
es
in
pop
mov
mov
xchg
cmp
int3
in
into
jg
jnp
sbb
lret
clc
insl
jmp
inc
scas
pop
xor
pop
pop
movsb
insb
mov
sub
xchg
mov
test
shll
inc
movsb
jbe
xchg
shlb
mov
jg
dec
lods
pop
cmpsb
fstps
mov
mov
fwait
mov
shlb
sahf
stos
adc
rcll
lds
sub
sub
xor
and
xchg
xor
aam
inc
sahf
loop
in
mov
add
std
fnstsw
adc
or
aad
out
es
inc
xlat
cmp
loopne
add
iret
jnp
fildl
pop
imul
fistl
aam
in
mov
and
pushf
sahf
popa
popa
fdivl
repnz
sbb
xor
shll
pushf
cmc
test
icebp
pop
pop
imulb
pop
sub
sbb
ljmp
pushf
sbb
lods
bound
cmp
adc
cli
xor
sbb
pop
fldenv
je
lcall
and
add
inc
outsb
pop
pop
imul
push
cmp
adc
cld
pop
mov
sahf
mov
pushf
repz
add
xor
mov
shrl
and
pop
cmpsl
cmp
fists
lods
mov
fisttpll
cmp
out
arpl
js
lret
or
add
loope
dec
popa
mov
sbb
mov
scas
bound
loop,pt
add
nop
loop
xchg
jge
mov
cltd
push
je
popf
daa
lods
bswap
push
add
sahf
adcb
dec
stc
shrl
aas
inc
rcrb
addr16
enter
and
inc
push
dec
fs
adc
jp
mov
int
sub
test
cwtl
sbb
sbb
arpl
fcmovnb
jmp
xchg
mov
int3
xor
in
mulb
dec
enter
inc
push
iret
in
pop
fsubr
test
xchg
shr
pusha
dec
div
cld
lods
mov
inc
dec
and
cmp
lret
jmp
fwait
xchg
mov
pop
xchg
xchg
add
cwtl
jmp
lds
add
xchg
sbb
and
cs
mov
jbe
es
aam
arpl
jecxz
push
cld
insb
jecxz
stc
sbb
xor
divb
pop
aam
fcoml
popa
imul
jge
pusha
cmp
dec
test
mov
popa
add
pop
xchg
arpl
push
mov
xor
test
shrl
pushf
sub
and
fnstsw
ret
pop
cmpsl
mov
rolb
icebp
lea
addb
pushf
cld
and
lcall
lods
cmp
sub
cmp
lock
pusha
lea
fs
sub
push
pop
xor
inc
notb
push
and
sbb
lret
jecxz
std
push
loop
mov
push
out
jg
roll
in
iret
rorl
mov
out
and
mov
dec
in
rorl
and
adc
jns
dec
stc
mov
push
pop
add
outsb
jb
sub
jnp
scas
rcrb
push
ffreep
dec
fadd
mov
xchg
cmp
dec
mov
sub
lods
rolb
aaa
in
imul
out
sub
ds
cli
out
std
dec
in
imul
shll
jns
popa
adc
cltd
add
mov
in
or
mov
adc
jg
addr16
ja
add
mov
push
adc
outsb
cmp
pop
add
or
xchg
dec
repnz
mov
dec
mov
mov
pop
loopne
insl
mov
mov
aam
popf
movsl
adc
ffreep
outsb
ret
mov
jp
xchg
fsts
imul
shrl
cmp
and
imul
enter
mov
and
std
mov
ds
add
cmp
test
stos
mov
and
popa
sbb
xor
stos
sub
fadd
lea
popf
ss
or
ja
in
cmpsb
movd
mov
insl
or
jle
push
lcall
imul
movsl
fs
enter
fs
fdivl
jo
insl
ret
sbb
jge
jmp
xchg
mov
mov
and
xor
es
sarb
repz
in
int3
mov
push
or
xor
lret
xor
scas
ret
imul
mov
lret
pop
xchg
sbb
scas
pop
shlb
xchg
pushf
insb
pop
out
inc
adc
or
jne
push
mov
and
inc
jle
xor
mov
jecxz
ret
test
lret
out
mov
xchg
dec
enter
cmp
pop
cmpsl
cld
not
jnp
mov
stc
mov
jns
mov
inc
dec
imul
sbb
test
cwtl
imul
jecxz
cmp
jmp
push
insb
mov
js
fisttpll
inc
mov
je
mov
iret
pop
mov
loop
mov
inc
cmp
out
mov
inc
sub
mov
je
cmpsl
add
push
add
and
stc
inc
xchg
test
xchg
sbb
lds
js,pt
jecxz
test
ret
cmp
mov
inc
pop
adc
pusha
scas
andl
aaa
sbb
popa
out
mov
or
icebp
pop
cmp
or
popf
jl
icebp
jle
cld
add
pop
movsl
ljmp
imul
xor
loop
xchg
and
sbbb
add
or
rolb
sbb
mov
daa
les
sub
add
mov
mov
push
jge
inc
inc
mov
sub
idivb
outsb
jnp
stc
xchg
mov
dec
or
sar
jmp
and
adc
mov
scas
je
fsubrp
sub
inc
xlat
cmp
negl
mov
nop
mov
divb
jge
xchg
inc
pop
sub
mov
out
cmp
mov
and
adc
in
adc
and
sbb
test
sub
fimull
push
mov
and
cmp
mov
jecxz
xchg
dec
cld
ss
fsubl
and
pop
mov
sbb
ss
aas
arpl
roll
sub
adc
ret
or
xorb
movsl
mov
aad
cld
fsubrp
nop
fnsave
je
shl
jbe
cmp
iret
xchg
cmp
test
cmp
movsl
xchg
cmp
cmp
in
mov
mov
das
jae
inc
pop
mov
dec
enter
push
push
pop
xchg
ss
mov
sahf
mov
in
mov
inc
cmc
mov
sbb
ja
or
inc
pusha
pop
jns
adcl
and
mov
push
pushf
and
lcall
sub
notb
clc
lret
icebp
outsb
daa
je
inc
cmp
sahf
adc
add
js
cmp
mov
test
lret
sub
enter
outsb
mov
daa
pop
popa
mov
loope
test
ds
cmpsl
shll
nop
cli
inc
and
int
nop
xchg
subl
xchg
imul
pop
inc
leave
push
jge
int
sub
xorl
ret
ja
and
mov
out
in
cmovno
cwtl
and
fdivrs
and
mov
add
cs
mov
adc
fcmovbe
lcall
test
mov
jnp
test
rcll
adc
sbb
sub
je
pop
shl
not
ret
inc
mov
or
lods
out
mov
push
ja
mov
mov
push
or
adc
fidivs
dec
cmp
fs
xor
mov
fidivrs
icebp
xor
sbb
xchg
stos
mov
push
xor
push
mov
add
dec
lea
notl
adc
jbe
sbb
aad
mov
xchg
jg
mov
cmp
pop
pop
xor
ss
xchg
bnd
xchg
dec
inc
pusha
out
lret
add
inc
mov
mov
insl
addl
mov
ficomps
sbb
aaa
jo
or
aad
or
push
out
lret
jbe
shl
add
inc
lret
mov
ds
sbb
or
mov
aaa
data16
push
fsts
and
pop
lock
fstpl
inc
bound
mov
jae
push
nop
inc
fidivrs
xchg
mov
test
test
cwtl
sarb
lods
cli
mov
or
dec
mov
cmp
pop
imul
sahf
mov
aad
or
cmp
mov
sbb
jl
mov
insl
xor
adc
mov
sub
sbb
imul
imul
mov
lea
es
xor
push
pop
push
adc
inc
scas
xor
pushf
rorl
loopne
jns
je
movsb
dec
jns
inc
and
movsl
adc
xchg
aam
pop
mov
adc
cmp
mov
fcoms
push
xor
add
clc
outsb
cmc
lea
hlt
into
xchg
psllw
mov
insb
out
popf
in
dec
sbb
and
test
bound
add
or
clc
mov
mov
jno
fidivrl
aad
sti
or
in
ljmp
mov
sbb
mov
dec
ret
cmp
leave
push
push
outsl
mov
ds
or
test
sbb
push
stos
sub
xchg
scas
repnz
add
sub
mov
ret
not
cmp
bound
push
mov
jmp
and
test
jae
adc
loop
stos
and
rorb
pop
lods
inc
mov
mov
rcrl
cmp
jnp
lcall
sti
xchg
dec
repnz
mov
add
mov
mov
or
or
mov
scas
sbb
and
fimuls
lds
inc
xchg
bound
sub
jmp
adc
adc
mov
outsl
nop
pop
pop
add
jne
and
sub
ret
push
pop
sub
pop
xor
aaa
jle
xor
test
push
dec
pop
movsl
push
pushf
jne
sbb
push
leave
and
or
dec
jge
cmp
stos
inc
lcall
loopne
lcall
jne
dec
out
out
xor
movsb
rcl
out
out
cmp
mov
xchg
in
add
bound
add
mov
pop
in
cmpsb
sbb
xchg
or
pop
cmpsb
inc
adc
in
xchg
push
mov
and
push
loope
stos
push
add
or
gs
call
icebp
aam
sub
outsb
lods
adc
xlat
pop
or
or
fidivrl
push
test
data16
shrb
ficoms
push
or
cmp
repz
bound
hlt
addr16
pop
jp
in
pop
ss
cmp
inc
add
pop
insl
mov
lods
inc
xor
jb
cmpsl
cli
testb
pop
mov
decl
pop
cltd
and
xchg
fcompl
sbb
inc
push
or
mov
das
gs
clc
xchg
jnp
ds
push
dec
cwtl
popa
mov
jp
stos
rorb
jns
xlat
xorb
mov
sbb
fimull
xor
in
mov
rclb
testl
mov
hlt
jb
dec
xor
enter
mov
stc
xor
xchg
aaa
sub
add
icebp
fisttps
hlt
cltd
stos
xor
inc
enter
in
push
mov
cld
lea
ret
shl
stos
test
or
pop
push
mov
cmc
enter
mov
add
inc
add
mov
push
mov
mov
ss
test
xchg
pushf
mov
insl
cmpsb
sbb
lahf
sbb
mov
push
jg
push
es
mov
dec
cli
fucomi
sbb
add
sbb
loope
sub
gs
sub
fmulp
mov
in
jns
cwtl
mov
cmpb
and
xchg
mov
fisubl
mov
adc
sahf
xchg
outsl
cmp
inc
repnz
in
cmp
pusha
mov
pop
int
fisubs
push
sbb
sti
pop
lea
jnp
ds
jle
push
lret
movsl
dec
sbb
xchg
mov
scas
cmp
in
les
int3
mov
cld
imulb
adc
iret
mov
jp
out
push
les
cmp
ds
mov
stc
fwait
xchg
fidivrs
fcom
js
movsl
cmp
pop
cmpsb
in
in
popa
lret
lods
cmpsb
insl
push
hlt
sub
mov
mov
ljmp
adc
nop
dec
cs
inc
mov
fcomps
ds
pop
cmpsb
les
push
jecxz
push
rolb
push
push
cmp
cmp
pop
cmp
rcrl
fnstenv
les
pop
pop
pop
in
xchg
lcall
fcomi
out
sar
push
jnp
into
fisubrs
imull
inc
imul
jne
cmp
jbe
lret
inc
out
cmpsl
mov
inc
jmp
adc
cmp
xor
ljmp
mov
inc
add
subl
push
repnz
fildl
cmpsl
lock
or
mov
fs
aad
mov
pop
inc
push
dec
in
mov
xchg
std
test
adc
in
push
lret
je
ja
pop
add
shll
je
les
mov
fsubrs
shlb
ret
or
inc
sarb
mov
js
jg
jecxz
outsb
sbb
int3
push
inc
mov
call
pop
jns
orb
shll
loope
or
jne
cmp
daa
cmpb
test
fsubl
stos
cmc
fwait
mov
popa
hlt
push
lock
sahf
ficoms
mov
nop
sbb
stos
push
cmp
dec
and
insl
and
fbstp
push
push
negl
sub
out
imul
leave
mov
shrl
mov
xchg
jg
adc
mov
xor
in
mov
das
jb
pop
testl
xchg
push
in
pop
jne
cmc
adc
int3
fstps
add
prefetch
rclb
ja
mov
cmp
rcrb
mov
pop
or
into
lcall
or
mov
mov
cmp
fstpl
mov
cmp
arpl
xor
decl
stos
movsl
lea
sbb
inc
ds
fcoms
cltd
mov
ljmp
jno
movb
sub
pop
xchg
fwait
jmp
cmp
insb
ljmp
xchg
test
jl
or
dec
adc
and
cmp
lret
rclb
into
fistpl
dec
int
jno
inc
mov
aas
xlat
add
in
sub
enter
jae
jl
sahf
inc
dec
cs
idiv
jmp
cmpsb
pop
int3
das
sarl
enter
lahf
or
fsubl
stos
push
sti
in
mov
ljmp
rcrb
call
xchg
scas
or
pop
hlt
dec
push
or
cmpsb
sub
jl
test
add
in
fsts
mov
test
push
dec
cmpsb
push
leave
cli
xchg
imul
sahf
outsb
mov
arpl
sahf
add
mov
jge
mov
mov
mov
inc
iret
mov
mov
mov
sbb
adc
jge
test
mov
pop
subl
cs
xchg
inc
test
push
mov
push
fs
fstpt
clc
and
imul
pop
add
aaa
mov
loop
and
xor
xchg
jae
inc
xor
push
lods
jecxz
inc
mov
int
lcall
add
fimuls
aad
icebp
mov
jp
outsb
adc
inc
xchg
stos
gs
aad
dec
popl
aaa
nop
cwtl
int3
add
loop
imull
cmpsb
cmp
pop
stos
sub
jno
sti
add
dec
jmp
push
stos
in
push
xchg
movsb
push
adc
jecxz
jmp
dec
mov
jbe
xchg
jno
push
int3
rolb
arpl
rorb
pop
stos
je
outsb
sbb
stc
inc
cli
pop
iret
mov
inc
mov
cmc
test
repz
shrb
dec
andl
pop
notl
jmp
clc
movsb
pop
rcr
mov
sub
lods
bound
inc
adc
jb
and
mov
mov
xchg
int3
in
cmpsb
jno
or
or
scas
aad
xchg
cmpsb
negb
fdivr
imul
xchg
jl
jle
jg
ljmp
sbb
bnd
inc
mov
push
add
fbstp
mov
and
rorb
push
cmp
mov
sbb
mov
jp
dec
aad
stc
push
data16
andb
mov
inc
add
push
lahf
imul
lret
arpl
mov
sbb
sub
ds
test
leave
rolb
cmpxchg
sub
push
rcr
aas
mov
jb
movsb
fisubl
out
mov
arpl
data16
das
arpl
int3
mov
aas
inc
hlt
cld
cmpsl
push
sub
cld
lcall
mov
incl
push
cmp
faddl
loop
xor
and
pop
movaps
rol
dec
xor
xchg
jecxz
pop
ret
jle
repz
mov
sub
insl
xor
or
test
lods
loope
and
mov
cmpsl
or
mov
lahf
stc
fsubrp
lcall
shl
out
test
sub
cmp
cs
push
add
sub
add
add
xchg
call
outsl
xchg
sahf
cmpsb
dec
jnp
add
jge
ret
xor
gs
and
mov
or
jp
loope
je
xor
push
jb
jne
inc
xchg
movsb
sbb
cwtl
adc
loope
and
loop
adc
leave
js
jne
dec
or
dec
inc
sbb
mov
les
add
mov
test
sti
fs
xlat
testl
or
inc
cmp
jae
insb
and
test
mov
xor
pop
or
rorl
jb
aam
fs
ret
imul
mov
mov
pop
popf
jns
dec
stos
sbb
mov
movsb
mov
add
insl
ljmp
out
lea
insl
mov
adc
mov
test
and
fbld
and
pushf
xlat
jnp
mov
scas
iret
cwtl
push
xor
mov
fnsave
jp
add
mov
fmul
in
cs
pop
into
ds
ficoml
shl
jle
xchg
ret
frstors
sub
aam
dec
mov
dec
xor
nop
aaa
mov
sbb
cmp
mov
movsb
cmp
pop
push
mov
xor
or
dec
mov
in
fbstp
xchg
test
daa
scas
mov
js
adc
xor
xlat
out
inc
dec
int3
and
cmp
popa
cld
push
push
int3
ljmp
xchg
stos
mov
xchg
sahf
sbb
lcall
jo
outsl
sbb
pop
stos
shrl
mov
jl
fsubs
adc
es
pop
cmpsl
das
inc
popa
and
cwtl
mov
dec
sbb
jne
stos
xor
and
sarl
call
cli
xchg
scas
cs
push
mov
push
stos
mov
cmp
sar
push
sarl
pop
push
shlb
jns
mov
les
xor
pop
adc
xor
mov
push
pop
out
movsb
dec
hlt
jno
fiadds
push
lods
mov
cmp
pushl
les
push
xor
push
mov
test
add
hlt
sub
sbb
push
popl
ss
sbb
cld
jno
imul
sub
dec
test
jne
or
aam
xorb
popa
inc
out
sub
lea
lahf
mov
xor
mov
lret
pop
dec
mov
in
dec
imul
out
int3
adc
test
push
or
rorl
out
fsubrp
jl
scas
xchg
in
cld
cmp
jns
push
pop
pop
cmova
test
pop
and
inc
popf
roll
mulb
cmc
fisttpll
loop
cmp
mov
psubusb
bound
cmc
and
cli
arpl
pop
test
sbb
pop
and
aad
jno
divb
aas
add
in
jl
fs
add
pop
and
in
scas
push
data16
clc
imull
sub
xchg
addr16
test
daa
out
push
jmp
mov
fsubrl
stc
dec
lea
xor
xchg
xchg
mov
adc
outsl
repz
loope
mov
mov
pushf
inc
enter
shll
loop
mov
cmp
mov
adc
or
cmpsb
jg
fnsave
movsl
add
dec
jp
push
or
dec
stos
enter
aas
aas
scas
xchg
stos
pop
lods
inc
sahf
cld
test
inc
dec
fwait
lods
arpl
int
cmp
mov
sbb
jp
mov
mov
or
xchg
xchg
imul
ljmp
fdivrs
popl
xchg
or
mov
das
xor
sub
pop
mov
sub
cmpps
inc
fs
sarb
push
mov
dec
dec
xor
enter
movsb
loope
adc
mul
insb
popf
lcall
sbb
sub
xor
cmp
aam
not
movsb
xlat
jecxz
das
insb
push
bound
xchg
mov
test
sub
lds
mov
push
into
lret
pop
mov
rorb
repz
cmp
imulb
loop
jmp
daa
and
dec
nop
jno
sub
ss
xor
mov
pop
pop
cmpsl
mov
cmpsl
std
insl
fnstsw
call
pop
cmc
insl
sbb
out
cli
xchg
loopne
dec
xor
sub
pop
mov
ljmp
bound
push
ffree
adc
xchg
pop
pop
in
popf
sar
mov
enter
out
sbbl
imul
push
and
sbb
scas
push
mov
mov
movsl
push
stc
adc
dec
cmpsb
mov
mov
xor
pop
out
mov
orl
daa
mov
fcompl
mov
dec
data16
jg
pushf
inc
add
gs
cmp
int3
cmc
cmp
bound
outsb
sub
sbb
xor
loop
sub
mov
mov
repnz
cmp
dec
and
mov
xor
xor
jmp
popf
call
in
mov
mov
out
sub
push
pop
and
rcrl
movsl
sbbb
adc
testl
repnz
jp
nop
rorl
xchg
aaa
or
push
fmuls
packuswb
or
int3
div
inc
mov
out
or
xchg
mov
bound
mov
mov
loope
mov
push
into
mov
inc
test
mov
mov
xor
push
cli
mov
inc
pop
cltd
shl
call
repz
mov
adc
in
mov
out
jmp
add
pop
mov
loopne
fdivp
xchg
xchg
fstpt
and
jmp
inc
lret
ljmp
inc
ja
insb
fldenv
js
bound
mov
push
loopne
pop
xor
into
dec
and
mov
jp
pop
cmp
test
xchg
jae
cmp
movsb
xchg
jg
sbb
aad
dec
in
adc
xor
aas
xor
cmpl
icebp
outsb
pop
std
push
sbb
cmpsl
fmuls
mov
test
push
std
adc
imul
xor
stos
xor
xchg
in
iret
and
and
ja
pop
jp
lahf
dec
xchg
cli
jo
mov
inc
aaa
xor
push
add
sub
aas
jge
sub
dec
cmc
pop
pop
mov
repnz
imul
out
mov
jecxz
adc
cmp
andb
adc
movl
sub
aad
add
sub
sbb
je
inc
sahf
mov
sbb
divb
pop
sbb
sub
outsl
sbb
xchg
and
dec
mov
push
push
and
lods
fstpt
stos
dec
movl
iret
fisubrl
mov
sub
cmpsl
xchg
sbb
fdiv
cmp
dec
add
jmp
outsl
dec
and
imul
add
add
xor
adc
daa
ds
rcl
mov
repz
lret
shll
pop
ss
out
pop
lock
lods
or
hlt
shl
dec
negb
cmp
xor
jbe
in
or
cmp
lret
lock
lds
inc
push
repnz
xor
and
int3
cs
enter
xor
test
add
and
es
pop
fmul
push
in
mov
pop
test
out
or
xchg
aas
sub
lcall
mov
test
lods
sbb
mov
decb
push
push
pop
in
cltd
sbb
pop
cwtl
rcr
inc
and
pop
movsb
sbb
xor
push
push
das
mov
imul
cmp
push
add
sbb
clc
pop
add
pop
pop
xchg
out
data16
mov
fldl
adc
dec
lods
mov
push
jmp
or
mov
push
repz
mov
sti
adc
cmp
add
insb
jecxz
inc
hlt
adc
or
bound
clc
jp
xor
dec
ja
mov
sub
dec
dec
adc
cld
into
mov
cmpsl
jb
cmp
lods
shl
lret
adc
mov
rcll
push
int3
push
inc
cmp
popa
in
cmp
mov
mov
enter
mov
pop
test
or
addl
lods
lret
fsubrs
xchg
jae
fld1
push
sbb
add
push
and
fiaddl
add
sahf
sbb
dec
and
add
loop
xchg
mov
imul
mov
int3
dec
mov
sbb
lds
movsb
ds
xchg
pop
fists
dec
inc
mov
out
xchg
shrb
mov
in
xor
testl
pop
scas
xor
xchg
popf
mov
inc
inc
or
lret
mov
fdivp
inc
cmpsb
cmc
adc
int3
and
in
out
push
sbb
sub
pop
jl
sbb
or
test
nop
es
xchg
cs
push
jne
xchg
dec
adc
cmp
jge
leave
jge
dec
sbb
mov
mov
gs
adc
mov
cld
daa
out
xchg
aam
aad
popf
lock
mov
fiaddl
scas
fcomp
ljmp
in
mov
mov
cmp
into
xor
inc
stc
mov
push
add
je
in
fsubl
dec
and
xlat
out
dec
sbb
pop
push
decb
push
or
mov
mov
in
jmp
out
shr
add
mov
jle
hlt
test
xor
cmp
push
lods
sbb
and
addr16
sarb
cmp
inc
add
jmpw
inc
inc
lods
mov
cmp
aam
popf
mov
or
push
cmp
lcall
lahf
jge
scas
insb
pop
arpl
iret
push
and
mov
ret
adc
in
push
pushw
gs
out
and
dec
shll
lods
add
pop
loop
or
or
jbe
mov
incl
ret
jne
sbb
popf
pop
hlt
aaa
cmp
fucom
daa
shll
sbb
cmpsb
jnp
stos
pop
cmc
loope
pop
hlt
push
fnstcw
xchg
les
cli
jno
lcall
cmc
ss
mov
fcmovbe
filds
enter
in
jbe
and
ss
jno
shl
fidivs
push
insl
mov
mov
or
sub
mov
hlt
cs
add
in
outsb
loop
pusha
dec
jge
jb
dec
pop
add
jnp
daa
ds
lea
pop
psadbw
jl
lret
and
add
push
neg
dec
dec
lods
testl
in
lds
pop
not
sub
mov
call
inc
lods
jmp
push
aam
clc
xchg
mov
repz
icebp
or
jmp
test
mov
adc
push
pop
js
jp
je
or
mov
icebp
inc
popf
nop
je
leave
sahf
and
iret
cmp
sti
sbb
mov
enter
xor
push
icebp
lds
xchg
clc
test
adc
mov
in
addl
cld
lea
push
sub
pop
dec
gs
cmc
test
mov
push
scas
cwtl
sub
mov
cmpsb
nop
call
leave
jo
mov
popa
popa
sbb
mull
sbb
test
sub
xor
jnp
adc
into
mov
inc
pusha
popa
or
mov
insl
adc
inc
xchg
mulb
cli
push
les
xchg
inc
testb
data16
sub
or
jns
inc
ficoms
popf
in
js
aas
divl
rcl
cmp
mov
popl
ss
imul
push
sub
fcoms
lock
mov
sub
fildl
test
inc
adc
inc
in
pop
rcrl
enter
xchg
xchg
xor
xchg
push
sbb
test
mov
mov
ja
dec
jecxz
hlt
cmpb
out
test
pop
sti
pop
jmp
imul
in
add
xchg
popa
cmp
inc
xor
or
mov
icebp
jmp
jnp
jbe
sbb
sarl
es
jmp
dec
les
xor
paddb
mov
inc
mov
fs
rcrl
push
pop
xor
sub
loop
repnz
xor
repnz
ror
mov
icebp
inc
xchg
ja
outsl
xor
and
lret
loope
push
cmp
pop
stos
mov
add
pop
pop
dec
and
iret
mov
mov
adc
es
xchg
xor
dec
inc
jge
shl
jmp
mov
aam
cld
pop
jl
arpl
push
cltd
aad
mov
xchg
mov
pop
pop
loope
sub
insl
mov
and
cmp
add
or
sbb
shrl
out
inc
int3
or
call
fprem1
imul
xchg
pop
dec
pop
mov
lret
xchg
stos
mov
mov
aas
sbb
stos
popa
inc
sti
scas
addr16
mov
xor
insb
mov
movsl
cmp
dec
add
add
test
jle
push
in
dec
dec
xchg
xlat
or
jle
popa
inc
jbe
xlat
cwtl
and
mov
imul
pop
jle
mov
ss
mov
xchg
mov
imull
jbe
jns
jnp
stos
sub
repz
and
push
lret
out
xchg
decb
pusha
sub
xlat
sbb
sbb
call
cwtl
cmpl
ret
mov
sti
and
daa
ret
or
or
cli
icebp
inc
xchg
fwait
dec
ret
jb
mov
ret
mov
sbb
pop
ffreep
sbb
xor
adc
dec
lods
and
stos
inc
mov
lret
test
out
data16
leave
push
push
jp
test
adc
jae
mov
push
sti
inc
sub
rolb
add
fstl
insb
push
pop
loopne
call
dec
divb
sbb
std
js
dec
sub
bound
mov
aad
mov
mov
mov
ret
mov
iret
cmp
pop
fdivrs
xor
iret
movhps
cmp
icebp
xorl
add
mov
ret
data16
dec
loope
pusha
add
fldcw
out
or
fucomi
lahf
pop
cld
cs
fdivrp
adc
push
mov
adc
add
aaa
add
or
in
dec
xorl
pop
leave
mov
mov
and
mov
data16
gs
in
xor
nop
mov
xchg
or
mov
or
dec
or
mov
mov
mov
aam
dec
mov
jge
cs
sbb
pop
outsl
xchg
call
xchg
sub
sbbb
inc
icebp
or
sbb
jno
mov
cmp
pop
test
outsb
push
mov
out
mov
ficomps
mov
mov
push
push
mov
sbb
sbb
repz
jbe
hlt
popa
daa
insl
filds
test
je
sbb
pushf
pop
in
mov
pop
movl
addr16
icebp
orb
and
enter
mov
mov
jl
xor
mov
aas
xchg
ss
imulb
mov
pop
mov
inc
mov
mov
pop
movsb
lret
outsb
mov
rep
xchg
stos
fsubrs
or
mov
and
test
inc
cs
inc
cmc
xchg
jecxz
cmc
push
imul
jns
xchg
fidivrs
push
jmp
std
push
cmpsl
mov
adc
shrb
pop
push
ja
cld
les
aas
jge
std
call
dec
lds
jb
das
dec
pop
adc
adc
jmp
clc
inc
adc
imul
jg
stc
ss
fwait
test
aad
mov
lods
mov
movsb
sbb
ds
cs
shrb
cmp
andb
insl
js
pushf
push
lds
mov
jp
cmp
pop
jl
movsb
loop
pop
std
cmp
shll
push
and
xchg
pop
push
dec
fiadds
xchg
fildll
xor
jae
neg
adc
sub
loope
pop
inc
mov
setge
fisttps
dec
mov
repnz
call
cmp
mov
jmp
sub
stos
mov
aaa
rcll
xchg
fsubrl
or
insb
push
jo
call
mov
aad
pop
scas
rcll
lds
add
cmp
and
jp
movsb
mov
mov
sbb
frstor
cmp
inc
nopl
xchg
sbb
jb
ljmp
sbb
or
pop
out
mov
jne
cmpsl
sub
loopne
cmp
sbb
dec
hlt
inc
pop
sub
aas
jnp
xor
sub
mov
das
adc
xchg
cmpsl
jl
popa
push
fnsave
std
xchg
ds
pop
pop
movsb
jbe
pop
lahf
xchg
test
andl
xor
out
test
stc
lret
sub
adc
je
or
out
addr16
fadd
pop
into
cli
incl
test
cmp
cmpsl
cmpsb
xchg
insb
lcall
adc
lock
jne
mov
loope
pop
push
xor
scas
dec
sub
and
aam
jae
pop
roll
lods
pop
and
in
mov
jne
cli
int
idivl
iret
arpl
mov
jecxz
stos
and
xor
ljmp
add
fwait
test
inc
hlt
mov
dec
or
mov
movsb
hlt
jp
push
sub
clc
jge
and
fimull
hlt
and
push
jno
push
cmp
or
pop
in
out
rorb
out
add
ja
cmp
adc
and
dec
jae
mov
jge
lret
mov
fiadds
ret
inc
insb
movsl
ficomps
inc
repnz
push
mov
icebp
dec
rorl
pop
and
out
lds
and
outsl
inc
loope
ljmp
xor
ja
cld
and
pop
cmpsb
inc
fimull
call
xchg
out
sub
loopne
pop
add
outsb
cmc
in
in
ds
mov
sbb
popf
lods
lcall
sub
cmp
cmpsl
repnz
aas
cmpsl
jle
mov
into
jl
sub
outsl
push
jo
lds
xor
and
push
test
add
sub
jg
jns
popa
jb
sub
mov
insb
jmp
js
je
xchg
fmull
call
pop
push
push
rcrb
scas
mov
jo
jbe
in
and
xchg
syscall
outsb
rclb
push
xchg
out
roll
mov
cmc
xorb
adc
dec
lahf
insl
outsl
popa
adc
mov
sbb
daa
pop
jp
aam
int
lcall
push
adc
repnz
inc
call
adc
xor
cmpsb
pop
sub
rcrb
out
adc
mov
aam
lret
push
out
data16
lds
dec
pop
cmp
lcall
xchg
xor
aas
xchg
mov
push
push
jbe
loope
mov
in
inc
mov
cmp
sti
dec
hlt
and
lret
in
inc
and
mov
add
cmc
fimuls
aas
pop
lea
loope
stos
push
add
call
aaa
std
push
loop
out
push
mov
xchg
jmp
gs
iret
mov
cmp
or
dec
in
ret
mov
rorl
int3
cs
in
out
xchg
inc
or
dec
pop
in
push
paddusb
insb
ja
fmull
adcb
and
xchg
out
out
inc
pushf
jo
movsl
dec
jl
dec
aam
xchg
leave
jne
adc
loop
pop
test
cmp
insl
sti
pushf
cmp
es
mov
ret
jbe
jbe
sub
xor
cmpsl
stos
int
mov
stos
xor
sbb
ret
pop
pop
cld
stos
jb
outsl
lret
inc
sar
fiadds
xchg
pop
das
xchg
loop
cmc
movsl
push
xchg
sbb
test
call
pop
in
push
callw
or
or
movsl
out
test
stc
mov
xor
dec
in
mov
int
repnz
push
mov
popa
lods
sub
dec
inc
sbb
xor
adc
popa
sub
lds
fldcw
or
ret
adc
and
imul
mov
mov
xorl
adcb
mov
dec
ficompl
cmp
push
cmp
cmp
mov
xchg
test
and
out
adc
mov
es
adc
das
cli
dec
in
push
sar
push
cmp
pop
cwtl
arpl
jle
pop
imul
jmp
aam
adc
clc
out
sub
int3
mov
clc
test
or
fmull
mov
stc
dec
dec
ret
push
callw
lcall
hlt
pop
jmp
repnz
jecxz
iret
adc
mov
jecxz
shlb
cmp
sub
mov
outsl
sub
test
and
inc
sbb
xchg
shrb
out
aaa
dec
jg
mov
mov
pop
lret
push
bnd
cld
and
sti
cmp
lods
xchg
stos
inc
rcrl
dec
cmp
pop
subb
fldt
mov
push
in
cmc
out
push
pop
add
xor
or
or
into
adc
jae
test
mov
xchg
dec
xor
xchg
lods
inc
dec
xchg
fsubrs
xlat
pop
pop
add
jb
pop
sub
test
mull
cwtl
mov
out
and
es
in
push
adc
adc
mov
xchg
push
adc
or
roll
cmc
xchg
mov
cli
xor
xor
jno
push
adc
push
mov
pop
negb
clc
sbb
xchg
lret
js
inc
popa
lods
pop
repz
pop
push
test
pop
cmovae
jne
or
fildll
and
xchg
push
pushf
inc
jne
xchg
mov
arpl
inc
add
cmpsb
out
cmc
jecxz
loop
in
cmp
mov
daa
mov
idivb
out
inc
add
jo
sahf
sbb
xchg
inc
js
subb
push
pop
sbb
scas
adc
cmp
mov
push
out
ja
mov
insb
jle
insb
out
sbbl
mov
dec
scas
leave
push
test
push
ja
fistps
sahf
dec
or
fdivl
loop
mov
in
int3
and
xor
adc
mov
subl
and
dec
mov
mov
daa
mov
dec
insl
ljmp
sub
xchg
dec
jns
ja
lcall
sahf
mov
mov
sbb
dec
sub
push
add
add
dec
mov
loop
mov
cmp
and
fildl
test
jno
ret
sub
inc
fnstsw
test
inc
stc
pusha
cs
pop
mov
aad
movsb
icebp
xor
testl
cld
mov
or
xor
rorl
fs
imul
and
int
push
fsubs
sbb
inc
mov
mov
or
pop
jb
sbb
sub
ss
stc
add
lcall
sbb
jno
test
enter
xchg
test
ret
clc
lret
ds
dec
in
scas
sbb
xchg
pusha
pushf
pusha
push
xor
sbb
inc
std
xchg
rclb
inc
xlat
in
xchg
mov
add
leave
sbb
cmp
push
lock
stos
ljmp
adc
orl
jmp
inc
push
shlb
outsl
or
cmp
adc
mov
fwait
out
icebp
xchg
add
mov
mov
cmpl
xchg
adc
jbe
pop
les
jbe
dec
sbb
stos
xor
iret
bound
mov
cmp
xchg
mov
lcall
mov
push
xchg
mov
cmp
in
mov
cmp
pusha
or
ljmp
adc
pushf
sub
cli
es
mov
call
fcoml
inc
xor
mov
std
jle
mov
stos
repz
xor
xor
push
push
pop
cmp
nop
popa
out
sbb
into
jge
lea
stc
int
xchg
mov
imul
outsl
lret
push
dec
xorb
outsb
in
sbb
inc
cmp
mov
mov
sbb
cmp
mov
jge
or
sub
mov
pop
sti
push
notl
sbb
push
mov
pushl
xor
mov
loope
ljmp
mov
outsb
and
and
addr16
and
testl
loop
test
cmpsl
add
xor
ljmp
sarb
sbb
stc
inc
and
fsubs
adc
and
ror
enter
in
add
jg
cmp
cmpsl
dec
int
cmp
push
mov
stos
mov
xor
jno
stc
mov
push
push
jo
mov
xchg
inc
ror
rorb
stc
mov
inc
sbb
in
test
out
nop
inc
dec
adc
cmp
lcall
scas
fwait
and
add
loope
repnz
adc
jbe
imul
dec
push
and
xchg
push
xchg
pop
or
addl
adc
nop
mov
mov
sbbb
dec
dec
fcompl
jns
pop
incb
mov
shrb
mov
push
and
daa
fstl
mov
out
xor
scas
sub
cmp
jne
add
aam
jae
stos
stc
mov
mov
stos
cmp
mov
push
cwtl
cmp
scas
pop
mov
mov
into
outsb
cmp
and
mov
in
or
push
and
inc
bound
mov
or
lock
mov
adc
sub
push
xor
sbbl
test
xor
mov
stos
fmuls
adc
je
sub
dec
jae
dec
daa
daa
push
sbb
dec
pop
lock
sub
add
jns
xchg
push
cld
js
push
iret
mov
xchg
js
add
push
adc
jle
mov
pop
lods
fcomps
sahf
dec
test
insb
push
mov
movsb
stos
scas
mov
mov
jb
or
insl
xor
cltd
inc
rclb
adc
popf
mov
push
pop
add
int3
mov
mov
sub
fisubrs
xchg
push
dec
mov
jg
push
inc
popa
mov
aaa
xlat
sub
aad
cmc
push
scas
cs
gs
addr16
xchg
pushf
test
scas
fldenv
rcl
ss
repnz
arpl
sub
lea
sbb
enter
pop
pop
jmp
jg
loopne
sub
sub
roll
dec
inc
jecxz
lods
dec
pop
mov
stos
lret
punpckhbw
outsl
in
mov
test
in
rolb
mov
pop
outsb
xor
scas
mov
in
outsl
out
inc
mov
pop
mov
cwtl
int3
push
xor
mov
std
add
jmp
xchg
xchg
or
fwait
or
repnz
test
xchg
or
out
test
fs
mov
aas
mov
lret
lahf
dec
les
cwtl
jg
pop
add
mov
fcompl
lret
mov
sub
jle
pushf
cmpsb
xchg
mov
or
fs
stc
icebp
adcb
pop
pop
xchg
jmp
push
in
pop
cmp
dec
data16
js
pusha
bnd
jp
xor
dec
push
push
scas
fwait
fwait
inc
repnz
iret
int3
xchg
in
inc
idivl
pop
cltd
mov
test
jns
dec
hlt
mov
cli
icebp
out
shrl
and
ja
jmp
sub
cmpsb
xor
or
pop
popf
fildl
imul
vcvtps2pd
mov
adc
cltd
pop
inc
in
add
icebp
inc
adc
fcomi
in
add
sbb
mov
gs
je
int3
dec
xchg
push
negb
pop
dec
fistl
imul
add
mov
sbb
leave
psrld
or
jp
and
push
fcoml
dec
xor
add
mov
cmp
stos
xor
in
push
loopne
into
mov
mov
pop
add
je
lcall
loope
mov
push
cmpl
adc
inc
push
jns
pop
xor
sub
sar
push
rorb
jmp
mov
inc
stos
pop
inc
sbb
call
popf
fpatan
push
popf
movsl
jnp
inc
mov
int
test
add
inc
insb
mov
mov
add
mov
or
xchg
or
jg
pop
lods
push
in
je
inc
cmpb
js
sarl
daa
dec
ja
mov
mov
push
and
fcomps
lret
je
das
push
jnp
push
sub
inc
jns
aaa
inc
outsb
push
ss
mov
sbbb
incb
jmp
jae
jl
xchg
push
popf
mov
mov
sarl
aam
or
mov
xchg
sahf
xchg
jl
in
push
mov
cmpsb
pushl
test
jecxz
fidivrs
les
and
pushf
shlb
je
adc
inc
inc
fcmovbe
imul
adc
insl
roll
xchg
mov
xchg
clc
or
in
mov
sbbl
pop
push
mov
jo
and
jae
std
js
push
push
lret
ror
movb
push
dec
mov
inc
sub
mov
sbb
add
cld
cmp
jg
lds
repnz
sbb
xchg
xchg
adc
outsb
sahf
jmp
dec
mov
icebp
out
aas
pop
stos
push
fcmove
lods
cmc
not
rclb
js
ljmp
fisttps
lret
cltd
or
cli
dec
inc
pop
jg
jno
add
and
jae
xlat
sbb
leave
mov
test
or
cmpsl
push
cs
int
dec
in
lds
nop
iret
mov
outsl
adc
repnz
data16
sub
pop
pushf
push
mov
xchg
jp
in
shl
jl
popf
ja
andb
loope
xor
adc
mov
ds
movb
inc
jb
inc
test
aaa
jl
cmp
sbb
ret
repnz
in
stos
daa
sub
gs
roll
nop
jge
fucom
add
push
inc
jmp
fstl
hlt
ds
cltd
jno
fsubl
jg
pop
xchg
sub
mov
stos
nop
insb
leave
scas
xor
pop
fistl
das
lahf
and
aas
adc
xor
mov
sbb
jmp
or
pop
pop
jmp
test
mov
xchg
lcall
scas
push
es
push
add
loopne
mov
imul
ret
pop
mov
lods
cmpsb
jp
cmc
pop
mov
fstl
lahf
jmp
call
addr16
loop
jmp
xlat
push
xchg
mov
ss
jne
lahf
lret
jbe
xor
popf
mov
popa
imul
loope
mov
push
int3
sbb
in
push
or
and
sbb
or
push
mov
dec
add
stos
push
nop
jge
or
subl
xchg
xchg
popf
gs
inc
into
sarl
mov
clc
mov
mov
push
inc
lcall
test
ret
cs
mov
data16
cmp
jmp
hlt
int3
inc
or
xchg
xor
neg
or
push
jo
jmp
outsl
mov
mov
push
mov
dec
pushw
push
xor
je
adc
jb
arpl
test
jl
pop
and
mov
cld
add
dec
lods
or
imul
sub
push
loopne
mov
iret
add
rcrb
les
cli
pop
inc
jge
test
adc
mov
insl
sub
insb
mov
pop
dec
cmpb
inc
pop
int3
and
insl
inc
jae
xlat
loopne
incb
lahf
mov
lock
xlat
cwtl
lea
jl
sahf
das
fmulp
pop
xlat
sub
jne
das
add
mul
pop
add
subl
sub
jno
adc
mov
daa
in
cwtl
adc
jmp
insl
dec
mov
push
mov
mov
ljmp
adc
fisttpl
jb
ds
call
das
xchg
xor
jns
fsubrs
fwait
cmp
repnz
dec
dec
mov
dec
insb
cmp
aad
mov
sbb
daa
loop
test
xor
mov
out
pop
sbb
jp
xlat
mov
push
mov
sbb
daa
test
jbe
movsb
and
rclb
fldl
out
mov
xchg
xor
jp
cmc
adc
scas
shl
mov
cltd
lret
or
xchg
stos
mov
call
enter
mov
cmp
dec
jno
cmpb
add
fs
push
mov
outsb
popf
pop
push
icebp
les
dec
cmp
pusha
sbb
sub
jno
dec
bound
ret
or
movsb
dec
push
jge
test
dec
pop
xchg
xor
pop
push
lcall
cmp
int
mov
shlb
push
clc
std
sbb
cmpsb
jge
adc
jo
fbstp
dec
push
ret
pop
mov
xchg
cmpb
or
insb
imul
dec
lcall
test
xchg
pop
push
dec
jp
enter
jl
jmp
sbb
call
int
sub
int
sbb
sbb
ds
or
jae
fmull
cmp
inc
lods
dec
pop
xchg
jge
popa
and
gs
sub
inc
sub
pop
insl
inc
call
test
or
xchg
mov
cli
repnz
pop
mov
mov
cmc
sbb
jbe
adc
mov
nop
and
cwtl
cmp
addr16
out
sbb
jle
jmp
pop
rcll
pop
mov
es
stc
adc
dec
xor
sbb
inc
sub
lcall
push
decw
push
fs
push
iret
xor
orb
mov
out
addb
mov
test
xchg
loop
lock
lret
or
pusha
cmp
test
fbstp
aam
notb
mov
lock
cmp
mov
das
add
movsl
popf
rorb
push
in
jbe
push
xchg
pusha
ds
jne
repnz
outsl
out
lret
inc
jecxz
or
cli
push
ret
cli
cmpsl
push
jo
push
sbb
adc
mov
adc
into
call
cmp
jp
sbb
dec
imul
data16
out
adc
fstpt
mov
mov
cltd
mov
std
stc
rcr
pusha
ret
push
cld
push
adc
xchg
imul
fbld
push
out
lods
loop
inc
mov
lods
dec
xor
into
jl
imul
mov
shr
mov
fdivr
mov
pop
dec
and
cmc
jbe
lcall
orb
xchg
pop
cmp
fiadds
inc
mov
add
leave
jg
inc
scas
loop
mov
fisttpl
and
jg
pusha
sub
lods
push
icebp
fs
fsubr
aas
in
mov
imul
out
fstpt
popf
jmp
cwtl
or
sbb
enter
pop
sahf
pop
jle
out
sbb
stos
sbb
lock
lret
mov
fimuls
and
adc
fwait
imul
cs
sti
add
or
scas
push
pop
or
and
fmull
imul
jmp
mov
sub
inc
repz
push
mov
sbb
mov
out
ja
pop
or
ja
sub
rolb
shrb
inc
cmp
insb
xchg
hlt
sub
mov
hlt
das
adc
fcmovu
or
pusha
lock
pop
sahf
xchg
ror
stc
mov
test
cmp
adc
mov
insb
mov
les
cmp
imull
dec
ss
rcr
call
lret
ss
jnp
add
sbb
xor
je
mov
stc
movsb
or
mov
rcrl
shlb
fisttpll
mov
xor
movsl
pushf
pop
cs
shl
outsl
fldcw
test
pushl
imul
ja
push
push
jne
adc
in
xor
outsb
mov
scas
inc
repnz
xchg
cmc
xor
cmpsb
push
in
push
ss
daa
loop
hlt
sbb
lea
aas
imul
push
sub
fcmovne
das
stos
pop
iret
sbb
pop
outsb
add
rorb
xor
mov
int3
stos
out
adc
mov
stos
dec
sub
les
push
jnp
jne
mov
cmp
add
xchg
das
mov
sub
popa
jns
int
clc
mov
xchg
jp
dec
cmp
cltd
popw
sbb
sbb
xor
and
cmp
push
lds
xchg
leave
or
mov
jbe
rcll
sbb
dec
jnp
fiadds
out
aas
lds
dec
repnz
popf
dec
repnz
or
imul
imul
jns
in
cmpsb
fwait
andb
push
mov
mov
icebp
lods
ljmp
mov
add
stos
sub
mov
pushw
pusha
xchg
jbe
cmp
pushl
out
push
mov
lret
mov
stos
and
mov
jnp
mov
fwait
inc
jge
rcrb
vfnmadd231sd
repnz
cltd
mov
jne
ss
shrl
and
shll
scas
out
fwait
jmp
pop
push
adc
xchg
and
repz
jbe
jo
mov
fdivrs
in
mov
fldenv
push
std
pop
out
insb
xchg
clc
jge
xchg
fsub
sub
jle
lock
mov
ljmp
fnstcw
adc
push
leave
rorl
dec
pop
mov
xchg
xchg
pop
inc
cmp
adc
aad
pop
movsb
push
out
cmc
or
sbb
es
and
push
inc
or
sub
push
xchg
pop
test
lahf
sar
jmp
adc
dec
dec
and
sahf
xor
pop
out
mov
mov
repz
mov
outsb
sub
jge
aam
mov
dec
pop
repnz
enter
sub
lods
sar
in
xchg
loope
imul
cmpsb
and
loop
xchg
popa
dec
scas
loopne
and
add
scas
cld
pop
adc
sahf
sbb
dec
xchg
xor
cmp
stos
jp
xchg
shll
pop
sub
insl
pushf
push
js
popa
cmp
lahf
jl
sti
test
loopne
add
pop
or
pushf
fbld
xchg
mov
sub
push
mov
inc
dec
sbb
arpl
lcall
inc
iret
xlat
popf
orb
jne
test
mov
sub
push
mov
sub
fsubl
xchg
subb
sub
or
das
push
xchg
lret
lahf
lods
xor
in
sti
push
adc
sar
mov
les
movsl
xchg
fists
mov
cmp
out
xlat
pushf
add
xchg
cmp
sbb
push
xchg
dec
stos
mov
mov
mov
imul
mov
dec
cmp
es
pop
adc
mov
adc
lock
xchg
cmp
hlt
pushf
sub
adc
xchg
and
add
outsl
loopne
push
mov
fwait
push
cmp
adc
adc
jo
dec
xor
pop
add
subb
popf
push
insl
cld
mov
jno
cmp
push
dec
push
push
hlt
out
inc
push
mov
jp
xchg
andl
movsb
stos
outsb
sub
add
xchg
loop
movsb
ljmp
imul
loope
dec
inc
cmp
arpl
loopne
cmp
shl
aam
cwtl
xchg
cmpsl
loope
pop
mov
int
in
stc
dec
jns
add
xchg
leave
adc
lret
xchg
outsl
stos
add
lock
movsl
dec
or
push
aam
adc
cld
add
fldcw
and
adc
lods
push
or
lahf
sub
mov
push
outsl
mov
mov
cli
add
and
leave
jo
xchg
cmp
ljmp
andl
popa
mov
fwait
inc
scas
lret
clc
rcrl
addr16
aaa
sub
flds
insl
push
mov
jmp
cmp
xor
pop
mov
jge
shl
pop
rcl
jl
push
cmp
bound
or
jno
outsb
repz
popa
fdivl
xchg
movsb
mov
scas
test
jns
jp
or
sbb
js
loop
mov
aas
fwait
cmpb
xor
dec
mov
popa
leave
loope
rolb
push
pop
movsb
xchg
adc
clc
lods
int
mov
movsb
cmp
lcall
repnz
lret
cld
push
packssdw
pop
data16
lds
lods
sti
rcll
insb
hlt
enter
fs
cmp
ja
popf
push
pop
push
add
push
push
imul
in
cmpsl
mov
pushf
push
stos
shrl
pop
and
jne
dec
mov
int
clc
out
xor
pusha
pop
xchg
sbb
dec
movsb
std
imul
mov
sbb
add
sbb
orl
out
adcb
push
pop
clc
adc
xchg
xor
and
pop
js
mov
and
inc
xor
mov
insl
inc
mov
jecxz
adc
lds
out
mov
pop
stc
out
nop
in
xchg
fstps
jae
aas
pusha
mov
in
test
pop
or
dec
aas
inc
sahf
ss
adc
jmp
rclb
and
into
test
std
jle
bound
or
sbb
shrb
mov
mov
or
shlb
pop
push
xor
sbb
fisubl
icebp
jbe
ss
fs
and
jb
lahf
mov
enter
mov
sbb
cmp
movsb
pop
fidivl
jnp
push
leave
out
outsl
and
mov
or
mov
pop
mov
jge,pn
and
hlt
lods
ja
cmp
pop
jp
in
mov
xor
mov
cmc
enter
push
cs
xor
sar
fwait
rcrl
fmul
test
addr16
and
xor
push
pop
push
aaa
je
mov
adc
push
mov
popf
inc
mov
aas
adc
rcr
fsubs
cmp
test
fildl
pop
push
inc
jns
pop
pop
cli
stos
lret
sub
in
adc
fisubs
rol
cmpl
loopne
out
cs
pushf
xchg
sub
add
bnd
push
hlt
sub
popf
ds
mov
jns
or
dec
imul
jecxz
cld
mov
cs
xchg
pop
cmpsb
pushf
cmp
cld
xor
inc
fs
out
ds
sub
mov
mov
addr16
pop
repz
add
scas
sti
hlt
fmull
mov
call
rcl
clc
leave
adc
sti
lret
and
jns
mov
sbb
clc
pop
and
xchg
int
test
mov
addl
test
sub
xchg
nop
pusha
pop
loopne
clc
push
les
test
fstpl
gs
std
mov
in
sbb
jmp
or
test
test
sbb
stc
pop
das
orl
lods
test
inc
cmp
decl
rolb
das
arpl
mov
add
cmp
add
movsl
nop
rcll
xchg
cli
pop
iret
xlat
loop
push
jle
andl
mov
and
xor
jne
psubusw
data16
dec
sub
mov
mov
mov
sub
mov
mov
popa
je
xchg
sub
add
inc
jge
pop
push
shrl
inc
or
dec
xchg
push
fs
inc
and
mov
push
outsl
sub
jmp
fs
mov
push
adc
push
aas
sub
xor
shlb
ret
mov
mov
xchg
pop
loop
sbb
int
dec
in
inc
cltd
adc
and
push
out
fst
inc
test
fdivp
push
push
mov
cmp
sbb
outsl
scas
lcall
jl
repnz
popa
ret
shlb
das
arpl
repz
ljmp
xchg
or
xchg
xchg
and
sub
popf
sbb
xchg
mov
cmp
xchg
ret
cmpsb
mov
popa
or
jle
pushf
xor
shrb
mov
cmp
mov
mov
add
inc
cmpsl
les
jne
repz
jo
pushf
mov
and
aam
jl
cmp
aaa
jmp
hlt
push
jbe
sti
adc
inc
js
xlat
jl
cmp
jno
aaa
sbb
pop
les
ljmp
sbb
jle
push
mov
out
cmp
sti
mov
xchg
jbe
sbb
bnd
cmpsb
mov
cltd
ret
sub
mov
rcrl
rcrl
addr16
idivl
mov
cmp
mov
jecxz
mov
mov
fsts
adc
sahf
jnp
fimuls
sti
adc
sar
int3
rcr
mov
mov
jl
loopne
mov
rcrl
ficomps
push
cmp
or
pop
shl
iret
fwait
shr
adc
pop
aad
lea
aam
dec
outsl
int3
repz
aaa
pop
cmc
adc
jne
outsl
dec
mov
fcomps
mov
jnp
rolb
hlt
xor
cld
int
xchg
mov
lea
mov
xor
adc
xchg
stc
enter
pop
mov
push
jne
adc
xor
inc
push
sub
xchg
xor
dec
adc
fistpl
pop
mov
inc
punpcklwd
push
push
push
loope
fcomps
fidivl
fcom
and
inc
mov
jnp
outsl
xor
std
lock
sbb
sarb
frstor
in
ja
sbb
cmp
xor
cmp
scas
rorb
loop
scas
and
pop
xor
aam
pop
cmc
adc
jle
cld
xor
cwtl
gs
mov
cmp
scas
pushf
jp
das
insb
adc
loopne
cmpsl
inc
lock
inc
inc
cmp
fsubs
out
dec
mov
fdivr
cmp
into
mov
xchg
shr
add
std
pop
add
sahf
add
mov
fsts
xor
movsl
xor
rcll
fistpl
jle
lods
push
clc
fisttpll
xor
inc
dec
mov
fidivl
out
outsb
sarb
push
lods
fdivr
fdivp
sbb
add
mov
mov
inc
in
nop
dec
fs
push
pop
shll
mov
iret
insb
in
shlb
call
jne
jbe
sub
rcll
mov
lcall
mov
mov
rcrl
aas
pusha
jle
add
pop
cmp
jno
fcompl
int
ror
out
jno
popf
add
adc
sarl
cmpsb
movsl
mov
sbb
rcrb
lods
in
adc
sub
or
pop
movsb
data16
insl
jns
out
repz
adc
stos
xchg
pop
fnsave
and
xchg
and
pushf
mov
push
test
dec
jno
dec
jmp
inc
xor
ret
xchg
fidivl
add
sbb
out
pop
int3
aam
mov
jge
and
cmp
cltd
add
mov
popa
mov
stos
inc
popa
xlat
cmp
pop
dec
mov
popa
sbb
pop
cwtl
imul
pop
movb
xchg
in
mov
incb
insl
ljmp
lcall
pop
lods
xchg
fidivs
inc
pop
and
cmpb
lcall
fstp
mov
fwait
rolb
rclb
das
mov
idiv
in
inc
sub
orl
inc
fdivl
cmp
pusha
mov
loop
jg
stos
sub
lret
inc
mov
in
and
cmp
inc
stos
les
pop
jmp
sbb
out
in
sbb
loopne
push
das
jnp
mov
xchg
mov
inc
fimull
lret
dec
stos
loope
mov
fldpi
cmpsl
add
mov
mov
movl
jno
xadd
xlat
stos
dec
aaa
lock
test
cltd
stos
in
inc
test
shrl
loope
add
pop
or
sub
mov
fidivrl
mov
xor
roll
shrb
xchg
sub
aas
cmpsb
outsb
fcomps
dec
push
mov
stos
ljmp
jg
dec
stos
ret
mov
in
popf
mov
test
rcr
aaa
mov
mov
lcall
adc
pusha
ret
rclb
ljmp
lret
iret
lcall
sahf
and
dec
push
js
rcl
mov
sti
dec
rcrl
sti
sub
ds
ljmp
sub
cmpl
jns
pop
cmp
sbb
xchg
cmpsl
scas
inc
ljmp
push
cwtl
cs
sbbb
loop
inc
stos
and
mov
flds
xchg
fldl
insl
cmp
push
ffreep
mov
enter
adc
mov
dec
mov
jecxz
mov
dec
arpl
popf
or
add
push
or
subl
jnp
cltd
inc
das
mov
push
dec
sub
inc
gs
imul
in
sub
fwait
jle
pop
push
push
iret
adc
pushl
inc
cmp
inc
cs
inc
jb
pop
pusha
loopne
xor
hlt
jecxz
pop
adc
shll
dec
out
clc
xor
sub
adc
mov
int
or
mov
bnd
jb
inc
sub
xchg
fldl
adc
pop
sbb
test
jecxz
loope
mov
inc
jae
jmp
fwait
arpl
push
pop
mov
mov
push
int3
add
push
sahf
push
loop
imull
stc
sub
jg
push
or
arpl
xchg
imul
in
xchg
push
jle
jl
loopne
xor
pop
cs
test
and
fldt
gs
cli
jnp
out
pop
or
cmpsl
xchg
and
mov
leave
mov
rorb
mov
sbb
mov
movsl
test
cltd
push
xor
test
aam
dec
aad
mov
xor
sahf
daa
push
mov
mull
cmpsb
arpl
xchg
jbe
ret
adcl
sbb
sub
jg
mov
lahf
nop
nop
jle
push
subl
enter
xor
mov
inc
mov
cltd
scas
and
dec
ljmp
xor
rcrl
testb
repz
test
adc
cmp
gs
sarl
out
aad
ljmp
fwait
lods
das
lahf
mov
adc
shrb
les
ds
fildll
lods
repnz
xor
or
stc
cli
enter
int3
lds
mov
int
fstpl
fldl
lods
jge
repz
insl
insb
sbb
loopne,pt
adc
jnp
cs
add
inc
fcompl
jmp
lret
lcall
dec
scas
lods
ret
in
mov
cmc
ret
push
rcr
pop
add
sub
lods
in
dec
std
out
push
in
in
inc
pop
sar
lds
insl
cmp
mov
or
in
sbb
ljmp
mov
mov
cld
pop
call
aas
mov
jb
ret
sub
xor
mov
aam
notb
push
jmp
addr16
rcrl
out
adc
sbb
test
mov
sysret
xchg
push
jl
cli
xor
or
std
in
xchg
or
xor
push
mov
jns
mov
pop
enter
inc
jnp
scas
inc
daa
ljmp
fldcw
mov
jle
xor
sub
jecxz
scas
dec
inc
movsb
popa
fsubrl
into
jbe
mov
jae
push
stos
sub
or
mov
jbe
in
sbb
adc
dec
inc
mov
rol
out
out
inc
sbb
fisubs
or
cwtl
cmc
adc
dec
mov
add
xchg
jmp
sub
adc
cmp
mov
jl
and
pop
cli
clc
cld
mov
add
out
cmpsb
rorb
cli
add
or
into
popa
into
dec
or
inc
fcmovnu
push
cmpsl
cwtl
xchg
mov
std
dec
xchg
orb
xchg
push
scas
pop
jne
cmp
push
cmpb
loop
mov
xor
mov
outsb
sbb
mov
out
mov
dec
jb
js
jecxz
fs
mov
in
lods
sbb
jb
inc
jle
cmp
orb
aaa
jae
mov
dec
mov
push
pop
and
xor
ffreep
sub
pop
sub
jbe
pop
pop
sbb
mov
repnz
stos
and
insl
xchg
inc
add
test
out
add
pusha
mov
jne
fsts
roll
repnz
dec
mov
ja
adc
shll
sub
xor
fwait
xchg
cwtl
push
call
int
lds
and
jmp
shr
mov
js
fnop
jns
xchg
test
out
je
inc
push
adcl
mov
dec
test
idivb
pop
das
cmpsb
ds
sbbl
bound
cmp
repnz
outsb
out
add
inc
enter
add
dec
pop
in
adc
sub
mov
jae
mov
mov
mov
sar
aas
add
mov
iret
divl
int3
xchg
lcall
mov
fadds
ret
testb
dec
in
adc
push
fcomp
adc
add
ss
cmp
jecxz
leave
test
pop
sbb
aad
xchg
ja
jae
sub
inc
pop
mov
lret
cmp
repz
jp
rcll
xchg
pop
jp
xchg
cld
mov
out
pop
mov
loopne
sahf
out
in
js
xor
out
push
popl
sbb
mov
loop
hlt
jge
mov
sbb
and
test
std
std
mov
mov
mov
clc
adc
sbb
sub
jbe
push
aaa
cmp
test
jo
mov
popf
push
test
inc
cmovge
aam
cmp
or
or
cmpsl
test
sub
fmul
movsl
xor
leave
lcall
push
pusha
rcrl
lea
scas
mov
mov
sub
out
dec
std
push
xor
push
push
mov
push
xor
fwait
dec
inc
xchg
jbe
pop
fisttps
jle
std
subl
push
lret
dec
sub
addb
mov
shrl
sbb
or
outsl
subb
jb
mov
fimull
xchg
lds
mov
mov
add
aaa
add
pop
lods
stos
dec
insb
fstpt
cli
or
cmc
cmpsb
fldenv
jge
test
leave
sbb
mov
mov
xor
mov
jmp
test
inc
jl
mov
lcall
jns
stos
test
and
bnd
frstor
addr16
pop
push
pop
push
push
gs
dec
mov
xchg
lds
sti
icebp
mov
sub
movsl
cmpsb
cmpb
nop
push
in
cs
xor
jo
pushf
jno
test
adc
shll
loope
std
jb
idivb
ja
inc
mov
mov
inc
mov
xchg
add
cmpsb
jl
roll
pop
mov
and
cmpsb
jnp
mov
mov
sbb
sbb
lods
lock
pusha
hlt
mov
scas
out
or
outsl
sbb
jno
dec
jno
pusha
imul
dec
sub
and
outsl
push
sahf
fiaddl
or
add
add
jnp
jne
jmp
xchg
adc
dec
push
iret
data16
jae
out
dec
mov
mov
cmc
mov
and
lret
jp
mov
lret
std
sbb
mov
es
nop
inc
push
stc
push
lret
dec
jns
sti
fwait
in
loope
or
mov
lea
sub
cmp
push
lods
or
xchg
xchg
cmpsb
dec
mov
mov
daa
subb
jl
not
push
or
mov
cmpsl
cwtl
shll
repnz
and
inc
sub
mov
mov
sarl
and
aaa
mov
inc
sbb
adc
mov
dec
pop
and
fidivl
inc
pop
enter
in
daa
pop
mov
in
sbb
push
mov
or
out
in
fwait
lea
ljmp
and
outsl
mov
inc
add
mov
cltd
mov
and
lock
sub
adc
bound
pop
sub
repnz
jmp
lret
in
xor
adc
in
std
dec
fcomp
dec
rclb
add
sub
ficomps
add
lret
mov
mov
fildll
cmp
mov
sbb
pop
or
sbb
push
cmpsb
sub
mov
mov
aas
sti
rcrb
in
int3
fildl
mov
jns
inc
mov
jle
pop
dec
jae
mov
arpl
movsb
mov
into
push
popf
adc
gs
insb
pop
add
mov
dec
ss
incl
jns
dec
xchg
cmp
cmp
loopne
ja
jae
cmpsl
test
call
pushf
test
imul
rclb
cltd
mov
out
add
sub
inc
or
and
pop
adc
dec
adc
nop
add
mov
mov
stos
imul
xlat
test
cltd
gs
pusha
inc
shl
pop
aad
or
xchg
mov
cmpsl
movsb
divl
jnp
push
xor
into
sbb
mov
xor
adc
adc
cmc
inc
loope
add
popa
xor
hlt
inc
inc
jbe
xorl
insl
mov
jo
cmp
jle
roll
nop
es
fdivr
das
or
push
arpl
stos
mov
jl
ret
xchg
repz
lock
movsb
orl
test
orl
sub
test
push
pop
in
repz
scas
adc
dec
adc
mov
fnstcw
negb
push
xchg
xchg
or
lock
pop
aad
arpl
ret
adc
aaa
dec
inc
out
enter
push
inc
push
or
mov
hlt
or
std
loop
scas
inc
sbb
or
repz
push
jp
jmp
repnz
inc
adc
and
test
jecxz
xor
scas
inc
daa
daa
sub
clc
mov
dec
mov
fdivs
pop
scas
jae
pop
test
jno
rcrl
sbb
xor
cmp
mov
mov
adc
cli
iret
imul
mov
cmpsl
gs
or
mov
mov
sub
pop
xor
ja
mov
adc
adc
mov
sub
sarl
jns
mov
int
shl
into
xchg
sbb
adc
cwtl
xor
fdivs
lods
and
pop
test
bts
or
xchg
mov
imul
dec
nop
cmp
hlt
pop
cwtl
lock
adc
push
fisubl
mov
shll
outsb
mov
pop
test
data16
ror
xlat
inc
lcall
jmp
hlt
in
jmp
pop
inc
mov
push
mov
aam
out
fcmovne
jbe
aad
mov
imul
fcomi
pop
inc
enter
cmc
rcrl
call
les
sub
loopne
in
addr16
sbb
rcrl
xchg
pop
xor
enter
and
fldenv
js
and
bound
insb
aaa
or
push
sbb
mov
fwait
xchg
jbe
mov
add
and
fsubr
and
jmp
jge
mov
movsb
jmp
std
xchg
add
mov
movsl
xchg
loop
pop
subl
in
sbb
and
neg
int
lret
mov
inc
outsl
jle
cmp
jge
jns
add
clc
jle
sbb
mov
idivb
test
or
or
inc
addr16
sbb
sti
imul
addr16
cmp
jno
popa
xchg
cmp
jl
mov
or
jle
push
out
enter
test
notb
mov
mov
pop
cld
xor
addl
into
push
fcmovbe
sub
and
adc
mov
or
movsb
cmp
lock
lahf
add
mov
xchg
cmp
push
jae
dec
mov
dec
out
or
sarb
jmp
pusha
adc
mov
or
xlat
or
adc
std
mov
push
rolb
cmp
mov
lahf
jae
pop
cmp
jp
or
cld
lock
cmc
push
lahf
movsl
shrl
sub
inc
scas
mov
add
jmp
decl
add
inc
mov
mov
into
mov
outsb
cmp
xchg
dec
mov
iret
sub
dec
mov
rolb
cmp
int3
adc
mov
fmull
push
sub
std
outsb
add
test
pop
adc
xchg
sbb
pusha
dec
sub
shll
jp
push
jo
loopne
jo
sbb
jae
popf
cmp
mov
dec
mov
sbb
xorb
ss
inc
mov
out
sti
pop
lods
fstps
fnstenv
and
repnz
and
popa
jbe
jg
add
test
je
or
fimuls
fsts
insb
pop
mov
mov
or
hlt
mov
test
xchg
push
fimuls
leave
shrb
adc
js
mov
mov
or
or
xor
sub
mov
pop
xchg
fists
jl
adc
sbb
mov
mov
push
xchg
in
xor
push
mov
lods
fcmovnb
dec
mov
mov
sbb
scas
out
lret
dec
cmp
iret
aas
mov
fnstsw
mov
mov
cmpsb
mov
xor
or
jecxz
jb
aam
fadd
add
test
in
and
stc
loopne
sti
cmpsb
js
inc
aad
repz
loope
push
and
pop
ljmp
xchg
dec
imul
dec
push
mov
sub
jb
lds
ljmp
stos
inc
dec
into
pop
sub
sub
jbe
enter
jnp
jg
xchg
or
or
jge
daa
sub
jb
cltd
cld
and
sub
lret
fmull
notb
cmc
outsl
xchg
inc
sti
fisubl
out
std
int
mov
jo
sub
xor
dec
cwtl
lock
cmp
test
push
inc
sbb
rol
push
add
gs
push
mov
ds
xchg
and
inc
add
insl
cmc
jmp
sub
add
loop
xchg
fildl
xchg
pop
fucom
push
clc
inc
out
mov
jecxz
test
mov
mov
jbe
sbb
and
dec
add
insb
sbb
popf
ds
and
imulb
inc
pop
ja
or
mov
xor
fmull
imul
lret
inc
arpl
imul
and
fdivrs
mov
mov
icebp
cmp
xchg
xlat
mov
cmp
pop
jns
or
inc
xchg
aaa
ss
aas
push
jne
jo
imul
pop
xor
push
cld
in
mov
pushf
dec
and
ror
fldt
loop
xor
loopne
mov
add
mov
std
leave
jo
dec
mov
rcrb
cmp
paddsw
sbb
ret
lods
loop
pop
push
cmp
pop
xor
cmp
cli
xlat
and
mov
test
ja
mov
sti
xor
adc
and
lods
enter
mov
popf
out
push
das
notb
cmp
dec
shl
add
and
int
lods
loopne
mov
mov
and
jbe
dec
mov
imul
add
andl
or
pusha
push
xorl
xchg
xchg
fs
jl
inc
adc
js
add
jno
and
shll
lret
divl
inc
lock
mov
mov
stos
xor
xlat
pop
fadd
mov
pop
test
addb
mov
jbe
pop
cmp
cmpsl
sub
dec
fstps
push
icebp
inc
push
and
inc
in
popf
pusha
fs
mov
lods
int
in
adcl
mov
lods
adc
es
and
loop
mov
jno
adc
adc
or
xor
cs
jo
adc
mov
cmpsl
leave
dec
aam
dec
xor
and
adc
mov
cwtl
subl
les
movsl
jno
add
icebp
test
push
pop
add
jl
test
outsl
jns
push
leave
push
mov
test
std
std
sbb
je
add
cmp
nop
jg
xor
jecxz
mov
xor
mov
imul
or
jnp
push
scas
popa
jg
and
add
jnp
sub
pop
bound
lods
cld
dec
sbb
scas
lcall
mov
mov
scas
xor
mov
adc
inc
roll
or
js
sub
mov
data16
xchg
adc
inc
mov
xor
sbb
ficoms
rorb
rcll
jno
jmp
xchg
xchg
xchg
icebp
repz
fs
shlb
sub
sti
loope
mov
aas
popf
add
sub
and
adc
add
xchg
out
cli
imul
sarl
push
cmc
push
add
enter
clc
test
pop
imul
push
adc
jl
int
push
xor
add
cwtl
add
mov
push
xor
roll
xchg
push
lcall
out
xchg
and
inc
mov
popa
bnd
and
int3
mov
add
ljmp
sbb
and
ret
ret
stos
jbe
mov
push
lods
or
jo
ficoml
jo
dec
mov
pusha
icebp
inc
push
scas
imul
insl
dec
cmp
subl
loop
jnp
into
jbe
leave
dec
xlat
sub
inc
bound
xchg
andb
push
dec
and
jnp
xchg
xchg
add
mov
push
inc
ds
mov
or
adc
adc
add
inc
enter
mov
je
or
fstpt
cmp
sbb
cld
ss
sbb
sub
dec
pop
cmp
jmp
cmp
pushf
xchg
sbb
pop
popa
mov
rcrb
orl
and
stos
inc
stc
push
add
add
xchg
jge
xor
aam
jg
aad
fs
pop
ja
in
add
outsb
cmp
pop
out
push
aam
sbbl
xchg
inc
pop
mov
ret
shll
push
push
mov
mov
lds
ret
fisubs
jge
pop
fstps
push
pop
popf
sbb
iret
rcrb
pop
lret
sahf
scas
mov
into
fwait
push
or
push
cld
js
roll
ja
leave
stc
rorb
xor
pushf
push
push
in
push
mov
sub
popf
push
add
mov
lock
cmp
xchg
or
addr16
inc
clc
enter
inc
out
mov
movsb
orl
adc
adc
bound
aas
push
out
in
loop
push
mov
dec
imul
sti
sbbb
xor
fisttps
fldt
mov
das
mov
ljmp
dec
sarb
leave
add
ret
or
aaa
mov
aad
mov
xor
ret
sbb
ljmp
pushf
cwtl
add
add
out
cmpsb
xchg
sti
mov
enter
add
insb
leave
jle
ljmp
mov
mov
arpl
out
push
jb
das
mov
cmp
ja
ret
nop
mov
push
jne
stos
mov
stos
shl
xchg
je
fmul
loope
nop
jbe
clc
adc
mov
addr16
cli
xchg
ror
movsb
lahf
mov
sti
shlb
pop
rcl
ffree
inc
adc
lods
icebp
fildl
aam
and
or
mov
and
jp
repz
cmc
jnp
dec
add
lock
lock
dec
pop
mov
andl
dec
int
mov
cmpsb
ljmp
dec
and
jo
in
out
xchg
cltd
and
adc
adc
jmp
push
rclb
cmpl
mov
inc
cmp
push
imul
pop
push
and
add
pop
movsl
test
sub
or
and
adc
sub
and
pop
scas
mov
insl
mov
aas
xor
fcmovu
mov
and
xchg
jo
and
dec
fbstp
ret
cmpl
xor
xor
jne
enter
jno
stos
nop
jecxz
dec
pushf
jne
or
push
shlb
cld
sti
xor
fwait
xchg
mov
jge
pusha
pop
pop
lret
insb
dec
shrb
add
filds
out
aam
push
sub
bound
push
or
or
aas
push
pushf
or
adc
leave
notl
sbb
or
and
inc
mov
cli
cmp
dec
lea
rcrl
jno
in
cli
test
jmp
push
das
xchg
jle
xchg
in
jge
jo
dec
dec
pop
jbe
out
shl
je
stc
jge
push
movsl
test
inc
or
sahf
popa
sbb
mov
sldt
orl
sahf
cmpsb
lret
ss
xchg
dec
js
sbb
in
stos
flds
dec
xchg
repz
out
ljmp
cmp
enter
pop
sarl
adc
jle
cwtl
nop
dec
rol
jnp
es
hlt
mov
xchg
pop
bnd
in
jl
sub
push
mov
arpl
mov
into
repz
or
or
adc
xor
adc
push
add
mov
mov
lret
mov
dec
mov
sbb
jmp
or
sub
xchg
dec
stc
jmp
popf
pop
push
das
int3
shlb
aam
or
push
roll
jmp
lahf
add
inc
and
bound
insb
adc
ret
sbb
mov
sar
imul
xor
or
in
xor
sarl
add
pop
mov
push
subl
or
insl
xor
test
or
sarl
imull
add
inc
clc
shll
mov
test
dec
xchg
xlat
sbb
imul
jge
cmp
pop
repz
fsubrl
inc
int3
cmp
js
mov
dec
or
call
loopne
push
repnz
push
jg
iret
repz
mov
call
inc
mov
pop
mov
add
int3
jecxz
mov
push
fildl
fsubs
mov
sbb
lret
incl
incl
or
xchg
hlt
test
gs
je
loope
jo
jae
push
jne
insb
sub
popa
andl
shl
test
insb
add
add
pop
pop
dec
push
xchg
cld
jp
sub
repnz
adc
xor
jmp
rolb
aaa
or
pop
leave
jmp
and
les
in
adc
test
hlt
mov
mull
inc
lret
jb
inc
inc
mov
xchg
push
shr
and
xchg
xchg
jmp
pop
aad
sub
cmc
into
and
mov
add
repnz
insl
mov
sub
xchg
sub
rclb
adc
andb
push
push
xor
fdivrs
test
xor
fidivrl
jno
arpl
nop
inc
lods
pop
pop
mov
cs
push
popf
adc
movsl
jns
fwait
leave
idivb
lret
jecxz
push
es
xlat
jle
push
sarl
stos
and
loop
mov
pop
mov
pop
jmp
xor
rclb
mov
inc
mov
sub
shl
js
push
test
xor
xchg
xchg
dec
scas
jmp
mov
xchg
mov
out
or
call
das
push
ss
lods
add
xchg
jmp
jmp
jbe
ds
sub
xlat
inc
xor
cld
fdivs
lahf
push
and
pop
jae
xor
mov
in
out
jno
jne
dec
cmpw
inc
xchg
movsb
mov
pusha
jl
enter
out
shlb
add
sub
xchg
cmp
jp
ret
pop
ficoml
xchg
in
add
sub
shrb
daa
mov
cmp
sbb
cmp
pop
add
adc
dec
mov
nop
scas
lahf
ljmp
lret
stos
ljmp
in
push
mov
ret
stc
dec
lret
scas
and
mov
mov
repz
enter
pop
aam
push
out
adc
sbb
sbb
into
push
dec
sbb
lret
enter
fnstenv
push
popa
dec
jecxz
add
clc
or
push
jo
xchg
roll
or
fnstenv
dec
inc
fdivrl
loop
fxch
imul
popa
pop
int
add
mov
jno
addr16
push
arpl
cmp
stc
stos
es
dec
scas
insl
xchg
and
pushf
xchg
pop
lods
js
ds
daa
push
mov
aaa
rcll
jbe
sarb
inc
cld
sti
sbb
xorl
mov
mov
std
add
adcb
jno
lock
mov
sbb
mov
adc
mov
mov
jne
mov
push
mov
imul
outsl
mov
aam
add
fwait
repz
sahf
xchg
aad
pop
dec
xor
je
pop
gs
pop
out
mov
sbb
mov
jmp
adc
call
ja
pop
fsubl
cmc
cmc
rol
jno
fs
sbb
and
fs
bound
jg
into
pop
les
pop
test
mov
aaa
and
dec
and
jae
fisubrl
int3
and
pop
sti
push
stos
dec
push
xchg
mov
xor
fs
cwtl
aam
push
out
mov
popa
shll
or
jno
and
xchg
push
adc
outsl
enter
xchg
push
adc
xchg
mov
and
daa
testl
pop
xchg
mov
scas
test
bound
fildll
loop
dec
jno
addr16
push
push
fsubr
mov
and
aaa
mov
mov
sbb
cmp
out
xor
push
push
lret
aam
repz
pop
add
add
jno
mov
mov
inc
mov
fcoml
lcall
mov
ss
mov
call
lods
notl
movsb
out
shrb
push
xor
sub
push
pop
or
scas
xchg
movsl
pop
inc
pop
mov
jo
mov
fldt
pop
lea
int
aad
sbb
sbb
inc
fyl2x
rclb
or
rcr
jl
jecxz
cli
jb
jno
or
arpl
pusha
and
cmp
icebp
outsb
push
cmp
pop
push
pop
aad
into
dec
jnp
adcl
je
scas
and
adc
dec
push
shlb
mov
ss
shl
push
sub
out
test
scas
ret
push
sbb
mov
aas
int3
push
fsubs
ret
jecxz
lods
iret
outsb
in
orl
popl
pop
jne
cld
mov
jb
filds
add
divl
inc
shlb
adc
lret
jno
aad
in
loopne
sti
xchg
ds
jecxz
fldl
movsl
mov
dec
filds
es
out
out
mov
les
clc
mov
notb
sub
or
movsb
mov
jne
pushf
mov
xorl
mov
lahf
cmp
testb
mov
daa
lea
adc
int3
outsb
cmp
cmp
int3
fldl
mov
push
xor
jmp
cs
hlt
lret
rcl
leave
test
sub
sbb
je
inc
rcrl
std
js
mov
lret
shrl
clc
lock
adc
out
add
divb
gs
xchg
mov
push
ja
je
pop
xchg
icebp
jmp
sbb
filds
mov
pop
es
xchg
add
mov
ja
xlat
hlt
sbb
push
mov
mov
dec
jno
and
pop
pusha
mull
xchg
push
orb
inc
test
jp
xchg
shll
int
mov
add
gs
imul
shl
inc
imul
xchg
aam
fcoms
dec
fisttpl
fidivs
test
notb
pop
adc
sbbb
pop
shlb
cmp
icebp
repnz
dec
fildl
cli
mull
or
pusha
imul
xchg
scas
call
or
aad
mov
incb
and
fwait
inc
pop
idivl
cmpsb
pop
jecxz
sbb
pop
lea
jecxz
push
cwtl
ret
or
outsb
push
arpl
sub
addr16
inc
ficoms
jl
mov
dec
es
jnp
pushf
movsb
mov
pop
in
adc
mov
or
out
orb
les
aaa
push
pop
lds
push
cmp
push
xchg
aam
mov
sub
mov
xlat
or
xchg
insb
test
dec
sar
cltd
push
dec
push
cmpsb
xchg
outsl
inc
test
pop
lods
scas
mov
pop
int3
sub
push
sbb
cmpsb
mul
sub
icebp
rcll
scas
out
out
aam
movsb
lret
stos
sub
stos
jae
adc
jmp
loopne
out
mov
addr16
leave
and
vbroadcasti64x2
cmp
icebp
mov
pop
fistps
lret
je
push
test
or
inc
push
pop
std
jo
fwait
push
andl
repnz
outsb
orl
cmp
add
ret
mov
pop
sbb
fsubrl
cmp
xchg
in
pop
mov
cmp
cwtl
ja
les
adc
aas
outsb
add
jbe
jnp
sbb
movsb
mov
inc
xorb
shlb
sahf
frstor
cmp
into
call
mov
xor
inc
jo
cmp
push
arpl
repnz
adc
rcr
push
pop
int3
dec
pop
popf
std
leave
orb
pop
stc
push
fcomps
les
cltd
pop
or
xor
jg
ljmp
scas
pushf
jle
in
lret
ja
cwtl
pop
pop
hlt
adc
lock
faddl
sarb
or
aad
xchg
or
jle
mov
pop
jne
adc
inc
lods
repnz
icebp
pop
xor
pop
xchg
aaa
xchg
xor
and
fstl
adc
call
and
jb
dec
dec
loopne
and
mov
out
sbb
xchg
stos
inc
fcmove
test
dec
jge
shl
mov
and
push
xor
mov
xor
sbb
sub
cmp
fstl
leave
cld
imul
cmc
cmpb
ret
cmpsb
sbb
test
stos
fdivl
or
aad
rcrl
xchg
cwtl
adc
in
shll
cmc
mov
adcl
into
in
ret
icebp
pusha
mov
or
xor
iret
xchg
dec
pop
nop
fcmove
mov
lahf
mov
cwtl
nopl
mov
mov
lea
dec
mov
jae
je
cmp
mov
icebp
cli
mov
lds
inc
add
iret
in
add
int3
or
pop
cmp
dec
xchg
push
out
outsl
jmp
and
es
mov
xchg
scas
mov
sbb
aam
jmp
push
stc
fimull
pop
daa
dec
fwait
sbb
jle
popf
shlb
pusha
dec
cli
sbb
add
jnp
xlat
or
jb
mov
aam
mov
movsl
fs
movsb
daa
or
movsl
or
xor
jno
outsb
dec
fidivs
fsubrs
in
scas
inc
iret
pop
jne
cmc
movsl
pop
stos
cmc
and
les
adc
sub
sahf
in
popl
lret
in
out
sbb
fstpt
jns
ss
test
push
sar
mov
mov
xchg
popa
inc
push
ljmp
mov
aam
inc
sbb
lock
daa
jge
cmpsl
bswap
repnz
mov
inc
fisubrs
sub
adc
push
mov
testb
pop
jl
negb
and
add
add
jmp
mov
mov
add
int
in
mov
mov
sub
stc
and
repz
mull
icebp
into
aad
mov
xchg
jg
mov
xlat
aaa
pop
jge
adc
adc
idivl
mov
xor
lret
xchg
mov
mov
mov
inc
jae
mov
sbb
icebp
std
push
mov
dec
aaa
and
xor
mov
dec
enter
or
mov
mov
fs
rcl
cmp
pushw
jno
inc
sbb
and
repz
jo
jbe
lods
add
or
xchg
cmp
sub
into
ja
adc
fdivrl
test
loopne
shlb
arpl
and
call
push
push
rclb
xchg
inc
or
loope
cmp
sahf
xchg
sbb
scas
rcrb
sub
mov
std
popa
insb
rol
cmp
movsb
stos
sbb
popf
arpl
cmp
test
mov
push
fisttps
dec
mov
mov
mov
in
bound
sbb
pop
sub
pop
lock
and
sbb
leave
pop
paddsw
cmpsb
fistpll
pop
fwait
adc
or
jecxz
mov
or
push
sbb
jl
fs
inc
sub
fs
xchg
aaa
and
sbb
divb
cmp
xor
scas
and
and
cli
add
push
lret
and
pop
lret
mov
movsb
adc
in
pop
add
and
sbb
and
cmpsb
inc
or
jmp
js
stc
fisubs
sbb
xor
rorl
mov
xor
fsubr
mov
xor
jg
or
pop
jb
fstpl
cli
movl
inc
push
lea
loopne
out
jne
insl
cld
mov
sub
fldcw
stos
shll
imul
fiaddl
dec
mov
scas
pusha
in
fisubs
mov
pop
addr16
jns
mov
hlt
xor
iret
sbb
add
test
ds
add
sarb
filds
inc
cmp
adc
in
out
test
mov
loope
aaa
inc
sahf
mov
lds
pushw
xchg
loopne
out
lock
xchg
rcrl
in
inc
push
jne
push
in
stc
iret
mov
or
cmp
xor
pop
adc
cs
out
dec
andb
mov
lock
dec
sarl
pop
pop
mov
cmp
xchg
stc
popa
in
les
cmp
inc
loopne
push
popf
pop
dec
lods
sahf
cmp
jl
inc
mov
jmp
in
ja
xchg
cmp
jp
mov
js
testb
inc
cld
dec
mov
outsl
jmp
xor
jns
insb
jecxz
or
jno
ljmp
popa
sarb
xchg
cli
test
loop
faddl
xchg
xchg
adc
mov
push
sbb
daa
ljmp
lds
xchg
in
rdmsr
mov
outsb
dec
xchg
stos
jmp
das
les
xchg
jno
mov
es
xchg
push
add
js
repnz
xorl
test
mov
jnp
movsl
xchg
dec
xchg
orb
jo
repz
insb
adc
sti
pop
xor
mov
loopne
js
sbb
jg
bt
test
or
mov
je
dec
hlt
pushf
jb,pt
mov
jg
and
sti
xchg
subb
sub
or
pop
inc
jb
dec
sub
dec
popf
pop
ret
int3
out
jmp
gs
or
jbe
test
add
ds
xor
addb
fcmovnu
ret
and
arpl
pop
imulb
mov
mov
jmp
test
imul
xchg
into
loopne
or
loopne
and
and
scas
mov
push
lea
adcb
popa
out
hlt
mov
leave
loopne
out
test
in
jbe
mov
and
jne
aaa
hlt
call
out
xor
jle
mov
mov
push
pop
mov
std
adc
insb
neg
movsl
out
adc
std
xor
push
test
cmp
cmp
pop
mov
rcll
fucomi
jge
in
stc
daa
fwait
leave
jno
arpl
pop
push
mov
in
cld
ljmp
lahf
faddl
xor
push
sub
int3
xchg
test
xchg
add
add
push
add
push
or
sub
dec
dec
gs
ret
push
and
cld
jns
xchg
adc
loope
cmp
cmp
adc
cmp
or
add
pop
fstp
rcrl
or
mov
out
or
sub
xchg
inc
sub
into
sti
add
xchg
mov
dec
call
lcall
adc
sub
dec
inc
cmp
mov
pop
push
sbb
sbb
shlb
pop
dec
add
mov
lcall
fmull
adc
insb
movsb
xchg
sarl
dec
clc
push
stos
ficoms
mov
pop
inc
push
addl
ficoml
add
xlat
inc
outsl
push
and
xchg
push
mov
pop
mov
push
mov
mov
mov
insl
imul
fsub
fmull
cmp
loopne
cmc
aas
push
dec
fcmovnu
in
les
aam
test
lds
dec
out
push
and
mov
pushf
inc
repz
xchg
sub
sbb
sbb
rcrl
xchg
mov
xor
in
adc
stc
jl
les
js
jb
jns
out
mov
mov
jmp
jbe
pop
pop
fisubrs
or
cmpl
mov
and
out
lea
pop
shl
fdivl
xor
fcompl
jbe
pop
sub
js
sub
pop
jecxz
dec
call
xor
dec
inc
mov
fdivl
gs
xchg
pop
mov
sbb
mov
xchg
mov
ud2
mov
fdivr
test
mov
aad
out
loop
in
jmp
je
jmp
cmp
inc
rclb
push
mov
mov
jg
pop
push
cli
testl
into
sahf
jg
dec
push
push
and
or
xor
jne
xchg
lds
push
pushl
adc
or
out
stos
out
add
push
js
push
aad
jg
imul
nopl
js
in
movsl
push
sub
add
dec
cmpsl
and
imul
ret
mov
in
add
mov
jecxz
es
xor
shll
sub
pop
jbe
sar
lods
dec
pop
cmp
ljmp
mov
sbb
push
gs
movsb
into
enter
or
push
pmulhuw
bswap
mov
inc
jbe
xlat
sbb
jo
xor
call
xchg
in
outsl
ss
mov
or
imull
pop
add
into
pusha
jecxz
dec
scas
cwtl
imul
lock
int3
add
cmpsb
sub
push
mov
mov
pop
test
aam
push
jnp
loopne
loopne
decb
lret
shl
out
mov
sbb
and
mov
je
push
aad
add
mov
add
pop
bound
push
and
jne
clc
jbe
sbb
cmp
sbb
sbb
sbb
rcr
into
xor
rol
lea
xor
pop
popa
testb
lods
les
inc
das
call
add
in
xor
je
add
xor
in
imul
jge
xchg
cwtl
stos
pop
and
adc
sub
rorb
and
dec
dec
lahf
das
or
call
enter
xor
insl
dec
sahf
inc
xchg
roll
and
mov
xchg
iret
dec
or
test
xchg
in
fisttps
dec
pop
and
pop
mov
sub
inc
pushf
sub
xor
lock
popf
jnp
stos
dec
sbbl
xlat
push
adcb
xchg
in
push
or
cmc
movsb
lret
mov
test
mov
lret
test
mov
adc
jmp
mov
shl
add
loop
leave
xchg
cs
aad
cld
xchg
cli
daa
and
lcall
pop
pop
frstor
cmpsl
jmp
sbb
stos
test
cli
sbb
xchg
cmp
paddusb
lret
and
adc
mov
push
push
jo
sbb
fcmovnbe
mov
push
sahf
add
cmp
push
sub
call
cltd
aam
inc
js
jb
cmpsb
jmp
imul
enter
shlb
cltd
xchg
sbb
sub
pop
int3
jg
jno
mov
push
sub
inc
int
sbb
mov
add
pop
push
sbbb
inc
inc
mov
mov
lds
outsb
mov
push
mov
dec
adc
cmp
xchg
lcall
jns
test
jo
push
dec
icebp
ret
xor
ficomps
scas
jne
xchg
pop
mov
jmp
adc
jmp
in
sub
mov
jecxz
sub
enter
pop
pop
mov
rcll
jb
std
pushf
outsb
repz
xor
mov
arpl
pop
push
add
lea
mov
pop
mov
and
jae
fstpt
insl
xor
pop
ss
daa
nop
orl
pop
inc
negb
cmp
xchg
xor
mov
ds
mov
sar
inc
jae
ret
test
xchg
icebp
xchg
sub
xchg
in
mov
movsl
sub
adc
jl
xchg
pop
push
mov
add
fbstp
mov
fsubrp
and
outsb
mov
call
cmp
push
xor
pop
lods
decl
dec
imul
lods
jne
or
ds
mov
mov
shll
mov
inc
mov
xchg
add
mov
dec
out
dec
xchg
imul
cmp
mov
xchg
sub
bound
cmpsb
cmp
push
add
movsl
mov
idivl
dec
mov
xor
lock
es
and
and
in
cs
out
mov
into
out
cmpsb
fstpt
mov
insb
lret
sub
dec
insl
jb
daa
sarb
or
clc
fcomi
push
scas
adc
insl
cltd
mov
jl
xlat
dec
mov
inc
sti
mov
xchg
addb
lds
test
sbb
push
ret
enter
mov
testb
fsub
jbe
mov
add
test
push
pop
sarb
sbb
or
in
pop
adc
fdivs
sbb
lcall
jbe
pop
mov
and
adc
in
test
mov
jb
rcrb
ficoml
lret
fsubrl
das
ret
cmc
lret
inc
fneni(8087
fsubp
enter
mov
jge
cs
lcall
ret
xchg
sub
in
sbbb
cltd
imul
inc
jecxz
jno
cli
sub
pushf
cwtl
imul
loopne
sub
jp
aas
mov
int3
enter
xchg
jno
loop
std
in
and
pop
in
std
fcompl
scas
push
jbe
mov
andl
cmpsb
cmp
xchg
call
mov
push
fcomps
cmp
mov
cmp
call
jns
jg
pop
adc
adc
cmc
pop
dec
xlat
or
cmp
add
mov
divl
push
ja
mov
fists
shl
dec
out
mov
call
adc
jne
andl
mov
push
jecxz
rcrb
rcrb
inc
cs
add
insb
cmpsb
notl
popf
sub
lahf
fimull
and
inc
xchg
mov
test
mov
mov
ss
iret
lcall
dec
cs
pop
sub
leave
push
cltd
xor
insl
lahf
filds
push
sbb
xor
ss
and
pushf
inc
xchg
xchg
popf
mov
mov
push
js
rcrb
rcl
sub
out
pop
outsl
mov
icebp
inc
jge
mov
in
mov
aas
mov
sub
out
ret
mov
push
and
scas
sub
jp
arpl
sarb
mov
jle
inc
add
dec
rcl
fwait
repz
js
daa
jp,pt
jg
inc
mov
lea
sbb
into
je
cmp
push
dec
adc
push
push
jbe
jo
mov
in
pop
xor
js
lret
xor
add
out
xor
and
mov
rcl
pop
lahf
cld
int3
in
sbb
cmp
pop
xchg
jl
call
iret
sub
sbb
xor
shll
jecxz
lret
daa
jae
or
out
ret
mov
sub
dec
pop
les
cmp
mov
aad
and
cmp
push
rorb
adc
inc
jo
pop
sarl
ja
xchg
push
imul
jae
xchg
cmc
pop
push
adc
sbb
cmp
dec
mov
out
or
jo
adc
leave
mov
scas
insb
jbe
mov
inc
ljmp
xor
pushf
inc
pop
out
lds
sbb
rclb
push
aaa
push
jmp
mov
ret
jae
aaa
dec
dec
xchg
pushf
xchg
mov
aad
xlat
sbb
fnstcw
imul
stos
fucomip
pop
mov
pop
rcll
in
rcll
jl
shll
adc
mov
scas
test
fisttps
cmp
or
adc
adc
lret
loop
test
fs
loopne
push
enter
hlt
sub
fisubrs
ja
xor
add
adc
data16
in
or
mov
int
and
push
adc
shll
lds
mov
aad
loop
sub
pop
mov
xor
outsl
pop
fwait
aaa
jg
enter
stos
push
imul
adc
rep
dec
movsb
dec
cmp
mull
repnz
repnz
lods
divl
adc
popf
arpl
mov
mov
sub
cmpsl
stos
sbb
in
insb
js
cmp
sti
lret
repnz
jne
cmp
jmp
add
and
ds
sub
gs
mov
dec
and
adc
jno
pop
jae
int3
push
mov
cli
stc
popf
lcall
ja
nop
divl
mov
imul
shlb
ss
cld
push
lock
pop
daa
and
add
icebp
lret
xchg
int
inc
push
out
adc
dec
jnp
sbb
mov
ret
pop
ljmp
or
cmp
lret
mov
dec
dec
pop
jne
ss
outsl
jnp
mov
pushf
xchg
push
fsub
mov
ret
cmpsb
cmp
orl
xchg
mov
mov
or
push
and
xchg
sub
paddb
push
cmp
inc
jns
daa
int
adc
or
cmpsl
pop
mov
cld
mov
stc
jmp
cmc
xchg
cmp
shr
fstpl
jp
mov
and
dec
dec
and
rorl
sub
lea
sub
into
sub
xlat
imul
orb
out
push
repz
push
sbb
hlt
enter
ja
subb
out
and
sbb
push
jg
scas
ficoml
mov
adc
add
out
xlat
in
repnz
mov
lds
out
push
push
mov
xor
shll
ljmp
shll
outsb
test
xchg
inc
cmpsb
xchg
dec
xor
sahf
and
shrb
fisttps
out
xor
mov
lods
sbb
imul
inc
cmpsl
pop
ljmp
iret
enter
mov
inc
lret
in
cmpsb
cmpsl
pop
jb
js
js
adc
mov
imul
and
jne
stc
xor
sub
xor
mov
sbb
aaa
fistpll
mov
outsb
push
int3
outsb
cmp
fildll
pop
in
pop
xor
mov
push
jmp
jbe
js
cmp
add
pop
outsl
aas
mov
outsl
add
push
jo
and
cmpsb
push
test
and
fstl
or
sahf
pusha
insl
push
lds
jne
mov
daa
jecxz
pop
sub
lahf
psadbw
ds
cmpsl
insl
sarl
fsts
std
inc
notl
nop
cmc
hlt
cmpsb
loope
rolb
popf
enter
add
cmp
adc
jno
incl
jnp
cmpsl
jg
popf
xchg
sbb
jg
mov
ljmp
jae
push
xor
out
lds
testb
leave
push
stos
sub
mov
int3
push
sub
movsb
ret
sub
adc
subb
insb
lds
jne
mov
jp
xor
sar
lea
mov
dec
movsl
or
adc
xlat
xor
shrl
out
clc
mov
imul
popa
xchg
into
xor
xor
pushf
push
mov
push
iret
or
leave
mov
jecxz
mov
jecxz
sbb
xchg
sub
adc
stos
rolb
shll
test
test
mov
and
and
out
fmull
insb
scas
fstpt
ret
frstor
loopne
rorl
mov
mov
clc
sbb
int3
dec
cmp
hlt
aaa
adc
xchg
and
ret
cmp
pushf
or
xor
push
test
outsl
sub
pop
cmp
or
fstp
sahf
sbb
dec
mov
sub
test
sub
je
f2xm1
cmp
outsl
mov
mov
popa
sti
sub
dec
stos
sbb
fdivrs
xchg
cmp
xchg
fdivr
sub
push
enter
cmpsb
push
push
or
sub
mov
pushf
push
mov
sbb
cltd
mov
ja
push
test
sub
cmp
movsl
and
call
inc
lock
and
and
imul
mov
mov
daa
fidivrl
cmp
xchg
dec
int
inc
loope
adc
jmp
fisttpl
xor
sbb
test
cmp
pop
inc
mov
inc
ficoms
fucomip
add
jge
sti
mov
out
and
adc
test
or
push
stos
adc
jne
jne
fwait
mov
into
pushf
popa
bound
xchg
fstp
into
insb
push
xor
xchg
add
mov
or
outsl
xchg
pop
and
ret
insl
adc
xor
bound
dec
pop
gs
push
push
stc
xor
adc
add
pop
cwtl
xchg
fcomps
inc
mov
das
stos
lods
cwtl
mov
jmp
sbb
pop
stc
jno
lock
jge
test
mov
cmp
rcl
pop
aam
cmp
sub
add
cmc
mov
push
mov
fcomip
test
popf
inc
fstpl
out
call
dec
lcall
xchg
inc
jecxz
out
inc
jl
cltd
cmp
or
cli
xor
jmp
repnz
cmp
xchg
xchg
orb
mov
nop
push
aas
push
insb
cltd
iret
jb
inc
int3
bound
inc
add
hlt
jbe
cmc
cmpsb
test
adc
dec
dec
test
xchg
adc
jb
cmp
add
sbb
adc
add
sarl
fsubs
insl
jno
cmpsl
dec
adc
lret
mov
sbb
jg
mov
outsb
cltd
repz
adc
and
add
or
mov
mov
sti
or
nop
push
mov
push
pop
lret
leave
and
or
sbb
dec
testb
xchg
jns
es
test
and
push
sub
hlt
inc
rolb
pusha
cmp
lcall
adc
xchg
stos
popf
sub
incb
sub
nop
aas
pop
push
stc
cmp
fwait
cmp
xor
jno
imul
adc
cltd
mov
loope
mov
add
jmp
addl
jmp
outsl
fsubl
loopne
insb
mov
lsl
xchg
xchg
inc
movsl
popa
jno
repnz
cmpb
xorb
jl
int
cld
jno
inc
lods
mov
rcrb
jo
mov
movsb
xchg
xor
in
cli
mov
jp
ljmp
movsl
cmp
and
fsubl
cli
mov
xchg
lret
adc
sbb
mulb
pop
xor
in
dec
push
mov
aaa
leave
xlat
xchg
push
clc
sub
mov
sub
clc
in
in
insb
jae
fisubl
aam
lods
xchg
jo
roll
aas
cmp
mov
mov
sbb
dec
add
push
and
xchg
push
arpl
sub
jge
sbb
mov
mov
ss
pop
lds
rorb
cs
mov
mov
mov
add
stc
push
stc
adc
or
xchg
loopne
push
mov
add
push
sbb
imul
sbb
jl
xchg
sub
inc
mov
pop
inc
inc
mov
cld
xor
jl
inc
cmp
inc
sarl
fbstp
mov
sub
sub
push
inc
mov
aas
mov
add
lret
jae
lret
out
lea
lahf
add
hlt
mov
popa
in
imul
jne
cld
adc
push
and
mov
bound
sbb
push
clc
daa
sub
mov
ret
or
js
push
mov
mov
ficoml
jmp
mov
or
jle
mov
push
jnp
cmp
sbb
add
pop
inc
jnp
cmc
loope
in
adc
mov
push
xchg
or
and
inc
mov
xchg
enter
sub
cmp
rol
rclb
orl
mov
mov
mov
mov
scas
lcall
das
jne
hlt
out
xchg
fwait
and
and
xchg
hlt
or
lea
pushw
jne
mov
out
fdivrp
mov
or
push
pop
bound
pop
out
fsub
and
sub
scas
bound
mov
xor
les
or
adc
cmp
jmp
enter
xchg
shrb
int
mov
in
inc
fstpt
sarl
sti
out
loope
sbb
mov
xchg
sub
xchg
stc
bound
leave
xor
repnz
xchg
sbb
sbb
push
jo
inc
fcoml
ffree
popf
aad
icebp
in
movsb
dec
add
lea
add
mov
rorb
out
dec
xchg
mov
mov
lcall
mov
pop
orl
mov
cmc
mov
imul
dec
roll
mov
loopne
pop
xchg
cli
ja
cli
sahf
xchg
in
mov
adc
ss
cmc
mov
mov
incb
ss
dec
mov
xchg
xor
mov
aaa
xlat
cmp
push
ret
out
insb
das
xor
jb
lret
mov
add
out
gs
inc
ret
lret
push
test
arpl
lock
andl
cmpsl
fadd
mov
mov
call
xor
or
or
inc
mov
int3
sub
push
sbb
scas
test
pop
stc
insb
ja
ds
mov
cmp
mov
mov
enter
adc
cmp
adc
iret
mov
push
jae
cltd
mov
push
xor
in
mov
sbb
sub
iret
jno
sbb
jo
cltd
jb
pop
js
inc
xor
vhsubps
dec
lcall
sbb
pop
dec
and
adcb
and
cld
hlt
mov
and
and
pop
adc
sub
mov
jb
cmp
arpl
mov
in
push
cmp
lcall
push
out
cmp
lret
jo
jns
stc
ja
repnz
fiadds
fwait
xchg
je
push
push
sbb
fisttpll
mov
popa
push
add
pop
fists
cmp
dec
outsl
and
gs
dec
iret
fnsave
mov
pop
ret
outsl
stc
pop
insb
daa
jnp
cmc
add
popa
repnz
pop
rcll
lea
xchg
pop
fwait
push
add
rcrl
xor
xchg
sbb
cmp
adc
shr
or
shrb
adc
les
repnz
and
xor
jo
cmp
inc
mov
loop
pop
dec
arpl
les
test
int3
or
jb
pop
gs
xorl
add
mov
or
stos
sti
int3
cmpsl
sahf
out
cmp
addr16
add
ret
xchg
push
jle
cld
ja
popf
push
mov
mov
push
lods
insl
aam
jns
ret
loopne
sbb
jecxz
testl
xorl
adc
aas
leave
ds
sbb
dec
test
fsubs
int3
nop
push
into
int
cmpb
rolb
push
push
xchg
and
mov
sub
pop
adc
sbb
mov
inc
add
mov
inc
lret
jg
std
fidivrs
mov
mulb
xchg
jne
cltd
add
mov
test
sub
mov
aad
add
add
and
push
mull
daa
ret
dec
iret
xchg
inc
pushw
jle
aad
jno
pushf
push
fstpt
or
dec
clc
cwtl
mov
testl
ja
inc
hlt
insb
adc
inc
fistpl
das
ja
lds
push
jae
popa
jae
out
adc
mov
out
pushf
push
addr16
ljmp
repz
rorb
lahf
cmp
leave
push
out
push
fucomip
aaa
aaa
out
jnp
add
call
sarl
pop
shrl
test
hlt
cmp
xor
ja
call
jp
rclb
cmpb
xorl
sarl
popf
loope
popf
out
adc
outsl
fmull
inc
push
pop
hlt
xor
mov
rorl
mov
xchg
out
rol
popa
dec
mov
pop
cmp
mov
push
mov
mov
sbb
clc
sahf
movsl
gs
mov
pop
xor
mov
lds
data16
dec
mov
mov
pop
pop
sub
mov
lock
imul
dec
gs
push
in
insb
test
pusha
mov
or
push
das
xchg
inc
cmc
or
jecxz
dec
or
fiaddl
cmpsb
subb
pop
adc
xchg
mov
jge
push
sahf
popa
mov
jecxz
loope
daa
popa
rcll
xlat
inc
jmp
rcrb
mov
pop
test
mov
push
mov
aad
loopne
cli
mov
mov
inc
cmpsl
pop
cs
mov
sbb
adc
dec
sub
pop
lahf
gs
lock
mul
repz
aad
jo
lcall
cmp
fnstsw
ss
nop
imul
fdivrl
or
xor
cmp
mov
jo
adc
adc
addl
lods
popa
insl
out
fisttpll
fst
jnp
xchg
or
movsb
adc
addr16
lea
fucomip
jl
sub
and
ret
xchg
movsl
neg
dec
scas
lahf
jne
mov
inc
inc
mov
into
out
add
and
or
xchg
outsl
arpl
fcompl
loopne
div
mov
jne
jns
dec
jl
daa
mov
jl
ret
jb
lock
daa
mov
cmpsb
xchg
xchg
mov
loopne
int3
addr16
adc
mov
mov
hlt
ljmp
dec
ja
idiv
sub
jo
cmpsb
cli
cli
xor
popa
bound
shll
mov
mov
fnstenv
jnp
adc
xor
mov
jne
fsts
push
rcll
lcall
lret
bnd
andl
dec
mov
fsubl
xchg
loop
mov
mov
lock
fisttpl
push
scas
mov
mov
adc
xchg
popa
orb
repnz
mov
inc
fmuls
mov
shrb
push
test
je
jns
jge
aaa
dec
int
mov
push
jg
xchg
aas
in
loop
jmp
xchg
or
lret
inc
rorb
nop
pop
movsb
or
ss
fadd
insb
cli
rclb
mov
mov
jg
adc
mov
in
icebp
add
push
hlt
fisttpl
test
sbb
lods
stc
jmp
aas
sub
and
cmpb
ja
inc
mov
xchg
div
jno
cmp
cmp
fisttpl
add
cmp
das
aas
sar
testb
xor
shr
adc
lcall
mov
push
sarb
ds
repz
sbb
ret
cld
int3
sub
xchg
test
icebp
push
loop
add
repnz
lcall
mov
cmp
push
addr16
mov
mov
js
cwtl
pop
pop
push
loopne
cmc
xchg
cltd
pop
add
mov
mov
imul
inc
sbb
in
xor
jae
out
aad
adcl
inc
lcall
xchg
ret
lock
cmpsl
std
jge
jecxz
cmp
xorl
sbb
or
je
cmp
mov
mov
push
push
repnz
fcomip
jmp
jae
mov
shr
jb
mov
js
cmpsl
push
out
sahf
sub
or
iret
in
add
mov
aaa
into
stos
jo
fldenv
loop
in
and
ja
test
popf
fisubrl
cwtl
mov
xchg
idivb
mov
sbb
lods
push
sub
adc
aaa
cmpsb
adc
push
dec
mov
xchg
mov
mov
push
jnp
bnd
jl
iret
addr16
sbb
or
dec
adc
lds
jnp
call
jns
pop
pop
xor
push
out
movsb
pop
das
cmpsb
push
neg
mov
popf
cld
xor
push
das
cmpl
add
js
es
shll
sbb
addl
bound
xchg
xchg
pop
addr16
mov
inc
mov
jae
adc
dec
mov
cmp
repnz
cmpsl
out
imul
mov
daa
adc
ja
loopne
sbb
aad
cmpsl
lcall
add
ret
sub
jo
shll
stos
dec
shll
xchg
or
jo
stos
xor
pusha
shlb
cmpsl
orb
inc
pop
test
and
out
shrb
fstps
mov
xor
movsb
xchg
cltd
mov
sbb
lods
pop
add
xor
loope
sub
dec
adc
pop
mov
outsl
in
cmp
and
xchg
ret
cmp
bound
addb
mov
clc
in
loopne
iret
add
jle
and
rcrl
jae
mov
repnz
lcall
jge
dec
add
cmp
sub
and
out
notb
aaa
clc
pop
sub
xor
dec
in
and
cli
push
js
into
popf
mov
fs
gs
clc
test
loope
mov
and
jmp
in
mov
dec
mov
xor
pop
enter
outsl
pop
mov
mov
or
mov
iret
loope
sarb
mov
scas
cmp
in
inc
jmp
fnstsw
lret
in
stos
repz
pusha
adcl
mov
adc
lcall
icebp
ja
mov
loope
and
pop
sbb
mov
lret
xchg
mov
pop
sub
jo
pop
cmp
sub
addr16
xchg
in
mov
mov
ljmp
addb
into
sar
sbb
loope
sbb
cmpb
push
sub
mov
sbb
sub
cltd
iret
adc
jae
push
sbb
sub
mov
adc
mov
aaa
sarl
and
repnz
in
xchg
mov
adcb
lods
jle
addb
mov
ss
clc
leave
push
insl
sub
mov
ss
insb
and
push
push
jmp
shrl
fidivrl
push
dec
mov
outsb
into
rorb
lcall
cmpsl
nop
imul
scas
loop
shl
and
jbe
stc
jmp
shll
js
cmc
mov
pop
fsts
js
and
push
repz
into
push
cmpsl
lret
out
mov
jecxz
ret
mov
mov
fsubrs
scas
orb
push
push
mov
scas
sub
int3
nop
xchg
mov
mov
sbbl
xlat
scas
sbb
jb
sub
jbe
xchg
or
cmpsb
addl
loope
lock
cmpsl
jp
ljmp
loope
and
rcll
push
js
sahf
lods
jno
jl
xor
les
xchg
leave
add
mov
xor
sbb
loope
call
push
rclb
mov
cmc
aaa
pop
rcr
rcrl
mov
jne
inc
mov
stos
push
and
lea
cmp
in
inc
out
cmp
out
add
inc
jne
inc
dec
notb
xchg
adc
xor
pop
or
push
mov
inc
rorl
lcall
in
cmpsb
cs
xor
add
xchg
mov
sbb
adc
or
jns
pop
call
sub
jg
lock
test
hlt
pop
jmp
je
popf
mov
inc
fidivl
inc
mov
int3
je
loopne,pt
jnp
cld
jno
mov
lock
test
jo
test
sbb
adc
lds
push
push
lret
cmp
sahf
pop
mov
int3
cwtl
mov
mov
jmp
sti
mov
push
xlat
test
imul
test
scas
aam
inc
test
out
fwait
inc
test
mov
das
fwait
in
dec
scas
in
lods
sahf
cli
or
jmp
mov
stos
xchg
roll
mov
arpl
mov
mov
iret
test
add
fisubrl
push
lods
inc
mov
pop
das
dec
mov
jno
div
icebp
arpl
divl
inc
inc
fdivrs
scas
xor
jge
adc
mov
out
jp
mov
pop
ret
cmp
inc
adc
dec
sub
jg
pop
dec
push
mov
adc
xchg
mov
inc
pop
add
je
cs
int3
leave
push
loop
mov
rcr
mov
mov
lcall
mov
xchg
mov
jo
cmc
popa
xor
xorb
bound
sub
orl
jb
inc
test
test
mov
push
cmp
mov
cmp
pop
dec
cmp
mov
cmp
xchg
rclb
inc
and
pusha
pop
adc
push
scas
xchg
jno
into
jge
test
or
sub
mov
sbb
mov
lret
mov
mov
cmp
mov
or
into
fbld
sub
inc
clc
div
jmp
addb
loope
fnstcw
xor
pop
inc
sti
stos
lods
fimuls
mov
pop
shrb
jl
or
sbb
push
jmp
pop
or
pop
not
push
fisttpl
xor
mov
int3
cmp
push
leave
stc
inc
xor
jge
and
sub
pusha
dec
leave
mov
mov
fiadds
in
inc
mov
mov
mov
sub
lcall
sarl
jecxz
stos
ds
cltd
js
subb
js
nop
and
das
mov
shrl
enter
insb
push
hlt
test
push
movsl
out
ficompl
aam
cmp
js
sbb
sub
xor
mov
jns
sub
xchg
adc
jb
ret
aad
jg
icebp
into
test
loop
das
cmp
push
cwtl
or
gs
ret
movl
add
xchg
jecxz
das
mov
mov
out
lahf
mov
sti
or
les
popf
cli
les
mov
and
and
or
outsb
jle
out
imul
es
insb
cltd
popf
mov
shll
je
data16
divl
xchg
sub
addl
and
fmulp
lcall
stc
ljmp
jne
mov
daa
add
leave
and
jnp
aaa
rol
or
xchg
lea
les
mov
aad
es
sbb
dec
fildll
test
fs
cmp
leave
mov
add
jmp
add
stos
aas
mov
enter
addr16
lea
sti
aam
call
ffreep
and
dec
mov
sarb
lahf
add
xor
insb
push
ret
sbb
out
int
jno
das
pop
sti
mov
add
pop
inc
adc
dec
lret
sub
nop
and
mov
inc
enter
scas
add
call
loope
sbb
pop
xlat
leave
arpl
xchg
and
jge
inc
jmp
lods
mov
icebp
imul
push
jbe
sub
mov
cli
cmp
cmpsl
mov
sbb
ret
jb
sbb
loopne
addr16
jl
inc
dec
jle
or
out
ds
cmp
xchg
out
mov
add
or
subb
cmpsl
jecxz
cmp
cmp
outsl
push
andl
insl
mov
loope
ret
lods
nop
loop
dec
and
mov
fnstsw
lahf
jo
xchg
dec
or
cmp
push
or
fnstenv
pop
dec
adc
in
push
in
inc
iret
fsubrs
iret
rorl
fiaddl
aad
ret
mov
xchg
jbe
idivl
sbbl
sbb
mov
test
cli
dec
lds
popa
xchg
sbb
xchg
inc
sub
sbb
sub
int3
in
lea
jae
push
aad
fldt
adc
ficoml
out
jle
add
in
test
cmp
mull
xor
out
mov
pushl
or
andb
cs
push
cmp
jo
xlat
cltd
inc
jb
sbbb
imul
push
es
out
scas
leave
sbb
jnp
ljmp
inc
dec
pop
sbb
push
in
push
xor
pop
jbe
mov
ret
sub
lahf
jno
mov
pop
fnstsw
jg,pn
aam
or
cmp
pop
push
mov
cwtl
sub
push
out
lock
pushf
jae
lods
xor
and
and
mov
xchg
shll
fstps
lahf
add
out
lds
pop
popf
sbb
enter
outsl
push
repnz
pop
aas
pop
cmp
mov
out
scas
dec
jnp
popl
in
pop
cs
push
mov
push
pop
pushf
jmp
insl
test
ds
mov
adc
loope
imul
add
sbb
out
pop
jg
sbbl
idivl
xor
pop
pushf
sarb
pushf
mov
scas
inc
in
sub
inc
dec
cld
jo
cmp
mov
sahf
int
jns
cmp
or
movsl
or
push
mov
stc
aaa
clc
push
cmp
xlat
cs
add
push
push
lret
cs
clc
out
std
cli
add
push
lds
adc
sbb
sub
push
jle
pop
ret
xchg
and
ret
mov
inc
in
bound
dec
lea
movsl
pop
mov
dec
out
cmp
ja
movsb
cmp
popf
in
xchg
cwtl
sahf
cmp
inc
adc
lods
inc
sbb
shl
lret
inc
pop
jne
inc
mov
adc
inc
add
pop
movsl
push
call
gs
popa
xchg
mov
push
cmpsb
pop
rorb
movsl
jge
push
xchg
insb
enter
xor
mov
cmp
cmp
fdivrs
add
incl
and
hlt
adc
xchg
js
mov
xchg
test
aas
cmp
in
mov
pop
mov
lahf
into
and
fldl
cmpsb
sbb
pop
shlb
sti
and
adc
mov
mov
jge
loopne
in
es
mov
lcall
inc
inc
vmovaps
dec
xchg
or
dec
and
sahf
int
push
in
sub
jo
pop
scas
dec
iret
jae
and
add
imul
mov
pop
mov
jge
pop
test
cmc
xchg
adc
iret
xchg
inc
mov
mov
xor
and
push
jecxz
adc
ljmp
jle
ret
cmpsb
xchg
int
lahf
stc
call
push
idivb
out
inc
loope
cs
icebp
out
xchg
gs
mov
pop
insb
ja
pop
inc
lods
jge
out
xlat
jle
push
ffree
addl
imul
xchg
fimuls
cld
js
das
pop
std
adc
jge
jp
fwait
jbe
sub
pop
pushf
movl
repnz
push
imul
and
cs
sbbb
mov
lock
jbe
cmpsl
inc
dec
pop
mov
push
test
dec
leave
push
rol
pop
sbbb
and
ss
xchg
adc
mov
dec
xor
stc
lods
aas
add
push
dec
ljmp
scas
mov
lret
rcll
lock
divb
jno
pop
inc
add
mov
adc
xchg
sub
cmovl
es
sub
fistpll
es
dec
xor
pop
in
mov
cwtl
mov
aad
ds
xlat
cmp
mov
mov
lods
js
pop
incl
arpl
jae
sbb
add
lahf
or
add
fdiv
imul
add
rcl
loope
jmp
or
in
testl
ror
push
test
xchg
out
cmp
and
pop
dec
subb
push
popa
fmul
xchg
js
mov
mov
retw
in
mov
mov
xchg
push
cmpsl
sbb
pushf
cmpsb
icebp
aad
repz
add
mov
lahf
mov
push
push
mov
lds
test
add
add
pop
sbb
push
nop
ret
lock
in
insb
ret
outsl
jmp
mov
and
mov
jmp
sub
or
out
movsl
rcl
fiadds
movl
mov
pop
out
loopne
xchg
aas
cltd
aam
dec
mov
fldl
loopne
shlb
outsb
add
roll
dec
gs
addl
andl
pop
mov
push
xchg
mov
fcomp
outsl
fsub
rol
lret
orb
movsb
lods
mov
stc
push
cmp
xor
flds
dec
cmp
sub
cmp
stc
or
std
fcmovne
lock
add
bound
fsubrs
cmp
jecxz,pn
popf
insl
or
rcrb
mov
jecxz
stos
out
xchg
mov
or
dec
jbe
sbb
pusha
lea
push
notl
jg
movsb
pop
aad
push
mov
shlb
push
rcr
movsb
lea
xor
scas
cld
icebp
jmp
inc
test
lds
inc
inc
int
mov
mov
pop
push
enter
mov
add
je
push
lret
mov
fsubrs
outsb
loop
xor
cmp
popf
orl
ljmp
aad
jmp
mov
cmc
clc
lahf
shl
test
fdivrp
push
roll
pop
scas
popf
aad
cmp
lock
aam
int3
ret
cld
clc
int3
fidivs
nop
add
sub
jo
bound
hlt
loop
addl
lods
pop
jp
fsubrs
mov
push
mov
leave
ss
testl
lcall
adc
cmp
ret
lcall
xor
movsb
movsl
sub
inc
outsb
and
lods
adc
addr16
and
jge
inc
loopne
loope
sbb
insl
pop
xor
lods
inc
pop
pop
pusha
xchg
loope
inc
add
push
aaa
mov
mul
jnp
icebp
jle
js
sbb
mov
fildl
enter
stos
mov
or
fsub
js
push
xchg
dec
aam
lret
ret
jmp
jns
add
mov
rcl
push
js
enter
jns
scas
pop
std
dec
and
push
stc
lret
mov
test
loopne
sub
mov
fisubl
dec
mov
out
in
mov
shr
test
lds
scas
jp
cmp
dec
call
inc
push
push
fidivrs
rcr
mov
mov
pop
mov
add
popa
mov
clc
xchg
jmp
mov
je
movsb
jb
and
jae
jl
xchg
in
fwait
rorb
aaa
jp
mov
fwait
add
lret
addr16
xchg
cmp
mov
call
push
fidivl
cld
int3
into
loop
push
pop
cwtl
push
shlb
push
dec
dec
inc
stos
inc
out
test
lods
imul
sub
sbb
pop
ret
ja
cmp
repz
cltd
aam
pop
dec
dec
jl
les
sbb
pushf
negl
mov
sahf
jae
mov
imul
or
js
xorl
pop
imul
push
ja
out
dec
scas
hlt
fsubr
and
mov
pop
or
push
cmpsl
pop
and
and
jl
sbb
adc
pop
loopne
not
xchg
imul
or
addb
divb
mov
lods
mov
mov
test
cmp
test
pop
dec
pusha
out
or
xchg
mov
ja
and
or
lods
inc
cmpsl
stos
popa
dec
cmp
dec
and
scas
xor
or
je
imul
cmp
jne
mov
fcomps
pop
fistpll
or
dec
inc
mov
rorb
add
sbb
js
dec
or
adc
mov
sbb
and
jmp
cwtl
stc
cmp
jl
outsb
xor
ds
sbb
or
and
int
ret
mov
dec
cltd
cmp
stos
loopne
jmp
clc
xor
pop
and
sti
add
divl
cld
repnz
xchg
mov
jne
sub
imul
push
inc
and
out
mov
inc
fbld
scas
mull
jg
in
push
icebp
mov
test
aad
add
inc
dec
arpl
push
adc
add
int
push
scas
dec
and
ja
xor
push
adc
in
push
ja
lods
pop
daa
xor
arpl
xchg
aas
adcl
lret
aad
test
mov
push
lret
mov
pop
pop
in
sub
into
xor
inc
pop
jnp
in
sbb
imul
sbb
mov
insb
int
js
mov
stos
shrb
test
rcll
sbb
xor
mov
add
sbb
or
hlt
test
and
das
bound
mov
pop
sbbb
test
jge
lret
jle
or
push
and
test
inc
xor
data16
mov
cmpsl
mov
or
out
fincstp
jle
aad
mov
jecxz
mov
or
mov
aad
inc
jno
inc
mov
pop
mov
mov
or
inc
mov
cmp
test
push
mov
sbbl
or
add
mov
pusha
inc
popf
movsl
mov
add
popaw
pop
stos
daa
scas
arpl
ljmp
fnstenv
jge
popf
lcall
icebp
ja
push
mov
inc
jne
leave
lods
aam
and
cmp
push
daa
cmp
in
enter
push
inc
in
jne
mov
outsb
imul
flds
ss
loope
adc
or
push
in
loop
fsub
dec
lret
sub
test
sbb
adc
dec
xor
dec
ret
mov
stos
jg
mov
sbb
cmp
mov
mov
xchg
test
and
aaa
fisubrs
xchg
fistl
mov
mov
loopne
lods
mov
mov
mov
push
pop
nop
mov
inc
scas
popf
int
hlt
test
cld
scas
fimull
jmp
movsl
sahf
xor
push
icebp
adc
mov
dec
orl
pop
mov
adc
lods
in
cmc
lods
test
repz
repnz
mov
notb
sub
xor
adcl
int3
shll
jne
pop
cwtl
jge
daa
mov
ret
das
repz
and
xor
fmuls
sub
fwait
push
hlt
xor
mov
jae
test
ds
sbbb
insb
adc
dec
jle
sub
inc
fistpl
pop
test
aam
js
scas
ret
adc
fwait
pop
inc
nop
adc
imul
iret
xchg
out
push
movsl
in
xchg
mov
out
or
aas
cmpsl
pop
dec
mov
push
sub
orl
rorl
loop
es
sbb
push
dec
cmc
xchg
pop
aam
jnp
sbb
ficoml
ja
incb
movsl
cmp
dec
bound
das
pushf
jmp
orb
fs
jmp
and
test
incb
sbb
loop
sbb
lcall
mov
or
jae
xor
pop
mov
jle
inc
mov
and
lcall
jmp
in
out
jno
cmp
push
rcr
cmp
ljmp
and
mov
sti
or
inc
loopne
movsl
jp
outsb
ja
pop
cltd
or
or
out
cwtl
mov
fdivrs
xchg
aaa
mov
sub
sahf
leave
repz
fcom
testb
rcr
andl
xor
fbstp
or
pop
rclb
and
into
fs
xchg
movb
sub
inc
aaa
and
or
push
rcrb
xchg
idivb
pop
cmpsb
sbb
clc
cmp
xchg
or
sahf
aas
ss
inc
cli
aaa
cmpl
cs
add
mov
jmp
les
repnz
ret
ja
mov
jp
inc
mov
dec
mov
push
aam
mov
call
icebp
inc
lods
jb
fisttps
ret
xchg
lret
adc
stos
stos
js
and
dec
aas
idivl
incl
lcall
sub
jmp
xor
shrl
pop
xchg
lret
cmpsl
mov
sbb
jl
pop
sub
cwtl
adc
into
lret
jl
jmp
ja
xchg
cmp
movsl
lret
adc
mov
pusha
add
push
jae
popa
jnp
cmp
addr16
mov
outsb
fucomp
pop
cltd
cmp
mov
loopne
add
mov
js
fsubp
insl
popf
stc
in
repnz
nop
fsts
mov
loope
pop
out
bound
sti
shl
jmp
inc
dec
les
xchg
push
push
fwait
cmc
sub
push
addr16
loope
jp
data16
xchg
sub
xor
jl
jo
add
add
jg
mov
sbb
in
sbb
adc
sbb
movsl
arpl
push
adc
xor
cmpsl
int3
movsl
mov
mov
sahf
mov
imul
cwtl
es
fisubl
pop
pop
cmpsl
movsb
mov
jae
std
shrb
test
jp
mov
lea
mov
pushl
test
dec
cmp
test
shlb
mov
sub
mov
in
jmp
test
xchg
cli
shll
xor
mov
mov
fsubrl
fs
imul
bound
pop
stos
jns
iret
mov
cmp
loop
or
pop
dec
xchg
int3
push
orl
fnsave
jnp
imul
inc
push
mov
add
mov
dec
ja
mov
out
into
or
bndstx
mov
jno
ret
js
push
cmp
inc
loop
in
mov
dec
inc
cmp
sbb
or
jmp
hlt
aam
add
cmpsl
adc
xchg
add
out
jecxz
jne
dec
sub
adc
aam
sub
js
test
push
pushf
xlat
mov
push
sub
popf
aas
aaa
in
adc
in
fst
push
pop
inc
sbb
mov
mov
sub
sbb
adc
int
sub
arpl
mov
jns
sub
sub
popa
xchg
dec
insb
cs
in
cltd
cmp
outsb
jo
test
ds
jmp
sub
out
push
repz
pop
pop
push
mov
cmp
xor
dec
loope
pop
vpmaxub
push
sar
in
test
adc
pop
shll
outsb
nop
rolb
jne
leave
aam
je
push
dec
sub
sti
cs
add
loop
pop
cmp
test
add
ss
sahf
jmp
sbb
mov
arpl
mov
out
jcxz
mov
inc
adc
imul
jecxz
std
lods
lea
mov
scas
and
pop
mov
push
dec
mov
mov
xchg
mov
roll
jl
insl
push
adc
dec
mov
lcall
hlt
mov
and
inc
insb
adc
xor
jb
jno
push
movsl
adc
xor
push
jnp
inc
adc
adcl
iret
les
test
or
in
fs
adc
pop
xrelease
outsl
pop
xchg
repnz
outsl
ds
jbe
fucomp
mov
lea
xchg
add
adc
mov
fistl
mov
insl
jmp
pop
or
add
push
stos
pop
ljmp
pop
shrb
sbb
push
arpl
adcb
scas
fwait
xor
arpl
or
lret
dec
inc
into
mov
mov
xor
pusha
mov
dec
aaa
sbb
stos
out
dec
cmp
pusha
in
in
push
mov
aaa
cwtl
jno
cmp
cmc
ret
mov
cmp
lcall
scas
dec
add
or
xor
js
dec
cwtl
cmp
cmpsl
jp
loopne
ds
leave
cmpb
or
fnstcw
clc
pop
lcall
or
loop
and
and
adc
sub
sahf
dec
adc
clc
xchg
and
movsl
mov
cmp
mov
xor
dec
xor
mov
push
icebp
and
hlt
mov
lahf
adc
xor
lret
cmpsl
add
or
inc
xchg
cmp
and
ror
ret
pop
shrl
iret
shl
pop
xor
addl
test
mov
jmp
rorb
lret
stos
out
sub
ss
dec
nop
inc
mov
imul
gs
loopne
ret
mov
sub
sub
adc
dec
mov
pop
adc
stos
sbb
jbe
mov
dec
repz
or
sub
lock
adc
loope
xchg
icebp
out
xor
sbb
mov
daa
imul
test
dec
push
ss
out
jp
pop
cli
jbe
push
cmp
and
xlat
xorl
fwait
jecxz
cmpl
pop
and
mov
gs
dec
inc
jne
inc
cmp
test
shlb
push
stos
inc
dec
sti
xchg
sub
icebp
dec
and
or
sbb
sub
push
dec
test
mov
dec
data16
cmc
sub
rcrl
dec
xor
sbbl
push
mov
mov
jnp
mov
rorb
add
aam
pop
sbb
lcall
xlat
xor
mov
sbb
hlt
jp
push
enter
pop
cmp
roll
leave
out
xchg
push
adc
loop
lea
mov
stos
dec
cmp
xchg
cld
movsb
jo
jl
push
jae
sbb
cmp
popa
or
imul
adc
or
popw
jns
mov
out
lret
and
mov
das
dec
sub
aaa
lret
jmp
or
rorl
daa
je
inc
jmp
jle
ss
mov
icebp
lcall
jecxz
xchg
repz
xchg
sbb
xlat
push
stc
xchg
test
cmp
dec
jo
lods
xchg
inc
rcrl
jl
decb
xor
push
xor
cmp
dec
ds
and
jns
add
inc
add
jmp
scas
fdivs
popa
rolb
arpl
or
test
mov
cmp
mov
cmp
mov
rcll
dec
addl
clc
adc
sbb
pop
push
xchg
dec
pop
xor
sar
shr
sub
int3
jns
or
popf
mov
push
mov
xor
push
add
mov
jge
push
xchg
mov
lods
stc
subl
fmulp
lods
shll
and
mov
sbb
mov
mov
gs
sbb
insl
and
xlat
mov
inc
or
mov
rcrl
ds
jp
int3
xchg
jecxz
dec
sbb
push
xor
and
sub
xorl
les
or
cltd
mov
fadds
add
mov
push
repz
xorb
and
jl
push
das
cmp
stos
fbld
das
stc
cmp
rol
add
pusha
or
mov
cld
je
out
and
jns
mov
push
movsl
clc
add
mov
push
pop
lock
scas
or
mov
pop
xlat
pop
push
adc
call
sub
imul
mov
int
js
xor
dec
pop
mov
icebp
sbb
arpl
mov
push
movsb
sub
jl
jmp
xchg
fwait
dec
sub
xor
sahf
rorb
xchg
xchg
loopne
push
les
call
push
enter
in
add
mov
mov
sbb
add
xor
sub
mov
inc
mov
jnp
mov
inc
sahf
rcll
pop
popa
scas
push
jecxz
out
sub
ja
mov
lea
sub
clc
inc
mulb
adc
push
outsb
popf
xor
sbb
test
test
out
jecxz
pop
xchg
js
popa
adc
sbb
icebp
mov
inc
adc
pop
mov
stos
adcl
sub
or
dec
aam
push
hlt
sub
cmp
cmove
mov
xchg
fs
push
cmp
jmp
fiadds
push
stos
nop
sbb
mov
imul
mov
dec
dec
lock
popa
gs
or
xor
inc
xchg
roll
insl
nop
add
xor
or
cmpsb
mov
cmp
int3
push
inc
pop
gs
js
lret
mov
movsl
cltd
mov
pop
xchg
movsl
dec
fwait
add
push
jl
add
xlat
fcmovnbe
loop
neg
xor
mov
mov
shll
fsubs
fldt
jbe
mov
pop
roll
sbb
and
jp
sbb
adc
jmp
and
push
mov
push
cmp
pop
xor
ret
pop
inc
stc
mov
sahf
insb
bound
push
mov
dec
push
lahf
push
gs
inc
or
jo
nop
mov
ljmp
out
movsbl
jp
out
xchg
js
int
inc
xchg
ja
push
lock
mov
pop
or
mov
out
cwtl
cmp
idivb
into
loopne
push
sbb
xchg
loope
and
test
clc
inc
in
data16
addl
rolb
or
or
xor
cmc
and
pop
je
adc
lods
push
sbbb
sub
out
clc
xchg
push
cmc
pop
xlat
cmpxchg
cmovl
mov
nop
and
mov
adc
jecxz
mov
inc
xchg
pushf
push
andb
sbb
push
daa
outsl
cmp
out
cmp
push
cld
push
cmp
fbstp
add
je
mov
mov
pusha
aad
or
inc
xor
out
cmp
cmp
sub
inc
jae
sbb
int3
fisubrl
jb
mov
pop
clc
and
daa
shlb
pusha
cmp
adc
adcb
addb
daa
xchg
or
cs
xchg
mov
mov
pop
dec
dec
xchg
inc
dec
inc
js
inc
int3
add
and
test
lods
imul
pop
in
xor
sbb
movsl
xor
addl
mov
sub
push
dec
faddp
cmc
iret
movsb
push
xlat
in
cld
icebp
or
icebp
push
or
verw
lock
out
pusha
adc
mov
dec
in
push
dec
mov
lret
sbb
mov
or
std
and
jnp
scas
sbb
test
rcll
lret
push
jp
mov
out
jns
and
cmp
pop
jne
cmp
std
adc
adc
mov
jg
sbb
mov
pusha
popa
test
ds
in
jbe
xchg
xchg
shrl
mov
xchg
jbe
dec
dec
clc
leave
cmp
mov
int
sub
or
cltd
ds
data16
rol
mov
and
clc
repz
mov
pop
lea
mov
sub
out
ja
adc
add
rdmsr
xor
and
movsl
rcll
out
jo
pusha
cltd
cmp
jmp
int3
jle
mov
inc
ss
push
mov
inc
addr16
mov
dec
jecxz
mov
leave
mov
pop
push
xchg
out
push
cmp
cmp
test
jl
outsb
addr16
clc
imul
push
sahf
lcall
sub
dec
push
sub
idiv
movb
cmp
pop
mov
sahf
mov
js
inc
xchg
test
inc
cmpsl
cmp
xor
pop
inc
dec
fnstenv
lahf
mov
inc
mov
lods
mov
or
mov
std
mov
aas
mov
and
jne
mov
int3
rcr
add
xor
push
add
mov
int3
jbe
jno
scas
mov
mov
sbb
aam
jnp
push
ret
jae
pop
xchg
mov
call
xlat
add
fsub
and
daa
jecxz
or
lret
popf
shrb
xchg
hlt
imul
mov
daa
lock
negl
cs
cmp
ljmp
cltd
loopne
ljmp
fiaddl
rcll
mov
mov
js
addl
jmp
adc
idivl
adc
stos
sbb
out
imul
loop
lahf
ficoml
outsl
adc
sbb
jnp
add
or
cld
call
in
adc
jmp
pushl
dec
pop
push
inc
dec
imul
daa
cld
pushf
in
fwait
das
jae
iret
fs
mov
or
mov
pop
ret
jl
insl
cwtl
iret
adc
sub
test
cmpsl
sub
cs
stc
mov
arpl
sbbl
push
mov
scas
and
arpl
adc
adc
iret
cmp
int
scas
sbb
popa
mov
cmpsb
fiaddl
xchg
testl
pop
adcb
test
stc
pop
nop
out
jmp
mov
test
pop
rcpps
mov
mov
in
cmpsl
push
xor
shll
lahf
dec
adc
out
sbbb
jg
dec
jl
xor
mov
pushf
pop
sarb
push
daa
lods
out
mov
arpl
sbb
pop
jbe
rorl
push
and
xchg
and
push
dec
nop
movsb
push
mov
scas
hlt
std
adc
and
dec
or
repnz
je
movsl
xorb
adc
outsl
nop
es
test
nop
mov
or
out
mov
mov
add
add
shlb
in
pop
mov
das
pop
sub
cwtl
push
lods
pop
inc
lods
cmp
cltd
adcb
jl
mov
in
pop
mov
outsl
jno
mov
or
xchg
movl
push
icebp
outsl
jp
das
dec
push
dec
adc
xor
sbbb
lcall
das
aam
xor
sbb
out
add
fwait
mov
test
int3
sti
jae
enter
push
dec
cmp
push
mov
bound
cmc
les
scas
mov
xchg
add
popa
clc
push
pop
loopne
jg
shlb
sbb
adc
xchg
rcl
imul
xchg
lahf
insl
loop
pop
or
mov
mov
sub
lods
ljmp
das
sub
in
fadd
pop
pop
push
mov
stos
and
test
dec
dec
je
xor
sbb
sub
xor
mov
or
rcrb
jp
ja
sub
xlat
sub
pushf
pop
jge
inc
mov
xchg
lahf
cmp
iret
inc
stos
push
mov
roll
mov
mov
inc
cmpsb
loopne
jp
inc
rorb
lret
fistl
ret
pusha
mov
and
test
pop
gs
fcoml
out
es
push
dec
shll
sub
cmp
js
cld
mov
fldcw
popf
aad
cvtpd2ps
and
mov
in
pop
sbb
cmp
loopne
pop
and
push
add
or
daa
mov
faddl
dec
fbld
push
repnz
jae
lea
xor
cld
lods
add
dec
xlat
addr16
dec
jno
out
arpl
or
xchg
xchg
ljmp
push
hlt
lock
push
dec
dec
psubd
sub
fcmovu
ret
sub
or
xor
pop
mov
mov
cmp
or
ljmp
jl
pop
fdivrl
add
shlb
in
adc
out
cmp
pushf
fwait
jmp
fndisi(8087
mov
inc
scas
cmp
fnstenv
mov
jbe
sub
sub
nop
sub
loope
sbb
cmp
mov
aas
adc
and
iret
or
pop
jb
sub
test
xchg
cmp
popa
loopne
fisttpl
arpl
jecxz
cmc
jp
mov
lcall
call
scas
stos
lock
jbe
adcb
xchg
xchg
enter
inc
int3
cmp
stos
subb
push
inc
fsubrl
or
shll
repz
ss
cmp
das
mov
ret
fmuls
in
inc
aas
incb
fsts
push
mov
jp
lahf
cmp
jb
cmpsl
push
int3
pop
jnp
sahf
pop
rcr
loop
adc
movsl
jnp
les
lods
pop
addr16
aaa
movsl
or
add
cmp
adc
inc
jg
mov
and
frstor
xchg
adc
mov
arpl
sub
rorb
xlat
or
in
adc
sar
pop
out
jno
fiaddl
or
addl
arpl
repz
icebp
inc
and
mov
mov
ds
in
fld
add
push
jb
cmp
addr16
mov
addr16
sub
pop
pop
mov
cmpsl
push
sbb
nop
out
nop
jns
mov
push
or
jb
pop
mov
dec
outsl
cmp
rorl
mov
mov
incl
or
es
subl
inc
popa
lahf
fldenv
jle
inc
dec
push
push
mov
mov
scas
mov
xor
xchg
jae
fwait
orb
imul
test
or
cltd
mov
push
adc
outsb
push
cmp
stos
mov
sbb
pop
test
and
and
jge
add
sar
mov
cmp
adc
es
in
xchg
call
aam
mov
ret
cmp
push
cmpsb
mov
mov
xorl
ss
in
inc
xchg
stos
mov
call
pop
push
negl
xor
lods
dec
mov
in
fisttps
pop
enter
jns
jle
pusha
or
pop
shrb
hlt
sub
cmp
aas
sub
mov
push
sbb
sub
adc
sbb
sub
inc
push
inc
imul
adc
nop
add
popf
dec
inc
xor
dec
aad
cs
mov
dec
outsb
idivl
sub
scas
xchg
xorb
popf
ficoml
mov
dec
pop
push
cmp
mov
xor
gs
fldcw
scas
push
xchg
bound
add
mov
xor
adc
fcmovb
mov
mov
inc
scas
xchg
cltd
jge
push
shrb
dec
push
sbb
stos
movsb
or
push
mov
iret
jmp
inc
addr16
ret
jmp
jg
sub
mov
int3
shr
ljmp
js
push
sub
dec
xor
add
shl
or
xor
jl
adcl
fwait
shld
jmp
xchg
jno
int
and
decl
push
fisttpl
dec
sbb
push
xchg
or
mov
shrl
call
sbb
pop
cwtl
push
bound
xor
test
sbb
and
es
dec
mov
jp
out
repnz
sub
test
add
mov
add
movsl
popa
je
pusha
std
repz
cmpsb
sbb
mov
sbb
testl
enter
pop
sub
sarl
jae
or
jmp
loope
xor
pop
add
push
dec
or
addr16
xchg
xor
mov
daa
or
out
adc
push
enter
fs
jb
inc
pop
inc
lock
adc
fbld
aam
out
mov
test
sahf
insl
dec
push
imulb
jb
out
mov
jae
push
ja
push
insb
outsb
cmp
popf
das
outsb
xchg
mov
adc
pop
arpl
das
jecxz
aaa
ret
pop
mov
loop
xchg
cmp
ljmp
fdivl
movsl
xlat
cmp
sbb
cmpsl
sub
inc
loop
loop
into
dec
xchg
stc
imul
xor
cld
jl
shl
inc
or
push
lahf
andl
out
es
mov
adc
mov
mov
mov
cwtl
lea
or
negb
mov
flds
lret
mov
adc
popf
inc
adc
rdtsc
adc
test
cli
lcall
repz
and
cmc
push
jmp
inc
ja
ss
addr16
iret
pop
pavgw
jns
adc
push
stc
pop
dec
rep
les
pop
mov
lahf
test
insl
lret
jne
pop
mov
inc
mov
in
int
sub
inc
push
and
pop
rcll
add
or
imul
and
std
das
fistpll
mov
out
stos
inc
xrelease
sub
cmp
dec
mov
xor
sub
jg
inc
fs
sub
bound
or
or
ret
adc
dec
cs
test
ficoms
sahf
cs
mov
sub
lahf
mov
mov
ds
insb
fwait
sub
add
popa
xchg
inc
mov
subl
int3
jmp
pop
hlt
fldenv
out
mov
je
iret
in
jmp
inc
je
in
lret
add
shrb
jp
sbb
js
fwait
mov
call
xchg
xchg
xchg
or
stos
in
pop
pop
jnp
xor
jl
repnz
jns
popf
push
push
repnz
ds
scas
push
ds
loop
mov
xor
int3
shlb
ss
mov
ret
movsl
pop
ljmp
imul
addb
inc
decl
xchg
push
mov
jecxz
adc
jbe
mov
add
jp
inc
loop
pushf
pop
daa
adc
dec
mov
movsb
mov
or
cli
stc
push
push
push
int
aaa
cmpsl
out
iret
mov
cmpsl
pop
and
mov
ds
repz
inc
sbb
rorb
ss
ss
daa
lret
xorb
scas
cld
shll
sub
mov
ds
shl
cmp
clc
rcr
out
shlb
add
out
push
and
clc
sub
adc
cmp
cwtl
stos
dec
test
mov
pushf
jno
lea
in
js
dec
cmpsb
scas
push
xor
int3
jo
mov
and
dec
mov
dec
popf
js
icebp
lret
sahf
inc
sub
xor
outsl
pop
mov
into
push
sub
rclb
push
mov
out
test
frstor
icebp
in
scas
ret
dec
adc
sarl
add
mov
jmp
push
ss
push
faddp
testb
push
xchg
sti
out
push
or
bound
data16
addl
aad
inc
mov
cmp
jg
rorl
xchg
or
scas
add
cmp
push
jbe
sarb
sbb
sub
mov
or
jb
xchg
dec
or
mov
lea
stos
mov
push
push
cld
cltd
mov
xor
loop
and
or
fiaddl
sub
mov
sti
sbb
mov
or
leave
insb
bound
pop
mov
aaa
sbb
jle
mov
ds
iret
or
jg
je
shrb
leave
shr
lret
lods
pop
fisubrl
ljmp
pop
mov
pop
pop
push
addl
pop
inc
pop
fwait
xchg
es
aas
stos
dec
mov
xchg
mov
inc
jmp
xor
mov
sub
lret
in
pop
cmp
loopne
push
pop
jbe
add
jo
sub
inc
lods
cwtl
repz
in
sbb
fs
push
imul
test
and
call
shrb
mov
ss
cmp
jb
daa
dec
jmp
dec
pop
inc
int
xchg
fisubl
push
test
in
in
mov
pop
call
movsb
sbb
sub
pushf
stos
fldt
sahf
xchg
mov
fbstp
ljmp
xchg
push
jbe
pop
in
and
pop
sbb
ja
ss
lcall
cld
insl
mov
push
xchg
cmpsb
mov
xchg
dec
mov
pop
jb
dec
cmp
xchg
and
sub
cmp
lds
dec
bnd
or
loop
mov
xchg
pop
pop
lods
rcll
jo
in
scas
lcall
leave
mov
divb
push
je
push
fistpll
cld
fwait
jp
mov
dec
leave
pop
push
sbb
shl
pop
std
lods
cld
jb
push
into
aaa
and
pop
mov
aaa
pop
es
call
pop
fldt
inc
aaa
in
icebp
mov
testb
lods
sub
or
sti
inc
pop
lret
sub
outsb
shl
mov
inc
mov
inc
jo
mov
push
stos
stos
mov
test
mov
aas
push
cmc
inc
fdivs
pop
test
repz
repz
out
add
enter
push
mov
lods
mov
lea
or
js
jns
imul
cmp
fnsave
push
std
fsts
push
sbb
arpl
out
aad
call
lret
mov
testb
loope
push
rcll
imul
je
test
ss
or
sti
fcoml
dec
lock
bound
mov
xor
shll
mov
push
push
push
icebp
cwtl
dec
mov
cmp
clc
sbb
sbb
outsl
xor
rcl
pop
mov
cli
in
aas
popa
add
sti
and
inc
xor
push
adc
sbb
push
jo
inc
push
inc
mov
rolb
test
lcall
pop
fcomi
popa
mov
jae,pt
das
lret
jns
cs
int
xor
xor
popf
outsl
jge
sub
lods
in
adc
stc
sti
or
mov
in
ret
enter
inc
jns
std
out
insb
pop
outsl
add
mov
cld
out
in
push
or
data16
mov
stc
cli
loope
nop
jae
jmp
cmc
push
les
aam
std
test
out
mov
aas
ss
fs
jnp
es
ss
inc
push
clc
lds
insl
add
cltd
jb
mov
push
shr
mov
jns
add
ljmp
in
cmpsb
sti
fwait
movsb
or
mov
cmp
dec
push
fsubrl
orl
xor
lret
jne
sbb
ret
fcmovnu
inc
sub
adc
insb
fadds
and
mov
shll
aam
sbb
lcall
pusha
idiv
scas
pop
js
leave
cmpsb
repnz
xchg
xchg
lods
and
mov
stos
loope
xor
push
push
sbb
icebp
mov
and
push
jae
pop
test
pop
adc
dec
jle
aas
outsb
hlt
mov
mov
dec
call
iret
repnz
mov
sahf
scas
mov
pop
movsb
scas
dec
push
pop
adc
sub
aas
inc
fwait
cmp
and
imul
xchg
sub
sahf
jne
sub
and
aad
int3
add
jae
rcrb
fidivs
out
adc
mov
fmul
push
jge
test
rorb
ret
jecxz
mov
mov
dec
pop
pusha
inc
dec
aam
or
cld
outsb
jecxz
mov
cs
xchg
sbb
pop
pushf
lock
jle
adc
lods
push
outsl
fsubrl
add
fiaddl
out
push
jp
pushl
push
into
fs
or
sbb
pop
call
pushf
icebp
xchg
cwtl
repnz
sub
pop
sub
mov
sub
dec
adcl
xchg
push
jmp
inc
enter
pop
sti
ljmp
mov
test
ds
xor
imul
jbe
mov
or
cwtl
divb
popf
inc
mov
lahf
xor
dec
mov
mov
xchg
andl
loopne
cmp
sub
std
inc
dec
movsl
push
pop
clc
das
jg
decl
leave
push
iret
cli
test
sbb
pop
in
sbbl
xchg
fimull
dec
xor
in
or
push
jae
mov
shr
dec
push
push
test
rclb
cmp
ret
mov
idivl
jb
mov
shl
inc
lea
pop
pop
or
stos
aaa
cmc
cwtl
incb
or
cmp
in
jns
mov
push
sbb
and
and
or
loope
pusha
cs
inc
pop
int
mov
movsb
mov
test
popf
or
sti
inc
inc
lcall
adc
mov
cmp
xchg
in
std
adcl
push
dec
jb
or
cmp
and
inc
xor
pop
shll
xor
lods
les
ja
cmp
popf
add
leave
inc
call
shlb
shll
shrb
xchg
cmpsl
dec
sbb
xor
add
nop
das
lahf
lds
shl
test
or
int
inc
adc
dec
popf
inc
adc
andps
int3
mov
adc
adc
xchg
push
mov
pop
leave
add
shll
and
push
or
jle,pt
bound
syscall
sti
fdivrs
int3
cs
sahf
add
jnp
sbb
ret
push
jns
inc
sub
mov
in
jp
xchg
dec
jnp
push
popf
je
push
cwtl
adc
fisubl
aam
mov
jecxz
or
in
mov
jl
adc
xchg
repz
loope
jl
outsb
mov
push
mov
sbbl
data16
out
test
lret
xchg
dec
mov
sbb
xor
into
fsubrp
repz
push
inc
into
xchg
test
dec
imul
mov
lock
out
cwtl
push
mov
inc
arpl
add
pop
jle
mov
lret
add
or
adc
jl
jne
add
mov
inc
jbe
push
xor
push
push
dec
cltd
fcomp
gs
xchg
adcl
cmp
and
out
pop
mov
cmp
movsl
cmc
mov
push
dec
aad
jecxz
out
jns
lods
daa
sub
or
test
pop
lret
push
jnp
jecxz
xchg
outsb
sub
dec
mov
movsl
mov
in
cmpsl
adc
adc
sysexit
shll
cmp
xchg
mov
ret
jl
dec
fildll
in
xor
xchg
clc
jo
push
mov
jae
dec
adc
repz
cld
adc
in
clc
mov
dec
mov
sub
lahf
sub
and
test
adc
or
xlat
jle
movsl
xchg
jb
rclb
fiaddl
popa
pop
pop
cld
aas
jge
test
test
xchg
outsl
notl
sbb
xor
mov
outsb
lods
mov
insl
dec
add
insb
jecxz
int3
js
lcall
popa
arpl
test
loope
xor
sub
out
ds
shll
mov
rorl
loop
push
lret
or
sarb
sub
lahf
cmp
fstps
add
hlt
jne
data16
test
in
mov
jno
testb
mov
insb
pop
mov
shlb
push
cmp
scas
sub
xor
xchg
dec
jle
mov
dec
lds
mov
adc
dec
daa
dec
push
mov
inc
push
cli
movsl
mov
stos
jl
in
inc
scas
ljmp
mov
pop
enter
loopne
and
mov
out
std
popf
xor
sbb
cmp
jg
icebp
pusha
aad
shll
roll
add
nop
push
dec
sbbb
and
fsubs
negb
scas
test
mov
fimull
imull
rcrb
in
lahf
or
js
jae
lods
push
push
jle
mov
cmp
pushf
cs
push
sbb
pop
ds
and
jle
mov
pushf
pop
sti
inc
sbb
or
pop
mov
inc
sbb
popf
maxps
sub
adc
adc
es
jle
adc
add
adc
repnz
sti
inc
ljmp
cmp
inc
dec
aas
cmp
sub
test
mov
dec
xchg
test
mov
jbe
mov
int
inc
sahf
xchg
ljmp
fildl
ret
and
inc
inc
in
cmp
cmp
ret
jae
data16
push
and
jecxz
stc
dec
sub
lret
pop
aad
cltd
mov
test
js
mul
adc
icebp
mov
pop
jl
cmpsl
std
shrb
fistps
jne
fimuls
loope
pop
jp
shr
xor
mov
pushf
mov
fistpl
clc
movsl
in
xor
arpl
cmp
ret
dec
add
add
push
inc
or
xor
jne
pop
imul
and
lods
lds
movsb
in
push
and
pop
repnz
jnp
repz
imul
jae
mov
popf
or
fucomp
loop
bound
xor
in
idivl
dec
xor
cltd
or
rorl
sahf
in
jnp
xor
std
sub
dec
cli
pop
xor
mov
int3
pop
cmp
addr16
adc
xor
sbb
jecxz
cmp
add
push
pop
push
scas
cmp
mov
inc
xlat
and
scas
fwait
or
in
outsb
pop
sar
push
dec
test
push
repz
les
mov
jecxz
xchg
jmp
cmp
in
lret
test
and
movsl
ret
loope
lods
leave
repnz
pop
push
adc
aas
jb
pusha
mov
dec
rol
sti
cmp
in
push
mov
out
sub
daa
mov
iret
mov
cs
cmc
or
repnz
jl
cmc
aas
add
das
fs
cmp
cmpl
aam
aaa
adc
rorb
arpl
or
pop
lds
inc
outsl
push
jbe
inc
test
xor
in
ficoms
dec
or
int
sbb
lcall
dec
call
js
pop
ss
sbb
iret
imul
sub
xchg
mov
hlt
bnd
cmp
add
mov
sbb
cmpl
cli
jae
or
inc
je
add
ret
xlat
out
xchg
lahf
sub
sbb
aam
or
int
or
xlat
cmpsb
dec
and
mov
aad
mov
sub
adc
pop
xchg
outsl
es
mov
jne
scas
imul
or
jmp
lea
pop
xor
lds
mov
xchg
xor
adc
roll
imul
lea
clc
ror
or
mov
scas
cmp
pop
xchg
push
test
cmp
fldl
dec
fmull
sub
lret
scas
inc
pop
cltd
sub
shl
push
loopne
mov
push
das
or
hlt
fimull
loop
ljmp
movsb
lret
cltd
rol
push
andl
sbb
inc
jle
jae
idivb
aam
das
mov
mov
lods
adc
sahf
push
cmp
push
fimull
adc
outsb
lods
test
xor
in
ret
push
cmpl
xchg
push
cli
adc
xchg
andb
mov
cmpsl
sub
xchg
inc
xor
mov
add
notl
bound
mov
leave
rsm
mov
bound
fwait
imul
inc
inc
mov
jge
xor
xchg
and
push
xor
jae
mov
lea
jmp
js
loope
negl
bound
jns
test
or
scas
insl
sub
mov
mov
movsb
push
shrl
sub
mov
mov
cld
or
icebp
inc
jns
outsl
jge
dec
mov
lds
out
fisubrl
inc
pushf
cmp
xor
pushf
jl
int3
and
mov
xchg
rorl
out
xchg
push
xor
xor
adc
push
mov
jne
loopne
cwtl
xor
or
mov
add
adc
imul
add
xor
add
add
rcrb
and
or
call
inc
cwtl
mov
loopne
mov
mulb
pop
xchg
push
jmp
xchg
imul
inc
in
nop
mov
mov
mov
scas
loop
and
adc
lea
sti
pop
imul
out
jg
pop
dec
pushf
out
xor
push
mov
rorb
push
movsb
fiaddl
movsl
mov
lahf
jno
cmp
sub
dec
lret
nop
or
pop
fildll
sub
out
rorb
into
sbb
outsl
xor
and
leave
popf
push
cmp
mov
xchg
pop
mov
or
jbe
stc
lret
dec
popf
call
cld
push
ds
icebp
popf
popa
call
xchg
enter
test
pop
int
shll
ror
rcl
mov
aas
out
test
lcall
enter
dec
adc
es
rol
ljmp
cmc
lret
xor
pop
int
lcall
adc
dec
and
pop
xchg
andl
push
jmp
in
shl
xchg
mov
mov
imul
mov
adc
aas
vxorpd
test
dec
pop
push
faddl
push
dec
pusha
mov
pcmpgtw
inc
lods
imul
dec
xchg
testl
or
push
out
or
les
fwait
mov
inc
ret
lret
arpl
andps
fimull
rolb
mov
pop
jns
adc
jbe
out
fidivs
xchg
imul
iret
cmpsl
and
mov
adcl
cmp
das
jl
inc
flds
stos
cs
xor
push
xchg
aad
lret
fisubrl
cmp
idivb
inc
neg
sti
sarl
sbb
mov
insl
xlat
int3
repnz
jo
or
push
nop
bnd
mov
fisubrs
pop
push
mov
ljmp
mov
pop
push
jnp
xor
lcall
clc
push
push
int3
jns
sti
jmp
mov
sbb
les
mov
test
sub
xchg
cld
adc
das
and
sub
jns
fwait
xchg
into
js
es
inc
test
in
in
or
gs
int3
lods
cmp
sbb
or
push
or
mov
sti
mov
mov
shl
es
iret
sti
sub
jle
bswap
incb
push
jno
xchg
in
jne
xchg
insb
xchg
fcmovbe
jl
fdivs
add
mov
dec
inc
xor
rorb
inc
inc
lret
and
rcr
jnp
repz
je
mov
orb
xor
fldcw
xor
insb
jnp
lock
push
xor
and
and
pop
and
fadds
mov
cltd
sbb
repnz
nop
repz
aam
call
lods
mov
xchg
nop
mov
dec
insl
and
icebp
loop
or
pushf
test
aam
mov
sub
sti
fadds
sbb
test
aad
mov
sub
movsl
push
gs
xlat
sub
pop
pop
sub
stos
dec
loope
lcall
xor
jp
clc
into
and
pop
pusha
xor
stos
xchg
loope
push
adc
push
imul
cmp
imul
inc
jg
popf
ss
pop
add
sahf
xor
out
push
sbb
jbe
repnz
rorb
xor
xor
and
xchg
xlat
rcl
sbb
std
xchg
iret
inc
push
push
pusha
push
out
xchg
stos
enter
outsl
or
daa
sbb
insl
jge
in
loopne
in
jnp
push
aaa
push
dec
les
or
mov
push
jle
clc
or
mov
cltd
orl
push
arpl
ds
pusha
ja
mov
adc
cmp
xor
adc
loop
xchg
insl
jmp
dec
hlt
std
xchg
out
aas
daa
push
ret
pop
jmp
cmp
inc
aaa
push
fcomps
scas
movsl
pop
push
in
xchg
sub
lahf
and
and
sub
or
gs
scas
lahf
int3
xchg
cs
mulb
push
clc
mov
je
jle
ficoms
push
xor
loopne
pusha
cmp
sbb
fldz
loop
xor
jecxz
mov
ljmp
bound
loopne
icebp
cmp
or
andb
adc
jns
dec
sub
stos
imul
pop
xor
subl
out
jbe
add
shll
lock
out
mov
inc
jp
or
mov
fstpt
xchg
xor
out
and
orl
mov
inc
mov
lds
push
sub
lods
dec
xchg
sahf
adc
sbb
or
stc
and
ss
jns
das
add
subl
push
notb
xor
in
mov
jecxz
insl
dec
lret
repnz
fiaddl
jb
and
cmpsb
into
mov
xchg
xor
test
movsb
das
enter
fwait
js
and
xchg
pop
mov
movsb
mov
adc
cmc
sub
dec
mov
xlat
mov
xchg
mov
xor
ds
xorl
add
and
lcall
fstpl
or
mov
call
aad
std
aad
mov
jno
dec
mov
cmp
or
bound
mov
jle
pop
aad
das
and
fiaddl
jl
test
mov
repz
add
mov
shrl
mov
xor
push
sub
adc
mov
push
cmp
les
ror
loop
andb
mov
ja
xor
movsb
sub
cwtl
jl
ret
jecxz
in
lods
and
scas
lcall
loop
mov
push
sbb
mov
insb
mov
xchg
mov
push
in
mov
cmp
and
adc
jnp
mov
shrb
insl
je
mov
cs
enter
insb
dec
clc
repnz
pop
inc
lods
push
outsl
pop
stc
mov
pop
jmp
xor
mov
add
cltd
out
loopne
adc
jle
xchg
imul
sub
iret
movsb
mov
leave
rcl
sbb
popa
cmp
or
lock
ret
loope
push
xor
mov
sti
inc
mov
sbb
sbb
or
xchg
cmp
sbb
loope
daa
push
dec
fwait
mov
cmp
ret
mov
cmpsb
jp
fcmovbe
xor
mov
and
fsubrs
les
xchg
out
dec
lods
mov
cltd
xor
outsb
jmp
mov
fwait
adcl
out
and
or
xor
dec
adc
and
sbb
lret
push
inc
sti
ljmp
cmpsb
mov
adc
mov
hlt
pop
out
xor
aad
push
loop
addr16
mov
arpl
adc
lret
inc
sub
arpl
scas
push
push
stos
or
aas
mov
fadds
jg
fisttpll
inc
dec
pop
sub
shrb
leave
ja
pushl
iret
cs
dec
dec
mov
adc
inc
insb
loope
out
fstl
stc
dec
cmpsb
sbb
push
lret
push
lods
add
std
jnp
sub
dec
xorl
adc
testb
sbb
adc
xor
jbe
jl
icebp
sub
ret
mov
and
mov
out
mov
mov
adc
movsb
stos
or
xor
mov
iret
push
push
enter
aaa
and
into
push
cmp
lret
push
jle
dec
sbb
loopne
sbb
int3
mov
popa
pop
fpatan
mov
dec
push
push
add
int
or
icebp
cmc
not
sbb
in
sbb
dec
loopne
dec
jns
inc
mov
aas
lods
cmp
sub
pop
ret
rclb
jecxz
dec
mov
leave
mov
cmpb
push
pop
cmc
int3
push
and
and
aas
out
js
out
push
or
and
lret
or
sub
subb
cmp
mov
loop
rolb
sub
mov
push
les
xchg
data16
adc
pop
cli
xor
js
cmp
ss
je
sub
out
sub
shr
addb
mov
std
loopne
mov
xor
jge
cwtl
inc
sub
shlb
adc
adc
leave
ss
mov
ljmp
sti
xchg
xor
shr
fs
dec
ret
xlat
mov
out
xchg
xor
rorl
iret
cld
fwait
jno
push
adc
mov
dec
jle
out
scas
popf
and
xchg
cli
lret
mov
sbb
and
mov
lds
and
cs
and
inc
aad
ret
test
leave
fidivs
or
repnz
dec
std
cmp
push
incl
fs
and
add
icebp
adc
repz
or
jbe
sub
sub
fadds
je
outsb
cli
cmp
pop
push
ss
cltd
dec
mov
lds
ret
pop
inc
xchg
dec
test
iret
fs
push
add
and
sbb
fsubp
xor
aaa
ss
xor
imul
frstor
add
lods
dec
bound
xchg
out
lea
adc
addr16
movsb
push
jnp
pusha
xchg
out
stos
add
in
int
popa
fiadds
mov
jne
ss
cmp
negl
xchg
mov
push
fidivrs
sub
xchg
enter
sbb
mov
or
movsl
fisttpll
mov
adc
cli
ljmp
inc
cmp
bound
push
lds
jg
sbb
push
enter
test
jne
cmpsl
std
mov
lret
lcall
imul
jl
ret
std
lods
cmp
shl
sbb
push
jmp
imul
or
pop
pop
stc
add
adc
out
daa
jns
dec
pop
add
je
clc
repz
cmp
push
popa
in
imul
push
lods
sub
push
push
sarb
xchg
xchg
stc
int
mov
mov
dec
lock
jle
and
repz
pop
insb
pop
push
daa
jmp
int3
inc
adc
out
testl
test
cmp
shlb
andb
fdivrl
push
sahf
or
addb
lss
dec
sub
cs
jle
xor
xorl
adc
inc
out
add
and
fwait
pop
loopne
cld
mov
pop
adc
push
ret
or
mov
into
movsb
inc
stc
push
push
sbb
gs
shrb
mov
jle
sbb
ret
in
orl
testl
sub
hlt
push
push
fisttps
sbb
int3
mov
adc
add
xchg
aas
xor
push
neg
mov
cmp
push
fs
fs
push
mov
dec
mov
test
cmpsb
cld
je
xor
sbb
lcall
stc
das
pop
xchg
mov
mov
and
mov
mov
das
int
insb
mull
mov
add
add
jg
imul
lods
rcll
mov
dec
hlt
push
jb
shl
push
mov
psubq
in
andb
lahf
mov
int3
cld
cmp
adc
and
jg
fidivs
ja
and
sbb
inc
mov
lahf
insl
jo
dec
xchg
daa
xchg
stos
dec
push
ds
add
jae
xor
or
push
jo
and
jne
cld
sti
add
scas
sub
cmpsb
mov
jb
jno
xchg
icebp
cmpsb
sub
xlat
cmc
hlt
cmp
in
imull
inc
pop
sbb
xor
cwtl
unpckhps
repnz
ficomps
or
outsl
lret
fwait
cmp
enter
out
fwait
pop
and
arpl
jmp
mov
adc
fnstcw
sti
push
mov
mov
sub
aam
cmp
adc
stc
sub
sbb
jbe
fstl
hlt
push
sti
sub
xchg
or
popl
inc
out
inc
mov
and
pop
sub
in
or
aaa
lea
stc
outsl
aad
cmpsl
and
cld
jne
sbb
add
mov
cmc
mov
adc
dec
cmpsl
xor
sti
fimull
addr16
add
pop
dec
call
das
cmp
imul
nop
xor
test
mov
pop
mov
fstps
inc
shlb
icebp
pop
mov
hlt
repz
mov
ret
shrl
pushf
mov
cli
jl
les
push
movsl
imull
dec
jle
cmpsb
add
mov
dec
sub
push
push
ret
jnp
loope
int
int
fcomi
dec
cmp
pop
add
mov
in
daa
push
jmp
scas
add
jl
and
push
outsl
scas
mov
push
fmull
jle
adc
pop
mov
lock
mov
xchg
ja
fs
xchg
mov
out
test
neg
enter
push
scas
jg
pop
aam
push
mov
addr16
inc
incb
adc
mov
mov
cwtl
push
add
push
scas
sbb
scas
lea
pop
cld
mov
enter
add
daa
loopne
clc
scas
imul
sti
sbb
ret
push
in
and
inc
sub
push
out
mov
mov
das
int3
mov
hlt
push
icebp
jnp
lret
mov
rcl
test
cmp
sub
inc
addr16
dec
sub
xchg
sub
cltd
sub
fstl
cs
out
pop
mov
dec
sub
dec
inc
xor
popa
adc
in
js
mov
int
lret
mov
inc
sbb
daa
jge
push
mov
mov
sbb
push
mov
fnsave
ss
jbe
mov
jecxz
xchg
cs
aad
hlt
fwait
sbb
push
sbb
jne
push
pushf
cmpsb
imull
add
add
mov
jmp
lods
adc
jl
div
outsl
pop
dec
jo
imul
fwait
in
adc
dec
jmp
push
jns
fsubl
mov
outsl
out
lahf
stos
or
ret
enter
aad
jmp
mov
stc
xchg
or
or
inc
mov
adc
mov
mov
sub
pop
mov
les
sbb
cmc
cmovg
bound
out
xor
filds
mov
pop
xchg
add
push
fcoms
inc
push
cmpl
ds
pusha
fwait
cmp
lret
dec
lahf
jb
sub
push
mov
adc
cmp
addl
cld
xchg
cwtl
mov
xor
mov
int3
push
mov
inc
xor
loopne
mov
test
dec
jl
sub
stc
sub
push
scas
ja
int
sub
xchg
jmp
or
shlb
sub
fldenv
mov
cmp
mov
daa
mov
cmpb
andb
enter
test
das
add
dec
pop
adc
in
adc
ljmp
xor
js
cmpsl
loopne
addr16
mov
ss
dec
pop
leave
and
mov
jb
shll
or
mov
je
out
add
push
push
mov
jmp
js
sbb
mov
test
adc
cmpsl
loopne
or
scas
sub
mov
pavgb
sbb
outsb
jb
inc
data16
popf
loop
fs
jp
mov
sti
rcll
or
sbb
add
jns
out
pop
sti
or
xor
loope
add
ret
adc
add
fisttps
dec
fwait
cmpsb
jge
sti
and
fisubrl
push
mov
mov
test
mov
out
or
cmpsl
mov
jecxz
fwait
jle
add
pop
das
adc
lcall
cmp
in
mov
pop
cmp
sub
outsb
lea
pop
push
sti
mov
pop
sahf
fnclex
mov
jbe
rclb
lock
cs
adc
repnz
das
mov
int
out
stos
inc
push
test
rcll
xchg
js
test
in
cmc
popa
cwtl
xchg
ss
push
mov
sub
std
dec
xor
adc
out
mov
dec
mov
cmp
shrl
cmp
jle
or
aas
xor
arpl
push
icebp
push
cmc
call
push
jmp
xchg
popf
adc
xor
testl
pushf
inc
imul
adc
dec
xor
sbb
push
popf
xchg
pop
cld
adc
leave
xchg
nop
add
pusha
fwait
call
faddp
push
push
xchg
aad
ljmp
cmp
stos
cmp
jmp
mov
or
aam
popa
lahf
pusha
xor
jno
cs
dec
dec
or
inc
mov
insl
mov
jne
out
push
mov
aam
jno
pop
push
inc
int3
lods
xorl
push
sub
mov
iret
mov
mov
std
dec
mov
aam
fcmovnu
mov
imul
imul
add
js
pushf
in
xor
fistpll
push
test
sti
and
test
bound
aas
stos
mov
out
sbb
int
scas
insb
call
aaa
outsb
mov
aaa
into
ja
jae
sbbl
gs
cld
dec
popf
inc
lods
xor
cld
shll
pop
lahf
out
in
add
add
push
ficoml
xchg
mov
inc
push
xor
mov
jecxz
lret
bound
sub
shrb
sbb
mov
and
jl
data16
mov
sub
aas
and
orb
insl
jns
leave
sub
dec
sbb
punpckhbw
sbb
lock
ljmp
aad
jnp
icebp
orb
es
flds
add
test
in
imul
out
dec
push
mov
insl
or
lret
sbb
in
add
loopne
or
add
mov
dec
addr16
xchg
dec
std
out
add
call
out
inc
pop
fstpl
cmp
inc
xor
xor
ds
xchg
push
jnp
jnp
mov
subb
adc
lcall
xorb
in
lods
mov
jbe
mov
jmp
mov
loope
call
inc
enter
push
sahf
cmpsb
push
arpl
mov
loopne
push
push
jl
mov
jg
int3
arpl
les
mov
sbb
push
jl
repnz
cmp
cmpxchg
int
jo
icebp
cwtl
push
mov
jecxz
nop
mov
push
jl
clc
cmp
iret
fisttpll
mov
aaa
andb
bound
lods
jo
jns
mov
mov
stos
sti
fs
lar
xor
mov
fimull
aad
out
shrl
inc
jmp
ja
mov
lcall
dec
push
mov
xchg
rcrl
and
inc
push
xor
push
shl
jo
mov
hlt
add
outsl
das
mov
push
push
scas
ret
xor
iret
aad
enter
insl
imulb
enter
sub
mov
dec
lret
push
dec
dec
stos
pop
and
rorl
test
cmpsl
or
mov
lret
outsb
mov
jg
jae
ja
dec
clc
in
pushf
push
xor
fsubl
cmp
rcrl
addb
xchg
jbe
mov
lret
mov
cmp
xchg
pusha
and
ljmp
fwait
inc
iret
pop
sbb
xchg
scas
cs
jge
je
and
xchg
inc
pop
fcoml
in
jle
mov
xchg
mov
out
xor
icebp
dec
call
or
pop
pop
jg
push
inc
punpckldq
icebp
cli
andl
adc
lock
in
add
jbe
stc
sub
mov
mov
fsubrl
andl
xchg
pop
push
stos
test
sbb
and
dec
les
ja
and
or
flds
mov
sbb
adc
dec
stos
mov
xor
push
sub
push
push
lret
push
aas
clc
pop
lahf
jl
xchg
repz
pop
ficoms
push
cltd
dec
and
push
int3
test
ljmp
insb
rcl
add
push
icebp
nop
loopne
pop
or
fcmovnu
mov
scas
imul
ror
dec
mov
jle
imul
test
jp
stc
leave
pushf
jns
loop
pop
jne
in
pop
sti
mov
movsl
in
repnz
jecxz
cltd
dec
rorl
fsubrs
cmpsl
js
adcl
cltd
in
inc
or
adc
lret
test
pop
enter
jno
sbb
xorb
jle
ficomps
popa
rolb
xlat
add
mov
fsub
lock
das
scas
shlb
ret
sbb
push
sub
jnp
in
inc
orps
popf
add
sub
fwait
outsb
inc
aad
push
hlt
adc
xor
scas
xchg
xor
jae
cmp
xchg
enter
nop
rorb
lods
inc
jae
inc
push
xorl
enter
jnp
cmp
loope
adc
sti
adc
enter
test
lcall
repz
and
ret
ja
es
add
pushf
sub
inc
aad
insl
aam
jns
clc
mov
cmc
or
sahf
dec
in
repz
std
ja
mov
push
scas
daa
test
fwait
lcall
pop
cmpsb
and
lret
cmc
cmp
adc
jge
mulb
sub
xlat
push
jge
dec
cltd
stc
outsb
cmp
mov
inc
push
lods
pop
ja
xchg
shr
ljmp
aam
addb
add
ror
sbb
mov
lahf
addr16
lahf
push
and
dec
cmp
into
jo
mov
add
ljmp
cmp
cmp
push
outsl
mov
sbb
aaa
fstl
loopne
jl
dec
es
test
xchg
inc
out
hlt
mov
repz
lods
jle
adc
cmp
ja
pusha
cmp
aad
cmpsl
dec
cmp
hlt
ret
outsb
shlb
push
jecxz
loope
cmp
iret
sti
push
sub
xor
lea
mov
and
or
aad
push
adc
rcrl
popa
mov
dec
mov
jp
jge
mov
dec
pop
lret
inc
icebp
and
and
scas
xchg
fld
dec
jo
and
je
pop
xor
sub
push
in
ljmp
xor
add
add
les
sahf
scas
subb
fbld
in
push
out
fsubrl
jbe
daa
out
push
fcoms
aam
mov
add
outsb
push
sbb
out
sbb
pop
mov
lcall
das
fdivrl
sub
xor
mov
cmp
gs
fdivs
icebp
dec
inc
add
pop
mov
sbb
lahf
sbb
xchg
ja
iret
enter
jle
jo
jmp
inc
jbe
mov
movsl
scas
xchg
add
fbld
test
repz
add
mov
or
push
mov
mov
fsubrp
cmp
out
cltd
adc
sbb
and
outsb
lret
xchg
stc
jge
fsts
les
sbb
pop
lahf
mov
mov
pop
adc
mov
mov
sub
data16
not
aad
pop
push
mov
ffree
clc
in
stc
stc
pop
dec
push
notl
int3
scas
scas
adc
mov
or
imul
mov
ss
jae
push
aam
jle
adc
xchg
cmp
ds
in
iret
jne
ret
int3
js
mov
push
xchg
mov
cltd
sahf
dec
imul
int
js
mov
fists
sub
inc
fildl
jne
sbb
add
aaa
frstor
shlb
das
sub
scas
pop
dec
add
out
rcrb
stos
and
sahf
fwait
outsb
cmpsl
std
push
lods
cltd
sbb
ds
mov
insl
aad
lds
test
sahf
pop
adc
adc
mov
push
push
inc
cmpsb
aas
ljmp
movl
mov
arpl
cmc
lahf
lret
pop
in
out
outsb
pop
adc
aad
and
pop
ja
jecxz
or
add
sub
cld
sub
inc
pop
pop
dec
daa
movsb
xchg
xor
inc
mov
int
sub
mov
dec
leave
shll
mov
sbb
mov
jo
adc
cmp
nop
xchg
mov
jbe
mov
repz
xchg
adc
mov
dec
icebp
les
jbe
mov
pusha
inc
xchg
cmp
mov
jb
repz
xchg
int3
pop
xor
xchg
mov
add
loop
js
and
cmp
mov
cs
repz
xor
adc
sbbl
pushf
mov
out
cmpl
sbb
sbb
jle
pushf
movsb
xor
dec
cmp
shl
addr16
push
push
lret
rcr
add
adc
movsb
cmpl
stos
adc
jne
sbb
dec
dec
add
pop
and
xchg
scas
jge
daa
mov
jo
data16
cmc
mov
or
mov
mov
ja
test
jge
iret
jno
movsb
imul
inc
sub
hlt
sub
push
sbb
inc
pop
pop
adc
xor
mov
push
mul
hlt
cmpsl
xor
loopne
pop
mov
cwtl
jae
and
dec
insb
test
fnstenv
push
pop
xor
and
fsts
mov
shl
push
or
js
out
repz
loop
jo
mov
and
push
cmp
fs
push
leave
les
dec
mov
jbe
int
data16
sbb
jnp
jge
pop
push
push
pop
and
jbe
fldt
stos
mov
cld
push
mov
out
aam
add
test
pop
mov
mov
dec
aad
loop
or
adc
sahf
test
xchg
rcl
cltd
and
stos
outsb
push
mov
es
inc
cmc
lret
xchg
jg
add
test
lods
cmp
out
or
jae
repz
loope
mov
sub
mov
push
rolb
mov
mov
aad
into
cmp
xor
jge
ja
imul
ret
inc
xlat
in
pushf
shll
cmp
xchg
cli
push
mov
int
addr16
pop
in
stos
sub
mov
jne
xor
jl
out
pop
in
pusha
fidivs
scas
cmp
adc
les
and
xchg
add
sar
jo
mov
call
repnz
lods
dec
imul
pop
dec
mov
aaa
dec
loope
cmp
mov
mov
xchg
mov
or
mov
arpl
push
jb
mov
jl
popf
adc
cbtw
out
fwait
movsl
icebp
jl
in
ds
insl
jecxz
arpl
insl
lds
inc
ret
adc
dec
inc
in
and
or
xchg
lret
lea
test
xchg
or
jne
cmp
test
lcall
mov
lea
sbb
aad
and
hlt
int
enter
cltd
push
es
adc
sub
andl
outsb
scas
mov
clc
jl
sub
ja
xor
fcmovnu
xchg
ss
repz
pop
int
mov
out
stos
pusha
ror
dec
andl
shrb
fwait
cwtl
popa
aaa
xchg
outsb
push
xchg
cmc
loopne,pt
mov
adc
scas
in
or
xor
test
mov
add
add
pop
mov
popf
ljmp
push
inc
lods
aas
mov
xchg
sub
movsl
inc
lret
inc
pop
cmpsb
or
out
jg
imul
loope
push
inc
cmp
pop
sbb
cltd
push
sub
scas
or
insb
gs
repnz
jb
lcall
mov
fbstp
call
lret
jbe
mov
aas
inc
in
or
stos
mov
jno
cld
jle
int
mov
and
adc
jb
or
mov
jg
loopne
pop
dec
mov
adc
sub
lods
int
jb
cmp
ret
dec
stc
or
mov
mov
sbb
push
cmp
add
repz
cltd
rep
cs
jns
and
dec
psraw
dec
popf
push
mov
dec
xchg
mov
cmp
cltd
xlat
sub
lcall
sbbb
pop
arpl
aas
insb
rolb
jmp
movsb
lea
sbb
movsl
cmp
xchg
jns
cmpsb
incb
movsb
sub
mov
and
jnp
cwtl
cmc
xlat
imulb
sub
push
data16
testl
xor
add
addr16
nop
ljmp
mov
mov
in
das
mov
ljmp
add
adc
mov
stos
insl
lahf
lret
mov
mov
arpl
push
daa
testl
jle
push
mov
xchg
pop
jge
add
dec
hlt
mov
fdivrl
test
addr16
mov
mov
ret
cmp
pop
imul
mov
call
cmp
aaa
add
inc
fdivrs
add
adc
fs
mov
loop
popa
idivb
adc
fiadds
lods
ret
pop
xchg
mov
aam
push
sbb
and
ficompl
jae
pop
cmp
pop
aad
std
rclb
xlat
add
mov
xchg
xchg
test
loop
pop
out
in
jae
inc
mov
into
sbb
nop
xchg
sub
shlb
and
and
mov
int
sbb
mov
mov
cli
and
xor
xchg
sbb
jnp
clc
cld
pop
xor
shlb
int
xchg
call
cmpsl
cmp
out
xlat
jmp
mov
cld
and
pop
aaa
sbb
clc
rorb
test
cmp
das
pushf
push
fildl
das
pushf
fisttpl
xchg
enter
jge
sbb
cmp
iret
xlat
xchg
adc
adc
out
aas
push
scas
or
in
cli
outsb
stos
mov
inc
sar
aad
mov
repnz
jle
hlt
lods
test
sbb
jnp
ds
arpl
and
push
sbb
fimuls
loopne
pusha
ja
cmp
sbb
xorl
or
add
mov
adcl
int3
adc
adc
sbb
xchg
daa
mov
test
in
imul
cmpsb
pop
sub
mov
sub
das
inc
scas
xchg
xor
ja
add
call
mov
mov
mov
fbstp
mov
gs
loopne
stos
push
idivb
std
cmp
fisubl
pop
pop
jge
adc
jns
and
jo
out
ret
int
in
sub
xor
pop
mov
lods
shll
fbld
test
roll
arpl
xor
jbe
sarb
sbb
mov
fnstsw
mov
xchg
push
pop
jg
jno
stos
fs
cmp
jecxz
gs
cmc
mov
repz
xchg
mov
lret
sub
pop
in
mov
pop
push
in
movsl
mov
pop
fnsave
cmc
add
jmp
inc
ficompl
ss
or
stos
sbb
fisubl
test
dec
inc
repz
insb
xchg
inc
jl
jl
addb
xor
clc
mov
mov
dec
sub
sbb
insb
fidivs
pop
imul
sub
pop
ljmp
jnp
and
and
push
repz
cmp
jecxz
pop
sbb
xchg
mov
in
add
lods
call
sub
pushl
lahf
xchg
push
and
mov
out
loop
sub
push
loopne
sahf
in
xchg
pop
sub
dec
push
dec
cli
jmp
stc
lcall
dec
out
xlat
or
mov
imul
lock
aaa
adc
or
mov
addl
popf
outsb
in
add
or
xchg
fnstsw
gs
mov
sub
lods
or
out
jmp
cmp
dec
sbb
lods
adc
out
xchg
ja
lods
fdivrs
or
pusha
inc
aaa
dec
test
jecxz
mov
mov
out
ret
fcmove
cld
andl
sbb
pop
push
cmpsb
inc
push
iret
loope
cld
adc
ret
mov
pop
icebp
or
or
stos
inc
into
push
xor
stos
inc
fcoms
out
js
xchg
mov
push
cmc
pop
xor
pushf
popf
sub
inc
and
rorl
int
dec
mov
mov
dec
arpl
popa
rol
mov
call
int3
lret
gs
div
push
jge
inc
mov
loopne
mov
ja
adc
push
int3
loopne
add
push
pop
lcall
sub
in
mov
xor
inc
shrb
pop
cltd
loope
xchg
push
sarb
das
adc
mov
outsb
sub
jle
push
mov
xchg
mull
xchg
pop
dec
and
pop
mov
mov
aad
xlat
rcr
jmp
mov
sub
rcll
enter
inc
inc
mov
idivb
fwait
dec
sub
aas
jmp
sub
sar
pop
xchg
sysenter
mov
enter
loop
dec
outsl
in
push
iret
shrb
or
imul
dec
push
lds
xchg
sub
xchg
movsb
stos
imul
mov
push
in
lea
mov
xor
mov
push
sub
insb
cmpsb
pop
shr
pop
lea
dec
push
xchg
xor
test
sub
clc
xchg
sbb
les
push
ret
or
jbe
xchg
add
xor
inc
jle
jle
sbb
imul
sarl
push
mov
push
push
mov
jmp
out
adc
cmpl
in
xchg
fwait
test
adc
pop
pop
xchg
xchg
repz
movsl
dec
mov
inc
subb
and
jge
out
push
cli
jmp
cmp
fsubrs
in
mov
xor
cmp
iret
mov
pop
lods
bound
adc
rorl
das
outsb
and
or
jle
aaa
fdivp
outsl
xlat
sub
int3
ret
je
lods
loope
daa
outsb
pop
cld
add
stos
int
test
jecxz
addb
lret
fcmovne
movsb
push
mov
add
das
pop
and
lea
int
adc
idivb
xchg
out
daa
pop
mov
arpl
nop
lods
repz
pop
outsb
jno
lea
in
mov
es
and
in
iret
das
xchg
pop
push
lods
filds
mov
cmp
sbb
mov
rclb
or
lods
inc
into
or
mov
push
sub
ja
pop
pushf
jl
pop
decl
ss
mov
int
mov
pop
xchg
scas
sub
sbb
xor
aad
shrb
cmp
in
fwait
std
add
mov
fdivrs
movsl
inc
jno
outsb
or
push
cmp
inc
lods
or
jns
inc
neg
cli
sbbb
stos
es
fwait
int
cs
pop
jl
lock
dec
pop
roll
pop
iret
arpl
fdivrl
cmp
aam
ja
ret
mov
shlb
xorb
movsb
mov
jno
ss
mov
mov
adc
sbb
add
loop
inc
pop
dec
mov
xor
ljmp
insl
push
cwtl
mov
push
call
fnstcw
xchg
aas
jb
or
in
pop
adc
clc
adc
popa
xor
pop
sub
pop
aam
xchg
jns
divb
adc
sub
lods
add
in
jae
insb
sbb
or
xchg
xor
and
sub
adc
sti
dec
stos
mov
rolb
stos
cs
jbe
cmp
and
ja
sbb
fsts
jmp
lods
pushf
inc
pusha
scas
inc
popf
mov
and
rcrb
addr16
ljmp
cwtl
jecxz
in
jecxz
jns
jmp
fbstp
sub
mov
xchg
push
movsb
xchg
mov
dec
mov
push
out
push
dec
pop
mov
dec
test
pop
divps
mov
ret
icebp
mov
popf
ror
mov
mov
cmp
cmc
push
or
dec
add
inc
sub
and
fs
fadd
pop
jbe
jl
xor
or
imul
test
scas
sub
es
and
std
cmc
jb
cmc
cmpsl
lret
sbb
inc
loopne
xchg
mov
in
insl
sbb
ret
mov
push
push
sub
pop
daa
lods
or
cmp
mov
mov
dec
ret
xorl
pop
adc
test
subb
xchg
jmp
stos
mov
cmpsb
insb
inc
outsl
mov
or
xor
lret
sub
sbb
ret
xchg
inc
fs
cmp
pop
out
dec
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
ljmp
push
fsubrl
sbb
sbb
dec
push
sub
sahf
shrb
aam
cmp
into
xchg
popa
in
lods
jnp
adc
sahf
and
fdivrs
pusha
test
add
mov
into
push
lret
mov
add
test
into
pop
cmp
fdivr
aad
pop
in
pop
cli
jnp
ss
xchg
mov
pop
test
into
loop
rcrl
jmp
push
imul
push
push
lea
mov
fs
rolb
out
inc
mov
pop
roll
mov
push
fsubrs
jge
stos
jp
mov
mov
inc
das
adc
imul
sti
sub
imul
stos
psubusb
loopne
lods
push
mov
push
jl
jp
hlt
leave
insl
lds
loop
cltd
shl
xchg
call
ds
adc
cld
dec
fs
das
data16
sub
into
ljmp
addb
jae
dec
fbld
roll
out
les
pop
lahf
mov
movsb
xor
jne
fisubrs
cmpl
push
aas
lods
in
shll
xchg
xchg
adc
jno
pop
sbb
lds
in
leave
loop
push
push
sbb
cmp
test
pop
cmp
or
adc
mov
loopne
sub
outsl
mov
adc
cmp
push
or
mov
mov
loope
cmp
ja
pop
inc
mov
int
outsb
dec
inc
cmp
mov
pop
or
test
dec
inc
rorl
pop
push
adc
mov
pinsrw
pop
xor
jl
fsubrl
mov
dec
es
psrld
inc
hlt
iret
dec
inc
pop
inc
daa
mov
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
stos
outsb
add
outsb
add
dec
outsb
