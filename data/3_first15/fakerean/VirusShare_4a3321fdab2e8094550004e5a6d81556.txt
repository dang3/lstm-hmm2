sbb
add
mov
xchg
mov
and
cmpb
loope
cmp
fwait
add
jnp
mov
mov
and
and
sarl
lock
dec
test
mov
add
data16
sub
stos
jno
adc
jecxz
lcall
ds
and
fistpl
fstl
and
push
popf
cmp
or
pop
jp
into
and
lret
dec
sti
push
bound
loopne
or
mov
roll
mov
lods
pop
shl
stos
jmp
push
dec
scas
jbe
int3
lods
pop
sti
mov
mov
mov
stc
inc
jle
xchg
ret
je
ret
movsb
pop
int
daa
jmp
cmpsb
in
fadd
sbb
sub
test
sbb
dec
push
fimuls
lds
out
mov
sahf
js
decb
mov
lods
add
test
pop
fldt
imul
mov
mov
adc
jae
daa
clc
cmp
xor
add
sub
dec
mov
stc
xchg
test
repnz
adc
mov
imul
pop
mov
lahf
ret
scas
addr16
bound
ds
cs
shlb
scas
std
and
jno
clc
lds
es
scas
xchg
pop
je
dec
test
pshufw
push
adc
and
adc
test
add
dec
scas
arpl
dec
pop
mov
daa
sub
jnp
mov
add
movl
pop
repnz
and
mov
das
movsl
sub
dec
mulps
decl
adc
movsb
dec
jnp
xorb
das
mov
ret
cld
jbe
scas
or
and
inc
mov
xor
addr16
fs
sub
dec
fsubrs
pop
notl
pop
mov
jl
xchg
xchg
lret
lods
jbe
iret
test
pop
test
lods
sub
and
insl
and
pop
rcrb
dec
cmpsb
and
adcb
push
cmpsb
jecxz
sbb
adc
xchg
mov
jbe
mov
cmp
sbb
out
das
frstor
fdiv
push
jmp
stc
dec
jle
cmp
cli
and
pop
imul
sbb
and
mov
xor
push
or
jae
jbe
xor
lahf
in
fcmovne
sub
and
loopne
movsb
das
and
pop
incl
adc
push
sub
fcoml
jge
enter
inc
lsl
jo
pop
dec
xor
add
cmp
jno
adc
aam
add
mov
cmp
mov
dec
jmp
aas
cmpb
mov
mov
add
subb
std
mov
fwait
loopne
cli
leave
stc
loope
jge
or
xchg
sbb
bound
and
mov
mov
lret
outsb
xchg
mov
dec
int3
in
dec
test
mov
rclb
ja
push
in
mov
dec
fs
sbb
and
mov
jae
xor
ffree
mov
mov
out
jns
sub
add
push
dec
clc
repnz
xchg
xor
data16
es
cmp
jbe
pop
cmp
fcoms
out
cwtl
lods
fldcw
scas
clc
icebp
pop
test
mov
mov
adc
xor
pop
dec
sbb
int3
cmp
mul
loope
cmp
pop
js
insb
dec
xchg
jl
sbb
sarb
ss
mov
rol
int
enter
bound
mov
xchg
add
pusha
xchg
icebp
add
mov
ret
xor
sub
mov
roll
adc
sarl
sub
stc
loopne
jecxz
lret
leave
mov
add
pop
sahf
push
test
icebp
movsb
xchg
adc
leave
sub
sbb
dec
xor
and
sbb
pop
adc
adcl
leave
mov
dec
cwtl
inc
fldt
insl
sub
ja
sarl
push
xchg
ja
pop
imul
push
fistl
push
inc
aaa
insb
ss
jo
jp
inc
push
mov
cwtl
and
jp
aaa
cltd
je
lds
inc
addr16
popa
xor
adc
push
sub
inc
push
push
repz
test
push
lods
xor
dec
sahf
mov
out
outsb
cmp
add
cwtl
inc
test
sbb
xor
hlt
out
push
or
xchg
xchg
pop
out
cmp
jb
cwtl
or
outsl
andb
and
imul
inc
faddp
int3
popf
sbbb
add
jge
sti
mov
adc
fimuls
iret
ret
int
inc
and
jno
lock
adc
adc
lods
push
xchg
xlat
xchg
add
and
and
fnstsw
pusha
insl
mov
sub
fisttps
es
cmp
test
mov
sbb
mov
sbb
std
add
cwtl
adc
mov
jg
inc
pop
push
in
nop
dec
pop
mov
popf
mov
cmp
pop
enter
fcompl
inc
jle
pop
and
fsubr
ds
out
into
test
repz
pop
and
jae
fldenv
adc
inc
enter
imul
lea
xor
jo
jg
mov
jge
shlb
test
xchg
fsubs
outsl
outsl
sahf
mov
loopne
add
shl
or
rcl
pop
and
aam
and
pushf
xor
jne
movl
ret
or
in
mov
stos
xor
inc
hlt
das
mov
sbb
mov
in
daa
mov
sbb
sbb
pop
sub
aam
popf
mov
clc
dec
cmc
in
jl
add
jecxz
add
xchg
daa
scas
xchg
sbb
scas
inc
xor
and
jp
cs
xchg
icebp
mov
push
pop
shl
adc
or
aas
lahf
mov
mov
stc
cmp
sub
lds
or
loop
pop
or
repz
pop
add
in
js
in
sub
pop
cmpsb
ret
popf
sbb
lods
sub
lcall
inc
pusha
xchg
repnz
lds
jb
jno
out
shr
imul
lods
lret
xchg
or
and
xor
and
fsts
sbb
fcomps
dec
rol
dec
adc
pusha
ss
xlat
mov
xor
shl
aad
push
cltd
xchg
push
push
and
fldl
lds
sbb
aas
in
inc
xor
or
xchg
mov
jnp
notl
popa
cltd
jle
notb
mov
lds
or
xchg
shlb
popa
mov
popa
repnz
sahf
push
mov
fisttpll
test
test
imul
jno
sbb
jae
loop
fwait
lret
call
jne
xchg
std
add
sub
aaa
fs
mov
popa
cmpsb
fimuls
fisubrs
repz
adc
mov
cmp
inc
std
add
movntq
movsb
imul
movsb
mov
std
repz
xchg
fwait
ja
or
pop
enter
in
cmp
xchg
cmp
in
into
sub
test
loop
adc
inc
and
add
dec
nop
aas
sub
cmp
jnp
icebp
hlt
pop
ja
cwtl
xor
jbe
fs
and
es
pusha
and
test
push
xchg
movsb
fidivl
imul
lret
mov
loop
xor
cmp
stos
or
xorl
cs
subb
pop
adc
push
xlat
test
loope
xorb
dec
push
loopne
cs
jb
dec
xchg
test
jno
cwtl
jecxz
loopne
out
adc
adc
aam
jl
jecxz
add
push
xchg
lock
or
xor
xchg
popf
sub
shrb
cmpsl
sbb
push
xchg
adc
loope
mov
xchg
push
cli
cmpsl
cmp
jb
rcr
ficomps
dec
lea
outsl
mov
div
ret
xchg
loope
into
rcl
mov
out
call
xchg
inc
xor
xor
dec
pop
dec
jbe
sub
xor
xchg
sbb
imul
push
mov
mov
xchg
jle
mov
mov
test
sbb
jbe
push
or
adcb
mov
lret
lcall
adc
bnd
dec
arpl
mov
mov
cwtl
and
xor
or
movl
mul
scas
orb
push
mov
ja
cld
lret
jno
inc
jo
pop
mov
dec
hlt
adc
rcl
jecxz
or
and
test
les
popa
push
add
out
jns
fistpll
movsb
xor
inc
pop
fs
fwait
cltd
push
push
popa
cltd
sbb
inc
mov
xchg
sub
cltd
loope
sub
repnz
push
mov
mov
leave
pop
mov
xchg
dec
xchg
hlt
sbb
sbbb
and
mov
outsl
cmp
mov
into
mov
rcr
xchg
rolb
and
dec
or
addl
pop
lods
in
stc
cli
jns
mov
push
inc
mov
rolb
adc
xchg
mov
scas
lods
pop
xlat
mov
sahf
dec
scas
in
scas
flds
in
mov
repz
dec
pop
or
fs
sbb
dec
aam
js
hlt
ds
mov
xchg
and
pop
outsb
enter
dec
adc
shlb
outsb
xchg
mov
and
jecxz
pop
out
mov
mov
add
add
push
xor
fs
pop
test
jle
ja
cli
mov
mov
pop
mov
sahf
mov
add
in
pop
out
lods
test
test
les
adc
adc
dec
jnp
pop
and
subb
in
jmp
orb
lea
sub
push
imul
dec
enter
push
sub
out
lret
pop
and
in
imul
mov
aad
shlb
ret
inc
cmc
adc
outsb
dec
inc
out
icebp
pop
sbbl
cmp
pop
push
repz
cld
sub
pushf
mov
sub
lahf
scas
adc
jl
pusha
sbb
push
stc
push
adc
inc
test
xchg
jcxz
xchg
add
in
jl
fcoms
icebp
and
inc
in
out
jns
mov
hlt
jmp
xchg
xor
roll
mov
xor
subb
mov
out
xchg
scas
fistpl
addr16
out
sub
dec
or
add
roll
lret
adcl
stc
pusha
outsl
fs
xchg
and
or
dec
sub
daa
and
add
xchg
sub
lcall
daa
mov
repnz
pop
je
jecxz
in
pop
cli
lock
fdivs
dec
icebp
test
repnz
xor
push
mov
mulb
js
out
cltd
cmp
movsl
sti
fidivl
xor
insl
sbb
outsb
and
push
sti
mov
mov
cmp
fdivl
lret
insl
dec
inc
add
ljmp
cmp
jne
fadds
rcr
fists
ret
int3
xchg
in
mov
xorb
roll
sub
jl
cwtl
xor
fsubrl
push
daa
addr16
sahf
negb
mov
pop
push
scas
mov
sbb
jnp
jae
loop
mov
dec
stos
jnp
inc
les
inc
inc
xchg
arpl
mov
cmpl
and
inc
jae
mov
mov
push
scas
xor
lods
jl
jg
push
inc
mov
hlt
push
les
in
add
xor
push
jae
sti
outsl
jg
lea
dec
xor
jp
ja
sahf
adc
stc
dec
daa
xor
fisttpl
adc
aam
stos
test
xchg
int3
fisttpll
mov
cmpsb
iret
jl
and
xor
xchg
aam
mov
ljmp
dec
mov
xor
test
fsubp
imull
out
jg
pop
fwait
adc
mov
pusha
out
sub
mov
das
mov
es
enter
leave
add
jnp
mov
fiaddl
cmpsb
sbb
and
fimull
pushf
and
pop
push
xchg
mov
dec
imul
sbb
fs
inc
dec
and
test
jg
bound
test
stos
mov
lcall
imul
in
in
sahf
mov
or
aam
push
cmpl
pop
xchg
push
divb
jb
mov
movsb
mov
test
les
outsl
jge
fs
into
fistps
add
jb
cmp
sbb
jo
sbb
pop
pop
lods
jmp
mov
inc
cmp
adc
mov
stos
pop
enter
rcl
loope
jae
inc
int3
pop
call
dec
adc
stos
out
mov
lds
aas
mov
mov
ret
ds
sub
mov
nop
and
pop
xchg
sbb
xlat
sub
adc
imul
mov
jb
and
push
int3
std
jns
fs
and
mov
cs
lret
jecxz
pushf
jmp
testb
cmpsl
leave
xchg
add
add
inc
pop
cmp
cmp
iret
dec
pop
sub
bound
bound
jne
inc
mov
in
ds
add
and
daa
orb
bound
in
out
mov
dec
popf
mov
or
sub
stos
mov
sub
cmp
jecxz
aas
clc
shll
xor
dec
ja
scas
arpl
add
push
xchg
es
mov
sub
mov
push
dec
push
jns
mov
sti
decl
es
jp
sbb
and
out
pop
jge
pop
test
out
lahf
adc
roll
dec
sbb
jnp
mov
repnz
mov
jb
push
fistpll
je
push
xchg
loopne
xor
xchg
jl
push
inc
inc
test
and
sbb
xor
mov
imul
jmp
stos
adc
xor
pop
jbe
ret
mov
or
aaa
cmp
lahf
pusha
inc
mov
scas
jl
add
test
mov
cmp
arpl
inc
aaa
es
outsb
iret
mov
fimuls
fidivrl
push
mov
cwtl
xor
shlb
in
jne
in
inc
dec
xchg
test
jecxz
lods
sub
xorb
pop
push
sub
adc
call
imul
sbb
in
jp
sbb
stc
aas
gs
notl
repz
idivb
and
or
addr16
push
les
xor
lret
out
and
decl
sbb
gs
lock
leave
aaa
sbb
clc
and
mov
lock
cmpsl
insl
shll
ds
lcall
sbbb
cmp
push
lahf
mov
jae
lret
inc
and
mov
pop
bt
inc
lret
sbb
int
cmp
jl
jbe
dec
and
mov
mov
xchg
int3
aad
cmp
inc
xchg
into
nop
clc
out
jb
adc
xor
xor
xchg
jg
ficompl
push
sbb
lcall
int3
xchg
jle
push
iret
add
fdivl
aas
aad
jbe
sbb
cmp
ja
mov
xchg
movsb
mov
cmp
es
jecxz
cmp
hlt
jno
mov
adc
inc
cmp
mov
in
pop
jne
in
or
add
int3
outsl
mov
in
inc
xchg
jne
jg
adc
sti
jmp
pop
mov
aam
shrl
jnp
ljmp
push
stos
adc
add
sbb
ret
icebp
or
xchg
and
dec
and
fnstenv
movsb
sbb
mov
cwtl
add
sub
imul
sub
lock
sbb
xchg
iret
pop
sbbb
imulb
les
icebp
out
sub
dec
es
jae
dec
daa
ret
pop
adc
mov
out
dec
mov
fs
fs
loopne
pusha
stos
cmovno
bound
insl
push
pop
mov
and
movsb
lret
lahf
aas
in
in
lahf
dec
adc
scas
mov
or
and
pop
push
jne
sbb
xchg
imul
adc
test
xchg
outsl
dec
jns
gs
push
dec
in
scas
xor
les
popa
in
das
xor
stc
mov
or
mov
dec
aas
mov
ret
repz
pop
push
loop
xor
test
adc
add
adc
in
jmp
dec
cltd
inc
jmp
and
sahf
jo
call
xor
dec
jns
mov
and
das
mov
inc
lahf
mov
and
xor
pushl
jae
mov
mov
push
ror
mov
jl
lock
mull
int3
shld
sbb
movsb
shl
sub
inc
test
adc
jge
scas
xor
arpl
movsl
std
leave
jns
push
das
aad
loop
rorb
push
ficompl
rorl
sub
and
mov
aaa
into
jmp
out
pop
mov
sbb
fcos
and
call
cmp
lret
inc
xor
das
int
aam
cmpb
mov
outsb
pop
add
mov
mov
sub
roll
aad
iret
ficomps
sahf
leave
ss
mov
fstpt
repnz
add
inc
push
insb
popf
movsl
xchg
mov
test
stc
int
rorb
pop
pop
pop
adc
mov
mov
xor
repz
ljmp
sahf
scas
inc
imul
cmpsb
xor
fwait
sub
jmp
mov
xchg
xchg
mov
fwait
adc
add
imul
aas
push
jns
movsl
xor
sar
lahf
addr16
inc
mov
cmpsl
mov
xchg
ret
jbe
push
sub
fs
daa
or
sbb
pop
jbe
push
pusha
mov
mov
pushf
incl
and
fld
icebp
xchg
andps
lret
dec
pusha
add
xchg
and
mov
outsl
xchg
or
or
fmuls
je
movsb
jns
imul
mov
fs
lds
out
pop
ljmp
inc
test
lahf
pop
pshufw
scas
cmp
lcall
push
cwtl
subb
in
dec
cli
mov
push
dec
clc
xor
arpl
adc
xor
js
dec
jl
inc
mov
inc
mov
add
adc
sbb
cmpsl
lock
push
pop
adc
and
lods
dec
insl
fldt
and
js
addr16
daa
sub
pop
jbe
std
or
pop
movsl
test
push
xchg
stos
xlat
call
mov
jp
sub
mov
popa
pushf
xchg
lret
sahf
push
pushf
xchg
sbb
add
or
test
loope
pushf
stos
je
xor
xchg
dec
mov
xchg
sbb
xchg
push
xor
cmp
rorb
add
mov
jge
loopne
imulb
cwtl
push
cmp
pop
iret
fbstp
jne
mov
mov
std
push
cmovg
shl
mov
add
arpl
mov
adc
or
pop
and
lea
pusha
or
inc
add
xorl
add
insb
in
and
je
mov
cmp
das
int3
imul
fnstenv
and
sarb
pop
mov
fsubr
add
adc
sahf
stos
dec
cwtl
jge
popa
sti
pop
pop
test
dec
inc
call
add
in
mov
mov
xchg
stos
push
and
out
in
test
mov
and
call
enter
dec
adc
adc
out
jbe,pt
fwait
push
push
filds
or
js
arpl
ljmp
adc
jbe
out
and
and
push
add
out
mov
sbb
push
sbb
sub
mov
sbb
popf
mov
push
mov
sub
shll
mov
stos
add
test
xchg
mov
lock
je
sub
pop
movsl
or
mov
inc
xchg
shll
aad
bound
or
rolb
jbe
xchg
loope
inc
or
insb
shll
and
xchg
inc
enter
enter
out
popf
mov
cmp
cmp
roll
repnz
dec
and
push
sub
mov
ja
int3
outsl
lock
imul
inc
sbb
xchg
add
mov
mov
push
cmp
pop
mov
adc
ja
cmp
mov
rcrb
rcrb
inc
xor
dec
jne
cld
dec
std
fsubp
push
cwtl
std
push
push
sbb
or
and
rcll
test
xor
ficomps
loopne
and
fwait
push
mov
cli
mov
xor
xor
cmpsb
mov
dec
mov
or
cmc
lahf
shll
or
ja
jl
cmp
lock
lret
cmp
in
mov
ror
adc
sbb
rorl
popf
jbe
lret
mov
dec
push
loop,pt
pop
daa
addr16
xchg
xchg
movsl
or
mov
fcmovbe
fs
fwait
out
mov
pop
pop
inc
pop
xor
imul
inc
pop
jns
es
mov
fdivr
call
inc
cmp
cwtl
push
nop
push
inc
sub
cmp
mov
dec
push
lods
xor
aaa
add
cli
adc
xchg
scas
sub
arpl
or
cld
ds
les
xacquire
mov
imul
pop
pop
add
mov
repz
cmc
int3
out
or
xor
jmp
fnstenv
inc
and
test
mov
or
into
ret
in
test
cmp
cmp
sub
aaa
mov
pop
adc
push
jl
cmp
mov
enter
add
lods
push
sbb
push
add
sbb
add
push
mov
and
add
inc
js
jge
je
jne
jge
push
dec
push
lahf
fsubs
hlt
push
popf
std
adc
dec
xor
das
loope
dec
test
dec
or
ljmp
mov
and
add
or
cmp
sti
je
mov
add
sbb
jmp
jns
ja
and
push
sahf
hlt
jb
add
jo
lock
xchg
repz
xor
push
stos
test
fists
pop
xor
ficomps
lods
pop
jnp
jnp
add
dec
add
and
pop
inc
push
and
lret
outsb
ja
lock
insl
pop
mov
xchg
insb
or
sub
dec
loope
scas
push
ficoml
aam
lret
lcall
loopne
divl
out
leave
jb
sti
into
outsb
es
cmp
mov
inc
jnp
imul
scas
inc
jp
push
dec
pushf
lods
out
xchg
arpl
popa
data16
jo
sahf
paddb
stc
insb
mov
jmp
cmpsb
cltd
jmp
js
xchg
and
add
inc
cmpsb
test
cmc
lret
cwtl
sbb
push
int3
lds
dec
movsl
cmpsl
cmp
xor
testl
fwait
incl
dec
cmp
fstpl
adc
in
xchg
mov
bound
sbb
lods
ficoms
jle
xchg
ds
stos
subl
cmpsb
mov
jl
inc
fnstsw
pusha
adcb
test
aam
mull
daa
into
push
mov
push
enter
xchg
loop
ret
push
popf
and
xor
jecxz
rcl
inc
add
adc
aas
pop
test
aad
mov
pop
es
cmp
cmp
and
lock
sbb
adc
in
stos
sub
mov
test
xchg
pushf
jae
lock
dec
and
xchg
jo
add
lret
inc
sbb
mov
xchg
xor
cmpsb
pop
inc
mov
adc
mov
fistl
push
xor
aad
adc
lock
loop
in
lret
fadds
gs
and
dec
test
pop
ds
pushf
xchg
adc
out
stos
cwtl
in
movsl
pop
xor
jge
pop
negb
jg
or
icebp
add
mov
mov
cmpsl
rcll
incb
aam
dec
jbe
add
xor
repz
dec
mov
ljmp
ljmp
cmp
or
jb
sub
cmpsb
pop
push
orb
and
fisubl
fisttpl
es
pop
push
scas
insb
jns
push
and
imul
dec
aam
mov
ret
and
fbstp
jne
or
cld
subl
in
repnz
mov
sahf
or
mov
jecxz
imul
sub
int
mov
sbb
in
cmpsl
ss
icebp
mov
lods
rolb
push
fprem
mov
pop
outsb
mov
rolb
rcll
sbb
cmp
addl
scas
mov
inc
pop
call
sbb
sub
bound
add
icebp
sub
fstpl
aam
shr
sbb
lahf
or
mov
cs
cmc
cld
inc
inc
pop
mov
push
not
xor
or
mov
ljmp
push
test
cmp
enter
xor
fildl
shl
xchg
dec
fnstsw
pop
lea
int
outsb
pop
incb
adc
add
inc
sbb
mov
mov
pop
repnz
or
inc
hlt
icebp
pop
cmpl
fnstsw
inc
in
popf
imul
mov
jb
push
xchg
mov
jo
add
sbb
mov
and
orb
jae
xchg
and
pop
xchg
mov
cli
repz
fsubrl
repz
sub
test
into
loop
or
js
lret
jbe
add
sbbb
add
jge
scas
gs
in
outsl
repz
mov
clc
pop
test
or
xchg
cwtd
xchg
ss
pusha
xchg
cwtl
sbb
jecxz
ljmp
fidivrs
sbb
and
sbb
movsb
out
into
jl
cs
clc
adcl
mov
add
insb
jmp
ja
arpl
cld
pushf
test
mov
mov
loope
bswap
jbe
orb
pop
xchg
icebp
xor
call
mov
sub
mov
rolb
cmc
dec
mov
stos
push
mov
scas
arpl
jle
ret
or
test
loope
push
fs
add
mov
repz
mov
ds
data16
or
insl
cld
pop
lock
insb
add
fnstcw
and
pop
mov
sub
jno
adc
je
je
scas
sbb
mov
sub
adcl
add
sub
sbb
fidivrl
pop
repz
push
test
jp
lds
inc
stos
mov
pop
loop
mov
xchg
loopne
sub
push
call
sbb
js
mov
lcall
in
loop
aas
fwait
mov
mov
aam
and
scas
iret
stos
mov
fwait
test
push
mov
xor
das
inc
imul
mov
adcl
or
loope
adc
cmc
jo
pop
popa
push
push
sub
mov
ljmp
repz
mov
xchg
mov
jp
xor
in
lret
pop
push
shl
inc
fsub
call
sbb
lahf
adc
mov
popa
std
xchg
jmp
and
mov
xchg
jb
mov
test
push
mov
in
push
dec
out
mov
xor
mov
pop
push
cmc
push
push
cmp
cmp
mov
xchg
cmpl
repnz
xorb
movsb
mov
push
and
dec
adc
cli
lcall
cmpl
mulb
dec
and
ja
jne
adc
adcl
xor
andb
xor
mov
sarb
sub
cmp
in
and
addb
dec
shll
fcompl
jbe
pop
jo
std
xor
lea
in
test
test
lock
jbe
jae
inc
scas
movsb
and
test
sub
dec
lds
sbb
dec
test
xor
ret
xchg
sti
xor
lahf
pop
pushf
add
rorl
sti
or
mov
in
imul
fstpt
adc
mov
popf
bound
pop
pop
movsl
xlat
mov
pop
enter
fldenv
sahf
fimuls
and
xchg
add
mov
sub
mov
js
cli
cmp
notl
xor
aas
xor
lock
push
xchg
xchg
icebp
lret
xor
loope
pop
and
mov
or
jmp
mul
imul
and
outsl
sub
rcl
push
pop
push
fnstcw
fdivp
mov
jbe
jmp
scas
ret
mov
daa
inc
fsts
mov
or
inc
in
mov
mov
lahf
push
aaa
cwtl
imull
leave
pop
test
push
rol
dec
jmp
lret
gs
pushf
loope
mov
inc
scas
inc
mov
add
push
insb
push
bound
mov
pop
movsl
pop
add
xchg
push
jp
jns
orl
mov
cmp
mov
ror
cmc
faddp
adc
fildl
adcl
cmp
mov
add
movsb
mov
lock
sub
cmp
and
pushf
pop
inc
adc
fistps
incb
push
xchg
and
jp
enter
push
xor
das
in
mov
es
adc
mov
loope
cmovle
xchg
mov
hlt
out
dec
pushf
or
and
std
mov
push
divb
in
stos
pusha
in
pop
push
out
jae
xor
sbb
xor
loopne
adc
mov
es
pop
adc
push
sbb
jnp
sti
loopne
daa
jbe
test
push
das
in
pop
xchg
es
stos
ret
cmp
xchg
insl
mov
jp
xchg
mov
testb
and
fdivrl
outsb
cmp
repnz
push
push
mov
mov
mov
icebp
stos
test
mov
hlt
repz
aaa
or
push
das
fsubr
out
inc
pop
jae
xchg
lret
les
mov
jae
mov
jle
sbb
ljmp
push
cmp
imul
or
test
or
or
popf
filds
pusha
call
cmc
repz
fwait
xor
movsl
adc
lods
pop
icebp
cwtl
adc
lock
push
inc
or
jmp
push
and
mov
push
pop
xchg
push
inc
mov
xor
sbb
mov
xchg
mov
cmp
cmp
jno
cs
loope
ja
stos
sbb
inc
cli
add
or
ficompl
ja
enter
fiaddl
xchg
mov
out
inc
sti
adc
mov
repz
push
cltd
cs
lods
push
sub
shrb
stos
or
and
push
mov
sbb
gs
and
push
adc
into
xchg
mov
mov
mov
jno
mov
xchg
adc
push
push
push
lea
pop
cmp
or
or
mov
lods
dec
divl
aam
lret
sbb
stc
orb
mov
test
cmp
ror
sbb
mov
inc
xchg
pop
hlt
ss
rolb
aam
pop
pop
nop
arpl
stos
push
daa
mov
mov
mov
mov
imul
or
xor
or
jg
popf
sahf
pop
push
or
mov
or
and
mov
sbb
mov
pop
shrb
bound
rolb
sbb
cs
lods
mov
or
sbb
out
mov
mov
mov
and
add
push
filds
jo
xchg
js
jle
stos
sahf
xor
push
daa
bound
ss
out
lret
in
sub
lret
mov
mov
xchg
clc
or
out
jae
push
aaa
and
xlat
cs
adc
in
ds
jecxz
in
mov
sub
rorb
sbb
xchg
gs
fwait
aad
fimuls
shlb
ss
sub
pop
lods
jecxz
xor
xor
fcmovnb
shlb
int3
add
adc
inc
inc
pop
sarl
xor
adc
push
pop
sbb
mov
sub
sub
push
mov
outsb
cwtl
pushf
add
push
shrl
loop
cmpsl
ffree
inc
lock
adc
js
cwtl
mov
or
aaa
cmpsl
and
cltd
xchg
stc
or
add
test
rorb
sbb
xchg
insb
mov
mov
std
iret
jg
adc
shl
lret
or
dec
sub
dec
push
ss
into
ficomps
xor
out
mov
pusha
negl
repz
stos
add
lea
cmp
test
daa
add
xor
lret
pop
sarb
or
jmp
sahf
loope
mov
mov
or
testb
push
mov
shll
xchg
pop
xchg
sar
orl
lret
xchg
xrelease
add
pop
jl
jb
inc
jle
jecxz
sub
xorl
sub
jl
push
fs
movlps
pusha
pop
jb
push
enter
stos
and
jge
mov
mov
cmp
insb
xchg
inc
stc
lds
dec
mov
jle
adc
mov
xchg
pop
pop
xchg
jns
dec
mov
popa
andl
cmp
into
cmpb
jle
orl
xor
jne
sbb
fsubl
aad
mov
mov
dec
adc
jns
cmc
lret
jmp
cmpsb
lcall
or
filds
jmp
in
pop
nop
push
pop
jmp
inc
hlt
mov
aas
faddp
scas
mov
mov
lahf
mov
roll
ss
mov
outsl
insl
fists
xchg
negl
sti
repnz
push
pop
push
cmp
movsl
dec
dec
and
popa
nop
and
sbb
es
xchg
ljmp
and
pop
jmp
or
sub
xchg
jnp
add
aas
jbe
outsb
dec
and
add
sub
repnz
push
orl
sahf
push
pop
lea
call
cmp
pop
addr16
xor
dec
lea
pop
or
push
add
add
push
pop
pop
nop
mov
lahf
cmp
dec
push
xchg
pop
pop
cmp
test
js
xor
xchg
sbb
fbld
add
rorl
add
push
ficoms
rol
dec
nop
mov
cmp
mov
mov
stc
sub
sub
pop
xor
lret
pop
sub
jecxz
aad
imul
add
and
sbbl
sub
pusha
cmp
cmp
mov
jecxz
aam
out
dec
or
test
push
xchg
push
xor
pushf
and
or
mov
cmp
dec
sbb
sbb
loope
aaa
inc
aam
lcall
je
or
push
pop
mov
xor
adc
ja
mov
out
pop
sub
out
xor
cmpsl
addr16
xchg
jns
les
inc
rcll
add
aad
cmp
or
movsb
pop
fucomp
xor
lods
iret
add
int
jp
add
push
mov
fs
sti
jns
inc
push
inc
arpl
cmc
pop
or
jmp
enter
add
clc
sub
lock
add
sub
repz
jae
pop
outsb
xchg
arpl
push
rcr
sub
int
dec
cmp
and
leave
ja
ljmp
cmc
sub
sbb
movl
lds
cltd
sbb
cmc
in
sub
les
jmp
mov
test
mov
add
fadd
mov
dec
test
sbb
add
adc
jl
dec
aam
mov
or
sub
test
adc
rcl
and
cmpsl
aaa
pop
loop
xor
aam
push
xchg
pushf
out
push
cltd
cmp
enter
std
push
or
xor
add
fstl
sarb
fwait
dec
push
imulb
aad
ss
lock
push
sub
jae
jo
cltd
xchg
mov
shl
mov
loopne
cmp
rcrb
xor
icebp
je
add
mov
pop
adc
out
mov
imul
lret
out
jmp
test
mul
dec
push
xorb
pop
xor
cmp
pop
stos
push
and
dec
push
inc
cmpsl
push
push
sub
xor
dec
fdivr
add
gs
fidivl
bound
aam
ds
and
stos
out
test
cmc
loope
cmp
push
xor
mov
and
in
ljmp
add
sub
mov
push
and
stc
insl
cmp
outsb
or
inc
or
rcr
sbb
push
out
pushf
jo
dec
repz
push
cmp
jmp
fwait
aam
adc
lret
cld
adc
sub
cmp
addr16
stos
add
mov
jge
mov
push
cmpsl
jae
adc
cli
mov
pop
xchg
sub
loopne
lcall
or
sarb
data16
popa
mov
adc
clc
std
out
fdivrs
inc
cmp
push
mov
pop
xchg
jae
nop
dec
ret
inc
sbb
ret
xchg
rcrb
fbstp
cmpsl
mov
push
mov
mov
fs
push
xlat
dec
push
fnsave
mov
push
out
and
sub
push
test
add
movsl
xchg
into
dec
mov
sbb
adc
mov
adc
sbb
in
mov
or
mov
stos
sub
mov
gs
sbb
ficoml
loopne
jbe
test
out
adc
mov
pop
dec
aam
xchg
dec
and
insb
rcrl
and
clc
add
mov
pop
movsl
xor
aam
test
ljmp
mov
push
dec
mov
rclb
leave
ret
pop
inc
mov
add
adc
xchg
mov
dec
xchg
outsb
mov
jns
mov
daa
pop
jno
push
xchg
jb
push
mov
and
testb
adc
sbb
inc
xchg
jns
add
sub
cmc
js
jne
xor
mov
or
add
fs
sbb
in
jge
shrl
mov
fadd
mov
jg
std
sbb
sbbb
ljmp
filds
incb
lret
clc
mov
out
xchg
arpl
push
push
stc
shl
push
and
lret
and
insl
xor
fisubrl
dec
stos
push
inc
pop
fsubrl
shlb
cmp
mov
jo
jle
jbe
xchg
inc
mov
fstpt
clc
pop
sub
add
xchg
mov
jno
cmp
rolb
imul
out
xchg
jmp
loopne
rcrl
cmc
mov
das
push
jmp
xchg
dec
clc
loopne
jno
test
xchg
inc
insl
pop
js
pop
stos
ficomps
fdivs
in
cs
xchg
stos
mov
fldt
add
xor
js
push
in
sub
push
xchg
xchg
push
inc
sbb
push
inc
pop
jge
dec
stos
es
mov
and
lock
ds
xlat
mov
inc
fbstp
fstpl
inc
rcl
shrb
jne
out
add
push
mov
pop
out
mov
je
mov
dec
fnstcw
cmpsb
das
cltd
sbb
xor
loop
push
les
sub
cmc
dec
lahf
cmp
std
xor
sub
and
jecxz
push
push
push
stos
in
xor
inc
mov
lahf
push
inc
cld
jmp
inc
aaa
sub
add
rcrb
push
insb
inc
and
out
add
push
inc
push
outsl
add
jecxz
mov
add
inc
push
mov
leave
sub
xor
jne
push
mov
inc
cwtl
inc
xchg
xor
sbb
ja
pop
pop
push
jge
movsb
cwtl
aad
mov
lods
imul
jecxz
cld
int3
push
add
out
mov
fstps
and
idiv
jbe
or
test
cmpsl
lods
lds
movsl
adc
inc
loop
push
mov
clc
int
and
inc
mov
test
mov
mov
outsb
test
outsb
cmp
sti
cmp
or
sbb
jle
mov
jo
ret
push
pop
repz
fisubl
xchg
aam
mov
outsb
xchg
pop
mov
mov
mov
mov
mov
lods
xchg
xor
aad
lahf
add
dec
add
data16
pop
mov
push
aas
stc
adc
inc
pushf
push
push
lret
sub
mov
xlat
lods
jbe
das
jbe
xor
or
shr
ds
fcmovnu
adc
cmpxchg
fildl
gs
test
movsl
cmpb
add
lret
insl
mov
pop
xor
and
lods
push
dec
lea
mov
rolb
inc
push
adc
js
cmpsl
jl
pop
xchg
repz
data16
lds
and
xor
sbb
pusha
lods
out
push
ret
sub
xor
insl
mov
push
jle
xchg
out
add
cmc
pop
nop
push
popa
add
lods
or
sub
cmp
jae,pn
pop
push
aaa
xchg
js
das
hlt
mov
pop
invd
xor
sub
push
jo
push
push
mov
pop
cmpsb
push
std
jnp
and
adc
mov
xchg
adc
mov
jbe
cmp
stc
dec
test
scas
mov
popf
outsl
mov
dec
incb
sarb
ficompl
pop
jle
and
dec
iret
inc
mov
jl
jns
push
sbb
add
test
sbb
sub
cmp
call
and
inc
xor
dec
pop
arpl
adc
fs
ret
jno
aaa
xor
aam
xchg
sub
pop
sbbb
jle
fidivrl
addr16
jmp
stos
mov
pop
cltd
shrl
outsb
sub
push
mov
in
lods
and
js
icebp
in
subb
aaa
add
jne
fs
roll
sar
mov
or
mov
enter
movsl
ds
subb
sub
imul
jno
frstor
inc
stc
sub
mov
pushw
inc
pop
mov
cltd
lds
pop
xor
pop
clc
pop
and
ret
sbbl
and
inc
xchg
call
aaa
notb
clc
sub
xor
imulb
xchg
xchg
ljmp
int
jg
fcompl
nop
int
add
xchg
dec
push
sub
fs
rdmsr
adc
or
adc
and
mov
mov
mov
xor
scas
les
lock
xchg
adc
mov
nop
push
mov
test
add
ljmp
push
mov
xor
sahf
mov
ffree
pop
addr16
add
add
mov
test
out
dec
mov
jns
les
mov
fsubrp
cltd
pop
in
mov
out
imul
cmp
xor
add
mov
mov
pop
xchg
mov
gs
dec
mov
shrb
je
mov
jecxz
inc
push
push
xor
int3
xchg
mov
sub
sbb
aaa
or
sar
loopne
push
cltd
in
mov
jbe
in
loop
jmp
bound
imul
sub
xchg
jne
add
add
xchg
incl
or
cmp
pop
add
fstps
shrl
xlat
mov
int3
popa
xchg
pop
mov
popf
pop
lods
enter
arpl
rcl
pop
push
dec
or
fidivs
sub
cmp
add
out
jmp
push
mov
push
stos
movsb
inc
popf
jp
adc
adc
mov
and
dec
adc
sbb
adc
or
das
push
push
add
push
repz
enter
cmp
iret
add
and
xchg
jp
mov
jle
in
aad
test
jns
mov
gs
mov
push
scas
inc
jno
cmp
lahf
ss
adc
push
insl
cmp
pop
fldenv
mov
iret
xor
cmp
and
lods
pop
jmp
add
not
sub
or
pop
dec
pop
and
std
out
cmp
pop
push
aas
add
filds
arpl
pop
push
cltd
inc
push
mov
lret
dec
aas
jp
add
insl
lea
cmp
or
repnz
fisttpll
jnp
push
adc
je
jp
int
shrb
outsb
rcrb
adc
fsts
pop
sbb
sub
ja
push
daa
adc
test
pop
movsb
scas
gs
jle
incb
out
lods
fnstcw
xor
mov
stos
das
insb
shl
jo
test
mov
int3
jns
mov
or
sbb
bound
insb
popa
out
fucom
loopne
dec
popa
sub
cmp
fwait
aaa
jl
mov
xchg
js
dec
out
out
shll
mov
sti
add
sti
jo
lahf
or
dec
in
int
sti
push
jg
xchg
in
lods
jbe
push
jp
in
daa
fucom
ret
mov
enter
xchg
sbb
popf
and
push
test
mov
dec
std
pushf
pop
das
js,pn
cmp
sub
shrb
fwait
push
fs
xor
fadds
and
insl
gs
jle
mov
xchg
fisttpll
hlt
iret
mov
adc
dec
out
pop
pop
out
fwait
arpl
dec
cmp
add
xchg
xchg
popf
inc
mov
inc
in
add
mov
dec
popf
les
cmpsb
sbb
cmp
xor
mov
mov
mov
push
insl
mov
enter
aas
int3
cltd
push
f2xm1
je
ret
adcb
popl
inc
mov
sbb
cmp
dec
inc
into
out
sahf
cmp
cmp
sahf
outsb
fisttps
dec
rcll
cmp
inc
pop
in
enter
mov
push
push
sbb
inc
mov
stos
pop
cmpsb
sahf
outsb
loopne
fldln2
xor
call
in
adc
shl
jno
xor
mov
mov
mov
out
or
mov
std
sbb
cmp
mov
cmp
lods
loopne
dec
testl
push
lret
cmp
shlb
jno
cltd
insl
clc
push
pushf
stos
out
out
das
cwtl
adc
pop
sahf
fs
jne
aaa
xchg
repnz
push
sahf
mov
inc
sbb
add
mov
pop
outsl
sbb
xchg
adc
pop
mov
jns
inc
sub
andb
mov
fimuls
mov
jmp
push
inc
test
mov
dec
lcall
scas
inc
mov
push
mov
jo
jae
push
jg
mov
repz
rolb
add
mov
mov
imul
mov
test
adc
sbb
or
cmp
shll
or
xor
mov
push
testb
jecxz
dec
in
jmp
scas
dec
or
add
rorb
jo
or
outsb
inc
fs
out
imul
adc
ds
ss
ds
cmpsb
adc
ss
cld
je
lea
adc
fists
mov
and
cmp
and
sub
mov
cmp
mov
mov
fsts
xchg
xchg
inc
jmp
jbe
mov
xor
and
mov
inc
cs
aad
shrb
les
mov
xchg
movsb
sbb
frstor
push
fistps
pop
stc
pop
push
push
or
mov
mov
insb
sbb
mov
in
ss
andb
stos
aam
inc
inc
out
cmp
mov
les
sbb
scas
mov
push
nop
xchg
xor
ss
insl
imul
jnp
sbb
pop
lcall
xlat
sub
xor
loopne
pop
sbb
outsl
mov
loop
fsubrl
cmp
push
lds
mov
or
lea
in
stc
addb
dec
push
pop
negl
sub
mov
xchg
add
dec
ficoml
jge
mov
inc
push
insl
fwait
hlt
sub
lock
daa
js
sub
jno
pop
ja
lods
into
push
int3
pop
xchg
nop
movb
sub
repz
rcrb
inc
mov
leave
xchg
fmuls
mov
addl
sub
test
ds
push
jecxz
ret
push
pusha
faddl
mov
es
xchg
xchg
jo
adc
push
xchg
xor
dec
dec
imul
mov
jmp
mov
imul
and
mov
loopne
imul
mov
sbb
push
mov
cltd
cmp
and
sbb
js
mov
dec
adc
lcall
les
pop
in
insl
outsl
mov
sub
aas
stos
pop
movsl
pop
outsl
sub
lret
add
test
mov
or
jnp
jge
dec
arpl
sub
inc
push
rorb
cmp
push
xchg
in
insl
ljmp
es
arpl
mov
fdivs
push
in
xor
pop
xchg
ss
icebp
out
push
xor
stos
push
pushf
push
add
xor
jbe
pop
leave
out
or
inc
stc
mov
out
test
jnp
scas
or
push
aaa
sbb
pusha
stc
add
adc
cld
cltd
stos
imul
xchg
sahf
push
and
or
ljmp
lock
aam
stos
sub
loopne
mov
mov
call
xorb
aam
inc
sbb
push
imul
or
nop
ljmp
std
and
das
add
test
jo
mov
mov
es
cwtl
xlat
fs
rclb
aaa
lea
sub
pop
sub
cmp
mov
mov
repz
iret
cwtl
mov
and
sbb
mull
ret
stos
pop
data16
push
notl
stos
dec
out
daa
std
stos
jnp
push
call
cmp
sub
insb
enter
xor
cltd
inc
xchg
xchg
fisttpl
out
sbb
push
mov
test
aad
xor
faddl
mov
xor
cmp
out
sub
adc
sub
pop
cmpsb
mov
pop
mov
jecxz
movsl
scas
dec
test
or
stc
cmpsb
xor
stos
inc
dec
clc
mov
jmp
lds
lret
pop
pop
lret
clc
outsb
xchg
inc
int3
mov
hlt
sbb
cmp
and
sti
sar
or
ja
inc
and
jecxz
pop
stos
mov
dec
pushf
sub
jmp
xchg
mov
mov
insl
pop
ror
push
sub
rdpmc
in
mov
add
xlat
dec
gs
lcall
nop
adc
popf
adc
xchg
mov
sbb
mov
adcl
shll
mov
mov
pop
call
push
dec
sbb
sub
or
std
adc
adc
xchg
mov
xchg
dec
data16
mov
mov
ret
inc
sbb
lods
cmpsl
adc
mov
dec
or
lahf
inc
sub
addr16
or
and
fisubrs
xor
fldl
cmp
xchg
cmp
cs
and
fdivrp
jne
loop
and
shlb
push
fwait
mov
jns
mov
push
inc
adc
aad
sbb
xchg
cltd
xor
or
divb
cmpsl
jne
push
mov
jns
fmull
push
out
ja
jl
add
or
inc
lods
aas
aam
pop
mov
lcall
push
adc
mov
and
or
mov
xchg
out
stc
jno
add
pushf
jmp
divl
mov
xor
vmread
adc
jnp
dec
inc
push
jb
outsl
and
popf
ss
xchg
rcl
in
pop
cld
stos
and
inc
test
lret
imulb
cmp
cwtl
or
push
lods
xor
and
in
mov
gs
popa
gs
dec
sub
push
pop
cmp
pop
jecxz
mov
into
repz
mov
push
dec
jnp
xor
pop
mov
sbb
sub
or
sbb
ss
sbb
adc
rorl
and
hlt
fisubrl
or
lods
or
xchg
fld
icebp
xor
inc
pop
inc
mov
test
push
pusha
imul
clc
inc
ss
pop
and
lret
push
out
cltd
push
sti
icebp
xor
inc
fnstsw
ja
dec
jb
dec
pop
adc
xor
shll
pop
push
popa
jmp
jae
testl
pop
outsb
dec
aad
mov
xchg
push
push
ficomps
pusha
sbb
mov
test
inc
ret
cmp
in
cmp
inc
and
cmp
ficoms
mov
daa
faddl
ret
push
xchg
sub
scas
cld
mov
cltd
adc
pop
mov
stos
push
mov
inc
cltd
and
lods
cmp
push
mov
enter
adcl
int3
movsb
scas
dec
xorl
xor
fs
jno
xor
fsts
cmpsl
data16
popf
cmp
pop
sbb
sub
daa
lret
push
add
mov
push
arpl
daa
add
cmp
daa
lock
pusha
sbb
push
aad
fidivrl
mov
movsl
pushw
sub
dec
divb
std
sti
mov
mov
mov
hlt
enter
rcll
rcrl
xor
jb
push
mov
lahf
out
xchg
jae
and
jg
cmp
lds
add
jle
mov
xorl
ja
mov
jl
in
adc
lea
daa
movsb
sbb
aaa
into
sbb
pop
pusha
jno
xorl
dec
push
out
xor
cmp
rorl
or
mov
mov
mov
inc
adc
insb
sub
mov
sbb
aas
jp
jb
sub
adc
out
fs
push
pusha
popa
rcrb
addr16
data16
push
rcrb
les
fists
push
fidivs
and
push
leave
or
mov
ret
jmp
adc
inc
mov
xor
call
or
lret
mov
aad
pop
outsb
out
jp
pop
or
or
out
jmpw
adc
daa
or
adc
dec
jns
enter
dec
adc
popa
repz
xor
cmp
cmpsb
dec
out
pop
bound
aam
and
pop
lret
push
out
icebp
or
sar
dec
ja
mov
or
ret
pop
lahf
and
stc
inc
or
mov
sbb
fmull
lcall
push
cmpl
aad
xlat
xchg
pushl
imul
mov
push
lret
pop
mov
mov
fmuls
xor
pop
daa
and
enter
pop
pushf
jne
sbb
cltd
and
xchg
repnz
xchg
add
jb
movsl
out
fsubrl
push
inc
cmp
jbe
push
push
test
lahf
imul
fldln2
jae
cmp
dec
jle
mov
repz
push
cmp
or
leave
out
cltd
int
inc
je
sbb
sti
jo
mov
inc
enter
dec
dec
outsl
mov
sbb
addr16
sub
add
sahf
cmp
je
sahf
shlb
jge
hlt
aaa
add
inc
lret
mov
lret
xchg
dec
or
xchg
sub
inc
imul
aas
dec
dec
stc
xchg
dec
aaa
lds
jb
pop
out
ljmp
sti
push
push
sarb
stos
or
lcall
lock
pop
add
xchg
cmc
stos
mov
test
fldt
cmpsl
jge
or
call
mulb
call
insb
lret
jbe
mov
and
lock
repnz
mov
lcall
dec
adc
push
stc
jo
mov
dec
xor
arpl
sbbb
pop
int3
jns
cltd
inc
add
cld
in
pop
cmp
movb
push
push
add
icebp
xor
gs
sarb
push
inc
sbb
push
xor
mov
jmp
popaw
and
test
mov
sub
test
mov
jb
xlat
loope
cli
or
lods
lahf
iret
lds
fistl
int3
sti
jns
pop
cmc
leave
mov
jns
out
adc
xlat
cmp
clc
shr
mov
mov
and
mov
xchg
add
imul
sub
inc
pop
and
out
mov
xlat
push
dec
add
cli
mov
pushf
mov
cmp
or
adcl
test
push
cmp
add
scas
jmp
out
stc
insl
add
or
test
lahf
push
xor
cld
cmp
rcrb
push
jne
jnp
inc
in
pop
push
test
xchg
xchg
sbb
adc
push
jp
jp
or
addl
jne
jns
cbtw
into
xchg
jp
mov
pop
sub
dec
aas
insb
shrb
adc
cmp
pminub
lahf
push
scas
push
xchg
push
mov
add
xor
xchg
xchg
test
jg
mov
jb
cli
jge
ss
loope
loop
imul
add
xchg
scas
sbb
jae
aaa
stos
cmp
xchg
fildl
dec
outsb
aad
jmp
inc
lret
mov
jbe
mov
or
adc
movl
scas
testb
dec
ljmp
roll
test
add
jp
ljmp
or
xchg
faddl
loope
outsb
mov
insl
addr16
or
ret
adc
loop
aad
mov
mulb
push
scas
test
aam
mov
mov
gs
add
sub
mov
xchg
orb
int
mov
xlat
lret
adc
arpl
mov
fstp
clc
mov
or
jne
psllw
jmp
push
in
jo
xor
test
pop
cmpsb
dec
lret
in
imul
sbb
lcall
inc
call
ret
cmpsl
cmp
rcl
das
notb
cmpsl
pop
push
lds
and
or
lods
mov
mov
push
ret
mov
cmp
sub
adc
je
in
mov
jle
push
push
pop
mov
push
out
test
xchg
out
fdivrl
add
mov
sub
xchg
jns
nop
shlb
xchg
insl
ret
rorb
pusha
xorl
gs
pop
and
pusha
sbb
mov
frstor
or
fcompl
clc
aaa
das
lods
daa
pop
mov
rorb
dec
dec
push
aas
mov
xchg
daa
idivl
mov
adcl
rclb
xchg
pushf
imull
jns
fmul
lods
xchg
jl
fnstsw
and
cmp
call
fstl
and
mov
push
insl
out
cmp
pop
mov
or
push
fsts
mov
popa
movsl
push
repz
dec
xchg
pop
cmp
dec
inc
pop
rclb
call
lahf
jmp
xor
icebp
int
cwtl
data16
daa
push
lret
in
clc
push
movsb
or
les
xchg
adc
mov
scas
push
mov
mov
aam
xchg
push
pop
cmc
out
mov
jo
imul
xor
mov
jge
js
mov
cld
sbb
jge
movsb
ljmp
dec
test
cwtl
inc
shrb
ficoms
mov
sti
inc
hlt
cmp
dec
jg
push
outsl
bound
dec
lods
ret
jp
int3
int
or
push
jnp
mov
dec
jmp
les
cs
push
insl
or
add
or
inc
test
orl
jo
push
lcall
push
aam
mov
das
mov
mov
rol
lods
inc
mov
int3
mov
ss
xchg
out
in
lods
test
ret
jp
cmp
jge
flds
incl
sub
xor
mov
movnti
jne
ljmp
lahf
adc
imul
cmp
jge
les
cmp
push
outsb
xchg
push
mov
popa
arpl
jne
adc
into
ficomps
test
add
mov
push
inc
into
cmpsb
mov
ljmp
mov
and
sub
leave
xchg
and
call
or
pop
inc
push
jmp
cmp
and
sbb
enter
cld
and
lcall
inc
test
inc
stos
jb
jo
mov
jb
jmp
jae
js
into
sbb
loope
adcb
mov
sbb
pop
ljmp
inc
adc
arpl
cs
jbe
fnstenv
add
mov
cmpsl
and
mov
pop
dec
aad
in
mov
leave
sub
jecxz
xchg
xlat
shrb
movsb
sbb
cs
sub
push
sub
sahf
jb
cmpsl
xor
cmp
and
mov
xor
movsl
aam
insb
pushf
xor
data16
dec
bound
xor
std
out
jnp
data16
mov
rcll
fwait
jmp
push
cwtl
mov
cli
fwait
stc
divl
mov
fnop
push
popa
ret
cmc
mov
lahf
and
or
mov
pusha
mov
in
xor
mov
xor
push
std
pop
fwait
mov
jnp
mov
loopne
and
test
adc
xchg
sub
mov
mov
and
add
in
dec
pop
ret
mov
jno
fisubl
jecxz
jp
jb
mov
and
xor
xchg
fists
fiadds
mov
xlat
imul
push
jae
jno
xor
popf
andb
lods
push
jle
push
lcall
mov
neg
sbb
pop
or
cmpsb
mov
pop
hlt
lds
in
das
fdivs
dec
and
jns
fldenv
imul
into
pop
hlt
jle
push
xchg
sbb
xlat
fisubrs
test
lahf
jno
jbe
pusha
cmp
and
out
xor
pop
jl
out
in
xchg
lods
dec
fldcw
popl
add
and
sbb
sbb
out
cmc
cmp
inc
test
shll
aad
ja
test
outsl
sbb
lret
in
jns
or
cmp
scas
or
or
clc
jnp
mov
cmp
jne
enter
jge
mov
outsl
or
test
lret
leave
sbb
mov
cld
fucomp
shlb
popf
jmp
iret
mov
cmpsb
mov
xchg
lods
dec
jmp
std
lods
mov
lcall
xor
inc
cwtl
mov
int
ret
shll
cmp
push
bound
call
cmp
xchg
call
mov
sarl
sub
bound
int
jae
leave
pop
arpl
lret
mov
fisubrl
adc
imul
jle
mov
jno
adc
sub
lock
jb
xor
mov
sub
jne
sbb
or
stc
xchg
fnsave
mov
pop
sbb
lea
and
mov
shll
pop
push
and
mov
popf
pop
cwtl
mov
xchg
icebp
stc
loop
fdivs
mov
xchg
lds
dec
xchg
imul
out
jne
std
xor
clc
pop
adcl
jl
jb
repz
cs
push
lods
das
js
fcompl
or
ficomps
mov
xchg
inc
idivb
add
and
cmp
sub
cmpl
out
sahf
and
loope
fs
xchg
sahf
inc
jge
int3
sbb
xor
fisttpl
dec
sbb
stc
adc
cmp
push
or
shlb
lods
cmp
dec
adc
jle
push
inc
xor
cmp
fcomps
lea
jmp
testb
stos
sub
pop
in
or
aas
lods
push
mov
dec
xor
xchg
xchg
sub
lds
mov
xor
jo
xor
xchg
sbb
movsb
fsubrs
arpl
dec
jecxz
push
js
int
test
lcall
push
cs
cld
cmp
xchg
mov
dec
sbb
dec
es
cmpsb
pushf
cltd
aad
mov
adc
push
fwait
mov
adc
in
sahf
repnz
fsubrl
xor
mov
ret
jmp
ret
adc
xor
mov
imul
test
xchg
pop
xchg
xchg
mov
outsl
ret
mov
leave
pop
xlat
jb
callw
pop
mov
les
lret
add
adc
and
adc
mov
and
push
mov
jg
mov
cmp
mov
jno
mov
movsb
fimuls
jb
push
mov
test
cmpsl
xor
enter
ljmp
pusha
cwtl
imul
push
add
inc
addl
and
mov
fwait
cmp
cld
shlb
pop
mov
lods
jmp
cmp
add
push
mov
add
xchg
test
jge
xor
inc
xor
pop
jl
cld
test
xor
repnz
add
stos
inc
sbb
adc
adc
add
and
sbb
mov
les
sub
and
push
jge
lret
divl
dec
or
push
pop
icebp
jle
cmp
pop
push
mov
sbb
and
pushf
xlat
cld
enter
pop
out
mov
cwtl
jne
dec
sub
or
lret
push
xlat
adc
adc
mul
push
rol
push
out
pushf
add
rcrl
dec
xor
das
xchg
jge
insb
adc
int3
jbe
lds
xor
stos
out
movsl
and
aad
iret
lock
rol
frstor
stos
mov
test
jne
mov
fxch
ficomps
push
dec
mov
aaa
push
mov
ja
and
stos
and
iret
sti
inc
mov
sti
ret
push
xor
or
xchg
sub
mov
aam
cmpsl
ja
mulb
xor
gs
xlat
mov
cmp
pop
adc
jno
or
xchg
int
push
incb
inc
lret
cmpsb
fwait
in
sub
mov
outsl
je
mov
lods
pusha
cmp
mov
mov
mov
push
xchg
mov
inc
pop
jne
ror
and
loopne
lock
jae
lods
mov
icebp
mov
icebp
dec
scas
and
xchg
mov
addl
pop
scas
cmp
jmp
cwtl
imulb
int
cmp
jnp
jmp
or
add
sub
mov
push
cli
inc
mov
sbb
lods
cltd
sbb
fistps
iret
xchg
pop
push
push
pushf
jge
or
out
sbb
ret
pop
or
and
mov
xchg
dec
mov
mov
sbb
mov
ljmp
js
dec
lret
dec
sbb
mov
loopne
repnz
jno
mov
mov
div
mov
jg
fnstsw
add
test
jo
andl
pop
or
lcall
cmpsl
pusha
imull
sub
rcrb
push
cld
nop
mov
xchg
fst
ss
pop
inc
mov
cmpsl
dec
sbbb
cmpsl
repnz
xchg
mov
and
clc
test
test
stos
or
cmpsb
js
popa
mov
xchg
dec
sahf
addr16
pop
adc
or
xchg
cmp
lret
xchg
push
shll
orb
push
mov
pop
mov
cmc
je
daa
out
mov
add
cwtl
aas
mov
xchg
cli
mov
mov
fidivl
jno
jl
xor
pop
lods
or
imul
cmpsl
out
adc
popf
cli
pusha
pop
gs
fisttpll
or
mov
mov
arpl
bound
iret
inc
rorl
push
gs
mul
std
cld
mov
mov
jbe
push
pop
out
outsb
add
mov
mov
xchg
mov
shl
enter
aad
add
addr16
nop
scas
push
pop
daa
push
dec
jmp
daa
ret
push
sbb
jo
sbb
and
test
imul
inc
pop
cmp
ret
push
sahf
mov
movsl
jl
mov
jl
sbb
xor
jo
loopne
mov
or
in
int
lds
das
je
aam
lret
and
xor
inc
push
inc
push
fldt
iret
pop
sub
mov
adc
push
fnstenv
jbe
xchg
add
and
fildll
cwtl
loope
jbe
adc
jns
mov
into
lods
jnp
xchg
loopne
mov
xchg
jle
adc
nop
das
cli
mov
lcall
jb
in
dec
popa
cmp
push
dec
ret
sub
insb
mov
in
es
sub
push
xor
sahf
test
cmp
mov
jno
pop
pop
xorb
dec
es
gs
ret
mov
add
xlat
xor
fildll
pop
xor
xchg
fidivrs
or
inc
push
sub
dec
lods
es
cmp
pop
stc
add
ja
dec
push
jmp
imul
push
dec
adc
push
jle
pop
mov
mov
in
jbe
lcall
xor
inc
mov
scas
clc
loopne
ds
xchg
mov
ss
or
and
imul
or
lods
imull
sahf
test
adc
cmc
int
outsl
pop
sbb
loop
movsb
rcrl
sub
js
jge
mov
dec
imul
fsubs
add
outsl
cmp
xchg
cmp
ds
arpl
xchg
pop
std
mov
add
cmp
cmpsb
cmp
jbe
add
sbb
shll
lods
and
xor
mov
arpl
out
adc
xor
pusha
shl
jb
clc
pushf
cwtl
and
mov
ret
mov
ljmp
sub
add
jae
add
sub
jae
pshufw
inc
je
add
movsl
andb
mov
inc
fnsave
popa
adc
add
or
and
jb
std
insb
rorb
iret
test
cmp
cmp
push
mov
xor
int
inc
dec
ja
sarb
loop
dec
inc
clc
mov
mov
cwtl
xor
cmp
aad
jp
xor
aaa
dec
insb
push
mov
ret
dec
mov
mov
mov
call
cld
int3
imul
out
inc
lock
pop
jp
sti
pop
mov
aam
repnz
inc
popf
shlb
rorl
roll
dec
or
adcl
scas
push
bound
sti
cmp
iret
sub
arpl
sub
in
sbb
and
arpl
cmp
rorb
ret
push
jg
mov
push
clc
shlb
add
push
sbb
cmp
addl
pop
and
pop
adc
push
pop
jl
out
out
xchg
push
add
mov
bound
and
bound
pop
jbe
test
adc
xchg
aas
in
cmpsb
mov
cmp
in
mov
mov
std
dec
mov
mov
or
or
push
repnz
inc
push
loope
inc
mov
daa
ret
leave
mov
filds
bound
bound
jg
inc
adc
jmp
xor
ret
ret
push
out
out
xchg
scas
mov
int
or
fs
push
pop
sbb
xchg
repz
mov
sahf
fmull
sub
out
test
nop
lret
mov
jg
gs
xor
gs
mov
rcll
into
into
in
sub
pop
jne
popf
imul
scas
push
sub
js
add
fldt
mov
cmp
rol
movsb
mov
push
push
mov
push
inc
pop
loopne
push
jno
pop
pushf
pop
adc
loopne
loope
cld
add
jp
std
outsl
mov
jns
in
das
mov
sub
iret
bound
sar
cmpsb
lahf
hlt
fcompp
mov
mov
jno
stc
addr16
or
jae
mov
mov
enter
pop
dec
lea
xchg
xor
test
sbb
aam
dec
sub
in
inc
xchg
test
ds
cltd
nop
jp
mov
push
pop
adc
scas
sub
add
pop
pop
out
add
out
add
les
push
push
outsl
js
xlat
jb
dec
jb
mov
mov
lcall
xor
jge
sbbb
jle
fimull
jne
fsubl
bound
loop
ljmp
push
ficoms
sbb
icebp
out
mov
ret
addr16
xchg
fucomip
rorl
jecxz
imul
iret
ss
scas
xor
and
outsl
dec
jle
or
xchg
test
mov
gs
les
clc
rcr
mov
out
push
xchg
mov
and
test
inc
xor
xchg
cmp
into
mov
jp
out
in
mov
xor
cmp
out
imul
fistl
sub
xchg
add
fidivrl
in
mov
xor
xchg
add
pop
push
and
xor
mov
movsl
mov
jns
pop
mov
int3
repz
jmp
lds
repz
cwtl
xor
pop
mov
mov
pop
lods
subb
fwait
sbbl
pop
je
and
icebp
mov
aad
push
loope
lret
and
inc
or
push
shr
popf
int
xchg
insl
and
and
mov
mov
cs
jl
xchg
push
or
inc
subb
push
orb
cmp
pop
pop
dec
ds
lds
pop
cwtl
cmpsl
sbb
xor
cmp
add
sub
xchg
pop
sahf
pushl
popa
das
mov
jne
int
or
or
aam
pop
adc
ret
jl
lret
inc
sbb
mov
adc
adc
xacquire
enter
das
mov
xor
inc
jbe
aam
inc
pusha
mov
das
ds
inc
movsl
inc
and
in
jmp
mov
stc
dec
lods
dec
nop
jb
std
dec
jnp
push
andb
pop
add
inc
mov
dec
leave
outsb
pop
push
scas
adc
jne
fldenv
aad
dec
sbb
dec
jle
test
cmp
stos
aaa
scas
or
and
inc
ss
mov
outsl
pop
pop
hlt
in
fisubs
sti
xchg
lods
jae
add
or
inc
pushf
in
arpl
test
outsl
loope
in
pop
je
pop
js
xlat
or
jbe
sahf
push
pop
sbb
stos
flds
push
cmp
movsl
shrl
adc
cli
jecxz
aaa
nop
sbb
adc
push
aam
divl
test
imul
inc
xchg
mov
insb
ret
dec
mov
pop
lcall
ds
shrb
sahf
shlb
rcrl
jge
push
mov
data16
jbe
test
push
sub
mov
in
push
cltd
dec
clc
pop
nop
imull
ljmp
call
add
xchg
push
add
dec
xor
sub
fchs
inc
xor
inc
pop
sbb
cltd
pop
mov
cld
mov
outsb
cmp
pop
sbb
mov
xchg
or
jecxz
and
sbb
mov
in
movsb
repnz
xchg
dec
push
gs
jno
repz
cmp
add
xor
mov
add
add
fstps
jecxz
iret
pop
mov
rclb
push
xor
test
or
pop
xchg
popw
ror
push
mov
loopne
xor
xchg
aad
adc
or
and
or
cmp
pop
bound
sub
lahf
xchg
dec
add
inc
filds
lock
lahf
clc
hlt
pushf
in
test
rorl
jle
adc
shll
and
pop
inc
addr16
into
jg
fwait
orb
mov
movsb
leave
sahf
mov
sbb
addl
push
jp
icebp
ss
mov
scas
mov
dec
sbb
sub
loope
and
dec
add
into
fisttpl
test
sbb
mov
xor
and
fwait
push
xchg
inc
jae
fistl
mov
mov
and
in
fcoml
es
dec
pop
inc
add
clc
fistps
dec
xchg
mov
orb
fcomip
push
mov
out
lcall
ret
sbb
je
sbb
cmpsb
fsts
mov
addb
mov
out
mov
xlat
int3
lcall
mov
dec
sbb
mov
imulb
and
pop
jp
stos
pop
mov
add
cmp
fisubrl
rcll
dec
add
cs
test
sarb
pushf
pusha
bound
mov
scas
add
mov
push
pop
push
nop
daa
fwait
sbb
fsubrs
inc
jge
notb
icebp
pop
insb
bound
add
add
mov
push
mov
aas
xor
push
push
popf
add
or
arpl
xchg
ffreep
and
mov
or
rcrb
or
xchg
iret
dec
mov
mov
loope
sbb
out
int
lcall
bound
dec
mov
ret
scas
pop
xor
add
shl
cmp
push
add
test
shrb
lock
mov
ss
popf
pusha
lret
cmpb
loope
rolb
jne
dec
and
cmp
mov
hlt
jns
call
rorl
icebp
mov
mov
pop
add
xchg
ret
dec
fwait
pop
pop
sub
out
mov
mov
or
push
xlat
lret
pop
cmp
out
fbld
dec
add
clc
cltd
cmp
stc
sub
stos
js
lds
mov
adc
bound
mov
insl
mov
int
and
andl
out
xor
loope
stos
jo
dec
incb
jae
lret
data16
adc
cmp
dec
lods
mov
iret
push
pop
inc
or
int3
int3
cmp
in
pop
inc
mov
jecxz
pop
in
jne
xor
inc
aad
mov
imul
lret
ret
cmp
pop
xor
lahf
cs
daa
mov
xorl
cli
or
insb
arpl
pop
sub
cltd
leave
into
call
inc
sub
mov
mov
jne
ret
jne
sti
fidivrl
insb
inc
imul
sub
cltd
dec
dec
or
mov
stc
daa
inc
jecxz
add
es
adc
cltd
stos
outsb
flds
pop
lock
shlb
mov
push
out
ss
xchg
jmp
mov
cwtl
es
xor
mov
push
sub
dec
sub
aaa
icebp
dec
mov
sbb
sbb
or
sbb
and
stos
cltd
add
mov
insl
leave
xchg
or
cmp
cltd
sub
mov
push
lds
loop
inc
cmp
push
mov
add
imul
sti
loope
adc
or
or
lea
mov
repz
pop
xchg
ds
fwait
jmp
sub
push
inc
bound
push
insb
flds
cmp
mov
test
outsb
cmp
cmp
dec
and
sbb
test
fnstsw
sub
xchg
addr16
xor
pushf
inc
jmp
or
add
push
rorb
addr16
sub
fstpt
shlw
imul
xchg
call
lret
sarb
push
sbb
ret
inc
leave
je
and
jge
mov
mov
xchg
fs
and
pop
pop
mov
cltd
inc
mov
in
bound
inc
rolb
enter
adc
pop
sub
fdivrs
movsl
jne
add
lahf
xchg
jb
sbb
jne
fcompl
sub
lock
mov
out
pop
mov
pop
and
clc
shll
adc
push
mov
inc
pop
jge
dec
pop
repz
mov
adc
jl
xor
lret
iret
xlat
mov
std
pop
pop
lret
sub
or
loopne
xchg
dec
int
idivb
ljmp
xor
loop
sbb
in
mov
pop
shlb
pusha
sti
mov
adc
mov
jnp
dec
dec
cltd
nop
lret
ljmp
jns
cmp
mov
testb
mov
jl
mov
and
and
mov
in
pop
sub
int3
add
inc
popf
xor
sbb
test
aam
push
push
inc
cs
hlt
flds
or
adcb
and
pop
xlat
icebp
dec
push
pop
cmp
pop
clc
lock
mov
imull
xchg
mov
xchg
sbb
pop
daa
mov
jbe
aad
xor
cmpsl
xchg
test
jp
fcmovu
jle
xchg
sbb
pushf
or
insl
sbb
add
xchg
dec
mov
adc
insl
and
fistpl
adc
clc
call
dec
cmpb
in
mov
push
pop
add
lods
pop
in
test
cmpsl
loope
fsts
mov
inc
scas
jmp
jo
jmp
sbb
jecxz
jg
push
out
xor
sbb
adc
aas
jae
mov
xlat
jmp
lret
xor
adc
push
rorl
stc
mov
mov
das
pop
mov
in
pop
test
incl
fidivrs
aaa
xor
jne
jo
mov
dec
pop
mov
int
mov
in
cmp
repnz
inc
xor
test
jb
ljmp
add
movsb
mov
mov
sbb
and
ficoms
inc
pop
fdivs
jge
fnstcw
sbb
add
ffreep
fnstcw
adc
adcb
andl
ret
mov
cmpsb
mov
bound
cmpsb
loope
cmp
lock
pusha
rorb
push
jmp
xchg
push
sub
jg
test
sub
mov
fstpl
push
sbbl
fldpi
dec
cwtl
jnp
mov
jbe
sub
stc
xchg
int3
gs
arpl
jl
sbb
jne
push
ljmp
addl
and
push
inc
faddp
rol
in
mov
or
xlat
in
and
lock
lret
jnp
movsb
cli
push
cltd
xor
xorl
xchg
insl
push
mov
das
stos
dec
jno
je
push
mov
push
push
push
push
jg
add
xlat
push
xlat
pop
outsl
pop
inc
mov
push
pop
mov
sub
sub
es
pop
shlb
pop
int
pop
out
in
pop
cmp
lcall
dec
dec
jae
and
mov
add
jl
pushf
shlb
mov
inc
add
mov
adc
sbb
mov
sub
mov
push
inc
pop
sahf
in
add
mov
xchg
xadd
add
lea
dec
mov
lahf
int
shl
jno
push
sti
fadd
bswap
enter
xor
jno
test
mov
lods
ja
stos
fwait
arpl
mov
mov
roll
into
cmp
mov
sub
cld
cmp
js
aaa
sub
test
in
adc
sub
outsb
out
popa
cld
fiadds
pinsrw
pop
clc
jbe
adc
jmp
cmp
outsl
xlat
test
out
cmp
adc
jns
jg
inc
push
cs
icebp
add
mov
inc
mov
or
cmp
dec
mov
aaa
xor
mov
sub
bound
std
push
sub
mov
jbe
push
inc
xor
sbbb
cmp
out
pop
fisttpll
lock
jnp
sub
or
pushf
lods
lcall
or
ret
ret
sub
iret
inc
fs
rorl
xor
decb
mov
mov
lret
cmp
sbb
jg
movsb
rclb
or
js
je
pop
push
adc
lock
dec
pop
and
dec
xchg
xor
lret
aas
mov
push
xchg
xlat
mov
cltd
popf
lret
lret
lret
bound
mov
dec
outsl
and
mov
mov
mov
add
dec
inc
cmp
mov
ja
sub
sbb
fdivl
ljmp
sar
jle
out
imul
pop
xchg
add
xor
icebp
cwtl
mov
push
test
jne
mov
push
int3
jo
mov
cwtl
cltd
sbb
push
add
lods
xor
test
dec
call
jne
nop
xchg
roll
add
xchg
pop
sub
mov
mov
cmp
aas
aas
rcrl
notb
mov
xchg
pop
fdivrs
dec
lods
push
dec
and
int
imul
insb
pop
test
xchg
pop
mov
pop
sub
rcl
in
add
popf
add
cmc
popa
js
movsb
cs
jb
xchg
inc
cld
mov
push
mov
movsl
inc
mov
int3
push
shlb
or
push
scas
js
jns
or
pop
cld
cmp
inc
jl
or
pop
sbb
sti
movsl
in
xor
xor
mov
cltd
pop
add
roll
and
xor
adc
ss
jnp
imul
daa
movsb
push
sub
mov
cmpsb
jo
insb
ret
fdivl
test
xchg
ret
xchg
adc
add
push
stos
clc
jns
std
repnz
mov
daa
lret
outsb
xchg
cs
outsl
adc
test
ds
ret
fstl
mov
adc
das
int3
mov
add
pushl
jbe
xlat
test
jbe
negb
mov
and
pop
sbb
popf
lahf
sub
insb
leave
xor
jecxz
or
pop
add
je
dec
sbb
out
movsb
in
out
sarl
sahf
cmpsl
jns
jmp
push
dec
add
xor
mov
in
push
into
dec
inc
push
orb
ljmp
aad
xchg
outsb
arpl
or
inc
aam
sub
xor
sub
mov
pop
xchg
jbe
sub
push
hlt
jno
sub
pop
sub
mov
jne
int
jg
lods
pushf
mov
sarl
mov
or
jno
mov
xchg
adc
loop
mov
popa
fsts
cltd
cmp
jp
xchg
mov
sti
adc
xchg
addr16
push
pop
mov
es
sub
lock
mov
cmp
mov
xor
insb
jecxz
jp
test
mov
call
mov
jbe
out
sbb
repnz
ficoms
sbb
mov
sub
xchg
mov
jnp
inc
inc
lds
jo
dec
or
arpl
dec
fldenv
in
push
jl
adc
pop
inc
jbe
push
push
pop
rorb
push
push
out
cwtl
push
sahf
cmpsl
mov
sub
or
mov
sbb
mov
movsb
addr16
and
or
out
stos
inc
add
test
int
add
lods
fmuls
out
mov
pop
sbb
sbb
mov
enter
mov
iret
xchg
and
out
sub
mov
adc
aam
daa
or
vpsadbw
mov
daa
mov
repz
add
mov
scas
mov
xchg
pop
lds
les
test
lret
clc
test
shll
jbe
mov
push
cwtl
cmpsl
fwait
icebp
jns
sbb
das
cmp
push
push
pop
sub
dec
out
rcrl
xor
dec
mov
ret
xor
in
jp
scas
repnz
sbb
cmp
xor
leave
fimuls
clc
mov
mov
iret
loopne
mov
and
jge
jg
cli
icebp
dec
pop
push
pop
pop
fwait
sub
cmp
les
jbe
xor
mov
and
leave
add
pop
push
notb
xchg
or
incl
pop
stos
push
mov
jnp
sub
adc
cmp
lret
add
inc
rolb
sarb
mov
mov
mov
sub
jb
outsb
out
jg
cmpsl
outsb
dec
pop
ud2
or
aas
jo
or
fidivrl
lahf
or
xor
pusha
sbb
arpl
mov
es
inc
pop
ljmp
bound
pop
repnz
clc
ds
and
sub
push
gs
adc
sbb
mov
inc
ja
sbb
mov
dec
enter
cmp
popa
lahf
cmpsb
adc
add
pop
mov
adc
fnstcw
incb
sub
out
or
or
loopne
push
push
inc
clc
in
loope
sub
add
or
mov
or
dec
jnp
jge
mov
or
mul
dec
ret
fdivl
bswap
sub
fsubrs
in
es
idivb
daa
lods
mov
dec
ja
loop
jnp
add
xor
cltd
inc
shr
add
imul
pop
int
jae
add
loope
outsl
sbb
pop
clc
or
xchg
sarb
mov
adc
xchg
aas
jmp
pop
adc
mov
mov
lcall
fstpl
inc
inc
mov
xchg
pop
lds
mov
or
mulb
ja
cmpsb
cmp
imul
adc
js
pushf
lods
dec
pop
scas
dec
int3
xchg
je
mov
mov
xchg
push
mov
fs
and
inc
mov
sbb
mov
sub
sbbb
sbb
ret
stos
ror
cmc
jae
push
mov
loope
mov
mov
mov
dec
xchg
push
pusha
mov
js
inc
mov
mov
int3
mov
pusha
cmp
in
ret
cmc
incl
jb
xchg
xchg
mov
push
cmp
mov
sub
shlb
arpl
ret
inc
insl
mov
pusha
into
pop
sub
cmp
inc
lods
rcrb
mov
push
sub
mov
push
fldcw
inc
enter
fsubl
iret
dec
mov
cmp
les
outsb
mov
cmpsl
jp
int3
pushf
mov
sbb
push
rclb
movsl
mov
push
add
shll
test
jge
inc
xor
pop
jno
pushl
push
sahf
movsb
arpl
inc
xchg
insb
xlat
add
pop
jg
or
mov
pop
shlb
cli
fsubr
pop
cmp
mov
sti
xchg
in
stos
inc
sbb
push
popf
or
pusha
in
repnz
clc
jp
stc
jg
test
outsb
dec
or
xchg
push
pusha
xchg
dec
hlt
add
jno
cmp
test
aaa
and
out
mov
sahf
mov
add
inc
fsubrs
notl
push
int
jae
insl
test
push
dec
cmp
jge
dec
cli
test
fstpt
fildl
shl
add
inc
xor
jbe
in
add
xorb
sub
add
das
xor
lods
adc
jo
mov
cmc
cltd
or
shrl
sbbl
jns
aaa
mov
out
scas
pop
or
mov
cmp
jmp
jmp
inc
fwait
imul
jno
and
pushf
mov
sub
inc
dec
push
adc
lea
inc
nop
sub
cmp
cmpsl
pop
ret
dec
out
std
pop
or
aad
dec
testb
cmpl
mov
cmpsl
mov
repz
jmp
and
and
jg
xchg
add
cltd
sub
inc
clc
jae
jg
scas
test
std
mov
leave
maxps
aad
dec
in
cmpsl
add
jns
push
test
lock
fimuls
sbb
fsubrs
mov
test
add
jnp
roll
xor
bnd
push
stos
sbb
cmc
stos
ljmp
out
lock
push
ret
int
lahf
fisubs
lods
or
push
mov
ja
add
mov
mov
jmp
fildl
pusha
push
xor
pop
out
inc
adc
dec
sub
fiaddl
mov
in
cmc
adc
cmp
icebp
pop
dec
sbb
and
and
push
insl
stc
cld
dec
in
ljmp
test
jg
and
push
addb
xor
es
jno
lods
ss
adc
nop
push
jp
ljmp
push
cmpsl
mov
lock
stos
and
push
push
sub
pop
rorl
or
repnz
mov
inc
cmp
les
pop
push
jo
pop
daa
loope
xor
call
pushl
sbb
in
add
in
cmp
cwtl
stos
xor
adc
pushf
and
dec
out
ljmp
icebp
dec
cs
lock
inc
sbb
mov
not
mov
mov
fidivs
imul
scas
mov
cltd
cs
int3
jbe
sub
and
and
aas
jnp
xchg
xor
push
cwtl
pop
iret
sbb
pop
adc
jns
or
test
aaa
out
dec
inc
mov
cli
pushf
push
clc
xchg
outsb
cmp
fwait
into
shl
ret
sysexit
rorb
sbb
cmp
dec
or
ss
ret
stos
jmp
pop
push
mov
mov
mov
inc
cmp
js
or
push
sub
mov
push
xchg
mov
mov
lret
push
ds
mov
push
out
pop
inc
movsl
pop
inc
into
or
in
pop
aas
test
cmp
cs
in
xor
add
mov
dec
push
push
inc
and
outsb
sbb
fsubrs
addr16
pushf
inc
scas
dec
xor
pop
daa
xchg
stos
lods
xlat
nop
inc
in
push
scas
add
jge
aam
inc
rclb
fs
aaa
pop
loopne
movsl
or
mov
out
rorl
fisubrs
cmc
outsb
push
fnstenv
and
sub
iret
xchg
dec
pop
mov
mov
mov
push
lret
fadds
xor
lcall
pusha
ss
push
pop
adc
sahf
arpl
adc
ret
pop
mov
cltd
sbb
insl
pop
fwait
in
call
out
sub
or
xor
dec
xchg
leave
leave
adc
ljmp
push
gs
pop
inc
xor
insl
fldenv
lcall
sub
and
fcmovnb
adc
mov
mov
in
or
or
dec
shll
fwait
repnz
ret
cli
mov
cwtl
insb
movb
bound
push
adc
xchg
adc
lret
loop
mov
fdivrl
push
add
sar
or
mov
test
cltd
mov
loope
jnp
sbb
daa
shll
lret
dec
add
mov
nop
dec
jmp
test
push
je
lret
and
sbb
ja
xor
push
nop
clc
mov
lea
pop
ss
test
out
add
lahf
repnz
or
and
mov
or
push
mov
cltd
cwtl
test
cmp
stos
stos
dec
add
test
dec
sub
jno
sbb
pop
clc
push
out
fimuls
fwait
sub
sbbb
pusha
cli
push
adc
insb
stos
mov
ss
cmpsl
sbb
cmp
mov
insb
ja
test
sub
sarl
push
stc
lea
add
xorb
xchg
push
faddl
cmp
adc
int
popf
push
test
mov
popf
add
add
adc
mov
pop
adc
imulb
mov
xchg
pop
xor
pop
mov
movsl
les
and
dec
jp
psrld
push
fwait
pusha
das
pop
ret
je
mov
data16
add
imull
shll
lods
fiadds
out
mov
stos
in
and
mov
dec
jno
mov
stc
lret
lret
xchg
sti
sbbl
lret
stos
ret
xchg
xor
mov
and
push
jae
pop
adc
fmull
pop
xor
cs
inc
movsb
adc
mov
test
ficomps
sbb
mov
push
data16
lock
aaa
sub
or
imul
xchg
inc
outsb
out
cmpb
jg
data16
call
pushf
and
call
cmp
sbb
push
sub
or
scas
movsl
imull
fstl
fdivp
mov
dec
loop
insl
pop
sub
aam
mov
push
ds
in
add
xchg
jo
adc
add
das
cmp
mov
outsl
jb
mov
and
push
xchg
jnp
fldt
adc
movsb
lds
inc
push
test
lock
repz
das
sub
daa
jp
hlt
jbe
adc
mov
push
out
out
adc
call
loopne
jg
shl
sbbl
mov
mov
popa
jno
dec
cmp
stc
push
ds
or
push
ss
dec
std
sub
pusha
test
push
in
dec
pusha
push
aad
jne
shll
imul
lods
lcall
jbe
aad
add
out
mov
rolb
push
daa
mov
mov
sbb
aad
add
lret
fwait
icebp
cmp
popf
pop
in
loope
es
lds
repnz
out
shll
mov
jle
cmp
push
or
cmc
aaa
cmp
dec
mov
dec
jnp
mov
int
repz
add
mov
and
adc
mov
mov
push
movsb
lret
pop
div
jbe
adc
mov
jge
aad
sbb
loop
inc
xorb
and
mov
in
mov
inc
out
jle
pop
sub
or
shrb
lea
adcb
push
cmp
rclb
inc
add
push
fisubs
and
shr
cmc
mov
sub
mov
cmp
push
out
lahf
adc
mov
fwait
iret
insl
mov
sbb
cmp
or
ret
adc
pop
push
dec
sbb
xchg
pop
jne
add
add
cmp
scas
pop
hlt
mov
mov
rorl
ljmp
jbe
add
sub
sbb
sbb
inc
or
push
pop
jns
lods
pop
ret
mov
jnp
push
adc
push
ret
and
push
pop
inc
pop
addr16
and
add
lds
jmp
shrb
xor
outsl
jae,pn
scas
or
pushf
ret
cmc
hlt
ret
inc
cmp
test
inc
push
shrb
in
mov
pop
arpl
icebp
pop
pop
jb
adc
lea
cs
arpl
scas
push
add
xchg
pop
cld
cltd
inc
mov
and
xchg
inc
push
xchg
scas
xlat
outsb
adc
shl
lret
pop
push
mov
mov
mov
arpl
inc
jle
jb
outsl
aas
cld
stos
cmp
push
add
cs
ficompl
loopne
push
ljmp
lret
cmp
mov
and
mov
loop
lret
sbb
in
lcall
leave
mov
pop
pminsw
je
or
out
sbb
jg
sarb
cmp
mov
aad
dec
mov
xor
loop
push
lods
inc
mov
roll
lods
push
loop
dec
inc
and
enter
fwait
scas
fsubl
mov
jg
ds
push
adc
push
loop
xchg
repz
cli
xchg
add
movsb
jmp
lahf
xor
mov
cmp
push
add
dec
arpl
fdivl
cmp
push
out
jle
int3
in
lahf
lock
int3
scas
sub
and
test
in
add
enter
mov
fwait
cld
push
pushf
or
mov
cmp
repz
repnz
jle
inc
jle
inc
and
rcrl
sub
pop
pop
sbb
sbb
jae
and
cmp
pop
lock
dec
mov
mov
mov
jle
xchg
nop
pop
mov
jns
cltd
in
sbb
xchg
movsb
out
ja
push
dec
insl
fdiv
jmp
dec
jae
push
xchg
dec
std
int
out
inc
insl
cs
jecxz
hlt
dec
pop
les
cld
lods
sbb
mov
addl
push
cmp
add
filds
lahf
pop
and
testb
mov
jo
lods
stos
dec
out
lds
xor
in
sahf
adc
das
in
xchg
sub
push
sarl
mov
repnz
sbb
adc
inc
shll
xchg
xchg
roll
fs
dec
inc
scas
rcll
pop
cmp
call
lds
sbb
mov
jno
lret
dec
lea
xor
pop
mov
repz
jne
loop
insb
ret
push
push
mov
das
test
sti
imul
pop
nop
std
mov
mov
mov
mov
push
jb
bound
clc
imul
mov
movsl
mov
icebp
pop
push
inc
mov
adc
and
sub
addr16
pop
push
add
mov
push
or
fimuls
push
das
sbb
mov
or
sbb
cmp
nop
ds
push
mov
pop
rorl
dec
jbe
cmp
fdivrl
out
std
out
negl
jecxz
mov
je
arpl
or
sbb
xchg
jg
sbb
cmp
pop
cmpsb
xchg
lods
mov
cld
stos
fsubl
pop
fwait
add
testl
mov
pop
inc
repnz
jmp
mov
scas
inc
mov
lea
xor
xchg
pop
inc
call
xchg
mov
daa
cld
pop
push
mov
call
pop
pop
out
sbb
loopne
rcrl
pop
out
jp
aaa
sub
inc
sbb
cmp
cli
sub
dec
sub
dec
push
outsb
jl
negl
pop
mov
xchg
cmc
jns
ss
arpl
adc
sbb
mov
mov
or
push
aam
rcr
inc
lds
push
imul
icebp
pop
add
inc
sub
daa
sub
fwait
mov
sbb
inc
add
cs
xor
sarl
jne
pop
scas
je
jbe
fnstcw
cld
fdivp
or
dec
add
jecxz
stos
xor
dec
jecxz
push
fcoms
and
xchg
xchg
sub
sbb
cwtl
jmp
inc
jmp
push
jno
scas
mov
sbb
sbb
call
sbb
fcmove
sahf
cmc
xchg
sbb
pop
repnz
iret
idiv
mov
cmp
movsb
mov
xchg
dec
push
neg
pop
jl
sahf
cmp
loop
insl
adc
ficoms
les
cmp
aaa
mov
mov
bound
inc
sub
repz
mov
popa
mov
and
rolb
sub
and
lods
fcoms
cmc
mov
fwait
addb
sbb
cmp
sti
pop
lret
sbb
in
insl
jp
mov
cltd
out
test
shrb
into
and
insb
mov
mov
fistl
ljmp
mov
out
jnp
test
adc
push
icebp
mov
imul
loopne,pt
add
pushf
stos
call
movsb
push
arpl
mov
les
ret
shl
jl
dec
xlat
dec
repnz
rcrl
mov
lods
push
cmp
pop
xor
lock
jbe
cli
jl
lcall
outsb
lods
push
outsb
or
pop
mov
into
shll
shlb
xchg
push
pop
fisttps
addb
inc
sub
mov
and
xorb
insb
adc
lret
adc
mov
push
inc
xchg
icebp
mov
pop
dec
add
push
insl
jl
jg
je
inc
xchg
insb
icebp
dec
andl
sub
lods
imul
andnps
pop
fwait
rcrl
pop
movsw
insl
mov
push
mov
iretw
adc
arpl
in
xor
pop
shrl
jg
shll
das
out
icebp
dec
pop
dec
test
add
push
jnp
push
xchg
cmp
clc
cld
jmp
push
adc
or
mov
ja
xor
dec
inc
jmp
in
xchg
cmpsl
fiadds
out
rcr
push
mov
push
das
stos
push
aas
push
dec
rorl
xor
mov
subb
dec
out
in
mov
pop
mov
test
int3
or
daa
push
inc
call
mov
mov
mov
mov
lods
xchg
mov
push
repz
fnstcw
push
cmp
bound
dec
mov
lret
adc
inc
dec
loopne
lcall
sub
stos
aad
loop
jle
cmp
mov
sub
mov
test
and
bound
dec
call
ret
fistpll
xchg
mov
repz
xchg
movsb
push
mov
lods
adc
lahf
arpl
mov
mov
imul
xchg
xchg
xlat
push
pop
mov
popa
mov
jno
jle
insb
dec
sub
fadd
arpl
add
cmpsb
ja
daa
js
orb
xor
jle
dec
sbb
and
call
push
push
out
push
lock
and
ja
bound
cltd
lahf
xchg
xchg
push
into
pop
int3
stc
or
incb
pop
xor
in
jl
or
nop
out
leave
jmp
hlt
outsl
and
mov
cli
cmp
insw
jle
scas
test
shrl
jg
xchg
mov
iret
daa
xor
lods
ljmp
add
js
cmp
std
in
xor
xor
int3
hlt
fidivrl
ljmp
jno
testl
add
loope
push
push
fimuls
stc
cmc
ja
rclb
pop
icebp
clc
sahf
fistps
outsl
ret
fnstcw
xchg
mov
push
int3
jnp
xor
push
jg
and
adc
ret
rorl
dec
les
adc
test
jae
shrl
or
fs
xchg
mov
fadds
scas
xor
lods
scas
and
inc
fists
fs
adc
jge
scas
in
and
xlat
sub
jne
ret
jg
in
mov
fnstenvs
mov
ret
mov
fwait
sbb
push
ljmp
aas
or
enter
dec
in
or
xor
push
js
in
in
jp
rcrl
mov
test
icebp
push
out
pop
mov
jp
sbb
insl
mov
les
sbb
sbb
pop
push
cmp
jae
and
jae
ret
sti
push
sbb
xchg
or
int
dec
xchg
sbb
add
insl
hlt
xchg
in
jnp
mov
or
or
loopne
insb
cmp
pusha
sbb
dec
addr16
cld
cmp
pop
push
cld
cmp
xor
scas
xor
sub
push
ss
aaa
add
je
cmc
daa
lds
enter
enter
pop
sbb
stos
jne
loope
ja
push
out
loope
dec
push
inc
cmp
mov
push
int
push
cmc
mov
ret
test
das
mov
push
decb
fwait
in
std
fbstp
aam
and
mov
mov
hlt
shll
hlt
popa
ljmp
arpl
mov
dec
cwtl
push
mov
inc
or
or
into
push
fidivl
and
pop
and
test
jmp
sub
xchg
inc
xor
xor
push
in
add
mov
xor
and
add
mov
sahf
pop
inc
aaa
cmp
lret
repz
ljmp
int3
and
and
repz
ja
mov
sub
addr16
sbb
rclb
shll
lock
cmp
add
xor
test
inc
lock
xor
cmpsb
les
paddsb
shlb
adc
scas
dec
and
mov
decb
inc
add
es
mov
mov
jl
jne
push
sub
dec
mov
xchg
pop
icebp
mov
and
arpl
jb
arpl
jg
push
inc
pop
jle
data16
in
mov
mov
pop
add
insb
frstor
in
jge
rol
and
flds
mov
xor
push
push
sub
add
add
popf
aas
push
andb
mov
adc
hlt
aaa
xor
ret
gs
cmp
pop
jb
in
cli
inc
push
aas
pop
shr
icebp
ljmp
das
repz
cmpsb
fldt
into
sarl
pop
sahf
inc
xchg
outsb
mov
iret
jmp
sbb
sub
mov
or
cs
outsb
jb
repnz
stos
int
add
or
movsl
inc
inc
sbb
adc
int3
std
adc
mov
ret
cmp
add
cmp
mov
mov
mov
arpl
test
cmp
xchg
mov
icebp
mov
mov
enter
jl
adc
scas
jbe
int3
cmp
mov
jecxz
lret
pop
cmpsl
loopne
jo
lods
iret
and
lahf
mov
push
cwtl
out
mov
jg
and
ljmp
push
inc
bound
dec
loopne
in
jl
jbe
std
movsb
dec
jg
push
add
add
loopne
lea
fldenv
add
dec
pop
push
pusha
out
mov
add
xchg
and
push
rolb
mov
add
cs
fdivr
lea
sub
mov
fdivrl
jnp
daa
mov
or
lds
shll
fcoml
mov
rcrl
xchg
inc
dec
iret
fldl
ret
scas
xor
ja
imul
and
mov
push
scas
xchg
push
ret
adc
test
add
bndldx
inc
fldcw
adc
or
xlat
lret
adc
mul
add
jmp
fwait
inc
mov
cmp
jmp
rol
mov
xchg
push
push
xchg
cmp
push
cmp
sbb
fwait
divb
ret
aaa
pop
aas
ja
out
jae
cmp
jg
adc
subl
mov
sub
gs
dec
or
into
mov
sti
test
stos
sub
sbb
cwtl
xor
cwtl
jo
or
sub
jmp
fdivs
test
push
xor
ljmp
add
fnstsw
popa
lds
stos
outsl
fnstcw
add
xchg
inc
mov
fs
lods
mov
xor
xor
xor
shrl
xchg
pusha
dec
sbb
adc
xor
pop
outsl
sahf
iret
sub
pop
mov
rcll
mov
dec
adc
add
mov
je
mov
add
sti
sub
loope
sti
nop
lds
or
jmp
lahf
filds
dec
lret
jns
cmpsb
pop
mov
aam
sub
movsl
mov
push
mov
ds
adc
push
adc
roll
or
adc
fstpl
or
pop
lcall
bound
je,pt
mov
shlb
repz
das
addr16
in
hlt
xor
push
pushl
test
lods
fstps
mov
ficoml
test
roll
jno
fs
nop
xchg
dec
cmp
pop
jns
repnz
inc
loop
movsb
fidivrl
lea
nop
outsb
fldl
outsl
loopne
xor
pop
dec
xchg
dec
pop
out
cmc
std
leave
out
push
push
icebp
data16
mov
rcll
fwait
mov
sub
push
jno
mov
into
fucomi
jo
jle
lcall
les
fistpll
or
rorb
scas
gs
hlt
jle
xor
inc
rol
imull
test
sbb
xor
into
add
push
adc
lret
outsb
xchg
movsl
mov
xor
or
int
jg
insl
lds
xor
enter
adc
pushf
icebp
pop
subl
cmp
jb
jne
ficoms
cmc
pushf
fsubl
add
repz
into
mov
sbbb
add
rcr
loopne
insl
jnp
frstor
ss
sbb
inc
push
dec
jle
cwtl
and
testb
stos
and
pop
add
movsl
hlt
and
rol
mov
in
pop
sbb
jno
xchg
aas
xchg
fcoms
mov
js
call
lods
xchg
mov
sahf
push
sbb
xchg
lret
jl
scas
inc
mov
inc
in
bts
int3
and
adc
pop
jne
push
jmp
dec
test
int
fnstcw
or
push
or
sbb
pop
jle
cmp
mov
lock
aad
mov
xchg
push
inc
mov
test
lods
stc
push
sub
push
fwait
jbe
or
out
push
mov
sbb
push
movsl
fwait
mov
aaa
or
cwtd
or
in
insb
gs
ds
in
mov
mov
cwtl
adc
mov
mov
mov
lods
jns
inc
das
das
loop
add
mov
dec
imul
inc
dec
xor
jp
xchg
mov
push
aas
ds
push
mov
mov
into
lods
hlt
icebp
push
fwait
mov
mov
jns
pop
imull
loop
pusha
adc
sahf
es
fstl
sbb
aaa
rorl
dec
sahf
mov
push
in
add
call
xchg
pusha
out
mov
cmp
xor
sbb
ret
nop
inc
sbb
div
scas
jmp
jne
sahf
cmp
mov
cmp
fimuls
pop
and
icebp
enter
pop
fwait
xchg
call
push
adc
insl
fwait
dec
add
jecxz
fwait
ja
push
jb
sbb
adcl
xor
lods
out
jb
test
pop
fdivs
ja
je
negl
nop
mov
iret
cmc
insl
mov
mov
xchg
push
outsl
xchg
enter
mov
pop
xchg
iret
cmp
sub
sub
lcall
enter
sub
pop
in
clc
push
leave
xchg
mov
xchg
mov
jge
ret
xchg
adc
sub
fiaddl
test
loope
or
in
mov
js
rclb
shll
imul
dec
in
jns
mov
pop
dec
xor
xchg
stos
icebp
popf
stc
js
js
popf
test
mov
mov
scas
adc
xchg
call
xlat
push
lock
movsl
cmp
sbb
push
pop
bound
and
je
dec
rorb
hlt
inc
js
push
or
jp
pop
mov
xchg
cmc
dec
adc
push
ja
xor
leave
enter
leave
les
in
xchg
insb
lahf
or
lock
lea
inc
orb
cmpsl
mov
add
dec
fidivl
mov
sti
sbb
inc
shl
repnz
push
push
jmp
dec
popf
enter
pop
insb
icebp
jnp
ds
pusha
repnz
fimuls
je
adc
xlat
fidivs
mov
push
imul
mov
jle
out
push
cli
mov
scas
cmp
or
cwtl
imul
jmp
out
xlat
fcmove
mov
cmc
push
pushf
out
lods
scas
add
mov
insb
ret
sbb
mov
push
xor
or
pop
rclb
push
pusha
mov
loope
popa
popf
sub
dec
call
loope
iret
sbb
sub
mov
leave
inc
push
leave
into
stos
out
insb
nop
hlt
xchg
inc
ss
xor
cli
push
scas
cld
test
dec
mov
pop
sbb
inc
sbb
sub
in
jl
mov
lahf
mov
in
jp
jmp
icebp
stc
sub
mov
mov
jg
cwtl
push
or
call
ret
push
fcmovnu
in
mov
mov
in
mov
or
push
adc
mov
sub
jmp
out
jbe
mov
mov
fisubrl
insl
mov
jle
mov
pop
xlat
nop
pop
idivl
imul
aad
sub
inc
ja
mov
rcrl
mov
std
rolb
mov
jp
and
jbe
mov
mov
aas
sub
and
push
in
std
lahf
add
lret
xchg
nop
xchg
mov
mov
sbb
mov
pop
mov
jmp
xchg
aaa
cltd
lods
rol
shrl
cmpsb
push
ds
mov
scas
aam
andb
sbb
dec
jmp
rorb
pop
stos
lret
sbb
pop
in
int
divl
mov
cmpsl
cmp
pop
fdivp
leave
js
push
add
mov
or
fsubrl
shlb
outsb
sti
ja
xor
test
mov
inc
aad
inc
jb
std
incb
repnz
inc
xchg
inc
cmp
cs
push
cmp
int
inc
rcrb
rcr
mov
roll
mov
mov
es
jg
dec
rcrl
xchg
jl
mov
sbb
rcrb
mov
mov
insb
push
in
dec
push
fwait
inc
aad
or
mov
cli
xor
imul
sbb
jcxz
jns
cmp
cwtl
mov
in
pop
clc
mov
lods
add
inc
ljmp
je
sarl
les
xchg
inc
fldl2e
or
enter
jbe
test
or
loop
cwtl
ret
ret
add
mov
test
clc
lods
jle
cmpsb
sub
xchg
mov
jno
movsb
jg
fstl
into
test
loope
test
les
sub
cmpb
pop
and
loop
test
dec
inc
jae
test
mov
add
and
mov
popa
dec
xor
test
xchg
xchg
sbb
shr
popl
shr
cs
mov
fisttpl
xchg
aad
lret
mov
aad
int
sbb
les
pusha
fbstp
jo
mov
lret
movsb
lock
dec
sub
and
xchg
mov
testb
fiaddl
popa
pusha
mov
jb
xchg
xor
std
cmp
fsts
outsb
lcallw
std
mov
xchg
xor
add
or
in
clc
push
pop
jns,pn
leave
aas
xor
mov
sub
push
aad
adc
mov
imul
sbb
adc
arpl
jae
adc
rorb
sbb
cmpsl
xlat
adc
push
add
sti
mov
and
push
inc
arpl
cmpsl
mov
cmp
pop
fisubl
sarb
pop
sub
jno
xor
scas
or
nop
fisttpll
and
mov
stos
xor
xchg
leave
lahf
dec
out
daa
popa
push
xchg
jo
movsb
sub
xor
or
or
and
dec
les
cmp
daa
ljmp
mov
adc
icebp
movsl
imul
ret
sbb
dec
loopne
inc
push
scas
mov
and
ret
mov
xor
or
cltd
popf
insl
aam
push
add
add
scas
fmul
sahf
xchg
dec
jae
xchg
pop
lcall
mov
adcb
sahf
inc
fimull
inc
pop
xor
imul
je
mov
push
ret
icebp
fisttps
int3
out
loope
lods
adc
sarb
rclb
xchg
dec
pop
cmp
mov
xor
fdivrp
std
jle
pop
push
jg
and
mov
push
repz
mov
jbe
repnz
sub
mov
fs
mov
cmpsb
ret
call
not
adc
aad
lea
cmp
add
dec
call
bound
ret
sbb
test
mov
pusha
inc
push
insl
xor
pusha
xor
mov
xlat
cmp
sub
popa
mov
jno
clc
cmpsl
sbb
sub
fildll
daa
das
xor
movsl
jno
mov
out
xchg
iret
std
popa
testb
mov
push
cmpsb
mov
or
out
int
movsl
cmp
pop
mov
mov
xorb
xor
repnz
adc
data16
xchg
sub
pop
sub
dec
dec
cli
es
in
movsb
adc
push
aaa
stos
mov
xor
mov
or
cmp
dec
mov
in
mov
out
in
ret
je
cmp
sbb
and
ret
jecxz
stc
fwait
and
dec
jmp
push
jb
push
mov
mov
bswap
jge
jno
shrb
jbe
fs
and
sub
or
lcall
push
repnz
mov
lea
cli
sub
jbe
movsb
sti
addl
popf
xchg
call
dec
adc
push
jno
out
push
push
push
lret
fistpl
mov
in
mov
dec
jae
jo
mov
adc
sub
adc
jle
test
jb
or
lret
test
sbbb
xor
mov
js
push
loope
popa
add
and
adc
cmp
lret
call
sbb
fldcw
adc
dec
dec
or
dec
sbb
or
out
shrd
or
fdivr
push
mov
mov
add
sbb
lcall
lret
cltd
xchg
filds
out
scas
and
out
test
test
inc
pop
sbb
ret
test
or
sub
test
cltd
xchg
arpl
movsl
testl
pop
sub
jmp
jp
ret
ss
sub
cs
dec
out
dec
data16
dec
pushf
outsl
push
add
fwait
das
call
insl
repnz
aas
fldt
jo
out
iret
test
xchg
jp
ds
subb
cltd
incl
cmpsb
cmp
adc
mov
xor
fisubs
pop
faddl
sub
or
jbe
push
push
subl
fsubl
rclb
push
out
pop
dec
mov
push
mov
fsqrt
inc
xchg
out
push
jns
int3
in
or
ja
imul
mov
movsb
mov
fistl
stc
ret
mov
fiadds
in
dec
and
gs
inc
mov
jnp
pop
pop
inc
mov
aaa
xchg
jmp
pusha
xor
sub
aaa
pop
adc
ret
lret
push
mov
jno
imul
ret
xor
cmp
mul
fmull
in
out
or
inc
lock
icebp
lret
push
mov
decl
lret
adcl
sbb
and
push
mov
mov
mov
loop
mov
jecxz
sbb
scas
lods
movsb
int3
clc
and
mov
jno
in
mov
lret
or
push
fstpt
inc
popf
mov
hlt
mov
or
xor
pop
jg
lahf
adc
in
push
inc
push
inc
pop
cmp
push
aam
arpl
ds
les
into
loopne
add
out
cmpb
or
pop
in
xor
jne
in
in
push
sbb
loopne
cs
push
mov
cli
sub
fildll
pop
xor
pop
clc
shll
sarb
sub
imul
push
pop
add
rclb
sbb
fs
ret
jns
jl
xchg
lahf
jmp
test
sub
jl
sahf
loopne
jns
ds
lret
loop
bound
cmpsb
icebp
sbb
mov
cmpsl
xor
stos
jmp
test
and
fnstenv
lret
das
jbe
jae
enter
call
scas
es
cmpl
lcall
pushf
out
idivl
fisubrl
push
inc
xchg
es
out
jns
cli
cmc
icebp
pop
lcall
mov
addr16
in
jne
clc
loopne
pop
out
or
loop
pop
stc
mov
loop
push
add
push
sbb
pop
mov
js
and
clc
dec
and
jo
mov
cltd
lds
dec
aaa
jmp
mov
notl
sbb
pushf
pop
mov
or
sub
add
inc
jg
add
fucomi
mov
mov
add
xor
popf
aas
enter
out
in
aad
cs
fcomp
es
mov
mov
outsb
enter
pop
test
ret
jecxz
push
lret
push
dec
and
das
fcmovne
mov
sarl
jp
pushf
mov
rcrl
shl
sbb
cmp
call
ljmp
adcb
xor
push
addr16
mov
pop
ret
loop
js
xchg
orb
test
mov
mov
jp
jg
fistps
sub
sti
mov
stc
lods
insl
cmp
or
ss
lds
fadds
add
mov
es
xchg
mov
insl
dec
imul
into
mov
jg,pt
dec
mov
dec
adc
int3
xchg
mov
and
adc
jle
loop
orb
cmp
push
push
cmp
fsubs
adc
roll
pop
sbb
xchg
nop
aam
test
insb
push
cmc
in
ds
add
lea
xchg
mov
adc
cmp
jge
lea
scas
add
jnp
nop
test
add
jns
jb
push
mov
or
iret
js
pop
repz
jl
shll
out
push
mov
jo
xor
rorb
stos
hlt
test
and
mov
mov
xor
push
fsubrs
pushf
cmp
test
xor
ljmp
mov
outsl
fwait
inc
loope
insl
sbbb
sbb
push
sbb
iret
in
xchg
arpl
adc
shl
insl
out
inc
or
mov
orl
les
cld
jb
and
ficoms
sub
insb
cltd
sahf
or
ds
inc
xchg
ss
aad
jmp
sbb
cmp
and
mov
mov
dec
mov
flds
scas
fwait
bound
loope
mov
push
jl
xchg
aas
sub
and
lods
sub
inc
pop
lret
xor
xchg
and
stos
sbb
shrl
outsl
fcmovb
xor
inc
push
and
xlat
sub
or
xchg
pop
pop
jecxz
mov
push
loop
xlat
sbb
ja
push
outsb
das
mov
xor
xchg
insb
cmp
or
xchg
sub
aaa
movsl
pop
mov
push
addr16
mov
andb
cmp
sub
adc
and
adc
call
and
sub
xor
jb
sbb
fnstenv
call
adc
add
ror
inc
adc
imul
test
stos
loop
in
loop
movsl
std
fsubl
push
pop
int3
mov
mov
cmp
sbb
pop
lcall
pusha
arpl
push
pushf
dec
cmp
pop
jo
cld
imul
dec
cs
bnd
into
loope
jp
jb
mov
addl
and
sub
mov
xor
mov
xor
adc
ljmp
scas
in
mov
cmp
gs
mov
popf
sub
gs
and
inc
lahf
lods
out
fadds
xor
pop
and
or
push
mov
bound
scas
sti
decb
vmovapd
js
imul
fxam
xor
mov
mov
int
mov
xchg
push
enter
xchg
std
adcl
mov
and
aaa
test
dec
imul
push
cmc
jno
sti
ss
push
xor
stc
into
fists
add
addb
dec
add
dec
lds
adc
or
jecxz
jnp
add
int3
xchg
ss
xchg
pop
ret
lods
cmp
fdivr
je
mov
cmp
or
adc
xchg
movsb
sub
xchg
out
lods
cs
idivl
dec
sti
lahf
jmp
jae
jg
aad
inc
pop
xchg
sbb
mov
push
incb
sysenter
pop
enter
lahf
or
test
negl
jno
lods
loope
in
jmp
mov
sub
test
imul
mov
repz
pop
cli
add
fdivrl
repnz
xchg
std
inc
outsl
and
pop
int3
adc
loope
or
pop
aad
pop
filds
fstpt
adc
mov
movsb
push
xchg
movsl
xchg
xchg
jae
lods
cmp
or
cmp
fdivs
test
sbb
add
add
dec
pop
cmp
test
and
xor
clc
sbb
jg
sbb
pop
ja
cs
mov
test
int3
or
dec
and
lahf
cmp
outsb
push
inc
test
aam
les
inc
mov
xor
stos
pushl
inc
cmpsl
cmp
sub
pop
dec
test
or
loop
mov
xor
push
jbe
pushf
mov
jmp
or
add
lret
stos
add
nop
movsl
xchg
push
cmp
mov
sub
fildll
add
mov
mov
hlt
add
shll
out
or
lret
cmp
cmp
mov
in
mov
xor
mov
add
hlt
inc
bound
and
outsb
xor
iret
out
call
outsl
out
inc
mov
xlat
sbb
test
sti
arpl
nop
pop
sbb
xchg
jle
push
push
sub
add
push
pop
lcall
clc
cltd
frstor
scas
test
es
test
mov
mov
jne
adc
daa
jge
xor
es
out
out
aaa
jl
enter
sti
mov
movsb
andb
fildll
adc
shll
jecxz
adc
sub
fcomi
pop
mov
sub
push
lea
mov
int3
add
roll
cmp
pop
decb
movsl
movsb
mov
pop
cs
mov
pop
out
in
lret
pop
dec
push
push
fisubl
and
sbb
inc
cwtl
out
sbb
jmp
adc
mov
add
mov
pop
wbinvd
pop
fnstenv
fimull
jne
mov
and
mov
sahf
push
sub
cmpsl
js
push
stos
and
xorl
xor
jg
decl
test
ds
out
push
mov
cmp
cmp
stos
stc
rorl
dec
jno
filds
sbb
cmp
es
jge
adc
push
mov
or
test
negb
cmp
popa
mov
idiv
test
cmp
imul
adcb
mov
test
push
and
lret
inc
aad
add
mov
mov
pop
pop
in
xchg
enter
psubusb
movsl
xorb
xor
jmp
push
pop
ss
rcrb
imul
push
cs
in
sub
mov
mov
adc
arpl
fstpl
push
pop
mov
outsb
iret
mov
fs
cli
lret
lret
ficomps
xor
fwait
pushf
nop
push
str
lret
cmc
aad
dec
es
jnp
fcos
frstor
in
sub
xor
mov
push
or
xchg
mov
aaa
pop
mov
and
pop
sub
fwait
and
in
fs
std
jbe
ja
aas
scas
rcrb
and
jae
lahf
mov
add
addr16
mov
insb
aad
xor
sbbl
fcmovnu
sub
cltd
aas
mov
inc
inc
inc
stc
jp
shll
push
mov
jmp
add
ljmp
and
sbb
and
and
ljmp
aad
jecxz
pop
xor
shl
jg
ficomps
adc
inc
push
loope
call
sub
lds
fsubrp
push
xchg
leave
pop
test
inc
jbe
jge
dec
mov
jmp
push
jmp
shlb
push
enter
aas
shll
popf
lods
dec
sahf
test
in
fwait
mov
cltd
lret
decb
inc
js
cmc
pop
js
outsl
lods
stc
or
or
and
cmp
outsb
ret
push
inc
rcrl
mov
fsubrl
popa
out
push
add
jb
lds
loope
pop
fwait
or
test
and
movsl
cmp
shll
daa
mov
mov
loope
inc
xor
push
lret
adc
pop
mov
pop
sti
mov
xchg
lock
jo
jmp
lcall
xchg
xchg
aaa
and
mov
je
mov
dec
sub
sub
pop
jnp
pop
inc
adcl
xor
jae
xlat
outsl
or
mov
ss
out
movsb
sbb
sub
jge
sbb
push
push
cmpl
scas
out
jno
dec
sub
into
insb
mov
test
add
xchg
leave
push
add
mov
inc
jae
xcrypt-ctr
cmpsl
cwtl
inc
jbe
mov
aad
test
jns
fisttpll
dec
or
dec
pushf
cld
jge
aaa
adc
bound
pop
cmp
imul
cwtl
xchg
adc
jbe
inc
idivl
ss
sbb
fs
movsb
sub
or
mov
loopne
lea
pusha
add
into
stos
mov
jo
out
mov
sub
mov
loope
jb
adc
test
arpl
ljmp
jecxz
mov
mov
mov
ja
pop
out
jecxz
and
sub
sarb
and
jne
mov
adc
repz
sar
mov
push
cmp
cmp
popf
xchg
xor
push
mov
and
scas
adc
xor
mov
pop
push
cmc
ja
sahf
and
push
jmp
mov
fsub
jge
sub
mov
fistpll
xor
es
adc
jmp
ret
into
mov
aas
push
jl
fwait
cltd
inc
xlat
lods
popf
jbe
xlat
sbb
push
xchg
xchg
xchg
fimull
or
xor
mov
xchg
js
in
cwtl
es
into
pop
and
hlt
jae
insb
lods
mov
cltd
ret
into
xchg
jp
xchg
int3
inc
lods
mov
outsl
and
pushf
popa
sbb
lret
push
ss
daa
adc
loop
addl
cmp
movsb
and
rclb
cmpsb
pop
mov
insb
dec
shr
stos
pop
cli
mov
ret
das
adc
shl
lods
jg
pop
sub
int3
adc
enter
in
push
cmpsl
inc
push
xlat
inc
xchg
cmc
ds
ja
mulb
call
negb
out
jnp
fs
pop
mov
mov
arpl
mov
sahf
mov
fsts
jb
test
dec
adc
mov
insb
sahf
dec
js
or
notb
mov
roll
xor
enter
pop
negl
popf
jge
lahf
mov
xor
imul
outsl
outsb
hlt
push
jmp
or
dec
ret
fnstcw
stos
pop
ret
call
xchg
lcall
dec
mov
fcoms
adcl
sub
mov
fimuls
cli
or
adc
stos
fwait
popa
pop
jae
xchg
add
cmp
push
fcom
pop
dec
and
pop
or
xchg
pop
insl
roll
and
fwait
ss
inc
lret
into
xchg
pop
adc
mov
iret
shlb
xchg
inc
rorb
xor
fistl
out
inc
push
lea
aaa
mov
aad
dec
shlb
in
jae
cmp
and
lcall
sub
out
fwait
cmc
aad
out
sub
xchg
pop
cmp
les
lock
int3
add
or
cmp
shll
std
dec
popa
mov
dec
push
mov
cmp
inc
push
and
dec
and
ds
je
test
or
cltd
inc
and
pop
shr
std
sub
cmpb
sub
adc
jge
gs
pop
add
pop
mov
jl
pushf
jp
or
test
dec
mov
and
push
jno
out
daa
cs
je
pop
push
add
addb
in
lcall
sbb
pusha
lahf
mov
jnp
lods
push
mov
push
ficoms
push
lea
rclb
or
sahf
inc
das
les
dec
pusha
pusha
test
push
jae
pop
dec
ret
or
pop
cmp
mov
jecxz
jbe
pushf
aam
jno
xor
and
xchg
js
lcall
clc
jmp
outsl
cmp
imul
xor
dec
enter
mov
or
push
loope
add
in
xor
or
out
arpl
jne
push
les
test
inc
jmp
inc
mov
mov
loop
arpl
roll
and
dec
mov
in
fldcw
lcall
add
mov
mov
pop
lret
inc
mov
mov
xor
subl
pop
push
cltd
aaa
mov
push
andl
add
aam
aas
mov
je
stos
xor
ret
movsb
push
in
dec
mov
into
push
push
sbb
in
xchg
movsb
dec
add
xor
sti
xor
sbb
fs
das
js
or
mov
outsl
into
add
jne
sub
jb
cmp
outsb
iret
iret
js
outsb
add
inc
lret
sbb
mov
jne
test
adc
add
push
mov
jo
fmull
sub
or
dec
inc
cmp
mov
sbb
sbb
fidivs
jle
out
je
out
sti
cs
push
fcompl
xchg
mov
call
mov
into
xchg
js
cmpsl
in
and
fdivl
and
xchg
add
loop
adc
mov
loopne
mov
addr16
pop
stos
arpl
jl
cmc
pop
xor
lret
xchg
mov
inc
pop
mov
lock
outsb
shlb
movsl
push
pop
subb
loopne
push
jne
sahf
test
mov
out
push
inc
fdiv
mov
jg
xchg
sbb
icebp
std
sub
dec
mov
mov
movsb
ficoml
xchg
shlb
loop
leave
aaa
std
in
sbb
movsl
movsl
scas
dec
int
cli
enter
sahf
mov
jmp
mov
int
add
xor
jb
das
and
push
adc
jge
cli
dec
test
lret
lods
ret
adc
dec
int
sti
orb
insb
and
mov
fwait
ss
inc
push
lret
cmpsb
and
repz
aad
pop
dec
mov
inc
jecxz
mov
add
jno
xchg
outsb
adc
subl
ret
adc
mov
xor
and
mov
movsb
arpl
dec
aaa
xor
movsl
stc
mov
and
stos
and
les
mov
adc
pop
repz
xor
inc
add
repz
jns
and
test
pop
add
sub
je
adc
jb
pushf
dec
add
fdivp
insb
lret
add
lret
inc
lret
pushl
in
lahf
push
imul
loop
arpl
pavgw
jmp
adc
jo
lret
dec
add
sub
jnp
leave
jo
or
cmpsb
dec
stos
pop
cmc
jne
inc
stos
testl
lret
aas
clc
xor
jl
mov
lcall
pop
and
sbb
inc
je
xor
dec
and
arpl
sub
inc
inc
repz
cmp
ret
dec
mov
incb
mov
mov
cmp
fisttps
icebp
add
mov
ja
xchg
fwait
shr
cld
mov
enter
jle
andl
insl
imul
pop
mov
imul
jne
push
insl
test
les
rcll
imul
inc
xchg
mov
fnstenv
push
adc
dec
jp
mov
mov
testb
sbb
push
push
cli
femms
cmpsb
push
push
in
push
ror
push
lods
and
jno
lods
aas
cmp
arpl
aam
adc
mov
out
jg
push
clc
cmc
dec
fs
add
mov
mov
in
cmp
xchg
push
aad
inc
lret
sbb
xor
in
dec
call
cmp
and
push
cwtl
mov
push
jl
cwtl
adc
mul
dec
mov
pusha
jbe
sbb
faddl
hlt
and
inc
into
rcrb
insb
out
jns
adc
aaa
aaa
out
and
pop
out
icebp
sbb
inc
iret
sbb
mov
and
add
and
cltd
push
inc
out
jg
lea
and
idivl
arpl
jp
add
xor
jge,pn
jb
fmuls
xchg
inc
repz
arpl
mov
xchg
xor
add
jns
aaa
out
enter
xor
lahf
and
xor
test
push
scas
fsubs
pop
jno
or
mov
cwtl
push
inc
bnd
mov
sahf
andl
xchg
in
filds
mov
or
das
xchg
ss
push
jns
aam
loop
mov
test
jb
jmp
or
pop
xchg
jg
icebp
pushf
pop
fs
clc
lea
call
push
sub
pusha
arpl
arpl
push
push
mov
addl
imul
push
jmp
push
pop
ljmp
mov
sub
jmp
push
sbb
dec
or
aad
ficoml
icebp
out
out
xlat
jecxz
adc
dec
imul
aam
mov
inc
xchg
lds
addb
xor
les
scas
outsl
call
pusha
mov
pop
or
shlb
and
lahf
loope
sbb
adc
cltd
test
add
sub
bound
xchg
mov
sbb
push
lret
aas
adc
and
into
cltd
mov
loop
aad
fdivp
xor
sti
test
mov
lcall
inc
pop
adc
es
cmc
std
rcrl
rep
test
xchg
les
cmp
and
addr16
fiaddl
xlat
mov
push
cmp
aam
xor
xchg
mov
jns
test
inc
lea
jno
xchg
in
jle
loopne
dec
jp
dec
pop
adc
xchg
out
inc
sbb
mov
xlat
jb
jp
jno
inc
add
nop
ficoml
xchg
inc
cmp
mov
jne
mov
or
xchg
lds
out
mov
jg
push
xor
imul
and
arpl
cmc
lock
jb
ds
pop
stos
cmpl
in
in
daa
jb
dec
out
or
mov
stos
test
pop
adc
inc
es
mov
ss
testl
scas
inc
in
cmp
cmp
pop
dec
rol
mov
inc
lahf
cmp
inc
jle
dec
mov
das
jno
inc
cmp
cmp
xor
testl
xor
cld
sub
enter
addr16
neg
inc
les
push
mov
jmp
in
add
or
jb
gs
scas
jne
lds
adc
mov
pop
jl
push
pop
xor
loope
pop
ljmp
ds
iret
dec
cli
add
sub
mov
xchg
lock
arpl
adc
stos
mov
dec
adc
arpl
mov
sub
cld
dec
inc
mov
mov
dec
pop
xchg
pop
mov
movsb
cmp
push
in
repz
pusha
cli
lods
sbb
cltd
xchg
arpl
loop
jg
pop
movsl
xchg
push
repnz
xlat
enter
aas
enter
add
mov
and
sbb
shll
mov
mov
xor
pop
int3
xor
sbb
testb
mov
shrb
sbb
inc
imul
mov
imul
jbe
add
pop
scas
mov
lret
loopne
fucomip
fs
sub
jmp
cmp
xchg
daa
inc
mov
and
pushf
add
dec
jmp
or
out
sub
dec
fstpl
fcmovnb
fadd
pop
dec
cltd
push
xchg
mov
insb
adc
or
xor
pop
xor
data16
adc
lods
ds
pop
rcrb
iret
push
repz
add
lea
adc
bound
cs
xchg
jmp
cli
aam
mov
sarl
add
pop
arpl
shrl
sub
xchg
scas
inc
sub
ret
fstpl
sahf
jle
sarl
lcall
into
mov
scas
sub
xor
push
push
pop
or
mov
int
mov
add
out
gs
xchg
adc
xchg
in
jl
jb
push
loop
in
mov
ror
push
push
inc
popa
lea
arpl
xor
pop
in
xlat
insb
cmp
lods
and
cmp
outsb
jge
jne
push
int3
push
mov
scas
fcmovu
push
mov
push
sbb
stc
or
and
cmp
lret
mov
mov
or
iret
test
scas
aas
adc
sarb
fdiv
inc
mov
rorb
mov
pop
mov
cld
mov
dec
shrb
xor
dec
mov
xor
test
adc
test
pop
addb
out
out
mov
push
out
inc
mov
lcall
jecxz
push
push
and
lock
daa
cmc
push
loope
shll
push
push
repz
mov
in
xor
outsl
icebp
cld
pop
repz
shrb
inc
lcall
jnp
xor
pop
mov
mov
pextrw
jnp
sub
xchg
leave
mov
stc
or
in
repnz
push
mov
pop
iret
dec
xor
inc
mov
jge
rcll
inc
mov
jne
inc
push
lds
loop
pop
cmp
fisubs
ja
outsb
sub
aam
roll
ljmp
mov
jg
loop
out
push
sbb
push
lock
xor
xor
aad
mov
int3
fidivs
adc
cmpsb
push
out
sti
adc
ljmp
dec
sbb
mov
dec
leave
ss
cmc
mov
xlat
pop
ficomps
cmp
data16
gs
adc
jbe
xor
xor
mov
notl
push
add
mov
movsb
ret
fisubrl
jge
test
mov
mov
jmp
std
call
scas
push
cs
out
xor
dec
add
and
jecxz
xchg
lea
mov
xor
fiadds
ljmp
jnp
cs
mov
adc
ds
data16
imul
out
cmpsl
mov
test
sti
mov
out
xchg
pop
mov
int
std
or
dec
aam
int3
hlt
jne
or
js
mov
sub
sub
and
mov
fisubrl
out
pop
and
pop
and
mov
and
fists
fidivrs
lock
mov
or
sub
sub
loopne
imul
filds
cmp
dec
and
mov
dec
cltd
movb
jne
int
mov
adc
int3
and
loope
ficomps
dec
cmpsl
orl
loope
xchg
nop
out
into
jg
pop
xchg
scas
dec
inc
sub
popf
dec
lods
cwtl
je
es
inc
mov
leave
sbb
pop
cmp
out
mov
pop
inc
stos
xlat
sbb
sbb
add
mov
add
dec
sbb
adcb
mov
or
mov
imulb
mov
jae
cli
rclb
insb
jne
pop
or
lahf
rorb
mov
cmpsl
mov
jle
imul
fwait
pop
sbb
clc
adc
cmp
push
jne
or
mov
shrl
out
fsubl
in
in
sbb
push
cmp
xor
xchg
mov
sbb
out
add
and
add
rcrb
add
mov
or
add
ret
jne
out
cmp
int
popf
push
push
ret
rcl
testl
inc
test
dec
mov
dec
jmp
jno
adc
xchg
std
sub
addr16
in
arpl
out
fisubrs
into
icebp
idivl
jbe
aas
stos
and
jp
jns
jl
cmpl
jp
mov
movsl
push
outsb
sub
pop
adc
mov
dec
lds
mov
xchg
jecxz
sbb
ljmp
popa
xchg
aad
fsubl
sub
mov
mov
sub
pop
gs
or
data16
punpcklbw
js
sub
xchg
xor
lret
and
jle
jg
xchg
fstps
pop
in
mov
sub
cmpsb
dec
ret
mov
fs
out
fstpt
lahf
add
sub
or
mov
cmp
lcall
jecxz
add
mov
mov
mov
mov
add
fs
xor
cs
out
mov
jnp,pt
rorl
jecxz
and
shll
inc
movsl
sub
fldenv
mov
lods
xchg
imul
pop
nop
mov
shll
clc
outsb
iret
add
test
bound
scas
push
push
orl
pop
mov
lret
inc
dec
repnz
add
cmp
in
pushf
jmp
jmp
daa
adc
xchg
mov
imul
jle
movsb
popa
jg
cmpsb
push
xchg
or
leave
out
hlt
mov
ljmp
movsl
les
repnz
mov
jl
popa
mov
dec
sub
push
mov
popf
push
xchg
sub
ljmp
in
in
rorb
cmp
jnp
insb
insl
or
pop
enter
fs
addb
incb
push
jmp
neg
bound
fstl
and
mov
dec
ss
pop
outsb
sub
mov
leave
dec
cmp
or
mov
cmpsb
imul
cmpsb
out
xor
mov
imul
repnz
inc
sahf
fwait
jg
lock
add
push
fs
xor
nop
rcrl
loopne
add
ds
push
test
jecxz
lock
sub
ret
insl
or
mov
sbb
int3
pushf
scas
lods
int
inc
mov
les
lahf
fwait
hlt
pop
or
or
aam
fs
in
jns
mov
lea
inc
mov
rolb
mov
xchg
inc
add
push
into
into
lcall
inc
pusha
les
sub
pop
xchg
scas
cmp
and
nop
in
pusha
aad
pusha
fisubrl
cmp
jmp
in
iret
mov
insl
dec
in
call
jo
sbb
pop
xchg
movsl
daa
mov
jle
fldcw
mov
bound
ror
adc
frstor
inc
sub
ret
js
scas
idivl
test
loopne
mov
pushf
pop
mov
movsl
mov
sti
arpl
nop
scas
lods
sub
or
hlt
dec
mov
xlat
leave
lea
adc
and
mov
pushf
pop
loop
mov
out
mov
mov
outsl
loop
push
fs
cmp
inc
or
lcall
test
mov
jecxz
xchg
into
sbb
dec
pop
insl
sub
add
in
pop
das
vpaddb
es
fadds
jno
mov
ds
jae
mov
bound
sub
mov
jmp
xchg
mov
pusha
clc
add
ljmp
xchg
xchg
pop
mov
sub
inc
scas
ret
jmp
xchg
fstpt
pop
fistps
jmp
out
lds
in
frstor
and
dec
cmpb
imul
std
mov
and
hlt
sti
mov
adc
ljmp
push
sbb
sub
cmc
cmp
xor
lods
mov
sub
cmp
scas
mov
jg
popa
dec
gs
jae
jp
mov
mov
int
or
out
je
out
pop
cli
outsb
xchg
pusha
stos
loopne
into
cmp
rcr
sbb
out
cmp
test
push
push
or
dec
xor
jge
cld
sub
out
shll
in
int
inc
xchg
shlb
adc
ss
or
or
les
mov
mov
adc
xor
xchg
ja
out
mov
in
out
ja
dec
cwtl
imulb
fidivrl
sbb
mov
mov
mov
pop
divb
fisubrs
sbbb
push
dec
jnp
mov
insb
out
dec
and
push
js
ljmp
mov
xchg
jb
outsb
inc
outsb
into
stc
clc
sub
push
dec
push
mov
xor
and
rcrl
clc
sti
dec
stc
loopne
mov
and
jbe
jnp
cmpsl
mov
jp
imulb
jne
mov
stc
pop
outsb
xchg
cmp
ret
and
push
dec
lret
and
fdivs
mov
movsb
in
cmp
pop
hlt
mov
dec
nop
shll
fstpl
lock
loope
adc
arpl
arpl
add
mov
sbb
sbb
push
or
decl
sub
and
xchg
xor
sahf
xchg
popa
xor
xchg
xchg
inc
stos
inc
mov
sub
ror
inc
xchg
sbb
mov
dec
mov
gs
enter
xor
nop
dec
push
add
push
inc
pop
sbb
fldcw
sti
cmp
sarb
pop
insb
test
xor
sti
out
loop
mov
sahf
or
in
das
jns
fdivs
insl
mov
outsl
shll
les
in
movsl
fldcw
add
sbb
inc
in
loop
jo
loope
aam
push
in
mov
scas
add
jge
insl
cmp
imul
sbb
stc
ret
mov
ret
int3
imul
mov
cmp
add
je
pop
xor
leave
jg
hlt
pop
lods
or
outsb
mov
cs
ret
pop
jg
sub
push
iret
jns
xchg
arpl
icebp
test
mov
jne
mov
adc
push
shl
dec
and
and
mov
dec
shlb
jle
sub
or
push
sbb
inc
clc
cmp
shrl
xchg
rolb
in
or
xchg
jle
mov
orl
cs
push
test
jmp
stos
out
push
sbb
dec
cmp
xor
js
loopne,pn
mov
add
pop
adc
dec
es
popf
push
dec
mov
call
sbb
sub
mov
adc
outsl
mov
and
pop
ljmp
and
aaa
fisttpll
cmp
inc
pop
imul
sub
addr16
add
add
xor
stc
ror
jns
loopne
mov
repnz
idivl
dec
lret
cmp
xchg
out
mov
jbe
out
lods
pop
mov
jle
inc
mov
scas
pop
fs
push
mov
imul
inc
sbbl
iret
xchg
cpuid
mov
xchg
xchg
insl
sub
repnz
fistpl
pop
xchg
call
fld
roll
xchg
sub
lcall
dec
inc
and
mov
fdivrl
mov
stos
add
add
out
push
and
loopne
cltd
hlt
ret
inc
cmpsb
or
mov
jbe
call
xchg
inc
sub
inc
cli
mov
sbb
push
xchg
daa
stos
adc
jnp
pop
leave
roll
sub
inc
lret
cmp
arpl
ss
adcl
add
out
int3
jne
ret
mov
jp
popf
inc
cmp
std
mov
push
xchg
stos
jnp
rolb
push
rcll
rcll
out
stos
aas
sub
xchg
lret
adc
mov
shll
mov
lods
ficoml
aad
out
movsb
out
push
mov
negb
ja
mov
inc
and
imul
sub
test
lods
inc
int
xchg
std
test
adcb
cmpsb
mov
out
cmp
stos
insb
mov
jns
js
cltd
call
cmp
pop
arpl
in
add
daa
push
pop
scas
dec
add
sbb
mov
cmp
jecxz
jns
les
cmpsb
cmc
lods
pusha
sbb
sub
imul
mov
loop
pop
inc
inc
lods
pop
or
andb
jbe
mov
cmp
and
notl
mov
clc
js
sbb
addr16
dec
jb
mov
pop
sub
mov
out
lods
mov
gs
sbb
cmp
inc
mov
loop
xor
adc
test
push
insb
int
loopne
cs
inc
cmc
hlt
mov
sti
das
dec
lcall
xor
adc
mov
jle
dec
push
daa
xchg
xor
push
js
dec
jno
shrl
jl
xor
daa
jmp
dec
psrlq
inc
in
cld
add
and
or
ret
push
push
jmp
sbb
cmp
out
mov
stos
sub
stos
mov
pop
std
movsb
and
mov
ds
push
decl
rolb
mov
adc
fwait
or
add
aaa
and
ret
mov
inc
cmc
mov
int3
inc
sbb
or
sub
lods
add
mov
iret
xor
cmc
icebp
and
movd
bound
jae
cmpsl
ret
pusha
xchg
cld
loope
jmp
sub
push
decl
test
mov
loop
test
mov
mov
out
andb
jne
jge
test
sti
xchg
adc
ret
add
cmp
stc
call
loop
push
sub
imul
lret
bound
inc
outsb
notl
inc
jae
outsb
jnp
pop
aad
sbb
in
sbb
fnsave
or
inc
scas
rorb
sbb
and
psubusw
mov
imul
imul
push
mov
dec
mov
cmp
sti
ljmp
fcmovbe
mov
andl
push
adc
add
arpl
mov
cs
cmp
ss
mov
inc
inc
or
in
jmp
push
sbb
jb
xor
mov
repz
addr16
stc
loope
scas
mov
sbb
xor
flds
xchg
adc
push
lods
mov
dec
xchg
out
or
and
mov
pop
iret
clc
pop
push
add
fadd
cltd
cmpsl
push
sbb
test
cmp
popa
and
adc
addr16
pop
cmpsl
inc
mov
cmp
bnd
outsl
std
dec
clc
leave
cltd
jne
mov
add
insb
mov
jge
mov
xchg
sub
jno
push
iret
sub
pop
mov
repnz
in
movsl
push
pop
mov
fimuls
sbb
sbb
ljmp
mull
cli
mov
pop
dec
mov
add
aaa
test
jle
adc
aaa
test
or
sub
add
push
insb
std
fdivr
inc
push
daa
mov
imul
add
repz
lcall
sbb
fsubrs
clc
das
cld
mov
fldenv
notb
loopne
outsl
jge
cli
or
adc
repnz
mov
pop
jns
mov
and
mov
mov
das
pop
lret
mov
sub
dec
push
sub
xchg
scas
inc
xor
movsl
adc
jmp
mov
jae
xor
cmp
or
es
clc
jb
aas
je
stos
aas
xor
cmpsl
aam
jecxz
fidivs
mov
fdivrl
fildll
out
je
iret
lcall
aad
shl
loop
mov
lret
ljmp
adc
out
insl
xlat
in
lock
jp
mov
mov
xor
xor
gs
xchg
inc
mov
inc
ljmp
int3
sti
pop
and
ds
jmp
ja
xchg
dec
js
jae
inc
and
jnp
push
test
mov
les
out
stos
fwait
push
cmpsb
out
and
mov
push
fxch
jp
stc
ljmp
cmp
imul
dec
inc
xor
scas
shll
in
test
mov
jge
pop
ficoml
ret
adcb
push
stos
cmpsb
adc
push
es
cmp
jecxz
mov
jbe
adc
add
movsl
ficoml
sub
int
lods
aas
inc
orl
scas
test
leave
pushf
in
mov
and
out
xchg
andb
in
and
popf
mov
call
ljmp
pop
insl
call
fsub
or
lret
adc
mov
cmp
ss
cmc
mov
cltd
test
push
call
repz
mov
dec
pop
scas
imul
jp
or
jecxz
std
sub
jae
leave
or
xlat
and
ja
pushf
cmpsl
xchg
or
xchg
dec
push
jl
call
fadd
pusha
or
and
dec
popa
lahf
sbb
dec
push
sti
cmp
lock
push
xchg
and
stc
push
sub
mov
mov
insb
rcl
stos
cmc
sbb
xor
jg
mov
das
or
push
clc
mov
dec
fbstp
out
js
cmpsl
mov
push
or
xlat
mov
or
insl
test
sbb
pop
dec
int
hlt
or
imul
shlb
shl
outsl
sub
xor
ds
mov
insb
lods
scas
adc
lds
icebp
in
xor
ss
lds
mov
imul
loope
rcll
mov
mov
sbb
jbe
test
pop
pop
sub
dec
rcll
dec
subb
mov
inc
je
enter
push
add
inc
addr16
jp
out
mov
and
cmpsb
ficoms
dec
or
subl
mov
inc
icebp
ss
fstpl
daa
movsl
and
xchg
mov
ficoms
push
sbb
jle
mov
push
fbstp
pusha
or
faddp
sub
adc
mov
jne
xor
andl
cmp
xchg
xchg
dec
imul
rol
jne
in
adc
push
lret
movsl
fwait
and
mov
fsubl
xchg
push
jle
or
aaa
push
mov
adc
mov
xor
mov
xchg
call
mov
aas
inc
shrb
xorl
out
dec
insl
outsb
and
xlat
test
fnsave
ret
fwait
nop
movsb
mov
insb
inc
mov
aam
fs
es
xchg
push
fistpl
fstl
les
pop
jg
fidivs
dec
loop
imull
mov
loopne
xchg
cld
pop
mov
daa
sub
leave
mov
sub
sti
push
xor
notl
push
out
cmp
insb
scas
cltd
xchg
orl
mov
push
mov
ret
leave
sub
inc
push
imulb
test
addb
jl
mov
xchg
dec
xor
mov
xor
fisubs
sbb
sbb
pop
jge
push
xor
mov
in
jmp
lods
repnz
ret
insb
mov
outsl
xor
xchg
xchg
ljmp
popl
iret
or
sbb
idivb
xchg
jns
mov
rcrb
jnp
cmpsl
stos
cmp
jp
pop
pop
adc
push
dec
fbld
fsub
jge
jno
das
icebp
test
sbb
lods
call
mov
lods
int3
sbb
mov
lds
cs
or
dec
cld
push
icebp
icebp
fs
push
mov
push
lods
mov
cltd
in
and
mov
cwtl
mov
fsubp
lahf
pop
cmp
ss
cmp
subl
or
sti
dec
mov
jmp
pop
loop
stos
clc
orb
mov
add
stos
jns
pop
pop
dec
xchg
push
sub
mov
scas
lods
push
mov
and
aaa
xchg
call
out
pop
cmc
xor
adc
or
lds
lea
lds
adc
lahf
and
jae
mov
test
dec
fwait
jns
cmp
jle
es
jp
push
hlt
fdivrs
xchg
mov
data16
pop
and
xchg
add
shr
jno
sti
call
mov
pushf
xlat
lods
jbe
fcoms
shrb
rorb
cwtl
fsts
mov
xchg
repnz
xchg
js
jno
jge
outsl
pop
out
dec
jge
fstps
jae
cs
dec
cmp
aad
and
jns
bound
or
push
sarl
std
in
lcall
xchg
jb
dec
aaa
sbb
ficoms
sub
mov
dec
pusha
cmp
pop
xchg
test
frstor
pop
xchg
ss
pop
push
incl
aaa
out
cmc
call
mov
push
and
xchg
pop
inc
sub
aad
push
mov
or
push
push
cmp
cmpsb
and
repz
sti
pop
mov
outsb
jmp
out
cmp
add
ret
cmp
mov
cmp
cmp
dec
in
lods
fisubl
xchg
rcll
loopne,pn
pop
jle
mov
push
or
movsl
in
rol
sbb
aaa
fmull
jle
and
mov
xor
dec
test
jle
inc
push
ffreep
nop
repnz
cmpsl
loop
fwait
nop
xchg
or
inc
mov
sbb
scas
add
fwait
negb
adc
pop
inc
mov
daa
leave
test
xchg
xorl
xlat
push
out
push
leave
std
into
cmp
xor
mov
or
sbb
pop
sbb
icebp
adc
mov
ret
ss
xor
repnz
stos
push
dec
dec
shrb
push
dec
out
dec
stos
lock
stc
fistps
add
add
daa
dec
sub
add
inc
mov
repz
sub
mov
jmp
out
lds
ret
adc
mov
leave
mov
cmpsl
jnp
loop
inc
fnstenv
test
add
sbbb
shll
adc
fcmovne
mov
int3
pop
daa
mov
mov
xchg
imul
int
adc
mov
and
or
push
movsb
inc
scas
cmpsl
push
sbb
mov
int
mov
xor
cltd
sbb
xor
icebp
je
jl
xor
inc
pop
and
push
sbb
xchg
push
dec
inc
xchg
clc
sahf
xor
and
dec
adc
mov
stos
lahf
sub
push
inc
push
inc
imul
jg
adc
call
stos
mov
xchg
sub
push
je
xor
add
enter
imul
loopne
jl
adc
fistps
and
sub
jg
fsubs
out
clc
lret
fiaddl
ret
push
repz
leave
mov
loopne
dec
sbb
mov
loopne
je
dec
bound
sbb
mov
mov
add
cmp
xchg
pusha
aam
and
repz
inc
fcos
push
adc
fisttpll
leave
jmp
aam
add
imul
pop
sub
cmp
test
insl
xor
push
dec
mov
adc
out
test
popa
or
stos
mov
out
dec
in
mov
lea
call
cmpsb
lods
scas
stc
xor
jmp
in
data16
fs
shl
icebp
test
mov
outsb
mov
mov
arpl
leave
nop
adc
jmp
mov
js
lock
pop
mov
cmpsl
enter
incb
sbb
mov
mov
call
mov
and
xor
imul
mov
xor
ficompl
pop
call
jnp
stc
arpl
sbb
pushf
into
mov
cmp
movsb
outsb
jnp
rol
in
pop
fstpt
xchg
insb
pop
lahf
mov
hlt
negb
and
jne
xor
mov
gs
jno
clc
adc
mov
std
sbb
cld
mov
pop
push
dec
shll
mov
cli
mov
mov
stos
add
cld
dec
xor
test
in
add
push
mov
leave
xor
bound
pop
cmp
push
xlat
cmp
cmpsb
sub
xchg
notl
mov
movl
insl
jns
or
pop
push
addb
pop
arpl
jns
mov
out
adc
mov
mov
xorl
xchg
popf
mov
mov
pusha
lds
pop
movsl
inc
push
pop
clc
cmc
ret
roll
enter
lahf
test
fnstenv
jg
arpl
popf
gs
and
arpl
inc
fdiv
jp
jno
cmpsb
mov
leave
movsl
ficoml
mov
mov
test
mov
fadd
mov
sti
push
pop
mov
inc
ss
xchg
inc
adc
xchg
lret
xchg
jmp
sarl
test
add
insl
hlt
pop
add
pusha
inc
faddl
xor
mov
ss
sub
aam
and
loope
sahf
cltd
movsb
popa
clc
jmp
sub
inc
sbb
lcall
mov
or
ret
mov
dec
adc
mov
mov
loopne
ret
xchg
mov
and
enter
lcall
adcl
mov
jne
ret
inc
push
cmp
xchg
fistps
jle
stc
rorb
gs
js
notb
je
js
jecxz
push
clc
xor
lcall
jbe
addl
jns
mov
sahf
sbb
gs
sarl
popa
std
call
xor
push
and
xor
xor
inc
sbb
outsl
inc
sti
aam
mov
xchg
inc
xchg
scas
addr16
in
sub
xchg
or
clc
adc
cmpsl
dec
jl
iret
dec
pop
lcall
enter
stos
out
leave
les
mov
sahf
cmp
dec
or
xchg
xor
lods
out
inc
sub
call
pop
insl
xor
mov
sbbb
xchg
ret
mov
jb
jbe
jo
pop
jne
cmp
push
dec
dec
inc
int3
popa
cld
jnp
mov
aam
jne
imul
jle
mov
pop
adc
dec
cmpsl
xor
xor
jbe
aad
add
jbe
mov
imul
adc
mov
mov
out
outsl
gs
push
popa
or
hlt
fnstenv
out
rcrl
mov
adc
push
mov
in
mov
test
cmpsb
jnp
fdivs
das
mov
sub
scas
dec
dec
xor
add
sub
fnstcw
pop
pop
dec
and
imul
gs
sbb
pop
fdivs
loop
mov
imulb
repnz
xor
outsl
movsb
cmp
aaa
ror
out
mov
mov
and
in
and
js
bound
dec
jge
add
adc
mov
out
dec
in
add
leave
ljmp
sbb
loop
mov
movsb
cmp
jecxz
dec
sahf
jns
dec
push
cli
dec
jno
xchg
or
xchg
or
nop
cmp
mov
pop
call
push
sub
bound
js
push
mov
popa
out
push
add
fwait
add
movsb
fwait
push
or
mov
xchg
sub
out
sub
xor
pop
je
int3
popf
mov
and
stc
movl
adc
jg
les
out
push
subl
xor
bound
inc
sub
xchg
jbe
cmp
inc
sub
fiadds
rcrb
sbb
imul
pop
cmpb
push
out
ja
or
inc
pop
push
dec
inc
xchg
dec
call
sti
mov
cmp
mov
iret
mov
dec
mov
out
add
mov
mov
stos
pop
mov
scas
xchg
mov
adc
or
jmp
js
data16
jno
mov
push
mov
out
addr16
gs
fs
fdivs
lods
data16
add
out
jne
call
mov
sbb
loopne
hlt
and
adc
or
xchg
mov
lods
mov
mov
inc
es
mov
movsb
push
jp
dec
push
sbbl
sbb
sbb
enter
cmp
lods
in
fcomi
mov
mov
cmpsb
dec
jnp
cmp
or
mov
or
mov
push
cmc
pop
and
nop
push
push
or
and
rcrl
arpl
mov
lock
movb
xchg
jecxz
arpl
call
adc
sarl
cmpsb
orl
push
xor
out
and
lcall
sti
clc
inc
clc
pop
sahf
js
push
push
xor
cmc
xor
mov
mov
in
add
cltd
je
fs
mov
out
or
sub
cwtl
in
dec
xor
xchg
popf
mov
hlt
sub
jp
push
add
lods
les
adc
test
push
jae
test
int3
lret
or
xchg
leave
and
outsb
jmp
cmp
hlt
daa
cmpsl
in
mov
pop
pop
pop
mov
adc
test
jg
stc
outsb
mov
lahf
rcll
lea
push
enter
cli
cwtl
sub
and
xchg
test
jnp
adc
mov
sbb
xor
scas
fst
sbb
arpl
sbb
jecxz
cmpsb
test
cltd
fnstcw
cmp
cmpsl
cmp
outsl
lret
mov
xchg
cli
sbb
sbb
in
cmp
cmp
insl
shlb
pop
and
test
adc
sbb
xlat
adc
lret
jae
leave
xlat
dec
les
cltd
fcomp
outsb
inc
xchg
arpl
movb
in
cld
xchg
jo
push
mov
sub
jmp
adc
and
or
push
and
std
xor
sahf
es
xchg
sbb
icebp
out
jbe
push
test
es
loopne
sub
fidivrs
xchg
fs
pop
xchg
inc
and
daa
loopne
dec
repz
cmpl
mov
push
push
sbb
ss
mov
mov
mov
setg
sbb
xchg
lea
sahf
je
or
mov
ljmp
fcmovbe
lods
push
push
mov
gs
int3
stc
inc
jmp
ss
jns
cmp
mov
leave
rorl
repnz
mov
jno
insl
mov
out
dec
inc
rorl
icebp
pop
ds
inc
in
inc
xchg
add
in
in
sbb
out
lods
mov
dec
icebp
adc
mov
mov
push
ficoml
arpl
and
frstor
dec
cmp
insl
enter
in
leave
leave
pop
mov
les
in
das
inc
and
xchg
mov
out
icebp
jecxz
rorb
faddl
push
icebp
xchg
sub
push
jb
pop
xchg
push
xchg
cmpsl
mov
mov
xchg
mov
push
sbb
pop
adc
mov
mov
jmp
xor
mov
dec
addl
das
ljmp
or
sarb
sbb
xchg
adc
lock
xchg
jmp
jns
cs
insb
or
out
test
add
pop
rcr
pop
and
lret
push
cld
pop
dec
add
jns
stc
aad
mov
outsl
adc
arpl
outsb
inc
inc
sbb
mov
sbb
imull
pop
lret
cmpsb
test
arpl
cmpsb
stos
xchg
cmp
imul
xor
inc
cmp
test
adc
arpl
jmp
sbb
into
jecxz
cmpsb
cld
or
xor
repz
jno
call
jle
sbb
shrl
mov
inc
dec
mov
and
ja
cmp
ret
dec
pop
ja
movsl
add
test
test
sub
dec
xchg
jp
or
popa
push
sbb
lahf
push
lret
xor
mov
pop
cmc
push
mov
inc
cmp
mov
push
or
imul
inc
push
add
insb
fdivrl
iret
sbb
cmp
cmp
sbb
notl
pop
cli
mov
sub
inc
sbbl
jg
bound
test
rcrb
sbb
mov
scas
idiv
push
mov
jmp
ja
insb
mov
cmpsb
lock
sti
movsb
mov
das
mov
jl
mov
pop
adc
aas
loope
testl
daa
scas
mov
push
sub
jbe
rorl
psubusb
lock
popf
jne
imul
sbb
movsb
mull
outsb
jo
repz
mov
aaa
jb
push
imul
pushf
inc
add
inc
push
fucomp
xor
xlat
scas
push
jg
inc
repnz
mov
pop
addr16
fidivl
inc
call
or
fsubr
inc
xlat
mov
sub
xchg
pusha
adc
repz
push
sub
push
aad
in
shr
lds
mov
cs
sub
pop
jae
fimuls
pop
push
addr16
mov
fadd
in
shrb
add
rcl
pop
push
inc
mov
sub
jle
push
ds
xchg
cmp
push
xor
iret
sbb
jp
aad
call
pop
rcr
jl
dec
jecxz
pop
inc
mov
fs
cltd
lcall
cs
ljmp
mov
imul
adc
data16
mov
not
mov
daa
xchg
push
aas
xor
cld
mov
lcall
jns
dec
sub
dec
stos
in
out
xchg
mov
xchg
cwtl
cwtl
int
add
xchg
jb
lahf
mov
das
test
imull
mull
mov
mov
imul
ror
popa
add
jbe
cmc
push
or
stc
sub
fcmovnu
xchg
mov
xchg
cltd
std
and
ds
gs
xchg
xor
pop
sbb
inc
out
and
aam
jne
mov
adcb
sbb
sub
stc
lods
aad
call
xor
imul
pop
lret
ret
roll
pop
jb
insl
loop
in
mov
rorb
mov
stc
sbb
mov
mull
xor
mov
arpl
sbb
hlt
out
lahf
movsb
add
sbb
mov
jmp
lcall
or
pop
jmp
in
in
sub
and
pop
sbb
in
inc
xorl
lahf
or
out
cmp
loope
jp
nop
adc
scas
lds
loop
add
or
jb
icebp
dec
rolb
jo
jle
data16
sub
std
pop
lock
std
jmp
adc
xor
mov
xor
lods
and
aas
std
ja
dec
rcll
pop
lahf
call
jae
xchg
mov
es
xchg
fmuls
push
mov
fmull
xchg
imul
pusha
lret
pop
mov
testb
aad
and
sub
aas
dec
xchg
cmpsl
xlat
adc
sub
jp
lds
xchg
flds
imul
popa
sbb
inc
les
imul
test
jmp
mov
fcoms
pusha
cs
test
sbb
push
ds
in
dec
jmp
fwait
mov
cmc
stos
in
test
dec
push
sub
out
push
cmp
inc
jg
sub
mov
xor
inc
popf
scas
or
mov
out
xchg
cli
sbb
and
outsb
dec
in
mov
idivl
mov
bound
ljmp
out
js
sbb
sar
jmp
sub
or
or
and
fwait
jl
ret
bound
cmpb
pop
cmc
cmp
mov
adc
sbb
call
stc
imul
inc
test
repz
and
aad
dec
dec
test
xor
sbbl
wrmsr
leave
imulb
out
sbb
jmp
out
mov
pushf
das
and
cmp
lcall
sbb
nop
mov
lcall
push
out
arpl
movsl
ja
in
xor
push
pop
mov
jnp
pop
pop
add
inc
mov
test
pop
enter
mov
test
aad
dec
out
xchg
pushf
in
mov
adc
inc
and
cmpsl
arpl
cs
push
arpl
inc
jae
push
das
popf
mov
sub
mov
lcall
mov
stc
ja
lock
fiaddl
mov
xchg
lret
aaa
mov
add
and
xchg
lea
popf
cmpsl
lret
cmp
aas
ret
cmp
and
jo
cmp
mov
mov
mov
neg
mov
test
fs
ret
shl
cmp
std
and
and
mov
in
adc
xchg
stc
pop
xor
xchg
int3
lds
lods
sahf
out
inc
std
adc
pusha
lods
ss
pop
cmp
adc
sbb
fisubrl
nop
push
jne
xor
inc
cmp
push
scas
test
jp
out
shrb
xor
add
ret
pop
mov
cs
clc
movsb
dec
faddl
in
leave
jb
adc
into
fists
ja
lods
jno
add
stc
stos
movsb
mov
daa
push
jo
cmp
popa
mov
bound
je
pop
lahf
pusha
faddl
sub
xor
dec
aaa
mov
jnp
xchg
pushf
cmpxchg
cmpsb
dec
inc
test
lods
addr16
cmp
je
add
jp
push
shll
inc
cmp
mov
mov
mov
pop
lods
mov
inc
ss
shl
pop
dec
cwtl
xor
or
ja
push
mov
pop
ficoms
dec
ret
dec
jns
imul
es
pusha
xchg
lea
testb
mov
jg
loop
idiv
rclb
in
sbb
repnz
lods
fdivrs
in
shr
outsl
int3
cmp
roll
add
mov
test
test
jmp
imul
and
adcb
gs
hlt
inc
pop
orl
and
aas
mov
sbb
pop
cmp
push
fdivl
push
sbb
pop
xor
in
mov
addr16
cmpsb
inc
dec
movsl
cmc
adc
pop
xchg
shll
aas
adc
push
mov
push
cmpsb
in
or
movsl
and
fistpl
repz
test
cmp
mov
and
add
adc
sub
pop
adc
movsb
push
lret
pop
cmp
cmpsl
jb
push
loopne
call
loopne
or
adc
pop
aas
sbb
sub
out
cltd
std
xchg
mov
fucomp
icebp
cld
jecxz
add
pusha
test
fcmovb
xchg
in
pop
xor
out
pop
dec
out
sti
or
lahf
xchg
popa
mov
cwtl
inc
dec
mov
mov
sbb
adc
or
mov
decl
ror
xor
push
push
mov
sub
sti
jecxz
adcl
sbbb
mov
rol
mov
ret
inc
adc
mov
rcll
nop
daa
aaa
push
xor
popf
int3
jns
xchg
incl
je
rclb
jg
adc
adc
mov
push
loope,pt
addr16
lods
jp
add
dec
xorl
push
cltd
push
xchg
lcall
test
inc
imul
call
xor
push
cmp
test
push
es
in
ss
mov
sbb
cmp
std
jne
fwait
mov
pop
xchg
fdivr
xor
gs
push
or
rorl
loope
dec
sbb
mov
test
cmp
aad
insb
jnp
xor
das
daa
in
sub
lret
movsb
nop
mov
or
xchg
mov
call
dec
xchg
xlat
mov
push
enter
out
addr16
pop
gs
jecxz
arpl
or
jne
pushf
push
movsl
xchg
lret
ret
out
decl
sub
mov
sar
mov
cs
xor
adc
sahf
stos
sar
das
les
outsl
cld
mov
push
mov
push
xor
stos
stos
dec
pushf
pop
sbbb
roll
jno
push
or
movsl
xchg
mov
or
imul
pop
sbb
incl
in
mov
fcoml
sbb
insb
flds
ljmp
not
jmp
scas
aaa
iret
sub
sbb
xchg
out
and
dec
xchg
or
cld
pop
enter
insl
xlat
lds
ds
shlb
mov
or
inc
dec
je
movsl
sbb
or
pop
ja
pop
icebp
inc
insl
rolb
aam
orl
das
adc
sub
mov
lahf
ds
imul
cs
stos
mov
roll
pop
outsl
lods
fildll
cmp
or
ljmp
jg
rcrb
lret
sbb
and
fcomps
xor
fucomip
xchg
std
ret
push
mov
dec
xchg
sti
mov
and
adc
sbb
dec
jle
outsb
cmpsl
cmp
xor
scas
inc
mov
aaa
jb
cld
jle
out
std
ret
imul
jmp
js
movsb
dec
les
lock
sti
mov
sbb
and
mov
or
ljmp
adc
loope
pop
dec
push
xor
jbe
sub
xchg
adc
sbb
mov
inc
cltd
push
add
lahf
inc
shll
cwtl
adc
insl
add
bound
lret
cmp
in
sbb
sub
sub
mov
mov
add
push
outsb
stos
jl
jbe
jmp
mov
std
sbb
push
push
aas
dec
mov
outsb
jbe
mulb
dec
jmp
stos
ds
inc
aas
stos
inc
fiaddl
sub
pop
loope
jmp
fstl
mov
mov
fistpll
pushf
sti
xchg
sbb
jmp
xchg
cmp
lret
divl
mov
ss
cmc
pop
mov
jbe
scas
xor
or
mov
aaa
rcl
jle
xchg
sub
mov
in
ret
lods
adc
or
popf
rcl
push
stc
push
scas
rcrl
fildl
lea
push
stc
sub
push
nop
cmpsb
test
jae
mov
repnz
adc
das
fsts
push
and
data16
test
inc
lock
repz
ret
push
rep
push
adc
and
xor
jecxz
sub
sbb
lods
call
pop
and
jg
dec
mov
xorl
and
mov
mov
jne
mov
sahf
xor
or
daa
add
push
xor
into
sub
nopl
and
mov
cmp
in
call
mov
xchg
sbb
lret
mov
push
fisubs
dec
push
out
dec
or
loopne
popf
sarl
movsl
les
iret
popa
out
jmp
push
pushf
xor
sahf
rcr
in
jne
test
pop
test
loop
mov
pop
mov
int3
gs
int
dec
sub
mov
lds
adc
dec
sbbl
int
icebp
inc
fisubrl
or
es
shlb
aad
jns
enter
lds
sub
and
in
push
lds
daa
mov
jge
or
inc
push
mov
push
jbe
mov
test
mov
pop
push
cmc
cld
scas
push
nop
jmp
dec
add
cmpsl
sbb
cmp
cmpsb
ss
insl
ret
cmpb
and
sbb
ret
aas
mov
out
push
mov
rclb
pop
scas
xchg
enter
pop
jecxz
xchg
es
cwtl
fs
rcr
cmp
pop
mov
and
mov
shll
loopne
sub
add
hlt
ss
mov
jne
imul
pop
int3
mov
mov
cwtl
mov
stos
dec
adc
les
mov
cmc
test
cmp
and
mov
das
mov
dec
inc
nop
dec
push
pop
jl
cld
imul
lret
pop
pusha
loopne
push
out
stos
leave
push
rorb
ror
adc
cwtl
fmull
or
pusha
mov
sub
scas
push
stos
ffreep
push
mov
jmp
mov
sub
and
scas
sub
xchg
and
loop
rclb
fcomip
push
int3
sti
repnz
push
push
shrb
inc
xchg
cmpsb
outsl
test
lods
mov
dec
xchg
jge
inc
push
sbb
fld
push
scas
sub
pop
sbb
xchg
repnz
cmp
ret
jmp
insl
sarl
arpl
push
sbb
into
sub
mov
inc
int
jg
pop
fnsave
inc
in
or
mov
cli
inc
inc
inc
xlat
or
push
sbb
adcb
jecxz
xorl
jnp
and
dec
fcmovnb
fwait
rolb
popw
mov
or
dec
add
mov
jge
mov
push
mov
mov
stos
pop
mov
lock
push
pop
div
cld
mov
pusha
mov
sub
in
cld
adcb
lock
and
test
ret
mov
dec
sahf
mov
mov
popa
lock
addb
sbb
rcl
mov
rorb
adc
sub
push
adc
sub
das
stos
dec
pushf
popa
cmpsl
ret
jmp
jae
push
ds
mov
dec
mov
fs
mov
mov
xchg
xchg
cli
in
out
loop
adc
xchg
movsb
icebp
xor
hlt
cmp
push
xlat
inc
jl
outsl
lret
inc
push
loope
inc
fisubl
push
lods
and
xchg
or
xorl
dec
imul
data16
cmp
cmpsb
sbb
add
cmc
xchg
sbb
lret
adc
fdivrl
incl
push
aaa
fidivl
adc
adc
stc
xor
jp
inc
inc
outsl
outsl
xchg
lret
notl
fwait
ret
sbb
fcmove
stos
pop
enter
out
out
or
in
std
pop
xlat
lods
pusha
lods
repnz
andl
imulb
outsb
lcall
or
mov
ljmp
sub
bound
sbb
jbe
xor
inc
xchg
shl
jecxz
jns
jb
ljmp
loopne
mov
pushf
inc
inc
sbb
mov
pop
imul
js
pop
nop
mov
outsl
popa
inc
mov
add
xor
or
jg
jns
or
mov
dec
fcmovb
adc
aas
mov
daa
faddl
sbb
insb
stc
es
or
daa
mov
mov
dec
pop
mov
loop
push
push
ret
stc
pop
mov
test
dec
popf
add
jae
inc
repnz
cmp
out
mov
mov
add
imul
jmp
pop
pop
arpl
test
mov
cmp
sbb
mov
mov
adc
daa
repnz
sub
decb
jns
adc
repnz
movsb
pop
ret
cmp
cmp
sub
popa
into
rcrb
push
subb
sub
and
adc
adc
cwtl
es
or
xchg
subl
gs
mov
sub
je
adc
xlat
adc
cmp
add
rcrl
fwait
pop
jne
add
sbb
xor
lock
movsb
outsl
in
scas
and
inc
cmp
sbb
pop
and
push
or
pusha
mov
rolb
test
mov
rolb
ss
sahf
xchg
adc
push
imul
push
in
xor
cmc
ljmp
pop
sbb
cli
mov
sub
dec
inc
in
lret
pusha
or
leave
xchg
cltd
push
mov
sbbb
mov
fs
lock
jg
mov
ret
push
sbb
mov
popf
sahf
cmpsl
mov
adc
cmp
ss
nop
sub
dec
pop
sbb
aam
xchg
mov
dec
and
jle
jno
pop
cmp
xchg
or
dec
pop
jb
adc
xor
xchg
and
icebp
lcall
ret
rorl
push
jns
pop
ss
lcall
mov
arpl
cs
roll
pop
jge
push
jae
fstl
scas
mov
dec
sub
call
mul
add
and
in
mov
and
push
fstpl
out
rclb
add
ss
push
sub
sbb
in
adc
fwait
push
inc
push
ja
cmc
add
lret
jle
in
repz
inc
cmpsb
dec
and
repnz
sti
loop
sbb
daa
cmp
call
pop
mov
xor
lock
shlb
pop
movb
mov
inc
popf
rcrl
out
mov
fnstenv
jp
jmp
pop
push
push
sti
mov
mov
add
dec
test
xchg
push
addr16
push
es
nop
mov
scas
mov
insb
xchg
outsl
aad
xchg
in
adc
mov
sbb
es
dec
shll
test
mov
mov
outsb
sub
fmulp
and
sub
jecxz
test
shl
pop
popf
sahf
and
loopne
or
movsb
jl
mov
cmp
push
add
lods
adc
aad
mov
or
mov
mov
out
fwait
push
mov
pop
inc
in
pusha
fsubrs
add
std
rolb
cltd
xlat
mov
leave
xchg
ss
pop
push
addr16
cmp
or
push
sub
mov
or
ss
in
add
outsb
in
stos
push
and
xchg
fcompl
xchg
fidivrs
jge
sub
std
cmpsb
and
shlb
xchg
cs
in
push
int3
pop
push
enter
pop
dec
dec
mov
sub
loop
popa
sbb
adc
aad
faddl
inc
insb
in
sbb
adc
pop
and
aaa
dec
jnp
data16
mov
add
mov
ret
lds
outsb
pusha
pop
mov
ficoml
mov
loope
jp
jp
mov
adc
pop
jb
add
insl
and
insl
sbb
jnp
adc
ss
bnd
clc
in
addb
sub
sub
movsl
lock
jbe
adc
repnz
aam
lret
xor
aad
jne
sbbl
mov
mov
enter
std
lret
and
addr16
rclb
in
orb
xchg
pop
lds
push
cmp
in
mov
add
mov
rclb
xchg
cld
jo
jo
cltd
adc
hlt
sbbb
pop
cmc
mov
pop
pop
ja
jecxz
subl
in
in
outsb
xor
xchg
and
and
lock
stos
stc
or
and
out
or
test
add
sahf
push
sbb
jo
add
xchg
scas
mov
push
mov
xchg
scas
ja
xor
push
jle
scas
lock
jp
das
rorl
pusha
or
xchg
push
dec
into
addr16
out
pop
lret
jle
dec
inc
pop
in
xor
add
insb
cmp
jge
pop
jmp
mov
and
mov
das
aam
scas
stc
lock
sbb
jo
and
repz
negl
push
cmp
sub
dec
or
mov
enter
push
ja
dec
xor
push
dec
adcb
xor
sbb
arpl
and
and
repz
and
adc
xor
xchg
enter
insl
cmp
pop
sub
cmp
xchg
shrb
dec
lret
test
subl
xor
xor
and
pop
imul
jnp
sbb
jb
xchg
jle
hlt
jae
cmpsl
nop
sub
cld
mov
xchg
sti
push
or
mov
mov
inc
out
jns
push
arpl
xor
sub
pop
mov
mull
xor
adc
xchg
mov
or
cltd
test
sub
jl
inc
inc
into
pusha
sbb
cmp
pop
xlat
lock
add
fists
pop
add
std
mov
xchg
rcrb
mov
call
out
das
jb
ret
cmp
popa
rol
iret
mov
push
mov
and
popf
jne
loop
jmp
loop
xchg
fisttps
xchg
inc
outsl
test
jge
jecxz
xor
push
scas
or
cmp
out
mov
inc
and
adc
not
and
out
int3
jbe
sub
fsubrs
xor
xor
xchg
push
pop
lock
adc
xor
fs
sub
sub
cs
xchg
jmp
or
test
dec
jnp
push
movsl
dec
and
aad
data16
adc
cmpb
inc
cwtl
xchg
lods
jne
push
add
je
xor
push
mov
bound
aaa
jg
shll
dec
add
movsl
dec
ja
xchg
push
loop
push
dec
mov
ds
and
aas
shlb
mov
and
outsl
mov
arpl
fldl
es
sti
and
xchg
stos
push
pop
push
mov
sub
inc
out
test
fcoml
mov
and
fsubl
jle
dec
jge
xlat
add
jg
test
add
lds
repnz
in
sbb
jmp
adc
adc
pop
mov
sbbl
xchg
pop
push
sbb
loope
jns
jnp
or
lea
mov
test
push
push
jecxz
call
ljmp
lcall
pop
pop
icebp
fcmovnu
push
xlat
stos
data16
xchg
sbb
pop
jb
int
adc
sub
mov
add
and
pop
cli
mov
jnp
jge
dec
pop
pop
adc
addl
js
ljmp
repnz
ss
mov
jge
mov
pop
cmc
cld
pop
mov
ja
movsl
jle
adc
testl
sub
pop
adc
popa
leave
mov
mov
into
pop
out
sub
push
bound
cmp
call
imul
dec
je
sub
sbb
mov
into
inc
jns
push
imul
pop
fwait
push
push
insl
in
push
lret
push
add
in
bound
cmp
xchg
mov
inc
call
cmp
xor
sub
or
push
inc
mov
push
jo
pop
pusha
fisubs
pop
inc
sub
pop
ds
mov
lds
or
xchg
mov
iret
mov
mov
icebp
es
xchg
fwait
scas
xchg
adc
sar
xor
ds
je
mov
shl
das
repz
and
xchg
xor
or
in
stc
movsl
mov
in
or
pushf
push
xchg
pop
cmpsb
sub
inc
into
sbb
jo
shl
popa
push
xor
xchg
add
xorb
sub
rclb
aam
aam
mov
in
std
xchg
push
pop
dec
es
cltd
mov
push
fs
mov
das
imul
lcall
push
or
sub
test
ss
orl
push
cmp
sarb
pop
cmpsl
mov
fs
mov
test
les
call
in
xor
call
jge
daa
insl
leave
push
popf
xor
subl
mov
mov
sub
std
lret
sbb
lea
jae
dec
push
and
imul
sbb
push
sbb
or
fstpl
lret
push
push
sbb
mov
fimull
cltd
call
cmpsl
aad
das
pop
mov
mov
clc
out
cmp
cwtl
xor
pop
push
xchg
pop
lods
pushf
xchg
xor
or
mov
and
sub
mov
dec
pop
test
cld
dec
outsb
push
into
mov
and
sahf
sub
mov
xchg
inc
mov
aas
lcall
cmp
xchg
xchg
sbb
je
fs
and
mov
push
or
mov
mov
mov
and
movsl
push
bound
insl
adcl
xor
lds
aas
add
mov
std
jbe
int3
das
push
and
jmp
jge
xchg
mov
and
idivb
dec
push
sbb
lods
insl
stos
sti
repz
ja
call
xlat
fnstcw
sbb
sub
adc
push
or
add
clc
mov
jg
lock
pop
push
jae
flds
dec
and
sub
xlat
cmc
fnstsw
dec
xchg
pop
cmpb
inc
push
mov
rcrb
inc
cmpsb
test
dec
push
pop
je
sub
adc
lods
cltd
mov
mov
test
pop
add
hlt
pop
dec
sbb
cmpb
in
pop
ror
inc
sarl
mov
lret
sbb
lret
arpl
lcall
popa
or
pop
push
int3
fmull
rclb
add
jne
sub
cltd
mov
pop
rorb
pop
push
cmc
repz
out
out
sbb
int
xchg
mov
stc
add
mov
sbb
or
sub
pop
nop
sbb
jo
xchg
shll
enter
imul
dec
aas
andb
adc
or
jb
imul
sahf
inc
mov
jb
outsb
adc
jae
jle
push
incl
sub
insb
clc
lret
insl
in
cmp
or
lods
pop
repz
inc
mov
insb
sbb
push
lods
sbb
arpl
aad
pusha
dec
and
pop
imull
out
inc
imul
xor
cs
sarl
cmp
add
jns
jae
fstps
xor
ds
inc
xchg
pop
and
sub
enter
scas
cmp
or
xchg
jae
dec
push
outsb
and
mov
movsl
mov
xchg
inc
xchg
inc
and
shll
add
sbb
xchg
pop
sbb
push
or
cs
adc
jb
das
leave
xchg
push
or
push
or
push
stc
dec
adc
add
scas
add
add
push
dec
cmp
and
jo
xchg
push
cld
adc
jle
loope
mov
inc
push
mov
cmp
or
xlat
sbb
mov
inc
fnsave
jp
push
mov
popa
pop
add
mov
or
ss
and
push
adc
stc
pop
cmp
xchg
aas
mov
cmp
pop
dec
adc
sub
clc
and
cmp
ret
jae
jae
ret
xor
cmpsb
hlt
push
es
jp
fmuls
in
loopne
jae
stos
inc
add
insb
mov
and
dec
push
xchg
lahf
jbe
loopne
cmpb
scas
sbb
mov
into
enter
stos
mov
fdivrs
rcll
jb
pop
or
out
ja
not
sub
push
xchg
jecxz
shll
jo
or
xor
or
cmp
std
jb
add
mov
xchg
xchg
les
pop
outsl
mov
loop
add
fists
fildl
mov
test
jbe
push
adc
jmp
fisubs
aas
dec
inc
clc
test
xor
adc
shl
out
aas
jmp
ds
jns
mov
sub
push
mov
aam
mov
mov
mov
mov
mov
push
test
cli
popf
into
aam
std
add
add
jp
or
test
dec
and
dec
insb
sbb
in
sti
imul
dec
fsubl
test
inc
lret
mov
je
adc
pop
push
sti
mov
jl
cmc
je
adc
inc
sbb
jle
xor
hlt
repnz
repz
jle
hlt
dec
add
pop
push
sub
cmp
ds
cli
mov
mov
pushf
xchg
gs
or
push
enter
das
lahf
pushl
cmp
fwait
mov
mov
imul
das
fnsave
jmp
jecxz
insb
sahf
cli
xor
rorb
fisubrl
push
les
mov
pop
cmp
jle
and
xor
jg
ja
dec
push
daa
xchg
rol
test
adc
test
int
clc
dec
jg
adc
sub
cmpsb
mov
pop
push
inc
sub
or
daa
or
or
mov
or
dec
pop
adc
fsubrs
popa
jbe
mov
push
fcoml
movl
insl
jl
mov
and
mov
inc
or
pop
push
imul
or
or
jmp
sub
lahf
xchg
fbstp
dec
lcall
into
sti
repnz
lods
rorb
inc
push
mov
mov
fcoml
adcl
loope
cmovno
adcb
fnstsw
lret
mov
adc
jb
movsl
lock
push
xchg
xor
xchg
gs
pop
adc
dec
into
loopne
cmp
dec
or
inc
inc
mov
add
out
je
adc
mov
movsb
or
add
mov
lods
int3
sarl
shlb
lock
std
mov
push
cmp
cmc
mov
sbb
in
ja
ljmp
inc
rolb
outsl
mov
leave
xchg
std
cmp
cmpsb
cmp
dec
sti
jg
lret
or
das
xchg
pop
sub
dec
push
insl
in
testb
xchg
testl
mov
cmp
lcall
repz
cwtl
cmp
mov
pop
es
add
pop
xor
xor
mov
or
imul
in
stos
movsl
xchg
fimuls
movsl
cmp
mov
xchg
sarl
jp
dec
ljmp
dec
repz
jecxz
inc
pop
addr16
adc
or
cwtl
sar
and
inc
cli
jbe
sub
xor
jae
insl
fwait
cmp
jp
push
pop
pop
testb
xchg
cmpsb
sub
gs
inc
push
adc
push
test
in
arpl
and
test
push
adc
jp
dec
aam
test
push
xor
fldl
pop
arpl
push
and
mov
sbb
jle
lahf
repnz
cs
sbb
les
mov
inc
test
mov
int3
jge
mov
repnz
cmp
cli
movsb
or
push
push
aad
add
stos
push
inc
mov
inc
xchg
and
jb
daa
out
push
or
and
push
shl
or
int
rol
mov
jbe
xchg
xchg
fldl
into
es
or
mov
adc
es
xor
mov
cs
mov
xor
add
movsl
nop
mov
inc
mov
repnz
add
test
adc
repz
pop
jnp
xor
int
push
xlat
scas
outsl
mov
out
or
pusha
xlat
dec
jp
leave
dec
ja,pt
cmc
sbb
cmp
pop
xor
jnp
gs
mov
push
fwait
pop
fisttps
sub
mov
jae
pop
sarl
mov
pop
mov
add
mov
stos
mov
xchg
mov
sub
mov
mov
jb
je
std
insb
add
popa
sbb
test
decb
dec
or
getsec
call
adc
add
xadd
dec
bound
std
pop
jns
sarl
sbb
fisubrl
test
jp
and
loop
dec
cmp
daa
xchg
es
iret
sub
lret
adc
mov
subl
sub
nop
and
shll
fidivrl
jmp
add
pop
dec
out
pop
movl
mov
mov
in
shll
sbb
pop
sbb
inc
mov
insl
ds
jns
int
roll
iret
test
cmp
fldl
pop
jno
fidivrl
xorb
and
dec
pop
add
je
cmp
flds
pop
pop
enter
aam
adc
push
lds
les
push
popa
mov
dec
popa
adc
pop
cmovno
mov
nop
sahf
sbb
int
popf
arpl
mov
pusha
cmp
test
repz
xchg
cmc
add
xchg
jnp
and
cmp
iret
repnz
cmp
mov
jnp
or
mov
jbe
sbb
jbe
adcl
hlt
mov
ss
pushf
popf
fistl
test
test
out
sbbl
sub
stos
mov
push
mov
cmpsb
jp
inc
sti
pop
inc
fs
jl
mov
movsb
popa
inc
xor
jns
ret
das
cltd
jecxz
clc
jb
rclb
mov
nop
xchg
pop
scas
cmp
push
ljmp
fcomi
push
outsb
fs
jp
insl
negl
sub
iret
lock
in
push
lods
xchg
roll
shll
cmp
fidivrs
jg
fisttps
fcmovb
inc
test
loop
arpl
push
or
mov
mov
pop
mov
xchg
mov
mov
jo
or
cmp
xchg
adc
mov
adc
jno
fwait
je
mov
pop
lcall
xlat
cmp
fwait
sbb
jl
imul
xchg
dec
outsl
add
movl
lock
cltd
icebp
out
std
stc
cmp
data16
mov
lcall
push
push
adc
outsb
pop
adc
inc
or
out
cld
shrl
mov
sub
cs
cmp
in
mov
fwait
pop
stos
cwtl
mov
jp
mov
int3
pop
lcall
test
inc
fs
pop
pop
cltd
sti
mov
dec
add
sbb
add
stos
jle
sar
mov
pushf
push
or
aas
pop
or
and
testl
aaa
lock
push
aaa
adc
add
dec
xor
jns
fsubl
push
push
pop
gs
setl
fimuls
popa
test
out
dec
mov
cmp
mov
dec
mov
shrl
xor
test
mov
lea
and
push
lds
fidivs
fnstcw
lea
mov
xchg
sarl
and
mov
mov
push
sbb
inc
add
js
pop
aaa
addb
jg
fisubrl
std
xchg
dec
incb
mov
xlat
aam
adc
jge
inc
xor
in
push
iret
data16
jae
repz
cmc
adc
xor
loop
cwtl
mov
aad
scas
lods
fs
sbb
into
data16
js
sub
pop
repnz
xchg
iret
cmp
rcrb
stos
push
movsl
jmp
push
cmpsl
out
rorb
js
xor
mov
rolb
mov
daa
lcall
xlat
out
mov
sahf
data16
dec
nop
lret
and
pop
idivl
and
sub
fldcw
adc
or
popa
xor
dec
test
loop
data16
add
and
bound
xchg
adc
pop
xor
icebp
into
pop
add
or
sub
push
push
mov
pop
fcomi
sub
pop
inc
pushf
in
data16
push
jae
movsl
pop
je
or
ja
mov
lods
inc
cmp
ficompl
jbe
jno
xchg
mov
out
lods
dec
stos
movsb
femms
inc
push
push
pop
push
sub
and
jnp
push
or
cmp
lcall
and
mov
outsb
inc
hlt
push
loope
mov
dec
fwait
or
mov
test
xor
xor
jl
or
xchg
mov
test
imul
jo
imul
pop
jb
mov
sub
data16
or
push
gs
fists
jg
dec
xchg
and
adc
inc
aaa
daa
push
hlt
rcl
push
mov
ficoms
cmp
das
in
mov
bound
das
shrl
xchg
cli
shll
imul
and
push
cli
iret
xlat
aad
arpl
xor
scas
xlat
or
add
out
sbb
repz
mov
or
in
mov
push
cmp
stos
iret
pop
in
jno
xor
xchg
sbb
aas
jge
out
out
mov
stc
notb
dec
push
loopne
mov
xchg
dec
mov
sbb
or
sbb
ja
sub
push
xchg
pushf
lods
lds
pop
iret
pop
data16
dec
out
pop
jne
pop
xor
ds
xchg
inc
aaa
xchg
test
pop
dec
inc
std
fwait
pop
cmpsb
push
leave
fimull
scas
jne
jo
mov
ud2
and
ret
xor
hlt
out
mov
sbb
outsb
add
shll
mov
sti
push
mov
lock
out
test
dec
pop
push
fldt
dec
call
in
test
ds
add
iret
test
and
cmpsl
mov
hlt
mov
xchg
xor
add
mov
fmuls
mov
fnsave
xchg
xchg
pop
mov
fmull
nop
inc
jno,pt
xchg
add
movb
arpl
sarb
js
jle
push
aam
cli
shl
scas
sbb
cmp
inc
push
xlat
mov
push
cmp
inc
add
dec
fildll
lcall
pop
ja
sbb
push
add
dec
mov
test
neg
int
push
add
out
daa
in
mov
scas
push
fldl
fwait
mov
push
xor
aaa
mov
mov
mov
adc
call
inc
jmp
xor
pop
ss
mov
and
data16
stos
scas
int
push
aaa
shufps
push
push
test
jae
jp
inc
or
mov
dec
xchg
xchg
xorl
daa
sbb
movsb
mov
sub
xchg
or
test
pop
dec
popa
mov
cmp
fdiv
aas
xor
popa
je
pop
push
std
shrl
pop
adc
sub
pop
mov
loop
mov
int
mov
push
jns
and
xor
into
pop
dec
push
mov
mov
push
imul
and
data16
pop
xchg
scas
dec
jl
jbe
in
sub
adc
test
mov
mov
out
cmc
push
std
insl
jg
stos
cmpsb
in
scas
add
mov
pop
xlat
stc
add
adcl
pop
lock
pusha
into
inc
or
mov
lcall
lods
cmp
adc
in
mov
mov
cmp
pop
inc
lret
or
inc
lods
pop
bound
popf
das
push
fnstenv
ljmp
inc
xlat
mov
mov
xor
stos
and
testl
add
or
xchg
mov
push
xchg
mov
out
call
cmpsl
int
sbb
xchg
fidivrl
add
imul
pop
hlt
jnp
rcl
pop
mov
icebp
ficoml
insb
fildll
clc
cwtl
push
aas
inc
dec
add
js
adc
dec
sahf
pop
arpl
test
or
mov
lods
pop
movsb
shr
jl
push
or
cmp
mov
ss
mov
paddsb
mov
mov
into
popa
rcrl
and
rclb
cmp
in
hlt
xor
test
adc
bound
jns
push
lahf
mov
mov
sbb
aas
ret
push
shl
data16
sub
subb
aad
in
cmp
inc
sbb
icebp
icebp
xchg
push
sbb
xor
ret
push
pusha
cmpb
rorl
mov
xor
mov
aaa
in
les
ret
mov
out
lea
jbe
fildll
or
push
mov
xchg
idivb
cmp
inc
inc
cmpsb
inc
mov
add
xor
cmpsb
jg
scas
push
lcall
sub
push
mov
xchg
pop
cmp
sti
dec
push
test
xorb
xchg
subl
imul
cmovle
xchg
pop
inc
push
add
mov
lods
sarl
dec
push
jno
or
mov
jb
mov
lahf
jbe
popa
hlt
gs
dec
adc
xchg
push
test
cwtl
movl
fnsave
imul
jno
jecxz
pop
and
stos
test
jmp
aas
nop
lahf
fdivp
sbb
mov
cmc
std
std
mov
fs
inc
js
pop
cmp
and
in
loope
jge
mov
mov
cmpsb
sbb
pop
stos
shlb
call
in
mov
push
push
pop
and
outsl
loop
add
inc
rcrl
and
shlb
xchg
jbe
inc
xor
and
outsl
mov
dec
sbb
lods
popf
adc
xchg
push
add
enter
pop
stos
fsubrs
iret
ljmp
add
adc
push
dec
mov
adc
jo
les
pop
jl
mov
sahf
notb
mov
int3
sbb
or
cwtl
rorb
pop
movsl
jae
sub
xlat
and
mov
or
ja
and
inc
in
adc
jne
jo
nop
div
inc
aaa
inc
pop
jno
es
popf
outsb
mov
sti
mov
test
push
xchg
outsb
pop
cld
inc
xchg
mov
int3
push
mov
pop
mov
lcall
lods
jno
imul
jnp
add
or
cmp
idivb
pusha
jp
fistl
dec
shrl
push
adc
inc
cmp
scas
pop
shll
insl
xlat
mov
adc
mov
add
xlat
jle
out
fchs
lods
sub
push
popa
xor
fs
aam
adc
test
add
sbb
out
jl
adc
sub
sbb
imul
aad
out
xchg
cmpsl
add
adc
jb
or
fsubrs
jo
mov
lock
out
cmpl
cmp
sbb
inc
imul
ja
dec
jae
call
into
push
push
stos
pop
dec
xchg
pop
jns
inc
push
lods
enter
mov
adc
shrb
cli
jb
out
adc
xchg
imul
dec
rorl
je
out
stc
fnstsw
pop
popa
and
cltd
sub
push
push
test
mov
push
mov
sbb
add
dec
sarb
mov
xchg
sub
adc
adc
ret
add
int
adc
dec
addr16
jnp
rol
sbb
jl
jg
xchg
adc
ret
mov
cmp
cmpsb
jns
shlb
imul
lods
inc
aaa
outsl
sbb
jns
int3
push
ja
push
lret
sbb
int
xor
repnz
leave
mov
stos
xchg
cmpsl
leave
int
mov
adcb
mov
jmp
pusha
mov
in
cmc
and
push
lock
lods
repnz
fwait
js
loopne
push
cmc
ds
inc
xor
jb
cmpsl
add
loope
fidivrs
insb
cmc
lds
in
xor
xor
cmp
xor
jp
mov
cmpsb
jecxz
lcall
dec
addb
sarl
stc
adc
jbe
jns
mov
insb
outsl
iret
cmp
lock
push
dec
dec
movsl
test
push
stc
sub
ja
cltd
in
fs
sbb
or
int
insb
test
outsl
jecxz
sub
data16
pusha
or
push
nop
loop
mov
sub
pushl
fsubs
mov
mov
in
data16
mov
jmp
in
loope
data16
jae
dec
rol
fdivrl
mov
gs
nop
add
mov
pop
xor
arpl
push
cmpsb
cld
sbb
pop
ds
sbbl
cmp
repnz
out
jle
or
adc
movb
add
xchg
sub
inc
lret
ss
outsl
mov
in
testl
cmp
movsl
std
test
jns
adcb
sub
cld
mov
int
pusha
test
adc
or
notb
sahf
scas
xor
add
mov
dec
cmc
push
out
lret
mov
inc
lds
fisubl
pop
xlat
or
adc
dec
sub
jnp
pop
mov
mov
fwait
ss
xorb
cmp
mov
xchg
cwtl
cmpsb
push
jg
inc
cmp
lods
and
clc
jnp
fldl
xchg
dec
mov
inc
dec
pop
add
dec
lcall
movsl
jp
and
and
insb
jg
bound
pop
imul
inc
mov
xor
cs
xor
push
xor
xchg
jle
dec
xlat
cmp
fistpll
mov
and
jmp
mov
repz
xor
adcb
jb
pand
push
repz
sub
fdivl
pop
dec
int
mov
sub
add
cld
cs
loopne
movaps
lret
nop
push
into
add
mov
fldl
lea
es
push
jge
mov
dec
pop
mov
shl
imul
ficompl
cld
xchg
mov
push
cwtl
mov
pusha
ret
cwtl
nop
fdivs
data16
adc
xor
xor
ror
inc
pusha
test
lods
int
jg
je
mov
sub
stc
lahf
stos
xorl
xchg
pop
inc
or
aas
int3
fcomps
dec
pop
inc
incl
icebp
cmp
cmpsl
popf
test
cwtl
ret
nop
pusha
jmp
rol
xchg
negb
insl
mov
sbb
adc
sub
sbb
mov
jo
repz
mov
dec
mov
push
mov
imul
cmpsb
out
fbld
in
cmp
lock
out
or
sti
jns
cmp
sbb
repnz
ljmp
mov
loope
sub
rcr
mov
pop
fs
cltd
incl
and
sbb
jp
jae
mov
mov
clc
cmp
adc
aam
in
data16
jne
mov
or
jecxz
testl
rorl
jnp
jp
std
jle
loopne
xlat
xchg
aaa
cs
mov
leave
sar
cmp
cld
push
fnstenv
mov
cmp
mov
lcall
insl
jle
xor
les
sub
jnp
add
shl
jae
cmpl
sub
sbb
test
mov
adc
add
sbb
pop
movsl
and
xor
fcmovnu
out
xchg
inc
int3
pop
sbb
pushf
and
jl
ds
jmp
cld
fwait
hlt
in
pop
cld
dec
lret
loop
mov
pop
mov
test
sarl
fs
ja
jb
call
inc
inc
add
lret
jbe
and
test
into
ret
out
in
adc
mov
cwtl
sbb
lods
jge
cmp
xchg
jp
mov
sti
inc
jp
jmp
mov
mov
lret
imul
out
jle
xchg
shrb
dec
push
push
and
push
jb
fldl
popf
and
pop
push
and
repz
adc
hlt
dec
movsb
jmp
mov
inc
xor
iret
cli
mov
popf
insb
lcall
mov
jmp
movsl
fidivl
aad
and
divb
shrl
push
cmp
flds
mov
ret
js
lds
shrl
das
xor
xchg
jmp
xor
xor
jmp
push
and
push
mov
addr16
sub
inc
sbb
add
sti
xor
lahf
fidivl
mov
or
bound
or
inc
fwait
jae
scas
and
add
xor
mov
or
xchg
pop
push
movsl
in
shrb
es
push
cld
idivl
mov
inc
addr16
mov
iret
test
cmp
aas
mov
mov
cmpsb
sbb
sbb
loope
fcomps
cltd
popf
popf
push
push
lds
fisubrl
subb
jo
adc
imul
adc
mov
dec
pop
repz
cmpsl
insw
sahf
adc
jg
cmpsl
je
jno
cmp
and
jmp
jae
pop
cld
repz
xor
nop
psubusw
xor
iret
test
les
out
rorb
sbb
mov
add
xorb
mov
in
scas
imul
dec
idivl
call
lods
jbe
push
popa
movsb
sub
idivl
arpl
fsub
cmc
dec
insl
sub
push
and
mov
icebp
xchg
mov
dec
push
dec
jae
inc
dec
pushf
pop
dec
pop
insl
psubusw
mov
daa
ja
sbb
test
js
pop
cmp
ljmp
mov
pushf
add
insl
pop
lret
vpsubsb
out
data16
negb
imul
xchg
fdivs
insb
int
clc
pop
push
lds
cld
xor
inc
rolb
aad
pop
or
dec
dec
mov
lds
je
push
jns
cmp
jo
jmp
js
jns
das
notl
push
dec
or
gs
cmpsl
and
jecxz
fucomp
mov
add
add
sarb
scas
pushf
mov
adcb
xorl
xchg
mov
imul
adc
fucomp
mov
push
jl
movsb
sbb
xchg
fbld
jno
fisubl
outsl
test
jg
adc
adc
jo
jbe
or
push
inc
rolb
xlat
mov
iret
daa
insb
call
mov
dec
loope
dec
xorl
outsb
sbb
iret
cmp
lea
or
or
push
iret
jb
and
sahf
repz
or
in
pusha
je
add
mov
adc
sbb
xchg
ret
loopne
arpl
adc
ds
in
adc
or
add
mov
push
dec
test
sub
xchg
test
dec
sub
popf
jb
xlat
pop
outsl
dec
ds
out
xor
dec
aam
test
jb
fwait
repnz
in
xchg
loop
in
out
or
xchg
mov
mov
mov
cmp
int
je
lret
push
movsl
mov
or
aam
adc
mov
data16
jns
ret
cs
bnd
ja
fucomp
jne
nop
lods
add
cltd
fidivs
movsl
test
fwait
out
mov
imul
mov
jb
sbb
popf
nop
jecxz
ljmp
imul
pop
call
cmpsb
pop
mov
push
fists
orb
jg
test
es
pop
jp
gs
pop
mov
enter
dec
jmp
rcr
lret
fistps
mov
sub
insl
pxor
xor
hlt
fs
sub
or
dec
das
jge
xorl
add
mov
dec
and
into
pop
movsl
mov
mov
xchg
push
je
in
out
fwait
out
cli
push
mov
push
xor
arpl
cmp
mov
call
repnz
add
jns
sub
sub
xchg
es
pop
adc
mov
cmp
leave
dec
in
jno
pop
nop
add
mov
push
add
push
sbb
mov
std
xchg
sbb
cli
inc
cli
jno
push
pop
lock
sbb
outsb
mov
jmp
mov
xchg
loop
pop
movb
mov
xchg
lods
xlat
loop
icebp
clc
test
repnz
test
lock
test
fdiv
scas
jo
pop
mov
jmp
popl
cmpsl
scas
jb
icebp
call
out
push
or
loop
repz
ljmp
pop
or
pusha
xchg
repz
add
stc
lods
add
mov
push
mov
jno
mull
loope
hlt
sbb
daa
pop
add
lods
inc
jmp
push
sub
in
fdivl
fiaddl
int3
pop
adc
push
jne
test
inc
sti
sbb
mov
stos
fdivl
dec
jne
out
add
inc
adc
mov
mov
adc
and
ss
outsb
fisttpll
loop
lcall
jp
nop
cwtl
aad
loop
add
fstl
push
jge
pop
cld
das
in
call
xlat
imul
mov
lea
rcrl
insl
push
mov
xchg
sub
xchg
push
mov
clc
mov
imul
jns
and
fs
loope
mov
cmpsl
mov
mov
cld
push
cmp
imul
es
gs
jne
lock
insb
xorb
ss
and
mov
mov
das
cvtpi2ps
and
divl
in
sub
push
ljmp
xchg
dec
mov
xor
and
fisubrs
inc
pusha
mov
daa
jg
inc
mov
mov
rorl
rcl
aad
cmp
lock
push
adc
rolb
and
xchg
js
jge
shl
clc
daa
jns
out
mov
test
fwait
xchg
push
fbstp
add
loop
add
mov
out
inc
in
inc
mov
aad
int
mov
stc
int3
pushf
in
pop
stc
add
ja
es
mov
dec
cs
push
add
mov
jbe
das
inc
pushf
jb
jge
dec
ljmp
and
or
jecxz
popf
pop
add
dec
imul
push
and
fbstp
test
cmp
sub
inc
push
cli
and
push
bound
and
and
or
cmpsl
xor
test
adc
lock
xor
iret
rolb
dec
fstl
lea
andl
pushf
into
hlt
xor
sbb
cwtl
xor
adc
jmp
push
mov
mov
mov
outsw
inc
dec
inc
nop
call
shll
rcr
xchg
pop
mov
fiadds
decb
arpl
pop
cli
sub
subl
lds
cld
jbe
shrb
jo
xlat
add
lock
cmp
mov
negb
dec
mov
fstps
popa
adc
rorl
jl
bound
jg
ds
ja
cmp
js
jb
dec
test
stos
adcb
loop
xchg
cmpl
mov
jbe
fs
data16
jle,pn
mov
xchg
nop
sbb
daa
cli
bound
push
bound
pop
cmp
stos
lock
jae
inc
jnp
cmp
lods
push
and
add
arpl
shr
rcrb
mov
cmp
jb
adc
in
mov
add
cltd
push
mov
cmp
inc
xor
nop
jb
scas
adc
xor
mov
push
add
insb
sbb
mov
jp
aas
xchg
outsb
cwtl
arpl
cmp
mov
in
data16
inc
jg
mov
cli
xor
jno
in
inc
push
cmpsb
jp
xchg
cmp
cmp
nop
xor
push
sbb
out
std
mov
loope
loope
or
je
pushf
dec
add
out
ror
jnp
pusha
and
lea
and
jno
or
cli
sub
cmpsl
xchg
imul
jg
mov
mov
mov
pop
filds
out
adc
xchg
jo
loope
jmp
xor
push
adc
leave
pop
and
cld
icebp
imul
xchg
mov
aas
lock
or
cli
out
dec
add
bound
std
dec
stos
sub
adc
or
inc
mov
dec
inc
xbegin
in
leave
int3
push
arpl
xor
dec
int
clc
in
mov
mov
popf
xor
jo
xor
sub
jl
lret
bound
mov
mov
lret
lcall
int3
cmc
cmpsb
sub
cmc
mov
or
scas
sbb
lods
aaa
cs
xor
imul
mov
cmpsl
cmc
jecxz
loopne,pt
mov
mov
xor
daa
mov
leave
outsb
cmpsl
in
roll
inc
aad
adc
adc
icebp
jle
xchg
sbb
sbb
add
mov
push
mov
mov
mov
push
pusha
imul
shrl
mov
repz
mov
xchg
sub
push
lret
mov
pop
cld
push
fnstenv
and
push
repz
fs
sub
addr16
mov
es
mov
xor
pop
sbb
scas
xchg
push
aaa
inc
daa
dec
cmpsl
mov
addr16
mov
negl
mov
andb
sub
lea
aad
lods
into
or
mov
push
cmp
add
add
ljmp
out
movsl
pop
inc
andl
add
mov
frstor
cs
xchg
mov
les
mov
or
mov
dec
push
popa
or
sbb
imul
mov
lret
ret
gs
cmpsl
mov
mull
or
dec
out
cmc
jb
cmp
pop
add
xchg
fwait
test
push
inc
inc
fdivrs
fisubl
jnp
int
xlat
adc
and
xchg
mov
scas
cmp
cltd
and
popf
mov
ja
adc
fsubr
sysexit
popf
pop
sahf
mov
pop
sub
push
pop
xlat
cli
shl
imul
lcall
aas
sub
mov
daa
mov
inc
repnz
imul
add
sbb
add
lock
dec
jnp
cli
lock
in
push
mov
push
fcmove
orb
aaa
jb
pop
xchg
pop
aam
into
rorb
add
cmpsb
mov
xlat
stos
xchg
jb
fs
lock
dec
mov
adc
or
popf
mov
cmpsl
imul
push
mov
addr16
inc
xor
sub
xor
xlat
or
or
iret
in
stc
xchg
jno
aad
add
xchg
jno
stos
adc
out
and
enter
mov
rorb
sub
cmp
popa
movsb
rdtsc
dec
mov
rcrb
sbb
out
fs
sub
jo
ljmp
add
jle
out
dec
test
pop
std
test
sub
das
xor
in
stc
je
xor
ss
rol
mov
sbb
pop
inc
mov
jae
in
sub
nop
ret
adcl
jne
inc
stos
ds
cmp
ljmp
les
jns
scas
xchg
ljmp
push
roll
in
push
adc
cmp
pmulhw
pop
stos
inc
sbb
jno
icebp
js
mov
mov
sub
xchg
xor
cs
outsl
pop
in
fmul
out
push
dec
popa
and
cmpsl
dec
mov
testl
lahf
inc
pop
hlt
leave
dec
sub
aam
frstor
out
mov
ss
cli
ss
xor
mov
dec
repnz
hlt
xor
xchg
pop
aad
scas
sbb
pop
mov
xchg
stos
cmp
sub
adc
ret
fwait
push
repz
adc
xor
in
jbe
mov
xlat
or
pop
jo
xor
mov
aam
jecxz
jae
das
data16
cs
xor
subl
std
mov
sbb
loope
or
ret
mov
inc
inc
test
cltd
jnp
xor
fadd
xlat
ss
jecxz
xor
pusha
movsb
xchg
jae
xor
dec
ss
pop
xchg
pushf
sub
add
sbb
fisubrs
sub
adc
mov
lds
stc
dec
push
and
dec
add
jle,pt
fnsetpm(287
push
mov
jge
movhps
push
cmp
pop
xchg
xchg
loopne
stc
sub
cs
xor
or
cltd
sbb
stos
jge
mov
hlt
xchg
in
insb
cs
lret
jg
xor
dec
adc
mov
mov
push
push
push
test
popa
dec
xchg
adc
or
sub
test
or
mov
mov
cmp
cmp
sub
insb
loope
push
xchg
or
ss
data16
shll
or
pop
sub
sbb
mov
jl
aas
and
sub
mov
sti
in
ret
dec
test
jno
outsl
push
and
fwait
inc
scas
insb
aas
out
out
rorb
jae
bound
fcoms
cmp
das
or
xor
or
mov
inc
lret
stos
sub
and
xor
mov
imul
mov
fstps
or
pop
insb
xor
jg
cltd
push
xchg
mov
xor
lock
gs
imul
lods
ljmp
in
cmp
push
add
xchg
push
push
shrb
pop
jbe
mov
sbb
jae
mov
nop
sub
aam
aam
ja
inc
mov
orl
cmc
cwtl
pop
test
adc
xor
call
into
cmp
adc
int
push
pop
push
push
int
inc
out
cltd
add
clc
rcr
cmp
orb
mov
lahf
pop
or
dec
into
mov
adc
popf
jo
mov
scas
inc
pop
ret
or
mov
mov
lea
shr
dec
xchg
xor
mov
xorl
pop
sub
dec
dec
cmp
pop
pushf
xor
mov
movsl
sbb
in
ljmp
inc
adcb
inc
and
ret
sub
out
shl
xor
mov
mov
or
adc
dec
and
or
mov
pop
and
test
mov
xlat
fistl
outsl
lret
adc
orl
bound
fcmovb
or
cmpl
mull
mov
xchg
mov
jae
add
mov
mov
jg
xlat
mov
out
cmc
or
insl
dec
adc
nop
push
mov
mov
add
push
mov
mov
stos
pop
xor
add
pop
cmp
pusha
pop
dec
cwtl
pop
push
leave
rcll
testb
mov
cmp
mov
inc
out
dec
repz
and
loope
cs
dec
or
lcall
int3
leave
movsb
sub
insl
push
adc
cmp
cmp
popa
xor
jne
daa
cmc
in
xchg
jnp
mov
gs
test
xchg
nop
stos
je
in
and
xor
js
sub
scas
pushf
stc
testb
das
loop
xor
cmp
pop
std
adc
cmp
or
sbb
push
cltd
push
jo
loopne
clc
xor
mov
push
jae
icebp
in
dec
sahf
cld
push
sbbl
out
inc
fisubrl
xchg
cmp
addr16
pop
pusha
stc
jge
lods
imul
std
cmpsb
das
sub
bound
lret
rolb
outsb
in
aas
repnz
repnz
cwtl
dec
test
push
jbe
mov
dec
jae
sub
out
fcmove
fsubl
push
sti
push
lea
push
jne
inc
dec
repz
mov
push
mov
mov
clc
rcl
mov
iret
cmp
dec
jb
jecxz
pop
out
inc
nop
or
pop
push
xchg
bound
jnp
scas
cmpsl
sub
jecxz,pn
xchg
mov
stc
mov
mov
adc
cltd
cwtl
aam
fsubs
sub
mov
sbb
xlat
les
lods
pop
sbb
jbe
xchg
shr
bnd
adc
bnd
in
addb
outsl
adc
pusha
jnp
fimuls
mov
add
pop
mov
clc
fbld
sub
push
sbb
jbe
rcrb
mov
add
in
pushf
push
out
in
lods
cmp
shrl
pushf
inc
inc
jl
mov
jns
or
jp
sbb
dec
nop
mov
fwait
jo
aad
idivb
xor
test
jns
sub
lock
in
add
adc
ret
xchg
jl
jp
xchg
aad
pop
sti
inc
ret
std
shrl
mov
mov
insb
adc
insb
jecxz
je
pop
addr16
push
xchg
dec
arpl
shlb
mov
ficoms
add
stc
sub
xchg
fistpl
or
sahf
cli
sub
xor
jp
lock
mov
rcll
jae
sub
pop
adc
xor
mov
in
aam
cmp
insb
sbb
icebp
push
dec
mov
cld
adc
push
pusha
pop
repz
mov
mov
int3
loope
loope
add
daa
push
enter
mov
cmpsb
inc
pop
int3
or
mov
pop
fst
ja
mov
hlt
and
and
push
stc
sub
faddl
iret
jnp
pop
or
mov
xor
or
pop
pop
cmp
imul
stc
or
out
push
pusha
xchg
mov
icebp
xchg
sbb
aas
cmp
aad
lret
mov
loope
idivl
fs
cwtl
add
cmc
shr
rcrb
cmp
std
popa
push
fistpll
shll
inc
add
outsb
or
test
cmp
iret
inc
leave
pushf
imul
arpl
fidivl
jnp
jecxz
adc
inc
mov
or
js
out
jnp
cmp
mov
movsl
in
pop
xchg
add
cwtl
aad
jmp
mov
xchg
jmp
cmpsb
mov
jns
sub
push
mov
and
sarl
inc
xchg
push
dec
pop
dec
stos
pop
insb
mov
xor
test
xchg
and
and
mov
loop
rorl
cmp
adc
mov
dec
sub
notl
ja
sub
in
int3
mov
fsubrs
mov
je
mov
cmp
sub
call
mov
xchg
sti
xchg
movsl
sbb
xor
cmp
xor
mov
imul
adc
pop
add
test
lock
add
stos
cmp
mov
sub
stos
clc
jnp
imul
repz
enter
dec
cmp
data16
adc
pushf
mov
sbb
push
cmc
mov
dec
cmp
add
into
stc
mull
es
dec
dec
aam
mov
mov
cwtl
movsb
mov
ret
pop
je,pn
push
outsl
sarb
jns
xchg
and
in
sub
call
xor
leave
sub
mov
les
jno
and
sbb
xlat
jo
sbb
adc
movsl
push
dec
loope
mov
sub
test
cmp
jmp
inc
pop
out
mov
in
je
or
mov
jo
adc
mov
fucompp
adc
push
dec
lahf
adc
lahf
pop
push
enter
adc
into
mov
repnz
testb
js
cld
pop
and
cmp
xchg
dec
mov
aam
loop
and
inc
push
push
push
int3
push
ljmp
idiv
mov
bound
div
mov
aam
inc
sti
mov
data16
push
fldt
jp
in
sub
jg
mov
fwait
lds
pop
movl
loope
xchg
mov
ljmp
jg
fs
rcrl
xchg
mov
inc
mov
es
dec
in
cmp
sbb
aad
mov
or
int
push
int3
nop
addl
mov
jno
imul
push
dec
ret
push
fsubs
push
stos
mov
add
insl
es
in
sbb
nop
insb
movl
inc
or
and
adc
cli
xchg
sbb
jp
cmc
adc
sbb
xchg
dec
sti
je
fucomp
inc
frstor
test
lcall
mov
xor
adc
sbb
dec
mov
cmpsl
sbb
das
mov
arpl
sbb
cmp
fs
xor
in
stos
fwait
aaa
pop
mov
or
adc
and
pop
call
add
fwait
sub
and
movsl
xchg
leave
pop
decl
mov
pusha
loop
loope
daa
fst
call
icebp
xor
mov
mov
stos
hlt
loopne
push
inc
or
mov
int
and
adc
push
and
lcall
sti
gs
mov
stos
pop
or
pop
loope
pop
das
mov
xor
jns
ficoml
fstpt
out
mov
ret
xor
notb
xchg
sub
jns
cmp
stc
mov
out
mov
out
call
xor
insb
mov
enter
test
mov
cmpsb
pusha
pop
call
sub
fbld
test
or
jbe
hlt
arpl
jecxz
test
push
in
ljmp
decl
push
cmp
pop
movsl
shlb
mov
cmp
or
insl
sbb
mov
push
pop
stc
adc
sbb
addr16
into
dec
dec
inc
xor
sbb
jno
daa
fcoms
mov
movsb
pop
cmp
icebp
aam
mov
sbb
stc
pop
sbb
iret
jl
movsb
adcl
mov
jl
mov
push
shlb
les
fstl
and
les
std
mov
test
xor
movsl
leave
push
adc
mov
out
arpl
std
adc
push
jne
rcrl
or
sahf
cmp
lods
test
out
cmp
mov
daa
inc
mov
pop
and
lcall
mov
clc
push
dec
aaa
movsb
xchg
and
cld
dec
test
int
mov
jecxz
push
pop
xchg
mov
mov
syscall
test
jno
mov
pop
cmpsl
or
sti
and
add
inc
mov
push
loope
loope
inc
cmp
mov
aam
mov
je
sbb
roll
loopne
iret
rol
fstps
test
enter
in
ret
lret
inc
in
sahf
scas
xor
or
pop
cmp
sub
sub
add
cmp
daa
lds
repnz
out
jb
sti
and
scas
xlat
pop
xor
mov
xchg
or
repz
movsb
addr16
call
mov
addr16
sub
outsb
fwait
cmpsb
stos
lock
test
xchg
fimull
mov
push
push
addr16
cmp
adc
mov
push
int3
insb
shrb
lret
xchg
pop
mov
in
dec
mov
mov
sub
aam
and
mov
push
testl
xchg
dec
xchg
inc
dec
mov
daa
inc
sub
mov
fcompl
ljmp
xchg
jge
add
xchg
adcl
push
stc
mov
jns
mov
jp
mov
ret
test
ret
xor
lahf
fbstp
addb
pop
cwtl
mov
andb
adc
loopne
cli
jl
stos
shlb
dec
inc
loop
dec
and
fsubrs
test
or
mov
ds
ret
jb
mov
jnp
pushf
dec
pusha
cmpsb
push
fs
dec
adc
dec
addr16
fiadds
das
cmp
data16
scas
je
xchg
sahf
shlb
addr16
cwtl
xor
xor
push
pop
rep
stos
fdivl
and
dec
adc
push
ss
xor
insb
out
std
push
rcr
pushf
subl
push
and
in
int
ficomps
mov
addb
jl
inc
mov
leave
ss
or
movsl
cmp
xchg
outsl
mov
push
in
and
or
fstl
outsb
adc
cmp
push
mov
scas
jle
adc
lret
dec
ljmp
xchg
mov
jb
cmp
sbb
adc
mov
fcoms
push
ja
stos
xor
aam
add
sub
idivl
xchg
sbb
popa
mov
les
dec
add
out
test
sbb
jbe
into
jg
mov
in
sub
or
pop
rorb
jge
stc
mov
inc
ljmp
lcall
nop
pop
sahf
dec
fwait
mov
mov
jp
push
xor
in
dec
lods
jle
dec
add
sbb
xchg
pop
pop
add
into
repnz
pushf
pop
and
lahf
out
inc
insb
mov
mov
sarb
xchg
push
mov
bound
sbb
sbb
mov
es
cmc
mov
test
cli
xchg
not
mov
int3
sbb
jge
mov
push
xchg
xchg
sbb
aad
stos
and
or
sbb
jnp
xlat
fcomip
stos
mov
ds
sbb
lds
adc
and
pusha
es
ljmp
roll
rcrb
fwait
and
inc
push
hlt
mov
jecxz
out
rcrb
push
sub
jno
add
sbb
mov
fidivl
imul
mov
fxam
sub
jmp
pusha
mov
ja
pop
out
mov
jl
jle
and
in
fnstenv
lods
pop
shrl
es
sbb
lret
repnz
aad
jb
mov
and
test
sbbb
out
test
xchg
or
sbbb
xor
xor
lret
in
ja
jno
stos
push
sub
mov
mov
idiv
dec
fmull
fisubrl
lret
and
push
mov
icebp
int3
xor
fnsave
lret
fadd
or
and
sbb
cmp
xchg
ret
movsb
mov
push
mov
cmp
or
and
pop
stos
cltd
push
and
fs
or
mov
pop
inc
stos
sti
cwtl
das
xchg
mov
jmp
pop
jae
adcb
bound
jae
lods
mov
into
arpl
dec
push
lcall
movsb
xor
rcrb
mov
inc
fyl2x
or
jo
fstp
sub
push
mov
dec
add
mov
enter
ret
mov
mov
int3
lahf
lret
nop
and
pop
adc
add
sbb
sub
push
fmuls
adc
mov
movsl
or
xor
rorb
je
dec
ret
and
repz
push
scas
rcr
shrl
test
and
lock
pop
cmp
dec
lods
adcb
mov
or
pusha
shrl
aas
mov
stos
sub
mov
sbb
mov
je
les
popf
shl
out
in
lods
addl
pop
js
lcall
int
and
push
in
sbb
mov
sarb
mov
add
imul
out
ror
loopne
movb
les
das
loope
lret
in
push
dec
mov
sahf
movsl
cwtl
adc
rolb
outsl
push
stos
pop
les
leave
and
jecxz
mov
fwait
xor
mov
sub
out
or
push
pop
or
xchg
sbb
xchg
fwait
adc
mov
test
pop
inc
sbb
dec
push
hlt
fisubl
sub
cs
push
xchg
add
sub
push
fs
fcompl
sub
xchg
ljmp
cs
lret
inc
sub
sub
jb
cli
inc
fistpll
nop
mov
ja
cmp
inc
int3
dec
pop
mov
jnp
scas
in
or
inc
cli
cmp
inc
jo
xorl
adc
cmc
movsb
jp
sub
or
call
adc
push
xor
jbe
sbb
stc
fwait
or
xchg
lcall
adc
sub
out
mov
loopne
mov
push
inc
popa
dec
pop
mov
pop
mov
jb
ret
mov
xchg
insb
jae
fucomip
sbb
ja
and
jl
mov
cmp
xchg
mov
xchg
je
outsb
inc
addw
cmp
aam
aaa
fisubrs
cmp
in
test
sub
xor
mov
sub
hlt
adc
sbb
or
cld
xchg
enter
push
mov
push
mov
add
loope
loopne
int
and
or
jge
push
mov
dec
mov
mov
add
pop
outsl
mov
jae
adc
sbb
les
mov
adc
lret
mov
sub
add
sahf
push
pop
out
rcl
mov
out
sub
sahf
dec
mov
lock
mov
adc
sti
or
data16
cmp
adc
cld
in
les
loope
lds
inc
movsl
enter
fs
arpl
int
xchg
repz
sahf
out
cmpsb
scas
mov
mov
xchg
add
sti
fcoml
jno
jno
lea
nop
lds
mov
dec
es
pop
call
icebp
movsl
pushf
jecxz
ss
aaa
sub
mov
fdiv
xor
lret
xlat
scas
ret
cld
ds
sbbb
ret
insl
test
cmpsb
jae
pop
sti
lret
lcall
lea
shlb
xor
inc
mov
sbb
or
sub
push
ret
clc
push
lods
push
cmpsl
inc
sbb
aas
aam
cwtl
xor
loopne
aaa
lcall
sbb
xchg
rorl
jo
pop
sub
or
or
sbb
jnp
push
imul
test
and
fwait
or
icebp
insb
xchg
pop
xlat
cld
and
adc
in
repnz
js
push
mov
jo
testb
jnp
mov
ret
lea
mov
out
mov
stos
xorl
rcr
xor
sbb
xor
leave
stos
stc
fistps
outsl
ret
flds
push
pop
lods
stos
xchg
cmp
adc
negl
sbb
out
jl
mov
fwait
test
test
add
out
jge
push
push
add
daa
sub
insl
aas
sarb
jae
cmp
cmc
push
adc
mulb
stos
int3
mov
and
cmc
xor
mov
jne
imul
push
inc
add
cmpsb
cld
sub
lea
mov
jnp
dec
add
ljmp
data16
pop
or
inc
jecxz
test
insb
fmul
xchg
inc
or
jp
pop
push
and
ret
jg
pop
push
jb
daa
mov
dec
jp
cmp
xor
rorl
hlt
pop
push
xchg
inc
dec
xor
or
jl
push
xor
mov
orl
jg
aad
push
mov
cmp
cmpsb
mov
jp
mov
sbb
or
push
fisubrl
push
push
adc
loop
flds
into
imul
pop
das
jp
test
fcoms
jg
lahf
cmp
lds
push
popl
pop
gs
lds
test
lcall
adc
xchg
push
les
jb
or
mov
fwait
pop
gs
pop
lcall
fisttpl
cld
cwtl
xor
sub
into
gs
and
in
testl
lods
shlb
test
sti
rclb
out
pop
mov
adc
mov
jle
fwait
nop
in
adc
inc
insb
pushf
mov
icebp
mov
push
cs
jp
adc
lods
xchg
in
shlb
xchg
cld
jmp
cmp
stos
add
imul
sti
addb
mov
mov
xorb
arpl
adc
add
push
mov
leave
push
jns
xor
jge
cmpsl
lahf
mov
push
xchg
andl
psubq
mov
ss
rcl
jae
sbb
adc
shrl
pop
inc
call
cwtl
inc
sub
lret
mov
xor
mov
dec
repz
cmp
ret
in
dec
aam
daa
ffreep
pop
roll
mov
aas
lods
addb
mov
das
dec
movsb
hlt
sub
pop
in
dec
popa
dec
cmp
jb
push
imul
mov
es
cmp
movsl
sub
mov
repnz
mov
xchg
adc
xchg
lock
aad
add
daa
pop
fcomps
popf
std
mov
lods
mov
and
xchg
mov
test
push
inc
lds
insb
out
adc
xchg
lret
add
int3
cmpsl
add
mov
aas
imul
adc
add
sbb
ret
out
push
inc
ret
icebp
in
mov
cmp
lods
xchg
sarl
out
push
sub
js
push
xor
xchg
pop
hlt
fs
cmp
stc
sub
sub
ret
ljmp
out
xor
mov
loopne
mov
in
icebp
mov
ja
cmpsb
iret
cmpsb
push
adc
xor
cmp
and
jg
push
push
lods
insl
lods
mov
frstor
inc
mov
xor
xchg
jl
fcoms
pop
dec
js
cltd
imul
adc
test
ljmp
lea
lods
push
push
or
adc
push
mov
push
enter
insl
aam
out
fs
push
push
sbb
push
stos
fists
push
mov
inc
ret
outsb
pop
out
jb
push
fcomps
iret
test
out
sbb
inc
cmp
test
pop
cs
jnp
out
mov
xchg
mov
mov
inc
test
and
test
inc
or
xchg
test
mov
test
sub
sarb
pushf
shrb
das
jp
std
xchg
in
dec
and
mov
ja
pop
xchg
scas
mov
aas
popa
movsb
lea
popf
in
mov
lods
jle
shll
out
fistps
jecxz
sub
lock
cmp
sub
sub
inc
and
sub
jp
jmp
int3
aam
add
cwtl
xchg
stos
mov
call
repnz
inc
mov
sbb
jne
dec
mov
in
mov
ja
es
xlat
jns
add
stos
orb
mov
cli
popa
sbb
test
push
stos
ret
sub
lret
stc
inc
pop
adc
xor
adc
pop
stos
dec
int
test
sbb
inc
in
or
pop
dec
adc
mov
test
cld
lcall
or
dec
popa
repz
je
cli
mov
pusha
cwtl
repnz
into
fwait
jne
or
or
jb
inc
loopne
and
push
aad
jp
cmpsb
inc
jae
ret
mov
movsl
inc
or
jl
jle
rcrb
cmp
ljmp
mov
repnz
mov
ret
xchg
out
aas
lods
push
ds
arpl
push
fs
fdivl
push
add
in
iret
mov
pop
jnp
shrb
lret
imul
inc
cmc
or
call
in
cmp
jb
sub
lcall
mov
inc
jae
mov
pop
sbb
pop
jmp
loop
jb
in
ja
jmp
xorb
clc
in
js
pop
push
push
pop
mov
mov
xor
xorl
test
xchg
xor
mov
xchg
cmp
dec
jl
scas
ret
sbb
and
and
push
mov
in
adc
daa
sbb
mov
ret
xor
dec
aas
lds
dec
cmp
inc
int
ret
outsb
std
jmp
inc
inc
jnp
jl
mov
inc
pop
fdivrl
orl
movsb
jmp
sbb
pop
or
call
lcall
stos
pop
loope
add
int3
test
dec
push
pop
xor
mov
fistpll
imul
adc
push
mov
xchg
movsl
sbb
jl
push
popf
mov
mov
clc
ja
jne
enter
into
mov
or
insb
dec
xchg
sub
stos
fcomi
rorb
cmp
push
add
repnz
cmp
xchg
jmp
pop
clc
sub
push
and
mov
mov
adc
imul
mov
fisubl
dec
add
fmull
lret
stos
xchg
or
cmp
mov
xchg
into
mov
push
ret
cld
cmp
jge
dec
ss
cs
cli
fpatan
adc
mov
sub
jbe
int3
cmp
sti
test
fmull
or
in
mov
mov
adcl
out
cltd
daa
jne
xor
sbb
mov
test
ret
push
aad
lahf
push
imul
dec
out
push
scas
loop
mov
jmp
iret
cmp
or
cmp
popa
push
dec
rcll
lods
lret
fnstcw
nop
gs
add
jae
aaa
jg
fwait
jl
test
lret
stos
fwait
lret
cmpsb
and
inc
inc
addb
jne
pop
jecxz
push
pop
push
std
xchg
popa
mul
fstpt
push
or
pusha
leave
dec
or
sti
xor
inc
push
and
jg
sbb
ret
mov
cld
lcall
movsl
repz
mov
pcmpeqw
adc
aad
cmp
dec
mov
pushl
sub
mov
test
push
xchg
int3
jno
jno
lahf
add
add
cs
add
das
clc
shlb
data16
pop
jb
mov
mov
test
out
imull
pop
push
cmp
inc
sbb
jle
mov
jp
mov
fimull
jo
sar
popf
cmp
sti
lds
lock
add
test
shl
ficoms
stos
cwtl
movups
andb
sub
cld
fs
fs
sub
adc
shlb
xchg
jb
dec
gs
aas
jp
outsl
and
insl
fisubs
cmp
test
sti
mov
adc
fstl
or
jg
lahf
sbb
hlt
rcrb
lcall
pop
stc
fisttps
cmovbe
inc
loope
dec
out
into
into
adc
cli
adc
stos
or
sbb
filds
add
imul
and
cmpb
sub
push
pop
movsl
iret
mov
nop
sub
mov
mov
mov
mov
push
mov
push
cmp
sti
nop
inc
jbe
jmp
addr16
lret
sub
outsb
shl
inc
cmp
dec
jl
aad
jge
add
es
jnp
and
sub
test
xor
and
mov
jno
cli
daa
mov
lock
mov
pop
xor
sahf
pop
push
orl
sub
icebp
sub
cmp
mov
sbb
ficoms
dec
xchg
mov
xchg
test
test
addl
mov
sbb
pop
inc
insl
jns
sub
cmp
outsl
push
addr16
movsb
dec
sbb
inc
jo
popf
lcall
cmova
jo
popf
mov
jb
out
dec
pop
mov
clc
scas
movsl
loop
adc
loop
dec
push
pushl
stc
xchg
rorl
clc
mov
stos
pop
and
and
and
mov
push
fimuls
adc
fsubl
ja
cltd
testl
pop
jge
xor
inc
imul
xor
dec
out
lcall
hlt
aaa
inc
push
dec
push
iret
xor
je
jle
movsl
lahf
pop
pop
push
mov
push
mov
jp
inc
pop
in
rclb
jnp
sbb
adc
pop
sbb
sbb
outsl
xor
adc
imul
push
jge
mov
mov
sbb
ja
fldt
mov
das
inc
repnz
mov
mov
xchg
or
sbb
repz
mov
mov
sub
shl
fnstenv
pminub
inc
add
stos
shrb
clc
dec
pop
nop
hlt
imul
mov
or
pop
sub
mov
hlt
in
clc
push
aaa
cmp
cmp
pushf
adc
mov
scas
test
pop
xchg
ret
mov
push
popl
pop
inc
and
jnp
jg
push
mov
fcoml
xor
les
lods
or
sub
ljmp
push
add
mov
xchg
scas
sahf
cmp
or
lods
ja
jl
ret
lahf
jge
sub
stc
push
cs
xchg
push
repz
addb
bound
dec
clc
ret
or
test
fdivrp
das
int
jmp
insb
loopne
add
mov
imulb
movsl
xor
and
push
gs
test
jns
xor
cmp
lret
aad
notl
push
and
aas
fwait
imul
xor
gs
scas
push
and
outsb
lock
and
and
push
or
xor
dec
popf
and
xchg
mov
out
sub
out
int
lret
or
divl
pop
mov
sarb
dec
ss
push
and
cmp
divl
and
mov
call
incb
sub
inc
add
pop
push
mov
inc
stos
mov
inc
dec
loop
and
mov
xchg
xor
lahf
dec
ds
jmp
sbb
jg
push
push
test
dec
jbe
inc
icebp
dec
movsl
js
imul
cmp
mov
shll
data16
sbb
mov
nop
in
in
and
out
inc
mov
push
fbld
inc
mov
pop
in
or
lahf
or
fwait
inc
xchg
jo
mov
or
mov
test
popf
push
push
push
mov
sub
mov
dec
in
call
loopne
and
add
shrb
dec
lock
scas
ljmp
cmc
in
mov
ss
mov
jmp
negb
add
mov
jle
xchg
fwait
sbb
or
xor
ds
jmp
sbb
movsb
mov
sahf
addr16
lds
mov
fs
aam
in
aam
pop
stc
jecxz
icebp
int
add
movsb
push
sbb
imul
xchg
movsl
ror
and
into
fiadds
and
lret
jle
cmp
pop
stos
push
cmp
push
je
clc
test
xchg
repz
pusha
scas
pop
psubq
push
push
mov
and
dec
repnz
filds
sub
bound
pop
into
push
xchg
pop
stos
les
push
sti
subb
sub
nop
or
and
or
fsubrl
pop
in
sub
xchg
xchg
jecxz
fmuls
add
lret
xor
mov
xorb
sti
jl
or
pushf
out
sub
mov
rolb
xchg
jecxz
or
ljmp
add
dec
xchg
sbb
aaa
cmc
fstpl
sub
aas
and
sub
ja
shll
nop
js
les
xor
pushf
test
out
add
lret
js
xchg
or
sbb
shrb
ljmp
nop
ljmp
mov
fisubl
stos
popa
daa
dec
inc
xchg
sbb
jae
insb
imul
popa
mov
xchg
and
cmp
push
loopne
in
loope
mov
jb
lret
inc
push
mov
xchg
je
in
fs
fdivr
lret
xchg
mov
cmpsb
fmull
mov
inc
fcomip
pushf
notb
jecxz
fldcw
movsb
mov
jecxz
xor
adc
sub
inc
cmpb
or
xchg
je
mov
xchg
inc
fistpll
stos
xor
insb
ja
xchg
sbb
testl
int3
cs
in
movl
or
add
movsl
fwait
dec
gs
hlt
adc
insl
mov
testl
stos
jo
xchg
sbb
sub
sub
mov
cmp
outsb
cmc
andb
addr16
loope
pop
into
sub
idiv
mov
stos
flds
pop
mov
clc
fidivs
mov
pop
cmp
xorl
insb
les
pop
inc
popf
adc
lds
jmp
repz
and
test
outsl
outsb
mov
js
xchg
jo
xlat
xchg
xchg
jb
out
scas
cmp
inc
sub
scas
xor
addr16
adc
clc
cmp
add
sbbl
mov
xchg
je
notl
inc
xor
lahf
inc
sbb
lods
rcll
sarl
sub
jo
sbb
mov
lcall
movsb
jno
lock
int
jns
mov
cmp
inc
sbb
nop
fwait
ret
and
leave
push
outsl
push
pusha
ljmp
aad
mov
adc
xor
cs
jnp
xchg
jno
xrelease
jbe
sub
sbb
jle
iret
dec
push
xor
cmp
out
pop
inc
jge
push
fcompl
xchg
filds
mov
pushf
and
lahf
outsl
sti
hlt
push
fstpt
jb
test
sub
stos
push
push
cmpsl
mov
cli
adc
mov
jl
aad
leave
repnz
mov
pop
ror
in
js
int
xchg
sub
js
idiv
or
xor
rcr
pop
je
inc
push
into
in
sub
pop
scas
adc
es
cmpsl
mov
jge
arpl
cld
jae
mov
cltd
and
fistpl
leave
es
and
das
dec
gs
aad
xchg
lock
enter
jmp
mov
out
xlat
cmp
push
nop
jno
ljmp
fmull
push
enter
int
mov
pushf
jne
sti
arpl
mov
hlt
inc
daa
hlt
insb
fdivs
fcomp
mov
mov
fidivl
pop
call
inc
loope
xchg
fnstcw
movsb
out
pop
xor
push
xor
sub
mov
jg
jb
mov
sub
imul
xchg
or
jne
ficompl
aam
nop
mov
es
adc
out
into
sub
sarb
push
nop
adc
rcr
lret
pop
mov
pop
fdivrl
rorl
sbb
mov
popa
outsb
aam
and
cmp
push
loopne
fdivrp
lds
cmp
cmp
cmp
aas
lahf
adc
dec
jbe
jmp
outsb
and
adc
and
sbb
into
into
sti
pop
std
pop
pop
add
pop
in
int3
jo
aam
imul
int
data16
cmpsb
test
cmpsl
cmp
push
add
adc
add
sbb
les
add
popa
fistps
inc
decb
insl
xor
stos
out
gs
lods
mov
nop
ss
pop
je
cmp
cmp
jae
xor
inc
shrl
mov
sbb
shrb
jae
push
xor
arpl
repnz
cmp
pop
bswap
jl
mov
add
nop
inc
or
pop
xchg
or
sti
mov
sub
mov
xchg
mov
inc
test
daa
leave
ss
lods
ret
lea
fcmovne
cmp
flds
mov
test
add
fisubrs
inc
loope
pop
pop
ret
test
inc
xor
insb
adc
cmp
fsub
ds
or
es
push
dec
iret
xchg
out
subl
dec
out
cs
xchg
add
and
pop
adc
and
add
cwtl
add
enter
jmp
xchg
sub
push
push
scas
ficoml
popa
adc
repnz
test
cmp
inc
jno
jecxz
data16
movsl
hlt
jb
icebp
out
test
aam
inc
lods
or
lret
inc
push
xchg
fidivl
mov
imul
add
or
lret
inc
or
repnz
push
inc
insb
mov
out
cmpsl
mov
inc
dec
idivb
mov
pop
dec
ljmp
dec
adc
mov
pop
es
aad
movsb
jecxz
mov
popa
xchg
fwait
arpl
lds
xchg
aam
jecxz
mov
jge
cmp
xchg
pop
xor
lds
notb
jae
enter
or
nop
in
ret
inc
dec
sbb
xchg
es
mov
cmp
rcll
into
pop
icebp
sarl
xor
mov
aam
adc
pop
cmp
inc
add
or
jb
imul
test
sbbb
les
jmp
in
push
dec
daa
fcoms
loopne
jbe
bound
ja
sub
test
jno
xor
rclb
movsb
mov
pushf
sbbl
push
mov
push
mov
inc
das
jge
arpl
add
push
rorl
mov
mov
movsl
lahf
inc
pusha
cld
cld
or
add
js
dec
pop
in
push
aas
das
cmp
loop
lret
pop
clc
les
sarb
mov
sub
outsl
movsl
adc
js
lcall
test
add
ja
test
xchg
fcomp
add
shll
pop
mov
data16
pop
pop
jmp
pcmpeqb
cmpsl
cmp
nop
jbe
ljmp
int3
add
adc
mov
pusha
movsb
iret
push
add
inc
or
push
sub
icebp
lahf
push
roll
ret
outsl
mov
sbb
adc
loopne
fimuls
lret
sbbb
pop
mov
call
icebp
cmc
scas
lds
pop
ljmp
or
xor
cltd
adc
xlat
cmp
dec
mov
out
or
ljmp
fmull
dec
int3
out
shr
sub
dec
mov
mov
jecxz
jmp
mov
in
and
gs
movl
ss
out
or
ret
pop
jl
shl
sbb
xchg
push
cmp
and
mov
mov
insb
sub
xchg
cli
inc
notb
and
cmp
leave
add
mov
jle
pusha
mov
lea
ret
xchg
cmp
insl
aaa
xor
out
int3
imul
push
cld
mov
inc
in
int
ja
addr16
scas
sti
push
lds
mov
push
ret
sbb
push
adc
inc
lods
fsts
cmp
mov
loop
inc
push
test
aas
mov
ffree
add
and
icebp
mov
outsb
and
mov
push
push
ret
test
push
dec
inc
leave
fisttpll
mov
addr16
add
mov
pop
inc
mov
popf
pop
mov
jnp
cmp
and
nop
sahf
call
mov
stc
sbb
rcl
lret
pop
or
sbb
in
jl
jbe
jbe
sub
fnsave
movsb
cli
push
movsb
stc
lret
sub
gs
pushf
test
enter
out
in
mov
mov
leave
ret
pop
fisttpl
or
dec
mov
ljmp
in
aas
or
outsb
xor
subb
sbb
outsl
mov
leave
inc
or
or
lret
cmpsl
sub
aad
dec
enter
iret
in
loopne
outsb
xor
dec
mov
fisubrs
lahf
fs
das
sbb
and
das
xchg
daa
push
loopne
scas
imul
test
adc
frstpm(287
push
out
in
jle
pop
pop
movsl
jb
pop
cmpsl
lods
shrb
lret
rolb
cmpl
into
mov
pop
nop
addr16
shlb
addr16
test
mov
push
inc
jno
jmp
je
lods
testb
and
cwtl
leave
jmp
hlt
add
dec
aaa
fwait
or
outsb
shll
pop
mov
out
jmp
fcmovnbe
fists
or
inc
adc
and
movsl
ss
in
push
sbb
cmpsl
pushf
repnz
jecxz
lcall
aas
mov
out
mov
insl
subl
mov
jb
pop
mov
icebp
cs
mov
cmpsb
mov
push
mov
inc
mov
repnz
stos
pop
mov
ja
and
jns
mov
mov
fsubp
mov
out
adc
add
cmp
bound
pushf
fnop
imul
iret
adc
adc
fisubl
into
stos
push
add
mov
inc
subl
inc
dec
lea
pop
sub
jle
dec
gs
pop
jne
push
cld
and
xor
insl
ret
rcrl
ljmp
mov
cs
shrb
arpl
pop
int3
xchg
xor
movsl
sub
adc
add
cmpsl
aam
imul
sub
adc
mov
pop
psrad
mov
in
add
mov
pop
sbb
xchg
es
jb
sbb
bound
fildll
push
mov
mov
push
push
adc
enter
mov
bound
lea
pop
cmpsb
orb
jecxz
lret
mov
out
dec
jl
mov
xor
testl
lahf
sub
js
pop
inc
adc
adc
shrb
sub
aas
out
xlat
cmpsl
cwtl
push
test
adc
mov
lahf
cmpsl
popa
mov
in
sub
jp
shlb
lods
cli
inc
mov
push
dec
jle
mov
mov
repnz
pop
dec
jnp
cmp
aas
ret
and
push
xlat
test
mov
ficoml
call
pop
pop
mov
pop
fstpl
lods
shl
in
call
aam
into
pusha
cmp
jle
cmp
xchg
cmc
inc
sbb
push
sub
jg
mov
inc
popl
pop
jge
and
jge
scas
cltd
addr16
sarb
mov
mov
xchg
outsb
inc
dec
pop
pop
sbb
sbb
insb
xor
mov
add
jecxz
fs
aas
out
push
inc
jp
dec
daa
xchg
std
sub
arpl
clc
xlat
xor
imul
jae
jmp
pop
inc
call
jo
cwtl
xchg
cs
jae
fwait
mov
stos
test
mov
out
lcall
sub
rcrl
jl
push
in
jns
mov
xchg
jecxz
icebp
popf
jp
testb
adc
or
insb
mov
pop
neg
pop
pop
mov
inc
or
cmp
imull
mov
std
das
orb
js
push
lods
mov
or
cmp
sub
subl
loope
mov
andl
fwait
sbb
jnp
ljmp
jmp
push
adc
leave
pop
ds
mov
js
add
imul
mov
int3
push
add
or
pop
push
rolb
sbb
arpl
xchg
mov
clc
dec
mov
outsb
je
inc
push
adc
mov
imul
pop
push
push
xor
or
pop
cmp
inc
and
sub
pop
xchg
push
add
push
pusha
jns
push
mov
sub
push
xchg
loope
ja
subl
aam
jns
push
rcr
popf
xchg
in
mov
push
adc
sub
mov
mov
xchg
and
rcll
popa
insl
mov
add
movsb
lea
push
sbb
addl
or
adc
int3
sti
pop
dec
cmp
outsl
or
lods
in
or
lahf
push
mov
out
fdivp
xor
mov
cltd
iret
mov
mov
mov
stos
mov
mov
mov
into
sub
iret
pop
arpl
inc
jo
lods
sbb
iret
cmp
aas
adc
adc
xlat
cmpsl
popf
ret
add
jp
dec
adc
movb
popf
adc
sbb
add
dec
sbb
push
add
movsb
out
push
insb
dec
lahf
jmp
jle
adc
lock
adc
push
inc
mov
das
cmp
pop
or
mov
jmp
arpl
lock
push
lahf
jl
pop
dec
loop
cmp
pop
shlb
popa
std
daa
mov
mov
mov
or
rorb
out
and
xchg
jp
xchg
mov
jns
test
jb
sbb
popa
icebp
push
loop
sbb
shl
pop
and
sbb
jo
pop
inc
xor
xchg
sbb
scas
loop
adc
in
xlat
push
and
sbb
insl
xor
iret
insl
out
cmp
dec
xor
mov
out
ja
sbb
dec
ss
in
xchg
fs
xor
push
fistpl
sub
incb
gs
pop
fsubrs
adc
xor
xor
mov
fisubs
or
rorb
iret
pop
sub
ljmp
sub
cmpsl
cmpsl
imul
ret
sub
inc
mov
jecxz
mov
fstps
push
shll
into
pop
arpl
xchg
add
shl
fldenv
mov
mov
cmp
inc
jnp
loope
sub
sub
out
mov
pop
sbb
jne
mov
dec
xchg
sbbb
pop
into
xchg
cmpsb
lahf
xchg
add
sbbl
cmpsl
enter
cli
dec
lds
ds
xor
push
push
mov
adc
add
xchg
idivl
jnp
push
jne
ss
or
jb
sti
aas
inc
enter
outsl
mov
scas
fwait
and
out
je
mov
loopne
pop
repz
push
push
jne
and
inc
nop
dec
pop
frstor
rcrl
loop
or
arpl
and
adc
lods
add
out
xchg
aaa
or
sbb
xor
mov
aaa
loop
push
mov
pop
push
mov
jl
xor
ss
xor
fucomip
ljmp
popf
out
icebp
mov
push
inc
xchg
mov
xlat
sbb
adc
sbb
sbb
fisubs
mov
js
fs
pop
inc
cmp
sbb
sbb
xorl
lahf
lock
jb
fcoms
divb
gs
fs
sub
pop
sbb
insb
sub
add
xor
cwtl
outsl
cwtl
test
xor
jmp
mov
test
jecxz
out
out
push
mov
iret
xor
add
das
ds
sub
std
loopne
test
xchg
mov
jecxz
test
xor
je
das
push
fdecstp
xor
into
lret
and
cmp
inc
pop
sti
or
leave
test
add
and
ja
xorb
mov
mov
sub
in
insw
into
xchg
mov
int3
mov
lret
outsb
lods
mov
hlt
and
sub
mov
jle
lahf
imul
xchg
in
pop
int
add
mov
in
and
xchg
repnz
xchg
jmp
sbb
sub
scas
test
nop
and
push
or
movsl
or
imul
or
gs
out
repnz
int
ret
lahf
inc
push
xchg
inc
pusha
repnz
test
mov
xchg
enter
and
inc
or
jb
mov
push
mov
scas
aad
adc
jg
cmp
fs
testl
fs
pop
sbb
ret
pop
mov
hlt
mov
pop
subb
push
xor
shll
in
out
dec
or
cmp
gs
jge
aas
xor
mov
enter
loope
inc
setnp
sub
mov
jecxz
push
cmp
ja
bound
and
mov
sub
dec
mov
and
aam
fwait
dec
mov
mov
andl
out
bound
inc
push
shll
xchg
ljmp
adc
mov
xchg
jo
mov
push
stc
dec
in
js,pt
xlat
cld
jle
pop
pop
jl
call
mov
xor
arpl
aaa
pop
and
push
xchg
cmp
in
pop
out
or
dec
stos
add
xchg
adc
pop
test
mov
pop
xchg
jp
rorb
push
push
inc
fsubl
fidivrl
xchg
jmp
xchg
xor
fs
les
jp
and
jne
sub
in
imul
jne
sbb
rcrb
pop
xor
lods
mov
rcl
and
mov
sbb
jecxz
out
inc
adc
push
repz
cmp
adc
mov
pushf
rolb
popf
jmp
shrb
lds
fsubs
cmp
sti
dec
outsb
add
push
sbb
rcrb
mov
jp
nop
pop
fistpl
mov
or
jns
adcb
shlb
imul
mov
jns
add
cmpsb
xlat
call
adc
sbb
mov
cmp
inc
mov
mov
push
sub
out
test
scas
ffree
sbb
lcall
cld
pop
ret
mov
hlt
sub
shll
add
repz
xor
int
xchg
mov
jecxz
dec
fsubrs
xor
cwtl
cmp
cmp
xchg
lds
jmp
fs
fs
and
popf
insl
inc
iret
mov
pop
mov
clc
dec
sbb
adc
outsb
gs
mov
aaa
and
data16
pop
jae
ret
ja
add
and
mov
lods
jns
stc
pop
fiaddl
aas
jo
adc
fmul
cmp
rcl
pop
in
xchg
inc
lahf
inc
jne
sbb
imull
push
stc
pop
lahf
notl
xchg
das
shll
mov
pop
insl
leave
mov
outsl
xlat
mov
pusha
repnz
mov
mov
and
lds
push
and
push
pop
stos
xchg
adc
add
cmp
pop
add
stos
mov
stos
ja
fcmovnb
movsl
ss
clc
jg
xchg
mov
mov
out
repnz
out
dec
das
movsl
loopne
fnsetpm(287
xor
adc
and
iret
lret
jo
ret
adc
jnp
inc
cmp
sub
ret
fidivrl
bound
cmpsl
xor
add
adc
push
mov
into
xor
sarl
pop
dec
mov
mov
js
das
gs
push
or
out
jb
mov
adc
mov
mov
lcall
sbb
js
mov
std
add
repz
stos
lds
imull
sbb
pop
sbb
test
ss
shlb
sahf
add
and
push
jne
mov
std
xor
cmc
or
and
mov
in
pop
inc
sub
enter
shll
fcomps
gs
xor
push
cmp
outsl
ret
xor
pop
popf
jmp
xchg
push
test
jecxz
dec
dec
gs
push
dec
sub
fisttpl
adc
into
call
jmp
insb
jae
xchg
mov
lock
out
add
into
nop
jnp
repz
shrl
jecxz
pop
xorl
ret
into
jg
into
or
cld
jo
test
test
cmp
cmp
sar
xchg
andl
fwait
out
mov
in
sbb
or
out
push
rolb
jp
icebp
sbbb
ss
test
popf
std
pop
xchg
lcall
lods
mov
push
cmp
imul
sbb
sbb
cmc
daa
mov
aaa
inc
je
mov
fninit
and
pop
mov
mov
add
pop
jbe
pop
ljmp
sub
inc
or
jl
ljmp
pop
mov
lea
in
scas
popa
sub
call
jns
jl
jmp
mov
cmp
call
and
lock
push
sub
idivl
mov
shll
fs
cwtl
mov
pop
mov
sbb
push
mov
mov
mov
fbstp
cwtl
mov
ljmp
stc
insb
mov
push
fistps
jns
sahf
enter
add
push
fldl
adc
dec
pop
and
cmpsl
cmp
aas
xchg
roll
sub
sbb
in
lods
vprotw
int3
sub
push
sbb
add
loope
sti
jns
scas
stc
pop
xchg
and
jecxz
add
aaa
sbb
int
pop
sbb
or
je,pn
mov
dec
daa
xchg
cli
lods
sbb
push
dec
mov
push
lcall
mov
or
movsl
mov
xor
inc
or
add
adcb
into
mov
fimuls
and
rcrl
add
dec
jo
and
pop
jg
sub
cmp
popa
adc
dec
push
jae
lods
out
insl
dec
pushf
aam
insl
inc
test
xlat
push
cmpsl
cltd
ja
in
fld
cmp
add
mov
ja
iret
adc
cld
cmp
mov
addr16
stos
mov
jecxz
sbb
jns
mov
imul
inc
xchg
cld
mov
pop
sti
sub
rclb
fldt
fs
scas
dec
inc
pop
or
addb
cld
les
mov
push
mov
push
xchg
out
and
ja
adc
in
mov
fcomps
mov
loopne
ret
mov
fdivrl
les
scas
cltd
fisttps
inc
cmp
subb
bound
jmp
cmp
jecxz
xchg
pop
dec
ret
ss
arpl
out
and
pop
and
pop
stc
jns
pop
xchg
shll
push
pop
xor
jae
cmc
or
leave
xchg
pop
insb
shll
or
je
jl
or
sbb
mov
in
js
mov
mov
cwtl
icebp
jp
mov
mov
jmp
mov
adc
lahf
push
add
popf
pop
dec
inc
jo
mov
ret
push
xor
fisubrs
dec
jl
int3
stc
jge
add
out
sub
jecxz
out
fisttpl
mov
or
outsb
xchg
xor
scas
mov
fdivrl
dec
jp
xor
bound
test
into
sbb
xchg
jle
pop
fistpll
daa
clc
mov
push
jne
inc
sub
jo,pt
gs
imull
mov
loopne
or
loope
xchg
cmc
test
jecxz
mov
test
popa
xchg
mov
nop
xor
jne
mov
pop
int
jmp
jne
andb
jb,pn
daa
xchg
sub
push
adc
mov
cmp
mov
jle
xchg
and
aas
stos
insb
cmpsb
add
add
into
movsb
xchg
repz
lods
xchg
leave
mov
call
sub
inc
dec
push
mov
jl
and
xor
mov
fs
cltd
push
test
xor
mov
je
adc
movsl
out
xor
jle
decl
fldcw
sti
fists
cld
jl
jns
icebp
in
jmp
jne
pop
dec
ss
jno
insb
mov
andb
cmpsb
dec
in
or
addb
fwait
arpl
push
mov
dec
jns
out
cmp
pop
jecxz
ja
pusha
ljmp
inc
insl
mov
cmp
scas
js
in
popf
mov
stos
mov
rcll
loope
inc
add
push
pop
pop
stos
and
push
push
mov
insb
xchg
les
pusha
mov
jbe
push
das
cwtl
insl
cmc
pop
push
int3
xor
pusha
push
leave
xchg
or
sub
inc
sub
in
ja
mov
mov
mull
ret
rol
sub
dec
pop
outsb
or
adc
cmp
pop
into
std
sub
sub
or
imul
inc
adc
jnp
mov
fstpt
mov
call
push
mov
sub
je
hlt
xchg
xchg
pop
dec
xchg
sbb
mov
adcl
les
popf
xlat
outsl
add
jmp
sarb
sti
add
adc
pop
lods
or
xorb
xlat
jnp
or
movsl
and
fs
rol
lret
lret
out
iret
xchg
enter
push
sti
sub
or
mov
dec
insb
loope
fstpl
fildl
add
mov
sub
test
xchg
mov
xchg
push
sar
sub
cwtl
sub
adc
scas
shlb
xchg
jns
sbb
or
mov
es
nop
sub
mov
outsb
dec
outsb
add
cld
push
push
mov
test
jno
push
mov
xchg
xor
sbb
fldcw
and
pushw
adcb
pop
xor
or
or
mov
cmp
jecxz
adc
cltd
pop
lds
and
stc
or
and
or
nop
stc
fists
dec
test
dec
fistpll
sub
out
xchg
pop
xlat
sub
push
xchg
jge
pop
sarb
lahf
xchg
mov
mov
inc
sub
enter
mov
jmp
lret
and
test
jp
add
mov
xchg
fsubs
and
lahf
movsl
mov
adc
mov
movsb
ljmp
mov
fcoml
dec
jecxz
sbb
jb
out
cmp
into
xchg
sub
sar
xchg
scas
lea
loope
cmpsb
pop
in
dec
es
mov
insl
inc
push
test
xchg
lret
int3
mov
ja
int
mov
xor
mov
xchg
jmp
mov
es
cs
push
mulb
ret
cmp
pop
cltd
adc
adc
aam
jg
push
enter
sub
fiadds
pop
and
daa
dec
inc
popf
out
stos
stc
outsb
mov
pop
ja
adc
mov
in
add
push
mov
insb
lret
test
daa
sbb
js
jp
ret
add
add
loop
lcall
pop
outsb
in
js
mov
fidivl
xor
stc
clc
adc
sahf
inc
movsb
cmpsb
push
dec
xchg
insb
inc
test
imul
inc
jns
sub
mov
call
lret
lea
xchg
fdiv
cli
add
je
and
jno
imull
int
cmpsb
daa
cmp
xor
notb
jle
mov
mov
pop
push
adc
leave
out
rcl
bound
ja
push
loop
imul
sbb
sbb
add
ret
stos
fs
ljmp
fdivr
mov
cmpsl
jecxz
mov
shl
inc
add
das
cmp
cmp
int
fiaddl
push
pop
mov
imull
repz
aas
hlt
push
leave
lcall
jl
jb
movsb
jbe
jnp
adc
repnz
dec
pop
mov
cld
xor
jp
mov
or
mov
dec
pusha
in
cltd
ljmp
int
push
scas
inc
cwtl
push
ss
inc
pop
mov
fcmovnb
daa
sub
pop
sbb
out
mov
mov
jno
xor
movd
push
adc
pop
mov
mov
mov
test
ds
inc
dec
cwtl
pop
inc
mov
xor
cmpb
xor
mov
jne
dec
pushf
push
movsl
mov
mov
xor
add
in
fnsave
jb
or
push
stc
clc
mov
mov
sbb
pop
aad
fadds
leave
in
xor
adc
adc
xchg
cmc
or
mov
cld
mov
cmc
inc
dec
jnp
dec
sbb
stos
pop
psubw
ficoms
aad
lcall
test
pop
xchg
iret
add
xor
divb
nop
test
sbb
mov
inc
mov
push
aaa
dec
rcrl
inc
icebp
shll
mov
sbb
push
sti
mov
cli
roll
fbstp
xchg
lahf
add
iret
jo
mov
mov
push
jp
dec
pop
sbb
das
frstor
xchg
repz
mov
scas
mov
push
lock
nop
cmc
cltd
push
jns
decb
popa
test
push
lret
jge
imul
and
adc
fstps
rorb
jnp
xchg
pop
cmpsl
cmp
jecxz
mov
stos
cmp
mov
test
sbb
test
xchg
pusha
adc
inc
cld
pop
in
scas
aad
idivl
or
rcrl
and
repz
shlb
cmp
cmpsl
pop
xchg
push
and
mov
pop
sbb
mov
es
add
aad
in
xor
cmc
insl
xor
push
push
testb
aaa
inc
add
jne
jne
jmp
imul
lock
in
fcoml
mov
mov
jmp
cltd
outsl
lea
arpl
lods
fcompl
xorl
push
push
cmp
lcall
or
xor
hlt
lcall
sarb
sub
in
roll
mov
or
in
lcall
aaa
add
lds
or
je
shll
and
mov
and
cmp
loope
ficomps
pop
sbb
imul
pop
mov
or
push
jb
repnz
sahf
jg
ret
cld
dec
xchg
mov
push
pop
and
test
arpl
sbb
test
arpl
sbb
orl
ss
cmp
fwait
adc
mov
cmp
jnp
ficompl
xchg
jns
jp
jmp
jns
and
lahf
shl
and
push
mov
push
lods
lret
stos
add
ret
adc
arpl
cltd
js
xchg
jbe
imul
movsl
mov
add
adc
out
adc
pushf
sub
call
cmc
imul
addr16
aam
mov
inc
cmp
and
mov
ret
test
subl
or
mov
sbb
or
xor
xchg
out
pop
mov
add
outsb
pop
test
data16
repz
jne
and
jle
or
sbb
fwait
out
jmp
push
jmp
xor
sbb
rcrb
xchg
repnz
aam
xchg
nop
adcl
loopne
cmpsl
subb
outsl
and
jae
xchg
sub
or
fwait
imul
int
mov
mov
jno
sarb
xchg
add
push
scas
xchg
sbb
adc
mov
mov
ds
mov
fstpt
dec
xchg
dec
jl
fiaddl
imul
and
mov
cmp
repnz
shrl
jle
mov
iret
das
je
lods
loop
inc
cld
sbb
insb
dec
movsl
inc
test
cmp
cmpsl
cmp
and
ss
fprem1
jge
aaa
outsb
aaa
in
mov
repnz
ror
js
clc
scas
leave
dec
inc
sbb
mov
out
inc
or
lods
add
insb
push
xor
scas
pop
cmp
and
inc
leave
push
pop
mov
cmp
in
sub
xor
sahf
bound
stos
popa
xchg
jl
jb
fs
dec
or
xor
and
add
and
inc
js
das
or
je
xchg
push
fwait
xor
addr16
sbb
adc
or
hlt
out
mov
pop
test
fnstsw
jge
lahf
xchg
jnp
mov
mov
xchg
divl
pop
add
int
mov
cmp
inc
sti
push
mov
testb
mov
stos
mov
rcrl
cwtl
fdivrl
push
into
push
mov
push
sub
xlat
lods
mov
es
popf
cmpsl
loop
fmul
lahf
cmpsb
or
and
xor
xchg
frstor
push
jo
stos
cs
mov
sbb
jmp
xor
repz
add
nop
or
ja
cmp
xor
push
adc
push
insb
into
push
sti
sbb
or
lahf
clc
xchg
adc
test
cwtl
mov
mov
push
cli
es
es
push
xorl
fnstcw
popf
sbb
cld
sahf
inc
icebp
test
jnp
popa
in
in
fldl
pop
ret
in
rcl
inc
mov
std
push
adc
and
mov
jp
fwait
mov
loope
xchg
cmpsl
loope
pop
mov
div
mov
ja
push
movsb
mov
repnz
dec
popf
pushf
dec
jecxz
adc
sub
and
sahf
lahf
mov
daa
mov
movl
xchg
sbb
daa
adc
sarb
mov
jo
dec
pop
adc
pop
mov
mov
insl
cmp
xchg
mov
jns
pop
fistps
jge
cmp
xchg
movsl
jle
sub
jno
arpl
mov
sub
aad
pop
mov
mov
inc
sahf
fbstp
ficoml
repz
jecxz
push
mov
pop
sbb
mov
or
mov
add
call
clc
mov
mov
xor
test
jno
and
gs
jecxz
or
xor
push
dec
jnp
repnz
in
mov
push
sub
loopne
enter
xchg
jns
jne
adc
sbb
jno
pop
mov
dec
and
push
ret
ljmp
shll
add
xchg
add
movsl
enter
pop
push
mov
add
sub
xchg
cmp
sbb
or
fimuls
andb
pusha
in
mov
mov
dec
ljmp
or
dec
dec
inc
imul
mov
cmp
pusha
sbb
daa
push
xchg
push
sub
cmp
pop
mov
add
arpl
sub
mov
cmp
stos
sub
aas
fwait
call
leave
icebp
xchg
push
in
mov
mov
or
or
ja
fnstsw
mov
push
shr
sbb
insl
push
out
shr
daa
mov
mov
lea
mov
imul
outsl
cmc
push
mov
loope
inc
xchg
cmpsb
pand
dec
push
mov
jp
mov
mov
inc
push
cld
xchg
aam
int3
outsb
sbb
and
pop
hlt
inc
loope
and
sahf
outsb
lods
lahf
cli
cmp
lea
pop
dec
pop
imulb
stos
lock
notl
xor
movsl
mov
fidivs
cld
imul
mov
inc
mul
jmp
ret
jp
adc
and
shrl
add
add
sbb
adc
je
mov
and
sbbb
pop
das
hlt
mov
adc
sahf
imul
ss
test
popl
in
sbb
mov
enter
add
xchg
in
repnz
jl
xchg
jge
repnz
ljmp
ss
fsubp
sbb
sub
inc
jns
adc
push
mov
mov
jge
arpl
mov
mov
xchg
mov
addr16
sub
daa
repnz
add
sti
push
iret
jle
and
scas
adc
insl
pop
sti
bound
dec
push
in
scas
aaa
xchg
aam
test
ficoml
xchg
gs
fsts
addr16
je
sub
cmp
and
out
xchg
inc
cltd
cmp
xor
mov
popa
add
call
jmp
pushf
cltd
scas
jl
repnz
or
fisubrl
testl
js
fmuls
mull
mov
or
cmp
lret
add
hlt
lret
iret
xor
loope
repz
mov
and
outsl
push
mov
int
mov
sarb
fsubs
pusha
or
lahf
or
jg
ret
jmp
mov
xor
nop
cld
fmuls
loope
or
jne
adc
testb
and
xchg
add
mov
add
push
lods
dec
lods
pop
pop
clc
adc
outsb
int3
imul
insb
aad
ret
jbe
lea
push
mov
test
xor
fs
mov
test
sbbb
inc
xchg
sbb
aaa
pop
xchg
push
test
lds
jnp
mov
dec
inc
push
and
icebp
fldt
adc
mov
outsb
js
xor
mov
jnp
iret
rolb
ficoml
call
lods
ficoms
shll
div
push
mov
pushf
lods
sub
iret
adc
loopne
mov
fs
dec
dec
push
fcomps
pop
mov
push
inc
das
add
jecxz
pop
mov
push
loope
push
xchg
stc
addb
push
cmp
xchg
clc
je
cmp
xor
icebp
test
add
push
and
push
jg
pushf
jno
dec
and
and
jp
cli
test
sbb
cs
mov
ss
adc
mov
mov
dec
ds
cld
stos
or
lcall
fistpll
xchg
cmp
in
or
int
lahf
push
xchg
dec
mov
or
mov
sub
fadd
xchg
test
xchg
shlb
test
js
lods
in
pusha
leave
or
testl
dec
and
sub
dec
das
pop
mov
sbb
ss
cld
push
push
fstpl
pop
stos
or
das
and
idivb
pop
lcall
push
scas
add
ds
das
mov
cmpsl
and
xor
adc
xchg
sub
cmp
dec
add
pop
sub
das
pusha
push
imul
sahf
push
in
addr16
sar
fnstcw
fwait
cmp
setl
cltd
and
push
iret
addr16
stc
and
je
pop
dec
nop
xor
es
testl
leave
rorb
adc
test
stos
cltd
or
cmp
inc
ljmp
repz
enter
sub
xor
ss
pop
or
in
loopne
repz
cwtl
jge
push
push
jb
adc
jp
sahf
jno
sub
lret
icebp
jge
cmpsb
push
push
addb
test
xlat
pop
sti
mov
movsb
xchg
jb
inc
in
mov
push
sub
ret
add
iret
sbb
push
jle
data16
dec
lret
pop
inc
and
xor
pop
into
pop
and
pop
xchg
mov
xchg
shlb
decb
inc
int3
push
rorb
jb
push
mov
out
inc
jp
movsl
shlb
inc
test
rorl
add
ret
or
fwait
pop
repnz
sbb
mov
fsubrl
push
pushf
in
scas
add
leave
lret
cmpsb
stos
push
popa
adc
mov
xchg
pop
dec
add
imul
inc
ret
jo
fs
nop
xor
andb
stc
sbb
pushf
sub
test
int
ret
mov
addr16
sub
out
xchg
mov
scas
pop
into
adc
sbb
mov
push
dec
cmp
pop
aaa
jecxz
lock
fcomps
ljmp
sbb
fcomp
pop
dec
sub
push
sbb
push
xchg
frstor
sbb
jno
pop
ljmp
fadds
adc
mov
sti
repnz
popf
cltd
xchg
add
lret
rorb
adc
mov
daa
mov
cmp
mov
js,pt
mov
xchg
data16
loopne
jbe
lea
into
fistpl
orb
mov
sahf
fists
js
shll
xor
lods
jecxz
mov
jecxz
mov
sbb
lahf
mov
adc
mov
and
jg
std
xor
and
dec
cmpl
mov
adc
cmp
repnz
test
fwait
adc
xchg
gs
cmpsb
sbb
ret
nop
sbb
fsubr
daa
xchg
ljmp
sbb
mov
mov
mov
xor
arpl
push
js
sahf
mov
sbb
sub
mov
add
mov
sub
xor
stos
out
mov
in
repnz
mov
xchg
loope
mov
out
aas
stos
sbb
into
lods
xchg
pop
in
jmp
movq
cmp
fnstenv
xor
data16
lods
test
fld
pusha
pop
sub
push
or
bound
mov
cld
sbb
fcomps
or
pop
repnz
mov
test
dec
push
popf
sbbb
fwait
mov
and
subl
pop
dec
loopne
mov
mov
mov
mov
stos
pop
push
loop
fs
jl
andl
outsl
lea
es
xchg
cs
push
jge
aaa
js
std
cmpsb
pop
mov
mov
lret
jl
mov
sub
hlt
loopne
add
jo
aam
and
scas
into
popa
movsb
call
repz
pop
addr16
jns
scas
jg
scas
es
mov
lea
jo
mov
imul
add
cmp
jb
jle
push
mov
in
mov
jae
mov
sti
pop
cvtps2pi
lods
sub
negb
adc
adc
jbe
andps
ret
nop
mov
sub
dec
sti
mov
hlt
fdivs
pop
out
addr16
sub
xchg
test
lods
das
lea
fnsave
lret
in
or
mov
inc
jae
jno
cld
push
or
das
je
cmp
jb
flds
cmc
pop
fs
rorb
mov
sbb
stos
add
fbstp
arpl
mov
xor
ss
xchg
pop
inc
fimuls
rol
aam
div
lds
inc
mov
leave
cli
jmp
dec
add
sahf
sub
aas
xchg
lds
jecxz
mov
int
cld
or
sbb
sub
imul
push
in
jg
adc
iret
imul
or
inc
in
sub
lcall
repnz
jb
push
push
int3
aaa
mov
pop
cld
cmp
fnstcw
imul
popa
xor
dec
inc
mov
xchg
add
push
xorl
mov
repz
cmpsb
ret
mov
gs
xchg
js
aaa
mov
add
add
test
cmp
push
fstpl
leave
pop
in
int3
mov
sarl
loopne
mov
fwait
dec
push
sbb
and
sub
subb
mov
fucom
mov
mul
movsb
sbb
sbb
js
add
or
out
imul
out
sarl
orl
mov
and
outsb
jl
lods
push
js
insl
jl
add
repz
xchg
lret
loop
xor
loopne
cmp
sub
mov
bound
rcrl
cmc
fs
and
jecxz
mov
inc
inc
jae
pop
jno
cmp
push
fisubrs
testb
inc
sbb
xchg
inc
lret
test
and
cmp
insb
ds
or
add
in
xchg
in
fiadds
mov
mov
cmpsl
sub
ds
ss
ret
adc
sbb
jg
rol
xor
mov
sahf
mov
cmp
xor
outsl
out
sbb
nop
sub
adc
pop
pop
imull
ljmp
movsb
aas
and
addr16
mul
dec
aaa
fwait
mov
ret
aam
outsb
enter
test
dec
jmp
lods
jns
cmc
and
cmp
lret
in
cmp
movsb
subl
lcall
shll
dec
pop
push
fdivrs
ljmp
and
sbbl
cltd
push
inc
push
dec
int3
xchg
inc
dec
inc
adc
testl
loopne
addr16
push
jg
push
and
dec
adc
ret
ds
adc
push
cmp
outsl
roll
jmp
or
addr16
jns
dec
call
jmp
insl
and
repz
shll
xor
cmp
xor
xlat
sub
out
call
mov
fidivrs
std
dec
xchg
out
and
arpl
lahf
or
mov
push
jb
sbb
push
out
xor
in
push
sahf
dec
xchg
or
xchg
xchg
xchg
pop
mov
add
out
and
xchg
add
js
sub
xor
enter
in
inc
xor
push
sub
xor
lret
arpl
xor
ja
cmp
test
mov
dec
data16
mov
push
dec
sahf
adc
sub
test
sbb
lret
push
xchg
mov
cmc
ds
and
arpl
mov
dec
scas
test
ss
push
or
insb
aaa
lods
push
add
lds
ret
pop
jnp
les
or
je
jp
sbb
out
or
int
insb
add
repz
cmp
jne
adc
sbb
cmp
xor
sub
and
in
fxch
lret
pop
loopne
push
and
bound
sbb
popf
gs
pop
or
out
dec
pop
pusha
in
mov
mov
mov
call
inc
add
mov
ror
mov
mov
cmp
cmpsb
push
loope
and
mov
mov
sub
push
filds
mov
and
cmc
aad
mov
insb
in
movsb
daa
xlat
imul
popa
pop
dec
out
cltd
pop
mov
sub
and
lret
jo
push
fidivrs
xor
test
aas
fs
pop
inc
add
scas
into
rcll
cwtl
inc
push
or
adc
ret
iret
mov
test
aam
sti
iret
pop
mov
gs
into
pop
in
ds
xlat
push
push
loop
pop
out
cli
sbb
pop
inc
cs
movsb
gs
sti
lcall
push
loopne
push
adc
pop
and
sub
xor
sti
cmp
push
mov
std
cmp
push
pop
adc
cwtl
dec
inc
jecxz
push
lock
fisubrl
fimull
or
xor
aas
mov
insb
mov
pop
cwtl
xchg
fidivl
mov
rorb
pop
out
pop
adc
ret
xor
xchg
add
call
pop
push
and
dec
test
sbb
dec
inc
out
inc
shr
lea
jno
into
push
push
inc
lea
dec
mov
pusha
mov
fnstcw
insb
push
mov
jmp
sbb
mov
adc
and
xchg
inc
mov
repnz
inc
mov
inc
inc
push
xchg
pop
stc
sub
cwtl
push
imul
in
mov
mov
lock
cmpsb
xor
cmp
pop
pusha
mov
pshufw
daa
inc
outsb
jno
loopne
xchg
std
push
inc
adc
dec
loope
repz
lret
add
mov
sbb
pop
gs
jne
pushf
pop
xchg
xchg
shll
out
test
imul
test
jae
sbb
fcoml
adc
das
test
mov
sbb
mov
and
pop
jl
sbb
repnz
pop
in
ficoml
cs
jmp
inc
sbb
pop
add
mov
xor
xor
jecxz
mov
out
imulb
mov
xchg
lahf
mov
push
in
adc
popa
sbb
outsb
ja
xchg
ja
add
stos
outsl
mov
pop
push
ja
or
enter
call
or
ret
xchg
fst
pop
add
mov
push
stos
cmpsl
aam
in
xchg
jmp
inc
mov
cmpsb
push
mov
out
scas
xchg
stos
dec
hlt
std
xchg
cmpsl
out
movsb
fsub
ss
xchg
subb
mov
pop
stos
inc
lret
xorb
add
add
jo
inc
push
mov
test
jno
out
lds
outsb
or
sub
imul
icebp
int3
lods
xlat
sub
cmc
repnz
jmp
sti
lahf
popa
pop
xchg
xchg
ret
sbb
fildl
dec
ret
mov
outsl
call
sub
jns
and
test
cltd
sub
loope
pop
push
les
gs
jnp
jp
bnd
add
sbb
notl
ja
faddp
mov
mov
cmpsl
adcl
mov
mov
sbb
andl
jp
or
cltd
out
icebp
add
and
xlat
add
inc
lahf
push
sub
fucomip
sub
imul
cmp
mov
sbb
data16
aam
hlt
push
mov
sbb
cwtl
mov
dec
sbb
idivb
or
dec
sbb
and
sbb
test
enter
add
mov
pop
dec
mov
sub
aas
add
dec
dec
scas
or
int3
imul
push
mov
andb
add
cwtl
icebp
out
lret
enter
push
hlt
insl
fisubrs
xchg
mov
rcll
rclb
loop
movsl
xchg
shrb
xor
sarb
or
inc
lret
imul
jmp
daa
inc
mov
cmp
pop
movups
es
std
idivb
mov
and
lods
add
push
imul
outsl
mov
test
pop
mov
fbld
inc
inc
push
xchg
lods
fistl
mov
or
cltd
and
loop
sti
sbb
je
add
icebp
out
jmp
xchg
test
pusha
lcall
jbe
cmp
or
fcompl
pop
push
repz
push
shrb
sub
jmp
add
test
push
fnstsw
jmp
inc
adc
gs
std
shll
fidivl
push
jecxz
xor
push
cli
jns
push
das
cs
sti
movsl
sub
iret
ljmp
dec
out
fistpl
ds
add
push
sbbl
dec
xor
and
mov
or
ret
xor
dec
cmp
adc
cwtl
mov
push
aad
rorl
pop
mov
test
ljmp
pop
frndint
sub
mov
mov
fidivl
pop
mov
inc
movb
out
orl
enter
out
test
pop
lods
das
mov
xorl
das
jle
stos
lea
xorb
xchg
mov
mov
stc
es
mov
aad
jnp
push
adc
fnstsw
aaa
es
popa
popa
ret
sbb
popa
jle
or
mov
sbb
pop
adc
daa
movsb
jae
fdivr
sbb
data16
add
aad
lods
mov
cmp
bound
pop
test
sahf
daa
cld
sub
inc
and
movsb
xor
adc
in
mov
pop
cmp
mov
iret
aas
mov
sbbb
stos
adc
out
or
dec
jbe
adc
lock
jnp
mov
pmaxsw
sub
or
insl
or
in
test
arpl
mov
les
jne
fnstenv
mov
sti
mov
fists
fwait
sub
les
test
sub
sbbb
orb
xlat
gs
adc
jno
or
cmp
test
pop
cmpsb
sub
ds
sbb
dec
out
lret
push
arpl
sub
dec
jne
xchg
push
mov
mov
adc
fsts
and
scas
fsubl
ret
push
push
jbe
jb
sahf
nop
sbb
subb
sti
jmp
shrb
xchg
int3
clc
adc
xor
fiadds
add
cmc
cmp
add
add
mov
mov
mov
add
jmp
inc
mov
lahf
xchg
fsubrl
jmp
pushf
pop
sar
sbb
inc
push
pop
jge
inc
data16
jg
fs
mov
int3
fbstp
and
in
addr16
int
les
pop
addb
inc
or
iret
lret
mov
push
imul
shrd
ja
or
int
xchg
dec
mov
jbe
push
lcall
xor
or
rcrb
inc
imul
pop
dec
fcomi
add
push
xor
fiadds
outsl
sub
rcr
testb
shlb
jl
nop
mov
push
repz
mov
mov
sub
movsb
dec
jmp
xor
fs
sti
int
xor
adc
sahf
or
or
loop
pop
mov
movsb
ss
or
push
adc
or
adc
arpl
fsubs
dec
sub
jecxz
dec
push
pop
push
mov
pop
cmpsl
jmp
andl
aam
cmpsb
addr16
pop
jnp
pop
pushf
sub
adc
js
ret
ljmp
add
mov
xchg
pop
xlat
xor
test
sbb
push
mov
push
test
loop
mov
mov
clc
lret
mov
aas
dec
cmpps
jg
movsl
dec
inc
iret
dec
lret
test
out
push
sub
xchg
sti
lret
pop
cmpl
xchg
jp
jle
dec
and
adc
mov
add
jns
fstps
xor
pop
inc
pop
sub
adc
int3
pop
les
and
repnz
inc
orb
addr16
std
push
orb
pop
negb
pop
jbe
and
stos
rcll
in
mov
fildl
repnz
sub
add
loopne
dec
xchg
js
sbb
out
cmpsb
addr16
cli
or
pop
push
aad
loopne
pop
pusha
sti
nop
btr
out
ret
fucomip
mov
xor
dec
add
shrl
int3
adc
mov
movsl
loop
lock
data16
cli
aad
and
sbb
dec
aam
and
mov
xor
mov
fildll
jge
adc
add
xchg
inc
pop
fistps
shll
out
cmp
dec
sbb
scas
or
lea
repnz
and
xor
add
popf
xor
sbb
movsb
out
test
jbe
push
dec
inc
add
adc
or
imul
mov
xchg
mov
in
shll
out
test
subl
push
or
outsl
cmp
int
mov
inc
xchg
test
sub
lahf
xchg
inc
mov
flds
int3
dec
in
add
clc
push
mov
stc
test
adc
or
jae
mov
mov
cld
cli
cli
popa
pop
scas
pop
das
aad
cmc
int3
mov
xor
hlt
or
sbb
mov
pop
xchg
pop
lcall
push
dec
fcompl
mov
fistl
sub
pop
test
rcrb
fisubrs
push
push
lds
inc
mov
dec
outsb
imul
sar
xchg
in
cmp
das
add
or
cmpsb
leave
mov
es
inc
stos
or
sbb
mov
mov
sahf
inc
push
rcl
xchg
out
out
mov
mov
aam
and
xchg
incb
mov
test
repz
lods
pop
fisubs
push
stos
loop
adc
insl
pop
and
jnp
ror
sub
das
gs
adc
pop
mov
mov
aam
dec
bswap
jmp
ja
xchg
jecxz
pushf
inc
mov
and
out
daa
popf
pop
shld
xor
repnz
aad
cmpsl
arpl
cli
xchg
xor
xchg
xchg
xchg
outsl
xor
sahf
test
test
adc
dec
shlb
rol
scas
aam
sub
std
sub
pop
pop
xor
dec
xor
xchg
sub
dec
push
imul
jns
mov
mov
adc
mov
dec
pop
xor
subl
xor
insl
xor
pop
jnp
mov
mov
jg
int3
lock
nop
dec
repz
jne
sub
addr16
rorl
aas
cmp
cmpb
mov
mov
mov
loope
leave
fisubs
sbb
call
es
mov
xor
sbb
sbb
mov
loopne
lcall
dec
aam
or
mov
mov
jecxz
and
jg
push
cmp
mov
pop
xlat
popf
xor
leave
repz
xchg
adc
push
popa
mov
pop
mov
into
nop
enter
sub
pop
xlat
push
loopne
jo
sub
cmpsb
in
in
dec
and
mov
ret
sub
xchg
cltd
and
mov
push
or
shll
out
sar
sub
sub
sbb
cmpb
leave
inc
lock
outsb
scas
pop
lret
movsb
cmpsb
jl
pop
dec
leave
out
aam
addr16
mov
fildll
xor
pop
cs
sbb
inc
jo
or
int
xchg
loopne
mov
jb
xchg
rcrb
loop
call
pusha
roll
fs
inc
sub
in
add
cwtl
jge
xchg
mov
sub
push
daa
xchg
outsb
fld1
xchg
push
rol
out
and
pop
push
mov
sbb
cli
hlt
out
sarl
rorl
xor
xchg
pop
and
shrl
ret
push
sub
enter
xchg
inc
pushf
mov
lds
add
ret
cld
mov
or
sbb
xchg
sub
stos
les
ja
push
sbbb
lret
lcall
xorl
xacquire
xchg
push
addb
pop
ss
push
lods
rclb
test
push
ds
jne
sbb
add
js
sub
in
mov
iret
or
push
aad
sbb
push
sbb
xor
dec
and
notl
es
lods
popf
sub
mov
xchg
mov
pop
sbb
sub
aad
xor
mov
jecxz
hlt
das
cltd
add
icebp
stc
jecxz,pn
dec
mov
mov
scas
jl
out
sbb
in
and
cwtl
cmp
icebp
mov
pop
pop
inc
daa
cld
sub
outsl
dec
add
std
mov
cmp
aas
jge
data16
xchg
push
mov
sar
pop
sbb
adc
repz
pop
pop
iret
jne
shl
xchg
fwait
icebp
je
movsb
cli
mov
dec
jmp
or
cmpsl
or
dec
dec
ret
sti
inc
push
pop
pop
mov
jno
mov
push
mov
ja
lea
repz
lock
push
dec
rcrb
clc
cwtl
jecxz
ret
addr16
push
dec
jns
or
test
jno
pop
ss
es
out
js
pop
lods
int3
xchg
popa
test
ret
and
lret
push
mov
cmp
xchg
xchg
mov
cmp
sub
hlt
xor
add
es
scas
in
fildl
push
push
aas
cli
ja
out
jmp
rorl
movsl
fwait
push
fists
imul
mov
fisubs
pusha
in
les
iret
ret
pop
mov
mov
cmp
test
push
adc
mov
mov
dec
fxch
outsl
jns
int3
dec
insb
sbb
or
dec
bnd
add
fbld
lock
movsb
clc
cmp
sub
in
addps
pop
cmp
mov
ficoms
and
popa
push
pop
cli
xor
sbb
fistl
mov
mov
adc
cmp
push
add
aas
and
or
sub
pusha
sbb
lock
adc
cmp
int
imul
mov
fwait
sub
in
cmpsb
fsubrl
sti
mov
push
ljmp
pop
or
in
popf
repz
or
xlat
dec
or
sarb
popf
mov
sbb
iret
mov
ja
cmc
lret
xchg
sbb
mov
imul
in
ret
ja
xor
dec
addr16
mov
mov
test
push
dec
lods
stos
movsl
lret
ret
jle
jne
push
es
cwtl
cmp
dec
jne
cmp
cmp
imul
dec
pushf
shll
shll
sbb
stos
sub
push
mov
filds
inc
outsb
dec
mov
lret
inc
aaa
cltd
mov
jle
loope
ret
xchg
adc
mov
add
mov
fdivl
rcrl
push
sub
stc
pop
inc
loop
add
fcomi
pop
into
mov
adc
sti
pop
cmc
cltd
leave
icebp
xor
aam
lds
pop
dec
leave
or
aaa
sub
cmpsl
push
aad
ja
lock
std
jno
pop
incl
mov
ljmp
imul
jo
shr
xchg
imull
mov
fnstcw
pop
sub
fldt
enter
jnp
aad
mov
jp
aad
int
cwtl
cs
pop
arpl
ss
mulb
rcr
mov
xchg
aas
mov
cmpsl
loop
pop
pop
jmp
out
aas
dec
cmpsl
mov
sbb
arpl
and
mov
pop
mov
adc
cmpsl
mov
mov
in
inc
xor
xlat
xlat
pop
imul
inc
or
jg
lret
loop
imul
dec
jns
cmp
dec
cld
pushf
push
in
lcall
sahf
pushf
das
xchg
sti
mov
leave
xor
mov
xor
loop
lea
adc
subl
mov
rorl
in
xchg
mov
cli
jmp
aas
sti
add
into
mov
jmp
push
inc
bound
add
rorl
cmp
pop
push
pop
stc
imul
lods
add
pop
scas
mul
jle
or
aas
cmpsb
xor
mov
jecxz
out
jle
rcrb
mov
jae
push
jnp
cli
adc
ror
push
cmc
insl
push
imul
js
mov
insb
cmp
jo
int
fimull
cmc
out
pop
xchg
sub
in
push
aad
fwait
ja
nop
or
jno
jp
movsl
test
call
cltd
adc
push
xor
push
xor
adc
imul
fwait
adc
out
mov
movsb
xchg
mov
lods
loopne
mov
gs
sub
push
sahf
popa
mov
stc
fldl
pop
push
mov
mov
sbb
stos
int3
mov
and
xchg
hlt
jnp
adc
int3
cmc
mov
or
push
or
loop,pn
sbb
daa
inc
fldt
mov
xchg
imul
dec
mov
fimull
push
mov
dec
jno
or
loopne
sahf
jp
xchg
ret
out
pop
adc
out
addr16
xor
sahf
lcall
mov
pop
enter
jle
or
ret
inc
les
test
fists
jmp
xlat
test
fs
push
movsb
aam
mov
scas
pushf
stc
mov
jp
sti
scas
data16
cmp
push
movsb
pop
mulb
das
hlt
int
dec
dec
js
fs
and
mov
xchg
fwait
and
shr
aam
mov
push
jge
out
jg
cmp
mov
mov
pop
outsb
aam
and
shl
out
mov
pop
popf
push
lahf
cmpsb
pop
daa
pop
daa
fwait
jl
decb
insb
movsl
shrb
outsl
and
ljmp
mov
stos
and
adc
mov
fmull
mov
adc
mov
outsb
lock
and
jb
lock
je
sbb
shll
stos
cmp
push
fiadds
or
push
xchg
mov
mov
out
imul
add
clc
add
push
std
adc
inc
cs
adc
sbbl
add
or
jbe
jge
cmp
mov
in
std
jge
out
adc
fcoml
es
jae
std
or
push
int3
outsl
movsb
es
mov
mov
lds
imul
adc
cmp
adc
lcall
call
mov
mov
insl
sbb
int
xor
jns
push
xchg
jae
or
in
ds
in
adc
repz
pushf
rclb
pushf
inc
out
movsl
adc
fnstsw
test
jo
cmovb
xor
jo
das
mov
cmp
inc
stos
push
pop
push
sbb
add
mov
cmpsl
imul
pop
cmp
jecxz
push
popa
scas
mov
iret
movsb
addr16
push
adcl
je
xchg
inc
cmp
jmp
push
jg
jne
push
cwtl
lahf
ret
cmp
mov
push
jnp
movsb
rcrl
mov
movsl
ficoml
adc
lahf
mov
jne
out
les
add
shlb
call
adc
jno
jns
adc
dec
into
repnz
mov
mov
insb
mov
pop
jp
shl
ret
push
dec
popa
mov
aad
and
imul
inc
dec
mov
push
int
stc
push
push
xor
mov
xchg
negl
sbbl
sub
enter
cmpsl
test
cmp
aad
add
jle
fmul
mov
cmp
jne
fistl
leave
out
cmp
jbe
add
and
test
adc
push
sub
sti
inc
push
icebp
mov
in
xchg
jp
fstpl
xchg
inc
jmp
sbb
sub
ljmp
add
pop
or
jno
test
mov
mov
adc
cmp
or
stos
inc
fisubrl
inc
jne
in
inc
dec
mov
and
mov
cld
sub
pop
and
inc
aas
sub
fmulp
fpatan
or
lods
push
mov
out
bound
xor
xchg
adc
mov
sub
mov
inc
inc
scas
mov
test
inc
sub
fidivl
sub
aad
aam
xchg
add
add
test
pop
subb
mov
fnstenv
popa
shrb
ret
mov
add
scas
pusha
or
mov
cmp
imul
or
jae
push
scas
aad
call
insb
pop
mov
addl
out
iret
add
cmp
jg
jo
imulb
mov
xchg
test
xchg
lock
iret
shl
xor
and
adc
repnz
fmuls
pop
enter
mov
in
push
mov
and
test
add
mov
jno
adc
jg
loop
push
inc
fdiv
dec
faddl
icebp
hlt
sub
mov
icebp
sub
fwait
push
pop
xchg
push
sub
scas
mov
dec
shrb
mov
sub
pop
lods
add
mov
icebp
dec
ret
mov
sub
ret
add
push
aad
hlt
cltd
clc
mov
pushf
jle
cltd
dec
ja
fldenv
add
outsb
popa
ror
faddl
fnstsw
icebp
lods
lret
movsb
mov
and
stc
stos
das
adc
das
jb
mov
repz
hlt
mov
push
add
inc
cmp
adc
adc
and
xor
mul
or
fdiv
cmp
ja
fisubs
mov
test
shr
jnp
adc
sub
enter
cmpb
leave
jb
xlat
pop
leave
enter
in
aaa
push
insb
adc
xor
and
or
lds
adc
lret
lds
xchg
bound
insb
xor
dec
jmp
adc
dec
mov
jge
ja
pop
adc
push
insb
cmpsl
add
out
ret
jg
dec
and
pop
push
push
push
frstor
fildll
mov
jecxz
add
hlt
xor
popf
shr
pop
mov
xchg
cmpsb
pop
pop
in
inc
pop
mov
mov
push
out
out
imulb
inc
push
add
insl
sbb
xchg
push
push
leave
mov
xchg
sub
cli
pushf
ljmp
mov
gs
stos
shl
js
dec
or
scas
fcoml
cmc
leave
jl
inc
out
pop
pop
lock
pop
push
loop
cmp
movsl
dec
mov
fisubs
dec
fnstcw
cmp
sbb
xchg
xchg
dec
int3
jp
rorl
mov
xchg
xor
sbb
lods
inc
pusha
ja
pop
pusha
gs
pop
scas
sbb
imulb
jbe
inc
xorps
div
xlat
out
js
push
testl
fadds
sbbb
shrd
in
inc
imul
lret
xchg
fcmovne
test
int
sub
adc
dec
cwtl
shrl
mov
test
aam
jecxz
pop
or
jne
push
adc
mov
or
subb
or
cwtl
shll
sub
bound
jge
mov
xchg
adc
push
and
repz
jnp
movaps
inc
call
jp
and
sbb
out
fiadds
cmpsb
adc
cmp
inc
ljmp
rcll
mov
sarb
jae
data16
arpl
push
push
or
rorb
or
inc
inc
xchg
les
and
mov
imul
in
xor
mov
or
cld
lret
adc
pop
cmp
inc
pop
stos
push
pop
mov
adc
in
das
dec
mov
ja
push
cmpb
mov
out
add
jns
stos
rolb
sbb
dec
in
push
in
outsb
inc
sbb
pop
mov
pop
or
push
loop
lea
fisubl
stos
jb
lods
lods
lds
jle
push
cwtl
outsb
pop
scas
dec
repz
inc
and
out
lods
int
or
jle
mov
adc
adc
fisttpl
mov
xor
push
int3
in
pop
bound
cmc
inc
je
out
mov
js
lret
jne
ret
stc
xor
les
rolb
cmpsl
xchg
inc
lock
imul
xor
dec
mov
icebp
aad
push
add
push
cmpb
adcb
pusha
lret
fldt
out
xchg
imul
ja
inc
lock
loopne
loopne
decl
pop
stos
repz
jno
or
clc
scas
jnp
cmp
inc
push
jnp
push
aam
lret
loop
rclb
cltd
ret
js
pop
mov
and
inc
ret
or
fimull
out
repz
inc
jmp
or
jle
inc
loop
pushf
ret
push
rcr
arpl
ret
dec
add
sbb
add
es
xor
rcrl
movsl
daa
test
test
push
fwait
test
add
jge
xor
stos
in
mov
jb
xlat
dec
jge
lock
outsl
aad
sahf
mov
jne
stos
push
mov
and
out
sbb
mov
inc
sahf
pop
ficoml
andl
loop
sub
xor
fsub
inc
int3
in
subl
call
push
inc
inc
jmp
mov
adc
xor
lcall
in
sbb
test
test
jb
inc
mov
lea
out
aad
leave
push
mov
add
fwait
xchg
mov
jl
mov
imul
es
gs
lock
es
xchg
loop
or
xchg
push
dec
jmp
mov
fildll
hlt
sbb
jbe
cmp
roll
bnd
fimuls
push
xchg
pop
and
dec
mov
iret
pop
and
push
sbb
aas
imul
stc
push
pop
leave
les
cli
mov
les
into
es
or
pop
mov
sti
cli
push
push
test
and
das
mov
mov
lret
mov
bound
out
pop
rclb
pop
insl
pop
ror
mov
or
and
icebp
sbb
cmp
or
xor
inc
pop
jg
xor
into
aad
or
and
jg
aad
or
adcb
fildl
mov
lcall
dec
std
andb
fdivrs
add
imul
in
mov
jle
orb
xchg
jnp
daa
ja
mov
dec
imul
xchg
icebp
stos
mov
dec
sbb
mov
push
arpl
pusha
cmc
sub
push
mov
out
outsb
addr16
lret
add
pop
fsubp
push
sbb
mov
sbb
mov
or
cli
mov
jl
sahf
xchg
pop
ret
pop
fisttps
xor
sbb
in
mov
jp
inc
je
push
jne
cmpsl
and
shll
das
fidivs
dec
scas
adc
mov
push
add
sbb
fidivrl
jl
inc
sbb
adc
stos
cwtl
push
movsb
stc
lret
xchg
outsb
leave
leave
cmp
push
adc
push
add
lahf
aaa
test
in
xlat
push
rcrl
sbb
push
nop
xchg
in
adc
xchg
mov
jg
loope
popl
mov
fbstp
adc
inc
and
testb
aas
push
out
lock
fwait
sbb
sub
inc
jno
lret
cmp
inc
and
lods
ljmp
mov
lea
clc
out
test
pop
not
adc
mov
das
xchg
mov
lahf
jnp
out
xor
jb
dec
push
add
arpl
mov
jne
cwtl
mov
xchg
lods
adc
insb
test
and
mov
bt
mov
nop/reserved
cmp
pop
cs
add
mov
or
sub
dec
enter
fwait
negb
sbb
mov
add
mov
loope,pn
enter
test
sbb
sbb
or
and
pop
and
add
cwtl
cmpsb
jmp
sbb
js
imul
or
mov
pop
fistps
into
push
jl
push
xorb
mov
xor
repnz
jg
jb
dec
int3
adc
dec
nopl
lock
mov
sbbb
out
jb
mov
pop
scas
cs
stos
mov
and
cwtl
xor
mov
xlat
nop
arpl
pop
xor
pop
mov
hlt
cmp
and
insl
out
rcrl
sub
fnstcw
xor
push
xor
movb
test
jge
outsl
sbbb
adc
mov
fistl
xchg
mov
push
and
out
insb
aad
add
adc
sub
xchg
mov
push
or
xchg
xorl
sub
mov
ds
add
aad
loopne
cmp
xchg
pop
or
push
jl
popa
xchg
stc
loope
arpl
out
inc
xchg
shl
cmp
jecxz
jmp
dec
push
mov
jge
adc
jmp
sbb
sbb
and
lret
mov
scas
sub
inc
cmp
sbb
mov
out
sti
inc
fstpt
inc
xchg
rcll
mov
jmp
aas
add
subb
push
leave
xor
es
test
bound
shrb
xchg
adcb
lahf
int
xchg
es
arpl
imul
xorl
insb
pusha
mov
nop
addr16
leave
fsubrs
out
sub
dec
les
bound
out
push
imul
inc
das
jg
dec
loop
add
ficomps
pop
shrb
cmpsw
pop
jne
mov
iret
jl
shll
inc
pop
sarb
jmp
dec
pushf
sub
imul
xchg
fimuls
xor
pusha
jle
pop
je
and
xchg
adc
cmc
stos
cmc
fisubs
shlb
xchg
pushf
push
sbb
sar
or
dec
sarl
and
adc
jg
leave
repnz
repnz
xlat
cltd
or
jge
andb
sbb
pop
sbb
bound
push
or
lea
cmpl
dec
cmp
cltd
ret
fcomps
cli
xchg
sbb
mov
mov
add
mov
mov
sti
in
outsb
or
imul
invd
mov
jne
sarl
mov
cmp
mov
movsl
add
cltd
lock
ljmp
or
loopne
fidivrl
dec
pop
sti
dec
inc
int3
in
mov
cmp
mov
lds
int3
mov
subl
push
mov
xor
movl
xchg
sub
adc
ret
mov
aad
lcall
push
sub
mov
test
inc
xchg
add
xchg
jecxz
rcr
cmp
enter
mov
stos
dec
or
jle
and
je
adc
aaa
in
mov
inc
or
mov
or
jmp
in
xchg
jb
das
pop
ffreep
adc
inc
inc
mov
jle
mov
cmpsb
or
scas
in
in
and
dec
mov
test
test
out
loop
test
and
cs
arpl
scas
xchg
mov
test
lcall
add
outsl
adc
push
adc
push
cmpsl
test
xor
xchg
je
fisubrl
dec
and
mov
gs
pop
inc
out
pop
loope
icebp
ja
nop
addr16
faddp
push
xor
adc
and
jl
inc
and
add
ljmp
clc
add
gs
sbbb
push
jbe
int
push
xchg
push
sub
cmp
xlat
cs
inc
cmpsb
in
pop
mov
cmpsl
jae
test
sbb
sub
jb
jbe
xchg
lcall
push
adc
adc
sbb
add
mov
imul
in
xchg
mov
dec
or
sub
out
nop
pop
shlb
mov
mov
test
xchg
fs
jno
aam
jg
mov
mov
dec
xor
cmpsl
cmpb
mov
cmp
icebp
jnp
rorb
adc
clc
rcrb
xchg
rol
in
popa
sahf
ss
sbb
stos
insb
ja
notl
dec
lret
std
mov
sbb
fistpl
mov
in
jb
push
into
hlt
call
orl
inc
imul
dec
jl
repz
mov
mov
xor
jp
les
cli
push
frstor
lcall
add
mov
lock
xlat
mov
orl
in
push
lret
mov
aam
xor
lock
in
xchg
ret
pop
sahf
mov
ljmp
push
inc
pop
xor
push
rolb
xor
inc
iretw
dec
adc
jae
mov
adc
add
xchg
add
and
or
xor
in
jmp
push
inc
sbb
das
lods
sub
insb
stos
cmp
ficompl
jno
mov
sbbl
push
cltd
dec
xchg
mov
inc
mov
bound
call
cmp
popa
pop
adc
and
scas
popf
and
mov
push
adc
mov
hlt
push
fcoms
sub
adc
shll
lret
jmp
mov
dec
or
call
int3
cs
sub
imul
outsl
stos
rcll
les
popf
mov
add
test
mov
adc
push
mov
xchg
movsb
sbb
aam
nop
push
sti
mov
rclb
xorl
mov
aaa
mov
lea
inc
jp
sbb
push
adc
dec
xor
nop
xchg
cmpsl
shl
xorb
cwtl
orb
cmpsb
pop
mov
shl
cltd
dec
pop
cmp
jbe
push
mov
stos
jp
xchg
fistps
loopne
add
fwait
repnz
es
mov
sub
mov
jne
les
notb
xor
cltd
push
in
notl
lods
inc
mov
cmc
cld
pop
fnstcw
inc
das
test
aad
in
fs
js
cmc
scas
mov
test
cmp
out
iret
bound
jg
push
push
jae
mov
scas
pop
enter
js
adc
out
mov
xchg
lock
cltd
or
pop
mov
int
clc
lods
mov
jae
ljmp
jg
mov
in
mov
andb
fisubl
jp
ret
cmp
push
incl
clc
das
mov
xor
mov
dec
xchg
sub
test
stc
ja
xor
push
jmp
test
inc
sahf
int
push
inc
fstpt
push
daa
adc
ret
repz
push
incl
jne
in
push
frstor
mov
int
test
aad
popf
in
jb
add
jl
xchg
inc
imul
stc
cmp
sbb
cmp
sub
xor
pop
in
mov
adc
and
mov
pop
incl
dec
jg
pop
js
or
rcl
or
das
lret
inc
push
loope
iret
stos
jns
in
out
mov
cmp
mov
fs
push
pop
xor
fnstenv
mov
cmp
dec
testl
cld
dec
push
stos
arpl
fdivl
in
inc
dec
movsb
adc
pusha
jle
push
sub
loope
mov
pop
out
insb
leave
xchg
mov
add
js
nop
lcall
aad
clc
or
pop
fsubrp
fldenv
lcall
mov
sahf
pop
xor
inc
or
fisubl
mov
int3
mov
leave
sarl
or
jo
pop
in
mov
inc
xchg
insb
pop
jnp
mov
imul
call
test
cmovnp
gs
mov
push
ss
mov
loop
loop
or
lock
or
dec
lods
out
cltd
lcall
adc
out
add
mov
icebp
cmp
ret
and
add
add
mov
out
cli
lods
inc
or
jbe
pop
jae
ljmp
xchg
cmpsb
jb
out
xor
pop
mov
adc
add
inc
lea
push
or
sub
dec
xor
lret
aaa
xor
xor
xlat
fs
pop
imull
fimull
dec
lret
jmp
cs
jmp
negl
divl
ret
loop
not
stos
cmp
add
xchg
push
je
pop
xchg
xchg
cwtl
jp
pop
mov
sbbb
xor
adc
cmovg
jp
mov
jmp
add
iret
les
out
shll
clc
les
and
ret
mov
jns
dec
sbb
mov
push
and
add
xor
test
dec
jp
push
stos
push
fcmovnbe
inc
xchg
std
or
lods
mov
lret
cmpsb
cmp
lahf
inc
dec
aas
pop
dec
push
ljmp
orl
sbb
sub
pop
les
mov
mov
push
jbe
mov
sub
pusha
pop
les
cmp
adc
jecxz
ds
or
mov
enter
dec
push
cs
xchg
testl
inc
adc
inc
rolb
in
cwtl
test
lock
insb
cli
addl
mov
inc
jle
sub
adcb
addl
test
daa
in
jns
mov
push
xchg
lods
jp
jnp
xorb
dec
inc
sbb
pop
loopne
xlat
or
neg
lock
mov
lcall
lcall
loope
leave
movb
aam
push
fwait
xchg
lret
mov
jnp
xchg
xor
imul
outsl
les
adc
pushf
jle
imul
cmp
data16
or
mov
jge
pop
xchg
sub
sbb
add
inc
dec
cmpsb
fidivs
out
or
dec
in
and
xor
daa
sub
mov
fstp
cltd
clc
out
xor
imul
fwait
mov
imul
pushf
push
mov
jo
js
scas
pusha
lock
jmp
xchg
ljmp
lret
fcmovu
ja
dec
in
jbe
xchg
cs
lock
test
mov
lods
mov
adcb
xlat
lret
mov
fimuls
mov
dec
cmp
pop
add
test
repz
mov
test
push
mov
cmp
xor
jl
jge
xor
dec
les
mov
jmp
movsbl
and
rol
cli
dec
jge
jl
aaa
repnz
jae
xchg
movsl
or
fdivrs
add
cmp
lea
call
stos
pop
push
jo
out
stos
mov
insl
xchg
repz
jg
sti
cld
pushf
sub
jmp
push
mov
and
dec
lods
mov
call
push
inc
mov
movsb
inc
mov
subb
das
js
aad
jns
pop
mov
mov
adc
push
xlat
xchg
or
mov
push
dec
mov
inc
sbb
and
push
lcall
cmc
mov
nop
sbb
jbe
in
sbb
loopne
call
mov
pop
iret
fwait
aad
add
push
pop
in
out
jmp
inc
test
aad
mov
popa
push
into
in
ljmp
into
inc
push
jp
cmp
ret
jl
std
sbb
mov
cmpsl
cmp
mov
jbe
push
dec
push
and
das
jle
adc
mov
shrb
icebp
mov
int
pop
xor
pusha
jns
test
rorb
push
std
pop
mov
xor
push
clc
repnz
in
cs
add
push
sub
jae
mov
adc
lods
insb
sbb
mulb
pop
outsl
inc
mov
xchg
mov
popf
push
dec
pop
repz
mov
mov
sti
inc
pushf
cmp
imul
mov
es
imul
out
cmpsl
xlat
nop
ja
imul
jmp
ljmp
mov
and
mov
das
mov
sbb
sbb
sbb
push
sbb
add
jg
leave
loop
fstpl
stc
rorb
test
and
dec
sbb
adc
stc
pop
xor
fbld
jns
mov
pop
xchg
subb
adc
xor
adc
adcl
stc
ss
lcall
dec
jg
and
ds
xor
loop
sbb
xchg
sub
inc
and
jmp
in
push
add
cmc
jne
mov
pop
sub
stc
jl
lahf
adc
and
outsl
loopne
out
lahf
in
and
rorb
repnz
repz
xlat
test
xchg
fidivrl
cmp
fiaddl
loope
je
mov
stos
jl
fwait
jp
rcll
shl
pop
gs
icebp
push
jb
mull
popf
dec
cmp
cs
ror
stos
sub
sar
fsub
in
stos
inc
lahf
daa
mov
pop
in
leave
fisttpl
or
dec
jl
push
shrb
pusha
cmp
cli
xor
les
mov
adc
adc
xchg
xchg
mov
dec
or
fistpll
hlt
sub
insl
jb
or
push
sub
into
lret
or
lret
cmp
xchg
insb
insl
rcrb
mov
jbe
pop
cmp
pop
xchg
push
sahf
in
and
push
fidivl
fcmovnbe
inc
cmpsl
idiv
jo
add
cwtl
add
popa
add
cmp
out
les
nop
and
test
in
sbb
adc
mov
leave
and
into
sbb
mov
cmp
pop
sbb
sbb
mov
mov
add
jmp
push
imull
shll
push
mov
dec
ret
mov
pop
orl
xchg
adc
icebp
repz
lock
xchg
pushf
sub
mov
popf
je
pop
cmpb
leave
insl
test
push
push
ret
dec
pop
add
mov
xor
xchg
xchg
fldenv
lcall
xchg
les
pop
adc
cmp
add
paddsw
dec
jns
sub
cmpsb
out
and
or
mov
push
fmuls
rol
and
pushf
dec
push
loopne
in
mov
movsb
out
fwait
cmpsl
repnz
in
mov
fwait
dec
xchg
xchg
stc
pop
xchg
mov
mov
addb
jmp
test
or
cmpsb
adc
pop
lds
cmp
pushf
and
dec
into
and
dec
iret
fwait
mov
mov
push
push
xchg
aam
stos
and
stc
push
xor
sbb
jmp
push
jns
mov
inc
fmuls
xchg
mov
xchg
jae
lret
cmp
add
arpl
and
mov
mov
and
lea
jle
adc
stc
dec
xor
cmpsb
xlat
das
outsl
push
mov
xorb
mov
aam
inc
inc
push
rcrl
rorl
mov
imul
sbb
push
pop
imul
xchg
and
cwtl
stc
jecxz
pop
sub
jmp
sahf
stc
sbb
into
inc
pop
lcall
push
shll
xchg
pop
cmp
shlb
adc
mov
mov
bound
mov
out
btc
sub
cli
xchg
testb
jb
repz
jmp
dec
add
jp
fxch
in
out
push
fwait
mull
out
hlt
xlat
xor
mov
push
xchg
xor
frstor
movsl
popa
mov
jno
xchg
inc
scas
and
mov
jl
inc
test
add
xor
xchg
test
push
adc
aad
sub
dec
and
mov
in
das
call
cs
sbb
lahf
cmp
dec
jo
pushf
cmp
fdivrs
or
xchg
inc
cmp
ljmp
jae
pop
test
xchg
jae
xor
fbstp
pop
subl
lahf
sbb
adc
fisubs
jmp
sbb
addr16
addr16
xchg
add
int3
pop
push
sbb
shr
xor
popa
xorb
dec
add
and
pushf
shll
sbb
fwait
mov
out
dec
hlt
gs
neg
shlb
lock
sub
cmc
xchg
les
js
lea
div
sbb
fisttpll
sti
push
jmp
add
test
xchg
stos
adc
add
pop
mov
cmp
push
rorb
dec
xchg
xor
xor
sbbl
push
rolb
popl
mov
shl
cmpsb
mov
jno
faddl
push
std
dec
xchg
pop
add
jmp
pop
ljmp
xchg
add
mov
insb
mov
test
mul
push
push
xor
add
cld
pop
insb
push
outsb
pop
out
fstp
in
ret
imul
jae
in
call
cwtl
jne
mov
push
dec
ret
loopne
xchg
test
out
je
psrad
push
cmp
or
mov
or
cmpsl
jns
leave
nop
push
cmpsb
jmp
fs
mov
scas
mov
xchg
cmp
push
and
outsl
fwait
cs
addr16
ret
imul
test
cmpsb
hlt
mov
jp
fcom
pop
mov
cmpsl
movsl
pop
inc
inc
inc
popl
fbld
or
jne
lcall
pop
fwait
sub
daa
imul
out
js
dec
popf
cmc
in
cmc
out
cwtl
sti
sub
test
xor
into
loope
mov
jge
cmp
aad
adcl
test
dec
or
cmpsl
adc
mov
mov
mov
and
sbb
imul
scas
inc
icebp
and
outsl
jno
in
add
adc
nop
flds
in
sub
mov
mov
outsb
pop
pusha
scas
orl
repz
mov
adc
inc
mov
mov
and
xchg
xor
outsl
inc
icebp
add
icebp
aas
cli
dec
pop
adc
sub
jg
sbb
pop
int3
mov
aaa
cmpsl
clc
xor
outsl
push
ret
xchg
lods
sub
inc
push
pop
scas
mov
icebp
xchg
dec
jo
daa
lret
pop
inc
mov
xor
pop
xor
mov
rcll
cmp
pop
ret
out
cwtl
xchg
pop
and
ret
and
xchg
loopne
jae
sbb
mov
loope
lret
adc
inc
repz
aam
xchg
mov
push
xor
bound
cld
jnp
pop
dec
test
mov
icebp
seta
test
mov
add
xchg
xchg
mul
jge
sbb
imul
adcb
cli
adc
xlat
ret
dec
adc
roll
add
jecxz
xchg
std
push
aaa
loopne
mov
daa
adc
in
std
push
push
jae
shl
cmpb
and
sub
rcll
xor
mov
mov
mov
jge
xchg
sbb
pushf
shll
push
cli
cwtl
mov
dec
xchg
push
mov
stc
mov
jo
arpl
jmp
inc
mov
lods
push
out
mov
cld
pop
pushf
imul
sub
and
lret
into
cltd
jg
xor
pushf
mov
mov
jp
cmp
and
scas
mov
and
data16
fldenv
dec
or
mov
imul
lcall
lret
addr16
hlt
dec
ss
and
ret
push
sub
lret
or
popf
imul
push
nop
fucom
pop
bound
mov
pop
orl
dec
idivl
mov
jbe
xchg
fmul
and
cmpsb
xor
int
lret
sbb
popf
sub
test
call
pop
ss
cmp
pusha
outsl
xchg
mov
cmpsb
sub
push
cltd
push
into
imul
lret
inc
fimuls
or
xchg
dec
cli
mov
in
std
std
xchg
sarl
cmp
movsb
fcompl
test
dec
out
testb
rcrl
and
sub
shl
loopne
in
je
shr
adc
pop
scas
aad
imul
xchg
sub
sbb
xchg
dec
sub
mov
pop
mov
lock
data16
lock
aam
stos
shrl
sub
daa
sub
ss
jbe
or
imul
roll
pop
mov
adc
lods
lret
in
inc
mov
outsl
sub
sub
xor
mov
xor
jbe
push
mov
sub
popl
aaa
lcall
adcl
mov
jno
jne
sub
and
or
inc
leave
sub
fisttpll
subb
cltd
mov
or
imul
cmp
jg
gs
jge
addr16
xlat
rclb
push
das
int
xlat
out
cltd
in
fsubrs
and
int
sbb
aaa
sbb
js
xchg
faddl
es
jne
jne
push
sub
adc
jecxz
sbb
push
push
fidivrl
ficompl
lret
xchg
jae
shll
rolb
cltd
stos
loop
sub
inc
test
adc
push
es
xor
or
data16
jns
bound
sbb
cmp
sub
aam
sbb
sub
std
pop
out
sbb
adc
and
and
jl
cmc
lahf
jge
mov
enter
rclb
xchg
adc
mov
mov
js
push
and
sbb
pop
cmp
int
mov
jae
mov
loop
xchg
jge
test
pop
pop
push
jp
loop
mov
sbb
stos
lea
in
push
xchg
inc
insl
test
aas
xchg
add
inc
dec
out
fistps
xchg
dec
in
adc
xchg
push
mov
push
xlat
or
cltd
aad
inc
jp
into
pop
pop
push
xchg
lret
popf
push
adc
imul
rcr
ljmp
loop
lea
out
fidivrl
test
insb
inc
add
int3
adc
loopne
orb
xchg
pop
popa
pop
nop
dec
xor
add
repz
push
std
in
sarl
in
mov
stc
pop
jp
and
xchg
mov
bnd
repnz
xchg
xchg
cmpsl
sbb
out
insl
add
push
cmp
push
negb
xor
dec
mov
mov
cli
leave
mov
cmpsl
push
push
xchg
decl
pop
inc
lds
jp
pushf
or
adc
mov
lds
mov
pop
xor
popa
ficompl
je
sbb
mov
aaa
mov
into
jmp
and
add
mov
add
int3
inc
cmp
pop
imul
inc
cmpsb
insb
fbstp
sbb
cmp
clc
jae
mov
dec
int
in
mov
xor
adc
popa
lea
xlat
xchg
xchg
cmp
mov
scas
xchg
cmp
nop
test
sbb
dec
xchg
mov
pop
les
aas
xchg
stos
jne
xchg
push
xlat
stos
mov
mov
sbb
test
sub
fdivrs
nop
les
sbb
sbb
xchg
jl
cld
pop
stos
shr
dec
inc
popa
inc
inc
lahf
loop
xor
jecxz
clc
push
push
pop
enter
and
loop
out
xlat
lock
inc
fldcw
push
push
and
jge
jbe
xchg
imul
rcll
imul
roll
aad
mov
add
mov
push
rorb
cmp
in
mov
push
cmpsb
add
fldcw
adc
add
shll
std
jg
or
addr16
cmp
out
stos
push
pushf
cmp
mov
pop
mov
in
cmc
push
jp
dec
out
dec
jg
pop
mov
mov
push
dec
scas
inc
jg
in
cmp
adc
je
sar
ffreep
dec
leave
inc
movsl
dec
adc
xor
dec
les
rcl
mov
xor
sbb
daa
fwait
pop
add
jmp
pusha
pop
mov
js
push
mov
sub
fistl
jb
xchg
sarb
pop
shll
jmp
jmp
pop
jl
xchg
imul
ss
lret
sub
pop
and
pusha
xchg
xlat
sbb
jnp
xor
in
lahf
imul
outsb
or
dec
repz
shl
shrl
js
mov
and
sarl
and
lods
jp
and
mov
shlb
jns
sbbl
stos
das
dec
push
mov
ja
insb
aas
xlat
mull
mov
cwtl
inc
xchg
or
fsubrl
stos
sbb
xchg
push
jo
movsl
inc
sti
push
xor
mov
fs
sti
cmp
in
je
rclb
sub
push
lea
pop
jmp
stos
out
div
movsl
sbb
push
bound
cwtl
insb
sarb
cld
hlt
push
mov
jb
je
xchg
inc
inc
pushf
lahf
dec
mov
inc
jb
shll
in
movsl
pop
sti
sub
sarl
movsb
popf
arpl
inc
icebp
pop
mov
jp
lds
test
mov
sbb
pop
push
sbbb
cmp
or
and
mov
jo
mov
sub
hlt
jmp
xchg
cld
lret
or
aas
mov
notb
inc
rcll
cmp
stos
test
fucomp
enter
inc
xor
fistpll
xchg
mov
sub
ds
aaa
cmc
mov
inc
test
pusha
mov
mov
jl
cmp
popf
adc
add
xor
mov
rcrl
jbe
sub
sub
xchg
dec
mov
icebp
add
fsqrt
jl
mov
cmp
xor
lret
std
fdiv
std
xchg
sti
in
mov
sbb
test
lret
add
mov
ret
aaa
inc
mov
fwait
xchg
adc
lods
cmp
lahf
std
das
daa
loopne
jno
mov
test
mov
and
mov
jne
xchg
jge
stc
loopne
test
mov
fsubrl
inc
fwait
gs
shld
mov
cwtl
or
jns
dec
outsb
dec
scas
roll
jb
mov
addr16
mov
xor
ja
add
inc
leave
fiaddl
and
imul
subb
cmpsl
mov
lods
cmp
xchg
scas
and
xchg
adc
pop
mov
jl
in
inc
ds
nop
stos
jnp
xor
fs
mov
out
ret
sub
pop
pusha
inc
mov
cmpl
mov
int3
pop
aaa
xor
adcl
in
cmc
mov
push
cmpl
push
mov
sub
mov
jnp
lea
add
ficomps
xor
pop
icebp
mov
mov
inc
push
sbb
stc
mov
lcall
nop
mov
mov
pop
cmp
push
sbb
js
xor
out
push
mov
lcall
pop
mov
negl
call
dec
mov
fldt
ficoms
xor
ret
lret
pop
cmp
aam
xchg
enter
mov
out
shl
sub
test
insl
int
lret
ret
imul
sbb
cmpsb
fistps
sbb
push
mov
out
test
ss
shll
ds
insb
sbb
mov
xchg
cmc
xchg
fs
movsl
enter
lret
xchg
fmulp
mov
popf
out
sbbl
jg
xchg
test
push
jnp
lahf
pop
and
cmp
jmp
cld
push
gs
sub
shlb
lods
sbb
cmc
jle
inc
cmp
add
mov
xchg
xchg
or
add
mov
mov
insl
loopne
cmp
outsl
adc
sub
stos
sbb
jle
adc
das
hlt
aas
sub
stos
std
push
int
push
pop
dec
sbb
loopne
out
inc
inc
rol
pusha
hlt
push
sbb
cmp
ljmp
push
dec
fs
jge
popf
add
jns
dec
or
test
xor
mov
jnp
dec
loop
lods
leave
ds
or
inc
sub
push
ss
inc
sbb
leave
sbb
mov
mov
dec
sbb
cwtl
mov
add
scas
or
jg
pop
mov
test
mov
nop
lret
ret
out
subb
pop
cli
lret
cmpsb
mov
in
or
rorb
push
or
jno
mov
pop
arpl
pop
mov
cmp
lds
insb
cmp
leave
int3
js
fistps
xor
push
dec
mov
add
lahf
fwait
lret
add
lret
sbbb
inc
push
out
loopne
mov
jl
and
std
cmp
sahf
mov
mul
pop
je
jbe
arpl
mov
cmp
shlw
loopne
stos
loope
stc
ret
stos
stos
in
sbb
push
int
hlt
adc
test
ret
inc
repz
or
adc
je
aas
loopne
add
mov
push
mov
into
iret
sbb
or
push
in
jo
mov
negl
push
jg
xor
insl
push
pop
adc
and
add
fcompl
pop
mov
sti
and
les
loope
out
jo
jne
inc
orb
les
push
sbb
jg
cmp
scas
xor
cmp
clc
push
mov
or
pop
inc
lods
push
xchg
inc
xchg
pop
nop
cwtl
jmp
cmc
outsb
inc
mov
clc
add
push
dec
sbb
clc
icebp
dec
ret
imul
stc
jno
shll
push
lods
fwait
call
xchg
xlat
sbb
outsb
fnstcw
push
or
dec
jne
cld
aam
subl
outsb
push
or
lods
inc
sbb
mov
into
adc
lock
ret
dec
adc
sbb
pop
stos
lahf
pop
loope
cmp
or
hlt
and
shll
add
or
js
pushl
pop
aaa
jle
xlat
int
loop
outsl
cmp
inc
ret
dec
clc
jns
pop
sbb
dec
out
aas
fadds
dec
orb
pop
cld
mov
xchg
mov
fisubrs
inc
aas
xor
sbb
cltd
lock
push
daa
fwait
pop
sub
cltd
mov
imul
ja
iret
cs
cwtl
sbb
int3
stos
xlat
mov
add
and
mov
mov
clc
loope
pop
jns
outsb
push
xor
dec
and
adc
test
push
xchg
xchg
imul
subb
out
pop
pop
push
and
sbb
cs
fisttps
jnp
mov
je
or
mov
adc
sbb
data16
pusha
pop
jge
iret
scas
xor
rclb
mov
movsb
jns
add
mov
inc
pop
cmpsl
aad
lret
lods
mov
scas
pop
pushl
aam
add
dec
and
in
xor
push
mov
push
out
mov
cmp
or
sbb
xchg
adc
pop
sub
mov
mov
push
lock
imul
sarb
mov
fwait
clc
cmp
jns
pushf
imul
adc
into
pop
jb
movsl
jp
add
aad
lahf
sub
test
sub
fwait
jns
xor
cli
or
inc
adc
inc
out
popf
aad
push
fldln2
stc
jge
cmpsb
mov
cmp
pop
cmp
mov
or
addb
mov
jo
mov
pop
scas
xchg
xchg
jp
push
inc
in
mov
and
pushl
stos
dec
rcr
xor
or
xchg
adc
in
cmp
push
popf
mov
lret
pusha
repz
pop
push
repz
jns
adc
imul
jl
cmp
mov
push
inc
popa
push
xchg
ljmp
push
push
lods
lcall
fstpl
xor
xor
mov
gs
push
fsqrt
jne
call
stc
cmp
add
sbbl
div
filds
stos
pop
mov
mov
mov
cld
imulb
cmpw
notl
out
jp
fidivrl
stos
out
popa
int3
popa
cli
mov
jno
push
mov
dec
jp
jnp
shrb
mov
icebp
outsb
shlb
sub
inc
push
daa
pushf
sub
addr16
daa
adc
aas
repnz
cmp
push
enter
xchg
int
inc
jo
pop
andb
fcoml
push
xor
sbb
gs
pop
push
pop
adc
inc
or
rcll
hlt
les
into
adc
pop
cmp
xchg
pop
addr16
lods
fdivp
cmp
call
dec
mov
inc
add
adc
sti
sub
jne
scas
adc
lds
addl
adc
cmp
daa
test
pusha
push
mov
cwtl
xchg
cmp
pusha
add
rcl
pop
jp
xchg
les
mov
pop
loop
and
cli
mov
stos
mov
adc
test
push
sub
out
mov
ds
pop
sub
ja
cmpsl
pop
xchg
jo
mov
xchg
bound
push
push
or
int3
push
pop
and
ja
sarb
in
movsb
adcb
dec
mov
add
and
push
mov
gs
adc
sub
nop
mov
xor
cmp
mov
es
push
mov
xchg
mov
neg
inc
push
mov
xchg
mov
aad
push
loop
mov
xorl
xchg
cmp
cli
mov
rcll
ret
mov
sub
sub
out
adc
cmp
insl
jge
movsl
add
cmp
mov
mov
inc
jecxz
jle
cmc
test
jge
add
xor
inc
push
jg
enter
xchg
mov
pop
imul
cmpsb
imul
pop
adc
les
popf
push
shld
sar
jne
insb
leave
xlat
dec
cmp
addb
in
mov
jmp
sbb
stc
pop
mov
dec
pop
xchg
cs
rclb
bound
mov
lret
jne
pop
mov
shl
xchg
aas
ja
stc
mov
sarl
mov
push
add
data16
or
sbb
popf
mov
push
inc
mov
pop
add
cmp
push
cli
dec
push
idivb
push
scas
pop
out
pop
sbb
je
sti
pop
lret
sti
pop
rcrl
xchg
rcr
loop
adcb
cmp
xchg
sub
sub
std
cmp
imul
test
outsb
insb
test
xor
in
idivl
adc
sub
pop
cmp
int3
dec
sbb
int
pop
es
dec
sub
inc
testb
jp
xchg
fisubrl
and
lret
push
sarb
aam
ret
mov
cmpb
mov
pop
mov
sub
in
jecxz
push
jb
adc
scas
push
push
sub
push
in
movsb
fmulp
test
cmc
add
idiv
or
es
scas
sahf
mov
cmpsb
popa
lret
inc
and
das
mov
fsubrl
cmp
das
sub
add
mov
mov
dec
adc
mov
cmovp
icebp
rcll
pop
sbb
int3
or
fstl
insl
addb
xchg
hlt
inc
icebp
pop
movsb
data16
jnp
ret
adc
je
xchg
insb
mov
add
mov
xchg
imul
mov
sub
cmp
sub
xchg
mov
inc
out
shll
enter
cmp
jge
daa
mov
sarl
sub
jne
leave
dec
jl
jno
iret
orl
nop
xchg
mov
fdivrp
subl
mov
sbb
shll
push
sub
xor
mov
jecxz
fdivs
mov
jne
and
mov
hlt
push
xlat
andb
jg
dec
mov
or
das
mov
xchg
pushf
push
mov
or
repnz
fnstenvs
inc
ret
rorl
sbb
daa
nop
mov
adc
rclb
stos
in
fcomi
and
pcmpgtw
or
add
jno
mov
cmp
add
xor
ret
jo
sahf
clc
ss
push
lret
cmp
sarb
lahf
mov
jmp
ds
ljmp
pop
inc
ret
addr16
test
push
sub
std
mov
imul
jle
xchg
sbb
cmp
popa
repnz
stc
sub
push
pop
and
test
in
dec
mov
jl
leave
inc
bnd
push
mov
adc
jl
jmp
cmp
scas
mov
sahf
push
dec
cmpsl
leave
adcb
lahf
test
das
popa
and
adc
loopne
out
leave
jl
adc
sti
mov
mov
aam
in
pop
dec
mov
arpl
xchg
loope
xor
adc
push
and
push
lods
pop
push
xor
cmp
xor
js
or
add
imul
movsb
sbb
imul
es
pop
inc
add
sbb
pop
push
out
leave
cmc
xchg
roll
test
addl
testb
mov
jmp
cmp
push
inc
lret
push
outsb
in
addl
pop
adc
in
sti
sbb
pop
pop
andl
push
inc
jne
ret
insl
adc
fimull
mov
pop
mov
cld
add
lds
mov
popa
repnz
popa
mov
sahf
xchg
dec
xor
js
xor
bound
aas
sahf
jl
mov
xchg
rclb
sbb
inc
mov
rorb
mov
pop
arpl
and
jle
out
xor
inc
dec
ret
fsts
jecxz
add
sbbl
fldl
flds
cltd
ljmp
xchg
mov
add
decb
in
rclb
bound
nop
jmp
jle
movsl
mov
iret
push
dec
out
cmpsb
fdivrl
or
xchg
das
cld
inc
pushf
test
scas
test
cmpsl
jns
out
jnp
ss
or
push
sub
xchg
jnp
xchg
adc
addl
inc
out
sbb
push
dec
xlat
and
add
cmp
inc
enter
jl
xor
cmc
neg
pushf
xchg
test
jae
stc
pop
fldl
iret
mov
sbb
push
leave
jo
xchg
fs
lret
mov
call
pop
pop
ss
repz
fs
je
pop
pushf
xchg
jbe
js
xor
adc
test
cli
sub
in
clc
push
push
cld
xchg
push
push
mov
sbb
rcrl
aad
dec
jne
imul
mov
aaa
das
aas
int
gs
sahf
push
hlt
dec
insb
ss
cmc
daa
dec
push
inc
lahf
ja
add
adc
dec
insb
or
imul
xor
lcall
jmp
fildl
pop
daa
push
cmp
push
adcb
in
faddl
and
mov
adc
sub
out
fidivrl
ret
xchg
sbb
cs
or
insb
sub
int
xor
jnp
add
das
aam
sub
jae
xor
push
lcall
jo
neg
cld
jle
mov
cs
outsl
repnz
and
call
mov
jmp
jnp
mov
mov
sub
das
fadd
mov
xor
or
cmovle
iret
cmc
xor
mov
addr16
test
fsubrs
mov
mov
daa
sub
jo
je
fwait
or
in
adc
lods
rcrb
fsubrs
movsl
leave
in
es
and
mov
call
jg
sbb
leave
shll
aad
fdivl
fimull
addb
xchg
int3
gs
bound
cmp
mov
js
push
sbbb
pop
dec
add
jne
cmp
aad
mov
push
iret
enter
dec
xchg
aaa
jge
js
sti
adc
out
lret
leave
insl
push
loop
xor
xor
clc
sti
dec
mov
stos
push
leave
movsb
loopne
pop
or
lods
or
ds
lods
lcall
mov
jle
jge
lahf
aad
popa
add
jg
sub
ficomps
scas
push
inc
sarb
leave
imul
mov
add
int
aaa
inc
adc
add
jne
dec
movb
divl
push
sub
in
aam
mov
fistpll
dec
ret
insl
or
sub
xchg
ss
and
or
sbb
sub
xchg
addl
mov
sti
sub
mov
mov
adcb
mov
xor
mov
jecxz
cmp
jg
cmpsl
cld
addr16
test
pop
push
ret
imul
push
dec
loop
and
xchg
decl
and
and
outsl
es
and
jmp
fwait
enter
xchg
mov
loop
fwait
std
movsb
push
mov
or
cmp
add
and
dec
iret
inc
cmp
jns
je
mov
jae
leave
in
test
mov
add
sahf
sbbb
push
lret
cltd
leave
mov
or
mov
je
xorl
fsubs
lret
sub
mov
mov
jl
cwtl
ret
cmp
dec
dec
push
enter
pop
mov
jne
int
mov
adcl
jge
rorb
jae
or
pushf
inc
dec
js
xor
dec
xchg
movsl
mov
add
int3
pop
inc
cli
call
cli
xchg
loop
jae
js
pop
movsl
out
movsb
push
test
jns
ss
fwait
or
cmp
cwtl
loopne
cmovo
rcr
call
movb
pushf
jnp
xlat
iret
or
cltd
call
in
hlt
push
inc
fmulp
adc
mov
xchg
popf
shrl
div
shlb
pop
adc
js
rorl
mov
loop
test
popf
lock
jg
cmp
mov
loopne
pop
scas
push
loopne
pop
sub
inc
jae
outsl
xor
fdivrs
sub
pop
fbstp
icebp
addr16
es
xor
jne
aaa
xor
adc
push
xlat
jbe
mov
cld
mov
pop
std
adc
aas
mov
dec
pop
xchg
clc
dec
in
scas
mov
fcomps
add
adc
popf
cltd
mov
in
inc
xor
test
inc
xchg
or
scas
dec
popa
subl
sub
mov
xor
mov
cmp
adc
adc
xor
lock
iret
xchg
into
mov
pop
icebp
dec
std
divb
in
cld
ljmp
unpcklps
loope
mov
lock
push
inc
rcll
dec
adc
sbb
jne
cltd
add
fldcw
scas
jae
loop
mov
inc
push
cli
dec
pusha
cmp
push
mov
pop
imul
fistl
gs
jge
or
jo
lods
xor
dec
dec
sahf
add
add
mov
cmpsb
frstor
jp
mov
push
and
sbb
rcrl
inc
loope
sbb
lea
xlat
cmp
repz
pop
rclb
sub
popa
inc
in
sub
and
mov
push
mov
jno
dec
addr16
push
cmp
jecxz
test
mov
or
cmpsb
sbb
xchg
pop
sbb
sbb
mov
sub
inc
pop
pop
test
mov
mov
loopne
jle
inc
inc
mov
and
xorb
cld
jle
movsl
mov
lods
imul
leave
outsl
imul
cmp
jns
xchg
cltd
adc
imul
xchg
xchg
mov
sarl
adcl
in
aaa
lods
and
insl
popa
adcl
pop
pop
shr
enter
pop
adc
sub
sbb
jns
pushf
push
hlt
jmp
add
ret
push
aam
in
mov
cmpsl
or
pop
sub
inc
sahf
inc
cmpsl
dec
xor
adc
js
pop
scas
pop
andl
jecxz
dec
test
or
test
data16
shr
call
jno
aam
fs
push
in
ret
dec
mov
push
in
and
jb
or
jo
or
inc
aam
mov
out
jg
and
pop
je
xchg
lea
pop
sahf
xchg
es
add
lcall
iret
mov
insb
mov
push
daa
adc
lahf
pop
jae
test
cli
adcb
jae
test
fisubs
ss
fidivs
insb
pusha
pop
mov
cmp
or
inc
nop
add
aad
add
loop
mov
loop
loop
dec
mov
sbb
jmp
in
sti
add
in
imul
mov
fisubrs
mov
mov
fucomp
in
mov
jne
dec
push
mov
iret
mov
in
jnp
out
jne
movsb
add
push
jmp
sti
mov
in
xor
mov
xor
cmc
xchg
aam
cli
int3
cmp
and
push
in
cs
lcall
add
push
inc
aad
and
ss
adc
test
mov
out
repz
cmp
adc
and
and
lcall
js
adc
sub
popf
xorl
stos
add
mov
outsb
jmp
xor
mov
xorl
aad
cltd
sbb
cmp
jbe
lahf
pop
mov
sti
shl
lahf
out
andb
sti
sub
stos
jbe
cwtl
xchg
daa
cli
mov
xchg
pop
cmc
fs
cmpsb
add
filds
dec
inc
mov
inc
loope
popf
mov
fidivl
jae
xchg
mov
inc
in
bound
pop
cwtl
jb
or
lcall
out
and
xchg
and
fmull
mov
clc
rolb
mov
cmp
push
test
imul
inc
popf
fcmovbe
push
lods
add
fucomip
push
jnp
push
insl
cmp
je
aaa
mov
adc
lea
loopne
xor
mov
push
cmp
mov
outsl
call
mov
cmp
or
sbb
scas
sbb
int
ret
push
inc
adc
dec
xor
pusha
jae
ret
fsubrl
lock
adc
scas
xor
sbb
stc
in
jbe
mov
jb
aaa
add
int3
sahf
insb
cmp
mov
ret
daa
mov
rolb
imul
inc
pop
jns
sahf
out
pop
sub
jne
mov
divb
int
test
ret
fbld
insl
gs
sub
daa
leave
xchg
push
lcall
dec
xor
inc
in
pop
repz
mov
sub
inc
ds
inc
jne
push
fisubs
push
cmp
mov
xchg
fwait
rcr
repz
mov
jmp
sbb
das
add
xor
shlb
add
aad
dec
xchg
cmpsb
jle
ja
test
ja
pop
mov
popa
das
pop
pop
pop
mov
int
testb
pop
out
aad
and
pop
mov
out
sbb
push
mov
test
or
push
mov
fists
pop
jne
add
pusha
iret
gs
pop
xchg
mov
dec
xor
sbb
leave
and
sub
push
xchg
adc
xor
xor
shl
dec
xchg
pop
in
and
or
and
mov
nop
das
and
xchg
mov
imul
mov
add
pextrw
dec
or
dec
ljmp
mov
fistl
sub
jns
push
ret
sbb
sti
movsl
scas
mov
xchg
and
mov
jl
inc
mov
cs
xchg
mov
cmp
and
or
add
notl
pop
cmpsb
mov
xchg
push
mov
mov
incl
jno
fs
cmp
cli
scas
outsb
pop
jg
ret
or
movsb
outsl
fstpl
mov
and
xchg
jp
jno
lcall
scas
stc
fsubrl
cld
and
push
popa
sarb
sbb
repz
cli
jo
and
dec
in
div
jl
shlb
push
js
pop
dec
xor
push
lods
and
in
sbb
cltd
xchg
pop
std
lods
sbb
in
and
roll
or
sahf
pushf
mov
scas
jno
iret
xchg
sub
bound
fbstp
and
jl
or
icebp
pop
fidivl
test
mov
aaa
push
in
loop
pop
jnp
roll
test
push
sub
xchg
rcrb
sub
and
ds
lods
fmulp
leave
popa
orb
pop
and
or
pop
sahf
loop
lret
mov
adcl
mov
cmc
lret
mov
mov
aam
push
pop
mov
jno
repnz
daa
jg
xchg
and
sahf
mov
arpl
jmp
and
adc
stos
dec
xchg
ret
push
movsl
dec
sbb
pop
adc
or
or
cld
dec
adc
aam
sub
lcall
or
call
gs
ret
push
pop
jge
adc
sub
sti
push
jnp
adcb
std
mov
rorl
icebp
xchg
dec
pop
test
pop
add
jbe
pop
push
and
or
insb
aad
or
pop
push
lret
push
push
sbb
sbb
out
fldenv
es
aaa
mov
jge
xchg
ja
bound
sbbb
sub
aam
mov
jbe,pt
imul
scas
and
jl
add
dec
cmp
inc
and
out
in
je
rcll
mov
sysexit
stos
push
int
pop
mov
scas
test
rcll
aam
xchg
adc
pop
pop
cmp
push
or
jo
mov
mov
mov
rorl
sub
repnz
int3
stos
rcr
out
test
push
pop
aad
mov
cwtl
push
mov
add
xor
mov
aam
dec
fsqrt
subb
xor
cmp
push
sti
jp
ficompl
jo
rcrl
cmp
jnp
pop
fidivl
sub
rorl
push
xchg
ljmp
std
inc
out
cld
inc
roll
pop
inc
dec
data16
jb
int3
dec
sbb
out
sbb
rcl
or
jmp
pop
adc
rorb
mov
jecxz
mov
ds
sbb
mov
cvtpi2ps
scas
call
cs
mov
xchg
das
xor
lret
dec
mov
clc
mov
add
xor
cmp
lods
mov
cmpsb
aam
add
outsl
lds
push
invd
cld
inc
xchg
jnp
mov
loopne
pop
lcall
mov
add
push
jecxz
push
arpl
sti
mov
sbbb
pop
adc
pop
in
pop
into
out
mov
loopne
push
pusha
call
or
add
add
inc
sub
frstor
sub
int
out
outsl
push
ja
push
mov
fcomps
and
lea
inc
pop
lea
xchg
sub
xor
ret
das
and
leave
mov
xlat
push
push
dec
xchg
popf
xor
mov
sti
push
jo
xlat
sbb
and
ficoms
fldl
pop
out
pop
sbb
std
shrl
inc
adc
adc
les
sbb
push
aad
sahf
dec
ja
or
mov
jo
pop
js
mov
pop
cmp
in
es
lock
push
bound
push
xchg
test
scas
mov
inc
mov
inc
in
jp
lds
inc
iret
mov
leave
push
fwait
mov
xchg
or
fsubl
cld
ss
movsl
pushf
and
add
pusha
testb
dec
idivb
jmp
frstor
adc
cmp
inc
xor
repnz
test
mov
cmp
imul
sarb
into
ficompl
pop
imul
xor
lret
mov
mov
jae
jb
fmuls
dec
fsubs
adc
ja
cmp
scas
sub
push
popa
mov
fistps
mov
dec
pop
cmp
or
out
int3
fisttps
mov
pop
mov
push
push
mov
push
and
insb
mov
pop
or
cli
stos
push
dec
dec
enter
jl
mov
stos
sbb
out
lods
ficoms
sbb
push
jp
mov
jecxz
mov
jg
cwtl
jae
sahf
mov
jp
stos
xchg
gs
jg
andl
pusha
push
fisubs
aas
out
push
cmp
mov
or
cld
xchg
lds
sub
jle
ja
push
lahf
stc
negb
outsb
test
add
rolb
outsb
dec
cld
cmp
ret
loope
frstor
add
mov
shlb
and
push
call
xor
mov
xchg
fdivrs
sub
test
sub
cmpsl
xor
pop
out
sahf
loopne
int3
ja
pop
lret
into
punpckhdq
icebp
loope
arpl
cmp
fsubrl
sbb
icebp
cmpl
sarb
add
out
add
inc
dec
cmp
inc
dec
aas
rcl
xor
dec
xchg
stc
shll
inc
mull
gs
rorb
fsts
mov
xchg
xchg
sbb
shrb
int
mov
cmpsl
cmp
ja
addl
fdivs
sti
jnp
repz
mov
outsl
mov
movsb
add
push
jmp
push
pushf
ficomps
loope
jmp
sbb
imul
mov
js
mov
push
jnp
mov
out
in
cmpb
dec
es
test
mov
call
sub
dec
mov
out
adc
rcrb
out
lods
or
leave
xchg
lods
popa
test
aaa
adc
fldenv
fucom
mov
inc
cmc
mov
mov
pop
inc
lds
inc
inc
mov
jmp
lock
stos
cmp
xchg
sar
or
repz
orl
lods
popf
sub
in
daa
test
pop
xchg
aam
inc
jne
adc
inc
push
add
sbb
lock
sub
sub
in
sbb
jle
pop
dec
dec
add
rcr
and
jmp
mov
fistpl
test
cmpb
mov
jmp
sub
in
and
jg
mov
lret
pop
or
xor
outsl
js
sbb
sbb
aas
and
icebp
sbb
fcmovnbe
cli
je
mov
mov
mov
inc
inc
inc
adc
pop
lcall
mov
push
and
scas
decl
xchg
cmp
sarl
mov
add
data16
xchg
xadd
movsb
sbb
std
rolb
dec
fs
xor
mov
stos
and
jnp
mull
fcompl
mov
jne
pop
push
movsb
idivb
addr16
jg
arpl
ret
popa
imul
insl
out
dec
cs
mov
lahf
out
xlat
adc
push
inc
fcomi
out
popa
mov
dec
xor
sbb
call
in
aaa
jmp
lret
xor
pop
testl
or
push
and
jmp
push
push
dec
out
outsl
mov
ljmp
pushf
iret
aam
daa
and
xchg
loop
ret
mov
mov
repnz
imul
dec
pusha
mov
or
push
stos
in
push
rcl
mov
inc
mov
divb
pusha
pop
jno
mov
sahf
addr16
ss
fstp
jnp
cmp
add
adc
xor
cmp
cmc
push
mov
mov
xchg
or
imul
cli
loope
and
mov
mov
rcll
loopne
out
add
pop
jo
or
jge
mov
mov
jns
repz
mov
push
aam
clc
pop
pop
inc
outsb
push
jg
sub
hlt
sbb
adcb
sbb
mov
shr
or
subl
adc
or
addb
or
addr16
ljmp
lods
jecxz
ss
mov
pop
lea
nop
cmp
hlt
lods
outsl
fnsave
outsl
mov
mov
iret
aas
xor
fdivr
adc
in
lcall
rorb
in
xor
out
add
xor
pop
push
sar
mov
int
in
inc
out
scas
pop
dec
popf
adc
mov
add
ljmp
call
aam
out
push
add
shll
xor
xor
aas
or
inc
ret
in
mov
hlt
pop
sbbb
and
rorl
cmp
xchg
mov
inc
push
push
mov
fcmovnb
daa
jmp
test
mov
repnz
lods
mov
fdivl
cltd
jae
push
in
mov
aaa
push
int3
outsl
mov
lahf
lcall
inc
and
out
in
pop
adc
loop
lret
or
mov
cmp
push
jmp
jbe
test
iret
js
xor
not
lcall
inc
out
ds
loop
push
xchg
mov
and
in
aad
add
xchg
pop
add
cmp
add
cwtl
ja
lock
dec
in
std
cmp
push
dec
xchg
ret
adc
ja
arpl
mov
repnz
movsb
jne
in
hlt
mov
enter
mov
mov
dec
outsb
xor
ds
bound
pop
adc
xchg
sbb
int
add
mov
adc
xchg
stos
push
iret
adc
mov
mov
cmc
mov
negl
add
push
xor
outsb
repnz
test
pop
cmpl
dec
jno
stos
dec
mov
repz
mov
cld
shll
jns
pop
lods
test
jno
xor
test
cmp
inc
pusha
or
jmp
outsl
ret
jle
clc
divb
or
pop
in
sbb
decl
xchg
repnz
in
aam
mov
xchg
testl
rolb
push
and
sub
xor
jecxz
ds
jmp
mov
cli
scas
cmp
call
fbld
pop
insb
cmp
jp
lods
rclb
pop
xchg
add
fisttps
add
pop
mov
cmp
das
dec
fstl
out
or
adc
push
sti
and
les
popf
test
idivl
pop
inc
and
xchg
negb
mov
arpl
push
movsl
repnz
xchg
lock
out
add
fdivrl
xchg
sarb
mov
cli
jb
sbb
jp
stos
sbb
push
mov
xor
insl
hlt
xor
mov
pushf
push
dec
jecxz
push
sahf
pusha
cmp
lret
fildl
lcall
inc
adc
inc
and
fsubl
add
ds
daa
push
pop
aam
dec
imul
lods
xchg
nop
scas
or
sbb
bnd
xchg
inc
insb
std
ret
rorb
jns
mov
sub
scas
mov
xchg
mov
adc
xor
rcrl
cmp
sub
mov
dec
repnz
dec
fadd
lret
sub
shrb
popa
dec
or
sub
xchg
cwtl
mov
xchg
or
xchg
in
mov
popa
mov
xlat
push
jb
inc
insl
in
fwait
pop
dec
je
or
dec
lea
lahf
cltd
insb
xor
mov
mov
lock
pop
xor
stos
push
stos
pop
sbb
push
rorl
jno
ds
aam
iret
sbb
xlat
std
movzbl
pop
adc
push
je
push
dec
ja
xchg
jb
iret
jmp
dec
outsb
cwtl
cmp
or
xor
out
shr
or
call
das
loopne
scas
mov
aam
push
jmp
repnz
sbbb
push
outsb
mulb
sarl
jmp
dec
int
idiv
inc
adc
and
and
push
shrl
imul
std
lret
jp
mov
lods
fdivrl
dec
daa
pop
ss
push
jmp
dec
cmp
mov
test
push
pop
mov
sbb
inc
or
sub
adc
in
les
stos
addr16
xchg
enter
es
and
ljmp
mov
add
or
push
mov
mov
lea
sub
daa
aad
dec
dec
aad
inc
xlat
mov
mov
sbbb
lea
loopew
cmp
mov
xchg
and
mov
mov
xor
addr16
push
pop
cmp
or
pop
scas
sub
call
das
mov
cli
dec
mov
push
rcll
xchg
lcall
push
and
lods
loop
push
push
and
movsl
mov
inc
into
orl
ret
cmpb
jmpw
push
in
mov
mov
ja
mov
add
shrb
les
imul
shlb
xchg
pop
sub
dec
daa
sub
xchg
add
dec
aad
loop
ljmp
xor
fnstcw
test
incb
pop
adc
push
cs
mov
ret
out
loop
lock
out
cmp
xchg
fisubl
push
insl
dec
mov
es
add
push
cmp
or
jb
adc
sub
adc
sti
dec
test
aam
push
popa
sbb
xchg
inc
jb
ljmp
jg
stos
shll
mov
xor
mov
fstl
push
pop
xor
mov
mov
xchg
mov
or
cmp
dec
lds
fs
dec
hlt
push
xlat
mov
add
mov
push
sbb
gs
add
ds
call
sarl
les
jge
cmp
in
mov
mov
icebp
stos
divb
movsb
and
les
sti
jns
pop
or
into
inc
loopne
push
mov
stos
ds
lret
out
inc
cmp
push
dec
and
in
jecxz
lcall
pop
ds
pop
fnstenv
inc
sti
pop
inc
fistps
movsb
pop
aam
jle
cmp
dec
inc
lret
mov
adc
cmpsb
lret
shll
in
aas
shrb
js
push
or
pop
test
pusha
mov
lods
ficomps
int
xor
adc
out
xchg
lret
in
fsubrp
mov
xor
adc
fstps
pop
inc
cli
test
lcall
cmc
aam
cmpsl
lret
adc
push
jecxz
int
inc
out
mov
mov
bswap
push
lods
sbbb
and
int3
fldl
and
inc
popf
adc
roll
test
mov
and
jg
pop
dec
popf
xor
mov
mov
stos
jb
push
cmpl
sbb
test
sub
stos
mov
pop
push
mov
jecxz
dec
loope
sub
mov
sub
outsb
je
mov
imul
push
mov
bswap
fdivrl
push
mov
ret
add
rorb
cmp
mov
loop
gs
or
pop
sbb
movl
insl
add
popa
ret
loop
add
std
cltd
mov
mov
cli
mov
movapd
jo
dec
mov
hlt
cmp
or
aad
cmp
cmpsb
jl
jne
jnp
mov
jecxz
cmp
jb
into
lahf
add
je
cwtl
push
add
adc
ror
or
mov
filds
push
xlat
scas
lods
add
xchg
js
loop
aam
pop
cld
pusha
xchg
aaa
cli
xchg
push
jnp
sbb
mov
ret
cmp
lret
rcll
test
jmp
lret
into
cli
cmpsl
pop
lods
xchg
push
adc
pushf
stos
xchg
stos
mov
mov
cmc
xchg
sbb
out
ljmp
ficompl
scas
jmp
mov
mov
flds
jae
inc
jmp
mov
adc
imul
cmp
hlt
pop
inc
out
add
sbb
decl
lret
out
dec
ret
cld
iret
in
mov
pop
jl
dec
fidivrs
dec
dec
outsl
scas
xchg
movsb
sub
daa
js
pop
pop
push
lcall
jb
pop
aas
xchg
inc
fcmovb
rclb
out
xchg
or
shr
push
jl
dec
jecxz
stos
in
cli
outsb
hlt
inc
lret
enter
mov
fdivl
stc
jno
fdivr
pop
sub
mov
aam
out
mov
pop
pop
insb
mov
fisttpl
sbb
shlb
xor
lret
jp
cmp
mov
pop
daa
mov
mov
ljmp
mov
adc
popa
imul
cld
and
icebp
mov
cmpsb
xor
leave
aam
mov
pop
ret
and
or
cmpsl
mov
stc
adc
icebp
mov
inc
pop
ds
push
pop
add
add
scas
movsb
inc
insb
or
lock
push
outsl
add
lea
lods
sub
xchg
les
sbb
inc
xor
push
sub
or
or
mov
push
ss
ja
jecxz
push
sbb
xchg
adc
int3
pop
xlat
data16
insb
les
xchg
pop
mov
dec
out
mov
les
xchg
dec
test
sub
ja
test
jo
mov
imul
add
adc
notl
jo
mov
clc
sbb
sbb
sub
xchg
out
rcl
jno
mov
mov
xchg
das
jg
leave
xor
cli
cvtpi2ps
fldt
push
dec
ja
fiaddl
mov
pop
ss
test
xorl
jecxz
rcl
add
push
push
test
mov
mov
in
cmp
jae
mov
push
add
dec
ficomps
add
mov
or
into
movsb
les
fldcw
adc
aas
sub
pop
push
clc
loop
bound
and
loope
mov
les
sbb
lcall
add
cs
test
lret
sahf
addb
or
adc
xor
xor
icebp
bound
jns
or
mov
shl
test
xorl
push
add
out
aad
cmpsl
sbb
jno
aam
ds
das
pop
xor
insb
outsb
repz
pop
fiadds
push
call
mov
pop
and
fidivl
add
data16
push
mov
sar
sub
scas
cmp
mov
jle
push
push
add
dec
sarb
clc
scas
iret
ret
outsl
and
pop
xchg
mov
or
mov
inc
mov
nop
xchg
lods
sub
xor
xlat
sub
stos
pop
ret
mov
xchg
cmc
icebp
shlb
lea
dec
stc
mov
testl
mov
and
cmp
or
test
lea
stos
inc
adc
adc
lret
inc
or
repnz
popa
and
in
ss
ds
pop
fsubs
sbb
cli
xchg
xor
dec
notb
mov
add
inc
mov
shl
jcxz
addr16
xchg
jmp
dec
stos
pop
je
ja
jno
in
jne
std
fadd
cmp
pop
mov
xor
and
movsb
pop
pop
xchg
adc
xor
inc
adc
xchg
into
in
jecxz
std
rcrb
lock
nop
xchg
adc
inc
out
jmp
add
jl,pn
lods
inc
scas
ja
and
rcr
popf
js
push
inc
jmp
ljmp
lea
and
fwait
or
movsl
mov
cmp
dec
pop
pushf
mov
cwtl
call
out
inc
sbb
std
lds
test
rcll
pop
out
mov
xor
in
movsl
sbb
cwtl
pop
imul
mov
mov
mov
std
scas
insb
dec
hlt
daa
dec
mov
aad
into
add
cmpsb
jns
or
push
imul
jge
or
icebp
fsubp
enter
rorb
cmp
xchg
jmp
mov
inc
jns
cmpsl
sbb
xchg
cltd
push
dec
out
adc
mov
lods
mov
pop
test
xchg
inc
repz
and
sub
dec
or
aas
popa
and
int
mov
loop
push
adcl
pop
lcall
int3
jne
stc
imulb
sub
add
popl
jbe
pop
pop
cmp
dec
ret
jp
testb
into
cs
int
imulb
adc
xlat
sub
and
das
mov
popa
roll
xor
mov
dec
mov
mov
sbb
xor
mov
in
cltd
sbb
push
mov
lods
or
ret
add
js
push
mov
cmpsb
and
outsb
idivb
movsb
ret
test
call
mov
sub
out
mov
mov
sub
test
xor
xor
pop
imul
out
rcll
jge
into
call
xchg
jmp
pusha
andl
pop
les
int
ret
xor
pop
lcall
addb
aas
imul
jge
mov
lret
sbb
pushf
dec
jl
movsb
addr16
or
xor
push
or
push
lret
push
sub
and
lods
adc
cmp
testl
cs
mov
push
inc
fdivrl
cmpsb
imul
mov
jae
jp
push
inc
jg
clc
shll
fiaddl
cld
call
inc
adc
fisubrs
or
int3
scas
ss
cwtl
inc
mov
xor
fdivrs
mov
out
shlb
mov
mov
xchg
fmull
jnp
fisubs
inc
shr
js
and
cmpsl
sub
fcoms
fcmove
iret
xchg
jns
lret
lea
mov
loop
les
pop
mov
out
push
rclb
pop
fnstcw
inc
test
stos
cmp
xorb
rclb
cmc
or
out
and
shr
int
cld
gs
add
push
addr16
mov
mov
dec
sub
lret
and
icebp
loop
dec
pop
xlat
mov
or
lods
xchg
vunpcklps
sub
mov
push
pusha
jb
fs
pop
decb
lods
sbb
nop
ss
out
aad
out
cmpsb
lret
addb
mov
gs
das
pop
mov
jle
sub
hlt
jle
daa
dec
repz
jg
pop
xor
lock
mov
xor
jb
test
push
imul
aad
cmc
push
lea
adc
mov
sbb
adc
push
sbb
insl
dec
rclb
jnp
mov
sbb
lahf
mov
test
loop,pt
aas
cmpl
ja
cmp
out
mov
cltd
xor
xlat
mov
dec
pop
sub
dec
cwtl
inc
sbbb
lret
xchg
push
sbb
repnz
push
movsl
cli
test
aad
ljmp
jb
subl
mov
data16
xchg
sub
popa
out
cld
jb
neg
dec
aaa
jle
fidivl
xor
add
push
mov
dec
fcmovu
push
pop
scas
fildl
cmp
outsb
xor
pop
cmp
cmp
cli
orl
es
sbb
outsl
adc
mov
mov
mov
popf
jp
test
jnp
sub
inc
sti
aam
jne
or
out
jecxz
push
out
push
loope
push
rol
insb
push
adc
test
mov
jbe
loope
push
push
sub
leave
sarb
push
or
pop
or
inc
enter
xchg
ss
cmc
sub
test
jecxz
lcall
mov
jno
stc
por
ret
fwait
jle
lock
out
and
xchg
fisttpl
inc
xchg
push
je
cld
int3
test
or
imul
lods
inc
jne
lret
aad
mov
sbb
ds
jb
xlat
pop
and
cli
pinsrw
push
xlat
pop
aad
add
push
int
inc
stos
ljmp
mov
push
sub
stos
loop
push
jmp
int
rcrb
aaa
or
fisubs
adc
std
sbb
lahf
jbe
xchg
pop
icebp
jmp
mov
mov
mov
xchg
add
or
nop
adc
xchg
mov
notb
movsl
or
inc
fnstsw
dec
sbb
xorps
xchg
inc
loope
fst
xor
cmp
sbb
sub
scas
jb
cmp
aaa
jmp
int
outsl
mov
insb
test
cmp
cli
shr
jmp
ficompl
insb
jl
ficoml
mov
xchg
sti
inc
adc
push
arpl
sbb
int
add
arpl
lock
inc
repz
jl
inc
vcvtpd2ps
lcall
or
or
or
mov
and
ljmp
xlat
addb
adc
stos
fcompl
dec
xchg
sbb
mov
push
xchg
adc
std
xor
outsl
lcall
push
mov
bound
sbbl
sub
mov
popa
push
xchg
mov
mov
test
xchg
jb
push
jle
dec
add
mov
sub
cmp
clc
pusha
mov
popf
outsl
ja
cmpsl
arpl
or
ret
das
mov
popa
or
bound
adc
fstl
pushaw
xchg
fstl
mov
jecxz
adcb
dec
in
mov
adc
lret
mov
mov
add
outsb
out
xchg
outsb
inc
stos
adc
orl
dec
arpl
cmpsl
lret
add
xchg
je
leave
add
imul
mov
stos
aad
in
lock
add
or
jp
and
cmp
cld
dec
hlt
ret
push
cmp
inc
sub
xchg
jmp
test
scas
inc
jbe
or
cs
ljmp
pop
iret
shll
cmp
xor
stos
sbb
int
sbb
xlat
sbb
cmc
mov
lods
enter
and
cmp
jno
mov
aam
mov
mov
add
xchg
adc
in
mov
testl
sbb
xchg
les
xchg
inc
xor
sub
es
shrb
jns
sbb
xchg
cmpl
pop
lods
sahf
mov
dec
aad
inc
push
dec
or
xor
scas
pop
dec
pop
fstpl
mov
sub
adc
xor
shl
scas
jl
idivl
shl
mov
cmpl
fwait
in
xchg
out
push
ljmp
fisubrl
mov
movsb
push
dec
add
mov
push
xor
std
fistl
xchg
pop
pop
inc
xchg
fdivl
loope
pop
les
orb
das
pop
inc
sti
aam
xchg
clc
fsts
jle
fldenv
ljmp
mov
subb
xor
inc
rol
das
xchg
sbb
dec
bound
fwait
jecxz
nop
in
ror
jmp
sub
mov
sub
sahf
xchg
pop
lds
jmp
mul
sarb
aaa
outsl
subb
add
in
aam
outsl
ror
aas
stc
mov
mov
mov
cmpsl
stos
clc
nop
movsb
test
popl
movsl
add
mov
sub
insb
inc
out
andb
aad
ss
jge
xchg
lods
xor
jae
daa
lea
cmp
cmc
sub
jmp
enter
ljmp
sub
dec
leave
mov
loope
push
jge
and
adc
pop
mov
and
lods
cmp
sbb
out
pop
sbb
js
adc
hlt
mov
mov
or
push
fcomi
loopne
loope
outsb
inc
movsb
and
loop
into
movsl
cwtl
jns
insl
mov
cmpsl
int
fwait
sti
loopne
testl
int
or
fldt
pop
scas
mov
mov
shlb
add
test
movb
outsl
ret
out
add
outsl
int
ds
out
sub
inc
push
ljmp
mov
inc
repnz
pop
mulb
pop
fwait
pop
std
pop
inc
push
push
inc
adc
add
jno
imul
pop
mov
mov
std
je
and
cld
push
fwait
mov
out
cmp
cmp
sub
das
inc
cmp
jle
push
testb
mov
fs
bound
aam
jge
xor
in
push
daa
mov
dec
push
mov
js
movsl
test
cld
mov
stos
push
cmp
xchg
inc
dec
mov
hlt
jmp
test
push
mov
jecxz
adcb
es
cmc
and
scas
xorl
and
imul
cld
sbb
xlat
push
cld
test
add
mov
arpl
push
sub
cli
idiv
jmp
mov
clc
jmp
dec
lcall
dec
lds
or
xchg
bnd
call
shrb
mov
shll
push
loopne
mov
xor
lret
jl
add
inc
or
fnstenv
push
insl
lods
das
cmp
sbb
or
rolb
inc
stc
daa
mov
aam
std
test
jmp
mov
and
adcb
loop
mov
movsl
sub
add
loope
and
xchg
add
mov
inc
jnp
mov
rcl
push
jae
testl
push
incb
pop
xor
in
push
mov
addb
aam
and
ficoml
fisttps
sbb
or
lods
bound
pop
xchg
xor
int
mov
pushf
push
and
sbb
jecxz
sub
cmp
or
jb
jbe
push
xchg
cmp
std
pop
addr16
pop
call
inc
daa
cmpsl
and
loop
outsl
lods
popa
call
dec
adc
and
mov
mov
cmp
aad
mov
ss
popa
dec
xchg
test
repz
push
mov
fnstcw
sub
popf
pop
pop
ja
mov
aad
dec
in
fsub
lret
mov
ljmp
test
pop
inc
add
jb
jge
insl
mov
fldl
adc
imul
and
or
inc
in
rep
jnp
ja
aam
add
call
iret
xchg
pop
sbb
xchg
jge
dec
cmp
scas
push
cmp
jmp
cmpsl
sub
test
sub
ret
jb
jne
lods
jmp
add
lock
ss
inc
mov
push
inc
mov
ja
jle
divl
mov
fistps
pop
iret
mov
cmpsb
sahf
ss
xchg
repnz
clc
mov
insl
cmp
mov
sub
data16
subb
cltd
mov
aad
cmp
inc
jnp
out
push
nop
call
add
divw
es
or
push
sub
xlat
fadds
loope
leave
inc
dec
push
sub
je
jo
sti
add
je
int3
mov
cmp
sub
pop
out
andl
xor
dec
xor
jbe
stos
out
mov
das
mov
xor
xor
add
insl
mov
lods
mov
in
stos
es
mov
and
xchg
jnp
cmpb
mov
jno
sbb
into
enter
cmp
cli
xlat
or
pop
dec
jg
cld
sarb
pop
xchg
mov
test
mov
inc
std
or
lea
xchg
xchg
and
popa
es
arpl
cmp
pushf
mov
xor
and
push
lds
pop
fwait
mov
adc
inc
dec
addr16
cld
cli
repnz
jo
aam
sub
dec
icebp
je
arpl
jnp
test
xor
ljmp
mov
rorl
push
outsb
pop
adc
dec
rcrl
fstps
jno
dec
add
xor
arpl
imul
mov
mov
shr
pop
xor
hlt
inc
adc
mov
call
push
fistpl
cmp
sbb
mov
mov
inc
or
mov
jge
and
jp
xchg
mov
mov
lret
f2xm1
mov
int3
mov
mov
dec
pop
fbld
divl
sub
testl
cmpsb
mov
cmp
ljmp
pop
leave
shrl
shlb
jl
xchg
sub
cmp
leave
or
test
inc
jp
cld
lea
adc
push
fistpll
push
in
jns
pop
arpl
pushf
ss
std
sub
inc
cli
mov
enter
push
dec
cmpsl
sbb
lock
mov
insb
push
insb
loop
mov
lcall
fldl
dec
lods
and
fwait
cmp
popf
cs
pop
sti
pop
lret
aaa
ret
jo
mov
xchg
cmp
mov
xchg
fnsave
js
or
pop
fbld
bound
outsb
cmc
ja
and
fildl
loopne
scas
pusha
pop
out
xchg
pop
pop
pushf
icebp
sbb
bound
pop
shrd
ds
pop
xor
pop
sbb
push
push
xchg
inc
lahf
mov
add
popf
and
add
pop
dec
jb
and
xchg
mov
mov
fisubl
movsl
jle
ficoms
adc
movsb
cs
pop
mov
pop
call
sub
push
push
test
scas
cmc
out
into
cli
ss
push
jno
mov
addr16
in
or
sbb
loope
mov
sbb
xchg
jmp
into
iret
fcomp
decl
xchg
repnz
aas
rol
pop
xchg
sub
stos
jbe
test
pop
pop
jg
sahf
xchg
jno
cli
gs
inc
test
clc
faddl
cwtl
lcall
xchg
test
mov
push
mov
add
cmp
testl
xchg
cs
lock
xchg
dec
mov
jb
lcall
jg
dec
adc
mov
xor
jecxz
mov
dec
lods
push
fwait
pusha
fldenv
fldt
ffree
imul
mov
pop
jp
mov
jno
cmp
inc
mov
test
movsb
push
xor
xchg
lds
fidivl
xchg
push
jne
adcb
mov
mov
adc
adc
mov
into
dec
insl
mov
in
arpl
aaa
out
mov
xor
int3
repz
push
mov
fsubrp
imul
mov
aam
sbb
imul
lret
sbb
add
cltd
adc
mov
stos
pusha
sub
mov
xor
lret
cmp
test
dec
test
into
arpl
pop
xchg
repnz
and
jo
inc
insb
sbb
dec
pop
or
imul
imul
insb
and
mov
mov
pop
test
popl
test
mov
and
add
inc
ja
loope
jge
jmp
scas
aaa
cmc
jle
stos
into
out
mov
adcb
bts
scas
int3
leave
out
popa
cld
and
push
dec
mov
sbb
adc
aad
clc
lea
push
mov
das
in
lret
mov
pusha
into
fcompl
mov
xchg
add
xor
sarb
mov
jl
sub
into
ja
push
jnp
cmp
call
adcb
push
test
pop
leave
xchg
fs
lcall
cmp
sub
xchg
clc
jns
mov
adc
int3
icebp
jl
sbb
pop
xor
fdivrs
mov
testb
ljmp
hlt
mov
cmp
or
xor
subl
subl
push
mov
lret
mov
jae
arpl
mov
outsl
inc
xor
js
rcrb
es
jl
orl
lea
idivl
test
xchg
in
push
popa
sbb
add
out
push
in
jno
imul
add
mov
mov
push
sbb
cs
sub
mov
mov
mov
stos
adc
iret
and
insl
cmp
mov
shl
lds
lcall
test
test
hlt
test
mov
sub
xchg
or
mov
cmpsb
xchg
mov
ljmp
int
clc
call
mov
es
or
sub
push
xchg
mov
push
or
test
std
jmp
mov
cmp
stos
hlt
ret
and
add
dec
mov
add
testb
mov
aam
sbb
insl
jle
xor
or
and
xchg
mov
push
pop
arpl
movsl
mov
xor
lahf
paddusw
lds
lock
pop
mov
xor
sub
jo
cmpsl
sub
jg
jbe
mov
sbb
aaa
gs
pop
fadds
mov
pop
cmp
aad
rcrb
cmp
lret
xlat
repnz
fmuls
adc
xchg
mov
xchg
mov
mov
repz
outsl
movsl
mov
sub
add
mov
mov
and
enter
push
das
ljmp
sbb
subl
ret
cmp
test
jl
cmp
shlb
mov
rolb
insl
ret
mov
sub
and
call
push
mov
shrb
inc
mov
xchg
imul
dec
mov
fs
pop
stos
lds
push
jle
or
xor
std
add
pop
cmc
test
add
dec
jne
push
fwait
loopne
movsl
loop
sbb
sub
ds
enter
mov
popl
adc
adc
xchg
out
cmp
stos
test
cmc
into
scas
dec
call
cmp
je
mov
vmread
cmp
clc
in
cmpsl
pop
ja
fistpll
fs
jmp
mov
test
inc
je
sbb
test
shrb
add
push
push
sub
inc
dec
sub
cmp
sar
cmp
and
sub
in
int
stc
pushf
fistpll
dec
push
fmul
mov
nop
mov
iret
insl
cli
mov
xor
daa
add
inc
jne
dec
fs
or
xor
pop
sti
cmpsl
pop
jns
jl
inc
js
adc
aaa
fldpi
xlat
cwtl
push
and
xchg
call
int
sbb
pop
pop
mov
pop
notb
sbb
or
inc
insl
jno
jl
xlat
xor
out
mov
add
mov
mov
mov
into
sub
repnz
out
icebp
add
lea
or
fisubs
xchg
mov
fsts
mov
dec
arpl
jne
out
xchg
dec
mov
fiadds
mov
mov
stos
je
jbe
int
add
xor
gs
testb
fsubr
loope
xor
cs
xor
mov
fidivrl
rorb
or
stos
mov
cld
jl
sahf
fwait
ljmp
es
lcall
xchg
jns
aaa
mov
jecxz
jl
mov
arpl
add
adc
push
add
xor
fisttps
lahf
lahf
int
push
adc
out
adc
rcrb
pop
mov
sbb
lds
cld
sbb
loopne
jg
push
sub
cmp
cld
lock
jae
xchg
sbb
lock
pop
pop
ss
xor
fiadds
push
fs
adc
sbb
scas
mov
lahf
mov
add
cmp
out
popf
into
out
push
or
rorb
push
push
aam
xchg
ds
add
sbb
in
bound
mov
loopne
into
inc
out
test
lea
xchg
cmp
pop
push
fs
pusha
jae
cmc
jecxz
add
jle
iret
mov
cltd
push
rcll
and
mov
push
pop
cmp
rorl
mov
xor
inc
cmc
jo
mov
cmc
out
or
hlt
xor
inc
cltd
pmullw
ljmp
push
sbb
sbb
rolb
std
repz
js
paddw
mov
adc
cli
jbe
stc
pop
xchg
dec
dec
inc
xchg
dec
hlt
mov
lock
dec
or
jns
je
mov
lcall
out
mov
mov
fdivrl
imul
loop
and
mov
mov
clc
shll
or
mov
fwait
addb
pop
adc
sub
pop
les
sub
adc
sub
arpl
repnz
adc
enter
sub
mov
mov
daa
xlat
xchg
les
in
lcall
mov
je
mov
out
dec
repz
sub
xor
adc
int3
clc
hlt
loop
loop
add
ret
add
rclb
int
jbe
repnz
loop
lret
addb
jle
mov
test
adc
call
push
aad
fdivs
xor
cmp
dec
mov
or
fldenv
test
mov
mov
ja
xchg
mov
lahf
cmpsb
dec
mov
cmpsl
mov
sub
xor
ss
insb
mov
nop
add
adc
xorl
sub
in
dec
test
lahf
iret
rcrl
mov
das
xor
and
bound
xchg
sbb
cmpsb
dec
pop
fimuls
pop
push
sbb
xlat
ss
add
mov
mov
in
jl
data16
divb
xor
fldt
xchg
fstpl
sbb
loope
test
enter
nop
ret
xchg
lock
mov
lock
imul
lret
xor
hlt
rorb
mov
or
ret
adc
or
sub
mov
xchg
add
loopne
and
pop
mov
adc
dec
das
std
mov
or
loope
lods
arpl
sbb
mov
scas
mov
mov
pop
shrb
popa
cltd
add
stos
rcrb
sti
sub
pop
hlt
ss
or
mov
call
pop
cmp
mov
sub
popl
aam
jl
in
cli
lret
sarl
mov
idivl
push
andb
loope
inc
adc
scas
gs
jge
or
test
and
cmp
jge
push
jecxz
cmp
das
inc
mov
sahf
inc
mov
movsl
pop
push
test
xchg
addr16
dec
sub
in
pop
inc
cwtl
xchg
lock
cmp
mov
out
push
hlt
pop
sub
les
mov
sbb
mov
in
sub
mov
stc
mov
xchg
popf
icebp
sbb
mov
or
popa
add
cmp
out
aas
fs
jns
xchg
jo
out
mov
jns
adc
cmp
cmpsl
add
mov
ffree
mov
sub
mov
fadd
jae
aas
pop
jns
sub
and
popf
add
inc
and
dec
fsin
dec
pop
pop
lea
dec
mov
loopne
movsl
mov
jecxz
lock
aam
pushf
xor
pop
and
mov
cmp
add
xchg
rcll
lahf
iret
nop
cmp
lds
stos
clc
iret
sub
xchg
lock
ficompl
aaa
dec
arpl
aad
cmp
or
push
shlb
std
cmp
xchg
push
in
jo
pop
pop
fcmovu
mov
stos
xor
outsb
mov
loope
and
cmp
daa
mov
adc
sub
xchg
jae
inc
adc
sbb
pop
je
inc
imul
xchg
inc
jbe
inc
out
jle
push
xchg
mov
mov
ret
push
sti
xchg
dec
aaa
gs
lret
cmp
inc
clc
dec
stos
mov
in
in
mov
mov
jnp
test
jecxz
and
movsl
jo
dec
sbb
in
add
and
fisubl
rcrl
ret
cmp
mov
jmp
cmp
jb
mov
cmp
dec
lods
and
icebp
lea
push
jb
lock
loope
in
mov
push
out
pop
dec
and
les
mov
mov
pop
fsubrs
stos
sbb
mov
jmp
outsb
faddp
rorb
sarb
push
pop
xchg
add
fdiv
imull
dec
jle
dec
testl
mov
dec
stos
ss
out
js
or
sub
or
inc
stc
ret
fcomp
scas
icebp
push
dec
sub
push
out
push
or
xchg
fs
pop
pop
mov
call
jno
xchg
and
pop
pop
push
fcmovbe
mov
dec
dec
or
or
movsb
push
scas
xor
and
les
sbb
repz
ja
js
jne
mov
jno
fisubrs
fs
and
sbb
pop
dec
lods
mov
dec
lcall
outsl
push
xchg
test
cmp
adcb
add
mov
pop
sub
mov
call
dec
sub
mov
mov
pop
les
lret
jnp
adc
mov
into
call
call
sbb
push
xchg
xor
andb
dec
push
or
pusha
repz
je
push
cld
outsl
repz
mov
push
jne
movsb
xchg
mov
jecxz
fsubrs
jle
adc
jbe
nop
repnz
and
and
loop
pop
jg
fistl
mov
push
jae
lea
ret
adc
pop
in
jecxz
aam
frstor
mov
mov
mov
std
mov
jg
loop
dec
pop
xchg
push
lcall
iret
mov
inc
data16
ja
adcb
iret
xchg
in
dec
jo
lcall
mov
xor
insb
or
mov
push
fmuls
add
fwait
adc
ret
push
rorb
dec
fidivl
cmpsb
inc
push
bnd
mov
cmp
loopne
jb
jns
lahf
imul
push
adcb
sbb
xchg
scas
sbb
jle
mov
clc
mov
xor
sti
add
adc
out
inc
push
leave
outsb
int
pop
aad
int3
sub
inc
shlb
pop
out
push
sub
add
or
inc
push
cltd
xor
sti
inc
push
xchg
pop
in
std
mov
ds
jne
decb
imul
cmp
mov
mov
mov
mov
jmp
testb
push
sbb
mov
dec
clc
lea
loope
push
or
test
pusha
das
pop
adc
xor
or
cmp
sub
xchg
add
test
in
fucomp
rorl
lret
lea
in
push
xchg
xor
jb
push
mov
jl
mov
hlt
xchg
jecxz
inc
adc
testb
or
lret
xchg
and
jl
xor
pop
cmpsl
mov
mov
mov
and
popl
movsl
push
jno
and
leave
mov
movsb
rcr
repz
scas
fisttps
rcr
icebp
sahf
push
faddl
lcall
jmp
xchg
sahf
or
hlt
sub
outsb
leave
dec
fbld
sbb
adc
mov
aaa
stos
mov
mov
es
jbe
sub
mull
outsb
jge
jl
sbb
clc
loop
sarl
lods
dec
xor
iret
insl
and
jge
leave
adc
notl
test
mov
inc
xor
xor
xlat
and
roll
add
xchg
fisubrl
sbb
sub
add
mov
fucomi
jo
pop
in
push
or
mov
mov
jmp
scas
cmpsb
addr16
or
xor
mov
sub
xor
test
into
inc
cltd
aam
adc
or
jae
call
in
stc
adc
xor
inc
shlb
fistl
pop
adc
jmp
mov
fdivs
in
or
lret
pop
lods
cmp
inc
and
xchg
adc
aad
dec
cmpxchg
bound
out
sbb
add
sub
pop
add
xor
fucom
addr16
popl
cwtl
jnp
popf
cmp
movsb
cmp
xor
mov
jb
pushf
sub
mov
lds
push
clc
sub
movsl
push
orl
or
push
sbb
adc
and
push
dec
int
aas
insb
and
int3
arpl
dec
sbb
mov
leave
sub
mov
lds
jle
mov
sti
add
xor
pop
adc
lret
loop
test
jnp
int3
xor
mov
fists
insl
lds
imull
test
pop
pusha
mov
stos
into
rcrl
loop
insl
xchg
mov
inc
push
mov
and
jmp
outsl
inc
dec
mov
int
out
sbb
adc
cmp
add
push
and
pop
fldl
ss
sbb
in
xor
sbb
out
sub
sub
or
inc
xchg
push
test
mov
test
jle
xor
pop
pop
fisubrs
xorb
arpl
push
test
leave
dec
lret
loopne
mov
and
mov
cld
insl
pop
sar
xchg
mov
xor
iret
test
or
pop
jp
push
les
out
inc
arpl
fdivrl
sbb
hlt
add
xchg
ss
sbb
fwait
cmpsl
test
ret
mov
dec
ljmp
rol
insl
lods
add
es
inc
add
sti
dec
xchg
addb
pop
loopne
dec
pop
pop
pusha
add
gs
call
jle
shlb
daa
sub
mov
ljmp
adc
cmp
jge
mov
jmp
dec
dec
cmp
sar
jno
test
iret
out
mov
jo
sub
mov
cmpsl
sbb
xchg
sbb
inc
cwtl
jl
mov
xor
adc
leave
push
mov
xchg
pop
push
sbb
xor
cld
pop
pop
and
lea
dec
repz
mov
in
jmp
mov
mov
cltd
sbb
and
mov
jg
dec
lods
push
pop
lret
data16
adc
sahf
inc
dec
jl
mov
rclb
das
jmp
add
push
dec
push
xor
push
stos
cmc
mov
cmp
xor
or
xchg
clc
dec
sub
addr16
stc
or
mov
pop
xchg
popa
clc
and
push
scas
lods
fs
lret
cld
out
and
jo
sub
pop
scas
sub
cmp
jg
ror
jmp
or
or
dec
inc
and
sarl
das
repnz
aaa
pop
pop
mov
loopne
xor
pop
repz
das
lahf
cmp
das
adc
gs
idivb
lret
mov
pop
cmpsl
out
loopne
sub
bound
cmp
mov
lret
imul
lret
les
pop
jmp
dec
push
add
lods
dec
add
dec
test
and
mov
jae
cmp
outsb
sub
pop
roll
jg
rcrl
inc
ret
or
xor
out
pop
ret
in
inc
mov
or
or
jb
call
mov
push
out
cli
pop
outsb
sbb
out
jmp
clc
decl
add
pusha
dec
dec
repz
jns
sub
jb
add
sub
xchg
pop
sub
sub
mov
xchg
push
xchg
into
fbld
pop
inc
sbb
int
ret
int3
cmp
xor
shll
push
aas
xor
je
mov
fwait
ja
inc
shlb
rorl
push
jae
push
xchg
push
adc
push
inc
icebp
pusha
sub
mov
jecxz
into
scas
push
sahf
in
stc
add
out
xor
mov
les
in
push
or
out
dec
sbb
leave
and
in
mov
js
jbe
push
sbb
cld
outsb
fisttpll
test
sub
fs
data16
test
push
sbb
je
mov
inc
rclb
sbb
mov
inc
and
xchg
and
adc
fldenv
push
out
mov
xchg
loopne
push
outsl
xorl
ror
push
popa
pop
xlat
mov
popa
pop
cmp
lds
jge
mov
mov
xchg
fs
sar
gs
xchg
inc
pop
daa
scas
and
jb
lock
cmpsl
lahf
lods
jg
xor
enter
imul
xor
fbstp
push
mov
test
aad
push
cmpsl
rcrl
sub
popf
shrd
xor
fwait
cwtl
cmp
mov
mov
inc
mov
mov
imul
adc
sbb
stc
dec
dec
inc
cwtl
or
inc
jg
scas
icebp
adc
call
cmp
fwait
xchg
mov
push
test
jge
cmpl
stc
xchg
mov
stc
mov
lods
push
push
insb
pop
cmp
xchg
cwtl
add
jge
cmp
mov
frstor
adc
or
xchg
mov
mov
sub
adc
sbb
shrl
aas
dec
int
sbb
xor
push
cmc
imul
jb
push
xlat
sbbl
testb
dec
and
inc
xor
and
out
popf
int3
loope
push
aad
stos
cmp
iret
sahf
sub
add
mov
add
mov
xor
lret
mov
inc
leave
lahf
inc
dec
hlt
mov
push
push
insb
lds
dec
fadd
fmul
arpl
inc
scas
icebp
jns
jns
jg
dec
jge
inc
inc
push
mov
pop
push
les
loop
movsb
leave
adc
in
pop
mov
dec
xor
mov
fsubl
mov
mov
pop
jecxz
daa
scas
pop
roll
lods
fldl
stos
ss
fdivs
addr16
xchg
test
bound
or
xor
sbb
mov
stos
dec
jnp
xchg
jne
jae
inc
mov
fcom
add
and
in
pop
push
push
aad
jne
lahf
fldenv
inc
xchg
mov
adc
adc
sub
pop
pop
cmp
add
lds
hlt
lock
xchg
xchg
add
push
repz
dec
rcrb
ficomps
xlat
jmp
xchg
mov
and
cmpsb
repnz
sbb
cs
cmp
subb
insl
int3
pushf
negb
inc
adc
lea
inc
adc
push
idivl
pop
arpl
pop
addr16
inc
cmc
lds
sub
fdivrp
lods
lds
push
pop
cmc
sbb
adc
inc
sbb
mov
inc
mov
pop
add
fiaddl
xchg
in
jecxz
ffreep
out
xchg
xchg
fwait
shll
or
roll
ficoms
dec
add
inc
xchg
ljmp
xchg
enter
aaa
pop
xlat
mov
mov
mov
jae
imul
mov
rorl
or
aaa
xor
sbb
push
arpl
push
mov
lds
push
js
push
enter
mov
cld
subb
inc
mov
cmp
mov
xlat
or
pop
movsl
jmp
ds
sub
inc
lods
aad
jne
std
mov
daa
jno
xor
mov
dec
loopne
pop
or
xchg
xchg
cmp
jo
fwait
shlb
dec
sbb
aas
push
adc
or
addr16
jl
sbbl
pop
pop
in
jl
xchg
sbb
cmc
mov
loop
xchg
in
popa
fildl
loopne
xor
jne
mov
std
lret
inc
out
or
or
xor
push
or
xor
xchg
mov
call
stc
jnp
sub
aam
lcall
stos
mov
adc
cmpsl
sbb
shrb
hlt
enter
je
pop
cltd
adc
aam
jecxz
les
or
fcoml
add
fimuls
lret
cli
data16
jle
and
add
rol
imulb
fcmovne
pop
lods
adc
stc
or
loope,pn
mov
jmp
in
imul
inc
mov
jmp
jnp
in
sahf
ss
fldt
shlb
or
mov
sub
aas
fdivs
push
xor
cmc
and
dec
jo
sub
pop
in
aam
cmpl
lahf
cli
push
sbb
lods
lds
mov
cmc
or
push
js
jae
test
fmul
dec
dec
mov
dec
add
xchg
fdivrl
or
xchg
pusha
cmc
ljmp
ja
stos
fdivrs
mov
test
xor
or
pop
ficoms
sub
ja
sarb
mov
pop
xchg
fimuls
xchg
decb
ja
in
xor
pop
dec
mov
and
sarb
push
sub
xchg
mov
jmp
lret
jp
jp
or
popa
pop
xor
mov
adc
and
jecxz
adc
cs
dec
or
cmp
or
outsl
xor
sub
xchg
mov
fidivl
dec
cwtl
sub
dec
or
add
pop
insl
dec
inc
pop
pop
pushf
ds
adc
fsubl
jmp
outsb
cmp
shl
cmpsb
jno
xchg
inc
lds
or
sub
pop
lea
les
popa
aas
xor
loope
stos
pop
clc
mov
in
adc
cltd
js
jecxz
in
xchg
sbb
xor
or
cmp
adc
mov
cld
dec
mov
or
ja
pop
push
sti
repz
lods
xchg
jmp
mov
cmp
jg
cmp
ja
and
cmc
mov
cmpsl
xchg
mov
mov
xchg
jbe
and
xor
movsl
mov
push
int3
fstps
mov
sbb
lods
xor
push
out
loope
add
sub
sti
xchg
cld
xchg
addb
jb
popf
jge
or
jno
push
pop
mov
add
jb
sti
lahf
out
fwait
call
sbb
push
ss
sbb
int3
shrb
push
fwait
stos
int3
mov
shrl
pop
inc
sub
sbb
sub
sub
jl
cltd
fnstcw
cmp
shl
cmp
dec
lret
imul
mov
jne
hlt
mov
jp
cmp
fucomip
jne
pop
jmp
into
ret
cmpl
ror
sbb
push
jne
adc
add
test
xor
shll
mov
dec
jecxz
imul
lds
std
jbe
jge
mov
popa
daa
stos
aam
mov
xchg
sub
xor
mull
iret
cmp
out
jno
jle
repz
daa
int
lods
push
ret
jnp
xchg
jp
clc
dec
cmp
aam
popf
std
push
pop
in
repz
subb
aaa
ds
adc
dec
sub
divb
inc
ret
push
jbe
jmp
mov
or
idivl
dec
xor
stos
cmc
pop
mov
out
aad
movsb
add
xor
stc
jmp
rcrb
cmpl
xor
cmpsb
clc
leave
cmp
arpl
mov
gs
int
orb
es
or
sti
fstl
mov
mov
pop
out
adc
mov
popa
sti
dec
jp
es
ljmp
jmp
sbb
inc
push
int3
mov
icebp
hlt
push
imul
mov
jno
jle
mov
cs
push
mov
jb
push
in
push
push
mov
ja
or
sahf
pop
loope
scas
sub
pop
iret
data16
push
push
stc
sub
cwtl
jnp
add
xor
call
adc
loop
push
xchg
cs
lret
dec
movsl
jne
add
popf
js
mov
xchg
mov
fsubrl
icebp
push
lock
mov
pop
fs
shll
xchg
repz
fwait
pop
out
fbstp
enter
cmpsb
xchg
push
pop
jb
ror
loopne
lds
aad
std
pop
mov
imul
push
outsl
lret
ja
loopne
outsl
pop
adc
mov
dec
mov
push
lcall
aam
fsubp
jle
pushf
mov
aas
jae
and
inc
popl
xchg
xchg
repz
test
fnsave
addr16
mov
popa
cmp
cmp
mov
imul
cltd
in
out
lret
sarl
cmp
stos
arpl
scas
incl
push
es
fistps
in
cmp
scas
or
jp
adc
pushf
push
movsb
add
clc
mov
xor
and
adcb
mov
ftst
push
jns
add
out
into
inc
mov
imul
pop
adc
in
cwtl
insb
nop
push
jg
xchg
inc
mov
mov
fnsave
sub
dec
adc
push
xlat
xchg
push
adcb
and
add
and
scas
lock
xchg
xor
inc
stc
xchg
mov
subb
lods
inc
push
popf
cli
xor
filds
movsl
fnsave
call
sarl
push
scas
xor
mov
mov
decl
sub
push
cmp
xchg
cmc
ss
xor
in
insl
pushf
push
adc
or
call
enter
popf
cwtl
xchg
or
lret
stc
sarb
sub
hlt
cmpsb
shlb
xor
mov
push
test
int
cltd
pop
cli
aad
imul
pop
pop
aas
test
cld
lret
rclb
xlat
dec
repnz
and
push
jp
dec
add
pop
nop
jmp
adc
fnstsw
clc
shl
inc
cmpl
mov
lods
mov
and
orl
movsl
stc
mov
cmp
jl
jle
jl
push
dec
fcmovbe
mov
cltd
xchg
shl
filds
dec
scas
nop
inc
pop
xchg
aad
mov
and
mov
aam
mov
idivl
rclb
cmpsl
out
mov
add
pop
leave
sub
push
sub
lods
push
adc
insb
daa
jo
fldln2
imul
jecxz
pop
or
cltd
es
shl
testb
jl
incb
dec
popf
mov
and
mov
and
rorb
in
push
mov
out
jle
cli
xchg
jns
or
xor
enter
push
mov
ds
jg
mov
mov
pop
adc
bound
jno
add
shll
pop
arpl
repnz
and
cwtl
shlb
sahf
adc
les
adcl
mov
and
test
cmpsb
repnz
pop
mov
pop
pop
cmpsl
mov
mov
pop
sbb
cmpsb
je
rol
cmp
jecxz
xchg
jbe
pop
add
cltd
in
imul
sub
iret
sbb
cmp
test
dec
mov
cmp
jge
fmull
stos
pop
mov
out
fwait
lret
mov
in
cmp
or
jns
jb
cli
aaa
xchg
test
mov
arpl
xchg
xor
xlat
xchg
and
cmc
dec
test
add
jno
shll
cltd
cmp
push
std
pop
cli
out
pop
jb
imul
fcomip
adc
and
inc
or
xchg
adc
imul
mov
test
push
add
mov
leave
insl
push
enter
ret
mov
iret
movsb
sub
jge
scas
in
pop
sub
in
sbb
xchg
sub
xchg
mov
cmp
jmp
out
sbb
lea
fistl
inc
ljmp
dec
js
daa
xchg
test
pushf
push
lods
cmc
test
ds
sbb
mov
and
cmp
int
mov
mov
xchg
mov
xchg
inc
loopne
in
jle
or
xchg
movsl
repz
in
inc
xchg
lcall
xchg
lahf
dec
outsl
gs
adc
in
hlt
insb
jo
and
add
jb
sub
inc
repnz
adc
sub
rol
es
add
shlb
adc
scas
and
adc
shll
jmp
arpl
aad
or
and
cmpb
pop
sbb
lret
stos
orl
lods
mov
into
push
aad
push
sub
scas
and
sub
cwtl
cmp
sub
adc
cmpsl
iretw
fildll
jl
lret
fs
in
scas
ja
mov
push
cld
pushf
out
mov
sub
xor
ljmp
mov
ja
adc
mov
pusha
pop
push
mov
addl
xor
or
in
rorl
pop
test
add
sbb
rclb
xchg
adc
movsb
repnz
push
jno
adc
and
in
inc
push
out
ds
mov
rorl
cmp
out
add
adcb
inc
push
hlt
loop,pn
add
xor
imull
add
push
push
imul
inc
sub
and
mov
fdivr
cmpsl
xchg
test
inc
fiadds
scas
mov
inc
cmp
mov
ret
cmp
addr16
mov
into
jmp
dec
xchg
and
movsb
divl
in
mov
push
cmpsb
sbb
jbe
es
add
inc
cmc
rcl
ret
xor
dec
or
scas
jmp
adc
and
sbbb
pushf
sti
dec
xlat
out
loopne
lods
mov
adc
or
push
hlt
or
cld
dec
push
jl
data16
out
icebp
in
sbb
repnz
add
out
adc
gs
inc
lret
dec
repnz
xchg
ja
sub
or
fwait
rorb
in
xchg
das
mov
jne
mov
arpl
aaa
fidivrl
lret
xchg
sbb
sub
aas
mov
mov
push
mov
adc
loop
das
adc
into
and
fisttps
mov
inc
pop
iret
push
mov
test
cli
dec
add
testb
mov
mov
jb
repnz
bound
das
out
hlt
push
sub
or
iret
jae
in
ja
sbb
or
fcomps
sbb
hlt
add
cmp
jmp
fwait
pop
imul
jnp
jl
cld
aas
pop
in
xchg
call
pusha
lods
jp
xchg
xor
ficoms
js
loope
fmuls
pusha
and
pushf
ja
cmp
mov
es
push
bnd
xor
pop
test
test
mov
pop
xor
out
jge
add
cld
shrb
add
int
ljmp
xor
push
fistpll
push
xor
xor
cld
mov
fdivrl
xchg
in
je
ja
insl
adc
lret
aam
mov
adc
sub
ss
jo
dec
mov
loopne
incb
es
fadd
xorb
cmp
xchg
aas
das
cmc
or
xchg
or
lcall
dec
and
jns
jno
sbb
pop
jecxz
out
mov
jle
fildl
pop
frstor
fildll
int3
arpl
mov
mov
inc
sbb
outsl
fbstp
test
mov
movsl
cwtl
xchg
dec
mov
dec
push
mov
xchg
push
pop
mov
sub
test
popf
pop
jg
push
adc
adc
push
sub
jno
xchg
mov
and
sbb
xchg
enter
in
adcb
push
jmp
or
cli
insl
fisubrs
es
mov
dec
call
scas
movsl
mov
cmp
and
cmp
mov
mov
or
push
xor
dec
out
sbb
lret
nop
adc
jecxz
popa
cmp
sbb
push
movsb
mov
xchg
sub
inc
sbb
cmc
outsb
sarl
daa
stc
mov
xchg
push
dec
scas
mov
subb
outsb
and
mov
sbb
leave
xchg
lock
xor
fcoms
xchg
push
or
out
push
jb
sahf
inc
andl
mov
scas
in
xchg
lods
pushf
dec
add
adc
push
stos
mov
and
dec
mov
fildll
arpl
cmp
xor
xchg
mov
and
pop
cwtl
test
das
inc
push
add
popf
xchg
xor
pop
daa
repnz
mov
or
push
lcallw
sub
arpl
push
pop
lea
test
insl
mov
iret
mov
cmc
pop
mov
mov
adc
data16
popf
sbb
jecxz
xlat
push
sbb
ficomps
rorl
pop
mov
shl
lret
push
adc
sahf
pop
and
inc
sbb
ss
push
dec
and
cli
roll
sub
and
sub
sbb
aas
fcmovbe
inc
pop
xor
xchg
pop
adcb
add
pop
je
jl
rolb
xor
negb
xor
or
jne
lahf
add
aas
mov
cmp
aam
and
shlb
data16
push
mov
test
aam
or
test
aad
push
das
inc
pop
sarb
mov
hlt
lods
fdivrl
ljmp
push
push
sub
je
add
lret
xchg
cmp
test
test
addr16
mov
sbb
roll
mov
fidivrl
mov
in
and
add
test
xchg
test
sbb
xor
enter
vmovaps
sub
fldenv
mov
in
pushf
adc
inc
mov
pusha
lea
mov
inc
clc
loopne
cmpsl
sbb
sub
jne
test
movsb
push
sti
test
sbb
push
xchg
sub
xor
mov
adc
push
ljmp
xchg
int3
or
mov
data16
push
out
lahf
xlat
je
pop
aad
test
add
mov
cmovbe
int3
sub
pop
or
adc
jnp
or
test
mov
shlb
aaa
fcmovne
mov
add
gs
adc
rorb
test
or
out
mov
mov
adc
inc
sub
mov
inc
pop
dec
lret
mov
add
mov
add
mov
jbe
aaa
call
push
xlat
das
xchg
lret
sbb
xchg
nop
xchg
mov
mov
jp
jns
das
nop
cld
cmp
hlt
mov
push
sbb
in
cmpsb
into
cmp
jge
test
js
in
mov
adc
cmpsl
roll
mov
push
test
mov
ficomps
cmp
pusha
lahf
adc
out
or
push
mov
mov
mov
dec
push
xchg
popa
jp
out
mov
push
jnp
pop
add
nop
enter
xchg
lahf
adc
dec
iret
stos
pop
mov
jle
pop
push
or
inc
xchg
mov
dec
sar
xchg
je
jmp
sete
or
dec
ds
mov
dec
dec
loopne
jl
cmp
sub
push
dec
lea
mov
jno
adc
sarl
mov
xrelease
mov
pop
nop
jp
and
cmp
cmp
mov
pushf
and
lret
mov
les
dec
insl
push
jae
and
sahf
jns
scas
jge
push
mov
ja
arpl
ror
les
xor
pop
pop
cltd
lods
cmp
mov
sbb
scas
dec
adc
and
emms
mov
in
sti
xor
inc
jo
dec
in
dec
in
stc
das
push
inc
iret
pop
dec
sbb
cmp
push
jne
popf
out
push
aaa
fwait
mov
fisubrs
add
in
sub
and
cmp
rcl
mov
add
pop
jp
ss
lods
aaa
add
and
dec
xchg
fisttpll
ret
add
mov
or
mov
mov
rcrb
mov
or
xchg
cwtl
add
jbe
lock
cmp
mov
aad
test
push
stos
aam
cmpsl
mov
jb
gs
pushl
cmc
mov
or
cmp
mov
std
lahf
and
mov
call
inc
aaa
mov
js
jo
mov
xor
xchg
adc
sbb
dec
rcl
adc
mov
adc
je
je
mov
xchg
jg
mov
nop
imul
sbbl
in
cmp
out
add
cmp
and
mov
pop
mov
sti
adc
repz
cmp
xlat
imul
aaa
push
hlt
pop
repz
popf
pop
insb
or
test
aad
or
ret
jae
dec
jno
into
and
test
subl
cmpb
je
mov
cmpsl
jle
cltd
inc
mov
push
test
imul
mov
fs
dec
hlt
mov
fstpl
cmp
lds
mov
jo
pop
outsl
mov
push
push
mov
sti
adc
mov
xor
cmpsb
dec
mov
adc
push
out
jbe
and
in
out
ss
gs
inc
loope
jne
out
cmp
xor
cmp
xor
or
shrl
mov
or
ds
jo
ficomps
push
in
cli
mov
jbe
stos
or
xchg
and
ja
push
sbb
adc
pop
add
pushf
xlat
mov
xor
test
push
enter
imul
adc
add
lods
ss
or
test
inc
cmp
in
dec
pop
push
imul
dec
sub
push
dec
dec
repnz
add
scas
aad
call
cmp
jle
rcll
pop
mov
cmp
stos
cmp
shll
fldt
xchg
stos
push
out
pop
mov
cli
pop
aaa
sti
mov
pop
mov
stos
lahf
fdiv
movsl
jmp
fsts
in
mov
push
sub
push
and
xchg
pusha
int3
sub
jae
pop
ss
movb
int
push
inc
or
test
in
push
push
mov
adc
and
push
xchg
xor
leave
iret
cmpl
enter
pmaxub
xor
js
andb
xorl
pop
jge
sar
dec
mov
cld
out
mov
movsl
lea
daa
stc
or
mov
xchg
rclb
adcb
push
rclb
idivb
aam
jecxz
ja
sbb
xchg
pop
mov
jo
adc
not
test
fimuls
ficoms
pusha
mov
sub
jae
iret
adc
bound
push
sub
cli
jb
out
arpl
out
sti
inc
mov
pop
add
mov
mov
xor
insb
lods
imul
in
mov
popf
pop
pushf
mov
mov
mov
fs
lea
push
je
aaa
mov
sbb
das
add
xchg
inc
xchg
sub
jl
dec
and
sti
in
aas
xchg
loopne
or
xchg
sbb
arpl
das
inc
imul
or
mov
xchg
movsl
sbb
and
mov
lret
pop
push
ds
sbb
js
mov
pushf
out
sbb
or
enter
inc
mov
mov
push
sti
rolb
mov
inc
jecxz
xor
ja
imul
mov
shl
mov
movsl
leave
sub
push
ds
dec
in
jno
data16
inc
mov
filds
jb
cwtl
mov
mov
cmp
adc
loope
mov
jns
cld
mov
jne
cmp
xor
adc
into
xor
xor
mov
cmp
jp
jmp
jno
dec
jle
pop
jmp
and
fisubrl
jns
pop
add
jno
push
xchg
cmp
call
jge
cli
orl
adc
xchg
imull
lods
popa
dec
cmpsb
and
cmpsb
cmp
or
and
movsb
xor
fstl
rolb
or
jp
cmpsb
imull
dec
xor
push
int
adcl
lds
aaa
inc
and
insl
imul
rorl
insl
lods
addb
mov
rolb
cwtl
push
jnp
cmp
stos
lret
sbb
sbb
es
mov
mov
adc
adc
pop
xchg
add
adc
nop
and
cmc
add
adc
push
lahf
jnp
dec
push
lds
adc
push
in
and
xchg
shlb
push
movsb
and
jb
sbb
pop
xor
sbb
movsb
rcrb
and
arpl
stc
aam
aas
sbb
push
lock
stos
xor
scas
stos
cmp
testl
stos
mov
xchg
cmp
push
mov
mov
ds
data16
mov
in
daa
jecxz
mov
jg
addr16
sub
ficomps
loop
xor
sti
into
xlat
repz
das
mov
xor
ret
cmc
dec
pop
cmp
inc
stc
xor
xchg
mov
push
xchg
inc
movsb
jl
movntq
mov
cltd
mov
mov
movsl
addl
imul
fwait
mov
inc
lret
cmp
pushl
sbb
gs
push
xor
xchg
push
mov
push
ja
push
sbb
loopne
pushf
or
add
xchg
xchg
mov
pop
repz
mov
fwait
jnp
test
sbb
test
arpl
inc
leave
mov
and
fs
stc
into
lcall
adc
cmp
xorb
mov
mov
cmp
pop
loope
jecxz
cmpsb
lret
or
movsl
imul
add
mov
mov
int
popa
mov
sub
dec
and
pop
add
adc
push
gs
mov
daa
jmp
call
cmp
push
int
pop
fbld
out
imul
mov
lods
call
xchg
arpl
mov
add
or
lods
xchg
mov
dec
jo
arpl
xchg
int3
mov
repnz
jo
movsl
lcall
sub
jne
call
or
leave
test
ret
add
push
dec
scas
hlt
add
mov
stc
jns
cld
mov
lods
xchg
sub
cmc
loope
adc
or
pop
loope
xor
jg
cmp
aam
scas
mov
push
push
jg
mov
mov
or
push
mov
enter
in
adc
add
pop
imul
aas
insl
pop
pop
addr16
shrb
repz
cltd
ret
sbb
sub
aas
xchg
push
xchg
and
cmp
incb
leave
and
int3
push
jmp
enter
xchg
cmp
mov
xor
fs
in
ret
jge
aad
sub
xor
mov
xor
fs
push
cmp
jbe
lock
inc
sbb
pop
mov
mov
mov
int3
push
add
push
shrb
iret
add
push
test
push
push
movsl
sbb
and
cld
xchg
in
push
inc
mov
fldenv
adc
ret
jge
jmp
mov
pop
jb
xchg
repz
fmulp
outsl
and
imull
sub
pop
rcrl
pusha
out
dec
movsb
push
cs
push
andb
mov
push
sbb
jecxz
dec
stc
mul
push
das
js
aaa
loop
push
movsb
lahf
imul
mov
add
popf
mov
repz
out
inc
addr16
and
sarb
cmp
or
popa
mov
push
aas
adc
mov
jmp
inc
repnz
mov
jns
mov
dec
hlt
scas
jmp
mov
imul
lea
cmp
repz
fisubs
bound
inc
pop
jnp
or
data16
or
or
add
mov
jbe
shlb
or
inc
rcrb
lahf
push
add
push
cld
cld
dec
repz
popf
out
rcr
lret
xchg
dec
mov
xchg
test
in
xchg
pop
jae
sub
fwait
test
gs
jg
negl
repnz
pop
push
push
push
xor
mov
add
mov
or
pop
push
pop
mov
xlat
cmp
sbb
and
sub
adc
mov
dec
push
xchg
std
inc
cmp
jo
cltd
loope
movl
pop
data16
int
mov
dec
lods
stc
ret
ds
dec
in
repnz
and
jl
lea
mov
clc
cld
pusha
cld
push
and
and
fstps
xchg
pop
inc
jmp
adc
inc
sub
arpl
ss
movsl
fwait
mov
rol
rcll
iret
xor
sub
mov
mov
push
sahf
cli
xchg
in
cmpsb
leave
xchg
mov
test
pop
and
mov
shll
xor
mov
lret
fistpl
jne
dec
cli
lods
or
add
xor
pop
push
cli
or
out
faddl
cmp
xor
and
inc
jns
mov
mov
pop
push
jnp
rorl
outsl
xor
lcall
dec
xlat
mov
shlb
fs
lea
in
or
push
mov
inc
ljmp
pushf
mov
cmc
cmp
lods
jle
dec
test
xor
sbb
xor
sub
cmp
xchg
stc
jmp
call
xchg
mov
add
test
je
mov
mov
xor
or
jne
lcall
rcll
and
stos
sbb
mov
push
xor
jns
add
repnz
xor
xchg
xor
aad
in
movsb
jne
daa
rorb
call
cwtl
cld
mov
repz
mov
filds
aam
addr16
jbe
cltd
mov
sbb
je
test
push
jnp
mov
xchg
mov
cltd
orl
mov
mov
mov
dec
add
inc
sahf
fstpt
test
mov
out
popa
dec
scas
jbe
sub
enter
cmp
test
mov
jp
dec
jb
add
dec
rclb
das
stc
pop
lcall
fcoml
popf
fsubrl
shlb
lods
xor
loope
mov
sub
ljmp
add
cmp
lret
ja
cwtl
sbb
or
int
test
jg
mov
mov
or
jmp
cmpsl
jb
inc
enter
mov
pop
dec
lock
push
xchg
jbe
sbb
add
aaa
or
mov
jecxz
mov
mov
xchg
stc
jl
out
mov
xor
push
divb
mov
mov
sub
mov
inc
cmp
xchg
mov
mov
fildll
lods
add
mov
loope
mov
lcall
mov
loope
mov
sbb
fucomp
inc
inc
add
jmp
test
loop
mov
cmpsl
clc
cmp
pop
sub
adc
mov
pop
mov
into
in
jns
scas
aam
mov
cmp
xor
andb
std
jge
or
aas
js
pop
shr
fwait
mov
jle
test
mov
shr
es
sbb
ja
dec
sbb
in
adc
pop
mov
sbbb
adc
imul
aam
addr16
pop
mov
jl
scas
cmc
repnz
push
mov
fbstp
jg
pop
into
aas
sbb
fdivrp
prefetch
or
ljmp
push
jl
mov
in
add
out
dec
inc
pop
ficoml
shl
arpl
outsb
sub
inc
rcrl
fidivl
dec
jbe
aas
sbb
cwtl
pusha
cmp
add
pushf
fs
and
push
adcb
scas
aam
sbb
push
gs
insb
sbbl
loopne
push
or
outsb
or
shr
xchg
scas
and
push
das
inc
inc
aas
call
inc
pop
pusha
lds
aam
test
push
mov
in
sub
jns
pop
cmp
lds
arpl
cmp
in
pop
pop
add
add
sub
mov
cmp
jne
add
ds
fsubrs
xor
dec
ja
cli
jno
mov
roll
jnp
jnp
dec
pop
xor
and
xchg
lock
testb
mov
insl
sub
inc
movl
push
mov
or
jmp
push
xchg
fidivrl
push
push
xor
dec
repz
stos
mov
mov
dec
fcomp
xor
lahf
xor
test
push
ja
add
ret
add
jno
gs
mov
cmp
xchg
ljmp
gs
jb
or
dec
xor
or
dec
sbb
roll
shlb
and
popa
outsl
fstpt
jge
loop
pop
mov
push
fmull
out
incl
les
loopne
sbb
jae
scas
scas
sbb
stc
subb
dec
and
imul
out
repz
stc
sahf
push
jecxz
repz
xor
rolb
mov
lcall
mov
movsl
mov
inc
scas
fcmovu
inc
test
insl
or
roll
mov
fwait
or
dec
je
loope
inc
inc
mov
ds
add
push
pop
lahf
fdivs
imulb
inc
sbb
movsb
ss
clc
push
mov
addr16
add
iret
sbb
es
rol
lret
int3
outsl
sbb
sarl
fs
jae
lds
add
fnsave
mov
repnz
push
dec
cmp
xor
cmpsl
pop
fidivl
or
dec
xchg
iret
cli
dec
in
add
bound
mov
pop
adc
mov
test
fadds
loopne
jge
cmp
or
lods
lahf
loopne
js
movsb
ds
clc
inc
dec
in
sti
jbe
imul
test
push
push
mov
imul
push
pop
ficoml
xchg
xor
scas
mov
and
jbe
dec
pop
scas
xor
and
insl
adc
call
std
dec
add
outsb
rcl
xchg
cmp
jmp
jne
adc
movsb
lods
xorl
leave
dec
test
push
aam
sub
xchg
fxam
jne
addr16
mov
call
ljmp
ret
jmp
insl
and
daa
aam
inc
movsl
ficoml
adc
sbb
in
push
pop
cmpsb
sub
addr16
adc
test
mov
mov
in
stos
cmp
scas
jo
adc
lcall
jecxz
leave
mov
test
or
pop
push
rcr
adc
mov
dec
mov
xor
dec
dec
mov
mov
jb
stos
ljmp
les
pop
cmpsl
xchg
sbb
jno
fldcw
mov
inc
lods
xor
jo
mov
repz
sub
mull
mov
es
mov
sbb
repnz
mov
sub
in
pop
sub
negl
mov
jge
jge
cmpsl
mov
xor
incl
imul
sbb
jo
aad
add
out
cmp
daa
out
cmovle
fldcw
daa
hlt
out
lods
push
in
dec
idivb
push
cmp
xchg
sub
rorl
enter
dec
cmp
mov
adc
sbb
xchg
cmpsl
sub
stc
or
push
jl
add
xor
cmp
addr16
mov
enter
loopne
cmpsl
xchg
repnz
pop
jne
stos
mov
aad
push
cmpsl
add
cmp
cmp
jmp
add
and
jg
or
popf
and
mov
adc
in
outsb
or
xchg
add
mov
xchg
push
sbb
cs
jb
lret
aam
stos
push
xchg
pop
repnz
test
imul
test
popf
mov
in
mov
jmp
sbb
popa
mov
pop
nop
mov
sti
cld
in
aam
jns
mov
aad
ret
rolb
adc
and
loope
jb
loop
push
dec
daa
mov
lret
cmp
jle
xchg
negl
mov
roll
cmp
test
push
jno
jp
add
popa
xchg
mov
ljmp
mov
jae
add
andl
js
repz
pop
mov
jmp
add
mov
das
pop
fsubs
jo
jle
fwait
mov
cmp
mov
out
out
jae
sbb
sahf
and
inc
ret
push
mov
test
outsl
jge
cmp
mov
daa
mov
ja
scas
ja
pop
and
fisubs
ret
inc
arpl
mov
dec
data16
ss
in
adc
outsl
fs
dec
inc
dec
sbb
mov
sbb
dec
xchg
popa
inc
out
cwtl
cmovbe
or
dec
mov
mov
pop
dec
sbb
and
insl
xchg
lds
and
add
mov
mov
mov
test
negl
sub
ljmp
shll
jmp
and
shll
mov
inc
mov
mov
xchg
sbb
cwtl
and
mov
mov
xchg
add
pop
imulb
pop
scas
xchg
scas
push
ret
jns
out
xchg
adc
lret
rol
adc
loopne
xchg
fsts
jecxz
push
jge
pushl
pop
xlat
xor
es
imul
sbb
call
and
lea
loopne
out
shll
imul
mov
jg
dec
push
stos
js
mov
pop
loopne
add
loop
and
clc
sbb
mov
dec
jns
call
enter
shll
cmpsl
cli
inc
xor
push
jo
sub
cwtl
mov
stos
inc
mov
xor
ja
imul
mov
and
lret
dec
gs
or
je
roll
push
fiadds
push
rolb
xor
aam
aad
test
es
dec
aas
sar
sbb
aam
je
sbb
cmp
push
jnp
out
dec
xlat
stos
orl
and
pop
test
popa
cmpsb
mov
and
and
sbb
ror
inc
sub
push
movsl
dec
popf
add
cmpsl
sbb
rcrl
lods
mulb
jecxz
adc
inc
push
inc
xor
adc
xchg
mov
cmpsb
push
mov
out
xchg
push
mov
out
rolb
flds
pop
mov
push
xadd
sub
adc
xor
dec
push
mov
aaa
lahf
and
cmp
ljmp
popf
sub
push
imul
addb
ljmp
jbe
pusha
cmp
repnz
pop
ja
or
mov
push
ret
sbb
in
arpl
mov
add
cmpb
sbb
xor
mov
push
ja
xor
repz
push
inc
movsb
cmp
mov
mov
mov
push
pushf
out
jg
mov
nop
out
adc
sbbl
aad
or
dec
ret
pusha
mov
daa
cmpsl
pop
jp
sbb
bnd
or
pop
mov
and
fiadds
jg
xchg
mov
jle
dec
pusha
les
stc
cmpsl
mov
add
insl
or
inc
sub
push
jnp
add
xor
ret
data16
aad
sub
inc
out
xchg
int
and
cmp
sbb
insb
cmp
jp
aas
jecxz
mulb
int
inc
ljmp
adc
pop
cmp
cmp
shr
or
cwtl
std
sbb
outsl
xchg
fisttpll
gs
cmp
test
imul
mov
or
sub
insb
mov
cltd
movsl
sub
ljmp
pop
lods
add
push
push
stos
aas
xchg
cmpsl
fmuls
xor
imul
into
jnp
das
stos
gs
lcall
repz
mov
out
ror
add
pmulhuw
jle
add
mov
or
sbb
lret
xor
inc
mov
xchg
mov
push
hlt
push
adc
mov
xor
pop
jmp
pop
mov
lret
shlb
test
inc
dec
jmp
repz
in
pop
les
sbb
ss
sub
hlt
pop
test
mov
cmp
sub
cmp
push
mov
insb
mov
mov
or
lahf
iret
inc
nop
gs
inc
jo
in
inc
les
jno
adc
sub
in
daa
rol
inc
mov
mov
push
mov
add
xorl
mov
and
and
inc
je
jbe
xor
popf
rorb
or
jbe
or
dec
sub
lahf
aas
sbb
pop
or
push
mov
xchg
mov
fnstsw
xor
cmpsl
push
hlt
es
mov
or
mov
ja
outsl
fdivrl
les
push
jecxz
imul
push
cmp
mov
push
cmp
adc
mov
hlt
sub
es
cltd
fsubs
hlt
push
add
xor
mov
adc
jmp
mov
cmp
xor
xorl
lock
cli
inc
rcl
xchg
andb
adc
clc
adc
sbb
xor
inc
scas
lods
push
or
mov
lds
add
orb
fcmovne
mov
push
push
pop
pop
pushf
lahf
sub
lea
ret
inc
mov
and
inc
cmp
cmp
pushf
pop
ret
cmp
test
xchg
add
insb
sub
jl
data16
mov
lret
mov
adc
jns
and
loop
stos
dec
int
sbb
mov
lds
add
in
test
popf
dec
rcl
mov
xor
mov
gs
push
mov
pushf
loop
insb
pushf
rclb
mov
fbstp
int
jbe
fsubr
lret
inc
and
lock
mov
js
gs
mov
or
subl
fsubr
adc
inc
jb
dec
mov
bound
push
pop
fsubs
and
imul
and
push
lock
sbb
cltd
pop
mov
push
push
ja
adc
loopne
mov
scas
pop
xchg
sarl
movsb
add
xchg
jl
mov
in
add
out
mov
icebp
in
and
push
mov
dec
cmp
pop
cmc
cmp
push
ds
jmp
stos
xor
mov
xor
pop
pop
bound
iret
mov
or
mov
loopne
inc
mov
ja
push
push
pushf
push
out
push
popf
call
cmpsl
scas
lods
adc
mov
pop
imul
push
lock
add
dec
int
push
jl
inc
hlt
mov
or
push
mov
into
clc
and
jl
push
or
imulb
lret
test
out
mov
mov
pop
mov
adc
adc
int3
ret
rcl
dec
repnz
js
lods
inc
das
mov
hlt
mov
std
jp
and
outsb
arpl
xor
lcall
adc
mov
xchg
push
les
loopne
add
mov
cmpsb
jbe
fldt
popa
lds
jae
in
pop
add
cmpsb
lods
adc
jmp
insl
call
dec
lods
mov
xor
fisubrl
subb
insl
ja
adc
je
mov
and
pop
mov
sub
mov
sub
xor
cmp
gs
adc
mov
jno
xor
cmp
mov
push
stc
cli
dec
mov
lds
in
pop
dec
xor
jno
adc
mov
pop
xor
mov
sbb
add
xor
pop
and
pusha
jno
xchg
xchg
aas
ret
cld
mov
pushf
out
filds
popa
fmul
dec
hlt
adc
push
mov
and
in
mov
call
pop
jmp
cmp
mov
scas
popa
push
xor
sbb
sahf
sbb
rcr
mov
pop
popf
roll
std
daa
push
push
cmp
mov
lret
inc
mov
or
repz
jae
jmp
icebp
mov
jb
cmp
loopne
mov
push
insb
cmp
fimull
loop
out
and
dec
clc
cli
and
movsb
sub
sbb
and
clc
adc
add
jae
pushf
mov
adc
int
imul
out
pop
lea
fistpl
aad
adc
adc
pop
cmp
arpl
dec
sahf
dec
xchg
arpl
mov
pop
movl
push
popf
aad
aad
cs
out
push
je
xchg
jo
fld
test
jl
imul
enter
clc
push
outsb
push
test
orb
or
imul
andl
sti
fnstsw
stos
mov
bound
mov
cmpl
dec
les
sbb
mov
insl
mov
inc
pop
clc
add
sub
jecxz
sub
int
stc
daa
stos
mov
pop
sbb
sbb
pusha
and
add
jmp
jecxz
sahf
rcrl
jge
sub
mov
ret
scas
sub
out
xchg
or
leave
aaa
outsl
cmp
push
outsl
out
or
push
ss
dec
and
pop
add
test
mov
out
fisttpl
push
add
xor
inc
aad
int
mov
popf
sbb
test
stc
and
es
das
dec
addl
popa
bsf
nop
push
out
movb
sarl
cmp
lret
testb
fnstenv
push
andl
adc
std
lea
lret
cmp
cwtl
cmc
je
mov
inc
dec
outsl
dec
js
in
lcall
cmp
je
mov
data16
dec
out
loopne
loop
mov
out
test
stc
jecxz
sbb
push
pop
pop
jo
scas
or
sub
in
dec
arpl
sbb
cmp
push
mov
rolb
add
or
clc
in
pop
loopne
mov
lret
daa
add
xor
xor
outsl
xchg
cmc
loope
push
add
in
bound
push
in
ja
pop
cwtl
push
mov
scas
and
pop
fs
adc
sbb
mov
stos
outsb
sbb
jp
jb
aam
jl
mov
es
aas
rcrb
inc
mov
in
in
jnp
and
roll
std
movsl
insb
addr16
or
sbb
xor
mov
sbb
data16
add
mov
push
in
mov
incl
sbb
dec
or
dec
sub
cmp
imul
xor
sbb
jge
lahf
aaa
mov
hlt
test
call
inc
ds
xchg
test
ret
cmpb
ret
sahf
xchg
adc
jns
jno
test
insb
gs
dec
das
pop
imul
dec
dec
xlat
add
je
aad
push
mov
imul
cmp
push
rcll
push
fs
xchg
fdivs
mov
psrlq
clc
lahf
out
jb
push
into
pop
jl
dec
inc
test
dec
in
mov
enter
mov
aas
sub
push
and
jns
jmp
rcrb
xlat
sbb
lret
jg
pop
pop
or
test
and
stos
shll
subl
mov
add
jecxz
jne
and
fs
ret
xchg
xor
fdivrs
mov
dec
xor
sbb
and
push
decb
stc
adcl
mov
xorl
push
aad
out
dec
dec
imul
pusha
out
sbb
test
scas
dec
xor
icebp
in
cs
cli
insb
aad
pop
call
and
or
je
sbb
aad
sahf
mov
fwait
aas
les
inc
cwtl
scas
aam
pop
lds
outsl
jl
aaa
repnz
cmpsl
dec
add
jecxz
mov
sbb
test
inc
push
cmp
mov
pop
movsl
or
mov
in
pusha
fcomps
mulb
or
pop
fisubs
insb
test
lcall
or
leave
sub
nopl
push
mov
add
pop
sahf
mov
nop
mov
pop
js
popf
inc
shll
ja
cmp
pop
imul
mov
or
mov
and
cmp
mov
sub
cs
out
rcr
jle
sahf
cmp
int
cmp
aaa
mov
xor
cmp
mov
pop
dec
push
jo
mov
movsb
jp
fwait
jg
leave
sub
mov
test
mov
or
mov
les
xchg
push
icebp
in
stos
stos
aad
imul
ret
fimull
push
dec
or
mov
fnstenv
movsl
jns
cmp
xor
xor
test
sub
arpl
mov
movsb
mov
dec
shrl
cmc
sbbl
hlt
mov
add
mov
fstl
leave
dec
lret
repnz
in
cmpsl
into
cmc
es
in
fistps
les
and
in
mov
jl
mov
xchg
ja
sub
addr16
adc
pop
push
and
adc
outsb
out
mov
int3
pop
fisubl
mov
push
jmp
mov
popa
add
inc
stc
fs
jb
cld
stos
pusha
cltd
aaa
mov
sub
xchg
mov
push
adcl
js
pusha
or
ret
jo
push
push
imull
mov
lret
ja
adc
ds
out
push
ret
mov
adcb
cwtl
push
dec
xor
das
push
add
cmp
inc
push
mov
das
movsb
dec
loope
nop
jb
pusha
adc
je
mov
xlat
fidivrl
fnsave
stos
outsl
in
cmc
sub
mov
sub
and
xlat
pop
pop
or
test
jne
jb
dec
jo
stc
and
orb
out
xchg
push
fsqrt
xor
pop
xchg
js
cmp
jne
jo
ljmp
cmpsl
add
idivb
pop
ret
xchg
ja
mov
sbb
out
inc
xchg
out
test
mov
ficomps
inc
jne
faddl
xor
or
arpl
rcrb
out
sub
or
sahf
xchg
cmp
sbb
test
pop
xchg
sbb
jmp
repz
add
lds
pop
pushf
pop
cwtl
ja
mov
push
stos
mov
push
pop
into
mov
mov
divb
mov
adc
in
arpl
or
stos
inc
aad
rorl
xchg
add
sbb
leave
pop
loop
push
add
aas
enter
xchg
cmp
ficompl
lret
push
insl
xor
jl
jp
xchg
aad
mov
lret
lds
jb
lock
adc
cld
adcl
or
sbb
mov
or
data16
and
xlat
and
lahf
mov
xchg
dec
pop
jl,pn
inc
sbbb
pop
fcomi
or
icebp
push
push
jno
xchg
cmpl
mov
mov
add
lods
push
mov
and
shrl
dec
sahf
mov
jns
pop
lret
mov
fistl
loopne
push
aas
mov
lahf
loop
xchg
mov
or
or
mov
cmp
pop
sbb
dec
or
fwait
mov
push
sub
or
dec
test
pusha
xchg
stos
sub
cmp
loopne
test
xchg
dec
rclb
gs
pop
adc
push
jns
pop
pop
fcmovnbe
push
mov
sub
sub
cmp
adc
in
es
ficoms
pop
mov
dec
stos
inc
xor
pop
ljmp
inc
daa
loope
iret
mov
jbe
xlat
push
adc
cwtl
rorb
mov
push
ljmp
sub
inc
or
inc
dec
es
ret
test
divl
out
in
dec
es
or
sub
xor
inc
rclb
inc
add
xor
jno
leave
ljmp
fimuls
test
scas
mov
add
mov
ret
push
arpl
fnsave
test
jmp
cli
mov
scas
xchg
es
pop
adc
cmp
cltd
xor
loopne
movsb
push
mov
leave
cmp
mov
add
call
pop
push
hlt
std
inc
call
inc
pop
and
push
gs
test
adc
lahf
pop
adc
repnz
insb
popa
lcall
jmp
repnz
push
jg
aas
negl
fisttpl
sahf
aam
mov
loop
mov
adc
push
push
adc
shrl
fsubl
adc
inc
cmp
sbb
mov
lods
jno
repnz
and
imul
push
jne
lret
or
and
outsl
int3
sub
adc
test
lock
add
mov
cmp
jge
aas
inc
repnz
mov
popa
loop
adc
jbe
or
lods
out
push
xor
leave
push
push
fs
dec
or
lods
ja
stos
call
in
or
xchg
dec
dec
mov
icebp
bound
xchg
xchg
fistpl
adc
sbb
imul
ja
lock
jge
addb
push
fsub
fxch
sbb
sbb
adc
jne
and
lods
jge
clc
sbb
outsb
jl
pop
test
add
fxch
pop
push
or
mov
mov
pop
mov
push
lds
jecxz
test
or
push
mov
cmpsb
bound
out
fs
out
or
fistps
jle
loope
popl
mov
aaa
lods
outsl
xchg
int
and
mov
push
add
mov
push
pop
insb
dec
imul
dec
and
sub
push
or
dec
xchg
adc
repnz
iret
inc
cs
jnp
imul
inc
adc
into
xchg
push
shr
icebp
or
cli
push
andl
fwait
push
test
push
orl
andl
pop
xchg
ror
mov
or
jecxz
add
daa
add
mov
scas
fwait
fwait
jg
mov
fwait
mov
inc
lds
and
sarl
sub
push
popf
inc
loopne
fdivrl
out
jbe
lahf
mov
push
sub
xchg
jg
or
xchg
test
fs
iret
jbe
mov
call
out
xorb
xor
xchg
pop
sahf
stos
push
mov
mov
cli
ja
out
popa
inc
ja
in
push
mov
cs
bt
pop
ljmp
hlt
xor
and
lret
push
negl
jle
push
xor
loope
fstps
ss
xor
mov
cmp
xor
pusha
xchg
ja
ljmp
xchg
loop
stos
sub
mov
iret
push
inc
cltd
add
add
cmpsw
data16
aam
pop
inc
jge
push
push
imul
loopne
das
stos
sub
xchg
ss
popa
call
fldt
or
lcall
insl
jg
push
daa
lods
lea
cld
pop
rcrb
in
mov
push
fsubs
mov
nop
jno
jl
cli
and
mov
xchg
scas
xor
or
das
in
fcomp
sub
pop
mov
jl
jns
adc
js
in
mov
push
jmp
mov
mov
aaa
pop
adc
xor
mov
xchg
dec
out
add
cli
xor
vmread
cmc
jl
out
aas
inc
mov
lds
imul
aam
cwtl
jb
cmp
adc
and
scas
daa
add
pop
cmovne
jp
cmp
jle
inc
ret
insl
mov
inc
leave
jo
mov
popf
adc
mov
shlb
imull
rcrb
call
movsl
jg
ds
out
shll
sbb
dec
aaa
mov
pop
testb
dec
push
inc
sbb
std
cmp
sub
aam
lea
pushf
mov
jnp
sbb
lcall
in
pushf
mov
ret
bound
bound
les
xchg
out
jns
pop
adc
shrb
xchg
sub
push
cli
add
into
loop
jg
out
aad
sub
sti
ljmp
fdivl
add
push
jge
adc
pop
scas
sarb
es
add
mov
shl
int3
jge
cmp
inc
sbb
mov
push
into
mov
sbbb
js
xor
ja
sub
aas
or
nop
push
pop
aam
iret
lods
xchg
adc
neg
xchg
int3
dec
cmp
xchg
movsl
mov
inc
pushf
jno
add
sbb
sbb
ficompl
dec
aam
sti
and
cmp
cli
mov
xchg
pop
adcl
shll
fwait
cmp
nop
xor
inc
test
pop
test
nop
es
or
cli
mov
sti
jg
xor
jns
std
jmp
add
sbb
cmp
xor
hlt
adc
out
cltd
mov
lock
cmpb
inc
jp
addb
push
loopne
jns
sub
in
or
and
lcall
xchg
iret
pop
mov
dec
mov
or
popa
insb
dec
scas
pusha
push
ja
call
rcrl
pop
pop
mov
jg
fcoml
hlt
mov
dec
add
sti
sbb
jecxz
scas
clc
mov
in
aam
in
add
adc
jle
sbb
das
arpl
sub
andb
ds
sub
jp
in
in
shrb
xor
jne
dec
inc
daa
mov
popf
ror
jb
mov
lahf
dec
ret
fs
pop
pop
pop
outsb
shrb
pop
dec
xchg
inc
or
jg
ljmp
push
out
push
and
mov
movb
les
xor
sbb
cli
fstps
pushf
jno
test
loop
inc
loope
xor
aaa
push
rcl
add
push
jl
cltd
ficoms
sbb
xchg
daa
pop
mov
add
lea
mov
fdivl
dec
mov
mov
rcll
mov
sub
aam
mov
xor
push
daa
in
inc
mov
xchg
mov
jnp
call
xchg
push
or
mov
into
dec
sbb
mov
mov
inc
mov
adc
fldl2e
pop
dec
imul
mov
fnstcw
out
imul
rcr
mov
out
pop
or
inc
insl
jecxz
out
sbb
jmp
cmp
cmp
into
push
fs
sub
dec
pop
dec
loop
std
in
or
movsl
pop
mov
sub
or
mov
fimull
dec
int3
in
loopne
rcll
inc
jg
adcb
jmp
or
divb
xorb
dec
jl
mov
test
int
xchg
je
js
mov
cmp
dec
jp
inc
inc
cmp
aam
movl
jecxz
sar
inc
add
pusha
dec
cmp
std
cmp
sbb
leave
fcomi
imul
sbb
ficomps
add
repz
pushf
and
mov
daa
popf
in
pop
push
es
add
lea
shl
popf
clc
push
ret
pop
stos
dec
stc
cmp
jno
fstp
andb
mov
je
cmpsl
jle
pop
repnz
ja
adc
les
pushf
mov
fistps
xchg
sub
adcb
dec
cltd
ds
or
lahf
push
sbb
ret
cmp
outsl
ret
jae
adc
xor
sbb
in
or
or
mov
ljmp
jmp
cmp
pusha
mov
pop
es
jp
lret
or
repz
js
inc
inc
add
pop
leave
cmp
sub
int3
xchg
lds
lret
pop
neg
pop
sbb
hlt
sti
push
stc
insl
push
cmpb
mov
out
in
xchg
cmpsb
adc
sub
adc
ror
hlt
xor
mov
sub
ss
mov
pop
inc
push
aas
repnz
addr16
push
outsb
add
lcall
pop
adc
push
xor
dec
push
loope
bound
add
nop
xor
loope
xorb
cmc
pop
push
in
xchg
push
sub
call
sub
lahf
ja
shll
in
lahf
push
jnp
out
cmp
icebp
mov
scas
cmp
push
sub
pop
mov
jo
pop
int3
fldcw
ds
jecxz
mov
in
inc
xchg
fld
mov
sbb
xor
pop
decl
out
aas
xchg
bound
push
mov
xchg
inc
adc
movmskps
cltd
sbb
fsubrl
fwait
add
and
imul
push
or
jmp
push
cmp
outsb
mov
sbb
sbb
mov
sbb
dec
fcmovu
in
sahf
push
push
out
jno
sub
not
mov
mov
stc
ficoms
adc
pop
fsubrl
sub
lea
fistl
sbbb
pop
xchg
mov
cwtl
loope
push
jne
hlt
flds
aas
cmp
js
data16
adc
jge
adc
cmp
dec
popa
push
and
lods
loope
lcall
mov
xchg
add
insl
pop
adc
outsb
sub
lret
in
jge
jg
inc
rcrl
and
inc
dec
dec
out
mov
loop
into
notb
lret
inc
push
adc
push
cmp
sbb
cmp
test
cmp
xchg
daa
add
aam
aam
in
jp
jge
ds
jnp
sub
pop
cli
push
inc
sbb
stos
outsb
outsb
aad
pop
lahf
mov
mov
fcomi
push
pop
movsl
sarl
sahf
or
int
out
js
test
inc
add
inc
xchg
sbb
es
sub
pop
adc
pop
gs
push
xchg
scas
loope
inc
lret
sbb
pop
sub
jae
jge
pop
sub
mov
jle
mov
adc
pop
jge
repz
xchg
push
xor
mov
arpl
not
jl
leave
cmp
mov
addb
jp
loop
outsl
test
add
push
aaa
pop
mov
dec
pop
psllw
fistpll
sbb
dec
scas
cmp
mov
add
inc
inc
enter
mov
xchg
popf
sub
mov
mov
xchg
andl
js
in
mov
fldenv
fnstcw
dec
mov
sbb
inc
testb
sbb
fildl
sbb
cmpsb
or
or
mov
fildll
lods
out
xchg
loope
push
sahf
inc
incb
adc
js
mov
stc
popf
dec
test
mov
cmp
repnz
push
xor
sti
push
das
push
int
call
or
stos
data16
stc
add
or
enter
popf
inc
dec
enter
cmp
hlt
js
insb
into
ret
cwtl
lea
jb
frstor
or
push
push
in
dec
xchg
ds
mov
dec
cwtl
pusha
aad
shrb
jb
pop
fwait
or
lods
mov
dec
in
mov
cmp
stos
flds
mov
jecxz
dec
jmp
shll
mov
or
mov
push
jno
scas
icebp
sub
stc
xor
rclb
mov
in
jp
test
bound
out
mov
ds
and
test
mov
mov
mov
mov
cmp
and
and
fiadds
mov
mov
stc
jmp
shrb
incl
bt
lea
jbe
adc
mov
fcmovnbe
push
mov
enter
outsb
mov
dec
ret
pop
aaa
enter
lods
push
int3
lret
jns
sahf
inc
icebp
in
mov
insl
ss
or
clc
sbb
std
push
xchg
sbb
or
and
inc
jmp
adc
aad
cwtl
inc
dec
fwait
jp
xor
push
test
outsl
add
cmp
lea
cmpsb
aad
jno
xor
incb
inc
cmp
popa
stos
push
mov
jb
jp
je
and
jmp
divl
xor
and
cmpsl
sbb
leave
xchg
popa
rcll
nop
mov
sub
ficompl
sbbl
add
and
push
jno
jg
xor
or
add
test
stos
jp
data16
push
enter
shll
sbb
pop
cmc
sub
scas
add
icebp
xchg
and
dec
rcrb
sub
hlt
mov
mov
pop
fldl
fnstenv
sub
call
xchg
jb
ret
push
daa
mov
pop
mov
cmp
stc
xchg
push
je
jg
scas
sub
xchg
hlt
dec
js
imul
outsl
mov
mov
and
aaa
push
push
sbb
add
adc
or
loop
cmp
pop
xchg
fs
dec
inc
test
sub
adc
inc
mov
aad
sarb
lock
fs
mov
add
scas
cli
jbe
imul
xchg
or
or
lret
les
push
xor
gs
gs
cmp
mov
rcrb
xchg
jecxz
sbb
and
enter
inc
nop
mov
push
lret
add
in
and
dec
addb
cmp
ret
pop
sbb
adc
and
xor
dec
sub
inc
gs
dec
fisttpll
mov
cmp
cmc
fsubrl
sete
in
and
in
or
inc
stos
push
rep
adc
xchg
push
mov
pushf
pop
incl
shr
dec
pop
jo
xor
imul
xchg
in
or
in
xchg
dec
ficoml
cmp
mov
adc
sbb
dec
sbb
sbb
pop
adc
fldt
xor
insb
nop
sub
xchg
adc
pop
dec
push
imul
imul
clc
and
shlb
pop
ror
jmp
push
in
aaa
lods
adc
insl
nop
mov
stc
gs
sbb
dec
mov
dec
xorl
and
jno
push
into
inc
fs
sbb
stc
adc
bound
push
cld
xchg
dec
xor
fistps
cmc
inc
xchg
mov
mov
or
sbb
mov
add
fstpt
cltd
out
int
orl
cmp
insb
and
aaa
pop
leave
filds
clc
jbe
jnp
mov
outsb
mov
out
pop
add
call
mov
push
popa
push
scas
jp
outsb
js
imul
jl
sbb
arpl
adc
mov
jecxz
adc
imul
adc
into
jo
cli
add
test
insb
outsl
sbb
fstps
or
cmc
dec
push
pop
shlb
inc
pop
push
mov
pop
in
add
lcall
mov
dec
iret
pop
or
inc
xor
mov
sub
shrl
mov
and
outsl
cli
pop
insb
insb
cltd
arpl
jecxz
adc
cli
stos
dec
out
clc
xor
sti
cmp
xchg
outsb
xchg
ret
cmpsb
inc
xor
out
fwait
daa
fiadds
cmpsb
cmpsl
add
vminsd
adc
inc
inc
sbb
inc
and
sbb
out
jae
out
push
jp
xor
jl
lods
lret
lods
jecxz
insl
lods
addr16
pusha
imul
jmp
xchg
decb
and
out
shl
mov
movsb
stos
jge
pop
stc
ret
add
pop
aas
mov
in
loopne
adc
movsb
bound
mov
dec
pop
fwait
inc
lods
xor
rclb
das
out
daa
test
stc
jg
in
or
mov
sti
sub
call
pushf
cmp
dec
outsb
aaa
ss
andl
jne
xor
popf
xchg
or
aam
cmc
xor
das
mov
add
xor
imul
addr16
mov
outsb
jecxz
and
cld
addr16
and
or
jne
push
mov
test
add
cltd
sbb
jns
int
cmp
in
insl
push
sub
xchg
scas
and
cmp
dec
shll
mov
fsubrs
popf
fbstp
repz
pop
mov
fbld
jl
sub
dec
aad
ret
push
jne
pop
mov
dec
push
mov
xchg
sub
or
fstpt
sbb
lret
mov
push
and
sub
adc
lds
jns
leave
push
imul
cmp
lods
mov
mov
jmp
push
repz
or
aad
and
xchg
and
test
mov
test
fidivrl
loope
sbb
xchg
pushf
aad
les
mov
push
cmp
or
or
nop
and
hlt
mov
adcl
insb
pop
in
loope
repz
mov
testb
mov
call
jl
pop
mov
test
sbb
lods
and
mov
push
mov
testl
mov
mov
je
fisubrl
ret
sub
movsl
clc
jnp
mov
mov
push
lds
pop
cmpsl
add
jb
arpl
mov
je
lcall
push
jno
mov
repz
fnstsw
push
push
mov
add
movsl
bound
mov
sbb
sub
nop
xor
sub
nop
adc
or
ljmp
in
popf
daa
lret
stos
and
icebp
pop
mov
jmp
sbb
mov
inc
outsb
mov
inc
jmp
lods
mov
aam
xchg
jae
arpl
push
xlat
push
es
xchg
stc
ret
jne
add
mov
in
in
repnz
sub
dec
hlt
adc
and
cmp
push
in
mov
stos
cmp
inc
add
mov
mov
cmp
pop
mov
lods
cmp
pop
cwtl
lds
lea
aad
insl
outsb
or
movsl
in
movsl
mov
inc
insl
loop
xor
sub
mov
jge
cs
adc
test
push
cld
fcmovu
cmp
cmpsl
mov
pop
add
test
jno
or
cmpsb
pop
push
je
xlat
pop
fistpl
jno
aam
rolb
xor
insb
repz
inc
cli
xchg
xor
popf
push
outsb
cmp
mov
aas
jecxz
cltd
ljmp
add
sbb
insb
sbb
inc
xchg
icebp
add
push
and
loop
dec
jmp
bound
jno
inc
fistpl
push
arpl
andl
rcl
shrl
out
jmp
and
adc
jmp
test
popf
aad
clc
sbb
push
out
pop
jno
or
sub
enter
std
and
sub
popa
push
popa
rol
push
sbb
jp
lahf
notb
jle
jo
sub
int3
cmpsl
scas
out
fldt
loope
sbb
mov
mov
pushf
shl
and
ret
sub
sbb
push
ds
push
aad
repz
mov
aas
or
push
push
fwait
inc
jmp
lods
mov
push
add
shll
push
cmp
mov
inc
sub
and
ret
arpl
inc
dec
inc
popa
mov
ds
fisttpl
add
and
test
mov
call
out
jno
inc
pop
cmp
push
sub
call
sahf
test
stc
lcall
adc
mov
dec
mov
sub
loope
mov
in
cmp
mov
jmp
xor
rorl
imul
xor
loopne
sbb
mov
adc
pop
jae
xchg
fisttpll
xor
hlt
addr16
out
jae
fidivrs
dec
movsb
ret
out
dec
sbb
jmp
lret
test
movsb
aad
inc
movsl
icebp
inc
or
mov
les
push
jno
and
mov
push
jg
lgs
ret
lea
sbb
adc
inc
in
cltd
xchg
outsl
lods
xchg
xchg
es
ret
repnz
test
push
cwtl
mov
lea
fdivp
or
sbb
dec
jae
dec
aam
testb
push
lea
mov
sbb
xor
lds
div
xor
pop
es
mov
mov
ss
out
xchg
in
into
push
leave
cmpsl
xor
ja
jo
decb
jge
add
adc
cmpsl
mov
movsb
push
sbb
fnstcw
out
faddl
or
pop
mov
mov
sbb
mov
add
out
or
mov
and
mov
jge
pop
xchg
movsb
movsb
cmp
aad
shld
adc
test
dec
mov
lret
enter
mov
mov
pop
inc
or
push
pop
inc
xor
cmp
ljmp
sbb
sbb
inc
add
inc
mov
loop
mov
inc
jg
mov
in
in
lds
fcoms
push
push
popa
sub
les
pop
and
mov
shrb
leave
pop
sbb
cmp
and
mov
xor
mov
add
jge
jge
pop
repz
cli
rorl
pushf
stc
fildl
xchg
or
fs
xchg
pushw
rcr
call
push
shr
sub
les
test
lret
stos
sub
stos
sub
sbb
jle
aam
dec
cld
mov
arpl
ds
fwait
lret
sbb
jnp
mov
inc
jnp
stos
cmp
cmp
lret
add
mov
pushf
movsl
out
outsl
enter
jne
xchg
enter
pop
mov
mov
dec
xor
dec
cmp
iret
xchg
clc
xor
sub
sbb
fisubs
leave
xor
adc
daa
inc
stos
and
or
xchg
movsb
xor
nop
cmp
test
lods
cs
sahf
add
mov
mov
cmp
es
cmp
repnz
sti
sbb
and
sbb
fs
mov
push
xor
mov
scas
pop
call
outsl
jg
arpl
mov
cmp
inc
jge
xor
push
xchg
mov
or
xchg
cmp
dec
leave
insb
ud0
rcll
mov
sbb
cmp
lahf
mov
mov
pop
aaa
pop
adc
shrb
and
adcl
xor
movsl
push
xchg
mov
cmc
push
sbb
jno
or
and
adc
mov
adc
hlt
mov
bound
dec
adc
cmc
ja
enter
add
mov
fcompp
mov
ss
nop
jb
out
jb
lcall
cltd
sbb
mov
add
pushf
mov
cwtl
ss
in
jge
jle
xor
mov
xorl
push
dec
mov
add
ret
pop
lods
outsl
out
mov
inc
fwait
mov
stos
cmpb
out
inc
mov
and
mov
or
push
fcoml
mov
dec
xchg
js
or
or
sbb
sub
subb
repz
xorl
bound
pop
bound
mov
adc
mov
sub
and
sub
pusha
mov
fisubl
enter
jge
adc
aad
lock
xchg
and
rcrl
rcr
iret
push
inc
pop
lds
xor
jno
xor
sub
pop
xchg
js
jb
ret
cmp
mov
add
push
cmc
aaa
cmp
mov
xchg
or
pop
repnz
leave
push
cmpb
jae
lock
pop
loope
add
jge
mov
sub
les
pop
xor
leave
insl
add
sbb
push
movsb
mov
jo
cmp
push
bound
ja
mov
xlat
jo
xchg
push
mull
cmc
outsb
sbb
inc
xor
adc
jecxz
pop
cmp
rcll
fdivrs
cs
lods
sbb
mov
gs
mov
ds
mov
adc
das
pop
sub
xchg
aad
mov
jl
cld
das
rcrb
add
lahf
cvtps2pi
cmp
lret
stos
popf
testb
adc
jp
or
dec
pop
jbe
ja
add
jne
cmp
adc
cmp
daa
inc
adc
lods
test
aad
pop
testb
repz
sub
pop
fldcw
cltd
icebp
lock
in
lret
andb
xchg
ret
jp
push
loopne
out
jp
pop
sub
mov
ror
pop
mov
lods
adc
mov
adc
arpl
gs
mov
cwtl
enter
jmp
lds
out
sbb
push
cli
cmp
cli
push
inc
mov
loope
add
out
fimuls
test
push
lcall
cwtl
pop
adc
push
lret
dec
sbb
sub
mov
mov
out
mov
push
clc
fsubrs
out
repnz
push
outsb
inc
dec
stos
repz
jg
cmp
sub
adc
sti
and
insl
mov
pop
imul
xchg
lods
adc
cmc
cmpl
and
enter
jp
lods
js
shlb
bndstx
loop
cltd
mov
lcall
loopne
pop
fimull
aam
jp
pop
stc
sub
inc
mov
into
sbb
fsts
in
xchg
xchg
insl
or
mov
test
dec
jb
and
pop
fadds
mov
cmp
les
popa
or
mov
pushf
and
push
jnp
jl
adc
push
clc
adc
inc
ds
cmp
repz
dec
pop
dec
pop
mov
call
add
aam
fstp
mov
mov
adc
pop
clc
or
jmp
hlt
ljmp
std
nop
cmp
and
xor
orl
pushf
enter
push
sbb
int3
ja
mov
cld
movsl
mov
dec
dec
pop
mov
dec
repnz
cmp
push
addr16
add
push
lock
daa
jmp
mov
out
push
push
pop
shlb
test
imul
or
jnp
push
nop
jg
clc
jl
inc
mov
out
ror
into
xchg
stos
fiadds
sbb
jmp
mov
mov
icebp
xchg
cmpsb
xlat
adc
pop
push
cmpsb
push
idivl
mov
xor
jns
aaa
or
mov
insl
push
xor
mov
jb
mov
cmpsb
sahf
xor
and
adc
in
xchg
sbbb
repnz
and
sub
fstpt
and
addb
xor
ljmp
push
movsl
mov
lret
cld
lea
mov
and
addr16
push
idivl
ljmp
pop
push
push
imul
lea
push
pop
mov
inc
mov
rorl
call
jb
mov
rolb
xlat
mov
sbb
sahf
or
fdivr
mov
inc
add
mov
outsb
xchg
and
test
sti
divps
mov
or
jo
fdivrp
test
cltd
mov
adc
lcall
jge
pushf
mov
jecxz
enter
inc
pop
adc
pop
iret
adc
push
cmpsl
jb
into
adc
test
fstp
packssdw
in
lcall
pushf
add
in
and
mov
dec
in
push
sub
adc
lret
adc
mov
lret
adc
or
xchg
xchg
test
mov
repz
cmc
outsl
je
jae
push
bound
rorb
xchg
pop
push
test
in
test
adc
or
fisubs
or
pushf
cmpl
mov
and
iret
inc
nop
inc
push
xchg
into
push
out
or
notl
js
neg
xor
lcall
push
cltd
sbb
mov
mov
cs
stos
mov
or
es
test
add
mov
adc
ret
mov
cltd
cmc
jnp
and
cmp
inc
aam
es
dec
sbb
iret
imul
aam
lock
add
dec
lea
xacquire
out
mov
dec
push
xchg
and
fisttpl
or
dec
out
push
xor
pop
movsb
cmpsl
pop
ljmp
dec
fidivrs
add
sub
inc
das
mov
and
stos
xchg
fwait
arpl
lds
push
dec
rcrl
dec
int3
pop
cmp
ss
inc
or
arpl
shr
pushf
mov
mov
insb
pop
pop
pop
cld
cmp
pop
lret
jmp
mov
clc
addl
ljmp
add
orl
sub
hlt
lcall
rcl
rcr
lahf
fnstenv
mov
test
lods
mov
ss
mov
mov
stc
mov
mov
mov
adc
and
jmp
ljmp
mov
jp
lea
push
mov
stos
fucomp
sti
sub
lahf
fsubl
pop
data16
fstps
sbb
loopne
push
adc
imul
add
jl
adc
sub
push
or
adc
ss
or
sbb
subb
cmp
inc
cmp
dec
mov
mov
dec
fisttpll
flds
movsl
fcoml
in
stc
xor
dec
xchg
xor
dec
out
subl
scas
mov
sub
inc
clc
push
sub
lahf
mov
add
leave
mov
cmp
mov
inc
stos
xchg
in
dec
inc
mov
das
fsubr
mov
sarl
pop
into
in
sub
inc
pop
jo
aad
popa
pop
pop
std
mov
mov
es
or
pushf
jbe
cmpsb
sub
imul
stos
ret
push
mov
mov
mov
je
pop
xchg
and
aad
xchg
dec
xchg
xchg
test
hlt
lahf
mov
dec
push
pop
stos
xor
mov
adc
iret
pop
dec
ljmp
aaa
fwait
int3
mov
dec
or
adc
into
into
mov
scas
scas
xchg
push
sbb
mov
xor
mov
jno
jnp
xchg
arpl
mov
lret
sub
mov
push
adc
dec
dec
stc
jae
rorl
jmp
in
mov
stos
cmp
imul
repnz
iret
cmp
shrb
enter
imul
mov
sub
std
addr16
aas
cld
fstpt
out
sti
push
mov
sahf
sbb
jle
cwtl
pop
cmp
lods
xor
movsl
mov
mov
xchg
ret
in
repz
jle
dec
lcall
push
mov
and
orl
adc
adc
not
lods
leave
aaa
js,pt
xchg
dec
cwtl
sahf
pop
jnp
insb
jg
adc
data16
add
xchg
and
jmp
jl
movsl
xchg
loopne
fwait
jg
daa
std
inc
js
pop
scas
inc
insb
mov
sbb
add
jns
ret
out
fnstenv
or
sbb
movsl
adc
xchg
mov
push
push
mov
movsl
dec
out
pop
daa
aad
fs
jno
dec
aaa
rorl
in
dec
lods
aaa
fcmovu
test
mov
cmc
cltd
inc
and
test
jae
sub
je
pop
xchg
mov
rcl
fld
xchg
fcoms
test
inc
arpl
daa
pop
mov
test
mov
popf
popf
lea
mov
mov
add
lret
or
or
pop
adc
jecxz
loopne
mov
test
jg
popa
lods
jp
sub
push
sub
iret
jb
xchg
add
sub
fwait
sub
aam
test
jle
sbb
dec
adc
test
cmpsb
cmp
sbb
adc
xchg
mov
test
cwtl
xor
fnstenv
gs
xchg
icebp
ss
inc
popa
in
mov
js
outsb
inc
cmp
cmc
jns
sbb
out
loop
je
pop
iret
rclb
inc
inc
mov
jle
stos
out
sub
push
pop
dec
push
test
jo
mov
adc
mov
and
stos
ds
cltd
ret
inc
clc
fidivs
jne
xor
inc
test
outsb
insl
outsl
mov
mov
adc
ss
xchg
adc
sbb
pop
int3
and
xchg
test
ret
mov
jl
push
daa
fstps
cmp
xchg
cmp
lock
mov
int
cwtl
fisttpl
push
xor
mov
cmp
pop
fstps
mov
std
pop
xor
sub
fadds
clc
int
mov
pop
mov
rcll
out
out
repnz
aad
or
push
mov
jle
int3
decb
cmpsb
cs
insl
push
inc
leave
stos
loopne
lods
adc
xchg
and
imul
dec
into
and
lret
je
mov
or
dec
sub
mov
mov
mov
xchg
jl
sbb
pop
sbb
flds
decb
pop
push
ja
jmp
xor
cmp
icebp
mov
xchg
inc
dec
jne
stc
mov
pop
xchg
add
js
adc
pop
pop
inc
cmp
repnz
xor
push
jge
mov
out
add
arpl
xchg
in
pushf
pop
xchg
mov
pop
ds
mov
xlat
add
imulb
lret
mul
mov
mov
test
pushf
movntq
inc
incl
popf
mov
dec
sub
and
adc
test
faddl
and
sbb
jae
std
ds
mov
rol
jb
mov
mov
out
jno
lods
movsb
lahf
shlb
js
stc
xchg
in
and
jae
pop
sub
inc
mov
repnz
push
push
push
fwait
aaa
dec
stos
mov
or
push
cmpsl
test
dec
ljmp
push
jb
je
ljmp
sub
sahf
xor
mov
xchg
xor
inc
inc
cwtl
mov
mov
clc
add
jge
mov
push
testb
mov
clc
xchg
lock
out
ret
xchg
clc
clc
out
jecxz
adc
jnp
sub
add
and
ds
rorl
mov
ljmp
inc
mov
mov
sub
shrl
pushf
and
mov
mov
pop
popa
rcr
xchg
pop
ret
lock
push
leave
add
inc
mov
js
enter
inc
mov
or
daa
add
test
xchg
das
ret
push
and
add
cmp
adc
inc
loop
arpl
push
outsb
hlt
gs
and
out
inc
mov
testl
jo
and
mov
fstl
or
lock
push
push
lahf
jp
jae
insb
lock
fistpll
mov
outsl
jb
jbe
insb
arpl
inc
sbb
fwait
leave
call
js
dec
xor
mov
cltd
aad
fimuls
jg
mov
lods
lret
add
out
jmp
mov
dec
xor
fnsave
fsubrl
and
popf
mov
jecxz
repz
jnp
mov
push
add
sub
or
inc
imul
or
push
cmp
mov
mov
dec
testl
dec
gs
xchg
mov
cmp
int3
rorl
push
pushf
jecxz
pop
push
dec
fistl
dec
jae
xchg
jl
negb
push
fcom
push
loope
movsl
popl
add
and
lods
lret
mov
dec
out
pop
mov
cmp
pop
movsl
sbb
loop
xor
ret
inc
mov
mov
jmp
mov
dec
and
ljmp
leave
push
pop
or
sbb
mov
sbb
sub
mov
sbb
jmp
fldlg2
xlat
mov
mov
xchg
das
xlat
sub
sub
test
xchg
mov
test
push
call
leave
xchg
ja
adc
inc
inc
out
pop
test
adc
das
push
jge
cmc
cwtl
inc
xchg
imull
or
xchg
loope
add
adc
mov
mov
paddw
cmp
and
test
xlat
inc
sbb
testb
repnz
and
mov
jp
xchg
daa
in
lcall
sub
test
cmp
aam
fdivr
mov
or
out
push
das
jns
adc
xor
dec
out
in
pop
stos
aam
push
int
pushf
push
sub
mov
xor
push
repz
sub
mov
xchg
mov
adc
mov
adc
outsl
mov
mov
inc
push
pop
or
lods
mov
repz
push
mov
mov
dec
add
cmc
sub
jb
inc
data16
jle
mov
sub
sub
lds
mov
xchg
mov
loope
or
cwtl
mov
pushf
xlat
enter
dec
std
rol
int3
xor
inc
cli
jl
cmp
sub
sbb
iret
mov
push
ja
and
inc
push
int3
aas
adc
aaa
sbb
push
mov
sbb
add
dec
testl
or
or
cmpsl
pusha
sarl
lea
or
loope
cmp
dec
mov
add
sub
dec
shl
negl
mov
sub
pop
ljmp
mov
mov
mov
in
mov
sbb
nop
loop
mov
out
movsb
lods
xchg
push
lods
and
loop
mov
inc
adc
jge
mov
out
add
imul
arpl
aad
xor
int
nop
loop
add
pop
cmpsb
push
ret
fs
adc
mov
cmp
aam
lahf
outsl
js
xor
mov
ljmp
out
jmp
push
test
iret
add
cmpsl
lods
addr16
mov
lods
mov
xor
mov
jecxz
jnp
sbb
insb
push
rcrl
inc
sbb
mov
aam
add
in
xchg
adc
cmp
ja
push
repz
fsubrs
stos
and
mov
out
stos
sbb
dec
mov
jno
mov
cmpsb
jmp
dec
mov
mov
push
add
rclb
lock
jle
dec
cld
push
inc
push
jne
and
testl
ret
cld
add
loopne
out
vmwrite
stos
push
push
lcall
add
jp
mov
push
cmp
popf
mov
jecxz
push
adc
pop
sbb
lea
aad
nop
sub
sub
in
std
in
mov
rclb
or
in
scas
je
and
inc
mov
sbb
loopne
pop
and
cmp
gs
ret
cwtl
clc
ljmp
or
jno
push
cs
add
push
cmc
push
and
push
xor
sbb
hlt
stos
data16
mov
fstpl
cli
jnp
and
mov
roll
filds
lret
fstpt
mov
pop
in
jecxz
movsb
cmp
fcmovnb
test
fimuls
push
mov
sub
sub
pop
inc
mov
mov
sub
jbe
mov
mov
jp
xor
xchg
js
cmc
sbb
rclb
arpl
and
xor
pop
push
pop
dec
mov
push
jbe
out
fs
cmp
jb
std
inc
stos
jo
jae
push
mov
adc
shrb
inc
fisttpll
adc
aas
jae
mov
inc
in
jne
cmp
sbb
and
fmul
xchg
out
and
sub
xor
jmp
leave
test
jmp
pop
add
test
loopne
push
sub
cs
cltd
mov
dec
push
leave
jecxz
out
sbb
out
test
sti
mov
das
mov
sbb
mov
sarw
mov
cld
jno
adc
movsb
sbb
mov
inc
std
mov
pusha
gs
push
adc
sub
or
lock
and
mov
ljmp
adc
xor
add
and
cs
mov
loop
test
fists
sub
mov
add
cmp
nop
sar
out
xor
sub
add
loope
mov
jmp
iret
inc
sub
std
xchg
jne
mov
call
pop
mov
inc
rclb
lea
lods
add
cmpsb
xor
add
push
ret
mov
repz
xchg
pop
add
pop
fdivrs
popf
pop
jne
add
cmp
imul
mov
ljmp
and
dec
sub
stos
in
push
xchg
int
xchg
pop
mov
ss
je
fiadds
cli
xor
cmpsl
adc
std
fisubl
cmp
out
adc
push
mov
sub
enter
push
mov
movsb
mov
jb
push
sbb
add
jno
cs
mov
sub
cmp
into
mov
adc
out
mov
adc
movb
stos
cmp
ljmp
orb
mov
jb
push
push
fs
mov
jo
dec
imull
movsb
mov
mov
pop
sub
ja
stos
fstps
dec
lods
mov
sbb
add
jnp
jge
and
or
pop
adc
dec
pop
xchg
mov
test
jl
push
std
mov
dec
push
or
and
or
pop
push
shrb
inc
cli
in
mov
stos
push
pop
sub
sarb
subl
jg
mov
mov
bound
mov
add
add
mov
pop
jo
daa
mov
repnz
cmp
and
es
movsl
jp
cmp
test
popa
mov
scas
pop
ljmp
xor
pop
push
addl
movsb
out
mov
js
mov
xchg
ret
sarl
dec
push
fisubs
movb
xorl
fsubs
cwtl
jle
fdivs
insl
lods
mov
pop
jo
out
pop
hlt
xor
cli
pop
inc
jmp
gs
inc
test
mov
arpl
push
and
scas
unpckhps
sbb
stos
dec
sub
movsb
cmp
lods
fdivrs
aam
stos
imul
push
lret
and
push
test
loope
xchg
sub
fidivl
xchg
das
nop
push
repz
imul
xchg
pop
adc
out
inc
xchg
push
push
aas
mov
pop
in
xchg
mov
inc
lret
pop
xchg
out
jecxz
sub
inc
adc
mov
test
mov
cwtl
xchg
and
lds
pop
cwtl
xor
sub
imull
imul
sbb
xorb
fdiv
sub
lcall
fdivrs
stc
out
aam
lods
xchg
mov
adcl
mov
ja
mov
push
and
out
jnp
push
popf
in
push
fistpl
push
mov
cmpsb
in
pop
xchg
sbb
andl
add
decl
pop
outsl
bnd
test
adc
adc
xchg
ret
ss
or
push
rol
sti
lock
lock
xchg
insl
mov
cmp
mov
aas
mov
mov
pop
adc
stos
add
dec
add
arpl
ljmp
andb
flds
cmpsb
cmp
leave
stos
popf
rcrl
rolb
stos
mov
in
ficoml
or
testb
divl
lahf
fwait
pushf
jb
jae
sub
das
mov
ja
jb
shl
mov
sub
jno
xor
into
pop
jno
sub
addl
mov
xor
out
out
sub
inc
arpl
mov
or
pop
ljmp
inc
jmp
in
or
in
mov
adc
jmp
ror
popa
push
cld
out
ja
lock
pop
add
dec
adc
pop
inc
sarl
jno
stc
stos
je
xor
dec
ljmp
aas
stc
aad
and
xor
cmc
mov
jl
leave
sti
sub
and
fcmovnb
jbe
or
push
inc
or
test
shlb
repnz
scas
je
pop
loope
or
mov
lds
jnp
mov
xchg
or
repnz
inc
pop
mov
imul
xchg
dec
cld
mov
jnp
adc
xor
xchg
repnz
fcoml
jg
lret
jb
clc
ss
fs
pop
dec
cli
adc
or
iret
add
cmpsl
cld
mov
pop
arpl
sub
repz
sub
add
dec
mov
insl
xor
js
pushf
daa
mov
cli
in
imul
repnz
test
into
mov
inc
mov
sar
nop
jns
jns
inc
scas
scas
mov
rorb
pusha
cmp
push
mov
inc
adc
and
inc
pushf
push
data16
aaa
cmp
jne
mov
scas
pop
mov
push
mov
inc
fistl
sub
cmpsb
jbe
loope
add
inc
xchg
shlb
lret
insl
imul
aam
stos
sbb
fnstenv
hlt
in
xor
aam
add
cmp
cwtl
addr16
jmp
mov
std
in
mov
xchg
sahf
mov
jns
lock
mov
push
out
mov
jns
aad
jnp
cmp
mov
repnz
sbb
rorb
dec
scas
test
mov
aaa
mov
in
test
sbb
xor
cli
mov
leave
mov
outsb
aaa
mov
enter
test
or
sti
or
pop
xchg
lods
push
pop
imul
fdivr
cs
das
jg
icebp
push
adc
pop
pop
xchg
popf
cmpsb
in
mov
xor
je
sahf
test
sti
std
out
movsb
or
jl
in
jecxz
lds
test
pop
popa
insb
lret
cli
sbb
pop
pop
into
jmp
ljmp
push
stc
out
xchg
xor
mov
mov
and
sub
jecxz
mov
dec
loopne
dec
push
pop
mov
pop
dec
adc
je
lret
orl
std
sahf
sbbb
test
sub
test
lret
insl
or
shll
pop
ss
out
jo
lret
mov
insb
sub
fcoms
stos
dec
ret
test
enter
cmpb
xchg
mov
pop
mov
cmp
repnz
add
movsb
jnp
adc
cld
pusha
movsb
inc
incl
nop
lods
rcl
repz
in
push
sarl
cltd
mov
roll
sbb
pop
lahf
mov
outsl
aas
xor
std
add
pop
pushl
cmp
sti
into
enter
test
xchg
fbstp
push
jecxz
icebp
cmpsb
ljmp
mov
cmp
out
cmp
cli
jnp
mov
push
hlt
fisttps
push
arpl
adc
fcoml
les
dec
cmp
test
dec
cmp
xor
cltd
sbb
lock
fldt
stos
xchg
cmp
mov
shlb
inc
fsubs
out
repnz
dec
inc
xchg
dec
das
imul
inc
lahf
ret
mov
pop
test
or
xchg
mov
pop
stos
stos
push
ljmp
dec
fucomi
cmp
cli
pop
rorl
leave
sub
insb
sub
mov
aam
cmp
mov
push
mov
dec
and
ljmp
xchg
movsl
cli
decb
jno
lret
adc
out
orl
bound
inc
data16
pop
and
cli
rcrl
aaa
rcr
mov
scas
pop
lret
cld
inc
xchg
add
pushf
add
mov
xchg
sbbl
sub
mov
pop
mov
and
add
lret
sbb
xlat
or
dec
pop
dec
or
mov
movsb
lea
pop
or
gs
sti
mov
xor
push
mov
rcrb
push
test
fwait
jecxz
cmpsb
ljmp
pushf
jae
cmpsb
idivl
daa
cmp
lret
aam
pop
fistpll
loop
mov
push
xchg
xor
mov
clc
sub
inc
pop
popa
mov
and
aad
pushf
cmc
subb
and
add
lock
pushf
sbb
aam
and
test
sub
adc
fwait
inc
mov
dec
and
lock
mov
aas
or
or
int
jo
cmpsb
cmp
stc
in
dec
scas
inc
notb
sbb
fst
jnp
dec
mov
adc
out
sbb
test
fld
test
mov
cmpsl
aaa
pushf
and
inc
xor
pop
cs
mov
mov
sub
cmp
inc
dec
mov
repz
mov
or
stc
mov
push
out
sub
dec
mov
repnz
xor
sub
inc
cmp
jo
push
inc
add
sbb
cmc
jg
push
mov
loopne
leave
scas
mov
es
cmpsl
pop
push
xor
mov
mov
sub
nop
stc
cmpsl
cmpb
adc
mov
and
cltd
rclb
fmuls
xor
ret
and
cwtl
ss
xchg
int
mov
scas
pusha
loopne
or
lahf
lods
lea
out
ss
rcll
dec
xchg
push
clts
mov
fmuls
inc
jecxz
adc
jns
es
ret
and
pop
or
int3
sbbb
popa
jb
dec
sti
inc
scas
adc
adc
jmp
arpl
jl
mov
push
movsb
mov
mov
xchg
js
push
cmc
arpl
call
mov
and
mov
cmpsl
sbb
xchg
sti
je
lret
xor
fwait
mov
inc
add
sub
fwait
cmp
enter
or
leave
xor
pusha
prefetch
adc
pop
sub
fisubs
bound
lahf
mov
jmp
aaa
clc
jle
stos
movsb
pop
jge,pn
inc
scas
sub
into
adc
insb
jne
out
cmpsl
xchg
shr
mov
loop
decb
add
aam
pop
js
jno
cmp
mov
jle
dec
or
popa
dec
xor
mov
outsb
ds
dec
test
ss
call
lahf
jl
mov
cmp
mov
iret
sub
adc
scas
jp
lret
sub
inc
sub
mov
inc
clc
hlt
mov
ja
popa
cltd
ljmp
shrl
pop
sbb
pop
sub
sahf
mov
mov
jo
xor
orb
cmpsl
aas
aaa
inc
in
push
fistpll
data16
push
inc
mov
into
icebp
xchg
xchg
or
adc
mov
cmp
pop
or
stc
and
gs
jecxz
dec
adc
jmp
or
jae
call
inc
lods
jns
push
mov
add
lret
imul
es
inc
sub
or
or
cli
fwait
mov
test
mov
or
loop
cwtl
jmp
inc
jg
daa
jg
je
xor
push
inc
ret
mov
mov
mov
xor
ret
out
out
test
outsb
fnstcw
lcall
repz
in
out
adc
repz
jl
add
sub
push
in
dec
into
xor
dec
push
mov
push
fs
mov
push
sbbl
adc
mov
xor
in
enter
or
xor
jae
and
adc
or
in
scas
test
jbe
dec
aam
sahf
rclb
push
in
pop
je
idiv
inc
add
ds
out
sbb
pop
scas
roll
sbb
mov
out
xor
clc
add
les
stc
jbe
xchg
movsl
fistpl
cltd
daa
sbb
addr16
mov
sbb
ljmp
loopne
inc
xor
stos
mov
jge
push
or
lret
push
mov
out
test
sbb
insb
neg
xor
pop
inc
in
lods
mov
jge
int3
mov
rcl
xchg
rcll
mov
cmp
std
sbb
imul
loop
pop
scas
adc
mov
call
xchg
sbbb
jns
iret
aas
push
ffree
gs
inc
loopne
push
bound
pop
inc
adc
jb
daa
and
out
das
inc
mov
cmpsl
mov
xlat
lea
out
in
mov
jl
test
btc
fistpl
jb
sub
insl
pop
loop
push
and
daa
dec
mov
idivl
pop
test
or
adc
push
pushf
add
loopne
cmp
mov
xor
fadd
xchg
pusha
aad
jns
hlt
cmp
or
loop
es
dec
nop
aam
mov
mov
push
dec
push
cs
mov
cmpb
xchg
jp
mov
add
lahf
mov
out
cmp
imul
das
sub
inc
ja
cmpb
loope
jb
sub
cmp
or
lret
mov
push
cld
fdivrl
xor
mov
cltd
out
fwait
les
js
cmp
es
repz
push
inc
xchg
inc
repz
stos
rcll
dec
iret
std
add
into
gs
push
dec
cli
outsl
mov
mov
int3
loope
mov
addb
enter
stc
pop
out
aam
sub
mov
lock
mov
and
mov
jae
mov
fistps
loope
das
or
gs
movsb
lret
mov
jb
pop
mov
in
addr16
xlat
cltd
insl
fisttpl
jb
sbb
jae
orl
adc
xorb
aaa
rol
cmp
pop
xchg
and
xor
and
dec
in
cld
cmpsl
inc
dec
fimuls
loop
fwait
test
cmp
push
pop
mov
lcall
xchg
movsl
into
mov
pop
scas
int3
push
lret
mov
sbb
pop
cmp
cwtl
das
mov
enter
jmp
sbb
lcall
push
add
pushf
mov
nop
xor
addl
out
xabort
push
into
push
in
jmp
mov
test
jns
mov
mov
jle
sbb
rcl
iret
repnz
jb
iret
push
mov
scas
imul
idivl
in
xor
inc
jl
inc
and
lds
dec
push
cltd
push
rolb
stos
call
orl
cmpsb
xchg
clc
andl
cli
inc
std
icebp
adc
shlb
mov
pop
and
popa
insl
mov
mov
lret
dec
pop
push
aaa
icebp
arpl
or
dec
pop
leave
sub
orb
cmpsl
dec
lcall
pop
mov
call
movsl
imul
js
mov
in
out
cmp
and
sub
orl
xlat
sub
mov
cmp
xchg
or
sub
pop
fildll
fidivs
sbb
lahf
stc
shll
add
loopne
pop
sarl
xor
test
pop
jbe
dec
js
mov
add
xchg
and
cmc
or
push
cmc
xchg
push
outsl
dec
inc
jno
xor
cmp
pop
pop
jnp
jae
mov
lea
test
mov
cltd
mov
jmp
xor
add
sbb
push
xchg
enter
and
jne
shll
dec
push
pusha
cmp
xlat
lock
cmpsb
adc
sbb
stos
xor
sub
or
jns
mov
push
aaa
jne
pop
out
pop
out
xchg
mov
adc
pop
inc
add
dec
popf
adc
and
cmp
pop
mov
jb
mov
mov
push
push
and
cltd
xchg
ljmp
jp
pop
mov
mov
jmp
xor
dec
or
fs
adc
pusha
inc
xor
pop
pop
dec
inc
xchg
pop
pop
cmp
pop
dec
rorb
sti
xor
ja
stos
fs
jo
jns
stc
push
xchg
add
sub
pop
hlt
push
inc
das
mov
stos
es
fnsave
push
add
pusha
pusha
dec
inc
jg
loope
pinsrw
outsl
scas
addb
sar
mov
sti
jns
inc
push
adc
cmp
ljmp
out
jmp
scas
movsl
arpl
and
dec
mov
xchg
in
pop
test
mov
push
sbb
xor
inc
fcomi
dec
mov
push
mov
pop
xchg
push
push
test
cmp
and
pop
push
out
pushf
push
popf
inc
dec
lcall
frstor
mov
out
sub
subl
cmc
add
aad
sbb
into
sbbl
jo
xor
jecxz
scas
jle
ds
insb
jno
cmpsl
fmull
xchg
mov
imul
lods
les
mov
mov
stc
mov
lock
xchg
jmp
mov
dec
cmp
adc
fdivrl
iret
and
push
movsl
ja
popa
dec
pop
jae
adcb
or
adc
vfmaddsub231pd
insb
xor
add
push
arpl
insl
lahf
mul
out
mov
mov
mov
andb
in
xor
jp
mov
stos
pop
ret
pop
sub
and
rcl
cli
cmp
insb
lock
pop
add
imul
and
mov
mov
mov
outsl
aam
jnp
jg
inc
mov
aad
dec
jl
sbb
push
flds
pop
fmull
jg
aaa
sbb
adc
sbbb
jbe
bound
int3
mov
inc
cmp
mov
cmp
xlat
ret
pop
pop
lods
or
lahf
es
push
arpl
dec
pop
add
mov
jl
inc
sub
or
mov
mov
cmc
sbb
jbe
roll
dec
pop
pushf
pop
sub
lret
sub
ss
and
push
loope
clc
clc
in
jge
into
js
fisubrl
pusha
mov
mov
in
in
jp
lcall
notb
push
add
jmp
jo
jns
loopne
mov
nop
cmp
shrb
push
lret
lods
pop
loop
pushf
popf
sarl
mov
pusha
mov
xlat
xchg
jnp
in
lods
and
push
mov
test
xor
out
lea
xor
or
sub
mov
mov
bound
ja
jl
mov
xlat
in
jo
adc
or
cmpsl
scas
dec
aam
lahf
arpl
insl
xchg
inc
inc
fsubr
dec
mov
loopne
out
enter
push
rorb
jg
int
les
mov
sub
out
cltd
jecxz
or
xor
lds
subl
adc
mov
out
jp
and
fisubs
pop
cwtl
lods
outsb
loopne
pop
xchg
mov
jo
ss
sbb
mov
push
icebp
nop
in
xor
jbe
dec
push
pop
out
push
adc
xchg
clc
mov
mov
dec
jo
dec
pop
cmp
mov
daa
popa
cmc
sbb
test
fwait
and
mov
int
push
add
xor
out
fsts
pop
sti
in
sbb
mov
out
pop
pop
ja
cmp
cmpsl
lods
or
sub
pop
jo
ss
insb
imul
or
lock
in
push
insb
mov
lcall
pop
xlat
aaa
in
and
rcrb
int
repz
add
xchg
loope
pop
imul
imul
aaa
mov
mov
jnp
xchg
loope
cmp
aas
lds
scas
adc
lods
cmp
movsb
inc
pop
mov
dec
pop
aas
mov
mov
jg
mov
jge
outsb
adc
push
lods
xchg
xor
fiadds
push
jo
pop
or
cmp
rorb
cltd
jecxz
insl
push
cmp
xchg
add
pop
lret
xchg
sub
pop
and
sub
enter
es
mov
addr16
or
stos
pushf
dec
ret
frstor
cltd
fs
mov
sub
pop
jns
jno
push
ret
repz
lds
shl
mov
or
nop
rol
and
mov
movzwl
pushl
mov
xchg
push
ret
pop
imul
fiaddl
dec
jg
or
mov
shrl
adc
dec
lods
mov
sbb
mov
push
jmp
stc
or
fisubrs
clc
mov
inc
push
push
pop
or
movsb
cmp
sbb
mulb
test
nop
mov
repz
add
lret
adc
pop
outsl
mov
daa
dec
fimuls
push
repnz
push
mov
xor
mov
push
jecxz
sbb
leave
mov
icebp
into
mov
add
and
out
dec
jne
ret
in
pop
cmc
rorb
xor
lret
ds
lahf
dec
bound
fcmovbe
test
int
jg
xor
cmp
or
cmp
sub
adc
and
arpl
jl
les
inc
mov
mov
shrb
or
cmpsl
mull
outsl
lret
lcall
outsl
xchg
adc
cltd
out
mov
je
ffree
pop
and
add
nop
cmp
push
and
sbb
xchg
rorb
or
push
cmp
les
in
aam
xor
orb
inc
bound
stos
lahf
mov
std
cmc
hlt
rclb
fucomp
clc
sub
dec
push
pop
dec
xor
push
adc
sbb
icebp
mov
stos
sub
dec
repz
jcxz
testl
mov
test
fimuls
jnp
repnz
inc
add
jecxz
sbb
mov
stc
jl
sbb
mov
in
loop
loop,pt
inc
xor
pop
push
xlat
stc
mov
loopne
jl
push
xchg
in
cmc
int
inc
arpl
dec
push
mov
aaa
iret
xor
pop
fidivrs
cmc
adc
pop
aas
cli
pop
icebp
test
xor
cwtl
dec
jno
push
and
aas
jo
and
jmp
jmp
aaa
lds
push
xchg
pop
xlat
stos
pop
nop
inc
and
push
out
in
and
xor
mov
mov
pop
adc
rorl
sti
inc
rcll
jmp
cmp
xlat
sub
jmp
cmc
jge
ret
insb
cltd
addr16
or
mov
aaa
adc
imul
adc
js
mov
dec
fiaddl
icebp
rol
mov
mov
mov
and
pusha
test
aaa
aad
adc
out
sub
mov
mov
test
daa
roll
cmp
xor
xchg
aas
imul
mov
insb
test
mov
push
in
daa
cmp
in
jae
shl
aaa
and
or
ficompl
add
out
dec
mov
fnstcw
arpl
es
in
cmpsb
mov
sbb
js
lret
outsl
and
je
gs
and
or
cs
sub
sbb
loop
lds
in
cmp
shlb
loope
or
adc
lret
dec
lods
dec
dec
push
lods
pusha
jo
hlt
sbb
sbb
inc
fdivl
stos
sub
test
sbb
mov
jp
jl
push
lret
movsb
dec
cmpsb
cs
xchg
sti
or
fcomps
adc
insb
ja
push
subb
fistl
ljmp
aad
jo
das
add
loopne
fsubp
pop
ljmp
jmp
cwtl
or
pop
nop
clc
fs
sbb
jo
mov
jb
pop
mov
mov
add
mov
xlat
clc
lock
mov
or
mov
or
mov
loopne
add
stos
dec
dec
sbb
pop
dec
dec
add
test
mov
jb
fcoml
stc
repnz
out
inc
fs
popl
inc
mov
sbb
das
push
sub
inc
mov
cmp
rcrb
das
jne
add
cld
push
or
stos
leave
adc
pushf
lret
lock
xchg
lods
lds
xchg
ss
sub
pop
ja
jmp
sub
pop
cmp
es
add
xchg
or
or
cmp
push
mov
xchg
out
xlat
push
sbb
cmp
xchg
stc
pop
decb
xchg
cmp
jl
dec
std
xor
adcl
pop
jle
fsubr
mov
push
lds
sbb
les
pop
in
faddl
lds
lods
aaa
insl
out
pop
sti
mov
out
shl
push
sbb
dec
cli
movups
pop
scas
andl
cltd
gs
cltd
cld
arpl
jle
pop
bnd
mov
sbb
movsb
js
xchg
xor
outsl
pop
fstps
das
ja
outsl
push
pusha
cld
in
mov
mov
lret
jle
inc
add
out
push
ret
in
mov
push
das
fbstp
pop
movsl
or
lods
seto
add
clc
addr16
daa
fisttpll
sbb
jl
ret
add
fs
out
pop
push
sub
ss
shll
jbe
shr
add
xchg
mov
lea
hlt
cli
test
xor
xor
hlt
pop
iret
adc
dec
push
in
cmpsb
fnstenv
jns
lahf
test
mov
das
inc
pushf
adc
mov
pop
sbb
pusha
clc
adc
add
dec
imul
stos
or
mov
push
pop
push
stc
push
sahf
jae
cmp
push
dec
fcomps
mov
cwtl
sub
cmpl
add
movsb
xor
clc
sbb
dec
mov
lret
and
cli
push
or
mov
sbb
add
pop
lret
ds
xchg
scas
aas
aas
popf
cmp
jl
xor
test
mov
pop
sbb
jne
clc
xlat
lret
pop
xor
cs
sub
out
rcrb
and
inc
je
pop
sub
or
xchg
fdivr
fcmovb
inc
and
mov
out
cld
test
cmpsb
xor
sub
mov
jle
jl
inc
in
mov
addr16
jge
jle
sbb
lret
aas
arpl
mov
inc
sub
push
push
push
mov
testl
xor
hlt
sub
mov
add
push
xchg
xor
stos
iret
jl
mov
ss
adc
cwtl
or
xchg
clc
das
andl
and
jo
loop
ja
xor
inc
push
lahf
fldl
ljmp
adc
stos
idivl
lods
cli
mov
out
out
add
push
dec
jg
cmp
test
shlb
popa
mov
jne
sahf
push
ss
pop
and
pop
jp
pop
mov
leave
mov
scas
rorb
loope
mulb
dec
add
push
push
out
pop
stos
push
add
xchg
mov
jb
or
aaa
mov
stos
imul
fstpl
push
mov
add
xor
enter
inc
mov
jae
jp
addr16
daa
pop
and
sub
sub
int3
je
dec
enter
aam
inc
mov
mov
sub
and
mov
push
sub
imul
in
sbb
fsubrs
pusha
rolb
cwtl
test
mov
pop
and
outsb
pop
inc
jmp
subb
outsl
mov
das
mov
mov
mov
mov
popf
jne
js
sbb
arpl
cmp
mov
mov
pusha
in
jne
mov
lret
or
jns
push
hlt
jns
cwtl
push
in
push
arpl
and
cmp
pop
loop
push
movsb
inc
jo
andb
fs
lret
adc
xor
roll
add
push
vpshlb
fbstp
imul
push
cmpsb
testb
push
pop
and
xchg
push
inc
jno
call
subl
iret
jge
dec
mov
inc
enter
lods
push
mov
mov
xchg
test
std
jp
dec
mov
mov
loop
stos
sub
cltd
sub
pusha
push
mov
xchg
aad
shlb
jnp
rcll
mov
push
jg
arpl
rclb
lock
push
adc
pop
push
mov
insl
in
cld
mov
jns
pop
test
xor
inc
push
testl
cs
ja
lret
sahf
pause
fwait
js
and
xor
clc
rcl
fcompp
mov
inc
lret
aam
andnps
xchg
pusha
stc
jecxz
mov
test
rolb
data16
shrl
fidivrs
fmull
push
cld
pop
js
sub
xchg
into
es
dec
aas
xor
pop
into
pop
rclb
cmpsb
std
mov
sub
jl
or
inc
and
int3
mov
mov
out
mov
jl
insb
subb
ror
adc
aad
mov
push
inc
int
lea
sbb
mov
jo
shrl
adc
jl
dec
xchg
or
mov
add
in
call
call
popf
dec
mov
stos
imul
mov
mov
and
roll
sbb
adc
add
dec
or
into
pop
push
adc
repnz
insb
sub
pop
jge
jne
rorb
pop
out
cld
mov
add
ss
cld
into
add
andl
nop
shr
lods
inc
cmp
mov
fsub
gs
mov
sub
fstpl
pop
std
mov
add
push
incb
xor
stos
arpl
sub
sub
in
fcmovu
daa
jp
mov
jle
in
lret
jmp
test
or
jo
in
mov
jne
mov
popa
push
pop
xchg
sbb
cmp
in
push
or
test
orb
xchg
push
and
push
jnp
sub
repnz
push
jo
testl
movsb
dec
add
dec
dec
movl
ret
sahf
push
sub
add
or
jecxz
inc
and
cmpl
jecxz
mov
mov
aad
test
pop
cmp
les
mov
mov
pop
mov
push
ror
push
nop
repz
add
add
cs
push
xchg
mov
add
dec
mov
mov
notl
sbb
jmp
mov
enter
pop
lds
and
jmp
sbb
mov
inc
cmp
push
xchg
and
inc
mov
stos
push
adc
jbe
int3
pop
inc
mov
mov
sbb
cmpsl
test
aad
lcall
mov
xchg
mov
pop
inc
fcompl
jmp
or
loop
fucomip
or
mov
je
aam
sahf
idivb
mov
test
ja
push
ljmp
sub
pop
push
xchg
leave
lods
test
xchg
sahf
cltd
enter
rclb
sbb
movsl
sub
inc
xor
outsb
cmp
pop
cltd
inc
loop
jae
enter
mov
adc
scas
mov
je
sub
pop
pop
mov
pop
out
jbe
inc
cmpsl
cmp
dec
inc
lret
inc
daa
pop
jl
inc
lods
nop
sahf
xor
out
lods
bound
sbb
fcompl
mov
pop
popa
xchg
adc
js
in
xor
mov
nop
xchg
jbe
rcrb
jecxz
mov
xor
ret
fwait
ja
and
outsb
repnz
sti
jle
inc
or
shll
push
push
adc
pop
subl
test
push
inc
xor
xchg
pop
sti
lcall
dec
adc
lds
pop
cs
pop
fisttpll
jbe
dec
jnp
inc
xlat
repnz
dec
movsl
sbb
xchg
daa
pop
fstpl
fbld
xlat
dec
pop
cwtl
cmp
lods
jmp
and
aam
in
rclb
mov
dec
es
cwtl
sub
mov
add
fisubl
xorb
mov
pop
xchg
pop
sbb
mov
jle
ficomps
and
mov
cmp
cmp
and
xor
jns
mov
mov
popf
scas
aad
mov
mov
ret
xchg
mov
cmp
mov
roll
jge
sub
sub
pop
xchg
insl
cmc
fistpll
mov
das
push
scas
jecxz
and
rol
shrb
lea
inc
lods
movaps
mov
pop
mov
xor
pcmpeqd
dec
stos
popa
repz
fimull
daa
inc
adc
mov
inc
pusha
cvtpi2ps
dec
mov
adc
daa
pop
in
popf
test
int3
or
cmp
mov
inc
js
inc
aad
lea
stos
pop
mov
add
or
add
sub
addb
dec
sbb
mov
loop
pop
and
cli
shrl
jne
dec
ret
aaa
insb
shll
push
dec
mov
push
add
aas
das
negl
fs
sub
add
cmpsb
sbb
stc
add
jno
loopne
mov
int
or
mov
or
add
pop
add
ret
cmp
test
fwait
dec
xor
orl
inc
out
sbb
jo
adc
push
inc
sbb
aas
cmp
push
xor
ja
aas
inc
in
out
adc
repnz
pop
xchg
scas
jb
jnp
or
sqrtps
add
or
sub
xchg
or
call
adc
and
or
shl
rcrb
and
sub
orb
sub
and
or
and
adc
or
mov
mov
jno
clc
sti
cmc
stos
sahf
dec
cmp
dec
insb
fdivrp
sub
jb
mov
idivl
in
test
or
insl
adcb
outsb
rcrb
sub
mov
clc
int3
xchg
cld
xor
push
popa
xchg
clc
fmuls
test
aam
push
sub
imul
cmp
test
adc
add
loopne
fcomps
ret
sub
movq
add
mov
adc
jne
popf
adc
bound
bound
adcb
sbb
mov
movsb
addl
mov
sub
push
mov
jge
mov
lods
out
push
cmpsl
adcb
sarl
cmp
cltd
mov
js
xchg
push
mov
and
scas
jno
sbb
jo
adc
pop
mov
call
jns
pop
outsb
std
inc
jecxz
mov
lret
arpl
hlt
in
roll
add
sti
add
or
dec
mov
cltd
or
sahf
xor
insl
jmp
mov
xor
xchg
popa
popa
sbb
mov
and
push
mov
aas
mov
jno
loope
xchg
mov
int
insb
ss
pop
ljmp
repnz
cmp
push
out
popf
fs
push
and
adc
jne
out
jge
daa
sarb
adc
ffree
jl
das
dec
out
inc
push
and
sbb
push
test
jno
dec
sahf
or
mov
andb
sbb
ss
lods
testl
xor
shl
add
testl
popa
add
int
jmp
cmpb
mov
imulb
repz
test
fisubs
idivl
xchg
arpl
sub
jge
ret
add
fistl
or
sbb
stos
rcrb
rorb
pop
roll
sbbb
and
push
mov
int3
add
or
popa
xchg
stos
add
cmp
loopne
mov
clc
cwtl
ret
or
fwait
dec
lcall
ficoms
pop
pop
push
lods
xchg
nop
mov
sub
inc
shll
out
cs
clc
mov
adc
jmp
bound
cs
adc
xchg
int
adc
add
test
sahf
jmp
scas
mov
mov
cld
cld
dec
inc
data16
outsb
dec
adc
inc
pop
cmp
mov
mov
add
inc
jecxz
adc
test
or
imul
mov
out
pop
cmpsl
js
or
aas
adc
jecxz
cmpsb
dec
dec
xlat
ret
add
pusha
sbb
dec
int3
fwait
inc
loope
and
xchg
jae
adc
jno
gs
mov
mov
xor
test
test
xchg
popf
adc
pop
or
mov
inc
dec
inc
insb
jae
ret
pop
js
push
scas
mov
xor
es
pop
rcll
xor
sarl
movsl
xor
cli
movsb
mov
movb
sbb
dec
xchg
mov
sbb
or
dec
xlat
movsl
xchg
or
xchg
and
mov
pop
jle
xor
lahf
test
ss
mov
rep
out
jmp
xor
mov
dec
das
sti
dec
shlb
hlt
in
jns
hlt
in
in
test
push
xchg
cmp
in
xchg
push
outsb
add
inc
and
jbe
xor
dec
and
je
call
xchg
mov
ret
int3
lock
fs
push
adc
roll
cmp
pop
int
aaa
or
inc
push
loop
inc
sbb
aaa
cmp
sub
and
pop
dec
or
dec
inc
mov
nop
out
stos
sti
ret
popf
or
call
push
mov
xor
adc
xlat
sbb
adc
ds
popf
mov
pusha
cmp
add
int
lcall
jnp
xlat
inc
inc
and
mov
gs
sub
mov
addl
not
out
and
enter
xchg
sub
sbb
xor
popa
jle
dec
push
push
jmp
sub
mov
or
jg
notl
inc
daa
daa
test
mov
cmp
mov
movsl
dec
sbb
pop
push
hlt
push
cs
repz
xor
dec
stos
lret
dec
out
popa
cmp
ficoml
mov
mov
leave
xchg
xchg
jg
jb
jne
mov
push
push
dec
or
push
aam
loop
sub
imull
jo
push
cmp
pop
adc
mov
jmp
mov
jo
subl
outsl
mov
fsts
jb
fsubrl
aad
jae
sarb
je
adc
sarb
test
rcrb
ret
push
or
fcompl
ds
stos
fcoms
lret
pop
negl
pop
add
scas
mov
fisubl
lock
fmull
bound
cld
or
xor
dec
adc
gs
daa
iret
stc
cmpsl
ficoms
add
adc
stos
out
ja
sub
jg
jecxz
and
adc
inc
rolb
pop
lret
sub
test
and
jb
jo
mov
aad
fcmovnb
add
xor
add
lds
shlb
jmp
lahf
leave
fisttpl
jns
jmp
leave
out
sbb
or
repz
xor
add
and
rolb
arpl
int3
pushf
fmull
or
int
push
test
pop
inc
scas
ljmp
cmp
jb
fsubs
dec
cwtl
adc
push
inc
mov
dec
out
cmpsl
fisubl
mov
arpl
stos
dec
xor
fsub
cmpsb
jnp
daa
add
jbe
arpl
and
cmc
inc
shlb
popf
xchg
sbb
lods
adc
iret
test
push
test
loope
adc
fdivrl
jo
pop
dec
int3
fwait
icebp
mov
shrb
mov
fcmove
push
dec
popa
push
mov
insb
sub
pop
in
jmp
stos
out
mov
test
movsb
add
jl
or
mov
scas
or
sarl
mov
out
adc
out
push
je
ret
adc
in
sub
push
bound
sub
addr16
out
pushf
js
inc
aad
xchg
fwait
jmp
int3
push
arpl
mov
lods
pop
push
mov
fcoml
push
ret
or
xor
int
inc
fs
lods
inc
std
dec
pop
jge
pop
es
push
sub
arpl
cltd
lock
xlat
pop
testl
nop
push
and
cld
sar
cmp
std
pop
mov
out
cwtl
in
hlt
push
inc
lods
push
cmp
mov
aam
mov
xor
lret
add
or
ja
outsl
inc
outsb
add
filds
in
ljmp
push
cmp
mov
pop
push
loope
pop
fstpt
mov
fsubs
fwait
ljmp
push
push
inc
mov
mov
sbb
fwait
adc
adc
jo
mov
mov
into
xlat
iret
sar
loope
cmp
and
lea
fcomps
jae
dec
stos
stc
sarl
dec
cld
mov
std
test
push
lret
lcall
test
pop
movsl
movsb
rcrb
arpl
lods
fdivs
bound
mov
mov
idivb
xchg
inc
push
popf
loope
fadd
cli
jg
jae
mov
clc
fildll
push
add
dec
gs
insl
inc
push
mov
adc
mov
sbb
in
lret
jp
push
mov
mov
lods
out
fdiv
das
ret
jb
jg
cltd
adc
fcomps
xor
dec
sbb
xchg
push
push
or
outsb
or
jbe
outsb
cwtl
or
loop
mov
fstpl
stc
cmp
iret
out
cltd
xchg
cld
push
leave
add
cld
movsl
les
ret
inc
sbb
mov
mov
mov
fcoms
mov
sub
pusha
movsb
jbe
cwtl
roll
mov
ljmp
lcall
xchg
stos
mov
shrb
mov
daa
cli
je
int
lods
pop
dec
jmp
sub
jbe
faddl
lea
mov
mov
push
data16
fsts
or
daa
or
cmp
and
xchg
xchg
adc
add
fcoml
lahf
call
inc
push
dec
ja
sbb
sbb
inc
outsl
popa
pop
repz
aaa
or
sbb
sbb
cmp
push
add
and
pop
adc
cmc
pushf
aas
jae
popf
cwtl
jo
loope
in
ss
adc
sub
ja
stc
and
xchg
std
loope
aas
insl
or
cmp
daa
out
jmp
ss
int3
mov
rcll
icebp
xor
push
inc
int3
test
cwtl
clc
aam
in
push
inc
push
pop
insl
jmp
out
in
loop
cmp
inc
mov
sbb
xor
inc
out
mov
je
insl
scas
and
inc
in
xor
xchg
mov
or
mov
and
es
push
xchg
push
jle
mov
fwait
mov
arpl
test
xchg
stc
pop
dec
iret
mov
xor
pop
xchg
inc
push
pop
testl
pop
push
inc
jg
das
jno
and
dec
loop
nop
aam
fs
adc
out
or
cs
sub
ljmp
into
rorb
test
push
addr16
rcrb
push
and
fsubrl
lds
mov
cld
dec
ljmp
push
lahf
leave
data16
inc
shl
lcall
lcall
je
add
mov
pop
sti
cmp
jle
orb
sub
int
test
sbb
jp
cmp
in
sub
andb
pop
push
scas
push
push
decb
out
push
insb
pop
push
fnstsw
jns
xchg
push
pop
push
and
cmp
es
push
js
pop
movd
nop
add
xor
dec
test
sti
test
icebp
cmp
cltd
adc
aas
and
inc
pushl
dec
imul
push
and
push
lock
push
inc
in
jbe
mov
mul
call
sbb
in
scas
daa
adc
insl
aas
leave
push
dec
adc
popf
push
pop
xchg
dec
aas
je
xlat
aas
push
add
les
sti
out
sub
rorl
loop
cmp
test
sahf
ljmp
mov
das
push
shrb
pushf
mov
jp
daa
inc
sbb
divb
aaa
jae
adc
xor
inc
enter
sbbb
test
sti
mov
fwait
lock
and
jge
in
jle
outsl
popf
clc
or
es
gs
push
mov
xor
and
add
dec
inc
rcl
std
sub
insb
jmp
jecxz
jmp
xor
and
roll
pop
push
or
pop
pop
inc
lcall
sub
int3
orb
js
cmp
pop
push
cmp
ret
sbb
push
push
andb
sub
hlt
or
sub
adcl
out
mov
sub
push
xor
aas
dec
xchg
loope
xor
shlb
jg
enter
fnstcw
ret
stos
lock
pop
icebp
fs
mov
loopne
xchg
cwtl
dec
fcoml
ret
dec
inc
cwtl
jnp
and
jbe
cmp
dec
imull
sub
adc
xor
popa
jo,pt
jae
shlb
lds
lret
sub
mov
in
fnstenv
out
clc
int
cmpsb
lret
into
jnp
inc
jne
xchg
shrl
cmpsb
fidivl
xchg
and
mov
and
lock
in
dec
inc
lret
xor
fwait
int
jbe
imulb
push
mov
sbb
sbb
sbb
cmc
outsl
aaa
mov
mov
sbb
sub
jno
add
push
mov
jo
sub
or
and
ss
jle
pop
add
mov
dec
in
arpl
adc
ljmp
and
xor
aaa
inc
mov
mov
jbe
sub
xor
jns
pop
sub
xor
dec
cmp
in
push
or
dec
fdivr
fnstenv
lret
test
leave
xor
mov
sub
mov
xchg
pushf
xchg
pop
xchg
cli
mov
popl
cmp
daa
cmp
jecxz
mov
xchg
jno
fucomip
popf
repnz
outsb
sbb
xchg
push
cwtl
mov
mov
jg
rolb
pusha
pop
push
sti
sub
loopne
add
mov
push
inc
inc
jle
insb
aaa
adc
in
inc
push
stos
or
lcall
aaa
jle
push
das
lea
pop
xchg
sub
inc
in
sbb
jp
inc
and
lret
jns
jge
inc
push
lds
push
mov
jmp
adcl
sub
arpl
push
repnz
fwait
lock
sbb
fcoml
pop
pop
adcb
int3
ret
ljmp
or
push
ljmp
jbe
ret
mov
pop
xchg
jge
mov
out
push
imul
mov
jg
aam
mov
outsl
mov
jg
ja
clc
into
inc
or
rcll
nop
push
fdiv
push
push
ret
loop
idivb
sub
push
imul
fnsave
test
ret
and
jno
daa
cmove
je
sbb
rolb
loopne
fmull
cmp
push
mov
pop
jge
stos
shlb
sub
addb
jae
inc
adc
sub
adc
repnz
cmp
cmp
loop
in
xchg
or
xchg
outsb
pop
jae
icebp
xor
mov
outsb
push
iret
inc
icebp
cmp
xor
sub
fildll
mov
sbb
xchg
je
and
jno
mov
mov
aaa
repz
pop
outsb
sub
mov
sub
lds
lods
addb
cmpsb
dec
fistpll
pushf
leave
fnstcw
cs
add
fnstenv
cmp
mov
and
scas
sbb
scas
mov
jg
pusha
push
mov
add
adc
fsubrl
outsl
jmp
push
add
repnz
lods
and
in
and
decb
xchg
jns
xlat
or
cs
mov
jae
sub
sbb
cmc
gs
add
gs
ss
add
lock
nop
adc
mov
inc
inc
mov
dec
mov
xchg
std
mov
xchg
jecxz
mov
pop
xchg
rcll
repnz
mov
insb
loopne
dec
xlat
jae
inc
repz
cmc
std
sbb
ss
push
pusha
xchg
in
lret
or
dec
int
push
xchg
inc
adc
subb
iret
fdivrl
mov
xchg
shl
popf
testb
cmp
or
xchg
jge
push
add
mov
and
pop
out
mov
mov
loop
pop
jp
cld
sti
jmp
add
lods
jg
or
add
idivb
out
mov
stos
sbb
outsb
sub
das
mov
ss
add
movsb
jmp
fimull
icebp
loope
fxch
scas
movsb
jae
mov
cld
fcomi
jb
fwait
cs
lds
lret
data16
int3
jecxz
and
or
in
dec
in
sub
mov
leave
fldenv
pop
out
mov
push
inc
dec
lret
int
pop
jp
pop
lcall
mov
pop
mov
lea
subl
cs
xor
lea
out
xlat
out
iret
xchg
xchg
xchg
fdivrl
push
xchg
pusha
es
jg
shll
xchg
pop
cmp
mov
daa
mov
sbb
cld
movsb
sub
push
fs
cltd
jne
pop
subl
jmp
int3
sub
add
pop
out
outsl
idivb
cmp
mov
jns
cmp
jg
mov
sahf
inc
cs
xor
pop
push
sub
sbb
fildl
pop
pop
dec
mov
add
ret
or
insb
push
mov
push
nop
popa
fucomi
iret
xchg
mov
daa
insb
test
addb
cmp
xor
ret
das
insb
xchg
out
xlat
mov
setae
xor
lods
fnstenv
add
add
inc
ret
inc
push
cwtl
dec
pusha
das
mov
inc
enter
and
into
mov
push
xlat
ret
into
mov
mov
mov
sbb
aaa
out
mov
xor
sub
mov
inc
mov
push
and
mov
es
mov
aas
int
fdivr
add
xor
sbb
leave
daa
mov
in
js
add
inc
pop
test
leave
pop
or
or
jmp
call
add
cmp
adc
and
push
popf
mov
fstl
dec
cmc
and
leave
in
out
stos
js
dec
push
or
add
and
push
and
sub
repnz
test
movsb
fcomip
in
mov
jecxz
outsl
inc
jo
icebp
inc
inc
ds
cmpsb
pop
scas
aaa
xchg
in
jmp
fwait
or
test
mov
out
or
push
adcl
out
mov
inc
pushf
pop
add
ret
popa
loope
movsl
jae
cltd
mov
data16
add
xor
or
cld
push
jl
scas
insb
test
cmp
mov
sub
fmuls
sbb
fwait
les
nop
push
into
cld
out
mov
test
lock
add
ror
inc
iret
mov
subl
popa
int
xor
les
ds
jle
ljmp
mov
and
test
jmp
fdivr
pop
inc
fadds
jmp
push
inc
jb
popa
ret
mov
ret
fwait
in
mov
pop
jecxz
mov
jg
xchg
jecxz
into
xchg
cmpsl
push
rcll
lock
cmp
xchg
or
push
outsb
movsb
pop
leave
and
test
shll
into
out
ds
das
dec
insb
loop
add
cmp
mov
sahf
or
cmp
pop
mov
xchg
fwait
pop
pop
outsl
mov
in
jp
xchg
xchg
pushl
xchg
sbb
jmp
clc
loop
sub
je
jecxz
add
adc
mov
dec
pop
mov
mov
inc
inc
orl
xchg
sub
les
int3
adcb
ja
test
adc
sub
ja
dec
nop
pop
out
insb
mov
pop
inc
jmp
insl
out
ret
fimull
mov
cmp
cli
sbb
daa
iret
jo
inc
in
lret
popf
pop
xor
stos
ret
sbb
pop
rol
ret
arpl
aas
pop
xchg
pop
sub
mov
sub
sub
add
aad
pop
mov
in
jnp
popf
xchg
push
rcll
sub
push
cmpsb
or
sub
dec
push
test
jno
inc
push
add
shll
add
push
sti
clc
test
xor
xor
pop
into
std
mov
or
paddsb
pusha
push
jae
mov
fcmovnb
loop
shll
les
ss
lds
mov
dec
dec
push
add
cmp
mov
xchg
fnstenv
mov
and
push
lahf
gs
repnz
sbb
cmp
pop
gs
sahf
lock
loope
adc
or
pop
or
mov
push
iret
cmp
and
and
jb
lea
cmp
shl
cmp
inc
inc
sub
cmp
push
push
and
push
dec
mov
mov
mov
or
inc
push
popa
out
push
jbe
mov
pop
sbb
adc
inc
movl
enter
dec
or
push
jnp
jp
cmp
xor
enter
bnd
dec
std
gs
das
xchg
sub
dec
pop
lahf
cmp
lods
insb
jno
xchg
sahf
cmp
jo
ja
and
pushf
mov
mov
xchg
sub
lds
imul
and
dec
lods
lcall
aaa
outsb
test
dec
repz
dec
sub
pop
icebp
jecxz
sbb
mov
lock
imul
pop
mov
pop
jne
push
add
jne
sahf
cmpsb
out
mov
sbb
in
movsl
dec
aas
lcall
cmp
in
test
dec
lock
mov
and
cmp
shlb
push
mov
int3
mov
push
enter
aaa
aaa
ss
mov
shr
loop
data16
ja
xor
pop
insl
fcomip
xchg
mov
pop
fisubrs
adc
jnp
mov
push
mov
or
fnstsw
vaddsubpd
cld
movsb
xchg
test
cmp
push
pop
hlt
test
clc
dec
mov
inc
lods
lahf
stos
mov
ljmp
je
adc
or
ss
movsb
sahf
int
pop
xchg
jno
pop
pusha
and
adc
adc
insb
xorb
adcl
andl
in
push
cmpsb
sub
xchg
nop
xor
cwtl
addb
dec
xchg
out
sbb
insl
sahf
mov
mov
aam
xchg
bound
sbb
add
add
push
mov
jne
ret
sahf
mov
mov
xor
push
jg
push
xchg
mov
mov
xor
sahf
int3
leave
add
ret
cld
sbb
pop
je
push
xor
mov
popf
arpl
js
lahf
push
adc
push
xchg
ljmp
mov
outsl
mov
arpl
pop
xor
imul
movsb
aam
mov
in
int
cld
iret
jg
xchg
mov
adc
jno
xchg
cmp
and
std
mov
clc
test
adc
add
xlat
and
fs
add
mov
sbb
inc
and
in
xchg
cmc
outsl
or
and
cmc
lea
pop
jp
sti
in
push
repz
lcall
sti
aaa
sahf
xchg
cmpb
in
fstl
dec
in
cltd
sbb
dec
sbb
popa
fists
repnz
shl
pop
fnsave
mov
stos
dec
lock
test
testl
pop
dec
cmp
xchg
scas
pusha
loopne
ss
pop
pop
fsts
roll
dec
aaa
enter
fbstp
cwtl
cmp
lds
or
add
je
or
cmp
sarb
pop
pop
mov
stc
fnstsw
dec
mov
cmpsl
mov
mov
push
loopne
fbstp
loop
mov
lods
sbb
and
mov
test
ljmp
push
fdivs
shrb
daa
cltd
fisubl
xchg
dec
mov
pop
pop
xchg
insl
pop
rolb
add
and
loopne
pop
sub
sbb
nop
cltd
pop
inc
fisttpll
jg
arpl
stos
or
xchg
add
mov
mov
cmc
mov
push
and
cmp
sub
adc
mov
xor
out
push
popf
add
insl
out
cld
or
pop
add
stc
xor
push
pop
jp
inc
mov
and
mov
inc
jno
jbe
inc
sahf
add
pop
leave
cmp
sub
ret
sub
sub
cmc
add
xchg
rcrl
stos
dec
ja
arpl
div
stc
repnz
aaa
adc
add
out
xchg
push
in
push
incb
and
dec
stos
loope
mov
adc
mov
cmp
sub
mov
les
inc
cmp
daa
mov
jecxz
aaa
cmpsl
lcall
leave
add
or
jg
jb
in
pop
xor
and
adc
les
pop
addr16
pusha
icebp
dec
jmp
test
add
pop
popf
xor
jmp
lea
xor
push
lret
scas
push
mov
push
adc
sbb
stos
rclb
sub
lock
add
arpl
or
lods
cmpsl
stos
or
push
mov
cmc
xchg
outsl
mov
outsb
lea
or
xlat
sbb
clc
data16
inc
cmpsl
cli
xchg
jns
cltd
repz
cmpl
nop
cmpsl
pop
fistl
mov
or
push
jno
out
add
gs
je
push
and
push
mov
jl
mov
das
xchg
in
fbld
lret
stos
xor
pop
fldl
mov
fs
and
test
inc
cwtl
adc
mov
int
out
jle
inc
pop
sbb
std
pop
pop
xchg
mov
outsl
mov
mov
das
cltd
notl
addl
xor
push
xchg
insb
push
inc
push
sbb
jmp
lock
sbb
ss
stc
inc
imul
imul
xchg
test
jnp
or
cmp
popa
addr16
mov
pop
adc
push
cmp
cltd
mov
jbe
cs
jae
cmp
ffree
or
fcoms
push
loop
jb
rcl
mov
and
adc
stc
sub
shlb
test
mov
data16
aas
mov
jmp
movsb
jns
jae
shlb
jl
or
xchg
mov
je
sub
stos
push
leave
mov
rorb
ret
enter
pop
loopne
ljmp
mov
mov
sub
test
fcmovne
xchg
jb
aam
divl
cs
sub
mov
cmpsb
fsubrl
ret
push
add
dec
inc
lcall
sub
add
in
dec
je
mov
mov
sbb
test
test
fcmovnu
loop
repz
mov
or
push
mov
outsb
bound
inc
xor
mov
fisttpll
enter
push
xor
cmpsb
or
loopne
mov
jae
inc
dec
xor
adc
cmc
push
addr16
cltd
jae
add
out
mov
into
subb
nop
sub
cmc
lahf
mov
and
mov
and
add
or
mov
imul
adc
cmp
mov
and
lods
sbb
movsb
mov
push
bound
cmpl
out
ja
mov
sub
shrl
jne
xor
aam
ret
inc
jbe
adc
sahf
xchg
sbb
push
jge
sub
test
jmp
xchg
push
mov
mov
lret
xor
cmpsb
lea
or
cli
pop
divl
das
daa
loope
out
fucomp
inc
pop
push
addr16
sahf
movsl
mov
mov
lea
mov
not
push
outsb
mov
jg
outsl
lods
in
jmp
or
in
lret
icebp
mov
push
cwtl
repz
lds
inc
or
jbe
divl
xor
mov
jbe
in
mov
mov
mov
shlb
imul
mov
lds
clc
jecxz
movsb
lods
xchg
xchg
bound
leave
pop
cmp
bound
sahf
jne
sub
sbb
sbb
shlb
cli
call
xchg
repnz
mov
xorl
jb
out
add
mov
or
fisubrl
mov
lods
and
xchg
cmp
or
and
and
std
inc
mov
jle
sub
pop
dec
testl
xchg
aad
mov
push
xor
data16
inc
aad
popf
mov
into
mov
pushf
cld
mov
hlt
xor
sahf
mov
callw
inc
add
arpl
pushf
dec
jp
nop
mov
mov
rolb
add
and
push
dec
or
xchg
mov
ja
pop
orl
divb
out
loop
call
xchg
or
cmpsl
ret
and
popf
mov
and
lods
lds
stc
add
push
xchg
sbb
ret
lock
imull
and
push
loop
sbb
inc
jecxz
sbb
sub
in
in
dec
pop
adc
loop
pop
js
js
mov
dec
lcall
push
fldenv
sbbb
mov
cwtl
mov
adc
push
arpl
insl
push
addr16
pop
out
sub
fdivr
js
fnsave
mov
ret
cwtl
xor
add
pop
mov
mov
call
adc
jne
imul
dec
stc
loope
inc
lods
enter
dec
xor
pop
xchg
fsubs
in
cmpsl
lahf
mov
inc
test
loope
mov
mov
mov
mov
cmpsb
pop
cmpsl
adc
and
daa
test
push
cmp
inc
out
std
lock
or
clc
inc
mov
mov
aad
frstor
rcr
cmp
jne
xor
dec
push
cld
mov
pop
int
pop
push
inc
pop
or
call
pop
test
int3
stc
adc
out
hlt
mov
in
xchg
pusha
sbb
and
repnz
out
lcall
pop
sbb
mov
out
shlb
cmp
xchg
pop
loop
scas
and
rorb
popa
mov
xchg
addb
dec
mov
sub
scas
pusha
pop
xlat
cld
adc
popf
ret
inc
push
add
inc
sbb
jle
xchg
push
add
sbbb
shlb
mov
push
into
inc
or
fisubs
mov
ficomps
out
jmp
imul
cmp
subl
push
jg
push
and
jg
jno
mov
mov
out
outsl
jae
pop
push
lret
jno
stos
and
lods
mov
js
fmuls
push
pop
sti
mov
sbb
ret
xchg
rclb
xchg
lea
inc
mov
push
pushf
cltd
clc
push
jg
add
adc
and
pop
cmp
jle
cmp
jb
icebp
pop
mov
in
sbb
push
in
test
rorl
add
test
and
stos
fmuls
sbb
out
mov
int
es
mov
or
outsl
cmpsb
inc
in
sub
cmpsb
and
inc
scas
inc
insl
pop
xlat
cltd
mov
inc
dec
scas
fsubr
fmul
sarb
pop
adc
adc
push
out
mov
or
jl
cmp
lret
bswap
dec
aaa
fstpt
jbe
leave
cmpsb
xor
push
out
adc
fs
xchg
aaa
ss
mov
pop
xor
push
and
mov
pop
mov
lcall
loope
pop
xchg
imul
sbb
sub
mov
addr16
leave
in
mov
jo
cmpsl
inc
gs
insb
call
ljmp
sub
jecxz
xor
sub
adc
scas
and
pop
push
insb
fisubrl
aad
pop
adc
ret
shlb
lahf
adc
repz
mov
loopne
arpl
jmp
add
insl
inc
mov
jbe
orl
gs
inc
lret
fmull
add
cmp
push
xor
dec
add
sbb
inc
arpl
push
adc
lods
and
stc
mov
fsubl
push
lret
stos
xor
fisttps
mov
xchg
sbb
jb
mov
aas
mov
enter
add
andl
pop
mov
xor
out
andl
cmp
pushf
jo
loopne
and
mov
jns
jg
in
pop
fwait
sbb
inc
icebp
jge
insb
mov
jg
popa
add
mov
mov
adc
in
adc
dec
cli
cmc
sub
push
or
cld
push
ret
call
sbbl
or
add
insb
xor
jb
pop
ror
iret
inc
rclb
add
push
mov
mov
xor
push
cld
fs
sub
xor
movsb
call
lds
pop
push
stc
add
sbb
and
ret
mov
pop
je
jb
pushl
and
or
mov
jae
sbbl
test
inc
jge
insl
call
loopne
mov
mov
lods
mov
sub
leave
lock
add
cmc
push
mov
inc
test
das
in
sbb
cmc
flds
or
jp
in
sbb
movsl
int3
dec
mov
xor
mov
pop
rclb
nop
repz
daa
stc
fadds
cli
sub
mov
sub
leave
sbb
xor
hlt
jl
bound
iret
aam
jecxz
mov
xchg
insl
loopne
pop
mov
outsb
pop
das
push
into
sti
cld
stos
xchg
rcll
fwait
jae
inc
cmp
das
arpl
outsl
int
cmp
mov
dec
push
mull
test
xchg
rcll
icebp
bound
and
aaa
adc
daa
addr16
in
sarb
jmp
pop
adc
jbe
mov
stc
push
rorl
add
mov
cmp
in
cs
aam
jns
fs
ss
sub
rcrl
and
into
imul
ss
mov
mov
in
lret
inc
jne
jle
ret
mov
addr16
mov
ljmp
push
xchg
cld
std
icebp
stos
jg
rolb
cmp
mov
repnz
xchg
add
out
lock
jmp
js
test
adc
mov
imulb
and
xchg
cmpsl
xor
push
insb
sbb
ss
mov
or
int
cmc
flds
pop
mov
xchg
and
incl
xlat
jne
and
mov
ja
and
inc
inc
in
sub
scas
inc
cmp
push
push
cmp
xchg
daa
out
pushf
fiadds
push
mov
sbb
movl
enter
mov
sbb
cmp
cmp
cmp
or
mov
incb
ret
inc
out
scas
cs
dec
mov
push
cmp
lods
mov
and
cmovnp
and
mov
cs
xchg
xor
dec
inc
xchg
call
pop
std
fwait
jl
fnsave
jb
lods
fmuls
pop
jge
cmp
test
inc
out
jmp
pop
fwait
ss
cmp
sub
push
movb
aam
inc
push
sub
out
adc
ss
add
out
pop
inc
out
jmp
sub
aaa
icebp
loop
cmp
mov
fadd
les
dec
movsb
dec
arpl
cwtl
and
pop
dec
cmp
jmp
gs
pushf
cmp
ds
hlt
cmp
jo
xor
mov
push
cld
test
xlat
adc
test
dec
jg
or
stos
mov
mov
and
mov
sbb
dec
sub
push
addr16
mov
and
gs
add
imul
push
shll
sub
and
cld
in
mov
enter
jb
test
sbb
xchg
mov
add
dec
cmp
cli
xchg
rorb
mov
addb
cmpb
leave
loope
push
icebp
jmp
cmc
push
lods
lret
or
cmp
pop
enter
jl
xlat
movsb
imul
scas
cmp
ljmp
icebp
nop
mov
push
and
aam
mov
xlat
pop
loope
mov
inc
jecxz
inc
mull
add
jge
pop
xor
cmp
jno
or
mov
mov
shll
pop
pop
or
adcb
std
xchg
xor
push
fdivl
xlat
stos
in
pop
mov
mov
stc
push
adc
in
scas
xchg
xor
jg
test
lret
mov
loope
mov
jne
or
pop
dec
sbb
cs
aas
jg
lea
or
int3
xchg
bound
mov
pop
xor
fdivr
pop
and
lcall
push
sti
das
inc
mov
fwait
insb
and
test
dec
fwait
xchg
out
aaa
jae
dec
xor
je
mov
fcmovb
mov
sub
dec
adc
or
ficoml
inc
cli
ss
sbb
rcr
lea
push
pusha
mov
ljmp
ret
dec
xchg
push
lds
sub
movsb
push
mov
xor
test
pop
ljmp
repz
push
jmp
add
cmpsb
sbb
pop
jns
xchg
mov
fcomps
rcrb
add
jno
push
push
or
sti
test
pop
out
pop
push
cmpsb
xchg
dec
call
rcrl
in
ret
adc
sbb
rorl
mov
mov
push
cmpsl
fcoml
sub
xchg
inc
sub
sub
into
vpmullw
adc
rorb
fwait
jns
jno
mov
cli
pop
cld
push
incl
pushl
dec
shll
int3
sahf
stos
sahf
xor
fldl
add
push
add
fldt
es
fnclex
dec
neg
cmp
sbb
mov
jbe
fs
and
lea
lret
or
dec
xlat
out
add
adc
mov
mov
sub
jae
mov
or
jae
ja
inc
xchg
jne
daa
mov
xor
std
pop
pop
inc
mov
adc
mov
mov
stos
je
cmp
jl
ret
mov
cmc
mov
sbbl
mov
jno
fistpll
push
stos
in
xor
push
lea
aaa
int3
scas
inc
jge
jge
scas
adc
mov
dec
cmp
ja
pop
dec
adc
xchg
add
jmp
hlt
push
mov
push
pop
xor
imull
arpl
les
movsb
insl
test
cmp
cmp
cld
fwait
jp
sbb
pop
loope
ret
das
loop
sbb
xor
jmp
inc
jnp
mov
orl
jge
ja
jb
jno
add
iret
sub
dec
dec
popaw
test
mov
fsubr
aas
fsubrl
xor
in
insb
icebp
rolb
mov
inc
sbb
mov
out
decl
push
les
push
nop
inc
not
loop
cld
test
xchg
xchg
sarb
push
dec
shlb
mov
push
js
mov
xchg
xchg
out
adc
repz
decb
mov
sub
je
xchg
jecxz
mov
lods
pop
inc
ret
mov
shlb
stos
dec
notb
mov
sbb
clc
scas
mov
or
outsb
ss
ja
shrb
jge
add
test
loope
xchg
les
mov
xchg
jmp
pop
jbe
mov
shll
orl
xchg
mov
mov
ret
pop
pop
xor
mov
dec
mov
add
dec
inc
and
xor
fdivl
fnsave
push
inc
scas
pop
frstor
in
adc
adc
addr16
push
cmp
fs
scas
adc
repz
mov
add
xorl
loop
in
sarb
dec
sbb
lds
jb
mov
cmc
cmp
stos
out
imul
mov
out
mov
iret
lcall
gs
cmp
stc
cli
xchg
inc
cld
mov
stc
mov
in
mov
sbb
mov
insl
mov
sbb
push
jmp
inc
lret
cmp
sarl
xor
pop
inc
xchg
or
mul
mov
cmc
bswap
mov
cmpsl
mov
loopne
xor
dec
aam
insl
je
orb
in
inc
xor
sub
in
or
filds
ficomps
cmpb
repnz
sbb
jecxz
xor
imull
xor
jecxz
out
jp
push
dec
xchg
push
dec
sbb
sbb
fcompp
sub
xchg
push
js
jo
pop
mov
mov
dec
jge
or
scas
push
push
popw
jno
pop
iret
in
in
dec
mov
jle
xchg
mov
pop
adc
jle
subl
bnd
insb
jp
sub
push
decl
divl
mov
or
add
aam
movsb
or
scas
jne
mov
and
scas
clc
xchg
inc
movl
push
jmp
inc
das
iret
fistpll
dec
lods
lcall
mov
fisubs
enter
adc
scas
insl
roll
inc
push
push
cmpsb
xor
fidivl
lea
or
inc
addr16
cmp
orb
shlb
sub
push
rclb
cpuid
jae,pn
test
adc
das
cmp
add
push
cmp
mov
jno
hlt
adc
scas
enter
and
and
jg
and
mov
push
movsb
gs
ret
pushf
fwait
mov
fdivl
hlt
addr16
imul
pop
xor
or
cwtl
inc
cmc
mov
lds
mov
fisubs
cld
jmp
mov
fdivs
lret
in
push
data16
mov
cld
jns
lcall
es
xor
mov
test
ret
push
pop
clc
pop
or
imul
idivl
or
adc
arpl
push
xchg
sub
inc
pusha
push
lods
adc
xor
lods
les
add
pop
pop
cmp
cmp
xor
aas
loopne
sbb
std
es
fwait
jl
push
mov
lods
rol
dec
add
or
and
or
aad
inc
jns
pextrw
mov
inc
arpl
icebp
push
push
inc
mov
movsb
sbb
out
adc
rcrb
jle
stc
out
pushl
mov
lock
cmpsl
pop
jle
ror
jbe
jp
inc
sahf
pop
xlat
jns
sbb
adc
xchg
cmpsb
jne
js
mov
xchg
jns
pop
sti
hlt
fwait
sub
movsl
roll
xchg
lahf
push
lret
dec
out
add
add
push
data16
xchg
loope
pop
sub
std
push
inc
pusha
inc
lret
or
sbb
mov
add
pushl
outsb
jae
xor
dec
leave
pop
xor
scas
outsb
and
jae
cmpsl
and
lock
pop
and
out
test
sub
xor
faddp
jecxz
loop
cmp
loop
mov
lods
test
dec
sbb
enter
inc
dec
inc
push
or
cmpb
leave
sti
mov
sbb
mov
addr16
fmuls
lcall
dec
mov
jbe
jb
dec
dec
or
repz
ret
aad
iret
mov
and
dec
xor
pop
mov
xchg
jl
or
rorl
arpl
gs
dec
aaa
push
lret
hlt
insl
xor
outsl
jae
mov
leave
imul
movsb
cltd
repnz
and
xor
xchg
das
xchg
dec
pop
adc
jmp
es
lahf
lds
cmpsl
cmp
les
filds
push
adc
jecxz
sub
jle
aam
cmp
push
or
xchg
or
es
or
hlt
fdiv
sbb
push
fstpt
andl
adc
mov
outsl
unpckhps
dec
shr
inc
shll
sbb
cmp
call
lret
push
mov
insl
in
inc
out
notb
cld
cmp
pop
mov
sti
insb
dec
or
sbb
mov
mov
push
mov
test
and
enter
mov
lds
jp
test
sub
in
mov
out
scas
cmp
push
inc
cwtl
push
sub
mov
ja
outsl
shrb
scas
and
fists
pop
xor
sbbl
cmp
loopne
ds
pop
dec
icebp
int
aas
in
out
mov
xchg
cmpsb
cmpsb
mov
ret
test
ret
or
or
stc
mov
or
adc
and
icebp
dec
fstpt
push
nop
shrl
nop
ljmp
repz
test
mov
mov
jp
inc
cmpsl
jae
dec
fnstcw
jp
fsub
lds
cld
pop
pop
arpl
je
out
push
jbe
xchg
leave
ret
pop
inc
mov
aaa
scas
cmp
mov
dec
daa
shll
sbb
popf
sbb
jae
mov
fildll
xchg
fcom
jp
xchg
lods
iret
ret
nop
jne
lcall
stos
mov
in
aaa
pop
sub
or
push
adc
lret
imulb
test
addl
les
ja
mov
cs
pop
cmp
and
mov
cwtl
fisttpl
push
mov
pop
int3
notb
lods
in
and
sub
mov
fnstsw
out
cmp
cli
das
stos
mov
xor
call
or
mov
mov
addr16
jg
jl
sbb
push
xchg
lcall
cmp
loopne
test
push
sub
inc
inc
dec
loopne
out
fwait
loope
dec
xchg
pop
cmp
xchg
adc
in
test
jl
xchg
xchg
dec
and
inc
popf
dec
out
daa
fsub
nop
xchg
test
sti
aam
int3
or
add
pop
stos
mov
roll
repnz
dec
cmpsb
out
mov
mov
sub
dec
pop
mov
fnstenv
push
or
fsubs
pop
mov
shll
sti
out
mov
mov
sbb
out
mov
sub
mov
jp
and
mov
xor
loope
sbb
add
lahf
stc
push
mov
data16
dec
sbbb
pop
xlat
xor
xchg
dec
push
lcall
xor
inc
data16
push
repz
sub
mov
mov
adc
push
sub
mov
test
mov
xor
stos
pop
test
in
aas
pop
or
xchg
ds
mov
into
inc
std
jge
xor
rol
inc
stos
daa
jmp
xchg
push
aaa
and
pop
pop
gs
insb
sub
inc
loope
xchg
lods
pop
mov
mov
clc
fisttpll
dec
sahf
dec
jb
mov
lock
popl
mov
jnp
call
jg
ja
mov
cmp
dec
jb
and
sarb
mov
frstor
fmull
jmp
jmp
or
addb
fildl
xor
dec
dec
cmpsb
mov
sub
inc
cmp
loope
and
divb
mov
imul
xlat
sub
pop
xchg
pop
inc
push
cli
push
xor
push
stos
punpckhwd
js
push
dec
pop
xor
mov
lods
or
jnp
push
inc
lahf
rep
sbb
pop
pop
in
pop
in
insb
cmp
ds
imul
sahf
or
jns
dec
loope
jle
outsb
pop
ror
lea
jnp
jge
fistpl
jge
out
adc
sub
push
loop
daa
mov
scas
mov
pop
push
mov
lcall
cmpsl
pop
xchg
mov
mov
adc
push
ret
into
ss
sti
mov
outsb
lock
mov
cmpsl
lcall
bnd
out
fstp
jg
cwtl
mov
push
push
fistpll
and
je
adc
or
cmp
in
push
or
jne
clc
jbe
aam
dec
test
lret
stos
sbb
xchg
fwait
mov
or
jae
mov
xor
and
xor
smsw
mov
lret
or
jo
and
mov
xchg
xlat
bound
movsl
xor
mov
and
call
aam
inc
jmp
repnz
mov
andl
mov
push
push
std
es
dec
rcrb
inc
pop
in
mov
ljmp
adc
ret
mov
inc
out
dec
adc
stos
push
cmpsl
adc
pop
push
fwait
push
loope
movsb
push
lcall
bound
adc
repz
mov
into
pop
movsb
cmp
mov
ljmp
sbb
test
adc
cli
mov
jl
cmp
jae
lret
mov
scas
addl
roll
mov
push
loopne
popa
fsub
in
push
mov
dec
lcall
jno
movsb
stos
shll
cmp
mov
mov
idivl
sbb
aaa
stos
addr16
fwait
mov
jbe
sbb
bound
jb
cmpsb
insb
test
cwtl
sbb
jne
xor
ja
jp
dec
jl
sub
fidivrs
lea
aam
sbbb
iret
fsubs
pushf
mov
push
movsl
shlb
inc
mov
and
lods
sti
sahf
sbb
mov
add
xchg
sub
scas
sub
imul
sbb
sub
rclb
jno
sub
jge
sbb
out
out
and
mov
callw
sub
dec
pop
dec
shrb
adc
mov
dec
sbb
aaa
out
daa
add
add
mov
xchg
fimull
je
mov
fs
stos
sub
push
pop
or
push
flds
dec
jns
sub
xor
push
popa
inc
or
orl
mov
std
pushf
mov
loopne
xor
leave
push
dec
enter
pop
push
mov
push
push
xchg
inc
test
popf
sbb
fdivrs
dec
cmp
loopne
outsl
adc
mov
or
add
lret
jne
mov
pop
cmpsb
jg
inc
test
lcall
and
andb
mov
xchg
push
movsl
push
xchg
fists
sti
push
paddd
sub
dec
fiadds
cmp
push
add
mov
lret
pop
dec
inc
in
lods
insl
aam
xchg
jg
or
dec
ja
enter
scas
roll
inc
pop
lcall
or
stc
cli
int
push
xchg
add
add
xchg
or
ds
add
inc
jns
clc
pop
ret
movsl
dec
fdiv
inc
fwait
clc
lret
cmc
pop
inc
cmp
imul
test
sbb
iret
mov
outsb
orl
imul
dec
xchg
out
xchg
in
icebp
ficomps
pusha
movb
dec
add
and
lock
add
mov
mov
repz
inc
dec
adc
and
push
pop
mov
dec
aas
xor
mov
mov
iret
insb
pop
cmp
es
jnp
jmp
adc
movsl
outsb
incl
jne
loop
pop
imul
cmp
mov
jae
jnp
insb
push
test
jae
out
mov
jg
in
shr
loope
out
loopne
and
ljmp
aas
ljmp
cwtl
fldl
push
push
mov
xchg
mov
and
cmp
cwtl
int3
xor
xchg
mov
adc
loope
scas
add
xchg
jo
dec
daa
mov
jle
fiadds
aad
mov
xchg
sti
cmp
sti
gs
xchg
or
dec
pop
pop
sti
jl
pop
repnz
std
mov
mov
je
imul
jae
loope
jp
pop
icebp
aaa
mov
das
hlt
mov
pusha
xchg
inc
int3
mov
cmp
xchg
or
push
sbb
ret
or
inc
aad
cwtl
roll
inc
sahf
out
or
sub
inc
movsl
gs
add
mov
pop
ja
outsl
push
or
cmp
mov
cltd
push
and
pop
mov
rcll
pusha
testl
push
stos
or
push
data16
icebp
sub
mov
hlt
dec
pop
pop
jno
and
ljmp
sub
imul
and
leave
sbb
sbb
push
pop
aam
jecxz
xor
jnp
mov
jo
fildl
mov
jb
cmp
push
mov
pop
out
sub
in
call
mov
popf
pop
push
shrl
cmp
pop
lahf
aas
cli
aas
fstl
and
or
adc
pop
iret
mov
dec
xchg
ret
sbb
stc
mov
add
mov
imul
adc
popf
inc
pop
jl
fcoml
jne
pop
or
ds
sbb
inc
test
addr16
cmpb
mov
cmp
and
push
fildl
mov
pop
pushl
adc
fstpl
ja
mov
out
lahf
sub
scas
inc
arpl
sarl
je
push
xor
cmpsb
stc
and
data16
ja
push
xlat
pop
imul
lret
out
lds
or
cli
movsl
fisubs
loopne
xchg
and
inc
test
lea
pushl
or
mov
fmulp
mov
mov
aas
je
out
rcll
fmull
sub
xor
fwait
sbb
lret
lods
repz
fcoml
ret
scas
pop
jge
jb
test
xchg
adc
lds
fwait
out
adc
test
cli
outsb
cmc
dec
bound
cltd
and
cli
scas
push
aas
pushf
dec
inc
shll
lret
mov
add
test
cmp
sbb
lcall
arpl
pop
jno
dec
js
sbb
pop
js
or
push
sub
sub
gs
mov
and
stos
cmc
mov
jo
scas
dec
fisttpl
jl
mov
or
das
ja
ficomps
aad
jae
xor
out
ds
sarl
jno
mov
call
sub
dec
xchg
fisubrs
cmc
dec
mov
sahf
inc
std
mov
jge
aas
ret
ror
xchg
inc
std
popa
add
insb
cltd
jg
mov
jl
ljmp
pop
les
adc
pop
inc
aaa
aad
roll
cwtl
mov
int3
es
sub
cwtl
icebp
aas
mov
in
cmpsb
ds
fiadds
pop
fnsave
and
mov
addr16
lret
mov
bound
or
pop
ret
rol
les
sarb
mov
push
inc
xor
dec
xchg
inc
icebp
ds
sub
dec
rolb
adc
push
mov
cmpsl
stos
rorb
sbb
fnstenv
shl
dec
sbb
inc
lcall
pop
test
fidivs
xor
adc
std
rcrb
and
jnp
or
sti
mov
pop
rorl
test
and
je
mov
clc
dec
mov
jge
jbe
pop
sbb
and
push
push
xlat
jp
std
add
popf
ret
lds
notb
daa
pop
cmpsb
adc
sahf
insb
push
jbe
iret
sub
movsb
inc
pop
bound
fimull
imul
xchg
cmp
mov
packssdw
or
cmpl
dec
cli
pop
les
jbe
jno
imul
mov
cmpsb
push
popa
andl
fwait
popf
int3
loopne
xchg
jle
mov
push
clc
cmp
or
out
dec
sub
push
jmp
xor
fldl
cmpsb
ja
xchg
jnp
fsubr
cli
in
pop
dec
cmp
in
pop
sub
sbbl
addl
lcall
int3
jbe
aam
insl
and
pop
lods
inc
ret
jle
and
push
imul
push
jecxz
sub
push
jecxz
sbb
jns
adc
scas
scas
pop
mov
inc
pop
push
enter
in
lock
inc
popf
scas
jno
mov
int
inc
sarb
inc
dec
fstl
cmp
inc
add
push
jmp
cmp
int
es
loopne
loop
out
clc
loopne
dec
xchg
mov
adc
adc
popa
and
push
clc
les
add
mov
add
add
add
or
push
lods
jle
or
ds
xlat
adc
jmp
inc
into
cmc
pop
repnz
hlt
mov
push
sbb
rcrb
lcall
scas
test
sub
repnz
add
inc
movsb
jmp
je
and
orl
test
xor
push
cmp
mov
pop
jle
or
add
outsl
fisubl
sbb
fldl
into
jno
bound
push
inc
cmp
lcall
lea
hlt
movsl
xchg
out
popa
leave
add
push
loope
shlb
fwait
lret
imul
mov
std
inc
adc
jmp
xchg
les
dec
ja
mov
mov
loop
out
xchg
push
mov
lea
add
xchg
inc
shr
scas
push
setbe
mov
xor
pop
jo
and
dec
aad
insl
xor
je
xchg
adc
clc
rorb
mov
shlb
mov
cmc
sub
and
imul
lea
jbe
dec
cmpl
insb
push
jbe
push
cs
movsb
fimull
sub
loope
xor
daa
or
push
pop
mov
fs
test
push
mov
mov
outsb
xor
shlb
sbb
inc
mov
loope
xchg
sbb
cmc
and
xchg
cs
loop
in
adc
mov
repz
in
push
repnz
mov
aad
jp
out
in
sbb
inc
ja
dec
test
fisubs
cltd
and
xchg
sub
lret
ret
aas
inc
aaa
push
push
sub
sub
pop
mov
mov
into
mov
inc
loop
daa
arpl
add
inc
out
pop
fistpll
mov
lock
xchg
sbb
ljmp
cwtl
popa
std
cmp
mov
push
xchg
lods
mov
hlt
push
jg
and
jecxz
dec
inc
fnstsw
hlt
bound
das
jnp
int3
push
push
insb
inc
rcr
dec
data16
inc
mov
jp
or
mov
scas
movsl
pop
adc
mov
int3
adc
enter
icebp
aam
lods
add
xchg
ficoms
call
arpl
pusha
add
outsl
mov
push
mov
add
dec
add
lahf
push
pop
imull
addr16
cmp
testb
or
rcr
adc
push
insb
pop
cmpsb
aam
ljmp
hlt
or
aaa
cmp
xchg
outsb
xchg
xlat
mov
adc
add
jg
adc
fldpi
inc
mov
jp
sbb
jae
ficoms
push
fstpt
lds
xchg
mov
rcl
test
sbb
inc
lods
xchg
call
in
sub
stc
mov
adc
lcall
rcll
pop
sbb
inc
xchg
xchg
jecxz
mov
rorb
mov
cmp
and
jns
mov
mov
out
js
cmp
sbb
das
aaa
lret
dec
cmp
int
xchg
jb
in
xchg
jg
testb
inc
adc
jbe
sbb
icebp
cmpsl
mov
scas
addr16
cmp
lret
push
aam
dec
jp
jno
jmp
nop
jne
insb
jb
xor
addl
rcll
es
pop
sbb
inc
add
stos
inc
push
div
cli
push
inc
cmp
ljmp
repz
loopne
js
or
js
sarl
jo
pop
jne
dec
loope
adc
jno
out
ja
outsl
mov
pop
xor
lea
incb
adc
mov
mov
pop
nop
dec
mov
out
into
loope
es
shlb
arpl
push
out
push
out
sbb
movsl
adc
cld
jbe
insl
push
int3
in
jnp
push
ficoml
dec
cltd
rolb
popf
pop
inc
cli
es
inc
imul
shrb
mov
sbb
frstor
push
stos
and
or
in
push
fdivl
jp
cmc
or
inc
imull
jle
mov
aaa
ds
in
shrl
cmc
out
pop
pushf
outsl
fmulp
and
dec
jmp
sub
loope
stos
mov
sub
sar
aaa
ss
pop
imul
outsb
jno
dec
add
iret
jb
jmp
or
les
pop
pop
std
out
imul
iret
outsb
mov
sub
ljmp
jmp
sahf
insl
and
sub
pop
pop
sbb
push
sub
inc
sbb
push
in
ret
inc
int3
mov
mov
call
aas
jbe
call
sub
push
jge
imul
psraw
lds
dec
jne
mov
fdivrs
dec
inc
or
jo
and
js
mov
sub
leave
fs
pop
jbe
mov
mov
test
dec
sbb
fwait
push
push
push
stos
xlat
mov
std
adc
xchg
shlb
add
pop
loope
sahf
sti
jae
pop
add
sub
adc
fs
jo
out
js
stc
sub
icebp
jns
xchg
jo
xor
push
mov
sbb
mov
add
or
inc
xchg
ss
int
sarb
mov
stos
bound
imul
inc
or
mov
push
or
pop
call
adc
in
cwtl
loop
mov
pop
test
stos
jns
movsl
ljmp
pop
decb
push
push
dec
pop
adc
test
clc
lea
push
dec
fwait
or
shl
lods
cld
sub
imull
sbb
inc
addr16
jmp
shlb
aad
cld
push
mov
mov
sahf
dec
adc
sbb
lahf
repz
pop
sbb
or
aam
test
mov
arpl
ud1
lahf
cmp
arpl
fdiv
mov
cmp
pop
adc
dec
and
or
pop
sub
sbb
std
and
arpl
bnd
in
enter
cmpsb
jo
pop
cmp
ret
lahf
iret
mov
xor
jmp
mov
mov
sti
cmp
pop
call
movl
inc
add
mov
xor
pop
adc
imul
loopne
js
pop
jl
mov
out
sbb
inc
dec
dec
and
stos
add
rclb
or
mov
scas
ret
into
lahf
mov
add
cli
sbb
addr16
and
push
xchg
ljmp
jle
push
outsl
push
push
jge
test
test
jo
outsl
add
push
mov
push
test
ret
jp
sbb
data16
cmp
mov
gs
and
les
repz
jne
xchg
fwait
addb
aam
jnp
imul
into
mov
push
mov
push
bswap
call
pop
pop
push
call
lods
out
rcrb
repz
dec
jns
arpl
jge
stos
pushf
push
lret
movsl
xchg
lods
mov
pop
mov
pop
jecxz
xchg
pusha
les
mov
xor
ljmp
call
lret
ljmp
xchg
insl
nop
mov
add
cld
and
std
mov
test
dec
jmp
repnz
insb
repz
imul
cmpsl
and
fldt
insl
stos
and
jno
popf
mov
cmp
into
push
pop
xor
xchg
lret
dec
hlt
repnz
push
fdivr
cmc
dec
add
sbb
filds
int3
push
push
adc
or
jb
mov
and
mov
sbb
jnp
loop
leave
in
add
inc
sarb
outsl
enterw
push
fcmovb
cmc
pop
loope
mov
roll
aas
stc
pushf
jge
dec
lock
jp
lods
jnp
adc
inc
push
mov
and
xlat
add
fdivs
or
pop
jmp
jb
cmp
sub
leave
stc
adc
xor
int
je
das
ret
push
mov
outsb
mov
mov
jmp
xchg
or
add
and
mov
pop
xchg
in
jecxz
sbb
fsubs
sbb
stos
pop
movsl
test
cmp
iret
scas
repz
cmp
pop
pusha
rcrb
cmp
cmp
aaa
insl
test
cmp
js
cmp
mov
inc
push
add
out
out
cmpl
sbb
xchg
cld
shl
cmpsb
das
subl
loopne
movsl
mov
cmp
es
jbe
pop
or
add
mov
pop
addb
jb
fs
pop
lret
dec
cmpsl
shrl
xchg
ror
cld
inc
fidivs
fwait
push
ja
std
loopne
mov
sbb
daa
fwait
test
hlt
fnstcw
inc
fldcw
cmp
repnz
sbb
sub
or
movsl
lds
xchg
fstpl
neg
or
call
repnz
sub
lahf
imull
dec
or
out
imull
and
adcb
cmp
in
adc
inc
cmp
in
lcall
push
fistpl
divb
mov
aas
bnd
cwtl
dec
leave
pop
cltd
mov
inc
inc
fistl
push
or
fistpl
loopne
fisttpl
dec
mov
movsl
data16
xor
popa
cmpsl
notl
or
int
cmp
cmc
push
mov
mov
push
pop
gs
mov
nop
xor
lods
jle
stos
lds
pop
test
rorb
push
mov
addr16
das
stc
push
mov
sub
mov
pop
add
lret
int3
icebp
adc
jp
aad
push
mov
testb
jns
sub
push
add
push
push
cmp
xchg
pop
aad
fstps
push
or
inc
inc
cmp
adc
push
aam
adc
inc
or
cltd
jne
jp,pt
xor
addb
insb
inc
fwait
lret
push
aad
xchg
xor
inc
adc
into
ficomps
in
cli
lcall
incl
mov
out
sub
push
sahf
int3
sub
jl
mov
jne
fistps
sub
mov
ss
sub
or
inc
mov
out
mov
jns
mov
popf
fsub
test
mov
mov
jno
add
add
add
or
mov
pop
das
mov
data16
filds
push
loope
pop
fsubl
aad
mov
aam
es
mov
add
fwait
cmpsl
pop
and
data16
mulb
dec
inc
xchg
popl
or
xchg
mov
jle
sbb
sar
iret
mov
push
repz
or
icebp
ret
mov
cli
lea
mov
mov
cwtl
jne
xlat
testl
cli
insb
arpl
sbb
orb
mov
or
andl
mov
leave
lods
ret
sarb
xchg
jecxz
and
sub
clc
lods
cmp
jle
cld
jle
mov
andl
mov
mov
std
scas
popf
rdmsr
cli
cli
pop
leave
data16
adc
mov
xchg
inc
arpl
loopne
adc
decb
jge
das
lock
mov
pop
fs
stc
mov
xor
lock
jo
mov
pop
pop
stos
cmp
inc
pop
cmp
mov
lret
out
shl
inc
imul
sarb
fstl
in
mov
andl
pop
xchg
jmp
or
mov
int
mov
push
pop
lds
sub
jo
inc
jg
lods
fcomps
je
or
stc
js
xor
mov
test
cmpsl
sub
sbb
sbb
fbld
or
loopne
pop
xor
mov
js
cmpsl
xchg
mov
push
icebp
in
jo
xlat
sbb
dec
sbb
push
fidivs
xchg
data16
add
fstps
mov
out
stc
sbb
aam
mov
dec
push
dec
xchg
sub
add
push
pushf
and
sub
repnz
cmp
and
test
cmpsb
and
mov
pop
push
test
xchg
lods
lret
aas
adc
sbb
shrb
stos
fs
and
mov
notl
or
movsb
out
mov
movsb
xchg
jne
sub
pop
daa
xchg
stos
sub
or
add
sbb
sbb
dec
pushl
xor
addr16
or
push
jnp
out
lea
test
bound
inc
ss
push
iret
fsts
adc
and
mov
sub
sub
fsubrs
int3
lods
enter
or
flds
jo
aam
fstps
xchg
pop
test
inc
mov
inc
jmp
pushf
xchg
push
sub
sub
and
loope
ds
or
decb
dec
leave
mov
jo
pop
in
loop
push
shll
jo
nop
int
in
outsl
test
push
out
scas
arpl
pop
jmp
inc
mov
cmp
push
in
cltd
mov
insb
jl
loopne
popa
sbb
and
xchg
cs
pop
mov
dec
in
icebp
and
outsb
cmpsb
fsubl
test
je
insl
data16
ret
sub
sbb
fucomi
sbb
bound
or
imul
std
pop
pop
inc
neg
lahf
fldcw
bound
lea
adc
mov
sbb
fbld
test
jb
xlat
loop
pop
xor
pop
stos
inc
jge
mov
lock
fldt
das
pop
movsb
pop
push
cmp
add
andl
dec
mov
test
mull
mov
or
mov
imul
cld
mov
test
stos
inc
adc
mov
mov
push
sbb
ss
sar
or
ret
xchg
rorb
stc
call
add
xchg
xor
cltd
data16
mov
sub
loopne
pop
lock
add
push
or
cmp
icebp
fsubs
idivl
jl
rcl
jne
ret
push
incl
test
xchg
test
subb
mov
out
insb
or
pusha
aam
mov
das
jns
nop
inc
mov
and
mov
inc
out
popf
sub
pusha
cmp
or
jmp
mov
popl
or
sbb
mov
jo
ja
repnz
leave
sbb
ss
and
leave
rol
addr16
push
fistl
push
and
loope
add
mov
das
addr16
orb
hlt
pop
lock
les
jb
ljmp
lea
mov
jmp
adc
mov
data16
inc
popa
js
push
dec
les
cli
lahf
ds
notb
in
scas
loopne
dec
add
xchg
lock
or
pop
mov
into
subl
inc
xlat
mov
shlb
xchg
and
push
aam
fld
jo
pop
cli
sbb
fs
push
daa
gs
outsl
push
jae
subl
stos
sub
jns
jg
into
sbb
inc
lock
movsl
and
mov
fstpl
lods
lods
lock
sbb
cli
ficompl
sub
pop
jnp
daa
jp
jge
inc
mov
loop
add
and
insb
ljmp
pusha
pop
sbb
ljmp
fcomi
xor
outsl
dec
mov
jbe
cmp
int
mov
xchg
inc
xchg
cmp
push
add
mov
inc
jno
dec
ret
out
push
sub
push
shr
shlb
mov
cs
leave
xchg
scas
dec
imul
orl
and
sub
and
adc
test
enter
xchg
sahf
stos
and
int3
xchg
cwtl
cmp
fnstenv
mov
xor
mov
cs
in
mov
popa
dec
lret
in
xor
pop
mov
aam
test
lods
jle
pop
sahf
scas
xchg
xor
cmp
popa
pop
mov
or
push
pop
or
inc
jae
ja
xchg
inc
mov
inc
add
imul
inc
in
pop
cmpsb
imul
and
cmpsb
inc
scas
cwtl
inc
or
je
xchg
mov
mov
stc
enter
jb
fmull
imul
into
jno
pop
or
mov
add
leave
stos
movsl
jecxz
cmp
xor
lret
loop
add
and
pushf
jp
or
xor
jl
jmp
add
and
pop
sub
jl,pn
insl
xchg
idiv
cli
mov
sbb
or
scas
je
dec
push
std
xor
mov
mov
cld
adc
mov
mov
mov
cmp
jae
lock
push
loop
xor
imul
pop
adc
ret
mov
jmp
add
test
mov
cmp
mov
sub
lock
inc
dec
jl
lods
pop
cmp
shl
in
das
cmpsl
jmp
or
add
pop
addl
xchg
adc
mov
mov
aaa
sar
mov
and
mov
or
jecxz
call
in
xor
outsl
dec
loope
test
pushf
mov
mov
mov
push
and
and
push
dec
lods
inc
xchg
sti
sbb
jge
cld
inc
test
dec
arpl
adc
adc
push
js
out
out
add
mov
jle
inc
in
inc
js
push
sub
push
repz
into
sarl
imul
xlat
insb
mov
or
ja
adc
movb
je
out
sbb
add
jae
pop
pop
push
pop
fiadds
pushf
cli
cmpsb
xchg
xchg
clc
mov
and
andb
les
pusha
mov
inc
aaa
in
rclb
mov
sbb
jbe
mov
push
mov
sub
push
pop
xchg
mov
outsl
jnp
mov
stos
std
sbb
les
push
ret
adc
cmp
in
jo
mov
andb
cmpsb
fistpl
stos
iret
sub
lea
add
cmc
les
popf
test
add
in
mov
xchg
and
ja
pusha
incl
push
pop
sbb
test
movsl
sub
adc
lcall
rcr
shr
dec
sbb
sarb
jno
adc
scas
dec
jb
cs
rcrl
lods
inc
ficoms
add
xchg
adc
das
pop
mov
dec
into
jge
lret
call
ja
int3
test
dec
data16
push
sbb
icebp
xor
xchg
icebp
or
pusha
lods
dec
add
dec
mov
cmp
push
add
cmp
sub
cmp
dec
dec
sti
mov
cmpsl
push
scas
insl
sbb
adc
test
mov
clc
aaa
push
dec
pop
adc
icebp
mov
insb
xchg
outsl
aam
movsb
lahf
fcomip
out
aas
mov
push
cmp
stos
push
lock
or
mov
fwait
add
insl
subl
aad
and
ret
dec
test
rcrl
popa
adc
std
out
sbb
cld
and
scas
test
sbb
mov
orl
jg
sahf
push
xchg
add
daa
jo
xor
mov
cmp
into
pop
mov
sub
mov
cli
rcll
jge,pn
sub
hlt
scas
push
cmp
test
mov
sub
cmc
scas
add
inc
ja
sbb
jl
outsl
lods
cli
addr16
outsl
and
jmpw
cltd
cltd
gs
sbbl
fwait
lret
nop
insl
mov
or
push
sti
xor
jb
divl
cli
adc
repz
cli
scas
xor
ret
adc
ds
xor
add
lahf
sub
testl
das
fcomps
out
out
inc
sub
loopne
inc
xchg
inc
push
adc
les
sbb
out
sbb
push
mov
jmp
mov
repnz
xchg
es
ret
pop
inc
in
pusha
jnp
mov
cwtl
push
mov
stos
in
loop
mov
jmp
jg
negl
push
sbb
scas
pop
and
pop
shr
jbe
int3
aaa
rcr
cmovo
test
xchg
add
jns
cltd
pop
clc
xchg
push
sbb
lret
jno
jns
sbb
leave
and
insl
pop
pop
mov
addr16
mov
sub
mov
outsb
sbb
enter
xchg
scas
icebp
pop
icebp
adc
push
das
out
bound
fistpll
fs
test
bndldx
rorb
mov
or
hlt
ret
sub
or
pushf
pushf
jns
or
xchg
xchg
call
in
ror
fisttpll
mov
sub
xchg
mov
xor
pop
add
orb
fcomp
testl
ljmp
repnz
scas
xchg
cltd
dec
lahf
and
xlat
push
enter
jne
rcr
cmpsb
jb
lret
inc
sbb
stos
lret
data16
aam
or
aaa
out
int
dec
xchg
dec
push
jno
shrb
or
lds
rcll
mov
dec
imul
mov
call
lret
add
lea
pop
test
bound
cltd
sbb
sbb
mov
fcmovb
lds
daa
pushf
pop
jmp
cmp
push
inc
push
das
xor
xchg
push
sub
repnz
pop
adc
scas
fisubs
sbb
xchg
into
mov
add
ljmp
and
push
pop
mov
add
xlat
imul
ret
sahf
rorb
test
push
pop
pusha
stos
ja
adc
pop
or
xor
nop
es
adc
std
mov
pop
lea
sbb
lea
nop
mov
cli
dec
loop
lret
push
xchg
mov
jbe
mov
xchg
sarb
mov
aaa
or
aas
pop
icebp
enter
inc
shrl
mov
cld
sbb
xorl
pop
movsl
mov
bound
cwtl
aas
xchg
xor
push
cmp
imul
cltd
push
xchg
aaa
sbb
lock
dec
lahf
sahf
or
imul
push
adc
xchg
jge
push
pop
or
pop
mov
mov
mov
xchg
iret
inc
fs
repz
jne
adc
pop
rcll
push
xchg
jge
popa
pop
dec
pop
mov
pop
scas
jg
pop
call
insl
fst
inc
add
sbb
loopne
mov
or
add
and
add
dec
fimuls
pushf
je
jae
and
inc
dec
bnd
mov
mov
cli
xchg
inc
pop
imul
fs
mov
jae
adc
cltd
jg
cld
je
mov
jl
mov
jnp
sub
repz
jle
enter
lds
out
lods
push
inc
stc
cmp
sbb
dec
and
xchg
cld
add
sahf
sbbl
dec
sbb
fmul
inc
jae
inc
push
sbb
and
lahf
adc
sbb
jnp
fstl
dec
mov
sub
mov
inc
cmp
pop
push
and
dec
pop
shlb
hlt
movsl
or
jge
fdivs
add
jecxz
push
inc
inc
xchg
sub
mov
fwait
in
outsb
pop
or
push
test
dec
cmpsl
sbb
xor
int3
xchg
cs
add
dec
xchg
movsl
push
popa
std
inc
sub
ret
stos
or
dec
sbb
lods
adc
jmp
pushf
mov
fcmovne
icebp
add
icebp
daa
adc
das
xchg
pop
xchg
mov
in
call
and
mov
dec
loopne
je
jo
outsb
pop
lock
push
popf
js
fcomps
jns
in
pop
aam
scas
cltd
xor
daa
jp
xor
xchg
imul
pop
mov
insl
jb
mov
sar
sub
add
jg
mov
push
xchg
jne
or
mov
test
sbb
pop
cltd
cmp
lahf
loop
inc
sbbb
fcmove
inc
push
and
leave
inc
scas
cmp
add
adc
mov
pop
add
adc
jbe
imulb
jae
inc
dec
jle
sbb
aad
pop
stos
cmpsl
push
stc
inc
jge
mov
pop
inc
or
and
cmp
cmp
pop
lcall
out
pushf
gs
cmp
outsb
into
adc
pop
loop
arpl
and
jae
outsl
vpaddusw
dec
loope
mov
outsl
repz
gs
xchg
push
push
adc
jecxz
jg
pop
pop
mov
repnz
dec
sub
sbb
inc
jbe
loopne
ja
sbb
out
xchg
xor
mov
jp
jbe
fwait
add
push
add
daa
in
mov
sarb
faddp
stc
mov
mov
or
test
xlat
shll
in
test
dec
push
xor
and
push
loopne
mov
mov
pop
dec
and
out
dec
test
cmp
outsl
mov
sub
pop
mov
adc
test
lds
icebp
mov
cli
and
cs
inc
ficoms
push
fsubs
jmp
cs
insb
jle
cmc
cmp
cmp
jl
hlt
xor
and
in
or
out
rorb
les
mov
fisubrs
jg
jg
inc
cli
shll
ret
mov
mov
and
and
cmp
fs
xchg
xor
hlt
stc
sbb
xchg
subl
ds
mov
mov
sbb
mov
stos
xor
mov
scas
sbb
ja
aam
imul
lock
out
lds
fwait
cld
fsub
cwtl
push
std
push
xchg
adc
popa
in
aaa
pop
cmpsl
xchg
aaa
icebp
pop
inc
jno
dec
jp
jle
aas
jo
aaa
push
push
xor
xchg
mov
lods
ret
bound
les
cli
cld
add
sbb
shlb
fldt
jp
ret
rolb
sti
sbb
sti
dec
fnstcw
xchg
loop
cmp
movsw
std
clc
out
cmp
or
push
into
gs
insb
adc
or
in
xorb
sub
cmpsb
cmpsb
add
xor
sbb
push
jne
lret
in
imul
xor
test
inc
gs
inc
sbb
outsl
adcl
lods
adc
add
stos
test
sahf
inc
popa
div
test
mov
jp
jle
jnp
inc
sti
cltd
jo
aas
push
jbe
or
and
add
gs
mov
inc
sub
lock
pop
popa
push
adc
and
pop
arpl
sub
shll
popf
shlb
pop
pop
loop
push
fstl
test
popf
mov
xor
adc
and
dec
inc
test
jnp
scas
adc
pavgw
clc
sti
xor
sbb
lock
je
lcall
cltd
orb
mov
jmp
xchg
pushw
and
fstpt
xchg
jmp
lods
into
jg
xchg
pop
in
mov
cmp
mov
fwait
mov
ds
negb
int3
stos
aad
bound
arpl
pushf
fcmove
xor
sbb
mov
mov
mov
xchg
mov
lret
and
mov
dec
sub
or
cmp
xchg
xchg
dec
aas
es
imul
enter
inc
cmpb
dec
subl
or
jg
pop
inc
sub
inc
shlb
nop
xlat
mov
clc
sub
mov
scas
shll
out
mov
inc
lea
add
add
popf
ret
add
sbb
jno
ret
test
fs
fistpl
lock
mov
js
mov
not
stc
int3
push
inc
adc
adc
roll
insb
push
pushf
cmp
mov
inc
arpl
imul
xchg
adc
mov
mov
mov
sti
enter
in
iret
pop
xor
jg
xor
rcll
fisubs
mov
xchg
xchg
mov
test
mov
pop
mov
test
popa
fisubrl
ja
pop
jns
notb
jp
xor
mov
or
cltd
test
test
pop
jmp
out
dec
sub
mov
das
xchg
pushf
xchg
mov
xchg
arpl
xor
sbb
cmp
les
cmpsb
lahf
popa
ret
lret
push
test
fiaddl
adc
add
mov
inc
movb
rclb
fsubrs
inc
add
jns
xchg
pusha
test
dec
clc
add
dec
sti
arpl
mov
pop
stos
xor
mov
mov
mov
cmp
adc
xor
inc
adc
add
sub
ss
adc
pushf
imul
repz
cld
sub
pop
push
sub
shll
push
sub
rorb
xchg
ds
loop
mov
addr16
imul
in
mov
xor
idivl
lods
push
dec
js
or
lods
sub
mov
lret
push
sbb
mov
shlb
add
jb
in
push
xchg
jno
jbe
or
lret
popa
xchg
jmp
xlat
mov
add
lret
outsl
cmp
testb
std
dec
add
add
inc
clc
pushw
andl
xchg
imul
ficoml
les
sub
pop
xorl
pop
repz
out
inc
xchg
adc
sbb
out
movl
std
and
movsl
mov
inc
cmp
pop
fwait
add
xchg
inc
icebp
lret
ror
aam
lea
jbe
dec
shrl
adc
lock
mov
fcoml
xlat
sbb
push
mov
out
push
loop
fcmovbe
mov
or
pop
jp
cltd
mov
dec
vpabsw
pop
in
lods
mull
or
adc
xchg
jnp
dec
clc
dec
mov
mov
dec
shll
pop
inc
and
jecxz
push
js
lret
leave
xchg
std
mov
out
xor
jns
inc
je
mov
jns
insl
inc
jne
jo
mov
jb
shll
dec
shlb
mov
cmc
pop
jns
dec
sub
mov
mov
rcrb
call
push
xchg
push
xchg
push
cli
mov
push
pop
mov
xchg
adc
mov
mov
mov
add
cmp
lock
decb
pop
popf
adc
aam
in
dec
sub
xchg
jmp
movsl
enter
dec
hlt
test
xor
add
rorl
or
divb
jmp
push
xchg
mov
push
mov
stos
aaa
mov
lret
lea
mov
sub
sbb
clc
sub
pusha
pop
leave
leave
pop
loope
aam
aam
shrl
xchg
xchg
jmp
pop
push
aam
scas
test
pop
in
and
mov
lods
scas
mov
lods
jp
pop
mov
sbb
fimuls
cltd
xchg
mov
cmp
daa
mov
mov
rorb
into
je
aad
jmp
push
test
adc
jg
jg
les
or
cmc
aam
mov
mov
or
movsl
fs
adc
lds
fsts
out
aam
popf
or
sbb
cmc
data16
xchg
mov
es
popf
movsb
adc
mov
cwtl
outsl
mov
daa
mov
and
mov
movsb
insb
ret
cs
xor
cli
bound
jecxz
and
sti
add
adc
cmpsb
cmp
aas
into
mov
ficompl
loopne
dec
jns
jns
pushf
mov
fldl
aaa
imul
ds
mov
mov
xchg
push
sbb
sbb
dec
and
inc
loopne
mov
jns
imul
xor
daa
mov
inc
add
add
push
inc
fldt
out
aas
push
add
stos
in
xorl
adc
mov
pop
sub
xor
in
test
out
add
nop
divl
mov
adc
fsubs
fiadds
mov
or
call
call
cmp
fnsave
daa
mov
sti
or
xchg
xor
shlb
pusha
aam
nop
fldenv
push
out
sub
mov
hlt
hlt
adc
test
pusha
aad
icebp
test
sbb
sub
sbb
fstp
sbb
jbe
mov
or
fs
dec
xor
inc
or
inc
jle
jbe
sti
int3
cmp
mov
test
sbb
int
jl
loopne
jns
mov
mov
adc
shlb
push
jmp
cmp
in
ja
sbb
enter
xchg
addr16
test
daa
lea
push
sub
sub
push
or
push
jg
push
test
shl
xchg
outsb
fcoml
mov
cld
push
sub
in
mov
arpl
pushf
mov
int
cmp
adc
pop
dec
ja
jl
sarb
pop
mov
adc
loop
sbb
pop
aaa
int
dec
sbb
inc
adc
mov
push
adc
and
jnp
out
and
and
icebp
dec
hlt
daa
loopne
adc
mov
movsl
adc
or
lcall
pop
jge
mov
dec
xchg
pop
in
loope
clc
and
out
sub
mov
add
inc
in
out
mov
inc
jg
xchg
jge
sub
cltd
mov
leave
xor
or
xchg
cmp
loopne
popf
cld
ret
sahf
out
pop
add
aaa
stos
in
jns
stos
push
hlt
sub
push
cld
mov
inc
jle
mov
push
lods
jmp
mov
mov
stos
test
popa
inc
cltd
mov
fdivrl
decl
lahf
rclb
cld
add
mov
lahf
lahf
sbb
inc
mov
adc
jb
sub
insl
mov
cwtl
lods
or
cltd
sbb
jne
xchg
outsl
jmp
in
inc
mov
inc
movsb
pop
xchg
mov
stc
daa
fsubrp
cltd
sbb
and
fsubs
pushf
rorl
xchg
push
scas
fildl
int
sub
sub
nop
pop
ffreep
jne
xchg
out
imul
scas
pop
inc
cli
xchg
jnp
out
cmp
xchg
inc
fsubrs
fimuls
jbe
mov
das
dec
push
dec
mov
pop
xchg
sub
mov
mov
in
add
jecxz
iret
push
cmp
jmp
addl
push
std
call
jno
mov
imul
cmp
rorb
dec
pop
ficoms
cltd
pusha
and
sbb
int
test
fbstp
xor
fwait
ja
leave
cltd
int3
pop
push
add
push
adc
inc
push
lods
movb
cmpsb
push
xor
xor
jno
into
inc
dec
gs
pop
scas
inc
inc
int3
icebp
fs
sub
js
pop
and
mov
sub
jge
aad
in
lods
ret
out
dec
adc
jp
int
inc
shlb
or
push
leave
push
call
ret
subb
decl
push
or
mov
ret
sub
lret
or
mov
adc
sub
loope
pop
sub
xor
nop
mov
and
aaa
imulb
sbb
hlt
jno
mov
int
cld
push
xchg
adc
adc
ret
jp
xor
inc
mov
fs
adc
and
or
out
imul
adc
mov
push
or
mov
mov
les
xor
hlt
lcall
out
cmpl
jae
je
add
cli
fistl
lea
test
xchg
jbe
lods
add
mov
and
add
cld
xchg
xchg
mov
jg
loope
dec
rol
inc
push
negl
int
loopne,pn
sarb
addr16
stc
das
add
lcall
dec
mov
stc
mov
ljmp
popf
fidivs
popf
ds
aad
mov
pop
fadd
or
inc
scas
cmp
ds
es
movsb
andl
mov
out
dec
lods
pop
or
fwait
mov
mov
fsts
inc
pop
ljmp
leave
jge
out
ficoms
pop
cs
xchg
mov
dec
cmc
xchg
sbb
push
or
or
and
inc
scas
shrl
sbbb
pop
dec
outsl
push
in
int3
adc
test
mov
call
into
es
icebp
sub
sarb
mov
sbb
inc
outsl
inc
movsl
les
xchg
sbb
and
cs
lret
out
pop
sub
add
mov
sahf
pop
mov
lret
cmp
hlt
dec
in
in
cmpsb
or
inc
mov
inc
icebp
jno
stos
mov
insb
daa
adc
fstpl
push
and
imul
fdiv
sti
leave
dec
pop
inc
out
cmp
out
adc
jae
sahf
lret
jns
xlat
mov
dec
fwait
insb
inc
sbb
sahf
xor
hlt
and
dec
push
imul
dec
mov
rorb
mov
mov
dec
sbb
xor
rcrb
jno
xchg
mov
pop
clc
clc
popf
mov
sub
movsl
inc
pop
lret
dec
push
adc
and
jae
or
sbb
fidivrs
mov
push
jb
xchg
into
mov
ja
or
cmpl
std
xchg
fistpll
mov
mov
push
mov
cli
flds
mov
idivb
daa
add
mov
insb
lods
push
push
inc
sub
cmp
push
sbb
das
ds
pop
scas
test
insb
xor
mov
ljmp
push
sbb
cmp
add
data16
xor
jle
sub
pop
andl
mov
adc
xor
sarb
push
ljmp
stos
mov
add
sub
push
dec
test
adc
dec
mov
jnp
inc
ss
ja
lcall
jmp
inc
mov
pop
and
lret
shl
addr16
cmp
pop
fucomp
pop
leave
daa
jmp
fwait
mov
je
pop
cmp
pop
adc
sub
cld
and
decl
dec
and
mov
popf
aam
aad
mov
insl
and
nop
sbb
ljmp
push
inc
pop
inc
movsl
pop
in
pop
xchg
repnz
repnz
in
loop
jmp
mov
sbb
andl
movsl
mov
mov
sbb
movsb
pop
cmp
ffreep
fistl
call
jns
jle
jno
insb
std
inc
js
fdivs
lret
and
inc
cmp
gs
push
xchg
dec
stos
insb
pop
test
aam
jecxz
lret
jl
in
scas
dec
leave
and
add
dec
adcb
pop
dec
sbb
test
and
aaa
lcall
xchg
jne
mov
fstpl
adc
xor
ret
imul
pop
enter
adc
xorl
mov
cmp
pop
ret
stc
jge
daa
push
scas
int3
addr16
shrb
and
jbe
sub
fdivs
loope
mov
mov
mov
jl
jne
push
test
add
add
push
lret
jae
in
mov
sub
test
mov
int
xchg
mov
andps
mov
push
xchg
fisubrs
adc
pop
pusha
xchg
pop
lds
fcomp
push
repnz
mov
jnp
lea
sbb
scas
cmp
test
nop
jl
or
mov
xor
xchg
or
scas
inc
mov
in
cld
inc
mov
fisubl
jno
push
inc
mov
out
mov
push
sbb
out
popf
mov
push
push
dec
and
fisttpl
imul
cmpsl
popf
add
dec
adc
push
cltd
dec
lods
data16
mov
jae
pop
ja
push
testb
inc
stos
mov
mov
mov
cmp
ljmp
fiaddl
shrb
jge
and
xchg
rolb
xchg
sbb
imul
dec
stos
imul
jns
and
and
imul
in
push
xor
or
fs
outsb
dec
cmp
iret
push
mov
jmp
sub
shlb
sbb
lock
pop
push
das
mov
push
and
pop
in
out
dec
mov
test
dec
fdivs
dec
aam
or
bound
in
les
bound
jle
addl
pop
mov
cs
sub
xchg
aas
sbb
cmp
sbb
in
xchg
les
test
adcb
scas
and
cmp
jb
aaa
and
les
mov
in
cmp
pop
inc
in
sub
ret
imul
gs
popa
or
loopne
cs
dec
pushf
cmp
push
mov
dec
insb
fmul
adc
aam
adc
xchg
jmp
js
shrb
mov
xor
xchg
mov
rcl
add
out
call
std
sub
push
cs
xor
jp
flds
jecxz
sub
sahf
sti
xchg
or
sahf
xchg
mov
sub
lock
call
dec
enter
rclb
int3
xlat
daa
and
mov
test
jns
mov
out
inc
ss
aad
fs
dec
sti
xchg
ficompl
imul
outsb
nop
dec
mov
das
out
adc
inc
pop
sbbb
movl
pop
mov
loop
pusha
mov
daa
mov
loopne
loopne
push
push
dec
cmp
out
imul
shl
sbb
addb
mov
mov
lods
movsb
repnz
ret
jo
cmp
inc
jl
inc
je
push
jmp
dec
rclb
popa
mov
push
leave
mov
dec
loope
imul
insl
cmp
push
pop
cli
jno
add
push
out
inc
inc
xor
pop
insl
pop
cmp
in
push
in
in
xchg
mov
popf
xor
ret
add
out
push
and
xchg
pop
cmp
rorl
push
xchg
mov
push
jno
jae
dec
rclb
mov
mov
push
xor
or
mov
adc
mov
out
hlt
mov
jne
adcl
stos
sbb
repz
mov
mov
into
push
sub
adc
jmp
pop
fsubs
adc
call
inc
mov
add
add
dec
mov
ret
push
das
cltd
fwait
scas
pop
mov
into
negl
xor
jmp
fmul
repz
mov
iret
cld
add
push
loop
es
aas
xorb
jp
int
jnp
ja
fdivrl
xchg
nop
outsl
sub
test
sbb
into
mov
adc
andb
aas
lock
int3
jnp
out
loope
enter
mov
scas
insl
pop
adc
adc
xchg
or
add
test
cmp
loopne
mov
js
add
test
nop
sub
add
add
pop
xchg
lahf
mov
xchg
pop
ljmp
sahf
jb
call
mov
int3
mov
iret
ficomps
xchg
loop
jo
jle
xor
push
jbe
xor
jecxz
repnz
outsl
cmp
iret
xchg
dec
cmp
mov
push
add
push
mov
pop
push
jmp
xchg
jl
loop
sbb
push
xor
xor
jbe
sub
ja
movsb
pop
ja
lret
mov
dec
cmp
jp
mulb
xchg
out
sti
test
negb
lock
and
lcall
sbb
and
or
jg
shl
lods
mov
or
push
into
in
mov
mov
mov
je
loope
push
inc
jbe
sbb
lahf
xor
xorb
xor
scas
dec
pop
lret
aad
call
leave
xor
rolb
fidivl
faddl
dec
push
cmpsl
scas
jo
imul
orl
lods
inc
popa
pop
enter
sub
out
lods
xchg
je
and
ret
jno
fwait
add
iret
add
pop
mov
adc
cmp
add
mov
jns
in
and
aad
mov
fs
add
aad
push
sub
fdiv
mov
popa
imul
cmpsb
out
les
aam
cmp
xchg
imul
jb
mov
pop
push
xlat
gs
ljmp
add
xchg
inc
sbb
mov
jmp
popa
sbb
cld
jae
xor
enter
les
les
and
and
mov
ds
add
inc
sahf
in
imul
adc
mov
mov
loope
lret
lea
jecxz
cmc
aam
and
daa
mov
outsl
xor
jno
outsl
cmpsb
sbb
mov
adc
cld
add
xor
lods
mov
xor
jae
loopne
mov
int
in
in
fs
xchg
lods
sbb
or
jnp
mov
or
in
push
cli
xchg
in
test
sbb
mov
mov
xlat
mov
arpl
sbb
imul
in
adc
mov
out
fidivl
xchg
stos
cmpsb
jnp
inc
mov
aas
ret
jnp
mov
test
in
xchg
movsb
push
lret
jmp
out
out
or
fwait
xchg
cmp
pop
sbb
mov
sub
cld
aas
sub
sub
fldcw
out
insl
pop
sub
imull
jo
popf
add
sub
push
in
les
roll
pop
nop
sbb
xor
cmpsl
mov
xchg
push
pop
stos
aad
jge
fcoms
xor
outsl
mov
lea
fs
shll
mov
daa
cltd
jl
xchg
fildl
adc
xchg
int3
jae
stc
das
cmc
sub
and
daa
stos
xor
nop
add
pop
pop
rclb
shrl
test
xchg
xchg
stc
jne
int3
push
sub
add
xor
dec
or
lahf
mov
xchg
sub
inc
and
jp
in
std
lods
icebp
icebp
jns
lds
mov
sub
dec
xchg
inc
es
mov
test
adc
dec
ret
and
or
ret
jge
mov
aaa
out
jge
testl
aam
repnz
stos
sub
pop
jbe
fnsave
pop
dec
cmp
out
sub
mov
mov
test
lret
sahf
cltd
iret
popw
mov
jne
cwtl
fwait
xor
mov
cs
rorl
inc
add
pop
test
sarl
aad
and
test
hlt
inc
es
jge
dec
jnp
cs
andl
jp
loopne
mov
push
jb
jns
aad
cmp
mov
fstl
lods
sub
test
scas
ror
cli
stos
leave
into
roll
lods
test
sahf
lock
scas
scas
cs
stos
cs
adc
jmp
xor
jns
mov
ljmp
lahf
xchg
sbb
push
pop
add
or
adc
pop
xchg
sub
int
mov
out
xchg
fbstp
add
movl
xor
ss
daa
xchg
test
add
les
lods
xchg
inc
inc
int
mov
push
fsubr
xor
pop
pop
or
lret
xchg
pop
jg
call
ss
mov
jmp
ret
pop
das
fisubl
lret
adc
sub
mov
movsl
insb
mov
cwtl
mov
hlt
pop
xor
sti
lret
and
push
and
bound
shll
dec
push
loope
in
sub
fst
test
adc
popw
adc
inc
movsl
mov
push
shr
add
mov
orl
sub
or
movsb
out
or
test
push
mov
and
adc
cmp
push
out
jno
lret
jno
push
jecxz
pusha
adc
fdivs
mov
sbbb
jge
sub
rclb
push
mov
idivb
cld
movsl
mov
sahf
aad
adc
pop
and
add
sbb
mov
dec
fsubrs
or
mov
outsb
xor
sub
or
aaa
pop
mov
cmp
fists
daa
insl
dec
fs
inc
jge
jo
pop
pop
scas
xor
aad
pushf
testb
in
pop
xor
adc
cmc
xor
mov
adc
xchg
cmp
add
insb
jge
fwait
repnz
mov
and
push
es
sarb
mov
inc
jp
mov
scas
push
pop
shll
js
push
cmpsl
fists
pop
out
inc
in
sahf
adc
push
sbb
sahf
mov
and
adc
xchg
lds
repz
lds
movsb
mov
jno
jecxz
ret
push
ljmp
out
clc
test
lcall
mov
dec
je
pop
push
xor
ja
sub
sbb
jmp
add
std
fs
push
mov
test
fldl
mov
push
icebp
mov
iret
push
dec
dec
mov
mov
out
adc
outsb
push
fcomp
cmc
push
std
pop
push
mov
mov
shrb
cmpsb
dec
ficompl
mov
daa
inc
ja
roll
push
adc
roll
mov
lds
cltd
lea
cmp
hlt
setl
inc
dec
xorl
cmp
inc
mov
movsb
push
xchg
inc
test
out
dec
dec
cli
daa
push
cld
into
xchg
imul
or
jle
inc
mov
add
sub
push
jecxz
pop
xor
insl
xor
out
jg
fcompl
shrb
xor
aaa
mov
dec
sub
push
mov
insl
clc
cwtl
jg
fildl
arpl
or
lret
aaa
fsubrl
inc
cli
jb
mov
xchg
sub
xchg
xor
or
popa
sub
shll
jno
les
or
in
xchg
scas
jmp
or
fisttps
stc
push
imul
jge
push
push
out
xlat
in
pop
mov
cltd
leave
mov
cmp
lods
dec
pop
repz
cmp
cmp
outsl
call
iret
adcl
out
std
dec
rorb
jmp
xchg
vcvtsd2si
pop
loop
dec
ljmp
lods
das
lods
pop
test
test
sub
les
xor
fsubrl
mov
cmc
shll
fnstcw
addl
iret
mov
insl
es
sub
xor
adcb
xor
sub
adc
and
push
lock
dec
pop
inc
leave
fcoml
sbb
popf
xchg
cmp
mov
jmp
insb
mov
xor
pusha
xchg
outsl
rorb
push
popa
cmc
mov
clc
add
cmp
inc
scas
jecxz
xor
push
jle
or
movsb
pshufw
mov
dec
addr16
add
insb
lahf
pop
jnp
or
call
pop
mov
pop
mov
jp
jecxz
icebp
js
or
shrl
xchg
jno
xchg
pop
in
fnsave
jg
inc
ss
push
mov
sub
lods
mov
out
bound
loopne
aam
fistps
or
push
xor
push
sbb
int3
dec
or
lods
mov
mov
dec
pop
dec
adc
stc
pop
mov
aaa
sahf
pop
inc
shrl
push
dec
or
rolb
mov
or
or
int3
inc
xchg
jbe
fimull
adc
add
jmp
outsb
cli
int3
and
pop
sbb
dec
lock
mov
incw
loop
or
lock
cltd
cmp
xor
push
xchg
jl
jmp
jl
ficoms
inc
das
sarl
imul
iret
imul
cs
nop
jge
add
mov
enter
out
mov
push
pop
stc
xchg
orl
hlt
push
test
inc
mov
jne
hlt
xchg
dec
jle
outsb
movsb
mov
xor
jecxz
xchg
movsl
outsb
aaa
sub
xchg
adc
push
cmp
xor
scas
cmp
mov
sub
std
push
jb
jae
mov
jge
data16
and
das
rcr
jae
cs
add
cmp
dec
rol
xchg
dec
mov
pop
ret
jnp
int
xchg
adc
jb
dec
call
jb
faddl
sbb
mov
inc
jecxz
mov
cmpsb
xchg
out
test
rcrb
int3
xor
sbb
xchg
xchg
fbld
adc
jno
dec
push
sbb
dec
in
frstor
outsl
dec
sub
loopne
or
lds
jl
lahf
add
mov
push
adc
cli
jbe
adc
dec
push
addl
dec
or
leave
add
push
inc
loop
or
inc
mov
imul
xchg
inc
cmp
sbb
inc
lods
sub
cmc
pushf
addb
lea
xor
adc
popa
or
push
int
push
xorb
adc
shrl
insb
in
or
inc
mov
leave
jmp
or
fistps
cmp
mov
stos
cli
xor
xchg
clc
out
mov
jg
sbb
inc
into
aad
adcb
cmp
aam
or
fwait
icebp
rcrl
ss
jo
inc
jnp
in
imul
pop
aam
leave
push
mov
push
insb
repz
lock
mov
jge
pushw
and
fcomps
push
push
adc
pop
movsb
fwait
cmp
push
jmp
cmp
xor
imul
enter
in
scas
jne
imul
mov
in
sbb
imul
out
lea
fsubs
cmpsb
jo
bound
test
popa
movsb
sbb
mov
xor
rcrl
push
xlat
ljmp
push
mov
dec
loopne
inc
cmpsl
fistpll
jp
stos
rcrb
loop
jne
adc
movsl
and
xchg
mov
stos
dec
dec
int3
mov
insb
push
mov
add
repnz
movsl
jmp
repz
push
inc
mov
je
into
out
call
mov
loope
sub
pushf
or
xor
je
add
jbe
inc
mov
dec
mov
stc
push
cmp
jmp
and
cmpsb
pop
out
adc
push
xor
pop
lock
push
jecxz
push
dec
add
scas
lods
jle
xchg
lret
int3
orl
mov
test
push
dec
mov
scas
or
ss
or
xchg
shrl
mov
mov
xchg
ficoms
les
hlt
cltd
mov
mov
mov
sbb
sti
ljmp
sbb
add
add
es
repz
outsb
out
fstps
adcl
lret
pop
xchg
popf
jp
dec
stc
push
fdivrs
sub
add
mov
mov
pop
insb
int3
sub
ja
xor
sub
outsb
pop
cmp
jnp
das
cmpsl
into
inc
and
movsl
dec
inc
pop
pop
sbb
sarb
and
push
outsb
adc
fdivrl
and
pop
mov
movsl
lret
lods
mov
outsl
mov
and
jecxz
adc
xchg
xor
pop
stc
rcll
pop
popf
push
sbb
lcall
inc
in
ja
leave
sub
nopl
nop
ret
xchg
call
push
or
push
ret
out
and
or
ret
or
xchg
icebp
jne
aam
push
in
jle
mov
add
daa
clc
std
dec
test
scas
xor
sub
push
mov
adc
inc
outsb
bnd
xchg
mov
lock
stos
cli
push
dec
inc
rolb
inc
add
cmp
sub
dec
mov
into
mov
fsubrs
push
pushf
popf
stc
popa
jmp
in
pop
dec
jno
cmp
in
les
adc
in
inc
int3
cmc
es
jle
test
movsl
inc
jne
add
xchg
mov
out
cltd
and
sahf
sub
xchg
jo
outsb
dec
adc
dec
iret
mov
push
pusha
pushf
cmc
ffree
cmpsl
mov
inc
loopne
sbb
jle
btr
out
data16
addb
faddp
loope
fiaddl
mov
dec
test
sbb
jl
movsl
xor
xchg
cmpsl
dec
movsl
ja
jmp
loopne
aam
scas
add
mov
mov
adc
sub
xchg
jbe
jo
pop
pop
mov
jae
xchg
fs
lcall
aam
mov
xlat
mov
push
fnstenv
cmp
in
jp
insb
dec
mov
xorps
test
push
mov
les
out
fisubl
dec
jl
pop
dec
adc
insb
xor
in
jno
xlat
ds
push
test
push
and
xchg
andb
pop
jns
ret
das
jmp
dec
jns
jno
mov
leave
rcll
outsl
push
lret
dec
pop
pop
jno
mov
divb
push
xor
push
mov
fsubrs
push
std
int3
and
call
iret
cmp
and
or
jle
xor
inc
rcrb
in
or
push
ret
add
aas
cmpl
mov
cli
mov
loope
mov
ljmp
out
adc
out
sub
and
mov
xorl
xchg
test
mov
out
dec
xor
lock
jno
cmp
inc
push
stos
cmp
fdivrl
test
jle
sarb
mov
cltd
sbb
mov
xchg
mov
imul
ret
jg
scas
aad
dec
sbb
push
insb
stc
das
push
or
shll
pop
sbb
mov
aas
push
stos
lcall
push
fists
jbe
adc
outsl
xchg
xchg
mov
sub
sar
inc
outsl
mov
pop
mov
or
loop
fsubrs
push
xchg
inc
insb
push
mov
jge
inc
arpl
jmp
xchg
add
ds
loope
scas
mov
mov
dec
in
scas
aam
push
sbb
mov
jg
xchg
dec
jnp
xchg
fdivs
in
xor
out
stos
xor
mov
lea
outsb
fmull
sub
dec
lods
mov
jb
adc
leave
imul
incl
push
pusha
push
push
mov
popa
mov
xchg
nop
es
outsb
lock
cltd
dec
sti
push
lock
cwtl
inc
inc
cmp
adc
dec
adc
xor
popa
shl
loopne
imul
push
mov
cmp
jg
outsb
leave
inc
les
add
xchg
jp
lods
push
sub
xor
out
int3
bound
inc
es
adc
js
int
lods
sub
es
hlt
in
ret
cvttps2pi
leave
dec
xchg
cld
xor
cmp
flds
mov
arpl
cmc
rcl
or
mov
mov
adc
in
lahf
loope
add
pop
fs
fldcw
mov
mulb
mov
dec
test
xor
adc
cs
and
shr
sbb
jmp
popa
stos
popf
jecxz
dec
and
and
push
in
jo
mov
hlt
repz
sub
and
and
jnp,pn
or
jl,pn
dec
pop
push
or
push
aas
inc
mov
nop
or
lret
sbb
mov
cmp
adc
dec
xchg
pop
add
out
cltd
lcall
mov
push
add
test
xchg
andl
fnstcw
push
sub
xchg
and
flds
fs
dec
lret
xchg
inc
daa
mov
sub
lods
mov
push
movsb
lret
add
leave
out
xor
ss
sbb
negb
sbb
clc
sahf
xchg
xor
nop
pop
mov
xchg
mov
or
xchg
adc
cmp
fnstenv
dec
pop
mov
test
sub
xchg
mov
fs
mov
sbb
lods
decl
and
fwait
test
in
push
push
mov
out
add
mov
dec
test
inc
push
test
in
clc
cmpsl
leave
dec
mov
adc
ljmp
loopne
fisttps
std
jno
in
pop
loopne
outsl
fdivrs
sahf
callw
das
adc
imul
adc
fimull
add
inc
es
loop
sub
sbb
lret
flds
mov
push
add
fbld
push
in
dec
shl
sub
insl
xorl
repnz
dec
imul
sbb
fidivrs
mov
sub
pop
lcall
ficoml
xchg
fsubp
push
sub
or
dec
sbb
xlat
and
xchg
sub
sahf
imull
push
jmp
rcr
xchg
add
sub
cmp
inc
jne
xchg
clc
cmp
ds
xchg
sbb
addr16
adc
aas
sahf
fisubrl
pop
stc
push
jg
dec
icebp
inc
jge
xchg
inc
jae
xorl
cmpsl
fsubs
ds
jbe
jmp
lahf
mov
loopne
push
icebp
test
nop
dec
imul
fadds
adc
adc
pop
jo
mov
fnstcw
movsb
and
mov
sbb
outsl
in
pop
or
jae
enter
fstl
xchg
fidivrl
or
mov
mov
push
adc
not
and
fwait
lret
pop
or
or
fisubrs
dec
jo
and
mov
pop
ffreep
outsb
mov
adc
nop
sbb
rcl
and
sub
insl
lret
sbb
adc
sbb
sbb
push
adc
adc
and
push
out
or
cmp
mov
scas
pop
fwait
xchg
clc
push
adc
or
stc
cmp
mov
aas
xor
cld
mov
cmp
mov
push
test
xchg
dec
pop
dec
push
hlt
cmp
leave
mov
and
insb
ret
inc
fmull
sbb
adc
pop
jmp
lahf
scas
push
fwait
rcrb
fisubrs
push
std
shll
test
jbe
adc
adc
or
scas
lret
mov
jno
popf
push
mov
and
gs
sbb
mov
lret
lahf
mov
mov
leave
pop
and
inc
es
int
outsl
enter
or
and
jmp
out
xlat
xor
int
lret
cmc
daa
fisubl
mov
jge
mov
fstps
mov
loope
loope
jb
cwtl
fcmovnb
movsl
fs
loop
cmp
mov
ret
adc
dec
out
js
rcr
push
loopne
imull
adc
xchg
andl
push
mov
dec
cmp
mov
stc
mov
jmp
movsb
xchg
push
cmp
mov
xchg
out
pop
ret
add
sahf
out
movb
mov
insl
fidivrs
ret
jno
xchg
cs
mov
jecxz
daa
pusha
sub
sub
sub
orb
cmpsb
rep
dec
jb
dec
jo
xor
bound
loop
les
xlat
fnstcw
sub
lods
neg
pop
nop
rcrb
xchg
or
sbb
mov
xchg
push
cli
inc
pop
push
stc
sub
or
mov
jne
scas
neg
lods
scas
fidivrs
repnz
sub
fildl
outsb
aas
mov
adc
dec
loope
aam
or
insb
sub
test
leave
mov
jp
icebp
push
xchg
scas
imul
test
es
xchg
xor
pop
sbb
and
push
mov
xchg
aam
rcl
add
insl
xchg
mov
dec
pop
pop
fwait
enter
xchg
dec
pop
push
dec
popa
add
mov
cs
xor
lcall
out
inc
jl
xchg
pop
loope
ret
lea
pusha
lret
or
mov
test
push
inc
or
add
mov
mov
pop
repnz
or
fsubl
dec
int
cs
mov
gs
or
mov
cld
cmp
fldt
mov
sahf
ret
inc
jno
clc
xor
push
sbb
call
loope
shll
pushf
mov
test
mov
push
adcl
sub
aad
lods
mov
cmp
push
addl
rcrb
pop
dec
lahf
jge
inc
js
inc
add
add
and
inc
int3
and
lock
fcoms
nop
cs
imul
hlt
jecxz
outsb
fists
ja
xchg
test
inc
pop
adc
ud0
and
jb
jg
into
aaa
mov
daa
jg
mov
fstl
lock
popl
ss
xchg
and
mov
lret
dec
js
enter
mov
cmp
dec
orl
in
pop
inc
icebp
clc
jnp
mov
push
imul
mov
insl
dec
enter
mov
xor
sti
test
sbbb
push
std
mov
lock
insb
dec
aam
xor
scas
xchg
ds
rcrl
mov
sti
add
subl
cmp
push
out
fdivrl
jns
mov
int3
orb
mov
xor
xchg
in
add
lret
add
ror
push
xor
pop
xor
das
or
lods
cmp
leave
pop
mov
dec
sahf
dec
lock
mov
mov
mov
insb
add
jmp
ja
xchg
mov
or
xchg
jg
xor
inc
cmpsl
lret
je
mov
and
inc
pop
inc
test
notb
cmp
push
popf
or
mov
adc
imul
cmp
ret
lods
dec
mov
add
sub
loopew
mov
lea
out
fdivrs
in
xor
enter
jp
mov
lock
fists
mov
mov
das
inc
pushf
pop
jbe
int
mov
mov
adc
ror
js
pop
fcmovne
xchg
pop
sub
mov
adcl
into
sub
inc
movsl
sbb
test
sbb
pop
push
mov
popf
pop
mov
lods
mov
fcompl
scas
test
pop
cltd
and
leave
or
jno
addl
fbld
cltd
cmpsb
or
inc
dec
ljmp
dec
icebp
push
jns
push
outsl
outsl
lahf
xchg
mov
in
gs
and
iret
inc
mov
sub
outsl
mov
xchg
xor
push
fcoms
adc
add
mov
movsb
mov
mov
sub
push
mov
fwait
pop
ss
pop
or
gs
cwtl
push
gs
xchg
and
lcall
dec
xchg
in
popf
jecxz
pop
adc
pop
es
sub
mov
xor
sbb
outsb
mov
add
gs
mov
xchg
xor
dec
or
sub
or
aaa
hlt
push
cld
push
shlb
loope
repz
or
cmpsl
cli
inc
or
jp
popa
pop
jb
iret
xchg
aad
pop
les
mov
adc
pop
jl
and
mov
std
jmp
ds
cbtw
jb
cld
xchg
and
aaa
dec
cmp
insl
mov
imul
dec
fwait
cmpb
fstpl
fdivrs
les
sahf
add
sbb
cwtl
add
adc
movsl
jecxz
dec
pushf
loope
loopne
xchg
inc
repnz
sti
je
cs
loopne
mov
sbb
fs
add
sbb
xor
dec
ds
xchg
jg
aas
arpl
xorb
mov
std
nop
in
rclb
mov
loop
test
lret
add
loop
imul
out
push
outsl
mov
addr16
mov
enter
into
xchg
dec
xlat
jecxz
push
test
and
aad
fiaddl
addr16
das
idivb
outsl
push
repz
mov
pusha
push
mov
xor
cmpl
loopne
shll
push
cmp
jle
add
call
push
fistl
cmpsb
add
enter
cli
and
scas
jl
mov
aaa
adc
jo
mov
lock
push
mov
aad
std
ds
adc
cli
orl
mov
sbb
mov
adc
inc
push
cwtl
xchg
lods
mov
in
xor
mov
pop
stc
and
pop
or
insb
out
outsb
add
je
sahf
fimull
push
imull
loop
adc
xlat
out
in
sbb
xor
ja
test
fistpl
cmove
rol
sub
or
roll
shlb
aaa
test
jae
inc
cltd
inc
insl
fisubl
icebp
es
test
jmp
addl
aad
mov
jne
pop
push
mov
xchg
imulb
dec
inc
inc
push
dec
sti
jg
aad
in
cmpsb
addr16
pop
sub
out
dec
mov
push
sbb
das
or
div
or
hlt
enter
jnp
pop
sbb
dec
pop
mov
sbb
stc
lea
jecxz
clc
inc
jns
adc
lcall
xor
mov
push
pop
and
sahf
test
adc
inc
push
cmovno
aad
pop
stc
or
cmpsb
push
fcmovne
cmpb
popf
mov
movsl
cmpl
das
dec
mov
adc
sti
jle
dec
mov
cmpsb
push
dec
imul
push
pop
ds
ret
popa
mov
pushf
dec
mov
mov
dec
inc
in
mov
or
xor
dec
sbb
mov
push
les
stos
test
push
inc
imul
sbb
adc
mov
loopne
hlt
cmovno
in
pop
adc
cmpl
adc
rcrl
arpl
jne
ss
dec
fwait
add
repnz
enter
cmp
push
std
jl
sarl
mov
push
lock
cld
jg
popf
repz
loope
mov
dec
sbb
aad
adc
movsb
mov
cmpsb
enter
inc
push
inc
xchg
js
dec
xor
imul
push
pusha
push
and
rcr
mov
sub
movsl
add
mov
jnp
pop
test
xchg
in
cmp
xor
xchg
in
push
sbb
insb
dec
cmp
or
test
push
lods
mov
mov
and
or
adc
xor
pop
lret
push
push
lret
cs
clc
cli
mov
in
ret
mov
inc
cs
mov
inc
lahf
sti
jg
dec
xor
lods
sarb
xchg
popf
stos
adc
jb
mov
sbb
fmull
out
pusha
or
in
cs
and
adc
ja
sahf
lods
adc
mov
test
xchg
adc
test
das
ja
adc
pop
pop
pop
lret
mov
jne
cld
cmp
fstp
mov
or
mov
mov
jle
sub
inc
push
xchg
out
iret
jae
or
push
bound
mov
xchg
pop
xchg
ficoms
iret
inc
sub
test
sub
rcrb
or
pop
xchg
cmovs
push
cmp
std
cwtl
adcb
xor
push
inc
push
fcmovnbe
sub
adc
lock
lret
fisubrl
jb
pop
ret
add
mov
mov
sbb
insl
ja
shr
cmc
aas
push
imul
cmpsl
mov
in
ret
lods
cmp
sub
jb
or
pop
shrl
cmp
cmc
lret
enter
in
inc
dec
push
adcb
xchg
xchg
dec
shrl
rolb
add
pop
add
movsb
push
shlb
pop
xor
data16
mov
mov
sbb
mov
fidivrl
push
mov
xor
in
sbb
loop
xchg
jo
inc
fs
adc
pop
call
lods
pushf
data16
or
rcrb
jne
and
sarb
jne
shlb
inc
insl
loop
divl
push
hlt
mov
subl
imul
mov
push
loop
add
loop
push
mov
popf
fdivrl
mov
push
cmp
jae
and
mov
std
cmp
push
pop
ljmp
sub
aad
ret
popa
or
push
or
cltd
pop
arpl
loopne
rclb
fistl
push
scas
dec
xchg
dec
loop
sub
mov
bound
and
cmpsb
test
sub
dec
push
out
bound
sbb
sbb
sbb
dec
leave
add
xor
jmp
imul
call
mov
icebp
enter
outsl
test
imul
cmpsl
xchg
aam
mov
or
pop
jmp
inc
pop
data16
fstl
ds
and
mov
dec
pop
repnz
cmc
add
cmc
jmp
mov
fimuls
arpl
test
inc
fcoms
dec
inc
add
dec
push
xchg
push
lds
rolb
inc
in
rcl
push
lods
push
xchg
pop
cltd
gs
mov
sub
jbe
in
scas
fcmovnu
mov
iret
push
outsl
pushf
and
imul
fmuls
pop
xchg
lret
mov
stos
cli
push
test
scas
mov
or
inc
or
sub
mov
aam
int
push
je
mov
sbb
call
clc
jb
test
inc
mov
adc
add
xchg
xorb
scas
jg
jmp
push
testb
out
xchg
add
scas
push
inc
dec
xorb
jbe
inc
mov
aas
sbb
and
cmp
icebp
in
fldenv
xchg
outsb
les
adc
fcmovu
inc
push
int
notl
fmul
mov
mov
fdivs
inc
mov
mov
ljmp
cltd
pop
push
push
cmpsb
scas
cltd
fadds
cltd
jecxz
iret
add
mov
jmp
mov
xchg
insb
lea
push
idivl
mov
lock
inc
addr16
shrb
enter
pop
out
aas
leave
clc
rclb
inc
in
mov
loop
inc
lret
push
push
fisttps
cmc
sbb
lret
gs
lret
int
jle
lock
fsubl
sub
pop
or
mov
in
ds
sti
xchg
jnp
jge
rol
xor
pop
nop
sbb
in
lods
enter
mov
or
orl
sbb
push
xchg
push
jmp
xor
push
xor
lock
fcmovne
xchg
pop
cmp
dec
js
push
mov
mov
out
mov
es
sbb
es
xchg
int3
push
gs
mov
cmp
hlt
mulb
push
cmp
pushf
cmp
pusha
nop
add
and
outsl
sbb
movsb
cmc
jnp
adcl
cmp
push
mov
shll
xchg
mov
enter
jg
xchg
cmp
fs
adc
pop
cld
dec
mov
inc
pushf
sbb
mov
movsbl
leave
popf
dec
rcr
stos
add
ret
xor
mov
outsl
cmc
jns
jge
loopne
cmp
dec
cwtl
push
jecxz
adc
adc
inc
lret
clc
jle
lock
inc
inc
push
jecxz
outsb
out
or
test
inc
leave
adc
jne
and
aas
mov
std
mov
loop
pop
shl
jge
pushf
xor
add
das
out
xchg
mov
dec
cwtl
xor
dec
push
adc
inc
shlb
push
stos
pop
pop
test
xchg
jmp
push
icebp
pushf
lods
inc
hlt
dec
ja,pn
les
or
das
xchg
or
xlat
int3
and
mov
imul
movsl
cmpsb
cmp
daa
dec
ljmp
and
mov
repz
cmc
mov
lea
orl
roll
mov
jecxz
push
stc
push
sub
pushf
push
xorl
ret
push
xchg
lahf
test
scas
pop
adc
das
lock
xchg
sbb
sbb
fcomps
ss
icebp
dec
pop
movsb
cmp
sarl
je
mov
js
pop
xlat
ss
cmpsb
mov
repz
testb
stos
bound
lock
pop
add
pop
xor
repnz
arpl
ss
gs
incl
add
xlat
ret
leave
jae
ja
mov
lods
push
mov
pop
adc
push
cwtl
and
jle
mov
mov
testl
es
lods
fdivs
xchg
cmpsl
test
xchg
or
xor
xchg
xchg
add
jge
push
jo
stos
pop
jg
lret
lcallw
mov
bound
adc
movsb
aaa
stos
gs
inc
jo
out
fsubrs
lds
nop
sbb
jbe,pn
and
in
roll
pop
out
adc
and
sub
mov
mov
lods
outsl
aaa
iret
rcrl
xchg
out
or
fcompp
push
shlb
mov
push
mov
xchg
mov
iret
jecxz
mov
and
jecxz
mov
add
xchg
sarl
xor
call
jnp
mov
jg
mov
out
and
add
repz
add
sar
ja
add
xchg
out
cmp
test
sub
mov
cmp
xchg
cmp
mov
leave
imul
aaa
pop
shll
mov
add
fidivl
dec
addr16
imul
xchg
sarb
cmp
lods
movsl
pop
add
dec
jmp
xchg
andb
inc
adc
addb
lods
aaa
in
mov
cmpsl
xchg
bound
cmp
push
repz
push
repz
mov
int3
xor
mov
pop
pop
je
push
negb
push
push
test
arpl
lcall
out
movsl
insb
repnz
jmp
and
push
xchg
lcall
fprem1
jp
loop
cmp
aaa
cwtl
mov
bound
popf
and
jne
sub
cli
fmull
fstpl
paddusw
or
lods
outsb
and
mov
mov
gs
imul
arpl
inc
jnp
sub
shr
inc
popa
push
mov
sbbl
xchg
and
in
mov
mov
mov
mov
jecxz
fwait
sbb
jl
fistps
sbb
add
add
push
nop
loope
das
je
push
and
sub
pop
dec
xchg
xchg
sbb
sub
sub
fbstp
pop
inc
icebp
lds
cmpb
call
fdivrl
std
and
cmp
shl
lret
les
daa
xor
pop
mov
jmp
and
dec
cmc
shl
popf
jns
hlt
test
aam
andb
in
push
inc
mov
or
cmpsl
fisubl
nop
pop
roll
lock
imul
lret
sub
andb
loope
pop
aad
add
sbb
pop
lret
fisubs
dec
dec
ret
popa
push
movsl
adc
xchg
cwtl
fnstenv
daa
jg
jmp
mov
mov
jb
jg
lcall
pop
loope
mov
xchg
out
jb
leave
pop
add
sahf
testl
ret
mov
xlat
mov
scas
or
lret
push
es
adc
mov
fidivl
mov
lds
jb
mov
out
mov
cmp
jmp
mov
dec
sub
out
scas
pop
xor
loope
scas
xchg
int
xor
add
sbb
pop
test
sbb
add
js
cmp
or
mov
mov
sbb
fsubl
jae
add
cmp
sbb
rcll
jle
movsb
adc
mov
popa
sbbl
test
push
lret
leave
stos
push
scas
lds
mov
sub
flds
je
jo
lds
pop
push
pop
pop
xor
pop
iret
adc
cltd
sub
pop
xchg
fstpl
push
jmp
icebp
sarb
mov
lret
jbe
cmpsb
cmp
ret
inc
int
imul
hlt
and
mov
jge
mov
lods
xchg
pusha
adc
sub
nop
es
inc
data16
sbb
inc
push
dec
lret
das
jb
mov
aas
je
and
iret
adc
outsl
bound
add
je
mov
mov
int3
add
cmp
into
lods
call
and
push
add
imul
jg
into
xor
fxam
sahf
popf
lret
outsl
inc
and
clc
mov
add
jo
cmp
test
mov
sbb
ficoml
jecxz
add
decl
jg
inc
rcrb
pushf
cld
aad
ror
cld
repnz
mov
and
and
push
nop
push
push
popa
jmp
sub
adc
adc
cmp
lods
fnsave
sbb
and
lods
inc
and
popa
inc
iret
and
mov
push
pushf
loop
jmp
sbb
xor
movsl
xlat
push
pop
cld
cmp
repnz
jno
fnstsw
xchg
ja
jo
cmpsb
add
dec
push
mov
cmc
rcr
lret
jg
sub
adc
leave
sbb
jbe
xcrypt-ofb
cmpsl
out
mov
lcall
fsubl
cmpsl
imul
xor
jnp
test
xor
nop
mov
das
push
in
lret
popf
cld
pop
daa
mov
jbe
mov
push
lret
add
mov
cltd
push
cmp
jne
dec
decb
pop
fld
call
sub
adc
and
fwait
adc
adc
outsb
out
sub
mov
cmp
int3
add
arpl
cwtl
dec
dec
roll
jae
xchg
sbb
push
nop
cmpsb
fwait
repnz
mov
sub
insb
das
pop
loopne
adc
mov
imulb
sbb
adc
das
sub
sub
cmpsb
pushf
mull
push
aad
pop
fyl2x
pop
xchg
shrl
cwtl
sub
pop
inc
sub
insl
xor
je
mov
es
push
jo
lds
mov
movsb
aad
loopne
dec
mov
cmp
cli
xorb
jae
in
add
xchg
dec
les
test
insb
mov
jbe
or
mov
pop
jb
push
lds
pop
enter
scas
mov
test
js
lcall
aas
add
mov
mov
je
sub
xchg
in
sub
jle
pop
fwait
mov
sub
inc
mov
push
and
lds
mov
test
mov
and
inc
cld
iret
push
in
xor
push
sub
testb
mov
ljmp
add
jge
shlb
mov
les
imul
mov
mov
cmpsb
add
clc
jecxz
mov
cmp
aas
loope
aad
adcb
sbb
fldl
adc
xor
ficoms
push
push
mov
mov
jg
jne
roll
daa
fdiv
inc
push
or
pop
outsl
loopne
add
mov
add
int
leave
jecxz
pop
cmp
push
shrl
imul
push
imul
mov
jge
push
mov
idivb
addl
popa
sbb
pop
in
sahf
push
sub
mov
or
xlat
test
icebp
fdivrl
stos
fldt
push
sub
dec
cmpb
cmp
xor
pop
adc
outsl
dec
and
sarb
shrl
xor
push
or
inc
out
loop
inc
pop
mov
movsb
outsb
mov
dec
push
out
cmc
jmp
repz
scas
adc
adcb
sbb
je
icebp
push
jbe
push
popa
outsl
inc
test
mov
ficoml
jmp
xchg
sub
push
and
xchg
push
pop
mov
cli
pop
mov
add
cmp
and
jmp
adc
xor
dec
leave
push
ds
cmp
movsl
cmp
add
mov
jg
rcrb
sti
ljmp
imul
mov
cmp
ss
jp
cli
xchg
xchg
cmp
inc
test
std
movsb
imulb
or
jmp
sti
pop
loop
clc
shlb
adc
adc
in
and
adc
mov
or
adc
xchg
scas
inc
stos
jle
int
mov
jge
inc
leave
pop
orl
test
into
das
mov
in
sub
pop
gs
sbb
xor
pop
cmp
cld
cmc
aad
lea
insb
add
outsb
inc
out
jg
outsl
sub
cltd
fcmovnbe
mov
ret
xchg
mov
repnz
mov
sbb
lahf
dec
cmc
push
lret
insl
ja
sub
mov
loopne
imul
adc
mov
fs
out
popa
sub
movb
mov
scas
sbb
test
xor
mov
add
scas
roll
adc
adc
sbb
adc
jl
mov
scas
arpl
mull
mov
lret
mov
jno
jno,pn
enter
mov
xor
push
dec
inc
xorl
mov
push
push
adc
xor
and
pop
cltd
mov
out
jnp
jl
sub
stc
inc
xor
mov
add
dec
out
andl
push
mov
dec
jge
and
loope
xor
jne
xor
cltd
in
inc
dec
fstpl
ret
lret
push
pop
loope
das
fdivrl
andb
xchg
les
fwait
push
call
xchg
mov
pop
repnz
icebp
xchg
or
lcall
and
push
in
lods
mov
cmp
xor
lret
lock
stos
jecxz
fisubl
stos
sahf
clc
shll
into
push
divb
jmp
or
xlat
inc
jg
cmp
push
jo
inc
sbb
test
leave
hlt
xchg
jo
cwtl
ret
cli
mov
cs
daa
sbb
aam
dec
sbb
rolb
jg
out
mov
dec
xor
ja
add
jecxz
cmp
mov
call
sarb
loope
sbb
jecxz
ret
push
cmpsl
stos
iret
push
gs
xlat
and
ficomps
mov
jb
or
and
aaa
jnp
and
xlat
icebp
mov
in
fidivrs
jae
cmp
or
fbld
mov
stos
dec
dec
std
insl
and
mov
aad
mov
cmp
enter
int
loope
shlb
mov
test
inc
inc
mov
jno
fs
leave
mov
jecxz
aas
cmp
dec
iret
add
xchg
aad
fstp
movsl
stc
stos
repnz
mov
mov
and
xchg
aam
aaa
popa
test
and
fcomps
in
xchg
loopne
xchg
mov
pop
inc
ret
cltd
lods
mov
sub
inc
jnp
xor
sub
rcrb
rorl
int
insb
sbb
mov
adc
mov
hlt
ret
sub
repz
xor
loope
leave
outsb
mov
jo
push
test
inc
cs
cmp
pop
sbb
mov
or
or
push
mov
inc
in
test
mov
cli
xor
dec
mov
cs
test
subb
mov
xor
sahf
sbb
popa
in
mov
ss
pop
mov
jns
xor
divb
or
into
movsb
popa
int3
fadd
iret
pop
stc
pop
gs
leave
xor
ret
xchg
xlat
xchg
xchg
dec
test
fdivs
xchg
lds
inc
sub
cltd
call
inc
inc
aas
mov
mov
jge
int3
add
ret
test
sahf
stc
adc
je
imull
dec
push
aaa
mov
stc
sub
pop
out
mov
int3
xchg
cltd
rcrl
cmpsl
mov
fdivs
jg
rcrb
cmp
lret
push
cs
dec
movsl
or
mov
xor
inc
add
sub
xlat
and
sbb
addr16
test
pop
pusha
cmp
mov
les
mov
add
push
loop
sbb
adc
iret
sub
push
dec
dec
inc
shrb
mov
dec
scas
mov
inc
inc
cs
pop
repnz
scas
add
mov
fs
rol
xor
mov
idivl
push
xchg
xor
sub
mov
lret
addl
sbb
loope
mov
sub
scas
test
dec
add
xchg
push
aaa
in
push
mov
xchg
aad
incl
je
arpl
scas
mov
add
dec
outsl
mov
add
in
in
or
jo
xchg
inc
js
jbe
imull
fwait
loop
into
push
cmp
pop
inc
and
pop
pop
movsb
pop
inc
xchg
adc
sbb
xor
stos
pop
push
iret
lcall
add
cmp
insb
push
test
mov
mov
lret
jb
xor
cmpsb
push
rcrb
rcll
pusha
and
mov
inc
push
ja
and
ret
das
icebp
insl
out
sub
xchg
and
push
xor
daa
lcall
out
pop
shrd
nop
jno
arpl
dec
out
mov
cwtl
adc
jp
inc
xchg
xchg
int3
cmp
cmp
cmp
push
popa
jb
mov
loopne
ret
add
out
pop
push
loopne
sub
dec
sbbl
aad
rcrl
jb
aad
movsl
lret
or
je
jns
aam
arpl
xchg
jne
out
sbb
push
push
inc
push
movb
in
fiaddl
frstor
sbb
cmp
dec
or
addr16
or
jo
out
xchg
enter
jge
pop
fstpt
lret
adc
jbe
add
in
ljmp
loope
mov
icebp
scas
push
mov
mov
not
xchg
jmp
lds
loopne
iret
and
mov
sub
or
mov
movsl
sarb
push
hlt
test
repnz
push
cld
fwait
mov
insl
aas
out
sbb
in
and
test
mov
jg
lods
fistpl
mov
fwait
rolb
jb
dec
cmp
push
repz
out
sbb
and
fcomps
ret
xor
in
mov
ficomps
popa
push
mov
fcomi
push
mov
insb
sbb
push
push
fimull
mov
lahf
enter
sub
push
loope
pop
or
movsl
cmp
jo
mull
negb
mov
dec
mov
stos
test
sbb
and
scas
xor
jnp
fcoms
mov
lahf
adc
dec
sti
xorps
pop
sarl
stos
adc
jno
fidivs
xchg
test
push
pusha
gs
sub
push
das
insl
enter
push
fdivrl
dec
inc
ja
xchg
and
inc
fnstenv
add
adc
dec
mov
push
mov
add
mov
js
dec
and
sub
popf
xor
mov
cli
or
jnp
cmp
nop
das
data16
stos
adc
lds
xchg
sub
add
pop
rcll
dec
in
cmp
out
add
mov
mov
mov
xor
sbb
and
insb
test
loop
xchg
ja
xlat
lret
mov
int
movsb
rcll
jns
shlb
push
dec
pusha
shr
popf
jno
leave
ss
lds
icebp
xchg
and
in
mov
cmc
or
adc
cmpsl
out
rorl
mov
xchg
add
pop
dec
or
in
and
cli
ja
into
xchg
shrb
repz
fstps
pusha
daa
inc
jae
lods
cli
mov
lahf
mov
pushf
mov
sar
jbe
adc
push
adc
mov
mov
pop
loope
jne
ljmp
test
mov
enter
scas
pop
or
call
jne
ljmp
sub
cwtl
test
movsl
rcrb
xor
fcmovu
push
cmp
js
jge
sahf
mov
and
shrl
cwtl
call
xchg
out
mov
inc
movsb
arpl
sbb
push
and
cltd
js
xchg
adc
mov
adc
adc
bound
jp
pop
out
or
jae
push
fsubrl
divl
sbb
xchg
mov
push
sub
insb
sbb
jp
imul
mov
adc
mov
clc
or
adc
lds
loopne
repz
push
lds
lds
and
push
sub
mov
inc
iret
pop
xchg
cmc
xchg
inc
cwtl
and
test
scas
and
imul
adc
add
mov
dec
sahf
inc
push
jge
js
mov
xchg
bound
leave
inc
adc
adc
xchg
mov
lock
enter
ds
inc
lds
adc
cmpsb
lods
and
xchg
mov
xor
mov
in
sub
jmp
hlt
fdiv
outsl
cmpsb
cmp
or
cmpsl
movsb
pop
aas
mov
test
push
cli
adc
gs
push
data16
xlat
jecxz
jb
sbb
and
dec
add
add
mov
xor
push
xchg
aam
cld
inc
out
dec
call
xor
fwait
cmp
cltd
inc
movsl
add
jno
sahf
arpl
stos
ljmp
push
shl
or
sti
rolb
lcall
lret
add
xchg
jb
fmul
fisttpl
out
icebp
cld
dec
sti
aas
inc
cwtl
jns
movsl
pop
mov
pop
xor
outsl
pop
push
ss
lods
iret
loope
fwait
mov
and
jl
adc
call
in
push
adc
or
cmc
sbbb
arpl
gs
xchg
pop
mov
and
cltd
enter
mov
fs
fcmovb
mov
add
nop
sti
dec
insl
in
outsl
pop
xchg
jle
and
mov
lds
xor
pop
mov
stos
cmp
movsb
jecxz
lods
negb
daa
lret
movsl
cmp
cwtl
dec
lret
and
call
lock
mov
out
adc
stos
pop
xor
sbbl
pop
dec
pop
push
lret
mov
je
imul
xchg
imul
aas
popf
pop
mov
shll
inc
jge
push
add
je
dec
cwtl
rcrl
loop
mov
add
andb
addl
jne
es
mov
das
lcall
dec
repnz
ret
popf
mov
fistpll
fdivl
xchg
push
out
or
sub
inc
mov
loope
mov
jns
pop
fdivrs
or
addl
dec
js
and
scas
fldt
inc
and
int3
addl
sub
scas
lcall
test
push
pop
dec
dec
xchg
or
pop
mov
lcall
in
or
icebp
adcl
arpl
mov
mov
or
shrl
test
and
mov
lahf
popf
shrb
xor
fisubl
pop
and
fstpt
outsl
cmpl
imul
dec
int
lret
popa
cmc
cs
lods
pop
jo
xchg
push
sub
pop
popf
clc
dec
dec
push
movsl
daa
push
imul
out
test
das
popf
cmp
jbe
lds
movsl
cmpsl
outsb
stos
xor
stc
mov
dec
push
lret
pop
icebp
rorb
aam
adcl
test
out
fildl
mov
push
mov
push
lcall
std
push
sub
mov
mov
cmp
xor
push
mov
sbb
or
lret
out
jp
hlt
add
mov
stos
or
jno
cmpsl
mov
push
jg,pt
into
sub
xor
mov
xor
xor
dec
or
sbb
push
mov
cmp
sbb
rcr
sub
xor
test
shr
repz
mov
lods
leave
movsl
sub
mov
rcr
mov
cmp
mov
aaa
sarb
mov
test
divl
ret
mov
push
test
dec
dec
dec
imull
out
add
mov
mov
rorb
test
inc
stos
xor
adc
mov
or
push
jne
ret
ja
cmp
aas
xor
fdivr
push
std
test
xchg
sub
push
add
rcr
and
dec
push
jp
add
pop
arpl
stos
adc
ret
jo
outsb
mov
popa
mov
push
cmp
out
inc
repnz
lcall
pop
mov
sbb
shlb
push
fsts
jno
pop
outsb
mov
repz
out
and
cltd
add
loop
dec
add
cmp
mov
push
pop
and
jno
les
das
cmp
daa
inc
xchg
cmpsb
jno
leave
mov
add
or
lds
subb
add
ss
jb
cli
jmp
repnz
xor
xchg
fwait
dec
add
cmp
pop
jecxz
aam
fcmovnbe
sti
sbb
push
cwtl
mov
sub
es
stos
or
lret
clc
data16
and
push
pop
outsb
repnz
or
repnz
or
mov
mov
mov
out
xchg
movsl
mov
inc
in
dec
mov
movsl
cmpsl
clc
xchg
leave
pop
jb
push
or
add
jp
jae
cmp
pop
or
mov
pop
or
sahf
testl
pop
sbb
inc
mov
je
sarl
xchg
jbe
mov
dec
sahf
daa
das
sbb
imulb
test
add
ret
dec
scas
push
mov
xor
hlt
insb
sbb
jbe
sub
bound
fucomip
xchg
sahf
rcrb
xlat
loop
mov
add
pushf
enter
das
loopne
dec
jne
pop
mov
cwtl
add
lods
cli
inc
test
and
xor
jmp
leave
or
mov
adc
addl
out
insb
insl
pop
push
mov
jne
or
mov
and
aaa
mov
es
push
loopne
xchg
and
jmp
add
in
adc
mov
fsubrl
imul
lahf
cmc
in
cmp
int3
fwait
imulb
mov
xlat
mov
push
push
scas
pop
test
jmp
add
enter
in
std
and
jo
or
sarl
jae
mov
iret
mull
icebp
xchg
in
rorl
rcll
dec
push
mov
jbe
xor
repnz
in
push
lahf
dec
mov
dec
stos
loopne
add
repz
jno
adc
or
jge
mov
mov
push
sbb
jns
out
cltd
sti
and
mov
lods
mov
cmpsl
push
or
mov
cmc
jp
xlat
data16
xchg
addr16
addr16
add
in
bound
sbb
outsl
jl
or
dec
mov
repz
mov
mov
movsl
xorb
xor
pop
and
adc
pusha
sbbb
sti
sub
push
mov
in
dec
xlat
int3
shlb
jmp
mov
adc
mov
into
cmpsb
pop
push
js
xchg
and
xchg
mov
in
pop
pusha
xchg
push
xchg
clc
jae
cmp
and
iret
sub
scas
fldl
xchg
cmpl
pushf
xchg
test
jno
lds
ret
aaa
sub
xchg
inc
fidivs
cltd
imul
xor
andnps
inc
imul
fdivrs
call
sahf
push
mov
sub
or
popa
or
bound
leave
cs
loop
out
fmull
mov
push
xchg
pushf
subl
jge
push
jl
adc
sub
and
test
arpl
mov
int3
stos
or
ffree
adc
pushf
or
aam
push
add
xchg
inc
aas
xchg
sub
icebp
fnsave
out
mov
xchg
daa
push
or
icebp
inc
std
ret
cwtl
das
dec
out
insl
andl
das
aas
xor
loopne
ret
push
push
lcall
or
rcrb
jmp
mov
sub
cmp
inc
jle
sbb
mov
jecxz
rorl
mov
in
jnp
xchg
loopne
rclb
mov
aam
shrb
sub
fadd
mov
jbe
mov
or
aad
cmp
cmp
movsb
jl
inc
orl
icebp
or
clc
call
mov
loop
mov
pop
sbb
adc
fmull
dec
push
bound
movsb
or
idivl
mov
xchg
sub
cmp
loope
test
xor
lret
sbb
fisubs
cwtl
das
push
jns
sti
arpl
nop
cmp
mov
adc
notl
mov
xchg
cmc
push
sbb
or
mov
sub
outsb
test
lock
jne
pop
xor
cmp
mov
sub
or
stos
dec
cmc
sar
push
sbb
ljmp
push
and
push
sbb
push
mov
data16
or
pop
xlat
testb
jle
push
mov
mov
fcomp
cs
loopw
add
mov
pop
mov
add
arpl
inc
cli
mov
dec
test
loop
mov
xor
pop
mov
cltd
pop
out
movsb
addr16
mov
inc
iret
mov
repnz
cld
inc
xchg
outsl
decl
and
iret
out
cmc
mov
lock
mov
call
fiadds
mov
lret
xlat
cmp
mov
adc
cmp
sub
rcrl
or
fdivrl
sub
sbb
xor
sbb
mov
movsl
inc
enter
cmpsb
notl
pop
stos
sub
in
jo
push
negb
push
mov
ljmp
adc
cmp
sarb
push
das
icebp
sbb
jmp
lahf
stos
jbe
icebp
loope
xchg
shrb
mov
jmp
dec
add
adc
pop
add
and
aaa
add
orl
iret
mov
out
repnz
out
xor
jo
pop
push
and
xchg
or
cmpsl
inc
out
cltd
in
or
pop
sub
mov
aas
test
cmp
cs
icebp
inc
xor
adc
popa
test
push
jns
in
test
mov
inc
push
dec
adc
sbb
ljmp
push
push
push
inc
push
and
sahf
adc
xchg
xor
das
mov
mov
clc
insb
scas
or
lahf
sbb
jle
in
movsl
cmp
jae
cwtl
pop
hlt
lea
cmp
sbb
and
ss
and
rol
push
mov
ss
or
xor
repnz
add
aaa
loope
test
xchg
aam
cmc
and
rolb
in
mov
shrd
xchg
cwtl
jge
nop
adc
sub
xlat
lock
pop
testb
sbb
gs
insb
xor
lock
fistpll
mov
aam
push
add
xchg
cld
scas
mov
pop
inc
push
daa
lds
jb
rol
cmc
and
cmpsb
movsb
jae
push
orb
nop
mov
sti
out
dec
and
jb
scas
cmp
mov
out
cwtl
sub
lret
mov
in
out
pop
push
sbb
loop
mov
inc
filds
push
test
mov
shlb
movsb
sub
js
pop
xchg
shrb
jne
sub
enter
or
enter
jmp
fbld
and
leave
adc
dec
jb
cmpl
dec
jae
je
sbb
jge
out
and
cli
pop
inc
lret
and
inc
cmp
fsts
dec
jp
push
add
xor
xor
jge
adc
cmpsl
and
mov
jb
mov
aad
inc
ret
mov
xchg
and
dec
xor
arpl
jno
divb
xchg
mov
subl
in
and
xchg
push
jno
aaa
leave
xchg
out
fldcw
sbb
xchg
cmc
or
mov
cwtl
sub
inc
cmp
jno
add
jb
mov
aas
call
popf
popa
jo
jne
mov
lcall
loope
xorb
dec
leave
jo
rcrb
aas
dec
data16
mov
insl
dec
rol
shll
sub
leave
push
outsb
adcb
jae
push
inc
jmp
iret
sub
aad
mov
out
test
aad
mov
jl
sub
fadd
pop
mov
xchg
xchg
push
jp
adc
hlt
mov
out
sbb
adc
mov
ss
jmp
xor
mov
mov
cld
out
test
cmpsb
sub
repz
sarb
sub
jg
and
sbb
and
xor
in
loope
into
pop
or
ljmp
mov
push
inc
popf
pop
cmp
rorl
cld
popl
jecxz
jmp
and
loop
insl
mov
xchg
cs
inc
movsb
pop
mov
sar
add
fwait
aaa
sbb
lea
or
or
lahf
push
into
pop
dec
dec
lahf
pop
or
stc
ficoml
inc
or
fldcw
adc
lods
mov
xor
call
jge
data16
pop
xchg
sti
xor
inc
mull
addl
or
cmpsb
cmp
movl
pop
aaa
xchg
sbb
sahf
andb
ret
aas
cli
int3
sbb
std
lds
or
lret
loopne
xchg
popf
sub
dec
mov
lahf
add
bound
leave
push
pop
mov
loopne
bound
push
fadd
jbe
stc
xor
ja
or
popf
mov
sbb
repz
inc
je
sub
int
je
pop
cmp
cmp
nop
out
cmp
lret
jb
jo
cwtl
ss
ss
nop
std
mov
iret
mov
fnstenv
sub
data16
cmc
js
mov
mov
fsub
mov
fwait
pop
pop
in
sub
outsl
jecxz
inc
or
fidivrl
aad
mov
orl
rorb
jne
das
and
jge
addb
adc
loop
or
clc
mov
stos
xor
dec
stc
cld
xchg
les
arpl
or
sbb
pop
xchg
bound
rep
push
mov
fiadds
fcompl
fdivs
push
into
push
xchg
jbe
dec
ds
inc
pop
movsl
jno
cmp
pop
xor
cld
xor
or
mov
sbb
pop
cmpsb
xor
movsl
popa
scas
stc
xchg
stc
movsb
sbb
adc
sbb
lock
or
mov
orl
xchg
and
cli
xorl
mov
test
js
jno
xchg
imul
cld
scas
int3
mov
pop
push
add
adc
pushf
ss
pop
adc
cmp
mov
xor
add
pop
pop
push
xor
fsts
in
rcrb
lds
mov
les
jne
lea
inc
inc
shlb
test
jp
pop
mov
in
mov
jle
lahf
lahf
divl
aaa
or
cmp
imul
out
pushf
mov
mov
outsl
inc
cld
jecxz
and
lods
adc
mov
rcrb
lret
ja
push
jns
in
sbbl
add
xor
cld
std
test
lret
stos
cwtl
in
jo
rorb
cld
jo
mov
pop
cmp
outsl
imul
push
jo
mov
push
repz
add
scas
cmp
call
jno
mov
inc
ret
adc
rclb
in
push
add
push
clc
add
pop
lahf
and
push
add
mov
pop
add
jno
jmp
mov
xor
iret
inc
mov
gs
leave
insl
pop
stc
mov
nop
push
or
dec
push
fwait
stos
outsl
call
mov
inc
mov
lret
mov
lods
bound
adc
scas
enter
sahf
cwtl
mov
adc
push
cmpsb
jo
mov
pop
stc
loop
add
test
add
push
add
and
mov
dec
add
clc
sbb
mov
in
and
daa
and
jno
mov
scas
dec
cwtl
mov
out
jecxz
aad
pusha
inc
fmuls
div
lds
cmc
negl
shrb
push
jo
stos
imul
mov
frstor
stos
lods
ror
mov
test
lea
dec
cld
jnp
das
cmpsl
jl
ss
jno
mov
out
aad
xchg
pop
out
int3
xor
sbb
loopne
leave
cmp
fnstenv
lds
pop
aad
push
cli
mov
mov
pop
call
or
ret
pop
adc
push
cmp
mov
cmp
push
dec
inc
sbb
sti
push
push
jno
xchg
dec
ret
mov
cltd
mov
mov
inc
ficoms
pop
sbb
xlat
push
xchg
movsb
add
pop
mov
mov
mov
mov
stos
sub
sub
cmpsb
sub
cmp
pop
insl
arpl
pop
cld
sub
jecxz
xor
push
sbbb
stos
xlat
mov
adc
ret
int3
pop
jmp
out
push
add
jnp
cmp
idivl
hlt
fcomp
add
andb
push
int
jge
std
imul
inc
xor
out
leave
ror
cmp
inc
arpl
sbb
lock
cmp
sarb
cwtl
adc
mov
sub
hlt
push
ja
jmp
push
xchg
sub
pop
orb
sub
mov
outsl
jecxz
fnstcw
in
cmpsl
lahf
aas
add
jne
mov
loopne
imul
jecxz
cmpb
std
pop
jno
out
push
arpl
lahf
inc
dec
xchg
pop
rclb
mov
insb
jl
cmpsl
dec
xchg
pop
mov
icebp
fimull
rcll
mov
push
add
mov
jno
fcomp
push
gs
or
mov
cmp
sbb
push
inc
cwtl
lcall
aas
cmp
pop
adc
sbb
in
xchg
rclb
mov
pop
inc
daa
ja
test
mov
cmp
ja
inc
mov
ss
mov
xor
xor
mov
cmp
jg
jmp
cltd
xor
xchg
xchg
sbb
inc
pusha
bound
fildll
fsubs
int
mov
push
aam
cmpsb
cmp
rcll
xor
insl
out
ret
mov
sbb
addr16
xor
mov
mov
sub
adc
pushf
iret
push
dec
adc
into
or
fldl
sub
pop
in
sub
nop
cmpsb
insw
xor
ss
out
dec
mov
mov
sub
lret
jg
ficompl
lock
fcoms
jmp
sub
jge
push
mov
out
sub
aaa
in
test
vmwrite
mov
adc
sub
jmp
das
icebp
xchg
nop
dec
stc
in
stos
push
movsb
add
cld
andb
cmpsb
dec
xor
pop
sub
aas
xchg
jle
mov
fisttps
add
lods
mov
fidivrs
cmp
cmp
insb
xor
fildl
scas
stos
sbb
mov
sbb
inc
mov
dec
xchg
insl
or
mov
int3
lds
insb
or
cmp
movl
stos
mov
lea
sbb
cmovge
hlt
insb
mov
pushf
sub
pop
cltd
movsl
cmp
fld
leave
andl
pusha
icebp
loope
cwtl
clc
out
jns
xor
in
cmp
mov
out
push
adcb
popa
add
pop
js
mov
adc
les
outsl
rcll
pop
repz
test
ja
clc
jo
push
fsubrs
out
mov
xor
movsb
cld
jae
lahf
xor
sbb
push
inc
insl
jmp
gs
mov
pop
int3
shrb
rcrb
cs
mov
or
cmp
ljmp
pop
mov
mov
insb
daa
aaa
push
pushf
scas
hlt
gs
faddl
jle
in
pop
testl
xchg
jo
jmp
shlb
or
cmp
cltd
sub
ret
dec
xchg
pop
xlat
and
ja
pop
push
pop
sbb
sbb
push
dec
add
and
fsts
fsts
jecxz
cmc
push
cmp
push
mov
jns
neg
aas
lods
dec
sub
shrl
and
ret
cmpb
in
push
das
sub
dec
fs
leave
dec
mov
cmp
xchg
add
push
fstps
push
addr16
dec
jnp
repnz
sub
sub
dec
xor
mov
sub
mov
ret
sbb
and
and
sahf
xlat
inc
add
cli
mov
sti
pop
cmc
push
sti
add
jne
push
jmp
outsb
ret
or
call
and
dec
arpl
ss
add
pushf
idivb
aad
and
jp
xor
lcall
mov
and
mov
test
jo
inc
or
push
movsl
imul
xlat
scas
adc
out
pop
inc
or
bound
mov
adc
test
jbe
jns
sub
push
repnz
sub
mov
aam
mov
dec
sub
sbb
orl
out
lret
push
mov
sub
notb
sub
xorl
dec
dec
mov
sub
test
popa
inc
mov
fsubrl
xor
pop
pop
out
mov
pusha
test
lods
fdivl
popf
lods
jg
pop
adc
xor
test
out
and
jne
jl
aam
jp
mov
jg
decb
out
xor
ficompl
nop
sub
xor
mov
adc
xor
imul
inc
jl
add
adc
and
fsubrl
ret
mov
cmp
testl
cs
fcomps
scas
jmp
sarb
in
js
add
scas
test
repnz
push
stc
inc
inc
cmpsl
xor
sub
stos
dec
pop
sbb
adc
insb
mov
adc
cs
xchg
sbb
divb
fxch
push
xchg
add
cld
pop
cwtl
les
pushf
xor
push
dec
or
jb
aam
xlat
inc
and
cwtl
inc
ret
mov
or
ds
test
and
mov
lods
adc
orl
cmp
or
inc
inc
ds
repz
and
xor
xor
frstor
shlb
mov
popf
xchg
leave
push
lds
pop
mov
leave
cli
es
xor
jno
cmpsl
mov
xor
push
dec
cmp
xchg
xor
xor
push
inc
enter
stc
jl
ds
scas
mov
dec
cmp
mov
cmc
inc
pushl
jnp
mov
cli
jecxz
lods
jmp
inc
push
xor
pop
insb
jb
mov
pop
xchg
xchg
cmp
push
or
xlat
js
pop
push
push
mov
sbb
mov
ljmp
ds
aam
insl
fldenv
ja
jb
cltd
mov
pop
push
push
hlt
xor
lods
in
add
mov
push
add
or
mov
and
xor
sub
mov
lcall
xchg
sbb
mov
or
test
movb
lcall
and
pop
out
test
fmuls
inc
jecxz
sbb
shl
adc
shll
jns
sub
mov
repnz
push
fimull
pop
repz
adc
mov
dec
sbb
rolb
in
add
outsl
int
add
pusha
and
or
subl
inc
ret
mov
loop
cmp
aad
add
push
push
arpl
mov
jle
mov
mov
rorb
sahf
in
mov
jae
sbb
push
mov
jns
pop
fisttpl
arpl
sub
lahf
and
dec
loopne
sbb
test
add
sti
sbb
push
push
adc
cltd
imul
mov
bound
in
adc
bnd
mov
loope
or
ss
cmp
jno
ljmp
cmc
les
in
cmp
rclb
mov
mov
push
xchg
das
add
cmpsl
lock
insl
push
mov
mov
jns
add
stos
mov
add
cltd
mov
jl
in
push
dec
lods
ficompl
test
cmp
rcrl
mov
mov
mov
fsubrl
jns
sub
or
xchg
push
jg
aas
or
or
add
jo
imul
ss
andb
dec
add
mov
mov
ret
mov
leave
dec
test
or
xor
aas
stc
stos
lcall
inc
push
add
das
outsb
add
push
mull
add
xor
and
xor
jmp
dec
mov
shlb
sub
in
lcall
jo
and
adc
pop
clc
cmp
out
mov
push
push
push
sub
mov
out
cmpsl
sub
leave
push
sub
dec
ljmp
stos
fimull
push
pop
inc
nopl
pop
ret
into
xor
push
push
cld
arpl
pop
pop
or
inc
scas
cmp
sub
lcall
push
pop
fwait
inc
mov
repz
sub
dec
mov
mov
in
out
mov
in
xchg
out
pop
sbb
mov
jmp
pop
mov
daa
or
ret
mov
out
add
or
xor
aad
fsubl
loopne
aas
mov
xchg
push
dec
add
push
jns
test
mov
xor
sbb
xchg
add
add
or
add
inc
movsb
pop
out
xchg
mov
push
xor
test
add
out
xchg
imul
sahf
movsl
lret
mov
add
jge
fnstcw
in
and
ret
inc
dec
cs
lret
call
mov
cltd
mov
add
sbb
lock
mov
les
insb
ss
or
insb
test
push
jns
fdivr
xchg
lret
xchg
xchg
jg
dec
pusha
push
testb
mov
adc
xor
lahf
mov
movsl
sub
push
jg
push
add
pop
sahf
nop
mov
xor
dec
hlt
minps
shll
jns
in
in
imul
incl
cld
repnz
rclb
push
pop
push
xchg
xchg
sub
inc
adcb
push
jno
test
aam
sbb
xorb
xor
daa
insl
std
test
sub
cmpsl
repz
or
push
ss
imul
lret
pop
lods
shll
xor
mov
cli
notl
xchg
pop
decl
ja
jg
in
test
fisttpll
lahf
das
mov
push
leave
jg
loop
rorb
mov
xchg
and
push
pop
movaps
lock
cmp
cmp
push
rorb
sub
scas
je
push
mov
mov
lea
das
inc
or
je
fwait
out
ljmp
les
outsb
xor
dec
or
and
outsl
xchg
xor
ret
adc
or
fwait
cmp
jo
aam
fldcw
cmc
xchg
mov
shll
sub
jnp
rcll
adc
add
in
xor
out
int3
xor
test
mov
mov
jp
and
cltd
stc
adc
pop
std
aaa
lret
into
mov
fcmovb
mov
and
sahf
shl
scas
jg
push
fisttpll
bound
push
cld
dec
push
mov
fimuls
push
dec
rol
sub
mov
in
cmp
inc
mov
pusha
mov
stc
and
and
testb
into
int3
scas
lds
faddp
aam
add
inc
aas
loop
push
mov
add
jg
sbb
fwait
pop
xlat
outsb
lods
or
jle
loopne
mov
ret
shll
ret
xchg
inc
punpcklbw
hlt
cmp
pop
jbe
sbb
rorb
lods
sarl
or
push
sbb
pop
pusha
dec
push
mov
jae
or
gs
jecxz
adc
scas
mov
pusha
push
sbb
dec
or
jae
sub
jae
or
sub
sbbb
xor
xchg
movsl
outsl
push
lret
lret
jnp
rolb
or
inc
lret
jb
jbe
ret
nop
xor
cmp
mov
bound
movb
pop
aaa
add
dec
mov
pop
and
and
adc
andl
adcl
xor
cmp
popa
jns
or
icebp
dec
xchg
repnz
add
call
mov
adc
outsb
ret
cmp
mov
gs
mov
out
mov
or
mov
inc
js
fsubrl
cmc
sarb
inc
je
fwait
sbb
pop
push
push
xor
jle
pusha
push
mov
inc
and
pop
pop
cmp
xchg
sub
test
aaa
ljmp
mov
ss
mov
dec
dec
test
imul
jnp
mov
push
inc
and
imul
jne
fsubrl
sbb
mov
add
inc
or
mov
cmp
mov
pop
sahf
test
out
cmp
cmp
jl
mov
pop
jmp
imulb
scas
jbe
std
jae
loop
out
xchg
stos
lret
addr16
pusha
add
int3
sbb
fidivrl
mov
push
lods
arpl
and
inc
ljmp
inc
lret
mov
push
test
dec
repz
out
add
cmpsb
mov
loope
pop
sbbl
cmpsb
jle
jg
fld
xor
popf
cmp
outsb
add
pop
aam
cwtl
lret
mov
mov
xchg
arpl
jg
cmpsl
sbb
push
sarb
out
cmp
xor
and
and
push
movsl
fildll
add
fistl
pop
lea
jg
or
iret
jg
arpl
mov
pushf
cli
cmp
lcall
rorl
jl
xchg
cmp
scas
dec
dec
jmp
xor
push
mov
lods
mov
adc
cmp
leave
cmpsb
je
aas
add
sahf
inc
inc
movl
stc
icebp
cltd
dec
cmp
lcall
dec
mov
jae
pushf
les
int3
adc
into
xor
xor
loop
movsl
js
aaa
push
pop
shl
sub
inc
outsb
sub
xor
push
mov
dec
pop
xor
fcmovbe
pop
xchg
mov
pop
sub
lcall
add
xchg
adc
sbb
stos
adc
test
mov
stos
inc
add
inc
mov
cmc
xchg
push
or
std
test
jnp
pushf
clc
ja
gs
sub
stos
fwait
or
clc
push
cwtd
into
mov
lcall
sahf
mov
dec
xor
aas
push
jecxz
andb
xor
mov
push
sub
mov
xor
lret
cmp
loop
fisubrs
jp
ret
jmp
mov
cmp
jmp
xchg
cltd
in
jle
inc
scas
mov
aas
das
es
mov
push
js
xor
push
fisubs
loop
test
cmp
lock
mov
or
call
xchg
and
mov
rolb
xor
sbb
orl
xchg
std
out
adc
add
mov
or
divb
xchg
test
mov
pusha
imul
fdivs
pop
mov
addr16
mov
int3
lcall
ss
xchg
add
inc
pop
lods
aad
xchg
popf
or
jae
jmp
cmpsl
mov
daa
int3
out
adc
in
movsl
xor
enter
and
int
pop
aas
add
xchg
pushf
mov
scas
sbb
mov
aaa
cmp
ljmp
pop
inc
int3
loope
xor
or
test
rcrl
rol
fxch
js
mov
xor
or
int3
les
lea
stos
jb
xor
adc
stos
xor
aad
int
scas
mov
mov
insl
outsl
mov
pop
xor
pop
mov
lds
inc
incb
mov
jge
or
clc
repz
mov
imul
sub
dec
mov
push
pop
imul
rcl
mov
fidivrl
adc
mov
jne
xchg
push
cld
inc
jg
ds
out
and
out
inc
dec
lahf
add
dec
negb
scas
mov
stos
xor
lock
mov
jb
mov
cmp
dec
movsb
call
mov
mov
cmp
imul
fwait
outsb
fcoms
dec
lock
repnz
add
jle
mov
ss
cmpsb
xor
enter
lods
inc
cwtl
dec
fs
out
aaa
rorb
jge
call
dec
mov
pop
mov
pop
subl
mov
fcmovbe
rcrl
testb
addr16
cmp
stos
out
shrl
mov
insl
lock
sbb
xor
pop
xchg
pop
sbb
fdivrl
cmp
test
add
push
adc
bound
je
jle
mov
pusha
hlt
lock
hlt
addl
ja
sti
movsb
cs
pop
mov
mov
cmp
mov
mov
loopne
or
jne
addb
inc
mov
xorb
ds
xor
addr16
sbb
imul
repz
adc
xchg
dec
mov
xchg
movsb
mov
jle
add
gs
mov
lahf
outsb
incl
clc
imul
xchg
or
scas
xchg
shrb
mov
int
int3
mov
dec
out
inc
aaa
adc
xchg
xchg
test
adc
xchg
roll
loope
out
mov
enter
and
outsl
push
lahf
mov
loop
pop
mov
cmp
leave
mov
or
loope
pop
and
or
hlt
vpmovzxwq
jns
nop
xchg
and
mov
and
xchg
adc
in
cmp
sub
jae
push
xor
sub
cmp
insb
aam
out
push
lahf
cmp
cmp
xchg
std
lds
pop
adc
mov
aas
dec
jp
ret
ss
push
mov
daa
add
subb
imul
mov
push
imul
mov
push
push
jnp
shl
movsl
sarl
hlt
fcoms
mov
in
adc
dec
fsubl
push
cltd
push
inc
add
out
call
pop
inc
lods
insb
ja
dec
lods
mov
or
cmpsl
iret
xchg
dec
iret
push
test
inc
mov
jne
sub
push
enter
aas
and
jo
adc
aad
push
jmp
jecxz
repnz
mov
pop
bound
mov
xor
or
scas
outsb
mov
rorl
cmc
inc
divl
jecxz
dec
mov
ficoml
jg
cmp
lods
fcompl
cmp
mov
sbb
xlat
scas
adc
cmp
or
sbb
pop
repnz
push
out
jnp
jl
jge
pop
add
shll
mov
push
xchg
add
inc
and
xchg
nop
cwtl
aam
int3
daa
mov
xchg
scas
bound
xor
out
mov
pop
cmp
and
rcrb
je
out
mov
push
or
push
aam
jnp
cmpsb
jmp
clc
outsl
inc
push
rcll
loop
xlat
jp
mov
xchg
test
pop
mov
rolb
push
mov
push
insl
andb
xlat
loope
mov
insb
and
add
pusha
push
movsl
sub
repnz
sbb
xor
lods
movsb
iret
stos
cmp
ja
jne
mov
popa
test
and
out
jno
popa
fnstenv
mov
sarb
xchg
and
addr16
in
out
in
lcall
jge
pop
cld
xchg
add
mov
cmp
dec
ret
pop
push
icebp
inc
inc
adc
mov
scas
jb
jb
cmp
and
popa
xchg
xor
inc
stos
sub
push
out
and
leave
adc
je
jle
add
xor
pop
into
scas
mov
fisubrs
cltd
mov
scas
lret
in
sbb
sahf
mov
insb
or
in
vcvtsi2sdl
test
cltd
in
jecxz
cs
push
add
pop
cwtl
call
jl
lret
jge
stos
xchg
mov
enter
mov
ret
scas
enter
loopne
jne
sbb
mov
and
pop
and
int3
cwtl
in
hlt
or
int
xchg
mov
cmpsb
aaa
pop
pop
int3
cmpsb
dec
pusha
xor
mov
jecxz
xchg
sbb
cmp
xchg
xchg
cli
sahf
enter
testb
inc
cmp
inc
adc
or
push
pushl
rcr
cmp
jne
inc
mov
hlt
and
and
decb
adc
jecxz
cmpsb
test
enter
lds
fsts
les
mov
xchg
imul
add
or
outsl
xchg
push
jne
jne
adc
mulb
cs
mov
inc
mov
xor
int
divb
test
arpl
mov
aam
fsts
lea
insl
dec
push
jb
jmp
adc
loop
mov
sbb
xchg
mov
call
fcmovne
gs
faddl
movsl
pop
imul
test
push
mov
addl
iret
int
xchg
dec
shlb
inc
sar
imul
push
orl
push
push
ss
push
iret
inc
fildll
cmp
pop
sub
sub
push
popa
mov
ss
mov
jae
cmp
and
jno
shll
xchg
push
lds
lea
inc
icebp
test
insb
addr16
push
aad
and
mov
or
xor
insb
xchg
lds
dec
out
sbb
push
lahf
xchg
out
ja
lods
cld
mov
pop
xor
mov
xchg
jnp
ja
add
inc
rolb
pop
mov
dec
sub
inc
aam
or
movsl
dec
push
mov
cmp
mov
jbe
pop
mov
addr16
cmc
xor
imul
and
cmp
xorb
adc
aaa
xor
jmp
leave
add
sub
repz
loop
out
adc
push
popf
mov
jecxz
je
daa
mov
in
fimuls
mov
popa
popa
sub
cmp
bound
or
mul
ss
mov
mov
pop
addr16
out
mov
mov
cmpsb
cmp
sbb
loopne
jl
mov
sbb
test
push
mov
cmp
pop
lods
scas
fs
ja
pop
adc
jp
pop
or
lock
dec
sbb
pop
mov
cmp
add
cmp
or
lahf
mov
loopne
imul
inc
inc
xlat
std
xchg
scas
push
arpl
std
jl
jno
stos
jmp
sbb
mov
pop
sbb
mov
cltd
outsw
jo
mov
jae
push
mov
ret
adc
mov
xor
jmp
lret
xchg
repz
insl
fneni(8087
sbb
push
std
iret
push
test
aad
dec
test
cmpsb
decb
iret
jne
pop
movsl
or
push
push
push
imul
pop
js
sbb
leave
insl
cld
ss
movsb
nop
cmp
cmp
fisubl
push
or
jle
push
or
inc
xchg
adc
das
scas
xchg
das
ja
dec
jg
jbe
lcall
ret
lods
mov
mov
sti
mov
inc
hlt
mov
add
jne
sub
shl
sahf
stos
add
jle
pusha
arpl
xor
cmpsl
cmpsl
mov
mov
ds
stc
inc
or
sbb
out
sbb
add
shlb
cmp
push
xchg
insl
cmpsb
mov
push
sub
xchg
into
push
xchg
or
add
fsubrl
sti
fstpt
or
aaa
mov
dec
ja
js
int3
push
sbb
dec
add
push
shlb
fildl
push
dec
int
mov
mov
int
mov
lret
jo
push
push
lock
pop
mov
pop
mov
jp
pop
jbe
push
addr16
in
mov
rcrl
lods
inc
push
xor
cwtl
xor
stos
les
push
push
imul
mov
cmp
mov
inc
cmc
add
jge
lods
scas
ret
jmp
test
sti
xchg
or
neg
jb
sub
lret
pop
les
mov
jecxz
adc
scas
lret
negb
and
daa
adc
or
shrl
adc
insb
frndint
jmpw
jbe
cmp
or
orl
in
xor
push
push
in
ja
sbb
mov
push
ficomps
dec
ret
sbb
imul
xlat
pop
mov
rcrb
jo
pop
loope
add
insl
sbb
andb
xor
adc
call
popa
push
mov
ficompl
dec
mov
cmp
push
ss
and
xchg
sub
add
xor
adc
inc
lahf
inc
lret
xor
cmovne
les
lret
lock
cmp
rol
push
cmp
arpl
lret
fiaddl
add
jae
out
and
inc
ljmp
add
clc
fistpl
cwtl
cltd
mov
jge
imul
hlt
dec
dec
aad
or
leave
mov
add
enter
call
jg
fsubrs
mov
dec
mov
fisubl
xchg
scas
ja
xchg
jae
push
ljmp
fbld
arpl
sub
lods
pop
jne
and
mov
scas
enter
mov
popa
ret
jmp
xor
loopne
pop
sub
aam
outsl
inc
in
lret
fsub
ret
test
mov
ret
test
and
adc
rorb
xchg
xor
iret
xor
stc
mov
dec
not
add
push
and
cs
dec
mov
inc
into
push
cmp
adc
in
cmp
repz
int3
inc
into
imul
pusha
mov
mov
sbb
cmovnp
insl
jo
std
test
jnp
sub
lret
mov
fisubrl
cmp
mov
mov
stc
cwtl
push
mov
orl
es
cmp
mov
jns
xchg
push
mov
das
push
js
jne
dec
fcoms
pusha
dec
mov
out
sub
or
add
das
pop
mov
inc
cmc
jmp
jns
add
hlt
mov
jnp
insb
mov
sarl
scas
pop
nop
cmc
divl
leave
and
jmp
stc
in
jnp
xor
and
dec
cmp
in
in
mov
imul
inc
and
notb
fcmove
cmpsb
jge
out
ljmpw
fidivl
xchg
ss
shlb
pop
push
aad
jno
xchg
testl
ss
adc
aam
push
repz
cmp
inc
popf
mov
xor
or
test
popf
test
aaa
xor
lock
or
xchg
dec
jae
in
repnz
loopne
pop
push
cli
stc
adc
xchg
ret
shll
rcr
push
pop
loop
sub
outsb
jg
sub
pop
dec
pop
pop
adcl
enter
mov
into
out
lret
and
adc
jp
loopne
mov
pop
into
sbb
xchg
orl
sarl
dec
addr16
dec
je
imul
pop
les
dec
pop
add
popa
arpl
stos
aad
dec
es
pop
aam
jns
xchg
mov
adc
dec
xchg
xlat
pop
daa
sbb
lods
jle
push
xor
pushf
stos
xchg
dec
add
or
loop
jb
jae
jne
jae
fdivrl
mov
mov
popl
or
pop
mov
cmp
inc
xor
mov
imull
sub
jnp
push
cmpsb
inc
or
movsb
xlat
mov
enter
fdivs
xor
inc
xor
jbe
adc
shl
pop
stos
mov
pop
xchg
movsl
pop
mov
in
xchg
bound
xor
testb
fwait
jg
fwait
dec
jns
cmp
shll
add
xlat
inc
jmp
add
xchg
jnp
mov
mov
jmp
push
sub
adc
lods
negl
add
test
and
push
pop
fdivs
or
pusha
int3
pslld
mov
test
push
sbb
lods
in
jae
into
add
and
mov
xchg
mov
rcrb
out
fcmovnbe
xor
sbb
cld
aaa
xlat
mov
pop
pop
sbb
dec
cmp
mov
mov
test
dec
sbb
add
push
into
into
xor
scas
mov
cld
fwait
add
jp
cmp
repnz
popa
mov
addr16
inc
adc
pusha
andb
stos
lock
ret
adc
fildll
test
fdivl
jmp
push
adc
pushf
ret
mov
flds
out
and
lods
cltd
mov
scas
imul
cmp
testb
ror
inc
es
adc
loope
push
adc
test
std
sub
jae
int
xchg
insb
xchg
jecxz
bound
daa
sti
into
fucomip
inc
mov
xor
adc
arpl
lods
out
or
iret
out
lock
test
cmpsb
cwtl
ja
or
push
inc
stos
cmc
outsb
push
scas
repz
fldcw
shlb
daa
movsl
add
mov
xchg
inc
jecxz
mov
pop
fcoms
repnz
push
add
xchg
popf
cmp
mov
or
shll
lock
jne
or
iret
add
loope
and
jecxz
or
or
add
mov
sbb
data16
mov
jae
xor
pop
mov
cmp
sbb
sbb
push
mov
and
fs
push
fwait
mov
lret
btr
cmpl
add
shrb
xlat
add
jno
cmp
and
xor
pop
push
push
mov
pop
test
imul
sub
pop
jne
push
mov
xchg
in
jge
or
push
jae
das
dec
movsl
mov
adc
cltd
add
sti
sbb
pusha
jbe
xchg
ficompl
mov
mov
jbe
outsl
sub
lock
mov
loopne
sub
inc
sub
inc
add
push
or
stc
sbb
push
popf
push
jl
mov
mov
mov
push
xor
les
xorb
pop
pop
sub
xchg
and
lock
movsb
jae
outsl
sub
dec
sub
int
sbb
fstl
data16
inc
mov
sbb
push
iret
push
xchg
add
pop
push
jo
xor
xchg
inc
out
daa
scas
xchg
mov
outsl
push
ret
in
cmpsb
aad
push
out
cmp
nop
repz
dec
loopne
jge
inc
or
xchg
popa
sbb
sbb
pop
shll
push
inc
cs
cli
out
into
daa
pusha
pop
jno
test
cld
lock
xor
fbstp
inc
mov
xchg
imul
pop
cmp
add
enter
add
aaa
jle
xchg
jmp
dec
and
fsubs
mov
lea
stc
jle
ja
mov
xor
sahf
mov
pop
movsb
adcb
xlat
mov
call
xchg
cmpsl
cmp
je
leave
lods
mov
aad
repnz
fisubrs
mov
repz
test
ss
in
loope
unpcklps
jmp
mov
cmp
mov
or
jbe
cs
mov
mov
jns
imul
mov
sub
cmp
arpl
mov
jae
jae
imul
xchg
jge
int
cli
lods
pop
nop
and
shl
inc
pushf
into
int
inc
mov
add
inc
cmp
lret
testb
fs
insl
stos
fs
out
cmp
sub
jno
fmuls
mov
pusha
and
test
pushf
fldt
fisubrl
int
add
int
aaa
push
incl
ljmp
push
cmp
ds
test
repnz
xlat
jbe
mov
mov
mov
sbb
fdivr
jne
mov
test
pop
call
cmp
push
lret
les
lea
loop
bound
sub
popa
push
int3
add
push
dec
ret
fidivrs
pop
dec
push
mov
push
jecxz
cmp
loopne
fidivrl
pop
xor
inc
sub
sub
clc
aaa
and
mov
clc
adc
mov
bound
pop
mov
adc
ret
jns
xor
and
insb
sbbb
sbb
sbb
outsb
repnz
push
out
fs
dec
jno
jae
cltd
sub
mov
push
insl
push
leave
dec
mov
ficomps
push
add
jno
pop
into
fmull
sti
bound
mov
pusha
sub
jne
mov
fiadds
add
adc
sub
cld
mov
add
xor
das
xchg
leave
pop
psubsw
pop
and
imul
xor
out
js
xor
jl
mov
in
sbb
lea
pop
pop
mov
popf
jo
and
cld
rcr
cltd
add
ja
popa
jg
mov
add
stc
and
ds
xor
inc
sub
pop
pop
cs
call
fists
mov
inc
inc
pop
mov
and
jge
cmp
or
ret
xchg
jb
dec
mov
add
sahf
mov
and
test
cwtl
out
fs
mov
jl
lock
and
in
xchg
nop
mov
add
lret
pushf
outsb
out
test
loope
mov
sbb
cmp
sbb
sub
mov
jecxz
out
xlat
popl
xor
sbb
int3
jbe
test
pop
inc
mov
push
nop
outsl
xor
and
clc
dec
mov
fwait
mov
out
fadds
js
ja
xor
cmc
cmp
inc
dec
pop
mov
aam
test
test
pop
adc
or
stos
int3
mov
cli
push
shlb
popl
pop
lods
pop
dec
inc
repz
mov
fnstsw
mov
or
push
pushf
bound
cwtl
cltd
lret
xchg
mov
rcl
push
fdiv
cld
xchg
xchg
mov
dec
rorl
fcoms
in
push
sbb
xchg
pop
inc
lahf
inc
mov
fwait
cwtl
out
pop
int
cltd
fwait
sub
or
adc
mov
into
mov
inc
jge
enter
test
cmp
fistps
dec
sbb
es
sbb
stos
loop
adc
sub
or
loop
cwtl
nop
mull
clc
push
xor
push
pop
jo
jae
les
clc
out
mov
and
andl
sub
jne
adc
decb
daa
dec
cmp
ds
arpl
xchg
mov
xor
pop
fcoms
or
cmp
xchg
popf
inc
xor
stos
cmp
lock
jle
das
jne
js
xchg
mov
repnz
cmp
jno
cltd
fmuls
loopne
arpl
pop
adc
rorl
stos
jge
fs
repz
enter
pop
popa
xchg
cld
inc
sub
xor
jmp
mov
and
ds
and
mov
cli
out
ljmp
les
xchg
xor
mov
dec
daa
cmpb
stos
mov
dec
xchg
lret
dec
movsb
inc
leave
xor
mov
ja
push
mov
sbb
iret
ja
mov
push
in
mov
and
pop
sbb
cmp
xlat
std
clc
sarl
shl
mov
mov
ja
movsl
fistl
cmp
sbb
xchg
in
fdivr
pop
sub
push
in
xchg
insb
imul
scas
int
push
xchg
add
int
fs
aam
cmp
mov
loopne
out
push
mov
push
sub
jecxz
sbb
pop
cmc
lcall
mov
adcb
je
fldcw
pop
stos
mov
mov
test
lahf
pop
lret
outsl
push
int3
cmp
mov
ljmp
mov
sub
xchg
jne
xchg
xlat
and
std
mov
mov
test
int
jle
ret
cmp
test
aam
jmp
lahf
mov
mov
out
sbb
cmp
clc
out
cmp
outsb
dec
sub
out
leave
and
jbe
cmp
pop
bound
test
ds
cmc
jne
xchg
push
push
push
ret
lret
add
mov
jmp
into
inc
fisttpll
add
rol
dec
xor
mov
flds
or
push
or
xor
pop
bound
cli
dec
addr16
add
sbb
inc
push
mov
and
lods
cwtl
aaa
pop
sub
add
out
aas
or
dec
sbb
arpl
xor
imul
clc
rcr
fnsave
sbb
in
pop
cmpsl
jns
push
jmp
aas
sbb
pop
or
xchg
loope
sbb
fucomp
ja
inc
stos
mov
imul
inc
lcall
ss
mov
lcall
lahf
mov
add
adcb
xor
and
dec
jmp
inc
test
mov
jle
mov
push
mov
pop
or
ret
mov
dec
adc
adc
arpl
sbb
push
mov
jg
pop
jbe
xchg
cli
push
or
in
sub
scas
pop
cld
adc
add
mov
cmp
xor
inc
sub
jns
or
fsubs
jle
xlat
pop
dec
outsb
fidivrl
ret
mov
mov
pop
mov
mov
ret
repz
xchg
orb
shr
sbb
shl
mov
sub
xor
loop
jno
out
pusha
mov
popf
cltd
gs
jmp
out
jb
pop
mov
sbb
jae
add
mov
mov
cltd
daa
jae
push
pop
movl
mov
push
imull
out
xchg
mov
fiadds
mov
daa
xor
lods
fwait
in
int3
cmp
cmp
push
insb
clc
dec
mov
call
xchg
cwtl
adc
in
lret
lds
add
call
lahf
mov
sbb
insb
push
mov
pop
dec
or
push
adcb
or
jl
or
add
in
dec
push
jae
mov
out
lods
scas
xchg
mov
jecxz
sub
dec
inc
clc
jmp
mov
push
nop
xchg
bound
cli
push
pop
fnstenv
sbb
cmp
fsubr
or
jle
push
orl
pushf
fwait
jle
movsl
imul
shrb
mov
inc
int3
pop
mov
test
pop
repz
aas
mov
imul
cmpsl
dec
dec
dec
lock
fdivrp
xchg
push
insl
jmp
outsb
cs
pop
shl
adc
arpl
add
lds
out
xor
sub
cwtl
js
lods
insl
xchg
jl
loope
add
or
cmp
jmp
mov
jge
push
sbb
stc
pop
or
add
push
aad
cld
or
imul
dec
cmp
mov
and
mov
xchg
ljmp
mov
jge
pop
jbe
mov
fisubrs
shll
and
jecxz
jbe
fs
xor
fs
lds
in
inc
cmp
xchg
pop
inc
jne
inc
dec
jns
dec
fcoml
jbe
mov
mov
dec
sub
sahf
fldenv
fcompl
pop
enter
and
sbb
js
ficoms
pop
and
sub
or
xlat
inc
dec
lret
jns
pusha
divl
push
cmp
pop
push
push
ret
mov
mov
imulb
decl
ficoml
into
insb
je
sub
fstl
mov
pop
rclb
adc
clc
ja
or
mov
ss
cmpsl
dec
dec
and
les
jecxz
stc
mov
mov
pushf
xchg
or
arpl
test
sbb
mov
outsb
subl
push
or
pop
scas
dec
cld
jns
cmpsl
mov
mov
cmp
daa
dec
cmp
in
inc
mov
negb
mov
in
lock
gs
icebp
es
popa
rorl
das
or
lret
and
clc
pop
or
cmpsl
repz
adc
and
lea
in
jecxz
mov
xor
dec
mov
and
cltd
push
mov
mov
ljmp
aaa
loopne
enter
xchg
and
inc
mov
xchg
ss
sbb
sub
sarl
mov
clc
in
sub
testb
pop
sub
fstp
push
xchg
jmp
mov
sbb
in
mov
iret
cmpl
movsl
sub
and
mov
mov
jg
sti
rcll
xorl
mov
pop
out
bound
dec
loop
out
pop
clc
xchg
push
lock
test
add
bound
aaa
fisubrl
scas
add
ja
dec
addr16
push
outsb
pop
sbb
adc
jns
gs
mov
add
aas
pop
aam
xor
inc
lock
out
xchg
in
inc
add
out
pop
fldl
scas
in
jbe
sub
mov
inc
lods
xchg
imul
hlt
js
jge
xor
imul
xchg
scas
lock
mov
mov
das
shlb
adcb
xchg
imul
in
push
pop
or
and
push
cmp
push
addb
sub
mov
sbb
fcmovnbe
pop
adc
mov
xlat
xchg
cmp
jmp
xor
enter
xchg
sbb
mov
pop
xor
inc
leave
lahf
and
daa
push
sub
or
pop
xor
mov
mov
shr
mov
ja
in
or
cmp
add
mov
or
pusha
jg
loope
sbb
addr16
add
leave
stos
inc
outsl
mov
loop
pop
jecxz
add
mov
addr16
push
dec
movsl
push
mov
out
cmc
pop
and
inc
inc
mov
lcall
inc
cmpsb
test
mov
jl
sub
push
sub
dec
daa
inc
mov
int3
movsl
test
ljmp
movl
add
shlb
in
lods
stos
push
out
inc
fidivl
xchg
dec
popf
vpmulhw
cmp
lret
push
pop
dec
dec
stos
mov
or
push
ret
push
cmp
les
std
sbb
inc
mov
mull
xchg
jp
dec
int3
mov
stos
jle
lods
in
jmp
iret
stos
sub
and
call
int
dec
nop
xchg
repz
and
pusha
out
cli
stos
xchg
or
jnp
mov
sbb
mov
rol
and
or
ds
or
out
jmp
imull
loope
mov
test
sbb
mov
lds
aad
out
cmpb
mov
add
loopne
andb
xor
call
stc
cmp
mov
inc
outsb
sarb
addr16
adc
cmp
pop
int3
test
inc
popa
mov
es
ljmp
in
ss
jo
mov
out
imul
mov
movsl
adc
insl
mov
aaa
mov
inc
ret
xor
push
leave
adc
add
pop
test
inc
sub
xchg
mov
jbe
xchg
jno
mov
ret
sbb
xchg
mov
mov
fsts
xchg
dec
adc
xchg
push
lret
mov
psadbw
xchg
lds
mov
ds
lods
dec
mov
rorb
dec
popf
inc
outsb
out
or
jo
cs
stos
push
push
imul
shl
jo
fisttpll
icebp
push
mov
lcall
testl
push
sti
add
cmp
xchg
push
pop
insl
ret
mov
ficoml
into
pop
fcmovnb
sub
jb
inc
andb
mov
ljmp
adc
cli
dec
scas
dec
shll
or
icebp
inc
fcompl
xor
cmp
stc
pop
test
movsb
xchg
iret
adc
cs
shlb
mov
outsl
inc
in
dec
test
es
cmc
mov
add
data16
aaa
pop
adc
das
insl
xor
loop
mov
xor
mov
mov
inc
cmp
xor
je
mov
lock
dec
mov
mov
lret
aas
dec
sbb
mov
cmpb
jmp
cld
loop
push
xlat
movb
lahf
pop
icebp
daa
xchg
testb
cwtl
adc
dec
movsb
cmpsb
out
inc
rclb
jle
jg
out
sahf
or
test
fstl
adc
movsb
push
mov
addb
xchg
push
dec
jecxz
fstl
call
or
mov
das
jp
jp
out
push
mov
jb
lret
das
push
int3
cmpsl
xlat
fmuls
faddl
data16
sar
or
jae
rep
mov
popf
dec
cmp
sti
test
pop
and
out
inc
xchg
fcoms
jb
int
mov
dec
push
das
mov
mov
out
push
arpl
loope
pop
hlt
sub
movsb
pop
mov
lcall
fdivl
jg
ret
mov
dec
lret
popf
fidivl
addr16
dec
out
mov
xchg
cld
orl
popf
outsl
arpl
cmpsl
jne
adc
cmp
cs
cmc
jle
sub
out
imul
rol
adc
test
sti
adc
aas
sti
push
ljmp
ret
adc
push
push
add
adc
mov
imul
jg
xor
xchg
ss
add
xchg
xor
inc
ja,pt
pop
cli
mov
cmpsl
fdivrl
pop
or
pop
int
sbb
dec
lahf
lret
xor
adc
jb
jb
aad
cmp
aad
adc
and
push
std
inc
add
loop
sub
lods
filds
and
xor
mov
scas
out
fxch
insb
and
je
insb
push
mov
lea
fucomi
and
mov
movsl
leave
scas
testl
fldenv
and
jb
imul
pop
jnp
and
shl
das
push
repz
roll
and
jb
push
rorl
fidivs
inc
jecxz
and
mov
push
pop
cwtl
loop
add
add
jne
popa
lods
inc
cld
push
arpl
das
lock
iret
xchg
jle
fdivrp
xchg
fstl
andb
loopne
test
jae
repnz
pop
lret
popf
add
icebp
dec
pop
mov
sbb
add
xlat
xor
lret
bound
jge
cmp
cli
sub
cli
push
xor
daa
loop
mov
lods
xchg
mov
mov
adc
dec
ret
pop
push
jle
out
test
add
jle
pop
push
inc
adc
and
pusha
lretw
shll
es
gs
pop
pusha
pop
jp
xlat
xlat
lret
mov
xor
ret
into
push
aas
addr16
cmp
mov
mov
mov
mov
mov
inc
sar
mov
xor
cmpl
mov
pusha
movsb
rcrb
ljmp
outsb
into
sbb
ljmp
xor
pop
fcomp
paddusw
xlat
add
bound
popf
inc
inc
xor
das
movsb
scas
jp
or
shll
mov
jg
xor
loopne
ss
push
bound
push
cmpsb
in
push
lret
test
push
push
lcall
or
cmp
sbbl
pop
mov
mov
lret
adc
fwait
jb
movntq
fstpl
outsb
les
cmp
jnp
mov
sti
xchg
pop
fs
mov
jp
stos
es
movl
sti
daa
or
jg
ja
or
sbb
mov
adc
les
push
jo
in
fcmovnb
sbb
iret
mov
iret
inc
jns
dec
adc
fnstsw
and
mov
push
stos
mov
lods
jle
mov
insb
cmpsl
mov
jo
jnp
mov
iret
clc
incb
ret
insl
hlt
ja
adc
xlat
sbb
or
daa
xchg
movsb
imul
sub
pop
xor
dec
into
lahf
mov
pop
dec
je
push
fdiv
and
ds
insl
xor
mov
lcall
mov
pop
bound
fdiv
mov
es
in
inc
enter
rcrl
mov
gs
int3
and
mov
es
negl
push
sub
daa
adc
movsb
inc
pop
sarl
xlat
icebp
mov
xchg
scas
adc
ja
sub
shrb
cmp
decb
aas
cmp
xchg
repz
push
sahf
outsb
jg
lds
jp
jge
fisttpll
rcll
hlt
fldt
jne
xchg
mov
rcrl
jmp
mov
rol
dec
jge
mov
mov
rcll
xchg
insl
inc
aas
xor
cmp
add
out
push
sub
sarl
jle
aam
into
jl
mov
cmp
ds
mov
xor
das
fsubl
inc
fwait
ds
cmpsl
adc
pushf
xor
pop
repnz
and
movsl
outsl
mov
shll
out
lods
das
push
cmp
sbb
and
ds
inc
mov
xchg
mov
add
ljmp
lret
test
pop
addr16
or
dec
leave
lock
out
mov
enter
mov
pop
mov
bound
cltd
orb
scas
adc
scas
pop
pop
clc
lea
xchg
cmp
and
mov
sbb
pxor
sarb
jbe
jmp
popf
adc
lea
fdivrl
mov
addb
mov
iret
bound
imul
mov
jmp
jo
ss
adc
add
test
add
icebp
and
adc
clc
jae
jmp
rcrl
data16
dec
and
dec
clc
xor
inc
pop
mov
cwtl
fwait
xchg
lret
subb
mov
bnd
outsl
pop
pushf
mov
pavgw
loopne,pt
cmp
sti
sub
jno
dec
jp
cltd
adc
pop
fisttpll
push
cmp
clc
xchg
jbe
stc
arpl
mov
pop
mov
lds
icebp
fmul
dec
cs
pop
lods
filds
mov
sbb
mov
pop
clc
xchg
xchg
stos
enter
lahf
fs
xchg
or
rcl
mov
sti
mov
adc
jns
icebp
lahf
ss
fnstsw
and
pop
aaa
push
mov
in
adcb
sub
rclb
call
shrl
rcll
in
stos
out
hlt
rolb
mov
sti
cmpsb
dec
shrl
dec
xchg
in
addr16
je
jns
imul
shrb
into
negl
mov
nop
aaa
bound
nop
pop
aad
inc
ret
fisubl
push
sub
subb
pop
ss
push
pushf
fiadds
dec
and
stos
or
call
dec
fst
mov
xchg
push
pushf
roll
outsl
push
and
or
jecxz
ds
jecxz
aas
scas
pop
fidivl
push
scas
into
lds
and
mov
pop
pop
mov
std
rorl
jno
rcrl
jg
cmp
insb
fisubrs
sti
in
and
aad
imul
jns
dec
inc
addr16
xchg
dec
cmp
dec
clc
sub
jp
mov
fsubl
insl
jbe
ficoml
scas
cmpl
mov
fwait
sbb
hlt
in
shlb
jae
adc
cli
adc
jg
nop
xor
xor
test
fisubs
arpl
cmp
imul
dec
adc
sub
movsl
or
jle
jmp
push
movb
xchg
ljmp
push
add
in
subl
or
outsb
sub
dec
push
pushl
inc
mov
sub
push
mov
movsl
xchg
mov
inc
or
mov
into
int
cwtl
xor
xor
hlt
jo
cmp
arpl
aas
sar
adc
mov
scas
enter
data16
ret
cld
pop
fsubrs
mov
push
mov
scas
stos
pop
mov
pop
outsl
or
stos
sub
dec
cmp
lods
fstl
pop
int
push
mov
test
rcr
les
in
mov
or
xlat
adc
sub
jmp
and
aas
xchg
adc
fstpl
jmp
negl
mov
movsb
aam
mov
push
rolb
sbb
clc
rol
dec
adc
jno
xchg
sub
cwtl
push
pop
xchg
xchg
jmp
ja
xor
mov
xor
dec
cmpb
pop
cmp
decb
dec
cmp
jne
push
inc
push
mov
mov
sbb
lret
adc
jecxz
rcll
test
idivl
jle
addb
pop
add
jl
xor
repz
cwtl
cmpsb
cmp
lahf
shlb
fmull
orb
pop
repnz
notl
sahf
imul
dec
hlt
add
nop
in
stc
std
mov
mov
xchg
mov
lods
das
jne
mov
arpl
ret
out
xchg
sbbb
js
bound
pop
mov
inc
xchg
fwait
cld
jmp
jb
neg
mov
inc
jge
scas
or
lret
notl
or
movsb
psllq
or
dec
pop
xorl
add
or
cmp
ss
mov
call
scas
scas
mov
or
pop
xrstor
or
sbb
jo
add
push
push
push
sbbl
das
scas
jbe
pop
jns
rcrl
inc
inc
imull
aam
push
dec
mov
xor
xchg
fcoms
xor
fs
les
stos
inc
push
add
push
push
dec
in
cmp
shrl
push
cmp
push
sub
sub
push
test
adc
mov
icebp
jne
add
popa
in
xchg
mov
out
dec
and
xor
adc
incl
ud0
sub
mov
sahf
sahf
mov
and
daa
mov
pop
insb
lcall
mov
fdivl
hlt
inc
mov
xchg
sub
or
fcompl
jecxz
mov
inc
push
adc
out
out
pop
add
fcmovu
mov
addb
fdivrp
stc
cld
mov
mov
push
push
jg
jge
data16
mov
sbb
iret
loope
mov
xor
les
les
sti
aam
push
sbb
iret
cmp
sub
jecxz
loop
sub
in
and
lcall
inc
jb
loop
out
mov
mov
repz
lahf
popf
inc
dec
cmp
sarl
xchg
cld
scas
into
adc
and
or
push
pop
push
dec
cmp
mov
and
subb
push
rorl
jp
fwait
repz
inc
jae
pop
dec
cmpsl
push
xchg
inc
pop
inc
jmp
aad
loop
jp
lock
inc
fdivrl
xor
ror
pop
mov
cmpsl
inc
or
push
adc
in
das
dec
insl
out
lds
xchg
cwtl
jbe
popf
push
lahf
pusha
inc
lret
jl
mov
mov
jo
fadd
mov
mov
push
jmp
pushf
repz
sbb
mov
ficompl
inc
adc
and
dec
loopne
imul
xlat
subl
mov
mov
xchg
xor
mov
inc
pop
aam
hlt
in
push
pop
dec
imul
xchg
jo
dec
fcmovb
push
and
sbb
pop
cmp
sub
pop
mov
sbb
aad
daa
mov
mov
mov
ret
pusha
das
repz
add
mov
adc
pop
in
loop
imul
jo
out
dec
jge
adc
sbb
cli
push
mov
inc
ret
inc
pop
enter
in
outsb
mov
sahf
stos
mov
add
jo
push
movl
lods
sbb
js
xchg
jb
inc
mov
imul
or
adc
loopne
inc
scas
pop
inc
movsl
in
add
xor
xchg
insb
lcall
rorb
cmp
add
inc
cmpsl
shlb
fbld
outsb
cltd
icebp
cmp
lret
adc
ss
out
jge
xchg
mov
xor
adc
jno
mov
mov
adc
in
out
enter
and
mov
mov
dec
add
sarl
repz
xchg
cli
and
mov
push
or
lret
loopne
ret
xlat
cmp
push
sbb
mov
adc
es
inc
sub
pop
icebp
lock
rcr
mov
mov
sbb
negb
leave
js
adc
add
inc
add
mov
pusha
das
cmpsb
daa
jae
jo
loop
sbb
inc
rolb
mov
out
ljmp
in
mov
int
cmp
push
fwait
adc
lcall
cmp
inc
mov
add
notl
test
imulb
pop
inc
or
jp
inc
movsl
cli
enter
addr16
push
test
divl
mov
mov
sbb
mov
cmpsl
aaa
jmp
pop
dec
sbb
cmpsl
aas
dec
stos
leave
ret
imul
inc
and
xchg
popf
jecxz
pop
add
cwtl
cwtl
int
push
xchg
and
and
leave
das
mov
out
int3
shlb
lods
pop
inc
aad
pop
jp
stos
mov
adc
dec
fstpt
cmp
or
sahf
aas
in
inc
int
mov
sarl
loope
je
cs
scas
cmp
test
dec
lcall
lahf
jmp
xchg
ss
push
jae
mov
xor
leave
add
orb
inc
inc
ret
mov
fwait
push
xchg
add
sbb
sahf
into
frstor
in
enter
add
pop
je
push
add
push
pop
aaa
mov
fwait
sub
adc
adc
negb
jbe
cmp
dec
gs
lds
sbb
jg
pop
and
sbb
rcrb
mov
popf
pop
imul
insb
adcl
jle
movsl
mov
pop
in
out
inc
fwait
push
dec
cs
sti
ficompl
mov
sbb
jmp
test
std
jbe
xor
add
add
jnp
mov
xorl
pop
push
inc
jmp
lret
loope
into
aam
dec
lcall
push
leave
jp
dec
mov
fcomi
sub
movsb
push
das
inc
fdivrp
arpl
mov
stc
pop
mov
enter
pop
std
insl
add
cmp
sti
jl
add
and
sbb
out
jg
aam
dec
ds
pop
fwait
into
adc
jmp
pop
orl
sub
mov
push
shll
aas
outsl
mov
popa
addb
cld
pop
ficoms
jns
xchg
fwait
pusha
push
pop
sbbb
ret
adc
cmp
js
add
fsubrl
pop
int3
add
mov
shr
inc
loope
popa
stos
and
cmpsb
lds
push
fmul
add
in
aaa
pop
pop
mov
xor
xchg
push
push
xchg
lods
jp
jns
test
or
adc
push
adc
repz
mov
dec
push
mov
xor
mov
jbe
inc
jmp
push
lcall
das
mov
aas
add
aam
das
jae
mov
enter
out
imul
dec
xchg
aas
dec
jg
js
imul
inc
inc
into
lcall
sahf
sti
aaa
xchg
sbb
in
loopne
in
iret
lds
enter
add
push
out
pop
or
sbb
xor
sbbb
xor
or
jmp
xchg
sbb
push
outsb
decl
enter
sbb
and
cmpsb
leave
sbb
mov
jo
movsb
and
imul
jmp
adc
mov
and
xor
ret
shlb
stos
or
push
out
cltd
out
incb
mov
inc
arpl
pop
sub
aaa
sub
mov
stos
push
xchg
push
rorb
call
divb
pop
mov
jb
jmp
xlat
test
xlat
pop
inc
or
sub
lock
sub
mov
lcall
dec
dec
add
lahf
les
pop
adc
stos
sbb
ret
das
push
dec
jae
pop
sbb
mov
movsl
jne
xchg
push
aaa
fidivs
and
mov
sbb
movsb
sbb
add
sbb
mov
add
in
jne
fnstenv
push
mov
push
ljmp
cmpsb
push
mov
mov
sub
and
add
lret
inc
scas
scas
push
jmp
xchg
add
aad
mov
dec
lret
rclb
cs
dec
sub
adc
push
mov
imul
add
jnp
sbb
push
bound
mov
movsb
push
loopne
decl
loop
sti
and
and
in
xor
out
shll
les
pop
push
aas
gs
add
push
jns
pop
xchg
sbb
xchg
sbb
sub
sbb
inc
dec
xchg
mov
or
data16
ror
ret
adc
mov
xor
ret
cltd
fnstenv
cmpsl
mov
les
enter
aas
xchg
cwtl
add
add
pop
adc
nop
outsl
cmc
jo
mov
lret
fdivrs
nop
push
or
pop
int3
push
sti
sahf
adc
lret
jmp
jecxz
xchg
mov
mov
sub
cmc
mov
mov
add
jne
mov
stc
adc
enter
frstor
pop
stos
lock
inc
lea
hlt
mov
cmp
outsb
repnz
fwait
iret
and
in
mov
mov
inc
insb
out
mov
loope
jbe
iret
pop
loope
and
mov
xchg
inc
jg
imul
mov
dec
add
dec
push
xchg
and
movsb
into
or
lods
cmp
addl
repz
mov
sub
push
mov
dec
dec
sbb
push
imul
push
lods
xchg
add
cmp
add
sbb
xchg
sub
dec
xor
in
xchg
push
mov
cli
sbb
ja
adc
push
and
sbb
pop
mov
loopne
sbb
mov
bound
je
roll
inc
fstpl
sbb
imul
movsl
or
fwait
pop
push
orb
dec
in
jle
push
jmp
std
test
inc
mov
push
imull
push
sbb
loope
jns
lock
sbb
icebp
push
sti
jns
cltd
sbb
sti
scas
ja
mov
xor
in
std
ds
xor
fldcw
xchg
mov
idivb
cmpsb
insl
out
jp
inc
or
sti
xor
daa
idivl
push
insb
adc
push
mov
and
sub
sub
push
addr16
or
popw
shl
push
lods
adc
lock
cmp
cmc
xor
sti
dec
sahf
pop
inc
imul
outsl
and
rclb
jle
push
jns
sar
lods
rcrb
insl
out
sub
adc
iret
fadds
addb
pop
mov
notb
je
dec
sub
dec
out
je
xchg
adc
nop
adc
inc
dec
jno
clc
aad
ja
xchg
cs
sbb
cmp
int3
ja
xchg
xchg
pop
dec
test
or
pop
sub
cmp
inc
adcb
add
popf
mov
cmc
lret
mov
jmp
aas
stos
dec
push
arpl
repz
test
test
daa
rcrb
inc
fmull
push
push
cs
inc
cwtl
fdivp
testl
pop
cmpsb
sub
sahf
lods
add
or
clc
sub
dec
icebp
jg
pop
pop
pop
push
xor
cli
mov
add
mov
cmp
pop
mov
sub
aas
ffree
push
insb
fsubp
leave
adc
pcmpgtw
out
ds
mov
mov
lods
add
aaa
pop
adc
jo
loope
bound
std
lods
jno
add
fmulp
fcmovbe
out
rcrb
add
rolb
rcll
sarl
pop
fstps
sbb
xor
push
adc
mov
cmp
add
xor
cmp
enter
pop
adc
lods
call
movsb
outsb
mov
xor
sbb
jno
test
push
call
fimull
and
dec
sub
stos
lret
jl
jbe
fdivrs
mov
dec
xor
in
loopne
xchg
sub
add
shrb
test
ret
iret
dec
loop
sar
jecxz
adc
jl
inc
or
xchg
movb
sub
enter
adc
mov
cmp
inc
int3
sbb
rorb
push
cmp
pop
and
xchg
out
and
mull
push
ljmp
in
insl
pop
inc
mov
cmp
adc
addr16
adc
cmpsl
leave
cmp
int
sbb
mov
add
lret
xchg
into
xor
sbb
mov
lahf
and
mov
jnp
ret
and
add
call
inc
add
rcrb
andb
ret
sbb
fwait
jbe
negb
adc
mov
nop
lds
stos
sub
add
fwait
sub
mov
pop
pushf
out
cmp
hlt
cmp
out
mov
ljmp
xchg
scas
xor
inc
imul
flds
cmp
sbb
jno
into
push
xor
dec
jle
daa
sahf
xchg
jmp
filds
mov
xorl
jge
cmp
lcall
inc
jo
sbb
loope
or
in
xchg
mov
or
adc
fcmovb
xchg
adc
out
mov
xchg
ja,pn
or
sti
cwtl
mov
imul
les
fiaddl
fimuls
mov
mov
adc
jg
fsubrs
add
pop
mov
jo
pop
push
xchg
loopne
nop
xor
mov
scas
pop
mov
pop
outsb
sub
and
inc
enter
cltd
xor
aam
insl
adc
rcll
mov
mov
fidivrs
fcomps
add
inc
jmp
data16
js
push
aas
mov
jbe
push
jge
or
jp
and
pop
and
stc
inc
cmp
cmp
or
add
aaa
icebp
int3
cwtl
or
sarb
or
add
push
adc
adc
shrl
cmc
adc
dec
jbe
outsl
mov
mov
daa
push
inc
scas
push
orl
iret
sub
subb
shll
test
sbb
sub
xchg
mov
out
repnz
cmp
ljmp
shl
mov
push
push
xchg
std
sti
push
stc
mov
lods
pop
adcl
dec
jnp
rcrb
icebp
ja
or
dec
mov
add
xchg
lock
dec
pop
jl
mov
push
adc
lds
add
cs
push
addr16
sbb
pop
pop
jbe
lret
push
mov
movsb
mov
fwait
mov
jmp
loop
cmp
xchg
popa
into
pop
enter
cs
adc
jle
ret
dec
iret
and
jns
pop
ja
bound
push
icebp
mov
arpl
je
xor
je
xor
dec
pop
out
cmpsb
pop
out
out
pop
test
sahf
in
cltd
jg
jl
add
add
cmpsl
adc
mov
jne
add
push
dec
xor
mov
aam
lock
adc
lock
imul
cmpb
sub
repnz
inc
jno
jl
and
cmp
pop
xor
rcrl
cmpsb
and
clc
orl
mov
or
jle
add
cmp
ja
sub
iret
cmpsb
mov
push
jno
and
mov
mov
push
xor
and
lret
pop
in
add
sbb
movsl
les
mov
adc
stos
insl
cmp
outsb
mov
sahf
sub
arpl
fwait
outsl
daa
bound
xchg
pusha
sbb
test
fldt
cmpsl
push
repnz
lea
lcall
inc
add
push
push
nop
lods
pushf
jo
loope,pt
notb
dec
js
sti
call
scas
daa
sti
iret
cmp
rclb
sbbl
sbb
int
pop
ret
sub
pop
xchg
je
mov
lods
orl
xor
out
or
xchg
xchg
add
es
push
adc
inc
xor
xor
rcll
in
inc
test
push
xchg
and
cmp
mov
xchg
int3
jg
adc
decl
xor
mov
test
cmp
icebp
mov
sahf
mov
xor
pop
aas
and
jne
push
xchg
sub
mov
js
mov
and
xchg
cltd
or
and
push
jmp
mov
fsubrl
leave
xchg
cmp
mov
push
push
int
fidivs
or
call
bound
push
xchg
xchg
push
mov
mov
leave
loop
sbb
inc
js
xchg
mov
pop
cmp
sub
cltd
data16
cmpsb
cmp
daa
mov
push
jg
lret
cmpsb
pusha
jns
sbbb
push
jns
cmp
xchg
adc
pusha
arpl
jo
dec
punpckhwd
jno
push
mov
pop
sbb
pop
cmp
aas
push
push
verr
adc
pop
ret
jp
sti
std
sub
mov
cmp
loop
push
out
xor
jb
and
add
outsb
sti
dec
popf
mov
push
add
loopne
int
in
aaa
dec
xchg
aam
add
repnz
jle
scas
xor
mov
outsl
pop
ds
enter
inc
test
aaa
fwait
stc
add
sbb
loope
imul
sub
lods
xor
add
jle
mov
pop
retw
shll
mov
data16
ret
sub
xchg
movsb
daa
fldl
cmp
dec
mov
inc
inc
lret
call
mov
jnp
push
out
out
pop
inc
imul
cmpsb
xor
insb
lods
repnz
ljmp
fisubl
repz
mov
aad
pop
mov
mov
repz
fcomps
repz
mov
popl
push
outsb
stos
xor
mov
xchg
bound
testb
pop
test
add
push
jge
jno
movsl
imul
mov
nop
ret
add
inc
pop
ror
clc
mov
sub
cmpsb
cmpsl
mov
int
popf
xor
dec
add
sbb
mov
cmpsl
lret
in
or
push
fwait
mov
mov
xlat
jp
or
sbb
add
fcompl
adc
mov
pop
mov
mov
xor
add
xlat
loopne
enter
sub
ljmp
lcall
mov
shr
adc
mov
mov
add
mov
mov
dec
mov
push
mov
or
mov
pusha
lcall
push
icebp
aam
inc
xchg
mov
fwait
roll
rcrl
fwait
xchg
lods
pop
xor
popf
movb
loopne
into
ret
mov
rclb
inc
dec
or
test
pop
xchg
mov
mov
cmp
outsl
mov
mov
inc
aas
in
idiv
cmp
and
mov
fsts
imul
inc
xchg
push
jmp
mov
insb
pop
insb
inc
int
xchg
jmp
jo
leave
dec
dec
pushf
pop
loop
dec
cmc
xchg
push
mov
inc
xchg
mov
imul
lea
inc
adc
mov
mov
outsl
dec
jae
dec
leave
data16
jmp
popf
mov
out
lock
xor
pop
push
aam
dec
jle
je
pusha
scas
cmpsl
sub
das
fbstp
or
jge
popf
icebp
stos
fstps
mov
repnz
mov
ja
mov
sub
add
push
rep
notl
xor
clc
push
dec
add
int
outsl
ja
pop
xchg
aam
and
xor
imul
jl
sar
imul
dec
sti
and
insl
dec
xchg
pop
int
jo
dec
insl
cmp
jmp
mov
adc
call
adc
or
xchg
ror
jmp
movsb
jecxz
dec
jb
psrad
lods
dec
mov
sbb
imul
insb
test
mov
sub
into
stos
dec
or
adc
adc
xchg
pop
into
pop
fucomi
pop
fucompp
mov
pushf
mulb
in
lds
outsb
sbb
xchg
mov
push
adc
dec
push
bnd
daa
jno
and
je
mov
hlt
int3
cli
fmuls
dec
jae
mov
mov
in
jg
xlat
and
roll
cmp
xchg
mov
stos
into
fprem1
push
sbb
lahf
insb
pop
roll
pop
ret
mov
xor
fnstsw
jnp
add
mov
push
sti
dec
movsb
lahf
jb
adc
cltd
je
lret
and
adc
aaa
daa
sti
push
scas
inc
cmpsl
loope
enter
mov
mov
in
imul
das
int3
jecxz
cmpsb
pop
sub
jae
into
test
jmp
insb
rolb
fidivl
mov
xchg
cmpsb
repnz
leave
pop
lock
or
push
loopne
mov
xor
push
popa
pop
jle
add
inc
xchg
add
insl
fists
test
ja
gs
mov
popa
inc
mov
popa
rolb
icebp
mov
std
add
push
sti
das
fwait
jg
in
or
cmp
mov
scas
lds
inc
add
lock
in
push
pop
mov
jecxz
imul
sbb
out
dec
aam
aad
lcall
popf
aas
pop
push
aas
addl
sub
enter
dec
mov
repz
sbb
and
pusha
in
pop
loope
or
addl
mov
adc
cmp
fdivp
loope
adc
jp
mov
push
imul
mov
in
daa
daa
daa
cwtl
outsb
inc
scas
lea
mov
mov
jae
insl
mov
sbb
jb
add
xor
std
xchg
pop
pushf
inc
jae
movups
xchg
mov
push
incb
and
add
push
mov
and
pop
lds
adc
testl
dec
push
shr
mov
fadds
fisubl
mov
pop
pop
xor
push
mov
enter
ds
pop
lcall
or
cmpsl
dec
adc
jbe
jbe
test
xchg
icebp
lret
loop
jg
int
popf
inc
push
sub
or
out
mov
push
inc
xor
pop
fidivs
movsl
xlat
jle
leave
test
and
aad
sbb
push
push
cmp
xchg
mov
movsl
xchg
xchg
adc
das
nop
cli
sub
pop
int3
jmp
jmp
push
movsl
in
xchg
test
cmp
pop
pop
or
add
fmull
fstpt
jb
es
jo
fs
jle
pop
adc
testb
dec
pop
es
movsl
popa
jmp
scas
xchg
inc
out
stc
sbbb
stos
ljmp
orb
arpl
push
aam
sub
xlat
loop
sub
int3
xchg
push
das
scas
cli
sub
call
inc
shlb
int3
and
pop
jne
cmp
leave
aam
add
jl
sub
add
test
sarl
dec
xchg
jbe
inc
or
sub
lds
xor
lcall
mov
jnp
loop
test
xchg
pop
adc
ja
xchg
adc
test
mov
aaa
clc
mov
jb
notb
outsb
xchg
gs
push
xchg
or
adc
movsb
nop
mov
xchg
scas
and
loope
test
dec
mov
mov
idivb
mov
cmpsl
cmp
and
push
fwait
fldt
scas
add
scas
pop
or
xchg
adc
testb
inc
je
cltd
push
insb
fs
call
adc
shlb
popf
jp
loope
stc
jne
movsl
cmp
cmp
test
orb
or
imul
imul
jb
scas
mov
fdivrl
fists
add
add
jmp
call
mov
push
mov
mov
imul
ret
hlt
adc
and
xchg
mov
and
fmull
arpl
xchg
xlat
out
fldcw
adc
les
inc
sub
xchg
pop
jle
arpl
stos
in
mulb
xor
fwait
int
scas
in
rorl
mov
or
fldl
mov
daa
pop
ja
fimuls
mov
pop
cmp
xchg
xor
mov
ficompl
dec
stc
mov
xchg
shrl
pusha
xor
pop
fucomip
fmuls
pop
cmp
js
or
pop
hlt
test
cltd
xchg
cwtl
push
push
push
cmc
sub
push
mov
pop
lahf
iret
popa
js
lock
mov
repz
push
in
shll
push
nop
push
imull
jecxz
inc
push
sub
pmaxsw
sub
das
pop
sbb
add
into
shl
or
push
stos
cwtl
cmpsb
and
xchg
sbb
cwtl
push
mov
les
xchg
arpl
add
cwtl
and
xor
sbb
xor
mov
mov
ss
inc
adc
sbb
push
in
mov
adc
ret
sbb
xor
mov
clc
mov
pop
mov
icebp
push
in
xor
fstps
data16
out
adc
mov
and
insb
les
sbb
outsb
or
aad
lods
jg
insl
and
test
in
add
lds
popf
lds
mov
cmp
xor
add
jp
fists
decl
fmulp
inc
dec
mov
xlat
je
and
dec
xor
lret
adc
movsb
cld
es
insb
dec
mov
lret
or
xchg
jecxz
outsb
data16
mov
fwait
xchg
or
pop
jle
lcall
insl
mov
pop
out
es
in
int3
cmp
aad
pop
pop
mov
rorl
sub
dec
in
xchg
movsl
add
and
cli
icebp
fimull
mov
jnp
mov
pop
inc
cld
mov
add
das
inc
repnz
push
lea
pop
shl
adc
and
daa
pop
add
mov
and
pop
pop
and
leave
adc
sub
loope
ja
int3
inc
out
fstpt
dec
jnp
sub
sbb
rcr
xor
mov
jno
pop
pushf
pop
xor
sbb
xchg
inc
xor
xlat
cmpsb
jb
imul
test
add
inc
fstl
icebp
mov
xor
ja
dec
mov
mov
divb
movsb
xchg
cltd
push
outsb
mov
cmpsb
cmpsb
out
add
daa
fidivl
push
imull
ffree
lods
jle
sbb
mov
sbb
jae
test
sub
imul
push
das
adc
mov
jecxz
xlat
jl
cmc
jl
fs
ss
mov
adc
inc
scas
mov
iret
mov
pop
outsb
mov
into
or
push
push
lret
adc
cmp
test
repnz
pop
lret
mov
mov
dec
iret
pop
test
cmp
daa
mov
inc
add
fistl
popa
cld
push
das
lea
movsl
sbb
sti
mov
mov
dec
test
xchg
adcl
xor
sahf
bound
cld
mov
out
mov
xor
int
sarl
mov
leave
jns
lahf
mov
push
loop
outsb
and
xchg
adc
cmpsl
jle
xchg
or
stos
dec
nop
push
cmp
mov
xor
shl
pop
aaa
subl
fnstcw
cmpsl
rclb
insb
pusha
push
pop
cmp
mov
dec
add
inc
repnz
jb
lea
into
movsb
adc
jl
fs
fcoml
outsb
lods
xchg
je
lds
add
mov
outsl
push
mov
jbe
fisubrl
in
scas
inc
imul
jns
sti
lret
addr16
jle
inc
mov
pop
jne
lds
and
mov
into
mov
pushf
mov
mov
ljmp
mov
push
lret
popf
cwtl
in
cmp
mov
cmp
xchg
or
or
clc
femms
cmp
sbb
jb
pop
lds
push
push
cs
test
adc
mov
mov
fisubrl
rcr
ret
xchg
les
fwait
cmp
shrb
mov
add
mov
rorb
xor
inc
and
sarl
xor
sub
jns
test
int3
imul
dec
pop
pop
insb
loop
jmp
insb
cld
pop
xchg
js
insl
insb
fldt
push
inc
das
cmp
xchg
lock
mov
and
mov
popf
pop
mov
push
lcall
or
in
loope
push
cmp
cmp
mov
cmpsb
lds
adc
in
lds
sbbb
cmp
sbb
inc
mov
andb
ds
adc
testl
and
jnp
inc
loopne
inc
sub
mulb
ljmp
pop
push
add
jle
mov
pop
dec
pop
std
xor
in
mov
unpckhps
imul
mov
in
mov
xchg
add
aas
dec
push
es
orb
loop
dec
mov
pop
xor
in
repnz
scas
repz
xchg
mov
pop
pop
xor
xor
jb
and
into
mov
mov
xchg
fnstcw
out
cld
mov
xchg
ss
add
std
gs
test
fsubl
test
loope
mov
stos
push
sahf
or
cmpsl
or
jae
lea
popa
out
cmp
sub
push
fiadds
push
movsl
jp
sub
ss
in
mov
repnz
xchg
push
adcb
inc
std
sbb
lods
inc
add
pop
pushf
lahf
mov
xchg
pop
in
jae
les
incb
push
or
inc
outsl
xor
mov
cltd
popa
ja
dec
mov
push
pop
outsl
js
pushf
push
stc
mov
aaa
rorl
sahf
xchg
stos
dec
dec
sbb
stos
into
jns
scas
call
pop
loop
xor
movsb
pop
fisubrl
adc
and
push
daa
aaa
int
pusha
mov
dec
lret
push
inc
dec
mov
add
test
sarb
or
cld
inc
out
mov
xchg
in
stos
inc
in
cmpsb
in
push
scas
out
and
dec
push
push
xor
xor
out
loop
cmp
outsb
scas
jb
mov
jge
mov
mov
pop
adc
decb
dec
aad
mov
mov
add
mov
xchg
cmc
je
out
addb
lock
fmull
xchg
movsb
jecxz
mov
cmp
gs
std
out
stc
cmp
outsl
js
add
ss
jl
pop
pushf
popa
push
aam
push
mov
sub
push
inc
jnp
ret
or
mov
lret
dec
cmp
or
lds
sbb
fsts
mov
jno
pop
pop
add
rcrl
ret
iret
rol
shll
iret
sbb
push
add
jmp
movsb
int3
pop
dec
inc
in
jge
jae
in
stos
mov
push
adc
mov
lret
iret
jb
add
std
data16
pop
roll
mov
je,pt
gs
sub
jp
in
pop
and
sbb
dec
and
push
push
addb
cmp
inc
loopne
ljmp
lahf
or
lahf
leave
lahf
jg
pushl
push
or
jnp
pop
imul
int
pop
movsl
movsl
xchg
inc
ds
sub
adc
jmp
inc
aam
iret
pop
adc
pop
je
mov
push
lods
aad
cmp
sti
or
adc
mov
inc
mov
add
jg
sub
inc
fidivs
xchg
cmp
dec
or
shl
adc
jl
mov
cmpsb
add
or
mov
mov
shrl
popa
mov
mov
sub
fildll
dec
pop
jnp
pop
jge
je
pop
movsl
bound
addr16
jle
les
pusha
pop
in
mov
xchg
daa
scas
cwtl
ja
and
lods
sti
test
dec
push
hlt
add
gs
xlat
pop
push
aam
jae
iret
lcall
pop
cmc
call
jnp
dec
fbld
cmp
cld
dec
mov
cmp
pop
mov
push
stos
ljmp
fst
jl
mov
cmpb
repnz
pop
call
and
mov
xor
push
xchg
sub
jne
out
cmp
xchg
test
popa
idiv
loopne
shrd
bound
inc
sub
mov
adc
and
pusha
int3
lcall
iret
inc
movsl
jl
sti
outsb
enter
jbe
lcall
daa
ret
shll
mov
xchg
in
stos
shlb
into
lods
lcall
in
adc
repnz
mov
clc
mov
mov
mov
stos
dec
and
push
das
cmpsb
cmp
mov
jnp
cwtl
add
or
movsb
inc
jl
rcr
das
or
cmp
cmp
push
out
shrl
movsb
xchg
in
push
es
andb
dec
cmp
bound
xchg
lret
ja
lahf
push
je
pop
or
leave
mov
xlat
cli
inc
push
add
in
addr16
in
sbb
pop
repnz
std
mov
mov
sub
test
add
pop
lahf
xchg
repz
lcall
mov
mov
mov
cmp
pop
out
or
mov
pop
jl
add
leavew
xchg
inc
ficompl
inc
cmpsl
cltd
cmp
adc
bound
push
jle
test
lods
inc
andl
scas
stos
xor
call
mov
lret
mov
cmpsb
jge
cltd
push
test
xor
and
push
outsl
test
je
cmpsb
ficoml
inc
adc
jbe
xor
xchg
mov
mov
gs
nop
lea
and
pop
inc
cltd
hlt
fadds
or
fsts
dec
sub
pop
popl
adc
mov
lahf
inc
xor
sbb
outsl
dec
and
aaa
sahf
lret
js
xor
mov
cmp
outsl
or
xchg
mov
pop
xor
jbe
push
xor
pusha
in
hlt
aas
bound
fcoml
mov
nop
jp
pop
negl
insb
pop
in
out
jnp
hlt
out
push
mov
add
les
je
or
push
ds
addr16
test
jmp
jns
cmp
add
insb
cltd
pusha
cmpsl
jmp
sbb
xor
mov
test
and
int
loope
out
gs
xchg
mov
shlb
jb
int3
std
adc
lea
cmpsb
pop
arpl
dec
jecxz
push
lds
std
out
shl
jne
push
in
push
mov
and
repz
dec
mull
jnp
mov
jg
adc
pop
sbb
loop
xchg
xchg
mov
pushf
enter
mov
lock
es
cmpsl
jmp
or
loope
adc
cmp
incl
out
inc
and
hlt
push
or
fcompl
sbb
adc
mov
outsb
das
inc
xor
jmp
lahf
aaa
movsl
loop
sahf
push
call
adcb
out
int3
mov
jns
sbb
mov
push
push
jecxz
popa
ret
sbb
jne
push
xchg
cs
fwait
xor
out
cmp
daa
hlt
or
inc
pop
mov
inc
mov
test
pop
jo
mov
dec
es
jle
test
in
mov
nop
push
popa
mov
jnp
mov
nop
scas
dec
out
hlt
mov
xchg
rolb
aas
pop
test
jno
das
push
js
xor
dec
incb
out
ret
and
orb
sub
in
test
subl
sub
xchg
cmp
daa
data16
cmp
out
mov
je
mov
mov
shlb
dec
test
fnsave
xor
cmp
pop
sbb
clc
shll
add
push
dec
jnp
inc
daa
or
sbb
add
dec
mov
in
adc
rolb
add
flds
add
mov
adc
mov
mov
mov
cmp
enter
pushf
insl
push
push
test
jbe
push
lcall
mov
sub
in
xchg
aaa
dec
fidivl
pop
inc
icebp
cmp
jns
jno
jne
scas
shl
inc
dec
or
xchg
and
mov
jns
insb
fwait
push
negb
pop
int
and
insb
int
adc
jns
xlat
sahf
loop
rorb
jge
mov
pop
mov
mov
lahf
and
popf
xor
jb
shr
into
and
xchg
sti
arpl
mov
testl
inc
test
leave
or
mov
loopne
out
xchg
mov
adc
jg
je
outsl
or
mov
mov
mov
call
cmp
dec
aaa
stos
cmova
xor
out
adc
outsb
cli
loope
cltd
out
test
dec
fisttps
test
sbb
sti
rorb
sarb
add
inc
push
dec
fdivs
add
loopne
push
subb
jo
adc
loopne
inc
inc
in
inc
pusha
and
push
jmp
sbb
xchg
sbb
sbb
xchg
scas
dec
sub
in
orb
cmp
mov
adc
xchg
ds
add
xchg
in
cmpsb
sti
dec
xor
aad
jae
jb
aad
cltd
inc
cmpsl
aad
xchg
jo
jns
push
mov
fninit
xor
imul
cmp
mov
push
sbb
xchg
mov
out
fcmovbe
shrl
inc
push
inc
inc
jno
push
xchg
rcr
shl
mov
out
insl
jg
fwait
je
fistl
in
pop
sti
inc
shlb
lea
testl
test
mov
lods
pop
lahf
lds
ljmp
push
dec
inc
sub
lahf
icebp
pop
xchg
dec
leave
xchg
fdiv
out
pop
adc
scas
aas
test
stc
inc
xchg
push
add
lds
mov
jmp
cmpsl
es
cmp
cmp
or
mov
or
or
icebp
imul
iret
pop
and
jns
lods
pand
push
pop
jne
mov
outsl
pop
stc
mov
stos
add
push
mov
jecxz
or
pop
test
sub
lcall
fmuls
pop
sbb
and
testb
dec
mov
fdivs
mov
push
mov
and
popa
lcall
push
fisubs
jnp
mov
sub
into
mov
sbb
js
int
sbb
popa
ljmp
jae
mov
mov
inc
sar
mov
sbb
out
test
movsb
jno
xor
adc
daa
test
and
xchg
insb
arpl
mov
ret
divl
sbb
mov
push
xchg
dec
lds
aad
and
pop
push
insb
mov
xchg
push
sub
push
xlat
rclb
fistl
insl
add
in
or
lods
inc
shrl
ret
popf
lea
jae
and
and
mov
es
insl
or
jne
mov
lcall
ss
subl
ror
or
shll
jecxz
jmp
fadds
inc
adc
fxch
pop
gs
stc
sarb
push
push
scas
lcall
inc
or
cmc
and
pop
loopne
jge
repnz
aaa
mov
pop
cltd
insl
iret
inc
adc
inc
int3
xchg
jle
divl
stos
imul
lcall
inc
mov
das
lock
push
xor
movsl
sbb
cmpsl
movsl
pop
movsl
int3
jae
subl
xor
ljmp
ret
mov
les
sbb
cmp
popf
popa
lds
outsb
and
ljmp
push
inc
cmp
shrb
popf
push
sbb
push
or
or
in
fsubp
sahf
add
int3
out
lret
inc
cmp
enter
mov
add
dec
das
idiv
mov
stos
add
lock
nop
fsubs
andl
dec
ret
pusha
mov
pop
outsl
push
push
test
fistl
out
mov
or
lcall
fimull
out
jo
push
fldenv
and
orl
in
leave
xchg
ljmp
loopne
nop
dec
sub
push
jae
mov
shlb
or
adc
fidivl
push
test
out
gs
lret
sbb
dec
or
cmc
inc
pop
pop
test
pop
mov
inc
cltd
enter
lods
pop
and
lret
xchg
fimull
fldt
jge
fcoms
in
cmp
mov
lahf
rcrl
ss
test
jle
fmuls
ss
outsb
push
inc
cmpl
dec
push
bnd
adc
sbb
xchg
scas
jp
mov
adc
lds
jne
aaa
mov
adc
test
mov
arpl
xor
mov
and
movsb
mov
and
cmpsl
add
push
roll
cmpsl
mov
xor
mov
shll
and
call
in
push
mov
xchg
shr
dec
push
fsubr
cmp
fsubrs
sub
rcr
xchg
jmp
adc
fisttpll
pushf
sahf
cmpl
pop
add
and
mov
aam
lahf
xchg
adc
adc
adcb
inc
mov
insl
dec
popa
cld
jo
add
inc
add
insb
in
mov
sbb
add
mov
mov
add
cld
test
jecxz
sub
insl
mov
push
ret
mov
imul
adc
in
test
stc
jmp
jle
movsb
cmp
leave
insl
movsb
les
leave
adc
sub
hlt
sbb
lret
xor
jne
enter
int3
ljmp
pushf
jmp
rcr
or
xchg
jecxz
add
jmp
add
repz
movsl
andl
pop
jae
adc
sub
jb
push
jne
and
sti
push
lret
data16
mov
mov
and
es
xchg
test
test
jmp
sar
sar
test
inc
or
jb
stc
and
jno
ds
sub
mov
cli
daa
andl
loope
cmp
mov
inc
sbb
mov
stc
mov
cmpsl
pop
rcrl
xor
int
or
pop
xchg
stos
pop
mov
scas
popf
push
data16
mov
std
out
fcmovu
aaa
xor
insb
or
in
out
fwait
pop
or
in
stos
pusha
push
xlat
cwtl
add
sbb
mov
xorl
adcb
xor
and
or
adc
inc
cmp
adc
push
pop
loope
dec
mov
nop
cmpsl
fcomip
cmp
xor
or
shll
fidivrl
push
lock
ret
in
jl
inc
das
fnstenv
lret
je
insl
shr
roll
push
gs
lea
xchg
leave
and
pop
leave
adc
mov
mov
adc
sub
sub
adc
loopne
jnp
loop
sti
and
fidivl
lret
repnz
mov
xor
loope
stos
push
icebp
cmp
mov
adc
sbb
out
pushf
pusha
push
out
cwtl
imul
cmpsb
fsubrl
sbb
mov
jo
and
xchg
xor
ret
cwtl
xchg
addb
lods
inc
inc
imul
lea
add
outsl
push
and
adc
js,pn
test
aaa
mov
rclb
inc
popa
xchg
pop
pop
pop
aad
cmp
pop
jl
dec
pop
push
in
xor
ltr
cmp
jge
jecxz
ljmp
mov
ret
xchg
lret
mov
out
or
mov
dec
jp
add
sarl
negb
jb
stc
xor
mov
scas
lcall
add
push
add
jns
lods
rcll
sahf
mov
and
adc
add
lahf
inc
dec
cli
movsb
cmp
xbegin
pop
test
mov
and
dec
dec
es
push
dec
inc
jns
jb
jmp
fcoms
add
sbb
jp
out
or
xor
pushf
outsl
ret
sbb
jne
fsubs
xor
pusha
pop
jae
pop
or
fistpll
or
ja
les
outsl
shrb
mov
xor
test
cltd
xor
sti
adc
je
mov
sub
xor
scas
xor
xchg
arpl
inc
rolb
ret
or
add
stc
cli
fbstp
ljmp
les
iret
push
push
xchg
lret
and
mov
push
mov
mov
in
rorl
push
stos
inc
fs
sbb
add
push
mov
cs
xchg
pop
fyl2xp1
mov
mov
mov
add
inc
push
aam
mov
into
or
lahf
icebp
cmp
je
mov
mov
clc
shl
xor
xchg
dec
sbb
outsl
int3
popa
mov
jb
inc
sub
ret
add
and
dec
in
adc
adc
xor
shlb
popf
div
pop
lods
cmc
jg
xlat
cwtl
mov
inc
push
lcall
cltd
sub
xor
sub
pop
push
call
inc
lret
sub
test
arpl
test
call
out
xchg
pop
lcall
xor
in
fdivs
test
xchg
out
xchg
loopne
test
xchg
pop
sbb
and
pop
out
dec
or
ret
add
das
sbb
int3
hlt
les
xchg
lcall
inc
bnd
push
pop
call
mov
aam
loope
outsb
loopne
mov
sbb
dec
lods
jl
orl
mov
sub
inc
and
test
xchg
out
outsb
adc
pop
jg
xor
test
mov
pop
xorl
xchg
add
lea
sti
sbb
and
ss
orl
jmp
xlat
push
add
fcoml
xchg
nop
lds
pop
ljmp
push
adc
sub
inc
shlb
xchg
into
imul
imull
inc
push
in
outsb
mov
inc
aaa
fisubs
cwtl
fs
lock
adc
push
gs
mov
xchg
stos
pop
dec
cmpsl
jge
daa
adcb
lods
sub
mov
adc
std
sbb
int
cli
pop
cmp
sbb
add
cmp
lahf
cmp
fs
clc
fcomi
and
pop
ret
gs
orl
fisttpl
pop
xor
int3
mov
mov
inc
lcall
sub
push
push
fdivr
dec
ss
stos
notb
cmpsb
cmp
sub
dec
fnstsw
fucomp
ficompl
adcl
jmp
shr
pushf
or
fs
popa
lods
jae
inc
movsl
cmp
push
or
loopne
aas
imul
xchg
jb
pop
sub
nop
cmp
inc
cmp
mov
jo
repnz
add
stos
pop
test
sub
sti
sti
pop
sub
sbb
test
stos
iret
mov
jg
mov
push
int
xor
jmp
adc
mov
cld
addl
movsb
xchg
out
ret
cmp
imul
push
fisubs
out
or
pop
pop
stc
cwtl
daa
cld
add
shl
xor
cs
aaa
fcoms
jle
sti
mov
ret
ss
loopne
js
mov
test
xchg
dec
out
movsb
cmp
rcll
cmp
sbb
mull
dec
or
mov
push
movsl
mov
dec
movsb
jmp
lret
stos
das
das
test
add
aaa
pop
out
jo
cmp
push
sub
mov
mov
rorb
outsl
fldl
insb
fwait
sub
lods
push
mov
into
and
xchg
and
divl
lea
shll
nop
sbb
or
pop
stc
mov
mov
daa
stos
jecxz
movsb
aaa
sti
xchg
enter
jae
add
lcall
mov
data16
jnp
sbb
cmpsl
repz
xlat
xlat
adc
ret
mov
dec
sub
test
sbb
fs
mov
pop
imul
hlt
mov
jb
xchg
outsb
jl
sbb
popl
inc
cld
and
jae
fbld
pop
popf
jmp
ja
or
xor
xchg
lea
xor
add
shr
mov
rcrb
fisubrl
lcall
mov
cmpsb
dec
loop
rclb
sbb
nop
pushf
pmaddwd
fwait
push
bound
fwait
push
inc
data16
pop
clc
xorl
sbb
sub
sub
jle
sub
jb
movb
mov
sub
mov
out
clc
movsb
call
lret
idivl
pop
adc
pop
jae
lock
mov
call
xchg
loope
imul
pop
pop
in
mov
nop
jmp
ljmp
mov
out
addr16
xchg
iret
outsb
shl
daa
xchg
cmpsb
push
ret
jne
pop
shll
adc
cmpsb
lds
mov
sbb
sub
dec
dec
repnz
nop
and
mov
stc
inc
mov
sbb
mov
mov
lods
cmp
decl
rcrb
add
push
cld
div
xor
xchg
or
pop
jbe
adc
xor
mov
daa
add
inc
pop
in
mov
jnp
mov
and
loopne
ss
mov
or
popf
sti
adc
pop
inc
call
xchg
adc
orb
xor
mov
push
bound
aaa
inc
shlb
cs
clc
lods
in
sbb
push
rolb
xor
ds
cmpsl
inc
jmp
loop
xor
jge
aad
cld
sbb
mov
and
adc
mov
pop
push
popa
jmp
mov
push
repz
xor
xlat
aad
or
hlt
pop
mov
adc
rol
stos
test
jl
ja
cmp
movsb
xor
mov
int3
xchg
cmpsb
out
aam
outsb
lock
xchg
add
pop
scas
xchg
loopne
js
sub
inc
incb
xor
mov
bound
sti
pop
movl
sub
push
inc
adc
imul
gs
xchg
in
push
scas
mov
pop
mov
jno
mov
or
test
les
xor
mov
sbb
ficomps
jl
sub
adc
mov
sbb
push
data16
and
xchg
push
popa
adc
cmp
xchg
andb
pop
mov
sbbl
int3
je
pop
fidivrl
mov
xchg
inc
movsl
movsl
cmp
pop
push
test
xchg
mov
cld
test
add
sbb
into
cmpsb
loopne
xor
inc
sbb
pop
sub
inc
adc
out
orb
jp
aam
jae
fsubrl
sbb
jne
dec
inc
inc
imul
movsb
pop
ja
push
sub
jne
and
lock
mov
imul
rclb
aaa
and
test
std
push
push
mov
inc
les
pop
mov
cmp
imul
cli
sti
sub
xchg
insb
mov
out
out
dec
fs
inc
test
mov
daa
jno
shll
inc
jno
movsl
or
mov
cmp
jo
mov
std
sarl
fcoms
psubsb
lret
adcl
jbe
cmp
and
data16
mov
int3
mov
mov
fwait
cli
mov
cmp
movsl
rcr
cmp
mov
loopne
loop
fisttpl
cmp
fstps
mov
push
mov
jae
pop
pop
xchg
mov
pushf
rep
shll
sbb
add
jno
aad
sub
enter
pop
adc
lret
or
sub
add
orb
mov
imul
mov
xor
jno
dec
push
adc
xchg
shlb
mov
sub
cld
out
test
push
jg
arpl
repnz
mov
pop
out
adc
out
inc
shrb
xchg
test
shrb
push
and
loop
outsl
add
jb
mov
fdiv
sbb
out
scas
outsl
cmp
jecxz
jecxz
cmp
mov
pop
mov
jecxz
and
sub
xlat
pop
mov
rclb
lret
lock
push
ss
or
lahf
fcoms
out
sub
push
xchg
mov
mov
mov
dec
mov
rorb
test
inc
nop
bsr
push
dec
pusha
mov
jmp
das
dec
enter
pop
lea
stos
sbb
subl
cmp
shll
jge
outsb
fdivrl
pop
mov
jecxz
lret
int3
sub
out
pop
idivl
lahf
mov
in
in
decb
push
xor
xlat
xchg
adc
enter
sbb
in
mov
dec
mov
xchg
aam
cmpsl
pop
mov
insb
mov
pop
xor
aam
loopne
jl
or
std
sub
fwait
add
hlt
and
andl
sub
movl
jecxz
cli
lea
pop
push
jmp
stc
adc
in
adc
fbld
sbb
ja
js
cmp
inc
mov
out
add
inc
imul
mov
pop
jnp
rcr
jbe
sub
daa
cmpsl
pop
jb
rsqrtps
imul
lahf
push
mov
sbb
jo
add
arpl
test
scas
lock
push
stc
insb
xchg
inc
and
mov
cld
pop
stos
sbb
xchg
sub
pusha
repnz
inc
bound
lods
jbe
xchg
mov
dec
test
into
pusha
pop
add
pop
aaa
xorl
and
ja
cltd
ss
mov
cli
insb
inc
dec
xchg
push
loopne
js
pop
ja
mov
add
xchg
jl
xchg
pop
push
call
adc
aaa
adc
stos
or
xchg
nop
fists
dec
sbb
jl
xor
int
inc
outsl
std
roll
addl
popf
lock
cmp
rcrl
ss
scas
repnz
in
pop
inc
inc
insb
outsb
add
imul
sbb
fstps
xchg
cwtl
std
adc
xlat
mov
addl
pop
add
cltd
push
popa
lods
icebp
sub
pop
stc
lea
shll
ss
test
aas
xchg
faddl
jmp
or
lea
out
mov
and
or
sbb
mov
mov
jns
mov
insl
cmc
arpl
adc
jne
lods
aam
inc
icebp
push
clc
cmpsb
mov
dec
clc
inc
imul
loope
dec
xchg
mov
js
push
movsl
jne
push
sbb
xchg
sahf
sti
mov
or
dec
lods
ss
xor
xchg
fcmovnu
push
add
push
arpl
pushf
scas
lcall
arpl
pop
roll
xchg
stc
push
jl
pop
test
es
cmp
push
lcall
cmpsb
ficoml
in
pop
push
std
mov
dec
incb
icebp
call
sti
sbb
xchg
rcl
jbe
int
dec
sub
jge
push
shlb
pop
repnz
jb
or
push
adc
cld
mov
in
inc
mov
push
rorl
cwtl
fsubrp
int
and
xor
xor
and
or
in
xor
push
jmp
aas
mov
jbe
xchg
mov
jo
out
xchg
fidivrs
test
lea
add
mov
mov
add
and
fdivrs
inc
bound
bound
xchg
cmpsl
loop
movsl
jno
cwtl
lods
sbb
cmp
leave
sub
jb
push
pop
mov
lods
divl
mov
xchg
and
in
jbe
fsubrl
mov
fldl
mov
out
int
mov
ss
push
jg
sahf
das
icebp
aad
int3
adcl
inc
xor
cmp
adc
xlat
sahf
push
sahf
pop
or
mov
sub
mov
push
jb
sub
sbb
arpl
push
imull
jl
cmp
cli
inc
call
add
xor
ret
pop
add
inc
xor
push
dec
enter
ljmp
je
inc
aaa
add
mov
adc
into
das
push
js
pop
notb
and
jg
imul
mov
outsl
pop
dec
lcall
xchg
das
scas
es
and
loopne
sahf
pushf
sub
js
outsl
mov
ljmp
in
cmp
daa
pop
adcl
out
ffreep
cltd
sbb
fadds
inc
es
mov
push
pop
js
or
pop
add
pop
loope
fsubr
out
aaa
ljmp
outsb
aam
cmp
mov
ljmp
cmp
or
pushf
xlat
sahf
mov
push
mov
pop
fisubs
movsb
int
adc
sbb
jecxz
push
xchg
pushf
les
and
syscall
int3
and
in
imul
adc
dec
xchg
jb
pop
add
cwtl
notl
out
mov
inc
mov
and
xchg
mov
push
cld
andl
push
jo
rolb
pop
imul
sub
mov
outsb
inc
js
or
cwtl
cltd
mov
into
test
mov
cmc
sbbb
fcmovnb
inc
and
inc
jecxz
mov
loopne
jnp
in
ja
pop
push
jo
push
pop
pop
mov
mov
scas
fsubl
lock
jae
lods
push
ffree
push
insb
jae
fsubrl
addr16
sbb
das
vmread
mov
decb
in
sbb
and
std
fidivrs
les
ljmp
fnstcw
pop
xor
sahf
jno
aad
pop
push
icebp
pop
pop
mull
and
inc
out
sti
adc
lret
push
mov
or
fiadds
outsb
xchg
or
test
idivl
cmp
xchg
ja
sarl
jle
mov
jle
mov
bound
mov
pop
push
inc
mov
mov
fcompl
push
or
data16
sbb
pop
insl
bound
ret
sbb
mov
out
loope
cmc
xchg
sub
icebp
sub
cmp
outsl
jmp
and
or
leave
icebp
inc
rcrl
cmpsl
xchg
movsb
add
ljmp
dec
add
data16
mov
sbb
jns
cli
jl
test
sbbl
add
hlt
xchg
or
pop
repz
dec
cwtl
pop
adc
mov
fistps
xor
movsl
jb
mov
jg
ret
add
shll
cli
add
in
xchg
aam
inc
lcall
mov
jbe
pop
xor
imul
push
scas
mov
and
mov
aas
test
or
xor
stos
and
xchg
mov
dec
sub
ljmp
jae
mov
lds
jb
test
push
cmpsl
and
lods
push
and
or
fisttpl
xchg
movsb
sub
xchg
dec
xor
mov
jp
mov
xchg
outsl
sbb
pop
lahf
cmp
cwtl
jbe
dec
stos
xor
mov
addr16
inc
jg
out
mov
nop
xor
inc
fs
ret
insl
pmaddwd
xor
les
cmp
mov
sbb
xchg
stos
inc
push
adc
xor
ja
fdivl
and
iret
sbb
pop
or
clc
sbb
daa
movsb
sub
jge
popa
je
fcomps
mov
sub
inc
pop
pop
mov
shrl
mov
fcoms
inc
xlat
out
xbegin
cmp
dec
loop
push
mov
mov
ret
adc
je
xchg
dec
jecxz
push
xor
and
sub
jle
daa
iret
push
cltd
pop
mov
loopne
imul
sub
jl
pushf
arpl
hlt
or
or
dec
imul
lds
xlat
sbb
imul
sbb
xor
mov
xchg
or
out
clc
inc
lcall
mov
xor
xchg
rolb
pop
lods
jecxz
test
and
fbld
push
jmp
fwait
or
je
fs
mov
push
push
pop
dec
test
push
cs
inc
sti
test
cld
call
mov
add
test
xor
loope
push
inc
push
rcll
fucomi
mov
jns
ja
jbe
fidivl
leave
sub
sbb
das
sub
adc
fstl
sub
sbb
push
push
es
jp
lods
lahf
adc
jbe
cmp
mov
repnz
ljmp
into
xor
loope
outsb
pushf
fnstsw
ret
mov
xchg
fsts
popa
pop
add
std
pop
jg
lcall
pop
fldt
fidivrl
lcall
add
lock
rorb
dec
aas
sbb
pop
xchg
out
pop
dec
cmp
in
mov
lea
movsb
in
xchg
mov
pushf
jg
pop
aam
loopne
jge
and
fidivl
stos
movsl
mov
es
dec
sub
inc
mulb
jne
push
shl
iret
jb
js
call
test
jne
int
and
cmpsl
test
outsb
adc
jmp
xchg
outsb
xor
xor
imul
mov
add
and
shld
enter
push
sbb
pop
std
push
sub
cli
pop
out
mov
subb
lea
sbb
add
out
incb
gs
or
adc
das
mov
jb
push
notb
mov
lock
out
push
into
xchg
arpl
xchg
cmp
lock
jg
movsl
or
sbb
lcall
pop
pushl
jp
jo
pop
jp,pn
cmp
and
divl
jle
push
cmpsl
jmp
enter
sbbl
inc
push
scas
bound
outsb
push
imul
push
jbe
ljmp
call
and
mov
js
das
and
pushl
sub
movsb
or
mov
push
xchg
push
xlat
movsb
xchg
in
scas
xor
enter
js
add
mov
outsb
data16
xchg
iret
jno
cmc
or
jb
arpl
sub
test
mov
repnz
adc
cmpl
add
xchg
cli
scas
loop
add
stc
stc
xor
push
or
xor
sub
push
sbb
jmp
and
clc
nop
push
mov
sub
add
add
mov
fs
lcall
mov
ftst
jp
cmp
pushf
inc
sub
aaa
cmp
dec
sbb
imul
cltd
dec
addr16
push
pop
aad
inc
mov
dec
aaa
mov
sbb
mov
loope
icebp
jns
int
pushf
sti
mov
adcb
sbb
push
sbb
jbe
mov
push
scas
mov
xor
lods
or
mov
into
jno
xchg
fdivr
sub
aad
adc
outsb
mov
pop
movsl
push
cmpsb
les
pop
sbb
into
add
cmp
push
and
leave
sub
mov
xor
and
xchg
xchg
or
mov
dec
fwait
into
leave
adc
popa
stos
dec
ss
push
cmp
movsb
aaa
add
mov
or
sbb
cltd
cmp
pop
push
loopne
or
sti
loop
pop
jo
cs
xor
xor
fucom
cmpsb
cmp
xlat
cmp
pop
in
jmp
mov
or
pop
fidivrl
xor
in
dec
xor
pop
or
or
shll
push
jl
inc
aas
daa
xor
dec
and
ret
or
and
fidivl
loop
jne
add
add
stos
mov
fldt
pop
mov
sub
xchg
dec
cmp
xchg
xchg
or
jne
aaa
lea
sbb
sbb
popa
cmc
xchg
mov
ss
mov
pop
add
das
mov
mov
int3
mov
sub
scas
aas
fisttpl
jo
loopne
mov
imul
out
jp
xchg
xchg
fsubl
or
sbb
mov
pop
aaa
jl
cltd
mov
xchg
in
adc
inc
pop
shlb
hlt
in
cld
dec
out
jg
cld
cmp
push
jg
mov
int
jmp
fwait
mov
jns
lcall
or
sbb
dec
dec
xor
bound
dec
in
gs
or
daa
jno
push
cltd
dec
inc
lods
sub
pusha
stos
inc
icebp
pop
dec
arpl
cmp
mov
insl
jnp
fidivs
inc
cmpb
pop
push
mov
jmp
lahf
lods
mov
sub
sub
orl
dec
pop
sub
rcll
fldt
push
xor
flds
ret
mov
popf
pop
notb
jno
lret
dec
lcall
int
jg
sbb
rcrb
push
pop
jmp
stos
lcall
and
xor
and
jg
enter
push
push
pop
pop
cmp
pop
fs
mov
and
inc
stos
fbld
jns
ret
sbb
pcmpeqw
and
shll
cli
cmp
je
mov
stos
jbe
stc
xchg
shl
or
dec
fwait
xorb
jo
xchg
inc
push
in
sub
or
loope
test
shll
dec
and
add
and
xchg
dec
sti
mov
lret
cli
mov
imul
mov
in
fisubs
xor
cltd
sbbl
pop
les
sbb
xchg
sarl
scas
out
aaa
mov
dec
xchg
jecxz
mov
divl
repz
jge
mov
arpl
mov
dec
cltd
loope
test
mov
ja
pop
roll
mov
cmpsl
iret
nop
fimull
xchg
or
jae
pop
mov
mov
mov
sar
sbb
aaa
repz
cmp
dec
and
iret
adc
xchg
arpl
mov
les
xchg
push
adc
das
pop
or
movsb
xchg
insl
and
arpl
sahf
jg
aam
cmp
pop
insl
call
inc
cmp
pop
dec
sbb
adc
rorb
push
rcr
cmp
dec
mov
push
cmpsl
inc
and
jns
pop
xchg
icebp
mov
leave
fcmovbe
push
jb
lret
ljmp
lods
pop
movl
pop
jl
mov
sub
adc
ljmp
insl
pop
ss
cmpsb
mov
xchg
aas
dec
and
sbb
mov
es
arpl
push
mov
popf
cmpsb
dec
xor
mov
test
sbb
xor
mov
mov
inc
clc
dec
and
ret
ss
mov
outsl
adcb
bound
inc
addr16
mov
mov
fwait
cmc
sub
xchg
xchg
pop
push
adc
inc
mov
jbe
mov
mov
out
into
xchg
cmp
add
std
cmp
shlb
jecxz
jnp
cmp
fldcw
and
dec
and
sub
test
mov
pop
pop
aad
cs
lods
outsb
add
sbb
rep
xchg
into
xchg
les
dec
jmp
imul
mov
sbb
out
mov
ja
mov
xorb
mov
movl
add
jmp
clc
sub
or
ds
dec
add
aaa
mov
jno
pushw
xor
lea
lds
ss
ret
dec
push
sbb
jecxz
xchg
fstl
test
arpl
push
lret
popa
sub
iret
adc
sbb
neg
mov
loope
add
jge
in
rcr
sahf
mov
pop
inc
ja
xor
pop
adcb
mov
cmp
rcll
pop
push
xor
nop
mov
sti
pop
lds
push
mov
pop
xor
adc
dec
fisttpll
test
fwait
aas
das
and
or
push
cmp
orl
imul
inc
cmp
insb
push
call
and
inc
xchg
cmp
testb
adc
pop
mov
test
cmp
mov
sub
mov
icebp
jmp
push
cmp
jo
roll
out
jle
sbb
cmp
ja
mov
mov
xchg
dec
mov
fwait
aam
inc
imul
icebp
not
addb
jmp
and
insb
pop
xor
pop
lock
bound
sbb
loop
nop
stc
push
add
test
cmp
xor
xlat
int3
mov
xor
rcrl
jae
inc
mov
dec
inc
repz
mov
push
pop
movsb
add
in
sub
jmp
in
dec
arpl
mov
or
push
mov
xor
aas
push
pop
fcoml
ja
enter
inc
ljmp
fs
stc
add
lea
in
ja
sub
pop
imul
ja
std
mov
cmc
pop
or
xchg
dec
push
cmc
std
cmp
jo
mov
ret
into
and
ficompl
ret
neg
inc
subl
cmpsb
repz
and
jl
jns
in
icebp
lcall
add
add
push
in
aad
pushf
aam
pop
divb
pop
xchg
orps
shlb
mov
std
shl
ds
and
test
jle
jecxz
loopne
pop
pusha
ret
pushf
pop
add
mov
clc
scas
jle
and
xlat
test
mov
cli
xorl
insb
lock
adc
adc
and
sbb
inc
fiaddl
shll
aas
xor
lcall
popa
orb
shrl
push
cmp
jnp
pop
sbb
in
popf
jo
xchg
sbb
push
xor
sbb
or
test
sbb
inc
push
add
cltd
push
rclb
ret
inc
jge
out
xor
in
outsb
adcb
mov
lcall
stos
out
fisubs
or
rcll
mov
subb
ja
fsubr
xchg
pop
cmp
packssdw
pop
lret
sahf
or
jnp
inc
aas
mov
fwait
mov
ljmp
pop
das
pop
cltd
stc
add
test
mov
fidivrs
or
inc
iret
les
in
rclb
cmpsb
stos
clc
fst
lds
inc
cmc
iret
hlt
aas
inc
ja
loope
stc
int
mov
repz
and
ljmp
ret
frstor
bsf
dec
cmp
repnz
mov
ljmp
mov
inc
or
loopne
es
cld
sub
inc
aas
jmp
pop
rcl
out
pop
insl
ret
movb
ljmp
std
cmpb
xchg
cmp
cs
sub
push
stos
lcall
and
fisubrs
adc
cli
int3
xorl
sahf
jne
jns
sbb
push
xchg
and
loop
leave
push
lds
pop
dec
cmp
out
call
add
xor
jne
or
dec
pop
push
jno
jecxz
xorb
nop
ret
mov
inc
push
or
inc
xor
jbe
fs
mov
push
sub
pop
push
cs
xor
lahf
lods
sub
aas
je
push
mov
xchg
movsl
mov
out
mov
sub
gs
jmp
fstps
das
fisubs
inc
adc
repnz
add
cmp
rolb
dec
mov
pop
ja
adc
gs
sub
insl
mov
and
push
xchg
repnz
jne
lds
xor
jge
xor
icebp
sti
dec
pop
xchg
pop
in
imul
sbb
mov
push
shll
sbb
dec
in
daa
jbe
mov
jp
jae
stc
jge
dec
sbb
mov
cli
mov
scas
lods
pop
adc
fimull
jae
shrb
fdivl
int
jecxz
ljmp
fs
movsw
push
pop
and
xchg
inc
mov
lcall
js
mov
lret
pop
push
aam
fwait
or
test
push
in
mov
stc
mov
inc
lahf
sub
jo
jno
push
jecxz
nop
and
iret
das
int
in
push
inc
jg
gs
cmp
mov
pop
pop
mov
jno
pop
mov
push
movsb
lds
out
rcrl
scas
inc
ja
sub
sub
sub
into
js,pt
mov
arpl
clc
into
in
fldt
popa
sub
adc
pop
ljmp
ss
cmp
ror
pop
jo
in
stc
out
rcrl
adc
into
pop
fstps
fstps
roll
ja
das
stos
sub
clc
cmpsb
sahf
movsl
rcll
fs
push
test
popa
cmp
mov
mov
or
ljmp
outsl
out
lcall
push
sbb
test
in
stc
cmp
mov
mov
test
adc
data16
cmpsl
jae
ret
int3
sbb
xchg
mov
aam
push
or
sbb
aas
sbb
cmp
cmp
pusha
and
cmc
incl
pop
cmpsl
fs
sub
leave
pop
xchg
or
inc
cmp
imull
dec
ja
sbb
sub
jbe
xor
icebp
lea
jbe
std
popf
sub
jge
adc
lea
cmp
repz
loop
mov
mov
sub
loopne
cmp
rorl
adc
call
xor
in
cmc
or
pcmpeqw
add
pop
fimull
cmpsb
stos
lods
lret
jg
xor
or
cs
and
and
fsubrp
subb
push
aam
ljmp
and
les
push
in
inc
mov
aaa
mov
test
sahf
lahf
adc
dec
and
lret
cmp
nop
fldl
mov
xchg
shr
movsb
popf
decl
adc
inc
sub
sbbl
addl
dec
add
subl
imul
xlat
mov
push
inc
sarb
pop
push
sti
icebp
sub
divb
or
loope
imul
fcmovnb
push
rcrl
out
pop
in
stos
mov
pop
out
sbb
adc
inc
aam
int3
xchg
out
jmp
mov
pop
daa
fdivs
in
mov
dec
cmp
das
mov
in
dec
and
xchg
mov
bound
sbb
scas
xlat
lcall
fcmovnu
cmc
push
int
cmp
sbb
push
inc
dec
push
subl
push
in
ljmp
inc
test
pop
test
loop
inc
mov
cmp
nop
adc
insl
inc
sbb
xor
test
cmp
xchg
mov
push
insl
mov
jnp
icebp
pop
in
repz
mov
cmpsl
xchg
push
call
xor
lret
rcll
push
jge
push
mov
daa
xor
push
loop
jle
mov
push
and
fnstsw
sahf
mov
fsubrs
and
rorb
xor
out
jns
push
push
pop
mov
stos
shll
data16
push
xchg
dec
push
stc
mov
jle
lods
adc
adc
or
inc
push
test
cmpsb
dec
push
and
add
xchg
inc
cmp
bound
inc
movsl
push
hlt
into
xchg
sbb
test
and
jns
idivl
jmp
and
je
cmp
pusha
pushf
inc
hlt
cwtl
push
xchg
enter
std
psrad
jmp
and
pop
rcr
mov
jo
ja
int3
sub
fucomi
jecxz
inc
push
and
sbb
cmp
dec
and
inc
push
mov
and
sub
out
stc
xor
inc
frstor
int
add
mov
int
push
jp
xor
das
std
fcomp
es
dec
mov
jl
add
xor
xor
inc
nop
and
out
dec
and
cli
pop
iret
pop
fld
popf
mov
dec
shrl
fiadds
loop
pop
movsb
jne
mov
xchg
jmp
sbb
push
enter
xor
orl
or
sub
inc
movsl
push
mov
push
jg
daa
jb
jbe
loop
int
notl
mov
fiaddl
add
xor
call
push
lret
push
aas
stos
loop
inc
fstps
ret
mov
or
or
pop
cmp
adc
icebp
pop
adcl
fs
clc
insl
imul
push
mov
add
arpl
jecxz
dec
iret
sub
hlt
pop
push
sub
cmp
mov
and
jge
pushf
mov
je
jl
test
or
mov
nop
mov
push
stc
shlb
cmp
mov
xor
mov
enter
aas
or
cmp
jns
or
xorl
dec
mov
inc
mov
dec
or
pop
mov
repz
fldt
or
mov
sbb
loope
orl
mov
jp
je
movsl
out
out
adcl
xor
jg
push
mov
popf
call
cmp
or
sarb
imul
lods
sub
jge
repnz
inc
add
fdivrl
imulb
sub
cmp
cmp
mov
fldl
add
fstpt
lds
mov
mov
and
push
add
out
push
popa
int
cmp
shlb
cwtl
dec
pop
push
addl
dec
lret
rcrl
aam
inc
fucom
xchg
jbe
clc
aas
xor
lods
lock
mov
and
inc
cmp
je
or
hlt
cmp
je
fimull
xor
outsb
cli
scas
fdivrs
sub
dec
cmp
outsb
repnz
dec
push
nop
or
inc
sub
push
addr16
loopne
cmp
call
mov
nop
xlat
cmp
or
ja
jg
pop
xor
nop
sti
sub
andb
push
inc
das
xchg
cmp
push
mov
popf
aas
sbb
call
jb
jge
pop
ljmp
dec
cmpsb
mov
shlb
loop
lcall
push
addb
xor
cmp
and
stc
test
add
fwait
popa
inc
test
sbb
lock
xor
dec
arpl
add
repnz
xlat
mov
adc
test
aaa
xchg
in
jo
mov
add
in
loope
xor
pop
cwtl
push
gs
sbbl
mov
or
or
fsub
decb
dec
dec
inc
lods
dec
jl
add
inc
xchg
movsl
push
mov
fnstcw
xchg
push
push
cmp
mov
dec
fwait
out
sbb
adc
mov
push
mov
xor
xor
bound
and
dec
xchg
xchg
add
cmp
cmp
sub
enter
psubw
ss
push
push
add
sahf
test
cmp
xlat
leave
dec
std
cmpsb
cmp
jno
push
cwtl
dec
jo
mov
jp
jbe
outsl
dec
pop
inc
out
sbb
adc
loop
aam
loopne
shlb
aas
mov
pop
add
mov
insl
mov
stc
out
das
dec
and
xchg
sub
pop
lods
push
por
mov
jnp
push
bound
sbb
cmpsb
xchg
xor
cmp
pusha
and
and
push
sbb
repz
insb
sbbl
push
sbb
add
add
mov
jge
repnz
scas
jae
sar
repnz
push
adc
sub
mov
imull
dec
ret
add
hlt
sub
sub
aaa
cmpb
jnp
pop
inc
dec
std
outsb
shll
enter
push
sub
push
sub
ss
mov
xchg
lods
je
inc
hlt
das
cmp
in
cmc
add
nop
hlt
gs
cli
lds
ja
test
roll
bound
subl
sub
insb
ret
mov
popf
jmp
cmp
call
js
add
outsl
adc
imul
test
and
cmpsb
inc
pushf
mov
cmp
pop
popf
jo
sar
adc
testl
es
inc
fcmovbe
enter
and
in
add
mov
adc
dec
and
clc
das
clc
push
pop
xor
dec
cld
dec
pop
ret
out
inc
push
fisubs
xchg
imul
fildl
inc
mov
addr16
dec
roll
sbb
stos
sbb
sahf
into
pop
xlat
mov
xor
lahf
or
mov
and
clc
add
call
inc
inc
aas
jp
fnsave
push
ds
insl
incl
pusha
or
dec
scas
lahf
dec
cmp
fimull
into
loop
loop
sub
inc
inc
cld
inc
daa
or
jb
imull
enter
ret
push
mov
pop
mov
mov
stos
add
sub
cmpsl
mov
mov
dec
call
stc
xor
mov
pop
fsubs
inc
pop
mov
push
and
arpl
cmp
mov
add
fisubrl
jne
or
adc
pushf
ret
mov
arpl
xor
pusha
sbb
movsl
and
mov
lods
mov
shrb
rorb
push
cltd
cmp
or
cmc
or
out
call
push
cmp
pusha
xor
outsb
test
es
inc
push
out
dec
cmp
push
cmp
xor
push
and
jp
cmp
jno
in
out
inc
jno
out
call
jl
rcr
mov
push
add
negl
pushf
ret
scas
xor
cmp
push
push
or
icebp
mov
dec
adc
or
xor
jbe
aad
icebp
outsb
fs
outsb
int
jp
in
lahf
mov
rolb
add
repz
jns
sbb
mulb
fwait
rcll
inc
movsb
push
cwtl
mov
sbb
rol
add
cmpsb
push
sub
lods
mov
dec
test
je
shlb
jl
push
addr16
and
adc
cmp
shrb
test
aas
push
xchg
stos
jle
movswl
adc
adcb
aas
and
dec
pop
loop
cli
ljmp
fstpl
mov
fistl
inc
lods
inc
dec
jp
cmpsb
in
loop
sbb
mov
loopne
stos
popa
scas
popa
sub
into
fcoml
jnp
inc
cmp
jl
push
addr16
dec
xchg
jb
xor
out
mov
push
insl
rcl
xor
jge
in
push
scas
in
movsb
mov
inc
mov
lahf
mov
push
cmp
lea
test
fisubrs
adc
cs
lods
xchg
jp
cmp
es
xchg
add
repnz
clc
pop
js
test
mov
aam
sbb
pop
movsl
push
mov
aad
xlat
lcall
sbb
loopne
push
add
xor
inc
lods
inc
lret
frstor
sub
or
dec
roll
cmp
mov
or
ja
dec
xchg
mov
jne
enter
aas
xor
dec
daa
repz
sbb
adc
sar
sbb
flds
stos
sub
mov
sti
mov
lcall
mov
push
mov
sub
add
jmp
jno
loope
mov
adc
and
pushf
fwait
mov
mov
add
push
test
pop
nop
fwait
pop
cmp
adc
push
or
adcl
dec
insl
fiadds
mov
das
mov
inc
out
inc
mov
mov
vmwrite
outsb
xchg
insb
xchg
adc
enter
data16
dec
dec
sub
pop
sbb
adc
js
lods
push
jbe
dec
dec
cld
in
pop
in
stos
leave
jge
enter
fnstsw
push
mov
ffreep
adc
out
insb
or
cld
les
inc
inc
scas
jge
mov
notb
mov
negl
inc
scas
dec
icebp
jmp
cmp
jp
cld
aad
xchg
and
lret
inc
cmpsb
es
pop
inc
mov
adc
or
decb
mov
aad
sbb
decl
repz
jge
inc
sbb
mov
arpl
push
push
mov
pop
mov
cmp
subl
xchg
mov
sbb
xchg
inc
sbbl
mov
decl
outsl
leave
jns
lods
int
stos
in
out
sub
shlb
stos
ss
cld
cmp
insb
aas
mov
dec
scas
sbb
push
mov
pop
fimuls
xchg
sub
into
push
and
movsl
cwtl
mov
mov
push
push
inc
or
jne
cli
inc
or
jbe
add
cltd
xchg
cmpsl
or
mov
push
mov
xor
fdivrl
mov
movsl
mov
divl
xor
js
adc
sbb
mov
adc
xchg
lods
pop
push
add
aas
fnsave
pop
out
loop
in
test
jbe
scas
jnp
mov
pop
mov
in
lods
or
cs
push
adc
js
push
mov
mov
mov
jmp
outsl
add
or
push
cmp
push
cmpb
adc
scas
mov
lea
xchg
scas
enter
and
and
jbe
mov
add
adc
leave
out
jmp
dec
jae
adc
push
cmpsl
push
fwait
adc
cmpsb
jp
movsl
stc
jo
jnp
mov
mov
fiadds
jg
insb
pop
push
les
out
mov
jb
jno
out
bnd
imull
sub
sbb
xor
sbb
mov
dec
mov
cmp
loopne
and
test
inc
jae
das
pushf
imul
sbb
xor
xor
mov
idivl
inc
push
or
pop
incb
aaa
divb
jno
jbe
cmpsl
xor
mov
adcl
movl
cmpsb
or
cltd
unpcklps
jge
lret
mov
jnp
mov
arpl
jns
or
hlt
sbb
dec
cld
cwtl
stos
scas
ret
clc
push
clc
out
js
mov
push
mov
in
clc
call
adc
mov
sbb
jae
rcrl
mov
arpl
mov
and
cmpsb
sbb
ss
lahf
lods
xlat
mov
add
cwtl
ja
sti
cli
les
mov
subb
or
dec
xchg
and
cmp
cmp
rcr
push
inc
ret
adc
jb
jno
xchg
xchg
orl
xor
sahf
fs
xchg
loop
testb
xlat
jecxz
mov
jge
jne
stc
repnz
fwait
dec
inc
mov
dec
adc
sbb
xor
dec
jecxz
push
mov
lods
sbb
or
int3
add
test
rcrl
testl
push
roll
dec
push
jns
sbb
in
mov
and
dec
loop
xchg
loop
cmc
sub
gs
repnz
inc
jmp
sarl
jbe
arpl
loop
push
clc
stos
sti
lods
popa
js
sti
icebp
inc
jle
jmp
mov
loopne
adc
aad
dec
lods
cmpsl
pop
sbb
jmp
test
pop
enter
sbb
outsb
aam
imul
lods
adc
pop
and
fdivrl
rol
mov
cmpl
dec
mov
out
lds
popa
and
mov
dec
sbb
lock
and
sub
test
adc
imul
cmp
sub
push
lret
andb
in
and
push
xor
loop
fildl
mov
jg
shll
push
inc
fldl
or
jno
sbb
jecxz
lods
lods
mov
dec
sub
mov
pop
xchg
je
add
fnsave
div
pop
push
sub
push
jmp
out
idivl
fdivp
mov
lret
sbb
in
xchg
xor
mov
loop
push
jo
stc
mov
imul
inc
or
or
or
pop
es
scas
pop
dec
sub
or
xlat
fadds
test
lahf
mov
mov
stos
aad
jmp
xchg
push
popa
mov
das
out
enter
sahf
sub
mov
fistl
mov
roll
scas
rclb
fdivp
adc
adc
repnz
dec
cmc
int3
add
and
fbld
pusha
notl
int3
jp
rorl
adc
push
inc
jl
xor
mov
icebp
aad
pop
pop
mov
sahf
fdivrs
fisubrs
loope
jle
mov
or
sub
jecxz
jg
call
lret
rol
inc
xchg
xor
fisubrs
cmp
cmp
aaa
push
pop
mov
pushf
push
xchg
mov
aas
mov
xor
xchg
jecxz
test
push
jae
loope
cmp
or
ss
lods
inc
push
ja
vprotw
dec
in
push
popa
mov
lods
sbb
fwait
cld
sub
dec
call
push
ds
xchg
ret
loope
cmc
mov
stos
scas
xchg
xlat
and
cmpsl
fnsave
mov
xchg
sbb
arpl
fstl
mov
bound
dec
inc
popa
sub
mov
ljmp
inc
mov
pusha
fsubrs
cltd
adc
xchg
inc
mov
pop
ret
fildll
push
and
jp
outsb
mov
dec
fldl
cmp
jg
cmp
cmc
mov
iret
jns
push
pop
sbb
and
xchg
loope
or
mov
daa
adc
dec
movsb
popa
mov
jb
ja
add
xor
in
dec
jne
fwait
jo
push
incl
push
mov
sub
movsb
outsl
pop
and
mov
iret
fcompl
scas
pop
xor
push
ds
pop
inc
xchg
or
scas
outsb
gs
test
mov
insl
mov
or
and
pop
stos
pop
mov
push
insb
and
imul
or
inc
arpl
and
sub
cmc
pcmpeqw
jnp
scas
sub
and
jmp
xchg
dec
jecxz
gs
mov
xchg
add
adc
mov
js
adc
lret
in
fisubs
aad
test
lcall
dec
xchg
adc
js
adc
scas
test
xchg
mov
xchg
fadds
nop
inc
sbb
es
mov
inc
dec
pxor
jg
pop
xchg
mov
std
mov
mov
mov
leave
adc
or
jo
adc
mov
pop
xchg
pop
xchg
arpl
ror
fwait
xchg
mov
push
adc
push
out
imul
inc
cmp
mov
mov
outsl
mov
div
cmp
mov
int3
add
outsl
gs
xchg
xlat
cmpsb
push
icebp
idivl
xor
mov
shlb
xor
les
rclb
in
pop
and
xor
mov
sub
stos
dec
rclb
jmp
sbb
popf
loopne
nop
xchg
mov
cmp
and
or
clc
or
sahf
insb
jne
gs
inc
push
xchg
outsl
mov
daa
push
cmp
sbb
jp
sbb
ja
rcr
jmp
aaa
enter
lock
clc
lock
pop
or
inc
jo
cwtl
test
push
stc
das
inc
xchg
pop
dec
xchg
int
repnz
insl
jae
sbb
and
jns
xchg
ja
leave
int
jo
daa
gs
push
adc
push
xchg
inc
jbe
testl
and
push
jmp
stos
cmpsl
idiv
pop
jne
and
ss
out
sbb
push
sub
insl
andb
xor
and
jae
int3
fsubp
aas
jp
out
popa
test
pusha
or
xchg
jnp
add
jg
popf
dec
cwtl
movsb
nop
push
sarl
lahf
and
sbb
dec
test
sbb
mov
movsb
sbb
shlb
xor
mov
or
mov
sbb
lea
xchg
sahf
push
cmpl
test
xchg
sub
repnz
mov
ret
push
xor
xchg
sbb
add
cmp
jno
xor
pop
sbb
jecxz
popf
rorl
inc
cmp
jae
shrl
test
pusha
jmp
insl
fsts
lods
out
dec
inc
add
fldenv
sahf
sub
or
xchg
int3
imul
gs
jne
movsl
loope
dec
xchg
sbb
xor
pop
nop
and
aam
inc
sahf
out
push
fwait
jg
push
imul
sub
lock
dec
sbb
jo
or
lret
mov
shl
repnz
adcl
insb
popf
inc
pusha
aad
add
jnp
insl
fildl
dec
sub
clc
movsl
cmpsb
lock
ljmp
mov
cmp
das
jne
into
pop
cld
loopne
test
inc
iret
pop
push
daa
insl
push
mov
rorb
cmpsl
dec
outsl
bnd
in
jmp
jmp
imul
pop
idivl
add
lods
and
movl
fldz
inc
add
add
and
mov
mov
scas
out
pop
cmp
cmp
rcrl
jnp
xchg
jmp
pop
fwait
pop
sbb
push
lods
inc
sti
out
inc
gs
inc
out
movsl
jne
in
adc
push
setae
xor
cmp
ss
xchg
ds
xor
jbe
add
mov
outsl
or
js
adc
pop
mov
or
mov
dec
or
mov
fcmovnb
cmc
bound
cmp
adc
mov
push
rclb
jg
faddl
outsl
or
mov
in
insb
mov
les
pop
or
sub
pop
mov
mov
ret
popa
add
mov
inc
notb
int
pop
fwait
lcall
ret
jmp
mov
push
imul
insb
mov
fnstenv
mov
adc
fsubs
xchg
sub
pop
ja
push
cltd
push
cli
popa
mov
cmp
xchg
inc
inc
mov
ljmp
dec
or
cwtl
mov
jae
and
sub
out
das
dec
lcall
cmp
push
sbb
ficompl
int3
cmp
xor
mov
in
push
out
cmp
cmp
in
or
jp
call
fldl
dec
push
pusha
or
sbb
sub
sbb
pop
je
dec
or
sahf
inc
cld
xchg
ja
push
xchg
js,pn
imul
fwait
cli
or
pop
xor
add
and
int3
xor
stc
cmp
repz
pop
movsl
ret
ret
loop
push
xor
xchg
cmp
push
aas
mov
jge
xor
lods
nop
pop
imul
push
popa
repz
testl
gs
lods
and
ss
adc
imul
inc
sahf
mov
mov
test
or
bound
inc
fbld
inc
notb
add
cmc
insb
insb
loope
rorb
and
and
mov
push
jo
pop
ret
xchg
stos
or
lahf
shl
jns
aas
cmpsb
cmpsb
mov
icebp
shr
mov
imull
dec
mov
xchg
fmul
adc
daa
cwtl
test
push
push
lock
push
and
push
aaa
icebp
jmp
mov
xchg
jae
push
ret
sub
mov
mov
xchg
adc
inc
mov
cmp
addb
mov
jnp
push
add
hlt
mov
ret
dec
cld
and
outsb
notb
rclb
cmpsb
xor
lods
sub
ror
inc
std
mov
or
push
out
rorl
lahf
dec
pop
sbb
repz
shlb
inc
and
xor
cmp
sbb
push
into
adc
jb
imul
jecxz
mov
xchg
nop
xchg
mov
mov
adc
stos
js
or
add
in
repnz
lods
push
aas
push
insl
xor
jnp
subb
adc
inc
xchg
and
nop
dec
ficompl
sarl
fidivrl
jnp
in
shrl
sub
idiv
pop
movsl
in
imul
bound
sbb
mov
push
movsb
push
mov
xchg
pushf
and
lods
stos
cmc
sbb
nop
pop
iret
ds
push
mov
mov
pop
in
mov
jl
iret
mov
cmp
bound
adc
mov
mov
jge
mov
jp
or
shrl
enter
lods
repnz
inc
mov
ds
mov
mov
xlat
fstl
push
mov
jbe
adcb
sbb
mov
cmp
cmp
fcmovnu
orb
scas
fmulp
or
and
arpl
cmp
add
xor
dec
arpl
call
sub
jns
jmp
imul
inc
loop
and
jg
fisttpll
mov
dec
nop
clc
inc
cmp
xor
loop
inc
cmp
xchg
xchg
cmp
test
xchg
mov
mov
fiadds
outsb
add
out
xchg
divb
popa
lock
stos
loop
jns
inc
cmp
daa
les
sbb
inc
mov
dec
loopne
int
cwtl
mov
mov
mov
add
dec
in
jb
add
imul
lret
jl
loope
mov
fiaddl
scas
pop
decb
pop
xor
jl
dec
stc
rorb
pusha
dec
push
cmp
dec
mov
ret
mov
add
sarl
mov
jbe
dec
subb
xchg
dec
loop
leave
pop
sub
stos
xor
push
pushf
repnz
das
cli
in
pop
sub
int3
mov
and
push
hlt
push
sub
aad
fcom
stc
mov
test
mov
jp
xchg
movsb
es
inc
xor
xchg
xchg
push
cmp
daa
in
pop
mov
xchg
jno
push
and
out
pop
mov
or
mov
add
pop
add
ds
adc
out
rorl
dec
mov
aad
fsubp
sarb
test
mov
ret
dec
sti
push
mov
dec
inc
inc
push
mov
sub
inc
nop
or
push
rolb
icebp
in
push
jae
addr16
sub
adc
sub
cmpsb
and
icebp
jecxz
jae
pop
inc
xchg
mov
scas
sahf
loopne
out
out
or
shr
mov
push
pop
push
out
popf
in
sahf
pop
pop
cmp
dec
push
fsubrp
sub
push
xchg
dec
add
pop
iret
cmp
add
outsb
push
xor
repnz
push
add
xor
sbb
gs
fisubrs
out
imul
shr
inc
jle
jnp
pop
lds
cltd
fldenv
int3
sahf
enter
ds
xchg
cmp
test
mov
mov
pop
test
push
pop
ja
jne
out
adc
dec
scas
cmp
adc
cmpsl
insl
or
push
dec
test
or
mov
jbe
leave
jg
ss
leave
mov
xchg
add
mov
jno
aas
pop
decl
pop
rorl
dec
cs
mov
xor
icebp
mov
iret
mov
and
fs
loope
and
cmc
das
cmpl
pop
push
xor
in
outsl
mov
cld
add
sbb
and
les
push
mov
mov
xor
in
out
testl
jmp
in
out
bswap
inc
lahf
inc
and
lahf
or
mov
push
incl
and
xchg
loop
jecxz
push
xchg
pop
jge
fisttpl
and
add
cltd
repnz
arpl
lock
or
cwtl
mov
or
popf
ds
enter
xor
scas
pop
jp
std
movsb
fistpll
adc
movsb
test
scas
out
xor
shrl
xchg
mov
pushf
lret
dec
pop
cmp
or
ret
enter
js
or
loop
mov
pop
rol
mov
ljmp
fcoms
lret
or
jp
inc
mov
adc
popf
cmpsb
add
shrb
es
shr
sub
insl
aas
movsb
imul
or
in
lret
leave
movsl
jge
xchg
or
lret
jne
movsl
jns
cltd
ja
or
psubw
dec
pop
cli
pop
cmp
aam
sahf
rorb
mov
fcmovnb
fstps
mov
adc
test
pusha
pushf
and
add
sub
loope
cmp
adcl
ret
dec
daa
push
push
push
in
aad
loope
sub
push
int
setns
mov
add
stos
imul
xor
pushf
inc
flds
fxtract
dec
aad
xorl
arpl
mov
sub
jmp
idivb
and
scas
pop
iret
dec
inc
dec
nop
inc
fmuls
insl
popfw
xor
cmpsb
int3
sbb
xchg
adc
fidivrs
lods
rcl
mov
xor
in
dec
sub
insb
jbe
jl
ss
lea
sub
mov
mov
cs
inc
int
mov
and
fmul
sahf
stos
xor
ficoms
scas
dec
repnz
dec
push
cmp
mov
sahf
jno
in
push
aas
or
test
or
mov
inc
fnstenv
or
add
jle
sub
inc
lret
lahf
in
xchg
or
push
in
hlt
add
push
popf
and
or
in
lret
aam
push
adc
push
repz
and
mov
jns
pop
aam
outsl
xchg
lcall
cld
mov
js
fadds
push
andl
aaa
push
jmp
out
loopne
movsl
je
jp
lret
mov
add
fsubrl
inc
or
sarb
adc
cmp
and
test
sub
outsl
mov
jnp
mov
jg
ret
and
repz
or
shr
negl
cmpsl
mov
push
ret
sub
jns
push
jl
pop
and
jecxz
jnp
dec
repz
jne
add
cmp
dec
dec
insl
lcall
int3
aad
add
arpl
pop
mov
mov
pusha
lcall
and
or
fisttpll
mov
push
jl
jp
insb
and
lea
shll
jmp
sub
inc
mov
call
cmpsl
push
sub
mov
mov
mov
mov
fprem
xchg
xor
cwtl
test
inc
repnz
outsl
pop
and
daa
jp
mov
test
out
inc
sub
ss
inc
sbb
xchg
inc
push
out
xchg
add
pop
push
jle
mov
sti
sbb
jnp
jg
in
jp
movsl
push
mov
jns
xor
push
sti
stc
in
mov
inc
dec
lods
mov
clc
cmp
leave
ret
in
js
aas
aad
jmp
mov
inc
sub
adc
lcall
sbb
ja
xor
imul
arpl
clc
or
mov
pushf
sbb
out
aad
adc
cmp
rcrb
jmp
jmp
xlat
xchg
xchg
jecxz
push
cmpsl
push
dec
inc
mov
cli
data16
dec
jno
out
xlat
jge
dec
fs
push
lret
and
or
out
enter
loope
hlt
cld
ret
fldt
sar
dec
and
mov
es
cmp
aas
cmp
leave
mov
shlb
in
or
out
inc
out
pop
sbb
pop
adc
out
add
aaa
popf
fistl
xor
rcll
jns
stos
fsubrs
cmp
mov
ss
scas
pop
add
test
xchg
or
les
insb
lock
dec
xchg
out
jo
jns
jg
and
sti
notb
mov
mov
jp
pop
pop
sbb
dec
sbb
sub
bound
push
lahf
sbb
xchg
popa
and
sahf
jb
cmpsl
xor
sbb
ss
iret
mov
ds
dec
scas
sbb
bound
int
jge
mulb
dec
cmp
pop
sub
test
mov
out
in
pop
movsb
or
cmp
push
mov
mov
mov
pop
sti
push
out
dec
mov
daa
sub
xchg
js
int
cmp
or
and
xchg
sbb
push
xor
push
pop
mov
adc
pusha
sub
fisubrs
arpl
jecxz
xchg
test
sbb
cli
fwait
push
and
mov
movsb
and
fisttpll
push
add
sbb
xchg
mov
enter
pop
stc
xchg
mov
sti
and
aas
inc
adc
sub
into
loopne
mov
out
jno
jns
mov
jge
in
shrb
add
sbb
add
mov
ja
jnp
pop
push
adc
popa
cmpb
pop
cli
jmp
mov
in
pop
clc
out
out
xchg
xchg
fistps
jg
call
cs
test
aas
addr16
sub
imul
dec
adc
out
aam
mov
mov
or
jp
insb
mov
push
push
movsb
sti
and
out
jbe
out
or
test
push
add
cltd
add
outsl
xlat
out
jg
jne
jle
dec
lods
ja
testb
jb
mov
mov
pop
insb
mov
mov
ret
notl
lahf
or
inc
inc
roll
mov
xor
mov
cs
jne
rorl
cmpsb
aas
stos
and
push
mov
jb
jnp
stc
push
loope
into
xchg
int3
push
xorps
das
in
sti
push
pop
mov
das
arpl
lret
rcrl
push
pop
addr16
pop
clc
fwait
outsl
scas
lock
inc
dec
and
jp
push
pop
movsl
push
xchg
nop
mov
lcall
test
pop
int
dec
scas
aad
dec
xchg
dec
mov
cltd
push
repnz
sbb
xchg
sahf
bound
shll
loop
mov
ret
shll
mov
add
push
testb
clc
dec
push
pusha
std
mov
cmp
adc
push
out
mov
pop
sbb
push
xor
rol
js
push
iret
jne
idivb
nop
in
push
andl
push
lds
in
mov
xchg
jecxz
addr16
cmp
icebp
test
dec
cmp
or
mov
xchg
inc
pop
xchg
mov
mov
inc
or
mov
into
or
ljmp
lods
push
std
cmp
sub
inc
push
sahf
xor
jecxz
rorb
mov
mov
pop
inc
je
call
or
xchg
mov
mov
or
jb
cli
and
arpl
inc
push
cmp
test
jae
xlat
sub
aad
clc
inc
pop
fistpll
out
in
int3
stos
sar
mov
aam
lods
ret
mov
mov
xchg
ss
cmpsl
mov
sarb
cmp
cli
sbb
xchg
push
stos
add
add
enter
adc
mov
mov
jp
lcall
cli
xchg
inc
aad
mov
mov
pop
aaa
in
adc
mov
repnz
testl
js
pop
push
pop
adc
into
inc
pop
insb
andl
lcall
pop
pusha
icebp
fwait
inc
shlb
into
cmp
mov
test
outsb
push
ficoms
jnp
cmc
jle
sub
cmpsl
insb
loope
push
and
push
shl
ret
adc
pop
lret
repnz
shl
sbb
and
add
mov
push
mov
jns
jbe
out
scas
clc
mov
pop
push
sub
jb
xchg
int3
arpl
inc
push
out
xchg
push
mov
pop
xor
jbe
fidivl
inc
daa
leave
add
gs
test
sahf
xchg
daa
mov
imul
outsb
arpl
ret
cs
add
add
repz
jle,pn
xchg
cld
pop
or
shr
push
mov
lds
sahf
xlat
arpl
clc
push
fsubr
popa
adc
in
lods
jno
movsl
pop
pop
pop
cltd
or
add
pusha
mov
adc
push
sbb
call
es
sub
hlt
or
jnp
out
test
mov
and
add
push
icebp
addl
inc
adc
inc
mov
dec
dec
test
and
rorl
ficomps
and
xchg
jne
mov
fldcw
mov
bound
jge
mov
in
sub
lcall
pop
jb
jl
or
test
rorl
and
lods
les
and
push
mov
jle
ss
adc
pop
cmc
push
push
call
xor
rclb
or
mov
dec
cmp
dec
mov
stc
icebp
dec
add
es
aad
cltd
dec
in
nop
mov
std
jno
add
outsb
cltd
push
lret
adc
mov
retw
inc
divl
cmp
jne
shlb
adc
lret
ret
cmp
aad
inc
daa
sbb
xchg
sbb
stos
xchg
cmpl
aaa
ss
inc
mov
lret
mov
xor
icebp
cmc
adc
fnsave
fcmove
ds
testb
add
jle
scas
adc
cwtl
out
sub
add
mov
cmpsl
stc
add
stos
js
popf
mov
xor
bound
cmp
aaa
jmp
leave
cld
adc
sbb
test
xchg
inc
inc
ljmp
and
les
stos
fcoml
out
and
enter
leave
xlat
dec
sbb
pop
mov
mov
mov
iret
adc
add
retw
fnstcw
into
rcll
cwtl
adc
das
les
out
add
in
dec
push
jle
in
icebp
add
outsb
xchg
cld
pop
ret
lds
test
stos
xor
lods
inc
aas
gs
test
hlt
pop
mov
xchg
adc
loopne
lds
xor
push
leave
les
outsl
movsb
es
test
pop
js
push
insb
xchg
adc
inc
fcoms
scas
lods
mov
mov
and
jg
fst
jne
jbe
dec
and
imul
cmp
icebp
dec
xor
aas
mov
std
and
pop
jl
inc
clc
or
push
xlat
inc
jg
movsl
bound
clc
pop
stc
aad
inc
sahf
mov
test
mov
popf
jge
scas
push
add
arpl
xor
and
mov
movsb
cmp
mov
and
inc
push
cmpsl
test
pop
dec
adc
in
sbb
notl
stc
sub
sbb
sub
inc
ljmp
mov
xchg
add
sti
gs
xor
pop
push
cmc
rclb
push
xor
xchg
or
ljmp
insb
push
lret
je
xchg
pop
push
icebp
loop
insl
lds
arpl
push
mov
test
cs
or
hlt
out
decl
out
add
inc
arpl
cmp
ljmp
in
into
outsl
inc
and
cmp
sub
shr
test
je
pop
xchg
mov
in
cmp
dec
xchg
jecxz
push
divb
stos
les
out
mov
pop
jg
jmp
inc
ja
inc
dec
mov
movsb
outsb
lods
dec
leave
or
xor
jecxz
sti
inc
jl
mov
shrl
insl
push
enter
jno
ljmp
aas
push
fwait
pop
fdivl
adc
iret
add
ret
add
pusha
mov
int3
sarb
add
stos
jae
leave
jbe
pushf
ret
shl
insb
cmp
test
xor
ja
test
shlb
xchg
xor
xchg
push
or
mov
lret
or
cli
in
loope
xchg
cmp
mov
sub
loop
adc
xchg
outsb
popa
and
add
jnp
jo
xchg
xchg
stc
push
lea
pop
outsl
mov
out
cwtl
xchg
adc
xor
pop
cmp
incl
cltd
inc
jo
push
idivl
ret
pop
loopne
lret
jnp
mov
adc
test
mov
sub
cld
stc
scas
loop
cmc
aam
inc
fcmovbe
fwait
and
lahf
adc
arpl
push
push
sbb
dec
push
imul
inc
and
and
ja
adc
cli
push
stos
arpl
ljmp
scas
cmp
movsl
lret
in
out
mov
in
pop
pop
jb
inc
or
dec
xchg
cmc
and
int
push
inc
mov
out
xchg
push
xchg
jle
in
addr16
xchg
jl
seto
out
dec
jb
sub
pop
dec
sub
cmpsb
cmp
jb
pop
inc
out
shlb
in
push
lret
jne
fsubl
iret
sub
xor
sahf
sub
dec
dec
xor
fs
sbb
dec
stc
jbe
adc
sbb
mov
jbe
insl
subb
mov
xchg
stos
xchg
pop
dec
push
mov
add
cmp
std
push
arpl
push
ret
jae
dec
push
add
sbb
int3
xor
ret
pop
fcomi
push
xchg
cwtl
and
mov
adc
mov
sub
lret
lret
mull
sub
mov
sub
fwait
in
fs
in
movsb
mov
push
addl
rcrl
std
jmp
xor
ret
or
sub
addb
push
and
push
xchg
jno
sub
cmp
pop
or
sbb
call
jbe
ja
shrl
daa
or
repz
call
lcall
das
mov
xchg
push
cmp
mov
int3
and
lret
xchg
fwait
pop
leave
cmp
adc
lods
pop
nop
ret
in
sub
gs
push
jmp
xchg
cwtl
lds
daa
adc
sbb
jo
mov
mov
sti
scas
ljmp
cmp
mov
mov
dec
icebp
adc
xchg
insb
sbb
lahf
adc
out
es
jge
into
inc
or
inc
gs
movsb
pop
xchg
dec
add
pop
jecxz
clc
sar
dec
add
repz
dec
leave
dec
sbb
push
rdtscp
push
xor
stos
stc
sub
and
imul
push
mov
dec
lcall
xor
pop
dec
std
sti
pop
adc
mov
in
lock
jle
fmul
mov
add
jb
aaa
fldcw
je
mov
popa
push
or
jp
mov
ss
jo
arpl
xor
inc
adc
in
sbb
subl
push
push
cmp
pop
sbb
jmp
fimuls
fucom
lret
sbb
outsl
mov
aaa
dec
loope
cmpb
rolb
iret
inc
jo
outsb
gs
lods
xor
outsb
mov
xchg
in
or
lret
fadd
adcl
test
inc
jl
frstpm(287
dec
cli
pop
popa
or
adc
test
sti
mov
or
rcrb
pop
cmp
cli
outsl
dec
outsb
sbb
rcr
push
ret
inc
pop
jp
stos
mov
ret
add
jne
push
lret
add
fisubl
sub
icebp
adc
sub
cmpsl
mov
stos
sbb
mov
push
lods
sub
adc
mov
mov
add
sbb
movsl
out
fucomp
jbe
in
cs
test
jecxz
sub
hlt
flds
add
adc
cmp
xor
inc
in
roll
lock
stc
mov
jne
pop
test
and
shrb
mov
ljmp
clc
and
cmc
and
dec
ret
cmp
pop
pop
dec
mov
adc
xor
adc
rol
pop
cmp
jecxz
iret
in
into
in
sbb
fldt
add
pop
mov
jp
pop
sbb
mov
movsb
xchg
mov
or
and
jmp
ja
ret
das
mov
mov
in
std
data16
push
cmpb
stos
and
inc
test
dec
paddd
xor
adc
divl
clc
xchg
shrl
adc
jecxz
and
mov
pop
test
and
dec
inc
cmp
mov
jl
push
mov
pop
lret
adc
mov
pop
mov
lret
aam
dec
popa
mov
cmpsb
lock
jae
in
cmp
mov
bound
xor
pop
jle
adc
or
xchg
add
or
sbb
sub
imul
inc
dec
push
std
pop
das
lret
shr
fsubp
push
add
sbb
jnp
daa
jp
sub
lcall
pop
lahf
dec
mov
cmp
sarb
dec
cmp
aad
sub
jns
or
mov
pop
lods
roll
ret
push
adcb
sbb
jo
dec
pop
arpl
push
jecxz
pop
leave
sub
add
jne
push
jns
xorb
mov
jbe
stos
fisttps
sar
in
mov
daa
add
or
pop
jbe
out
adc
clc
ja
mov
sbb
sub
lods
inc
arpl
movsb
sar
call
xchg
frstor
or
test
jle
js
jp
mov
xchg
lds
daa
aam
ljmp
bound
sub
inc
mov
push
mov
or
dec
push
ret
jae
addr16
add
xor
mov
push
sbb
clc
mov
dec
xor
fdivl
iret
sub
scas
xchg
pop
sahf
jp
sub
movsl
and
jns
outsl
mov
dec
ffreep
lahf
mov
mov
mov
push
dec
cmpsb
add
xchg
negl
aam
loope
mov
xchg
jbe
popf
insl
push
pop
add
pop
fdiv
cld
mov
rsm
nop
sub
xchg
movsl
push
add
stos
or
dec
jecxz
lret
iret
sbb
mov
jbe
cmpsl
xor
inc
dec
jmp
dec
push
mov
add
and
filds
bswap
jg
mov
or
xor
lahf
out
inc
xchg
adc
push
push
daa
mov
cmp
dec
sub
cmp
jle
stos
cmpsl
and
adcb
jecxz
stc
xor
jg
movsb
bnd
jl
test
daa
stc
adc
or
in
sub
mov
idivl
xor
push
inc
cli
mov
jb
int3
push
inc
out
int3
xor
adc
add
lahf
test
mov
cmp
mov
push
add
and
xor
xor
ljmp
mov
in
push
data16
inc
lods
aaa
cmc
inc
cmp
cmp
lods
sbb
outsl
shrb
inc
xchg
jb
pop
jbe
in
faddl
cltd
mov
cmpsl
cmp
inc
out
or
sbb
push
push
gs
mov
jbe
imul
je
imul
xchg
pop
push
fstp
ja
push
and
and
add
mov
sbb
lods
clc
add
nop
cmpb
and
add
add
pop
mov
mov
cmp
push
jl
sbb
or
fldlg2
jle
and
icebp
fstpl
mov
aam
cmc
popf
out
aad
lret
pop
lahf
dec
xor
push
push
test
cmpb
cmp
daa
in
shl
aas
dec
cs
mov
dec
fs
in
ds
pop
lret
xchg
jno
movsb
xorb
out
fwait
cmc
xor
sbb
mov
sbb
push
push
and
scas
inc
iret
or
int
xchg
jne
fldcw
mov
lahf
lcall
ss
sbb
addl
test
adc
mov
push
xchg
dec
xchg
sub
loope
int
cmp
sbb
and
xor
xchg
test
sub
adc
sbb
cmp
rclb
mov
ficompl
add
jae
cltd
out
repz
pop
out
xor
cmpb
jmp
xchg
lahf
lods
mov
dec
mov
adc
jg
or
loope
push
sbbb
out
mov
dec
xor
into
rcrl
jae
sbb
mull
fistps
sarl
es
roll
lcall
sub
mov
cmpsl
std
cmpsl
cmp
imul
ret
sbb
fdivl
scas
fnstenv
movsl
and
jge
mov
add
xchg
jo
inc
sti
mov
dec
enter
add
dec
clc
xor
mov
add
mov
mov
mov
rorl
mov
test
call
jg
test
ret
cmc
and
xchg
movsl
iret
xor
add
cmp
iret
gs
mov
imul
mov
xchg
andl
aas
mov
fistps
jle
xchg
ret
ds
xchg
nop
sbb
out
mov
shlb
cltd
test
stos
inc
in
mov
xchg
std
push
icebp
jne
xor
mov
pop
or
jge
jns
imul
pop
fisubrl
fs
lods
arpl
mov
adc
rclb
in
dec
and
mov
rorl
enter
pop
popa
jbe
xchg
mov
push
sub
xchg
push
xor
sub
push
icebp
mov
es
mov
xchg
adc
popa
pushf
and
mov
stos
push
insl
pop
jl
stos
movsb
mov
mov
mov
iret
dec
mov
mov
out
dec
add
pop
jp
cmpsb
loope
inc
add
and
cmp
out
jp,pt
and
stc
fidivrs
jl
pop
sub
into
pop
mov
mov
nop
add
jne
dec
sbb
nop
add
loopne
aad
xchg
jmp
cmp
popf
and
or
add
in
hlt
fs
test
push
adc
mov
jl
rolb
add
pop
mov
adc
sbb
lahf
imul
xchg
out
pop
sub
cmpsb
shl
mov
in
or
mov
movsb
xchg
pop
or
jp
imul
inc
fst
jg
stos
loopne
cmp
pop
mov
iret
xor
mov
imul
push
scas
jnp
cmp
and
xor
adc
sti
adc
and
mov
mov
das
sub
lret
inc
jmp
jp
jl
cmpsl
arpl
insl
cmp
sahf
and
fbld
push
cmc
loop
jne
xchg
xor
outsb
and
add
lret
call
roll
add
popf
aaa
scas
mov
push
aad
inc
fiaddl
rol
pop
sub
std
movsl
dec
clc
shrl
mov
shrl
xor
xchg
xchg
insl
int3
and
mov
mov
in
inc
addr16
je
icebp
push
cs
cli
out
stc
std
jl
dec
addb
jecxz
inc
ljmp
sahf
jo
jl
in
enter
shll
xchg
mov
cmpsl
js
in
loope
ret
test
cmp
popl
imul
push
mov
cmp
mov
adc
out
out
repz
sti
adc
mov
ret
orl
push
inc
aaa
enter
mov
mov
cmpsl
insl
arpl
test
fldenv
ljmp
stos
cmp
lods
add
ret
adc
mov
pop
cltd
and
scas
cltd
shl
scas
insb
inc
mov
add
test
mov
mov
loopne
sub
arpl
loope
out
push
movsb
or
mov
out
fcmovne
sar
or
or
sub
cmpsb
shll
fisttpl
push
sub
mov
fsubl
jbe
arpl
dec
cmp
movsl
ud2
jle
lods
aas
mov
pop
lgs
pop
loope
push
jp
mov
jns
rol
mov
dec
mov
and
and
sub
push
sti
ss
aaa
leave
jp
ror
test
addr16
sti
or
jp
adc
jbe
dec
scas
adc
rolb
push
in
ret
movsl
xchg
lahf
stos
adc
xor
inc
mov
sub
xchg
sbb
cmp
mov
loopne
sarl
sbb
mov
bound
push
and
inc
imul
mov
and
shr
cli
add
mov
sbb
mov
imul
sub
xor
and
xor
leave
popf
fldcw
and
jle
lret
inc
inc
mov
bound
sbb
adc
mov
jnp
xchg
mov
push
and
push
sbb
or
xchg
dec
push
out
push
in
mov
mov
test
int
mov
adc
push
stos
lret
jns
int
dec
lret
xchg
mov
jne
js
and
addr16
btcl
lds
clc
push
add
fs
jno
rcll
enter
out
add
or
push
arpl
push
lds
sbb
push
push
push
jecxz
ss
lock
push
pop
das
adc
mov
sub
jecxz
mov
pop
loopne
dec
out
xchg
dec
mov
cmp
fwait
popa
cltd
sbb
das
lret
jp
loope
jmp
push
mov
pop
mov
aas
les
addl
xor
xor
stos
mov
push
add
cld
adc
fcomps
ds
ja
xchg
cmp
inc
aas
pop
lcall
cmpsb
insb
lock
incl
call
ret
dec
ret
xchg
loope
push
bound
test
xor
scas
push
stos
or
xchg
lcall
lahf
pop
sub
sbb
cltd
sbb
pop
jo
push
xor
scas
jb
ret
rcll
popf
jne
inc
inc
pushf
stos
in
mov
fwait
xchg
mov
test
xor
std
into
imul
jle
xlat
sub
movsl
imul
and
add
mov
shll
pop
xchg
outsb
in
cli
shlb
push
mov
outsb
sbb
repz
inc
push
call
xchg
xorl
into
adc
add
lahf
mov
cmp
loopne
fimull
pushf
mov
jle
shl
das
imul
sub
mov
int
adc
jnp
icebp
lods
xchg
mov
ffree
inc
mov
pop
jecxz
cmp
and
jp
jl
xchg
pop
mov
pushf
pusha
ficomps
mov
inc
and
mov
lahf
mov
ja
xchg
push
test
fcmovne
sbb
add
das
mov
in
pop
and
stos
push
xchg
popa
push
test
iret
mov
call
flds
sarb
adc
out
and
mov
clc
push
popf
loopne
sarl
mov
push
pop
in
cmpsb
lods
js
dec
jbe
xor
adc
sub
sbb
shl
or
in
mov
test
push
rcrl
ret
mov
andb
and
jge
dec
dec
dec
xor
shll
mov
jb
jg
fimuls
lods
sbb
mov
mov
es
jecxz
imul
test
jns
arpl
mov
repz
inc
xor
mov
test
lret
push
inc
sahf
enter
xlat
negl
fwait
jae
adc
push
clc
in
lea
sahf
pop
dec
shr
sbb
mov
mov
mov
or
es
fcmovb
push
stos
mov
ds
xor
and
pop
push
out
jp
loope
mov
mov
xchg
push
add
cmpsl
rorl
sahf
jmp
push
stos
fwait
mov
mov
popa
adc
popa
xor
jne
out
add
enter
fnstsw
inc
into
sub
push
out
arpl
xor
cmp
in
and
adc
mov
dec
add
jb
fcomps
cmp
jge
loop
cwtl
pop
mov
movsb
cmp
icebp
addl
lcall
lahf
sbb
xchg
sbb
jbe
imul
dec
xchg
insl
loop
test
mov
loope
adc
or
jno
rorb
mov
dec
call
stos
lret
rcrb
cmpsb
js
js
dec
pusha
insl
fnstcw
pop
jp
jecxz
mov
fwait
and
or
rcr
sub
adc
test
and
notb
xchg
cmc
and
push
or
xor
mov
ficoml
cmpb
fisubrs
sbb
jg
inc
cmpl
and
repz
cmp
cld
rol
shlb
ds
cmpsl
or
xor
nop
movsl
inc
adc
incl
sub
mov
stos
mov
or
xchg
std
sahf
ja
or
repnz
movsb
xchg
lret
iret
clc
cld
sub
mov
dec
addr16
gs
into
xor
in
inc
out
push
push
jge
stc
enter
in
imul
lret
mov
or
pusha
shr
adc
cwtl
cwtl
cmp
addr16
push
lock
jl
push
cwtl
mov
fld
sti
into
in
jbe
adc
add
xchg
push
cmpsb
push
sub
mov
iret
loope
adc
jne
mov
jg
cmpsl
jns
lods
hlt
adc
xor
jb
vunpcklpd
xchg
test
add
lret
inc
mov
mov
xchg
out
gs
jge
shr
mov
adc
imul
cwtl
fsubrl
mov
jmp
mov
lea
js
sarl
fidivrl
sbb
lock
test
stos
adc
sbb
and
insb
aaa
hlt
into
cmp
out
mov
imul
sbb
jle
dec
cmpsl
inc
rorl
push
push
in
leave
mov
scas
shll
sbb
jle
push
cwtl
push
das
dec
es
push
arpl
cli
mov
sub
into
stc
mov
and
jl
fisttps
ljmp
js
std
movsb
adc
stc
mov
dec
insl
fcoml
jg
push
push
test
adc
xchg
xchg
mov
mov
mov
rorl
mov
inc
xor
shl
sbb
shlb
jo
test
call
lock
pop
mov
push
or
pop
jbe
ficomps
scas
jbe
sbb
sub
scas
push
mov
adc
cltd
popa
push
test
mov
sarb
fs
ds
mov
xchg
adc
aaa
and
mov
sbb
mov
pop
mov
mov
jp
iret
sub
push
cwtl
sahf
ljmp
xchg
jg
cs
or
mov
mov
mov
sub
inc
aam
lock
int3
insb
orb
sbb
paddsw
xor
ret
dec
push
xchg
or
sahf
add
imul
lret
adc
loopne
dec
call
mov
std
movsl
repz
hlt
push
inc
cmp
jle
push
jbe
sahf
fiaddl
les
test
mov
adc
xchg
xchg
insb
cmp
aad
mov
bnd
shrl
popl
fisubrl
aas
push
mov
push
aaa
dec
cmp
xchg
pop
sbb
adc
int3
xor
lcall
ljmp
jbe
adc
adc
xor
inc
addr16
dec
push
aam
scas
sub
mov
std
xor
repnz
xor
mov
jle
mov
or
dec
add
xchg
mov
aam
xchg
stos
adc
jmp
dec
ds
imul
or
std
jns
sub
pop
lret
std
in
or
jns
addr16
divb
pop
aas
sub
xchg
add
les
imul
and
jmp
dec
xchg
inc
add
ja
sar
add
fwait
jbe
mov
jne
lds
sub
cli
mov
cmpsb
loop
mov
push
add
inc
pop
dec
pop
sub
sbbb
or
xchg
stos
fs
cmp
cmpsb
int
cmpsl
adc
hlt
cmp
push
push
pop
call
xchg
int3
push
jg
or
xor
cmp
jmp
rolb
dec
mov
arpl
loop
in
add
mov
mov
std
fsub
and
test
aad
mov
jmp
ljmp
add
test
mov
push
sub
mov
in
lds
les
int
cld
stos
sub
xchg
int
or
sub
aaa
inc
dec
mov
mov
mov
subb
sub
or
fiaddl
push
lock
xchg
push
inc
out
cmp
and
push
inc
add
insb
sbb
pop
xchg
cli
and
jl
hlt
mov
pusha
adc
cmp
and
je
pop
add
jecxz
aas
cmp
fisttpll
ret
orb
xor
in
into
fnstsw
lahf
add
rorl
and
pop
into
jl
insl
cmpsb
aam
loopne
daa
push
add
jnp
fistl
or
mov
jnp
xchg
sbb
mov
cs
jp
pop
xchg
pop
jmp
test
into
aas
adc
test
mov
fimull
lahf
dec
addl
mov
pusha
ds
and
jnp
xor
push
adc
jae
out
jbe
or
js
cmc
xor
stos
les
pop
mov
push
mov
fwait
ret
inc
jbe
push
jmp
ja
mov
roll
pop
sub
dec
es
xchg
loop
andb
or
movsb
hlt
lds
stos
mov
mov
adc
push
sbb
pop
fsubrp
daa
stos
ja
addb
push
mov
cld
ja,pt
imulb
cmp
mov
xchg
popf
add
outsl
and
ss
cmp
sbb
stos
jmp
test
mov
adc
in
jae
pop
sub
pop
mov
sub
mov
add
lret
mov
cltd
xor
sub
cmp
push
pushf
pop
add
mov
leave
dec
jbe
leave
inc
out
jle
jmp
push
bound
ret
adcl
lret
and
popa
xor
mov
mov
add
ret
mov
or
pop
pop
fbstp
dec
cmp
lods
leave
xchg
fisubl
inc
sub
shll
mov
ficomps
dec
jle
pop
xor
cli
xchg
test
jp
jg
inc
divl
mov
fcmovb
aam
mov
roll
jb
push
push
and
sub
test
daa
clc
popa
and
incb
dec
cltd
dec
jmp
sbb
and
inc
cli
mov
ds
clc
sub
or
fcoml
sub
dec
insl
lret
add
in
cmpsb
cltd
pop
mov
aad
or
xchg
test
pusha
fists
orb
in
fs
je
sub
ss
or
and
rcll
add
pop
dec
lock
mov
sbb
hlt
pop
sub
pushf
lret
xchg
mov
test
mov
fucomp
popa
mulb
pop
jae
push
push
mov
mov
inc
out
mov
jmp
mov
je
pusha
lcall
xor
out
or
cld
pusha
mov
imul
call
push
inc
xor
jno
push
mov
xchg
cwtl
pop
sbb
cmpsl
loopne
inc
cmpsl
and
jne
packuswb
in
cld
adc
pop
cld
push
test
push
in
int3
mov
fistl
repz
addr16
pop
adc
or
or
pop
dec
xor
iret
fldl
sub
popa
popa
sub
cli
jb
testb
and
hlt
push
inc
cli
pop
lahf
xor
dec
and
jg
lahf
mov
fldln2
push
lods
push
leave
and
push
sub
sbb
xchg
imul
jge
xorl
les
inc
shll
push
sbb
in
sti
push
repnz
ud0
and
mov
xchg
push
cltd
cltd
jmp
pop
lahf
cmp
add
in
sbb
sbb
mov
sbb
jno
out
lret
out
inc
addl
or
fcmovbe
lret
mov
je
movsb
adc
in
repz
or
xchg
sbb
cmc
cmp
jle
scas
sub
test
sub
jne
xor
test
push
or
iret
push
and
sahf
mov
jno
stc
adc
shlb
xchg
stos
pusha
fcmovnb
cmp
ljmp
inc
sar
int3
pop
cmp
test
xchg
fnstsw
push
xor
out
hlt
add
lds
testb
insl
adc
ljmp
adc
daa
enter
fsubl
or
and
xchg
jo
jge
les
bound
xchg
or
cli
jne
mov
cltd
adc
addl
subl
jmp
and
out
pop
sub
mov
lret
xchg
outsb
jae
pop
popf
sub
mulb
into
cmp
mov
cmpsb
orl
cmp
fildl
lret
mov
xor
pop
jae
push
or
fisttpl
adc
mov
orb
and
arpl
jae
fidivl
sub
mov
cmpsl
test
test
or
push
cmp
ficompl
inc
aam
enter
or
data16
push
sbb
mov
mov
push
cmp
sbbb
pop
in
movsl
cli
out
xchg
jbe
mov
pop
clc
loope
pop
nop
mov
mov
xor
push
and
push
inc
add
std
fwait
mov
mov
sarb
mov
and
es
mov
or
jns
sbb
popa
xchg
push
cmpsb
cltd
push
pop
xor
aas
add
shrl
int
adc
lret
mov
je
lea
popf
cmp
bt
inc
push
pop
sbb
xor
stos
lret
mov
lock
sbb
pop
loop
pop
add
lcall
enter
sub
xor
fcoml
ret
lods
add
mov
ret
sub
adcb
mov
rclb
das
lods
mov
jg
rcrb
pushf
fstpt
enter
decb
cmp
sbbl
or
movb
cmp
ljmp
ficomps
fs
mov
push
loope
sti
pop
pop
adc
mov
fcompl
sbb
outsl
loopne
in
es
mov
shrb
insb
jle
je
imul
mov
int3
out
gs
jle
add
pop
add
mov
or
inc
lea
std
cmpsb
mov
push
ljmp
jbe
idivl
clc
mov
sub
xor
lahf
mov
fxch
inc
subl
rcr
jns
or
mov
cs
inc
sub
jp
sub
mov
lds
mov
cli
push
call
mov
cwtl
lret
insb
jae
aas
add
dec
mov
hlt
dec
jbe
test
int
mov
xor
ficomps
mov
jo
shlb
loope
ljmp
or
shll
test
jmp
sti
jnp
rcrb
pop
lods
and
cs
sbb
out
daa
add
mov
sbb
xor
in
mov
xor
lea
inc
sbb
repz
xchg
repz
cmp
mov
ja
fs
popf
dec
sbb
xchg
cs
push
psadbw
pop
xor
mov
inc
loop
pushf
jne
imul
fsubl
loopne
sub
jae
insl
fstpt
dec
dec
mov
je
adc
scas
cmc
and
dec
xor
gs
aaa
and
xor
in
xor
inc
fwait
push
mulb
or
jl
imul
push
test
test
mov
fmuls
fnstcw
mov
cmp
cs
adc
mov
imul
and
or
inc
fldl
push
pop
mov
add
add
sbb
pop
cltd
mov
lock
aaa
pusha
ret
mov
add
lods
movsb
push
push
cmp
push
add
pop
ror
fidivl
jle
inc
ud0
jg
fidivrs
lcall
jnp
cltd
pop
insl
je
scas
or
adc
pop
push
mov
data16
out
jo
test
je
mov
mov
and
mov
cmc
stos
xchg
out
in
push
js
fisubl
jp
mov
jmp
jne
bound
insb
loop
mov
rorb
or
shll
push
dec
inc
daa
mov
jp
sub
dec
xchg
inc
stos
subl
test
cmp
sbb
cmp
hlt
mov
fdivs
jp
addb
jo
xchg
mov
jae
and
push
cwtl
cs
push
rclb
daa
mov
ljmp
dec
jmp
inc
mov
inc
call
sub
mov
rcrb
and
les
inc
in
movsl
and
mov
or
rcrl
std
icebp
dec
adc
sti
repnz
test
ficomps
aad
je
adc
xor
add
test
mov
push
mov
add
mov
jns
mov
mov
jae
jecxz
push
sbb
mov
pop
pop
out
les
push
dec
out
mov
mov
xchg
in
inc
adc
sub
mov
dec
add
stos
ror
push
xor
jle
adc
cld
mov
cmpsl
push
adc
mov
lahf
dec
hlt
andb
fnclex
dec
pop
mov
rcrb
sbb
call
cmp
inc
mov
pop
cltd
rclb
add
data16
sub
insb
sbb
dec
push
dec
xor
decl
push
dec
add
fnstcw
cmp
and
push
or
cwtl
jp
xor
xchg
out
mov
inc
sbb
push
pop
mov
out
mov
mov
dec
lret
adc
jg
push
mov
popf
xchg
lret
sti
bound
je
cmc
or
sub
jle
mov
xchg
push
je
movsl
inc
jae
pushf
shl
mov
pop
sti
jge,pt
push
movsb
pop
mov
pop
stos
jnp
or
jnp
sbb
pop
pop
mov
adc
stos
mov
lret
xor
jns
mov
pushf
lods
adc
push
stc
cmp
sbb
lahf
and
insb
mov
add
loop
jg
fmuls
int3
xor
jae
fistl
arpl
pop
mov
push
dec
xchg
fstpt
insb
and
cmp
aam
rcr
and
push
loopne
xorl
sub
in
imul
jge
push
mov
xchg
cmp
and
push
inc
fwait
dec
and
inc
pop
xchg
inc
cmpsb
or
or
push
clc
cmpsl
push
inc
mov
pop
inc
sub
icebp
les
and
lahf
xchg
sub
mov
or
push
xchg
ret
addr16
mov
add
jns
fimuls
lahf
jg
fwait
jge
jge
and
lahf
push
push
push
insb
test
xchg
xor
xor
jecxz
imul
pop
jae
add
mov
psubsb
shl
loope
add
pop
jne
fcmovb
fs
push
push
jg
mov
inc
push
outsl
pop
jle
xor
jae
sub
ss
mov
jmp
and
fimull
inc
ja
stos
xor
sub
adc
fisttpll
pop
mov
ret
xor
aaa
pop
cwtl
inc
push
data16
stos
mov
adc
ret
xchg
or
inc
inc
fnsave
je
jl
dec
lock
cltd
cmp
sub
mov
xor
lds
imul
mov
xchg
jl
jecxz
enter
push
mov
sbb
mov
jge
pop
imul
and
inc
mov
mov
adc
jp
fcomps
out
and
cmpsl
sarb
sub
jl
ret
sub
mov
inc
inc
adc
xor
and
std
data16
lahf
lret
inc
jae
dec
push
jmp
insl
sti
pop
jnp
push
pop
inc
rclb
xor
dec
test
arpl
popa
mov
jg
loopne
sbb
in
fdivs
bound
leave
pop
fmuls
divl
je
frstpm(287
leave
add
mov
or
ljmp
adc
orl
jae
clc
cmp
mov
dec
cmp
push
ror
pop
xor
ss
jge
testl
in
jnp
xchg
jns
and
mov
push
jo
jnp
xor
or
adc
cmp
pop
inc
into
xlat
popa
mov
lods
mov
push
add
arpl
xchg
and
mov
mov
in
lret
or
add
lds
add
jecxz
aad
fldt
scas
sbb
addr16
cwtl
cmp
and
test
pop
add
xor
mov
mov
jae
add
jmp
jg
loopne
jae
aad
pushf
pusha
add
jno
loopne
adc
pop
mov
add
inc
lcall
fistpl
mov
lahf
das
mov
rorl
lods
push
push
or
rclb
int3
or
icebp
fdivs
inc
pusha
push
imul
jg
shrb
aad
mov
mov
data16
jbe
inc
ja
fdivl
ds
repnz
push
xor
or
push
pusha
int
mov
dec
bound
sub
inc
mov
je
mov
adc
stc
jmp
add
xor
mov
mov
xor
movsl
rcrl
jo
push
mov
dec
adc
sbbb
idivb
push
cmpsl
dec
iret
xchg
into
outsb
in
push
dec
int
sub
insl
push
int
ret
add
mov
add
rcl
pop
test
mov
mov
mov
mov
push
popf
mov
stos
add
sub
movsb
aam
xchg
sub
add
dec
out
sub
dec
in
push
pop
xchg
jns
iret
inc
xchg
repz
dec
call
and
and
std
rcl
jecxz
jno
mov
into
mov
inc
xlat
push
rcl
orl
nop
out
jnp
jbe
mov
jmp
cld
iret
sub
push
fprem1
outsl
rcr
cmp
cmp
push
push
jae
inc
push
movsl
add
xor
and
insb
je
outsb
pop
sbb
movsl
fstps
or
ss
cmc
out
int
xlat
xor
sbb
dec
inc
mov
imul
lret
out
in
cwtl
inc
int
out
xchg
jmp
imul
clc
insl
addps
inc
rol
in
mov
aam
rol
sub
pushf
mov
mov
les
rorb
jmp
mov
jg
sti
xor
xlat
stos
cmc
insl
insb
pop
cmp
and
sbb
or
aam
mov
mov
imul
lock
repz
add
stc
lock
push
inc
clc
inc
xor
outsb
sub
pop
outsl
jno
dec
test
add
pop
fidivl
jecxz
nop
pop
negl
xor
daa
mov
xor
mov
addr16
pop
xchg
cs
xor
scas
and
andb
ja
mov
leave
aaa
subb
xor
addr16
fdivrp
fdivrs
xlat
inc
sub
mov
push
jge
xor
in
mov
leave
push
ja
dec
mov
xchg
mov
repz
fstl
mov
rolb
push
aas
adc
add
movsl
orl
loope
inc
jp
aas
jae
sub
inc
xchg
cwtl
gs
mov
xor
ret
cmp
pop
and
ds
arpl
mov
jmp
insl
repz
dec
pop
addr16
sbb
add
ss
push
sbb
mov
xchg
mov
dec
test
pop
mov
fisttps
shrl
aas
fldenv
test
cmp
popf
imul
cmp
cmp
cwtl
push
lods
bnd
sbb
outsl
or
ja
and
add
adc
push
xchg
dec
lock
dec
cwtl
push
push
subl
les
xor
xchg
mov
jo
inc
mov
incb
add
ja
repz
adc
out
int
test
sbb
and
ret
mov
push
pop
idiv
sub
ror
cli
pop
movsb
xorb
loope
je
xlat
fbstp
xchg
mov
movsl
cwtl
jns
xchg
xor
xor
in
jnp
stos
int
lods
mov
cmp
shll
sbb
push
je
jb
mov
js
idivb
fwait
aas
fs
add
sub
add
mov
ret
lea
cmc
jge
xchg
enter
add
sbb
add
clc
and
sub
push
jbe
pop
adc
sbb
jg
cmc
in
loop
int3
scas
ss
xchg
jno
out
popf
jns
dec
or
ret
aaa
pop
test
cmp
ja
clc
rcr
fistl
rcr
insl
inc
xchg
in
inc
mov
push
inc
xchg
in
push
fcmovu
test
idivl
jmp
lcall
jns
cmp
scas
imul
mov
mov
sbb
and
xchg
aas
sub
jl
jae
ds
aad
es
fldenv
je
jb
lods
mov
push
xchg
jmp
cmp
and
xor
jbe
push
sahf
push
cmp
rcr
or
mov
jle
je
xchg
xchg
push
fdivrl
push
pop
pop
pushaw
jl
cmp
mov
cltd
push
sbb
lods
sbb
call
popf
test
xchg
fwait
nop
jno
test
jae
outsl
jg
inc
push
mov
nop
outsb
add
daa
add
cmp
xor
sub
decb
in
xchg
pop
out
outsb
sub
xor
mov
dec
dec
test
push
dec
not
xor
dec
loopne
fidivl
push
and
mov
mov
adc
push
nop
mov
popf
mov
fdivrs
jbe
dec
fildll
cmpsl
push
out
xchg
xchg
test
push
pop
pop
fidivrl
stc
movsb
lods
adc
in
adc
sbb
dec
ret
mov
xor
xchg
push
and
mov
mov
cmp
movb
sahf
cmpl
xorb
xor
test
pop
mov
jno
cmp
jecxz
mov
dec
mov
jmp
and
push
dec
outsb
iret
rclb
jg
push
ret
sbb
or
mov
sbbl
loop
sub
aas
sbb
xchg
push
cmp
fcoms
lret
push
push
pushf
ss
jl
jge
dec
outsb
insb
out
inc
mov
adc
stc
pop
jecxz
adc
push
mov
push
faddl
sbb
pop
xchg
leave
cli
push
cli
inc
push
xchg
shlb
stc
rcrl
mov
adc
movsb
xchg
sub
adc
mov
inc
sbb
outsl
pushf
jge
sbb
fbstp
fdivrl
pusha
enter
add
pusha
jb
lahf
stos
lods
rcrb
mov
adc
xchg
sub
cmpsb
push
lahf
scas
cmp
inc
lret
cltd
movsl
push
cs
jne
jle
push
int
cwtl
jne
cli
xor
jl
jbe
repnz
and
lds
xchg
loopne
cltd
shll
data16
dec
in
mov
shll
xchg
cs
popa
pop
adc
mov
xor
xor
push
clc
sub
orl
pop
leave
cs
out
push
fdivrl
or
or
lahf
scas
xor
lods
xor
add
cli
or
mov
xchg
jbe
in
pop
cltd
add
test
pop
into
int
lea
jae
out
mov
mov
inc
cmpsl
xor
cmc
mov
xchg
sbb
das
adc
push
cmp
and
lret
test
ret
jae
inc
dec
mov
nop
adc
adc
scas
sbb
xchg
and
jle
mov
loope
mov
sbb
sub
lahf
repz
clc
mov
cmp
ficoms
imul
cmp
incl
out
pop
lods
les
ds
sarb
je
ss
cmpb
fs
movsl
das
jecxz
add
mov
and
add
sbb
leave
add
adc
push
mov
inc
or
push
fnstcw
outsl
cmp
mov
sbb
daa
outsl
pop
mov
sub
cmp
push
mov
movsb
jno
imul
incb
jns
mov
or
xchg
mov
enter
or
lds
lods
test
xlat
and
and
cs
pop
adc
sbbb
pop
adc
sub
fmul
aam
adc
ficoms
dec
ss
mov
jns
or
pop
movsb
xchg
daa
lock
or
or
push
lods
mul
mov
mov
in
inc
popl
jne
and
xor
adc
lret
subl
adc
pop
dec
adc
add
add
push
jmp
sbbb
sub
scas
lahf
pop
loop
xchg
in
inc
shl
out
jmp
shl
clc
aam
data16
push
xor
cmp
mov
add
lret
inc
sbb
cmp
xchg
cmp
adc
pop
mov
xor
stos
pop
shufps
rclb
cmp
sbb
cmpb
add
cld
jnp
mov
cmpsl
sub
sbbl
popa
sbb
jo
push
dec
sub
dec
mov
ficomps
mov
pop
sub
call
mov
sbb
outsb
xchg
popa
inc
xor
inc
inc
movsb
fs
daa
push
mov
test
jb
pop
shll
xlat
sub
push
or
adc
jno
cmp
jnp
cmp
bnd
sti
std
inc
jns
and
jnp
fisttpll
loope
lea
aam
test
push
pop
pop
pop
inc
xor
scas
pop
testl
cld
mov
lahf
fimull
adc
sti
andb
mov
adc
int3
xor
xor
mov
fsubr
push
jbe
repnz
jp
in
jns
test
and
xchg
ljmp
mov
lods
inc
push
cmp
dec
mov
inc
rolb
loope
xor
mov
and
mov
xor
imul
es
shlb
push
mov
push
mov
push
aad
imul
popa
addr16
cmp
int3
jmp
inc
pop
fsts
inc
adc
mov
in
arpl
fwait
arpl
xchg
into
scas
jbe
xor
jg
lods
test
movsb
imul
repz
repz
insl
xor
push
adc
jmp
inc
gs
or
aas
scas
imul
sbb
mov
std
lock
cwtl
cmp
and
adc
scas
lock
out
out
bound
mov
mov
adc
and
add
fcmovbe
inc
es
inc
inc
mov
outsl
mov
or
test
inc
mov
aam
mov
movl
in
or
xor
fsubrs
jb
or
cmp
out
cmc
je
cwtl
fadds
and
outsl
dec
sbb
xchg
mov
pop
outsl
sub
adc
ret
mov
sbb
cli
sbb
mov
insl
scas
stc
cmpb
ret
cld
pop
inc
andb
xor
inc
dec
jecxz
out
ss
enter
test
mov
and
mov
lahf
and
lods
rolb
pop
pop
test
movl
jl
mov
dec
sahf
adc
jbe
insl
cmp
loopne
sbbl
push
fidivs
out
jbe
adc
cmp
fiadds
pop
divb
or
arpl
ljmp
insb
repz
push
push
inc
icebp
ret
push
data16
leave
inc
lcall
jg
mov
xor
pop
jg
adc
mov
cwtl
pop
xor
pop
cli
pop
fcompl
cmp
imul
or
mov
pop
add
cmpb
xchg
dec
mov
inc
in
cmpsl
jno
lock
pop
mov
test
call
adc
ljmp
cld
jl
pop
inc
int
imul
mov
xchg
lret
xlat
and
cli
mov
push
dec
scas
adc
inc
push
sub
mov
pushf
bound
xchg
jge
fnstenv
cs
outsl
xor
push
dec
stc
stos
dec
mov
xor
pop
subl
lods
outsb
lahf
or
or
mov
arpl
sub
popf
and
ret
add
dec
xor
icebp
or
aaa
dec
loop
sti
movsb
cmpsl
aaa
xchg
aas
jmp
ljmp
leave
jge
jmp
xchg
inc
mov
loope
pop
fadds
popf
sbb
inc
xor
push
repz
jb
test
xchg
mov
sub
mov
mov
enter
int
gs
and
sub
jae
push
or
mov
sbbl
in
xor
sbb
in
jns
xor
xchg
mov
inc
mov
mov
xor
inc
testb
mov
xchg
inc
xor
cmp
out
ret
daa
cld
shlb
mov
cli
clc
mov
mov
lock
in
pop
add
loop
in
sub
gs
cmp
jns
std
push
mov
in
sub
fsubl
out
sub
test
loopne
movzwl
mov
mov
shrb
clc
pop
jo
and
and
xor
repz
pusha
dec
movsb
push
ja
mov
push
lods
inc
insl
inc
jg
inc
adcb
add
add
fisttpl
xchg
jns
inc
mov
shr
cwtl
jo
outsl
sub
cld
dec
mov
push
mov
mov
and
sbb
adc
repz
pop
cmp
inc
jmp
sub
fiadds
mov
push
imul
inc
int3
sbb
aam
icebp
dec
aad
enter
and
push
shl
fldl
adc
movsl
dec
mov
jb
or
mov
das
fstl
insl
imulb
ret
mov
cmp
push
mov
jle
xlat
pop
addr16
pop
push
mov
push
popa
insl
xor
cmp
jno
add
into
and
pop
popa
cwtl
mov
testb
sub
mov
xor
scas
dec
out
xor
fldt
inc
and
roll
sbb
jae
add
jle
jo
outsb
and
dec
sar
push
push
cmp
cmp
hlt
iret
sub
mov
cs
ror
stc
fildll
pop
mov
in
leave
and
pop
mov
pop
jg
rorb
dec
cmp
xchg
cld
xor
les
pushf
in
jecxz
or
jg
xor
les
sbb
mov
fwait
out
push
dec
cwtl
sbb
pop
addr16
roll
mov
xor
loope
in
adc
and
add
out
sub
cmovle
loop
iret
sub
out
pop
push
and
pushf
sub
push
in
push
movsb
leave
in
and
and
jbe
mov
mov
stc
nop
push
das
add
stc
lret
pop
call
sub
sub
push
pop
sbb
js
clc
mull
and
add
jmp
sbb
dec
rclb
add
jge
sub
sbb
sub
cmp
loope
inc
popf
pop
adc
mov
lea
fisubs
rcr
js
jne
dec
inc
jbe
in
push
out
push
lahf
icebp
pop
inc
adc
out
dec
out
ljmp
push
movb
adc
dec
mov
cwtl
ret
int3
sub
xchg
imul
dec
loopne
add
adc
scas
daa
filds
int
daa
fadds
push
mov
mov
int3
pushf
sub
inc
leave
add
lcall
jp
in
es
dec
xchg
adc
push
pop
push
push
xchg
push
push
push
cmp
or
xor
sbb
sti
adcb
push
add
add
iret
mulb
test
xchg
mov
pop
mov
mov
es
and
add
cmp
mov
or
adc
mov
mov
jne
jo
mov
adc
adc
mov
adc
cmc
cltd
add
fcmovnb
lret
adcb
jp
jmp
xchg
jecxz,pn
xor
int
ret
cmp
dec
popa
shrb
ljmp
sub
int3
push
cmp
sub
jb
fldl
xlat
and
repnz
test
popf
xchg
std
push
cmpl
repz
jo
jg
and
adc
ja
add
aad
outsl
jbe
xlat
adc
or
mov
pusha
test
shlb
inc
sub
adc
pushf
inc
add
or
lret
aad
test
imul
into
inc
cld
mov
xchg
mov
adc
push
cltd
lret
xorl
mov
repnz
popf
rolb
jl
jle
jmp
fcompl
mov
imul
mov
ljmp
xchg
or
adc
sub
and
js
and
and
in
push
dec
mov
repz
les
fiadds
pop
dec
notl
push
dec
fxch
shr
lret
clc
nop
cmp
dec
sarb
mov
adc
insb
jnp
sti
add
stos
mov
fisubl
stc
dec
in
and
cmp
sub
pop
mov
jp
dec
jecxz
jle
ljmp
fimull
mov
leave
xor
add
aam
adc
jne
call
push
jl
bound
scas
shlb
std
daa
stc
jp
ss
adc
xchg
call
or
jmp
jmp
insl
sarl
aam
push
pop
ja
pand
hlt
icebp
sub
imul
xchg
sti
xchg
bound
pusha
mov
pop
jle
xchg
cli
adc
jb
dec
nop
jno
enter
in
jg
jne
mov
mov
cltd
cld
push
or
popf
add
adc
dec
pushf
jb
and
addl
rorb
fwait
jl
ja
repnz
cwtl
shrb
and
dec
and
mov
and
sbb
test
jl
stos
mov
add
cmp
sub
mov
sub
sbb
int
cli
dec
add
gs
jp
imul
sbb
fsub
mov
or
lret
inc
mov
cs
inc
fs
adc
dec
lods
and
cmp
in
sub
or
call
or
imul
pop
loop
mov
loop,pn
mov
jmp
lds
add
xor
repz
aad
or
sub
jmp
pushf
movl
or
inc
movsl
or
scas
adc
jmp
popl
shll
mov
cmp
jnp
xlat
loope
loopne
xchg
rolb
out
add
jo
push
inc
shl
mov
lods
enter
xor
into
pop
cs
xchg
dec
mov
push
test
les
push
jecxz
xchg
mov
iret
pop
loope
mov
and
inc
dec
jo
mov
sub
pop
loop
loop
lret
das
xchg
pop
fs
jb
cs
mov
or
xchg
and
loopne
mov
jl
cmc
dec
fstpt
cmp
jmp
outsl
and
into
dec
in
pop
aaa
js
jle
mov
ret
mov
or
adc
fs
push
jle
mov
adc
sub
test
cmc
push
shrl
sbb
xchg
mov
xchg
fs
fstl
dec
mov
fs
pop
push
or
movsb
adc
pop
fidivrs
aaa
pop
popf
add
stc
lret
push
rcr
addr16
int
mov
xor
jae
inc
ja
fmul
pusha
test
into
idivb
mov
mov
or
imul
js
pop
and
mov
repnz
popa
call
sarb
movb
js
pop
insl
pop
out
inc
xchg
mov
jne
dec
repnz
pop
sbb
add
shll
xchg
pop
icebp
mov
notb
xchg
pop
das
ds
push
test
xor
nop
xchg
sub
scas
add
sub
in
and
fidivrl
movsb
mov
add
sub
dec
repnz
xchg
andl
sbb
mov
sub
cli
in
ja
arpl
xor
mov
push
repnz
les
int3
cmp
incb
test
aas
insb
je
cwtl
mov
mov
pop
xlat
insb
xchg
dec
lock
mov
cmp
inc
adc
jne
and
fnstcw
xor
les
dec
lcall
daa
out
pop
bound
scas
mov
adc
add
fldenv
sarb
inc
mov
push
int
int3
add
cltd
mov
sti
shll
stos
adc
test
les
roll
push
mov
xlat
leave
jl
lods
pop
sub
jecxz
push
fbld
or
test
ss
push
fsubr
and
stc
lret
xchg
mov
mov
mov
clc
pop
lea
cmc
add
sbb
outsl
aaa
jecxz
or
lahf
push
daa
lods
in
push
orl
mov
adc
fs
push
inc
outsb
lods
in
mov
cmp
addl
add
stc
mov
lahf
sub
mov
sbb
jns
sbb
xor
adc
es
es
inc
jnp
pop
adc
out
xor
mov
or
cld
mov
inc
dec
loope
mov
addr16
mov
push
sbb
mov
iret
cmpsb
mov
sbb
add
outsl
lods
adc
mov
popa
push
adc
pop
mov
xchg
outsb
adcb
enter
mov
dec
xor
call
adc
mov
mov
dec
push
xor
mov
dec
rcrl
setnp
cwtl
xor
lret
ss
cmp
stc
jecxz
add
arpl
out
movsl
mov
fs
popf
jg
repz
mov
xor
and
sub
or
pop
rclb
push
mov
jle
aad
sub
mov
inc
call
pop
aaa
mov
nop
out
int
cmp
xor
push
sbb
out
cmp
lret
lods
adc
test
test
push
je
nop
out
outsl
sub
scas
and
ret
xor
imul
imul
inc
push
cmp
mov
movsl
aaa
mov
std
add
scas
lahf
std
mov
cmc
ds
xchg
cmc
ret
xor
pop
inc
mov
mov
ja
divl
hlt
cli
lret
mov
pop
lcall
mov
arpl
sti
mov
xor
sub
cs
mov
fidivs
outsb
pop
enter
popf
shr
xchg
inc
lods
jl
inc
sbb
ljmp
and
mov
nop
inc
cmpsl
jmp
push
lds
xor
enter
mov
push
in
sti
push
jbe
ret
addb
ret
adc
fs
xor
xchg
je
test
out
add
movsl
out
sub
mov
and
sub
adc
dec
ret
mov
aaa
ja
cmp
data16
popa
mov
jmp
and
push
aas
shll
out
jecxz
jno
push
jno
and
test
adc
add
inc
jmp
sbb
bound
iret
in
imull
add
addr16
mov
mov
dec
enter
mov
and
rcrl
jmp
cltd
int3
dec
scas
sbb
xor
ret
xchg
hlt
pop
fs
lret
das
mov
lock
movsb
hlt
or
in
sbb
mov
inc
clc
mov
xor
std
cmpsl
stos
scas
js
fwait
test
imul
add
xor
sbb
cmp
pushf
lock
add
imul
roll
jle
jnp
push
inc
mov
cs
fndisi(8087
dec
mov
pop
and
adc
aaa
mov
xor
sarl
out
mov
xor
and
scas
addb
lods
mov
std
sub
adc
fildl
inc
dec
adc
paddd
push
and
xor
dec
icebp
in
mov
sub
leave
fstl
les
in
rolb
push
cmp
sub
fdivrs
aam
or
dec
bnd
imul
ret
push
inc
or
dec
push
scas
inc
int3
add
test
mov
std
pop
repz
ror
repz
and
imul
out
loope
jns
and
jb
insl
mov
fsubr
stos
add
xchg
outsb
arpl
insl
sbb
add
shrl
ficoml
popfw
scas
in
cmc
jmp
cmp
aaa
push
or
add
pop
arpl
add
std
adc
and
xor
mov
pop
pop
test
int
add
pop
mov
ljmp
cmp
dec
inc
fildll
fsubrp
xor
sbb
jle
mov
cli
ds
inc
and
mul
nop
mov
mov
std
lods
mov
pop
mov
xor
add
pop
push
push
cmc
jle
inc
or
lock
adc
scas
shlb
lret
outsb
push
and
rcrl
sbb
enter
out
or
pushf
jp
pop
and
mov
and
clc
mov
in
xchg
insb
mov
cmpsb
xchg
mov
dec
push
ds
sbb
js
test
inc
dec
aaa
sbb
fistpll
outsb
and
gs
sub
cmp
pop
push
push
cmc
sbb
cmc
mov
fcompl
pand
lods
aas
mov
mov
fsubrs
sbb
sbb
test
cmc
cmp
dec
mov
movsb
xchg
out
jne
or
mov
je
adc
sbb
fcmove
and
sub
mov
clc
mov
or
insl
and
jne
pop
scas
mov
or
iret
push
jmp
jno
daa
popa
mov
loop
add
push
fwait
rcrl
jno
push
rcll
imul
xlat
ficomps
sti
cmp
fbstp
test
pusha
std
xor
push
je
cmpb
push
clc
pop
js
into
outsl
and
or
dec
dec
sbb
jnp
lahf
mov
mov
mov
fnstcw
xorb
arpl
ja
or
fsts
stos
cmp
pop
xchg
daa
adc
push
inc
shll
int
dec
jmp
mov
jmp
ret
fnsave
test
imul
insl
or
sub
imul
push
aam
outsb
aas
loope
data16
arpl
pop
stos
stc
xor
inc
in
jbe
push
push
mov
daa
and
popa
or
inc
movsb
jmp
movsb
pop
cmp
scas
les
movsb
out
inc
cmpb
mov
mov
and
adc
aaa
pop
push
out
sbb
mov
hlt
dec
xor
loopne
add
and
movsb
add
dec
out
xor
stc
rolb
sti
in
aas
std
popa
cwtl
mov
push
mov
pop
fstpt
movsl
inc
cli
fldenv
inc
jne
jl
jp
jmp
aas
mov
fcoms
jle
cli
jp
adc
adc
mov
aaa
mov
sub
add
std
jns
cmpsl
sub
stc
jecxz
stc
mov
in
lods
popa
inc
lret
pop
pop
or
pop
in
bound
daa
or
imul
int3
lret
mov
into
adc
enter
sahf
inc
std
in
bound
in
lds
cmp
sbb
mov
pop
daa
xor
adc
sbb
jb
xorl
mov
cmp
lahf
and
aaa
adc
call
push
xor
mov
lret
int3
sti
scas
cmp
arpl
lods
mov
and
out
call
xchg
lret
lahf
xchg
popa
pop
cli
jno
jb
fimuls
icebp
ds
outsl
xchg
inc
mov
pop
or
xchg
mov
or
or
mov
in
mov
hlt
adc
mov
sti
ss
xchg
xchg
iret
dec
jle
scas
jge
loopne
fidivrl
inc
xchg
sbb
pop
sbb
rcrb
fmuls
pop
iret
clc
outsb
lahf
scas
ds
inc
or
mov
inc
xor
cmc
mov
outsl
mov
pop
dec
sahf
scas
fcoms
fnstcw
or
call
movsl
pop
inc
pop
test
mov
add
divb
xor
dec
xor
std
hlt
push
mov
sub
add
xchg
mov
xor
scas
pop
lock
fisubrl
sbb
mov
fs
pop
push
mov
push
mov
cmp
lds
cmp
cli
lods
sbb
mov
mov
out
mov
mov
sub
stos
in
jmp
mov
sbb
pop
shl
sub
addr16
add
or
adc
jo
jecxz
rclb
jae
and
jmp
jge
arpl
in
ret
loope
test
in
push
mov
jg
sbb
aaa
jg
sbb
int
lret
and
xor
sti
cltd
add
cmpsb
jnp
xchg
mov
ret
add
cmp
or
addr16
cmp
sbb
stos
cmc
and
adc
and
ret
pop
in
and
int
jne
adcb
inc
sbb
lret
movsb
adc
ljmp
in
aam
ret
cwtl
lods
dec
ror
mov
loope
mov
push
lods
jb
jmp
fwait
xchg
inc
and
pusha
jnp
loop
outsb
out
cmpsb
mov
fst
mov
adc
and
xchg
stos
mov
shl
xor
and
popa
repnz
xlat
jae
adc
cltd
push
inc
adc
jns
js
js
test
add
stos
int3
add
filds
pop
lcall
cmc
lods
push
cmp
loope
mov
repz
mov
xchg
cmp
sbb
dec
pop
pop
lea
sbb
fsubrl
outsl
xor
mul
adc
cmp
xor
cmpsl
mov
add
lcall
popa
sub
shr
insb
repz
sub
addr16
call
cmp
hlt
aad
inc
sbb
sbb
sub
mov
and
scas
xor
hlt
dec
enter
jns
int3
shrb
mov
insl
rorl
pop
pop
mov
ret
outsb
iret
jb
pop
inc
je
push
jecxz
cs
aaa
push
fstl
jne
dec
cmp
pushf
or
xlat
cltd
sbb
cmp
cwtl
inc
cmp
sbbb
or
cmpsl
scas
aad
and
fwait
push
cmp
stos
mov
and
push
cmpsl
push
inc
mov
jno
adc
out
fadd
pop
adc
pop
pop
xor
insb
jnp
dec
lods
movsl
sahf
or
jl
and
dec
in
push
shl
xorb
cltd
sbb
sbb
std
push
lret
push
xchg
xchg
jecxz
xchg
gs
jne
or
test
pop
jg
aad
lock
sbb
mov
xor
into
mov
xchg
sub
filds
add
and
imul
nop
imul
mov
popf
shl
mov
cltd
xor
and
inc
mov
mov
js
xor
sub
jno
inc
fmull
fidivrl
inc
incb
into
inc
inc
cmp
jo
sbb
cwtl
cmp
out
jno
ss
rcrl
cld
jb
xor
jp
xchg
rol
shlb
adc
sbb
rcl
jbe
mov
mov
pop
ljmp
inc
int3
jmp
sbb
mov
dec
mov
into
xchg
in
stos
xor
popa
daa
sahf
addl
mov
push
lds
in
mov
pop
and
sti
imul
movsl
and
or
mull
push
lret
daa
mov
mov
test
mov
jle
push
rcrl
aam
pop
inc
mov
add
imul
mov
rcl
and
cmp
lods
mulb
dec
dec
rorb
and
xchg
or
pop
scas
cld
mov
jnp
mov
xchg
mov
popa
cmc
gs
incb
mov
add
out
or
das
xor
mov
mov
sbb
cwtl
push
jb
adc
cmp
sbb
shrb
xlat
aad
ss
test
aaa
rorl
inc
fmul
or
dec
dec
popf
inc
push
push
rcrl
jge
enter
sbb
jp
mov
push
out
iret
inc
scas
jg
in
cmp
pop
mov
cmpl
rorb
push
out
orl
add
cmp
xchg
sbb
or
xor
aas
jo
pop
aam
push
mov
dec
ss
in
adc
pop
mov
inc
jmp
add
jnp
sbb
lcall
pushf
mov
lods
xor
sarb
cmc
jle
xchg
movsb
pop
xor
xchg
jno
or
addr16
cmp
das
and
mov
arpl
mov
push
sbb
mov
pushf
icebp
fidivs
and
lcall
add
stos
sbb
xchg
pusha
stc
xchg
loop
pop
mov
dec
pop
je
insl
repz
jno
push
je
xor
cmp
nop
lahf
fbld
mov
and
jne
xchg
adc
jmp
add
jmp
es
inc
fisttpl
in
out
jne
mov
mov
push
pop
fildll
and
int3
inc
clc
or
inc
xchg
jb
xlat
push
inc
jo
mov
lods
outsl
out
cld
fs
js
cmc
adc
and
lea
das
repz
stos
fdivl
fbld
cmp
mov
arpl
xchg
iret
sbb
je
sub
jo
sbb
sub
add
mov
aad
sub
pop
je
imul
test
xchg
or
or
jno
xchg
pop
shlb
or
fcom
jb
ret
mov
ret
sub
adc
fs
cld
dec
fisubrs
mov
scas
test
push
aaa
dec
ja
aas
sbb
mov
mov
stos
xor
cli
xor
dec
cmp
mov
xchg
ja
out
or
xor
jge
xchg
in
jl
pusha
ss
mov
mov
int
push
and
mov
in
movsb
shll
push
scas
int
add
pop
sub
add
jmp
mov
mov
pusha
mov
cmp
ret
mov
adc
sub
lcall
and
gs
jne
es
out
frstor
stos
sarb
sbb
fs
push
pop
pop
roll
sub
pop
pop
in
mov
dec
jo
and
pop
xchg
push
into
xchg
fcomip
push
push
fcoml
insb
lret
test
inc
jnp
push
pop
mov
mov
js
cltd
aam
lcall
iret
aad
pop
aaa
lcall
mov
jno
sbb
push
sbb
or
imul
or
ja
ljmp
arpl
sbb
xchg
ljmp
xor
outsb
es
mov
xchg
fistps
test
cmp
lahf
sbb
pop
lods
inc
cmp
push
inc
adc
enter
jl
push
xor
mov
cmp
lods
and
push
dec
inc
push
lods
loope
push
faddl
fcomps
stos
dec
shl
rolb
inc
mov
or
data16
jl
lds
out
stos
mov
push
cmc
ret
imul
rcll
movsb
pop
cmp
add
or
or
mov
test
cltd
das
xchg
inc
lret
int
mov
sbb
lods
or
lcall
add
jns
int
add
lock
dec
sub
mov
adc
sti
dec
mov
mov
push
loope
adc
inc
mov
lock
test
or
jo
mov
xchg
or
aam
lods
or
sub
lret
fdivrp
outsb
lcall
addr16
loope
xchg
call
fistpl
sbb
imul
mov
jge
pop
push
iret
dec
ljmp
pop
mov
and
movsb
lods
cvtpi2ps
pop
bound
mov
ja
adc
test
gs
call
inc
sbb
pop
loope,pt
cmp
rclb
cmc
imul
cmp
outsb
sub
sbb
movsl
inc
adcb
mov
adc
imul
pushf
out
stc
mov
iret
fisttpll
mov
aam
add
mov
mov
add
shll
cmp
mov
inc
adc
das
jns
jae
pop
leave
insl
cmpsb
fdiv
mov
xor
cmp
dec
mov
addl
xchg
sub
les
and
sub
mov
jmp
jp
bound
scas
xlat
inc
inc
in
ret
lods
mov
xchg
enter
loopne
sub
mov
xor
imul
sub
leave
aas
hlt
loope
or
pop
jge
and
sub
test
mov
xor
in
pop
jb
xchg
fdiv
mov
sub
and
adc
xchg
les
into
je
cwtl
pop
cmp
shr
add
jbe
adc
inc
xor
xor
out
cmp
pushf
xor
js
iret
inc
sbb
div
frndint
sub
testb
and
shll
lea
lahf
iret
leave
xchg
data16
fmull
js
cwtl
push
cwtl
fidivl
cmp
or
mov
shlb
add
addl
adc
jle
imul
scas
add
mov
outsl
lds
and
and
adc
call
jbe
xchg
pop
cld
pop
xor
incl
mov
cmp
mulb
or
xor
pop
cli
jle
dec
test
push
dec
pop
lcall
call
aad
popa
jle
cli
mov
movsl
rcrb
outsl
std
xor
xchg
push
jne
mov
test
rolb
mov
addl
push
mov
jb
cmc
scas
das
popa
push
adc
decl
xchg
aaa
lret
in
insl
test
sub
xchg
mov
xor
cmp
push
sub
int3
scas
test
mov
cmc
cmp
jno
mov
fwait
sbb
lret
cli
out
jno
outsb
cmpl
nop
ffree
pop
push
ret
movsl
mov
adc
mov
pop
popf
mov
and
icebp
test
sub
mov
inc
fneni(8087
push
popf
stc
stos
jg
xor
stos
data16
ds
loope
or
sub
aad
xchg
mov
add
adc
flds
push
push
dec
mov
xchg
loope
add
or
xchg
push
in
lret
sti
in
ljmp
mov
cmp
xor
mov
fs
aaa
add
push
shlb
int3
jp
sti
cwtl
adc
addb
pop
cld
cmp
gs
and
and
pop
and
test
and
mov
or
xor
outsl
add
mov
mov
xchg
adc
sbb
in
test
xor
mov
jno
push
mov
or
inc
orl
aaa
push
aaa
clc
mov
rol
out
repnz
cs
das
mov
jle
xor
xor
mov
sti
push
lea
xchg
mov
and
pop
dec
aas
pop
repnz
movsb
or
mov
dec
push
or
mov
popf
xchg
clc
imul
sub
sub
sbb
jg
sub
jno
pop
scas
inc
jns
inc
xchg
rcrl
mov
push
jno
daa
or
std
popf
adc
lea
lahf
pop
xor
xlat
aas
sbb
outsb
jo
ss
add
test
pop
ficomps
adc
mov
mov
ret
pop
dec
cs
jns
xor
lcall
jne
cs
mov
ret
ljmp
mov
cmp
fucom
lcall
jne
aaa
push
dec
jae
subb
fs
sbb
and
repz
mov
mov
dec
or
maskmovq
cli
bound
mov
and
xor
fsubr
sbb
mov
fbld
sbb
add
cmp
ljmp
inc
pushf
into
adc
push
cmp
aam
add
mov
addr16
sbb
xor
cli
xchg
xor
xchg
popf
pop
jo
pop
xchg
pusha
mov
inc
fucomi
lret
cmpl
xchg
test
sahf
addr16
mov
lret
leave
jg
jmp
xor
cmpb
test
arpl
xor
fcmove
dec
shll
push
lcall
popf
inc
jo
pop
ret
jns
out
sbb
int3
mov
insl
cmpsl
xchg
in
ret
cltd
and
out
bound
in
jno
pop
gs
push
inc
rcl
cmpsl
sub
dec
movsb
mov
fistpll
movsb
fucomip
mov
sarb
out
dec
xchg
iret
dec
dec
cmp
and
xor
enter
push
outsb
pop
xchg
fnstsw
lret
mov
or
nop
mov
mov
inc
dec
cmp
sbb
and
in
and
in
test
and
or
cltd
sahf
push
push
push
jge
adc
push
mov
mov
push
testb
mov
arpl
test
jbe
outsb
jnp
and
repz
je
inc
sub
clc
mov
xor
aad
xchg
pop
xor
sub
icebp
stos
ret
mov
xchg
xchg
push
sti
dec
leave
jne
cltd
loopne
ja
sar
aam
xor
repz
and
xchg
test
xor
das
dec
dec
add
add
fs
xlat
inc
test
sbb
cmp
ljmp
int
mov
sub
aad
sar
outsl
xor
adc
mov
adc
push
cwtl
or
add
popa
ret
pop
in
jae
aaa
mov
mov
cmp
mov
je
outsl
jg
fsqrt
loope
inc
cmp
inc
aad
cli
jbe
adc
push
addr16
loopne
lret
ds
dec
sub
push
push
and
lods
js
and
data16
mov
imul
roll
rorb
neg
fbstp
mov
adcb
jnp
sub
cmp
sub
lret
cmp
mov
shrl
adc
push
ret
movsl
shr
push
xchg
pop
addr16
sub
xchg
and
dec
dec
ret
sub
xor
test
arpl
jnp
outsb
inc
push
sarb
add
pop
mov
inc
test
mov
and
lods
or
dec
cwtl
and
jno
add
inc
mov
call
outsb
aas
push
test
xchg
pop
inc
jp
xor
sub
lea
rcr
xchg
push
push
insl
rorb
or
test
cli
fwait
pusha
stos
mov
js
icebp
adcb
push
push
mov
dec
add
push
dec
xor
sbb
xchg
loopne
addb
mov
outsb
mov
jecxz
outsb
xchg
adc
shll
or
or
mov
sti
gs
xor
mov
fldenv
imul
fwait
or
add
xor
cmp
mov
push
dec
pushf
repnz
jno,pt
and
subl
dec
sub
lock
jbe
stos
call
jb
mov
mov
mov
sub
fdivrs
cmp
in
and
mov
adc
or
ja
stos
sbbb
cli
adc
sub
insl
bound
scas
jo
mov
call
add
jnp
fldln2
stos
ret
and
fs
outsb
xlat
sbb
shl
jmp
cltd
inc
js
orl
mov
push
push
add
push
in
out
test
sbb
fcmovne
stc
scas
xor
xor
pop
pop
in
mov
mov
aad
or
arpl
xchg
nop
ljmp
or
mov
movsb
or
test
add
ljmp
inc
jae
jb
out
cmc
stos
rclb
mov
pop
add
sbb
push
xor
adc
push
push
xor
pop
popf
leave
cmc
dec
test
dec
lock
fldenv
lret
xor
jae
in
mov
cwtl
push
lahf
cmp
scas
stc
xlat
arpl
xchg
scas
add
fwait
push
repnz
pop
cmp
repnz
pushf
jnp
or
aaa
iret
popa
stos
popa
adc
stos
cmpsl
js
push
pushf
mov
mov
sbb
and
adc
sub
lret
shrb
dec
pop
mov
pop
sti
in
sarl
or
push
push
pop
icebp
mov
imul
sbb
pop
xor
sbb
sub
sar
xchg
aam
lea
addb
push
cmpsl
fidivs
cld
push
push
and
jl
push
shlb
add
hlt
popa
jge
or
lds
inc
out
ljmp
pop
cmpsl
or
sbb
push
mov
icebp
ljmp
std
rcrl
sbb
dec
jp
push
arpl
xor
movsl
mov
aad
daa
sbb
call
out
fimuls
inc
sub
mov
lret
lds
mov
xor
test
sbb
int3
iret
pop
repnz
mov
xor
mov
mov
in
add
in
xlat
stc
add
cmc
sbb
push
aad
mov
pusha
aaa
repnz
mov
push
adc
xchg
mov
stos
das
inc
adc
enter
adc
sub
shr
push
and
repnz
xchg
jecxz
enter
loope
scas
inc
clc
push
aas
cmp
cmp
cmp
push
stc
lcall
mov
shlb
cmp
insb
jle
pop
mul
dec
cmp
iret
inc
je
push
push
cmpsb
sbb
jo
fisttpl
fnsave
mov
sbb
fdivr
cmp
cmp
mov
xchg
mov
nopl
push
daa
ret
enter
hlt
cwtl
adc
fsubr
adc
mov
ja
xchg
cmp
shlb
shlb
inc
pop
mov
cmc
add
fisttps
jnp
mov
out
push
inc
cmp
sbb
ss
jge
pop
sbb
and
inc
mov
pop
mov
dec
hlt
repnz
push
pop
outsb
mov
pop
pop
cld
cmpsl
loopne
fdivs
aaa
and
ds
lret
mov
or
js
aam
and
cmp
jge
push
pop
icebp
das
call
fidivrs
js
fidivl
cmp
cmc
das
jge
test
or
xor
mov
add
arpl
stc
sbb
repnz
dec
into
loop
adc
cmp
mov
insb
add
sbb
or
sbb
loop
ret
jge
dec
add
insb
les
out
add
into
imul
jecxz
sahf
push
js
rolb
inc
and
push
xor
jecxz
testb
add
rcll
mov
cmp
xchg
es
clc
call
cld
ja
out
jecxz
jge
test
sahf
out
push
mov
aaa
jl
in
leave
pusha
fbld
sbb
dec
cmp
pushf
fsubrs
dec
jbe
adc
lahf
cmp
and
jle
call
add
andl
jge
pop
adc
hlt
gs
or
out
ss
inc
insl
jmp
mov
sahf
jae
mov
out
outsl
inc
mov
ss
lock
data16
mov
xchg
rcrl
cmp
insb
lds
sub
adc
jg
rcll
pop
sbb
dec
outsb
in
mov
mov
add
cmpb
xor
cmp
sub
jl
dec
pop
cmp
pusha
pop
mov
pop
fwait
ss
sbb
bound
dec
push
mov
jb
and
fidivrl
test
mov
insb
inc
out
jmp
loop
lret
lret
cmp
xchg
dec
je
je
sbbb
iret
sahf
fs
jno
cltd
inc
std
push
lock
sbb
or
mov
pop
mov
and
mov
mov
fcomp
xchg
push
test
inc
mov
sarb
pop
lods
push
mov
mov
sbb
insb
in
push
push
test
fwait
ror
pop
fucomi
dec
sahf
xchg
loop
movb
xchg
leave
insb
loop
loop
jge
ja
gs
out
fstl
scas
dec
adc
mov
mov
add
inc
pop
dec
cmp
xchg
push
inc
jo
add
push
jbe
lock
mov
xchg
sbb
popa
stos
fildll
stos
cmc
insl
imul
mov
rcll
fwait
or
adc
out
push
data16
push
adc
enter
pop
outsb
imul
hlt
lock
in
mov
outsb
dec
push
clc
adc
inc
das
mov
or
in
out
jecxz
xor
mov
faddp
mov
xor
inc
repnz
mov
icebp
and
cmpxchg
addr16
pushf
xor
pop
sub
jnp
and
or
add
subl
inc
lock
xlat
adc
mov
add
push
in
or
xor
sbb
mov
out
sbb
sub
ljmp
jae
popf
fwait
mov
jno
lcall
cwtl
mov
shll
sbb
sbb
xor
push
dec
inc
jmp
cwtl
mov
mov
dec
out
test
pop
ss
xchg
xchg
mov
mov
mov
call
dec
fs
xchg
repnz
sbb
or
repnz
enter
leave
xchg
dec
dec
xchg
mov
push
cvtpi2ps
outsl
xor
mov
add
scas
xlat
mov
repnz
push
leave
adc
popf
mov
fidivs
orb
mov
add
push
sbb
and
lea
test
pop
in
cmpsl
pop
loope
adc
xor
jecxz
aas
outsb
inc
pop
or
push
cld
inc
ret
out
aas
in
ds
rorl
lods
mov
add
pop
nop
fistpll
xchg
cmp
movsb
cmc
sti
arpl
add
jmp
push
fcomip
adc
mov
push
ret
imul
fistps
aas
fcomps
jle
insl
dec
lds
ds
and
cmpsl
pop
jne
dec
push
jne
pusha
cwtl
jne
aas
cwtl
aad
pop
arpl
js
icebp
dec
dec
adcl
movsb
push
rorl
fcmovnbe
xor
inc
filds
xor
mov
decb
jmp
pop
cmp
sbb
cmp
xor
jl
jo
lods
test
cmp
mov
sub
push
loope
sub
scas
cmp
iret
mov
imul
shll
movsl
aas
jg
adc
stc
or
fdivl
adc
outsl
adc
pop
sub
mov
mov
adc
mov
cs
mov
sub
mov
cmp
adc
sub
adc
xchg
cld
stc
enterw
jb
fists
dec
mov
xchg
jb
leave
popf
mov
in
mov
cli
jno
sti
loopne
sub
sbb
ss
push
inc
mov
lods
mov
lret
cwtl
out
pop
pop
or
or
sub
std
lcallw
jne
adc
ret
push
mov
lea
inc
push
xor
std
push
mov
adc
push
test
dec
xor
or
adc
lds
fistpll
fwait
adc
lock
mov
xor
aas
sub
outsl
std
add
icebp
push
sbb
xor
dec
hlt
pop
or
jns
mov
jecxz
sub
js
push
mov
fdiv
mov
mov
inc
mov
pop
lods
pushf
daa
add
add
je
mov
adc
out
insl
sahf
xor
ds
je
mov
scas
cltd
jno
and
adc
xchg
xor
mov
pcmpgtb
sbb
dec
jmp
dec
cmp
insb
fs
fcomp
dec
ds
out
cwtl
stos
xlat
cs
fdivr
js
and
fimuls
sbb
xor
add
or
int
pusha
and
mov
sub
sub
push
test
ja
mov
fnstenv
mov
es
and
xchg
cmpsl
in
sub
pop
in
adc
inc
add
pop
mov
add
in
sub
call
aaa
cmp
shrb
inc
iret
adc
rorl
iret
dec
call
pop
mov
out
pop
mov
cmp
xlat
pop
cmpl
inc
fucomp
loop
rcll
out
add
lock
popa
clc
shlb
in
insl
mov
into
js
dec
adc
jmp
ds
add
and
fsubs
mov
fidivs
push
jb,pt
push
insl
lcall
xchg
nop
add
sbb
xchg
xchg
cmp
pop
nop
pop
js
push
fists
xor
pusha
bound
mov
ret
ss
or
mull
inc
adc
xchg
insb
repnz
es
imul
xchg
inc
push
mov
or
and
loop
out
sub
mov
add
mov
pop
sub
hlt
movsl
push
adc
mov
add
mov
scas
jns
pop
out
jle
sub
movsb
imul
mov
inc
jge
cmp
mov
pop
adc
movsl
fisttpll
mov
push
mov
xchg
lea
subl
sbb
xor
mov
xchg
shrl
int3
std
test
add
xor
cmp
int
cmc
ret
fsubrs
aam
in
sub
pop
pop
xor
xlat
ds
jnp
dec
scas
jp
sarb
jne
notl
mov
push
pop
nop
jo
mov
pop
xlat
pop
xchg
out
bound
cmp
inc
leave
js
or
mov
cmp
pop
mov
push
or
mov
sbb
inc
jge
mov
faddl
lcall
cmpsb
xchg
add
push
out
mov
xchg
mov
cli
xor
inc
jo
test
out
clc
pop
adc
add
and
jecxz
inc
shrl
out
push
data16
mov
mov
sbb
inc
pop
and
push
push
pop
stos
jmp
and
mov
das
lods
and
mov
cmp
adc
popa
movb
outsl
push
mov
dec
stos
push
cmpsl
mov
push
pop
sbb
fisubrl
decb
rcl
add
mov
sbb
push
orl
fcoms
sub
mov
loopne
ror
or
mov
xchg
sbbb
mov
mov
pop
xchg
inc
loop
add
movsl
mov
mov
sbb
xor
adc
inc
loopne
das
and
mov
xchg
scas
mov
pop
stos
aad
es
cmpl
pop
inc
icebp
jge
mull
mov
aaa
hlt
and
sahf
add
icebp
pop
in
mov
leave
push
cmp
bound
add
jae
bound
fcom
mov
loop
adc
shrb
scas
and
jg
and
or
cmp
loopne
aam
in
ds
xlat
or
cld
cltd
cmp
iret
mov
jae
inc
ljmp
jbe
lea
jno
sbb
jno
jle
pop
ja
mov
push
fwait
mov
pop
sbb
mov
lahf
mov
or
mov
inc
mov
lds
add
ljmp
sub
inc
mov
ljmp
ja
push
adc
cmp
cld
sub
jecxz
pop
push
sbbl
or
jae
adc
hlt
in
out
adc
mov
xor
cmp
xchg
mov
or
and
sbbb
jae
es
in
adc
xor
out
cwtl
or
mov
add
aam
insl
test
lock
stc
and
mov
push
fs
int
jg
shrl
jp
mov
out
hlt
add
add
mov
add
mov
and
out
jns
jle
adc
lar
cmp
je
in
mov
jae
xchg
scas
addr16
and
sbb
mov
or
xor
mov
cmp
addr16
mov
add
jge
and
lret
adc
pop
xchg
dec
int3
mov
jae
or
idivl
repnz
aad
jg
incl
adc
or
xlat
xor
test
repnz
lret
lods
push
ds
xor
xchg
add
dec
pop
repz
xchg
and
dec
out
cmpsb
int3
xchg
xchg
stos
sub
push
je
or
adc
sub
sub
jmp
mov
lret
push
and
mov
out
adc
fstpl
xor
loope
jae
push
jne
pop
cmp
leave
pop
sbb
das
push
sub
xor
or
and
test
sub
imull
lcall
or
adc
data16
mov
loop
xchg
lods
ror
inc
mov
sub
lahf
dec
sbb
in
fldt
loopne
dec
stos
aas
dec
mov
mov
mov
push
js
fidivrl
xor
jecxz
aaa
fstpt
sub
addr16
jo
pop
outsl
sbb
fxch
mov
sub
cmovs
addr16
xor
int3
xchg
loop
loope
fwait
test
push
adc
mov
aad
cld
xchg
out
xchg
push
xlat
mov
mov
mov
or
idivb
movsb
outsl
lret
mov
outsl
mov
adc
inc
jle
mov
pop
scas
dec
mov
enter
push
sub
fiaddl
lret
repnz
stos
stos
push
or
lahf
subl
sbb
mov
fstps
sbb
rorl
ret
arpl
jbe
pop
mov
pop
or
xchg
push
cmpsb
nop
dec
aad
adc
pop
loope
pop
orb
into
repnz
ret
cmp
leave
hlt
cmc
pop
mov
leave
cmp
es
call
ret
cmp
push
xor
repz
xlat
and
icebp
add
divb
ljmp
lock
movsl
shll
fwait
fs
jp
js
std
cmp
mov
aas
sbb
mov
pop
movsb
sub
pop
or
push
xlat
call
xor
repz
inc
pop
mov
add
dec
cli
in
or
imul
push
stos
sbb
fcmovb
mov
test
dec
f2xm1
pop
inc
mov
push
mov
pop
xlat
mov
out
lret
les
lret
cwtl
popf
fbstp
popa
adc
mov
dec
pop
mov
cmp
mov
out
mov
dec
mov
aad
out
gs
aas
sar
aad
mov
fbstp
adc
es
ja
sbb
notb
out
andb
jp,pn
in
cmp
mov
sub
mov
mov
lret
mov
mov
scas
jbe
in
int3
icebp
xor
imul
xchg
push
enter
es
cltd
cmpsl
sub
sti
test
ffree
sbbb
cli
arpl
ret
dec
mov
das
lea
ret
ja
pop
shlb
movsb
clc
sbbb
ret
iret
into
dec
dec
or
cmp
ja
pop
test
ss
cld
pop
daa
add
inc
mov
int3
dec
stc
inc
jge
imul
adc
xchg
jmp
rep
adc
shll
movsb
pop
mov
out
mov
arpl
sbb
ss
lcall
cmpsl
fcmove
cmp
bound
fiadds
movsl
mov
cltd
adc
bound
jnp
dec
mov
add
xorb
pop
imul
xchg
icebp
xchg
xchg
rcrb
cmp
mov
rcrl
stc
loop
mov
dec
jg
outsl
jns
cld
insb
shlb
cmp
jp
call
or
inc
test
mov
jge
jns
cs
ss
scas
inc
pop
addr16
jg
push
lods
cmpsb
mov
cmp
xlat
icebp
fwait
rcrl
lret
fnstenv
or
mov
loop
sub
push
or
rorl
inc
pop
xchg
leave
push
mov
popa
aas
imul
mov
in
mov
add
xor
lds
in
inc
sbb
fistl
push
push
addl
dec
dec
dec
jne
ds
lods
jbe
leave
sbb
ret
lret
xorps
loop
mov
mov
lods
dec
adc
jb
jecxz
mov
loop
popa
and
push
mov
rcl
js
repz
jmp
cmpsb
movsb
ds
cli
or
xchg
sarb
push
add
fcoms
loop
pushf
stc
xchg
pop
fidivl
adc
inc
loope
push
sbb
mov
cmp
shlb
fsubr
pminub
inc
push
and
fs
and
inc
inc
push
push
stos
hlt
push
xor
cltd
cmp
gs
mov
lods
and
adc
sub
loop
sub
pop
arpl
dec
cmp
mov
notb
or
and
mov
fsubr
sbb
xchg
out
pop
mov
fidivrs
mov
das
or
xor
dec
pop
or
push
xchg
dec
inc
daa
shlb
cmpsb
not
xchg
mov
mov
inc
dec
inc
inc
fsubl
call
divb
pop
fsubr
dec
sub
inc
push
fmull
stos
in
mov
test
jb
stos
shl
rcr
mov
and
xchg
jns
or
xor
xlat
js
loope
fbld
xor
nop
xlat
add
cmp
push
imul
xchg
pop
dec
mov
jbe
lds
cs
lods
jne
or
push
xor
int3
shll
mov
push
cmp
add
outsl
sub
xor
adc
dec
cmc
cmp
mov
cmpb
push
or
ljmp
mov
inc
and
fildll
mov
ret
or
iret
mov
shrl
cmp
adc
mov
and
xlat
js
jne
cwtl
in
stos
stos
in
fmull
fisubs
pop
cs
icebp
sti
lahf
inc
das
dec
cltd
mov
popa
cmp
shll
jl
ror
idivl
clc
std
out
pop
xor
mov
loope
pop
lahf
aad
xor
mov
fdiv
sbb
or
mov
lcall
mov
mov
les
in
jbe
mov
mov
sbb
add
pop
jnp
dec
and
mov
add
inc
push
pop
mov
cmp
mov
mov
add
outsb
mov
pop
sub
sbb
std
xor
and
mov
add
and
pusha
sub
pop
pop
decb
rcrb
mov
outsl
push
jb
push
dec
out
in
push
cmp
or
cltd
movsb
sbb
mov
lods
insb
das
inc
out
xlat
or
cwtl
push
sub
mov
scas
inc
outsb
pop
pop
pop
jmp
sub
pop
test
int3
jo
sbbw
push
or
pop
pop
leave
jecxz
xchg
jp
add
mov
push
pop
addb
lea
pop
add
inc
test
add
in
in
out
and
jb
mov
push
sub
fwait
and
sbb
pop
xorb
mov
fists
push
mov
cmp
inc
cmp
mov
fnstenv
pushf
dec
sub
jmp
out
and
and
dec
cmp
cmpl
std
mov
arpl
pop
mov
js
pop
arpl
xor
int3
cmpsb
icebp
add
addr16
or
fmuls
ret
adc
cld
cmc
push
add
ljmp
cli
or
test
pop
stc
pop
mov
stos
xor
mov
xor
mov
scas
stc
cs
addr16
pop
mov
dec
and
cmpsb
loopne
adc
les
jns
pusha
fwait
push
xchg
sti
stos
sub
inc
mov
aam
mov
cmpsb
aaa
inc
mulb
mov
aam
addb
dec
ja
jne
popf
adc
xchg
jecxz
cmc
jl
mov
test
iret
or
in
push
iret
fiaddl
xor
mov
lcall
and
aad
jg
orb
cs
inc
cmc
mov
fbstp
bound
pop
inc
rolb
in
mov
pop
add
in
pop
ljmp
adc
adc
add
out
mov
add
rcll
jbe
add
aad
cltd
fiaddl
loop
loopne
mov
lods
cmpsb
lcall
jecxz
sub
xlat
mov
lock
ljmp
mov
dec
mov
addr16
jp
push
xchg
clc
outsb
push
xor
xlat
insl
dec
lret
jb
adc
and
out
pop
loope
fildll
lret
push
xor
mov
xchg
and
mov
insl
xor
add
mov
fidivrl
add
jle
popa
add
lahf
pop
add
and
loope
pop
xchg
cmp
and
cmp
js
fisubrl
rorb
pop
push
xchg
jae
xchg
sub
cmp
add
pop
xchg
mov
das
call
call
es
mov
test
xchg
clc
test
scas
inc
enter
pusha
popa
push
call
outsl
ret
fcom
out
ja
add
sbb
es
repnz
movsl
pop
fdivs
push
push
push
mov
and
and
push
sub
fsubr
inc
adc
movsl
in
aas
mov
test
push
jb
mov
xchg
out
pop
jmp
aad
fs
mov
sbb
pop
mov
dec
call
ds
pop
and
dec
cmp
loop
jbe
divl
pusha
rolb
xor
stc
divl
insb
outsl
and
jle
pusha
add
or
std
ds
push
mov
sbb
mov
jns
lcall
push
inc
fs
add
in
mov
sbb
not
sbb
inc
cmpsl
jbe
les
cmp
popa
into
inc
out
mov
or
out
xorb
mov
movsl
test
ret
lahf
fimuls
push
jmp
shld
fisttpl
mov
fwait
mov
clc
xor
fsubrp
cmp
adc
pop
push
dec
add
xor
xchg
xor
jbe
sar
inc
movsl
subb
fisttpll
lods
call
mov
rorb
jo
jl
lods
test
addl
mov
cs
sub
repz
jecxz
jb
imul
push
std
cltd
sub
out
pop
pop
cmp
dec
dec
popa
ljmp
jae
arpl
nop
jbe
push
arpl
int3
mov
jnp
aam
adc
add
cld
rcrb
in
or
ja
sbb
lret
cmp
jno
add
sub
out
fcoml
leave
hlt
int
lods
lret
or
pusha
pop
stos
or
lods
add
mov
std
jne
cmpsb
jae
and
xchg
mov
jo
adc
aaa
stos
sti
test
call
shrb
jecxz
jmp
inc
ja
test
push
xor
dec
jp
push
scas
pop
out
fistpl
add
repz
xchg
mov
inc
cli
fidivrs
es
dec
subb
adc
int3
inc
sti
imul
cli
sarl
mov
or
push
mov
ljmp
pop
mov
sub
xor
ret
adc
push
adc
mov
jmp
and
mov
cmp
jbe
std
xchg
and
or
cmc
adc
mov
fisubs
cmp
sbbb
mov
xchg
and
jp
mov
daa
sbb
fmull
addr16
les
ffreep
mov
adc
cmp
cltd
je
clc
or
pop
ret
mov
bound
xor
ss
mov
mov
andb
outsl
dec
hlt
jno
pop
xchg
lock
and
jl
aam
inc
cs
mov
inc
mov
add
sbb
jmp
mov
mov
push
daa
inc
fildll
mov
rcl
xor
scas
xor
in
push
repnz
push
mov
pop
mov
push
iret
inc
mov
test
bound
or
push
mov
jg
fimuls
push
or
repnz
jge
sbb
mov
mov
ret
mov
pop
inc
adc
or
dec
dec
loopne
push
sub
or
push
stos
icebp
test
cs
lret
inc
mov
dec
fldlg2
mov
jo
pop
dec
pusha
pusha
lahf
test
roll
shlb
mov
es
fsubl
fldenv
loope
pop
mov
sti
cmpsl
sbb
mov
add
mov
ret
aas
and
xchg
inc
pop
dec
movsl
es
ror
add
jg
cld
xchg
pop
add
or
jbe
stc
call
sbb
dec
xor
inc
mov
mov
push
cmp
xor
sbb
repnz
xchg
add
pop
mov
or
or
out
out
mov
rolb
fisubs
jge
sbb
icebp
mov
mov
imul
or
sub
subl
cld
cmp
jle
sbbl
push
dec
mov
insl
inc
call
je
scas
rcrb
pop
jae
pushl
xchg
sbb
lret
jmp
mov
jo
dec
push
mov
jecxz
mov
inc
push
cmpsl
xor
xor
jnp
mull
ljmp
xchg
inc
negl
jnp
xorl
pop
dec
lods
fs
inc
xchg
jbe
sub
lods
mov
mov
scas
mov
xchg
pop
cmp
out
push
sbb
dec
dec
fs
iret
xor
mov
cmp
inc
dec
xchg
sbb
cmp
mov
mov
xor
in
pop
and
lea
sbb
mov
jg
lods
pop
dec
cmp
in
xlat
stos
add
cmp
popa
sub
movsl
xor
xchg
lret
xchg
pushf
sub
gs
push
push
ja
mov
mov
sbb
cmp
or
xchg
adc
ret
test
pop
pop
daa
inc
stc
push
nop
fdivl
dec
inc
setne
daa
dec
mov
ret
sti
cmpsl
add
sub
ret
jno
aad
scas
xchg
cmpsl
mov
stc
add
cmp
adc
push
sahf
mov
push
cmp
dec
mov
mov
movsb
adc
inc
inc
les
pop
mov
or
pop
js
dec
inc
cld
cmc
fstps
insl
jno
xchg
push
lea
lods
and
iret
shrl
sbb
cwtl
xor
imul
adc
inc
mov
pop
push
and
ss
addl
dec
and
push
inc
inc
lcall
mov
push
test
pop
inc
add
xchg
cmp
adc
xchg
adc
mov
divl
inc
jmp
int3
xor
jno
jo
fcomip
cltd
mov
sub
dec
xor
and
clc
jbe
cld
xchg
pop
xor
lahf
sbbl
or
mov
adc
out
movsl
test
jne
ret
sbb
xchg
aad
pop
fidivs
add
pusha
cmpsl
push
loop
adc
jg
push
pusha
xor
jecxz
daa
push
fistpl
jno
repnz
and
pop
push
jmp
in
fsubl
dec
cli
mov
aam
lret
cmpsb
push
jnp
js
in
loope
fld1
mov
fwait
les
push
mov
ss
or
fildll
adc
adc
sbb
xchg
push
mov
lret
jb
add
mov
adc
sbb
dec
push
mov
xchg
lret
or
pusha
aad
lock
jp
into
xlat
sbb
jns
mov
insb
popf
negb
xor
repz
loop
jmp
jb
cs
jo
sbb
ror
stc
scas
or
stc
add
in
sub
sbb
jbe
rcrb
sbb
jl
pop
sub
adc
xor
jb
sub
xchg
or
testb
push
mov
dec
icebp
ja
fildl
add
xchg
pop
or
pop
push
push
cwtl
cmp
pushf
pop
sub
and
sub
dec
cmp
nop
mov
fldt
popl
sar
icebp
loope
xchg
imul
push
shll
icebp
incl
popa
cli
mov
xchg
scas
scas
sub
lods
or
adc
lock
xlat
in
data16
lret
xchg
jne
mov
cmc
adc
into
test
sub
cmp
cmp
inc
inc
mov
vprotd
out
mov
orb
adc
stos
cmp
insl
push
sub
aad
jnp
mov
adc
mov
push
je
lcall
push
or
fldenv
jae
js
pop
mov
xor
adc
sub
in
sub
cmpsl
repnz
js
enter
pop
mov
addl
ficoms
or
ret
ret
push
subb
inc
in
pop
mov
bound
repz
iret
bound
mov
aad
inc
mov
or
xchg
pushf
xchg
cli
orb
imul
jb
aad
repnz
mov
sub
pop
call
cmp
add
mov
and
aas
test
inc
push
test
test
sti
xchg
dec
dec
ljmp
cmpsb
mov
aad
out
xchg
xor
mov
out
aaa
lods
out
fldt
mov
add
cmpsl
add
xchg
add
mov
jbe
xchg
movl
sarl
dec
inc
ret
scas
pushf
inc
out
arpl
das
aas
push
jae
insb
ret
aas
mov
pusha
pop
sahf
std
jl
loope
mov
subl
stos
dec
mov
jnp
dec
sub
jbe
ja
js
rolb
out
sub
shll
xchg
push
stos
roll
lret
out
call
insl
or
mov
mov
and
je
fs
sarl
fdivrs
sbb
cmp
sbb
lret
leave
sub
out
cld
adc
aas
jb
dec
aad
mov
leave
mov
les
xlat
nop
das
out
cmp
cmpsb
mov
jns
cmp
mov
scas
rcll
lea
pushf
xor
and
sub
mov
sub
jp
ja
lds
jl
sahf
xor
mov
xor
scas
decl
lods
in
nop
adc
mov
sbb
cmp
lds
icebp
popl
push
xor
cmp
pop
sub
arpl
in
xchg
sbb
cmp
sbb
push
cmp
mov
mov
mov
push
jge
mov
jbe
adc
out
mov
loop
dec
rcr
or
xor
add
fstpt
xchg
jmp
or
fnstsw
dec
adc
lock
pop
mov
shrb
push
pushf
sub
lea
scas
pushf
js
inc
sbb
in
cli
pop
mov
xlat
push
push
lea
mov
add
mov
push
push
pusha
xchg
inc
lods
cmp
ret
pop
mov
popa
cmp
loope
cmp
jg
fldt
mov
xor
jge
ret
push
mov
outsb
push
xchg
fs
jns
bound
arpl
scas
and
rcrl
sar
or
and
or
dec
fidivrl
or
mov
pop
xchg
mov
sbb
test
inc
jle
fstps
movsl
imul
sub
lgdtl
notl
fs
push
stc
inc
dec
or
mov
aam
jnp
negl
lods
idivb
andl
xor
dec
inc
adc
adc
mov
mov
add
out
test
test
pop
mov
inc
sub
mov
pop
pop
mov
insb
imul
jge
adc
pusha
into
call
xor
pop
sbb
sbb
fimuls
mov
test
int
pop
jmp
popf
out
adc
ficompl
ljmp
push
bnd
jmp
out
movzwl
pop
pop
aad
adc
aaa
outsl
cmp
xor
shlb
popf
pop
push
push
or
xor
in
cmpl
sbb
dec
int3
data16
or
loope
stc
test
lahf
repnz
mov
movsl
inc
idivb
sub
dec
nop
lret
cmp
aas
stos
xor
cmpsl
leave
jns
adc
ja
lods
mov
enter
in
repnz
xchg
test
jb
cmp
scas
cmp
movsl
stos
in
push
shll
call
mov
mov
adc
sub
sbb
fists
pusha
push
sub
mov
jns
jg
add
ret
loope
and
out
jmp
cmp
lret
push
jb
aam
push
lds
pop
xor
sub
xchg
in
cmp
sub
in
xchg
fwait
jo
icebp
dec
aaa
test
cmp
into
dec
cmpsb
cs
enter
call
fldl
xor
loop,pt
mov
scas
lds
scas
test
lock
movsl
pop
or
adc
pop
push
loope
push
or
xor
enter
mov
jmp
out
dec
addr16
fisttpl
sbb
test
ja
adc
in
jb
and
cltd
xor
mov
icebp
jle
inc
push
cltd
dec
ffree
mov
xchg
jle
mov
insl
pop
xchg
movsb
in
xor
out
xchg
iret
sub
test
bound
xchg
scas
out
push
leave
mov
adc
mov
scas
pop
xlat
fs
sub
andl
dec
pushl
jle
and
sub
std
cmpsl
pop
inc
lcall
inc
pop
subl
fs
xor
cltd
lcall
out
fucom
outsl
dec
dec
or
out
xlat
or
lock
dec
mov
sbb
sbb
pop
out
inc
test
insl
sti
or
sti
popl
cmp
xchg
es
lds
sarl
sbb
cmc
xor
push
mov
sbb
sbb
lret
pop
outsb
clc
or
aas
imul
sbb
lret
xlat
xchg
in
xchg
mov
data16
call
xchg
rol
sbb
popf
mov
loopne
inc
push
push
jb
mov
iret
push
mov
cmp
push
adc
or
xor
pop
mov
sub
lret
stc
mov
xchg
cwtl
pslld
mov
imul
pop
out
rcrb
push
pusha
dec
jb
sub
fsubr
scas
xlat
mov
xor
pop
or
xchg
bound
xchg
rorl
ss
and
test
aam
cmp
mov
mov
jns
adc
popa
push
and
add
xlat
jmp
mov
sub
and
in
xchg
xchg
das
push
mov
popf
bound
jnp
adcb
pop
push
jno
std
xor
jb
pop
bound
lea
sbb
adc
cwtl
sbb
scas
lret
scas
rcll
jmp
adc
pop
dec
mov
fcoms
movsb
in
push
in
jle
notb
stos
std
shrl
shlb
pusha
jae
jo
rorb
fs
popa
hlt
test
mov
dec
movsl
enter
xor
add
testl
dec
jmp
jge
mov
stos
dec
mov
addr16
dec
xchg
xchg
push
mov
push
mov
fcoms
inc
jmp
jae
inc
lods
test
sub
mov
testb
jbe
cwtl
or
fiadds
mov
ret
loop
push
or
mov
mov
mov
adc
imull
loopne
pusha
je
sub
das
test
repz
mov
mov
push
outsb
fldenv
pop
cmpsl
rcrl
push
push
data16
sub
sti
jg
imul
mov
add
add
dec
mov
or
pop
das
test
pavgb
int
xchg
es
loop
adc
sbb
arpl
fwait
sti
adc
rclb
cld
xor
mov
ss
pop
fisttpl
loopne
cs
pop
push
pop
sbb
mov
lods
rorb
movsl
lea
enter
pop
adc
sub
push
push
neg
sbb
mov
mov
fidivrs
test
das
std
cltd
sub
adc
hlt
andl
shr
fmul
pushf
cmp
mov
addr16
mov
jle
and
cmp
push
jno
nop
cmp
shr
out
jle
push
jns
and
stos
inc
outsl
cmp
scas
je
push
dec
andb
jae
test
into
int3
mov
mov
fdivs
fldt
dec
popf
aam
jne
bound
stc
lret
mov
lock
int3
std
gs
sbb
xchg
data16
cld
pop
dec
jmp
ret
push
dec
push
and
cmpb
in
mov
add
dec
xchg
cmpsl
add
ljmp
out
mov
movsl
xchg
dec
lds
xor
mov
call
into
loopne
mov
pop
jecxz
clc
mov
mov
mov
xor
cmc
lock
push
out
and
mov
imul
dec
jl
push
cmp
mov
mov
test
mov
enter
mov
or
call
andb
xchg
add
insb
mov
out
cmp
adc
loop
mov
cmpsb
mov
aam
out
pushf
std
dec
aad
clc
mov
sbb
aas
push
jecxz
mov
pop
pop
xor
scas
sbb
insl
lret
and
mov
xchg
scas
cli
cmp
fidivrl
daa
int3
gs
js
cmp
jmp
pop
dec
loope
pop
jno
push
fcomps
imul
aaa
adc
sbb
test
lret
iret
pop
adc
loop
push
test
add
pop
mov
and
in
mov
xchg
fisubs
push
push
sbb
pop
in
mov
xchg
addl
sbb
adc
add
and
push
icebp
xchg
dec
xchg
ret
mov
ret
movsb
int
dec
jns
mov
fisttpll
jno
inc
pop
cmp
in
sbb
inc
fwait
fcoms
call
fnsave
ljmp
cld
pop
mov
mov
repnz
mulb
xchg
cmp
fsubr
xchg
pop
mov
scas
popf
dec
jno
ds
mov
les
cltd
fs
mov
pop
pop
lcall
rorl
xchg
push
test
mov
jg
jmp
inc
sti
xchg
lret
sub
xchg
fistpl
lods
mov
jo
xchg
imul
or
jg
ljmp
jae
rclb
out
xchg
cmpsl
jnp
fs
push
scas
push
xor
fldl
setbe
das
or
adc
leave
test
data16
mov
loope
rcrl
stos
xor
mov
pop
icebp
xchg
push
inc
dec
adc
add
sub
call
mov
test
xor
inc
data16
rolb
push
or
mov
mov
cmovne
push
push
mov
test
mov
push
test
push
aam
jae
cld
popf
sbb
sbb
sbb
jp
xchg
pop
pop
icebp
dec
das
sub
sub
xchg
pop
mov
inc
push
and
jne
data16
sub
frstor
pop
pop
cwtl
sbb
mov
popf
aaa
ret
test
xor
add
adc
add
repz
nop
jge
fwait
mov
xor
push
sub
or
pop
and
pop
pop
idivb
cwtl
mov
or
test
mov
xchg
pop
xor
jo
add
or
jo
cmp
ret
nop
pop
cmp
adc
push
cmpsb
iret
cmp
mov
loope
jmp
or
fistps
inc
addr16
movsb
xlat
popf
mov
mov
cmpsl
xorl
ja
outsb
std
aas
xor
es
into
ret
inc
cli
pop
repnz
cmp
movsb
jecxz
and
xchg
sbb
add
jmp
cmp
lahf
pop
mov
inc
fiaddl
cmp
or
xor
cmp
idivb
shrl
jo
lods
movsb
xor
shrb
push
outsl
mov
sub
rcll
aad
pop
imul
js
or
or
adc
jne
add
add
imul
jb
fisttps
sti
mov
fmuls
insb
in
push
mov
div
jg
push
daa
mov
stos
ret
dec
xchg
ss
not
jge
mov
jnp
ljmp
daa
sub
jecxz
insl
mov
adc
and
ljmp
cmp
or
int
cmpl
lcall
push
pop
orl
mov
cmp
imul
in
dec
mov
ds
lahf
mov
fsts
out
dec
pop
icebp
lret
inc
outsb
cltd
inc
xor
mov
or
inc
jp
or
imul
out
mov
lret
out
je
xchg
jl
lcall
repz
sahf
nop
jle
xchg
dec
and
or
loopne
repz
lret
cmpsb
test
add
dec
lock
in
lcall
mov
popl
gs
pop
test
loop
mulb
out
mov
cmp
pop
in
psllq
dec
add
insb
imul
loop
and
sub
adc
les
mov
mov
movsl
push
xlat
and
add
lods
lods
adcb
sbb
insl
jmp
cwtl
int
xor
jecxz
aaa
xor
jo
je
and
adc
bnd
inc
xchg
lea
mov
movq
in
add
inc
add
xor
imul
inc
jg
stos
xchg
call
cld
test
js
daa
jmp
stos
loop
inc
pop
cmpsl
push
xor
bound
pop
sub
or
cmp
pop
push
insl
cld
inc
cmpl
scas
fisubrs
or
pop
ja
mov
fcmovnb
mov
inc
jne
sahf
cmp
pop
aad
bound
pop
lea
imul
jne
test
ret
pop
js
cmp
xchg
outsb
sub
les
mov
rorl
in
out
dec
mov
add
push
push
int3
add
adc
pop
ret
repnz
fidivrs
lods
xchg
ret
push
je
das
outsl
fcoml
adc
dec
lret
mov
mov
adc
dec
add
add
xor
fimull
sbb
cltd
ror
fs
sub
fisubl
cmp
xor
outsb
pop
cmpsb
xchg
aaa
inc
shll
adc
add
imul
xchg
dec
iret
xor
movsb
lret
sbb
pop
xchg
xlat
mov
jmp
xchg
lcall
lds
and
sbb
adc
stos
xchg
insb
mov
push
adc
sti
loope
jl
jns
mov
lds
pop
add
mov
and
sub
and
and
xchg
lret
cmp
pushf
mov
subl
addr16
xchg
outsb
lods
scas
repz
loope
scas
jbe
in
jmp
bnd
imul
arpl
xchg
loopne
mov
inc
out
movb
lcall
scas
mov
xor
inc
sbb
es
mov
cmp
cmpsb
add
jmp
imul
cmp
ret
or
sar
and
xchg
push
ret
cmc
add
daa
xor
gs
and
xor
mov
jnp
mov
jbe
loop
test
arpl
fstpt
lods
pop
push
lods
or
call
rcrb
adc
pop
outsb
adc
cmp
fdivs
dec
rcrl
inc
test
xchg
push
inc
sarb
add
rorl
je
dec
xor
loop
addr16
rclb
out
add
in
inc
out
rcll
and
pop
fcompl
daa
add
jb
push
jne
das
push
jb
jl
mov
orl
push
add
outsb
std
jl
jp
lods
add
jmp
bswap
xchg
push
adc
mov
mov
inc
cli
and
mov
icebp
lahf
dec
jbe
mov
and
adc
gs
lahf
pop
cli
test
clc
orl
les
and
inc
mov
sbb
out
dec
cmp
pop
cld
inc
in
loopne
call
subb
jp
fs
xor
push
add
je
sbb
outsl
mov
popa
push
decb
insb
cwtl
mov
aad
pop
pop
and
je
adc
das
add
pop
push
loopne
in
aaa
dec
pop
jge
jge
cltd
jle
aam
pop
pop
rcrb
data16
out
push
inc
add
pop
lret
push
aam
mov
xor
sbb
push
pop
or
movsb
rorl
jae
dec
cltd
xchg
sar
movsl
sbb
or
test
insl
mov
add
mov
adc
fs
stc
mov
push
mov
xor
shll
add
mov
test
mov
mov
xor
dec
mov
xchg
int3
push
sub
inc
sbb
adc
mov
adc
add
add
mov
xlat
pop
fsubrs
xor
in
xchg
das
push
jecxz
mov
mov
adc
mov
repz
into
fsubl
rolb
and
mov
or
fstpl
adc
cmp
add
sbb
test
dec
pop
test
jae
daa
xchg
sub
jo
dec
dec
stos
test
enter
loopne
fdecstp
test
dec
mov
leave
lock
insl
int3
test
arpl
mov
out
loop
insl
imul
cld
or
mull
pop
sbbl
jle
and
jmp
lret
and
ljmp
lcall
adc
fidivrl
sbb
inc
push
mov
xor
jo
add
fnstcw
rorb
mov
xchg
jae
sbb
push
add
sbb
jo
psllw
test
cmp
cwtl
push
das
or
test
rcrb
sbb
mov
rorb
inc
mov
cmovo
mov
aaa
or
lea
jp
push
ret
leave
cwtl
aad
out
xchg
xorl
sub
jl
push
mov
jge
fnstsw
aad
hlt
fnsave
inc
mov
push
pusha
in
iret
mov
ss
repnz
or
xor
and
scas
lahf
and
cltd
dec
addr16
adc
sub
pushf
mov
in
fdivs
in
mov
stos
cli
sub
pushf
outsb
pop
and
sti
lcall
pop
ss
test
stc
xchg
cwtl
clc
push
call
jnp
arpl
aam
jo
inc
scas
xchg
into
jnp
add
loope
dec
std
jp
aam
pop
movsl
fdivr
adc
and
cmp
test
and
test
inc
movsl
jbe
pop
pop
iret
daa
dec
mov
or
movsl
and
or
mov
pop
cltd
push
scas
fsubrs
push
xchg
mov
ja
adc
sub
push
in
cli
clc
mov
sbb
mov
jno
and
cmp
mov
rol
add
je
mov
xchg
push
jne
xchg
rclb
movsb
mov
into
xchg
sub
cmpsb
insl
or
add
mov
iret
lahf
xor
sub
cmpsb
xchg
cmpsl
mov
lret
sbb
loop
popf
pop
mov
or
insl
and
add
ret
jae
push
rorb
mov
lds
fdivrs
daa
jno
js
mov
adc
and
or
neg
add
movsb
cld
je
pop
jp
bound
xor
ret
loope
inc
fnsave
imul
xlat
pushf
cmpsl
mov
in
jl
movsl
xchg
decl
mov
div
pop
ret
xchg
sub
jmp
xor
add
insl
je
or
jle
mov
inc
movsb
pop
daa
push
mov
push
scas
and
or
add
jns
and
ds
xchg
adc
clc
frstor
adc
das
cmp
int
dec
std
je
pop
lcall
out
jns
or
lret
and
sarb
aas
negb
cmp
sar
pop
mov
push
mov
icebp
test
loop
ret
mov
sahf
out
cld
repz
mov
pop
das
testl
pusha
mov
lea
int
lods
push
mov
mov
lock
inc
mov
mov
lret
addr16
mov
arpl
loopne
pushf
and
add
mov
pop
ret
dec
repnz
outsb
inc
jo
and
imul
imul
addr16
dec
mov
fldenv
jecxz
popf
inc
bound
pop
movsb
adc
dec
test
int
mov
xchg
cmp
repnz
mov
mov
cmp
sbb
add
repz
jnp
adc
xchg
adc
sarl
mov
ja
inc
sahf
icebp
mov
icebp
xchg
xchg
adc
in
jp
xchg
shll
jo
or
movl
mov
inc
add
in
xchg
mov
jnp
dec
mov
jp
cmc
fnsave
jg
xor
cli
jp
sti
add
adc
inc
mov
jmp
pop
adc
push
jno
pop
dec
rcrl
nop
icebp
int
in
sahf
add
dec
mov
sub
push
mov
mov
or
xor
mov
pusha
adc
and
aam
push
fdivr
ret
push
dec
popl
inc
xor
xchg
and
gs
and
shrl
jbe
jns
mov
lret
negb
pushf
cmpsl
push
add
mov
xor
cs
mov
roll
xchg
xchg
sbb
mov
add
push
in
shlb
and
je
std
aam
jno
mov
push
sub
in
imul
jmp
pop
mov
inc
mov
xor
adc
mov
pop
out
pop
je
inc
xchg
hlt
mov
in
enter
ret
repz
dec
jb
push
ret
les
sub
rcrl
lock
jmp
push
pop
cmp
mov
mov
fidivrl
leave
add
xor
fnstcw
or
adc
fisubs
push
sbbl
cmp
aad
mov
and
sahf
pop
sarb
inc
in
mov
call
xor
push
sti
dec
mov
mov
pop
clc
out
shlb
pop
add
jae
cmpsl
mov
int
hlt
and
out
imul
aaa
std
cs
mov
into
cltd
xor
add
mov
dec
push
je
insl
es
pushl
xchg
inc
xchg
jge
jge
inc
je
subl
pushf
je
stos
shrb
xlat
hlt
pop
movsb
aaa
outsl
dec
push
lds
lret
movsl
mov
jl
pop
lods
aad
aam
cmp
add
repz
and
or
out
cs
or
jl
nop
clc
cmpsl
jecxz
push
mov
out
mov
add
out
in
push
and
mov
jae
mov
push
xor
ror
scas
addr16
fisubrs
jo
call
push
iret
mov
push
jae
xor
test
cld
clc
inc
dec
or
rorl
xchg
insb
sub
inc
sbb
pop
or
les
gs
push
jbe
jle
mov
fistpll
imul
push
pop
lods
push
pop
jb
inc
popf
aas
dec
test
sahf
add
pop
xchg
mov
call
xlat
out
mov
mov
pop
sbb
lahf
int3
lds
ss
and
sub
shll
andb
out
dec
dec
jns
iret
leave
stc
out
lods
adc
sbb
dec
cmpsl
das
xchg
imul
xchg
jnp
mov
mov
mov
mov
mov
xor
or
and
das
fcoms
xchg
add
push
loopne
mov
adc
adc
test
out
movsb
push
add
orb
mov
jbe
aad
push
adc
dec
shrl
loop
push
and
pusha
hlt
pop
fmull
xchg
icebp
sar
mov
add
add
sub
es
das
or
push
pop
xchg
stos
loop
ds
xchg
xchg
push
nop
fstps
xchg
fsubs
xchg
push
jo
xor
sti
call
sbb
loope
jle
aas
int3
pushf
cmpb
aas
mov
add
push
faddl
test
sbb
pushf
loop
std
imul
ljmp
and
pop
test
or
in
aas
cld
and
cmc
cmp
lods
inc
imulb
xchg
std
insb
mov
dec
push
fisttpll
mov
mov
out
mov
sub
mov
pop
dec
bound
mov
mov
and
ds
pop
add
call
xor
shrl
push
pop
lret
sub
fdivrl
test
or
call
push
mov
cwtl
pop
out
leave
xchg
cmc
shr
leave
lret
jecxz
outsb
inc
inc
jb
shll
sbb
push
xor
lea
mov
mov
dec
call
mov
hlt
fsubrl
cmp
cmp
mov
xorl
add
xor
imul
out
pushf
hlt
cmp
sbb
cli
or
adc
and
js
xchg
inc
es
inc
hlt
inc
int3
xchg
sub
adc
and
add
xor
fisubrl
add
es
notb
aas
cli
sbb
aaa
add
cmp
lahf
push
out
outsb
and
jns
aaa
subl
push
push
sbb
rcl
and
jl
or
aad
xlat
push
pop
ffreep
xchg
ljmp
sub
mov
mov
jbe
jmp
sub
dec
push
sub
rclb
inc
iret
test
test
nop
xchg
or
sub
xchg
add
xor
into
ss
nop
adc
aam
jmp
cmc
pop
sahf
in
fdivrl
lea
addl
pop
jo
push
iret
ss
imul
movsl
stc
jle
cwtl
icebp
cmp
lea
dec
inc
cltd
pop
xchg
ret
aaa
mov
stc
stos
dec
dec
mov
pop
cltd
sbb
cmp
pop
and
bound
and
mov
insl
mov
dec
sub
and
pop
je
or
jp
sbb
dec
push
dec
inc
data16
adc
jns
and
insl
leave
cmpsb
ret
cmpsb
loope
popa
adc
mov
mov
lods
xor
jge
ljmp
mov
push
cmp
pop
mov
icebp
push
arpl
in
add
and
jnp
mov
sahf
repz
stos
and
mov
fwait
xchg
add
lret
mov
ret
lret
jg
push
js
arpl
and
in
jl
or
dec
jae
lret
outsl
xchg
xchg
aas
dec
pushf
stos
in
inc
movsl
dec
mov
jp
cwtl
mov
mov
movsl
leave
lret
iret
clc
jge
cmp
pop
xchg
jp
mov
inc
hlt
sbb
and
adc
and
mov
mov
pop
aad
cmpsl
sub
adc
mov
mov
jnp
jp
jl
mov
push
pop
add
out
inc
outsl
push
and
mov
or
in
jmp
mov
mov
push
jb
aam
sub
adc
mov
push
mov
mov
mov
hlt
mov
xchg
jg
mov
xchg
movsb
add
mov
jo
movsb
push
loop
int
scas
dec
les
jb
push
inc
adc
adc
inc
lret
xor
out
fmul
negb
sub
dec
daa
fldcw
and
mov
clc
xor
push
mov
pop
cmpsb
xor
mov
loop
cmpsb
imul
imul
inc
loopne
popa
mov
jp
mov
xor
push
in
ss
in
adc
data16
and
imul
sub
je
aam
cmc
dec
loop
push
lret
dec
fidivrs
insl
lret
pop
xchg
std
lcall
mov
lock
jne
dec
outsl
in
jo
pop
jecxz
add
dec
inc
lock
fs
dec
pop
cmpsb
fists
push
mov
jne
fcoml
adc
push
sbb
mov
and
mov
jne
cmp
xor
mov
mov
outsb
lahf
xchg
dec
aaa
data16
add
je
in
lcall
push
cs
mov
pop
outsb
cmp
mov
or
xchg
sub
andl
cmc
js
mov
scas
xchg
in
arpl
loopne
sub
jno
xor
aas
lock
mov
gs
jmp
sub
mov
lret
test
push
add
push
xor
cs
scas
mov
lock
sub
das
mov
mov
cmc
push
enter
sti
sub
sub
lahf
ljmp
xlat
push
imul
pusha
pop
clc
jo
sti
dec
mov
cmpsl
in
je
cwtl
out
imul
mov
mov
mov
add
push
fnstcw
pop
rol
ret
push
fisubrs
or
pop
xchg
jl
imul
clc
mov
jle
rorl
popf
jo
loope
mov
adc
shlb
fimuls
push
lock
mov
xchg
lret
sbb
lods
push
sbb
orl
mov
dec
shlw
imul
scas
leave
stos
inc
shlb
rcrb
push
lock
jecxz
leave
pop
push
cwtl
push
add
inc
lahf
rcrl
adc
stos
or
jmp
dec
arpl
movsl
pop
jl
repnz
xor
xor
or
shrb
xchg
push
mov
cld
daa
je
mov
cltd
xchg
jbe
je
and
mov
mov
fists
je
test
dec
push
rcrl
jg
adc
jmp
mov
add
push
cmpsb
push
jne
sub
adc
push
cmp
xor
loope
xchg
ds
sbb
mov
jo
pop
arpl
pop
sub
adc
mov
loopne
xchg
rol
movsb
mov
subl
cmp
jae
pushf
inc
inc
jo
insb
xchg
cmp
fwait
pop
xlat
pop
push
les
jmp
iret
adc
cmpsb
mov
mov
outsb
adc
aas
fsubrs
xchg
jno
xor
pop
mov
popf
out
pop
mov
mov
leave
bnd
add
sub
in
dec
mov
insl
mov
loope
mov
int
jl
xchg
jecxz
mov
xor
sti
cmp
clc
add
dec
mov
adc
push
out
test
shrl
mov
pop
mov
ret
cs
push
popf
out
pop
push
inc
lcall
dec
fistl
sarl
int3
xor
xor
xchg
jae
xchg
jmp
subb
cmc
fsubr
jb
mov
adc
je
in
lret
psubusb
pop
test
das
fbstp
xchg
jae
or
xchg
aad
popa
push
or
test
cs
push
add
sub
jno
cwtl
loope
dec
int3
aaa
jl
add
mov
inc
push
jbe
ret
ror
mov
or
pop
je
adc
adc
bound
test
xor
imul
sbbb
push
inc
ret
insl
adc
imul
xchg
popa
and
imul
xchg
fxch
movsl
in
adc
gs
pop
lret
xor
aam
lods
mov
push
push
inc
ds
test
xchg
xor
aas
inc
dec
xor
pop
ss
jbe
lcall
popf
sti
xchg
imul
jl
scas
xor
cmp
call
dec
mov
ret
sbb
cmc
repz
out
nop
mov
stos
push
mov
pop
test
jg
or
mov
orb
inc
sub
test
cmc
dec
inc
mov
repz
sbb
lods
loope
cs
adc
fsubl
inc
mov
lahf
cmp
push
mov
xchg
enter
movsl
bnd
mov
mov
xor
loopne
je
out
iret
js
out
fistps
lods
or
jb
inc
test
mov
pushf
cmp
mov
cli
mov
imul
hlt
xor
fcomi
xchg
mov
mov
cli
std
sbb
clc
push
push
lods
push
push
fists
imul
daa
sub
xor
adc
adc
icebp
sbb
jmp
and
cmpsl
outsb
stos
sbbb
or
dec
sub
aas
ss
xor
jo
outsb
jns
loope
jne
mov
sbb
mov
in
cli
add
jle
clc
inc
jl
push
push
sarb
sub
xchg
pop
cmp
xchg
in
sub
xchg
jbe
mov
loop
movl
test
rcrb
cmpsl
mov
pop
loope
cmp
mov
dec
je
mov
repnz
daa
mov
js
jo
xor
mov
push
fistpll
cwtl
dec
mov
nop
mov
gs
mov
inc
frstor
jno
jo
cmp
cmpsb
inc
push
aas
call
es
or
push
adc
mov
pop
sbb
stos
movsb
xor
jle
jg
ret
jg
mov
jnp
incb
sub
xchg
cwtl
mov
arpl
and
int
popf
outsl
mov
pop
jmp
mov
dec
jne
ss
gs
jo
xchg
mov
popf
lret
xchg
cld
scas
sbb
jg
inc
add
adc
ljmp
sub
scas
mov
cs
mov
dec
aad
cmc
push
icebp
mov
ss
cs
push
xor
pushf
hlt
adc
xchg
ds
mov
push
mov
cmp
or
std
cmp
out
xchg
imul
int
sub
mov
and
mov
fwait
enter
movsb
dec
pop
cmp
sbb
pop
pop
dec
xor
xchg
mov
mov
lahf
je
and
stc
shll
add
or
mov
lret
cmp
sbb
inc
cmp
sarb
jb
jbe
adc
flds
lods
xchg
leave
arpl
sbb
and
xor
imul
addr16
rcl
mov
pop
and
push
int
call
out
in
mov
int3
loop
xchg
ret
xchg
inc
inc
xchg
mov
arpl
fsubrp
xchg
push
lods
sahf
jo
loope
addr16
lea
lds
mov
enter
fstpt
sti
stos
call
pushf
call
mov
arpl
out
xchg
shr
outsb
fnstsw
push
mov
je
lret
loop
aad
stc
xlat
push
inc
mov
inc
or
cmp
fildl
bound
sub
mov
arpl
and
xchg
pop
icebp
aaa
movsl
je
fisttpll
and
jne
push
push
out
fadd
pop
adc
out
xchg
lret
in
mov
jmp
and
lcall
jo
mov
jo
lea
pop
popa
add
in
and
cmp
subb
outsl
dec
sarb
xchg
lods
cmpsb
mov
jo
mov
cmpsl
test
test
lods
add
sub
jp
jmp
cld
sub
jne
inc
out
xchg
in
sub
sbb
sbb
shl
fcoms
inc
call
dec
repz
mov
ds
int3
adc
or
mov
aas
icebp
testb
outsb
in
xor
push
roll
adc
xchg
iret
stos
sti
mov
jo
test
ret
icebp
cmovno
jge
inc
cmp
sar
pop
inc
jbe
dec
mov
jo
arpl
outsl
mull
push
fisttpll
xor
out
add
aad
icebp
sahf
pop
in
adc
popf
cli
lret
adc
loope
mov
in
out
movsl
fcomps
or
repz
dec
mov
dec
mov
sub
dec
jl
sbb
xchg
and
loope
push
push
in
in
fldl
jb
mov
es
mov
add
cmpsb
test
cmpsl
xchg
stc
mov
mov
mov
jo
leave
shl
xor
shll
adc
xchg
fidivrs
and
jmp
dec
nop
mov
push
or
dec
pop
mov
push
mov
cs
mov
cwtl
out
push
push
push
jae
jns
outsl
cwtl
test
fmul
orl
xchg
lret
adc
cmpsb
into
fdivl
inc
jle
andb
jno
pop
mov
mov
stos
in
cs
mov
sub
jp
pop
sub
mov
dec
notb
lods
popf
sub
mulb
cmp
or
scas
xor
and
and
and
repnz
adc
or
push
dec
mov
cmp
loope
arpl
sub
xchg
sub
mov
jnp
push
fists
das
pop
lahf
loop
sahf
sbb
mov
fs
xor
lods
jo
mov
lea
mov
add
sub
or
lods
mov
xchg
jns
jne
adc
mov
cld
loope
outsb
loop
repz
rcl
inc
loope
jg
sbb
aas
stos
cmp
into
jns
arpl
popa
lock
xchg
dec
pusha
mov
mov
cmp
mulb
lods
int
clc
imul
jb
xor
fisubrs
push
std
bound
dec
mov
lret
ss
xchg
push
xor
aas
jae
push
adc
fstps
gs
xchg
cs
testb
jmp
es
mov
push
and
add
or
stc
cmp
jl
push
pop
lret
xor
push
sti
repnz
sbb
fcoms
sbb
and
stos
sub
ss
jae
scas
inc
shrl
xor
aad
mov
adc
mov
push
push
or
inc
sbb
pop
daa
jns
push
lock
mov
and
jns
inc
or
lahf
mov
out
test
repnz
mov
nop
add
jmp
ss
mov
out
loop
inc
insl
insb
out
push
sar
mov
push
push
arpl
fs
fidivrl
mov
mov
aas
jmp
pop
jno
and
dec
lahf
movsb
xor
add
cmpsb
popa
mov
jg
divl
mov
xchg
ret
ss
aad
pop
cmc
sbb
psadbw
out
ror
mov
movsl
push
pop
cmpsb
mov
sbb
das
jnp
loopne
adc
mov
mov
mov
mov
gs
sub
pop
mov
dec
or
and
xchg
nop
loop
insb
iret
test
mov
insb
lahf
in
insb
daa
js
jnp
hlt
outsb
adc
dec
sysenter
scas
mov
xchg
shlb
pop
inc
xor
lods
lcall
arpl
adcl
aad
adc
jne
pop
fsts
hlt
sbb
movsl
sbb
or
pop
cmp
jp
fsubs
push
push
xor
cs
xor
inc
arpl
fists
pop
shl
popa
decl
js
cs
call
sbb
push
pop
shrl
bound
daa
sahf
push
pop
mov
jbe
xor
mov
lods
outsl
mov
lcall
pop
scas
gs
data16
stc
mov
cmp
imul
dec
data16
xchg
cmpsb
out
push
testb
lods
cmp
mov
mov
and
sub
mov
loop
and
xchg
sahf
out
or
scas
xor
jo
mov
xchg
dec
push
aad
pop
lahf
sub
jb
leave
lea
jae
pop
push
lahf
fiadds
or
push
xor
adc
push
mov
repz
into
mov
push
repnz
rolb
daa
dec
test
jno
lods
pop
mov
sub
sbb
imul
mov
mov
xchg
add
push
sub
and
push
jmp
outsl
xchg
lahf
adc
push
aas
cli
mov
push
sub
sbb
imul
dec
aaa
test
lods
pusha
out
cltd
test
cmpsl
pop
sbb
pop
repnz
loopne
xor
mov
xor
in
inc
pushf
dec
std
sar
jmp
mov
fadd
fsubp
sbb
scas
pop
push
jmp
imul
shlb
int
xchg
add
inc
mov
pop
adc
add
xor
dec
mov
inc
imul
out
mov
mov
xor
jae
mov
add
psubsw
inc
ret
mov
ljmp
inc
or
mov
int3
inc
or
aas
aam
inc
sbb
pop
add
dec
xchg
push
and
xor
xchg
adc
nop
mov
testl
push
pusha
outsl
repz
fisttps
std
pop
in
mov
outsb
jecxz
loope
test
jmp
mov
rcrb
xchg
lock
or
sahf
jb
jle
clc
shll
in
adc
mov
mov
fbstp
icebp
jne
sub
xchg
es
stos
sarb
mov
sbbl
shlb
aam
aad
push
gs
sub
repz
sbbb
and
mov
dec
push
sub
mov
adc
mov
ljmp
jecxz
repz
sub
hlt
cmpsl
sahf
iret
popf
addr16
xchg
bound
sub
add
lret
push
stos
mov
lret
push
fisubl
in
fwait
into
xchg
and
sub
xor
cmp
or
cmpsb
mov
jle
scas
in
sbb
movsl
cmp
dec
lahf
dec
adc
jb
dec
shlb
mov
mov
cmpsl
sarb
jmp
mov
ficompl
cvtpi2ps
movsl
shll
jbe
fs
shl
dec
in
sub
add
xchg
sbb
lock
jge
js
or
xchg
jmp
xchg
dec
push
lock
bnd
fcoml
push
mov
ss
out
adc
pop
fsubrl
sbb
jb
out
push
movsb
xlat
ror
and
sub
sub
sbb
sub
cs
jg
adc
daa
lret
dec
outsl
loopne
out
sbb
dec
cmpsl
adcl
jl
xchg
leave
cmp
inc
dec
inc
and
sub
les
cmp
iret
int
les
mov
cld
out
xchg
imul
push
and
add
ljmp
mov
mov
add
and
dec
jbe
jae
arpl
push
add
cld
repnz
mov
repnz
or
fmul
mov
sub
pop
repnz
mov
leave
ret
ljmp
mov
sub
xchg
shll
cmp
sub
xchg
rol
loope
in
push
hlt
rcr
call
mov
mov
jp
scas
mov
test
inc
scas
dec
loope
into
daa
adc
jmp
in
loope
jnp
pop
lahf
testb
or
inc
cmpsb
fnstsw
add
ud2
xchg
cwtl
bound
lahf
call
js
loop
dec
push
rol
out
add
adc
testl
dec
pop
mov
lods
sub
jl
push
push
jl
push
pop
iret
sbb
inc
mov
sub
add
rclb
insb
out
pop
insl
inc
dec
sub
xor
xchg
sub
push
xchg
divb
scas
dec
test
add
and
mov
jne
testb
es
xor
lock
fisttpl
adc
push
dec
dec
popa
insb
push
subl
add
xchg
bound
addr16
add
std
mov
mov
imul
cmpsl
gs
fldt
xchg
xor
xchg
repz
jo
ja
push
call
mov
xchg
dec
xor
mov
fmulp
lcall
rorl
scas
xchg
mov
xor
adcl
push
imul
stc
lahf
insb
xor
imul
adc
mov
xchg
in
imul
out
mov
je
shr
loopne
adc
ret
imul
cmp
cmp
push
leave
pop
test
push
sti
lods
dec
aaa
aam
aam
push
sbb
jne
sub
sbb
xchg
ret
adc
push
sahf
mov
addr16
mov
bound
lds
pop
cmp
mov
mov
fwait
jp
mov
sahf
mov
sub
push
push
loopne
or
lcall
fwait
pop
jbe
cli
ret
nop
mov
out
test
jp
rorw
mov
push
stos
xorb
inc
or
lcall
cmp
clc
sbb
lods
cmpsb
pusha
mov
dec
pop
gs
test
sbb
and
mov
stc
ja
loop
inc
gs
xchg
mov
dec
push
inc
in
xchg
loopne
das
add
sub
lock
mov
xor
or
or
popa
pop
pop
and
xor
imul
mov
inc
adc
lret
jmp
popf
fwait
shlb
jb
jmp
pop
pop
jae
push
out
and
adc
repnz
lea
cmpsl
xchg
sub
sbb
cmpsl
push
ss
push
mov
mov
nop
push
push
jl
xchg
push
shlb
scas
cltd
xchg
and
xchg
arpl
cmc
adc
andl
mov
xchg
test
xchg
lahf
jno
push
mov
fdivp
jno
movsl
adc
jo
js
pop
and
les
add
ror
pop
or
lahf
inc
call
adc
or
add
inc
lret
repnz
loope
mov
rorl
clc
int3
popa
fstl
fs
sbb
ja
push
mov
nop
sub
clc
or
xchg
lcall
pop
jmp
aas
daa
inc
mov
fsubr
and
adc
loopne
rcrb
testb
push
xchg
jbe
inc
pusha
xchg
out
fdivrl
lea
xchg
sbbb
mov
aam
cmp
cmp
pop
sbb
testb
daa
aad
test
push
pmulhw
xchg
fists
fistl
scas
cltd
pop
ss
sub
dec
sub
inc
hlt
xlat
outsl
dec
sub
lahf
cmp
add
fisttps
fstps
fs
mov
and
imul
cmp
jecxz
adc
repz
aam
mov
fs
sub
add
shr
inc
adc
xchg
pop
sahf
test
add
out
push
leave
mov
jbe
add
xor
jae
out
pusha
aas
mov
pop
push
xlat
mov
adc
or
xlat
fisttps
das
repnz
out
or
xchg
iret
xor
add
mov
mov
dec
push
adc
push
mov
xchg
cmp
leave
xor
jp
ds
mov
fbld
sub
pop
insl
jae
ret
ret
ret
insl
or
inc
cmp
or
cld
lds
ret
fcoml
inc
ja
lahf
inc
in
das
lock
ret
dec
in
jp
jg
iret
inc
imul
mov
and
sti
push
xor
inc
mov
scas
into
lock
hlt
pop
inc
adc
sti
mov
pop
dec
adc
sub
or
mov
fwait
cmp
dec
aaa
mov
hlt
jo
mov
jno
lds
pop
repz
xchg
jl
mov
movsl
sbb
ja
lods
mov
pop
and
add
xor
decl
push
push
stos
mov
vshufps
sbb
mov
mov
mov
cwtl
aas
mov
fnstsw
lods
aam
xor
push
fsubrl
ja
repnz
jge
fwait
jns
cwtl
stc
dec
fwait
xor
repnz
fiaddl
jns
rcll
inc
out
loope
aam
lret
ds
push
insl
jmp
ret
mov
je
cmp
out
sub
jge
cmpsb
leave
fdivrl
push
out
xor
adc
jo
dec
rclb
ja
lock
jp
fldcw
pop
cmp
push
inc
xchg
insb
rcr
mov
out
cmp
pop
testl
rcrb
sbb
fcoml
jg
pop
imul
pop
daa
mov
inc
cwtl
sbb
movsl
call
add
clc
cmp
mov
minps
out
mulb
pop
add
jmp
data16
inc
cmpsl
mov
cltd
out
addl
xor
idivl
movsl
mov
sahf
out
inc
sbb
rcrb
jmp
xchg
push
repnz
inc
jae
dec
mov
fadd
mov
adc
xchg
dec
cmp
ja
push
out
js
inc
insl
mov
andb
jmp
les
jnp
lret
imul
mov
aam
sub
mov
je
jmp
mov
das
or
mov
push
mov
pop
mov
test
aaa
stos
mov
adc
insl
imul
ficomps
mov
and
aaa
push
gs
xchg
mov
flds
sbb
loop
dec
sub
das
lods
sahf
mov
or
call
xor
test
jne
sti
notl
and
in
push
dec
jne
adc
cmp
mov
int
ret
mov
add
dec
add
jnp
daa
fistpl
sbb
and
aaa
lcall
and
in
out
imul
or
sub
fstpl
movsl
xchg
push
ds
mov
jo
mov
cmp
jae
jecxz
push
mov
adc
add
mov
lret
sbb
xor
xchg
lea
into
imul
outsl
iret
jmp
pop
popf
pushf
dec
hlt
xchg
push
jno
push
jmp
adc
cld
lea
xchg
imul
dec
arpl
imul
std
movsl
sarl
test
lods
test
xchg
xchg
dec
cld
dec
ud2
mov
push
xor
pop
and
pop
inc
push
lret
mov
test
push
sbb
sbb
scas
xchg
xchg
mov
inc
fistpll
jge
mov
clc
mov
int3
mov
mov
out
add
cmp
fwait
es
loop
or
mov
out
xchg
push
mov
lds
ljmp
cs
icebp
inc
sbb
cmpsl
xchg
test
loopne
inc
cmpsl
add
jecxz
push
iret
lods
jle
fldenv
pop
cmpl
imul
loopne
pushf
add
scas
sub
mov
mov
jmp
adc
cli
mov
mov
lock
pop
and
sbbl
rcrl
out
incb
aam
push
xor
sbb
iret
mov
in
int
xor
push
rorb
rorl
jae
mov
mov
jp
ja
outsb
mov
out
cli
jg
or
and
stos
and
fmull
stc
mov
lock
xchg
andb
cmpl
pop
aas
ret
std
xor
mov
sbb
jae
nop
ret
dec
sti
jle
sub
es
sub
xor
in
pop
mov
negb
out
addb
pop
sbb
testl
and
pop
mov
xchg
and
in
cld
jb
cmp
dec
scas
aam
xchg
scas
and
push
cmp
jecxz
inc
pusha
fcmovu
pushf
push
testb
push
adcb
dec
sbb
adc
jo
data16
add
push
and
dec
pop
mov
pmaddwd
xchg
js
mov
cmp
in
mov
fnstenv
mov
rcrb
xor
lahf
mov
xor
jmp
arpl
jno
test
add
sbb
dec
jmp
inc
push
daa
ficoms
add
cli
jo
mov
fdiv
les
cmp
xlat
adc
nop
cmp
es
mov
sub
pop
push
adc
xor
lock
jb
imull
cmp
and
aad
or
lahf
jnp
arpl
xchg
and
aas
dec
sub
lock
inc
inc
std
dec
daa
xchg
add
xchg
push
sub
pop
movsl
in
and
xchg
mov
jnp
and
imul
sub
jle
xchg
jecxz
or
cs
mov
imul
jl
aaa
jnp
sahf
jl
mov
stos
mov
jb
adc
fisttpl
int
xlat
enter
push
xor
and
add
adc
xchg
xor
inc
test
lahf
jl
cmpxchg
insl
sbb
call
sbb
test
xchg
mov
pop
jnp
fisttpl
ret
jmp
stc
or
fdivr
js
ffree
and
fimull
rcll
mov
pop
xor
gs
les
ja
pop
stos
icebp
iret
out
mov
daa
dec
push
sub
and
sahf
dec
dec
push
add
xor
ss
out
and
mov
sub
add
cld
cwtl
data16
insb
insb
xor
adc
enter
hlt
test
lock
test
add
add
gs
or
cmpsl
js
mov
pop
mov
test
dec
jg
inc
inc
pop
pop
mov
sti
jae
icebp
js
jle
sbb
inc
test
sub
ficompl
je
or
ljmp
nop
cmp
mov
and
add
movsb
sbb
xlat
pop
adc
in
fsubs
aad
xor
test
fistps
mov
or
mov
loope
and
aaa
test
pop
outsb
push
je
add
xlat
cltd
in
adc
mov
sbb
adc
loopne
negb
push
addl
popa
icebp
notl
aam
out
and
ss
fwait
mov
test
sbb
scas
inc
mov
lahf
inc
fs
sbb
in
mov
xchg
divl
pushf
daa
fdivl
mov
mov
mov
daa
adc
xor
adcl
xchg
lods
xchg
outsb
dec
dec
mov
loope
dec
mov
xor
data16
loopne
out
jb
push
rcr
and
mov
mov
lods
dec
cmp
xor
test
push
xchg
cmpsb
push
mov
negb
sbb
sub
adc
cmp
fdivp
int3
add
test
mov
or
vxorps
xlat
dec
dec
push
cli
addb
mov
daa
lret
fdivp
mov
mov
sub
fwait
dec
leave
jecxz
out
jno
sub
push
push
sbb
xchg
ljmp
adc
push
frstor
outsb
lahf
popf
cmp
mov
cmp
lret
xchg
std
add
mov
ja
mov
cmp
jo
inc
pop
fcoms
lcall
jp
mov
cmp
adc
jne
xchg
push
mov
sbb
andl
push
scas
and
pop
jmp
mov
inc
xchg
cmp
xchg
in
pop
lret
cli
cmp
arpl
push
inc
je
push
loope
push
je
jmp
pusha
sbb
inc
ret
fcmovne
daa
xor
push
arpl
dec
repz
inc
outsb
in
sahf
inc
mul
jnp
mov
sbb
addb
fsts
add
andl
inc
jns
sub
cld
inc
mov
pop
jns
shlb
pop
jle
jecxz
pop
or
div
fistps
lret
je
pop
mov
outsl
test
bound
repnz
mov
scas
arpl
mov
add
push
jge
add
pop
and
lods
mov
fidivl
xchg
sub
jne
mov
push
mov
and
data16
pop
jb
jecxz
nop
popf
call
outsb
pop
loopne
mov
cli
mov
data16
pushf
jnp
inc
lods
cmpsb
notl
mov
pop
arpl
dec
fildll
pop
xor
repnz
cmp
add
add
mov
cmp
xchg
movsb
mov
mov
movsb
ficoml
sub
push
inc
fstps
mov
push
jg
testl
jmp
sub
sbb
xlat
loope
xchg
sti
sub
jnp
iret
repnz
jmp
movsb
arpl
xchg
jp
pop
xchg
mov
sub
lds
testl
in
jecxz
pop
data16
xchg
dec
lock
test
aas
inc
sbb
push
in
mov
inc
icebp
lods
xchg
outsl
ja
adc
inc
in
das
rol
cmp
in
xchg
call
jmp
adc
mov
or
xor
mov
mov
add
add
xchg
push
jne
scas
idivl
jne
std
push
add
pop
aam
repz
ret
cld
dec
sub
or
push
rcll
mov
out
pop
pop
pop
das
and
cltd
push
mov
push
out
icebp
jnp
ss
jp
cmp
orl
test
jle
lods
lret
cmpb
ss
pop
in
cmp
cmp
das
sub
daa
xlat
xor
hlt
or
scas
enter
jb
and
dec
dec
sbb
push
je
xor
shrl
cmpsb
sub
in
clc
cld
loop
jmp
pop
sub
sbb
xor
jle
add
add
push
xor
push
aaa
outsb
fstp
dec
scas
add
push
jmp
cwtl
mov
pop
or
idivb
fisubl
incl
out
mov
pop
lods
xchg
aad
add
pop
push
push
xor
fnstenv
jp
sub
mov
aad
out
imul
mov
shrl
pop
mov
jne
in
cmp
sarl
cmp
jbe
xchg
xchg
mov
mov
ja
mov
cmp
sbb
fisttpl
leave
sub
or
cmc
inc
dec
ret
mov
and
lods
adc
or
dec
add
inc
jmp
mov
jmp
and
ss
and
adcl
loope
add
adc
loop
jg
jb
lcall
fisttps
xchg
xor
dec
mov
inc
cs
dec
xor
sbbb
push
mov
push
xlat
lret
ss
or
stos
es
imul
pop
aaa
xor
push
mov
sub
mov
iret
inc
mov
fildll
fmuls
xor
inc
stos
popa
or
pushf
ljmp
insb
push
imul
rorb
cmp
incl
mov
fcomi
add
aaa
jae
sbb
icebp
xorl
nop
loopne
jnp
jbe
fstps
and
lcall
mov
cmc
into
push
shr
mov
sbb
mov
add
ds
lret
popa
cmp
jo
mov
aas
sti
jmp
sbb
xchg
leave
sahf
lcall
repnz
push
in
mov
mov
jge
or
mov
jae
and
xchg
scas
and
xor
and
mov
xchg
mov
insl
or
cmp
mov
fwait
xchg
add
pop
es
movsl
or
loope
dec
je
sub
and
rol
test
jbe
loop
jle
mov
jae
jbe
lret
xor
add
and
sub
test
in
add
mov
cmp
jl
push
xorl
inc
add
stos
in
pop
adc
jecxz
das
cmc
enter
push
push
mov
mov
stos
fistpll
cmp
xlat
cmp
daa
push
jl
jo
imul
mov
and
or
mov
and
and
pop
xor
ret
fwait
lods
aaa
jnp
fsubrl
mov
adc
in
ja
inc
movsl
pop
iret
cli
pop
xchg
mov
lods
lcall
inc
xchg
cmc
jae
scas
clc
push
adc
stos
shrb
dec
adc
loopne
pop
repnz
mov
ret
mov
inc
cwtl
lcall
sbb
lcall
and
pushf
push
cmp
fiadds
dec
lock
hlt
bound
xchg
jno
insl
mov
sbb
push
fcoms
pop
push
sub
and
xchg
test
mov
pop
xchg
xchg
aaa
jle
sbb
and
dec
aas
inc
negl
rorb
stc
nop
xor
sub
cs
movsl
pop
call
xchg
adc
ljmp
hlt
sbb
sbb
mov
dec
mov
mov
sar
aad
int
mov
loope
inc
cwtl
push
jg
mov
sub
gs
sti
add
repnz
js
mov
or
cs
xor
fsubrp
dec
pop
xchg
repz
fcoml
adc
aad
sub
cwtl
mov
mov
pop
sbb
push
rorb
adc
leave
add
mov
mov
mov
loopne
inc
mov
pop
iret
int
xchg
stc
adc
mov
adc
mov
inc
push
jbe
xchg
jecxz
les
sbb
mov
push
push
insb
ret
xchg
lods
add
or
leave
test
enter
xor
xlat
das
data16
pop
enter
in
ja
adc
dec
add
dec
nop
lcall
push
xor
jg
jbe
cmp
je
sarl
cmp
movsb
daa
mov
add
cmp
fadds
jne
fdivl
jecxz
movsl
insb
sbb
insb
rcl
int3
mov
and
add
cltd
sub
scas
cli
scas
xor
and
loop
imulb
push
jae
test
cmp
popf
push
loop
test
insl
cmp
jno
in
pusha
aad
mov
and
inc
xor
insl
dec
out
push
sub
mov
cmp
flds
xor
test
lds
pop
lea
push
or
mov
mov
and
ret
pop
es
xor
xor
sub
gs
fstp
or
push
sbb
aad
push
jmp
or
fiaddl
test
das
xchg
xchg
add
cmpsl
mov
dec
out
ljmp
mov
insb
jns
mov
dec
sbb
cmpsl
mov
pusha
dec
dec
iret
and
jmp
call
add
mov
call
inc
push
xchg
pop
cs
jle
aaa
sarb
ret
mov
jl
dec
push
test
sub
xor
lahf
dec
repnz
jns
xchg
mov
inc
mov
std
pop
test
popa
xor
fcoms
jg
arpl
add
adc
outsl
xor
mov
push
sub
lock
stos
test
mov
push
ffree
fbstp
clc
hlt
popa
loop
xchg
ret
hlt
imul
jge
mov
out
call
cld
mov
add
pop
dec
cli
mov
je
scas
or
scas
push
andb
xchg
loopne
adc
outsl
pop
add
xchg
cmp
and
dec
push
fxch
mov
mov
test
in
shlb
out
mov
xchg
hlt
outsb
adc
or
cmp
loope
adcb
xor
rcrl
inc
and
movsl
out
ja
subb
cltd
push
pushf
sub
add
cmp
leave
jle
or
enter
out
or
ss
pop
clc
push
pop
push
jl
lods
mov
mov
dec
fsts
lods
int
dec
sub
push
gs
xchg
imulb
cmp
push
cs
sbb
rcrl
insb
es
cmc
inc
cmpsl
jl
sbb
lcall
enter
or
in
out
fists
jg
push
mov
iret
pop
lods
dec
inc
jne
push
fcmovne
aas
outsb
daa
test
adc
sbb
sbb
sarb
cmp
repz
and
call
pushf
sub
lds
out
push
pushf
pop
test
cmp
xchg
ret
loop
daa
xchg
or
cmp
loopne
in
mov
testb
push
lea
push
in
arpl
vpmulhw
sbb
out
xchg
xchg
add
mov
pop
stos
and
nop
push
jno
pusha
inc
insb
dec
sbb
bnd
pop
lcall
and
push
orb
pop
sub
add
jl
adc
push
add
dec
fsub
jl
xor
xorl
pusha
pop
mov
push
lret
call
jae
jae
fs
rcrb
out
clc
sbb
idiv
adc
dec
and
mov
push
mov
inc
xor
or
jge
movsb
mov
mov
mov
push
iret
sahf
inc
or
fcmovnu
jmp
out
dec
in
test
lods
fbstp
and
or
jbe
ljmp
mov
cmpl
out
inc
popf
stos
repz
dec
lret
sub
cs
ret
mov
insl
scas
cmp
test
js
and
mov
fildl
pusha
das
cmp
out
mov
xchg
int3
sub
mov
xchg
gs
dec
int
fstp
mov
and
xor
insl
lahf
or
jmp
mov
sbb
adc
flds
pusha
rol
mov
inc
xor
stc
cmp
and
leave
xchg
cmp
cli
mov
cltd
adc
js
insb
pop
push
mov
cmp
gs
cmp
jle
lods
in
mov
sub
and
ljmp
dec
push
or
and
and
fmull
int3
xchg
addl
push
test
inc
stos
icebp
popa
lods
jecxz
pushl
cmc
int3
sub
jg
xlat
addl
sbb
inc
jle
mov
in
fsubrl
or
sbb
mov
loop
mov
add
jecxz
dec
add
test
gs
stos
stos
fsubrl
imul
jne
mov
dec
mov
mov
addr16
push
jmp
push
std
or
clc
xor
mov
add
movsl
xchg
dec
test
lods
add
adc
icebp
pop
and
call
or
movsb
leave
test
add
jg
fstpl
dec
pop
mov
inc
lcall
pushf
pusha
and
jecxz
xlat
in
fisubs
and
or
and
inc
push
xchg
out
outsl
sub
fidivl
lds
cmp
cli
mov
cmpb
add
cmp
lret
add
fidivrl
xchg
adc
rolb
jl
lods
sub
popa
div
sub
dec
test
xchg
and
dec
jne
rolb
push
scas
cmovb
int3
inc
adc
sub
pushf
add
mov
rorb
lret
jae
mov
jecxz
out
ret
mov
push
push
shlb
aaa
out
cmp
mov
mov
xor
test
cs
add
cmpsl
adc
push
mov
mov
xor
mov
mov
lcall
xchg
lret
jae
mov
scas
xchg
jecxz
mov
aas
repnz
inc
loop
mov
insl
insl
out
inc
jne
xor
jno
lea
sub
cld
scas
scas
fbld
dec
mov
sbb
fsubs
pop
sbb
outsb
cltd
outsb
rolb
lahf
lcall
cmp
lods
mov
dec
sub
mov
loope
push
pop
xchg
ret
mov
xchg
fwait
mov
and
and
loop
push
mov
loop
xchg
outsb
xchg
add
test
and
dec
pop
pop
ret
mov
mov
cmpsb
and
jle
push
pop
add
sbb
orl
jp
pop
xchg
dec
je
int3
mov
xor
adc
in
jg
mov
add
das
mov
mov
dec
mov
mov
sub
jle
outsb
lahf
dec
sti
jmp
outsb
scas
mov
mov
dec
dec
pop
sub
sub
mov
xchg
mov
add
cmp
jle
daa
idivl
dec
pushf
fidivs
pop
das
cmpb
xor
test
mov
fxch
sbb
aaa
pop
jmp
mov
or
jl
subl
insl
jb
cmp
dec
push
enter
or
cwtl
cmpsl
cmp
xchg
mov
fdivl
ret
fsubrs
imul
movsb
jg
mov
test
mov
mov
dec
je
mov
cwtl
mov
sbb
out
stos
pop
mov
inc
jns
cmpsl
xor
mov
into
xor
jmp
addb
dec
pushf
dec
inc
jge
rorb
dec
repnz
jp
sub
xor
sti
cmp
pop
cwtl
push
xchg
dec
inc
adc
rolb
xor
mov
cmp
xor
in
shlb
lcall
mov
andl
sub
and
ffreep
test
dec
arpl
and
xor
push
inc
cmp
popf
sbb
dec
lahf
pop
cld
jne
mov
jbe
es
es
xchg
jecxz
push
push
insl
or
loopne
cmp
dec
shr
aaa
xchg
xchg
out
pop
in
jg
test
ss
mull
dec
enter
sbb
sar
and
mov
movsb
pop
cmp
jo
push
or
and
cmp
add
push
setne
leave
push
fstpt
in
mov
xchg
shufps
cmpl
xchg
inc
jae
xchg
or
out
lock
test
jbe
jmp
loop
ds
fldcw
push
or
mov
je
dec
ret
lahf
jmp
add
loopne
jae
mov
pop
jb
imulb
ret
xor
fidivs
neg
in
lret
movsb
cmpl
xor
sbb
pop
jae
out
and
push
sahf
mov
sti
pop
mov
dec
dec
push
out
jg
dec
nop
imul
in
leave
dec
scas
add
push
pop
sbb
pop
mov
pop
adcl
and
movsb
data16
add
fildl
in
inc
cmp
aam
das
arpl
adc
pop
mov
lret
xchg
mov
lock
ss
rol
push
push
lahf
pop
mov
dec
jnp
in
jg
js
aaa
les
pop
mov
rorl
dec
xor
xchg
shrl
repz
movsl
in
dec
popa
cli
sbb
outsl
mov
lock
aas
xchg
adc
mov
inc
sub
lret
test
inc
decl
mov
ljmp
pop
rcll
dec
xor
ss
loopne
cwtl
inc
sti
add
clc
gs
pop
out
dec
repnz
dec
adc
push
ret
add
jb
cld
ljmp
out
dec
mov
fdivs
or
pop
scas
dec
adc
jae
push
pop
add
lcall
xchg
andb
cli
hlt
je
sub
test
cwtl
dec
rcll
pop
das
mov
ljmp
inc
sbb
pop
lret
adc
dec
xor
arpl
sets
test
loop
and
aad
stos
arpl
mov
imul
test
lcall
push
mov
inc
popa
add
mov
dec
pushf
add
shlb
in
adc
outsl
lock
leave
xchg
xor
loop
cmp
notb
fiaddl
in
out
sub
dec
lods
adc
adc
int3
rcl
ret
jb
xchg
jno
in
mov
bswap
movhps
jbe
sub
cmp
outsb
cs
movsb
pop
xor
mov
shl
jae
or
cld
out
mov
aam
cld
sahf
mov
push
push
push
lret
xchg
ret
mov
dec
pushf
sub
movsb
jb
sub
push
dec
and
push
adcl
sbb
sub
ret
pop
out
int3
shll
push
jp
jge
push
adc
adc
and
sub
adc
pop
dec
push
inc
stc
incl
insl
sub
test
jbe
fcompl
test
pop
sbb
loopne
mov
or
call
and
ret
dec
push
test
loopne
xchg
ss
out
outsl
icebp
push
dec
sbb
sub
neg
xchg
add
ss
jnp
fs
mov
mov
inc
pushf
mov
pop
adc
pusha
jl
mov
popf
adc
addb
mov
stos
push
pushf
jb
push
insl
xchg
leave
fcmovnbe
pop
inc
clc
inc
test
loop
fwait
adc
push
in
jne
add
jo
dec
jmp
in
cmpsl
std
jnp
in
mov
aaa
push
les
stos
jle
dec
and
int3
jmp
pop
aam
stc
daa
push
das
cs
mov
cmp
out
pop
inc
addl
push
and
call
sbb
in
inc
movsl
in
pop
in
and
int
pop
lods
xchg
jp
pop
mov
aaa
pop
sub
nop
pop
insl
mov
sbb
arpl
stc
xchg
mov
call
jo
sub
push
test
dec
iret
sbb
push
out
scas
hlt
cwtl
mov
outsb
inc
cmpsl
stc
sbb
sub
push
or
mov
xor
sub
fadd
add
pop
fisubs
into
xor
mov
outsb
mov
pushf
push
push
inc
pop
jecxz
sbb
inc
fwait
pop
xor
cmpsl
sbb
jb
sahf
and
out
jo
mov
inc
jae
sbb
mov
cmpsl
xor
insl
pop
arpl
push
adc
pusha
aam
cmp
rcl
fnstsw
or
jecxz
lret
cmpsb
adc
sahf
mov
movsl
cli
xor
cld
aaa
push
inc
dec
stc
mov
dec
sub
leave
stos
loope
xchg
pop
lds
mov
add
cmp
and
incl
shrb
sbb
cmp
in
int
push
pop
movlhps
je
movsb
sahf
out
push
leave
call
outsb
scas
cmc
mov
stos
adc
in
xor
jnp
cmp
test
stos
push
sub
dec
aad
call
cld
and
fisubrs
mov
jb
mov
dec
in
shrl
test
mov
and
inc
scas
out
outsl
adc
imul
test
lret
xchg
push
or
scas
hlt
or
mov
mov
add
inc
stos
andb
sar
cmc
leave
out
pop
outsl
mov
xchg
jecxz
add
lcall
dec
ret
repz
push
push
and
push
in
idivl
sbbb
push
inc
hlt
int3
sub
cmp
fldl
cld
cmpsl
jecxz
jp
ljmp
mov
scas
add
aam
sub
or
int3
popf
jmp
std
icebp
add
cmp
dec
nop
repz
ja
or
stc
mov
pop
fcomp
shr
xchg
mov
fnstcw
daa
xchg
sub
dec
sub
test
fcomps
adc
stos
adc
cs
mov
add
mov
cli
movsl
into
adc
lds
scas
mov
icebp
je
pop
int3
jo
inc
pop
inc
in
out
leave
cld
pop
and
mov
push
xor
in
fisubl
imul
ja
jb
std
jno
loopne
dec
push
loopne
sbb
push
gs
mov
and
mov
lock
cvtps2pd
sub
and
daa
cmc
insb
out
mov
xchg
and
and
les
jp
out
xor
inc
sub
sbb
fsubrl
movsl
push
jl
sbb
ret
mov
mov
out
mov
into
inc
adc
movsb
imul
call
ficompl
mov
sar
aad
pop
and
inc
jae
dec
dec
and
dec
rcrb
mov
rclb
inc
xchg
add
inc
std
cli
in
cmp
dec
inc
shrb
inc
push
xchg
stc
xchg
cmp
cmp
stc
wbinvd
ss
mov
and
int
xchg
dec
xor
mov
pop
mov
repnz
mov
and
mov
jns
cmpsl
movsb
out
das
mov
mov
or
sub
pop
jl
out
add
inc
iret
or
fcoms
addr16
rorb
pop
dec
mov
cltd
das
loop
test
lods
inc
clc
mov
mov
xor
jl
fwait
lret
js
test
dec
cld
int
mov
loope
add
xchg
xorl
pop
inc
insl
push
sub
xchg
and
adc
or
lcall
xor
test
mov
out
daa
push
sub
jae
cs
add
loope
jnp
shlb
daa
sub
jno
out
inc
lahf
outsl
mov
lds
push
popf
inc
imul
loope
xchg
movsb
ds
xchg
push
xchg
or
pusha
ret
test
jmp
cld
inc
imul
imul
data16
push
stos
sub
sub
scas
negl
inc
mov
pop
cwtl
imul
pusha
adc
test
lret
jnp
test
add
inc
lahf
push
loopne
lahf
cli
les
test
les
pop
push
fdivrl
shll
sub
cmp
cs
xchg
jbe
rorb
inc
jae
or
mov
mov
ret
enter
sub
lds
jp
cmc
or
cmp
dec
dec
shl
add
mov
aas
ret
lds
adc
mov
scas
in
shl
mov
test
push
xor
adc
jne
jecxz
pop
mov
inc
inc
mov
inc
imul
add
xchg
xchg
in
movb
je
or
push
and
inc
and
ja
pop
nop
fwait
push
lods
jl
push
pop
mov
loope
mov
jmp
xor
aad
jge
cmp
lock
test
or
add
outsb
dec
jmp
into
mov
je
sbb
and
andl
and
pushl
cmp
mov
jl
jle
push
adc
adc
std
dec
lods
cmp
dec
xor
sbb
into
icebp
mov
pop
jns
push
imul
out
fldt
dec
push
leave
aad
xor
in
push
out
sub
mov
jae
lahf
lret
or
dec
dec
ljmp
rcll
lock
xchg
int
mov
add
lret
fucomip
pop
scas
test
ds
imul
xchg
mov
mov
mov
mov
jge
stc
iret
std
dec
xchg
pop
push
mov
mov
add
mov
bound
fcomps
cmp
sub
out
ret
and
cmp
xchg
iret
mov
adc
in
sub
nop
dec
jmp
pop
out
repz
jb
mov
repnz
mov
cs
pop
loop
mov
enter
sub
out
gs
add
jmp
leave
cmc
push
adc
cmpsl
mov
inc
push
shll
std
push
and
xorl
inc
jns
pop
fnsave
out
pop
dec
xchg
mov
rorl
call
sub
mov
cli
shll
dec
cmp
inc
and
fs
or
andl
out
mov
shrb
inc
in
mov
pop
test
cmp
and
xchg
push
mov
add
outsb
mov
sbb
cld
mov
sbb
sbb
inc
das
or
adc
cmp
sahf
cld
outsb
lret
xor
pop
movsl
adc
lock
aaa
in
pop
arpl
cmp
stos
dec
inc
and
add
stos
in
jne
pop
fcomip
sub
dec
sbb
sbbl
and
and
cs
mov
iret
loop
xor
mov
jmp
pop
dec
inc
lods
fwait
push
out
incl
cs
cli
or
jbe
test
punpckldq
adc
loope
or
inc
and
es
addb
cmpb
push
inc
and
inc
pop
inc
maxps
mov
xchg
popf
lock
test
cmp
aas
pop
inc
push
sti
cmp
jne
push
inc
and
pop
pop
imul
and
mov
in
cmp
imul
ret
sbb
add
jbe
add
jbe
mov
sti
jecxz
lcall
mov
push
add
cmp
jecxz
dec
shll
icebp
ret
js
push
add
cmp
ljmp
mov
lcall
pop
sbb
cmp
cwtl
add
jnp
xchg
in
pop
and
das
sbb
and
shll
mov
stos
adc
mov
lret
or
jb
ficomps
aad
sub
jbe
jl
fcmovnu
cmp
sti
repz
add
cmpsl
rcll
ja
call
lcall
lcall
mov
pop
sbb
pushf
jp
pusha
push
js
inc
push
cli
fnstcw
vcvtdq2ps
inc
mov
repz
and
sub
pop
inc
outsb
xor
fldt
adc
fisubs
pushf
push
and
lcall
es
pop
pop
pop
inc
mov
mov
hlt
test
insb
inc
pop
xchg
inc
rolb
sub
pop
into
jg
outsl
jle
dec
into
std
fidivl
lea
in
sbb
jle
adc
or
and
je
lahf
and
inc
pop
jecxz
dec
loop
sar
sbbl
mov
and
push
jecxz
adc
jmp
orl
cwtl
pop
fistl
cmp
out
stos
push
push
cmp
jns
cmp
pop
sarl
adc
cmp
push
push
mov
sbb
cmovnp
mulb
scas
daa
jg
and
and
fstpl
divl
jmp
jecxz
push
and
cmp
add
cltd
pop
lret
cmc
ret
dec
jg
fbld
jge
mov
popa
orb
cmc
ds
push
xchg
add
jecxz
mov
add
call
jbe
or
mov
dec
out
jb
mov
mov
popf
pop
call
jg
out
or
or
xor
xchg
lea
rclb
scas
pop
and
sub
mov
add
cmpsl
out
sub
xchg
fistpll
adc
testb
ret
mov
icebp
or
push
jge
push
ret
ret
dec
das
sbbl
notb
iret
rcr
adcl
mov
movsl
cli
mov
jnp
push
stos
mov
stos
jecxz
or
dec
push
lock
mov
repz
iret
push
add
aaa
jno
mov
jno
add
adc
cmpsb
sub
and
cmp
cltd
sbb
mov
cmpsb
jge
dec
les
in
push
lods
insb
icebp
je
xchg
jns
xchg
sbb
mov
cmp
sub
jne
hlt
mov
lods
sbb
fwait
push
mov
les
fcomip
popf
mov
push
loop
cwtl
push
popf
and
mov
mov
pushf
mov
int3
sub
ja
fidivs
xor
inc
sti
aas
jae
js
xor
shl
je
pop
or
pop
inc
popa
push
ss
gs
sbbb
ljmp
push
xchg
out
mov
bound
pop
ret
stos
inc
cld
dec
cmp
xchg
or
push
addr16
into
test
jns
imul
push
ret
pop
mov
mov
inc
adc
insl
lcall
mov
dec
adc
mov
xor
sahf
fldenv
outsl
mov
sbb
sub
sub
push
mov
mov
pop
inc
mov
fs
and
je
or
lods
mov
scas
adcl
mov
repz
cmp
fldl
xor
cmc
cmc
adc
mov
push
jp
inc
test
cld
pusha
loop
jns
out
ds
push
sbb
mov
shlb
push
or
notb
fcmovne
mov
ret
xor
xchg
arpl
negl
jb
aam
mov
or
ret
addr16
negl
sarl
mov
insl
int
je
outsl
push
push
int
sbb
pop
test
sti
xor
mov
sbb
and
repnz
idiv
and
cs
jg
test
xor
into
jae
adc
mov
add
pop
pop
fimuls
dec
pop
loop
test
dec
pop
add
mov
jecxz
pop
pop
adc
push
xchg
icebp
test
sarl
aas
pushf
mov
mov
cmp
xor
insl
loopne
jae
and
iret
sbb
mov
in
test
stos
andl
das
sbb
or
ret
push
aas
pop
or
sbb
push
aas
sbb
outsb
mov
andb
xlat
jge
into
scas
pop
cmp
pop
shll
popa
aas
ds
mov
pop
aas
xor
popl
xchg
mov
aad
xchg
mov
call
xor
es
cmpsl
push
push
repz
sub
or
mov
xlat
sub
push
cld
mov
sbb
inc
aas
jo
and
aaa
inc
std
cwtl
mov
into
cmp
fcomps
adc
popa
test
push
mov
jl
das
sbb
push
enter
fs
mov
jecxz
loop
stos
dec
pop
mov
xchg
pop
bound
mov
push
push
ljmp
cmpb
mov
mov
ss
mov
int3
or
cmp
call
popf
fwait
stos
sub
repz
and
mov
imul
ja
mov
mov
iret
insb
jbe
inc
sub
neg
and
sahf
loopne
cmp
mov
xor
and
push
mov
cmpsl
dec
les
shrb
inc
push
push
jl
insl
sbb
sahf
sub
popfw
stc
mov
jno
aam
or
aad
shrl
cmc
bound
xor
inc
dec
mov
xchg
mov
idiv
aam
addb
jge
iret
lock
jb
push
popa
xchg
cmovo
fs
or
push
pop
push
or
das
inc
and
mov
inc
or
jecxz
movsl
mov
dec
aad
jp
aaa
pop
cmp
and
push
adc
movl
mov
sbb
sti
out
mov
aad
clc
jmp
push
mov
mov
ljmp
xchg
inc
imul
mov
mov
xchg
jnp
orb
inc
jbe
pushf
test
adc
mov
lods
out
aaa
cmp
pop
nop
xor
rcrl
sub
mov
mov
ljmp
add
xchg
dec
sbb
mov
fwait
inc
xlat
hlt
cmpsb
and
dec
lock
jle
popa
add
inc
xchg
xor
jg
or
ret
fldcw
stos
adc
jne
mov
xchg
sbb
push
xchg
mov
int3
xchg
scas
sbb
call
mov
push
in
pop
daa
or
jne
movsb
lods
adc
inc
sbb
push
jne
push
mov
jecxz
mov
shr
lea
jmp
roll
and
xlat
fdiv
std
fmull
outsl
addr16
inc
add
adc
mov
adc
inc
std
sbb
dec
jge
jmp
call
or
ss
ds
dec
adc
stos
cmp
popf
xchg
push
xlat
cs
push
stos
hlt
lahf
mov
xchg
jne
and
mov
xor
fnsave
xor
test
pop
cmp
nop
inc
mov
ret
lcall
mov
cmp
ss
lods
leave
jbe
mov
nop
daa
jle
push
adcb
fbstp
xor
loop
ss
into
jbe
addr16
ss
push
inc
leave
xlat
mov
sti
jns
test
mov
pusha
pop
xchg
pop
sahf
inc
ljmp
dec
inc
cmpsb
lods
cmp
inc
movsb
mov
sbb
outsb
stos
ja
xchg
andb
xchg
fwait
shl
imul
andb
movsl
dec
mov
sbb
pusha
lods
mov
inc
fisubrs
idivl
and
xchg
aam
sub
adc
mov
inc
je
xor
js
mov
lea
cwtl
cltd
jg
iret
cmp
into
push
xor
pusha
push
decb
push
mov
rol
mov
lock
mov
rcr
xchg
and
shrb
fs
adc
adc
les
in
pop
xor
mov
or
subb
adc
daa
cmp
xchg
and
mov
push
xor
sbb
adc
jbe
repz
leave
into
mov
insl
sbb
and
sbb
cld
loope
mov
movsl
xchg
mov
adc
add
nop
mov
mov
jnp
lcall
mov
xchg
push
lods
add
cmp
jge
rolb
mov
or
inc
lods
sub
cmpsb
mov
jle
fwait
jae
fsubl
test
xor
sub
and
mov
popa
push
popf
jmp
paddsb
mov
sbb
adc
and
or
inc
sub
inc
ret
inc
stc
add
fxam
push
jg
push
fcompl
es
jno
mov
inc
loop
out
neg
icebp
mov
xchg
jne
dec
pushf
inc
xchg
xchg
popf
icebp
fs
sbb
sbb
int3
stos
mov
ja
inc
push
push
jmp
movsl
loopne
icebp
xor
insb
insb
inc
ljmp
add
fsubl
dec
mov
mov
dec
in
cli
pop
notb
push
or
ds
clc
jno
jecxz
add
mov
fs
in
sbb
sbb
fsubl
pop
test
testb
and
mov
inc
test
test
out
jecxz
aam
push
sub
shrl
xchg
out
gs
in
das
test
and
test
pusha
push
cwtl
jo
pop
loope
dec
xor
cmpl
xor
jne
cmp
inc
insb
mov
sahf
inc
sub
sbb
addr16
cmp
inc
movsl
or
mov
add
xor
and
xorl
rcrl
mov
xor
ss
cli
setnp
mov
mov
rcrb
filds
mov
bound
lock
test
cmp
movsb
xor
mov
sub
adc
rorb
insl
mov
in
cmpsl
mov
jae
ret
push
push
aas
or
cmp
aas
test
add
pushf
arpl
leave
scas
xchg
push
mov
mov
pop
loope
mov
scas
aam
pop
and
mov
sbb
xchg
pop
sbb
enter
ss
xor
mov
fsubr
lret
jp
jo
dec
push
nop
int3
sub
aaa
dec
ds
xor
or
inc
stc
xchg
add
loop
and
int3
ds
in
ds
inc
sbb
mov
mov
xor
jne
setae
rol
pop
sub
fsubrl
cmp
bound
insl
cwtl
mov
out
imul
pop
leave
ret
pop
sti
inc
roll
and
rcl
push
data16
dec
dec
or
push
adc
jbe
dec
add
cs
movsl
jo
insl
mov
sbb
fcompl
jecxz
adc
mov
cmpsl
js
mov
inc
les
ja
iret
jno
jl
call
das
ljmp
fstpl
out
sbb
xchg
cs
aad
bound
mov
mov
mov
imulb
pop
mov
mov
icebp
sbb
mov
stos
test
lret
jae
jns
hlt
bound
jge
push
aad
add
xchg
and
sar
push
outsl
mov
lea
sub
xorl
cmp
fisttpl
out
scas
js
mov
rcl
xchg
dec
fsubr
mov
xor
ret
mov
and
dec
popf
cmp
rol
jo
loop
inc
and
jb
xor
int3
cmp
mov
mov
dec
fstpl
sbb
dec
ljmp
xlat
lret
sbb
xchg
jb
mov
int3
mov
js
mov
cmc
jle
neg
dec
push
add
cmp
sahf
jge
pop
cmp
ljmp
add
loop
pop
pop
mov
shlb
lods
sbb
test
jecxz
inc
pushf
mov
repz
icebp
fxch
inc
pop
aaa
arpl
xor
sub
outsb
jmp
inc
inc
add
dec
or
cs
xlat
insl
cmpsl
jecxz
es
lret
fs
mov
xrelease
test
mov
or
dec
inc
nop
fstpt
daa
cmc
shrb
sub
add
fdivrl
mov
aam
scas
cmp
cmp
mov
scas
xor
push
cltd
cmpb
daa
adc
outsl
mov
push
mov
xchg
lcall
adc
dec
jmp
aas
dec
xor
push
inc
add
test
mov
inc
lods
loopne
and
out
jp
test
mov
shl
stos
dec
inc
test
cmp
stos
or
sbbb
sub
jg
dec
inc
roll
loop
iret
int3
push
inc
imul
ret
sarb
aad
cmpb
adc
stc
xchg
xor
fwait
stos
mov
xor
lcall
or
push
pop
shlb
cmp
leave
cs
lcall
divb
pop
pop
insb
mov
pushf
mov
shll
sbb
lds
push
fnstcw
xor
dec
jae
and
bound
test
jp
adc
iret
sbb
adc
push
int3
ret
scas
xchg
scas
lret
push
frstor
movaps
cli
fcomps
and
pop
iret
push
mov
add
sbb
dec
pusha
test
fidivl
pop
ficoms
sti
imul
mov
sbb
imul
test
sbb
fistpl
ljmp
lret
jnp
les
push
cmp
dec
flds
ds
js
xlat
into
xor
mov
dec
cld
cli
add
loopne
scas
int3
aad
sub
push
xchg
xor
or
xrelease
jo
adc
out
xor
fnstcw
xor
cmp
lret
cmp
and
ljmp
mov
clc
xor
adc
std
inc
sti
xchg
test
jne
out
test
idivl
adc
adc
mov
pop
cmp
dec
orl
dec
push
add
in
movsl
mov
mov
xor
loop
cmpsl
jno
loopne
pop
mov
mov
push
or
insl
jg
xchg
pop
add
imul
icebp
mov
mov
dec
push
pushf
in
fwait
lcall
sbb
push
and
insl
pop
shl
mov
mov
jne
out
mov
mov
cmpb
outsb
sbb
mov
sub
xchg
loopne
cld
xchg
pop
mov
les
inc
dec
and
mov
inc
dec
std
jl
cli
arpl
fiadds
xor
add
aaa
jnp
dec
nop
mov
jns
cmp
cmp
sub
mov
push
jp
in
and
jo
sbb
xor
jne
xchg
mulb
jno
cmp
xor
mov
imul
push
xchg
cmp
push
cmp
dec
shlb
ds
sub
int
ds
and
pop
add
in
xor
lock
and
inc
jno
ljmp
enter
inc
xchg
in
fcompl
push
xchg
test
stc
or
mov
mov
aaa
sbb
xchg
lret
ret
add
in
cmc
adc
jle
sub
sub
fisubrl
popa
pop
jl
dec
data16
or
adc
jmp
test
loopne
mov
std
mov
ret
or
shl
inc
test
mov
sti
frstor
adc
xor
and
shll
push
cltd
pushf
outsl
fs
mov
pop
das
lods
aas
mov
jecxz
sub
stos
jp
into
fimuls
nop
pop
cwtl
jno
jne
cmc
lds
lret
pop
ss
mov
adc
aas
jmp
idivb
jb
inc
sub
outsb
cmp
pop
sbb
aaa
inc
cs
loop
addb
arpl
xor
imul
in
je
push
in
or
or
lea
jle
push
scas
xor
fnstcw
push
jg
xchg
mov
cmp
lcall
jbe
mov
xor
loopne
lret
shr
bound
mov
cmp
out
mov
xchg
sub
dec
fcoms
lret
popf
cli
int
push
mov
fistpl
dec
mov
jle
aad
sti
scas
std
dec
idiv
outsl
mull
cmp
jo
das
outsb
shrl
cmpsl
jno
sub
sbb
mov
outsb
je
xorl
mov
sbb
fxch
clc
call
pop
inc
jo
xor
xor
xor
jmp
push
jle
pop
add
bound
sahf
and
add
imul
push
dec
mov
pop
lods
imul
incb
pop
and
out
rol
aam
adc
push
pop
mov
in
mov
sbb
jmp
sbbl
cld
jg
insl
mov
push
inc
lods
pop
popa
cwtl
fldl
rorl
cli
andb
cmp
jae
lods
divl
dec
push
jmp
cmpsl
inc
test
xchg
xchg
movsb
and
inc
pop
dec
add
addr16
push
jb
jbe
adc
jb
sahf
push
testb
sub
push
inc
mov
test
mov
jns
fnstcw
sbbb
imulb
push
dec
cs
ffreep
je
mov
adc
push
mov
repnz
cmc
ljmp
mov
mov
pop
mov
jmp
repnz
pop
jb
data16
divb
jb
push
cmpsl
out
xchg
push
mulb
mov
push
mov
add
lods
cmpsb
in
hlt
and
js
mov
sub
mov
push
xor
push
js
mov
jge
adc
mov
or
sbb
and
add
stos
fcoms
xor
shll
fdiv
outsl
inc
movsb
sbb
aam
mov
jbe
or
pop
push
and
addr16
int3
cli
aas
sbb
xchg
lret
xchg
or
enter
mov
movsl
test
lock
push
pop
ja
xchg
jo
fdivrl
lods
jae
fsubrl
dec
xchg
addl
xorb
mov
lahf
add
cmp
xor
add
jns
ret
sub
or
cs
pop
add
cltd
dec
pop
pop
int3
subb
ret
por
sbb
cs
mov
push
daa
cwtl
fcmovne
repnz
push
mov
mov
add
loope
xchg
and
out
test
out
jns
outsb
lahf
mov
int
sbb
push
xor
xchg
dec
call
test
push
test
aad
into
dec
pop
arpl
jns
push
test
adc
mov
push
add
mov
stos
test
aam
rcl
push
lods
std
and
lods
imul
sbb
push
mov
mov
mov
rorb
cmp
mov
pop
cwtl
cmp
inc
mov
dec
into
sub
mov
pop
dec
rolb
push
and
mov
ret
xchg
flds
in
mov
sbb
enter
and
mov
stos
mov
sbb
out
shll
pop
add
test
push
adc
pop
jbe
cmpsl
rolb
xchg
cmp
xchg
mov
mov
stc
mov
cltd
cmp
mov
or
and
push
and
subl
xchg
pushf
push
lret
icebp
adc
cmp
bound
xlat
add
push
adc
pushf
push
test
xor
stos
mov
ficoml
aas
jo
orb
cmpsl
xacquire
fisubrl
xor
arpl
testb
jg
mov
fstps
mov
addb
mov
or
repnz
dec
sbb
mov
lret
scas
mov
sbb
je
xor
adc
rcr
jge
mov
cmp
pop
leave
imul
mov
aam
dec
gs
call
shlb
inc
fmuls
dec
jg
loopne
push
jmp
xorl
in
sub
je
mov
sahf
cmp
xchg
std
outsl
icebp
testb
out
mov
cmp
je
mov
daa
cltd
jle,pn
mov
inc
jb
push
sub
push
gs
fcmovbe
pop
pop
push
jge
arpl
sbb
mov
push
inc
fistpl
ja
out
shll
icebp
jae
stos
popf
pop
and
repnz
mov
xor
fcmovu
jbe
mul
call
out
cwtl
sahf
mov
fcomps
mov
and
insb
lea
cmp
fstpl
inc
pop
mov
scas
fildll
mul
adc
inc
inc
xlat
sub
sbb
add
lods
mov
je
pop
stos
mov
cmp
and
cs
out
pop
or
out
iret
aam
jns
jl
sub
adc
pop
adc
sub
cmpsl
jmp
sarb
sub
jnp
mov
inc
in
lret
jbe
mov
lock
cltd
gs
int3
mov
stos
jmp
outsb
mov
jle
adc
mov
add
cmp
and
lods
xlat
dec
fistl
and
sbb
jmp
test
push
jbe
add
dec
enter
pop
xchg
out
shlb
or
mov
xchg
mov
bound
arpl
adc
cmc
push
or
js
sbb
je
add
test
dec
cmpsl
mov
xor
jecxz
out
js
jl
add
nop
ljmp
test
cmp
mov
xor
xor
pop
inc
ss
jbe
jns
mov
sbb
shll
cmpb
pusha
and
pop
sarb
dec
popf
aaa
mov
fcmovne
data16
ret
stos
out
or
inc
clc
andl
rcll
sahf
cld
or
clc
mov
xchg
cli
mov
pop
cmp
xchg
pusha
adc
push
push
in
adc
loop
add
sbb
mov
pop
pop
inc
adc
mov
cmpsl
pop
mov
inc
movsl
xchg
fisubrs
push
push
je
pop
sti
adc
add
call
mov
pop
xor
push
or
or
push
fidivrl
je
in
in
or
test
mov
xor
lock
xlat
mov
mov
enter
mov
imul
lea
pop
cmpsl
mov
enter
flds
jo
push
out
loop
add
into
sahf
or
cmpsb
push
fcompl
jl
jno
or
pushf
xchg
daa
jb
repz
loope
xchg
das
pop
jo
out
sbbb
aas
jg
sahf
or
dec
repz
xrelease
push
xchg
loop
sub
sahf
shlb
mov
shrl
ret
dec
pop
lds
mov
loop
aam
aas
or
ja
inc
mov
pop
aad
jb
call
sub
ret
adc
jnp
fidivrs
repz
cs
mov
outsb
cmp
mov
movsl
xchg
fcompl
mov
pop
push
loope
mov
les
movsl
dec
pop
test
fstps
inc
ds
movsl
shrb
ret
icebp
sub
xor
pop
cmp
pop
add
add
dec
jno
and
adc
push
pop
sub
repz
popa
add
push
or
shrb
out
dec
iret
movsl
add
push
leave
push
sbb
fidivrl
aad
jb
adc
roll
test
pushl
cmp
sbb
lahf
adc
push
dec
fsubrl
callw
jge
aad
fsts
cmp
xchg
sbb
add
lea
fbld
stos
mov
fxch
push
repz
adc
sbb
xor
in
sub
mov
addb
clc
xorl
out
addr16
pop
out
cmc
xchg
mov
rcl
xchg
scas
mov
add
leave
sub
adc
or
mov
dec
jno
andl
push
xor
sub
orb
dec
andb
and
pop
sbb
push
fwait
sbb
es
and
push
adc
sub
int3
add
loop
popf
stos
movsl
leave
cmpsb
sub
push
fists
cmc
add
push
push
sbb
je
mov
mov
adc
mov
pusha
push
jecxz
js
push
ds
setns
fcomps
das
sbb
in
std
add
add
stos
push
mov
lods
sbb
adc
int
inc
movsb
js
mov
fwait
xorb
mov
mov
cld
mov
push
ror
mov
test
xchg
dec
adc
add
and
pop
test
int3
in
dec
outsl
mov
or
sarb
jo
bound
loop
push
or
push
mov
lahf
stos
xchg
xchg
rclb
addb
xor
cmp
cmp
pop
inc
add
mov
mov
mov
mov
movsl
adc
insb
mov
xorl
cld
dec
mov
xchg
adc
or
lcall
sbb
dec
inc
pop
cmp
xorb
cmp
es
mov
and
pushf
mov
pop
ds
mov
xchg
or
pop
cs
cmpl
rclb
leave
popf
out
sarb
fistl
mov
sub
dec
stos
dec
mov
jecxz
aaa
das
cli
or
imul
daa
adc
cmp
jge
push
rorb
rcrb
adc
sbb
jg
lods
arpl
pop
sub
movsb
sub
cmpsl
outsl
cli
addr16
dec
lret
fwait
cwtl
cmp
incl
xchg
lock
add
push
mov
xchg
repz
inc
adc
pushf
push
xchg
pop
xor
mov
lret
xchg
lea
xchg
push
in
xchg
xchg
push
jo
mov
cmp
arpl
sahf
mov
add
inc
push
scas
fidivrl
mov
cwtl
jl
mov
rcr
inc
adc
and
outsb
pop
pop
add
xchg
popa
sbb
repnz
repz
fdivr
rcll
mov
sub
jecxz
adc
fcmovbe
sbbb
add
push
mov
data16
arpl
lahf
je
sub
cmc
push
add
les
push
enter
adc
int
std
fsubs
mov
jp
inc
inc
sti
std
cmp
xchg
addr16
mov
lods
push
test
int
add
test
pop
daa
mov
jne
bound
test
xchg
call
mov
insl
adc
sbb
and
cli
xchg
or
je
xchg
loop
test
lret
pop
mov
lcall
mov
and
ja
shl
mov
dec
or
xchg
fstpt
mov
inc
mov
mov
into
jg
and
xchg
xlat
out
mov
fsubs
cmp
ja
add
push
or
lock
or
cli
ds
jb
popf
mov
dec
dec
shrl
inc
push
fdivrl
xchg
lea
fmuls
popf
loop
fdivrl
inc
mov
dec
sub
lea
imul
clc
fwait
lcall
pop
rcrb
clc
dec
jbe
cmp
sub
lea
lahf
push
lea
fists
add
push
xchg
mov
testl
push
pop
fwait
aad
mov
push
arpl
in
fldenv
mov
jne
ret
lcall
adc
inc
mov
cmp
mov
inc
aad
inc
lods
add
add
vmread
mov
iret
push
and
fcompl
jno
sbb
aaa
jl
pop
pop
out
sub
or
imull
js
or
loope
mov
in
stc
xlat
adc
cmp
sub
pop
and
xor
sub
ss
cmp
mov
mov
inc
cli
sbb
xchg
stos
mov
adc
mov
push
test
sub
and
jae
cwtl
cmp
pushl
jbe
icebp
arpl
mov
fs
mov
jle
sub
inc
mov
pop
aas
lret
fxch
daa
inc
pop
cmc
mov
add
lcall
enter
add
loope
fstp
in
jle
push
or
movsb
mov
pop
cmp
mov
outsl
jl
xchg
or
shlb
out
mov
sub
popf
cmp
mov
pop
jle
bound
fisttpll
xchg
stos
aad
fisubrs
fbld
test
push
js
das
or
or
roll
push
sub
and
pop
sbb
or
push
xchg
jmp
xchg
or
dec
adc
or
mov
inc
jg
inc
outsb
bound
insb
pop
adc
mov
dec
lcall
sbb
daa
add
aam
dec
jecxz
mov
sbb
aad
cmp
cmp
imul
cmc
stos
lods
int
iret
pop
adc
ja
cli
out
inc
push
mov
lods
shll
sub
sbb
xchg
sti
push
inc
arpl
fsubl
lcall
sub
and
push
xchg
fsub
jg
insl
cmp
shlb
jo
cmp
push
mov
jg
lock
cmp
jb
aad
adc
lods
add
lock
sub
aas
inc
repz
cmp
mov
and
nop
in
add
xor
dec
or
int3
jne
vmwrite
push
mov
in
adc
mov
mov
aam
mov
and
popf
adc
mov
int
and
or
sbb
ja
and
filds
mov
lods
mov
fisubrs
mov
popf
sbb
mov
jb
mov
inc
inc
inc
jo
jns
xchg
mov
push
fwait
cmp
mov
cmp
test
pop
pop
lea
cmpsb
mov
aas
dec
pop
test
in
xchg
lea
xchg
inc
adc
push
or
popa
cltd
out
fwait
cmp
lds
or
int
mov
out
test
addr16
std
aas
add
and
mov
iret
lea
or
sbb
in
sti
mov
pop
test
lcall
das
add
mov
jl
into
push
xchg
ljmp
insl
popa
rclb
push
addl
into
and
xchg
scas
cmpsb
fisttps
fsubl
ret
fistps
pop
xor
hlt
push
shr
push
mov
add
shl
push
cltd
dec
inc
sbb
fnstsw
inc
rolb
push
stos
popf
push
and
lahf
cmp
fnstenv
jns
add
add
jmp
push
adc
call
mov
or
xchg
mov
enter
sbb
mov
mov
xor
es
sahf
or
xor
xor
xchg
jecxz
gs
icebp
xor
mov
popa
test
test
ret
pop
push
ret
adc
xchg
cmp
loope
cmp
xchg
or
or
cmp
xor
cwtl
outsb
cmpsb
mov
pop
jnp
mov
ds
pop
or
dec
clc
push
loopne
xchg
add
cmp
filds
into
gs
cwtl
in
call
mov
cmp
sahf
jl
jmp
cmp
cli
inc
mov
cmp
stos
xor
jae
xchg
lea
and
inc
sbb
test
movsb
pop
lock
jecxz
dec
jne
les
adc
xor
hlt
mov
jle
loope
xor
cmp
xchg
sbb
std
mov
sbb
inc
pushf
jg
jmp
popa
fildll
mull
add
pushf
pop
sti
dec
cltd
xchg
add
fs
ds
pushf
add
xor
push
lahf
int3
or
sub
jmp
and
lcall
dec
dec
xchg
inc
mov
cmp
roll
push
andb
std
cmp
jge
mov
loopne
mov
loopne
cmp
test
les
xchg
stos
xchg
repz
scas
ret
xchg
cmp
mov
xchg
ja
cmp
mov
imul
sbb
dec
addr16
loop
mov
jmp
and
rolb
and
push
movsb
pusha
xchg
dec
mov
aaa
daa
into
jg
gs
aaa
out
cmc
jnp
dec
and
mov
xchg
push
decb
sbb
adc
adc
daa
pop
mov
idivb
mov
js
lahf
sub
push
mov
jp
test
addr16
imul
test
addl
push
push
jp
jge
jbe
cltd
dec
bound
mov
mov
jp
adc
cmpsb
push
jge
andl
lods
inc
test
fidivl
dec
sbb
dec
push
cli
out
test
mov
inc
or
movsl
movsb
js
lahf
enter
cbtw
pop
dec
rcrb
lcall
dec
addr16
aaa
out
fcoml
imul
stos
jge
andb
sarl
js
movb
popa
loop
dec
xchg
ds
inc
jecxz
mov
cmpl
in
xchg
sti
popf
xor
hlt
pushf
adc
lods
pushl
xchg
xchg
pop
add
cmpb
test
stc
adc
push
or
add
sahf
icebp
int3
push
ss
outsl
lcall
cmpsb
xchg
jbe
orb
and
in
stc
out
faddl
bound
jg
cmp
dec
push
pop
push
dec
adc
icebp
dec
pop
into
and
mov
dec
test
stc
insb
jmp
cli
sub
push
add
mov
sbb
mov
aaa
in
xchg
push
inc
sbb
sti
popa
mov
divl
sahf
mov
cmp
lahf
cmp
inc
sbb
dec
test
ds
outsl
imul
fcompl
call
inc
push
pop
loopne
lds
call
jmp
clc
jo
mov
pop
sbb
fidivrl
push
mov
out
dec
loopne
cmp
push
stc
mov
xchg
mov
je
into
dec
negl
cmp
xchg
or
xchg
popf
aad
sbb
dec
push
mov
push
imulb
sahf
and
mov
jno
pop
call
inc
dec
stos
dec
dec
sahf
xor
adc
and
mov
push
clc
mov
sbb
mov
mov
adc
test
mov
push
xchg
test
lods
loopew
pop
insl
add
fsubs
push
add
jo
outsb
dec
cmp
js
fsts
push
in
daa
addl
ret
xlat
js
cmp
fst
add
aad
mov
arpl
in
cmp
ret
xchg
jmp
xor
add
cmp
into
aas
sbb
dec
adc
fldt
test
mov
push
push
add
mov
gs
xchg
aas
xor
in
cmp
jg
loope
insb
aaa
sub
add
jno
inc
rorl
fcomp
in
test
or
sbb
dec
mov
fisttpll
cmp
test
outsb
fisttps
into
insb
mov
cwtl
mov
cmp
jmp
stos
jne
mov
rorl
jmp
xor
repnz
call
jl
cmpsb
jbe
jp
jns
icebp
fisttpl
adc
cli
xchg
inc
cmp
sbb
mov
lret
int
repnz
repnz
loop
xor
jbe
or
lcall
fisubl
fucomp
jge
sub
lods
das
outsl
addr16
aam
ffree
jl
mov
jnp
cmpl
imul
test
int
add
and
xchg
pushf
add
xorl
out
mov
cmpsb
adc
aam
adc
sub
jne
fs
or
in
jbe
adc
je
in
dec
call
and
test
xor
in
add
push
dec
enterw
outsl
ljmp
insb
aam
jg
movsl
cli
dec
xchg
jge
xchg
or
lock
xchg
cs
mulb
clc
xchg
scas
movsl
imul
and
inc
shr
imul
in
dec
cmpsl
insl
cmp
test
pop
jnp
xchg
pop
into
cltd
adc
in
adc
lea
imul
push
pop
inc
add
fstps
lret
or
sbb
adc
scas
push
mov
sub
faddp
jge
or
imul
js
test
pop
xchg
insb
fdiv
push
add
insb
pop
mov
cwtl
mov
push
and
imul
or
mov
dec
dec
inc
push
int3
int3
addl
test
stc
and
add
xchg
dec
pop
adc
loope
cmpsb
mov
dec
and
pop
xor
cs
ss
into
stc
mov
loopne
mov
gs
ljmp
repz
fnstsw
data16
pop
xchg
std
add
rorb
jmp
push
cmp
or
mov
cli
pop
call
nop
call
fs
cld
push
movaps
movsb
sarb
pop
sub
cltd
or
addr16
xor
ljmp
or
pushl
xor
orl
mov
add
cmp
push
rorl
mov
loopne
mov
cmp
ret
push
shrl
sbbb
shrl
daa
nop
nop
mov
lret
and
xlat
ja
repnz
mov
dec
jbe
cmp
xor
xor
jbe
icebp
lea
jbe
sub
dec
cli
andl
imul
lahf
push
insl
push
push
xchg
dec
pushf
add
sub
pop
pop
xchg
out
fdivp
popf
nop
sub
add
cmpsb
jnp
dec
test
pusha
xchg
dec
mov
and
inc
gs
jg
xor
aad
xor
add
mov
cmpsl
mov
cld
inc
sub
pop
inc
into
jb
jb
test
mov
test
dec
in
mov
cmp
dec
cld
mov
dec
mov
mov
test
or
jge
jmp
inc
out
imul
mov
or
mov
clc
and
out
fdivrp
mov
stos
and
je
aas
cmp
inc
adc
insl
jp
and
mov
testb
sbb
js
add
adc
pop
cmp
test
pop
xor
fcomp
imul
sbb
xor
inc
das
ds
pop
push
pop
jp
sarl
inc
push
arpl
std
jb
xchg
inc
sub
pop
xchg
xchg
pop
inc
outsl
aam
inc
mov
mov
test
pop
adc
rcrb
cmp
scas
inc
mov
lock
push
xchg
xor
xchg
data16
mov
or
insl
mov
jp
stos
insb
faddl
xchg
or
adc
sti
sub
dec
test
lcall
and
mov
pop
cld
int3
stos
pop
lret
xor
mov
sahf
popa
jae
push
mov
insb
lcall
movsb
inc
and
incb
les
cmp
add
jecxz
xchg
sbb
dec
jecxz
cs
adc
lea
push
or
hlt
in
test
out
sbb
fs
enter
ds
imul
mov
jg
xor
cld
adc
adc
nop
cwtl
arpl
in
out
sbb
inc
lods
push
xchg
mov
pushf
mov
imul
and
mov
xchg
and
sub
inc
movsl
or
popa
mov
and
fwait
push
pop
orl
loopne
xorl
ja
rolb
jp
mov
ret
call
jo
xchg
inc
dec
xchg
inc
pop
icebp
pusha
daa
es
icebp
push
aad
and
xchg
pop
push
ss
addr16
pop
popf
cwtl
loop
dec
clc
loope
roll
mov
push
cmpl
inc
aad
push
add
xchg
mov
sub
lea
add
cmpsl
xchg
fneni(8087
sub
dec
jge
mov
bound
lods
aas
cmp
mov
in
mov
inc
test
push
xchg
adc
pop
clc
and
mov
mov
idiv
and
inc
sti
test
jle
ret
pusha
test
and
dec
jle
dec
lods
pop
mov
or
dec
sti
xchg
fwait
xor
int3
mov
cli
aaa
jl
movsb
cmp
mov
lret
add
mov
pop
mov
out
ror
jb
xor
cmpsb
into
cli
push
mov
or
sbb
aas
leave
mov
out
sbb
rclb
iret
jbe
imul
mov
inc
inc
psrlq
add
and
rolb
push
pop
les
pop
outsb
add
test
jbe
popl
jbe
sbb
mov
jne
cli
mov
idivl
jae
mov
arpl
movsb
dec
mov
imul
int
jl
pop
pusha
pop
outsl
jne
loope
or
sahf
jno
imul
movsl
inc
addr16
add
lods
lods
pop
filds
mov
ror
icebp
inc
mov
push
popa
mov
aas
cmp
push
ficomps
and
mov
rorb
sub
dec
cmp
mov
in
in
insb
popa
stos
cmp
pop
jl
loop
rorl
pusha
aaa
jmp
loop
ret
sarb
in
mov
scas
and
daa
outsl
sub
inc
pushf
lods
scas
out
leave
adcl
cmpsl
cld
mov
decl
fsubrl
popf
jnp
push
mov
ja
cmp
dec
repz
jmp
imul
xchg
je
mov
pop
and
inc
push
icebp
fdivrl
jo
sahf
mov
push
inc
dec
mov
fisttpl
mov
movsb
cltd
pop
and
cwtl
popa
in
mov
cmpsl
pushf
jecxz
xlat
shll
aam
push
fs
das
cmp
cmp
or
cmpsl
push
push
jg
push
sti
push
addps
cmpsb
icebp
repz
movb
lcall
ljmp
cli
lock
repnz
adc
add
sahf
or
xchg
mov
sarb
pushf
mov
sbb
inc
add
pop
mov
bound
jbe
sbb
rcrl
cmp
faddp
stc
repnz
popa
inc
push
sub
mov
mov
lcall
and
ljmp
sub
lods
testb
movsb
mov
inc
jbe
ret
xchg
pop
push
lcall
aam
inc
sub
cmp
mov
out
cwtl
ret
loope
iret
cmc
lahf
add
hlt
and
ret
imul
clc
ds
repnz
sub
int
stc
repnz
adc
mov
hlt
mov
or
aas
lods
cmp
int
and
and
lahf
stos
mov
xchg
jb
sbb
and
xor
xor
in
fisttpll
xlat
or
sbb
push
insl
clc
cmp
sbb
int
cli
loop
dec
notb
shrb
mov
rcrl
aad
add
mov
pop
lods
insb
cld
cmpsb
les
test
jno
iret
or
xchg
out
xor
add
jno
std
aad
pop
jnp
bswap
add
mov
pop
in
mov
xor
dec
dec
push
out
inc
pop
inc
push
push
jnp
mov
cmp
test
loopne
xor
xor
ds
adc
cmp
cmp
inc
pop
xor
test
xchg
cmc
movsb
loop
pop
dec
inc
and
shl
fiadds
and
jmp
rol
addl
gs
inc
sub
sub
fcoms
add
cwtl
clc
test
popf
xchg
in
cmp
call
sbb
mov
adc
mov
int
lods
push
xchg
adc
push
inc
aas
cmp
mov
out
jbe
jne
mov
fdivp
decb
lret
mov
sub
jo
pop
xchg
notb
lahf
outsb
sti
xlat
mov
or
addl
xor
cmp
xor
pop
fbstp
xchg
push
push
ljmp
orl
ret
fmuls
fildll
leave
mov
cld
cmpsb
jae
aad
fwait
sbb
xorl
cmp
bound
xchg
fistpll
xor
add
jnp
mov
jne
xchg
xchg
dec
lcall
mov
lods
mov
jnp,pn
inc
cwtl
lods
outsb
loope
mov
lret
out
cmp
lods
fstps
movhps
jbe
pop
insl
mov
in
cld
imul
mov
repnz
mov
or
cmp
out
inc
add
hlt
shl
out
shll
gs
out
mov
add
js
lahf
sub
sarb
inc
sti
add
cltd
cmpsb
dec
xchg
stc
test
ret
mov
outsl
cmp
push
shlb
cmc
pop
sbb
aas
fildl
mov
fucom
dec
pop
out
sbb
jno
popf
jno
aam
ret
add
loopne
cld
test
mov
out
mov
push
in
dec
repz
clc
lds
fidivrs
push
notb
mov
sub
test
cmp
daa
cmp
ficomps
testb
rclb
push
sbb
xchg
jecxz
mov
inc
subb
sub
popf
pop
sub
inc
divl
loope
sub
daa
mov
sahf
mov
clc
push
jmp
xchg
test
idivl
jns
sub
ds
pop
xlat
xchg
jnp
inc
dec
jno
inc
gs
mov
hlt
aad
mov
cs
cmp
cmp
dec
sbb
cmp
and
dec
jl
popf
lock
cmp
pop
jne
rclb
cmp
or
cmp
xorl
outsl
mov
fiaddl
pusha
rolb
inc
inc
pop
inc
ss
or
insb
xchg
push
xchg
mov
jg
repz
mov
outsb
outsl
jg,pt
insl
xchg
test
in
push
mov
testb
push
jmp
mov
mov
dec
pop
pushf
xchg
pusha
imul
dec
movsb
in
adc
push
daa
cld
movsb
mov
into
in
sub
push
scas
shll
mov
dec
and
mov
push
mov
pop
out
scas
and
or
popa
inc
push
fdivl
mov
out
movsb
filds
repz
mov
add
test
mov
je
repz
xchg
xchg
test
out
fs
mov
xchg
outsb
stos
enter
popf
setg
jns
mov
jno
imul
cmpsl
in
mov
test
fidivrl
sbb
mov
adc
add
jo
cld
mov
push
push
mov
movsl
xchg
fcomps
mov
mov
fwait
jg
outsb
xchg
test
cmp
mov
ds
hlt
loopne
data16
stc
cmpsl
scas
mov
or
mov
fcoms
lea
je
xchg
sbb
pop
push
mov
aaa
pushf
dec
into
xor
shl
sub
fsubrp
cmp
inc
sbb
fwait
jg
aas
push
mov
lret
mov
rcll
cwtl
push
inc
ja
jg
lret
lock
fs
pusha
stos
cwtl
inc
addr16
xchg
lret
scas
sar
repz
out
adc
mov
lds
mov
pop
mov
roll
or
ret
fwait
iret
dec
push
mov
xor
hlt
lret
or
lcall
fisubl
sub
lds
jp
es
jno
mov
aas
paddb
xorb
sbb
or
int3
gs
dec
mov
in
push
dec
mov
dec
stos
out
ret
jae
mov
out
ss
lds
or
pop
mov
cmpsl
fdivs
adc
add
sarl
and
cltd
aam
or
jle
sbb
rcrl
mov
bound
lret
jbe
sysret
inc
ds
mov
ljmp
daa
lcall
xor
popf
es
push
sub
into
scas
jle
das
or
imul
ret
mov
test
mov
add
clc
jae
fisttpll
inc
adc
pop
cltd
xor
das
mov
outsb
dec
call
js
dec
sub
scas
xchg
icebp
gs
imul
xchg
hlt
inc
push
xlat
test
insl
ret
inc
mov
pop
stos
pop
ja
adc
push
pop
mov
popa
sbb
stc
out
pop
ljmp
in
jno
and
test
xchg
imul
out
add
movsl
lock
push
adc
fisttpl
mull
insl
cld
pusha
pushf
adc
pop
mov
sbb
sbb
xor
cmpsl
jno
insl
in
mov
jp
mov
cs
mov
cmp
leave
push
aad
cmp
sbb
imul
sub
ljmp
in
or
sbb
adc
push
repnz
jbe
out
jp
adc
sub
push
sarl
je
js
xchg
mov
push
mov
shll
loopne
dec
out
icebp
in
mul
mov
sbb
out
addr16
xchg
mov
outsl
outsl
mov
mull
and
es
mov
jge
dec
gs
in
sbb
jno
mov
ret
or
in
pop
hlt
aam
shlb
pop
xchg
push
add
adc
popf
push
pop
jmp
inc
cmp
idivl
jae
into
sbb
inc
out
cmp
aam
sub
mov
sbb
stos
xchg
stc
in
ljmp
jnp
leave
xchg
out
movsb
jl
fstps
mov
xchg
lcall
fcmovbe
mov
rcl
fs
adc
ds
pop
ds
mov
inc
imul
pop
sbb
pop
mov
sbb
mov
int3
fldt
enter
mov
sub
dec
add
rorb
cmp
lcall
and
adc
dec
xor
mov
dec
aas
arpl
cmc
sbb
mov
pusha
stos
dec
icebp
mov
dec
add
jbe
int3
add
sbb
lea
xchg
pushl
lea
or
jne
hlt
mov
fs
cld
outsl
xchg
pop
add
mov
inc
daa
xor
and
jns
mov
repz
test
sahf
test
sbb
fimuls
test
mov
inc
xchg
adc
lret
fs
pop
cltd
pop
xor
xchg
mov
mov
scas
push
shll
out
daa
jns
cli
jne
loope
enter
movsb
ss
popf
mov
sub
mov
pop
testl
repnz
push
push
rcrl
repz
jo
and
hlt
rorb
pop
adc
leave
arpl
pop
jne
sbb
scas
stos
pop
jb
pop
add
or
je
rorl
xor
pop
test
or
lea
push
lahf
daa
fbstp
out
add
inc
nop
test
mov
imul
roll
add
pusha
sbb
mov
in
shlb
sub
in
jae
dec
sbb
push
jno
inc
xchg
jae
mov
mov
sbb
insb
jmp
pushf
and
in
mov
sbb
jnp
arpl
xchg
xor
mov
ss
sub
ds
mov
js
mov
and
jbe
dec
xacquire
sub
xor
cmc
mov
sbb
test
iret
rcr
jnp
movsl
mov
call
sub
scas
ss
mov
icebp
dec
loopne
jp
stc
pop
sarb
mov
push
and
mov
fdiv
xor
push
andb
fnstcw
mov
ret
sbb
fcomps
or
cwtl
ja
mov
ficomps
push
xchg
data16
push
pop
adc
add
dec
outsb
sbb
mov
or
add
js,pt
data16
mov
xchg
jns
arpl
loop
mov
push
inc
cli
sarb
jns
cli
ss
xor
andl
push
out
inc
outsl
push
jbe
sbb
cmp
cmp
pop
inc
sbbb
push
or
or
jnp
int3
fnstcw
imull
cmp
test
adc
stos
int
inc
inc
sbb
in
xchg
imul
ret
sahf
fs
xchg
jns
xchg
frstor
fdivl
and
xchg
or
sub
cli
and
incb
pop
xor
cmp
lret
mov
add
cmpsl
ja
mov
repz
and
jbe
js
and
jb
rorl
inc
repnz
and
and
testb
cli
cmp
mov
cmp
xor
sbb
in
cmp
iret
into
jae
mov
iret
mov
test
cmp
stc
push
in
mov
adc
jo,pt
data16
fsubs
mov
sbb
fisttps
and
pop
xchg
nop
add
nop
fstp
mov
add
push
test
fidivl
loope
mov
cs
mov
faddl
lods
jge
cmp
call
mov
jnp
push
or
push
dec
mov
fisttps
jg
sbb
mov
in
in
mov
adc
push
test
and
andl
bound
les
mov
and
xchg
xor
pop
push
dec
jnp
mov
mov
add
xchg
nop
xor
and
mov
lret
xor
movsl
jl
mov
pop
inc
dec
es
cmpsl
jb
fisubs
clc
data16
jl
cmp
sub
lds
aaa
mov
test
nop
pop
xchg
ds
or
mov
and
jbe
xchg
repz
mov
cwtl
push
out
adc
sbbl
inc
fisttpl
inc
stos
pop
out
fistps
dec
ss
and
pusha
add
loopne
test
mov
lock
dec
int3
mov
pop
dec
add
ror
mov
sti
mov
cmp
fidivrl
xor
jno
fstpl
xchg
mov
xor
mov
mov
sti
sub
adc
insb
jecxz
lea
dec
inc
leave
sub
mov
iret
movsl
mov
std
adc
inc
shl
pop
adc
mov
lds
jecxz
loopne
loopne
mov
test
xchg
add
push
lret
imul
dec
and
xor
or
movsb
lods
add
sarl
sti
pop
jp
mov
data16
pop
mov
mov
dec
pusha
lods
xlat
add
jmp
loope
dec
mov
push
aas
nop
fdivr
xlat
mov
dec
lods
mov
fadd
cld
imul
add
lock
inc
lret
inc
jbe
shlb
jg
aaa
leave
mov
loopne
test
imul
subl
std
adc
sarl
mov
sub
add
push
mov
mov
mov
xchg
mov
icebp
inc
dec
out
arpl
mov
adc
repz
jno
sub
sub
movsb
mov
pop
das
pop
repnz
cmp
adc
jecxz
dec
jp
cltd
mov
repz
mov
in
jmp
mov
mov
addr16
or
mov
cmp
rolb
fdivrs
into
aas
push
pop
mov
rorb
fidivrs
mov
nop
iret
out
add
out
lods
aam
jns
lods
push
xchg
scas
xchg
add
incl
icebp
and
or
lock
das
cmpsl
arpl
jb
jo
js
bound
xchg
cmp
mov
add
in
pop
dec
sahf
mov
dec
mov
sub
nop
pop
cmp
das
cwtl
fdivrp
xor
out
ss
mov
test
or
mov
in
pusha
xchg
lcall
cmp
rolb
pop
mov
cltd
or
mov
leave
cmpsl
and
jae
cmp
pop
mov
adc
cmp
jmp
dec
vandnps
xchg
dec
cmp
sahf
xor
outsb
mov
movsl
cmp
imul
xor
push
incl
push
xchg
sub
jg
cmp
mov
dec
ljmp
and
je
and
sub
adc
mov
xor
out
cs
mov
xlat
pushf
or
pop
cmc
and
gs
cmp
out
dec
jg
sub
or
jbe
add
mov
cmp
dec
jne
dec
mov
call
and
pop
rolb
cmp
pop
adc
cltd
outsl
sbb
mov
jmp
out
inc
imul
mov
push
or
push
dec
mov
mov
fwait
test
fisttpll
insb
sub
cmp
adc
or
std
aam
inc
cmp
fwait
adc
js,pn
xor
mov
inc
inc
push
push
pusha
cli
popa
fisttps
add
cmp
in
movsb
lahf
sub
mov
test
xchg
sub
inc
or
adc
fwait
cmp
idivl
stc
imul
cmpsb
mov
sti
jnp
dec
movsb
daa
sub
or
outsb
ret
mov
pop
in
mov
dec
or
ja
arpl
sbb
or
loope
push
divb
notb
cld
pop
mov
pop
ret
stos
movsl
fldl
or
sti
nop
sahf
test
aam
fwait
push
cmp
mov
jb
or
mov
frstor
clc
mov
xor
sti
and
cwtl
xchg
add
cs
jbe
mov
mov
add
cwtl
xchg
mov
cmp
mov
aas
or
loopne
dec
insb
jno
inc
add
scas
jl
out
je
jmp
neg
fcmovu
mov
inc
je
int3
aaa
pop
repz
adc
loop
mov
mov
fwait
xchg
btr
jge
jno
mov
and
cmp
dec
dec
sbb
adc
iret
xlat
pop
sbb
testl
jecxz
cmp
fnstenv
jbe
adc
inc
cmp
pop
pop
dec
sbb
rolb
cmpsb
out
ljmp
rorl
sbb
mov
or
and
lock
sbb
pop
adc
ljmp
sub
sbb
enter
mov
and
add
or
bound
mov
loope
pusha
jmp
add
movsb
push
sbb
outsb
mov
ja
leave
lret
and
pushf
push
ds
jnp
ljmp
dec
push
cmpsl
pop
jnp
mov
mov
popa
dec
pusha
push
mov
fwait
jns
jp
mov
mov
das
or
sub
rol
lcall
mov
sbb
aad
int3
loopne
jmp
sbb
jo
jge
jle
ret
fst
sub
or
negl
cli
jmp
fadd
cmpl
sub
sti
outsb
xor
lods
sub
fisubrs
loop
dec
iret
es
jbe
shl
aas
xchg
pop
call
scas
das
sub
aam
add
xchg
outsl
ror
jl
ret
xchg
cwtl
pop
nop
in
arpl
mov
mov
mov
imul
shll
add
cld
jmp
fcomip
cmp
mov
scas
negl
xchg
jae,pn
popa
std
sbb
fldl
stos
mov
mov
rorl
mov
mov
pop
sub
push
ret
iret
sti
stos
cld
lret
enter
pop
pop
fadds
repz
and
sbb
and
jg
mov
and
jbe
out
sbbl
xchg
fdivr
in
mov
xchg
std
sbb
mov
xchg
xor
xchg
aad
aaa
sub
out
cmp
jns
mov
lret
dec
rorb
stos
pop
jbe
push
or
ss
dec
outsb
cmc
sbb
inc
push
xchg
sub
dec
push
mov
arpl
lock
pop
push
movsb
les
jmp
or
mov
jecxz
test
cmp
in
jg
faddl
or
jmp
cmpsl
ret
in
fxch
stos
je
mov
xor
cltd
xor
mov
test
das
push
cmp
xor
xchg
xchg
and
cltd
pop
das
jnp
shrl
pop
or
sahf
subl
jp
cld
icebp
out
push
lock
gs
or
ficoml
sub
mov
shrb
sub
es
xor
xchg
sti
aam
push
mov
push
jbe
push
xchg
rclb
cmc
add
xchg
cli
adc
mov
adc
testl
loope
aam
das
nop
cltd
push
repz
push
dec
jbe
lock
mov
scas
cld
or
push
pop
inc
popa
aas
xchg
and
jnp
xchg
je
xchg
out
xchg
mov
maskmovq
testl
stc
lea
push
xchg
sbb
push
lret
push
or
or
push
mov
dec
lods
cld
and
fadd
lock
and
adc
imul
xor
cmp
inc
fdivs
loop
push
mov
adc
sbb
jecxz
sbb
repz
xor
sbb
xlat
loop
lods
or
pop
aaa
pop
sbb
iret
xor
add
cmp
add
int3
jl
pop
movsb
add
movsb
xorb
cmp
jo
lret
sahf
aaa
inc
popl
stos
lods
sbb
repz
out
push
mov
ret
xor
mov
mov
mov
sysenter
adc
fwait
pusha
pusha
aam
popa
pop
sbbb
dec
sub
adc
mov
inc
jmp
aas
pop
jns
adc
icebp
adc
or
andl
jne
or
sbb
xchg
ss
mov
jge
ret
pop
outsb
decb
push
jnp
pop
je
mov
mov
dec
xchg
xchg
fistpll
popf
cmp
and
add
ss
xor
add
cmp
nop
test
sbb
jmp
test
and
fcom
lcall
call
lods
cmp
xchg
fnstsw
sub
arpl
inc
sbb
add
jno
insl
aam
sub
sbb
je
inc
cmp
adc
add
test
adc
adc
jle
and
mov
jle
adc
sub
out
push
mov
mov
and
sub
xor
cmp
stos
sarl
pop
and
cli
push
ljmp
cli
lods
and
aad
gs
or
mov
imul
inc
mov
and
clc
jp
int
mov
or
xor
xchg
push
dec
jg
in
xchg
cmc
pop
push
fisttpll
shl
imul
sbb
mov
sub
or
or
pushf
lock
push
movsb
movsl
test
jae
dec
jae
cld
sbb
xor
and
cs
icebp
adc
dec
mov
push
xchg
fsubrl
mov
mov
outsb
and
scas
mov
push
gs
addr16
bound
cmp
gs
cmc
lret
inc
outsl
or
add
iret
inc
out
loop
fcomps
vmovntpd
divb
addl
adc
sbb
bound
je
push
int
inc
ret
test
add
jecxz
push
jp
pop
cmp
popa
pop
out
insb
adc
scas
popf
shr
and
add
int
lret
xor
rclb
cmc
or
lahf
sahf
fs
fs
aas
movsl
lea
pop
mov
fistps
jecxz
xchg
sub
xor
or
negl
mov
scas
xchg
cmpsl
loop
or
fldcw
add
stc
cmp
lahf
cmp
xchg
pop
repz
shll
sbb
and
enter
stos
ss
cmp
movsb
cmpsb
fisubl
test
in
fwait
xchg
mov
dec
bound
jmp
fistpl
fcoms
int
mov
mov
insb
cmpsb
rcll
repnz
aaa
add
movsb
imul
xchg
mov
sub
lds
into
shll
adcl
pop
in
in
or
dec
shll
sub
push
mov
pop
or
push
das
and
cmpsb
movsl
movsl
adc
in
fs
int3
outsb
faddl
add
inc
push
push
or
adc
daa
in
out
or
inc
movsb
or
ficoms
std
xor
outsb
imul
popf
in
dec
mov
cmp
cmp
scas
or
mov
fstps
hlt
loope
in
leave
aam
jno
jno
mov
push
scas
es
mov
sbb
fcoml
and
aaa
and
adc
xor
sbb
out
add
or
cmp
xlat
cmc
or
or
dec
pop
pushf
lods
fidivrs
stos
push
or
aaa
rcr
mov
addb
sbb
xchg
fcomps
movb
push
scas
sbb
out
in
stos
dec
pop
enter
hlt
pusha
add
lock
jecxz
mov
push
add
lret
ljmp
mov
cli
sbb
mov
mov
cmp
scas
push
movsb
scas
pusha
das
arpl
icebp
jg
and
fisubl
jmp
arpl
xchg
inc
aam
cs
jg
fwait
dec
scas
movsb
inc
pushf
ret
cld
xchg
testb
add
xlat
ret
and
cmpsl
add
dec
lea
pushf
arpl
rcl
rcrb
push
push
push
cmc
cmc
dec
push
mov
pushl
mov
scas
std
addl
jo
pop
aas
inc
xchg
pop
sub
push
daa
cmpsb
mov
dec
push
mov
shrl
popa
mov
call
jl
inc
js
mul
pop
mov
js
arpl
or
push
subl
incl
pop
js
in
push
xchg
sbb
loopne
lret
rcr
ret
jbe
push
jecxz
lea
mov
push
cli
mov
pop
mov
sbb
sbb
or
mov
jp
mov
mov
push
cmpsl
mov
push
bndstx
mov
scas
cmp
mov
ljmp
insb
mov
test
and
outsb
or
ja
and
xchg
gs
push
cmp
mov
out
cld
rcrb
or
or
jg
insb
sub
gs
inc
rcrb
push
imul
push
pushl
mov
jmp
add
pop
loop
daa
sti
nopl
shll
icebp
clc
repnz
inc
arpl
mov
adc
and
inc
add
jle
dec
sbb
ret
lret
and
test
stc
loope
cmp
push
add
mov
jne
push
mulb
mov
fists
sarb
pop
test
loop
in
std
jge
push
mov
mov
xchg
sbb
push
je
lock
sub
gs
rclb
subl
js
les
out
fcomi
jecxz
int3
jmp
cmp
out
mov
jmp
pop
test
push
movsb
fsubs
jb
and
pop
push
lahf
or
and
push
fisubs
or
pop
xchg
mov
mov
add
nop
push
add
xchg
daa
lods
ret
stos
push
jecxz
int
push
roll
subl
lods
dec
cwtl
cmpsb
and
push
ds
xchg
dec
popa
or
lret
mov
cmp
and
faddl
jne
pusha
mov
test
xor
mov
icebp
cs
sub
pop
pop
lret
out
outsl
sbbl
add
mov
pop
dec
fiadds
jge
fdivr
mov
hlt
iret
into
aam
jo
jp
movsl
dec
daa
lods
mov
dec
inc
sbb
or
add
mov
jl
in
inc
jg
xchg
inc
sbb
lods
enter
rclb
inc
xor
ds
in
test
outsb
adc
mov
pop
sub
fiaddl
ret
bound
or
js
test
out
loop
int3
insl
hlt
sbb
lcall
mov
mov
add
stos
imul
pop
or
adc
stos
xlat
adc
test
icebp
out
dec
stc
inc
sti
fisubl
dec
pop
add
mov
jle
lods
add
xor
ds
fidivl
adc
out
add
mov
xlat
sub
or
insb
jle
inc
xchg
xchg
push
mov
sub
lcall
mov
pop
enter
jge
lret
mov
frstor
aaa
push
cmpsl
add
test
mov
pop
in
jb
push
jnp
push
fwait
nop
aad
or
insb
gs
loope
les
stos
add
cmp
movsb
mov
dec
sub
mov
aaa
insb
roll
lret
mov
icebp
and
lea
push
dec
adc
in
xchg
cmp
adc
shlb
popf
push
incb
adc
fistpl
out
jb
push
mov
sub
rorl
pop
sub
mov
stos
adc
cmp
xchg
cmpsl
ja
cmpsb
mov
mov
aad
inc
cmp
mov
mov
xchg
popf
inc
out
orb
fcmovnbe
xor
cmp
mov
lea
call
dec
and
enter
push
pop
cmc
cmpsl
mov
rol
xlat
dec
sarl
aaa
fprem1
sbb
jne
sti
outsl
and
xchg
es
xchg
call
jae
outsb
icebp
add
std
xchg
adc
ss
cltd
mov
mov
xor
sub
out
sahf
pop
icebp
stos
stos
test
stos
xchg
or
insb
popf
or
sbb
xor
push
outsb
arpl
jo
adc
lds
cmpsb
aas
jle
mov
xchg
xchg
scas
mov
adc
or
subb
inc
scas
mov
push
out
ret
dec
scas
jp
mov
fnstcw
fs
insb
rol
leave
test
dec
dec
mov
fstpt
lds
xchg
mov
or
add
sub
or
mov
sbbb
sub
and
fsubp
adc
jg
xchg
mov
cld
loop
adc
jno
jns
ljmp
adc
aaa
xchg
mov
push
xchg
test
sti
or
into
push
xchg
stos
vcvtsd2si
lahf
mov
std
nop
xchg
leave
int
arpl
sti
js
ljmp
dec
sar
orl
rcrl
cs
sbb
add
mov
mov
or
repnz
lods
aas
testb
mov
jg
ljmpw
lds
cli
and
pop
jb
xor
cld
mov
dec
mov
jno
jbe
dec
sbb
xchg
and
daa
mov
push
jb
ljmp
dec
shll
gs
cmp
inc
orl
subw
inc
push
in
dec
iret
pop
mov
cmpsl
inc
arpl
movb
not
in
scas
rolb
test
mov
ja
mov
mov
mov
fmull
loope
std
into
dec
les
lods
xor
es
mov
scas
insb
outsb
adc
nop
test
outsl
imul
xchg
lods
jne
jl
inc
hlt
out
ret
arpl
data16
jmp
or
addb
shll
mov
mov
push
push
lea
and
movsl
addl
jbe
cmp
jno
mov
inc
or
mov
push
repz
movsb
subb
clc
lret
scas
mov
rcll
sbb
adc
jne
xlat
dec
aaa
sbb
bound
mov
out
push
inc
enter
xchg
rolb
pop
sarb
mov
std
pop
cmpsl
jg
enter
mov
sub
icebp
pop
scas
subl
enter
movsb
sub
dec
rcrl
mov
lcall
es
loopne
in
xchg
adc
mov
sti
sub
adc
cmp
push
xlat
add
pop
inc
add
in
dec
insl
bound
or
jae
mov
inc
jmp
test
js
sbb
add
daa
sahf
pop
movsb
push
mov
repz
mov
iret
mull
out
xlat
stos
inc
rolb
inc
inc
adc
push
enter
mov
jbe
and
loopne
add
cmp
inc
mov
lcall
add
leave
jae
xor
arpl
fs
cmpsb
imul
mov
insb
xchg
clc
sub
or
in
cmpsb
push
cmpsb
mov
or
lds
ret
outsb
js
cmp
into
sti
mov
xor
push
xchg
cmp
pop
mov
rolb
mov
dec
mov
loopne
fistps
adc
pop
jne
jne
and
push
jo
mov
jae
adc
rorb
loopne
cwtl
adc
scas
add
dec
mov
sahf
decb
push
daa
mov
fbld
mov
pop
ret
sbb
in
outsl
and
ret
dec
xor
sub
cli
mov
ja
clc
pop
cmpsl
jp
js
das
sbb
stos
push
jbe
mov
adc
fcomps
sub
xchg
pop
lds
dec
ds
and
or
push
pop
fistpll
sahf
negb
mov
dec
mov
sbb
sub
out
arpl
in
xchg
cmp
jp
hlt
sbb
xchg
jmp
iret
lea
add
ret
das
mov
sbb
cld
inc
push
jns
fdivp
pop
int
inc
aas
ficoms
and
ret
cmc
push
fsubr
and
outsl
ret
in
mov
push
out
mov
xchg
jge
pop
mov
out
cs
test
pop
leave
les
xor
push
ficomps
sbb
test
fnsave
aaa
mov
xchg
cmp
pop
mov
hlt
push
dec
lret
je
mov
popf
fists
cmp
jno
cmp
or
bound
test
test
pop
dec
test
jecxz
loopne
dec
into
push
mov
stos
xchg
xor
pop
aad
pop
icebp
stos
loopne
mov
mov
mov
lcall
sbb
pop
rep
or
out
dec
and
divb
loop
por
jge
call
stc
sbb
fistpll
mov
or
sub
mov
jb
movsl
cs
add
cmp
dec
fcomps
aas
pop
jb
pop
inc
sub
or
lea
push
loop
fsubrl
imul
ss
mov
inc
jecxz
jmp
test
xchg
cli
hlt
addb
lea
es
pop
mov
dec
cmp
inc
or
das
jnp
mov
ljmp
imul
inc
stos
dec
and
pop
pop
cmp
jb
mov
sbb
mov
inc
jecxz
push
cmp
inc
cmp
scas
lods
shrd
pop
pop
enter
sub
mov
push
mov
fisttpl
lret
xlat
cmp
fiadds
hlt
push
push
jecxz
stos
inc
add
sbb
stc
inc
adc
jmp
push
inc
repz
sahf
add
jp
sub
lahf
or
adc
pop
fwait
dec
lods
inc
hlt
call
cmpsl
enter
sub
fcomps
sbb
xchg
xchg
push
mov
stos
mov
jae
and
jmp
mov
rclb
xlat
cmp
mov
fidivrs
aam
sub
push
insb
xchg
lock
nop
gs
push
sbb
or
cmp
xor
orl
test
loopne
cmp
arpl
cwtl
mov
test
mov
fxch
jl
or
pop
pop
js
rorb
and
in
xchg
out
jns
push
insl
or
adc
jge
mov
jp
push
push
xchg
cwtl
pop
pop
stos
mov
cmp
xor
dec
fimuls
or
inc
ret
xor
xchg
cld
lock
movsb
dec
test
jno
sbb
or
ror
or
or
jns
mov
lcall
cmp
lods
scas
lcall
sbb
cld
cltd
sub
loop
lret
xchg
ror
rcr
mov
adc
movsb
fcmovb
sbbb
pop
outsl
xchg
push
pop
pop
adc
push
fcomps
int3
mov
adc
rcl
les
test
add
and
andl
ss
add
xor
adc
bound
roll
lret
cs
or
mov
jns
mov
popa
daa
inc
orb
dec
jmp
pop
adc
mov
ds
add
push
adc
cmpsb
xchg
sub
pop
pop
xor
call
pop
inc
rcr
add
lds
cmp
mov
cmp
xlat
sub
cmpl
fisubrs
cmp
or
lods
std
cmp
stos
push
lods
adc
ror
mov
push
xor
fmul
cmpsb
nop
sbb
cltd
pusha
test
das
aas
xchg
fistps
lods
iret
cmp
dec
xchg
pushw
into
jno
adc
dec
push
cltd
hlt
pop
add
jmp
shufps
sar
je
sub
xor
push
scas
mov
ss
mov
or
pop
xchg
lret
jge
xor
adc
sbb
mov
das
or
inc
cltd
in
movsb
inc
call
loop
pop
cmp
dec
adc
ds
outsl
movsl
mov
faddp
mov
test
shll
or
out
inc
out
popf
xchg
jl
scas
and
xchg
mov
out
pop
in
adc
dec
movsl
lcall
stc
xchg
enter
sbb
sbb
aas
mov
gs
and
jmp
push
xlat
and
iret
cld
repz
imul
cltd
or
popf
repnz
lret
dec
and
jl
xchg
das
lods
sbb
jge
out
fwait
push
dec
in
jmp
out
rol
test
adc
push
dec
mov
xor
fistpll
sub
xchg
aad
aaa
inc
in
cmpsl
inc
sub
mov
stos
dec
pop
addr16
das
or
mov
outsb
lret
xor
mov
shll
notl
mov
sub
jmp
mov
mov
xlat
mov
pop
push
xor
xor
mov
movsl
pop
mov
popa
sub
inc
imul
dec
adc
ja
or
xor
mov
push
cltd
xchg
rcrl
jecxz
and
cmp
cmp
pop
fistpl
cmc
sub
popa
stc
in
xor
jmp
arpl
mov
push
adc
and
add
sbb
push
icebp
arpl
negl
repz
test
dec
lcall
outsb
adc
js
sub
ljmp
jo
aad
mov
lahf
sbb
imul
dec
imull
inc
into
cmc
adc
pop
and
mov
daa
mov
push
loopne
push
and
mov
scas
dec
lods
mov
rcrl
dec
push
xor
sbb
mov
fdivs
jnp
mov
stos
outsl
repz
xchg
dec
aam
sbb
and
jno
xchg
sub
pop
mov
leavew
pop
fwait
cmc
insl
mov
or
sub
loop
xchg
fnsetpm(287
fnstenv
cmp
jecxz
mov
in
xchg
popf
mov
mov
xor
inc
xchg
push
out
out
lea
scas
std
inc
sub
js
mov
pop
enter
pusha
pop
push
lds
lahf
xchg
addb
mov
jne
xor
repnz
xor
sub
int3
pop
sbb
js
push
movsl
cld
adc
mov
movsl
cmpsb
push
jno
adc
call
dec
sub
ljmp
mov
pushl
pop
insl
xor
ffree
cmp
mov
cmp
icebp
xchg
pop
sbb
pusha
xchg
and
pop
popl
js
sub
shlb
cmpsb
stos
mov
push
icebp
or
adc
mov
nop
sub
jbe
push
sbb
xor
sti
aam
fwait
sub
nop
mov
movsl
push
push
ljmp
pop
and
dec
sub
mov
repz
jge
push
jae
fwait
xchg
mov
xor
sub
mov
aaa
cmp
cmp
fistl
xchg
insl
mov
cmp
ret
adc
leave
adc
xchg
dec
lcall
cmp
in
repnz
ret
jp
dec
lahf
mov
xor
push
mov
imul
sub
sub
pop
or
xlat
jo
int
xlat
pop
lcall
pop
adc
jmp
aas
psrld
mov
imulb
loopne
mov
ds
sbb
lods
mov
mov
fldt
or
mov
push
out
dec
pop
pop
sti
inc
and
ret
sbb
mov
mov
inc
outsl
push
sarb
jmp
push
arpl
jo
sbb
fiadds
sbb
inc
repnz
pop
mov
mulb
repnz
jl
fs
pusha
xor
pop
adcb
dec
cmp
mov
mov
push
push
cld
imul
ljmp
icebp
mov
and
mov
push
dec
test
xchg
sbb
imull
mov
lods
mov
in
iret
pusha
mov
hlt
mov
push
movsb
adc
cmp
fisubs
rorb
adc
adc
fndisi(8087
loope
mov
cmp
bound
jle
iret
repnz
mov
pop
jl
jne
sub
push
dec
hlt
cltd
dec
xchg
mov
cmp
flds
rcrb
in
out
andb
mov
push
jle
pause
lods
scas
in
pushf
cld
xor
hlt
iret
loop
jge
adc
mov
lahf
sbb
pop
jmp
xchg
in
psrld
unpckhps
inc
sarl
add
pusha
stc
insl
push
ds
shr
cli
jb
mov
dec
inc
cld
pop
cmp
dec
pusha
sbb
xchg
add
xor
rclb
loopne
inc
push
sub
push
dec
out
sbb
xchg
xchg
mov
pop
popa
mov
clc
jns
lcall
in
and
das
stos
pushf
ror
mov
mov
dec
bound
inc
and
dec
pop
lret
jmp
push
push
icebp
das
mov
mov
aam
cmpsb
jl
in
fstpt
adc
mov
lret
mov
into
cmp
add
inc
in
sub
rcll
cmp
inc
mov
lea
dec
jp
enter
sub
and
insl
dec
mov
jge
mov
in
iret
loope
js
mov
or
sar
add
xor
dec
scas
call
mov
lret
mov
mov
mov
inc
pop
ret
insl
push
pop
add
sbb
mov
xchg
xor
out
orb
push
xchg
jg
mov
xor
pop
bnd
faddl
inc
test
cs
dec
addr16
xor
push
ja
inc
add
aaa
lahf
or
sbb
add
sbb
xchg
data16
sbb
mov
or
adc
adc
ficomps
pusha
mov
repz
aaa
or
mov
lret
fdivr
or
icebp
inc
outsl
testb
clc
jnp
mov
jbe
mov
ljmp
dec
stc
sub
shrb
imul
stos
cmpsl
cli
inc
jmp
insl
sub
iret
jns
imul
mov
dec
xor
push
mov
ficoms
cmp
xor
dec
xlat
scas
rorl
adc
xor
das
pop
sub
es
adc
xchg
push
sub
cmp
call
into
mov
bound
pop
repz
jp
push
in
std
lret
xchg
inc
push
lds
or
stos
push
shl
pop
sbb
sub
sub
pop
call
push
lock
mov
dec
mov
sbb
dec
ljmp
cmpsl
inc
test
xchg
xchg
lods
mov
subb
jno
xchg
mov
inc
mov
adc
dec
cltd
subb
test
add
je
fsub
sbb
ljmp
arpl
pop
stos
adc
decb
jb
push
lods
scas
xor
sbb
push
ljmp
dec
std
lods
test
addr16
scas
addr16
adc
adc
xchg
test
mov
xor
xchg
push
cld
jmp
push
out
pop
cmpsl
js
incl
sbb
fwait
ror
and
push
mov
lret
adc
gs
data16
mov
outsb
imul
adc
imul
icebp
xchg
lret
pop
lock
mov
stc
popf
xchg
and
sub
test
hlt
pop
jle
dec
jne
cmp
mov
out
inc
add
push
test
jb
bound
or
and
sbb
cmp
sti
push
cmpsb
sbb
mov
and
add
sub
leave
xchg
and
sbb
hlt
mov
xchg
out
out
mov
and
mov
call
mov
hlt
das
in
aaa
push
pop
push
ds
sub
cmp
sbb
inc
sub
mov
arpl
or
stos
sti
aad
cmc
in
sbbb
lret
xchg
sub
hlt
push
out
fisubrl
jmp
mov
dec
pop
es
or
inc
xor
jge
jmp
mov
imul
inc
enter
mov
xorb
insb
jo
adc
inc
and
daa
mov
pop
pop
into
dec
add
icebp
ror
arpl
ja
jne
pop
sbb
mov
sbb
mov
xlat
jle
jb
lods
push
cmp
add
fs
shlb
sbb
out
mov
lret
mov
add
cli
lret
or
jg
iret
stos
outsb
adc
or
or
mov
sbb
xchg
pop
cli
in
pop
inc
mov
jle
inc
movsl
cmp
inc
fstl
pusha
nop
mov
int
mov
jp
and
add
adc
lret
out
mov
jae
sub
test
icebp
jl
xor
xor
fwait
sub
inc
fstpl
cwtl
inc
adc
add
sub
push
shll
out
in
mov
fwait
ret
pop
cmp
xlat
das
insb
xor
addb
jecxz
pop
add
outsb
popf
xchg
xor
in
hlt
dec
or
addr16
fs
inc
cwtl
xlat
push
in
in
movhps
in
mov
outsl
jmp
adc
pushl
std
sbb
test
lods
sub
jp
mov
add
jecxz
sbbl
mov
mov
mov
pop
in
movsl
mov
cld
test
or
fwait
adc
icebp
cld
mov
dec
rclb
es
push
test
xor
jns
jp
or
out
push
sar
cmpsl
shl
push
sub
daa
scas
push
test
arpl
push
push
int3
fidivl
in
sbb
insb
push
mov
add
push
add
mov
xor
dec
mov
loop
dec
cmp
lods
xchg
jnp
dec
mov
push
adc
jne
call
inc
xor
mov
and
ret
rolb
pop
test
cs
ret
pop
iret
adcb
push
out
push
fsubrl
pop
adc
pop
in
sub
pop
das
iret
xlat
add
inc
add
sbb
pop
cmp
add
inc
mov
push
push
aas
fnstcw
sub
sub
call
jg
out
sbb
mov
push
dec
xchg
repz
mov
or
or
jbe
test
stc
addr16
mov
cmp
sbbb
sarl
xchg
sub
cld
fcmovbe
int
dec
outsl
shrb
sti
fbstp
pop
mov
inc
push
loope
add
jno
pop
dec
fidivrs
pop
ljmp
gs
scas
dec
neg
aaa
jle
mov
lcall
push
adc
mov
or
mov
sub
mov
ja
outsb
mov
push
and
and
xchg
fdiv
nop
movsl
popa
cmc
scas
jle
sbb
cmp
mov
imul
out
dec
add
stos
orb
ficomps
pop
sub
push
push
and
sub
stc
or
sbb
addr16
stos
ja
imul
xlat
rorl
mov
sbb
cmpsl
cmp
pop
clc
test
pop
adc
pop
mov
jbe
mov
push
jb
mov
cmp
imul
adc
xchg
adc
movsb
and
add
fisttps
jne
xchg
dec
fstp
xor
adc
mov
ficomps
jnp
or
push
mov
into
dec
leave
testb
imul
inc
movsb
push
and
out
scas
xchg
or
mov
stos
or
xor
pop
sub
xchg
mov
dec
adc
stc
adc
xor
xor
and
mov
ret
or
ret
or
into
cwtl
jge
xlat
xchg
rorb
or
gs
xor
mov
shrb
add
jl
xchg
out
adc
imul
popf
add
xor
cmpl
push
das
divb
pop
pop
mov
clc
adc
lods
xchg
pop
js
scas
add
jb
sti
mov
insl
mov
in
xchg
push
dec
xor
les
std
cmp
and
stos
mov
cmpsb
ds
cmp
cld
xor
stos
mov
push
loopne
je
cmp
rcll
sbb
stos
inc
jmp
pushf
or
inc
loope
icebp
or
xor
loope
xchg
adc
dec
lahf
mov
sub
aam
adc
mov
or
pop
or
adc
in
mov
imul
sbb
in
and
cli
scas
sti
jge
faddl
mov
jb
sti
sti
fistpll
dec
insb
pop
mov
loopne
movsl
shl
movsb
push
in
dec
cmc
das
fbstp
inc
xor
pop
sub
popf
jp
mov
fidivl
sub
lods
ds
js
sub
inc
fistps
adc
cli
bswap
pop
mov
out
mov
mov
add
jle
mov
cmp
lret
rorb
or
test
jmp
cmp
mov
pop
dec
mov
addr16
lods
sarl
cltd
pop
inc
lea
xchg
lock
cmpsl
outsl
mov
xchg
popa
mov
stc
cmc
mov
fwait
mov
pop
add
xlat
and
push
push
insl
ss
xchg
and
sbb
sahf
roll
test
cltd
or
push
into
std
js
cmp
and
call
addb
or
jmp
es
jge
stc
loop
hlt
sbb
lock
add
lods
pusha
mov
xor
fadds
mov
xchg
sbb
enter
pop
add
pushf
xor
adc
shll
lods
dec
cwtl
pop
loopne
pop
and
lods
fwait
sbb
xor
push
dec
cmpl
add
out
divw
mov
pushf
fwait
pusha
test
sub
fistpl
js
adc
ss
roll
push
pop
inc
jb
adc
test
mov
push
mov
mov
pop
shlb
pop
fisttpll
pop
jne
in
cld
test
icebp
pop
adc
mov
inc
pop
sub
xor
and
ja
lahf
mov
in
jp
decb
into
jo
sub
xlat
mov
or
mov
or
hlt
into
repz
lahf
xor
add
lea
pop
movsl
fistps
dec
sub
adc
lcall
cwtl
div
nop
jbe
fwait
arpl
sub
hlt
aas
jbe
xchg
in
xchg
or
xor
jae
jmp
xor
test
fldl
push
in
cmp
jae
aam
lods
jo
je
xchg
jnp
mov
inc
add
movb
inc
icebp
sbb
sbb
lea
and
xchg
pop
stc
fs
test
out
add
mov
mov
das
loope
stos
out
inc
sbb
icebp
divb
shll
ret
jnp
lods
js
int3
sti
sahf
push
push
int3
and
loope
add
fisttpl
decl
int
mov
inc
dec
leave
push
and
fdivrs
dec
sbb
add
enter
xchg
out
add
cmp
mov
sbb
sbb
in
adc
push
adc
cld
mov
scas
mov
push
dec
lret
lock
xor
pop
mov
mov
mov
adc
push
jno
push
hlt
sbb
loopne
jo
rcl
lods
and
mov
adc
inc
clc
mov
inc
aaa
test
sahf
pop
pop
push
iret
stos
push
arpl
lock
cmp
mov
nop
nop
imulb
mov
repnz
lcall
js
xchg
sub
aam
jo
jb
push
push
sbb
adc
in
xor
sbb
in
dec
sbb
pop
out
imul
loope
inc
mov
rclb
inc
adc
and
mov
cs
push
push
cld
mov
sub
cmp
js
mov
pop
and
pop
ret
loop
pop
fcoms
adc
sbb
push
enter
js
xor
cld
mov
push
int3
push
pop
je
jg
mov
loope
dec
jg
xchg
cmp
fwait
sub
mov
lret
das
push
inc
outsb
sarb
dec
fs
mov
and
lcall
rcrb
mov
mov
or
sbb
fisttps
in
cwtl
clc
ss
pushf
mov
jbe
xchg
xlat
mov
pop
test
sarl
pop
shl
shll
out
xchg
inc
jmp
lahf
inc
adc
pop
cli
cmpsl
xchg
addl
sbb
mov
loopne
fstpl
rclb
xor
xchg
lea
inc
int3
mov
testl
sub
ret
sbb
ficompl
rcrl
imul
ljmp
mov
inc
into
pop
sti
add
gs
aaa
add
sub
fldcw
mov
pop
aas
jecxz
outsl
push
repz
outsb
mov
or
mov
es
pop
pop
push
cmp
push
xlat
ss
cmpsb
fcmovnb
lret
push
fdivrl
sar
cmp
push
cmc
mov
mov
dec
xorl
or
cs
enter
mov
stos
mov
adc
rcll
xor
lret
push
xchg
and
and
aaa
mov
and
mov
int
push
arpl
bound
int3
inc
push
inc
sub
jo
stos
cmp
mov
shll
leave
lahf
dec
cwtl
lret
mov
pop
jecxz
push
stos
mov
pushl
shll
das
inc
call
idivb
add
mov
sub
inc
push
inc
test
icebp
dec
xchg
icebp
fdivl
mov
jle
daa
cmp
mov
sbb
daa
pop
push
icebp
mov
jno
nop
mov
mov
daa
adc
jmp
ja
test
popa
adc
push
popa
inc
bound
cmpsl
mov
in
hlt
cltd
lods
or
aad
dec
push
xchg
cld
mov
lcall
rcl
or
push
mov
jno
mov
daa
mov
mov
xchg
shll
xlat
push
call
movsb
jl
movsb
xor
frstor
and
lods
xor
push
inc
mov
cmp
in
xchg
fsubrp
call
fbstp
inc
ftst
dec
pop
aas
sub
loope
lret
loope
lcall
xor
clc
popa
ret
inc
shrb
xor
negl
xchg
sub
pop
cs
test
shrl
adc
xor
sub
je
jge
cs
adc
pop
js
lret
rcll
mov
xor
js
xor
mov
push
das
mov
nop
fisubl
adc
xchg
out
jl
cmp
adc
add
jb
std
and
clc
sbb
lahf
mov
pop
jecxz
in
iret
push
inc
sbbl
flds
mov
push
jae
cmc
mov
ss
loope
inc
loopne
adc
add
lret
ja
mov
mov
xor
dec
add
or
insl
sbb
aam
popf
sbb
push
jp
push
repz
mov
xchg
rclb
mov
or
add
shll
mov
inc
decb
inc
repz
js
xor
pop
int
or
pop
imul
cmp
scas
cmp
or
ds
push
mov
lods
clc
repz
sbb
mov
sub
mov
cmp
lods
xor
pop
xor
sahf
xchg
out
sbb
pop
cmp
lcall
add
inc
orb
mov
xchg
leave
add
dec
dec
sbb
repz
mov
and
pop
stos
push
cld
test
ss
fldl
mov
add
xor
cmpsb
shll
xor
add
inc
aas
rcrl
sbb
jge
adc
gs
test
mov
or
aad
mov
sbb
sub
arpl
dec
dec
dec
xchg
mov
cmc
and
ret
shlb
imul
xchg
dec
sub
rorl
jmp
jbe
cmp
dec
jno
add
stc
andb
add
or
test
es
mov
jmp
out
add
shll
mov
lock
mov
fcomps
lahf
xlat
sub
xchg
xchg
out
fwait
xor
push
dec
jle
fwait
sbb
add
orb
in
mov
pop
xchg
ljmp
fidivl
ds
cmp
je
cli
cmp
outsb
sbb
xchg
adc
xor
test
mov
shl
inc
in
or
or
xchg
push
and
rcl
test
out
jmp
sbb
test
xchg
daa
roll
loopne
jae
sub
cmp
dec
fs
pop
sbb
hlt
xchg
or
pop
loop
faddl
or
gs
dec
adc
loopne
inc
movb
push
sub
cmp
clc
cmp
movl
movsb
aam
adc
cli
int
push
fisttpl
and
cwtl
push
outsb
jmp
jl
mov
jbe
sub
inc
pop
sti
out
mov
cmpsl
and
enter
and
xor
mov
mov
pop
rclb
pusha
sbb
cmp
and
push
in
addr16
cmp
fwait
or
leave
enter
data16
push
push
insb
mov
test
sub
iret
aaa
lods
mov
fdivr
push
pop
sbbl
inc
jecxz
mov
repz
sbb
xor
inc
ss
add
cld
call
es
pop
and
dec
push
jecxz
sbb
leave
mov
bound
test
loop
loop
inc
pop
jl
mov
jbe
jg
lds
jbe
add
cli
xor
lods
insl
xchg
call
and
loopne
mov
or
xor
int3
pop
inc
push
scas
sbb
and
cli
ret
dec
movsl
shlb
test
jb
xlat
scas
push
mov
cmc
xor
push
imul
fimuls
push
adc
jle
or
mov
and
icebp
cmovle
loopne
dec
sbb
lret
outsb
icebp
adc
xor
mov
jle
ds
xor
shlb
shlb
push
sarl
or
jb
hlt
adc
test
push
jp
ret
mov
js
sub
cwtl
adc
mov
pusha
fwait
popf
mov
iret
jne
inc
sbb
aad
cs
or
mov
mov
mov
leave
outsb
loop
mov
cli
cmpsl
callw
cmp
fisubrl
jnp
divb
aas
add
dec
pop
adc
mov
xchg
in
pop
adc
xchg
pop
push
jns
push
push
divl
push
pop
sbb
sbb
outsl
inc
fcoms
aam
push
sbb
sbb
inc
push
ss
loope
lock
pop
test
push
xor
iret
mov
sbb
jnp
jns
outsl
mov
cmp
dec
xchg
push
fstpl
jmp
mov
jbe
pop
jbe
out
enter
rcrb
and
add
cmp
and
lds
mov
shrb
or
push
push
add
or
lcall
test
je
jmp
cli
mov
adc
jl
fldcw
add
repz
cld
inc
jp
dec
mov
out
stc
aam
stos
push
and
xchg
loope
inc
ss
stos
cmpsb
leave
js
cwtl
inc
repz
jne
scas
pop
ret
in
pusha
adc
movsl
jp
cld
dec
inc
int
cmp
mov
push
push
std
jnp
js
imul
negl
mov
jl
mov
add
fcomps
push
or
in
loopne
les
jmp
ret
jne
xchg
sbb
lcall
int3
sbb
mov
fwait
dec
out
fildll
adcl
mov
insb
aaa
dec
je
jo
mov
add
popa
mov
cmc
popa
test
fildll
push
jmp
ja
hlt
mov
mov
inc
mov
mov
rorl
mov
or
jmp
popf
xchg
jp
dec
adc
rol
aam
clc
adc
pop
add
aas
ret
call
movsb
xor
inc
xlat
in
jmp
inc
test
mov
mov
dec
adc
cmp
push
mov
push
ljmp
popa
xor
jmp
dec
ja
fdivl
aas
rcrb
add
lret
fsubrs
add
mov
stos
xor
imul
fwait
shr
pop
jae
aas
push
push
hlt
mov
push
push
test
xorb
cmpsb
insl
scas
insl
sub
fldlg2
clc
add
sub
aaa
adc
cmc
mov
test
call
mov
in
pop
jno
mov
or
push
xchg
and
jno
lret
imul
or
imul
and
stos
or
or
test
and
xor
cmp
sbb
int
sub
sarl
inc
les
adc
adc
sbb
pop
jmpw
rcl
int3
adc
push
sbb
loopne
jne
sbbb
or
mov
stc
xchg
jle
lods
inc
pop
in
scas
daa
lea
enter
push
shll
rcrl
sub
lock
inc
and
rcll
mov
movsl
pop
inc
shlb
rcll
int3
lret
cld
push
repz
adc
icebp
pop
sbb
push
nop
test
scas
and
mov
xor
out
scas
dec
xlat
cwtl
insl
sti
mov
inc
js
xlat
jp
push
mov
addb
fists
push
adc
fistps
lds
inc
sub
push
sbb
push
mov
mov
xor
jb
jo
pop
xor
rcl
push
push
repnz
sets
lret
add
mov
out
outsb
xchg
add
repnz
sub
shrl
ljmp
or
pushf
aaa
testb
pop
xor
outsb
xor
xlat
leave
es
lds
outsb
stos
imul
inc
test
xchg
xchg
loop
aaa
dec
inc
mov
sub
mulb
loop
xchg
pop
adc
adc
shrl
mov
out
xchg
bound
mov
mov
shlb
andl
out
adc
pushf
sti
inc
pop
in
notb
inc
sarb
cmp
mov
mov
js
inc
shlb
cli
inc
adc
mov
pop
cltd
cwtl
push
and
dec
aas
push
xchg
repnz
je
into
sub
add
repnz
je
sbb
push
add
cltd
clc
xchg
aaa
nop
inc
cmp
xchg
sbb
pop
outsl
das
stos
sub
nop
cld
sub
inc
lds
push
lds
xor
xor
movsl
fs
test
sub
fmuls
jmp
popf
mov
xor
push
test
jno
mov
sbb
loopne
xchg
shr
outsw
ss
aaa
rorl
or
outsb
out
lret
filds
lcall
mov
cmp
test
int
sub
in
in
cmpb
mov
mov
mov
into
sbb
pusha
aaa
pop
pop
push
clc
pop
mov
in
jl
add
fnstcw
xor
pop
push
data16
sbb
pop
inc
das
ja
fninit
add
and
xchg
xchg
cwtl
popa
pop
xor
push
mov
mov
adc
rcrb
fldl
popa
lea
jmp
mov
outsl
jmp
pop
test
jmp
sbb
xor
nop
in
ss
and
test
add
call
insl
adcb
lcall
into
pop
fcom
xor
imul
jg
add
mov
xor
sbbb
test
mov
xlat
fsubrs
rcll
cmpsb
xchg
loope
repnz
push
hlt
xor
sub
cmpsl
aas
sub
fisttpl
xor
mov
lret
inc
out
adc
scas
sbb
ficomps
mov
pop
aaa
in
xor
dec
into
mov
lahf
bound
aas
and
pushf
pusha
dec
loope
mov
mov
sub
mov
lahf
leave
pop
mov
push
data16
inc
out
rcrb
pop
cmp
adc
cmp
data16
dec
insl
jmp
pop
cmpsb
pop
adc
push
sbb
push
push
sub
lds
sbb
pop
xchg
dec
in
mov
call
pop
imul
mov
mov
pop
pop
je
mov
aaa
repnz
xchg
sbb
push
imul
dec
aad
cmp
rep
aam
dec
inc
mov
pop
hlt
adc
fwait
push
dec
cmp
xor
sbb
lock
jl
and
fisttpll
xchg
lds
mov
sahf
dec
inc
mov
pop
shl
push
xchg
xchg
jecxz
pop
fisubrl
or
repnz
outsb
cmp
push
xchg
scas
insb
repnz
push
repnz
adc
sub
xchg
mov
add
push
outsl
cs
loope
pop
cmc
mov
mov
ja
xchg
ss
xor
pop
movsl
testb
lahf
es
xchg
jle
xor
aaa
sbb
lret
push
jns
insb
xchg
push
call
pop
repz
mov
ljmp
inc
push
ret
xor
cltd
fidivs
xchg
cmp
mov
add
and
pop
into
xchg
leave
in
je
adc
movsl
es
jb
out
hlt
das
pop
jbe
int3
xlat
sub
adc
out
sub
scas
or
push
jo
mov
enter
xchg
lahf
sub
lret
stc
mov
xchg
adc
mov
arpl
test
jae
ss
pop
inc
stos
and
outsl
repz
loopne
cmp
cmp
aam
add
repnz
mov
pop
sbb
std
and
insb
iret
jb
stos
adcb
fcomps
pop
sarb
stos
lods
mov
mov
test
popf
hlt
adc
xchg
popl
arpl
xchg
or
cmp
pop
clc
and
test
xor
loopne
jmp
or
jl
insb
imul
andb
je
es
xor
popl
iret
jmp
aad
or
add
or
mov
cld
inc
imul
in
idivl
xchg
mov
fidivrs
add
das
movsl
ror
mov
or
jle
xlat
fdivrs
les
movsb
adc
movsb
jge
loop
jne
cmp
ljmp
dec
push
insb
mov
dec
dec
fldl
push
mov
leave
cmpsl
shr
pop
and
pusha
je
test
outsl
pop
mov
iret
xchg
xchg
push
and
mov
fstpl
and
mov
mov
and
mov
ja
pop
aaa
mov
jbe
push
cmp
xor
mov
inc
jge
lahf
jge
fidivrl
movsl
das
mov
std
and
mov
mov
cmp
int
inc
gs
push
sbb
sub
loope
rorb
inc
scas
fs
test
inc
ret
in
lea
cmp
es
pop
xor
lods
aaa
dec
rcrl
cltd
sub
pop
mov
decb
mov
bound
push
xchg
push
mov
fwait
mov
mov
hlt
cwtl
iret
jle
sbb
in
sbb
xchg
pop
rolb
mov
sti
and
push
leave
lahf
movsb
sub
jecxz
cltd
out
add
and
mov
lods
xchg
xchg
xchg
add
movsl
jmp
out
mov
adc
add
or
cmp
cmc
cmp
jecxz
sub
mov
xor
pusha
adc
xor
int
sbb
add
jg
out
mov
jecxz
add
push
xor
push
mov
addr16
xorb
loop
imul
lahf
mov
jge
sub
sub
cwtl
roll
mov
lods
xchg
mov
cli
insl
dec
mov
mov
lret
cmp
shlb
mov
inc
lahf
stos
rclb
sbb
outsb
fwait
adc
and
notl
mov
loopne
das
mov
add
push
cmc
popa
jne
and
ret
cmp
push
js
cmc
adc
lea
mov
leave
mov
stos
repz
mov
fbld
sub
daa
xor
pop
repz
sbb
dec
mov
movsb
mov
popf
mov
jae
inc
adc
pop
gs
lea
mov
jp
pop
mov
popf
call
push
dec
movb
call
mov
add
iret
pop
and
jp
and
ja
cwtl
or
add
xor
adc
adc
imul
inc
push
cmp
ror
into
ss
or
xchg
btr
imul
push
inc
pop
add
out
fcmovu
jle
and
insl
test
test
adc
or
push
or
cmpsb
pop
dec
testl
movsb
rorb
sub
xchg
rclb
int
inc
scas
out
shl
pop
add
and
mov
adc
add
test
dec
pop
fisttpl
cwtl
ljmp
popf
dec
in
cmpl
xchg
inc
shrl
out
addr16
scas
scas
adc
inc
pushf
jns
xchg
shrb
cmc
jmp
pop
test
clc
jo
and
popl
add
pop
testl
lret
iret
sbb
jnp
inc
add
and
out
mov
jmp
push
jecxz
int3
ja
insb
mulb
push
dec
mov
xor
jns
cmp
adc
pop
lahf
pop
call
cwtl
popa
xchg
xchg
test
add
sub
das
pop
rcll
scas
gs
jb
leave
das
mov
xchg
mov
test
lret
push
fisttps
mov
and
push
xchg
push
jbe
scas
mov
xchg
out
mov
pop
inc
mov
sbb
xchg
or
iret
push
sbb
push
pop
xchg
mov
jb
insl
cli
jl
cmp
xor
cwtl
lret
outsb
lret
or
mov
sbb
xchg
mov
roll
xchg
xchg
out
cmp
roll
lods
mov
int3
lahf
outsl
push
imul
xchg
jg
std
aaa
cmpsb
pop
lods
sbb
fmuls
ljmp
int3
shrl
jo
iret
test
nop
jecxz
pop
dec
rcrb
adc
mov
mov
pop
mov
push
ss
jbe
jmp
adc
je
in
push
pop
es
cmpsl
rcrb
jno
aad
sub
aaa
xchg
loopne
stos
cs
insb
mul
and
loopne
pop
cmp
mov
sbb
leave
jecxz
enter
popf
aas
roll
pop
or
or
jne
dec
mov
pop
daa
add
mov
dec
loop
sbbb
hlt
pop
jmp
rorl
xchg
lods
mov
cwtl
data16
sub
and
shlb
mov
jecxz
stc
dec
mov
out
jb
pop
stos
int3
js
jmp
lea
adc
lret
mov
push
scas
inc
imul
ds
iret
les
add
imul
mov
bound
lret
xor
decb
or
dec
rcll
pop
sub
xchg
dec
test
enter
sub
mov
jmp
outsl
in
xor
add
add
mov
mov
dec
adc
fsubl
test
das
aam
mov
stos
loop
loopne
jae
adc
dec
jle
push
movsb
mov
jmp
cs
jb
push
adc
jge
movsl
pop
mov
add
into
xor
mov
pop
cmc
popa
ds
or
pop
stos
inc
inc
dec
insb
aad
xchg
mov
cmova
push
ret
push
lods
faddl
popa
data16
mov
jge
jno
pop
sbb
or
pop
dec
and
ror
subl
mov
in
lods
stos
jmp
fisttpl
outsl
test
xlat
mov
insb
adc
jbe
sbb
xchg
sub
sbb
or
add
movsl
into
std
imul
test
mov
sbb
popa
push
pop
adc
test
fwait
lahf
and
adc
fildl
pusha
inc
sbb
mov
mov
popf
out
pop
insb
xchg
cltd
xor
dec
insb
mov
sbb
sub
pop
jb
jnp
cmpsb
aad
xchg
sbb
cmpsb
inc
aad
mov
xor
fxch
mov
add
xchg
xchg
mov
lret
int
xchg
jno
jo
cmp
mov
cmp
inc
enter
add
dec
insb
negl
pop
add
jp
pop
jg
fcom
andl
sub
mov
ja
loopne
lcall
sub
add
add
xchg
jg
sbb
sbb
sub
push
xor
addr16
std
push
ret
fsubl
stos
icebp
add
inc
xchg
dec
mov
loope
or
lret
jae
adc
cli
push
jo
cwtl
orb
push
pop
mov
inc
or
decb
subb
push
sbb
add
add
stos
mov
mov
lds
ja
mov
adc
push
sahf
fwait
add
xchg
xchg
test
jae
shl
push
and
cwtl
call
push
mov
adc
mov
add
cmp
dec
dec
xor
and
pop
ljmp
and
lods
adc
test
adc
jge
cmp
push
fwait
sbb
inc
cmpsb
sbb
test
adc
pushl
cltd
add
aad
xorl
pop
push
cmp
or
sub
adc
call
and
jp
push
jecxz
pop
inc
lock
sbb
add
arpl
sbb
jb
mov
into
imul
push
mov
mov
mov
sub
jge
inc
lods
pop
mov
mov
out
cmp
jbe
cwtl
xchg
or
fwait
jnp
fcmove
cli
scas
ds
dec
xchg
fistpll
mov
and
mov
cltd
add
mov
ds
jl
adc
arpl
ret
sub
push
adc
rcrl
lds
push
mov
pusha
and
stos
fucomi
stc
or
add
bound
lcall
cmp
inc
mov
clc
adc
mov
jae
push
cltd
fidivs
cwtl
xlat
arpl
iret
lea
out
cmp
xchg
stos
icebp
scas
popa
adc
mov
or
adc
in
push
or
sti
icebp
cmp
jl
cltd
int3
fdivs
stos
std
xchg
icebp
jo
pop
data16
mov
mov
dec
fidivrs
hlt
ljmp
shl
mov
xor
out
outsb
popf
je
insl
jo
add
push
inc
aaa
cmp
dec
lcall
pushf
jecxz
fsubrl
dec
pushf
in
mov
test
push
sbb
jl
lahf
pop
iret
mov
out
and
movsl
pop
mov
ja
push
addl
imul
sbb
clc
jns
sbb
mov
xor
mov
test
xchg
shlb
xor
lods
mov
adc
push
adc
pop
cmp
mov
lcall
sub
insb
cmpsl
nop
jno
cmpsl
push
scas
adc
adc
shlb
and
xchg
rcrl
dec
jge
in
fmuls
dec
rolb
bound
cmp
fcoms
and
push
sbb
les
aas
lret
roll
mov
push
xchg
jl
push
shld
pop
lahf
lret
lock
xor
js
sahf
sahf
in
in
in
mov
xor
decb
mov
push
push
pop
mov
data16
pop
mov
bound
test
das
pop
das
sahf
sets
pop
ret
inc
xor
int
jno
pop
shl
rorb
inc
pop
pusha
test
xor
in
ss
insl
sub
pushf
stos
cli
add
xchg
mov
loope
out
dec
out
loope
xor
hlt
in
pop
cmp
pushf
mov
xrelease
jmp
mov
sbb
mov
or
jg
in
jb
xchg
icebp
mov
jns
daa
jnp
fisubs
mov
psubd
iret
pop
sub
and
sbb
jo
push
push
xchg
sub
fsts
pop
roll
pop
adc
daa
jg
popa
cmpsl
loope
mov
lea
xor
jp
loop
jo
push
mov
gs
sbb
cmpsl
push
mov
adc
push
cld
sahf
mov
or
cmp
es
fldcw
sub
lret
pop
ret
lret
push
or
push
add
ljmp
push
mov
sub
cmp
mov
xchg
jae
arpl
pop
fsub
sbb
push
js
jg
mov
sahf
sub
call
push
add
jmp
or
roll
jl
addr16
jge
lock
std
enter
ss
jns
mov
or
test
mov
push
bound
push
imul
jge
add
inc
popa
es
in
cmpsb
sub
sbb
sbb
sub
sub
mov
sub
sub
mov
mov
pop
push
jo
movsb
in
dec
sbb
fwait
sub
roll
ljmp
inc
fisubrl
hlt
pop
mov
lods
pop
inc
cmpsl
sti
push
adc
xor
pop
sbb
mov
and
icebp
push
and
cli
in
js
movsb
adc
adc
je
aas
aas
xchg
lcall
add
ds
jae
push
cs
data16
push
push
frstor
and
pop
es
mov
adc
leave
jmp
xor
cltd
mov
cmpsl
sti
push
dec
mov
adc
cmp
inc
ss
lods
data16
sbb
lret
sti
dec
in
inc
xor
pop
out
pop
mov
adc
rclb
test
jbe
fisubl
inc
adc
movsl
stc
add
dec
xor
pushf
or
xchg
nop
jne
movsb
xchg
aad
imul
dec
xor
fsubrl
gs
in
jnp
jne
adc
mov
arpl
push
fs
hlt
mov
movsl
xchg
add
mov
lcall
dec
dec
outsb
inc
pop
leave
and
jge
aam
stos
ds
add
jbe
loope
xchg
test
inc
hlt
aad
xchg
mov
loope
jae
out
int
pusha
and
pop
inc
push
cmp
xchg
add
stos
pop
movsb
jge
int3
inc
push
jbe
lock
mov
popa
out
ljmp
in
jo
xchg
das
and
push
push
out
adc
pop
stos
inc
push
loope
mov
and
adc
and
lock
push
mov
out
xchg
jne
add
shlb
lret
fimuls
jne
or
scas
mov
adc
xor
or
std
call
test
sbb
pop
jle
mov
js
add
leave
pushf
repz
fcompl
arpl
lahf
cmc
add
imul
lds
or
pop
sar
rcpps
mov
and
mov
mov
roll
js
cltd
inc
or
pop
xchg
mov
push
out
outsb
out
adc
stc
scas
dec
loope
push
add
imul
pop
sbb
and
fs
mov
xchg
rorb
or
das
dec
pop
stos
rcrl
or
ss
das
mov
repnz
mov
cmc
fbld
ja
ds
mov
in
mov
xchg
das
xor
jmp
jb
shrl
jle
into
ficomps
pop
xlat
mov
dec
popf
shrl
aad
es
lds
or
xor
adc
mov
add
sbb
mov
inc
jg
sti
leave
mov
cmp
push
daa
test
adc
xchg
fistl
fyl2xp1
inc
mov
out
inc
inc
jecxz
mov
jnp
mov
sub
movsl
ljmp
or
in
sub
divl
jnp
lds
lods
insb
push
dec
addr16
and
stos
pop
cmp
daa
icebp
dec
and
sahf
inc
jb
xlat
test
jb
or
mov
test
stos
scas
imul
cmc
mov
xchg
xor
mov
out
out
repz
lock
rcll
shl
or
xchg
mov
fwait
pushf
xorl
mov
inc
push
push
mov
ja
fidivs
sahf
sub
jns
inc
cmc
pop
dec
xchg
insb
pushf
js
inc
aam
dec
lret
jo
das
xor
xor
push
mov
cli
jns
push
mov
rcr
jae
inc
cmc
push
lock
lock
and
and
rcll
and
push
dec
mov
or
jecxz
shrl
mov
pop
in
add
mov
stc
cmp
fadd
mov
cs
pop
pop
or
in
clc
mov
cmpsl
sbb
xlat
pop
pop
push
movsb
jb
stc
pushf
inc
or
push
lock
int3
pop
stos
inc
mov
adc
rclb
fdivl
mov
mov
xchg
data16
push
dec
mov
test
dec
cs
test
jp
sbb
push
lcall
dec
out
in
sub
jp
push
jge
push
loope
xor
and
mov
mov
icebp
sub
iret
in
and
repnz
mov
add
adc
cli
fdivrs
jmp
out
and
rcrl
sub
xchg
xor
jb
add
xchg
sbb
repnz
ffreep
test
and
adcl
gs
divl
shrb
xchg
subb
pop
mov
add
repnz
cmp
pop
sbb
add
insl
subl
frstor
dec
shrb
in
mov
in
mov
push
mov
cmp
inc
lods
test
rcrb
cmpsb
xchg
sub
mov
push
out
sbb
lahf
add
popf
mov
stc
in
outsl
dec
push
pop
cmovg
and
jo
xchg
cmp
aas
popf
jae
push
mov
jmp
xorl
addl
or
jp
cmc
or
movsl
cmpl
add
insb
dec
ud0
xchg
dec
sub
sbb
int
sbb
popa
mov
icebp
mov
sub
mov
push
adc
and
xchg
mov
das
jbe
pushf
inc
in
clc
sub
xor
icebp
mov
nop
pop
mov
insb
dec
je
pop
movsl
mov
mov
xchg
sti
insb
clc
imul
mov
xchg
in
lods
pop
inc
or
push
cmpsb
jo
xchg
cld
cmp
clc
push
dec
or
mov
mov
sub
cmp
mov
push
daa
mov
mov
mov
jne
stos
jno
je
shlb
adc
test
loop
loopne
adc
cli
mov
sahf
xchg
movsb
inc
and
adc
and
aad
mov
mov
pop
add
or
sub
test
insl
movsb
xchg
or
adc
dec
pop
aaa
xor
mov
out
xchg
std
dec
out
lea
stc
mov
mulb
cmp
inc
loop
in
xchg
decl
mov
cmpsl
cmc
lds
insb
adcl
in
jg
adc
stos
sbb
add
andb
into
xchg
mov
into
add
jb
test
mov
imul
mov
xor
insl
mov
ss
mov
push
xchg
sbb
addb
dec
lret
gs
mov
mov
sbb
das
lods
push
ds
xchg
mov
mov
and
sbb
lahf
cmpsl
pusha
xchg
repz
inc
cmp
in
test
pop
jmp
jno
repnz
mov
ficoms
pop
shlb
push
pusha
hlt
insb
mov
stc
aam
outsb
pushw
xor
jge
mov
mov
leave
cmp
lds
fiaddl
sub
cs
sahf
scas
test
pop
lcall
add
pushf
fldenv
mov
xchg
and
cmpsb
xor
cmp
push
jg
push
sub
ja
stos
mov
rclb
xchg
lea
or
cmp
stos
push
cmp
hlt
sub
mov
lret
movnti
stos
xor
or
jo
sahf
sbb
adc
call
xchg
mov
cltd
pop
jle
mov
dec
push
and
nop
pop
add
push
push
push
push
xchg
xchg
sbb
cwtl
mov
int
xchg
sbb
push
push
test
das
stc
mov
mov
jmp
roll
rorl
test
mov
stos
inc
test
int3
enter
push
xchg
xor
jne
mov
cmp
das
push
sbb
jns
mov
cmp
xor
push
mov
rep
aas
mov
sbbl
ja
push
sbb
hlt
cmpsb
cmp
jg
push
sti
pop
pop
and
loop
mov
dec
lea
jbe
data16
mov
dec
mov
mov
icebp
xchg
sub
test
aad
cmp
cmp
mov
lock
pop
shl
das
ficoml
adc
inc
pop
cmp
cmp
fistpl
rclb
jmp
je
xor
fs
insb
mov
enter
push
addr16
pop
aaa
int
mov
cs
sub
repnz
sbb
or
jmp
inc
sti
repz
sqrtps
cmp
outsb
push
sbb
sub
jo
sub
or
xor
xchg
jbe
div
jb
and
jmp
or
jmp
insl
out
test
test
pop
les
fcom
call
mov
pusha
cmp
adc
rol
popa
and
daa
in
addl
inc
push
cmp
sbb
push
push
pushf
fmuls
and
inc
push
cwtl
sub
clc
mov
xchg
mov
test
mov
push
pop
in
shr
sti
hlt
add
push
fsubrs
lods
mov
xor
push
rcrl
cwtl
insb
or
call
pop
testw
cwtl
aaa
iret
and
or
cmpsl
test
dec
pop
hlt
mov
mov
cmp
add
push
lahf
dec
push
int
xchg
div
xchg
aad
js
bnd
out
std
xor
push
enter
andb
int
sub
sbb
push
movsl
fstp
dec
stos
gs
push
mov
pop
mov
icebp
dec
pop
dec
ret
push
lret
ljmp
add
lcall
shlb
xchg
or
movsb
ds
push
xor
repnz
mov
push
decl
jle
dec
testb
pop
insl
fcom
movsb
or
xchg
aas
sub
push
cmpsb
push
lock
xchg
dec
ret
sub
lock
mov
lar
push
mov
dec
sbb
lret
push
cli
cmc
pusha
fldcw
mov
fwait
hlt
movsl
stc
xchg
mov
dec
outsl
out
outsb
lods
aas
or
popf
xchg
pop
adc
stos
pop
mov
das
mov
ja
iret
dec
testl
mov
fistps
sub
push
in
sbb
pop
xchg
aas
sarl
lods
fnstcw
xchg
gs
push
xlat
xchg
xchg
inc
scas
xchg
aad
fbld
out
mov
sti
mov
cwtl
dec
jne
arpl
inc
imul
pop
dec
and
pop
dec
repnz
sub
cmpsb
mov
sbb
mov
repz
aas
sbb
jnp
negb
test
leave
and
cmc
xor
mov
mov
inc
mov
das
insb
dec
mov
mov
les
xchg
ljmp
ljmp
jmp
dec
xor
int3
mov
loop
cmp
movsl
pop
inc
sub
sbb
pushf
dec
outsb
xor
mov
inc
pop
pop
mov
xchg
add
scas
movsb
mov
outsl
movsl
xchg
adc
xchg
pop
mov
cmp
movsl
lahf
and
dec
mov
out
and
xor
in
jnp
push
push
cmp
jmp
inc
jns
insb
sarl
xchg
lds
mov
add
inc
fnstsw
sub
pop
mov
int
arpl
xchg
inc
cs
mov
mov
push
ret
mov
xor
mov
fs
je
xor
pop
inc
dec
out
cmp
or
mov
aad
lret
pop
hlt
mov
mov
out
xchg
push
add
lret
sbb
filds
or
aam
push
aaa
lds
push
push
xchg
inc
popa
rcrl
test
pop
lcall
int
mov
push
add
repz
jns
test
stos
adc
icebp
test
mov
roll
rorl
xor
mov
sbb
test
xchg
push
jp
cmp
add
shrl
sub
movsl
test
xor
pop
jp
dec
decb
roll
arpl
loop
inc
stos
and
and
jp
icebp
xor
fcoml
test
cmp
or
or
sub
mov
clc
rcrl
mov
mov
les
xor
cmp
push
adc
in
subl
jae
adc
lahf
pop
fldt
rorl
orl
addb
rcrb
lods
das
xchg
or
sbb
mov
imul
movsl
jno
sub
ljmp
adc
arpl
sbb
les
mov
imul
movb
js
sbb
push
pop
daa
and
imul
and
stos
test
cmp
sbb
sbb
push
mov
cmp
cld
popf
daa
push
cmpsl
mov
add
pusha
inc
mov
and
testl
and
into
movsb
filds
mov
push
stc
jmp
mov
lcall
xchg
jnp
pushf
fldln2
inc
pop
fstp
scas
jge
adc
aaa
rol
inc
inc
dec
push
xchg
je
jns
loopne
pop
and
nop
enter
mov
andl
xchg
mov
std
call
mulb
sti
imul
out
out
cmp
outsl
pop
jmp
scas
xchg
lea
xor
clc
cs
inc
jb
dec
repnz
bound
fwait
push
imul
add
loopne
rolb
and
add
xor
cmp
xchg
insb
stos
test
push
inc
call
mov
cmpsb
pop
pusha
out
and
fdivs
add
mov
mov
mov
dec
ss
inc
cmc
inc
push
sub
add
cmp
cli
dec
pop
mov
sub
rcrl
or
iret
push
pop
imul
jbe
add
ret
dec
mov
mov
sub
test
flds
sti
push
fsubrl
in
adc
sbbl
inc
pop
pop
cmpsl
xchg
mov
cmc
test
dec
dec
mov
lock
andb
add
sbb
rorb
fwait
loopne
or
loop
cmpsl
int3
add
jle
cld
adc
jmp
movsl
xor
push
inc
sbb
jmp
cmp
cmp
hlt
fildll
jo
in
cmpl
xchg
jnp
loop
mov
fsubrs
iret
lret
out
pushf
out
xchg
xlat
mov
lods
jg
adc
js
call
inc
xlat
mov
icebp
pop
cmc
out
jnp
dec
inc
pop
les
pop
pop
js
xor
divb
jnp
daa
sub
inc
xchg
or
pop
jg
xor
outsl
aaa
dec
cmp
sbb
adc
push
dec
xchg
jmp
adc
fdivl
test
or
imul
rolb
push
xchg
or
ret
in
dec
icebp
inc
aaa
mov
mov
popa
mov
lret
dec
hlt
jb
cwtl
popa
addr16
push
adc
adc
pop
mov
mov
mov
jno
sbb
add
dec
ret
mov
scas
xchg
das
push
outsb
ss
jne
push
push
pop
loopne
or
out
xor
cmp
test
cmp
inc
repnz
pop
inc
test
xchg
sub
shll
xchg
mov
clc
push
sbb
and
xorb
sbb
and
push
iret
inc
out
pop
mov
sbb
sahf
adc
xchg
jns
roll
adc
mov
loop
jg
test
lahf
sbb
or
dec
fwait
or
ret
cmpsb
mov
jg
shr
jns
insl
test
insb
ja
bound
fs
pop
test
push
cmpsb
fidivl
pop
adc
sti
push
xchg
test
mov
repz
push
pop
or
lock
xor
enter
bound
fld
inc
idivb
xchg
mov
hlt
insl
cltd
xchg
cmp
sbbb
push
sub
loopne
mov
decb
stc
pop
hlt
dec
in
ds
shrl
mov
aad
inc
add
lds
and
aaa
in
out
lret
add
xor
dec
xor
outsb
arpl
inc
pop
stos
inc
jo
aas
xchg
ja
lahf
int3
push
stos
out
stos
adc
popf
jns
repz
lret
outsl
lret
xor
xor
ja
aam
jp
fimuls
sub
sbb
es
mov
mov
lods
sbb
pop
xchg
mov
repnz
les
adc
pop
push
and
mov
push
cmc
xchg
jnp
add
aad
js
pop
call
decl
cmp
adcb
xchg
lds
ja
popa
cmpsl
sbb
stc
movsb
push
and
cvtps2pd
int
addl
push
aad
mov
pop
add
jecxz
or
mov
aaa
nop
push
dec
popf
sub
or
ret
push
cmp
push
imul
pop
andl
aad
mov
and
mov
mov
pop
ss
lds
movsl
int
mov
mov
es
or
push
imul
cs
mov
mov
adc
adc
jnp
pop
and
lea
lcall
xor
pop
in
pusha
sar
cmp
rclb
sahf
fisttps
sbb
sbb
xchg
dec
orb
subl
lcall
lret
jp
jmp
bts
jge
cld
dec
jecxz
jns
pop
push
repz
xchg
xor
mov
dec
pop
lcall
sub
ljmp
fidivrl
cmc
ret
mov
sbb
es
cmp
jge
int
cmp
in
pusha
dec
out
std
push
mov
jae
push
mov
pusha
sub
sbb
icebp
xor
fs
dec
scas
out
sbb
ret
mov
inc
and
xor
sbb
mov
lea
in
mov
mov
mov
dec
cmpsl
add
lds
mov
fdivrp
sbb
lret
lock
add
divb
inc
xor
adc
cltd
mov
pop
sub
mov
mov
imul
outsb
sbb
stos
lret
incb
inc
mov
mov
mov
mov
rsm
xchg
leave
sub
stos
cmp
fimull
mov
fwait
inc
sub
push
mov
xchg
mov
xor
cmp
xor
ja
fistl
js
les
data16
fdivrl
je
adc
sub
pop
nop
mov
dec
and
sti
gs
and
in
and
mov
inc
adc
push
mov
insb
jbe
xor
lahf
stc
int
mov
pop
pop
jnp
cltd
push
out
nop
xchg
leave
addb
add
inc
lret
push
add
sar
sbb
jne
push
std
fcmovu
pushf
repz
dec
and
aad
jne
xchg
dec
push
out
test
add
lret
rorl
cmpsb
das
pop
nop
mov
test
in
daa
sarl
nop
push
mov
roll
movsl
orl
inc
into
pop
add
push
jns
mov
jmp
and
iret
jnp
mov
rorb
rep
add
fistps
nop
inc
and
jmp
adcb
cmpsl
notl
xor
and
adc
je
nop
fcmovb
aas
mov
inc
gs
insl
pop
ljmp
add
mov
or
aaa
test
call
pop
push
jmp
push
daa
lcall
push
jmp
jg
jbe
mov
adc
push
pop
adc
inc
cs
sub
push
sbb
pop
push
scas
repnz
cli
dec
mov
das
scas
mov
insb
mov
les
leave
movb
xor
orb
arpl
cmp
fucomi
mov
adc
ficoms
mov
sub
dec
imul
xchg
mov
adc
out
ret
xor
xchg
ja
inc
mov
or
sub
pushf
xor
push
jns
or
sbb
cltd
cmp
jmp
popf
xchg
outsl
pop
imulb
jne
xor
mov
testb
repz
inc
mov
scas
push
int
mov
out
adc
push
ret
in
loop
fs
es
and
mov
xchg
mov
push
sahf
ss
rorl
cmpsl
xor
dec
push
cmpsl
pop
jmp
pushl
test
nop
sub
outsb
push
rcll
pop
pop
loopne
mov
and
imull
add
fs
inc
inc
enter
and
jge
int3
data16
loop
add
jae
mov
push
mov
sarb
in
lret
add
mov
test
xor
mov
dec
inc
syscall
add
xchg
xchg
push
xchg
sbb
pushf
int
ss
push
in
sahf
lock
es
mov
fwait
cmp
sbb
imul
dec
inc
jae
fistpll
fucomip
outsl
roll
fldt
aaa
nop
pop
xchg
subl
test
fucomi
mov
cld
loopne
std
mov
int
add
pop
jae
pop
fisubrs
shrl
aad
jge
les
mov
inc
push
aaa
jmp
push
add
repz
jnp
cwtl
push
add
dec
bound
pop
sbb
adc
stos
adc
dec
jb
lods
jns
ljmp
lds
ljmp
sbb
mov
inc
or
inc
rcrl
and
pop
cmpsb
lock
testb
fwait
test
xor
lcall
js
addr16
mov
mov
ret
insl
sub
ljmp
inc
sahf
mov
mov
imul
rolb
cld
cmp
stos
jecxz
jmp
jnp
push
sub
jae
sti
sub
lret
cs
and
pop
jne
add
hlt
xorl
fcomip
or
popf
mov
xchg
or
add
push
fdivrs
mov
pushf
in
aad
push
xor
dec
or
xor
outsl
aad
adc
stos
daa
jge
jmp
xchg
jmp
sbb
cwtl
adc
cmp
bound
repz
mov
push
xor
int3
dec
insb
out
dec
inc
pop
insl
flds
bound
cmp
aad
test
push
xchg
push
pop
xchg
pop
or
adcl
push
leave
pop
outsb
lods
shll
addr16
ljmp
inc
push
mov
cmp
aad
cwtl
in
cmpsb
push
xor
add
loope
into
iret
lods
out
inc
pop
aad
inc
daa
int
add
or
out
dec
shll
int
lret
ret
js
lea
in
popa
imulb
ret
fisttpll
in
and
in
mov
and
popa
jge
pop
cwtl
lock
stos
mov
cmp
push
das
push
dec
lods
push
popf
and
inc
xchg
test
sub
push
xchg
adcl
xchg
pop
cmp
mov
cwtl
lods
jbe
pop
test
divl
rorb
cs
mov
mov
repz
adc
in
dec
xor
dec
clc
add
xchg
ja
gs
scas
rorb
hlt
push
out
dec
ffree
push
push
jb
popa
mov
stos
push
dec
jae
adc
inc
or
jns
in
xchg
pop
add
mov
push
lahf
mov
cmpsb
test
mov
in
xchg
les
dec
ret
loopne
jb
or
aaa
or
xchg
xor
push
lock
out
jecxz
mov
rolb
test
jnp
arpl
ret
lcall
push
jb
pop
decb
negb
dec
adc
mov
mov
add
hlt
sub
jecxz
es
add
xchg
cmp
or
imulb
add
shlb
dec
rorl
inc
push
ffree
insl
dec
add
cmp
pop
scas
cwtl
fbstp
ret
in
call
cmp
mov
mov
movsl
push
and
mov
add
nop
aas
out
pushl
lods
push
stc
jp
jbe
lds
or
mov
imul
js
daa
insb
test
fimuls
sub
mov
ficoms
mov
jno
push
sbb
imul
adcl
push
call
cmpb
ds
mov
xchg
dec
jl
jns
lods
outsl
test
cs
mov
jbe
stos
add
mov
or
jae
jecxz
in
mov
or
inc
pusha
adc
adc
ja
jp
hlt
add
std
inc
fdiv
dec
jle
pop
lea
incb
sbb
or
xchg
imul
or
hlt
or
ds
popa
rcrl
push
lods
dec
dec
mov
divl
mov
aas
rcr
dec
xlat
in
jae
lea
fisttpll
push
push
scas
gs
mov
notl
jge
xor
out
movsl
xor
xchg
in
jae
lds
xchg
idivl
pop
xchg
ljmp
sbb
push
dec
out
jbe
pop
cltd
fbstp
xor
add
mov
push
out
adc
adc
inc
pop
icebp
jae
jae
scas
xor
popf
ds
in
xorb
pop
inc
fucomi
fwait
insb
dec
mov
mov
jecxz
test
in
cmp
fucomi
aas
mov
clc
lock
pop
jle
sbb
ljmp
out
cltd
aaa
ds
shll
add
push
inc
mov
dec
mov
push
mov
jns
xorb
movb
inc
pop
aaa
push
pop
mov
outsl
mov
pop
scas
in
lods
cmp
mov
xchg
or
mov
es
shrb
push
and
push
pop
pop
neg
outsl
pop
hlt
outsl
aas
popa
xchg
inc
inc
mov
insl
mov
nop
in
mov
shlb
sarb
or
icebp
loope
dec
sbb
mov
in
sub
pop
hlt
mov
lahf
int
jle
test
fstpt
out
jne
outsb
ret
mov
mov
lods
loope
addl
call
mov
pusha
js
push
mov
sbb
in
dec
push
dec
cs
dec
add
dec
mov
jecxz
out
cmp
push
xchg
mov
push
into
inc
lods
jno
push
dec
fwait
adc
push
nop
mov
mov
and
cmp
fwait
enter
inc
xchg
dec
popf
xchg
push
pop
shr
jbe
in
sar
jae
cltd
movsl
imul
cmpsl
and
imul
xor
out
nop
and
cmp
test
scas
dec
sbb
xor
or
sub
dec
push
hlt
les
aaa
adc
sub
fisttpll
ss
or
sahf
add
cld
fwait
or
jns
std
mov
vmwrite
loopne
sbb
popa
cmp
insb
data16
adc
rcr
movsl
movsl
xlat
inc
insb
add
cld
adc
cmp
aas
xor
push
inc
jbe
ja
je
lret
jge
scas
pop
imul
hlt
mov
sahf
and
bound
arpl
jge
pushf
dec
cmpsb
pop
lret
jnp
cmp
push
jmp
sub
int
ljmp
mov
mov
insb
push
xchg
lret
test
mov
xor
xorb
jmp
loopne
stos
cwtl
pop
adcl
lret
outsb
mov
cmp
mov
adc
sbb
push
or
lcall
and
dec
mov
push
jmp
into
js
pop
mov
jno
es
mov
cmp
int
push
stc
enter
pushf
into
adc
icebp
jb
push
pop
lds
sbb
insl
xchg
inc
xor
or
add
mov
jg
repnz
push
jl
push
lods
add
icebp
data16
ljmp
push
andb
aaa
iret
add
popa
push
cwtl
cmp
inc
fwait
orb
div
add
nop
aam
and
js
loopne
lret
mov
and
js
fsts
lret
negl
sub
and
push
sti
es
adc
inc
push
mov
inc
dec
xchg
mov
int
inc
imul
cli
fdivs
push
xchg
bound
or
push
inc
icebp
add
orl
jo
jae
xor
xchg
fldt
mov
push
jbe
insb
mov
jecxz
fcmovnb
incl
sub
fnstsw
or
jb
mov
mov
mov
test
addb
dec
lods
scas
std
movl
in
dec
pop
cmp
sbb
add
adc
pop
pop
push
cmp
add
fs
xchg
das
rolb
std
push
bnd
or
push
cmp
inc
fwait
cwtl
cmpsl
sub
loopne
push
dec
nop
add
outsl
imul
out
movsb
jl
inc
and
repnz
imul
mov
push
aam
popa
fistps
fcomip
shll
push
lcall
idivl
jb
repz
or
push
dec
cmp
loopne
sbb
mov
mov
push
add
xchg
sub
mov
or
and
inc
mov
and
stc
les
shrb
repz
and
push
mov
push
xchg
cltd
jo
fstpt
into
mov
or
lret
or
adc
add
cmp
stc
inc
imul
lock
subb
dec
and
pop
aam
fstpt
dec
incl
or
popa
pushf
xor
mov
sbb
or
ja
imul
into
data16
push
mov
pop
jmp
jae
xchg
mov
scas
xor
aas
xchg
pop
iret
xor
aam
sti
pusha
mov
or
push
pop
add
sub
or
jno
ficoms
xchg
int3
adc
wbinvd
sahf
test
dec
cli
popa
jbe
push
inc
sarb
mov
xor
fiadds
and
or
lret
mov
pop
mov
dec
movsl
test
int
or
lahf
ss
lods
adc
dec
pop
cltd
pusha
jge
inc
or
shll
xchg
imul
pop
push
or
push
repz
stos
pop
sbb
inc
fwait
push
lretw
ss
aad
mov
xor
push
ljmp
jge
push
insb
xchg
xor
lcall
js
xchg
inc
aaa
dec
insl
sbb
mov
xchg
addr16
jmp
jnp
adc
mov
sbb
pushf
and
movsb
cltd
push
inc
xchg
xchg
sub
gs
push
dec
outsl
cmp
mov
adc
repz
andb
fisttps
and
fisttps
mov
aas
add
mov
loop
jo
xlat
int3
pop
xor
into
sub
lret
xor
adc
xlat
adcl
cmpsl
outsl
jmp
xor
mov
ss
jmp
and
jmp
inc
push
push
xor
push
pop
pop
dec
out
mov
fnstsw
lock
inc
ret
xlat
outsl
add
inc
fcoml
mov
push
dec
je
rorl
xor
xchg
stos
std
ficomps
xchg
into
pop
cmc
dec
mov
push
sti
mov
std
ds
jmp
push
push
arpl
stos
inc
inc
jge
inc
setle
les
mov
mov
mov
mov
jbe
push
jg
mov
and
rolb
std
jo
js
test
js
xor
ds
adc
adc
inc
aas
out
xchg
inc
mov
add
out
sub
sub
js
jae
xlat
mov
lret
orl
lahf
mov
sbb
pop
push
jg
jnp
jb
not
aam
dec
pop
fisubrs
mov
mov
fs
inc
into
je
jb
or
jge
xlat
push
lret
pop
dec
add
aad
loopne
mov
xor
add
cmp
cli
cmp
xchg
mov
lods
lahf
xor
xchg
cmp
adc
mov
lcall
sub
pop
ss
pop
pushf
jge
sbb
adc
adc
ds
lret
shrb
pop
clc
ljmp
stc
cmp
inc
and
and
dec
cmpsb
cltd
mov
push
pop
fcmovne
push
and
inc
insb
cmp
sbb
dec
push
iret
add
mov
xchg
add
mov
jmp
jecxz
mov
or
mov
addr16
test
out
push
xor
bound
notl
and
cld
das
push
push
fwait
dec
je
mov
leave
ss
mov
pop
push
or
rcl
fidivs
sbb
pop
daa
inc
hlt
add
mul
aam
imul
cmpsl
decl
pop
inc
add
es
hlt
nop
xchg
xor
pushf
jo
mov
jnp
cmc
jnp
popf
push
jne
xlat
pop
add
add
inc
cmp
pushf
jnp
lods
jb
cwtl
mov
push
mov
jo
add
out
push
and
das
lods
ds
aad
sbb
or
xchg
mov
sbb
ja
mov
sbb
mov
add
add
sarb
pop
cmp
sbb
aam
icebp
mov
aam
push
and
jl
cmpsl
xchg
push
mov
pusha
xor
lahf
cltd
or
addl
lea
or
test
lret
and
cmp
jnp
filds
in
xchg
jg
inc
test
cltd
rcll
cltd
movsl
and
mov
jecxz
shlb
xor
pop
rclb
loop
xchg
mov
cli
cmpsl
ljmp
popa
movsb
popa
adcl
pushf
pop
xchg
popl
jl
lcall
aam
lcall
inc
jl
orb
out
aam
mov
outsl
nop
dec
mov
into
add
fldz
iret
sbb
and
in
push
mov
sarl
lods
lret
frstor
jns
and
ja
hlt
add
gs
sub
jno
cs
cld
push
jecxz
xchg
ljmp
push
pop
or
push
and
pop
or
jae
fwait
popf
mov
mov
fsubl
xchg
and
inc
mov
daa
cld
mov
cmp
fistl
pop
jg
loope
sbb
out
fwait
xchg
test
js
mov
sbb
jnp
pushf
mov
adc
mov
fcmovbe
push
gs
inc
pop
push
ret
xchg
sarl
jns
cli
sbb
movsl
out
lret
xchg
movlps
repz
mov
cli
daa
outsb
xor
adc
or
repnz
test
lret
mov
sub
daa
jno
xor
int
fcoml
mov
adc
adc
pop
lahf
daa
test
dec
test
adc
rcrb
pop
fdivrs
xchg
lret
loope
lret
mov
or
mov
sub
jmp
les
push
stos
add
cmc
mov
jae
mov
lock
stc
xorl
cwtl
inc
cli
fsubrl
mov
pop
adc
jge
adc
cmpsb
jb
jae
nop
mov
fwait
mov
fcomps
outsb
insl
pop
aam
cmp
dec
or
testb
jmp
aas
mov
mov
loop
outsl
push
xor
pop
fisttpl
gs
aad
pop
push
cmpsl
cwtl
jo
and
sbbb
mov
movsl
loopne
push
ljmp
mov
mov
std
mov
insl
popa
cmp
in
stos
add
adcb
loopne
sbb
and
aam
int
jmp
fsin
imul
jbe
test
cld
mov
movsb
repz
mov
mov
cli
pushf
xor
mov
je
inc
rorl
jae
jmp
iret
push
aaa
push
movsl
aam
movsb
pop
pushf
in
inc
stos
inc
ss
push
lds
gs
mov
xor
les
cmpsb
pop
pop
dec
jp
addl
lret
out
addb
rorb
sub
xchg
add
popf
andl
lods
push
sti
cmpsb
cmp
adc
push
rorb
mov
add
dec
dec
cmp
fbld
cltd
hlt
es
cltd
pusha
shll
sub
push
sub
int
iret
lock
das
loopne
scas
ret
xor
cli
pop
and
and
add
jge
bound
adc
push
push
pop
je
cmc
jge
int
inc
outsb
cld
xchg
sti
dec
aam
add
mov
push
int3
insb
loop
or
in
pop
mov
inc
inc
test
incl
cmp
cmpsb
mov
dec
les
cmp
sbb
xor
sub
sahf
xor
imul
dec
fistpl
sahf
lret
mov
fsubrl
stc
pop
pop
inc
jae
bound
pop
test
mov
fisubrl
pop
arpl
es
jecxz
ja
mov
sub
sbb
mov
ss
cmpsb
push
out
addl
sbb
cmpsb
cmp
adc
loop
lcall
inc
sbb
cmpsb
idivl
jae
sbbb
pushf
in
shlb
int
inc
push
push
lret
jmp
into
aas
xchg
inc
mov
cmpsl
mov
in
cmpsb
cmp
sbb
bound
std
loop
jecxz
leave
sub
leave
xchg
xchg
mov
mov
xor
or
sbb
scas
shlb
mov
dec
add
jno
pop
mov
bound
fimuls
mov
push
mov
push
jbe
call
push
out
int
call
mov
push
adc
mov
dec
jle
fwait
cld
in
inc
add
fildll
cs
and
mov
test
test
adc
ret
movsl
cmp
and
movsl
jae
mov
xor
out
xor
ja
daa
nop
cmp
out
mov
out
popa
push
xchg
jle
jp
push
out
cs
xchg
out
nop
mov
sti
das
push
dec
pop
outsl
nop
insl
push
imul
pop
add
lods
int
lret
and
inc
cwtl
das
mov
mov
mov
pop
push
jns
scas
imul
aad
xchg
xor
gs
or
pop
sub
pop
lret
fisubrs
jo
sub
adc
and
icebp
jecxz
sbb
mov
sub
cmc
out
jnp
ds
pop
pop
sbb
add
cmc
adc
mov
inc
or
lods
lods
push
add
imul
xor
sub
sahf
lahf
aam
push
lods
add
sub
scas
roll
add
adc
in
xor
cmp
fsub
jp
call
lds
push
aam
push
jl
dec
divb
push
jle
mov
dec
cs
cmc
cs
loope
jg
jg
mov
mov
fst
dec
mov
or
nop
mov
mov
cwtl
popf
inc
lret
rorb
lods
dec
data16
mov
out
ljmp
les
repz
sub
jl
push
imulb
xchg
lret
pop
or
jnp
jnp
mov
repnz
and
or
dec
lods
sbb
push
mov
aad
mov
repz
pop
pop
test
test
cmp
pop
leave
or
mov
rorl
sti
and
push
fwait
dec
sbb
nop
loop
scas
cmp
or
pop
adc
sbb
js
jnp
add
in
subb
xchg
inc
ret
mulb
xchg
pop
iret
jge
push
push
mov
inc
aas
sub
mov
idivb
iret
sub
push
dec
cmp
push
ljmp
jbe
jp
inc
fiaddl
daa
dec
xchg
jl
adc
push
lds
pop
shr
sbb
sahf
xor
cltd
mov
arpl
bound
ja
idiv
test
sbbl
pusha
lods
pop
and
push
sbb
adc
push
ljmp
add
push
push
xchg
fs
cmp
mov
mov
jnp
data16
or
inc
dec
mov
cmpsl
jge
cmpsb
mov
out
lods
cltd
xchg
xor
arpl
dec
mov
cld
mov
mov
xor
jle
daa
and
sub
lahf
lea
push
or
sbb
push
movsl
pusha
cmp
lds
test
xchg
inc
ljmp
dec
inc
mov
lods
xor
out
push
pop
ret
out
mov
test
es
aad
sub
into
fs
gs
mov
and
or
loope
push
push
int3
cmpsb
dec
sub
xor
fcompl
mov
fildll
mov
fdivrl
mov
mov
xor
ret
dec
and
push
cmpsb
pusha
test
dec
ficoms
xchg
jmp
pop
sub
cmp
sbb
adc
pop
std
fdivrp
out
das
sub
and
aas
lea
out
push
aas
leave
pop
jb
int3
test
arpl
iret
xchg
testl
test
mov
xchg
dec
fisttpl
insl
insl
and
pop
cmp
test
aad
roll
cmpsb
sbb
sbbb
xchg
jp
daa
push
test
push
cmp
jns
ss
inc
ret
xlat
push
aad
mov
push
dec
popa
lods
ljmp
xor
lret
cld
es
sbb
sub
pop
mov
sahf
cwtl
cmp
push
sub
mov
xor
clc
jge
cs
aas
int
ret
pop
sbb
sub
lds
pop
pop
ret
in
aaa
call
aaa
out
jg
fnstsw
inc
lcall
outsl
call
jb
sbb
dec
imul
jne
and
sahf
add
inc
pushf
sub
cmc
das
xor
pop
sub
mov
mov
jnp
push
subl
dec
dec
cmp
or
std
data16
mov
pushfw
fldenv
scas
add
arpl
addr16
jmp
addl
lret
lret
in
fcomi
mov
add
loopne
ds
imul
mov
push
aas
xchg
pop
add
push
mov
bound
xchg
mov
fwait
sbb
xchg
mov
push
sub
cmp
push
sti
sub
in
rcl
dec
inc
mov
xchg
push
mov
loope
repnz
cmpsb
in
repz
xchg
int3
out
aam
xor
or
lods
push
cld
mov
enter
or
mov
mov
inc
cmpsb
xchg
jmp
mov
sub
and
jmp
cmp
sub
mov
cmp
pop
and
and
jp
push
jg
fsts
scas
ljmp
or
mulb
rcl
inc
mov
xor
push
repnz
and
mov
mov
aad
dec
xchg
outsb
mov
or
pop
in
pop
mov
jo
sbb
daa
and
jo
in
ds
shr
adc
clc
out
iret
sbbl
cmp
int3
in
jle
xchg
add
fldcw
fsub
mov
add
jl
ret
mov
stos
pop
stos
add
sub
add
mov
inc
inc
pop
sahf
xchg
stc
pop
push
dec
orb
scas
jl
faddl
jmp
rcll
lods
jp
jmp
sub
fwait
adc
and
pop
mov
xor
lcall
loop
subl
addr16
mov
loopne
sbbl
outsb
arpl
sub
imul
jmp
repz
push
pop
movsb
shrb
push
js
sub
dec
xor
or
pop
rcrl
std
sub
icebp
jge
sub
inc
aam
adc
inc
xchg
fildl
repnz
xchg
xchg
call
mov
xlat
add
pop
sahf
call
leave
push
push
sbb
push
mov
repz
daa
jo
or
mov
sub
lahf
dec
fdivs
push
push
outsl
sbb
mov
push
push
mov
fistpll
dec
lea
mov
insl
mov
mov
or
sub
pushf
sbb
pusha
jmp
fwait
mov
xchg
or
aas
and
repz
adc
pop
cmp
fmuls
das
aam
sub
rcrl
hlt
clc
scas
pop
je
outsb
into
pop
push
mov
add
and
jo
popf
js
sbb
mov
cmpsb
xlat
adcl
cmp
sbb
xor
sub
mov
cmc
in
cmp
sbb
pop
repz
stos
or
jecxz
pop
loop
pop
shll
pop
cmp
gs
jbe
pop
scas
pop
mov
push
fisttpll
mov
ja
call
jbe
testb
jo
scas
cli
add
in
lods
pop
leave
shlb
fldt
sti
dec
lret
mov
out
mov
cmp
dec
adc
mov
mov
imul
es
int
mov
dec
mov
mov
cltd
sbb
mov
outsl
and
xorb
stos
lret
xchg
xchg
pusha
outsb
jbe
outsl
popa
not
jmp
sub
adc
add
insl
jg
xor
xchg
std
fwait
and
sub
in
mull
sbb
sub
scas
sbb
rcll
jge
cwtl
pop
mov
adc
push
jmp
subl
or
gs
inc
inc
add
call
mov
inc
pop
rclb
test
push
xchg
and
rclb
xchg
addr16
int
mov
sub
ret
cmpsb
iret
insl
out
adc
jmp
inc
mov
mov
fdivrs
and
imulb
je
ror
push
push
aas
and
dec
push
shl
leave
xchg
sti
jne
mov
loope
add
jmp
cli
sbb
mov
sbb
or
rorl
das
lods
daa
pop
in
fsubs
jl
pop
int3
pushf
daa
xchg
sub
adc
dec
jbe
mov
movsb
aaa
push
fwait
lahf
and
mov
jle
dec
jae
lahf
push
cmp
jbe
gs
pop
push
pop
fdiv
xchg
push
fs
mov
icebp
jnp
jns
stc
lods
or
push
fsubs
mov
mov
xchg
insl
loop
sub
test
xor
adc
pop
mov
pushf
mov
mov
push
push
stos
aam
test
aad
dec
dec
pop
xlat
pushf
cmpsl
sub
sahf
decl
sbb
mov
in
outsl
mov
xchg
jp
loope
mov
cs
dec
dec
ds
push
jns
rcrl
jbe
mov
cs
aad
push
loope
lds
ss
mov
stc
xchg
sbb
int
fstps
stos
jbe
sbb
fs
enter
pop
shll
jb
ljmp
test
aas
cltd
mov
jle
mov
inc
inc
mov
inc
sti
jae
cwtl
xor
fstpl
xor
mov
aad
notb
inc
insl
out
push
or
jmp
shl
pushl
popa
jge
js
int
test
mov
jle
pusha
jmp
jmp
add
jnp
imul
fsubrs
cmp
pop
adc
adc
pop
xchg
inc
sub
push
adc
xor
jmp
or
adc
loop
test
mov
roll
cmp
jp
sbb
cmc
xor
cltd
test
push
mov
hlt
sub
shr
movsb
cmpsl
aam
push
push
add
and
outsl
xor
int
and
hlt
xchg
xor
or
push
xchg
test
popa
in
adc
ja
inc
push
mov
sbb
sti
aas
aas
rcll
arpl
test
roll
mov
inc
ret
jg
jb
mov
or
or
sbb
and
push
subl
repz
jmp
insl
mov
leave
loop
ficomps
pop
les
stos
sub
push
aaa
ss
pop
adc
popa
and
pop
lea
out
repnz
sbb
or
fstpt
in
out
leave
icebp
negl
test
test
out
xor
repnz
sbb
dec
fucompp
cmp
jnp
ja
sub
decb
pop
lcall
cmc
sarl
push
int3
push
lods
dec
sub
je
inc
nop
enter
nop
push
push
inc
cmpsb
and
in
dec
fs
das
mov
sub
dec
lods
fwait
inc
add
mov
loope
or
addr16
dec
xor
sbb
inc
sarl
stc
rol
decl
sub
cmc
push
lret
jae
mov
mov
cmp
cwtl
cmp
pop
fsubrs
scas
stos
jmp
out
cmc
icebp
hlt
xor
mov
pusha
lret
lahf
mov
mov
lahf
pusha
je
test
mov
jns
push
test
cmc
lods
pop
arpl
push
add
popf
push
push
cmpsl
or
sti
mov
sbb
adc
sub
call
pop
xor
pushf
pop
fistl
mov
and
iret
cmpsl
ja
pop
push
mov
mov
in
addb
fmuls
mov
icebp
cmp
cld
mov
sbb
sbb
insb
jb
int3
xor
call
pop
int3
pushf
in
mov
jo
or
pop
xor
mov
inc
es
push
mov
inc
imul
clc
loop
or
insb
mov
jg
mov
inc
or
push
out
test
jno
ror
add
xchg
mov
popl
out
cmpsl
mov
lret
ret
xchg
jns
xorl
mov
adc
lret
cli
xchg
xchg
inc
arpl
dec
mov
mov
add
mov
rolb
or
cmc
xchg
push
mov
jae
xchg
mov
pusha
inc
sub
and
imul
jb
or
mov
cmp
fcomi
cmpsb
mov
push
test
popa
cmp
xor
shr
mov
mov
lcall
add
push
inc
das
imul
jns
cwtl
ljmp
mov
leave
pop
lods
ret
and
fwait
clc
or
mov
or
gs
dec
push
lret
loop
into
decl
jg
jecxz
pop
ret
test
jne
lcall
sbb
cwtl
inc
jns
sub
pop
aas
roll
call
or
cmc
push
outsb
sahf
push
mov
cmp
daa
adc
jo
imul
sbb
dec
loope
push
inc
test
in
add
push
pop
loope
xlat
jg
cmpl
mov
mov
sbb
jp
cmp
pop
adc
sbb
inc
jbe
or
int3
jne
pop
add
sbb
push
sbb
pop
cmp
xchg
pop
mov
adc
mov
jg
pavgw
ret
test
gs
out
filds
push
sbb
and
mov
push
into
mov
sbb
xor
push
xor
es
repz
jns
inc
or
cwtl
bound
mov
popf
int
or
and
aaa
mov
leave
mov
dec
out
cwtl
dec
es
pop
imul
sbb
sbb
fstps
push
cwtl
int3
inc
js
pop
jge
shrb
jnp
and
or
mov
addr16
pushf
jl
sub
pusha
jg
pop
mov
push
daa
pushf
xor
sub
pop
inc
adc
bound
das
jge
jno
fidivs
aam
mov
inc
push
sub
or
adc
sub
and
rcrb
pop
mov
xchg
adc
orl
dec
mov
and
pop
push
sbb
xchg
ljmp
sub
cltd
inc
mov
pop
sub
aad
mov
cmp
adc
fwait
dec
rcr
aam
cmp
out
push
or
test
out
mov
pop
adc
cmpsl
insl
xchg
mov
push
cmp
sbb
in
cmp
rclb
jg
and
int
mov
cmp
mov
test
adc
cmp
inc
aas
js
int3
add
sbb
add
and
pop
adc
jge
test
cmp
in
sbb
cmp
push
aad
loopne
jbe
shr
sarb
dec
lock
xorb
mov
movb
add
sub
pop
push
mov
sub
sti
push
mov
gs
cmpsb
aas
dec
sub
fwait
insb
fsubrs
inc
lods
inc
cwtl
mov
jnp
insb
cli
jno
rcrb
fbld
enter
insl
aad
pop
ja
aaa
cld
xor
dec
mov
xchg
lahf
mov
xor
jecxz
jg
shlb
inc
pop
sbb
data16
add
xor
jb
nop
insl
int3
lret
mov
icebp
aas
hlt
cmp
mov
loop
into
adc
and
in
sbb
nop
adc
cmp
mov
inc
sbb
test
adc
cmpsb
xchg
sbb
leave
sbb
es
lahf
stos
lret
mov
sbb
arpl
cmc
or
jno
mov
iret
jle
xchg
in
xor
cmp
inc
xor
and
or
push
dec
jecxz
popa
outsb
xchg
jmp
sub
out
mov
mov
sbb
jbe
test
std
inc
inc
push
xchg
inc
cmp
stos
fisubl
dec
adc
mov
add
sub
dec
jmp
adc
adc
out
adc
dec
cmp
sbb
ret
push
mov
sub
xor
popf
popa
fs
jg
in
fstpl
add
cli
or
sub
aam
or
xor
cwtl
jge
add
add
fcmove
aam
jae
lea
das
mov
pop
or
sbb
insb
push
les
add
pop
imul
mov
ficomps
stc
sub
dec
arpl
or
pop
mov
adc
loopne
fdivs
out
inc
add
pushf
sub
pop
sbb
lret
dec
adc
ljmp
sbb
imul
daa
mov
loope
aad
dec
push
or
test
imul
cld
leave
pushf
sub
or
adcl
in
xchg
jl
test
aam
mov
cld
cmovl
flds
in
xor
out
movsl
ja
push
pop
outsl
loopne
mov
call
inc
pop
js
mov
xlat
ss
pop
pop
fucomip
mov
inc
adc
mov
leave
jge
out
js
loop
pop
push
or
or
rorb
cmc
aas
mov
dec
std
add
loope
add
lcall
dec
ss
add
adc
add
into
jne
and
sarb
and
pop
push
repnz
call
nop
xchg
sarl
inc
lahf
das
sbb
dec
pop
stc
imul
cmp
lods
xchg
cwtl
lds
mov
nop
stos
insb
or
sub
scas
jnp
xchg
xor
push
repnz
add
je
cltd
sub
cmp
fidivl
adc
rcrl
aaa
pop
mov
or
inc
or
push
or
test
inc
jp
jge
xor
or
lods
jl
jns
outsl
fdivr
sub
push
mov
pop
in
adc
or
notb
mov
fiaddl
sbb
data16
cli
jge
add
mov
mov
mov
fldt
push
aam
scas
mov
push
mov
shll
add
lods
gs
aas
aad
fldenv
cmp
dec
xor
push
pop
outsl
out
shll
xor
shll
sub
sbb
mov
mov
lds
mov
ret
and
mov
je
aam
test
jne
stos
xchg
mov
pop
jae
pushf
push
stc
fs
xlat
or
adc
mov
scas
lahf
xchg
shr
fsubrs
popf
add
pop
sub
pop
arpl
lret
or
adc
rclb
mov
out
or
add
pop
add
push
dec
or
push
popf
arpl
push
setns
loope
cmp
rcr
pop
mov
mov
adc
pop
jecxz
cltd
lahf
fbld
aad
ljmp
push
loope
sbbb
shlb
mov
push
add
lret
icebp
addr16
test
xchg
inc
mov
or
bound
jb
dec
inc
cwtl
push
xchg
leave
les
lahf
pop
mov
lods
fcmovnu
hlt
xor
and
adcl
jb
icebp
cltd
enter
lods
test
iret
orl
add
xchg
dec
sub
in
jns
pop
or
aas
leave
xor
pusha
inc
jno
pusha
hlt
jl
inc
ja
cs
xchg
push
clc
or
mov
push
das
imul
mov
data16
aas
jg
or
lahf
mov
and
dec
aad
mov
jecxz
dec
enter
mov
cmpsl
fisubl
movsl
fcomps
jecxz
cmp
test
pop
iret
imul
xchg
clc
jnp,pt
fistps
ret
pusha
stos
test
fs
fmul
dec
mov
outsb
push
rcll
xchg
mov
mov
adc
push
mov
pop
ja
imul
out
lcall
mov
fimuls
movsl
into
das
push
inc
imul
dec
and
in
in
jmp
arpl
jg
xchg
push
ss
mov
ds
das
in
in
push
repz
mov
adc
ds
xor
inc
jl
arpl
outsb
imul
mov
dec
imul
out
movsb
mov
leave
dec
sbb
mov
jmp
not
ja
ret
mov
push
add
jo
push
sub
cs
pop
or
es
push
vpand
fisubl
out
sbb
jnp
pop
cmpsl
jne
cmp
cli
mov
xor
xchg
js
sbb
test
in
js
hlt
popf
push
add
pop
movsb
mov
outsl
dec
xchg
or
add
lcall
ret
or
lcall
mov
dec
ja
loop
ja
pop
dec
lret
imul
pop
pop
loop
xor
push
mov
mov
xchg
mov
aad
dec
incb
lret
inc
fstpl
or
sti
mov
scas
jp
mov
xor
leave
nop
push
dec
iret
js
cmp
adc
jns
and
or
push
push
push
mov
sub
or
sub
idivb
jns
push
mov
scas
shll
mov
push
out
mov
sub
adc
and
dec
into
int3
pop
rorb
push
call
out
add
loopne
jno
popa
icebp
sarl
add
mov
mov
addr16
sarl
cld
shll
frstor
push
sub
pop
inc
mov
jecxz
fcomps
xchg
inc
push
mov
movsl
mov
mov
mov
nop
jp
cltd
xor
in
sahf
aaa
adc
push
jae
loop
cli
aad
inc
aad
mov
stos
shr
imul
into
xor
add
pusha
xor
and
sbb
lds
ljmp
aad
xlat
xchg
mov
adc
or
or
xchg
movsb
inc
faddl
data16
pop
cli
jmp
push
jnp
push
sbb
dec
sbb
push
xor
sbb
sub
sar
pop
ss
dec
xlat
sbb
add
ljmp
cwtl
addr16
pop
and
mov
insb
test
rcll
jo
in
mov
adc
sub
andl
rcr
sbb
lods
stos
adc
sbb
cmp
call
cmpsl
or
push
push
and
scas
adc
loopne,pt
cmpsl
pop
jp
lahf
pop
xor
in
fucomp
sbb
sub
dec
push
or
aad
mov
cltd
dec
aam
aaa
fldl
cmpsl
loope
adcl
xchg
pop
lcall
rcll
cmp
xor
ss
stos
adc
cmp
data16
sbb
test
insb
adc
adc
fiadds
mov
std
into
out
adc
shr
int
mov
daa
cmpsl
push
jmp
idivl
cmp
mov
lea
sti
ret
and
lods
jge
insl
push
std
pop
mov
stos
lods
mov
cltd
push
fdivs
gs
imul
pushf
xor
adc
ret
mov
add
fwait
add
mov
pop
mov
fs
xor
xor
shl
mov
or
mov
imul
mov
imulb
adc
int
cmp
iret
dec
jle
add
fsubrl
fs
clc
lods
push
mov
sub
xchg
test
sbb
fisttps
xor
jmp
sbb
int
adc
jne
push
mov
cwtl
cmpsl
cltd
cmp
icebp
push
xlat
popa
stos
rcrb
adc
cmp
mov
pop
mov
frstor
mov
mov
stos
adc
xor
lahf
fistl
andl
pop
mov
mov
xor
stc
rorl
and
sub
jg
addr16
mov
test
mov
sbb
sub
mov
xchg
outsb
es
cs
movsb
pop
xchg
rolb
xchg
in
mov
or
sub
clc
pop
lret
mov
mov
xlat
outsb
enter
cli
lea
lods
add
lods
cmp
test
enter
fwait
mov
jl
inc
in
mov
arpl
loope
sub
push
mov
repnz
movsb
fwait
sub
mov
add
jbe
push
jo
lret
pop
push
jg
mov
lahf
out
push
push
and
push
jno
or
jge
or
int
fisubs
fdiv
dec
jo
sub
out
fisttps
insb
jmp
adc
out
xor
jge
pusha
sbb
ficompl
js
mov
sti
sub
or
sub
sub
cld
pop
sbb
inc
cmp
pop
cmp
aaa
in
pop
lahf
pop
xchg
sub
sub
test
test
into
vpcmpgtb
test
cltd
jmp
in
mov
pop
xchg
or
or
pop
jmp
sub
mov
mov
fisubl
adc
push
pop
inc
add
fstp
and
movsb
jne
outsl
mov
xchg
cltd
xor
mov
pop
mov
mov
fnstcw
insb
ds
push
scas
sbb
mov
sbb
inc
cmp
in
jno
push
sub
jp
inc
lea
imul
push
jno
aad
pop
cmpsl
sub
add
test
mov
in
fdivrl
mov
adc
adc
lds
and
xchg
adc
jbe
shll
jp
in
push
test
flds
imull
lret
add
or
cwtl
lods
test
aaa
adc
jne
fisttpl
rorb
notl
and
shlb
cwtl
adc
push
imul
jge
sbb
daa
out
dec
addr16
or
fs
and
imul
js
push
inc
pop
mov
and
sub
repnz
lock
fs
lods
int
shll
lods
mov
push
mov
sbb
testl
sub
pop
mov
or
mov
pop
in
mov
mov
ret
or
inc
dec
cmp
mov
cmp
mov
data16
jmp
adc
addr16
nop
dec
jb,pt
sahf
gs
pop
or
aas
inc
mov
inc
pop
es
test
movsb
pop
cltd
inc
add
and
and
cmp
push
loopne
test
push
sbb
andl
mov
cli
add
xor
sub
lods
sbb
ret
xlat
jmp
leave
pop
icebp
out
mov
and
pop
xchg
push
outsl
or
sub
lret
aam
out
cmp
xchg
jg
jnp
mov
push
cmpsl
movsl
push
push
pop
cmp
lret
adc
sub
push
stos
jo
scas
pop
je
xchg
mov
jle
icebp
loopne
pop
cmc
add
mov
loop
mov
cmpsb
insb
xorb
xchg
dec
shlb
ja
scas
xorb
cli
and
orl
or
mov
in
mov
repnz
xchg
clc
cmpsl
mov
sbb
adc
scas
leave
inc
mov
xchg
dec
sub
mov
clc
jbe
cmpsb
push
test
test
adc
xchg
xchg
adc
pop
clc
sub
test
sti
mov
jns
je
data16
pusha
cmpb
and
or
push
and
lock
mov
add
xor
js
lds
push
cmp
mov
push
pop
or
xchg
and
lods
jbe
fistps
jl
stos
hlt
test
xchg
sub
js
dec
aaa
adc
es
xchg
xor
mov
xor
inc
lods
das
sub
out
sub
dec
pop
aas
mov
xchg
cmc
jno
and
out
or
jle
popa
test
outsb
jecxz
inc
mov
or
decl
or
dec
and
movsb
cmp
push
cltd
hlt
xchg
and
adc
and
lahf
fucomi
mov
dec
sub
sbb
insb
inc
mov
jne
iret
sbb
mov
or
xchg
mov
mov
loopne
movsl
movsb
cmp
mov
mov
sbb
lahf
mov
and
daa
and
lret
pop
adc
sti
test
adc
popa
lods
xorb
out
jo
lea
loop
mov
je
xor
jle
test
adc
or
mov
adc
fcmovu
mov
lcall
add
sub
mov
mov
push
pop
je
bound
mov
repz
roll
xchg
or
xchg
mov
cld
stos
cs
pusha
stos
shl
andl
pop
mov
pop
add
mov
je
aaa
dec
stos
pop
test
popf
fdivp
add
push
push
xchg
push
loop
pop
mov
mov
je
pop
lret
movsb
jl
mov
es
stos
add
fisttpll
pop
sbb
leave
bound
mov
in
lods
mov
cmpsl
insl
or
or
push
loopne
xchg
inc
inc
add
or
ljmp
ret
out
push
pop
out
mov
mov
call
aaa
bound
jg
popf
mov
push
out
xorl
dec
push
xorl
inc
add
aad
aaa
out
xchg
sbb
call
aam
loopne
push
push
mov
inc
push
mov
sahf
loopne
mov
popf
pmaxub
test
xlat
lret
pop
mov
inc
leave
fiadds
add
dec
push
and
xor
jmp
sub
div
cmpsl
mov
nop
imul
mov
cmpsb
idivb
cmc
lahf
ja
mov
ja
test
sti
ror
dec
aad
outsl
popl
out
sbb
xlat
add
into
pop
mov
mov
arpl
jne
adc
decl
shl
and
fcoms
and
popf
ret
mov
daa
ja
fs
es
mov
dec
andl
fstl
orl
pusha
stos
mov
sbb
or
in
xchg
daa
jb
aad
push
clc
and
xor
push
popf
push
add
inc
add
inc
dec
pop
outsb
mov
pop
pop
jbe
push
pop
subl
sbb
in
xchg
nop
pop
sahf
dec
and
inc
pop
adc
jp
test
jmp
dec
subl
or
ret
and
js
clc
add
out
popf
mov
dec
mov
push
xchg
and
mov
ret
dec
mov
push
push
mov
in
mov
cltd
bound
jp
sarl
dec
fsubrl
mov
stc
and
gs
test
add
inc
ja
ffree
jl
icebp
stos
iret
es
test
aam
jl
fadds
fwait
mov
aam
cmpsb
xor
fwait
xchg
inc
scas
inc
fisubrs
push
inc
shl
shll
movsb
imul
dec
xlat
dec
mov
out
jmp
fldt
movsb
out
stos
sub
aam
mov
leave
leave
lahf
mov
mov
jns
cli
clc
or
nop
and
jae
sarb
jnp
dec
gs
sub
lods
faddl
xchg
jne
and
lods
sbbl
pusha
xchg
cmp
mul
std
pusha
in
into
cltd
mov
jb
imul
cmpsl
or
mov
pusha
mov
out
cmp
sbb
mull
cmpsb
stos
push
pop
loope
mov
in
shlb
into
rorl
scas
cli
mov
mov
xchg
fbld
mov
test
xchg
cmc
imul
mov
call
lret
cmp
jecxz
sub
out
mov
or
xorl
push
cmp
mov
jae
insb
rcll
xorl
jno
cltd
jb
push
adc
push
stos
stos
xchg
cmp
sti
fmul
dec
xor
mov
inc
inc
add
xlat
js
push
stos
out
sti
fnsave
or
les
ljmp
mov
out
xchg
iret
jnp
mov
add
pop
test
add
sub
xlat
mov
mov
add
outsl
and
lods
dec
cmp
xor
sahf
push
aam
das
leave
popa
rclb
push
jae
pushf
or
sub
xor
mov
mov
pop
adc
and
fldl
mov
add
jae
mov
hlt
lcall
and
sbb
jno
adcl
push
cmp
lcall
xor
sub
cmp
fidivrs
clc
cmp
out
cmp
sbb
sub
mov
mov
and
mov
fisubrs
filds
addr16
adc
sub
insb
dec
lret
jno
push
test
jg
divl
jb
sub
cmovg
mov
mov
in
cmc
mov
sti
push
mov
xor
adc
cmp
sbb
jp
fwait
lret
add
jl
lods
repz
mov
cmp
and
faddl
pop
scas
mov
in
lods
call
jge
push
xor
xchg
dec
mov
sub
imul
xchg
mov
jp
xchg
leave
mov
arpl
clc
out
and
addr16
addr16
repnz
cmpsb
sbb
xchg
or
mov
stos
fst
xchg
jmp
jmp
ja
and
jnp
cmc
jecxz
jp
inc
je
inc
out
scas
dec
jg
sti
int3
jmp
aam
xchg
adc
icebp
into
repnz
imul
je
ja
mov
ret
mov
test
xlat
scas
cltd
ljmp
cmpsb
mov
scas
enter
orl
dec
push
push
cmpsl
or
sbb
ret
or
bound
lcall
stos
cmp
push
ret
xchg
jl
xor
enter
stos
dec
loope
repz
cmp
int3
iret
and
ret
inc
jmp
popf
push
pop
lea
clc
daa
int3
cmp
loop
adc
xchg
mov
jmp
add
jmp
mulb
cmp
add
inc
inc
inc
xchg
je
mov
mov
xchg
jle
mov
and
jns
push
sbb
shr
jle
nop
imul
mov
and
stos
in
inc
push
shll
icebp
rorl
cli
iret
pop
les
pop
inc
cmp
mov
sbb
xchg
je
test
lret
xor
sbb
jne
mov
push
in
push
xchg
mov
mov
push
push
movsb
dec
or
fisubl
cmc
adc
xor
mov
pop
sub
mov
es
cltd
jne
inc
lods
jne
xor
sbb
decl
rcr
rorl
arpl
jmp
bound
outsb
cmp
push
mov
mov
js
and
mov
mov
out
pop
cltd
jmp
ds
sub
mov
cmp
lahf
sbb
mov
ds
mov
aaa
adc
int
shlb
pop
sahf
std
pop
cmp
mov
ds
mov
add
dec
repz
imulb
cmp
aas
int3
cwtl
xor
or
xchg
xchg
and
sarl
cmp
or
imul
fildll
rcl
pop
adc
inc
cltd
xchg
pcmpeqw
xor
arpl
pushf
sub
clc
inc
arpl
xchg
enter
push
aam
rol
lret
aam
ret
mov
inc
xchg
shl
push
add
pop
push
adc
adc
and
or
sub
lret
jmp
push
jge
xor
push
mov
push
decl
xchg
inc
xchg
inc
lahf
push
xchg
les
ja
xor
dec
ficomps
enter
popf
pop
xchg
cld
add
xor
pop
inc
adc
push
mov
sbb
dec
enter
std
les
or
ret
mov
shrl
js
sub
js
adc
mov
mov
clc
into
dec
sahf
int
add
lds
adc
xchg
cltd
lea
mov
cltd
mov
pop
inc
adc
sub
jne
js
in
rcl
xchg
insl
xchg
imul
sub
icebp
clc
add
hlt
fisttps
dec
cld
add
lcall
push
fdivrl
xchg
jg
cmp
dec
pop
sbb
scas
daa
jle
test
scas
mov
aas
push
dec
gs
mov
xchg
es
mov
sub
dec
sub
test
jle
jl
movsb
or
mov
dec
popa
rolb
jecxz
xlat
stos
fidivrs
lods
push
mov
push
rol
jmp
ret
mov
xchg
mov
jmp
repnz
in
push
mov
push
push
mov
aas
lea
test
arpl
iret
lcall
mov
scas
test
out
mov
outsl
imul
xchg
movsl
into
mov
pop
imul
mov
lock
mov
mov
imull
int
mov
jmp
dec
and
nop
mov
test
iret
cmp
push
jne
pop
adc
ret
fadd
mov
inc
mov
into
jo
ret
mov
or
aad
insb
scas
es
cmp
cmp
stc
xchg
cli
mov
stc
outsl
xchg
shlb
cwtl
add
mov
leave
loop
int
sbb
je
xchg
adc
xor
adc
pop
sub
in
gs
push
pusha
jle
out
jbe
pop
popf
pop
dec
sbbb
mov
cmpsl
testb
test
test
fcmove
sub
mov
jno
mov
jl
int3
sub
inc
aaa
inc
cld
inc
inc
sti
jnp
loop
ret
mov
shll
push
lock
xchg
sbb
inc
adc
jo
js
aas
mov
mov
sbb
jo
js
mov
mov
ds
and
xlat
stos
divl
mov
fwait
clc
lock
rcrb
and
fiaddl
sbb
hlt
test
fistl
pop
or
lods
and
mov
lock
pop
and
js
fldcw
xchg
aad
fmull
and
and
inc
inc
test
pusha
dec
mov
adc
xchg
std
test
jg
lock
push
xlat
movsb
loop
popf
xchg
lock
jle
aad
stc
scas
jnp
sub
sbb
fmull
xor
cwtl
stc
xorb
push
imul
ja
in
cltd
sub
jg
std
sub
add
scas
push
pop
into
mov
mov
clc
gs
mov
outsb
aas
idiv
cmpsl
cmp
iret
rolb
inc
sbbb
fs
inc
xor
fldenv
sbb
jp
sahf
pop
sub
pop
cmp
stos
xlat
stos
insb
xorb
ret
adc
jns
es
sub
in
xchg
aam
xchg
jl
pop
es
mov
sub
xor
mov
xchg
mov
pushf
add
sbb
shrb
loop
aad
out
call
add
pop
ret
pusha
ret
and
or
adc
mov
adc
or
dec
mov
push
pusha
or
cmp
or
lea
cmpsb
add
pop
pop
pop
jae
orl
rolb
stos
jns
cs
out
mov
loope
xor
inc
test
sbbb
enter
mov
lret
inc
and
dec
int
lret
jl
or
pop
ficomps
xor
jb
push
push
out
and
push
pusha
push
and
mov
mov
mov
or
push
adc
pushf
xor
push
jg
clc
inc
lret
sbb
sbb
pop
lcall
inc
mov
cmpxchg
sub
cmp
movsb
ljmp
push
pop
xlat
sbb
pop
gs
pop
xlat
aas
daa
pop
adc
popf
mov
cli
add
sbb
mov
pop
rcrb
cmp
jg
call
add
cmp
out
jae
xchg
hlt
add
push
add
or
jnp
inc
jbe
cmp
sar
iret
or
insb
jo
sbb
push
push
add
sub
pop
xor
scas
mov
mov
sbb
inc
gs
push
test
fsubrp
aas
jnp
repnz
cmp
out
cmpl
sbb
movsb
ja
push
add
mov
aas
outsb
out
push
sub
xchg
addr16
adc
outsb
inc
mov
mov
sbb
lods
pop
mov
sbb
in
mov
test
orb
push
enter
dec
gs
inc
xchg
push
dec
xchg
push
adc
jg
inc
dec
jno
pop
inc
fiaddl
pop
jne
mov
faddl
dec
pop
and
push
int
mov
mov
inc
popa
cld
cmc
pushf
jb
cmp
mov
movsb
jns
dec
sub
outsb
cli
mov
int3
sar
mov
mov
cmp
mov
adc
mov
test
push
pop
or
sub
xchg
or
jg
ljmp
push
add
lahf
loop
adc
mov
xchg
pop
stc
fldenv
je
loop
push
adc
or
pop
jno
jb
sub
inc
xor
add
pop
ljmp
mov
ss
sub
sub
outsb
or
idivl
repnz
gs
lahf
mov
fistps
fdivrs
jle
cmpsb
or
adc
cmp
dec
mov
leave
mov
sub
repz
pushf
ljmp
push
int
cmc
gs
cli
cmp
sbb
imul
fisubs
add
sub
xchg
mov
fcomi
test
enter
aaa
stos
or
syscall
push
int3
push
inc
filds
mov
xor
inc
lcall
hlt
bound
jecxz
int
mov
cmp
outsl
out
or
xchg
mov
loope
fstpt
xor
imul
inc
push
dec
and
mov
push
pop
arpl
loop
sbb
int
aaa
loopne
ret
dec
imul
jmp
xchg
lret
sbb
dec
cmp
sbb
lods
int
sbb
cmp
cli
ret
adcl
or
sbb
xchg
cmc
aad
in
push
in
and
adc
xchg
daa
dec
iret
and
scas
inc
cmp
xchg
mov
xor
repz
pop
data16
das
adc
mov
mov
gs
add
sbb
bound
push
sahf
jg
adc
test
loopne
test
inc
mov
repz
stos
cli
mov
add
clc
mov
insl
out
sahf
out
push
cmp
adc
xchg
dec
fs
and
jbe
bound
fiadds
loop
std
dec
push
push
pusha
repnz
je
hlt
or
mov
mov
push
imul
dec
mov
dec
jne
push
adc
aas
mov
insl
inc
cwtl
mov
out
add
or
mov
lahf
les
int3
adc
xchg
in
cmp
pushf
mov
std
jl
lds
cmpsb
dec
xorl
xchg
or
add
mov
sub
xor
aaa
mov
jl
adc
lock
imul
mov
dec
cld
sahf
adc
cs
inc
adc
aaa
mov
aad
xchg
jecxz
dec
cmp
lcall
xchg
imul
push
pop
insb
js
pop
inc
das
adc
int3
clc
sub
das
and
jo
mov
shrl
pop
out
pushf
sub
outsl
push
inc
push
cmpsb
mov
mov
cmpsb
cmp
adc
cwtl
in
in
add
das
lret
das
dec
pop
std
sbb
xchg
pop
test
int3
sbb
xchg
mov
add
pop
aas
mov
outsl
jnp
dec
loopne
lods
in
pop
ja
or
xchg
xchg
jecxz
jns
jmp
pop
clc
std
mov
sti
subb
pop
popa
mov
mov
mov
insl
xor
jmp
test
es
pop
jno
mov
adc
sub
cmc
out
out
rorb
ss
sti
jnp
cli
lods
aad
jbe
sbb
push
jnp
jmp
divl
push
popa
mov
out
and
pop
xchg
and
jle,pn
and
and
push
add
jecxz
in
mov
push
inc
test
sub
movsb
lock
icebp
sbb
mov
je
ss
in
stos
jae
pop
inc
fmulp
mov
jl
loop
push
pushf
das
stos
out
and
adc
pushf
insl
popa
test
cmp
leave
push
cmp
test
xchg
xchg
or
sub
nopl
xor
mov
test
insb
inc
hlt
imul
in
jp
dec
fwait
adc
cmp
cwtl
outsb
mov
pushf
sub
pop
sub
inc
sub
das
mov
xor
in
mov
out
roll
outsl
jp
mov
enter
dec
sar
cmp
pop
scas
inc
pop
sub
ljmp
std
std
jmp
call
pop
cmp
ss
in
or
jnp
frstor
clc
testl
roll
cmp
fsubrs
xchg
int3
shll
sti
cmp
nop
ja
in
inc
cmp
push
adc
outsb
adc
fistpll
cmp
test
cmpsb
test
sub
jl
out
mov
cmp
add
push
fistpll
es
loopne
fwait
ja
jmp
push
js
jl
sahf
nop
repz
mov
call
xor
loop
add
cmpsb
repnz
ds
into
das
call
pop
leave
stos
fstl
xchg
xor
mov
shlb
fdivrl
mov
jecxz
push
leave
flds
xchg
fbld
cmp
mov
mov
stos
imul
mov
das
sbb
jle
pop
fcoml
cmp
push
cwtl
adc
pop
dec
ret
cs
scas
mov
ret
xchg
loopne
cmp
leave
mov
mov
sbb
std
sahf
xchg
cmc
adc
andl
pop
add
xchg
xchg
adc
add
mov
cmp
xor
popf
mov
inc
push
cmpsl
jl
je
stc
jne
mov
push
cmp
outsb
cmp
inc
lcall
rcrb
cmp
or
mov
daa
in
shrl
or
out
sub
add
push
xchg
out
mov
adc
sub
pushf
aad
fs
and
mov
and
push
push
repz
hlt
mov
lret
xor
fisttpl
movsb
pop
aad
cmpsl
rcl
add
int
xor
mov
push
xor
xlat
cmp
popf
fildll
arpl
jo
fsts
cmp
jb
adc
daa
push
scas
rcll
push
cld
out
out
jp,pt
cltd
pop
or
sbb
sarl
dec
mov
fxch
test
sbb
or
insb
aad
mov
sahf
push
add
mov
subl
mov
mov
xchg
dec
xlat
data16
scas
call
iret
mov
push
repnz
loop
cmc
aas
lods
cld
and
push
or
or
test
jge
in
in
sbb
lock
leave
mov
into
jno
sub
loop
xor
sub
dec
mov
out
and
jo
xor
movsb
xchg
cltd
mov
bound
sub
or
xchg
loop
mov
mov
cltd
inc
mov
ljmp
cmp
in
push
push
scas
mov
out
push
int
mov
sbb
push
push
sbb
mov
mulb
out
das
daa
jae
lcall
mov
cmp
add
mov
inc
jne
fbld
sbb
sub
jno
push
test
test
pop
xor
pop
notl
pop
lcall
jae
mov
outsb
pop
mov
mov
cmp
pop
lock
repz
xchg
repnz
push
mov
data16
fisttpl
jecxz
ds
loop
cmp
adc
in
push
and
sbb
push
mov
or
dec
mov
loopne
out
ljmp
out
inc
jnp
jo
stc
jnp
into
dec
jns
test
sub
xor
push
lods
pop
dec
in
mov
out
mov
std
ja
dec
cld
aad
aad
movsb
loope
mov
rol
sbb
pop
add
or
insb
mov
inc
push
jle
int
dec
aaa
push
mov
dec
xchg
test
inc
jecxz
sbb
jns
bts
sub
push
push
sbb
imulb
fisttpl
cmp
adc
sub
mov
xor
fldenv
xor
sbb
ret
pop
fldenv
jb
and
pop
cmpsb
dec
adc
mov
lea
stos
inc
push
sarb
cmp
and
sub
add
cwtl
inc
pop
pusha
out
dec
xchg
and
addr16
shll
xchg
mov
shrb
pop
pop
adc
fsubs
push
xchg
mov
rclb
inc
jbe
aam
and
sbb
pop
inc
dec
addr16
xor
data16
inc
rclb
movsl
mov
lods
cmpsl
mov
mov
or
mov
sahf
scas
mov
lea
ret
pop
adc
ds
mov
push
adc
into
xor
xchg
cmp
adc
in
cltd
shr
inc
cmp
mov
loope
enter
ja
push
push
xlat
int3
aaa
xchg
adc
test
fnsave
jp
aaa
xor
leave
push
aam
ss
push
in
and
push
mov
mov
mov
aad
xchg
dec
cmp
ljmp
pop
sbb
pop
add
sub
rolb
stos
jb
add
scas
fnstcw
das
repnz
ljmp
leave
xor
mov
inc
and
xor
fwait
gs
ret
pop
xchg
mov
xor
mov
add
pop
xor
xchg
add
jo
mov
popf
scas
iret
sub
inc
sbb
cltd
aaa
sbb
nop
jbe
sbb
or
mov
push
test
cmp
popa
or
addl
cmp
jns
cs
fnstcw
push
enter
sbb
sub
sbb
cmp
or
mov
repnz
int3
mov
pop
rclb
scas
sub
movsl
adc
sbb
pusha
lea
jmp
dec
mov
inc
ds
or
jne
dec
andb
jmp
or
lret
xrstors
xchg
cltd
fcompl
jp
cmp
inc
adc
sbb
insb
fistpl
lea
aam
xor
sti
mov
pop
sub
push
sub
mov
insb
mov
fxch
lret
das
outsl
mov
sbbb
iret
cmp
pop
imul
jg
mov
and
mov
jbe
add
xchg
add
mov
xchg
outsl
lahf
sbb
cli
test
jmp
cmp
jp
out
adc
push
shrl
rclb
sbb
mov
inc
lods
cmp
xchg
imul
in
in
pop
and
jl
dec
xor
subb
sti
mov
jp
mov
stos
arpl
shlb
xor
xchg
lret
inc
cmp
sub
outsb
popf
xchg
test
cmp
loopne
cltd
pop
add
enter
sub
or
lret
mov
xchg
mov
jg
in
insb
add
mov
inc
push
pop
mov
mov
push
cmc
lcall
loopne
inc
dec
push
enter
lret
repz
cs
xor
xor
xchg
movb
cltd
sub
lret
mov
mov
pop
and
mov
add
pop
test
xlat
ja
ret
cmc
adc
cmpsb
jne
pop
xor
xor
fadd
sbb
ja
aas
cmpb
pusha
stos
xchg
aaa
sete
sbb
adc
sub
fcoms
cmpsl
jg
push
adc
add
es
xchg
lods
fstpl
jmp
inc
xchg
dec
pop
pop
iret
mov
in
stc
repnz
int
ss
pop
mov
xlat
push
stos
mov
mov
mov
xchg
int3
divl
lods
fisubrs
lock
test
jmp
xchg
sbb
pop
inc
push
push
push
jmp
cmp
cmp
jge
add
push
cmp
mov
push
mov
mov
scas
mov
scas
sbb
and
inc
faddl
js
or
sub
jbe
cmp
sbb
adc
jecxz
pop
sbbl
fidivrl
cltd
xchg
jb
push
add
adc
lea
cmp
out
cmpsb
lods
lea
jl
cmp
icebp
fcoms
cs
adc
test
fdivrl
xchg
jl
cs
mov
cld
in
lret
jmp
inc
gs
ja
insb
jle
std
jnp
push
push
xor
mov
movsb
rorl
scas
insb
iret
lret
imul
stos
shll
dec
imul
pop
jge
in
ffree
lahf
jnp
testb
or
push
nop
sbb
mov
sbb
stc
ja
inc
mov
xchg
out
movsb
jmp
mov
or
inc
and
inc
sbb
scas
dec
dec
cld
xor
fdivr
aas
and
inc
ret
sahf
iret
imul
push
test
icebp
mul
out
fistpl
cli
cmp
mov
sbb
inc
arpl
ret
addl
jl
ljmp
jg
movsb
jne
sbb
pop
fidivrs
das
sub
push
jl
xor
mov
mov
sub
ret
fnstcw
fisubrs
mov
inc
add
jle
xchg
sbb
adc
dec
jno
pushf
loopne
test
or
mov
adc
mov
cmp
cwtl
cmp
or
dec
test
cmpsb
lcall
or
mov
mov
add
mov
out
jmp
rorb
loopne
outsb
pop
push
mov
sti
addr16
xor
outsl
loopne
cmp
lock
popa
add
loopne
mov
dec
je
cmpsb
jne
movsb
pop
jmp
add
les
fidivrl
sbb
jle
sub
xchg
mov
sub
xchg
bound
divb
mov
clc
mov
fwait
sub
adcb
data16
lods
mov
jne
push
adc
imul
pop
sub
add
idivl
mov
cltd
mov
out
push
dec
in
lds
add
push
in
aas
decl
add
insl
js
inc
push
in
imul
xchg
leave
dec
mov
sub
sub
dec
cli
popf
ret
mov
sbb
sahf
int
inc
cltd
scas
jno
es
jecxz
fadds
clc
mov
ds
lcall
xor
mov
jne
pop
sub
and
dec
adc
stos
pop
mull
addb
xor
cmp
inc
adc
sti
inc
cmp
mov
add
aad
pop
lret
mov
pop
out
loope
arpl
mov
insb
dec
iret
dec
pop
inc
fwait
mov
movsb
push
push
std
test
mov
rorb
or
push
jbe
pop
sbb
cmp
mov
xchg
mov
out
and
stos
xor
cmpsl
pop
push
pop
mov
mov
lea
xchg
dec
scas
fdiv
xchg
mov
cmpsl
dec
push
cmpsl
aaa
lea
nop
outsl
jge
outsb
aad
adc
lods
sbb
arpl
sbb
out
test
aas
cmpsb
xchg
ljmp
add
popa
push
jmp
in
pop
xchg
mov
mov
mov
dec
push
sti
and
jae
mov
pop
mov
rcrb
sbb
mov
leave
xchg
dec
movsl
jns
sub
pop
fwait
add
mov
repz
jl
pmulhuw
mov
fdivl
jnp
std
cld
push
cmpsl
pop
push
cmpsb
sti
insb
push
mov
inc
pop
in
inc
mov
popf
pushf
jno
bound
stos
jns
shll
loop
je
xor
inc
sub
inc
pop
jl
pop
ja
push
jle
jp
dec
out
mov
scas
popl
test
jecxz
int3
sub
stos
lods
push
int3
sub
mov
jns
and
aaa
xchg
dec
sub
jecxz
push
xchg
dec
loop
clc
push
shll
or
in
loopne
fistl
ljmp
adc
adcl
mov
scas
jg
lcall
std
adc
dec
mov
pop
and
mov
fimull
and
movsl
and
das
into
pop
adc
mov
and
xor
cmpsl
popf
jg
push
pusha
push
mov
mov
pop
cmp
jle
shrl
mov
loopne
gs
xchg
std
jge
push
pusha
sub
rcrb
dec
and
mov
inc
xor
jl
movsl
sbb
or
iret
sub
cmpsl
mov
inc
jmp
xchg
fbld
inc
push
add
and
clc
outsl
out
je
add
lds
push
add
ds
sub
in
xor
cltd
xor
stc
sbb
fcomps
mov
mov
mov
pusha
and
lret
mov
lods
iret
xchg
fsts
mov
icebp
or
xor
or
cs
pop
mov
jle
xor
mov
ljmp
push
dec
cmpsl
neg
jne
or
clc
nop
push
xor
les
mov
xor
fstpt
stos
outsl
xchg
mov
ja
sti
lret
fisubrl
xchg
out
push
jnp
lds
fs
cmp
ss
inc
push
jno
es
cmpl
int
ds
push
stos
xorl
pop
pop
jl
arpl
cmp
sti
xchg
jnp
je
push
mov
mov
xor
mov
mov
mov
addl
and
in
sbb
cmp
xor
or
insb
lret
lds
ret
das
addl
mov
clc
adc
in
frstor
in
and
sub
dec
dec
cltd
push
mov
popf
scas
inc
cmpb
in
dec
mov
mov
mov
pop
loop
mov
sub
in
incb
jle
shrb
dec
pushf
push
jge
xor
in
stos
adc
cwtl
and
mov
outsl
loop
data16
addr16
sub
xlat
fs
xor
xor
xor
sbb
andb
fwait
out
dec
out
enter
pop
xchg
mov
mov
push
ret
dec
fcompl
ret
or
xchg
add
out
push
mov
lret
rcr
and
mov
mov
pop
arpl
clc
push
xchg
mov
jns
pop
dec
inc
loopne
adc
call
pop
outsb
std
stos
outsb
pop
xchg
sti
adc
insb
inc
into
icebp
cmp
rcr
and
sub
sub
sub
lret
sub
rcr
cmp
std
xor
sub
jbe
sub
ds
mov
push
imul
xchg
sbb
in
repnz
jge
sbb
mov
and
ds
jge
xor
inc
repz
mov
insl
leave
sub
test
dec
popa
add
ds
push
bswap
movsb
fs
fwait
pop
call
lahf
cmp
pusha
lods
shr
cli
out
xchg
jo
pop
fwait
loopne
sahf
sbb
xchg
and
jno
nop
int3
push
jmp
xchg
lret
sub
inc
push
sub
sar
roll
mov
mov
rorl
fldl
nop
jns
inc
cmp
push
mov
cmpsb
arpl
jge
lock
dec
pushf
outsb
add
push
xchg
add
xor
rclb
xchg
lods
arpl
bound
ficoml
lahf
inc
cmp
or
std
adc
jns
cmc
or
or
pop
repnz
out
cld
jne
popa
xchg
push
mov
and
jbe
pop
daa
shl
push
pop
and
orb
pop
sub
inc
or
int3
in
enter
fwait
mov
jbe
call
sbb
jne
out
fldl
or
into
cli
add
pop
mov
xor
push
clc
adc
shlb
push
mov
jbe
hlt
movsl
rorb
shlb
push
lcall
out
cmp
icebp
push
pop
js
movl
std
mov
jns
imul
adc
add
cmp
push
sub
icebp
test
xchg
cmp
fists
outsb
in
popa
and
adc
pop
push
sbb
xor
aaa
out
sub
test
add
rolb
sub
insl
sub
jnp
pop
xlat
or
scas
mov
jle
ja
scas
add
adc
cmp
movl
mov
adc
test
xor
cmp
adc
add
jecxz
jge
cmpsb
jmp
cmp
ja
inc
xor
and
mov
sub
in
cli
inc
push
xchg
mov
fisttpll
call
out
adc
add
je
xchg
jns
push
xchg
mov
pop
clc
ss
inc
and
stc
jle
loope
xor
inc
ret
jl
imul
mov
ja
add
fistps
sub
divb
fwait
mov
xchg
mov
xor
and
mov
cmpsl
mov
dec
mov
pop
jo
mov
mov
ljmp
mov
enter
gs
xor
jne
lods
or
inc
popf
repnz
ss
xchg
outsl
fisubs
inc
and
jbe
add
push
out
push
xchg
sahf
inc
outsb
push
inc
push
rorl
cs
test
xchg
call
in
jl
jle
xchg
mov
icebp
xchg
cs
mov
sub
dec
mov
adc
das
sti
ss
dec
adc
sub
adc
out
sub
dec
or
push
mov
out
mov
or
jle
inc
add
push
add
mov
jp
pusha
sti
mov
cmp
and
mov
jno
push
out
lret
fnsave
andb
testl
icebp
and
pop
pop
jno
das
sbb
adc
sahf
pop
in
imul
pop
repz
xchg
jge
adc
andl
xchg
lods
out
fists
gs
fmuls
xor
das
pushf
cmp
inc
or
fisubl
shrl
repz
or
fsub
jp
cmpsl
sbbb
and
or
adc
mov
jle
ja
sub
leave
fisubrl
xchg
xchg
rep
sub
or
clc
fldl2t
fs
push
inc
addb
ljmp
cmp
icebp
push
xchg
imul
lret
pop
push
mov
mov
test
lods
xchg
imul
adcb
jnp
ret
out
dec
out
cwtl
out
sbb
je
dec
pop
daa
idivl
jp
mov
out
inc
faddl
shrl
loop
negb
pop
inc
imul
movsl
cmp
scas
inc
fdiv
push
add
rcrb
sbb
or
mov
rorl
xchg
mov
and
sub
or
add
inc
and
pop
aas
mov
repnz
arpl
mov
int3
sub
or
sbb
dec
repz
cltd
call
jge
dec
rol
leave
push
jmp
das
aaa
mov
cltd
mov
gs
jecxz
mov
repnz
movsl
adc
les
rol
leave
test
test
inc
pop
cmpb
sahf
inc
daa
or
je
xor
mov
loope
xor
pop
jno
iret
push
movsl
adc
cmp
addr16
or
adc
gs
aam
ss
wbinvd
push
or
cwtl
adc
mov
lret
loop
sbb
leave
iret
xchg
or
mov
mov
cmp
in
rcrl
push
adc
mov
add
pop
adc
xchg
shll
sbb
or
bnd
inc
lcall
cmpsb
sti
scas
test
adc
xchg
add
jl
out
sbb
loopne
std
arpl
mov
aas
jns
icebp
cli
aad
jbe
fidivrs
xor
mov
outsb
shlb
fldl
push
leave
xchg
push
idivb
test
push
jb
fucomip
push
les
enter
push
dec
in
push
push
sti
imul
mov
xor
pop
and
pop
xor
ficoml
addr16
icebp
jmp
jp
xor
ljmp
mull
int3
cmpsl
cltd
cltd
pop
and
pop
fstl
push
stc
mov
rcll
imul
mov
jp
or
pushf
rol
xlat
push
dec
cmp
stos
jmp
add
sti
xor
jo
xor
mov
add
stos
test
popa
xor
push
loope
scas
test
jge
inc
movsb
push
cld
jp
xlat
repz
testl
and
in
scas
or
jl
int3
inc
ds
sti
inc
shlb
and
mov
pop
pop
inc
inc
in
xorl
add
and
nop
ficoms
fs
les
pushf
fwait
std
add
mov
pop
scas
stos
xor
out
imul
pop
aad
cld
insl
js
enter
adc
test
xchg
icebp
push
sbb
int
lcall
cmp
dec
or
xchg
cmp
cmpsb
cmp
outsb
inc
scas
mov
leave
mov
cmp
ds
inc
popa
fwait
mov
push
pop
or
cli
push
add
popf
sub
leave
decl
fstpt
mov
inc
lods
cmp
sti
jl
add
pop
push
adc
ficompl
out
vmwrite
into
sub
subl
bound
and
inc
push
jbe
rorl
jle
popl
or
push
xchg
push
pusha
xor
enter
lods
push
jnp
subl
add
mov
cltd
sub
inc
lds
lcall
push
push
ss
cmp
stos
insb
push
aad
jmp
mov
call
ja
xchg
out
push
out
fistpll
in
ja
pop
out
leave
or
inc
sarl
xor
imull
cmp
call
mov
inc
mov
mov
mov
mov
adcl
lods
xchg
cs
les
dec
push
sbb
lock
popa
inc
pop
fwait
loop
scas
ret
fidivrl
rcr
pop
test
push
xchg
sbb
mov
int
sub
inc
pop
add
jbe
mov
cli
dec
sbb
loop
xchg
in
pop
aas
xor
pop
test
fdivrs
aad
pop
test
int3
fstl
inc
test
mov
divb
scas
or
lret
jmp
mov
movsb
mov
ds
inc
push
ss
das
rcrl
insl
nop
rcrl
fisubrl
sbb
or
pushf
lock
sub
xchg
aad
adc
mov
popa
ss
or
in
cmp
outsl
popf
sub
adc
push
cmp
dec
and
xchg
and
outsl
push
dec
negl
or
xor
mov
adc
sub
mov
xor
inc
lret
push
jp
jp
mov
and
cmp
fcoml
mov
es
ficompl
clc
mov
das
ljmp
data16
xchg
cltd
stos
daa
ret
cltd
push
mov
xchg
push
push
lds
push
push
mov
xor
dec
fisttpll
sbb
dec
pushf
mov
scas
cmpsb
les
fs
adc
popa
pushf
sbb
lret
mov
lret
xchg
dec
into
xchg
into
cli
pop
jp
pop
mov
jne
mov
lock
rcl
jecxz
imul
stos
cmp
adcl
sub
sahf
in
push
push
mov
into
imul
shll
xchg
mov
clc
cmp
ret
ja
cs
cmpsl
mov
push
push
hlt
push
push
sub
xor
inc
cmp
push
ficoms
ljmp
lret
mov
mov
adcl
cmp
cwtl
sarl
es
insl
popf
call
xchg
mov
pop
mov
pop
stos
lcall
rclb
ja
push
test
mov
jge
in
les
lods
xchg
adc
push
es
add
iret
dec
xor
mov
push
into
add
fstpt
jl
push
imul
sti
dec
and
xor
sbb
and
repz
adc
jns
hlt
andb
mov
fistps
les
fdivrl
mov
sbb
repz
inc
jns
test
sub
mov
mulb
xlat
stos
lahf
xchg
shr
mov
rclb
or
lcallw
popf
in
test
lahf
mov
sub
sbb
push
xchg
mov
add
push
incb
push
push
mov
cmp
mov
pop
fstpl
pop
and
mov
pop
rcll
scas
popa
inc
aas
pusha
push
fldcw
xlat
sub
imull
popf
jl
adc
aad
stos
int
fbld
loopne
fcmovnu
pop
sbb
lcall
sub
lret
mov
or
dec
aad
mov
add
leave
bound
xor
pop
je
into
out
jmp
push
xchg
jo
test
dec
push
mov
add
inc
cmc
das
movsl
dec
gs
stc
ss
cmp
lea
push
scas
sub
pop
test
fcomps
pop
and
popa
lcall
adc
add
cmp
fildl
out
out
mov
fsubl
fsubrl
mov
push
push
add
in
jp
push
cmp
mov
sbb
mov
ds
stos
ret
xchg
mov
push
jp
mov
cmp
jae
stos
and
or
clc
adc
lcall
scas
mov
sbb
shrb
fstpl
mov
xchg
push
jmp
mov
iret
xchg
fldl
inc
fsubrp
adc
fwait
hlt
cwtl
sbb
js
add
aam
mov
mov
cmpb
rcrl
js
sbb
mov
dec
jno
in
enter
mov
rep
jne
repnz
xor
xchg
test
sbb
lds
sbb
fcoms
sub
mov
lods
mov
cwtl
jae
mov
add
gs
mov
or
jmp
arpl
in
and
sub
sub
inc
enter
out
fldt
out
lods
outsb
int3
cmp
aas
arpl
imul
out
push
push
jmp
pushf
rorl
add
movsw
repnz
arpl
mov
cmp
and
jg
add
mov
mov
gs
sub
dec
xor
mov
inc
in
icebp
ror
jp
fwait
and
aam
cmpsl
movsl
sbbb
stc
scas
xor
icebp
push
sahf
mov
xchg
cld
sub
jge
jp
cmp
nop
cmpl
cmp
sbb
arpl
nop
mov
xchg
jp
jmp
adc
inc
sub
adc
outsl
push
mov
fst
mov
and
rclb
notl
aad
ljmp
and
cmp
icebp
repnz
push
or
dec
sbb
and
mov
clc
rorl
fwait
jle
nop
ljmp
imul
cmp
lea
mov
adc
push
mov
hlt
inc
daa
push
inc
sbb
cmc
jno
pop
dec
mov
loopne
add
cwtl
mov
fwait
std
dec
dec
sbb
pop
insl
and
adc
adc
xor
mov
mov
fucom
pop
hlt
popa
mov
push
adcl
ljmp
sub
insl
pop
aaa
call
dec
aas
enter
xor
or
add
or
out
popf
les
lret
mov
pop
stc
fldt
enter
scas
icebp
dec
mov
push
mov
cmp
mov
out
lcall
mov
lret
mulb
fsubrl
lock
pop
add
stos
inc
pop
mov
pusha
dec
mov
pop
xchg
hlt
test
movsl
mov
movsb
push
jo
imul
push
orb
and
lods
or
movsl
xchg
cmove
aaa
mov
push
pop
into
pop
dec
insl
ljmp
pop
push
ljmp
fld
das
dec
mov
sub
or
xchg
js
or
ret
jmp
mov
pop
add
fnstsw
aam
jns
and
stc
bound
not
clc
je
xchg
cmc
adc
in
inc
gs
lods
xchg
adc
aaa
mov
xchg
dec
mov
jmp
mov
cmp
repnz
push
fidivs
pop
insl
jp
icebp
and
rolb
in
stc
test
pop
add
xor
sbb
dec
outsb
sub
mov
aas
dec
cli
fdivrs
or
addr16
imul
rcll
pop
inc
lds
stc
int
sub
xor
fcomip
mov
inc
and
adc
adc
fdivrl
out
xchg
jecxz
push
pushf
mov
push
mov
xchg
movsb
push
mov
addb
test
aas
inc
jg
test
mov
pop
push
pop
stc
sbb
cmp
int
xchg
fcompl
cmp
fstl
pop
jg
push
psubsb
inc
pop
cmp
or
pop
movsb
or
pop
sub
enter
inc
xchg
cwtl
jnp
dec
sbb
aaa
adc
mov
sbb
cmp
jne
jb
cmp
mov
mov
mov
mov
mov
add
mov
int
mov
daa
mov
inc
es
cmp
adc
cmp
jae
lret
addr16
arpl
xchg
and
inc
aaa
call
xor
or
mov
fistl
popf
adc
call
cwtl
jecxz
ficompl
popa
pop
xor
mov
repz
sarl
adc
repnz
les
mov
scas
loopne
add
sub
iret
cld
pop
lcall
push
mov
nop
lret
data16
out
out
cmp
dec
adc
insb
cmp
popf
pop
sbbl
fistpl
out
adc
adc
xor
out
and
xlat
cmc
shlb
sub
daa
jp
inc
mov
push
mov
orl
cmpl
pop
sahf
push
add
jg
idivb
and
sub
jne
jp
xlat
pop
dec
out
sbb
test
xlat
subl
pop
out
dec
mov
cltd
sub
fdivrl
mov
xor
mov
xchg
fnstsw
movsl
xchg
and
lret
inc
out
outsb
xor
into
or
push
test
sarb
enter
adc
ja
sti
ror
in
mov
dec
cmp
ljmp
loopne
gs
mov
idivl
lret
and
push
mov
pop
jb
ror
repnz
dec
ljmp
lret
aad
cmpsb
add
out
test
push
hlt
into
enter
xchg
mov
cmp
xorl
into
pop
add
push
sub
sub
insb
jg
sub
cwtl
into
popf
aas
push
xor
jnp
add
aas
dec
push
or
mov
sbb
into
sub
js
daa
xchg
dec
filds
sbbb
pushf
pop
and
push
cmpl
ret
push
popf
mov
lret
mov
mov
in
mov
inc
repnz
lret
lods
cld
test
loop
fsubl
mov
or
dec
loope
test
adc
or
inc
inc
lods
xorb
fwait
rclb
xchg
lret
gs
loopne
insb
sbb
mov
mov
and
sti
mov
jg
cld
lret
ja
mov
inc
pop
jmp
cmp
xchg
and
mov
mov
mov
icebp
jg
and
daa
clc
jo
js
jae
lcall
or
push
outsb
ljmp
dec
orb
fldl
pop
dec
jge
dec
fstps
jae
mov
adc
jg
inc
xor
jge
pop
adc
aam
and
push
mov
push
sub
lret
std
lea
push
jecxz
aad
xchg
mov
loope
jecxz
pop
das
jae
sub
lret
insl
cmc
cwtl
das
and
dec
lea
shll
adc
in
shrl
xor
sti
sahf
sbb
jne
stos
cmpsl
arpl
loop
clc
mov
js
bound
stos
int
sbb
mov
sbb
inc
jns
addr16
xchg
mov
in
daa
and
add
daa
enter
pusha
jecxz
lods
popf
pop
das
push
xor
iret
dec
imul
inc
jle
cmpsb
mov
mov
imul
out
push
cmp
and
nop
cld
xchg
lret
dec
iret
push
stos
pop
mov
int
cmp
fcomip
mov
and
iret
aas
cmp
lea
mov
cmp
cld
mov
adc
lahf
xchg
idivl
test
shrl
movsl
add
scas
xchg
xor
fsubr
dec
lret
cmp
sub
add
cmovg
fidivrl
xor
shrb
jmp
sub
subl
negb
inc
jle
jbe
and
push
repz
ret
nop
and
xor
and
js
loope
imul
inc
ret
xlat
push
stos
inc
cs
mov
xor
dec
mov
cmpl
lock
sub
addr16
test
xor
mov
popa
ret
cmp
inc
xorb
unpckhps
pop
push
out
xchg
cmp
inc
insl
adc
cs
or
or
jmp
jmp
dec
xchg
add
xchg
adc
inc
xor
cmpsb
fldenv
mov
jo
xor
cmp
clc
icebp
stc
mov
sbb
jne
negl
mov
adc
push
sub
cmp
imul
or
out
filds
jno
out
adc
xchg
mov
dec
dec
dec
ret
mov
ss
dec
mov
xchg
scas
daa
cmp
adc
xor
aaa
movsl
add
cmpsb
or
cs
cmp
loopnew
in
mov
jo
sub
or
push
mov
or
fptan
xor
cli
test
and
xchg
je
lea
test
dec
jbe
shl
mov
js
sub
add
xor
sub
sub
sti
push
fcoms
int3
movsb
ret
mov
add
outsb
ret
lcall
jp
and
aad
xor
into
movsl
xor
pop
mov
outsb
inc
fnstsw
cs
mov
add
pop
push
mov
loope
test
pop
xchg
xchg
mov
xor
shlb
repnz
ljmp
adc
or
popf
xchg
fsubl
daa
popa
scas
repnz
jo
pop
sbb
sbb
inc
scas
sub
mov
in
mov
pop
sahf
dec
mov
mov
je
jle
lods
mov
js
sbb
fwait
push
test
sub
scas
cmp
stc
adc
mull
push
loope
jecxz
fstl
dec
icebp
sub
adc
or
and
mov
lock
loop
sbb
and
mov
xchg
pop
into
jle
cmp
sub
jle
in
xchg
sbb
mov
sbb
fdivp
push
xor
mov
and
insb
loop
jns
xchg
cmpsb
ret
arpl
stos
or
adc
inc
xor
jb
enter
insl
test
out
mov
push
dec
scas
shlb
adc
inc
sub
loop
int3
mov
lahf
sub
rorb
lret
or
xchg
fcompl
in
and
jae
jne
fdivrl
xchg
repnz
mov
sub
add
jl
aam
push
lahf
sbb
xchg
add
pop
lods
sub
popf
xor
mov
sbb
repnz
or
lahf
and
push
or
lock
sub
push
mov
cmp
nop
ljmp
jne
mov
inc
lock
lcall
call
xchg
mov
or
and
push
push
loope
jle
mov
add
xchg
cli
in
and
pop
movsl
jmp
das
les
jnp
xchg
sahf
inc
sbb
inc
push
jge
sub
cwtl
ljmp
sbb
mov
movsb
dec
jecxz
adc
cli
call
imul
push
lret
cmp
enter
rolb
jbe
sahf
add
popa
fsubrp
mov
adc
adc
loope
fwait
jg
out
add
mov
bound
sbb
fistl
inc
fcmovb
inc
jne
pop
pop
shrl
mov
and
imul
test
pop
push
sti
jge
inc
xlat
xlat
js
sub
or
dec
mov
push
mov
or
adc
ret
sbb
in
and
sbbb
sbb
push
popf
or
push
es
push
in
jnp
inc
mov
xchg
into
and
cwtl
dec
or
ss
xor
pop
sahf
mov
frstor
es
lret
loop
outsb
or
test
daa
inc
ret
cmpsb
js
or
divps
rclb
push
mov
xchg
add
cmp
lds
test
movsb
ds
ret
inc
xorb
xor
sbb
jb
jg
ret
addr16
or
mov
lret
loop
icebp
mov
test
xor
popa
jge
jmp
or
cli
packssdw
cmp
subb
aaa
and
or
pop
xlat
jge
dec
mov
or
jne
dec
jp
es
or
fidivs
mov
cmp
fsubp
mov
pushf
arpl
test
or
fdivrs
decl
sub
mov
mov
xchg
sbb
push
cltd
add
mov
in
dec
cs
xor
cli
jns
lods
pop
hlt
jae
jmp
movsb
jns
lods
xor
xlat
test
sub
pop
lea
mov
add
or
cmp
cmpsb
add
mov
push
xor
int
sbb
out
pop
jle
sbb
xchg
mov
push
mov
icebp
int3
jo
gs
aas
loopne
inc
dec
sbb
dec
negl
arpl
add
mov
sbb
cwtl
pushf
sub
mov
dec
mov
mov
cmpsl
sub
mov
push
mov
mov
addb
fsts
divb
fdiv
arpl
fisubrl
repz
push
xchg
movsb
pop
sub
push
ja
filds
sub
outsb
pop
pop
or
sub
push
push
jae
add
mov
or
out
jns
mov
add
inc
sub
xchg
cmp
fcmovnu
jne
dec
out
mov
dec
jg
mov
popf
fmuls
push
cwtl
mov
fstps
xchg
roll
dec
bound
es
add
insl
cmp
and
inc
inc
repnz
sbb
jbe
xchg
adc
jmp
pop
out
xlat
and
in
cli
dec
add
pop
mov
ret
mov
ret
pop
daa
lahf
sti
mov
sbb
in
shll
icebp
jp
imul
inc
sub
inc
xor
ss
and
add
jnp
sti
xchg
aas
outsl
cld
pop
add
cwtl
mov
sbb
pop
xchg
lea
stc
pop
cltd
push
or
fidivl
bound
sub
sahf
stc
sahf
lahf
mov
mov
outsb
repnz
mov
shll
popa
mov
and
mov
loopne
sahf
ret
sbb
push
sub
mov
insl
mov
push
cmp
sti
mov
loopne
pop
movsl
pop
mov
aam
out
cmpsl
in
pop
mov
arpl
xor
push
ss
addl
pop
arpl
xchg
xchg
pushf
jecxz
mov
mov
stos
dec
arpl
xchg
pop
sub
jmp
push
or
dec
stos
lea
in
xor
inc
jge
sub
sbb
mov
adc
xor
rcl
stos
mov
outsl
test
push
call
xor
mov
sti
std
add
dec
mov
mov
outsb
push
sahf
xor
pop
les
pushf
or
iret
inc
add
loope
cmp
insb
stc
enter
cmp
stos
aas
rorb
daa
or
ljmp
in
jb
mov
inc
xchg
dec
lret
sbb
inc
rcr
repnz
add
xchg
adc
sti
add
lods
insl
sbb
data16
xor
mov
mov
lods
pushf
cmc
les
xor
rcll
movups
out
push
jg
adc
ja
fldenv
clc
lahf
clc
xor
dec
pop
je
pop
add
rorl
pop
push
push
or
dec
lods
imul
test
outsl
lea
je
pop
mov
sub
into
out
push
adc
mov
dec
pop
fldln2
popa
mov
push
fndisi(8087
es
hlt
je
mov
cltd
xchg
pop
or
dec
xchg
xor
push
push
aad
es
repnz
sbb
les
or
xchg
xchg
mov
ljmp
xlat
sub
mov
out
or
int3
stos
dec
jnp
icebp
cmp
fcomps
inc
xchg
scas
cmpsl
inc
mov
andl
jecxz
jae
icebp
rep
lods
lret
push
pusha
cmp
xchg
dec
mov
roll
cmp
ret
or
mov
cmp
ljmp
or
inc
pop
popl
lret
pop
jo
arpl
inc
sub
lret
sbb
mov
and
daa
mov
jnp
add
and
popf
out
pushf
or
orb
scas
adc
loopne
ret
sti
adc
xor
inc
add
cmp
and
inc
stc
test
and
mov
xchg
pop
inc
jns
out
jmp
int3
cli
jbe
or
mov
mov
xchg
ja
les
mov
les
jae
mov
jmp
cmpsl
shrl
jbe
dec
fidivl
mov
stc
push
lret
in
lds
pop
mov
clc
jnp
cld
mov
leave
adc
adc
movsl
cltd
ret
sbb
mov
jg
adc
mov
push
mov
clc
push
mov
fdivrs
test
fsubrl
lret
data16
inc
iret
mov
into
jno
cs
mov
push
dec
pusha
adcl
xchg
sbb
daa
hlt
movsl
loop
lret
adc
cmp
or
in
notb
les
cmp
aam
or
fs
xchg
add
dec
sbb
cmp
ljmp
pop
xchg
pop
das
out
push
inc
push
repz
scas
aaa
fistl
sbb
jno
daa
push
scas
popf
in
out
divb
xchg
mov
mov
insb
idiv
out
and
mov
bound
add
push
mov
xchg
lret
cwtl
xchg
and
sbb
and
inc
js
mov
xchg
inc
dec
xchg
adc
popa
lock
lea
inc
sbb
inc
pop
sbb
or
push
fbld
into
out
lahf
jae
jg
test
jg
sub
pop
mov
cmpsb
lods
sarb
mov
mov
sahf
lock
push
outsl
repnz
mov
stos
push
bound
pop
dec
push
in
dec
mov
daa
js
mov
stos
mov
shll
lret
cld
inc
mov
ss
inc
shl
mov
outsb
dec
push
lea
movl
movsl
repnz
hlt
das
iret
pop
shlb
jns
push
cmp
cmp
decl
mov
xor
sub
cs
in
idivl
cmp
jg
jecxz
imul
xchg
ja
inc
fucomi
clc
test
inc
movsb
lret
dec
fisubrl
lds
cmp
lock
lock
pop
aad
repz
and
dec
cmp
xor
sti
sub
jno
adc
arpl
jbe
pushf
xor
lahf
arpl
xor
mov
es
stc
cs
insl
pop
fxch
dec
outsl
dec
loope
sub
adc
stc
inc
pop
push
clc
adc
xor
xor
mov
repz
inc
int
sbb
lds
cmp
notb
ret
xor
test
faddl
cmp
rcrb
jg
add
lods
pushf
sahf
xor
mov
shl
sarb
mov
mov
push
addr16
xor
jnp
xlat
mov
push
lds
repz
xchg
ljmp
rorl
push
adc
mov
mov
je
insb
or
cmp
adc
fldt
clc
cwtl
shr
shrl
andb
push
pop
arpl
dec
inc
out
ret
lds
nop
movsb
push
pop
in
test
xor
add
inc
fldl
pop
mov
outsl
add
and
imul
adc
or
lods
dec
ljmp
sub
movsl
sahf
jmp
out
in
sub
inc
add
lahf
mov
testb
sub
push
xor
and
stos
test
inc
mov
cmp
pop
xor
lea
pop
cld
cmp
shlb
push
lea
fisubs
inc
lock
fadds
xor
cwtl
pop
std
notb
daa
shrb
cmpb
jns
pushf
jp
cmp
or
icebp
rorb
ficoml
sbb
mov
es
mov
cmpsl
and
or
addl
test
fcom
rol
ds
mov
cmp
xor
pop
hlt
daa
into
imul
xchg
pop
mov
ljmp
std
jo
push
int
cmp
jmp
and
pop
mov
mov
ffreep
mov
mov
add
and
jno
movsb
nop
sbb
adc
pop
inc
adcl
mov
shr
lret
je
and
sub
sub
mov
hlt
pusha
mov
add
mov
push
cltd
push
push
and
call
and
push
leave
cmpsl
mov
es
mov
push
mov
jp
adc
and
cmp
dec
ret
dec
ret
cltd
test
cltd
cld
shlb
nop
adcl
loop
cmp
pop
leave
je
aad
ljmp
dec
outsl
sub
push
push
imul
xchg
sub
enter
mov
fldenv
outsb
cmp
and
inc
imul
mov
sbb
mov
jmp
sub
rol
js
fbstp
xchg
jno
cmp
into
fwait
xchg
mov
shlb
and
scas
sahf
push
push
nop
fs
aad
xchg
sub
fmull
jecxz
push
mov
mov
clc
dec
jg
adc
fwait
mov
in
inc
xchg
sub
add
imul
stos
mov
jno
lods
mov
cmc
mov
test
and
xchg
cmp
cwtl
dec
sbb
mov
popa
ss
frstor
loopne
push
add
sub
jge
out
sbbl
jne
popf
mov
out
pop
adc
xchg
lret
lock
repnz
jo
rcr
aas
les
add
or
jg
loope
aaa
xor
jl
inc
ficomps
notl
adc
fnstcw
mov
mov
inc
out
and
cwtl
cmpsb
mov
jno
scas
mov
out
push
pop
int
adc
push
jl
bound
loop
mov
ss
mov
jnp
test
xchg
inc
mov
test
fistps
xchg
loopne
test
popf
mov
out
lea
shll
xchg
dec
int
push
call
lcall
pushl
pushf
jmp
push
xchg
in
push
jge
gs
cs
wbinvd
push
pop
inc
add
out
sarb
pushf
or
or
inc
push
sbb
cwtl
dec
outsb
and
inc
dec
pop
sbb
mov
cmp
jb
cmp
pop
sti
shlb
add
jns
in
pop
cmpl
scas
push
mov
push
cmp
pop
sub
lds
adc
pop
lret
lcall
fsincos
or
xchg
push
mov
pop
adc
dec
cltd
cmp
xor
push
xor
jmp
bound
push
jnp
adc
in
mov
pushf
mov
stos
pop
mov
andb
mov
les
ljmp
icebp
jecxz
pop
test
fcoml
pop
jecxz
mov
enter
and
movsl
push
push
in
cmp
xchg
in
mov
rcrl
mov
into
xchg
xchg
data16
cmpsb
fistpll
xor
or
stc
inc
mov
aad
in
cli
mov
aad
mov
mov
inc
mov
cs
dec
out
mov
jp
out
stc
mov
loope
popf
out
pop
mov
adc
cltd
imul
bnd
ja
cmp
dec
dec
repnz
dec
sti
dec
subl
jl
dec
mov
and
sub
xchg
pop
xchg
popw
fisubrs
mov
fs
fidivs
mov
push
adc
in
jge
hlt
sbb
fisubrl
js
xchg
imull
outsl
mov
sarb
adc
je
xor
std
lods
sub
mov
add
cmp
mov
jno
lds
jbe
cmp
jnp
push
lock
test
or
mov
psadbw
fstl
hlt
int3
mov
mov
xchg
jnp
mov
adc
js
sub
pop
cmp
stos
add
scas
cwtl
pop
or
add
les
jae
int
xor
inc
mov
rolb
adc
sarb
sub
test
imul
or
push
pop
lret
pusha
in
inc
cmp
mov
cmp
scas
push
push
sbb
or
mov
xlat
inc
data16
sub
xor
jo
jmp
js
and
xchg
jno
dec
sbb
and
xlat
mov
cmc
cmc
jg
mov
fmul
out
xchg
ret
cmp
or
dec
inc
pop
test
sub
aas
add
and
and
movsl
jne
sub
and
jns
mov
jle
enter
and
fistl
adc
movd
push
ss
inc
cs
outsb
mov
jl
in
jo
inc
stos
xor
mov
dec
enter
push
arpl
pop
into
dec
fisttpl
insl
fmuls
or
out
fstl
inc
xor
clc
sbb
inc
int
dec
stc
out
or
sub
fs
int
dec
cmc
call
cmp
and
cmp
lock
mov
pop
int
sti
lret
sti
pop
lods
cmp
out
pop
rcr
fnstsw
addr16
insl
pop
insb
orl
push
mov
jb
add
xchg
iret
popf
push
hlt
dec
ret
mov
xlat
sbb
loopne
bound
fdivs
pop
call
nop
or
xchg
loope
jecxz
sub
lcall
shr
or
lds
mov
mov
cwtl
ds
dec
mov
sbb
mov
int3
orl
mov
mov
inc
fcmovbe
loope
xchg
lcall
out
xlat
inc
inc
pop
jle
je
sbb
pop
scas
in
out
fstps
xchg
in
dec
testl
into
cmp
and
hlt
push
je
sti
test
mov
xor
pop
and
das
dec
stos
mov
add
mov
fstpl
xchg
sbb
push
mov
lcall
rolb
sbb
sub
jge,pt
movsb
xchg
xchg
in
dec
hlt
shll
outsl
test
cmp
push
sub
adc
int3
aas
iret
in
iret
aad
test
clc
adc
pop
jl
lret
in
out
sbb
jno
inc
adc
push
mov
repnz
js
xlat
and
ljmp
jns
test
ror
jns
cltd
les
enter
cltd
mov
adc
lods
push
cmpsb
loopne
add
dec
insb
push
clc
stos
add
clc
pop
sbb
aad
xchg
testl
dec
inc
icebp
insb
push
or
sub
xchg
negb
cli
insl
mov
mov
jo
cmc
sysenter
adc
bswap
dec
push
nop
add
add
in
sbb
out
mov
mov
pop
fs
push
icebp
imul
pop
leave
das
cmp
mov
cltd
inc
fistl
fidivl
lret
iret
sub
andl
inc
cmpsb
loopne
jl
ret
fnstenv
leave
push
arpl
jmp
pop
insl
es
in
test
nop
cld
in
pushl
inc
and
cltd
or
mov
icebp
dec
mov
jno
mov
xor
pop
test
test
add
add
jbe
ret
add
jae
pop
sub
add
mov
adc
dec
adc
movsb
int
add
shll
outsb
dec
fs
idivl
sbb
addl
add
ja
inc
pop
pop
ss
jnp
lahf
inc
sub
gs
test
add
or
jg
jo
inc
mov
test
or
cld
or
cli
sbb
mov
pop
jecxz
shrb
loopne
sbbb
sti
lahf
add
or
jns
add
loopne
jle
cmc
fldenv
push
cmpsl
jno
inc
inc
adc
inc
xchg
xor
lea
cmp
stos
xchg
xchg
jno
mov
outsl
hlt
cli
lret
xchg
push
test
sahf
je
xchg
jb
rorl
stc
adc
fcmovu
jl
adc
pop
jge
ficompl
cmp
out
aaa
and
adc
mov
dec
js,pn
push
int
push
push
icebp
mov
mov
pusha
rolb
jb
mov
inc
call
bound
jle
or
pop
aam
lock
sub
xor
movsl
sbb
int
addl
sbb
sub
adc
fwait
jns
sub
scas
aam
pop
xor
jne
xchg
jge
into
dec
mov
xor
push
xchg
and
jp
or
movsl
out
sub
incb
aaa
inc
jns
xchg
outsb
cwtl
rcll
jmp
out
adc
adc
in
mov
jbe
mov
push
mov
pop
jge
bound
in
xchg
and
pop
mull
js,pt
in
xor
sbb
test
jl
pop
repnz
cmp
das
inc
outsl
jp
out
mov
test
xor
call
je
in
sub
dec
cld
jb
sti
pop
jle
in
gs
or
jo
das
xor
inc
stc
adc
dec
inc
inc
imull
inc
ret
xor
sbb
sahf
adc
pushf
push
mov
push
mov
jo
push
push
test
popa
xchg
sbb
or
outsb
and
je
pop
sub
push
pop
and
and
movsl
push
iret
scas
pop
mov
sbb
in
mov
loopne
or
enter
adc
mov
sti
push
inc
xor
scas
push
subl
inc
inc
addr16
ret
int
fwait
sub
testb
out
int3
cltd
data16
xchg
pop
ret
mov
cmp
ss
popf
mov
push
or
dec
sbbl
or
push
popa
xchg
push
dec
jnp
mov
add
ret
pop
push
call
mov
mov
lods
nop
push
jo
sbb
rcll
jg
pop
out
fs
call
mov
leave
lret
jp
daa
popf
lods
or
and
mul
out
icebp
scas
lcall
fwait
loope
insb
pop
mov
mov
ss
shlb
aas
data16
jns
mov
jl
xchg
pusha
cmpsl
xchg
or
ja
or
pushf
push
bound
es
aaa
xor
sbb
jo
fstpt
movsb
adc
jle
jecxz
push
push
inc
pop
adc
mov
cltd
scas
xor
and
mov
daa
outsb
pop
jle
push
test
sub
sub
sti
fcmovnu
dec
mov
imul
inc
stos
ror
std
sarb
call
adc
mov
nop
sub
addr16
inc
popf
shrb
mov
dec
ds
test
xor
nop
imul
pop
mov
hlt
xchg
flds
mov
sbb
outsl
inc
inc
rcll
clc
shrl
test
subb
push
fists
nop
jge
mov
lods
shl
push
mov
ret
aaa
movl
push
inc
add
shl
cltd
mov
in
xor
adc
lahf
into
pop
loopne
and
dec
pop
pop
or
sbb
xor
push
out
shll
adc
fnstsw
mov
das
sbb
lahf
je
fcoms
or
aas
adc
cmp
mov
push
xor
lock
gs
and
mov
cmp
movsb
mov
cmp
incl
fs
adcb
fnsave
sbb
sarb
or
jno
fldt
idivl
std
outsb
lods
imul
das
mov
loop
outsl
fdivrl
push
clc
add
inc
vpandn
cli
loopne
rolb
test
cltd
std
xorb
stc
xchg
dec
cltd
pop
cmp
clc
add
ss
negl
std
dec
xchg
sbb
xor
ja
lock
dec
jb
ljmp
adcl
push
xchg
stos
sub
imul
xor
mov
or
cmp
rclb
orb
pop
push
and
sbb
mov
loopne
jp
fldenv
das
mov
mov
jl
add
aad
add
adc
aam
icebp
and
vpmacswd
call
test
popf
xor
ret
push
inc
pop
push
inc
adc
pop
dec
cmp
jge
push
push
jb
sti
das
lret
adc
mov
dec
adc
add
pop
push
aad
rcll
gs
adc
xor
add
std
mov
sbb
xchg
or
or
cmp
mov
aam
cmc
jg
and
or
outsl
dec
mov
cmc
lahf
push
rcr
sbb
pop
add
push
fidivl
out
inc
ljmp
sub
push
jns
aaa
out
jecxz
push
sbb
clc
call
or
sbb
incl
stos
mov
addb
sbb
xor
mov
push
jl
inc
inc
dec
test
jge
pop
lods
fiaddl
int
adc
lock
inc
sbb
popa
jle
pusha
lock
mov
ss
jne
adc
ret
or
not
sub
jbe
bound
bound
loop
xchg
xor
xlat
xchg
shrb
lods
xchg
stc
cltd
push
cmp
dec
xchg
imulb
cwtl
xor
sub
stc
add
loop
dec
jo
ljmp
fsubs
xor
or
jb
pop
lock
out
mov
and
mov
or
push
dec
mov
xchg
mov
pusha
adc
mov
mov
bswap
sub
std
dec
psubb
enter
push
loope
fxch
inc
inc
stos
notb
addr16
mov
mov
movsl
mov
enter
in
mov
loop
push
add
scas
mov
push
jle
es
add
pop
add
and
push
pop
mov
inc
xor
mov
push
outsb
imul
fistl
loop
jno
push
in
movsl
subl
or
jmp
cwtl
fs
add
aaa
scas
rcr
aas
cmp
aas
loop
mov
xadd
cmp
jae
sbb
jo
mov
insb
cmp
dec
call
xchg
fstpl
test
sbb
in
orl
lret
or
stos
scas
sbb
mov
push
dec
aas
dec
in
inc
cmp
cmp
xor
jno
loope
sarb
cmc
sbb
lock
cmp
imul
out
pop
mov
scas
cmp
xchg
mov
ss
mov
push
into
add
sub
xlat
inc
imul
xor
out
mov
mov
sub
inc
ret
clc
mov
push
sbb
fwait
lea
int
imul
adc
cltd
cmp
mov
push
in
loopne
sbb
cmp
push
push
sbb
and
popf
adc
popf
mov
push
sbb
call
cmp
mov
movsb
fstpl
dec
xlat
and
push
push
xor
das
pop
fs
inc
or
jb
pop
sbbl
notl
push
fwait
out
push
pop
or
mov
xchg
aaa
leave
mov
lods
or
push
sub
mov
es
and
std
add
bound
daa
dec
inc
cli
aas
out
int
fwait
xor
mov
lods
ret
js
dec
sbbb
jbe
pop
std
mov
mov
bound
mov
hlt
adcl
call
jae
sub
xchg
jmp
out
sti
xor
in
scas
jae
cmp
push
icebp
rorl
cmp
xchg
mov
test
sub
cld
cmp
inc
xor
push
cmpsb
or
push
pop
pop
rcl
mov
jo
mov
sbb
dec
mov
mov
mov
sbb
and
fistpl
xchg
sbb
cmp
les
or
push
jae
cmpsb
mov
jge
inc
lcall
int3
icebp
mov
test
js
mov
lret
mov
xchg
int
lret
add
ret
push
adc
cmpsb
jae
or
lods
add
test
or
adc
inc
xor
adc
in
mov
lret
call
popl
lahf
pushl
adc
fcompl
xchg
xchg
pusha
enter
in
hlt
push
mov
jle
cmp
loop
xor
arpl
loop
sub
aas
cmc
lret
and
add
push
rcrl
mov
pop
mov
or
in
dec
inc
lock
aad
adc
xchg
mov
jl
add
lcall
and
aad
je
cmp
push
or
mov
mov
and
arpl
ret
cs
and
gs
inc
jl
mov
mov
adc
cmc
lock
push
jl
dec
mov
movsb
jns
mov
loopne
fadds
inc
and
or
push
lahf
bound
pop
or
test
add
and
sub
jecxz
sbb
adc
sarb
lods
mov
jl
repnz
mov
dec
pop
lock
cli
imul
ljmp
mov
shlb
cmp
pop
jmp
push
mov
dec
adc
rorl
cmp
fsub
shll
js
mov
pop
pop
jmp
stc
mov
adc
imul
sbb
jge
add
jmp
repnz
xor
scas
cmp
ffree
xlat
dec
jmp
and
jne
sbb
sbb
inc
push
cld
dec
xchg
push
sbb
jp
xchg
jb
shl
mov
jp
or
test
aam
push
jo
dec
or
out
sub
rcl
xlat
dec
jg
xchg
or
jmp
shr
imul
xor
les
shl
imulb
fiaddl
out
insb
sti
test
loop
inc
call
jg
call
scas
rol
stos
testb
das
aaa
pusha
push
ja
aad
and
mov
dec
cli
enterw
dec
add
xchg
mov
jnp
sub
fnstsw
push
mov
ret
inc
subb
in
pop
rorb
rcrl
lods
ret
and
add
or
push
jbe
sbbb
cmp
push
enter
out
lret
std
inc
adc
push
add
cmpl
test
addl
aad
ret
repnz
xor
sub
dec
jb
leave
cltd
push
dec
sub
xchg
mov
push
gs
adc
and
popf
ret
jb
scas
xchg
mov
or
and
sbb
add
push
inc
mulb
mov
call
enter
fwait
jae
lcall
lods
scas
add
push
dec
ljmp
add
mov
in
pop
xor
xor
cmpsl
repz
stos
outsl
cltd
push
bound
sbb
fimuls
sbb
movsb
jl
jge
and
jl
xorl
imul
movsl
fs
pop
pop
lods
dec
mov
pop
mov
mov
pushf
xor
ret
xchg
sti
dec
fidivs
into
iret
in
in
lret
mov
sbb
pusha
add
sbb
dec
push
leave
mov
mov
stos
and
fs
icebp
cmp
arpl
stos
sbbl
ret
push
lahf
ljmp
push
pop
xor
xchg
in
test
jb
scas
add
or
pop
stc
add
adc
push
lea
leave
aad
pop
jns
sub
leave
xchg
xchg
repnz
repnz
mov
loope
cmp
dec
outsl
loop
scas
cli
sbb
mov
hlt
adc
stos
es
mov
dec
lret
in
sbb
pushf
mov
mov
sbbb
leave
pop
ljmp
push
jno
lds
nop
stos
pusha
inc
adc
xor
push
mov
fisubrs
arpl
fwait
movsl
mov
jle
lds
rorb
lods
test
cmp
orl
iret
push
ret
fwait
add
inc
clc
dec
lock
cs
lds
popl
mov
add
loopne
mov
icebp
and
jne
lea
repnz
pop
hlt
repnz
outsl
cmpsb
loop
adc
fimuls
mov
leave
test
cmc
movsl
mov
or
mov
hlt
sti
push
xchg
lock
aas
sub
fistpll
bound
push
fidivrs
mov
stc
int
div
mov
out
inc
data16
das
xchg
and
dec
fdivrp
out
or
daa
lahf
add
sbb
je
xchg
sti
sub
dec
ljmp
and
mov
test
mov
xor
adc
sbb
cmpsb
daa
push
xor
inc
xchg
inc
and
outsl
lock
data16
jne
loope
test
pushw
loopne
movsl
mov
into
dec
mov
inc
sarb
pop
cmp
jge
cmpsl
inc
mov
dec
and
mov
ror
lods
mov
enter
stos
sbb
adc
imul
ljmp
cmp
and
cli
or
xor
push
lcall
mov
pop
scas
mulb
sbb
sbb
loop
fcmovne
dec
lret
cltd
cmpsl
subb
cmp
out
dec
fstp
and
add
fs
cmpsl
imul
pop
sub
push
call
loopne
mul
sub
mov
mov
jne
mov
bound
popf
mov
aas
mov
lods
ja
int
icebp
repz
lcall
mov
pop
hlt
jle
push
insb
test
add
leave
icebp
outsl
hlt
sbb
mov
push
cmpsb
pop
dec
sub
sti
push
and
mov
jecxz
ljmp
and
lods
push
scas
outsl
inc
stos
and
adc
jle
mov
and
subb
or
cmp
dec
jns
daa
fchs
mov
mov
outsb
rorl
add
push
in
pop
lea
jns
shll
arpl
std
insl
push
sub
inc
jmp
int3
repnz
dec
inc
popa
setg
psubsw
js
mov
aad
mov
orb
lea
out
bound
sub
xorb
and
stos
rcrb
mov
lret
jno
sqrtps
mov
cmp
hlt
jg
adc
lea
push
sbbb
test
adc
push
dec
inc
or
xchg
xchg
int3
jp
fldl
push
cmp
add
cmp
out
aad
pop
out
leave
dec
gs
inc
lret
mov
cltd
sbb
and
mov
mov
mov
xchg
aas
push
popa
mov
mov
pop
sub
mov
aam
loopne
cmp
dec
inc
loope
dec
aad
movsl
mov
enter
int3
xchg
int3
mov
lret
inc
testb
sarb
ret
inc
mov
push
pop
and
int3
mov
inc
je
hlt
aad
imul
mov
xor
cmp
cld
xchg
pop
inc
lret
faddl
fs
dec
scas
push
mov
data16
jo
je
mov
xor
xchg
xchg
xchg
clc
outsl
jmp
dec
dec
in
mov
test
adc
mov
sarb
nop
pop
add
nop
lods
xor
aad
mov
mov
mov
cmp
in
cmp
mov
inc
xor
rcrb
pushf
outsl
xchg
jnp
in
test
cmpsb
adc
stos
add
movsl
pop
loopne
dec
clc
and
mov
dec
popa
or
in
jge
push
xor
sub
lods
push
or
cmp
mov
pop
mov
inc
xor
sub
jo
mov
mov
dec
xchg
xchg
mov
mov
fs
sbb
mov
dec
sub
aaa
int3
pop
imul
mov
cmpsb
mov
insb
insl
push
cmpb
fnsave
sahf
test
mov
pop
cmp
aad
push
shlb
xchg
shlb
and
aas
sub
test
or
dec
in
mov
jbe
jmp
inc
dec
shll
int3
hlt
jl
xchg
adc
data16
stc
lods
cmp
lcall
lret
mov
fs
pop
xor
loop
mov
js
pop
sbb
psubw
push
pusha
mov
sub
pop
lcall
int
cmp
mov
lods
mov
js
xchg
flds
sbb
and
jo
push
std
js
notb
popa
cmpsl
mov
push
mov
mov
dec
jge
pop
xchg
jae
mov
aam
and
or
pop
dec
mov
xchg
xor
pusha
add
lahf
aas
sbb
push
cmpsb
jle
outsb
or
cmp
cli
subl
xchg
bound
jle
mov
add
push
rorl
mov
and
add
xchg
pop
sbb
mov
lods
mov
mov
cmpsb
popa
out
sub
jb
fidivrl
mov
lock
out
lock
iret
sbb
fdivrs
xchg
add
push
and
lret
dec
xlat
push
xor
xchg
and
cmp
push
mov
es
xchg
cmpsb
cmpsb
mov
testl
iret
fwait
xchg
sbb
mov
mov
icebp
mov
sub
jl
adc
pop
mov
lock
repnz
push
notb
mov
or
imul
inc
pusha
daa
sbb
clc
adc
or
mov
sub
lgdtl
stc
hlt
xlat
addr16
or
scas
pusha
test
xchg
call
cmpsb
daa
in
outsb
fnstcw
out
dec
push
bound
cmc
fwait
hlt
insl
mov
je
sbb
das
push
add
cwtl
mov
outsl
inc
call
ljmp
popa
popa
mov
add
mov
sbb
dec
imul
das
jmp
push
jg
int
mul
pop
mov
pop
cmp
in
test
fs
xor
in
stos
jg
inc
das
and
ficoms
mov
stos
mov
sub
lods
lret
cmp
sarb
lods
and
cld
out
mov
dec
stos
cmpsb
out
js
pop
adc
sub
push
ficompl
ljmp
cmp
mov
cmp
dec
dec
pop
jle
xchg
mov
into
mov
ret
or
xor
std
sub
pushf
or
rolb
jmp
incb
iret
push
scas
pusha
or
insb
mov
aas
sbb
inc
and
jbe
imul
test
or
int3
xchg
aas
jg
je
pop
outsb
push
loop
stc
in
push
aas
adc
and
loope
popf
lods
pushf
and
sub
call
pop
pop
iret
jecxz
jge
cmpsl
arpl
scas
ss
mov
loopne
xor
call
decl
sub
mov
into
jl
adc
cmpsb
cltd
sub
mov
andb
int
pushf
jg
adc
arpl
frstor
pop
and
aas
and
in
inc
pusha
jp
jo
xlat
add
mov
inc
movsb
aas
jmp
loop
xchg
or
pop
inc
nop
into
push
aam
adc
pushf
lods
jl
in
sbb
dec
cmpsl
xor
jae
lods
jmp
pop
xor
mov
and
dec
es
xlat
inc
add
test
cli
lea
push
sbb
nop
jno
scas
xchg
cwtl
pop
mov
mov
leave
and
lahf
push
addr16
ljmp
xchg
and
mov
test
add
mov
js
test
mov
lea
pop
add
mov
dec
popa
cltd
aas
inc
xchg
not
cwtl
dec
call
lods
cmpsl
pushf
lods
and
dec
lea
sub
mov
or
push
jle
cmp
das
incl
jle
aad
in
cmpb
cmp
sbb
mov
cmp
subb
outsl
adc
test
xor
loopne
or
lock
sahf
mov
jl
jbe
std
push
in
and
jb
mov
push
xchg
pop
mov
aad
cmp
adc
aaa
push
pop
pop
popf
push
push
xor
aas
add
inc
mov
push
in
loopne
dec
lcall
das
loope
cmp
add
xor
js
mov
push
out
popf
insb
out
add
jmp
xchg
mov
jnp
add
std
orl
test
and
cmp
push
call
cmp
lahf
xor
loop
adc
sbb
fsubl
nop
in
mov
scas
adc
notb
inc
fsubrp
dec
mov
push
into
xchg
insb
add
sub
push
lahf
inc
xor
mov
mov
jne
daa
dec
xchg
loop
mov
xor
sti
dec
xor
and
inc
pusha
sbb
dec
in
adc
data16
mov
adc
std
and
sub
in
dec
jnp
imul
loopne
inc
mov
aaa
xchg
or
fisttps
call
sub
or
or
loop
xchg
add
popf
in
push
cmc
jmp
lret
jecxz
mov
dec
ss
insb
cltd
stc
mov
outsl
addr16
xchg
pop
push
jl
pop
test
push
sbb
mov
lods
fidivrl
push
dec
ja
mov
cld
iret
push
xor
xor
jae
rclb
icebp
popa
loope
pop
jg
mov
in
pop
xchg
xchg
adc
movq
pop
lcall
jge
jl
push
popf
lds
cwtl
in
arpl
std
xorb
mov
cmp
cmp
inc
xchg
or
mov
out
dec
inc
mov
cmp
aam
jecxz
adc
stos
bnd
push
pop
jmp
xchg
push
add
mov
add
in
mov
cmp
sub
cmp
insb
pop
cmp
push
sub
sti
xchg
enter
cmp
mov
not
shl
pop
int3
mov
cmp
xchg
ficompl
mov
xchg
or
xchg
in
pop
aam
std
repnz
inc
mov
xchg
pop
sub
movsb
imul
push
mov
lock
mov
test
loopne
jp
push
mov
arpl
sub
push
data16
stos
outsl
cmp
inc
pop
and
sub
jmp
ja
insb
popf
fwait
pop
or
dec
mov
negl
jne
mov
divl
enter
add
aas
je
jge
aam
cli
dec
data16
dec
or
lcall
inc
adc
loop
test
ss
test
pop
xchg
movsl
push
in
stos
std
incl
jno
outsl
dec
leave
fs
add
xor
rcl
ficomps
xchg
sub
imul
xor
xchg
stc
ja
mov
test
sti
jge
into
test
and
mov
push
or
jl
int3
mov
mov
aas
dec
rolb
inc
scas
ret
adc
sbb
mov
dec
sub
stos
cltd
lods
xor
add
sub
cld
cvttps2dq
sub
jmp
xor
fsubr
sub
and
fldl
shl
int3
dec
or
das
lods
das
add
out
lods
sbbb
sbb
jbe
cmp
pop
lahf
add
push
or
and
inc
movsb
mov
mov
iret
jae
fnop
in
ficompl
xor
xchg
inc
xchg
ljmp
in
in
cltd
mov
xor
cmpsl
outsb
mov
xchg
repz
icebp
lahf
jno
sbb
add
add
insl
out
sbb
fwait
push
fisubrl
xchg
test
js
mov
push
fwait
inc
push
jbe
ret
aam
fnstenv
mov
ljmp
dec
mov
sub
test
cmp
jns
test
dec
enter
setae
jmp
xor
les
jp
addb
gs
dec
stc
test
adc
xchg
stos
fsubrs
mull
push
sbb
test
mov
ljmp
mov
mov
aaa
push
pop
lahf
iret
dec
fxam
dec
cwtl
and
es
push
test
stos
dec
flds
jp
mov
mov
pop
pop
in
mov
stos
lods
js
movsl
sti
pusha
fiadds
pop
xchg
xchg
dec
fiadds
lret
lea
cs
outsl
xchg
in
in
pop
loop
dec
stos
cmpsl
loopw
cmc
es
stos
nop
pop
dec
in
sahf
fadds
loop
or
test
pop
pop
dec
cld
jne
hlt
in
add
pop
inc
xor
cmp
cmp
clc
push
stc
sbb
out
scas
test
pop
mov
cwtl
negb
inc
popa
mov
cmpsb
xchg
sbb
fidivl
push
xor
pop
xor
xor
in
lods
adc
mov
push
sub
adc
in
in
sub
fimuls
pop
fwait
ret
add
dec
pop
test
shr
pop
mov
mov
push
rcl
sti
nop
mov
jno
mov
test
lret
aaa
movsb
cmpsb
push
imul
push
xchg
xchg
sub
fisubl
pop
jg
cmpsl
adc
xor
je
jno
cmp
call
imul
out
sbb
push
roll
ljmp
or
out
mov
or
outsl
and
aas
int3
and
test
repnz
imul
js
push
mov
shr
push
add
inc
or
sbb
inc
jne
test
shr
fadds
clc
push
cmp
jle
repz
pop
xchg
out
aad
lock
leave
ret
cli
hlt
jb
adc
and
sbb
inc
ja
out
add
lcall
add
sbb
cmp
cmpsb
sahf
push
mov
push
push
gs
pushf
mov
push
pop
gs
pop
clc
push
jg
pop
mov
fldenv
lret
add
call
inc
into
lcall
call
inc
aad
mov
pop
ss
hlt
add
ds
mov
pop
movsl
stc
mov
cwtl
in
dec
xor
inc
sbb
bound
xchg
and
cmp
mov
and
mov
push
hlt
lds
decb
push
cmc
int3
mov
add
cmpl
scas
fwait
ds
std
sti
imul
and
push
mov
push
dec
int
xchg
pop
das
or
or
and
ljmp
mov
or
stc
inc
out
jbe
and
push
mov
sahf
lcall
sti
cmp
pop
shl
out
ljmp
and
arpl
jb
in
push
cld
and
jbe
jge
add
cmc
loope
gs
cmp
pop
xor
and
addr16
stos
fwait
popl
push
adc
das
das
push
test
lcall
and
shll
icebp
in
sub
mov
repz
xchg
jno
mov
stos
stos
out
mov
das
cwtl
mov
sbb
cwtl
mov
jnp
inc
xor
and
sbb
jle
rclb
into
cmp
jle
scas
push
inc
xor
mov
dec
pop
push
push
cmp
loope
cld
sub
mov
add
fimull
cmp
nop
movsl
or
cli
add
push
push
je
xchg
mov
sub
aas
xchg
inc
pop
and
daa
and
clc
pop
lahf
pop
loop
or
js
out
pop
dec
jle
incl
jmp
dec
jmp
or
or
pop
daa
mov
jnp
fwait
sbb
fcmovne
mov
jmp
pop
sbb
aaa
adc
sub
inc
fstps
popa
add
push
les
ret
xchg
out
jecxz
lret
inc
test
and
mov
psllw
ja
mov
enter
lret
cld
mov
notb
add
rorl
fs
lret
pop
pop
pop
popa
lcall
pop
andb
in
fsubs
aam
ja
psraw
fisubs
test
ror
xchg
fnstcw
movsb
leave
or
sbb
hlt
xchg
mov
loope
jb
bound
pop
xor
xor
sub
push
arpl
arpl
repz
fidivrs
and
stos
enter
daa
notl
cmp
push
cmp
sbb
test
iret
das
lea
cmp
sbb
jno
push
push
aad
scas
imul
add
daa
sub
fucomi
orl
or
push
mov
ror
idivb
jne
sbb
or
clc
xchg
dec
cmpsl
mov
xchg
dec
lea
popa
cmp
je
lahf
data16
and
inc
adc
aam
sbb
pushf
or
push
stos
adc
stos
aas
mov
sti
pop
aaa
dec
stc
int
mov
cmc
pop
stos
mov
es
std
cli
mov
sahf
or
inc
sbbb
add
sub
or
mov
or
sbb
sbb
xlat
data16
push
ret
mov
cltd
pushf
rolb
jl
sbb
mov
popf
ret
lods
jecxz
lahf
iret
mov
mov
bound
add
clc
mov
clc
aad
daa
sarb
and
stc
sahf
dec
cli
mov
test
arpl
ret
sub
cmp
and
push
inc
arpl
test
in
dec
inc
push
les
jle
xchg
ret
cmc
sbb
mov
jecxz
xor
movb
and
add
mov
data16
inc
push
or
dec
sub
xorl
xor
jo
mov
aas
mov
popa
xor
xor
xor
jnp
xorb
and
lods
jae
inc
std
fisubl
fistpl
xchg
cltd
js
cmp
push
add
rclb
in
inc
pushf
imull
mov
pop
and
cmpsb
orl
rorb
shrl
mov
popf
imul
mov
mov
mov
rcrb
xchg
sbb
jg
mov
inc
add
mov
pop
mov
sbb
mov
jns
mov
jne
adc
mov
pop
mull
lods
xor
push
inc
movsb
mov
sahf
dec
jnp
xchg
div
rcll
xor
sub
ljmp
ja
and
bound
repz
mov
jg
mov
dec
adc
or
and
xchg
pop
mov
cmp
mov
in
sub
bnd
dec
icebp
xchg
or
and
fimull
aad
pop
xor
inc
fisttpll
fadds
push
push
stc
xor
xchg
jne
lods
dec
lods
test
sbb
xchg
xchg
pop
sbb
lock
mov
lahf
pushf
in
pop
lds
inc
jge
lret
ja
mov
push
jecxz
scas
adc
lea
cmp
inc
push
cmc
dec
idiv
sbb
mov
jmp
xor
add
aas
dec
cmp
cmpsb
out
in
bound
mov
enter
push
mov
mov
nop
arpl
or
and
mov
dec
jne
sub
int3
xchg
xor
fnstcw
add
loope
adc
cs
adc
mov
outsb
out
bound
push
ja
clc
adc
mov
imul
adc
mov
enter
ror
in
test
sbb
xor
cmp
add
movsl
add
adc
into
dec
dec
xorl
sbb
push
adc
cmc
cmc
aad
mov
or
jno
push
movsl
xchg
xlat
rcrl
test
aaa
cmpsb
jae
add
add
pop
jbe
cmp
out
and
jbe
pop
stc
das
push
sbb
push
scas
fcoml
dec
fs
mov
out
push
xor
push
pop
and
call
pop
gs
data16
mov
and
andb
pop
cs
mov
es
pop
jo
mov
das
cmpsl
pop
clc
sahf
stos
insb
jge
push
mov
sbb
add
mov
dec
push
jo
sub
add
fucomi
xchg
dec
pop
lea
orb
push
pushf
jns
into
imul
movsb
outsb
dec
pop
xor
pop
mov
or
imulb
mov
lret
push
sbb
xchg
test
in
sub
jp
xor
push
push
mov
addr16
ja
mov
subl
mov
jp
insl
jnp
mov
and
add
aas
mov
dec
sarl
outsl
or
or
cmc
decl
decb
sub
mov
xchg
mov
push
pushf
sti
enter
jae
pop
psrlw
aaa
pop
sarb
mov
loopne
inc
stc
bound
pop
ljmp
sbb
ret
cmp
pop
shlb
aad
push
enter
pop
lea
and
stos
mov
jp
data16
sqrtps
les
arpl
aad
mov
mov
xchg
fdiv
adc
dec
xor
aad
popa
mov
push
mov
jecxz
mov
mov
pop
sub
fs
fwait
pop
prefetch
inc
mov
or
dec
and
mov
ja
test
push
addb
xchg
test
jl
xor
mov
ret
pop
mov
fimuls
pop
lds
xchg
es
seto
rcr
jnp
dec
mov
mov
das
sarl
inc
mov
ficomps
out
adcb
loopne
stos
pop
test
pop
pop
test
pop
repnz
xor
enter
aaa
aas
and
jmp
adc
lods
ret
push
out
jecxz
in
movsb
fmul
sbb
mov
ficoml
push
mov
cmpsb
clc
fistps
xor
pop
pop
inc
push
xchg
cmpl
test
mov
jns
sarb
in
cli
cmp
mov
inc
stos
push
pop
dec
mov
not
add
rcr
insl
pop
inc
fnsave
scas
and
xchg
cmp
cmpsl
dec
adc
lods
popa
and
adc
out
aaa
cmc
movsl
rcrb
outsl
leave
fwait
lds
insb
ds
jno
insl
jmp
insl
cmp
sbb
mov
roll
add
xor
dec
push
and
xchg
adcb
cmpl
dec
jae
icebp
sub
and
cmpsl
lcall
sarb
rcrl
add
mov
rcrb
arpl
out
shlb
into
fimull
fmull
jne
adc
popf
sbb
mov
add
sub
loopne
xor
cs
lock
ret
int
mov
cli
dec
or
lds
and
pop
xchg
xchg
dec
insb
arpl
aaa
jp
sbb
push
je
add
cld
in
packssdw
dec
bound
lcall
pop
sarb
mov
xchg
clc
ret
ret
lods
pop
in
fwait
mov
lods
mov
mov
xchg
jmp
mov
sbb
lods
mov
or
das
cld
ss
ret
fsubs
and
insl
inc
inc
jne
adc
or
mov
aaa
sub
fnsave
xchg
sbb
push
push
popa
dec
sub
lcall
mov
rcll
jae
jp
sbb
enter
ds
lock
adc
in
arpl
xor
mov
mov
inc
add
mov
jb
add
or
sub
mov
std
cmpsl
push
popa
fildll
sarb
pop
shrl
stc
test
mov
or
ss
out
jae
inc
lahf
cmp
arpl
rcrl
mov
mov
mov
ja
outsl
push
and
jne
pop
mov
and
or
mov
fsubp
outsb
mov
fbld
shr
sbb
mov
add
bnd
mov
out
xlat
push
mov
push
push
push
push
xor
fisubs
mov
sub
int
mov
xchg
dec
out
sub
xchg
jmp
cmp
jo
lret
mov
data16
popa
fstpt
sbb
test
divl
and
dec
leave
aam
add
fcmovbe
rorb
and
cmp
divl
shr
inc
mov
jne
push
lods
xor
aam
mov
gs
scas
lock
sbb
pop
aam
in
mov
lds
mov
inc
push
adc
cmpsb
add
testb
jge
test
push
sub
out
fdivr
nop
daa
testl
daa
sub
push
les
lea
xchg
outsl
cmpxchg8b
lret
add
ror
gs
es
aas
sub
fs
jae
pop
mov
in
mov
mov
or
sub
dec
jbe
mov
mov
dec
inc
pusha
and
mov
fwait
jge
loope
cltd
adc
inc
mov
cli
adc
xchg
popa
scas
jg
lret
sbb
outsb
jmp
cmp
mov
rcrb
sahf
cmp
mov
iret
lar
jb
jnp
cmp
xchg
test
hlt
jo
in
test
jo
pop
sarb
scas
adc
inc
mov
xor
pop
clc
rcrb
lods
pop
stos
mov
cmpsl
and
lret
xor
inc
cmp
dec
out
repz
mov
push
xchg
lock
mov
cwtl
push
je
xchg
into
nop
xlat
cmp
notl
pop
inc
or
sub
idiv
cmp
or
nop
cmp
mov
mov
xchg
mov
mov
pushf
hlt
or
cmp
mov
lock
push
jae
lods
mov
xor
roll
ficoms
add
loope
cmp
pop
mov
shll
mov
or
lock
in
outsb
jl
nop
jbe
rclb
mov
xlat
jns
pop
or
mov
push
popa
pop
imul
pop
and
jge
mov
hlt
jo
or
mov
xlat
add
sub
fmuls
mov
pop
shlb
sbb
sbb
and
jmp
lock
inc
push
mov
push
push
push
cmpsb
aam
out
fbstp
dec
pop
stos
cmp
xor
lret
call
sub
or
mov
addl
add
dec
dec
mov
fmulp
cmp
scas
out
outsb
insb
inc
mov
push
inc
rorl
fdivrl
sbb
stc
dec
sahf
addr16
mov
lret
sub
insb
xchg
xchg
push
xchg
gs
fdiv
pop
lods
arpl
sbb
int
mov
mov
call
adc
loop
cmp
dec
inc
inc
in
cmc
popf
jge
cmpsl
int
xchg
xchg
out
pop
pop
out
cld
iret
and
je
xchg
fldl
sub
rclb
pop
sub
cmp
inc
testb
lret
inc
adc
stos
pop
out
cmp
sbb
into
dec
arpl
xchg
or
mov
pushf
or
lods
mov
jb
or
push
stos
data16
in
lcall
cli
or
mov
cmp
mov
cmp
add
dec
add
mov
gs
xor
xchg
cwtl
inc
popf
mov
and
in
push
loope
outsl
sbb
push
push
hlt
lods
cmp
in
aaa
loope
sbb
ret
stc
sbb
mov
pop
leave
cmp
in
call
sub
adc
mov
les
inc
nop
pushf
adc
or
nop
pop
inc
out
aam
ret
add
bound
es
imul
add
pop
fdivl
lahf
jl
mov
addr16
push
mov
inc
mov
dec
mov
mov
aad
out
sub
and
in
push
xlat
mov
movsl
sbb
aaa
mov
pop
jp,pt
dec
fwait
push
cld
gs
sbb
lret
and
lret
sti
sub
nop
mov
ficompl
insl
hlt
push
sti
stos
inc
adc
je
push
cwtl
sbb
mov
adc
cld
sub
add
es
xor
push
jo
cmp
ja
divb
pusha
pop
mov
push
pop
mov
addr16
popf
cmpsb
je
mov
mov
imul
or
cmp
dec
lods
adc
pop
or
adc
ret
jbe
fnstenv
out
sub
jg
and
repnz
and
cmpsl
pop
xchg
std
subl
mov
testb
jo
or
dec
lock
xor
adcb
inc
mov
inc
push
imul
in
lea
fwait
loop
push
mov
cwtl
enter
in
mov
push
mov
testb
xlat
inc
sti
inc
adc
std
rcr
and
jle
push
rolb
xchg
fisubl
cmp
in
lock
movsb
or
pop
dec
gs
add
add
push
mov
sub
aas
divb
subb
push
sbb
or
or
add
shlb
jae
and
sbb
mov
popf
fcoms
and
mov
add
cmp
sbb
lahf
testl
in
loopne
dec
lret
int3
outsb
pop
popa
or
nop
push
scas
xchg
push
insb
cld
dec
inc
push
mov
cmp
into
loope
or
sbb
or
xor
push
adc
sub
mov
jp
std
icebp
dec
sub
ss
call
insl
insl
xchg
mov
in
ja
xchg
lcall
and
popf
test
ss
and
stos
ret
jmp
pop
jbe
and
loop
imul
loop
mov
lods
or
inc
mov
je
mov
sbb
inc
jge
mov
pop
loopne
cwtl
shrb
cmpsl
test
test
xor
sti
or
outsb
out
xchg
cmpsl
dec
pop
or
pop
pushf
clc
xor
inc
loop
mov
into
insb
call
gs
adc
enter
cwtl
icebp
mov
inc
push
lods
sub
xor
lahf
xor
lods
cmp
add
jbe
fsubrl
icebp
sub
xchg
jne
pop
xor
xchg
loopne
aam
sbb
mov
sahf
sbb
cmp
mov
mov
call
addb
movsb
lret
sbb
pop
inc
ret
hlt
imul
fistps
xchg
inc
call
lahf
sahf
out
sbb
cmp
lret
imul
push
daa
ljmp
test
xor
mov
jae
cltd
orb
shlb
adc
test
jmp
add
xchg
insb
push
dec
lea
adc
dec
push
xor
add
dec
leave
mov
test
mov
cld
or
mov
mov
push
mov
lods
push
pop
mov
addl
enter
cmp
adc
pushf
jbe
cs
pop
fnsave
sub
fwait
add
inc
and
sub
and
repnz
adc
push
mov
adc
arpl
push
jno
adc
cmp
jns
jne
mov
cmp
jnp
icebp
mov
stos
mov
inc
call
imul
cltd
rorl
adc
sub
xor
pop
repz
sti
xor
pusha
in
lods
or
clc
inc
loop
mov
mov
xor
out
fwait
repz
add
add
adc
sub
in
popf
and
pop
sbbl
mov
inc
and
iret
iret
jmp
std
hlt
lods
push
adc
add
mov
mov
cmp
fs
test
mov
lret
push
cmpsb
and
iret
mov
scas
hlt
lea
dec
test
jp
mov
cmp
ss
adc
push
dec
imul
mov
dec
rorl
shll
xchg
pusha
mov
xor
inc
and
mov
pushf
sti
adc
sbb
bound
or
xchg
mov
push
xchg
pop
jge
hlt
pop
test
lret
inc
in
add
scas
pop
push
test
sbb
enter
add
lods
mov
out
mov
cmpsb
int
mov
push
fs
and
pop
dec
xor
or
lret
fldcw
xchg
pop
xchg
sbb
dec
pop
loopne
jne
or
push
cmp
mov
aad
movsb
aas
push
jge
jl
stc
inc
cmp
sarl
pushf
cwtl
in
cwtl
and
stc
movsb
mov
dec
and
arpl
xchg
jl
nop
sarb
mov
loope
outsl
and
loopne
fwait
push
lods
mov
cmp
jmp
arpl
cwtl
cmp
pop
sbb
lcall
lock
xchg
sbb
mov
fistpl
pop
jnp
mov
xchg
xlat
cld
ret
pop
jno
mov
lds
hlt
sub
sbb
inc
cwtl
mov
lods
shr
les
inc
mov
jb
mov
pop
dec
rcrl
popa
inc
stos
sub
add
sub
stos
pop
gs
xchg
push
adc
jmp
dec
idivb
sar
mov
mov
mov
jns
xor
xor
subb
iret
pop
mov
stos
in
mov
sbb
repz
sbb
push
pop
ss
aas
push
jne
aad
dec
pop
xchg
inc
push
hlt
xor
fstl
add
ret
ljmp
dec
mov
jge
int3
cmp
fnstenv
std
and
repz
popf
dec
test
sbb
pop
cmp
xor
fwait
shrl
lret
push
add
sbb
xchg
pop
fwait
test
cld
loop
pop
fcomp
cmpsl
repnz
sub
ss
sub
and
inc
lret
lcall
in
ret
in
call
jge
mov
add
mov
and
call
dec
popa
add
add
mov
mov
push
push
adc
lcall
mov
or
add
fsubs
repz
sub
sti
pop
push
dec
popa
dec
jno
nop
ljmp
dec
aaa
ljmp
xchg
leave
and
mov
es
jno
cmc
das
cmp
ljmp
scas
sub
jb,pt
rorb
in
push
leave
inc
addl
jne
cmp
adc
inc
stc
sbb
and
adc
pop
pop
sbb
cmc
roll
fnstsw
dec
xchg
bound
lock
fcoms
adc
cmc
stos
jle
cmp
stc
repnz
popf
sti
ja
iret
sbb
mov
mov
jg
adc
fldenv
and
mov
testl
ss
xchg
mov
aam
es
xlat
and
cmpsb
xchg
mov
inc
jae
inc
xchg
cs
push
lahf
xlat
add
push
aam
push
test
mov
fs
xor
in
pop
stos
out
test
test
or
mov
cs
aad
or
adc
and
bound
xchg
pop
out
jne
cmp
ss
je
sarb
xchg
testl
or
cmp
clc
pop
fidivrl
add
lret
push
sub
out
lahf
push
fcmovnb
fists
dec
mov
xor
or
jnp
stc
test
lock
in
addl
ret
push
xor
imul
mov
cld
mov
xchg
inc
scas
mov
popa
inc
xor
cmp
pop
dec
rolb
lock
xchg
jl
sbbb
in
popa
jb
mov
mov
out
in
mov
fsubs
mov
movsl
push
insb
cld
into
mov
or
fbld
adc
gs
mov
popa
dec
aas
iret
push
add
cmp
xor
sub
and
sti
or
into
mov
in
jne
pop
js
fidivl
hlt
mov
push
mov
mov
aad
popf
mov
cmc
insb
inc
pop
add
adc
mov
in
addr16
adc
ds
lret
sbb
or
xor
push
push
xor
inc
xchg
jg
es
imul
dec
scas
cmp
into
and
lea
cmp
sbb
mov
xchg
add
xchg
out
push
movsb
adc
xor
mov
fsubl
pop
in
and
pop
dec
testb
mov
dec
out
mov
fsub
mov
sub
jae
jb
dec
xor
shl
mov
lcall
test
or
cs
dec
adc
add
in
mov
push
sbbl
mov
fidivrs
mul
out
int3
jmp
mov
lock
pop
cli
aam
sbb
and
xor
out
int
mov
jne
add
cmp
jb
xor
repz
sub
jnp
test
xor
push
mov
mov
or
out
adc
cmp
repz
scas
fsubrs
icebp
int3
mov
jne
aam
enter
xchg
and
jecxz
cmp
pushw
data16
inc
test
dec
sub
and
xchg
repnz
in
jmp
fisubrs
xchg
adc
ljmp
mov
lret
xchg
sbbb
mov
adc
pop
mov
mov
jne
add
popa
jb
xchg
dec
jecxz
popa
push
fs
into
or
push
push
mov
std
mov
arpl
idivl
sbb
jg
add
insl
xorb
sub
je
cmc
mov
leave
repnz
rcll
xchg
shl
jge
jo
lds
sub
xor
xor
mov
int
scas
pusha
out
mov
loope
inc
dec
daa
in
js
inc
mov
cwtl
scas
es
pop
pop
xor
sti
mov
daa
mov
mov
sub
xorb
cmp
push
xchg
push
shlb
sub
divb
pushl
sbb
scas
push
push
fistpll
ret
int3
jecxz
ja
push
pop
iret
mov
rolb
xchg
add
mov
inc
pop
xchg
push
clc
mov
arpl
adc
sub
repnz
adc
repnz
sahf
pop
xor
aad
pusha
mov
jg
insb
xchg
clc
xchg
xchg
adc
gs
gs
mov
jg
stc
addb
daa
and
cmpsl
dec
push
ja
dec
jp
pop
mov
cmp
mov
xor
scas
in
jae
cld
jo
lahf
lret
mov
add
push
push
adc
inc
sub
aas
or
clc
add
add
test
ficompl
push
add
shl
mov
pop
cmpsl
dec
mov
les
jnp
sub
sbb
cmc
adc
sti
insl
loopne
cmp
lcall
inc
sub
dec
jge
ljmp
out
and
fisttps
cmp
jno
and
pop
sub
xor
cmp
cwtl
cmc
sub
jl
and
out
adc
sub
je
loop
or
leave
jmp
lea
rcll
xchg
aas
inc
and
push
lods
mov
jo
mov
pop
sbb
das
sti
jnp
cli
subl
jns
repz
jnp
dec
cmpsb
mov
shr
rcr
es
iret
shll
inc
and
jmp
and
pop
xchg
data16
lods
fsubrs
mov
xchg
mov
loopne
sub
test
pop
pusha
mov
test
jle
ja
xor
lods
rol
mov
jne
and
repnz
sbb
push
loope
dec
out
cmpsb
ss
cmp
mov
insb
jle
sbb
test
pop
leave
jnp
jb
mov
jg
ficoml
fdiv
adc
aas
add
add
xchg
cwtl
xchg
jmp
add
les
jae
sub
mov
dec
mov
push
xchg
insb
jb
pushf
adcl
roll
mov
adc
mov
outsl
test
and
aas
sub
sub
jo
pop
xor
jno
ljmp
sbb
rolb
stc
leave
dec
push
fcmovnb
sbb
jp
cmp
andb
xor
mov
int
dec
iret
insl
xor
cltd
into
mov
adc
repnz
push
into
xchg
adc
shrl
repnz
mov
or
fcomi
mov
pushf
add
aam
xchg
jle
mov
and
data16
repnz
rolb
lret
out
mov
out
jo
cmpsl
sbb
push
push
xor
mov
ja
xlat
xor
push
push
or
inc
subb
dec
mov
xchg
iret
into
cld
fiadds
xchg
repz
adc
jns
fisubl
pop
ljmp
pop
xchg
stos
inc
lds
data16
lahf
dec
popf
mov
push
adc
out
ljmp
jmp
cmpsb
mov
push
fcomip
lods
push
or
ljmp
and
add
dec
and
jecxz
jge
inc
mov
sub
cwtl
sbb
push
or
inc
mov
lahf
shll
stc
fs
push
in
std
push
mov
ja
mov
ret
jbe
stos
fucom
lods
leave
mov
pop
xchg
icebp
dec
or
in
stos
inc
aad
dec
test
push
test
mov
lret
xor
pop
daa
pusha
js
push
push
ret
fidivrl
pop
cmp
int3
xchg
out
add
xchg
push
lahf
xchg
mov
int
in
int3
cwtl
cmp
jae
xlat
into
lret
inc
out
fdivr
inc
icebp
push
cli
aam
mov
dec
cltd
adc
xlat
sub
out
andb
loopne
stos
add
jb
test
mov
jno
hlt
xchg
jo
in
data16
add
popf
cmc
pop
daa
dec
mov
pop
insl
or
int
jo
into
aaa
cld
fs
fcomps
mov
cmp
xor
ret
sti
jno
cltd
call
adc
cmp
fcomps
sub
jg
into
xlat
push
cli
out
cmp
out
insl
mov
andb
mov
test
add
stc
dec
inc
pop
cmp
jnp
movsl
and
ret
lock
push
cmp
stc
push
ss
xor
aam
fs
imul
test
pop
sub
addr16
mov
mov
loope
mov
jae
repnz
pop
addr16
mov
xor
push
ret
arpl
jnp
or
adc
add
rolb
loop
lds
fstps
hlt
adc
jae
inc
mov
xchg
push
movsl
xorl
mov
mov
jb
sub
les
or
scas
orl
clc
mov
push
xchg
scas
sub
and
or
mov
dec
cmp
mov
jle
aam
pop
mov
inc
cs
fldpi
and
cmp
push
cmp
mov
lods
jp
add
or
push
pop
mov
test
out
fisttpl
inc
addl
rcr
xchg
xchg
pop
sbb
xchg
ret
lods
push
mov
xchg
fldenv
lea
mov
mov
outsl
mov
es
mov
test
imul
scas
or
dec
orb
jae
adc
nopl
xchg
fstps
inc
arpl
das
mov
icebp
xchg
test
cli
adc
pushf
jmp
cmp
sarl
inc
dec
adc
inc
notb
push
shll
and
sbb
sbb
pop
xchg
push
xor
adc
pop
pusha
push
cmp
push
in
sbb
lea
test
fwait
lret
dec
adc
mov
sbb
and
imul
imull
jo
cmc
daa
imul
in
lcall
or
jmp
cmp
push
mov
aam
mov
out
adc
fimull
gs
aas
cmp
loop
mov
ret
push
jg
dec
adc
dec
dec
jnp
jle
mov
fdivrs
xchg
arpl
incl
rol
adc
aam
jge
pop
pop
pop
mov
mov
fisubl
fs
cmc
cmp
hlt
in
inc
loop
sahf
pop
test
and
add
mov
cltd
hlt
mov
outsl
mov
int
int
inc
lret
out
cmpsl
jmp
aas
out
inc
ret
sbb
inc
sti
jb
pop
jg
gs
jg
std
push
add
xor
cltd
sub
out
sub
push
or
and
push
aas
outsl
shrl
cmp
mov
sahf
testl
imul
jl
cld
fldl
stos
cmp
mov
loop
in
mov
fnsave
dec
movsl
push
inc
leave
movsl
cwtl
sahf
push
out
adc
inc
cmpb
xor
inc
mov
and
push
imul
add
cmp
jle
imul
mov
cmp
xchg
lock
mov
xchg
add
fbstp
out
mov
movsl
mov
aad
xchg
jno
fimull
sub
inc
mov
stc
aad
cmpb
xchg
les
stos
mov
ror
xchg
mov
xchg
mov
or
sbb
jbe
jg
pop
sbb
orl
fsts
and
dec
lahf
hlt
inc
cmp
pushf
mov
push
jge
icebp
mov
cmp
fimull
cmp
fcomip
mov
lds
psllq
cmp
out
mov
andl
repnz
cmp
ficoml
mov
sub
inc
or
adc
fwait
jb
fsubrp
inc
gs
jge
ja
add
in
aad
cmp
lea
jg
sub
int3
data16
fcmovbe
lods
mov
shr
xchg
mov
xchg
jl
inc
hlt
or
push
icebp
jno
fmul
pop
sub
inc
mov
pop
xchg
stos
xor
mov
push
mov
lea
adc
cltd
lods
dec
sbb
pop
mov
jno
enter
leave
inc
dec
test
ret
scas
mov
sbb
pop
xlat
xchg
pop
lock
mov
mov
mov
push
push
sarl
mov
in
xor
ds
lret
lahf
add
inc
jns
xchg
push
jae
adc
lret
aam
inc
jne
mov
pop
movsl
sub
in
inc
imul
push
pop
xchg
xor
jmp
cmp
adc
mov
mov
sub
mov
push
xchg
inc
movsl
lret
popl
mov
rol
or
fstpt
lock
ret
mov
subb
enter
jb
lea
cmp
jno
xchg
sub
mov
fstps
jg
push
mov
jae
pop
rcrl
push
push
les
loop
std
xor
push
test
lea
inc
adc
jp
jp
fcomps
cmc
mov
xor
daa
xor
aam
add
sub
dec
push
cs
sbb
sub
push
push
xor
std
dec
jne
dec
adc
hlt
pushf
xchg
pop
and
js
pop
ret
pop
jp
sbb
data16
push
rcrb
lcall
add
stc
push
repnz
pop
dec
xchg
mov
xor
sbb
adc
pushf
add
cmp
xor
mov
cmc
mov
mov
xchg
les
cmc
and
bound
cmp
leave
loope
arpl
xchg
dec
pop
xor
push
pusha
mov
jle
loop
cld
adc
ret
enter
fcmovbe
mov
stos
jmp
in
adc
add
push
mov
imul
movb
adc
or
cmpb
iret
push
cmpsb
and
xor
dec
sub
ds
cmp
pop
sub
sahf
inc
mov
dec
xchg
outsl
dec
push
and
aad
and
dec
pushl
ljmp
ss
das
xchg
std
jmp
mov
cmp
enter
ljmp
and
pop
jns
xor
push
fistpl
sub
scas
pop
jge
fxch
push
cwtl
push
in
or
cmpsb
addl
lcall
scas
jp
jnp
stc
mov
in
add
inc
imul
sbb
lods
lods
test
sbb
pushl
cmp
leave
mov
push
cltd
std
idivb
fildll
mov
imul
mov
gs
subb
xchg
inc
out
sti
test
scas
enter
mov
scas
mov
inc
out
test
mul
out
sub
or
push
jnp
int
xor
loopne
stos
insl
add
xchg
adc
push
scas
repz
test
xor
adc
mov
in
rcrl
mov
gs
mov
adc
xchg
adc
jge
das
adc
dec
mov
xchg
mov
popa
jns
and
adc
mov
xchg
adc
jmp
sbb
push
and
jno
adc
lds
mov
cwtl
test
mov
add
pop
dec
and
cs
fwait
push
aaa
out
jne
ficomps
pusha
xchg
mov
adc
test
pop
out
repz
pop
leave
pushl
sub
pop
or
sbb
cmp
or
out
sahf
mov
pop
scas
cli
and
stos
ds
jne
xlat
push
add
mov
cli
inc
dec
fs
es
sbb
sbbl
add
xchg
mov
pusha
sub
push
jnp
cmp
cmp
xor
jbe
ja
test
mov
out
pop
in
mov
jb
popa
xor
push
outsl
push
pop
and
mov
xor
adc
rdpmc
lods
inc
sub
jb
sbb
cwtl
dec
xchg
mov
out
push
imul
push
jno
rcrb
enter
add
sbb
test
rcrl
dec
sbb
cmp
rorl
fsts
inc
or
flds
imul
push
push
out
bound
aad
arpl
add
inc
sub
gs
lret
dec
add
xor
inc
movsb
push
sbb
rcl
jge
scas
xchg
mov
mov
fs
je
insb
cmc
cmc
shrl
xchg
rcl
mov
and
xchg
mov
lcall
push
adc
leave
movups
fwait
push
mov
push
pop
push
sbbb
jl
push
pop
cmp
mov
xchg
pop
mov
or
lcall
cmp
hlt
fimuls
mov
les
into
xchg
sbb
xchg
in
jge
xchg
shl
cmp
add
test
test
int
xchg
add
into
or
add
shll
outsl
adc
lock
bound
or
adc
sub
test
hlt
mov
into
rcrl
xchg
pop
push
jle
mov
push
and
sahf
and
cmpsl
inc
or
lcall
dec
fistpl
xlat
rcr
repnz
jp
adc
aam
sbb
movsl
in
pop
push
jmp
cmp
es
iret
dec
repnz
jbe
rcrl
mov
xor
adc
cmpb
in
adc
xchg
rorb
jl
jne
adc
xor
fucom
mov
pop
fistl
inc
test
cmpsb
mov
les
mov
inc
mov
cs
xchg
mov
andl
jnp
bound
mov
mov
loope
xchg
bound
dec
pop
dec
sub
aaa
jle
shrl
das
sub
fsubr
gs
mov
inc
test
int
push
adc
push
cwtl
or
fiadds
mov
lahf
and
and
jge
fmull
cmpsl
adc
sahf
cmp
sub
cld
pusha
push
fnstcw
xchg
pop
das
aad
insl
rcrl
lcall
push
xchg
cltd
mov
cmp
fidivs
loopne
add
lods
xchg
icebp
mov
adc
xchg
push
pop
insl
cmp
mov
dec
lods
or
popf
out
dec
insl
imul
xchg
test
js
and
mov
xchg
inc
adc
push
into
movsl
fcomps
fsubl
call
scas
gs
lock
xchg
jae
nop
lods
mov
insl
cmc
loop
hlt
sbb
or
mov
inc
add
in
test
dec
stos
jmp
xor
das
cmc
ss
xor
jl
lock
add
jno
pop
sbb
hlt
sub
push
int
sbb
jl
cmp
test
mov
lcall
pop
and
flds
dec
xchg
xchg
add
sub
das
jg
jnp
jne
jle
test
jo
pusha
pop
xor
pushf
cmpsl
ret
cwtl
add
aaa
mov
pop
loopne
fistpl
dec
xor
mov
ds
out
inc
pop
push
daa
xchg
sarb
stc
or
scas
sub
or
mov
shl
iret
mov
mov
test
xchg
pop
pop
and
jmp
or
xor
adc
push
in
sub
test
sub
push
push
fisttpll
clc
push
and
jb
jmp
into
cmp
dec
lcall
mov
sarb
scas
bound
cmp
lahf
mov
outsl
push
jnp
outsl
cld
std
fdivrl
orb
outsb
mov
pushf
fildll
out
dec
lcall
imul
xlat
and
xor
xchg
push
or
hlt
mov
mov
movsl
push
dec
iret
cltd
in
push
ret
push
cmp
or
push
or
mov
jns
jne
or
lcall
and
jns
data16
fs
mov
fisubrs
mov
mov
mov
jbe
andb
mov
mov
test
pop
out
aas
cmp
ret
leave
or
xor
mov
xchg
ds
mov
sub
les
testl
das
movsb
pusha
rcll
mov
add
pop
insl
test
pop
xor
popf
fsubrs
mov
add
push
xchg
inc
push
lods
mov
js
sbb
movsb
das
xchg
dec
scas
jne
repnz
pop
dec
out
cmp
cld
cmc
push
inc
and
dec
cmp
xor
jle
jmp
mov
aas
xchg
aaa
dec
lret
mov
daa
shll
xchg
aaa
mov
sbb
notb
addr16
push
out
adc
jp
xor
dec
or
into
ret
popl
imul
stc
or
sub
mov
dec
in
xchg
cld
mov
dec
js
cmpsl
sbb
jle
hlt
cmp
pop
inc
push
cld
lds
push
fisubs
push
arpl
add
pop
cmc
mov
mov
jecxz
or
lcall
xchg
idivl
jb
jno
icebp
mov
dec
xchg
and
je
inc
add
add
adc
sub
inc
xor
pop
addr16
or
sub
aad
push
jmp
pop
inc
jo
or
pop
insl
add
ss
push
dec
btr
fwait
pop
rolb
cmp
mov
and
dec
clc
out
shr
je
insl
jb
push
xchg
pop
mov
dec
test
std
scas
jbe
mov
mov
imulb
out
and
pushf
int3
xlat
hlt
add
mov
sahf
mov
rclb
das
js
popf
pushf
mov
and
push
sbb
outsb
and
push
push
pop
jg
fdivs
cmp
and
fimull
sbb
mov
dec
cmpsl
inc
loope
inc
nop
cmp
mov
inc
insl
scas
pop
xchg
adc
in
mov
outsl
loopne
and
fcmovnb
or
sub
jbe
jg
adc
ss
jl
cmp
aaa
popa
ss
cmp
or
int3
sti
mov
and
movsl
dec
mov
fcmovnbe
shrb
mov
add
xor
push
jg,pt
or
mov
iret
sbb
or
mov
addr16
divl
xchg
mov
popa
divb
in
jb
add
pushf
lds
nop
imul
push
dec
sub
call
add
cmp
push
aad
popf
mov
int3
pop
or
icebp
xchg
and
jecxz
test
int3
aam
xor
nop
mov
mov
fadd
or
sub
mov
cli
in
repz
testb
stc
xchg
push
insb
lahf
push
push
test
jg
push
and
and
push
mov
mov
loopne
ficomps
out
xorb
fdiv
out
call
sbb
cmp
out
popf
jnp
xchg
pop
jmp
pop
adc
jns
pop
or
xchg
and
ret
adc
mov
or
stos
push
js
push
and
pop
dec
or
int3
popa
sar
pop
dec
sbb
sahf
out
aad
outsl
cld
xchg
jnp
push
dec
cmp
repz
xor
mov
jo
pop
out
inc
aas
insb
mov
sbb
mov
dec
call
mov
adc
aad
outsl
arpl
arpl
sbb
aas
out
leave
cmp
dec
mov
or
cli
nop
js
dec
dec
sub
pop
ffree
mull
inc
test
and
cmp
sbb
out
test
in
imul
leave
jo
or
sub
cwtl
mov
test
es
bound
mov
jg
int3
rorb
mov
and
repnz
mov
push
or
add
jne
add
std
jns
test
adc
lds
mov
dec
notl
fldl
int3
mov
mov
inc
daa
sub
cld
mov
push
cmpsl
cmpsl
call
mov
sbb
movsl
sub
xor
cmp
fsubl
mov
or
and
iret
and
movsl
xchg
add
add
fadds
lea
xor
orb
push
ret
or
mov
dec
mov
xchg
aam
ja
add
sub
adc
pop
xchg
add
scas
test
imul
mov
subl
jns
pop
aam
clc
aas
push
cmp
iret
lds
inc
fldcw
std
sbb
sbbl
ret
testb
jg
mov
sbb
or
xlat
test
pop
mov
cmc
xor
inc
pop
int
sub
rorb
out
imull
ds
mov
aas
sbb
rolb
mov
sbb
pop
inc
es
sbb
call
lods
mov
cld
xchg
loop
idiv
loop
push
push
xchg
cmpsl
lock
mov
push
pop
lahf
pop
sahf
lock
sbb
stc
cltd
cmp
xchg
push
mov
add
js
push
loope
push
jb
xchg
jmp
dec
dec
hlt
mov
sarl
xchg
pop
mov
jmp
cmp
mov
xor
leave
or
or
in
and
sbb
inc
pop
sbbb
imul
dec
push
adc
pop
xchg
icebp
dec
fbld
mov
jnp
jle
and
jo
xchg
das
iret
sbb
cmpsb
ret
inc
aaa
cmp
cmpsl
js
adc
xchg
lret
arpl
cmpsl
jle
dec
mov
cmp
pop
or
jle
dec
mov
mov
pop
push
ss
in
scas
test
cmpsb
dec
sub
aaa
pop
bound
ja
js
mov
fcom
into
scas
fstps
inc
out
xor
xchg
out
enter
cmp
ljmp
rcll
and
pop
cmpsb
add
fs
hlt
test
xchg
ljmp
cmp
jl
xor
test
lods
push
mov
sti
lea
dec
pop
fdivrp
jp
pop
incb
cmp
sbb
arpl
mov
pop
fnstenv
dec
test
stc
push
jne
jge
out
mov
imul
out
in
or
hlt
ljmp
jp
rorl
pop
pop
push
jo
emms
aas
pop
mov
jp
cmp
movsl
xchg
stos
xchg
clc
ds
inc
call
cmp
fcomps
push
cmp
xchg
je
fwait
jecxz
jb
aad
mov
mov
dec
jae
imul
sub
in
lret
xchg
inc
test
arpl
inc
mov
sub
jbe
cmp
xorb
dec
sub
cmp
addr16
xchg
cltd
and
mov
mov
xor
aaa
cmp
mov
mov
repnz
lods
adc
xchg
inc
ss
xchg
sbb
mov
enter
inc
add
pop
lcall
sbb
and
lds
sbb
enter
into
adc
fidivs
pop
popa
lds
cmovl
jae
mov
pop
and
or
das
repnz
inc
les
cmp
int
into
xor
push
dec
sti
cmp
negl
fsubrl
loope
and
pop
cwtl
cmpsb
mov
xchg
mov
fnstenv
cwtl
sar
push
push
into
in
lret
sub
popa
pop
adc
ja
push
push
outsb
mov
adc
or
iret
rclb
cmp
xor
mov
mov
sub
fiadds
mov
jl
mov
inc
inc
push
mov
leave
pushw
sbb
out
popf
test
imul
add
push
jle
push
jne
mov
jo
mov
sbb
xor
into
push
ret
jl
shll
int
cmp
jbe
arpl
jno
dec
sbb
jmp
jmp
jecxz
clc
sub
test
push
stos
adc
pop
sbb
sbb
out
inc
mov
iret
movsb
gs
add
adc
cli
shll
notb
cwtl
fldenv
cli
push
arpl
fiadds
fs
mov
outsb
inc
or
aaa
inc
pop
jbe
pop
out
jnp
xlat
mov
je
popf
notl
push
rcrl
cltd
out
sahf
lds
inc
xchg
adc
xchg
mov
sub
jp
icebp
mov
dec
fadds
shrb
jmp
aas
push
inc
std
xor
xchg
push
add
sub
cmpb
inc
popa
cli
test
pushf
sbb
xor
fucomip
mov
mov
imul
pop
js
movsl
addb
ficompl
cltd
adc
adc
inc
or
pop
xchg
insl
out
mov
fimuls
jno
cmp
inc
dec
pop
mov
or
cmpsl
repz
popf
lret
adc
or
mov
add
mov
inc
cmp
daa
dec
cmc
xchg
stos
jmp
stc
sbb
jg
mov
cs
fst
lcall
idivb
dec
ljmp
cmp
push
dec
and
mov
aas
mov
mov
stc
push
mov
cmc
pop
jns
mov
fdiv
dec
pop
adc
xor
lods
inc
popw
xchg
mov
mov
fnstsw
in
dec
jmp
xchg
lcall
push
daa
mov
call
mov
mov
xorl
jnp
aaa
inc
xor
pop
sub
sub
xchg
aam
xchg
ja
adc
and
pop
cmp
xor
stos
sahf
xor
jecxz
stos
mov
xor
inc
in
fwait
sbb
hlt
pop
fmull
or
sub
int3
push
inc
stc
sahf
jl
mov
cmpsl
dec
stos
adc
push
arpl
inc
js
xchg
popf
shl
pop
xor
insl
int
add
in
push
mov
cmpsl
out
test
loop
pop
mov
sbb
cwtl
mov
in
add
mov
sub
sub
mov
push
scas
sahf
fdivl
fldcw
cmc
into
imul
scas
xor
or
je
inc
mov
in
sub
loop
xor
cwtl
sahf
xchg
mov
clc
cmp
dec
scas
mov
cwtl
into
lods
and
jnp
pusha
xor
adc
adc
jae
mov
cltd
cmp
dec
mov
rcr
mov
cld
clc
xchg
icebp
mov
mov
add
fldt
push
adc
mov
xchg
mov
sbb
mov
mov
mov
inc
mov
push
xor
and
test
mov
inc
mov
clc
jbe
fdivl
loope
jmp
movsb
cs
stos
ljmp
inc
mov
jbe
pop
xor
adc
or
lahf
mov
pop
jmp
shlb
inc
xchg
inc
push
in
dec
lock
fsubs
mov
mov
mov
out
jecxz
mov
in
cltd
sub
xor
imul
add
adc
js
jl
inc
push
pop
mov
sbb
jo
sahf
push
pop
fs
jecxz
mov
push
lods
dec
pop
push
fildll
push
cmp
jle
mov
adc
in
cmp
add
pop
mov
dec
repnz
cmc
and
adc
scas
leave
lcall
ljmp
movsl
push
jl
cmp
lea
and
xchg
push
mov
leave
clc
jg
sub
sbb
out
pop
ret
stos
into
dec
clc
sahf
inc
cmp
add
incb
dec
call
inc
pushf
cwtl
xchg
pop
inc
mov
in
xlat
mov
mov
fisubrl
inc
sbb
mov
lds
mov
adcl
mov
mov
ljmp
ljmp
dec
shlb
rcll
and
cld
divb
cmc
mov
subb
jmp
pop
push
mov
push
mov
dec
jo
mov
xchg
xchg
out
cmp
mov
mov
jb
ja
scas
lock
xlat
dec
gs
xor
inc
movsb
xor
mull
fimull
test
test
pop
stc
inc
sbb
pop
adcb
add
inc
sti
movb
cs
pop
sbb
cmpsb
cmpsb
sbb
std
lret
cltd
pop
mov
test
daa
mov
out
or
jmp
push
out
inc
push
stc
pop
ret
fucomip
xor
fisttpl
ds
xchg
jb
cmc
addl
inc
mulb
or
sub
pop
pushl
int3
cmpsl
mov
sbb
rcll
mov
hlt
mov
shlb
adc
testb
in
out
xchg
inc
add
mov
cmp
aaa
and
bound
fs
addr16
mov
testb
mov
and
imul
cmpsb
jns
test
xchg
mov
jbe
xor
aas
enter
cmp
lea
call
stos
cmp
push
mov
cli
ds
jle
iret
jge
sbb
rolb
addl
rorb
in
add
fucomp
inc
fbstp
push
pop
adc
sub
push
dec
pop
lock
lea
jno
and
out
sub
mov
shrl
dec
jbe
sti
rcrl
ljmp
daa
outsb
ficoml
shll
xchg
or
dec
mov
jns
aam
mov
push
mov
shlb
loopne
fnstsw
aaa
lds
cld
or
jge
jmp
scas
push
fistl
cmp
xor
popf
cmc
daa
sbbl
jnp
mov
iret
sahf
cmp
scas
or
aaa
adc
loopne
mov
inc
int3
add
adc
dec
add
scas
je
bnd
or
rolb
psubusw
xchg
daa
inc
shll
pusha
int
pop
lds
mov
xchg
clc
lret
dec
outsb
lods
popf
shl
test
sub
or
adc
call
cmpsb
and
mov
shlb
pop
and
sub
jmp
mov
cmp
adc
addl
mov
lea
xor
shll
ficoml
pop
jbe
add
mov
mov
add
add
cmp
mov
sub
dec
jns
inc
lahf
push
sbb
push
int3
jecxz
push
loopne
ficompl
roll
sbb
xorl
out
mov
ret
pop
int3
or
lock
xor
leave
sti
add
mov
jno
jge
sti
inc
push
setns
aaa
cltd
add
ficomps
push
lret
dec
les
ljmp
call
fwait
or
cmp
or
mov
mov
mov
or
xor
arpl
and
mov
cmp
fbld
test
shl
in
mov
ret
mov
and
nop
pop
adc
in
enter
or
mov
push
cmp
lret
jb
out
add
xor
push
push
pop
jmp
dec
push
mov
xchg
test
inc
outsb
lds
fldl2t
push
iret
fidivrl
test
or
les
and
rorb
jp
pop
gs
sbb
in
cltd
adc
dec
xchg
lock
push
mov
jg
cmp
call
das
pop
imul
ja
mov
sbb
fisttpl
push
jo
call
fwait
jnp
jae
add
pop
or
xor
pop
lcall
add
out
and
pop
cld
mov
lock
rorb
mov
cmpsl
dec
shrb
out
mov
xor
or
mov
push
sub
or
cmp
fwait
push
call
inc
insl
in
repz
ja
xchg
xchg
xchg
or
pop
lea
adc
dec
into
sbb
pop
jg
pusha
jmp
es
lods
xchg
ss
mov
out
mov
jno
ret
sbb
dec
loopne
xor
addb
cmp
sub
iret
mov
mov
sti
jmp
in
leave
add
xchg
push
stos
arpl
push
jae
subl
ljmp
movsl
daa
pop
paddusb
cmpl
rorl
push
and
mov
mov
rorb
scas
dec
out
mov
fisubl
mov
inc
inc
js
imul
mov
push
mov
sub
sbb
shr
or
jo
xchg
pop
or
ret
add
mov
mov
stos
stc
push
xor
daa
xchg
jo
and
mov
loop
mov
mov
xchg
mov
dec
mov
popf
cmpsb
push
dec
pop
aam
ss
mov
xchg
movsl
push
mov
ljmp
jo
ficomps
lods
mov
mov
jbe
xchg
mov
xlat
retw
xlat
add
push
jb
scas
nop
jne
aas
and
filds
cmp
scas
adc
adc
sbb
push
or
cmpsl
mov
jge
test
decl
push
mov
jns
dec
lods
xor
lea
out
pop
fsub
loopne
scas
jmp
sbb
inc
sahf
cli
pop
fisttpll
lods
imul
jb
scas
loop
mov
push
adc
insl
adc
sub
fsubrl
jl
inc
jmp
pop
jg
dec
sbb
inc
jge
test
sbb
mov
ffreep
mov
inc
ret
adc
aad
jecxz
mov
xlat
scas
jnp
incl
cmp
stos
jp
xor
das
cltd
fucomip
mov
cwtl
mov
xchg
mov
cmpsl
ds
pop
push
fcompl
adc
push
pusha
mov
incb
scas
push
repz
test
add
mov
roll
xor
andl
pusha
scas
imul
sub
outsb
xor
icebp
or
inc
gs
push
or
sub
sub
sbb
jecxz
jno
inc
out
out
mov
xlat
push
cld
dec
jmp
adc
jne
js
out
rorl
push
mov
imul
cmc
push
jnp
clc
dec
lahf
repnz
cs
and
sbb
fcoml
push
aam
sub
popf
gs
pusha
or
xor
aas
das
dec
mov
div
adc
mov
divb
add
std
subb
and
jns
xlat
dec
sbbb
aaa
jle
mov
xor
inc
jne
nop
cmc
ficoms
pushf
lcall
je
push
fwait
iret
jns
or
lods
add
jecxz
mov
js
pop
add
xlat
cmc
mov
mov
mov
add
mov
dec
fisttpll
sub
in
test
pushl
das
mov
cmpb
and
out
mov
mov
and
xchg
jp
psrlq
sub
add
in
into
outsl
cmpsl
cmp
les
ret
add
test
sahf
inc
push
jmp
and
test
and
cli
andb
pminsw
mov
pop
popa
loope
cmp
adc
lret
daa
lods
insl
xor
or
sub
in
cli
outsb
add
push
cmp
loop
adcb
movsb
call
fwait
inc
dec
push
jno
loopne
sarl
cli
sub
nop
push
adc
xchg
mov
bound
xchg
push
adc
sub
cmp
mov
xor
gs
repz
fadds
loope
push
mov
inc
fdivl
xchg
pop
arpl
mov
xchg
movsl
cmc
push
lods
add
cmc
std
cld
xor
pop
popa
sub
outsb
and
xchg
stc
sbb
fdivs
cmpxchg
mov
jecxz
pusha
ds
aaa
dec
leave
and
fcmovnu
mov
roll
inc
push
fstps
movsb
lods
in
xchg
xchg
inc
push
mov
and
shll
lock
xchg
or
dec
jo
or
bound
imul
in
stos
fldt
lds
inc
shll
mov
cltd
pushf
aam
cwtl
dec
add
test
fsubs
rcll
xchg
push
inc
aad
jno
int
cmp
mov
xor
lea
rorl
xchg
fdivrl
imul
ss
leave
test
sub
push
inc
sbb
decl
in
pop
bound
test
insb
nop
jl
xor
lods
fpatan
aam
lods
iret
adc
int
repnz
in
aaa
push
xchg
xor
outsb
inc
ret
shrb
dec
cltd
mov
mov
pop
xor
xor
int
aam
lods
clc
dec
lock
movsl
adc
mov
sub
stc
enter
lret
les
mov
or
mov
mov
fmul
shlb
dec
scas
out
push
cmp
add
jns
mov
add
or
movsl
jmp
dec
icebp
xor
push
jbe
negl
sbb
mov
xor
loopne
cltd
mov
int
mov
std
in
outsl
xchg
aad
sub
inc
fxch
sub
incl
inc
int
arpl
imul
ss
pop
cli
jge
rorb
popf
les
mov
outsl
sbb
adc
jmp
pop
cmc
shl
or
pop
pop
xchg
xchg
pop
adc
xchg
nop
aaa
cmp
xor
in
insb
jle
in
jnp
arpl
std
xchg
daa
int
rcrb
repz
mulb
ja
rclb
ljmp
aad
addb
xlat
and
mov
add
daa
adc
inc
push
push
fidivrs
stc
adc
std
xchg
rcll
enter
js
pop
outsl
and
cmpsl
sbbb
dec
ja
sub
or
nop
rorb
mov
ret
out
cmp
leave
aam
in
stc
cmpsb
insl
pop
inc
push
hlt
and
cmpsl
dec
pop
push
xor
pop
and
and
push
mov
je
mov
ja
push
pop
jge
lahf
jo
inc
sti
add
xor
mov
pop
xsha256
cmpsb
xchg
sti
iret
cld
pop
inc
add
ds
adc
mov
or
xchg
cmp
sub
or
ss
in
xor
clc
mov
add
xor
dec
shl
mov
mov
cmp
push
cmc
fs
ljmp
repnz
and
std
xorl
lret
jmp
scas
lods
add
popf
adc
push
daa
push
dec
ja
xor
ds
daa
adc
scas
mov
and
pushf
fwait
ss
jno
imul
sbb
aad
sub
in
mov
bnd
push
inc
cmp
jl
push
aas
int
pop
adc
xor
sahf
or
pop
iret
xor
mov
cmp
sar
mov
lods
pop
xchg
push
push
cwtl
bsr
mov
lods
pop
outsl
testl
out
or
sbbl
int
push
cltd
pop
test
add
ds
mov
jns
hlt
hlt
dec
mov
shl
ja
leave
cmc
mov
add
jne
scas
rolb
orb
xchg
xchg
insb
hlt
mov
sub
icebp
inc
jo
inc
jle
push
insl
in
push
stos
fcom
or
ret
xor
arpl
arpl
subb
js
ret
cmp
xchg
pop
jb
jo
add
mov
pop
dec
push
and
add
clc
das
mov
dec
xchg
mov
pop
daa
dec
lods
ljmp
stc
xchg
iret
pop
cmp
add
jnp
test
sarb
cmpsl
loopne
or
int
lods
scas
adc
inc
lcall
mov
loopne
xor
testb
scas
dec
mov
lods
dec
dec
imulb
adc
rcr
data16
iret
fcmovnbe
bt
outsb
inc
inc
mov
or
xor
stos
mov
xorl
adc
lods
sbb
popf
rep
popf
cmp
pop
stos
divl
push
out
push
sbb
xchg
js
or
sub
push
adc
notl
popw
dec
cmp
or
cld
xchg
rcrb
hlt
sub
add
mov
mov
mov
fadds
adc
pop
clc
mov
inc
or
fisubrl
sahf
loopne
xor
mov
mov
mov
inc
faddl
or
out
sub
sub
outsl
and
xor
fldl
xor
jp
or
test
sbb
test
or
xchg
dec
mov
mov
fmull
popf
sub
mov
jg
sahf
mov
cmc
loopne
leave
xorb
pop
rcll
jle
or
arpl
adc
mov
outsb
xor
push
lods
add
sbbb
inc
call
inc
mov
sbb
adc
popf
or
fwait
stos
popf
adc
push
adc
sub
xchg
mov
inc
pop
je
inc
sbb
into
mov
mov
inc
pop
add
push
das
lcall
pop
jns
push
ret
rolb
iret
fcoms
loopne
rcrb
mov
flds
fstpl
call
fisttpll
ret
popa
stos
dec
jge
jne
xor
jmp
addr16
fdivrs
adc
bound
cltd
sbb
push
pop
repnz
scas
add
leave
fisttps
cmp
xchg
and
std
in
stos
jb
push
inc
arpl
dec
popf
and
push
xor
mov
push
call
pop
push
xchg
loop
cmp
push
or
xor
ret
cmp
daa
sbb
mov
cmp
cmp
enter
jmp
mov
pop
shlb
pop
sub
les
mov
push
pop
and
js
loope
mov
je
and
jecxz
sbb
std
insb
int3
clc
fldl
push
add
push
push
outsl
enter
inc
call
mov
jo
xor
jbe
in
lret
jmp
inc
and
js
cmp
adc
dec
rcrl
xchg
test
mov
mov
lods
xor
xchg
xor
inc
pop
xchg
mov
pop
out
xchg
cli
les
mov
shll
mov
jae
jl
ret
or
ds
std
repz
ficoms
xor
push
or
mov
in
cwtl
bound
inc
mov
or
out
int3
ret
mov
nop
xchg
inc
addr16
dec
ficoml
mov
and
rcl
lret
stos
ficoml
jl
das
rep
mov
repnz
push
xor
lock
out
sub
push
cwtl
push
and
adc
rclb
iret
flds
adc
in
inc
les
mov
sbb
jl
std
mov
mov
xor
xchg
sbb
aam
adc
movsl
test
mov
adc
stc
in
sub
int
mov
cli
mov
arpl
repnz
out
mov
push
aaa
aad
scas
pop
xlat
add
mov
push
xor
mov
or
push
lret
jp
jae
mov
jns
loope
addr16
sahf
int
jp
mov
outsl
cli
fstpl
int3
jg
inc
dec
out
loop
jl,pn
and
popf
xchg
mov
in
les
pop
stos
fsubp
out
repnz
or
add
imull
pushf
sbb
cwtl
sub
scas
pop
cs
jb
testl
test
cmpsl
push
ja
mov
lret
outsb
mov
jno
in
arpl
jns
dec
pushf
nop
iret
sahf
pushw
xchg
cmp
add
out
cmc
adc
fldenv
inc
shll
loope
push
mov
mov
or
in
sub
sub
movsb
repz
push
sbb
rclb
or
sbb
das
sbbb
mov
sar
enter
cmp
push
mov
loope
sub
outsl
and
jecxz
pop
xor
pop
mov
in
pop
ret
int3
icebp
pop
gs
lock
lods
mov
adc
iret
arpl
inc
jae
fstpt
movsb
inc
mov
jle
es
ss
rclb
ja
mov
out
cltd
push
mov
adc
mov
jecxz
cld
mov
pusha
dec
sub
jb
mov
cltd
test
arpl
xor
push
sub
stos
xchg
sub
sub
cld
add
jne
mov
rcrb
pop
and
xchg
shlb
in
les
pop
iret
dec
xlat
fldl
repz
mov
xchg
shl
out
popf
cmp
xorl
mov
xor
mov
loop
loop
push
leave
pushf
fimuls
xchg
gs
daa
mov
pop
add
fcompl
cmp
adc
xor
sbb
leave
std
rorl
sbb
xor
jl
add
push
and
adc
jp
orb
cmp
cmp
mov
jg
loopne
dec
pop
addr16
sete
mov
pop
and
dec
xchg
cmpl
sarb
leave
shl
xor
mov
mov
int3
sbb
outsb
inc
inc
mov
jg
inc
shll
imul
or
subl
cmc
cmpsl
and
stos
push
xor
lods
pop
xor
inc
mov
sbb
aas
sub
pushf
push
and
popf
mov
push
sahf
push
cmp
mov
add
out
test
mov
and
dec
pop
in
test
loopne
movsl
rcll
sti
or
adc
sbb
add
push
push
pop
movsl
sub
std
mov
xchg
cmc
add
repnz
in
cmc
adc
xchg
mov
fcmovne
xchg
enter
rolb
cmp
adc
add
add
or
out
jle
in
out
xchg
data16
or
lret
sti
ljmp
loope
imul
call
jg
test
cmc
jecxz
subl
sub
daa
cli
adcb
push
inc
enter
xchg
and
mov
punpcklwd
inc
lds
mov
and
inc
in
lods
enter
mov
sbb
lods
ret
call
add
lods
sahf
pushf
add
lods
jns
movsl
fidivrl
sub
mov
lahf
push
iret
sub
push
cmpsb
xchg
inc
aaa
loop
xor
fsubs
pop
fldl
mov
xlat
add
xchg
push
mov
fistpll
push
lods
shll
pop
int3
iret
inc
push
dec
pop
rolb
pop
cwtl
jmp
xor
fdivs
out
lcall
adc
lock
pop
mov
lcall
jbe
jmp
mov
mov
dec
mov
jge
sub
xlat
mov
push
add
lds
sarl
ret
lret
dec
mov
jns
je
in
fisttpll
scas
rolb
inc
ja
nop
push
xlat
andb
adc
and
negb
jmp
xor
jne
rcrl
sub
repz
cltd
sbb
call
shrb
hlt
add
add
shll
sbb
xchg
mov
les
dec
mov
mov
jmp
and
sub
add
decl
add
cmp
push
cmpsl
push
fbld
in
xchg
into
clc
push
popa
stc
loopne
lret
out
push
xor
sbb
test
push
rorb
or
inc
cmp
dec
and
sub
das
and
fsub
cmp
pop
in
cmc
out
jnp
sub
aaa
popa
int3
add
mov
bound
jno
sbb
jnp
in
sbb
dec
mov
lea
push
ljmp
fsub
adc
sbb
negb
inc
mov
mov
xor
push
in
mov
pmulhw
les
and
test
cmp
inc
jle
aad
fstpl
sbb
add
jg
xor
pop
cmp
movsl
adc
jb
jp
loop
add
adc
push
cmp
sbb
cmp
push
push
push
and
ljmp
rolb
lcall
aas
pop
mov
mov
push
jno
and
dec
scas
push
mov
sbb
push
cmp
mov
adc
push
mov
ret
jno
push
jge
push
into
cs
hlt
test
loop
bound
or
dec
lea
clc
aad
neg
pop
add
shr
jno
insl
shlb
add
xor
rcr
mov
sbb
jbe
pusha
mov
mov
repnz
mov
rcr
test
into
xor
shrb
fstpl
dec
inc
inc
xor
xchg
sub
mov
jns
test
mov
xchg
push
mov
adc
sub
add
mov
nop
shl
pop
pop
pop
dec
fsubrl
in
adc
mov
pop
mov
popa
cld
call
xor
push
fwait
inc
ja
xlat
call
push
jmp
adc
push
pop
jae
push
cmc
mov
mov
lods
and
push
pop
lahf
test
ljmp
jno
sub
or
lock
in
lock
lahf
shl
jle
lds
mov
in
out
shll
lcall
adc
dec
mov
mov
add
sbb
and
in
jle
cld
shlb
out
lds
inc
lahf
pop
xor
mov
push
mov
rcrl
inc
lock
sahf
lcall
inc
lods
pop
int
mov
mov
sbb
aam
ja
nop
inc
dec
mov
or
cmp
bound
pusha
and
mov
mov
xchg
fisubs
cmp
scas
adc
cmp
or
popf
daa
cmp
cmc
push
aas
stos
add
scas
cmp
ds
mov
or
daa
movsl
out
out
xor
xchg
and
jae
sub
add
out
mov
and
xor
cmp
insb
mov
or
jnp
sahf
mov
xorb
push
test
mov
popa
sbb
add
add
push
mov
dec
or
xchg
dec
cmpsb
mov
and
mull
insb
mov
ljmp
mov
jge
mov
cmpsl
dec
dec
imul
mov
xchg
fdivr
idivb
jge
imulb
cld
xor
nop
xchg
dec
jbe
mov
dec
scas
adc
pop
aad
pop
push
xchg
fsubrl
dec
in
std
fcmovne
inc
push
cmp
sub
xor
cld
adc
jg
int
cld
add
sbb
cld
pop
xchg
test
jg
jl
fnstsw
and
je
add
mov
mov
subb
iret
ljmp
mov
in
adc
push
leave
inc
dec
cmpsb
jle
push
xchg
xchg
pop
int3
int3
clc
inc
xor
adc
icebp
xchg
jnp
add
jo
outsb
sbb
add
cmp
test
lds
or
push
hlt
rcrb
in
rclb
out
dec
jg
cmp
out
inc
gs
lcall
popf
daa
in
xchg
insb
shl
iret
loop
mov
rclb
pop
in
push
push
mov
mov
insb
call
insl
pop
je
popl
dec
xchg
pushl
adc
ficoms
clc
mov
mov
xor
mov
xor
push
sahf
dec
xor
hlt
pop
les
lods
push
out
call
sbb
shrl
and
das
es
into
inc
cmp
jne
sbb
xchg
add
jecxz
stc
std
in
sahf
dec
mov
out
cmpsb
add
lods
inc
pop
xchg
aaa
enter
cli
adcb
cmp
sbb
test
sahf
mull
mov
and
jae
ja
fs
out
jecxz
or
mov
loop
jb
jmp
push
rol
inc
ljmp
jno
dec
ss
ret
pop
lcall
lret
leave
jg
out
lret
xchg
mov
push
arpl
dec
inc
fs
cld
shrl
loopne
test
sbb
enter
xchg
test
mov
stos
lcall
mov
mov
push
sub
out
mov
pop
mov
or
dec
add
bound
mov
xchg
mov
jno
fsubl
pop
ret
sub
mov
in
jbe
mov
daa
pushf
pop
or
add
pop
pop
rorl
roll
add
test
or
dec
inc
xchg
divl
incl
rorl
rolb
cltd
loopne
or
shl
fsubrl
arpl
stos
movsb
jbe
jbe
push
jbe
cltd
push
push
xchg
adc
inc
in
dec
sti
test
test
pop
stos
push
test
jne
and
mov
adc
mov
and
sbbl
lret
pop
icebp
xchg
pop
scas
fcoml
loop
clc
mov
movsl
repnz
and
inc
into
sbb
aaa
cli
leave
dec
and
sahf
ret
imul
pop
lock
cmpsb
lods
jecxz
fldt
dec
mov
es
test
cmp
pop
loope
or
hlt
mov
sarb
xor
push
icebp
notb
mov
or
js
clc
repnz
xchg
dec
lahf
xlat
outsl
lods
push
push
bound
sub
ja
pusha
push
dec
and
mov
push
sub
pusha
cmp
or
sbb
add
iret
movq
mov
lahf
in
pusha
jbe
inc
and
cmp
insl
add
dec
xchg
fcompl
insb
sub
in
push
and
out
mov
cld
sbb
movb
movsl
cwtl
pop
sbb
jle
sahf
lea
mov
and
jo
mov
push
jnp
mov
add
fcomps
leave
inc
or
jno
push
sub
add
add
call
add
cmpl
xchg
add
mov
imul
inc
cmp
outsl
jae
inc
push
push
cld
test
xor
cmpsb
loopne
cmpsl
into
inc
and
jo
inc
rclb
pop
push
out
cwtl
jnp
add
push
dec
mov
xor
dec
js
push
lock
xlat
and
scas
call
pop
jne
xor
push
mov
mov
pop
and
mov
jns
in
xchg
clc
lret
dec
pop
loope
mov
push
dec
out
and
cmpsb
mov
sbb
xor
sbb
mov
push
inc
scas
xchg
mov
push
sub
int3
xchg
cltd
mov
leave
in
lods
mov
cld
rolb
ret
jns
adc
int
cmc
add
jnp
inc
push
ds
aas
or
in
mov
insb
shll
test
lret
or
sub
movsb
data16
cmpb
jae
js
adc
xor
shll
lods
mov
jb
lock
cmc
pop
xchg
adc
dec
jo
cld
push
ljmp
clc
dec
inc
flds
ja
inc
push
and
jns
movsb
push
mov
cmc
and
push
scas
pusha
push
push
sbb
xchg
pop
adc
mov
lahf
push
ds
xchg
pop
ds
mov
or
adc
enter
push
ljmp
sarl
pop
xchg
stc
pusha
das
xchg
jne
pop
add
icebp
xchg
lahf
lods
cmp
xchg
mov
stc
sub
jge
fstpt
inc
andb
jecxz
lahf
pop
cmp
dec
or
outsl
outsb
nop
and
les
ret
push
fdivr
cli
loop
aam
inc
inc
mov
stos
call
push
inc
jns
jg
inc
or
ja
pop
daa
pop
imul
mov
shlb
push
nop
in
shl
mov
aas
cmp
loope
push
inc
aad
aas
ljmp
test
cld
mov
cwtl
mov
into
std
lock
push
sbb
es
cwtl
stc
fstp
mov
ds
or
insl
ja
daa
mul
jne
orl
repz
jo
fcomip
jge
xor
sti
jbe
dec
int3
lods
shlb
fisubs
mov
rclb
push
jmp
jne
xor
cmp
popa
mov
in
cld
inc
sahf
dec
dec
inc
addr16
push
or
jb
sub
loop
fwait
jge
les
insb
xchg
or
daa
cwtl
jecxz
out
sub
arpl
xchg
xchg
pushf
push
loopne
adc
sbb
mov
xor
dec
enter
or
push
pop
out
and
in
lods
dec
xchg
lods
das
jle
addl
mov
cmp
sub
imul
orb
mov
cvtdq2ps
out
pop
jmp
rcll
jae
mov
pop
test
jne
sub
dec
out
testl
pop
mov
stos
cmp
cmp
add
inc
or
mov
fcomi
gs
adc
cmp
rol
call
jnp
rcr
jo
fwait
hlt
xchg
inc
pop
scas
test
cmp
or
insb
loope
pop
in
popf
mov
sub
pop
in
inc
test
add
cmpb
hlt
pop
insl
push
cmp
mov
jmp
mov
push
sti
pop
ja,pn
fs
sbb
sahf
icebp
aam
push
sti
mov
xchg
pop
push
sub
in
ja
roll
dec
ja
mov
sbb
ss
or
movsb
jle
imul
subl
jg
insb
repz
push
ljmp
cmp
les
daa
mov
sub
icebp
inc
jmp
sbb
push
std
mov
push
mov
sbb
scas
in
adc
es
xchg
mov
shrb
xor
or
ds
inc
cld
mov
mov
sub
in
clc
cmp
or
movsb
sbb
push
xchg
popa
call
mov
std
sti
stos
xchg
sbb
pop
mov
sbb
push
hlt
dec
cli
jmp
jmp
ret
mov
cmp
jo
pop
sarb
imul
jae
and
enter
sbb
std
add
sbb
sub
xchg
push
loop
xchg
pop
mov
sub
mov
stc
push
enter
xchg
syscall
shll
cmp
mov
xor
inc
jmp
addl
in
fadds
xlat
mov
arpl
out
cmp
lds
pop
xchg
lret
cmc
xor
push
ret
push
inc
jbe
dec
or
mov
push
dec
bound
jg
xor
fisubrl
out
or
add
faddl
mov
xor
rclb
inc
cmpsb
push
loopne
and
ss
mov
mov
into
add
and
scas
push
data16
movsb
jecxz
stos
dec
cmp
pop
in
cli
sbb
popa
ror
fwait
loop
js
ss
pusha
std
ret
lret
lcall
mov
inc
shrb
sub
dec
test
mov
xchg
mov
icebp
nop
xchg
scas
inc
add
cmp
stos
push
or
les
outsb
out
stos
pop
ljmp
mov
push
pop
jb
xchg
mov
add
shl
aad
popw
loop
inc
xor
and
push
test
negb
xchg
cmp
xlat
mov
mov
xor
sti
pop
decb
and
push
add
test
lea
repz
fistl
lea
mov
andl
sbb
sbb
push
mov
ret
mov
xchg
dec
pop
cmpps
and
ja
aas
loop
ror
cs
push
adc
mov
lret
and
bound
cmp
sub
addr16
xchg
jne
lods
lods
scas
adc
cwtl
outsl
dec
fistl
mov
loopne
or
mov
fdivp
lcall
cmp
dec
in
jg
inc
push
stos
xchg
xor
in
or
stc
movsb
mov
mov
loop
adc
inc
and
jle
sbb
rorl
or
jne
popa
fsubrs
push
push
ljmp
hlt
mov
aas
stc
add
cltd
daa
xor
test
repnz
js
sub
adc
pop
xor
repz
icebp
ja
outsl
cmp
je
imul
cmp
pop
dec
in
xchg
sub
cmp
mov
xchg
fisubl
scas
adc
xor
jns
cmpsl
mov
or
dec
iret
and
sbb
das
stos
mov
pop
dec
xchg
push
insl
mov
lea
and
pop
in
repnz
inc
out
xorb
sub
sbb
jno
stc
push
dec
mov
pop
bound
xchg
sbb
and
sbb
jge
add
test
lcall
xor
stos
or
and
adcb
add
leave
jmp
jae
or
fs
and
ret
mov
sub
aas
lret
push
stos
test
push
loope
sbb
and
loopne
mov
mov
add
cltd
loop
fwait
push
push
daa
and
daa
mull
inc
outsl
sahf
jo
cli
mov
mov
nop
lea
or
cmp
cltd
adc
les
push
jnp
xor
loop
xor
insb
addr16
pop
pushf
jle
clc
out
xor
pop
bound
inc
loope
push
xor
clc
sete
push
mov
lea
rclb
call
dec
add
jno
addr16
sub
adc
mov
ds
xor
mov
fcomip
shlb
inc
hlt
daa
in
imul
mov
mov
jecxz
in
jne
mov
push
insb
aas
push
inc
addr16
mov
sbb
shrb
adc
testb
lods
mov
loope
popa
testb
imul
lcall
inc
ja
call
cs
sub
add
mov
int3
aas
dec
xchg
int
cmpl
cmc
stos
jne
xor
data16
xor
arpl
popf
shll
push
pop
int3
fisttpll
push
mov
loope
arpl
push
sbb
xchg
fdivs
je,pn
mov
and
lds
ret
and
mov
pop
pop
xchg
cs
or
mov
pushf
pop
inc
or
lock
rcrb
dec
push
and
mov
in
lods
sub
lret
stos
repz
lds
mov
int
xor
cli
inc
or
out
in
push
adc
inc
fisubs
mov
mov
lds
mov
inc
popa
imul
xchg
mov
pop
daa
add
int3
xchg
push
inc
sbb
popf
mov
mov
ds
mov
cmpl
mov
xor
add
hlt
mov
add
dec
pop
dec
ds
test
adc
mov
data16
add
das
out
push
jae
and
mov
jo
cld
jno
add
or
cmp
aaa
jp
jg
ds
lea
nop
push
xchg
jo
enter
out
test
int3
jp
jnp
stos
push
and
xchg
inc
pop
lock
mov
in
and
test
or
outsl
mov
and
sarb
sbb
aad
lock
cmpsb
mov
pop
loop
aam
mov
sbb
ret
xor
xchg
jmp
mov
bound
rcrl
and
push
xor
aad
ljmp
popa
mov
jecxz
loopne
xor
dec
or
out
xchg
adc
and
mov
les
xchg
jb
mov
sub
fwait
call
sbb
loop
fwait
test
movsl
out
roll
andl
popf
push
jp
adc
movb
int
sub
cwtl
sbb
aaa
xchg
lds
add
inc
jle
or
fildll
jb
lret
push
rcrl
mov
push
test
scas
mov
adc
fisttps
or
lea
ret
pop
inc
xchg
sbb
mov
pop
cmpsl
push
sub
jecxz
jbe
jno
mov
lods
scas
jmp
push
sbb
loop
lahf
lods
mov
int
lret
mov
shrl
in
imull
adc
xchg
or
insb
popf
inc
subb
inc
dec
cltd
mov
ja
popf
mov
sbb
push
xchg
sub
scas
pop
cli
cmpb
in
cmp
sbb
divl
push
sub
lds
mov
mov
xor
add
and
jno
aas
aam
cs
mov
sbb
mov
mov
dec
pop
mov
and
pop
sbb
xor
pushf
push
pop
lods
out
sbb
outsb
push
sbb
scas
mov
xor
pop
mov
ss
loop
fisubl
imul
fiadds
lcall
push
pop
daa
addr16
lods
leave
addl
mov
inc
pop
fwait
xchg
jge
push
jne
inc
fwait
mov
sub
cmp
repnz
test
jecxz
push
add
dec
xchg
and
cmpsb
out
cli
hlt
xor
lahf
movsb
mov
cs
and
stc
push
inc
push
shr
push
lods
testl
mov
or
dec
push
fdivrs
and
in
test
scas
leave
mov
add
ret
in
dec
repz
xchg
ja
mov
int3
add
fidivrl
pop
add
xor
mov
pop
push
xchg
push
scas
out
xchg
mov
or
mov
arpl
outsl
xor
cwtl
test
xor
int3
fisttpll
adc
pop
shll
je
popa
jge
and
mov
xor
jns
addr16
cmpsl
mov
jb
xor
shll
inc
jnp
mov
push
add
imul
into
imul
dec
outsl
mov
adc
xor
push
nop
pusha
into
pusha
inc
fs
push
jp
and
rorl
adc
stos
rcll
bound
mov
mov
rcrb
inc
out
sbb
out
mov
movsl
jne
or
movsl
add
push
adc
lods
xor
mov
popf
das
pop
xor
inc
mov
sbb
fcmovu
cmp
js
insb
out
cmpsb
push
cmp
pop
pushf
pop
jne
outsl
test
add
xchg
ds
aas
xor
fidivrl
ret
addr16
adc
mov
fwait
pop
shl
scas
out
ret
push
cmp
add
sahf
dec
mov
adc
insl
subl
pusha
clc
jo
inc
pop
mov
xchg
rcrb
xor
mov
pusha
jg
je
mov
stos
push
imul
std
leave
sbbb
sbb
dec
xor
rcll
daa
idivb
jl
adc
sbb
sbb
filds
sub
xchg
daa
xor
push
jmp
sbb
mov
pop
push
mov
add
sub
lock
add
sub
decl
call
call
jne
negl
and
pop
enter
mov
push
loop
pop
movsb
sti
jmp
dec
fdivl
or
lds
xchg
xchg
xchg
dec
sahf
popf
xchg
fs
test
imul
js
lret
popf
in
pop
sbb
push
into
or
iret
std
scas
sbb
das
mov
stc
dec
test
push
ror
mov
fs
dec
out
stos
das
insb
sbb
test
sbb
mov
in
add
and
pop
ret
in
jecxz
inc
inc
mov
cmp
mov
add
loope
loopne
mov
push
sub
dec
mov
jne
jmp
or
pop
and
sub
and
rcrb
je
mov
xor
jge
jno
jp
jnp
mov
xchg
mov
pop
and
sub
inc
fisttpll
in
rcrl
cwtl
cmpsl
in
jns
mov
push
lahf
pop
push
mov
loopne
imul
mov
nop
dec
insb
push
out
andb
movsb
ljmp
sbb
adc
inc
jmp
push
push
mov
jae
aam
dec
cmp
je
das
incl
mov
push
cmp
cli
outsl
xlat
pop
std
iret
bound
insb
jno
add
and
xchg
fbstp
scas
mov
testb
subb
pop
sbb
scas
adc
xchg
inc
push
mov
mov
mov
not
sbb
shl
mov
jmp
fwait
xor
dec
xor
les
pushf
negb
arpl
ljmp
jecxz
xlat
fisubrl
jmp
dec
pushf
into
ss
mov
xchg
sahf
iret
sbb
xchg
inc
xor
mov
xor
and
icebp
mov
and
add
aas
xchg
sub
mov
and
xchg
push
data16
orb
mov
movsl
addb
lea
imul
jnp
jle
sub
stc
cli
insl
test
call
lods
stc
mov
push
scas
sbb
dec
sub
fs
mov
mul
sbb
fdivr
test
xchg
push
subl
pushf
mov
stos
pop
adc
mov
mov
stos
fwait
shlb
jb
test
inc
or
xor
loope
adc
icebp
mov
and
adc
aaa
sbbl
jbe
jp
ljmp
shr
mov
sbb
mov
repz
out
xor
iret
stos
mov
push
loopne
cmp
pop
xor
adc
leave
call
and
mov
push
jnp
stc
push
add
es
cmp
aaa
mov
lret
fwait
mov
xchg
pop
cmp
call
cs
call
lret
xchg
adc
push
hlt
add
in
inc
rol
mov
int
pop
xor
lcall
scas
shll
mov
cmp
mov
xor
clc
stos
jmp
fwait
in
pop
xor
outsl
jae
xor
roll
test
adc
enter
push
xor
outsl
sub
pusha
xor
aad
and
out
cmp
jmp
mov
aaa
mov
lds
repnz
imul
arpl
fsubrs
mov
icebp
xor
fnstcw
dec
mov
out
test
cmp
clc
xchg
mov
sbb
cmpsb
or
jb
jg
mov
xchg
out
add
xor
movsl
or
ja
call
mov
icebp
hlt
add
mov
pushl
xchg
dec
adc
loope
xchg
pop
jne
aaa
xchg
mov
lods
ret
shl
mov
push
lahf
mov
mov
sti
pop
jb
mov
and
pop
mov
mov
dec
dec
add
ljmp
lret
sub
pop
test
loopne
pop
nop
pop
fs
popa
sbb
insl
sub
test
es
ljmp
cmp
mov
enter
push
push
push
mov
mov
mov
stos
dec
adc
inc
xchg
jnp
lods
lods
add
arpl
bound
and
mov
pop
into
test
push
mov
das
sbb
insb
loopne
cmp
lret
in
xchg
jnp
xchg
inc
int
or
jne
lods
mov
xor
mov
popa
or
fdivrs
fdivrl
xchg
iret
int3
mov
cmp
xchg
out
popf
icebp
cmpsl
enter
push
sub
sub
ret
sti
sbb
or
xor
cmp
dec
outsb
add
pop
mov
mov
push
incb
push
fwait
mov
fildll
jns
hlt
mov
fiadds
mov
mov
jmp
jmp
inc
sub
dec
mov
adc
inc
dec
aad
mov
pop
sar
sbb
sub
and
out
popf
fst
mov
and
xor
pop
stc
dec
mov
xchg
mov
aam
jp
test
cmp
sub
ret
fnstcw
jecxz
adc
test
jae
mov
fnsave
mov
scas
mov
mov
inc
fwait
cwtl
sti
loop
out
sahf
mov
enter
sbb
pop
jge
or
xchg
jbe
mov
mov
mov
lcall
jg
mov
das
xchg
mov
pop
inc
xor
movb
enter
mov
mov
push
mov
or
cmp
push
enter
scas
stc
flds
ret
or
dec
push
std
notb
xchg
pop
lahf
mov
xchg
jl
mov
adc
popa
fisubl
fs
add
popa
mov
push
xchg
lds
sarb
jae
mov
enter
pop
inc
adc
or
mov
je
stc
ror
pop
pop
rcl
mov
sbb
lahf
movntq
inc
bnd
icebp
mov
or
stos
jle
or
jb
inc
cs
ja
jge
cltd
push
sbb
cmpsl
lods
push
out
stc
scas
mov
movb
mov
inc
pop
pop
push
mov
push
addb
jne
sbb
xchg
xor
cwtl
lret
mov
and
or
xchg
in
icebp
jl
ret
jmp
sub
jecxz
add
or
fdivrl
mull
test
int3
fisttpl
fs
jmp
mov
add
jnp
js
jno
and
jle
sub
push
pop
int3
les
inc
loopne
in
lods
xor
loop
jge
push
sbb
fsubs
outsb
jl
test
mov
xor
mov
test
push
add
xor
xlat
in
loope
orb
jmp
lea
add
cmc
out
out
rcrl
cs
daa
addl
cmp
sbb
mov
cmc
testl
sub
pop
aam
daa
ss
and
push
test
mov
daa
loope
lods
adc
dec
hlt
cmp
repnz
imul
idivl
add
or
shrb
fs
iret
xchg
mov
add
bnd
mov
in
pop
and
dec
mov
sbb
adc
rorl
xor
dec
dec
pop
out
cmp
xchg
les
icebp
xchg
cmc
dec
mov
test
adc
aaa
xor
frstor
out
push
sar
add
xchg
pop
dec
test
int
mov
in
push
iret
iret
insb
ret
xlat
jmp
xchg
mov
mov
xor
movsl
push
repz
lods
jno
inc
mov
add
mov
out
cmpsl
xor
lret
dec
sub
out
jmp
mov
stc
stos
pop
out
je
xchg
sbb
mov
ja
enter
repnz
dec
lret
xchg
inc
mov
inc
clc
sub
mov
mov
adc
jns
scas
adc
scas
add
mov
jl
sbb
add
adc
insb
cs
sub
sbb
xor
enter
ss
aam
mov
pop
adc
pop
test
push
xchg
loope
mov
mov
xchg
insl
mov
mull
stos
push
loopne
inc
mov
rorb
and
sti
push
cmp
push
mov
aam
dec
dec
mov
bound
jge
out
dec
mov
xor
ja
mov
jnp
in
pop
rcrb
inc
xor
add
sti
lret
test
scas
jge
inc
out
in
popl
xchg
mov
jae
divl
into
jns
adc
rorl
dec
jne
mov
lods
cli
sub
jge
sarb
pop
rcrl
mov
add
jge
mull
fidivrl
lock
test
lahf
ja
ret
in
dec
stos
mov
ret
into
or
sahf
paddusw
sbb
inc
fisttps
lahf
jecxz
adc
add
fs
dec
ss
sub
push
mov
or
int
repz
fs
fsubrl
jnp
sub
sub
pop
lahf
jmp
cltd
mov
cwtl
cwtl
xchg
adc
shll
adc
out
and
sub
dec
xchg
daa
loope
mov
dec
and
out
fsts
sub
or
xchg
fs
ss
aad
mov
lahf
adc
mov
and
loop
fstpt
adc
mov
sarb
mov
arpl
in
leave
adc
mov
out
lods
jecxz
dec
daa
ret
sub
lods
ror
adc
sub
mov
inc
push
int3
ret
repz
inc
jnp
sub
xor
sahf
sbb
or
rcrb
sub
jbe
and
pop
or
stos
pop
stos
incb
scas
or
into
sbb
mov
cmp
cmc
lods
in
push
fiadds
rorl
push
sub
movsl
add
inc
add
push
inc
xor
dec
stos
decl
or
cmc
xchg
add
aas
lret
lahf
pop
dec
xchg
loop
aam
lret
cmp
ficompl
out
repnz
in
jmp
cmp
cli
in
imul
mov
push
push
mov
aam
jo
mov
adc
cmp
jnp
aas
inc
mov
ds
dec
rcll
call
and
and
movsb
dec
in
xor
ss
cmp
movsb
cwtl
sub
and
jnp
popa
fisttps
loop
push
lea
pop
out
mov
mov
or
xorl
lahf
cwtl
ja
dec
pop
xor
dec
cmp
roll
mov
mov
aas
inc
xchg
mov
std
leave
test
jns
mov
scas
imul
push
xor
mov
fsin
pop
mov
add
add
out
lret
int
mov
mov
scas
sbbl
lods
and
pop
jne
mov
repnz
lods
jae
jmp
sbb
lock
mov
adc
jnp
fidivs
decb
push
loopne
jl
sub
cmp
mov
and
or
js
xorl
loopne
jmp
pop
ja
pop
or
les
and
dec
cmp
mov
or
dec
lahf
callw
mov
mov
and
adc
mov
imul
fisttpll
flds
xor
setle
xchg
lds
dec
ficompl
dec
push
cmpsb
jl
xor
jno
sub
out
sbb
stos
das
dec
xchg
add
dec
out
sbb
mov
xchg
imul
xor
pushf
jne
pop
xor
das
int
fprem
lods
sbb
push
inc
ret
test
movsl
cmpsb
or
and
scas
add
mov
test
inc
xchg
push
cmp
mov
push
in
aad
adc
lea
pop
mov
push
dec
mov
mov
lods
cmpsl
lret
cmp
dec
fsubl
pop
ljmp
fwait
jb
loopne
pop
insb
stos
shll
add
es
push
insl
push
xlat
stc
dec
mov
xchg
push
les
fisubl
dec
inc
xlat
push
sbb
je
in
pop
ds
bswap
scas
outsl
dec
stc
rorb
and
inc
mov
lret
xor
mov
shr
mov
repnz
adc
cmp
push
loop
dec
outsb
aam
adc
pop
add
jle
add
sbb
sti
es
jnp
fildll
out
in
in
das
pop
mov
lods
push
dec
mov
repz
insl
paddsb
or
stc
popa
ds
cwtl
out
mov
pop
cmc
push
mov
jo
out
xor
in
adc
repnz
push
dec
ffreep
pop
jns
cmp
sbb
or
pop
mov
inc
cmp
mov
pop
rolb
cwtl
adcb
mov
fs
mov
scas
lds
and
out
push
test
andl
movzwl
mov
inc
pushf
in
pop
lcall
xor
cmpl
roll
dec
or
shrb
fsubl
fs
rclb
adc
jns
dec
leave
cmp
or
jmp
pop
xor
sub
dec
cmp
ror
sub
cli
add
push
mov
clc
gs
lods
pop
test
xor
or
popa
push
dec
mov
dec
aas
je
or
je
dec
mov
out
cmc
inc
push
and
sbb
sub
push
shrl
rol
jae
cmp
and
out
shrb
in
enter
adc
fbstp
xor
mov
shll
flds
xlat
filds
xor
insl
pushf
stos
mov
ds
mov
jae
std
arpl
pushf
arpl
jnp
xor
sub
lret
repnz
fwait
pop
add
ret
mov
inc
out
add
cmpsl
sub
jb
cs
psubw
sbbb
repnz
addb
mov
pop
iret
loopne
sahf
push
lods
and
outsb
lds
ret
imul
aas
jmp
cmp
mov
addl
adc
popf
and
movsl
lds
addr16
and
icebp
popl
jmp
sbb
sarb
adc
pop
push
imul
adc
adc
ds
scas
adc
lahf
pop
repnz
outsl
ret
lcall
add
xlat
mov
shlb
dec
inc
pop
test
cwtl
inc
arpl
and
enter
dec
iret
cmp
in
cmp
jns
into
mov
inc
vshufps
fmuls
and
sti
inc
sbb
sbb
fbld
and
xor
cmp
cmp
push
cltd
jnp
in
sbb
dec
pop
mov
insl
jnp
add
mov
pop
mul
fadds
jl
push
add
mov
test
jo
in
cs
cwtl
mov
lret
mov
loope
mov
xchg
int
addl
sub
and
cmp
pop
xor
pop
push
int
add
lret
out
ja
sbb
inc
jne
pop
push
pushf
mov
cmp
cs
pushf
adc
subb
pushf
loop
dec
adc
sti
lods
mull
mov
stos
clc
cmp
jp
xor
jb
cmp
cmc
aas
and
scas
and
add
call
sahf
sbbl
nop
xor
outsl
dec
arpl
xor
mov
ds
mov
cmp
push
fadds
pop
arpl
and
sub
inc
cmc
sbb
sub
xchg
fisubrs
adc
adc
jle
mov
mov
sbb
mov
jbe
ret
clc
mov
gs
and
cld
addr16
insb
xor
mov
fcompl
call
ret
or
xchg
cmpsl
jb
loopne
adc
cmp
shll
cmpsl
add
lds
loope
sahf
int
sub
pop
jo
jge
push
mov
das
pusha
jmp
pushf
rcrl
and
lahf
loope
adc
bound
cmp
scas
xchg
pop
sbb
dec
jae
lret
das
dec
mov
fnstsw
fldcw
sub
mov
jmp
xor
testl
stos
mov
pop
jae
or
sbb
pusha
leave
cmp
pop
push
inc
popa
test
push
popf
subb
xor
fimuls
push
nop
mov
iret
cli
hlt
inc
icebp
fs
pop
push
ljmp
jecxz
or
nop
pop
pop
pop
clc
adc
leave
rorl
push
add
dec
loop
ret
jo
in
jg
lcall
push
rol
adc
sti
sub
and
lcall
fcoml
cwtl
popa
mov
inc
shr
inc
jp
inc
pushf
into
jo
movaps
dec
nop
lret
mov
sub
push
aaa
mov
adc
sub
bound
xor
in
jae
je
xchg
xchg
cwtl
jb
xor
pop
hlt
std
inc
adc
lret
pop
clc
push
mov
cmpsl
jg
shrl
xchg
xor
inc
sbb
inc
sbb
adcl
addr16
jb
cmpsb
xchg
dec
dec
leave
cmpsl
mov
pop
add
std
mov
inc
lret
call
jecxz
cli
cwtl
add
hlt
lea
adc
je
mov
mov
rep
jg
addr16
mov
xor
xchg
mov
lret
test
ret
jo
aad
cwtl
out
mov
out
push
repz
mov
mov
arpl
sbb
cmp
mov
push
push
in
in
lret
shll
out
mov
lret
mov
and
insb
dec
mov
and
xchg
pop
into
sarb
and
int
mov
inc
adc
add
ret
pop
add
aam
mov
popa
xchg
movsl
mov
test
sub
push
ret
xchg
push
in
fucomp
jns
lods
sub
in
ret
imul
adc
jg
clc
sbb
mov
pop
jns
jb
js
xlat
mov
in
arpl
push
pop
sbb
fcomip
pop
push
jp
enter
sub
sbb
xchg
jge
fs
sub
subb
sub
pop
pop
sub
outsl
inc
scas
insl
ljmp
mov
push
adc
ss
mov
sbb
mov
mov
pop
ja
add
jmp
sbb
pop
arpl
pop
test
sub
divl
fs
or
or
push
sti
aas
dec
dec
scas
sub
push
les
sbb
fistps
fisubl
jae
jae
xor
lcall
cmc
stos
bound
sub
iret
jecxz
stos
xchg
push
xlat
call
arpl
mov
dec
pop
inc
sub
mov
jp
sbb
ljmp
add
fnstsw
sarb
mov
mov
push
adc
mov
rol
xor
mov
out
test
lock
das
test
xchg
add
movsb
cmp
mov
mov
inc
rep
mov
adc
inc
in
mov
bound
pop
adc
adc
sub
mov
testb
lods
pop
sub
gs
rolb
sub
outsl
std
pop
sub
filds
iret
pop
test
ds
out
test
lock
shlb
mov
sub
dec
adc
dec
testb
out
clc
ljmp
dec
mov
js
push
enter
fidivrs
jmp
push
sbb
jl
jl
fisubl
xchg
test
push
testb
mov
xchg
sub
inc
jno
fbstp
push
inc
jecxz
mov
pop
jge
jns
loop
repz
and
push
adc
roll
mov
xchg
stos
outsl
shlb
pop
int3
int
leave
push
gs
mov
ds
jp
mov
cmp
dec
mov
daa
sbb
inc
sub
ret
xor
bound
mov
xchg
inc
xor
sahf
in
xchg
frstor
shrl
fdivrl
sub
call
pop
loop
sbb
push
lock
mov
int3
or
addl
mov
bound
fiaddl
int3
in
and
sub
gs
jae
xor
lock
mov
pop
test
push
mov
test
lahf
fidivs
dec
sti
jb
rorb
call
fcoms
out
xchg
adc
pop
cmp
comiss
icebp
cmp
mov
push
mov
inc
gs
or
mov
sub
repz
jge
jae
scas
mov
push
add
sub
sbb
lret
lea
fbstp
or
jecxz
mov
sti
sub
fdecstp
or
out
sub
ss
ss
push
inc
cmp
pusha
add
xor
pop
xor
sub
cli
sbb
clc
adc
loopne
sbb
xor
or
pop
ljmp
pop
mov
popa
pop
sbb
cmp
gs
push
or
and
test
fsubs
or
lea
shll
and
jmp
jl
stc
iret
fdiv
push
in
enter
aaa
mov
les
cwtl
pop
dec
push
in
push
inc
ficoms
ds
push
sbb
push
ljmp
mov
mov
bswap
xchg
mov
imul
add
xor
push
jo
push
mov
cs
insl
movsb
pop
jb
push
mov
stos
jle
add
bound
mov
sbb
inc
cmp
das
loop
aas
pushw
lea
out
and
jne
inc
fs
push
pop
fistps
push
enter
xlat
push
popf
ja
testb
leave
add
ret
outsl
dec
das
dec
dec
sbb
and
fmulp
fsubrs
sbb
pop
das
rcrl
mov
mov
and
lods
fnstcw
data16
or
add
ret
pop
xor
push
repz
cwtl
push
xor
or
mov
bnd
push
dec
mov
xor
add
push
cld
iret
and
pop
jo
adc
inc
adc
xchg
cmp
adc
cmp
pop
adc
jb
add
sub
rclb
popf
sahf
rorl
inc
call
data16
cmp
fwait
or
xor
xlat
inc
xchg
filds
and
cmp
test
mov
rolb
lods
int
mov
sbb
test
mov
rorl
xchg
jmp
mov
shlb
push
popa
sub
daa
jae
xchg
sub
lcall
pop
and
mov
popf
xor
pop
dec
pop
ret
shrl
add
in
add
lock
int
and
jle
sub
and
mov
mov
cs
push
or
in
testb
push
fbstp
loope
cmp
adc
sbb
mov
mov
stos
jnp
mov
out
ss
adc
fs
fcomp
inc
or
in
push
mov
in
and
and
jb
push
mov
sbb
mov
repz
movsl
sbb
inc
mov
mov
cmp
in
and
jl
push
push
mov
cmc
or
movsl
mov
xchg
mov
pop
cmpsb
es
test
or
adc
fs
in
cmp
ret
fldenv
and
fimull
inc
fidivrs
repnz
adc
jle
lods
push
movsb
or
jne
ljmp
xchg
ljmp
add
mov
clc
pop
mov
outsl
fadds
into
sti
dec
in
adc
mov
sti
pop
mov
xor
jp
fdivrs
enter
ljmp
outsl
xlat
xchg
sub
loopne
mov
jbe
incb
push
stc
sub
and
adc
movsb
add
cmc
cmp
add
inc
idiv
stos
fildl
jns
adc
add
xor
xchg
iret
cmp
sub
sub
lea
scas
aas
adc
scas
mov
sbb
inc
dec
ficomps
in
mov
mov
sahf
or
rorl
lds
lret
jo
lahf
imul
cmp
mov
dec
mov
pop
loop
lock
ret
xor
das
andb
outsl
fisubs
daa
addr16
into
and
dec
pop
aaa
lods
mov
cli
add
jne
push
xchg
nop
cs
out
repnz
dec
call
push
js
call
ficomps
mov
jmp
nop
fcomps
jp
mov
rorl
xchg
xchg
sub
ret
jns
outsb
lret
xchg
mov
jnp
in
push
dec
mov
or
icebp
adc
mov
push
fistpll
jnp
decl
xchg
mov
or
fidivrs
mov
fdiv
xchg
add
stos
sub
lock
adc
sti
mov
test
outsl
lock
mov
xchg
cld
fimull
mov
and
rolb
lcall
mov
and
and
aad
repnz
repz
push
pop
xchg
scas
test
push
xchg
out
jne
lahf
push
fisubs
mov
mov
cltd
out
hlt
loope
pop
enter
bound
shrl
mov
push
mov
xchg
and
or
push
push
add
call
lods
je
sub
int3
cmp
repnz
stos
stos
jle
push
iret
xchg
sbb
mov
insl
jl
jp
mov
sbb
in
jmp
aad
mov
fsubrl
or
test
jle
push
jge
std
mov
jo
and
repnz
inc
mov
fsubs
mov
test
je
push
jnp
pushf
test
out
fcoms
mov
cwtl
dec
adc
xlat
popf
pop
xor
sub
mov
scas
mov
mov
or
aam
ret
jo
inc
mov
add
adc
movl
fidivrl
js
ljmp
jmp
lahf
inc
lea
mov
call
push
mov
cmp
add
push
add
mov
xchg
cld
add
adc
aam
sti
xlat
xchg
popa
scas
mov
fcomi
push
into
xchg
inc
clc
sub
cwtl
xor
lea
insl
xchg
fwait
push
cmp
xchg
inc
mov
jb
sub
dec
xor
mov
cli
adc
es
leave
jae
aad
pop
pushw
fdivl
addb
aad
and
out
js
mov
mov
jg
push
arpl
cld
lret
inc
jmp
xchg
and
inc
adc
in
push
xor
mov
cli
and
jae,pt
sbb
xor
fsubr
or
ret
enter
icebp
imulb
arpl
out
or
movsl
add
pop
cmpl
cltd
or
out
mov
xor
mov
inc
inc
jnp
shll
or
push
or
sub
adc
inc
sbb
popf
push
sbb
xor
add
addb
sbb
mov
push
xchg
dec
imull
push
sub
inc
inc
ljmp
cmp
fcoml
cmp
lea
pop
and
mov
mov
xchg
and
cmp
or
mov
cmp
jmp
cltd
sub
add
pushf
mov
pop
fimuls
arpl
addr16
mov
jo
cmpsl
sub
push
cmp
xchg
ja
sub
decl
mov
scas
rcll
roll
lds
pop
jmp
fs
or
popf
out
jl
adc
icebp
fwait
pop
call
inc
insl
cmp
lcall
clc
leave
insb
fiadds
push
jno
jbe
mov
aam
jne
push
sbb
rcrl
mov
pop
cli
mov
mov
xchg
cmpl
movsb
and
out
clc
mov
ds
jge
mov
sbb
mov
cs
push
and
into
jnp
pop
cmp
push
pop
adc
xchg
mov
movsl
jecxz
into
js
imul
pop
push
imul
lea
and
ds
xchg
inc
pop
inc
push
push
cmc
imul
jge
movsb
push
mov
aam
in
lret
gs
and
sbb
lahf
ljmp
shrl
in
xchg
aad
mov
pushf
sub
push
fmull
mov
mov
cmp
jmp
pop
push
ljmp
xchg
in
pop
shlb
scas
xlat
mov
call
push
roll
jne
mov
cmp
test
fcmovnu
fnsave
xchg
inc
xchg
mov
pop
mov
add
push
mov
xorb
mov
mov
inc
cmp
xchg
int3
sbb
inc
push
sub
fcmovne
fidivs
cmp
inc
jge
mov
lock
add
and
adc
and
mov
sub
inc
and
paddq
enter
push
cmp
sbb
les
mov
fbstp
mov
repnz
je
mov
mov
mov
fdivl
into
inc
mov
je
lret
jp
pusha
jmp
sbb
cmp
in
push
pop
orl
popa
dec
test
scas
xchg
cmp
xlat
fwait
shll
dec
nop
jae
mov
pop
jecxz
mov
jo
and
add
repnz
movsb
std
mov
ds
enter
mov
pop
xor
inc
mov
mov
popa
jecxz
movsl
inc
stos
and
mov
mov
pop
hlt
xor
sbb
pop
filds
xor
rol
shrl
nopl
fnstenv
stc
in
mov
test
in
push
inc
adc
cmp
xorb
adc
adc
or
and
outsl
mov
lods
pop
xchg
adc
outsb
stos
add
mov
xor
mov
push
dec
inc
enter
jle
cmp
jmp
out
or
xor
out
and
cmp
mov
out
xchg
insl
inc
hlt
pop
fwait
rorb
int3
mov
imulb
push
out
mov
dec
test
daa
pop
jle
and
fisubrl
jmp
psrld
mov
lea
dec
cs
adc
mov
mov
rclb
pop
imul
jp
push
aad
cld
sub
mov
push
xchg
or
add
fildll
imul
cmp
sbb
pop
or
loope
jmp
cwtl
mov
and
pop
in
dec
pushl
pop
xor
mov
mov
xor
loope
inc
pop
ja
rorl
xchg
sbb
in
sub
mov
sub
inc
xchg
mov
or
sub
push
jg
sbb
jbe
sbb
outsb
add
xlat
mov
push
sub
dec
jecxz
in
cltd
xchg
push
or
lcall
fistl
sti
mov
repz
insb
xchg
fdivl
xchg
js
pop
sub
ror
push
rcll
in
pop
or
mov
stos
popa
leave
popa
in
sub
fcomps
mov
mov
push
mov
ret
mov
sub
std
out
pop
les
and
cld
ret
icebp
arpl
insb
aam
pop
adcl
insl
dec
push
fidivrl
and
call
out
xchg
mov
cmp
inc
nop
js
cmc
arpl
inc
jbe
loopne
push
push
mov
cmp
adc
and
aam
imul
xchg
icebp
ror
xchg
lock
out
jp
lea
cmc
shll
pop
mov
sub
xor
fcmovu
movsb
sub
lds
push
fnstenv
dec
ljmp
add
cmp
dec
arpl
cld
add
sbb
lret
jns,pn
mov
mov
loop
xor
sub
rcl
fnstenv
mov
inc
mov
fistl
lahf
stos
lret
and
sar
sar
addr16
xor
sub
and
pop
inc
jle
inc
inc
repnz
aam
gs
repz
push
inc
lds
ljmp
stos
addb
jb
stc
push
aam
int3
and
popa
call
jecxz
push
int
jns
push
and
inc
jns
es
lcall
daa
mov
jo
cmp
addr16
cld
cmp
mov
mov
mov
xchg
dec
fwait
adcl
call
and
ficoms
mov
push
outsl
jae
and
pushf
inc
fwait
sbb
stos
and
xchg
fs
notb
lret
dec
sbb
nop
inc
mov
aaa
clc
fcmovb
inc
sbb
dec
push
or
inc
sub
jp
add
loopne
in
cmp
cmp
xor
jae
jmp
push
rcrb
jecxz
jae
mov
sahf
inc
adc
sub
scas
mov
or
out
ret
push
push
nop
pop
jg
jb
push
sbb
in
pusha
rcr
add
xchg
ss
adc
into
pextrw
in
movsl
lret
test
ficoms
fwait
lea
jne
shrb
xchg
inc
fidivrs
inc
mov
pop
sub
jle
insl
push
inc
mov
pushf
mov
sub
mov
sti
or
pushf
push
shlb
xchg
je
and
adc
cmp
iret
jmp
mov
xor
mov
dec
or
mov
lds
sahf
popf
mov
xchg
mov
test
pop
push
inc
push
pop
dec
dec
xor
out
push
call
add
out
pop
leave
push
cmp
pop
hlt
ja
loop
dec
and
notl
xor
outsl
mov
in
pop
pop
mov
mov
jge
mov
xchg
mulb
scas
rcrb
sub
mov
ja
add
nop
add
adc
decl
jo
cmp
ljmp
pop
cmc
pop
scas
mov
xor
mov
xchg
andb
bound
das
xor
lock
int
aam
repnz
and
pop
hlt
nop
adc
out
dec
jle
and
mov
cmp
inc
int
scas
push
adc
xor
pop
push
add
or
add
das
xchg
aas
pop
call
jmp
outsl
testb
xor
push
les
push
add
cltd
lods
lret
sbb
test
push
loope
mov
insb
inc
adc
and
insb
popf
lret
dec
sbb
jmp
sti
cmp
into
sbb
mov
jbe
mov
jecxz
popf
cli
xchg
inc
mov
inc
cmpsl
inc
dec
jne
xchg
dec
mov
xchg
and
adc
dec
rcrl
lret
inc
and
jp
cmp
les
jo
and
xorps
lea
xchg
movsb
mov
out
xchg
cli
test
movsb
and
repnz
hlt
test
mov
push
mov
or
dec
clc
add
mov
mov
jp
arpl
lds
repz
mov
fwait
jb
pop
sti
and
cli
cmp
pop
pop
cwtl
loopne
loopne
sub
test
hlt
xchg
sahf
push
jecxz
daa
and
aaa
jns
mov
cmpsb
out
sti
out
mov
and
push
shrb
and
lea
das
cmp
xlat
movb
and
dec
add
insl
xchg
outsl
push
popa
jge
mov
aad
cmpsl
repz
jbe
iret
loop
jecxz
jns
jg
dec
dec
jae
gs
cwtl
std
sbb
repz
xor
xchg
icebp
xchg
sub
popa
fwait
add
ret
jg
and
pop
push
jg
cmpsl
testl
fisubl
or
cmpsl
mov
cs
adc
fisttps
roll
jns
popa
xor
xor
push
enter
and
xchg
cmpsb
mov
mov
into
mov
sub
xlat
and
push
hlt
jns
jb
sbb
cmp
and
not
dec
ss
add
lea
pop
fsubs
xor
les
in
pop
stc
iret
imulb
inc
or
std
jno
inc
or
pushf
lahf
mov
jge
rcll
mov
repnz
xadd
aaa
ja
jle
imul
movsb
push
fwait
iret
pop
lods
pop
xchg
lods
add
stos
inc
xor
cmc
enter
scas
fwait
ds
push
out
sbb
sbb
adc
imul
punpckhbw
add
leave
repz
scas
xor
mov
or
fiadds
lods
in
pop
imul
sahf
mov
push
mov
push
xchg
scas
or
loopne
popa
sub
insl
pop
sahf
fnstenv
mov
pushf
sub
pop
push
hlt
mov
adcb
icebp
cli
push
bound
mov
aaa
cltd
dec
lahf
or
je
mov
scas
mov
jmp
scas
pop
mov
cmp
addr16
mov
adc
add
mov
stos
pop
jae
jne
es
and
lock
cli
mov
lcall
xlat
fisttpll
cltd
mov
int
mov
gs
lea
ljmp
jp
pop
call
or
insl
add
add
mov
xchg
pop
xchg
mov
mov
ljmp
fisttps
call
mov
mov
pop
out
pushfw
pop
gs
gs
xchg
sub
iret
lods
sarb
cmp
jae
sbb
sti
mov
mov
fsubl
sahf
add
xchg
sbb
fdivs
pop
stc
sti
lret
jl
movsl
int3
sub
std
cmp
shl
xchg
pushf
addr16
xor
cli
add
mov
jl
lock
adc
xor
push
repnz
cmc
pusha
addr16
sub
int3
cmp
or
subb
add
out
or
rcrl
add
mov
add
clc
push
dec
cmpsb
fldcw
or
mov
push
fcoml
jns
cmpb
xchg
arpl
bnd
pop
cmpsl
mov
and
xchg
pop
push
ljmp
cmp
repz
fisttps
test
or
cmp
sarb
insl
in
cli
jge
mov
fidivrs
xlat
jmp
push
jg
insl
lods
push
pop
jo
lods
dec
jmp
scas
fdivl
adc
cmp
sti
das
or
loope
dec
lods
mov
sub
ja
out
dec
or
icebp
jmp
addr16
xchg
xchg
imul
ljmp
mov
mov
sbb
mov
jne,pn
popf
jg
mov
shll
xor
iret
dec
sti
sub
or
movsb
cli
lods
imul
negb
jo
cmpsl
loopne
or
mov
pusha
and
or
cmp
cmc
mov
fbstp
mov
jle
inc
in
adc
sbb
loop
pop
mov
popf
je
dec
xchg
add
mov
in
repnz
inc
sbb
les
js
mov
jmp
das
pop
push
cs
xor
test
imul
jns
bound
icebp
sbbl
or
mov
jo
addl
loope
arpl
sahf
popf
xchg
mov
dec
or
sbb
stos
jbe
push
mov
mov
jmp
popa
ljmp
shl
mov
xchg
js
pusha
xchg
call
fiaddl
cmp
mov
pop
jo
lret
pop
push
ja
add
rorl
or
sbb
std
inc
mov
pop
dec
nop
pop
into
cld
mov
mov
in
icebp
dec
ret
dec
clc
sub
add
rcll
ljmp
adc
mov
rcrl
pop
push
pop
pop
nop
push
cmpsl
adc
dec
xchg
mov
mov
lret
rclb
sti
add
inc
cmpsb
rcrb
cli
lahf
scas
cmp
add
xchg
std
sub
dec
add
mov
dec
and
aas
enter
sub
inc
popf
push
lahf
dec
fdivl
lods
int3
xchg
lock
or
lret
iret
es
mov
sbb
mov
xchg
jmp
cltd
mov
xor
ljmp
aas
lods
mov
jo
inc
jle
fwait
pop
mov
mov
and
sbb
inc
adc
lds
mov
mov
jbe
xor
jge
pop
scas
pop
xchg
sbb
xchg
aas
sub
arpl
test
call
or
xor
adc
test
cmovle
cmp
les
mov
outsl
mov
adc
mov
mov
push
sbb
and
xchg
pop
cs
cld
mov
add
mov
jae
xchg
je
xchg
dec
pop
outsb
xchg
jbe
xor
dec
sub
cmc
cmp
pop
sub
adc
lcall
inc
jge
movsb
std
les
push
jbe
pop
mov
mov
lahf
mov
mov
call
push
cltd
jp
mov
hlt
scas
scas
movsl
das
ror
sbb
stc
xchg
sti
movsl
rcrb
mov
scas
testl
xor
cltd
cmp
insl
outsb
in
push
or
add
repz
dec
pop
imul
sbbb
push
imul
pop
pusha
fs
testb
fbld
pop
pop
jl
xchg
insl
test
enter
xchg
jns
jg
fcoml
fdivl
xchg
sub
ja
dec
jns
xor
scas
loopne
cmp
inc
hlt
test
popf
pop
sbbl
jg
adc
cs
sub
push
jns
loope
jg
popf
pop
xchg
ja
and
repnz
rclb
repz
mov
adc
xchg
out
movsb
int
xor
xor
scas
jmp
xchg
fisubrl
pop
leave
xchg
push
xchg
mov
pop
mov
ret
xchg
or
test
outsb
popa
rclb
jge
arpl
notb
fsubs
mov
in
push
mov
dec
dec
loop
lcall
push
xchg
pop
imulb
add
mov
fs
adc
inc
mov
insl
mov
fs
and
push
jle
cmc
xor
push
pushl
jmp
lahf
jns
xor
ficomps
sbb
lret
test
mov
or
fsubrl
ds
into
and
and
push
ret
dec
mov
xchg
xor
dec
negw
cmpsl
ret
testb
out
cmp
cmp
loop
fnstcw
fimull
xchg
stos
test
and
loopne
or
push
mov
in
iret
xor
mov
movsb
adc
jp
pop
cmpsl
pop
xor
cmp
mov
scas
in
ja
daa
repz
or
in
mov
out
pop
dec
test
mov
out
cmp
mov
daa
into
add
test
test
pop
frstor
inc
pop
lahf
jno
mov
mov
sub
xchg
je
jnp
nop
sbb
test
push
sub
cmp
out
inc
adcl
push
pop
fldt
test
insb
jo
push
push
movsb
sbb
cmp
dec
cmp
jecxz
jge
fdivrp
cmp
jl
jl
xor
sbb
dec
dec
sbb
insb
fisubrs
lcall
loop
adc
arpl
fisttps
xchg
add
cmpsl
cmpsl
sub
frstor
xlat
inc
imul
pop
hlt
lret
insl
loopne
insb
scas
out
or
cwtl
sbb
sbb
mov
or
sub
or
mov
in
lahf
dec
mov
js
leave
mov
xchg
sub
test
mov
popa
push
mov
stos
rcrb
shll
push
dec
mov
dec
or
pop
mov
dec
mov
repz
ljmp
mov
add
shll
ja
jle
fstpl
fsubl
lock
outsb
jmp
imul
cmp
sarb
in
jmp
stos
mov
call
dec
fdivrl
test
xor
pop
push
sub
or
std
cmp
pop
mov
push
pusha
mov
push
iret
push
decl
jbe
dec
test
leave
mov
jae
pop
pop
cs
mov
and
sub
xor
inc
inc
dec
push
aad
jl
or
mov
fisubrl
ds
xorb
test
sub
ficomps
icebp
cld
push
mov
imul
movb
xor
in
or
scas
insl
fsubrs
push
inc
add
xor
pop
leave
mov
out
repnz
fmul
add
xlat
fs
stos
pop
ffree
test
adc
ja
push
mov
pop
loope
pop
lods
pop
cmp
lods
push
cmp
jno
bound
jns
pop
xor
xchg
fcoml
cmp
jl
insb
dec
lods
movsl
adc
imul
sahf
icebp
jno
push
dec
fbld
push
cwtl
fdiv
les
popa
bnd
pop
int
xchg
add
xchg
jge
int3
sbb
pop
push
aad
jp
pop
je
xor
rcll
into
cmp
jne
or
mul
pop
and
test
ja
mov
dec
fildl
adc
xor
je
in
mov
loopne
lret
idiv
pop
push
mov
jle
popf
add
or
and
fisubrs
push
rcrl
push
hlt
push
xor
fimuls
test
aaa
lods
out
push
lds
sbb
jae
pop
or
sbb
cld
nop
aam
jne
or
dec
int
cmpl
push
add
out
ljmp
repnz
scas
xlat
mov
into
shr
fcomps
repz
jne
aaa
cmpsb
pop
stos
adc
incb
xor
in
mov
sahf
stos
lret
jmp
daa
cmp
iret
mov
popf
mov
hlt
add
aas
jno
mov
cmp
int3
cmp
test
aad
ret
imul
push
xchg
aam
ds
xor
jns
stos
cmp
pushf
and
jge
cltd
pop
stos
jnp
fdivrl
sbb
pop
loopne
addl
adc
test
add
mov
add
imul
fwait
outsl
jns
lcall
arpl
and
pop
pop
int3
jge
push
fstpl
xor
sub
sbb
sti
imul
lret
jnp
xor
add
xchg
mov
xor
push
dec
shlb
cmp
sbbb
cmp
iret
lret
out
inc
jg
mov
jns
pop
subl
mov
pushf
pop
xor
push
jl
mov
mov
shll
xchg
fcmovu
cmp
or
adc
test
mov
ja
mov
out
pop
test
lock
pushf
sahf
pop
mov
lret
cmp
in
ja
mov
adc
les
inc
add
fmul
sbb
clc
scas
es
popa
dec
dec
xor
mov
leave
add
repnz
adc
xor
imul
and
mov
xchg
lods
cmp
xor
mov
xchg
dec
ret
in
push
inc
sbb
dec
add
mov
cmc
aam
mov
add
pop
mov
xchg
or
jb
xor
or
cmp
mov
cs
imul
negl
notrack
xor
inc
sahf
sbb
inc
pop
or
mov
pusha
mov
loope
insb
sbb
andl
xchg
lcall
inc
lret
rcll
sbb
push
ficompl
mov
jmp
call
dec
xor
sbb
xchg
clc
loope
mov
jbe
xchg
fs
mov
pop
pop
divb
das
or
adc
pop
repz
movsl
inc
mov
ja
sahf
sahf
xchg
loopne,pt
xchg
push
jle
and
inc
push
inc
lret
ds
jnp
scas
lds
or
mov
pop
sbb
leave
test
repz
leave
xor
xlat
ljmp
mov
shr
repnz
jno
rcrb
cs
iret
ds
lret
pop
xchg
cmp
sub
and
xchg
jge,pt
mov
xchg
fsts
fistps
push
ret
mov
xor
les
insb
out
pop
push
gs
xor
mov
dec
xchg
shll
andb
jne
sub
scas
ljmp
dec
mov
pop
jge
cli
add
jecxz
jmp
mov
clc
sarl
jge
aaa
out
loop
into
repnz
xlat
ss
popa
mov
pop
out
test
push
pusha
push
imul
cmpsb
test
dec
jae
mov
dec
aas
push
fdivs
sub
fisubrs
mov
pop
push
lods
bound
jp
mov
test
adc
inc
fisubrl
aad
movntq
test
cmp
and
fisttpll
and
cmp
mov
in
mov
mov
stos
or
or
or
rep
jp
or
jne
js
push
mov
pop
int
nop
test
jecxz
push
xchg
clc
lea
xchg
stc
cmp
fwait
cmp
inc
mov
push
popf
or
sbb
xor
dec
in
jne
mov
into
aam
imul
jo
sbb
or
jmp
call
lock
and
add
jne
fdivrs
push
cmc
mov
mov
popf
mov
pop
pop
pop
and
xlat
xor
aas
leave
and
xchg
sbb
cmp
xchg
js
mov
cwtl
inc
xor
cwtl
aas
sbb
cli
fistpl
mov
sbb
add
push
pushf
push
xor
add
jp
or
subl
jns
in
gs
pop
mov
dec
cmpsl
cmp
jno
pop
bound
pop
jno
mov
dec
gs
push
je
jae
arpl
lret
movsb
out
or
loopne
push
jnp
out
jmp
ret
jg
and
movsl
rcll
push
mov
ret
scas
clc
dec
push
cmpsl
dec
idivl
je
add
push
ja
pop
push
insl
mov
inc
push
inc
add
out
decl
iret
arpl
mov
jo
mov
adc
pop
mov
xor
push
mov
and
push
lcall
ret
lds
sbb
call
jae
inc
xlat
pop
pop
lods
aas
jo
jb
and
xor
xchg
xchg
cmc
dec
mov
xchg
call
mov
adc
fnsave
and
sub
mov
test
jo
jns
sub
cmp
mov
shrl
out
inc
insl
xor
lret
mov
jne
out
jbe
cld
pop
xchg
loopne
add
das
push
aas
test
cmp
adc
leave
clc
jae
int3
stos
sub
jb
sbb
inc
movsl
enter
push
push
mov
jl
mov
lret
jl
icebp
cli
add
cmp
xchg
iret
jb
clc
xchg
mov
insb
in
iret
fldenv
push
inc
std
add
or
stos
dec
jnp
push
stos
movsb
and
xor
fsincos
ds
mov
jnp
pop
out
cmp
repz
cltd
je
pop
jg
popa
mov
lock
mov
out
loope
xchg
xchg
mov
iret
mov
out
shll
dec
in
lret
imul
movsb
mov
adcl
jne
pop
mov
out
insl
add
rcl
xor
mov
decb
mov
sbb
mov
out
aad
cltd
or
sahf
adc
push
mov
add
ss
mov
int
lods
popf
sbb
loopne
out
push
pop
pop
xchg
mov
cltd
lahf
adc
mov
pop
clc
cmp
popf
scas
add
xchg
lods
fsts
and
jp
lret
addl
mov
pushf
scas
sbb
faddl
mov
cmpsl
dec
sarl
cltd
push
jmp
xchg
data16
dec
xor
sbb
lods
dec
in
jo
fwait
sub
xchg
gs
or
pop
sahf
jne
mov
outsb
add
xor
and
cld
not
mov
ds
aaa
or
lds
add
stos
fs
std
lahf
mov
inc
push
repz
push
inc
arpl
jmp
imul
jne
dec
clc
pop
sbb
or
iret
arpl
push
pop
xor
pop
out
bnd
divl
push
jge
add
mov
push
es
push
fbstp
imul
cmp
fwait
insl
add
int
into
inc
xchg
sti
call
fldcw
stos
add
xor
mov
dec
imul
push
mov
adc
ds
push
or
out
jnp
mov
out
xchg
jae
sbb
test
insb
pop
dec
push
fdivs
xor
mov
aad
adc
push
test
inc
repz
jmp
mov
xchg
sub
pop
mov
mov
mov
cmp
call
jnp
orb
sbb
and
popf
scas
jmp
and
or
shlb
movsl
sub
imul
inc
and
push
push
lahf
cmp
rcl
jns
std
and
mov
dec
aas
sbb
clc
daa
xchg
aam
lea
mov
ret
les
push
dec
es
add
popf
shl
stos
jae
jns
rorb
inc
lods
outsb
test
pop
cmp
mov
inc
pop
std
gs
cmpsl
push
mov
xchg
pusha
subb
xlat
fldl
add
es
push
xchg
jae
push
mov
jne
shrl
or
pop
insl
out
xchg
call
aaa
lret
xor
push
mov
xchg
cmp
lods
cmp
fcoms
jle
lcall
add
and
push
stos
scas
push
incb
repnz
in
and
lret
inc
std
int3
dec
fs
sub
jae
sub
adc
push
xchg
xchg
scas
mov
fcmovbe
repnz
out
inc
icebp
jge
pusha
dec
rcrl
in
dec
push
push
pop
les
cli
jg
pop
mov
jecxz
or
push
push
aad
add
movsl
mov
cmpsb
cmp
jns,pn
pop
test
jns
aam
outsl
inc
pop
cmp
jnp
pop
mov
add
push
mov
pop
mov
test
cmp
addr16
mov
sahf
sub
popf
mov
adc
or
shl
imul
scas
push
arpl
sbb
outsb
jne
roll
mov
mov
subl
mov
out
jg
pop
ret
sub
into
push
stos
icebp
ret
jo
stos
xchg
lock
loop
mov
jecxz
sub
xorl
loope
in
dec
cmp
jne
lret
lea
fisttpll
popf
shll
fisubl
popa
cmp
rcl
mov
inc
inc
mov
jns
sahf
dec
cmp
xchg
icebp
fs
cltd
subl
xchg
mov
mov
ret
stos
fwait
cli
sarb
inc
mov
fsubrs
jnp
or
out
dec
xchg
jmp
push
jg
pop
stos
or
sbb
or
nop
mov
or
sbb
xchg
je
pop
sbb
loop
adc
outsb
add
sar
gs
iret
xorb
sub
cwtl
jg
dec
into
incl
dec
pop
mov
stos
outsl
dec
xchg
jl
das
sub
enter
cwtl
sbb
lret
lods
rcll
in
gs
lret
gs
sbb
popf
and
push
cmp
inc
mov
add
addl
ds
dec
cmpsb
sub
jecxz
jl
inc
and
ret
popa
push
lea
pop
mov
mov
cs
mov
dec
movsl
pop
mov
mov
cli
icebp
xchg
cmp
fldpi
fimull
in
in
pop
aaa
fwait
subb
xor
mov
fs
ficomps
cmpsb
nop
jno
daa
xor
sub
cmp
stos
pusha
mov
stos
jo
lods
call
je
aad
or
pushf
jo
add
out
fnstsw
sub
push
push
and
xchg
sub
adc
sbb
cmp
mov
std
push
notl
and
enter
aaa
xorb
aad
insl
hlt
jbe
cmpb
repnz
add
pop
clc
mov
in
int3
push
das
dec
sti
sbb
add
ficoms
push
outsb
pop
pop
add
imul
push
mov
and
stos
jecxz
jecxz
pop
mov
mov
push
jno
jo
jns
sbb
lds
jo
jge
dec
fmull
scas
cmp
ljmp
stos
ret
ja
data16
rcrl
cs
out
js
jne
dec
xchg
lods
xchg
lods
and
iret
sub
pop
mov
cmc
push
push
movsl
ret
popa
mov
sbb
and
push
mov
icebp
stos
in
lea
fcomip
push
in
cmp
shl
mov
testl
adc
inc
fs
sahf
sarl
sbb
pop
and
out
pop
test
test
sub
jmp
ret
and
adc
fcoml
or
mov
test
xor
xchg
sbb
ds
xchg
pop
cwtl
adc
imul
int3
push
cmp
orl
mov
inc
xor
fisubs
add
fisubl
xlat
cmp
addr16
xlat
mov
mov
and
jl
leave
xchg
xlat
dec
sub
xchg
fcmovb
add
cltd
mov
xor
jae
inc
sbb
xchg
sbb
push
xchg
cld
jbe
ret
int3
jnp
ret
test
lcall
inc
add
test
jecxz
add
jno
mov
out
adc
jmp
fildl
cld
std
pop
jnp
ret
push
stos
es
dec
insl
enter
aam
and
mov
mov
push
fdivl
adc
js
mov
outsl
dec
outsl
repnz
ljmp
mov
add
ret
jle
pop
adc
dec
in
push
aam
fmuls
popa
mov
pop
xchg
int
imul
inc
movsl
xchg
cmp
sub
data16
xchg
mov
jnp
push
inc
stos
fisttpll
mov
mov
xor
ljmp
jl
movsb
filds
pop
adc
in
or
mov
mov
mov
push
and
ds
cmp
jno
sub
mov
mov
fbld
push
imul
and
mov
test
arpl
ficomps
std
test
push
nop
or
aam
out
mov
dec
movsb
fiadds
andb
repnz
sbb
dec
ss
bnd
add
adc
repz
sbb
cmp
mov
sarb
ret
sub
add
dec
iret
inc
jmp
ret
ret
xchg
cs
gs
clc
loopne
ja
dec
pop
js
sarl
movsl
dec
inc
cs
fcomps
xor
xor
adcl
loope
pop
mov
jne
xor
sub
pop
push
jo
inc
adc
jno
fmull
push
add
add
pop
in
dec
jae
outsb
sub
pop
test
push
sbb
xor
pop
dec
mov
or
loop
mov
jmp
adc
pop
xchg
dec
adc
pop
into
aad
mov
in
add
repnz
inc
ds
nop
aaa
daa
pop
dec
cltd
int
xchg
add
pop
lcall
int
mov
pusha
mov
sub
fadd
cmpsl
adc
dec
ret
out
mov
sarl
jl
add
jns
jo
and
sbb
mov
push
add
fxtract
add
lcall
cmpsb
incl
pop
test
xchg
jp
es
mov
mov
push
mov
sbb
loope
dec
adc
into
mov
lahf
aad
cltd
filds
push
pop
and
xor
rol
aam
push
shl
jno
pop
jecxz
filds
insb
fisubrl
xor
scas
or
test
cmp
push
xchg
or
mov
inc
mov
add
xchg
icebp
jnp
add
sahf
or
fistps
lock
lret
push
lret
lahf
cmpsl
cmp
sub
fdivrs
mov
sbb
xchg
mov
jae
jmp
xchg
add
push
test
mov
or
xchg
sub
push
data16
or
mov
sub
dec
aas
sahf
push
imul
lea
mov
roll
test
dec
mov
xchg
sti
and
inc
fdivl
xor
xorl
and
mov
jno
mov
jo
xchg
movsb
xor
and
mov
fisubl
in
stos
pop
scas
dec
pop
jns
inc
pop
push
insb
jb
sbb
pop
insl
ret
bound
and
pop
mov
cmp
mov
cmc
out
jge
shrb
fcoml
pop
add
pusha
stc
dec
out
dec
xchg
shlb
push
xchg
dec
in
lea
cmp
xchg
and
aad
lcall
lahf
adc
dec
ja
fsts
or
loopne
lods
mov
aad
inc
push
mov
pop
pop
lcall
leave
adcb
and
push
sub
jg
pushf
aas
int3
fwait
sbb
mov
and
fstpl
iret
mov
rclb
mov
frstor
rcl
imul
movsl
push
aad
rclb
jecxz
inc
jo
and
jp
bound
out
aas
in
pop
stos
lea
cmpsb
lret
jmp
push
xchg
mov
mov
sbb
pop
stc
movsb
lcall
inc
or
dec
fcom
in
inc
gs
pop
adc
add
loopne
and
mov
cwtl
mov
push
jo
enter
mov
or
in
or
inc
fdivrl
cltd
fnsave
pop
mov
mov
xchg
imul
sub
inc
lret
add
arpl
stos
sub
leave
mov
push
sub
jmp
sahf
mov
inc
xchg
outsl
call
xlat
into
mov
push
mov
cli
fiaddl
stc
scas
jl
pusha
sub
shl
sub
xor
dec
dec
push
push
outsb
cmp
mov
addb
sub
outsb
mov
jb
push
data16
test
loope
xor
xchg
sbb
adc
mov
test
push
roll
pushf
mov
lahf
or
mov
push
lcall
jmp
fwait
xchg
lds
mov
jp
push
add
sub
fsubrp
push
aaa
rcrb
sbb
lock
insl
jl
mov
mov
mov
jb
jge
nop
fdivrp
cmp
stc
or
pop
andb
sub
lret
jmp
and
lock
xchg
test
imul
xor
adc
dec
sub
test
pop
into
test
or
ja
jmp
mov
sub
in
mov
and
rclb
pop
and
arpl
out
in
xchg
jg
dec
int3
stc
mov
rol
lea
mov
xlat
pop
xchg
xchg
xorb
andl
inc
inc
and
push
loop
pop
int3
sub
xchg
jp
push
cmp
iret
add
add
cmp
testb
loop
je
insb
pop
pop
test
cmp
pop
push
sub
jp
push
js
mov
mov
lods
test
xchg
add
rorl
or
xchg
xor
cwtl
out
leave
add
adc
mov
and
push
push
lcall
mov
or
cmp
ret
pop
mov
add
lea
adc
sti
adc
and
int
mov
pop
push
sub
push
ljmp
nop
pop
mov
mov
mov
fldt
lcall
cmp
cmp
pop
imul
sub
pop
sub
cmp
mov
call
mov
pop
test
gs
je
popa
fldl
std
test
mov
mov
xor
cmp
jg
xchg
mov
aas
xchg
dec
imull
pop
and
ret
imul
fisubrl
fs
sbb
xchg
subb
cmp
mov
clc
xor
popf
cmp
jne
loop
inc
sbbb
pop
ljmp
int3
inc
mov
cmp
xor
xchg
fistpll
fisubs
inc
lret
pop
aas
xchg
repz
xor
add
mov
or
or
push
sti
dec
fists
xchg
sub
test
ds
lret
fnsave
call
mul
mov
out
push
andl
dec
lret
cmp
into
repz
mov
mov
cmpsl
bound
pusha
ja
fstps
and
jbe
inc
inc
jl,pn
cmpb
or
cmp
and
xor
bound
imul
add
mov
push
sbb
push
sbbb
shr
cli
pushf
lret
loopne
xchg
movsl
nop
call
rol
popl
pushf
mov
sbb
loope
fisttpl
xchg
cmp
inc
mov
cwtl
sbb
cmp
pop
and
lahf
cltd
sbb
lock
cmp
inc
fwait
jle
out
fs
pop
jbe
pop
je
pop
mov
adc
arpl
pop
jmp
xchg
mov
sbbb
push
repnz
enter
mov
fnstcw
add
mov
es
xchg
int
std
cmc
jp
es
shlb
mov
xchg
inc
out
jb,pt
xor
in
dec
lods
inc
aad
ss
xchg
add
push
cmpl
shrb
mov
push
ljmp
mov
dec
mov
or
lods
fiaddl
xchg
imul
adc
jnp
cmp
mov
fiadds
scas
mov
mov
leave
jne
lock
or
sub
lock
negl
or
lcall
xchg
lock
outsl
cmpsb
scas
test
aaa
lahf
lret
mov
neg
mov
inc
pop
inc
mov
outsl
jno
mov
les
cmp
or
sub
xchg
ret
into
dec
mov
in
ffreep
xchg
xor
in
ja
adc
add
sub
mov
jecxz
and
rcll
add
cld
movsb
mov
fwait
xchg
loope
mov
cmpsl
stos
test
dec
out
fisubs
outsb
xor
jecxz
andb
rol
or
dec
das
sbb
push
pop
and
pop
std
mov
push
lahf
push
dec
inc
push
adc
pop
push
shll
ud2
pop
outsb
seta
and
xchg
lcall
mov
movsb
sbb
jl
int3
adc
dec
je
and
pop
shlb
inc
sti
push
xchg
jmp
dec
mov
or
xor
inc
sub
xor
pop
or
cmp
into
push
aam
add
mov
lcall
mov
sbb
and
inc
shll
call
les
jg
roll
clc
jnp
xchg
fidivrs
sbb
out
imul
xlat
pop
pusha
pop
xchg
jno
dec
sahf
sub
adc
sub
and
in
jge
push
xor
push
and
mov
mov
push
mov
sbb
jge
add
ds
push
or
xor
faddl
cwtl
fs
test
sbb
or
fisubs
fstps
jae
mov
testb
arpl
or
pop
je
sbb
std
fdivr
xchg
test
pop
and
lock
popa
stos
hlt
adc
cmp
push
gs
push
push
push
aas
insb
inc
lcall
popw
xchg
mov
lods
jno
mov
jecxz
outsb
fistl
push
out
test
pushl
xchg
sbb
popf
push
outsl
jns
data16
or
jns
xor
dec
hlt
iret
push
mov
xchg
push
subb
adc
int
daa
mov
jb
pop
inc
mov
lds
mov
add
aad
addb
imul
dec
sahf
cmp
pop
xchg
test
cmp
cltd
pop
push
xchg
dec
dec
pop
xchg
xchg
xor
pop
or
mov
mov
pop
xchg
mov
add
mulps
popa
mov
cs
jg
adcb
pop
dec
lret
cltd
clc
fidivrl
inc
sahf
mov
mov
clc
cwtl
adc
xor
jae
cltd
cmp
cmpsb
insb
mov
fmuls
cwtl
mov
pop
arpl
das
xor
js
adc
lods
adc
pop
cmp
jbe
rclb
lea
repz
cmp
xlat
xlat
daa
lret
mov
push
fs
or
mov
mov
popf
je
addr16
andl
mov
lahf
lock
mov
mov
jne
adc
call
cltd
push
push
xlat
and
test
stc
xor
mov
mov
fisubl
xchg
movsb
pushf
lahf
and
insl
fisubrs
ss
test
and
aam
pop
std
fwait
pop
dec
lods
cmpsb
push
pop
cmp
push
lock
movsb
movsl
mov
test
push
icebp
add
and
cmpl
cmp
ret
push
sub
mov
ds
cmp
scas
jno
sub
xchg
popa
cmc
adc
and
cmp
jne
mov
lea
pop
cltd
add
mov
leave
aas
stc
pop
insb
lods
cmp
sub
je
dec
sbb
iret
ficoms
lock
lock
into
test
sub
inc
ffreep
pop
lret
push
out
or
int3
pop
cmpsl
push
mov
psraw
xchg
pushf
aas
sbb
lock
adc
aam
lret
movsl
pop
mov
sub
push
gs
sti
ficompl
cmp
or
fisubl
and
daa
arpl
mov
dec
push
stos
out
sbb
cli
test
xor
nop
int
sbb
je
adcl
mov
pop
sub
bound
sti
mov
xor
pop
addr16
pushf
adc
push
movsb
push
enter
aad
fcmovnu
hlt
adc
or
and
inc
jae
and
pop
xchg
fistl
cmp
je
out
sahf
pop
add
xor
arpl
and
pop
scas
add
lock
imulb
ds
js
and
xchg
jns
in
cmp
aam
iret
cmp
es
shlb
push
mov
dec
insl
paddsw
ja
pop
push
movsb
mov
cmp
or
fistl
sbb
mov
add
out
inc
or
decl
roll
fcomps
xor
mov
mov
int3
mov
sub
jmp
out
loope
xor
inc
add
lock
shrb
or
jl
dec
out
in
fdivrl
call
cmp
add
lods
inc
daa
cmp
xchg
xchg
movsb
stos
mov
mov
push
iret
shrb
mov
adc
xchg
adc
or
add
stc
jecxz
insl
mov
xchg
out
jmp
mov
inc
adc
sub
push
addb
jge
add
cmp
mov
cmp
imul
jnp
cmp
sbb
hlt
addb
movb
cmp
xor
cmp
andb
aaa
sub
adc
arpl
or
mov
xchg
rorb
out
rcll
cmp
cmpsl
nop
mov
insb
dec
pop
imul
lds
push
xchg
scas
mov
enter
pop
in
cmp
xor
xchg
jmp
outsl
arpl
xor
mov
xchg
and
ss
cli
and
sbb
lahf
xchg
and
repz
loopne
jle
les
push
mov
lret
jge
loope
and
xor
jns
dec
addr16
adc
out
js
repz
xlat
jnp
mov
dec
xchg
popa
jb
push
or
scas
jp
ljmp
fdivs
outsl
xchg
iret
ret
xor
imul
clc
ret
gs
dec
pop
roll
cmp
pushf
addr16
lahf
sbb
push
addr16
pop
jg
lcall
push
addr16
xor
pop
lcall
loopne
push
xor
dec
adc
jmp
sub
lret
adc
adc
lods
sbb
in
and
rolb
cmpb
cmp
xor
mov
xorb
push
mov
movsb
adc
or
lods
outsl
hlt
xchg
mov
push
sub
ret
xacquire
sbb
shr
mov
jl
jne
mov
sarb
repnz
mov
mov
loop
fistl
xor
mov
pop
or
cli
xchg
imulb
popa
mov
xor
leave
or
sti
test
je
xor
aaa
aaa
outsb
and
jb
pop
xchg
das
adc
lret
push
jl
or
cs
pop
sbb
in
loopne
mov
cld
add
jae
sub
imul
inc
xchg
inc
test
pop
and
pop
jecxz
or
adc
push
fcomip
mov
xchg
aas
sub
adc
shrb
xchg
in
xor
and
test
lods
fildll
pop
lcall
sahf
or
xchg
std
push
popf
dec
xchg
sbb
faddp
xor
sbb
fwait
icebp
sub
push
lds
jle
fs
scas
lds
and
cmpsl
cmp
jbe
dec
ja
icebp
push
cld
xor
mov
dec
and
sahf
sub
or
jmp
xchg
fldl
out
sub
fsubl
cmc
sbb
loop
pop
pop
incb
pop
inc
aas
push
mov
out
call
push
lret
pop
dec
mov
and
pop
lea
jnp
bound
ret
or
cmp
mov
xchg
xor
orb
sub
mov
sbb
cmp
inc
and
inc
daa
aad
xchg
jo
xor
into
jmp
call
mov
mov
jl
or
testb
cltd
xorb
jl
dec
add
mov
je
out
gs
ds
adc
int3
int3
mov
cwtl
xchg
inc
add
clc
jge
out
jb
pop
adc
pop
jnp
jnp
aad
mov
dec
lcall
push
mov
ret
dec
inc
lea
sub
mov
add
or
push
jbe
pusha
cltd
or
jp
push
mov
xor
cmp
jb
push
adc
test
xor
lcall
leave
adc
add
xor
ds
loope
imul
imul
loope
shll
pop
gs
in
or
mov
aad
xchg
sbb
sub
aas
cs
mov
sub
and
lods
push
data16
push
and
sub
mov
push
jmp
mov
sbb
adc
sar
push
iret
jbe
pop
cmp
dec
repz
push
inc
or
fdivl
xchg
inc
jle
adc
dec
cmpsb
push
sbb
out
sbb
jl
cmp
cmp
or
jno
sbb
enter
push
mov
imul
dec
fnstcw
rorl
mov
sbb
and
mov
das
adc
xor
mov
push
pop
in
adc
inc
mov
jge
dec
dec
int3
cmp
xchg
sbb
ljmp
js
sti
mov
pop
lods
or
xchg
lcall
push
pop
mov
pushf
pop
or
xlat
popf
gs
icebp
mov
es
and
pop
mov
cmp
dec
lds
xlat
and
adc
sub
dec
icebp
jno
ljmp
pop
and
push
push
inc
cmp
add
push
js
cmp
mov
xor
xchg
movsl
imul
notb
mov
xchg
add
adc
jo
icebp
jno
xchg
stos
test
mov
mov
loop
mov
decb
jb
decl
loop
mov
shl
cmpsb
add
ljmp
js
insl
cmp
and
pop
inc
pop
fistpl
cltd
xchg
lret
pushf
insl
jmp
fdivrl
outsl
mov
ss
mov
repz
and
fwait
xchg
test
push
add
add
faddl
cmpsb
mov
mov
ds
test
add
and
daa
pop
sbb
leave
or
aam
xor
shl
and
into
outsl
aam
cmp
insb
push
hlt
xchg
inc
fucomip
cmpsl
lock
iret
xor
ss
mov
ror
xchg
cmp
std
negl
inc
pusha
xchg
mov
ljmp
outsl
xchg
mov
add
cs
pop
sub
pushf
mov
jo
sbb
xor
in
pop
push
pop
sbb
or
shrb
daa
les
dec
or
je
nop
sub
jle
xchg
fwait
mov
xchg
js
sbb
inc
notl
das
mov
mov
sbb
xchg
inc
clc
xchg
adc
out
push
or
and
ret
lahf
sbb
adc
addb
push
pop
mov
cltd
fsub
in
dec
mov
ret
adc
mov
jb
dec
clc
mov
mov
mov
cli
clc
inc
sbb
jo
pop
in
cli
cmp
mov
xor
cli
das
pop
sbb
in
fmulp
xchg
repz
adc
and
sbb
push
not
insb
pop
cmp
lds
fidivs
lds
pop
sbb
mov
push
mov
xchg
inc
pusha
adc
add
in
outsl
xchg
jecxz
dec
out
repz
inc
std
sub
xchg
lods
add
aam
push
test
add
xchg
lods
sub
and
test
push
xchg
bound
push
push
jne
or
mov
js
aaa
in
ret
sub
adc
je
add
mov
mov
or
and
cmpsb
fwait
adc
outsb
inc
jnp
push
cwtl
jne
or
jnp
mov
mov
cld
mov
pop
loope
and
divl
add
nop
jle
pop
sub
jp
pop
popa
movsb
stc
sahf
addb
xlat
mov
int3
fcmove
pop
mov
fmuls
das
mov
fcomi
add
xor
or
adc
in
push
sbb
mov
lods
push
gs
mov
cmp
push
test
rcrl
mov
daa
jp
fsubrs
in
adc
sarl
hlt
les
sbb
pop
test
cmpsl
add
das
stos
jg
and
hlt
jp
sub
mulb
scas
xchg
aam
xor
int
fbstp
mov
pop
mov
jne
sub
outsb
add
stos
js
xchg
repnz
mov
loopne
popa
and
orl
push
or
sarl
cli
mov
lret
mov
sarb
or
shr
xor
lods
psubb
pop
movsb
pop
adc
xor
out
mov
mov
int3
mov
mov
jecxz
test
repz
stc
xchg
and
mov
lock
aas
loopne
test
mov
data16
enter
push
negb
inc
mov
fdivs
xor
add
and
xor
xchg
daa
popa
sbb
test
movsl
sti
jae
test
sbb
imul
repz
std
sbb
and
add
enter
pusha
dec
fldenv
shll
adc
es
lret
insl
cmc
cmp
mov
and
cmovo
imul
pop
or
es
loop
jns
ja
mov
inc
xchg
ret
push
jae
in
jg
dec
sub
dec
nop
jmp
gs
ja
sub
mov
cmp
adc
add
popf
or
lock
jl
and
das
outsl
mov
or
pusha
enter
cmc
mov
jl
fwait
jae
adc
push
inc
jbe
jns
sbb
dec
mov
xor
mov
test
ror
into
push
jne
sub
popa
fcmovne
sub
cmp
out
lea
xchg
adc
mov
pop
shrb
iret
inc
add
cmp
cs
xchg
xchg
aas
mov
loop
imul
jl
insb
sbbb
and
sub
push
xor
mov
aas
fcomip
xchg
imul
sub
ret
cltd
sbb
cmp
call
xorl
mov
pop
push
mov
je
lret
mov
mov
sub
dec
cmp
adc
movsl
in
sbb
mul
sarb
repnz
mov
and
ds
stos
push
inc
inc
clc
fsub
inc
test
es
loopne
sbb
lahf
cs
cs
mov
mov
sub
mov
adc
test
fs
adc
lods
xor
scas
mov
ds
cmp
in
sub
leave
pop
into
imul
daa
xor
push
or
push
xor
jecxz
je
outsb
in
test
or
inc
out
std
outsb
mov
jmp
fisubl
iret
lods
je
or
jmp
inc
jbe
repz
sbb
mov
mov
lods
sahf
xor
out
sub
and
movsb
into
stos
add
and
into
aad
stc
and
mov
mov
pushf
lock
jae
outsb
pop
in
fdivrs
inc
mov
lods
and
sbb
loop
xchg
leave
ret
lcall
adc
xchg
testl
xchg
clc
dec
cmpsb
gs
std
xchg
outsb
in
ret
scas
xchg
mov
adc
andb
inc
imul
xlat
mov
and
stc
scas
push
nop
test
xor
fidivrl
in
sti
add
out
je
int
bound
aad
and
lock
mov
mov
mov
aaa
hlt
test
ret
push
and
cmp
pop
js
dec
xor
in
dec
inc
stos
stos
mov
or
mov
std
sub
sub
or
pop
cltd
sbb
frstor
insl
pop
or
fs
cmp
fstl
movl
push
push
add
cltd
out
or
sub
push
std
out
cmp
lods
rcl
mov
jbe
xchg
sbb
shlb
push
outsl
mov
mov
pop
outsl
and
mov
lret
cs
dec
inc
cld
sahf
mov
lahf
mov
inc
pushf
inc
adc
cltd
mov
icebp
xor
push
lret
jl
or
inc
dec
adc
lret
aaa
mov
sti
add
addr16
cs
hlt
jno
fisubrl
cmp
jbe
mov
xchg
mov
pop
out
mov
addr16
mov
fcoml
stc
outsl
xchg
in
shll
push
dec
or
bswap
xchg
lret
pop
dec
jns
movsl
and
xchg
and
mov
mov
imul
push
addr16
mov
js
pop
jnp
lods
xor
js
fs
cld
cmp
fsts
shl
mov
popa
stc
mov
adc
cs
pop
mov
stos
lret
sub
js
loop
jp
enter
or
push
in
jg
mov
xor
popa
dec
call
bound
dec
cmp
cmp
testb
dec
push
loopne
sub
fstl
sbb
dec
fistl
mov
sti
mov
pop
jo
dec
das
stos
sub
or
jle
cmpl
pop
xchg
imul
sub
and
sar
popa
lret
dec
int
push
sub
loop,pt
sti
pop
xor
arpl
mov
pop
add
xchg
je
stos
std
movsb
lods
mov
dec
loop
mov
jecxz
adc
add
scas
insl
icebp
push
push
mov
in
mov
pop
rcll
push
ret
mov
lods
xor
das
imul
addr16
in
mov
lods
movsl
mov
push
imul
sub
and
imul
jbe
push
insb
inc
sub
into
mov
jp
add
adc
pop
jbe
and
jnp
lret
push
movsl
cmp
cmp
and
sahf
push
insl
mov
pop
sub
pop
scas
nop
enter
push
cmp
dec
dec
fistl
sub
mov
mov
mov
xchg
loope
shl
dec
fninit
in
and
and
out
popa
xchg
repz
push
push
dec
dec
fs
fucom
call
mov
xchg
xlat
divb
mov
test
or
popa
pop
outsb
add
cmp
or
ret
sahf
dec
cld
int3
mov
mov
jae
mov
int3
pushf
cmp
sbb
imul
notb
xchg
out
sti
fcompl
adc
jl
push
daa
mov
and
sub
pop
je
cmp
movsl
add
enter
pop
scas
mov
aaa
xchg
xchg
pusha
les
xchg
insb
enter
adc
push
push
mov
out
sub
cmp
imul
shlb
imul
test
cmp
or
jbe
fdivs
int
inc
ds
fmull
int
test
xor
xchg
negb
scas
cltd
cs
inc
insb
sbb
or
pop
add
cmpsl
sub
fistl
push
rorb
andb
fs
in
cmc
xor
push
cs
in
pop
xor
int
xor
sub
les
mov
gs
jmp
xchg
mov
adc
sub
scas
outsb
adc
pop
adc
filds
mov
jecxz
out
mull
mov
add
lea
push
imull
jnp
es
inc
pop
andb
push
popa
jb
sbb
rclb
stos
lret
popf
cmp
in
add
fidivl
add
inc
mov
adc
jecxz
mov
add
adc
lahf
adc
fadd
cmp
clc
sbb
movsl
lods
jo
xor
rol
push
pop
addr16
inc
push
jp
cs
ds
or
and
lods
and
ret
sbbb
cld
lahf
ror
lret
stos
xor
sub
fnsave
xchg
inc
daa
cmp
pushf
sar
mov
in
sbb
sbb
adc
or
inc
hlt
mov
leave
pop
in
iret
lods
aad
shlb
xchg
inc
push
clc
fnstenv
out
add
nop
mov
pop
repnz
mov
dec
subb
fwait
xchg
ret
rclb
xchg
jle
cmp
lret
sbb
mov
add
jb
xchg
sub
sub
xlat
into
push
xchg
and
int3
fucomi
popf
out
adc
mov
jno
mov
lods
fcomp
push
sub
stc
inc
or
enter
ss
xchg
push
out
sbb
cmp
mov
or
cmpsl
xchg
mov
rorl
call
movsl
jne
xchg
pop
inc
clc
jecxz
push
enter
or
push
pop
and
xchg
loop
push
adc
and
stos
loopne
cmpsb
or
ret
aas
and
sbb
fidivrs
inc
sbb
pop
mov
in
cmpsb
sbb
and
imul
and
ljmp
stc
lret
sbb
fdivs
testl
jb
jno
jecxz
mov
dec
push
pop
mov
pusha
push
lods
fs
jmp
sub
out
addb
in
je
mov
stc
jg
add
cs
mov
or
enter
idivl
nop
insl
push
adc
sub
call
mov
pushf
fdivrp
insl
lea
xchg
cmpl
gs
icebp
inc
dec
in
imul
dec
fisubs
mov
sub
add
in
cld
testb
xlat
add
mov
pop
aad
xchg
into
jle
mov
fadd
ret
imul
xor
adc
add
ljmp
jg
sarl
adc
fwait
inc
or
xor
subl
inc
out
sahf
inc
pop
lcall
jae
jg
or
jl
nop
aas
out
iret
xchg
and
loop
sub
pop
stos
and
pop
pop
shl
adc
adc
mov
inc
jecxz
roll
mov
test
xor
jno
jne
push
test
and
push
into
jo
cld
loopne
sbb
jo
test
ljmp
dec
js
push
xchg
sub
jp
or
push
push
xchg
cli
mov
adc
or
or
inc
sbb
loope
out
push
jmp
lods
add
jne
ds
mov
push
mov
int3
out
lret
cwtl
mov
mov
notb
xor
cmc
mov
xchg
mov
mov
mov
xor
cwtl
pusha
cmp
leave
mov
ljmp
pusha
lret
je
pop
push
sbb
push
add
ja
pop
jmp
data16
idivl
ljmp
mov
or
pop
out
shrb
cli
iret
das
cli
fsubs
shlb
clc
loope
rolb
bound
pop
mov
fimull
jno
cwtl
js
dec
int3
mul
adc
mov
fs
dec
sbb
and
push
push
and
out
and
test
sub
outsl
mov
or
gs
dec
mov
and
sbb
xchg
inc
xchg
mov
lahf
pop
aaa
and
sbb
ljmp
pusha
mov
or
cmpsb
add
icebp
add
insb
repnz
or
cli
or
pop
dec
cmp
nop
inc
out
mov
mov
cltd
pop
mov
push
into
movsb
or
arpl
cmp
sub
ja
sub
or
add
and
aam
lock
clc
daa
xlat
push
dec
andl
les
and
ja
sub
fs
cmpsb
leave
cmp
shrb
rcrb
into
loopne
scas
aas
ss
es
cwtl
inc
sbb
mov
or
pop
adc
mov
mov
jne
sarl
adc
scas
xor
aad
fidivs
jo
loope
test
std
cmpsb
pop
sbb
and
cmp
push
lods
fisttpl
out
fdivrp
icebp
mov
call
ss
pop
or
les
ret
bt
dec
dec
adc
lods
and
mov
test
mov
data16
mov
pop
xor
pop
lods
pop
jl
pop
lods
cmc
stc
test
inc
pop
roll
fwait
and
push
loope
mov
lods
push
mov
or
loop
mov
mov
test
ja
push
mov
push
mov
fsts
shrl
into
pop
inc
xchg
lods
jne
aad
lahf
xchg
pop
stos
jmp
cmp
xchg
pop
xor
inc
cli
xor
sbb
out
or
rol
inc
sub
pop
aam
mov
orl
pop
mov
fnstcw
xchg
jno
das
iret
loope
imul
or
lods
loope
mov
mov
lcall
sbb
xor
push
xchg
out
xchg
aad
jle
xor
in
test
stos
ss
loop
push
jbe
ds
mov
and
sub
bound
mov
aam
or
or
sti
and
aas
idivb
mov
sub
xchg
int3
inc
mulb
scas
add
not
nop
mov
mov
mov
ret
mov
into
mov
in
push
sarl
push
push
outsb
sar
adcb
popa
pop
shlb
imul
pop
aam
imul
out
pop
cmp
and
push
xchg
and
jbe
inc
ret
mov
in
in
pop
bnd
in
rcr
push
mov
and
and
addl
mov
pop
dec
and
inc
out
and
mov
dec
repz
jns
push
pop
cmp
and
mov
pop
rcll
xor
mov
mov
mov
xor
sbb
jno
xor
dec
popf
shlb
sbb
gs
pop
enter
cli
sarl
xor
addb
inc
push
test
cwtl
jb
xchg
sbb
je
or
mov
or
jp
inc
adc
das
or
xor
inc
push
fwait
outsb
or
cld
imul
adc
mov
dec
xchg
mov
xchg
in
push
daa
mov
cmp
stos
sub
pop
xor
dec
arpl
lods
int3
add
mov
test
je
or
in
rcl
inc
xchg
jg
dec
cmp
icebp
xchg
lods
push
loop
lcall
push
lods
mov
cltd
inc
jmp
mov
adc
push
jmp
or
and
lret
xchg
adc
shrd
push
sub
xchg
xchg
ja
push
sub
mov
xor
xchg
and
out
xor
jecxz
sub
pop
pop
ss
sbb
and
sub
shl
xchg
fidivrs
outsl
rorl
pop
jecxz
dec
out
lret
mov
out
jmp
and
mov
pushw
jo
xor
sbbl
push
dec
dec
or
inc
mov
repz
sbb
lods
lcall
lret
mov
xor
repnz
pop
xor
clc
fs
cmp
cltd
mov
sub
sub
mov
jno
xchg
int
scas
loop
mov
mov
sub
stos
mov
ja
mov
fisttpl
jo
push
movsb
aad
scas
lock
loope
hlt
push
pop
push
cmp
cmp
inc
sti
mov
test
jae
les
lahf
and
inc
sar
rclb
cltd
mov
jle
mov
inc
int3
jl
cld
outsl
mov
jnp
push
fsubr
scas
sub
push
pop
ja
or
jbe
out
addr16
imul
xor
pushf
inc
push
inc
sbb
cmp
frstors
push
movsl
stos
mov
std
shll
pop
ja
mov
jp
in
lds
shll
test
xchg
lret
xchg
faddl
std
jns
mov
adc
fdivs
xor
pop
add
xchg
or
add
sbb
dec
lret
gs
out
dec
or
ljmp
cmovae
xchg
xchg
fimuls
data16
xchg
fisttpl
push
add
scas
sti
sahf
dec
test
mov
push
dec
das
jl
add
shl
jecxz
cld
dec
mov
bound
sbb
in
mov
mov
cmpsb
icebp
xchg
fbld
cs
pop
ss
xchg
out
aad
insl
das
aad
add
lods
int3
xor
mov
scas
nop
xor
sbb
cmp
jmp
mov
cmp
leave
dec
sbb
jg
and
jecxz
sub
repz
jp
fs
repz
xchg
xchg
in
pop
bound
sbb
xchg
popf
mov
in
test
push
or
xor
xor
iret
jne
stos
mov
mov
xor
iret
adc
cs
cwtl
jecxz
rclb
ljmp
cmpsb
hlt
xchg
pop
stos
call
push
jnp
loop
jmp
insl
xor
mov
mov
inc
add
into
jge
xchg
xor
in
xchg
xor
in
add
iret
xor
mov
push
outsl
cmpsl
sbb
cmp
add
sub
dec
xchg
stc
leave
push
and
movsl
pop
sub
pop
fcoml
leave
aaa
xor
pop
or
add
das
xor
adc
or
add
jl
movsb
add
movups
cmc
push
out
cmp
pop
inc
fsubrs
pushf
repnz
push
hlt
out
sub
jnp
loope
mov
mov
cs
add
jp
roll
xchg
pop
and
daa
dec
xlat
and
inc
cmpsb
jo
insb
adc
fstps
pushf
cmc
test
bound
fcoms
pop
sbb
xor
mov
roll
push
ja
mov
cmp
xor
lods
pop
out
jb
push
push
xchg
icebp
push
or
jmp
adc
shlb
jne
jmp
js
pop
push
and
mov
popf
ds
cli
cmp
sbb
roll
dec
andl
flds
orl
mulb
incl
cmp
dec
lock
lcall
pop
push
xchg
daa
arpl
adc
je
jge
es
pop
adc
mov
push
ss
fstps
inc
adc
mov
xor
pop
lds
dec
push
mov
scas
jmp
xchg
lea
jle
or
pop
movsb
filds
and
ja
dec
mov
jno
lods
mov
sti
pop
xchg
mov
sbb
push
aaa
loop
testl
push
dec
or
mov
testl
jg
lret
sahf
or
in
and
or
je
xor
push
sbb
mov
cmp
dec
adc
cs
push
test
jl
into
dec
jnp
jge
dec
mov
dec
insb
sub
and
dec
rcr
push
and
insl
adcb
add
inc
inc
sub
int3
daa
sbb
in
sub
cmc
rcrb
mov
insl
enter
enter
push
test
lcall
rcl
fs
mov
mov
xchg
insl
push
push
dec
cmp
and
and
mov
int
arpl
repnz
mov
push
testl
mov
push
movsb
call
mov
jo
mov
xchg
out
sub
mov
mov
mov
mov
popf
pop
insl
and
pop
sahf
enter
pop
aad
add
add
sbb
sbb
ficomps
mov
cmp
pop
inc
jecxz
movsl
and
push
int3
dec
leave
js
andl
cmp
mov
pop
push
pop
ret
enter
shrl
nop
jnp
push
xor
jmp
cld
push
xor
lea
jmp
lods
imull
dec
add
and
mov
icebp
jne
mov
mov
push
jp
jae
xor
aaa
push
or
mov
int
ss
das
es
rcrl
scas
pop
jge
addr16
cld
adc
pop
and
shlb
xchg
xchg
mov
outsb
das
shrb
leave
test
xchg
loop
rcll
ret
adc
into
lods
dec
iret
lds
popf
fdivrl
inc
push
adc
sub
nop
xchg
inc
pusha
je
adc
pop
jnp
mov
xor
xor
xchg
cmpsl
adc
add
fdecstp
mov
imul
jmp
dec
cmp
sub
sbb
sbb
insb
jnp
cmc
cmpl
enter
cmpsb
pop
xchg
jge
mov
dec
or
mov
adc
iret
inc
jb
movsb
jp
outsl
lret
inc
enter
stc
out
adc
jnp
sti
mov
addr16
pop
addr16
xlat
in
dec
aaa
ds
pmullw
xor
xor
cld
in
pop
or
cmp
pop
xchg
xor
add
mov
dec
out
add
mov
adc
and
add
dec
push
hlt
push
jns
pop
or
loop
mov
sub
jno
sbb
jge
sbb
test
xor
aam
inc
inc
fcomps
lods
shrl
mov
fists
xor
adcl
mov
add
loop
jge
ljmp
test
cmpsl
std
cmc
pop
mov
xchg
mov
xor
add
jp
outsl
jno
sub
cmp
mov
std
mov
push
leave
push
outsb
and
scas
jbe
pop
ds
cs
jl
in
adc
cmp
pop
rclb
outsl
pop
lods
inc
cmp
jecxz
mov
mov
inc
jne
int3
xor
xchg
sbb
test
and
les
sub
jp
push
ljmp
mov
negl
ret
xor
mov
jno
adc
xor
ja
cmp
lods
les
mov
int3
jmp
xchg
ficoml
xchg
rcll
lods
orl
mov
pop
pop
in
push
inc
push
lret
lahf
and
leave
pop
mov
and
xor
mov
mov
xor
pop
xchg
jbe
jno
inc
inc
sti
mov
stos
or
pop
sub
and
arpl
jnp
fidivs
leave
arpl
push
xchg
std
adc
insl
sub
pop
push
jp
jecxz
mov
test
mov
cmp
fcomps
mov
push
jge
sbb
mov
xor
sti
dec
ret
cld
jno
jle
fnstcw
shll
out
xchg
popf
insb
xor
fcoms
xchg
xor
xchg
jnp
inc
xchg
dec
sbb
mov
and
scas
mov
jae
inc
mov
les
xchg
sub
xor
aam
rcrb
ss
xor
add
aas
xchg
cmpsl
sbb
push
xor
sarl
pop
cmp
lahf
arpl
jl
cmp
bound
dec
dec
inc
pop
ret
mov
cwtl
xchg
fiadds
or
adc
clc
scas
sarl
pop
ljmp
ss
ljmp
and
mov
mov
mov
cmp
pop
push
mov
mov
jbe
inc
push
adc
cmpsl
mov
sbb
mov
cld
sub
or
cltd
push
test
fucomi
bound
out
push
mov
and
xchg
xchg
test
push
dec
mov
mov
movsb
mov
sub
sub
jo
sub
rorl
inc
jae
sub
popa
mov
mov
mov
rcrl
push
aaa
mov
jmp
das
fucomip
lods
xchg
sub
jecxz
das
enter
and
xor
lods
jns
popa
xchg
mov
sub
repz
cwtl
push
in
mov
xchg
movsl
int3
pop
pop
dec
dec
lds
sub
clc
push
nop
cmp
mov
xor
xchg
fmuls
sub
out
pop
push
cmpsb
pop
push
shlb
xor
add
fildll
clc
mov
in
push
mov
dec
aas
sbb
cmpsl
xchg
push
mov
xchg
push
inc
pop
inc
scas
inc
push
ja
xchg
sbb
das
das
mov
or
inc
or
pop
aaa
cmp
frstor
rolb
in
int3
fiadds
adc
ds
ja
cld
adc
jle
pop
cmp
std
inc
and
mov
je
cmpl
movl
cld
ja
sbb
and
inc
fwait
cwtl
pop
es
mov
pop
aas
das
dec
cmp
sbb
adc
pushf
addr16
repz
out
or
add
adc
xchg
repz
or
out
jg
cmp
pop
jge
and
in
mov
xchg
mov
xchg
mov
cmp
add
arpl
fnstcw
dec
sbb
lods
push
adcl
push
pop
lods
cmp
add
stos
out
adc
mov
add
out
xchg
int3
les
jle
bound
scas
and
jge
mov
fwait
sub
aam
lock
sti
sahf
inc
jae
jns
aam
in
xchg
push
popa
cli
insl
jmp
push
adc
mov
mov
shl
add
mov
test
outsl
in
icebp
mov
outsl
mov
popf
arpl
ja
jbe
out
scas
dec
popa
jmp
inc
testl
push
cmp
fs
push
push
cli
adc
or
adcl
fsubrs
shlb
mov
sbb
inc
cmpsl
sbb
dec
jmp
hlt
xchg
sub
insl
ret
adc
rcll
pop
decl
jmp
jg
jb
pop
jmp
adc
pop
scas
push
sbb
xlat
fmuls
stos
adc
push
jne
dec
xor
pop
adc
sub
cmpsb
bound
adcl
pop
fists
out
shr
dec
jl
lea
push
aas
mov
popf
movsb
in
movsb
call
stos
popf
ljmp
jb
adc
fiaddl
lods
jne
fs
stos
mov
push
je
mov
lea
insl
sbb
and
add
add
into
stos
push
jns
sub
push
and
push
inc
aam
in
cmp
pop
popa
mov
lret
jmp
je
roll
int
outsl
addr16
jne
xchg
jbe
scas
push
add
adc
pop
addl
or
addr16
imul
scas
jge
test
rorb
leave
push
nop
fs
lahf
dec
pop
popf
mov
into
out
mov
adc
repz
push
lods
inc
inc
lcall
add
scas
pop
or
push
call
into
mov
mov
lahf
push
inc
xchg
dec
jp
jo
pop
jg
lock
sub
jge
sub
dec
notb
mov
imul
std
inc
sarl
xchg
into
dec
push
mov
dec
aam
imul
pop
and
add
fistps
insl
std
mov
inc
loopne
idivb
ret
and
xor
sub
pop
dec
lods
jmp
int
ret
imul
insb
into
aam
pop
imul
mov
subb
and
mov
cmp
nop
push
mov
dec
cs
dec
cmp
clc
or
hlt
inc
jnp
clc
in
lods
jmp
into
int3
adc
lods
xchg
repz
or
and
jo
push
pop
xor
sbbl
inc
adc
popf
fwait
leave
leave
mov
sahf
lret
lea
adc
sub
push
repnz
dec
push
sahf
xchg
dec
pop
arpl
push
fsubrs
cmpsl
sahf
cmp
gs
sbb
or
xchg
and
xchg
sub
fdivrs
cmp
fdivp
xchg
std
shlb
jne
lahf
xor
adc
xor
cmp
or
mov
inc
mov
adcl
pop
lods
adc
mov
mov
lahf
fmuls
repnz
fstps
outsb
inc
in
imul
jle
mov
insb
cltd
cltd
lds
ret
xor
xor
call
inc
rclb
xchg
es
mov
stos
out
sbb
pop
outsb
aaa
jns
aad
xchg
pop
or
fcmovbe
notb
xor
test
mov
frstor
mov
cltd
stc
into
daa
shr
push
mov
pushf
cwtl
nop
rcl
ja
and
mov
mov
jge
mov
or
std
push
scas
add
test
dec
mov
push
movsb
scas
stos
in
mov
xchg
movsl
dec
inc
mov
push
lea
mov
mov
mov
loop
sub
stos
ret
popa
popf
dec
sub
cmc
push
mov
test
out
xor
jbe
arpl
inc
movsbl
mov
ret
mov
ds
and
pop
mov
xchg
test
jb
roll
lods
cmp
lcall
sti
ret
and
js
movsb
dec
sbb
jp
jg
xchg
add
jg
mov
mov
push
cmp
das
dec
ror
push
out
dec
jmp
pushf
or
stc
out
addr16
sub
xor
cmp
out
mov
mov
lret
test
mov
pop
mov
sahf
adc
or
xchg
imul
movsb
mov
out
jne
xor
dec
cs
or
sahf
or
mov
mov
data16
and
fisubl
or
and
rorl
insb
mov
xchg
or
ds
cltd
xchg
xchg
push
mov
dec
and
lods
movsb
inc
xlat
pop
add
js
xor
shlb
out
dec
pop
std
out
dec
sub
add
jno
mov
and
int3
sar
cmp
or
xchg
leave
out
mov
pop
xchg
pop
insb
enter
fldt
pop
pusha
sub
cmpsb
test
mov
ror
loopne
or
mov
cwtl
dec
mov
sub
out
into
cmpsb
mov
xor
out
mov
cli
shlb
insl
test
hlt
ret
dec
ret
popa
pop
cwtl
dec
adc
sbb
cmp
lcall
ljmp
ret
pop
fildl
ret
aas
inc
jo
and
lea
xchg
cmp
dec
arpl
mov
int3
pushf
data16
sbb
andb
adc
adc
pop
pop
pop
fildl
insb
outsl
jecxz
jae
pop
sub
push
push
dec
add
cmpsb
push
stos
clc
push
mov
pop
imul
mov
adc
pushl
dec
sbbl
cmp
jnp
sbb
daa
sahf
inc
pop
pop
in
push
addr16
pop
jbe
add
pop
cmpsb
mov
jbe
cmpb
sub
adc
and
mov
sbb
rcrl
aas
dec
sarl
xchg
in
ja
or
jo
sub
mov
sahf
sahf
sub
cld
push
leave
cwtl
outsl
or
fwait
inc
pusha
xchg
les
jnp
les
xchg
inc
je
out
pop
dec
lret
push
pop
imul
mov
push
clc
sahf
aam
out
fucomp
shr
in
mov
jb
sahf
cmpsb
xor
pop
pop
iret
add
ret
sbb
or
ficompl
cmpsl
or
inc
mov
ljmp
push
xchg
add
dec
mov
loop
and
and
jmp
out
jmp
frstor
mov
pop
ret
push
mov
pop
xor
movsl
mov
frstor
movsl
movsb
add
mov
mov
dec
les
cwtl
movsl
cmp
outsb
mov
lahf
inc
int3
inc
arpl
sub
in
pop
cmovno
and
mov
cld
ja
adc
add
enter
outsl
jmp
dec
js
fwait
movsb
mov
aas
pop
movsl
mov
jp
add
rcl
mov
mov
pop
repz
pop
popa
xchg
iret
gs
lahf
aam
out
daa
push
mov
ret
lock
je
ljmp
int
dec
cmpsl
push
mov
jno
xchg
je
lds
xlat
outsl
enter
loopne
ret
jo
mov
leave
or
pop
mov
mov
dec
pop
adc
add
pop
inc
fsts
cmp
movsl
aad
ret
out
and
cwtl
or
rcrb
mov
jae
lods
xchg
pop
ds
mov
ret
mov
adc
jno
cmp
in
inc
inc
xlat
lcall
push
jbe
lcall
xor
push
jmp
sbb
fcmove
pop
add
adc
adc
cld
mov
dec
cmp
lahf
mov
dec
lods
sbb
lret
push
xchg
fidivrs
fs
mov
push
fsubs
out
mov
sbbb
mov
cmpsb
lret
and
mov
add
pop
shlb
loop
test
inc
iret
push
sbb
aas
dec
outsb
mov
push
and
lea
inc
push
ja
push
or
xchg
sub
or
fmul
scas
jno
lea
rcrb
xor
push
adc
insl
in
mov
or
mov
pop
cmp
mov
lret
flds
test
mov
mov
xchg
cmpsb
fwait
popf
dec
push
iret
xchg
sbb
testl
xor
jg
mov
or
sbb
pusha
jae
sub
es
popf
sub
xchg
jno
ds
shrb
cmp
leave
push
inc
mov
ja
data16
dec
mov
inc
xor
aam
dec
cmpsl
jbe
cli
cwtl
push
movsb
sbb
les
stos
mov
out
inc
fidivl
cmpl
adc
or
inc
dec
fsubr
int
aaa
icebp
inc
outsl
lods
lea
fldt
and
mov
outsb
imul
rcll
add
xchg
mov
orb
inc
pop
lods
push
imul
cli
jbe
push
inc
loop
arpl
outsl
or
cmc
fdivrp
ret
lods
leave
mov
xor
mov
fwait
pushf
jg
xchg
js
das
pushl
nop
imul
inc
pop
mov
mov
pushl
jae
mov
push
and
adcl
xchg
add
jecxz
dec
lds
push
ficoms
mov
inc
xor
lods
push
push
mov
dec
mov
dec
test
inc
dec
test
pop
shl
das
repnz
lret
shlb
movsl
xlat
cli
movsb
addr16
adc
faddl
dec
in
ljmp
jns
adc
enter
jns
out
push
or
subl
xor
fdivrl
sbb
xlat
dec
cltd
push
add
push
in
jmp
xor
popa
push
mov
icebp
xor
iret
adc
loopne
lods
mov
add
fwait
dec
lahf
outsl
inc
out
add
daa
lret
xchg
add
jno
inc
das
jle
add
or
in
or
movb
mov
pop
cltd
mov
inc
xchg
dec
test
call
jbe
loope
xchg
pop
leave
cld
pop
mov
and
pop
jmp
loop
lea
out
sbb
mov
je
cld
xchg
mov
pusha
in
jnp
out
mov
vpsrld
xlat
sbb
or
pop
push
jbe
mov
scas
es
stos
mov
outsb
addr16
xchg
fisubrs
cmpsb
hlt
adc
out
je
inc
xor
xchg
xchg
mov
incl
scas
sub
mov
ja
les
push
cmp
jg
jnp
sbb
pop
jmp
insl
mov
orl
cmp
xor
mov
fidivl
ret
mov
mov
and
cmpsb
pusha
lods
cmp
sbb
pop
mov
insb
sub
mov
lods
insb
es
pop
daa
cltd
inc
dec
mov
loop
adc
cmp
dec
callw
adc
xchg
mov
cvtps2pd
or
push
jle
sub
add
jb
cmpsl
lahf
xor
cs
out
jmp
push
pop
shll
decb
out
dec
cmp
fcomps
mov
rol
aas
xor
add
xchg
into
add
mov
xlat
inc
call
sub
ret
adc
rcll
pop
jg
or
cmp
lahf
outsl
bnd
imul
int
popa
lods
leave
movsl
mov
xlat
sbb
sub
lea
aaa
cmp
insb
inc
mov
ret
push
jo
push
mov
hlt
sub
fnstsw
adc
out
mov
cmpsb
pop
cltd
mov
rcrb
mov
sub
fwait
and
js
sbb
mov
jb
push
dec
movsl
js
jmp
inc
xchg
out
dec
aas
xor
movsl
popf
add
sbb
mov
and
imul
mov
cmp
mov
testb
fisubrl
pop
sub
xacquire
sbb
out
mov
clc
in
cmp
sub
push
int3
int
sbb
push
repz
insb
scas
pop
fwait
lret
movsb
xorb
xchg
xor
mov
or
xor
push
insb
ret
adc
dec
ficomps
fsin
cmpsl
fdivrs
lcall
or
cltd
stos
stos
cld
fwait
push
icebp
sub
rorb
xchg
or
lcall
loopne
sbb
xlat
cmpl
pop
mov
push
pop
pop
aaa
inc
lods
loopne
and
mov
or
fldenv
cld
push
lds
push
js
nop
stc
and
pop
inc
fstpl
and
in
aam
or
and
dec
out
shl
scas
shlb
and
push
add
mov
jae
xor
lods
add
adc
lret
jne
insb
movsb
pushf
pop
pop
ss
push
xorb
ds
lret
xor
fcmovbe
insb
and
shll
cwtl
in
idivl
loop
mov
scas
dec
and
std
addr16
jno
jbe
or
jbe
mul
subb
scas
add
arpl
incl
sahf
or
pop
jne
lods
inc
cmc
jne
mov
sub
sub
rcrb
mov
push
inc
stos
inc
hlt
push
or
cli
cli
cli
mov
aas
jle
ret
add
xchg
xor
rcrl
xor
jmp
scas
dec
cli
fincstp
sbb
in
rcrb
pop
pop
push
adc
or
js
orl
xchg
dec
sarl
xor
push
adc
or
xchg
inc
fnstsw
rcl
loop
cmp
add
nop
jno
call
clc
jb
out
pushf
push
test
or
aad
imul
push
xchg
mov
and
xor
dec
adc
push
test
cmp
or
cmpsl
mov
iret
xchg
je
xor
xchg
scas
je
dec
lds
fstpt
out
fisttpll
push
jmp
pop
dec
jno
stc
adc
jecxz
pop
adc
movsl
adc
sub
fistps
pop
sbb
add
cmp
dec
inc
xor
dec
pop
mov
lret
ja
rcr
mov
shl
in
dec
push
mov
xchg
pop
jmp
stos
arpl
xor
mov
xchg
insl
loope
mov
adc
bound
push
inc
mov
adc
test
scas
out
lods
aaa
add
dec
ljmp
mov
sbb
js
push
or
call
pop
and
std
fnsave
aas
mov
lret
call
add
fwait
mov
mov
xchg
fdivrp
jle
ljmp
in
cmp
push
out
cld
mov
dec
add
stos
fucom
into
cld
icebp
das
into
jns
out
adc
jp
or
cmp
mull
icebp
ret
jmp
jl
sti
into
out
leave
repnz
out
sub
lahf
mov
aad
jmp
int3
sub
xor
les
cmp
jmp
and
loopne
movsb
shrl
push
je
inc
fcmove
movsb
and
lods
pop
outsl
or
loop
int
ja
jmp
or
rolb
mov
xchg
jge
ret
daa
pop
jno
stos
test
sbb
ja
mov
sub
scas
xchg
or
hlt
rorl
pop
sarl
mov
loop
sbb
in
mov
jns
pusha
in
popa
andl
mov
je
enter
cmp
xchg
shr
cmc
jae
pushl
or
out
pop
repnz
cmp
mov
lock
lds
lds
jl
sub
in
jmp
jbe
mov
dec
adc
aas
mov
out
es
mov
das
jb
in
cltd
popf
jl
pop
and
sbb
arpl
adc
pop
ss
pushf
aas
adc
and
pop
out
movsb
fcoms
pop
sub
and
aas
movsl
cbtw
scas
sub
ret
js
sbbl
pop
jle
mov
or
pop
mov
out
push
adc
js
dec
dec
loopne
lock
pop
lods
cvtpi2ps
or
xlat
cwtl
push
sbb
loope
loop
push
out
rcll
js
xchg
jb
leave
sti
js
fucomi
iret
aas
loope
mov
dec
push
fwait
cmp
pop
mov
jnp
fdivp
nop
fwait
push
dec
mov
imul
nop
cwtl
shlb
fsubl
aam
jae
sub
arpl
jo
or
pop
outsb
mov
sub
stos
dec
aam
loope
lds
aam
scas
inc
stc
int3
xor
mov
testb
pop
pushf
push
lret
insl
movsl
add
adc
mov
mov
jle
mov
adc
pushf
aaa
mov
dec
mov
popa
pop
dec
mov
loope
ror
mov
xchg
mov
in
pop
pop
les
stc
clc
push
xor
orl
fwait
mov
pop
daa
rcll
in
inc
mov
push
ja
adc
outsb
xlat
rcll
fldcw
shrl
insb
fdivrs
jp
enter
sbb
jb
inc
cmp
jmp
inc
dec
mov
arpl
loope
inc
in
sub
inc
xchg
xor
pop
loop
in
rcll
cmc
gs
dec
sub
test
mov
fwait
cmpsb
addb
push
cmp
scas
pop
repnz
test
jne
mov
into
sbb
add
or
and
bound
or
sub
clc
pop
in
mov
addb
add
pop
shrl
dec
mov
mov
jns
ljmp
test
leave
ja
mov
jp
pop
data16
mov
jge
bound
mov
push
inc
cld
popa
inc
inc
and
cwtl
subl
rorl
mov
or
add
xchg
sub
fwait
and
sub
sub
andb
sbb
and
ret
popf
ja
add
mov
and
and
pushf
stc
movsb
jmp
out
jp
mov
add
ja
pop
push
adc
or
lods
push
dec
iret
and
add
aas
sub
adc
popf
mov
rolb
test
imul
adc
jae
rorl
mov
xor
mov
int3
push
dec
push
jnp
mov
imul
fcompl
adc
push
jg
shll
mov
cmpsl
rcl
out
cmc
loop
enter
insl
ss
xor
ret
dec
mov
sub
mov
mov
imul
das
test
mov
or
js
and
movsb
or
pop
cmp
pushf
sar
adc
mov
mov
push
mov
test
pop
stos
mov
fwait
scas
fldcw
inc
movsl
cmpsb
cmp
adc
cs
sahf
sbb
and
test
jae
lahf
loope
mov
xchg
pop
lock
adcb
dec
loop
int
hlt
jae
sub
les
es
jecxz
mov
mov
jg
les
idivl
xor
data16
das
pushf
daa
sbb
inc
sbb
sbb
mov
mov
enter
movsl
push
movsb
ret
aam
ficomps
sub
adc
xchg
lret
cmp
sbb
ljmp
xor
or
or
fs
cwtl
rcr
sti
imul
ljmp
xor
icebp
sub
ss
stos
lcall
fidivrs
das
inc
aaa
pop
adc
rcl
test
mov
dec
add
lret
and
les
fsub
ljmp
aas
xor
clc
imul
stos
xchg
sbb
fadds
or
adc
loopne
and
sub
dec
and
out
adc
sbb
cmpsb
lds
cmp
mov
jmp
out
pop
xor
outsb
lret
loopne
stc
leave
xlat
out
test
fcompl
sub
ret
out
adc
cmp
mov
ret
not
and
repz
stos
sbb
xchg
sbb
push
repz
sbb
mov
cs
adc
jbe
dec
aad
cmc
lahf
sbb
mov
dec
jne
insl
push
sub
mov
aas
push
add
or
mov
xor
sbb
sbb
add
jecxz
cmpb
jg
dec
sti
loopne
clc
stc
jecxz
jle
adc
sbb
mov
sbb
mov
loopne
add
and
sarl
mov
outsb
cld
incl
xor
xor
mov
mov
lock
out
test
in
xchg
test
fwait
scas
insl
push
lahf
or
lods
scas
dec
mov
mov
mov
push
inc
adc
sub
and
filds
fadd
scas
lds
xor
inc
movsb
mov
cmp
sarl
push
aas
insl
pop
adc
fs
mov
sahf
cmp
shl
lret
lds
movsl
int3
push
in
out
fstps
frstor
aam
push
mov
and
dec
stc
sbb
mov
mov
mov
inc
xchg
sub
jg
xchg
stos
xor
iret
enter
cmp
cmp
pop
jnp
pop
insl
lock
inc
sub
xchg
pop
stc
jnp
add
lock
push
dec
or
mov
xor
enter
or
mov
pop
cmp
pop
xor
ficompl
hlt
andb
arpl
jmp
adc
jmp
imul
push
add
aaa
ss
call
push
jge
rcl
scas
int3
add
mov
mov
pop
test
ja
pop
cltd
insl
fs
ja
clc
dec
adc
insl
gs
in
adc
enter
fildll
ss
subl
jl
add
and
xchg
test
lock
adc
sbb
pop
mov
aaa
xor
jmp
out
mov
gs
jg
add
cmp
aaa
jle
pop
and
sbb
movsl
pop
mov
and
rolb
insb
aas
inc
roll
dec
test
mov
jo
daa
aaa
sub
insl
aad
mov
xchg
or
ja
mov
fstl
jg
add
inc
mov
pop
mov
cmpsl
inc
add
jno
jecxz
cmpsl
cmp
xchg
mov
inc
test
sbb
xor
mov
lock
out
lea
mov
out
and
daa
cmp
or
loopne
ror
push
rclb
and
jmp
adc
pushl
dec
and
mov
cmp
dec
and
fsin
or
xor
xchg
stc
mov
movsl
mov
ljmp
fwait
adc
sbb
sbbl
mov
scas
adc
inc
pop
jp
cmpsl
pop
or
leave
sub
xchg
dec
ret
scas
mov
xchg
cmpsl
test
ret
outsl
and
movsl
sarb
dec
fldcw
jmp
cmp
cs
mov
xchg
loopne
imul
xchg
and
inc
adcb
lds
xor
aaa
scas
xchg
xor
cmp
loopne
fs
or
jo
sbb
sub
addr16
sbb
or
je
mov
out
push
mov
dec
mov
jbe
fidivs
xchg
in
fdivrs
or
mov
in
add
fdivrs
stos
mov
xchg
iret
pop
flds
adc
int3
xchg
jmp
pop
xor
lds
mov
jge
movsb
inc
popa
mov
in
es
or
test
ret
stc
inc
mov
nop
stos
pop
icebp
je
aad
ljmp
pop
inc
jecxz
pushf
jnp
xchg
or
je
loope
sbb
fisubs
popa
je
mov
shlb
jmp
adc
popf
xchg
in
inc
mov
and
iret
pop
mov
cltd
inc
dec
pop
push
js
rclb
dec
dec
cmc
movsb
sbb
jo
cmpsl
or
icebp
mov
sbb
mov
lods
adc
icebp
xchg
pop
lcall
sbb
dec
sahf
aaa
cwtl
dec
int3
in
inc
jle
out
sub
fcomps
aam
jne
out
mov
dec
test
ret
enter
icebp
pushf
outsl
call
sahf
jnp
lret
pusha
or
scas
ficompl
cmpsl
les
mov
mov
leave
sub
fcmovu
or
mov
or
fmuls
push
and
je
outsl
push
loop
popa
cli
xor
add
mov
loope
icebp
or
push
inc
mov
pushf
leave
enter
daa
ss
and
and
pop
ret
leave
push
in
xor
cmp
push
nop
sahf
loopne
aam
fwait
dec
lret
lret
cld
sbb
sbb
fdivrs
lahf
lds
in
sub
out
stc
ret
rcrb
jmp
xchg
ja
cmp
jo
inc
sub
int
or
gs
scas
mul
and
das
mov
loopne
clc
or
mov
push
ret
mov
cmp
push
mov
mov
jo
sti
iret
sarl
mov
loop
or
popa
stos
jo
or
adc
xorb
shrl
mov
dec
popf
fimull
adc
pop
test
leave
cmpsb
or
and
lods
push
push
jle
dec
push
lds
cltd
call
sub
mov
inc
adc
xor
test
ss
xorb
lret
jl
lock
les
add
icebp
jg
outsl
add
mov
inc
lock
jecxz
and
les
or
loopne
cmp
cmc
jnp
mov
xchg
ja
xor
aam
fstps
and
and
mov
mov
dec
cs
push
js
aaa
inc
xchg
or
dec
lret
xor
mov
dec
fs
lock
test
pop
shlb
pushl
loopne
out
movsl
aad
leave
cld
aad
jg
aaa
call
out
jo
lahf
fisttpl
sbb
push
loopne
repnz
out
cwtl
adc
das
lds
mov
inc
outsb
outsl
icebp
inc
movsl
jnp,pt
mov
push
sbb
call
adc
gs
mov
mov
loop
data16
test
adc
movsb
xor
push
inc
push
imul
pop
or
add
daa
fcomps
enter
stc
iret
add
pop
mov
mov
mull
lret
xchg
popa
xchg
or
testl
aad
pop
pop
test
sub
stc
pop
loopne
cmp
dec
xor
sub
xchg
or
std
sbbb
sbb
xchg
in
xchg
mov
fwait
mov
xchg
into
das
push
rorb
outsl
stc
add
and
shrl
cmpsb
dec
lods
adc
stos
mov
pop
mov
test
mov
jb
jecxz
call
push
xchg
gs
mov
outsb
mov
adc
pusha
dec
arpl
sub
ljmp
xchg
scas
push
pop
bound
inc
shl
aaa
xor
fimuls
rol
mov
inc
add
mov
add
sub
and
pop
js
sbb
dec
pop
jb
icebp
addl
and
cmp
in
and
pusha
into
test
inc
inc
ds
data16
test
lds
or
pop
push
jg
push
inc
mov
fisubrs
movsb
lahf
xchg
mov
sar
xor
xchg
add
call
lret
pop
jae
pop
jecxz
jno
dec
sub
rcll
push
ss
dec
mov
rcrb
int
je
test
enter
sbb
or
mov
lock
out
inc
ss
pop
mov
cmp
fwait
jnp
shr
jmp
mov
inc
mov
sub
mov
stos
shll
dec
pop
popf
mov
fisttpl
test
push
cmp
andb
xlat
repz
es
sbb
push
in
dec
cmp
xchg
jb
popf
sbb
mov
mov
std
push
mov
add
das
pop
mov
cmp
test
lods
pop
mov
or
pop
test
mov
cmp
sub
in
jne
outsl
fimull
adc
push
jl
or
add
inc
mov
stos
or
sbb
inc
outsb
xor
push
mov
jge
dec
xchg
shr
pop
inc
mov
adc
aam
push
loopne
testb
sti
push
addr16
fs
fwait
test
jnp
sahf
jns
test
xor
lods
dec
imul
fisubs
jb
jno
push
xchg
sbbl
test
mov
xor
mov
aaa
dec
das
mov
jp
andl
fwait
cmp
mov
xlat
sbb
or
sub
adc
mov
push
mov
fs
mov
enter
mov
bound
dec
xor
mov
pop
and
in
test
hlt
dec
sahf
xchg
ret
repnz
push
movsl
dec
jb
mov
inc
stos
add
ret
pop
xchg
mov
pop
out
out
and
std
mov
call
fs
std
test
dec
push
pop
dec
dec
je
shlb
insb
sbb
clc
scas
or
sarb
sub
fsubrl
mov
adc
lea
out
xlat
xlat
sbb
iret
stos
into
mov
stos
lret
cmp
cmc
pop
repnz
xchg
push
lock
mov
jp
shll
sbbb
xchg
mov
je
mov
fs
inc
xchg
mov
js
jae
in
and
pop
xchg
aam
notb
test
xchg
sti
sub
pop
add
rorb
mov
das
ret
and
pop
ss
push
jmp
pop
loop
push
out
out
jmp
fdiv
aad
sti
sti
and
mov
lret
popa
into
mov
dec
mov
js
mov
sbb
push
in
fcomps
bound
jo
and
inc
dec
and
dec
jb
jl
mov
jp
jg
fsubrs
sbb
pop
cmp
fisttpll
sub
cmp
fistps
leave
jp
pop
pop
in
mov
and
addr16
mov
inc
xchg
pop
mov
ds
mov
pop
jmp
inc
mov
xchg
sub
gs
sub
push
jo
loop
mov
xor
repnz
jg
fimull
out
mov
cmc
leave
scas
xchg
push
jecxz
jbe
mov
movsb
aas
push
lods
sbb
jne
dec
mov
aam
nop
aaa
pop
fildll
in
cmp
repz
cmpsb
push
adc
pusha
jl
sti
push
out
sub
les
out
sub
enter
add
in
pop
cld
pop
lcall
fidivrs
xchg
aad
out
push
jge
and
mov
loop
lock
jnp
mov
cld
sub
sbb
scas
inc
movl
aaa
and
in
test
push
jns
mov
and
adc
sub
mov
adc
cmc
pop
xchg
loop
mov
cmp
sbb
sbb
push
pop
rcrb
mov
adc
cmp
adc
popl
or
xor
cmp
in
lods
push
ret
push
iret
xchg
rcrb
jb
in
jl
push
cmpl
push
and
icebp
push
add
push
into
ss
sub
mov
aam
gs
lcall
dec
addr16
add
sub
or
fdivr
push
mov
aaa
sbb
adc
fs
dec
push
or
cmp
lods
outsb
lock
adc
xor
loopne
icebp
dec
fiaddl
les
jnp
pop
mov
push
pop
scas
dec
dec
inc
pop
int
pop
shlb
out
xchg
iret
adc
and
ret
mov
lea
lock
add
push
ja
mov
mov
in
pop
mov
dec
pushf
dec
movq
dec
outsb
hlt
and
push
or
xchg
cmp
in
and
xchg
xchg
scas
call
push
and
pop
dec
xor
push
adc
fsubs
xor
into
icebp
mov
repz
add
add
inc
jmp
pop
sub
or
or
gs
xchg
fcompl
movsb
jge
mov
ret
dec
push
jmp
xchg
lock
jo
inc
mov
mov
or
popa
push
sub
xlat
out
xor
aam
out
add
aad
xor
sti
je
data16
mov
scas
jp
add
mov
sbb
pop
or
cs
pop
daa
pop
out
mov
inc
sahf
sti
xor
adc
cmp
adcb
je
testb
iret
sub
inc
pop
insl
pop
enter
push
adc
xor
lcall
pop
js
in
ss
addl
jae
out
push
testl
stc
rol
aas
aas
call
loopne
and
fwait
adc
out
pop
aad
mov
out
lods
sbb
push
xchg
jae
dec
lea
mov
push
das
cli
xor
into
push
xlat
and
adcl
shlb
cmp
call
sbb
shrb
mov
dec
and
cmpsl
pushf
mov
aaa
and
lds
imul
test
into
call
aam
fildll
ficoms
jno
bound
sbb
or
pop
mov
push
fwait
sbb
pushf
xchg
adc
popa
lret
loope
adc
mov
in
push
inc
jl
ror
sub
mov
mov
addr16
imul
mov
je
mov
stos
adc
push
addr16
xchg
dec
sbb
lods
sbb
jle
fwait
jne
push
hlt
mov
dec
jbe
pop
andb
and
frstor
stos
cmpsl
movsb
testl
sahf
movsb
mov
and
icebp
pop
imul
or
lret
pop
inc
loope
sbb
mov
mov
test
and
jo
xlat
in
rolb
out
stos
loopne
mov
jge
dec
std
dec
push
adc
cmp
mov
cmp
out
test
and
fcomp
jnp
fldenv
xor
mov
cmc
pop
add
pop
mov
or
stos
fisttpl
push
inc
fs
inc
scas
bnd
or
nop
jno
loopne
sbb
mov
jg
push
jo
push
rclb
rol
lret
fldl
fcmovbe
pop
js
aam
shlb
out
inc
sbbl
sbb
sub
xor
lahf
cwtl
stos
dec
clc
stc
outsl
cli
fistl
sub
icebp
and
mov
xor
jnp
mov
lods
test
pop
call
mull
add
mov
ficoml
into
sarb
sub
mov
out
stos
sub
and
dec
and
sub
xor
divb
fwait
clc
lret
push
cltd
pop
cli
clc
sub
xor
int
pop
and
inc
xchg
and
cmp
out
or
scas
decl
xchg
jecxz
jp
or
xor
pop
cli
repz
xor
in
xor
xchg
push
test
popa
hlt
pusha
ffreep
dec
mov
dec
cmpsb
pop
cmp
into
add
rorl
xor
cmpsl
pop
inc
jg
xchg
xchg
add
mov
std
adc
push
lret
pop
pop
pop
fwait
dec
jne
xchg
in
cmp
mov
aas
push
movsl
cwtl
stos
or
or
ret
aas
js
test
sbb
mov
insl
mov
push
in
add
in
dec
lds
fstpl
mov
jge
push
cld
bound
pop
popf
out
pop
popa
loopne
xor
sbb
add
mov
setb
mov
in
or
sbb
mov
lods
sub
jno
bound
fisubrs
idiv
je
cmp
jp
dec
adc
cltd
mov
xchg
pop
mov
ja
call
cli
sub
pop
add
ret
pop
add
orb
xor
es
sub
into
pop
push
push
enter
adc
push
cwtl
inc
aam
xchg
arpl
push
pop
jmp
xchg
jmp
ja
lahf
pop
mov
mov
je
adc
movl
add
add
inc
fwait
cmp
xchg
es
fadds
fnstcw
loopne
stos
movsl
cmp
je
inc
in
push
lock
xchg
cmc
aam
mov
fs
cmp
into
loopne
inc
nop
mov
mov
mov
into
jae
lods
jae
enter
stos
inc
xchg
sbb
add
sub
loopne
lret
jecxz
lahf
sub
rcrb
int3
dec
cmpsb
sbb
std
fadd
data16
add
movsl
pop
mov
and
mov
jmp
and
test
cld
push
push
push
enter
fcmovnu
lret
cmp
sbb
aam
mov
imul
notl
lcall
inc
test
push
mov
mov
and
mov
leave
inc
pop
in
repnz
jle
shrb
xchg
jae
movsl
and
es
stc
jge
and
sbb
std
mov
ja
test
lahf
lods
enter
cmc
cli
ret
enter
jno
mov
aas
cmp
push
jno
or
jecxz
mov
xor
mov
idivl
sub
xor
fisubl
mov
stos
in
sar
rclb
jb
cmp
in
out
adc
jnp
xchg
and
das
lret
pop
sbb
movsl
sub
jb
popa
dec
out
cmp
jnp
dec
pop
adc
xor
or
sarb
ret
xchg
cmp
out
sahf
int3
lahf
adc
dec
or
and
dec
stos
sbb
je
mov
and
push
push
mov
xchg
loope
sar
pop
lods
dec
data16
aas
lret
pop
adc
loopne
sub
lds
ret
mov
or
loopne
sbb
inc
add
call
out
fidivl
addl
mov
jge
rorb
scas
addr16
lret
andb
repz
cwtl
adcb
and
jns
cmp
fwait
push
adc
repz
or
inc
fiaddl
dec
movsb
mov
pop
daa
das
xchg
and
loope
mov
scas
mov
push
sti
push
aad
mov
mov
jae
pop
loopne
movsl
enter
mov
mov
int3
mov
fnstenv
sub
inc
cmpl
cmp
push
push
sbb
adc
dec
or
cmpsb
popf
xchg
pop
lods
jp
and
jo
pusha
ret
into
cmpsb
adc
mov
sbb
stc
sub
sub
sbbl
xchg
aas
push
das
adc
mov
inc
das
mov
dec
pushf
cwtl
aas
sub
lea
jecxz
stos
aad
cltd
aaa
in
pop
rol
popa
cmp
mov
subb
push
les
js
adc
xchg
sub
pop
pop
xchg
sbb
test
push
inc
jmp
mov
lcall
in
popa
cmpsl
adc
add
xor
lods
repz
addb
adc
add
pop
push
xchg
outsb
fisttpll
and
insb
out
js
scas
je
lcall
mov
xor
xchg
sbb
sub
rorl
je
cmp
je
ja
push
cmp
fcompl
fidivrs
outsb
jnp
lret
mov
jle
sahf
scas
sub
mov
ljmp
lock
mov
mov
cmp
imul
lods
mov
in
jl
cli
or
out
push
lods
pop
dec
test
mov
sub
sbb
into
xchg
mov
sbb
loop
and
adc
les
in
adc
jbe
push
lret
pop
xchg
aam
dec
mov
or
adc
imulb
lea
icebp
push
push
sbb
jmp
sbb
mov
clc
pop
and
or
int3
jg
clc
js,pt
add
pushf
insl
out
inc
out
mov
outsl
pop
add
outsb
xchg
and
mov
mov
add
pop
out
jne
rorl
mov
push
cmp
xor
sub
dec
scas
sub
rcr
andl
mov
mov
lods
and
xor
sbb
js
subl
mov
fiadds
sub
push
cmp
sbb
lret
cwtl
push
das
or
dec
mov
ss
jbe
sbb
xlat
inc
mov
pop
jnp
ss
jmp
cmp
dec
lret
scas
fdivl
test
inc
mov
adc
and
pop
into
push
lods
or
mov
sub
into
pop
xchg
add
or
cmp
pusha
inc
lods
and
movsl
ficompl
sahf
or
rcr
or
jmp
push
dec
pop
popf
ss
jle
lods
cmp
sarb
fdivr
scas
push
or
mov
in
ret
sahf
cmp
sub
push
push
dec
dec
mov
and
pop
push
sarl
int3
xchg
sbb
pop
int3
sarl
jno
daa
push
adc
out
dec
js
xchg
insb
or
sbb
pop
fdivs
div
lock
test
cmc
push
pop
incb
fcmove
cmc
fdivr
push
addr16
enter
cmp
ret
sbb
jg
pop
fmul
jmp
cmp
lea
xchg
add
lcall
lcall
push
movsb
rcl
cmp
cmp
jae
daa
pop
cwtl
in
adc
push
stos
mov
jmp
add
pop
pop
or
sarb
sub
loop
popa
mov
aad
aas
xchg
dec
pushf
or
push
lret
aaa
or
stc
testb
mov
ror
call
fisubrs
sub
xor
js
in
xor
or
dec
cs
add
insb
js
jle
ret
insl
push
pop
repz
push
pop
out
repz
sub
lcall
pop
push
add
adc
jnp
scas
icebp
mov
pop
pop
mov
das
dec
push
or
ret
cmpb
adcb
or
nop
adc
loope
xor
je
xchg
cmp
inc
jne
xchg
sub
push
loop
sbb
and
cli
icebp
jg
push
dec
jmp
cmpsl
sub
outsb
mov
js
jmp
mov
pop
push
scas
notb
inc
lret
inc
sahf
incb
dec
scas
push
fimull
or
inc
repz
clc
push
mov
and
xchg
mov
pusha
push
mov
push
mov
xlat
imull
iret
lcall
fdivrs
cs
out
sub
addr16
or
mov
push
jnp
cmp
push
lods
ljmp
sbb
stos
js
lahf
jmp
loopne
push
mov
lods
imul
pop
add
push
dec
adc
inc
inc
mov
sub
dec
imul
repz
push
das
lods
mov
stc
ror
pop
pop
repnz
push
lret
stos
ret
jo
jmp
movsb
outsl
jns
sub
mov
jle
hlt
call
mov
pusha
dec
sbb
jo
adc
sub
lea
lahf
cmp
mov
leave
hlt
xor
cmpsb
inc
cmp
sub
dec
aaa
lock
pushf
mov
push
mov
pop
loope
inc
inc
jnp
lcall
loop
ret
dec
or
cmpb
mov
lret
stc
test
add
add
mov
repnz
inc
add
push
mov
into
mov
mov
fimull
cltd
jmp
mov
rorb
loop
ret
hlt
out
push
xor
inc
pop
rorb
cmpsb
dec
mov
mov
or
call
mov
mov
test
mov
push
stos
out
and
push
clc
mov
lcall
in
push
sub
stos
mov
xchg
mov
mov
sbb
mov
xorb
mov
inc
lret
in
push
mov
enter
xchg
dec
outsb
cmc
pop
inc
in
ret
imul
dec
call
and
cmp
lock
inc
dec
fwait
inc
xchg
repz
mov
out
mov
mov
dec
movsl
mov
fsubrl
pusha
cli
adcl
repnz
mov
xor
stos
inc
fdivrl
inc
adc
sbb
or
sub
rcr
inc
mov
push
es
sbb
scas
dec
xchg
mov
xor
rcl
sbb
in
je
xchg
pop
push
push
outsl
cltd
ljmp
sti
test
enter
adc
push
scas
les
adc
xor
and
dec
orb
aaa
jl
ret
arpl
clc
jmp
and
cld
fstpt
jne
shrb
inc
xchg
rep
bound
out
subl
les
sub
outsl
mov
sub
pop
mov
pop
sbb
mov
addr16
cli
adc
jl
ficoml
dec
aad
fidivl
fsubl
negb
in
out
and
dec
mov
ds
mov
cmpsl
mov
stc
mov
stos
xchg
fmuls
xlat
xchg
xor
xchg
popf
jmp
cmp
mov
jae
cld
pop
lea
jae
add
mov
dec
jne
pop
paddsw
lods
shrl
outsl
cwtl
inc
mov
daa
and
mov
dec
sbb
inc
jp
gs
or
cmp
jne
loope
lret
je
adc
pop
or
gs
add
jb
stos
push
jno
rclb
or
mov
add
jge
push
rcr
divb
mov
int3
dec
sti
fldt
jns
test
imul
enter
xlat
cmp
incb
mov
int3
xchg
test
mov
jbe
scas
loopne
xchg
daa
rcrb
push
les
cld
aad
dec
rcll
xor
add
outsb
cmp
or
das
cltd
mov
outsl
xor
test
int
fsubl
sbbl
xor
sbb
adc
pop
jno
out
sbb
rsqrtps
outsb
xchg
dec
add
push
mov
push
bound
cs
pop
cmp
dec
pop
in
push
jp
add
int
int
mov
and
jns
dec
inc
or
jl
ss
mov
jecxz
pop
jbe
fbstp
mov
arpl
pop
or
loope
mov
jae
mov
xor
jle
clc
jmp
in
mov
or
cmp
loopne
mov
sbb
mov
es
fdiv
bound
pop
xor
mov
and
add
repnz
push
enter
lods
lock
addl
and
adc
aad
fsub
and
jmp
mov
jo
sub
fsubl
aas
jg
loop
loop
jmp
aas
mov
dec
jae
push
imul
pop
mov
push
test
inc
and
mov
jae
rcll
cmp
shll
cmpsb
leave
sbb
add
imul
int3
popa
cmp
fnstsw
testl
int3
call
js
adc
rcll
push
mov
mov
in
fdivs
and
mov
push
insb
jp
imul
inc
fnsetpm(287
sub
inc
push
pop
movsl
mov
xor
jg
sub
call
aas
out
mov
mov
sbb
lds
xorb
and
lds
adcb
insb
rcrl
jg
cmpsb
cmp
mov
jge
mov
jne
enter
out
push
idiv
push
push
imul
movsl
scas
adc
jo
test
and
notl
je
cmp
sub
int3
xor
lret
pop
jle
cmpsb
into
xchg
lock
mov
pop
adc
dec
sub
imul
pop
bound
fbld
pop
mov
sarl
test
mov
test
inc
iret
das
ljmp
add
por
fdivp
mov
xchg
and
cmpb
jl
pusha
mov
push
mov
dec
push
je
xor
sub
cmc
add
xlat
dec
cs
sar
mov
lahf
lock
shll
je
mov
stc
mov
js
xor
lock
xor
mov
fnsave
fdivrs
call
aas
or
jae
insl
push
xlat
loopne
ret
inc
xchg
adc
movsl
popa
adc
add
dec
cmpsl
rol
test
rorl
or
adc
faddp
push
push
in
out
arpl
outsl
mov
adcl
call
pop
notl
dec
push
ljmp
ljmp
cltd
adcb
mov
or
repz
add
sub
adc
lret
bound
popf
jmp
rclb
lock
mov
daa
test
xchg
lds
inc
mov
lea
fiadds
leave
and
test
mov
outsb
stos
std
jbe
imul
jo
addb
adc
inc
aas
mov
aam
rcl
sbb
xor
or
adc
mov
xchg
adc
xchg
nop
stos
rol
rol
sbb
loop
ljmp
call
mov
ljmp
into
fmulp
test
adc
add
insl
jle
pop
lock
aad
imul
fmulp
sub
mov
iret
adc
or
mov
cmp
ds
adc
mov
jle
pushl
pop
sbb
pop
and
testb
imul
pop
sbb
popf
mov
cmp
mov
jge
lds
pusha
mov
push
into
push
mov
shrl
pushf
sbb
xchg
add
and
jmp
ds
mov
push
push
jbe
shr
sahf
in
mov
testb
lock
loopne
mov
mov
lods
popf
hlt
dec
test
int
cli
in
insb
push
jmp
ja
mov
sub
jp
dec
aaa
xchg
loopne
outsb
mov
test
js
xchg
cwtl
push
subb
bound
stos
inc
fistpl
push
emms
dec
sbb
gs
jo
mov
out
push
hlt
ljmp
lds
sahf
xor
popf
cli
xor
cmp
fnstenv
inc
jne
jle
push
out
fdivs
fwait
movsb
add
add
lea
sub
jmp
xchg
jle
adc
hlt
subl
pop
push
ljmp
sti
jecxz
jl
int
push
dec
push
ja
xchg
in
jno
shlb
sub
in
pop
nop
push
out
sbb
iret
or
sub
std
push
inc
ficompl
xchg
xor
js
aad
sub
cmpsb
sahf
fs
iret
push
in
sbb
imul
insl
xor
and
jnp
pushf
jb
pusha
imul
pop
cwtl
out
ret
cltd
iret
jb
rclb
mov
shlb
cmp
aas
into
movsl
add
xchg
aam
decb
sub
dec
mov
dec
sub
jl
sbb
add
inc
sub
mov
and
scas
insb
xchg
fisubl
push
fs
in
xchg
mov
xor
push
cmp
mov
rcrl
daa
jg
jo
out
cwtl
mov
mov
add
call
cmp
mov
cs
lds
ja
and
fildll
jge
aam
pop
sbb
xlat
out
xchg
add
dec
dec
out
and
jmp
jle
stc
sahf
std
mov
and
and
push
pop
scas
out
dec
je
pop
xchg
in
mov
xchg
and
lods
cs
ja
xor
ret
outsl
roll
or
subl
decb
orl
lret
loop
enter
adc
enter
add
push
repz
bound
das
dec
aas
test
sub
aad
cli
leave
loope
es
push
aaa
int3
mov
rorl
fucomip
sbb
pop
add
lret
mov
pop
cli
stc
jl
dec
push
sbb
out
mov
sub
arpl
mov
jge
movsb
popa
cli
test
enter
add
cltd
imul
sbb
dec
shll
test
rclb
push
es
xor
outsl
xor
mov
in
sti
cmp
dec
dec
inc
ret
adc
xchg
dec
test
and
shrb
cmp
mov
jl
aad
add
dec
and
fldenv
aas
mov
xchg
sub
mov
pop
or
ficoml
fsubl
cmpsl
popf
inc
jne
dec
add
mov
mov
jg
out
ret
dec
xchg
lret
mov
pop
pop
mov
daa
xor
mov
sti
stos
dec
jl
cmpl
gs
push
outsb
mov
or
cmp
inc
mov
pop
jmp
jecxz
pop
xchg
int3
sub
sub
xlat
mov
jns
xchg
jle
add
sbb
push
push
cmp
inc
rol
or
mov
stos
sub
mov
sbb
pop
repz
ret
gs
into
xor
sbb
jle
inc
adc
mov
ja
mov
ret
ja
mov
cwtl
inc
out
dec
mov
or
fs
xchg
push
dec
adc
int3
xor
lods
mov
cmc
dec
aam
test
pop
mov
loopne
mov
mov
jmp
fbld
loopne
ds
addr16
mov
xor
ficoml
ret
push
and
adc
inc
sahf
jg
out
push
addr16
arpl
inc
xchg
test
and
leave
mov
dec
sub
mov
jmp
lret
push
sahf
push
jno,pn
push
push
rcll
jle
aam
jne
cmp
mov
ffreep
out
repnz
in
fs
scas
fisubrs
cmc
push
vmovntps
cli
shll
jp
test
sbb
inc
jecxz
fidivrs
sar
mov
lea
or
inc
push
pusha
add
sub
push
lock
cmp
mov
adc
addr16
repz
imul
fwait
lods
xchg
leave
add
shll
adc
push
inc
jecxz
xchg
pop
and
clc
test
cmpsb
and
fwait
jae
mov
rol
xor
lds
dec
cs
sub
adcb
mov
cli
xor
inc
sbb
mov
adc
shlb
inc
insl
mov
hlt
outsb
pop
mov
push
cltd
and
cwtl
fst
iret
testb
gs
lcall
dec
mov
repnz
cld
stc
jns
cmp
and
dec
mov
add
xchg
das
sbb
pmullw
push
loop
or
mov
fdivl
iret
or
or
decl
mov
sub
cwtl
sbb
inc
popf
sbb
sbb
mov
push
xlat
xchg
dec
mov
aas
cmp
je
push
xchg
dec
cmpsl
ret
mov
call
repnz
push
add
jnp
daa
mov
aaa
and
inc
jl
es
inc
fistl
inc
repnz
insl
in
cli
lcall
mov
mov
mov
fldz
fldt
fnstenv
mov
pop
lahf
xor
pushf
sbb
test
ss
xchg
jp
cmpl
notl
daa
push
cmp
repnz
cli
ss
ficoms
jmp
loop
sub
out
xlat
mov
pop
in
xor
hlt
sub
xor
or
sbb
test
push
fcomip
loopne
mov
sar
insl
stos
mov
add
cltd
jle
pop
mov
bound
sbb
clc
dec
stos
shrb
pop
jne
dec
mov
and
cmp
lds
pop
por
adc
fbstp
std
stc
push
repz
dec
or
push
out
xor
sbb
lods
and
sbbb
test
xor
lcall
dec
jge
ret
mov
jb
jp
or
scas
movb
outsb
add
dec
sub
cmp
je
loope
cli
sub
addl
or
jae
cwtl
das
das
popa
mov
test
loop
subb
rcll
add
aaa
jle
add
push
dec
fcoml
dec
das
inc
cmp
adc
pop
popa
pop
mov
cmp
fsts
jmp
cmp
xorl
xor
je
sti
lods
out
cld
or
ljmp
rorl
inc
pusha
fs
or
insl
int3
aaa
mov
mov
popa
repz
stc
daa
insb
inc
jl
push
inc
and
cmp
cmp
hlt
push
and
icebp
nop
cmp
inc
subb
test
push
sub
push
mov
xor
add
aas
popf
jle
cmpsb
clc
and
flds
cwtl
rep
mov
les
dec
aas
or
je
nop
outsb
stc
or
inc
xorb
xchg
mov
gs
pop
pop
out
je,pt
and
or
shlb
les
pop
arpl
cmc
loop
ss
es
cmp
hlt
mov
push
hlt
dec
inc
sub
dec
ja
push
mov
addb
loopne
pop
subb
std
mov
cli
cmp
lret
insb
mov
icebp
cmp
mov
sub
leave
outsb
mov
xorl
mov
pop
inc
das
mov
push
into
rcrb
sbb
fstpl
mov
stos
lret
ja
ss
push
push
sbb
scas
or
mov
pop
sbb
cwtl
mov
out
imul
mov
jno
ficomps
cmp
jb
add
out
shlb
add
and
sub
mov
mov
jl
mov
or
pop
fcmovnbe
movsl
xchg
imul
repnz
popa
xchg
enter
and
push
out
xchg
addr16
mov
loope
rolb
adc
jb
cmp
cmp
adc
adc
xchg
lock
outsb
mov
jl
jle
push
aad
shll
jno
jnp
and
and
fwait
mov
mov
mov
cmpsl
or
in
and
adcb
in
adc
adc
hlt
and
mov
inc
inc
sbb
sbbl
mov
adc
fidivs
jbe
jne
pop
pop
das
mov
das
mov
jmp
sbb
dec
add
xor
lock
rcrl
sarl
pop
rorl
cmp
ret
xchg
lods
jno
ret
sub
lret
xor
shr
jp
ss
cli
pop
push
sbb
mov
push
ret
inc
test
mov
dec
aam
push
adc
imull
nop
mov
jae
int
jle
arpl
adc
call
mov
or
loopne
fsubrs
jbe
in
push
sahf
lcallw
icebp
dec
outsb
mov
or
enter
push
sbb
mull
xor
fimuls
mov
daa
sarl
out
iret
jne
sti
cmpsb
inc
cli
pop
jle
xor
rol
xor
jns
enter
test
subb
cmc
nop
cmp
lret
push
mov
or
fs
outsb
test
rorb
int3
and
iret
fidivrl
or
pop
scas
out
dec
cmpsl
sbb
mov
pop
out
xor
nop
stos
cmpsb
inc
lea
adc
pop
sbb
aas
imul
cltd
jmp
addr16
lds
cmc
jbe
popf
in
lock
adc
or
cmp
add
jns
lock
les
pop
pop
shrb
lahf
lcall
mov
dec
or
lds
xchg
test
nop
test
and
xchg
add
cltd
jno
int3
cmp
dec
movsl
mov
test
cmp
cmp
daa
adc
fwait
inc
pop
mov
cld
loope
jmp
cmpsl
enter
fmull
dec
ljmp
dec
lds
adc
negb
and
lock
and
mov
aad
xor
aas
mov
negb
pop
pop
in
popa
clc
gs
sub
push
lods
or
push
rcl
mov
xchg
call
add
mov
divl
cmp
rorb
popa
mov
or
cli
or
cmp
fildl
cli
data16
sub
push
sub
push
push
int3
data16
ret
js
sbb
mov
mov
hlt
sti
popl
jbe
aaa
sbb
insl
bound
sbb
shr
insl
dec
shll
pop
mov
cmp
xor
call
lea
mov
sbb
es
mov
pusha
jno
out
decl
jecxz
call
lods
scas
mov
pusha
inc
xchg
inc
mov
ja
xchg
into
incb
push
push
jecxz
or
sub
adc
jp
scas
out
sbb
enter
push
mov
test
test
ljmp
jl
sub
enter
sbb
xor
jns
pop
dec
out
or
shlb
lock
leave
gs
clc
jle
mov
scas
pop
mov
jb
lods
outsb
nop
icebp
ret
pop
dec
xchg
fwait
pop
xlat
cs
add
jne
inc
sub
inc
add
call
jge
xor
jle
scas
rcll
mov
sarb
icebp
pop
xchg
mov
movsb
inc
inc
sbb
test
inc
add
lea
mov
pop
or
mov
sub
cltd
cli
les
ds
test
add
popf
cmp
pop
jle
int3
pop
sub
mov
test
inc
sub
mov
mov
rorl
jge
pop
pusha
xchg
gs
xchg
and
fs
add
fldl
adc
ds
push
pop
sbb
xchg
mov
sub
nop
pusha
push
out
fsubrs
mov
rolb
sub
shrl
fs
adc
sub
cwtl
xchg
lret
sbb
add
ss
sbb
daa
negb
stos
sbb
imul
or
aad
lahf
fld
mov
aam
inc
outsl
mov
pop
rep
sub
test
enter
fcomps
jp
fldenv
xchg
out
rol
leave
pusha
push
lret
mov
aaa
inc
mov
or
aaa
xchg
push
cmp
scas
push
mov
cmp
push
jb
pop
add
shl
xchg
cmp
repz
sbb
clc
mov
popa
cmp
xchg
mov
pushf
adc
popa
insl
je
shll
imull
xchg
xchg
inc
mov
adc
or
xorl
loope
cli
mov
in
jne
das
out
mov
aad
mov
adc
dec
lahf
sub
xor
in
je
outsl
std
xor
adc
xchg
ret
pop
add
cmp
pushl
enter
mov
mov
xor
mov
pop
lea
ljmp
add
mov
push
outsl
add
push
inc
sbb
dec
mov
insb
mov
pop
pusha
es
push
mov
xorb
je
push
out
fisubl
jge
lds
push
jg
incl
mov
mov
and
xchg
add
cmpsl
cmp
outsl
arpl
lret
mov
add
shlb
cmc
pop
nop
xchg
fistps
orl
aam
loope
dec
and
aaa
mov
aaa
sbb
push
jne
inc
in
das
pop
test
xchg
cmpsl
pop
xlat
dec
sbb
lahf
out
adc
dec
clc
and
adc
dec
daa
sub
pop
xchg
test
pop
push
movsl
repnz
push
je
lret
lret
xor
test
pop
add
sub
iret
inc
xchg
inc
adc
cmc
add
push
nop
fisttpl
mov
mov
add
stc
shlb
mov
out
js
test
outsb
outsl
mov
je
in
mov
sbb
mov
xor
es
or
push
shll
je
int
loopne
sub
or
mov
lcall
and
jge
cwtl
dec
push
inc
rorl
outsl
add
mov
xor
cmc
dec
cmpsl
mov
stc
xchg
add
repz
xchg
xor
cltd
sahf
negl
mov
fidivl
lods
clc
add
xor
xor
push
test
cwtl
sbb
bound
xchg
incl
push
icebp
insb
es
push
sbb
js
xlat
fnstenv
sbbl
or
or
mov
lahf
adc
push
fs
out
mov
fwait
sbb
fdivrp
push
negb
imul
movsb
mov
xchg
mov
push
pop
cmpsb
sbb
out
xchg
mov
mov
mov
cmp
adc
sub
sub
sar
jb
or
repz
push
mov
or
mov
lds
push
pop
leave
mov
jle
sbb
lods
sub
hlt
dec
aam
popa
pushf
xor
or
scas
gs
jecxz
mov
add
xchg
cld
ret
mov
ds
xor
cmpb
jge
decl
outsl
xchg
arpl
xchg
xchg
pushf
dec
sbbb
sub
mov
jle
and
std
pop
pushf
xor
xchg
xchg
mov
cmp
cmp
xchg
xchg
loopne
mov
enter
or
jmp
adc
repz
insb
stos
jmp
dec
xchg
xchg
mov
cltd
xchg
jae
int
cmpsb
or
ljmp
enter
notb
cmpsl
and
repz
nop
pushf
cmp
pop
mov
sti
test
mov
mov
fsts
xchg
mov
xor
and
sbb
mov
mov
adc
arpl
push
imul
negb
jnp
jae
les
daa
lods
push
faddp
push
and
sbb
xor
xor
out
mov
repnz
inc
xchg
filds
jo
faddl
rcrl
xchg
jne
push
flds
dec
test
pop
cmp
das
pop
daa
mov
sub
and
mov
loopne
push
cld
pop
jne
dec
dec
outsb
out
movsl
push
xor
test
adc
cmp
push
xchg
mov
push
inc
mov
outsl
sahf
pop
shrb
stos
jecxz
xor
push
lret
daa
mov
push
pop
xchg
mov
cmpsb
js
xor
rol
js
cmpsl
push
idiv
mov
testl
cld
mov
call
jo
xor
sub
dec
shl
sbbl
sub
add
mov
add
shrb
cmp
cmp
jns
in
nop
shr
sbb
out
test
inc
and
cmp
push
fistpl
inc
mov
and
popf
lea
addr16
mov
push
lock
xor
lcall
cmp
push
fadd
cmpsb
hlt
and
popf
cs
sbbb
add
shlb
shlb
add
in
cmp
jle
mov
out
pushf
mov
fisubl
sbb
iret
stos
push
sbb
lods
test
aas
pop
popa
andb
lcall
add
push
imul
movsl
popa
sar
call
out
pop
stos
push
and
pop
cmc
jle
and
adc
cmp
lcall
dec
add
push
cmp
lcall
inc
adc
sahf
fdivl
arpl
cmp
mov
ficoml
lds
cld
push
push
sub
pusha
pop
push
lret
push
add
inc
adc
iret
xchg
sti
mov
cs
fs
dec
mov
or
add
ret
and
push
pop
cmpsb
orb
and
jl
rcl
jne
adc
fildl
sub
inc
clc
push
cmc
pop
sbb
inc
jbe
cmp
mov
add
dec
scas
loopne
and
add
inc
mov
xor
xchg
shr
and
mov
push
push
or
xchg
cmp
pop
and
fstpt
sub
outsl
sbb
xchg
jno
adc
call
and
aaa
ret
add
loop
mov
bnd
pop
mov
aad
in
cmp
lea
popa
repz
xor
sarb
addr16
push
fiadds
mov
daa
adcl
stc
ja
dec
push
nop
icebp
aad
sbb
mov
stc
or
mov
cmp
sbbb
mov
cmp
cmp
fbld
or
xchg
sbb
out
enter
jo
jle
out
repz
and
cld
fidivrl
aam
cltd
out
cmp
dec
aam
sub
and
outsl
dec
add
jbe
inc
cld
push
adc
push
icebp
jnp
arpl
cmpsl
insl
pop
int3
adc
jle
mov
or
cli
inc
mov
xor
mov
mov
adc
cmp
mov
aad
add
xchg
stc
dec
fcoms
stos
cmp
and
hlt
test
out
adc
sbb
nop
sub
and
mov
out
mov
mov
test
or
iret
jg
jbe
inc
das
in
xor
inc
popf
fcmovu
mov
lret
mov
cmp
inc
jne
inc
mov
testb
les
mov
sub
mov
add
addr16
xchg
clc
dec
addr16
insl
andl
pushl
shr
inc
lods
pop
jno
test
lods
cmp
out
ret
mov
mov
cmc
repz
out
and
dec
xchg
or
push
incb
fistpll
mulb
mov
pop
cmp
or
sbb
and
outsl
mov
or
adc
pop
jecxz
scas
push
add
insb
mov
loopne
fmulp
jbe
xor
lods
push
out
and
mov
int3
mov
cmp
faddl
cmpsl
push
ljmp
rorl
fwait
leave
hlt
and
cmp
mov
in
lods
add
and
jp
xor
inc
aam
clc
pop
cmpsb
andl
nop
sbb
scas
in
xor
or
dec
ds
mov
push
nop
aaa
pop
add
pop
mov
dec
ja
xchg
lods
shlb
and
add
rol
xlat
movsl
sbb
dec
jecxz
jp
sbbb
xor
push
inc
rorb
lahf
insl
mov
mov
cmp
xchg
cwtl
xor
mov
push
hlt
mov
aad
push
sbb
repz
shrb
fsubrs
jecxz
sub
push
jno
cmp
inc
or
das
notl
or
loopne
sub
int3
mov
jbe
and
xchg
sbb
mov
mov
sub
or
mov
scas
insl
mov
xor
test
icebp
int
pop
sub
gs
hlt
in
inc
sub
cmp
add
loope
pop
jae
mov
daa
adc
cmp
mov
scas
cld
fwait
push
inc
sbb
jbe
js
mov
inc
mov
fdiv
jno,pt
cmpl
pop
dec
pop
mov
icebp
fincstp
and
sub
leave
add
lcall
jle
dec
das
mov
dec
enter
out
mov
jns
fisubrl
sbb
imul
jb
pop
sbb
imulb
mov
data16
sub
cmpsb
jecxz
fcompl
clc
lret
stos
repnz
pop
insl
fsubrl
out
out
jge
aam
pusha
jle
xchg
lret
sub
mov
fcomi
cmp
fs
sti
cwtl
mov
inc
dec
jg
xor
and
dec
jb
adc
repnz
xchg
adc
loope
ja
pusha
subb
into
sub
cmpsb
sub
fsubs
pop
negb
jns
xchg
lods
pushf
js
clc
dec
adc
mov
leave
lods
xchg
push
andl
shlb
insl
sbb
das
pop
mov
cmpsl
cmpsb
scas
sub
sub
pop
sub
sarl
sub
and
popa
stos
sbb
mov
jp
lods
pop
movsb
in
cmp
pop
cmp
outsb
imul
adc
jge
leave
add
mov
out
jno
dec
xchg
stc
sarb
push
sub
adc
add
lods
out
sahf
mulb
push
fstps
gs
xor
sub
xlat
dec
push
mov
fidivl
lods
mov
fidivs
nop
addb
shrb
cmp
addr16
mov
rcrl
cmp
xor
arpl
jmp
pop
aas
iret
add
sarb
inc
shrb
jle
pop
add
inc
cmp
cmp
rcr
dec
js
loop
loopne
loopne
cwtl
mov
outsl
cmp
cmp
mov
xor
adc
popa
sub
sti
push
sub
mov
mov
push
sahf
pusha
push
pop
pop
imul
ret
mov
mov
jge
sub
push
stc
in
sub
push
and
ss
xchg
int
jl
in
pop
ljmp
out
imul
fmuls
push
test
outsb
dec
or
into
xorb
ds
xchg
cmc
pop
adc
cmc
inc
addr16
sti
into
mov
cli
pop
inc
jne
xchg
push
mov
int
fcompl
pop
les
fstpl
addr16
lock
out
xchg
sbb
icebp
ss
shll
imul
lods
dec
xchg
outsl
cmc
xor
inc
sub
out
mov
jl
pop
mov
fildl
inc
mov
movsb
mov
aam
cs
icebp
out
sahf
or
gs
mov
pop
lcall
xchg
xor
sbb
push
sbb
aad
out
decl
mov
sti
arpl
pop
jle
inc
dec
inc
popa
xchg
mov
hlt
stos
leave
jns
loop
outsb
pop
mov
push
or
jae
inc
repnz
jnp
mov
into
ja
xchg
das
in
jns
dec
push
test
imul
imull
xchg
ret
lret
mov
push
mov
sub
add
test
adc
mov
and
add
adc
xchg
js
or
pop
insb
cmp
jle
movsb
icebp
xchg
mov
sbb
xchg
and
fsubl
shlb
nop
lret
lods
outsl
repnz
push
sbb
mov
mov
loop
imul
in
gs
inc
add
test
add
jmp
pop
pushf
aaa
mov
and
mov
lea
fisttpll
dec
movsb
imulb
jmp
push
in
jmp
and
pop
rclb
sbb
push
mov
inc
jo
cli
dec
push
loopne
addr16
cmp
popa
sbb
ljmp
inc
lock
fildl
aas
rolb
fcmovu
and
lods
repnz
inc
nop
dec
mov
outsb
cmpsb
dec
pop
adc
mov
pop
sbb
jbe
jmp
add
dec
shlb
fistpl
dec
movsb
add
lods
dec
scas
loopne
inc
dec
or
cli
push
out
mov
mov
and
adc
and
inc
enter
and
lods
add
fisubs
int
ljmp
aam
rorb
imul
mov
xchg
sub
daa
mov
sbb
inc
divl
nop
and
adc
push
mov
and
cmp
jle
test
shlb
push
hlt
xchg
lock
sbb
ljmp
in
adc
in
sahf
ja
lods
aaa
stos
mov
cmp
pushf
inc
jge
add
sbb
fdivs
fcomps
arpl
sarb
mov
pop
mov
rol
mov
push
orps
push
js
mov
cld
jmp
inc
adc
adc
les
cvtdq2ps
mov
xchg
jg
or
scas
aam
pushf
and
aaa
sub
packuswb
jbe
sbb
js
jp
xor
scas
cmp
ret
lret
imul
mov
test
sub
sub
das
arpl
pop
fimuls
dec
pop
fnstenv
aaa
sub
enter
shl
and
dec
cmp
jne
rol
stc
or
xor
jae
rcrl
inc
xchg
and
daa
sub
insl
call
scas
jne
jb
ret
faddl
mov
sti
push
sbb
or
sbb
orb
mov
xchg
add
rcrl
or
inc
cmc
xchg
mov
cmp
sbb
test
fucomi
sbb
fs
lret
call
fadds
adc
lahf
stc
mov
push
xor
xor
pop
jg
aad
rcr
fldt
repz
gs
insb
xchg
test
add
push
mov
inc
pusha
stos
test
jne
ret
fxch
mov
lret
sbb
ret
xor
lret
imul
js
dec
fisttpll
repz
stos
mov
add
mov
jg
data16
mov
jnp
cltd
sub
cmp
or
into
add
out
push
mov
xor
cmp
inc
clc
sub
test
push
out
iret
inc
or
lods
imul
add
jg
or
add
daa
jnp
inc
sbb
je
mov
popf
test
mov
push
push
xlat
leave
pop
cmp
cmpsb
mov
jbe
jno
mov
add
repnz
add
aas
in
push
xchg
push
mov
jle
ret
mov
jg
push
lea
xchg
mov
jmp
jmp
daa
jle
stc
xchg
inc
and
mov
mov
in
icebp
out
mull
arpl
cwtl
pop
cld
push
mov
cmp
lret
enter
jns
fisttpll
push
aad
xlat
pop
aaa
lcall
jmp
xchg
sub
cmp
inc
stos
dec
insb
ret
lock
xchg
out
adc
in
testb
cmpsb
cmp
pop
ret
les
scas
lret
mov
mov
jae
mov
push
dec
aas
imul
pusha
dec
mov
in
insb
loop
shrl
nop
inc
shl
scas
mov
imul
xor
cmp
std
mov
cwtl
data16
push
loope
icebp
dec
xchg
lsl
shr
adc
fs
inc
leave
mov
cs
dec
and
sub
scas
cmc
movsb
mov
aaa
cld
clc
jle
imull
lods
push
ret
rcrb
inc
mov
pop
push
adc
stos
push
outsb
mov
inc
jae
adc
div
adc
xor
sub
aam
scas
int3
add
push
outsb
inc
jo
cmp
je
lods
adc
pop
lahf
sub
jne
mov
and
mov
or
mov
ret
jge,pt
xchg
nopl
shlb
ret
dec
aad
pop
dec
dec
test
push
sbb
call
mov
cli
sub
pop
sub
add
lods
cmpsb
loopne
push
cmp
sbb
sub
mov
xorb
xchg
icebp
rorl
xorb
cmp
add
sbb
pop
insb
push
sbb
nop
fildl
dec
mov
pop
repz
fdiv
add
and
ror
shl
pop
jmp
adc
inc
xor
subl
ljmp
add
mov
add
sub
fwait
pop
mov
mov
mov
adc
xchg
push
repnz
jne
mov
loopne
pop
sahf
sub
add
dec
cmp
xchg
mov
fdivr
inc
jo
enter
movsl
pusha
aad
and
ja
xchg
xor
cs
out
enter
add
jno
cmpsb
insb
fchs
leave
shll
loop
pop
repnz
out
cli
cmpsl
pop
int
xor
jae
jmp
sti
jo
lret
fwait
mov
mov
in
enter
popa
adc
jae
pop
jmp
rcl
push
cwtl
jge
imul
fdivs
addr16
xchg
adc
and
push
ja
movsb
inc
out
out
popa
push
enter
cld
and
pop
xchg
xchg
and
shll
mov
fs
sbb
inc
push
in
jge
cmova
lea
pop
imul
adc
lods
jp
jo
lret
movsb
mov
popa
inc
loope
cmp
jne
test
dec
push
jge
and
sbb
in
cmpl
in
pop
mov
stc
push
mov
cwtl
dec
inc
enter
aad
mov
mov
push
mov
aaa
mov
xchg
jmp
pop
lock
imul
mov
dec
jne
push
mov
ds
sti
jp
xor
jns
out
dec
cmp
icebp
ljmp
int3
cmc
sbb
clc
in
xor
push
shr
outsb
sbb
dec
popl
sbb
sbb
and
leave
lea
pop
pop
inc
sub
dec
jo
test
in
xchg
and
ret
lea
mov
outsl
jge
loopew
mov
imul
pusha
ficompl
xchg
jmp
and
scas
das
xchg
jge
fwait
aad
stos
xlat
aaa
xor
push
mov
mov
je
adc
push
orb
orb
mov
xchg
int
mov
mov
jae
leave
stc
and
into
shll
pop
data16
or
lcall
add
lcall
imul
in
xor
xor
sbb
lret
fnstcw
hlt
lahf
and
int
jg
mov
mov
int
enter
ret
out
sti
aaa
jmp
jmp
pop
xor
jne
mov
mov
pop
xchg
adc
mov
gs
mov
xor
ss
icebp
push
imul
fcomps
sahf
pop
and
rorb
cmc
push
in
ja
stos
test
xchg
rorb
sub
hlt
test
lahf
int
inc
push
loop
cmp
and
xchg
sub
dec
inc
mov
inc
sbb
leave
cmp
or
mov
mulb
cmp
mov
pop
cwtl
insb
cmp
fadds
into
push
std
push
jb
stos
dec
adc
and
cld
add
or
shrb
sti
sub
arpl
xchg
inc
mov
sbbb
cmc
sahf
add
jo
jbe
stos
arpl
je
xor
mov
xchg
jns
aaa
ret
pop
scas
je
cld
mov
fwait
rcr
pop
add
push
xor
stc
jp
mov
icebp
push
inc
dec
jp
pushl
daa
daa
shlb
dec
cli
mov
mov
mov
outsl
pop
inc
fiadds
inc
xchg
inc
dec
repnz
pop
push
mov
lret
cmp
repnz
in
addl
in
cs
mov
into
adc
nop
ja
in
cmp
out
ficoml
dec
cmp
dec
add
inc
je
jbe
arpl
add
fiadds
pop
pop
outsl
or
jno
les
movsb
fnstsw
daa
into
or
mov
inc
leave
mov
cmp
cmpsl
mov
mov
lods
icebp
lret
xchg
sub
daa
and
pop
sub
xor
xchg
lods
in
fisubrl
hlt
nop
sti
jbe
push
push
lcall
inc
repz
dec
pop
call
dec
pusha
movsb
jnp
test
pop
stc
ds
cmp
add
adc
sub
push
mov
mov
sub
jmp
lds
jge
into
sbb
adc
pop
adc
test
jnp
cmp
mov
loop
aas
jl
aam
ror
les
fidivrs
inc
inc
lahf
pop
addb
test
mov
jne
gs
xor
sub
stos
test
push
xchg
pop
lea
jbe
jmp
mov
add
loopne
and
mov
jmp
int
xchg
and
roll
rcrl
xchg
mov
xchg
nop
imul
std
iret
iret
or
ja
notl
inc
ja
out
mov
fcomps
adc
mov
cli
push
iret
in
mulb
and
push
int3
lea
mov
sbb
fs
nop
push
out
xor
pop
inc
push
adcl
pop
ficompl
pop
pop
decb
loope
inc
mov
std
loop
int3
popa
repz
stos
sti
mov
lea
in
lods
mov
inc
in
loopne
push
test
fnsave
pop
or
je
sbb
cli
lret
in
mov
movsl
pop
add
pusha
mov
loope
push
push
xchg
xor
clc
test
hlt
jno
push
adc
arpl
pop
into
std
xchg
jmp
sub
aam
and
inc
arpl
in
dec
clc
daa
test
push
inc
or
sti
cmp
xor
loop
dec
mov
xlat
or
mov
jne
mov
testl
sti
adc
mov
xlat
sub
jne
xor
addl
xor
dec
xchg
xor
mov
ds
insl
add
xchg
sub
xchg
mov
cld
cwtl
clc
ljmp
adc
adc
sahf
imulb
or
ret
pop
mov
inc
xchg
lea
outsl
je
push
push
shll
xor
rorb
pusha
daa
test
aad
jno
and
rcr
stos
and
outsb
inc
mov
jg
cmpsl
add
or
cmp
gs
fimull
jno
ss
push
cmp
roll
fidivl
cmp
dec
sbbl
dec
sub
jbe
xor
pusha
mov
dec
out
sbb
sub
inc
das
or
push
pop
cld
mov
lret
movsb
mov
fsub
std
sub
rep
xor
push
push
ss
mov
sub
dec
pop
roll
enter
fwait
ds
push
stos
nop
and
imul
add
push
adc
mov
cld
dec
ret
xor
cmp
rorl
popf
jecxz
int3
fsubrs
bound
in
lahf
in
xlat
push
inc
sbb
popf
test
adc
ret
aad
rorl
xchg
and
jno
mov
pop
outsl
inc
cltd
jo
std
int3
cmp
bound
or
push
sub
out
pop
and
mov
push
and
or
pop
imul
add
mov
mov
and
pop
in
jae
xchg
pop
xlat
pop
mov
xor
inc
and
and
bound
test
xorl
inc
loop
cltd
jle
icebp
in
sbb
arpl
jno
ret
pop
cmp
push
test
stos
clc
outsl
inc
xchg
popf
test
imul
hlt
pushf
sti
adc
push
outsb
repz
pop
movsb
push
jl
or
add
stos
popa
icebp
ja
mov
imul
std
xchg
cmp
sbb
inc
imul
inc
xlat
int3
cmp
mov
adc
shrb
add
popf
sahf
mov
stos
mov
scas
icebp
imulb
in
lods
cmpsb
jae
negl
add
ds
stos
leave
int3
cmovae
jle
dec
mulb
jo
mov
lahf
daa
into
adc
popa
dec
push
and
push
xor
cli
mov
loopne
add
mov
inc
push
sti
test
mov
icebp
sbb
mov
lds
sti
or
add
lret
fsubrl
push
and
mov
stos
xor
lods
in
jecxz
lea
jl
jge
das
xor
shl
xchg
mov
adc
es
jg
stos
lea
into
ja
mov
jo
stc
es
jo
xchg
data16
ja
out
sarb
notl
pop
sbb
sbb
cmpl
pop
jmp
leave
sub
xchg
or
lods
adcl
stos
incl
shll
aas
sbb
push
enter
cld
or
or
notl
gs
pop
inc
xchg
pusha
sub
mov
pop
xchg
pushf
pushf
lea
mov
pusha
arpl
repnz
or
cmp
dec
cld
test
xchg
xor
push
aaa
add
scas
xor
pop
pop
cmp
scas
scas
push
push
movhps
mov
shl
pushf
jb
shrb
stc
adc
sar
inc
mov
pop
es
cli
fidivrl
repnz
cmp
shlb
insl
jo
mov
insb
out
daa
fcmovnbe
mov
gs
cmpsl
aas
mov
xor
inc
mov
outsb
nop
xchg
les
leave
pop
add
mov
ds
fsts
daa
int
inc
test
lcall
arpl
shrb
jnp
data16
ljmp
aaa
shll
dec
add
enter
imulb
test
mov
jo
sbb
aaa
jbe
mov
xor
das
adcl
xchg
pop
mov
in
stc
or
xchg
and
inc
jo
and
lret
sbb
dec
lret
mov
jns
repnz
test
inc
add
aas
mov
sub
rcll
or
outsl
mov
xchg
cmc
ret
popa
mov
nop
inc
int3
movsb
dec
push
or
mov
pusha
out
xor
bound
test
sub
inc
loope
adc
mov
cld
xchg
or
ja
lcall
repnz
mov
cmp
rorl
pop
xor
or
xchg
sbb
stc
jnp
les
jp
movb
and
add
push
or
mov
mov
mov
aas
inc
insb
sbb
pop
pop
lcall
neg
sti
lcall
pop
nop
iret
clc
cwtl
clc
jns
xor
mov
jae
fisttpll
jns
leave
lcall
xlat
cmpsl
sti
filds
shlb
and
mov
nop
add
push
pusha
mov
test
gs
inc
test
leave
mov
test
or
orps
jecxz
in
dec
dec
loop
test
pop
scas
push
or
rcrl
fdivrp
mov
fldenv
sub
dec
mov
lcall
mov
int
fdivrs
mov
sbb
sbb
int3
or
mov
std
ljmp
fcompl
adc
imul
jb
jo
outsb
sahf
int3
mov
add
rolb
pusha
sub
sahf
imul
cwtl
shlb
or
sub
add
cmp
rclb
xchg
cs
mov
sarb
out
push
xchg
dec
xchg
jb
add
in
cmpsb
movsb
fbld
js
repnz
std
aas
in
pop
adc
push
outsl
outsb
cmp
sbb
inc
fsub
ljmp
std
pop
inc
add
ljmp
sub
test
cltd
jp
cmpsl
mov
gs
in
pop
push
sbb
cmpsb
mov
lcall
mov
lods
sahf
mov
xchg
frstor
pop
bound
mov
imul
out
inc
fisttpll
loope
out
inc
and
mov
pop
mov
xor
inc
xchg
dec
orl
into
ljmp
xor
mov
mov
dec
mov
cld
imul
mov
xchg
in
test
repz
daa
sub
push
repz
jle
push
pop
inc
icebp
stos
mov
std
xor
jp
enter
sbb
sbb
xchg
pop
cs
out
daa
mov
or
lret
inc
pop
dec
arpl
push
testl
test
xchg
dec
jne
jns
mov
int
or
mov
add
push
and
loope
pop
pop
or
lahf
cmpsb
xor
cltd
mov
out
xchg
and
cmp
aam
fwait
pushf
imul
int3
jl
and
jb
iret
sbb
int3
xor
js
iret
adc
clc
xchg
add
mov
lods
push
daa
dec
inc
pop
subb
fildl
xor
out
lcall
jecxz
xor
xor
xchg
cmp
test
iret
in
int
mov
dec
inc
mov
jb
mov
add
fimull
cs
test
pop
lahf
xchg
push
xchg
inc
les
pusha
pop
int3
mov
sbb
sbb
mov
jne
iret
insb
mov
mov
addl
dec
xor
outsb
jle
dec
sub
mov
mov
dec
mov
or
jnp
fldt
adc
in
icebp
lods
xchg
and
pop
or
icebp
xchg
bound
sub
add
imul
enter
push
aad
insb
int
inc
addr16
mov
mov
sub
sarl
cs
leave
popa
mov
je
cs
ret
insb
mov
adc
sbb
popf
cmp
adc
or
lock
lock
cmp
in
push
mov
xchg
pop
test
jge
inc
jno
mov
and
dec
mov
test
dec
xchg
cmp
daa
jge
xchg
mov
push
std
jecxz
leave
xchg
sub
sarl
sbb
rolb
push
cld
pop
test
push
movsb
jae
imul
cmpsl
adc
sub
ret
mov
pop
push
push
sub
lcall
pop
cmp
out
inc
jnp
outsb
sub
in
mov
loopne
mov
add
pop
xlat
lcall
pop
sub
jb
scas
es
xchg
jp
xor
cmp
pop
fs
jbe
xchg
sar
adc
pop
test
lds
imul
xchg
mov
rclb
mov
testl
push
jno
pushf
xor
xchg
pop
jno
mov
mov
push
arpl
mov
pusha
cmp
fwait
xchg
xor
ret
aam
movsl
or
mov
add
daa
xchg
and
push
sub
cmp
jnp
das
loope
leave
dec
outsl
mov
or
sahf
enter
in
inc
ljmp
jno
daa
bound
sub
and
fucomp
rolb
nop
iret
and
pop
pop
cli
in
jo
cmpsb
mov
jecxz
pop
scas
ror
xchg
sbb
xchg
cmpl
lea
mov
sub
xchg
or
loope
into
cs
mov
push
scas
or
stos
fcompl
lock
pop
sbb
sub
sbb
aam
sub
cmpsl
pop
out
in
xchg
aam
mov
jle
sbb
lock
mov
add
xchg
mov
cmp
mov
loop
shlb
lds
stc
dec
cmc
repz
add
mov
jno
imul
pusha
in
jae
push
repnz
gs
sbb
in
dec
mov
sbb
test
imul
add
in
xlat
jle
pusha
cld
outsl
lea
push
inc
jmp
mov
push
pop
into
add
pop
xor
std
arpl
xlat
arpl
cmpsl
dec
push
andb
and
jmp
dec
orl
mov
insb
adc
or
inc
mov
iret
ja
ljmp
dec
xchg
inc
and
loope
push
and
mov
out
mov
dec
arpl
xlat
add
push
movsb
and
mov
enter
loopne
pop
sub
out
cs
in
ja
jg
lods
or
sub
fwait
cmp
enter
enter
jmp
ret
js
rorl
sbb
loop
stos
rol
push
fildll
std
inc
out
and
js
cmp
hlt
jno
add
mov
jl
in
test
jmp
xchg
push
pop
sbb
flds
pop
call
xor
and
jno
lods
ret
xor
adc
pushf
adc
ja
pop
std
shrb
dec
adc
cltd
pop
xchg
fmuls
sbb
xchg
js
inc
push
cmp
movsb
lods
lret
and
cwtl
jb
mov
pop
out
movsl
imul
sub
jne
xchg
fldenv
mov
sub
dec
inc
push
inc
adc
cltd
std
pop
mov
pop
fnstenv
add
aam
jno
and
cmp
fs
push
daa
addr16
inc
scas
aas
stos
cmc
lcall
outsl
push
sub
pop
mov
cld
or
cmp
push
and
adc
cmp
xor
mov
mov
inc
dec
jne
mov
or
push
mov
dec
ss
lahf
sbb
sub
insb
out
jns
push
movsb
mov
ret
mov
jno
jl
sub
inc
in
nop
mov
mov
repz
fcmovbe
and
adc
in
inc
xor
add
xlat
andb
mov
jl
into
pop
outsb
testl
push
sbb
daa
mov
inc
or
jge
pop
icebp
cs
or
mov
inc
aam
gs
pop
mov
push
popa
insb
icebp
xorl
pop
cs
sub
xchg
fwait
mov
cmp
inc
add
pop
dec
mov
cmpb
jae
xor
push
orb
out
adc
mov
mov
jae
jge
xor
mov
adc
call
into
pop
data16
mov
adc
pop
lret
mov
pop
inc
or
mov
icebp
mov
movsb
ret
out
aam
notl
adc
sti
cld
shrb
popa
push
scas
fnstenv
and
pop
adc
scas
push
inc
mov
inc
aaa
sub
pusha
push
push
xchg
pop
sbb
in
jl
fdivrs
push
mov
mov
push
aas
repz
xchg
lods
lahf
cmp
xchg
test
shrl
fnstcw
idiv
fnstcw
dec
sbb
in
rcrb
sarb
xor
cmp
jae
add
sbb
mov
jb
xchg
out
in
mov
add
sub
sub
lock
and
xchg
mov
pop
jmp
scas
or
insb
xchg
pop
jp
repnz
push
push
adc
push
std
dec
push
ds
cmp
vmwrite
fdivl
inc
dec
insb
jbe
add
mov
outsl
mov
pop
mov
pop
shll
flds
mov
sbb
and
js
out
movsl
movsb
jmp
fldt
gs
insb
jno
push
cwtl
data16
data16
loop
and
jbe
add
xchg
cmp
cmp
pop
add
mov
cmc
cld
imul
push
xchg
jp
pop
fs
icebp
mov
mov
jb
movsl
cmc
enter
movsb
call
inc
outsl
sbb
dec
shrl
cmp
push
inc
lahf
das
shrb
loope
xchg
jmp
jae
in
mov
clc
lcall
inc
push
jb
xor
aam
push
pusha
pop
inc
test
dec
insl
push
push
inc
adc
sbb
call
repz
sub
fmull
xchg
ret
xlat
lahf
dec
es
outsl
clc
cmp
stos
or
cmp
in
inc
xchg
fadds
sarb
inc
pop
sub
out
hlt
sub
das
cmp
xchg
mov
pusha
jle
stc
jnp
adc
roll
and
pop
pushf
lock
pop
mov
xor
xor
icebp
fiadds
cltd
xchg
jno
push
jns
out
jp
mov
inc
lret
imul
addb
cs
xchg
enter
cltd
jo
and
pop
jbe
icebp
adc
jae
sub
mov
in
cwtl
jle
push
sbb
sahf
scas
mov
and
push
pop
and
pop
and
jb
xor
lcall
inc
mov
je
inc
xchg
and
lret
jns
xor
cmc
fisubl
sahf
add
addb
jbe
movsl
sbb
xchg
es
loop
jne
lea
out
pop
pop
jecxz
mov
mov
dec
cs
xchg
fisubl
xor
rclb
pop
push
jl
ljmp
imul
fwait
lret
pop
adc
mov
sahf
cld
popa
insl
push
addr16
cwtl
cmpl
movsb
rolb
pop
nop
xchg
stos
dec
inc
xor
jmp
dec
pop
mov
xchg
aam
rcrl
pushw
add
jl
pop
adc
shr
enter
clc
fbstp
sbb
adc
pop
xchg
std
les
adc
mulb
xchg
jb
ja
invd
mov
sahf
imul
rolb
iret
and
mov
pop
xor
jmp
add
and
xchg
lods
xor
jecxz,pt
mov
mov
call
and
inc
xor
insl
adc
testb
negb
xchg
iret
sahf
cmp
filds
or
pop
add
jg
mov
sub
mov
mov
cmpsl
test
mov
pop
mov
mov
lret
sbb
pop
xlat
adc
dec
ret
out
add
add
filds
sarb
mov
dec
dec
push
adc
push
in
sbb
pop
push
cmp
pop
and
and
or
cli
cmp
fdivrs
movsb
pop
ret
mov
pop
aaa
xchg
or
iret
adc
iret
adc
dec
lea
out
les
and
push
sub
jl
movsl
sub
pop
lock
out
arpl
add
pop
mov
out
xor
mov
imul
adc
repnz
orb
sahf
sub
imul
fadd
mov
mov
and
push
dec
cmp
mov
nop
adc
jne
jo
cwtl
mov
pop
or
dec
out
test
aad
ja
xlat
dec
iret
in
add
aaa
push
cmp
lods
jb
mov
in
jns
xor
push
lock
mov
icebp
mov
xchg
das
cli
push
clc
ret
xor
shrl
inc
arpl
jae
fcoml
in
ret
adc
movsl
ja
imulb
test
cmpsb
add
adc
movsb
repnz
or
mov
or
jle
push
insb
clc
mov
leave
into
movsb
xor
jae
adc
pop
sub
ljmp
mov
lcall
jecxz
cmp
sbb
ss
jne
repz
pop
ror
in
cmpsb
add
rcrb
fs
or
add
adc
int
fisttpl
jns
inc
push
insb
cmp
std
cmpsb
lods
test
cs
xor
es
mov
pop
out
add
sbb
mov
add
loope
mov
lcall
inc
mov
ret
fsubr
cwtl
shr
out
mov
insl
lds
lahf
pop
fdivrl
lods
lods
bound
push
in
outsl
cwtl
inc
rcrl
cmp
mov
cmp
and
fisttpll
xor
mov
test
push
pusha
sbb
jns
and
jo
mov
push
mov
jecxz
pop
cmpsb
fs
ds
lahf
lcall
and
decl
insb
xor
stc
pop
popf
mov
mov
cmpsb
test
loope
pop
mov
jne
aam
leave
push
pushf
sub
fdivr
mov
sbb
cld
pop
xor
and
add
shr
mov
add
test
pop
adc
xor
iret
push
pop
sub
push
shlb
orb
mov
and
outsb
xor
andb
stc
icebp
push
cmp
test
inc
lds
jno
out
rolb
neg
push
sbb
loope
scas
mov
je
jnp
add
ds
adc
push
popf
loop
addr16
fsubs
pop
mulb
lock
or
popf
shll
lret
repz
orl
stos
sbb
sub
out
jp
pop
mov
lcall
or
xor
mov
mov
add
xchg
jp
or
lock
sbb
jb
mov
or
sti
in
lahf
pop
insb
pop
leave
mov
test
cmp
xchg
or
sub
pop
insl
dec
pop
cmp
cs
cmp
inc
xor
push
adc
xor
lret
or
add
push
jl
es
add
inc
inc
add
mov
loopne
fdivrs
cmp
lret
mov
jge
fwait
xor
mulb
notl
or
mov
jbe
mull
orl
cmp
clc
pop
inc
mov
xor
or
stos
icebp
inc
pop
pop
adc
movsl
cmp
in
pop
xor
clc
and
ljmp
dec
pop
insb
jmp
xchg
psubw
dec
mov
int3
mov
int3
push
jbe
lock
xor
fstps
mov
add
jp
imul
push
lods
xchg
fimuls
in
outsb
pop
push
mov
leave
inc
add
jne
inc
idivb
ljmp
inc
jns
pop
in
add
xchg
cmp
stc
xchg
sbb
ljmp
addl
mov
rorb
or
stos
pop
call
pop
sbb
pop
xchg
cwtl
inc
pop
enter
xchg
adcl
cmp
pop
shl
stc
stos
shrl
push
je
adc
mov
inc
cmp
mov
ret
sub
sub
ds
mov
adc
repz
scas
rcl
inc
push
and
push
push
in
or
pop
cmp
jmp
jno
insb
mov
imul
sub
jmp
inc
jl
enter
jge
hlt
aad
in
jns
add
add
adc
xchg
enter
clc
pushl
cmpl
fimuls
mov
jl
sti
sub
cltd
gs
inc
mov
out
mov
pop
jp
clc
test
jge
outsb
lcall
test
mov
data16
cs
add
shrl
cld
into
orb
out
and
cmp
sti
mov
jmp
adc
cmp
xchg
pop
xchg
les
ret
stos
or
jnp
inc
lcall
push
repz
push
loop
jp
sbb
xchg
mov
pop
out
push
jnp
inc
mov
test
or
cmp
lcall
cmp
fcoms
imul
lods
sub
jnp
lcall
cmpsl
gs
pop
bnd
xor
js
push
push
cmp
leave
adc
fcoms
jno
pusha
ss
xchg
lret
aam
push
cwtl
pop
arpl
stc
fistpll
pop
jae
cmp
sub
sbb
or
iret
arpl
xor
and
js
ds
fstl
cwtl
rclb
inc
mov
and
pop
push
fdiv
fdiv
jno
stos
flds
mull
add
add
test
int3
pop
iret
cmp
call
xor
outsb
sarb
mov
icebp
and
jle
or
add
ss
cmpb
or
mov
lcall
je
jae
and
xchg
mov
fistl
mov
cltd
popa
pop
in
popa
ja
inc
insl
enter
jbe
sbb
jl
pop
fbstp
lret
adc
shl
ja
or
mov
js
test
lcall
mov
xor
cwtl
pop
push
mov
add
adc
mov
cmp
les
push
jle
mov
rorl
mov
or
sbb
xor
out
mov
dec
movsl
mov
lret
scas
je
cmpsl
and
xchg
mov
push
sbb
aad
movsb
xor
sbb
leave
lods
out
popf
cmpl
std
or
in
mov
push
in
cmp
jb
out
dec
inc
addl
jb
divl
push
xor
push
and
add
pop
ret
popf
lds
adc
xor
mov
mov
cltd
cmp
or
jno
pushf
idivb
daa
in
lods
in
add
imul
iret
hlt
jb
lcall
fst
mov
mov
addr16
movsb
stos
jno
mov
fisubs
mov
push
repnz
into
sbb
xchg
ret
jmp
jnp
aad
push
popf
mov
lahf
dec
adc
pop
mov
inc
fmuls
dec
xchg
xor
xchg
xlat
mov
int3
pop
push
pop
push
add
fsubrs
dec
mov
inc
sti
call
jns
idivb
mov
sbb
xor
cmpsl
scas
iret
into
into
or
cld
mov
xchg
in
test
cmp
push
cs
jne
jl
out
adc
jb
push
sub
add
testl
lahf
rorb
stc
pusha
mov
push
xor
mov
cmp
inc
cwtl
pop
fimull
ljmp
divl
or
cmp
les
daa
cltd
xor
mov
xchg
outsb
xor
arpl
stos
jmp
loop
jno
cwtl
push
inc
addr16
fnstcw
add
adc
fisubl
mov
or
dec
jae
mov
clc
jno
scas
push
in
jmp
add
push
jns
jp
outsl
push
subb
addr16
gs
mov
popf
mov
xchg
je
pop
or
ret
xor
xchg
jne
mov
shl
inc
in
loope
rolw
jp
imul
arpl
mov
clc
test
pop
inc
xchg
mulps
scas
aaa
daa
das
mov
adc
shll
add
test
out
and
mov
sbb
adc
ret
aad
cmp
call
rcr
add
lahf
cmp
lods
loope
mov
insl
ret
into
std
loope
stos
cmp
push
jp
jb
daa
loopne
or
lock
test
jns
mov
fstps
scas
jns
jmp
test
pop
inc
mov
stos
sbb
ror
stos
inc
dec
push
dec
mov
dec
mov
jbe
jmp
shl
and
cli
js
out
in
mov
lods
xchg
add
mov
xchg
arpl
cmp
addr16
out
mov
jle
jns
pop
jnp
int3
or
add
jl
movsl
sbb
sbb
pop
xchg
push
incb
adc
add
lea
xlat
int
test
cmpb
lahf
xor
push
mov
pop
in
xchg
mov
ret
je
push
inc
pmulhuw
mov
cmp
pushf
cmp
shrl
ror
cs
popf
mov
mov
lds
push
xor
mov
int
and
inc
and
out
clc
jecxz
pusha
pop
jne
aaa
sahf
loop
jbe
aam
mov
mov
call
jbe
mov
xchg
jbe
dec
ss
adc
mov
jmp
lea
lret
mov
dec
imul
adc
rol
jnp
xor
test
out
shl
jmp
add
aas
das
and
outsl
sub
mov
add
xchg
cltd
and
ret
and
inc
arpl
push
mov
push
sbb
jno
xchg
dec
sub
mov
loop
movl
test
outsb
push
mul
loop
pop
pop
dec
shr
scas
and
pop
and
mov
fmuls
test
arpl
movsb
out
movsl
ja,pt
xlat
pop
int
stc
lahf
dec
andl
cld
xchg
outsl
jg
or
cmc
jl
xchg
shl
inc
imul
lock
jnp
ds
insl
cmpsl
or
popa
mov
push
sbb
lds
mov
inc
sbb
bound
sahf
shll
xchg
inc
mov
and
stos
int
push
data16
dec
fldt
sub
lock
mov
movsb
xor
pop
cs
cmpsl
daa
and
and
xchg
shll
xlat
sub
adcl
out
jge
lcall
daa
jb
popf
gs
scas
mov
lahf
mov
sbb
inc
sahf
aaa
out
subb
and
rorb
in
loop
xchg
shl
push
xchg
shrl
mov
iret
mov
fdivrs
mov
mov
add
dec
dec
test
inc
sbb
mov
or
or
or
hlt
cld
popf
mov
incb
mov
adc
pop
mov
sub
arpl
dec
cmp
inc
jp
and
adc
inc
inc
inc
add
xchg
cmpsl
rcrb
sbb
stos
push
mov
test
sbb
pop
imull
adcl
and
sub
scas
daa
mov
mov
xchg
cs
stos
add
insb
xlat
lods
lods
or
mov
sbb
das
jp
xchg
cmc
aas
pop
xor
pop
mov
or
mov
and
jl
cmpsl
orb
gs
divl
hlt
jne
xor
pushf
xchg
mov
out
add
test
jbe
stc
shlb
jns
imul
in
or
incb
mov
xchg
cmp
dec
push
shll
in
popf
push
std
cmc
push
sti
es
mov
jnp
add
dec
cmp
cmp
mov
sbb
ret
out
mov
test
push
sub
mov
xchg
ljmp
mov
je
ret
dec
sbb
push
ret
mov
cmpsb
push
aad
sub
add
mov
mov
xchg
adc
pop
cmp
sub
stos
test
jge
mov
scas
divb
cmc
inc
and
mov
mov
pop
insl
cs
in
and
pop
nop
das
fsubl
ss
movsl
sub
sub
leave
sub
orb
dec
arpl
xorb
subl
push
stc
jo
jle
sub
shlb
add
loopne
in
scas
push
das
or
call
sub
xor
or
das
or
mov
cmp
sbb
sub
sbb
xchg
js
cmp
dec
leave
cltd
pop
bound
gs
lods
pop
xorb
mov
and
std
ret
dec
inc
cs
push
test
dec
ror
and
xor
push
aas
in
ljmp
add
xchg
mov
test
sub
sti
xor
mov
movsb
xor
adc
mov
std
ficompl
push
leave
push
xor
push
int3
popf
mov
imul
dec
ss
outsb
in
push
sbb
xchg
rcrb
cmp
les
repnz
into
sub
pop
call
xor
stos
mov
loopne
jns
push
or
cmp
sbb
scas
ret
dec
mov
gs
int
and
sub
sbb
mov
jmp
lcall
dec
push
sub
pusha
shrl
sbb
or
push
pop
xchg
jmp
sti
je
sub
pop
push
mov
or
fimuls
pop
or
out
lret
mov
pop
outsb
jnp
mov
hlt
mov
rorb
pop
ja
jb
fsubr
jmp
jg
xor
mov
xchg
add
jl
push
lods
sub
bound
lahf
mov
lcall
adc
je
and
cmp
jge
mov
cmp
aaa
in
push
jbe
out
cli
push
pop
push
orb
and
call
mov
sbb
mov
leave
into
cmp
test
jae
push
mov
sub
js
dec
cltd
xor
xor
pop
addr16
loopne
aad
add
cli
sbb
inc
pop
push
adc
or
mov
or
cli
imul
insb
sub
add
push
lcall
scas
jo
mov
bound
push
inc
push
mov
ret
lds
repz
aas
idiv
repz
jge
xor
lock
imul
fwait
adc
sbb
daa
cmp
dec
test
dec
cltd
ret
push
imul
mov
dec
aaa
jle
in
sub
mov
clc
inc
ds
dec
fimull
daa
ss
lds
insb
sub
push
rcr
outsb
xor
xor
jecxz
push
pusha
xchg
and
adc
aas
jle
sub
mov
shrl
pop
xchg
xor
mov
xorb
aam
roll
cmp
pop
xchg
cmp
jb
inc
stos
push
js
xor
xchg
push
pop
jnp
leave
sarl
insb
ret
nop
stos
das
xchg
jb
dec
loopne
dec
mov
sub
clc
lret
loopne
int
daa
mov
or
lahf
jns
inc
inc
push
ss
fsubrs
jno
clc
repnz
jmp
inc
ret
repz
cmp
out
pop
cmpsl
dec
ds
mov
cmpsb
xor
xchg
push
mov
sti
push
mov
fstps
cld
jne
mov
mov
daa
pop
lahf
addr16
outsl
sbb
fnstenv
or
add
repz
add
push
in
sub
pop
mov
jg
inc
sbb
dec
dec
sahf
xchg
in
stc
jb
out
jb
inc
and
aaa
push
in
sbb
aas
loope
pop
mov
icebp
aaa
test
inc
ja
mov
cmp
arpl
cmpsl
in
mov
jns
ja
cmp
lds
mov
mov
cmp
int
inc
movsl
xlat
mov
xchg
xor
ja
mov
loope
ds
stos
mov
push
iret
js
in
pop
ret
push
push
stos
or
dec
out
out
in
push
xchg
popf
loope
mov
cmp
xchg
lret
imul
and
stc
pusha
cmpsl
mov
adcb
fsubp
ljmp
pop
adc
callw
jae
or
cwtl
sbbb
jns
and
mov
lods
cmpsb
sub
jbe
push
scas
and
or
add
scas
mov
dec
cmpl
and
add
xor
aad
fiaddl
jmp
ljmp
push
mov
outsl
out
xchg
push
lods
enter
insb
fnop
fstps
lret
in
leave
add
pop
data16
adcl
lds
roll
pop
pop
movb
adc
ja
mov
add
push
mov
cmp
in
add
pop
shlb
loope
pushl
ret
and
mov
lahf
shrb
daa
adc
or
mov
mov
mov
xchg
dec
ss
push
pop
pop
xchg
sub
sahf
xchg
in
jp
fsubl
dec
in
xor
push
and
mov
rol
xchg
mov
popf
rcll
xchg
lret
xchg
add
mov
jae
xchg
test
stos
add
push
sarl
sbb
jl
mov
inc
je
cmp
negl
sbb
aam
iret
pop
mov
aad
pop
push
dec
or
add
cmp
jmp
cmp
les
daa
testl
add
xor
mov
mul
aas
bnd
adc
mov
inc
repz
and
mov
pop
pop
jecxz
je
mov
and
sub
pop
inc
fldenv
dec
add
xchg
cld
fs
cmp
mov
je
and
rcl
fnstenv
testb
decl
cmc
push
pop
dec
sbb
jecxz
rorb
add
mov
jl
shr
cmc
mov
movl
add
sarl
popl
imul
xor
pop
shlb
sbb
test
jns
rcll
jo
data16
inc
sbb
add
jl
lea
sub
mov
decb
imul
jne
adc
cmc
pop
loop
dec
hlt
or
inc
mov
popa
push
inc
and
xor
adc
push
fs
loope
rcrb
aad
scas
inc
xchg
dec
stos
movsb
imul
add
lods
inc
aaa
outsb
inc
sub
dec
mov
xchg
cmp
jne
test
or
outsl
mov
nop
pop
int3
aam
push
or
stc
mov
jnp
rcrb
testl
xor
pop
je
cmp
jl
andb
push
lods
xor
fisubs
push
lahf
enter
sub
lcall
pop
mov
push
push
cmpsb
mov
lcall
decl
popf
lahf
mov
cmc
clc
test
cli
jo
cmp
mov
xor
out
cmovl
aas
int
es
movsl
sbb
int3
cld
xor
jnp
repnz
movsb
pop
xchg
xchg
or
dec
mov
xor
aad
nop
mov
and
out
sub
adc
repnz
mov
cmp
add
push
dec
cmp
cmpsl
out
iret
sets
pop
clc
adc
ja
out
sub
scas
fwait
jge
out
push
xchg
xor
push
fucomip
mov
aam
pop
push
push
dec
ret
les
pushf
mov
adc
cmp
std
mov
xor
out
xchg
cmp
xor
mov
ja
mov
sub
push
sub
test
pushf
rcrl
outsb
xchg
sbb
ucomiss
out
jno
das
mov
pop
pushf
pop
out
jns
push
xor
fstpt
ss
jae
cmp
shlb
outsl
or
sbb
lds
insl
mov
stos
sarl
popf
sti
sarb
int3
mov
inc
jo
stos
shlb
mov
adc
push
mov
and
add
sub
lods
sbbb
mov
ret
add
xor
cmp
fbld
dec
jae
jmp
test
push
sbb
sub
xor
rolb
cmp
andl
sub
or
outsb
inc
addl
call
pop
xchg
imul
and
jg
les
inc
cmp
xlat
dec
mov
dec
mov
jns
xchg
iret
and
pop
loop
or
sarl
inc
daa
mov
pop
push
int
mov
add
add
xor
outsb
xor
jmp
scas
jge
mov
cmp
pop
cmp
cmp
or
int
mov
ja
shrb
fidivl
mov
addb
push
mulb
xchg
movsb
incl
dec
mov
mov
cmpl
cmp
ret
mov
test
and
dec
push
sbb
mov
stos
std
mov
xchg
in
enter
rorb
fldenv
in
jg
and
and
sbb
out
mov
pop
fidivrl
dec
and
inc
lret
adc
in
fidivrs
xor
dec
adc
mov
daa
mov
icebp
int3
leave
push
dec
outsb
inc
aas
fadd
lea
popa
out
icebp
outsb
xor
aas
aaa
inc
mov
mov
subb
lahf
bswap
cmp
test
sbb
dec
cmp
repz
out
popa
pusha
cmp
outsb
lock
rcr
xchg
pushf
leave
orb
or
cld
or
mov
mov
std
cld
sub
mov
cmpsl
loopne
or
push
dec
adc
xor
mov
sahf
cmc
lcall
add
aaa
out
int
and
xor
outsb
add
clc
mov
xchg
std
mov
mov
pop
aas
sub
add
push
and
push
movups
test
and
push
add
mov
xchg
les
mov
outsl
shll
pop
jl
scas
sbb
dec
inc
stc
int
hlt
out
popa
and
or
adc
je
dec
fidivl
jns
and
ficompl
xor
mov
or
pop
shlb
xchg
dec
cld
pop
mov
add
push
sub
adc
adc
cmpsl
mov
jno
sub
movsb
std
xchg
std
daa
fnstenv
pop
mov
mov
pushf
jnp
mov
ja
stos
jo
movsb
andl
jne
roll
arpl
subb
xcrypt-cbc
cmpsl
xchg
adc
push
xchg
sbb
mov
sahf
dec
cmc
jl
popf
fwait
xchg
mov
call
mov
jg
or
das
adc
mov
aad
shlb
add
push
js
mov
dec
loop
lcall
in
push
outsb
adc
cli
add
lds
adc
shll
ja
aaa
sbb
pushf
add
add
lds
xor
push
fsubl
xchg
ftst
mov
dec
mov
das
lock
movsl
icebp
inc
dec
jle
mov
movsl
jge
xlat
cmpsl
cmc
sti
js
lret
adc
or
scas
arpl
mov
mov
aas
ja
je
sbb
mov
iret
sahf
movsl
or
cmp
mov
jge
pusha
jnp
roll
sub
leave
ret
mov
add
mov
xchg
xchg
xchg
and
arpl
ret
in
lcall
repz
sbb
lahf
dec
inc
cld
jae
cmp
mov
fldenv
inc
cmp
jns
sub
mov
cltd
aaa
jmp
arpl
push
xor
cmp
jecxz
mov
push
or
push
mov
add
popf
mov
daa
ret
xchg
outsl
movsb
leave
outsb
inc
jb
das
mov
pop
push
ror
xchg
pop
mov
adc
cs
adc
sbb
out
lods
xchg
insl
mov
bound
ret
mov
xchg
cmpsb
sahf
or
test
mov
adc
scas
leave
mov
push
dec
lods
stc
pop
popf
sbb
jb
cli
jae
negb
pop
inc
aas
jecxz
xor
cs
adc
and
ja
daa
cmc
xor
mov
mov
push
fstps
imul
into
and
andb
jecxz
push
fstl
lret
bound
cmpsl
sub
adc
stos
mov
inc
icebp
or
movsb
cs
xchg
xor
push
or
loop
lret
xchg
inc
cmp
lahf
arpl
xchg
aas
dec
or
out
mov
int3
add
push
mov
les
lcall
das
xor
fidivl
push
repz
insl
pop
ds
jbe
arpl
xchg
fmuls
movsb
scas
xchg
dec
enter
sub
test
xor
lcall
sub
rorb
adc
ss
xlat
push
inc
int3
stos
fwait
out
pop
cmc
inc
fwait
mov
cwtl
dec
jle
cli
test
imulb
inc
mov
mov
dec
imull
imul
cmp
repz
push
sbb
push
mov
xchg
aaa
mov
pop
movsl
xor
cmp
cltd
enter
mov
lret
add
and
mov
mov
cld
mov
sbb
mov
mov
mov
ljmp
bound
out
add
leave
sub
inc
sti
dec
mov
call
jg
dec
sbb
mov
test
test
lods
sub
ds
jecxz
xor
daa
rcl
jnp
jl
lret
push
inc
aaa
jno
xor
icebp
out
jbe
pop
popf
cltd
xor
loope
stc
dec
scas
cmp
shl
aas
es
inc
and
and
les
mov
test
lcall
adc
pcmpeqw
icebp
dec
dec
pop
xchg
mov
pop
adcb
mov
lahf
icebp
ja
pop
lods
jecxz
mov
cmp
iret
adc
in
pop
stos
lret
test
bnd
movsl
cmp
sbb
mov
pop
cmova
cltd
outsb
mov
idivb
jb
repnz
xchg
and
clc
push
repnz
ja
xor
sub
iret
mov
xor
add
ss
push
inc
pop
es
dec
pop
inc
stc
push
mov
movsl
fbld
push
xchg
pop
test
sti
mov
mov
mov
std
jae
fildl
loope
sbb
addb
push
lods
sbb
in
adc
mov
dec
in
push
popa
add
add
cld
dec
mov
pop
mov
xchg
in
stos
mov
cli
mov
push
pop
jnp
sub
out
mov
jmp
loopne
pop
add
jb
test
mov
ljmp
push
xor
in
imul
inc
stc
push
push
mov
cmp
movsl
mov
in
je
or
dec
pop
mov
jg
sahf
gs
stos
stc
leave
mov
xchg
aad
mov
icebp
lock
or
mov
std
mov
aaa
or
jno
xor
jnp
test
jmp
jp
adc
popa
jmp
mov
adcl
cs
jns
jp
inc
aam
fisttps
nop
adc
mov
sbb
pop
repz
mov
pushf
xor
xor
dec
fs
mul
add
jp
mov
lock
jns
cwtl
insb
xchg
adc
lcall
mov
cld
sub
push
stos
cmpsb
cmp
mov
sub
addl
je
dec
in
jg
fsubs
cmpsb
cltd
mov
and
popa
and
aad
scas
add
xlat
repz
leave
push
test
xor
nop
inc
inc
mov
add
push
popa
neg
ret
in
jnp
add
scas
xor
mov
negl
out
sbb
push
out
push
addr16
jl
xchg
pop
add
mov
fs
cmp
jb
mov
clc
sbb
clc
jb
xchg
movsl
inc
dec
sub
cmp
or
mov
mov
dec
push
cli
addr16
jo
sarb
sbb
loope
iret
sti
adcl
fimuls
ret
push
cmp
push
pusha
xchg
xchg
movsb
ss
lahf
adc
jo
sbb
mov
mov
push
popa
test
dec
cmp
adc
adc
movsb
cmp
cmpsl
pop
sub
xor
pop
jne
xor
addr16
push
push
fidivl
fmul
pop
push
sarb
daa
fs
pop
pop
inc
lock
mov
jle
ja
sub
std
movsl
aad
stc
jle
ret
fs
push
aad
push
mov
mov
loop
iret
test
mov
leave
dec
xchg
and
icebp
cmpsb
js
fnclex
jno
hlt
int
cmp
lea
mov
les
xchg
xor
jg
mov
lods
add
outsl
cmp
call
adc
imul
mov
sti
sub
nop
out
lods
mov
jle
hlt
xchg
mov
xchg
and
jle
lret
cmp
pop
loopne
push
add
divl
mov
sbb
dec
or
xor
cmp
gs
ficoms
adc
call
sbb
int
pop
lock
and
cmp
outsb
pop
inc
push
loopne
pop
push
xchg
jno
negb
mov
cmp
rcrl
add
push
add
scas
or
insb
iret
mov
out
ja
push
ret
sbbb
or
sub
sub
jecxz
rclb
cmovg
cld
and
pop
or
adc
xor
mov
sub
pop
push
mov
fadds
dec
dec
std
cld
mov
xor
js
mov
pop
jecxz
enter
sbb
inc
test
xlat
fdivrp
xchg
jl
jecxz
cli
cmp
push
adc
pop
xor
popf
adc
pop
std
fwait
loop
aas
sbbl
jno
data16
ret
adc
roll
cmp
cmp
stos
adc
paddb
or
cmp
xchg
scas
push
mov
cltd
add
cs
lahf
xorl
rcr
cwtl
movsl
pop
scas
mov
daa
xchg
into
js
les
pop
or
cs
mov
cmc
testb
dec
hlt
fwait
mov
mov
push
test
ja
mov
aad
xor
fcomp
mov
fcmovnbe
jecxz
jg
loopne
dec
pop
push
xchg
inc
gs
popf
jmp
int
stc
inc
xor
mov
sbb
mov
or
stc
cmp
push
dec
nop
ss
cmp
test
inc
pusha
xchg
add
push
aaa
sub
shr
out
ja
cs
ret
cmpsl
push
pushf
dec
cld
xor
imul
cmp
lahf
icebp
inc
inc
in
mov
inc
lock
and
lahf
bsr
jge
shrb
dec
lds
pop
jl
lock
stos
pop
scas
jp
out
push
fs
cs
push
out
xor
fcomi
sbb
xchg
lds
leave
ffree
cmpsl
xor
int
jecxz
cmc
popa
adc
mov
jmp
jnp
lods
sbb
fsubl
mov
repnz
xor
insb
jo
not
movsb
imul
das
xchg
lret
inc
lret
lock
aad
inc
lahf
dec
andl
mov
aas
fnstenv
mov
mov
push
dec
xor
std
and
loope
ja
fdivp
es
xchg
mov
push
add
mov
rolb
out
movsb
outsb
mov
mov
push
inc
call
jmp
arpl
and
popa
pop
mov
out
ja
push
sub
sbb
jb
pop
xchg
aas
jle
or
test
popa
and
xor
push
lcall
mov
push
sub
sahf
rorb
rcrl
hlt
sti
dec
stos
inc
mov
inc
in
sti
sbb
in
ret
sub
mov
mov
mov
adcl
aam
jb
inc
iret
imul
jl
sub
aas
test
sbb
dec
add
xor
jp
adc
test
xor
dec
fst
jb
sub
dec
pop
addr16
lock
cmp
lcall
cwtl
aad
sbb
into
shrl
mov
mov
push
xor
shr
or
sar
xor
cwtl
pop
outsl
sbb
mov
push
into
daa
dec
mov
sahf
add
push
and
or
repnz
ljmp
gs
xor
pop
push
mov
adc
mov
imul
rclb
mov
push
loop
in
or
add
jb
pushf
loope
fsubr
pop
xor
mov
test
movsb
es
lea
push
cmpsb
jns
mov
push
and
jb
adcl
mov
ljmp
shrl
fbstp
insl
jmp
sbb
mull
stos
loope
iret
cmpb
mov
ffreep
cltd
jns
mov
sbb
into
dec
lock
push
mov
inc
mov
and
inc
leave
outsl
daa
inc
fimuls
lods
daa
das
mov
push
adc
div
mov
ret
outsb
in
callw
mov
lahf
cmc
sbb
push
fs
add
lret
stos
in
psrld
imul
adc
std
test
jno
cmp
int
out
cs
test
fidivrs
xor
and
lret
xchg
jle
pusha
psrad
cmp
sti
fcompl
call
rorl
mov
addr16
inc
dec
sarb
push
addr16
and
js
lret
loop
xor
gs
out
arpl
out
mov
shlb
sbb
stos
xor
mov
fs
ljmp
jg
cmp
iret
pop
inc
pop
mov
int3
lods
into
adc
adc
xchg
or
or
loope
leave
mov
xchg
test
je
stos
or
lcall
lret
aam
rclb
sub
test
dec
adc
lods
jnp
fwait
orb
mov
dec
dec
or
mov
scas
push
fnstsw
or
cld
in
cmp
xchg
dec
push
fstpl
mov
or
out
or
idiv
sub
addr16
xchg
and
fwait
lahf
leave
inc
jno
es
jne
jg
jbe
pop
inc
fisubrl
or
icebp
jp
nop
jnp
sbb
lcall
sub
stc
mov
shrl
adc
repz
cwtl
add
subl
push
lret
dec
mov
sbb
inc
push
ret
push
lret
cltd
stos
fmull
inc
dec
js
mov
push
xlat
jmp
ror
mov
cmp
cmp
xor
inc
rorb
jb
add
jno
cltd
pop
leave
insl
pop
pop
pop
pop
hlt
pop
pop
mov
data16
outsb
fistpl
fwait
es
xchg
xor
cmp
in
enter
dec
mov
mov
inc
pop
sub
enter
adc
jnp
repz
in
sub
mov
push
aaa
fst
xchg
lea
insl
adc
fwait
adc
or
xchg
fs
pop
int
mov
in
jecxz
sti
mov
mov
ja
pushw
mov
inc
jns
or
mov
jbe
jge,pt
mov
aam
push
mov
les
cmp
icebp
inc
shll
cmp
inc
push
xchg
dec
mov
enter
ljmp
jmp
subb
mul
cmp
xor
testb
xchg
cli
xchg
xchg
lods
cltd
and
movsb
pop
leave
pop
mov
ret
sub
std
mov
pop
dec
add
pop
push
fistps
dec
jns
xchg
rcrb
jne
push
jmp
or
push
ret
push
mov
push
pop
jns
mov
fcoml
and
sti
bound
not
ret
shlb
movsl
dec
xchg
pop
cmc
xchg
pop
lret
jns
add
xchg
cwtl
stos
cmpl
scas
cld
shll
test
xchg
stos
clc
shrb
or
add
aad
pop
inc
pop
fnstenv
fcomps
adc
lret
lock
in
adc
cmpsb
imul
cmp
mov
xchg
out
scas
movsb
sbb
imul
mov
mov
jne
fwait
imul
or
sbb
xchg
js
fisubl
ret
dec
cmp
insl
and
cmp
mov
sbb
and
aas
hlt
shlb
lods
lods
lcall
and
xchg
and
inc
mov
xchg
mov
mov
sarb
push
cmp
sahf
lret
jnp
push
inc
dec
or
lcall
cmp
push
cli
xchg
adc
cmp
test
adc
adc
ret
popa
adc
push
pop
mov
jne
and
fs
lods
dec
inc
pusha
adc
cwtl
sub
mov
in
jbe
insb
test
mov
or
aam
andb
pop
popa
cld
addr16
sub
gs
rep
pusha
scas
dec
or
xor
jb
push
jmp
dec
xchg
ljmp
inc
push
int3
fcompl
sbb
test
fidivrl
push
xchg
add
sub
cmpsl
jle
mov
fidivrs
cmp
data16
dec
adc
xchg
insb
xchg
xor
jge
mov
jecxz
adc
jns
dec
mov
mov
popf
sub
rcrl
lds
cmpsl
lock
xor
pop
dec
lods
pop
xor
push
das
divb
out
jns
shll
rol
imul
mov
repz
stos
dec
loope
jecxz
cmpsb
jecxz
pop
ss
jae
aaa
add
cld
push
in
mov
lock
push
rorb
lds
mov
pushf
sbb
xchg
mov
add
cmc
jns
cs
dec
xchg
into
repnz
ljmp
jp
imul
and
fs
sub
mov
jne
xor
test
fidivl
pop
shl
rclb
jecxz
je
and
push
jl
insb
adc
adc
mov
cmp
jle
cmpb
ret
in
test
and
dec
loop
sarl
push
and
jl
lcall
jbe
mov
mov
cltd
insl
mov
mov
or
cwtl
sub
jmp
inc
xchg
or
out
pop
adcb
dec
mov
popa
icebp
add
ljmp
jecxz
add
sub
rorb
push
lcall
add
and
mov
mov
movsl
out
dec
and
adc
ficompl
cmp
mov
bound
pop
scas
cmp
ret
lea
aaa
and
jmp
fadd
not
jmp
fadd
cmp
mov
or
sbb
stos
cmp
flds
nop
mov
aad
int3
stos
loop
loope
movl
mov
or
xchg
xor
lock
aaa
test
adc
rol
jmp
jae
insb
dec
outsl
lcall
loopne
loop
test
out
adc
mov
in
jmp
ret
xchg
pop
mov
add
jbe
jns
insl
pop
pop
or
push
pop
movsl
adc
mov
shll
cmp
les
push
pop
in
pop
mov
dec
add
aad
jns
bnd
std
shl
xor
lcall
add
bound
and
mov
mov
pop
sbb
fcomps
jne
mov
movsl
xchg
sub
xchg
sub
and
test
sub
pop
adc
aad
stos
les
mov
xor
sbb
jo
imul
lea
icebp
lret
iret
sysenter
movsb
fadd
sub
aaa
dec
inc
or
insb
ret
fdivrs
sbb
std
daa
in
push
sbb
test
int3
xchg
in
pop
pop
out
pusha
lods
cpuid
loop
in
pushf
xchg
sarb
sub
mov
scas
cmpsl
cmpb
popf
mov
adc
lahf
cld
hlt
jp
ds
movsl
nop
push
arpl
mov
push
mov
xchg
cmp
rclb
cmp
lahf
sub
adc
or
int3
pop
dec
jo
arpl
cmp
popa
ljmp
popa
ss
push
aam
loopne
js
lods
mov
fiaddl
scas
daa
xchg
andl
test
cmp
nop
test
nop
fnstcw
mov
mov
popa
sbb
xor
dec
mov
cld
sub
jbe
sub
into
sub
cli
pop
cli
sub
enter
scas
inc
mov
pop
aaa
or
frstor
int
scas
clc
iret
rorl
lods
cmp
mov
int
fcoml
daa
insb
fcomps
dec
xchg
mov
xchg
cmpsl
mov
sahf
addr16
pop
test
or
ss
add
aaa
call
sub
and
das
imulb
loope
add
arpl
inc
cmp
lret
lea
mov
sbb
bound
mov
std
fidivrs
xlat
rorb
jmp
ja
fnsetpm(287
mov
addr16
pusha
adc
out
sahf
je
jl
xchg
movsb
lea
cs
negb
mov
or
push
in
push
movsb
mov
or
push
sbb
dec
jnp
out
leave
mov
fsubl
loop
mov
mov
jp
xchg
push
sub
mov
adc
jg
dec
sub
call
in
xchg
iret
sbb
add
fdivs
jle
xor
ss
mov
daa
das
stos
pusha
enter
cmp
push
mov
lret
jl
sbb
loope
in
mov
ss
rorb
xchg
lret
lock
mov
mov
out
sbb
mov
fldt
add
dec
into
jmp
sbb
dec
test
or
mov
mov
xchg
push
xor
mov
xchg
and
fucomip
and
int3
adc
inc
adc
push
lea
out
mov
mov
add
xor
leave
lods
lahf
pushf
adc
xlat
xchg
cmp
add
add
popf
fldenv
in
sbb
sub
ret
inc
or
sbb
in
cmpsl
mov
mov
mov
fisubrl
sbbl
add
and
lcall
lret
dec
dec
cmp
mov
add
fdivrp
add
cmp
pop
cs
add
into
stos
js
adc
pop
leave
loop
mov
pop
mov
cld
es
dec
sub
loopne
add
lods
mov
scas
pop
lods
mov
xchg
test
faddl
pop
jle
outsb
out
mov
fisubl
jecxz
add
adc
lds
and
lea
mov
subb
aaa
sbb
push
inc
push
mov
or
adc
sahf
arpl
sub
sbb
pop
inc
dec
pop
push
mov
xor
pop
jl
testb
in
dec
lcall
test
cmpsl
lods
mov
cmpl
adc
dec
lea
ds
mulb
xchg
xchg
das
test
popa
pusha
arpl
cli
fucomp
dec
adc
dec
pop
jns
sbb
cmpsl
mov
fidivl
pop
aad
pop
xchg
cmp
cmp
lret
jge
fmuls
mov
rep
cmp
bnd
push
sbb
push
and
popf
int
fimull
pop
mov
cltd
lahf
jecxz
sbb
inc
aaa
inc
push
cmp
inc
add
aam
adc
movsb
movsb
cmp
aas
sbb
jno
mov
test
cmp
testb
push
sbb
dec
cmpsl
inc
cmpsl
inc
jae
and
mov
enter
mov
outsl
imul
cmp
push
mov
push
sbb
or
inc
lods
shr
mov
stc
repnz
outsb
jns
imul
xor
es
xchg
fwait
iret
mov
xchg
enter
inc
rclb
mov
xchg
dec
mov
in
add
cwtl
nop
add
push
adc
and
mov
push
cmpb
dec
in
pop
setl
push
mov
push
sti
push
scas
pop
icebp
xchg
popa
hlt
pop
call
or
lods
test
fcomps
std
fsqrt
clc
xor
add
out
cwtl
jl
sti
lret
sbb
sub
xchg
sub
pop
push
pusha
dec
sub
mov
mov
xchg
pop
mov
shll
xlat
loop
push
push
push
outsb
hlt
xchg
fidivrl
pushf
hlt
add
cwtl
fwait
orl
imul
xchg
ja
push
push
push
in
fisttpl
mov
and
stc
test
loope
push
xchg
mov
shrl
out
imul
in
in
rorl
jp
adcl
adc
movsb
iret
jnp
daa
xor
inc
xor
jbe
repnz
inc
cltd
inc
inc
stos
push
adc
sbb
jl
adc
stos
mov
movsl
in
mov
dec
outsl
xor
cmp
mul
push
lds
rorl
and
arpl
shr
push
jno
lods
test
mov
bts
pop
inc
dec
fwait
pop
and
xor
mov
testl
and
mov
out
flds
lcall
decb
ja
in
pop
nop
cmp
xchg
sbb
rdtsc
mov
xchg
mov
or
add
or
shr
imul
cld
xor
dec
dec
lret
cld
xchg
in
or
inc
iret
mov
inc
jb
pop
sbb
sub
adc
out
inc
sarb
lcall
je
mov
xor
mov
xchg
iret
xchg
mov
fsubrs
cli
push
sbb
int3
popa
lea
sbb
xor
jbe
cmp
cmpsb
pop
leave
adcl
inc
popf
test
cmp
ret
test
je
push
xchg
mov
sub
push
stc
cmp
xchg
loopne
jae
mov
adcl
cmpb
and
jo
psraw
jo
xor
lods
cltd
push
das
push
jb
test
pop
dec
out
filds
loope
adc
ja
or
mov
xor
arpl
jp
ja
insb
es
jae
inc
in
xchg
and
in
xchg
mov
gs
adc
cmp
add
adc
mov
pop
mov
iret
and
jae
lock
push
test
fwait
or
repnz
jbe
ss
cmpsl
mov
shll
xor
mov
shl
lods
imul
xlat
cmpsl
inc
pop
outsl
sbb
sbb
mov
cmp
fdivl
andl
xor
idivl
roll
dec
mov
jnp
mov
ret
jmp
pop
test
jbe
inc
sub
ja
scas
insb
adc
add
or
addl
sbb
push
hlt
pop
dec
xchg
subb
inc
test
jne
imull
mov
jl
stc
add
mov
mov
xchg
pop
ficompl
std
cmc
mov
xor
pop
push
pop
adc
xor
dec
xor
andl
jnp
int3
icebp
push
cld
inc
xchg
lock
lret
add
and
mov
mov
mov
stos
mov
shl
cmc
inc
fdivrs
mov
add
sub
pop
lret
adc
dec
fsubrs
push
aaa
arpl
lahf
outsb
outsl
mov
loopne
movsl
test
mov
mov
mov
jg
in
notl
mov
ds
sbb
cmc
or
push
mov
pop
loope
or
mull
and
jbe
add
inc
add
sbb
push
popw
mov
decl
mov
jnp
ja
arpl
aad
insl
mov
into
std
enter
popaw
lds
in
aad
jo
and
sbb
mov
dec
fwait
push
rcrb
mov
push
xchg
pusha
test
sub
pop
cmp
and
jle
das
add
in
or
cld
icebp
push
or
xor
js
stos
inc
lock
into
adc
call
pop
lea
jmp
addb
adc
cwtl
addr16
xor
mov
aam
jge
cli
aad
inc
sub
sarl
pop
sbb
cmp
mov
sub
dec
arpl
cmp
fidivrl
imul
or
arpl
cmp
pop
dec
and
push
push
push
call
mov
xchg
aaa
pop
loope
movsl
fidivs
hlt
xlat
xor
jbe
mov
imul
jne
insl
das
pop
sub
shll
cmp
ss
xchg
rclb
or
pop
inc
dec
lds
mov
inc
stc
inc
fwait
and
push
repnz
orb
mov
and
pop
pop
mov
mov
aas
cmp
notb
dec
nop
arpl
ret
xor
pop
ret
xor
lock
test
pop
in
mov
cmp
jns
inc
cltd
scas
or
negb
fs
clc
dec
mov
loope
fldl
bound
test
dec
jne
loopne
sbb
cmp
jecxz
roll
mov
pop
jmp
mov
aaa
jne
out
loopne
xlat
inc
pushf
xlat
gs
xchg
in
enter
pop
or
into
jmp
cmp
imul
sbb
ret
and
ja
mov
je
call
test
xor
adc
push
jl
mov
sub
pop
outsl
imul
or
sbb
jp
mov
call
mov
mov
push
cld
mov
or
mov
xorl
add
in
mov
xlat
mov
mov
mov
or
imull
cmp
mov
sub
jmp
loope
ret
loop
jne
or
add
dec
mov
push
xor
and
sbb
orb
push
enter
xchg
hlt
fisttpl
out
std
sub
xchg
mov
inc
adc
cmpsb
out
jmp
ret
xor
outsb
mov
daa
fistl
sub
repz
ja
mov
jno
cmp
test
or
out
jb
mov
je
les
dec
jnp,pn
sbb
jb
daa
adc
aas
stos
jae
fcmovne
gs
and
pop
ficompl
in
xor
pop
sub
fistpl
cmp
out
add
mov
or
add
pop
scas
mov
xchg
cmp
lret
inc
daa
testb
pop
pop
les
push
and
mov
mov
xor
mov
xchg
cmp
in
fimull
fisubs
pop
and
cli
je
inc
jp
adcb
xor
push
out
adc
lea
jle
lea
push
les
xchg
mov
scas
xor
mov
ror
xchg
mov
push
sub
sti
mov
xor
cmp
fisttps
sbb
xor
mov
xor
jmp
add
in
or
dec
mov
subl
sbb
dec
dec
imul
push
std
sub
aam
cmp
mov
insl
sub
cmp
xor
hlt
stos
out
jp
xor
insb
cmp
lret
dec
test
cld
inc
add
mov
and
call
and
std
adc
ret
and
test
pop
mov
sti
imulb
dec
das
pop
jo
pop
shlb
mov
cmp
or
sub
out
adc
add
jbe
imul
jge
cmp
mov
push
mov
repz
shrb
or
ds
test
pminsw
aaa
mov
loope
cmp
sub
dec
mov
std
pop
ss
sbb
jge
xor
loope
inc
fstps
or
or
jo,pn
add
fcmovbe
data16
mov
mov
jle
scas
sahf
sbb
add
fmuls
das
mov
test
sbb
stc
sti
dec
dec
push
mov
jp
sub
xchg
pop
cs
pop
enter
mov
add
adc
test
sbb
shrb
xchg
loope
and
aas
addr16
mov
adc
repnz
pop
popf
testl
pop
in
push
mov
inc
pusha
arpl
stos
and
pop
fs
xchg
test
cmpsb
or
xor
cltd
dec
adc
pop
pop
sbb
jle
clc
mov
mov
xor
fnstenv
ss
insl
push
popa
pop
and
btr
mov
mov
mov
test
add
cmpl
jl
outsl
sbbl
rcrb
out
sub
aad
shll
push
mov
sub
cltd
jp
js
jl,pn
shl
pop
cltd
xor
cmpsl
mov
incl
mov
push
sub
loopne
arpl
sti
xchg
dec
and
push
cmpsb
adc
sbb
mov
adc
insb
es
fdivl
mov
xchg
test
stos
and
push
and
movsl
lods
mov
push
xchg
xchg
int3
adc
sub
mov
push
imul
pushf
jmp
mov
mov
sub
cmp
aad
scas
sub
imul
adc
setg
sub
inc
or
out
xchg
inc
adc
xchg
mov
jl
mov
out
dec
xchg
mov
push
js
mov
and
xor
cmp
cmp
mov
xchg
sahf
js
mov
cmpsb
shl
sub
loope
sahf
add
arpl
dec
ret
mov
ja
and
sub
pop
mov
nop
lret
add
cmp
adc
fcomps
inc
rorb
mov
dec
pop
inc
fsubl
mov
xchg
push
sub
sarl
shl
dec
test
in
aas
notl
mov
cli
push
pop
and
push
aad
jnp
ss
add
jnp
mov
push
and
in
sub
std
inc
sub
xor
call
xchg
lock
sbb
jg
cmc
push
lods
mov
mov
sub
cmpsb
icebp
dec
sbb
movsl
ficompl
rolb
out
cmp
cmp
insb
sub
push
add
mov
or
xor
push
mov
paddw
push
push
adc
fisubrl
jg
jp
shlb
dec
popf
mov
mov
inc
cmpb
dec
repnz
js
movsl
loop
stc
mov
xchg
pushf
shll
lahf
inc
neg
push
test
fistl
xorl
dec
push
fidivrs
rol
xchg
lea
dec
push
iret
test
lea
xadd
sub
mov
cmp
mov
call
ja
mov
jno
das
cmp
stos
in
xlat
cld
cs
add
das
adc
add
test
pushw
je
xchg
cmpsb
or
fistps
inc
cmp
jne
cmp
xchg
rcll
dec
sbb
loope
inc
inc
ret
outsb
lret
lock
ljmp
push
orl
loopne
dec
or
mov
push
and
sbb
push
loopne
cmc
lcall
dec
sbbl
pop
aam
movb
push
and
xchg
xchg
sar
inc
jbe
loopne
dec
notl
frstor
push
sbb
mov
inc
mov
or
pusha
sub
and
out
pop
mov
outsl
mov
add
cmpsl
lock
int3
loope
fsubs
jae
je
in
lahf
push
mov
cld
adc
jecxz
jb
nop
pop
insb
xor
stos
mov
cmp
pop
push
push
leave
rcl
mov
fimull
adc
add
mov
enter
test
jnp
shrb
push
shrb
add
fbld
sbb
test
repnz
jg
and
xchg
sub
cwtl
dec
push
call
int3
xor
sbb
stos
or
push
jecxz
xchg
sub
xor
clc
shrl
sbb
jmp
mov
rcr
mov
out
pop
inc
data16
inc
cmp
aam
bound
adc
bound
loopne
mov
cmp
add
xchg
pop
mov
dec
xchg
icebp
cmpsl
adc
mov
dec
jns
mov
add
mov
pop
jb
push
loop,pn
or
cmp
sbb
pop
out
pop
pop
or
popa
lea
cmp
push
inc
xchg
out
push
sbb
and
mov
cmp
sbb
push
add
jp
pop
and
fsts
and
arpl
cwtl
and
pop
mov
sbb
mov
stos
aas
adc
xlat
nop
popf
pop
and
xchg
fnstsw
outsb
loopne
lret
inc
test
lods
xchg
adc
cwtl
cmpsb
jle
popa
stos
outsl
loop
aaa
testl
mov
out
fsubrl
mov
out
xor
jns
push
popf
call
cmpsl
fnstenv
jae
jecxz
lret
jp
dec
pop
jb
xchg
push
jge
xor
test
sub
aaa
das
addr16
xchg
cmpb
xor
in
sub
or
aam
movsl
repz
sub
movl
sbb
adc
dec
hlt
addr16
mov
lret
cmpsl
push
inc
ljmp
xchg
xchg
or
icebp
inc
mov
outsb
mov
shl
ficomps
fiadds
movsb
cli
dec
cmp
int
inc
scas
addb
and
mov
mov
das
dec
outsb
push
shlb
push
movsb
pop
and
adc
js
inc
push
inc
push
jg
dec
imul
insl
popf
mov
xor
dec
lret
mov
jno
xor
enter
mov
mov
loope
jl
add
ret
xchg
lret
inc
pop
sub
sub
test
icebp
sbb
sarb
sbb
sbb
in
notl
outsb
or
pop
xor
out
inc
fldcw
sbb
mov
and
dec
jae
in
add
and
notb
popa
xchg
imul
xor
loop
mov
adc
in
stos
push
je
sbb
bound
cmp
add
and
ss
cld
leave
jmp
jp
xchg
shrl
jmp
push
or
out
and
icebp
dec
pop
in
push
lcall
push
dec
jp
push
push
inc
out
test
clc
mov
xchg
cmp
lods
shl
adc
jo
fst
addl
mov
les
push
outsb
movb
dec
push
and
jns
addb
shrb
popf
stos
mov
js
pop
jle
dec
out
pop
sub
pushf
adc
mov
enter
scas
fildll
inc
stos
int3
out
mov
mul
mov
xchg
aad
test
jns
jle
movsb
cwtl
xor
roll
sbb
jecxz
inc
test
insl
pop
add
cmp
push
loopne
xchg
jmp
xchg
cld
shll
mov
mov
sub
int3
ret
xchg
test
xor
add
es
movsl
jp
in
jnp
je
inc
jecxz
fidivrs
dec
mov
test
mov
pop
xchg
aas
mov
dec
lahf
lret
cmpl
or
pop
out
pop
cli
je
xorl
add
jmp
insb
xchg
xchg
cmc
mov
push
xchg
mov
jae
js
mov
pusha
mov
push
or
das
sbb
out
push
clc
adc
fcoms
test
rclb
popl
pushf
or
lahf
xchg
pushf
rclb
xchg
repnz
jl
adc
or
and
jp
mov
sbb
mov
sub
jle
jmp
stc
dec
cmc
xchg
mov
and
jno
and
push
lcall
ret
stc
mov
jle
ret
mov
or
push
shlb
adc
scas
push
xchg
fisubl
test
int
mov
fwait
push
jb
aam
cld
in
mov
into
add
mov
test
dec
adc
fwait
inc
arpl
fidivl
cmc
push
mov
cmp
aad
and
pop
mov
xchg
xor
inc
lods
cmc
dec
addr16
jns
je
push
pop
cmc
and
cmp
pop
outsb
cmp
fildl
mov
jne
xchg
cmp
xlat
mov
lahf
jns
aam
add
push
dec
sbb
cwtl
add
mov
adc
push
cmp
aaa
dec
divl
jmp
outsb
pop
inc
stc
stos
sub
sbb
cli
enter
and
daa
xchg
repnz
inc
popa
pop
sti
mov
pushf
orl
gs
push
leave
shr
jo
stos
popa
filds
or
test
xchg
test
mov
and
mov
fstp
ret
mov
lock
fldcw
pop
xor
mov
and
ljmp
adc
repz
and
add
xchg
mov
cmp
jnp
inc
pop
add
fnstenv
js
jecxz
dec
in
testb
fistps
push
add
push
test
push
lods
lock
gs
clc
mov
or
and
xchg
stos
adc
push
std
hlt
loop
mov
rclb
inc
mov
std
jbe
icebp
adc
stos
stos
xlat
movl
cmpsb
jmp
fsubrl
jp
daa
call
enter
push
mov
mov
xchg
or
xchg
mov
xor
dec
cmp
in
mov
loopne
or
mov
and
adc
and
sub
pushf
out
fistpl
cli
lret
outsb
xchg
shrb
pop
sub
and
inc
popf
cmpps
imul
je
and
cmp
dec
cs
lods
pushl
jo
int
pop
push
sub
loop
inc
sbbl
in
cmp
lahf
or
sub
insl
jae
orl
mov
pop
push
cmpl
or
add
jg
pop
adcb
add
xor
mov
repz
and
loope
fwait
ficomps
dec
cmp
les
icebp
adc
sahf
dec
pop
test
push
in
mov
jno
movsl
out
jp
addr16
test
in
ja
sub
mov
add
out
sub
popf
call
out
push
icebp
xor
push
rolb
dec
mov
stc
push
xchg
push
xchg
pop
push
scas
and
adc
ljmp
dec
or
incl
call
cmp
gs
ret
sub
aas
pushf
push
dec
lahf
imul
cmp
mov
test
mov
or
or
hlt
mov
push
fisttps
jno
push
mov
push
fwait
mov
push
scas
lahf
xchg
fs
mov
push
xor
enter
cmpsl
mov
inc
mov
or
xor
mov
in
cld
mov
fildl
and
stc
fs
daa
in
aas
or
cmc
lock
pop
inc
fdivrs
daa
push
mov
enter
jle
dec
push
cmpsb
jae
test
mov
cmpsb
loop
js
or
sbbl
pop
xchg
mov
mov
arpl
jge
cld
mov
add
adc
sbb
sub
push
dec
scas
testb
cltd
pusha
mov
incl
dec
and
mov
mov
clc
in
mov
xor
test
dec
pop
and
imull
and
add
sub
or
outsb
sub
std
mov
ja
cmp
push
inc
dec
and
loopne
cmp
pusha
add
loopne
imul
xor
leave
cmc
mov
ret
repz
ficoms
movl
push
xchg
mov
jle
xchg
stc
push
dec
add
jmp
bnd
rcr
pop
and
xchg
imul
ljmp
cmp
bound
jge
rcrl
pop
xchg
xchg
adc
mov
jo
addl
xor
adc
pop
mov
iret
repz
and
pushl
xor
mov
movsb
aad
dec
in
test
lds
aad
aaa
daa
add
icebp
mov
cmc
mov
ret
leave
icebp
lock
push
lahf
popa
sub
scas
mov
add
mov
adc
in
lea
dec
sbb
cmpsl
lcall
pop
dec
std
push
cmp
adc
mov
sub
call
arpl
or
pop
mull
decl
insl
mov
pop
les
popa
sar
push
in
adc
inc
lods
aad
adc
xchg
cltd
or
fcomip
sub
nop
cmp
repnz
sub
mov
add
loopne
add
inc
mov
out
cmp
aaa
pop
jns
pushf
or
and
test
stc
es
xor
jne
adc
fdivl
fcomps
outsb
addr16
add
enter
inc
xor
dec
jg
mov
sub
mov
and
jae
gs
in
mov
push
cmp
mov
repz
je
mov
lret
jl
test
iret
std
inc
inc
cmp
andl
leave
and
lods
rol
inc
loop
mov
imul
xorb
lock
ds
test
movsl
adc
pop
xor
out
shll
pop
icebp
popa
loop
lds
adc
fnsave
aaa
daa
cs
cmp
dec
sti
test
jo
in
insl
repz
and
sub
ret
pop
sub
stos
dec
mov
push
in
xorb
test
adc
rorl
inc
jge
lock
and
sub
sub
xor
push
pop
cmpsl
pop
shrb
pop
or
mov
ret
pop
arpl
mov
je
loop
mov
aaa
push
xor
pop
push
or
xlat
lds
sahf
cmpsl
outsb
mov
jbe
cmp
test
pop
and
jae
pop
leave
inc
sbb
jne
push
imul
insb
mov
stos
push
push
adc
jle
push
sbb
sti
push
add
pop
sub
sti
sysexit
mov
sbbb
sbb
add
mov
jecxz
or
notb
jne
and
xor
pusha
jnp
dec
or
std
stc
ret
je
cmp
loope
sbbb
adc
cmp
daa
pop
jae
mov
mov
arpl
push
lahf
enter
mov
pop
mov
dec
mov
inc
and
or
add
mov
sbb
lret
cmp
fcoms
push
rorl
or
fdivr
push
xor
cmovbe
mov
sahf
cli
test
ss
jge
mov
xchg
sahf
cmp
sub
les
aas
lock
leave
mov
mov
or
nop
xor
sub
inc
insb
add
icebp
sbb
inc
leave
stc
adc
gs
in
xor
dec
dec
dec
xor
add
aam
xlat
mov
sbb
push
push
jo
shrl
add
cmp
dec
std
jbe
les
ja
jecxz
dec
icebp
mov
stc
out
dec
les
add
inc
dec
cmp
dec
mov
adc
mov
sub
gs
xor
insb
adc
jge
or
gs
lret
push
inc
lods
push
out
sub
sub
adc
sub
sti
hlt
cs
orl
mov
dec
dec
loopne
mov
and
dec
jo
aas
adc
inc
cmp
mov
pop
dec
cli
jp
fs
cmp
mov
mov
lret
out
int3
out
jne
adc
jge
sub
jbe
jno
push
fstpl
fcom
lods
mov
lret
xchg
push
es
sub
and
cmpsl
in
cmp
loope
shll
rorb
sub
pop
adc
adc
mov
jecxz
xchg
and
dec
adc
and
xlat
mov
fs
xchg
rorl
or
int
mov
inc
xor
xor
lahf
pop
mov
cs
push
xor
das
mov
xor
cwtl
mov
test
or
movsb
ds
mov
mov
push
lods
aas
test
pop
pusha
jmp
mov
gs
push
add
ficoml
daa
pop
pop
ficoms
cmpl
mov
fsubr
mov
mov
push
xchg
xchg
cltd
mov
and
inc
adc
stos
sub
xchg
mov
dec
ja
into
sahf
aam
test
or
js
lea
cmp
repnz
push
jl
je
add
jno
les
fst
mov
jle
loop
add
jnp
sbb
xorb
sub
jne
out
dec
out
addr16
add
jp
fisubrs
xchg
in
sub
les
fs
cs
xchg
push
push
fidivl
icebp
lcall
and
dec
mov
iret
mov
std
mov
push
jle
test
sub
in
jmp
add
dec
roll
inc
xchg
mov
pop
arpl
and
mov
in
ja
xor
stos
sbb
dec
xchg
push
dec
dec
jo
hlt
mov
fsubr
fnsave
idivl
inc
xchg
cmp
sbb
inc
jl
daa
dec
jb
adc
dec
insl
jmp
repz
enter
fstpt
xor
cmpl
enter
out
add
push
arpl
repz
nop
js
add
and
mov
pop
cs
or
sbb
js
xchg
adc
call
enter
mov
out
jb
mov
scas
out
pop
add
out
mov
xor
loop
or
sub
int3
call
fidivrl
inc
xor
and
inc
and
xor
sarb
sbb
mov
pop
push
adc
sub
inc
in
orb
ljmp
fidivrs
daa
data16
dec
xor
in
daa
mov
lret
jo
lods
and
xlat
mov
lea
jle
inc
arpl
adc
scas
or
jne
inc
mov
mov
iret
mov
add
lock
push
gs
or
mov
fnstenv
pop
sar
inc
mov
iret
and
xchg
fidivrs
scas
sub
sub
out
fdivrl
addr16
or
cmp
xacquire
jl
adc
adc
insb
lods
pop
popf
pop
out
lret
and
cmp
push
cmp
push
push
adc
mov
insl
adc
push
decl
fidivrs
test
clc
aad
pushf
imul
jns
stc
jg
push
inc
xor
fwait
inc
lods
or
xor
dec
mov
xchg
mov
addr16
lahf
and
inc
cwtl
cmc
fildl
sar
add
xor
and
jmp
test
mov
jae
pop
shrb
aam
loope
out
fnsave
xchg
icebp
fxch
lahf
mov
pop
insl
out
movsb
push
jecxz
aam
into
push
dec
adc
xchg
test
and
ja
pop
cmpsb
stc
mov
pop
fsubrs
dec
jb
adcb
jnp
and
sbbb
orb
mov
push
test
dec
pushf
ja
aas
xchg
mov
dec
mov
rcrl
mov
shrb
push
daa
insb
repz
push
or
dec
shrb
mov
cld
push
dec
cmc
add
cmp
fistps
fs
lock
add
fs
and
aad
push
dec
pop
int3
fidivs
sub
cmp
cmpsl
out
sub
insl
mov
sub
mov
sub
call
cmc
in
push
add
jmp
repz
push
adc
cmc
outsb
fnsave
lea
imul
xchg
bswap
xchg
cmp
mov
xchg
mov
and
addr16
add
jns
mov
orl
xchg
ljmp
daa
icebp
jo
mov
ja
insb
adc
xchg
in
push
popf
xor
add
popa
adc
test
mov
ss
addr16
jns
cmp
adc
test
lea
out
mov
mov
in
xor
or
xor
outsb
and
rorb
cmp
xor
lret
ljmp
mov
xor
jl
stos
dec
jmp
pop
mov
pushf
addb
xchg
rcll
or
mov
imul
xchg
add
jns
push
pop
cmp
and
lds
xor
mov
les
or
cmpsb
or
sbb
icebp
std
or
aad
outsb
addr16
jne
dec
pop
add
pop
outsl
sbb
ret
sub
jg
jo
iret
jmp
or
sti
jae
sub
dec
lods
mov
sub
mov
xor
inc
sbb
movsb
pop
imul
dec
hlt
lahf
sar
push
pop
movsb
frstor
mov
dec
test
cli
inc
shlb
mov
sbb
repnz
lret
nop
mov
jbe
in
sub
lret
fbstp
dec
jmp
xchg
mov
insl
imulb
add
dec
fs
mov
aad
sub
jbe
ret
cs
orl
xorb
in
cmp
jns
mov
mov
movsl
cmp
frstor
adc
mov
mov
xchg
out
dec
cwtl
cwtl
and
dec
pop
pusha
sub
add
out
jmp
jnp
mov
out
xchg
xchg
pop
mov
fstpl
lock
dec
mov
pop
or
add
mov
xchg
mov
mov
adc
addr16
xlat
cmp
sub
pusha
fnstsw
mov
mov
mov
xchg
and
hlt
cmp
cmp
dec
mov
sbbl
pop
xchg
scas
sub
out
sub
daa
sbb
sbb
pop
xchg
das
inc
sub
xchg
sub
lock
js
lock
mov
add
sub
xchg
bound
push
jbe
mov
mov
sub
jge
ja
push
inc
inc
inc
push
sarl
pushf
push
sbb
je
push
inc
adc
scas
ljmp
insb
lea
les
popa
pop
sbb
add
xorl
xor
adc
shll
adc
in
pop
and
int3
pop
pop
sbb
pop
mov
popa
cwtl
mov
xchg
out
dec
stos
adc
shlb
mov
mov
pop
inc
xchg
test
xchg
je
shll
and
js
dec
lods
popa
rcrl
sbb
mov
or
push
inc
mov
ja
dec
pop
jmp
xlat
jo
add
imul
dec
jnp
fiadds
aad
jnp
dec
jne
mulb
scas
imul
leave
cwtl
pop
mov
adc
fcmove
jno
push
mov
pop
mov
jmp
mov
xor
xor
jno
sarl
fnstsw
shrl
push
push
sbb
in
rcrb
or
cmp
add
cltd
std
push
out
xor
mov
ja
pop
inc
call
arpl
dec
lds
dec
hlt
dec
icebp
sbb
jns,pt
xchg
popf
xor
mov
adc
in
adc
repz
jmp
push
sbbb
mov
gs
sbb
inc
imul
in
or
outsb
fstps
fldenv
xor
shll
mov
pop
mov
clc
cmp
aam
mov
cmp
sti
incl
inc
sub
pop
out
dec
call
popf
xchg
arpl
mov
mov
adc
je
incb
mov
jb
or
je
pop
xchg
js
iret
dec
cmc
inc
clc
jae
adc
pop
ret
movsl
fs
insl
jle
jo
pusha
jne
test
inc
int
cwtl
call
xchg
dec
popf
jnp
test
push
pop
jmp
mov
imull
mov
adc
pop
not
xor
mov
cmp
cmp
mov
addr16
jb
stc
popa
cltd
pop
ret
xchg
dec
sub
jp
loop
or
adc
xlat
jae
loope
outsb
push
mov
int
push
shl
xor
jnp
dec
jmp
cmc
dec
jne
push
cmc
nop
in
movsl
movsl
push
pop
lret
insl
jl
sbbb
and
push
xchg
hlt
mov
jb
rcrl
or
sbb
mov
ljmp
imul
inc
test
test
rcrl
in
cld
xchg
iret
jnp
push
sarb
fnstsw
add
out
xchg
sbb
int3
cmp
mov
xchg
xor
arpl
push
inc
xchg
mov
stos
sub
je
outsb
jb
in
fsubl
insl
jnp
xchg
fsubrs
mov
jge
insb
adc
mov
xor
jecxz
nop
jbe
rcr
pushf
push
lods
push
pop
xlat
sbb
stc
mov
mov
mov
stc
dec
push
daa
mov
push
cmpsb
pop
ret
jg
lds
jbe
push
fisubl
push
fisubl
add
out
sub
sub
mull
rcrb
sti
imul
jp
sbb
dec
add
bnd
pop
add
mov
xchg
adc
imul
dec
decl
and
add
push
lret
and
push
stc
and
mov
enter
inc
lods
and
jbe
push
imul
mov
mov
sbb
jno
popa
es
add
std
or
clc
mov
mov
mov
adc
bound
push
push
int
lods
sbb
cmp
jp
rcr
mov
test
cmp
cmp
shrb
xchg
arpl
fidivrs
std
imul
inc
stc
pop
stc
push
jbe
loop
addr16
in
sti
push
jl
xor
cs
inc
adc
cmp
lret
stos
int
mov
push
mov
mov
repz
js
pop
loope
jp
mov
add
dec
mov
ljmp
mull
ret
jmp
pop
clc
aaa
mov
mov
adc
nop
fdivrs
mov
adc
jmp
jle
sbb
ljmp
xchg
lock
outsl
movsl
cmc
adc
inc
xchg
jmp
fistl
xchg
mov
pop
ret
sahf
fxtract
addr16
aaa
iret
adc
sbb
dec
lods
push
mov
in
jmp
fucom
pop
jge
mov
in
iret
scas
or
sub
mov
mov
mov
and
pop
stc
add
out
pop
dec
cs
xor
mov
mov
daa
dec
cltd
push
ljmp
adc
popa
pop
cld
cld
pushf
sbb
xor
mov
inc
dec
fucom
in
mov
xorb
inc
mov
jge
fdivrl
or
js
int3
cld
mov
aad
sub
gs
je
je
bnd
scas
fs
xor
xchg
sub
adc
cld
imul
insl
mov
mov
cmp
lahf
and
sbb
imul
or
mov
mov
xchg
jge
cs
testl
xor
mov
mov
push
cld
mov
push
mov
dec
movsb
pop
adc
je
mov
mov
hlt
pop
mov
inc
cmpsb
sbb
inc
inc
cmp
pushf
sarl
or
jmp
scas
cmp
and
sbb
jge
aam
cmp
xchg
fsts
ljmp
xor
shrw
push
movsb
push
pop
rcrb
cmp
sti
mov
and
ret
add
push
mov
xchg
out
int3
cmp
jns
stc
adc
xlat
shrl
aam
inc
insb
cld
mov
and
dec
push
sahf
popa
mov
push
loop
cli
sbb
xor
sbb
pop
xchg
hlt
pop
mov
mov
mov
dec
inc
ds
xchg
lods
cld
mov
jnp
xor
in
cmp
lods
repnz
sbb
popf
test
push
popf
stos
inc
mov
and
lret
pop
add
in
mov
adc
adc
int
ljmp
sbb
xchg
outsb
dec
enter
subl
push
or
addr16
outsl
add
xor
mov
ret
test
lds
sub
mov
jae
call
mov
movsl
inc
fstpl
jecxz
shlb
ja
fwait
xchg
xchg
cmp
std
sbb
into
jns
dec
mov
shll
clc
rolb
mov
lret
rcl
jecxz
sub
and
pop
pop
std
push
jl
fcoml
and
push
rep
adc
lock
adc
leave
pop
jnp
dec
movsb
scas
xchg
xor
push
jne
inc
lds
pushl
xor
leave
pop
lods
jb
movsl
stc
mov
xchg
push
enter
pop
js
shrb
int
idivb
xchg
stos
push
sub
sub
and
add
xor
jle
jb
lahf
sub
aam
shl
pop
sbb
push
loop
cld
ja
shrb
mov
sti
push
mov
mov
sti
insb
jmp
mov
sub
rcrl
nop
es
je
sub
jmp
iret
and
in
xchg
outsb
inc
dec
jecxz
mov
ljmp
xchg
out
sub
add
jp
cltd
es
or
mov
mov
pusha
gs
mov
loopne
push
push
inc
mov
mov
les
mov
dec
stos
jnp
xchg
add
adcl
fsub
jnp
fs
push
loope
jb
dec
sti
imul
add
test
sub
repz
mov
push
cmp
fs
mov
mov
xchg
in
lock
shrl
addr16
xchg
or
and
mov
sbb
dec
cmp
xchg
push
and
stc
mov
xchg
std
or
lret
hlt
enter
sub
jne
fstp
aad
faddl
sub
icebp
mov
addl
fisttpl
stos
xor
push
data16
stos
adc
stos
lcall
dec
dec
inc
test
inc
movsb
jle
ja
lea
xor
push
pusha
and
jge
ds
jae
push
js
ret
mov
mov
repz
mov
jle
push
pop
push
adc
jns
imul
dec
and
xchg
jl
out
adc
sarb
stc
jmp
add
cld
inc
mov
lds
jns
jne
jae
jmp
loope
jmp
pop
lds
cmp
xor
cli
add
out
lcall
sbb
sahf
scas
push
out
push
push
cltd
mov
cmpsl
flds
out
popf
movsl
inc
xor
xchg
xor
xchg
shll
aas
push
mov
fcomps
roll
inc
shrb
cmp
jge
repnz
ret
decb
icebp
cld
and
imul
inc
jo
mov
scas
mov
or
incl
add
stc
jae
adc
pop
jne
subl
mov
pop
test
fcoml
cmovle
jo
pushf
movsb
pop
or
mov
sub
mov
bound
xlat
jnp
fs
xlat
or
pop
lea
sti
and
inc
rcll
inc
movups
test
popf
loopne
dec
sahf
and
insb
xchg
push
nop
jno
and
pusha
xchg
add
je
mov
jl
out
and
cmc
dec
in
cmp
mov
orl
sti
and
mov
icebp
mov
rclb
pop
mov
or
iret
lock
pop
jae
sub
push
adc
jmp
loope
nop
add
flds
mov
sub
lea
mov
mov
int
fidivrs
dec
in
mov
sbb
pop
rorl
inc
sbb
or
inc
mov
mov
stc
mov
lds
xor
in
or
push
mov
iret
pop
sti
idivl
testl
and
mov
inc
or
fbstp
lcall
jns
jae
adc
adc
cmc
sbb
scas
imul
xor
sbb
add
mov
jmp
xchg
lods
arpl
and
sbb
inc
push
sub
fsub
aad
add
and
inc
fldenv
jno
mov
dec
push
outsb
or
outsl
xor
xor
xchg
std
aad
jae
aas
icebp
jnp
xor
test
xlat
inc
pop
jo
arpl
mov
fsts
out
imulb
mov
repnz
and
sbb
mov
adc
inc
enter
xchg
dec
or
inc
xchg
ja
mov
jmp
es
jl
fimuls
push
xchg
and
mov
lret
in
jns
mov
sti
cmc
sahf
iret
test
in
inc
jno
add
std
scas
sbb
jnp
mov
push
mov
xlat
fstps
sbb
push
dec
add
pop
sti
stos
pusha
fbld
and
adc
xchg
mov
ja
add
sub
in
inc
popl
push
mov
daa
psubusb
ljmp
and
xchg
dec
movups
fistl
mov
push
or
sub
ljmp
pop
mov
dec
xchg
and
fisubrs
ret
add
sub
push
cmpb
out
mov
movsl
inc
dec
movsb
clc
cmp
jmp
repz
mov
stc
scas
outsb
das
xor
cli
inc
mov
push
je
adc
test
repz
loop
iret
into
inc
xchg
xchg
jg
mov
ja
sbb
aaa
mov
pop
outsb
addr16
movsl
pop
int3
mov
cmp
test
fidivrl
mov
push
in
insl
xchg
daa
sbb
or
call
dec
adcl
loope
pop
xchg
mov
call
and
mov
sbb
xchg
inc
mov
shll
and
cmpsl
mov
movsl
negl
lahf
lcall
jl
mov
andl
cmp
sahf
movsl
pop
outsb
std
testb
cmc
adc
loop
or
adc
mov
icebp
loope
orb
std
add
xlat
scas
icebp
sbb
int
testb
out
dec
sub
mov
test
dec
loope
stos
jo
and
shrb
addr16
mov
cmp
cwtl
or
xchg
cmpb
push
loopne
xor
fisubrl
roll
pop
shl
hlt
leave
or
add
cltd
push
mov
ss
jecxz
cmpsl
pop
or
inc
test
sbb
int
rclb
pop
mov
jns
pushf
cmp
repnz
test
cmpsl
mov
push
fnstcw
cmp
mov
push
jnp
popa
call
icebp
pop
insb
sub
mov
pop
push
push
sbb
shlb
mov
cmp
cmpsb
divb
dec
adc
mov
add
inc
fcmovne
cmp
out
mov
js
cmp
mov
mov
aad
sub
mov
fdivrp
roll
lret
fbld
dec
xor
shll
mov
pop
fstps
mov
pusha
jnp
push
sbb
mov
repz
pop
pop
jge
jns
inc
sbb
int
mov
scas
fisttps
adc
movsl
js
sbbl
or
sub
lret
ss
jno
sbb
mov
sbb
into
fidivl
sbb
out
cmpsl
repnz
adc
push
sbb
dec
xchg
cmp
push
add
imul
push
push
je
in
add
adcl
jno
je
mov
sub
add
test
or
cmp
mov
push
push
inc
xchg
xchg
mov
inc
push
arpl
sbb
mov
dec
push
test
and
push
mov
add
pop
dec
mov
ror
sbbl
cmpsl
cmp
adc
xchg
ret
sahf
fnstcw
shrb
xchg
movsl
xor
jle
idivb
mov
fbstp
testb
fcom
lea
jle
pmullw
jg
mov
dec
test
inc
sbbl
and
xor
aam
in
icebp
xor
and
cs
xor
push
sub
cmp
shll
data16
adc
adc
sbb
and
adc
aam
add
fisubl
jg
sub
mov
mov
mov
sbb
je
jae
pusha
adc
xchg
dec
push
dec
cmp
aam
subl
lcall
add
imul
pop
and
push
mov
fistl
test
sub
fstl
sub
or
mov
inc
sti
lret
xor
jns
loop
movsb
push
popf
mov
mov
scas
and
mov
xchg
mov
sub
dec
addb
aam
popa
pop
pop
sbb
pop
flds
shll
aas
psrld
xor
sub
insl
push
fwait
out
js
mov
popa
outsb
jae
mov
mov
mov
mov
xor
mov
inc
sub
mov
cwtl
sub
in
adc
fists
iret
push
mov
jp
repz
sbb
test
subl
fnstcw
fistpll
ficomps
dec
sub
fimull
or
push
rorb
test
xchg
ret
lret
mov
imul
sbb
inc
lds
outsb
sub
cmpb
add
out
xchg
inc
sub
mov
or
jl
jo
clc
nop
cltd
and
mov
xor
fdivl
enter
fdivrl
js
cmp
mov
pop
sub
sbb
jecxz
sahf
mov
lock
xchg
loop
pop
adc
test
cmp
push
xor
movsl
je
jle
arpl
pop
aad
shl
mov
mov
push
pop
push
xor
pop
push
leave
pop
mov
adc
ret
pop
or
nop
jo
pop
cmc
mov
inc
movsl
iret
stos
mov
xorl
jns
dec
inc
or
in
dec
jns
cmpsb
and
in
cwtl
imul
pop
shl
fiadds
mov
mov
imul
pop
jle
les
adc
fwait
in
or
mov
leave
cs
xchg
push
add
pop
call
fs
xchg
pop
adc
and
ficoml
mov
or
add
out
push
ficoms
mov
sbb
aad
cmp
fbstp
push
mov
sbb
dec
insl
je
outsb
adc
sbb
adc
jae
xchg
roll
stc
sub
cmp
out
and
inc
pop
rorl
dec
gs
mov
arpl
dec
es
bound
out
aas
add
insl
loope
pop
inc
cmpsb
ds
cmp
mov
fistl
and
in
cmp
sbb
push
sbb
hlt
stc
inc
push
mov
fs
addl
cwtl
and
dec
loop
sarb
xchg
aad
sub
xor
out
mov
shrl
hlt
imul
rcrb
jg
dec
inc
dec
lock
cmc
dec
in
or
aas
dec
sbb
leave
push
jae
mov
mov
sub
fstps
pop
adc
xchg
add
int3
aad
jmp
sbb
mov
jmp
pop
sub
aad
or
js
sub
jb
adc
loop
xor
xchg
pop
scas
or
sub
sbb
es
push
lret
jns
shlb
and
fwait
push
inc
mov
jae
fistpll
stc
and
dec
vmovd
xorb
xchg
mov
push
fdiv
popa
sbb
iret
or
push
popf
sbb
addr16
mov
xchg
xchg
popf
push
insb
push
xchg
pop
xchg
mov
adc
mov
or
sbb
and
jo
lcall
adc
and
xchg
xchg
in
out
mov
sbb
repnz
ljmp
mov
xchg
xchg
cmp
cmpsl
imul
in
ljmp
icebp
xor
and
loop
cmpl
insl
ja
push
adc
add
and
lret
xor
jb
mov
xchg
mov
lock
bound
shl
cmp
pop
pop
lea
mov
sbb
stos
xchg
ljmp
sahf
cmc
sub
or
cmpsb
sbb
push
xchg
push
add
inc
and
cmp
cmp
leave
mov
je
lret
mov
xchg
outsb
mov
mov
test
dec
mov
pop
pop
test
lahf
push
pop
or
bound
xor
in
xchg
fisttpll
loopne
movsb
cmc
test
mov
faddl
in
adc
jmp
xor
rcll
lods
add
test
xchg
mov
imul
xor
sahf
mov
push
add
lret
inc
xor
and
jmp
dec
mov
jle
loop
test
cwtl
cwtl
pop
cli
leave
adc
pop
fadd
std
sub
dec
test
rorl
jp
mov
sub
into
bound
and
xchg
and
sbb
jmp
mov
std
bound
psrld
clc
jno
jecxz
mov
adc
and
cmc
movsl
dec
fld1
mov
xor
aaa
mov
fdivrl
mov
in
stc
icebp
mov
imul
xchg
cmc
cmpsb
sub
rorl
out
fldl
pop
push
pop
xchg
ds
lods
and
repnz
psrlq
insl
add
xchg
adc
loop
and
mov
mov
or
lods
jle
ret
push
jo
xchg
pop
mov
mov
jo
inc
inc
xor
mov
adc
xlat
loope
xlat
cmp
pop
sarb
loop
fwait
int
sbb
cs
mov
push
mov
mov
jnp
popa
clc
sub
stos
cmpl
add
or
dec
sti
in
clc
sub
sub
mov
and
mov
cmp
xor
scas
lea
mov
call
insb
dec
sub
sub
xchg
xchg
xchg
jno
sbb
repnz
xor
mov
jle
inc
pusha
add
mov
cwtl
jecxz
test
cli
jb
jnp
adc
mov
fisubs
or
sbb
xlat
loope
jb
aas
pop
insb
cmp
xchg
pop
pushf
push
xchg
sub
mov
cmp
sub
cmp
xchg
sub
adc
mov
stc
daa
int
jp
test
sbbb
in
mov
mov
lock
sti
mov
mov
xor
mov
imul
in
mov
xchg
sub
scas
inc
push
lret
inc
pop
out
gs
lcall
xchg
aad
inc
mov
popf
adc
lods
in
mov
rorl
pop
rol
xor
sbb
or
std
js
and
or
pop
cmp
mov
pop
dec
stos
xchg
jbe
mov
pop
stos
sarb
test
jnp
or
lods
xchg
inc
fsubl
mov
iret
cmp
scas
fcmovb
mov
xchg
call
mov
mov
xor
push
push
ja
lock
and
scas
ss
sbb
mov
adc
std
mov
sarl
sub
lods
ss
ss
xchg
xor
cwtl
sbb
inc
test
xchg
pop
shlb
adc
std
cmp
movsb
pop
dec
push
or
out
and
pop
mov
int3
pop
push
scas
leave
add
rorb
add
adc
adc
lahf
dec
cmp
cmp
sub
lret
mov
push
cmp
pop
fsts
xchg
imul
mov
cwtl
jbe
or
ret
cmp
cli
int3
add
sub
sub
popa
fdivrl
mov
out
or
outsl
sbb
sub
outsb
stos
pop
mov
lds
push
xchg
cltd
mov
push
mov
cmp
cmc
adc
shrl
add
sbb
cld
cli
inc
mov
push
jb
xchg
in
andb
cmp
test
mov
adc
mov
aad
pop
in
cmp
icebp
pop
inc
dec
test
sarb
inc
nop
test
push
sbb
fwait
js
xchg
dec
out
movsl
mov
and
push
cmpl
or
or
pop
fsubr
add
clc
or
pop
or
xchg
mov
movsl
adc
dec
or
stos
popf
cmp
lock
jl
dec
mov
push
jecxz
loope
cmp
mov
rclb
add
mov
or
shrb
lds
xor
arpl
mov
push
xor
push
inc
fidivrl
xorl
test
xor
je
add
mov
add
xchg
out
outsb
and
adc
cwtl
inc
dec
out
mov
and
lahf
adc
ss
mov
xchg
cmpsl
pop
mov
add
mov
adc
pop
pop
xor
jp
xor
clc
insb
sbb
pop
sbb
scas
lret
ret
repnz
test
dec
insl
jge
dec
jno
cwtl
shll
add
dec
sahf
sub
mov
ret
inc
out
xchg
ret
add
lods
mov
movsl
clc
je
fnsave
mov
cmc
mov
imul
fisubs
mov
inc
fmul
enter
aam
imul
in
mov
cmp
mov
sbb
outsb
je
sbb
enter
mov
adc
mov
pop
push
cmpb
mov
or
aam
ss
gs
fs
jmp
push
aas
int3
jo
jb
clc
popf
test
mov
je
aas
pop
arpl
or
mov
rclb
and
int3
jne
jmp
sub
int
cmp
sbb
in
je
xor
fisttpll
pop
sbb
aam
inc
insl
cmpl
push
cmp
fisttpll
dec
ja
sub
pusha
add
push
lret
push
call
pop
js
icebp
ret
sbb
sub
add
fcmovbe
mov
push
mov
push
dec
fsts
mov
xor
bound
cli
add
out
push
fldcw
sbb
test
in
jo
je
frstor
jno
dec
imul
out
cmc
popa
sub
or
mov
pop
inc
or
or
fisttps
mov
clc
out
shrb
orl
or
xor
sarb
pop
cmp
xchg
insl
inc
hlt
or
shr
or
icebp
cli
popa
or
push
stos
cmc
inc
mull
bound
adc
push
lahf
sub
stc
xchg
aad
dec
or
mov
add
pop
loope
test
insl
pop
or
scas
jp
packuswb
push
js
cmp
jno
pop
lea
inc
inc
cmp
pop
pop
adc
stos
xor
adc
cmp
mov
fs
cli
xor
outsb
xlat
jo
lcall
mov
leave
xchg
push
and
aaa
outsl
int
or
imul
mov
test
push
pop
xor
pop
aaa
outsb
and
sub
into
jmp
mov
or
movb
push
mov
les
fcoml
jg
jmp
insb
mov
push
lock
cmpb
push
decl
into
mov
jo
outsb
cmovp
repz
decl
loopne
sub
sub
sbb
insb
mov
mov
jo
shrb
test
push
int
pop
push
adc
sbb
xchg
popf
js
adc
jecxz
test
outsb
jbe
insb
mov
clc
sub
sub
test
ljmp
pushl
ja
dec
and
dec
and
rcl
scas
jecxz,pn
mov
adc
sub
ja
mov
iret
jns
or
cmpl
mov
pop
cmc
pop
fbstp
mov
iret
icebp
xchg
gs
movsl
jecxz
lds
inc
and
sub
aaa
test
les
ret
cli
ja
push
mov
sbbl
or
les
and
dec
scas
mov
mov
cmpsb
jle
dec
inc
add
repz
bnd
std
jle
leave
mov
stos
adc
pop
pop
sti
lock
push
mov
mov
push
xor
cld
ja
jp
mov
inc
andl
mov
mov
mov
test
hlt
xor
pop
xor
fildl
dec
inc
sti
ss
pusha
push
mov
or
std
jl
cmp
hlt
cltd
or
xchg
or
pop
lds
gs
add
int3
mov
mov
xchg
lds
adc
cmpsl
imul
incl
addr16
mov
jae
mov
xchg
icebp
rol
shll
pop
into
roll
sti
aad
sub
jb
mov
inc
test
bnd
scas
aam
dec
out
xor
sub
aad
jecxz
mov
popa
mov
xchg
xchg
iret
push
mov
mov
push
and
xor
sub
daa
mov
xchg
gs
mov
mov
or
xor
movsb
int3
mov
imul
mov
out
pop
sbb
mov
aas
popf
xchg
out
adc
sahf
mov
mov
push
mov
rorb
mov
dec
cmpsl
xchg
pop
data16
add
aas
push
movsb
popf
cwtl
xchg
inc
in
mov
mov
dec
push
push
cli
mov
dec
adc
outsl
mov
sub
mov
jno
mov
rcrb
jp
int
push
ret
lds
lock
pop
sbb
adc
inc
inc
in
out
leave
call
push
fucom
stc
iret
das
imul
adc
xchg
test
bound
push
or
or
pushf
fwait
enter
jmp
stos
push
divb
test
jg
orl
popf
mov
lahf
or
inc
mov
cmpsb
sbb
inc
push
mov
daa
mov
cmp
or
add
cmp
bound
cmpsb
sub
jg
shrl
push
cmpl
mov
mov
cs
xor
dec
or
add
outsl
sahf
push
jle
sub
lods
mov
and
dec
inc
insl
mov
insb
ret
movsb
fs
setg
adc
jae
push
fcom
push
dec
cltd
xor
shll
inc
sbb
mov
sbb
jl
ret
arpl
into
pusha
mov
mov
pop
mov
insl
shll
stc
inc
stos
cmpb
fdiv
js
ret
ret
lahf
xor
fisttpll
adc
or
pushf
push
gs
scas
iret
mov
push
xor
ljmp
std
xchg
cmp
mov
jl
je
pop
pushf
clc
in
cmp
idivl
sub
cmpsl
scas
nop
cmp
inc
cmp
aaa
xchg
and
mov
lea
jne
aaa
mov
mov
xor
or
dec
pop
inc
pop
cmc
mov
in
lock
aad
mov
out
inc
out
fsubrl
xorl
inc
jge
jne
test
iret
push
arpl
cmp
and
test
shll
xor
xchg
mov
dec
jns
push
in
test
rclb
mul
sbb
sti
or
hlt
pop
lds
mov
pop
dec
mov
and
xchg
mov
pop
rorl
ret
inc
ss
push
adc
call
roll
add
out
xchg
and
lret
mov
fwait
cltd
mov
pop
fnsave
cmp
call
std
orl
nop
les
loope
scas
sbbl
imul
lods
push
out
popf
mov
xor
loopne
mov
xlat
outsl
cwtl
sub
aam
inc
xor
int
jb
add
ret
add
xchg
jecxz
fsubl
lcall
sub
jmp
das
adcl
daa
fisubrl
cmp
jb
add
mov
loope
clc
les
mov
cmp
mov
dec
jb
jns
mov
mov
dec
mov
mov
fidivrs
leave
addr16
gs
inc
adc
jno
cmc
in
popa
dec
mov
sbb
shlb
cld
nop
fs
in
push
sarl
ds
shrb
pop
inc
std
mov
addl
popf
push
mov
fld
lods
dec
ret
ffreep
jecxz
ja
dec
dec
and
cli
pop
push
sbb
xchg
arpl
imul
out
sub
repnz
push
sahf
adc
mov
out
jp
cmpsl
push
insl
arpl
inc
pusha
cli
push
mov
mov
cmp
ds
outsb
jnp
adc
mov
stos
cmp
out
mov
aam
jge
out
pop
fdivs
and
sbb
add
je
pop
sbb
mov
ror
aas
xchg
pop
jge
push
outsl
sbb
sub
or
and
daa
lret
sub
ret
xchg
popf
or
inc
fcompl
fistps
and
fadd
and
cmc
imul
push
jecxz
test
stc
xchg
test
jmp
sahf
sti
xlat
loopne
enter
nop
and
sti
rcll
push
notb
sub
stos
push
or
and
insb
call
pusha
add
insb
add
mov
pop
sub
jno
xchg
cli
inc
pop
subb
insb
cmc
xchg
movsl
add
adc
data16
mov
dec
mov
scas
lret
dec
push
mov
add
bswap
cmp
dec
hlt
cmp
push
cwtl
outsb
mov
cmpb
cmc
and
adcl
stos
insl
xor
and
push
pop
add
fildl
inc
push
or
icebp
sbb
jg
or
in
xchg
insb
imul
push
daa
push
inc
mov
push
mov
out
push
fwait
pop
enter
push
hlt
mov
cmpsl
sbb
xlat
into
daa
mov
adc
dec
jp
xchg
and
push
fwait
mov
and
idivl
out
rcrb
lds
setnp
mov
lods
nop
iret
test
js
rorb
jmp
adc
icebp
mov
jno
sbb
or
push
fisttps
fildll
mov
add
add
out
insl
push
ljmp
fmuls
xchg
popf
push
loopne
loop
js
add
push
mov
pop
cmpl
or
add
jbe
pusha
fnsave
push
shrb
stos
jecxz
adc
inc
sbb
sbb
pop
popf
stc
and
add
pop
int
push
inc
iret
in
lods
inc
mov
pop
imul
aas
mov
shlb
jp
jmp
xchg
icebp
xor
mov
push
dec
dec
xor
push
sbb
aaa
imul
add
inc
idivl
in
hlt
jg
sub
mov
xchg
xchg
icebp
bound
mov
xchg
arpl
hlt
xchg
out
dec
dec
push
popf
dec
out
mov
lea
mov
loope,pn
push
jns
adc
inc
xrelease
cld
pushf
fisubrs
fs
inc
cmp
xor
cmc
and
out
stos
nop
in
sbb
adc
mov
iret
and
into
ret
jle
or
rcl
mov
mov
scas
call
das
test
jne
out
neg
iret
xchg
sub
fsubrs
cwtl
cmpsl
pop
pusha
and
sbb
adc
fimuls
popa
pop
scas
add
inc
mov
js
xor
xor
loope
cmp
mull
pop
xchg
xchg
jo
dec
outsb
cmpsl
add
pusha
rol
sub
sub
rorb
outsl
dec
cltd
inc
scas
or
dec
inc
mov
push
dec
push
add
xchg
int3
hlt
repz
cltd
dec
xchg
and
dec
test
lret
add
fucomi
cs
shrl
add
jo
movsb
push
xchg
push
mov
cld
lock
shlb
pop
outsb
divl
jne
jle
stos
pop
mov
push
ret
inc
sbb
or
stos
cmp
sub
jecxz
out
xchg
and
xchg
xchg
test
scas
xchg
xchg
adc
pop
push
inc
xchg
mov
sbb
enter
js
xor
xor
sub
pop
ficompl
int
push
fwait
mov
inc
iret
cmpsb
jle
push
scas
leave
xor
xchg
repnz
jg
xor
aas
lahf
cmp
xlat
pop
insl
cmp
rcrl
and
push
add
inc
lods
push
inc
mov
rorb
and
jb
enter
cmp
push
les
call
fiadds
mov
testl
fiaddl
shl
testb
fstps
pop
sti
or
arpl
lcall
scas
cmc
cmc
or
mov
in
add
imul
push
aam
mov
push
loope
fs
sbb
inc
dec
aam
addl
stc
xor
ret
jg,pn
icebp
xor
jb
mov
lds
mov
dec
or
fcmovnbe
frstor
insl
or
cmc
xor
repnz
sub
jmp
jno
repnz
test
js
mov
ja
mov
scas
lea
frstor
lds
aam
sti
ljmp
mov
and
sbb
lock
mov
jmp
jmp
stc
mov
test
mov
mov
lods
sahf
icebp
icebp
xor
jo
xchg
push
and
call
movsb
fidivl
sub
mov
stos
jbe
adc
jno
aas
sbb
jb
jne
loop
incb
and
test
add
xor
ljmp
dec
and
sbb
cmpl
add
cli
sub
and
fisubs
push
es
cmc
test
sahf
out
pop
ljmp
lret
cmp
mov
imul
es
xor
dec
sbb
stos
push
or
dec
mov
push
mov
or
jbe
xchg
mov
or
ret
repz
pop
fdiv
lahf
push
cmpsl
cmp
jle
pop
lds
xchg
sbb
stc
mov
jne
dec
or
rcrl
inc
or
jmp
jmp
loope
mov
fiadds
js
orl
sub
push
inc
mov
fwait
xor
xor
mov
jbe
movsl
push
in
mov
mov
leave
sbb
push
or
xor
xorb
add
sub
push
pop
cld
sbb
fbld
aas
jl
popf
push
cltd
dec
sbb
push
cmc
jmp
mul
jae
dec
repnz
ret
pusha
loope
pop
xor
nop
in
adcl
pop
addr16
inc
out
add
ljmp
inc
adc
push
mov
adc
icebp
test
popa
add
enter
cmpsb
negb
sbb
scas
mov
adcb
jbe
lds
gs
stc
mov
and
icebp
sti
pop
stos
out
or
mov
cmovnp
cmp
pop
mov
popf
sbb
jle
test
adc
and
testl
lret
push
imul
fdivs
xchg
out
nop
cld
mov
shrl
dec
pushf
es
cmp
aad
sub
mov
mov
loope
xchg
test
or
pop
aam
pop
data16
lcall
sub
push
adc
add
rcrl
in
and
or
push
shll
jge
push
sbb
les
cmpsb
pop
sub
shrl
cli
ficoms
and
or
lahf
push
sbb
fistps
fmuls
call
adc
mov
shlb
xchg
pop
mov
shrb
mov
outsb
subl
scas
mov
push
jae
lahf
xor
in
shlb
pop
arpl
mov
inc
sbb
pop
and
cltd
cwtl
cwtl
mov
pop
mov
mov
mov
cmp
or
movsb
adc
push
mov
fisubrs
add
mov
xchg
pop
test
loopne
mov
sub
sbb
imul
inc
adc
cmp
sub
inc
mov
insb
cwtl
inc
ja
xor
jg
mov
sbb
sti
aaa
jp
sub
int3
cmp
loope
push
or
push
xchg
inc
xchg
in
iret
in
jno
testl
js
sub
push
dec
inc
clc
xor
or
jbe
add
fs
xchg
inc
fstp
sbb
pop
push
adc
xor
adc
in
or
adc
cmp
sub
pop
aad
xor
adc
xchg
sub
sub
push
call
shrl
xchg
inc
xlat
mov
lret
add
mov
push
call
or
data16
xlat
je
out
jmp
cmc
jb
and
xlat
jo
mov
or
sbb
inc
loop
cs
je
mov
sbb
xor
push
repz
test
lods
aad
out
cmp
out
pop
mov
movsb
jb
push
arpl
jns
outsb
push
aaa
inc
xchg
dec
sub
lea
pop
pop
xchg
mov
cmp
dec
xchg
movsb
popf
pop
sbb
pushf
adc
mov
adc
or
sub
xchg
jno
push
test
sarb
adc
mov
or
inc
xchg
ds
or
cmp
or
jo
cmp
cmp
jecxz
outsl
jmp
add
jns
call
scas
adc
xor
mov
inc
mov
aaa
in
lahf
cmpsb
cwtl
and
rorb
loopne
mov
add
es
lcall
xchg
fsubs
cmp
mov
pushf
xchg
dec
inc
jae
dec
cli
jnp
ss
inc
pop
mov
xchg
cwtl
mov
js
aad
push
aam
mov
arpl
and
outsl
test
push
sub
outsl
cltd
mov
insl
pop
mov
inc
mov
mov
mov
jns
nop
dec
fldcw
ss
lods
mov
jb
jno
ja
clc
pop
cmp
push
cmc
adc
inc
clc
cmp
mov
pop
xor
fnstcw
test
nop
fdivrl
inc
icebp
jbe
mov
ljmp
push
sti
mov
sahf
jb
and
ja
xchg
pop
in
std
hlt
js
xchg
xor
dec
mov
mov
jbe
cmp
movsb
push
mov
mov
push
and
in
lea
lock
pop
ds
enter
add
in
and
dec
cmp
lcall
pop
mov
bound
mov
jg
sbb
xchg
fs
fsts
mov
sbb
sbb
andb
arpl
jns
and
inc
add
add
mov
jo
jns
jae
mov
rcll
dec
cmp
jns
fildll
cmc
subb
mov
lods
inc
push
in
clc
add
clc
mov
jbe
mov
lahf
xchg
cli
aad
mov
and
in
or
push
mov
rcl
arpl
aam
fldcw
jo
in
inc
aas
adc
jnp
divb
pop
cmpsb
shl
xor
inc
jmp
or
arpl
push
push
loop
stos
jmp
adc
sbb
or
stc
imul
mov
add
xlat
into
js
mov
cmp
cld
mov
inc
or
mov
test
xlat
jno
and
mov
fisttps
mov
mov
mov
pop
enter
idivl
jmp
xchg
fs
mov
pop
fbstp
loope
rorl
in
bound
dec
xchg
xchg
lcall
insb
mov
test
nop
fimull
mov
lods
mov
push
cmp
in
jno
pop
cmp
fstpl
sub
ds
pop
fisttpl
sti
jo
xchg
xchg
shlb
xchg
stc
lods
icebp
movl
mov
lea
xor
pop
cmp
push
lods
lock
rcll
xchg
push
aas
mov
fsubrl
stos
cmp
lods
fcmovu
lds
jns
es
inc
add
add
dec
lcall
fnstenv
cmp
mov
pop
inc
push
fwait
enter
adc
mov
lods
call
sbbl
cmpsl
cmp
loopne
lret
xor
ret
pop
adcl
mov
sarb
inc
xor
push
xor
or
pop
enter
adc
aad
mov
push
mov
cwtl
cmpsl
xchg
xor
ds
mov
jnp
stc
inc
hlt
pop
mov
fs
mov
xchg
mov
dec
repnz
xor
pop
push
adc
pop
push
aad
push
pop
jb
in
mov
cmp
popa
fstps
fdivrs
mov
push
push
pop
repz
add
cmp
and
cmp
lock
in
movsl
inc
adc
xlat
mov
xor
or
dec
mov
inc
dec
int
dec
push
inc
enter
lret
arpl
mov
lahf
mov
sar
scas
push
cmp
mov
jp
mov
gs
cmp
mov
daa
xchg
adc
cli
pop
cmpsb
dec
repnz
pop
add
inc
mov
pop
pop
shrb
test
insl
aas
sti
sbb
lea
hlt
push
mull
jns
rclb
xor
cs
xchg
mov
insl
clc
or
mov
mov
mov
pop
imul
sahf
jnp
adc
sarb
xor
mov
mov
scas
adc
xlat
lret
dec
mov
mull
sbb
adc
mov
sahf
addr16
mov
pop
xor
add
call
or
xchg
cmpsl
inc
and
cld
pop
arpl
cmp
ret
fs
daa
out
or
dec
xchg
fcom
insb
mov
push
jl
pop
pop
xor
lret
jl
aam
call
jl
push
mov
push
pushl
out
adcb
push
inc
inc
addb
mov
sti
test
pop
icebp
xor
push
aam
negb
fnsave
sub
imul
add
and
ja
dec
loopne
rorb
sub
xchg
xor
cld
lret
pop
push
pushf
inc
inc
pop
scas
fisttpl
lods
pop
loopne
aam
daa
push
inc
lret
pop
sub
data16
loopne
xchg
fstpt
subb
pop
mov
in
xor
fmuls
push
or
push
pusha
xor
pop
inc
loopne
sub
xor
cmp
test
iret
pushf
inc
popa
pop
mov
lcall
fmulp
and
outsb
push
das
mov
mov
fwait
adc
ljmp
gs
pop
push
mov
xor
mov
pop
cmpsb
dec
jp
adc
loope
mov
es
cmp
test
jmp
out
inc
jae
mov
fcmovbe
mov
mov
xor
rclb
movsb
add
fistpll
movsb
and
in
mov
push
ret
push
inc
pop
pop
xchg
sahf
mov
mov
pop
call
xchg
in
xor
mov
push
shl
sub
dec
icebp
pop
fucomp
xchg
cltd
xchg
or
push
xchg
cmp
loope
inc
xor
test
sub
je
dec
adc
bnd
and
stos
in
iret
out
jp
add
mov
cs
hlt
mov
adc
mov
xor
jb
scas
test
add
and
jl
sti
nop
ret
add
mov
les
xor
stos
fwait
sub
cmpsb
decl
fisttpll
dec
mov
and
jb
lock
sbb
fistpll
sbb
sbb
aam
mov
mov
xchg
lods
mov
out
push
das
cmp
ss
pushw
movsb
jne
movsl
stos
mov
jbe
push
adc
add
rcl
shl
arpl
mov
imul
mov
inc
imul
movsl
mov
orb
push
cmc
sbb
pop
xor
movsl
movsl
imul
shll
scas
clc
sbb
and
or
rolb
jl
mov
push
repz
addb
lock
cs
inc
roll
mov
outsl
test
mov
cmp
xchg
in
sarb
push
jnp
dec
cmp
mov
and
adc
and
out
movsb
add
stc
insl
jnp
jle
inc
jp
movsl
mov
aaa
adc
xlat
pop
out
pushf
cmpsl
imul
and
lods
inc
popa
mov
sbb
cmpsb
insb
inc
stos
jg
xor
fdivl
ret
cmp
cmpsb
sub
js
pop
inc
stos
popa
and
cli
cmp
adc
inc
mov
jae
or
loope
xchg
imul
push
insb
dec
xlat
aam
inc
pop
cmp
decb
push
adc
nop
cmp
fidivl
iret
imul
sbb
adc
adc
jae
sbb
bsf
or
js
int3
pop
inc
icebp
imul
arpl
mov
icebp
outsb
xor
cmp
mov
jg
fwait
stos
fiaddl
stos
and
scas
repnz
jmp
cld
movsb
lahf
int3
cmp
popf
cltd
cltd
inc
push
sbb
sub
mov
fsubs
pop
fildll
lahf
pop
dec
xchg
add
add
or
mov
fisttpl
or
jle
jno
lret
add
xchg
imul
sti
sub
push
insb
xchg
push
sub
rolb
ficoml
loope
lds
rcrl
mov
jnp
mov
pop
jg
inc
xor
pushf
jae
push
mov
lcall
sarl
or
xor
loop
leave
mov
xor
ret
movsb
xchg
mov
or
push
mov
inc
popf
push
add
orl
ja
lcall
push
jb
loopne
cli
cmc
cmp
arpl
pop
enter
inc
jle
add
jl
add
arpl
push
sbb
mov
popa
jb
xor
jmp
ds
push
jns
stos
iret
ret
in
xchg
adc
cmp
cmpsb
inc
mov
add
xor
rol
loopne
sbb
sub
lods
sbb
sub
mov
stos
ja
rcl
pop
hlt
and
push
xor
stos
mov
leave
or
mov
push
inc
cmp
ror
in
pop
dec
xchg
outsl
orb
sub
push
out
sub
sarb
pop
stc
pop
pushf
mov
out
stc
daa
mov
and
cmp
jmp
cmp
mov
mov
fadds
subb
mov
aam
jg
in
popf
jge
ficomps
adc
cli
mov
push
adc
xchg
push
inc
lcall
fistps
arpl
cmpsl
mov
lods
inc
cmp
stc
lods
jo
int
jnp
popl
and
jl
rolb
fwait
mov
gs
push
jmp
fsts
test
lea
dec
add
push
mov
gs
call
and
out
cld
rorl
movsl
clc
jne
lods
add
mov
fucomi
in
aam
xchg
test
cmpsl
cmc
or
iret
fst
out
fcoml
xor
xor
xchg
cmp
movsb
into
cs
outsl
adc
fmull
lcall
cmpb
xchg
dec
fidivrl
inc
mov
xor
push
sbb
push
sub
mov
or
andl
dec
xchg
cwtl
mov
dec
mov
shlb
jecxz
jge
mov
push
andb
inc
imul
lret
test
dec
fmuls
insb
ret
cwtl
mov
jns
pop
loopne
sub
xor
fisubs
jp
push
xlat
cmp
aam
int
or
sbb
adc
mov
pushl
and
popa
push
sahf
adc
jns
inc
mov
test
nop
cltd
xchg
or
orb
out
lret
and
popa
fstl
push
fildll
cmp
jge
mov
push
insb
bound
cmpsb
jmp
push
lcall
fsubrs
sti
push
adc
jb
mov
mov
lods
jnp
es
push
aas
or
adc
sbb
in
push
jo
pop
push
cmp
add
xchg
or
and
and
fistpl
ret
mov
aad
pop
sub
inc
in
add
sbb
push
jo
jp
dec
out
pop
scas
roll
inc
jg
sti
out
test
dec
inc
sub
loop
mov
scas
xlat
cmpb
insl
xchg
sbb
repnz
sahf
jno
insb
and
cs
repz
shl
ffree
xor
pop
iret
sub
sub
xchg
mov
jne
loop
negl
int3
jno
test
cmp
jp
jne
xlat
es
iret
adc
push
imul
mov
xchg
mov
jg
push
mov
rolb
or
pop
ljmp
xor
daa
push
pop
jmp
cwtl
mov
stc
jb
pop
ds
xchg
push
aaa
fcomip
pusha
scas
cmp
ja
and
and
mov
stc
adc
lods
jae,pn
jle
in
inc
loop
loop
repz
add
cmp
dec
shll
jb
sbb
cltd
pushl
pop
mov
cld
mov
jns
mov
or
mov
mov
leave
push
push
jae
sar
inc
push
mov
data16
dec
loope
sbb
in
mov
int
jle
pop
aam
jae
fistps
mov
repnz
aam
in
cli
xchg
and
rorb
add
push
outsb
mov
pop
popf
and
xchg
dec
mov
adc
cmpsl
mov
add
xchg
jmp
push
cs
sub
sbb
sub
test
sub
mov
sbbb
xlat
jg
pop
leave
push
mov
inc
subl
lret
outsl
bound
out
inc
divb
sti
leave
or
fwait
jle
bound
add
enter
pop
mov
out
jl
aas
pop
out
inc
or
iret
in
cmp
push
and
adc
out
bound
lret
sub
xor
xor
lret
jmp
mov
mov
jecxz
iret
and
push
dec
dec
lcall
sub
shl
cmpb
jae
xlat
inc
lret
sarb
stos
jne
ret
ds
test
xchg
ret
mov
mov
jp
repnz
mov
mov
xor
rclb
mov
add
les
pop
je
imul
ss
imulb
aas
loope
cmp
push
or
push
test
sub
das
rclb
xlat
fxtract
pop
es
sbb
lods
mov
adc
jle
adc
inc
loop
pop
stc
dec
movsl
dec
cli
jmp
mov
mov
in
mov
ret
adc
sbb
cmp
cwtl
sarl
fildll
push
mov
mov
into
in
push
xchg
push
mov
sbb
jmp
cli
popa
popa
ret
sbb
loop
dec
sub
xorb
ds
icebp
sbb
add
inc
push
jno
and
cmp
mov
sbb
dec
mov
xor
insl
bound
cli
or
lea
jae
mov
gs
pop
out
pop
idiv
ret
mov
test
add
loop
std
and
sahf
mov
out
aaa
sub
arpl
adc
ss
jmp
fcomps
inc
and
xchg
mov
push
adc
push
std
pop
adc
ret
out
mov
fsubrl
fists
push
ds
xchg
nop
jp
xor
loopne
ret
outsb
dec
daa
repz
lcall
cmc
xchg
in
jmp
inc
sbb
pushf
cmp
mov
loopne
icebp
fidivs
push
pop
dec
xchg
fldt
test
mov
cmp
outsb
pop
and
push
fwait
addr16
adc
cmpsl
or
pop
inc
xchg
sbb
and
jns
mov
and
inc
lcall
xor
cmp
iret
scas
imul
xchg
jle
cmp
push
ja
cmp
mov
dec
inc
adc
xchg
fcompl
sbb
and
mov
mov
xor
stc
shr
orb
inc
sti
mov
adc
fmul
in
add
xchg
mov
movsl
scas
fs
adc
mov
test
dec
xchg
ror
and
pushf
mov
cmp
add
arpl
call
shl
iret
enter
mov
lret
lahf
mov
cmp
pop
jnp
xchg
nop
mov
jb
mov
xchg
inc
inc
push
pcmpgtw
xor
lcall
push
pop
jns
and
push
jle
inc
dec
out
pusha
dec
repnz
jno
jno
movsl
shll
movsl
or
das
iret
lock
aam
and
pop
gs
imul
pop
out
or
enter
xor
xchg
and
fdivrs
out
mov
daa
fstpl
push
imul
cmp
and
cltd
jge
bnd
pop
xor
or
push
inc
mov
fisttpll
sub
ret
or
inc
cmpsb
mov
jl
mov
and
sub
adc
or
bound
adc
xor
lret
fiaddl
push
push
or
fstps
pop
in
addb
icebp
sub
aad
push
jne
cmpsb
dec
push
jnp
sub
insb
jno
mov
lds
sub
and
cmpsl
mov
out
dec
aad
test
pop
adc
pop
pop
pop
jae
sarb
lods
cmp
and
mov
jle
add
leave
and
xchg
mov
cwtl
addr16
pop
push
ds
test
out
xor
loop
loopne
xchg
out
ds
mov
mov
insb
cmp
inc
ds
ds
filds
mov
ss
mov
jae
lret
sbb
cmp
push
rcl
sub
jae
cltd
in
ficomps
sbb
dec
imul
and
inc
pop
pop
sub
icebp
inc
aam
and
insl
add
out
xor
jecxz
sahf
fisubs
iret
mov
fsubr
lea
fxch
mov
rcrl
cmpsb
sbb
jb
outsb
pop
les
imul
dec
shl
xchg
inc
inc
inc
jp
mov
xchg
add
cmp
mov
and
loop
add
push
add
outsb
hlt
xor
jno
leave
push
add
cmp
mov
cwtl
jns
imul
xchg
cmp
das
imul
mov
mov
pusha
dec
stos
jnp
cmp
sbb
xchg
iret
test
rclb
pop
push
out
in
add
setle
inc
repnz
les
lds
cmp
popa
cmc
dec
es
mov
popf
pop
fdivl
xchg
push
popl
fstpt
add
xchg
sub
out
add
pop
pushf
mov
lods
mov
adc
loopne
add
xlat
adc
mov
test
push
mov
test
pop
roll
push
or
and
loop
outsb
push
jl
rolb
stos
pop
fwait
add
shll
push
adc
movsl
or
gs
repnz
mov
xchg
jne
jo
int3
sti
pop
push
mov
inc
mov
shl
subl
leave
cwtl
xchg
test
mov
rol
in
cmp
mov
cs
adcb
cmc
or
sub
or
nop
in
and
subl
fld
pop
inc
jo
outsl
shr
inc
dec
pop
sub
mov
in
mov
clc
jbe
lods
jge
mov
push
jae
jb
and
inc
pop
jle
mov
movsl
xchg
ss
loop
dec
pop
popf
pop
xchg
cmpsb
sti
sub
jp
cmp
ss
or
out
shlb
hlt
cli
aas
pop
data16
or
add
out
in
sbb
loop
addb
lret
mov
imul
loope
mov
lahf
sub
pushf
xor
pushf
mov
push
and
movsl
mov
push
push
xchg
cli
mov
fcoml
push
test
and
test
mov
mov
outsb
pop
dec
xchg
mov
inc
gs
sub
jg
decl
rol
cmp
stos
sub
mov
mulb
push
sub
mov
test
and
jp
shl
cmp
shl
clc
push
fistps
fisttpll
insl
arpl
std
xchg
fldt
jl
insb
xor
nop
ja
mov
and
das
xchg
adc
jo
and
andb
add
int
popa
pop
inc
add
mov
arpl
jb
fs
outsl
and
out
push
xor
cmpsl
sbb
cmpl
dec
xchg
mov
sahf
sbb
shll
mov
xchg
push
roll
pop
icebp
ljmp
jmp
imul
mov
push
or
rorb
imul
shlb
xor
xor
outsl
iret
jo
int
stos
iret
jae
jne
lret
outsl
jns
push
pop
mov
cmpsb
xchg
pop
lods
inc
adc
ds
frstor
les
mov
sbb
test
lods
js
outsl
setg
push
insl
lret
jo
repnz
fildll
out
and
jmp
rolb
sub
leave
aas
dec
adc
in
ja
or
mov
mov
mov
fwait
lret
pop
or
lods
mov
divl
push
sub
inc
bnd
mov
cmpsb
mov
pusha
inc
inc
sahf
icebp
adc
clc
cwtl
pusha
add
jno
mov
mov
xchg
cltd
sub
pop
mov
rcrb
in
xchg
int
mov
jo
sub
aas
insb
jmp
xchg
pop
adc
xchg
cli
mov
mov
sarl
push
xchg
jb
mov
pop
aad
aaa
es
and
xchg
mov
cmp
xor
cmp
inc
xchg
aam
adc
movsb
and
adc
push
into
lcall
or
fldenv
and
jo
inc
jg
push
mov
icebp
mov
jb
aam
push
sbb
rcll
dec
addb
or
push
leave
int3
xor
clc
call
outsl
icebp
add
pop
out
out
arpl
inc
addl
loope
test
hlt
lea
lret
scas
mov
mull
outsl
out
xor
xchg
mov
sub
mov
je
sbb
addb
jo
call
je
sahf
popa
leave
test
rcll
sbb
push
mov
xchg
gs
in
inc
notb
xchg
imulb
lret
push
sahf
jmp
cmpsb
popf
sub
es
sbb
add
stos
cmc
mov
movb
int
es
dec
or
pusha
jbe
cmp
faddl
mov
and
sub
or
or
outsb
arpl
pop
jge
arpl
push
insl
cmpsb
ss
mov
std
add
cmc
push
out
mov
lods
xchg
xor
frstpm(287
imul
cltd
or
or
jl
es
xor
xorb
dec
and
movsb
inc
sub
fidivs
cltd
ds
xor
ss
sub
test
xchg
pop
add
sbb
mov
jmp
in
xchg
cmpsl
out
js
imul
lock
sbb
jno
mov
cmp
pop
dec
into
push
imul
pop
or
jns
push
aam
lahf
xor
xor
or
addr16
mov
push
rcrl
stos
enter
loope
js
lods
fdivrl
pop
mov
cs
mov
dec
out
push
test
dec
and
out
mov
adc
shll
lret
das
test
pop
hlt
xor
pusha
cmp
nop
xor
or
adc
xor
jbe
push
aad
stos
jl
stc
jbe
lret
std
lds
repz
mov
das
jbe
sub
pop
andb
cmpsb
loope
mov
cmp
in
xor
jmp
lea
cmpl
stc
das
ss
mov
and
fsubl
sub
flds
pop
mov
scas
pop
xchg
push
test
es
xchg
jbe
jg
push
or
pop
rolb
outsb
adc
sub
daa
data16
das
movntq
out
cmp
adc
enter
push
into
fildll
inc
mov
inc
call
sbb
insl
insl
nop
ja
and
js
push
mov
mov
cmp
xlat
pop
jmp
xor
ljmp
pop
js
adc
test
scas
dec
add
sub
sub
and
in
cmp
in
cmp
mov
rorb
mov
cmpsl
cltd
xchg
sbbl
inc
sub
mov
in
jg
ss
mov
incb
sub
bnd
repnz
jne
pop
loopne
mov
cmp
and
popf
or
xchg
mov
shl
loop
xchg
stos
loopne
mov
mov
xchg
cmpsb
pop
cmp
cmp
jg
xor
cmp
dec
aad
lock
mov
out
pop
and
and
push
push
sbb
add
mov
pop
lret
in
cmp
push
adc
mov
rcrb
nop
sbb
leave
mov
int3
push
xorl
inc
rcr
nop
pop
mov
test
jno
mov
jmp
pusha
adc
or
stos
dec
xchg
and
lock
inc
cmp
sbb
sbb
cmp
pop
lret
cmp
jge,pn
test
in
pop
xor
jmp
test
cli
mov
imul
cmp
and
xchg
pop
adc
sbb
sbb
cli
test
cld
fdivs
fs
pop
mov
scas
or
or
cs
cmp
xchg
fsubrs
loopne
les
jo
push
jnp
in
xchg
sub
sbb
push
sbb
or
add
inc
out
sub
cltd
xchg
les
dec
push
pop
ret
adc
xor
xor
scas
sarb
mov
dec
into
cmc
jl
lret
gs
or
and
jb
inc
mov
pusha
pop
mov
sarb
iret
and
xor
mov
loopne
xor
movsb
test
stc
xchg
test
fimuls
jns
arpl
stc
cmp
js
popa
dec
leave
dec
inc
push
stc
jne
mov
lds
maskmovq
notl
ss
sub
cli
int3
notl
dec
mov
push
fistpl
cmp
inc
test
aaa
and
into
sbb
push
ds
lcall
xchg
xchg
add
icebp
mov
mov
cmp
cmp
filds
fimull
cmp
ja
lods
push
int3
adcl
out
mov
or
mov
sub
ror
and
daa
call
aas
inc
rolb
dec
jle
mov
divl
gs
roll
insl
sbbb
add
in
int3
add
cltd
stos
outsb
sub
push
cmp
mov
sub
xchg
int3
movsb
or
imul
sub
popa
ret
leave
rorl
js
loopne
mov
pop
inc
cld
cmp
mov
fcmovne
insb
adc
iret
lods
cmpsl
adc
xor
mov
fidivl
and
xchg
pop
rclb
enter
pop
lds
mov
sbb
sti
lahf
lcall
insb
daa
arpl
fstps
adc
in
repnz
mov
mov
daa
movsb
sub
arpl
or
in
icebp
cwtl
xor
sbb
cmpsl
push
xchg
inc
hlt
scas
bound
push
jo
mov
sti
pop
negb
mov
iret
adc
sbbl
ret
mov
or
mov
lret
ret
xlat
dec
shr
jl
add
pop
inc
gs
fsubs
jl
lods
scas
mov
inc
mov
ds
xchg
scas
loope
roll
xchg
pop
jg
sti
call
add
inc
in
jmp
jnp
cmpsl
arpl
cmpsl
xor
sbb
and
inc
popw
mov
dec
cmp
or
idivl
and
mov
test
jl
in
inc
pusha
fs
xchg
sub
aam
std
fbld
cs
ret
jg
es
xchg
jne
lods
or
mov
mulb
ja
into
mov
aam
ljmp
push
inc
mov
dec
sbbl
cmp
pop
pop
popf
xchg
sbbl
xchg
sbb
outsb
mov
dec
jne
jge
jbe
aam
decl
jle
dec
shlb
outsl
and
fbld
sub
out
jne
fsts
lods
jo
andl
push
mov
je
mov
stc
ds
cld
jnp
pop
cmp
imul
shr
imul
push
adc
xor
andb
xchg
mov
mov
and
xor
popa
leave
aad
cmp
mov
push
sbb
xor
cmpsb
lret
adc
push
into
cli
ficomps
pop
cmp
jg
subb
loop
push
mov
int
sbb
int3
repz
jecxz
scas
mov
fidivl
daa
mov
sahf
icebp
jne
mov
das
push
adc
mov
pop
pop
insb
or
mov
into
and
aaa
inc
jl
jno
aas
mov
rcrb
dec
push
outsb
ret
stos
sub
pop
aaa
cmp
xchg
mov
fstl
add
sbb
mov
sahf
and
xor
imul
cli
jno
dec
sbb
or
out
icebp
ja
orb
shrb
xchg
mov
cmc
out
and
and
or
jg
xor
push
jbe
mov
and
jge
int
insb
adcb
jmp
sbb
and
dec
data16
in
xlat
lock
ror
in
cmpsb
or
dec
mov
pusha
sub
icebp
dec
push
add
sbb
or
add
ja
out
out
cs
push
jae
addr16
push
adc
xchg
mov
enter
pop
out
aas
or
outsl
out
pop
std
jle
dec
cmpsl
sahf
jnp
jbe
push
xchg
mov
dec
dec
push
fsubrs
popa
sub
xadd
jno
jae
orl
idivl
xor
sti
mov
in
ljmp
jbe
and
ss
mov
dec
push
fmulp
int3
sti
xorl
cld
sbb
jns
pop
xor
sahf
pop
scas
aam
mov
lcall
push
scas
adc
lods
jmp
repz
push
ret
out
pop
sub
leave
test
inc
movl
mov
xchg
dec
hlt
xchg
adcl
jge
cmp
jns
push
js
cmpsb
fisttps
aad
std
dec
arpl
test
xchg
adc
lahf
outsl
addr16
mov
addr16
enter
sub
mov
jae
cmc
mov
cmp
pop
push
leave
mov
icebp
in
pop
aad
out
imul
push
cld
xchg
das
mov
pop
les
fwait
arpl
cmp
aas
mov
lcall
cmp
push
xor
and
sbb
adc
sarb
mov
insl
push
lcall
shlb
insl
xor
jns
cmpsl
push
sbb
jg
push
adc
sbb
xlat
xchg
adc
mov
jp
and
sbb
inc
dec
dec
aas
ret
and
js
fstp
dec
outsl
adc
loop
loopne
insb
pop
sahf
out
xor
mov
jne
sahf
mov
xor
mov
pop
push
popa
mov
inc
outsl
lock
cld
shrl
and
bound
lret
pop
cmc
mov
mov
xlat
rclb
jmp
inc
stos
adc
rorb
pop
cld
jo
loop
and
fsubs
pop
pop
pop
std
push
adc
js
xor
bound
fildl
test
arpl
pop
daa
fimuls
call
sar
sub
fists
add
mov
inc
shr
mov
xor
cmp
icebp
stos
lret
pop
mov
pmulhw
mov
pop
movsl
pop
add
fs
scas
lods
jbe
in
and
jl
pop
jge
or
xor
imul
mov
add
ficoms
not
inc
stos
dec
or
insl
push
xchg
adc
paddsw
cli
pop
mov
or
pop
cmp
incl
mov
scas
pop
mov
xor
dec
xchg
scas
mov
mov
push
das
and
mov
jnp
pop
pop
sub
pop
pop
and
adc
arpl
lds
fsubrl
sub
mov
dec
mov
es
in
cmpsb
cmc
test
in
pusha
mov
lods
sbbl
movsb
add
cmc
pop
xlat
movswl
sub
leave
xchg
pop
cltd
cmp
push
movsl
movsl
sbb
mov
inc
clc
sbb
stc
adc
lock
dec
enter
roll
outsl
pop
mov
mov
andb
xor
movsl
lret
gs
cmp
push
push
jp
ja
out
inc
dec
aam
mov
dec
imul
mov
lds
sub
fstps
xor
mov
mull
jl
cmp
xor
out
and
mov
mov
push
gs
shll
scas
popa
fisttpl
rorb
iret
inc
lcall
xchg
cmpsb
ficompl
xor
sbb
jle
iret
dec
mov
xchg
xchg
cmc
fisttpll
rcll
mov
cwtl
jo
jl
add
adc
xchg
inc
sti
sbb
in
mov
mov
je
pusha
into
fcomps
pop
push
rclb
test
or
add
rorb
movsl
lds
popf
cltd
jns
xchg
mov
stos
test
inc
mov
cmp
mov
pop
jo
nop
mov
roll
add
test
sbb
out
and
sub
mov
mov
mov
jnp
or
in
and
jge
aas
cmp
pushf
mov
mov
popa
jbe
int3
jb
lcall
xor
dec
sub
push
sarb
sahf
xchg
jno
push
dec
jg
xor
int
xchg
mov
flds
pop
xor
iret
pop
sub
push
dec
jl
xchg
roll
jle
ss
pop
aas
daa
xchg
xor
sbb
iret
pop
pop
mov
sbb
jnp
fs
ja
sub
cmpsl
fsub
mov
dec
or
lahf
push
adc
push
mov
cmc
int
dec
loope
lret
jns
out
jle
imul
pop
arpl
inc
cmp
loopne
adc
mov
scas
leave
je
mov
jp
inc
mov
add
push
dec
in
dec
bound
xchg
insb
bound
stos
cwtl
push
dec
jbe
jmp
sub
ror
or
add
cmp
mov
leave
cmpsl
jl
scas
popa
and
add
mov
xor
or
xchg
lret
adc
inc
xor
push
xchg
or
jae
jle
push
push
and
lods
sub
into
sbb
cmp
and
ret
add
cmp
mov
jne
test
ret
ja
sbb
adc
dec
sbb
mov
pop
incb
xchg
fcmovnu
fiaddl
xchg
mov
roll
rclb
xchg
jbe
xor
cltd
clc
aam
jmp
cmp
pop
insb
add
sbb
jmp
scas
cmp
out
xor
jo
jno
mov
fsub
lods
sbb
shl
scas
mulb
inc
out
mov
dec
cmp
out
sbb
dec
mov
adc
xchg
daa
adc
sbb
out
pop
cmp
adc
sub
lretw
ret
mov
sti
dec
iret
fisubrl
mov
and
and
mov
or
daa
repz
sub
insb
cmp
cmp
or
std
in
cmp
sahf
jnp
add
pop
jmp
sbb
in
gs
sub
adc
fwait
cmp
xchg
inc
jl
sahf
popl
mov
mov
and
sub
mov
int
cmc
stc
loope
sbb
sbb
scas
or
mov
das
cmp
jmp
aas
inc
scas
dec
dec
dec
cmpsl
daa
fwait
and
fbstp
and
mov
adc
pop
sub
lods
xchg
add
push
jp
dec
movsb
mov
xlat
dec
lock
pop
ret
bound
or
cli
gs
addr16
std
ds
in
xor
shrb
push
rcrl
leave
out
outsb
cmp
cltd
mov
cltd
sbb
ret
pop
sar
and
or
data16
lds
fiadds
or
jae
std
lods
xchg
sbb
es
rol
cmpsl
rorl
mov
into
jecxz
aaa
and
ljmp
rcl
mov
negl
orl
xorb
loop
and
std
jno
pushf
fdivs
inc
test
and
gs
add
xchg
mov
daa
sbb
cmp
cwtd
lret
pop
xchg
sbb
adc
pop
pop
loopne
lods
adc
stc
shll
jg
inc
mov
fwait
lahf
cld
fidivl
jmp
int
adc
ja
fwait
lock
mov
das
flds
in
cld
mov
adc
dec
sti
sbb
int3
inc
xchg
mov
mov
movsb
and
mov
insb
in
test
ficomps
lret
sbb
cmp
pop
pop
cmc
outsb
or
or
cmp
loope
add
jnp
out
jne
sub
sbb
fbld
sub
int3
mov
ret
icebp
add
les
adc
lret
aaa
fwait
sahf
push
ja
jo
add
mov
test
sub
lea
dec
xchg
ret
jo
xor
jp
int
xor
dec
rclb
ret
sub
imul
repz
cltd
push
nop
inc
repnz
rcl
xor
jno
dec
cmp
and
or
out
bound
aas
in
mov
jbe
cmc
jmp
pop
xchg
jp
mov
xchg
adc
jo
cli
cmp
add
sahf
push
and
mov
in
notb
roll
mov
out
xchg
cmp
in
sbb
sbb
jmp
or
sbb
sub
pop
dec
xorb
and
add
and
jmp
rcrb
inc
mov
jle
repz
faddl
push
lcall
sub
sti
lret
jp
popa
outsb
sbb
or
jno
mov
mov
push
cltd
push
xchg
jecxz
sarl
jae
fwait
jae
cltd
mov
sbb
mulb
addr16
pop
lock
inc
ds
inc
movsl
pop
push
cli
cmpsl
roll
cmp
mov
xchg
push
scas
jno
cmpsl
insl
test
or
sbb
mov
xchg
stc
lds
lcall
lret
mov
inc
popa
in
inc
mov
and
inc
aaa
icebp
mov
inc
ret
xor
inc
jg
push
push
sbb
imul
sub
cmc
push
mov
shll
es
cld
mov
lods
xchg
cs
or
int
xor
lahf
imul
sbb
in
pop
push
add
mov
ficompl
or
into
inc
inc
dec
add
pop
sbb
adc
movsb
xchg
imul
jmp
push
cmpsl
adc
or
mov
ds
stos
std
jg
dec
jnp
cli
lahf
push
dec
sub
adc
mov
popa
mov
loope
push
bound
and
insb
ljmp
imul
mov
inc
int
mov
xchg
add
jl
mov
or
outsl
loop,pn
or
notl
xor
imul
inc
lods
lret
sbb
int3
pop
mov
pop
mov
out
pop
push
xor
jo
cmp
dec
cmp
in
push
scas
or
test
out
sbb
jp
ja
lds
jb
ftst
sbb
dec
mov
fcompl
fcmovne
lcall
int
test
jp
xchg
aas
sarl
mov
jnp
mov
scas
dec
mov
add
jns
xor
je
incl
lcall
lods
fisubs
icebp
pop
test
push
je
jns
ja
xor
invd
dec
or
xlat
sbb
dec
mov
mov
or
idivl
dec
das
lock
movsl
cmp
loop
mov
call
push
sub
mov
xlat
or
mov
nop
adc
lds
sbb
sbb
sbb
mov
cltd
adc
mov
add
mov
pop
repz
mov
push
xchg
nop
sbb
ret
mov
pop
rcrl
or
fcom
leave
mov
lret
and
jo
lea
imul
out
inc
mov
and
popf
lret
orb
xchg
insb
bound
and
movsl
lods
push
push
aad
arpl
shr
xlat
sbb
rcrb
add
xorl
inc
pop
ficoml
scas
vunpcklps
movb
inc
ret
into
leave
dec
push
imul
pop
cli
shrl
mov
loope
imul
es
xchg
outsb
cmp
scas
ror
aas
pop
dec
dec
cs
jmp
adc
jg
mov
pop
jnp
pop
out
inc
ret
into
lahf
push
sub
or
mov
dec
jno
fwait
sti
cli
adc
stc
xlat
test
mov
testb
inc
int3
push
add
push
ljmp
das
notl
mov
sbb
cmp
ds
or
imul
pop
cmp
sbb
mov
lahf
add
push
or
mov
xlat
mov
jecxz
jl
movsl
xor
ljmp
sub
xor
es
fildll
scas
mov
ficompl
jle
shl
aaa
fildll
sub
jo
shl
adc
adcl
jnp
stc
mov
std
add
dec
ja
xchg
mov
or
or
sub
sub
push
ret
bnd
dec
sub
cwtl
adc
dec
jae
sub
mov
and
insl
out
lods
pushf
scas
push
arpl
je
jnp
mov
sarb
loop
inc
outsb
jno
movsl
xor
shll
jne
xor
pop
or
jge
popl
mov
mov
arpl
mov
test
nop
pop
pop
test
insb
sbb
aas
lret
push
lods
add
push
cmp
shrb
cmp
add
js
sub
loope
outsl
cmpsb
push
xchg
cmp
inc
adc
jg
std
cmp
in
inc
addr16
lods
loop
cmc
leave
xor
testl
ds
mov
dec
subb
jge
fisubl
xor
ljmp
repnz
pop
stos
sbbb
pushf
xor
jp
pop
xor
fdivl
or
xchg
sbb
lahf
or
cmp
cli
push
inc
inc
xor
mov
es
cmp
sbb
jb
incl
sub
pop
add
and
cmp
ret
stc
jle
aad
imul
lds
dec
iret
test
gs
xchg
push
movb
orb
add
mov
pop
test
mov
sbb
jmp
adc
imul
notb
es
pop
and
jns
gs
dec
das
nop
pop
into
cmc
push
fsubs
lret
sbb
mov
jae
cmp
jae
cmp
fdivrl
lret
mov
scas
out
outsb
xorb
imul
lahf
jnp
sub
mov
aas
mov
in
pop
in
adc
pop
xor
fstpl
ljmp
jne
add
daa
push
xchg
int
xor
mov
jno
mov
lock
in
and
push
xor
in
fisubrs
hlt
in
sahf
pop
xchg
pop
shll
jns
sub
mov
fidivs
data16
int3
mov
xchg
lret
icebp
add
popf
aam
fsubl
jmp
lcall
mov
sbb
out
mov
dec
cmp
shll
pop
pop
mov
mov
jge
lahf
pop
outsl
test
mov
pop
loop
cwtl
testl
jo
sbb
jnp
cmp
dec
pusha
cmp
sub
iret
in
lret
xor
sub
insb
inc
adc
into
xor
outsl
push
mov
sub
mov
xchg
pusha
sub
mov
pop
cmp
dec
xlat
xor
jne
pop
insb
lret
pop
mov
and
jg
mov
and
jo
push
js
repz
aaa
pop
pop
cmp
rcl
sahf
push
xor
adc
lds
jbe
or
add
cmp
pusha
and
ja
pop
pop
pusha
mov
popa
sub
jb
jo
lods
mov
push
push
cmpsl
xchg
subb
popl
inc
cltd
out
xchg
jne
dec
add
and
and
mov
and
xchg
mov
test
xchg
mov
pop
mov
or
dec
jno
movsb
jo
xchg
popf
pop
les
jge
js
pop
aas
jecxz
outsl
jge
loopne
inc
shll
std
out
push
mov
dec
jns
inc
xchg
mov
pop
xchg
repz
adc
js
jp
push
fdivrp
mov
scas
and
jne
push
sbb
mov
jae
insb
jno
and
addr16
lea
out
xor
jb
int3
sbb
push
pop
or
arpl
jg
xor
pop
aam
mov
adc
mov
loopne
sti
mov
sub
mov
and
rcrb
shll
mov
adcb
in
and
lds
loope
mov
cmpsl
aaa
or
xchg
ret
pop
jmp
clc
or
sub
ljmp
aaa
mov
js
pop
lret
sbb
sbb
add
sub
inc
pop
jmp
loope,pn
ficomps
pop
data16
mov
xchg
stc
outsb
enter
insl
cmpsl
push
mov
xchg
push
sub
inc
inc
xor
push
or
or
arpl
adc
jmp
sub
enter
add
div
xor
scas
dec
pop
inc
lahf
dec
cmp
pushf
aam
dec
in
jbe
lahf
outsb
rorl
lods
jae
mov
icebp
or
lock
jnp
mov
out
je
push
pop
in
lods
mov
pop
xchg
lcall
rolb
fimull
mov
fists
aaa
xor
data16
ss
jmp
subb
inc
test
in
les
cmp
jb
ret
dec
test
dec
or
lret
fcomps
enter
jb
cwtl
repz
mov
daa
mov
arpl
push
mov
dec
mov
mov
sbb
jle
pop
jo
sbb
adc
or
xlat
cld
pop
out
nop
addr16
push
test
loope
pop
push
iret
outsl
scas
mov
daa
push
jecxz
aam
adc
or
inc
jl
pusha
or
frstor
jno
icebp
outsb
imul
ds
imul
sbb
mov
fnsave
test
mov
inc
sbb
aaa
movsl
adc
lahf
aaa
mov
enter
mov
mov
ret
ljmp
lret
popa
pop
sti
mov
in
pop
in
sti
sbb
ljmp
pushf
mov
nop
lods
push
in
clc
jge
xor
dec
jno
xor
push
mov
push
jns
hlt
and
xchg
fisubrs
int
cmc
in
rol
sahf
outsl
sub
addr16
push
pop
pop
cs
mov
mov
mov
in
hlt
push
inc
hlt
sbb
add
and
dec
pop
adc
aam
pushf
dec
sbb
push
pusha
sub
loop,pn
pop
aas
xchg
stos
inc
adc
mov
imull
out
fwait
clc
pop
and
jg
or
movsl
idivl
fwait
shlb
adc
mov
dec
insl
mov
xchg
icebp
loop
test
pop
dec
imul
fldl
push
sub
ds
lods
and
ja
pop
jmp
cmp
sahf
shl
mov
sbb
in
lcall
ret
popf
jmp
xchg
lahf
cltd
mov
rorb
push
std
push
cld
pop
pop
sbb
lret
jmp
or
push
cmp
aam
cmpsb
sub
fldl
mov
add
jmp
lods
add
mov
cs
shll
inc
push
mov
testb
fs
mov
fimull
or
xlat
jb
lahf
cmp
jle
adc
add
cli
pop
ror
xchg
mov
rcll
shrb
jp,pt
jle
iret
cs
push
pusha
xchg
enter
inc
int
repz
jnp
je
pop
push
jb
out
and
mov
mov
push
or
jae
out
insb
mov
sbb
sub
sub
shll
divps
lret
test
fwait
sbb
repnz
call
pop
push
pop
sbb
xchg
cmp
adc
sub
rolb
es
inc
mov
dec
jns
movsb
arpl
xchg
fmuls
movsb
stos
xor
push
xor
aas
mov
mov
inc
insl
add
or
enter
or
mov
pop
out
or
sbb
sti
icebp
adc
xchg
stos
inc
push
cmp
sub
cmp
sbb
rolb
xchg
hlt
es
xchg
inc
fistps
cmpl
cltd
movsl
dec
add
mov
mov
repz
sbb
jg
les
mov
in
cmpl
ret
adc
sub
xchg
xor
mov
inc
mov
repnz
dec
xchg
mov
and
xchg
jno
xchg
push
push
dec
aad
pop
in
cli
mov
ja
ret
pop
dec
pop
inc
sahf
repz
xlat
mov
inc
adc
mov
ret
fisubrs
and
inc
in
sub
xchg
xor
adc
or
dec
int
pop
jecxz
inc
pop
mov
daa
test
call
cmp
cmpsl
and
mov
ret
divb
loope
mov
ds
fdivl
cwtl
pop
ljmp
jmp
lahf
rorb
jg
xlat
mulb
add
hlt
outsb
add
adc
and
mov
ret
mov
mov
xor
das
in
adc
mov
ds
ljmp
les
sbb
mov
inc
ret
lods
test
aaa
add
push
lods
cli
jnp
or
testb
mov
inc
adc
or
cmpsl
out
push
movsl
int3
or
push
test
and
in
subl
cmpsb
repz
dec
dec
fdiv
lods
lahf
sub
and
jge
and
fidivrl
addl
repnz
in
scas
out
xor
sarl
ds
jbe
leave
jl
push
andl
lds
aaa
jmp
xchg
mov
loop
add
scas
mov
push
mov
jnp
jnp
movsb
arpl
mov
jae
inc
add
jae
mov
xor
xorb
mov
cwtl
mov
or
mov
in
jno
lods
jmp
lahf
not
aad
lret
cmp
movsl
or
stos
sbb
dec
cwtl
fiaddl
sub
inc
adc
mov
or
fxch
sub
shrb
pop
inc
int
lret
mov
scas
in
pop
cmp
pop
xchg
or
push
push
or
jge
lahf
cmp
sbb
xor
fcoms
inc
insb
mov
mov
es
sub
mov
mov
cmp
and
ret
adc
cmp
bound
addr16
popf
sub
cmc
pop
xchg
insb
test
shll
or
cmp
or
stos
cmpsl
mov
and
scas
mov
leave
sbb
pop
sbb
mov
repz
sub
cmp
js
shll
shlb
xor
jno
mov
sub
inc
jle
lahf
pushf
das
rorb
push
mull
mov
out
mov
ret
push
stos
and
pop
int3
fs
jns
icebp
pop
inc
imul
sbb
xchg
hlt
jecxz
mov
push
rcl
and
imull
notb
nop
hlt
in
mov
mov
bound
outsl
cltd
mov
shr
test
scas
pop
imul
jbe
cmp
and
dec
fbld
mov
mov
subl
mov
das
mov
std
int3
or
adc
sbb
mov
cmp
lods
sub
flds
loopne
addr16
cltd
inc
sbb
ljmp
mov
add
outsl
hlt
out
loop
jb
push
adc
adc
inc
xorb
ret
inc
sarl
adc
xchg
outsb
int
push
mov
je
lahf
sahf
mov
cmpsb
sub
xchg
leave
mov
jnp
or
mov
jbe
xchg
clc
test
aam
xor
fnstenv
lahf
cmpsb
insl
cwtl
and
sub
dec
arpl
movsl
mov
gs
sbb
imul
hlt
push
iret
pop
or
push
fs
jl
movl
cmp
and
scas
hlt
lods
jne
cmpl
outsl
test
fwait
arpl
push
shll
dec
sub
mov
cwtl
jnp
inc
stos
push
push
enter
shll
cmp
xor
cmp
jne
and
aad
mov
loopne
sbb
loop
pushf
enter
lods
in
and
inc
imul
sbb
insb
xchg
mov
lea
hlt
into
cmpsb
fdivrs
test
call
pop
xchg
mov
lock
dec
es
lods
xlat
mov
sbb
sbb
cmp
gs
popf
sub
les
xor
fs
jle
aaa
mov
inc
sub
sub
cmp
mov
or
bound
lds
fisubs
dec
pop
aaa
dec
cli
scas
lea
mov
out
shl
imul
mov
test
or
sbb
and
adc
lea
jmp
jmp
xchg
lcall
pop
jg
cmp
xchg
mov
je
sub
sbb
daa
adc
pop
xchg
sub
xchg
cwtl
sub
mull
xchg
jg
cmpsl
scas
cltd
dec
in
in
sub
out
mov
daa
pushf
ljmp
lock
in
add
inc
jnp
push
adc
mov
loopne
xlat
hlt
and
mov
icebp
sbb
lds
mov
mov
ds
fisttpll
cmp
add
add
aaa
repz
imul
bnd
es
jl
shlb
test
jg
into
or
sbb
insb
lea
in
pop
and
push
dec
cmp
pop
in
xchg
call
cld
hlt
test
dec
add
leave
xchg
pop
outsb
xor
jge
stos
xchg
test
push
adc
stc
xor
sub
test
inc
add
aas
subb
mov
jne
ljmp
test
adc
es
mov
mov
and
xchg
lcall
push
mov
roll
xchg
int3
mov
mov
xchg
dec
cwtl
insb
or
fcoms
mov
sbb
xchg
in
rol
mov
xchg
in
push
test
xor
incl
xchg
scas
das
pop
fnclex
lea
xchg
push
lods
jbe
push
aam
xchg
stos
mov
ret
push
cmp
jecxz
sub
xchg
push
cmpsl
xor
dec
inc
pop
cld
js
jnp
cwtl
lock
pop
mov
popa
jle
fadd
repz
cmp
sbb
xchg
mov
scas
xchg
cli
stos
jbe
movsb
mov
test
je
jmp
cmp
in
int3
mov
pop
aaa
adc
cltd
xchg
ds
in
adc
inc
pusha
or
mov
imul
or
mov
lods
imul
aas
lahf
and
cli
push
xchg
test
sbb
inc
aaa
out
add
push
cmp
and
lods
lret
push
push
out
enter
jl
or
sub
cmp
aaa
push
in
iret
inc
into
jbe
andl
push
lods
pop
mov
fbstp
bnd
cmp
jmp
clc
mov
mov
adc
mov
mov
sbb
repnz
bound
mov
jmp
testb
jl
lcall
jp
push
scas
psrad
sbb
clc
insl
cwtl
jbe
loope
std
in
and
sti
push
out
outsb
add
arpl
lds
lock
in
sub
jl
fstl
das
subb
pop
je
lcall
inc
das
pop
popf
into
hlt
lock
or
adc
xchg
mov
dec
cli
dec
dec
lock
xchg
cmp
mov
imul
movsl
xor
adc
or
out
mov
or
imul
je
cmp
mov
xor
mov
imul
or
pusha
xbegin
cmp
in
cli
aaa
sahf
add
aad
das
les
inc
xor
addr16
cmp
xchg
sbb
popf
adc
mov
dec
cmp
in
nop
xchg
orl
push
inc
inc
mov
push
xor
jmp
add
pop
mov
popf
scas
cmp
xor
inc
std
jb
dec
cmp
test
mov
add
inc
pop
xlat
add
cmp
cmp
cmp
push
add
fldl
push
cmp
imull
inc
add
cmp
inc
bound
mov
outsl
pop
test
out
mov
mov
ret
rorl
pop
mov
jmp
popf
out
lret
sti
ds
cmpsb
push
sub
test
lea
out
aam
mov
test
scas
push
es
mov
daa
push
or
iret
mov
or
xchg
jl
mov
push
adc
push
fbld
lods
mov
push
jle
ss
or
iret
mov
test
ss
inc
jb
mov
dec
inc
loope
pop
lret
mov
outsl
aam
adc
add
popa
insb
mov
mov
xor
mov
outsl
or
or
cmp
cmp
shlb
sahf
mov
adc
add
sub
or
es
rolb
pop
and
mov
or
and
arpl
loop
add
int3
mov
jl
stos
cwtl
push
mov
lret
iret
xchg
sub
test
jo
sbb
sub
mov
ja
aaa
ret
test
sahf
scas
xchg
dec
mov
jp
outsl
loopne
mov
push
roll
mov
push
dec
lock
mov
popf
sub
mov
movsl
das
jbe
cld
shll
std
out
jnp
dec
gs
mov
push
pop
adc
sub
addb
loope
sbb
xor
fstl
cmp
mov
sti
rolb
push
into
jnp
ficompl
lods
and
cli
mov
ljmp
iret
iret
add
push
jns
mov
ret
nop
cwtl
push
lret
cmpsl
ret
shll
dec
fsubs
lea
push
adc
imul
in
ret
stc
dec
stos
add
movsb
jecxz
bound
xchg
inc
pop
cwtl
cmp
mov
sub
lret
xor
inc
popl
sub
add
lret
dec
dec
test
jg
add
je
lock
bound
sbb
cmp
test
sti
mov
inc
inc
stos
adc
dec
or
call
enter
xor
cmp
and
or
in
sbb
iret
inc
popf
adc
shll
xor
sbbb
xchg
jmp
jecxz
mov
imull
fisttpll
and
sbb
shl
and
std
cwtl
inc
xlat
cmp
dec
or
popf
nop
inc
rorb
jo
mov
xor
sub
gs
aaa
test
mov
arpl
inc
ds
leave
mov
mov
push
mov
mov
mov
push
fwait
mov
mov
push
mov
in
cmp
pop
jno
jl
mov
push
movsl
lret
cmp
fisttpll
jno
or
call
push
push
adc
lret
cmpsl
mov
pop
pop
sub
or
xchg
mov
test
push
push
shll
lods
test
in
push
ljmp
and
pusha
jecxz
int
jg
mov
gs
dec
stos
popa
cmp
or
adc
clc
clc
std
lods
sbb
cs
das
andb
push
adc
mov
xchg
xchg
push
mov
mov
inc
movsl
adc
test
leave
add
cmp
jo
loope
in
cwtl
or
mov
adc
jmp
xor
jns
mov
testb
add
rcrb
adc
out
push
mov
push
loope
sub
cmpsb
popa
xchg
fisubrs
movsl
leave
clc
test
adc
add
pop
inc
leave
cltd
push
in
add
scas
xchg
insl
lds
outsb
cltd
push
mov
or
cmp
insb
xlat
ja
scas
or
jne
test
and
xor
outsb
mov
push
outsb
mov
dec
or
fcoml
enter
or
insb
ja
aaa
inc
push
vpmacsdqh
movsl
xchg
jl
jb
pop
dec
test
pop
cli
test
repz
lret
mov
add
sbb
push
mov
subb
jo
sbb
fnsave
rcrb
pusha
mov
outsb
and
push
xchg
mov
mov
push
mov
hlt
aas
ss
and
sub
add
inc
jns
cli
js
cmp
test
stos
jg
mov
inc
pop
cmpsb
das
jl
dec
mov
sbb
mov
int3
and
mov
pop
loope
ja
orl
mov
std
imul
xor
dec
mov
mov
mov
subl
fs
lds
leave
and
test
mov
xchg
xlat
fs
inc
cmpsb
pop
outsl
dec
lock
stos
imul
push
add
jns
and
loope
js
push
test
mov
xor
inc
inc
add
arpl
nop
test
xchg
das
mov
out
pop
sub
inc
mov
scas
sub
or
clc
repz
cld
in
pop
insl
enter
pop
xchg
xchg
fcmovbe
mov
stc
push
mov
xchg
dec
dec
push
inc
push
push
xorb
cmp
sub
rorb
mov
mov
cld
je
adc
add
std
jle
sub
sub
aam
cmp
xchg
or
mov
inc
jle
mov
rol
and
adc
sub
push
pushf
out
push
and
sahf
sahf
xlat
adc
cli
mov
mov
aam
aam
shlb
or
mov
repz
cmpsl
or
stos
lahf
pop
in
xor
mov
bound
dec
popf
cli
mov
xchg
mov
dec
or
xchg
sub
mov
push
daa
push
test
adc
test
push
add
sbb
mov
hlt
inc
js
jno
cmp
aam
inc
jnp
lret
cmp
push
or
int
or
negb
inc
cmc
inc
or
jl
mov
xor
loope
or
lds
push
cli
sbb
inc
call
and
lods
mov
jno
jae
outsb
push
mov
dec
fldenv
inc
dec
fdivrl
xor
lcall
mov
xor
mov
mov
inc
dec
call
dec
mov
fidivrl
push
nop
les
or
call
ret
mov
sbbl
and
sti
and
jmp
daa
push
dec
sbb
cmp
adc
xor
imulb
sub
sarl
sbb
fsub
aad
sub
lods
mov
adc
add
daa
pop
cld
mov
pop
leave
xchg
xor
push
pop
sub
out
pushf
cmp
outsb
outsb
rol
mov
pop
xor
leave
mov
jae
mov
outsb
cmpsb
mov
sti
push
int3
mov
mov
pop
pop
movsb
push
cmp
jmp
cld
mov
repnz
pop
into
and
repz
test
or
imul
jbe
xchg
es
icebp
sahf
ljmp
sbb
adc
mov
ret
mov
mov
dec
xchg
ljmp
out
mov
inc
inc
cmc
in
lret
jle
push
cs
xchg
stos
push
mov
pop
jp
dec
fs
mov
fldenv
test
jp
mov
hlt
jbe
addr16
mov
mov
push
mov
sub
fistpl
sbb
and
or
ss
mov
out
repnz
addr16
add
sub
scas
adc
mov
fst
pop
mov
movsb
cmp
jl
push
test
sub
flds
fdivs
inc
xor
mov
add
inc
inc
jb
and
mov
xchg
divb
into
xchg
popa
shl
fwait
xor
enter
adc
mov
sub
cli
inc
inc
or
stc
int3
jle
push
mov
pop
arpl
bound
cld
mov
dec
andb
fistpll
divb
daa
out
test
sbb
cmp
push
filds
loope
fs
pop
rcrb
mov
mov
lods
mov
ss
lret
cmp
insb
ss
lods
sbb
stc
mov
cmpsl
jns,pt
or
xchg
inc
mov
sbbl
add
mov
cmpps
push
outsl
loop
sub
lcall
push
sub
cli
dec
flds
mov
les
add
sub
mov
or
lods
push
dec
pop
push
pop
pop
cld
mov
xchg
add
sub
cmpsb
jb
sbb
mov
ret
and
mov
add
lds
sarl
and
lcall
js
mov
in
mov
ds
hlt
jnp
loop
cld
mov
into
xchg
hlt
xlat
rcr
enter
in
jmp
sbb
lds
or
xor
inc
add
xchg
jae
or
test
test
push
push
shl
in
ja
outsb
call
cld
cmp
add
dec
stc
adc
add
mov
cs
std
push
dec
inc
rorb
lret
xchg
mov
pop
and
xor
lds
iret
popa
in
or
push
rcr
pop
dec
imul
sub
xor
jmp
lods
push
nop
popf
ret
call
inc
xchg
xchg
in
xor
orl
jge
cwtl
aam
cltd
dec
jp
fstl
jle
xchg
stos
je
lds
outsb
stc
xchg
loope
shll
scas
push
mov
loop
or
cmp
test
repnz
sbb
or
in
cmp
rorb
sbb
pop
push
or
sub
xchg
std
loopne
and
test
mov
ret
and
xchg
js
sub
loopne
cmp
push
shl
mov
nop
andb
sbb
and
cmp
in
and
test
fistpll
xchg
xor
loop
clc
aaa
shlb
add
xor
and
mov
xor
shll
push
loope
sbb
sarl
add
imul
adc
xlat
scas
sub
mov
bound
sub
int
fsubrs
xchg
push
stos
arpl
fcoms
mov
or
sti
mov
sbb
sarl
xorl
sub
in
jnp
imul
push
in
inc
and
stos
push
shlb
clc
loopne
lea
pop
aaa
mov
xchg
aas
or
aaa
pushf
mov
sub
lcall
frstor
ret
dec
sub
sbb
lods
shl
jl
fdivrs
xchg
std
popf
push
pop
faddl
mov
cmp
jae
jnp
push
cmp
mov
xchg
xchg
stos
addr16
cmp
push
cld
push
imul
add
jo
lcall
mov
insl
xor
mov
aam
cmp
stc
pop
xor
push
push
rep
adc
jmp
mov
rcrl
xchg
xor
or
sub
lret
mov
jno
pushf
inc
sub
adcb
push
out
and
adcl
daa
mov
jge
ja
mov
cli
and
adc
push
jnp
lahf
and
pop
rcll
cmp
cmc
cmpsl
fildl
jo
stos
sbb
push
jp
dec
dec
sti
clc
mov
ds
add
mov
mov
cli
sub
shlb
iret
pop
dec
jbe
iret
inc
xchg
imul
pop
arpl
cmp
sbb
pop
adc
imul
mull
inc
jecxz
dec
int3
pop
fxch
add
pop
icebp
mov
stc
or
cmpb
sbb
adc
jge
and
sbb
in
xor
xorl
dec
clc
out
popa
test
rclb
mov
sbb
nop
and
pop
movsb
push
iret
push
xchg
push
stos
insb
leave
sub
mov
and
mov
leave
lahf
jl
test
or
into
mov
out
lods
mov
mov
fwait
xlat
mov
mov
in
shlb
dec
std
inc
mov
stos
mov
cmpsl
xor
fld
and
xchg
xchg
cld
cltd
cmp
dec
hlt
or
xchg
and
xchg
loopne
and
inc
pop
aad
out
sbb
xor
sub
sbb
test
pop
mov
push
pop
in
xrelease
mov
mov
mov
adc
insb
xchg
xchg
in
push
mov
sbb
cmc
mov
dec
or
jp
mov
mov
xlat
movsl
adc
add
orb
repz
xor
dec
out
scas
mov
or
add
daa
jecxz
mov
test
sub
ds
dec
es
pop
movsb
jge
sbb
dec
jb
cmp
xchg
xchg
idivb
std
cmp
lock
pop
add
mov
aad
mov
stc
jecxz
lret
sti
jo
dec
out
dec
lahf
xor
jne
add
inc
fwait
dec
cwtl
cltd
pop
jmp
xchg
xchg
daa
mov
push
imul
xor
xor
loope
test
popa
push
jl
aam
mov
inc
or
insl
push
fld
xchg
inc
cmp
jge
dec
pop
inc
es
push
fdivrs
and
mov
imul
mov
push
push
pop
testb
and
pushf
lods
dec
shrd
aad
add
std
out
jle
jnp
popa
aad
gs
shrl
ret
psubw
cli
push
dec
mov
mov
inc
inc
loope
pop
test
cwtl
and
adc
cmc
mov
je
leave
outsl
dec
imul
sub
mov
sbb
sbb
mov
dec
insb
pop
iret
xchg
and
movsl
or
push
push
dec
sub
rcll
aad
shr
push
mov
pop
pop
sub
mov
lods
repz
mov
das
dec
aas
pop
cmc
jno
adc
mov
rolb
adc
jns
out
dec
dec
xor
test
dec
add
ds
pop
sbb
add
cltd
or
lods
rcll
enter
or
cmpsl
xchg
adc
mov
or
mov
js
sub
aam
adc
repnz
into
mov
dec
sti
repnz
xor
movb
xor
pop
and
xchg
je
sub
dec
inc
push
inc
cmpsl
push
adc
jo
fsubrp
mov
iret
or
cli
push
or
mov
jbe
cs
jge
adc
mov
in
lahf
jecxz
cmpl
push
iret
adc
mov
mov
mov
jmp
outsl
jnp
std
iret
push
jmp
addr16
inc
pop
imul
ss
not
adc
or
loopne
dec
lea
test
jge
jb
loope
mov
pop
lahf
test
or
rol
in
pop
mov
rcr
fadds
pop
lds
fcmovb
add
loop
xchg
fwait
mov
lret
or
pop
shrb
popf
cmp
in
pushf
lods
sub
rorb
adc
and
repnz
push
out
jbe
insb
lahf
mov
push
das
mov
fdivrp
fists
push
aas
sbb
test
adc
jmp
lds
and
cltd
jecxz
cli
scas
outsl
pop
jo
out
and
mov
sbb
add
test
je
and
push
mov
sti
repnz
test
jns
rorb
dec
popa
cltd
loope
mov
fwait
cmpsl
pushf
mov
jne
nop
dec
faddl
movsb
jae
pop
inc
cld
xor
pusha
cwtl
arpl
sarl
xchg
or
and
push
mov
aam
bound
add
push
cmc
or
or
pop
xchg
sbb
out
movsb
inc
inc
sti
dec
and
jp
mov
dec
mov
stos
xchg
ror
cwtl
mov
jecxz
mov
aaa
mov
pop
rcrb
xchg
jno
iret
fst
mov
je
xchg
out
add
xchg
loope
jl
adc
and
cmpsb
inc
cmp
movsl
sbbl
daa
js
adc
mov
xchg
jae
stos
push
mov
mov
adcb
outsb
xchg
adc
xor
sub
leave
jg
fcmovnb
jecxz
test
push
push
or
pop
ficompl
xchg
hlt
pop
bnd
incb
mov
in
jp
scas
mov
js
or
push
mov
test
lret
add
inc
mov
ss
mov
popl
cmp
add
xchg
sub
lock
aaa
data16
scas
push
es
lock
cld
xchg
mov
das
mov
stos
seto
and
mov
cmc
popa
shrl
dec
out
push
aam
in
mov
push
imul
gs
inc
mov
jo
lods
xor
inc
push
xchg
mov
insl
sbb
sarl
add
mov
lret
or
dec
sbb
pop
cli
jl
fnstcw
lods
fucomp
xor
lcall
dec
adc
inc
xchg
scas
pop
jmp
jmp
add
fsubl
hlt
inc
dec
mov
fists
xchg
lods
jb
fprem
jno
aad
int
mov
shrl
loop
mov
ljmp
decb
mov
mov
xchg
bound
mov
pop
mov
ljmp
out
dec
enter
jae
mov
push
cmp
ljmp
and
cmp
and
je
outsb
in
cmpl
scas
aam
jmp
xor
aam
js
je
pop
dec
std
fstps
cmc
test
ljmp
and
xor
xchg
lods
sbb
pusha
push
mov
int
flds
or
in
inc
shll
in
das
fcoms
dec
fdivrp
cwtl
jbe
into
mov
daa
cmp
fdivs
out
sub
lcall
das
into
outsl
xchg
leave
ret
and
jno
pop
ds
imul
ss
sbb
push
fcmovbe
jl
mov
or
in
sub
jne
jae
ja
dec
push
cmp
pusha
enter
cmp
dec
pop
pop
pop
pop
adcl
imul
push
sbb
dec
pop
xor
mov
dec
add
jg
inc
mov
sbb
cld
pusha
dec
push
data16
inc
add
xchg
jecxz
lret
and
cmpsb
enter
test
addr16
ret
pusha
dec
icebp
and
test
fsubl
je
or
pop
rclb
insl
or
es
fisubrl
int
pop
xchg
jo
sahf
sbb
mov
adc
aam
iret
jnp
sbb
inc
insl
mov
jae
mov
repnz
je
adc
or
fmull
sub
aam
mov
insb
mov
ja
cltd
in
mov
add
push
fwait
inc
push
sbb
xor
pop
sub
jbe
scas
mov
cmp
sub
jl
inc
dec
jb
movsl
mov
pop
mov
mov
adc
cltd
push
pop
imul
xor
mov
inc
ret
xchg
mov
pop
mov
or
mov
mov
mov
push
inc
lds
rcrl
pop
movsb
les
mov
sub
test
push
push
imul
mov
mov
lret
push
and
int
fsubs
add
dec
aas
push
cmp
xchg
cmp
push
stos
popf
repz
mov
mov
dec
cmp
and
lsl
fwait
cmp
imul
int
gs
test
adc
cmp
push
daa
mov
sub
into
mov
adc
ret
ret
cmp
jo
xchg
inc
scas
jge
cmp
ret
mov
xchg
inc
dec
jno
fcompl
les
or
xchg
loopne
add
push
mov
xor
rorw
iret
mov
xor
pop
push
pushf
scas
xor
pop
je
xlat
xorb
stos
or
mov
lahf
mov
jne
inc
inc
sbb
testb
lret
xlat
jno
into
scas
cld
cwtl
push
mov
in
pop
mov
push
test
fdivrl
in
jmp
jo
loop
mov
or
adc
mov
popf
gs
loopne
xor
sub
push
movsb
imul
fnstsw
dec
inc
add
ret
fidivrl
jne
int
mov
add
sub
filds
dec
push
lret
push
jnp
cs
jl
xchg
jns
mov
int3
pop
call
ja
aaa
push
sbb
cmpl
mov
jbe
mov
in
fldt
test
and
leave
sub
inc
out
add
sbb
inc
sarb
mov
repnz
lret
leave
dec
ret
sbb
loope
jl
call
pop
nop
lret
and
mov
xchg
mov
mov
imul
sub
cltd
arpl
out
test
push
iret
mov
pusha
push
imull
decl
xlat
enter
pusha
mov
sbb
pop
ret
xchg
ror
push
ret
scas
aam
xor
cmc
test
xor
or
lret
popa
add
push
or
adc
xchg
add
scas
push
popf
aad
insb
mov
mov
xchg
pop
fldenv
adc
xor
add
xor
push
fldpi
stos
loop
pop
stc
xlat
outsb
aam
jb
movsb
fs
or
lock
lcall
xor
mov
jnp
decb
or
cmp
repnz
xchg
addb
aad
ficoms
pop
dec
sub
xor
mov
ret
out
scas
xor
xor
mov
push
mov
xor
mov
mov
mov
repnz
mov
out
push
jle
and
test
mov
xor
sbb
repnz
jno
or
incb
lcall
daa
ret
inc
pop
sbb
pop
out
mov
out
loop
jns
push
xchg
test
push
sbb
pop
push
movsb
and
pop
dec
sub
addl
or
lock
repnz
fstpl
push
add
push
push
jb
out
imul
ss
outsl
push
inc
pop
pop
mov
push
xchg
adc
push
sub
mov
add
ss
dec
or
insb
das
lods
inc
inc
xor
jo
stc
in
cwtl
dec
out
mov
jbe
dec
xlat
shrb
jmp
je
sub
ret
mov
jecxz
jnp
repz
mov
pusha
xor
inc
xchg
xchg
dec
sub
lret
mov
lods
dec
das
inc
dec
or
add
jae
push
aam
jne
mov
arpl
pushf
inc
xor
in
or
fbstp
and
and
adc
adc
xlat
repz
xchg
insl
dec
cmc
mov
lret
hlt
lahf
xchg
nop
jmp
ret
and
add
repz
pop
jae
inc
enter
mov
pusha
int3
push
xchg
filds
mov
push
test
stos
negb
or
fsubl
cmp
sub
decl
sti
jbe
mov
mov
inc
xchg
notb
lcall
push
out
mov
adc
push
clc
cwtl
addl
imul
xor
ljmp
popf
cmp
xchg
pop
and
add
push
pop
scas
and
int
daa
push
push
lret
addr16
or
xchg
outsl
je
rolb
sti
test
insl
mov
add
dec
bound
adc
push
pusha
addr16
int
jle,pt
or
sbb
mov
iret
xor
mov
jne
mov
test
and
mov
mov
pop
outsb
aam
data16
cmp
mov
xor
bound
push
sbb
imul
or
sub
mov
outsl
or
and
xor
mov
sbb
mov
lea
jbe
xchg
out
fisubrl
xchg
mov
xchg
dec
add
loop
insb
out
shl
dec
fs
add
test
iret
sti
mov
sarb
and
dec
cmp
mov
cwtl
jbe
rcll
jnp
mov
fucomi
push
and
lods
pop
push
dec
subl
bnd
xor
mov
xchg
inc
xchg
icebp
inc
jno
icebp
push
out
mov
cmc
insb
fcomps
push
dec
rcl
out
std
in
inc
sbb
pop
lods
inc
mov
sbb
movsb
mov
xor
mov
push
and
jle
push
sub
jne
pop
popa
outsl
shr
sbb
outsl
xchg
mov
sub
mov
sbb
popa
mov
push
adc
jl
push
hlt
jge
mov
sbb
sub
sbb
pop
push
lea
push
dec
add
les
inc
call
pushf
addl
pop
and
gs
cmpsl
scas
or
fwait
sub
dec
add
xchg
cmp
loop
int
jnp
xchg
add
mov
pusha
int
fnsave
popa
jae
xorb
jno
lods
lock
pop
sar
push
xchg
pop
ja
jb
fcomps
pop
jno
adc
stos
push
push
xchg
adc
fwait
sbb
mov
sub
push
imul
rcr
out
cmp
mov
or
pop
cmc
push
jae
loop
sub
outsl
loopne
movsb
sti
jge
out
or
js
add
push
movsl
nop
ds
mov
cs
jae
lds
fadds
mov
push
sbb
jl
out
ret
out
popa
cmc
fmul
lahf
add
lcall
inc
add
or
jp
add
push
mov
xchg
pushf
enter
or
ljmp
das
mov
les
in
or
sbb
dec
outsb
mov
int3
inc
sbb
packuswb
mov
lock
xchg
xor
inc
push
scas
stos
pop
sbb
and
lret
repnz
add
les
outsl
popf
cwtl
fcomps
mov
inc
icebp
inc
adc
sbb
cmpsb
dec
cli
xor
xchg
dec
push
jnp
in
sahf
sub
out
movsl
outsl
movsb
jns
add
ja
xchg
add
das
je
leave
push
jmp
xor
cmpsl
sbb
dec
inc
fs
test
mov
adc
dec
movsb
mov
dec
andl
xchg
jnp
mov
pop
pop
and
les
jg
mov
addr16
pop
pop
das
lods
loopne
mov
jo
jge
call
jb
pusha
daa
call
xchg
inc
and
test
les
in
loop
fisttps
into
jns
movsb
iret
cld
outsl
ljmp
loope
cltd
call
call
mov
mov
sbb
and
push
popa
rcl
rorb
test
adc
cmp
push
test
dec
pop
xor
ja
push
in
lret
lods
aam
clc
mov
cmpl
push
sbb
jecxz
inc
push
sarl
mov
mov
or
and
and
ds
xchg
or
jae
imulb
cld
movl
xchg
test
int3
movsb
mov
mov
mov
pusha
jg
or
aam
aam
push
movsb
pop
push
loopne
lea
add
sub
fstl
inc
nop
push
adc
or
inc
add
mov
cmpsb
sar
push
mov
mov
andb
fidivrl
jle
cmpsb
stc
push
ficomps
repnz
mov
pop
addl
stc
filds
push
or
cmp
mov
dec
inc
push
xlat
dec
and
pop
sysenter
sbb
pop
jl
mov
mov
cwtl
imul
lgdtl
scas
mov
mov
xchg
inc
fisubrs
jno
xor
mov
lcall
jb
push
jmp
xor
push
sbb
mov
or
sbb
ljmp
aas
jecxz
xchg
adc
aaa
mov
sbb
out
mov
fiadds
pop
adc
mul
cltd
fdivrl
sbb
dec
mov
lahf
movb
cwtl
jnp
popa
fs
or
jmp
scas
into
cmp
out
mov
inc
xor
sbb
icebp
enter
js
cmp
cmpb
mov
jbe
mov
fstps
xchg
mov
in
xor
ss
jbe
ret
push
jge
jge
mov
incl
js
das
cmp
lds
pop
call
popl
int
mov
insb
xor
sahf
and
xorl
mov
cmp
fnstenv
dec
push
push
out
dec
les
xchg
sbb
cmpsl
add
cmp
jg
fisttpll
push
sub
mov
or
pop
lret
push
sarl
sar
jg
ret
pushf
or
xchg
mov
push
mov
sub
stc
addr16
enter
push
pop
cld
ss
rdtsc
jmp
pop
cs
mov
std
sbb
call
or
sarb
xor
xchg
aad
in
xchg
mov
jae
mov
arpl
mov
inc
cmp
scas
push
rolb
and
test
andl
and
sti
xchg
lods
mov
aad
lret
or
cltd
mov
js
outsl
movb
push
xor
sbb
je
test
pop
iret
hlt
icebp
test
push
movsl
pushf
mov
rolb
inc
in
cmpsb
push
cmp
pop
push
push
cmp
mov
pop
and
and
xchg
pop
hlt
gs
subb
nop
push
xorb
mov
inc
or
gs
popa
outsl
adc
test
fisttpl
shrl
inc
xchg
cmp
or
roll
lods
jmp
or
mov
lods
daa
push
loopne
mov
fstps
movsl
roll
orl
insb
ret
and
add
jl
iret
pop
lea
into
push
cmp
incl
dec
push
scas
jp
pop
push
stc
in
mov
test
pop
dec
sahf
fsub
cmp
mov
shrl
arpl
mov
mov
ljmp
inc
out
cmp
sbb
scas
call
iret
dec
mov
in
push
in
mov
mov
xor
dec
add
or
icebp
pushf
jle,pt
jle
repz
cs
cmp
imul
or
es
lret
add
cmp
cli
std
and
push
xchg
je
jne
jecxz
rclb
out
enter
insb
inc
daa
mov
dec
adc
mov
inc
filds
in
pop
lods
orb
sub
sub
mov
into
rolb
stc
aaa
inc
dec
add
jne
jb
xor
imul
ficomps
jne
aam
in
lcall
fmull
out
es
adc
cwtl
sbb
lds
and
push
testl
gs
sub
test
cmp
add
cmp
and
mov
es
lock
inc
inc
hlt
test
andl
sub
inc
sarl
adc
fwait
addr16
xchg
add
or
in
cmp
xor
fldcw
xchg
gs
xor
mov
outsb
pop
mov
adc
ret
out
sbb
cmp
pop
push
mov
jg
push
repnz
ja
and
nop
push
jne
xor
mov
xchg
push
rcrb
sbb
pop
cmp
into
gs
cmp
add
dec
aas
ljmp
insb
jge
test
push
lret
in
roll
loop
inc
add
rolb
fcoml
sbb
je
pushf
lret
call
adc
jecxz
subb
jo
out
add
sub
insl
mov
xor
outsb
nop
faddl
jp
pusha
jnp
mov
mov
pop
pop
lods
push
xor
jns,pn
mov
xchg
lods
lea
sbb
mov
cmp
cmpsl
push
fs
bound
dec
and
js
outsb
fs
push
and
sub
ficoml
mov
fcmovnbe
jl
scas
push
jns
idivb
dec
inc
dec
xor
or
jns
jno
push
xlat
arpl
lahf
mov
xor
lcall
lret
mov
add
pop
std
cmp
pop
movsl
and
ja
adc
push
popf
test
jmp
mov
xor
or
enter
ds
fmul
add
and
sub
in
sbb
push
in
xor
add
into
mov
cld
pop
daa
sub
fs
imul
faddl
jl
xchg
stos
insl
add
test
inc
pop
sbb
adc
xchg
push
shrl
lahf
mov
jg
dec
or
adc
dec
mov
adc
xor
daa
pop
xor
dec
xor
pop
aas
pop
je
sbb
enter
imul
nop
pop
sahf
shl
pop
int
xchg
rolb
add
mov
push
lea
loop
lahf
mov
dec
popa
jmp
outsb
or
adc
sub
je
sar
mov
repnz
fistpll
test
test
xor
nop
sbb
push
add
in
sbb
adc
fidivrs
outsl
and
push
cli
push
clc
add
pop
pop
fcmove
dec
xor
mov
addr16
in
pop
xchg
je
bound
sbb
shlb
popa
ficomps
pop
repz
xchg
scas
repz
jmp
rcll
xor
and
xchg
sub
sub
mov
sbb
jbe
addr16
xor
fsubrs
dec
sub
lahf
jo
lret
xchg
lret
jb
ja
movsb
or
movsl
inc
add
pop
push
lods
insb
sub
mov
shl
dec
out
sbb
out
push
aaa
in
mov
mov
pop
mov
xchg
sub
dec
xchg
mov
ficomps
sbb
adc
and
addr16
frstor
les
xchg
push
push
jbe
insl
cmp
js
sub
xor
notb
mov
std
rcl
sub
iret
sub
jl
inc
cmp
out
jne
or
lock
nop
stos
iret
cmp
rcrl
xchg
jnp
cmp
mov
xor
mov
gs
xlat
ret
mov
stc
sbb
fs
dec
mov
pop
and
inc
incb
jg
push
jb
mov
sbb
cmc
push
jno
fstp
mov
mov
push
push
push
cmp
fdiv
adc
mul
jae
jne
jo
dec
sbb
jmp
and
sahf
mov
xor
mov
mov
dec
and
xlat
xchg
loop
shll
js
leave
or
mulb
mov
jl
popf
push
cli
es
push
mov
lret
imul
or
mov
out
push
addb
sbb
rcrl
sbb
leave
in
push
mov
jmp
lds
cmpsl
mov
incl
stos
mov
das
cmp
test
mov
xchg
cld
rcrb
mov
and
adc
mov
ret
cmp
and
mov
sub
xor
lea
mov
sbb
sbb
mov
aam
mov
subb
and
mov
loopne
xchg
arpl
cmp
mov
loop
popa
lods
stos
cmp
nop
inc
lds
movzbl
pop
sbb
pop
xchg
lcall
adc
push
sub
or
insl
fldcw
clc
data16
dec
std
xchg
sub
dec
mull
or
sti
jno
mov
pop
cmpsl
cmp
aad
mov
mov
out
or
jmp
and
mov
mov
mov
pop
insb
mov
pop
faddl
dec
pop
sbb
push
push
sbb
loope
aad
ret
dec
movsb
fdivrp
loope
lcall
imul
inc
bound
jmp
dec
popf
dec
sbb
pop
sbb
mov
fstps
je
cmp
mov
aad
arpl
inc
test
dec
jno
rcrl
popf
dec
inc
push
push
nop
arpl
hlt
loopne
fwait
cmp
outsb
push
sbb
inc
or
out
mov
xchg
inc
popa
imul
and
pop
mov
sbb
das
lock
xor
xor
div
hlt
jno
xchg
ds
push
aas
dec
ret
shr
dec
fcmovnu
mov
insl
adc
call
mov
test
push
inc
cmpsl
aad
mov
shll
mov
inc
sbb
imul
jge
shlb
aam
aas
dec
inc
sub
rorb
mov
icebp
fdivs
and
dec
cmp
shlb
das
lret
pop
outsl
hlt
sub
push
pop
sub
outsb
fisubl
pop
addr16
fisttpl
jecxz
jae
cmp
inc
es
jg
lods
sub
jmp
push
and
scas
and
sbb
mov
inc
sbb
les
pop
dec
lret
push
xchg
jbe
in
scas
jp
adc
pop
push
mov
fwait
mov
sarl
adc
es
xorl
mov
sbb
mov
popf
and
or
andb
nop
jnp
ret
bound
adcb
adc
sbb
mov
lret
je
cmpsl
mov
and
adc
or
aaa
scas
fsts
mov
cwtl
xor
popf
push
jle
or
push
or
xchg
pop
pusha
dec
dec
clc
ss
adc
das
or
mov
push
mov
insb
testb
insl
dec
std
mov
push
scas
icebp
cmpsl
aad
scas
pusha
push
cmp
imul
jno
mov
pop
and
dec
mov
add
movsb
add
pop
sbb
push
or
xchg
pop
iret
mov
lock
rcrl
loope
lahf
repz
or
mov
lahf
inc
loope
mov
sub
lret
push
push
lahf
or
dec
lods
aas
sub
pop
ds
xchg
inc
mov
cmp
aaa
ja
and
push
xchg
push
js
jge
adc
repnz
pop
std
add
icebp
pushf
fdivl
add
mov
addb
sub
inc
leave
sub
and
aam
cmp
lea
mov
f2xm1
push
jae
shrl
mov
lahf
mov
cmp
pusha
mov
add
test
popa
scas
cmp
xor
jl
jle
lret
add
pushf
out
test
pop
or
sti
xlat
jg
aam
fstpt
out
mov
movsl
repnz
rol
dec
cmp
xor
add
sbb
inc
out
dec
adc
inc
mov
pop
fmull
xlat
lcall
and
inc
jg
aaa
dec
xchg
dec
fwait
mov
cltd
fs
inc
or
push
inc
pop
jmp
mov
sub
or
adc
test
leave
jl
test
popf
fcoms
std
adc
xor
lds
mov
je
xchg
push
arpl
mov
rcrl
mov
incb
aad
and
inc
jne
push
aam
push
in
std
int
jl
mov
fistl
js
jo
inc
in
aaa
mov
icebp
outsl
add
xchg
outsb
out
lea
xchg
lret
cltd
ret
or
fdivr
cwtl
xchg
pop
lea
mov
rorb
push
cmp
xor
mov
pop
imul
pop
fwait
mov
cltd
cmpl
push
jp
or
add
sbb
jno
xor
lods
mov
jmp
pushf
and
enter
dec
or
into
movsl
mov
test
aad
xchg
stos
sub
shrl
daa
scas
in
mov
inc
mov
pop
repz
or
lcall
aam
adc
sbb
cmc
cmp
inc
cmp
sub
pushf
fdivr
movsl
in
sub
test
jmp
test
sub
arpl
inc
jg
mov
fucomi
xchg
sub
shlb
push
push
add
out
jns
jb
pop
jnp
jmp
mov
sub
mov
sbb
cmp
out
jle
and
sub
pop
setno
dec
pushf
sbb
inc
adc
ss
push
jmp
test
mov
inc
pop
inc
pop
fistpl
push
mov
sbbb
xchg
mov
out
test
mov
mov
scas
ljmp
xor
mov
pushf
jne
push
inc
inc
out
sub
das
or
outsb
xor
mov
mov
dec
inc
loop
lret
sub
mov
shrw
andb
mov
add
and
xor
lds
push
jnp
les
pop
mov
sarb
dec
icebp
sbb
hlt
xchg
hlt
mov
add
mov
jbe
xchg
xchg
js
and
das
pop
xchg
lea
stos
ds
scas
repz
sbb
xor
mov
dec
scas
push
mov
insb
lods
mov
mov
jne
cmp
mov
sub
xchg
xor
rolb
leave
add
inc
rorl
push
sahf
ret
addr16
xor
dec
sbb
and
sub
push
cmp
or
daa
pusha
inc
pop
jno
jbe
pop
and
loopne
sbb
jb
cmpsb
dec
cmp
mov
pop
shll
ret
push
xchg
push
fstl
jbe
stc
cmp
pop
movsl
and
daa
mov
push
loop
mov
rcl
aaa
adc
ss
cli
sarb
insl
and
repnz
or
push
dec
inc
adc
iret
fildll
add
mov
mov
push
pop
pop
enter
test
cmp
jno
mov
push
pop
cmpsb
mov
scas
scas
xlat
unpcklps
lcall
popf
subl
inc
or
repz
push
and
mov
inc
ja
xor
and
push
xor
jo
lahf
cmp
cmp
cmpsb
ja
mov
mov
stos
pop
mov
sahf
sub
mov
or
jae
xchg
push
pop
daa
inc
xorl
jmp
fildll
or
in
or
scas
fsubrs
out
mov
stos
push
int3
push
adc
jmp
jo
jp
dec
imul
popa
add
clc
dec
pop
mov
stc
push
mov
out
dec
int
repnz
or
mov
ljmp
mov
ja
cs
test
pusha
adc
lock
dec
push
adc
stc
dec
and
je
cli
xor
push
and
stos
test
dec
movsl
dec
and
flds
mov
dec
scas
push
cwtl
fwait
push
cmp
jp
push
and
lods
aam
xor
xchg
stos
gs
xor
jns
sub
add
xchg
dec
push
cli
or
imul
sub
mov
fs
outsb
clc
test
mull
adc
sbb
jecxz
mov
fiaddl
scas
dec
dec
mov
add
inc
dec
enter
addr16
push
scas
push
jns
xor
xchg
and
shll
dec
stos
inc
jge
mov
sub
insl
enter
insb
pop
fimuls
imul
and
push
shrb
outsb
pusha
push
fsubrs
fxch
insl
idivl
sub
outsl
out
ljmp
jbe
cmpsb
xchg
mov
mov
xchg
pop
iret
sub
jmp
filds
mov
mov
lock
gs
in
jns
or
imul
adc
push
lret
les
and
xor
roll
test
or
inc
fs
mov
jge
sub
sub
dec
fwait
jae
lods
nop
pop
pushl
mov
inc
jae
push
pop
mov
testl
inc
outsl
cmpb
insl
sbb
mov
int3
std
mov
cmp
pop
addr16
in
jno
leave
lret
xchg
sub
dec
jns
mov
loopne
popw
dec
mov
lea
mov
aam
mov
fisubrs
mov
sahf
xlat
arpl
ja
mov
push
and
mov
lahf
or
or
pop
sbb
mov
xor
out
mov
lcall
ja
inc
dec
inc
jl
daa
std
mov
mov
fmuls
push
xor
mov
dec
cmp
sbb
xor
or
push
mov
int3
insb
sub
push
or
cmpsb
mov
je
fisttpll
in
cmp
lea
sub
jecxz
out
in
or
insb
adc
mov
and
lock
xor
fistpll
add
xor
adc
sbb
mov
fcmovb
aaa
mov
imul
dec
push
loop
adc
jmp
mov
mov
stos
or
sti
sbb
add
pusha
mov
stos
subb
frstor
test
jbe
mov
sub
jnp
xchg
or
scas
enter
cli
loopne
and
mov
popf
cld
fisttpll
xor
mov
mov
int3
jg
push
std
fldt
idivb
aaa
or
push
and
dec
pop
mov
or
jne
adc
add
pop
subb
push
dec
push
add
gs
inc
ljmp
hlt
adc
xchg
adcl
jne
lods
enter
cmp
pop
js
dec
incl
xchg
jbe
js
sti
push
pop
cmpsb
insl
aas
dec
decb
mov
shl
adc
lock
stos
leave
in
ret
pop
cmp
notb
out
movsl
xchg
daa
push
push
or
pop
shll
cld
cltd
dec
je
dec
mov
xchg
test
and
loopne
aas
addr16
push
popa
out
hlt
pop
out
and
mov
js
adc
lock
out
nop
fistl
jb
and
fdivr
add
pop
sub
movsb
faddl
cmpsl
mov
push
cmpsl
movsb
repz
je
loopne
cli
lds
xorl
pop
and
test
sbb
repnz
lldt
test
push
push
jae
mov
jle
aaa
lahf
sub
or
cmc
and
inc
or
stc
adc
jb
cmc
js
cmp
into
pop
xchg
dec
stc
enter
cmp
movsb
mov
fdivrp
cltd
dec
push
jno
push
xor
inc
insl
loopne
cmpsb
xchg
pop
adcl
fcmovbe
arpl
jmp
cmp
jecxz
sti
inc
test
push
stc
ljmp
dec
jecxz
push
xchg
ja
and
loope
xchg
add
pop
addr16
push
mov
stos
mov
xchg
fwait
inc
jmp
cmp
ja
or
int
aas
adc
push
test
add
add
lret
bound
arpl
add
jbe
or
jg
push
mov
push
sub
pop
sbb
jge
pop
repnz
jp
add
pop
mov
push
pop
push
mov
jle
aad
sub
jo
adcb
jbe
jmp
mov
lret
cmpsl
scas
cmp
clc
lods
pop
lea
and
mov
sbb
roll
fwait
scas
outsb
adc
mov
mov
or
outsl
add
shll
add
pop
push
lock
or
int3
movsb
mov
xor
mov
sub
loope
hlt
pushf
ds
jp
xor
jle
mov
jmp
xor
div
mov
xchg
push
popf
mov
sbb
xor
push
mov
rcrb
pop
pop
inc
push
adc
outsb
sar
xlat
inc
sub
dec
pop
popa
jb
cmpsl
jg
push
add
push
xchg
dec
or
mov
xchg
jge
pop
rclb
adc
outsb
sbb
inc
adc
in
ror
push
repz
in
popf
dec
lds
in
dec
nop
and
push
jmp
pushf
stc
in
mov
pop
and
jno
pop
cmp
sahf
lahf
scas
clc
test
into
inc
or
adc
mov
in
popf
jne
mov
sub
sbb
stos
daa
cld
arpl
xchg
jle
xchg
gs
fimuls
push
xlat
or
outsl
pop
mov
imul
aaa
xchg
xchg
neg
idiv
dec
notl
into
cmp
jo
les
dec
pop
lock
adcl
hlt
in
or
in
sbb
sub
jb
js
lock
jle
dec
mov
mov
std
xor
and
lahf
adc
or
fwait
lods
mov
std
inc
mov
lahf
adc
jle
or
xor
sbb
bswap
negb
cs
popf
inc
pop
mov
mov
out
call
mov
pop
into
sub
sub
test
sub
lods
dec
imul
cmp
sub
loopne
cmp
adc
adc
mov
mov
lahf
mov
push
mov
stos
cli
xor
enter
cmp
xchg
mov
test
inc
cltd
dec
push
fcompp
pop
and
scas
mov
mov
outsl
cmc
clc
in
or
mov
scas
fiaddl
mov
cmpb
sub
fisttpll
xor
enter
cmpl
aam
nop
cmpsl
pop
mov
outsl
das
into
lds
push
movl
imul
fildl
push
sub
into
cmp
pop
out
out
cmp
imul
out
push
mov
imul
push
cmp
cmp
sub
dec
push
sarl
mov
ljmp
push
jp
xor
or
pop
mov
stc
or
inc
lods
stos
iret
frstor
push
into
push
adc
add
xor
or
and
xor
lahf
cmp
stc
push
out
or
dec
jns
int
and
jbe
dec
xor
leave
xlat
arpl
ret
sti
data16
jp
pop
sbb
outsl
jge
in
shrl
sbb
jmp
push
out
stc
cmpsb
pop
sbb
mov
add
or
inc
fisttps
bound
mov
fistps
pop
add
imul
mov
mov
add
jmp
in
cmp
sbb
aaa
sub
jnp
inc
mov
rcll
jns
cli
nop
enter
push
scas
aaa
test
aad
ds
ss
cmp
mov
cmp
int
xchg
mov
sub
insb
xchg
in
and
xor
mov
aam
lds
js
pop
call
lret
adc
push
jbe
push
inc
adcb
mov
enter
jmp
addr16
mov
movsl
dec
pop
movsb
sbb
push
mov
cli
fbld
pop
outsl
dec
lock
lcall
sbb
sub
or
mov
pop
out
in
mov
jnp
jbe
sub
fistps
push
add
dec
cmp
sbb
dec
add
jmp
dec
es
sti
shll
xchg
add
ror
arpl
inc
fwait
jb
xchg
sub
xchg
out
into
dec
mov
ja
out
jb
loopne
sbb
cvtps2pd
mulb
sti
test
movsb
xchg
js
cmpsb
cmp
or
jecxz
mov
loope
cld
mov
xor
sub
int
sbb
addl
add
pushf
xor
mov
cld
xchg
pop
arpl
mov
je
imul
or
fcoml
or
ljmp
out
jnp
or
sub
push
fisubrl
mov
jb
stc
clc
lods
push
fldl
rolb
push
lahf
xchg
xchg
pop
mov
lahf
stos
je
add
and
pop
xchg
mov
jl
movsb
xchg
out
sbb
fldenv
loopne
repz
sub
psrad
dec
ds
jge
adc
test
push
pop
jae
aaa
and
inc
inc
push
sbb
pusha
stc
das
cmp
test
mov
cmc
push
jmp
pop
pop
ret
dec
pop
dec
loop
sbb
popf
push
dec
mov
cmp
aad
push
hlt
inc
or
lea
gs
add
or
push
pushf
dec
push
mov
inc
ds
mov
sbb
inc
sub
or
and
gs
mov
addl
andb
jb
xchg
fstpt
jo
inc
mov
dec
lret
out
lods
into
je
imul
dec
pop
aad
out
push
ds
jecxz
jp
cwtl
fmull
dec
push
xchg
stos
fsts
data16
dec
lock
dec
pop
adc
xchg
outsl
insb
shrl
dec
mov
xor
movsb
xchg
xchg
jmp
adc
inc
enter
xlat
sub
dec
repz
xor
jbe
int
or
jge
sti
adc
in
xchg
fs
xchg
ds
inc
or
push
inc
mov
adcb
add
not
sub
pop
mov
jns
push
js
pop
jg
add
sub
adc
fwait
dec
scas
cmpsl
mov
mov
cmp
cwtl
in
shll
add
sbb
fists
lret
lods
sub
mov
scas
mov
xor
sbb
xor
xchg
fwait
and
jne
jl
jo
pop
adc
rorl
repnz
out
cmp
inc
mov
mov
stos
push
stos
imul
in
cli
test
adc
mov
xchg
mov
ss
out
inc
xchg
inc
mov
mov
cltd
push
mov
test
pop
push
mov
lea
insb
ljmp
scas
dec
mov
out
xor
xchg
out
test
unpcklps
imul
mov
xchg
insb
sub
jns
lcall
or
out
sbb
push
or
cmpsb
in
repz
pop
jo
lahf
fdiv
mov
and
shrb
sub
sbb
fs
inc
xchg
push
mov
and
push
iret
adc
movsb
insb
mov
add
insb
add
mov
mov
aaa
cwtl
pop
fnstcw
js
aaa
and
push
imul
sub
repz
adc
add
and
sub
mov
or
popf
dec
pop
ror
addr16
jns
or
lahf
lret
cmp
cmp
xchg
lcall
add
cmp
hlt
mov
and
fidivrs
pop
xchg
scas
jge
dec
inc
jl
inc
jns
inc
and
andps
mov
add
jge
cmp
les
mov
mov
rcrl
dec
and
addr16
mov
and
and
cmp
shl
lds
mov
cld
std
xchg
testb
jns
ret
idiv
xchg
clc
and
in
testb
aaa
and
cld
je
lcall
jo
outsb
sub
lret
popa
daa
fsubs
jae
mov
dec
mov
pop
inc
ljmp
cmp
xor
loope
jnp
sub
or
dec
cmp
call
sbb
or
lock
shlb
push
or
out
rorb
push
js
std
js
push
mov
iret
ficomps
fs
in
cmp
mov
das
sub
and
mov
jmp
mov
test
idivl
sbb
outsb
cmp
push
iret
inc
rcrl
enter
out
dec
js
aam
jno
hlt
xchg
mov
cmc
push
flds
aaa
add
pop
aam
jg
jecxz
sbb
xor
mov
dec
jmp
bound
cs
dec
not
insb
xchg
mov
addr16
arpl
xchg
push
out
aas
rorb
adc
or
inc
dec
mov
or
xchg
xor
imul
cli
test
and
dec
mov
mov
inc
xor
and
cmp
mov
xchg
shlb
jge
mov
int
leave
mov
adc
je
insb
aad
dec
fdivl
pop
mov
dec
inc
push
inc
ja
clc
repnz
or
pop
pop
lods
lock
mov
pushf
test
in
push
inc
es
pop
mov
outsl
pusha
push
loop
ja
jns
mov
add
fsub
shlb
fwait
pop
fsub
stc
pusha
mov
aas
or
fs
cwtl
pop
sarl
test
in
mov
sbb
daa
sub
mov
insb
mov
adc
cmpsl
lss
or
adc
fsubrs
push
xlat
mov
jns
xor
xor
adc
insl
lahf
loope
jp
imul
add
jmp
jmp
pop
in
adc
roll
aaa
daa
adc
aas
cmp
std
pop
mov
sub
fisubs
or
daa
mov
je
push
negl
adc
pop
lahf
xchg
imul
or
mov
das
sbb
mov
xchg
daa
jecxz
dec
lcall
xlat
sahf
in
js
mov
fwait
inc
out
mov
dec
mov
cmpsb
sbb
xchg
pop
jbe
jb
stos
aam
mov
pop
xor
inc
js
stos
cmc
cmovo
test
push
loop
cmp
fisubrl
movsl
in
sub
dec
jl
mov
sub
mov
push
or
scas
loop
or
cmp
xchg
mov
int3
sub
jle
rol
movsb
push
loopne
ja
mov
nop
mov
sub
cmpsb
adc
test
xor
xchg
call
sub
lea
test
mov
movsl
add
mov
inc
push
aaa
dec
mov
jae
xor
dec
dec
and
add
pop
sub
add
pop
sbb
pop
call
stc
sbb
xchg
jnp
push
lahf
jo
lods
mov
sub
jb
fimull
subl
jb
mov
mov
cld
jbe
mov
movsl
aas
test
out
mov
scas
inc
jnp
out
jno
aam
repnz
push
cmp
or
mov
ja
fildl
inc
mov
dec
push
mov
and
push
pop
jmp
xor
hlt
shrl
sarb
out
out
cmp
sbbl
fsubrl
and
popf
or
leave
cmp
mov
leave
adc
mov
lea
mov
xchg
adc
mov
and
add
scas
fldt
push
mov
popf
fsubrs
jbe
mov
xlat
das
add
add
fldl
addr16
cwtl
imul
mov
pop
inc
sbb
lock
icebp
xor
sub
jnp
mov
lret
mov
inc
test
mov
xor
push
sub
adc
cmpsl
addb
push
fsubs
jmp
dec
cwtl
and
rcll
movsl
shrl
out
mov
xor
sti
mov
les
aas
loope
loope
das
pop
or
dec
jg
movsl
fsubl
fildll
xchg
mov
fcomi
stc
mov
push
loopne
test
jne
out
imull
xchg
push
push
pop
fisttpll
jle
fwait
adc
aad
xchg
jge
movsb
ljmp
push
divb
loop
loopne
scas
ficomps
lds
jle
and
or
cmpsl
inc
mov
cwtl
test
filds
out
scas
imul
ret
dec
mov
lock
insb
out
xlat
clc
test
pop
fs
jmp
pop
xchg
push
aaa
pop
insb
xor
push
pop
push
fwait
add
add
pop
jb
sahf
push
scas
inc
and
sbb
shll
mov
mov
inc
and
out
add
filds
imul
mov
push
cli
lahf
cs
mov
lock
lret
rcrb
add
sub
popl
adc
es
out
pop
jge
inc
in
scas
mov
add
dec
and
clc
lret
repnz
dec
xchg
insl
imul
jp
xor
mov
cli
jo
cltd
push
xchg
jmp
push
enter
or
fiaddl
cs
ja
rclb
jecxz
push
daa
sbb
sub
mov
lcall
lea
les
cld
je
mov
push
add
mov
mov
stc
das
push
adc
mov
add
mov
sbb
ss
push
mov
orl
jecxz
fisttpl
sbb
roll
orl
mov
iret
mov
cli
nop
jns
add
lret
sbb
cs
add
adc
sbb
loop
mov
mov
pushf
bound
push
gs
imul
std
out
push
pop
xchg
adc
into
dec
pop
lods
jp
mov
mov
add
mov
into
mov
pop
das
add
in
push
faddp
rclb
daa
add
push
in
fldl
pop
aad
mov
cwtl
xchg
imul
push
sbb
rcl
out
outsl
in
or
xchg
sub
dec
xor
push
xor
int3
cmp
int
out
inc
jl
push
in
mov
enter
fwait
outsb
sbb
ror
test
pop
lock
push
cs
mov
pop
and
xchg
or
movsl
xchg
out
or
and
mov
insl
jle
pushl
push
mov
sbb
push
dec
pop
mov
jg
sub
xorl
pop
or
dec
lods
or
sbb
stc
sbb
jb,pn
or
out
dec
mov
shrl
mov
movsb
les
add
and
cli
gs
out
mov
or
pop
push
push
ret
rolb
std
mov
fisubs
test
cmpsl
xor
mov
cltd
fnsave
es
leave
sarl
fsubs
mov
mov
and
popl
dec
jle
push
xchg
adc
aam
pop
sub
sbb
pop
ss
out
outsl
testb
push
ficoms
daa
sbb
rsqrtps
pop
pop
inc
and
clc
das
and
call
sub
jecxz
shll
cmc
outsl
and
js
loop
cmc
ljmp
incl
adc
lret
cmp
mov
scas
fistpll
or
sub
aam
int3
test
movsl
mov
xor
pop
jge
std
sarb
mov
lods
fildll
sub
and
pop
out
fistps
mov
pop
sub
pusha
shll
add
mov
lea
ror
enter
sbb
mov
repz
loop
push
testl
or
sub
xchg
ffree
push
mov
push
push
or
jno
cmp
idiv
fs
or
dec
xchg
shl
mov
mov
daa
sub
clc
jg
cli
sub
xchg
fbld
movsb
ret
sti
fistps
clc
xchg
mov
xor
lea
cmpl
sbb
add
sbb
repz
add
jle
lods
subl
sub
ror
jo
mov
sti
shrl
jle
in
xchg
push
dec
mov
add
in
push
jg
stc
cltd
adc
lahf
xor
xchg
fdivrs
xchg
push
push
jnp
xor
cltd
enter
push
mov
pop
add
lods
push
shrl
push
popa
xchg
insl
in
pop
js
dec
xchg
lock
test
and
cmpsl
xchg
sti
sbb
push
inc
adc
jecxz
push
dec
fnstcw
mov
insl
xor
xchg
pop
pop
mov
sub
popa
aam
sbb
mov
call
int
das
cltd
mov
adc
fidivrl
hlt
nop
adc
mov
jbe
xchg
je
cmp
in
cmp
xor
jnp
adc
mov
insl
enter
outsl
or
test
jge
xchg
pusha
filds
add
call
and
les
shlb
sub
add
test
rorl
mov
dec
sbb
or
cli
addr16
cmpsb
mov
rclb
inc
mov
inc
push
ljmp
xchg
int3
xchg
dec
bound
shl
and
xorb
inc
int
movsl
dec
pushf
nop
arpl
das
pusha
arpl
dec
xlat
daa
or
jb
imul
inc
bound
and
nop
or
sti
xchg
dec
push
pop
out
dec
pop
insl
repz
cld
ja
mov
pop
mov
mov
xchg
ret
inc
cmp
adc
xchg
sub
fcoml
sbb
and
pop
pusha
add
lret
mov
in
insl
inc
lret
xor
adc
push
inc
dec
sub
jge
adc
jg
jne
int3
popf
push
pop
icebp
cwtl
sbb
js
sbb
lods
jnp
pop
aaa
aas
out
ret
rolb
jge
gs
sbb
push
roll
pop
fld
aaa
fnstcw
sub
xchg
mov
adc
icebp
loope
mov
jbe
bound
mov
out
sub
push
mov
testb
cmc
imul
mov
mov
das
and
push
ss
mov
push
lock
imul
jg
sbb
scas
pop
pop
pushf
lret
stos
xchg
fwait
popf
lret
pusha
in
and
fldz
and
test
push
sub
insb
lea
repz
loop
leave
loope
loope
mov
dec
mov
movsl
ret
jmp
out
xlat
lcall
xor
sub
mov
jo
out
adc
fidivs
enter
sbbb
repz
jbe
popa
dec
mov
cmp
movsb
fstps
ljmp
aam
lea
dec
sub
addr16
and
hlt
leave
pop
shlb
dec
jecxz
xor
cwtl
je
adc
scas
mov
sti
inc
or
iret
sub
sbb
mov
outsb
xor
les
fbld
sub
pop
jg
in
or
dec
mov
and
sub
mov
iret
mov
aas
mov
add
std
add
test
and
ja
xor
lcall
pop
arpl
fists
jge
scas
sbb
pop
and
fdivl
mov
iret
negb
sbb
inc
es
filds
pcmpeqd
nop
push
jecxz
clc
xchg
outsl
pop
mov
test
ret
xor
cli
add
xlat
jbe
mov
add
lods
add
dec
ss
stos
scas
cmc
sub
clc
in
xor
in
mov
add
push
lock
pop
out
and
sub
sti
sbb
and
push
fisubrs
lret
push
jno
out
addr16
jp
scas
xor
aad
mov
cltd
mov
and
jb
fwait
jg
ret
xor
add
jmp
enter
je
pop
jg
vphadduwq
or
mov
add
ftst
repnz
xchg
jbe
mov
dec
lds
cmp
notl
mov
std
mov
mov
xor
and
loopne
imul
sbb
arpl
loopne
mov
push
outsb
push
fnstenv
lahf
lods
cmc
dec
fildll
jno
mov
mov
pushf
adcb
flds
stos
std
out
rcll
dec
jl
cmp
les
scas
fcmovnu
lcall
movsb
dec
dec
cltd
mov
bswap
cmp
pop
into
add
mov
fidivrl
gs
xor
cli
lahf
xchg
fdivrl
cmpb
mov
push
inc
mov
add
pushf
enter
cwtl
roll
sti
or
jmp
fistpll
jo
rol
jle
xor
cmpsl
das
inc
iret
stc
mov
mov
cmpsb
and
jb
inc
cmp
cmp
xorl
mov
pop
cwtl
and
and
sahf
daa
dec
sub
add
cli
mov
mov
rclb
pop
mov
mov
jb
movsb
jg
scas
jb
and
arpl
iret
push
xor
sub
or
mov
push
or
pusha
mov
mov
int
jmp
insl
outsb
or
lcall
imul
adc
and
mov
pop
and
xchg
jbe
xor
and
js
into
mov
sub
or
and
aam
adc
or
sti
add
adc
jp
push
addr16
xor
call
cmc
pusha
daa
stc
mov
xor
pop
jmp
push
pop
sbb
inc
pop
adc
pop
loopne
ret
cmp
repnz
inc
or
out
fsubrs
xlat
add
in
dec
adc
push
pop
adc
xchg
dec
pcmpeqb
mov
jns
lock
jns
int
and
xor
xchg
outsl
int3
push
cwtl
and
les
cmp
js
pusha
decb
dec
inc
mov
jp
std
mov
mov
pop
push
lock
push
mov
sbb
int3
jmp
pop
sub
ja
bound
cli
in
pushf
add
pushf
repz
add
std
mov
cs
in
shlb
in
cmp
xchg
pop
mov
add
add
mov
dec
nop
sti
jbe
sbb
push
pop
and
xchg
dec
ss
sbb
dec
inc
das
or
clc
pop
orl
sbb
dec
fwait
sahf
aas
sbb
loopne
inc
loop
sub
and
orb
inc
dec
pop
ja
std
mulb
mov
adc
jg
cmpsb
cmp
and
rcrl
mov
pop
pop
push
push
movsb
dec
pusha
mov
sbb
sbb
aad
movsl
movsb
xor
test
cmpsl
stos
mov
ljmp
dec
cmc
inc
and
js
xor
stos
adc
jnp
jg
push
stc
push
and
and
sbb
add
mov
divb
push
sbb
push
push
cmpsl
ret
sti
rcl
pop
clc
mov
add
rcll
jnp
and
pop
xchg
pushf
call
aam
mov
xor
outsb
jae
je
mov
sti
les
scas
loop
mov
movsl
insl
pushf
shrb
in
lret
mov
xor
stos
dec
clc
ds
das
jns
add
mov
dec
jmp
xchg
xchg
mov
test
xor
leave
cmp
cmp
xchg
xchg
lods
or
sub
nop
jl
sbb
inc
cs
aaa
adc
outsb
jp
cmpsl
cmpsl
repz
xchg
jl
in
sub
push
out
mov
loopne
pop
addb
or
out
enter
repnz
popa
aas
lock
je
mov
pop
sbb
loope
scas
mov
pop
or
mov
jecxz
mov
mov
dec
sahf
pop
lret
push
and
in
pop
adc
push
cmp
iret
mov
rcl
xchg
inc
repnz
mov
pop
hlt
int
cmp
adc
pop
fldenv
jnp
push
mov
xchg
testl
aaa
push
movb
mov
mov
sub
scas
or
clc
jecxz
sub
sbb
int3
dec
ja
jmp
sub
push
inc
inc
xchg
and
push
or
int3
fidivl
xor
pop
push
imul
cld
ds
or
ret
and
ss
xor
and
ret
dec
or
dec
outsb
ret
lock
test
fs
inc
sbb
mov
test
inc
bound
rcrb
scas
scas
or
xchg
cmp
out
jns
fimull
mov
rolb
mov
adc
dec
stos
loopne
stos
xchg
testl
mov
sbb
fninit
mov
mov
sahf
jno
cwtl
int
cmc
xchg
les
adc
jne
outsl
inc
mov
inc
jl
adc
lret
dec
xchg
loope
rol
push
xchg
dec
xor
push
mov
pop
sti
data16
adc
mov
pop
mov
cmp
movsb
pop
mov
and
mov
xor
inc
xor
in
pop
push
push
lret
sbb
inc
cli
cmpsb
xchg
add
es
add
push
stos
ds
xor
lcall
pushl
pop
add
dec
aas
lcall
mov
lcall
inc
fcomps
pop
adc
sbb
out
cs
pop
ret
ficoml
aad
cwtl
jbe
in
add
lret
popa
or
icebp
int3
sbb
inc
adc
mov
jnp
xor
leave
cli
je
mov
or
inc
jmp
sub
movsl
push
mov
inc
and
call
faddl
cwtl
inc
movsl
add
dec
adc
add
out
inc
addr16
push
jns,pn
mov
lret
add
adc
mov
jmp
cmc
or
add
or
fcmovu
out
mov
xor
data16
ljmp
sbb
cmc
push
pop
shrl
xor
sbb
xchg
inc
arpl
jae
mov
out
enter
mov
dec
aas
xor
and
xchg
addr16
dec
xchg
shll
jg
lcall
fisubl
in
mov
mov
mov
or
jb
call
sti
cmc
mov
jecxz
sub
mov
adc
mov
int3
inc
sbb
push
les
inc
dec
pop
jbe
sbb
movsl
jecxz
and
inc
adc
adc
fstp
xchg
push
jge
lods
xchg
sahf
les
push
mov
loope
sub
xorl
sbb
mov
mov
cmpsl
jno
cld
mov
sub
push
insb
dec
rcrl
jnp
shll
jecxz
xchg
addr16
xchg
mov
imul
mov
dec
jb
fsqrt
inc
shrl
sbb
pushf
daa
loop
and
pop
pushf
imul
jnp
bound
cmc
adcl
pop
and
sbb
xor
push
adc
test
mov
mov
lods
test
stc
repnz
xor
and
data16
rolb
mov
xchg
push
stos
in
lods
add
cld
enter
rol
clc
xorl
test
data16
jmp
mov
mov
in
add
fsubrl
cmpsb
xchg
shll
test
sbb
in
lahf
cwtl
jno
push
imul
jge
xor
sahf
xchg
xchg
sbb
stc
push
daa
or
xor
sub
fdivrl
or
roll
and
loope
pop
cmp
fwait
mov
inc
loopne
mov
xlat
inc
xor
out
cmpsb
inc
call
jmp
fs
insl
push
mov
iret
mov
mov
ret
mov
call
add
push
hlt
lcall
sti
mov
sbb
sub
cwtl
pop
addb
xchg
or
mov
jno
jg
dec
test
mov
idivl
mov
mov
stos
fsts
push
xor
lods
loope
and
inc
ja
into
insl
sub
lea
mov
daa
mov
xor
cmp
dec
sub
addr16
or
pop
nop
lods
xor
sti
xchg
faddl
lock
imulb
pusha
orl
imul
popf
mov
cmp
nop
push
cwtl
stos
data16
aad
mov
and
repz
ljmp
into
fisubl
inc
pop
xor
fadds
fidivl
pop
scas
push
push
add
fadds
cld
xor
sbb
pop
das
or
gs
sub
and
scas
xchg
cmp
mov
shrb
xchg
adc
movsb
loopne
pop
mov
adc
fdivs
sbb
dec
add
adc
sbb
cmp
pop
dec
cmpsl
push
jecxz
inc
dec
jecxz
xchg
cmp
sub
jae
push
push
or
sbb
jno
frstor
xchg
insl
inc
repnz
adcl
aad
insl
sub
pop
pop
push
arpl
pop
jmp
cmpsb
call
adc
lods
into
cmpsb
and
mov
mov
jae,pt
mov
sbb
fwait
jecxz
dec
nop
or
movsb
hlt
std
push
enter
stos
out
out
sub
push
cmpsl
push
jno
mov
stos
insl
lahf
scas
mov
andb
adc
pop
dec
arpl
mov
cmp
pusha
mov
mov
add
js
mov
xchg
pop
and
inc
sbb
dec
insb
mov
sub
jnp
sub
cs
loop
mov
in
sbb
cmovp
inc
cld
fisttpl
xor
out
dec
adc
and
pop
bound
pushl
out
outsb
fisttpl
push
jmp
jmp
mov
xor
mov
mov
enter
sbb
shr
mov
cld
add
adc
call
daa
mov
pop
cmp
add
enter
mov
cmpsl
in
jge
jns
sbb
pop
rolb
inc
std
sahf
cmp
dec
pop
mov
std
pop
das
fs
adc
sub
adc
push
mov
imul
push
and
sahf
jle
orl
das
stc
shrd
inc
mov
fs
jne
jno
inc
ficoms
insl
cltd
inc
repnz
mov
in
gs
xlat
jl
add
in
inc
cwtl
sbb
jge
test
out
pop
in
inc
push
cmc
mov
add
xchg
add
and
gs
mov
xor
filds
ja
xor
inc
fimuls
push
and
dec
jle
and
shlb
loope
inc
sti
mov
andl
cli
pop
adc
adc
push
inc
pop
into
loope
xchg
fs
pop
cmp
enter
data16
mov
mov
pop
adc
out
daa
mov
je
sub
in
xchg
mov
scas
pop
enter
mov
cmp
lea
int
and
dec
adc
cwtl
or
adc
pop
jne
cmp
cmp
not
inc
pop
mov
cwtl
sub
cmp
xor
adc
jp
jg
stos
lods
sub
ss
inc
xchg
mov
mov
std
fldenv
adc
shrl
andb
sub
outsb
pop
lock
call
jg
lock
loop
mov
jno
and
shr
sub
sbb
mov
add
insl
stos
jb
mov
jl
xor
xor
scas
adc
bound
es
lock
lods
lds
test
push
testl
dec
ret
mov
leave
lcall
add
add
jns
cwtl
ja
push
ret
out
and
mov
repnz
mov
xlat
jo
dec
mov
in
pop
mov
and
xchg
mov
and
mov
stos
xor
fs
ret
xor
sbb
xor
lock
addr16
fwait
int3
xor
imul
jns
test
xchg
lods
hlt
pop
mov
dec
mov
outsb
or
adcl
popf
lds
xchg
push
das
or
out
lahf
movsl
mov
push
jle
sbb
mulb
movsl
pop
scas
movsb
jmp
dec
push
push
xchg
movsb
stos
adc
mov
es
sub
mov
pop
or
rclb
gs
mov
mov
mov
mov
inc
jb
mov
adcb
pop
cmc
sub
xorl
dec
sbb
mov
stos
insl
movb
jge
out
int
inc
dec
jge
lahf
pop
mov
xchg
or
mov
in
sbb
push
movsb
and
mov
mov
das
jb
pop
addr16
pop
or
add
or
adc
test
mov
es
pop
mov
mov
mov
out
popf
lock
push
cmp
andl
imul
mov
xchg
popa
and
sahf
push
xchg
xchg
repz
mov
mov
movb
add
ss
and
inc
imul
xchg
pop
push
jge
or
xor
inc
mov
or
ss
xor
out
enter
stos
jo
xor
outsb
decb
inc
jnp
call
fisubrl
pop
dec
inc
frstor
sti
ret
pop
je
icebp
outsl
dec
mov
loop
das
push
mov
push
minps
adc
and
dec
lock
inc
add
xchg
sbb
adc
pop
std
int
mov
inc
sub
notl
sti
mov
xchg
std
lods
push
stc
out
xchg
bound
aas
scas
dec
mov
xchg
push
and
sub
hlt
and
repz
dec
dec
inc
mov
mov
pop
fwait
out
mov
jg
imul
ja
les
out
mov
rorl
cltd
mov
jnp
push
mov
sub
xchg
movsb
xor
js
cmp
stos
ljmp
jp
xchg
adc
add
jne
cmp
xchg
hlt
inc
sub
repz
enter
es
insl
and
out
lods
mov
xor
mov
es
pop
pusha
jecxz
fstpt
cmp
push
lahf
shlb
inc
cmpsb
aam
push
vmovups
repnz
in
jecxz
pop
fists
mov
stc
inc
pop
outsl
mov
lock
mov
mov
cmpl
add
sbb
add
leave
mov
dec
push
xchg
cmp
movsl
into
sub
cmp
std
cmp
shl
xchg
dec
fs
jp
xor
pop
mov
pop
dec
arpl
and
or
jo
fcoml
xor
xor
dec
xchg
mov
loope
js
push
cli
int
pusha
cmc
cmpsb
push
std
cmp
dec
lods
pushf
std
jge
das
or
loope
sbb
std
sub
test
xor
push
cmp
mov
and
xchg
xor
pop
int
mov
aam
lock
jne
inc
fstl
and
nop
dec
and
cs
xor
repz
aam
fnstenv
mov
dec
xchg
iret
femms
xor
mov
xor
mov
or
mov
adc
and
sbb
cmpsl
pushf
push
lcall
test
aas
sbb
or
adc
push
scas
dec
cmpsb
cld
mov
movsl
mov
mov
movsb
push
push
popa
test
mov
sarl
dec
ret
mov
xchg
sbb
pop
test
daa
jl
sahf
mov
mov
fs
add
clc
lea
jno
pop
daa
pop
pop
cmp
dec
sbb
flds
jle
inc
mov
jecxz
fadd
push
lods
push
jp
cwtl
aaa
dec
push
sub
sahf
mov
xchg
cmovns
ss
xlat
push
sarl
ret
mov
xor
inc
adc
mov
imul
mov
push
ds
mov
pop
movsl
or
lahf
jo
add
inc
fcmovnb
push
jno
lods
arpl
add
sub
adc
mov
lea
inc
push
pop
icebp
cmp
sbb
js
push
sbb
and
xor
push
jg
pop
and
xor
add
inc
jle
addr16
xchg
mov
jle
cs
je
dec
jnp
cmpsl
pop
lcall
push
xchg
push
out
cwtl
mov
push
mov
inc
cltd
aam
jbe
inc
mov
fdivrl
loopne
jle
rcl
cmpsb
xor
fnsave
iret
sar
fldenv
mov
ret
mov
jg
je
dec
add
fnstsw
jb
jmp
xchg
and
andl
lock
mov
dec
pop
rorl
pop
or
push
cli
addl
inc
jge
mov
jb
in
stc
or
lds
mov
test
js
std
cmp
adc
fwait
inc
es
shlb
ret
xchg
insb
jo
mov
aaa
test
enter
int3
xchg
pop
inc
xor
imul
dec
dec
stos
jmp
shll
in
inc
les
xchg
ret
inc
xchg
clc
lret
aam
out
out
mov
ds
or
xchg
jmp
pusha
sub
mov
fldt
mov
jmp
stos
xchg
mov
or
or
pop
icebp
pop
inc
ret
les
movsb
push
fcoml
rcr
xor
push
xor
adc
push
add
pop
fistl
mov
idivl
les
les
adc
lret
jle
iret
arpl
mov
inc
lods
and
pop
xchg
iret
shl
add
lret
mov
std
xlat
idivb
fs
mov
push
sub
sti
lcall
sub
enter
xor
in
adc
sbb
stos
jecxz
lahf
pop
mov
inc
mov
push
jns
mov
jmp
aam
imul
or
mov
aam
out
cmp
iret
push
cmpsl
and
xchg
xchg
dec
jg
mov
lahf
sbb
out
sub
pop
jge
mov
scas
adc
mov
sbb
sbb
cmp
mov
or
ret
movsl
or
adcb
in
xchg
or
das
mov
in
stos
fistpll
insl
pop
jno
push
add
test
loop
sbb
sub
jo
mov
movsb
mov
negl
inc
ljmp
sub
sub
cmpl
pop
ja
jp
lock
scas
mov
fs
in
mov
xor
dec
in
repnz
push
push
pop
mov
int
dec
dec
icebp
mov
xor
sub
adc
outsb
cmp
mov
mov
cld
jmp
cmpb
inc
add
mov
pop
pop
jp
adcl
data16
mov
mov
into
cmp
xor
int3
cmp
jecxz
push
pop
insb
clc
push
push
imull
pushf
lods
popf
leave
fstl
in
shrb
xor
hlt
ja
lret
mov
out
outsb
jne
adc
xorb
mov
lods
test
adc
lods
sub
cmpsl
push
pop
and
mov
jb
xchg
mov
sti
dec
dec
test
push
mov
bswap
pop
push
xchg
cs
mov
scas
jge
cmc
push
sbb
cmp
dec
aam
lret
xor
fldenv
bound
inc
sysexit
xor
jns
fcompl
or
sub
inc
loopne
addr16
insb
xchg
jl
lret
push
sub
jns
ret
and
lock
stc
into
mov
int
mov
loopne
lret
sbb
into
cmc
pop
je
dec
sti
pop
inc
cmpb
int3
sub
test
daa
in
adc
inc
cmp
out
push
push
movsb
lret
stc
out
in
insl
cmpsb
inc
int3
fisttpl
rclb
lret
data16
adc
inc
and
cmp
jbe
lods
dec
imul
push
sub
or
inc
ja
ret
push
jl
insb
scas
mov
sahf
daa
xor
push
rorb
sub
mov
mov
jle
test
dec
pop
iret
xchg
and
scas
imul
mov
jmp
divb
add
add
xor
pop
adc
pop
sti
lock
ret
enter
inc
arpl
dec
repnz
mov
sub
imul
in
xchg
sbb
fsubp
or
jnp
jge
lds
xchg
mov
adc
adc
out
push
scas
mov
lock
aad
cmp
inc
fwait
jb
cmp
out
xlat
mov
jbe
xchg
or
ss
out
xor
repnz
push
push
lcall
xchg
stc
outsb
ljmp
push
mov
clc
and
divb
fs
outsb
imul
fcmovbe
or
inc
iret
int3
out
inc
mov
xchg
int
xor
push
repz
cld
pop
shlb
mov
mov
out
imul
mov
cmp
popf
add
xchg
adc
call
mov
and
push
jbe
iret
aam
hlt
push
cmp
in
lret
dec
shll
daa
fimuls
mov
das
sbb
dec
imul
dec
shl
sub
mov
mov
sti
je
pop
jp
mov
inc
rorw
add
pop
adc
mov
int
fdivl
addr16
mov
cli
sbbb
mov
xlat
pop
leave
sbb
xor
sti
or
mov
icebp
xchg
int3
sbb
vmovmskps
xchg
cmp
icebp
test
ret
scas
out
mov
xchg
adc
pop
push
test
les
lahf
xor
xchg
jbe
les
add
jg
jns
adc
sti
out
je
push
popa
jb
xchg
or
lds
ljmp
rorb
ljmp
stos
ljmp
pop
pop
xor
cwtl
imul
ja
xchg
and
loopne
popf
xchg
jno
sar
jns
cmp
lods
or
inc
xchg
or
iret
aas
xor
cmp
xor
xchg
rorb
fidivrs
cmpsl
cltd
adc
or
je
fisubrl
adc
icebp
mov
sbb
into
push
out
cmp
mov
aam
xchg
add
cmp
xor
dec
pop
push
jb
xchg
pop
fcom
xchg
lods
or
shll
mov
cli
das
xchg
cs
ret
mov
xchg
stc
dec
cltd
fdivl
mov
orl
jo
test
push
aaa
jo
movsl
repz
mov
fimuls
into
sarl
push
imul
fucomip
ja
push
fcmovnu
mov
shl
adc
push
push
loope
fisubrs
lds
cmpsl
mov
push
stos
sbb
test
repnz
xor
cmp
xor
stos
pop
pop
sbbl
mov
leave
pusha
mov
or
mov
sti
dec
pop
mov
or
jbe
cmp
aam
dec
cmp
mov
cmp
mov
push
dec
xor
pop
cltd
push
dec
les
mov
mov
stos
adc
pop
mov
sbb
xor
cmp
cmp
jg
setns
cmp
xchg
test
sqrtps
sbb
mov
push
test
xchg
adc
jl
out
fsts
adc
lods
and
shl
fnstcw
sahf
or
shlb
stos
push
mov
pop
dec
test
bound
ljmp
test
loope
shlb
jecxz
mov
cmc
sbb
inc
sbb
mov
pop
mov
hlt
shll
or
mov
jne
adc
or
test
lock
or
test
xchg
lock
int3
in
jmp
mov
mov
jbe
mov
int
pushf
cmp
jl
mov
jb
imul
cltd
xlat
xchg
dec
push
pop
sbb
nop
cs
adc
pop
inc
or
and
mov
mov
jge
sti
add
jne
sbb
mov
cmpsl
es
dec
mov
fs
mov
loope
sbb
push
subw
lcall
ja
xchg
and
mov
dec
sub
test
movsl
shll
popw
pop
dec
out
mov
pushf
sub
jns
out
lahf
sbb
in
fstps
inc
inc
push
stos
sbb
mov
mov
mov
sbb
test
xchg
aam
pop
mov
lea
cmp
jo
mov
pop
aad
mov
int3
cmpsb
lock
jo
push
mov
or
sbb
daa
sbb
cmp
cwtl
imul
aaa
cmc
sbb
fs
mov
mov
ret
sbb
in
mov
js
fs
scas
push
iret
test
mov
outsl
cmp
push
popa
fstpl
pop
int3
adc
adc
clc
push
mov
jbe
push
add
outsb
ss
sub
ffree
cmp
fcomps
outsl
movsl
jg
out
inc
inc
cmp
jb
sub
lret
lock
test
and
inc
fistl
jle
push
push
aaa
adc
fisubl
aam
adc
inc
div
test
inc
push
pop
jg
inc
cmp
cmpl
cs
mov
rcrl
ds
mov
aam
mov
mov
enter
lods
fcmovnbe
push
mov
out
mov
mov
push
add
xchg
loopne
lahf
mov
loope
into
or
movsb
dec
icebp
inc
sbb
xchg
pop
ja
cmpsl
nop
mov
push
cld
and
inc
and
mov
call
and
dec
test
or
jg
fcoml
jno
mov
mov
mov
dec
fnstenv
insb
lret
xorb
rolb
or
sahf
xchg
adc
add
cltd
dec
add
pop
xchg
mov
in
mov
mov
cmpsb
jno
pop
cmpsb
dec
out
cltd
jb
std
xchg
stos
mov
sbb
jl
xchg
xchg
out
data16
mov
xlat
pop
cmc
or
cmpsl
pop
or
adc
js
pop
hlt
inc
jnp
out
mov
jecxz
shlb
or
pushf
fstps
adc
mov
aaa
mov
lret
ret
jbe
add
std
movsb
add
out
dec
or
aad
sahf
mov
inc
cs
push
mov
pop
dec
movsb
in
sub
std
repz
xchg
rorl
leave
enter
mov
in
imul
imul
xor
testl
lea
cmp
into
pop
dec
cmpsl
lods
inc
in
test
mov
loop
enter
mov
push
js
fwait
jecxz
stc
mov
inc
popa
xchg
inc
leave
es
movsl
adc
fdivl
mov
cmp
ds
add
mov
aad
pop
jno
jae
push
xor
sbb
insb
pop
mov
ret
adc
insl
xchg
pop
or
and
in
adcb
ljmp
cmp
jl
int
arpl
pop
pop
mov
repnz
mov
mov
jns
cli
scas
or
jmp
out
mov
sbb
gs
es
rcr
ds
shl
imull
adc
or
mov
and
stos
lahf
push
mov
cwtl
mov
inc
push
cmpsb
sub
jp
inc
adc
xorl
jo
mov
cmpsb
add
fildl
les
sub
and
mov
les
pop
jno
push
push
sub
push
mov
movsb
mov
mov
shlb
iret
loope
dec
cmp
sbb
fwait
addb
mov
cmc
pop
xchg
subb
lret
mov
mov
push
xchg
imulb
into
sbb
fcmovnu
and
xchg
sub
dec
mov
sub
mov
add
jecxz
pop
push
inc
cmpsl
pusha
je
cli
sahf
dec
outsl
adc
mov
or
pop
mov
sbb
adc
es
imul
push
xor
clc
pop
daa
insl
mov
test
dec
fists
neg
sub
das
ja
add
adc
scas
lea
or
aaa
mov
jge
inc
popa
out
push
shll
je
clc
rep
lahf
add
mov
repz
mov
pop
adc
arpl
lret
dec
jae
inc
call
xchg
cmp
pop
cmpsb
push
and
mov
pop
adc
xchg
cmpsb
cltd
imul
lods
sub
mov
les
mov
repnz
xchg
stc
fucomip
jg
mov
inc
sbb
push
xor
je
imul
nop
and
popa
dec
scas
and
psrlq
mov
adc
sahf
jl
sbb
pop
adc
rorb
sti
ds
xchg
shlb
adc
add
subb
sub
xor
jne
jb
cmp
jne
mov
or
mov
rcrl
cs
and
push
lahf
insb
cmpsb
jnp
push
pop
mov
dec
mov
adc
rorb
push
and
mov
popf
mov
ret
lret
fs
mov
shl
test
loope
loope
lea
mov
sub
shrl
outsb
popa
xlat
pop
fisubrs
outsb
out
mov
jg
xor
test
sbbl
shrl
dec
je
in
mov
xor
cmp
andb
mov
cmc
push
cmc
push
push
fisubrl
adc
mov
shlb
repz
inc
rcrb
stc
adc
dec
inc
xchg
adc
in
movsl
popf
and
jp
cmp
jnp
orl
cltd
cmp
orb
xchg
iret
mov
mov
std
mov
xchg
lods
sub
jecxz
mov
in
push
sbb
ret
iret
adc
xor
outsb
test
frstor
aad
cmpl
jbe
mov
and
fcomip
inc
enter
cwtl
jo
rcl
adc
push
sub
push
mov
and
xor
shlb
pop
je
lahf
jnp
aad
pop
je
dec
insl
in
cmp
push
xchg
pop
mov
aad
nop
inc
int3
mov
xchg
ss
movsb
data16
push
popf
lods
add
push
pop
xchg
shl
js
sbb
stos
dec
orb
pop
add
cmp
imul
fldenv
sbbb
lahf
or
shrl
out
push
adc
pop
scas
xor
fistl
sub
icebp
or
adc
jle
fisttpll
lret
dec
inc
jg
cwtl
in
xor
dec
push
mov
es
xchg
ds
arpl
fs
mov
lahf
dec
jae
sbbl
loop
mov
int
mov
insl
test
push
dec
pop
or
mov
lea
cmc
jmp
xchg
ror
mov
out
push
jne
push
pop
add
adc
inc
xor
and
jbe
js
jbe
cmpl
jmp
aas
xchg
sar
xchg
iret
and
shll
clc
adc
jle
orl
fcompl
insb
cmp
testb
dec
cs
je
lea
and
inc
inc
cmp
push
xor
nop
xchg
push
dec
fs
dec
or
mov
leave
xchg
sbb
sbbl
pop
pop
adc
ret
loope
movsb
push
sub
add
adc
or
mov
data16
dec
enter
add
lock
pusha
sub
jbe
loop
xor
pop
pop
aaa
dec
push
dec
sbb
mov
scas
dec
mov
idivb
add
testb
xlat
jb
ficompl
push
pop
mov
mov
mov
inc
imul
fdiv
in
add
inc
fdivrs
lock
jl
aad
imul
aam
push
or
imul
or
arpl
adc
mov
outsb
mov
ljmp
sbb
int3
out
push
repnz
mov
sbb
push
pop
adc
adcl
or
stc
in
lods
mov
inc
aas
data16
xchg
cld
das
inc
arpl
mov
or
sub
stc
adc
add
divl
dec
inc
lea
insl
inc
xor
jbe
outsl
cmp
lods
fwait
shll
xchg
and
jmp
inc
into
and
lock
insl
test
subb
testb
sub
nop
adc
inc
jge
adc
fs
add
lret
cmp
xor
inc
dec
cmpsl
mov
xor
or
jb
sub
xlat
dec
shrl
push
nop
outsl
mov
test
mov
and
rcrb
sbb
mov
lahf
ljmp
into
bound
jo
ffree
icebp
lcall
pop
clc
xor
mov
sbb
ljmp
push
xchg
or
push
ss
enter
dec
cli
and
sbb
xchg
xor
or
add
fsubl
xorl
movb
mov
fcomps
or
xor
or
hlt
mov
ret
xchg
inc
dec
dec
rol
inc
out
or
pop
sbb
repnz
stos
push
push
push
pop
adc
pop
push
lods
roll
icebp
push
mov
cmp
mov
mov
shl
cltd
add
inc
popa
push
sti
testb
scas
adc
inc
jmp
or
fldl
mov
sub
adc
ss
xchg
and
mov
and
loope
cs
imul
push
out
imul
ss
xor
insl
iret
inc
pop
leave
mov
jmp
lret
insl
mov
mov
push
dec
lds
cld
out
or
pop
fisttpll
fs
cs
add
jae
loope
bnd
test
repz
loopne
adc
xchg
add
inc
jmp
push
xchg
jnp
inc
xchg
add
mov
add
dec
lea
lcall
xor
pop
orb
cmpsb
jp
jecxz
dec
jne
mov
adc
mov
xor
setb
pop
popf
lock
sbb
das
xor
bound
fistl
mul
mov
sub
mov
push
adc
mov
imulb
mov
fimuls
push
mov
adc
gs
add
cmp
shrb
xchg
out
mov
stos
add
adc
push
or
ss
movsl
out
lcall
insb
test
adc
and
or
pop
push
mov
fs
add
mov
sbb
mov
dec
outsb
mov
cmpl
inc
es
int3
sbb
je
int
sbb
jmp
adc
jno
pop
mov
cmpsl
sbb
cwtl
stos
lret
push
xchg
leave
or
sub
sbb
dec
push
lock
in
inc
add
testb
add
aas
aam
fcmovu
shl
loopne
push
fidivl
mov
jmp
push
push
jae
and
cli
lahf
xor
pop
pop
decb
push
dec
in
xor
push
xchg
mov
int3
adc
ja
sahf
cltd
dec
sub
jb
cmp
bound
ret
enter
ss
xor
mov
shl
mov
inc
cmp
aam
xchg
xorb
mov
in
and
adc
xchg
cmp
stc
les
cmp
pop
cli
push
mov
xor
loope
pop
sbb
bound
int
push
addl
arpl
adc
push
fcoms
test
push
in
enter
fwait
jbe
sub
xchg
xor
stc
mov
dec
and
lret
or
iret
repz
pop
es
push
pushf
pop
cmp
pushf
mov
ror
sub
sub
dec
xchg
mov
cmpsb
xchg
mov
push
popa
aad
int
sub
js
in
gs
jmp
push
popf
aas
out
dec
mov
insb
sub
xchg
inc
imul
arpl
or
mov
insl
ja
aam
push
mov
fidivrl
sub
ficoml
ret
loop
mov
jp
dec
cmp
sub
insb
icebp
push
jge
dec
iret
ja
aam
mov
adc
movsl
bound
cmpsb
ss
scas
repnz
sbb
sbb
icebp
and
js
pusha
and
std
adcb
dec
pop
ljmp
mov
mov
loop
pusha
enter
aaa
mov
xor
push
sbb
sbb
xor
lret
xor
lea
mov
cmp
cmpsb
dec
adc
jnp
jno
repz
fdivrp
and
or
or
xchg
mov
xchg
xchg
mov
loopne
and
in
add
pop
movsb
push
pop
mov
jns
clc
and
inc
push
je
ljmp
outsl
pop
repnz
adc
lret
and
pop
xchg
adc
imul
mov
sarb
xchg
stc
scas
sub
lahf
hlt
out
xchg
and
sbbl
jl
sbb
add
sahf
mov
idiv
ss
pusha
repz
pop
cmp
lods
cmovbe
cld
aas
rcll
adc
das
mov
xchg
adc
xor
jge
or
jne
movsb
mov
imul
scas
or
sbb
cmp
add
xor
add
aad
mov
add
or
and
repnz
inc
inc
orb
cmp
adc
cltd
add
fildl
es
mov
popa
and
aaa
mov
mov
cmc
outsb
push
adc
inc
nop
and
movsb
sub
jl
add
roll
cmpb
xchg
inc
xlat
lods
shr
pusha
sub
mov
jge
pop
roll
rolb
nop
dec
push
xchg
xlat
adc
dec
arpl
fadds
and
fmull
out
lods
stc
mov
sub
adc
xchg
in
movsb
mov
dec
add
out
ljmp
xor
rorl
mov
lcall
in
xchg
mov
dec
jg
add
cmp
xchg
sbb
sub
xor
mov
fsubrl
pop
bound
and
sub
gs
add
jmp
ds
mov
insb
or
inc
sti
dec
xor
cmp
fmul
jbe
or
pop
in
adc
cmp
add
or
inc
jo
add
std
mov
sbb
pusha
mov
pusha
mov
xchg
jg
xchg
xchg
sbb
jle
int
lds
scas
daa
sub
mov
add
cmp
test
push
push
push
ror
prefetcht1
add
push
pop
dec
or
sbb
cwtl
cmpsl
cmp
fldcw
jmp
jecxz
into
mov
mov
stos
enter
push
loope
sbb
scas
inc
pop
jbe
lcall
out
cvtdq2ps
orb
pop
mov
fs
daa
jge
add
pusha
jb
inc
sub
adc
sbbb
int3
inc
lods
cli
add
sub
inc
sbb
iret
test
fcomps
jp
cmpsl
jmp
faddl
mov
test
xchg
jecxz
dec
test
xor
mov
pop
sub
or
inc
xchg
sbb
pop
xchg
fmuls
or
call
mov
cmc
outsl
fsub
cmp
dec
dec
mov
mov
mov
imul
xchg
shr
xchg
aaa
pusha
and
stos
cmp
push
xor
or
shll
scas
jg
into
sub
jecxz
mov
lret
mov
cmp
fwait
repz
roll
mov
mov
fsts
lcall
popf
push
fisttps
mov
shrb
dec
sbb
xor
icebp
jmp
stos
mov
pop
das
scas
xlat
pop
sub
or
push
dec
pop
repz
sbb
leave
scas
add
jmp
xchg
mov
mov
lret
sbb
outsw
xor
bndstx
sub
xor
js
aad
xor
test
fwait
leave
mov
mov
dec
pop
push
cli
nop
add
adc
cmc
pop
ret
xchg
mov
or
or
aas
fists
push
arpl
dec
mov
ret
imul
scas
scas
cmp
das
push
push
push
add
adc
in
dec
mov
jne
mov
shrb
bound
push
lcall
dec
lods
cmpb
mov
jo
push
mov
ljmp
lods
cld
fidivrs
fs
add
sbb
xor
xchg
call
sahf
lock
cmpsl
pusha
mov
dec
push
nop
ljmp
enter
out
daa
out
cmp
xchg
out
sub
subb
push
push
iret
ret
mov
push
in
in
mov
std
loop
jle
cld
jno
cmc
repz
fists
jne
adc
inc
jp
fldcw
imul
push
cmp
ds
sub
stc
mov
jl
add
and
xchg
mov
add
fucomip
cmpsl
jg
aaa
aad
in
xchg
ds
and
sbb
les
pop
mov
addr16
test
test
fmuls
dec
xchg
testl
or
repz
mov
cmp
jae
or
call
jl
xor
or
jge
les
xor
adcl
xlat
cs
and
test
mov
pop
pop
jns
fmull
and
fs
cmpsb
stos
outsl
fisttpll
lea
pushl
xchg
jg
scas
jecxz
dec
push
dec
or
sbbl
add
outsb
xchg
repz
pop
je
in
ss
ss
inc
hlt
pop
cli
xor
aad
aam
outsl
push
imul
xor
mov
jp
scas
adc
and
dec
push
test
js
call
push
divb
xchg
iret
aaa
xchg
scas
xchg
sub
push
pushf
jae
adc
pop
mov
shlb
imul
dec
xorl
outsl
test
mov
enter
stos
lret
iret
or
sbb
iret
out
testl
leave
sub
dec
pop
lahf
xchg
mov
pop
adc
and
daa
adc
xor
dec
sbb
xor
cmc
xor
fnstcw
push
arpl
add
aad
frstor
std
lcall
icebp
popa
hlt
mov
iret
add
xchg
jle
sub
jnp
adc
fs
stos
rorb
adcb
push
mov
sub
pushf
cmc
or
shll
pop
xchg
mov
out
pop
xchg
dec
js
inc
xchg
sub
dec
xor
dec
cmpsl
mov
leave
int3
mov
insl
mov
mov
pop
pop
lea
mov
mov
add
ds
int3
fnsave
sbb
rclb
int3
imul
jne
xchg
sub
lret
adc
mov
mov
add
xchg
or
test
mov
xchg
push
pusha
sub
mov
inc
inc
jne
pusha
int3
sub
jbe
les
subb
fxch
cli
pop
rorb
sub
ret
xchg
lret
stc
pop
xchg
ficomps
pushf
sub
in
les
test
lret
inc
inc
mov
sub
and
scas
adc
add
jae
fmul
mov
mov
jmp
sahf
lock
test
je
push
enter
add
mov
cwtl
out
les
mov
mov
push
rorb
jge
ret
inc
movsb
fwait
inc
mov
adc
jbe
repz
inc
pop
stos
rorl
mov
pop
divl
jns
shlb
sbb
xor
jle
aad
pop
movsl
ljmp
call
mov
cltd
sar
mov
pop
sbb
les
and
roll
int
xor
jae
nop
frstor
out
cs
or
mov
cmpsl
pop
jo
into
add
push
pop
jp
push
mov
pop
xchg
ds
loop
mov
dec
hlt
cwtl
mov
lea
cmpb
aaa
xchg
out
xchg
add
mov
stos
jb
or
jb
shl
fsubr
xlat
xor
mov
jp
int
inc
xchg
cmp
mov
or
xor
imul
addr16
inc
sti
fdivl
lds
jp
push
xchg
jae
push
test
aam
test
and
and
pop
push
cmp
mov
xchg
je
sbb
cs
mov
mov
shlb
scas
add
cmp
push
mov
push
mov
lahf
xchg
xlat
es
or
ret
xchg
fildl
mov
aam
inc
and
mov
sbb
lret
xchg
movsb
mov
fisubs
pop
mov
mov
mov
push
data16
adc
xchg
movsl
mov
push
rcr
sbb
mov
mov
out
dec
or
jmp
mov
and
lcall
cmpsb
mov
inc
adc
aad
cwtl
ret
std
ljmp
clc
push
mov
inc
dec
out
xchg
add
and
daa
ljmp
roll
int3
addb
sub
adc
add
enter
jg
adc
jo
monitorx
sub
add
imul
mov
xor
cmp
cmc
push
mov
adc
jge
xchg
testl
mov
sub
sub
mov
shlb
hlt
ds
or
roll
add
call
push
cmp
cltd
movsb
xor
xor
imul
in
pop
or
xchg
and
sti
test
ds
mov
mov
add
add
sbb
push
push
jecxz
jle
femms
in
mov
cmc
cmp
jnp
stc
hlt
aad
pop
enter
ss
outsl
movsb
in
scas
cmp
mov
or
es
fists
adc
loopne
minps
push
mov
test
dec
cmpsl
std
lods
fs
icebp
fdivrl
pop
mov
scas
adc
movl
push
jmp
cmc
push
in
popf
xchg
jmp
out
cwtl
scas
xlat
incb
adc
mov
lahf
inc
pop
in
jno
pop
mov
xchg
lea
push
stc
xor
ja
test
mov
push
lock
into
xchg
outsb
stos
nop
imul
or
mov
iret
fxch
mov
pop
cld
aas
mov
jg
xor
pop
pop
pop
xchg
push
fwait
cmp
sti
mov
pop
addr16
icebp
cltd
inc
sub
pusha
dec
adc
fimull
push
fidivrl
insl
aaa
mov
test
sarl
jbe
std
xlat
xlat
rclb
sarb
dec
fsubs
fldt
sub
pop
aaa
movsl
xor
test
jne
das
push
cmp
lcall
cltd
xor
pop
cmp
sarb
sub
mov
pop
push
lods
cld
and
add
addr16
loopne
or
mov
mov
aaa
mov
repnz
in
push
mov
jmp
mov
jae
push
out
jg
mov
test
lret
fldt
enter
arpl
ret
insb
pop
pop
sbb
mov
mov
mov
out
cmpsb
jge
adc
push
fcmovb
mov
aaa
xchg
adc
add
rcrb
enter
push
ja
inc
sarl
xor
shlb
dec
cltd
std
pop
shll
insb
jle
pop
int
mov
ret
ret
adc
push
add
shlb
repnz
shrl
pop
xchg
andb
push
add
xor
inc
in
arpl
jl
outsb
cmpsb
lea
scas
mulb
or
jecxz
inc
push
imul
adc
ficoml
inc
lods
fstpt
pop
dec
jbe
sbb
sti
mov
push
pop
insl
lods
pop
in
cs
mov
mov
mov
call
and
pushf
in
mov
sbb
loope
pop
inc
and
xor
xlat
sub
cltd
push
and
xor
js
js
icebp
mov
or
push
repnz
mov
ja
xchg
pusha
push
jno
push
mov
jmp
add
fdivrs
or
nop
ds
insl
push
insl
ds
mov
cmp
jmp
hlt
flds
dec
dec
je
xchg
pop
sarb
jnp
iret
dec
addr16
mov
push
pop
cmp
fmull
pop
jo
push
mov
lret
xor
jmp
test
push
xchg
jno
mov
ja
iret
push
in
push
xchg
int3
mov
pop
stos
dec
out
sbbb
push
xor
cmp
sub
adc
inc
pop
sbb
jg
shlb
mov
jl,pt
or
cmc
int3
gs
push
enter
xchg
sbb
js
xchg
mov
xchg
add
dec
pop
adc
daa
add
jb
test
fs
cmc
jl
cmp
push
dec
inc
mov
pop
out
mov
iret
arpl
psrlq
addb
bound
das
mov
pushf
pop
shll
push
push
popa
jnp
push
addr16
jg
mov
les
jle
mov
addr16
jle
cmp
stos
adc
std
loopne
inc
rorl
es
in
shrb
push
cmp
lock
js
xchg
xor
sbb
and
mov
sbb
fimuls
or
adcl
cmp
jmp
out
flds
xchg
mov
xchg
insb
xchg
inc
popf
fistpll
jle
fcoms
ss
adc
in
inc
aaa
sbb
xor
xor
push
push
mov
pop
mov
out
lods
xchg
add
arpl
rclb
xchg
cld
add
stos
dec
adc
jo
in
shrl
pop
sub
fnstenv
xchg
xor
pushf
lea
jp
mov
filds
push
xor
jle
adc
loop
icebp
fwait
add
movsb
inc
cld
leave
add
and
out
mov
mov
aas
in
sub
dec
in
dec
js
jecxz
or
add
pop
xor
repz
in
push
xor
adc
shrl
fdivr
mov
ss
mov
icebp
sub
xor
scas
repz
pusha
rorb
ret
xchg
dec
adc
mov
fsubr
adc
xlat
mov
cs
ret
iret
aas
cmp
pop
movsb
xor
ret
outsl
ficoml
lcall
loopne
mov
push
imul
test
dec
push
divb
int
fbstp
mov
push
jge
lret
mov
int3
mov
in
xorl
shlb
out
dec
dec
push
adc
sbb
jmp
sub
or
cmp
jne
add
xchg
sub
enter
sbb
jo
movsl
sub
frstor
mov
cmp
pop
cmc
loopne
dec
rcll
cltd
add
out
insb
sbb
and
int
push
bound
pop
imul
xor
inc
arpl
dec
xor
inc
fisubl
fwait
sub
loopne
mov
push
or
xchg
iret
shl
sbb
xlat
adc
in
mov
mov
mov
xlat
fwait
or
mov
add
imul
out
fcoml
inc
shll
neg
cltd
bound
into
aad
or
test
pop
cli
mov
scas
jnp
stc
mov
adc
test
adc
int
sub
enter
xchg
pop
bound
inc
loope
mull
fs
inc
stc
test
pop
and
add
adc
icebp
je
add
cld
push
mov
std
jg
or
mov
dec
jnp
cmp
fistl
xchg
int3
pop
xor
mov
jns
mov
sub
xorl
movsb
xor
mov
sbb
aas
mov
insl
sahf
fsubs
push
xchg
mov
ret
loopne
mov
fidivrl
rorl
mov
cwtl
inc
out
popf
and
lea
cltd
xor
mov
enter
test
add
or
scas
sbb
call
pop
xchg
sbb
sahf
jnp
xchg
inc
adcb
pop
cs
pop
int
dec
decb
out
xchg
sub
inc
std
sbb
test
mov
sti
fcoms
xchg
add
mov
and
push
cmp
and
jnp
cmp
push
inc
js
hlt
sub
mov
movsl
fcompl
rol
out
xorl
ret
into
mov
repnz
ljmp
out
add
out
ficoml
pop
or
iret
pushw
and
push
jp
inc
xor
test
rol
in
into
movsb
jge
sbb
xor
or
imul
mov
clc
cs
cmc
aaa
mov
enter
xchg
push
nop
ja
adc
sub
push
sub
mov
or
test
inc
pop
movl
pop
ljmpw
mov
xchg
push
leave
movsl
test
fists
loopne
mov
cmc
and
into
push
mov
cmpsl
adc
divb
lock
dec
mov
sub
daa
shll
shr
and
popa
dec
mov
jge
shr
movsl
lahf
push
in
movb
stc
sti
push
inc
cmp
add
int3
cmp
sahf
rorl
mov
xchg
add
mov
hlt
mov
daa
popf
jae
xchg
ja
mov
fldcw
dec
push
gs
mov
movsb
test
dec
add
in
jae
addr16
dec
sbb
sub
push
pop
cli
lea
pop
mov
sbb
jl
lods
mov
xchg
mov
xor
enter
dec
mov
cmc
fcoml
std
fidivrs
mov
roll
jo
popa
push
in
fwait
pusha
sbb
jmp
xchg
mov
aaa
push
or
gs
mov
xchg
adc
and
fldenv
or
and
jge
fmul
ror
sub
mov
ret
jge
push
xchg
and
btcl
jl
sbb
push
repz
movsl
mov
aas
inc
pop
jb
adc
repnz
into
loop
js
fcomip
push
cmp
sub
push
add
inc
sbb
xchg
pop
aad
lahf
cli
inc
aas
jp
out
outsb
test
test
sarb
mov
pop
std
mov
or
mov
out
inc
jp
dec
movl
and
lock
and
in
mov
xor
add
fcompl
push
fistl
pop
dec
std
das
mov
jne
pop
and
in
sti
int
push
inc
out
test
cmovbe
jecxz
or
cmp
push
and
fmulp
xorl
fistps
loop
addr16
jnp
mov
cmp
sub
loope
dec
inc
daa
fdivs
or
or
cmp
gs
mov
adc
mov
add
rol
leave
sbb
lret
push
mov
xchg
fsubr
aam
and
in
testb
fs
hlt
jne
pop
sub
test
adc
int
in
mov
fdivs
movl
pushf
add
popa
mov
mov
pop
sub
lds
stos
xor
int
lock
hlt
add
js
ja
movsl
enter
cmp
mov
icebp
jge
std
ds
pop
jg
aad
in
inc
lcall
repz
stos
and
cmpsb
xchg
incb
xorb
inc
xor
fcomps
shlb
jbe
dec
and
insl
test
lahf
cmpsb
mov
decb
bound
or
or
aaa
rol
aaa
push
mov
xchg
cli
test
nop
clc
cltd
mov
pop
ret
push
cmp
pushf
push
push
mov
into
mov
jl
push
mov
sbb
jle
pop
and
lea
jne
movsl
loope
dec
pop
push
dec
aam
push
mov
cmp
mov
sub
into
movsl
push
jle
inc
scas
jecxz
lods
addl
jmp
sub
xor
jae
in
xchg
inc
jns
cmp
nop
movl
leave
sti
stos
cld
stos
and
popa
es
jo
or
pop
dec
out
mov
jo
call
and
push
add
mov
adc
int3
push
dec
sub
insl
xor
push
sbb
mov
push
repnz
sahf
push
sti
or
pop
inc
sbb
adc
xor
pop
out
aad
mov
stos
je
inc
dec
lahf
mov
adc
repnz
gs
out
call
inc
and
push
out
mov
push
push
and
xor
add
cmp
clc
cmp
xchg
mov
inc
push
rorb
lods
xchg
dec
or
add
dec
ljmp
mov
xor
jge
dec
and
push
and
movsl
fists
or
test
push
jmp
adc
sbb
inc
test
sbb
out
mov
daa
mov
rolb
mov
push
or
imul
andl
je
out
dec
insl
ret
adc
mov
dec
pusha
inc
mov
add
sarb
push
int3
jecxz
xor
push
scas
lahf
pop
rol
mov
mov
jo
arpl
xor
xchg
sub
int
xchg
xchg
gs
add
mov
add
ret
and
sub
repnz
adc
sbb
lahf
out
fbld
inc
nop
inc
aam
jge
adc
push
mov
lods
shrb
mov
clc
adc
mov
je
inc
shl
mov
sub
inc
dec
sbb
xor
sbb
shrb
jge
enter
mov
add
call
loope
push
jns
ljmp
xchg
sub
cmp
test
or
jae
bound
lcall
mov
in
enter
mov
dec
pcmpgtw
into
pushf
cmpl
or
notl
or
popf
mov
push
inc
mov
lods
xchg
cld
adc
mov
mov
fists
repnz
bound
dec
out
in
pop
adc
pop
in
imul
mov
inc
lods
rclb
sbb
sub
mov
sarl
dec
lea
sahf
inc
cmp
add
fcmove
push
xchg
inc
mov
ljmp
and
cmc
out
in
icebp
xchg
inc
sub
scas
push
lgs
aas
pop
xor
and
outsb
mov
or
lea
inc
sbb
jle
xor
dec
mov
push
or
lret
leave
filds
or
jns
jle
cmpsb
pop
xchg
pop
pop
add
jge
add
sahf
nop
lret
fwait
add
test
lahf
movsb
les
lahf
and
imul
sbb
mov
jno
mov
add
push
pop
stos
mov
outsl
mov
or
ret
and
inc
sbb
scas
cld
push
scas
fistps
xor
dec
dec
stos
out
push
mov
je
xchg
mov
test
cmp
scas
sub
cmp
test
xchg
lret
in
mov
out
mov
addr16
aas
clc
sub
jg
jecxz
xorb
dec
jle
sahf
add
adc
cwtl
dec
adc
fcoml
std
cmp
jp
cltd
xchg
xchg
or
imul
xor
mov
push
mul
in
jmp
dec
xor
xchg
aam
in
ret
cmp
inc
in
lret
or
sahf
mov
push
sbb
lret
js
lock
ds
ret
gs
mov
mov
in
cmp
lods
imulb
inc
loopne
testl
add
fs
test
or
xchg
mov
or
sub
in
push
mov
dec
out
shr
loop
je
out
mov
in
fdiv
outsl
arpl
push
fldenv
mov
inc
iret
clc
daa
push
pop
push
gs
lret
pop
mov
or
leave
stos
dec
and
inc
iret
adc
mov
lret
or
call
sbb
push
cmp
pop
add
add
pusha
jmp
xor
xor
xchg
add
sub
cmp
xchg
inc
jae
pushf
cmpsl
push
movsb
mov
and
cld
fldcw
sti
mov
xor
aas
mov
dec
fwait
js
je
jnp
in
push
stos
jnp
mov
mov
mov
add
inc
push
jnp
hlt
aad
and
inc
pop
lods
xor
imul
nop
cwtl
push
lock
push
push
stc
xlat
js
scas
and
jne
xchg
add
std
clc
push
jmp
and
mov
pop
mov
test
mov
lret
or
jp
or
adc
or
je
cs
push
dec
jnp
mov
lret
mov
mov
stos
fadds
test
aaa
fsubrl
enter
mov
jbe
pop
dec
inc
cmp
cmp
dec
push
movsl
sarl
test
mov
xchg
addr16
fsubr
ds
divl
xor
je
addr16
sbb
pusha
inc
jge
test
stos
rorb
jo
add
ljmp
jne
fsts
xor
mov
sbb
push
add
pop
pop
rorb
jo
pop
mov
push
add
xchg
mov
sbb
mov
jecxz
je
das
pop
aas
push
test
lahf
es
mov
insl
mov
jmp
iret
fxch
adc
insb
xlat
or
shrl
jno
add
sub
cmpsb
lret
gs
sub
lcall
das
addl
cmpsl
loopne
aas
mov
cmp
inc
arpl
mov
xchg
push
mov
pop
or
jl
dec
add
push
and
dec
rcr
mov
mov
or
add
cltd
and
movb
sti
mov
setg
mov
jg
fsubrs
sbb
or
mov
fdivrl
dec
pop
adc
jg
popf
les
fldl
sbb
push
cmp
hlt
shrb
call
mov
jbe
cmp
cmpb
ret
cmp
daa
loop
fdivrp
andl
dec
ret
cmp
insl
mov
out
mov
mov
jge
sahf
xorl
jne
scas
inc
mov
scas
jg
fidivrl
sbb
lret
and
bound
data16
fsts
mov
push
xor
xchg
sub
sar
inc
sub
fcompl
dec
pop
iret
ds
dec
in
inc
jno
pop
push
outsb
dec
xor
dec
or
sbb
repnz
add
insb
dec
jae
jl
mov
jno
inc
xchg
jmp
sbb
xor
pop
ret
sub
lods
jnp
adc
es
adcb
add
inc
xchg
or
mov
test
sub
jge
sbb
xor
xchg
call
push
scas
cmp
push
mov
vcvtsi2sd
lods
popa
clc
popa
lea
jb
mov
push
mov
popa
cmp
jnp
mov
fiadds
sbb
testb
ljmp
and
enter
es
mov
pop
movsl
mov
call
add
push
pop
jecxz
imul
push
bnd
mov
cmpsb
inc
dec
loope
mov
punpcklbw
adc
fs
push
imul
push
jmp
sbb
and
sti
mov
imul
mov
adc
jecxz
ret
mov
repz
inc
cmp
inc
pop
cmc
leave
arpl
loop
das
lods
clc
loopne
xchg
sbb
gs
lea
push
cmp
adc
ficoms
out
testb
fs
sbb
and
push
into
movsb
mov
out
push
mov
rorl
out
jbe
push
jmp
pop
into
push
popf
push
sbb
movsl
inc
dec
iret
pushf
movsb
mov
xor
cmp
jb
fs
pop
aad
xchg
push
lods
fld
jge
in
aam
sbb
leave
in
inc
adc
out
nop
mov
out
sbb
push
stc
mov
push
cmpb
cltd
pop
inc
add
sbb
jbe
pop
out
push
mov
mov
mov
jmp
out
and
jbe
push
imul
dec
mov
call
ds
mov
mov
inc
leave
lock
shl
xor
adc
xchg
ja
enter
sub
rorl
sub
sub
loop
xchg
sar
cltd
sbb
call
out
mov
lahf
test
ret
jae
into
jns
insb
push
ja
loopne
sub
dec
js
push
cli
xor
pop
sub
ss
sbb
inc
pop
pop
ljmp
adc
inc
add
std
push
mov
test
xchg
shll
mov
add
xlat
cmp
xchg
icebp
add
std
jno
cs
icebp
pop
jle
cltd
jb
cld
fdivl
adc
pop
jbe
bound
cmp
cmp
push
lcall
dec
stos
and
nop
mov
icebp
idivb
movsl
jg
xor
xchg
test
ret
sub
xchg
push
fimull
and
lcall
mov
testl
leave
std
pop
mov
movsb
shld
loop
loop
inc
mov
xchg
xchg
push
daa
repnz
into
mov
out
push
nop
jecxz
cmc
aad
mov
dec
xor
inc
rcll
js
xor
into
les
stos
add
sarl
adc
test
cmp
sbb
jecxz
jle
xor
imul
scas
push
insb
popf
adc
sbb
cmp
sub
sub
sbb
call
ds
std
jmp
test
addr16
lret
push
fsub
sub
add
cltd
mov
imul
or
pop
cmc
mov
popf
call
push
dec
adc
arpl
xor
out
jg
in
call
xchg
mov
fidivrs
addr16
and
ljmp
bound
shrb
fcoms
mov
test
notb
loope
jle
loopne
mov
sbb
stos
push
jb
pusha
fistl
out
cltd
dec
xchg
push
xchg
test
js
arpl
mov
push
pop
loope
enter
hlt
push
test
xor
sbb
dec
cmp
pop
test
and
out
int
lret
lods
dec
in
popa
add
in
or
sbb
call
sti
pop
push
xor
jo
cmp
es
lock
inc
dec
mov
push
rcrl
stos
adc
jmp
imul
fldl
mov
mov
cs
or
repnz
mov
cmc
inc
stc
mov
movsb
cld
hlt
dec
or
imul
inc
ror
divl
xor
mov
add
divb
cld
das
bound
push
mov
lret
pop
xor
icebp
jg
jno
lret
xchg
push
inc
shr
jp
pushf
dec
js
repnz
icebp
sub
into
stos
int
push
jle
mov
mov
cld
in
adc
cmp
clc
cmp
xchg
in
jne
pop
loop
mov
cmovb
stos
xchg
jle
lret
inc
xchg
imul
push
add
aas
fimuls
jg
mov
shlb
and
repz
mov
jo
pop
fstpl
add
jnp
mov
bound
mov
outsb
add
fs
jns
pop
daa
jae
cltd
inc
cmp
fstpt
mov
test
dec
inc
add
xchg
hlt
cli
movsb
adc
js
lods
pop
push
cmpb
stos
pop
pop
outsl
pop
lock
aas
or
popa
ret
pop
add
push
sbb
fcomip
imul
paddusw
cli
fstl
fsubs
loope
and
xlat
jg
jnp
dec
xor
nop
dec
jne
or
bnd
xchg
out
and
dec
xchg
add
lret
lods
jne
sbb
or
stc
mov
or
mov
cmpsl
lock
mov
mov
out
ficompl
xor
push
xchg
adc
jmp
inc
fwait
mov
dec
iret
int3
fcoms
sub
aad
cmpsb
js
and
pushf
mov
push
sub
ss
sbb
in
mov
and
lcall
xor
fnstcw
loope
leave
fs
inc
sbb
pop
clc
mov
mov
and
aas
fs
xor
bound
std
rcr
jbe
scas
dec
mov
or
pop
sub
scas
mov
cmp
divb
outsl
pop
cmp
imul
stos
and
addl
mov
jo
push
cs
in
std
sbb
cmp
mov
ljmp
mov
jns
or
imul
jp,pt
scas
and
ss
cmp
xor
das
push
dec
sbb
std
add
mov
ret
sbb
popa
out
jno
or
fistl
and
pop
fwait
mov
jp
or
test
lods
shll
pop
inc
arpl
xchg
iret
fptan
aaa
sarl
sbb
and
mov
rep
xchg
hlt
cmpb
repz
psrlq
mov
sub
xchg
idivl
mov
adc
lret
push
outsb
fstpt
xchg
ss
push
mov
or
aad
into
sub
fisubrl
jns
sbb
jno
bound
add
nop
ljmp
mov
pop
cwtl
movsl
out
xchg
inc
jecxz
mov
dec
cltd
xchg
adc
inc
mov
incb
ds
stos
mov
mov
in
orb
shrb
shlb
mov
mov
lcall
pop
jecxz
xor
pop
or
pop
ss
inc
push
jnp
or
push
mov
mov
outsl
aam
push
sub
aad
xchg
clc
or
movsl
pop
pop
add
sub
xchg
out
jbe
sub
scas
or
cmc
xor
or
mov
sub
leave
adc
push
add
inc
je
cmp
inc
jle
push
addr16
and
push
pop
add
outsb
scas
inc
gs
repnz
in
mov
movsb
dec
cmp
jae
mov
lret
out
sub
in
clc
jnp
pavgw
mov
push
jp
mov
lahf
fdivp
je
mov
xchg
pop
je
jo
cmc
out
daa
addr16
jne
outsb
mov
fdivl
outsb
ds
dec
mov
adc
mov
je
mov
dec
and
adc
add
push
js
int
mov
lods
stos
mull
push
jb
mov
es
stc
mov
jmp
push
in
mov
and
cmp
lea
fiadds
jno
fmuls
hlt
outsb
ret
jecxz
sub
jmp
sahf
in
pop
jle
dec
or
push
repz
push
cmp
lahf
mov
pop
sbb
test
fucomi
xor
cmp
sbb
sbb
or
mov
lock
jmp
fsubrs
xor
jbe
imulb
jl
cld
jne
cmpsb
hlt
pop
jmp
lcall
lods
test
ud2
jae
jp
sbb
in
shll
cld
enter
or
add
ljmp
lock
xchg
xchg
pop
ds
inc
add
pop
pop
mov
pop
and
repz
fwait
sub
inc
push
test
popf
pop
add
xor
inc
mov
adc
lods
les
dec
imul
clc
push
lcall
push
call
fstps
imul
xchg
xor
pop
add
sub
xchg
in
out
je
pop
push
sbb
inc
push
xor
add
cmc
sbb
jmp
dec
adc
repz
hlt
sub
adc
movsb
add
jo
shlb
mov
mov
sub
notl
fldcw
mov
xchg
mov
shl
into
xchg
jnp
ja
mov
cli
mov
dec
rorb
out
and
divb
jbe
and
cmc
add
fsubrl
pop
push
push
stc
enter
mov
gs
scas
icebp
repz
ljmp
jo
insb
fimull
into
lcall
int
inc
movsl
mov
xchg
out
pop
inc
rorb
sbb
xor
ret
test
jp
dec
int3
push
sub
aas
mov
pop
mov
mov
mov
notb
popa
icebp
adcl
push
lcall
cltd
and
scas
mov
xchg
dec
cmp
xchg
pusha
mov
mov
xchg
das
cld
jmp
out
pop
mov
xchg
sbb
outsl
popa
lahf
mov
or
jno
xor
push
and
jnp
shll
mov
pop
inc
loopne
pop
add
jae
mov
and
les
dec
jp
pusha
aad
call
lock
aad
push
sbb
cmp
add
mov
push
xlat
cmc
mov
pusha
mov
or
ds
int3
divb
sub
loop
aas
mov
fisubs
and
mov
lcall
or
jg
dec
jae
emms
add
or
and
pop
sub
pop
mov
add
mov
stos
xchg
jae
gs
leave
repnz
call
lea
sbb
loop
jg
mov
cmp
cwtl
mov
lret
das
add
mov
dec
xchg
mov
nop
cmp
and
jle
cld
jecxz
jge
or
int3
mov
xor
adc
or
push
push
sbb
xor
dec
mov
scas
xor
outsl
in
adc
jp
add
in
jne
shl
and
filds
int
jmp
push
mov
cli
mov
adc
cmp
push
pop
cmp
lods
adc
stc
push
sbb
cwtl
es
inc
jno
repz
or
and
cmpsl
lods
sub
add
imul
mov
les
lock
dec
mov
pop
sbb
shl
nop
lahf
adc
and
outsb
pushf
jae
jge
pop
mov
sti
or
arpl
mov
mov
lahf
aas
ljmp
movsb
rclb
bound
inc
push
xchg
cmpsb
fwait
imul
cmpb
inc
and
int3
push
cmp
xlat
rcr
inc
imul
dec
das
daa
sbb
sub
and
es
fcmove
cs
jns
pop
xor
jmp
push
pop
adc
out
ss
push
imul
stos
mov
lock
cli
mov
and
repz
insb
into
es
jmp
cmp
imul
xchg
lret
in
or
mov
lcall
inc
fstpt
sub
shrb
dec
fildl
add
mov
ss
or
jle
insl
and
add
popa
sbb
push
mov
ds
shlb
xlat
mov
enter
add
xchg
js
movsl
sti
and
and
xchg
pop
and
hlt
mov
clc
mov
xor
cmc
push
lret
rorl
jne
hlt
sbb
addr16
rcll
add
shl
xchg
jge
lock
inc
pop
ud0
les
sub
jle
inc
test
inc
cmp
cmp
pop
cmp
stos
jp
in
stos
jge
cmp
or
out
scas
adc
add
dec
add
mov
jge
xchg
adc
push
push
lods
jmp
hlt
cld
orb
imul
mov
push
push
orb
addr16
mov
dec
fwait
push
sahf
push
pop
and
jnp
jge
inc
cmp
sti
adc
xor
sahf
cmp
mov
jno
push
rol
fists
inc
jp
fidivl
mov
test
fs
pop
sahf
push
aam
push
jecxz
aam
imul
in
ja
push
sti
sbb
fsubl
jge
xor
and
nop
adc
call
out
iret
cmp
adc
jne
ds
add
filds
adc
rcrl
fwait
scas
mov
xor
inc
add
mov
nop
mov
mull
push
mov
inc
and
outsl
adc
mov
push
push
fmull
lods
imull
loop
jno
cmp
or
icebp
dec
mov
out
out
jbe
clc
movsb
cmp
mov
sbb
xor
jns
jmp
and
stos
mov
lret
lock
pop
test
lahf
cwtl
jmp
pop
pop
dec
jb
and
movl
add
cmp
sbb
sbb
mov
mov
rcr
mov
hlt
outsl
push
fisttpll
rclb
fmuls
push
scas
mov
push
mov
push
pop
mov
mov
jecxz
leave
mov
mov
outsl
int3
sbb
andb
data16
sbb
stos
std
inc
loop
fucomi
out
dec
mov
fxch
fidivrl
pop
cmp
icebp
mov
xchg
and
frstpm(287
or
xchg
push
mov
popa
test
cli
mov
fistps
sbb
cmpsb
push
dec
dec
in
mov
cmc
in
push
cmp
push
gs
push
sysret
push
jae
ljmp
xor
std
out
lock
sub
leave
push
adc
push
add
add
in
xchg
in
clc
imul
mov
into
and
shl
mov
mov
int
test
jne
inc
jg
popf
popa
pop
pop
cmp
in
ficompl
popf
fwait
cwtl
cmpsl
xchg
sub
cld
mov
mov
addr16
pop
jo
pop
je
ret
add
cs
ret
sub
push
jl
sub
or
shll
flds
mov
out
xor
ja
lds
add
xor
sub
push
fs
mov
dec
mov
push
cs
in
cmp
mov
xchg
stos
push
adc
sbb
femms
into
pop
icebp
call
ret
and
lea
and
aad
fmul
xchg
divps
loop
sarl
stos
fcmovne
lret
aas
dec
stos
rclb
sbb
mov
xchg
es
scas
inc
fnstcw
sbb
sbb
mov
test
adc
add
xorl
push
dec
ffreep
jge
mov
and
pop
or
shll
fstps
cmp
or
adc
sub
out
int3
loop
cmpsb
insb
pop
mov
daa
je
cli
lcall
sarl
movsl
or
dec
push
and
sub
jp
cmp
pop
jmp
aas
push
stos
loopne
cli
dec
iret
add
subb
fisubs
xchg
xchg
loope
das
xchg
pusha
call
mov
cmpl
and
cli
call
jl
xchg
lcall
xor
addr16
das
mov
sub
sub
mov
mov
psllw
cltd
je
sarb
icebp
mov
and
push
push
in
sbb
ds
ds
sub
js
xor
test
jecxz
push
test
and
dec
addr16
ljmp
mov
leave
xchg
sbb
sahf
dec
jp
cs
xor
mov
lds
sub
jae
sbb
xorl
lcall
fldenv
in
mov
and
mov
gs
or
test
mov
in
xchg
insb
inc
inc
fstp
adc
sbb
iret
ljmp
in
sub
jl
pop
fiadds
sbb
add
into
cmp
sbb
rcll
jbe
pusha
xchg
lods
les
ja
sub
or
cmpsb
test
push
scas
mov
sbbb
push
mov
ljmp
out
idivl
jb
xor
xchg
imul
inc
or
in
push
popl
or
mov
pop
cli
xchg
xchg
xchg
int3
int
and
and
xor
in
xchg
and
jnp
dec
ss
mov
cmp
pop
or
add
fs
pop
push
add
movsb
pop
dec
rcll
inc
out
push
xor
add
aad
enter
inc
scas
xchg
sub
xchg
cmpsl
lret
lock
scas
repnz
pop
dec
sbb
testl
push
pop
adc
stos
cli
dec
jb
push
sbb
mov
sbb
mov
sarl
loope
fidivs
jnp
divb
jecxz
and
cltd
loopne
insb
movsb
adc
out
mov
lret
clc
jl
mov
dec
enter
xorl
dec
xchg
arpl
sub
mov
jp
mov
ret
mov
lea
mov
scas
sub
out
std
sbb
dec
push
sbb
aaa
imull
out
inc
test
xlat
movsl
adcl
xchg
push
test
mov
cmc
mov
scas
mov
pop
xchg
popa
mov
out
lds
adc
test
movsb
out
insb
mov
xor
xor
imul
loope
xchg
mov
mov
or
fsubr
ret
add
mov
xor
pop
movsb
adc
dec
loop
jo
jecxz
mov
add
ret
adc
iret
cs
xchg
jne,pt
rorl
xchg
pop
mov
sbb
or
pop
push
popa
push
int3
mov
xchg
xor
rorl
push
cld
sbb
xchg
loop
orl
loopne
mov
mov
pop
mov
in
test
or
loop
es
bound
cltd
cli
pop
or
or
jmp
pop
icebp
out
sbb
pop
jbe
cmp
jle
jns
or
fisttpll
xchg
sub
push
cld
push
arpl
push
xchg
cmp
mov
pop
mov
xchg
mov
test
aam
mov
sbb
xor
mov
mov
jbe
repnz
sbb
jae
xchg
dec
inc
lret
frstor
inc
xor
inc
leave
shl
cmpsl
pop
and
ror
push
cld
fistpl
lret
pop
ja
ljmp
cs
in
shll
sarb
aas
pop
mov
ss
mov
sub
clc
mov
rcll
ljmp
iret
daa
jae
mov
inc
pop
or
gs
pushf
ljmp
imul
jb
push
mov
add
cwtl
test
pop
jmp
imul
out
lds
mov
mov
out
xor
fadds
cld
mov
mov
jle
dec
jns
ss
in
adc
notl
and
mov
fidivl
jecxz
pop
mov
das
std
lea
in
add
orb
rol
in
stos
mov
pusha
fidivl
sbb
mov
out
outsb
add
lcall
jle
stos
jnp
or
xchg
sub
outsl
inc
in
pushf
outsb
dec
xchg
movsb
and
nop
andl
pop
cmp
jmp
fyl2x
push
xor
xchg
data16
and
jae
jg
ret
mov
xchg
fmull
cmp
or
adc
mov
sbb
jnp
imul
xor
xorb
cmc
xor
negl
cmpsb
mov
fbstp
push
in
mov
or
cmp
adcb
sub
shll
xor
dec
mov
inc
es
or
mov
lret
pop
push
xor
mov
andb
ds
enter
sbb
mov
jae
fistps
iret
pop
adc
loop
xchg
mov
data16
cltd
fsts
repnz
inc
jae
sarb
jo
into
and
and
sub
rcr
icebp
dec
pop
std
jnp
shlb
xor
cltd
mov
jmp
in
sub
mov
roll
fstpt
xchg
mov
jnp
push
insb
push
mov
cmp
mov
xchg
mov
xchg
enter
cmpsb
in
test
sbb
loopne
mov
mov
outsb
stos
movsb
sub
mov
loope
cmpl
daa
ss
dec
bound
xor
lcall
adc
sarl
push
xchg
inc
enter
lcall
mov
xchg
mov
das
fisttpll
jge
fistpl
and
push
push
jo
or
sbb
or
push
mov
xchg
xchg
mov
cltd
pop
sub
mov
insl
add
adc
ss
pop
aad
jle
bound
popf
xor
test
inc
in
ret
pop
in
cld
fmuls
pop
fwait
cmp
push
or
jne
mov
xorb
mov
out
jno
or
gs
adc
maskmovq
testl
mov
imul
adc
mov
xor
mov
in
mov
sbb
lret
out
mov
adc
out
in
clc
adc
inc
lods
lods
into
inc
out
xlat
gs
adc
ja,pn
mov
mov
lcall
mov
xor
cld
jne
dec
mov
pop
mov
icebp
add
jne
cmpsl
hlt
xor
loope
addr16
mov
cltd
jmp
out
lds
bound
mov
mov
lods
insb
ljmp
push
roll
push
sbb
cmp
fistps
push
cmp
cmc
sahf
fcmovu
icebp
sub
ljmp
out
mov
or
pushf
inc
inc
push
sbb
sub
pop
push
push
adc
lret
mov
popa
out
dec
test
cli
imul
andb
or
ljmp
sti
or
daa
iret
lds
outsl
fisubrl
jne
js
mov
repz
sub
mov
add
and
rorb
pop
xor
ret
jg
mov
testb
fisubs
mov
in
fs
sub
mov
pop
jns
es
in
pop
lcall
nop
pop
clc
push
sbb
pop
stc
dec
shrb
fs
jno
call
jne
xchg
and
jnp
mov
lods
push
lods
dec
mov
int3
rorl
dec
into
inc
insb
fmuls
sub
loop
mov
adc
add
jmp
jge
push
jecxz
push
pusha
inc
movsb
ss
mov
les
inc
ret
lret
xlat
xor
inc
nop
mov
pop
add
cmp
mov
stos
int3
mov
mov
cmpsb
sbb
pusha
adc
inc
fsts
sbbb
icebp
push
push
jp
jae
and
dec
ficompl
lods
sub
ret
imul
cmpsl
hlt
das
sbb
call
mov
push
in
adc
ficoml
push
and
jns
mov
xor
fwait
in
pop
xor
push
je
fsubl
sahf
mov
mov
shll
shlb
mov
jnp
call
jg
mov
loope
loope
sbb
pop
test
test
mov
jp
fs
ljmp
adc
add
push
cmp
cmp
mov
mov
mov
rclb
int3
cmpsl
inc
std
test
ret
daa
test
in
push
rcll
and
lahf
imul
or
stos
or
push
add
jb
add
pusha
push
xchg
or
movsb
xchg
cmp
out
shl
sub
and
mov
mov
jno
dec
fnstenv
pop
icebp
pop
imulb
dec
std
jecxz
dec
jnp
roll
fs
cmpb
aad
aam
and
inc
je
aaa
mov
ds
push
stos
shrl
inc
mov
int
mov
push
jl
ret
in
push
xchg
je
js
push
je
xchg
repnz
dec
fs
popa
dec
pop
mov
xchg
decb
xlat
dec
sti
sub
imul
sahf
sbb
xor
push
std
inc
mov
ja
sahf
fs
add
adc
mov
and
add
pop
xor
stos
mov
mov
imul
push
sbb
shll
popa
out
adc
mov
daa
jg
daa
push
mov
out
xor
cmpsb
call
jb
jmp
push
cmp
cmp
outsb
popf
dec
add
ja
xchg
cmp
cltd
push
xchg
sbb
adc
bound
pop
push
test
in
loope
pusha
dec
adc
fwait
or
outsl
pusha
jl
movsb
lcall
sbb
lods
bound
jbe
cltd
jge
scas
mov
fmuls
loope
pushf
jno
daa
popa
rolb
xchg
lods
push
cmpsl
and
out
rol
xchg
insb
in
mov
mov
adc
pop
adc
adc
lcall
and
push
sbbl
sbb
adc
aas
cmc
mov
dec
jo
mov
xor
addr16
sahf
sbb
inc
or
int3
fsubr
rolb
mov
mov
sub
mov
and
in
out
sahf
sub
fwait
inc
jmp
sahf
inc
add
cltd
and
mov
cwtl
fcoml
enter
cmc
mov
xlat
idiv
add
lahf
imul
cmp
daa
push
push
pusha
pop
sub
icebp
leave
mov
add
lret
aad
bound
add
push
cmc
push
daa
sub
shll
xor
andl
repnz
mov
inc
pop
jnp
inc
das
cwtl
ja
decb
or
mov
stos
shrl
mov
fists
stc
fimull
notb
notb
inc
ss
loopne
xor
jmp
in
mov
cmp
push
sahf
scas
cmp
into
icebp
iret
iret
pop
jle
adc
xor
imul
adc
loop
mov
hlt
lcall
lds
mov
imul
xchg
push
sub
push
mov
movsb
mov
cmp
adc
sahf
call
xchg
scas
push
rcrl
movsl
sbb
lahf
out
mov
push
stos
inc
fs
mov
jp
sub
inc
lods
fcompl
jnp
insb
sub
insb
idivl
mov
outsl
lcall
in
mov
cli
and
xchg
push
push
jmp
xchg
clc
sub
shl
aaa
fisubs
in
test
insl
inc
insl
outsl
sbb
jno
jnp
jg
outsl
lea
aad
loop
lods
sbb
adc
lods
push
repnz
int
mov
and
pop
xor
xchg
faddl
xchg
xor
cmpsb
sub
add
stos
jnp
inc
sub
mull
enter
dec
movsb
idiv
cmp
in
loopne
pop
push
ret
lahf
mov
scas
sbb
dec
pop
std
xchg
pop
pushf
sub
ret
lcall
test
insl
jp
sbb
cmp
cli
add
iret
or
or
loopne
pop
incl
loope
push
dec
hlt
out
and
and
jno
adc
sub
jae
fs
enter
jecxz
movsl
scas
and
fmull
inc
bound
add
mov
pop
xor
pop
popa
loope
fs
cmpb
pop
mov
movsl
or
sbb
adc
loop
mov
and
pop
sub
shrl
xor
inc
pop
es
adcl
aas
testb
adcl
imul
and
int3
test
inc
call
sbb
sbb
dec
sbb
inc
mov
xchg
daa
popf
xchg
mov
push
in
xlat
mov
mov
mov
pop
push
hlt
addb
mov
cmp
lea
push
xchg
fisubrl
lahf
popf
aam
fcomp
add
mov
aaa
xor
fs
dec
dec
out
dec
cltd
stc
dec
pusha
out
jle
enter
push
jp
mov
nop
cmc
cmp
dec
dec
or
push
lahf
sbb
ljmp
mov
jle
int
xchg
imul
jmp
test
add
pop
int3
lcall
adc
fisubrs
sbb
insb
lcall
mov
dec
lods
seto
loopne
daa
add
jmp
inc
test
nop
mov
xchg
mov
insb
stos
pop
in
push
je
xchg
mov
lds
xchg
std
jae
test
imul
fldl
popa
xchg
movsb
andb
aam
mov
lret
or
stos
iret
enter
sbb
dec
xchg
mov
push
loope
dec
sbb
pop
fmuls
push
mov
sbb
out
xchg
mov
pop
icebp
icebp
xor
stos
sti
push
jecxz
fimull
pop
dec
mov
in
fmul
inc
push
aaa
xor
aas
sbb
lahf
pusha
mov
fistps
sbb
add
cmpsb
scas
mov
enter
notb
or
enter
popf
lds
xchg
jg
std
xor
xchg
xor
dec
mov
loop
xlat
mov
add
pop
adc
mov
js
icebp
push
int3
cmp
stos
cmp
or
jl
fsts
xchg
ret
subb
sbb
gs
xchg
and
cltd
inc
lea
mov
sbb
iret
pop
push
mov
jle
sbb
cmp
add
jnp
lahf
jmp
pushf
and
rolb
mov
ja
mov
mov
hlt
pop
inc
insb
sbb
cmp
add
add
xchg
pop
inc
lahf
mov
mov
daa
cmp
jb
cmp
mov
cltd
inc
mov
and
xchg
and
jb
xchg
mov
mov
jge
divl
adcb
add
cltd
adc
pusha
xor
sbb
xlat
mov
insl
sbb
push
repnz
jle
cld
iret
loop
loope
iret
jmp
movsl
sbb
fsubl
shrb
test
sbb
adc
vpshlq
scas
cmp
or
icebp
fstpl
jb
inc
cmpb
push
ds
inc
into
ss
pop
into
sub
sub
xor
pushf
pop
inc
shr
bound
cmovo
repz
sbb
adc
test
sbb
push
arpl
dec
inc
and
jne
mov
fs
add
jl
push
pop
jge
mov
jecxz
xor
mov
fimull
in
arpl
pop
jecxz
push
dec
add
rorb
add
xchg
mov
cli
popa
mov
fnstcw
xor
das
pushf
or
repz
stos
ficomps
jle
mov
dec
push
lret
xor
lret
jle
js
sub
lods
xchg
mov
divl
sbb
pop
add
subb
cmp
add
push
xchg
inc
cmp
jno
cli
fcmovne
lods
jne
inc
mov
adcb
ljmp
data16
andl
dec
shll
fnstcw
push
pop
out
and
mov
jge
xor
pop
or
ljmp
cmpl
mov
outsb
into
jne
pop
incb
push
nop
roll
int
adc
fwait
pop
scas
out
lahf
fisubl
outsb
fstpl
sahf
mov
xchg
xchg
dec
pop
adc
stos
mov
dec
int
dec
pop
test
test
mov
dec
imul
and
stc
out
lds
dec
into
imul
sbb
insb
jns
aaa
mov
sarl
out
outsb
adc
pop
mov
imul
or
jmp
stc
fcomps
inc
sub
subl
lahf
aad
stos
call
dec
fcoml
pop
xchg
int
mov
aad
adc
sti
out
mov
fidivs
test
stc
jbe
loop
jne
xchg
sbb
xlat
js
inc
test
pop
adc
or
sub
icebp
add
stc
nop
xor
test
je
inc
ret
push
pop
jmp
adc
mulb
aam
cmp
gs
jns
push
jb
cmp
sbb
inc
cltd
sbb
dec
stc
xchg
dec
mov
mov
cs
fsubl
jns
xchg
xlat
daa
lods
dec
xorl
inc
dec
add
pop
xor
inc
cltd
sar
arpl
iretw
mov
mov
jnp
mov
push
out
aas
and
adc
imul
adc
xchg
daa
xor
out
inc
dec
hlt
clc
imul
and
sti
mov
scas
bound
arpl
pop
cmpb
test
pop
cmc
ss
das
push
and
add
jbe
mov
insb
loopne
clc
out
lds
dec
gs
out
scas
jmp
dec
push
lock
pop
dec
mov
imul
lret
mov
hlt
outsl
and
xor
outsb
cld
mov
dec
mov
push
out
dec
mov
daa
rol
adc
rorb
insb
imul
js
or
mov
daa
pop
sahf
pop
mov
or
add
int
arpl
test
incb
fisubl
cmc
mov
imull
inc
xor
repz
clc
jl
add
bound
ret
dec
and
sbbl
lret
sbb
lahf
push
adc
cmpsb
jnp
imul
in
cs
jl
mov
push
leave
inc
adc
mov
xor
xchg
fstpt
movsb
adc
out
scas
sbb
in
mov
jno
jno
cmc
sub
or
sub
ja
leave
inc
mov
push
pop
ljmp
pop
jp
rcrb
fstpt
add
pop
push
ror
fisubs
repnz
sub
cmp
sub
imul
adc
cli
inc
jae
xchg
jl
arpl
movsb
inc
cmc
and
std
mov
xchg
xchg
pop
aaa
popl
adc
pop
xor
fsubs
mov
mov
clc
jmp
int3
mov
insb
jno
push
add
cmp
je
jg
jb
cmp
stos
jmp
cmpsl
enter
xchg
xchg
idivb
icebp
jmp
int3
rcr
pop
push
clc
adc
clc
xchg
loope
cmpsb
inc
int
in
data16
sahf
pop
sub
cmp
add
data16
les
hlt
mov
add
dec
xchg
fbld
adc
pop
call
pop
jp
ret
mull
jb
outsb
daa
clc
cs
test
jmp
xor
frstor
cmpsl
ss
pushf
aam
dec
lds
fdiv
popa
push
aaa
mov
mov
inc
pop
xchg
movsl
mov
push
xchg
in
add
mov
xlat
subb
clc
jg
aad
stos
xor
jge
mov
ljmp
push
ja
rcl
fwait
loopne
push
cmp
fadds
push
fmull
std
decb
mov
add
repz
push
pop
cld
dec
aam
jmp
js
mov
cmp
jae
popf
in
inc
jbe
and
xchg
push
push
jge
outsl
leave
cmpsb
push
xor
iret
out
scas
lods
xchg
jmp
adc
in
adc
add
iret
gs
push
adc
mov
es
fnstenv
xrelease
pop
mov
mov
out
mov
shll
inc
mov
cmpsl
push
daa
fcom
in
mov
xor
push
movsb
arpl
jg
test
in
adc
imul
negl
pop
test
push
addr16
sub
sub
insl
loope
push
es
dec
pop
push
repz
mov
sub
js
pusha
imull
adc
shll
jae
lret
and
sbb
adc
mov
hlt
and
stos
inc
mov
adc
pop
jecxz
insl
les
mulb
mov
insl
dec
int
mov
and
sub
fmull
sarb
scas
jnp
js
pop
js
cmp
test
stos
sub
xor
lds
sbbl
sahf
test
icebp
int3
pop
test
xchg
add
inc
xchg
insb
add
push
loope
notl
mov
ljmp
sub
rcll
and
mov
push
pop
push
fsub
clc
out
cwtl
cmp
inc
and
lock
js
mov
lret
fwait
repz
bound
jmp
ja
inc
loop
cmpsl
add
push
pop
in
insl
xchg
daa
adcb
pop
xchg
gs
xor
testl
mov
sbb
rol
add
add
aam
mov
cld
or
idivl
or
test
ret
loope
xchg
and
push
cs
xchg
mov
repnz
pop
out
or
popa
shl
lods
xchg
lock
mov
lahf
push
arpl
popf
dec
mov
and
insb
cmpsb
push
fcoms
xor
add
mov
pop
adc
dec
fsts
push
sub
orb
lds
pop
inc
insl
pop
xchg
dec
jg
and
or
jl
mov
and
andb
cli
jb
lods
mov
add
pop
pop
es
mov
mov
aaa
loope
xor
imul
jl
sbb
mov
push
fisttpll
movsb
pushf
or
inc
mov
cmpsb
insb
mov
imul
or
jle
dec
cmpsb
mov
sub
push
jmp
sub
je
cli
cli
mov
xchg
in
in
push
cmpsb
pop
mov
mov
lea
jne
sbb
jnp
shll
inc
sub
rcrl
add
push
loopne
pop
lahf
test
inc
cli
sub
out
pop
and
scas
je
popa
and
mov
jp
push
cs
xchg
xchg
push
or
and
rcll
add
cmpsb
test
popf
lcall
jns
mov
jne
sbb
inc
lods
and
aad
xchg
in
xor
scas
xchg
fistpl
add
dec
push
push
mov
xor
inc
leave
inc
mov
add
jl
sbb
popf
cmp
test
in
mov
and
push
out
adcl
adc
sbb
cmpsb
adc
and
ds
or
cmp
dec
add
fwait
inc
push
adc
mov
out
mov
mov
shlb
mov
pop
jns
jno
sub
scas
sbbl
or
inc
sbb
xchg
jle
icebp
pop
cmc
mov
fneni(8087
push
dec
flds
jno
hlt
fbld
adc
and
jmp
add
mov
ljmp
addr16
sahf
mulb
jae
xchg
mov
test
insl
xor
adc
jge
xor
addl
sbb
int
xchg
out
aas
sarb
fcoml
fldenv
loop
jns
jns
out
sbb
call
pop
ja
lea
sbb
les
mov
and
fidivrl
hlt
dec
das
scas
adc
and
jmp
mov
test
es
je
das
leave
and
pop
xchg
dec
test
xchg
xlat
cmp
dec
aaa
sbb
jl
cmpsl
cmc
jge
push
clc
std
jno
push
push
mov
xor
xchg
mov
in
inc
in
out
sub
stos
push
cmpsb
cmpb
push
cmpxchg
test
mov
jmp
jmpw
inc
les
addr16
and
pop
fmull
cmc
sahf
pop
call
mov
add
jecxz
sbb
mov
push
xor
mov
dec
xchg
sarb
fistpl
test
into
mov
mov
out
pusha
mov
sbb
xchg
push
jne
outsl
push
aad
rclb
mov
outsl
add
repz
inc
inc
jo
ljmp
add
fbld
loope
lahf
or
gs
hlt
xchg
stos
mov
daa
sbb
add
cmp
xor
rorb
dec
fistpll
divb
jne
cmp
dec
pop
orl
push
sub
mov
mov
pop
loop
dec
add
jnp
adc
dec
out
in
sbb
xor
nop
cmp
test
stos
fimull
addr16
cmp
lret
xor
and
inc
cmp
pop
xchg
stc
inc
orl
sub
add
jl
xchg
js
pop
xor
push
cli
pop
jae
sub
call
inc
lods
rcl
cli
int
jmp
cli
sahf
test
cmp
test
shll
xchg
or
stos
stos
sub
out
mov
dec
lea
dec
push
inc
fldcw
xor
fs
pop
cwtl
push
lahf
shlb
adc
mov
dec
sub
cmp
mulb
pop
iret
roll
jae
lahf
clc
and
sahf
dec
arpl
cmp
xor
mov
out
ljmp
js
faddl
cmpsl
lods
adcb
popa
je
xchg
and
inc
jmp
add
and
fs
push
lret
cwtl
pop
mov
in
mov
movsb
sbb
leave
xor
push
sti
jae
stos
pusha
inc
pop
xor
xchg
sbb
xor
sub
cmp
arpl
xchg
lret
js
scas
in
pusha
or
push
fimull
nop
inc
add
jbe
lock
mov
cmp
jecxz
lock
cmpsl
jbe
lods
hlt
lds
mov
sub
sbbb
mov
and
fs
imul
xchg
lock
jbe
jno
jp
push
sti
incl
repnz
daa
inc
repz
bound
jne
aam
cmpl
cmc
cmp
mov
sarb
pop
push
icebp
cli
push
fcoml
jmp
in
stc
ss
jne
repnz
lret
xchg
lock
fimull
test
or
cli
aam
jl
adc
hlt
jge
mov
cli
mov
sti
mov
pop
ja
bound
dec
addr16
push
shll
les
mov
dec
and
fists
cmpsl
scas
dec
stc
xlat
enter
xor
fcmovu
and
cltd
fdivrs
ret
jae
push
ljmp
enter
xor
test
stos
shll
inc
pushf
rcrb
movsb
inc
aam
mov
pop
jl
aaa
pop
push
adc
or
mov
xor
scas
jb
loope
in
mov
out
push
insb
add
divps
jae
jnp
push
pop
or
xor
pop
or
mul
std
adc
int3
pop
movsb
mov
mov
mov
xor
mov
movsl
pop
adc
fwait
jle
cli
rcrb
dec
xor
rcrb
and
sbb
or
rclb
mull
sbb
pop
mov
xor
scas
push
xor
aam
loop
jns
negl
sub
aam
rcl
jecxz
jl
test
pop
dec
repnz
push
lret
outsl
test
loope
sub
repz
movl
les
shll
dec
pop
loope
and
adc
inc
jecxz
cmp
lcall
shlb
test
out
les
movsb
sub
mov
mov
and
dec
mov
repnz
inc
cmp
gs
mov
and
pop
inc
xchg
sbb
dec
sub
push
mov
inc
push
daa
fcompl
adc
adc
pop
adc
or
pop
inc
sub
and
lret
idivb
in
mov
dec
dec
pop
mov
nop
mov
nop
hlt
bound
daa
aas
insl
xchg
cmc
hlt
mov
mov
fsubrl
jg
pop
sbb
cmp
daa
inc
lock
add
ja
mov
in
stos
jno
pop
pop
leave
push
sbb
sbb
in
lcall
das
pop
jo
aaa
jecxz
pop
mov
es
fistpl
jmp
ljmp
cli
and
xchg
fiadds
aam
mov
jne
pop
mov
mov
fdivrl
jmp
loop
int
sub
or
add
idiv
cwtl
movq
outsl
lret
in
insl
popa
in
mov
rclb
pcmpgtw
dec
nop
daa
add
scas
call
jne
aas
xchg
fwait
and
cld
adc
aad
ja
push
adc
pop
std
lds
mov
xor
fldl
fisttpl
or
scas
pop
mov
shlb
push
inc
mov
sub
dec
cld
loopne
mov
out
out
adc
std
ds
inc
out
pop
imul
imul
jb
fwait
outsb
and
fwait
mov
popf
int3
shlb
das
sub
movsl
dec
pusha
fwait
hlt
adc
add
dec
push
dec
push
outsl
and
ljmp
mov
cmpsb
mov
dec
movsb
and
roll
lcall
divb
dec
out
mov
movsl
lahf
mov
mov
push
push
int
fisubs
lret
push
inc
xchg
inc
jo
dec
dec
outsl
pop
aad
xchg
loopne
and
shl
push
sub
dec
jmp
in
mov
sub
mov
nop
cld
scas
clc
inc
and
mov
and
sub
incb
sbb
adc
je
aas
mov
cmp
add
dec
cmp
and
jae
xor
adc
pop
sbbb
sub
pop
add
sbb
aad
dec
xchg
ret
fcomp
inc
or
lods
mov
insertq
mov
xor
dec
dec
loope
outsb
jne
ljmp
push
stc
pop
dec
fiadds
stos
push
jle
xchg
lock
or
jle
mov
mov
sbb
lock
dec
push
push
jae
pop
daa
push
cmpsb
jns
or
inc
hlt
mov
jg
arpl
ficoms
in
aam
xchg
mov
mov
adc
mov
jmp
aam
push
scas
jmp
dec
push
stos
jae
jae
js
mov
test
adc
jno
jp
clc
iret
sub
fdivr
mov
bound
dec
adc
mov
pop
xchg
imul
aas
jge
sti
and
or
pop
sbb
inc
cmpsl
inc
subl
fst
in
int
lea
or
lret
jg
sbb
out
xor
mov
mov
pop
jne
mov
jle
test
fs
adc
dec
xchg
sbb
xor
push
popf
cmc
movsl
xchg
rcll
push
aad
fndisi(8087
addr16
repnz
das
jae
adc
pop
je
xchg
sub
xchg
adc
icebp
jbe
idivb
xor
andl
ds
dec
pop
shrb
test
mov
xor
aas
lcall
adc
push
push
mov
insb
and
jbe
lock
mov
jbe
popf
and
jnp
mov
repz
orb
lock
outsl
lock
push
fisttpl
cmp
adc
xor
imul
pop
pop
push
sbb
dec
inc
sbb
rol
shrb
fs
or
popf
cmpsl
sbb
inc
mov
ds
push
fcmovb
xor
mov
mov
mov
icebp
adc
pusha
xor
jns
or
shll
cmp
inc
lret
std
lock
mov
stc
jmp
popa
dec
push
push
lahf
jge
pushf
es
add
dec
jns
pop
mov
aam
sti
xchg
mov
adc
inc
lahf
aas
imul
ss
xor
mov
addr16
ja
lods
or
clc
and
loopne
sub
add
mov
fistpll
xor
or
inc
or
lods
iret
pop
and
fisttpll
lods
jmp
or
cmp
push
xor
lea
cmp
shlb
xchg
mov
in
adc
mov
cmc
pop
mov
dec
mov
jns
or
push
out
aam
jecxz
sub
dec
jecxz
jge
outsb
jno
dec
bound
fucom
ficompl
sub
popa
cmp
pusha
adc
jno
adc
shl
jmp
mov
rcrl
push
pop
mov
mov
mov
sub
aam
cmovne
pusha
and
int3
or
fs
mov
rorb
scas
movsb
fucom
das
dec
jp
ja
xlat
or
rorl
insl
pop
test
inc
and
aaa
push
lds
sbb
arpl
mov
rol
mov
imul
lods
out
aaa
fdivr
lret
push
cmp
add
add
in
movups
in
fists
mov
pop
sub
arpl
sub
lds
dec
popf
clc
sub
icebp
mov
pop
fs
call
data16
popf
in
mov
jnp
dec
ret
imul
aas
dec
push
add
leave
pop
jnp
jne
adc
in
testb
fstpl
lods
rolb
mov
add
pop
sbb
repz
and
ret
inc
jb
pop
enter
and
int
or
insb
je
scas
sbb
mov
jmp
push
icebp
jecxz
outsl
scas
mov
sub
cmp
into
push
add
nop
jo
rclb
or
mov
xchg
scas
lods
hlt
push
push
cltd
xchg
add
jmp
outsl
aaa
jne
test
aam
test
lods
push
cmp
stos
es
add
push
in
lcall
inc
pop
idivl
imul
inc
xlat
mov
cmpb
roll
mov
xor
imul
lcall
jno
std
adc
inc
jecxz
and
sub
jp
and
fistl
mov
dec
scas
inc
cmpsb
pop
jno
lods
mov
and
mov
lods
addr16
jl
pusha
pushf
clc
fsubrs
ror
cmp
je
pshufw
and
out
repz
pop
jnp
or
push
push
int3
jl
and
xor
mov
pop
mov
jne
cmp
jg
pop
adc
movsb
clc
lds
rcl
sti
inc
push
sahf
and
push
div
jns
std
aad
ret
mov
push
push
or
mov
cmpsb
test
imul
cwtl
sub
pop
aad
out
dec
adc
sbb
ljmp
push
cmp
sbb
lcall
fwait
and
lds
loop
mov
jbe
testl
mov
mov
pop
lcall
xchg
mov
iret
sahf
pop
xchg
les
dec
clc
leave
pop
dec
jl
xchg
push
and
xor
push
sbb
das
cs
cmp
subb
pop
insl
mov
push
adc
fcomip
pop
jns
pop
add
iret
xor
and
fistpll
mov
dec
popf
dec
mov
xor
out
mov
jno
sbb
jnp
lret
sahf
in
int
scas
dec
xor
aad
aad
xor
test
xor
xchg
int
sbb
lcall
inc
icebp
clc
pop
sub
mov
mov
or
push
fdivp
pop
push
jo
lret
lcall
pop
mov
fwait
js
cmp
mov
xchg
sub
pushf
aas
xchg
push
fwait
pop
outsb
dec
fldenv
jge
repz
imul
lret
fldt
lcall
ds
mov
movb
insb
xchg
scas
movsl
push
and
pusha
xchg
repnz
xor
fdivl
push
dec
or
mov
sbb
enter
or
cmp
adc
cmovg
or
adc
call
jmp
in
cltd
mov
lock
std
test
ljmp
adc
fldt
in
das
jle
outsl
lret
mov
jmp
sbb
xchg
scas
sbb
mov
loope
sbb
pop
sti
loop
and
fnstcw
pop
das
xor
xchg
pop
and
jo
sbb
fildl
push
mov
cmp
or
jle
fs
lret
sub
fs
jb
out
sub
xor
ret
lea
push
loop
push
fcom
jne,pt
xchg
andl
sub
dec
aas
test
add
ljmp
int3
call
or
jnp
pop
repnz
mov
lods
jne
inc
cltd
lds
sub
mov
pop
cmp
stc
mov
push
sbb
mov
hlt
or
adc
gs
push
test
add
mov
mov
outsb
xchg
pop
xor
or
ja
jno
imul
adc
jne
aam
aam
repnz
stos
leave
das
das
mov
xlat
cmp
out
adc
in
adc
mov
std
add
jnp
movsl
xchg
ror
adc
sbb
mov
jmp
cmp
and
cmp
gs
in
mov
pop
repz
lds
stc
jne
sub
mov
je
cwtl
je
std
or
mov
mov
pop
popa
popa
stc
mov
cmp
mov
mov
jmp
mov
mov
cmp
add
icebp
mov
lret
lea
mov
jmp
xor
xchg
pop
and
dec
mov
addl
data16
inc
jb
loop
fs
push
pushf
cmp
push
xchg
shrl
inc
ss
aaa
aad
lcall
xchg
xchg
cltd
sbb
aam
cmp
dec
std
push
sub
neg
mov
sbb
mov
lea
jl
xlat
inc
mov
rolb
jno
out
sbb
movsb
scas
scas
mov
ljmp
test
test
inc
push
jo
cmpsb
push
xchg
inc
push
inc
popf
jecxz
lahf
inc
mov
rclb
add
mov
scas
rclb
stos
cmp
or
pop
enter
into
out
adc
movsl
lods
test
lret
gs
push
in
xor
out
stos
and
push
cmp
lods
cmp
mov
movsb
pop
out
sbb
and
xor
mov
fists
mov
push
insl
push
or
dec
pop
outsb
cmp
mov
mov
cld
mov
push
roll
js
jae
xchg
mov
js
pop
jmp
icebp
cmp
mov
xchg
or
pop
imul
ds
shrb
dec
daa
aas
cmpsl
mov
out
popa
jg
or
push
xchg
iret
adc
das
icebp
leave
daa
dec
push
test
outsl
push
jno
loope
sub
jae
or
jae
shl
mov
jae
xchg
imul
imul
pop
repz
jb
sarb
push
lea
jno
jns
insb
mov
dec
pop
dec
jno
outsb
xchg
xchg
hlt
outsb
or
imul
dec
enter
in
in
cmc
sbb
bound
cmp
fisubrs
sbb
lds
popf
mov
ja
xor
push
out
or
pop
ret
mov
cld
sarl
aaa
loope
mov
enter
mov
mov
pop
cmpsl
leave
mov
dec
and
xor
lock
or
sti
icebp
jl
inc
imull
cmp
stos
roll
add
sub
mov
repnz
dec
pop
in
push
add
xchg
xchg
bound
int
push
nop
adc
jp
frstor
mov
cmc
jno
push
xchg
mov
pushf
sbb
scas
jmp
in
sbb
leave
mov
xor
into
sub
ss
jp
test
icebp
cmpsb
xlat
sahf
sbb
shll
cmp
pop
aad
ljmp
push
or
adc
inc
cmp
retw
lret
jb
sti
leave
imul
xor
insl
add
into
mov
jg
add
cs
pop
leave
or
lock
xchg
in
xchg
in
sbbb
pop
adc
mov
and
dec
xor
aad
mov
call
testb
mov
add
pop
sub
mov
mov
mov
scas
mov
and
xor
dec
scas
sub
mov
stos
pop
lret
xor
daa
lock
pop
sub
ret
dec
pop
or
fneni(8087
das
jae
cmc
clc
or
clc
mov
jl
loopne
dec
dec
jbe
subl
ret
aaa
xor
jl
sub
shr
lret
sbb
inc
arpl
mov
mov
sbb
pop
lahf
mov
int3
push
pop
mov
dec
das
test
aad
xor
repz
cmpl
je
mov
dec
push
in
lea
enter
leave
add
adc
push
test
pop
out
inc
test
jns
mov
enter
sub
shrb
dec
cmp
out
cmc
adc
add
test
arpl
sarl
mov
xor
mov
cmp
aam
lea
cwtl
stc
sub
call
jne
dec
jg
fisttps
pop
fdivrl
mov
inc
dec
cmp
lods
sti
inc
mov
sbb
adc
pop
enter
add
push
mov
mov
pop
push
cmp
ror
push
rclb
cmpsb
push
iret
or
lock
fwait
mov
lret
test
mov
scas
pop
in
popf
dec
fwait
adc
pushf
xchg
cmp
jo
jno
pop
push
ret
in
ds
and
or
test
pop
dec
enter
dec
pop
and
mov
dec
pop
cli
push
jbe
pop
call
sbb
xchg
lds
jnp
stc
push
fists
and
enter
inc
xor
aad
in
es
imul
xchg
cmp
movsb
loopne
push
adc
popf
rcrb
cmpsl
mov
jge
stos
add
mov
test
call
mov
sbb
cmp
mov
sbb
push
cmp
add
fcmovb
add
out
push
mov
out
or
adc
nop
mov
sbb
or
cmpsb
push
adc
inc
clc
push
lret
or
inc
xchg
adc
sarb
cmpsb
inc
imul
pop
mov
sarb
xchg
pop
pop
testb
adc
pop
mov
ret
in
loop
jnp
test
jae
hlt
stos
cwtl
mov
sub
push
mov
lahf
dec
or
adc
cmpsb
mov
cld
pop
les
add
test
test
in
pusha
mov
clc
or
xchg
daa
cli
out
push
aas
jnp
aas
mov
inc
pop
popa
outsl
jle
sub
and
mov
insb
test
arpl
sahf
inc
popa
xor
aad
sub
sarb
push
jg
cmp
test
push
icebp
lahf
lock
jg
xchg
and
or
cli
add
add
and
cld
dec
loope
adc
cs
xor
test
scas
fisubrs
loope
aas
test
pop
cwtl
fdivrs
adc
fldenv
inc
xor
fadds
data16
jae
lret
sbb
std
fucomi
xlat
pop
push
je
test
das
dec
imul
mov
repnz
out
scas
jmp
dec
inc
and
inc
push
sbb
in
jae
mov
adc
mov
add
mov
and
adc
repz
aam
push
jbe
stc
and
add
mov
push
and
shr
add
dec
or
adc
adc
leave
xor
push
out
mov
cmpsb
pop
xor
js
jne
cli
out
dec
xor
negl
mov
xchg
dec
cmp
fnstenv
in
lea
mov
mov
mov
dec
imul
and
adc
xchg
and
mov
stc
dec
mov
test
pusha
jp
cmc
jg
and
lret
fbld
inc
aad
adc
movsl
repnz
pop
into
rcl
jl
setne
dec
jae
lods
test
push
jl
mov
fcompl
jno
and
loop
push
mov
cmpsl
leave
test
gs
test
mov
mov
inc
mov
pop
js
test
inc
xlat
fdivr
ljmp
stc
inc
sti
lahf
daa
lock
xchg
sub
jge
cli
js
mov
std
jle
imul
inc
sti
xchg
jmp
sbb
hlt
cltd
fcoml
push
jno
xchg
test
in
cli
pushf
repnz
pop
xchg
mov
lds
int
std
fidivs
data16
pop
dec
arpl
xor
out
jecxz
ljmp
in
inc
loope
xor
mov
lea
sbb
lea
inc
popf
stc
jne
imul
adc
psllw
ds
xor
inc
cmp
push
and
fsubs
adc
out
or
fnsave
movsl
adc
xor
jbe
in
fisubs
jbe
push
fisubrl
icebp
mov
jo
cmp
xor
in
fimuls
jb
in
iret
pop
add
popf
cmc
aaa
sub
cltd
adc
ret
sti
add
jae
js
cmp
enter
add
fisubrl
jo
mov
jl
inc
sti
bound
xchg
movsl
inc
icebp
add
hlt
enter
in
mov
push
cmc
sahf
ret
arpl
mov
in
jbe
cltd
pop
mov
jo
mov
xlat
mov
inc
stos
icebp
cmp
mov
add
sub
and
aas
jnp
xchg
cmpsl
cli
pop
std
jno
dec
jmp
mov
cmp
sbb
xchg
add
mov
mov
mov
sub
notb
add
cmpsb
push
jns
xor
ret
lret
pop
mov
jo
xchg
xchg
sbb
add
popa
ret
jne
xchg
mov
mov
add
or
xchg
push
add
shll
xchg
stc
mov
lret
xor
inc
clc
aad
push
xchg
insl
out
test
adc
mov
push
int3
sub
dec
lock
jp
test
xchg
dec
aam
sbb
int
jae
lds
ds
and
pop
lea
lret
inc
pop
pop
sub
lods
iret
test
daa
jne
add
pop
out
jg
pop
stc
loope
xchg
mov
and
into
mov
mov
or
jle
mov
popf
xchg
pop
mov
mov
xchg
and
push
add
mov
aad
repnz
fnstcw
movsb
pop
push
inc
scas
inc
scas
ret
out
gs
xor
dec
daa
aam
lods
sti
dec
cs
nop
cmp
ja
in
jns
leave
and
xchg
mov
xchg
leave
sbb
jb
out
pop
test
dec
mov
mov
cmp
fisubrl
lret
xchg
mov
int
divb
call
xlat
call
stos
mov
pop
mov
fisubrs
fldcw
inc
sbb
push
dec
jns
mov
add
insl
shrb
sub
mov
test
icebp
xchg
cmp
xchg
mov
push
loop
mov
inc
inc
leave
shlb
loop
dec
mov
xchg
rolb
pop
ds
xchg
call
addl
jbe
das
aas
cltd
sub
pop
cli
sti
jmp
adc
jl
mov
fsubrs
mov
sar
fwait
xchg
and
fildl
or
test
je
roll
dec
jbe
inc
cwtl
and
lea
xor
cmp
mov
mov
icebp
cli
int
mov
mov
push
pop
movsb
mov
xor
cld
out
repz
adc
or
mov
and
inc
cld
dec
sti
mov
jne
xor
adc
shlb
test
aas
adc
jp
jns
mov
pop
adc
xlat
popa
mov
sbb
adc
jecxz
insl
jns
std
xchg
in
and
inc
cmpsb
das
lods
pop
fs
adc
xlat
and
fsts
inc
push
clc
xchg
push
push
or
jae
clc
mov
repnz
sub
inc
jb
pop
xchg
aas
inc
push
aam
fists
add
shrl
flds
cmp
sub
pop
mov
add
test
lock
push
les
or
pop
push
push
lock
jecxz
imul
rcll
stos
arpl
mov
xchg
jbe
mov
popf
jp
mov
add
ds
pop
mov
hlt
nop
dec
cltd
xchg
sbb
bound
add
jns
repz
mov
lods
xchg
pop
fwait
lahf
pop
inc
xor
sahf
or
xor
pop
push
and
pushf
xchg
xor
scas
out
mov
jbe
subl
es
push
aad
inc
jno
sub
pop
mov
xchg
sub
and
push
pop
movsl
add
push
ret
add
scas
add
sub
mov
xor
lods
mov
cmp
out
sbb
cmpsb
mov
mov
int3
lods
insl
mov
jne
idivb
mov
cmpsl
mov
cmp
push
ds
mov
xchg
cmp
push
in
in
fwait
aam
enter
adc
bound
in
cs
test
or
inc
add
inc
mov
shrb
outsl
roll
pusha
fcoms
iret
insl
sub
xor
fnstcw
ja
mov
fisubs
jo
pushl
loopne
aad
inc
push
pop
push
out
icebp
or
add
add
xchg
cmpb
lea
shll
jmp
sarb
adc
or
repnz
jae
rclb
imul
pop
and
adc
negb
rcrl
push
pop
push
lahf
lahf
xchg
lods
mov
pop
push
insl
mov
xlat
gs
movsb
mov
popa
in
repnz
enter
jo
sbb
loop
stos
jae
dec
bound
test
cmp
insb
imulb
lcall
nop
sub
sarb
push
sub
sbb
sbb
jbe
cmp
xor
xor
and
cs
lods
fwait
or
call
xchg
icebp
incl
mov
je
inc
xchg
cmp
push
idiv
add
pop
roll
sbb
mov
in
ret
mov
add
pop
js
or
inc
xchg
cmpsb
and
add
add
dec
addr16
mov
repz
out
sbb
and
fstl
fadds
or
cmpsl
int3
pcmpeqd
in
lcall
movsb
xor
bound
fstpt
add
fs
push
dec
mov
divl
adc
mov
mov
fadds
dec
push
je
out
add
sub
xor
sbb
out
mov
rol
das
in
dec
lea
imul
lret
mov
inc
popw
xorb
adc
mov
sub
push
pop
sti
push
cmp
inc
ss
movsb
mov
gs
and
or
in
je
int
inc
lret
sub
in
pop
shlb
add
lcall
fcomps
shrl
sti
xchg
or
shlb
dec
and
mov
dec
jo
adc
fisttps
pop
mov
inc
inc
dec
out
cwtl
je
jne
insl
cltd
hlt
aad
mov
sbbb
mov
xor
xlat
push
adc
enter
add
pop
popf
es
fstl
jno
sbb
mov
push
mov
push
sar
push
and
fst
lods
add
je
pusha
sub
pusha
ja
mov
push
pop
pop
sarb
fstpl
leave
xchg
jge
mov
pusha
xor
mov
cmp
add
add
sbb
leave
push
or
lret
xor
xchg
cmp
pop
cmp
sbb
cmp
cwtl
cmp
cli
popf
fcoml
mov
aas
mov
sub
stc
mov
pop
pop
cs
mov
mov
call
sbb
jp
jle
test
dec
rcrl
int
js
push
or
rol
sub
aas
xlat
cld
mov
push
subps
dec
sub
mov
push
in
stc
cmp
scas
mov
mov
jl
in
push
push
lock
pop
push
mov
add
or
xchg
out
pop
iret
sub
and
or
add
adc
scas
inc
sahf
adc
es
mov
mov
add
stos
lods
mov
or
popa
je
mov
movsb
ret
cwtl
mov
xchg
push
mov
insl
pop
repz
js
pop
movsl
repz
adcb
push
dec
adc
push
out
mov
out
or
push
inc
push
fistl
das
or
mov
repnz
jg
adc
hlt
negb
mov
leave
xor
push
repz
push
inc
dec
pop
popa
pop
push
adc
cmp
xor
dec
cmp
aad
sub
fldenv
mov
pop
jne
in
out
push
or
dec
pop
aam
iret
out
adc
int
lret
enter
pop
je
push
xchg
sub
test
sahf
jge
jbe
scas
push
and
in
push
das
dec
fisttpll
in
into
dec
loop
aam
xchg
js
jo
xor
mov
bound
add
dec
adc
in
push
imul
shrl
and
adc
mov
test
clc
cs
adc
add
pop
push
adc
sbb
jnp
and
fwait
pop
mov
sbb
jmp
push
mov
shlb
push
cmp
out
and
and
jns
sbb
cli
sub
out
cmp
fidivrl
pop
mov
fisttpl
into
mov
push
xchg
and
stos
adc
scas
sti
mov
rsm
sahf
inc
jg
push
in
nop
or
fninit
jmp
pop
jns
cmc
outsl
push
icebp
sub
xchg
jae
or
fcomip
sbb
ss
xchg
mov
in
mov
fistps
leave
fimull
sub
test
insb
loope
xor
out
pop
outsb
dec
mov
or
inc
cwtl
jbe
aas
test
jge
mov
pop
dec
popl
dec
jnp
aas
leave
stos
and
out
insb
sbb
shlb
shrb
mov
jecxz
repz
mov
cltd
imul
and
jg
mov
jle
cmp
pop
lret
xchg
inc
gs
cmp
bound
leave
pop
dec
sbb
add
js
fucomip
cwtl
jge
push
mov
cmp
mov
repnz
ds
loope
inc
cli
mov
push
stos
into
adc
cs
loopne
cmpb
mov
dec
jmp
fildll
and
sbb
cmp
data16
jb
jp
ljmp
rorl
dec
mov
out
jmp
adcl
pop
push
inc
jno
mov
pop
add
lret
pop
data16
pop
mov
jecxz
popf
in
jbe
adc
out
push
xor
lods
sbb
add
mov
popa
mov
cmp
mov
adc
into
sbb
in
mov
push
or
in
es
sub
pop
lret
xchg
cmpsl
cmp
inc
jo
sar
idivl
aam
and
add
js
repz
int3
jmp
xchg
test
ds
jns
lea
mov
repnz
les
data16
icebp
mov
clc
lret
cli
dec
pushf
out
mov
cmc
push
ret
xchg
inc
sbb
add
push
arpl
aas
jg
mov
aaa
mov
lea
or
mov
out
fsubl
in
loope
xchg
push
jb
out
cmc
lcall
pop
scas
fnsetpm(287
sbb
ss
jge
aas
mov
or
arpl
movsb
cmp
sahf
sbb
jbe
je
in
out
and
adc
dec
sub
shll
mov
adc
outsb
jmp
push
pop
not
jnp
xchg
lea
xor
pop
mov
add
pusha
rcrb
mov
lods
cmp
into
sub
jecxz
movsl
leave
ret
enter
mov
mov
loopne
adc
or
insl
mov
xchg
movsl
int
mov
imul
lea
jp
lahf
sbb
out
cmp
roll
mov
cli
and
pop
fs
pop
mov
rorl
sub
arpl
dec
icebp
scas
jnp
out
push
lods
xlat
sar
sub
rorl
lret
cltd
in
rorl
cmp
mov
aas
dec
andb
and
outsl
int
mov
mov
adc
cs
add
dec
mov
and
add
xor
jl
push
fwait
lcall
push
cmc
pop
mov
scas
adc
or
push
scas
mov
and
mov
xchg
outsb
retw
cmp
mov
ljmp
xchg
mov
lods
sub
mov
pop
cwtl
cmc
and
pop
sub
dec
jmp
xchg
rolb
repnz
or
pop
ret
and
iret
arpl
scas
insb
cmp
xchg
push
jae
add
andl
cmp
roll
out
and
sbb
sub
jge
lds
mov
sub
add
in
iret
mov
ror
test
iret
lods
and
rcrl
sub
adc
arpl
stc
mov
inc
adc
cmp
push
mov
inc
imul
jmp
lcall
adc
push
xor
ja
mov
cmp
enter
sub
movsl
sub
dec
inc
mov
or
movsl
push
pop
jnp
jns
jae
cmp
sub
test
xchg
jnp
inc
add
push
pop
lret
imul
in
jns
jae
mov
int3
fildl
push
pop
sbb
inc
cltd
sbb
or
mov
icebp
or
adc
push
push
fisubrl
iret
push
daa
cmpl
jo
jecxz
dec
pop
repz
push
jl
jecxz
mov
xor
jp
adc
stos
jp
pusha
and
xor
aas
nop
mov
loop
pop
cmc
mov
cltd
push
xor
sub
mov
cmpsb
test
and
call
mov
pushf
inc
sysret
adc
clc
aad
add
push
lock
mov
mov
loopne
fmuls
inc
dec
cmp
add
dec
cltd
mov
jne
aaa
jge
add
sbb
fs
je
test
xchg
scas
mov
je
jmp
int
ja,pt
add
leave
or
dec
gs
dec
mov
loop
dec
cmpsb
push
push
mov
dec
xor
push
mov
mov
add
cltd
cmpsl
mov
call
fisubrs
hlt
movb
push
ret
dec
data16
pushf
dec
mov
adc
aas
xchg
xchg
add
repz
out
shll
arpl
jo
mov
sub
add
fsubl
iret
push
stos
mov
mov
mov
or
hlt
mov
les
xchg
stc
push
and
ds
pop
mov
xchg
sti
shl
je
mov
cmp
lods
test
jnp
inc
inc
or
fbstp
gs
inc
loopne
cmp
mov
daa
push
out
inc
testl
frstor
sub
jmp
push
roll
imul
gs
loop
inc
jp
add
jnp
ljmp
mov
movsb
mov
adc
loopne
je
out
mov
ds
and
push
mov
outsl
xchg
add
mull
lcall
in
movsl
icebp
out
int
adc
or
into
repz
lds
push
xchg
call
pop
dec
call
mov
loopne
test
adc
jle
cwtl
mov
adc
add
cmpsl
icebp
pusha
xchg
pop
and
lods
cmp
rcrl
enter
jbe
or
repz
adc
outsb
movb
lock
in
add
call
mov
inc
push
arpl
pop
xchg
popf
adc
fcomip
stc
dec
repz
and
jle
xchg
pop
fstl
push
cmp
inc
sub
inc
add
xor
test
scas
adc
stos
cmp
xlat
xchg
cmp
jnp
sbb
loop
gs
rorb
or
pop
rorl
lret
and
sub
xchg
repnz
arpl
push
push
in
jp
adc
add
insl
xchg
or
sub
and
sti
pusha
xchg
rolb
or
lcall
cmpsb
mov
dec
jg
xor
in
jb
mov
sbb
out
out
sti
mov
dec
test
pop
cmp
and
imul
push
je
sbb
cmpb
in
pop
add
aas
mov
iret
nop
fidivl
enter
fstpl
inc
adc
push
mov
jg
cmp
push
imul
sbb
pop
and
add
or
or
jmp
in
in
lods
push
add
fcoms
fists
daa
test
inc
dec
add
imul
dec
xor
insl
adc
dec
lock
fcmove
mov
loop
pop
inc
les
cmpsl
push
xchg
sub
push
ja
clc
add
out
inc
jge
pusha
and
cltd
cmc
mov
call
loop
pushf
insb
push
mov
cmp
push
and
xchg
xchg
adc
loope
cmp
and
mov
xor
pop
hlt
push
xchg
in
xor
in
lahf
xchg
and
repz
add
dec
lea
push
sbb
pop
push
fiaddl
fsubrs
test
inc
mov
insl
nop
and
push
aad
or
sbb
inc
pusha
pop
pop
addr16
test
push
xchg
pusha
fcompl
insl
jo
cs
dec
add
cmp
xor
dec
cmp
push
pop
adc
lods
dec
push
push
das
in
inc
out
jmp
pop
scas
mov
sub
xchg
popa
push
dec
in
jmp
nop
data16
fsubrl
mov
js
push
jecxz
jg
scas
cmp
dec
and
xor
sbb
leave
jae
sub
xor
lods
jge
cld
popf
jbe
lahf
inc
xor
pop
shll
les
outsl
lret
pop
ret
stos
cmp
sbb
dec
imul
xchg
dec
imul
lock
shll
jle
mov
cmp
push
pushf
mov
jg
sti
sbb
pop
push
push
sbb
adc
cltd
pop
stos
int3
es
std
inc
pop
test
cmp
sbb
popf
sahf
hlt
aam
les
dec
xchg
mov
pop
lea
mov
sub
push
xchg
pop
mov
clc
cwtl
mov
std
mov
int3
mov
rolb
xchg
xor
out
adc
mov
xchg
les
add
inc
mov
mov
ror
fldcw
mov
xor
sub
push
adc
mov
or
jecxz
jmp
and
int
add
adc
sti
add
sub
sarb
push
test
push
pop
cwtl
sbb
or
xchg
clc
jmp
pop
push
xchg
imul
jl
add
pop
xchg
push
lret
hlt
pop
js
sbb
cmp
fadds
in
and
imul
mov
sub
mov
movl
fnsave
idivb
sbb
adc
cmpb
add
cmp
test
movsb
xchg
mov
add
mov
pop
cmp
outsb
mov
lret
mov
lret
out
pop
dec
mov
cmp
pop
xchg
out
frstor
dec
push
lods
cs
ja
dec
ret
js
clc
push
jb
inc
xor
lds
and
pop
mov
in
sarb
subb
leave
cs
inc
out
dec
insb
mov
es
cmp
or
gs
cli
pop
mov
sarb
arpl
hlt
sbb
arpl
popa
xor
fstl
xchg
jg
clc
data16
dec
sub
pop
or
std
lcall
push
add
inc
and
nop
ret
fiaddl
cmpsl
push
xchg
gs
out
loopne
ja
addr16
mov
enter
ficompl
mov
mov
mov
sti
sbb
adc
rclb
addr16
leave
fisubl
xchg
dec
pop
fwait
stos
jmp
je
jns
jnp
mov
call
push
or
jp
enter
xor
js
mov
pop
fld
inc
cmpsl
push
add
rorb
pop
sub
jne
xchg
iret
sti
outsb
repnz
shlb
cmc
pop
cmpsb
cmp
pop
nop
sub
daa
clc
dec
aad
push
mov
adc
xor
je
icebp
add
or
sbb
stc
inc
mov
out
add
scas
lret
fs
sbb
mov
std
test
out
fdiv
mov
adc
dec
sbb
adc
nop
cmp
shrd
push
adc
sarb
push
scas
add
pushf
repnz
xor
jmp
jae
xor
cmp
jg
fsubrl
or
insl
mov
ret
xor
jns
iret
inc
jae
push
add
sub
sub
js
js
inc
cvtdq2ps
pop
movsl
mov
mov
mov
xor
adc
int
aam
inc
data16
and
dec
or
cmc
out
in
stc
push
xor
jo
sbb
mov
shl
fisttps
ret
xor
imul
jo
mov
cmc
loopne
sub
pop
in
loopne
pop
or
loop
sub
sbb
dec
bnd
fstps
dec
lea
idivb
mov
mov
mov
popf
push
push
aad
pop
mov
dec
add
mov
ja
aam
aad
xchg
dec
pop
or
call
cmp
dec
jg
xor
in
jno
outsl
out
aam
jns
loop
imul
dec
int3
inc
sbb
jbe
in
jp
cwtl
push
lahf
jo
inc
aam
mov
push
adc
icebp
mov
xlat
sarl
gs
shrl
lods
aad
movsb
jno
aam
cmp
or
push
cmp
inc
jg
ror
js
adc
pusha
sbb
mov
adc
and
mov
mov
jl
adc
mov
ficompl
inc
cli
shlb
aas
dec
mov
lods
imul
jge
mov
add
mov
fwait
ljmp
xor
cwtl
repnz
jbe
mov
mov
or
and
pextrw
xchg
adc
daa
sub
xor
xchg
jbe
and
fsubp
movsl
sbb
pop
pop
mov
cmp
xchg
das
mov
inc
sahf
test
sbb
inc
jle
adc
nop
or
cmpsb
out
rolb
cmp
ljmp
push
xor
movnti
inc
addr16
jg
dec
stos
hlt
dec
ret
xchg
sbb
pop
packuswb
dec
popa
mov
clc
hlt
cli
rcr
test
js
mov
jmp
cmp
out
add
mov
jnp
cli
mov
js
je
xor
pop
lock
sbb
mov
outsl
movsb
mov
out
out
inc
or
pop
cmp
fwait
cmp
push
pop
jge
fildl
sahf
bound
pop
in
mov
cmp
mov
js
notl
psubusw
mov
ret
and
dec
lret
int
mov
shrb
dec
inc
dec
xor
jge
cmp
xchg
je
adc
add
lock
mov
push
jle
xchg
aad
sbb
pop
add
addb
inc
std
or
lods
add
inc
daa
inc
adc
pop
in
push
inc
repz
pop
cmp
les
inc
push
mov
je
ret
sbb
cmp
ja
fcmove
popf
mov
lcall
jbe
mov
push
mov
fmul
push
adc
mov
imul
popa
repz
imul
inc
jno
ss
mov
sub
xchg
mov
mov
cld
mov
call
pusha
pop
xlat
dec
lods
inc
xchg
gs
adc
cmpb
lcall
stos
outsl
mov
and
xor
or
pop
mov
sbb
icebp
pop
add
add
xor
inc
adc
pop
xchg
push
leave
dec
ljmp
xchg
or
mov
ljmp
fwait
mov
inc
xor
rclb
filds
popa
jo
arpl
jle
sub
inc
je
and
cmpsl
push
pop
and
cmp
testb
adc
cwtl
jge
movsb
in
enter
rcl
mov
mov
sub
mov
jno
test
subb
push
out
sti
cmp
mov
xor
test
test
push
cltd
sub
cwtl
dec
fs
and
loope
movups
negb
inc
sbb
cltd
dec
inc
rcll
mov
inc
bound
xor
xor
lcall
add
bound
add
sbb
jge
divl
sub
ds
inc
icebp
ret
mov
imul
mov
jo
push
movsl
push
jmp
jge
loop
mov
sbb
stos
mov
cmp
xlat
or
mov
lahf
mov
pop
in
fmull
cmp
mov
test
dec
and
popf
cmp
xchg
rcrb
cmp
or
out
adc
adc
pop
mov
arpl
mov
sbbl
in
or
scas
or
into
xchg
sbb
mov
jbe
mov
pusha
mov
ficoml
sbb
jp
lock
add
sub
test
sub
dec
and
mov
ds
sbb
pushf
xor
cltd
or
xchg
gs
xchg
lret
pop
cmp
popf
fistpll
mov
mov
inc
stos
cmp
ret
mov
pop
cmpb
lea
sbbl
pop
sbb
shll
test
fisubrs
push
imul
inc
jb
adc
out
movsb
popa
dec
adc
xor
cmpsl
loop
aaa
jp
outsb
das
adc
shll
inc
push
sub
idivl
push
jo
inc
repnz
repz
mov
push
mov
mov
add
arpl
fstps
mov
add
dec
das
cmpsl
mov
and
vcvtpd2dqy
mov
out
jmp
outsl
fsubrl
mov
sahf
cmp
and
and
sub
jp
call
out
data16
jmp
sbb
mov
ja
pop
in
nop
push
shll
push
lods
repz
xorb
push
jle
lahf
mov
cmp
or
call
jmp
xor
mov
cs
xchg
pop
aad
mov
cmpsb
rorl
lods
mov
fidivrs
jo
mov
jo
das
jbe
inc
push
outsl
sbb
pop
jmp
push
mov
and
sub
ret
dec
xor
aam
sub
mov
xor
in
sbb
popf
jmp
iret
or
mov
call
sbb
cmp
and
mov
je
cmp
jae
std
leave
push
sbb
mov
repnz
dec
iret
inc
push
jae
nop
sti
and
pop
pop
orl
pusha
sbb
pop
outsl
fwait
mov
in
pop
mov
xchg
fidivrl
int
sti
and
pop
loope
das
mov
inc
dec
inc
mov
mov
sysexit
test
ss
mov
addr16
sub
jae
in
dec
xchg
hlt
sbb
xor
push
add
out
or
cmp
call
dec
fwait
and
movzwl
xor
jmp
mov
xor
rcrl
es
or
fnstcw
sub
out
loopne
jl
mov
out
push
incl
jae
les
sbb
xchg
idivb
sbb
and
xchg
enter
pop
mov
xlat
mov
rcrl
nop
and
ljmp
jnp
lret
andl
arpl
jbe
jo
js
jbe
loope
stos
dec
repnz
pop
fsubr
stc
or
in
xor
ja
push
and
push
fisubrs
push
enter
mov
pop
test
add
mov
jns
push
or
mov
mov
stc
daa
ja
mov
lods
cmp
ss
outsl
adc
das
mov
jecxz
jle
xor
in
out
jle
jae
xchg
es
or
ficoml
push
cmp
mov
ret
mov
sbb
cltd
sbb
and
adc
push
xor
adc
out
lds
lods
mov
es
lds
xor
int3
sbb
xchg
sahf
cmpsl
lods
sbb
int
push
dec
in
xor
or
cmp
xor
push
mov
testb
loopne
xchg
rolb
adc
roll
movsl
adc
pop
out
cmp
dec
out
mov
push
dec
nop
in
loope
lds
add
lea
mov
outsl
mov
enter
js
cmp
mov
cmp
mov
sbb
popa
cmpsb
in
dec
stc
and
popf
aaa
xor
mov
loop
sbb
shlb
or
pushaw
sbb
add
adc
gs
sti
pop
jae
xor
loop
jns
pop
cwtl
lahf
cmp
fnstcw
inc
stc
sub
lret
adc
and
rcr
ja
fisubrs
pusha
adc
xchg
fs
es
out
sub
mov
inc
insl
stos
aaa
inc
dec
sbb
adc
addb
in
stos
mov
jmp
jmp
mov
hlt
sar
stos
aam
mov
shl
jmp
push
push
mov
and
lea
xor
shlb
ljmp
cld
clc
pop
jns
gs
jl
mov
mov
out
mulb
lcall
mov
inc
call
bound
enter
and
jae
test
cmpsl
ja
mov
sbb
xor
scas
ljmp
mov
dec
cs
pop
or
mov
aam
jecxz
cmpsb
push
and
add
inc
out
xchg
ds
and
sbb
inc
adc
xor
imul
add
mov
push
add
xchg
out
fldenv
stos
imul
fmulp
push
cmc
xchg
dec
mov
xchg
outsl
pop
jae
jl
stc
add
inc
in
cmpsl
jnp
adc
fildll
sub
push
dec
js
pop
adc
mov
cmc
loope
pop
adc
or
jbe
fstpt
pop
jle
xchg
pop
jnp
cmpsb
mov
jne
insl
ljmp
push
pop
sub
jno
adc
shlb
mov
pushf
adc
or
sbb
std
stos
shlb
out
dec
mov
push
cltd
xchg
call
fwait
mov
or
fstl
adc
sub
sub
or
mov
repnz
stos
enter
sahf
adc
insl
add
divl
mov
shr
push
jbe
jg
sbb
push
loop
add
push
or
push
ss
push
in
frstpm(287
pop
sub
in
fnstsw
mov
cmp
cld
adc
mov
fisubrl
nop
ljmp
cltd
or
jb
xchg
loope
xchg
and
xchg
dec
pop
les
arpl
jg
ss
in
pop
pop
push
daa
mov
fwait
out
push
into
dec
movsb
daa
push
xchg
add
sub
repz
jo
ficomps
es
dec
inc
sbb
stos
push
add
jmp
lret
popa
sahf
xchg
or
lds
push
test
pushf
enter
fwait
mov
jns
inc
dec
leave
addr16
add
sahf
out
and
insl
fdivs
repz
jnp
or
stos
push
jg
push
ret
into
shrl
mov
push
repz
pop
xor
jle
pusha
ret
insb
push
int
jae
mov
hlt
inc
call
dec
pop
sub
lahf
mov
icebp
or
xorl
out
jbe
inc
add
mov
out
xor
cs
inc
pop
push
adc
pop
call
ds
pop
fldcw
repz
lea
push
or
push
xchg
cmp
gs
cvtpi2ps
mov
sub
aaa
mov
mov
mov
or
mov
mov
in
add
daa
mov
cmpsl
cld
xchg
xlat
push
mov
push
mov
adc
rorl
add
add
enter
mov
insl
mov
pushf
inc
call
loopne
push
addl
pop
adc
ds
and
aam
sub
adc
out
dec
clc
push
cmp
push
or
andb
xor
rorb
mov
std
pusha
aam
jle
test
test
ljmp
loopne
mov
loop
push
cmp
push
mov
sbb
mov
sbb
pop
mov
lahf
lods
and
iret
adc
movsb
lret
imul
test
cltd
sub
adc
cmp
jo
or
push
mov
test
mov
pop
mov
adc
dec
fucom
mov
in
adc
aam
cwtl
inc
inc
mov
cmpsb
mov
shrl
jmp
test
adc
jecxz
lods
push
ljmp
fidivs
jmp
int
push
and
cmp
test
std
jno
mov
mov
add
test
xlat
addr16
mov
mov
jns
mull
xlat
mov
loopnew
pop
std
pop
mov
in
into
mov
insb
jnp
or
xor
mov
jp
sub
iret
add
ja
lods
fsubr
hlt
jg
mov
jge
popf
das
mov
mov
and
cwtl
cmp
xor
scas
fs
mov
mov
inc
sbb
xor
lods
push
xchg
push
sti
jecxz
imul
mov
or
adc
orl
ds
dec
rcrb
mull
clc
sub
xchg
xor
jo
sbb
mov
adcb
les
mov
or
stos
es
mov
or
dec
jno
add
push
mov
mov
test
shrl
cwtl
jbe
push
sub
cmp
pop
inc
rorl
push
or
out
fsubrs
lods
mov
mov
daa
or
or
cld
cmc
pusha
test
sub
cmp
xor
pushf
out
fisubl
imul
sbb
mov
or
sbb
sahf
mov
sub
add
mov
dec
ret
ret
xchg
repnz
fidivl
mov
jle
and
in
imul
xor
mov
aaa
les
leave
orl
sub
ljmp
daa
imul
xorl
inc
add
test
mov
std
orl
dec
clc
jp
stos
mov
loopne
es
pushf
aad
data16
lds
and
cmp
shrb
wbinvd
aas
inc
add
in
or
in
mov
mov
ss
push
mov
in
mov
xlat
mov
push
rcr
pop
adc
daa
add
iret
pusha
shl
inc
test
xchg
fdivrl
sub
add
dec
sbb
mov
or
mov
sti
aaa
pop
sahf
mov
adc
cmpsb
sub
push
mov
lods
test
inc
mov
or
xor
fdivl
ds
loop
push
stos
mov
fs
daa
pushf
ds
bnd
sub
push
lahf
xchg
mov
dec
push
jle
cmp
sti
sbb
daa
xchg
xchg
ss
pop
insl
pop
lcall
jl
test
shrb
insl
xchg
mov
cwtl
dec
xchg
mov
icebp
pop
aam
mov
aam
aad
jne
sbb
pop
ret
jno
repz
mov
arpl
std
pop
dec
sub
stos
scas
mov
lock
jmp
int
loopne
repz
mov
or
rcrb
or
mov
sub
sti
fs
subl
rcll
xlat
push
lods
outsl
lahf
xchg
jecxz
push
stos
icebp
rorl
repnz
ds
adc
es
cmp
add
lret
je
dec
xchg
jmp
inc
xor
jne
aam
jne
pushf
popa
ds
jns
clc
call
insb
push
xchg
jb
fst
add
stos
push
rcll
add
enter
pop
xor
mov
sbb
adc
sbb
adc
mov
push
pop
flds
mov
jmp
incl
mov
cmp
dec
rol
stc
xchg
push
icebp
add
dec
xchg
dec
das
jo
lret
jns
xchg
mov
loop
adc
sahf
jg
adc
sbb
test
popf
aaa
call
fildl
jno
and
nop
fdivl
mov
fyl2x
push
dec
pop
pushf
pop
cltd
mov
mov
and
cwtl
int
call
rcll
inc
loope
insl
out
ljmp
repz
jnp
xor
dec
test
dec
pushf
push
mov
jle
pop
adc
xor
loop
dec
in
nop
insb
sbb
popf
shll
loope
or
pop
mov
int
inc
mov
pop
add
ret
mov
mov
in
shrb
and
sub
jne
mov
fneni(8087
scas
push
xchg
fstpl
xlat
xor
aas
mov
xchg
pushf
cmc
dec
lods
aam
andb
mov
add
xor
outsl
arpl
xor
pop
mov
arpl
mov
jb
cld
dec
jg
and
arpl
jp
jo
into
mov
jnp
cmpsl
mov
mov
push
sbb
sub
imul
pop
or
sub
inc
roll
data16
mov
push
fs
jp
imul
repz
push
test
or
pop
lods
mov
in
rorl
mov
push
imul
mov
stc
and
or
push
pop
das
or
inc
aad
out
push
mov
xchg
fisubs
push
jg
ret
add
shrb
push
out
icebp
cmpsl
inc
cmp
mov
xchg
fs
testb
scas
sub
sub
subb
loop
pop
inc
cmpsb
mov
cmpsb
cmpl
cmpsl
mov
shll
sub
outsl
fxch
dec
mov
outsb
and
cmc
push
dec
repnz
stos
push
iret
or
in
into
popf
cwtl
mov
mov
xor
pop
cmp
movsl
push
movsb
mov
adc
popa
mov
out
add
scas
iret
mov
and
xchg
mov
into
push
loop
or
sbb
mov
lret
out
lods
ret
ficoml
jbe
int3
shl
cs
test
aad
sarb
out
test
imul
mov
jne
cmp
push
stos
ret
push
mov
mov
mov
pop
xor
jecxz
stos
dec
imul
jo
xchg
iret
mov
dec
adc
xchg
jecxz
rclb
scas
xor
lods
aaa
and
pop
xchg
lods
notl
data16
mov
daa
jbe
in
xor
das
pop
xor
in
lea
leave
ss
xorb
push
pop
outsl
mov
clc
jns
mov
test
lret
je
aam
jnp
inc
into
adc
mov
shll
inc
sub
fxch
fdivl
ja
or
orb
out
test
sbb
dec
enter
fsubs
jb
out
push
cmp
fsub
call
mov
and
sbb
cltd
bound
addl
out
ja
addr16
rcrl
dec
mov
jmp
dec
sti
out
xchg
mov
data16
cwtl
fwait
xchg
jle
repz
sbb
testb
scas
testb
add
addl
pop
jecxz
push
outsl
xor
push
lods
xchg
or
inc
mov
jmp
lock
xchg
mov
movb
and
sbb
pop
pop
sahf
arpl
push
repnz
jmp
imul
int
sti
loop
lock
push
cltd
xlat
inc
inc
stos
sbb
dec
movsl
bnd
jp
mov
adc
fmuls
add
sbb
ss
imul
js
int3
sub
dec
data16
dec
cmp
pop
and
movsl
cmpsb
push
inc
jae
mov
or
int3
sar
xchg
repz
mov
pop
add
jmp
cltd
or
ljmp
add
jl
mov
imul
jae
mov
cs
lea
outsl
outsb
stos
xor
js
ja
popa
dec
jo
xor
jg
loope
movsb
outsb
push
sbb
imul
inc
orb
xor
add
sub
xchg
out
sub
pop
stos
stc
jg
pop
pop
ds
and
xor
pushf
jne
mov
rcr
loop
gs
or
push
and
bound
sbb
jge
out
dec
pop
adc
jae
mov
pop
mov
push
jl
xchg
pop
out
insb
fwait
jge
xor
jno
push
add
fmuls
pusha
imul
dec
test
xor
ds
adc
and
add
hlt
fidivrl
fimull
enter
cmp
push
aad
fcmovnu
jge
cmp
jne
jle
mov
sahf
xlat
sahf
pushl
outsl
xor
inc
mov
mov
sti
add
pop
jmp
outsl
test
sub
lahf
and
lds
adcb
loopne
add
call
jp
dec
into
jae
fsubrl
sbb
or
pop
cld
dec
cmp
rol
lcall
call
mov
sbb
fmuls
loope
sbb
and
sahf
jle
test
in
cmpsb
mov
xor
cmp
rolb
cmc
sbb
pop
sahf
les
push
adc
push
xchg
mov
push
jle
adc
fmull
cmp
aam
adc
loop
xor
push
lods
call
sahf
sub
or
mov
adc
mov
scas
or
lahf
bound
sbb
dec
mov
add
jns
imul
js
push
xor
dec
cmp
pop
lods
in
lock
and
lods
in
stos
xorb
xchg
sub
shrl
aad
mov
jecxz
jo
lock
fiadds
daa
or
jb
repnz
leave
inc
subl
fisubs
mov
mov
shrl
pushf
and
mov
sahf
sub
sub
mov
ds
lret
or
ffreep
cmpsb
rorb
mov
test
lock
xchg
or
push
cmpsb
stos
scas
gs
jle
int
adc
rclb
addl
cmp
dec
aad
ss
mov
lds
push
mov
repnz
and
ret
stos
xor
mov
fidivrs
aad
jae
shll
mov
outsl
mov
es
jl
sub
ret
ret
dec
lret
jl
or
stos
outsb
or
pop
js
mov
sbb
mov
icebp
inc
dec
lock
add
rcll
repnz
pushf
xor
jge
int3
repnz
fwait
cmp
lret
loope
loopne
movl
cmpsl
subb
test
sti
pop
rol
out
adc
clc
bound
jbe
pop
xor
dec
push
out
insl
mov
xchg
repnz
lods
outsl
pop
mov
in
and
xchg
push
test
lods
in
lock
fnstenv
or
std
or
enter
ror
mov
jbe
out
pop
call
js
leave
adcb
inc
jg
push
mov
cmp
movsl
jae
nop
loop
dec
jns
mov
fwait
stos
in
fisubrs
push
aad
xchg
sbb
test
lret
cmp
scas
jge
push
push
pop
hlt
xor
jg
leave
ret
test
add
movsb
adc
or
push
das
sub
push
or
mov
out
adcb
and
inc
cmc
sub
into
ret
cmp
inc
movsb
mov
lret
or
inc
fnstsw
in
fs
or
xchg
sti
orl
cmp
lret
pop
sti
and
cs
push
rclb
adc
decl
movsb
dec
setl
popf
jbe
mov
leave
mov
sub
or
sbb
mov
push
lcall
lock
in
mov
fmull
adc
aad
cmp
pop
shl
outsl
xchg
push
adc
xor
cmp
adc
dec
sub
xchg
xlat
out
dec
shll
inc
or
mov
loop
jns
push
and
cltd
sub
mov
hlt
push
xchg
xor
pop
repnz
pop
cmc
lret
cmp
cmp
sbb
add
mov
sbb
pop
adc
sti
call
hlt
push
dec
inc
in
sub
iret
es
and
out
jns
cmp
icebp
stc
push
xchg
xchg
mov
mov
jl
nop
inc
jb
and
push
aam
fs
enter
addr16
push
cli
scas
or
pop
popf
cmp
xchg
mov
push
adc
addr16
fsubrl
and
loop
and
stos
imul
xor
sub
fsts
jmp
xor
and
lods
xchg
xchg
xchg
aas
pop
and
incl
mov
mov
dec
shll
sub
out
cmpsl
sahf
xor
ja
out
jp
repnz
add
dec
sub
jmp
icebp
pusha
loope
cmpsl
push
pushf
dec
fistps
mov
and
pop
lcall
ljmp
xchg
mov
sub
jle
out
les
cmp
xor
mov
js
arpl
gs
int
lods
jmp
sub
pop
adc
or
rcr
sbb
push
mov
mov
lds
sub
filds
sbb
ja
addr16
fisubrs
jecxz
out
bound
mov
jnp
jb
jmp
repz
push
mov
inc
das
sub
fldt
cmpsl
in
mov
lret
mov
dec
mov
jecxz
mov
xchg
lret
xchg
add
sbb
fistpl
or
clc
add
aam
fdivp
sahf
test
test
dec
fwait
or
adc
aas
mov
rclb
pop
sbb
xchg
sbb
bound
dec
test
loopne
out
aam
jbe
fistpl
es
xor
in
cwtl
xor
cs
fbld
xchg
and
pop
lahf
cmp
mov
js
mov
mov
inc
cltd
loope
push
xchg
cwtl
mov
push
or
test
dec
mov
loope
xor
jle
add
inc
adc
jnp
adcb
inc
iret
mov
in
out
movsb
jecxz
lods
mov
out
pop
sti
adc
pop
movsl
push
dec
dec
pusha
add
push
add
xor
xchg
mov
adc
mov
dec
sbb
in
sbb
cmp
xor
dec
jp
add
popa
jno
iret
lea
sub
and
nop
sub
scas
icebp
ds
repnz
int
push
out
lock
fsubp
jecxz
ret
dec
loop
mov
mov
push
sbb
leave
leave
mov
mov
outsl
jp
js
lret
stc
cmc
mov
push
adc
popf
and
arpl
push
jns
dec
cwtl
ret
cmp
mov
fs
xchg
clc
popf
lret
dec
ja
outsl
shrb
xor
xchg
sub
ljmp
in
out
push
or
and
gs
aaa
or
in
sbb
insb
ret
mov
mov
iret
jae
imul
push
inc
lods
adc
mov
nop
arpl
and
xor
mov
pop
ja
inc
cwtl
sbb
inc
jb
fbstp
je
mov
repz
mov
add
cmp
push
inc
push
mov
out
sub
cmp
stos
mov
mov
aam
sti
repnz
les
mov
jecxz
xchg
jno
cmpsb
pop
add
pop
pop
test
test
jp
pop
or
stos
mov
lret
mov
cli
dec
test
insl
xor
sub
push
inc
cmpsl
cltd
pop
cmp
lcall
cmp
shrl
pop
sbb
sbb
inc
xchg
lcall
std
sub
rol
shl
pop
shlb
sbb
sbb
jg
in
jle
testl
lea
aam
lock
sbb
dec
sub
sbb
sbb
inc
popf
sbb
dec
add
sub
pop
fwait
cld
lahf
push
pushf
fisubs
outsl
or
into
xchg
mov
ret
test
out
inc
pop
incl
sbb
bnd
hlt
xchg
dec
fwait
pop
dec
mov
test
in
cli
pusha
sbb
xchg
js
mov
xchg
movsl
mov
add
or
jmp
dec
jns
jmp
aaa
push
xchg
sub
cltd
fucomi
insb
ljmp
pop
xchg
stos
mulb
push
testl
sub
popa
jmp
cmp
sbb
out
ja
cmpsb
jno
mov
xlat
push
adc
dec
jae
rcrl
cli
dec
lret
call
jecxz
cmpsb
jno
popa
insb
mov
test
cli
pushl
dec
jle
push
loope
mov
pop
ret
cmp
mov
gs
addr16
fisubl
mov
and
inc
shrl
mov
das
push
jmp
mov
pop
daa
scas
mov
sbb
shrl
movsb
lahf
mov
out
jb
dec
mov
aam
pushf
ja
fildl
cmp
repz
nop
jp
mov
nop
dec
jbe
std
insb
das
push
enter
mov
push
inc
and
fxch
cmovle
pushf
jp
stc
mov
xor
cmpsb
aam
loop
jmp
cwtl
inc
stos
dec
lods
add
xor
icebp
push
imul
inc
mov
fs
sub
xor
push
int3
cld
add
ret
mov
int
outsb
inc
fstl
mov
adc
test
push
mov
xchg
nop
cmp
sbb
mov
test
cmp
rcll
cmp
outsl
mov
cmovne
bound
dec
scas
xchg
xchg
movsb
mov
jae
dec
push
push
sbb
and
jge
mov
outsb
in
sbb
mov
fists
in
adc
sub
mov
mov
cmp
mov
sbb
iret
or
xor
dec
or
int3
xchg
stos
iret
sbb
mov
pop
lock
iret
inc
pop
dec
and
nop
mov
inc
outsb
pop
mov
or
imul
ds
mov
pushf
mov
push
push
xor
sahf
mov
pop
or
inc
rorl
subl
mov
adc
popf
pop
adc
sub
icebp
mov
ds
add
ljmp
mov
mov
cwtl
shll
loop
int
push
fnstsw
aaa
dec
xchg
imul
push
sub
orb
jbe
push
adcl
in
dec
and
call
fcomps
adc
dec
cld
sbb
test
push
mov
xchg
addr16
fs
lcall
push
inc
insb
out
mov
jle
jnp
mov
adc
lods
mov
shr
mov
sbb
cmpsb
mov
lret
stos
popf
sub
imul
test
insl
cwtl
repz
movsl
jg
sbb
lahf
xchg
xor
lds
stos
xlat
ret
pop
xor
or
mov
lret
xchg
inc
pop
jns
or
das
xor
inc
inc
outsb
rorb
rolb
fidivl
lahf
sbb
testl
jmp
mov
sub
fs
push
pop
lret
and
xor
les
inc
sahf
push
jae
test
pop
push
sbb
insb
mov
sarl
and
mov
fcomp
cmpsb
adc
out
jo
push
add
inc
or
jae
inc
leave
inc
movsb
jbe
push
jb
mov
jb
xchg
lods
loop
add
push
and
dec
inc
xchg
inc
mov
push
xchg
pushf
dec
sub
dec
dec
jmp
daa
je
das
stc
and
or
insl
xor
inc
out
sub
pop
sar
and
sub
aas
repnz
cmp
mov
test
pop
adcl
or
pop
andl
and
lret
jp
mov
add
push
test
aam
insb
cwtl
mov
dec
push
dec
or
jmp
adc
and
call
sti
push
cli
ret
mov
in
cld
adc
arpl
ja
test
mov
jnp
xor
out
mov
push
addl
gs
xchg
leave
inc
or
fcompl
adc
fmulp
std
nop
inc
repnz
popa
jl
divb
jae
test
sbb
add
or
sti
mov
jge
sbb
fs
pop
cmpsb
repnz
and
jecxz
xchg
or
stos
jl
aam
cmp
push
inc
mov
inc
mov
dec
dec
aad
mov
cld
xor
add
fcoml
repz
and
lds
lret
das
mov
aas
into
rorb
ret
fsubl
rcll
nop
out
or
add
insl
and
push
sahf
sbb
push
fwait
sti
cltd
mov
call
inc
loopne
mov
mov
jl
mov
mov
mov
pop
jno
es
inc
jb,pt
or
pop
fwait
enter
and
sbb
xor
iret
sbb
lret
popf
stos
xchg
in
add
fcoml
je
fwait
xchg
lds
dec
outsl
lods
pop
aas
scas
aad
jnp
dec
scas
cmpsb
mov
pop
int3
xlat
pushf
adc
test
cmpsb
lods
dec
notl
into
xchg
repnz
insb
out
insb
out
add
and
sub
hlt
ret
enter
jnp
out
js
inc
dec
loopne
push
lock
lods
and
push
in
mov
dec
add
dec
loope
fldl2t
dec
stos
lds
std
mov
push
mov
faddp
andb
inc
movsl
push
orb
dec
ds
mov
mov
jecxz
lds
inc
in
cmp
data16
jbe
jge
test
out
xor
lret
sub
mov
psubq
sub
fsubs
jle
dec
mov
data16
push
push
imul
outsl
sbb
inc
cmp
jb
pushf
mov
std
data16
pop
rcll
int3
bnd
sbb
and
pushf
or
fmul
rolb
mov
adc
jb
mov
xchg
inc
and
cmpsb
inc
shll
and
jnp
mov
mov
cmc
cmc
and
aaa
jg
and
loop
add
data16
sub
add
xchg
aam
jecxz
les
popf
lahf
mov
sub
pusha
mov
js
repnz
xchg
pop
cmp
fsub
pusha
dec
add
ss
rcrl
decl
lret
dec
mov
ljmp
push
xchg
cmp
xlat
pop
push
fistl
cmpsb
cmpsb
add
iret
sahf
arpl
pop
lods
loopne
mov
faddp
xchg
jbe
jo
sub
and
jle
movsb
insl
jl
inc
test
adc
ret
adcl
mov
add
xchg
imull
xor
ror
loope
int3
std
lret
pushf
xchg
xor
repnz
hlt
cmp
or
push
daa
and
aam
cmp
cmpsb
jl
inc
into
mov
ljmp
sbb
dec
leave
jmp
xchg
sub
arpl
sub
push
sub
in
cmpsl
fldl
shlb
mov
mov
mov
xchg
adc
dec
ds
ret
xchg
mov
lock
cmp
pop
out
fisubrl
outsb
pop
clc
push
pop
jp
push
xchg
sbb
pop
mov
fcoms
mov
call
jle
mov
aas
incb
insl
push
xchg
fdivl
lea
cmpl
test
mov
xchg
das
hlt
pushf
push
stos
lods
or
jg
and
sbb
dec
fs
sub
sub
jno
mov
push
mov
lods
mov
sbb
xor
mov
push
xor
call
inc
pop
lds
xor
adc
rcrb
cld
call
enter
fcomps
xor
imul
sbb
cmpsl
pop
mov
test
mov
inc
jmp
enter
or
popa
orb
mov
cmpsb
int3
cmp
or
push
out
stc
jp
movsb
mov
mov
leave
dec
repnz
mov
sub
call
cmp
faddl
sbb
enter
shrb
xor
clc
repz
and
jae
jl
je
push
adc
stos
push
popl
sbb
in
ss
xor
mov
out
pop
add
add
jg
sarl
lret
mov
mov
dec
stc
in
jb
mov
out
gs
adc
bound
ret
xchg
test
mov
test
fs
in
push
fadds
daa
lods
fidivrl
cmp
popa
mov
add
fidivrs
xor
les
mov
cltd
dec
add
int3
cmpsb
cmp
cmp
inc
jns
inc
fimuls
icebp
add
mov
push
outsl
push
std
cmc
frstor
in
xor
push
lds
fisubs
outsb
sub
pop
or
sar
jl
and
dec
bound
cmc
xchg
push
pusha
outsl
or
shrb
aad
lcall
mov
sub
sub
push
mov
jae
add
into
inc
out
or
and
in
in
loop
mov
in
add
fmul
jg
sub
addr16
xchg
and
jbe
push
in
roll
or
inc
pop
stc
push
clc
iret
addb
cmp
sbb
fistpl
xchg
mov
test
sub
gs
or
pop
out
sbb
xchg
xchg
mov
pop
ja
mov
jge
and
jbe
mov
lds
mov
push
fnstsw
clc
xchg
jp
mov
dec
xor
aad
jl
shl
pushf
pop
add
pushf
and
in
rclb
lret
mov
xor
les
jmp
xchg
sarl
cmp
fadd
in
lock
mov
xor
hlt
and
xchg
sub
pop
inc
xlat
fucomp
cmp
mov
add
push
xor
adc
arpl
or
mov
faddl
xchg
pop
hlt
pushf
mov
negl
je
mov
repz
lods
sbb
sub
mov
cmp
add
lret
sub
fwait
movzbl
and
cmp
dec
xchg
mov
test
adc
ja
xchg
cmp
jecxz
push
daa
int
shr
cmc
jns
dec
pop
push
inc
sbb
push
je
in
cli
das
les
sub
jp
jne
mov
pop
push
add
test
xchg
out
mov
xor
jecxz
call
mov
insb
and
ja
fwait
jo
loopne
int
imul
or
dec
mov
sub
fsub
and
jge
adc
or
ret
cld
cmpsl
inc
mov
aaa
ds
in
xlat
push
pop
dec
add
mov
scas
insb
cli
notl
sbb
add
rcl
lods
movsl
mov
dec
sub
jmp
insb
dec
push
jge
and
into
ljmp
sbb
adc
mov
stc
cmp
fsub
data16
jbe
mov
jmp
push
pushf
loope
lock
cmpsl
out
mov
loopne
mov
out
lods
ss
jb
xor
divb
es
inc
or
xchg
cmp
das
stos
cltd
stos
sbb
inc
imul
mov
add
add
jnp
sub
out
adc
into
mov
dec
popf
jmp
sub
add
cmp
fstl
sub
movsb
mov
push
fnstsw
notb
in
xchg
fcoml
mov
xchg
xchg
mul
jmp
mov
inc
xor
sub
sub
leave
lods
sub
mov
mov
xchg
adc
adc
scas
iret
iret
pop
lahf
lock
clc
enter
adc
push
push
mov
repz
add
sub
add
mov
shll
loopne
fnstenv
sbb
scas
or
cmpl
pop
daa
push
mov
inc
cmp
push
mov
adc
push
xchg
mov
cwtl
jns
mov
test
out
pop
call
mov
push
xchg
cmp
xchg
or
insl
icebp
je
sbb
stc
and
xor
fildl
mov
in
int
add
jae
dec
jmp
fwait
or
addr16
mov
jb
cmp
inc
lea
out
fwait
cmp
and
cld
xor
fistps
and
sub
mov
rcr
lea
adc
add
xor
mov
pop
lock
mov
loopne
mov
sbb
loope
loopne
and
push
cwtl
shlb
push
mov
push
loope
pop
jg
ja
iret
push
imul
push
outsb
mov
push
fnsave
push
sbb
jo
xchg
sub
xor
sbb
icebp
outsl
mov
xor
dec
xchg
clc
sbb
xor
sbb
cmpsl
out
out
stos
out
jg
std
popf
arpl
pop
adc
and
mov
fisubs
rorb
push
cmpsl
mov
scas
xchg
les
mov
les
rolb
ljmp
adc
lods
loop
add
loopne
jns
in
mov
stos
cmp
dec
call
ja
cmpsl
xor
lret
sbb
fstps
mov
test
mov
sahf
sbb
jae
cmpsl
icebp
insl
jo
nop
movsl
pop
jno
outsl
sbb
or
pushf
mov
cltd
pop
inc
adc
push
sub
movl
es
push
xor
das
inc
fdivrp
mov
xchg
fnsave
lahf
xorl
gs
cs
pop
gs
fld
es
movl
pop
dec
mov
inc
js
not
fs
addr16
int3
mov
or
ljmp
xor
cli
mov
ss
xor
leave
mov
leave
jge
xor
insb
or
ficomps
ret
or
lods
leave
push
data16
mov
pop
lcall
dec
jne
inc
mov
dec
xor
stos
pop
fisubl
inc
or
sbb
sub
or
jle
cltd
gs
jbe
adc
int3
pop
rcrb
or
in
mov
inc
stos
ret
jnp
jae
imull
lret
pop
cmc
and
mov
movsl
xchg
adc
mov
out
push
mov
dec
hlt
xor
in
xchg
test
inc
pushf
mov
jbe
addr16
jmp
shll
cwtl
pop
mov
mov
pop
and
jnp
mov
popf
in
roll
test
popf
add
icebp
add
push
jge
push
lods
cld
in
loope
xlat
push
xchg
mov
cmc
sbbl
mov
out
pop
testl
and
adc
and
nop
cmp
xchg
dec
insl
clc
orl
fisubl
loopne
adc
incl
adc
idivl
inc
and
mov
inc
mov
imul
loop
cld
mov
dec
arpl
adc
and
and
inc
jb
xor
inc
in
inc
jae
ljmp
hlt
test
mov
mov
dec
subl
sbb
addb
mov
fwait
insb
inc
jns
jae
pop
test
fldenv
das
test
cld
or
addl
jns
xchg
scas
inc
push
adc
hlt
scas
push
sub
add
xchg
dec
cmp
push
sbb
pusha
shl
push
dec
hlt
in
clc
xor
sub
mov
mov
loope
prefetchw
or
jnp
pop
iret
cmp
and
pop
test
scas
fstpt
leave
dec
flds
idivl
push
push
out
pop
jl
jmp
scas
sti
push
xchg
mov
lret
call
xchg
fbld
push
pop
fstpl
sbb
lods
ret
loopne
xchg
push
or
add
mov
jb
mov
dec
jle
int3
stos
dec
jl
mov
push
outsl
loope
jp
js
js
xchg
cmp
jb
xchg
iret
idivl
scas
nop
int3
push
or
in
fnstcw
mov
enter
mov
jl
aad
jb
sub
xchg
jno
arpl
xchg
jge
repnz
cmpsb
idivl
scas
mov
stos
pop
adc
repnz
jmp
lock
adc
fcoms
add
shrl
enter
jns
xchg
ljmp
incl
movsb
push
push
bound
dec
dec
dec
jns
and
push
adc
sbb
aas
push
sub
sbb
pop
in
jae
xchg
stos
adc
inc
mov
jl
bound
mov
push
xlat
daa
repnz
sbb
xor
mov
inc
insb
fsts
cmpsl
add
sbb
push
in
leave
nop
push
aam
xor
cli
pop
aas
adc
ret
inc
aad
jbe
push
jecxz
push
decl
cwtl
push
push
xchg
mov
mov
scas
pop
addr16
sbb
jecxz
daa
insb
mov
push
adc
lods
add
mov
cmp
and
mov
xchg
and
into
cmp
inc
cwtl
insb
jmp
aaa
gs
jge
or
das
aad
into
popa
rorl
fbstp
mov
jae
xor
mov
adc
outsl
cmp
subb
jbe
or
pop
pop
push
jl
adc
inc
mov
jecxz
push
sub
mov
dec
or
ljmp
clc
jno
jp
insb
scas
ja
mov
dec
std
xor
cmp
pop
jb
xor
movsl
scas
mov
call
cltd
repz
inc
inc
std
inc
mov
test
mov
cli
push
ds
cltd
jb
push
testl
pop
jecxz
fildll
fidivrl
mov
fistl
mov
and
mov
pop
in
fwait
lcall
cmp
cs
insl
imul
mov
int
mov
mov
clc
mov
pop
xor
into
pop
mov
lahf
xor
inc
gs
aaa
push
push
jmp
mov
mov
flds
stc
push
int
sbb
push
in
cwtl
mov
ds
mov
and
aas
xlat
test
lods
cmovae
cmp
lea
cmpsb
sub
xchg
in
jge
lret
mov
lret
mov
push
sbb
mov
les
cmp
inc
loopne
stos
jl
push
pop
shrb
mov
repnz
mov
outsb
dec
xor
insl
fucomi
xchg
adc
stc
jb
dec
mov
jbe
ss
lods
add
mov
mov
or
lods
mov
mov
xchg
and
sbb
idivb
in
push
jle
sub
cmp
cmpl
dec
jbe
and
add
cmpsl
fwait
xchg
xchg
sbb
ret
mov
xor
scas
negl
xchg
mov
pop
lds
pushf
imul
ja
dec
aaa
movsl
fwait
fwait
outsl
xchg
cmp
inc
cld
das
insl
cmp
push
repz
pop
cli
xchg
xor
stos
aas
xchg
cmpsb
enter
mov
in
jl
jle
and
pop
xchg
cmc
jmp
add
pop
loope
ds
loopne
movsl
cmpsl
das
rcl
xor
and
pop
mov
push
addr16
movsl
mov
into
jbe
pop
cmp
cmp
push
lret
xchg
mov
ja
xor
loop
mov
lea
or
or
ret
test
cld
cli
add
mov
insl
push
cwtl
fsts
mov
pop
xchg
lret
mov
ja
fstp
push
fldt
push
insl
leave
imul
add
neg
fcom
or
and
sub
mov
jns
dec
fdivs
add
addb
push
dec
mov
jmp
pop
mov
pop
jo
mov
push
dec
sahf
bound
lahf
pop
arpl
mov
xchg
aad
je
mov
dec
and
jmp
in
stos
jg
inc
mov
lret
push
xchg
jmp
jmp
inc
outsb
aad
addl
cmp
push
bound
test
repz
lcall
cmpl
sti
add
jo
xchg
divb
sub
dec
pop
push
fndisi(8087
fstpt
imul
inc
fcoms
cltd
fcomi
sub
addl
repz
in
testl
jg
xchg
clc
pop
mov
sub
enter
aaa
loope
dec
adc
cmp
push
dec
imul
repz
add
jno
or
xor
push
sub
insl
xchg
dec
ss
lds
xchg
int3
or
add
sub
jmp
mov
in
jae
outsb
dec
leave
cmpsl
xlat
push
sub
push
outsb
cmp
imul
imul
decl
pop
faddl
arpl
out
dec
xchg
sub
les
arpl
adc
dec
dec
inc
lds
dec
or
out
mov
dec
cmpsb
insb
lahf
jle
test
sub
jne
xor
push
jle
lcall
stos
and
jo
pusha
les
test
pop
mov
sub
rorl
mov
in
adc
and
fiadds
js
jns
lods
movsb
push
pop
xor
mov
pop
dec
adc
push
sbb
push
sub
pop
insl
aaa
ret
pop
call
pop
xchg
and
dec
stc
push
js
push
xor
push
mov
pop
inc
jg
cld
nop
pop
aam
jl
leave
inc
pop
outsb
rol
subl
cmp
xchg
dec
aas
pop
mov
or
xchg
jne
and
leave
fst
shl
aam
je
enter
push
lods
icebp
stos
or
cmp
xor
jp
cmpsl
sub
dec
mov
cmp
add
sbb
adc
push
adc
in
das
mov
cmp
pop
mov
cmp
xchg
sbb
xor
call
or
in
cmpsb
sbb
xor
cmp
fwait
ss
mov
inc
and
jl
or
and
jl
lcall
dec
mov
out
push
sub
sub
or
sbb
inc
clc
mov
outsl
adc
cmp
sub
call
incl
cmp
js
mov
mov
fs
sbb
sbb
mov
inc
fimuls
fadds
int
cs
cmp
rcrl
bnd
add
jecxz
popf
push
jmp
fisubrl
or
and
sbb
dec
ret
mov
jnp
mov
frstor
adc
mov
cmp
mov
cld
ret
icebp
neg
fldl
scas
jnp
pop
xchg
pop
push
mov
push
cmp
ret
pop
cli
dec
dec
popf
sbb
push
test
ffreep
dec
sub
cmp
xor
notb
testb
pop
pop
pop
loop
or
fisubrl
enter
or
in
rcrl
sub
xor
pop
lret
adc
xlat
jne
repz
adc
xor
push
jne
loop
mov
mov
pop
xlat
xor
push
clc
mov
jecxz
xor
test
test
or
inc
outsl
loope
movaps
add
in
and
sbb
sbb
push
adc
inc
inc
jne
xor
inc
cmp
or
mov
and
push
inc
lea
cli
xor
pop
xchg
xchg
in
bound
cmp
ljmp
pop
mov
cmp
fsubrl
scas
xchg
ret
out
adc
or
out
cmp
add
in
cmp
jne
lds
mov
inc
xchg
aam
mov
mov
sbb
dec
adc
inc
and
sub
addb
mov
imul
imul
inc
fstl
ficompl
cmp
adc
orl
push
stc
leave
shrl
push
push
push
in
mov
or
jns
ret
sbb
jmp
xchg
lds
push
sub
stos
sub
inc
test
mov
xchg
pushf
push
outsl
mov
arpl
inc
enter
call
cli
sbb
sub
mov
xchg
bound
fdivrp
movsb
lods
lock
outsb
add
ret
fcmovnbe
clc
sbb
mov
xchg
mov
and
sbb
mov
out
jnp
in
add
into
pop
sbb
add
add
arpl
fs
aaa
inc
insl
js
sti
sti
add
and
mov
and
gs
add
rcll
mov
and
mov
js
push
aas
fidivrl
inc
xlat
mov
add
sub
lcall
stos
rolb
xchg
pop
adc
cmp
shlb
mov
push
cmpsl
sub
pop
add
and
gs
and
orb
mov
ja
movsb
dec
inc
sahf
adc
jno
int3
jbe
repnz
pushl
inc
add
pop
inc
call
add
inc
bnd
aaa
fsts
rclb
scas
add
adcb
lock
fld
jge
cmp
add
mov
xchg
sbb
inc
mov
mov
das
imul
xlat
inc
scas
xlat
aas
fidivrs
xor
sbb
and
push
xor
sarl
mov
lds
lock
imul
push
dec
xchg
scas
pop
ror
call
pop
scas
dec
lea
mov
stos
or
repnz
jge
flds
dec
xchg
mov
sahf
hlt
cwtl
mov
mov
sahf
bound
lods
lods
cmp
mov
dec
and
lret
les
clc
sbb
faddl
aaa
pop
mov
inc
lods
aas
addl
nop
jns
sahf
pop
mov
xor
call
jmp
jae
fldt
mov
or
sbb
push
push
dec
xor
js
mov
push
cmp
cmpsb
pop
sub
sbb
in
lahf
inc
in
and
cmpsl
xchg
fs
and
add
movsb
loop
jbe
pop
sbb
jne
in
aas
sub
sub
fs
push
loopne
jp
bound
lods
fcomps
xchg
mov
mov
ds
mov
jne
add
lods
jns
shlb
clc
push
pop
mov
mov
adc
leave
or
pop
mov
mov
jmp
cmp
cmpsb
sub
mov
daa
jg
inc
mov
cmp
fwait
inc
pop
in
xlat
and
mov
or
inc
mov
in
mov
push
pop
rcll
popa
push
rclb
gs
int3
mov
les
cltd
lahf
mov
inc
repnz
sub
xchg
pop
data16
jbe
xorl
and
fstpl
lds
inc
lret
adc
bound
scas
sub
int
xor
dec
orl
sbb
arpl
aad
outsl
or
push
scas
in
xor
rdtsc
or
adc
or
pop
xor
int3
fidivs
mov
cmp
bound
js
cwtl
into
push
sbb
xchg
push
or
std
loopne
adc
adc
mov
xchg
fdivrl
imul
bound
mov
loop
lcall
xor
inc
push
out
rcl
adc
sbb
dec
xchg
pop
roll
cli
mov
mov
sub
mov
cmpsl
adc
add
ds
sub
rorl
test
pusha
outsb
xchg
sbb
ds
xchg
dec
lahf
push
imul
pushf
leave
icebp
sub
into
aam
lahf
fs
push
push
cltd
push
push
inc
fcoml
out
lcall
xor
jbe
mov
int3
dec
add
or
xor
push
int3
pop
xor
outsb
stc
inc
idiv
sub
and
xchg
adc
test
ds
push
cmp
outsl
inc
mov
pop
push
cmp
out
into
std
cmpsb
sbb
dec
ficoms
test
mov
int3
scas
daa
sbb
and
cmp
testl
nop
orl
rcrl
test
sbb
shll
nop
sbb
jb
jo
adc
enter
cmc
pop
jp
aam
dec
or
mov
ret
xchg
pop
mov
xchg
and
pop
lock
imul
push
loop
push
mov
add
mov
mov
rcl
test
cli
lds
push
stc
outsl
adc
and
inc
fs
xchg
ss
imul
mov
sub
ret
push
adc
cmp
pop
mov
or
sahf
mov
jnp
pop
adc
push
daa
and
cmp
inc
cs
dec
add
jo
aas
and
inc
push
cmp
push
pop
sbb
inc
mov
pusha
ss
das
push
pop
mov
push
xor
movsl
insb
test
call
das
lods
jbe
dec
test
pop
les
notb
pop
push
fists
dec
and
out
inc
rclb
or
aas
inc
dec
mov
dec
leave
clc
mov
adc
cmpsb
fwait
xchg
test
fldl
add
add
xchg
adc
and
fisttpll
pop
jmp
pop
loop
cmp
je
inc
adc
lods
lret
xchg
fcoml
sti
js
add
out
and
loopne
add
sarb
out
jg
out
int
bswap
pop
std
jecxz
mul
dec
hlt
leave
jne
pop
mov
insb
sbb
cmpsb
jmp
mov
dec
ffreep
scas
mov
andl
std
fwait
sub
out
pop
stos
lahf
mov
xchg
pop
pop
adc
xchg
sti
call
dec
pop
and
test
das
add
adc
and
jo
popf
push
aaa
push
xor
sub
inc
fwait
icebp
or
xchg
sbbb
hlt
xlat
out
pop
lods
mov
jnp
shlb
lds
icebp
inc
inc
das
jnp
xchg
mov
push
mov
loop
or
xchg
std
inc
inc
push
mov
sbb
mov
loop
pop
cmp
shl
xchg
push
daa
scas
repz
xorb
inc
fimuls
insb
adc
xchg
cmp
cmc
and
lcall
arpl
das
push
adc
lds
push
bound
daa
loopne
push
cmp
jno
stc
jl
scas
repnz
out
push
stc
sbb
addr16
cmp
mov
lret
adcl
lods
adcb
sbb
or
js
in
test
fistpl
cltd
les
nop
lds
mov
int3
mov
fwait
or
negb
stc
loope
repnz
loope
mov
in
push
fdivl
cli
fdivrp
enter
mov
xchg
lock
outsl
jl
push
xchg
movsb
pop
xor
lods
popa
cld
cmp
test
and
stos
outsl
lret
dec
xorl
adc
fnstcw
ret
mov
lcall
push
decb
shlb
jl
jp
ja
adcb
clc
jg
ljmp
pop
pop
dec
mov
repnz
lret
mov
push
xchg
loope
inc
xor
mov
test
fdivr
pop
xchg
iret
in
sub
scas
fisubrl
cmpsb
mov
xchg
in
and
call
add
sbb
xchg
loop
test
sub
sub
dec
pop
cwtl
pop
inc
pop
fstpt
out
push
enter
pop
push
lahf
dec
push
dec
push
hlt
or
or
mov
inc
les
popa
movsl
test
xchg
lahf
mov
push
mov
mov
in
jo
nop
sub
add
outsb
fwait
ljmp
mov
cltd
push
jbe
js
pop
loopne
and
addl
and
xor
jg
pop
call
jp
aad
xor
aaa
sbb
dec
sub
jmp
sbb
dec
cli
mov
in
xor
insl
pop
je
hlt
xor
mov
inc
jbe
addr16
imul
sub
ss
pop
push
bound
jne
jmp
mov
push
lret
xchg
and
int3
push
inc
or
das
adc
pop
mov
cltd
xchg
lods
movsb
ret
add
xchg
das
pop
sub
add
and
adc
imul
mov
pop
dec
das
das
mov
ljmp
leave
ja
cli
mov
test
int3
or
or
addr16
notl
in
xchg
in
jp
ds
mov
arpl
les
add
clc
loopne
push
add
or
daa
loope
pushf
inc
dec
cmpsl
inc
cli
lods
add
fcmovnu
mull
lcall
mov
scas
daa
jns
inc
cwtl
popa
push
or
push
shll
adc
xchg
out
ds
jmp
or
mov
or
inc
int3
cmp
pop
fstpl
cs
sbb
nop
push
sub
bound
aas
cmp
sub
adc
cmpsl
push
adc
jbe
stos
jmp
cs
adc
mov
in
gs
pop
or
fld
cltd
jo
or
inc
popf
andl
cwtl
sub
add
xchg
enter
or
leave
ror
sahf
mov
xor
adc
loope
inc
mov
insb
inc
dec
cmp
inc
ss
enter
and
shll
mov
sbb
xorl
rclb
xchg
ja
in
mov
xor
jae
lds
adc
pop
mov
adc
mov
and
inc
sub
add
sbb
xor
mov
sub
les
addr16
icebp
cmp
adc
hlt
daa
lods
xchg
test
leave
cmpsb
sahf
mov
bound
or
sbb
xchg
mov
jbe
or
or
rclb
les
pop
and
xchg
aaa
mov
mov
call
sbbl
xor
shlb
adc
ret
xchg
aas
jo
test
xor
sub
mov
std
sub
and
cmpl
or
adc
test
push
lcall
pop
cmovbe
js
stc
or
pop
lods
push
sub
or
lret
inc
sub
mov
mov
sub
jmp
or
xor
sti
inc
int3
adc
cld
into
sbb
push
fistps
adc
xor
pop
xor
insl
inc
and
stos
push
push
mov
mov
mov
jnp
xchg
popa
sbb
test
mov
adc
jne
cmp
cmp
jge
lcall
enter
in
loopne
cmp
mov
shrl
rep
outsl
sub
and
or
jo
push
xorb
hlt
jbe
icebp
inc
insb
cmp
fwait
hlt
mov
add
cld
sbb
jo
mov
mov
das
jg
mov
add
out
repz
icebp
scas
rolb
lods
icebp
pushf
mov
pop
in
ja
sbbl
pusha
push
popf
xor
test
les
data16
sub
inc
shrl
or
hlt
mov
xlat
inc
xor
out
movsl
adc
nop
ret
push
mov
loopne
xlat
sbb
cmpsl
out
outsl
fdivrs
cmp
loope
adc
jmp
cmp
and
je
jno
mov
jmp
sbb
mov
xor
pop
sbb
mov
fbstp
daa
lods
inc
push
jb
jo
lea
icebp
pushf
lret
nop
fwait
dec
out
and
mov
cmpsb
push
cmp
adc
and
push
fptan
fcmovu
and
add
or
js
mov
outsb
jne
mov
and
mov
xlat
xor
adc
or
xchg
pop
arpl
sub
mov
stc
fsubr
dec
movsl
es
loopne
add
std
mov
nop
es
enter
shrl
jo
js
mov
mov
repz
mov
push
iret
imul
mov
jae
xchg
xor
jnp
add
repnz
cwtl
mov
js
sarb
out
test
outsl
inc
cwtl
sbb
cwtl
lcall
cmpsl
in
add
mov
mov
incl
adc
lret
pushf
push
scas
in
dec
jno
xor
mov
loop
dec
push
cmp
ret
xchg
pop
pop
jmp
dec
movb
pop
lods
movsl
js
int
lret
jo
ss
out
nop
xlat
mov
stos
enter
inc
ja
xor
pop
mov
fisubs
mov
jae
jnp
lret
jg
mov
js
dec
add
push
push
inc
sbb
data16
cmpsb
sbb
hlt
fdivrs
sbb
loop
cld
iret
imull
mov
mov
sbb
inc
nop
out
aam
jnp
push
sub
mov
jb
inc
dec
repnz
test
jg
sub
pop
push
cmp
mov
fdivl
sbb
jae
xchg
sub
push
xchg
cmc
imul
adc
imul
or
mov
int3
cs
adc
and
in
cld
sbb
jge
fildll
aas
shrb
fstpl
push
and
es
iret
cltd
mov
and
inc
les
notl
sub
lret
loopne
jbe
xchg
mov
stc
imull
cwtl
sub
lods
dec
shlb
test
jp
push
mov
icebp
and
es
stos
sbb
push
mov
rcll
mov
adc
dec
or
adc
xorl
cmpsl
and
lea
into
subl
clc
sti
inc
fcmovnu
sbb
sbb
mov
dec
xchg
fwait
jno
mov
out
jbe
ds
cmpl
das
jb
repz
fwait
push
mov
mov
lea
and
fistl
addr16
andb
dec
sub
adc
bound
imul
xor
sub
push
repz
jb
jbe
lods
xchg
mov
push
dec
push
and
mov
out
outsl
rol
dec
mov
js
fucomip
roll
loopne
enter
pushf
in
aaa
push
inc
in
pop
xlat
in
aas
addr16
or
nop
cmp
or
filds
or
xor
cs
sbb
imul
out
add
rcr
aad
cmp
sub
push
cmpsb
mov
mov
sub
cmc
push
mov
xchg
adc
fsubl
out
dec
scas
data16
out
ss
inc
and
mov
enter
outsb
push
popa
inc
ljmp
imul
and
ror
mov
mov
push
pop
xor
fwait
rolb
pop
mov
and
xchg
call
cwtl
jns
fnstenv
sbbb
dec
fistpl
gs
jge
and
jge
subb
cmp
push
mov
iret
mov
cli
xchg
push
mov
jb
in
mov
out
inc
je
dec
pop
scas
je
cmp
adc
sbb
xchg
mov
in
pop
mov
push
clc
rcr
xchg
push
stos
lea
sbb
hlt
jb
aas
ds
or
out
outsl
sbb
stc
or
outsb
and
adc
mov
outsl
cmp
jecxz
sub
xlat
imulb
iret
in
sub
stc
imul
stos
adc
xchg
shl
aad
je
cmp
fs
jge
mov
shl
push
test
cmp
or
inc
mov
push
test
sbb
dec
push
add
rorl
sbb
cmp
popf
imul
push
add
pop
scas
fildl
in
sub
imulb
dec
enter
sbb
and
insl
mov
and
lds
cltd
out
clc
pop
pop
shlb
sbb
insb
clc
loopne
sub
scas
imul
sub
mov
push
rcr
jl
iret
andl
icebp
xchg
call
scas
inc
outsb
adc
ffree
fnop
xor
adc
inc
mov
xchg
xor
push
xor
in
xor
outsl
jo
cmp
jo
ret
sahf
mov
iret
ds
arpl
lock
jae
nop
daa
movsb
sar
dec
dec
mov
pushl
cmpsl
mov
lret
sahf
adc
pop
gs
scas
dec
sbb
scas
adc
movsl
push
insl
push
push
mov
mov
sub
sub
xchg
in
mov
pushf
fidivrl
dec
mov
fwait
ja
inc
push
ret
inc
pop
stos
jb
lock
fwait
mov
xor
sub
stc
bound
xchg
push
sub
mov
shlb
add
or
fists
imul
ds
xchg
mov
les
push
push
sbb
lds
lret
inc
fisubl
dec
jnp
pop
xor
ret
loopne,pn
xor
xor
inc
jno
mov
shl
aam
or
mov
push
adc
pop
shrl
mov
or
es
insl
push
imul
stos
jle
scas
push
and
ljmp
daa
jp
mov
jbe
dec
inc
repz
loope
ret
rcr
jae
push
pop
std
outsb
mov
into
mov
daa
and
cmp
and
sbb
sarl
scas
cmp
jnp
or
aaa
fdivs
xlat
aam
roll
dec
or
fcoms
aaa
std
popf
push
cmp
push
sbbl
jle
fsts
inc
inc
fdivs
ret
xchg
shl
por
jb
mov
fwait
shl
lret
mov
jl
inc
pop
or
repz
mov
leave
sahf
mov
add
pushf
cli
inc
leave
bound
out
push
push
sbb
in
push
fisubrs
hlt
popa
pushf
loopne
je
adc
outsb
add
mov
push
adc
daa
jge
ja
pop
or
mov
aam
inc
insl
mov
cli
imul
negb
test
jno
mov
dec
mov
cmp
cmp
psubq
data16
mov
cmp
and
lods
push
mov
lret
mov
imul
int3
pop
arpl
xlat
out
daa
push
sti
lods
push
push
ret
mov
sarb
subl
dec
outsb
and
mov
push
dec
lds
xchg
mov
inc
lock
push
pop
aas
cmp
clc
push
mov
cwtl
imul
xchg
jl,pn
push
or
adc
jb
bound
aam
in
mov
iret
xor
and
sub
sub
cld
mov
jp
popl
cli
js
mov
je
std
les
jne
mov
adc
outsl
cmp
in
mov
dec
mov
sub
xor
outsb
mov
cmpsb
leave
in
xor
imul
in
add
jg
adc
or
push
shl
subl
nop
cmp
out
test
sub
test
out
pop
imul
and
cmpb
or
in
in
out
cli
int3
jp
add
call
into
dec
add
enter
mov
hlt
sti
fprem
repz
repz
mov
adc
and
sti
je
cmp
and
mov
add
xor
fsts
popf
mov
jo
mov
daa
shrb
testb
ss
leave
test
dec
rcll
fwait
imul
pop
daa
mov
mov
fisttps
cli
jmp
leave
sbb
jecxz
cmp
mov
rclb
and
pusha
pcmpeqw
jno
test
inc
fwait
cld
clts
pop
push
xor
or
test
notb
push
jnp
insl
imul
pminsw
stos
sbb
sub
sbb
movsl
dec
push
dec
or
mov
outsl
mov
js
push
push
ss
xlat
cmc
dec
shrb
push
dec
push
mov
jb
xchg
lods
ss
lock
push
mov
push
mov
rorl
xchg
sub
pop
insl
sbb
cmp
lock
jne
test
addr16
notl
aam
fidivs
and
aas
punpcklbw
xchg
shlb
in
jne
icebp
lods
push
sub
or
fbld
push
hlt
and
jge
mov
jns
push
or
call
add
call
xor
dec
popa
int
dec
pop
inc
sub
in
xor
pop
out
stos
in
push
ljmp
cmp
pop
pop
stos
jbe
sub
into
inc
sub
test
jmp
adc
jns
nop
jmp
jns
out
mov
jb
xor
cs
sub
scas
sub
jbe
sub
xchg
cmp
mov
aam
cmpsl
mov
pop
add
xor
cmp
fsubr
cmp
mov
push
gs
mov
dec
or
pop
jle
jo
test
roll
jl
inc
and
sbb
fucom
inc
decb
mov
lcall
rcrl
ret
repz
mov
mov
aam
or
mov
push
out
rolb
jle
inc
cmpsb
jne
inc
push
adc
fs
xor
push
in
cli
out
push
sti
out
scas
gs
adc
aad
imul
test
dec
je
movsl
outsb
cmpsl
jbe
push
and
jbe
adc
inc
sub
ljmp
mov
xor
sub
xor
push
in
cmp
xchg
arpl
faddl
mov
repz
pop
fstl
push
xor
lea
pusha
das
fcomps
imulb
xchg
sub
cmpsl
outsb
pop
mov
fcompl
cmpb
mov
fldl
pusha
lds
xchg
bound
enter
push
jmp
lea
mov
mov
movsl
push
or
int
movsb
add
xor
loop
mov
leave
fcoms
into
lea
rcll
xchg
or
andl
dec
add
jmp
stos
lods
mov
sub
mov
and
lcall
ds
daa
fs
addl
fsubs
clc
dec
rcr
jo
iret
mov
sar
mov
dec
add
inc
sbb
jge
ret
jo
test
in
mov
lret
xchg
movsl
mov
dec
mov
cltd
cmp
pop
test
fwait
lods
mov
jl
lock
xlat
adc
fistl
arpl
xor
mov
nop
push
scas
dec
dec
ss
cmp
repz
out
mov
fstps
les
dec
orb
test
xchg
bound
xor
mov
mov
add
push
jo
inc
test
xchg
clc
movsb
pop
sti
and
sti
daa
arpl
jne
push
cli
adc
nop
mov
retw
sub
mov
sahf
in
push
int3
push
in
lcall
call
mov
lcall
loope
fistpll
andl
mov
add
les
pop
aas
xchg
fs
add
sbb
dec
mov
lods
inc
movsb
xchg
fcompl
stc
mov
std
cmpsl
add
sbb
adc
test
cmc
push
in
push
adc
mov
inc
push
call
xchg
ret
rclb
shlb
fdivs
ss
pop
movsb
push
iret
bound
aas
out
inc
sub
mov
std
mov
js
and
ret
cmpsl
dec
cli
lret
cmp
subl
mov
sub
pop
scas
sbb
popa
sbb
mov
lea
in
test
xchg
sub
pop
dec
sub
mov
out
mov
popf
and
sbb
mov
dec
mov
push
fdivp
dec
repnz
adc
inc
icebp
and
push
sub
fcomps
adc
aam
mov
push
jbe
loopne
xchg
stc
mov
mov
dec
and
outsb
xchg
xchg
mov
test
xor
mov
loope
cmp
adc
enter
int
rorl
sbb
mov
jg
dec
inc
fs
push
push
dec
pop
mov
mov
jne
add
int
ret
out
cli
daa
enter
lret
mov
in
jae
enter
push
cs
mov
and
lahf
mov
outsl
sahf
and
jne
btc
fnstcw
mov
dec
les
dec
or
xor
orb
sbb
dec
push
inc
xchg
dec
and
dec
jecxz
repnz
test
std
in
cld
in
rorl
mov
or
jp
dec
sbb
data16
sarb
sbb
push
mov
and
push
mov
inc
mov
sbb
addr16
arpl
cmpsl
jle
sahf
add
mov
inc
jle
xlat
data16
std
and
adc
sbb
subl
pop
and
pop
outsl
push
jne
or
add
mov
lret
push
xchg
gs
mov
daa
sbb
loopne
inc
loop
mov
sub
shlb
icebp
mull
sbb
jge
stos
pop
lds
jns
jns
es
pop
inc
in
fwait
and
aam
es
outsb
inc
loop
mov
sub
jmp
out
push
push
setbe
ret
push
push
cmc
sub
push
push
xor
or
or
repnz
stos
mov
shll
into
sub
xchg
or
out
lods
aas
or
sub
jo
mov
inc
mov
lcall
iret
lret
xchg
loope
adc
pop
sub
cmp
mov
xor
mov
cmp
ljmp
push
add
test
sbb
test
sbb
mov
adc
testl
repnz
mov
popf
imul
jmp
or
add
or
or
push
jns
ret
out
fists
stos
test
sbb
sub
dec
test
insl
push
or
pop
out
ret
adc
and
ret
xor
pop
xor
jnp
pop
mov
ja
lahf
lock
mov
cmp
cmp
das
pop
out
int3
mov
jne
sub
inc
mov
cmp
stos
inc
sbb
and
fcoms
pop
mov
repz
repnz
je
mov
or
cmp
and
rorl
hlt
insb
cmc
stos
repz
loopne
out
add
mov
sbb
insb
xchg
sub
in
pop
ret
lods
xrelease
and
jp
aam
sbb
jmp
cmp
mov
cld
cmp
lods
sbb
aam
into
fsubrs
fsubr
xor
push
mov
cmp
jno
icebp
roll
inc
lea
and
jg
data16
mov
push
push
rorb
dec
mov
test
scas
cmpsb
lock
lds
movsl
mov
lea
dec
pop
fdivrl
jae
jae
int3
fstpl
pop
cltd
and
sbb
enter
lods
xchg
cltd
mov
mov
out
xorl
mov
lock
push
push
push
stc
testb
mov
cmp
inc
shrb
popf
inc
stc
sub
popa
insl
inc
add
mov
test
shl
addl
jnp
push
iret
mov
call
pop
adc
and
daa
movsb
inc
das
fucomi
cmc
adc
in
dec
push
inc
mov
inc
fmul
push
shlb
dec
xchg
aas
or
mov
leave
push
sub
inc
inc
push
push
inc
scas
pusha
bound
or
add
lcall
lahf
cld
xor
adc
dec
cmp
cld
idiv
inc
imul
dec
movsb
xchg
aaa
xor
adc
push
xchg
or
sarl
insl
xchg
frstor
mov
pop
aas
xor
test
mov
sbb
insb
js
in
ret
call
dec
sbb
push
je
pop
xor
ja
push
xor
rol
xchg
jp
shlb
imul
pusha
adcl
mov
add
enter
std
inc
xlat
sahf
cmpsb
jb
mul
rclb
lret
xchg
mov
mov
into
fisttpl
fidivrs
rol
bound
std
push
mov
push
inc
jnp
mov
mov
sub
out
idiv
mov
cmpsl
mov
pop
add
jmp
pop
leave
fmul
jne
jle
jns
ret
orl
cmp
and
scas
xchg
sbb
sub
inc
ret
iret
mov
push
popa
fsubl
lods
cmc
cmp
arpl
sbb
imul
mov
mov
cmp
aas
ljmp
sbb
dec
jle
aad
or
cmpsb
mov
adcl
movsb
dec
pushf
sbb
xchg
push
fsubrs
or
stos
ja
cmp
leave
outsl
inc
test
sbb
pop
lea
mov
push
sahf
scas
add
incl
movsb
lods
pop
adc
loope
rcrl
inc
mov
fdivr
lret
aas
or
add
sub
and
sbb
loop
loop
cmp
lret
and
outsl
js
scas
xchg
outsb
or
xor
imul
in
lcall
test
xchg
das
cvtdq2ps
mov
pop
ss
sub
mov
lcall
and
outsb
sub
sti
mov
insb
mov
dec
mov
mov
xchg
negl
or
mov
daa
ds
jecxz
iret
xor
rol
inc
pop
sbb
push
pextrw
xor
or
push
insb
aas
div
filds
xchg
test
cli
inc
out
inc
lea
dec
aaa
xor
into
imulb
sbb
imulb
sbb
insb
mov
push
addl
or
rcrb
out
shll
sub
aam
pop
pushf
push
xchg
sbbb
or
pop
ja
ror
leave
jmp
cwtl
or
add
in
mov
jne
out
jle
nop
aam
shr
xchg
mov
fisttps
aaa
push
popf
shrb
xchg
sbb
stos
popf
push
outsl
and
jno
stos
jnp
cmp
push
mov
mov
mov
dec
jo
cmp
shr
aam
scas
movsb
fs
lea
mov
out
mov
sarl
repz
pop
outsb
mov
test
sbb
imul
pop
ja
arpl
fildl
mov
jno
les
jae
mov
sub
dec
std
outsb
mov
mov
or
add
cmpsl
mov
inc
cltd
or
insb
push
mov
mov
int3
cmp
or
xor
cmp
dec
jb
sub
leave
jnp
mov
aad
iret
sub
inc
cmp
hlt
loopne
cmpsb
mov
out
pop
xchg
pop
sbb
rcl
xchg
mov
cltd
sub
rcrb
mov
cs
xchg
jmp
sbb
lods
frstor
adc
aad
push
or
mov
cltd
and
or
pusha
pop
out
jecxz
push
pushl
call
mov
xchg
sub
test
enter
xchg
popw
data16
xlat
cmp
fdivrp
dec
iret
pop
sbb
xor
mov
sub
mov
aam
push
mov
mov
mov
lea
sub
and
hlt
aaa
in
ljmp
inc
sub
inc
cli
xchg
or
add
inc
call
mov
mov
aaa
sbb
inc
aad
movsb
pop
mov
sub
cmp
mov
mov
xchg
adc
int3
ret
sbb
xor
pop
das
outsl
sahf
sbb
aad
mov
test
jnp
or
in
ss
xchg
jns
jb
add
push
gs
mov
cmp
sar
stos
jecxz
mov
lock
lods
rolb
lret
fmulp
loop
fiaddl
sti
int
inc
adc
pop
inc
stc
popf
jecxz
daa
cmpsl
aaa
mov
pusha
lcall
cltd
mov
notl
pop
test
int
jmp
xor
scas
xchg
jp
fs
xchg
dec
loop
or
mov
outsl
in
sub
bound
or
dec
push
mov
jecxz
xor
jecxz
clc
adc
movl
cwtl
jmp
sub
xchg
movsl
mov
les
in
idivb
fmul
call
arpl
jns
imul
cmpsb
shlb
push
call
push
push
sub
inc
imul
mov
pop
inc
cmp
bound
gs
mov
in
inc
mov
push
xchg
sub
arpl
push
adc
shlb
stos
push
sbb
inc
rclb
ljmp
pop
push
pop
test
cli
cmp
jnp
xor
xchg
dec
sub
lahf
push
jmp
cmp
mov
aaa
scas
repz
push
rcrb
loopne
push
xchg
ja
test
pop
rolb
iret
in
mov
push
call
pusha
pop
jmp
daa
mov
xchg
imul
mov
enter
mov
push
adcl
subl
call
outsb
jae
test
stos
push
pop
dec
xor
xchg
xchg
jne
insl
pop
inc
insl
jl
popa
mov
lahf
jecxz
push
fistl
mov
mov
jecxz
pusha
es
cmp
leave
jecxz
andl
xchg
xor
mov
pop
jne
inc
jg
cmp
leave
js
sub
and
add
fcom
or
xor
and
and
insl
push
loope
and
in
xor
mov
xchg
fistpl
ficoms
xchg
adc
dec
mov
pop
jle
and
es
xor
popa
dec
loope
cltd
jne
xchg
mov
inc
mov
shll
es
pop
jp
sti
loop
repnz
xor
xor
mov
test
cli
jae
mov
lcall
cld
int
mov
xor
stos
cmpsb
icebp
rcr
or
add
jp
shlb
imul
push
adcl
jecxz,pt
jae
mulb
add
pushf
adc
mov
mov
leave
mov
inc
adc
push
adc
xor
pop
or
aaa
pop
push
les
idivl
test
loope
lret
stc
adc
lock
fdivrs
mov
arpl
push
xchg
hlt
xchg
pop
dec
sti
jnp
fldcw
push
loopne
leave
xlat
imul
mov
dec
fbld
cwtl
lods
pop
out
mov
xor
movsl
push
repz
aam
jecxz,pt
or
mov
push
insb
jmp
xchg
pop
and
add
lea
xor
pusha
insb
cli
add
ret
xchg
cld
xchg
das
inc
in
pop
aaa
ds
out
movsb
test
mov
xchg
pop
fdivr
std
ret
jecxz
xchg
sahf
imul
fsubl
mov
cmpsb
fsts
scas
arpl
popf
les
fisubrl
notl
call
hlt
ss
push
adc
xchg
push
das
mov
cmp
in
adc
push
daa
inc
mov
cmpsb
leave
pop
xchg
pushf
push
adc
int3
or
out
jmp
ja
xchg
and
sub
push
aas
out
cmc
fmull
xchg
les
or
inc
lea
fmul
push
sub
andb
add
mov
in
sub
adc
push
es
fdivp
jecxz
or
cltd
das
pop
cmp
jne
mov
sbb
nop
push
mov
insb
sub
jb
js
ret
push
pushf
kaddw
dec
test
loop
cmpsl
sbb
jmp
lcall
clc
je
or
dec
fwait
push
mov
dec
adc
push
mov
cmc
clc
or
inc
cs
jmp
jne
jmp
push
sub
mov
aaa
adc
pushf
insb
or
mov
push
scas
enter
addb
leave
cmp
and
pop
mov
out
xor
push
fwait
add
mov
int
rep
xlat
adc
xor
dec
push
idivb
mov
and
nop
xor
cmp
std
push
aaa
cmp
jnp
loope
push
push
in
loope
aam
pop
mov
cmp
cltd
cmp
lret
push
shlb
sbb
roll
dec
fidivl
sahf
roll
out
dec
pop
mov
popa
or
into
shll
inc
in
adcl
roll
sbb
push
xchg
pushl
lret
call
push
xchg
or
mov
sbb
adc
enter
int
ljmp
andb
mov
lea
push
sub
leave
mov
push
in
pop
dec
dec
jno
stos
jmp
mov
sahf
xchg
test
arpl
pop
dec
mov
mov
fnsave
shl
aad
mov
jge
mov
popf
mov
std
and
daa
jp
lret
rcrb
cmpsl
testb
nop
or
xor
repz
in
cmc
scas
inc
in
inc
and
push
shll
aaa
dec
mov
sarb
cmc
adc
in
out
cmc
sbb
dec
cmp
cmp
in
in
mov
adc
imul
or
lods
push
sub
loopne
mov
jecxz
vpavgw
stos
lods
mov
repnz
adc
js
pop
pop
sub
stos
stc
cmpsl
fdivl
mov
call
mov
jae
and
mov
sub
test
push
jle
pop
ds
mov
sbb
push
stos
cmpsb
pop
adc
loopne
dec
int
into
lret
orl
add
inc
push
mov
xchg
ds
pop
mov
and
fldenv
call
push
out
imulb
mov
mov
fcmovbe
mov
mov
jp
cmp
andb
lods
adc
mov
xlat
outsl
cmp
sarl
outsb
push
dec
adc
jo
adc
jns
push
aaa
pop
fiaddl
leave
mov
pop
inc
decb
scas
lods
fistpl
mov
faddl
int
xor
ss
sbb
movsl
xor
sub
jnp
mov
mov
jae
cmp
rcl
xor
inc
call
sub
jae
push
stc
addb
decl
inc
mov
fs
mov
push
lods
cmp
adc
jno
cmp
xchg
popa
push
add
rcll
lods
sbb
in
push
mov
dec
jmp
aad
mov
cli
mov
mov
dec
aas
dec
sub
dec
xchg
cmc
push
xchg
aas
addr16
mov
in
mov
and
jecxz
xor
adc
popf
stc
mov
pop
jg
mov
enter
stos
jbe
arpl
cmp
pushf
or
add
std
cwtl
push
nop
repnz
lds
shll
popf
shrb
push
mov
adc
or
les
xor
daa
fidivl
pusha
inc
fmul
mov
sahf
iret
ja
push
lcall
pop
mov
mov
test
hlt
mov
inc
xchg
mov
rorl
lcall
in
pushf
xchg
sub
mov
stc
mov
cmp
fwait
pop
cmp
call
and
inc
dec
daa
std
mov
adc
xchg
mov
push
xor
popa
adc
xor
ret
dec
in
test
sub
sbb
xor
ficoms
movsl
sahf
cmp
jmp
stos
jno
xchg
or
pop
push
adc
mov
int
dec
sub
mov
jge
cmp
add
test
inc
andb
jp
jno
or
push
sbb
das
mov
inc
xor
roll
das
or
add
or
xchg
sub
xor
add
and
dec
push
adc
cld
setl
mov
pop
ret
pop
popf
leave
aad
mov
adc
cmp
cltd
xchg
movb
sub
xchg
mov
ljmp
mov
push
pusha
jno
cmp
add
push
push
repz
xor
add
cmp
add
pop
sub
push
dec
xchg
push
and
insl
mov
adc
out
aad
jmp
push
cmc
movsb
inc
jge
sub
jecxz
and
in
sub
mov
js
in
loope
in
push
xor
jl
lds
andb
push
sub
insl
xchg
add
pushf
xor
mov
mov
cs
xchg
ljmp
test
xchg
mov
out
out
mov
dec
push
and
shrl
pusha
jo
fs
pop
inc
cwtl
or
inc
add
inc
add
mov
cmp
insb
stos
add
pop
insb
or
pop
repz
sub
inc
mov
mov
imul
out
push
jns
mov
jmp
dec
pusha
jle
and
mov
cmp
test
mov
xor
aaa
push
and
inc
daa
loope
in
les
cltd
push
inc
out
movsl
mov
adc
cmp
mov
jb
mov
popf
cmpl
fwait
test
cmc
notb
or
adc
in
pushf
pop
mov
xor
push
nop
xor
mov
scas
inc
sbb
cs
sar
jo
cld
jno
inc
insb
mov
fidivrs
push
out
push
lret
in
movsl
sbb
sub
mov
dec
sub
cmp
mov
insl
das
int3
mov
repnz
pushf
je
push
xchg
and
fxtract
push
cmpsb
sub
xchg
pop
lods
idivl
stos
sysret
adc
je
aad
scas
mov
pop
cltd
xor
push
mov
xchg
xchg
sbb
pop
lods
sbb
mov
jecxz
mov
and
movsb
push
sub
js
or
sub
aam
dec
xor
xchg
insb
add
mov
loopne
loope
mov
in
je
inc
sbb
dec
rorl
mov
add
sub
sbbb
mov
repz
or
jnp
push
repnz
xchg
xor
cli
xchg
jae
fbld
push
jae
xor
stc
jne
mov
pusha
mov
test
or
xor
adc
push
aas
gs
in
jp
mov
aam
arpl
mov
ret
mov
xor
fwait
jb
fcompl
or
aaa
jp
mov
test
faddl
and
xor
dec
jle
add
clc
test
cwtl
pop
test
gs
ds
dec
test
stos
shll
clc
or
mov
sbb
cld
push
fldl
inc
jp
je
mov
pop
and
add
lret
add
mov
and
rcrl
in
ljmp
lds
xchg
or
mov
xor
sahf
cmp
es
sub
xchg
les
pop
ds
popf
sbb
or
xor
push
bound
ss
and
jmp
ss
push
push
rcr
cmp
xor
stc
xchg
in
lcall
dec
jns
fwait
push
sbb
enter
in
fs
cmp
adc
ds
push
into
push
mov
lret
push
xchg
and
xchg
mov
sub
leave
pop
cmp
fwait
jg
adc
xchg
cmp
pop
ret
jae
lods
cs
or
jbe
xor
push
pusha
cld
pop
call
sub
ljmp
bound
push
test
adc
fisttpll
xor
add
sbb
mov
fmul
loope
loop
fdivrp
in
pop
jmp
rcrl
loopne
jecxz
jo
jae
movsl
lods
out
or
sbb
xor
push
fdivs
imul
sti
jg
mov
mov
pop
inc
sub
sbb
sbb
push
sbb
dec
in
jp
sub
mov
mov
loopne
pop
test
jmp
xchg
jo
jge
pop
push
pop
enter
cmpsb
jbe
pop
int
arpl
or
or
jle
ja
sbb
push
cmp
mov
movsl
imul
out
repnz
mov
outsl
js
insb
test
leave
rorl
iret
cmc
aaa
jle
sti
jge
in
inc
xchg
or
mov
xor
cmp
mov
jge
call
sahf
dec
js
mov
subl
and
sub
aad
mov
aam
pop
and
jo
fisttpll
pop
insb
orb
sti
ret
add
pushf
jns
lret
ret
pop
out
fwait
jb
out
stc
add
lods
in
push
imull
xor
jno
in
adc
or
sub
pop
cld
lock
pop
pushf
nop
fistl
dec
cmp
shll
mov
cmp
scas
mov
stc
popf
fimuls
and
inc
dec
adc
mov
movsb
ret
cltd
mov
arpl
or
fistl
pop
mov
cmp
pop
inc
lea
imul
xchg
push
pushf
xor
dec
lret
or
sbb
xchg
ljmp
push
xchg
xor
pop
mov
loopne
cmp
cmc
enter
addl
sbb
adc
or
gs
insl
stos
sub
js
daa
fimull
int
mov
ror
xchg
aas
mov
adc
test
jmp
dec
mov
fwait
testl
jnp
aad
fdivl
dec
or
sub
in
sbb
pop
sbb
mov
roll
jecxz
cmpsl
daa
cmp
decl
push
pop
sbb
pop
mov
mov
pop
mov
mov
cld
cmpsb
xor
repz
dec
push
hlt
es
xor
not
pusha
sbb
and
imul
repz
ja
jge
flds
cltd
adc
pop
out
fcmovbe
ficoml
sbb
adc
mov
xchg
mov
loop
imul
push
call
int
sbb
or
add
push
mov
mov
loope
in
fildl
int
hlt
push
xor
test
xchg
pop
insl
js
test
push
mov
and
or
jge
xchg
jne
rcrl
cltd
or
mov
and
incl
and
adc
and
add
xchg
rolb
repnz
ss
mov
xorb
push
in
mov
decl
inc
sbb
and
aam
fnsave
aad
xchg
mov
imul
cmp
push
mov
lcall
mov
subb
aad
outsb
mov
xchg
xor
dec
sarl
jl
jl
cli
inc
cltd
ret
inc
or
xor
dec
iret
add
mov
or
test
xchg
inc
push
jmp
inc
jb
jae
pop
out
mov
add
out
adc
sub
ret
loop
cmp
mov
dec
xchg
out
imul
xchg
mov
out
cmpsl
mov
mov
movl
mov
push
jne
ja
push
outsl
popw
test
jno
fdivl
sub
fimull
out
and
jno
lahf
fbstp
fldt
dec
fiaddl
fcompl
add
mov
std
loope
pop
sbb
mov
fcmovne
ds
paddw
jb
xor
out
fidivs
pop
lret
pusha
fsts
mov
push
push
xchg
dec
cmp
movsl
pop
shrb
cmp
dec
test
outsb
fiadds
outsb
adc
int
lahf
mov
stc
mov
dec
ret
daa
pop
out
or
jo
inc
outsl
push
pop
jnp
das
mov
test
mov
push
mov
push
adc
popf
in
mov
jg
cwtl
or
idivl
enter
sbb
cmp
and
jmp
inc
imul
sbb
cmp
xor
dec
ror
mov
ljmp
sbb
or
imul
ds
outsb
jns
dec
aad
mov
mov
or
mov
lahf
sbb
mov
mov
mov
push
sbb
jp
decb
lods
cmp
in
int3
lahf
cld
sahf
mov
xor
shlb
inc
xor
add
lods
fisttpll
mov
movsb
cmp
cmp
mov
mov
mov
fdivs
decb
cld
shlb
mov
mov
and
or
sub
lods
daa
movntq
dec
stos
push
or
inc
push
sbb
data16
sarb
cmp
mov
stos
jbe
or
or
mov
sub
decb
ss
cmp
mov
aam
enter
xchg
mov
aad
push
xchg
or
or
mov
fcomps
xor
add
mov
movsl
and
lret
orl
jle
add
jmp
ficoml
cmp
jno
and
xchg
test
test
ljmp
jo
lahf
and
inc
xor
add
fldcw
add
notb
pop
mov
ja
mov
sub
cmc
jo
mov
inc
fucompp
int3
jb
mov
cmpsb
add
mov
add
inc
cwtl
sub
jmp
mov
sbb
pop
daa
mov
inc
cmp
daa
into
adc
dec
cmp
xor
sbb
xchg
xchg
mov
inc
ss
jecxz
div
lock
jmp
iret
mov
xor
adc
add
incb
bound
adc
push
push
je
sti
fneni(8087
repz
adcl
inc
aad
xchg
nop
addb
imul
int3
push
jb
mov
dec
cltd
fmull
arpl
andl
inc
pop
and
aaa
dec
insl
adc
dec
in
gs
shrb
mov
popa
mov
out
aas
nop
ja
cmp
popa
sbb
outsb
in
pop
cmp
loop
arpl
dec
addr16
mov
mov
sbb
pop
xor
data16
and
or
push
mov
cmpsb
lahf
test
xchg
test
xchg
mov
incb
or
outsl
call
in
hlt
pop
js
shlb
cmp
ret
fcom
inc
das
test
shrl
sahf
lds
cmc
ljmp
add
in
jnp
sbb
inc
or
fs
sarl
adc
mov
mov
icebp
inc
repnz
ret
mov
mov
std
ret
jns
ja
mov
xchg
sub
into
or
mov
sbb
dec
cmp
and
std
push
jecxz
test
lahf
cmp
mov
popf
mov
jp
mov
daa
test
sub
mov
sub
mov
out
inc
mov
jbe
into
rcl
rcr
push
dec
hlt
aas
stos
in
ret
pusha
mov
cmp
sbb
mov
and
and
into
cwtl
icebp
clc
push
or
jns
in
jno
sub
arpl
jp
sbb
mov
push
push
outsb
pop
rorl
popl
insl
sub
daa
in
push
push
cmp
fsubl
out
xchg
pop
xchg
push
xchg
jle
xor
pop
jge
push
mov
xchg
call
movsb
out
fdivs
rorb
scas
jbe
jl
cmp
sahf
fs
jp
iret
insb
mov
cmp
jmp
mov
test
ljmp
lods
test
scas
dec
or
das
test
cli
cmp
sahf
ret
cmc
addr16
add
sub
inc
in
xlat
lds
popf
cmp
xchg
add
push
dec
push
jbe
mov
cmp
inc
je
bound
data16
fldt
and
inc
xor
jmp
loop
into
mov
dec
mov
and
jmp
jl
xor
sbb
jns
push
adc
pusha
adc
mov
lds
into
movl
testl
neg
inc
sahf
xchg
lds
js
sub
or
add
sbb
and
add
sbb
mov
lcall
push
mov
lods
jnp
rcl
and
cmp
inc
pop
cmp
mov
out
sbbl
mov
je
mov
dec
xchg
lcall
andb
jp
mov
js
xchg
sbb
out
mov
in
addl
or
and
sub
pop
inc
xchg
sbb
mov
sti
dec
pushf
xlat
xchg
andb
testb
push
and
js
loope
stos
sub
sbb
or
negl
ret
sub
adcl
divb
aad
mov
jns
dec
out
shl
jns
inc
dec
fcos
jae
lods
sahf
pop
outsl
fadds
fcomp
pop
adc
bound
loop
and
dec
and
jecxz
aam
dec
dec
mov
enter
dec
or
sti
mov
notb
inc
push
adc
out
or
push
xchg
sub
es
and
cmpsb
mov
cmc
cmpsb
mov
lods
ljmp
or
or
and
in
add
add
repz
and
jp
inc
or
inc
cld
movsl
pop
or
lahf
jne
pop
dec
pop
xchg
cmp
pop
daa
push
xchg
mov
push
test
pop
fwait
and
push
fwait
gs
jmp
jae
mov
and
xchg
or
mov
mov
in
clc
movsl
lds
call
and
les
mov
xlat
jge
jl
loopne,pt
pop
test
adc
lods
out
and
adc
sub
dec
mov
fsubrs
call
in
xor
push
mov
fldl
insl
mov
adcb
dec
sbb
or
mov
inc
cs
ret
and
jp
fwait
cmpsl
cld
pop
pop
push
popf
push
int3
jb
push
xchg
and
popa
cltd
add
std
push
and
neg
subb
iret
cwtl
in
in
xor
jp
leave
inc
lds
xor
lret
cmpsl
cs
les
mov
xchg
decb
add
xchg
in
pop
jmp
sbb
and
pop
ljmp
pop
aad
inc
repnz
and
cmpsl
in
dec
adc
inc
in
xor
cs
mov
pop
hlt
fisubrs
adc
xchg
stc
pushf
cmp
mov
movsl
mov
inc
xchg
inc
test
xchg
dec
bound
pop
xchg
es
scas
pushf
push
insl
dec
or
mov
data16
xchg
mov
add
fistpll
mov
jo
cmp
sahf
lcall
cmp
cmpb
or
out
pop
xorl
rcll
popf
add
inc
negb
xchg
adc
aaa
testl
cmp
jns
loop
add
fidivrl
push
jbe
mov
pavgw
das
cmp
pop
or
nop
les
add
jmp
xchg
or
mov
xchg
sub
cli
add
sbb
ret
mul
pop
push
dec
es
cmp
adc
iret
bnd
push
fdivrl
cmpsl
mov
mov
pusha
scas
outsl
repnz
xchg
mov
out
mov
sub
cld
mov
in
sub
push
xchg
jns
out
xor
jns
fisttps
outsb
and
xchg
pop
mov
mov
repnz
push
fistpll
dec
std
push
mov
je
mov
pop
fstpt
je
in
arpl
mov
xor
daa
in
jno
mov
popa
ficoms
rcrb
push
pop
cmp
mov
jle
scas
test
dec
insb
and
lret
mov
mov
daa
push
xchg
cmpb
les
ficompl
xlat
cmp
rcll
cmp
xchg
xchg
ret
cmp
jge
imul
adc
imul
data16
xchg
xchg
xchg
pop
addr16
subps
and
ret
inc
orb
in
imul
and
inc
jge
cltd
xor
jo
cmp
xor
fdivs
test
adc
lret
fldcw
cmpsl
mov
sub
jo
and
pushf
lcall
lahf
mov
dec
lods
dec
mov
outsb
inc
addr16
in
mov
repz
xchg
mov
add
orl
push
sub
movsb
sbb
lcall
mov
cmp
pop
cmp
cli
jmp
cld
pop
inc
or
jne
ljmp
lods
aam
pusha
cmp
lcall
or
mov
and
aam
cmpl
mov
push
out
inc
push
sbb
cmp
push
out
je
lock
outsl
stos
out
push
adc
je
lret
mov
xor
cmp
aaa
ret
lds
jno
loopne
mov
inc
xchg
inc
nop
mov
jno
push
jae
nopl
out
push
fldcw
outsl
nop
iret
aad
es
inc
sbb
popf
xor
xlat
add
int3
into
xchg
push
pop
or
xor
sbb
cmpsb
rolb
outsb
jnp
inc
ret
imul
adc
pop
repnz
shlb
add
jae
xor
rorl
mov
push
sbb
mov
adc
xchg
or
pop
fildl
push
insb
rcr
add
or
jo
lahf
add
out
in
sub
mov
xchg
jle
mov
mov
mov
dec
sbb
sub
xchg
test
jne
clc
and
sbb
imull
pop
lcall
cmpsl
pop
test
dec
bound
cwtl
into
ret
addl
pop
shlb
jnp
icebp
lea
sub
leave
push
jge
leave
mov
and
inc
dec
sub
rclb
and
aam
in
shll
imulb
or
mov
cld
pop
push
imul
dec
mov
das
lret
inc
loop
mov
addr16
pop
es
repz
inc
repnz
arpl
xchg
cmp
pop
sbb
shrd
mov
mov
jecxz
aaa
rorb
imul
mov
xchg
outsl
push
mov
ficompl
sbb
adc
xor
sub
lahf
push
mov
push
loop
cwtl
xchg
sarb
jg
xchg
cmpb
aaa
js
cs
dec
ljmp
pop
je
cmp
scas
or
je
rcll
shrl
jae
xchg
je
std
and
add
addr16
imul
sub
aam
adc
adc
std
stc
rcll
mov
ffree
mov
cld
ret
push
in
mov
dec
ror
jge
push
or
lahf
xchg
cmpsb
dec
or
cmp
mov
mov
je
popa
cmp
pop
scas
push
sti
divl
ja
jle
stc
mov
lret
adc
xchg
cltd
std
push
lcall
pop
js
jo
loope
sbbb
enter
sub
aad
adcb
sub
sahf
in
outsl
jae
jne
xor
clc
adc
sbb
cld
in
add
data16
or
pushf
push
loop
mov
mov
rorl
xor
testb
rcrl
das
or
pop
jl
ss
xchg
popf
bound
pusha
push
xor
out
cmp
push
in
mov
xchg
outsb
pop
xor
int3
mov
lods
cs
jl
mov
push
mov
mov
cltd
lret
je
push
icebp
fsubrl
mov
mov
cmp
pop
jno
rol
fstpt
mov
and
cs
push
fstps
cltd
ror
dec
daa
cmpsl
fwait
dec
push
sub
data16
shlb
enter
xchg
dec
cmpsl
pushf
stos
jle
repz
imul
sbb
mov
fs
mov
mov
jns
es
mov
add
sub
xchg
mov
negl
sub
jecxz
xorb
cltd
shl
mov
xchg
test
cmp
popa
cmp
push
fnstsw
xchg
jmp
and
aam
push
dec
jo
pop
add
dec
sbb
lret
aam
sub
adc
add
mov
adc
sbb
in
sti
lds
fwait
sbb
lea
or
cmpsb
mov
adc
arpl
inc
xor
inc
sbb
shrl
ret
sub
fildll
fcoms
push
jmp
insl
dec
les
or
cmp
pop
aas
divl
lock
jl
test
pop
mov
xor
test
idivb
jb
shrl
fld
mov
push
sbb
sub
lea
mov
xchg
adc
push
loope
mov
mov
es
sahf
sub
adc
iret
jae
push
shrl
xchg
scas
mov
adc
dec
adc
jno
repnz
inc
lods
ja
adc
testl
test
or
lds
arpl
aaa
lret
add
scas
jl
sub
pop
imul
push
jno
outsl
xor
push
aaa
sbb
xchg
pop
cld
inc
or
fidivl
movsb
cmpsl
nop
shl
pop
inc
dec
xchg
jno
movsb
xchg
mov
jp
mov
shlw
scas
sbb
bound
pop
cld
ljmp
mov
jle
mov
sbb
jge
rcll
in
xchg
shrb
dec
jmp
fnstenv
testl
cli
inc
mov
jecxz
push
in
dec
jecxz
dec
test
rcll
iret
jge
cmpsl
mov
movsb
jb
pop
pop
push
test
jge
mov
icebp
lret
cmp
inc
push
aas
je
loopne
js
mov
dec
adc
pop
sub
jp
stos
inc
xchg
gs
adc
imul
push
adc
imul
xor
mov
inc
sbb
hlt
pop
das
mov
stc
xchg
out
pop
inc
mulb
stos
xchg
cmpsl
aam
mov
pushf
mov
in
loopne
js
sbb
dec
mov
ret
call
sbb
cmp
xchg
adc
push
leave
fmull
inc
push
xchg
mov
lods
lods
sti
lds
xchg
imul
cmc
inc
sbb
and
xchg
inc
repz
xchg
cmp
lods
cmp
or
pop
jnp
call
fiadds
mov
jne
dec
icebp
out
mov
fldt
repnz
insb
pop
scas
mov
stos
inc
je
push
and
xchg
pop
adc
pop
pop
insb
test
xchg
ficoml
stos
enter
push
ljmp
mov
jle
out
js
insl
lock
mov
push
adc
call
mov
into
aas
inc
and
sub
mov
shrl
repz
cmp
sbb
push
xchg
jmp
pop
xor
insb
mov
fmull
mov
shll
mov
xor
bts
or
mov
ret
out
stc
cwtl
adc
es
pop
test
add
mov
shl
out
jmp
add
fildl
xchg
xor
lea
mov
stos
orl
in
xchg
mulb
pop
add
mov
mov
jmp
adc
jne
pop
inc
or
adc
arpl
mov
pop
ljmp
sbb
ret
adc
mov
cwtl
cwtl
insb
cwtl
sub
push
inc
movb
into
mov
shl
rorl
lret
test
push
sbb
sti
iret
sahf
jp
repz
daa
lret
or
loopne
shlb
mov
cmp
test
sub
push
jb
jge
jnp
jns
xor
or
xor
fwait
andb
mov
sahf
and
or
imul
jns
mov
xchg
xchg
cwtl
fnstsw
nop
scas
push
or
mov
imul
xchg
adc
cmc
insb
inc
sub
imulb
and
jle
sti
sub
sbb
ficompl
push
decl
mov
lea
cmpsl
nop
mov
push
fnsave
lret
mov
inc
mov
rcrb
ror
mov
cmp
cmp
or
jg
shrb
mov
cltd
test
sahf
sahf
shll
ds
push
dec
mov
ret
lods
add
dec
jp
xchg
sbb
roll
add
xor
and
add
sub
scas
mov
leave
sarb
lock
cmpsb
or
push
sub
xchg
sbbl
xchg
movl
test
or
sub
sub
loop
dec
lcall
fdivp
cmp
fdivrp
hlt
pop
mov
jno
das
pushf
into
repnz
adc
push
cwtl
scas
xor
mov
adc
gs
jle
mov
stos
iret
jp
inc
pop
push
xchg
cwtl
add
out
enter
cmpsb
pop
roll
test
aad
sub
cli
das
jp
fnsave
decb
rcr
inc
loopne
jno
xchg
daa
cs
inc
and
mov
loop
test
mov
shll
or
sbb
jae
int
in
lahf
scas
aam
subb
inc
dec
inc
pop
dec
sub
int3
js
mov
or
in
mov
test
in
jl
int
cmc
int
fs
jnp
std
pop
repnz
int3
movsb
pop
shll
sub
mov
repz
mov
xor
in
mov
fcompl
xchg
sbb
ret
test
inc
test
test
inc
mov
icebp
mov
shll
ljmp
and
mov
ja
inc
daa
jp
xor
pop
mov
in
or
shrb
adc
add
push
xor
out
fistl
or
pushf
pextrw
mov
push
out
jmp
sbb
and
mov
mov
bound
ja
std
loop
es
sbb
push
decl
imul
push
decb
repnz
iret
add
push
jl
or
stos
cmpsb
sub
mov
sbb
mov
sbb
shlb
lds
mov
pop
ja
cli
test
orl
jne
cmpsl
icebp
mov
scas
in
or
pop
mov
mov
pop
push
movsl
mov
sbb
push
pop
arpl
inc
jae
add
cli
lock
push
pop
in
addb
pop
mov
mov
repz
cmpsb
mov
bsf
movsb
je
es
test
scas
cmp
rcrb
cmp
mov
xorl
push
xchg
aaa
and
lcall
mov
lock
fdivs
adc
dec
mov
and
xchg
mov
adc
xchg
and
ret
xchg
stc
inc
inc
push
pop
mov
loopne
xchg
mov
mov
mov
sbb
mov
sbb
pop
push
push
movsl
hlt
dec
push
lret
xchg
jb
inc
movsl
mov
out
int3
add
in
jnp
outsb
ja
xor
cmp
loop
lea
push
sbb
xchg
test
jecxz
int3
mov
outsb
jb
jg
sub
imul
outsb
icebp
push
mov
mov
or
or
push
movsl
outsl
jmp
and
xor
push
test
adc
js
sbb
xchg
ljmp
fs
mov
and
out
data16
adc
push
nop
addr16
xchg
je
fnstsw
xlat
decl
mov
ror
inc
es
call
xchg
cltd
or
dec
cli
xlat
jno
adc
imul
mov
cmpsb
icebp
dec
xchg
insl
sub
xchg
jno
test
repnz
ljmp
out
add
inc
es
sub
or
loope
js
in
out
sbb
imul
dec
insl
sbbb
push
test
or
rcrl
jbe
cltd
fisttps
pop
lahf
fsubrs
fnstsw
fisttps
in
roll
sub
fistpll
test
inc
xchg
pop
xchg
sub
rcrb
movsl
repnz
pop
jae
mov
stos
call
push
repnz
or
mov
mov
push
mov
test
xchg
push
mov
das
scas
repz
sbbb
sbb
inc
test
out
call
jmp
mov
divb
int
inc
inc
pop
xchg
pop
shll
test
jns
sbb
jge
xchg
and
push
pop
pop
xchg
sbb
sbb
sub
inc
push
jg
data16
scas
pop
mov
jle
pop
and
gs
ret
lahf
pop
test
sub
insl
xchg
sub
mov
jge
mov
mov
jl
xchg
push
mov
cltd
ret
outsb
xor
mov
and
and
pushf
jne
dec
sub
sub
mov
push
or
dec
fidivrs
push
sub
push
in
repz
shl
fisttpll
push
test
mov
out
jae
jmp
dec
cmp
aad
arpl
scas
jno
dec
inc
or
mov
and
and
add
int
xchg
daa
add
jnp
aad
pushf
pop
sub
xchg
outsb
lock
fcomps
int
cmp
icebp
mov
sahf
jb
xorl
add
or
mov
mov
sub
js
dec
push
fidivl
add
repnz
sarb
or
cwtl
and
ss
int
pusha
inc
scas
outsb
movlps
xchg
sub
add
adc
outsb
lds
cmc
inc
xor
push
clc
sti
aas
dec
iret
sbb
sub
mov
pop
push
mov
jmp
fwait
stc
sbb
in
xchg
lods
das
xor
pushf
adc
mov
std
jns,pn
dec
cmp
and
sarl
pop
mov
dec
push
pusha
or
inc
xchg
add
sub
sahf
jl
popf
pusha
std
sahf
inc
ds
aam
leave
test
push
pop
or
jg
add
push
aas
sbb
pop
mov
in
mov
aam
cmpsb
and
sbb
push
mov
lock
stc
jmp
pop
adc
fsubs
std
scas
test
inc
setg
sbb
add
je
test
mov
xchg
sbb
jo
outsb
add
orl
lret
icebp
es
int3
inc
out
aaa
jp
cltd
in
sbb
add
dec
inc
in
push
add
jnp
push
inc
loopne
dec
cmp
loop
mov
inc
js
sbb
in
dec
js
pop
mov
add
iret
xchg
pop
mov
xlat
cmpl
popf
xchg
dec
iret
outsl
adc
pop
cmp
scas
cmpsb
clc
dec
cmpsl
jg
xor
jae
xchg
leave
and
shlb
test
inc
subl
adc
jo
jecxz
hlt
lods
jns
lea
imul
sub
mov
out
sub
filds
mov
adc
cmc
movsb
ret
mov
ds
push
and
imull
inc
movsl
mov
mov
in
lock
aas
sub
lret
mov
cmc
loop
inc
cld
jno
xchg
inc
loope
stos
push
js
shlb
and
xchg
fdivrp
fsubr
mov
xor
jno
movsl
insl
and
sti
adc
mov
jns
scas
cmp
icebp
cli
cwtl
inc
xchg
sub
lret
pop
jno
mov
fs
gs
ret
lods
into
ja
pop
es
pop
scas
pop
adc
inc
sahf
nop
xchg
wrmsr
push
loope
ror
hlt
test
daa
push
xchg
cmpsl
ficompl
xchg
mov
mov
push
out
dec
repnz
xchg
rcl
ret
clc
jbe
fbld
inc
inc
and
iret
or
push
mov
rorb
push
imul
dec
andb
inc
mov
fadd
push
mov
cmp
push
inc
dec
enter
sub
adc
fmull
pop
out
loop
cmp
jle
xchg
lock
outsl
cmp
imul
bts
pop
ss
in
psadbw
jae
negb
push
lds
jae
cmp
inc
push
mov
call
cwtl
ret
clc
mov
ficompl
fdivrs
cwtl
sbb
loop
mov
jae
xchg
dec
jne
pop
cmp
into
mov
and
pop
xor
mov
loope
xor
sbb
out
call
mov
sahf
sti
mov
mov
add
push
pop
insl
mov
icebp
dec
and
xchg
xchg
jge
in
or
enter
inc
cli
xchg
sar
fistpl
div
data16
mov
sbb
xchg
push
jle
orb
inc
loop
data16
sub
bound
mov
xchg
insl
es
stos
xchg
mov
inc
or
mov
sbb
push
dec
add
test
cmpsl
test
stos
call
pop
fdivrs
dec
sahf
adc
jb
jg
mov
roll
clc
std
cli
mov
sbb
ret
out
arpl
outsb
enter
cmpsl
mov
push
and
pop
jecxz
and
dec
cmp
adc
imul
ret
andb
xor
mov
dec
add
add
popa
or
scas
dec
test
aaa
mov
cwtl
mov
push
dec
dec
jg
ss
test
mov
test
mov
xlat
adc
and
enter
sub
sub
pop
dec
leave
fucomip
cltd
int
mov
or
jns
pusha
stc
gs
sbb
mov
push
test
das
movsl
pop
cmp
insb
hlt
cmp
aaa
adc
or
cs
icebp
push
es
stc
pop
cmpsb
pop
pop
aad
pop
call
or
or
sbb
jb
push
ret
inc
push
enter
pop
mov
test
push
cmpsb
scas
mov
test
cmp
daa
xchg
popa
sbb
ljmp
jne
in
mov
mov
fwait
mov
psubusw
add
aad
hlt
iret
mov
dec
jecxz
mov
fmul
ret
sub
movsb
sbb
cmp
std
out
and
cltd
push
cltd
lea
call
cmpsl
outsb
flds
or
cmc
inc
mov
imul
and
cltd
xchg
pusha
push
push
fnstenv
xor
into
stos
ret
mov
ja
mov
push
and
faddl
in
js
jb
fidivl
dec
xor
jge
shlb
push
aaa
xor
jno
cld
and
xor
cmp
lods
dec
xor
mov
test
lret
adc
in
enter
push
in
test
push
sbb
mov
dec
ret
or
push
xchg
push
xor
icebp
lea
mov
fldcw
pop
xchg
ss
sub
mov
sti
inc
into
mov
pop
add
xchg
movsb
xchg
mov
mov
mov
xor
sbb
cmp
mov
mov
adc
addr16
xchg
in
mov
mov
add
sbb
rorb
mov
pushf
mov
mov
rcr
in
adc
xchg
clc
mov
mov
or
cwtl
test
push
and
gs
je
jge
mov
push
cmp
cs
ja
sub
jecxz
dec
dec
xchg
jae
mov
flds
insl
add
or
fnstenv
loopne
imul
das
les
mov
in
ret
dec
stos
push
adc
pop
insb
js
outsb
jns
mov
sbb
pop
aam
cld
fidivrs
jle
lods
sub
ja
ds
loope
cld
jo
jno
sbb
pop
cmp
push
pcmpgtd
shll
jno
cmp
inc
add
push
loope
andl
jns
mov
in
aaa
sub
adc
popa
cmp
or
jo
cs
push
mov
sub
rcrb
lahf
mov
cmp
test
mov
xor
movsb
lret
lock
xor
inc
daa
vcvtsd2ss
rolb
cmp
pop
test
aaa
mov
inc
int3
xor
add
sub
pusha
cmp
aad
cmp
nop
xor
in
cmp
cmp
and
js
push
and
repnz
movsb
faddl
js
iret
xchg
jne
add
inc
dec
movsl
test
sub
adc
dec
push
lock
pop
lods
fidivrl
gs
test
inc
test
dec
hlt
aas
ljmp
xor
mov
shrl
dec
std
xchg
xchg
aad
adc
push
or
or
das
cltd
pusha
xchg
out
add
adc
aad
xchg
pop
and
push
cmp
xor
jle
inc
mov
loopne
push
lret
popf
or
inc
lods
ss
xor
into
xor
xor
and
loop
leave
jbe
loopne
cmp
cmpsl
out
repnz
ret
es
adc
shl
xchg
jnp
hlt
jns
mov
cwtl
jmp
je
fnstsw
sub
mov
and
repz
jmp
xchg
dec
mov
dec
lea
mov
cmp
and
pop
fisttpll
mov
inc
dec
negb
iret
mov
adc
std
pusha
loop
scas
outsb
sub
xchg
xchg
inc
dec
mov
scas
lods
mov
insb
sub
lret
and
stos
lret
or
jmp
bound
dec
adc
ret
cwtl
adc
mov
inc
dec
pushf
in
shr
mov
lods
je
and
mov
lcall
mov
jge
jecxz
mov
gs
lods
jg
mov
xchg
shll
imul
stos
cwtl
cmp
inc
push
lock
xchg
dec
mov
enter
add
push
in
std
ret
mov
push
aam
scas
or
mov
js
scas
fistpl
pop
addr16
fnstsw
jb
repnz
pop
jl
jp
xchg
cmc
xchg
mov
mov
daa
loope
pop
in
fildl
pop
ja
cmp
mov
out
enter
inc
sub
cmp
xchg
or
mov
sub
loope
cmp
cmc
adc
sub
jg
xchg
hlt
loopne,pn
sbb
gs
mov
cmpb
sti
inc
cmp
adc
mov
into
or
push
jo
cmp
ds
xor
sbb
xchg
push
push
push
dec
ret
mov
mov
pop
inc
sub
mov
ja
pop
fs
dec
lods
pop
pop
jae
push
lret
and
jge
lock
and
mov
ds
sub
inc
dec
lods
sub
mov
movsb
sub
jl
xchg
fbstp
repnz
mov
adc
jmp
aad
sbb
js,pn
cmpsl
sahf
andl
daa
shrl
ss
xchg
or
fiadds
xor
pop
roll
std
call
sub
arpl
hlt
mov
rolb
daa
jmp
scas
rorb
repz
add
lods
xor
mov
scas
xchg
inc
roll
xchg
fwait
jmp
pushl
imul
in
push
into
add
lret
push
pop
inc
divps
or
mov
outsl
adc
fsub
or
adc
xchg
push
addr16
adc
rorl
popa
cmp
dec
xchg
pop
mov
mov
inc
cli
out
fcmove
pushf
cs
pop
gs
mov
dec
inc
xchg
int
fldcw
imul
jnp
mov
sbb
call
test
or
rorb
xchg
and
call
add
into
xchg
shrl
cs
stos
fsubr
or
inc
mov
out
mov
lods
dec
pop
adc
or
jle
dec
and
jmp
mov
ret
adc
fs
mov
pop
mov
xor
push
stos
fistpl
into
or
sti
push
imul
xor
adc
shrl
je
arpl
je
jo
test
pop
mov
sarl
stos
xchg
loop
push
pop
dec
push
jo
inc
or
mov
mov
ljmp
dec
inc
and
lahf
dec
mov
data16
xchg
outsb
cmp
jo
push
inc
fsubrl
mov
pop
call
lcall
in
mov
add
push
dec
or
or
adc
insl
mov
jne
pop
mov
testl
push
jecxz
mov
jae
fwait
xchg
fbstp
decl
push
xor
inc
pop
adc
dec
popw
inc
lret
or
xchg
movb
or
inc
jne
jp
xor
mov
mov
add
fidivrl
and
pop
pushf
sub
lds
dec
fs
mov
out
pop
stos
jae
popf
subb
clc
adcb
lods
je
or
fs
in
mov
xor
xor
push
or
push
insb
or
cmc
repnz
inc
inc
xor
fnstsw
or
dec
add
popf
or
and
call
loopne
ret
adc
push
out
xor
xchg
sahf
rorl
pop
xchg
into
out
daa
aaa
adc
push
sbb
dec
cmovp
lock
inc
popf
loopne
dec
jecxz
ljmp
test
xchg
xchg
pop
test
rorb
popf
data16
adc
dec
imul
pop
sub
jno
pop
mov
addr16
enter
enter
outsb
mov
mov
inc
mov
xor
mov
test
imul
mov
sbb
or
dec
aam
push
pop
hlt
pop
jae
mov
pop
jle
mov
aas
sahf
pop
jecxz
nop
int
or
push
jae
push
stos
popa
test
lea
dec
popa
adcb
fwait
fs
sbb
jl
gs
push
mov
inc
add
lds
cmp
cs
in
es
add
mov
icebp
sub
mov
lea
call
add
sub
pop
cmp
push
inc
add
or
xor
es
stos
inc
inc
jbe
mov
jb
mov
add
fwait
add
adc
hlt
in
lods
inc
call
xchg
clc
mov
jle
dec
mov
or
aad
pop
mov
out
loope,pt
jecxz
push
lods
idivl
jae
or
xor
in
mov
or
mov
aad
jl
inc
testb
adcl
cli
mov
ss
dec
or
ror
leave
loope
lds
jg
mov
rolb
rol
mov
test
mov
pop
inc
enter
adc
shrb
adc
pushf
mov
jb
icebp
cmp
sbb
ret
ja
cmp
lds
aam
mov
inc
fcmovne
stos
push
int
jge
dec
mov
and
jle
jne
add
adc
or
inc
inc
imul
push
adc
add
mulb
shll
fistpl
repz
ds
pop
jbe
lea
mov
pop
loope
rcrl
xor
and
xchg
movaps
aas
mov
ds
movl
hlt
jne
xchg
jns
sti
mov
adc
push
shrl
in
popf
outsl
stc
add
pop
stos
and
sub
mov
inc
aas
daa
jbe
mov
add
push
in
dec
das
push
cmpsb
xchg
imul
and
cmp
adcl
jmp
out
mov
stc
or
add
xlat
andb
icebp
or
fidivs
mov
stos
xlat
addl
jo
rcrb
and
cmpl
aad
mov
cli
ds
and
mov
rcrb
ja
mov
aas
jno
sahf
or
out
dec
mov
cli
push
ds
add
and
and
dec
mov
fadds
test
jle
cmp
adc
fcmovnbe
xchg
jecxz
movsl
in
cmp
sti
sbb
mov
and
fdiv
and
pusha
cmp
fs
cs
mull
jns
das
mov
pop
loope
sbb
aam
dec
mov
jmp
xchg
out
insb
add
iret
sub
xor
jne
out
add
and
pushf
iret
pop
dec
insl
pop
out
mov
push
test
jmp
sbb
jge
inc
push
loop
adc
cmp
mov
rorl
repz
into
sub
add
cltd
es
fwait
fwait
in
aad
popf
sub
add
xchg
xlat
or
and
mov
and
mov
pop
repz
jae
cwtl
and
icebp
idivl
adc
cmp
test
mull
lret
filds
inc
cltd
fdivs
push
adc
arpl
xchg
cmpsl
jns
pop
clc
outsl
or
jmp
cli
ja
pop
sub
push
jmp
fildl
iret
or
xchg
and
sarb
inc
push
lret
mov
test
jmp
jno
js
inc
imul
repnz
cmp
push
lock
out
imul
xchg
ret
inc
mov
clc
in
sub
xchg
inc
cmp
cmp
cmpsb
jge
iret
enter
xchg
pop
hlt
pop
jns
mov
inc
xchg
aam
inc
cmpsl
pop
cmp
jb
stos
mov
xchg
fmuls
jmp
sbb
test
push
or
and
aaa
sbb
jae
popa
mov
cmp
std
adc
loop
jnp
ret
mov
and
pushf
fisubrs
dec
jecxz
push
push
cmp
sarb
ljmp
cli
cmpb
in
cmc
addr16
pop
fiaddl
pusha
fidivl
mov
mov
mov
js
mov
push
mov
imul
add
hlt
stc
mov
xchg
aad
ds
out
fcmove
cltd
mov
mov
out
out
cmc
int3
push
mov
stc
or
and
in
dec
mov
cmp
loop
adcb
xor
jmp
xchg
inc
inc
push
pop
mov
adc
int3
scas
jle
cwtl
mov
dec
jbe
push
clc
jne
movsl
push
fisttps
loopne
dec
pushf
add
imul
jno
pop
divb
xor
daa
dec
das
push
inc
xchg
or
loopne
jecxz
push
xchg
inc
hlt
arpl
fs
insl
outsl
icebp
ficoms
mov
es
or
out
fnsave
dec
fwait
cmp
mov
rep
jg
xchg
pop
add
mov
int3
fidivs
xchg
cmc
test
lea
xchg
sbb
addr16
or
dec
icebp
mov
das
add
adc
rcll
pop
inc
int
cmc
xchg
aas
cli
pop
fnsave
enter
sahf
in
pop
jmp
sub
xchg
lret
jns
les
shll
stc
jnp
cltd
inc
mov
testb
xor
mov
fcomps
fsts
jbe
rcrl
lret
jge
and
mov
dec
lret
dec
lea
lea
into
repz
dec
adc
sbb
int
insl
inc
popa
push
xchg
inc
cmp
mov
pop
or
dec
or
sbb
xchg
hlt
or
scas
mov
jmp
jb
dec
pop
inc
out
adc
scas
int3
mov
sbb
rcr
jl
sub
aam
jp
repnz
jo
out
les
mov
jmp
wrmsr
xchg
clc
out
mov
movsb
jge
jnp
push
rol
jp
xchg
add
push
or
cmp
int
or
repnz
jg
jo
push
sbb
mov
iret
pushf
ficoml
xor
pop
push
and
fldl
bndstx
or
jo
js
push
and
adc
test
jb
bound
popa
rcll
mov
or
mov
mov
cmp
decl
push
addr16
mov
loop
std
jl
subl
jns
lds
into
ror
add
adc
adc
jo
pop
lods
pop
popa
ja
sarl
pop
push
lds
repz
mov
aad
out
add
sahf
mov
sbb
xchg
cmp
rorb
pop
fstpt
aaa
mov
movsl
mov
pop
mov
cmc
and
inc
lret
cmpsl
popf
cli
pop
mov
mov
push
sarl
lods
xor
sub
jp
mov
push
sub
je
nop
enter
rcr
jmp
and
or
movsb
std
pop
and
mulb
push
sbb
mov
sub
jmp
jg
push
xchg
lret
add
sahf
xchg
mov
push
int
pop
jb
insl
jecxz
cmpsb
stos
and
jo
sti
insl
out
add
inc
pop
dec
mov
fsubrs
fdivrl
repz
inc
nop
das
lret
push
arpl
ss
inc
rcrb
xchg
fsubrs
lock
mov
jg
cs
pop
out
or
mov
jl
loop
cmp
stos
shr
ret
pushf
push
xchg
mov
push
ljmp
xlat
lret
out
arpl
and
inc
sbb
or
sub
lods
dec
cli
test
jo
test
inc
ss
in
fnsave
daa
lahf
mov
icebp
jnp
dec
mov
mov
pop
sub
mov
lea
cs
xor
mov
dec
xchg
adc
ja
in
sub
cmp
pop
push
in
mov
setae
aam
xchg
or
xchg
addr16
cmp
push
and
out
mov
push
lcall
aam
cmp
out
lret
fcomps
xchg
dec
mov
mov
mov
mov
nop
and
and
push
dec
or
push
mov
inc
push
cli
test
push
out
jae
outsb
std
testb
mov
pop
repnz
ret
push
push
mov
sub
repnz
js
addl
sub
stc
mov
and
xchg
ja
out
xor
sub
add
push
add
pop
or
rsqrtps
pushf
movsl
push
and
cmp
sarl
mov
sarl
fistpl
mov
pop
lret
xchg
adc
stc
les
and
mov
dec
or
inc
adc
jb
mov
push
cmp
jge
sbb
test
cmpsb
test
movb
adc
shrl
outsl
inc
out
or
xlat
mov
enter
push
xor
add
inc
mov
fnstsw
lods
sarl
nopl
sub
mov
in
je
out
jb
repz
ja
push
cmp
add
mov
mov
outsl
jg
xchg
loope
cmp
mov
aaa
test
outsl
inc
shlb
lods
sub
cmp
add
inc
ficomps
testl
jne
insb
pop
out
jb
sbb
jl
push
jle
orl
xchg
pushf
xchg
pop
mov
xchg
aad
andb
pop
or
sbb
ja
xchg
pop
pusha
fucom
scas
mov
and
xlat
jo
ret
fisttps
and
dec
rcrl
je
ret
mov
sbb
jb
popa
add
push
icebp
sahf
fnstcw
in
dec
faddl
cmpsl
flds
mov
ja
inc
add
mov
push
pop
mov
fistps
fs
sub
xor
daa
jg
adc
imul
je
fwait
jb
in
popa
int3
lock
dec
mov
andl
jle
rcr
pop
insl
cmp
loopne
jnp
pop
lret
mov
pop
out
mov
jo
sub
jmp
stos
mov
stc
test
movsl
jns
rol
shl
push
pop
mov
xor
inc
fistps
mov
cmc
inc
movsl
pop
xchg
mov
mov
push
and
repz
repz
push
mov
das
push
sub
add
fnsave
and
sub
daa
jp
mull
dec
cmpsb
popa
iret
pop
cmpsb
inc
adc
xchg
lahf
ja
pop
pop
cmc
sub
cld
dec
sub
daa
jno
and
stos
jge
sub
sbb
pop
lock
dec
pop
or
test
stos
jbe
aam
insb
adc
insl
aam
pop
test
mov
stos
pop
cs
js
outsl
sbb
adcb
sahf
mov
xor
jle
add
shlb
mov
cmp
jae
cmpsb
idivl
popf
imul
pop
shrl
insb
cmp
add
lods
pop
dec
sub
lods
mov
dec
mov
sbb
cmc
sbb
arpl
int3
std
jns
mov
pop
mov
push
cmpsb
popa
xchg
sbb
test
int3
in
shll
sbb
cltd
iret
cmc
test
negb
adc
test
jmp
push
cmp
lret
out
and
jnp
in
dec
inc
mov
je
pop
mov
and
push
add
jo
outsb
pop
jmp
jno,pn
mov
stos
in
push
roll
inc
pusha
into
jbe
fsubrs
mov
mov
mov
int
fbld
outsb
jno
outsl
jb
dec
rorl
outsb
adc
into
imul
xor
outsb
push
outsl
push
lds
shrb
aaa
bnd
aam
imul
es
push
jecxz
pop
mov
add
jge
xchg
aas
mov
mov
or
adc
cmp
and
into
inc
push
orps
stc
rcrb
in
jno
sbb
xchg
enter
lahf
ds
adc
lcall
insl
ss
aas
fwait
and
lods
pop
jg
push
xor
pop
push
and
push
push
jl
or
rcrb
aas
aaa
bound
inc
sub
cmp
lret
and
je
push
jp
fsts
mov
pusha
lret
push
test
inc
xor
stos
lahf
subb
pop
pop
mov
or
pop
fbstp
fcmovnu
cmp
lcall
cltd
rcr
dec
inc
or
nop
sahf
push
xor
mov
lods
js
int
jle
inc
repnz
cltd
mov
loopne
adc
outsl
iret
test
enter
loope
imul
call
cltd
out
xor
adc
sub
bound
pop
gs
rclb
cmpb
je
mov
cmpsb
cwtl
out
outsl
and
cld
sub
loop
int
stos
mov
xor
xchg
pushf
fadds
push
dec
mov
aaa
jbe
xchg
arpl
cltd
movsb
pop
sub
pop
scas
sbb
fnstcw
push
cmp
call
in
xlat
push
jle
sbb
sub
arpl
inc
mov
sub
fstp
sub
inc
dec
inc
cmp
aaa
sub
pop
push
inc
filds
lahf
into
push
add
sub
es
adcl
into
pushf
mov
faddl
or
frstor
aad
or
cwtl
jle
in
fisubs
push
xor
popf
loop
mov
sbb
mov
lock
aad
mov
stos
xchg
ds
jne
fwait
aam
sbbb
mov
lcall
pop
fwait
xor
int3
xor
mov
ret
dec
mov
pop
movsl
xchg
pop
orl
sahf
pop
fwait
test
push
adc
cmp
adc
sbbb
sbb
sub
add
jns
cld
xor
decb
mov
notb
jmp
add
aas
je
ja
xrelease
and
cmpsb
fucomi
jmp
push
mov
lret
cmp
xor
mov
cwtl
sahf
insl
xor
pop
inc
dec
test
pop
cld
mov
lea
cmp
sub
mov
rclb
repz
leave
imul
push
clc
sbb
inc
ja
sub
cmpsl
adc
addr16
jbe
mov
enter
pop
in
sbb
or
test
mov
add
movb
roll
push
mov
stos
lods
sub
pop
repnz
xor
lods
cwtl
subl
push
ljmp
add
stos
inc
stos
stc
inc
inc
push
mov
sbb
fs
mov
mov
pop
scas
je
rcr
fimuls
mov
mov
inc
aad
sbb
cld
cmp
pop
xchg
inc
jg
nop
and
mov
cmp
in
lret
addb
xor
stc
mov
inc
jle
mov
xlat
shll
loopne
cwtl
cmpsb
push
clc
mov
fdivrl
out
xor
and
or
stos
xchg
pop
and
mov
cmp
inc
sahf
lods
mov
mul
roll
loope
ds
int
mov
mov
pop
rorl
jne
sub
lds
test
test
xchg
push
lock
ret
mov
imul
imul
jne
pop
pop
int3
in
mov
in
loopne
out
push
aas
sub
dec
mov
ljmp
mov
fisubrl
push
jno
out
sahf
test
push
mov
lea
imul
mov
test
add
pop
mov
mov
mov
clc
stc
xchg
in
xor
fnstenv
push
loopne
loope
not
xchg
add
adc
sub
dec
rcll
cmpb
pop
movsl
fnstsw
repnz
sbb
cmp
xor
fisttpll
out
inc
dec
int3
inc
test
sub
sub
sbb
jae
mov
push
and
dec
jle
insl
or
ficoms
aaa
push
push
mov
repnz
out
mov
cltd
push
enter
lock
fisttpl
xchg
ljmp
aad
mov
in
jl
ret
jp
sbb
fld
cmpsl
out
mov
jl
inc
mov
movsl
and
popf
xchg
or
aad
jne
test
mov
jnp
mov
cld
pop
xor
adc
mov
icebp
fldl
mov
popa
data16
jae
jne
lcall
mov
cld
dec
mov
jbe
cmc
shr
insl
sarb
jg
add
mov
push
jle
shl
mov
cmp
idivl
je
stos
add
das
jp
test
mov
cmp
push
cmpsb
clc
aaa
mov
sar
mov
andl
test
jmp
lea
pop
je
in
negl
cwtl
std
and
jne
ja
daa
out
inc
js
cmpsl
mov
jnp
aam
lahf
aas
xor
bnd
push
push
ljmp
push
and
mov
sub
dec
inc
pop
imulb
mov
xor
cmpsl
push
adc
testb
les
mov
and
lret
pop
sti
mov
add
ficompl
stc
lods
xor
icebp
mov
sub
stos
fnstenv
push
outsb
arpl
mov
mov
cmp
inc
pop
mov
lret
jno
mov
in
scas
mov
push
mov
cmp
cli
jno
std
mov
lods
cmp
jmp
sahf
mov
scas
pushf
adc
out
imul
loope
jp
out
pusha
and
into
dec
cmc
ror
inc
lret
xchg
lret
pop
into
push
in
push
push
sbb
xor
or
inc
loope
aam
dec
shlb
loopne
or
push
lds
mov
clc
mov
sbb
push
jg
and
iret
cs
stos
mov
popf
and
sub
lcall
jns
push
pusha
jbe
adc
decb
mov
mov
fiadds
cmpsl
int3
push
imul
cmpsl
test
loope
push
sub
pop
popf
pop
sub
push
mov
das
ljmp
out
sub
cli
loope
jno
push
test
inc
cmc
ljmp
subl
repnz
pop
push
repz
mov
xchg
daa
and
sti
mov
div
arpl
addr16
sbb
push
inc
jno
mov
cmc
sarb
mov
outsb
imul
and
xchg
inc
roll
adc
lcall
sbb
sub
das
push
cmpsl
and
mov
jo
jp
sub
mov
inc
mov
loopne
push
pop
xlat
addw
push
out
mov
xor
shrl
jecxz
mov
xchg
rcr
mov
or
sbb
cmc
xorb
cltd
lcall
int
mov
lods
in
inc
lods
lret
xor
push
xchg
mov
xchg
adc
cmp
cmpsb
das
sti
fisttps
mov
xchg
loopne
and
sub
psubq
in
sbb
pop
incl
mov
dec
jo
adc
arpl
outsb
or
pop
sub
out
out
xchg
and
sub
mov
imul
mov
scas
and
mov
and
xchg
mov
es
push
jmp
and
add
icebp
sub
cmp
shl
cmpsl
rorl
imul
add
out
iret
repnz
mov
push
xor
push
fwait
mov
clc
rcll
mov
mov
adc
inc
imul
mov
icebp
ja
jb
jnp
adc
add
adc
imul
movsl
jno
jnp
cs
cmp
pop
aaa
test
inc
dec
push
rcrb
mov
jmp
xor
lret
pushf
jge
pop
addr16
adc
push
mov
out
mov
or
add
rcll
data16
lock
lock
cmp
rcrl
out
mov
or
mov
mov
lods
sub
sbb
sbbb
adc
outsb
cmp
jb
inc
lahf
imul
insb
bound
push
mov
fs
adc
orb
lcall
popa
sub
int3
xchg
xchg
adc
cli
flds
mov
cmpsb
and
jl
clc
jnp
mov
insb
jmp
iret
mov
call
push
sbb
clc
add
ss
sti
jmp
roll
mov
arpl
jae
scas
pusha
addl
adc
pop
lahf
push
hlt
in
iret
xor
sbb
aad
xor
ja
inc
adc
jge
in
or
cli
imul
and
ret
mov
shrb
sub
and
mov
in
lods
dec
in
roll
hlt
call
push
cmp
aas
and
dec
rorb
jae
cmpsl
xor
adc
cld
mov
add
pushl
das
xchg
shlb
popf
dec
jbe
dec
adc
es
in
mov
mov
jnp
xor
sbb
push
or
mov
mov
decl
xor
jns
or
stos
xchg
out
bound
aam
lods
imul
pop
sahf
push
idivb
mov
sbb
loopnew
lods
aam
pop
mov
loop
cmp
mov
fsub
hlt
mov
mov
jecxz
fdiv
flds
dec
push
fs
fsubl
test
aaa
mov
nop
fsubrl
dec
insl
fidivrs
mov
inc
sub
loop
mov
ret
mov
xchg
cltd
out
cwtl
add
or
hlt
mov
std
cmpsl
out
push
dec
add
pop
jbe
push
sbb
xor
popa
gs
xorb
loop
and
sbb
je
aad
push
repz
int
cmp
or
xchg
pop
mov
mov
stc
mov
ljmp
push
add
in
aaa
xchg
outsb
inc
into
xor
mov
mov
inc
ja
mov
or
or
hlt
es
xchg
rclb
dec
xchg
mov
ljmp
daa
push
fwait
mov
clc
add
or
sti
aas
int3
xchg
pusha
add
lcall
cwtl
sahf
push
hlt
mov
add
push
mov
sub
orb
nop
das
daa
aas
inc
xchg
mov
es
testl
xchg
add
insl
inc
mov
mov
mov
fdivrs
rcll
dec
sub
mov
rcll
popa
add
pop
and
cmpsl
mov
cmp
mov
mov
fnsave
ret
fistl
pop
fcoms
aad
pushf
mov
insl
pushf
push
and
cli
jo
cmpl
fcomps
lret
jno
je
js
test
mov
or
inc
shrb
or
mov
gs
pop
sub
mov
cltd
cltd
aad
sarl
movsl
push
icebp
int3
and
es
rclb
xor
arpl
insl
fiaddl
ljmp
dec
insl
add
fcompl
js
xchg
mov
or
cs
jbe
dec
cmpps
mov
sub
mov
lea
mov
adc
inc
arpl
mov
movsb
inc
aaa
and
inc
test
xchg
lea
and
ds
mov
cmpsb
push
fidivrl
es
idivb
dec
div
xor
cmp
mov
xor
dec
sahf
int3
push
mov
dec
adcb
ljmp
dec
call
mov
sarb
adc
repz
mov
inc
shll
cli
cmp
cmp
push
sub
fnstenv
mov
sub
fisttpll
mov
jo
xchg
inc
sbb
outsb
mov
int3
stos
push
jmp
push
lahf
fisttps
out
mov
mov
mov
jne
pop
lcall
inc
pop
add
pop
cwtl
xor
and
mov
xor
dec
and
inc
xor
mov
cmpsb
sub
mov
js
xor
mov
les
jl
cmpb
pop
xchg
mov
mov
aas
sbb
loop
jge
or
mov
call
add
and
push
sahf
dec
jae
mov
ficomps
jg
mov
and
inc
xorl
xchg
rcrb
lea
adc
adc
pop
or
mov
dec
mov
pop
and
ss
jae
jg
xor
testb
jmp
xchg
jl
or
pusha
or
mov
xchg
add
push
mov
add
xor
prefetchw
shrl
push
mov
loope
pusha
pop
inc
dec
leave
mov
mov
call
pop
jmp
pop
cmp
cmpsb
ret
xor
sub
dec
and
push
dec
scas
imul
test
xchg
ret
xchg
cmp
gs
rep
or
sbb
pusha
stc
xor
ds
lret
pop
movsl
inc
xchg
lods
dec
in
jno
mov
stos
sti
jg
fiadds
movsl
mov
mov
pop
xor
add
xchg
dec
fbld
mov
jle
loopne
adc
pop
pop
inc
js
rcrb
or
fisubrl
ss
je
rcll
dec
ret
mov
std
xchg
mov
pop
xor
pop
cmp
xor
hlt
subl
call
inc
movl
enter
ret
jnp
test
xor
lea
std
inc
rcrb
out
inc
sub
mov
or
dec
xor
xor
ss
adc
inc
bound
call
push
jmp
lret
cwtl
ret
movsb
std
sub
mov
fs
or
aas
adc
test
inc
adc
pop
iret
xchg
mov
loope
dec
pop
inc
js
cli
xchg
add
adc
jl
frstor
lods
jg
mov
jae
ds
clc
mov
push
es
push
fimuls
push
pusha
icebp
test
inc
and
imul
push
test
jns
sub
pop
out
xchg
icebp
fwait
test
icebp
sub
jne
sbb
stc
cmpsb
pop
mov
cmp
popf
in
jg
mov
push
pop
jecxz
push
popf
jns
pushl
mov
cltd
popf
scas
mov
mov
test
clc
out
les
daa
sbb
sub
popf
sub
mov
fdivrp
test
sbb
jg
mov
xor
dec
pop
pop
fstpt
sub
sub
in
fidivs
mov
jnp
pop
arpl
dec
dec
cld
in
mov
xor
shlb
mov
push
test
xchg
mov
sahf
mov
lock
dec
push
leave
imul
and
sbb
jl
or
aaa
cmp
cwtl
mov
xchg
xchg
gs
xlat
mov
imul
mov
enter
fisttpll
push
sarb
cs
cltd
sbb
sub
inc
in
dec
push
or
adc
ret
test
mov
lcall
push
inc
pop
insl
movb
stc
cli
shr
stc
les
into
cmc
inc
lea
mov
cmp
and
xor
mov
lods
jp
dec
cli
repnz
push
loop
dec
hlt
cmpsb
mov
jecxz
xorb
jbe
js
mov
inc
jns
mov
insb
scas
lahf
push
sub
xchg
cmp
xchg
mov
clc
inc
je
nop
fwait
and
pop
and
std
inc
dec
and
and
dec
and
mov
jbe
repz
in
and
rclb
stc
shll
sub
mov
in
mov
test
std
jno
sub
mov
fldcw
int3
xchg
mov
xor
mov
xchg
xor
in
push
jg
pushf
or
cwtl
jge
loop
push
popf
cmp
sub
test
pushf
es
ljmp
imul
shrb
mov
adc
jl
and
xlat
mov
push
mov
cmc
ds
movsl
jbe
fnstenv
clc
cmp
push
xchg
inc
cs
and
outsb
mov
push
iret
iret
pop
sub
lock
in
aam
lret
int
aad
sub
scas
add
ret
cmp
cli
iret
and
nop
xor
fdivp
inc
add
shr
fxch
pop
enter
ret
fcoml
mov
sub
gs
jecxz
add
daa
movsb
sbb
mov
jge
icebp
psubw
pop
out
clc
popf
push
lds
call
imul
mov
iret
into
push
stc
add
pop
inc
cltd
repnz
sbb
push
movsb
data16
mov
lods
ss
mov
cmp
aaa
xchg
les
mov
cmp
in
mov
pushf
lock
sbb
shlb
lcall
mov
push
xchg
add
push
adc
loop
push
pushf
or
mov
mull
sub
cmpsl
inc
mov
jg
dec
pop
adcl
js
movsb
add
das
fwait
mov
movsb
pusha
rorl
pop
in
iret
xor
dec
inc
std
add
and
lret
dec
pusha
add
fdivrl
pushf
inc
add
sbb
outsl
les
mov
jge
pop
std
sarb
and
fwait
outsl
data16
inc
fsts
dec
jecxz
aaa
dec
jge
xchg
stc
adc
fmuls
push
adc
pop
mov
jns
add
and
cmpsl
popf
jne
cmp
inc
dec
clc
adc
shll
shrl
sub
test
js
mov
inc
fdivr
std
sarl
out
push
daa
mov
xchg
pushf
pop
xor
les
inc
lret
lock
bound
xor
xchg
ds
sbb
xor
or
xor
rcrb
popf
pop
xor
rclb
push
jne
mov
push
rcll
cmp
stc
push
pop
mull
mull
mov
fldcw
pushf
push
fdivs
push
jmp
sahf
daa
rcll
jp
mov
ja
shrb
test
mov
sbb
inc
roll
fwait
ja
ret
adc
cmp
xchg
xor
and
loope
pop
ds
sbb
mov
xchg
cs
mov
sub
adc
sbb
addb
cmp
or
mov
lahf
arpl
cltd
mov
pusha
addb
or
xchg
xchg
imul
sbb
out
mov
xor
xor
add
and
ret
data16
testl
mov
push
psllw
inc
mov
xchg
jnp
shlb
xor
xor
ds
mov
pop
jle
add
dec
sub
imul
cmp
jecxz
mov
ja
les
js
sub
fldl
sub
lods
outsb
cmp
jl
jbe
add
and
shll
bnd
cmp
clc
pop
nop
mov
push
aad
aam
fcomps
outsb
fs
and
push
addr16
or
imul
lods
fisubrs
sti
dec
sti
dec
loop
fs
add
outsl
decl
fdivs
sbb
adc
pop
repnz
sti
inc
xor
sbb
scas
fchs
lock
ficompl
or
and
xorl
xlat
fdivrl
xor
test
ror
pop
outsb
xor
adc
xchg
pop
or
pop
add
jae
push
insb
sub
jbe
dec
and
inc
movsl
ret
dec
testb
jne
pop
in
gs
pop
les
add
dec
add
and
js,pt
cmp
ljmp
inc
outsb
dec
flds
mov
iret
mov
popf
lods
mov
js
push
pop
jge
sbb
push
add
dec
cmp
cmp
hlt
xor
outsl
stos
sub
cmc
loopne
inc
je
sbb
cmp
popw
rcrb
in
in
leave
sbb
xchg
or
das
ret
lods
jo
bound
imul
push
add
mov
xor
movsb
pop
lret
and
xor
std
sti
mov
lret
xchg
dec
jo
adc
sub
sbbb
mov
pop
dec
popf
fiaddl
push
or
jle
pop
call
jle
movsl
rcll
testb
inc
mov
in
data16
mov
jae
fidivl
nop
mov
cmp
addr16
fmul
xlat
fcoml
mul
rcl
leave
insl
movsb
pop
in
fs
pushf
or
cmpsb
mov
jne
loope
mov
test
or
pop
cli
fcoms
mov
inc
dec
stos
add
dec
lods
xor
push
push
jae
outsl
popf
xor
jo
xlat
dec
mov
in
mov
ss
enter
adc
xchg
ljmp
adc
jne
dec
sub
mov
pop
sti
mov
dec
mov
push
mov
scas
fmull
xor
sub
imul
sti
jae
inc
mov
add
jae
mov
mov
aad
and
ds
lcall
cld
loope
xchg
lock
jnp
std
dec
cs
cwtl
int
scas
push
push
ss
push
mov
mov
das
scas
pop
sbb
jp
int
xlat
lock
mov
hlt
push
jns
add
or
mov
mov
insl
or
insl
and
cmp
sub
imul
dec
sbb
add
jp
fisubrs
fildll
and
xor
lret
jg
outsb
jle
js
lret
mov
mov
fadd
adc
repz
bound
inc
mov
mov
in
lea
test
cmp
icebp
dec
mov
sub
iret
inc
bound
add
outsb
inc
inc
in
andb
inc
sti
js
cltd
dec
popf
xchg
pushf
mov
mov
jle
cmp
scas
or
ret
rclb
dec
ds
jp
dec
dec
test
xor
adc
inc
ret
sub
push
lock
and
stc
rcl
out
sti
aaa
out
xor
dec
push
ret
lods
inc
sub
leave
mov
ja
xchg
nop
mov
in
int
sub
ret
push
xor
mov
dec
inc
enter
test
lds
out
adc
into
push
inc
or
out
movsb
pushf
push
sub
fidivrs
inc
sub
addl
sub
cmp
mov
or
jbe
and
fistps
out
cltd
insb
push
pop
mov
mov
lea
cli
fnstsw
mov
xchg
aas
mov
mov
fmuls
stos
fcoml
and
cmpl
outsl
mov
popa
ret
leave
sbb
rorb
mov
clc
xchg
cld
pop
popl
mov
jg
lret
push
dec
sub
pslld
inc
stos
scas
sbb
push
iret
aas
add
jae
dec
xorb
cli
in
xchg
aas
inc
cmp
gs
movsb
inc
mov
xor
inc
xor
add
jecxz
mov
mov
aad
inc
cmpsl
out
mov
imul
xor
and
xchg
cwtl
xchg
mov
fldl
push
les
push
dec
fsts
aam
and
push
dec
inc
aas
mov
das
outsl
cld
dec
add
xchg
std
cmc
push
push
dec
shlb
mov
sbbb
push
inc
cmpsb
movsl
test
aas
scas
pop
mov
mov
ds
pop
int3
dec
ds
jmp
and
rorb
cwtl
gs
shll
cmpsl
fisubrs
je
pushf
aam
pop
mov
outsb
xor
sbb
out
jg
jae
and
and
rorl
jo
pop
pop
je
adcb
jb
push
mov
es
jg
jno
push
jmp
cld
pop
xchg
fdivl
fisubl
push
dec
mov
cmp
out
jnp
inc
stos
dec
xor
js
enter
dec
pop
sbb
outsb
lea
xchg
adc
mov
test
push
xchg
fstpl
dec
ds
call
cli
mov
mov
lods
adc
out
shl
xchg
icebp
rcrl
pop
enter
sbb
xor
in
fwait
aad
ret
fcmove
push
adc
push
sbb
ss
imul
push
shl
std
inc
aam
cmp
ficoms
and
ss
sub
sbb
in
mov
pop
mov
add
in
push
adcl
push
std
shll
adc
subl
xchg
jmp
aam
jne
adc
dec
insl
push
xchg
ja
and
in
cltd
xchg
shlb
cli
mov
or
mov
fnstsw
addr16
jne
aas
xlat
bswap
rcrb
sbb
mov
xor
mov
rcll
sbb
pop
jl
add
add
xchg
daa
imulb
scas
cld
test
jmp
adc
mov
mov
inc
xor
shlb
mov
ds
sub
lods
cmp
jmp
cmpsb
cltd
mov
sbb
in
jmp
aam
nop
jge
fbstp
or
mov
mov
push
pop
xchg
test
and
or
jecxz
xchg
leave
insb
push
dec
push
cmp
pop
xchg
or
inc
das
bound
pop
imul
sub
call
fnstsw
into
jp
jle
fidivs
xchg
inc
inc
push
push
cmp
push
rorb
enter
rcrb
divps
ss
mov
sub
popf
ja
lods
hlt
push
leave
add
popf
xor
mov
pushf
out
jbe
into
pop
enter
lods
push
dec
push
movsb
fadds
pop
cmp
idivb
lock
insb
jb
xchg
pop
or
data16
and
in
mulb
das
stos
pop
or
test
or
push
and
add
pop
mulb
out
repz
and
ret
pop
jns
inc
popf
mov
sub
and
push
sub
push
push
dec
cmp
imul
sub
xchg
movsb
lret
inc
and
call
lea
jne
push
pop
sbb
popa
pop
icebp
ljmp
mov
pusha
das
fildl
imul
pop
daa
mov
xchg
push
movl
add
dec
and
and
cmp
adc
pop
lahf
inc
cmp
cltd
mov
dec
mov
cmp
lods
inc
es
stos
sub
xor
mov
add
push
lods
popf
sbb
lods
or
jo
sbb
mov
cmp
aas
ret
test
cmp
pop
jnp
mov
insb
jno
push
aam
mov
cmp
mov
and
ja
push
mov
sbb
sub
jnp
aad
sub
out
addr16
out
cmpsl
pop
adc
test
push
addr16
int
sbb
xchg
or
cld
push
loope
in
mov
ud2
sbbl
jnp
ret
mov
ss
repz
dec
pop
arpl
mov
and
dec
mov
fsubrs
push
sub
jg
add
mov
jge
aad
in
jnp
stos
aad
repz
lcall
pop
jmp
test
xorl
jnp
add
sbb
xor
enterw
and
xorl
jae
pop
lock
pushf
mov
cmp
clc
ja
incl
add
pop
movsl
push
jg
shll
hlt
jae
jnp
inc
sbb
jo
push
xor
jmp
sub
push
scas
orb
lods
loope
add
test
inc
pop
inc
cs
mov
mov
sahf
dec
or
sbb
pop
imul
arpl
lret
sub
daa
pop
cmpsb
add
in
pop
loopne
sbb
movsl
dec
insb
lret
sub
push
lock
push
cmp
sahf
pop
adc
inc
or
mov
pusha
sbb
push
sbb
ss
test
mov
imul
xchg
in
push
mov
fwait
pop
xor
mov
cmp
xchg
pop
push
xor
dec
jo
add
icebp
insl
in
mulb
inc
imul
xor
mov
pop
test
or
mov
mov
and
mov
stos
mov
xchg
or
dec
fimull
adc
addr16
pushf
inc
jl
jl
add
insl
inc
cmp
inc
jae
pop
pop
push
add
sub
repz
inc
cmp
icebp
in
mov
test
sahf
orb
and
lods
inc
pop
pop
outsl
mov
mov
adc
ds
cld
aas
or
dec
test
imul
pushf
movsb
cmp
stos
inc
jp
and
mov
movsl
and
dec
push
xor
stos
add
sbb
fcomp
fmull
ret
cli
jno
jae
jl
mov
xchg
jbe
xor
mov
out
ljmp
inc
xor
pop
cltd
mov
aas
cmc
test
test
mov
and
push
jg
and
jl
and
cwtl
flds
cwtl
push
or
push
or
and
addl
push
shrb
aas
mov
sub
or
push
push
adc
inc
mov
ds
scas
xchg
cmpsb
xor
cltd
mov
negl
lret
sub
insl
sub
pop
test
xor
jno
add
add
xchg
cmpsl
xchg
pop
sbb
push
xchg
dec
sti
into
jle
xor
sbb
int
test
adc
das
adc
adc
inc
cli
in
push
gs
filds
xchg
sub
push
add
lea
inc
xchg
pushf
int
ds
call
pop
adc
or
and
sbb
inc
out
xor
inc
mov
aaa
dec
adc
and
fimuls
xor
dec
and
fst
or
pop
push
leave
mov
rorb
jnp
xor
mov
enter
jmp
xor
rclb
mov
test
push
and
ss
pop
mov
cmp
dec
filds
mov
add
dec
inc
arpl
sbb
sub
add
stos
add
or
mov
into
int3
mov
xchg
add
lods
lret
or
movsb
fwait
shll
pushf
or
mov
dec
jecxz
das
dec
into
cs
in
mov
dec
pop
outsb
xchg
cmp
and
push
cmpsl
push
jnp
or
push
adc
cmp
jno
mov
push
sar
push
xchg
mov
jno
daa
arpl
sub
add
push
inc
xor
mov
xor
popa
loop
or
xor
lret
in
adc
in
sbb
cltd
dec
ficomps
mov
lock
lret
cmp
push
mov
leave
xlat
pop
xor
jmp
inc
xor
inc
xchg
push
sbb
dec
inc
sahf
adcb
xchg
or
add
mov
xchg
ds
and
out
loope
aaa
push
xchg
insb
test
sbb
xor
jmp
pop
iret
push
and
mov
int
call
mov
icebp
jne
inc
call
inc
movsb
insb
push
sbb
lret
mov
cmpl
cli
lret
push
and
sbb
mov
daa
fsubrs
repz
fldenv
xor
jge
fcoml
push
or
out
push
inc
push
shll
xchg
rcll
lods
adc
sub
sbb
test
mov
mov
pop
xor
sub
shll
cmp
push
outsl
sbb
mov
xchg
mov
mov
lret
push
xchg
sbb
pop
push
lods
movsl
mov
mov
ja
bound
push
out
clc
xchg
mov
xchg
pop
mov
out
cltd
jecxz
and
adc
cmpsl
repz
inc
jle
dec
jecxz
bound
ljmp
mov
pop
jl
js
cmp
jb
inc
sbb
inc
pop
mov
push
jg
mov
mov
push
push
cli
inc
xchg
mov
dec
in
enter
or
iret
out
mov
out
pop
lods
pop
cmpsl
filds
lcall
pop
cmc
jmp
aad
orb
imul
pusha
je
clc
dec
mov
push
xchg
jle
popf
dec
dec
and
ret
lods
xchg
pop
or
mov
in
js
lcall
dec
jge
scas
je
jg
pop
xchg
ficoms
jne
ja
jne
loope
xchg
sub
stc
pop
jo
mov
xchg
mov
das
pop
mov
or
pop
and
jae
xchg
mov
xor
push
ja
mov
inc
lea
push
dec
inc
xor
mul
sbb
adc
mov
mov
jg
clc
das
sbb
aad
mov
jmp
inc
clc
jmp
loope
mov
or
jp
dec
std
push
and
arpl
jnp
lcall
and
nop
imul
xor
loop
cmp
pop
ja
in
outsl
loopne
int3
std
jl
mov
xchg
push
cmp
xchg
push
sahf
ret
or
dec
mov
sub
sbb
mov
cmp
add
cld
fwait
push
mov
aas
push
mov
add
mov
fimuls
jb
jns
imul
sub
pop
push
mov
inc
enter
jg
or
test
pop
pop
sub
jne
loop
notb
incb
jne
arpl
xchg
shrb
add
scas
pop
test
jb
frstor
shrl
cmp
jge
insl
pop
sub
mov
popf
ja
mulb
addr16
pusha
iret
ja
pop
fs
out
mov
jecxz
pop
add
sub
and
xor
jno
stos
sbb
mov
or
jbe
cld
cld
xchg
es
out
add
fiaddl
push
mov
stos
mov
sbb
push
in
sbb
dec
les
mov
out
jmp
or
ds
inc
sbb
cmp
or
in
or
outsb
push
push
add
cmpsb
insb
loopne
sahf
rcrl
aas
ret
mov
aaa
and
cmc
jecxz
fstp
jecxz
add
lods
inc
push
or
sbb
sbb
pop
cld
pop
mov
fldcw
daa
cmpsb
push
nop
jne
adc
daa
iret
or
add
movsb
test
sbb
dec
cmp
cmp
sahf
stos
test
in
add
ljmp
pop
in
cmp
loopne
sarb
inc
scas
pushf
popf
adc
and
imul
scas
ljmp
popf
jmp
jl
sub
fnstcw
movsl
or
jge
mov
dec
sub
jecxz
adc
inc
sub
jl
inc
xlat
and
mov
testl
add
leave
push
int
pop
pop
rcr
xlat
mov
stos
lahf
ds
dec
jb
pop
mov
xchg
mov
lcall
and
clc
mov
inc
sub
lea
or
push
es
lcall
cld
cmp
jno
pop
mov
andb
movb
mov
ja
adc
dec
insl
js
sbb
ja
xchg
xor
xor
pop
loopne
call
test
xchg
mov
cmp
mov
or
mov
mov
push
xchg
adc
jge
or
push
insb
cmp
into
mov
fdivs
stc
ss
sbb
xchg
repnz
lea
out
cmp
pop
inc
push
inc
dec
int
cmp
mov
clc
cmc
gs
les
dec
push
push
add
test
jae
cmp
imul
pop
and
sbb
pop
jb,pn
mov
jo
ret
popa
mov
mov
pop
cmp
jle
test
inc
mov
addl
sahf
sub
loopne
jne
push
aam
cmp
add
out
push
and
out
mov
cld
jp
mov
outsb
mull
ds
lods
inc
popa
mov
aam
pop
je
pushf
aaa
arpl
cmp
add
test
ficomps
mov
inc
je
divb
mov
jmp
ror
sbb
jnp
ds
inc
lahf
mov
aaa
add
addr16
cmc
inc
pushf
mov
jne
fdivr
aam
scas
cmp
add
cmp
test
mov
add
test
push
loopne
pop
jne
or
aas
cmp
fisttpll
jl
mov
test
add
and
dec
stos
mov
mov
cmpsl
cmp
xor
mov
add
jnp
rol
cld
dec
jp
mov
or
sub
jne
or
cli
aam
lret
lret
hlt
movsl
cmpsb
lds
sub
mov
pop
mov
notl
jmp
push
mov
push
cltd
jne
data16
std
cmc
ret
frstor
jo
or
call
popa
jae
out
push
lods
push
fst
pop
mov
pop
dec
fwait
enter
lahf
loop
dec
fidivl
shll
add
mov
add
xchg
ja
in
cmp
stos
cltd
jno
sub
ret
inc
pop
mov
xor
pop
mov
jbe
mov
repnz
add
clc
call
inc
hlt
imul
xor
clc
mov
sbb
xor
dec
aas
aam
xchg
stc
mov
pusha
sahf
pop
mov
cmp
lods
mov
sbb
js
mov
inc
out
fldl
js
jl
sub
add
jl
imul
repnz
std
popf
inc
scas
jbe
scas
into
add
jo
ds
push
dec
push
shlb
imul
mov
xchg
test
mov
les
adc
and
and
shll
cmp
lret
adc
push
or
rcr
dec
dec
sbb
std
ret
add
popa
mov
sbb
loope
dec
mov
aam
imul
xchg
imul
out
dec
cmp
xchg
xor
or
jge
mov
imul
andb
negb
and
nop
in
pop
cmp
xlat
lcall
inc
pop
and
adc
cmpsl
mov
movsb
pop
iret
push
loopne
insl
xor
imul
add
lea
xor
cmp
imul
mov
jp
push
jp
fld
cmpsb
loope
mov
loope
fdivl
xor
outsl
scas
or
frstor
or
xchg
pop
fsub
shrl
iret
pop
adc
aad
daa
add
aas
jnp,pn
cmp
stos
daa
and
and
jle
jbe
jmp
and
inc
insl
sbb
in
out
addl
sbb
out
loopne
outsb
lods
data16
jmp
add
inc
xor
or
int3
test
pop
pop
or
sub
inc
popf
lds
inc
icebp
sbb
into
dec
jp
dec
fists
pop
ficoml
xchg
push
adc
xor
aas
out
xor
loop
jmp
xlat
sahf
outsb
aam
inc
sahf
mov
mov
adc
mov
arpl
leave
dec
mov
xchg
movhps
xor
xlat
dec
popa
fwait
mov
imul
aam
mov
mov
ret
xchg
lds
out
sahf
fildll
mov
fwait
pop
inc
cld
ja
adc
or
xchg
pop
ret
mov
bound
rcrb
ja
dec
sub
xor
movsb
mov
pop
sub
sub
dec
xlat
sub
jmp
test
mov
add
xor
ss
pop
mov
mov
pop
test
aad
xchg
xchg
icebp
rcrl
mov
dec
add
mov
stos
mov
and
add
cltd
loope
xlat
mov
jno
adc
mov
adc
jbe
aam
add
mov
loop
push
inc
test
and
and
cmpsb
dec
push
inc
jae
xchg
int3
cmp
clc
subb
lea
fdivrs
sub
mov
jno
into
and
sbb
sub
and
push
jl
dec
jp
mov
subb
ficoml
mov
mov
mov
ffree
add
fidivrl
cmp
mov
fadds
push
sub
mov
xchg
mov
ds
mov
pop
dec
and
enter
imul
sbb
cmpsb
test
pop
daa
cmp
and
in
xor
ds
test
dec
dec
adc
xor
add
push
dec
out
loopne
xlat
xchg
xchg
jecxz
xchg
test
lods
fsubrs
orb
pop
addr16
fiaddl
outsb
int
imul
dec
jge
jg
popf
pop
sbb
add
sub
add
addr16
jl
cmp
sti
mov
xchg
rolb
in
pop
push
test
pop
lcall
outsl
aam
test
test
sbb
cltd
divl
inc
insb
pop
int
sub
lods
scas
mov
int
mov
push
lahf
insl
addb
stc
ffree
jo
jge
xlat
repz
hlt
mov
lock
jmp
out
js
jle
subl
dec
jg
xchg
xor
dec
adc
push
push
push
dec
xchg
jne
inc
sbb
scas
push
push
push
test
sub
add
push
fdivl
xor
fs
rcll
js
jle
dec
insl
push
int3
mov
data16
cmpsb
mov
mov
dec
inc
icebp
dec
ja
cmpsl
out
sbb
mov
stos
es
inc
flds
scas
aaa
std
lahf
jne
insb
add
scas
sbb
adc
cmp
hlt
xor
xchg
inc
mov
je
lcall
aad
jbe
in
push
mov
mov
jne
push
jg
pusha
cli
lods
test
not
cmp
push
pop
pusha
inc
pop
popf
test
mov
mov
rcll
and
test
cvtps2pd
push
adc
pop
call
pop
addb
pop
ficoms
add
psubq
cmp
push
int
stos
out
stos
popa
orl
jae
jns
inc
lods
pop
fst
stc
lret
nop
mov
hlt
orl
jl
mov
lock
xor
xchg
adcb
inc
push
mov
repz
lahf
insb
mov
js
pop
sbb
push
addr16
mov
dec
jg
mov
js
es
cltd
push
notl
test
daa
xor
inc
dec
test
mov
in
pop
sahf
shrl
xor
adc
mov
aad
xor
movsb
outsb
loop
aas
fisubl
mov
iret
push
push
mov
sub
in
movsl
addr16
rcl
shll
or
movsl
mov
or
imul
imul
xchg
cmp
adc
arpl
insl
lods
cmpsl
push
loop
and
or
mov
loopne
mov
cmp
jno
dec
or
xchg
dec
xor
push
xchg
or
or
jmp
into
push
hlt
sbb
lret
aaa
fnsave
leave
inc
jno
jecxz
jecxz
sbb
cld
jbe
loopne
xchg
fs
rclb
inc
pushf
aaa
ret
pop
lret
push
sbb
jg
mov
rorb
arpl
push
push
sbb
jno
out
call
fsubrs
repnz
lock
cmp
lods
dec
shrl
add
mov
ss
push
or
sub
imul
divl
xchg
mov
aad
mov
sbb
movsb
xchg
xchg
test
icebp
jno
hlt
or
jb
and
xor
nop
cmp
gs
ret
dec
out
sub
je
lods
push
sub
scas
mov
cmc
push
mov
xchg
mov
cli
mov
pop
cld
and
ret
jmp
test
and
xchg
xchg
mov
clc
push
mov
push
movw
mov
daa
inc
fstpt
push
mov
add
pop
lcall
or
fucomp
inc
mov
push
xchg
jno
and
dec
pop
fildl
cmp
xchg
xchg
icebp
ret
pusha
cmp
xor
daa
jo
mov
sbb
adc
pop
call
or
popa
adc
mov
loop
les
mov
rol
xlat
addr16
sti
ret
stos
addl
mov
push
divb
orl
cmp
outsl
ss
jl
nop
icebp
int
mov
cmp
and
imul
xor
pop
popf
mov
cmc
pop
pop
mov
dec
std
pop
popa
push
jne
sti
sub
sub
daa
pop
xchg
outsl
mov
cmpsl
aaa
push
mov
loopnew
mov
pop
pop
into
sti
push
in
rolb
lea
stos
xchg
inc
pusha
dec
ror
pop
lahf
cmpsl
xchg
push
and
lcall
mov
lock
adc
mov
enter
test
pop
lcall
mov
fsubr
std
jbe
pop
cmc
les
mov
and
aas
in
or
outsb
xor
orb
fsubrl
or
ja
sahf
clc
mov
mov
jmp
pop
clc
rcl
outsb
jge
mov
adc
ja
addr16
sbb
sbb
sti
mov
imul
jl
pop
dec
sub
pop
push
and
xor
mov
push
test
scas
fcompl
push
outsl
inc
stc
pop
addr16
jo
lea
rorl
jge
stos
lcall
sbb
sub
sbb
ror
inc
mov
add
sub
cmp
test
jmp
mov
in
and
fnsave
dec
xchg
fmuls
pushw
inc
push
loopne
cs
cld
dec
xchg
pop
sub
xchg
xor
dec
and
out
jno
jmp
dec
cmp
movsl
sarl
cld
pop
dec
addl
loop
mov
je
in
mov
test
stc
mov
shrl
add
add
jne
lock
xchg
and
inc
ja
mov
push
jne
xor
out
mov
jne
xchg
test
lock
aaa
pop
inc
push
aad
fists
sbb
test
mov
jb
or
pusha
mov
pop
andb
mov
enter
or
cmpsl
test
mov
imul
sub
or
adc
test
inc
enter
jg
pushf
push
imul
lds
xor
shrl
adc
cli
push
ja
add
insb
sbb
mov
push
lods
cmpsb
clc
xchg
js
cmpsb
or
dec
xchg
xchg
popa
adc
incb
imul
xor
inc
and
mov
jae
jnp
add
nop
jb
mov
cmp
icebp
and
dec
imul
mov
aam
sbb
gs
fistpl
sbb
or
xchg
loopne
push
mov
and
add
xchg
sbb
sbb
jmp
mov
push
std
jo
loop
sarl
outsl
add
popa
lock
sbb
xchg
scas
jnp
gs
imull
insb
sbb
sbb
outsl
movsb
adc
jecxz
fwait
jne
test
mov
xor
or
add
ljmp
scas
push
cld
cmp
in
psrld
sarb
out
fcomi
sahf
dec
shlb
adc
push
inc
sbb
lret
jno
push
neg
inc
das
fistps
lods
testl
aam
xor
xchg
int
cmp
call
or
xor
movsb
clc
dec
mov
push
test
pushf
push
out
repz
popa
orb
xchg
cmpsb
mov
xor
mov
cmp
jo
adc
dec
xchg
into
lds
adc
cwtl
testb
inc
mov
add
cmpsb
mov
xor
cs
stc
dec
mov
xchg
popl
inc
imul
in
iret
outsl
fsubrp
leave
ret
fstpl
jecxz
push
iret
jg
cmp
repz
sar
lods
cmp
sbb
scas
daa
push
movsl
pop
stos
cltd
push
sbb
loopne
scas
and
mov
sbbb
jne
loopne
aas
imul
iret
cmp
jmp
cmpsl
outsb
xchg
jle
repnz
sbb
subl
mov
iret
movsl
into
or
mov
mov
and
lret
jl
out
dec
and
xchg
addr16
mov
adc
or
test
test
mov
pop
stc
and
dec
sbb
pop
or
inc
xor
and
sar
pop
lahf
mov
test
leave
sbb
int3
jge
inc
or
jb
push
mov
in
xor
bound
and
popf
jns
jle
cwtl
mov
pop
mov
cmp
sbb
adc
in
sub
shl
out
cmpsl
sbb
clc
inc
jne
xchg
test
push
pop
sbbl
stos
cmp
clc
sbb
and
test
lret
jae
push
repz
pop
icebp
mov
inc
scas
lahf
scas
sub
sub
xchg
mov
stc
xor
out
movsb
mov
push
sbb
sub
add
inc
cmp
and
jp
cld
pop
test
jb
dec
ljmp
inc
xchg
inc
xor
popa
cld
sbb
lret
pop
xlat
fmul
pop
sarb
mov
aam
push
std
adcl
dec
and
sbb
icebp
js
mov
mov
sbb
mov
minps
cmc
jl
les
dec
pop
xchg
inc
cmp
clc
push
lds
or
shrl
mov
ret
xor
fcom
call
push
test
mov
mov
rcr
xor
dec
inc
lods
cld
mov
dec
push
movsl
or
daa
sub
push
mul
pop
jae
mov
in
pop
loope
cmpsb
sub
es
cmp
shr
sbb
cmc
into
movsb
lock
adc
outsb
dec
or
repnz
lret
rcr
mov
pop
cmpsb
fld
dec
push
dec
xor
leave
nop
xchg
mov
pop
mov
pop
outsb
out
sub
or
stos
ret
cmp
cmp
mov
inc
js
mov
dec
call
mov
mov
adc
jg
cmp
inc
adc
fistpll
pop
or
xchg
mov
push
pop
mov
int
xor
fmull
xchg
xlat
fcmove
dec
ret
adc
add
into
or
jmp
pop
xor
fdiv
jmp
fnsetpm(287
mov
push
ljmp
ffree
or
inc
jmp
and
xlat
loopne
outsl
sti
xor
xchg
push
incl
fs
scas
into
rcrl
xchg
or
psllw
shrl
sti
insb
push
pop
aas
rorb
pop
dec
nop
push
cmp
enter
cwtl
mov
addr16
fildll
addr16
je
and
mov
cmp
sbb
shll
add
loope
repz
ficompl
pop
mov
repz
subb
cwtl
sahf
test
sarl
stos
cmp
ret
sbb
popf
js
sbb
pop
mov
mov
test
add
mov
xchg
loope
sub
test
cmc
outsb
fldenv
out
mov
pop
cltd
sbb
aam
sub
cld
cli
in
sbb
jmp
fucomp
sub
lods
mov
cltd
rol
adcb
sub
cmovl
inc
aaa
sbb
out
ret
test
xor
sbb
xlat
ret
dec
inc
nop
jge
xorb
ljmp
sbb
jb
cmp
or
add
add
stos
movsb
mov
sbb
mov
sbb
rcl
adc
xor
xchg
push
mov
push
fistps
test
les
aam
xor
jg
les
loopne
fbld
or
xchg
jae
cmpsb
or
js
mov
imul
mov
std
xor
and
push
out
mov
insb
gs
ror
fists
adc
dec
dec
mov
mov
pushf
mov
in
insb
test
mov
ja
in
mov
or
lods
xchg
mov
popa
mov
test
mov
and
and
inc
adc
xchg
fnstcw
int3
xchg
iret
adc
sub
fwait
mov
push
or
popl
nop
cmp
sbb
cmpsb
jp
xchg
mov
jb
pop
aad
pop
rcrb
das
cwtl
sub
mov
lret
mov
in
and
mov
add
in
ret
jmp
out
aam
push
sbb
xor
cwtl
add
js
adc
and
mov
adc
and
test
sub
add
dec
adc
fisttpll
je
push
stos
aam
jbe
mov
dec
into
addl
mov
addl
cs
aam
mov
or
add
push
xor
aad
dec
mov
xor
divb
cmp
adc
cmp
cmp
dec
jae
pop
test
adc
mov
sbb
shll
repnz
psrlw
inc
inc
push
and
push
push
mov
cmp
data16
xchg
and
mov
push
and
stc
or
and
adc
mov
in
dec
xor
fdiv
int
in
in
stos
sahf
inc
sarb
out
pusha
lods
shrl
inc
jge
sub
push
pop
cmc
in
clc
pop
mov
jge
pop
jle
adcl
icebp
decl
jge
gs
xchg
inc
pop
adc
add
mov
popa
fbstp
cmp
xor
scas
jne
mov
js
xchg
mov
and
inc
movsb
imulb
mov
mov
popf
iret
in
leave
test
rolb
push
std
push
mov
lret
sub
daa
ljmp
fstps
xor
mov
sbb
ja
in
pop
not
nop
jge
push
cltd
jbe
xor
xchg
and
jno
and
fsubs
jl
dec
fstpt
dec
stc
xor
jnp
jecxz
ret
mov
fnsave
push
loopne
sahf
dec
add
addl
or
icebp
jg
sbb
xchg
ds
gs
xor
ret
push
aad
stos
in
movsb
pop
cmp
cli
add
test
stos
bound
mov
sbb
js
mov
push
add
jb
mov
int3
xchg
clc
cmp
faddl
push
fimuls
sbb
mov
mov
sti
outsl
aam
loop
push
mov
dec
cmc
xor
xor
sub
inc
xor
sahf
xchg
std
pusha
push
hlt
mov
fisubs
mov
sbb
mov
mov
stos
add
sbb
mov
mov
adc
loope
in
cmpsl
xor
in
jmp
mov
fdivrs
fiaddl
int
adc
ja
cmp
ljmp
cmpl
mov
fistpll
into
aaa
pop
inc
xchg
mov
dec
pop
in
and
cld
negl
lret
test
cmp
xchg
jne
jb
into
aam
mov
push
mov
xchg
dec
push
and
or
add
leave
cld
inc
fistps
pop
rcrb
adc
push
push
mov
adc
mov
icebp
test
fidivl
scas
push
loop
loope
outsb
ja
jmp
xor
mov
ret
ret
aas
sbb
insb
and
aaa
mov
lea
imul
rorb
xlat
sbb
out
mov
fcmovbe
pusha
das
push
inc
and
xorl
mov
pop
lods
sbb
fs
cmc
outsb
lock
adc
mov
push
aas
insb
out
repnz
lret
rcll
or
cli
jne
data16
push
into
outsb
mov
and
adc
loop
xor
clc
sbb
leave
cmp
pop
xchg
rclb
xlat
or
inc
xchg
inc
and
icebp
shrb
sbb
ret
inc
inc
adc
imul
sahf
stos
aam
xchg
fs
cmp
pop
xor
jnp
inc
sub
ret
sarl
leave
lcall
shlb
outsl
movsl
clc
stc
mov
xchg
pop
add
push
xchg
scas
sub
pop
or
cmp
push
cmp
ds
xchg
pusha
scas
popa
add
mov
xchg
dec
push
push
add
push
cmpl
in
and
or
add
int3
cld
rcrl
addr16
aad
jo
jno
sbb
jnp
imul
push
in
xlat
jmp
mov
lret
sarl
rcl
jge
and
lock
pop
sbb
mov
lret
sbb
cmp
clc
and
fwait
out
push
sbb
add
mov
cmp
psubusw
pop
push
scas
sbb
and
sub
pop
pop
or
xor
fidivs
iret
push
push
inc
stc
and
lret
sub
cli
xchg
lds
jmp
cmp
repz
pop
pop
in
das
pop
push
sub
sbb
mov
cmpsl
push
mov
iret
xchg
lods
nop
push
test
mov
xchg
test
fst
je
daa
xchg
mov
testl
outsb
into
jmp
sbb
mov
pop
push
jge
and
and
lea
mov
test
dec
xorb
jno
outsl
fisubl
mov
ds
nop
ljmp
test
xor
cmp
push
clc
adc
sbbl
stc
cmpsl
or
mov
hlt
mov
mov
xchg
mov
mov
xchg
inc
dec
repz
pop
add
adc
stos
sub
aas
mov
xlat
nop
mov
and
popa
adc
and
lods
mov
arpl
mov
sahf
aad
mov
es
test
stos
xor
sahf
push
push
jb
pop
mov
aas
cmpsl
pop
test
xor
jg
out
add
ret
mov
pop
aad
or
loope
pop
shrl
aas
inc
das
fisttpll
jl
mov
hlt
imul
stos
pop
je
addr16
jns
out
pop
mov
xsha256
cmpsb
aad
xor
stos
sbb
mov
shr
adc
sbb
aaa
sub
mov
fisubrs
inc
inc
xlat
mov
mov
sbb
daa
test
fildl
std
sub
jo
mov
cmp
fs
pop
mov
jbe
outsb
repz
jbe
cmp
xchg
rolb
push
jno
shrb
fistpl
mov
mov
out
sub
clc
cwtl
test
xchg
out
add
push
sbb
insl
daa
and
cld
add
js
loopne
test
ja
popa
cwtl
push
out
lret
int3
in
shr
dec
and
pop
lahf
jbe
mov
jnp
mov
or
push
pop
pop
sbb
mov
movsb
add
push
or
mov
fists
les
add
lret
ljmp
cmp
push
or
popf
xchg
enter
mov
cmp
mov
bound
pop
push
movsb
inc
or
jbe
stc
mov
xlat
repnz
outsl
pop
add
inc
push
mov
xor
pop
push
xor
dec
lock
and
popa
ret
sub
mov
pop
test
xchg
mov
adc
or
push
insb
lcall
mov
fimuls
add
inc
outsl
lock
shlb
pop
addr16
pop
xchg
mov
xor
insb
add
fistl
int3
add
inc
lods
scas
cmp
jecxz
pop
out
call
pop
or
cs
jo
sub
pop
scas
dec
insb
test
lock
pop
adc
or
insl
push
inc
push
xor
lahf
mov
pushf
daa
loop
lahf
cwtl
sub
neg
sbb
std
out
pop
cmp
add
mov
out
ja
sbb
inc
jmp
mov
sbb
mov
fwait
imul
movsb
lock
std
adcb
lds
push
fwait
push
orb
jle
aad
out
cmpsl
cmp
enter
mov
pop
test
rolb
outsl
jp
xchg
mov
push
xchg
jo
leave
fdivrs
cmp
mov
add
fidivrl
jne
fcomps
xor
jl
add
add
pop
mov
shlb
add
sub
mov
ja
mov
daa
push
mov
mov
inc
jb
mov
fldenv
rcrb
jl
or
mov
cmp
add
pop
mov
out
xor
sub
mov
int
clc
inc
sub
push
xchg
mov
int
cli
fcom
stos
or
pop
lods
clc
loopne
xor
iret
insb
lods
pop
ret
mov
adc
jne
and
pmullw
xchg
mov
sub
xchg
gs
lods
and
mov
imul
or
sbb
mov
sbb
inc
dec
out
inc
add
mov
ja
xchg
mov
aam
sbb
addr16
pop
adc
jo
add
out
push
xchg
lahf
jl
repnz
arpl
jl
repz
mov
test
cmp
xchg
lds
or
mov
xchg
jne
bound
pushf
ja
icebp
mov
inc
arpl
inc
lcall
cwtl
dec
inc
mov
mov
les
repnz
rolb
add
mov
pop
mov
andl
pop
mov
lret
xchg
iret
outsb
jle
mov
mov
fiadds
jns
jns
ror
insl
dec
sub
movsl
xlat
jbe
mov
mov
sbb
sti
sub
stc
jcxz
mov
movsl
pop
sbb
clc
daa
push
aas
jne
sub
xor
stos
push
and
call
fdivrs
enter
jmp
leave
punpcklbw
jne
movsb
inc
inc
iret
in
add
imul
xor
andb
add
in
xchg
stos
mov
inc
mov
cmp
pushf
sub
test
out
rol
out
shl
notb
data16
adc
ds
loopne
aad
or
mov
fcoml
jo
fwait
mov
push
mov
ss
xchg
adc
dec
add
rorl
enter
aad
xchg
jno
cmpsb
sbb
cmp
popf
pop
mov
jne
test
lcall
dec
sub
imul
jns
or
ret
rorb
jnp
add
sub
push
jo
hlt
ljmp
out
xchg
mov
xchg
shll
xlat
mov
dec
rolb
ja
les
hlt
fisubs
xor
std
imul
mov
push
leave
daa
addr16
push
call
call
push
and
xor
cmc
mov
popf
sub
or
jne
test
fcmovne
jge
sub
in
aaa
arpl
pop
scas
int3
idivb
cmp
movsb
decb
out
in
nop
add
mov
xor
fcoms
jecxz
dec
mov
jmp
aad
out
out
scas
gs
mov
mov
jmp
outsl
stc
sbb
sbb
mov
push
out
add
fistpll
mov
popa
cmpsl
xor
fisubrs
cmp
fwait
mov
inc
lds
mov
mov
call
scas
inc
and
xchg
loopne
data16
insl
lahf
adc
add
loope
pop
xor
jmp
in
pop
cmpl
mov
adc
aas
adc
push
sbb
inc
xor
push
mov
in
sub
add
push
sbb
lods
adc
xor
and
loopne
or
cmp
sub
lahf
dec
mov
jno
add
aam
imul
in
scas
in
andl
push
dec
aam
inc
inc
sbb
mov
inc
lcall
rcrl
clc
sbb
xchg
lea
pop
dec
lock
aad
sbb
mov
xlat
pop
add
subl
into
cli
mov
jne
gs
cmpsl
ficoml
dec
dec
in
jmp
pop
mov
out
jp
inc
loop
cmc
push
outsb
cmpsl
jmp
mov
lds
pop
testb
je
jp
ret
jmp
push
or
push
sarl
mov
stos
fistpl
aas
stos
mov
ds
flds
out
adc
mov
jns
jg
ja
movsb
add
jecxz
je
mov
notb
mov
ds
jnp
push
stos
imull
dec
cmp
imul
adc
inc
cld
out
out
adc
xlat
aam
pop
ret
mov
inc
push
mov
push
fwait
or
and
outsb
cs
stos
inc
int3
xor
insl
les
enter
xchg
mov
lahf
sahf
imul
jp
dec
adc
push
mov
les
adcb
mov
shrl
mov
popf
inc
inc
mov
int3
jno
sub
lock
lcall
incl
imul
addr16
inc
dec
outsl
pop
test
push
and
cmp
shl
mov
in
mov
jg
sub
cmp
sub
je
dec
push
ss
xchg
sbb
jmp
lcall
loopne
testl
shrl
inc
jae
jmp
ret
dec
popf
sbb
cmp
es
sbb
lods
and
comiss
movsl
pop
or
je
cmp
mov
lcall
jecxz
push
sbb
sub
or
adc
mulb
shrl
cwtl
std
scas
pop
sub
jne
shlb
je
sbb
fnstenv
cmp
outsl
mov
push
in
fildl
lcall
mov
pop
lea
mov
insl
fidivl
adc
mov
cmp
popf
das
dec
sub
icebp
pop
int3
mov
out
mov
xchg
or
inc
jecxz
inc
ja
xor
lcall
pusha
aad
inc
gs
jg
loopne
cmp
mov
push
mov
insl
jl
jns
sub
pop
cli
out
sbb
cmp
or
andl
lahf
sbb
into
xchg
in
jecxz
push
xor
pop
mov
pop
sub
xorl
popa
aam
popa
test
movsl
scas
xor
mov
pop
mov
aaa
enter
int
rol
mov
mov
in
mov
call
mov
xchg
push
add
jge
xchg
sbb
lods
dec
xchg
movsb
xchg
jb
ja
hlt
outsl
clc
test
jnp
jbe
cs
pop
jns
mov
dec
inc
fmuls
fldl
cwtl
daa
jnp
add
std
es
sub
or
ja
sub
movb
inc
mov
xchg
xor
add
mov
inc
mov
dec
bound
push
out
fsts
out
xchg
push
loopne
idivl
and
test
into
gs
mov
pop
sbb
adc
cli
stc
push
pop
cmp
pop
aam
dec
enter
jb
sarl
ss
subl
testb
inc
aam
and
subl
cmp
adc
pop
push
xor
inc
push
int3
dec
cmp
test
dec
lret
in
pushf
push
cmp
movsl
cwtl
mov
addl
cmp
in
lcall
xlat
stc
loope
inc
scas
mov
loope
pop
leave
fidivrl
jl
add
mov
aas
imul
pop
les
out
push
xor
popf
pop
jecxz
loop
inc
xorb
adc
out
int
and
sbb
mov
jmp
fistpll
in
inc
jg
inc
cmp
popa
and
ja
or
call
xchg
in
pop
push
and
in
sub
sbb
push
or
outsb
movsb
lock
mov
std
lret
xlat
pop
xchg
rclb
rclb
loope
push
fisttps
lds
ljmp
push
into
and
lock
scas
orb
repnz
xchg
jb
push
addl
testl
jno
pop
sbb
dec
jmp
or
push
jo
jnp
clc
jne
sbb
scas
add
xorb
push
das
adc
push
jg
mov
jns
mov
cmp
xlat
ja
fadd
cmp
jne
dec
or
adc
add
jno
fidivrl
or
pop
mul
mov
jae
fsubr
mov
pop
leave
pop
rcll
outsl
loop
push
daa
push
xor
pop
mov
fcoml
arpl
repz
in
jbe
xchg
jmp
adc
dec
inc
xor
lock
xchg
cmp
add
stc
or
icebp
mov
in
xlat
inc
lcall
clc
in
pop
mull
ja
mov
icebp
addr16
mov
xchg
aam
decl
mov
test
mov
and
adc
add
xor
push
lret
aas
xchg
inc
mov
mov
jne
scas
mov
sbb
out
mov
adc
pop
popa
inc
push
pop
push
inc
push
push
lret
push
mov
dec
lds
cmc
es
and
shll
mov
mov
divb
nop
dec
jno
push
aaa
pop
push
and
pop
dec
outsl
xchg
lock
int3
out
imul
movsl
mov
repz
cmp
mul
jle
jne
jnp
pop
and
fisttpll
inc
dec
aaa
pop
cmp
enter
sbb
dec
jo
mov
push
shrb
sub
ja
testb
jnp
push
jecxz
mov
lret
xor
call
sbb
cmp
imul
sbb
aam
in
arpl
push
scas
adc
sbb
fs
add
aas
push
add
rorl
iret
pop
push
aad
add
push
insl
subl
sub
lahf
xchg
outsb
xchg
mov
ret
dec
xor
lcall
jbe
jle
sub
pop
push
shrb
lock
inc
push
bnd
inc
imul
cli
addr16
insb
into
inc
stos
mov
rorb
popa
push
pop
out
and
mov
xchg
mov
inc
push
lock
in
mov
pop
repz
adc
jg
push
mov
pop
jle
ret
xor
or
pop
into
mov
cld
lcall
or
scas
pop
push
in
lds
jp
pop
insb
dec
pusha
push
stos
push
and
test
pushf
shr
aaa
inc
loopne
cltd
imul
mov
stos
xor
add
pop
movl
sbb
cmc
add
fstl
mov
mov
jecxz
or
adc
jae
loope
push
hlt
fistpl
ror
cmp
inc
sub
idivl
repz
add
dec
mov
cwtl
loop
adc
test
adc
movsb
aad
dec
popa
pusha
sub
add
fdivrs
jle
jns
mov
xor
loop
mov
outsl
aam
push
iret
add
stos
or
lcall
and
mov
imul
jb
sub
mov
icebp
xor
cwtl
aam
fcmovbe
xchg
mov
cld
fnstsw
cmpsb
hlt
mov
mov
mov
ds
call
push
rorb
mov
inc
push
insl
sbb
test
pop
pushf
push
inc
cmp
xor
or
scas
sti
dec
outsb
daa
mov
cltd
inc
sahf
push
insb
iret
fsubs
ds
pop
cmp
and
ss
call
imull
xchg
dec
cld
jmp
inc
pop
push
adc
xchg
imul
test
mov
add
push
mov
cmp
adc
stos
push
mov
jp
inc
data16
lods
arpl
push
js
popa
dec
adc
xchg
ffreep
inc
loop
xchg
comiss
ljmp
or
push
int
arpl
pop
and
mov
enter
gs
or
shll
fildll
adc
pushf
xchg
daa
rorl
fbld
fdiv
imul
dec
imulb
ljmp
je
outsb
lret
cmp
xor
add
adc
mov
ss
cs
or
call
mov
mov
jmp
and
nop
sbb
and
leave
outsb
adc
pusha
adc
inc
imul
jmp
push
pop
rcll
sbb
imul
xchg
and
sarl
sbb
sub
cmp
daa
mov
push
addb
or
ss
stos
das
loope
jp
scas
popf
jo
lret
push
popf
push
addr16
sub
in
sbb
or
pop
sub
dec
push
lcall
and
push
cld
sub
mov
xchg
jnp
js
aad
pop
sub
ret
inc
sahf
pop
add
jle
push
mov
dec
and
push
xchg
in
mov
jb
mov
sub
in
adc
hlt
xchg
das
sbb
mov
pop
cmpsb
fs
sub
xchg
testl
es
pushf
por
push
test
cmp
and
lds
cmpsb
mov
add
add
aas
push
dec
mov
leave
pushl
in
gs
cmp
rcll
out
and
xchg
sub
les
xorb
insb
out
mov
std
test
dec
dec
jnp
mov
ja
push
ret
out
pop
inc
cmp
mov
stc
sti
lods
pop
inc
repnz
popf
mov
mov
mov
mov
jb
xor
je
rorl
mov
fld
test
cmc
add
jb
nop
popf
fcmovnbe
mov
xchg
jae
cmp
xor
sbb
loopne
pop
xchg
ds
outsb
ds
cmpsl
call
popf
iret
sub
mov
loopne
cmp
xchg
lahf
outsl
shlb
or
sbb
pop
dec
cmpsb
xchg
imul
fdivrs
xchg
mov
push
insl
repnz
inc
filds
repnz
andb
mov
push
xchg
fnstsw
call
cmp
mov
mov
test
push
sbb
enter
aad
xor
in
int
xchg
sub
daa
dec
xlat
mov
and
roll
insb
movsl
stc
cli
sahf
sbb
dec
inc
in
jmp
pop
scas
jle
sbb
xor
mov
aas
out
ljmp
push
push
xlat
decl
mov
xchg
mov
add
jae
push
data16
aas
or
sub
rorl
mov
push
push
rclb
fcompl
leave
inc
pop
loopne
ljmp
jnp
dec
mov
subl
mov
xor
fsubs
add
add
adc
pop
stc
sbb
push
or
cld
or
xchg
dec
int
inc
pop
pop
sub
cmp
enter
stc
out
lret
leave
mov
and
inc
pop
insb
jo
dec
cmpsl
sub
fcomp
inc
mov
out
cmp
loope
mov
lods
test
cmpsb
push
and
sbb
pushf
js
add
aaa
fiaddl
cltd
rcrl
jecxz
mov
movsl
lahf
pop
inc
push
push
fwait
sbb
inc
sub
mov
inc
bound
fists
mov
cwtl
xor
jecxz
push
adc
ret
lahf
sub
ret
scas
dec
roll
cmp
ja
add
xchg
adc
gs
stos
in
or
jbe
push
test
inc
and
flds
mov
enter
xchg
movl
adc
into
cmp
sbb
inc
enter
xor
dec
mov
xor
popf
mov
push
pop
imul
adc
push
add
mov
pop
push
push
pop
shll
dec
add
jl
dec
mov
mov
or
lret
ficoms
cld
pop
lods
jns
jnp
jge
movsb
rorb
pop
inc
cmp
iret
pushf
or
stos
jae
xor
xchg
sub
lret
subb
cmp
mov
inc
mov
test
stc
mov
cmpsl
jg
lods
test
mov
jns
dec
add
loop
lahf
pop
push
cmpb
or
inc
out
mov
outsl
push
push
pusha
int3
xchg
dec
jmp
jg
test
xor
addr16
enter
test
mov
lret
jbe
lock
lock
push
cmp
andl
jmp
pop
lea
dec
mov
xor
cli
sub
and
shll
outsb
mov
xchg
mov
xchg
test
dec
push
jb
dec
pop
outsl
xor
and
mov
leave
pop
popf
mov
fdivrs
cmp
and
sub
in
adc
int3
inc
pop
jne
push
pusha
push
xchg
adc
dec
popa
cwtl
js
pop
push
jb
cmpsb
pop
pop
mov
jl
jae
adc
hlt
mov
and
cmc
jbe
pusha
cpuid
or
cltd
cmp
mov
or
into
flds
sub
jp
adc
arpl
jbe
mov
loop
mov
fdivs
dec
sahf
popa
inc
adc
fsubrl
ja
pop
div
mov
xor
into
imul
icebp
out
adc
int3
or
test
ja
lods
daa
mov
fldenv
cltd
inc
into
vmovapd
pop
scas
jo
mov
mov
adc
xchg
mov
sbb
nop
adc
mov
daa
and
cmp
sbb
sbb
jae,pt
cmp
in
xchg
dec
sbb
lods
fsubrl
arpl
ret
cmpsb
push
cmpsl
cmc
and
sbb
dec
addl
out
push
mov
jo
in
mov
aad
xchg
les
add
cmp
jmp
orl
push
pop
push
push
loope
mov
int3
xor
pushf
adc
pop
sti
in
cli
leave
fxch
out
jb
mov
mov
jns
or
mov
sbb
xor
mov
outsl
les
cltd
and
sub
inc
fdivr
fs
mov
mov
adcl
das
add
ret
xor
outsb
inc
adc
sar
mov
push
sub
in
sbb
adc
cmc
mov
cmp
pop
adc
out
lret
mov
dec
aaa
adc
and
mov
mov
in
outsl
aad
pushf
fwait
and
add
iret
test
sub
add
ljmp
negl
repz
mov
push
or
idivl
in
repnz
jge
lcall
aam
out
sub
push
cmpsl
inc
mov
stc
imul
jle
cmp
lahf
or
adc
int
loope
jo
add
cmp
xchg
pop
mov
mov
pushf
fisttpl
mov
incl
movb
pop
lods
arpl
aas
cltd
xchg
inc
rcrl
cmpsl
imul
jo
pushf
or
mov
cmp
push
daa
sbb
shrb
and
push
mov
add
or
xchg
jg
pop
mov
jnp
iret
fidivl
ljmp
adc
mov
test
sbb
mov
data16
inc
int
sub
jge
movsl
sti
sti
adc
dec
insb
inc
mov
add
and
inc
jle
adc
mov
mov
les
fcoms
sbb
push
call
bswap
pusha
test
lret
addl
push
stos
jge
sbb
arpl
dec
sbb
sbb
and
pop
push
jp
mov
pusha
mov
mov
inc
add
repnz
std
sbb
dec
mov
mov
push
cwtl
xor
lret
add
std
aas
mov
jecxz
pop
sub
mov
xchg
dec
mov
jmp
jp
stos
xchg
or
rclb
pop
stos
jmp
sub
push
and
push
mov
adc
push
xlat
push
popf
sbb
inc
nop
pop
pop
testl
dec
mov
and
mov
bound
pop
or
push
and
mov
das
mov
sbb
mov
inc
ds
push
dec
cmp
jbe
mov
push
orb
int3
shlb
lcall
cmp
popa
aas
jnp
xchg
dec
ss
fildll
jle
sar
cwtl
out
cmp
inc
out
testw
scas
pop
sub
bound
sbb
push
push
aad
dec
mov
sub
cmp
add
dec
shlb
mov
or
cmp
sbb
call
movsl
cmp
je
repnz
ljmp
and
push
mov
aaa
sbb
ja
lret
insb
adc
push
jnp
push
jnp
pushf
mov
aaa
lods
hlt
or
pop
ss
in
fucom
outsl
orl
pop
and
sti
dec
mov
adcl
mov
xchg
dec
pop
mov
inc
xchg
and
push
psubd
dec
nop
pushf
pop
lock
bound
xor
pop
sub
and
movsb
pop
mov
mov
into
xor
adc
enter
or
xor
xchg
es
add
test
or
fisttpll
push
sbb
aam
mov
add
push
loop
jp
or
sub
fisttpll
movsl
lds
inc
jle
mov
xchg
fimull
stos
ljmp
lret
sub
je
cmp
ret
adc
pop
das
in
adc
nop
mov
inc
sbb
movsb
jl
out
jno
push
lret
cltd
mov
std
imul
mov
add
cltd
movsb
lods
pop
xchg
push
repz
inc
out
mov
pop
jbe
outsb
mov
jbe
ljmp
cmpsl
enter
negl
mov
inc
xchg
data16
push
cli
xor
jg
jp
ret
xor
lahf
fldl
sbb
push
adc
int3
cmp
and
sahf
mov
nop
dec
mov
and
orl
popf
mov
pop
bound
fwait
mov
jns
sarb
mov
push
xchg
and
pop
popa
fwait
jo
ret
and
movsbl
add
movlhps
dec
jmp
pop
insb
jbe
test
mov
idivb
jecxz
lret
fstl
jecxz
jnp
xchg
scas
push
cmp
fsubrl
inc
sub
sbb
jg
shrb
mov
std
cltd
imul
aas
aad
sbb
test
in
mov
lock
mov
mul
sub
jno
add
in
aaa
mov
mov
push
ret
sub
in
push
xor
in
je
es
ljmp
lock
sbb
mov
jno
imul
cmp
push
mov
pusha
mov
aam
xchg
mov
loope
popf
out
pop
lcall
mov
pop
addl
lahf
mov
movsl
pop
fisubl
shlb
lods
inc
add
iret
iret
xchg
xchg
mov
je
add
shrb
or
jp
lret
sbb
scas
inc
push
mov
shlb
in
mov
or
adc
lret
adc
mov
mov
stos
test
stos
and
incb
mov
sbb
add
pop
out
jge
mov
hlt
jb
aaa
sub
mov
loop
in
outsl
sbb
call
cltd
lock
enter
jg
jns
dec
mov
mov
xchg
test
dec
leave
jp
mov
out
inc
sbb
test
pop
xchg
add
or
rcrb
pop
pop
push
fimuls
shlb
insl
sbb
arpl
incb
dec
push
in
dec
mov
sbb
jmp
jp
inc
jecxz
ror
mov
inc
rcrb
cmp
xchg
arpl
loope
jae
test
and
out
push
cmp
iret
add
push
movsl
lods
punpckhdq
mov
pop
bound
jle
sub
cmpsl
scas
cmp
les
xor
fisubl
pop
and
inc
sbb
or
mov
adc
adcl
inc
mov
add
outsl
jne
imul
mov
fiaddl
mov
mov
inc
xchg
push
cmp
int
nop
push
lds
bound
push
sbb
xorl
cmpsb
hlt
add
mov
push
addl
sbb
rcr
inc
sub
fisttpll
mov
xor
shll
xchg
dec
mov
and
int
dec
leave
and
imul
idivb
pop
mov
adc
bound
sub
lret
les
push
mov
data16
mov
cmp
jecxz
cli
xor
imul
pop
xchg
clc
in
iret
adc
mov
mov
mov
xchg
xchg
aam
jne
rcr
sub
hlt
push
push
add
jecxz
lahf
je
sub
mov
pop
in
fdecstp
ret
incl
inc
xor
scas
imul
xchg
fsubs
pop
mov
popa
xchg
jg
sub
stos
adc
mov
aad
out
imul
aam
loopne
lds
or
pop
std
and
push
loope
in
jo
add
cmovbe
pushf
clc
cmp
insl
ret
xor
rcrb
bound
sbb
shl
add
rcll
pop
add
mov
pop
in
mov
sbb
fwait
stos
mov
stos
cmp
push
sahf
call
idiv
xchg
mov
sbb
pop
ret
mov
xchg
jno
mov
mov
stos
ja
inc
shrb
sahf
cmpsl
cmp
jb
mov
jns
out
dec
idiv
in
imul
adc
repnz
inc
fsubrl
inc
sub
repz
mulb
call
sub
addl
mov
and
fistpl
cmp
push
dec
xchg
jo
add
sbb
add
push
in
shufps
aam
mov
or
pop
sbb
adc
cmp
dec
xor
dec
xchg
push
jae
in
hlt
inc
cs
icebp
pushf
cltd
shll
fs
pop
orl
inc
cmp
sbb
cmp
jbe
repz
and
add
or
into
std
dec
sub
inc
mov
mov
in
and
push
les
not
cmp
shll
into
nop
mov
aad
cmpsl
xor
inc
fcmove
pop
stos
jge
fstl
js
das
mov
jle
sahf
xchg
pop
xor
outsl
dec
scas
pop
push
stos
jge
jo
mov
in
mov
test
pop
aaa
insl
cmp
xchg
xchg
jmp
int3
orb
sub
int
sbb
xchg
mov
movsb
pop
cltd
or
and
inc
outsb
jae
stos
mov
mov
dec
scas
xor
ljmp
or
push
inc
cmp
inc
jns
adc
add
sti
test
add
ret
out
pop
pop
sub
jle
add
enter
adc
add
pop
or
fcoms
int3
dec
bound
adc
clc
jl
fnsave
sti
xchg
in
sti
dec
sbb
cmp
dec
loopne
mov
ds
dec
cmp
or
xor
adc
push
test
pushf
xchg
xor
mov
xlat
je
xor
mov
clc
adc
push
rcll
int3
lret
clc
lahf
je
sbb
xchg
std
inc
and
adc
and
push
arpl
and
adc
push
lea
jg
scas
adc
mov
int
cmp
mov
push
mov
push
sub
lds
shrl
enter
push
sbb
mov
dec
lock
mov
in
popl
inc
xchg
jbe
pusha
push
daa
xor
adc
push
xlat
pop
xor
fs
sbbb
mov
jbe,pt
jnp
iret
lcall
dec
hlt
push
and
dec
inc
inc
or
in
adc
mov
cmp
lcall
lds
adc
push
push
mov
lds
inc
fcmovu
mov
rcl
add
rorb
add
pop
push
or
mov
sub
and
fs
lods
mov
inc
stos
xor
mov
push
out
adc
and
pop
mov
repz
push
xor
xor
mov
or
jae
out
insb
arpl
mov
adc
call
sbb
clc
ret
gs
cmc
add
out
fistpl
pop
mov
in
inc
pop
push
and
insl
es
lahf
xchg
rcrb
int3
lds
mov
insl
sbb
movsb
dec
fdiv
dec
adc
sti
cwtl
xchg
ss
push
mov
xor
or
roll
aaa
cmp
das
repnz
cli
mull
test
pop
vpsrad
loope
push
cmpsb
punpcklbw
enter
lock
lods
mov
cltd
mov
inc
add
nop
add
pop
lock
mov
fwait
andb
imul
cmp
inc
jle
cmp
test
lret
lret
add
hlt
pushf
jne
lods
int
push
scas
dec
mov
inc
sbb
mov
clc
add
pushf
mov
aad
cmp
xor
pusha
rol
es
xchg
lar
ja
addr16
push
add
xchg
cmp
dec
pop
rcrb
mov
mov
pusha
sub
orb
out
mov
stos
sbb
shlb
mov
stos
push
mov
adc
cmp
sub
lods
popa
or
adc
or
mov
clc
bound
jg
jae
push
mov
out
cltd
lods
push
cmp
mov
jb
loop
mov
repz
iret
sbb
addr16
dec
insl
inc
imul
out
dec
pop
jnp
ja
add
shll
inc
push
loop
roll
popa
mov
mov
or
gs
mov
and
xor
movl
aas
fs
and
xchg
xchg
mov
add
xchg
inc
push
cs
push
xor
and
sbb
in
mov
mov
add
popf
mov
fsub
xchg
aaa
mov
outsb
jae
fwait
xchg
jecxz
lock
in
xchg
popf
incb
stos
in
add
sbb
xchg
je
es
ret
addl
adc
out
data16
sarb
movsb
jmp
loopne
sar
les
je
push
shll
jnp
and
inc
jmp
rep
insb
jo
movb
and
test
sbb
repnz
jl
jge
xchg
xchg
xchg
mov
mov
xchg
inc
je
rorb
pop
test
add
in
dec
daa
outsl
cmpsl
cmpsl
mov
gs
movsb
pop
ja
xchg
in
sub
jp
jl
push
frndint
xchg
jp
ret
cmpsl
xchg
test
je
xchg
xchg
adc
mov
loope
outsl
jnp
hlt
sbb
adc
test
push
daa
xchg
iret
lds
dec
sub
jmp
mov
and
sbb
enter
fwait
call
xchg
inc
iret
gs
and
sub
out
lcall
push
or
xor
in
mulb
cmpsl
sbb
fsts
dec
into
xchg
pusha
xchg
aad
mov
xor
addr16
lds
mov
lods
pop
xor
repz
notb
popa
sbb
movsl
push
xchg
ljmp
clc
stc
push
and
aas
ret
add
cmp
lahf
imul
arpl
imul
iret
scas
test
fs
inc
jne
push
mov
push
lret
sub
sbb
lods
pushf
lcall
clc
xor
or
inc
fs
push
dec
fldl
es
fs
jb
sub
cs
adc
lods
xchg
mov
mov
out
and
sub
mov
idivb
cmc
lret
push
xor
mov
jle
sbb
dec
pop
xor
out
mov
scas
or
mov
add
dec
out
out
mov
in
pop
fwait
or
cmp
xchg
mov
xor
push
rcll
pusha
sub
std
lahf
call
xchg
sti
dec
jl
mov
cld
mov
inc
mov
popf
iret
jnp
cwtl
pusha
fs
push
sbb
jae
pushf
adc
inc
xorl
not
rorl
je
stc
stos
xor
cmpl
xchg
clc
shll
sbb
dec
scas
sub
test
fbstp
sti
aad
leave
sbb
fucom
sbb
or
es
xor
mov
push
push
pop
xlat
sub
fldt
lock
push
mov
xorb
xchg
repz
push
or
xor
lock
pusha
mov
push
test
lods
jnp
inc
rolb
fwait
jg
dec
and
adc
pop
sbb
lods
cmc
iret
aaa
sti
jge
push
xor
sbb
mov
cld
inc
popa
sub
mov
shr
mov
adc
call
jne
pop
mov
mov
nop
repz
and
fdivs
lock
mov
movsl
cmc
xorl
cld
cmp
icebp
test
scas
jb
adc
mov
jns
mov
pop
iret
test
movsl
push
push
sub
sbb
test
dec
mov
mov
push
lock
mov
jae
leave
dec
std
subb
or
out
sbb
cltd
or
pop
lock
std
xchg
cld
cmp
sysret
inc
mov
lahf
fwait
mov
fisubl
cld
ds
xlat
sub
outsb
pop
mov
int3
xor
push
push
push
or
push
or
jb
add
inc
sub
xchg
lcall
cmp
insl
in
jae
scas
sbb
lcall
add
sbbl
aam
mov
in
inc
data16
popf
jecxz
push
dec
and
ret
fnsave
ret
inc
pushf
xlat
les
scas
mov
stc
xchg
cmpb
fs
stos
outsl
pop
das
or
les
adcb
sub
pop
pop
mov
out
pop
adc
jmp
pop
fsubs
jl
lcall
xchg
arpl
adc
sti
loop
inc
shlb
popa
lret
mov
xchg
cli
aam
mov
sbb
push
mov
shll
mov
test
push
xchg
ds
and
pop
imul
imul
xor
aam
jmp
rorl
iret
jo
inc
jl
leave
mov
xor
inc
xor
scas
xor
mov
push
sti
inc
jno
pop
iret
or
xchg
fisubs
sub
adc
adc
push
fiadds
xor
xchg
mov
imul
jne
pop
add
jae
out
imul
addb
mov
out
jo
cmp
out
mov
mov
push
scas
imul
movsb
or
pop
inc
clc
mov
or
pusha
movl
inc
lea
push
and
dec
aad
dec
loopne
rorb
ja
sub
daa
pop
mov
sti
xchg
fisubrs
pop
pop
nop
loop
ror
mov
pop
adc
dec
jl
out
jp
mov
sbb
push
adc
or
fcoms
lods
imul
rep
mov
xlat
pop
push
sarb
inc
int
out
mov
xchg
and
scas
mov
xor
test
adc
jbe
repz
sti
fs
movsl
out
out
jecxz
das
pop
jmp
push
jne
dec
inc
and
sbb
dec
aas
and
push
cmp
imul
mov
popa
pop
sub
push
mov
cmp
xchg
inc
sbb
jge
push
push
jp
repnz
mov
in
pop
and
insb
sbb
mov
mov
pop
fsubr
cmp
jle
jl
inc
xchg
sbb
test
mov
ja
mov
jecxz
dec
or
mov
jmp
roll
pop
ror
xchg
stc
pop
scas
int
cmpsl
shll
sbb
push
test
arpl
imul
mov
mov
out
jbe
lods
rcrl
sbb
push
subl
lds
roll
lcall
scas
push
sbb
pop
scas
mov
push
inc
xlat
aaa
je
mov
cmpsl
nop
mov
imul
clc
dec
xchg
and
push
test
add
leave
cld
push
subb
inc
dec
hlt
xchg
cmp
std
add
mov
sbb
pushf
das
cmpsl
aas
mov
aad
fcompl
arpl
jmp
xor
dec
add
and
inc
arpl
ret
ss
gs
jns
sub
aad
popf
fadd
aaa
adc
mov
ja
mov
xor
xor
mov
xchg
mov
add
inc
fstl
add
test
xchg
les
cltd
xchg
sti
dec
into
jl
test
push
out
jmp
push
xor
xchg
popa
mov
or
movsb
mov
push
mov
and
mov
fs
mov
dec
cmp
cltd
xorl
dec
push
bsf
or
sbb
cmc
pop
jb
pop
cmpsb
adc
repnz
mov
lcall
pushf
cmp
jecxz
xorb
jmp
std
push
add
mov
test
pushf
notb
pop
das
lahf
add
insl
xchg
lea
daa
mov
cwtl
xor
arpl
dec
jnp
push
aaa
xor
inc
inc
mov
mov
mov
je
pop
popaw
mov
dec
jnp
mov
ret
mov
or
in
pop
insl
hlt
stc
pop
ror
lahf
bound
es
int
and
test
cmp
cmp
scas
jle
push
xchg
cs
mov
and
lret
or
out
jns
and
inc
xchg
mov
mov
mov
mov
xchg
fisttpl
adc
leave
xchg
fdivrl
fisubl
xor
fs
clc
dec
xchg
pusha
or
clc
shrl
imul
jmp
sbb
insb
sbb
nop
cmpb
test
xchg
std
sub
ja
mov
ret
mov
xor
xchg
mov
aad
sbb
push
jmp
sbb
repnz
jmp
cmp
jb
push
stos
imul
lods
fwait
xchg
jo
imul
shr
icebp
stos
fistpl
cmp
adc
rcl
xchg
or
inc
pop
jnp
pop
dec
shrb
daa
inc
inc
fmull
push
mov
test
adc
insb
xchg
and
jle
sti
loope
ret
sub
cmp
repz
jb
or
jg
and
es
ja
or
out
shr
jb
mov
pop
das
popf
jbe
adc
cmpsl
ja
stos
mov
pop
and
imul
or
jno
xor
ds
cli
aad
push
and
movsl
ds
mov
leave
dec
bound
fidivrl
mov
std
xor
call
je
xor
les
mov
inc
nop
xchg
scas
sub
sarb
cs
repz
fldenv
adc
cld
pushf
repz
fildll
in
push
stos
outsb
pop
fmull
push
and
dec
cmp
push
sub
jg
pop
xlat
loop
xchg
mov
dec
in
xchg
inc
call
mov
mov
cmp
xor
test
jbe
adc
dec
pop
dec
push
pushl
jae
xorl
test
pop
dec
inc
adc
xor
fs
mov
mov
dec
dec
inc
cmp
sub
ljmp
int
ret
rorl
jmp
loop
inc
roll
fstl
and
repnz
shll
adc
test
jg
pusha
sub
mov
scas
push
fsubl
mov
mov
push
inc
sbb
and
pop
sti
pushf
mov
mov
ret
mov
dec
mov
in
call
lds
shrb
sbb
jmp
pop
adc
mov
popa
push
and
lcall
pop
loop
in
fcoml
mov
std
push
pop
mov
subl
hlt
mov
cmp
pop
dec
fldcw
mov
mov
cli
sbb
add
mov
rclb
cmp
sub
jne
adc
xchg
push
sbb
jmp
shlb
gs
arpl
mov
aam
rcrl
mov
push
jge
mov
lea
cmp
ja
int
je
cmpsb
xor
push
lods
cmp
les
cmp
mov
sbb
bound
xlat
dec
test
jmp
jl
ds
fisubs
andl
cmp
in
mov
rcl
xor
jecxz
mov
repz
dec
ljmp
insb
dec
dec
or
push
andl
stos
mov
outsl
dec
push
lcall
sbb
mov
inc
cmp
iret
xchg
mov
cli
xor
sti
loope
cmp
std
sbb
jl,pt
pop
xorl
adc
negl
popa
jbe
xchg
push
fldl
push
lea
sti
inc
dec
pop
push
adc
subb
mov
in
dec
adc
insb
ret
test
cmpsl
pop
rorl
push
mov
sub
cmp
cmove
decb
xlat
sbb
pop
adc
js
or
mov
popa
adc
in
adc
sbb
stos
negb
jns
lds
and
ret
jno
mov
pop
pop
jbe
cmp
rcll
lret
mov
in
inc
shrl
xchg
decl
mov
rcl
movsl
shll
mov
icebp
nop
popa
nop
xchg
lcall
ror
stos
cvtpi2ps
pop
pop
mov
add
jmp
mov
rorl
mov
cmp
repz
mov
push
sub
or
or
ret
rorb
inc
adc
rcrl
orb
bound
adc
scas
addl
jo
push
fisubrs
sahf
xor
enter
std
dec
cmpsl
scas
mov
cltd
cld
into
fmull
dec
imulb
push
or
int3
and
push
xlat
inc
ret
xchg
cwtl
xlat
test
xor
pop
xlat
aam
lods
inc
scas
mov
in
push
lock
mov
in
dec
clc
cmpsl
sub
cmp
pop
lcall
sub
out
es
sub
mov
pop
out
dec
or
dec
pop
mov
inc
stos
nop
add
inc
dec
mov
add
mov
pop
sub
negl
mov
and
or
dec
fwait
mov
jmp
adc
test
fimull
push
insl
inc
push
xor
sub
hlt
aaa
cld
sub
fdivs
sub
jne
push
lods
xchg
inc
cltd
adc
and
jle
dec
add
cmp
inc
push
dec
pop
xchg
iret
in
dec
leave
inc
pop
shll
leave
mov
sbb
xor
in
push
jecxz
mov
lret
pop
sbb
xchg
dec
repz
negb
enter
xchg
mov
jp
idivl
jmp
icebp
pop
aam
rep
lea
aaa
rclb
sbb
pusha
sub
jl
mov
movsb
jns
xor
or
pushf
xchg
fsts
rcrl
jle
sti
iret
or
jne
sbb
mov
dec
sbb
inc
sub
mov
fidivrl
sbb
mov
lds
insb
sub
pop
xor
mov
stos
push
add
test
cli
std
mov
ja
adc
js
add
nop
inc
cmp
jmp
mov
les
adc
mov
xchg
stc
repnz
mov
ja
adc
test
pmaddwd
bound
stos
mov
cmp
fs
cmp
xchg
mov
cmp
xchg
es
push
cmpsl
bound
das
pop
lcall
cli
add
add
or
cmc
or
mov
sarl
xor
and
xor
xorb
mov
lcall
push
data16
leave
push
xchg
negb
pop
push
adc
mov
jge
sub
xor
jns
jns
inc
cmp
repnz
lret
cmp
sahf
mov
les
cs
out
mov
push
xchg
or
mov
leave
dec
cmpsl
popf
cs
pop
popf
pop
test
or
push
and
push
ret
fs
stc
imul
sar
push
iret
mov
in
push
cmp
add
int3
and
fistpl
xor
mov
in
cmp
xor
test
in
push
ret
imulb
adcb
push
fistl
decl
mov
cmpsl
test
subl
out
and
mov
or
push
jo
inc
lds
loopne
jmp
push
fs
lahf
ss
dec
rolb
inc
cmpsb
fidivrl
pop
jae,pt
loopne
jnp
pusha
adc
inc
push
jmp
jle
mov
fbld
gs
fstpt
clc
and
fildll
xchg
ret
loop
sbb
sub
sti
mov
jae
mov
imul
mov
mov
mov
jns
mov
jae
push
mov
or
cmp
add
aam
pop
mov
dec
sbb
jg
test
int3
in
mov
mov
rcrb
pop
and
lcall
je
push
pop
cmp
out
decb
push
dec
loop
iret
dec
xchg
add
fiadds
sahf
movsl
pop
fsub
lret
cs
adc
sbb
aad
stos
outsl
fldl
test
mov
orb
sbb
aaa
and
fisttps
addr16
bound
add
out
rclb
movsl
lock
mov
sub
stos
mov
dec
jae
mov
js
adc
adc
mov
out
pop
push
pop
sbb
in
sub
subb
xchg
sbb
sub
sti
jge
insb
dec
jne
mov
xchg
adc
cmp
ret
sahf
mov
leave
pop
mov
outsl
xorb
mov
fcoms
adc
dec
test
cmp
das
adc
jmp
je
mov
test
pop
or
les
mov
test
jge
mov
cmp
ds
and
jne
dec
mov
add
fimull
mov
lcall
dec
mov
pop
icebp
outsl
movsl
hlt
lock
jns
xchg
lahf
std
ficomps
js
or
call
test
jb
int
push
xchg
fiadds
dec
add
fstl
addr16
mov
sub
ret
arpl
arpl
inc
mov
add
and
ss
dec
les
testb
call
inc
pop
ret
sub
mov
outsb
aam
adc
flds
or
ret
xchg
and
ret
loopne
rorl
push
mov
jne
and
into
mul
fsubrl
pop
popf
aaa
enter
mov
ds
aas
or
test
sub
sub
cltd
and
inc
arpl
test
xchg
inc
mov
mov
and
xor
jmp
lret
pop
pop
dec
call
sbb
stc
mov
adc
xchg
addr16
pusha
out
in
xchg
pop
inc
mov
enter
cld
das
fs
push
sti
push
mov
mov
icebp
inc
gs
out
arpl
and
andl
mov
iret
xor
xchg
bound
stc
dec
les
js
cmpb
mov
lret
sub
mov
pop
mov
stos
aaa
or
insl
mov
inc
stc
cmp
adc
push
push
xor
lock
cmpsb
outsb
pusha
and
icebp
scas
inc
add
sahf
cltd
lods
mov
lahf
mull
inc
gs
mov
dec
or
sub
in
cmc
pop
dec
je
or
add
repnz
andl
push
push
push
pop
cltd
dec
push
adc
xchg
adc
dec
cld
lret
out
xor
out
jb
mov
movsb
jne
in
xor
cmp
jmp
xor
imul
divb
stc
sti
pop
das
bnd
lods
aad
or
xor
add
scas
testl
cmp
mov
inc
mov
push
lods
mov
cmp
fsts
xor
xchg
jl
into
sbbb
push
dec
gs
jmp
sahf
scas
pop
add
cmp
jle
callw
movsl
pushf
mov
fimuls
push
repnz
aas
outsb
push
das
imul
cmpsb
push
dec
dec
nop
mov
pop
mov
mov
jns
addl
mov
loopne
add
ret
sbb
mov
dec
mov
sub
adc
xor
fisttpl
div
stos
insb
arpl
popa
cwtl
imull
fiaddl
ret
push
push
inc
ss
xchg
jmp
jns
cmp
adc
push
sbb
incl
shll
mov
jne
push
mov
out
enter
in
into
call
addl
pop
aas
and
cmpsl
and
cld
cmp
push
or
sbbb
add
mov
inc
dec
jmp
sti
lea
ss
add
mov
pop
pop
xchg
fcmovnb
outsb
popf
rcrb
add
in
sbb
clc
sbb
add
push
xor
scas
jmp
es
cs
insb
push
jecxz
or
movb
test
jne
into
inc
fwait
cmp
or
adc
es
mov
sub
and
xchg
lds
push
xor
cltd
jp
or
inc
dec
cmp
sbb
xor
xlat
ja
mov
movsb
push
dec
pop
sbb
shll
jecxz
pop
adc
cs
notb
adc
mov
cmp
test
mov
xchg
rclb
movsb
jp
xor
cmc
aas
test
or
xchg
lock
lcall
sub
xor
ret
add
mov
js
mov
fimull
pushf
inc
or
inc
xor
sbb
xor
pop
outsl
call
popf
jnp
sub
cli
pop
fstpt
mov
movsl
xchg
push
hlt
out
sbb
cmp
cwtl
sbb
push
adc
aaa
lods
mov
ret
add
neg
sbb
test
jle
movsb
add
rcrb
aas
stos
mov
add
loopne
outsb
mov
test
jns
idiv
mov
add
adc
inc
arpl
pusha
xlat
fidivs
clc
movsl
jb
addr16
dec
and
ficomps
mov
pop
inc
add
out
xchg
cmp
xor
int
daa
sub
idivl
ret
pop
ret
push
or
pop
dec
jecxz
orl
pushf
xor
mov
sti
std
data16
out
push
testb
test
cmpsl
movl
push
outsb
ja
add
jl
scas
push
jmp
dec
mov
cmpsb
test
mov
in
mov
pop
pmaxub
add
push
mov
push
movsb
jno
cwtl
jmp
js
inc
sbb
mov
mov
push
stc
and
mov
push
std
jmp
add
fsts
inc
sbbb
loopne
mov
daa
arpl
aaa
mov
lods
mov
xchg
notl
ss
aad
addr16
mov
xchg
fistpll
inc
in
sbbl
push
jne
imul
popa
push
xor
addr16
cmpsb
xchg
lock
lock
fmuls
sbb
je
sbb
mov
jmp
decb
ret
ficoml
cmp
gs
mov
fs
out
or
test
xchg
inc
dec
testl
shll
int
xchg
sbb
xchg
sub
and
popa
cli
xchg
inc
outsb
jno
push
mov
lods
call
arpl
pop
lea
adc
cmp
std
pop
leave
out
adc
mov
push
jl
imul
xchg
test
add
push
fcompp
stos
sub
xor
test
lcall
in
pop
cmp
sbb
and
imul
in
les
push
sbb
push
ds
enter
mov
xchg
mov
stc
mov
sti
inc
sub
mov
mov
push
inc
jae
inc
add
and
jge
test
fwait
jbe
mov
inc
mov
imul
hlt
inc
mov
push
lret
jae
jo
xor
sub
add
pushf
inc
sub
andl
jo
outsl
pop
fs
scas
loopne
dec
dec
ret
dec
jl
or
add
cmp
jp
icebp
push
ds
mov
inc
mov
test
mov
int3
lock
movsb
or
lods
aam
insl
shlb
mov
pop
xor
pop
mov
ret
ja
ret
or
push
push
inc
movsl
push
mov
cld
dec
int
sbb
sub
jns
stos
xorl
cs
xchg
or
sub
jnp
fmull
sbb
icebp
out
inc
or
lods
lods
addr16
hlt
cmpl
pusha
lcall
inc
lods
or
mov
ja
leave
push
cmp
inc
jecxz
cld
mul
mov
outsb
ret
push
fcomps
mov
pushf
adc
stc
lods
sub
cmp
inc
roll
daa
mov
or
rcll
int
dec
push
jp
popl
sbb
or
loop
mov
dec
push
les
sbb
outsb
leave
pop
mov
push
inc
in
mov
sub
adc
fdivs
popf
xchg
xor
pop
movsb
sub
testl
adc
int
pop
ljmp
push
xor
mov
insl
or
jns
rcl
inc
pop
inc
cmp
stos
pop
rorl
xor
sbb
adc
push
sub
ds
inc
out
dec
mov
sar
xchg
daa
mov
push
adc
call
cmp
dec
jmp
inc
jno
rcll
icebp
das
daa
cs
push
scas
jnp
jl
lods
xchg
mov
or
push
jp
sbb
fisubrs
xchg
jno
into
mov
or
adc
or
dec
xor
push
cmp
jne
int3
mov
inc
jmp
mov
xor
shrb
cltd
pop
out
mov
inc
shl
movsb
mov
repnz
icebp
push
mov
push
fstl
pop
jecxz
dec
movsb
mov
scas
stc
stc
sub
imul
mov
rcr
inc
scas
lret
jnp
nop
dec
push
in
imull
lret
popa
or
shll
cmp
out
out
lcall
scas
or
test
add
sbb
add
mov
mov
outsl
imul
pop
pop
jo
je
scas
ret
ja
push
bound
cmp
xchg
xor
ja
xchg
cmpsl
cmp
mov
jmp
lods
adc
mov
push
jbe
lcall
sub
mov
sub
mov
and
push
imul
sub
out
test
adc
lods
gs
pop
xchg
rcll
data16
pop
jno
dec
fwait
outsl
dec
inc
pop
lret
pop
cmc
xlat
jo
cli
push
mov
jmp
ss
lahf
xor
mov
rcrl
push
pop
ret
cmpsl
decb
pop
lret
mov
pop
testl
xor
push
sbb
and
and
cmc
ljmp
orl
cmpsl
pop
imul
xchg
sub
repnz
mov
lods
mov
xchg
add
sahf
xchg
jns
neg
imul
sub
dec
sub
movsb
outsb
out
fisubrs
mov
sbb
out
adc
xchg
jecxz
jbe
cmpsl
jbe
xor
sarb
pop
push
pop
sbb
add
je
mov
shrb
mov
lret
and
dec
dec
sbb
lods
mov
fsubrs
jbe
mov
add
cwtl
out
adc
ficoms
dec
xchg
lcall
and
test
adc
fidivrl
lret
pop
mov
daa
fstpl
mov
mov
je
jbe
jbe
ret
adc
icebp
add
nop
pop
fsub
mov
ss
cltd
aas
fnstenv
and
adc
and
pop
into
push
adc
push
movsl
repz
ret
fwait
jbe
cli
imul
add
sub
fsin
adcb
cld
sub
lock
out
fldcw
iret
push
xchg
out
jnp
lahf
inc
pop
cmp
or
mov
sub
ret
dec
cmc
test
pop
cmc
sbb
mov
lret
popf
hlt
test
in
mov
ljmp
mov
push
les
mov
pop
adc
fstp
fisubrl
clc
jbe
inc
mov
fcoml
mov
arpl
out
lds
mov
jecxz
sub
das
add
sarl
inc
sub
int3
cmp
add
mov
je
sbb
jl
sub
cmp
adc
inc
adc
adc
sbb
adcl
int
lods
inc
or
or
push
dec
stos
movsl
xor
ss
mov
lea
jns
jns
push
out
pushf
sti
pop
cmp
jbe
imul
in
sbb
dec
push
addb
cld
mov
push
fidivrs
adcl
jle
sub
scas
lret
pusha
lcall
xchg
adc
mov
icebp
repz
pop
stc
mov
dec
pop
sahf
jle
add
sbb
repnz
outsb
sub
lock
sbb
les
sub
sbb
push
xlat
bound
and
sbb
sbb
xchg
and
shll
sahf
mov
out
ds
shlb
cmp
mov
inc
adc
ja
sub
push
popa
out
lds
and
lret
in
popa
fiaddl
shl
mov
ljmp
cltd
jecxz
push
es
mov
push
inc
and
push
cld
xchg
mov
jbe
sub
pop
pop
imul
ja
scas
test
in
adc
aam
out
or
sub
inc
pusha
iret
imul
arpl
adc
mov
cmc
ljmp
mov
dec
adc
pop
mov
mov
mov
jbe
xor
adc
adc
mov
fisttps
jo
dec
jae
std
push
rcr
in
imul
adc
xchg
lods
push
imul
cli
jg
sbb
pop
outsl
gs
fcoml
xchg
cmp
fnsave
clc
dec
xorb
fcmovbe
dec
pop
mov
loop
rcr
jle
mov
xchg
pop
adc
popa
mov
bound
push
inc
pop
xor
jle
jo
repz
lcall
jns
fsubs
adc
jbe
xchg
xchg
xor
cmp
dec
sub
pop
jnp
sbb
add
in
fldl2e
inc
fmull
fwait
mov
fcmovne
hlt
jecxz
xchg
pop
push
push
aaa
fistps
xchg
imul
push
add
cmpb
mov
sti
inc
test
fs
jp
into
jns
or
and
push
cmpsb
fsin
cmp
mov
enter
mov
adc
lahf
add
xchg
sbb
dec
inc
jmp
mov
call
jl
push
je
xchg
mov
imul
or
fmuls
sahf
ja
add
stos
mov
subb
jge
call
in
dec
or
cmp
mov
jmp
mov
aam
push
adc
mov
xor
sub
in
sub
loop
stos
add
xchg
inc
mov
dec
fcoml
mov
sub
sahf
jmp
sub
sbb
test
repnz
cld
stos
cmp
adcb
cmp
movsb
jmp
mov
sahf
imul
jle
dec
xor
out
xor
les
pop
sti
out
or
push
cmp
imul
xchg
arpl
jnp
mov
lahf
xor
and
pop
push
addl
fmull
xchg
test
popa
jp
lret
and
aam
test
fucomi
es
dec
int
vmaxpd
aad
jle,pn
jmp
push
and
xor
icebp
ror
push
adc
pop
inc
adc
adc
add
push
in
stc
popf
cmp
add
sbb
movsl
lahf
jmp
arpl
out
xchg
cmpxchg
dec
bound
in
or
or
xchg
scas
sbb
jbe
dec
sub
cmpsb
pop
in
and
lea
pop
mov
das
jae
outsb
sub
inc
sbb
icebp
cmc
shll
pusha
data16
out
ret
sti
mov
dec
and
sahf
leave
insb
jno
xchg
push
add
ljmp
ds
fwait
stos
mov
jo
out
pop
cld
add
sbb
jle
mov
push
test
pusha
fnsave
in
jnp
jmp
xor
jge
fwait
mov
or
xor
xchg
sub
std
add
outsl
enter
or
loopew
jle
das
scas
aam
jecxz
dec
pop
rolb
mov
stc
mov
adc
sbb
push
cmp
lds
cmp
xchg
notl
push
xchg
fsubrs
lods
insl
ficoml
ret
xchg
dec
xor
js
jg
rorb
cmp
xchg
lahf
push
scas
je
push
or
iret
inc
out
test
sbb
shr
testl
cmc
sbb
mov
cmpsb
dec
add
adc
fwait
sbb
leave
or
add
pop
aaa
or
push
jg
add
pop
inc
mov
mov
cmp
jmpw
mov
lock
inc
or
rclb
clc
mov
sbb
imul
or
push
cmp
add
xor
or
out
arpl
testb
fcmovu
xchg
psubw
lcall
clc
jns
rclb
nop
fs
xchg
xchg
cmp
popa
cwtl
hlt
fmul
addr16
mov
mov
jp
cld
sub
or
sahf
jp
or
inc
xrelease
jp
or
in
nop
clc
pusha
sbb
inc
mov
stos
xchg
out
into
int
inc
not
xor
mov
mov
cmp
bound
jbe
add
jge
pop
mov
lods
sti
cwtl
loope
insb
sbb
sub
repz
xor
out
pop
les
leave
xchg
push
fs
inc
call
sahf
clc
cmp
xchg
repz
and
xchg
add
mov
notl
pop
xchg
jge
cmp
out
int
xorl
pop
pusha
inc
pop
sub
push
rcll
inc
inc
test
or
or
and
xor
rcrb
pushw
push
adc
shl
pop
mulb
leave
addr16
push
mov
or
cmp
jge
adc
jg
dec
hlt
push
sub
adc
scas
jbe
adc
sbb
fwait
in
dec
adc
cmp
sti
and
mov
mov
cmp
sbb
aad
dec
xchg
jmp
pop
je
mov
pop
mov
cs
mov
xchg
ret
mov
fistpll
inc
fmul
push
adc
test
xchg
das
push
rcrb
dec
jge
idiv
cs
out
adc
dec
push
insl
sub
icebp
jecxz
ror
or
mov
adc
shll
pop
outsl
pop
push
sbbl
stos
negl
fmull
sub
es
int3
out
mov
roll
test
aas
dec
movsl
stc
jmp
push
adc
pop
sbb
jne
rcrl
inc
js
push
stc
lahf
adc
mov
movsb
sub
xor
les
inc
or
xchg
fildll
and
pop
inc
mov
add
inc
lahf
shlb
sbb
cmp
stos
cwtl
push
add
mov
dec
mov
jae
jb
push
adc
test
popf
movsl
cmpsl
pop
stos
mov
push
or
les
adc
mov
mov
stos
lods
scas
les
and
clc
jmp
aad
or
mov
mov
dec
or
loop
jmp
mov
adc
mov
ret
je
movsl
pop
into
or
lret
out
fimull
dec
cmpsl
aam
test
in
pop
daa
std
movsb
in
lret
adc
cmp
cmp
sahf
test
aas
mov
xor
aam
inc
xor
fadds
add
pop
push
ret
ffreep
in
pop
xchg
fsubl
sbb
dec
mov
dec
test
and
mov
inc
pop
popf
xor
lods
shlb
sub
push
and
inc
inc
mov
sub
out
loopne
cltd
cmp
jmp
sbb
fnsave
pcmpeqw
out
or
mov
pop
cmp
sbb
loopne
lret
xchg
dec
fdiv
dec
mov
jp
push
loop
icebp
rcll
lds
or
cmp
pop
mov
jns
add
and
mov
sbb
push
sbb
adc
inc
mov
sub
popf
repz
mov
mov
imulb
mov
in
cmp
mov
xor
push
sbb
push
stc
int
mov
mov
movsb
icebp
and
mov
push
mov
int3
ja
data16
jmp
lret
sti
pop
orl
addb
shrb
cli
cmc
aam
push
fcoms
popa
andl
mov
pusha
repz
pop
je
es
hlt
sub
mov
adc
push
into
fwait
pop
sub
imul
jg
insl
or
mov
add
or
xorl
dec
loop
out
jno
loop
mov
push
mov
push
mov
mov
decb
fbstp
mov
dec
cmp
xchg
je
inc
push
or
faddl
std
data16
mov
lcall
or
add
mov
xor
fs
cwtl
decl
and
mov
pop
mov
stos
clc
enter
inc
subb
pop
xchg
xor
adc
xchg
dec
pop
cmpsb
dec
xchg
and
jbe
pop
adc
loop
repz
mov
push
mov
dec
ret
ja
fdivs
mov
inc
mov
xor
add
xor
and
xchg
jge
push
xor
sbb
in
decb
xor
lret
adc
mov
push
adc
scas
int3
mov
in
jae
clc
xlat
jns
aaa
and
cltd
mov
xchg
dec
into
dec
cli
fdivs
jne
jo
add
jmp
mov
lock
out
inc
cmp
rorl
into
pop
mov
fsubrs
leave
mov
mov
or
cmp
sub
and
mov
inc
inc
shlb
jmp
jnp
pop
movsl
test
repz
test
cmpsb
stos
insb
dec
mov
cli
fisttps
xchg
pop
sahf
mov
mov
pop
pop
pop
lret
lods
and
rcll
lea
cmp
dec
test
cmp
out
lods
xor
test
rorl
adc
sub
add
jl
sub
jmp
push
mov
and
xchg
daa
rorb
mov
stos
repnz
jl
xchg
xchg
xorl
out
push
xor
and
in
mov
mov
xor
mov
test
inc
mov
fstl
out
mov
fdivs
push
cld
push
jns
mov
cmp
cmp
mov
mov
xchg
jge
xor
dec
mov
dec
pusha
lock
nop
scas
pop
mov
push
test
imul
mov
cmovno
add
dec
xchg
and
testb
sahf
jns
mov
in
push
mov
or
and
xlat
mov
imul
sbb
jno
clc
adc
lds
sub
fsubs
fincstp
out
repz
sti
dec
jle
mov
mov
fnstenv
push
icebp
repz
negl
add
dec
ficoml
push
subl
xchg
sahf
pop
mov
lret
pop
imul
push
movsl
pop
or
xor
jg,pt
or
jb
call
add
pop
push
pop
movsb
mov
sahf
cmp
cmc
xlat
stc
insb
iret
pop
xlat
hlt
add
mov
adc
mov
pop
daa
rcr
inc
shrb
sub
fldcw
lods
out
jne
xchg
mov
xor
push
mov
hlt
call
pop
xor
jmp
pop
in
inc
cmp
cltd
dec
int3
jns
shlb
cmc
jno
or
mov
sbb
aam
mov
and
pop
sub
imul
in
jmp
and
fiadds
test
jg
sub
mov
loop
xor
stos
push
insb
subl
adc
decb
sbb
xchg
out
mov
jg
pop
xchg
ja
xor
into
cwtl
outsl
push
inc
clc
mov
fsts
ja
add
mov
sub
jns
daa
mov
mov
xchg
jne
cmp
mov
mov
dec
aaa
ret
mov
roll
mov
arpl
lods
rolb
mov
and
mov
inc
rcrl
daa
jnp
jbe
mov
aam
aam
out
adc
lods
mov
sub
mov
mov
push
imul
push
mov
mov
push
xchg
mov
or
pop
test
mov
clc
push
leave
daa
inc
dec
xchg
stc
pop
inc
or
ss
daa
aad
repnz
fsubrl
jae
aas
inc
je
pop
insl
adc
mov
ss
dec
or
cmpsb
xchg
add
push
mov
jne
pop
push
push
xor
add
push
inc
pop
int3
lock
gs
addb
mov
iret
insl
movsl
insl
faddl
adc
popa
orl
sti
cmc
xchg
push
xchg
push
adc
insb
inc
cmp
adc
loopne
gs
out
dec
dec
lahf
popa
jns
pop
jge
mov
rcr
push
shll
cmpsl
mov
push
dec
ja
jae
in
jne
les
shll
and
mov
push
push
or
icebp
mov
xchg
ja
pop
inc
mov
inc
fldl
int3
fidivrs
fs
push
push
sub
xchg
sub
mov
je
addl
xchg
mov
sahf
or
xor
fdivl
jg
pop
cmp
out
iret
pop
push
lock
iret
jnp
inc
out
dec
mov
jae
cmp
lock
and
hlt
cs
outsb
inc
push
cli
jecxz
fwait
or
pusha
xchg
lods
mov
sti
mov
hlt
out
add
xchg
in
adc
call
dec
movsb
xchg
iret
mov
aaa
add
insb
scas
aas
stos
into
data16
mov
push
imul
lock
or
test
icebp
xor
sub
daa
out
rcll
or
in
stc
in
lods
imul
xchg
mov
sti
sbb
cs
aad
shll
mov
fwait
rorl
jno
mov
push
leave
lret
mov
add
fs
xor
add
aas
mov
mov
xchg
push
sub
test
sub
jb
dec
or
mov
or
jne
sub
shl
push
jae
mov
lret
lret
rorl
shll
orb
js
mov
out
xor
add
shll
fldcw
jo
loopne
sub
lods
adc
dec
ret
lcall
pusha
les
loopne
ss
add
push
sbb
enter
dec
sub
xchg
mov
pop
sbb
test
mov
lods
ljmp
fistpll
cli
dec
gs
rcrl
xchg
lcall
add
fcoms
adc
mov
mov
mov
push
icebp
push
pop
inc
cs
fwait
nop
and
dec
imul
xchg
stc
push
ljmp
and
fidivs
jp
sub
cmp
pop
pop
cld
out
fincstp
and
rclb
cld
xchg
mov
gs
insb
pop
ss
push
ljmp
mov
jecxz
fdivr
dec
in
enter
xchg
xor
testl
mov
leave
fucomip
cmp
out
loope
push
sbb
jns
add
and
lea
jb
je
xchg
mov
imul
xor
popf
pop
cmp
xor
shlb
test
int
dec
add
mov
sub
addr16
sbb
repnz
mov
das
sbb
and
mov
adc
lret
push
flds
dec
mov
stos
in
in
in
adc
xor
sub
outsb
add
xchg
lea
jg
xor
sub
std
mov
subb
lret
add
dec
iret
jmp
test
inc
xchg
inc
daa
or
loope
sbb
inc
push
cmpsb
js
int
scas
repnz
push
lds
in
or
lock
xchg
dec
aas
sub
cmpb
test
mov
es
outsb
shll
push
mov
cmp
inc
sub
ljmp
and
mov
icebp
jbe
sahf
outsl
clc
sbb
and
inc
cld
or
nop
xor
add
out
add
jmp
imul
pusha
lret
xor
xor
add
cmp
lock
shl
inc
cmc
enter
ds
xor
mulb
push
inc
dec
loopne
cld
sahf
ficompl
cmp
push
mov
aas
lods
inc
mov
mov
xorb
ret
jle
insb
rorb
int3
jae
in
and
divb
jl
inc
mov
clc
dec
pop
fldt
in
lds
into
lret
push
out
int3
cs
sbb
mov
dec
mov
push
inc
xchg
mov
ljmp
loope
cmp
and
sbb
out
sbb
testb
and
mov
shrl
pop
and
dec
repz
addr16
adc
sar
cmp
hlt
adc
inc
rorl
leave
sub
mov
jmp
xor
idiv
cli
call
mov
dec
int
mov
popf
push
sarl
lods
mov
inc
push
lret
shlb
jle
mov
mov
push
out
push
lcall
das
stos
or
push
stc
push
push
or
mull
lea
and
ret
sbb
push
xor
lret
pop
pop
shl
jmp
mov
outsl
dec
add
mov
out
pusha
ss
loop
sti
or
dec
pop
pop
cwtl
dec
pop
or
add
in
ja
sub
pushl
mov
ljmp
cli
cli
pop
stc
test
popa
xchg
dec
push
inc
faddl
gs
mov
and
adc
inc
inc
dec
push
jns
aad
pop
push
pop
jo
mov
pop
xor
cmp
inc
pop
in
mov
sarl
lahf
test
jle
pushf
and
mov
ljmp
fisttpll
into
inc
and
cmp
pop
sbb
mov
sub
pop
dec
cmpsl
inc
inc
adc
sub
add
test
mov
jmp
mov
and
addr16
mov
pop
add
les
nop
mov
mov
inc
sbb
outsl
sbb
push
sub
enter
lock
jl
stos
lods
pop
xor
or
out
inc
dec
jl
inc
sbb
stos
inc
sub
mov
dec
inc
loopne
pusha
push
and
enter
xorb
add
inc
ja
in
sbb
xchg
pop
pop
fcmove
sub
or
mov
aad
xchg
sub
push
mov
lods
pop
jmp
jbe
mov
dec
test
roll
jp
test
movsl
out
pop
mov
or
mov
jb
stos
xor
push
push
stos
add
std
jno
movsl
cmp
cmpsb
icebp
pop
inc
jae
mov
fsubr
out
jl
or
out
mov
sub
dec
xchg
data16
out
mov
xor
jne
or
int3
imul
xor
out
int3
jne
movl
jne
roll
dec
inc
clc
adc
xor
fwait
dec
insb
rorl
dec
add
js
scas
push
xor
xor
aas
daa
sbbl
xchg
xchg
add
xorb
test
inc
dec
int3
pop
jmp
push
repnz
push
cmc
fstps
add
xlat
add
rorl
pop
pop
in
and
jge
inc
mov
pop
dec
out
sub
jno
xor
pop
mov
pop
fwait
out
lret
scas
lahf
lods
or
jge
sub
and
jle
mov
inc
xor
dec
ror
ds
mov
xchg
in
jb
push
adc
push
jle
dec
jne
scas
or
xchg
pop
enter
xchg
fs
xchg
cli
pushf
sub
lods
fcoms
test
scas
cmp
inc
outsb
mov
xchg
jo
xchg
cmpsb
pusha
and
inc
push
fcmove
leave
dec
mulb
adc
and
cmp
jle
test
shlb
aaa
out
dec
add
enter
xchg
adc
inc
xor
ss
stos
sub
ret
scas
ss
lcall
outsl
repz
fidivs
hlt
shrl
fisttpl
push
pop
adc
test
ret
in
mov
mov
xor
mov
add
mov
and
adc
ss
hlt
push
xor
cmp
adc
test
dec
inc
push
adc
rcll
dec
xor
jne
and
pop
std
dec
aas
stos
xor
hlt
add
dec
inc
ret
mov
clc
mov
cwtl
repz
mov
mov
jb,pn
xor
push
add
mov
sarb
stc
out
nop
mov
pop
xchg
orb
and
add
fst
pop
cmpl
fs
enter
mov
es
ljmp
jb
leave
xor
mov
jge
xchg
cmp
iret
ret
shll
mov
lock
test
mov
fcomps
jne
fcom
jg
mov
test
pushf
arpl
rol
jl
out
cmpsb
orb
inc
adc
jge
and
inc
mov
push
clc
fadds
mov
sbb
insb
dec
mov
mov
and
jb
popa
daa
in
mov
xor
and
dec
mov
mov
sti
js
pop
cli
xchg
add
pop
cmp
lods
and
xor
test
jge
jmp
add
lahf
dec
jecxz
pop
fiadds
and
mov
pop
sbb
bound
dec
dec
or
test
fwait
std
adc
mov
aad
pop
ljmp
jae
dec
out
mov
mov
insl
adc
push
insb
mov
mov
pop
repz
nop
std
xor
movsb
outsb
pushf
icebp
addr16
leave
out
call
sub
sbb
in
ljmp
decl
sub
pop
jno
xchg
mov
ljmp
cmc
sub
cmpsl
jae
jp
cmc
repnz
jb
stos
icebp
xor
jge
inc
jmp
fmul
jmp
aad
pop
icebp
pop
jo
or
and
test
jns
aad
jnp
mov
js
mov
push
xchg
mov
sub
mov
ror
sbb
stos
in
outsl
and
dec
rolb
mov
pop
stos
imul
xchg
sbb
jb
inc
orb
stos
xor
sbbl
fidivrl
imul
adc
adc
push
popa
pop
stos
cltd
subl
test
add
jbe
or
je
test
jmp
xor
aam
lcall
loopne
cwtl
imul
divb
leave
dec
xchg
out
mov
push
or
and
mov
mov
cmpsb
mov
icebp
push
cmp
sbb
movsb
mov
and
or
rorb
jg
inc
mov
fstps
in
mov
jl
call
jnp
fimuls
in
sub
and
and
sbbl
push
mov
mov
mov
int3
pop
or
jmp
add
ret
mov
out
jae
mov
xor
movsb
add
xor
enter
roll
push
in
xchg
nop
lret
push
push
jle
scas
test
in
in
ficoml
fdivs
shrl
mov
lea
or
dec
lds
fsubrs
mov
mov
loopne
imul
push
add
in
and
mov
adc
add
or
testb
fcoms
scas
inc
adc
test
push
std
lahf
stos
jge
push
clc
rcrb
lds
pop
xchg
cwtl
inc
mov
mov
out
pop
mov
cmpsb
data16
or
pop
dec
loop
inc
cli
mov
fsts
jno
push
daa
jle
mov
or
add
shll
and
in
das
add
movsb
stos
sbb
jbe
mov
xchg
fisubs
cmp
cmp
jle
mov
fmuls
aas
xchg
inc
adc
sbb
cmp
stc
and
shll
icebp
push
repnz
shrl
push
stos
mov
inc
test
pop
jb
hlt
push
call
mov
add
mov
sti
out
push
je
pop
mov
jbe
lea
fwait
adc
jle
sbb
jns
jne
mov
mov
shlb
sbb
icebp
call
pop
lahf
mov
pop
ss
movsl
or
lret
inc
xchg
mov
inc
jl
movlps
push
mov
cli
mov
std
lock
xchg
fwait
pop
inc
xchg
mov
outsb
cld
sbb
mov
adc
cmpsl
repnz
out
mov
mov
test
mov
xor
aam
rorb
test
xor
mov
xchg
mov
out
inc
vsqrtsd
mov
imul
pop
divb
inc
repz
call
cmp
fcompl
mov
jg
push
adc
popf
pop
rcr
jne
lods
pop
xor
xchg
vphaddubd
jecxz
cwtl
pop
push
fcomp
push
mov
out
xchg
push
fsubr
or
fldcw
nop
cmp
out
adc
dec
jg
jne
or
sub
in
pop
xor
int
mov
jmp
fcomps
rolb
mov
ret
and
enter
addr16
mov
sbb
dec
sub
mov
jae
iret
jge
jb
repnz
inc
sarb
xchg
inc
int
ror
addr16
and
std
int
out
inc
stos
jge
int
add
inc
test
sbb
cmpsl
xor
push
imul
loopne
lds
inc
inc
add
mov
ljmp
sub
push
mov
movsl
pushf
and
pop
jp
lods
fistpll
addr16
aam
insl
in
dec
test
into
cmp
ret
or
inc
aaa
xchg
ror
ret
sti
scas
cmpsl
ljmp
xchg
dec
jmp
lods
lods
inc
push
push
push
push
mov
xor
mov
ljmp
hlt
test
data16
cwtl
push
outsl
jns
test
sbb
push
or
sbb
mov
xor
dec
flds
cltd
loopne
mov
in
inc
stc
ds
mov
or
std
jp
out
add
mov
cs
mov
fbstp
scas
inc
out
mov
mov
imul
aaa
cmpsl
dec
lock
int3
jbe
push
dec
mov
inc
fldl
mov
shlb
push
mov
insb
sub
mov
ret
or
incl
stos
cs
fldl
clc
dec
cmp
fimuls
clc
sbb
pop
nop
loop
xchg
fstps
in
leave
inc
inc
scas
mov
jl
push
xor
stos
xchg
cmp
popa
lcall
in
push
mov
mov
xor
lea
fistps
loope
int3
imulb
and
pop
push
and
cmp
cwtl
mov
pop
push
sti
loope
ja
adc
inc
insb
xor
add
adc
js
dec
or
ret
fdivrl
xchg
xchg
sbb
xor
mov
jbe
scas
mov
fcomps
leave
cmp
iret
out
sahf
and
lret
sbb
insl
pusha
in
pop
sub
push
push
xchg
pop
in
sahf
pushl
addr16
mov
cmp
dec
pop
xorl
iret
mov
shl
popf
in
mov
sbbb
hlt
stc
or
and
outsb
in
loopne
and
inc
mov
in
mov
imul
icebp
cmp
jno
add
outsb
cmp
xor
mov
sbb
adc
pop
mov
fs
pop
enter
mov
movsl
dec
add
orb
outsl
add
cmc
ds
insl
addr16
pop
daa
cmp
test
movsb
inc
ret
shlb
mov
sub
lds
dec
out
cltd
pop
sbb
mov
aas
xchg
popl
jle
dec
or
xor
sbb
adc
imul
jae
xchg
out
std
cli
mov
dec
mov
and
rcll
test
and
imul
inc
mov
in
inc
sbb
in
mov
pop
pusha
jecxz
xchg
or
fs
fbld
rorb
int3
xchg
mov
hlt
push
mov
or
sbb
pop
and
pushf
int3
pop
loop
mov
in
lock
ljmp
es
inc
js
jg
out
dec
popa
loope
push
or
mov
nop
clc
adc
shll
sahf
jl
popf
divps
pop
jo
xor
int3
je
call
pusha
add
mov
shl
out
inc
ret
in
pop
loop
add
push
xor
sbb
mov
repz
mov
pop
ja
jecxz
in
sbb
adc
jns
pop
pop
xor
test
jmp
mov
mov
mov
pop
sub
pop
addb
insl
incb
sub
cmpsl
sub
decl
mov
mov
in
scas
push
pop
mull
cltd
mov
and
aaa
imul
push
mov
push
movsb
daa
lcall
test
mov
mov
int
push
fstpl
repnz
adc
iret
mov
jbe
inc
aam
rcl
sbb
mov
rol
lock
arpl
sub
in
push
mov
sub
in
jns
sub
pusha
clc
test
test
pop
sub
sbb
xor
cmp
stc
or
cmp
out
pop
inc
or
mov
mov
mov
mov
dec
mov
ss
imulb
cmp
addr16
andb
lret
es
insb
cli
mov
mov
adc
fdivl
outsl
es
lock
dec
outsl
loopne
mov
popf
and
hlt
loopne
lds
dec
xchg
jg
dec
mov
cmpsb
jge
mov
xor
xchg
add
arpl
sub
or
inc
mov
lret
filds
jno
cmp
sarl
jmp
jae
aam
jp
pop
push
add
inc
addb
bound
pop
pop
lret
das
test
xchg
sub
xchg
sbb
lea
bound
dec
inc
sbb
push
pop
ja
cmpsl
sti
or
aad
movsl
ja
bnd
jae
xlat
xchg
mov
jne
xchg
lea
mov
cmpsb
out
adc
test
je
jmp
jnp
adc
add
pop
xchg
arpl
xor
inc
pop
sbb
in
jb
gs
xor
imul
jbe
inc
sbb
jb
insb
sbb
pop
inc
xchg
xor
test
jecxz
or
push
aas
decb
lods
pop
sub
inc
fistpll
mov
roll
xor
sbb
mov
jp
cmp
rcr
adc
or
mov
dec
cli
sub
sub
add
dec
add
xchg
pop
pushf
add
jo
push
inc
mull
mov
mov
xor
fistps
adc
push
jecxz
je
sbb
int3
in
dec
dec
mov
xor
pop
inc
adc
fildll
test
push
xor
out
xlat
mov
dec
movsb
jbe
push
jmp
and
mov
mov
or
xchg
mov
icebp
push
enter
jp
sub
loopne
push
push
test
das
cmp
div
sti
xor
or
mov
imul
loope
jae
shll
add
pop
sub
dec
shll
sahf
sahf
sub
repz
lock
lock
dec
rolb
inc
dec
push
mov
mov
jne
mov
lods
sub
orb
repz
xchg
sbb
jg
lock
mov
jg
out
lea
ja
sbb
out
mov
mov
inc
pop
adc
mov
pop
in
fsts
push
cwtl
dec
int
imul
mov
dec
and
sarl
xor
fwait
push
or
subl
nop
sti
stos
inc
dec
cmp
pop
lret
rcl
inc
cmp
int3
fstpl
shlb
jbe
mov
push
ljmp
cmp
jnp,pt
mov
xchg
fldlg2
push
pop
or
mov
jne
sbb
dec
insl
imul
mov
xor
add
or
bound
inc
pop
xchg
sbb
push
and
pop
popf
stos
sti
sub
leave
inc
mov
mov
les
cltd
xor
sub
out
lods
add
mov
out
xor
pop
daa
dec
or
movsl
std
xlat
pop
sbb
stc
mov
xor
js
fwait
mov
and
js
in
or
cmp
dec
test
push
inc
and
mov
mov
mov
sarb
outsl
pop
cmpsb
stos
xchg
xor
lock
sahf
mov
push
or
mov
out
pop
inc
in
lahf
ret
iret
and
insb
sub
lock
jbe
add
rorb
mov
sahf
add
mov
sar
sti
std
xchg
arpl
mov
and
pop
xor
sub
mov
xchg
jl
xchg
negb
loope
loop
fimuls
sahf
pop
xchg
jg
into
sbb
push
roll
push
nop
movsl
addr16
xchg
mov
insl
add
or
and
add
pop
adc
testl
jmp
bound
ss
enter
pop
push
arpl
pop
lret
jae
cmpsb
push
mov
jne
mov
std
ret
jg
sarl
fcompl
sub
and
stc
ret
out
sar
fs
in
sbb
or
je
into
incb
xor
popa
sub
mov
cld
test
mov
jle
sub
jne
mov
add
mov
inc
jecxz
in
add
loopne
sub
andb
dec
mov
insb
mov
hlt
call
sbb
add
jge
xchg
cmp
je
adc
xor
sub
popa
pop
fwait
adc
cwtl
leave
mov
push
sbb
jae
dec
cli
scas
and
dec
flds
jle
pop
pop
mov
jle
daa
mov
stos
repnz
and
inc
les
outsl
lret
mov
mov
rorl
pop
add
cmp
dec
or
loope
std
jl
xchg
cmpsl
sarl
loope
inc
inc
mov
shll
insl
xchg
cmp
dec
outsl
and
sbb
nop
cmp
rolb
mov
ret
notb
mov
jo
nop
rorb
shl
push
mov
cmpsb
adc
outsl
sahf
fs
jae
pop
lcall
xchg
mov
push
dec
lods
cmp
adc
jl
and
jnp
idivb
xor
std
inc
ret
negl
shr
xchg
ljmp
jge
mov
mov
rolb
xchg
cltd
lea
jmp
adc
inc
ret
xor
sub
jp
lcall
clc
sub
lds
jecxz
add
xor
mov
pop
xchg
pop
in
sbb
pop
mov
iret
movsl
mov
add
loope
push
sub
mov
sti
mov
std
adc
outsb
insb
test
lock
mov
inc
mov
and
lods
fsubl
gs
jo
and
xor
or
dec
ljmp
add
jecxz
stos
loopne
rolb
std
xchg
arpl
jns
ja
push
popf
inc
cmc
xchg
mov
pop
test
push
push
jge
sbb
or
ret
incb
mov
cmp
push
pusha
stos
dec
sahf
mov
push
cld
incl
ja
push
sub
mov
pop
inc
xchg
insb
fstpt
dec
adc
imul
sti
adc
jo
xor
sub
or
inc
cs
lock
test
cmp
vpmacsdd
xchg
xorl
xchg
pop
and
pop
or
and
inc
xchg
mov
jp
cmp
add
push
iret
daa
fs
out
lods
xor
clc
add
fsubrl
xchg
rcl
lods
mov
sbb
sar
sarl
jb
lock
pop
fsub
popa
lret
inc
daa
sub
rorl
int
sub
sbb
add
jnp
and
ljmp
mov
lret
test
ret
nop
out
xchg
fisttpll
push
push
mov
fsubrs
out
cmp
inc
sbb
mov
aas
jecxz
adc
dec
sbb
jne
gs
mov
inc
xchg
flds
stos
sub
pop
xor
imul
mov
stos
sbb
mov
mov
jns
cmp
push
loope
fsts
ss
sarl
shll
and
push
push
pop
cltd
aam
push
push
sub
xchg
test
gs
and
add
clc
mov
bnd
pop
cmpsb
arpl
dec
test
fldenv
push
shrl
xor
scas
adcb
add
fimuls
es
pop
lea
xor
push
or
cmpsb
cld
jbe
pop
dec
test
dec
cmp
jne
movsl
mov
dec
adc
shll
test
add
sub
ror
test
dec
fs
add
and
fldenv
daa
mov
and
arpl
sahf
mov
and
sbbl
repz
cmp
pop
mov
repz
mov
rcll
mov
inc
sbb
push
cmp
push
outsb
push
movl
or
ss
ds
nop
ss
aam
and
jmp
cltd
and
and
insb
pop
enter
adc
inc
xchg
sub
inc
cmpsl
jle
out
inc
cmpsb
pushf
cwtl
adc
cmp
cmp
scas
cltd
outsb
cmpsl
mov
push
lock
jo
faddl
push
loopne
mov
and
vshufps
xor
mov
popf
enter
cmpsl
sub
loop
nop
imul
mov
push
jb
pop
rorl
mov
and
mov
hlt
jbe
and
popa
mov
sbb
mov
sahf
push
adc
mov
fs
cld
or
jl
rclb
xor
adc
jecxz
dec
push
pushf
push
jl
xchg
push
mov
mov
test
imul
mov
or
popa
and
in
inc
jecxz
push
jmp
xor
add
push
int3
jl
lcall
out
lea
inc
loope
cli
bound
hlt
add
mov
mov
or
and
cmp
imul
jg
cmp
popl
mov
lea
cmp
and
insl
pop
inc
cmp
push
adc
clc
push
negl
mov
xor
push
push
daa
pop
push
cmpsl
and
xchg
ret
repnz
dec
mov
or
out
xchg
dec
stos
mov
cmp
ret
cmpsb
add
icebp
or
sub
fs
jecxz
arpl
pop
incl
hlt
scas
arpl
pushf
push
xchg
xor
mov
nop
xchg
out
xor
xchg
cmpsb
in
jmp
adc
insb
ljmp
or
stos
and
push
pushf
jb
notl
pop
into
add
fsubs
fcomi
jb
mov
insl
cltd
cs
jle
or
push
lds
mov
ds
dec
sahf
pop
and
mov
sub
mov
sbb
or
xchg
pop
push
sbb
movsl
cmp
mov
cmp
push
push
shrb
push
mov
ja
cli
mov
imul
jg
lea
and
sbb
adc
loop
sbb
mov
jae
gs
pop
out
xor
xor
roll
sbb
sub
inc
lock
vmovntps
add
sar
ror
js
push
out
or
mov
sub
add
fsub
or
mov
movl
enter
cmp
nop
mov
imul
xlat
mov
xchg
add
mov
clc
mov
cwtl
xchg
add
mov
and
test
and
jnp
cwtl
adc
mov
inc
js
and
outsb
fiaddl
cwtl
and
push
mov
js
mov
xor
ljmp
sbb
js
movsl
mov
aam
repz
popa
scas
pop
inc
dec
addr16
shld
jle
arpl
in
aas
repz
dec
stos
stos
jle
mov
or
fs
mov
add
adc
add
cld
call
add
dec
fnsave
mov
and
mov
and
das
orb
xor
push
or
mov
adc
out
imul
xchg
dec
mov
lods
mov
leave
cmpsb
in
divl
push
insl
jmp
push
sbb
arpl
or
cmp
xchg
scas
push
adc
mov
push
out
xchg
into
mov
dec
sbb
out
adc
addr16
add
add
mov
jno
add
addb
lahf
inc
mov
repnz
test
out
or
mov
adc
leave
ror
push
cmp
mov
mov
or
push
mov
mov
dec
xlat
pop
std
out
outsb
push
push
pop
pop
jns
or
cmpsl
jg
pushl
dec
ja
in
pop
add
outsl
fldl
ss
or
sbb
jl
xor
shr
je
nop
fistpll
push
lods
rclb
push
test
jno
loop
jae
mull
jo
outsl
pop
mov
call
clc
sarl
jmp
je
pop
les
stos
dec
arpl
aaa
rol
daa
sahf
or
mov
cmp
shl
fstpt
pushf
sahf
pusha
lcall
sbb
repnz
cli
mov
cmovg
aaa
xchg
movl
jno
xlat
fmul
stos
xchg
jns
push
arpl
insl
insl
and
out
inc
dec
push
xchg
push
into
fisttps
sahf
mov
jl
add
jno
lret
fidivs
pop
sbb
mov
out
pop
lods
mov
jo
lcall
push
and
sub
clc
test
mov
pusha
fisubl
out
fldcw
pop
push
jmp
mov
cmp
dec
fisubl
xor
jne
out
out
xor
mov
ret
adc
sbb
loope
xor
fildll
decl
push
sbb
inc
ljmp
shrb
sub
cmp
clc
fs
adcb
lea
xor
in
mov
fs
push
ja
bound
loopne
mov
pushf
fistpl
or
movsl
stc
mov
in
fstps
or
jmp
popa
shrb
mov
sbb
sub
xchg
dec
sub
adcl
movsb
es
lds
es
xchg
jns
cmp
mov
adc
cmp
or
xchg
mov
fadds
dec
dec
dec
jl
scas
popf
and
sbb
mov
test
pop
loop
mov
inc
cmpsb
and
and
aas
push
jg
sahf
xchg
adc
fdivrl
dec
xchg
lock
sahf
aad
sub
jne
add
imul
and
add
test
xchg
loope
icebp
sbb
loope
fmuls
mov
fstps
inc
iret
outsl
fstl
outsl
aaa
movsl
cmp
mov
mov
nop
mov
ficomps
mov
icebp
add
imul
cmp
mov
push
pop
add
cmpb
fcomi
idivl
stos
mov
loope
cmp
sbb
ja
inc
pop
in
dec
mov
adcl
jbe
xor
andb
out
and
xor
inc
fcompp
leave
mov
filds
clc
les
out
fwait
in
ret
sahf
pop
inc
ja
cmp
xchg
cmp
sub
cmp
mov
sbb
sbb
lret
mov
insl
mov
push
cmp
out
mov
dec
shl
inc
xor
or
fcomps
stos
fcoml
add
das
jae
xor
repnz
in
adc
imul
repz
add
loop
xor
mov
add
icebp
out
divb
lcall
mov
dec
loope
les
pop
sub
xor
pop
xchg
imul
adc
lock
and
loope
ret
pop
pop
mov
stos
lock
out
and
adc
hlt
subb
add
test
pop
push
lods
cld
jae
aaa
scas
in
fdivl
xor
cmpsb
ds
idivl
data16
aad
sbb
loop
mov
or
hlt
mov
inc
jbe
add
repz
mov
enter
sub
test
int
filds
push
mov
imul
out
jg
add
cltd
mov
addl
dec
mov
call
jb
out
shll
and
stos
add
test
test
inc
mov
jne
fdivrs
aad
push
shlb
repz
sarl
jnp
out
mov
pop
cmp
stc
xchg
and
cld
push
aad
push
call
pop
jb
ja
lahf
insb
sub
and
xor
std
mull
and
test
popf
push
or
xchg
dec
pusha
movsb
in
adc
outsb
addl
insb
fs
push
mull
mov
jge
mov
mov
jns
push
scas
sbb
jae
es
cld
push
scas
daa
clc
insb
jg
jnp
cli
clc
in
out
xchg
adc
add
jns
int
in
mov
adc
loopne
daa
cmpsl
inc
push
push
repnz
outsl
test
dec
inc
xchg
sahf
lock
mov
pop
mov
and
xchg
cmpb
sub
adc
push
roll
in
daa
jo
dec
jo
pop
lods
jl
adc
out
pushf
ret
pop
xchg
push
add
aad
int3
push
roll
dec
jns
mov
mov
dec
mov
xor
push
std
pop
out
in
push
in
repnz
mov
cmp
ret
add
mov
mov
loope
push
fnsave
sbb
and
push
add
pop
icebp
cwtl
popf
xchg
dec
push
mov
jnp
push
mov
mov
stos
int
mov
sub
xor
inc
adc
sub
and
lock
jge
je
insl
xchg
dec
in
adc
jns
mov
adc
rorl
jns
je
pusha
cmpb
sbb
ret
cmp
xor
mov
aam
push
test
ds
add
sub
push
pop
mov
loop
loope
mov
jle
test
pop
lahf
jle
fsts
jb
pop
adc
in
fsubs
das
rclb
or
outsb
dec
ss
pusha
jle
lods
popa
and
xchg
push
repz
push
jbe
mov
or
es
dec
dec
push
and
mov
mulb
pop
mov
sbb
hlt
cmpsb
fcomps
ss
xchg
xchg
and
dec
lret
inc
sub
iret
cwtl
xor
add
push
xor
in
dec
add
cs
outsb
jb
std
push
enter
mov
ficoml
pop
cs
jp
pop
jns
outsl
fwait
cmpsl
dec
push
xchg
mov
and
jge
loop
int3
sub
or
cmp
int
repnz
pop
push
cmpsl
jmp
adc
fs
in
mov
sahf
fisttps
jne
imul
cmp
add
cmp
inc
dec
aaa
sub
mov
mov
xor
cmc
int3
arpl
out
fnstsw
push
mov
adc
mov
add
xchg
cltd
movl
add
mov
mov
mov
lock
cwtl
adc
in
movsb
daa
shr
pop
arpl
ss
stos
push
mov
push
or
test
xchg
in
jbe
scas
xchg
cmp
sarb
ja
sbb
sbb
je
xor
inc
in
push
dec
sbb
gs
or
cwtl
arpl
inc
movsb
cmp
jl
xor
in
add
mov
and
bound
repnz
push
inc
dec
cld
mov
les
lds
jle
cmp
lods
xor
xchg
xor
and
shlb
das
mov
push
xorl
xchg
adc
add
je
test
test
push
jno
les
sub
fs
out
xlat
jecxz
test
push
adc
roll
xor
mov
jb
mov
mov
dec
push
shlb
orl
xchg
xchg
push
les
push
daa
mov
dec
js
aam
cs
in
cmpl
mov
and
repnz
dec
dec
dec
in
in
xor
pop
scas
sbb
je
lock
pop
lahf
pop
icebp
and
add
lahf
scas
and
shll
sbb
sahf
jecxz
inc
fsubrl
imul
jle
popa
adc
out
mov
xlat
test
fbld
outsb
cltd
dec
push
ss
add
movsl
outsl
mov
inc
jle
sbb
arpl
jb
nop
xchg
sbb
punpcklwd
shlb
nop
pop
add
out
jle
sbb
outsb
inc
jp
pushf
shrl
dec
xor
mov
jge
fcmovne
add
loope
notb
add
push
out
sbb
dec
mov
mov
jns
aad
clc
mov
popa
push
and
das
int
sub
jo
pop
shl
data16
clc
mov
inc
mov
cmp
or
lret
outsb
inc
mov
and
push
sbb
out
testb
iret
and
inc
popa
clc
lret
notb
mov
dec
jecxz
rolb
nop
jmp
jmp
rolb
mov
fmuls
leave
cmc
push
cld
inc
mov
jne
divb
jl
incb
fwait
mov
or
xchg
jbe
or
jmp
or
test
pop
call
test
cmpsl
popf
lock
inc
addr16
cmp
push
mov
fldcw
cmpb
push
pop
enter
sti
stc
test
adc
pop
shrb
shlb
dec
jecxz
dec
das
sub
orl
je
xorl
das
fs
add
into
lods
inc
sbb
outsl
adc
out
psubd
scas
inc
pop
ds
bound
int
int
call
test
popa
hlt
mov
rclb
test
inc
xor
push
cmp
pop
mov
cmpsb
and
testl
pop
out
and
mov
push
int3
mov
mov
mov
pop
cmc
lcall
inc
mov
sbb
sbb
mov
sar
or
add
xchg
cltd
dec
sub
and
or
ja
movsl
mov
inc
push
int
stos
fwait
bound
std
in
mov
repnz
mov
adc
fdivrl
fistpl
or
andb
mov
jge
out
mov
mov
cs
in
sbb
cmpl
lods
or
jg
std
js
or
jecxz
stos
xor
dec
out
lods
cli
mov
sbb
dec
incl
xchg
stos
aaa
add
in
mov
data16
push
push
push
lods
mov
jnp
fwait
push
addr16
in
adc
mov
cli
pop
icebp
inc
and
jo
subl
pop
jecxz
sub
inc
shlb
push
pop
pop
mov
movsb
fs
mov
jl
clc
add
lods
and
inc
dec
jns
jbe
vmovntps
sbb
jne
push
mov
pop
dec
out
lods
scas
jne
xchg
push
cmpsl
je
jp
into
mull
aas
aaa
fimull
insl
add
or
rcr
loop
mov
fwait
push
stos
mov
sub
and
pminub
es
and
or
movl
scas
cmpsb
popf
xchg
push
jae
mov
cli
inc
inc
pop
sub
enter
es
jg
and
sub
and
pop
and
lcall
dec
add
pop
fistpll
mov
les
dec
sbb
cmp
rcl
add
cmp
stc
and
push
mov
xor
and
sub
mov
xor
loope
sbb
pop
testb
scas
or
out
ror
jnp
mov
arpl
loop
or
movsb
divl
addr16
dec
sub
push
fwait
xchg
inc
mov
xchg
subb
push
test
sbbb
jp
jl
flds
dec
mov
sub
iret
int
ret
shr
int
inc
mov
fldl
hlt
push
push
mov
mov
inc
add
das
cmc
leave
outsb
or
or
pop
jg
imul
lret
or
inc
movsb
imul
mov
mov
fs
pushf
js
addr16
shlb
push
int
cmp
jbe
int3
out
jmp
rol
clc
cmp
jmp
xchg
pushf
stos
sbb
jno
xlat
fdivl
ret
dec
loope
sub
sbb
lds
adc
inc
cwtl
xchg
cmp
mov
jge,pt
mov
lods
loop
mov
aad
loopne
inc
lock
xor
aas
orb
xor
and
xorl
add
adc
inc
sub
aad
jae
pop
in
cs
xchg
lods
es
repz
dec
sub
and
or
in
push
repnz
out
dec
xchg
add
xor
shrb
scas
xor
mov
jge
les
pop
loop
sahf
cmp
pop
xor
xchg
push
push
out
sub
push
fisubrs
lods
in
cmp
xchg
xchg
outsl
sbb
jne
les
pop
mov
xchg
mov
out
bswap
sbb
sarb
sti
xchg
jmp
jno
xor
pusha
jge
cmp
outsb
xor
xchg
sub
sti
jmp
imul
mov
test
cmp
pop
lds
das
cmp
xchg
fs
addl
pop
sbb
push
cli
sbb
div
xor
imul
push
xlat
xlat
movsl
cs
loope
add
and
in
adc
inc
sub
xchg
mov
pop
cmp
mov
jecxz
adc
mov
daa
or
mov
push
ja
les
or
ja
cmp
jo
add
ljmp
test
pop
sub
cli
mov
cltd
push
xchg
add
dec
ljmp
mov
and
enter
push
roll
mov
sbb
dec
dec
fimull
xor
mov
dec
iret
inc
insb
outsl
and
jmp
push
inc
mov
sbb
inc
add
or
cmpsb
jnp
out
mov
xlat
push
xor
sub
jecxz
ret
sbb
into
cld
arpl
mov
sbb
xchg
cmp
iret
out
fwait
out
mov
add
xchg
xchg
andl
pop
rcl
or
or
xor
hlt
outsl
mov
movsl
cmp
cmp
lret
jo
shrl
jbe
add
movsb
xor
jge
addb
inc
xchg
xchg
adc
pop
lahf
cmp
loope
jne
lods
push
mov
imul
movb
cltd
jne
mov
adc
and
cmpsl
inc
pusha
out
out
sub
sbb
dec
call
clc
and
mov
test
movsl
mov
pushl
mov
stc
xchg
and
jb
aam
xor
dec
ret
jns
add
lret
inc
pusha
sbb
lds
test
jg
cltd
push
inc
lea
jle
mov
xchg
loop
jge
xchg
mov
dec
sbb
and
ljmp
std
pop
popa
pop
push
scas
iret
sub
fdivrl
cmp
cld
add
lods
cltd
lcall
addb
cmp
mov
in
mov
icebp
shll
xchg
push
movsb
adc
inc
ret
push
sub
mov
out
mov
and
lods
les
xchg
xor
inc
sahf
cmp
xor
jecxz
inc
dec
adc
mov
mov
or
ret
pop
and
jle
in
aaa
lods
push
fwait
mov
dec
std
nop
iret
sti
or
arpl
or
jge
rolb
push
dec
sub
jl
jbe
jp
pop
cvtps2pd
call
mov
adc
rcr
imul
int3
lds
or
aaa
arpl
popf
pop
add
cltd
xor
cmc
xchg
ljmp
cmp
xchg
cs
add
ficoml
call
insb
mov
fs
jecxz
aas
orl
push
cmp
aam
jle
sub
jnp
fmull
mov
xor
inc
xchg
push
daa
lahf
push
out
test
out
cmp
bound
cmc
fldt
iret
sbb
xchg
divb
repz
int
das
xchg
lods
lret
scas
mov
push
push
cli
pushf
add
addr16
insl
mov
imul
rcll
test
push
insb
add
sbb
or
aas
add
lret
fiaddl
push
xlat
mov
sub
add
xorb
pop
sub
pop
push
std
pop
cmpsb
push
out
call
xor
mov
cs
repz
sub
repnz
sub
aas
cmp
insl
ret
outsl
xchg
call
xor
aad
lea
xchg
movsb
push
fwait
addr16
movl
in
std
dec
mov
push
mov
xchg
push
addr16
enter
cld
int3
or
adc
jg
mov
cmp
les
movsl
loop
inc
pusha
jne
jne
les
fimuls
dec
loop
jno
inc
mov
in
les
imul
decb
add
add
push
pop
ss
dec
pusha
inc
nop
je
mov
cmp
and
inc
jmp
jp
xchg
xchg
cmc
test
shll
push
and
jo
add
and
and
rolb
sahf
jne
inc
aas
add
jns
pusha
inc
inc
mov
mov
sub
and
or
in
cmp
sub
outsb
jbe
jnp
div
cmpsl
mov
dec
sub
cwtl
lock
mov
lret
xchg
scas
ds
pop
xchg
inc
mov
pop
jg
ret
sbb
mulb
stos
js
sub
pop
mov
out
and
push
sub
ds
hlt
or
jnp
das
xor
mov
jb
inc
jecxz
imul
inc
push
sub
mov
cltd
lret
pop
out
sub
mov
push
pop
popf
hlt
lcall
lods
jo
fxch
jg
mov
in
dec
js
push
add
mov
notb
outsb
cmp
push
mov
dec
push
outsl
mov
sti
pop
xor
imul
inc
jg
mov
mov
das
idivb
lock
insb
xchg
push
sbb
mov
ljmp
sbb
dec
pop
sahf
je
pusha
sbb
cltd
test
fnsave
cs
inc
inc
outsb
pop
mov
add
xchg
scas
lods
shll
outsl
pop
or
mov
and
ret
popa
sbb
ret
movsb
xchg
aas
sti
pop
and
adc
mov
enter
pop
mov
inc
test
inc
push
cli
es
adc
push
cmp
or
xchg
jbe
in
or
ljmp
pop
loope
movsb
aad
jo
mov
add
or
pop
inc
xchg
ljmp
push
inc
out
popf
cs
or
hlt
enter
pop
jl
push
out
inc
jns
mov
xchg
cmpsl
lds
adc
imul
mov
pushf
mov
jg
pushf
mov
pop
mov
mov
pop
inc
inc
inc
pop
adc
notl
cmp
mov
loop
jecxz
xchg
into
iret
int3
rcl
xchg
sbb
jbe
xchg
adc
sub
cwtl
int
xchg
mov
into
mov
cmpsl
adc
vpaddusw
testb
das
out
adc
fs
push
sub
inc
fwait
cmp
addr16
adc
insb
or
pop
mov
das
sahf
lret
pop
repz
sbb
adc
insb
jmp
xor
rolb
out
sarb
cmp
scas
loope
push
imul
jbe
cmp
adc
pop
ja
sub
add
mov
pop
lods
jne
mov
push
sbb
jns
sub
cltd
insl
mov
jg
int3
dec
jne
pop
iret
imul
xchg
mov
cmp
xchg
jmp
shrb
cmp
ret
addr16
pop
cmp
ds
mov
js
and
test
loop
arpl
or
test
jp
xchg
mov
push
sbb
jecxz,pn
sub
mov
incb
push
push
cld
xor
ds
icebp
and
adc
shlb
push
push
fwait
or
dec
sahf
lods
movsb
pop
sbb
in
in
inc
mov
jbe
sub
out
out
pop
in
paddsw
cltd
mov
insb
movsb
push
and
data16
sub
mov
sbbl
roll
rcpps
xchg
push
ret
aam
fnstsw
movsl
inc
data16
inc
arpl
mov
int
insb
call
insb
jle
jge
add
sub
cmpsl
cmpsl
movb
in
sahf
mov
adc
repz
mov
cli
pop
jle
push
lret
jno
xchg
enter
aaa
sub
aad
mov
aas
mov
js
lahf
mov
notl
cmc
mov
loop
decb
lds
cmp
es
mov
mov
in
out
je
jmp
mov
and
stos
mov
pop
jno
ret
add
mov
nop
pop
pop
js
cmp
sbb
xor
xchg
sahf
dec
sbb
mov
inc
mov
push
or
sub
adc
adc
pop
xchg
fstpt
imul
inc
cwtl
stos
rorb
pushf
fs
test
jg
adc
mov
push
ret
mov
lods
xchg
out
mov
into
xor
lret
mov
je
or
lods
es
movsb
bound
das
fldt
push
popa
mov
add
jb
cmp
cld
test
rcll
mov
push
xor
std
and
inc
or
cwtl
cmpsb
push
xor
fdivrp
xor
stos
shr
lock
xchg
mov
hlt
sub
cmpsl
mov
call
sbb
jns
cmp
subb
lds
stos
repnz
add
stos
inc
push
pop
push
ljmp
jae
pop
es
add
mov
in
adc
sbb
test
mov
jmp
sbb
js
in
pop
sub
pushf
cmp
mov
xlat
lock
inc
cmp
shll
xor
in
loope
cmp
insl
hlt
aaa
push
jl
pop
push
mov
repnz
popf
in
sahf
mov
movsb
test
mov
lcall
or
jnp
and
inc
adc
mov
and
sbb
cmp
and
fisubs
mov
mov
xchg
cmp
sbb
sbb
push
clc
push
xor
enter
xor
jnp
cltd
pop
dec
or
outsb
rclb
in
jo
lods
in
xchg
push
jnp
mov
cmpb
mov
test
nop
and
add
or
dec
dec
mov
jmp
cmc
mov
jo
clc
push
mov
out
pop
hlt
adc
or
stos
cmc
imul
adc
js
bound
sub
sbb
and
ljmp
mov
idivl
sahf
adc
loope
rcll
sbb
fiadds
mov
mul
es
enter
sbbb
jbe
inc
pop
jl
and
arpl
push
lcall
jmp
inc
inc
jnp
movsl
and
xchg
jmp
or
push
sbb
dec
ret
iret
cmp
xchg
push
xor
int3
outsl
push
cmpsb
cltd
cltd
adc
jne
add
mov
adc
cmpsl
test
mov
lret
idivl
pop
or
out
xchg
xorl
mov
ret
cltd
push
dec
mov
sarb
je
jg
jbe
xchg
pop
vcvtsd2si
inc
roll
lahf
push
fsubrs
dec
mov
pop
in
and
ja
icebp
data16
subl
mov
je
notw
mov
loop
inc
push
xchg
xchg
sub
jno
fabs
mov
popa
push
push
pop
popa
dec
xchg
jbe
lods
fcomps
dec
jb
xchg
rcr
adc
jecxz
out
cmp
mov
inc
aam
inc
jmp
stos
pop
leave
repz
out
sub
fs
dec
pop
jbe
or
mov
je
mov
in
out
lds
dec
mov
inc
mov
daa
mov
jae
mov
xchg
inc
mov
xchg
idivl
imul
stc
test
cmpb
int
mov
pop
jmp
jae
cwtl
test
and
filds
jp
inc
lds
sbb
lret
arpl
pop
mov
pusha
sbb
insb
jp
scas
and
pop
cmp
rorb
mov
lret
test
push
or
mov
ljmp
sub
sti
dec
jp
push
js
sbb
mov
jmp
into
adc
inc
sahf
xor
scas
stos
movsb
add
in
xor
sbb
sub
push
pusha
dec
fbstp
adc
sahf
push
mov
int3
mov
xor
jo
test
cltd
jg
jb
xlat
inc
out
push
cmp
sbb
push
cmpsl
nop
insl
pop
adc
cmp
fs
or
inc
lock
add
cmp
ljmp
fisubs
popa
mov
dec
fcmovb
out
test
inc
dec
jb
or
push
lahf
sbb
and
pop
test
mov
jbe,pt
addr16
shl
imul
sub
pop
divb
ret
popf
and
cmp
xchg
mov
jmp
stc
iret
jp
addr16
enter
addr16
out
mov
sub
repz
jge
jg
dec
out
add
adc
xchg
negl
sbb
scas
pop
fcompl
mov
test
cli
arpl
test
or
fdiv
fimull
push
mov
icebp
rclb
sub
cmp
push
aad
mov
sub
cmp
sub
sub
mov
outsb
rol
mov
dec
fwait
sti
sbb
inc
je
test
sbb
and
xchg
js
flds
cs
ret
dec
repnz
scas
test
repz
inc
mov
dec
das
out
xor
lods
ss
cmp
or
neg
pop
pop
pop
mov
out
dec
mov
xor
mov
pop
push
sbb
insb
test
addl
push
cmpb
xor
mov
fisubl
mov
lret
mov
sub
mov
iret
mov
roll
sahf
push
xlat
scas
jl
clc
inc
or
rcrb
or
mov
mov
jg
orb
ljmp
mov
in
dec
iret
icebp
icebp
lds
icebp
sub
lahf
inc
mov
bound
xor
adc
aas
insb
sahf
insb
pop
adc
inc
ja
lret
add
cmp
scas
push
xor
jne
cmp
outsb
add
test
mov
adc
push
imull
cld
cmpsl
pushf
fidivs
cs
stos
push
sbb
test
or
sub
push
outsb
and
sahf
test
loopne
outsl
je
les
xchg
movsl
ret
cmpb
add
mov
test
xor
gs
jnp
sbb
sti
scas
xchg
sub
popa
xchg
and
mov
in
das
loopne
shrb
cwtl
and
jns
adc
mov
jo
mov
adc
adc
dec
mov
mov
inc
push
cmpsb
outsb
push
ds
js
sti
aas
ret
inc
icebp
rorl
xchg
pop
es
xchg
xor
lret
push
rclb
stos
aam
and
jns
ret
int
in
sbb
mov
mov
sbb
shll
out
ret
popf
sbb
jae
or
xor
dec
dec
repnz
xchg
xchg
xchg
adc
int
std
jnp
xchg
daa
pushl
int3
sahf
and
mov
sub
mov
bound
nop
fucomp
adc
loop
add
into
xchg
sarb
xorb
push
mov
enter
cltd
xor
mov
sbb
sbb
mov
xchg
repnz
xchg
clc
imul
jmp
mov
xchg
mov
lret
arpl
sahf
dec
sbb
scas
cmp
mov
xchg
repnz
sub
leave
push
xor
stos
pushfw
cmp
lods
shlb
je
call
fildl
aad
loop
movsl
push
bound
dec
mov
xchg
jo
dec
pop
popa
mov
mov
test
in
ja
idivb
cmp
ds
in
adc
into
jl
xchg
sub
in
lret
mov
mov
inc
sub
adc
inc
pop
push
das
mov
ds
inc
imul
es
or
adc
pop
aas
jg
sbb
and
cld
loop
jecxz
xor
leave
test
arpl
test
cmp
cli
mov
xchg
into
cmp
sub
out
xchg
std
mov
add
adc
decb
mov
dec
sbb
roll
xchg
ds
movsl
gs
mov
divl
paddusb
sub
mov
ljmp
mov
cmc
out
xchg
inc
jge
cmc
push
in
incl
push
and
push
lret
adc
mov
mov
loopne
out
push
sbb
dec
pusha
sbb
nop
sbb
xchg
lcall
jo
mov
mov
xchg
das
in
sub
iret
push
pcmpeqb
dec
sbb
cwtl
mov
inc
out
mov
mov
stos
push
ret
mov
std
mov
in
inc
xchg
fcomps
iret
adc
sbb
inc
and
and
stos
sbb
push
xlat
testb
xchg
movsl
jmp
xor
sbb
jmp
sbb
push
push
fmuls
sub
and
in
lret
lods
test
mov
mov
dec
cs
aaa
outsb
sti
out
jmp
xchg
cmp
out
ss
xchg
mov
inc
out
hlt
pop
sub
arpl
add
loope
inc
scas
or
push
nop
push
ret
lods
inc
xorb
xor
pushf
fdivrl
or
add
xchg
mov
je
dec
inc
cltd
repnz
and
sub
call
imulb
mov
xor
imul
inc
dec
subl
add
dec
rol
mov
dec
pop
in
into
mov
jecxz
aaa
ljmp
pop
cmp
inc
cli
sub
loope
xorl
or
lods
mov
adc
jne
repnz
cmpl
or
push
in
push
movsb
mov
dec
add
addr16
insb
or
cmp
mov
fwait
xchg
add
int
inc
and
repnz
cmp
or
mov
leave
inc
jns
mov
mov
pop
mov
hlt
sbb
cmc
sub
cmpl
push
dec
not
enter
push
sahf
mov
mov
jmp
les
arpl
and
lcall
test
mov
sbb
mov
call
xor
dec
popa
int
jl
xor
lret
test
mov
mov
sbb
mov
push
add
andb
mov
inc
popf
dec
lds
lahf
add
jmp
incl
jbe
xchg
scas
pop
cmp
add
cmp
jb
cmp
imul
imul
movsl
xchg
fldcw
and
test
fs
cmp
xchg
fwait
push
xchg
movsb
jg
push
jmp
inc
xchg
data16
data16
scas
sub
cs
rep
mov
ljmp
leave
nop
jns
dec
shlb
orb
lods
in
sbb
dec
dec
pop
movsl
fimull
roll
mov
dec
outsl
or
gs
sub
stc
popa
jle
mov
imul
mov
cmp
das
test
or
loope
movsb
sub
stos
aaa
or
jae
push
and
int
in
mov
xchg
push
stc
repnz
mov
mov
xor
out
out
push
in
lcall
rolb
scas
leave
mov
shr
int3
dec
out
insb
inc
dec
xchg
outsl
sbb
ja
movsb
mov
js
add
lahf
sub
test
sub
adc
and
insl
pop
jne
loop
test
or
mov
mov
orl
cmp
movsb
ss
lret
cmp
or
sub
push
or
or
aam
xchg
int3
cmp
sahf
loop
pop
mul
lea
pop
jae
sbb
int
test
xor
sbb
in
sahf
and
pushf
gs
fwait
xor
xchg
js
fwait
jne
or
aam
pop
iret
mov
jno
sarl
xchg
push
lods
xor
ret
fs
mov
jecxz
mov
lret
sti
insl
dec
adc
adc
xchg
testb
test
mov
shl
xchg
adc
decb
es
push
jo
fcmovb
pop
cmp
js
movsb
mov
dec
mov
mov
sahf
stc
dec
subb
adc
xchg
test
jno
in
pop
setge
daa
sub
and
mov
jle
inc
outsb
push
and
pop
pop
inc
data16
lea
jge
pop
xlat
pop
out
ret
push
imul
lea
dec
bound
loop
xor
jle
popf
mov
cmp
in
xlat
loope
cmp
or
and
sahf
pop
shrl
mov
pop
push
or
mov
call
sub
sti
sub
or
pop
add
xor
ljmp
shl
sub
lock
add
xchg
sbb
leave
dec
pop
adc
loop
cmp
call
movsb
pop
xchg
pop
sub
jae
jae
insb
rcll
add
pop
mov
aas
stos
outsl
mov
jno
and
mov
adc
jle
lahf
jmp
mov
xchg
sbb
push
shll
mov
test
rep
das
out
lret
dec
lahf
scas
jne
mov
jns
dec
lods
pop
js
ds
shrl
or
dec
cmpsb
push
and
inc
or
add
sub
fmuls
inc
out
add
out
inc
int
call
jecxz
or
mov
mov
jl
xchg
dec
enter
outsb
dec
adc
push
enter
ja
add
stc
lret
and
call
mov
fldcw
aaa
out
mov
shll
call
push
lret
lret
ret
fidivrl
mov
push
push
inc
push
aad
mov
shl
imul
fs
inc
cmp
scas
adc
sbb
fists
inc
sbb
popf
addr16
loope
jle
roll
xchg
call
cmp
mov
sbb
jne
mov
int3
iret
adc
cmp
insl
add
je
or
mov
and
ret
jg
or
scas
or
addl
adc
sbb
mov
icebp
jecxz
sar
and
sub
mov
hlt
in
fwait
cmc
test
cmp
inc
aad
daa
mov
addr16
fstpt
add
subl
out
jge
pop
dec
scas
push
outsb
nop
xchg
push
jmp
leave
lret
pop
xchg
scas
mov
je
xlat
jbe
xor
mov
jle
rcll
jle
adc
jns
xchg
mov
jp
jb
fldcw
jb
ljmp
cmpsl
enter
lahf
je
sti
lds
push
mov
cmp
stos
in
and
ret
inc
cmp
mov
cli
inc
dec
pop
adc
push
insl
mov
xchg
mov
mov
jl
mov
and
mov
pop
sahf
lret
sbb
into
lds
sbb
sub
scas
orl
and
lds
or
mov
insb
dec
xchg
jecxz
inc
sti
sub
mov
loopne
mov
push
mov
adc
xchg
into
loope
sahf
sar
out
or
in
lahf
mov
cwtl
cmp
mov
mov
and
sarb
pop
jne
xor
mov
ret
jae
data16
jle
xor
cmp
jo
comiss
dec
lret
xor
jge
roll
or
xor
mov
movsl
pop
push
arpl
pop
test
push
cli
orl
mov
or
jbe
mov
xchg
jbe
or
into
ficomps
test
mov
mov
pusha
gs
mov
loope
jae
insb
add
adc
nop
int3
popl
fwait
sbb
scas
xchg
or
xchg
xlat
je
fs
enter
jno
and
enter
jge
adc
or
sbb
add
imul
push
sti
test
jns
fcoms
xor
mov
dec
jp
rcl
in
es
add
fwait
sub
add
mov
xchg
mov
pop
dec
repz
in
jl
xchg
adc
push
sbb
aaa
pop
insb
dec
sbb
adc
jbe
sbb
jge
jge
push
mov
inc
adc
pop
fistpll
mov
pop
jae
movsb
scas
pop
cmp
scas
ficomps
fimull
mov
icebp
push
mov
shl
int3
cmpsl
sub
dec
pop
cmp
sub
xor
pop
rcll
negb
call
hlt
pop
dec
xchg
xchg
or
addr16
sbb
lods
mov
add
inc
stc
mov
les
pop
adc
sbb
dec
sub
lret
mov
arpl
add
fsubs
inc
mov
dec
adc
es
adc
cmp
lods
pop
dec
dec
inc
imul
inc
inc
into
dec
mov
xor
jno
inc
push
jae
push
stc
pop
add
mov
shrb
es
mov
popa
sbb
imul
pop
stc
xchg
or
clc
mov
jl
inc
xchg
cs
mov
mov
adc
add
mov
loope
dec
adc
fadds
jns
mov
nop
dec
fwait
mov
fnstcw
pop
inc
mov
push
jno
repz
std
fs
pop
sub
push
mov
imul
cmc
xchg
sbb
sbb
cltd
jg
lea
jo
sbb
adc
popa
sub
sbb
inc
popa
arpl
clc
stos
cmc
ret
mov
insl
sub
mov
xchg
popf
mov
inc
mov
xlat
mov
aam
sarl
pop
or
mov
sbb
or
cs
mov
adc
xor
cmpsl
clc
mov
adc
rcll
rcrb
in
mov
xor
jnp
test
mov
fdivrl
add
jb
add
icebp
xor
lods
push
xchg
and
les
inc
ret
repz
xchg
mov
pop
outsb
int3
xlat
test
std
out
or
out
lock
jbe
clc
in
push
sahf
inc
add
jg
push
pop
pop
add
into
out
inc
test
sub
lret
push
mov
mov
rolb
pop
lea
pop
adc
rcll
mov
rcrb
adc
mov
xchg
stos
test
fnstsw
movsl
add
and
pop
push
dec
push
cmp
dec
xchg
jle
mov
jl
adc
mov
mov
fsts
imul
push
mov
sar
lods
cmpsb
outsb
jmp
inc
clc
sub
int
clc
lea
mov
or
lods
xor
in
je
repnz
shll
hlt
les
jp
and
xchg
data16
mov
mov
movsb
mov
in
mov
jae
test
dec
jne
cmpsl
ljmp
call
daa
xchg
fdiv
cltd
mov
es
out
pop
mov
test
cmp
xor
xchg
lret
sub
ret
das
popf
pop
add
lods
push
ds
xor
inc
dec
sbb
aam
sahf
jmp
ds
cmp
push
xchg
loop
stc
lds
cmp
xchg
flds
jbe
sbb
insb
jl
inc
repnz
lahf
test
jecxz
pushf
out
jle
int
iret
xchg
int
inc
stos
push
dec
aaa
test
dec
aaa
lret
inc
jle
insb
frstor
dec
loop
pop
pop
xchg
in
dec
add
mov
cld
mov
mov
jle
xchg
cli
jp
xchg
adc
sbb
iret
leave
or
sub
in
into
cmp
add
fadd
daa
add
mov
das
mov
stc
jp
mov
pop
fwait
je
sbb
cmpsl
es
cwtl
add
or
jb
call
cs
cmp
sbb
stos
stos
sub
mov
pop
jo
or
jmp
out
je
test
adc
mov
jecxz
pop
inc
pop
push
pop
pop
mov
ds
pop
cmp
sahf
adc
negl
pop
jae
xchg
dec
xchg
aas
mov
cmp
mov
mov
pusha
fdivrs
mov
push
push
aaa
scas
mov
scas
xchg
ficoms
aam
cs
sahf
lods
cmp
or
push
inc
sbb
mov
adc
shld
xlat
mov
les
and
out
push
mov
sbb
xchg
xchg
dec
fs
out
sub
pop
std
repz
in
push
in
sub
daa
cmp
adcl
fucomp
cwtl
cmp
shrl
loope
jae
mov
inc
dec
shll
mov
xchg
mov
nop
into
or
adc
scas
ljmp
aad
jecxz
scas
and
popa
cmp
jnp
add
aam
ret
and
les
or
jo
xchg
sub
jg
lea
mov
add
test
or
pop
lock
in
insl
subb
ret
xor
cmp
enter
ja
and
dec
ret
jmp
dec
pop
test
gs
inc
hlt
arpl
pop
cltd
sub
push
sbb
push
popa
daa
pop
inc
lds
sub
xadd
sbb
sub
nop
jg
pop
jge
int3
or
pop
iret
fidivrs
mov
lret
iret
push
add
mov
mov
orps
aam
cmp
mov
pushf
and
jecxz
mov
cmovae
jno
nop
lcall
add
lahf
xlat
xchg
push
rcrb
scas
adc
mov
dec
fcoms
sub
xor
lahf
mov
or
arpl
imul
jae
movsb
jp
aas
dec
mov
je
add
and
fstpl
push
xor
out
sub
xchg
addr16
sbbb
xchg
js
repz
pop
push
jnp
out
les
pop
mov
pop
lds
or
stos
pop
xor
pop
sub
les
dec
sti
mov
pop
xor
pop
cmp
aad
icebp
push
xchg
bound
daa
aas
shll
faddl
pop
fadd
ja
pushf
add
orl
adc
push
cli
das
or
es
lock
mov
inc
sbb
cmp
mov
test
loopne
lahf
icebp
icebp
cmc
jecxz
ret
in
gs
fidivs
mov
outsb
lods
aad
cli
fmuls
xchg
ds
addb
les
insl
lret
push
fs
jp
in
and
sub
mov
add
cwtl
jne
mov
inc
jg
stc
test
inc
pmaddwd
sub
mov
shll
test
nop
push
mov
je
push
int
cmp
loope
and
iret
mov
lods
mov
and
stos
ret
and
add
push
pop
fldenv
add
ficomps
xlat
enter
arpl
mov
es
sbb
fistpl
sub
push
roll
pop
fldt
mov
lcall
xchg
outsb
push
imul
cmp
inc
xchg
jbe
mov
out
push
pop
inc
cltd
shl
sbb
mov
xor
rcrb
and
mov
fwait
not
arpl
test
dec
cmp
jmp
loope
mov
insb
orb
jbe
xor
xlat
xchg
cmpsl
xchg
repnz
sbb
scas
add
mov
mov
push
loope
stc
xor
xchg
lahf
into
sahf
push
add
mov
in
sub
cmpl
cs
out
lret
inc
out
repz
cmc
sub
insb
xchg
jns
cmc
mov
gs
js
cmp
sbb
mov
scas
push
mov
xor
insb
popa
call
mov
dec
lret
les
inc
push
jnp
xchg
repnz
cmp
pop
inc
mov
push
sahf
rorl
imul
insl
sbb
adc
mov
xchg
sub
push
mov
test
pop
mov
mov
call
repnz
dec
bound
mov
out
cmpsl
or
adc
xor
cli
adc
nop
out
das
nop
mov
daa
aam
fidivrs
shl
mov
not
mov
rcrb
push
pop
orl
jo
std
or
xchg
mov
mov
xor
sbb
lret
xchg
clc
mov
cli
mov
loopne
xchg
xlat
scas
push
pop
in
out
in
cwtl
xor
xchg
shl
add
test
pop
sub
test
repnz
xchg
push
std
xchg
fldl
imul
or
lods
mov
movsb
fildll
jo
and
fsubl
sub
cmc
sti
push
sub
push
mov
sahf
mov
sub
mov
dec
aaa
jb
push
call
mov
dec
adc
mov
pop
mov
out
xor
jae
in
xor
pop
mov
mov
mov
aam
movsl
xchg
call
sti
sub
inc
stos
jecxz
pushf
dec
out
mov
xchg
pop
mov
pop
push
inc
ja
daa
cwtl
pop
add
jmp
pusha
rorb
stos
cmpsl
dec
out
cmpb
push
pop
mov
push
mov
cld
sbb
mov
mov
daa
scas
dec
fucom
xchg
sbb
dec
xchg
jns
cvtdq2ps
loope
xor
pusha
push
jmp
jmp
sbb
xor
mov
sbbl
repz
popa
fisttps
movsb
mov
ss
and
fmuls
push
jae
in
icebp
mov
push
mov
sti
xchg
les
jl
pop
push
pop
test
aas
ds
fisubrs
jno
imul
int
inc
je
sub
dec
xchg
jle
pop
pop
je
jo
cwtl
xor
lods
cmp
int
leave
iret
mov
stos
jle
sub
movsb
jns
mov
dec
mov
xchg
std
mov
loop
jmp
fnstenv
add
inc
jl
cmpsb
cmp
mov
jmp
sbb
jns
sbb
push
cmp
add
out
cmc
cmp
in
stos
arpl
push
mov
call
out
scas
push
cmp
test
mov
xchg
jno
pop
or
jge
sbb
cwtl
push
je
adc
mov
aam
xchg
pop
push
add
dec
jae
fistpll
mov
loope
cwtl
sub
sbb
cld
negb
jge
jnp
push
out
pushf
ja
or
stos
push
stc
fsubp
cmp
lds
push
sbb
lcall
mov
sub
shl
movsb
js
cli
push
in
push
lea
pop
imul
xor
pop
or
loope
mov
movl
or
adc
push
shr
jmp
push
in
call
int3
cmp
test
popa
adc
jbe
fcoml
mov
and
mov
mov
lret
jp
aaa
sbb
int3
and
mov
jecxz
aaa
push
ds
sbb
mov
mov
mov
jg
lods
incl
push
nop
xchg
pop
xor
add
jno
fdivr
xor
or
inc
pop
add
dec
rcrb
int3
enter
movl
lods
scas
adc
sub
test
scas
xor
test
stc
push
sbb
xchg
in
dec
mov
imul
es
in
xchg
dec
or
repz
jle
dec
sub
fldt
jae
pop
aad
sbb
mov
or
pop
push
xor
inc
das
inc
dec
movsb
lods
inc
pop
jmp
pop
mov
cmp
jle
mov
sub
mov
add
ret
aam
addr16
test
imulb
imul
cmp
in
inc
xor
movsb
cmp
jo
dec
sbb
xchg
outsl
mov
pop
sub
fcompl
aaa
xor
dec
into
mov
fisttpl
xlat
mov
push
hlt
add
pop
xor
inc
sub
and
cli
lock
sub
dec
sub
mov
cwtl
mov
push
dec
cli
and
push
sbb
mov
push
sbb
out
stos
push
xor
popf
adc
js
mov
dec
rclb
xor
push
test
les
xchg
scas
data16
and
insb
pusha
mov
xor
push
push
cli
sahf
leave
mov
jno
daa
addr16
or
push
cmp
aaa
inc
push
push
cwtl
cmpsb
test
or
mov
sbb
sub
out
mov
fidivrl
call
and
adc
insb
test
bound
les
push
cmpsb
mov
out
sub
movsl
sahf
das
lret
xchg
hlt
mov
addr16
push
je
mov
mov
scas
es
xchg
push
cld
testl
xchg
xchg
mov
add
lds
adc
and
and
enter
mov
lods
les
movsl
xorb
insl
xor
mov
shll
pop
mov
lods
mov
xchg
sbb
mov
sbb
xor
cs
mov
dec
mov
cmpsl
inc
xor
aaa
rcll
mov
inc
adc
mov
dec
mov
outsb
imul
int3
ljmp
push
mov
mov
arpl
test
mov
fwait
add
pusha
xor
dec
mov
ror
and
xchg
fwait
mov
xor
aaa
inc
dec
xor
pop
adc
mov
xchg
dec
movsb
mov
cld
lret
mov
data16
ja
push
cmp
jg
cmp
sbb
jmp
repz
xbegin
out
mov
dec
xchg
sbbl
nop
cmp
out
ret
or
inc
repz
int
test
dec
loope
ror
js
jle
pushf
scas
outsl
outsl
loop
lock
enter
cmp
mov
cmpl
nop
ffree
add
loop
icebp
push
mov
jmp
mov
ror
xchg
aam
jne
fsubl
adc
in
lock
mov
mov
push
xchg
xchg
into
pop
xchg
push
nop
xchg
mov
adc
cmpsb
pop
loope
adc
mov
inc
mov
add
idivl
mov
inc
inc
sahf
add
jae
in
jns
pop
dec
jae
imul
out
addr16
xlat
dec
xor
mov
sahf
lret
pop
add
dec
test
jbe
fstpt
mov
addl
xchg
xlat
out
das
xchg
mov
insl
mov
fucom
in
jg
pop
cmp
roll
incl
cmp
les
mov
push
inc
cmp
scas
mov
arpl
scas
jl
push
es
hlt
leave
xchg
mov
lret
scas
loope
mov
jmp
add
jnp
nop
dec
jns
aas
mov
add
test
pop
push
push
add
hlt
add
outsb
cwtl
scas
repnz
mov
xor
cmp
nop
shll
cmp
inc
pop
push
aam
adc
inc
jle
xor
nop
das
les
mov
pop
jne
jg
call
xor
into
cmp
loop
pop
xlat
hlt
addr16
call
call
movb
pushf
jl
mov
push
sbb
lock
popa
popf
xor
mov
cmp
xlat
into
daa
jae
pop
enter
push
pop
mov
inc
lods
fldenv
xor
cld
aad
mov
jecxz
mov
and
sub
ss
adc
dec
jmp
xor
sub
data16
cmp
imul
or
iret
lods
adc
sbb
sar
mov
scas
inc
sbbb
pop
mov
mov
push
shl
pusha
sub
sub
dec
fisttps
inc
and
add
das
and
cmp
and
sbb
ja
jp
in
cs
cmp
jg
rcrb
cmc
fcmovnu
jmp
cmp
scas
imul
repnz
jo
fisttpl
jmp
jae
in
rcrb
dec
fistl
addr16
out
xor
aas
call
pushf
out
aad
inc
inc
aas
dec
ret
sbb
aas
jl
push
dec
xchg
push
dec
push
jo
pop
jmp
mov
xchg
insb
push
fwait
mov
mov
fstpt
xchg
push
cmp
lds
repnz
cmp
xor
aas
pop
mov
clc
or
and
or
clc
fld
in
mov
int
dec
out
out
cmp
cmpsb
xchg
fs
mov
pop
mov
daa
sarl
cwtl
and
add
mov
leave
cld
jb
add
sub
inc
scas
ss
mov
adc
dec
dec
in
pop
fldl
minps
jge
cmp
bound
mov
insl
in
jns
mov
jnp
xchg
mov
fwait
pop
cld
gs
mov
or
xor
out
mov
dec
sbb
xchg
inc
out
xchg
fs
push
mov
mov
sbb
imul
push
test
lcall
incb
xchg
pop
xchg
lds
das
imul
ficompl
cs
cmpsb
push
std
push
add
jl
out
rolb
dec
pop
nop
jmp
cmc
iret
push
push
pop
xor
sbb
loopne
imul
mov
push
jp
mov
jg
scas
mov
cwtl
mov
scas
sbb
dec
ja
fildll
push
ficompl
push
insl
aam
mov
xlat
sahf
dec
clc
add
push
fists
or
mov
pop
inc
dec
xchg
scas
xchg
jge
lret
pop
push
and
lea
push
sbb
xchg
imul
xor
xor
dec
mov
aaa
inc
jge
sub
sub
or
dec
test
dec
sbb
push
jecxz
ret
testb
jle
test
ss
cmpb
aad
call
sbb
roll
cmc
dec
sbb
mov
cld
stc
push
mov
mov
sub
push
jbe
mov
add
pop
push
add
mov
inc
mov
js
mov
inc
pusha
out
aas
int
repnz
in
ds
jle
sbb
mov
inc
mov
jnp
aaa
cmc
pop
hlt
or
cld
fiaddl
sbbl
out
jo
mov
lds
js
push
insl
dec
xor
push
xchg
or
jecxz
les
sbb
es
push
and
adc
aad
cmc
iret
add
inc
pop
push
mov
mov
sbb
loopne
lret
push
xchg
dec
ret
ss
lds
popf
ficompl
xchg
jge
fs
mov
subb
sbb
pop
sub
ss
xchg
mov
mov
xchg
add
ljmp
adc
into
push
mov
bnd
push
sbb
xor
mov
mov
mov
sub
push
adc
mov
jl
dec
test
fs
addb
jae
aaa
xor
xor
and
sub
mov
mov
or
fs
sbb
popf
add
fcomps
dec
or
popf
or
sti
std
fstpt
pop
push
push
mov
fbstp
push
gs
repnz
out
aam
jl
and
mov
addr16
nop
out
pop
sub
adc
scas
inc
mov
leave
jle
xchg
popf
mov
lcall
jmp
and
fisttps
sub
cs
inc
xlat
jl
inc
mov
cmp
mov
push
mov
imul
cmp
in
iret
bound
pusha
aam
mov
lea
shl
push
loop
xchg
cli
add
movsb
je
adc
and
sub
dec
push
inc
int3
mov
iret
clc
addr16
mov
push
and
leave
loopne
jnp
test
add
cmp
lods
sub
lret
xchg
push
fsubrp
mov
cwtl
clc
dec
mov
push
and
and
push
loope
add
loopne
arpl
rcl
add
mov
fimull
in
add
and
add
daa
idivl
fprem1
jb
loope
das
dec
sbb
cmc
sub
ljmp
pop
insb
cmp
pop
subl
mov
cmp
hlt
jne
mov
ljmp
popf
lret
cmp
ret
mov
lea
add
shr
adc
int
pusha
lret
adc
sub
sub
fstp
fcomip
cmpsb
mov
or
jbe
jp
dec
jnp
iret
cmc
inc
scas
adc
jbe
adc
xlat
push
mov
arpl
adc
sbbl
sbb
lret
outsb
stc
movsl
pop
sbb
mov
or
lret
fistpll
xchg
clc
idivl
out
jg
xchg
shll
outsb
mov
mov
or
cli
pop
scas
push
xchg
int3
xlat
js
js
xchg
cli
xchg
push
sub
dec
xchg
mov
ret
adcl
and
pop
add
push
mov
repnz
dec
loop
arpl
outsl
push
clc
pusha
inc
xlat
xor
fmul
jb
fnstcw
and
int
mov
mov
or
int
lods
jns
add
jnp
testl
and
iret
fwait
aas
repnz
sbb
lcall
mov
sbb
fnstcw
cmp
repz
xor
xchg
loope
jns
notb
stc
insb
inc
add
popf
mov
in
divps
scas
adc
push
popf
cs
shrl
jmp
test
inc
mov
push
mov
cmc
adc
repz
outsb
in
adc
mov
fstl
sbb
mov
adc
push
sub
scas
dec
fiaddl
gs
stc
ret
hlt
std
push
outsb
imul
and
fldcw
jle
pop
imul
repz
mov
inc
in
scas
ja
lods
jo
daa
push
cld
aad
xchg
dec
adcb
ret
repnz
test
xchg
xchg
push
cwtl
fists
loop
ljmp
mov
out
insb
cmp
ja
insb
mov
repz
cmc
xchg
cmpsl
pop
mov
or
aaa
jl
inc
jno
dec
pop
pushw
ret
pop
nop
jmp
das
adc
in
mov
jp
out
imul
das
dec
iret
mov
push
pop
into
adc
dec
ljmp
xor
sub
test
jmp
and
sub
ljmp
adc
stos
push
or
scas
sbb
sbb
repnz
cmp
cli
cmp
dec
xor
punpcklwd
loopne,pt
mov
mov
test
addb
js
cmp
xor
adc
cltd
mov
sarb
pop
sti
sub
cmpsl
mov
test
stos
push
xor
pop
js
mov
sbb
sbb
insb
mov
out
aam
xchg
mov
fistps
stc
pop
jb
sbb
mov
movsl
test
mov
leave
clc
nop
push
push
mov
or
in
mov
cmp
mov
repnz
aad
fidivrs
nop
mov
dec
js
mov
popa
into
and
push
dec
mov
iret
jle
sbb
or
xchg
inc
mov
out
mov
test
icebp
mov
xchg
mov
mov
jnp
cld
fdivrp
repnz
mov
data16
pop
das
xchg
hlt
jle
jb
stos
leave
jne
mov
push
mov
icebp
mov
jecxz
push
jecxz
int
les
jno
dec
enter
xchg
inc
or
jmp
in
scas
cld
lods
pop
push
xchg
cmp
inc
ds
xor
data16
shrb
mov
inc
dec
dec
jnp
repz
or
jo
or
pushf
adc
push
or
or
mov
add
mov
es
xchg
adc
add
and
fstl
in
lods
push
xor
adc
and
sti
into
pop
jl
ficomps
dec
mov
repnz
test
pop
into
in
sbb
loop
adc
test
inc
push
mov
cmpsb
jge
mov
push
mov
push
rcr
mov
sti
push
shll
xchg
cmpsl
pop
popa
cwtl
xchg
fstl
jae
xchg
enter
push
mov
cmpsl
enter
jnp
shrb
dec
push
jge
sbb
les
fcompl
clc
rorb
xchg
mov
xor
push
outsb
js
or
imulb
sbb
push
or
bound
xchg
mov
push
sar
jnp
xlat
nop
sbb
icebp
fnstenv
push
aaa
stos
push
xor
clc
in
xchg
dec
sub
stos
mov
add
pusha
pusha
out
mov
in
out
lea
or
aaa
pop
xor
or
mov
in
pop
inc
in
xchg
test
adc
jo
jno
and
pop
popa
dec
in
adc
fadds
mov
mov
add
out
jno
xchg
imul
pop
in
mov
sbb
sbb
push
jmp
xchg
mov
mov
add
cs
adc
dec
dec
pop
xchg
xor
out
stc
pop
xor
dec
pop
enter
sub
lahf
mov
fistpl
xchg
out
and
fwait
lret
imul
aaa
jbe
lcall
mov
arpl
addr16
sbbl
fwait
pop
insb
sbb
test
loopne
push
movsb
xchg
pop
xor
push
pop
dec
adc
out
outsl
push
and
test
and
aam
or
and
ficomps
sbb
inc
iret
dec
imul
sbb
loopne
sbb
cmc
mov
and
popa
xchg
sbb
inc
repz
pop
mov
into
dec
mov
data16
push
pop
push
dec
movsb
sbb
or
mov
cmpsb
xchg
popf
and
in
jp
mov
pop
xchg
xchg
cs
fcomps
jp
dec
mov
pop
jne
imul
int
cmp
fists
aas
mov
mov
jae
xchg
pop
test
scas
sub
popf
ds
iret
mov
inc
les
cmp
pop
loopne
xor
stos
pop
test
and
andb
jns
mov
adc
js
jl
jle
dec
negl
ret
and
repnz
dec
push
xchg
scas
jp
and
and
and
inc
js
jmp
stc
pop
lcall
xor
jbe,pt
mov
jecxz
enter
fcmovnu
fisttpll
js
xchg
dec
addr16
testb
sti
cmp
xchg
xchg
and
lret
add
insl
aad
mov
push
or
fidivrl
arpl
in
sub
push
sbbb
int3
xchg
insb
jmp
jns
cmpb
pop
dec
pop
xchg
movsb
bndldx
fiaddl
xchg
int3
cltd
adc
xchg
iret
pusha
cmp
pop
push
mov
out
sub
nop
pop
xchg
jmp
fwait
loop
icebp
mov
test
dec
cmp
sbb
fistps
loope
sbb
lock
add
cld
cmp
rcl
adc
ficoms
jecxz
movb
dec
inc
inc
dec
fistpl
out
and
xor
jmp
rolb
gs
pushf
xor
lahf
outsb
jge
sub
mov
repnz
xchg
mov
xor
in
cmp
add
add
adcb
imul
push
and
arpl
or
or
cmp
out
cmpsl
out
es
shrb
clc
pminsw
lods
xor
data16
jmp
adcl
cmc
aas
mov
imul
add
out
mov
arpl
sub
jb
cmp
mov
sbb
mov
mov
lahf
ja
mov
push
dec
and
jecxz
sbbb
xor
push
pop
mov
push
int3
sbb
and
mov
jo
push
pop
cmp
jecxz
sbb
ljmp
and
push
cvtps2pd
add
test
int3
sub
mov
cmp
mov
and
jge
cmp
and
adc
scas
jbe
jle
or
cmp
into
inc
mov
cmpsb
cmp
pop
jnp
shll
imul
inc
scas
outsl
mov
jl
js
or
data16
ja
jmp
sub
xchg
mov
dec
lea
xor
or
fstpt
js
es
mov
inc
push
mov
inc
xchg
in
adc
das
pop
daa
and
jae
jg
lcall
es
cmp
aas
es
cs
add
dec
jae
pusha
scas
pop
jo
lods
push
insb
stos
pop
scas
xchg
mov
cmp
rcrl
mov
pop
mov
loopne
ret
testb
mov
movl
mov
sub
lahf
mov
gs
adc
xchg
cmpsl
and
inc
inc
dec
popf
movsb
hlt
js,pt
ss
or
loop
mov
jmp
jl
imul
inc
mov
sub
jmp
repz
out
into
loop
push
or
xchg
movsb
mov
mov
enter
lea
mov
test
cmp
xor
mov
push
push
mov
mov
addb
lods
sbb
loope
inc
mov
mov
cwtl
insb
pop
out
loopne
dec
sbb
std
sub
cwtl
popf
lods
sahf
mov
inc
jg
add
imul
sarb
inc
dec
mov
or
mov
sbb
hlt
mov
jl
jle
and
mov
or
sahf
xchg
orb
call
movsl
popf
sub
xor
inc
sti
bound
fldt
add
inc
adc
xor
scas
adc
adc
fwait
sub
aam
mov
sub
aad
ds
add
movsb
ja
pop
lret
cmc
clc
jns
ds
inc
dec
push
jp
cmp
jo
pop
mov
out
pop
imull
xchg
sub
xor
imul
rorl
or
xor
cmc
lcall
repz
cmp
lds
mov
pop
adc
sbb
ja
iret
sti
int
lods
lds
shl
test
mov
or
lcall
notb
lcall
lret
gs
fwait
dec
xor
mov
sbb
aad
mov
test
aas
pop
dec
cmp
insb
ss
inc
dec
and
lret
lahf
clc
or
pop
out
cltd
add
ret
push
popa
mov
mov
imul
rolb
cmp
xor
cli
adc
std
cld
xor
aas
test
fisttpll
lahf
test
mov
repz
push
cli
mov
fld1
jae
dec
sbb
in
out
xor
mov
rclb
clc
dec
mov
or
add
cmpsb
out
mov
jne
mov
push
xchg
cmpsb
lret
cmp
scas
imul
mov
sbb
cmp
pushf
adc
mov
inc
mov
out
sbb
pop
or
mov
or
dec
ret
fcomip
mov
movd
mov
adc
cmp
shlb
cs
rcl
inc
adc
dec
jbe
dec
cltd
je
fldl
xchg
push
pop
daa
int
sbbl
sbb
popf
addr16
push
test
lock
mov
xor
jno
xchg
das
jecxz
mov
push
mov
adc
negl
mov
xchg
push
mov
int
jg
mov
xchg
xor
jge
xor
mov
mov
rcrb
dec
bound
mov
sbb
loope
xor
cmpsb
or
std
or
jnp
pushf
int3
shlb
popf
mov
add
jge
jmp
outsl
aas
push
icebp
or
jb
cs
scas
sub
loop
dec
xchg
jp
mov
add
insb
insb
cwtl
icebp
popl
in
xchg
fbstp
jnp
hlt
sub
inc
dec
jg
insb
test
xor
les
or
stos
push
addl
icebp
hlt
clc
popa
mov
shlb
jnp
mov
xchg
ss
or
mov
pop
scas
loop
mov
stos
cli
jb
jbe
sahf
mov
cmp
adc
push
sbb
ret
mov
repz
test
mov
lret
jge
dec
push
mov
cld
mov
ja
scas
rcll
gs
arpl
scas
aas
test
insl
ja
jp
mov
movsl
jb
lret
or
ljmp
lcall
aaa
cli
aaa
ret
mov
push
pop
xchg
lcall
push
dec
add
push
lcall
xor
je
pop
aam
loopne
mov
and
xchg
loopne
sbb
pop
jae
rclb
jg
mov
inc
push
popa
pushf
cwtl
int
xchg
inc
pop
dec
adc
inc
push
loopne
arpl
popf
in
ret
ret
ret
test
adc
and
in
repz
adc
shll
stos
sti
adc
push
imul
lret
ss
in
jecxz
scas
mov
fucomp
and
sbb
nop
sub
pop
add
fidivrs
cmp
sbbl
push
in
stc
dec
lahf
inc
fsubs
je
push
mov
out
data16
pop
fstpl
dec
fidivl
lock
shlb
inc
mov
add
xor
pop
imul
loope
sahf
sbb
aaa
andl
and
in
jmp
xchg
pop
dec
lods
leave
lods
adc
cld
sub
push
push
les
movsl
mov
aad
dec
pop
popa
je
mov
scas
fcmovu
jmp
jg
and
inc
mov
in
test
rcll
jne
sahf
aaa
std
jno
inc
pop
mov
fnstenv
jno
into
add
push
pop
mov
and
xchg
arpl
xchg
enter
adc
xor
scas
testb
call
daa
aam
pop
dec
outsb
mov
ds
dec
aam
fstpl
jmp
mov
in
in
dec
mov
push
xor
repz
xor
xchg
lahf
out
emms
add
pop
mov
cs
sbb
sub
ja
mov
cmp
jg
imul
adc
movsl
les
pop
adc
mov
pop
mov
cmp
add
jle
inc
mov
insb
sbb
add
xchg
sbb
sub
cltd
mov
je
dec
stos
mov
and
dec
pop
inc
pop
mov
jne
std
ja
lcall
gs
imul
xlat
jmp
and
out
cmp
xor
jmp
inc
ret
sbb
pop
popf
mov
loop
add
jo
jle
inc
pop
sbb
sbb
aaa
mov
test
imul
cmpsl
and
inc
mov
mov
ljmp
lods
jmp
int3
sbb
subb
sti
push
mov
dec
mov
imul
cmpsl
sbb
sub
loop
dec
fisttpll
push
sub
incb
inc
push
mov
clc
imul
sbb
rolb
push
pop
ffree
jne
insl
scas
adc
ret
pop
sbb
jno
outsb
sub
jg
sbb
cmpsl
imulb
add
fcoms
xor
setbe
out
or
pop
dec
stos
jecxz
aam
out
fidivrs
sbb
gs
aaa
xor
fisttpl
test
mov
pushf
sbb
mov
cld
out
push
test
cli
icebp
jecxz
rolb
or
rcl
outsl
sbb
mov
jecxz
ja
das
mov
sti
inc
scas
pop
lods
xchg
bound
arpl
fisubl
xchg
test
in
or
aad
mov
or
xor
pop
adc
sbb
and
fistl
xor
fsubp
pushf
mov
add
test
daa
sbb
xchg
out
mov
dec
xchg
and
shll
and
and
push
hlt
in
jle
cmp
xor
or
js
dec
pop
jl
dec
or
cmpsb
imul
daa
je
nop
test
test
adc
insl
cwtl
popl
mov
insb
in
jno
fistl
rol
sahf
fnstcw
mov
adc
sbb
xchg
jbe
sarl
or
orb
fstps
invd
lds
push
cmp
xlat
xchg
outsb
pop
pop
cmp
cs
push
out
pusha
push
loop
mov
inc
xchg
jo
sahf
pop
lods
adc
aad
push
mov
popf
sarb
dec
les
mov
sbb
out
aad
dec
aas
and
and
insl
add
dec
sub
scas
mov
lret
jmp
mov
fadds
mov
das
dec
aad
fdivrl
add
aas
xor
sbb
adc
shlb
lds
xor
lds
add
int
adc
shlb
xchg
jp
dec
cmp
jnp
push
inc
mov
inc
lds
dec
les
inc
ret
movsb
dec
mov
jmp
dec
inc
add
dec
aam
xor
xchg
dec
xchg
insl
dec
cmc
in
hlt
cmp
xor
outsb
jle
mov
je
pop
insl
cmpsb
jl
jg
jl
in
cmp
out
test
in
xor
pop
leave
add
xcrypt-ctr
fldl
ss
int
sub
jmp
lret
rcl
inc
popa
ss
push
pop
jns
adc
and
sbb
add
sbb
sub
and
leave
cli
sahf
jp
es
mov
push
aad
les
mov
les
add
int3
inc
imul
outsb
outsl
fadd
shll
cld
cmp
pop
lea
stos
sbb
pop
dec
xlat
adc
or
mov
mov
fs
mov
ds
pop
out
and
pop
dec
loopne
xchg
pop
int3
mov
shl
notl
sbb
push
popa
mov
arpl
lds
imul
add
pop
cld
pop
push
adc
sbb
leave
scas
movl
xchg
popf
ljmp
lods
push
cli
outsl
sahf
ss
sbb
sub
out
aad
cmc
mov
cld
popf
inc
sbb
out
test
in
ss
sbb
mov
pop
sub
fwait
sahf
add
or
cs
popa
xchg
cmc
cltd
push
aam
aas
nop
sub
mov
xlat
mov
xor
xorl
cmp
dec
mov
push
jno
aam
sarl
mov
lods
cmpsl
ret
aas
add
sub
daa
ds
pop
repnz
and
loopne
and
cmp
mov
sbb
fsubl
lock
and
loopne
enter
jmp
idivb
xchg
cld
push
mov
xchg
bound
pop
or
adc
fwait
adc
jbe
les
movsl
mov
mov
fldenv
sub
mov
pushf
pop
test
or
mov
and
lcall
fwait
mov
ret
das
mov
dec
mov
pop
xor
dec
repnz
loopne
xchg
cmp
mov
mov
test
lock
add
mov
mov
arpl
sub
roll
rcrb
xor
stc
sahf
mov
push
and
lods
push
sub
or
iret
movsl
dec
fs
iret
rcll
sarb
sub
mov
leave
out
das
jmp
jl
movsl
je
mov
and
in
shlb
mov
pusha
add
add
adc
int3
and
jg
inc
in
cmp
mov
xchg
xor
test
test
add
cmp
adc
mov
add
mov
cmpsb
jl
test
and
cmc
pop
mov
and
shll
aad
cld
in
mov
out
xorb
sbb
jbe
pop
shll
bound
inc
shlb
lds
add
je
jns
fwait
cli
incl
mov
shld
xor
cmp
mov
insb
dec
cli
xor
movsl
mov
inc
stc
jecxz
andl
xchg
or
popa
add
dec
insl
cmp
std
pop
std
sub
cwtl
insl
fcomps
adc
mov
add
xchg
int3
loope
sbb
imul
push
imul
ja
sub
roll
sbb
xor
sub
inc
and
sbb
or
jecxz
inc
icebp
dec
lea
xchg
cmpsl
out
subl
sti
mov
je
test
enter
cmp
xchg
xor
iret
call
scas
dec
out
push
and
mov
sub
loopne
xor
xchg
adc
dec
mov
lret
cld
cwtl
mov
push
fisttpll
popa
stos
mov
data16
loopne
orl
push
cmpsb
cmp
cmp
add
mov
test
push
test
and
stc
push
pop
fnsave
int3
cmp
lahf
xchg
addr16
outsl
mov
lods
jns
mov
dec
inc
arpl
pop
mov
shrl
cmovle
sbb
daa
mov
icebp
pop
cwtl
adcl
pop
xor
lret
or
mov
shlb
xchg
mov
imul
je
mov
sarb
jb
push
mov
xor
into
xlat
cmp
pop
cmpsl
jecxz
mov
push
and
adcl
into
stc
xor
das
cmp
push
or
dec
idivb
push
rorl
les
xor
popf
xor
jg
cwtl
cmp
dec
jo
dec
cwtl
loope
and
ret
std
rcr
inc
xor
mov
sub
fstl
cmp
out
arpl
hlt
xor
sbb
xchg
enter
pop
adc
inc
loop
adc
xchg
int3
int3
mov
xor
mov
outsl
popf
sub
add
push
push
adc
dec
clc
aad
mov
mov
push
mov
jb
popf
fsts
inc
pop
fisttpl
dec
mov
mov
fbld
or
sbb
repz
jne
addr16
adc
add
hlt
orl
incl
scas
enter
pusha
push
adcb
push
jbe
pop
add
cmp
loopne
xchg
push
rcrl
xor
rol
rcrb
ljmp
addr16
enter
scas
addr16
cwtl
test
lea
mov
inc
mov
xor
mov
out
ja
sbb
dec
ss
fsubrp
jb
lahf
jl
imul
out
dec
jns
out
push
lds
jp
rolb
icebp
inc
mov
scas
xchg
mov
jb
hlt
cmp
je
pop
jmp
push
loop
mov
inc
xor
and
shl
jbe
pushf
aam
mov
jecxz
mov
or
pusha
loop
and
dec
jo
hlt
inc
enter
movsb
cmc
aaa
xchg
fmuls
add
xchg
adc
gs
mov
je
xor
cwtl
loop
les
sub
je
rcpps
push
cs
inc
insl
nop
add
popf
pusha
add
add
jp
rolb
loopne
adc
pop
sbb
js
dec
jo
jnp
mov
clc
sti
out
push
mov
sbb
stos
les
push
sbb
sahf
push
xchg
pop
es
add
pop
cmpsl
iret
xor
mov
push
rcrl
shrb
mov
xchg
insb
dec
pop
outsl
dec
add
xchg
sarb
sbb
mov
xchg
enter
cli
and
test
in
bound
roll
ja
push
and
dec
fstl
imul
xchg
test
sar
mov
xor
xchg
shrb
repnz
push
or
mov
and
aam
ss
pop
mov
add
pop
dec
in
pop
sub
out
negl
bound
sub
fstp
pop
mov
or
stos
cwtl
jge
bound
push
and
xchg
cmp
pop
stos
icebp
test
in
push
sub
dec
popf
pop
dec
mov
pop
push
mov
int
push
test
sub
out
test
add
xchg
notl
stos
in
or
fwait
mov
pusha
flds
jnp
outsb
cmpsb
or
jns
gs
stos
and
dec
repz
dec
leave
mov
les
sti
cli
mov
or
test
mov
xlat
in
xchg
push
pop
xor
mov
mov
scas
dec
loope
scas
fimull
jb
adc
mov
popa
pushf
inc
and
inc
mov
test
or
mov
orb
cmc
or
fnstsw
das
push
jge
adc
dec
sbb
and
aam
test
call
add
sbb
hlt
int
jbe
cltd
test
cmc
and
pop
jo
mov
add
testb
rcrl
mov
je
test
movsb
xchg
es
insl
ds
sub
cmc
dec
inc
repz
mov
pop
xchg
dec
dec
pop
jbe
dec
stos
mov
pushf
mov
pop
fcmovne
or
push
fadd
inc
xchg
sbb
mov
sarl
fucom
mov
loopne
sahf
inc
jae
mov
xchg
add
lcall
repnz
aas
push
pop
test
lret
mov
inc
sbb
scas
push
insb
inc
in
lret
push
pop
pusha
mov
xchg
sbb
scas
repz
rclb
jle
and
cs
inc
push
fwait
in
sub
gs
ret
ja
cmp
outsl
pushf
mov
inc
push
notb
subb
add
test
sbb
in
out
ja
push
in
pop
push
xor
mov
sbb
xchg
nop
loope
rcrl
test
jle
pop
sub
xchg
jmp
jae,pt
sbb
lods
imul
in
xor
jns
in
mov
mov
mov
in
mov
jg
mov
or
pusha
shll
push
int
movsb
lcall
adc
test
add
cwtl
jns
and
js
mov
dec
lods
mov
stos
ja
mov
lods
dec
push
mov
or
lds
sbb
in
ficoms
aaa
ds
mov
xor
lret
int3
stc
cwtl
and
sarb
add
inc
hlt
mov
in
jle
jp
decl
xchg
aas
mov
rolb
gs
cmpsb
repnz
ret
pushf
cwtl
inc
imul
sub
sub
sbb
movsb
roll
repnz
mov
es
scas
jmpw
jnp
fs
jg
addr16
ja
add
pop
cmc
sbb
into
andl
push
cld
mov
xchg
inc
mov
jle
pop
rcrl
inc
dec
movntps
mov
aaa
pushf
in
or
add
cli
xchg
loope
mov
into
decb
ret
sub
lea
inc
clc
aam
scas
fiadds
jno
dec
mov
mov
push
pop
into
mov
xchg
test
xor
incl
and
popa
gs
repnz
pop
cmp
push
in
pop
lret
mov
jg
mov
test
push
push
cmpl
dec
lret
mov
ret
aad
in
mov
mov
into
mov
dec
jge
lds
mov
insb
push
test
in
dec
xlat
cwtl
lds
jae
aad
pop
xchg
xchg
or
pop
lahf
fidivrl
ret
cmc
gs
adc
mov
in
xchg
ss
push
push
mov
cmc
leave
aad
add
push
jge
in
fsubr
test
ljmp
test
dec
sub
loop
in
call
jl
xchg
and
mov
inc
fwait
arpl
leave
jmp
push
mov
jecxz
jg
sahf
nop
push
fbld
xchg
stc
mov
lret
sub
dec
adc
pop
cmp
fimuls
pop
int3
add
dec
xor
cmp
jae
clc
xor
loop
out
aad
xlat
cmp
mov
movsl
rcrl
mov
xor
inc
add
mov
mov
dec
loope
aam
arpl
popf
cmc
lcall
pextrw
push
clc
add
sbb
dec
orl
add
cmp
push
cmpsl
int3
mov
jno
mov
inc
hlt
mov
out
cld
cmp
xor
mov
out
ds
mov
or
dec
xor
xorb
sbb
movb
mov
movsbl
into
pop
or
sahf
inc
sub
mov
jmp
pusha
fs
jb
loopne
shll
pop
fistps
stos
xor
cmpsl
call
lret
jbe
inc
imul
dec
stc
je
test
xlat
or
cmp
adc
xor
sub
or
scas
pop
adc
jae
ljmp
call
repnz
cltd
inc
xor
mov
jle
pop
enter
out
fnstsw
lahf
pop
mov
stos
mov
lcall
or
dec
jb
add
cwtl
lret
or
adc
lods
push
out
aam
fisubl
aas
add
adc
or
sub
push
pop
mov
mov
fnstcw
stos
pop
pushf
scas
dec
pop
or
push
imul
mov
jae
hlt
mov
jb
pop
cmp
push
ret
imul
cld
xlat
out
lds
movsb
add
loopne
pop
rclb
jp
sub
fnstenv
fstps
push
mov
lods
add
add
sub
inc
stos
rol
push
and
shrl
insl
cmp
stos
incb
lods
add
dec
jno
lea
xor
sbb
cmp
jle
in
and
arpl
sbb
push
lret
pop
lock
js
adc
hlt
loope
or
hlt
insb
jbe
and
in
mov
dec
xchg
mov
leave
jno
out
pminub
daa
jp
add
pop
es
mov
in
std
pop
and
jg
and
push
xchg
sbb
pop
rorl
jae
jns
mov
fisttpl
scas
xchg
push
sti
mov
jns
int
push
addr16
lea
int
adc
test
fcomp
jae
sahf
mov
cltd
inc
imulb
into
inc
push
in
pop
out
int3
pop
loop
imul
rclb
stc
inc
and
jl
adc
sbb
push
cmpsb
into
fsubrs
mov
xor
push
lret
loop
cli
inc
mov
or
in
ljmp
cwtl
jb
fnstsw
pop
xchg
cli
mov
sbb
sbb
cltd
fildll
mov
cmp
scas
cli
out
mov
jae
inc
clc
mov
mov
xor
shll
mov
fs
gs
stc
fsubrp
cld
cmpsb
jo
sbb
fs
sub
jbe
jmp
xor
inc
test
mov
xor
sbb
fldl
lock
jbe
xchg
movsb
imul
add
xor
gs
jae
cwtl
insl
subb
pushf
rcrb
scas
outsl
incb
push
mov
cmpsl
and
cli
and
add
mov
dec
rolb
in
cmpsl
pop
inc
jecxz
jnp
mov
xchg
jb
fistpll
bound
dec
std
subl
jmp
push
lahf
add
loopne
inc
xchg
pop
mulb
popl
jecxz
add
into
pop
push
add
out
test
or
pusha
fcmovnbe
adc
mov
dec
fsts
cmp
addb
out
mov
lret
push
ret
cmp
cli
sub
rcl
push
sub
dec
mov
js
xor
add
jecxz
jl
dec
popa
clc
out
sub
daa
and
aaa
rcrl
mov
fs
push
pop
cmp
cmp
cmp
or
sbb
adc
imul
rcrb
in
lds
rdpmc
rcrb
push
fcmovb
aaa
lahf
xor
mov
repz
shrb
pusha
inc
jns
inc
jae
popf
fprem1
test
push
ljmp
mov
sub
sbb
in
shll
cmc
fs
dec
sbb
mov
push
fnsave
sti
clc
and
dec
jl
pushf
add
mov
jg
sbb
ror
add
dec
ss
inc
lahf
mov
fistpl
xor
xor
pop
pop
mov
adc
roll
mov
xor
cmp
ret
push
out
jno
fidivrs
ljmp
ds
mov
inc
jae
mov
jp
and
scas
test
lret
fdivs
inc
sbb
fsubr
push
stos
je
clc
loope
mulb
popa
adc
mov
repnz
pop
ljmp
std
into
jno
and
incb
cmp
lret
mov
rolb
cmp
adcb
ret
inc
insl
inc
jb
xchg
ja
test
mov
std
orb
sbbb
adc
adc
add
arpl
pop
notl
xchg
clc
neg
sub
je
xor
jae
neg
movsb
mov
and
push
mov
gs
dec
sub
nop
mov
rcll
mov
shlb
sub
add
jmp
pushf
sub
push
rorb
ret
lds
int3
insl
dec
scas
ds
mov
fisubl
pop
imul
or
or
inc
dec
sti
mov
push
std
clc
pop
jnp
je
mov
inc
and
rcll
inc
mov
movsb
sahf
xchg
cwtl
xchg
sub
shl
cwtl
inc
movups
std
push
mov
or
ja
or
repz
sub
dec
xchg
lret
jg
cmp
inc
fiadds
push
and
push
xchg
push
adc
mov
jns
fwait
add
adc
jbe
push
repnz
repz
movsl
inc
ret
stos
jmp
jmp
push
rcrl
shrl
scas
gs
mov
mov
pop
lds
and
nop
movsl
hlt
pop
mov
int
fwait
clc
out
mov
loop
sbb
xlat
cmp
mov
pop
xor
sahf
in
negl
add
push
xchg
or
xchg
movsl
jecxz
xchg
gs
scas
sbb
je
adc
mov
add
fisubrl
mov
mov
push
pop
enter
jp
sbb
loope
pop
push
aam
cli
popa
pop
jbe
rolb
movsb
pop
adc
or
out
enter
and
fisubrl
add
stc
xchg
adc
ds
cmp
orl
ret
iret
in
mov
repz
ds
out
pop
scas
pop
pop
jno
jecxz
call
jl
loop
call
lods
adc
or
imul
fwait
adc
push
in
aaa
inc
repnz
dec
or
jmp
cmc
pop
mov
shl
add
pusha
imul
ret
push
sbb
jnp
mov
push
cmp
pop
sub
push
iret
add
dec
mov
push
add
or
ret
call
rcrl
aad
sbb
shl
shlb
push
imul
int3
loope
push
test
cmp
popa
aas
out
or
push
ret
adc
hlt
ja
scas
ror
stc
fdivs
mov
mov
mov
cld
cmc
jnp
sarb
clc
mov
ss
pop
pop
mov
popa
push
movsb
cwtl
out
andl
jp
lret
sbb
sub
xlat
addb
cmpsb
xorl
gs
mov
mov
mov
mov
flds
dec
jnp
cmp
and
add
xchg
movsl
inc
mov
outsl
iret
iret
push
and
test
jp
lods
cmp
inc
mov
in
fs
add
mov
mov
mov
pop
cmp
stos
lret
and
jo
shll
enter
push
mov
mov
adc
cmc
cmp
decb
push
leave
or
sbb
inc
cmp
jae
cmp
adc
mov
shr
int
fistps
lahf
dec
xchg
inc
pushf
test
pop
inc
incl
mov
fdivl
sbb
pop
aad
aad
jmp
int
or
insb
dec
jecxz
jb
fnstsw
pop
in
mov
test
xchg
outsl
jl
mov
and
push
scas
mov
shrl
test
jecxz
push
push
push
pusha
xchg
xchg
xchg
dec
pushf
in
imull
mov
sub
iret
subb
cmp
jmp
or
jbe
adc
mov
in
sbb
sbb
ljmp
cmp
add
xlat
gs
jae
daa
dec
daa
xchg
in
fisttpll
fbld
cli
cmp
jp
push
ds
movsb
clc
daa
jno
sub
pop
sub
es
xor
fbstp
sbb
fs
sub
add
jo
mov
sub
mov
mov
mov
outsl
cli
add
incb
jae
sub
pop
popa
cli
jecxz
repnz
pop
inc
inc
cs
test
xchg
jnp
lods
cld
dec
dec
sbbl
pop
orps
adcl
mov
inc
es
cwtl
adc
cmc
pop
push
xor
add
repnz
sbb
mov
mov
sbb
mov
push
ret
popa
jno
lret
fdivrl
movsl
scas
in
cmp
pushf
arpl
or
push
adc
xor
aaa
pop
cmpsb
out
or
subb
jp
sbb
rcll
jp
push
movsl
push
icebp
ret
loopne
insb
adc
fbld
sbb
sub
and
lahf
and
es
stos
pop
outsl
or
and
xorb
lcall
in
jno
outsb
xchg
in
dec
mov
inc
gs
xchg
jmp
ficompl
cli
inc
mov
lea
repnz
and
mov
lds
cmpsb
sub
mov
cmp
lea
xchg
mov
mov
pop
scas
je
dec
pushf
les
lcall
cmpsl
xchg
or
iret
inc
mov
mov
push
jbe
test
cmp
lcall
icebp
mov
mov
pop
in
repnz
pop
popa
das
sub
sub
cmpsb
pop
add
movsb
subl
rorb
daa
cltd
lahf
mov
stos
cmp
pop
pop
inc
mov
movsb
btc
leave
and
dec
fldcw
push
pop
addr16
mov
outsb
lcall
jl
aad
mov
ja
jnp
inc
mov
test
stos
jl
push
adc
xor
popf
insb
jg
outsb
scas
mov
call
lret
or
mov
hlt
push
mov
jg
ss
cmp
inc
mov
std
aam
data16
cmp
fdivl
mov
adc
int
idiv
cmp
mov
cmp
push
mov
aad
andb
lods
repnz
jmp
xchg
cltd
lea
aaa
cmpsl
out
push
mov
pop
dec
mov
mov
fdivs
mov
add
inc
jnp
mov
dec
jnp
outsl
xor
pusha
push
push
push
mov
cmpl
pop
das
arpl
repz
or
stos
sub
adc
aaa
jae
fdivrs
inc
std
dec
lock
lock
mov
mov
sub
mov
stc
or
xchg
sbb
cmp
mov
lahf
fadd
addr16
pop
loopne
lock
neg
fdivs
popa
dec
ljmp
and
cmp
mov
gs
adc
mov
jns
xchg
sbb
fcomip
jmp
mov
cmc
stos
lock
mov
jmp
jecxz
sar
sub
fwait
jns
pop
int3
jae
sahf
les
lods
push
jle
add
clc
xor
sar
popa
xor
push
scas
dec
cltd
testl
fs
lea
stos
out
cmpsb
add
push
push
adc
insb
jp
push
ja
fimull
adc
xchg
sub
dec
stos
imul
pop
pop
and
cmp
aas
add
push
push
xchg
sub
sub
push
xchg
rorb
adc
movsb
cmp
dec
imul
jl
movsb
call
xchg
es
les
sub
push
ds
ror
adc
jmp
mov
lock
push
mov
mov
out
xor
clc
insl
sub
mov
sub
addr16
and
out
xchg
sbbb
mov
fidivrs
xor
sbb
in
iret
loopne
test
push
and
inc
xor
mov
iret
cs
push
aaa
pusha
pusha
xchg
and
mov
cmp
mov
jb
jecxz
push
adc
lcall
jno
and
movsl
xchg
push
iret
daa
add
dec
mov
xor
jecxz
mov
push
mov
iret
popf
xlat
int
push
cltd
lods
sbb
das
les
xchg
iret
jmp
push
fdivp
sub
rcl
ficoms
sub
cmp
push
lods
movsl
jo
jp
into
and
pusha
enter
movsb
pop
push
adc
xchg
shrb
lds
mov
xor
adcl
ret
push
notl
dec
jno
add
fmull
out
cmp
xor
adc
imul
mov
sbb
insb
pop
mov
sbb
push
stos
or
pushf
inc
cld
sahf
mov
in
pushf
fisubs
mov
mov
dec
or
sbb
pop
sub
dec
call
push
pop
mov
sub
sub
xor
mov
int
xor
in
popf
pop
pop
insl
mov
jne
xchg
insb
mov
mov
cltd
aad
scas
fnstenv
push
icebp
and
inc
mov
nop
loope
xor
scas
and
dec
les
jne,pt
gs
xchg
out
push
icebp
inc
lret
pop
stos
mov
fsubrs
fmul
je
mov
add
setl
jb
xchg
and
nop
pop
daa
xchg
shl
cmp
fnstenv
lret
ret
fidivrs
add
mov
push
outsl
push
adc
cmp
gs
enterw
xor
dec
insl
shll
and
cmp
aas
xchg
sub
mul
out
jg
cmp
or
int3
loope
mov
pop
xchg
inc
popa
pop
jge
ret
sub
movsl
scas
movsb
push
hlt
movsl
js
pop
jb
cmp
pop
mov
dec
iret
push
cmp
popa
test
lods
or
mov
ds
mov
add
ja
fbstp
popa
or
popf
adc
push
lods
jns
in
clc
fmuls
xor
loope
lea
inc
fwait
add
pushl
sbb
mov
insl
fstpt
mov
push
loopne
mov
pop
adc
push
jno
xor
jne
lea
mov
shrb
push
lcall
jg
adc
push
loope
or
scas
mov
mov
jl
cmp
sbb
dec
push
lods
aas
aaa
mov
das
xor
cmp
xchg
and
fwait
inc
jnp
cltd
cmp
and
mov
xor
lods
lods
cmp
push
sbb
jae
in
cs
mov
sbb
jno
neg
adc
mov
movsl
pop
inc
ja
idiv
je
ja
int
cmpsb
nop
pop
or
aam
xchg
dec
imul
jge
sbb
out
test
lcall
mov
jne
rorb
and
inc
aaa
hlt
dec
push
inc
lock
inc
lret
dec
fnsave
inc
pop
aas
dec
int3
pusha
push
fldl
xor
fsubl
pop
xor
stos
mov
mov
fwait
ljmp
movb
xchg
aad
in
adc
mov
push
aad
sahf
xor
ljmp
inc
jns
test
aam
inc
sub
lea
int3
cmp
fstl
sbb
stc
test
test
or
rclb
loopne
jns
cli
or
pop
mov
mov
xor
int3
inc
jp
add
decb
xchg
push
inc
adc
imul
test
jne
add
pop
loope
out
jb
inc
outsl
xchg
jno
scas
ret
mov
inc
jns
push
repnz
cmp
jecxz
and
push
add
cli
pop
aaa
xchg
or
cmp
pop
pop
pop
sub
xor
xor
loopne
pop
fmuls
dec
sbb
sarb
jmp
mov
and
adc
pop
scas
push
push
pop
mov
sbb
movsb
xchg
js
loop
fsubrl
icebp
mov
push
sti
popa
scas
or
mov
lret
cwtl
xor
inc
repz
cmp
rcr
push
ss
fcoms
shlb
mov
dec
subb
js
jge
dec
pop
sbb
frstor
movsb
out
dec
sbbb
jno
and
out
ljmp
inc
pop
cmpsl
int3
movsb
fcmovb
mov
dec
pop
ja
out
xor
jo
mov
into
inc
xchg
pop
sbb
loope
ret
in
rcll
mov
out
faddl
outsb
call
adc
stos
sub
jns
xchg
dec
cmpsb
divb
or
mov
cmp
out
aam
and
lret
inc
push
shrl
imul
fsubl
xchg
pop
aaa
leave
xchg
fnsave
mov
mov
push
lcall
cmp
inc
jae
cmp
jno
add
and
popa
test
mov
and
outsl
pop
into
push
push
push
es
shlb
adc
fldenv
push
out
enter
fimuls
jne
add
mov
out
pusha
jge
andl
test
sbb
dec
cmpsb
int
icebp
xor
inc
insb
daa
loop
ret
lods
imul
xlat
iret
push
and
cs
add
insl
pushl
rclb
jo
imul
int
mov
out
xor
pop
inc
mov
pusha
lods
and
sub
scas
and
cmpb
stos
or
inc
xor
xor
scas
aas
outsb
int3
imul
out
mov
and
testw
or
mov
cmp
and
stc
push
jns
cmp
lahf
in
insb
and
xor
xor
jae
rolb
dec
insb
call
call
fucom
inc
mov
lods
jae
pop
pop
jne
sub
ficomps
xchg
leave
sub
lea
inc
outsb
lds
xchg
jb
sahf
and
adc
fdivs
xor
mov
imul
sbb
fistpll
out
jno
inc
imul
lret
out
pop
add
adc
popf
cmc
shll
arpl
pop
insb
enter
and
xchg
or
and
mov
fcomi
inc
aad
pop
push
orb
sbb
cld
push
jecxz
repnz
xlat
insl
add
cmp
sub
mov
in
inc
outsl
add
adc
mov
hlt
xchg
das
fdiv
xor
xorb
jae
psadbw
xchg
and
movsl
jp
das
pop
sti
imul
mov
mov
lds
rorb
out
mov
pop
icebp
loop
pop
imul
and
jl
sbb
jb
addr16
fadds
push
and
mov
int3
insb
jnp
fwait
mov
mov
das
clc
incb
lahf
pop
mov
popl
ficoml
lea
push
dec
lcall
xchg
mov
cli
insl
pop
cmp
ss
and
push
jmp
sub
pop
and
inc
pushf
inc
jecxz
pop
inc
mov
lahf
js
pop
lret
xchg
push
push
faddl
mov
clc
popf
popf
js
jnp
inc
inc
cmpsl
in
in
ss
pop
addr16
cmp
aam
filds
cmpsl
idivb
pushl
or
inc
rclb
jae
xchg
jo
mov
add
jg
mov
or
jo
psubb
paddsw
lds
dec
rcl
xor
insl
icebp
decl
push
or
cltd
dec
or
cmp
sub
pop
mov
imul
push
xchg
lods
sbb
add
sub
scas
outsb
push
inc
in
in
rcrl
into
sub
dec
lahf
jp
aam
add
jp
sbb
scas
mov
push
in
push
sbb
ja
xchg
cmpl
xchg
xor
add
outsl
push
fistpll
cmc
lea
pop
clc
enter
fdivrp
movsl
movsl
test
mov
push
and
test
in
mov
popa
into
mov
aad
mov
xor
xor
inc
adc
rorl
out
mov
fadds
inc
cmpsb
or
xchg
inc
xchg
cli
outsl
je
rcr
lea
pop
out
adc
xor
sbb
dec
xchg
lcall
pop
mov
sub
hlt
jo
imul
mov
jnp
clc
sbb
filds
add
jbe
clc
lret
mov
pushf
fisttpll
sub
adc
sub
push
scas
mov
inc
xchg
shll
insl
cmpsl
or
insl
scas
mov
dec
push
mov
lds
mov
sub
push
push
in
stc
mov
mull
xor
adc
mov
mov
je
jb
pop
xor
jg
pop
add
sbb
rclb
sub
arpl
iret
insb
jns
loope
fwait
es
fdivrl
push
call
add
loope
les
xchg
dec
cmpl
xchg
push
push
loop
repnz
cmpxchg
incb
mull
addr16
pusha
pop
pushf
in
xchg
rolb
imul
mov
jnp
or
and
stos
scas
pop
push
mov
repnz
mov
call
pop
stc
shll
xor
and
adc
sti
fcomi
aaa
flds
lahf
ja
jne
fwait
cmp
std
sub
jo
cmpsl
sub
adc
mov
sbb
mov
xorl
mov
imulb
add
ret
outsb
fadds
ret
inc
sub
stos
stos
mov
out
jecxz
mov
enter
pop
inc
hlt
iret
dec
scas
daa
roll
pop
push
insl
sub
das
aam
add
in
adc
stos
imul
push
xor
adc
stos
insb
lods
add
ret
ret
shll
and
mov
ja
jg
jp
jae
rorb
fwait
mov
mov
cli
pop
fbld
jge
xchg
inc
ret
inc
cltd
or
xchg
hlt
mov
hlt
lahf
xor
popw
leave
cmpsb
gs
dec
int3
jge
jmp
add
jnp
stos
int3
dec
ret
and
jp
loopne
mov
idivb
imul
ds
or
sub
inc
push
enter
mov
cmp
sarl
fcmovb
jb
ret
mov
add
or
dec
xorl
jbe
icebp
stos
push
fmul
cli
add
daa
add
cmp
test
test
call
and
leave
gs
int3
scas
mov
xor
and
hlt
mov
out
mov
lret
pushf
inc
sbb
out
hlt
and
shl
sbb
sbb
inc
push
rcr
sahf
outsl
xchg
adc
es
pop
mulb
xchg
xor
push
mov
xor
or
repz
push
jp
mov
lds
mov
cmp
and
insl
mov
je
pop
aad
sub
je
idivb
mov
jno
and
idiv
fcompl
xor
ret
jnp
leave
js
and
dec
movsl
ja
xchg
je
aas
mov
push
or
jae
rolb
insb
shll
mov
jae
push
sbb
fs
cmp
test
jge
fs
sbb
xor
scas
or
inc
addr16
loope
xchg
ret
or
lds
add
sbb
andb
notb
and
sbb
popa
mov
pushf
jae
lret
sahf
aad
mov
vandnps
xchg
scas
or
mov
imul
bswap
pushf
lock
fidivrs
shll
loop
test
jecxz
out
shrl
mov
pop
push
jb
push
out
sbb
push
arpl
shrb
sub
mov
cwtl
xchg
sti
roll
es
xchg
or
int3
push
adcb
lret
push
loopne
dec
or
inc
mov
xchg
mov
in
inc
xchg
out
pop
add
popa
mov
sub
dec
ja
insl
push
mov
pop
dec
mov
pop
pop
in
push
lcall
nop
je
arpl
cld
cmc
out
movsb
cmpsb
adcl
xlat
or
cmp
jge
xchg
push
add
arpl
cmp
jae
mov
push
jge
int3
jge
ret
xchg
xchg
orl
outsb
jo
mov
pop
or
mov
js
pushf
aad
add
dec
jne
lds
aam
sti
scas
add
in
ljmp
add
sub
hlt
mov
test
push
aaa
push
call
in
adc
add
loop
xchg
fldt
sbb
dec
or
mov
jg
daa
enter
mov
dec
dec
inc
sbb
sbb
jne
daa
out
je
adc
pop
lock
xchg
xchg
cmpb
sub
sbb
sub
push
pop
into
xchg
ja
sarb
mov
sbb
iret
js
push
insl
daa
int3
mov
adc
adc
jge
mov
test
jp
or
mov
fsubrl
fwait
inc
rcr
dec
jb
lock
mov
push
iret
iret
in
out
or
sti
ret
aam
jmp
out
dec
xchg
mov
sub
adc
mov
or
inc
mov
mov
cmp
and
xlat
adc
lods
xor
outsl
sbb
mov
shr
pop
and
bound
cmpsl
xchg
jecxz
iret
pushf
int3
aam
in
xchg
cmpsl
dec
xchg
adc
jne
ret
pusha
sbb
or
jns
fisttps
ds
push
add
aad
or
mov
out
int
in
call
mov
push
ja
adc
hlt
repz
and
call
mov
lret
xchg
dec
pop
rcr
jo
mov
into
xor
mov
mov
jb
mov
xor
flds
push
inc
add
cld
orl
and
inc
inc
mov
xor
jp
add
mov
lock
add
pushf
bound
iret
pop
pop
sbb
fsubrl
fbld
repnz
ficoml
sarl
test
mov
add
int3
mov
and
ficompl
daa
call
insb
fs
dec
nop
pusha
mov
jmp
out
pop
shlb
push
insl
mov
je
push
lods
and
mov
std
sti
pop
jns
inc
dec
mov
xlat
xor
mov
repz
mov
les
cmp
mov
jecxz
push
mov
pop
adc
xor
xchg
fcoml
push
mov
and
sahf
xchg
jno
data16
adc
in
jle
sub
mov
inc
or
mov
rclb
repz
jle
and
or
lcall
push
aam
gs
pop
adc
bound
push
sarl
addr16
sysexit
mov
test
rol
stc
push
or
mov
into
cmp
xchg
xchg
scas
pop
movsb
cmpsb
cmp
jmp
cs
xchg
cmp
xor
mov
add
sbb
faddl
push
sbb
hlt
cmpsb
push
inc
ficomps
int3
shlb
mov
dec
sbb
push
jl
push
fisubrl
mov
lock
aam
and
ds
adc
xchg
push
sarb
mov
add
and
inc
in
ss
push
sbb
jbe
lock
inc
cmp
inc
scas
push
pop
outsb
testl
xchg
mov
outsb
push
inc
sar
movl
cmp
movsl
out
shrb
xchg
loope
jbe
mov
movsl
push
leave
push
add
mov
insl
in
jae
cli
jg
stc
jp
add
inc
and
dec
xchg
std
rcll
mov
daa
adc
mov
fdivrs
push
or
stos
aam
outsb
mov
cmp
add
dec
fistpll
fstpl
and
dec
subb
or
jge
inc
ljmp
lret
mov
mov
xor
insl
out
mov
mov
pop
loopne
ret
push
xor
sti
push
inc
mov
dec
inc
push
in
les
aad
gs
pop
adc
leave
add
mov
cwtl
orb
in
add
inc
aas
lret
adc
mov
mov
xchg
idiv
cmp
add
out
mov
lcall
repz
mov
outsl
stos
or
cmp
scas
cmc
mov
sbb
xchg
inc
push
into
pop
fcomps
imul
cli
xchg
incb
or
popf
shr
cmp
pop
push
add
xchg
fistpll
out
push
daa
roll
outsl
sahf
out
stos
addr16
or
xlat
xlat
in
pop
popf
pop
jae
scas
ds
sub
mov
sub
movl
xchg
and
xchg
mov
movsb
add
mov
cs
aaa
and
subl
fidivs
cmp
test
sub
enter
stos
push
jg
fstpl
mov
stos
pop
in
sarb
adc
mov
cmp
push
mov
fstpt
dec
mov
xor
and
arpl
shlb
lods
add
sub
bound
test
mov
and
mov
movsb
mov
andl
mov
pop
xchg
movsl
pop
mov
ret
gs
cmpsl
loop
mul
pop
jp
test
jge
imul
xor
push
jns
jbe
sti
stc
mov
jge
iret
push
clc
mov
maxps
fisttps
adc
add
and
out
and
adc
add
jecxz
adcl
nop
xchg
outsl
xchg
fs
test
roll
push
push
in
mov
jmp
mov
add
sbb
mov
test
jne
sub
push
inc
fcomps
sub
dec
pop
dec
dec
shl
jbe
scas
xchg
pushf
insl
sbb
inc
adc
or
in
cs
push
mov
je
mov
fldl
dec
or
mov
dec
test
mov
push
outsb
mov
in
pop
mov
fdivrl
shl
sbb
pop
mov
addr16
inc
inc
add
cltd
pushf
ret
addr16
cmp
imul
pop
insl
outsb
insl
rcll
data16
rep
inc
insl
int3
test
mov
adc
movsl
ret
or
xchg
add
cld
aaa
sbb
push
movsl
ror
inc
fdivrs
xlat
cmp
push
dec
push
jg
or
cmpsb
jns
xchg
mov
jbe
mov
dec
add
cli
into
aad
jmp
mov
inc
shrb
cmp
push
or
hlt
pop
hlt
sub
xchg
mov
cld
fistl
test
out
cmp
ss
or
inc
or
es
sbb
std
outsl
pop
and
xor
mov
push
in
in
orl
xchg
arpl
into
jecxz
into
int3
arpl
inc
jg
xor
adc
into
icebp
imul
inc
push
jo
ds
push
cltd
mov
sbb
mov
jmp
sbb
xor
hlt
or
and
mov
and
xchg
inc
jge
pop
arpl
pop
xchg
hlt
mov
es
out
adc
test
mov
fcmovnu
sti
mov
adc
xchg
jnp
jns
mov
push
int
jp
mov
rorl
fdivr
outsl
sub
jo
sbb
sub
addr16
cmp
lret
repnz
cmp
pusha
add
repnz
jo
jle
dec
test
push
fwait
jb
loop
jmp
push
or
shlb
test
rcr
push
test
aas
dec
stos
or
jp
add
leave
mov
lea
stos
jno
inc
and
jge
mov
xlat
push
insb
sbb
push
pop
stos
add
ret
je
adc
rcrl
je
icebp
push
fsubl
fisttpll
repz
mov
inc
pop
mov
out
sub
push
arpl
xor
mov
mov
pop
bound
out
fistpll
jbe
sub
lock
jo
ds
movb
std
test
ret
mov
and
or
push
gs
sahf
add
mov
xor
and
imul
xchg
shr
sub
push
jb
jge
les
pop
push
xchg
mov
mov
sub
insb
mov
or
cmp
ja
test
cmp
dec
addb
mov
out
sbb
mov
or
ss
pushf
push
xchg
pop
daa
mov
adc
pop
nop
add
js
scas
and
das
sub
inc
rcrl
repz
ljmp
jb
ffreep
repz
int3
mov
std
jo
iret
adc
lret
jle
pop
das
xor
jp
mov
cmp
or
cli
xor
adc
hlt
int3
stc
and
aad
adc
sarl
lea
cwtl
xchg
mov
sbb
outsb
je
or
inc
adcb
aas
add
outsl
push
push
dec
mov
and
sbb
cmp
in
lret
add
lret
jl
or
rep
xor
in
and
adc
fs
subl
shll
mov
imul
andb
js
dec
and
push
and
scas
scas
sbb
pushf
jo
stos
jp
xlat
pop
mov
push
mov
adc
jp
jno
scas
mov
pop
and
inc
xor
pop
xor
dec
jne
pop
push
fldenv
mov
hlt
mov
sti
adc
jge
add
sub
adc
popa
int
lea
mov
out
int3
jmp
test
push
sbb
dec
data16
imul
sbb
mov
jbe
in
adc
scas
jp
dec
xor
mov
pop
outsb
mov
sti
mov
jnp
sbb
mov
jnp
popf
inc
shll
pop
or
mov
hlt
and
gs
call
int
or
inc
testl
in
mov
lret
cld
lods
pushf
outsb
inc
jnp
adc
adc
out
mov
inc
cmp
add
lods
mov
xor
hlt
cli
outsb
stos
inc
in
push
mov
pop
mov
insb
ret
mov
push
fcomip
dec
loopne
ljmp
in
cwtl
jae
fsubp
imul
adc
dec
add
inc
sub
es
mov
xchg
repnz
in
sub
dec
ret
inc
cwtl
add
mov
stos
xchg
and
out
les
roll
push
bound
or
repz
xor
ss
lods
push
xchg
dec
out
add
dec
cmpsb
pushf
lds
jbe
ror
cmpsl
jg
ljmp
out
es
xor
dec
std
repz
mov
push
adc
loopne
mov
pop
adc
je
movsb
lcall
aas
pop
testb
adc
dec
adc
lea
inc
dec
pop
fildl
fildl
sbb
unpckhps
xchg
sub
sbb
rsqrtps
stc
mov
jmp
orl
leave
and
or
sbb
lock
insb
int
and
or
push
push
pop
and
inc
push
push
xor
das
outsb
fsubs
and
dec
in
popa
insb
jns
push
gs
pop
loopne
cmp
inc
jge
sbb
jno
ja
sub
xor
cltd
lret
test
mov
in
jmp
or
and
lcall
lahf
jns
sbb
jge
xor
aad
dec
lret
in
inc
cmp
mov
cmp
sbb
sahf
inc
roll
dec
repz
fwait
aam
sub
dec
or
fnstsw
arpl
shlb
cmpsb
aas
cltd
int3
ljmp
push
js
test
mov
lods
push
das
iret
je
popa
cwtl
mov
cmp
mov
xorl
lds
sbbb
int3
and
pushf
and
roll
leave
fisubs
scas
inc
sti
and
imulb
inc
jae
lds
mov
xor
outsb
in
call
test
cmc
xchg
and
mov
stos
out
cmc
mov
test
jge
and
int3
inc
cmc
test
push
xchg
enter
xchg
test
icebp
ret
push
pop
add
mov
push
orb
add
sbb
movsb
sub
lea
dec
movsb
aam
xor
mov
das
add
add
std
hlt
push
mov
adc
movsl
fs
push
sahf
jmp
push
inc
pop
xchg
jb
cmp
sti
pushf
dec
les
in
les
ja
repnz
mov
cli
xchg
jmp
das
cmp
hlt
cmp
inc
sar
fidivrl
cmp
sub
push
js
cltd
test
aad
scas
lret
std
inc
cli
sub
xor
dec
fnclex
stos
dec
dec
mov
push
pusha
lds
push
pop
cmp
stos
dec
jnp
mov
mov
mov
lods
xor
mov
add
adc
mov
nop
mov
jne
addr16
std
inc
dec
push
add
jnp
enter
pop
ror
mov
fdivrs
test
push
shlb
into
inc
stos
test
cmp
sahf
fimuls
cmc
mov
dec
gs
push
xchg
and
pop
jb
adc
cs
cmc
mov
cmc
jbe
sbb
jns
cltd
out
mov
mov
pop
cmpsl
and
lods
test
shlb
mov
mov
fnstsw
addr16
mov
das
lcall
push
shll
dec
jge
cmp
and
push
jne
xor
and
push
add
cmp
mov
testl
sub
loope
faddl
repnz
push
sti
sbb
mov
pop
sahf
mov
mov
add
decb
sbb
sub
inc
cmp
mov
or
mov
shll
pusha
mov
sar
inc
notb
or
mov
out
pusha
nop
push
stc
mov
popa
je
out
jle
fldl
negl
scas
repnz
test
lret
vpsrlw
add
sahf
hlt
mov
in
mov
adc
test
mov
sar
outsb
sbb
iret
jle
fwait
or
jb
cmp
bound
inc
mov
dec
jbe,pn
ja
arpl
out
idivl
xchg
addl
dec
inc
mov
imul
and
outsb
arpl
adc
gs
mov
idivl
add
or
popf
daa
pushf
dec
stc
ret
xchg
xchg
jnp
mov
mov
jle
mov
inc
inc
or
xchg
and
and
out
pop
es
hlt
jns
mov
cmp
in
xor
or
inc
and
lret
and
inc
lods
or
push
add
push
xchg
sarb
xchg
dec
in
jns
in
jmp
stos
xchg
out
jg
scas
ret
cmp
push
ss
jne
mov
out
mov
add
push
mov
mov
mov
push
jbe
push
decb
rorl
pop
and
sbb
fisubrl
dec
push
pop
pop
pop
rclb
mov
mov
pop
push
pop
sub
adc
and
movsb
xchg
mov
inc
inc
shll
es
ljmp
jo
push
fidivrl
inc
out
shrl
jbe
and
dec
jo
push
push
les
dec
xor
cli
xchg
iret
jg
and
or
imul
pushf
add
popa
inc
jecxz
in
xor
icebp
popf
push
repz
mov
lcall
and
inc
cwtl
adc
jp
pushf
dec
mov
inc
ja
fisttpll
dec
lret
adc
clc
mov
cmpsb
lret
mov
scas
cld
sti
sbb
jbe
xlat
fisubl
inc
cmp
or
mov
rclb
shll
data16
insb
jne
mov
cmp
icebp
fs
jg
jl
sub
adc
push
inc
pop
inc
xchg
in
and
je
insb
push
or
cmp
imul
sti
in
push
sub
mov
push
jb
inc
setae
ljmp
rcll
js
scas
jae
pop
xor
mov
enter
pop
inc
mov
sub
lret
dec
inc
test
rcrl
or
xor
jne
pop
lcall
int
repz
in
mov
push
dec
or
cmpsl
mov
xchg
iret
arpl
cmc
jl
aad
lods
mov
lds
inc
pcmpeqd
std
dec
aad
bound
adc
sub
gs
push
sbb
jns
xchg
mov
xchg
insl
xchg
mov
push
add
or
adc
loop
xchg
scas
pop
mov
sub
cmp
push
gs
mov
dec
stos
jns
add
icebp
into
pop
mov
out
cmpsl
out
es
sub
setp
sub
sbb
das
mov
lret
clc
imulb
pushf
dec
lcall
sti
mov
jge
pop
sbb
inc
push
dec
out
xor
int
lahf
and
xor
mov
fwait
cmp
enter
popa
adc
stos
rcl
popa
aas
mov
sahf
dec
imul
add
pop
sub
cmp
popl
mov
xor
sub
add
ljmp
mov
leave
and
push
movsb
mov
cmp
or
mov
mov
add
es
ss
cmp
loope
ds
bnd
cmc
loop
leave
out
mov
out
push
and
cltd
lods
push
movsl
cmpsl
xchg
pop
jno
inc
xor
push
dec
inc
mov
jne
fdivl
xchg
callw
mov
cmp
mov
inc
push
sbb
xchg
mov
shlb
hlt
repz
jmp
cmpsl
rcrl
and
cltd
gs
lea
cmp
outsl
int
popa
xchg
inc
stos
mov
roll
jb
lods
addr16
inc
fistpll
cmp
pop
arpl
xchg
mov
inc
sub
loop
sbb
push
cs
ret
sub
jbe
daa
fbld
lret
pop
add
hlt
jmp
and
test
aas
fs
fcoms
cli
popf
out
sbb
das
movsl
adc
inc
cmp
out
adc
jp
cmp
hlt
sahf
inc
pop
faddl
movsl
lods
popf
pushf
and
xchg
pop
pusha
test
cmp
xchg
xor
push
call
push
add
loop
mov
fisubl
sub
and
stos
cmp
mov
jge
movsl
addr16
push
xchg
leave
je
and
fidivrs
outsb
xchg
push
xchg
pop
dec
subb
or
xchg
pop
mov
or
insl
add
fsubrl
mov
dec
dec
cld
dec
dec
pop
insb
sbb
in
arpl
mov
movsl
mov
pusha
mov
adc
fwait
jecxz
push
xor
mov
rcll
ret
push
mov
or
rcrb
inc
cwtl
mov
hlt
jle
into
cwtl
mov
push
gs
add
cmp
in
dec
rclb
sti
mov
sub
mov
pop
jbe
test
jp
test
out
mov
fcompl
pop
xlat
insl
sbb
adc
scas
xchg
pushf
inc
cltd
xchg
dec
sub
xchg
or
aaa
pusha
stos
clc
ret
jp
fbstp
pop
and
mov
sbb
pop
popa
fnstenv
or
and
nop
mov
pushf
clc
imul
in
enter
das
pop
gs
xchg
fsts
inc
fiadds
mov
xchg
jg
enter
jle
cmpsb
shrl
sahf
loop
cmp
outsl
dec
mov
test
xor
stc
xchg
sub
mov
stos
fs
sbb
pop
enter
push
incb
dec
in
aaa
iret
dec
dec
push
add
add
and
mov
or
popf
mov
xchg
aas
xor
dec
and
jle
dec
pop
and
inc
adc
xchg
or
dec
cmp
inc
dec
fbld
popf
pop
and
mov
or
jbe
loope
dec
or
and
xchg
stos
mov
stc
add
imul
adc
fs
mov
jno
jmp
mov
iret
lahf
mov
mov
cmp
sub
adc
or
pop
test
movsl
mov
add
rcrl
fs
mov
dec
or
int
lods
mov
mov
ljmp
test
sbb
out
fcmovu
js
cmpsl
add
dec
pop
mov
shlb
add
mov
jle
mov
mov
or
pushf
mov
dec
mov
adc
cmp
push
ret
sub
sub
xlat
pop
adc
sahf
rorb
jno
or
pop
cld
mov
js
jno
jg
sbb
pop
jmp
es
pusha
push
sub
pop
ja
sbb
test
insl
daa
stc
adc
imul
sahf
stos
insl
mov
ret
push
and
fstl
and
loope
lcall
xor
push
sbb
vucomisd
mov
sub
outsl
push
xlat
mov
inc
push
adc
push
mov
lds
iret
mov
mov
test
fisttpll
gs
mov
and
push
mov
or
pop
xorl
add
cltd
daa
icebp
mov
mov
in
push
push
pushf
popa
and
or
test
cwtl
jne
loopne
outsl
ds
mov
aaa
fwait
rolb
push
rolb
movsb
jp
mov
dec
inc
or
xor
mov
mov
adc
lds
jg
cmp
adc
mov
cltd
jmp
out
dec
pop
pop
mov
push
clc
dec
jne
fidivs
in
pop
lea
int
pushf
int
rcl
hlt
sti
pushf
or
jmp
xchg
cmp
test
ret
notl
xor
adc
xor
out
inc
push
jge
outsb
insb
fs
stos
icebp
xor
cmp
cwtl
sub
mov
fimuls
popa
xchg
das
cmp
adc
inc
std
sbb
aaa
int
mov
pop
inc
mov
push
pop
in
jecxz
and
in
adc
enter
inc
lret
scas
mov
mov
sbb
sub
icebp
fidivl
cs
pop
adc
lods
lret
in
push
aaa
xor
inc
aad
inc
test
rcrb
push
sbb
repnz
lcall
mov
mov
iret
cmp
cmpl
xchg
pop
or
mov
cmpsb
adc
dec
mov
outsb
or
lcall
pop
cltd
add
xchg
pop
cmp
mov
mov
mov
lcall
ret
scas
cs
dec
cli
add
dec
rclb
scas
jecxz
jb
and
and
push
and
ljmp
inc
enter
stos
and
xchg
fs
inc
gs
xchg
push
pcmpgtw
xchg
xchg
mov
inc
ficoms
inc
mov
xor
push
mov
dec
and
cwtl
out
dec
jl
aas
cld
jmp
sub
jns
adc
test
add
scas
add
loop
jnp
xchg
sbb
adc
mov
xlat
aaa
mov
lods
sub
fnstsw
pop
mov
fsubrs
xor
out
std
dec
sbb
xchg
and
push
mov
mov
pushf
mov
scas
je
nop
push
push
cmp
mov
call
movsb
je
idivb
cmc
imul
andb
lret
pop
mov
dec
popa
lock
js
xor
movsl
mov
pop
or
jo
outsl
lods
std
push
aaa
test
pop
rorl
xchg
mov
push
sub
xor
prefetcht0
inc
mov
lcall
inc
sbb
pop
push
xchg
mov
sub
subl
loope
pop
rol
fs
and
sbb
popf
shll
pop
in
push
xchg
scas
call
xchg
pop
flds
bound
jnp
adc
xor
aas
loop
jl
int3
pop
fstl
outsl
ljmp
mov
add
sarb
imul
in
push
movsb
movsb
cmp
jecxz
sbb
jl
sub
mov
xchg
cld
clc
wrmsr
lcall
mov
or
outsl
cmp
pop
or
loope
cmp
lds
ja
lcall
inc
sarl
out
aad
mov
das
loop
int
and
pushf
and
pop
and
pop
stos
shrl
mov
mov
sbb
jbe
ficoml
leave
sub
dec
scas
in
add
xor
in
push
jge
or
and
push
cmp
pop
inc
mov
jl
aam
or
loop
xchg
mov
testl
faddp
jnp
or
lds
and
lods
cld
pop
pop
pushf
add
stos
ja
daa
aaa
or
in
jl
add
jle
sub
jne
and
decl
mov
scas
inc
jmp
pusha
fmulp
jp
in
gs
dec
sub
les
or
mov
in
aam
xorb
adc
inc
sub
and
pop
mov
ret
jg
inc
xor
imul
fisttps
in
pop
mov
js
lret
bound
dec
add
xor
cld
jmp
cmp
mov
jo
pop
jl
icebp
dec
or
aaa
pop
xchg
mov
push
cmp
addr16
out
and
add
cs
jmp
rcrl
out
loop
loope
jae
pop
sti
pop
movsl
mov
xor
shl
mov
fnstcw
xchg
idivl
mov
cld
imul
popf
inc
cmpl
test
inc
mul
shlb
xchg
out
lahf
test
pop
push
gs
push
fst
andl
inc
ret
pop
mov
ljmp
psrlw
pushl
push
mov
cmp
jno
inc
pop
cs
fwait
pop
jp
aad
adcl
add
ss
insb
push
gs
xchg
fdecstp
fs
mov
mov
shll
aas
orb
clc
mov
leave
imul
mov
hlt
pop
in
push
inc
xchg
ficomps
stos
xor
pop
add
xor
mov
pop
pop
add
les
push
fsubs
mov
cld
adc
jne
mov
and
pop
idivl
insl
pusha
xchg
mov
jns
or
insb
cmp
mov
pop
add
sbb
rcpps
sbb
inc
imull
cs
mov
push
sub
or
out
mov
loopne
outsb
or
adc
dec
mov
dec
xor
testl
shlb
std
jp
les
sbb
xlat
push
insl
jecxz
dec
shll
repnz
cs
ret
xchg
add
cmp
mov
dec
mov
ror
ficomps
cmpsl
call
mov
data16
das
out
test
loop
outsl
je
add
xchg
xor
ds
dec
test
ljmp
cltd
test
test
icebp
add
aas
sub
scas
popf
sbb
test
cmp
or
sti
fldt
jae
and
push
in
shrb
xchg
mov
js
push
es
out
and
lds
int3
test
adc
gs
es
cmpl
pop
or
pushf
and
or
pop
enter
ret
enter
dec
sub
movsb
lret
mov
xchg
or
xlat
sahf
negb
data16
int3
sub
addr16
xchg
es
neg
lahf
ljmp
mov
cmpb
movsl
ljmp
les
sub
pop
cli
mov
add
ss
xchg
icebp
xlat
loop
mov
and
jle
xor
inc
cmp
and
cmp
icebp
pop
inc
mov
or
shrl
inc
dec
push
js
mov
inc
mov
push
pop
jb
dec
clc
xor
jg
mov
repz
imul
mov
or
sbb
in
dec
mov
jl
rcrb
insl
daa
lcall
or
push
xchg
pop
enter
rcr
lods
cmp
sbb
adc
out
stc
loopne
cmpsl
mov
daa
push
cs
mov
repz
dec
cli
into
outsl
xchg
and
out
adc
test
mov
int
mov
inc
jmp
cmp
loope
and
ja
leave
mov
fcomp
mov
and
push
leave
mov
and
gs
xchg
mov
lcall
jl
shr
mov
mov
lret
test
insl
gs
jae
ret
scas
mov
sbb
adc
insl
cmp
popa
push
pushf
xor
and
addr16
setp
xchg
pop
jnp
in
adc
mov
ja
aas
faddl
mov
enter
xor
fimuls
add
imul
ficoml
test
test
and
cmc
mov
shll
push
stc
cmc
mov
or
stos
push
adc
mov
aam
icebp
out
pop
fldenv
dec
cmp
loop
jecxz
out
movsb
mov
add
and
stc
mov
push
imul
or
stos
stos
xchg
fucomip
add
stos
aas
inc
ja
iret
testl
mov
and
sbb
mov
sbb
loope
add
lock
dec
xchg
sub
xchg
mov
popf
sbb
fcomps
mov
ficompl
or
loop
cmp
pop
sub
mov
insb
xchg
daa
out
pop
sti
push
repz
dec
and
leavew
or
or
aam
and
clc
enter
test
daa
lret
daa
mov
into
lea
out
fcmove
ret
insb
ljmp
mov
xorl
pop
ret
jg
aam
cmpsl
call
jmp
js
jns
push
adc
dec
mov
adc
pop
test
imul
repz
shl
in
xchg
das
jne
test
rcr
test
cltd
ds
inc
cld
add
bound
pop
sbb
or
repnz
lret
lcall
add
pop
mov
dec
jmp
mov
call
lcall
shufps
imul
push
cmpsl
aaa
lods
mov
stc
cli
cmp
adc
pop
out
push
rcrb
divb
sub
mov
mov
add
xor
xor
sub
sbb
and
ss
dec
aaa
icebp
je
pusha
mov
inc
xchg
mov
adc
inc
and
nop
xor
fwait
pop
daa
push
mov
pop
fwait
pop
inc
mov
ret
mov
pusha
mov
xchg
stc
into
or
in
shlb
arpl
adc
loope
inc
or
fwait
pop
or
mov
cmp
rolb
push
add
scas
movsb
dec
mov
and
sarb
mov
lock
fistpll
adc
movsb
pop
imul
push
sub
jp
push
std
inc
dec
pop
pop
xchg
and
leave
stc
pop
add
adc
mov
push
xorb
mov
mov
fisubrl
mov
xor
pop
cmp
lds
cmc
ret
int
nop
ja
mov
aad
jne
jae
scas
pop
out
iret
cmp
aaa
mov
sub
cmpsb
bound
sub
jecxz
push
push
sub
mov
cli
js
stos
pop
loop
insb
sarl
jns
aad
daa
iret
in
loope
das
push
sbb
pop
cmp
bswap
sub
sub
mov
sub
scas
aas
pop
inc
inc
pop
mov
push
xor
repnz
orb
mov
pop
and
pop
ljmp
and
push
call
out
push
and
loop
inc
lret
push
push
loop
push
xchg
lds
sub
loope
cwtl
es
les
cmpl
push
sbbb
jo
and
dec
shl
in
jg
int
loopne
mov
aaa
je
sbb
inc
mov
shrl
dec
sbb
inc
and
mov
lret
mov
or
loopne
daa
pop
stc
xchg
fstpt
dec
inc
fistpl
pop
push
mov
fidivrs
inc
lcall
jae
adc
rolb
xchg
test
scas
xlat
mov
movsl
insl
pop
sbb
scas
aaa
arpl
js
mov
adc
orl
xor
js
arpl
or
jge
inc
xchg
xchg
push
push
mov
or
test
adc
repz
xchg
sarl
daa
adc
mov
frstor
ror
pop
and
adc
pop
and
movsl
push
jb
mov
pushf
movq
ret
in
mov
lods
inc
mov
inc
je
insb
cld
mov
cmp
stos
jg
pop
arpl
outsb
stc
xor
fmulp
scas
or
stos
stos
cmp
push
mov
cmpsb
sbb
and
lods
stos
daa
data16
pop
js
packuswb
and
cmpsb
lcall
inc
sarl
jns
mov
jnp
loop
test
inc
into
sbb
mov
jae
mov
roll
cmp
fcoms
sub
lds
sub
sti
fildl
repz
jbe
jo
clc
idiv
or
sub
push
inc
push
jg
jmp
cmp
or
pop
push
xor
inc
jbe
mov
adc
inc
xor
sub
jg
dec
jl
mov
iret
fs
in
mov
cmp
push
in
rorl
mov
out
mov
xchg
and
out
xor
pmulhuw
insb
stos
push
adc
push
in
xor
dec
mov
arpl
xchg
fs
push
mov
int
sub
sbb
in
add
dec
and
ljmp
pop
insb
clc
or
mov
scas
sbb
loop
push
popf
je
xchg
jo
mov
jle
imul
cli
mov
popa
mov
jp
nop
mov
jae
jecxz
imul
mov
enter
enter
test
mov
lea
jnp
shlb
cltd
push
add
daa
and
insb
dec
xor
xor
ret
cmp
dec
or
mov
mov
js
movsl
add
dec
outsl
pop
nop
icebp
or
mov
xor
addr16
add
clc
arpl
cmp
rolb
lds
xor
rcrb
inc
fimuls
mov
enter
fadds
cmc
inc
test
ljmp
and
dec
unpckhps
outsl
cmp
pushf
cli
sub
pop
js
aaa
jnp
push
pop
lods
aam
shl
adc
out
xorl
xchg
adc
inc
pop
or
aaa
cwtl
xor
mov
adc
insl
je
xchg
lcall
push
sbb
fidivs
in
mov
cmp
aas
mov
int3
sti
stos
xorl
jbe
test
mov
into
sbb
shrb
add
in
push
jecxz
pushl
les
add
inc
cmp
call
inc
mov
jbe
cmpl
lret
jns
jae
je
in
dec
or
push
jmp
inc
out
xchg
call
mov
sbb
cs
sbb
js
xchg
and
mov
jle
add
out
mov
mov
push
addb
repz
sarl
loopne
js
add
inc
mov
xchg
mov
sub
xchg
ja
push
or
mov
cmp
ds
hlt
jb
daa
pop
pop
jae
addr16
aam
stos
or
aam
cmp
xor
daa
roll
test
cmp
or
ljmp
mov
bnd
hlt
aas
sbbl
jne
lahf
test
pop
pop
je
movl
fsubrl
mov
jle
dec
adc
dec
inc
mov
xor
push
adc
sbb
arpl
dec
addr16
mov
clc
jbe
fdivrl
out
jb
cld
sub
nop
fcmovnu
sub
sub
mov
sub
push
xchg
gs
imul
insb
cwtl
or
ja
stos
rolb
jp
mov
xchg
sbb
inc
jl
ljmp
adc
xchg
sbb
out
dec
pusha
adc
mov
push
dec
mov
push
inc
je
les
cmp
fs
in
mov
cmpsl
je
scas
shlb
andl
pop
add
je
sti
insw
add
lea
pop
adc
out
mov
aad
outsl
fcoms
mov
cmp
cld
dec
add
mov
and
movsl
cmpsb
mov
adc
jo
sbb
test
nop
in
lock
adc
xor
fnstenv
sub
mov
icebp
icebp
icebp
aam
in
enter
ljmp
outsl
push
sub
sbb
daa
sub
sub
mov
add
stos
stos
mov
dec
push
lods
push
divl
or
push
mov
outsb
roll
dec
data16
arpl
inc
pop
xchg
dec
fmul
push
scas
enter
mov
push
es
jno
add
repz
gs
call
xor
mov
cmp
cli
add
clc
sub
inc
jo
aaa
push
ja
mov
pop
cmp
into
jb
xorb
or
mov
leave
jle
pop
mov
sub
jo
push
sbb
pop
loopne
and
scas
int3
pop
out
test
mov
xor
add
pop
jnp
pushf
int
mov
sub
mov
loope
add
adcb
pop
push
dec
add
dec
gs
loopne
aam
outsl
mov
lret
arpl
push
cmpb
dec
scas
dec
insb
push
mov
sbb
inc
dec
xor
enter
scas
loope
sbb
cmp
gs
pop
push
pusha
pop
add
jle
mov
out
inc
inc
lahf
hlt
xlat
fldt
lret
inc
cltd
fcmovnb
fwait
pop
push
mov
imul
inc
inc
mov
fmul
hlt
sbb
adc
lahf
xchg
or
lods
idivb
jnp
fsts
int3
imul
jno
sahf
addr16
test
pop
dec
int3
push
outsl
xor
jge
std
add
xchg
jecxz
pop
or
xor
sbb
mov
repnz
jno
jp
shll
sbb
and
xor
cmp
pop
pop
iret
mov
jmp
cmpsb
iret
pop
mov
dec
push
adc
inc
jmp
xchg
jg
push
xor
dec
ja
adc
mov
add
xchg
lcall
loope
xlat
ds
rcll
out
ret
cmpsb
ret
scas
xchg
arpl
fcomp
pop
xchg
inc
push
inc
out
bound
rcll
push
outsb
xchg
popf
icebp
inc
andl
pop
pushf
ret
sub
mov
jno
mov
mov
fnsave
cmpsl
pop
mov
nop
test
dec
lea
js
jns
aas
jbe
sub
stc
bts
ljmp
mov
inc
cmpl
push
or
mov
fdivl
adc
push
fwait
test
dec
jg
jo
mov
pop
fdivl
into
inc
int3
aas
scas
inc
jns
add
mov
and
mov
add
shlb
imul
pop
mov
jo
xchg
scas
out
test
lods
test
add
std
jo
enter
sub
xchg
lds
xchg
dec
cltd
mov
lds
xchg
dec
lret
pop
scas
rorl
pop
test
push
idivl
loope
ror
xor
out
xor
jp
pop
shlb
push
push
sub
lods
cmp
xchg
int3
and
sub
cmc
push
xchg
shll
add
sbb
stos
inc
out
pop
aas
insb
mov
div
aad
int3
xor
dec
loop
push
sbb
addb
xor
xchg
daa
sbb
xchg
mov
cmp
hlt
jno
xchg
shlb
fcomi
and
push
cmp
mov
add
xor
fnsave
xchg
sub
dec
out
and
in
adc
aas
jb
repz
sbb
jmp
movsl
jbe
loope
lcall
sub
cmp
rcrl
arpl
in
int3
outsb
push
dec
inc
cltd
sbb
adc
dec
jnp
rcl
and
popf
imul
jb
shll
inc
jns
arpl
and
sub
adc
jb
fldt
shrb
mov
aam
in
es
cmp
movsl
loope
xchg
dec
in
lods
imul
insl
xchg
xor
jmp
loop
jns
daa
xor
mov
sbb
sub
xor
mov
pop
cmpsl
stos
fidivs
lea
sbb
mov
dec
add
pop
lahf
mov
shlb
dec
mov
jmp
pop
sarb
cld
add
sub
rol
hlt
and
std
pop
fwait
test
dec
ret
and
push
jle
mov
sbb
inc
push
clc
out
mov
or
mov
shr
bound
mov
pop
and
jno
out
into
in
jb
sub
call
bswap
sbb
ja
adc
xchg
add
incl
hlt
lcall
mov
xchg
mov
inc
fs
xor
sub
mov
loop
mov
loopne
push
test
fadds
sub
jmp
jmp
jecxz
shlb
and
loopne
mov
mov
push
pop
subl
xor
jmp
loop
and
loopne
pop
and
repz
nop
inc
lock
pop
or
sbb
ss
fbld
add
pushf
pop
mov
imul
das
insl
cmp
push
aas
inc
shlb
xchg
cmp
xor
insl
pop
iret
out
and
mov
pop
sub
xchg
xor
stos
pop
sub
pop
or
or
in
call
push
lret
popf
sub
movsb
push
nop
jge
fucomip
jno
jle
sar
cmpsb
lods
push
mov
test
or
ficompl
aaa
mov
push
lock
pop
push
inc
sbb
leave
cmp
je
xor
mov
cmp
pop
add
xor
je
jb
xchg
xchg
sub
pop
mov
mov
add
stos
add
mov
cmp
scas
faddl
sti
xchg
lds
fucomi
add
pop
cli
xchg
fcmovbe
jno
mov
jecxz
dec
in
sbb
or
and
rcll
test
add
inc
push
mull
dec
push
jo
movsb
gs
mov
pop
bound
or
add
xor
std
pop
lods
ss
push
jmp
adc
lods
mov
imul
dec
cwtl
mov
adc
mov
push
fwait
inc
stc
fnstsw
jne
and
cmc
jne
vmwrite
pop
fwait
stc
xchg
mov
add
ja
rcrb
std
or
sbb
scas
cmp
orl
repz
iret
push
daa
je
subb
cli
dec
and
and
push
or
mov
dec
out
adcl
js
inc
cmpb
les
mov
lret
orl
xchg
add
fistpll
mov
cmp
iret
mov
cmc
pushl
js
sub
xchg
xchg
js
loopne
repz
ffreep
lret
push
or
or
mov
sbb
test
aad
loopne
lods
test
lret
push
pop
jae
or
imul
xchg
addb
inc
mov
mov
idivb
dec
mov
push
sbb
shr
cmp
pcmpeqw
push
pop
push
cltd
sbb
sbb
stos
rcll
cmp
addl
cltd
cmc
add
test
ljmp
add
jge
inc
imul
and
add
clc
mov
ss
test
jmp
pop
mov
jge
addr16
iret
and
mov
and
popf
lods
push
or
adc
pop
das
mov
mov
icebp
xchg
adc
jmp
xchg
mov
cmp
mov
sbb
xor
and
lret
mov
mov
clc
jmp
movsl
ds
inc
sub
mov
jo
daa
mov
xlat
decb
jo
and
jg
mov
jle
sub
paddusw
pop
mov
push
adc
sub
jp
test
xchg
fsubl
xchg
ss
ret
inc
xchg
call
mov
jg
mov
mov
xchg
and
push
in
push
movb
test
imul
pop
push
adc
mov
mov
iret
fmuls
ss
inc
mov
and
xor
or
dec
enter
mov
outsl
mov
sub
sti
xchg
push
loope
adc
out
mov
dec
push
lods
je
dec
mov
push
xchg
addb
and
loop
sbb
cmc
loopne
jns
fcomip
pop
or
cmpsl
mov
sub
adc
jb
data16
sahf
aas
dec
push
adc
add
mov
shll
inc
out
or
out
iret
xchg
xor
iret
fisubl
fwait
cmp
pop
loop
mov
ret
fldl
pop
cmp
mov
adc
pop
pop
cmp
aam
dec
or
jmp
out
sub
xor
inc
test
lret
adc
jns
mov
ss
ds
ficompl
mov
stc
cmp
cli
loop
add
repz
scas
adcl
sub
xchg
cmc
movsb
sti
das
jecxz
movsb
jo
int3
xor
fildl
xchg
add
mov
subb
pop
not
xor
mov
std
or
push
dec
inc
sbb
sbb
cwtl
push
sbb
sbb
scas
popf
add
pop
sbb
ljmp
xor
jbe
outsl
leave
mov
add
mov
push
stos
adc
mov
enter
fs
inc
pop
inc
push
cmp
enter
cmc
mov
bnd
sub
arpl
movsl
in
sbbb
in
push
xor
popa
mov
add
xor
cld
mov
and
mov
sub
mov
cld
sub
mov
aam
cmpsb
lea
mov
mov
mov
dec
cmpl
push
and
lea
jg
cmp
mov
pop
aam
lcall
mov
or
cmp
enter
outsl
and
addr16
sub
ss
or
bound
fwait
mov
mov
in
or
stos
sub
push
xchg
pop
xlat
adcb
cmpl
push
shr
mov
push
mov
adc
into
jb
int3
and
pop
lock
inc
ror
push
negl
inc
in
int3
add
mov
xor
out
inc
cmc
push
into
out
aas
pop
pop
cmc
sbb
mov
mov
fsubr
xor
loopne
popa
mov
push
call
push
add
add
jg
mov
lret
dec
notb
fbstp
rorb
aad
aaa
sbb
sbb
test
rclb
pushf
cmpsl
and
adc
lcall
inc
repz
or
cmp
mov
imul
cmpb
sub
insb
dec
std
jmp
insl
jo
lds
jns
loopne
or
mov
mov
insb
gs
stos
addr16
xor
or
lret
stos
stos
mov
and
lret
xchg
adc
icebp
push
outsl
je
jns
and
mov
aad
lock
push
push
fwait
xchg
movb
and
shlb
cmp
push
out
mov
out
fsubr
cmp
mov
pop
ret
sub
sub
lret
mov
mov
mov
sub
dec
jo
mov
pop
jnp
add
adc
push
pop
jbe
sbb
jmp
enter
in
jns
int3
bound
div
pop
ljmp
xchg
call
mov
mov
add
in
adc
loopne
hlt
lock
ret
jp
in
sub
mov
ds
pop
add
test
and
push
aam
ljmp
jbe
lret
sub
xlat
outsl
xchg
imul
xchg
cmp
or
mov
pushf
adc
mov
sub
jns
lods
ret
call
cltd
cmpsb
and
cmp
adc
mov
test
xor
jp
xchg
jns
sub
adc
sub
sbbl
xacquire
cmc
call
add
or
mov
jbe
orb
fs
mov
sbb
iret
das
mov
icebp
xor
xor
mov
add
push
stos
jge
dec
imul
pop
mov
push
mov
push
scas
or
ficomps
cmc
mov
cmp
test
sarl
pop
push
mov
in
pop
mov
nop
sbb
clc
or
and
pusha
repnz
push
xor
dec
push
sub
xchg
sbb
pop
pop
sbb
pop
shl
adc
push
cmp
ficoml
cld
jge
or
clc
add
repz
mov
lods
mov
in
sub
sar
out
inc
in
sub
jb
test
std
mov
loopne
dec
lds
into
pop
sbb
out
add
inc
mov
sub
pop
mov
lea
leave
icebp
fbstp
add
nop
xor
ret
sbb
cmpl
and
jae
mov
xor
pop
lock
sub
sarb
dec
and
aad
sub
xor
mov
stos
mov
mov
iret
and
into
jb
xlat
arpl
bound
out
fadds
enter
adc
inc
cmpsb
outsl
mov
xor
rcr
mov
dec
jmp
test
mov
dec
cmpsl
jecxz
adc
push
sar
jg
scas
aad
sub
stos
dec
shlb
cmpl
jo
push
clc
aas
xchg
imul
mov
cmpsl
jle
cmp
outsl
xchg
cmp
loop
or
adc
push
imul
mov
adc
inc
mov
cld
mov
jl
sub
je
das
xchg
xchg
and
pop
repnz
sbb
test
xchg
push
jnp
xchg
jg
sti
testl
jmp
jmp
adc
and
push
in
sti
ss
mov
call
or
clc
mov
cmpsl
add
popfw
rcrb
loope
xor
pusha
aas
sub
clc
mov
lods
push
inc
aam
rcrb
xor
jne
xchg
inc
mov
lret
cmp
mov
sbb
sbb
mov
dec
push
jns
adc
in
and
insl
out
imul
hlt
sub
inc
xchg
mov
inc
lds
lods
push
dec
std
and
dec
fisubrs
pushf
mov
push
test
hlt
cmpsl
mov
push
mov
into
ret
mov
and
inc
add
out
xlat
popf
mov
aas
jecxz
pop
xchg
xchg
loopne
lods
push
mov
xor
adc
shlb
out
divb
das
dec
mov
or
or
jmp
inc
test
setns
xchg
jae
jo,pt
cmp
push
les
mov
mov
bound
xchg
pop
inc
or
pop
insl
scas
ja
cmp
lahf
mov
lahf
aad
mov
pop
out
pop
dec
pop
test
or
lret
mov
fwait
add
mov
xor
stos
bound
insb
arpl
add
repz
jp
or
ljmp
jl
sbb
mov
xor
leave
lahf
in
jns
divb
mov
lds
in
mov
mov
sbb
shll
fmul
xchg
add
pop
or
sti
cmp
subb
ss
mov
fisttpll
jle
imul
or
xchg
out
in
int3
mov
xor
jg
out
and
push
iret
sarl
xchg
out
cmc
adc
xchg
add
xor
loope
icebp
jns
and
jb
mov
or
addr16
adc
es
fidivl
push
jmp
push
sub
in
and
xchg
call
hlt
mov
subb
dec
lods
out
cmpsb
sbb
insb
repnz
dec
rorb
adc
push
into
push
jb
mov
sbb
xchg
jae
cmp
jne
pop
test
dec
or
inc
pop
pop
icebp
enter
push
idivl
push
stos
xchg
icebp
xor
adc
inc
mov
and
xor
loop
xor
jmp
into
stc
movsl
jmp
pop
jne
ljmp
outsb
sub
sbb
popf
test
cwtl
out
jo
mov
js
mov
faddl
jbe
popf
mov
ja
mov
jle
sti
rol
daa
and
sub
fidivrs
cmovo
mov
xchg
aaa
in
cmp
test
push
mov
add
fmull
pop
mov
adcb
xchg
ja
xchg
jle
lcall
mov
or
sub
repz
hlt
or
imul
push
dec
fbstp
mov
cmp
mov
rclb
int
insb
inc
repnz
cmp
cmc
inc
jne
inc
mov
nop
lods
mov
sub
stc
sbb
pop
int
sbb
xchg
pop
loop
scas
pop
sahf
aad
pop
shlb
popf
icebp
fcmovnbe
fmulp
or
data16
iret
adc
jg
jp
test
pop
mov
decb
xor
orb
or
in
cltd
lock
out
lcall
ljmp
push
or
cmpsb
jne
cld
mov
adc
and
sub
das
jbe
shll
es
fcomps
xchg
notl
jno
push
repz
and
int3
ret
and
cmpsl
pop
push
inc
pop
jns
in
cmp
jnp
into
pop
push
mov
pop
cwtl
jg
mov
testl
int3
ss
push
adc
leave
in
jns
jo
inc
push
dec
sub
mov
push
or
in
adc
xchg
push
clc
inc
addl
sbb
mov
jns
push
shlb
stos
sarb
loope
icebp
mov
mov
xchg
shrl
mov
inc
inc
fwait
cmp
dec
fldlg2
pusha
cmp
sub
push
incb
xchg
push
cmp
dec
popf
or
jg
jnp
xor
sbb
and
add
and
popa
xchg
popf
and
dec
xor
push
mov
xchg
add
xchg
leave
aad
push
mov
mov
push
jl
repnz
popa
xor
jg
int
mov
call
out
adc
and
push
cmp
int3
test
jmp
rclb
dec
int
xor
dec
mov
push
pop
mov
xchg
das
xor
in
popa
js
or
mov
dec
cmpl
or
ud2
lahf
popl
daa
aam
sbb
loopne
aad
aad
adcl
sub
pop
adc
xor
mov
pop
inc
pop
inc
dec
out
cld
into
push
xchg
sbb
add
xor
xchg
lds
push
fnstsw
cltd
outsl
lock
je
bnd
vminss
not
out
cmp
sbb
rorb
in
ret
push
xchg
jb
push
scas
movsl
dec
popf
imull
adc
test
rcll
mov
dec
mov
inc
adc
mov
pop
stc
or
subb
incl
pop
and
pop
sub
and
cmp
icebp
mov
jmp
mov
popa
xlat
push
mov
stos
xchg
push
sbb
clc
cs
outsl
in
mov
pop
sbb
out
loop
int
cmpsb
xor
mov
dec
aad
jg
in
mov
paddd
enter
int
rclb
and
dec
push
faddl
and
cmc
shrb
mov
jns
loope
or
pop
test
icebp
cwtl
int
subl
outsl
mov
sbb
lret
push
mov
cmp
add
cmc
or
mov
xor
into
and
mov
xor
sbb
cmc
pop
call
pop
mov
jne
lcall
pop
sbb
inc
mov
jmp
and
add
jg
pop
inc
repz
sub
pop
inc
shlb
ss
popa
mov
shll
insl
cmp
cld
aaa
into
adc
stc
and
add
push
jne
aas
rcr
into
pop
mov
mov
adc
add
xchg
push
aaa
pop
lret
xor
in
cli
sbb
adc
mov
pop
sbb
sbb
scas
or
ds
and
pop
xor
scas
cmpsl
pop
adc
testl
loope
add
sbb
divb
clc
xchg
jbe
clc
or
adc
pop
js
add
xor
sarb
xchg
mov
aas
cltd
call
fwait
lock
sbb
xor
gs
bound
cli
out
in
test
fsts
loope
dec
xchg
sub
lret
xchg
dec
popa
mov
mov
xchg
lahf
jnp
xor
adc
orb
xchg
push
inc
testb
clc
scas
ret
out
push
sbb
dec
leave
mov
mov
scas
loopne
insb
pusha
lahf
sub
xor
cmp
jp
dec
jnp
adcb
mov
inc
jge
fisubs
pop
scas
cs
in
add
movsl
xchg
out
xchg
mov
in
xor
inc
out
popf
push
jo
ss
sarl
xchg
std
dec
mov
sub
xchg
nop
jbe
mov
lcall
inc
imul
add
into
push
mov
insl
repz
iret
aad
inc
cld
out
or
stos
inc
push
pop
into
stos
loopne
and
mov
sbb
rcrb
dec
fucomi
dec
sbb
outsb
or
aam
dec
movsl
mov
pop
xor
add
cmp
leave
movsb
mov
fidivrs
push
in
sub
mov
sarb
in
add
jg
pop
rorl
jne
scas
iret
inc
adc
cli
pop
cwtl
test
sarb
pop
sahf
fsubp
out
xor
pop
push
cld
push
mov
and
scas
sub
mulb
movsl
int
mov
mov
lret
or
mov
pop
jne
inc
repnz
fdivs
nop
ss
cmpsb
push
pop
aad
cmp
das
adcb
sub
jecxz
leave
sti
push
push
cmpsb
iret
xchg
push
xchg
sbb
xor
inc
cmp
adc
sbb
sbb
cld
inc
pop
cmpb
push
adc
int
and
sbb
cmpl
adcb
iret
mov
fdivs
int3
and
dec
stos
lahf
push
and
inc
sarl
pop
mov
jno
lea
out
fsubrs
fstpl
mov
inc
mov
movsl
push
lahf
lods
lods
xor
mov
and
mov
stc
cli
pusha
loope
fs
sub
repz
imul
rorb
push
shlb
fsubl
adc
decb
jnp
sub
mov
push
pusha
adc
jg
fxch
and
scas
pop
mov
or
or
lcall
push
icebp
xlat
jge
inc
cli
cmc
idiv
sbb
sub
adc
inc
js
jmp
stos
cmc
scas
test
or
outsb
sbb
dec
jae
imul
add
push
sub
stos
test
push
xor
lahf
mov
lods
dec
xchg
mov
je
push
xchg
jge
or
icebp
jp
out
mov
cmpb
nop
and
imul
jmp
stos
sbb
aaa
push
aaa
mov
lret
sub
lret
cs
mov
xchg
cltd
dec
jmp
and
sub
mov
jbe
inc
loope
pushf
nop
rclb
movl
dec
mov
leave
or
lret
loop
int
dec
das
add
testb
repz
pop
dec
or
cli
push
sub
leave
xor
pop
mull
fxch
mov
call
sti
inc
mov
and
jb
pop
adc
mov
out
xor
nop
je
fdivp
lods
dec
xchg
sbb
adc
hlt
pop
imul
hlt
push
mov
adc
int
in
sti
cmp
lret
dec
mov
outsl
popa
into
outsb
jle
outsb
aas
adc
mov
xchg
sbb
xchg
lret
imul
xchg
jo
outsb
xor
and
push
push
repnz
dec
repz
les
jo
cmpsb
cmp
insb
pop
outsl
lret
jne
xor
mov
adc
aaa
mov
pop
fcomi
fldt
cwtl
lods
cmp
xor
push
xchg
inc
fcoml
shll
dec
mov
jae
stos
xchg
sbb
fsts
outsl
mov
mov
lcall
jge
test
mov
push
cmc
pop
pop
clc
jne
ds
pop
inc
daa
inc
pop
fildl
mov
inc
repnz
shll
push
push
mov
mov
jmp
test
sbbb
fnclex
orl
push
lcall
sbb
loop
inc
xchg
xor
mov
testl
xor
jle
popa
imul
add
inc
xor
push
xor
and
mov
les
daa
lods
js,pn
push
mov
pushf
and
aas
rcr
mov
mov
shlb
jmp
mov
movsb
sahf
mov
push
or
cli
loop
push
test
lret
mov
and
cmpsl
mov
addb
fnstenv
inc
jb
sub
or
pop
cmp
jl
cmp
das
mov
lret
mov
push
cltd
or
mov
push
lahf
push
mov
xor
call
xor
enter
sub
inc
adc
insb
jp
cltd
and
jp
and
jns
pop
push
lods
xor
jnp
jno
push
lahf
cli
outsl
push
hlt
push
dec
pop
sub
fs
push
aas
call
and
sti
lret
xchg
je
ss
movsb
and
jne
and
dec
mov
dec
arpl
sbbb
jb
xchg
faddl
ds
jnp
mov
mov
and
lret
and
xor
cmp
push
lret
sbb
ds
mov
jle
inc
mov
xchg
rcr
daa
inc
outsl
in
cmc
fbstp
ret
lahf
pop
add
mov
out
aam
les
movsl
mov
xor
ficoms
ljmp
sbb
xor
push
jo
xor
pop
and
jecxz
add
aaa
xchg
inc
dec
test
shll
xchg
dec
popl
subb
mov
push
stc
dec
mov
mov
fsubrl
dec
ljmp
test
insb
jg
js
test
cmc
sbb
or
mov
mov
fcmovbe
cmp
inc
daa
sti
ret
or
pop
sub
sbb
cmp
mov
mov
or
sbb
stc
add
sub
pop
pop
push
add
fwait
lret
or
hlt
cli
in
ret
pop
jge
adc
lcall
shrl
xor
imul
inc
ret
mov
scas
and
cmp
jle
push
jp
adc
sti
cmp
or
in
je
mov
mov
push
and
jmp
ret
imul
xchg
sub
xchg
mov
nop
mov
test
mov
mov
mov
cmp
push
adc
cmp
jmp
in
ret
das
and
push
mov
push
rolb
dec
sub
sub
rcrb
sti
cltd
in
enter
pop
popf
xchg
jo
int
ds
add
adc
aam
pop
in
jle
push
adc
pop
idivb
js
lahf
cmp
sahf
cwtl
sbb
int
cmc
pop
add
movsb
xchg
and
icebp
jno
f2xm1
add
dec
out
jl
stos
push
gs
or
bound
mov
or
sub
icebp
aam
ret
sar
fisttps
inc
inc
push
ret
adc
paddq
je
sti
aad
add
stos
test
cmp
lods
ja
iret
jbe
jbe
pcmpeqw
sbb
roll
dec
lods
sub
xlat
jge
cmp
leave
iret
adc
fwait
add
scas
in
cli
imulb
mov
fs
mov
dec
gs
inc
shr
and
movsl
test
cmp
stc
xor
stc
lods
cmp
cwtl
es
sbb
das
cmp
pop
lock
shl
loop
in
push
repnz
pop
ret
push
mov
mov
scas
aad
jp
call
out
fadds
sub
aas
push
jo
mov
jmp
int3
mov
int
mov
add
cmp
mov
cmc
xor
pop
xor
enter
xchg
pop
adc
push
loop
out
dec
and
lea
xchg
jg
dec
xchg
pushf
mov
aaa
push
enter
ja
cmc
sbb
test
nop
jg
mov
es
popa
fmuls
mov
pop
add
in
sbb
mov
cmp
ror
xchg
lret
dec
push
or
mov
pop
xchg
shll
rcl
test
lea
push
inc
inc
dec
mov
sub
lretw
iret
and
jns
jecxz
int3
mov
loop
lret
fsub
bound
dec
aas
clc
lret
imul
es
cmp
cmovb
add
cmp
sti
pop
push
sub
adc
bound
sbb
mov
and
pop
xchg
out
cmp
mov
popa
addr16
push
clc
cmp
jb
jb
cmp
loop
mov
xor
mov
outsb
std
jecxz
mov
imul
fildll
jg
cmpl
add
mov
movsb
arpl
leave
push
adc
gs
or
out
add
cli
mov
mov
aad
jge
mov
and
xchg
sbb
data16
mov
mov
shrb
cmpsl
pop
or
mov
cmp
cli
rorb
daa
insl
sbb
dec
jae
jnp
loop
enter
inc
push
imul
jo
leave
clc
popf
lods
aam
aaa
js
mov
mov
clc
sti
insb
lcall
adc
lret
inc
xchg
push
negl
or
mov
add
inc
sti
pop
mov
cmp
fildll
inc
sbb
sub
test
repz
cmpb
loop
jae
movsb
out
ss
jl
mov
jae
aaa
or
and
inc
mov
xchg
add
mov
aas
jae
mov
jns
add
adc
jmp
push
insl
into
shlb
xchg
outsb
popf
pushf
jge
repnz
ret
adc
jno
scas
fs
movsl
jae
cmpl
cmp
jecxz
rcr
inc
clc
rolb
scas
cmp
rol
je
xchg
rcl
movsb
xor
mov
jecxz
or
push
jecxz
cltd
xchg
dec
sub
cmp
stc
sbb
xchg
add
ja
std
imul
and
inc
iret
nop
jb
scas
mov
icebp
push
fwait
test
cmp
mov
adcb
or
jg
mov
push
pop
scas
jno
jne
and
mov
jns
mov
pop
stos
cmpsb
add
dec
xchg
lahf
sbb
insl
cmp
arpl
int3
adc
add
in
dec
stc
xchg
mov
mov
jecxz
push
mov
push
lahf
mov
out
or
push
mov
mov
repz
jo
adc
push
cmpsb
xchg
or
mov
out
fdivp
push
rcll
test
fcmove
ret
mov
xor
xlat
sub
sub
test
sbb
std
arpl
addr16
sub
pop
sbb
aaa
lock
loopne
sbb
fcmovnb
xor
sub
mov
push
imul
fsubs
push
inc
int3
ss
add
loop
sbb
xor
into
inc
outsb
xor
out
nop
mov
mov
pop
in
ds
pop
sbbl
mov
mov
out
nop
sbb
inc
sti
pushf
mov
imul
inc
xor
test
jnp
push
push
push
xchg
imul
subl
shlb
jno
lcall
fcompl
cli
notb
je
mov
ja
dec
xor
dec
addr16
push
push
cli
mov
pop
bound
mov
leave
lahf
mul
and
jo
pusha
xchg
jle
sar
iret
mov
test
imul
push
leave
push
ljmp
test
xchg
aaa
mov
pop
out
adc
xor
push
cmc
in
insb
mov
and
pop
mov
imul
xchg
rcl
rol
mov
cld
or
call
mov
mov
insl
rcrl
idiv
pop
cmp
mov
sub
repz
xor
push
xchg
mov
ficoml
cmp
test
sub
jbe
mov
out
push
insl
cmc
jnp
in
push
lcall
adc
jns
repz
push
xor
loope
aam
mov
fildl
or
push
add
outsl
xor
out
std
popf
jo
repnz
loope
test
shrl
popf
xchg
sbb
pop
mov
cmp
rcrl
sub
lcall
movsl
dec
xchg
sahf
lahf
xor
push
movsl
adc
aam
adc
and
xchg
adc
insb
stos
sti
add
push
dec
xchg
sub
mov
in
push
sahf
cmp
repz
repz
lcall
cs
mov
push
dec
sub
out
push
sub
mov
mov
adc
mov
dec
add
arpl
out
pop
aam
lds
data16
in
cmpsb
ds
inc
pop
add
jb
or
add
insb
pop
fdivrl
adc
xorb
pop
push
test
inc
jge
pop
sbb
pop
mov
inc
sub
stos
or
inc
mov
hlt
fsubl
repnz
imul
sub
arpl
jo
push
fcomps
lahf
mov
cld
movsb
dec
ds
sbb
arpl
push
push
sub
inc
sub
mov
dec
cltd
fwait
inc
jge
mov
mov
xor
rclb
fcmove
jp
mov
jae
insb
cmp
cli
mov
testl
movsb
add
add
ret
cmp
repz
mov
fisttpll
cmp
mov
loop
mov
inc
in
lods
sbb
push
imul
cmp
fdivrl
cmpsl
ljmp
mov
sub
out
or
imulb
faddl
push
xor
int3
mov
test
lahf
repz
stos
mov
sti
push
push
icebp
mov
pop
push
mov
push
jge
mov
mov
cmpsb
out
shlb
roll
add
aam
mov
shll
les
lods
push
pop
fwait
insl
cli
dec
in
int3
repz
lock
int3
mov
or
mov
repz
xchg
mov
movsl
xor
adc
mov
stos
call
add
notb
mov
cmp
stos
imul
hlt
push
shll
jmp
loop
aaa
dec
int
addr16
sbb
inc
sub
adc
xor
scas
pop
insl
mov
clc
and
leave
inc
jge
rcr
es
int
fisubl
fcomp
mov
aam
scas
jp
pop
push
xor
push
dec
mov
ljmp
mov
jle
adc
shlb
adc
cmpsb
or
out
mulb
into
imulb
int
les
push
dec
and
mov
or
mov
xchg
lret
or
jp
mov
or
mov
in
adc
jo
push
inc
cmp
int
shr
add
xchg
loope
mov
fnstenv
sub
fld
cmp
lds
inc
xor
cmc
xchg
orb
push
lock
mov
out
rorl
test
in
and
jmp
cld
scas
mov
pop
addr16
sbb
sbb
mov
scas
out
xor
dec
mov
jp
hlt
or
js
test
sarb
xor
mov
clc
sbb
xor
in
sti
xor
xor
mov
add
sub
or
cmp
xchg
adc
mov
push
outsl
fldt
lock
int3
lds
sub
adc
mov
sub
lods
mov
cld
adc
popf
popf
fisttps
shlb
inc
sahf
xor
inc
andl
pop
enter
aad
push
cmpsl
mov
xor
cltd
arpl
inc
xlat
mov
insl
mov
jg
xor
add
jl
icebp
or
insl
or
aas
inc
unpckhps
lcall
repz
inc
negl
sahf
pop
fbstp
mul
jbe
jl
lcall
mov
pop
mov
pushf
mov
cmp
inc
jl
pop
movsl
xor
ficoml
mov
in
dec
cmp
mov
fs
jl
add
sub
test
jns
push
outsl
adc
ja
lahf
adc
cmp
out
mov
popa
enter
jo
lcall
out
orb
cmp
inc
mov
jns
fdivs
sbb
ds
xor
jb
cltd
xchg
cmp
and
inc
enter
or
insl
add
add
pop
mov
jns
ja
out
test
es
std
fucomp
movsl
push
ljmp
cwtl
leave
or
fsubrs
sub
add
insb
bound
popa
outsb
popf
outsb
push
sarb
call
lret
pop
cmp
popa
inc
inc
sbb
inc
xlat
or
mov
cmp
pop
stos
addr16
xor
mov
stos
in
inc
fstps
mov
and
stos
jmp
call
aaa
movntps
jl
xchg
addr16
in
jle
sbb
jbe
in
gs
dec
sub
cli
fcmovnu
ret
daa
icebp
jmp
sahf
imul
mov
pop
daa
jg
subl
xchg
sub
call
jmp
jg
add
mov
sub
wbinvd
adc
sub
xchg
mov
fdivs
mov
jmp
in
push
das
cwtl
pop
mov
cmp
push
mov
popf
fcmovnb
dec
inc
mov
sahf
mov
mov
cmp
fldcw
jno
jp
ljmp
aam
enter
mov
ljmp
rcpps
mov
clc
mov
xchg
mov
xor
test
mov
push
xlat
dec
jno
push
aaa
out
inc
jbe
or
popa
daa
add
test
push
pop
and
rcrb
ret
sahf
subl
cli
data16
jecxz
popf
push
push
push
dec
cmpl
cmc
loop
xor
pop
leave
xchg
xchg
or
orl
mov
ret
in
pop
sbb
inc
or
lds
push
int3
adc
inc
jecxz
stc
cmp
ret
mov
dec
xchg
mov
mov
jo
push
in
fdivrs
mov
adc
lret
mov
pop
pop
orb
xchg
pushf
cltd
loopne
jecxz
or
cmp
pop
mov
and
jge
sbb
mov
movsb
cmp
imull
xchg
xor
jno
rcll
inc
out
mov
sbb
es
stos
emms
pop
iret
leave
sub
lds
rorl
cmpsl
mov
lret
sbb
or
jmp
push
jle
jbe
jp
mov
je
add
cmp
push
test
cmp
xchg
in
or
xor
movsl
test
ss
arpl
push
or
scas
call
lock
mov
or
enter
sub
leave
imul
cmpl
add
push
jno
cmp
std
lock
lods
popa
xchg
aaa
pop
sub
mov
and
fwait
push
mov
pop
dec
addl
sbb
das
fcmovnbe
shr
pop
sbb
mov
js
pop
mov
mov
test
or
and
rcrb
xchg
lea
sub
fistl
pushf
sbb
pop
aad
nop
pop
shlb
lods
imul
rolb
mov
fucomip
and
cmp
leave
rcrb
sub
pop
shrl
jns
mov
sub
or
xchg
rcrb
dec
cwtl
xchg
pop
loopne
icebp
adcb
push
stos
enter
popa
scas
sub
xchg
pop
xchg
and
xor
std
jecxz
dec
mov
and
das
sarb
mov
pop
ret
shl
add
sub
mov
jbe
xchg
push
repz
outsl
fisttps
mov
adc
sbb
adc
mov
movsb
cmp
jbe,pt
push
orl
push
popa
sub
sub
pop
ss
loopne
in
adc
jge
adc
aas
add
lcall
rcll
and
xlat
mul
add
push
adc
insl
cmpsb
push
xchg
mov
data16
mov
or
ja
inc
bound
add
mov
test
jns
stos
call
jg,pn
divl
lock
fs
testl
dec
mov
sub
xchg
mov
iret
add
mov
add
aaa
aam
add
push
rcrb
incl
mov
xchg
dec
mov
lods
testl
icebp
jg
aas
unpcklps
ficoms
dec
aaa
es
cmp
pop
sub
ja
push
jnp
and
inc
in
add
dec
daa
and
add
les
cmp
ja
outsl
dec
push
jbe
imul
add
addb
push
jmp
and
sbb
roll
jo
sbbl
push
dec
jno
daa
shll
std
cmp
pop
in
ret
jbe
in
push
and
or
sti
dec
mov
cmp
cs
add
mov
dec
add
test
les
stos
sar
insl
ds
and
or
insl
lret
ret
xor
mov
xchg
sub
inc
scas
rorb
loopne
cwtl
push
gs
dec
shlb
push
ror
push
mov
outsl
mov
inc
inc
icebp
test
hlt
ret
lret
inc
add
adc
lahf
push
push
cmp
jp
pop
aam
mov
data16
fs
out
and
fcomps
add
ret
insl
testl
dec
sbb
aam
xor
mov
in
sarl
cmpsl
fsubs
cmpsb
jnp
fistpll
pop
leave
dec
jge
adc
scas
call
arpl
pop
add
mov
jne
aad
daa
dec
push
jo
dec
fiaddl
xor
and
inc
dec
insb
cmp
es
out
push
push
dec
cmpl
mov
in
pop
pop
hlt
jle
jnp
fidivs
jmp
jmp
lea
imul
push
cmp
inc
les
pop
add
out
or
mov
jns
inc
aas
mov
sub
pushf
push
xor
in
cmpsl
adc
mov
dec
jae
filds
in
mov
inc
stos
and
add
lret
ss
loopne
adc
mov
push
or
ds
aam
sbb
lods
popa
out
inc
push
fidivl
lock
sti
push
fsts
cmp
es
in
xchg
jns
and
mov
or
std
leave
cmc
scas
mov
stc
pop
mov
add
addr16
fs
cltd
xchg
out
mov
push
stos
xlat
inc
jg
or
inc
jl
push
lods
mov
out
add
mov
jno
xchg
call
inc
xchg
imul
inc
dec
mov
gs
jmp
mov
roll
jmp
jns
les
das
jg
mov
lret
sbb
cwtl
sub
pusha
cmp
nop
inc
nop
frstor
js
jl
mov
mov
cmp
mov
out
daa
mov
and
lods
shlb
movsl
aad
cmp
lret
sbb
adc
fisttps
push
into
dec
fsubrs
cs
dec
cmovns
mov
pushf
fwait
jmp
adc
lds
add
mov
or
sbb
mov
xor
int3
fwait
imul
and
add
mov
jno
dec
dec
xchg
and
out
dec
aam
or
roll
mov
stos
sti
ret
sbb
mov
subb
xchg
test
push
mov
cmp
push
nop
or
push
loopne
xor
shrb
and
mov
adc
pop
cmpb
aas
pop
inc
dec
add
les
pop
sbb
xchg
add
cmp
aas
sub
scas
outsb
mov
jmp
and
int
data16
mov
int
xor
xchg
cmp
dec
cltd
and
and
insl
aaa
cli
cmp
sbb
stos
push
sub
pushl
add
clc
shll
xor
stc
cld
imul
or
cmp
xor
mov
lods
idiv
ds
xlat
inc
cmp
xor
scas
sbb
mov
ljmp
cmc
rclb
xchg
cmpsb
in
jmp
dec
jg
jge
arpl
icebp
fadds
fdivrs
and
cmp
scas
mov
hlt
call
or
dec
jl
inc
sti
cmpl
bound
mov
lods
dec
mov
jmp
pop
cmp
mov
aam
jns
inc
jg
push
aad
mov
incl
int
dec
xchg
imul
mov
sub
pop
and
xchg
jne
xchg
gs
ret
and
pop
rolb
les
icebp
mov
pushf
inc
adc
stos
shrl
sub
stos
fwait
ds
loopne
in
lea
insb
inc
pop
mov
aaa
xor
or
fwait
gs
aas
js
mov
cltd
aas
dec
push
sbbl
in
push
or
aam
cmp
ja
dec
jnp
aas
cmp
mull
mov
xor
icebp
mov
lret
xchg
inc
and
jno
push
negl
icebp
sub
inc
dec
xchg
sub
popf
and
ret
scas
mov
test
jbe
sahf
sbb
loop
lret
aam
std
add
jp
push
inc
push
pop
mov
movl
aas
cmp
dec
mov
inc
lods
mov
pop
xchg
push
int
vpunpcklbw
es
lcall
add
mov
pop
cmp
cmc
and
xor
add
testl
add
mov
xchg
pushf
loopne
push
xor
cmpsb
lret
push
jns
mov
jp
xor
loop
push
es
adc
dec
inc
xchg
sbb
nop
xchg
imul
shlb
rol
push
sbb
push
out
hlt
adc
cmpsl
mov
mov
add
aam
or
sub
pop
or
mov
sub
inc
jb
clc
data16
std
in
jp
push
inc
fisubrs
mov
mov
sbb
jb
fsubrs
dec
cmp
fcmovbe
shrl
dec
fstpt
je
xchg
arpl
ror
sub
and
push
push
inc
adc
lods
or
and
inc
add
test
jbe
mov
fisttpl
adc
into
mov
sbb
sbbb
nop
push
rcrl
outsb
cmp
roll
cli
into
cmp
lahf
nop
jns
fs
hlt
cli
cmp
aam
imul
test
sub
loop
xchg
and
sub
lods
jl
cmp
sbb
pop
out
mov
mov
pop
cmpsl
lret
js
bound
push
mov
adcb
insl
cmp
das
leave
cld
xchg
mov
dec
nop
lds
pslld
cmpsb
push
lock
push
loopne
mov
ljmp
lock
ds
imul
nop
xchg
push
xchg
xor
sub
jl
push
mov
test
rolb
cmp
fwait
std
pop
inc
xorb
jnp
mov
add
lar
into
mov
shrl
jp
ds
pop
pop
mov
cmp
nop
in
xlat
outsl
jecxz
xor
pop
xchg
sub
sub
pop
jmp
jge
insl
adc
push
add
push
iret
mov
jo
push
and
hlt
and
out
mov
mov
out
and
and
mov
dec
insl
ss
insb
push
cld
loope
fadds
push
xchg
stc
mov
mov
mov
mov
dec
outsl
xchg
cmp
mov
cmp
mov
ret
jmp
js
push
jns
ds
mov
jg
xor
out
jmp
pop
ret
adc
fcompl
dec
paddd
fs
dec
je
in
aad
push
fisubl
mov
mov
fmuls
jge
or
adc
dec
jno
jmp
fbstp
sbb
jbe
outsl
ss
and
inc
mov
push
addr16
stos
stc
inc
cmp
clc
adc
sbb
adc
sbb
dec
popf
in
es
sub
leave
stos
roll
addr16
es
sbb
xchg
in
or
rcrb
in
cs
mov
or
dec
mov
lret
add
push
mov
cmp
mov
jecxz
dec
mov
shrl
adc
dec
push
inc
imul
xchg
push
pop
mov
lds
std
jnp
hlt
ds
pusha
or
cmp
adc
add
popf
pop
xchg
mov
lret
pop
or
sub
pop
lds
adc
push
adc
ret
dec
push
movsb
pop
mov
lods
lret
test
pop
mov
call
pop
adc
lahf
mov
dec
pop
sub
ret
xor
and
xchg
rolb
and
nop
loop
jae
cmp
sub
inc
cmp
lds
add
add
sbb
outsb
ror
addr16
popf
mov
lret
fnstenv
insb
unpcklps
insl
pop
xchg
inc
stc
test
adc
sub
lahf
or
xchg
enter
call
pop
inc
mov
jle
popa
xchg
push
loopne
stos
dec
mov
xor
mov
mov
cmpl
pop
mov
je
push
lock
iret
data16
scas
xchg
jle
test
in
cs
pop
bound
adcb
out
sbb
sub
inc
cmp
test
push
xchg
mov
sub
int3
or
stos
test
xor
push
push
in
rcll
lods
inc
rclb
fcomps
ror
sbb
in
fmul
xor
push
fadd
cmpsl
les
loopne
push
call
mov
popf
jecxz
xchg
inc
pop
mov
inc
inc
movsl
mov
aad
dec
xchg
xchg
sete
insb
cmpsb
mov
cld
sarl
sbb
push
xor
jnp,pn
pop
add
aas
mov
mov
sbb
in
aaa
sarb
rcrl
out
in
lods
mov
pop
xlat
cmpsb
les
fsubrs
ret
mov
push
cli
rcll
iret
dec
jae
enter
push
cmp
mov
lcall
mov
aas
adc
push
xor
fdivrl
dec
mov
sbb
xorl
mov
add
in
and
in
gs
fildll
addl
movsb
bound
xchg
test
dec
rorl
xchg
push
mov
lcall
js
ja
mov
dec
dec
mov
pop
mov
jg
dec
pop
mov
rorb
sub
mov
push
or
push
xor
jge
mov
sbb
inc
out
data16
xchg
and
inc
fstpl
xchg
mov
xor
sub
insb
and
outsb
ds
mov
push
dec
push
mov
cmp
repnz
clc
testb
pop
leave
ficomps
out
bnd
fwait
push
arpl
cltd
fdivs
out
xchg
addl
test
cmp
pop
movsl
xchg
adc
jns
push
mov
mov
push
xor
cmc
pop
or
imul
roll
nop
lcall
cmp
inc
pop
shr
push
and
repnz
lds
jnp
js
hlt
push
aas
rclb
xchg
inc
sahf
mov
mov
push
roll
adc
mov
outsl
test
inc
fwait
and
mov
sti
mov
icebp
scas
cmp
jo
cmpsb
pop
pop
mov
fisubl
mov
test
or
dec
mov
es
jg
jno
lds
mov
xchg
lret
pusha
mov
lea
fimull
lds
aaa
loop
cmpb
std
lcall
repnz
push
and
cmpsb
mov
xchg
push
add
ss
mov
push
sub
mov
repz
jg
xchg
jp
push
mov
addb
and
add
dec
test
sbb
ret
stc
je
aaa
int3
fwait
movsb
mov
and
cmp
mov
jle
shl
mov
cmpsb
sub
or
fs
dec
in
in
mov
dec
dec
cmp
mov
cmp
xchg
fdivs
or
pushf
xor
bound
dec
xchg
xorl
dec
mov
jl
dec
pusha
shrl
cmc
les
xchg
lods
jnp
mov
inc
outsl
sbb
sbbb
dec
inc
lcall
xor
xlat
push
pushf
gs
shll
cmpsl
push
sbb
std
lret
lds
test
outsl
stos
cli
pushf
lcall
adc
lock
jbe
and
dec
or
mov
mov
flds
ljmp
sti
aas
or
lods
push
mov
jmp
and
loopne
inc
stos
in
fwait
sbb
rclb
mov
in
push
outsb
call
adc
loopne
push
mov
or
gs
cwtl
xlat
push
jp
and
in
pop
fs
and
push
and
jg
add
sub
divl
push
xchg
inc
movsb
mov
lret
iret
jno
xor
and
cmc
xchg
push
sub
xor
out
ljmp
jnp
mov
testl
xor
andl
dec
inc
aaa
loopne
lea
fists
pop
cmpsb
xchg
and
fsts
loope
jo
popa
jns
ja
dec
add
push
cs
pushf
mov
out
fwait
xor
ljmp
pop
add
jl
dec
and
or
stos
mov
out
inc
cli
dec
pop
stc
mov
mov
xchg
sbb
andb
fstpt
pop
and
lea
int
xchg
push
cli
lds
ret
add
or
shrb
stos
out
lock
cmp
jnp
shl
fildll
cmpsb
aad
stos
dec
nop
push
stos
insl
cmc
movsl
jae
or
mov
and
sahf
pop
test
pusha
popa
push
jae
and
xchg
leave
imul
mov
addb
xchg
out
cmp
loopne
cli
sub
and
add
jae
sub
mov
dec
addr16
xlat
dec
test
mov
stos
test
leave
pop
xchg
add
adc
repz
fmull
xor
or
fistpll
jbe
je
adc
cmpsb
add
mov
push
xchg
mov
pop
pop
ja
push
sahf
pop
pop
stos
rcl
lcall
push
movsl
subb
mov
fcomip
lret
sub
xor
shrl
in
cmp
xchg
mov
cmp
mov
repz
outsb
ja
std
jae
cmpsb
xchg
fnstenv
in
xchg
sti
idivl
lods
test
lcall
clc
pushf
mov
or
in
add
mov
xchg
xchg
inc
testl
fmull
fisubrs
xchg
and
cmp
jbe
pushf
xor
xor
and
insb
pop
lods
pop
je
push
lock
out
js
loope
jmp
shll
int
mov
movsb
in
cmp
mov
mov
pop
adc
xchg
xchg
es
pushf
roll
push
xchg
xor
jnp
and
pop
icebp
sbb
cmp
add
jmp
adc
and
inc
int
loop
loopne
jae
inc
hlt
jne
or
mov
movsl
or
out
inc
insl
loop
jg
adc
fwait
jmp
lret
and
lods
inc
idivl
sub
out
lret
push
ficomps
add
es
push
cmpsl
adc
and
mov
out
fdivrs
dec
cmpsl
xor
insb
imulb
dec
pop
pop
mov
ljmp
adc
loop
xchg
leave
push
push
inc
adc
cs
mov
jmp
icebp
push
sbb
rorl
dec
cld
out
fnstenv
sbb
and
cmpsb
push
rolb
sub
and
mov
adc
inc
add
enter
aaa
push
xor
divl
inc
in
mov
scas
negb
pop
inc
out
inc
test
ret
aad
popf
mov
movsb
fldl
in
mov
movl
jmp
jo,pn
mov
sbb
adc
mov
mov
adc
jecxz
and
cmpsb
cltd
jmp
in
adc
push
sub
inc
je
and
mov
mov
insb
dec
xchg
inc
fs
xchg
shrb
pop
or
imul
sti
push
cld
mov
stc
mov
xchg
mov
call
outsb
aad
fs
mov
shll
sub
imul
stos
test
push
lahf
push
es
mov
popf
cmpsb
and
sbb
jle
xchg
arpl
jg
ficompl
sbb
pop
cwtl
incb
divb
sub
ss
add
iret
addr16
mov
fbstp
int3
outsb
or
push
mov
popa
add
cmp
inc
sbb
lret
jge
push
xor
lcall
inc
lds
pushf
jns
lret
sub
mov
mov
mov
and
and
gs
in
arpl
pop
fidivs
pop
sahf
jmp
adc
add
rcrl
stos
and
stc
push
jns
popa
lds
inc
fsubrp
fsts
je
in
pop
and
pop
aas
inc
and
dec
jp
or
fiaddl
aad
pop
adc
mov
xor
sbb
jmp
jl
in
push
cmpsb
pop
xchg
notb
adc
cmp
or
fs
push
popf
in
dec
jl
xchg
rorb
iret
aas
shll
aam
sub
fcomps
movl
xchg
xor
xchg
movsb
adc
add
push
aam
push
data16
cmpsl
lds
lods
cmp
and
mov
sar
data16
scas
sub
cmp
mov
cmpsl
xor
movsb
lcall
push
jnp
bound
pop
sbb
sbb
add
or
movsl
ds
dec
mov
xchg
repz
mov
out
jl
out
std
aam
and
movsl
lret
lds
lods
xor
hlt
das
jnp
mov
xor
enter
into
fdivl
roll
adc
jbe
fadds
jmp
fisubrs
int
sahf
jne
mov
movsb
cmp
adc
cmp
fucomi
pop
outsb
call
iret
into
push
je
dec
mov
out
nop
jp
lods
push
repnz
jns
lds
es
aam
dec
jmp
add
jmp
xor
stos
dec
adc
call
cmp
sub
inc
mov
rcll
jmp
add
and
xchg
mov
inc
bound
lds
sbb
add
pop
pop
in
fdivl
adc
cmpsl
stos
xchg
cwtl
lret
dec
cmpsb
insb
sar
sar
pop
mov
xchg
inc
out
sub
push
loope
pop
leave
jecxz
add
push
adcl
mov
xor
paddd
pop
jl
mov
sub
pop
jg
leave
mov
cmpsl
aad
add
pushl
cmp
and
jo
ds
outsw
pop
fsub
pop
mov
xchg
icebp
mov
jmp
xchg
fbld
cmp
inc
cmp
fists
popa
inc
sub
jge
or
xchg
ss
dec
add
add
sqrtps
popa
imul
mov
les
shlb
std
std
sbb
mov
je
mov
sub
test
push
pop
leave
ja
outsl
or
push
mov
xor
enter
mov
push
and
mov
ret
push
stos
pop
ret
sub
mov
lds
adc
imul
mov
stos
out
xchg
add
pop
jle
or
sti
and
mov
out
xor
leave
sub
sar
lret
cmp
dec
mov
icebp
jl
leave
outsl
sti
mov
mov
fisttps
and
pop
inc
sub
adc
shlb
or
jbe
shlb
jb
ret
mov
dec
mov
xchg
bound
mov
mov
push
xchg
jmp
icebp
cmpsl
pop
lds
mov
cmpsl
into
push
sub
push
jmp
add
sbb
xchg
cmp
in
sbb
adc
out
push
iret
test
push
sbb
mov
pop
adc
pop
push
popf
je
aad
sbb
push
in
push
ljmp
mov
push
mov
aam
push
mov
xchg
out
arpl
push
inc
shl
pop
cli
cmp
fcoml
jmp
adc
scas
dec
loopne
cwtl
push
aam
idivl
scas
in
fnstcw
cltd
sbb
jmp
loop
sub
jo
jecxz
and
xchg
mov
inc
xor
test
dec
shrb
pop
out
jb
les
xchg
pop
mov
insb
fistl
testb
cmp
in
inc
cmp
mov
shlb
cmp
orl
and
inc
lods
sub
idivl
sub
je
xor
pop
es
mov
or
sar
out
std
fstpl
es
cmc
xchg
adc
push
inc
xchg
js
movsl
ljmp
movsl
sub
push
xchg
ljmp
and
cmp
pop
xchg
shl
inc
mov
mov
mov
pop
out
inc
aad
sbb
and
pusha
adc
addb
push
das
dec
mov
imul
repz
imul
inc
fsubrs
xor
clc
mov
ret
scas
xchg
jmp
add
movsb
jge
int
lods
fmull
lahf
test
sbb
subb
scas
and
cmp
loope
xchg
xchg
jns
sub
fwait
and
inc
jbe
ja
mov
lods
clc
inc
out
sub
sub
nop
pop
pop
lods
mov
sub
leave
movsl
push
and
in
add
lret
insb
mov
or
imul
mov
pop
dec
mov
mov
gs
xchg
add
ret
and
test
outsb
mov
xchg
stos
adc
stos
aaa
ret
sbb
xchg
adc
sbb
sti
scas
sbb
sub
stos
add
jns
dec
cmp
inc
pop
gs
xchg
adc
test
push
jno
jl
lods
clc
mov
or
xor
rcr
dec
cs
mov
js
cmp
lcall
adc
adc
xor
in
add
mov
mov
out
sbb
push
jg
aaa
insb
outsb
inc
mov
das
xor
fnsave
xlat
push
sbb
jne
jno
inc
or
mov
dec
or
inc
or
scas
lds
mov
mov
push
arpl
sub
hlt
adc
cmpb
fsubrl
push
cmpsl
cmc
lret
scas
adc
mov
push
ja
cmp
xor
cmp
and
xor
aas
cli
imul
dec
or
pop
and
push
mov
imul
test
pop
jo
jg
rcrl
add
shrb
jge
mov
mov
push
xor
sub
lods
cmp
negl
inc
cwtl
xchg
insb
and
imul
sbb
into
test
cmp
int
inc
ds
pop
cwtl
xor
push
adc
pop
sbb
jns
pop
bound
dec
push
fsubr
jns
push
cli
ljmp
out
pushf
push
mov
pop
outsl
jle
ljmp
or
pop
sbb
repz
push
xchg
jb
mov
pop
inc
fimuls
jbe
jb
mov
or
mov
xchg
lahf
pop
ret
jp
xor
sahf
mov
mov
sub
shr
js
mov
and
lods
inc
fsin
lahf
dec
jmp
loop
push
fwait
inc
enter
cld
imull
stos
test
push
add
icebp
or
sub
dec
lea
push
dec
sub
mov
push
mov
pop
push
jnp
add
and
xchg
inc
xor
pop
mov
xchg
xor
adc
out
cmp
and
std
insl
rcll
xchg
das
push
call
cmp
lret
xor
imul
ljmp
pop
test
jmp
jmp
sahf
std
test
stos
add
jns
or
nop
icebp
adc
mov
loope
add
pushf
dec
dec
or
arpl
xchg
mov
push
lret
mov
cmp
sti
xor
jae
or
fsubl
xchg
out
add
orb
std
xchg
xchg
add
filds
dec
or
pop
push
aad
xchg
sbb
mov
loope
lret
push
mov
das
push
imul
hlt
dec
add
popf
mov
push
repnz
iret
dec
or
dec
loop
jae
sbb
dec
sbb
ret
pop
xchg
jb
push
pop
and
ret
ljmp
dec
inc
xlat
lock
sub
cmpsl
sub
stos
adc
repz
xor
push
cmp
jmp
and
scas
ds
inc
pushf
dec
mov
inc
xchg
lock
push
push
lret
outsb
mov
mov
sti
js
psubusb
jge
inc
push
mov
add
inc
push
dec
lcall
repz
insl
dec
cmc
cmp
sub
xor
add
push
dec
sub
dec
mov
cli
insb
push
outsb
mov
js
sbb
dec
push
lcall
sti
push
sbb
or
sub
sti
inc
dec
or
push
push
xor
enter
push
fnstcw
jae
inc
mov
pop
mov
mov
scas
cwtl
adc
pop
jmp
in
xchg
pop
cld
pushf
inc
inc
sbb
and
push
inc
pop
adc
jge
sub
lds
rcl
mov
xchg
fwait
dec
push
jbe
leave
inc
mov
pop
pop
loopne
iret
mov
inc
mov
pop
mov
cmpsl
fwait
lods
test
xchg
es
inc
mov
out
cmp
call
or
iret
sbb
movsb
test
push
pop
loop
or
inc
sarb
and
sbb
cmpsl
cwtl
ret
insl
sub
and
xor
mov
outsb
xor
xor
stc
dec
mov
mov
sahf
rorb
addr16
inc
sbb
mov
mov
pop
add
loope
addr16
popa
fcmovbe
repz
mov
cmp
shl
pop
or
popa
xchg
movsl
jne
add
pusha
xor
aaa
ljmp
mov
mov
iret
mov
sub
out
jnp
mov
mov
jnp
mov
and
iret
adc
dec
and
xchg
xor
adc
add
cld
jl
cmpsl
ret
xor
ds
lret
stos
loop
aas
popf
mov
xchg
pop
fs
dec
loope
adc
mov
adc
iret
mov
pop
mov
cmp
test
insb
push
shll
movsb
mov
push
pop
arpl
adc
iret
push
test
clc
in
push
ds
bound
mov
sbb
xor
xor
xchg
cmp
aaa
xor
data16
cmp
ficoms
mov
jecxz
lahf
inc
push
dec
test
mov
test
mov
xor
mov
clc
lods
jbe
xchg
scas
scas
popf
arpl
xor
mov
xor
mov
out
sbb
into
dec
hlt
outsb
loop
aaa
mov
mov
inc
and
push
xchg
hlt
xor
xchg
dec
mov
push
call
bound
insl
test
out
jp
push
pshufw
pusha
sbb
and
arpl
leave
mov
jbe
enter
pop
outsl
fimuls
rcll
fsubrl
cmp
mov
out
xchg
dec
adc
jecxz
sti
repnz
shll
call
sub
ret
outsb
mov
loop
aas
cld
and
addl
ljmp
cmp
mov
add
xor
add
stos
scas
outsb
aad
nop
pop
ja
insl
stos
cmp
in
pop
push
add
jb
mov
adc
mov
in
addw
stos
push
movsb
xchg
mov
jmp
dec
or
push
shll
sub
pop
sti
jmp
cli
inc
xchg
cwtl
in
pop
xchg
add
nop
sbb
dec
lret
pusha
rcr
jl
jmp
gs
push
aas
mov
dec
pop
jp
sbb
xor
add
dec
cld
cs
mov
inc
pushf
es
inc
pop
or
sub
int
aas
gs
mov
and
adc
in
push
addr16
adc
inc
andl
add
notl
inc
loopne
mov
les
repz
jae
xchg
pop
sub
push
and
pop
bound
pop
cld
mov
cmpl
fisttps
push
cmp
or
fbstp
xor
ret
push
mov
loop
icebp
je
and
push
shlb
testl
insb
lods
cli
push
xlat
inc
call
pop
inc
in
mov
fsubs
dec
dec
jno
jl
pushf
andl
gs
clc
add
mov
mov
shr
dec
insl
inc
das
mov
mov
xchg
adc
enter
jns
mov
xchg
cmovns
xchg
loope
adc
daa
sub
adc
into
ja
inc
pusha
and
sub
test
pop
ds
cmpsl
mov
loop
mov
jnp
pop
out
jge
scas
dec
rorb
add
mov
lock
jnp
sbb
xor
dec
jo
cmp
push
shrl
mov
arpl
ss
adc
nop
sarl
je
cmp
jmp
popa
popf
mov
or
or
repz
or
add
scas
cmp
jns
sahf
cmp
daa
subl
sub
sub
mov
jge
push
lods
arpl
or
cmpsb
mov
jge
jnp
lea
inc
xchg
dec
and
and
push
inc
test
push
les
cmp
ljmp
in
inc
push
arpl
cmp
shl
mov
cwtl
lods
jecxz
adc
xor
in
in
dec
sti
test
cmp
mov
movsl
jl
add
movsl
or
call
xchg
inc
mov
mov
fadd
push
xchg
cmp
mov
leave
adc
jle
stos
pushf
sub
out
mov
push
or
add
jmp
out
bound
xor
add
pop
inc
out
lret
adc
ret
or
push
std
sbb
sbb
das
pop
repz
loope
out
add
add
ret
arpl
sbb
sbb
lods
movsl
repz
movsl
and
xor
std
mov
push
mov
lea
testl
fstpt
xor
push
stos
popf
adc
xchg
inc
sbb
pop
imul
dec
pop
mov
inc
mov
mov
cmp
ret
sbb
or
xor
cmc
mov
inc
cmp
ljmp
fsubrp
aam
dec
mov
jmp
stos
bound
or
cmpsl
and
int3
jno
loope
mov
ss
jle
sbb
fstps
les
shlb
bnd
dec
dec
cmp
orb
mov
xchg
xor
cltd
test
and
cmp
xchg
neg
lods
sub
sahf
adc
mov
aas
xchg
mov
je
das
jge
mov
popa
dec
lcall
xchg
nop
das
jg
into
mov
fldl
test
mov
scas
xor
jnp
in
shl
aas
ja
xchg
data16
aaa
push
fdivr
movsl
or
mov
daa
mov
scas
sbb
or
sbb
inc
xor
xchg
pop
ret
mov
sub
xor
dec
mov
pop
jg
loopne
lods
imul
jno
cmp
movsb
stc
xor
cmpsb
iret
mov
leave
cld
push
or
add
jg
in
inc
cmp
push
and
imul
sub
dec
push
gs
adcb
push
jg
or
in
loop
jne
xorb
aas
mov
sub
pop
ret
and
jle
or
test
mov
fcom
sbb
jnp
out
push
js
js
inc
dec
daa
mov
push
jmp
outsb
sbb
push
sbb
push
nop
xor
jne
inc
mov
gs
mov
incb
pop
clc
mov
aad
xor
fistpll
and
mov
mov
cmp
addl
ds
shll
and
jle
cwtl
in
sbb
pop
ret
push
pop
nop
addl
int
idivl
call
inc
les
mov
ja
adc
sub
xchg
add
rcrl
in
repz
add
enter
and
jnp
mov
adc
sbb
ja
outsl
mov
xchg
lods
loope
cld
bound
add
pop
fcomp
movsl
jmp
sub
xlat
mov
or
fsubrs
les
in
fiaddl
jae
or
notb
dec
inc
lea
and
push
sbb
addr16
stos
filds
insb
jae
push
test
push
and
jmp
mov
test
push
mov
mov
and
testl
addr16
insl
sub
dec
mov
mov
cmp
fsubl
arpl
out
add
divb
xchg
cmp
push
mov
call
jg
or
mov
mov
arpl
inc
std
clc
mov
addr16
insb
bound
inc
pop
mov
dec
add
mov
les
xor
xchg
mov
add
push
mov
jge
inc
push
mov
adc
outsb
test
add
jo
inc
xor
inc
ror
js
and
fidivrs
cmp
add
mov
movsb
sti
mov
mov
mov
push
sbb
jl
lahf
rcll
xchg
mov
inc
add
pop
or
pop
lea
lds
sub
lea
push
mov
pop
fidivl
push
mov
sub
mov
xor
daa
hlt
inc
dec
lcall
xor
enter
and
push
push
xorl
scas
xor
push
sbb
clc
lcall
loopne
leave
sbb
popa
and
outsl
fsubr
push
ret
out
in
mov
sti
outsl
jmp
lret
push
fwait
pop
xchg
fildll
outsl
mov
mov
in
ja
mov
pop
clc
lock
dec
sub
jno
into
andl
sbb
xchg
aad
loopne
repz
sbb
into
adc
mov
cmp
in
mov
xor
test
outsb
push
jl
int3
push
jge
pushf
and
in
fs
mov
adc
jmp
loope
fsubr
nop
pushf
inc
ret
jecxz
push
shl
inc
push
aam
xchg
rorl
hlt
icebp
sbb
popl
addl
lret
pushf
in
sbb
dec
ret
push
aad
add
sti
icebp
mov
icebp
mov
sub
loopne
mov
ret
loopne
shl
xchg
ds
in
or
mulb
clc
stos
subl
and
jbe
add
or
sarl
stos
or
inc
bound
pop
inc
jne
mov
push
mov
xchg
or
sub
nop
xor
clc
dec
enter
adc
icebp
loop
fwait
xlat
inc
addr16
jg
push
vmread
insb
sub
mov
xchg
inc
fs
cmp
mov
cwtl
cmpsl
mov
mov
xor
ja
xlat
fwait
sub
xor
daa
push
scas
cmpsl
addr16
adc
rol
mov
mov
int3
fs
into
jmp
xchg
ret
push
decl
movsl
and
gs
mov
ds
rcll
cwtl
int3
fidivrs
cld
movsl
push
or
jne
adc
push
insb
sbb
pop
mov
movsl
es
out
xlat
in
sub
sbb
ret
and
outsl
mov
hlt
mov
inc
outsl
mov
arpl
jmp
xchg
jmp
jecxz
mov
mov
mov
test
xchg
jne
in
jno
jp
jo
pushf
inc
and
loop
xchg
and
cmpsl
mov
fcomps
data16
data16
fisubrs
jne
fidivl
dec
repnz
lods
pop
fdiv
push
dec
into
lods
mov
or
sbb
ret
inc
repz
ret
sbb
adc
mov
sar
inc
mov
movsb
out
mov
stos
or
lods
or
push
add
pop
cmpsb
mov
aas
hlt
cmp
in
inc
fmull
fsubl
push
addl
test
iret
cmp
pop
jg
mov
sbb
sbb
inc
imul
and
add
push
test
mov
push
pop
pop
mov
jl
push
testl
and
xor
mov
fisubs
aad
dec
mov
cmp
fidivs
cmpb
cltd
add
sub
xchg
jne
pusha
jmp
test
mov
add
sbb
neg
lds
int
pop
jo
mov
fcompl
push
xchg
aaa
addl
jns
popa
clc
pop
in
mov
arpl
sbb
les
in
mov
xor
aaa
mov
lods
ret
andl
mov
push
stos
in
cmp
add
out
jp
ret
sbb
pop
rcrl
inc
dec
jns
cli
nop
cmpsl
push
xchg
cmp
push
cltd
popa
pop
clc
dec
hlt
jp
sub
jmp
call
jecxz
xchg
mov
std
pop
rclb
imul
lock
shll
fisubs
add
push
cmp
push
popf
cs
jo
loopne
das
lret
or
push
pop
negl
push
shll
call
jo
scas
out
lock
nop
scas
inc
cltd
in
fsubp
jp
mov
popf
cmp
std
pop
cmpsl
gs
scas
xchg
sbb
inc
jo
in
cmpsl
mov
jb
les
xor
jmp
mov
test
jg
mov
imul
aaa
lods
les
cmp
wrmsr
and
lods
popa
pop
add
mov
push
cmc
cmp
or
mov
lret
mov
insl
adc
pop
adc
aaa
pop
mov
cmp
sub
dec
mov
pusha
sub
hlt
or
mov
cmp
inc
repz
addr16
jnp
sarl
adc
cmpsl
stos
loope
cmp
adc
mov
mov
pop
sub
pop
lahf
scas
xchg
das
scas
or
pop
insl
xchg
jle
faddp
inc
jle
shl
inc
test
xchg
xorb
arpl
push
add
cwtl
filds
xchg
aas
iret
loop
sub
std
addr16
push
lods
cmp
mov
push
and
xchg
jnp
fsubp
jmp
jecxz
xor
and
adc
sti
mov
cmpb
in
lret
test
jg
in
fbld
loopne
push
test
mov
inc
xchg
adc
cmp
jg
adc
test
movsl
clc
test
fwait
jo
popf
mov
or
sbb
inc
cmp
lcall
fldcw
pushl
imul
test
adc
dec
js
sbb
mov
cltd
pop
movsl
cmpsl
sbb
or
and
js
call
fs
xchg
pop
movsl
iret
and
xchg
out
into
or
lret
jno
mov
fcmovnb
mov
call
add
mov
cmp
test
sub
mov
add
cmc
imul
or
lods
loopne
outsb
xchg
mov
add
push
jnp
xor
push
cmp
hlt
int3
loope
or
xor
mov
in
fidivs
mov
test
scas
lret
adc
xor
outsl
loopne
dec
xchg
jne
dec
addr16
popa
xchg
stc
sbb
xchg
lahf
rolb
and
sbb
decl
adc
mov
or
repnz
jne
test
or
scas
fdivrp
sub
bound
repz
jp
call
out
cli
enter
and
stc
jge
adc
inc
mov
or
call
scas
mov
and
ret
pop
mov
cmpsl
ret
or
push
add
fiaddl
cwtl
fsubs
mov
pop
stc
ret
dec
daa
push
push
aad
xor
iret
mov
jmp
adc
inc
movsb
lahf
pop
push
aas
outsl
ja
xchg
pop
out
stos
out
idivl
pop
push
sti
jmp
cwtl
adc
and
xor
push
cwtl
lcall
mov
daa
add
adc
jno
sbb
cmp
pop
cli
or
adc
outsl
andl
or
stos
adc
and
mov
cwtl
test
push
xchg
mov
ret
pop
pop
bound
mov
xor
fs
and
mov
jo
adc
mov
push
jge
popf
outsl
imul
jle
add
rcl
std
inc
shl
cmpsb
sub
mov
jnp
mov
fnsave
pop
out
out
add
sarl
xchg
mov
shll
js
mov
cltd
jbe
sbb
pop
jb
or
mov
cs
sub
mov
sbb
pop
mov
mov
test
inc
inc
mov
leave
pop
sbb
sub
jnp
push
aaa
mov
lea
xorl
int3
gs
call
lods
orl
mov
inc
dec
clc
mov
jp
repnz
xor
das
movsl
dec
inc
es
pusha
nop
mov
sti
inc
jbe
cmpl
jns
mov
sub
push
nop
pop
cwtl
mov
push
inc
jne
push
into
test
sti
push
xor
sbb
pushf
adc
push
lea
inc
in
mov
rolb
fcmovbe
jbe
or
mov
cmc
lret
mov
and
dec
xchg
lods
out
inc
aad
sbb
inc
mov
pop
add
scas
cmp
inc
mov
sti
cmp
adc
pop
outsb
inc
mov
ret
test
push
dec
or
push
icebp
and
mov
sub
add
xchg
sub
xchg
pop
cmp
repnz
xchg
jl
rorl
mov
repz
cmp
imul
sub
mov
jnp
out
ljmp
lret
movsl
push
adc
mov
cmp
mov
sbbl
sarl
popf
in
xchg
pop
enter
lret
frstpm(287
inc
lds
test
lea
push
xchg
add
push
shr
or
push
mov
xchg
aad
jno
dec
pop
stos
dec
ret
mov
stos
lods
enter
in
sub
ljmp
fs
or
faddl
mov
jp
pop
add
pminub
das
popa
cmpsb
out
mov
add
dec
ljmp
push
jmp
test
int
jb
jne
test
sbb
sti
les
pop
xchg
addr16
cmp
cmpsl
adc
test
fdivs
mov
hlt
jmp
jmp
and
repz
popf
and
adc
add
mov
and
popa
mov
aam
ljmp
xor
sub
jg
or
mulb
dec
clc
push
mov
fisttps
sub
jb
shrb
pop
mov
jl
fcom
aaa
loop
pop
xor
cmp
je
push
push
loope
leave
stc
addl
arpl
mov
xchg
out
scas
add
sub
hlt
ja
das
scas
add
push
xchg
pop
jns
lds
push
mov
add
aam
xor
pop
je
fcoml
dec
xor
pop
aam
jp
mov
pop
cmpsb
mov
xchg
sub
shr
push
dec
icebp
push
es
loop
xchg
xchg
data16
xor
and
enter
lcall
insb
fs
inc
sar
add
push
and
and
mov
fsts
leave
lret
xlat
in
inc
scas
fstl
xchg
test
cmp
jmp
and
push
ret
int
inc
into
xlat
push
sub
call
xchg
pop
fdivs
sbb
jg
push
fisttps
sub
pop
push
ret
cld
bound
push
data16
bound
push
arpl
jle
std
xchg
int
or
pop
mov
xchg
xchg
lret
das
pop
call
xor
aam
mov
lret
sti
mov
fldl
mov
movsb
mov
sbbl
cmpsb
mov
push
xchg
mull
orl
cmp
lret
pop
mov
shrb
daa
call
sar
imul
sub
jl
subb
mov
pop
mov
mov
movsb
mov
lea
and
loope
lahf
jp
mov
pop
dec
adc
roll
es
mov
in
adc
inc
fcmovbe
inc
jecxz
sub
adc
pop
sbb
stos
cmpsl
cltd
push
mov
push
out
fcmovnu
ljmp
push
jae
mov
data16
or
mov
imul
inc
ljmp
jno
pop
adcb
jne
xor
push
in
orb
sub
mov
sbb
sub
insl
lds
shrb
xchg
imul
xchg
cmovne
outsl
cld
out
or
add
daa
xchg
lcall
mov
insb
cltd
inc
sbb
jno
stos
jle
jle
and
es
pop
push
les
cwtl
pop
pushf
mov
aad
lods
sbb
fisubrs
pop
xlat
sub
jo
add
test
jno
inc
lds
mov
ss
es
das
sti
pop
sbb
xchg
js
lcall
scas
jl
mov
movsl
pop
jmp
and
pop
loope
inc
inc
scas
or
imul
jl
cmp
jle
test
push
cmp
xor
stos
test
cwtl
add
fisubs
les
icebp
dec
ds
icebp
ljmp
in
pop
test
adc
leave
pushf
xchg
inc
stos
jns
lret
mov
or
xchg
xchg
fsub
pop
pop
add
dec
pop
add
leave
sub
inc
and
ret
out
es
sbb
xchg
sbb
iret
repz
rcll
xor
movsb
daa
in
fwait
sbb
imul
popf
iret
pop
or
push
pop
test
call
sbb
leave
stos
jo
mov
andl
data16
sub
dec
gs
sbb
lods
sbb
rolb
lret
push
and
cmp
dec
sbb
cmp
or
add
xchg
sbb
push
push
pop
imul
mov
xlat
in
push
insb
leave
xchg
ret
daa
push
add
leave
in
jle
leave
nop
adc
inc
fneni(8087
dec
xchg
add
repnz
loope
or
fdivrs
outsb
sahf
repnz
scas
sarl
mov
mov
andnps
pop
imul
mov
adc
cmp
outsl
leave
test
add
sbb
aad
cmp
outsb
cwtl
sti
loope
hlt
inc
ds
sti
test
pop
dec
sbb
popf
mov
add
popa
mov
xor
fwait
insl
or
and
test
sub
fs
pop
dec
movsl
mov
add
cmpsb
into
push
fst
and
aam
sub
push
leave
scas
fs
push
mov
shrl
adc
cmp
nop
add
mov
adcl
jl
add
stos
push
pop
lods
xchg
lds
ret
pusha
sbb
out
dec
out
lcall
sub
movsl
outsl
nopl
outsl
jne
cmp
cmp
ret
sub
data16
adc
jnp
int
adc
pop
xlat
xchg
jmp
pop
xor
movsl
call
outsl
stos
daa
xchg
xor
xor
in
outsl
ja
cmp
pop
pop
popa
xchg
mov
sbb
mov
fisubrl
test
or
into
xor
cmp
outsb
inc
mov
ss
jns
jnp
jl
es
xchg
cmc
bound
jmp
cmp
xor
cmc
jbe
jne
in
int
mov
xor
lds
inc
jmp
push
and
aad
pop
nop
ss
aas
jae
test
cmp
adc
scas
sbbl
inc
sbb
sub
cli
sub
mov
mov
rcrl
into
pop
sbb
sbb
add
sbb
in
adc
xchg
das
mov
neg
mov
notb
mov
out
pop
mov
push
mov
lock
ret
jne
add
mov
dec
notb
in
sti
push
or
dec
popf
cmc
ficoms
fwait
notb
bound
sub
into
icebp
cltd
add
sarb
mov
push
dec
iret
or
cwtl
push
jge
pop
popa
jecxz
or
xlat
sbb
dec
popa
add
mov
xor
mov
push
cmp
lods
pushf
push
popa
lock
shlb
fwait
mov
jle
push
jecxz
int3
inc
sub
sbb
pop
insb
jp
jmp
or
addl
aam
daa
data16
repnz
stos
cmp
enter
in
ja
test
or
mov
cmp
push
push
xor
cli
das
fcoms
sbb
inc
ret
add
out
push
cmp
and
pusha
lods
stc
out
pop
je
adc
in
mov
mov
ljmp
sub
enter
jmp
dec
mov
aaa
sub
xor
xlat
add
out
push
xchg
mov
mov
push
arpl
icebp
stos
sub
cwtl
mov
add
outsl
xor
mov
push
imul
scas
and
mov
outsl
das
lea
outsl
push
fidivrl
lods
std
in
push
push
jnp
pop
xchg
cmp
lahf
mov
and
dec
and
or
mov
lcall
ficoml
repz
rclb
cs
packssdw
pop
mov
testb
add
mov
pop
ds
adcb
adc
xor
mov
pop
aad
dec
cmpsb
xor
into
lock
mov
dec
icebp
aas
ds
push
ljmp
je
pmaxsw
addl
sahf
lock
inc
mov
jge
stc
dec
out
pop
mov
outsl
mov
inc
fstpl
push
add
adc
ss
adc
js
divb
mov
sub
pop
jns
or
xchg
dec
imul
je
push
jb
lock
dec
mov
aam
shlb
in
mov
clc
dec
mov
mov
sbb
mov
sarb
mov
xor
jo
fldenv
adc
in
sahf
sbbb
fisttps
pop
scas
arpl
xor
inc
jmp
push
lds
mov
lea
aad
dec
xchg
add
in
mov
xchg
inc
sub
and
dec
xchg
ror
popf
and
cmp
mov
movsl
les
sub
lahf
xchg
aam
mov
insb
imul
insl
movsl
rcl
mov
xchg
cwtd
pop
jo
jae
cmp
pusha
jmp
outsl
iret
adc
inc
push
or
push
les
jbe
sub
cmpsl
cmp
dec
popf
mov
scas
xor
sahf
arpl
and
inc
cld
adc
fsub
mov
imul
ret
rol
inc
xor
in
inc
out
push
outsb
into
mov
pop
add
add
test
daa
inc
fnstcw
and
push
stc
into
cltd
aad
leave
lret
cmp
mov
xlat
inc
enter
rcrl
arpl
and
mov
cli
neg
dec
or
imul
jne
cmc
or
sbb
mov
xchg
dec
sbb
popf
xor
lock
cltd
fucompp
imul
in
into
or
inc
pop
add
test
jae
mov
fbld
pop
das
pop
xlat
inc
inc
popf
sbb
mov
aad
adc
outsl
sbb
pop
out
int3
cwtl
cmp
add
add
jne
lea
and
cltd
push
insb
sti
pop
jae
sbb
and
leave
mov
test
orb
shll
stc
mov
popf
shrb
or
add
mov
shr
aaa
mov
lret
cmp
inc
fsts
mov
add
xchg
push
mov
inc
ret
enter
into
pop
or
adc
inc
out
ss
cmp
daa
mov
mov
pop
inc
out
insl
test
mov
nop
insl
mov
jge
addr16
jmp
ror
inc
imul
shlb
out
in
mov
test
push
pop
sub
test
inc
dec
xchg
das
jno
jp
rcrl
aad
and
xchg
xchg
dec
cmc
stc
cmpsb
dec
xor
shrb
in
shlb
or
jae
fidivrl
inc
sub
sub
pop
adc
subl
stc
sub
mov
cmpsb
outsl
xchg
scas
aam
lods
dec
mov
or
dec
xor
mov
add
fmull
les
test
aam
loop
daa
imul
fnstcw
inc
xor
sbb
iret
std
mov
out
jbe
fnstenv
shlb
cwtl
add
cmp
in
stos
nop
xchg
call
enter
aaa
inc
cmpps
or
pop
cld
cmpsl
jae
std
mov
xchg
fs
xchg
lock
cld
cld
jmp
lahf
jp
cmp
pushf
fs
mov
sub
fsubrp
js
mov
lock
sub
mov
pop
adcl
clc
sbb
sbb
xchg
std
mov
cltd
cmp
fcomp
mov
and
adc
daa
sbb
dec
cltd
jo
xchg
xor
push
and
popf
data16
rorb
xchg
push
jns
loop
xchg
xchg
call
mov
mov
aad
xchg
jle
mov
xor
mov
dec
loop
mov
cmpsl
adc
dec
xor
aad
jp
mov
sbb
push
mov
orb
mov
loopne
aas
dec
loope
cli
std
rcll
aas
pusha
xor
inc
shl
lock
and
orl
cmp
push
push
and
pop
and
ret
scas
pushl
jno
pop
cwtl
jbe
sub
dec
xor
cmp
ljmp
ss
xchg
push
mov
in
nop
fsts
adc
out
cmp
pusha
dec
fst
lods
scas
je
mov
and
outsb
mov
fnsave
out
mov
popf
xor
jo
inc
sbb
into
sub
add
loop
fdivrs
dec
incb
lcall
add
ret
int
leave
test
mov
pop
and
push
test
sti
mov
cmp
cmpsl
fisubrl
das
in
sub
pop
and
scas
mov
push
dec
mov
xchg
jns
adc
cmpsl
inc
inc
or
mov
lods
aaa
mov
push
pop
push
inc
shl
popa
in
fsubrp
mov
jmp
iret
stos
inc
out
notl
andl
loopne
ret
lods
movsb
mov
test
pop
dec
arpl
push
mov
cmp
fs
inc
movb
xchg
jns
mov
shll
mov
call
fwait
mov
into
mov
xchg
popa
popf
aad
ret
adc
dec
cmp
jmp
cmpsl
push
aaa
mov
scas
pop
add
xor
enter
adc
dec
xchg
mov
lods
leave
push
testb
dec
dec
jb
enter
xchg
rolb
mov
das
pusha
in
jo
dec
bound
push
das
lods
pop
test
fcompl
pop
ret
sti
out
push
xchg
imul
jg
xchg
leave
mov
rorl
rcll
arpl
stos
add
insb
insb
dec
cmp
xchg
xchg
mov
das
addr16
negl
xlat
inc
xor
out
xor
jno
and
mov
inc
pusha
stc
mov
leave
ljmp
imul
fnsave
xchg
push
je
loope
int3
cmpsb
scas
inc
pushf
out
pushf
enter
in
out
inc
aam
dec
jnp
das
pusha
scas
xchg
mov
lock
out
pop
push
arpl
sbb
aad
mov
and
lock
push
mov
rcr
in
or
push
cli
pop
dec
cld
imul
mov
lret
dec
fidivs
fildll
enter
mov
cmpsl
fdivrl
and
push
jbe
dec
rorb
cmpsb
hlt
xor
sbb
leave
outsl
xchg
js
movl
stc
xor
fyl2x
inc
and
adc
push
sub
jb
sub
cli
mov
bound
movsl
decb
pop
dec
ret
dec
imul
sti
add
js
jb
mov
sbb
cld
leave
sub
lret
push
or
lahf
mov
aad
mov
xchg
lds
mov
pop
pop
sbb
icebp
jo
xor
test
push
fidivl
jl
rorb
lret
rcrb
jbe
xor
dec
xchg
jbe
daa
flds
leave
hlt
retw
inc
add
add
cwtl
sub
jbe,pt
mov
push
shrb
jp
mov
aas
pop
mov
test
inc
cmpb
xor
out
data16
fldt
jb
pop
push
shrb
pop
pop
lret
cmp
shrl
mov
test
mov
sbb
gs
lock
lret
xlat
cs
pop
push
in
jns
push
xor
lods
out
iret
inc
movl
dec
test
iret
clc
push
stos
jb
ljmp
mov
addr16
sbb
jnp
jmp
stc
mov
dec
mov
adc
lahf
inc
xchg
femms
xchg
cmpsl
and
pushl
in
cmp
jl
add
pop
adc
mov
inc
xchg
xor
outsl
xor
dec
fistl
lock
push
cmp
or
push
or
lcall
sub
push
ljmp
in
and
lret
loope
jg
jp
mov
stos
fmul
sbb
mov
sbb
enter
cltd
popf
mov
dec
dec
gs
cmp
pop
sub
repz
xor
adc
push
ljmp
fmul
movsb
nop
je
xor
shlb
xchg
and
in
mov
rorl
scas
jnp
jbe
mov
mov
test
dec
dec
or
inc
insl
push
push
sti
xor
outsl
cmc
jnp
daa
imull
pop
jnp
adc
xor
shrl
jmp
add
xchg
hlt
sbb
fwait
jo
cmp
aam
jbe
xchg
lds
fwait
push
fstl
xchg
out
lret
adc
lcall
in
or
mov
daa
popa
and
imul
imul
lods
ror
adc
xchg
jge
xchg
fsubl
push
aad
ss
mov
fisubrs
cli
fidivrl
or
pop
mov
addl
push
arpl
and
into
repz
xor
jo
sub
push
movsl
rcll
lock
stos
or
out
fmuls
dec
cli
loop
dec
negl
cmp
mov
sbb
loopne
scas
cmpl
test
pop
out
movsb
dec
loope
in
add
ficoml
nop
int3
pop
outsl
decb
add
movsl
or
xchg
cltd
pusha
std
sti
fdivrs
ljmp
sub
jne
fs
in
cmpsb
aad
inc
xchg
and
icebp
mov
enter
mov
in
push
mov
push
adc
cmp
mov
mov
gs
out
mov
repz
rolb
jns
inc
fnsave
int3
addr16
mov
mov
xor
inc
sbb
push
pop
or
mov
dec
mov
or
mov
pusha
pop
cmp
adc
in
xor
mov
jg
inc
sarb
sbb
cmpl
mov
mov
mov
xorl
rcl
in
cld
out
int
dec
icebp
xorb
ja,pt
or
pop
jle
std
pop
jb
leave
mov
clc
fdivl
jae
inc
aad
mov
stc
adc
push
jo
ret
mov
nop
lock
rcrb
mov
inc
dec
movsb
push
xor
ja
sub
shrl
test
mov
popa
int3
mov
lds
push
fwait
mov
push
sbb
rcl
inc
inc
test
addr16
dec
xor
insb
inc
dec
push
and
stos
int
pop
mov
dec
cmc
fnstenv
data16
push
loopne
push
sub
ret
iret
push
inc
dec
and
cwtl
mov
inc
lods
adc
adc
sbb
es
js
dec
fistps
aam
adc
inc
and
mov
push
bound
in
sub
xchg
cmpsl
pop
ror
test
pop
xor
movsb
sbb
ljmp
lods
sub
ret
cmp
or
mov
pop
shll
mov
pop
or
pop
dec
jge
loop
xchg
subl
jbe
std
mov
js
aas
mov
shlb
loope
mov
and
test
incl
mov
sahf
hlt
mov
inc
out
mov
lea
cltd
inc
fucom
aam
std
in
movsb
push
sub
cwtl
aas
sub
repnz
xchg
mov
pop
or
stos
aam
inc
ret
lods
mov
xor
sti
loopne
stos
xchg
dec
pop
cmp
loope
outsb
pop
push
icebp
add
mov
mov
sahf
pop
and
out
cmp
and
pop
fisttpll
js
pushl
and
sti
or
sub
mov
mov
pop
int
xchg
cmp
mov
fstps
jb
cmp
lea
dec
ljmp
xor
outsb
inc
popf
adc
jecxz
mov
inc
je
sbb
lret
cmp
pop
xor
enter
adc
adc
notl
cmp
cmp
dec
add
jnp
in
push
mov
pop
insb
lods
fisubl
sub
add
xor
mov
or
mov
adc
lret
iret
jg
iret
fmuls
cmpsl
add
mov
mov
jno
push
mov
push
lods
mov
xor
mov
test
add
mov
rcrl
mov
xor
mul
jmp
les
ja
add
int
pop
mov
fimuls
or
lock
inc
hlt
mov
mov
mov
pop
sahf
push
daa
aas
je
lret
out
ds
repz
xchg
call
pop
pop
push
pop
push
mov
popa
mov
dec
mov
sti
pop
repz
xchg
pop
and
jns
iret
xchg
xlat
movsb
add
xchg
adc
icebp
lahf
std
stos
enter
mov
out
fs
imul
mov
rdpmc
add
cmp
pop
es
pop
mov
push
divb
ljmp
cltd
ficoml
int3
pop
stc
fldenv
rcrb
lods
or
into
mov
and
ss
mov
imul
ret
sbb
and
shr
xor
daa
push
test
add
xchg
inc
ss
dec
jb
rclb
test
jecxz
adcb
dec
aaa
pop
mov
mov
in
xlat
in
sar
mov
insb
mov
sbb
and
orb
in
xor
and
inc
fdivrl
cmp
dec
or
aam
inc
xlat
or
jne
inc
ja
dec
cli
adc
dec
lods
push
dec
xchg
push
pop
cs
cmpsl
out
test
dec
pop
push
mov
push
in
pop
jle
out
insb
and
lds
inc
call
mov
hlt
sub
lods
push
cld
mov
dec
push
subl
cmp
xor
call
push
fwait
ds
loopne
cmpsb
and
or
aaa
sub
ret
or
cmp
stos
fs
divb
adc
ficoml
je
add
cld
push
dec
fldt
and
adc
sub
xlat
mov
pop
sub
les
jns
ja
fnstsw
cmp
in
aas
sbb
ret
or
data16
jmp
ret
lea
adc
jecxz
mov
add
out
jno
jp
mov
push
dec
mov
mov
add
movb
loope
ss
xchg
sub
cmp
mov
in
mov
pop
cld
or
mov
and
mov
cmp
lods
movsl
popa
push
pop
dec
orl
sbb
imul
nop
in
push
in
mov
nop
int
fcmove
pop
dec
inc
mov
mov
popa
xor
in
lods
inc
lret
dec
bound
pop
adc
cmp
sub
xor
or
roll
imul
jecxz
cmc
fdivl
aas
sahf
cmp
inc
inc
and
test
xchg
stc
jecxz
sub
pusha
jae
add
ret
out
lahf
subb
arpl
dec
insl
clc
sub
dec
lcall
sbb
mov
xchg
cmc
jp
leave
les
notb
sub
pop
xchg
fstpt
or
imul
imul
std
pop
call
adc
inc
test
testl
ljmp
mov
out
jl
test
adcb
out
sub
lret
movsb
adc
adc
inc
iret
shlb
data16
mov
jo
cld
add
rcrl
int3
nop
cwtl
das
shr
or
and
add
movsl
xchg
adc
xchg
aam
cmp
jmp
imul
mov
cmp
out
out
es
icebp
fmulp
cmp
adc
xorb
popa
aaa
ja
lret
jl
dec
je
xor
pop
sbbb
adc
sub
cmp
cmp
jo
shll
out
mov
dec
mov
add
xchg
shr
mov
imulb
imul
lock
sub
sar
xchg
lods
repz
sub
pop
mov
add
or
push
into
push
or
cli
ret
jge
std
lea
call
sub
dec
mov
xchg
lcall
push
pushl
and
mov
pop
data16
adc
push
push
mov
in
in
sbb
xchg
cltd
or
insb
and
imul
ss
gs
test
test
sbb
push
jp
dec
add
cmp
and
lock
dec
ljmp
cmc
xchg
test
addr16
test
xchg
sti
push
sub
ljmp
and
rorb
inc
jmp
jbe
jl
jnp
dec
movsl
outsl
movsl
dec
or
scas
mov
addr16
sti
addb
mov
dec
leave
jg
shrb
or
cld
lock
and
cmpsb
int
add
ljmp
call
push
mov
dec
ror
sbb
sti
mov
scas
mov
cld
call
dec
outsb
adc
xchg
lods
sahf
repnz
fcmovnb
jns
add
cmc
add
dec
inc
movsb
sub
and
push
mov
out
mov
insb
mov
or
outsl
and
jno
aas
or
pop
pop
and
xlat
pop
std
xchg
outsl
sbb
xchg
mov
aas
bound
inc
aad
sbb
jl
fistl
clc
mov
or
pop
xchg
mov
inc
sub
rclb
outsb
mov
mov
pop
lea
adc
ret
lret
mov
push
push
ret
xchg
cmp
xchg
daa
and
mov
inc
rol
int
and
adc
rcrl
xor
xchg
sbb
ret
jns
xor
dec
repz
je
mov
adc
pop
mulb
dec
mov
push
jns
cmp
mov
jb
jo
and
mov
dec
aad
repz
pop
daa
push
cltd
xor
lret
scas
jbe
sbb
int3
int3
lret
in
int3
mov
jnp
mov
adc
lcall
imul
jb
mov
mov
pop
jmp
stos
xor
lods
push
fwait
and
ss
push
xlat
dec
jb
push
fucompp
in
iret
imul
jl
mov
lods
clc
jns
xor
mov
call
and
cmp
jno
mov
jne
xchg
lcall
add
std
xchg
mov
fs
movsl
icebp
cltd
scas
pop
mov
cltd
sub
test
les
and
jne
xor
decl
push
mov
pushf
pop
in
outsl
inc
aas
jmp
sahf
loope
mov
stos
mov
pop
mov
rorl
mov
xchg
mov
addr16
lret
jns
inc
add
push
sub
das
add
sub
adc
add
dec
or
inc
scas
cmc
daa
lret
sbb
push
ss
or
jecxz
and
insl
insb
fisubrl
inc
outsb
sbbl
adc
es
out
and
fstpt
xor
stc
adc
test
jb
in
pop
pop
jge
scas
sbb
sbb
cltd
adc
movsb
mov
test
daa
xor
imul
cmpsl
sar
xchg
xchg
mov
dec
mov
pusha
mov
mov
adc
sbb
les
jge
aaa
push
mov
jbe
or
and
or
ljmp
jle
push
inc
adc
aam
and
aaa
mov
fisttps
jns
lahf
dec
push
push
cmc
push
fucomp
repnz
mov
pop
push
nop
sbb
mov
or
dec
scas
outsl
popa
shr
leave
jae
ret
jns
aas
gs
jl
inc
bound
sahf
push
push
mov
in
movsb
testb
js
cmp
adc
or
sub
lods
add
sarb
ret
adc
pop
lds
cs
daa
std
jae
insb
jne
es
jecxz
rol
clc
test
test
or
jbe
mov
add
mov
adc
fisubrs
mov
lcall
pushf
ja
lea
scas
inc
pop
sub
sbb
aad
add
movsl
in
leave
addr16
mov
or
and
repnz
inc
je
push
and
test
pop
lahf
js
cwtl
jmp
add
nop
jecxz
pop
sbb
cmp
dec
out
in
mov
scas
cmpb
pop
add
lods
loope
sbb
shl
mov
das
mov
clc
je
ds
nop
add
cmp
pop
xchg
mov
les
ret
xchg
aaa
std
int3
sbb
cmp
out
add
dec
sbb
mov
test
enter
in
dec
jg
mov
jmp
jl
sub
pop
hlt
imul
insl
sub
loope
push
push
fldcw
dec
sbb
xor
inc
cmp
ljmp
add
push
jge
fists
loop
leave
inc
mov
push
mov
loope
jmp
and
shlb
adc
fwait
sub
or
dec
jae
add
lea
sub
push
ja
pop
into
outsl
inc
jge
and
pop
cmp
mov
mov
xor
out
mov
xor
inc
repnz
stc
mov
cmp
jne
sti
mov
add
and
pusha
pushf
jge
xor
and
push
sbb
ljmp
cmp
xor
lcall
lahf
lcall
and
clc
sbb
cltd
push
mov
sbb
pop
ljmp
test
sub
rclb
pop
movsb
stos
mov
adc
or
pop
daa
xchg
push
fisubrs
jl
mov
sahf
push
loopne
loop
push
and
and
les
lahf
push
mov
xor
xchg
add
mov
xchg
push
bound
sti
stos
sub
mov
push
and
dec
cmpsb
das
lea
push
lcall
pushf
dec
or
push
rcr
cltd
jno
xchg
xchg
fs
int
sub
push
sub
popa
aaa
mov
mov
xchg
mov
mov
xor
mov
cmpsl
lds
sbb
cmp
test
pushf
sub
xchg
in
mov
xchg
sub
popa
mov
aam
fistpl
mov
push
fsub
xchg
sbb
daa
int3
mov
out
fs
push
sti
xchg
inc
push
mov
sub
test
cs
cwtl
out
pop
cli
sarb
dec
and
ja
cmp
xor
xchg
cmovae
ljmp
and
std
xor
or
insl
pop
adc
addr16
mov
sahf
pop
mov
test
mov
and
or
mov
insl
mov
inc
sbb
add
inc
pop
stos
or
push
jecxz
jo
push
das
scas
sti
js
push
push
inc
andb
aad
fidivl
pop
pop
mov
sub
sbb
pop
cltd
pop
outsl
mov
cmp
pop
xchg
dec
pop
pop
push
imul
mov
or
popa
jge
jbe
cli
inc
shr
js
or
mov
mov
mov
xchg
fcoms
mov
dec
pusha
repz
rcrl
hlt
fstpt
testl
mov
mov
pop
mov
adc
mov
dec
icebp
inc
clc
nop
push
mov
incl
pop
add
outsl
push
jbe
mov
add
jmp
mov
imul
pop
leave
xor
fbld
mov
inc
cs
outsb
sbb
and
mov
sub
pop
and
mov
add
mov
cmp
mov
loopne
sti
xchg
jg
aam
inc
xor
cmp
or
mov
mov
mov
mulb
dec
and
popa
rorl
mov
sub
jle
test
sbb
sbb
cmp
hlt
wrmsr
xchg
inc
mov
in
mov
dec
mov
bound
sbb
sbb
mov
out
ds
push
sti
sub
sub
jge
jns
sub
lea
inc
pop
bnd
mov
sub
in
fsubrl
xor
jo
rorb
pop
sub
sahf
mov
jle
jl
out
or
ret
sbb
rol
in
add
loope
and
push
aad
push
mov
xorb
push
loop
iret
adc
inc
push
xchg
fstl
hlt
pop
gs
adc
popf
mov
cmp
and
movsl
daa
pop
mov
sbb
cs
jl
or
mov
sbb
jecxz
jbe
out
orb
enter
xor
clc
stos
sbb
movsb
jb
loopne
insl
and
lret
xchg
shrl
xor
int3
outsb
clc
jb
mov
lret
gs
fs
and
enter
pusha
nop
push
mov
mov
out
mov
in
gs
pop
rcl
cmpsb
push
daa
inc
scas
in
sub
lahf
stc
flds
adc
sahf
imul
rcl
xor
outsl
ret
sarl
aam
push
jge
popf
xor
sti
jle
adc
out
mov
add
hlt
cmpsl
jl
aad
cli
outsl
mov
push
cli
xor
call
aam
lret
arpl
push
push
addl
mov
sti
inc
xor
aad
icebp
notl
mov
adc
movsl
pop
incb
lcall
lods
gs
pop
popf
sub
cmpsb
and
mov
jge
idiv
shl
mov
je
jecxz
lcall
jnp
fcoms
outsb
cmp
cmpsb
xor
daa
pop
int3
int3
xor
xor
pushf
and
test
in
adc
leave
jb
mov
adc
xchg
sub
jne
fiaddl
loopne
mov
mov
or
repnz
call
sub
nop
mov
pusha
test
xor
pop
addr16
or
or
lahf
dec
mov
mov
push
jge
fbstp
out
xor
movsbl
flds
sub
mov
cs
pop
lock
mov
and
mov
mov
aad
sub
xchg
fldt
cli
sahf
cmp
jb
or
cmp
inc
mov
xor
cmpsl
push
mov
adc
jne
aaa
cmp
sub
mov
cmp
ret
aam
ficompl
xor
pop
push
sahf
cmpl
arpl
flds
and
dec
les
in
adc
fimull
mov
jle
jl
ret
scas
dec
movl
mov
dec
fnsave
pop
nop
push
pop
cmp
push
ljmp
lret
ficoml
repnz
in
ret
lds
popf
add
or
xor
mov
inc
sbb
mov
loop
loop
xchg
insl
sahf
and
hlt
fisttpl
xchg
ret
lods
movsl
mov
xor
cmpl
ds
aam
sub
pop
shr
pop
dec
gs
mov
aas
scas
sbb
mov
xor
xchg
sub
cmpsb
adc
mov
mov
add
jb
xor
ljmp
iret
sub
pop
das
jb
fwait
or
jne
adc
adc
in
cmpsb
repz
jle
cmp
adc
xor
or
mov
jmp
and
mov
fst
aad
jl
add
cmp
mov
sub
mov
imul
and
push
mov
dec
cltd
call
ss
scas
cs
out
mov
rorb
xchg
stos
cltd
clc
popa
xchg
or
and
jge
fcomp
stc
mov
fidivs
mov
pushf
dec
rorl
sub
dec
push
cmp
sbb
ret
fs
call
lea
add
shll
nop
lods
ret
fidivl
repz
pop
sbb
pop
cld
cmp
push
xchg
cld
push
mov
insl
adc
sbbb
dec
cmp
stc
loope
sub
pop
mov
lcall
insl
aam
jge
xlat
push
add
mov
mov
decl
out
mov
jg
pop
imulb
xchg
fwait
add
dec
in
enter
movsb
xchg
out
adc
aas
into
sbb
cmpsb
mov
cli
gs
nop
jno
enter
out
sahf
stc
sti
push
outsb
mov
jecxz
mulps
sub
add
jno
insl
in
repnz
mov
int3
in
into
mov
call
imul
pop
in
push
sbb
dec
shlb
sbb
jp
cmp
dec
mov
int3
mov
fwait
rcll
xlat
lock
and
adc
jns
inc
setge
sbb
jle
popa
inc
fxrstor
andl
lret
fdivr
mov
cwtl
xlat
call
add
dec
dec
xchg
movlps
nopl
or
icebp
pushf
mov
sbb
negl
fsubrp
shll
mov
xchg
push
andl
adc
repnz
mov
clc
std
and
push
dec
push
add
and
lret
push
jl
xor
frstor
subl
inc
adc
fcomps
das
pop
movsl
jae
stc
shll
push
jl
mov
xlat
cs
lret
sahf
xor
sti
fcmovbe
std
jnp
es
hlt
cmpsb
mov
je
mov
xor
ret
jnp
out
push
les
imul
push
cmp
sub
cmpsl
pop
cmpsb
pop
push
outsl
push
jo
fimuls
or
sbb
push
loop
dec
push
push
cltd
xchg
or
sti
add
mov
cli
push
roll
mov
cltd
imul
push
push
adc
mov
data16
pop
add
and
pop
out
pop
sub
jo
int
inc
sub
fiaddl
mov
fst
rclb
out
sub
sub
adc
rolb
cwtl
aaa
movsb
imul
xor
push
data16
lea
pop
lods
xchg
faddp
pop
cmp
mov
push
lret
inc
movlps
iret
xor
jl
lods
inc
xchg
cld
add
clc
pop
pop
loop
enter
and
mov
cmc
inc
push
inc
xchg
jecxz
mov
mov
push
pushf
dec
xchg
int
and
decb
data16
push
xor
push
cltd
mov
and
or
mov
addr16
sahf
cmpsl
subb
bound
nop
or
in
andb
sub
mov
xchg
scas
or
adc
cmp
pop
mov
push
rorl
hlt
mov
les
cld
rcrl
mov
and
fsubs
cmpl
push
subl
mov
cmpl
adc
push
jb
xor
fadds
ja
pop
test
sahf
add
add
inc
rcrb
gs
gs
test
pop
push
scas
sub
loope
popf
pushf
mov
push
cmc
pop
xchg
out
push
pop
js
or
pop
cmp
push
out
adc
xlat
pop
pop
sti
and
jge
adc
xor
cmp
shl
xchg
outsb
xchg
mov
xor
mov
outsl
inc
pop
jp
shl
mov
cwtl
inc
mov
sub
fistpl
sub
ds
imul
sbb
ja
int3
inc
or
les
lea
out
mov
push
pop
pop
js
adcb
es
mov
fimuls
jle
je
lahf
lret
jnp
or
sbb
sbb
add
mov
jno
xor
mov
addr16
adc
cltd
iret
fiaddl
test
xlat
or
sub
jmp
ret
xor
negb
imul
dec
fcoms
dec
out
inc
sub
cmp
xchg
xchg
xlat
cltd
push
es
cmpsb
popa
mov
inc
mov
xchg
enter
ss
adc
sbb
cmp
sub
cmp
or
cld
xor
aaa
fdivl
mov
or
sbb
dec
sti
rol
pop
jl
push
clc
test
xor
adc
popf
jge
sbb
test
xor
push
add
xchg
push
lock
xchg
int3
jg
dec
inc
inc
mov
push
xchg
xchg
dec
sahf
out
xchg
inc
popa
xorl
sarl
shll
lock
or
add
adc
xchg
movsl
push
sbb
call
mov
mov
repz
pop
mov
pop
jp
sbb
inc
fs
jmp
sbb
push
jne
cmp
pushf
lahf
sub
push
mov
adc
mov
repz
and
inc
cltd
jp
lcall
test
clc
inc
mov
cs
mov
ret
push
shrb
out
cmp
push
lea
cltd
stos
outsb
cs
loop
mov
jnp
dec
mov
and
and
aaa
and
lea
pop
jp
push
dec
aaa
adc
mov
sub
and
fcmove
xchg
fisubrl
fisubrs
pop
mov
xor
jl
push
dec
jnp
jns
or
bound
out
and
mov
mov
in
jnp
add
xchg
xchg
pusha
int
ds
fisubs
aaa
jnp
out
xchg
ljmp
sub
xchg
mov
or
xor
out
les
pop
or
ret
cld
scas
cwtl
pop
mov
in
pop
inc
jp
cmpsl
outsl
scas
mov
pop
and
cmp
push
push
sub
pop
and
xchg
xchg
mov
fimull
rclb
inc
cmp
mov
push
jge
cmp
gs
fsubr
icebp
icebp
addr16
xor
cmpsb
movsb
inc
mov
mov
scas
sti
xchg
mov
inc
in
sub
adc
mov
fcmovbe
add
jne
inc
es
adc
add
sbb
xchg
cmp
fnstcw
mov
pop
inc
ds
fisttpll
xchg
in
jl
sbb
insb
iret
mov
mov
popf
cmp
jle
les
jne
ret
mov
mov
push
aad
insb
ljmp
subl
test
pushf
popa
jecxz
cmp
xor
fcoml
mov
or
mov
test
adc
aas
je
subl
jl
stos
test
fisttpl
test
test
divb
pop
pop
dec
addr16
enter
addr16
inc
loope
or
out
popa
inc
test
stos
arpl
jo
sbb
lcall
fcoms
sub
enter
ljmp
xchg
pop
test
daa
xchg
cmp
ja
cmpb
loop
pop
gs
xchg
jns
adc
pop
mov
sbb
pop
leave
mov
ret
cmp
mov
inc
cs
mov
lea
test
jns
cld
je
repz
shrb
enter
mov
xor
sub
lock
stc
mov
ds
test
ss
push
loop
adc
mov
mov
xor
je
clc
into
pop
fldl
fsubs
cmp
cwtl
data16
ljmp
fidivrs
jne
imul
fstl
sub
cmpsl
fcomps
mov
and
dec
cmp
lcall
or
dec
pusha
ret
push
cmc
in
adc
adc
sub
fistpl
outsl
dec
inc
shl
ja
lahf
sbb
mov
jecxz
cld
sub
cmp
adc
jne
movsb
dec
movsb
cld
imul
call
mov
pop
in
shrl
inc
cmp
rcll
rclb
sarl
push
out
loope
dec
mov
add
or
mov
mov
or
mov
rorl
dec
outsl
arpl
add
ficompl
andl
and
push
add
adc
sahf
push
sbb
aaa
add
fs
fmul
jno
push
inc
and
sub
sahf
nop
nop
fildl
cmp
leave
insl
jo
xchg
inc
int3
mov
mov
in
in
iret
or
jge
mov
in
jns
xlat
mov
or
arpl
and
mov
in
or
push
pop
add
xchg
sbb
ljmp
inc
imul
iret
xchg
sub
nop
inc
xchg
lahf
jle
iret
fnstenv
fsub
or
stos
pop
mov
sbb
leave
stc
inc
xabort
insb
cmpsl
lods
mov
lds
inc
push
push
push
popa
rcll
lods
mov
enter
loope
pop
rorl
jbe
ret
rorb
push
mov
fwait
je
pushf
cmp
xor
push
imul
cmp
push
push
fimull
sub
jp
mov
inc
or
mov
notl
shrb
shr
jecxz
sbb
jno
mov
in
sbb
jo
and
call
sub
jno
call
insb
jg
repnz
lods
dec
add
add
cwtl
shr
pop
pop
xlat
lea
inc
scas
rorb
icebp
mov
jecxz
sbb
cld
imul
clc
jno
cmp
icebp
xor
xchg
add
cmp
dec
hlt
sbb
fs
jns
xchg
or
scas
jo
or
testl
aaa
mov
cmpl
int3
mov
stc
jno
adc
push
test
cmp
aas
icebp
mov
lods
outsb
fcomps
mov
loopne
cmpb
leave
clc
clc
pop
mov
push
jp
icebp
xlat
push
fs
mov
push
cmp
fadd
or
jmp
xchg
mull
mov
jne
aaa
out
dec
mov
mov
aaa
bound
outsl
imul
hlt
jnp
dec
push
adc
sahf
std
fwait
and
adc
sbb
dec
mov
jae
daa
lret
loop
sub
dec
testl
aam
enter
lahf
inc
cld
jge
frstor
adc
fsubrp
sub
inc
and
test
popf
jno
std
fists
push
xchg
repnz
inc
mov
sbb
mov
add
incb
or
data16
jbe
ds
jo
pushf
push
lods
fisubs
inc
stc
mov
jne
mov
lret
aad
pop
stc
jae
push
inc
sbb
xchg
xchg
add
fadds
js
and
mov
mov
inc
add
outsl
test
xchg
add
mov
imul
rcll
mulb
and
test
iret
aaa
jno
xchg
sub
fisubrl
sbb
mov
je
push
cwtl
es
jp
cmp
jg
and
cmpsl
fwait
and
push
mov
mov
stc
dec
pop
mov
inc
repz
push
std
mov
popa
out
mov
test
outsl
and
or
inc
shr
mov
cs
dec
mov
ret
and
xchg
mov
or
pop
addr16
mov
and
loope
stos
jmp
and
fsubrs
mov
mov
mov
and
add
rorb
or
and
mov
and
shlb
test
lcall
aam
aam
icebp
inc
js
push
aam
xchg
js
xchg
xor
flds
stos
cmp
and
bound
jb
cmp
mov
push
inc
or
adc
push
bound
shlb
push
inc
lret
xor
rorb
push
aaa
cli
int3
test
push
ja
int
or
sub
and
inc
add
jbe
ja
cmp
call
jb
xor
lret
xor
xchg
cmc
cmp
dec
sub
mov
mov
shll
fisubs
into
xorl
lock
xchg
jle
hlt
lret
rorl
cmove
mov
test
pop
push
jmp
sub
stos
dec
jnp
stos
aaa
add
paddusb
mov
test
xor
data16
push
aam
aad
aaa
adc
adc
sub
imul
int
loop
ficoml
mov
shrb
jge
jb
mov
data16
cmp
pop
xor
lea
add
push
add
jmp
or
pop
pusha
adc
arpl
push
push
sti
pushf
inc
into
cltd
stos
jb
leave
popf
arpl
sbb
jae
mov
xor
push
pop
call
and
fs
in
mov
add
sbb
sbb
mov
js
test
into
ret
jl
cmp
ret
dec
pop
xchg
lds
movsb
mov
addl
mov
or
xchg
dec
add
popl
pop
fnstenv
mov
fs
mov
pop
xor
test
and
jne
dec
sbb
loop
lods
orl
call
xchg
lret
push
pop
test
das
cmp
outsb
pushf
clc
pop
xlat
test
lcall
inc
and
and
cmp
test
xchg
in
sbb
sub
cmpsb
insl
adc
ljmp
xchg
dec
sbb
ljmp
mov
xor
pop
mov
jge
sti
std
test
sub
push
or
adc
ja
mov
add
sarb
push
mov
mov
iret
cmp
xchg
dec
adc
mov
xlat
leave
mov
jecxz
aam
inc
mov
mov
xlat
sbb
hlt
sarl
pop
das
or
xlat
adc
xchg
test
dec
movsl
fwait
mov
lcall
adcb
ds
mov
dec
ret
out
pop
aaa
repz
test
je
pop
add
inc
aam
daa
cld
mov
les
pop
jmp
subb
push
iret
bound
cmpsb
mov
jl
scas
jne
out
aad
daa
mov
xor
popf
fsubr
fnsave
pop
xor
push
jne
sub
push
push
add
loop
pop
cmp
xor
push
cmp
pop
ret
mov
and
mov
jmp
shlb
popa
sbb
mov
push
adc
cmpsb
mov
imul
pop
call
lahf
jmp
sbb
test
mov
mov
lcall
cmp
xchg
lcall
dec
hlt
test
push
es
ljmp
jbe
mov
adcl
dec
enter
test
movsb
movsb
jnp
jle
aam
cmp
js
push
add
imul
das
outsl
test
mov
mov
clc
lcall
jae
push
insl
add
or
xor
inc
fimuls
or
push
les
sub
mov
cmp
out
jbe
shrb
or
pop
iret
xchg
out
cmp
rcrb
mov
or
push
insl
fnstsw
xor
in
out
mov
and
sahf
push
xchg
add
aam
pop
out
mov
stos
pop
mov
mov
pop
xchg
inc
cwtl
sbb
stc
add
repz
inc
and
imul
rorb
rdtsc
cmpsb
stos
test
and
and
repnz
and
insb
inc
sti
aam
inc
inc
dec
iret
pop
cmp
sub
cmp
pop
adc
call
mov
cmpsl
cld
push
mov
leave
repz
data16
cmc
out
add
jl
add
and
or
sub
outsl
jmp
push
hlt
sub
push
jo
xchg
in
int
jmp
mov
loopne
adc
insb
insl
repnz
push
xor
jle
cwtl
dec
adc
cmpsl
push
out
xor
out
push
aas
je
loope
add
dec
je
dec
out
shll
nopl
mov
jne
inc
loop
shr
and
nop
mov
fistpll
jmp
add
aad
jg,pt
mov
jmp
mov
mov
mov
and
push
inc
fmull
addr16
out
lcall
fsts
xchg
repnz
push
mov
inc
sub
jl
sub
add
and
ljmp
adc
cli
into
dec
idivb
mov
ret
push
push
sub
pushf
or
mov
fsubrs
xchg
icebp
add
lret
inc
sub
mov
jo
sbb
imul
loopne
hlt
and
not
xor
xchg
jae
dec
imul
cmpsb
or
dec
loopne
adc
in
std
jecxz
and
sub
or
push
subl
fsubr
repnz
pop
cmp
sbb
in
cmp
cmp
xchg
loop
hlt
les
test
xchg
or
pop
mov
enter
sbb
sub
pop
lds
in
mov
adc
sub
push
jmp
sbb
in
shll
shrl
mov
inc
jnp
add
sub
aad
shrl
lock
out
xchg
mov
and
pop
push
stos
in
push
enter
sub
and
xchg
cmp
pop
bound
fwait
out
testl
xor
mov
cltd
pop
scas
sbb
jne
pop
fbld
pop
xorb
or
aas
pop
imul
add
clc
sub
xor
sahf
adc
lods
sbb
pusha
dec
fnstenv
scas
dec
xchg
mov
lret
int3
inc
mov
fadds
xor
lret
fdivs
sub
imul
ss
vprotq
aad
pop
stc
aas
insl
pop
push
loopne
dec
out
pusha
adc
bound
jo
mov
xor
add
pusha
lea
xchg
std
push
or
sbb
test
inc
cmp
scas
mov
push
sub
sub
push
jnp
das
mov
inc
inc
or
fwait
pop
fsts
sbb
and
out
dec
loope
xchg
popf
jge
cwtl
ja
ja
mov
pop
std
rclb
mov
mull
and
ljmp
addl
xlat
add
loop
js
scas
cmp
movsb
daa
stc
cmp
or
inc
sti
pop
push
hlt
ret
mulb
stos
mov
jo
sbb
mov
add
pop
in
mov
cmp
mov
popf
in
es
mov
in
and
jmp
push
push
jecxz
pop
mov
test
loopne
dec
jns
inc
lods
dec
adc
hlt
iret
cli
cmp
rclb
or
mov
mov
xor
xchg
aaa
push
outsl
push
inc
xchg
jp
or
xor
insb
arpl
mov
add
lret
fwait
jle
xor
adc
enter
fsubl
inc
pop
mov
inc
xorl
adc
stos
outsl
cmp
adc
push
mov
or
inc
stos
cmp
test
loope
mov
cmp
jae
xor
lods
enter
mov
sti
movsl
fbstp
loope
out
scas
or
fisubrs
push
rclb
sub
and
push
push
scas
or
sbb
lods
lods
cltd
xchg
add
jmp
push
sub
mov
mov
mov
sbb
add
aam
and
out
and
and
dec
sub
mov
push
movsl
pop
mov
push
stos
mov
dec
pop
sti
movsb
mov
leave
or
xor
out
sbb
mov
movsb
negb
cmpsb
cmpsb
dec
jmp
out
fbld
nop
loopne
imul
pop
jl
or
jp
sbb
jns
mov
lret
sbb
sbb
dec
gs
pop
push
scas
lock
into
inc
in
jns
in
movsb
frstor
negl
dec
rorb
fwait
add
or
sbb
sti
jnp
jp
adc
dec
std
add
cltd
jo
dec
ds
ljmp
adc
adc
sahf
pop
xchg
jge
inc
jle
cltd
pushw
or
dec
sbb
push
leave
pop
mov
gs
mov
gs
call
add
dec
ficoml
adc
xchg
pushf
out
sub
bound
pop
imul
mov
pop
aaa
push
pop
shrb
cs
sbb
movsb
mov
and
xchg
adcb
inc
sahf
add
sbb
xor
jb
pop
xor
adc
outsb
iret
cmp
in
into
cli
push
test
xlat
rorl
push
and
adc
pmaddwd
imul
lods
cmp
or
leave
das
loope
cltd
je
jae
mov
lods
push
lcall
sub
orl
je
std
dec
dec
xor
shl
cmp
ds
stc
mov
jno
sub
loop
loopne
cmp
cmp
repnz
sbb
jnp
dec
adc
out
mov
fsubp
xchg
pop
lods
push
nop
or
cmp
andl
add
pop
xor
aas
sub
xchg
inc
test
cmp
stos
es
nop
add
dec
push
cmpsb
stos
push
fimuls
add
mov
adc
lods
out
stc
xor
outsl
imul
mov
int
popa
sahf
fwait
and
jo
mov
jb
into
nop
and
dec
sbb
les
and
sub
testb
sub
lcall
add
inc
jb
cltd
xlat
adc
xchg
jle
sub
je
xor
fnstcw
mov
adc
xor
scas
push
mov
jl
inc
daa
adc
mov
adc
push
mov
outsb
jl
imul
mov
imul
es
add
inc
push
cmp
xchg
lret
scas
pop
shrl
adc
aas
ljmp
pop
imul
movsb
fldl
lret
outsb
adc
fiadds
cmp
add
cmp
push
adc
std
cmp
orl
add
jno
jae
inc
mov
inc
ds
faddl
fdivr
pop
or
ret
mov
dec
jp
push
xchg
mov
scas
pop
mov
addr16
push
push
sub
imul
push
std
cmpl
xor
jb
repz
jle
jae
out
lahf
pop
inc
xchg
sub
fs
jge
inc
sbb
aad
ja
push
push
xor
gs
movsl
shll
mov
bound
int
cmp
pop
mov
sbb
or
lret
mov
or
jo
xchg
out
dec
pop
dec
jo
add
mov
mov
push
ret
lock
inc
enter
fwait
pop
fcoms
jp
dec
dec
push
hlt
pop
pop
dec
icebp
loope
out
int3
hlt
jb
scas
push
xchg
cmp
ljmp
scas
fimull
mov
shrl
dec
jg
pop
shlb
in
inc
jmp
mov
pop
sbb
add
out
aaa
xchg
push
xchg
mov
fbstp
ja
mov
outsl
sbb
roll
sub
out
adc
mov
jne
cmp
iret
dec
dec
sub
mov
in
xchg
loop
arpl
repz
out
in
daa
adc
dec
jg
test
xchg
push
mov
scas
daa
lea
adcl
rcrl
xchg
out
or
or
dec
sahf
jo
mov
pop
lods
lahf
cmpsb
scas
test
call
lcall
sbb
sti
sbb
clc
push
adc
pop
jl
cmc
xchg
push
data16
ja
inc
aam
dec
sysret
sub
sar
or
cmpb
stos
ret
or
pop
push
inc
xchg
jo
and
scas
jnp
sbb
xorl
das
mov
movsl
aam
insb
inc
cmp
cmp
jg
pushf
scas
mov
and
bound
dec
pop
jle
sahf
pop
jg
xchg
jbe
iret
xchg
data16
dec
pop
push
sub
cmp
xchg
push
out
jl
dec
adc
jecxz
mov
std
jne
popf
outsb
sub
ja
inc
and
jmp
push
jge
add
and
xchg
adc
xchg
inc
fadd
push
add
fs
jnp
in
jo
ja
mov
shr
test
pop
enter
add
in
in
and
pop
push
fiaddl
pusha
adc
sub
test
pop
mov
out
insl
out
push
jb
sti
pop
dec
dec
xchg
into
push
mov
push
jbe
push
xor
fistpll
inc
push
adc
push
pop
ja
xor
jle
or
mov
cmp
and
ljmp
pop
push
clc
cmp
dec
xor
xchg
pop
inc
dec
mov
adc
sbb
push
popa
pop
sub
xchg
imul
shll
sarb
fs
xor
rorb
adc
ljmp
push
popf
rorl
mov
dec
shl
std
xor
lds
mov
sub
pusha
jne
inc
or
cmpsb
xchg
xchg
cmp
scas
mov
aas
sub
or
push
cmpsl
inc
xchg
push
loop
xor
push
testb
js
test
pop
sbb
int
icebp
sbb
loop
adc
es
cmp
inc
int3
add
dec
pop
or
pop
test
into
and
rorb
inc
sbb
test
lods
xor
out
bound
pfmul
mov
push
daa
fstps
hlt
dec
mov
or
mov
push
jge
inc
push
xchg
sub
jae
sub
mov
repz
mov
sub
cmp
mov
mov
xor
test
pop
sbb
xchg
push
fstp
repz
loopne
jb
ret
inc
jle
cld
adc
mov
out
xor
test
fisubl
stos
cmp
mov
mov
lahf
popf
repz
std
loope
clc
subb
xor
mov
shl
aaa
icebp
jg
mov
orl
fisubl
bound
lea
cltd
stos
jmp
mov
cli
lahf
sbb
jge
mov
enter
dec
cmp
iret
and
cmpsl
cmp
adc
mov
andnps
jne
mov
push
icebp
add
pop
pop
mov
imul
jae
orl
inc
jmp
loop
or
dec
mov
popf
ja
mov
hlt
dec
xor
push
rcr
sti
insl
shlb
cs
push
std
add
rorb
inc
xchg
orl
sbb
imull
and
mov
sbb
mov
fcoms
push
xchg
or
sbbb
bound
push
fistpll
inc
pop
out
sar
lods
mov
sub
pop
add
xor
mov
pop
lods
stos
sbb
lods
ficomps
stos
divb
repz
andl
jge
dec
mov
or
pop
mov
out
shlb
xchg
sbb
push
xchg
pop
ja
icebp
and
test
xorl
push
stos
inc
out
fdiv
lods
dec
rol
lods
pop
ljmp
mov
mov
leave
dec
xchg
sbb
sbb
push
cmp
popa
xchg
fcmovbe
orb
loop
rcrb
dec
frstor
jno
stos
adc
jbe
out
pop
and
jmp
dec
jle
shrb
call
inc
or
sub
xor
fwait
add
mov
or
and
mov
repnz
xor
pop
es
dec
adc
add
pop
fbld
mov
mov
cli
jns
mov
ds
jl
sub
mov
or
and
inc
xor
xor
cmp
inc
jmp
jae
pop
mov
mov
pop
fstl
inc
movsl
sbb
sbb
repz
test
add
std
in
repz
jae
leave
jge
cltd
into
inc
cmp
hlt
cmpsl
mov
lcall
inc
stc
mov
aad
imul
cmp
stc
addb
xor
push
outsb
jmp
xor
ret
push
subb
popa
or
cmc
sub
xchg
cmp
test
sarb
xor
push
movsb
cmc
jno
cmp
test
scas
je
dec
cmp
enter
mov
jle
or
xor
and
cmp
fwait
cmp
lret
mov
jb
xor
pop
and
cmc
cmp
das
sbb
cmp
leave
or
inc
sub
inc
popa
mov
inc
lahf
aad
sub
mov
lcall
lret
sub
adc
mov
js
ret
push
push
mov
pop
inc
pop
aaa
jb
movsb
push
sbb
xchg
jns
movsl
jg
in
popa
xchg
inc
mov
cmpl
jmp
mov
jne
rcr
or
sub
popf
int3
add
popa
dec
shr
testl
jbe
add
mov
test
hlt
insb
aas
xchg
add
push
jne
ret
scas
ficompl
leave
addb
icebp
in
or
mov
and
pushf
mov
pop
sti
movsb
iret
sub
repz
stos
dec
cmpsb
iret
cmp
mov
hlt
xchg
cmpsl
push
pop
and
dec
stos
inc
outsl
cmp
in
fstl
adc
dec
iret
pop
shlb
mov
xor
sarb
mov
inc
xchg
mov
pop
and
jg
xchg
pop
lods
shl
jge
sarl
pusha
movsl
test
movsl
adc
stc
inc
in
adc
add
adc
stos
mov
icebp
mov
mov
or
push
mov
inc
sub
and
adc
scas
incl
add
adc
pop
mov
add
lahf
ja
insl
loop
jl
xor
mov
clc
and
and
mov
icebp
fnstenv
jo
iret
pushf
ja
pop
dec
mov
sbb
icebp
mov
dec
mov
dec
aam
dec
mov
std
dec
add
and
repnz
xchg
test
shll
mov
or
daa
lods
add
sahf
popa
pop
push
enter
in
cmp
dec
sub
jl
loop
lret
insb
jne
pop
pop
jmp
push
and
andl
cmp
dec
xchg
push
xchg
xor
stos
fsubr
sub
xor
adc
rcll
sahf
lods
mov
out
and
out
adcl
fs
pop
popf
hlt
mov
scas
mov
push
push
dec
adc
jmp
not
shr
outsl
push
xchg
pop
or
mov
and
stos
pop
xor
and
push
pop
mov
or
mov
mov
jmp
and
pushf
or
cmp
rcll
inc
adc
sub
pop
std
stos
mov
jl
insb
mov
cmp
mov
popf
xlat
and
or
dec
mov
test
adc
test
jg
pop
loope
pusha
and
stos
sbb
cli
mov
imul
ja
jae
or
cmp
mov
fldt
push
fmuls
insb
aaa
xlat
jle
push
es
cld
inc
jmp
fcmovnb
pop
mov
pop
push
cmp
addr16
lods
nop
popa
push
shll
repnz
stos
mov
in
ds
mov
daa
out
aam
data16
cmp
mov
inc
loopne
pop
pop
mov
xchg
jbe
out
notb
add
cmp
jecxz
les
movsl
jmp
popa
sbb
ljmp
int
add
iret
in
loop
and
xor
lea
add
push
inc
je
cmc
adc
mov
mov
rcll
dec
mov
cs
cld
insb
repz
and
xchg
insl
xchg
gs
stos
adc
test
fstl
xorb
cmp
cli
inc
jle
sub
flds
lcall
jns
jg
jp
xor
cmc
cld
xor
adc
dec
pop
mov
rolb
orl
or
dec
cmpsb
add
sbb
ja
jne
fwait
in
dec
add
loop
mov
in
and
xor
js,pt
ret
rep
scas
imul
sarl
mov
stos
jno
jnp
pop
insb
imul
les
pop
sub
ja
sbb
pop
mov
je
push
mov
xchg
mov
jae
mov
and
pop
jo
inc
sbb
clc
mov
and
push
inc
xchg
inc
mov
fimuls
push
jecxz
les
clc
and
mov
in
lock
jb
xchg
mov
pop
adc
cmp
pop
mov
push
cli
push
add
fsubr
stos
mov
js
pop
imul
aad
out
xchg
push
ret
pop
add
jne
add
xchg
cltd
and
out
xor
push
loope
adc
imulb
mov
enter
add
aaa
out
lods
jbe
sbb
push
xchg
inc
jmp
or
adc
cmp
xchg
sbb
pop
push
mov
leave
mov
pop
cs
loopne
jae
outsl
into
imul
adc
add
jmp
jne
dec
aam
ss
or
xchg
cmp
and
js
jl
cmp
xor
sub
sarl
jmp
sub
addr16
xchg
addb
xor
std
insl
incb
xchg
clc
pop
imul
mov
jns
pop
aad
jge
mov
xchg
es
lock
xor
popa
les
ss
mov
mov
mov
std
jp
out
pop
and
std
movsb
es
push
jle
adc
add
mov
pop
mov
push
leave
fdiv
pop
lods
xchg
xor
test
ret
inc
xchg
out
lods
sbb
push
add
aam
aad
jge
fisubs
add
mov
loop
sti
int3
adc
adc
pop
pop
xchg
and
out
xlat
in
daa
scas
cmpsb
psubw
xchg
inc
pop
les
repz
jo
adc
push
sbb
sub
loop
cmpsb
pop
sahf
pop
cmp
mov
lods
lahf
in
in
push
sub
pop
inc
mov
out
out
cmpl
pop
hlt
mov
scas
jg
fldenv
in
dec
popf
popf
aas
jo
mov
imul
xor
cwtl
popa
pop
iret
lahf
and
push
and
mov
in
outsb
jp
in
mov
xor
testl
push
test
xlat
mov
push
adc
mov
mov
enter
test
mov
cmp
push
in
mov
movsl
imul
arpl
in
ja
cli
xor
in
sub
dec
es
inc
mov
test
setns
cld
inc
pop
sbb
add
nop
inc
inc
xor
jle
mov
push
outsb
push
ds
aad
popa
mov
pusha
int3
outsl
jb
aas
dec
mov
jl
jg
adc
ret
jae
imul
adc
adc
xor
push
fidivl
subb
cwtl
rcr
in
xor
dec
lds
insb
insb
mov
inc
lock
xor
mov
addr16
sahf
xor
mov
filds
xor
int3
sbb
pusha
xchg
fisubs
mov
mov
or
jns
fisubrs
and
inc
mov
xchg
repz
enter
mov
repz
push
dec
ret
ja
xchg
in
orl
push
mov
cltd
popf
jnp
fdivl
pop
or
repz
popf
mov
sti
popa
cwtl
pop
arpl
add
mov
push
mov
sub
gs
aaa
pop
sbb
repz
push
outsl
and
pop
mov
outsl
ret
mov
lea
cmp
jge
inc
arpl
push
iret
cmp
mov
daa
and
in
sub
movb
or
leave
or
sub
sub
mov
add
adc
rcl
jae
aaa
pop
sbb
enter
jae
jo
xchg
das
push
outsl
and
in
sahf
test
addb
mov
outsb
cli
repnz
jo
mov
sarl
dec
mov
enter
in
cltd
lds
mov
adc
sbb
pop
jbe
cmp
dec
ljmp
cli
cmp
and
inc
push
jae
outsb
pop
jmp
lods
repz
popa
sub
outsb
mov
push
bnd
out
insb
add
cmpsb
movsl
ss
push
sbb
push
or
push
and
lds
test
andb
push
dec
movsl
ds
xor
daa
mov
xor
cmp
cmp
iret
xor
and
cmc
sub
sarl
sbb
scas
xchg
lea
and
lods
sahf
andb
xor
roll
push
and
movsb
adc
pushf
cli
sub
test
cwtl
mov
fucomp
aaa
push
xchg
mov
shll
xor
dec
jno
pop
cwtl
jle
aad
sbb
les
mov
sarb
mov
mov
outsb
jge
cmpsl
or
mov
ja
mov
mov
mov
fsts
jmp
xchg
jg
mov
rcrb
ret
mov
addr16
mov
dec
aaa
ret
pop
mov
loop
repnz
popf
hlt
push
ret
add
lahf
repnz
lcall
into
sub
sub
cmp
mov
sub
out
inc
outsb
repnz
pop
inc
in
leave
jb
cs
jp
and
or
xchg
pop
cmp
leave
leave
repnz
ljmp
bound
jp
adc
test
push
ja
aam
mov
adc
bound
push
lods
jp
jne
pop
cmp
and
fidivrs
inc
cmpsl
cmpsb
pop
stc
stc
in
sahf
push
cmc
test
xor
mov
movsb
leave
xchg
pop
jecxz
cli
adc
add
nop
roll
jle
aaa
es
cwtl
pop
pop
lods
aaa
push
add
jecxz
sahf
or
outsb
ss
inc
clc
or
sti
and
sub
testl
fnstsw
xchg
dec
ret
pop
in
fcompl
aas
cmp
mov
xchg
mov
mov
movsb
mov
mov
push
insl
sbb
push
sahf
cmp
test
jae
int
test
adc
out
xor
inc
xchg
xor
movsl
add
jo
jl
inc
mov
cmpb
add
mov
std
enter
iret
jno
vandps
outsb
dec
lods
iret
xor
repnz
test
and
imul
cli
sbb
jmp
in
ja
rclb
xor
orb
sub
mov
mov
mov
xchg
subl
mov
sub
mov
aas
jecxz
jnp
push
aaa
mov
fwait
sbb
sub
outsb
dec
sar
outsl
mov
cli
arpl
lock
sbb
mov
jns
lahf
mov
dec
dec
bound
pop
fwait
nop
pop
mov
int3
sub
cli
fdivrl
rolb
orb
mov
data16
jl
cmp
fisttps
inc
test
sar
lret
sub
cmpsb
sbb
sub
push
stos
adc
pop
mov
dec
scas
mov
hlt
lahf
ss
jne
pusha
xlat
add
xchg
je
push
orb
orl
stos
and
ja
lea
dec
cs
aas
dec
lcall
imul
and
pop
popf
push
popf
and
pop
jg
les
cli
outsl
das
out
add
push
es
sbb
mov
sbb
test
inc
jnp
lods
in
push
in
sbb
sarl
cmpl
fwait
xor
push
cld
andl
push
pop
mov
push
pop
mov
mov
outsl
mov
stos
or
xor
xor
inc
xchg
or
push
pop
pop
out
adc
ljmp
lods
cmpsl
dec
inc
sbb
cmc
xchg
push
sti
mov
sub
cmp
dec
packssdw
fisttpll
and
jmp
xor
loopne
push
dec
fldcw
lods
push
pop
jmp
ret
jge
cmp
jl
or
xchg
das
pop
insb
rcr
xchg
cmp
mov
xor
sub
and
dec
push
orb
push
inc
mov
adc
xchg
cmp
and
js
repnz
adc
sahf
std
pop
nop
mov
xor
xchg
test
cmc
push
aam
dec
sub
pop
mov
stos
psrld
jl
movsl
mov
xchg
pop
aaa
into
scas
sbb
daa
jns
ss
jp
adc
adc
sub
sahf
out
data16
xor
lcall
and
in
push
push
sub
lret
adc
pop
xor
mov
cmc
lret
enter
cmp
fsubrp
aam
popf
pop
div
popf
add
mov
or
xchg
movsb
cld
test
fcmove
punpckldq
aad
sti
mov
movl
nop
jno
cmpsl
pop
addr16
lds
xchg
and
cmp
mov
hlt
daa
icebp
sbb
hlt
pop
mov
in
mov
cmp
mov
sbb
cmp
bound
movsb
cmp
mov
cmpsl
cmp
cmp
mov
push
fcompl
mov
ret
lock
xcrypt-ofb
cmpsl
scas
cmp
xchg
gs
lret
and
loope
xchg
insl
pop
fcompl
adc
imul
movsb
fstps
mov
lods
out
cmp
mov
push
sti
insl
shrb
lods
mov
adc
sbb
add
inc
sarl
pop
idiv
iret
lea
insl
jmp
xchg
test
test
pusha
fs
je
cmc
xlat
xchg
lret
stos
sub
sub
sub
leave
push
jns
xor
arpl
je
mov
rolb
dec
sbb
jp
aaa
fdivr
outsb
out
out
xchg
pop
addl
add
out
addr16
sub
inc
test
das
rorb
adc
sub
packssdw
rcll
sarb
aas
adc
cmp
je
ret
xrelease
cld
cli
addr16
add
mov
ds
mov
mov
mov
xchg
xchg
repnz
out
adc
jo
push
jno
das
cli
pusha
loope
ret
test
jae
hlt
adc
mov
pop
stos
aam
xlat
jg
dec
insl
adcl
test
pop
adc
imul
push
call
ss
ds
fisubrs
xchg
cwtl
push
ds
ja
scas
call
pcmpgtd
sbbb
mov
pop
sub
sub
and
stos
dec
mov
dec
clc
sbb
scas
out
cmp
call
ja
jmp
xchg
xchg
inc
loop
sbb
stc
fildl
jo
clc
jnp
out
or
imul
mov
jo
paddsw
adc
daa
jns
in
or
popf
repnz
outsl
mov
dec
push
mov
cmc
shrl
mov
in
push
jb
add
cmpsl
mov
fldenv
dec
arpl
das
fwait
cld
out
push
scas
add
xchg
mov
and
orb
hlt
adc
xchg
lods
aas
sbb
mov
pop
inc
xchg
push
xor
push
mov
xorl
inc
dec
scas
inc
jno
sub
add
xchg
push
mov
cwtl
mov
inc
adc
mov
fldl
push
rorb
mov
mov
lock
int
cld
cld
in
mov
or
push
push
or
repz
jbe
pop
push
jne
jbe
loopne
inc
jo
push
es
pop
roll
aad
sahf
mov
adcl
sbb
hlt
int
adc
in
mov
inc
stos
lods
call
outsb
int
sub
mov
mull
clc
aad
inc
jno
jmp
in
fistl
add
fdivrs
and
jecxz
pop
addr16
arpl
data16
mov
add
mov
cmp
sub
test
mov
mov
es
and
ds
lods
movsb
cmpsl
adc
loop
pop
cmp
rorb
mov
sbb
jnp
lcall
dec
in
lods
inc
mov
pop
ljmp
scas
rcr
call
mov
enter
outsl
inc
mov
push
or
loopne
xor
adc
dec
mov
out
pop
xlat
imul
push
push
jb
pop
aam
add
stos
jmp
cmc
test
hlt
pop
fdivl
xor
hlt
add
mov
xchg
jb
in
pop
jns
addr16
ret
cwtl
lds
sub
sub
repz
lret
and
sub
lea
xor
lds
dec
fidivrl
mov
adc
outsl
std
dec
gs
nop
or
sbb
pop
out
mov
add
aas
test
dec
pop
lret
out
popa
call
jbe
jp
loopne
adc
loopne
inc
data16
cmpsl
stos
adc
loop
and
ss
jns
cmp
or
cld
mov
jne
push
push
jp
jle
or
cmp
aad
pop
enter
fwait
sbb
inc
cmpb
loope
mov
dec
sub
imul
push
mov
jo
dec
insb
mov
inc
out
xchg
in
mov
sub
in
lahf
icebp
mov
adcb
iret
sub
pop
cmp
pop
mov
in
enter
mov
pusha
and
mov
mov
inc
fistps
and
rcll
xor
in
fstl
in
ss
xor
popf
jbe
mov
cmp
lds
cmp
repnz
jne
pop
jno
stc
rolb
lock
mov
jo
cwtl
mov
dec
sub
xchg
push
pusha
cmp
push
clc
jmp
scas
icebp
gs
int
mov
aad
lcall
daa
push
js
fldl
dec
je
mov
mov
leave
insl
xchg
aam
pop
adc
xchg
rcrb
negl
xor
aas
gs
mov
mov
sub
out
pop
push
insb
icebp
out
roll
sub
fistpll
rcrl
pop
pop
lahf
outsb
sub
in
in
mov
xchg
lahf
fistps
and
leave
xchg
shll
push
jge
lods
jae
mov
jmp
leave
pop
loope
or
mov
xor
and
cmpsb
movsl
fidivrl
dec
cs
lods
mov
in
push
jns
sbb
rcr
adc
jns
divl
pop
push
lret
sbb
mov
lcall
daa
xchg
addr16
jo
insb
je
and
dec
sbb
mov
addr16
pop
std
push
loope
fdivrs
sub
add
mov
xchg
pop
add
inc
out
adc
push
into
cmp
in
cmp
dec
and
in
add
decb
mov
jb
fildll
sub
sub
popa
xor
adc
dec
imul
and
inc
dec
cmp
push
cld
adc
iret
or
and
repnz
lods
dec
popf
das
loop
bound
mov
adc
pop
sub
notb
and
mov
pop
ljmp
mov
pop
sbb
push
repz
mov
add
and
sar
test
into
pushf
roll
cmc
mov
sub
dec
mov
mov
andl
xor
out
test
push
ffree
lock
arpl
xbegin
dec
fwait
outsl
push
out
pop
stos
mov
push
lock
jbe
push
dec
fs
loop
aaa
sahf
cmp
leave
in
push
jmp
in
pop
cmp
push
xor
or
mov
mov
jl
inc
lock
pop
ljmp
test
xchg
ljmp
mov
pop
out
xor
sbb
imul
decl
pop
dec
popa
lret
and
pop
jne
in
jmp
xor
lods
test
xor
test
xor
cli
add
and
test
xorl
mov
aaa
mov
dec
inc
cmc
in
cltd
add
push
inc
dec
fxch
xchg
psrad
mov
negl
inc
popa
xchg
jo
arpl
mov
out
sbb
test
hlt
int
inc
cltd
enter
in
push
dec
sbb
jb
mov
xchg
arpl
insb
aad
inc
fsubrl
jo
cmp
mov
addr16
dec
movsb
fwait
mov
insb
loop
jo
dec
iret
add
mov
xor
imul
fldcw
jmp
stc
das
sbb
test
notl
iret
cld
sbb
wrmsr
in
sub
sbb
addl
inc
lret
leave
and
inc
cmovl
mov
add
enter
sub
ljmp
out
mov
or
lods
sub
cwtl
lock
out
sbb
xchg
jnp
push
xchg
lds
into
cs
rcr
dec
add
xor
jge
ret
mov
cli
loopne
loope
dec
mov
xchg
or
adc
cwtl
cmpsb
inc
mov
adc
int3
addr16
mov
ja
or
jmp
mov
sbb
les
fwait
add
and
and
cmp
or
mov
shlb
xchg
hlt
sub
sub
enter
out
xorl
inc
sbb
leave
mov
and
enter
data16
jg
add
idiv
or
push
mulb
and
cmp
gs
lcall
iret
dec
sub
or
or
xor
test
fisttps
or
mov
cmpsl
inc
clc
or
insl
cmp
scas
sahf
addr16
cli
cmp
push
nop
push
mov
xchg
add
sub
xchg
sbb
sti
cmp
push
inc
jmp
sbb
mov
jnp
pop
outsl
mov
ds
mov
mov
pop
addl
or
xor
dec
xor
inc
insb
push
adc
leave
inc
sahf
dec
outsb
adc
inc
pop
jle
cmp
xor
sub
or
lret
dec
jmp
mov
mov
out
imulb
daa
cld
jns
out
sub
sti
add
cmpsb
addr16
mov
daa
div
pushf
push
dec
xor
movsl
jg
adc
adc
xor
in
rcll
mov
inc
int
xor
jnp
lds
jle
hlt
xor
and
mov
and
sub
cli
dec
sbb
fidivs
sub
jbe
or
fistl
call
fnsave
sbb
fcmovne
test
xchg
push
loope
jl
push
xchg
jg
push
cmpb
test
cwtl
in
cmpsb
stc
and
sbb
lcall
xchg
jb
bound
xchg
mov
cli
mov
enter
mov
imul
mov
mov
lock
cmp
sbb
mulb
and
dec
sti
insb
pushf
lret
xlat
sub
test
incb
out
aaa
add
mov
inc
mov
repnz
loope
stos
inc
and
ss
dec
pop
mov
movsl
fsubl
jp
mov
cmp
sub
pushf
jge
sahf
pop
adc
or
mov
out
or
fstpl
jne
push
mov
js
lahf
into
cmp
rcll
adcb
lea
pop
xor
cmc
push
mov
add
fsubs
mov
in
mov
cmc
mov
testb
xchg
lcall
or
stc
int
mov
and
inc
bound
pop
dec
push
call
pop
and
xchg
sbb
out
sbb
and
xchg
out
sub
jae
loop
into
sbb
inc
pop
adc
stos
out
mov
sub
inc
xorb
sub
mov
push
jae
dec
or
xchg
or
repnz
xchg
sbb
xchg
fisttpl
sub
inc
or
js
imul
sub
xchg
das
and
hlt
push
xor
adc
fidivrs
jmp
mov
and
dec
lds
dec
add
and
mov
push
test
popf
xchg
jnp
pop
jae
jle
and
leave
push
dec
mov
xchg
test
test
xchg
xor
or
cmpsb
sub
data16
out
gs
push
je
cmp
aad
fcmove
sti
jne
repnz
sbb
fisttpll
test
nop
gs
cmp
int
outsl
jbe
aas
popf
clc
into
pop
pop
jo
xor
or
stc
push
jne
and
and
jo
roll
out
scas
fistpll
call
subb
inc
inc
mov
jge
mov
jbe
in
mov
mov
add
mov
fwait
sbb
outsl
fmull
loopne
scas
sub
test
push
jnp
leave
add
lea
scas
pop
mov
test
sub
loope
in
dec
xor
dec
and
jecxz
sbb
jo
push
xchg
adc
imul
lahf
jp
inc
mov
mov
stos
mov
sub
ret
push
pushl
jle
jno
outsb
dec
push
mov
divl
xchg
ljmp
in
lods
jns
test
and
dec
adcb
dec
aam
dec
xchg
sbb
insb
loopne
dec
xor
lahf
xlat
adc
xchg
inc
xor
into
imul
insb
mov
ja
es
clc
mov
inc
adc
leave
xor
mov
pop
sbb
xor
subl
mov
inc
stc
imul
stos
stos
mov
inc
mov
dec
cwtl
push
and
fsubs
jle
ja
in
sub
stc
test
xorl
adcl
lods
cmp
test
fwait
clc
cmp
pop
les
cmp
adc
mov
mov
out
adc
shrl
ljmp
ror
fsubrl
iret
mov
dec
lock
arpl
repz
dec
test
mov
xchg
adc
adc
mov
and
idiv
out
mov
ffreep
scas
mov
orb
ljmp
sbb
pop
lcall
shrl
out
or
dec
xor
xor
je
test
mov
lods
xchg
aam
and
js
adc
cmp
decb
sahf
push
in
nop
add
loope
hlt
in
divb
dec
stos
fcomp
enter
bound
loopne
inc
push
mov
daa
push
and
leave
data16
vmovntps
add
push
daa
mov
stc
repnz
inc
fs
movsb
dec
cmp
mov
les
imul
push
and
jp
pusha
xchg
mov
jne
push
call
mov
mov
push
aaa
loope
sbb
scas
and
sub
and
aam
inc
mov
cwtl
inc
mov
jae
push
inc
push
out
adc
mov
xchg
jp
or
mov
and
jnp
inc
sub
push
xchg
add
imul
and
out
jnp
icebp
js
nop
adc
sub
shlb
jmp
aam
outsl
pop
ljmp
movsl
mov
clc
jnp
dec
subl
lahf
push
in
mov
fdivrl
js
outsb
mov
pop
ds
aad
add
lock
js
fdivrl
adc
add
insb
scas
push
int3
ja
sbb
test
mov
jmp
movsl
adc
sbb
ljmp
lret
ret
dec
fstps
xor
and
mov
jae
fsubr
xor
movsl
inc
mov
or
cmpsl
sbb
shrl
mov
adc
push
jns
adc
cmc
mov
or
inc
and
fcomps
int
enter
out
or
js
icebp
cs
subl
xor
pop
jne
push
jae
les
pushf
or
popa
in
jmp
pop
mov
out
pop
data16
pop
andb
or
sub
bound
ret
push
jmp
movsb
sbb
cmc
add
hlt
insb
xor
jae
cmp
hlt
xchg
cmp
dec
mov
lea
sbb
js
je
das
dec
pop
sub
mov
xlat
mov
pop
pop
mov
and
sub
jns
daa
movsb
push
sar
mov
dec
xor
or
aaa
dec
imul
inc
mov
loopne
repz
mov
push
lods
adc
es
int3
push
mov
jo
lcall
xchg
lds
loope
xchg
mov
mov
cmp
fidivrl
xchg
mov
inc
dec
jnp
iret
push
ljmp
pop
mov
insl
in
outsl
aas
and
sbbb
cmc
xor
repnz
sub
push
cwtl
or
ja
push
fadd
inc
subb
ja
cwtl
popf
in
push
loope
pop
pop
mov
add
into
cmpsl
xlat
ret
jge
andl
xlat
orb
xlat
xor
sbb
pop
mov
movsb
in
ja
push
outsb
daa
push
aam
sub
sahf
xchg
pop
push
imul
daa
test
sbb
cmp
in
jns
adc
pop
movsl
pop
push
fwait
jmp
sarl
cmpl
cmp
pop
jle
sub
scas
xchg
ljmp
jmp
idivl
or
adc
cld
cmc
xor
xor
adc
sub
sub
imul
imul
adc
lcall
dec
xchg
sbb
aaa
std
mov
xchg
xchg
mov
dec
addb
imull
shlb
sub
stos
cwtl
test
andl
mov
es
adcl
lret
xor
rcrl
je
stos
call
cmpsl
adc
pushf
adc
or
aam
ja
mov
aad
in
lret
lret
cmpsb
shlb
push
add
lret
xchg
bound
imul
push
xchg
idiv
add
jecxz
push
push
pop
cmp
dec
push
int3
aas
mov
mov
cmp
leave
pop
push
nop
sub
jl
sub
enter
out
int
cmp
lret
std
das
push
pop
jmp
ja
xlat
and
dec
pop
push
mov
iret
cmp
cmpsl
int
and
add
gs
fadd
incb
aas
dec
sahf
test
clc
frstor
jecxz
or
mov
add
popf
stos
sahf
int3
loope
add
xchg
in
pop
in
lahf
mov
xchg
adc
jl
mov
repz
inc
pop
imulb
xor
push
addr16
inc
mov
jne
mov
sbb
jnp
jmp
pop
xchg
xchg
jae
xchg
xchg
out
push
mov
imul
daa
imul
roll
push
std
out
nop
jbe
rcrl
pop
push
sbb
sub
cs
inc
jns
and
movsl
and
das
xchg
loopne
xchg
xlat
test
mov
ret
xchg
jb
addr16
aad
sub
sub
add
jp
adc
out
dec
pop
and
fidivl
imul
inc
test
cltd
mov
mov
sar
jo
movsb
push
repz
adc
cmp
mov
cmp
test
cld
aad
xor
mov
sub
into
test
inc
mov
mov
pop
mov
out
mov
fistpll
testb
popl
inc
xor
ret
ja
rorb
mov
xchg
or
aaa
push
xor
jne
or
pop
cmpsb
push
loop
push
repnz
lds
lods
mov
mov
jg
jp
ljmp
fsts
mov
int
stos
xchg
sbb
es
imul
jo
mov
add
xchg
xchg
ds
inc
push
pop
movaps
jno
stos
add
ljmp
sarl
adc
add
adc
loop
out
sbb
shlb
push
xlat
fcmovnbe
shrl
pushf
jb
push
jb
mov
mov
fisttps
leave
add
pop
imul
out
imul
adc
arpl
cmp
pop
out
int
shl
cmp
mov
test
testb
cmp
es
cwtl
loope
aam
cld
mov
mov
inc
js
add
arpl
popa
outsb
cmpsl
adc
pop
push
mov
out
fmuls
inc
lea
inc
ss
jne
mov
xchg
xor
data16
aaa
fs
lret
and
and
jg
jnp
sub
incb
insl
loope
sbb
push
sub
or
lret
shll
into
dec
jo
xor
xlat
xor
insl
sbb
scas
cmp
out
xor
xor
cmpsl
pshufw
xchg
iret
mov
cmp
ss
jecxz
nop
xor
jo
pop
sbb
ja
out
add
sub
jno
mov
inc
fnstsw
inc
imul
inc
testb
pop
jle
arpl
andl
add
rcll
add
addl
mov
ja
nop
sbb
mov
jmp
mov
adc
dec
stos
xlat
shll
push
and
les
mov
into
xchg
mov
sub
movsb
xor
ljmp
sub
sub
pop
dec
cmp
inc
and
mov
and
sub
scas
adc
and
mov
cmp
xor
std
aas
stos
mov
test
sub
fnstenv
jge
push
sbb
xchg
xor
xchg
push
xor
dec
xor
jmp
movsl
idiv
test
adc
leave
and
mov
and
repz
pop
or
mov
sbb
iret
movsl
nop
pop
cwtl
test
dec
add
inc
in
pusha
add
jle
mov
mov
mov
jl
outsl
or
cmc
mov
add
test
clc
xor
imul
cmpsl
enter
push
jb
pop
inc
xlat
sbb
xlat
mov
scas
sbb
sbbl
pop
fwait
test
fistps
loopne
adc
mov
xor
mov
sbb
fdivs
pop
pop
mov
in
push
adcb
pushf
ret
mov
leave
pop
and
dec
inc
dec
scas
sbb
sub
or
pop
push
mov
in
sub
mov
adc
sbb
lods
mov
add
push
xchg
icebp
inc
or
pusha
repz
pop
iret
sbb
push
inc
push
arpl
call
stos
add
sbb
ljmp
dec
xor
in
pop
popa
cmp
shlb
outsb
pop
std
xor
bound
dec
out
push
jmp
enter
daa
rcrl
mov
dec
mov
lods
or
daa
sub
imul
fstl
sahf
push
dec
loope
adc
dec
popf
dec
xchg
lahf
inc
rorl
cli
mov
cmpb
pop
cmpsb
int
mov
xor
hlt
sbb
fmuls
inc
mov
push
dec
mull
xchg
sti
mov
push
sbb
ret
out
vmwrite
mov
push
add
rorl
dec
cld
sbb
fwait
stos
mov
leave
ret
testl
mov
pop
xlat
out
cmpsl
dec
jecxz
sub
xchg
into
movsl
pop
pushl
xchg
sbb
push
lock
adc
rol
mov
outsl
inc
dec
mov
mov
add
iret
sbb
pop
test
jns
shr
inc
inc
sti
stc
pop
es
pop
sub
mov
inc
mov
cs
clc
ja
insb
or
xchg
sub
push
cwtl
xchg
pop
stos
adc
mov
cmpsb
lods
jecxz
ja
divb
jo
push
xchg
movsl
mov
pop
sub
fidivl
adc
xchg
xor
adc
jno
mov
jno
scas
int
mov
aas
jge
into
iret
add
add
mov
enter
xor
enter
mov
jp
fs
xor
xchg
aaa
sbb
outsl
add
pop
imul
lds
hlt
out
xor
add
dec
or
mov
fcoml
pushf
pop
xchg
aas
test
pop
bound
mov
xor
aas
sahf
mov
add
aaa
add
bound
jp
fldenv
mov
dec
xchg
push
mov
imul
xchg
dec
stc
or
aam
enter
cmp
pusha
cli
mov
fdivrs
jnp
ja
push
test
pop
pushf
int
and
dec
jp
pop
cmpsb
sbb
in
sub
fidivs
jmp
cs
mov
shr
xor
mov
lock
mov
lock
sub
push
out
jg
stc
fsubs
mov
dec
adc
ret
imul
imul
mov
scas
repnz
icebp
pop
icebp
fidivrs
outsl
shlb
xor
xchg
push
adc
aad
cmpsb
adc
push
shlb
lgs
popf
fmull
jp
adc
xlat
adc
les
jno
xchg
repz
ja
or
add
cmp
dec
aam
mov
xor
pop
sbb
and
and
xor
mov
mov
loop
mov
jg
and
cmp
adc
xchg
or
shrl
xor
mov
jge
sub
jg
pop
mov
outsb
pop
jae
cmp
test
lret
sub
mov
int
data16
out
add
xchg
lock
aam
testb
jb
ss
mov
xchg
scas
clc
in
out
jns
jl
adc
sub
in
xchg
in
xor
in
and
cmp
pop
fmuls
imul
push
fwait
enter
lods
mov
in
movsl
mov
insb
jp
movzbl
jae
inc
mov
push
movsb
push
pop
sbb
and
push
lea
outsb
fidivrl
add
sbb
jg
pop
adc
xchg
xchg
dec
pop
push
stc
xchg
dec
lods
lret
jns
divb
mov
mov
aas
in
stos
push
jbe
fstps
je
jecxz
scas
arpl
faddl
test
push
xchg
loope
and
inc
inc
dec
cmp
sahf
xor
test
xchg
inc
fwait
xchg
cmp
scas
dec
ret
or
mov
inc
imul
or
mov
test
out
mov
push
ljmp
mov
mov
cmp
in
fldenv
scas
mov
popa
xor
jnp
push
scas
sti
data16
cmpsl
daa
jb
add
pop
fsubrs
inc
cmp
adc
lcall
adc
xchg
aas
push
inc
mov
cmc
xchg
pop
xchg
fstpt
add
push
adc
mov
xor
pop
loopne
leave
and
out
sbb
xchg
es
add
in
scas
cmc
add
dec
arpl
jbe
ja
mov
mov
adcl
aaa
shlb
push
testb
lds
stos
fwait
ljmp
ss
dec
push
arpl
lods
cmpsb
mov
mov
inc
or
inc
cli
lock
lret
cs
cmp
sub
jae
call
jae
mov
pop
gs
xorl
je
xchg
pop
mov
enter
push
jne
add
ret
xchg
imul
ret
test
mov
test
movsl
xchg
sub
or
and
test
arpl
xor
popa
roll
sbb
ficoml
adc
mov
sbb
lods
shll
mov
push
push
dec
jp
sub
loopne
cmp
call
mov
add
cmp
insl
jnp
jp
aad
or
shll
imul
mov
in
push
push
test
aam
inc
lret
ficoms
mov
mov
je
xchg
popa
fnstcw
push
shrl
dec
xlat
dec
mov
sub
inc
pop
push
mov
lods
pushf
cmp
pop
icebp
pop
push
movsb
ja
pop
aad
mov
mov
iret
das
jnp
mov
xchg
jecxz
jl
movsb
inc
jmp
ficomps
mov
rolb
enter
mov
movsl
mov
and
or
sbb
mov
jmp
or
in
add
fidivrs
in
inc
or
pop
jecxz
push
cmp
cld
call
push
jl
addr16
jge
out
clc
xchg
test
nop
inc
adcl
sub
dec
leave
cli
popa
fnstsw
cmp
inc
bound
es
into
and
in
xorb
jae
adc
fisubs
mov
mov
inc
jecxz
lods
jl
jbe
cs
repz
pop
xchg
adc
sbb
xchg
push
inc
pop
loopne
xchg
xor
pop
jae
insl
and
inc
ret
lea
pop
nop
outsb
adcb
sahf
sahf
cld
xchg
das
js
jne
call
fdivs
int3
popf
add
shll
or
pusha
sahf
mov
insl
sti
inc
inc
dec
pop
cmp
les
pop
stc
add
xor
add
das
inc
call
test
outsb
dec
loope
maxps
dec
stos
cmp
xlat
jg
and
sahf
jbe
das
lods
pop
jnp
les
xor
jno
jle
inc
cwtl
dec
loop
push
loopne
dec
mov
push
lret
jecxz
sbb
push
hlt
rcrb
xchg
sbb
addr16
cmp
mov
xchg
lock
or
popf
xorb
int
sub
jl
popf
dec
out
rol
dec
test
xchg
xchg
pushf
mov
xor
xchg
jne
xchg
je
shr
and
hlt
mov
sbb
xlat
mov
lock
mov
mov
add
mov
push
rcrb
movsl
pop
loopne
mov
jle
repz
sbb
cmp
outsb
dec
mov
xchg
lds
out
adc
adc
xchg
pusha
mov
push
push
stc
testl
jns
xchg
pop
les
pop
jo
push
out
mov
ret
mov
cmpl
nop
lahf
pop
push
xor
aaa
movsl
adc
or
shl
xchg
arpl
add
cs
scas
jb
fucom
into
xor
aam
add
mov
add
out
mov
or
sbb
or
sbb
cmp
mov
mov
addr16
imul
data16
shrl
jl
out
push
push
push
push
jle
out
pop
outsb
mov
push
xor
lret
sub
inc
push
nop
scas
pop
push
fnsave
push
scas
mov
sti
inc
mov
cmp
inc
jle
jbe
fcmovnb
jae
mov
fdiv
push
pop
mov
scas
out
repnz
adc
movsl
leave
xchg
push
lahf
push
imul
xchg
lahf
jb
ss
add
jne
push
je
daa
out
xor
jno
jb
xor
scas
negl
xchg
lcall
push
sub
add
bound
mov
cmp
and
jnp,pt
pop
push
and
ja
pop
mov
adc
popf
aas
cmpl
mov
adcb
adc
xor
jns
xlat
xchg
mov
inc
dec
push
or
pop
xor
mov
fldcw
cmc
dec
sbb
movsl
out
popf
xor
movsl
lock
pop
sbb
and
fnsave
pusha
outsl
mov
loop
mov
sub
xor
data16
xchg
cld
inc
mov
mov
dec
out
xchg
lahf
popa
mov
and
ja
sbb
lds
jmp
cmp
push
movsb
test
push
xchg
or
rol
push
xchg
pusha
and
nop
inc
sub
push
mov
sahf
dec
cmpsb
cwtl
jnp
and
int3
je
cmpsb
jno
call
push
sbbb
mov
push
sbb
and
mov
aam
les
xchg
xchg
test
mov
adc
push
nop
das
mov
rcll
in
es
or
inc
rep
pop
stos
stc
enter
hlt
or
in
pop
add
sahf
add
sahf
out
inc
not
add
outsb
jae
out
leave
push
adc
mov
fs
pop
inc
jo
aad
xchg
mov
ljmp
xchg
mov
add
push
daa
pop
dec
and
push
enter
xlat
hlt
push
sbb
cmpsl
mov
test
lcall
jmp
decb
dec
cmp
js
push
and
and
rcll
test
xchg
sub
mov
xchg
or
dec
fcomps
sub
xchg
mov
or
mov
adc
xchg
insb
es
daa
out
push
jo
add
pop
fiaddl
insb
js
jne
push
out
loope
mov
gs
sub
rolb
sub
push
inc
pushf
insb
pop
scas
in
mov
imul
push
rcrb
push
sub
cmp
rcrb
das
cmp
add
stos
lea
addr16
mov
inc
gs
aaa
mov
and
arpl
push
mov
lret
fdivrl
mov
aad
aas
xor
insl
push
aaa
jne
xchg
cmp
fists
call
pop
fildll
mov
sbb
test
ljmp
les
pop
fisubrs
push
jl
int
dec
dec
orb
push
push
mov
and
aad
addr16
orb
arpl
out
xor
mull
rolb
adc
adc
data16
xchg
test
xchg
mov
pop
pop
ljmp
pop
sbb
add
test
rclb
adc
sub
cmp
add
hlt
add
cltd
push
xchg
mov
sahf
inc
pop
arpl
or
push
popf
pop
mov
inc
jae
hlt
xchg
ds
cmp
fwait
inc
insl
add
add
or
lock
or
xchg
sbb
stos
fxtract
pusha
ret
xchg
inc
lea
cltd
int
call
and
or
dec
and
inc
out
sbb
cmc
rol
pop
add
notb
lds
fidivrl
cmp
xchg
add
jnp
icebp
and
push
cld
mov
mov
dec
jnp
out
rclb
ret
rcll
je
xlat
adc
fbstp
scas
pop
push
mov
movsl
mov
cli
sbbl
pop
cld
or
xchg
mov
push
hlt
into
mov
sarl
data16
mov
push
mov
push
push
pop
sbb
or
xlat
mov
fadds
sbb
and
push
sbb
das
es
pop
lret
daa
ss
lret
or
mov
lock
out
push
jp
jnp
mov
mov
out
in
aaa
inc
imul
xchg
and
mov
repnz
jnp
xor
sub
xchg
or
mov
mov
shr
mov
fistpl
mov
inc
push
mov
pop
pushf
clc
xlat
xchg
aam
ret
mov
std
push
enter
in
sub
cmp
sbb
leave
mov
popf
cmp
mov
scas
mov
jnp
call
ret
xor
in
adc
clc
mov
scas
push
push
popf
push
sti
cmp
mov
sub
adc
and
js
into
rcl
bt
sbb
mov
out
cmp
fmuls
aad
inc
mov
xchg
xor
sub
in
or
xor
push
nop
popf
pop
sbbb
adc
inc
pop
aas
loope
xlat
cmpsb
mov
jnp
fsubl
aad
inc
ja
movsb
outsb
inc
dec
lcall
cmp
inc
cmp
push
push
jbe
int3
or
pop
in
bound
dec
mov
jnp
test
jge
fs
ret
sahf
inc
mov
dec
xchg
add
push
add
mov
adc
repz
mov
aas
int3
sbb
in
es
mov
idivl
cmp
xor
dec
xlat
mov
add
mov
mov
mov
fistl
mov
mov
sub
or
aad
nop
arpl
shll
rolb
fldenv
xchg
push
mov
sub
xchg
pop
mov
or
outsb
mov
cmp
movsl
add
pop
loop
xchg
and
sti
ret
sahf
int3
int
lret
roll
lea
push
push
das
frstor
add
sub
mov
xor
mov
jp
jae
mov
lods
test
ss
aad
dec
scas
sub
adcl
or
sub
aas
push
xchg
inc
inc
out
mov
testb
mov
dec
xor
add
adc
mov
push
push
imul
xchg
bound
loopne
mov
test
jbe
sbb
xor
subb
cli
out
rcll
in
fsubrl
and
mov
jnp
sbb
fildll
mov
and
das
push
movb
dec
ds
push
mov
and
repz
fsub
pop
sahf
aad
inc
add
flds
inc
sbb
dec
fisttps
sbb
insl
orb
sbb
dec
lea
and
or
imul
lea
loopne
nop
mov
pop
or
push
adcb
arpl
cmc
je
insl
imull
out
and
sub
pushf
xchg
mov
mov
mov
das
push
pop
pop
loop
jns
or
sbb
dec
outsb
jne
dec
je
adc
repnz
inc
insb
insb
jl
xchg
pop
xchg
lods
and
mov
ret
and
cmpsb
call
cld
mov
add
mov
or
pushf
fs
loope
hlt
mov
popa
shl
mov
lret
cmpsb
mov
loope
inc
test
xor
jge
jmp
mov
cmp
xor
jae
push
shlb
inc
adc
aaa
sbb
mov
mov
sarb
insl
scas
push
arpl
push
lock
ja
sti
int
adc
and
les
inc
hlt
popa
mov
hlt
and
and
icebp
loopne
shlb
pop
mov
add
adc
dec
adc
sbb
xor
sub
stos
sti
int
mov
je
mov
stos
mov
or
jbe
or
push
cmc
les
lret
iret
nop
adc
xchg
pop
add
sti
shll
inc
clc
mov
mov
pop
jl
jno
daa
xchg
push
out
mov
scas
imul
jne
aas
notb
inc
jae
sahf
lods
fwait
cmp
xor
add
repnz
dec
pushf
ret
push
ja
cli
scas
mov
and
mov
test
ljmp
dec
iret
sub
arpl
and
xchg
mov
stos
xchg
inc
lock
inc
sub
shl
andb
call
leave
ja
mov
sub
xor
out
and
cmpsb
push
pop
add
out
fwait
mov
iret
test
adc
into
xchg
mov
push
pop
cmp
mov
mov
loope
dec
leave
push
rorb
cmc
jns
jbe
int
sbb
lcall
dec
sti
inc
jno,pn
sbb
adc
and
in
cmc
push
xor
call
xor
stc
int
lret
fucomip
std
pop
push
in
or
push
pop
cli
and
daa
fldenv
xchg
sub
loope
push
cmc
push
jo
jle
pop
mov
out
sub
ret
fidivs
adc
arpl
in
data16
push
movsl
and
cmpsb
or
cli
lcall
ficoml
cltd
and
xchg
ds
add
std
sub
xchg
das
fstps
push
cmp
inc
add
mov
add
imul
add
cmp
jl
mov
jmp
or
or
hlt
sbb
and
cmc
outsb
mov
sub
push
std
and
jo
ss
pop
call
icebp
lcall
sbb
imulb
xchg
clc
aad
pop
in
data16
inc
cmpsb
push
pop
iret
mov
mov
xchg
insl
insb
jae
ret
stos
jg
test
hlt
shl
clc
rcr
pop
les
or
xchg
inc
lds
xchg
mov
out
adc
mov
xchg
loope
push
mov
testb
lret
cltd
jbe
add
sub
lret
fdivr
dec
fsubrl
in
lcall
mov
pushf
jg
mov
dec
outsl
add
dec
daa
jae
mov
mov
mov
popf
xor
jg
sub
cmp
xchg
sbb
jmp
adc
lret
stos
push
xor
pop
dec
sub
addl
loope
ret
shrl
mov
mov
jge
pop
test
popa
or
add
xchg
mov
mov
adc
pop
aaa
mov
hlt
loope
aaa
out
add
stos
rclb
xchg
push
push
cld
adc
in
pop
cmp
push
sub
pop
jle
loopne
rcr
lcall
adc
data16
xor
sub
xchg
xor
cmp
fnstsw
lea
adc
outsb
jno
sbb
mov
jmp
mov
cmpsb
mov
pop
and
xor
mov
mov
sbb
dec
mov
in
scas
cmc
adc
jg
repnz
jno
je
stos
fmul
mov
jbe
mov
xchg
mov
aas
mov
inc
jg
mov
pusha
clc
jno
adc
cmp
insl
loop
or
shll
push
fwait
popa
dec
lods
outsb
xchg
cmp
adc
pop
out
int3
jmp
or
sbb
ret
adc
repnz
pusha
jb
mov
pop
push
les
aas
sbb
mov
imul
mov
xchg
lea
fwait
jg
es
inc
mov
xlat
or
daa
scas
jecxz
lcall
jg
repz
cmpsl
jle
loopne
clc
xchg
or
iret
outsl
mov
sbb
jb
cmp
push
cmp
or
aam
sti
into
push
ss
mov
lods
mov
rorb
insb
aad
iret
stc
mov
cmpsl
mov
mov
fucomi
adc
add
icebp
insb
push
out
addr16
xchg
pop
and
fbld
data16
outsb
cmpsb
sti
lock
mov
cmp
arpl
insb
xor
addr16
ret
clc
add
xor
mov
call
push
mov
std
fmull
jne
xchg
ficoml
xchg
mov
lods
xchg
stc
es
mov
adcl
sub
fistps
std
dec
push
inc
xor
cs
xor
add
adc
jl
lods
fwait
or
sub
call
jno
xor
imul
ds
or
dec
lret
incb
sbb
jecxz
xor
mov
cmp
mov
add
mov
cmp
add
loopne
push
pop
lock
adc
lret
divb
in
xor
mov
call
les
imul
xor
lcall
jecxz
std
out
and
lcall
push
and
aam
stos
test
lods
lock
shll
jecxz
in
pop
ret
fdivrl
push
int
inc
mov
push
movsl
jo
cmp
pusha
pusha
adc
negl
pop
aas
push
or
fs
pop
ds
or
sbb
movsl
inc
mov
in
hlt
mov
and
icebp
mov
and
mov
outsl
cmpb
push
jns
test
out
add
mov
scas
cli
and
sub
mov
pop
pop
pop
cmp
divb
fbstp
shrb
and
push
icebp
lods
mov
sbb
mov
jmp
sub
lret
mov
test
pop
jb
test
xchg
ljmp
and
rorb
mov
and
sbb
jle
movsb
pop
cmp
mov
sbb
cmp
daa
pop
xorb
sub
inc
adc
sbb
test
mov
fstpt
pop
and
mov
fisttpll
and
test
bnd
and
insb
jge
push
mov
sahf
jg
pop
js
inc
push
out
nop
sti
out
xor
loopne
mov
aas
fdivs
jne
jp
je
inc
push
xchg
dec
lahf
mov
dec
lret
inc
jae
insl
sti
insl
pop
daa
adc
or
push
push
test
movsl
scas
jns
mov
clc
pusha
inc
sub
sub
and
enter
movsb
loop
clc
imul
push
adc
pop
pop
inc
cmp
sbb
and
mov
mov
aad
imul
sti
imul
cmp
or
pop
outsb
and
adc
push
mov
fwait
xchg
in
enter
das
pop
push
and
popa
xchg
pop
or
inc
imul
leave
mov
aad
cmp
push
or
icebp
inc
inc
icebp
xchg
or
xlat
in
mov
in
mov
shlb
roll
int3
xor
test
and
in
and
xor
idivb
mov
nop
das
cmp
addr16
inc
sbb
mov
imul
clc
mov
mov
cwtl
xor
sub
xchg
cli
cmc
push
sbb
nop
lcall
aaa
ljmp
in
cld
xor
iret
insl
or
bound
fisttpll
xor
add
out
ret
addl
ja
int
ds
mov
xchg
inc
adc
stos
cmp
jge
scas
push
jne
jmp
mov
popf
mov
jmp
or
in
rclb
popf
push
mov
or
fmuls
lods
repz
and
xchg
mov
rclb
int
jae
movsb
insl
roll
and
out
cltd
es
mov
out
outsl
test
sub
fisttps
dec
sub
cmpsb
sar
mov
test
mov
cli
je
stc
pop
pop
jmp
cmpsb
xchg
add
jnp
in
add
push
push
xorl
jecxz
cwtl
and
mov
adcl
push
or
xor
sub
fnstsw
hlt
mov
int3
push
dec
dec
lret
shrb
or
xchg
sti
in
jnp
cmc
dec
ss
in
sub
lcall
out
jb
ret
mov
loopne
mov
xchg
inc
cmp
xchg
sub
jbe
loopne
fcomip
fstpl
cmp
imul
and
ss
mov
push
or
movsl
push
xor
addr16
ret
push
push
pop
add
cmp
pop
shrl
cli
inc
arpl
call
pop
mov
bound
ds
sbb
setl
and
notl
and
repnz
push
mov
je
in
out
pop
jle
lock
mov
xlat
push
mov
or
pop
mov
loopne
add
andb
fs
mov
popf
adc
or
cli
outsl
out
lret
stc
dec
roll
cli
xlat
movsb
jb
shlb
movsl
inc
mov
lahf
and
pop
outsl
sub
push
xchg
cmp
or
mov
sub
lcall
or
addl
cmp
repnz
mov
jae
dec
testl
add
cmc
pop
sub
pop
cwtl
or
addr16
pop
jno
jns
mov
push
adc
test
nop
push
push
and
sbb
nop
pop
out
cltd
mov
sbb
or
sub
xlat
fcoms
adc
jo
leave
sub
dec
insl
je
sub
sub
xor
call
mov
mov
outsb
test
fmuls
pop
mov
test
fcmovnb
scas
xchg
mov
sahf
sbb
sub
mov
inc
dec
lea
sbb
je
and
mov
out
mov
add
leave
push
jle
push
dec
out
cmp
adc
psrld
popf
call
pop
and
les
aas
mov
adc
push
adc
mov
sbb
and
leave
idivl
jle
xor
addr16
das
arpl
ja
imul
sbb
fidivs
mov
mov
cmp
sahf
enter
ficomps
and
pop
inc
out
pop
in
rcr
jbe
cmp
popl
adc
or
or
fisubrs
mov
xor
xchg
adc
adc
pop
leave
aad
cmpsl
xor
pop
test
jle
xchg
xchg
jl
pop
jmp
cmpsb
mov
pop
scas
jo
scas
arpl
pop
jns
popf
outsb
inc
jmp
jmp
fwait
or
push
push
sarb
pop
lods
mov
mov
aaa
movsl
and
adc
sub
xorl
and
and
jae
dec
sub
insl
or
cli
cwtl
xchg
pop
xor
setle
sbb
hlt
xchg
mov
or
push
or
mov
lret
inc
bound
or
inc
pusha
and
push
ja
inc
test
and
loopne
test
xchg
push
test
mov
div
pop
es
call
push
dec
jbe
dec
inc
pop
arpl
in
iret
das
sub
dec
shlb
mov
insl
aaa
lock
mov
arpl
test
mov
ljmp
aad
outsl
loopne
idivl
mov
out
rcll
or
sar
cmp
shll
nop
insb
rorb
test
imul
aad
pop
mov
leave
pop
jae
cmp
jle
mov
xchg
test
sbb
cmp
xor
ret
cwtl
jae
sbb
push
and
stos
xchg
and
cmp
or
lods
xor
jnp
lds
setp
add
lret
imul
push
and
pop
or
mov
jne
data16
dec
sahf
pushaw
iret
push
adc
int
mov
mov
mov
lahf
lahf
mov
sbb
xor
mov
dec
fstpt
mov
int3
pusha
jno
adc
adc
icebp
sti
xchg
cmc
les
test
lret
int3
adc
rcl
push
and
iret
xchg
ds
cmp
add
insl
stos
fld
cld
ss
lret
int
push
or
ret
adc
sub
sbb
outsl
shr
rol
popa
icebp
rcrb
sub
rorl
rcrb
adc
pop
data16
cmp
push
sub
push
cmpsl
jnp
into
inc
imul
xchg
rcr
addr16
mov
lahf
push
in
adc
repz
test
cmp
mov
cmp
and
adc
cli
and
stos
imul
jecxz
sub
popf
dec
sbb
insb
je
inc
sti
pop
sub
negb
xor
xchg
jle
or
jne
add
int3
jb
imul
int3
pusha
xchg
cmp
xorl
xor
inc
ja
pop
pop
push
imul
sahf
out
push
popf
jecxz
cmp
fdiv
lods
je
sub
int
jmp
insl
jns
call
ret
fwait
test
cmp
jp
sub
test
mov
mov
sbb
push
dec
and
xchg
lcall
dec
and
and
fsubrp
jl
faddl
aas
jmp
xor
sarb
loopne
add
rorl
jmp
repz
ret
adc
dec
int
jecxz
in
jmp
sbb
inc
or
fldcw
outsl
lahf
jl
inc
mov
cltd
bound
mov
xor
je
das
add
out
sahf
iret
pop
leave
xor
jle
and
sti
dec
repz
ss
in
loop
mov
xchg
mov
jecxz
std
test
mov
xchg
sahf
mov
gs
lods
mov
jge
mov
enter
fisubs
fcompl
sar
out
mov
rorl
int3
repnz
and
push
adc
lret
in
sbbl
loope
call
add
inc
mov
in
pop
jl
and
push
aad
xchg
movsb
pusha
sbbb
push
jmp
in
icebp
es
std
fadds
adcl
sub
int
mov
icebp
outsb
repz
ja
clc
jns
out
inc
jb
cmp
add
mov
test
fadd
mov
fldt
sub
daa
es
and
xor
and
stos
push
loope
pop
fisubrs
idivb
popa
pop
xor
mov
imul
mov
or
pop
xor
mov
es
call
mov
add
shll
rolb
das
fs
xlat
jmp
adc
push
sub
in
or
mov
jnp
push
push
decb
mov
addr16
mov
popa
movsb
nop
ret
add
cmp
popf
sbb
into
xchg
fwait
add
ret
cmp
jmp
fldl
or
dec
sub
stc
mov
fcompl
pop
loopne
mov
sub
out
mov
push
lods
movsb
ficompl
fistl
or
test
sahf
jg
out
fcomps
add
jne
popa
xchg
cltd
xlat
xor
mov
pusha
push
fwait
ret
in
in
pop
add
rcr
inc
mov
xchg
sbb
jp
movsl
xchg
mov
cmp
cmc
jl
inc
mov
loopne
fiadds
imul
pop
mov
xor
push
inc
mov
sbb
mov
call
lret
jg
mov
fmull
test
push
or
xor
push
sbb
jnp
jge
add
pop
testl
rorb
and
inc
push
jns
lahf
inc
enter
add
mov
mov
add
neg
add
adc
xor
xchg
lcall
pop
mov
mov
or
jne
testl
sbb
std
jne
xor
mov
push
or
shrl
and
mov
jp
adc
adc
or
cmpb
sahf
dec
roll
jno
outsl
push
int3
fisttpll
sub
fincstp
lret
cmp
iret
gs
jb
sbb
xor
in
mov
repz
adc
sbb
cmp
mov
or
mov
jnp
shll
and
sub
xchg
jae
mov
jge
cld
pop
dec
push
adc
cli
addr16
dec
sbb
add
les
test
cli
ret
pop
hlt
arpl
aaa
jl
inc
cwtl
mov
dec
faddl
xchg
insl
push
lods
mov
pop
cmp
mov
dec
ret
and
stc
mov
or
inc
jmp
xchg
sbb
cmc
xchg
add
lea
sti
cs
mov
mov
sub
roll
add
leave
adc
mov
sub
loop
and
data16
pop
aad
fdivs
mov
adc
xor
and
mulb
test
test
iret
xor
cwtl
sub
stc
adc
jmp
js
imul
push
lcall
subb
or
xchg
loopne
pop
cmp
iret
pop
sti
outsl
mov
jmp
pop
jnp
or
cmp
xchg
in
out
out
mov
stc
mov
mov
imul
lds
jae
ja
mov
insl
fcoms
jbe
dec
jmp
sbb
push
mov
iret
fucomip
popa
test
sti
inc
push
rol
inc
xchg
sub
push
or
divl
ja
mov
inc
push
mov
inc
push
xor
jecxz
in
int
and
xchg
out
cmp
or
mov
gs
cli
loop
stos
jmp
gs
jae
fadds
aas
leave
loopne
push
icebp
xchg
andb
add
fs
jg
add
jbe
clc
fidivrl
aam
pop
inc
loopne
stos
fwait
mov
push
push
cwtl
adc
scas
inc
jl
mov
test
sbb
test
adc
subb
shl
pusha
popf
hlt
outsl
int3
mov
ss
sbb
loop
test
push
divl
sub
mov
adc
mov
jo
jl
xchg
xchg
jecxz
push
inc
popa
aas
pop
xchg
aaa
ds
cwtl
es
mov
xchg
pop
inc
fs
push
push
scas
and
cmc
xchg
mov
cmpb
iret
mov
dec
sbb
xchg
xor
mov
xor
jno
cmpsb
scas
movsb
and
add
jp
push
mov
xor
push
push
jmp
mov
adc
sbb
cmp
stc
inc
or
jecxz
not
push
gs
push
cmp
jg
movl
test
push
lcall
xchg
fwait
dec
sub
cmp
or
and
popf
jmp
ja
mov
in
mov
lds
faddl
getsec
push
mov
xchg
out
push
xor
aad
cwtl
mov
fpatan
dec
xchg
inc
rcr
loop
cmp
sbb
fld1
xor
pop
sbb
int3
fs
cmpsl
loopne
test
nop
dec
jge
data16
ja
test
stos
jle
dec
fs
push
pop
popa
xor
add
mov
in
in
fstp
mov
lea
loop
stos
mov
dec
and
bound
xchg
mov
lods
jge
into
push
cltd
movsb
push
aad
loop
movntq
out
push
into
out
fcomi
mov
cltd
ljmp
cltd
sub
mov
or
cli
lods
popf
fldenv
out
scas
into
clc
cmp
outsb
lea
js
xor
or
out
incl
frstor
roll
cmp
fsubrl
xchg
adc
shlb
dec
mov
div
imul
jge
add
sar
test
jmp
adcb
dec
xchg
mov
in
fcoms
das
push
adc
lods
ja
pushf
lds
fwait
sub
push
and
or
out
jns
xchg
imul
or
hlt
lret
js
jecxz
enter
cmp
add
mov
in
icebp
xchg
sub
push
cwtl
std
insb
push
mov
sbb
xchg
xchg
roll
out
and
cmpsl
dec
xchg
mov
xchg
les
cmp
aaa
mov
dec
jnp
aad
lock
pushf
movhlps
leave
fstps
pop
imul
pop
jmp
sbb
mov
inc
adc
fsts
inc
iret
jns
lods
cmc
das
in
mov
sub
and
pusha
push
jl
and
sbb
adc
dec
adc
or
dec
mov
subl
jmp
sbb
lods
sbb
pop
or
popf
and
in
les
cli
mov
insb
loope
ljmp
aas
xor
mov
sub
or
push
mov
js
sub
lret
jbe
mov
xor
lea
cli
mov
pop
insl
cmp
sbb
leave
push
mov
int
cmp
sahf
mov
pusha
pop
orb
xlat
push
aaa
and
jle
int
adc
scas
sub
scas
ja
fwait
jae
mov
popf
or
xor
ja
inc
pop
cs
push
jmp
jp
not
add
jmp
inc
fisttpll
or
push
jns
xchg
mov
and
std
shll
iret
pop
aam
mov
mov
bound
push
shrb
shrb
test
cmp
sub
addr16
mov
or
in
mov
das
cmp
fcompl
or
mov
repnz
mov
iret
test
test
lea
fstpl
sub
lea
scas
push
mov
fsts
inc
cli
sbb
mov
jne
ja
inc
dec
mov
mov
mov
dec
adc
jle
data16
xchg
jae
fmulp
outsl
ljmp
int
bound
decl
pushf
ret
mov
sbb
rclb
sub
push
or
xor
lock
insl
in
or
mov
dec
nop
insl
pop
inc
jg
or
das
dec
pop
popf
movsl
pop
xor
lcall
add
xchg
add
pop
in
gs
xchg
js
mov
dec
cli
jnp
lret
sbb
aaa
mov
push
loop
hlt
and
sbb
cmp
mov
pop
roll
push
xchg
outsb
jp
cmp
sti
cli
sti
call
vmwrite
push
pop
out
sub
adc
inc
mov
aam
shrd
loopne
movsl
add
inc
jle
mov
orl
jl
filds
ljmp
fucomp
inc
add
icebp
mov
mov
jb
andl
ljmp
repz
sahf
dec
gs
lock
and
lcall
andl
ficomps
repz
ret
int
inc
movsb
bound
rcll
adc
adc
mov
enter
repnz
rolb
xchg
ret
add
ret
inc
pop
ja
add
xchg
or
pop
xor
xlat
inc
shlb
inc
imul
jns
adc
or
mov
adc
faddl
test
sbb
dec
popa
jnp
iret
mov
sub
mov
dec
mov
xlat
cmp
shll
push
xchg
jns
sbb
scas
out
mov
es
jb
jno
int3
adc
xchg
cmp
add
cmpl
push
test
or
mov
int
xrelease
subl
xchg
adc
cs
pop
xor
mov
stc
shl
loope
repz
and
test
jb
push
inc
lods
xor
dec
push
jg
lret
in
insl
dec
shll
scas
xor
cmp
sbb
outsl
fldt
ja
loope
cmp
sahf
cld
push
xchg
ss
and
inc
push
jle
pop
add
jmp
in
or
fstps
mov
xlat
outsl
test
mov
push
out
mov
sbbb
xor
cltd
xor
std
dec
or
cmp
test
daa
nop
adc
lret
push
jge
pop
add
leave
jmp
pop
repnz
push
cmp
and
jbe
sbb
scas
cli
jmp
push
jmp
js
js
cmovl
cwtl
lret
xchg
imul
sbb
outsl
mov
mov
jae
inc
pop
iret
adc
add
inc
aad
nop
xor
push
or
mov
jmp
cmp
inc
mov
rcrb
push
das
pop
and
ficompl
mov
push
imul
call
daa
in
movsl
jo
xor
inc
lds
push
pop
jb
mov
mov
std
cmp
and
lea
xchg
jle
mov
je
mov
xchg
fs
mov
neg
dec
xchg
cwtl
push
push
insl
pop
sub
cld
sbb
push
fsubrl
movsl
add
inc
xchg
sbbl
fisubl
loope
or
xchg
xor
mov
in
inc
movsl
jo
cmp
outsl
in
xor
jle
mov
xchg
push
sti
inc
dec
add
pop
sbb
inc
xchg
jle
in
pop
jo
leave
gs
out
jae
add
mov
dec
fdivrs
push
fs
mov
mov
dec
shrb
jl
fs
add
mov
xchg
loopne
pop
and
jae
fs
mov
sbb
hlt
inc
xor
jnp
fbstp
rcr
xchg
dec
cmp
mov
into
pop
cmp
je
data16
sub
mov
inc
lea
push
xor
js
add
mov
insl
ss
jo
test
cmp
xchg
xchg
aaa
pop
mov
imul
mov
jns
push
out
rclb
jl
dec
aaa
xchg
add
xchg
sbb
lds
inc
mov
cli
pop
xchg
pusha
test
xorb
push
cmp
lcall
and
dec
jg
mov
pop
call
xchg
jmp
adc
inc
shrl
leave
test
mov
cs
mov
scas
xor
leave
bound
pusha
dec
jo
es
out
out
mov
inc
outsl
dec
mov
jno
pop
pop
pop
mov
inc
shlb
hlt
add
mov
movsb
cmpsl
lods
lret
mov
cmp
sbb
loopne
jl
push
insl
jae
mov
imul
xor
notl
cmp
and
inc
pop
mov
iret
dec
mov
xchg
mov
mov
xchg
sarl
fildl
call
cmp
push
loopne
push
adc
or
imul
dec
daa
xchg
lods
mov
dec
xor
and
jnp
sahf
sub
and
fcoml
push
mov
ret
test
bound
cmp
adc
mov
jo
gs
test
xor
mov
movl
imul
cmp
mov
add
xchg
mov
out
aaa
inc
lods
jecxz
inc
cmp
add
mov
xchg
cmp
outsl
cmc
stos
adc
mov
dec
inc
pop
pop
xchg
repnz
cli
adc
fnstsw
mov
addr16
pop
fbld
rcrb
shrl
mov
das
or
cmpsb
xchg
mov
stos
pop
pop
lods
mov
repnz
push
push
jl
test
fsts
out
add
ljmp
fidivl
or
lret
inc
mov
push
stc
test
fwait
outsb
jae
push
jmp
or
cld
cwtl
mov
les
data16
loop
mov
mov
mov
xchg
loope
push
mov
mov
pusha
cmpsl
pop
sahf
int3
inc
jnp
mov
fiadds
mov
mov
int
lock
mov
das
xchg
or
shll
inc
insl
lock
xor
dec
sbb
sbb
lods
fistps
leave
xor
stos
mov
adc
or
ficoms
mov
arpl
loope
ret
sub
popa
and
jge
and
inc
xlat
shll
cmp
and
std
sub
int3
pop
sbb
insb
or
mov
shll
hlt
data16
xchg
add
aaa
repz
and
inc
ror
push
gs
mov
pop
test
arpl
dec
mov
sbb
mov
repz
pop
and
cmpsb
fildl
xor
xchg
inc
inc
cmp
test
pop
aam
sbb
add
jb
cmc
hlt
jnp
mov
cmpsb
pushf
leave
icebp
or
loopne
or
mov
cs
cs
sbb
jge
mov
popf
adc
cmpsb
xchg
dec
in
or
dec
cmp
jmp
rcrb
push
mov
cmpsb
dec
push
jl
pop
jns
data16
lret
push
sub
dec
call
mov
iret
mov
popf
fidivs
sub
pop
and
pop
ds
scas
scas
rorb
add
aad
cmp
add
inc
sub
pop
inc
xlat
xchg
push
ds
js
inc
outsl
or
cs
add
pop
fistpll
cmpsl
xor
decl
in
int
out
in
pop
adc
xchg
roll
add
dec
or
jnp
and
push
jg
in
mov
rcrb
mov
sti
dec
sarb
ja
shll
and
push
outsl
mov
and
pusha
sahf
shl
sbb
ret
mov
cmpsb
outsl
push
pop
mov
test
xor
add
mov
mov
push
repz
sbb
js
inc
xchg
xchg
jp
jb
int
test
out
or
adc
sbb
pop
jns
pop
dec
test
imul
stc
repnz
sbb
test
adc
shlb
fmuls
cmp
pushf
dec
xor
sub
test
cltd
loop
add
and
icebp
aam
xor
lds
roll
adcl
jo
bound
icebp
xchg
mov
fcomi
pop
fidivrs
inc
mov
sbb
imul
push
inc
loopne
nop
ss
stc
mov
leave
mov
xchg
lock
jnp
pop
push
mov
pop
push
lods
xchg
cmc
pop
lock
dec
lods
aad
cltd
clc
mov
faddl
mov
cmp
sbb
sub
mov
aaa
mov
cmp
pop
fwait
push
sub
jmp
notb
in
pop
nop
fwait
movsl
addr16
sbb
mov
cld
mov
je
pop
imul
test
cwtl
and
ret
sub
sbb
pushl
pop
clc
cmp
out
outsb
cmpsl
ret
fidivs
cmc
testl
adc
lods
push
pop
test
push
sbb
js
nop
les
push
xchg
shr
imul
out
inc
int
repnz
imul
and
jno
mov
dec
cmp
pop
mov
xlat
movsb
sub
inc
loop
push
repnz
mov
shlb
rcll
cmp
push
cmp
sbb
fdivrl
dec
and
sbb
in
sub
pop
pop
dec
sarl
pop
sub
bnd
fs
push
push
add
and
mov
add
mov
je
inc
lret
or
pusha
out
mov
out
lcall
mov
mov
imul
fwait
enter
rcll
dec
fdivl
repz
inc
pop
add
cmp
push
pop
fisttps
inc
lea
cltd
add
and
lea
pop
js
xchg
loopne
int3
test
push
lret
ficoms
xchg
xchg
fnstsw
xor
test
mov
lods
insl
or
ja
mov
cmp
xchg
xchg
lcall
xchg
pop
push
or
and
lea
mov
sbb
cmp
movsb
mov
sbb
mov
xchg
pop
cmp
js
xchg
dec
repz
cmp
lret
or
xor
and
pop
pusha
cld
std
hlt
add
xor
xchg
inc
mov
les
mov
inc
ret
aam
cmp
and
add
sbb
sar
outsl
push
pusha
lock
cltd
xor
sub
call
push
fcos
adc
push
sub
in
jne
add
rcr
sub
mov
aam
or
lcall
scas
es
dec
mov
out
outsl
fucom
jecxz
or
enter
jo
aam
fistl
mov
inc
push
or
loope,pt
inc
xor
mov
xor
std
rorb
fldt
ret
bound
mov
xor
xor
repz
or
adc
movsb
and
ret
imul
dec
clc
rorl
repnz
es
jo
lock
or
push
sbb
mov
xchg
cltd
outsb
or
jbe
daa
jg
fistpll
jno
adc
insb
adc
mov
popl
mov
loope
imul
xor
xchg
push
jmp
lret
mov
adc
fisubrs
xor
sbb
out
frstor
sub
es
add
inc
jl
aad
mov
mov
out
out
push
sub
ror
mov
outsb
arpl
cmc
lret
xchg
cmpsl
add
adc
xchg
cmp
mov
pop
or
loope
or
aas
jmp
loope
or
les
in
sub
pusha
loopne
xor
inc
dec
jge
adcl
jns
inc
lret
lret
and
push
jge
pop
gs
ss
xchg
and
inc
mov
js
movsb
mov
xor
xor
mov
dec
and
pop
dec
js
pop
or
fcoms
lcall
pop
enter
in
jae
sub
fs
lcall
xchg
mov
bound
jns
push
repnz
mov
lahf
orb
dec
ret
ret
xchg
mov
pop
jne
jp
and
nop
iret
push
pop
sbb
and
pop
sbbb
dec
cmp
out
and
stos
movsl
and
sub
jmp
out
mov
leave
subb
out
cli
cli
jl
mov
pop
sti
repz
mov
push
jl
xor
shlb
cmp
pop
push
dec
push
sahf
imul
mov
sub
cmp
scas
fdivr
and
movsl
lea
and
lret
sbb
pop
jl
cmc
outsl
sbb
out
xchg
arpl
push
outsl
movsl
adc
fcmovne
xor
dec
out
pop
out
jno
add
rcrb
nop
cli
adc
fisubl
sub
gs
neg
lds
mov
scas
fstps
cmpsb
or
sbb
push
pusha
push
in
add
push
out
pop
and
test
sub
cmp
adc
in
push
and
leave
mov
dec
bound
flds
sbb
xchg
push
test
cwtl
inc
ficomps
sbb
repz
cltd
jmp
and
pop
inc
xchg
inc
push
inc
push
add
sbb
out
mov
or
pop
adc
adc
dec
ljmp
cmp
xchg
xor
cltd
or
and
jb
xchg
mov
mov
sbb
mov
jbe
push
pusha
sub
cmp
sar
or
pop
mov
jle
jg
mov
cmp
das
or
inc
pop
sub
jmp
sub
fildl
pop
shrb
dec
into
push
jmp
repz
insl
pop
sub
sub
xorb
mov
dec
pop
enter
in
lods
dec
outsb
insb
add
mov
outsl
stc
push
cmc
xchg
lock
call
inc
mov
inc
jecxz
mov
cld
ss
es
jo
out
inc
cmp
ljmp
inc
sbb
ss
jnp
jle
outsl
mov
sbb
and
pop
add
jle
adc
movsb
aad
ret
push
fs
mov
sbb
daa
xchg
nop
fcmovb
pop
mov
test
jg
and
mov
outsb
mov
movsb
mov
or
rorb
icebp
lahf
fadd
popa
fnstsw
add
cmp
imul
mov
jns
daa
insb
leave
jno
sub
sbb
outsl
cmp
cmpb
or
cmpsl
fcmovb
xor
sbb
loope
push
js
xchg
or
lock
into
shrb
push
call
pop
scas
inc
in
mov
cli
pop
adc
push
scas
movsl
mov
pusha
test
xor
or
xor
xor
mov
adc
adc
mov
in
jmp
pop
xorb
test
popa
or
das
std
int3
pop
xor
jl
ljmp
popf
mov
mov
in
les
into
outsb
jb
jecxz
xchg
or
cmpsl
sbb
or
pop
sbb
or
aas
test
adcl
push
pop
mov
lock
cmp
xchg
inc
rolb
pop
inc
pop
mov
add
fdivrp
int3
adc
das
mov
fnstenv
gs
bound
andb
lea
mov
sti
xchg
and
ja
or
xchg
mov
ret
into
mov
sbb
into
fisubs
pusha
jmp
sahf
flds
mov
js
sub
lea
aas
dec
lods
jmp
mov
pop
xor
repnz
mov
outsb
jmp
push
xchg
pop
into
lcall
dec
push
daa
pop
fists
jae
rorl
pop
push
mov
sub
das
inc
jecxz
shll
sbb
mull
imul
xchg
sbb
pop
sbb
jmp
pop
xor
fs
nop
push
std
imul
mov
cmp
aad
mov
mov
push
into
in
xor
jecxz
aad
icebp
mov
aas
jmp
pop
and
mov
scas
cmp
or
dec
xchg
hlt
pop
dec
repz
xchg
mov
roll
or
xchg
retw
mov
jb
pushf
insb
shrl
imul
mov
pop
mov
loope
cmp
cmp
push
bound
and
mov
dec
sub
xchg
mov
addl
hlt
jp
cmpsl
ss
push
mov
push
xchg
bound
inc
repnz
outsl
mov
das
lds
das
cmpsb
inc
fs
lret
adc
out
xchg
mov
dec
lret
dec
ret
in
jge
cltd
popf
and
lods
mov
test
push
jge
fldl2t
mov
adc
sbb
pop
jge
cmp
fs
xchg
or
cmp
fwait
or
push
cmp
hlt
pop
bound
dec
imul
jnp
xor
pop
hlt
add
jns
inc
inc
pop
stos
mov
adc
push
xor
fadd
mul
stos
dec
andl
shlw
sbb
mov
xchg
mov
cltd
push
xor
mov
hlt
data16
scas
push
cmp
divl
pusha
xchg
dec
sub
pop
flds
enter
pop
xor
jno
cmp
cmp
inc
ss
popf
shrb
sbb
mov
sahf
mov
jb
inc
test
popa
rorb
jg
in
lret
sarb
inc
lods
mov
add
xor
cmp
pop
push
test
push
add
cmp
sbb
daa
adc
pop
pop
movsl
push
clac
sbb
out
cmp
pop
or
test
and
jbe
pop
adc
jle
fcmovnbe
adc
dec
mov
xor
icebp
pop
mov
and
or
js
aad
dec
mov
xor
xlat
add
inc
cwtl
dec
cltd
lahf
pop
dec
mov
aas
jecxz
bound
inc
adc
push
pop
pop
adc
pop
xor
or
insl
ret
lea
jne
lret
pop
rep
mov
cld
sub
mov
rorl
or
xchg
pop
aad
mov
sub
loope
ljmp
pop
ret
sbb
mov
ja
mov
inc
and
sub
sub
or
jns
fcoms
push
das
mov
pushf
lods
popf
sar
pop
inc
pop
mov
xchg
inc
insl
frstor
xchg
scas
imul
loopne
out
mov
mov
aad
outsl
das
dec
xor
shll
clc
push
out
jno
iret
add
std
cmp
int3
fbld
out
push
sub
popf
jae
cmp
in
dec
mov
add
inc
mov
sahf
iret
flds
add
lock
jle
fldcw
stc
cltd
mov
and
inc
daa
fwait
and
mov
insl
dec
xchg
mov
jp
out
ja
aaa
inc
into
out
push
fstps
outsb
mov
lock
or
jecxz,pn
stos
sub
or
arpl
mov
cmp
jecxz
andl
inc
push
loop
ja
mov
int
repnz
lcall
outsl
lods
xchg
inc
pop
sbb
data16
and
dec
aaa
xor
shll
in
stos
ret
cmp
pop
add
arpl
cmp
call
sub
and
pop
int
cld
add
sub
outsb
adc
int
pop
aaa
jbe
cmp
mov
adc
push
mov
fsubl
scas
pusha
and
xor
cmpsb
stc
outsl
ss
xor
mov
jnp
push
lcall
inc
popa
fmuls
or
push
test
pop
dec
aad
cld
cs
mov
inc
es
addr16
ret
call
add
and
adc
sub
sbb
imul
mov
bnd
add
fisubl
pop
sbb
xchg
pop
push
cmp
and
mov
pop
insl
lds
xchg
idivl
sbb
leave
imul
cmp
inc
cmp
and
push
xor
add
mov
insl
push
mov
mov
popa
stos
mov
in
mov
adc
cmp
fs
add
sti
fwait
xor
test
ljmp
xchg
in
inc
test
xor
rcrl
mov
jno
push
int3
or
ret
sub
mov
jecxz
pop
jns
or
stos
xor
pop
in
ret
pop
inc
dec
xor
les
test
mov
pusha
mov
mov
test
xchg
repnz
inc
ret
js
mov
mov
xchg
xchg
xchg
movl
or
mov
pop
or
fwait
cmc
cltd
push
or
mov
adc
mov
sub
lret
sbb
add
sub
mov
ret
test
out
lret
daa
lcall
and
fmul
add
adc
inc
mov
ja
loope
out
push
ror
rclb
sbb
push
xor
mov
out
jne
ja
test
mov
fld
add
xlat
sub
rorb
jg
jbe
mov
cs
mov
sbb
mov
fdivl
adc
mov
call
add
fsubs
or
in
lds
sti
std
cli
in
mov
fldt
cmpsb
imul
pop
xchg
sbb
inc
adc
ficomps
out
and
mov
outsb
mov
sub
adc
and
mov
inc
aaa
sub
adc
push
lock
test
sub
inc
loopne
repz
insl
pop
cmp
inc
adc
imull
inc
imul
pusha
lret
jecxz
jecxz
gs
xor
inc
test
mov
icebp
ret
leave
push
sbb
repnz
out
sbb
out
push
pop
mov
bnd
pop
add
int3
fimull
loope
out
xchg
or
jge
inc
xor
pop
popa
sbb
adc
cli
cld
stc
mov
movsl
shlb
xchg
xchg
stos
dec
out
xor
int
mov
ljmp
mov
mov
xchg
mov
gs
lret
pop
movsb
adc
pop
xor
hlt
aad
movsb
jmp
push
mov
loop
fsubs
shr
add
or
jno
sahf
mov
imul
stos
xor
pusha
cmp
cmp
and
test
test
addr16
and
push
adc
shlb
nop
lock
mov
fnstsw
mov
mov
clc
das
mov
cmp
shrb
inc
sub
xor
mulb
aas
insb
test
fcoml
int
push
sahf
inc
push
or
andl
insb
push
add
cmp
fs
xchg
pop
into
mov
xchg
jne
bound
stc
push
xlat
nop
in
mov
lcall
mov
in
jg
inc
rcrb
sti
mov
in
mov
jp
push
scas
out
sub
cmpb
cld
pushf
xchg
das
jmp
jne
sbb
repnz
in
mov
mov
popf
cli
stos
and
xor
push
add
mov
int
sub
inc
loope
xchg
cmp
inc
aaa
dec
xchg
ss
cwtl
add
fwait
dec
xchg
into
rcll
rorb
test
sahf
in
sbb
lret
jns
cmp
sahf
xor
loop
aad
in
stos
pop
jle
or
sbb
add
sbb
push
pushf
mov
sbb
cmp
sub
cmp
repnz
cmp
push
rcrl
cltd
xorb
fidivrs
dec
dec
or
add
xlat
enter
lret
ja
sbb
bswap
add
and
test
lahf
xchg
or
sarl
xor
es
movsl
and
jbe
cmpsb
push
and
sti
arpl
test
jmp
js
insl
and
pop
pop
ss
sbb
stos
clc
js
add
xchg
andl
jnp
and
mov
incb
les
jbe
js
dec
clc
cmpsl
movsl
insb
dec
enter
mov
mov
test
pop
jmp
incl
adc
adc
mov
mov
mov
sbb
pusha
out
ret
push
jno
mov
cmc
je
inc
xchg
jl
out
cwtl
loopne
cmc
clc
mov
bound
push
jge
jl
test
cmp
icebp
orl
fdivs
repnz
inc
sub
add
sbb
xchg
xor
insb
adc
icebp
shl
jae
in
orb
xchg
cmpb
scas
or
jb
into
cmpsb
gs
pop
addr16
jnp
repz
lock
out
mov
ret
mov
mov
xchg
cld
stos
push
shl
mov
mov
bound
push
repz
xchg
cmpsb
sub
insl
ds
roll
jmp
mov
xlat
and
ja
pop
test
sahf
push
inc
xchg
adc
idivl
cmp
nop
pop
jge
mov
addb
jmp
mov
nop
bound
fistpll
out
shr
pop
sbb
add
lds
jnp
adc
adc
dec
xor
in
les
scas
ret
jns
leave
ror
das
orb
jb
push
out
hlt
inc
fs
cli
cmp
mov
fisubrl
mov
jg
outsb
stos
fwait
adc
inc
inc
imul
int3
ja
lret
ds
ret
fadd
int
inc
subl
mov
das
pusha
int3
mov
mov
push
mull
rorl
les
mov
adc
sbb
fistl
stos
loop
sub
sbbl
test
outsb
mov
cmp
out
mov
test
or
cwtl
lea
and
aam
idivb
outsb
fisubrl
mov
adc
push
xorl
pop
leave
out
imul
sub
xor
sub
insl
pop
jae
fimull
and
stos
pop
addr16
push
pop
mov
into
test
fcoms
xchg
inc
push
iret
xchg
xor
jnp
xlat
testl
popf
cs
popf
push
divl
repnz
in
mov
mov
cltd
and
add
cli
mov
cmp
mov
adc
int
repz
mov
or
mov
cmp
dec
cmc
test
scas
pusha
push
stos
out
push
cmc
into
leave
sbb
pop
xchg
aam
and
ljmp
mov
call
popf
popf
dec
lret
push
arpl
pop
dec
shl
daa
mov
add
les
roll
and
mov
cmp
sbb
nop
sarb
mov
dec
pop
jb
subl
cmp
mov
shr
inc
cmp
enter
cmp
imul
adc
cli
pop
cmp
test
push
cmp
psllw
sti
lahf
jnp
mov
dec
pop
inc
ds
leave
call
jbe
fisttps
vpaddusw
xor
jbe
xor
fisubl
and
loopne
push
dec
ja
mov
arpl
lea
or
loop
lea
in
mov
push
inc
fimuls
pop
cld
mov
or
insb
dec
xor
cld
cmp
push
inc
cmp
or
mov
lods
hlt
mov
dec
jns
sub
mov
test
cmp
mov
pop
pushf
xchg
cmp
push
cmpsl
mov
pop
out
pushf
push
aas
sbb
jns
daa
inc
xchg
scas
pop
mov
imulb
je
es
cmp
xor
notl
push
fisubs
test
cwtl
mov
or
mov
les
les
xchg
mov
leave
lret
inc
popa
xchg
jecxz
sub
and
and
sbb
dec
add
daa
adc
movb
dec
mov
pop
push
shrl
scas
ss
les
test
cmp
hlt
or
lcall
mov
call
push
pop
xchg
pop
xchg
lcall
jno
push
dec
jmp
insl
ret
mov
hlt
pushf
test
pusha
cmp
push
and
cmpsl
pop
js
mov
adc
mov
lods
or
add
mov
mov
shrb
push
insb
test
inc
fdecstp
cmp
sub
add
xchg
negb
mov
sbb
leave
popf
fnstenv
rorl
loope
adc
arpl
push
cmp
outsb
stos
push
enter
dec
frstors
lods
push
jp
gs
fistl
push
or
sbb
xchg
xor
xchg
ret
call
dec
icebp
arpl
pop
xchg
lea
xchg
push
cld
fs
mov
pop
fistl
in
lret
pop
repz
pusha
loop
rol
dec
test
aam
fs
push
das
pop
xor
daa
sbb
xchg
pop
adc
dec
cmp
outsb
je
pop
inc
jbe
mov
and
add
pop
repz
or
mov
push
mov
sub
aam
clc
inc
dec
push
hlt
push
loope
pusha
xchg
loope
in
push
sahf
aam
sahf
mov
sbb
ret
add
push
sbb
int
repnz
xchg
push
xchg
mov
aaa
and
mov
jbe
rcl
in
xlat
pop
cmpsl
test
pop
data16
dec
ret
jne
sbb
mov
sbb
cmp
stc
cltd
xorb
jmp
xchg
ret
mov
lea
cli
jae
xor
andl
lds
int3
jge
and
loope
push
popa
pop
popf
sbb
add
in
aaa
cmp
mov
negl
add
push
call
icebp
fisttps
int
xchg
xchg
outsb
outsl
ret
insb
push
xor
dec
xchg
adc
icebp
fisttpll
movsb
je
jg
adc
cmpsl
idiv
arpl
mov
gs
push
aam
jle
push
cmp
adc
ss
inc
gs
scas
ja
sbbl
adc
cmp
sub
loop
cmp
hlt
addr16
jnp
inc
shlb
mov
cmp
lret
add
cld
ds
mov
aas
es
inc
pusha
jo
loop
xor
xchg
xor
mov
test
adc
adc
sub
sbb
pop
or
mov
rorb
cltd
insb
dec
mov
inc
stc
lcall
test
pop
xchg
test
jnp
scas
loopne
inc
movsl
adc
inc
addr16
sbb
or
or
insl
dec
ds
and
push
mov
loope
mov
xchg
fbld
popa
adc
sti
je
jecxz
inc
enter
cmp
mov
add
sti
loope
cmpsl
lock
cmp
mov
mov
hlt
sub
cmc
jl
push
mov
pushl
mov
in
push
mov
les
and
inc
in
sti
in
add
aam
testl
bound
jne
inc
out
sub
stos
mov
dec
shlb
pop
cmp
cmpsl
jbe
push
cmpsb
xchg
push
and
mov
out
jge
and
sahf
lods
test
std
outsb
xor
xor
push
add
xor
mov
cld
jnp
outsl
jae
push
xor
mov
xor
lock
ficomps
cmp
mov
cmp
xor
sub
cmc
gs
jns
cmp
loope
jecxz
cmp
cli
add
scas
imul
mov
xor
gs
sub
jae
mov
sbb
adc
rclb
or
pop
nop
push
push
ss
scas
dec
xor
and
inc
outsb
add
add
dec
jmp
mov
xchg
fidivl
mov
es
mov
shl
xchg
popa
inc
pop
mov
add
jnp
jnp
and
ss
pop
loopne
and
sbb
nop
sbb
sbb
mov
scas
fcmovnbe
push
outsb
pop
bswap
xchg
aaa
xchg
rorl
mov
testl
sbb
pop
popa
mov
inc
xor
cltd
ss
test
jne
cwtl
std
aam
jbe
mov
ja
bound
push
cmp
or
aam
into
movsb
inc
add
xchg
xor
vprotd
sbbl
andl
xor
pop
sahf
dec
xor
add
dec
mov
mov
inc
xchg
or
lea
inc
or
sbb
lcall
pop
xlat
cmpl
psubusb
mov
mov
ret
inc
pusha
out
and
add
imul
cli
xor
or
sub
xlat
dec
mov
push
sbb
push
mov
sub
dec
or
ret
sub
push
push
flds
lea
jne
sti
xchg
adc
loope
shll
cmp
xor
sub
mov
sub
mov
push
gs
and
sub
ret
test
roll
and
pop
dec
stos
jecxz
fisttpll
mov
pop
aam
jns
imul
outsl
sub
adc
pop
xchg
mov
pop
adc
pushf
and
mov
outsl
out
cmpsb
repnz
dec
adc
and
pop
jbe
mov
cmc
sbb
add
out
sub
mov
jbe
jecxz
pusha
scas
mov
test
daa
mov
testb
xchg
pop
or
mov
cmp
push
insl
push
pop
arpl
ret
xchg
pop
pop
jecxz
mov
popl
mov
push
nop
lods
jnp
aad
pushf
cmp
es
sti
insl
push
mov
andl
enter
inc
test
dec
adc
cmp
test
push
test
scas
or
jae
rcrb
scas
inc
inc
int3
mov
mov
jg
xchg
arpl
hlt
pop
movsb
ljmp
jmp
sub
mov
fmuls
or
inc
out
and
iret
sub
clc
fnstcw
in
adc
cmp
adcl
popa
sbb
movsl
int3
stc
sbb
xor
sbb
fs
sub
jle
inc
mov
sub
adc
lea
loope
xor
loopne
outsl
mov
xor
ret
pop
inc
jnp
aaa
mov
mov
push
mov
ficoms
ja
repnz
lock
je
mov
push
jge
test
inc
into
pop
xchg
mov
or
add
andb
or
ljmp
ret
mov
add
xchg
jmp
pop
out
loopne
sub
adc
xorl
xor
xor
mov
mov
xor
cmpsl
stos
scas
mov
adc
incb
popa
imul
clc
fsubrs
fisubs
mov
loopne
mov
in
je
rcll
pop
pusha
cmp
xchg
xchg
mov
cs
pop
mov
mov
nop
in
testb
pmaxsw
xchg
insb
daa
jl
adc
sub
dec
fbstp
fiadds
rclb
movsb
sbb
lahf
in
pop
adc
xlat
adc
int3
lret
mov
loopne
stc
dec
addl
jge
jecxz
push
outsb
pop
shrl
inc
addr16
add
jnp
mov
fcompl
and
cmpl
sub
dec
pop
mov
xchg
mov
cmp
dec
loop
jmp
inc
xor
sub
push
stc
adc
xchg
test
xlat
xorb
inc
je
jecxz
xchg
imul
js
jge
arpl
cwtl
pop
and
jae
or
jle
inc
enter
jne
scas
fstl
jno
mov
and
je
jns
sub
out
fstl
jecxz
cwtl
push
or
sub
arpl
or
int3
das
ljmp
icebp
adc
lahf
push
scas
cmp
and
inc
hlt
push
fs
ss
das
jp
test
or
jl
mov
push
mov
aam
sub
out
push
sbb
push
xchg
inc
mov
je
cs
movsl
int
loope
loop
dec
es
xchg
icebp
fsubp
pop
adc
add
xor
add
gs
push
hlt
adc
dec
xchg
fldl
popf
xchg
mov
cmp
xchg
inc
push
sbbb
cwtl
pop
push
and
mov
outsl
hlt
mov
push
xchg
pushf
lahf
pusha
pop
inc
sbb
or
outsb
mov
and
add
in
clc
sub
into
adc
jl
push
dec
fidivs
mov
nop
mov
push
fwait
adc
mov
and
dec
inc
nop
pop
xor
jmp
cwtl
incl
std
imul
jl
pushf
mov
adc
mov
je
cmp
int3
xchg
pushf
sbb
mov
arpl
inc
and
or
mov
jmp
xchg
movsb
enter
into
adc
xchg
fs
cmpsb
mov
dec
inc
ret
xchg
mov
fs
jnp
shlb
sbb
or
fildl
ljmp
mov
sub
jg
outsl
mov
aaa
pop
inc
scas
jnp
mov
mulb
rorb
pop
icebp
mov
lret
cmc
ror
sbb
push
lret
jno
push
and
mov
pop
mov
push
dec
push
cmp
fildl
add
cmp
and
inc
push
lret
pusha
add
mov
push
test
dec
inc
jne
inc
mov
dec
cld
mov
or
repnz
gs
and
jle
push
mov
fsubs
or
sub
xor
or
ret
sub
mov
out
lods
rclb
mov
jo
test
mov
out
lock
jno
adc
and
idivl
mov
sub
jle
daa
js
ret
aaa
int
mov
jbe
push
jnp
sub
sbbb
movb
imul
inc
pop
mov
dec
jle
dec
or
out
sahf
repnz
sti
jne
or
jecxz
sbb
push
in
imul
add
fistps
aas
xchg
pop
sub
cmp
xchg
jno
loop
arpl
xor
stos
or
in
repnz
jg
sbbb
jns
loopne
dec
psubb
movsb
adc
cmpsl
pusha
xchg
test
dec
add
and
jne
xor
aas
pop
int3
in
test
xor
adc
mov
outsl
imul
add
mov
aad
fbld
pop
xchg
push
mov
leave
push
shl
test
cmp
mov
push
mov
mov
and
movsl
inc
nop
sbb
adc
iret
jnp
mov
lahf
mov
and
jb
jne
mov
push
insl
popa
sbb
lret
into
push
mov
outsb
xor
in
dec
jo
xorb
mov
loopne
xchg
lcall
and
rcrl
pop
jo
cli
mov
adc
fcompl
jae
cmp
adc
stos
and
ret
sub
cli
icebp
pop
movsb
sbb
mov
pop
xor
outsl
cld
loopne
jle
push
stc
stos
push
cmp
inc
movsl
in
xchg
dec
mov
or
xchg
enter
imul
xchg
mov
and
in
or
jmp
mov
aam
pop
into
xor
lret
xchg
mov
les
data16
int3
lret
fistpll
add
adc
adc
in
cltd
dec
mov
sarl
sbb
pop
push
pop
sbb
cltd
lock
rolb
sarl
lahf
dec
aad
xchg
add
jbe
call
je
lods
jmp
or
gs
cli
sbb
flds
movsl
add
leave
test
mov
add
int
xlat
sub
xor
hlt
ljmp
xor
mov
inc
inc
jl
or
pop
insl
or
xor
dec
mov
add
and
fsubl
sub
mov
or
in
mov
lods
out
jmp
outsb
int3
std
aad
inc
fsubs
out
loopne
xlat
pop
and
imul
lcall
inc
stos
jb
jp
mov
jl
push
mov
mov
and
in
scas
push
leave
imul
decl
imul
mov
dec
mov
adc
mov
aad
mov
mov
mov
mov
mov
xlat
dec
dec
cwtl
nop
sbb
jle
outsl
add
pushf
push
cmp
ds
fisttpll
sub
adc
out
inc
out
data16
arpl
shr
mov
fildl
iret
push
lret
aam
add
mov
stc
sti
adc
sbb
sbb
or
aaa
sbbb
pusha
push
dec
jnp
mov
aas
cwtl
xor
int3
fs
dec
in
mov
push
cwtl
aam
push
mov
pop
inc
jae
mov
dec
lahf
jne
maxps
jmp
pop
pop
xchg
mov
jmp
lret
push
pushf
dec
cld
outsb
add
bt
jecxz
mov
or
dec
inc
addr16
xchg
mov
lret
fs
ffree
ss
jl
bound
out
in
mov
cmp
idivb
sbb
pop
out
push
out
sub
movsl
sub
xchg
nop
in
adc
inc
xchg
xchg
fsubl
std
push
sbb
aad
jnp
add
into
gs
pushf
bound
inc
mov
fmull
cwtl
stos
mov
pop
fadds
lock
and
xchg
lahf
sbb
mov
dec
sbb
sbb
push
xchg
ret
ret
xor
xchg
ficomps
in
push
lods
jo
sub
dec
jmp
lret
inc
jnp
mov
and
outsb
xchg
jnp
mov
pushf
shrl
rolb
cltd
fwait
jo
and
cmp
cmp
ja
imul
cmp
mov
push
in
lahf
out
sub
sti
movsb
aam
lea
dec
filds
fsubrs
cmpsl
pop
pop
fs
xchg
ret
xchg
sbb
mov
pushf
loopne
jns
fabs
hlt
push
jae
xchg
test
stos
add
or
outsb
sbb
sarl
push
or
and
loopne
popf
out
xor
adc
push
mov
popa
xchg
mov
lods
ss
mov
sub
mov
xchg
xor
mov
insb
xor
sub
jmp
mov
xchg
mov
jbe
inc
dec
add
inc
pop
cwtl
mov
cmp
cmp
ret
cli
xchg
mov
imul
inc
inc
xchg
mov
js
scas
arpl
sub
cmc
popa
test
xchg
inc
insb
faddl
sahf
adc
shrl
test
xchg
lret
ja
mov
imul
sbb
loope
hlt
in
pop
jne
and
mov
inc
daa
test
data16
es
sub
sbb
mov
add
scas
sub
stc
cwtl
rcrl
adc
push
xchg
dec
mov
add
js
adc
into
xchg
or
inc
pop
sti
mul
push
xor
mov
push
pop
xchg
sub
sub
call
lahf
or
clc
scas
xor
mov
pop
lods
sub
pop
adc
repnz
hlt
push
pop
cmp
cmp
mov
arpl
les
xchg
inc
add
js
jge
pop
jns
push
mov
lds
mov
fimull
add
jnp
cli
adc
adc
mov
sbb
sti
jmp
jno
shrb
push
pop
or
test
outsl
arpl
pop
xlat
movl
mov
dec
call
adc
mov
mov
lret
andl
sbb
call
cmpsb
dec
sub
lods
popf
lea
and
mov
shrb
or
movsb
orl
cwtl
xor
mov
out
sbb
mov
and
testl
pusha
adc
add
push
add
mov
or
mov
stos
das
loope
pop
pop
or
xor
frstor
jmp
adc
lcall
repz
and
cmp
repnz
jl
jecxz
mov
dec
sub
data16
daa
adc
loope
enter
sub
sub
fs
cmp
adc
std
dec
sbb
push
mov
mov
add
and
aaa
jle
call
mov
pop
rolb
and
adc
scas
jns
cwtl
cltd
ljmp
subb
scas
push
add
mov
cli
pop
les
xchg
cmp
int
in
inc
mov
addr16
or
addb
enter
rorl
call
data16
aaa
mov
mov
jl
dec
mov
sub
pop
dec
push
mov
xchg
data16
push
subl
rcrl
sbb
mov
ss
sbb
js
out
jge
repnz
adc
lret
test
push
nop
or
imul
test
jg
test
xchg
xchg
xchg
in
nop
xlat
pop
xchg
bound
push
lods
movsb
mov
inc
add
xor
lds
dec
mov
sbb
std
test
fmull
jl
xlat
mov
out
mov
ljmp
and
mov
sarb
mov
mov
xchg
js
pop
aad
xor
in
push
push
jecxz
stos
or
ret
adc
push
cmp
pusha
jns
add
rol
ret
lods
add
mov
das
daa
mov
pop
xchg
arpl
in
xor
stos
insl
call
das
jne
or
add
pop
mov
iret
nop
mov
popl
mov
inc
mov
fld
lock
inc
sub
fldenv
mov
int3
sub
lahf
push
xor
out
pushf
out
fistl
inc
lahf
mov
pop
imul
add
das
test
jne
add
insl
inc
rorl
cld
ficoml
add
push
inc
dec
lods
adc
sub
adc
xchg
lret
cmp
mov
mov
dec
and
push
pop
push
ds
mov
lahf
shll
cltd
dec
sub
int3
fistpl
pop
pusha
out
mov
in
xor
adc
imul
sarl
mov
sbb
aaa
mov
jle
jo
jbe
test
ds
adc
jno
push
or
ljmp
pop
lcall
xchg
addr16
popa
xchg
rcrb
dec
mov
jns
mov
imul
cmpsl
test
jmp
lcall
stos
aam
ljmp
push
push
push
jp
test
mov
sub
gs
pop
stc
sbb
sub
std
cmpl
jmp
mov
or
cmp
out
cmp
xor
aaa
fnclex
pushf
xor
das
dec
movsb
dec
in
jmp
cmp
push
pop
nopl
adc
inc
dec
inc
dec
cltd
aas
cwtl
cld
adc
rclb
push
push
sub
push
in
cld
mov
jbe
cmpsb
sbbb
lea
subl
ret
orb
mov
mov
sbb
push
add
inc
ja
lock
sub
and
push
and
mov
sti
in
adcl
lods
sub
pop
add
out
mov
lock
mov
mov
mov
push
xchg
scas
pop
stos
rclb
cltd
jno
adc
xor
cmpsl
sub
loope
xchg
mov
stc
mov
mov
int3
popf
push
jl
pusha
iret
jno
cltd
and
ror
shl
xchg
movsl
andl
ss
inc
sub
out
sti
adc
hlt
cmp
sbb
leave
movsb
xor
jb
cmpsb
fisubrs
jecxz
cmp
or
sbb
ficoml
xchg
mov
test
mov
jge
mov
das
push
dec
out
jo
pop
das
adc
pop
loopne
sbbl
mov
call
hlt
data16
pop
add
jne
mov
je
push
cs
xor
mov
mov
dec
fldt
fbstp
arpl
mov
inc
ror
lds
adc
xor
je
mov
inc
jg
pop
shrb
out
lods
ja
sbb
mov
xchg
fnstsw
cld
mov
cli
sub
mov
push
iret
pop
push
sub
cs
xor
xor
notl
negb
add
jns
dec
dec
pop
aam
inc
jno
cmpsl
cmp
faddl
cld
loope
sbb
push
pop
sti
pop
bound
fsubs
push
xchg
movsb
ficoml
fisubl
mov
sub
mov
mov
or
dec
push
mov
push
xor
pop
xchg
pop
xchg
imul
jg
in
cmp
loope
xor
nop
jae
icebp
icebp
ljmp
mov
adc
pop
pop
dec
aaa
jecxz
jle
aad
loope
sub
jecxz
jbe
sub
or
shr
mov
cmp
sub
push
lret
pushf
mov
adc
andb
test
jl
jmp
or
xor
push
lret
sbb
fcmovnb
mov
or
stos
cld
push
dec
and
leave
clc
scas
push
adc
mov
bound
push
pop
ds
mov
cmp
out
testl
and
sub
fwait
push
inc
in
push
fbld
jg
adc
xchg
jne
enter
aas
pop
sbb
mov
push
push
sub
lods
or
stc
ret
shll
lahf
adc
cmpsl
jg
adc
inc
fisubl
xchg
ret
adc
xor
push
push
add
mov
inc
lds
mov
scas
es
fsubl
add
int
addr16
sub
repnz
scas
fldenv
mov
inc
inc
loop
pop
iret
jno
iret
lock
rcr
and
rcrl
mov
out
sarb
aad
movsb
test
mov
mov
inc
xor
sbb
shlb
jnp
es
mov
aam
or
lahf
mov
stos
out
not
mov
xchg
push
imulb
stos
das
mov
nop
inc
sbb
rol
xchg
pop
xor
dec
mov
jg
pop
outsl
testl
xor
add
popf
sbb
xor
or
movsb
jno
outsb
or
xlat
sub
add
es
jmp
mov
popf
and
mov
imul
ja
push
movsl
ret
push
dec
jmp
and
push
jle
int
inc
fimull
imul
xor
push
sbb
jmp
adc
jae
xchg
lahf
stos
pop
xchg
or
cmp
cmp
push
mov
jecxz
sub
mov
push
jns
fisubrs
rcrl
sbb
arpl
pusha
aaa
fs
out
pop
mov
sar
sbb
sbb
dec
lods
jge
sub
negb
xchg
pop
rolb
jns
adcl
jns
ljmp
sub
cld
mov
jb
xor
mov
mov
mov
sub
jl
and
mov
sti
adc
mov
aaa
outsb
xchg
cmpsl
mov
mov
xchg
xor
mov
cmp
cld
xchg
mov
mov
popf
jecxz
xor
or
xchg
jbe
aaa
adc
mov
es
xchg
daa
gs
push
and
movsb
rorl
push
mov
xchg
lea
or
mov
test
push
popf
xchg
inc
insb
jle
test
dec
sarl
and
out
jae
test
lcall
add
xor
aam
cmp
mov
iret
or
and
pop
inc
adc
adc
aam
dec
inc
dec
popa
popa
inc
mov
shl
cmpsl
sbb
or
jge
or
xchg
jmp
and
lods
hlt
stc
daa
outsb
sbb
sub
sbbb
jae
scas
push
mov
pop
cmp
adc
pop
mov
jp
sbb
in
push
xor
push
push
outsl
aam
add
sbb
push
and
pop
imul
les
xchg
mov
lret
xchg
pop
ret
mov
sbb
stos
inc
cld
sub
pop
leave
pusha
in
sti
subb
or
pushf
sbb
cltd
jmp
and
stos
insl
popa
sub
inc
hlt
loop
pop
pusha
add
xchg
xor
adcb
loop
lds
popa
mov
std
pop
pop
sbb
sbb
sub
mov
jo
rolb
pop
cltd
insl
popa
add
sbb
push
lret
mov
leave
mov
data16
test
bound
lods
and
and
movsl
das
ret
add
and
and
jne
sbb
sub
sarb
sub
cli
insl
lea
xchg
lods
cmp
rcr
lcall
add
dec
out
cli
mov
popa
adc
push
out
stos
jp
dec
jns
lcall
sti
leave
arpl
mov
jne
dec
roll
fs
mov
or
sbb
push
inc
jmp
pusha
jge
fwait
pusha
jecxz
push
inc
dec
cmc
ljmp
mov
add
mov
xchg
std
or
addr16
adc
mov
stos
pushf
inc
sbb
pushf
les
testl
xchg
or
inc
sub
fsubrs
pop
bound
xchg
mov
fisubrl
fcompl
cld
sub
mov
pop
popf
addr16
shr
fcmovnu
jo
shll
lds
insb
in
scas
out
leave
lret
sub
sub
pop
sbb
aam
push
xchg
dec
cmp
ds
sbb
into
add
xchg
or
mov
movl
mov
mov
popa
adc
enter
pusha
dec
jle
mov
and
mov
outsl
out
fbld
or
sbb
mov
mov
xor
in
sti
sub
wbinvd
cmp
pop
pop
in
insl
movups
das
or
push
int
incb
in
leave
or
fwait
lock
sbb
pop
outsl
mov
pop
inc
add
pop
dec
ret
and
mov
jne
or
enter
sub
inc
aam
xchg
add
mov
dec
nop
xor
orl
dec
adc
push
mov
test
std
dec
push
xchg
adc
sbb
jle
dec
and
xchg
mov
push
sub
add
jnp
pop
sbb
inc
and
int
scas
mov
mov
dec
movsb
subb
in
test
test
pushf
shrb
mov
insb
add
mov
jecxz
pop
ret
pop
pop
cli
adc
push
repnz
shll
adc
ss
inc
out
sub
loop
lock
in
sbbl
stos
xchg
jp
adc
dec
test
jecxz
bound
mov
cmpsl
stc
inc
mov
cmpsb
lret
mov
gs
jb
xor
jns
xchg
mov
xor
test
aam
fstpl
stos
std
aad
lods
out
fistps
mov
pop
sbb
out
fstpl
fdivs
ss
adc
inc
movl
push
bound
popf
std
inc
sbb
cmp
das
rol
mov
mov
xchg
mov
sti
insb
jp
cmc
jae
iret
sbb
adc
repz
imul
shl
repz
in
push
lea
mov
dec
out
and
xchg
pop
mov
sti
ljmp
stc
xor
aad
and
movsl
add
mov
pop
cmp
fsts
cmpb
arpl
jnp
cltd
add
add
sarl
roll
shrb
add
adc
sub
das
push
ja
and
lret
movd
out
mov
ss
jecxz
jp
and
mov
push
fcoml
sbb
lahf
adc
jmp
sar
orb
jecxz
iret
outsl
xchg
test
jne
das
cmpl
mov
jmp
push
xor
repnz
dec
imul
adc
adc
push
or
sbb
dec
xchg
add
les
add
adc
mov
cwtl
int
cmpb
add
mov
jo
sbb
jmp
femms
stc
xchg
jae
and
push
pop
scas
push
test
fiadds
stos
dec
adc
xchg
push
cmp
mov
out
sub
xchg
push
ja
jae
clc
xor
push
aam
xorb
scas
sbb
sbb
pop
sub
shr
fsubl
inc
jnp
ss
sub
add
repnz
iret
xor
stos
lret
inc
push
mov
stos
add
ret
jp
cmp
pop
dec
fstpt
pop
lea
movsl
int3
enter
data16
add
add
cmp
mov
push
lds
and
jo
in
mov
fmuls
sbb
xlat
mov
xchg
bound
pop
xchg
lock
and
shrb
aaa
or
inc
lods
or
dec
xchg
xor
inc
ss
xchg
jge
xlat
lret
jge
gs
add
int3
mov
fisttps
insb
dec
cmp
pusha
add
pmuludq
mov
cmp
ret
gs
mov
daa
xchg
in
mov
mov
inc
cmp
xor
xor
fildl
mov
push
push
or
inc
sbb
cs
sbb
arpl
inc
add
insb
push
push
cli
mov
aaa
arpl
loop
pop
test
xchg
aam
inc
loop
mov
cmp
jnp
pop
pop
hlt
out
or
ds
aad
mov
cmp
push
xchg
push
push
sbb
shlb
add
test
ja
out
xchg
negl
adc
jns
jo
lods
ja
cmpsl
roll
sbb
pop
roll
lea
out
les
fsubrs
out
inc
inc
mov
adc
mov
dec
inc
insb
pop
add
loope
mov
pop
mov
aas
out
cli
dec
test
std
stos
int
xor
out
insb
sub
je
into
cli
xor
fs
loopne
ss
lcall
out
push
icebp
push
mov
push
hlt
es
mov
sti
cld
fs
gs
cltd
rorl
jecxz
int
xchg
push
in
or
stos
pop
xchg
or
leave
jb
mov
cmp
or
mov
adc
into
jecxz
mov
out
and
cmp
mov
pop
in
enter
aam
mov
jae
or
pop
push
fwait
lods
icebp
insl
fs
jge
jno
dec
and
pop
push
leave
mov
ds
sbb
sub
mov
loope
test
int3
pop
pop
out
cmpsl
popa
xchg
dec
and
mov
adc
push
test
inc
stos
adc
mov
adc
cwtl
das
xchg
adc
scas
dec
sub
int3
jge
sbb
mov
cltd
pop
cmpsb
xor
add
adc
push
out
cmpsl
mov
lock
pop
mov
ret
lret
rol
out
pop
insb
fwait
and
mov
pop
mov
aad
sub
daa
fs
inc
lds
nop
aaa
jl
stos
xchg
jmp
push
cli
enter
ds
mov
les
xor
push
inc
xor
dec
lret
nop
push
in
add
and
popa
and
add
jecxz
test
adc
add
jecxz
lods
les
sub
jnp
mov
jne
fsubl
mov
dec
push
jno
push
mov
jno
shrb
sbb
gs
popf
stos
stos
lea
mov
jg
mov
movb
lods
sub
push
mov
idivl
sub
stc
pop
pop
mov
shrl
cs
test
test
cli
lds
fistpl
jae
pop
inc
dec
xchg
lret
push
mov
dec
jmp
es
sbb
js
mov
in
sbb
cmc
std
rol
scas
and
imul
push
daa
ret
or
push
push
xchg
push
xchg
lods
fwait
ja
cli
add
or
push
sub
push
push
ficoml
and
mov
stos
stos
roll
xchg
inc
push
mov
and
inc
jg
dec
or
mov
jge
sub
test
movsb
out
push
pop
enter
addr16
sbb
inc
sbb
std
popa
add
adc
fwait
jns
mov
xchg
movsl
out
out
into
pop
mov
lods
loopne
dec
pop
rorb
inc
or
xchg
push
jno
repnz
dec
insb
sbb
sub
mov
mov
xor
movaps
push
jns
aaa
je
call
push
out
adc
fstl
mov
in
shr
xchg
jl
imul
mov
cltd
dec
cs
mov
das
push
jl
lods
rorb
xor
mov
fidivl
adc
inc
inc
stos
fistpll
sub
pop
not
fldl
push
test
push
or
pop
lret
loope
and
dec
sbb
out
shufps
js
pop
jle
sub
nop
leave
dec
push
test
fdivl
jg
or
inc
std
addl
nop
xchg
jns
xchg
mov
mov
pop
push
ljmp
push
fldl
test
sub
jecxz
negl
mov
mov
icebp
aaa
ja
cmp
sub
or
movsb
in
hlt
mov
pop
fdivrs
int
inc
pop
fucom
cs
sbb
pop
xchg
sti
call
push
push
test
lock
dec
adc
pop
fs
bound
cmpsl
mov
fidivs
leave
aas
inc
sbb
jmp
fidivl
add
jne
cmp
insl
cli
stc
mov
mov
mov
leave
loopne
mov
outsb
inc
jg
bound
xchg
ljmp
xor
push
ljmp
xchg
push
and
jb
int
and
mov
and
mov
push
push
nop
mov
add
inc
xchg
push
mov
jg
gs
fnstenv
ljmp
pop
jp
out
in
jle
imul
mov
cmp
mov
iret
mov
mov
push
push
test
mov
or
jle
and
add
jnp
pusha
mov
pop
push
cmp
mov
push
add
stos
mov
sub
xchg
test
lods
mov
fcoms
add
loopne
push
cmc
les
jo
test
mov
loopne
mov
push
mov
jecxz
cmpsl
call
pop
sub
das
fwait
out
jg
mov
scas
push
sbb
mov
or
cmp
mov
or
or
addr16
sti
sahf
enter
jge
filds
insb
mov
mov
decl
jg
repz
fstl
jo
pause
movsb
and
cmpsb
fists
lcall
orl
sbb
xor
int3
add
xchg
int
jb
pop
jmp
cmc
popf
mov
push
fwait
out
adc
cli
leave
mov
imul
dec
xchg
and
stos
dec
sub
mov
leave
outsl
call
fwait
stc
add
xchg
add
jmp
clc
sahf
dec
push
into
gs
inc
mov
cli
mov
rcrl
mov
sti
aaa
xchg
jb
mov
je
add
es
cmpsb
aas
lcall
pop
mov
push
pop
jmp
jp
or
nop
or
les
in
pop
in
outsl
xchg
sbb
pop
push
shl
fistps
xchg
pop
push
jae
cmp
cli
push
add
cmp
sbb
icebp
mov
fsubl
fbstp
pop
sbb
inc
mov
cwtl
repnz
or
insb
mov
movb
adc
dec
mov
adc
xchg
repz
lahf
adc
add
gs
dec
sbb
inc
daa
lock
fs
outsb
adc
push
mov
xlat
fwait
in
inc
in
daa
mov
repz
jle
shrb
int3
mov
fcmovu
out
sub
mov
adc
pop
pop
pop
filds
js
shl
xchg
ret
pushf
inc
rcrl
cs
xchg
int
inc
in
les
xlat
ficompl
not
fcmovbe
jecxz,pn
mov
lods
lret
ror
and
shlb
stos
divb
and
add
loop
mov
jne
push
test
ss
cmp
aaa
outsl
out
mov
sbb
jl
inc
leave
push
in
mov
push
nop
xor
pop
int
pop
push
pop
push
sub
push
dec
inc
popa
inc
mov
vandnps
movsl
jo
clc
xor
sub
push
jb
and
inc
inc
inc
nop
cmp
nop
imul
stos
xchg
pop
pop
add
xchg
mov
cmp
lret
mov
adc
movsb
xorl
and
mov
xchg
loopne
mov
pop
dec
icebp
xchg
in
adc
pushf
xor
fnstenv
adc
jbe
dec
shlb
and
adc
xlat
inc
iret
pusha
add
mov
mov
push
imul
mov
mov
nop
or
pop
popa
data16
xchg
pop
cmp
sbb
out
add
and
les
fisubrs
push
orl
outsb
test
rcll
mov
mov
jmp
or
lret
aaa
xchg
xor
shrl
adc
jnp
pop
fcompl
mov
int3
jns
push
cmp
mov
push
mov
loop
fdivs
mov
mov
minps
cltd
cltd
lea
scas
shlb
dec
ffree
test
sub
mov
jbe
ret
das
faddl
mov
jb
mov
mov
sahf
shl
in
dec
clc
test
cmpsl
or
inc
or
in
cmp
and
aaa
fsts
shlb
pop
cmp
shrl
dec
in
mov
dec
nop
jae
pop
mov
xchg
dec
or
pop
icebp
lret
push
gs
negl
test
pop
mov
push
or
into
ljmp
cmpsl
jbe
mov
push
sub
xchg
aaa
pop
jmp
dec
mov
lea
mov
mov
loop
mov
and
es
pop
insl
push
lods
lret
out
sbb
daa
jne
in
jno
por
testb
movsl
pop
stos
je
and
cmc
sbb
in
sbb
dec
push
fwait
xchg
cmp
outsb
out
jecxz
cmp
in
xchg
imul
pop
aam
add
fnstsw
pop
add
lret
inc
cmp
sub
mov
jnp
fwait
stc
ror
push
lds
movsl
out
bound
mov
mov
push
js
shrl
adc
add
ret
push
push
testb
xchg
das
pop
fucom
fidivrl
xor
lahf
sub
ret
addr16
pop
and
inc
hlt
and
cmpsb
fistpll
add
in
popf
mov
shlb
mov
jnp
mov
repz
jo
rcll
orb
push
repnz
ja
ficompl
pop
out
cmp
xchg
imul
into
iret
je
mov
xchg
sub
jnp
mov
loop
lcall
or
xchg
jne
dec
lcall
pop
xor
leave
insl
dec
xor
cwtl
bound
sub
hlt
push
idivl
mov
lret
pusha
lahf
inc
dec
sub
add
leave
dec
loopne
or
or
mov
lcall
lock
xchg
fisubrl
insb
test
add
add
cld
adc
cld
shlb
loopne
ss
shll
xchg
insl
loopne
pop
adc
xchg
stos
leave
mov
pop
iret
aad
js
addr16
das
loope
jmp
jo
mov
and
xor
je
lcall
out
push
in
sbb
xchg
enter
aas
stos
divb
or
psrld
adc
sub
repz
lea
sbb
scas
lcall
lea
xchg
or
test
or
inc
leave
adc
jge
lds
mov
scas
cmp
add
orl
xor
dec
inc
mov
add
and
push
test
push
mov
gs
nop
cmc
stos
jg
jns
mov
sti
test
dec
push
das
ds
into
push
jae
adc
sbb
push
xchg
mov
sub
fildll
xor
inc
insl
sbb
push
fsubrl
cld
insl
cmc
mov
xor
pop
cltd
ljmp
mov
push
icebp
dec
fucomi
fistpl
dec
test
cs
xchg
popl
js
out
in
add
sub
jg
lds
filds
mov
rcl
addr16
imul
cwtl
cmp
dec
leave
mov
fistpl
imul
adc
negb
mov
scas
aas
enter
inc
push
xor
sbb
out
add
fstpt
jecxz
and
xor
push
pop
jp
jp
mov
sbb
sbb
add
fdivrs
into
mov
aad
pop
cwtl
stc
std
cs
std
adc
pusha
outsb
popa
mov
adc
test
adc
or
std
xorb
out
or
pop
adc
xor
xor
out
mov
outsb
dec
add
push
es
inc
and
jbe
xor
outsl
push
adc
dec
into
outsl
and
xchg
rep
adc
es
cmp
rolb
outsl
adc
jne
out
pop
ret
sbb
movsl
aaa
inc
xor
aam
testl
test
int
loopne
pop
sub
in
outsb
inc
aam
sbb
mov
fwait
andb
inc
xlat
jmp
cmp
dec
add
outsb
js
xor
leave
push
push
mov
pop
dec
imulb
loopne
sub
cmc
jbe
xor
fmul
adc
outsl
hlt
loope
jmp
xchg
addl
mov
fcmovu
sub
stos
js
xlat
mov
jge
loopne
icebp
and
out
sbb
xor
mov
sbb
jb
sbb
add
sub
mov
test
mov
outsb
jl
je
sub
pop
lods
add
inc
fildll
xchg
dec
shll
movsb
pop
sbb
add
xchg
jge
dec
or
mov
sbbb
sub
jns
push
add
cld
aaa
movsl
std
stos
inc
cld
loopne
rolb
add
sti
inc
adc
rol
push
mov
mov
cmp
mov
lret
mov
cwtl
movsl
mov
push
adc
push
pop
orl
lds
movsl
jp
js
cmp
mov
push
outsl
mov
mov
mov
out
push
pushf
stos
jns
add
or
outsb
mov
hlt
inc
xor
fnsave
xor
and
adc
jns
inc
pop
add
inc
xchg
xor
je
sti
lods
in
mov
mov
push
xorb
xchg
bound
ds
call
ret
aas
lea
fstpl
push
add
ja
sbb
push
push
data16
push
out
dec
and
cltd
dec
push
xor
add
and
test
xchg
pop
adc
imul
hlt
sub
or
jle
cmp
jmp
bound
sub
shll
mov
mov
add
jb
pop
push
sti
jg
lret
mov
outsb
dec
cmpl
loop
jle
lock
mov
fcoms
xchg
pop
pop
pop
ret
je
insb
mov
out
mov
loopne
and
sub
xchg
cli
jnp
xchg
test
push
clc
sbb
dec
or
adc
mulb
and
sub
jmp
adc
sbb
lds
std
into
xchg
fstl
cmp
je
and
cmp
test
inc
push
add
xor
dec
aas
cmp
sahf
jae
repz
push
jmp
cs
arpl
pop
mov
lea
cltd
pop
dec
out
pop
jg
inc
orl
vpmulhuw
xchg
mov
xor
dec
imul
jl
addr16
popl
adc
cmpsl
inc
pop
sub
add
pop
fisubl
cmp
xlat
inc
imull
push
jnp
stos
aaa
int
sbb
outsb
cmpsb
das
mov
lock
enter
adc
imul
mov
stos
orl
jmp
ljmp
into
or
jmp
ss
outsl
sbbl
out
add
insb
nop
adcl
pop
jo
lcall
push
xor
or
fs
ljmp
jae
push
ss
call
mov
jg
loop
inc
lea
test
gs
rolb
icebp
pop
rorb
or
sub
xlat
ss
push
sbb
xor
icebp
arpl
xor
cmc
mov
sub
shl
xor
js
lock
scas
test
fistpll
adc
or
mov
mulb
or
arpl
mov
jne
or
or
ficomps
rolb
xchg
jle
or
mov
lcall
les
xor
push
mov
xor
mov
dec
pop
xchg
ficompl
or
inc
movsb
leave
or
dec
jge
cli
add
sbb
repz
push
xor
push
data16
inc
xchg
add
push
xor
and
stos
push
pushf
xchg
push
aas
inc
xor
mov
scas
lds
cmpsb
out
leave
in
cmc
rol
xchg
push
or
inc
cmp
inc
inc
inc
mov
push
xor
sub
mov
add
cmc
mov
test
adc
sbb
and
lods
ret
sbb
cmpl
fnsave
leave
and
sbb
out
icebp
sarb
sti
pop
mov
les
add
imul
lahf
shll
popf
enter
push
mov
ficoml
movsb
ss
out
push
xlat
xor
mov
popa
push
in
xor
adc
pop
mov
xor
sahf
dec
arpl
mov
test
rcrl
ret
fsubrp
dec
pop
xchg
test
adc
shll
dec
fwait
sub
lret
fwait
roll
pushf
mov
jne
lcall
adc
mov
arpl
cmp
shl
das
jns
mov
into
mov
enter
adc
daa
lret
push
std
sub
or
or
xchg
push
into
inc
push
daa
push
or
cltd
popa
out
add
daa
mov
rcrl
adc
das
or
mov
push
lds
mov
dec
sub
test
cld
xor
outsl
xchg
inc
in
xor
pop
and
cltd
imul
cmc
cs
lcall
shll
sub
scas
mov
inc
lock
fwait
adc
sub
hlt
mov
fidivrs
sub
in
mov
push
xor
push
jg
push
xor
ret
jmp
sahf
bound
push
repz
popa
push
insb
pusha
cmp
adc
and
mov
cmpsl
push
mov
in
jp
arpl
jl
push
sbb
int
icebp
xor
jno
push
and
loop
stos
push
xorl
fs
mov
sbb
rcrb
and
int3
jle
push
enter
dec
scas
sbb
and
pop
daa
and
push
jp
mov
cmp
js
negb
in
sub
jae
hlt
mov
and
outsl
and
add
shl
lods
cmpsb
mov
ret
lods
xor
inc
dec
das
mov
data16
dec
push
mov
popa
pop
repnz
or
xorl
mov
mov
add
adc
out
test
sbb
inc
int3
sbb
jle
ret
movsb
cmpb
pop
mov
inc
test
mov
insl
dec
mov
pop
lahf
pushf
arpl
or
and
call
or
lea
sbb
adc
test
xlat
and
sbb
xchg
subb
xchg
call
in
out
rorl
das
mov
jp
lahf
ss
sub
pushf
stc
xor
xchg
push
mov
jb,pt
and
push
push
pushf
adc
arpl
and
adc
pop
xchg
cli
loopne
or
shrb
rclb
jbe
in
jmp
push
cld
hlt
and
fnsave
jecxz
cmp
daa
cmp
fisttpll
cmp
mov
out
das
lods
jo
pop
sbb
jnp
and
add
add
inc
and
mov
in
inc
movsl
movsl
shl
mov
and
mov
test
or
rcll
push
inc
sti
aam
mov
bound
leave
addr16
loopne
shll
xor
rorl
pop
nop
ret
sbb
adc
test
ja
ret
pushf
cld
dec
sbb
jnp
addl
mov
ret
pop
pop
inc
loopne
in
movsb
gs
jb
mov
pop
testb
das
cmp
ret
pop
repnz
xor
xchg
adc
pushl
cltd
mov
jp
push
mov
sbb
cmpsb
out
nop
aas
stos
dec
fidivrs
add
or
lods
adc
leave
or
cmp
mov
jno
clc
inc
mov
movsb
jae
in
idivb
mov
pop
outsb
xor
rorb
dec
ds
add
lret
out
imul
cmp
pop
scas
jne
jae
leave
cwtl
arpl
lock
fcomps
ja
loope
adc
xor
fildll
push
rorb
mov
outsl
out
push
cmp
dec
xchg
push
xchg
sub
stc
insl
insl
mov
mov
xlat
mov
lods
adc
mov
ror
sarl
mov
jp
mov
or
dec
sti
sbb
mov
fs
push
push
clc
jbe,pt
jb
fisubrl
mov
mov
cs
shr
cwtl
push
popf
push
les
mov
sbb
rolb
jne
pop
scas
jl
testb
loopne
ja
sub
add
dec
and
mov
loope
dec
stc
inc
lret
pop
inc
inc
out
inc
stos
outsb
test
sarl
sbb
movl
xchg
mov
and
inc
mov
sbb
xchg
inc
sub
leave
xchg
pop
bound
jb
jae
xchg
dec
fcmovnu
in
and
add
jo
lret
mov
repnz
add
push
sub
lds
adc
sbb
cmp
outsb
mov
push
or
pop
mov
mov
cwtl
sub
xchg
pop
roll
xor
movsl
jl
mov
push
lea
or
popa
push
insl
dec
push
and
hlt
loopne
or
inc
jge
aam
dec
dec
andb
dec
inc
pop
fsts
mov
clc
mov
xor
sub
test
cmpsb
ss
aad
adc
adc
xchg
rcrb
mov
imul
mov
lret
push
out
imul
add
mov
jg
sbb
adc
dec
es
mov
aaa
popa
and
adc
mov
sahf
push
xor
mov
and
repz
out
es
inc
or
push
mov
mov
sti
push
xchg
into
int3
lea
mov
inc
sbb
cmpsl
jp
or
lods
jno
and
adc
imul
mov
outsl
jg
sub
push
mov
xchg
mov
push
jp
fld
jecxz
lret
dec
jmp
pop
outsl
es
xchg
cmpsb
xchg
xchg
mov
jecxz
cmc
jecxz
das
test
popa
stc
mov
jb
clc
aas
scas
fldl
or
nop
push
sbb
adc
bound
push
insb
xor
xchg
clc
movsb
adc
xor
cmpsb
loopne
clc
mov
in
xor
daa
lods
adc
ljmp
std
loopne
mov
int
dec
mov
adc
pop
pop
jle
dec
cmpb
repz
add
or
xlat
in
mov
fcoml
stc
int3
add
enter
pop
dec
push
push
jae
push
or
lahf
stos
sbb
repz
arpl
test
jae
push
lret
cmpsl
scas
push
iret
xchg
jb
out
add
clc
mov
and
push
lds
push
add
sbb
adcl
push
mov
add
cld
inc
in
lds
popa
inc
xchg
inc
das
loope
nop
addr16
xor
mov
xchg
lret
cmp
les
inc
add
cs
aam
adc
fwait
xchg
adc
push
jno
jg
or
shrb
fs
pop
push
ljmp
test
je
inc
jne
inc
fnsave
adc
xchg
mov
sbb
or
js
insb
stc
in
sbb
popf
and
stc
icebp
pop
xor
call
rolb
mov
mov
or
pop
aaa
push
jecxz
leave
sbb
scas
xchg
dec
scas
or
pop
push
imul
xchg
insl
add
xchg
adc
adc
stc
lds
data16
and
test
ret
cmpsl
jle
negb
lret
mov
stc
int
dec
je
jg
mov
xchg
sahf
mov
xor
movsb
inc
psrad
fidivs
movsb
cmc
cwtl
ja
testl
and
adc
push
or
aaa
jne
test
jns
push
repnz
jmp
jo
mov
push
arpl
cmpsb
lret
push
out
aas
mov
jmp
ret
clc
add
in
in
out
xor
sub
add
cmp
mov
cmpsl
inc
mov
mov
and
inc
inc
movsl
out
clc
call
in
fisubrs
cmp
xlat
xor
cmpsb
mov
lds
imul
cmc
mov
je
lock
mov
sub
fisubl
push
iret
sar
mov
inc
outsb
shl
mov
jle
mov
fstl
icebp
xchg
es
push
pop
xchg
test
insl
das
jge
jmp
bound
mov
rcll
incb
push
dec
andl
xchg
xor
adc
sub
loope,pn
dec
add
clc
push
mov
mov
inc
push
sbb
hlt
push
jo
out
aas
inc
loope
sahf
sub
sub
test
stos
inc
je
inc
sub
push
mov
add
xchg
add
push
jl
repz
mov
test
jb
test
adc
rol
nop
push
push
shrl
xchg
xorl
sbb
pop
xor
in
sarb
out
xor
add
cli
movsb
popa
repz
jp
and
add
pop
shl
push
jmp
add
jnp
test
and
sbb
add
ja
dec
test
pop
and
jecxz
fisttpl
ret
sub
and
sarb
cmp
jne
mov
test
fsub
mov
or
add
mov
cmpsl
clc
fcmove
xor
mov
int3
fdivr
outsb
std
test
push
mov
cmp
sbb
pop
imul
call
sbb
xchg
add
xchg
aaa
lret
scas
mov
cmp
cltd
in
insl
xor
jecxz
lcall
or
adcb
xor
adc
scas
mov
rcrb
sarb
out
cmp
adc
stos
sbbl
cltd
js
sub
fimull
adc
insl
sbb
jno
fbstp
cmp
mov
fstp
rol
push
dec
sub
sub
addb
int
ficompl
dec
xor
hlt
xor
pop
enter
xor
in
mov
cld
and
sbb
push
outsl
and
js
pop
addr16
cmc
jmp
dec
shlb
inc
popa
fwait
dec
sbb
into
mov
fsts
and
push
jp
out
cmp
ss
imulb
daa
jae
icebp
int3
adc
cmc
imull
sahf
stos
xor
out
dec
cmp
test
arpl
imulb
lods
jae
iret
push
add
dec
mov
and
shlb
dec
mov
cmp
cmp
pop
pushf
mov
and
mov
decl
ja
scas
cmp
jns
dec
add
out
popa
sbb
repz
pop
outsl
testb
and
push
dec
inc
push
mov
loope
xor
sti
shll
push
pop
insl
iret
lahf
jnp
or
gs
fs
bound
cli
lods
icebp
test
adc
repz
inc
mov
mov
in
sbb
enter
jbe
addb
mov
aad
mov
add
cmp
nop
add
les
out
es
data16
cmc
mov
scas
dec
jmp
jo
mov
nop
jno
fstl
add
out
ljmp
inc
gs
addr16
jle
add
dec
pushl
jecxz
xchg
lock
test
sub
scas
nop
mov
fs
push
and
test
orl
nop
add
xlat
fadd
es
xchg
out
pop
push
mov
and
and
xchg
mov
push
cmp
rcrl
cmpb
pop
clc
dec
mov
sub
jmp
xchg
jmp
fldt
rclb
das
mov
mov
loopne
sub
and
push
jns
xor
out
test
test
sbb
xchg
shll
mov
jecxz
adc
dec
frstor
push
sbb
ffreep
hlt
cltd
adc
call
mov
fiaddl
ret
sub
push
out
out
pop
fcmovbe
test
movsl
int
mov
in
iret
lds
clc
push
sbb
xor
call
paddusw
sub
cmc
push
and
es
cmp
sahf
js
dec
pop
lcall
sbb
sbb
rorb
push
inc
push
cmp
and
dec
scas
sub
lock
call
jne
dec
daa
xchg
mov
cs
or
sbb
add
ret
lret
xchg
sub
add
mov
xchg
xchg
nop
cmc
ja
aam
stos
and
testl
sub
pusha
popa
scas
mov
call
xor
cwtl
scas
ret
and
in
adc
mov
sahf
xchg
icebp
fiadds
xchg
mov
push
mov
push
push
testb
sldt
out
xor
stos
push
bound
adc
mov
and
fs
in
clc
mov
ret
jne
pop
in
divb
scas
or
jno
cmpsb
xchg
sbbl
fdivr
insb
mov
call
popf
add
pop
adc
lock
dec
sbb
xchg
mov
xor
push
imul
lods
repz
in
int
xlat
in
sub
adc
xchg
loop
imul
rorb
mov
xchg
stos
mov
je
test
mov
sub
out
incb
sub
stos
jmp
scas
pop
inc
in
sbb
mov
int
jae
inc
xor
popa
sub
cmp
pop
jne
rcll
aaa
cmp
mov
dec
test
testb
fucomip
addr16
inc
adc
sbb
aaa
lret
stc
loop
cmpsb
jae
add
adc
mov
jg
das
lock
fst
scas
or
mov
gs
mov
or
cmp
dec
dec
int3
test
repz
test
sbb
dec
xor
ds
in
icebp
dec
rcrb
test
sti
int
and
daa
test
push
mov
or
push
lods
loopne
imul
xor
push
jns
pop
lret
mov
jne
sub
xor
fwait
xor
and
dec
mov
jnp
jnp
mov
or
xor
out
cltd
movsl
push
int3
cmp
mov
pop
aad
scas
and
lea
icebp
sub
out
cmp
push
clc
rcr
sub
jnp
pop
ljmp
sbb
push
pop
mov
xchg
dec
sub
add
jae
jbe
cld
mov
outsb
ss
shl
adc
or
jns
pop
or
pushf
xchg
test
out
js
or
into
rcr
dec
enter
je
into
mov
mov
jle
add
clc
aad
dec
fisubrs
fldl
sbb
cmpsl
insb
sub
dec
loopne
fnstsw
cmpsl
insb
cmp
adc
insl
pop
jle
xor
leave
loope
daa
inc
cmc
test
dec
xchg
adc
lcall
cmpsb
and
stc
mov
inc
mov
mov
pushf
cltd
out
sti
ja
push
adc
leave
dec
cmp
in
pop
aam
lcall
in
int
scas
int3
fcomp
push
aas
mov
sbbb
dec
and
sub
push
or
fcomp
xor
out
std
lea
outsb
in
push
or
popa
xor
add
lcall
push
sar
sbb
mov
mov
adcb
cld
sti
nop
sbb
mov
shll
adc
pop
clc
xchg
xor
cmp
pop
sti
inc
idivb
ja
lahf
cmc
mov
xchg
lea
test
nop
xchg
xor
cli
icebp
lea
sub
outsb
fmuls
jb
dec
dec
inc
cmc
mov
movsl
adc
cs
mov
mov
dec
js
sub
add
cli
call
push
lcall
aas
cmp
fstl
sarl
and
push
les
jbe
or
test
testb
hlt
mov
lahf
jp,pn
enter
out
ret
pop
jbe
js
push
xor
cmp
push
pop
imul
xor
rorl
pop
insb
stc
nop
push
add
mov
lahf
dec
jb
repnz
jmp
xlat
mov
inc
icebp
dec
test
iret
testl
or
fwait
ds
mov
mov
pop
imul
fisubrl
orl
mov
cli
xchg
gs
and
orb
sbb
bound
es
aam
rclb
pop
stos
lock
push
xchg
adc
lahf
and
push
idivb
lea
incl
mov
adc
cmpsb
jbe
jo
inc
or
push
sub
enter
lahf
and
cmp
jle
loope
mov
fwait
jl
jmp
and
iret
cli
jb
sbb
int
cmpsb
push
dec
and
out
pop
fisttps
jne
mov
mov
xchg
popa
cli
xchg
mov
and
and
cld
out
aad
scas
je,pt
mov
jp
xchg
xchg
loope
and
inc
or
and
mov
ss
xchg
inc
inc
inc
shlb
dec
mov
adc
mov
xchg
shr
je
push
sub
jne
mov
sub
les
into
clc
ficomps
add
or
test
repnz
cmp
add
in
sbb
sbb
pushf
lds
mov
popf
mov
cs
test
dec
cld
xchg
icebp
push
es
stc
cmp
dec
shrl
push
into
mov
mov
imul
or
fisttps
ljmp
mov
xor
fmuls
and
jmp
out
int
jno
sub
jno
sti
xor
or
pop
push
mov
cmp
fisttps
popf
cld
imul
mov
xor
mov
lods
test
inc
std
mov
jne
dec
mov
lret
popa
dec
stc
cmp
rclb
dec
cmpsl
pusha
fdivrs
dec
adc
in
dec
and
xchg
out
mov
adc
sbb
test
cmp
loope
in
fistpll
sbb
jne
pop
inc
jb
add
jmp
sub
stos
in
push
inc
or
popf
push
bound
gs
jne
jbe
ficompl
and
inc
sbb
jge
scas
in
lea
sbb
and
and
sub
ror
sbb
out
mov
xchg
pusha
lea
jl
adcl
mov
mov
push
xor
sub
add
imul
mov
push
adc
mov
xchg
pop
jns
xor
movsl
aam
lods
pop
adc
or
cmp
mov
xor
clc
lahf
ljmp
fisubrs
ret
pop
mov
and
orl
or
cmpsb
jg
push
in
shlb
and
xlat
out
adc
xchg
in
inc
mov
jecxz
test
xchg
mov
add
jo
push
mov
clc
mov
inc
xchg
jge
pop
js
fbstp
mov
cmp
stc
mov
mov
xchg
out
xor
std
ja
and
inc
outsl
out
dec
xchg
fildll
jl
into
pushf
jb
imul
aas
or
dec
push
mov
push
sbb
push
out
mov
pushf
fucom
in
rclb
and
and
ja
hlt
mov
mov
pushf
enter
xor
insb
jmp
sarl
inc
and
sub
xchg
jo
jge
ret
mov
xchg
push
cmpsb
repz
fwait
lock
xlat
mov
or
push
int
or
ljmp
dec
loopne
testl
out
inc
add
push
mov
cmp
dec
out
sbb
fisttpll
adc
dec
ficompl
test
add
adc
add
jmp
mov
mov
jo
xchg
pop
int3
mov
pop
std
sbb
mov
xchg
add
es
push
xor
es
inc
cmp
lahf
sub
jbe
fisttpll
push
and
push
pop
xor
ficomps
mov
insl
push
aad
and
stos
xchg
and
mov
lock
cwtl
fmull
fisubs
in
divb
or
xor
sub
lods
push
mov
movsl
call
int3
ljmp
or
dec
daa
js
mov
mov
lods
xlat
pop
insb
adc
mov
jno
mov
lret
fidivl
dec
popf
dec
mov
push
iret
fisubrl
jg
mov
add
cmp
xchg
add
in
stos
mov
jne
xchg
outsl
mov
into
push
jbe
sbb
and
pop
scas
into
pop
cmp
jo
cmpsl
inc
clc
out
sbb
sahf
cmp
repz
xlat
jae
movq
les
adc
fs
sar
pop
mov
loop
lock
adc
lcall
out
out
insb
outsl
test
sarb
call
push
mov
sahf
sbb
jmp
int
push
dec
les
push
push
cmpb
mov
push
mov
in
xchg
push
push
jmp
pushf
lods
bound
sti
push
dec
lock
push
or
jne
cltd
out
rcr
into
inc
mov
mov
push
incb
shlb
fadds
int
xchg
icebp
mov
dec
xchg
push
adc
stc
jne
imul
dec
mov
push
and
fnstcw
sbb
mov
sti
pop
in
push
mov
aam
xor
mov
outsb
dec
sti
aas
pop
les
ja
add
pop
or
sar
cmp
cmp
fstl
lahf
and
ret
shlb
and
mov
sbb
int
gs
mov
mov
stos
pop
jmp
insb
in
imul
xlat
dec
orl
int3
jle
mov
push
lods
jns
aam
outsb
sbb
pop
mov
lret
dec
xchg
scas
movsb
stos
sbbb
movsb
je
dec
fsubrl
jge
cmp
xchg
js
sahf
sbb
xor
or
ja
xor
add
loope
add
pop
pushl
int
loopne
adc
test
push
sbb
or
negl
test
adc
mov
add
or
scas
adcl
pop
mov
les
enter
addr16
jae
sub
sbb
push
sbb
mov
push
pop
xlat
push
movsl
sbb
pop
nop
adc
xor
pop
testl
mov
pop
mov
fwait
cs
dec
insb
sub
lock
push
add
push
pushf
pop
shl
xor
loop
push
mov
fisubrl
cmpsl
sarb
add
scas
into
mov
mov
das
jmp
rclb
fs
icebp
mov
cmp
arpl
ror
lock
inc
addr16
lea
adc
cmp
mov
icebp
jns
jno
cmp
ss
push
aas
xor
sub
dec
imul
mov
cmp
push
inc
insb
add
int
mov
stos
mov
sub
icebp
mov
addb
int3
xchg
push
call
jmp
stc
out
lret
imul
pushf
adc
xchg
mov
out
jb
js
cs
cmc
sahf
jo
push
add
aas
nop
pop
xor
or
push
sahf
sbb
cwtl
jecxz
dec
push
scas
pop
js
mov
push
push
xchg
dec
mov
push
mov
xchg
mov
sarb
adc
xchg
clc
inc
ja
dec
rorl
push
jp
int3
xor
imul
and
int
and
movsb
cmp
cmp
cld
das
sbb
pop
addr16
in
ret
inc
pop
cltd
shlb
adc
pop
and
mov
jae
pop
ds
addr16
test
fwait
and
arpl
divl
cmp
daa
adc
fmuls
fmull
imul
lahf
mov
and
mov
movsl
cmp
lcall
push
fcmovnb
ret
loope
rcll
jl
repnz
push
std
sub
mov
xor
and
pop
out
pop
xchg
push
out
jo
push
pop
xchg
in
xchg
or
sub
sub
or
imul
pop
add
movsb
mov
mov
cld
add
mov
add
out
fs
in
adc
test
xchg
and
call
fsubp
pushw
ret
and
jns
mov
add
mov
or
lods
xor
mov
sub
inc
ljmp
xor
aas
add
fiaddl
and
and
gs
add
cmpsl
stos
jb
pop
pop
pusha
push
movsl
xchg
cmpsl
cmp
mov
inc
sahf
xchg
push
xor
dec
mov
cs
leave
mov
insb
mov
aaa
and
push
sbb
cmpsb
jbe
pop
es
outsb
mov
out
push
dec
enter
mov
mov
dec
test
inc
push
pop
jmp
into
leave
fadds
int3
dec
mov
mov
movsl
add
jecxz
dec
push
mov
and
adc
mov
ret
fnsave
es
mov
ficompl
mov
dec
inc
xor
incb
out
cmpsb
or
mov
stos
fsubrl
sub
insl
test
jmp
sub
xchg
mov
insb
mov
sub
in
pop
xchg
add
insl
das
dec
jbe
pop
sbb
mov
add
mov
in
fnstenv
dec
lds
in
fimuls
push
xlat
out
xchg
or
jl
fistpll
jg
fs
pushf
xchg
cltd
sbb
dec
pop
loope
or
mov
sbb
dec
stc
xor
sahf
test
mov
test
mov
push
jmp
fnstenv
in
stos
orb
inc
jno
pop
mov
pop
add
stc
push
es
lret
cltd
fwait
xchg
cmpsl
dec
xchg
jbe
mov
fiaddl
push
mov
in
xchg
aad
and
push
rolb
add
aaa
bound
add
push
cwtl
jecxz
sti
rolb
dec
push
mov
jnp
outsb
cmp
mov
jns
mov
dec
mov
imul
iret
cmp
ja
pop
imul
push
mull
sarl
cmp
aam
pop
fidivrl
int
int3
push
outsb
dec
test
insb
jle
cmp
pop
push
xor
inc
and
xor
dec
or
pop
xchg
ss
mov
add
jp
cmc
sbb
outsb
lds
mov
js
jbe
xor
inc
and
lds
push
push
inc
clc
lods
rorb
pop
fmulp
or
cwtl
xchg
xchg
test
sbb
jnp
mov
outsb
sub
and
cltd
stos
subl
adc
cmp
or
mov
cltd
inc
or
pop
imul
xor
rol
jl
dec
adc
aam
pop
in
inc
inc
and
std
cmp
push
sub
je
add
loop
jo
cmc
jae
lock
xor
adc
clc
inc
xchg
and
in
mov
adc
push
arpl
into
push
lock
inc
lea
int
dec
pushf
aas
xor
clc
mov
xor
xlat
repz
cwtl
pop
test
sub
adc
xchg
fisubs
jg
inc
outsl
jle
mov
xor
in
outsl
xchg
into
fdivr
data16
mov
fadd
sub
scas
add
aad
test
mov
xchg
cli
repz
pop
dec
push
xchg
or
ffree
add
jb
xchg
sub
jbe
std
arpl
or
std
fwait
out
push
add
or
cld
je
inc
adc
inc
pop
loop
xchg
mov
pop
adc
loope
mov
in
rorl
lea
mov
push
xor
lret
dec
push
outsl
fsubl
ret
iret
or
fstl
jp
and
jbe
ret
mov
mov
int3
outsb
xchg
stc
ljmp
mov
ds
cmp
push
inc
dec
cltd
clc
or
pop
stos
aaa
jp
mov
ret
lcall
mov
nop
rolb
jle
xchg
testb
arpl
into
dec
shl
fisubrs
adc
xchg
leave
mov
jmp
sub
mov
test
sub
sti
cmp
cmp
and
mov
mov
mov
cltd
cmp
ret
xlat
cs
jle
fisttps
aam
out
out
add
lret
push
xor
adc
fistl
cmpsl
pop
mov
mov
data16
mov
fnstenv
mov
pop
jmp
arpl
js
push
sub
in
stos
adc
jo
out
aaa
inc
push
xor
jne
decb
mov
xchg
fsubrs
mov
push
cmp
roll
jl
std
testb
mov
push
lret
mov
pop
cmpb
and
inc
add
mov
push
cmpsl
mov
mov
out
xchg
pop
sbb
lret
in
cmp
data16
push
mov
and
lea
push
icebp
scas
and
or
or
add
aam
mov
stc
nop
insl
and
lret
fsubs
das
out
int3
daa
xchg
add
mov
pop
gs
aad
gs
inc
mov
fsubl
ret
dec
add
fidivrs
inc
mov
pushf
jp
inc
inc
add
push
andl
je
dec
xlat
pop
sarl
push
dec
inc
sub
aam
xchg
pushf
popa
xchg
and
mov
pop
push
out
shl
pop
push
inc
stos
mov
fdivs
cwtl
jno
enter
push
mov
xor
scas
dec
inc
es
push
les
arpl
xchg
cmp
les
xchg
fs
cmp
push
ret
movsl
jle
or
or
and
pop
xchg
push
test
mov
aam
lahf
adc
pop
adc
outsl
xor
pushf
mov
pop
jmp
sbb
pop
add
jmp
sbb
sub
xchg
mov
sbbl
adc
mov
fwait
ljmp
test
cld
mov
fsubp
ds
mov
xor
mov
push
int
xchg
in
jmp
into
insb
inc
loop
outsb
aaa
out
into
add
mov
mov
stos
cwtl
jg
sbb
ja
push
out
xchg
jbe
out
push
mov
push
int3
js
in
xchg
xor
das
arpl
ror
cmpsb
cmp
test
sub
mov
ljmp
dec
push
cmpl
push
xchg
and
add
cmc
loop
jne
and
jl
lds
add
jge
ljmp
pop
adc
ret
mov
lds
jecxz
push
cmp
mov
and
jg
pop
ja
pop
adc
inc
sbb
pop
shll
in
inc
fiaddl
lret
nop
sbb
movsl
push
out
aaa
shrl
icebp
push
mov
loopne
jnp
pusha
js
arpl
movsl
ljmp
xchg
pop
cmpb
cmp
rcrl
inc
in
mov
daa
adc
sbb
in
cmp
lods
and
mov
push
lock
gs
inc
cmpsl
or
jp
dec
out
xor
push
jae
lret
aaa
es
fs
sub
jae
out
sbb
mov
mov
dec
push
or
sub
push
adc
mov
xor
or
adcl
pop
dec
sbb
xchg
mov
movsb
outsl
push
mov
push
pop
inc
es
dec
in
pop
dec
dec
nop
nop
jecxz
mov
sub
xchg
fisubrl
or
cmp
add
leave
xor
es
ret
mov
mov
lds
mov
lea
insb
stc
cltd
pusha
or
push
sbb
cltd
data16
ljmp
jmp
and
lock
outsb
into
xchg
andb
ss
xor
and
insb
out
mov
ficoms
aas
icebp
cs
mov
inc
cli
lret
xchg
cmpsb
in
outsb
and
mov
das
sub
adc
xor
pop
add
add
mov
test
scas
dec
inc
cmc
pop
pop
js
dec
test
mov
ffreep
mov
inc
fiaddl
shll
push
dec
mov
inc
jb
in
rcl
xor
mov
test
adc
cltd
mov
out
add
add
cmpsl
call
adc
icebp
out
push
fs
outsl
out
mov
or
pusha
imul
pop
sbb
hlt
lea
lods
pop
push
fs
in
xchg
xor
test
pop
xchg
hlt
sub
inc
sub
lods
sbb
rcr
fwait
jl
daa
loope
jg
popa
mov
xor
into
sbb
push
and
mov
jne
bnd
sub
dec
pop
add
mov
jbe
hlt
mov
movl
inc
jo
das
pop
dec
xchg
or
filds
or
je
ds
dec
in
xchg
add
pop
sti
mov
inc
jns
ret
xchg
inc
pop
cmp
cltd
adc
testb
dec
mov
fbstp
mov
scas
dec
lea
rcrb
mov
mov
outsl
mov
lea
sub
mov
inc
mov
dec
or
popa
mov
fcompp
jle
mov
and
popf
xor
xor
xlat
push
mov
jbe
sbb
adc
arpl
in
mov
or
dec
mov
push
popa
or
sbb
sub
dec
dec
or
cmpsl
push
jmp
push
test
and
sbb
mov
in
loop
xchg
cmp
xor
out
dec
add
sbb
add
scas
lods
pop
cs
call
cmp
dec
mov
xchg
push
and
mov
loop
mov
dec
inc
ja
cmpsl
imul
jae
ret
int3
cmp
mov
xchg
xor
and
or
sub
xor
and
loopne
sub
and
scas
lds
inc
lock
xlat
div
mov
sbb
loopne
dec
inc
jp
jecxz
cmp
dec
lea
add
cltd
cmp
shlb
xor
adc
and
in
adc
jle
lods
adc
sbb
loope
inc
mov
mov
mov
mov
and
xchg
sti
outsl
add
and
jle
je
stos
in
je
movsb
out
jle
sbb
mov
movsb
and
repnz
cmpsl
int
fs
dec
inc
mov
lods
adc
ljmp
vpshufd
in
adc
pop
fisttps
movsb
add
out
and
aaa
idiv
push
pop
pop
mov
push
dec
bound
nop
mov
imul
sub
popa
jl
lahf
lea
xchg
addr16
mov
in
fs
jns
or
cs
lods
fiaddl
dec
and
nop
jl
lcall
jb
mov
and
imul
in
mov
push
jmp
in
addl
aad
mov
ret
jno
gs
add
sbbb
sub
pop
imul
xchg
mov
adc
inc
dec
add
mov
dec
les
adc
or
push
pop
cli
lcall
push
pop
sub
adc
lock
sbb
push
jne
scas
leave
add
inc
pop
aas
into
call
dec
push
int3
xchg
in
mov
rcrb
rcr
imul
lret
fwait
cmpsb
sbb
cmpsl
shlb
fdivl
pop
shll
cmp
mov
cwtl
dec
cmpsl
mov
in
mov
xor
and
xchg
das
sub
jno
dec
or
cmc
rcrl
mov
daa
aad
mov
in
pop
lods
fstpt
loopne
mov
mov
pusha
sub
xchg
sbb
push
out
cltd
mov
xor
push
mov
add
push
mov
enter
sbb
mov
push
adc
cmpsb
cmp
mov
and
push
inc
daa
out
add
mov
and
subb
popf
jne
pushf
dec
jg
or
mov
rcl
add
scas
inc
stc
les
and
loope
cmpsl
leave
pop
sarb
jecxz
mov
je
roll
imul
pop
leave
jp
push
mov
and
test
fisubrs
add
inc
adc
mov
outsl
je
cmp
push
fcmovb
xchg
mov
jecxz
jle
xchg
scas
or
in
ret
sahf
sub
xchg
push
ficomps
call
pop
test
mov
jge
gs
mov
notb
arpl
xchg
xchg
push
fsubrl
js
or
movsb
xchg
gs
insl
dec
push
imul
add
data16
lar
lock
ja
sub
pop
mov
add
pop
dec
scas
into
mov
xor
mov
fldcw
sbb
enter
pandn
cmpsl
xchg
xchg
imul
rclb
mov
scas
popf
and
xor
test
mov
push
ds
hlt
mov
nop
jns
into
stos
lods
das
aam
push
sub
mov
or
push
mov
and
setge
loopne
adc
mov
or
mov
push
int
pop
jnp
or
ds
movsb
scas
in
daa
lret
lahf
push
pop
stos
mov
mov
hlt
cmp
jnp
jg
cs
divb
pop
sti
lock
mov
stc
cs
adc
test
sti
xchg
cwtl
cwtl
xorl
pusha
jbe
mov
cld
pushf
jecxz
push
jne
push
aad
call
sub
add
and
fidivrl
or
mov
nop
mov
pushf
mov
adcb
jae
bound
xchg
sub
or
sbb
cmp
fisttps
dec
fisubrl
jae
adc
inc
sbb
movsl
and
rclb
cmp
cmp
enter
hlt
scas
pavgb
push
pop
dec
mulb
inc
jno
or
lcall
inc
or
lea
addr16
inc
dec
cwtl
in
sub
push
sub
enter
lds
test
xor
sti
push
sahf
push
clc
cmp
sti
iret
aad
add
dec
pop
cmp
arpl
pop
sub
sarl
cmp
sub
addr16
mov
out
cmc
mov
testb
pop
jae
push
les
aam
sbb
mov
das
mov
or
or
mov
xchg
inc
xlat
sbb
cwtl
leave
out
outsl
cltd
xchg
lret
gs
stos
cmc
mov
stos
mov
scas
sub
pushf
bound
mov
add
out
arpl
fsubrs
cmpsb
daa
push
outsl
push
mov
sbb
jo
enter
aad
mov
push
sbbl
pop
sarl
popa
loope
clc
bound
pop
insb
xor
push
xchg
add
sar
jns
push
mov
imul
push
sbb
mov
and
and
in
imul
lcall
rorl
enter
mov
sub
push
sbb
mov
dec
fstp
xchg
xor
xchg
or
adc
push
enter
inc
aad
pop
ror
sub
inc
ret
cli
cmp
pop
js
insb
out
out
cld
stos
cmp
out
xor
stos
aaa
mov
jo
jno
cli
cmc
cmp
sub
mov
sub
loopne
data16
add
testl
outsb
mov
and
jecxz
pop
cli
mov
xor
inc
testb
aad
jmp
mov
cmp
mov
stos
xor
xchg
mov
mov
inc
mov
in
pop
add
cmp
dec
sbb
imul
jl
jg
scas
cli
jg
fisubrl
adc
mov
cs
xor
lods
fs
shlb
adc
gs
xor
and
mov
mov
push
xor
addr16
or
cmc
push
testb
lea
cltd
divl
xchg
add
hlt
jnp
jne
push
sbb
ficoml
or
out
lcall
jbe
dec
lret
cmc
push
add
mov
in
jge
xchg
mov
inc
xchg
fsubl
cmp
shlb
push
jb
sahf
icebp
push
xlat
pop
push
and
pop
push
sbbl
popf
jns
test
inc
loopne
ljmp
sti
ljmp
lahf
xor
test
pop
mov
outsb
xor
lods
mov
and
push
pop
mov
mov
test
fdiv
fistl
and
push
cmp
mov
pop
or
fst
xchg
movsb
cwtl
sbb
push
xchg
sbb
loopne
dec
mov
data16
pop
sub
sub
and
mov
add
std
nop
test
pop
aas
sub
sub
aam
xor
adc
ljmp
sub
sbb
push
mov
xchg
lret
repnz
mov
and
inc
xor
popf
xlat
nop
fs
fmull
push
test
sbb
pop
out
lods
or
das
jno
or
mov
aas
test
pop
adc
pop
gs
popa
or
sbb
or
test
sbb
cs
pop
test
or
mov
pop
call
and
push
jmp
push
out
gs
mov
mov
mov
mov
jmp
imul
arpl
out
jp
xor
push
rcl
cmp
mov
fsubr
test
xor
shr
insl
ret
cltd
sub
xchg
idivl
movsl
push
or
lods
dec
inc
div
lahf
or
push
imul
mov
bound
push
fidivrl
lcall
jl
pop
or
popa
and
int
jl
fwait
sbb
cmc
inc
mov
xlat
jp
push
adc
mov
stc
js
jb
or
sbbb
jp
xchg
int3
mov
mov
outsl
xchg
je
mov
xor
das
sbb
fiadds
jbe
mov
adc
lds
xor
sarb
pop
jmp
mov
inc
daa
jbe
cli
jmp
nopl
push
enter
mov
fs
push
scas
sub
xchg
in
in
in
cmp
nop
push
pop
sbb
adc
jp
arpl
xchg
mov
daa
jb
fldt
aad
sbb
adc
das
in
lretw
mov
pop
xchg
lds
outsb
adc
dec
sbb
xlat
arpl
adc
bound
sbb
add
cli
adc
jo
mov
test
adc
pop
sub
andl
sub
xchg
pushf
andl
mov
jg
mov
or
pop
int3
arpl
fists
add
sub
lods
jmp
xor
iret
or
imul
lods
imull
mov
cmp
jl
add
xchg
or
or
xor
cmp
and
addr16
int3
push
fimull
sbb
push
inc
fwait
jp
pop
out
rcrb
outsb
lcall
add
cmp
ss
jbe
jg
mov
dec
inc
push
jno
pop
xchg
fstl
bound
dec
mov
dec
sub
test
aaa
nop
stos
sbb
fcoml
hlt
adc
jecxz
loope
hlt
pop
ret
cltd
lock
lret
mov
fsub
or
add
cmp
mov
dec
mov
mov
adcb
gs
xchg
test
imul
jg
mov
mov
jne
add
les
pop
sahf
dec
ljmp
cs
aam
or
sub
mov
mov
jo
call
repz
out
add
mov
scas
ss
dec
sub
out
lret
aad
push
adc
xor
adc
pushf
or
das
daa
bound
test
loope
jecxz
pop
nop
pusha
mov
int3
nop
mov
data16
addr16
inc
mov
pop
fidivl
xchg
subb
ret
adc
inc
cmpsb
cwtl
std
sbb
add
out
fstps
sub
and
mov
in
lcall
pop
mov
test
in
xchg
jb
mov
mov
add
add
dec
adc
push
addb
xlat
out
ret
rcr
nop
mov
mov
mov
cmp
mov
outsl
imul
jns
aas
aaa
fstl
lcall
pop
dec
add
dec
in
mov
nop
popa
push
jae
add
cmp
fstl
jbe
flds
or
add
or
repz
or
dec
add
pop
out
ljmp
or
push
in
sbbl
insl
jae
xchg
cli
pop
fidivrs
movsb
gs
jmp
pop
not
and
rorb
xchg
lahf
out
popa
clc
pop
fwait
jmp
scas
jecxz
sub
inc
mov
adc
add
push
les
lret
jecxz
cmp
icebp
iret
fcomip
inc
enter
add
rcll
fwait
mov
push
pop
lret
mov
xor
lret
push
in
mov
mov
sbb
mov
lods
aas
adc
repnz
mov
mov
cmp
ret
mov
mov
mov
js
leave
cs
decb
dec
jns
les
mov
out
mov
mov
test
fadd
out
jecxz
pop
aam
lods
sahf
data16
das
add
pop
call
ja
xor
cmp
xor
shr
mov
add
sbb
jae
std
dec
cltd
fnstcw
aas
push
jns
lea
push
sub
mov
mov
or
loope
enter
cmpsl
sarl
xchg
popf
ss
jbe
in
filds
pop
incl
jbe
mov
jmp
cmp
jns
sub
fimuls
and
add
imul
jnp
push
adc
sbb
lcall
mov
jne
mov
gs
mov
mov
xlat
cmp
mov
loopne
pop
sbb
mov
push
push
clc
sbb
mov
push
cmpsb
mov
push
test
or
and
xlat
adc
add
jmp
add
loop
leave
cmpsl
loope
les
xor
sub
pop
pop
jno
ret
mov
and
imul
pop
add
idivb
sbb
xlat
cmpsb
ret
xor
pop
cs
sbb
xor
sahf
mov
dec
repnz
sbb
jo
cmc
cmp
and
push
int
xor
arpl
xor
aad
lods
xor
scas
fisubrs
or
push
jle
in
sbb
push
jbe
jle
inc
or
shlb
adc
aas
inc
and
bound
in
mov
push
xchg
cld
fmul
fs
mov
xor
xor
out
scas
in
adc
in
or
dec
into
push
ret
inc
mov
inc
leave
mov
insb
adcl
stos
sarb
pop
xchg
add
adc
xchg
jmp
lods
test
jmp
dec
mull
dec
adc
shll
ja
add
mov
cwtl
inc
fwait
int
arpl
adc
xchg
and
loope
jae
cmp
ficompl
ljmp
jnp
jg
and
outsl
mov
lds
movsb
pop
stos
ss
and
or
xchg
jbe
inc
mov
popf
dec
mov
cwtl
push
sbb
clc
pop
mov
add
or
dec
fdivs
addl
cmp
jns
xor
sar
mov
clc
or
cmp
jp
lds
jne
mov
or
popf
inc
ret
inc
fldt
jne
mov
xchg
jecxz
mov
mov
notb
scas
or
mov
popa
gs
loopne
mov
xor
and
xchg
nop
mov
push
cs
adc
add
xlat
out
jo
pop
mov
rol
xlat
mov
xchg
and
pop
push
xor
popfw
dec
push
sahf
push
cmp
sub
sbb
add
ret
in
sub
xlat
dec
clc
pop
inc
jp
mov
ds
sbb
xchg
cmc
mov
jge
mov
adc
arpl
sub
rcl
orl
repnz
pop
repnz
pop
inc
stos
scas
cld
aaa
stos
mov
loopne
into
aad
adc
out
sbb
insl
cmp
xchg
cmp
mov
mov
sar
cltd
mov
jp
stc
pop
dec
mov
ficomps
push
pop
sub
or
push
sti
aas
out
adc
push
mov
dec
rclb
insl
jbe
sbb
outsl
loopne
enter
aaa
mov
imull
add
iret
jns
ret
addl
mov
leave
xchg
or
aam
in
mov
pop
mov
mov
xchg
inc
fiadds
in
inc
test
dec
pop
not
out
push
in
lods
push
out
into
push
push
inc
sub
xlat
out
popl
sbb
mov
insl
ret
adc
sub
enter
dec
add
jno
or
cmp
add
into
push
sbb
repnz
popa
notb
adc
data16
jecxz
std
lods
in
gs
mov
inc
mov
insb
out
mov
pop
xor
pushl
or
ja
mov
pop
mov
in
imul
fsubr
bound
push
sub
and
jl
rolb
mov
dec
arpl
leave
and
or
pop
cmpsl
stc
mov
movsb
int
jmp
popa
xchg
stos
int
mov
je
lock
mov
leave
pushf
sti
cmp
out
scas
inc
int3
lods
cwtl
and
cmpsl
jb
aas
and
lods
sub
add
ljmp
dec
dec
and
or
add
mov
lcall
sub
add
dec
in
or
or
jl
add
mov
lds
jbe
mov
notb
adc
call
frstor
sti
pop
xor
mov
pop
imul
rorb
movsb
cmp
enter
scas
loopne
sbb
push
test
add
jp
pop
xlat
fs
std
cltd
mov
stos
pop
enter
in
jne
add
push
cld
pop
jbe
mul
xor
stos
pop
cmp
idiv
pusha
cmpb
add
dec
jp
jg
push
jo
xor
daa
xchg
in
push
xchg
les
les
lods
fldt
jno
aam
fsub
mov
add
shr
jo
cmp
cmc
jnp
dec
mov
clc
push
xlat
ss
scas
ljmp
jno
or
mov
sub
xlat
cmc
mov
andl
test
lock
mov
mov
fmuls
fisubrs
add
push
divb
ja
int
cld
outsb
in
push
out
sar
cmp
mov
into
inc
insb
pop
outsl
in
mov
mov
cmpsb
ret
int
or
mov
inc
dec
jo
into
pop
pop
and
and
movl
pop
xchg
xor
loop
jae
call
movsl
dec
inc
stos
loopne
outsl
xchg
mov
mov
xchg
dec
std
push
xor
std
enter
and
sbb
cmpsl
push
mov
cmp
push
add
xchg
dec
adc
pop
fmull
stos
or
cmp
loope
out
lret
inc
and
loope
in
and
lcall
test
inc
subb
mov
nop
daa
adc
lret
jle
add
cmp
inc
repnz
rcr
lock
and
cmp
pop
adc
aas
or
out
or
stos
adc
jg
pop
cmpsl
cmp
pop
je
cmp
adc
ja
hlt
jg
notl
mov
enter
mov
lret
cld
mov
push
xor
add
adc
adc
jle
nop
testb
enter
icebp
push
xchg
ret
gs
das
mov
ljmp
add
lock
sub
inc
lcall
int
fstl
fmulp
movsl
fistpl
fldcw
jle
xchg
call
xchg
pop
jecxz
and
je
or
push
lds
loop
adc
adc
shrb
push
std
add
enter
pop
mov
cld
xchg
xchg
lods
xor
pusha
stos
adc
mov
popa
iret
mov
or
arpl
xchg
and
repz
and
mov
call
sbb
xlat
mov
jne
stc
in
roll
pusha
push
aaa
mov
fsts
mov
dec
je
aaa
cld
cmc
loop
negb
inc
and
mov
jge
lock
outsb
stc
mov
jb
adc
rcrl
adc
mov
rcrl
js
jg
es
in
pop
mov
xor
fstpl
adc
jb
mov
dec
cmp
sub
xchg
add
jb
xor
sbb
lret
sbb
out
in
inc
clc
cmpsl
scas
push
inc
test
outsl
sbb
mov
sbb
add
mov
insl
jbe
orb
dec
add
inc
pop
insl
jns
jb
sahf
push
and
jl
add
imul
adc
es
fldcw
mov
lcall
adc
xor
add
add
pop
xor
aaa
jecxz
popa
rclb
sti
daa
pushf
out
dec
push
loop
xchg
mov
enter
fsubl
adc
cmpsl
outsl
push
xchg
cmp
or
push
jo
xchg
dec
cmc
ds
idiv
mov
jbe
les
and
loope
add
pop
inc
sahf
push
scas
cmp
and
clc
xchg
add
adcl
cs
xor
movsl
mov
fnstenv
cltd
mov
mov
push
jg
inc
stos
ret
sbb
sub
fisubrl
insb
cmc
or
sub
mov
ret
lcall
out
xorl
cmp
jmp
into
dec
mov
test
sub
call
mov
add
out
sub
iret
mov
jbe
mov
dec
test
add
in
sbb
je
pop
cli
test
movsb
or
pop
push
mov
sbb
xor
test
test
loope
or
sti
xchg
jbe
pop
add
mov
mov
test
xchg
cltd
sub
push
mov
insb
pop
pushf
fistl
jo
xchg
cmp
mov
cli
add
dec
test
in
sbb
sub
jle
bound
daa
pop
ds
sarb
pop
lods
xor
jns
pop
stos
inc
sbb
add
sub
fldt
into
faddl
lret
push
adc
lret
lock
and
in
or
aad
dec
pop
ret
shll
subb
cltd
sti
mov
popa
sub
sub
in
xor
mov
add
sub
pop
or
jns
fnstcw
push
xchg
fwait
adc
in
xor
sbb
int3
sbb
repnz
push
int3
xor
lahf
jae
and
inc
loopne
mov
int
push
in
les
fldt
outsl
cmp
cmp
loopne
lea
push
mov
xor
int3
sub
notl
jns
icebp
enter
dec
add
mov
xor
into
sub
iret
fadd
rorl
shr
jg
xorb
popa
mov
mov
mov
fwait
dec
imul
es
decl
xlat
outsl
shll
mov
outsb
sahf
adc
aas
cltd
jl
and
shll
pop
xlat
fidivrl
ficoml
outsb
sub
rcr
das
popf
in
mov
mov
xor
add
or
test
ret
aaa
or
jae
ret
ficoml
ficomps
aad
out
leave
test
sar
addb
push
fisttpll
inc
pop
xor
addr16
repnz
pop
xor
mov
leave
pop
push
jp
pop
sub
add
pop
dec
cmpsl
sub
mov
dec
jo
ss
movsl
stos
rclb
enter
loop
das
xchg
lret
inc
mov
in
enter
rorb
arpl
pop
stos
mov
cwtl
xor
aas
fists
jbe
nop
in
mov
in
jno
sbb
sub
aaa
sbb
insl
inc
inc
jbe
push
mov
jo
mov
hlt
bound
imul
dec
add
ja
std
shl
push
cmp
lahf
push
mov
ljmp
sub
negb
xchg
cmp
xchg
jl
xlat
mov
mov
push
pop
dec
jne
iret
pop
fs
push
mov
fnstenv
in
and
sbb
mov
pop
test
lods
shlb
in
inc
out
dec
dec
pusha
nop
cli
push
sub
pop
test
lods
cmp
stc
pop
rclb
mov
jmp
int
inc
rcrb
mov
out
cmp
xlat
fcomps
push
stos
xor
syscall
push
mov
repnz
dec
sub
push
out
and
insb
ja
adc
push
adc
xchg
cmp
out
divl
incl
push
cltd
mov
test
sub
and
setb
sbb
in
sbb
pop
push
in
sahf
leave
push
daa
ret
adc
mov
test
fsubp
jbe
push
adc
sti
xchg
cwtl
into
inc
pop
stos
in
in
cmp
call
clc
cmp
roll
and
dec
mov
movb
cwtl
inc
loope
lods
shl
lret
sahf
inc
lret
icebp
mov
das
pop
out
sub
push
inc
jb
roll
pop
hlt
add
scas
je
lods
dec
or
insb
nop
call
inc
test
sbb
lods
out
dec
jecxz
mov
pop
int3
mov
mov
dec
js
xor
idivl
les
jae
sbb
imul
fwait
jmp
in
jo
adc
fdivr
mov
scas
mov
mov
and
sbbb
xor
dec
ljmp
jmp
jl
cli
jge
mov
push
or
jb
sbb
mov
mov
fwait
adc
push
das
jbe
and
or
xchg
push
outsb
mov
and
push
in
mov
mov
mov
mov
push
jl
mov
add
insb
dec
scas
enter
fsts
inc
xlat
sti
fiaddl
popf
lea
ja
andb
xor
je
dec
jge
faddl
scas
mov
pop
mov
sub
arpl
and
pushf
iret
lods
xchg
adc
mov
mov
lods
jbe
mov
jp
or
mov
mov
xchg
lods
adc
push
xor
xchg
iret
mov
repz
adc
mov
xor
pop
and
add
pop
ja
adc
test
aaa
adc
xchg
testb
sub
ret
pop
add
or
scas
loop
shl
outsb
idivl
mov
inc
lcall
push
daa
mov
or
push
jns
mov
fisubrl
xchg
inc
loopne
in
sub
shll
loope
xor
xchg
aad
mov
insb
in
sub
ljmp
push
jbe
loopne
push
or
jae
in
aam
fsubr
cld
inc
xlat
push
sub
jecxz
add
push
pop
movsl
add
rol
ds
mov
loopne
dec
add
cmp
test
lret
inc
int
sub
inc
xchg
and
adc
pop
rcr
mov
jle
push
sbb
and
sub
ffreep
adc
pop
pusha
xor
jl
movsl
or
jge
rcr
outsl
dec
ficoms
ja
enter
fwait
jge
rclb
push
aam
sub
push
and
sbb
fildl
mov
adc
pop
cli
sbb
dec
xchg
and
pop
and
xchg
cld
mov
negl
sbb
imul
sahf
mov
js
aaa
push
mov
sarb
lds
cs
mov
xor
test
and
xchg
aas
pop
lahf
dec
loopne
sbb
das
repz
and
jl
popf
pop
mov
and
xchg
test
imul
or
adc
cmp
xlat
mov
imul
in
in
movsl
push
cmp
fs
dec
enter
rolb
add
and
call
addr16
xor
inc
cmpsb
lea
xchg
int
sub
mov
jno
lds
es
fucom
mov
sub
cmpsb
stos
arpl
imul
ret
lea
lods
mov
jecxz
outsl
sub
or
test
jecxz
sti
mov
imul
insl
xchg
loopne
stos
sbb
repnz
jae
sub
mov
sub
sbb
sbb
inc
and
lods
xorl
or
fsts
loop
add
or
jge
adc
repnz
jl
aam
ss
sahf
and
insl
adc
imul
js
xor
add
sahf
pop
arpl
or
lea
les
add
testb
cmpsb
jecxz
fimull
fistpl
mov
test
or
sbb
into
out
in
call
push
into
repz
xor
mov
rol
stos
pop
push
stos
sbb
xchg
insl
jnp
sub
mov
mov
and
jae
mov
adc
mov
outsb
mov
stos
ud0
jno
sti
ljmp
incl
lds
sahf
cwtd
xlat
scas
sahf
fnstcw
popf
in
adc
pop
sbb
dec
mov
adc
nop
sbbb
dec
sbb
pop
or
imul
mov
stos
sbb
inc
fildl
cmpsb
cmp
icebp
stos
sub
add
cmpl
add
dec
mov
enter
subl
push
fwait
or
or
sbb
and
shll
fmull
movsb
sahf
pop
add
push
jbe
or
testb
mov
in
xor
sti
jae
dec
sbb
cmpsl
stc
push
subl
popa
stos
pop
and
arpl
cwtl
out
add
jge
mov
lods
and
in
sbb
push
daa
lods
mov
xchg
aad
test
arpl
cmp
daa
dec
les
and
jmp
add
scas
enter
xor
into
mov
pop
imul
fld
xor
cmpsb
rorl
sar
xlat
and
push
add
sti
inc
and
call
sbb
dec
pop
repz
nop
sub
mov
cmp
add
mov
loopne
mov
xor
cmp
mov
mov
and
and
aam
clc
decl
pushf
cmc
jnp
mul
shlb
lods
push
scas
jle
icebp
mov
adc
dec
add
mov
and
xchg
adc
subl
jle
cmp
fisttpll
arpl
out
mov
subl
pushf
mov
add
fstpt
loop
adc
jne
fs
sti
sbb
js
sub
mov
sbb
les
test
add
mov
sub
lcall
mov
fildl
mov
dec
mov
dec
xorb
push
jno
mov
xor
cs
pop
in
in
lods
test
out
inc
dec
cmc
lea
cmp
ss
jbe
in
in
pop
mov
fmuls
pop
lcall
aaa
xchg
mov
out
pop
addr16
dec
sbb
push
add
sub
fimuls
pusha
dec
test
ljmp
jmp
jg
jg
pop
xor
xor
int3
leave
sub
jl
push
bnd
cmp
gs
mov
xchg
popf
lret
jb
insb
jg
dec
add
jmp
cltd
mov
cltd
popa
mov
idivb
les
fwait
xchg
jno,pt
dec
mov
jae
xor
inc
inc
cli
sbb
shll
daa
int
sub
fs
dec
dec
in
fsubs
or
cltd
add
das
js
adc
mov
jge
mov
and
adc
cmpsl
jnp
inc
add
cmp
xchg
sbb
cmp
mov
fiadds
orl
rolb
push
jecxz
xadd
push
pop
test
push
popf
popa
dec
fdivrl
pop
aaa
std
and
lahf
mov
mov
data16
rorl
in
xchg
or
push
stos
xchg
cmp
fnstenv
mov
dec
jg
cmpsb
cmp
pop
push
jns
adc
pop
pop
stc
push
jb
pinsrw
or
leave
or
inc
jns
adc
repz
test
in
pop
cld
in
inc
push
loop
mov
adc
test
mov
mov
sbb
push
fs
dec
lock
cmc
jge
and
out
icebp
push
nop
or
stos
outsb
movsl
and
or
cmp
cli
jbe
sarl
clc
outsl
and
stos
and
mov
outsl
lret
mov
hlt
mov
test
xchg
cwtl
xchg
loope
xchg
shlb
lea
inc
mov
rcrl
and
mov
inc
in
mov
sbb
push
xor
and
cmp
stc
fsub
mov
arpl
xchg
addr16
cwtl
in
mov
cld
lret
mov
sti
and
cmc
ljmp
xor
mov
fdivs
sub
xchg
push
std
xchg
and
push
push
adc
jno
fcomps
movsb
aas
pop
xor
ds
inc
addb
dec
mov
shlb
lds
sub
pop
out
out
loop
xchg
adc
lcall
ficoms
cltd
adc
in
stos
adc
add
out
stos
and
call
dec
sub
jno
mov
xor
in
les
sti
mov
xlat
inc
jecxz
mov
inc
pop
mov
pop
push
cmp
xchg
scas
adc
cli
mov
in
jne
int3
jno
and
dec
xchg
es
sbb
dec
sti
rclb
xor
js
mov
sbb
in
gs
push
pop
lret
inc
ficompl
jg
xchg
mov
push
cmp
mov
lods
out
stos
dec
or
fistl
pushf
mov
scas
jnp
sbb
sbb
dec
dec
enter
mov
push
outsl
cmp
push
add
mov
xchg
out
adc
inc
cld
rcrb
add
sahf
cld
arpl
sbb
scas
sub
inc
sahf
shlb
dec
and
js
adc
leave
dec
jmp
dec
mov
imul
in
add
cld
jne
ljmp
rclb
lcall
int3
adc
ss
lret
dec
sbb
or
popa
sbb
dec
inc
das
stc
out
push
roll
xchg
testb
lahf
enter
lahf
sub
adc
addr16
aaa
testl
jo
clc
test
clc
fwait
popf
enter
mov
mov
or
pop
icebp
cltd
and
mov
fistl
cmp
jne
hlt
and
test
push
rclb
xchg
lret
int
mov
cwtl
mov
orl
cmp
dec
testb
mov
cli
lcall
and
movsb
jno
sbb
inc
sbbl
jne
pop
dec
pop
ja
int3
dec
mov
push
and
cmp
push
idivl
lret
mov
mov
in
sub
subb
push
push
pop
lds
xchg
cmc
cli
scas
or
filds
or
popf
push
sub
nop
std
add
scas
dec
cmp
dec
sbb
adc
mov
push
out
repz
mov
mov
push
pop
sbb
jg
insl
je
jmp
repz
nop
inc
mov
sbb
mov
mov
pop
jmp
mov
or
pop
or
repnz
mov
jae
cmpb
test
cltd
int3
insl
lret
subl
adc
pop
sti
fstp
enter
cltd
fs
movsb
mov
xchg
call
idivb
call
lds
xchg
jp
and
xor
sbb
fists
test
repnz
mov
iret
test
sbb
addb
fdiv
jne
xchg
jle
or
or
inc
mov
loopne
adc
mov
scas
iret
lret
fistpll
scas
jnp
and
sub
pop
ja
cmpsl
pop
or
test
dec
call
mov
or
fimuls
mov
mov
in
sbb
lcall
in
ds
jmp
sbbl
sub
outsb
shll
out
xor
mov
cmpsb
or
lea
cli
lods
or
daa
ficoml
xchg
jecxz
xor
sub
in
push
out
pushl
adc
xchg
ss
pop
into
sbb
cltd
pop
stos
dec
mov
dec
mov
and
rcll
sub
mov
cs
nop
push
xchg
sbb
push
adc
mov
rolb
scas
mov
loope
mov
fidivrl
pop
and
cmp
scas
dec
aaa
xor
lar
cmp
push
push
arpl
mov
cwtl
ret
push
data16
in
out
insb
jge
mov
pop
ss
xlat
jle
push
jecxz
xchg
leave
adc
cmp
lock
xchg
fcmovne
shrb
add
dec
jns
lds
rcrb
and
adcb
push
fsub
aaa
or
xlat
push
adc
adc
jo
inc
mov
dec
outsl
jnp
insb
adc
test
mov
mov
sahf
in
cwtl
push
pop
xchg
mov
test
mov
mov
and
jle
lods
pop
or
lds
or
add
xor
adc
mov
ja
ljmp
stos
fidivs
insl
xchg
lods
xchg
add
sub
sbb
arpl
insb
psubsw
fucomip
sbb
imulb
dec
jle
sbb
scas
xor
adc
cwtl
push
mov
xchg
imul
scas
push
adc
hlt
pop
mov
mov
dec
pop
push
jnp
lock
mov
mov
add
jbe
or
shlb
mov
ret
sti
dec
lds
sbb
sub
xor
mov
dec
ss
push
xor
sub
jno
add
lret
sti
adc
adc
rolb
stos
jno
cmp
testb
push
mov
repz
pop
sub
sub
in
rcl
int
jle
je
adcl
xchg
bound
insb
sarb
rcrb
mov
out
insl
sti
add
add
orb
cltd
mov
xchg
push
mov
pushf
ret
out
add
imul
aam
cmpsb
mov
pusha
pusha
jno
loope
jns,pt
mov
pop
data16
xor
jne
or
sbb
mov
xchg
or
xchg
pop
adc
push
andps
clc
jle
pop
cmp
sbb
iret
sahf
dec
sbb
mov
test
xchg
insl
pop
adc
xchg
jns
mov
adc
jg
fwait
jb
push
add
sbb
shlb
pop
or
pop
mov
insb
pop
and
cmp
sbb
movsl
inc
iret
xor
cmp
aam
loop
and
jp
pop
fsubrs
or
jnp
and
das
xor
sti
xchg
jbe
stos
mov
push
mov
and
rorl
mov
loope
or
mov
es
push
jg
and
cmp
cmp
xor
push
loopne
jo
jbe
jle
sbb
fs
into
and
stos
lcall
lcall
or
dec
testl
icebp
cmp
aas
cs
add
shrl
push
push
jne
dec
adc
cld
push
shlb
xchg
or
mov
pop
sbb
scas
add
movb
shll
je
je
in
clc
repz
sarl
popa
pusha
xor
int
mov
sub
nop
xchg
dec
jmp
insb
enter
sub
xchg
add
gs
mov
js
arpl
add
push
push
loopne
scas
mov
cld
mov
mov
divb
sbb
fsubl
std
sbb
and
lahf
cmpsb
xchg
sbbl
adc
push
sub
ret
lods
sbb
ljmp
fcmovne
mov
pop
jg
and
inc
dec
arpl
pop
test
xchg
push
inc
ret
or
mov
wbinvd
stc
jp
stc
mov
xor
jb
movsl
mov
inc
pop
sub
movsb
cmp
add
stos
adc
insl
gs
loope
and
jae
pop
jmp
cltd
dec
push
cmp
sbb
call
add
in
mov
loop
insb
das
xchg
and
outsl
daa
sub
and
jae
int
sbb
mov
push
xchg
xchg
lds
sbb
lods
nop
push
loopne
cmp
jae
cmp
inc
push
loope
out
cmp
enter
jle
lods
cli
cmpsl
lds
sub
cmpsb
scas
jno
ss
jne
mov
fildl
jmp
inc
shlb
xchg
aaa
pop
lods
mov
std
cs
mov
xchg
in
in
dec
jp
sub
xor
dec
or
jmp
jne
xchg
fidivl
in
dec
mov
popf
add
sub
mov
pop
inc
mov
jno
adcl
sub
addr16
xchg
xlat
hlt
cmp
jnp
outsb
or
or
lcall
fisubrl
aam
jno
les
popf
push
popl
push
and
jmp
mov
jmp
pop
ljmp
and
outsb
in
adc
xor
lds
dec
and
mov
nop
push
inc
jbe
and
push
jp
add
push
mov
push
jnp
and
mov
and
iret
push
cmpsb
xchg
xlat
cltd
add
cmp
std
rcl
jge
mov
das
fidivs
pop
shrb
mull
mov
sub
sbb
jnp
lods
fadds
mov
in
jns
jmp
in
out
push
cmc
dec
imul
or
aaa
lret
xchg
aam
arpl
loopne
lds
sbb
nop
cmp
popf
sti
imul
aas
sbb
cmpsl
jmp
jnp
xchg
xchg
daa
jge
jnp
gs
and
ja
fists
xchg
jo
clc
jae
adc
jecxz
xchg
ss
imul
fistpl
mov
cld
hlt
push
leave
pop
jno
in
aad
adc
fidivs
or
adc
xchg
cld
jne
push
clc
stc
jbe
in
lods
dec
fldcw
enter
pop
push
frstor
mov
jp
dec
orl
push
cli
cmpsb
out
icebp
jecxz
jns
dec
xchg
clc
and
push
fwait
and
mov
push
pop
mov
adc
and
flds
pop
adc
lahf
and
jl
call
lahf
js
stc
mov
and
jae
sub
sbb
cmpsl
mov
sub
sti
adcb
bound
out
bound
iret
cmp
sbb
dec
mov
pcmpeqb
stc
fwait
xchg
cmp
rclb
out
xchg
insb
lret
into
mov
je
into
hlt
in
xchg
adc
imul
push
dec
cmpsl
mov
nop
aaa
leave
xor
dec
sbb
push
jl
icebp
cmp
mov
push
imul
stos
dec
bound
loop
movsb
sti
xorl
and
and
pop
mov
cmp
lea
test
leave
cmp
cltd
jle
xor
cs
sahf
mov
clc
xchg
pop
sbb
mov
lds
or
mov
push
testb
adc
in
mov
jg
push
or
jg
stos
cmp
jbe
pop
sub
rclb
popf
dec
or
imul
cmp
mov
test
pop
stos
mov
fimuls
fildl
jo
popf
mov
push
cmc
orl
test
cs
xchg
cmp
mov
inc
scas
das
repz
dec
sub
lcall
pop
mov
or
testl
cmp
mov
push
ljmp
inc
aad
xor
inc
out
sub
cli
xor
add
out
clc
mov
xchg
pusha
loope
mov
dec
dec
rorl
insb
sbb
or
testb
mov
cmp
cld
lea
adc
les
pop
in
out
in
and
mov
pop
push
pop
xor
mov
jno
test
cltd
and
arpl
stos
cmp
les
outsb
jge
and
jl
dec
dec
push
inc
daa
popf
cmp
js
xchg
fisubrl
in
mov
pop
lret
xchg
rol
push
push
scas
dec
fcmovnb
arpl
sbb
xchg
imul
aas
jbe
sub
adc
das
inc
xchg
std
dec
inc
fisttpl
pop
dec
and
and
or
ret
inc
push
sti
test
adc
pushf
add
mov
rolb
enter
fdivs
push
aam
in
shl
pop
push
test
xchg
fcmovnb
mov
and
fs
or
je
mov
enter
xlat
int3
or
test
fidivs
lods
addb
filds
shr
push
xor
aad
fiaddl
push
mov
fisttps
dec
fldcw
lret
mov
shll
mov
iret
cmpsb
js
cmc
aaa
mov
in
repnz
iret
mov
xlat
adc
cli
shrl
bound
jbe
jae
dec
cmp
inc
sbb
ja
inc
lcall
dec
or
mov
fisttps
roll
mov
fs
push
clc
pop
add
call
aam
jg
outsb
inc
inc
fbstp
ja
cld
and
fcmove
mov
jmp
aaa
imull
fldcw
cs
jns
lea
cmpsb
cmpsl
test
outsb
xor
les
hlt
and
imul
int
sub
icebp
cwtl
pop
sub
dec
and
ret
or
arpl
mull
dec
sub
adc
inc
mov
adcl
sub
je
aad
loop
sbb
insl
fs
xor
or
aam
jae
jl
imul
fwait
xchg
test
imul
adcl
jb
aad
dec
or
in
sub
enter
movsb
push
push
jecxz
mov
arpl
xor
adc
fld
sub
aam
xchg
jmp
stos
sti
cmc
adc
int3
aam
jns
inc
ret
mulb
outsb
xchg
sub
sub
sub
mov
mov
subb
cmp
mov
mov
mov
into
leave
scas
xor
ret
ljmp
and
push
adcb
out
mov
mov
sub
mov
fidivs
sbb
ljmp
ljmp
xor
mov
inc
adc
push
and
mov
in
popf
imul
xchg
mov
or
dec
push
mov
cs
stos
jmp
xlat
aam
dec
push
insl
inc
push
push
rclb
lahf
sub
xlat
mov
fcoms
and
jbe
jns
fisubrl
dec
mov
and
rorl
xlat
loope
sbb
je
and
scas
jne
fists
and
inc
int
inc
xor
roll
paddd
jle
insb
pop
pop
mov
movsl
adc
lcall
scas
or
sbb
test
add
orb
mov
test
cwtl
lods
out
in
shl
jmp
ss
subb
cmp
fs
mov
stc
cmp
popa
xlat
rolb
jne
lds
insb
lahf
fs
shrb
out
and
mov
mov
jecxz
inc
sbb
cmpsl
sub
shl
test
mov
mov
insl
rolb
lea
lret
aas
stos
scas
sbb
popf
push
cmp
ss
lar
cmpsl
push
les
nop
sub
aam
mov
addr16
aad
fmuls
addr16
xor
fbstp
insl
cmp
fcomps
fnstcw
sbb
repnz
rclb
divb
into
pop
lods
mov
aam
dec
lea
jne
jns
outsb
pop
nop
push
sub
mov
insb
dec
add
scas
dec
icebp
dec
pop
ffree
call
in
scas
xchg
and
bnd
cmpl
subl
sub
imul
mov
mov
js
aas
cmc
pushf
inc
cmp
popf
dec
sub
xor
sub
aas
pop
int3
pop
popf
iret
repz
pop
pop
add
scas
xchg
sub
mov
je
into
mov
cmc
add
shll
sbb
mov
nop
les
mov
dec
add
and
jle
and
push
xchg
push
pop
dec
or
addl
addl
fnstcw
jle
mov
cwtl
push
mov
mov
pop
cmp
mov
lock
in
mov
rcrb
paddb
pop
mov
inc
dec
mov
adcl
out
enter
inc
add
movsb
in
jecxz
pop
inc
nop
ret
pop
repz
popf
negl
jg
or
lret
and
lret
jo
int3
mov
arpl
std
shrb
xor
das
repz
int3
cmpsl
fnstcw
out
adc
fmull
aam
cld
mov
fsts
leave
xlat
fldt
add
out
aaa
mov
aam
adc
movsb
add
pushf
xlat
or
ljmp
mov
out
cmp
ret
xchg
leave
or
nop
xor
xlat
adc
fidivs
rolb
push
je
pop
add
sub
test
ss
fs
rcll
in
ja
jg
mov
sub
ja
movsb
xchg
pop
into
cltd
addr16
insl
cmpsb
dec
pop
rcrl
jb
gs
or
loope
add
mov
jge
mov
xchg
cli
out
fldenv
or
mov
push
cmpsb
cs
or
icebp
dec
adc
mov
xchg
jg
incb
or
or
roll
movsl
add
jbe
xor
lods
imul
push
and
jecxz
cmp
sbb
repz
sbb
xor
cwtl
fsincos
sub
adc
cmpsl
cli
ret
lahf
sbb
and
or
pushf
movsb
shrl
mov
jmp
xchg
movsb
iret
jl
aaa
out
loopne
andl
sub
and
repnz
jno
out
mov
mov
cmp
mov
jbe
sahf
ja
movsl
mov
sub
jmp
ja
call
bound
xchg
dec
dec
mov
cmp
sbb
lret
pop
jecxz
and
add
or
bound
mov
inc
or
loopne
in
adc
mov
movsb
loop
cli
mov
push
dec
sbb
xor
xor
mov
sub
les
and
ret
add
sbb
fsubl
xchg
popa
adc
jle
sbb
in
test
or
jge
out
cvtpi2ps
test
ficoms
icebp
int3
ror
pop
stos
sub
pop
fldcw
sub
shll
cwtl
hlt
pop
ljmp
mov
out
aad
roll
ja
xchg
lods
or
fstps
in
into
jae
dec
in
cli
iret
pop
addr16
sti
ret
inc
pop
xor
push
dec
cmp
add
and
push
sub
divl
or
je
aaa
popf
pop
push
mov
sub
pop
lret
repz
cmp
xlat
test
or
jge
jb
jmp
cld
repnz
xchg
jmp
or
ja
aaa
bound
out
in
inc
and
fs
test
add
sub
xchg
xchg
ss
pusha
scas
rorl
xchg
hlt
les
pop
out
dec
nop
insl
lds
cltd
push
je
cmove
sbb
sub
mov
gs
lret
inc
test
mov
jge
add
sub
xchg
adc
mov
imul
sub
cs
loope
das
jecxz
pusha
adc
xchg
adc
jl
or
jp
sub
rep
xchg
test
fdivl
mov
inc
out
shrb
inc
jo
scas
push
ds
or
jge
cmp
add
cmpl
lahf
in
out
daa
cmpsb
mov
dec
cmp
das
mov
push
test
cmp
movsl
push
fsubs
mov
pop
loope
fldenv
mov
jae
push
hlt
pop
stos
movsl
in
jle
mov
stos
and
dec
jmp
bound
mov
pop
xchg
pop
pop
pop
aad
popa
outsl
sbb
and
and
ret
sarl
pop
xchg
sbb
cmp
mov
pop
mov
add
dec
or
je
or
mov
jmp
stc
mov
sub
aam
pop
out
mov
adc
fildll
fwait
xchg
or
pop
xchg
jbe
sbb
sbb
cld
xchg
shll
cltd
cltd
jl
cmp
mov
or
sub
adcb
sub
pushf
sub
jp
insl
jge
popf
dec
int3
mov
in
or
lods
repnz
dec
push
cli
inc
cltd
xor
lea
orb
inc
or
fcmove
mov
rorl
aaa
sbb
mov
fwait
or
dec
cli
xchg
xchg
add
sbb
xchg
mov
push
inc
jnp
inc
push
xchg
cmp
add
push
test
or
pushf
pop
mov
ret
mov
bound
xchg
aam
inc
outsb
and
add
mov
fsubrs
jge
dec
mov
mov
lcall
es
dec
out
pop
popa
aaa
test
ljmp
fnstcw
mov
xchg
ds
mov
mov
mov
pop
xlat
add
push
iret
inc
popf
xlat
cmc
mov
sbb
mov
pushf
sahf
mov
adc
es
dec
or
test
jle
dec
paddusb
xchg
sbb
maxps
flds
int
jae
test
or
test
hlt
cwtl
jne
push
out
mov
ljmp
lret
sarl
mov
das
leave
into
mov
adc
dec
daa
incb
pop
push
or
rcrl
pop
inc
cwtl
fsts
jmp
push
fidivrl
mov
call
push
push
mov
dec
cmp
jmp
push
cmp
aaa
adc
or
push
and
arpl
mov
adc
iret
lret
lret
pushl
inc
in
inc
mov
test
daa
nop
add
scas
movb
mov
pop
clc
dec
out
jb
push
movups
rcr
jae
pop
inc
and
jb
loop
inc
mov
in
mov
mov
pop
push
cli
inc
sbb
xlat
arpl
rcrl
test
subl
and
pushf
hlt
mov
xchg
xchg
inc
jb
je
sahf
stos
lret
lret
and
mov
not
cmp
dec
xchg
cmc
std
xchg
rcrl
xchg
pop
jmp
outsl
shll
pop
pop
mov
and
mov
add
pop
cli
hlt
into
mov
dec
jnp
out
jp
nop
xchg
inc
mov
and
mov
mov
pop
sbb
sbb
jno
ja
dec
fs
das
stos
ss
sub
cmp
add
push
popa
jnp
mov
inc
insb
out
sahf
cld
push
in
push
cmp
and
fisubs
nopl
jnp
ror
mov
jnp
nop
into
push
lahf
mov
sub
push
dec
add
rcpps
ret
cli
lock
sub
repnz
shll
xor
sub
mov
ds
inc
cli
test
cmp
fsub
xor
repnz
xchg
das
out
loop
ss
push
or
and
stos
out
adc
stos
adcl
mov
int
es
aad
add
jnp
divl
cld
nop
aad
sub
mov
xlat
out
adc
mov
lret
mov
mov
mov
xchg
not
popa
imul
or
and
ret
vpaddb
adc
xor
das
test
stos
adc
cmp
cmp
cmc
xchg
mov
in
bound
sub
jbe
pop
in
mov
xor
loope
enter
sbb
es
imul
cmc
test
inc
or
mov
lds
iret
pop
mov
imul
lahf
push
lret
push
insl
test
testl
jns
sub
pop
fisubrl
cli
test
cmpl
jmp
xor
mov
loope
and
ror
cmpsb
out
insb
sbb
cmp
and
sbb
jbe
sahf
mov
inc
push
mov
fnsave
mov
jg
fs
insb
push
out
mov
fldl
jns
xor
clc
dec
pop
inc
ja
xor
add
pop
pop
or
cmpsb
add
scas
jl
movsl
mov
test
loope
and
jns
dec
negb
ljmp
cmp
sbb
xor
fisubs
aas
shrl
mov
daa
movsl
lock
jnp
ss
or
push
ja
outsb
mov
jg,pn
xchg
enter
iret
pushf
sub
nop
cld
pop
repz
pop
jg
xlat
ds
or
ljmp
das
mov
sub
outsl
lcall
fwait
pop
add
jae
cwtl
inc
stos
add
sti
test
xor
mov
fcomip
test
fwait
es
fld
in
dec
dec
pop
pop
add
das
rcr
enter
sbb
fs
pop
and
test
ror
jae
in
mov
sbb
jae
loopne
and
pmulhuw
ds
dec
pop
pmullw
xchg
and
jle
dec
jno
call
popa
insb
inc
test
adc
add
sti
repz
dec
std
cltd
push
dec
lods
or
fsubrl
ret
xchg
fsubr
test
stc
push
pop
in
dec
inc
inc
mov
sub
push
mov
leave
and
inc
test
mov
stc
add
mov
pop
mov
cld
test
mov
stos
cmc
stos
iret
push
and
dec
movsb
xor
push
sahf
mov
jge
lds
cli
xor
mov
fistl
jbe
mov
test
fimull
inc
jmp
pop
pop
pop
das
mov
mov
sti
shrl
xchg
mov
fldt
adc
mov
fldt
inc
jmp
dec
push
es
or
jns
sbb
mov
cmp
jbe,pn
sbb
sbb
push
mov
xor
sub
lahf
jae
jo
adcb
sub
dec
aam
out
adc
adcl
or
cmp
pusha
push
popf
insl
xchg
leave
mov
dec
cwtl
stc
xchg
out
or
int3
fstps
dec
loop
movsl
add
pop
pop
lahf
scas
sahf
push
leave
cwtl
out
mov
inc
aas
xchg
out
and
mov
insl
jle
dec
enter
movsb
or
inc
jno
mov
cmc
or
iret
sbb
xchg
imul
adc
jb
jp
fxch
adc
xor
push
enter
push
push
inc
cmp
sub
mov
adc
out
and
jg
or
sub
push
cmc
xor
ret
adc
cmpsl
xchg
mov
jno
push
dec
jne
repz
dec
notb
mov
fistps
jnp
or
outsl
mov
xchg
ret
or
pop
push
add
aad
stc
and
mov
aad
mov
sbb
jmp
push
addb
lret
imul
lcall
in
sub
aas
jmp
and
mov
out
xor
xchg
in
mov
fdiv
fisubs
mov
arpl
jae
mov
push
mov
inc
sub
pop
jno
push
or
adc
ror
lret
xor
std
sbb
and
sub
iret
lret
inc
aaa
push
cld
jecxz
mov
adc
js
lock
mov
push
jnp
popf
sbb
mov
sbbl
adcb
jae
sbb
std
adc
lds
mov
movl
out
xchg
sbb
outsl
subb
dec
adcl
imul
enter
inc
xor
testb
fcompl
nopl
shrl
insl
fwait
jo
jl
hlt
mov
jmp
jnp
cmp
jne
dec
mov
or
xchg
rcrb
subl
lcall
and
xchg
imul
fnsave
sahf
xchg
test
mov
xchg
mov
sahf
cmp
sti
rorb
pop
sub
rol
inc
adc
dec
fiaddl
sbb
cmp
in
out
call
nop
ljmp
cmp
sbb
inc
mov
mov
sbb
test
in
enter
jecxz
arpl
cltd
ljmp
ds
test
add
ds
xchg
adc
fstpl
pop
leave
iret
mov
or
test
fldenv
xchg
imul
hlt
test
pop
mov
jne
jb
xor
repz
es
cmp
mov
imul
imul
xchg
in
add
mov
movsl
push
mov
add
iret
jo
pop
les
ret
popa
fidivrs
js
mov
rep
inc
fdivrp
movsb
popa
mov
mov
scas
cmpsb
push
mov
cmp
bound
out
icebp
xchg
sti
and
cmp
xchg
cwtl
movsb
dec
inc
fcoml
dec
nop
push
lret
pop
xor
xor
or
add
sub
add
mov
push
fdivl
mov
frndint
pop
aad
ja
adc
shl
or
mov
sbb
mov
mov
pop
fsub
push
call
xchg
push
loopne
cmpsb
xchg
and
pop
idivb
insl
les
jp
std
fldl
or
xchg
inc
or
pop
mov
lock
nop
repz
into
ja
push
rorl
in
mov
mov
enter
scas
dec
mov
nop
popa
mov
sub
dec
in
mov
dec
loopne
cmp
stc
aaa
jl
loope
mov
lahf
xor
in
lea
fs
int
pop
mov
mov
lahf
inc
mov
pop
cmp
mulb
adc
repz
sbb
lods
loop
adc
ret
pop
movl
into
lret
mov
sar
and
push
stc
out
shl
clc
aaa
push
in
mov
je
push
mov
std
inc
call
inc
sub
cld
push
push
bound
jecxz
jp
in
sbb
sub
fadd
dec
test
fnstcw
insl
in
pushf
popa
fmull
orb
push
shrl
sub
push
pop
xchg
icebp
fs
leave
lret
jp
push
pop
xor
fstpt
ret
aam
inc
push
and
mov
mov
dec
push
push
ret
fbstp
and
add
cltd
lods
rcr
movb
fsts
cwtl
daa
lret
pushf
fsubr
sarb
aaa
add
fstps
add
aam
cmp
cmpb
or
scas
scas
out
stos
ret
and
outsb
pop
dec
sbb
mov
or
adcb
addb
add
cmp
fidivs
push
jae
insb
daa
rolb
adc
sarl
pop
jno
xchg
xchg
fistpll
lcall
int3
into
jne
es
aas
jae
adc
lret
push
add
fnsave
lea
das
stc
inc
popa
test
push
and
lea
inc
cli
data16
test
mov
xlat
fidivl
push
outsb
push
dec
daa
push
jmp
or
shlb
dec
lcall
sbb
mov
mov
cltd
aaa
fnsave
cmp
and
sub
xchg
test
pop
and
sub
adc
xchg
bound
xchg
imul
or
and
nop
xor
xchg
pop
or
cli
xchg
loop
lcall
jo
cmp
jp
and
jo
fldl
aaa
outsb
and
outsl
loop
xor
or
xor
mov
or
mov
test
test
das
xor
out
lahf
jae
fildl
js
dec
stc
xor
addr16
test
repz
mov
movsl
sbb
inc
scas
jmp
jecxz
in
pop
sbb
jmp
cmp
sbbl
fdivrl
mov
idivl
sbb
jbe
add
outsl
cmp
scas
push
aas
daa
push
stos
in
aam
pushf
loop
jecxz
cltd
add
nop
mov
lcall
mov
mov
lahf
sub
xchg
aam
loopne
mulb
sub
sub
jmp
daa
repnz
lret
vpxor
imul
test
out
push
sbb
sbb
imul
daa
pop
les
js
fwait
mov
pop
mov
add
xchg
js
dec
jno
sub
xchg
cli
enter
jg
cmp
addb
jne
push
xchg
loopne
es
nop
xor
iret
xor
bound
push
push
push
mov
adc
sub
cli
movsb
pop
lds
rcll
ds
mov
fisubl
push
lcall
gs
pop
adc
mov
jp
test
adcl
aas
popf
lds
pushl
faddl
jecxz
inc
in
adc
inc
push
push
mov
inc
xlat
cs
dec
rorb
das
in
mov
ret
stos
push
adc
xor
mov
ds
out
leave
dec
inc
xlat
aaa
mov
shlb
lahf
adc
lret
jne
in
sbb
dec
push
mov
fcoms
push
imul
scas
sub
femms
lret
les
insl
cmpsb
mov
dec
push
cmp
lahf
ficomps
sarl
cmpsb
add
mov
in
cmpsl
push
or
sbb
pusha
ret
notl
xchg
and
pop
ja
inc
mov
sub
insw
ffree
test
pop
mov
mov
jnp
hlt
xchg
pop
xor
aas
fdivrl
pushf
mov
jecxz
or
shlb
sbb
adc
dec
adc
jg
popa
mov
jno
loope
loope
int3
sub
ja
int3
loop
jne
jae
sub
ss
push
outsl
bound
xchg
mov
shll
sbb
popf
jecxz
pop
aam
lret
popa
jo
add
shrl
jns
mov
xor
inc
mov
mov
stc
fistpl
pop
mov
stc
je
mov
cwtl
aaa
rorb
mov
loopne
jns
ja
mov
xchg
inc
sub
and
or
mov
stc
sbbb
cli
loope
in
and
imul
pop
push
adc
bound
jne
cmp
repnz
rorb
hlt
mov
dec
mov
mov
lahf
sti
dec
pop
sub
fcoml
jnp
cwtl
ss
rclb
lock
push
sub
cli
out
cmp
ja
addb
lock
ja
sbb
pop
insl
es
shlb
adc
or
cli
aad
mov
test
lock
xor
div
lahf
fcomps
inc
lcall
push
xchg
mov
daa
fstpt
pop
negl
and
sub
pop
jmp
jae
mov
ret
cmp
cmpsb
test
in
ja
cwtl
lods
inc
mov
sbb
test
mov
xchg
jnp
mov
adcl
adc
pop
add
pop
andb
test
in
adc
jp
mov
cs
and
and
push
lret
push
aas
jo
and
adc
pop
and
lods
sbb
mov
push
xlat
shlb
cmp
jp
xchg
or
lods
rorb
xchg
pop
mov
jnp
mov
cmp
mov
cmp
jno
and
jns
xchg
mov
jnp
xchg
lcall
dec
fistpll
sarl
inc
or
pusha
icebp
popa
dec
add
inc
int3
stos
insb
mov
inc
mov
loop
adc
leave
mov
ror
cltd
scas
in
xrelease
aam
dec
push
cli
mov
jge
out
sub
stc
adc
outsb
push
repz
and
cmpsl
mov
cmp
test
mov
imul
cmc
cwtl
and
add
pop
int3
flds
loopne
or
rclb
and
shlb
sub
pop
sub
mov
or
gs
pop
mov
bound
je
mov
jo
push
add
outsl
adc
mov
js
pop
je
cltd
xchg
outsb
mov
xor
test
in
cmp
or
adc
mov
xchg
dec
js
and
movsb
test
push
add
xchg
adc
push
xchg
mov
out
mov
adc
cwtl
mov
and
movaps
repz
aaa
sub
lods
jae
shrl
push
icebp
adc
loopne
fldt
sbb
repz
out
jge
and
sub
faddl
inc
mov
mov
inc
inc
scas
insl
bound
mov
cmp
ja
jb
popf
cmp
jnp
mov
dec
adc
call
mov
dec
test
xor
dec
or
aad
sti
cmpsb
jae
pop
gs
fwait
in
mov
gs
mov
mov
in
call
mov
insl
mov
jae
scas
fs
aas
repnz
sub
jo
or
lret
or
mulb
xor
push
movsl
ja
mov
jmp
push
imul
rorb
ss
cmpsl
push
imul
dec
jecxz
mov
test
cmpsb
jecxz
adc
jle,pn
cmp
out
loop
leave
mov
sarb
sub
enter
inc
hlt
popf
xchg
loopne
cmpsb
mov
adc
aas
mov
mov
sti
imul
into
testl
and
inc
and
adc
fs
and
or
and
popf
loop
clc
xchg
and
jmp
add
mov
clc
cmp
xor
mov
jae
cmc
push
and
inc
stc
lods
pop
and
mov
fsubrl
test
push
xor
insl
hlt
dec
sti
mov
jne
outsl
sbb
and
lods
aas
cmp
and
push
pop
adc
daa
xchg
sub
pop
mov
xor
xlat
lods
add
mov
gs
xchg
mov
sti
mov
es
sbb
dec
sub
shll
in
sub
add
das
xor
dec
test
sahf
out
jae
and
movsb
jg
out
cmpsl
sub
inc
mov
xchg
cmp
and
sbb
push
les
inc
mov
sbb
and
and
imul
bound
or
mov
adc
cmp
mov
pop
lcall
out
in
std
mov
push
lret
das
shl
push
push
cmpsl
pusha
cmp
in
mov
xor
cmp
sbb
clc
arpl
and
or
in
dec
jns
sbb
dec
les
or
jge
mov
adc
ret
pop
add
inc
lcall
enter
sbb
and
pop
movsl
push
dec
scas
or
xchg
fcmovnu
xor
fdivp
add
push
xor
pop
cltd
lret
and
xchg
in
test
and
cmpsb
clc
mov
iret
adc
ret
cmp
imul
xlat
aam
dec
data16
imull
divl
push
cmp
movsl
xchg
hlt
dec
lods
mov
pop
mov
jmp
scas
jge
fnstcw
xor
call
int3
sbb
or
loopne
sbb
mov
push
add
into
jmp
adc
fwait
pop
jnp
push
andb
cmp
pop
data16
add
outsl
or
lea
push
in
xchg
popa
jb
sti
jo
pusha
lods
push
jno
xchg
inc
loopne
dec
es
lret
loop,pt
sti
push
lret
xchg
cltd
lds
iret
popf
push
mov
iret
sbb
adc
lret
pop
in
popa
sbb
sbb
es
jg
cltd
push
inc
pop
or
or
shll
cmp
movb
mov
sub
adc
ret
pop
and
pop
dec
stos
or
cmpsl
ror
mov
mov
sub
loope
ret
xlat
popf
fdivs
repz
mov
in
test
aaa
jae
loope
lods
mov
add
test
imul
mov
sub
jno
pop
jge
push
out
mov
push
mov
lahf
daa
fstps
test
les
int3
jnp
jbe
dec
dec
xor
jno
mov
and
or
mov
jb
xlat
xlat
push
int
jp
xor
cli
xlat
xchg
jne
es
jp
jmp
nop
hlt
aam
cmpsl
das
shr
insb
out
mov
shrl
out
insb
pop
push
sbb
push
xchg
mov
add
lea
jnp
pop
arpl
mov
cmp
lea
rdmsr
push
or
adc
xchg
add
lret
jae
fidivrs
lea
xor
das
push
call
sbb
add
loop
mov
lcall
pushf
call
pusha
cli
sbb
pop
in
push
push
and
adc
hlt
xchg
jge
sbb
fwait
repz
push
int3
push
and
sbb
push
and
jmp
fs
fadd
mov
xor
mov
cs
fsubrs
lds
mov
rcl
call
popf
in
mov
mov
push
mov
jne,pt
leave
fimuls
jns
mov
sbb
jb
aam
cs
push
jae
adcl
faddl
or
pop
mov
test
ret
rcrl
sbb
add
lods
adc
gs
test
jbe
fstpt
ss
inc
sub
mov
bswap
pop
mov
sbb
xor
adc
push
mov
mov
pop
sub
dec
mov
or
mov
and
fisttpl
ret
dec
mov
lea
dec
adc
out
jl
test
shlb
push
arpl
add
inc
fiaddl
repnz
mull
mov
insb
sbb
mov
test
das
into
pop
push
push
flds
movsl
add
lock
pop
sub
clc
mov
mov
jp
xchg
xor
xchg
sub
mov
pop
dec
insl
stos
adc
mov
loope
or
fcmovbe
mov
or
push
test
lea
bound
jo
push
xor
insl
je
sbb
je
aas
int
inc
mov
push
push
mov
in
daa
pop
mov
stos
ja
hlt
sub
jp
sub
jge
mov
frstor
adc
push
adc
inc
push
sbb
sub
pop
push
ss
dec
jecxz
mov
mov
xor
and
push
pop
fs
das
movsl
fs
iret
sti
adc
push
sub
xlat
and
jae
push
and
loope
cs
and
std
fidivrs
dec
push
sbb
mov
ret
sub
movsl
outsl
xorb
lret
or
scas
movsb
out
pop
std
lock
jmp
test
into
pop
mov
sbb
sub
sbb
std
mov
stos
mov
mov
push
mov
icebp
dec
inc
fxtract
sub
je
jmp
movsb
aaa
pop
mov
xor
sub
out
aad
cmp
mov
imul
adc
or
inc
ret
add
imull
lods
dec
dec
sub
push
xor
dec
xchg
adc
mov
decl
popf
dec
push
xchg
sahf
add
sbb
push
sub
out
mov
pop
xchg
pop
pop
xor
adc
inc
sub
mov
mov
adc
out
adc
sbb
dec
mov
stos
adc
dec
cli
jae
push
xchg
xchg
push
insl
aas
cmp
daa
dec
loope
mov
sbb
mov
and
cmp
test
and
jne
adc
lahf
int
mov
push
dec
mov
mov
ror
inc
xor
loop
xchg
fcmovnu
xor
mov
sbb
fildl
mov
fldt
test
inc
fnstenv
dec
xor
or
icebp
sub
fdivp
into
cmpsl
js
push
into
pusha
add
xchg
negl
jle
test
movsl
cmpsb
or
pop
or
add
mov
mov
ret
dec
inc
insb
push
outsb
mov
xchg
lea
xchg
pusha
stos
imul
outsb
sar
out
xlat
je
push
push
sbb
sbb
xchg
into
aaa
stos
inc
data16
pop
jo
lcall
arpl
add
sbb
sub
pop
test
xor
insl
shrl
push
pop
aad
ss
hlt
call
push
xchg
pop
outsb
mov
push
adc
outsb
out
mov
out
jnp
iret
and
lods
mov
sti
cmpsb
or
mov
fldenv
mov
inc
sub
mov
push
and
add
mov
or
sahf
lcall
dec
leave
mov
push
jo
sub
sbb
das
int3
inc
adc
pushf
jae
nop
pop
mov
iret
xchg
pop
fcom
jae
leave
scas
inc
pop
fsub
gs
jmp
in
adc
int
lods
xor
lods
popa
cwtl
inc
hlt
sub
scas
in
mov
jecxz
outsl
xor
and
fwait
insl
sub
sbb
push
dec
rcrb
mov
les
test
mov
sub
adc
pop
jge
dec
ljmp
jne
pushf
or
movsl
out
fildl
rolb
je
cmp
inc
mov
lock
fcmovb
out
in
xchg
hlt
sub
sbb
data16
pop
sub
jl
xchg
fwait
push
sarl
fsubr
rolb
in
mov
pop
push
xor
cmpsl
addb
xchg
ffreep
jmp
pop
ror
dec
mov
mov
jp
push
aad
cld
and
imul
gs
stos
mov
jg
hlt
loope
pop
in
and
sti
scas
pushf
rol
push
jle
sub
stos
jecxz
leave
sbb
in
or
in
mov
ss
sbb
into
dec
push
stos
scas
sti
movsb
mov
hlt
jne
stc
sbb
into
pusha
dec
sbb
stos
lret
adc
imul
mov
out
sti
dec
cmp
mov
cmp
insl
mov
xchg
sub
pop
imul
movsb
mov
dec
sbb
pop
or
lds
aaa
mov
lods
loopne
aam
mov
insb
jbe
negl
sub
or
mov
pop
imul
push
or
pop
push
dec
inc
out
xor
adc
scas
jge
pop
in
dec
jle
orb
cli
test
int
mov
cmp
call
in
in
inc
jnp
aad
into
scas
sarb
inc
nop
es
push
sub
mov
cltd
adc
mov
add
scas
mov
or
hlt
pusha
cmp
in
dec
xor
cmp
fadds
test
rcl
cmp
mov
mov
mov
dec
addr16
es
aas
in
ficoms
sub
jp
jge
pop
iret
and
jecxz
cmp
stos
xor
icebp
call
mov
push
iret
mov
push
stos
pop
idivb
das
out
hlt
mov
pop
lcall
and
push
lahf
test
cmp
bswap
cmpb
push
jle
mov
fadd
xor
xchg
cmp
in
jecxz
push
nop
mov
jg
jmp
into
mov
in
sub
mov
repz
mov
cmp
xor
in
jl
cltd
jno
push
jns
shl
xchg
mov
add
mov
cmp
cs
test
push
lret
push
push
daa
fs
jns
shr
fs
les
push
inc
popa
pop
ret
insl
and
pop
adc
daa
sub
xorl
lods
mov
xchg
sub
fildl
sbb
push
or
rep
inc
dec
daa
cmp
loope
mov
js
clc
jae
stc
aad
mov
push
adc
outsl
xchg
addr16
cmp
or
xchg
pop
sbb
clc
adc
aam
jp
ds
inc
adc
jge
add
test
jno
inc
sub
jl
repz
adc
lods
aas
out
jno
out
adc
add
fldcw
ds
imulb
loop
clc
pop
sbb
dec
fsubs
std
cmp
ja
into
jno
sbb
scas
clc
jnp
mov
std
stc
push
test
sbb
or
call
add
cltd
movsb
adc
xchg
xchg
fdivs
cvtdq2ps
pop
mov
inc
or
in
mov
out
lods
sub
add
push
cs
pop
sub
inc
sub
push
enter
mov
xlat
test
jb
repnz
push
stos
jbe
inc
scas
inc
adcb
daa
add
mov
and
pop
into
xchg
mov
mov
in
pop
inc
sub
hlt
out
lods
cld
pop
or
or
leave
enter
mov
xor
cmp
movb
movsb
and
stos
add
mov
push
sahf
sti
mov
pusha
repz
jp
dec
xchg
mov
and
lcall
clc
dec
jecxz
and
xor
rorb
frstor
jne
xor
jns
mov
outsb
push
mov
test
cmp
mov
into
cmp
mulb
cmp
stos
repnz
push
mov
cli
or
sbb
adc
or
out
imul
scas
cwtl
stc
in
nop
jp
xchg
mov
fistps
bound
lods
inc
fstpl
aad
lds
fwait
lds
jo
into
mov
mov
ljmp
test
shlb
or
lret
out
imul
mov
subb
or
jge
stos
xor
xchg
negb
and
mov
cltd
jne
aaa
aad
mov
xchg
fsubrs
jb
fisubs
jnp
xor
popa
scas
jbe
in
add
cmp
or
xor
sbb
and
pop
adc
fwait
rorl
and
xchg
cmp
pusha
push
fsubrl
add
clc
cltd
stc
pop
sub
cmp
das
inc
sub
xor
mov
lods
lea
mov
mov
mov
pop
adc
dec
xor
push
imul
insb
mov
lahf
test
rcl
xor
inc
jl
aam
sbbl
pushf
pusha
fisttps
movsl
pop
mov
mov
add
hlt
xor
push
jnp
adc
or
mov
ljmp
xchg
dec
jle
outsl
sub
sub
mov
in
push
popf
inc
push
jb
sub
lods
arpl
loopne
cmpsl
sahf
jg
xchg
movsw
or
movsl
rolb
mov
in
stc
mov
dec
cltd
push
inc
loopne,pn
jg
fs
or
sti
mov
popf
mov
lods
xchg
stos
and
push
popf
stos
mov
js
test
cmp
rorb
xor
mov
xchg
push
dec
lcall
outsb
lds
xchg
pop
mov
cmpl
ret
adc
add
fwait
outsl
xor
cmp
pop
pop
add
mov
arpl
cmp
je
out
popa
mov
pushf
cmp
or
and
cltd
pop
add
inc
popa
ficompl
ja
ror
cmp
mov
aas
inc
addr16
dec
out
adc
into
push
and
jg
pop
stc
popa
dec
jne
js
cmp
imul
xor
mov
rorb
and
sahf
iret
adc
mov
jo
jae
addr16
cmpsb
popf
xor
push
ds
inc
xchg
iret
lock
adc
subb
scas
js
sbb
popa
add
enter
or
shrl
jnp
cld
sahf
cld
mov
test
mov
addr16
vmovups
mov
jno
nop
pop
popa
sbb
pop
dec
mov
and
push
das
or
push
stc
fsubr
cld
xchg
leave
and
sub
push
into
lcall
sahf
ffree
cltd
fadds
int
fwait
dec
adc
xchg
push
gs
inc
dec
dec
pop
xchg
mov
pop
xchg
xor
adc
and
pop
pop
cmpsl
loopne
jl
cltd
ja
gs
adc
mov
adc
ss
jnp
or
push
push
shrb
inc
pop
sbb
or
xor
pusha
ljmp
dec
or
aaa
mov
add
jbe
scas
inc
mov
add
dec
arpl
repz
mov
mov
fidivrs
dec
rcll
jle
jmp
cli
pop
dec
and
das
das
xor
mov
inc
daa
jmp
xchg
adc
pop
mov
sti
loope
push
test
cli
adc
xchg
adc
data16
add
sub
push
dec
imul
clc
lahf
loop
adc
iret
jl
cmpsl
sbb
mov
sub
cli
mov
mov
pop
push
adc
gs
push
dec
add
fdivrp
or
jb
sar
fbld
lcall
incl
add
and
outsb
aaa
or
add
pop
out
cld
jo
dec
push
push
mov
cmpsb
mov
xlat
stos
mov
dec
add
push
dec
adc
xor
outsb
in
dec
icebp
cmp
push
pop
mov
lods
in
cmp
adc
test
xor
in
aaa
push
sbb
xchg
movsl
jbe
lret
push
stc
dec
fcmovbe
testb
inc
jae
xlat
jmp
cltd
push
lret
sub
and
push
sbb
inc
jns
cmpsl
xor
cmp
stos
jb
sarl
cmp
adc
scas
inc
addr16
xchg
xchg
aad
xchg
popf
data16
sbb
fiadds
repz
ret
dec
cmp
pop
fiaddl
gs
cmpb
cmpsl
mov
mov
jge
aas
xor
mov
adc
pop
add
dec
xchg
dec
test
pop
pop
mov
dec
sbb
out
xor
sbb
adc
in
mov
inc
push
mov
mov
sbb
call
test
dec
pushf
push
lcall
add
jge
xchg
or
cli
imul
xchg
jne
shrl
sub
ret
lahf
jnp
mov
insb
popa
fstpl
fs
dec
fisubrs
das
std
frstor
insl
push
pop
jg
lock
xchg
cmpsb
test
daa
mov
pop
cmp
ss
cmp
out
xor
mov
sub
cmp
adc
xlat
mov
outsb
xchg
mov
mov
lods
and
push
xchg
ja
pop
and
mov
dec
push
push
iret
sub
mov
lea
xor
mov
sbb
or
xchg
push
andb
inc
mov
iret
pop
loope
add
ss
ja
push
aas
dec
or
and
cmp
mov
or
mov
shll
lock
push
cmpsl
xor
xchg
xchg
inc
cld
xor
push
push
sbb
repnz
shrl
push
into
jnp
inc
pop
mov
shlb
les
cld
fs
mov
xchg
or
inc
stos
stc
das
xchg
rorb
jmp
ljmp
xor
adc
fbld
ret
push
cmp
or
stos
iret
scas
push
and
xlat
jmp
mov
dec
mov
lret
cmc
addr16
lea
cld
pop
pop
mov
ret
lret
shll
push
push
sbb
mov
ljmp
rorb
rep
mov
repz
shrb
push
test
test
loope
jmp
mov
inc
jp
push
insl
mov
mov
or
and
repz
cld
mov
push
fstps
and
dec
movsl
adc
shrb
test
pop
add
inc
add
xchg
repz
push
jns
incb
xchg
mov
fiadds
add
and
movsl
ret
repz
addb
in
mov
lds
jmp
mov
pop
movsb
sbb
mov
cmp
outsb
xchg
jo
mov
add
lret
and
xor
arpl
jne
jb
mov
mov
bound
adc
mov
fcomp
mov
testb
daa
cmp
adc
call
or
sbb
and
es
arpl
in
inc
scas
cld
push
fcmovu
sbb
sub
loopne
insl
mov
sbb
je
imul
dec
adc
xor
add
aam
aad
push
std
aad
cmp
insl
xchg
cltd
or
adc
sub
adc
je
cld
pusha
iret
orl
xchg
cwtl
xchg
insb
aaa
inc
and
mov
stos
sbb
mov
push
jg
push
push
adc
loopne
add
mov
addr16
jno
mov
sahf
sub
sahf
test
divl
add
aad
jmp
push
mov
mov
jl
orb
add
addl
popa
rcrb
push
xchg
out
insl
cltd
fisttps
out
cmp
jne
jb
div
mov
ficomps
lods
es
repz
or
inc
pop
aaa
push
and
std
imul
inc
jae
push
sub
aaa
fistl
mov
jno
sub
lret
mov
fidivrl
push
lds
jae
and
pop
xor
mov
cmpsb
mulb
mov
jle
mov
jne
sub
inc
jmp
xchg
cs
mov
out
sub
cmpsl
or
and
adc
or
fildll
pop
sahf
test
imul
push
jo
xchg
adc
fnstsw
arpl
jb
push
cmp
cmp
xor
inc
pushf
jecxz
adc
cmpsl
mov
insl
xor
push
inc
mov
add
repnz
adc
cmp
mov
sub
ljmp
add
stos
dec
rclb
jge
inc
addr16
ret
or
mov
insl
ljmp
lcall
cmpsl
aas
imul
enter
push
es
add
into
loop
das
sub
out
std
xor
loopne
pop
mov
xor
inc
push
int3
sbb
cmp
lds
mov
push
add
cmp
mov
fnstenv
sbb
pop
jbe
test
mov
mov
sbb
cmc
ficoms
xchg
iret
pop
inc
fsts
mov
sbbb
pop
aas
repnz
inc
jp
lods
in
jg
lahf
sbb
pop
sti
mov
aaa
jge
data16
sbb
dec
sub
leave
imul
rcrl
scas
cmp
add
cmpsl
jmp
ficoms
inc
push
lods
mov
in
call
or
out
cltd
push
iret
data16
adcb
jnp
mov
mov
mov
jmp
xchg
js
rcr
out
jp
jecxz
mov
ja
mov
add
cli
mov
cmp
rcll
add
es
sub
mov
xchg
testl
aas
sbb
test
pusha
hlt
das
jecxz
in
and
testb
test
mov
dec
andl
xchg
cmp
pop
dec
shll
repnz
or
add
loope
adc
xor
loopne
fsubrl
push
mov
test
pop
xchg
out
cmpsl
mov
cmpsl
cmp
inc
push
leave
fcompl
mov
mov
inc
jl
int3
mov
dec
push
in
add
cmpsb
cld
push
test
mov
fs
imul
push
cmp
ljmp
and
sbb
shl
cs
fs
enter
int
push
lock
negl
adc
dec
pop
fcmovbe
fnstcw
jae
fsubp
mov
lock
adc
sub
scas
push
mov
mov
ret
addr16
push
pop
imul
jbe
inc
and
jle
sbb
xchg
pop
inc
push
mov
bound
repnz
jle
test
pop
lret
sbb
ret
repnz
mov
add
mov
and
push
or
stc
lcall
mov
cli
sahf
insb
or
pop
and
imul
pop
fwait
stos
clc
sbb
lods
sbb
or
std
dec
jge
loope
cli
inc
push
mov
jb
bound
adc
jne
test
or
dec
lods
add
pop
int
dec
lahf
sub
stc
shll
mov
ret
pop
data16
push
sbb
iret
test
jae
std
xchg
or
mov
jmp
out
stos
cmp
aad
jge
dec
mov
aam
dec
dec
outsb
jns
adc
adc
inc
mov
push
daa
inc
hlt
fstpt
add
mov
push
adc
xchg
lcall
xchg
add
repnz
adc
mov
sbb
sarb
inc
imul
mov
mov
add
mov
daa
pop
aad
cld
pop
rcrl
mov
xchg
sub
es
mov
mov
loop
cmpsb
mov
cmp
xchg
sbb
out
das
out
sbb
dec
lret
xchg
inc
leave
mov
shrl
popa
lret
int
popa
testl
or
mov
xchg
lea
bound
dec
push
push
sbb
rorb
mov
js
mov
stos
add
mov
loope
int3
sbb
mov
dec
dec
test
pop
mov
fidivs
cwtl
pop
mov
outsb
xor
pop
xchg
jo
mov
push
dec
arpl
hlt
jmp
adc
cmpsl
mov
jle
mov
adcb
dec
add
hlt
or
test
outsl
imul
popf
mov
orb
fldcw
lock
push
imul
cli
inc
sub
imul
inc
enter
push
ss
in
xchg
sub
cli
dec
and
hlt
mov
jge
sub
loop
jne
loope
cld
call
adc
and
xchg
jmp
out
aad
inc
xchg
add
pop
fcoms
dec
fs
xchg
inc
aas
pop
xlat
popa
fstps
xor
gs
js
repz
xchg
sub
enter
xor
adc
out
icebp
jbe
pop
hlt
push
adcb
mov
mov
aaa
cmp
mov
fadd
push
xchg
aad
movsl
mov
fs
inc
sbb
pop
mov
push
aaa
movsl
imul
pop
dec
pop
stos
in
adc
push
fildl
adc
in
push
adc
inc
jb
add
jae
leave
cmp
sahf
lret
push
sub
add
aam
movsl
dec
stos
sbb
in
aad
sub
dec
xor
in
cmc
mov
shrb
hlt
add
sub
insl
dec
stos
pusha
sbb
cltd
repnz
jne
ljmp
lcall
mov
in
pop
mov
bswap
icebp
mov
and
stos
xorb
xor
mov
xor
jmp
hlt
xchg
xchg
sti
inc
cmp
stos
add
xor
jl
loop
out
xchg
int3
aaa
jecxz
dec
pushf
mov
andl
push
mov
mov
ret
mul
mov
decl
aas
lods
jb
insl
shr
shrl
fistl
outsl
xor
imul
outsl
jns
je
ds
push
negb
mov
jmp
mov
jp
pop
mov
imull
mov
push
push
fnstcw
jl
negl
jo
cmp
ret
xchg
sbb
jns
inc
mov
cmp
pop
jmp
icebp
cwtl
dec
adc
mov
mov
gs
lret
mov
jne
lods
sub
test
sub
adc
ret
in
sub
xor
sub
lahf
and
pop
test
mov
inc
lds
loop
dec
ljmp
push
and
pushf
mov
push
push
std
ret
mov
adcb
ljmp
sbb
fwait
popl
push
cmpsl
pop
ror
and
mov
mov
mov
add
jbe
xchg
add
outsb
mov
sti
aam
mov
mov
in
testl
cmpsb
aaa
pop
jg
jg
cmp
cmp
jns
sub
push
loopne
aad
out
mov
test
jp
ljmp
or
push
and
pop
and
lock
sub
aas
or
xchg
dec
jecxz
push
loopne
cmc
sahf
jecxz
pop
test
ja
add
jns
xchg
xor
aam
daa
pop
lods
adc
jb
icebp
ret
mov
jge
ss
mov
sahf
pop
lods
push
dec
mov
mov
out
shr
dec
mov
fwait
popa
pop
add
push
dec
rorl
sbb
in
cmp
xchg
sub
imul
outsl
jno
in
or
add
sbb
jg
vpacksswb
dec
dec
jge
jns
popl
fisubs
xchg
add
mov
mov
pop
clc
xchg
test
mov
add
stos
xchg
aas
mov
pop
xchg
js
mulps
jne
addr16
adc
js
js
mov
icebp
sti
call
sub
mov
lock
hlt
imul
mov
and
imul
jmp
xlat
or
into
xor
xor
inc
pop
sarb
inc
insl
test
out
adc
imul
xchg
jecxz
outsl
out
mov
clc
push
or
mov
mov
ret
cmp
push
mov
mov
mov
sahf
push
push
jg
pop
ffree
xchg
adcb
out
enter
fsubrp
adc
xchg
mov
les
movsl
ja
sti
mov
sbb
call
hlt
pushl
sub
lret
mov
cld
sarb
pop
jp
xlat
dec
les
mov
inc
fsubrs
push
cmp
cmp
rcrb
push
lret
stos
jg
push
push
push
cmp
dec
pop
ds
fcmovu
and
adcb
in
sub
ret
mov
sub
fcompl
in
fimull
inc
pop
rclb
fwait
imul
insb
sbb
dec
adc
jle
xchg
fidivrs
mov
stos
dec
lds
mov
movsl
mov
rcrl
fisttpl
pop
lds
fiadds
sub
mov
fisttpl
addr16
imul
orl
and
inc
jo
pop
adc
cs
adc
int3
xchg
pop
xor
mov
dec
inc
loop
dec
cmc
mov
sub
jne
xor
addr16
out
nop
bound
mov
push
movsb
fcoms
mov
scas
fidivrs
or
dec
cmpl
icebp
mov
jne
pop
dec
add
xor
add
repnz
push
imul
std
sahf
sbb
mov
inc
mov
insl
sbb
xchg
cmpsl
push
mov
xor
mov
xchg
mov
pop
lods
add
outsb
fwait
imul
and
movl
inc
xchg
xchg
pop
push
xchg
or
adc
das
xchg
xor
scas
jb
and
mov
pusha
sbb
sti
add
dec
cld
xchg
sub
dec
xchg
xchg
sbb
mov
jnp
in
ds
pusha
push
sti
mov
mov
int
mov
dec
sub
aad
dec
in
push
mov
jg
rorb
cmc
lret
pop
jp
and
daa
mov
mov
sbb
stos
mov
pop
fdivrs
jbe
insl
pop
mov
outsb
repz
shlw
fs
mov
popa
pop
dec
orb
das
pop
fucomi
aad
out
and
ror
cmp
call
pop
stos
xor
outsl
mov
jnp
mov
cmp
jbe
shl
mov
mov
sub
push
lahf
dec
lahf
loope
test
sbb
rorb
mov
cmpsl
lret
packssdw
xor
je
rol
or
pop
cmp
push
sbb
sub
jne
jmp
ret
ret
xchg
loop
call
adc
and
cmp
jmp
jge
mov
ja
add
jno
inc
cwtl
or
into
xchg
es
cmpsb
inc
mov
xchg
and
roll
xlat
cmp
scas
pop
xchg
popf
int
aad
mov
rorb
jmp
daa
out
in
adc
cmp
in
ds
dec
dec
orb
mov
xchg
jnp
sbb
rclb
movb
add
mov
dec
idivl
mov
or
sub
push
jns
mov
test
arpl
test
jmp
ja
testl
repnz
dec
sahf
jo
and
frstor
inc
cmp
test
push
add
ret
cmpsb
cmp
sahf
ljmp
subb
xlat
lods
sub
scas
adc
push
xor
jne
in
hlt
and
cs
stc
rorb
xchg
sbb
mov
daa
movsl
decl
mov
jp
subl
xor
inc
sbb
pop
push
test
cwtl
call
int3
adc
adcb
cmpsl
insw
add
test
or
sbb
lods
mov
nop
push
fcoms
sbb
mov
xchg
scas
mov
sahf
fcoms
lds
inc
arpl
xor
rcrb
pop
jl
aaa
inc
xorb
dec
jmp
call
mov
jecxz
adc
pop
gs
cmp
push
sti
out
push
dec
test
cmp
mov
cmp
dec
push
sbb
and
sbb
xchg
xor
fsubl
mov
fmull
pop
idivb
push
test
jge
inc
mov
aad
xchg
popf
ret
push
cmp
mov
mov
adc
lock
push
outsl
faddl
dec
push
cmp
jle
scas
mov
out
and
xor
scas
push
daa
cmp
adc
movsl
fimuls
jecxz
or
push
push
pop
jmp
movsb
test
aas
pop
mov
sbb
cwtl
popl
dec
inc
jmp
xchg
jne
and
enter
daa
roll
int
cmp
mov
pop
mov
push
test
dec
mov
ljmp
inc
xchg
shrb
mov
aas
push
fisubrs
lock
daa
int3
hlt
cwtl
into
test
adc
addr16
mov
xchg
xchg
xor
inc
sbb
xchg
ljmp
sbb
mov
cs
xchg
mov
push
xor
int3
jg
cmp
pop
outsl
dec
subb
mov
or
insl
mov
lea
in
adc
sarb
inc
mov
sbb
ss
add
out
pushf
sbb
outsb
dec
idiv
test
sub
mov
xchg
jno
enter
mov
dec
leave
push
cltd
cltd
jmp
push
cmp
push
pushl
jl
pop
mov
mov
inc
mov
loopne
cmpsb
jmp
sbb
mov
add
fcompl
pop
scas
fistps
shl
mov
add
mov
cmp
addl
adc
fidivs
push
push
pop
fistps
int3
movsl
out
js
xchg
jecxz
mov
inc
lods
nop
mov
mov
roll
sbb
jmp
dec
inc
mov
outsb
aaa
insb
enter
inc
rorl
xchg
cmp
mov
shrb
in
cmp
jbe
jmp
lods
cmpsl
or
cmp
mov
imul
fneni(8087
add
data16
lahf
test
push
les
xor
xchg
notb
stos
outsl
scas
dec
shr
mov
fs
ror
int3
addr16
adc
jae
in
ds
movsl
and
jge
push
add
jo
sbb
mov
mov
mov
test
xor
out
cmp
jl
sarb
test
negl
jne
mov
mov
mov
and
cmpsb
sub
xor
xor
loope
shlb
or
push
or
loop
ljmp
ret
xchg
xchg
inc
ret
push
mov
rcrl
and
xor
sub
faddl
es
mov
mov
iret
jns
jg
adc
and
nop
call
mov
dec
icebp
test
in
ds
xchg
push
and
rolb
push
repnz
mov
sti
dec
jecxz
aad
sub
add
jecxz
cmp
es
popa
jno
mov
ljmp
cltd
inc
mov
test
test
les
xchg
pop
or
push
data16
int3
cmp
adc
je
mov
cmpsl
pop
cld
sub
lcall
xor
mov
insl
cmp
xlat
dec
dec
mov
pop
pushf
ss
loopne
cmp
lcall
insb
jg
pop
jb
sub
nop
out
dec
sub
cmpsl
add
inc
sub
mov
mov
hlt
cs
mov
mov
inc
jnp
jae
jae
sbb
push
lea
or
dec
jg,pt
shl
mov
test
pop
push
adc
scas
and
shr
stos
cwtl
xlat
pop
icebp
int3
imul
mulb
leave
sub
fnstcw
fdivr
pop
lock
pop
adc
orl
stos
imul
dec
aas
aaa
scas
xchg
adc
mov
imul
lret
loopne
mov
cwtl
call
rorb
mov
push
fsubr
in
adc
or
pop
cld
out
lds
mov
dec
sub
pop
inc
push
pushf
add
push
add
outsb
adc
cmp
pop
and
mov
shll
sbb
bound
pop
pop
mov
out
inc
xchg
aaa
xchg
scas
call
shl
int
mov
nop
out
fstpt
inc
jle
jbe
out
ss
psubb
sbb
shlb
mov
int3
addr16
pusha
dec
mov
cmp
pop
into
bound
push
push
xchg
lret
movsb
loope
sti
cmp
jb
mov
xchg
std
icebp
cwtl
out
sub
jo
sbb
ss
clc
jbe
and
add
cltd
adc
in
out
and
jb
aas
orl
mov
inc
fwait
dec
fdivs
outsb
mov
lcall
jbe
int3
loopne
in
add
push
push
mov
sub
sub
out
jp
popf
inc
rcr
fld
push
cli
xchg
daa
lds
mov
loop
sahf
ss
sub
xchg
cld
xlat
adc
mov
mov
pushf
in
lea
out
test
into
jmp
fistpll
out
xor
jbe
sahf
pop
cmp
xchg
dec
aad
test
inc
js
mov
test
push
fldl
xchg
dec
pusha
pop
dec
mov
sub
inc
cmpl
insl
imul
pop
cwtl
in
orb
cmpl
std
or
sbb
imul
dec
fcmovnu
mov
clc
mov
int3
push
test
push
sub
pop
xor
fwait
mov
shlb
shll
std
cld
addr16
in
push
nop
sbb
in
stos
aad
sahf
int
pop
xor
xchg
sbbb
lret
sti
dec
jne
pusha
sub
bound
stos
cltd
pop
call
cmp
mov
test
lock
rcrb
push
mov
and
cmp
scas
sub
sarl
inc
or
jae
ja
mov
mov
lahf
cmp
xchg
adc
fstl
push
outsl
sbb
dec
data16
pop
leave
jo
add
scas
sub
jecxz
sub
call
cmpsl
xlat
es
jns
and
jg
shlb
movsb
lods
lock
jg
cli
enter
repz
leave
mov
and
pop
stos
push
jb
add
mov
clc
mov
cmc
enter
hlt
dec
jns
scas
neg
mov
int
push
cmc
js
loop
sub
jp
mov
les
hlt
fs
mov
lods
aaa
sub
test
push
pop
jo
add
test
psadbw
pop
pop
dec
fdivrp
fwait
jns
or
sahf
inc
lods
adc
or
nop
cltd
xchg
adc
mov
je
or
gs
push
shlb
jle
jl
std
sub
mov
adcl
sbb
bound
sub
ret
filds
js
call
mov
ss
lods
subb
pop
jecxz
rol
neg
test
fldenv
call
xchg
inc
ret
loop,pt
jns
xchg
xchg
push
pushf
xchg
dec
inc
pop
out
ret
xchg
jmp
and
adc
sub
repnz
mov
inc
mov
push
filds
shl
dec
adcb
push
and
mov
stos
or
repnz
add
jno
cld
xchg
sbb
adc
xchg
xchg
es
jecxz
push
rcll
lods
and
push
sbb
cli
push
xchg
test
mov
cmpsl
es
aad
pusha
lods
push
fnstcw
sub
add
dec
add
fcoml
mov
push
in
sbb
mov
stos
lods
or
std
inc
jle
or
mov
mov
stos
iret
sar
cmp
xchg
popf
in
out
stos
sub
xor
inc
pop
js
xchg
fistpll
stc
addr16
xor
loopne
pop
xor
cmp
es
or
rcrl
filds
mov
jmp
dec
adc
push
outsl
and
xchg
dec
push
outsb
dec
popf
or
and
xor
test
lahf
test
out
pop
or
push
pop
inc
mov
add
orl
scas
jp
and
ret
in
adc
adc
outsl
lds
cli
inc
shrl
bound
jle
jmp
sub
test
mov
xchg
fistl
sbb
cli
sbb
mov
daa
pop
push
rcrb
mov
hlt
in
scas
mov
cmp
adc
add
jae
mov
mov
xchg
jecxz
push
inc
cmp
xchg
test
xor
sbb
ss
jo
pop
js
mov
xchg
xchg
fsincos
cld
sbb
jb
movsb
mov
out
nop
sbb
jae
repz
addl
in
jnp
outsl
add
aam
ret
dec
lock
rclb
or
adc
cmp
sbb
addr16
inc
sub
xor
jbe
lret
test
cmp
and
lock
mov
inc
mov
xor
and
xchg
lods
inc
sub
filds
fcmovne
mov
mov
mov
adc
push
fs
or
cmp
test
sti
pop
lret
pop
xlat
test
pop
fs
cltd
fs
es
jge
or
and
push
test
xchg
jne
in
cmp
push
stc
ja
mov
cltd
mov
sub
or
cltd
call
icebp
mov
cmp
mov
in
push
je
addr16
dec
or
dec
mov
pop
mov
pop
mov
lret
xor
mov
outsl
mov
cmp
iret
or
dec
pop
jae
fwait
shr
sub
addr16
mov
in
push
pop
lods
fbstp
ja
sbb
js
mov
pop
xchg
or
push
jmp
cmpsb
insw
push
jp,pt
arpl
mov
xchg
imul
aaa
add
cltd
in
cmp
and
or
cmp
das
ja
inc
and
mov
insb
jmp
into
dec
mov
jo
dec
push
inc
ljmp
jne
ja
or
jg
adc
adc
add
push
cmp
mov
mov
sub
lret
jle
andb
outsl
xchg
enter
adc
movsl
aas
pop
jnp
iret
jecxz
push
sbb
lock
dec
pop
or
pop
hlt
into
lcall
dec
jns
adc
sub
lock
add
mov
mov
push
cmpsl
push
cltd
mov
in
dec
sar
mov
mov
mov
mov
dec
adc
dec
rorl
fsubrp
sub
jae
push
add
sbb
mov
mov
push
lock
xor
ficompl
fdivrl
mov
jb
gs
pushf
icebp
or
cwtl
pop
leave
pop
fistpl
je
popf
mov
mov
or
lret
popa
sbb
sbb
xchg
iret
lcall
push
loope
in
add
sub
mov
pop
es
cmc
icebp
nop
decb
xor
jle
lea
mov
inc
mov
and
sbb
ret
xchg
jnp
ljmp
mov
dec
adc
cmpsl
ret
test
lods
test
fdivrs
dec
jno
shrb
push
or
fistpl
js
mov
mov
cmp
test
out
mov
clc
cltd
das
xor
fsubp
pop
rorl
imul
add
repnz
xor
xor
mov
icebp
outsl
pushf
push
fdivp
dec
push
ficoms
cld
rcll
inc
clc
push
or
filds
mov
dec
mov
pop
mov
mov
sub
and
scas
sbb
cmpsb
shll
decb
xchg
mov
lods
inc
cli
pop
insb
or
stos
aaa
in
mov
data16
push
mov
andb
pop
lret
lock
andb
jecxz
adc
sti
notl
ret
movb
clc
hlt
push
fwait
add
stos
sub
pop
scas
mov
dec
xchg
add
jnp
adc
adcb
imul
scas
cmpb
jecxz
and
jae
aad
xor
jge
rcll
inc
dec
popa
shrl
in
mov
in
mov
enter
sbb
dec
cwtl
sar
sub
repz
daa
aad
cltd
push
les
hlt
imul
sub
stos
pop
jae
mov
adc
int
adc
lahf
std
jo
dec
dec
pop
mov
inc
inc
ds
addr16
movsb
mov
mov
mov
xchg
test
sbbb
test
pop
fdivp
inc
les
movsb
popf
popf
lcall
mov
loope
pop
mov
xor
or
fstpt
or
popa
adc
in
jns
xchg
loope
daa
sbb
or
jne
dec
jb
pop
mull
jmp
js
ds
push
in
popf
push
sub
xor
push
adc
push
dec
test
loopne
inc
repnz
rcl
add
imul
les
popf
or
sbb
lock
mov
mov
loope
es
arpl
out
jae
out
mov
cmp
adc
repz
leave
cmc
push
lret
or
inc
test
jbe
or
pop
add
or
jo
jmp
inc
mov
repz
outsl
push
mov
xchg
jne
scas
adc
sub
pop
jmp
out
or
mov
mov
push
sub
int
pushf
mov
aad
or
mov
adc
in
mov
pushf
push
inc
shl
xchg
out
enter
aad
loope
cli
lahf
pop
fcoml
sbb
cmp
in
ss
pop
fsts
outsl
pop
popf
sti
mov
sub
les
shll
jp
je
loope
pop
addr16
fwait
sbb
aam
sbb
and
shll
push
lcall
xorl
imulb
sub
out
inc
movsb
call
xchg
mov
push
mov
clc
push
push
stos
push
sbb
imul
loopne
pop
arpl
int3
test
je
aaa
aaa
ret
inc
out
subl
loopne
js
cmp
xchg
adc
sarl
fsubl
cmp
addr16
aad
sbb
cwtl
sahf
jne
cmpsl
loope
lea
movsl
dec
mov
insl
inc
xor
fsubp
icebp
ret
test
and
xor
xor
leave
push
fwait
xchg
sbb
mov
nop
sbb
mov
jecxz
or
movsl
jns
ja
jl
mov
inc
stc
cs
xchg
cmpb
xlat
test
pop
push
push
cmpsl
insb
hlt
std
xchg
fistpl
lods
data16
nop
and
or
or
mov
popa
out
lret
lods
mov
iret
xchg
call
lcall
mov
dec
cltd
push
scas
lods
ds
pop
lock
push
jmp
popa
adc
adc
adc
push
loop
stc
scas
adc
lret
dec
mov
mov
xor
std
jmp
and
mov
aas
das
popw
adc
ljmp
das
stos
mov
insb
xor
ffreep
insb
push
enter
in
je
jbe
fmuls
lahf
aad
imul
sub
imul
or
cmc
iret
mov
cs
xlat
jbe
mov
inc
rorb
addr16
add
dec
lea
mov
sbb
jle
xor
daa
repz
xchg
inc
sahf
push
jae
pop
repz
mov
sub
mov
test
popl
pushf
mov
int
pop
lcall
out
adc
imul
shl
fisubs
sub
std
lods
loop
lock
mov
outsb
jg
loopne
lods
or
or
xchg
pop
push
mov
shlb
popf
imul
xchg
scas
test
or
movsb
stos
and
mov
adc
mov
add
mov
xchg
fmull
andb
jmp
mov
gs
add
psraw
fistpl
jmp
jl
popa
imull
dec
adc
lock
mov
dec
jg
xchg
hlt
scas
mov
mov
inc
sbb
aam
and
das
sub
repz
das
jbe
xor
out
mov
out
js
fadds
mov
in
imul
fimull
stos
or
push
push
es
sub
ret
inc
and
mov
dec
lods
jle
out
adc
int3
mov
dec
mov
rorb
iret
inc
stc
sbb
cli
rcll
mov
or
push
stc
sbb
sbb
push
movsb
pop
or
cld
jg
stos
mov
jnp
movsb
std
cmp
dec
sbb
sub
mov
mov
cmp
pop
inc
dec
dec
mov
dec
and
orl
xchg
adcb
addr16
sub
lret
pop
aad
add
dec
dec
cltd
add
adc
push
pusha
xor
inc
leave
adc
popa
add
testb
stc
xchg
in
orl
adc
dec
aas
dec
je
lcall
pop
es
js
cmp
xor
xor
jbe
clc
cmovo
sti
ljmp
das
lds
cmpsb
dec
pop
xor
shrl
and
std
notl
inc
scas
int
cmp
sub
jno
xchg
stos
popa
mov
fst
decb
and
pop
and
mov
cmp
ja
dec
sbb
push
push
pop
iret
test
lret
call
jne
stos
movsl
jmp
fcompl
xlat
int
jne
pop
bswap
or
mov
adc
pop
in
cmp
jb
add
icebp
adc
std
rcr
sub
push
push
or
rol
or
xchg
and
ret
mov
icebp
inc
push
adc
enter
cmp
lock
out
mov
fstpt
loopne
sub
popl
repnz
lret
in
push
cmp
sub
gs
imul
stos
jl
jecxz
push
sti
bswap
xor
sub
inc
mov
xchg
sub
dec
mov
stos
push
ja
inc
xchg
fisttpl
pop
add
inc
dec
fsubp
jmp
mov
sub
xor
pop
jns
xor
fiaddl
out
mov
cmp
aad
lock
pop
imul
sub
push
adc
cmp
lods
mov
fistl
sub
aam
repz
imul
mov
inc
jp
lret
scas
test
and
cltd
inc
dec
cmp
adcl
jnp
lock
icebp
add
pushf
call
adc
add
or
out
lret
mov
cltd
dec
inc
fsts
push
or
mov
xlat
xor
sbb
scas
dec
add
sahf
mov
fiadds
mov
lock
or
or
add
or
jecxz
test
movsb
mov
jp
scas
cmp
add
mov
in
mov
inc
sarl
mov
out
ss
popa
aam
jge
add
sbb
shl
sbb
fimull
cli
dec
or
out
testl
daa
jbe
ret
repnz
or
fbld
ja
push
frstor
movsl
sub
jmp
aaa
push
and
movsb
jp
push
cmp
test
xor
cmc
xor
test
jb
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jbe
cmp
cmpsb
adc
cld
addb
inc
ss
cmpsl
push
dec
hlt
jmp
addr16
enter
cmp
sbb
pop
shrb
and
adc
clc
push
ret
hlt
pop
jg
loope
ds
pop
mov
xchg
sbb
mov
push
jp
cmp
add
push
sub
repz
outsl
cmc
neg
or
cmpsb
cmp
mov
ss
inc
xchg
in
mov
inc
dec
xor
adc
jl
mov
lcall
adc
push
sahf
lock
test
das
add
inc
out
or
rep
sub
sbbl
adc
adc
push
lods
adc
scas
testl
jle
fldt
or
popf
mov
sbb
outsl
lods
out
jp
add
jge
cli
loope
movsl
and
dec
imul
ficoml
das
push
jae
repz
jle
push
jl
push
enter
decb
scas
enter
or
dec
sbb
or
movsb
push
pop
mov
or
cmp
push
out
fmuls
fnstsw
int
jns
cmc
ret
cmp
call
xchg
inc
xor
repnz
sbb
cwtl
xchg
test
and
mov
loopne
aad
stc
cmp
and
out
sub
gs
daa
pop
scas
rcrb
mov
xor
es
jno
lock
add
pop
int
dec
aad
testl
inc
ja
push
mov
jo
aad
sub
fwait
push
pop
jecxz
xor
fmul
notl
loop
cmpsl
or
push
jge
pop
adc
mov
pop
movsl
jmp
jbe
dec
jns
xchg
xchg
fdiv
bound
in
out
dec
mov
mov
mov
inc
fisubrs
xchg
ja
adcl
xor
sub
mov
aam
pop
mov
icebp
pop
mov
or
inc
xor
cli
je
mov
gs
fsubrs
rorb
std
dec
inc
fidivs
jbe
test
adc
ljmp
lret
or
loop
in
mov
mov
push
mov
push
mov
int3
ljmp
or
fs
add
outsl
sub
or
test
dec
xor
adc
pop
in
int3
and
mov
stos
jmp
add
popa
and
dec
mov
sub
sbb
push
mov
cmp
dec
jno
pop
sbb
xchg
xchg
or
dec
mov
adcl
fwait
sbb
cmpsb
in
jp
ss
push
mov
xor
sbb
mov
jle
cmp
lcall
inc
loopne
outsb
repz
sbb
cmp
lahf
mov
push
lds
jg
aam
jbe
and
xor
popf
nop
and
roll
es
mov
jg
xchg
cmpl
repnz
jno
inc
lcall
imul
sub
xchg
lea
out
ljmp
ffreep
inc
xchg
or
sub
pushf
mov
insb
movsb
cmp
lea
and
mov
daa
or
jnp
imulb
push
nop
mov
push
jne
aad
dec
jae
and
or
add
xor
imul
stc
repnz
gs
mov
xchg
xchg
or
add
mov
movb
push
sbb
mov
es
or
aaa
jnp
or
mov
mov
popa
jp
fstl
rcrb
cmp
xor
adc
pop
cmpsb
sub
mov
pop
int3
imul
sbb
adc
lcall
push
jp
sbb
pop
mov
outsb
insb
push
cs
sub
lcall
push
xchg
outsb
in
loopne
sbb
sahf
adc
clc
in
cmp
ret
push
sbb
jns
add
outsl
ljmp
enter
xor
jae
jne
pop
scas
and
add
or
js
or
fnstenv
or
mov
fistps
fsts
push
xor
ss
mov
stc
inc
jns,pn
adcb
cmp
mov
les
mov
mov
or
fdivrl
mov
arpl
mov
int3
or
push
lea
int
xor
ret
cld
mov
pop
stc
jnp
loope
push
jle
or
inc
inc
add
sbb
dec
mov
lret
mov
lret
cmpb
mov
sbb
sbb
fwait
les
and
das
cmpb
or
fisubrs
xchg
test
push
inc
test
xchg
jns
stc
es
jmp
mov
fistl
lret
xor
mov
jb
inc
popa
lret
int3
aaa
outsl
aaa
sub
push
sub
lret
shl
pop
repnz
mov
xbegin
and
jmp
and
in
fwait
scas
sbb
adc
cmp
and
adcb
adc
dec
xchg
out
push
punpcklwd
out
ret
push
stos
jbe
outsb
dec
mov
and
xor
jnp
mov
out
xor
pop
insl
orb
mov
add
cwtl
mov
adc
pop
inc
dec
adc
subb
roll
pop
movsb
cmpsb
imul
and
lret
loopne
mov
sub
leave
movsl
lret
cmp
mov
push
call
lahf
test
out
nop
out
xor
add
pop
jmp
xchg
add
mov
std
test
pop
jnp
add
data16
imul
jb,pn
mov
lret
pop
lcall
cwtl
adc
xor
movsb
push
and
stos
inc
fs
movsl
mov
es
jp
pusha
xor
insl
cmpl
lahf
adcb
mov
pop
fstp
push
je
xchg
leave
frstor
adc
shlb
pop
fcoms
push
push
sbb
bnd
adc
mov
popa
aaa
in
rcrb
adc
notl
push
out
fidivl
xchg
scas
shrl
mov
and
sub
int3
xor
push
repnz
mov
insb
nop
ja
inc
ja
call
mov
adc
cmpsl
push
mov
rorl
or
mov
rorl
fdivr
cmp
addb
xchg
lds
std
fucomi
mov
stos
push
fs
xchg
sahf
push
arpl
sub
inc
dec
jmp
inc
popf
mov
inc
mov
aas
sbb
mov
mov
mov
or
adc
insb
lretw
mov
stos
push
cmp
push
fwait
mov
dec
or
ss
inc
insl
les
or
mov
mov
cmpsb
dec
aam
mov
test
loop
pop
mov
sub
out
cmp
dec
and
jne
stos
lock
xchg
add
mov
sbb
fcompl
cmp
jb
jg
push
push
dec
mov
movsl
and
sub
jg
aad
out
pop
dec
or
les
pushf
pop
aaa
iret
and
dec
insb
in
aad
xor
scas
push
jmp
fwait
sbb
aad
xor
xchg
xchg
lcall
mov
mov
fs
sbb
movsb
adc
in
xor
push
or
mov
sti
or
insl
push
test
mov
xchg
test
mov
dec
repz
aas
fdiv
shll
cmp
jecxz
scas
or
shrb
in
mov
pop
sbb
cmp
sbb
ficompl
jae
add
sbb
addb
push
fdivp
push
jle
sub
inc
adc
mov
dec
cmc
daa
test
mov
pop
and
pop
pop
mov
out
sti
bnd
lods
sti
sbb
jbe
dec
testl
icebp
xor
pop
les
xor
jl
repnz
insl
sub
data16
jnp
xor
dec
fldcw
jnp
into
xchg
cld
sbb
mov
xor
push
data16
xlat
cld
cmpl
call
jnp
pushf
nop
mov
out
xor
das
pop
sbb
das
inc
push
adc
jns
add
pop
outsl
incl
and
das
ret
mov
pop
sbb
nop
aad
test
or
adc
pop
jo
xchg
subl
xchg
test
and
or
and
out
daa
fs
fcmovnu
aaa
sti
jmp
ds
mov
inc
xchg
shlb
and
mov
sbb
sbb
fucom
arpl
adc
and
stc
rcrl
popf
notb
pop
xchg
push
lods
mov
xor
or
jg
insb
call
and
mov
pusha
popf
push
lock
mov
mov
aad
mov
icebp
jb
dec
sub
test
xorl
icebp
outsb
push
jecxz
fstps
sbb
data16
push
lahf
movsl
leave
popf
sub
fisubl
dec
aad
mov
adc
repnz
jecxz
icebp
xor
cmp
fimuls
mov
mov
push
into
shll
fisubs
ljmp
hlt
sub
rcl
adc
jecxz
sahf
outsb
xor
push
movsb
flds
cmp
rolb
jg
hlt
sahf
outsb
or
daa
call
jle
test
dec
insb
jp
push
sbb
xchg
dec
push
mov
pop
jbe
mov
into
mov
mov
out
fsubrl
fdivl
xor
lret
cmp
in
ret
mov
insb
mov
lods
mov
shlb
dec
and
and
setnp
icebp
popf
psrld
loope
inc
es
mov
inc
mov
push
xchg
jns
outsl
push
in
enter
sub
movsb
loopne
shr
leave
or
pop
cmc
pop
jne
push
pop
test
lds
test
sub
in
adc
pop
or
mov
aam
xchg
in
cmpl
cmc
jp
jge
jle
pop
pushf
mov
dec
and
pop
adc
xorl
push
sbb
scas
icebp
mov
lock
popl
es
push
jp
inc
mov
cmp
inc
pop
lahf
lea
add
xchg
in
inc
xchg
pop
pop
push
mov
jb
sbb
or
jl
push
push
mov
adc
adc
les
cmp
jno
js
jmp
orb
xchg
cmp
dec
popf
leave
mov
adc
mov
sub
pop
pop
int
adc
test
dec
cmp
dec
scas
add
dec
scas
mov
cmp
into
or
aam
sub
push
push
push
movsb
cmp
adcl
mov
jl
mov
lock
inc
insl
xor
add
bound
loope
jle
xchg
cld
in
add
aad
sub
and
cmp
push
sbb
lods
lahf
lret
sub
out
in
jnp
cmp
mov
push
in
dec
inc
cmp
test
sub
mov
mov
add
and
jl
cltd
push
mov
cmp
sbb
and
scas
push
xlat
mov
pop
pop
mov
test
ss
jb
or
mov
push
lds
mov
mov
test
mov
shl
push
inc
jae
pop
test
subl
push
push
mov
fidivl
std
jo
daa
stc
aas
pop
inc
pop
add
mov
mov
insb
jecxz
cmp
xchg
cltd
xchg
sub
dec
movb
sarl
lcall
mov
ss
jge
ja
shrb
add
jae
xchg
out
xchg
jb
xchg
mov
mov
fnsave
sbb
mov
pop
dec
data16
out
aaa
aaa
mov
repnz
std
inc
mov
jmp
out
adc
xor
lahf
fisttps
roll
insl
scas
jg
lret
daa
pop
testl
ror
add
outsl
pop
adc
pop
xor
push
pop
dec
repz
dec
std
cli
out
jle
mov
jl
dec
ss
xchg
adc
lea
mov
int
in
cmp
outsl
push
cmpsl
into
icebp
mov
data16
mov
loopne,pn
jnp
xchg
mov
data16
jge
mov
dec
sahf
adc
call
nop
andb
pop
push
mov
xchg
adc
imul
sbb
push
mov
cmp
pop
ret
mov
stos
sbb
mov
mov
sub
mov
push
or
pslld
cmp
clc
ret
lods
hlt
cld
push
fsubs
cld
dec
cmp
dec
fs
pop
jecxz
sar
push
or
inc
aaa
hlt
shlb
push
data16
inc
addr16
inc
iret
sbb
sbb
adc
pop
sbb
out
aam
or
jle
lds
in
enter
cmp
in
leave
fimull
sbb
or
dec
addb
ret
popf
popa
scas
and
in
mov
mov
mov
lds
cmovb
pop
ljmp
mov
das
sbb
xor
push
fcomp
mov
aad
lock
sub
jno
push
addb
adc
adc
and
or
daa
xlat
outsb
fcomip
add
dec
mov
sti
daa
jnp
lds
lds
or
mov
ljmp
ret
rorl
push
cmp
fwait
sti
push
cli
sbb
fwait
jl
or
jnp
inc
xchg
stc
ja
arpl
adc
jne
aad
mov
jmp
pushf
jl
xor
jmp
xor
push
ror
pop
inc
repnz
jmp
in
jnp
mov
cwtl
loop
mov
in
ja
xchg
cmpsl
out
mulb
dec
cltd
push
out
xchg
inc
sbb
mov
add
jmp
idivl
jg
mov
loope
mov
shl
push
pop
mov
adc
pop
cltd
sbbb
mov
sub
or
cld
int
jns
nop
xchg
jge
into
add
mov
ss
lcall
in
lds
ret
push
js
lcall
pop
out
fnstcw
dec
ret
sub
js
or
pop
stos
fs
and
ljmp
mov
jg
cltd
int3
sub
lds
xchg
sahf
test
push
cld
out
mov
add
xchg
dec
jbe
loop
insb
jo
xchg
push
loopne
xchg
lcall
std
jmp
mov
les
fnstsw
pop
fidivs
sbb
cmpsl
imul
vaddsubpd
pop
mov
jg
mov
sub
call
jnp
xor
popf
mov
inc
push
xor
mov
js
lea
fidivrl
out
pop
sbb
pushf
insl
add
and
cmp
aas
mov
out
idivb
mov
pusha
add
dec
pop
mov
aad
jge
jae
push
test
jnp
mov
jp
test
dec
aam
bound
mov
pop
mov
sahf
add
jne
bound
jl
pop
jp
in
movsb
jp
mov
dec
stos
adc
inc
mov
cmp
xchg
dec
test
mov
test
into
mov
dec
les
push
aad
pop
mov
test
in
xchg
addl
fstl
pop
push
dec
fcoms
aad
ret
jns
lods
jmp
push
xor
rcrb
movsb
pop
dec
rclb
gs
inc
mov
pop
inc
mov
push
lds
aaa
xorl
push
addl
iret
sub
fldenv
push
cmp
rclb
int
nop
xchg
ds
cwtl
adc
loop
sbb
push
jno
js
xchg
mov
sti
adc
jno
repnz
test
jno
in
ja
and
add
mov
or
aam
inc
aad
dec
hlt
sbb
mov
sbb
pushf
add
jp
jnp
jge
inc
jnp
and
cwtl
fidivrs
xchg
leave
xor
fwait
add
test
mov
jo
jle
pop
cmp
pop
mov
pop
pop
xchg
jns
push
pop
pop
push
decb
movsl
decb
lahf
dec
dec
out
adc
jmp
setns
push
lods
xor
cmp
xchg
dec
pop
dec
or
rorb
and
jns
mov
jl
add
mul
push
fcoml
mov
jb
mov
jne
pop
push
cmp
cmp
inc
rolb
jp
add
mov
ljmp
or
call
inc
xor
and
cmc
stos
stos
pop
js
leave
fnstcw
les
movsb
jg
mov
mov
sub
add
inc
sti
jp
pop
sbb
adc
js
push
push
push
pushf
aas
test
fistpll
nop
push
push
pop
jp
dec
dec
stc
in
lret
js
jg
sbb
sub
subl
mov
sub
movsb
test
es
and
aaa
xor
dec
shll
arpl
xor
adc
pop
lret
cli
cmp
dec
loopne
jmp
push
push
xchg
mov
inc
xchg
sbb
dec
push
outsb
cmp
mov
and
jns
add
out
ss
pop
pop
insb
mov
fld
shll
aas
in
mov
cwtl
loopne
movsb
add
push
or
sbb
out
mov
and
sub
push
jecxz
pop
lcall
pop
sbb
gs
xor
jmp
rorb
stos
ljmp
loopne
in
lock
mov
or
mov
cmp
dec
in
jle
std
xor
dec
std
jmp
iret
gs
fwait
rorb
sbb
push
les
std
adc
jno
std
dec
adc
cmp
testl
movsl
loop
inc
cs
pop
lret
iret
pop
pop
pop
inc
sub
or
sarb
daa
fldenv
std
cmpsl
mov
into
lods
mov
jmp
jae
daa
mov
lods
mov
cmpsb
scas
test
cmp
jp
jmp
cmp
mov
xchg
push
xchg
pop
and
cld
insb
mov
lds
mov
cmpsl
clc
mov
icebp
hlt
or
fyl2x
jns
cs
sbb
add
pop
ficoml
shrb
and
notl
cltd
pop
movsb
aas
fdivrs
add
mov
int3
jno
jmp
mov
int3
xchg
div
or
lcall
xor
mov
cmp
xor
loope
pop
mov
stos
in
dec
ljmp
adc
je
loop
in
inc
sbb
or
push
mov
sar
xor
lret
push
cmc
call
data16
cs
fs
popa
add
push
lds
xor
add
rclb
xor
and
xchg
fidivs
lea
dec
or
and
xor
push
sar
xor
sbb
ss
and
popa
pushf
fisubrs
xchg
mov
and
mov
push
pop
ljmp
mov
test
cmp
into
daa
xor
aam
inc
data16
inc
add
add
arpl
mov
dec
sbb
mov
fdivs
arpl
shrb
fimull
adc
cmp
jae
out
mov
ljmp
jmp
scas
xchg
jl
scas
imul
jnp
fists
and
aaa
in
mov
aad
dec
ljmp
jecxz
dec
or
mov
dec
sbb
push
cmove
or
push
inc
pop
imul
or
mov
sahf
cmp
popf
leave
fisubrl
add
lcall
rcrl
in
jne
mov
ret
cltd
fists
dec
cmp
mov
fld
in
pop
popf
in
addr16
add
push
std
mov
xor
xor
mov
ja
mov
lahf
push
bound
sbb
les
xchg
out
sbb
aam
push
lcall
fldl
jns
fdivl
test
mov
mov
fsubp
movsb
xor
pop
push
fnstcw
ja
addb
imul
clc
arpl
psraw
lret
in
sti
loopne
cmpsb
ds
inc
dec
shrb
sarl
inc
rorb
jb
mov
mov
jbe
inc
jbe
insb
sub
or
pop
and
mov
repnz
mov
enter
mov
mov
jecxz
inc
test
ljmp
test
mov
in
outsl
jmp
movsb
cmp
and
mov
addr16
cwtl
push
jmp
inc
call
mov
inc
test
inc
js
jae
jle
outsb
adc
lods
xchg
pop
aaa
inc
out
adc
xor
push
xor
sti
inc
repnz
bound
xchg
cmp
pop
pop
enter
into
add
sar
xor
push
pop
fs
js
leave
push
or
cmp
in
sub
imul
pop
stos
and
pop
or
jl
repz
dec
push
push
add
rol
mov
push
cli
sbb
clc
testl
clc
fsubp
loop
lock
cld
rol
jns
xchg
mov
int
lock
out
int3
or
push
out
mov
lea
xlat
imul
mov
sarb
aas
push
cmp
dec
sti
int
mov
jg
add
arpl
adc
or
das
mov
imul
inc
mov
sahf
cmp
cltd
mov
mov
and
or
fsts
xchg
cmp
imul
cmpl
mov
movsb
sti
out
insb
in
flds
jae
icebp
mov
cld
or
and
lock
sub
loop
in
jno
into
test
sbb
adc
repnz
xor
sahf
jg
ss
mov
insl
add
mov
and
mov
shlb
xlat
mov
mov
cltd
push
pop
addb
test
push
nop
in
inc
xchg
add
xchg
pusha
fsubs
stc
sub
mov
pusha
mov
lods
pusha
dec
fdivrl
cmpsb
mov
cwtl
or
and
mov
hlt
loopne
add
mov
adc
inc
pop
subb
popf
cwtl
or
pop
add
sarl
dec
imul
dec
push
dec
hlt
jmp
push
dec
and
addb
call
clc
mov
psubusb
pop
jp
mov
int
outsb
shl
jmp
cmp
pop
sti
mov
nop
pop
lcall
data16
push
sub
sub
pop
ljmp
xor
push
mov
jae
jecxz
loopne
pop
rolb
or
loope
mov
enter
loopne
sub
fimuls
pop
dec
or
add
sbb
rcrl
adc
leave
ja
dec
adc
aam
xchg
popf
enter
dec
dec
xchg
mov
inc
popf
aas
popa
loopne
adc
xchg
mov
cwtl
enter
cld
insb
push
insl
aaa
adc
test
add
add
mov
cmp
pop
pushf
smsw
mov
rcrb
dec
sbb
mov
sbbb
pushf
pop
cmp
xchg
add
and
data16
push
inc
insb
mov
add
xor
jns
adc
lods
mov
mov
add
or
ds
bsf
mov
aas
fbstp
and
ljmp
pusha
mov
cwtl
in
cmp
daa
lahf
pop
cmpb
not
jno
dec
inc
lret
cli
push
jbe
cmp
lds
test
pop
arpl
fistl
incw
repz
lods
xchg
lods
mov
data16
mov
sub
js
jl
shr
arpl
mov
mov
cmc
sbb
xor
xor
lret
std
mov
pop
out
subb
dec
mov
loop
lret
fisubrs
mov
mov
or
mov
lock
movsb
ror
jnp
into
repz
cmpsb
or
insl
ja
dec
movsb
xchg
inc
mov
cs
xlat
addb
mov
lea
or
lret
xor
in
std
out
xchg
out
test
sub
and
xorb
scas
dec
dec
in
xchg
data16
or
push
mov
jbe
lock
xchg
push
push
loope
ja
loop
arpl
pop
sbb
xchg
pop
negl
fadds
pop
mov
aas
mov
aam
mull
imul
jno
arpl
jne
and
cmp
popf
cmpsl
enter
mov
ret
xchg
lcall
mov
push
popa
std
xor
inc
lods
jl
push
lods
das
jle
lods
or
clc
ja
mov
cli
mov
xlat
mov
inc
ret
mov
scas
mov
adc
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
fmull
mov
add
