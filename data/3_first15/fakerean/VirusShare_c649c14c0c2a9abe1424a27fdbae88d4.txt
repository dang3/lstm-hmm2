and
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
mov
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
mov
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
call
add
test
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
test
je
mov
mov
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
mov
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
jne
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
push
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
call
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
xor
push
mov
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
mov
xor
mov
mov
movl
mov
call
push
push
push
push
push
push
push
push
lea
push
mov
mov
mov
mov
mov
mov
movl
call
cmp
je
lea
call
mov
push
push
lea
call
test
je
mov
mov
mov
push
mov
push
call
add
cmp
je
lea
mov
mov
mov
mov
call
mov
cmp
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
push
push
push
lea
push
push
lea
push
movl
mov
call
add
cmp
mov
je
mov
cmp
je
push
call
add
cmp
je
mov
movl
mov
mov
mov
mov
lea
mov
cmp
lea
je
push
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
je
mov
cmp
mov
je
push
call
add
mov
mov
cmp
mov
mov
je
mov
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
mov
movzbl
mov
and
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
push
push
xor
call
add
cmp
je
push
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmpb
je
push
push
lea
lea
mov
call
mov
cmp
je
add
mov
mov
push
mov
call
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
lea
push
call
mov
add
test
je
mov
push
push
push
call
add
movb
test
mov
je
mov
mov
push
call
add
xor
lea
call
cmp
pop
je
pop
mov
pop
pop
add
ret
pushl
mov
mov
pushl
mov
push
call
ret
mov
mov
push
mov
add
push
call
pop
ret
int3
int3
test
je
mov
test
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
movl
call
mov
add
test
mov
je
push
push
push
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
pop
pop
ret
mov
sub
cmp
ja
push
call
add
test
je
add
ret
mov
mov
push
call
ret
pushl
call
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
movzwl
cmp
jle
lea
mov
mov
lea
push
movl
mov
push
push
mov
call
cmpl
jne
sub
add
cmp
jg
cmp
je
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
push
mov
push
cmpl
push
pop
lea
je
push
mov
cmp
je
push
pop
mov
push
push
push
pushl
lea
push
xor
call
mov
mov
mov
add
xor
push
inc
call
test
pop
je
mov
push
call
pop
leave
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
lea
jmp
int3
mov
cmpl
push
mov
push
jge
mov
push
mov
push
call
mov
add
test
je
mov
mov
push
call
push
call
add
test
mov
pop
je
mov
mov
mov
push
push
push
call
cmp
je
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
cmp
mov
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
pop
pop
ret
cmp
jne
mov
pop
pop
ret
cmp
je
push
lea
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
cmp
je
push
movl
mov
mov
push
push
call
mov
movl
mov
mov
push
mov
call
test
je
push
mov
call
mov
test
je
xor
mov
cmp
mov
jne
call
mov
test
je
mov
mov
push
call
test
je
mov
test
jne
mov
mov
pop
pop
mov
pop
pop
pop
ret
lea
addl
mov
jmp
call
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
push
mov
mov
mov
lea
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
push
je
push
lea
test
je
mov
test
mov
je
addl
add
add
cmp
jne
pop
mov
addl
mov
add
je
mov
test
mov
mov
je
mov
push
push
call
test
je
test
je
mov
mov
push
call
pop
pop
pop
xor
ret
xor
jmp
int3
int3
push
push
push
mov
mov
mov
test
lea
push
push
jbe
lea
xor
mov
lea
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
push
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
call
lea
mov
push
mov
mov
call
mov
mov
mov
call
mov
push
push
call
pop
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
xor
test
je
lea
movsbl
rol
add
xor
mov
test
jne
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
mov
jmp
push
mov
push
pushl
mov
pushl
pushl
push
call
test
js
test
je
mov
test
je
test
jne
xor
pop
pop
ret
mov
jmp
int3
sub
push
push
mov
xor
push
mov
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
mov
je
add
add
mov
test
lea
jne
cmpb
jne
test
je
cmpl
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
jb
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
cmp
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
cmpl
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
cmp
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
call
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
push
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
test
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
lea
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
lea
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
orl
orl
push
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
lea
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
push
push
call
test
js
mov
test
jne
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
fldl
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
mov
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
cmpb
jne
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
dec
and
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
push
call
mov
push
in
mov
pop
push
mov
lods
movsl
loope
hlt
add
jbe
fistpl
add
push
add
add
in
hlt
push
mov
add
push
push
push
lea
push
call
sahf
add
jp
mov
int
pop
jge
add
mov
add
add
jae
lds
out
mov
add
add
jle
pusha
add
add
mov
std
les
add
add
sub
pop
popl
push
push
call
add
leave
add
fsubs
add
add
jo
mov
add
mov
loopne
jl
push
add
pop
aam
add
jo
pop
pop
mov
cmpsl
add
test
add
scas
mov
rcrb
mov
add
add
stc
movsl
add
stc
lds
lcall
push
push
push
lea
push
push
push
push
push
lea
push
call
imul
mov
push
outsl
cmc
fwait
scas
add
mov
add
add
div
mov
add
add
push
outsl
fcoms
xchg
add
fiadds
test
add
mov
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
fadds
stos
add
enter
add
jne
shll
add
notb
add
add
mov
pop
mov
xchg
lods
add
lds
add
movl
movb
hlt
lea
xchg
xchg
in
loopne
push
call
push
push
lea
push
push
call
jno
mov
fildl
gs
add
ret
mov
add
add
add
push
popa
loopne
pop
add
add
add
jmp
add
add
push
frstor
add
lods
cmpb
sub
pop
push
push
push
push
call
xchg
pushf
add
iret
jmp
addl
add
icebp
roll
scas
testl
add
xchg
add
add
fcomip
cwtl
add
xchg
add
mov
ja
in
hlt
lcall
inc
pusha
add
push
lea
push
lea
push
push
push
push
push
lea
push
call
movl
fiadds
add
fisubrl
add
mov
lea
insb
mov
add
out
add
add
sti
add
add
jle
add
lcall
movb
add
adc
sub
icebp
pushf
push
push
push
lea
push
push
lea
push
push
call
fistps
add
leave
xchg
movl
idivl
loop
pop
add
xor
aad
frstor
mov
add
add
lods
aam
add
out
out
fists
std
add
jge
add
pop
push
cmpsb
add
pop
push
sub
pop
ret
push
lea
push
push
push
push
push
push
push
call
fsts
push
mov
add
xchg
add
xchg
in
add
xchg
mov
add
in
pop
adcl
lcall
inc
hlt
mov
push
push
push
push
call
cltd
cmc
add
ja
test
popf
add
mov
test
fisubrs
sti
add
xlat
xchg
add
test
mov
sahf
add
jl
sahf
sahf
mov
stos
enter
add
push
add
add
mov
call
lock
add
add
pop
je
add
sub
pop
add
push
lea
push
push
lea
push
push
call
add
cmpsl
scas
add
mov
test
add
mov
add
push
leave
mov
add
sub
pop
add
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
add
mov
pushf
pushf
add
mov
cli
cwtl
mov
push
jne
mov
push
add
push
add
fcompl
ret
incb
add
xor
push
lea
push
call
add
js
add
add
test
push
add
nop
mov
bound
int3
sar
add
add
add
add
fnsave
mov
pop
ljmp
add
icebp
push
lret
add
rol
add
test
add
mov
xchg
push
decb
hlt
lcall
pop
add
cmp
xchg
mov
add
add
aad
loopne
mov
cmc
xchg
loop
xchg
add
add
in
add
in
ljmp
add
add
cmc
jb
add
add
add
ja
push
add
outsl
mov
in
jl
enter
mov
test
ffreep
hlt
add
in
clc
lcall
sbb
push
push
push
push
push
call
pop
add
pop
scas
cwtl
add
out
movsb
jnp
flds
add
fildl
scas
jbe
mov
negb
add
shll
cld
test
ret
sub
pop
add
push
push
add
push
push
pop
add
shr
sub
sub
xor
xor
pop
pop
push
push
push
push
push
push
push
lea
push
call
iret
test
add
jnp
int3
add
nop
add
pop
add
test
rolb
pop
push
hlt
add
mov
add
outsl
in
jecxz
test
std
mov
add
xlat
add
mov
add
mov
testb
in
loopne
pushl
push
push
push
lea
push
push
push
push
push
call
std
mov
add
push
pop
mov
scas
add
js
fldl
mov
popf
add
add
add
popa
push
in
fiaddl
cwtl
add
mov
in
loopne
lcall
fwait
pusha
add
push
push
push
push
push
push
push
push
push
call
arpl
pop
cmc
mov
bound
add
movsl
add
fwait
add
add
test
iret
add
mov
out
add
int
xchg
mov
mov
push
lea
push
lea
push
call
roll
add
pop
mul
pop
stc
add
cld
add
addb
std
int
push
fwait
add
add
cli
push
scas
cmc
shrl
push
mov
iret
xchg
pusha
mov
push
add
rolb
pop
lret
lcall
lcall
inc
call
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
movsb
pop
xlat
call
add
add
add
add
add
test
mov
stos
movl
sarb
add
push
pushf
jno
pop
imul
pushf
mov
pop
mov
cmpsb
add
sub
pop
lea
push
push
call
data16
jp
add
add
add
lock
add
push
mov
add
push
add
sahf
add
add
stc
mov
fisubl
ljmp
fisubrs
pop
push
in
clc
pop
push
push
push
call
into
neg
cwtl
out
lret
xchg
xchg
lods
push
add
add
add
add
roll
cmpsl
in
mov
test
filds
add
add
icebp
div
push
into
in
add
stc
add
fsubp
mov
imul
imul
pushl
pushl
push
push
push
push
push
call
data16
ficoml
add
bound
add
mov
popf
jp
add
jns
add
icebp
add
add
test
push
mov
lret
add
push
add
jmp
mov
add
sahf
fstp
jge
in
add
test
add
add
pop
call
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
jle
add
ljmp
testb
add
add
add
cld
jmp
add
add
jmp
test
cmc
addr16
add
mov
cld
test
loop
outsl
push
lcall
jne
push
push
lea
push
push
push
push
push
push
lea
push
call
fwait
in
mov
cltd
mov
push
push
add
add
lret
pop
shlb
jbe
repnz
iret
add
add
add
add
test
mov
add
aad
out
movsl
add
push
pop
add
push
add
repnz
icebp
jb
add
les
test
pusha
iret
add
add
jno
mov
iret
add
lcall
jne
call
push
push
inc
shl
inc
push
or
inc
add
sub
sub
dec
lea
sub
add
pop
shl
sub
add
pop
push
push
push
call
jle
mov
shl
lods
add
add
stos
add
fcomps
fs
rol
xchg
add
xchg
push
fldl
out
add
add
add
lret
add
push
mov
jb
add
push
pop
add
rolb
add
add
add
add
hlt
pop
pushl
push
push
push
lea
push
call
mov
mov
add
sbb
scas
addr16
add
jp
jp
add
rolb
out
bound
mov
imulb
add
movsb
pop
call
add
les
int3
mov
faddl
sub
pop
call
push
push
lea
push
push
push
push
call
jbe
leave
cmc
test
add
mov
mov
add
call
fbstp
bound
add
in
add
add
int
add
icebp
add
lcall
inc
push
push
ror
add
push
or
inc
add
add
shl
xor
sub
shl
pop
ror
add
dec
pop
push
push
push
push
push
push
push
call
stc
add
outsl
push
mov
fbld
add
fstl
lea
mov
in
jp
repnz
xchg
in
sub
pop
push
push
push
push
lea
push
push
push
call
in
aam
lods
add
cli
mov
hlt
add
add
mov
add
mov
add
gs
fistl
pop
mov
add
add
lret
call
add
scas
cmpsl
add
lcall
add
rclb
ljmp
jnp
lods
loop
push
lea
push
lea
push
push
push
call
cltd
mov
cmc
pop
nop
fiaddl
mov
push
fwait
add
ja
in
add
lock
lcall
clc
push
push
push
push
push
push
call
add
add
icebp
aam
add
jmp
add
add
jne
add
mov
movsl
mov
imul
stos
add
add
test
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
into
iret
add
sti
add
jnp
add
add
test
add
rcr
add
lret
add
add
mov
fiadds
add
cwtl
mov
in
loopne
mov
push
push
push
push
push
push
call
mov
fs
pop
in
mov
add
lea
popf
subb
jno
subb
add
add
add
add
pop
jl
add
sub
pop
add
push
lea
push
push
push
push
push
push
call
or
int
push
cli
mov
out
add
add
pop
add
pop
popf
mov
add
rol
cltd
add
cmpsb
jecxz
pop
lods
clc
add
add
jl
add
add
arpl
add
movsb
mov
filds
mov
add
out
sub
pop
add
push
push
lea
push
push
push
push
push
push
call
pop
add
iret
add
roll
sahf
add
pop
fidivrs
repnz
add
jmp
push
fimull
out
push
cmc
add
add
cmpsl
data16
out
pop
add
mov
add
arpl
add
xchg
negb
loopne
mov
add
add
ret
incb
add
jne
stos
ret
push
call
add
add
jmp
add
jmp
jae
add
mov
arpl
add
jbe
lahf
add
add
ljmp
pop
add
xchg
add
xor
or
push
lea
push
lea
push
call
pop
out
add
ret
add
mov
sahf
nop
pusha
mov
add
into
lret
mov
mov
scas
loop
add
iret
add
add
jb
add
cmpsl
add
mov
rol
sahf
add
xor
push
push
lea
push
push
call
xchg
add
nop
add
aad
popl
add
xchg
add
add
add
add
add
divb
mov
jae
aad
lods
mov
add
pop
add
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
jbe
add
add
in
arpl
add
pop
add
add
mov
add
push
add
jmp
clc
outsl
clc
xchg
add
iret
jo
mov
add
in
cld
add
sub
pop
add
push
push
push
push
push
push
call
enter
add
add
jns
aam
mov
cwtl
roll
mov
add
cld
jnp
add
add
xchg
jns
add
popf
jb
aam
add
int3
sub
pop
push
push
push
push
push
push
push
push
push
call
add
ja
mov
add
in
add
pop
aam
stc
jp
add
add
add
add
fwait
jmp
mov
fbstp
mov
frstor
sub
pop
mov
xor
push
push
push
push
push
lea
push
push
push
push
push
call
imul
mov
into
mov
pop
bound
xchg
fldenv
leave
imul
in
fcomps
lock
push
lea
push
push
push
push
push
push
call
iret
push
lods
add
in
add
add
mov
int
mov
xlat
aam
movb
js
in
cmpsb
mov
mov
jge
add
push
add
fildll
jae
add
mov
add
rcrb
arpl
add
pop
mov
push
push
lea
push
push
push
call
fldl
add
add
lcall
mov
push
loopne
imulb
mov
add
pushf
jmp
into
fmuls
mov
arpl
add
mov
add
add
fcoml
pop
sub
pop
xor
push
push
push
push
push
push
push
call
add
loopne
add
add
outsl
std
add
rcll
add
xchg
subl
mov
pusha
ljmp
add
lcall
les
push
push
push
push
lea
push
push
call
add
add
mov
outsl
mov
cld
add
add
add
push
gs
fldl
bound
add
rolb
shlb
cmpsb
add
add
add
into
cmc
pop
andb
mov
add
push
add
mov
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
add
add
enter
testl
add
sti
jnp
jbe
sahf
jp
movsl
add
mov
out
add
mov
add
lcall
add
push
lea
push
push
call
popa
mov
bound
pop
xchg
aam
add
leave
hlt
pop
push
fiaddl
notl
add
pop
pop
add
add
add
lea
loop
add
add
sub
pop
add
push
push
push
push
push
push
push
call
scas
mov
push
jp
push
add
rcr
cmpsb
imul
add
fistpll
xchg
and
add
icebp
pop
outsl
add
mov
xchg
in
add
ret
mov
add
push
in
in
lcall
enter
fcmove
stc
das
lea
push
push
push
push
call
mov
add
jb
pop
push
add
mov
add
jnp
xchg
faddl
pop
add
mov
fxch
leave
aad
nop
loope
in
call
rep
push
push
lea
push
push
push
call
add
stos
lds
add
add
filds
cmpsb
add
add
out
mov
add
sub
pop
pop
push
push
push
push
call
movsl
add
lcall
aam
rolb
add
sti
mov
mov
push
int3
stc
xchg
add
push
fldl
popa
push
push
fdivl
add
sub
pop
mov
push
push
push
push
push
push
call
flds
jns
push
pop
add
add
jns
add
roll
scas
push
andb
add
mov
sub
pop
add
push
push
push
push
push
call
repnz
mov
add
add
add
jne
insb
loopne
mov
add
not
add
add
xchg
stos
mov
fcmovnu
imull
xor
mov
in
in
lcall
ret
add
add
push
push
push
push
push
call
mov
push
add
mov
lods
xchg
fmulp
mov
add
add
movsl
mov
int3
loope
pop
add
mov
xchg
add
out
nop
je
mov
xchg
pop
js
loope
in
in
lcall
ret
incb
add
cmp
shr
dec
add
add
addr16
add
addr16
add
add
pop
add
add
jecxz
jmp
cld
scas
add
mov
divl
add
imul
pop
sti
scas
les
add
add
add
stos
add
lcall
push
and
repnz
push
push
lea
push
call
add
pusha
mov
nop
add
sbb
fiadds
bound
mov
push
pop
outsl
add
xchg
add
add
jmp
pop
add
scas
jmp
add
pusha
mov
imul
pushf
add
sub
pop
mov
push
push
push
push
push
push
push
push
call
lcall
add
mov
in
into
cmp
mov
lds
add
add
les
jnp
add
cli
lods
fsubl
addl
and
push
push
lea
push
push
call
lock
add
roll
lcall
add
mov
add
mov
mov
xchg
add
lcall
les
add
push
push
push
push
push
call
mov
outsl
in
add
jne
add
clc
add
shlb
test
add
loop
jae
into
loopne
scas
push
add
bound
add
gs
jns
rol
fildl
ret
sub
shr
dec
pop
add
push
shr
pop
mov
push
push
ror
sub
push
push
pop
add
not
shl
sub
shl
sub
dec
ror
pop
dec
pop
push
push
call
bound
add
add
pop
push
add
jmp
add
add
jl
mov
rorb
cli
add
imul
mov
roll
lock
push
call
enter
add
add
add
test
mov
pop
jl
rclb
test
test
add
add
popf
cli
push
mov
mov
add
add
fdivr
add
pop
add
mov
mov
call
push
inc
lea
pop
push
push
push
shr
not
push
push
pop
add
inc
xor
xor
shr
sub
add
not
pop
rol
dec
pop
push
lea
push
push
push
push
push
push
push
push
call
pop
add
push
data16
ret
add
push
add
mov
add
xchg
mov
add
add
add
icebp
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
imul
jge
jne
int
ror
add
add
in
add
xchg
mov
test
add
mov
iret
push
xchg
mov
lcall
pop
sub
pop
call
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
add
xchg
add
mov
std
je
fisubrl
xchg
add
push
pop
push
mov
test
push
add
aad
jmp
add
add
loope
jne
jge
add
add
jo
ficomps
lcall
push
sub
add
not
dec
pop
push
mov
push
push
push
lea
push
push
push
push
call
add
add
add
rolb
add
add
jb
loopne
sti
pop
add
add
mov
mov
add
pop
add
in
add
notb
leave
jecxz
add
add
repnz
popl
mov
lcall
pop
in
push
sub
rol
sub
pop
add
push
push
push
push
lea
push
push
push
push
push
call
mov
add
rcrb
int
adc
add
mov
jnp
xlat
push
in
scas
add
add
add
cmc
add
add
add
add
add
add
add
xchg
mov
fincstp
mov
loop
xchg
ret
add
mov
les
jmp
lds
add
fcompl
ret
incb
add
inc
je
push
push
push
lea
push
push
call
std
shl
add
add
add
mov
xchg
int3
push
add
push
add
leave
in
imul
movsb
xchg
add
fwait
add
add
stos
popf
add
xchg
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
push
icebp
icebp
add
faddl
add
cmc
mov
xchg
add
add
mov
xchg
jmp
add
add
fwait
pop
pusha
add
lea
xchg
lods
add
cld
add
add
add
scas
addb
xchg
sub
pop
xor
push
push
lea
push
call
jbe
lea
mov
in
iret
pushf
add
shl
fcmovu
mov
add
fiadds
mov
jnp
mov
add
test
jne
add
popa
add
int3
loope
mov
add
pop
cli
add
fmuls
add
add
add
incb
lcall
les
inc
pop
add
push
push
push
push
push
call
add
add
mov
add
add
imul
push
add
fldt
ffreep
add
jnp
pusha
xchg
mov
add
sti
add
loopne
popf
add
add
add
add
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
jmp
add
push
add
add
std
mov
lcall
pushf
negl
out
add
popf
int3
rcll
fwait
jbe
call
jae
shr
add
add
into
mov
mov
xchg
mov
inc
adc
lock
dec
mov
push
push
push
push
push
push
lea
push
push
call
lds
push
aam
fiadds
out
add
add
leave
jge
movsb
jne
ja
mov
pop
add
mov
add
add
jnp
add
lret
add
jae
test
fbld
add
fwait
call
pop
loope
scas
add
mov
pop
add
push
lea
pop
pop
push
shl
ror
shr
pop
mov
push
push
push
lea
push
lea
push
call
shr
outsl
loopne
mov
mov
add
add
sti
add
stos
mov
in
jl
mov
add
add
mov
add
add
add
mov
jecxz
iret
add
out
add
lock
add
mov
sub
pop
xor
push
push
call
outsl
cli
add
mov
shr
imul
mov
leave
add
sahf
mov
jecxz
add
jns
add
fadds
test
add
add
jnp
mov
add
add
in
lea
lock
mov
add
roll
out
add
mov
lcall
les
add
push
push
lea
push
call
out
roll
jb
jp
loope
sbbl
add
add
jns
add
mov
pop
add
fnstsw
push
add
mov
out
xlat
add
shll
pusha
jmp
xchg
mov
add
stos
add
cli
add
add
jo
fs
add
jno
add
add
sub
pop
rep
push
push
push
push
lea
push
push
push
push
call
push
mov
test
data16
mov
add
lret
add
jp
pop
scas
repnz
add
loope
lods
stos
clc
add
int
stos
add
fiadds
mov
add
in
xchg
ljmp
mov
lcall
dec
and
cmp
dec
rcll
add
add
add
jmp
add
mov
lret
add
add
add
add
test
push
add
xchg
mov
xchg
jle
xchg
stos
jecxz
add
scas
int3
add
add
add
out
sub
pop
xor
push
push
push
lea
push
push
call
mov
push
add
bound
add
jmp
test
int
mov
add
push
xchg
add
loopne
add
ja
xchg
aad
sub
pop
add
push
push
push
push
call
mov
add
sbbl
push
add
js
mov
clc
popa
add
mov
lret
add
ror
add
mov
add
mov
add
aam
add
add
add
jnp
pop
mov
xchg
call
add
test
add
lock
lcall
leave
je
push
shl
inc
pop
mov
xor
push
push
push
push
push
push
call
mov
mov
mov
shl
test
add
add
fiadds
jnp
mov
mov
addb
add
out
add
add
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
fbld
insb
in
mov
mov
divl
push
add
pop
add
stos
cmpsl
add
jl
add
add
mov
add
jne
xchg
add
test
add
add
mov
fwait
insb
add
mov
iret
add
add
push
xchg
mov
lea
pop
xlat
std
popa
pusha
je
in
loopne
lcall
adc
push
push
push
push
call
add
lcall
sbb
out
xchg
mov
add
add
xchg
add
add
pop
add
lods
jne
testb
repnz
sub
pop
add
push
lea
push
call
mov
cmpsl
add
pop
push
add
cld
add
imul
lods
lcall
loope
movsb
add
add
roll
push
push
push
push
push
push
call
add
loopw
testb
add
lds
into
sahf
add
ficompl
jae
add
mov
stc
add
pushf
outsl
cltd
loopne
add
mov
xchg
add
mov
add
push
lea
push
push
push
call
js
add
add
test
pusha
nop
add
pop
push
cli
push
add
add
add
in
call
jle
mov
add
mov
sub
pop
push
mov
xor
push
push
lea
push
lea
push
push
push
push
push
call
loope
in
pop
add
roll
pusha
add
lcall
add
pop
jle
mov
add
add
jp
add
add
push
add
sub
pop
add
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
data16
push
sahf
lea
add
add
xchg
add
clc
mov
add
nop
xchg
test
je
add
add
sub
pop
pop
push
push
push
push
push
call
loopne
add
add
add
add
jle
lea
add
test
mov
add
data16
lea
pop
add
out
add
movsb
push
push
push
call
add
int
mov
repnz
addr16
addl
add
xchg
imul
pushf
lods
mov
add
fiadds
add
loop
add
lcall
dec
sub
or
cs
ficoml
dec
pop
push
push
call
aam
addb
add
add
in
mov
add
mov
jbe
add
add
add
addr16
add
add
mov
cltd
add
add
imul
add
add
mov
stos
xchg
add
mov
jne
aam
in
in
lcall
or
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
cmpb
mov
je
add
jns
xchg
add
mov
jge
imul
add
add
add
les
testl
fiadds
mov
jecxz
in
fdivr
lcall
les
push
lea
push
push
push
push
push
lea
push
lea
push
call
mov
insb
add
jp
enter
les
mov
mov
lret
add
lret
push
add
cli
insb
loopne
iret
stos
cmpsb
lock
add
rcrb
add
mov
add
add
lcall
leave
je
push
push
lea
push
push
push
push
lea
push
call
jae
pop
cmpsl
add
add
ret
mov
push
bound
stc
rolb
add
add
les
mov
orb
add
fcompl
add
popl
fistl
add
add
in
add
xchg
xchg
data16
cmc
jmp
ret
sub
pop
mov
push
push
push
push
push
push
push
call
add
add
jnp
add
add
jl
sar
push
add
add
add
mov
ret
add
add
add
add
stos
mov
add
mov
scas
add
add
add
mov
add
nop
add
add
add
fiadds
movl
addr16
mov
add
add
add
icebp
cmpsl
add
in
lcall
sub
sub
lea
pop
add
push
lea
push
lea
push
push
lea
push
lea
push
call
bound
add
mov
add
out
add
arpl
jecxz
lods
add
fildl
pop
add
test
pushf
shlb
fiaddl
add
pushf
lods
jo
jo
int3
insb
stc
add
out
pop
addr16
pop
rep
push
lea
push
lea
push
lea
push
push
push
call
addr16
add
add
mov
lea
add
add
jmp
lds
mov
add
add
add
test
call
mov
add
or
inc
add
sub
sub
lea
shr
sub
pop
shr
shl
ror
dec
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
cli
pop
in
lcall
test
in
mov
add
add
xchg
lea
xlat
add
int3
jmp
add
subl
add
fiaddl
movsl
push
fsts
add
add
icebp
add
enter
lcall
push
inc
add
pop
mov
push
push
push
push
call
out
add
pop
mov
cld
jno
in
lods
enter
jl
xchg
add
add
xchg
aad
mov
addb
add
cld
fstpl
mov
add
add
add
push
mov
fcmovnb
fwait
add
add
push
lods
pop
add
sub
pop
mov
mov
push
push
lea
push
push
push
push
push
push
call
add
hlt
add
add
mov
imul
in
cli
add
add
mov
rcrb
add
in
loopne
lcall
loopne
push
push
push
call
les
fstps
addr16
add
add
mov
mov
out
cmc
icebp
lock
fwait
add
hlt
lcall
in
add
push
lea
push
push
lea
push
lea
push
call
sahf
jae
push
shll
add
add
ja
scas
add
rolb
ret
add
mov
add
add
sub
pop
push
push
push
push
push
call
aad
add
pop
mov
adc
adcl
add
add
mov
add
jl
xchg
add
add
add
loop
repnz
add
add
add
flds
fadds
fistpl
xchg
fcmovnbe
jmp
fistl
popa
ljmp
add
pop
add
incb
push
push
lea
push
push
push
call
out
add
leave
loopne
xchg
scas
into
add
jae
add
scas
adcb
fbld
add
xchg
lods
lea
mov
mov
add
add
lock
lcall
inc
cld
push
ror
ror
rol
pop
pop
push
push
call
mov
lret
cmp
test
mov
add
mov
addl
pop
ja
add
mov
test
mov
jae
fidivs
jnp
add
lock
mov
in
clc
lcall
push
push
push
push
push
push
push
lea
push
call
mov
in
imul
add
mov
xchg
in
cmpsb
mov
rcl
push
mov
shrl
ret
jp
bound
add
push
lock
mov
sub
pop
pop
push
sub
sub
pop
pop
push
add
pop
leave
ret
push
rol
pop
push
mov
push
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
add
movsl
add
clc
add
add
out
js
add
jnp
add
cltd
aad
mov
pop
fldl
add
jl
add
add
add
add
fstpl
roll
icebp
cwtl
pushf
sub
pop
push
push
lea
push
push
call
add
add
add
jnp
fiadds
aad
rolb
loop
add
mov
scas
add
addb
jmp
lds
push
push
call
add
lock
nop
imul
add
mov
add
add
add
pop
mov
mov
mov
add
add
pop
add
les
pop
addl
mov
sti
add
push
fwait
add
rcl
in
clc
lcall
push
push
push
push
push
push
push
lea
push
push
call
filds
fldcw
popf
xchg
mov
add
pop
jp
add
add
add
hlt
pop
pusha
push
mov
in
add
push
push
push
stc
xlat
rolb
lcall
movl
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
pop
add
data16
add
add
add
clc
in
push
aad
add
fcmove
add
mov
nop
clc
add
jge
mov
pop
mov
add
je
add
add
mov
jecxz
sub
pop
addl
push
add
pop
test
je
push
dec
shr
pop
mov
push
lea
push
call
pop
jecxz
pusha
add
aam
mov
mov
push
add
add
stos
pop
add
add
mov
xchg
clc
out
push
add
jp
ficomps
add
xchg
add
stos
add
pusha
in
int
addl
add
mov
rcl
add
add
add
push
sti
je
cmpsl
jmp
lds
loop
in
clc
pop
pop
push
lea
push
push
push
call
shrl
jl
mov
mov
repnz
add
fldl
add
add
lock
add
jns
roll
insb
add
add
add
pushf
loop
pop
add
vrsqrtss
lods
mov
add
jb
add
out
lds
add
push
lea
push
push
push
push
push
push
push
call
lods
repnz
xchg
addr16
mov
lahf
test
add
add
ja
add
push
shll
hlt
add
add
add
lretw
int3
push
negb
addl
add
scas
fistpl
sub
pop
pop
pop
push
xor
lea
pop
leave
push
lea
push
push
push
lea
push
push
push
call
jae
lret
mov
nop
mov
bound
gs
add
stc
add
roll
movsl
lock
add
add
imul
addb
xorb
je
arpl
add
add
add
lds
jnp
lods
loopne
mov
add
cld
add
sub
pop
ret
push
push
lea
push
push
push
push
push
call
aam
fidivs
lock
les
les
loop
xchg
pushf
cmpsl
add
xchg
add
jbe
fstps
xchg
mov
arpl
icebp
out
jl
jmp
in
in
push
push
shl
pop
mov
push
push
call
add
add
lahf
add
add
incb
add
add
mov
mov
arpl
ljmp
fldl
add
rcrb
sti
out
loop
in
clc
lcall
cld
push
sub
sub
pop
push
push
add
not
inc
pop
push
push
shl
lea
pop
push
push
inc
pop
push
testl
push
push
push
call
std
add
add
sahf
xchg
mov
shlb
mov
scas
pop
adcl
add
add
in
mov
cmpsb
pop
iret
cwtl
pop
loopne
add
add
add
idivl
add
add
push
addl
hlt
pop
addl
push
push
push
call
neg
add
mov
add
call
movsb
add
push
add
movsl
test
fcmovbe
push
add
add
add
add
pop
call
push
add
shr
ror
pop
mov
pushl
push
push
push
push
lea
push
push
push
lea
push
call
or
pop
add
xchg
add
sbbl
scas
mov
rcr
jo
jmp
sar
add
loope
add
in
loopne
lcall
ljmp
push
push
push
lea
push
lea
push
call
fwait
je
jbe
pop
mov
jp
arpl
add
add
add
pop
mov
add
add
pusha
add
mov
add
pop
movsb
push
cli
add
mov
pop
imul
in
in
lcall
repz
incl
test
call
xlat
sub
pop
pop
pop
push
lea
push
lea
push
call
aam
std
std
add
add
mov
add
aam
shrl
add
mov
cmc
lcall
ljmp
add
add
hlt
mov
rclb
imul
add
add
push
shll
jb
in
hlt
lcall
pop
push
lea
push
lea
push
call
add
rol
add
popa
add
cld
out
pop
add
pop
fwait
mov
fldcw
lahf
fiadds
fsubr
add
add
add
add
cli
push
xchg
jecxz
jge
push
xchg
mov
pop
leave
push
pop
ret
push
push
push
push
call
push
lahf
add
cmpsb
xchg
add
add
add
jl
lcall
jnp
mov
xchg
add
mov
xchg
call
add
mov
add
aad
add
mov
fabs
add
add
add
loop
push
fs
ret
hlt
pop
mov
add
push
push
push
call
fldenv
add
scas
sub
aam
mov
fimull
int3
add
add
fwait
rclb
ror
rcrb
add
int3
test
jle
add
nop
xchg
pop
add
add
push
add
add
cmp
enter
fwait
pop
sahf
testl
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
rorl
fwait
add
loope
add
arpl
add
stos
add
je
xchg
add
cwtl
add
add
mov
loop
add
arpl
imul
add
add
pop
add
rcl
add
push
pop
fnstcw
in
fcomps
push
push
lea
push
push
push
push
push
push
push
push
call
xchg
scas
cmpsb
add
mov
add
loope
enter
mov
ja
cltd
repnz
jl
add
stc
add
in
lahf
xchg
testl
mov
sub
pop
push
push
rol
pop
movl
push
push
ror
pop
call
push
inc
pop
push
push
pop
call
push
push
call
loopne
add
pop
add
fdiv
les
jl
addb
add
jae
add
jo
std
add
add
xchg
mov
add
or
imul
jl
add
cwtl
stos
mov
pop
mov
insl
cld
add
fnstenv
fnstenv
fcmovb
jmp
pop
cmpl
jne
push
lea
push
call
movsb
add
add
outsl
js
add
jge
add
mov
lahf
enter
outsl
add
add
add
add
fwait
push
mov
loopne
jecxz
mov
add
cltd
push
push
ljmp
clc
lcall
push
rol
xor
add
sub
pop
pop
pop
push
push
push
call
xchg
pop
add
loopne
sarl
shl
subb
ljmp
repnz
pop
mov
fmul
mov
add
int
add
hlt
lcall
push
ror
shl
inc
pop
leave
push
push
call
out
data16
xchg
pop
lea
mov
lea
add
testl
orl
add
loopne
add
add
add
push
add
in
enter
add
lock
mov
in
clc
pop
ret
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
out
in
add
mov
jns
push
jge
in
scas
add
fwait
mov
ja
sub
fs
add
cltd
add
cli
js
jmp
mov
add
add
popf
add
xchg
in
mov
push
data16
int
add
fiadds
in
fcomps
in
push
sub
xor
add
dec
pop
add
push
push
not
not
pop
push
push
push
push
lea
push
push
call
pop
lret
add
lea
stos
push
add
gs
pop
jo
push
rolb
popf
shlb
enter
mov
aad
jne
fiadds
ret
mov
add
add
fldl
add
pop
js
add
mov
lcall
push
not
ror
pop
push
mov
push
push
push
push
push
push
lea
push
push
push
lea
push
call
ljmp
jle
call
out
loop
outsl
add
add
push
add
lea
fs
push
in
aad
add
add
xchg
in
data16
add
call
add
jae
jecxz
sub
pop
lea
push
add
pop
sub
push
push
push
push
push
lea
push
push
call
pop
add
lahf
cli
stc
leave
mov
hlt
fiaddl
add
push
into
add
mov
add
loop
xorb
add
mov
add
jge
add
add
add
add
pop
mov
push
lea
push
lea
push
push
push
push
call
add
pop
add
mov
test
fcoml
cld
jecxz
mov
add
fildl
ficomps
jle
jb
fdivl
add
mov
jae
add
mov
add
in
call
shr
push
push
lea
push
push
push
lea
push
call
add
aad
add
cld
push
push
push
add
add
mov
pop
add
add
mov
scas
add
int
add
andb
sahf
add
sub
pop
add
mov
push
push
push
push
push
push
push
call
popf
add
add
pop
push
add
mov
in
int
jb
test
add
add
fiadds
mov
add
pushf
add
stc
push
js
in
in
lcall
andb
scas
call
jecxz
push
in
xchg
mov
pop
add
push
jl
pop
add
scas
add
fidivrl
add
ret
add
ljmp
mov
xlat
mov
out
fwait
outsl
add
les
cmpsl
loopne
xchg
push
fsubl
fnstcw
fiadds
add
scas
mov
add
out
add
add
add
lcall
inc
or
shlb
shl
xor
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
lahf
add
out
add
mov
clc
rol
add
loopne
push
add
xchg
add
add
xchg
jbe
add
add
in
add
pushf
lock
icebp
push
nop
add
mov
mov
test
add
push
add
add
addl
add
incb
sub
pop
mov
push
sub
pop
cmp
jne
cmp
jne
push
push
push
call
in
jp
push
insb
outsl
mov
push
mov
add
pusha
lods
add
lock
mov
add
add
jle
leave
add
loop
cwtl
add
ret
add
mov
cmpl
in
add
add
add
inc
adc
add
add
add
out
cmp
mov
add
rol
shr
pop
mov
push
rol
ror
pop
mov
sub
jne
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
loop
jae
add
push
ret
movsl
push
add
add
lcall
add
in
add
in
jno
popf
lret
xchg
xchg
add
fucom
add
add
add
add
add
lcall
inc
adc
add
push
fstl
push
rorl
lea
push
push
push
push
call
test
mov
out
xchg
pop
add
ret
into
add
cwtl
mov
add
add
add
add
add
add
add
xchg
add
add
add
add
jmp
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
icebp
lock
jp
mov
stc
add
nop
popaw
xchg
add
ficoms
add
add
arpl
loope
add
add
add
add
in
xchg
add
mov
add
add
cwtl
mov
add
lcall
inc
cld
mov
push
lea
push
lea
push
push
push
lea
push
call
push
xchg
pusha
add
in
filds
xchg
add
xchg
add
scas
add
rolb
flds
add
clc
in
add
push
add
stos
js
in
call
cmp
jne
mov
push
push
lea
push
call
mov
iret
add
add
divb
pop
cltd
add
lds
add
rol
loopne
in
add
add
data16
loop
mov
lcall
add
add
add
orb
push
inc
pop
mov
push
xor
xor
sub
shr
pop
cmpw
jne
mov
push
push
lea
push
push
push
push
push
push
call
push
mov
loope
repnz
add
mov
addb
mov
fiaddl
test
sahf
add
add
mov
mov
add
xchg
sub
pop
movl
push
lea
push
lea
push
lea
push
push
call
add
push
incb
add
push
imul
lds
add
lea
popf
jno
mov
lods
push
push
lahf
mov
call
pop
add
add
add
rcrl
add
add
add
add
mov
mov
ja
insb
add
sub
pop
jmp
pushl
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
push
add
iret
add
fs
add
xlat
add
push
shrl
add
stos
movb
mov
fcmovb
mov
add
mov
add
jno
faddl
push
test
mov
aad
pop
ljmp
in
fcomps
push
xor
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
pushf
div
add
push
jb
call
mov
add
gs
push
add
fnsave
add
cmpsl
rorb
add
add
cld
add
add
std
add
fdivr
lcall
inc
sbb
push
lea
push
lea
push
call
pusha
sahf
rolb
push
call
fldl
add
add
push
add
stos
add
out
add
add
popa
jne
mov
add
add
add
add
test
iret
lahf
stc
jb
fnsave
add
leave
add
add
fbstp
in
lock
mov
push
push
sub
not
add
push
or
inc
add
inc
shr
sub
add
add
ror
pop
ror
pop
push
add
xor
pop
push
push
push
push
push
call
fstps
add
add
add
add
add
popl
movsl
imul
jp
aam
stos
add
scas
iret
add
add
rcl
icebp
xchg
jno
mov
out
add
in
out
add
add
cli
xor
add
cmpl
je
push
push
push
xor
add
xor
inc
sub
shr
ror
pop
sub
pop
push
push
lea
push
lea
push
lea
push
call
repnz
popa
jle
add
sahf
out
loop
movsb
push
loop
pop
mov
add
add
add
add
xlat
mov
ja
xchg
test
add
repnz
add
mov
add
in
lcall
call
push
rol
pop
cmpl
je
push
push
sub
push
sub
add
sub
dec
xor
sub
shr
xor
inc
pop
add
lea
pop
push
lea
push
call
js
les
xchg
add
pop
loop
imul
fnstenv
mov
shr
jmp
add
add
xchg
cltd
fadds
add
mov
add
add
push
add
xchg
cmpsb
pop
jnp
movb
divb
lea
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
cmpsb
add
add
add
add
add
stos
mov
in
mov
add
add
add
in
mov
add
add
lcall
push
add
add
arpl
push
add
cmc
int3
cmpsl
xchg
mov
sub
pop
call
push
dec
shr
pop
cmpl
je
push
push
add
push
and
add
sub
sub
xor
shl
pop
inc
dec
pop
push
lea
push
lea
push
push
push
push
call
mov
push
jbe
push
add
movsl
cld
add
add
popf
popa
push
pop
mov
je
mov
filds
add
popf
add
loopne
add
add
mov
les
cltd
push
sub
pop
push
call
push
push
push
push
lea
push
call
xchg
lahf
add
add
add
popf
xchg
js
pop
add
gs
add
add
xchg
pop
jge
stos
add
test
add
subl
pop
cmpl
je
push
push
dec
push
or
not
add
sub
add
sub
rol
shl
pop
pop
push
push
push
push
push
push
push
push
call
outsl
add
outsl
add
arpl
stos
in
xchg
add
fst
roll
lret
mov
andb
pop
add
add
jno
int
shll
mov
add
rcr
add
pop
add
add
add
addr16
xchg
add
add
sbb
add
add
lcall
push
lea
pop
call
cmpl
je
push
push
rol
sub
push
or
inc
add
not
sub
sub
lea
rol
pop
not
ror
inc
pop
push
push
push
lea
push
call
add
scas
add
call
cwtl
movsl
add
push
add
into
add
push
divb
add
popf
cmpsl
jle
push
add
jne
add
add
fiadds
add
add
add
in
ljmp
add
mov
in
push
pop
cld
add
mov
stc
add
scas
je
push
add
xchg
push
push
push
push
push
push
push
push
push
push
call
lds
add
add
add
add
add
jge
add
mov
add
add
pop
add
add
add
fucomi
mov
add
add
jecxz
clc
lods
pop
xchg
mov
test
js
jmp
lcall
jbe
add
push
push
push
push
lea
push
push
call
pop
add
add
out
jle
je
rolb
xor
pop
jmp
add
jo
movl
add
pop
fadds
in
add
sub
pop
cmpl
je
push
push
shl
push
or
inc
add
dec
add
sub
sub
ror
lea
sub
pop
not
pop
push
sub
inc
pop
push
push
shl
ror
shl
pop
call
cmpl
je
push
push
shr
rol
shl
push
sub
add
add
xor
ror
sub
pop
ror
add
pop
push
sub
inc
sub
pop
push
call
push
push
call
popa
pop
shlb
add
mov
add
imul
add
ficompl
jecxz
add
mov
shr
add
scas
testl
add
add
fnstsw
jno
imul
add
add
push
xchg
add
add
shlb
add
add
les
lcall
js
int3
fldz
ret
xchg
add
add
cmpl
not
ror
push
push
pop
add
add
ror
sub
not
xor
not
ror
pop
add
inc
inc
dec
pop
push
not
sub
xor
pop
push
push
push
push
lea
push
call
add
jmp
popa
add
add
clc
sti
notb
clc
clc
add
pop
pop
mov
xchg
mov
add
add
lock
ljmp
add
lcall
mov
add
push
shr
rol
add
pop
cmpl
je
push
push
not
xor
lea
add
push
and
add
sub
sub
sub
pop
sub
pop
push
pop
push
call
push
rol
pop
cmpl
je
push
push
dec
add
rol
push
or
inc
add
inc
not
sub
lea
sub
pop
add
shl
pop
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
push
add
xchg
add
add
pop
addr16
scas
add
cmc
add
in
add
lea
lret
in
add
mov
push
outsl
add
add
push
jne
divl
cmp
add
in
pop
roll
call
push
push
push
call
add
add
and
cmpsb
int
xchg
add
mov
jo
hlt
mov
add
out
push
push
add
movsl
lods
add
loop
xchg
cli
add
addb
add
add
ljmp
add
shlb
pop
cmpl
je
push
push
sub
dec
shl
push
or
not
add
lea
lea
sub
add
dec
add
pop
lea
inc
shr
pop
push
push
push
push
push
lea
push
push
push
push
call
add
scas
lock
add
int
cmpsl
add
mov
add
add
add
rolb
outsl
push
lret
add
cmpsl
add
add
add
add
pop
push
call
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
jns
add
xchg
jmp
jge
lret
add
into
addl
aad
add
testl
mov
add
xchg
repnz
add
lea
stos
imul
std
add
ljmp
lcall
js
jmp
les
je
push
push
lea
sub
push
xor
add
add
sub
shl
not
pop
dec
pop
push
not
not
xor
pop
push
call
push
add
pop
cmpl
jne
push
lea
lea
add
pop
mov
push
xor
pop
movl
jmp
push
xor
add
sub
pop
xor
pop
push
push
push
push
push
lea
push
push
push
push
call
lods
xlat
mov
lret
push
clc
xorb
faddl
je
push
add
add
add
jno
pop
pop
push
lret
mov
js
stos
add
sti
add
add
push
add
jl
cmpsl
mov
imul
int3
push
imul
add
stos
add
repnz
lcall
pop
push
add
pop
pop
push
shr
shr
pop
leave
ret
push
push
lea
push
push
lea
push
lea
push
call
add
push
add
mov
add
add
push
stc
pop
add
add
add
out
add
add
add
fcmovbe
sar
cld
add
std
js
lret
add
incb
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
cltd
add
subl
push
sahf
add
pop
mov
mov
iret
jb
lret
add
add
pop
add
add
js
mov
add
add
imul
mov
fcomps
in
add
push
shr
inc
pop
cmpl
jne
push
push
shr
sub
shl
push
or
not
add
add
sub
shr
pop
shr
add
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
iret
test
add
scas
pop
add
add
mov
pusha
add
add
pop
add
test
add
sub
pop
pushl
push
ror
ror
dec
not
pop
call
push
not
pop
push
push
add
pop
call
push
push
push
call
test
out
add
add
pop
add
fisubs
add
add
jbe
add
fs
add
add
jmp
fiadds
xchg
push
fisubrl
pusha
imul
push
add
jl
cwtl
add
add
add
lea
in
hlt
lcall
mov
push
push
push
push
call
rclb
add
movl
loope
add
jmp
scas
add
stos
xorb
fcomi
ror
scas
push
add
push
cltd
pusha
addl
test
mov
test
pop
cmpl
jne
push
dec
sub
pop
mov
push
push
push
call
fs
add
jmp
scas
add
add
add
std
loope
push
xchg
add
sbbl
add
addl
lcall
movsl
push
add
ret
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lock
into
mov
fiadds
data16
add
pop
add
lds
add
add
add
ffree
sarl
push
aam
aad
mov
mov
shlb
lea
arpl
add
add
lock
push
add
icebp
add
movsl
add
add
add
movb
movsl
xchg
lret
incb
adcl
add
cld
pop
cmpl
jne
push
push
sub
sub
push
xor
add
ror
sub
sub
add
lea
shr
pop
rol
shl
lea
pop
push
dec
sub
sub
pop
pushl
push
sub
pop
call
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
mov
cmpsl
lea
add
imul
sarl
int3
push
mov
sub
pop
push
push
lea
push
push
push
push
push
push
push
call
pusha
cmc
rolb
add
add
jae
fs
mov
call
add
leave
pop
add
add
icebp
adc
lods
fsubp
in
push
lcall
rclb
lret
lret
jle
add
push
push
push
lea
push
lea
push
call
xchg
pop
incb
add
add
addb
xchg
add
add
add
call
shll
nop
jecxz
rolb
pop
add
pop
add
lods
int
mov
in
in
pop
cmpl
je
push
push
lea
push
lea
push
lea
push
push
lea
push
call
insb
add
add
cwtl
add
add
icebp
leave
add
add
add
clc
jnp
cld
pop
arpl
add
add
add
int3
add
movsl
fisubrs
in
jmp
add
add
mov
pusha
in
out
add
cld
add
cmpl
jne
mov
push
inc
not
sub
pop
mov
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
imul
into
xchg
pop
hlt
add
add
rcl
cmc
add
mov
push
pop
mov
scas
test
out
jge
jp
jbe
add
icebp
mov
add
jnp
add
stos
add
cltd
pop
popf
sub
pop
push
push
push
push
push
call
scas
mov
fs
push
push
sti
rcr
xchg
add
add
add
lahf
add
jmp
out
add
roll
push
aad
add
lahf
add
add
test
jecxz
mov
pop
call
out
pop
call
push
push
push
or
inc
add
ror
rol
rol
sub
inc
dec
inc
pop
pop
push
push
push
push
push
call
xlat
mov
add
add
mov
test
stos
movsl
jno
add
movsb
add
test
add
pop
roll
add
push
scas
stos
add
push
mov
test
out
add
sbb
xchg
shl
push
mov
add
jne
scas
add
add
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
popa
les
add
add
add
xchg
lret
add
cwtl
xchg
lods
mov
in
lahf
roll
std
ret
fdivrs
add
add
jp
imul
add
xchg
mov
fstpl
mov
cmpsb
add
add
mov
xchg
cli
out
jno
add
add
out
add
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
movsl
mov
add
test
add
test
jb
xlat
add
add
xchg
loope
add
roll
outsl
cmpl
add
add
mov
add
sarb
add
add
jo
mov
popf
add
mov
fdivs
fcompl
shrb
mov
jmp
push
or
inc
add
add
lea
sub
rol
ror
pop
sub
add
xor
pop
push
xor
pop
pushl
push
sub
lea
shr
pop
call
call
push
push
shl
inc
push
or
not
add
add
rol
sub
shl
lea
pop
add
sub
dec
rol
pop
push
push
push
lea
push
push
call
jl
add
add
loope
fisubrs
add
xchg
mov
push
xchg
cmpl
jle
mov
test
mov
cltd
add
cld
stos
add
add
cmpsl
add
out
push
loop
xchg
sub
pop
pushl
push
rol
pop
call
push
push
call
jle
add
bound
xchg
fwait
in
add
aam
push
mov
add
fidivrl
pop
push
jmp
iret
sti
mov
mov
popf
push
fcoml
xorl
add
add
lcall
shrb
add
dec
push
sub
add
sub
push
push
pop
add
lea
sub
inc
not
add
pop
add
add
pop
push
lea
push
push
lea
push
push
push
push
push
push
call
scas
add
push
add
jle
add
add
hlt
lcall
mov
fs
jle
add
fidivrs
add
add
jne
add
lods
push
hlt
push
add
push
add
not
jno
std
stos
add
fst
add
fiadds
push
xchg
add
mov
jge
pop
lods
add
add
fs
add
lds
jne
push
pop
call
push
push
push
push
push
lea
push
lea
push
lea
push
call
pop
jmp
lahf
add
add
call
ffree
pop
add
clc
add
push
in
lcall
incb
out
add
mov
lock
add
push
add
mov
mov
jo
imul
lret
loopne
call
push
push
inc
push
and
add
add
xor
sub
add
sub
shr
pop
dec
pop
push
push
call
fldl
pop
scas
stos
scas
popl
rcl
jo
cmc
push
mov
mov
shl
lcall
lret
add
add
lock
lret
cmc
fcomps
clc
xchg
mov
sahf
add
add
jo
fsubs
ret
mov
add
les
jo
add
clc
pop
add
out
add
lcall
jne
call
push
add
shl
pop
call
push
push
add
inc
push
sub
add
inc
lea
add
sub
sub
pop
shr
pop
push
push
lea
push
push
push
push
push
push
push
call
push
add
pop
jne
mov
add
xchg
xchg
scas
mov
add
js
test
add
mov
pop
pop
loop
lret
mov
xchg
add
shlb
add
push
push
cld
scas
add
sub
pop
pushl
push
push
push
lea
push
push
push
lea
push
push
call
add
add
xchg
add
xorl
shl
out
add
add
add
ljmp
out
addr16
testb
sbbl
add
scas
mov
cmpsl
sub
pop
call
call
push
push
shr
add
add
rol
push
xor
add
rol
sub
sub
inc
shr
ror
pop
sub
ror
dec
pop
push
push
push
lea
push
push
push
push
call
loope
ret
loop
add
mov
push
add
lcall
add
insb
in
cwtl
mov
add
add
add
push
xchg
mov
mov
lret
push
add
repnz
add
fst
add
add
add
add
cltd
fdivr
push
add
lcall
jne
push
push
push
lea
push
push
push
push
call
call
out
add
scas
mov
mov
add
push
add
mov
add
pop
filds
add
add
fildl
xchg
add
ficoms
add
fildl
add
xchg
add
in
in
in
lcall
sbb
add
std
not
pop
call
push
push
add
sub
dec
push
and
add
sub
xor
sub
add
pop
rol
shl
shr
pop
push
push
push
push
lea
push
push
push
push
call
loope
mov
nop
pop
add
mov
xchg
add
enter
add
add
in
add
in
add
add
add
push
mov
pop
pushl
push
push
call
push
scas
scas
push
cmc
jecxz
add
mov
add
repnz
fwait
test
jo
sti
nop
fadds
add
fmuls
js
jmp
add
add
sub
pop
call
push
push
lea
push
push
call
lea
addb
outsl
rolb
neg
add
int
shrl
add
xchg
add
push
xchg
test
add
add
mov
add
in
add
in
lock
call
push
push
shr
push
sub
add
xor
shr
not
sub
add
inc
add
pop
xor
inc
dec
pop
push
push
push
lea
push
lea
push
push
call
add
add
jb
insb
add
add
lcall
add
add
add
in
popa
rcrl
leave
hlt
mov
popl
jmp
test
add
add
roll
pop
add
stos
add
add
clc
add
jp
mov
stc
add
mov
int
mov
add
jne
call
push
push
call
je
movsl
add
cltd
add
lock
pop
arpl
mov
add
loope
hlt
xchg
iret
cli
mov
add
add
negb
int
sub
pop
call
push
push
add
push
or
not
add
sub
sub
shl
shl
dec
pop
lea
inc
pop
push
xor
pop
pushl
call
push
not
sub
shr
pop
lea
push
push
shl
shl
pop
call
push
push
add
push
push
pop
add
sub
sub
add
sub
inc
add
pop
inc
add
inc
pop
push
lea
push
push
push
push
push
push
call
add
add
test
mov
mov
add
imul
aam
jmp
test
add
add
hlt
mov
int
add
call
lcall
add
lcall
jne
push
push
lea
push
push
push
call
add
xchg
in
add
mov
out
pop
jmp
bnd
cmpsb
add
in
imul
sti
shrb
mov
add
mov
add
in
in
lcall
call
shrb
mov
out
outsb
lea
lea
push
sub
add
add
sub
not
pop
shl
pop
push
push
push
lea
push
lea
push
push
push
call
rcl
ja
add
jno
mov
shlb
push
lcall
add
add
add
sub
pop
pushl
push
shr
lea
inc
pop
call
push
push
lea
push
lea
push
call
xchg
stos
add
mov
add
addb
add
add
add
jecxz
enter
add
sti
mov
add
xchg
mov
arpl
pusha
mov
add
sub
pop
call
push
push
shr
push
or
inc
add
xor
sub
sub
ror
pop
shr
pop
push
push
push
call
imul
stos
int3
mov
jmp
add
jle
add
hlt
int
mov
lock
add
sub
pop
pushl
push
lea
push
push
push
push
call
add
add
mov
jno
fcmove
pop
mov
loope
add
out
test
add
rolb
lods
sub
pop
call
call
push
push
inc
push
or
not
add
add
dec
not
add
sub
add
ror
lea
shl
pop
sub
sub
rol
pop
push
xor
not
pop
pushl
push
push
call
add
scas
mov
pop
mov
add
lahf
xchg
mov
fptan
mov
add
add
jns
add
fisubrs
add
test
lcall
lret
adc
push
or
push
rol
sub
sub
push
xor
add
shr
sub
shr
pop
lea
add
add
add
pop
push
push
xor
push
xor
add
inc
sub
lea
sub
shr
pop
sub
pop
push
shr
shl
pop
call
pop
push
push
push
lea
push
push
push
push
push
call
add
pop
add
add
iret
add
add
sahf
xor
add
std
ljmp
out
add
add
mov
add
pop
lcall
pop
insb
xchg
scas
jae
pop
mov
popf
push
call
mov
lods
add
mov
lcall
jne
call
push
inc
inc
pop
mov
int
push
lea
add
sub
not
pop
lea
push
push
push
or
inc
add
ror
sub
add
pop
add
sub
pop
push
push
lea
push
push
lea
push
call
xchg
add
pop
add
add
add
add
stc
add
lret
fsubrp
addr16
push
add
add
xchg
add
add
imul
add
addb
jl
movsb
jmp
test
lcall
add
push
xchg
add
jne
call
push
push
push
lea
push
push
call
out
add
enter
add
loopne
add
add
add
jo
fsubp
add
add
jbe
add
mov
in
add
xchg
mov
lahf
mov
push
loope
addb
add
mov
sbbl
jl
cmc
mov
lcall
push
add
pop
call
push
push
xor
lea
push
or
not
add
lea
shr
add
sub
sub
pop
lea
pop
push
add
add
rol
pop
pushl
push
push
call
jae
pusha
jbe
mov
push
add
add
add
add
mov
addb
jmp
iret
pop
add
rolb
mov
add
add
flds
lret
ljmp
mov
add
jo
add
sub
pop
call
call
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
jns
mov
mov
mov
aad
add
xchg
jmp
sarb
lret
add
mov
add
add
add
add
test
add
jns
add
fcomip
add
pusha
add
pop
mov
push
push
push
call
push
jnp
sahf
rcr
imul
test
testl
icebp
xchg
mov
add
scas
addb
push
add
add
add
add
add
add
add
push
fildl
add
test
cli
add
lods
add
jnp
testl
sub
pop
lea
push
push
dec
shl
push
sub
add
sub
ror
add
sub
rol
sub
dec
pop
dec
not
pop
push
rol
rol
xor
pop
pushl
call
push
shl
pop
lea
push
push
pop
push
push
lea
pop
push
push
pop
pushl
push
push
push
push
pop
add
add
shr
sub
sub
pop
xor
not
pop
push
not
dec
pop
push
push
lea
push
push
push
call
stos
shlb
add
add
add
test
int
test
rorb
cmpsb
add
add
push
add
add
add
movsb
fldl
xchg
bound
add
sar
add
add
xchg
shrb
movsb
out
push
sub
xor
push
push
pop
add
add
sub
shl
lea
ror
pop
not
not
pop
push
rol
sub
pop
pushl
push
not
xor
pop
call
push
push
sub
add
not
pop
call
push
push
dec
ror
inc
not
push
and
add
shr
add
shl
sub
not
pop
add
shr
pop
push
lea
add
shr
sub
pop
pushl
call
push
not
add
shl
shr
pop
call
pushl
push
push
push
push
push
push
push
push
push
lea
push
call
mov
add
cli
add
mov
add
mov
add
outsl
rolb
mov
mov
mov
pop
mov
push
pop
jmp
push
push
add
not
rol
push
and
add
sub
sub
not
pop
ror
pop
push
inc
shl
shl
pop
pushl
push
add
add
pop
call
push
push
push
call
testl
mov
je
add
jmp
jne
pop
test
add
mov
add
add
mov
clc
lcall
shrb
enterw
loopne
push
or
inc
add
ror
shl
add
add
sub
lea
not
pop
inc
shl
pop
push
ror
shr
inc
shl
pop
pushl
push
push
push
push
push
lea
push
push
call
addb
movsl
insb
cli
test
add
add
add
add
imul
pop
cmpl
ret
add
mov
in
in
call
push
shr
pop
push
call
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
arpl
cld
jb
mov
imul
add
jecxz
out
add
mov
add
lea
lds
mov
add
jecxz
shrb
add
add
mov
pop
xchg
data16
in
jae
xchg
sub
pop
leave
add
push
xor
dec
pop
pop
pop
push
push
push
lea
push
push
call
add
jno
aam
jnp
cli
cltd
andb
add
jbe
add
add
add
ljmp
sub
pop
pop
xor
push
not
pop
inc
ret
push
lea
pop
leave
push
push
push
call
mov
ljmp
push
xchg
mov
mov
add
rolb
fadds
push
pop
jnp
popl
push
add
jns
add
fldl
mov
stc
mov
add
xchg
add
out
ret
add
add
or
push
sub
dec
pop
push
push
pop
mov
cmpl
jne
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
out
jbe
xchg
lds
jmp
add
int3
lds
pusha
xchg
add
add
add
add
add
inc
and
push
lea
rol
pop
jmp
mov
push
push
push
push
push
lea
push
push
push
call
mov
add
add
push
add
add
add
mov
aad
add
cld
lods
add
mov
add
add
fwait
add
sub
pop
and
xor
push
push
push
push
push
push
call
add
test
xchg
add
add
mov
xchg
add
add
pop
jbe
add
pop
add
push
add
mov
out
add
add
cmc
add
movb
add
add
add
mov
add
repnz
add
xchg
sub
pop
xor
push
push
push
push
lea
push
push
call
lods
xlat
add
leave
add
push
add
int
jo
cmpsb
add
in
add
add
jecxz
add
add
outsl
add
mov
mov
lcall
mov
jmp
add
call
add
push
add
lea
not
pop
xor
push
lea
push
call
add
xchg
mov
add
mov
mov
jge
faddl
hlt
test
addb
add
xchg
addb
add
mov
fidivl
int3
lds
lcall
add
mov
mov
lcall
sub
push
sub
inc
shr
pop
jmp
sub
push
push
push
push
call
add
movsb
mov
idiv
fcomps
add
mov
mov
std
roll
cltd
fildl
lcall
xor
leave
pop
pop
sub
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
ja
lods
aam
filds
fwait
xchg
shrl
add
lret
mov
pop
pop
jmp
imul
ja
add
mov
flds
fwait
pusha
add
data16
add
add
pop
add
mov
loop
add
add
out
fldt
iret
xchg
sub
pop
cmp
jne
push
pop
mov
push
shr
pop
lea
sub
push
shr
pop
mov
push
shr
lea
sub
pop
shr
add
push
push
lea
push
push
push
lea
push
lea
push
push
call
fiaddl
add
add
aad
imul
xchg
add
mov
jb
push
add
leave
fldl
add
add
cmpsl
mov
fistl
nop
push
fwait
sub
pop
sub
push
push
push
call
in
mov
mov
mov
add
lods
add
iret
pusha
add
add
movb
add
mov
fldenv
pop
add
add
jns
add
in
mov
add
sti
rolb
mov
bnd
pop
leave
add
stos
sub
pop
pushl
pop
push
shr
add
pop
shr
push
sub
pop
and
sub
push
lea
pop
cmp
jne
push
lea
push
push
push
push
call
pop
add
add
pop
notb
add
cmpsb
add
cli
fiadds
jecxz
xor
pop
lahf
add
lcall
mov
pushf
add
add
add
lret
add
push
lea
pop
ret
push
lea
push
call
add
data16
xchg
add
rolb
popf
mov
fs
add
add
add
add
xchg
add
cwtl
pop
add
add
pop
ja
add
add
shll
aam
xchg
add
mov
xchg
cld
add
jge
jle
clc
in
icebp
roll
add
fnsave
mov
mov
clc
lcall
mov
push
shr
add
pop
add
push
push
pop
push
push
push
push
push
push
push
push
push
call
out
lock
iret
std
fadds
xchg
fsubrl
xchg
sti
data16
add
stos
data16
add
in
imul
in
push
push
shl
ror
shr
pop
push
push
pop
mov
push
push
push
call
pop
add
jne
mov
test
stos
sahf
add
cli
repnz
add
add
mov
add
movsb
add
lret
idivl
in
hlt
pop
lea
push
inc
xor
shl
ror
pop
sub
push
inc
add
pop
mov
push
push
push
push
push
push
call
fcmovne
mov
mov
imul
mov
jmp
test
mov
int
add
add
add
mov
outsl
jge
add
push
mov
iret
add
xchg
jmp
idivb
call
shr
add
push
push
push
push
lea
push
push
push
call
lods
add
add
movsl
cmpsl
add
pop
add
test
pop
cli
add
add
not
pop
faddl
xlat
iret
add
add
add
bnd
arpl
add
hlt
jp
cmpsb
pusha
lcall
add
pop
int3
sub
pop
mov
push
shr
inc
shl
pop
add
push
lea
push
push
lea
push
push
push
lea
push
call
mov
add
pop
pop
mov
add
add
insb
stos
add
shll
in
push
add
add
lahf
mov
add
out
lcall
add
push
add
in
add
scas
add
push
add
addl
pop
mov
push
lea
push
lea
push
lea
push
call
mov
fidivrl
subl
xchg
add
push
faddl
out
cmpsl
add
jp
popa
aam
movsl
add
add
add
add
cli
arpl
add
into
push
add
addl
mov
pushf
outsl
add
add
add
add
add
js
jle
roll
jge
xor
push
push
push
lea
push
push
push
call
outsl
jne
je
add
add
xlat
jo
add
out
add
mov
lret
mov
mov
add
lcall
add
jne
shlb
xchg
add
add
addr16
add
rolb
jbe
arpl
add
mov
scas
cmc
add
loop
sub
pop
mov
push
inc
not
inc
pop
and
push
push
push
push
push
lea
push
lea
push
push
call
mov
lcall
add
mov
add
loopne
aam
add
mov
add
in
loopne
lcall
rolb
cmp
pop
lea
push
push
call
push
cmpsl
add
add
push
aad
add
add
add
push
jmp
fisubrl
pop
jecxz
je
jb
add
stc
pop
test
jge
lret
rol
std
pop
add
push
jae
cmpsl
mov
in
in
lcall
rolb
push
push
lea
push
lea
push
push
push
lea
push
call
jne
mov
insb
cmpsb
add
jbe
add
call
jae
add
in
add
lock
mov
cli
jno
mov
add
cmpsb
xchg
faddl
add
xchg
repnz
imul
stc
pop
movb
out
push
ja
out
add
add
lcall
add
pushf
and
out
inc
pop
inc
cmpb
jne
push
shl
pop
add
push
rol
sub
shl
shr
pop
cmp
je
push
lea
push
push
push
push
lea
push
push
call
add
ja
add
test
push
push
add
fildl
add
out
loope
xchg
add
stos
xchg
add
iret
add
pop
mull
gs
xlat
mov
negb
add
add
cwtl
cli
incb
add
clc
add
add
add
in
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
push
add
cmpsl
jo
lret
imul
mov
cmc
jbe
add
push
jne
cmc
fwait
cmc
add
jmp
cwtl
add
add
movb
add
add
stos
popf
clc
add
lcall
jnp
add
test
push
lea
push
lea
push
push
call
arpl
imul
add
add
add
imul
lea
je
ljmp
push
cli
xchg
test
fiadds
out
add
sar
add
add
addb
sub
pop
xor
push
rol
ror
pop
pop
push
dec
pop
pop
pop
push
not
shr
pop
pop
push
xor
shl
pop
pop
push
shl
pop
leave
ret
push
add
pop
mov
push
add
not
lea
pop
add
mov
push
push
push
push
push
call
add
mov
add
xchg
into
add
test
adcl
add
popf
add
out
jo
sti
jmp
add
add
add
add
insb
clc
jns
xchg
in
lcall
push
not
shl
sub
pop
mull
push
lea
pop
pop
push
lea
push
push
lea
push
push
call
scas
popa
pop
add
addl
mov
ja
mov
pop
add
mov
add
add
jae
fidivl
leave
addb
add
ljmp
add
fildl
in
popa
fs
fwait
add
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
push
call
shrl
xchg
add
add
add
xchg
imul
pusha
jmp
mov
push
add
cli
fiaddl
lcall
push
push
push
call
mov
add
in
jns
xchg
add
jo
ret
add
add
mov
add
mov
add
mov
roll
add
pusha
add
cwtl
repnz
add
aam
push
fiaddl
add
add
pop
roll
popl
add
sub
pop
call
xor
push
lea
shr
pop
pop
push
lea
push
push
push
call
jp
mov
jnp
bound
add
push
jno
add
lods
add
outsl
cmpl
test
add
int3
jbe
xchg
imul
jbe
add
push
sub
pop
pop
push
sub
shl
pop
pop
pop
push
rol
add
pop
pop
push
lea
push
push
push
lea
push
lea
push
push
call
add
xchg
jns
mov
je
addb
call
jae
add
add
add
sub
pop
leave
push
lea
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
imul
add
add
mov
lods
xchg
sti
fldl
add
shl
push
mov
add
jnp
mov
lock
lcall
or
push
inc
lea
add
pop
push
push
add
pop
mov
push
ror
add
pop
add
push
add
pop
push
push
push
push
lea
push
call
pop
mov
mov
add
add
add
loope
jns
pushf
push
add
add
jmp
out
add
test
xchg
mov
add
fsubrl
jne
jne
bound
add
test
add
lcall
push
pop
push
push
push
call
add
mov
je
out
icebp
mov
ljmp
pop
add
add
lcall
test
fs
lods
mov
add
jmp
add
add
add
push
shr
sub
add
pop
mov
push
push
rol
shr
pop
pop
lea
push
push
call
add
notl
fisttps
add
add
stos
jbe
add
mov
add
xchg
cld
in
add
movl
into
add
push
ret
add
fiadds
xchg
js
add
add
pop
mov
in
clc
lcall
ljmp
pushf
sub
iret
pop
shr
add
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
add
out
les
into
add
pop
push
add
add
cmc
add
call
add
test
add
in
mov
add
lcall
pop
js
fsts
fcomip
shl
roll
cmp
jae
popl
push
push
lea
push
push
push
push
push
push
push
call
add
xchg
add
add
ret
add
add
test
xchg
call
fistpl
xchg
cwtl
mov
mov
add
mov
add
push
add
rorl
fistpll
mov
mov
pop
mov
sub
pop
mov
push
lea
pop
add
push
sub
add
sub
pop
xor
lea
push
push
push
push
push
push
push
call
jl
mov
shrl
mov
pop
mov
jne
add
iret
pop
add
ret
cltd
xchg
add
stc
add
lahf
add
int
fldl
add
ffree
cmpsl
add
add
loope
mov
lret
out
leave
xchg
mov
hlt
mov
lcall
adc
xchg
jo
adc
lea
push
call
popf
add
mov
out
in
add
mov
add
xchg
mov
mov
repnz
add
in
xchg
pop
std
test
xchg
add
sti
mov
les
out
add
gs
add
lcall
shll
rclb
nop
in
dec
pushf
not
pop
rol
nop
push
sub
dec
sub
pop
nop
push
ror
sub
pop
xor
push
xor
add
pop
nop
nop
push
not
sub
rol
pop
inc
nop
push
push
push
push
lea
push
push
push
push
push
call
shlb
add
test
add
pop
popa
add
popf
add
jl
add
mov
add
mov
add
imul
enter
add
lahf
lods
out
add
lcall
xchg
sub
pop
nop
cmpb
jne
push
rol
pop
add
push
lea
push
call
lcall
iret
cwtl
add
mov
add
mov
mov
add
jmp
mov
add
add
jns
pop
add
iret
mov
sub
pop
nop
nop
push
sub
xor
pop
cmp
je
push
sub
pop
nop
nop
push
push
push
lea
push
push
push
push
push
call
aam
clc
mov
add
fnstenv
add
add
push
out
stos
add
jge
mov
sub
pop
inc
push
lea
pop
nop
push
xor
sub
shl
pop
nop
push
add
lea
pop
cmp
jb
xor
push
lea
pop
jmp
push
push
call
add
pop
add
xchg
lcall
add
push
shlb
add
xchg
add
lahf
add
jb
add
add
lock
mov
add
pop
lea
in
xchg
add
mov
fiaddl
push
in
mov
fiaddl
add
roll
push
add
lcall
push
and
rcll
mov
lea
push
push
push
push
lea
push
lea
push
call
mov
movsb
ret
add
popf
fs
jnp
mov
add
mov
xchg
fisubs
faddl
xlat
mov
jmp
add
fstpl
les
fcompl
mov
jb
pop
mov
push
push
push
push
push
push
call
add
stos
testb
add
add
add
mov
pop
mov
add
add
movsb
fstpl
pop
sahf
fiaddl
lret
incb
mov
add
add
add
mov
add
rcll
push
push
push
call
ror
jecxz
fs
lods
js
addr16
testl
lret
xchg
add
mov
push
add
add
nop
jnp
lds
pop
add
ror
push
out
sub
pop
mov
xor
push
lea
add
rol
sub
pop
xor
push
push
lea
push
push
push
push
push
push
push
call
clc
add
mov
rolb
xchg
jns
add
mov
add
mov
add
aad
mov
add
add
out
mov
add
pop
rolb
add
out
add
add
nop
add
icebp
jl
add
imul
jo
add
lcall
loope
push
rol
sub
pop
xor
shl
push
shl
pop
xor
shl
push
pop
xor
push
not
not
not
pop
mov
push
push
push
push
push
push
push
call
mov
add
rcl
add
add
lea
mov
add
add
orb
add
mov
out
add
add
lods
mov
xchg
add
add
imul
add
add
add
add
shl
pop
sub
pop
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
stos
add
add
add
add
out
add
jl
add
shl
jecxz
faddl
add
add
add
add
scas
add
lahf
push
mov
cld
push
add
pop
lods
cmpsb
popa
add
pop
jb
ljmp
add
jb
out
add
sub
pop
pop
pop
push
push
call
sbb
pop
in
mov
add
outsl
mov
testl
add
mov
add
fildl
lcall
push
xor
shl
lea
pop
pop
push
push
push
lea
push
call
fwait
mov
mov
nop
test
stc
mov
add
ja
fiadds
push
add
mov
add
stos
fiaddl
mov
scas
add
add
add
mov
mov
add
bound
lcall
push
shl
pop
ret
push
dec
pop
push
mov
push
not
pop
push
push
push
sub
inc
pop
push
push
push
shr
add
pop
mov
push
add
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
add
lret
cltd
mov
add
ja
fs
jmp
loop
incb
add
cwtl
enter
add
jmp
add
fs
push
fldln2
ret
add
add
clc
mov
in
fcompl
jge
push
shr
inc
pop
test
je
mov
push
add
pop
test
je
push
ror
pop
mov
push
push
push
push
call
add
add
mov
mov
add
ljmp
movsl
add
add
add
add
add
iret
popa
filds
jns
mov
add
add
les
in
add
lock
lcall
dec
or
lea
pop
mov
push
shr
shr
pop
inc
push
inc
rol
pop
cmp
je
push
push
push
call
add
loop
add
add
add
add
cmc
mov
add
add
mov
xchg
not
add
jbe
push
mov
pop
out
add
movsl
std
xchg
jo
add
sti
sub
pop
test
je
mov
push
push
lea
push
push
push
lea
push
push
call
lock
add
cli
mov
add
bound
push
mov
add
add
aam
lods
scas
filds
xchg
mov
in
inc
push
xor
add
pop
cmp
je
push
not
pop
test
jne
push
shl
add
lea
pop
xor
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
add
aad
push
mov
add
pop
jb
add
in
cltd
mov
add
mov
add
pop
add
add
add
sarb
add
mov
arpl
add
add
scas
subl
push
sar
sub
pop
pop
pop
push
not
sub
ror
pop
pop
push
push
push
push
lea
push
call
sarl
mov
add
jae
in
lods
flds
icebp
push
mov
push
ja
testl
enter
add
in
in
lcall
push
push
push
push
push
push
lea
push
call
push
lahf
push
fdiv
add
mov
call
add
add
shlb
sarb
fcoms
in
leave
push
add
pop
ret
mov
push
sub
inc
pop
inc
cmp
jne
push
sub
pop
lea
mov
push
push
call
mov
add
add
mov
add
mov
lahf
add
out
js
cmpsl
loopne
add
cld
add
add
add
jb
add
mov
pop
int3
out
mov
cmc
mov
fdivl
add
lret
pushf
mov
add
add
xchg
add
insb
mov
mov
add
jae
sub
pop
test
je
push
sub
shr
ror
pop
mov
add
push
push
push
push
push
push
call
lods
add
sarb
add
out
mov
push
add
pop
pop
ja
add
je
add
lods
add
add
add
add
movb
add
js
sub
pop
cmp
jne
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
out
int
lret
cmpsb
add
add
popa
into
add
ja
add
fiadds
cltd
add
mov
mov
add
xchg
add
add
add
pop
lahf
mov
xchg
add
in
fdivr
lcall
rorb
imul
mov
mov
cli
push
push
push
call
add
mov
add
mov
addb
pushf
add
add
add
std
xchg
pusha
push
add
add
push
adcl
repnz
add
popa
pop
add
mov
mov
add
js
cltd
int
xchg
push
pop
add
add
add
add
lcall
incw
out
pop
cmp
je
jmp
push
not
dec
ror
pop
xor
push
shr
rol
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
test
add
loope
add
jmp
xchg
add
xchg
adcl
in
mov
add
cli
cmpsb
add
std
cltd
jbe
add
mov
add
jnp
xchg
push
movsb
lods
test
push
push
push
lea
push
push
call
add
out
add
call
test
add
add
add
add
popf
add
fs
add
add
mov
fwait
jo
rclb
add
pop
pop
lods
pop
add
add
push
cwtl
add
add
add
jo
add
sub
pop
pop
push
push
push
push
lea
push
call
xchg
add
in
xchg
xchg
add
xchg
stc
leave
scas
data16
flds
cli
hlt
add
mov
lret
loop
add
add
loop
add
fs
test
add
fwait
mov
mov
roll
mov
movsb
push
movb
add
add
sub
pop
pop
push
push
lea
push
push
call
lods
add
mov
mov
mov
add
out
jbe
mov
add
add
add
add
jle
ljmp
add
mov
push
add
in
add
movsl
add
in
lock
lcall
ret
push
shl
sub
add
pop
lea
push
shl
xor
add
add
pop
pop
push
add
shl
xor
dec
pop
pop
push
pop
pop
push
push
push
push
call
addb
push
mov
cli
mov
lret
subb
jmp
add
add
js
add
add
int3
push
xchg
lret
rolb
mov
mov
add
mov
lock
pop
push
dec
lea
pop
leave
ret
push
push
lea
push
call
add
add
add
mov
mov
mov
out
mov
push
add
fdiv
add
jb
add
lds
ljmp
popf
pop
add
frstor
mov
lret
mov
mov
add
sub
pop
mov
pop
push
lea
push
push
push
push
push
push
push
push
call
mov
stos
add
leave
std
jnp
mov
iret
mov
add
add
iret
jmp
push
popf
xchg
cmc
ljmp
movsb
xchg
mov
xchg
add
outsl
jl
jle
sub
pop
pop
push
dec
sub
pop
pop
push
not
add
dec
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
mov
add
add
push
out
insb
std
sbbl
cmpsb
xchg
fwait
add
add
add
push
add
fwait
pop
add
in
fcomps
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
jb
add
jl
stos
jbe
outsl
add
mov
xchg
add
call
add
mov
int
jmp
outsl
mov
cmpsb
data16
incb
add
jmp
out
add
iret
add
sub
pop
ret
cmp
mov
inc
lret
ret
cmp
into
mov
loope
mov
ror
out
lret
add
mov
xchg
lret
or
adc
mov
add
add
sub
sub
inc
and
popf
pop
mov
xchg
sub
ss
jns
pushf
sub
xchg
push
or
jge
int
sub
fimuls
sbb
sti
sahf
or
ret
js
mov
adc
adc
loop
mov
imul
out
sub
xchg
mov
push
insl
mov
aad
or
repnz
stc
sbb
test
cmpsl
jp
sub
xor
jg
cli
push
ja
frstor
insl
cmp
mov
dec
lcall
xchg
push
fdivrl
adc
lcall
mov
push
sbb
xbegin
xlat
lcall
dec
push
jp
cmp
lret
or
lods
popf
adc
push
test
es
int3
int3
push
dec
lret
sbb
in
cli
and
arpl
mov
mov
lret
jge
xchg
jl
mov
hlt
mov
jo
jmp
or
jmp
rorl
mov
popf
jl
in
or
mov
outsb
xor
inc
ljmp
sbb
icebp
add
mov
add
mov
sub
mov
mov
and
test
add
test
iret
imul
popa
fs
repnz
mov
inc
or
push
pop
pop
xchg
test
xor
addr16
jg
jle
repz
out
add
cmc
xorl
mov
add
or
insl
ficompl
call
sub
jecxz
xchg
mov
jne
je
jg
mov
sub
je
xchg
ror
adc
mov
inc
ficompl
and
and
lods
pop
jbe
jmp
mov
and
inc
inc
xor
cld
jmp
mov
pop
cld
cmpsb
dec
push
ss
dec
dec
mov
push
ror
add
pushf
jge
fidivrl
mov
or
jmp
lods
fadds
mov
sti
sahf
push
sub
enter
daa
mov
xchg
mov
in
xchg
cli
xchg
je
push
mov
sbb
fisubrs
push
fnstenv
mov
lahf
pushf
and
cmpsl
in
mov
mov
jp
sbb
popa
sub
clc
sub
shrl
pushf
cmp
mov
aaa
push
sti
aaa
dec
lods
out
adc
jns
mov
bound
fucom
jb
fs
sub
cld
add
fistl
sub
in
dec
inc
cs
sti
or
andnps
and
cmp
mov
stos
mov
push
pushf
dec
sbb
mov
mov
in
or
jae
je
adc
loop
mov
xchg
pop
jns
jmp
dec
call
dec
imul
addr16
jmp
inc
aas
fisubrs
outsl
or
movsb
lea
cmc
pop
insl
or
jo
mov
mov
fistps
fldenv
add
stc
mov
out
jae
inc
xchg
add
mov
dec
fadd
sbb
insb
jo
xor
and
int3
faddp
xor
js
sub
imul
outsl
add
sbb
lcall
or
dec
pop
pop
mov
sbb
aas
mov
sbb
int
mov
and
movsl
or
jl
mov
movsl
das
nop
xor
adc
mov
daa
add
mov
xor
add
lods
add
out
cld
addl
adc
mov
faddl
and
pop
sbbl
icebp
sub
outsl
xor
xor
add
sbb
mov
sbb
outsb
fdivl
mov
mov
movsl
pop
fs
rcrb
dec
xchg
adc
call
popf
xor
jg
in
fiadds
in
sti
aam
arpl
test
xchg
push
add
xchg
gs
xchg
sub
inc
icebp
dec
mov
xlat
sbb
dec
ret
xor
movd
adc
adc
je
repz
inc
push
pop
jmp
xor
sahf
inc
out
cli
or
loope
insl
mov
xchg
clc
mov
test
cmp
out
insl
xchg
fucomp
ficomps
loopne
fwait
pop
scas
cmpsl
push
fistpll
imul
xchg
xchg
push
dec
out
in
cmpsl
mov
xchg
or
add
mov
mov
hlt
adc
dec
jns
jno
outsl
jo
push
mov
mov
sbb
cmp
pop
sbb
fnstcw
mov
xchg
mov
es
or
data16
jle
arpl
cs
sbb
and
es
jns
popa
inc
std
pop
inc
pop
push
leave
fsubrs
xor
sbb
jg
lds
xorl
sbb
xor
popa
popa
ret
xchg
rcll
mov
add
arpl
jmp
mov
jns
outsb
hlt
stc
mov
jl
cmp
mov
dec
inc
pushl
push
pop
fiadds
pop
inc
cmpsb
or
jb
mov
xchg
out
cltd
fistps
add
aam
mov
rorb
mov
sbb
jo
insb
mov
lret
push
or
loop
xor
subl
mov
cmp
and
xlat
stos
and
loopne
jae
pop
pop
mov
sbb
sarl
mov
int
cmp
pusha
xor
cmp
mov
mov
sbb
sub
mov
push
dec
sub
loop
lds
or
shll
xor
xor
inc
dec
fdivrl
sbb
push
fwait
pop
mov
mov
rorl
inc
dec
sbb
loope
mov
xlat
add
std
and
aaa
xchg
sbb
add
add
inc
leave
xchg
mov
out
adc
and
adc
test
pop
insb
nop
std
daa
and
dec
adc
push
xor
push
cld
jbe
sub
in
inc
lock
rcrl
ficomps
sbb
xor
sbb
xor
jecxz
inc
mov
loopne
fwait
adc
nop
mov
push
shll
movsl
sub
imul
out
xchg
sub
pop
and
and
in
sub
out
mov
mov
cmp
sub
ret
inc
xchg
loopne
jne
jecxz
adc
mov
xchg
arpl
cs
inc
stc
dec
mov
sub
inc
mov
sub
push
movl
or
adc
push
shrl
outsb
iret
and
inc
or
sbb
xchg
jne
fbld
sub
xchg
mov
mov
ds
aad
int3
jle
xor
pushfw
loopne
stc
jmp
xchg
pop
inc
and
add
scas
mov
dec
dec
sub
xchg
hlt
popa
ljmp
mov
xor
mov
dec
dec
icebp
in
lock
incl
sar
cmp
pusha
mov
mov
or
jnp
and
mov
subl
or
dec
mov
int
xor
loope
fidivs
adc
adc
cmp
inc
or
fisubl
nop
mov
js
jns
jg
pop
mov
inc
fnstcw
sbb
dec
repz
and
pop
stos
push
in
jnp
arpl
fisubs
icebp
push
push
pop
fs
mov
push
cwtl
lahf
nop
push
lret
or
push
cmp
out
xchg
cmpsb
jns
rcrb
popl
mov
sub
outsl
out
ret
or
mov
lock
fldenv
pop
mov
mov
mov
fsts
push
dec
les
fnstenv
add
loope
dec
ds
or
test
xchg
inc
lea
pop
sahf
add
inc
sbb
mov
pusha
mov
jne
cmp
jns
out
mov
adc
aas
sub
add
mov
cs
sarl
mov
adc
insl
xchg
test
cmp
dec
rolb
xor
cltd
mov
in
imul
pop
cmovno
fmuls
ja
mov
adc
mov
push
clc
cmp
dec
inc
fmul
or
dec
roll
arpl
js
cwtl
nop
inc
lahf
jae
aas
test
sbb
push
dec
add
aam
sbb
test
aas
dec
add
les
push
fisttpll
addr16
sbb
cmpsb
test
push
mov
lds
pop
cmpsb
pop
xor
fucomp
fnstenv
xor
add
xlat
cmp
out
inc
mov
stc
loop
dec
push
je
xchg
sarb
dec
es
xor
add
sbb
loop
add
mov
stos
ret
cmp
invd
jle
je
or
pushf
and
xchg
push
icebp
into
incl
push
popa
fs
sub
jg
lods
test
xor
pop
pop
pusha
inc
mov
into
push
mov
jl
insb
xchg
test
cmp
xchg
fs
cltd
or
mov
pop
int3
insb
add
xchg
push
xchg
pop
scas
mov
pop
push
insb
mov
pop
dec
xchg
dec
mov
sub
push
stos
imul
mov
out
cld
sub
sub
decl
push
les
jp
mov
pop
pop
adc
cmp
popa
pop
inc
fimull
mov
test
hlt
shr
xchg
pop
aaa
push
stos
out
movb
add
subl
bound
popf
dec
sub
lahf
test
jbe
adc
sbb
insb
xchg
movsl
jge
nop
and
popa
arpl
orl
and
jl
sub
pop
adc
mov
adc
inc
push
dec
lea
sbb
adcb
lods
in
mov
daa
pushf
int3
out
sti
add
rol
ret
cmp
cmp
sbb
pop
pop
add
inc
xor
lds
fildll
jno
iret
popf
pop
sub
dec
mov
cld
push
ss
les
or
loopne
lds
mov
adc
sti
mov
mov
pop
into
inc
cmpsb
and
dec
pop
pop
in
adc
or
into
fcomps
push
xor
imul
inc
mov
jo
xor
inc
test
push
inc
xchg
lahf
mov
scas
pop
xor
insl
stos
lds
in
pusha
push
bound
into
fcoml
mov
push
fiaddl
cmpb
into
insl
inc
dec
push
outsb
mov
scas
jnp
mov
adc
test
cmp
addb
xlat
jo
mov
int3
ljmp
insb
sbb
xchg
je
and
xor
loopne
add
jno
and
stos
xor
dec
pop
push
pop
mov
shrl
push
jo
sub
push
push
xchg
outsb
das
call
iret
test
cmp
fcompl
xchg
in
movl
popf
push
mov
out
jecxz
jp
sti
dec
into
cld
pushf
dec
cmp
push
dec
hlt
xor
jge
sar
push
lods
lahf
push
pop
ds
gs
test
sbb
sahf
insb
jge
addr16
cli
dec
ja
inc
add
and
stc
sbbl
mov
and
sarb
push
pop
js
pop
push
je
mov
es
nop
mov
push
push
sarl
inc
jmp
mov
mov
xchg
sub
add
icebp
push
jle
pminub
insl
popa
sbb
lock
fcom
test
pop
mov
mov
mov
ds
pop
std
and
jnp
mov
dec
lods
adc
cmpsb
in
aam
push
lock
or
push
inc
xchg
test
shll
jbe
cmc
sub
data16
push
lods
and
dec
cmp
xor
rorb
sub
je
int3
sbb
and
lock
adc
ss
xchg
push
adc
enter
adc
adc
pop
xchg
and
fbld
icebp
loop
xchg
and
xchg
jmp
jle
sarb
out
xor
and
sbb
sbb
cmp
out
mov
fwait
call
or
sub
hlt
add
sbb
or
adc
in
rorb
out
dec
nop
imul
pop
loopne,pt
pop
test
pop
jno
push
dec
adc
xchg
fistpl
sbb
adc
fnstcw
gs
leave
mov
pushf
mov
fstps
pop
sbb
mov
iret
push
test
cltd
pop
pop
or
xor
jmp
sarl
out
sarl
out
mov
scas
ficompl
mov
out
in
data16
cmpsl
cmp
pop
and
jbe
mov
jns
sti
loopne
pop
sbb
xchg
and
scas
mov
arpl
sbb
daa
cltd
shrb
add
xchg
dec
shr
jno
xlat
sbb
movsb
push
jp
adcl
or
int3
das
les
mov
adc
pop
shlb
xor
push
test
aas
cmp
andl
in
mov
or
repnz
xchg
xor
ret
mov
sub
stos
mov
mov
ss
adc
sbb
push
int3
push
lock
cmp
mov
jnp
cltd
pop
and
sbb
sub
pop
notl
jle
inc
push
push
jg
pop
and
test
rcl
insb
mov
mov
test
mov
mov
mul
inc
fisubl
dec
add
xor
xor
and
jo
clc
in
test
pushf
pop
cmp
xlat
in
fbld
inc
adc
xchg
xor
mov
out
sti
adc
adc
or
mov
stc
and
xchg
pushf
sarl
outsl
jnp
xchg
aas
xor
jecxz
sbb
popf
dec
mov
add
mov
lahf
mov
lock
out
and
lret
adc
push
xchg
pop
icebp
mov
push
sahf
cmp
add
cmp
imul
xor
jp
dec
movsl
mov
push
addb
or
je
inc
and
aas
les
outsb
das
dec
or
push
jnp
out
jbe
iret
xchg
fistpl
out
enter
lds
dec
out
bound
push
sti
inc
dec
inc
jbe
mov
rorl
out
push
push
push
adc
imul
movsb
or
xchg
data16
ljmp
out
dec
mov
aad
and
iret
int3
dec
xor
mov
push
fimull
jbe
pushf
iret
mov
pop
cmp
loopne
push
dec
cmp
call
mov
adc
xchg
push
adcb
sub
dec
pop
jns
sub
push
cmp
repz
add
shlb
les
js
mov
iret
xor
insb
sub
inc
or
sbbl
mov
movb
mov
xor
outsl
xchg
and
mov
pop
dec
in
in
roll
loope
sub
enter
or
xchg
hlt
aaa
sar
out
imul
mov
push
enter
leave
dec
xor
jo
jg
popa
mov
jo
dec
shll
out
pop
add
gs
cld
pushf
mov
call
sub
mov
xchg
lret
push
sbb
loop
outsl
adc
push
pusha
mov
cmp
add
jnp
jecxz
je
xchg
rclb
xor
das
pop
fsts
shll
roll
filds
mov
jns
pop
sbb
xchg
lods
xchg
lea
pusha
mov
sub
push
push
mov
inc
hlt
xchg
stos
loopne
aad
sbb
call
mov
mov
ljmp
or
cmp
jbe
mov
pop
pop
sti
push
in
sbb
mov
scas
pop
push
divl
mov
das
and
aad
pusha
insl
in
sub
sub
xchg
jp
pop
and
sbb
aaa
push
fcmovne
cld
pop
addr16
inc
mov
je
xchg
popf
mull
repz
pop
lods
xor
jmp
jnp
cmp
test
loopne
jbe
mov
xchg
or
fcoms
mov
in
out
xchg
popa
mov
xchg
xlat
add
xchg
cmp
mov
cmp
sub
sbb
inc
dec
stc
inc
dec
cli
jnp
xor
shrl
mov
sub
loop
shl
aaa
cmpsl
inc
nop
or
rclw
sbb
lret
test
mov
dec
clc
adc
adc
push
or
mov
pop
cmc
jmp
push
sub
pop
repnz
adc
imul
cmp
jnp
je
int3
or
inc
adc
loop
aas
xchg
mov
ret
adc
mov
adc
out
inc
sub
dec
ficoml
and
sub
dec
adc
lret
cltd
scas
inc
mov
sar
sbb
lahf
xchg
fnstsw
mov
mov
jp
icebp
pop
cwtl
mov
lods
push
xchg
outsl
test
xchg
mov
xor
push
daa
cld
mov
fisubl
btc
out
and
xchg
jae
fwait
outsl
mov
aam
in
es
fwait
ljmp
mov
cmp
sahf
cmc
into
xlat
sbb
test
add
jbe
push
and
mov
pop
insl
add
xor
jge
rclb
pushf
inc
and
int3
clc
ss
cmp
insb
jmp
pop
lea
cmp
sub
and
faddl
mov
mov
mov
pop
or
mov
xchg
cwtl
fstl
jle
mov
aad
hlt
and
xor
lcall
pop
inc
pushf
loop
xlat
push
scas
inc
repz
push
int3
adc
jne
in
mov
std
mov
pop
incl
fdivs
and
push
loop
jmp
jae
inc
shll
sub
into
aam
cmp
or
cmp
cld
fidivs
or
jns
insl
sbbb
xchg
dec
ror
add
mov
into
in
rol
sbb
cmp
adc
nop
xchg
jl
inc
cli
xchg
mov
inc
shlb
cli
int3
pop
ja
adc
mov
repnz
mov
add
test
xor
xchg
and
in
xchg
fadd
test
ja
pop
jne
push
add
mov
popa
xchg
push
jp
test
jge
add
or
mov
imul
ret
mov
bound
dec
repnz
and
rcll
test
fildl
mov
jmp
loope
add
in
ss
push
adc
or
dec
addr16
jp
cmp
cltd
in
rcr
and
je
push
jp
jl
repz
inc
jge
push
jo
aaa
fcoml
jge
dec
mov
xchg
xlat
inc
leave
push
in
das
pushf
or
xchg
xchg
xchg
and
clc
pushf
add
xlat
sbb
push
mov
jb,pn
aam
bnd
mov
shll
jnp
adc
sbb
add
xor
jg
cmpsb
dec
sub
sub
cmc
or
sahf
sub
mov
out
pop
add
ffreep
fs
std
pop
out
dec
inc
or
mov
sbb
sbb
fdivrl
mov
mov
je
xlat
push
sub
mov
data16
push
inc
push
paddusw
ret
pop
push
stos
mov
xchg
cwtl
mov
lret
pop
mov
inc
add
cmpsl
sbb
xchg
pop
jl
ret
dec
ss
sbb
sub
inc
sub
mov
xor
iret
sti
adc
popf
inc
aas
push
mov
mov
mov
int
mov
xlat
jb
xor
sub
sahf
or
push
push
hlt
ja
stc
adc
pop
data16
fucom
outsb
adc
lret
fimull
mov
inc
ds
or
mov
aaa
pop
inc
aad
lahf
fwait
push
mov
orb
jne
repnz
aaa
or
jns
lock
lret
aaa
sbb
daa
inc
dec
add
jb
fwait
jecxz
sbb
jl
inc
dec
sub
adcb
test
mov
hlt
pop
fcoms
pop
call
xchg
dec
sub
out
fmuls
push
or
sub
lahf
mov
pop
mov
rcrl
pop
add
fdivrl
scas
jo
cmc
loop
rorl
jmp
cmp
call
mov
sub
scas
les
aaa
xor
iret
push
daa
pop
lock
movsw
cld
jns
dec
inc
cmp
and
popf
cmc
dec
sub
div
inc
mov
and
packuswb
push
scas
sbb
xlat
dec
inc
in
or
call
sbbw
insb
addr16
es
add
push
jo
pop
xchg
jns
inc
sahf
jle
shrl
xor
mov
mov
jp
sahf
xchg
bound
adc
fildl
mull
inc
push
mov
in
rorb
sbb
fucomp
lcall
sti
out
mov
inc
xchg
inc
jg
mov
add
lcall
fs
mov
xchg
imul
fs
divl
movsl
pop
bound
cmp
sarl
movsb
rcl
jae
adc
leave
pop
jns
ss
imul
mov
xor
add
rcll
xor
xchg
pop
mov
cmp
jns
mov
jp
in
inc
add
push
aas
inc
test
rcll
bound
inc
faddl
dec
mov
out
insb
fildl
dec
enter
mov
xchg
int3
jle
test
jae
or
and
mov
mov
xor
cld
lahf
xor
loop
jge
mov
add
dec
out
mov
push
bound
xchg
xor
stos
lock
push
fcomps
or
cmc
js
inc
lret
loope
add
imul
je
aad
cmp
shll
xchg
jb
outsb
icebp
push
ret
jl
xchg
sbb
fwait
movsb
jo
in
std
add
push
adc
addr16
dec
pop
sbb
inc
sub
jmp
cmc
mov
mov
lods
leave
pusha
and
enter
loopne
in
pop
arpl
stos
add
sar
fcoms
std
setnp
or
cs
push
mov
hlt
pop
leave
push
fimuls
cmp
sarb
xchg
dec
cmpsl
pop
sti
stos
inc
or
xchg
push
stos
popf
jmp
mov
sub
cli
push
je
push
mov
sub
in
mov
jb
push
stos
cli
inc
insb
pusha
cmpsl
lds
imul
push
nop
imul
sub
xorb
call
dec
fwait
mov
jp
popa
mov
imul
cmc
push
sbb
pop
enter
xorl
aam
clc
pop
jl
cmp
or
xor
jo
jno
icebp
push
fildll
ja
xchg
mov
aaa
and
lods
sbb
mov
mov
adcl
inc
push
mov
add
fwait
xlat
mov
jmp
jecxz
or
es
data16
xor
fdivrs
mov
mov
ret
enter
gs
arpl
icebp
xchg
adc
pop
imul
loope
stos
sti
push
or
sbb
push
jge
les
loopne
inc
arpl
ljmp
jmp
dec
ja
inc
push
lea
dec
cmp
nopl
clc
and
inc
sub
fisubrl
xchg
repz
sbb
inc
xchg
daa
aad
mov
aam
je
dec
cmp
nop
clc
mov
incl
ja
and
loopne
aad
outsb
mov
shr
and
imul
inc
stos
jbe
push
pop
and
jmp
push
les
xchg
mov
sbb
sahf
cmpsb
mov
iret
fistl
dec
jae
lret
orb
pop
pop
cwtl
cld
fsts
adc
sbb
adc
fs
cmpsb
adc
fcom
mov
test
repz
push
int
out
gs
jg
dec
fptan
dec
xor
lea
fimull
mov
andb
loopne
mov
fidivs
inc
adc
subl
stc
out
pop
mov
aas
loopne
rclb
mov
mov
je,pn
movsb
dec
fwait
push
lods
mov
int
loope
addr16
int
mov
sub
mov
xlat
pop
push
lods
orb
stos
js
mov
lahf
lahf
dec
ljmp
inc
aam
dec
pusha
pusha
out
aas
ss
or
sub
repnz
lret
jmp
mov
sub
fiaddl
or
sti
ss
mov
fldt
pop
or
push
sub
mov
js,pt
fcmovnbe
or
xchg
cmpsl
mov
das
dec
pop
call
sbb
dec
xor
mov
clc
push
xchg
dec
sbb
repz
orl
sub
pop
xchg
or
push
nop
test
mov
popa
fdivr
pop
xor
sbb
lret
push
xor
ffree
add
shl
jg
mov
or
sarl
xchg
mov
mov
jge
push
and
and
insl
outsb
out
jmp
add
ljmp
sub
enter
mov
sahf
mov
ss
jge
dec
adcb
out
adc
ret
mov
scas
aas
xlat
int
notl
das
mov
dec
jns
cmp
clc
xchg
dec
adc
pop
cld
inc
xor
or
frstor
jne
pop
xor
mov
mov
pop
pop
aam
ss
xchg
xor
mov
xor
ds
mov
loop
loopne
ljmp
jnp
mov
adc
mov
daa
jnp
cmp
jmp
mov
or
jmp
out
mov
and
lods
imul
ljmp
lds
pop
addr16
dec
adc
mov
mov
call
pop
and
or
into
cld
inc
addr16
int3
in
inc
dec
mov
loopne
ret
sbb
dec
outsb
push
jo
xchg
mov
mov
push
sub
xor
fdivp
and
test
adc
jl
mov
mov
leave
jle
testl
fwait
pusha
sbb
outsl
clc
fisttps
cmc
shrb
scas
stos
cmp
pop
push
jae
xlat
push
adc
imul
push
adc
jae
scas
js
xchg
xchg
cmp
fwait
sbb
xorb
cmp
push
push
xor
repz
ds
lock
addl
scas
pop
push
fnsave
movsl
out
xchg
ficoml
fisttpl
push
mov
mov
jbe
rorb
cli
cmp
inc
out
sub
and
add
testb
and
fldenv
stos
outsb
std
out
mov
dec
push
xor
lds
incb
mov
xorb
lcall
aad
outsb
inc
and
test
shlb
mov
xchg
xchg
ret
cmpsb
cmp
mov
dec
lea
sbb
in
pop
xchg
cwtl
mov
lret
mov
lods
or
les
inc
xchg
insb
dec
scas
xor
xlat
pop
and
pop
in
xor
clc
test
mov
jne
rcl
scas
js
sub
dec
sti
jb
xor
sbb
jae
out
aam
rcl
mov
mov
push
lods
xor
jp
test
aad
andb
mov
notl
mov
push
pop
pop
push
cwtl
push
int
dec
loop
mov
jnp
mov
dec
int
sub
add
jmp
jbe
jle
jecxz
scas
lret
dec
ss
repz
sub
dec
pusha
out
mov
mov
loope
inc
and
sti
cmp
shlb
pop
dec
movsl
pop
add
and
sbb
dec
fldcw
inc
push
in
cmp
fcompl
jge
sub
sub
or
loopne
sub
push
js
mov
xchg
mov
adc
int
mov
call
or
pop
push
rorl
cwtl
mov
insb
fnsave
nop
mov
out
inc
inc
in
jne
push
inc
inc
data16
clc
je,pt
cmpsl
aam
insl
andl
das
in
push
mov
enter
dec
movsl
mov
pop
notl
sbb
cmp
sar
sbb
jecxz
out
repz
loope
inc
movl
xor
push
xchg
inc
ret
loope
test
mov
in
cld
dec
sbb
js
test
jmp
bound
inc
mov
fistl
jge
push
lcall
clc
push
sbb
shrb
cwtl
add
ljmp
ljmp
dec
push
cmp
mov
and
cmp
mov
sbb
sbb
add
daa
pop
icebp
and
xor
ret
cmp
loop
push
and
fsts
sbb
push
fcmove
test
hlt
test
adc
scas
mov
out
pop
cmp
jg
mov
ret
orb
sbb
std
dec
shlb
out
xchg
mov
push
mov
test
ss
add
icebp
xchg
adc
sbb
int
shr
in
pop
mov
mov
repnz
sbb
push
pop
into
test
mov
loope
scas
rolb
jp
ret
out
aam
bnd
lds
sub
jns
push
jmp
pop
test
dec
lret
mov
gs
test
lcall
mov
js
pop
pop
fdiv
adcb
adc
jge
xchg
rcrl
pop
fidivs
inc
leave
mov
and
ljmp
sbb
pop
dec
cltd
sti
popa
mov
and
add
push
or
pop
inc
imul
aas
movsl
push
rorl
and
xor
es
add
lea
lcall
adc
push
shll
xor
mov
mov
adc
lahf
daa
jp
ss
mov
xchg
lahf
push
test
push
addr16
xchg
mov
out
mov
inc
faddl
mov
fwait
outsb
test
push
mov
dec
push
fdivrp
mov
jno
js
wbinvd
mov
cmp
pop
rcrb
and
sub
xor
fldl
fnstsw
cltd
cvtpi2ps
and
pop
dec
xor
cwtl
sub
xchg
xlat
mov
arpl
xchg
cmpsb
dec
jmp
dec
clc
aad
or
xor
shrl
arpl
sub
cmp
xchg
cltd
pop
adc
out
mov
in
movsb
cld
movsb
out
mov
stos
pop
cli
add
push
jb
das
loope
fistl
push
clc
mov
and
sbb
mov
sbb
adc
cmpsl
dec
pop
movsb
dec
inc
xchg
push
adc
shlb
ljmp
inc
cmp
std
inc
mov
mov
dec
xchg
divb
popa
outsb
ljmp
mov
int
sbbb
mov
inc
ficoms
sarl
test
test
push
mov
cmpsl
dec
cmp
aam
aas
cld
decb
inc
add
aad
mov
imul
cmp
jae
orb
sub
pop
cld
cltd
cmp
out
sub
adc
mov
test
cmp
jbe
xor
adcl
test
movsb
fs
pop
jo
sub
push
mov
lret
bound
push
dec
mov
jb
pop
daa
and
stos
jge
ljmp
inc
xchg
addr16
inc
inc
ret
jb
cs
push
leave
sub
xchg
mov
jmp
and
pop
pop
and
js
dec
jle
mov
test
movsl
fistps
xor
leave
and
stc
shll
call
push
aas
jp
out
pop
aas
rcrl
or
cmp
mov
lods
flds
fdivrl
adc
sahf
inc
mov
pop
icebp
or
push
jg
jecxz,pt
xchg
ficomps
cmp
outsb
mov
insb
movsb
aam
fmul
push
push
push
in
lea
movsl
mov
js
outsb
jbe
push
es
stc
lahf
cmp
aas
je
repz
jmp
mov
sub
pusha
mov
enter
mov
push
adc
mov
popa
xlat
clc
xor
xor
push
clc
xlat
push
or
movsl
mov
ret
fwait
or
push
mov
inc
stc
rclb
les
cmp
mov
mov
mov
push
imul
jg
repz
stc
out
and
lret
mov
jle
jmp
xchg
mov
rcll
into
clc
hlt
lahf
jno
cmp
sub
push
jns
sbbb
stos
int3
dec
sbb
or
outsl
or
out
mov
mov
xchg
fimuls
mov
mov
lods
mov
xchg
rcl
cli
pop
sub
lahf
dec
sub
xor
sub
pop
push
adc
mov
call
sub
dec
or
rolb
in
push
pop
sbb
fsubr
push
jg
test
in
bnd
dec
pop
int3
mov
repz
adc
pop
inc
xchg
or
dec
fsubr
add
je
pop
xchg
jmp
adc
sar
pop
adc
dec
and
cmc
add
shrl
pop
cmpb
and
pop
cmpsb
adc
cltd
das
int
xchg
pusha
push
ficompl
ret
jecxz
frstor
xchg
out
in
je
cmp
arpl
adc
arpl
clc
movsb
loope
clc
dec
sahf
je
aad
sub
xchg
test
cwtl
cli
mov
arpl
lret
std
lds
add
mov
aaa
call
xor
jo
in
leave
inc
dec
std
push
movsl
popf
mov
or
ret
mov
mov
in
mov
mov
push
pop
sub
sti
pop
mov
push
sbbl
cs
add
pop
data16
push
inc
push
xor
xlat
inc
nop
sub
xchg
int
inc
es
xor
push
pop
ljmp
aas
int
addb
roll
sub
cwtl
test
ret
cmpsl
pop
cmp
lret
dec
addb
in
mov
inc
mov
jae
sub
clc
mov
sub
loop
gs
loopne
ja
cs
sahf
inc
les
mov
cmp
inc
sbb
test
push
test
mov
in
ret
xor
movb
jl
and
lods
xchg
stc
shlb
inc
sti
mov
repnz
clts
push
push
cmc
mov
pushf
lea
sub
mov
mov
nop
in
sub
ds
aam
pop
lret
adc
arpl
mov
aam
je
je
mov
outsb
adc
test
dec
pop
outsb
clc
mov
mov
inc
fsubs
xchg
in
dec
ljmp
ljmp
mov
add
in
stos
test
or
insl
jle,pn
xchg
cmp
adc
pop
xchg
call
or
icebp
sub
cmp
aaa
outsb
lahf
adc
adcl
push
stos
arpl
sub
stos
adc
and
mov
ja
call
adc
lods
and
lahf
insl
in
pop
xchg
jmp
dec
xchg
mov
in
call
xor
popf
cmp
mov
stos
pop
scas
sub
clc
mov
inc
and
test
je
jp
pushl
dec
insl
in
mov
inc
cltd
xchg
mov
xor
adc
out
adc
mov
push
in
nop
fidivs
cmp
es
popa
leave
adc
add
inc
xor
cltd
inc
test
cli
or
sub
fmull
dec
add
shll
bound
loop
test
push
inc
pop
push
das
or
leave
cmp
pop
vucomisd
sarl
xchg
pop
jle
aam
mov
and
loope
shlb
mov
cmpsb
stos
jecxz
imul
or
mov
cmc
arpl
and
je
xchg
jecxz
pop
fs
les
adc
ficompl
enter
ret
xchg
xchg
aam
ret
inc
inc
leave
sbb
push
xchg
int3
sarb
jp
jle
ret
enter
aas
arpl
or
jo
jae
sbb
ljmp
stc
fiadds
cmp
xchg
mull
test
js
lret
pop
jmp
xchg
fidivl
sub
fs
out
or
adc
mov
push
outsb
xor
scas
mov
in
lods
xchg
into
mov
xchg
push
fiaddl
mov
popf
pop
inc
xchg
pusha
leave
aad
push
mov
ret
out
mov
pop
sbb
sub
or
repz
aaa
jle
nop
xchg
jmp
xchg
xor
sub
out
out
testb
sub
inc
inc
adc
lret
sub
push
cmp
fadd
push
out
sti
rcrl
push
stos
sti
pop
jecxz
cmp
mov
pop
adc
sub
ljmp
and
push
mov
add
xchg
mov
call
iret
ret
cmp
or
repz
add
pop
les
popf
mov
add
pop
out
mov
aas
shll
xchg
fiadds
push
jno
iret
jle
pop
sub
or
sub
xlat
jo
adc
pop
sahf
sbb
push
pop
mov
cmp
ds
pusha
sbb
jno
and
call
mov
push
cwtl
mov
stc
mov
add
imul
pop
or
cmp
bound
xor
and
add
mov
xor
xchg
cmpsl
in
repz
jl
cmp
aas
shrl
les
scas
int
imul
sbb
loope
rclb
cmpsl
dec
ljmp
cmp
and
mov
xchg
aad
inc
negl
movsl
in
les
xchg
mov
cmpsl
vmulpd
add
jge
into
cmp
mov
leave
adc
into
and
pop
pop
mov
call
dec
jnp
in
sbb
test
push
xchg
xchg
mov
cmp
inc
pushf
jl
leave
test
add
lret
ds
cmp
sub
enter
popa
push
icebp
mov
xchg
cmc
jecxz
or
cmpsb
mov
push
lsl
fstps
imul
xchg
cs
inc
ret
scas
addr16
sub
dec
std
lahf
add
cld
movsb
ss
push
bound
sub
fidivrl
adc
out
inc
inc
mov
xchg
out
jo
jae
jle
fwait
cmp
arpl
out
fsubp
mov
jb
sbbl
int3
dec
add
add
je
sub
je
mov
jp
xor
cmp
xchg
mov
or
mov
jae
push
adc
jb
cmp
mull
push
lcall
inc
xorl
push
inc
mov
rolb
xor
sbb
scas
lret
lret
std
hlt
mov
cmp
test
pop
rol
adc
fbld
loope
pushf
jnp
mov
rorl
stos
adcl
subb
arpl
xchg
out
ret
fwait
lret
aaa
mov
pop
cltd
testl
lods
push
fldt
mov
or
or
dec
adc
mov
mov
addr16
rol
cmp
mov
jg
sbb
push
jo
cmc
cmpsl
mov
push
or
outsl
adc
sbb
push
ret
aaa
movsl
lahf
mov
ja
sub
adc
lods
pop
add
lods
cltd
cmp
in
cmp
in
jmp
arpl
iret
pusha
sbb
mov
stc
sub
sbb
pop
mov
jae
jp
xchg
adc
cld
xor
stc
pop
ds
imul
fsubrs
and
or
sub
and
xchg
or
int
bound
sbb
imul
fdivrl
addr16
lahf
fildl
in
into
xchg
mov
sub
pop
xor
mov
push
les
addr16
outsl
fidivl
mov
jmp
orb
pushf
dec
cmpsb
cwtl
les
inc
xor
or
aaa
mov
loope
les
das
pop
adc
mov
out
fs
scas
or
movsb
popf
test
lds
jb
cmc
xor
int
or
out
leave
jo
jmp
mov
mov
adcl
fidivrs
jmp
stos
decb
std
nop
pop
xchg
out
loopne
and
popf
out
dec
ret
or
adc
push
stc
lahf
mov
dec
adc
ficompl
repz
push
pushf
and
pop
mov
sbb
addr16
scas
cs
stc
cmpsl
xlat
dec
sub
or
mov
pop
int
ret
pop
cmc
dec
loope
fisttps
aam
and
push
scas
loop
roll
push
leave
push
bound
cmc
cmpsl
rorb
sbb
ds
sahf
dec
and
push
sub
in
std
or
loope
pop
sbbl
rcl
ss
cmp
sub
add
inc
xchg
pop
mov
mov
mov
xor
push
pop
notl
test
pusha
jl
mov
shr
shll
movsb
mov
inc
je
mov
mov
shlb
repz
nop
inc
sbb
jno
jle
push
sbb
fwait
mov
xchg
mov
sbb
mov
mov
push
ret
mov
push
or
inc
fdivl
push
stos
ret
lock
cltd
ss
call
sub
pop
mov
inc
das
push
scas
mov
jne
testb
rorb
mov
shl
cli
push
xchg
in
test
add
pop
mov
pop
and
cmp
stos
imul
xor
test
mov
sub
adc
push
movsl
gs
mov
jnp
push
cs
lret
mov
insl
test
lret
or
shrb
mov
or
cmp
jecxz
gs
cli
jbe
ret
cmp
push
add
gs
jl
cmp
pop
stos
iret
das
cmp
fdivrl
ficoms
leave
jno
popf
xchg
inc
rcrb
iret
cs
jns
cmpl
stos
add
xlat
addl
cmp
jmp
repnz
adc
add
xor
iret
jle
ficoml
int
push
out
push
outsl
sar
mov
loop
sti
ret
mov
sbbb
jmp
test
pop
cmp
mov
mov
fldcw
jae
ja
fcoml
inc
jbe
sub
mov
inc
jge
cld
mov
out
divb
mov
xchg
add
mov
mov
adc
or
pop
pop
sbb
dec
popf
clc
sbb
cmp
xchg
xor
test
or
shrl
and
and
cmp
mov
jne
adc
xchg
in
inc
pushf
enter
pop
movb
and
inc
data16
test
mov
jle
mov
xor
adc
push
outsl
or
cmp
fidivrl
sub
js
push
ja
cmp
push
add
aam
cmpsb
sarl
mov
pop
xchg
jne
add
shrb
pop
cmp
jnp
jg
arpl
add
jecxz
scas
dec
sti
test
icebp
adc
xchg
or
adc
arpl
lahf
and
dec
lds
repz
xchg
inc
rcrb
sbb
pusha
mov
inc
mov
or
pop
or
add
xchg
aaa
sub
lcall
cld
pop
jb
in
jnp
ret
push
mov
add
jnp
mov
pop
xor
or
jmp
jno
mov
ret
dec
sbb
mov
filds
jmp
mov
xor
shlb
and
fsubrs
mov
in
inc
insb
rcrl
outsb
xchg
or
dec
frstor
add
mov
jae
jp
xchg
mov
arpl
enter
bound
lahf
xlat
mov
jne
fucomi
inc
mov
cs
aaa
cmp
mov
or
ds
cld
sub
loop
hlt
xchg
sbb
sbbb
xor
dec
add
fildll
movsl
and
push
cmpsb
test
push
popa
aad
les
add
test
and
push
xchg
xchg
jne
or
push
aaa
pop
jl
pusha
loopne
sub
popa
adc
mov
mov
insb
mov
pop
into
movsl
or
enter
in
add
push
inc
js
movsb
sbb
cmp
pushf
xadd
pushf
push
inc
mov
fsubs
je
stc
fldcw
into
leave
and
mov
pop
sub
aam
out
popaw
add
cmp
pop
mov
mov
xchg
and
sahf
mov
lods
adc
fs
sbb
in
int3
xchg
xor
mov
popf
jns
insb
dec
popa
inc
cmp
data16
lods
in
daa
jmp
out
repz
cmpsl
push
add
movups
jle
mov
mov
loope
mov
push
pushw
ret
xchg
pop
pop
xchg
rorl
mov
cmp
jge
jecxz
lea
subb
dec
pop
ficoms
es
mov
rcr
push
pop
mov
jo
adc
cmpsl
push
fsubl
ss
leave
cmpsb
or
lods
insb
push
and
fcomps
add
and
cltd
imul
fs
jae
dec
mov
int3
push
push
loopne
rcr
stos
cld
dec
enter
loopne
cmp
mov
enter
pop
notl
js
loop
mov
add
mov
push
std
out
int3
fcoms
mov
pop
call
xor
jge
adc
mov
pushf
int
inc
imull
or
pop
mov
mov
imul
sub
mov
push
jmp
cmp
cmpsb
sahf
imul
pop
mov
ss
stos
pop
loopne
pop
sub
inc
or
fisttpl
in
and
cli
mov
or
sti
cmp
sub
stos
jne
dec
add
inc
sub
dec
mov
inc
mov
repz
inc
mov
cmpsb
push
sub
repz
push
sub
mov
lods
xor
movsl
xchg
cmp
lock
adc
loope
mov
sbb
mov
add
xchg
fcomps
ja
lods
sbb
add
mov
xchg
sub
ficompl
and
lret
clc
out
adc
fistps
lahf
mov
jle
jecxz
rorb
mov
mov
lret
inc
push
add
filds
arpl
mov
loop
mov
lcall
cmp
mov
in
xchg
adc
dec
mov
jo
shr
ljmp
test
jae
popf
aas
rorb
pop
push
and
popf
popf
push
lock
movsb
popa
ret
xor
lret
push
enter
xor
adc
test
arpl
inc
rol
arpl
movsb
fwait
dec
inc
push
addr16
mov
cltd
jp
mov
jp
test
push
and
mov
xor
ret
fidivl
mov
mov
and
int
lcall
je
mov
pop
js
jg
out
popf
aam
sub
add
cli
mov
leave
pop
jae
jmp
ja
mov
or
add
stc
push
fists
mov
sbb
mov
mov
test
mov
mul
or
icebp
ret
lahf
pop
push
push
mov
inc
cmp
and
or
xchg
pop
push
scas
fs
inc
sbb
mov
mov
xchg
mov
int3
movsb
ret
lods
jle
outsl
mov
addl
push
mov
and
adc
into
movsl
rorl
lock
mov
out
jnp
test
mov
or
pop
jecxz
or
sub
scas
fcomi
cmp
xor
sbb
mov
mov
cmp
mov
repz
xorl
lret
sub
xor
jecxz
lea
cli
sub
loopne
add
mov
cmovle
rcr
xlat
sarl
dec
mov
cmp
int
pop
shrb
frstor
pop
pushf
clc
stos
mov
and
movb
xchg
stos
inc
sbb
ror
mov
mov
xor
ret
add
insb
xor
ja
add
lock
sub
mov
testl
jno
push
cwtl
leave
sbb
add
ss
sar
mov
push
inc
lahf
in
mov
mov
fimull
aam
lcall
cmp
adc
cltd
lcall
test
mov
inc
push
bound
scas
pop
std
xchg
loopne
pusha
cli
sahf
jae
inc
jp
sbb
mov
call
mov
xchg
imulb
mov
adc
fwait
mov
add
xchg
test
std
movsb
cwtl
push
and
push
imulb
ss
loop
out
outsl
loop
pusha
rcll
xchg
popa
cmc
or
int
pop
outsl
hlt
jecxz
xor
xchg
test
pop
mov
lea
push
loop
cmp
sbbb
jne
push
outsb
js
leave
dec
int
and
inc
inc
testl
push
mov
in
cmpsb
push
sbb
cli
stos
xlat
negb
into
into
fdivs
pop
insb
mov
mov
adc
js
fisubs
lcall
xor
cli
jecxz
leave
imul
aas
sti
mov
sahf
dec
xor
sub
sarl
shr
xor
and
push
lds
pop
mov
pusha
cwtl
ficompl
cmpsl
mov
push
mov
sbb
out
xchg
fsubs
push
push
outsl
outsl
mov
out
mov
push
jecxz
cmp
mov
aaa
cmpsl
pusha
addr16
movsl
mov
ficompl
jp
leave
lods
and
hlt
push
pop
les
xchg
shlb
and
in
and
stos
and
mov
mov
rorb
popf
data16
sti
cmpb
int
loop
call
mov
xor
and
cmp
jg
das
sub
sub
std
sahf
icebp
inc
cld
mov
or
inc
xchg
jbe
les
lahf
jle
jp
mov
sbb
sbb
xchg
ss
lea
jnp
push
fadds
cmp
push
sbb
mov
push
lds
dec
inc
sub
xor
cmpsl
jp
dec
aaa
inc
in
ds
mov
aas
mov
jb
xchg
sbb
fstps
int
jb
loope
jp
mov
aas
mov
test
or
fdivp
dec
cmp
shrb
js
outsl
mov
pop
xchg
fisubrl
stos
cltd
aas
pop
movl
push
dec
push
arpl
enter
testl
addr16
jg
pop
adc
mov
into
pop
pop
mov
cld
ret
daa
lea
or
pop
mov
or
or
out
jns
rorb
clc
or
xor
mov
mov
adcl
push
call
lahf
push
ljmp
mov
xor
pop
fbld
inc
mov
pop
adc
es
clc
insl
dec
rorb
pop
dec
bound
mov
mov
scas
push
push
mov
insb
push
jo
jns
data16
xchg
mov
xchg
int
mov
dec
enter
outsl
call
js
movsb
mov
jp
xor
call
int3
imul
mov
sub
outsb
mov
sub
add
add
sub
addr16
cmp
gs
dec
jmp
xchg
adc
ror
cwtl
fnstcw
lahf
adc
sub
mov
in
xchg
inc
pop
add
add
adc
stc
cld
xchg
jns
jmp
fs
call
divb
push
rcrl
sub
test
out
push
mov
outsl
mov
jnp
aaa
in
jge
xchg
xor
ljmp
jmp
and
imul
fistl
cli
jmp
jb,pn
mov
pop
cs
mov
fiadds
clc
add
outsl
fisubrs
sbbb
lods
mov
fwait
lock
dec
fcomps
sub
pop
rclb
mov
adc
les
cmp
mov
out
shlw
test
xchg
subb
pop
in
cmp
out
and
iret
push
test
push
ljmp
add
push
and
imul
popa
or
sbb
movsb
cwtl
sub
out
inc
addl
lret
inc
fwait
dec
dec
les
sbb
sbb
and
jle
hlt
loopne
jbe
outsb
add
stos
daa
repz
les
rolb
mov
ror
mov
mov
ja
push
and
xchg
cwtl
repz
and
cmpsl
cmp
pop
arpl
cwtl
inc
lret
jne
jmp
filds
adc
mov
fcoml
mov
bound
outsl
enter
int3
stos
das
push
ret
adc
out
cmp
adc
adc
xchg
pop
adc
insb
push
add
mov
aad
imull
mov
mov
outsl
jge
mov
push
mov
inc
and
clc
fsubs
adcb
int
push
mov
nop
aaa
shrl
sbb
lods
sti
or
cmp
cs
in
loopne
nop
pop
mov
movsb
mov
orl
sahf
icebp
decl
dec
mov
jge
inc
pop
adc
and
cmp
adc
mov
push
repnz
or
fnstsw
aam
into
inc
dec
add
stc
inc
xor
fdivs
push
cmp
mov
or
idivb
scas
loope
popa
mov
fisttpl
mov
movsl
push
test
out
shr
dec
subb
or
push
adcl
dec
rcrb
mov
cmp
xchg
daa
shrl
mov
add
fcomp
inc
xchg
or
add
mov
repnz
pop
int
jbe
popa
inc
popf
push
gs
mov
or
dec
fsubs
mov
outsb
xchg
cmc
and
jg
movsl
push
decl
mov
imul
mov
addr16
cmp
lret
add
pop
aam
xchg
in
daa
rcrb
das
rolb
shrl
or
pop
pop
repnz
movsb
addb
ds
xchg
dec
xchg
add
aaa
cli
imul
sarl
sar
arpl
sbb
and
aam
sbb
sub
movsl
cmp
adc
mov
scas
inc
sub
jle
mov
push
fdivs
mov
jbe
cmp
notb
jge
mov
lcall
dec
arpl
mov
cltd
jmp
and
cltd
out
out
loope
mov
insl
stc
or
cli
xchg
jns
fcoms
fwait
jbe
out
test
mov
pushf
shlb
lods
lcall
jle
inc
push
pusha
dec
jg
stos
add
lret
out
js
mov
loop
sub
mov
mov
push
rcrb
xchg
stc
push
push
sbb
insl
mov
adc
movsl
xor
ret
inc
movsb
jecxz
in
addl
mov
and
mov
call
xchg
dec
out
hlt
fldcw
movsb
fisubl
popa
xor
adc
pop
in
aaa
sbb
mov
sub
dec
xlat
mov
xlat
shrd
out
adc
pop
arpl
std
das
xor
lret
mov
dec
cltd
inc
cli
mov
mov
xchg
jo
pop
mov
and
jp,pt
fadd
dec
fs
or
sub
bound
dec
push
loopew
xor
xchg
mov
fs
ljmp
adcb
or
cmc
mov
mov
ret
leave
or
jg
sbb
jns
repnz
nop
xchg
jbe
int
daa
ror
test
jae
ret
pop
iret
xchg
jnp
push
dec
mov
push
inc
add
mov
aas
int
push
popa
push
push
dec
pop
cmc
inc
lahf
push
fildl
sbb
in
mov
mul
sub
cmpsl
add
pop
push
and
pop
fiaddl
pop
sbb
sub
pop
jecxz
sbb
inc
outsl
jnp
xor
pushf
sahf
pop
fxch
or
jae
jnp
lret
pusha
sbb
insl
mov
adc
pop
roll
xchg
push
jmp
insb
lods
inc
clc
fwait
jg
outsl
lahf
pop
cld
test
lods
shlb
fldl
es
enter
xchg
out
pop
inc
sbb
dec
stos
fwait
dec
pop
mov
sbb
and
std
cmp
fists
xchg
sub
mov
fmuls
mov
push
imull
adc
lahf
fwait
jg
mov
and
inc
xchg
inc
lahf
popf
or
std
inc
scas
jp
add
hlt
pop
sub
pushw
mov
sub
dec
pop
std
inc
sub
pop
push
jge
pop
popa
and
jg,pn
push
dec
jae,pt
mov
pop
pop
xlat
movsb
lods
mov
clc
xchg
nop
or
mov
test
xchg
aas
sub
add
inc
lea
add
lods
popa
xor
jo
imul
push
mov
negl
cld
add
dec
mov
call
mov
out
je
push
lret
shlb
and
add
sub
cmpl
in
push
test
push
dec
fistps
mov
xor
enter
ljmp
cmp
push
dec
sub
inc
sti
lret
in
outsl
jae
jb
lock
and
stos
stc
into
int
adc
lds
stos
imul
xchg
dec
enter
mov
fisttpll
sbb
popf
ja
lods
das
pop
push
mov
imul
push
rcrb
and
out
insb
addr16
or
lods
and
add
sub
jp
jns
dec
mov
jne
scas
sbb
mov
xor
add
loop
adc
inc
popa
shll
and
je
xchg
dec
imul
cmp
scas
out
ja
add
push
mov
cltd
inc
mov
jge
aad
fcompl
sbb
adc
jae
mov
jb
and
aad
mov
push
in
adc
int3
insb
dec
cwtl
xor
mov
jle
push
daa
mov
inc
enter
int3
movsb
shlb
pop
mov
nop
sbbb
jmp
mov
xor
aad
call
in
mov
ret
jp
out
or
pop
inc
pushf
loop
push
pcmpgtd
xchg
mov
scas
push
inc
jge
add
push
push
cltd
ja
into
xchg
inc
jae
ss
lret
push
and
add
movsb
dec
pop
fimuls
add
mov
mov
pop
push
in
adc
cmpsb
jmp
and
cmp
sahf
push
imul
inc
adc
mov
add
cmp
cmpb
xor
jns
repz
cmp
clc
pushf
dec
adc
rorl
sub
ds
pop
cmp
cmp
xchg
add
lods
dec
push
loop
imul
sbb
fisubrs
or
pop
cmp
insl
adc
test
imul
mov
mov
ja
cli
les
divb
add
and
mov
pop
insb
shrl
mov
ljmp
pop
jb
test
shrl
cmp
icebp
dec
mov
cli
and
cs
inc
push
lea
mulb
add
pop
jb
xchg
lret
sbb
lret
repz
int
adc
imul
test
cld
in
sub
mov
jne
or
lret
int
lcall
jg
ja
in
mov
push
outsb
push
sbb
leave
pop
dec
jbe
mov
sahf
ret
sbb
test
andl
fldl
pop
call
sub
jl
dec
shlb
es
mov
sbb
dec
mov
push
add
and
or
movb
lods
rcrb
pop
scas
stc
dec
sarl
sahf
roll
rcrl
mov
lods
jle
mov
push
roll
dec
mov
mov
push
iret
imul
jmp
fsubrl
inc
sub
inc
mov
ffree
sub
in
divb
push
mov
rol
or
xor
sbb
icebp
movsb
shlb
fmul
int
xchg
mov
or
sub
imull
leave
stc
mov
addl
cmpsb
addr16
push
xor
and
adc
jnp
sbbl
int3
pushf
xor
cmc
ret
jo
xchg
fcmovnb
jmp
repnz
scas
jnp
push
lahf
stos
test
and
js
cmpsb
pop
repz
lds
sbb
xchg
out
data16
cmp
xchg
cld
and
add
or
js
mov
mov
jo
mov
cmp
or
mov
dec
leave
push
inc
sub
add
pop
sbb
jl
ljmp
stos
inc
mov
call
push
jp,pn
cmpsl
fs
stc
rclb
or
test
stc
and
out
mov
add
mov
inc
orb
lret
sbb
es
push
mov
sub
jg
push
test
daa
out
fsub
dec
xor
jb
xor
xchg
mov
inc
xchg
sahf
stos
js
inc
mov
push
inc
repz
scas
negl
jb
movsl
mov
rcrl
mov
test
push
mov
jnp
push
adc
in
inc
dec
cmp
jge
ja
and
repnz
sarb
xor
fldl
ret
lods
fld
lahf
push
or
jo
imul
adc
cld
out
test
rcrb
mov
add
mov
push
sbb
leave
je
sbb
std
and
jno
imul
test
leave
mov
idivb
push
dec
or
mov
repz
aad
gs
adc
shll
in
inc
or
lcall
ret
sub
inc
cs
repnz
adc
push
ljmp
pop
fimuls
mov
repz
inc
push
push
mov
dec
lret
mov
out
dec
push
jmp
or
ljmp
sbb
inc
bound
jae
les
pop
inc
pop
fcoml
sbb
sub
mov
fs
mov
faddp
inc
jge
xchg
outsb
pusha
imul
jo
imul
outsb
stos
out
xor
into
aam
push
rcr
jge
jecxz
push
les
or
aas
push
aad
arpl
mov
add
out
push
pop
pop
mov
sub
ja
mov
aaa
jg
lds
lea
sub
clc
sbb
data16
in
subb
pop
sahf
cmp
mov
jmp
mov
mov
push
inc
fbstp
or
cwtl
add
jne
push
shll
aad
or
repnz
add
ret
jb
xor
popf
inc
cli
sub
cmpsb
into
movsl
outsl
cli
xchg
loop
pop
jl
test
clc
in
or
mov
sub
or
cmp
mov
cmp
sub
sub
cltd
mov
sbb
leave
fisubrl
push
mov
and
cwtl
rolb
and
mov
xor
scas
or
cmpsl
stc
dec
cltd
hlt
ret
xchg
mov
out
ret
into
pusha
mov
inc
stos
xchg
sub
sbb
sub
or
or
dec
adc
inc
jg
iret
sbb
out
int
add
pusha
sti
and
and
dec
jecxz
push
cltd
loop
mov
pop
mov
in
stos
call
inc
imulb
lea
push
jns
sti
mov
push
movsl
push
mov
in
es
sbb
fiadds
sar
cmp
mov
xchg
out
std
bnd
inc
testl
into
push
enter
cli
pop
notl
pop
dec
cmp
lret
gs
popf
jne
jmp
lds
cltd
fisubl
insb
inc
inc
pop
movsb
push
mov
push
adc
and
push
push
mov
dec
cli
or
mov
ret
sbb
stc
loope
and
xor
mov
mov
pop
mov
cli
enter
xor
scas
mov
cmp
movsb
shrl
or
sub
xchg
add
loopne
xchg
lahf
imul
lock
sbb
subb
fcmove
repz
popa
and
movsl
mov
stos
mov
mov
stos
dec
xlat
outsb
js
sbb
popl
hlt
icebp
mov
xor
pushf
inc
jbe
test
ret
inc
dec
cmp
jecxz
adc
adc
push
loope
cmp
in
enter
in
in
ja
in
jo
shll
scas
stc
pop
dec
stos
outsb
out
sti
notb
mov
lret
inc
imul
dec
mov
int
jle
in
int3
pushf
fadds
sub
andl
and
xchg
inc
es
popf
jmp
xchg
mov
mov
iret
cmp
jge
xor
cld
jbe
aaa
jno
mov
xor
jo
cmovbe
paddb
pop
add
mov
je
fwait
push
sbb
xor
xor
mov
sub
sbb
push
mov
popf
inc
mov
jmp
push
into
dec
cld
xor
and
cwtl
mov
sahf
fnstsw
fidivrl
insl
daa
pushf
sti
dec
adc
or
clc
mov
leave
xor
insl
mov
insl
jge
xor
fs
inc
adc
lea
imul
sub
add
shlb
test
ds
repz
fistpl
sbb
jmp
fwait
call
stos
popf
sarb
lcall
jp
xor
pop
out
add
sbb
add
aad
cmp
xor
mov
aas
stos
mov
mov
mov
mov
or
in
aaa
mov
lock
sbb
pop
mov
push
inc
push
pusha
add
pop
jne
push
sbb
testl
imul
fwait
lea
addr16
andl
lret
cmp
push
popf
into
dec
divl
lcall
or
ror
mov
mov
add
test
pushf
clc
jl
je
icebp
pop
dec
std
es
sti
hlt
sbb
and
fistps
push
xchg
adcb
cmpsb
inc
ljmp
leave
or
call
xorl
xchg
outsb
sbb
popf
and
insb
adc
fs
and
adc
pop
mov
and
fbld
pop
mov
sbb
iret
popa
jecxz
fistl
and
adc
inc
dec
jb
pop
push
sbb
jno
push
ret
adc
or
adc
cwtl
out
stos
dec
daa
cwtl
out
mov
pop
push
aaa
outsl
pop
jl
push
aam
js
xchg
fmulp
cmc
or
std
and
je
mov
dec
push
push
mov
push
xlat
jno
lea
stos
sbb
xchg
xchg
xchg
pop
jnp
xchg
dec
shlb
call
scas
ja
xor
ds
mov
dec
add
cmp
push
add
addl
imul
cld
jae
in
or
loop
adc
sbb
mov
xchg
mov
mov
pop
std
cmp
popf
leave
in
mov
cltd
jb
push
popa
pop
or
pop
std
inc
fidivl
adc
mov
adc
adc
pusha
scas
inc
dec
jne
push
ljmp
ljmp
push
cmp
add
ja
int3
sbb
sub
sub
cmpsb
dec
xor
inc
pop
add
je
dec
cli
pop
pop
lds
pop
idiv
arpl
popf
or
cmpsl
fstpt
jg
mov
cli
xchg
cmp
sub
cld
les
lods
fs
add
pop
cmp
out
mov
icebp
and
fsubrl
xchg
mov
inc
pop
mov
pop
dec
xchg
adc
push
stc
pop
cmpsl
cmp
loopne
std
pop
aam
ret
or
and
inc
mov
xchg
and
scas
mov
add
push
push
inc
in
lret
sub
repz
adcl
mov
out
lock
sti
pushf
je
pop
mov
je
jp
mov
inc
xchg
pop
jmp
adc
stos
bound
inc
mov
mov
push
aaa
cli
push
ds
ret
jmp
pop
xor
xchg
pop
adcb
repnz
insb
cwtl
cmp
lcall
or
jb
loop
pusha
sub
div
jmp
les
pop
enter
gs
lcall
outsb
in
pop
dec
inc
and
and
popf
aaa
xor
xor
add
inc
push
mov
add
push
leave
stos
pop
xchg
add
iret
adc
clc
std
pop
mov
cmpsb
ret
push
call
xchg
out
xchg
pop
sbb
add
out
or
dec
push
jb
xor
add
enter
fucomp
fsts
jno
daa
fidivrs
xor
inc
or
mov
ja
insb
jo
inc
adc
fcmovu
cld
pop
mov
jo
loope
jmp
movsl
push
mov
add
adc
sub
cmc
jns
jno
dec
cld
iret
fstpt
mov
sub
xor
stos
fsubrl
daa
lds
sub
push
adc
xchg
sbb
adc
pop
scas
push
lret
mov
jbe
lods
cmp
mov
scas
mov
lret
xlat
xchg
int
xchg
ret
lret
jge
enter
testb
stc
inc
push
cmpsb
stc
push
push
out
mov
xor
orl
xor
mov
add
pop
daa
insb
cmp
push
sbb
sbb
pop
lea
mov
push
xor
gs
pop
dec
into
xchg
addr16
bound
sahf
imul
lret
fisttps
mov
push
jne
mov
fmuls
pusha
sbb
or
cltd
xchg
fs
movsl
cmp
sub
sub
mov
xchg
cmpsb
loopne
rcrl
mov
sub
dec
mov
ret
lret
ds
sbb
movsl
sbb
pushf
test
repnz
cmp
testb
cmpsb
loopne
rolb
movsl
dec
pop
int3
es
add
inc
xchg
xstore-rng
cmpsl
inc
cmp
add
addr16
bound
imul
insb
mov
sub
idiv
and
inc
or
loope
xchg
call
cmpsb
jp
mov
mov
sahf
add
scas
repz
and
shll
sbb
lods
adc
in
sahf
xor
into
sbb
dec
dec
loope
xchg
mov
enter
test
addr16
inc
sub
cmp
jns
lcall
fadds
rclb
sub
loope
cmp
dec
setg
out
push
sub
jl
add
push
in
mov
cltd
or
out
adc
fistpl
dec
mov
jp
push
fwait
jo
lcall
mov
ret
push
inc
cmpsl
lock
inc
dec
mov
aas
jp,pn
and
addr16
out
push
das
and
ds
bound
sbb
pushf
movsb
inc
jae
jge
movsb
or
jnp
nop
aam
in
cmp
jo
mov
cmp
mov
xchg
sbb
sbb
inc
cld
rcrl
dec
xchg
cli
sbb
stc
ss
scas
mov
stc
or
mov
out
pop
and
test
sarb
test
fmuls
test
xchg
aam
out
je
inc
lcall
cmp
aas
push
fdivrl
sahf
cmp
into
or
dec
and
xchg
push
jle
xchg
jl
push
data16
or
divl
stc
outsl
add
and
jns
xor
inc
pop
jmp
xchg
cld
inc
leave
pop
nop
scas
cmp
pop
stos
cmpsb
xchg
and
test
test
fistpl
cmpsb
mov
lods
notb
sub
aad
xchg
sbb
inc
orb
es
inc
sarl
cltd
gs
mov
jbe
aam
stos
mov
and
ret
jns
inc
adcb
aam
fsubrl
pop
push
clc
out
shlb
popa
mov
push
shll
fistl
jbe
mov
stos
push
xchg
add
cmp
inc
lds
mov
hlt
pop
stc
lret
xor
add
mov
movb
xchg
lods
adc
stos
icebp
push
push
aad
test
xor
and
repnz
add
xchg
idivl
stos
jge
xor
mov
stos
imulb
arpl
jg
cld
mov
inc
pushf
ja
cmp
mov
xchg
stos
mov
rclb
jg
dec
fnstsw
inc
pop
cld
stos
push
ljmp
or
popa
mov
dec
mov
les
inc
xor
shll
jne
and
or
push
stc
imul
lock
mov
mov
adc
cmpsb
mov
xor
push
fisttpll
or
push
clc
cmp
scas
mov
jmp
arpl
mov
bound
test
cmpsl
push
adc
mov
incl
dec
jne
pop
fisubl
and
jns
jne
movl
xchg
incb
push
jbe
mov
or
jno
xlat
mov
lds
test
or
stos
xchg
stos
sbb
mov
push
push
jae
sbb
pop
fdivr
movsl
adc
add
xor
popa
out
add
movsl
jle
dec
xchg
int
xor
adc
cmpsl
rclb
cs
cmp
sub
popf
lahf
xor
inc
je
sub
lods
pop
dec
je
cmpl
sti
mov
push
push
insl
pop
xchg
mov
cli
nop/reserved
adc
jbe
inc
or
pop
insb
cli
incb
push
out
or
scas
lea
ficomps
lcall
mov
adc
xor
popf
inc
xchg
pop
push
movsb
pop
dec
xchg
inc
adc
adc
in
lods
xor
jl
or
addr16
adc
lea
test
aaa
iret
stc
cmp
andb
push
cmp
lahf
sbb
push
pop
mov
dec
mov
test
int
hlt
cmp
cmp
inc
and
xlat
mov
pop
inc
in
repz
std
xchg
sub
andb
shr
xlat
inc
lds
lret
mov
test
andl
jl
jb
fistpll
loop
add
or
xchg
adc
adc
dec
imul
fstpl
dec
push
adc
inc
fwait
mov
mov
xlat
push
ret
ljmp
sbbb
nop
insl
mov
jl
push
xchg
out
mov
popa
xor
es
mov
push
pop
dec
add
lret
push
in
and
xchg
cld
bound
push
pop
jns
jo
inc
call
das
mov
test
jbe
sbb
jge
inc
xchg
jge
arpl
mov
lods
xchg
add
out
jae
sub
cmp
jmp
add
push
adc
data16
imul
test
or
mov
xchg
jns
stc
inc
lahf
mov
je
xor
lods
push
push
insb
push
and
int
mov
iret
jne
ds
cmp
dec
popa
clc
mov
xchg
xchg
mov
adc
and
nop
roll
xchg
stos
sarb
adc
movsb
pop
mov
loop
xchg
pop
int3
hlt
loope
int3
xchg
cld
jp
insl
insl
push
xor
and
inc
movsb
add
imul
lret
into
jae
daa
in
scas
sub
pop
dec
jmp
jnp
outsl
bound
mov
jb
push
ss
test
xchg
mov
pushl
cmc
inc
fldt
cmp
mov
ss
divb
mov
push
icebp
jo
mov
mov
or
mov
idivb
aas
fnstcw
fadds
in
or
jle
inc
mov
fs
sarl
int
xchg
mov
cwtl
cmp
ja
or
dec
add
iret
test
inc
push
in
popf
loop
dec
xorl
pop
std
test
push
aam
sub
fistpl
xor
test
aad
inc
scas
test
jmp
js,pn
xchg
negb
mov
push
xor
cmp
push
es
pop
insl
xchg
sub
outsl
clc
aas
fiadds
sti
in
popf
inc
cmp
outsl
sti
push
iret
mov
imul
jmp
xchg
enter
fsts
adc
lahf
mov
ret
cmp
hlt
mov
mov
mov
lods
call
out
insl
test
xchg
xchg
stos
jo
mov
imul
rcrb
push
lds
test
dec
in
outsb
sbb
testl
repz
pop
pop
xchg
clc
jecxz
jecxz
out
xchg
xor
xchg
sub
push
mov
add
or
xchg
adc
jle
pop
fldenv
add
xor
fsubrp
push
inc
sbb
mov
ffree
sahf
sqrtps
das
scas
dec
mov
aaa
sarb
loopne
scas
lods
aad
lret
addb
mov
cli
addr16
fdivrs
pop
subl
add
out
es
dec
push
adc
mov
bound
mov
loope
jg
push
insb
out
pop
push
pop
shrl
mov
mov
adc
clc
imulb
add
in
adc
call
push
test
adc
jb
cmpsb
xchg
fdivrp
inc
sub
pop
sbbb
mov
out
xor
rorl
pop
xchg
fidivl
push
mov
jb
aaa
cli
cld
pop
outsb
and
aaa
lods
mov
shr
nop
sbb
neg
push
icebp
push
jl
mov
push
mov
and
sbb
rorl
adc
dec
int3
sbb
popf
lock
dec
movb
and
les
xchg
sbb
je
leave
idiv
outsb
outsb
mov
fxch
push
push
jmp
dec
sub
xchg
movsl
scas
xchg
cmp
jmp
sbb
fwait
jno
push
sub
lret
dec
insl
add
loop
popa
dec
sub
jg
or
cmp
test
aaa
lock
add
pushf
loopne
fistl
mov
cmp
inc
push
sub
inc
aam
ret
lahf
push
jl
dec
sbb
jp
xor
xorb
pop
cmp
xor
cwtl
add
loope
pop
adc
xchg
sub
inc
cmpsl
in
hlt
push
dec
ljmp
add
adc
mov
mov
add
frstor
nop
mov
xchg
xchg
sub
push
popa
xchg
add
cmpsb
sti
sbb
and
shrl
repnz
and
fidivrl
dec
cmp
test
rorl
subl
je
inc
push
out
test
insb
push
gs
add
int3
shll
xchg
in
fisttpll
stos
fsubrl
mov
sbb
mov
stos
mov
mov
sbb
xchg
sahf
out
push
gs
cmc
push
pop
or
pop
fistpll
andb
dec
lds
mov
stos
cs
in
imul
jp
lods
inc
push
push
xchg
pop
and
adc
mov
xor
add
and
stc
outsb
aaa
out
sub
ja
ljmp
je
jnp
mov
and
inc
adc
sub
push
jge
push
gs
addr16
mov
pop
dec
loopne
fisubrl
out
inc
sub
shr
dec
aaa
int
xchg
adc
or
fistps
xchg
inc
mov
mov
cmp
xorl
aaa
add
push
mov
jl
push
sbb
test
ds
int3
sub
add
mov
jo
pop
pop
pop
sub
jno
add
xor
rclb
mov
dec
or
out
mov
inc
mov
pop
insl
fs
sti
xor
popa
cmp
adc
loopne
add
es
cld
mov
hlt
sbb
aad
roll
ret
mov
das
or
sar
imul
daa
mov
and
jb
aas
pop
inc
repz
imul
mov
or
push
add
int3
adc
sti
or
and
outsl
ljmp
aam
loope
or
cmp
les
je
cmp
sbb
fucomi
xchg
loope
push
mov
sbb
mov
and
cmpsl
sbb
xor
nop
mov
pop
test
mov
push
stos
fs
icebp
outsb
loope
push
mov
fstps
push
in
xorb
iret
fistpll
leave
jne
mov
lods
daa
gs
or
xorb
push
addr16
jbe
rclb
popa
outsl
or
and
out
or
or
std
aaa
inc
mov
jbe
ficompl
pop
jl
fiadds
pusha
ljmp
or
mov
adc
test
pop
rep
loopne
mov
push
or
rclb
mov
mov
xchg
pop
jne
cmp
lret
in
clc
push
cmp
mov
into
xor
ds
cmpsl
cld
xor
pop
and
lds
sub
test
lea
dec
test
dec
push
inc
rcrl
push
loopne
inc
mov
loopne
xor
movsb
jno
lods
filds
pop
lret
jge
in
xlat
cmp
cmc
jmp
push
add
mov
mov
gs
mov
mov
push
bound
dec
sub
bound
mov
test
sahf
loopne
sub
scas
adc
lcall
mov
dec
sub
and
mov
stc
add
xor
sbb
imul
or
push
cmpsl
jns
out
pop
stos
rcr
js
popa
pop
ret
aam
xor
cmpsb
add
jae
mov
decb
repnz
jg
addb
ja
cmpsb
pop
xchg
or
out
out
hlt
repz
sbb
rorb
dec
cld
movsl
cld
adc
xor
adcl
pusha
rcll
movsl
popf
aaa
mov
shlb
pop
pop
test
cli
aam
mov
lcall
aad
bound
and
xchg
adc
cmp
test
dec
and
test
inc
fimull
jo
or
adc
sbb
mov
mov
lret
pushl
loop
cmc
dec
mov
in
dec
push
loopne
push
jp
xchg
cmp
js
inc
xor
arpl
cmp
sti
mov
sti
adc
int
add
lahf
cs
pop
dec
arpl
jecxz
jae
stc
dec
daa
mov
jg
aaa
pop
pop
pop
jno
pop
popf
sub
mov
loop
sub
clc
jecxz
pop
adc
scas
sarl
push
dec
hlt
fisubrs
stos
sub
mov
and
mov
sub
sbb
xor
add
add
xchg
add
loope
mov
fsubr
add
push
add
mov
push
ds
lcall
in
sbb
xchg
ljmp
leave
cmc
pop
les
xchg
push
xchg
insb
xor
daa
in
lds
xchg
push
add
sti
dec
into
mov
mov
mov
push
or
inc
jbe
xchg
jne
sbb
jb
daa
inc
inc
ljmp
outsb
scas
xor
movsl
mov
das
and
add
popa
mov
cmp
stos
and
and
or
jmp
cmp
inc
inc
cltd
sti
je
in
fstp
push
inc
mov
fimuls
xorb
push
ret
fwait
xor
push
fnsave
mov
pop
fists
sbb
and
repnz
jo
int
loopne
and
mov
sbb
popf
fs
test
loopne
sub
xor
sub
adc
jno
xchg
sbb
mov
jmp
out
xor
std
mov
fistpll
in
add
mov
mov
aaa
or
cmp
lret
xchg
loop
test
mov
xchg
loope
cmp
mov
popf
daa
push
scas
daa
lds
test
ret
imul
and
xchg
jb
lods
push
aad
jo
js
jge
mov
out
mov
cld
push
mov
mov
mov
fsubrl
ljmp
fldt
add
inc
in
mov
stos
test
psubsw
mov
daa
sub
addr16
cmp
jo
call
es
inc
dec
pop
mov
lcall
stc
mov
dec
lods
push
incb
mov
stc
imul
mov
jns
mov
xchg
xor
mov
pop
orl
and
sarb
orb
push
inc
push
push
mov
jp
lea
dec
bound
mov
pop
push
in
test
test
ret
repz
insb
das
adc
jg
push
lahf
xchg
mov
sti
or
push
inc
inc
mov
and
int
inc
outsl
push
mov
testb
aas
mov
in
inc
sub
xchg
sub
cmp
cltd
into
mov
fimuls
mov
insb
dec
loope
adc
mull
xchg
pop
roll
cld
loop
es
scas
dec
ret
sti
nop
frstor
jmp
out
sahf
rorl
cmpsb
adc
mov
fcoml
loop
aam
out
addb
or
imul
inc
out
jge
pushf
and
xchg
cmpsb
jno
mov
aas
fdivr
inc
sbb
jle
jmp
aas
int3
fadd
cmp
insb
add
popa
push
inc
fdiv
stos
clc
fstpt
inc
inc
fcoms
cmp
jnp
ret
je
mov
aas
loop
das
dec
sub
pop
imul
mov
addr16
sub
inc
mov
fs
adc
add
inc
test
add
add
cmp
and
imul
xchg
iret
push
idivb
adc
sbb
xor
jo
add
popf
sub
cmp
mov
in
popf
push
jl
pop
xchg
dec
lods
leave
lock
lret
dec
fcmovu
addl
fnstcw
es
fimuls
cmp
mov
aad
cmp
or
xor
sub
adc
outsb
in
fnstenv
xor
xor
cmp
inc
and
dec
mov
mov
out
dec
cs
add
adc
xchg
out
pop
adc
jb
fcomps
xchg
movsb
nop
dec
cmpsl
dec
call
sub
lea
popf
icebp
jp
in
int
push
int
nop
xchg
jecxz
lock
stos
inc
pop
pop
jge
ror
push
fcoml
pop
add
ror
inc
clc
lock
leave
in
rclb
icebp
ret
mov
inc
adc
push
test
and
dec
cmp
jge
mov
ficoms
fcompl
test
jle
sbb
sar
aad
shrb
mov
lock
lcall
mov
xchg
hlt
addr16
xor
out
jg
les
xor
xor
adcl
jbe
mov
mov
cwtl
cmp
mov
pop
scas
pop
push
das
mov
push
xchg
movsl
dec
int
cmp
orb
out
inc
push
xchg
xor
dec
jo
push
xchg
adc
mov
int3
stc
mov
xor
push
sub
dec
scas
or
movsl
shll
inc
mov
xlat
aad
outsb
and
mov
mov
xor
mov
sarb
lds
mov
pop
push
push
bound
outsl
dec
mov
jns
pop
adc
mov
hlt
pusha
pop
sbb
cmpsb
adc
and
daa
jo
mov
or
ja
gs
movsl
stos
add
scas
mov
mov
stos
or
loopne
repz
add
adc
inc
repnz
dec
or
jmp
or
sbb
addb
roll
mov
rcrl
mov
dec
gs
xchg
sub
sbb
test
sub
jle
andl
cmc
shrb
or
leave
pop
aas
add
xchg
cld
nop
push
dec
mov
popf
arpl
pop
xor
les
stos
sti
mov
loope
xchg
fcmovu
pop
jp
mov
xchg
mov
mov
sahf
cmpsb
icebp
dec
pop
xor
mov
fwait
rorb
mov
jnp
fstpl
aas
pop
mov
mov
push
sub
jecxz
shrl
jg
in
sub
add
mov
fisubl
add
jno
rorl
aad
jp
mov
out
xor
xor
jb
sub
or
adc
push
sbb
dec
cmp
rolb
mov
fisubl
mov
sbb
cld
lods
cli
dec
shlb
sti
xchg
ret
cli
adc
sub
fdivs
sarb
cmp
subps
mov
incb
xor
out
jb
sub
movsl
mov
add
mov
jnp
leave
push
push
dec
testl
xchg
ds
sbb
and
int3
xor
std
ljmp
enter
mov
xchg
jbe
xchg
ret
jecxz
pop
test
xor
sbb
es
push
loop
mov
mov
mov
das
out
arpl
jge
fbstp
adc
cmc
test
and
stos
shll
xlat
pop
imulb
test
out
cli
or
mov
lds
ss
arpl
pop
scas
xchg
je
jecxz
cmp
or
daa
xchg
js
fs
sbb
xchg
pop
xor
xor
lock
movsb
sti
cld
inc
xor
rol
push
decb
rcrl
jecxz
out
xor
test
cmp
xchg
in
jno
pop
pushf
int
adc
stc
rorl
rorb
mov
xor
or
dec
aam
jb
dec
push
data16
dec
cmp
jmp
sub
je
cli
loop
pxor
dec
pop
pop
pop
aad
testb
loop
inc
xor
fwait
lahf
inc
push
pop
jge
psrad
jle
sbb
push
fimuls
xchg
int3
into
pop
repnz
clc
inc
push
out
inc
xlat
add
add
test
xchg
pop
sti
insb
pop
addb
loop
mov
xchg
sbb
mov
pop
mov
xor
outsb
mov
incb
iret
cmp
push
inc
or
inc
fs
testb
pop
repnz
mov
lds
xchg
sti
xchg
sbb
aam
push
sbb
in
xchg
sbb
jbe
loop
aam
jmp
mov
mov
ds
sarl
negb
jmp
dec
xchg
mov
pop
adc
pop
push
sub
dec
xor
ret
pop
in
scas
dec
push
mov
dec
rol
mov
aad
rclb
ds
pop
xchg
and
xchg
loop
idivb
pushf
inc
dec
dec
inc
lret
cmpsl
mov
adc
mov
jg
pop
jmp
int3
mov
pop
xchg
mulb
aaa
je
mov
sahf
cli
pushf
dec
push
and
inc
loope
arpl
cwtl
cwtl
mov
fimuls
std
push
push
mov
sub
push
pusha
push
insb
aaa
into
sbb
insl
into
loope
jl
test
hlt
imul
int3
xor
aam
ljmp
dec
mov
call
iret
ja
les
add
icebp
mov
mov
xchg
mov
cs
lcall
mov
sti
lcall
cmp
movsb
and
addr16
leave
or
cwtl
dec
sbb
pop
out
cli
lret
adc
jae
mov
mov
int
iret
imul
jno
lcall
shrl
mov
pop
cld
cld
cs
loope
cmpsl
mov
cbtw
or
pop
cs
data16
jae
xor
lret
outsl
fcoml
aad
push
divb
and
mov
outsb
cld
jo
dec
inc
mov
xchg
arpl
stc
xchg
dec
jo
in
pop
add
stos
or
daa
or
or
xorb
mov
pop
negl
pop
clc
sbb
test
adc
vmaxps
test
push
mov
or
rol
lret
enter
scas
dec
insb
mov
jne
mov
movsb
pusha
movsl
or
cmp
test
iret
sbb
call
or
pushf
fcmovnbe
mov
movsl
and
shlb
ljmp
popa
add
mov
in
clc
test
jnp
cmp
ss
enter
cmc
loope
pushf
pop
jmp
icebp
decl
imul
loope
js
jecxz
ret
lcall
enter
mov
lret
mov
lret
aad
mov
or
dec
mov
add
add
push
aam
xor
cmc
aad
mov
mov
mov
stos
cmp
inc
in
pop
add
mov
xor
dec
cmp
imul
sub
in
jns
push
dec
jg
dec
pop
stos
insl
ja
xchg
jle
sbb
clc
pop
mov
pop
push
or
mov
rclb
pop
or
call
pop
add
xor
dec
std
movsb
inc
sbb
ret
fstpl
add
fwait
add
inc
lahf
xor
lahf
call
cmp
inc
pop
inc
ror
icebp
dec
hlt
push
sub
xchg
xchg
jmp
in
ret
xor
mov
push
add
mov
fdivrp
stc
cli
jmp
ja
pop
mov
xchg
xchg
mov
and
add
insl
bound
pusha
cmp
add
iret
rcrl
jb
sbb
sbb
dec
fcoms
cmp
adc
enter
lcall
rcrb
stos
xchg
ss
jae
cmpl
and
int
in
in
push
out
repnz
cs
es
add
pop
aad
dec
hlt
or
mov
cmp
sub
lret
add
ficoms
and
fildll
jae
add
scas
insl
sbb
or
movsb
inc
adc
push
xor
sbb
scas
cmp
mov
out
push
hlt
pop
lahf
or
sahf
dec
pop
test
inc
inc
xor
fwait
out
rorb
jb
xor
inc
cmc
call
jb
ret
jne
scas
loope
pop
imul
add
dec
pusha
bnd
add
iret
xchg
adc
or
hlt
stos
jecxz
jb
dec
or
insb
insl
fsubr
shll
imul
push
pusha
loope
arpl
and
fimuls
outsl
lock
pop
xchg
pop
xchg
ds
cmp
loope
pop
jg
xor
or
popl
dec
xchg
push
inc
fistpl
inc
pushf
push
bound
popf
add
daa
lock
sub
int
jb
mov
rcrl
add
pop
pop
mov
push
bt
push
xor
xor
xor
mov
push
loope
dec
xor
and
dec
inc
stc
cmp
fldenv
xor
and
inc
mov
jae
stc
pop
jmp
add
and
sub
out
pop
test
or
mov
stc
fnstsw
push
and
sub
mov
sub
sbb
or
cld
dec
jb
mov
div
sub
cs
rcrl
cli
sub
push
xlat
and
test
imul
push
push
in
push
add
lea
and
jmp
pop
dec
incb
push
out
stc
outsb
arpl
out
or
inc
repz
cmp
sarl
add
adc
jae
jle
cltd
ljmp
xor
repz
hlt
pop
cmp
mov
xor
imul
add
sbb
mov
sub
gs
xchg
or
push
call
es
add
les
lock
stc
fisubrl
pushf
mov
repnz
or
dec
icebp
sbb
fwait
sub
pop
cli
and
xchg
sub
xchg
ret
iret
cmc
addr16
dec
pop
dec
in
test
xor
repnz
inc
sub
mov
adc
cmpsb
push
lret
or
mov
mull
add
cltd
xlat
add
jmp
sbb
in
inc
enter
mov
jmp
jnp
jnp
inc
aas
mov
cmp
jns
jecxz
push
leave
lret
pop
stos
repz
cwtl
mov
and
mov
mov
dec
cmp
pushf
jae
stos
jl
dec
push
notrack
add
jo
fnsave
filds
push
sarl
dec
or
xchg
rcll
sub
mov
lret
in
nop
fisubrs
loop
push
std
shll
je
lcall
inc
faddp
jne
test
and
push
add
cmp
and
sti
add
cmp
push
jg
aaa
dec
cmpsb
push
in
dec
jo
test
bound
pushl
repz
sub
add
adc
jns
mov
pop
test
sbb
fdivr
push
cli
icebp
and
dec
mov
adc
jno
or
or
inc
pop
fisttpl
and
xchg
popf
mov
dec
bnd
in
not
jg
mov
pop
push
lods
iret
inc
insb
jbe
ror
mov
jo
add
fwait
loopne
mov
pxor
cwtl
and
or
jo
push
dec
pop
jae
cmpb
pop
dec
push
mov
fwait
shlb
sarb
daa
add
addr16
xchg
aas
scas
sarl
sarb
shll
negl
mov
stos
test
pop
loopne
pop
jno
jns
and
dec
aad
xchg
inc
aas
stos
jp
pop
dec
push
popa
adc
adc
cmp
int3
xchg
in
imul
or
xchg
or
jnp
push
arpl
mov
add
imul
dec
ret
rclb
push
out
or
jns
mulb
add
pop
jno
stos
popf
and
fwait
aas
in
arpl
dec
lahf
outsb
sub
insl
test
cmpsl
aaa
imul
push
push
movsb
lock
push
jnp
xor
insb
pop
pop
and
rol
sbb
aam
addr16
fmul
or
in
out
and
xor
call
sub
dec
cmp
lods
insl
dec
or
lods
push
imul
popf
sbb
je
shll
movsl
leave
mov
push
cmpsl
cwtl
add
movsb
data16
cltd
jne
xor
pusha
addr16
in
xor
sbb
testl
shrb
fucomp
mov
xor
addps
scas
jle
je
leave
loop
mov
xchg
xchg
into
adc
push
mov
rolb
int3
mov
pop
lods
les
jnp
mov
jle
or
cmp
fdivrp
sbb
jo
push
test
mov
imul
dec
icebp
add
rolb
adc
arpl
rdpmc
lret
cmpsb
lret
mov
cmp
dec
shlb
inc
and
push
mov
sbb
add
outsl
sub
pop
arpl
dec
test
sub
dec
pop
loop
cmpsl
sarb
cwtl
mov
ror
jb
lret
idivl
cld
dec
push
outsb
or
dec
inc
test
sbb
out
and
sarb
pop
mov
les
je
inc
lds
inc
sub
scas
sub
jp
xchg
out
mov
out
testl
shl
or
sahf
xor
scas
or
pop
shrl
call
sbb
jge
lds
jns
sar
fildl
cmp
inc
lea
fistpll
inc
cli
jecxz
out
or
sub
push
popf
test
xchg
stos
inc
call
mov
mov
mov
jns
je
xchg
or
mov
and
mov
adc
xor
repnz
inc
pop
das
stc
cmpb
movsb
inc
xlat
cmp
lea
idivl
out
mov
xor
xor
push
and
sub
jle
push
cmp
mov
loope
int3
mov
push
mov
out
movsb
idivl
pop
adc
out
mov
cmp
stc
xorl
inc
loop
inc
subb
inc
cmp
stc
adc
mov
out
mov
ds
and
jnp
lret
test
push
xchg
xchg
fwait
test
adc
cmp
inc
mov
insl
loop
xor
add
inc
and
addb
les
and
ret
arpl
rolb
lret
adc
or
outsb
inc
int
inc
cmp
cltd
and
push
sti
cmc
jmp
test
mov
fwait
sbb
add
and
cmpsl
inc
jle
cs
ds
cld
or
std
jmp
pushf
mov
aam
aad
inc
lahf
je
ss
cmp
fildll
lgdtl
cld
fimuls
shlb
cltd
xchg
lods
jmp
out
xchg
jbe
push
sbb
sbb
leave
add
daa
jbe
shll
ljmp
xor
in
mov
mov
mov
and
js
imul
fldl
into
aas
leave
push
rcrl
inc
js
mov
cmpsl
and
xor
movsb
sahf
into
sbb
nop
inc
sbb
inc
and
lea
decl
into
jno
push
cld
push
cmp
stos
imul
cld
movsl
mov
jle
fildl
inc
test
adc
cmc
and
scas
neg
icebp
sub
jmp
xlat
popf
ss
mov
gs
cmp
pop
and
lret
jp
aaa
pop
xor
sbb
push
sahf
and
pop
xchg
fimuls
outsl
xor
orb
inc
lock
popa
push
popa
clc
pop
das
sbb
jae
cli
rorl
test
xchg
in
fisttpl
adc
outsl
adc
dec
ret
insb
mov
cmp
sbb
xchg
ds
roll
xchg
stc
inc
xor
cmp
push
pop
fadd
mov
mov
inc
push
ds
sbb
mov
sub
popa
inc
add
mov
into
dec
inc
es
fwait
je
ret
scas
mov
sbb
pop
dec
mov
cltd
lock
int
mov
mov
jmp
clc
cmp
inc
jmp
pusha
xor
jmp
lods
hlt
add
in
imul
fcoml
inc
dec
or
shr
sub
sbb
mov
sbb
imul
dec
dec
lea
lret
xor
ficompl
adc
jnp
rolb
push
mov
fs
rcr
or
mov
cld
inc
idivl
inc
push
and
push
lahf
pop
push
mov
adc
push
fwait
rorb
outsl
dec
pushf
mov
cmp
push
sub
fdivl
ds
test
out
bound
xchg
mov
push
cwtl
hlt
fs
mov
roll
fidivrs
icebp
add
pushf
or
xchg
fsubs
sub
imul
lcall
or
arpl
pusha
add
mov
test
int3
jle
loop
cs
mov
jo
out
add
xchg
lock
data16
mov
mov
push
repz
xchg
xchg
cwtl
mov
aad
sbbb
icebp
scas
pop
xchg
pop
inc
xor
pusha
js
cwtl
jae
sub
mov
lret
inc
repz
sub
adc
out
or
inc
cmp
mov
push
pop
xor
mov
xlat
sub
fs
jle
leave
ja
add
and
xchg
ljmp
popa
mov
sub
lock
out
mov
fsubs
and
lahf
movd
stc
or
in
push
or
clc
repnz
dec
inc
test
mov
mov
adc
pop
pusha
loope
xchg
ja
pop
fsincos
imul
dec
loopne
pop
test
sbb
dec
pop
shll
std
ss
push
inc
lea
psubsw
pop
stc
or
mov
fnstsw
int3
sub
icebp
ret
and
mov
lret
jmp
shl
push
lds
popf
add
fisubs
out
push
bound
fs
or
mov
push
push
inc
sbbb
push
or
add
jae
jmp
das
adc
repz
fadd
bound
sbb
pop
sbb
pop
and
scas
std
mov
mov
mov
inc
rcr
imull
adc
xlat
xchg
mov
adc
push
pop
xchg
xor
push
mov
cmp
aas
sti
mov
inc
jae
cld
mov
add
or
pop
sar
push
das
inc
scas
pop
sub
aas
test
adc
dec
xor
lds
in
inc
xor
ret
ss
pop
jg
sti
cmp
popa
inc
out
push
sarb
fs
mov
jno
mov
inc
adc
sub
pop
mov
xor
insl
clc
fcmovnb
inc
and
daa
fldl
mov
mov
xor
add
add
jmp
arpl
pop
cmp
std
in
gs
pop
push
fcmovne
xor
jle
or
xchg
ffreep
mov
test
pushf
inc
sbb
ret
pusha
lods
push
xor
lods
push
sbb
mov
pop
lods
repnz
mov
out
push
or
xor
push
clc
pop
icebp
push
inc
xlat
xlat
and
mov
jecxz
add
in
lock
aad
loopne
lods
jnp
loopne
lds
mov
push
cltd
xchg
mov
cs
cmpsb
sarl
popa
jmp
xor
loope
jmp
rcrb
cmc
jg
mov
mov
cli
sti
push
pop
mov
idivw
jae
mov
mov
movb
mov
dec
mov
mov
mov
mov
lahf
and
mov
sub
and
jno
addr16
data16
jbe
sahf
cmpsb
shlb
mov
push
cmpsl
ror
xchg
test
push
lds
pop
or
inc
pop
addr16
cmpsl
test
in
out
out
arpl
lds
das
daa
pop
xchg
shr
inc
cmp
pushf
in
popf
dec
xor
jns
sti
shlb
sub
xchg
push
inc
inc
lret
mov
outsl
cmp
jg
rcll
cwtl
out
ja
xchg
mov
ljmp
mov
mov
sbb
jp
or
mov
cmpsl
xlat
movsb
dec
scas
icebp
mov
ds
fs
pop
test
daa
shll
inc
push
jmp
xorb
pop
push
sbb
loope
mov
out
iret
outsb
xor
or
or
sbb
rcl
xchg
mov
and
jns
add
movsb
sub
jg
fdivr
loop
popa
andl
jbe
xor
lret
fwait
cli
in
das
and
test
inc
lods
int
mov
mov
mov
sub
loope
xchg
dec
xor
fstl
ss
lret
test
subl
pop
repnz
testl
nop
lods
inc
rorb
inc
xor
and
lahf
sub
jl
stc
icebp
das
lock
rcll
pop
pop
inc
pop
inc
push
xor
mov
aad
pusha
js
cmpl
leave
and
jge
inc
pop
xchg
sti
out
pop
les
gs
negb
xor
xor
pop
and
xor
mov
jmp
jge
and
mov
daa
jle
lcall
js
ja
xlat
es
outsb
mov
mov
or
lds
cmp
jp
lea
push
cmp
insl
in
mov
xor
test
mov
push
out
adcb
insl
mov
cmc
mov
sahf
inc
addr16
mov
sub
sahf
mov
xchg
fidivrs
lods
or
jnp
in
sbb
sbb
dec
je
scas
xchg
mov
aam
int3
dec
jmp
cmp
mov
es
mov
aaa
test
sti
iret
int
js
jmp
jmp
fs
ret
es
lock
jne
fdivrs
icebp
imul
push
pop
stos
dec
cmp
lret
inc
dec
popf
add
outsb
jmp
cmc
cmc
xor
testb
addr16
lds
cs
aad
jnp
in
lds
adc
inc
jo
xchg
inc
in
lods
outsl
arpl
add
inc
rcrb
scas
outsb
lret
jg
repz
repnz
loopne
lea
sub
cmp
stc
xorl
xor
rcrl
add
je
dec
xor
mov
xchg
std
pop
les
or
xchg
sbb
fbstp
imul
push
cmpsl
pop
or
fisubrl
mov
push
aaa
scas
push
loope
jno
bswap
and
xor
cmp
xchg
cmp
mov
sbb
imul
out
xchg
scas
fs
mov
pusha
cmp
inc
lods
xchg
ficoml
lret
pop
or
sub
cmpsb
sub
arpl
and
mov
lock
icebp
in
push
ja
lea
push
add
cmpsb
addr16
jp
inc
idivl
cmp
fildll
inc
jp
or
es
sub
push
movsl
sub
sub
cmpsb
sub
jl
xchg
sbb
das
add
cmpsb
ficoms
dec
fiadds
dec
loop
mov
aaa
pop
insl
xchg
sub
dec
inc
imul
mov
insl
xlat
leave
mov
mov
fcoms
sbb
insl
dec
ret
or
leave
scas
mull
clc
mov
push
dec
loope
rolb
cltd
jo
sahf
mov
aad
inc
xor
out
and
add
sbb
adc
cmp
cmp
mov
faddl
jbe
mov
mov
xor
jnp,pn
xchg
enter
mov
jecxz
js
mov
inc
popf
inc
push
aam
mov
and
adc
rcl
data16
push
out
mov
sahf
mov
fiadds
aaa
push
xchg
or
jb
and
cmp
lret
aam
mov
sbb
xchg
sti
inc
or
loopne
mov
sbb
aam
cs
mov
lret
mov
dec
ror
adc
popa
sarl
addb
pop
enter
mov
inc
pop
mov
push
xchg
dec
xchg
push
addb
sbb
loope
mov
ljmp
push
and
fwait
mov
mov
scas
cmp
stos
aas
pop
mov
push
fsubl
inc
sub
mov
or
xchg
mov
push
or
call
loop
xor
loop
data16
pop
fstl
adc
adc
dec
mull
add
fs
cli
mov
jp
fisubl
mov
mov
or
xor
into
loop
jnp
cmpsl
mov
xchg
testl
imul
xor
jg
dec
xlat
addr16
inc
and
fdivs
mov
lcall
mov
js
pop
ret
lret
mov
or
lods
push
xchg
pop
test
mov
push
and
inc
xor
in
mov
push
mov
push
mov
push
loop
je
in
fcoms
push
out
sub
mov
js
scas
sbb
adc
inc
add
add
or
xchg
mov
int3
sub
inc
roll
mov
push
fdiv
dec
jnp
sbb
scas
mov
stos
xlat
out
sbb
je
fld
xchg
nop
sbb
inc
fsubs
popf
in
and
popa
and
inc
into
addr16
lods
test
movsl
add
outsl
mov
repnz
js
dec
jbe
mov
std
popa
rcl
xchg
lret
cld
jne
frstor
leave
int
stc
sbb
mov
inc
xchg
mov
mov
arpl
xchg
xor
lock
cmc
dec
cltd
add
orl
mov
lahf
mov
adc
mov
test
aam
in
and
mov
adc
sub
sub
aas
push
inc
pop
sub
mov
sbb
outsb
pop
ja
leave
or
inc
inc
das
xchg
jp
adc
or
das
or
adc
push
jno
jge
rcrl
movsb
jg
int
jno
mov
or
movsl
pop
or
shlb
shlb
xchg
cli
inc
xor
setle
dec
jg
cmp
xor
out
pushl
or
or
outsb
pop
dec
pusha
inc
add
imul
push
cmp
push
pop
cwtl
hlt
enter
jb
dec
adc
stos
or
mov
push
push
cmp
lea
in
les
push
sbb
and
repnz
pushaw
xor
and
adc
sbb
dec
push
jge
pusha
sti
std
lds
inc
pop
cli
fnstenv
xchg
bound
inc
sub
mov
in
mov
pop
xchg
mul
popf
jae
xor
cmp
inc
les
jae
adc
jmp
add
dec
pop
ret
mov
xor
cli
cmp
add
pop
xchg
jl
and
dec
sti
adc
aaa
and
ret
icebp
pop
aaa
in
jae
jmp
lret
fistl
and
dec
xor
or
lret
adc
or
push
dec
pop
imul
jns
lods
jnp
sbb
mov
in
sbb
popf
xor
adc
push
mov
mov
stos
jno
cmp
mov
add
shlb
add
push
outsb
cmc
xor
out
jbe
lret
cli
orl
sbb
sub
pop
push
fdivp
adc
cwtl
nop
stos
mov
shlb
ret
sbb
sbb
aad
pop
mov
xchg
sbbl
sub
xchg
mov
xor
pop
std
mov
adc
scas
push
pop
out
pop
inc
adc
or
hlt
out
es
in
push
push
addr16
out
and
mov
sub
out
xchg
lahf
pop
pop
add
jecxz
int
pop
icebp
xor
adc
mov
ljmp
lods
dec
pushf
push
bound
iret
cmp
xchg
push
pop
mov
jns
lcall
sbb
xor
daa
xchg
and
arpl
cwtl
xchg
gs
xchg
cmp
mov
jnp
aas
push
scas
pushf
pop
lea
ss
add
xlat
cmp
int3
int3
push
cs
jbe
sbb
mov
push
adc
popf
fsub
sti
movsl
mov
cwtl
cltd
jnp
mov
xchg
mov
jecxz
ret
cmp
dec
cmp
lods
in
adc
and
imul
xchg
rcr
mov
inc
xchg
xor
jecxz
stos
mov
jmp
add
push
or
fsubrs
je
nop
cmp
pop
loopne
lret
rcl
or
or
repnz
iret
and
nop
jge
or
data16
hlt
add
cltd
lods
sub
inc
in
pop
sub
inc
lds
adc
push
push
jg
mov
int3
cld
pop
pop
xchg
inc
int
ja
scas
add
pop
sub
sahf
fsubrl
xchg
imul
xor
jbe
sbb
dec
sbb
cltd
cmc
gs
out
in
and
pop
cmp
pop
push
jl
or
xchg
mov
outsb
pop
cmpl
mov
mov
xchg
sbb
and
ljmp
inc
mov
push
ljmp
insb
lds
pop
out
adc
pop
sbb
sbb
sbb
mov
and
sub
stc
sti
push
mov
jmp
jl
lret
push
popf
cmp
iret
decl
outsl
mov
out
add
push
push
clc
enter
std
and
mov
flds
es
mov
je
cwtl
xor
jnp
jns
pop
aad
aad
dec
es
aam
add
rclb
jle
scas
mov
jp
test
int
stos
stc
jae,pn
push
cmp
test
ds
xor
js
jb
das
or
shrl
pop
add
jl
and
in
std
popf
lea
cmp
xchg
out
pop
movsb
push
fldt
push
xchg
xor
push
dec
jmp
imul
arpl
jecxz
int
adc
sub
lea
adc
xchg
nop
cmp
scas
aam
xchg
movsb
lahf
and
stc
out
sbb
xchg
movsl
subl
sarb
xlat
pop
add
ficoms
in
add
out
mov
hlt
jmp
imul
popw
mov
hlt
pushf
sub
movb
dec
gs
dec
out
and
jecxz
imul
mov
pop
mov
sub
cmpsb
movb
mov
shrl
imull
cmpsl
pop
jae
out
fidivrl
inc
jbe
and
add
sub
push
mov
push
frstor
addr16
fxch
sub
xchg
inc
inc
pushf
mov
std
pop
mov
mov
fisubs
sar
xchg
into
shlb
data16
pop
aas
nop
cltd
sbb
cmp
mov
or
int3
push
pop
in
ja
sbb
aad
xchg
cwtl
icebp
int
jb
out
repz
mov
cmp
fcmovnu
sbb
inc
push
or
inc
inc
cmp
xorb
rolb
pop
nop
pop
jecxz,pn
pop
dec
arpl
fstpt
jnp
fldenv
add
imulb
adc
rorb
and
fdivp
movsl
mov
ja
shrb
and
pop
add
cmp
pop
lds
je
xchg
sub
cmpsl
xrelease
adc
pop
mov
lcall
pop
popf
inc
dec
dec
xchg
cli
or
enter
xor
xor
mov
inc
sbb
movsb
sub
cli
mov
dec
test
pushf
push
lods
push
clc
xchg
xlat
movsb
imul
shl
sbb
xchg
sti
in
cmp
add
lods
pop
aaa
mov
mov
subl
data16
icebp
aam
inc
or
cwtl
cmp
dec
sub
fstps
cmp
xor
sbb
das
sbb
push
adc
push
mov
stos
xchg
test
div
adc
pop
dec
mov
loope
xchg
fstpl
fucom
dec
fs
addb
mov
rcrb
mov
scas
movsl
xlat
stc
lret
add
cmp
xlat
jno
sub
daa
adc
jmp
out
mov
xchg
jge
outsb
lcall
pusha
dec
and
in
inc
and
pop
push
test
in
lds
jbe
xchg
out
cmp
lea
and
je
push
xor
arpl
aaa
in
movsb
fisubrl
data16
sbb
mov
jae
pop
arpl
mov
nop
fmul
mov
pop
and
inc
sub
mov
inc
xor
in
xorl
push
push
stos
mov
clc
push
sub
aad
jle
clc
cli
decb
call
cmpsb
repz
dec
out
cmpsb
xor
outsl
push
scas
shrb
push
sbb
cli
inc
test
sub
mov
arpl
mov
jmp
outsb
sub
lock
mov
dec
pop
arpl
xchg
test
cwtl
cltd
jecxz
fdivrl
lds
mov
ljmp
loopne
mov
xor
cltd
cld
dec
xchg
fxam
cmp
int3
mov
mov
hlt
imul
fwait
push
sub
ja
sub
or
in
mov
mov
loop
insl
sbb
inc
xor
repz
out
out
adc
or
fbstp
addr16
mov
cli
inc
mov
xor
cmp
bound
shlb
in
fidivl
out
out
or
fwait
sub
aam
in
scas
sub
jno
push
cmpsb
and
jmp
outsb
mov
icebp
iret
in
js
pop
pop
jbe
lods
sub
inc
cs
into
mov
xor
lea
xchg
sti
sub
jg
mov
cld
lds
dec
xor
in
mov
in
inc
ret
ja
and
in
cmp
inc
sub
icebp
add
fdivl
xor
repnz
repz
push
outsl
inc
xchg
mov
cmc
movsl
mov
pop
sbb
stos
xor
cltd
mov
dec
mov
or
lea
mov
jns
push
adc
sub
aaa
iret
and
xor
push
mov
lcall
sub
dec
sahf
xchg
cmpsb
mov
stos
in
push
repz
push
insl
or
or
ficomps
sbb
pop
movsl
pop
xor
das
adc
daa
cmp
cmp
call
cli
loopne
mov
loop
cld
mov
in
add
or
sarb
mov
push
push
jmp
adc
aaa
test
out
jl
pop
sub
sbb
and
stc
shll
fscale
fistpll
out
incl
or
xor
mov
cmp
sbb
push
cmpsl
in
out
ret
imul
out
and
jl
lret
lds
mov
clc
sarl
xchg
bound
das
or
mov
iret
ss
push
aas
push
sub
dec
sbb
lea
add
outsl
push
ja
les
loop
xchg
leave
jmp
pop
lret
cmpb
mov
popa
pusha
nop
rorb
pop
cli
out
xchg
jp
cmp
fnsave
xor
adc
scas
adc
mov
or
jge
mov
ret
dec
jbe
pop
out
fdivs
adc
or
jo
mov
movb
mov
jb
ds
into
xchg
add
jp
pop
gs
push
pushf
cmc
sti
pushf
jp
adc
or
pop
cwtl
sub
inc
dec
cmovns
xorl
xchg
inc
lock
stc
shr
push
sub
jnp
daa
leave
inc
jecxz
out
jns
push
in
mov
inc
cmp
or
jno
addr16
jno
adc
pop
xor
dec
dec
or
mov
mov
aaa
mov
sub
lahf
add
jecxz
add
inc
push
sti
lret
inc
push
cmc
jp
sbb
mov
out
inc
add
out
adc
out
cmp
imul
dec
xor
arpl
jbe
pushf
cmp
adcb
xchg
scas
ss
xchg
shrl
lret
dec
in
enter
xrelease
push
sbb
push
xchg
fcoms
addl
scas
mov
push
push
jbe
cmp
sub
dec
adc
cmp
ret
sbb
ficomps
mov
fsts
outsl
paddusb
stos
test
rorl
stc
xchg
mov
pushf
cmpsb
jno
mov
pop
jno
insb
pop
out
cmp
xchg
dec
ljmp
mov
sub
mov
hlt
xor
aaa
in
cmp
in
lcall
pop
sarb
jp
call
mov
aad
push
sarb
pop
dec
cs
stc
mov
shlb
pusha
or
jl
sub
mov
xor
test
cld
fisubrs
jne
jnp
scas
out
inc
xor
lcall
mov
mov
and
dec
sbb
das
andb
dec
insb
sbb
and
xor
add
ret
ds
aas
push
fsubr
push
xchg
enter
cltd
stos
shrb
daa
sbb
imul
push
push
repz
sub
dec
les
aas
ds
shrb
push
addl
jbe
jl
pop
adc
dec
nop
mov
hlt
lods
dec
into
push
jno
sbbb
jmp
sti
mov
insl
xlat
jb
add
je
pusha
sub
lea
and
dec
bnd
sub
addr16
repnz
xor
lds
xchg
sub
jle
jbe
gs
fsubl
add
or
add
dec
fmull
cli
fcoms
add
mov
fstpt
lahf
shll
inc
add
xchg
pop
loop
sbb
mov
xchg
or
mov
cmp
ss
sbb
cwtl
mov
mov
pop
xor
push
in
cmc
cmpsl
hlt
adc
ljmp
mov
sub
loopne
sbb
xchg
test
into
ss
jbe
inc
push
cli
fwait
adc
clc
call
flds
test
fidivs
inc
movsl
in
inc
mov
inc
cmp
in
test
pop
xor
mov
inc
daa
inc
dec
inc
fsubr
aam
push
aad
sbbl
mov
push
jl
lret
add
push
push
dec
jmp
sbb
ljmp
sbb
insl
rolb
shl
xchg
into
mov
popa
push
cmp
cmpsl
aad
aam
sub
into
popf
mov
outsl
dec
lock
fwait
mov
mov
push
xchg
outsl
inc
mov
mov
orb
lds
iret
xchg
or
push
mov
repz
lods
in
dec
add
or
and
xchg
push
das
pop
out
ret
pop
jo
adc
sub
rorb
dec
ja
and
dec
js
stos
sbb
lea
jmp
in
mov
cmp
repnz
add
mov
repz
cmpb
rcrb
iret
mov
push
and
popa
aad
lock
mov
pushf
push
fcmovbe
add
outsl
decl
jmp
pop
mov
loope
ret
stos
inc
fsubrl
jp
dec
add
and
data16
insl
fs
xchg
fldl2t
mov
mov
xor
fdivs
dec
jae
imul
pop
add
fistpll
push
es
sub
repz
fcompl
jecxz
int3
pop
pop
lds
or
ret
cmc
xchg
dec
sbb
mov
mov
aad
repz
imul
data16
mov
jnp
push
fmul
pop
aam
jno
mov
and
hlt
or
sub
clc
fsubr
aam
outsl
xchg
loop
pop
clc
fmuls
xor
or
call
in
lds
inc
add
fcmovnbe
mov
mov
mov
pop
cmp
inc
mov
mov
loop
mov
pop
push
adc
scas
fbld
orl
mov
push
cmp
cmp
xor
data16
inc
xchg
or
das
xchg
cmpsl
fwait
in
push
test
xor
jne
or
insb
inc
aam
stos
xchg
lahf
pop
xchg
aad
popf
insl
repz
in
pushf
inc
jle
jecxz
mov
sbb
jge
jns
cltd
jecxz
movsl
add
xor
jl
jne
mov
arpl
cmc
pop
outsl
mov
cld
outsl
add
add
jns
call
push
dec
cmp
cmp
rol
inc
mov
into
cltd
lret
sub
sti
mov
outsb
cmp
jp
adc
out
test
jbe
pop
sbb
cmpsb
inc
loope
and
lods
xor
je
scas
repnz
dec
daa
fildll
pop
imulb
pusha
inc
jb
ret
cmpb
int3
rol
xchg
dec
dec
xchg
or
aas
mov
ds
mov
mov
pop
addr16
imul
pop
lds
fsts
mov
test
lahf
xor
mov
push
not
mov
jo
jno
cmp
push
and
pop
cmp
mov
xor
ljmp
notl
gs
movsl
lock
outsl
nop
popf
push
fidivrl
or
mov
popf
push
add
out
hlt
cwtl
cmpsl
repnz
inc
sbbb
jecxz
sub
dec
jl
loope
in
js
mov
push
sub
add
cmp
bound
mov
and
sub
cmp
mov
sbb
push
imul
inc
push
out
stos
mov
cwtl
lods
xchg
inc
stos
ds
ljmp
popf
ret
test
ret
sub
jp
sbb
mov
cmp
mov
popa
jno
dec
xchg
mov
or
or
xchg
mov
mov
aaa
repz
in
wbinvd
mov
cmp
sub
scas
ljmp
mov
inc
cmpsb
mov
push
mov
iret
outsb
jae
cmp
jp
fs
xor
arpl
adc
cld
mov
pop
mov
mov
or
scas
add
mov
jne
mov
jge
lret
push
push
clc
mov
rorl
add
mov
sahf
insl
sbb
xchg
pushf
fwait
mov
inc
xchg
gs
pop
mov
xor
jl
xchg
nop
dec
pop
shlb
jb
mov
fstp
mov
shl
mov
push
in
cmp
push
vmovdqa
inc
xchg
or
aas
or
xchg
icebp
mov
push
adc
pop
jle,pt
in
lahf
mov
rclb
loopne
xchg
outsb
mov
dec
and
in
ja
mov
xchg
mov
dec
mov
notl
sub
data16
stos
pop
lcall
pop
pop
hlt
cmp
aas
rcll
stc
sbb
and
adc
dec
arpl
and
pushf
aad
adc
imul
in
repz
mov
jge
mov
pop
stos
aaa
cmp
mov
jecxz
in
scas
xorb
icebp
xor
mov
dec
cmpsl
nop
jnp
outsl
cli
insb
or
or
es
push
xchg
mov
insl
sbb
cli
inc
in
jmp
pop
adc
enter
pop
mov
sub
fisttpl
pop
aam
sub
xor
lods
aad
push
xor
imul
adc
mov
imul
ljmp
test
inc
jge
push
ss
scas
insl
xor
or
mov
scas
sbb
mov
pop
lret
inc
ja
dec
jbe
lea
mov
outsl
cmp
test
int
fstps
testb
xor
push
add
adc
imul
or
fidivl
orb
int
lahf
fbld
shl
and
inc
sbb
sahf
jmp
mov
and
push
scas
int
stc
enter
cmpsb
aam
xchg
add
xchg
test
dec
jl
lds
jb
mov
psllq
in
rcrl
ljmp
sbb
dec
and
outsb
das
insl
mov
sbb
mov
jl
inc
mov
adc
mov
sbb
ss
adc
push
stos
sbb
sub
imul
ss
fwait
pop
or
cs
sub
aam
xchg
jle
mov
dec
xor
test
jns
adc
inc
stc
mov
jle
cmc
aad
out
scas
daa
lods
sbb
dec
push
es
push
lods
jecxz
inc
repz
iret
lahf
inc
shll
mov
push
add
fcmovnu
xlat
pusha
pop
loop
hlt
xor
dec
lcall
mov
mov
mov
xlat
cmp
mov
sbb
and
fwait
push
arpl
aas
cmp
enter
mov
dec
push
pop
out
lahf
jo
lahf
pusha
lea
shlb
push
mov
pop
cmp
loop
cmp
mov
mov
push
cmc
clc
mov
shll
mov
ss
push
or
cmc
sbb
lds
enter
insl
and
dec
cmp
pop
notb
idivl
push
in
fdiv
pop
cmp
push
popl
add
xchg
shl
loope
fdivl
push
and
in
mov
int
setge
lcall
test
mov
mov
sub
lods
gs
pop
add
mov
cmp
aaa
inc
mov
loop
dec
add
repnz
mov
stos
xchg
jb
xchg
dec
adc
popa
cmc
fldln2
push
jno
fstps
jp
fimuls
sub
mov
fnstenv
xchg
cmc
or
loope
pop
cld
sub
in
mov
pop
mov
fists
jno
push
dec
or
popa
inc
repz
stos
jmp
iret
pop
sti
jmp
aaa
testb
test
pusha
aaa
push
mov
fwait
insb
shl
xor
push
inc
arpl
pop
mov
sub
leave
push
rol
xchg
mov
cwtl
cmp
fsubrs
popa
dec
daa
push
fsubl
in
sbb
adc
mov
in
shlb
dec
movsl
mov
push
stc
insl
push
jnp
dec
dec
jg
adc
bound
fs
fisttps
jp
add
and
pop
outsb
mov
js
aad
inc
test
push
push
dec
ja
das
loop
and
lds
sarl
addb
mov
cwtd
stos
adc
aas
xchg
adc
jmp
push
push
adc
cli
mov
imul
mov
lret
push
wbinvd
movsl
jmp
loopne
dec
in
pmuludq
flds
adc
cmp
or
in
sbb
xor
fimuls
repnz
xor
rcrl
aad
shlb
or
pop
jecxz
loop
pushf
lods
rcl
ja
xchg
ljmp
mov
enter
xchg
nop
or
sbb
mul
xor
rcll
cmp
mov
xchg
add
insb
sbb
push
clc
iret
xchg
jno
dec
and
aam
and
call
adc
movsl
ror
jle
out
call
sub
fwait
jl
and
jle
xor
xchg
jecxz
leave
rcl
popf
rcrl
sbb
mov
adc
cmp
pop
and
add
lahf
xor
sbb
inc
loope
test
cmp
add
testb
pop
and
sub
daa
icebp
cmp
push
sbb
jl
inc
sbb
call
fstpt
xchg
addl
mov
mov
es
xchg
mov
ret
cmp
hlt
or
or
dec
xor
or
xor
pop
bound
mov
ljmp
cmp
cmp
pop
cmp
push
or
sbbb
ss
cwtl
lret
scas
push
add
mov
dec
mov
pop
js
pushf
mov
inc
and
inc
out
pop
push
fsubr
das
test
std
and
mov
mov
loopne
add
xchg
add
cmp
aam
push
loop
subl
pop
pop
in
arpl
mov
shlb
pusha
add
lds
jbe
lret
jmp
lods
das
pop
add
nop
aad
xor
mov
xchg
add
incl
dec
rolb
jge
in
mov
cmpsl
push
pmaxsw
ret
xchg
test
jecxz
stc
testb
stos
addr16
sub
cmpsb
test
mov
or
aaa
dec
push
push
dec
jl
int
ss
sbb
sbb
and
dec
stc
pop
add
int
test
aam
jge
iret
je
pop
jns
xchg
mov
mov
push
adc
sbb
fst
int
cld
popa
hlt
pop
add
adc
leave
push
mov
out
into
cmp
push
pop
xchg
xor
add
stc
jbe
dec
stos
lahf
ljmp
push
mov
sbb
ljmp
test
cmpsl
dec
push
adc
xor
cmp
xor
sub
mov
jb
mov
test
shrb
mov
sbb
das
jle
cmp
hlt
lahf
sbb
lahf
int
push
dec
imul
shll
into
rclb
sahf
jbe
imul
mov
add
les
loop
rclb
add
gs
jecxz
adcb
push
cmp
scas
jne
notl
dec
pop
sub
xchg
dec
cmc
testl
out
fisubrl
push
or
pop
inc
add
addr16
aam
dec
sub
je
pop
push
inc
inc
pop
mov
push
dec
sbb
xchg
push
and
movsb
fmull
push
xchg
out
out
lea
or
mov
pop
js
push
leave
cmp
push
sub
push
xor
dec
sbb
lret
push
lahf
dec
out
imul
mov
in
or
popf
and
negb
and
xor
rclb
and
in
xchg
outsl
dec
stc
jbe
mov
shll
inc
ss
sub
jo
jp
clc
and
stos
outsb
sbb
dec
imul
and
sbb
int3
lea
cmp
and
test
sbb
int
jae
pop
sarl
cld
mov
nop
fsub
adc
inc
add
psadbw
push
test
stos
pop
in
cmp
sbb
adc
push
ds
movsl
fsubrl
cmp
fwait
leave
popf
scas
nop
xlat
dec
push
pop
jecxz
rolb
mov
inc
pop
into
xchg
mov
cmp
mov
mov
fidivs
or
aaa
dec
scas
xchg
out
sbb
cmpsb
orb
mov
mov
aam
test
divb
xor
or
jg
stos
jg
iret
sub
xlat
xor
push
sub
loop
xlat
testl
imulb
addr16
jmp
push
cmc
roll
mov
scas
fstpt
adc
fwait
or
jno
mov
jecxz
sub
inc
sti
xchg
xchg
clc
stos
mov
dec
jns
test
mov
add
and
iret
pop
orb
inc
xor
cs
std
jmp
mov
lret
into
cmp
xor
sbb
fistl
push
push
or
leave
fisubl
push
fsubs
mov
dec
cmp
insb
sub
je
ret
or
xor
test
push
mov
add
imul
cmc
mov
fs
nop
push
fsub
mov
jp
mov
out
movl
inc
mov
or
cmp
test
fidivs
cmc
or
cmp
cld
lods
mov
push
sub
push
adc
lods
sarb
cld
pop
mov
or
sti
and
cs
ss
in
inc
cmpl
pusha
mov
popl
out
aad
mov
rcl
xchg
sbb
adc
dec
pop
mov
sarl
js
insl
lret
lret
or
stos
cmp
je
inc
push
in
lahf
inc
rorb
loop
push
aas
dec
cmp
bound
mov
mov
cltd
sub
or
test
push
dec
lds
push
mov
into
aaa
sub
xchg
es
cs
rdmsr
jecxz
test
jle
enter
mov
sub
repz
xchg
mov
adc
loop
lret
xchg
clc
imul
les
lret
xor
dec
mov
into
clc
xor
jo
inc
push
pop
pop
ljmp
aaa
or
pop
add
xchg
addr16
fnstenv
push
xor
sbbb
jbe
and
adc
push
sbb
test
xchg
fistpll
mov
adc
jle
sub
dec
inc
or
cmp
adc
cmp
add
dec
xchg
aam
xor
add
nop
and
scas
jnp
subb
or
inc
lea
adc
sub
das
jl
fs
out
ret
pop
adc
js
sarl
idivl
mov
das
cmc
jl
mov
scas
xchg
cmp
rorb
lods
inc
mov
mov
test
add
fdivrs
out
sbb
rcrl
lret
cmp
repz
xor
cmp
addr16
jae
mov
ret
movsb
nop
or
adc
lock
dec
cmp
dec
in
xchg
jns,pt
sarl
fimull
inc
mov
add
or
sub
repz
pop
adc
or
bound
lahf
sarb
sub
xor
sub
popf
lods
movsb
rorb
and
fsubl
pushf
push
sub
or
lods
xor
mov
inc
lret
mov
rorb
pop
push
mov
or
fmull
daa
out
sub
xlat
inc
out
fiaddl
mov
inc
in
pop
jl
fucom
dec
leave
adc
mov
out
mov
lods
sub
inc
arpl
aas
cmp
sub
jne
inc
adc
cmp
faddl
or
pop
aam
cmp
in
jns
fildll
rol
xor
cmp
je
inc
mov
mov
test
adc
xchg
xchg
mov
sbb
xor
rcrb
mov
sbb
mov
jne
ds
mov
leave
mov
sbb
add
inc
inc
xlat
into
push
add
in
xor
leave
aaa
pop
arpl
mov
int
push
xchg
cmp
inc
fists
push
pop
fisttpl
mov
and
push
out
out
pop
jne
mov
out
test
jge
sbb
sbb
adc
arpl
outsl
jno
inc
enter
cmpsb
inc
xor
in
movsb
pop
pop
cmc
inc
pusha
push
pusha
mov
cmpsl
wrmsr
push
dec
add
mov
shll
movsb
aam
sbb
xor
arpl
lcall
and
adc
jbe
rcll
nop
dec
pop
lods
xchg
lock
xor
imul
mov
adc
das
fsubrp
js
xor
lea
xor
in
xchg
mov
stos
and
ds
jae
pop
sbb
lcall
push
mov
pop
add
stos
icebp
loop
and
notl
fisubl
sbb
pop
sbb
xchg
xchg
mov
xchg
inc
jae
add
rorl
adc
mov
mov
jmp
xchg
int3
jle
cmc
sbb
ds
adc
mov
mov
inc
inc
or
insl
stos
xlat
push
jae
call
push
and
insb
inc
jge
add
test
roll
inc
lods
jnp
pop
jbe
jp
mov
ljmp
jle
enter
out
xchg
sub
mov
ret
jge
leave
push
jae
pushf
jae
xchg
mov
std
lds
inc
mov
push
adc
and
es
bound
call
sub
inc
aam
scas
out
mov
sarl
sarb
sub
lret
aas
push
push
movsl
fs
sbb
inc
pop
mov
add
and
mov
push
pusha
mov
push
sub
mov
cmpsb
rcr
push
ds
pop
mov
roll
data16
fimull
xchg
je
out
fsubrs
popa
mov
dec
push
xchg
js
cmp
cmp
fsubr
scas
fsubr
push
rol
jnp
iret
jl
sbb
xor
jo
call
xchg
jb
fwait
push
cmpsl
or
xor
cli
pop
rorb
mov
in
sub
sarb
loopne
mov
push
fwait
insl
sahf
sbb
and
rcrb
pop
dec
jae
xchg
mov
jno
sbbl
ja
mov
mov
push
jp
inc
xchg
test
cwtl
xchg
test
test
sti
std
stc
mov
inc
jns
mov
dec
lcall
in
addl
rorl
mov
and
shlb
pop
dec
push
fdivrp
ret
lahf
jno
fbstp
inc
sbb
dec
icebp
outsl
je
xchg
inc
mov
int
bound
int3
movsl
call
xor
push
aaa
mov
fcompl
cld
pop
cs
mov
clc
mov
xor
dec
add
popa
mov
test
mov
mov
mov
cld
sti
adc
loopne
jo
push
repnz
jecxz
dec
push
cld
add
add
out
jo
hlt
xor
mov
sahf
jecxz
xchg
add
data16
push
dec
sbb
in
in
inc
inc
scas
mov
leave
inc
or
fisubl
rcr
pop
sbb
mov
mov
mov
cmpsl
rcl
xchg
adc
outsb
movsl
xor
adc
aam
and
xor
and
jno
mov
leave
mov
fisttpll
and
add
test
jae
or
xor
jns
fisubrl
lds
dec
lahf
data16
and
and
xchg
js
mov
hlt
jo
sti
push
xor
in
lahf
sbb
push
in
mov
scas
xchg
daa
fisubl
or
int
pop
bound
cmc
out
push
inc
mov
ss
jae
mov
mov
pop
iret
jmp
dec
faddl
sub
pushf
sub
pop
mov
bound
int3
dec
pop
jnp
pop
movsb
fildl
scas
mov
aaa
mov
pusha
jle
sti
cmpsl
or
pop
cs
pop
mov
jbe
aam
xchg
jbe
stos
mov
and
jg
iret
and
into
pop
jl
orl
dec
jl
sbb
jge
xchg
or
fcomps
inc
mov
repnz
ljmp
push
ja
or
push
push
lcall
fistpl
mov
dec
das
daa
arpl
sub
sub
cmp
xchg
and
push
out
dec
cwtl
xor
into
push
jp
jecxz
sar
inc
cmp
add
hlt
adc
insb
enter
std
mov
mov
pop
and
add
fstp
repnz
aam
insb
sub
jb
inc
jns
inc
test
inc
push
bound
jb
pop
jns
mov
cs
stos
or
sub
inc
pop
or
dec
stc
dec
insb
bound
lcall
in
lock
out
xchg
or
in
lahf
fimull
cmp
add
and
std
sub
daa
aam
jmp
lea
add
lret
out
repz
adc
pop
mov
clc
ja
scas
je
jle
fucomip
pop
xchg
fwait
and
mov
mov
pop
jle
sub
ret
sti
ret
cmpsl
std
addr16
xchg
shrb
rcrl
fstl
das
in
insl
enter
shll
xchg
or
sahf
and
cmpsl
or
stc
stos
sti
ljmp
cmpsb
js
out
push
aad
add
scas
test
aad
dec
stc
loopne
mov
faddl
jmp
aas
icebp
adc
dec
mov
jmp
mov
insl
cmc
aad
insb
push
clc
rcr
cwtl
shl
inc
loop
sub
mov
movsb
gs
dec
cld
xor
in
jo
mov
push
lea
jae
data16
add
jmp
mov
ja
imul
cmc
fnstenv
test
leave
ror
rcl
push
xlat
push
and
xchg
jbe
inc
outsb
cmpb
cmc
xchg
test
xor
pop
cmp
jl
mov
in
xor
imul
out
push
xor
fwait
mov
js
pushf
int
sub
gs
xor
push
outsb
sbb
in
adc
fs
jmp
lds
out
mov
insl
daa
inc
push
pop
mov
shl
xor
mov
clc
adc
lret
add
adc
xchg
xor
adc
jp
or
lret
add
rclb
adc
loopne
fisubrs
popa
cmpsb
subl
out
daa
sub
mov
cmp
aaa
push
mov
dec
lock
and
lods
imul
jnp
cs
loopne
and
add
gs
push
cmp
mov
lock
ficompl
lods
pop
lret
jmp
insb
sahf
js
inc
push
test
mov
mov
fidivl
js
fimull
arpl
inc
fcomps
lret
mov
fcomp
push
cmp
sub
add
jle
sub
out
negl
int
jnp
dec
shrb
cmp
and
cli
incb
dec
cmc
dec
or
mov
push
xchg
bound
mov
scas
push
mov
push
or
fildl
mov
rorl
dec
jno
mov
in
lahf
mov
popf
add
sbb
ja
lcall
pop
out
jp
aaa
roll
cmp
sub
cmpsb
maskmovq
add
jbe
jns
jl
adc
mov
mov
xor
and
push
mov
shlb
stos
call
mov
inc
sub
icebp
inc
cld
xchg
jne
iret
lea
lahf
mov
xchg
push
sbb
pushf
mov
aad
stc
int3
cmpsb
in
movsl
jb
aas
push
inc
sbb
mov
pop
jno
push
loope
adc
loopne
ljmp
cmc
stos
enter
repnz
pop
fisubrl
xchg
lcall
fcoms
jecxz
mov
push
enter
mov
in
movb
int3
outsl
xchg
dec
loopne
cmp
gs
mov
jne
js
test
bswap
sti
add
mov
pop
nop
fildll
clc
in
std
inc
test
mov
mov
fs
mov
insb
cmp
lock
jmp
sbb
fwait
js
inc
mov
xchg
sub
jae
imul
adc
lea
xchg
outsl
lcall
and
outsb
dec
push
ret
cmp
xor
out
outsb
adc
push
push
int3
lcall
push
mov
cs
hlt
add
mov
mov
shrb
bound
dec
and
into
jne
arpl
fadds
or
mov
test
fcoms
divb
jae
push
jge
xchg
roll
mov
mov
rorb
ret
rcrl
mov
sbbb
and
shll
dec
outsb
call
stos
sbb
lods
adc
std
roll
sub
inc
pop
clc
cmp
push
cs
clc
movsb
ds
or
xchg
inc
mov
sbb
sub
mov
dec
shl
cwtl
and
loop
inc
sub
jge
ror
cltd
mov
jnp
imul
push
sub
xlat
sbb
lods
push
dec
jle
cmp
add
mov
popa
adc
jge
icebp
test
cmpsl
aam
loop
jle
lock
out
sbb
adc
into
mov
imul
and
and
jns
addl
or
mov
inc
mov
pushf
test
aas
pop
iret
jge
inc
std
lret
outsb
lahf
outsl
xlat
push
sbb
hlt
lahf
ljmp
fcmovbe
loopne
fsubrs
cmp
fs
and
pop
loope
in
insb
jmp
xor
jle
jl
lret
push
dec
test
pop
dec
sbb
sub
jo
lcall
hlt
divb
outsb
test
inc
nop
add
jmp
mov
mov
into
jge
inc
js
xchg
scas
mov
std
cmp
xchg
and
mov
out
je
outsl
insl
mov
pop
jnp
xlat
dec
and
push
fwait
in
or
js
mov
pop
mov
nop
in
jne
rol
fcomps
ss
dec
xchg
hlt
js
iret
sub
sti
test
xchg
jmp
cld
sub
xor
leave
xchg
and
xchg
pop
lahf
xor
enter
icebp
daa
fistpll
int3
push
in
add
dec
push
repz
lods
mov
scas
or
fmull
movsb
hlt
repnz
stos
or
cli
stc
xchg
adc
push
test
test
aam
clc
jb,pt
sbb
xchg
jle
mov
rol
or
xor
lahf
divl
xorl
push
test
aas
rclb
xor
insl
lods
push
aaa
decl
push
stos
dec
sub
push
insl
pop
in
test
mov
les
fs
popl
fldt
inc
mov
xlat
fdivrp
sbb
movsl
sarl
cmc
and
int3
mov
js
fsubrl
insb
stos
adc
in
sbb
xor
icebp
div
test
loop
mov
imul
mov
and
pop
cmp
fwait
mov
jnp
pop
clc
sbb
out
mov
pop
ret
mov
sub
push
jge
mov
or
sub
mov
rorl
and
je
mov
mov
int3
sbb
hlt
xchg
div
xor
xor
mov
lea
or
notl
stc
jmp
rcrb
fcmovnbe
negl
ss
outsl
sarl
cltd
jp
or
sbb
fmulp
fdivrs
cmpl
adc
inc
inc
adc
xchg
pop
xor
mov
cltd
data16
push
pop
jecxz
and
mov
xlat
add
xchg
in
mov
in
mov
mov
push
gs
daa
inc
cmpsl
xchg
lret
dec
in
push
xchg
inc
xor
loope
aas
xchg
mov
dec
jmp
sbb
cmp
out
jecxz
cmp
mov
and
out
xor
movsl
cmp
sbb
icebp
idiv
inc
pop
fs
adc
popf
add
push
repnz
pop
cmc
mov
inc
jl
xchg
xchg
add
shlb
sbb
es
test
cmp
out
xchg
xchg
xlat
xchg
ficompl
pop
pop
clc
inc
xchg
mov
je
dec
xchg
addr16
xor
aad
jne
aas
add
mov
lret
push
mov
out
pop
enter
das
int3
lods
addl
sarl
cmpsb
xorb
test
js
sub
ret
pop
imul
sarl
mov
loope
mov
insb
sub
cwtl
cmpsb
jne
mov
sbb
popf
xor
sub
icebp
jecxz
add
fs
push
scas
adc
sbb
jge
in
or
std
repnz
mov
adc
call
pushf
cld
mov
fisubs
and
inc
rolb
cmpsb
push
es
sbb
mov
dec
add
daa
int
mov
pop
xor
loop
push
call
stc
nop
mov
or
test
imul
push
mov
sar
das
movsb
and
jl
pop
sbb
add
call
inc
cmp
loopne
jecxz
xchg
in
cmp
inc
mov
xor
cmpl
sbb
imul
adc
pushf
xlat
arpl
outsb
jb
std
or
push
dec
shll
pushf
ljmp
sbb
jnp
repnz
outsl
pop
xor
in
movsb
push
adc
bnd
pop
andl
or
rorb
out
inc
rclb
addb
jo
iret
adc
and
mov
test
or
faddl
into
pop
sbb
xor
mov
add
test
gs
push
adc
xchg
push
test
pop
or
fisubrs
lea
push
loope
mov
cwtl
mov
inc
sub
psraw
lds
loope
jbe
jecxz
xchg
mov
arpl
inc
test
jecxz
in
jno
and
sarl
sbb
sbb
inc
pop
mov
mov
and
outsb
fcoms
addr16
arpl
pop
pop
adc
sbb
cmpsl
fldl
nop
ficompl
out
xchg
and
shlb
ds
cs
fimull
or
mov
mov
mov
ficompl
das
xor
rol
jae
xchg
inc
sub
repnz
push
loop
stc
pop
gs
xlat
out
out
not
cmp
data16
push
cmpsl
or
add
xor
fildll
lahf
stos
mov
mov
imul
imul
in
out
cmp
jl
jne
inc
fs
scas
pop
popf
les
push
fstpl
fdivr
icebp
sbb
dec
add
loop
mov
jbe
mov
inc
fs
sub
pop
and
je
arpl
andl
ja
add
jle
stc
ja
push
xlat
pop
pop
xchg
mov
fdivrs
popa
rolb
jnp
xlat
xchg
xchg
mov
push
stos
add
mov
xchg
mov
and
test
xlat
and
inc
fsub
pop
cmp
jmp
dec
fdivl
push
adc
dec
adc
sbb
mov
or
outsl
pop
ljmp
cld
mov
and
aaa
mov
or
lds
jns
outsl
xchg
cmpsl
int
gs
or
in
bnd
ljmp
mov
mov
ja
gs
in
ficompl
xchg
insb
ficompl
jecxz
notb
test
push
adc
mov
mov
dec
xchg
fld
dec
or
jle
xor
sbb
fcmove
imul
loope
dec
cmp
jno
in
pop
or
std
das
mov
rcll
push
mov
adcl
insl
mov
arpl
mov
xchg
sahf
data16
push
lock
divb
dec
pop
sub
xchg
jns
dec
mov
push
jge
xchg
sarb
outsb
orb
jbe
shl
adc
fsubrl
test
aaa
movsl
mov
in
out
pop
je
jns
outsb
push
sahf
gs
imul
iret
adcb
lock
pop
jne
sbb
ja
aaa
xchg
test
fcoml
pop
outsl
shll
dec
dec
xchg
pop
mov
imull
imul
mov
mov
fwait
pop
mov
hlt
sbb
ret
push
jp
mov
inc
call
mov
in
out
xchg
sub
pop
test
mov
push
cmp
and
xor
imul
shll
test
mov
movsb
xchg
sub
test
sub
sbb
sub
jnp
adc
fnstcw
cmp
cmpsl
push
aad
jle
fdivl
and
das
jp
push
iret
shrl
cmp
insl
push
and
fdivs
mov
cmp
in
mov
cmp
xchg
fidivrl
xor
shll
xchg
and
xchg
sbb
dec
lsl
dec
mov
inc
sub
pop
jns
jbe
jecxz
inc
and
or
mov
ret
sub
xchg
es
sbb
hlt
pop
cmp
mov
adc
mov
sti
xor
imull
mov
jl
cs
xchg
in
sbb
mov
cmp
jnp
adc
or
in
dec
dec
pop
adc
jo
xchg
push
ljmp
pushf
adc
lea
inc
dec
jle
jmp
cltd
dec
popa
dec
call
cmpsb
mov
insl
bound
lods
dec
xchg
int3
fadd
mov
std
aas
dec
pop
dec
push
xchg
test
mov
arpl
sub
xor
mov
inc
shlb
mov
mov
test
xchg
mov
sti
fdivrl
jle
shrb
sbb
or
icebp
mov
mov
jno
cmp
add
mov
loope
push
or
inc
push
movsb
mov
mov
cmc
jnp
mov
call
rolb
lds
adc
js
lahf
loope
outsl
jo
insb
ss
xchg
fs
imul
repnz
mov
cli
gs
subl
add
mov
and
in
in
push
xchg
jb
test
negb
jnp
cli
dec
or
aas
mov
fistl
fistpl
int
pop
popa
mov
fucomp
mov
scas
or
int3
push
mov
dec
jno
pop
dec
stc
fisttpll
push
mov
jnp
icebp
push
enter
mov
pop
xchg
inc
stc
or
pop
push
sbb
lods
jge
cmp
sub
scas
pop
inc
adc
sbb
in
add
xchg
or
inc
pop
xchg
jp
sub
sub
dec
xchg
imul
jbe
sub
imul
stc
clc
leave
sub
ss
data16
hlt
mov
add
push
mov
je
loopne
mov
xorl
sbb
push
mov
sub
repnz
addb
xor
mov
ss
pop
mov
mov
lods
cmp
pop
sub
test
fsts
mov
cmp
xor
aas
dec
mov
sti
mov
fwait
sub
xor
fwait
gs
fs
std
stos
imul
inc
or
xor
fwait
pop
bound
lods
xor
dec
and
fistl
add
andb
or
lret
jne
lea
ficoms
add
dec
inc
mov
cmp
pushf
int3
outsl
add
es
xor
add
mov
cs
push
xchg
stc
xor
mov
cmp
push
sti
stc
test
mov
jno
jne
sub
fadds
popa
les
mov
dec
das
xchg
int
mov
cli
sbb
pop
arpl
xor
mov
or
and
sbb
mov
jno
scas
mov
pop
ds
and
insl
sar
fildll
or
sub
loopne
popf
jns
mov
ljmp
sahf
or
add
push
cs
push
adc
data16
and
repz
fwait
pop
shll
inc
incl
xchg
ret
mov
jnp
mov
add
out
or
jmp
ds
sbb
sarl
das
lea
orl
pop
pop
adc
sbb
das
ds
leave
std
and
dec
xlat
out
inc
outsl
mov
xchg
pop
sbb
daa
jnp
enter
imul
lcall
ds
ret
test
jnp
pop
jecxz
pop
add
adc
andl
mov
daa
or
out
lea
andl
pop
dec
hlt
popf
bound
aam
xchg
lods
fnstcw
mov
shl
inc
mov
das
addr16
add
xchg
mov
sub
lahf
lret
add
sbb
inc
out
mov
cmpl
aaa
inc
loopne
iret
mov
xor
and
push
sbb
lcall
daa
cld
xchg
mov
jb
and
mov
outsl
xlat
rcr
xchg
mov
xor
mov
in
mov
ss
in
int3
adc
mov
sub
pop
loope
sub
add
and
dec
dec
fidivrs
fldln2
movsb
lods
and
repz
inc
jno
add
dec
pop
sbb
mov
push
cmova
push
pop
inc
push
inc
into
call
adc
rolb
lret
out
or
cwtl
stos
test
jmp
and
out
insl
stos
shlb
js
jecxz
movsb
sub
jae
les
jmp
leave
add
repz
daa
adc
pop
faddp
inc
mov
loop
jnp
lds
fdiv
or
jne
adc
adc
mov
push
sbb
ljmp
lods
or
pop
xor
mov
scas
lret
mov
mov
sub
and
pop
fdivrl
ret
xchg
jecxz
fs
mov
mov
imul
test
mov
push
icebp
fnstcw
adc
popf
or
dec
popa
lcall
dec
mov
jp
push
shrl
xchg
dec
imul
jo
in
mov
mov
sub
mov
imul
xorl
inc
or
mov
neg
inc
ret
push
in
pop
adc
inc
jb
add
fbstp
repnz
push
lea
cmpb
push
lock
out
ds
lcall
das
pop
ds
comiss
negb
add
ret
add
shld
sub
js
xchg
aad
jp
fimull
into
cwtl
mov
pop
mulb
cmpl
ret
cmpsl
into
frstor
in
jp
arpl
cmp
xor
mov
xchg
adc
jo
out
cmp
sbb
xor
data16
jl
out
outsl
adc
insl
rcl
loope
xor
loope
out
xchg
daa
sub
mov
pop
stos
out
stc
xor
aam
std
adc
aam
loope
mov
lods
mov
jo
cmp
lret
ljmp
stos
pop
mov
mov
aad
sub
les
out
jle
lahf
xchg
mov
sub
call
cld
mov
test
mov
pop
push
cmc
dec
cwtl
pop
das
push
rorl
outsl
push
push
adcb
mov
push
and
es
ds
pop
add
push
and
sbb
xchg
ljmp
nop
call
lret
addl
dec
or
cmp
bound
test
jmp
cmc
rcll
bound
adc
push
out
decb
dec
and
push
ja
xchg
sbb
jp
fnsave
pop
fucom
in
add
mov
test
or
push
mov
idiv
xchg
add
xchg
and
insl
xor
jnp
xchg
adc
xchg
push
inc
in
inc
out
or
lret
in
push
xchg
es
mov
mov
cmp
fidivs
sub
adc
jle
inc
test
sub
roll
inc
mov
dec
dec
pop
hlt
out
add
addl
cmp
jb
shrl
andb
rol
div
jno
fbstp
push
je
rorl
pop
popf
jmp
dec
pop
jmp
scas
int
call
mov
mov
xchg
jmp
jb
daa
mov
push
mov
and
push
add
int3
xchg
cmp
into
mov
movsl
inc
xchg
cltd
mov
mov
dec
inc
ljmp
jnp
sub
xchg
lds
add
adc
jae
movsb
faddl
rcrb
xor
stos
xchg
jp,pn
mov
lock
repz
test
push
pushf
pop
lods
cmp
mov
mov
add
push
jge
push
mov
cmp
aas
dec
push
stc
push
rorl
shr
jnp
test
adc
xchg
call
jle
jl
test
cwtl
arpl
xor
add
xorb
divl
sub
pop
icebp
cmp
sub
enterw
mov
dec
in
dec
jle
fdivl
dec
push
push
jns
push
push
mov
loope
inc
push
mov
out
pop
cmp
mov
leave
sbb
inc
mov
imul
repnz
inc
add
cld
lcall
test
sub
into
jecxz
loopne
xor
mov
cmpsb
adc
pop
or
test
xchg
test
jnp
ds
leave
cmp
outsb
push
shll
dec
pop
mov
in
stc
test
aad
out
xchg
mov
push
jae
decl
inc
push
hlt
lods
push
xchg
mov
mov
fwait
pop
jne
mov
gs
decb
js
push
cwtl
and
jp
mov
lods
mov
in
inc
cs
jecxz
mov
js
loopne
cld
rorl
das
popa
fcompp
in
mov
popa
mov
setle
sub
rol
add
adc
or
push
mov
inc
stc
mov
insl
mov
and
push
inc
cmp
sarb
xchg
mov
inc
adc
push
push
stos
lea
jmp
sbb
add
jmp
push
xchg
cmc
mov
adc
cmp
rclb
pop
mov
sbb
pushf
jge
inc
bound
and
cmc
repz
fstps
call
test
xor
pop
push
xor
repnz
or
add
gs
hlt
mov
test
sub
and
and
std
or
ret
or
shll
pop
inc
call
jp
aas
adc
xchg
pop
pop
arpl
sbb
notl
dec
or
cmpsb
push
outsl
ret
in
lcall
and
sti
adc
jl
test
pop
add
inc
sbb
aad
pushf
rcrl
pop
add
aad
stc
stos
mov
push
cmpsb
jb
stos
in
dec
lahf
xor
ljmp
add
cmp
mov
cmp
aam
mov
pop
ret
mov
stos
stos
shr
mov
in
xchg
mov
ret
shll
ror
stos
jge
xlat
mov
dec
push
mov
mov
add
or
pop
imul
aad
sbb
sub
scas
mov
mov
das
icebp
mov
in
mov
cltd
scas
lds
xchg
repnz
add
sti
push
enter
pop
sub
push
into
or
push
inc
or
adc
sub
stos
popf
fnstsw
cmpsl
icebp
sti
clc
pop
adc
in
inc
nop
xor
arpl
in
xchg
add
fimuls
imul
push
adc
inc
jo
daa
sub
push
insl
jnp
mov
cmp
test
fcomip
sbb
or
enter
dec
push
jg
push
xchg
mov
xor
fisubrs
sbb
sarl
dec
jge
mov
stos
adcb
int
xor
cmp
call
cs
jg
lahf
sub
sbb
orl
dec
sbb
adc
es
jp
cltd
mov
lret
fs
gs
and
add
jns
xlat
dec
push
cmc
push
mov
jp
repz
cmp
incb
cmp
xor
lock
ja
xchg
push
or
push
cmpb
push
and
fisubrl
dec
jg
xor
shl
mov
fmuls
and
mov
outsb
cwtl
fcompl
imul
jbe
inc
adc
mov
test
mov
movsl
push
ds
rcrb
mov
mov
dec
xor
pop
sbb
sub
and
je
jae
and
pop
es
push
push
jno
out
pusha
or
inc
or
clc
mov
rorl
out
lock
popf
or
rolb
adc
pop
sbb
push
icebp
and
fstl
fwait
movsl
sarl
rcrl
cmp
xlat
sbb
pop
xorl
xchg
andl
cmc
sbb
mov
xchg
inc
repnz
adc
inc
sbb
jns
lods
jmp
cltd
and
loop
add
in
mov
add
push
adc
popf
pop
xor
das
xor
cmc
stc
push
flds
add
jg
push
aam
jne
add
mov
in
or
scas
add
fiadds
push
aaa
ja
das
jbe
jecxz
lahf
addr16
gs
sti
pop
adc
jg
adc
mov
pop
pop
das
xchg
mov
sbb
xor
mov
popa
push
sbb
or
cmc
mov
and
ja
or
ror
mov
jo
push
std
test
jbe
jmp
je
pop
cwtl
lods
and
jle
cmp
cmp
stc
add
dec
das
mov
dec
jle
add
xor
jp
cmpsb
addr16
mov
mov
pop
push
xchg
sti
cmp
sbbb
movsb
adc
outsl
sbb
add
mov
xchg
inc
mov
mov
lcall
push
stos
sarl
mov
scas
mov
fwait
or
ret
test
testl
test
pop
dec
pop
mov
add
mov
inc
iret
in
cmpsl
xchg
pop
xchg
xor
jns
mov
das
xchg
sti
ljmp
clc
sbb
mov
jl
icebp
sub
inc
cmp
shlb
jge
or
mov
test
stc
js
fcoms
scas
insb
and
mov
cmpsb
add
adc
stc
jae
or
xchg
mov
push
mov
cmp
iret
lods
imul
psadbw
hlt
hlt
jb
call
fwait
pop
popf
mov
mov
call
cld
xchg
mov
test
and
cmpl
sbb
mov
mov
lret
outsb
lods
cmp
insb
fildl
in
sub
pop
mov
mov
pop
dec
dec
and
cmp
jmp
cli
jle
jmp
int
iret
aad
sub
push
mov
cmp
push
lds
mov
inc
jns
sub
pop
mov
mov
mov
cmpsb
cwtl
shl
jns
and
lret
cli
je
push
into
and
cld
mov
ds
pop
into
mov
mul
pop
mov
out
mov
inc
scas
push
push
cltd
repz
adc
jbe
mov
pushf
out
iret
js
lahf
sbb
mov
dec
mov
xchg
xor
aaa
pop
pop
movsl
jp
mov
bound
hlt
popa
je
inc
shrb
cmp
and
xchg
jb
aam
fiadds
pop
mov
mov
inc
pop
rorl
mov
xor
iret
and
call
add
mov
adc
mov
in
arpl
shlb
shl
or
aas
out
adc
pop
xchg
add
js
subl
movl
and
mov
test
inc
fbstp
sbb
lock
push
stos
and
in
clc
ja
arpl
jp
inc
mov
push
je
fsubrs
subb
mov
scas
mov
arpl
sbb
jmp
ss
into
popw
movsb
ja
sub
nop
scas
lcall
add
xor
and
or
test
cmp
lcall
or
in
adc
mov
les
cmp
adc
mov
mov
mov
adc
ljmp
fiadds
int
iret
outsl
xor
mov
cmp
add
imul
aam
addr16
fbstp
test
repz
loope
cmove
cmc
int
jns
aam
xor
lret
lahf
pop
jae
test
out
pusha
add
test
mov
sbb
inc
int3
gs
jno
cwtl
idivl
mov
jae
out
or
push
adc
push
int3
cmp
enter
fisubrl
mov
push
loop
bsf
rcr
mov
les
inc
aam
lret
xchg
xchg
dec
or
test
inc
aas
push
jae
lret
lcall
inc
dec
dec
jbe
sahf
push
sbb
push
sahf
dec
mov
lcall
lods
lcall
mov
jb
addr16
shll
aad
in
jmp
push
or
shl
cmpsl
mov
mov
or
or
pop
push
mov
int3
test
or
aam
insb
mov
pop
sti
dec
pop
fnstcw
xor
fstpt
cmp
add
sbb
fmul
mov
push
fbstp
test
arpl
int
and
stos
shrl
mov
sub
hlt
out
fcompl
push
pop
adc
or
cmpsb
imul
xor
mov
nop
lcall
add
and
cmc
inc
cld
cmp
jecxz
jns
add
mov
mov
or
fwait
scas
add
jle
loop
push
mov
bound
mov
mov
call
or
pop
xchg
adc
les
in
out
push
pop
call
push
or
das
jmp
and
inc
xchg
in
mov
xchg
sbb
mov
fcmovb
or
xchg
inc
inc
negb
pop
cmpsb
push
push
movsb
in
mov
insl
or
int3
xchg
nop
test
cld
sbb
test
insb
xchg
xor
pop
sbb
cmc
adc
cmc
add
xchg
adc
add
lret
imul
mov
test
das
add
stos
dec
inc
pusha
add
outsb
mov
add
xlat
ret
sub
cld
mov
pusha
inc
inc
push
das
fadd
iret
xor
jno
shrl
jg
out
mov
add
mov
je
cmc
lret
cmp
addr16
mov
gs
adc
xor
pop
sub
mov
jmp
jno
sti
les
xor
jge
fnsave
xchg
cmp
inc
push
jecxz
inc
jmp
mov
movb
cmp
shr
std
cmp
adc
stos
xchg
sahf
or
push
ja
push
rorl
push
loopne
sub
int3
fs
out
push
rcl
rol
testl
cwtl
push
mov
daa
push
xchg
xchg
xor
in
loopew
xchg
mov
and
hlt
je
add
fidivl
xorl
pop
xchg
and
cwtl
insb
inc
rorb
rcll
pop
int3
jl
inc
pushf
jge
mov
fiadds
stos
pop
lret
jbe
jge
jl
fimull
add
push
das
sub
push
or
or
fsubrl
ret
cmc
sbb
and
push
addr16
inc
dec
aad
lcall
push
fidivs
sbb
sub
fdivrp
into
scas
fimuls
mov
push
mov
mov
testb
cmp
add
jo
xchg
data16
inc
dec
pusha
push
movsl
icebp
rorb
les
testb
mov
daa
and
sbb
aad
dec
push
lods
cmp
push
push
mov
lea
and
adc
stos
test
adcb
or
mov
rorb
mov
lret
add
cld
adc
mov
adc
inc
lods
repz
lds
mov
mov
jle
add
data16
lahf
popf
push
and
imul
repnz
int3
jne
in
shrl
imul
push
cmp
mov
push
test
lock
push
xor
pop
mov
lret
sahf
je
lahf
repz
add
jge
movsb
mov
rcr
ret
decb
pop
push
xchg
ficompl
and
cmpsb
ret
loope
ljmp
jmp
loop
push
inc
xor
xchg
imulb
inc
pop
jne
lret
addr16
push
cmp
sbb
mov
loopne
les
mov
dec
mov
mov
mov
imul
cltd
pop
mov
or
pop
daa
sbb
jns
pop
push
dec
sbb
and
mov
or
test
fdiv
push
movsl
inc
inc
gs
cmp
inc
inc
js
pushw
loopne
aam
movsb
mov
xor
fsubl
sbb
loope
addr16
xlat
mov
cwtl
push
fwait
mov
idiv
shlb
pop
lods
xor
pop
mov
icebp
jo
jnp
add
das
je
cwtl
xor
and
sub
xlat
out
aad
add
fiadds
fwait
or
aam
pop
les
adc
push
fldt
ret
jle
std
aaa
repz
sub
cmp
xor
arpl
inc
jbe
mull
pop
cld
xchg
std
or
out
push
or
cmp
repnz
xor
lret
pop
add
push
in
cmpsl
cmp
sub
setb
mov
cmp
add
adc
ljmp
addr16
insb
lea
and
and
mov
cli
push
fimull
mov
outsl
mov
cmpsb
push
mov
cmp
stos
mov
sub
mov
pop
fsts
lcall
jecxz
and
ja
jmp
dec
xchg
ficoml
outsb
addr16
mov
dec
cmp
adc
jl
push
mov
lds
sbbl
xchg
and
test
mov
ljmp
add
shll
scas
fsubrp
inc
push
test
enter
mov
repnz
jg
cmpsb
test
je
fwait
push
in
pcmpgtd
ds
sbb
mov
icebp
mov
lea
fiaddl
push
cmpb
fs
fdivrl
int3
inc
dec
sbb
cltd
jnp
mov
add
andb
and
lret
dec
jnp
jge
adc
mov
or
jmp
ss
in
ss
pop
pop
cltd
jg
fildll
cmp
sub
mov
sbb
js
mov
aaa
inc
aas
inc
mov
lock
jb
fcmovu
das
andl
push
test
inc
rorl
xor
pop
iret
xor
fwait
lahf
pop
leave
xchg
lret
and
dec
add
push
in
scas
jge
dec
mov
outsb
repz
call
xchg
xor
sub
rorb
dec
jnp
stos
lds
lret
aam
fcoml
sbb
xchg
dec
aaa
imul
ds
iret
into
addr16
mov
xchg
push
imul
test
cld
xor
mov
mov
int3
sub
hlt
push
jl
leave
nop
mov
or
cmc
inc
fadd
pop
data16
sbb
push
arpl
gs
cli
pop
lods
fildll
sahf
lods
clc
mov
xchg
js
push
test
repz
cli
push
idivl
bound
icebp
data16
pusha
add
faddp
mov
in
lock
mov
test
int3
iret
call
inc
mov
stc
pop
pop
movsl
scas
pushf
movl
adc
pop
xchg
loopne
insl
sub
cmc
into
cmp
in
inc
xchg
insb
leave
inc
movsl
jbe
xchg
hlt
aam
std
sbb
int
rorb
mov
and
inc
pop
lcall
repnz
inc
ficompl
push
push
mov
pop
and
es
into
hlt
subb
mov
decl
into
filds
sbb
sub
dec
cmpsb
ss
jmp
js
or
imul
dec
pop
cmp
pop
jmp
pop
cld
jns
and
int3
in
adc
popf
and
inc
in
mov
jp
stos
pop
mov
loope
jg
enter
or
sbb
out
mov
test
addr16
or
sbb
stos
xchg
ret
pop
add
sbb
inc
or
es
and
rcrl
jge
adc
pop
cmpsl
or
add
inc
adc
xchg
nop
sub
pop
xor
in
out
xchg
test
sahf
daa
add
ret
stc
negb
ret
aas
pop
scas
push
imul
pop
lds
xchg
or
lcall
leave
jge
or
stos
pop
add
jno
and
push
jns
shrb
pop
mov
movsb
push
stc
or
lea
out
xor
pop
in
cli
in
fimull
and
xor
or
dec
push
fnstcw
xchg
sahf
xchg
mov
fcomip
test
js
inc
add
push
daa
js
aas
push
movaps
incl
push
pop
sbb
lods
repnz
or
sahf
lods
lods
xchg
sbb
loopne
inc
idivb
dec
xchg
cmpsl
pop
and
bnd
push
cs
xor
movsl
insl
pop
cltd
mull
pop
add
cmp
pop
stc
mov
lds
jmp
sbb
popf
pushl
mov
out
push
xchg
add
fsubrs
sub
fmulp
sbb
pop
mov
pop
movsl
xor
xlat
inc
in
je
pop
adc
nop
imul
ss
add
pop
outsl
cmp
jne
xchg
sub
or
add
ljmp
out
add
enter
sbb
nop
sahf
iret
fcmove
ret
adc
sbb
and
inc
pop
add
loope
orl
push
jmp
cmp
cmp
or
fdivrs
jmp
pop
sub
ret
jo
xorl
rol
es
push
or
loope
js
sbb
dec
hlt
out
enter
sbb
sub
test
cmp
xchg
dec
cmp
mov
sub
mov
icebp
dec
push
imul
dec
jno
pop
popf
std
jnp
cmp
jmp
mov
jle
addr16
subl
mov
lcall
xchg
andl
inc
ds
push
xchg
mov
in
cmp
cmp
mov
mov
or
rolb
rclb
loop
add
stc
fnstsw
mov
push
ffreep
and
mov
dec
push
ljmp
hlt
inc
setge
mov
or
rolb
fsubs
dec
imul
lods
xor
xchg
xchg
xor
fistps
lret
les
ret
clc
rcr
mov
push
loopne
inc
xlat
cmp
cli
cmp
fisttpl
fdivrl
sti
jg
mov
orb
pop
mov
stos
cld
fldenv
or
inc
inc
push
loop
and
cmp
into
mov
xchg
ss
lahf
faddl
ja
pop
inc
fsubs
subl
loop
fadds
xor
mov
in
add
mov
loopne
ljmp
cmp
hlt
scas
js
mov
push
and
jnp
rcrl
shll
inc
into
mov
add
xchg
in
testl
mov
cltd
mov
repz
sbb
dec
mov
loopne
in
popa
lahf
mov
mov
jo
iret
push
and
cmc
rolb
imul
jae
xor
adc
push
mov
les
jl
jge
addr16
lret
dec
nop
mov
repnz
lods
or
sub
loope
out
mov
test
dec
shlb
jmp
daa
pop
xor
imul
mov
mov
lds
mov
mov
sbb
xchg
add
inc
daa
scas
pop
and
xlat
in
mov
daa
push
jns
inc
add
push
addr16
loop
push
sahf
and
cmp
push
sub
dec
jo
popa
fcomi
pop
dec
aad
fildl
gs
gs
push
mov
faddp
insl
sub
dec
leave
insl
adc
lcall
and
pushf
xor
jns
test
push
fdivrl
sbb
int3
nop
xor
mov
pop
fs
push
das
in
andl
jae
orl
cmpsw
and
and
cltd
push
fwait
in
xchg
and
test
cs
fpatan
jg
enter
popa
loopne
jns
lods
fwait
jp
ret
mov
clc
icebp
xor
adc
adc
cmp
sub
dec
dec
inc
das
aas
les
jbe
ja
jb
mov
scas
sbb
pop
inc
xchg
mov
xchg
imul
inc
pop
xchg
sub
roll
mov
lcall
add
cmp
inc
and
lock
dec
push
jle
or
pop
xchg
andl
cmc
out
add
decl
mov
sbb
imul
pop
loope
sti
fisubrl
jmp
arpl
push
stos
scas
mov
push
push
rol
repz
sub
mov
dec
rol
inc
test
clc
mov
mov
inc
fsubs
xor
lock
ja
adc
push
out
insl
cmpsb
shll
dec
lock
push
nop
enter
inc
jae
sbb
xchg
dec
push
nop
push
jmp
dec
mov
popa
das
dec
cmpsl
mov
sbb
rclb
loopne
in
sub
mov
jb
jl
lret
push
or
pop
mov
jmp
mov
sbb
xchg
daa
add
pop
sub
jns
pop
push
jle
push
adc
xor
add
or
mov
out
mov
push
sarl
js
stc
insb
cmc
in
mov
pop
sahf
fsts
pop
sbb
into
enter
add
mov
xor
xchg
xchg
dec
xchg
dec
or
leave
mov
mov
popa
cwtl
sub
fiadds
inc
cld
fwait
sub
jb
pop
jecxz
jge
push
cld
rclb
testb
rcrb
push
adc
sbb
ja
into
les
aad
inc
shll
sti
fmulp
mov
dec
dec
mov
int
mov
mov
js
loope
push
jg
dec
cmp
cmp
sbb
xchg
lahf
data16
xor
rcrl
and
jge
dec
jg
xchg
push
cld
push
fldl
cmp
cs
les
mov
jp
mov
jno
adcb
xchg
xor
add
cmp
in
repnz
cmp
cmpsb
je
aam
mov
push
jmp
sbb
xchg
and
sbb
sub
shlb
sub
jg
sub
lods
scas
popa
mov
pop
roll
lock
mov
sub
jne
divl
cmp
mov
dec
mov
mov
fldenv
ljmp
adc
insb
and
pop
fdivl
test
nop
pushf
int
scas
sbb
mov
fstpl
shl
fwait
hlt
jbe
jl
push
dec
and
pushf
dec
sarb
repz
sahf
sahf
jnp
and
test
dec
add
shrb
pop
cmp
pop
outsl
int3
cmp
shrb
aam
inc
stos
push
mov
mov
cmp
cmp
xchg
shr
jecxz
push
push
out
dec
int3
les
lock
fmuls
mov
scas
and
and
dec
mov
loop
scas
xor
in
int
jmp
pop
rcr
mov
pop
incb
andb
sub
xor
jge
jns
cmp
jmp
cs
cltd
bound
pop
fistl
adc
jnp
clc
les
pop
mov
dec
or
adc
scas
cmp
sbbb
les
lds
add
call
inc
mov
clc
jmp
or
inc
call
add
cmp
fdivp
xor
clc
lret
shr
cmp
negb
mov
xchg
icebp
dec
loopne
or
push
enter
fldcw
mov
xor
das
mov
inc
xor
in
adc
xor
cmp
mov
rorl
mov
jo
addl
push
arpl
cltd
hlt
jg
lret
shl
out
call
jge
fsts
push
adc
xor
gs
lds
adc
sub
jnp
jno
lock
sub
frstor
dec
mov
shlb
cmp
pop
jno
xchg
dec
add
rorb
xchg
cmp
fiadds
in
dec
mov
mov
sar
test
sub
and
mov
cltd
jae
xlat
push
adc
xchg
je
mov
pop
iret
mov
sbb
scas
and
repnz
inc
jnp
scas
sbb
mov
outsb
lods
inc
mov
xor
mov
aad
sbb
jae
mov
cmp
mov
stos
mov
xchg
fidivs
rcrl
scas
or
cmp
xchg
jg
les
add
movsl
lret
xchg
and
leave
insb
sbb
sahf
and
rclb
sub
mov
clc
and
fwait
btrl
vaddss
mov
mov
cmc
leave
orb
mov
ret
rol
mov
adc
push
repz
jo
push
mov
push
xchg
fucomp
lods
xchg
lods
ds
fdivp
add
icebp
dec
fisttpl
icebp
xchg
fadds
enter
cld
push
dec
pusha
out
subl
shrl
mov
jmp
add
inc
push
jbe
fwait
add
int3
cmp
pop
testl
addr16
or
into
ret
call
ja
mov
js
xorb
jge
xchg
rolb
pop
dec
jne
in
and
insl
push
dec
por
mov
popf
jecxz
mov
xchg
mov
mov
adc
aam
fnstenv
adc
in
lret
mov
pop
movsl
ret
mov
jmp
xchg
je
jecxz
mov
imul
sbb
mov
out
dec
imul
stos
jnp
icebp
sub
xor
outsl
sbb
test
popa
rol
std
sub
clc
mov
mov
ret
aaa
aaa
adc
mov
xchg
inc
dec
jl
ja
movsl
xor
adc
xor
adc
inc
call
and
sub
jl
lods
das
jno
add
push
jae
cmp
push
inc
add
xchg
pop
xchg
shll
fucomi
imul
in
leave
add
pop
inc
popf
int3
mov
mov
bound
shr
and
shll
notb
daa
sub
arpl
mov
rcr
fwait
jnp
daa
and
arpl
mov
mov
xchg
stos
push
fsubrl
xchg
fidivrl
xchg
aas
pushf
call
ret
mov
push
xlat
ss
adc
xor
std
sbb
inc
pop
pusha
jnp
mov
loop
adc
dec
dec
push
in
add
enter
ja
andb
lea
in
sub
int
stc
lahf
xor
inc
fdivrs
cmc
xor
dec
or
lret
xchg
and
dec
shll
scas
inc
jle
rcrl
add
es
outsl
push
andb
sbb
lock
idivb
fnstsw
int
imul
and
adc
into
call
sbb
sti
jmp
xchg
mov
lock
in
call
shrb
cmp
repnz
xchg
je
inc
sub
mov
in
lods
in
xorl
test
inc
sbb
xlat
adc
mov
jp
popf
test
add
and
loope
psubsb
cmpsl
mov
xor
out
xchg
imulb
movsl
xchg
sub
jmp
xchg
xchg
xlat
and
outsl
jmp
xchg
cmpsb
loope
lret
sub
or
mov
ja
xchg
ds
xor
push
sbb
ret
add
xchg
cwtl
adcb
pop
cs
stos
jp
inc
xchg
out
out
pop
pop
xor
jne
adc
jbe
lret
or
cmpsb
push
xchg
xlat
out
repz
xor
push
xchg
or
adc
adc
jmp
fs
pop
cltd
push
fistpl
sub
pushf
shlb
xlat
push
adc
arpl
cmp
mov
loopne
mov
jae
sbb
mov
push
pop
and
std
and
in
out
arpl
inc
ja
sub
push
rcr
fucomi
cmpsb
subl
mov
sbb
in
mov
leave
das
fmulp
lret
adc
or
outsb
jbe
add
sahf
rolb
hlt
cmp
pushf
ret
fmuls
mov
and
sub
inc
repnz
adc
out
cltd
or
pop
mov
pop
push
test
cmp
inc
call
nop
fmull
int
push
test
aad
ja
pop
push
push
mov
or
mov
xchg
gs
sub
clc
xchg
ficompl
in
cmp
imulb
out
lods
mov
hlt
pop
test
and
sbb
imul
xchg
xchg
mov
mov
andl
xchg
inc
cs
pop
div
cli
xor
pop
inc
and
stos
xor
sbb
mov
out
and
stc
lods
and
sub
jbe
shrl
pusha
popa
xor
mov
shlb
inc
dec
hlt
inc
mov
adc
cmp
mov
sti
xchg
scas
bound
or
cmpsb
je
push
inc
dec
dec
xchg
js
js
lcall
inc
gs
lret
mov
repnz
mov
negb
inc
add
daa
loop
cmpsl
mov
data16
ret
cmpsb
dec
push
scas
and
add
fwait
xchg
ljmp
or
pop
shrb
arpl
das
call
mov
pop
mov
shl
and
xchg
dec
mov
sub
pusha
fwait
mov
add
addr16
into
movsb
call
mov
mov
ret
sbb
sbb
add
sub
and
les
stos
sub
cmp
pop
dec
aam
mov
scas
adc
cli
arpl
mov
movsb
xchg
fmulp
mov
js
sub
les
call
xchg
cmp
das
dec
mov
stos
in
xlat
mov
mov
jne
cmp
adc
or
xor
sar
arpl
decb
cmp
fcoml
les
pushf
testl
add
adc
outsl
outsb
jecxz
push
mov
in
popa
jnp
fdivrl
loope
out
nop
cmpsl
js
leave
cli
mov
ror
test
xor
stos
mov
sti
stos
cmp
add
movsb
pop
cmpsl
pushf
into
or
push
xchg
outsb
xchg
frstor
fistpl
push
mov
ss
ret
sbb
fimuls
aam
and
aad
xor
xchg
lock
add
lods
sub
or
jecxz
mov
cli
add
int3
push
je
jnp
in
push
and
mov
stos
sub
inc
clc
mov
or
push
std
dec
xchg
sbb
in
cwtl
xor
lea
add
mov
xchg
pop
movsl
push
repz
xchg
jnp
dec
dec
xor
icebp
loope
lock
sbb
push
flds
nop
xor
popa
cmp
out
adc
add
push
push
ljmp
bound
sub
jge
dec
pushf
sub
or
popf
and
outsb
mov
mov
andl
add
cmp
gs
roll
push
data16
mov
xchg
ret
shll
stc
fcompl
or
mov
sbb
xor
pop
sarb
clc
rorb
or
incb
aam
inc
sbb
outsb
cmp
test
adc
pop
push
iret
loopne
push
mov
aam
repz
and
es
push
sbb
jge
int3
pop
inc
mov
gs
imul
xor
inc
xchg
push
or
mov
sti
mov
mov
sahf
je
fstl
xor
out
sti
icebp
add
mov
or
xor
fstps
mov
pop
mov
fadds
lret
mov
mov
or
add
mov
sahf
or
cmc
sbb
loop
nop
jp
sbb
xor
jae
adc
enter
and
ljmp
in
add
mov
mov
or
sub
insb
test
ficomps
iret
cltd
mov
sarl
test
sbb
out
mov
lods
sti
dec
or
cld
sbb
iret
jb
push
dec
ret
jno
popa
and
mov
push
lret
pop
mov
inc
fisubs
sub
xchg
cmp
icebp
jp
inc
inc
cmp
cmpsl
xchg
fadds
outsl
jmp
pand
arpl
pop
stc
pushf
fnstenv
dec
xchg
lret
imul
scas
xor
mov
scas
out
loop
insl
scas
in
out
ss
or
cli
adc
mov
js
ret
mov
add
pop
push
inc
xchg
nop
pop
lds
rclb
fwait
out
adc
test
jle
pop
mov
mov
or
std
lahf
sbb
jnp
push
cld
lds
sub
arpl
mov
adc
imul
or
ret
les
sahf
xchg
cmp
test
scas
aas
jo
jbe
int
movsb
adc
mov
push
addr16
lret
lods
fstpt
lock
outsl
ljmp
push
lods
pop
push
out
rclb
push
xor
sbb
int3
pop
pushf
adc
mov
dec
out
xlat
dec
xor
jle
cli
pop
data16
pop
dec
pop
jecxz
xor
xlat
outsb
push
lret
mov
es
in
dec
loopne
and
andb
mov
nop
jnp
out
mov
cmp
sub
pop
inc
jp
sbb
pop
popl
sbb
addr16
imul
ljmp
imul
sbb
add
fisubrl
mov
in
mov
xor
mov
xor
push
xchg
scas
mov
dec
push
stc
xchg
push
stc
lds
je
and
mov
stos
into
xchg
jb
push
lcall
pop
jmp
xor
and
add
mov
and
pop
cmc
leave
xor
add
cltd
pop
jb
mov
popa
sbb
in
fadds
jmp
jns
dec
adc
mov
iret
cs
push
inc
inc
lahf
repz
mov
dec
imul
fchs
push
jmp
dec
int
enter
fcoms
xlat
push
and
pop
mov
jns
xlat
mov
mov
jg
movsl
iret
daa
aam
imul
movsl
outsl
aad
xchg
xchg
pusha
cmp
inc
lret
jo
push
loopne
negl
daa
cli
lret
psubsw
pop
xchg
sahf
ds
sub
dec
lds
cmpsl
aad
cld
xchg
xchg
inc
out
or
hlt
xor
push
mov
fimuls
data16
lods
inc
ret
dec
lahf
or
dec
xchg
faddl
enter
ret
ljmp
adc
push
or
adc
pop
inc
fistpl
in
repnz
and
lret
movsb
pop
xor
nop
mov
dec
sbb
push
lahf
pop
out
test
imul
sub
dec
inc
dec
movsb
mov
pop
jno
fs
jp
je
pop
stos
stc
cmpsb
and
cli
iret
xchg
push
test
lea
loopne
es
out
cmpsl
jle
and
cmpsl
pop
mov
inc
pop
lods
loop
stos
ss
sbb
add
cwtl
add
jmp
xchg
or
add
das
xchg
cs
jl
mov
cmpsb
and
cmpsl
push
cwtl
rorb
imul
cltd
inc
xchg
xor
mov
pop
lret
cvtpi2ps
add
ljmp
mov
std
fcompl
iret
dec
test
mov
push
mov
add
push
xchg
test
mulb
mov
loopne
sbb
loop
add
iret
int
cmpsl
mov
pop
mov
das
das
mov
inc
mov
xchg
iret
xchg
xor
xchg
es
xor
add
mov
xor
rcl
or
and
cmp
jb
ljmp
bound
dec
add
movsb
dec
or
sbb
xchg
mov
aaa
gs
adc
sbb
iret
mov
jg
cmc
xchg
xor
std
iret
jae
movsb
adc
adc
inc
mov
out
cli
fldt
sub
xchg
addl
sub
scas
mov
les
in
ja
imul
lcall
pop
jge
or
inc
test
js
int3
es
dec
ljmp
mov
or
daa
ja
aaa
sub
inc
subl
test
inc
mov
pop
ljmp
jp
dec
xchg
or
adc
sbb
jg
push
aas
cmp
outsl
ljmp
pop
aad
cmc
or
mov
sti
ret
test
cltd
fimuls
lret
loope
lcall
stos
sbb
sarl
mov
sbb
repz
sbb
mov
add
cmc
xchg
or
pop
subl
in
in
dec
adc
arpl
ljmp
push
inc
leave
lret
lods
jl
xchg
push
out
mov
sub
ret
add
mov
bound
or
jmp
pop
scas
sbb
lock
xchg
test
sub
lea
mov
or
jl
out
push
roll
dec
dec
sub
mov
sub
lods
pop
push
lods
je
and
xchg
push
loope
sbb
mov
push
test
cmp
iret
sub
xchg
dec
shll
je
stos
into
sti
dec
fildll
add
negl
out
pop
mov
fwait
adc
or
push
pop
xchg
nop
iret
push
or
sarb
int3
mov
sub
sahf
scas
or
roll
mov
js
aaa
jno
out
mov
add
repz
sbb
xchg
repnz
jge
pop
out
xlat
pop
insl
xor
inc
fwait
pop
push
test
loopne
jbe
popa
dec
fwait
xchg
iret
hlt
mov
in
cld
xchg
int
inc
sahf
arpl
fcoms
mov
ss
stc
out
aaa
fsubl
ret
data16
jne
xchg
pop
mov
push
sahf
jg,pn
and
mov
cmc
mov
xor
cli
outsl
add
in
dec
push
dec
scas
imul
loopne
sar
aas
lods
pop
ds
pusha
xor
das
sbb
pop
jmp
scas
pop
jle,pn
icebp
icebp
and
stc
mov
jb
inc
fs
push
dec
inc
aas
inc
idivb
xchg
shlb
add
mov
jle
jl
lret
cmp
adc
cmp
popa
cmpsl
dec
push
mov
fidivrs
inc
daa
aam
inc
mov
xor
in
shrb
aad
mov
mov
fisubs
das
pop
mov
cmp
or
inc
sub
mov
scas
mov
mov
les
mov
les
subb
push
es
push
jecxz
popf
sub
ds
arpl
and
xor
sbb
mov
pop
push
mov
testl
or
jl
pop
dec
push
cmc
inc
mov
nop
xchg
mov
shl
fbstp
test
es
movsl
mov
sbb
lods
popf
mov
jbe
mov
in
sahf
pop
mov
jecxz
jl
pop
test
fbld
lock
push
mov
std
lahf
cmp
je
leave
mov
mov
iret
ja
and
insl
mov
jge
mov
data16
ja
mov
sbb
sub
mov
hlt
cld
arpl
js
dec
fildl
sbb
push
adc
hlt
fistpl
mov
mov
insl
sti
sub
and
iret
ret
dec
push
aam
cmp
or
inc
adc
pop
std
and
xor
add
cli
cld
inc
mov
cld
in
xor
mov
pop
out
das
repz
xchg
mov
jae
xchg
xor
and
arpl
xchg
daa
stos
or
or
add
shrb
sbb
add
or
shrb
cmpsb
scas
mov
adc
xor
xchg
pusha
dec
outsl
sbb
inc
inc
sbb
outsl
push
lods
mov
loopne
test
mov
or
call
dec
pop
shlb
into
mov
int3
stos
mov
sub
insl
fidivl
mov
dec
or
sub
imul
push
popf
jg
dec
repz
pop
mov
add
shrb
lds
sbb
mov
push
imul
cmpsl
movsl
jno
cld
mov
pushf
icebp
cmp
mov
stos
mov
pushf
sbb
aam
rolb
push
jmp
addr16
stos
dec
or
sub
mull
aad
or
add
push
inc
xchg
sub
aad
adc
sub
js
dec
icebp
mov
cmpsb
add
scas
aaa
test
cli
sub
imul
stos
push
mov
std
dec
jg
outsb
dec
xor
and
call
pop
js
mov
push
out
lahf
adcl
aam
mov
and
xchg
lock
sub
add
push
adc
mov
jbe
adc
repnz
scas
bound
cwtl
pop
jb
jbe
sub
shll
dec
cmpsb
loope
bound
hlt
test
filds
sbb
xchg
fidivrs
idivl
xchg
and
pop
jb
add
ret
sbb
xor
fistps
rcrl
mov
inc
push
lods
pusha
adc
push
push
pushf
jmp
in
outsb
mov
xchg
add
insb
mov
mov
mov
cmp
dec
test
je
stos
push
orl
or
push
adc
cld
cmp
pop
icebp
adc
insb
aaa
sbb
fwait
lret
inc
fcmovnu
gs
out
stos
inc
and
jae
push
jnp
shrl
cmp
or
jbe
mov
mov
movups
sub
inc
out
cmp
cmc
je
scas
popa
insb
or
out
cs
ret
lea
cld
add
pop
push
pop
mov
or
sbb
int3
jno
add
mov
loopne
pop
add
cmp
push
notl
push
sbb
adc
dec
inc
shr
mov
fs
andb
stc
jecxz
push
add
call
jl
popf
mov
sbb
pop
loop
addr16
dec
mov
in
xor
jle
pop
mov
mov
lret
pop
sbb
inc
pop
outsl
mov
aaa
jmp
push
cld
inc
aas
pop
rclb
ret
stos
je
loopne
out
cmpsl
sbb
mov
dec
shll
pop
and
test
pop
in
stos
shl
xorb
and
sahf
gs
inc
lcall
fs
adc
loop
ja
push
add
rclb
mov
mov
insl
sbb
adc
sbbb
jge
mov
int3
adc
add
gs
xchg
and
addr16
stc
fistpll
mov
inc
scas
dec
pop
cmp
and
arpl
pop
into
dec
add
cmp
dec
mov
mov
ret
sub
sahf
inc
aaa
fwait
aad
mov
xchg
bound
lcall
xlat
out
sub
xchg
inc
in
adc
push
cmpsl
in
xor
scas
test
cmp
test
or
enter
sarl
jne
pop
jge
into
gs
rcr
lock
pop
shrb
outsl
push
xor
push
and
xchg
xchg
stos
cltd
push
cmc
and
xor
mov
cmp
in
pop
dec
sbb
bound
push
jecxz
in
jne
add
leave
mov
popf
out
test
pop
xor
call
xor
mov
cmp
ret
lret
out
push
insl
dec
or
mov
insb
mov
jg
adc
inc
jbe
xchg
pop
cwtl
push
frstor
xchg
inc
jne
dec
pusha
cs
xor
mov
call
dec
pop
mov
jg
mov
out
lahf
fidivrs
stc
ret
xchg
cwtl
pop
sub
enter
inc
adc
push
dec
shll
push
outsl
clc
pop
cmp
xchg
xor
sbb
mov
in
cmp
stc
xor
mov
scas
in
lret
mov
adc
in
cmp
xchg
or
inc
pushf
andl
lock
mov
jo
xchg
decb
inc
sub
outsl
imul
scas
arpl
aaa
loopne
pop
ss
fidivl
adc
push
push
imul
lds
push
mov
mov
sahf
pop
inc
xor
mov
mov
incl
out
push
cmp
aaa
lret
xchg
pop
ljmp
aas
mov
scas
iret
out
cmpsl
adc
icebp
shlb
push
int3
mov
push
xor
out
and
icebp
push
test
test
out
loopne
cmp
fistpl
mov
shrl
mov
int3
fldl
lods
mov
pop
fwait
inc
push
aam
jb
dec
xor
xor
fisubrs
enter
loop
out
and
jo
lret
fs
test
inc
sub
mov
jb
mov
pop
jl
pop
mov
dec
mov
lea
leave
sub
mull
inc
xchg
jns
loope
lret
imul
push
int3
pop
jle
loopne
adc
add
xlat
xchg
into
and
push
ds
in
outsl
stc
adcl
mov
inc
lods
into
dec
insl
inc
gs
inc
aam
sbb
mov
bound
sbb
add
out
call
xor
pop
jnp
movsl
cmpsb
fbstp
lcall
jae
sub
jp
fcmovbe
jae
xchg
sub
or
mov
xchg
insb
pop
icebp
pop
cmp
sbb
shll
loop
jno
cmpsb
and
pusha
mov
pop
sbb
dec
push
pop
out
vrcpss
movsl
gs
sbb
lods
arpl
inc
aam
orl
loopne
pop
sub
xor
xor
push
cmpb
lret
movsl
inc
and
out
mov
jb
clc
inc
sbb
scas
aad
pop
mov
mov
or
shll
enter
sub
xor
pop
adc
inc
int
adc
test
pop
sti
and
rolb
cmp
cmc
cmp
push
jge
popa
fisubl
inc
stos
pusha
lods
add
ret
push
cmpsb
test
mov
mov
fs
add
xchg
or
out
and
adc
leave
loopne
cmc
cmpsb
or
sbb
notl
xchg
cmpsl
fmul
jge
sub
fstl
and
shrb
dec
lds
xchg
dec
and
and
xor
xor
xchg
pop
pop
jns
cmpsl
and
imul
jge
int
sub
and
and
lret
into
call
hlt
sti
fisttpl
icebp
ret
mov
jbe
mov
repz
testb
aaa
ja
rcl
and
jnp
sahf
mov
roll
call
hlt
sbb
push
jle
jl
jno
mov
repnz
int
jge
mov
cmp
push
ret
jno
call
ja
jne
aam
scas
ret
pop
stos
in
stc
adc
movsl
test
mov
aas
xchg
cmp
js
into
faddp
mov
xchg
aaa
in
mov
popa
pop
sbb
shl
jg
mov
imul
mov
push
loope
xor
addr16
pop
pop
and
outsl
int
xor
outsl
and
push
repz
fs
lds
dec
ret
lods
jl
add
adc
pop
sbb
pushf
and
arpl
sub
cltd
icebp
xchg
push
push
sub
push
add
fbld
cld
incl
jle
call
out
jg
inc
decl
pop
xlat
xor
std
les
rorl
stos
mov
xchg
sub
orl
movsb
fstpl
mov
scas
inc
test
cltd
sbb
out
push
or
in
out
shlb
cmp
pop
loope
sub
adc
es
dec
dec
shll
out
pop
push
cmpsb
sub
jle
cmp
je
dec
lahf
pop
imul
jae
or
sub
loope
mov
shl
je
xchg
dec
mov
jo
sub
jle
repnz
mov
dec
mov
and
push
jmp
js
and
and
repnz
adc
push
adc
and
dec
xchg
inc
or
jno
inc
sub
mov
xchg
inc
xor
jecxz
mov
sbb
out
pop
ret
cmp
lret
outsl
xor
iret
loope
sarl
and
jne
cwtl
arpl
jg
sub
test
adc
faddl
push
xchg
rcl
push
xchg
sub
sbb
mov
das
fwait
xchg
mov
popf
jnp
push
or
scas
jle
fists
mov
fwait
inc
subl
imul
sbb
stos
mov
in
push
loop
adc
or
pop
dec
clc
sub
shrl
cmp
jmp
cmp
cmpsb
seta
into
xor
adc
cmp
bound
idiv
pop
ss
rolb
push
lds
or
mov
mov
lea
mov
outsl
ljmp
mov
sahf
mov
out
enter
lcall
in
xchg
popa
repz
push
test
pop
mov
xchg
and
xchg
hlt
arpl
dec
cs
mov
gs
sti
js
sub
mov
xchg
sbb
mov
rep
dec
cwtl
xchg
bound
ret
adc
xchg
dec
inc
frstor
adc
sub
out
dec
rorl
outsb
and
and
sub
sti
cmpl
lret
inc
jno
lret
jmp
les
pushf
stc
dec
fldl
rcll
cld
js
push
daa
pop
shlb
sbb
xchg
inc
push
fdivrs
mov
xchg
lcall
addr16
jl
test
pop
jb
jno
imul
push
jecxz
cmpsb
stc
mov
push
xchg
mov
sarb
out
sub
mov
and
scas
fsubrs
sub
jecxz
out
pop
sub
cs
jno
xor
mov
cwtl
xor
mov
cmp
push
aas
adc
jg
sub
lds
mov
inc
js
addr16
xor
fnstsw
sbb
mov
sbb
movsl
sub
jmp
push
or
mov
mov
lret
lret
pop
mull
call
cli
sbb
sbb
neg
mov
subb
inc
hlt
xor
repz
bound
or
lahf
inc
pop
lods
or
adc
sahf
pop
pop
mov
cwtl
adc
pushf
push
imul
enter
sti
or
mov
mov
add
push
pusha
dec
push
pushf
mov
loopne
imul
mov
xchg
add
mov
mov
jl
pop
inc
stos
aad
mov
xchg
into
sbb
adc
jge
and
adc
ljmp
iret
xchg
imul
ss
add
sub
pop
and
push
aaa
lods
int3
mov
add
std
add
mov
daa
js
mul
test
test
jmp
xor
out
pop
mov
fstpl
adc
jnp
push
or
scas
hlt
cltd
subl
imul
dec
mov
clc
iret
adc
push
mov
xor
insl
mov
gs
lahf
mov
adc
jle
jmp
cmp
sahf
adc
pop
bound
pop
lahf
sub
imull
fdivrs
mov
out
in
sub
mov
xchg
dec
addr16
fcoms
mov
into
adc
fwait
xor
or
shll
adc
stos
out
jnp
lds
lock
mov
dec
mov
mov
mov
cmc
je
int
mov
dec
cmp
sbb
stc
sub
ror
pop
xorb
lcall
mov
shr
sbb
and
aad
dec
pop
ja
rolb
imul
mov
adc
nop
aas
daa
cmpsl
xchg
cmp
mov
inc
dec
test
enter
cltd
xchg
inc
enter
pop
bound
pop
jno
ljmp
jge
push
cmp
inc
push
inc
pop
push
es
repz
idivl
lcall
fcomps
xor
fsubrs
adc
push
rol
fcomps
sub
enter
pop
into
jmp
psubsw
in
mov
xor
rolb
test
jl
shrb
jl
adcl
mov
or
add
dec
mov
fwait
and
stos
and
lods
ficoml
outsl
pushf
jbe
outsb
mov
int3
mov
xchg
mov
pop
movsb
push
pop
outsl
mov
and
insl
inc
popf
mov
push
jmp
jmp
repnz
fdivrp
loopne
mov
mov
xor
mov
ret
or
cmp
shrl
enter
mov
xor
daa
xor
fimull
sbb
in
jl
enter
inc
sbb
lcall
adc
lcall
and
mov
cmp
push
ljmp
xor
nop
rcll
insl
sub
sbb
bound
jnp
out
add
js
xchg
popf
sahf
mov
sub
stos
mov
js
movsb
adc
fs
cmp
jmp
sbb
jge
jbe
cs
adc
dec
mov
ss
push
or
jnp
sub
ds
sbb
push
movsb
sub
inc
xchg
popa
dec
dec
and
pop
dec
jge
lods
push
add
pop
lods
push
ja
add
lahf
mov
xchg
bound
ret
and
xchg
int
not
sbb
sbb
add
push
call
jg
adc
push
push
and
mov
push
pop
pop
or
mov
and
adc
cltd
aad
or
jb
add
dec
xlat
mov
jns
mov
xchg
mov
inc
out
stc
stc
or
fldt
cmp
xchg
inc
jge
loop
mov
int3
or
insl
add
ret
jae
out
sub
sub
lret
jg
fadd
pop
mov
mov
lcall
shl
jb
xchg
scas
cmp
into
repz
test
sbb
dec
mov
adc
icebp
mov
sbb
out
fwait
push
into
mov
iret
gs
mov
mov
push
cmpsl
scas
int
add
pop
aaa
rcll
imul
mov
jl
fsubl
mov
jne
and
imul
cmp
cmpsb
add
adc
mov
das
push
movsl
test
addb
call
pop
loop
idivb
insl
jle
aad
int
jmp
and
ss
push
popa
dec
mov
pop
inc
add
pushf
mov
pop
stos
push
jmp
mov
out
es
mov
or
pusha
mull
inc
stos
outsb
inc
ret
fdivrs
arpl
adc
loope
arpl
mov
sub
mov
jp
lock
gs
sbb
decb
or
jo
repnz
or
jae
lret
push
jl
int
inc
xlat
movsb
adc
iret
mov
mov
cmp
pop
add
push
push
movsb
or
test
ja
push
cwtl
and
repz
mov
shlb
lea
outsb
jne
arpl
mov
fildll
clc
insl
nop
pop
ret
les
jae
adc
cmp
pop
jb
xchg
iret
and
fimuls
xor
sbbb
out
xchg
nop
ja
mov
cmpsb
jbe
add
cmp
inc
rolb
incb
mov
mov
push
nop
filds
lock
or
add
xor
mov
pop
lret
cmovo
test
jno
dec
int3
scas
xchg
xchg
shrb
hlt
or
add
mov
mov
push
pop
dec
stc
mov
push
dec
mov
cmp
pushf
les
shrl
mov
sub
push
adc
lcall
sub
fs
dec
sti
shl
or
lea
jnp
es
sub
add
lcall
ret
adc
push
sub
mov
and
pop
pop
push
pop
sub
or
lcall
xchg
clc
rcrl
cltd
adc
fldl
ret
sti
cmc
mov
push
sub
iret
arpl
xchg
push
jns
lret
insb
test
xor
fcomps
sbb
adc
jmp
sbb
dec
mov
aaa
inc
mov
xor
inc
mov
ret
sar
rol
and
sbb
xchg
xchg
test
cld
dec
ss
das
or
scas
lds
incb
cmp
xor
jnp
incb
loopne
ljmp
lods
xor
je
cmpsl
push
jl
scas
mov
jo
xchg
insl
jo
pop
pop
cmpsb
cmp
cld
call
cmpsl
mov
iret
orl
sbb
ja
sub
insl
imull
gs
ljmp
inc
sub
out
inc
pop
int
shrb
jge
pop
inc
dec
lock
jo
pop
into
pop
pushfw
mov
mov
sbb
mov
push
jle
mov
push
push
xor
adc
aad
pop
push
hlt
fiaddl
aam
test
add
sbb
xchg
sbb
test
fwait
xor
sbb
lods
jg
lods
sub
adc
cmp
orps
aad
into
je
scas
imul
adc
iret
test
or
in
sbb
sbb
mov
jp
pop
ss
and
mov
lods
insb
or
mov
insl
jp
call
sub
xor
jb
bound
mov
insl
inc
in
in
movsl
pusha
negb
mov
cs
dec
or
dec
mov
xor
fistpll
mov
push
and
retw
mov
cld
pop
push
cmp
clc
push
mov
xor
leave
je
in
leave
sbb
subl
push
pop
adc
arpl
cmpsb
inc
cmc
fsubp
inc
mov
push
leave
lock
dec
daa
mov
sbb
inc
fnstcw
add
in
push
mov
lock
repz
aas
iret
sbb
popa
enter
sub
or
hlt
and
in
ljmp
outsl
in
dec
adc
dec
jb
mov
jno
sub
cmpsl
repz
cmpsb
xor
or
sbb
pop
das
mov
xor
lea
jns
std
idiv
cmp
into
test
subl
in
lea
nopl
lods
dec
pop
and
and
pop
adc
movsb
aas
pop
push
repz
add
popf
lods
into
push
insl
xor
or
cwtl
cmp
sbb
jne
insb
subb
mov
add
mov
out
int
fisttpll
je
addr16
adcl
push
popf
jl
dec
outsb
jnp
push
push
sahf
xchg
clc
xlat
stc
aas
ss
insl
shlb
in
rolb
div
adc
sbb
xchg
xchg
xchg
jb
pop
sti
subb
mov
xorl
insl
aam
jp
jno
sub
sti
das
cli
das
out
rcrb
push
cmp
or
or
push
jg
out
mov
std
push
cs
es
pop
cld
divps
in
fwait
pop
lods
inc
jge
mov
add
ja
fisttpl
push
cmpsb
mov
add
stos
int3
movsl
cmp
cmp
dec
mov
jbe
rol
stos
xchg
inc
jmp
clc
cmp
ret
ret
pop
xchg
mov
or
cmp
sbb
repnz
popl
lods
push
mov
mov
jmp
jmp
leave
xor
aas
es
fisubrs
jb
xor
xor
jle
pop
adc
pop
jno
pop
dec
pop
andb
cmpsl
lcall
addl
add
je
and
test
jge
add
or
jle
xor
add
add
jno
call
aaa
shl
jmp
cltd
aas
adc
fs
out
inc
pop
adc
or
mov
mov
mov
push
mov
xor
sbb
inc
xor
push
mov
add
dec
mov
shr
idivl
mov
xor
sub
scas
fmul
sbb
pop
mov
mov
arpl
dec
leave
xchg
xor
and
mov
mov
lret
sub
pop
sbb
jne
jge
xchg
dec
imul
inc
mov
cli
mov
adc
lods
sub
fcomp
cmp
sub
and
test
push
push
mov
and
mov
jge
lea
xor
sbb
jnp
fnsave
push
mov
hlt
iret
aam
push
fidivrs
xorl
cs
jne
sbb
xchg
push
pop
push
xor
sub
dec
pop
xchg
movsl
pop
sbb
shrb
push
dec
call
ds
or
push
ja
jno
sub
mov
fbstp
in
or
ja
sub
cmp
and
notb
add
inc
sub
insl
inc
sub
leave
stos
mov
push
mov
outsb
int
data16
decl
or
dec
pop
sarb
in
addl
jnp,pn
sahf
ljmp
in
cmp
roll
ja
push
out
xchg
dec
mov
stos
int3
mov
or
adc
pop
xor
mov
fldl
mov
stos
sbbb
scas
test
call
push
push
push
lock
jl
cmp
inc
pop
sbbl
gs
or
mov
inc
ja
push
mov
xor
xchg
xor
lahf
adc
sub
jge
fs
ss
jle
xor
xchg
dec
sti
xchg
icebp
lds
mov
mov
pop
mov
test
mov
mov
fildl
xchg
pop
repnz
repz
cli
fbld
fwait
jb
arpl
dec
adc
js
mov
out
adc
fisttpll
sub
cmp
adc
andl
dec
xchg
rcrl
or
cli
je
movsl
mov
mov
push
bound
mov
cmp
sub
pop
stc
mov
mov
mov
xor
in
pop
push
push
les
mov
movsl
sub
jmp
ja
adc
jns
xchg
stc
inc
ret
fs
ljmp
lret
lea
push
lods
pop
inc
int
fdiv
mov
insb
stos
lock
sub
nop
aaa
cmpsl
out
inc
rcr
push
and
sarl
cltd
pop
repz
mov
es
sbb
adc
and
jo
mov
loopne
xchg
or
pushf
sub
push
sbb
ljmp
movsl
dec
sub
inc
adc
jmp
mov
mov
pop
push
inc
pop
jmp
sbb
pushf
xchg
sar
cltd
inc
in
sbb
in
xor
mov
aam
xor
or
sub
push
int3
add
cld
push
mov
inc
xor
mov
adc
aad
inc
test
int
pop
jge
mov
adc
push
fs
mov
add
push
stc
cmp
xlat
lcall
sbb
push
jl
sbb
fisubl
addr16
lods
pop
insb
fcmovu
roll
sub
cmp
testl
popl
pop
cli
in
xchg
popf
add
out
mov
ftst
adc
push
mov
cwtl
xchg
and
push
out
insb
aad
ja
mov
aaa
xchg
sub
or
jge
cmp
adc
dec
in
out
icebp
mov
lods
dec
mov
xchg
cmp
adc
sub
clc
faddl
dec
sbb
data16
mov
orb
jg
cmp
jle
cmp
test
push
lret
cmp
les
fcom
sbb
pop
dec
mov
test
or
cmp
shll
lock
inc
pop
aam
mov
fwait
inc
ds
jg
ret
mov
xchg
insb
add
lahf
flds
mov
inc
xchg
fsubs
or
stos
cmp
xchg
sti
out
cmpsb
gs
flds
mov
mov
movsb
lods
and
sub
mov
and
dec
popa
inc
mov
fs
sub
jp
jle
jg
adc
pop
pop
cmpsl
pushl
mov
jmp
and
mov
addr16
xor
mov
cmp
add
push
hlt
imul
xchg
add
push
out
pop
popf
pop
lret
xor
daa
sub
fs
sub
and
push
pop
arpl
notl
cmp
repz
mov
out
outsl
mov
add
outsb
sub
imul
xchg
insl
rorb
in
push
cmpsl
addr16
addr16
test
add
enter
lods
mov
iret
adc
into
xor
xlat
mov
or
aas
mov
pop
lock
shl
jnp
sbb
mov
fistpll
cmpsl
adc
lcall
pop
mov
repnz
arpl
dec
outsl
xor
and
jbe
fwait
sub
testb
jg
movsb
mov
adc
jecxz
mov
je
int3
mov
adc
mov
cli
pop
vfmsubadd132ps
cld
cmp
test
das
scas
mov
adc
cltd
push
insb
xchg
jnp
imul
jge
and
mov
push
fwait
mov
jae
fisubl
rcl
sub
sub
lcall
cli
and
leave
sahf
das
outsb
and
out
xor
mov
bound
insb
lea
add
or
pop
sub
test
roll
mov
add
cltd
jbe
adc
mov
or
adc
insl
xlat
int3
and
mov
mov
push
inc
and
fwait
mov
jnp
inc
andb
xchg
fdivl
int3
lret
cmc
mov
outsb
test
mov
jecxz
addr16
ss
arpl
add
xor
movsb
jns
mov
mov
dec
pop
xor
hlt
enter
loopne
cltd
andb
xchg
xchg
mov
sbb
rclb
adc
jb
lock
stos
mov
sub
and
fwait
adc
std
xor
imul
pop
adcl
add
insl
mov
ja
or
adc
sub
mov
sbb
cmp
sbb
icebp
in
mov
inc
mov
adc
lods
xlat
les
scas
mov
adc
sub
xchg
out
push
ss
mov
mov
push
pop
push
rclb
pop
pop
xor
cltd
push
xchg
dec
xchg
in
jae
rcrb
mov
jnp
ret
sbb
lahf
shrb
out
or
stos
daa
fwait
mov
push
ficoms
push
rorb
loopne
mov
xor
pop
jno
lds
cmp
mov
jmp
cmpb
xor
gs
mov
mov
push
push
jecxz
sbb
fildl
sbb
je
movsl
mov
and
xlat
push
push
mov
lcall
cmp
jne
clc
in
and
mov
js
popa
pop
dec
aas
jb
sub
addr16
gs
rcrb
push
jl
adc
test
push
ljmp
int
outsb
add
jae
xchg
xchg
jl
pop
inc
int3
cltd
xlat
mov
lods
mov
mov
cmp
jbe
jnp
insb
aam
lret
push
or
dec
xchg
xchg
fs
lods
cmc
jno
and
testl
inc
fwait
inc
xor
test
push
push
add
inc
lods
xor
mov
addb
arpl
sbb
lcall
int
test
in
pushf
mov
mov
push
pop
adc
mov
xchg
call
cmp
or
adcl
loopne
sub
sub
fldt
mov
push
test
pop
inc
sar
push
ds
mov
fcomps
fidivrl
push
lret
cli
jb
repnz
jge
jmp
push
sub
pop
ds
scas
mov
cs
fbstp
sub
dec
lods
in
lret
lcall
sbb
mov
sub
mov
xor
gs
test
mov
ficoms
add
out
adc
dec
test
mov
and
xchg
in
loopne
lods
in
inc
fistps
add
xlat
cmp
loop
loop
push
mov
cmp
inc
mov
sbb
aaa
fimuls
shlb
neg
push
cld
ret
push
arpl
mov
aaa
enter
fs
pop
jl
xor
aam
xchg
lahf
mov
subl
data16
pushf
xchg
sti
and
in
jl
inc
into
cld
icebp
xlat
sub
cmpsb
and
pop
cmc
xchg
addr16
ret
mov
pop
repz
fs
lea
or
cmp
xchg
fiaddl
mov
les
icebp
jmp
xor
and
sarb
add
stos
xchg
in
sub
mov
push
cmp
bound
push
into
mov
ja
rcrl
ljmp
jmp
insl
dec
frstor
add
divl
stos
notb
lods
sahf
sahf
sbb
inc
daa
mov
sub
dec
xor
mov
sbb
xchg
cmp
mov
subb
sub
int3
pop
xor
rclb
sbbl
call
jle
push
xchg
and
lcall
dec
push
cmc
int
push
lahf
dec
daa
sub
rcrb
inc
push
add
push
imul
fcomp
mov
jl
mov
jbe
lock
adc
mov
xor
sahf
mov
aam
pop
fidivl
dec
pop
push
shll
push
jnp
fidivs
cmp
shr
and
pop
ss
xchg
out
push
cli
int
shrb
adc
sub
cmp
pop
repnz
xchg
push
out
jno
adc
aaa
cs
dec
outsl
xor
cmpsl
testl
mov
xor
insb
imulb
xor
ds
sub
push
bound
ja
or
jg
jno
dec
jg
mov
stos
pusha
inc
dec
inc
icebp
loop
mov
arpl
fs
push
aam
in
daa
xchg
push
in
xor
dec
decb
pop
jmp
adc
sbb
dec
ja
imul
and
mov
fcmovb
dec
jne
aas
cmp
shl
movsb
cmp
fistps
aad
mov
ds
pop
mov
fwait
mov
out
mov
mov
ret
loope
or
mov
pop
cmp
mov
pop
cmp
or
stos
push
jae
xchg
pushf
mov
movsl
lods
jns
jns
xchg
aam
sub
sbbb
dec
push
add
scas
je
imul
push
stos
pop
mov
inc
mulb
jns
leave
fsubrs
mov
cmp
push
xchg
or
adc
pop
adc
insb
jbe
mov
mov
scas
push
repz
jmp
push
inc
cwtl
movsl
fsub
pop
mov
push
xor
into
shlb
mov
loop,pn
push
inc
out
rcr
sbb
fdivrp
jle
fsubl
stos
add
cmp
mov
add
pushf
std
push
notl
xchg
push
cld
pop
mov
xor
popf
pop
testb
outsb
div
pop
imul
add
imul
cmp
jb
xchg
sti
popa
insl
sbb
fdivl
xchg
mov
sub
int
and
mov
lods
test
movsb
arpl
mov
pop
aad
loopne
xchg
jmp
call
xchg
and
je
shll
out
pop
cmpsl
xor
faddl
cmpsb
inc
push
inc
pop
xchg
aam
adc
aaa
inc
imul
mov
lahf
adc
out
mov
insb
adc
push
dec
iret
mov
mov
pop
test
leave
insl
jecxz
out
pop
test
jg
jmp
inc
sbb
movsb
fistpl
dec
xor
pop
lret
cmp
mov
push
dec
pop
outsb
inc
push
in
pop
nop
cwtl
dec
pop
mov
adcb
mov
fsubl
push
adc
mov
xor
sub
add
cmpsb
out
sbb
and
sub
inc
icebp
pop
jmp
fistl
jmp
out
lahf
xor
je
ficompl
or
enter
pop
mov
jle
lock
in
xor
mov
sub
xor
dec
cli
xchg
xor
stos
mov
jecxz
cmp
dec
inc
cmovae
ret
push
loop,pt
nop
test
ret
imul
jp,pn
das
sar
cmp
push
ds
xor
ljmp
adc
pop
mov
sti
int
jns
mov
xorb
daa
leave
movsb
movsl
push
pop
mov
push
imul
orb
push
or
jbe
pop
or
or
jne
push
aam
inc
rolb
mov
cmp
inc
fwait
push
mov
cmp
jle
push
mov
in
mov
or
jne
mov
mov
mov
push
std
int
mov
mov
fs
lds
insl
sub
ror
je
adcb
ja
aad
mov
and
int3
adc
mov
orl
bound
sahf
jl
or
fldcw
sbb
jmp
sub
dec
in
sub
jp
leave
clc
and
loop
seta
nop
ss
add
cli
jp
divl
imul
and
cmp
sti
into
sub
cmpsl
mov
add
inc
imul
call
pop
enter
sub
lds
pop
xor
dec
fadds
xor
push
xchg
and
and
mov
scas
hlt
mov
in
adc
faddl
stos
lahf
repnz
jg
cwtl
jmp
jl
int3
outsl
rdpmc
fwait
push
ret
xor
hlt
push
add
mov
or
lods
and
inc
adc
fsub
sarl
xchg
loop
cld
push
adc
fistps
je
sarl
xchg
inc
leave
or
in
dec
inc
inc
shll
mov
add
fcom
jp
jle
or
jno
call
xor
xchg
out
negl
push
in
push
outsl
aad
or
push
lahf
adc
sti
cmovge
mov
inc
hlt
xor
jmp
fcomps
lahf
mov
mov
inc
sub
mov
fisttpl
std
adc
sub
xchg
xor
andl
pop
out
dec
xchg
test
ja
jno
frstor
outsl
add
int
sbb
mov
sahf
add
movsl
pop
pop
sub
movsb
inc
fiadds
sub
mov
inc
packssdw
imul
and
fs
data16
jg
out
cmp
lock
insb
jne
psrlq
xor
sub
out
outsb
std
pop
test
lods
lds
shlb
jmp
loopne
int
xor
lds
push
int3
fisttpl
cmp
gs
xlat
aas
mov
out
loopne
push
mov
dec
scas
out
xchg
je
cmpb
cmc
ror
mov
dec
cmp
mov
pop
and
pop
shrb
xchg
imul
cmp
bound
dec
aaa
insb
filds
sti
ret
xchg
sahf
cmp
je
loopne
xor
push
cmp
je
inc
push
mov
mov
test
mov
add
jno
push
mov
js
jp
lds
out
test
dec
iret
xor
loopne
jg
cmpsb
sub
clc
add
ffreep
movsb
adc
lahf
sub
add
sub
mov
push
int
dec
popa
cwtl
pop
das
sub
int
dec
hlt
pop
add
xchg
fcompl
fldt
mov
sti
sbb
hlt
rorl
push
adc
fbld
push
lods
arpl
xchg
stos
add
pushf
jne,pt
or
cmpb
jmp
popa
push
pop
clc
cltd
jne
mov
pop
fisubl
cmp
push
scas
icebp
test
lds
and
jmp
sti
adc
sub
xchg
inc
iret
sbb
and
loopne
xor
int3
stc
pusha
push
fnstsw
dec
pop
xor
into
arpl
sbb
mov
hlt
icebp
or
push
popa
xor
mov
into
inc
mov
jne
dec
mov
push
rorb
cwtl
inc
jns
cmp
jle
and
test
dec
fwait
dec
orl
lods
seta
jb
cmp
push
stos
out
mov
add
in
out
sbb
subl
mov
ret
int
jge
adc
add
jno
cmpsl
js
das
stc
jg
or
inc
int3
gs
cmp
mov
and
repz
movsl
test
sub
pop
dec
and
push
ficoms
je
adc
fldt
mov
iret
sub
jnp
negl
sti
ja
scas
mov
sub
enter
ret
pop
out
test
lock
aas
add
adc
sub
aad
shll
loope
or
sub
loope
or
mov
out
gs
lea
ror
nop
mov
push
popf
dec
ret
lds
and
adcb
cmp
add
dec
subb
fbld
lods
push
inc
fiadds
cmp
adc
es
int3
mov
sbb
mov
out
sbb
movsb
xchg
notl
push
fs
dec
mov
mov
cmp
arpl
cmp
sbb
jno
sub
fbld
adc
popf
push
test
cmp
add
lcall
inc
iret
add
xchg
iret
outsl
push
and
in
adc
jp
js
sbb
ss
aad
lahf
ret
or
mov
aam
push
les
mov
leave
jmp
mov
xchg
jmp
or
repz
or
int
jb
enter
pop
xor
and
ja
in
lods
leave
int3
aam
adc
je
icebp
jb
std
pop
pusha
adc
pop
jnp
loopne
loop
sbb
movsb
cmpsl
dec
stos
test
sbb
inc
in
mov
or
mov
icebp
mov
mov
bound
orb
outsl
imul
mov
xchg
pop
cli
mov
push
dec
jno
addr16
insb
sbb
insl
sub
lods
mov
jae
pop
aas
push
push
dec
xchg
fisubs
daa
aad
scas
cmp
push
data16
sbb
sbb
daa
mov
sbb
inc
adc
fldenv
decb
mov
xor
or
leave
lods
sub
jmp
push
xor
push
aas
mov
add
xchg
mov
cmp
test
mov
push
addb
in
cli
mov
aaa
ret
clc
bound
sub
mov
rcrb
lds
adc
ss
outsl
fidivl
mov
addb
pop
inc
sub
lcall
std
test
pusha
pop
sti
scas
jo
and
dec
popa
adc
sub
inc
fadd
fs
stc
mov
outsl
adc
xchg
dec
cli
push
jne
push
pop
lods
jp
loop
inc
dec
das
mov
mov
xchg
std
cwtl
jmp
jecxz
mov
add
loop
pusha
xor
movsl
xchg
lret
std
xchg
out
repz
movsb
stos
cmp
lods
fcmovne
pop
outsl
adc
repz
pop
xchg
xchg
rorb
popf
addr16
sbb
xchg
lods
inc
incl
mov
mov
aaa
pop
lods
cmp
jno
xor
iret
lcall
mov
xor
negl
pushf
lds
inc
stos
int
cmp
and
out
lcall
mov
shlb
or
cmp
aad
sub
nop
cli
sbb
cmp
jg
pop
dec
push
insb
dec
imul
das
ljmp
rep
or
or
cmp
clc
or
mov
cmp
ffreep
pop
cltd
call
add
inc
je
shr
pop
push
xchg
push
fcmovnbe
push
jg
jl
out
test
adc
ss
push
jmp
pop
and
loope
dec
cwtl
imul
scas
mov
sbb
mov
repz
dec
subb
fprem
jl
jmp
mov
jnp
pop
mov
fcoms
out
mov
mov
inc
jo
jnp
inc
lahf
scas
cltd
adc
mov
dec
mov
push
mov
xor
add
push
and
subb
ret
out
test
xchg
call
ja
test
shll
ljmp
dec
loopne
inc
dec
ret
pop
imul
sti
out
inc
and
xchg
cmp
sub
xchg
andb
fs
dec
out
ds
push
stos
scas
imul
pop
fldl
cmpsb
mov
mov
loope
sub
xor
inc
mov
insl
stos
dec
repz
and
pop
cmpsb
jmp
loop
lea
out
sarl
and
aaa
xlat
xchg
jb
sub
in
and
and
jmp
test
mov
mov
in
repz
pop
mov
jmp
mov
push
fisttps
int
or
test
ficoms
add
sbb
shll
int3
outsb
xchg
push
fildl
xchg
pop
pop
inc
call
adc
or
xlat
imul
ljmp
xlat
and
cmp
out
xor
add
or
and
adc
icebp
jmp
dec
add
pushf
fstpl
mov
jo
stc
mov
push
stos
in
test
push
std
daa
lahf
xchg
xor
jne
jp
mov
dec
push
sti
outsl
inc
imul
mov
and
push
add
adcl
loop
outsl
lahf
sbb
push
mov
repz
mov
je
jg
sub
xchg
pop
pop
xor
cmp
movsb
add
test
pop
sahf
sbb
sub
aam
pop
xlat
lods
pop
out
inc
sbb
aad
enter
add
repz
fs
leave
pop
lods
cmpsb
movsl
dec
repz
xor
adc
lods
out
mov
std
cmp
pop
inc
gs
outsb
mov
jmp
ja
aas
cmp
xchg
out
push
out
out
sub
sub
jns
cmp
pop
sbb
scas
mov
pop
pop
and
in
jns
mov
ret
mov
or
gs
inc
dec
sub
ret
test
loope
mov
and
insl
icebp
test
lahf
and
mov
fisttps
scas
push
fs
pop
cmp
sarb
paddusb
push
lds
movsb
out
lcall
xchg
add
lea
mov
and
and
loope
jge
cs
movsl
xor
jg
push
sbb
mov
or
call
mov
test
inc
je
mov
es
push
add
std
push
js
movsb
sbb
ret
inc
mov
xchg
add
call
test
add
add
xor
cmpsl
dec
cli
add
or
add
addr16
add
into
inc
in
mov
fsubrl
jmp
ljmp
push
add
or
mov
int3
pop
mov
sbb
mov
dec
xchg
mov
sub
sbb
and
shrb
xor
fs
rorb
mov
sub
cmp
icebp
cmp
mov
ja
inc
rol
and
je
and
dec
aad
push
dec
cmpl
test
cmpsb
cwtl
out
out
inc
cmp
dec
mov
data16
xor
dec
adc
fistpl
cwtl
push
sub
xchg
lret
inc
sbbl
xchg
sub
push
or
xor
push
sbb
add
sub
inc
pop
push
dec
adc
iret
dec
fs
mov
xor
sub
push
shll
js
in
test
dec
pop
lds
jno
xchg
inc
push
push
negl
loope
lds
pop
push
or
push
imul
inc
inc
xchg
inc
pcmpeqw
inc
adc
notl
inc
lret
push
inc
cmp
inc
mov
insb
stos
mov
ret
loopne
cmpsl
jmp
or
lcall
mov
push
out
and
add
cmpsl
loop
es
add
inc
sub
or
cs
nop
jae
cld
push
fwait
sar
lahf
push
loope
lock
jle
add
pop
xchg
mov
push
ret
add
sub
xchg
test
scas
adc
cmpsb
dec
mov
cmpsb
sub
notl
orl
dec
pop
dec
xchg
sti
test
inc
xchg
daa
rolb
push
adc
mov
stos
loopne
test
es
leave
shr
push
inc
popa
loopne
mov
addl
bound
mov
adc
mov
iret
jo
add
or
sbb
sub
je
jne
cmpsl
pop
sti
xorl
aad
vmovapd
int
xor
adc
pusha
icebp
or
clc
xchg
mov
out
fistps
jb
and
or
add
rcl
push
lcall
clc
or
sbb
xlat
bound
rorl
jno
inc
inc
ds
jecxz
fildl
mov
clc
aas
into
cmp
inc
xchg
and
lcall
or
ja
or
iret
cmp
aad
sub
popf
jae
adc
rcrl
sti
pop
insb
mov
inc
icebp
aad
mov
inc
and
mov
dec
xor
push
es
popf
cmp
insl
and
out
xor
sbb
cmp
hlt
stc
sbb
and
rcl
push
adc
out
sbb
push
push
sbb
jg
aad
inc
xchg
inc
or
xchg
add
or
xchg
push
and
insb
and
xchg
popa
adc
adc
in
xchg
adcl
adc
dec
pushf
aaa
loop
jbe
xchg
xor
pop
insb
addr16
in
mov
or
mov
pop
adc
push
mov
add
mov
rclb
cmp
imul
and
and
out
cltd
adc
std
movsl
add
mov
pop
fmuls
mov
in
cmp
and
nop
shrb
fs
jle
pop
jg
sub
stos
mov
loop
mov
outsb
sub
repz
sbb
popa
mov
ljmp
repnz
lahf
loope
mov
mov
xor
negb
cmc
cmp
cmp
in
hlt
sbb
jmp
cmpsl
inc
jnp
scas
sbb
lret
dec
dec
mov
jno
add
int3
lea
mov
pop
xor
bound
add
insb
push
jecxz
adc
xchg
lds
mov
lock
fmul
ds
mov
into
into
xchg
xchg
xlat
stos
test
fsubrl
adcl
and
movl
mov
jo
mov
rclb
lea
push
iret
and
cmp
mov
sbb
push
jg
pop
mov
push
sub
mov
mov
pop
mov
out
inc
imul
xor
push
mov
inc
roll
dec
rorl
push
pop
mov
push
adc
pop
dec
jno
adc
xlat
sub
das
xchg
mov
cs
outsb
sub
mov
push
push
sbb
mulb
push
stc
js
lea
andl
cwtl
sbb
outsb
test
sbb
cmp
sti
test
imul
popf
mov
jae
jge
test
fs
cmp
push
outsl
add
ficomps
or
mov
das
jns
jp
mov
lcall
and
insl
lret
sti
insl
sbb
pop
push
outsb
sbb
push
cmp
or
aaa
xchg
mov
ljmp
dec
insb
or
sbb
inc
mov
push
ret
mov
loopne
adc
ss
shll
mov
add
cmp
loope
aad
mov
in
mov
jnp
inc
jo
mov
fs
mov
rorl
adc
pop
sbb
in
inc
hlt
push
std
and
imul
cwtl
pop
and
mov
imul
add
mov
inc
pusha
in
cltd
mov
mov
xor
xchg
mov
add
orl
sti
sbb
xlat
int
jbe
add
cmpsl
mov
cmpb
fadd
jmp
jecxz
outsb
cld
and
or
loopne
rcl
loopne
std
lahf
add
lods
dec
jle
and
call
push
fld
cltd
mov
pop
scas
popf
out
pop
outsl
mov
filds
jl
aad
cmpsl
aam
and
lcall
stos
fmull
outsl
shlb
push
shlb
or
push
add
ret
imul
xchg
out
inc
and
jg
mov
hlt
cli
dec
adc
int3
sbb
push
lea
not
and
cmpsl
pop
cmp
btr
sbb
sub
ret
andl
xchg
ja
or
cmc
out
rcrb
mov
jle
jmp
xchg
mov
mov
mulb
cvtps2pd
es
lahf
sbb
sbb
mov
stc
cmp
lods
inc
jnp
popf
test
enter
lods
pop
shrb
jp
jbe
repnz
hlt
lods
pop
add
scas
gs
adc
add
out
mov
in
add
jecxz
mov
bound
or
or
jmp
and
out
out
add
xchg
pop
loop
int3
push
jle
decl
clc
ficoml
mov
out
cs
push
mov
xchg
mov
sbb
jmp
mov
outsl
xchg
xchg
xchg
test
add
and
or
fadds
loop
mov
adc
shll
mov
fisubrs
int3
push
pop
outsl
xor
jge
jmp
loop
popf
jb
dec
jns
scas
int3
pop
mov
scas
cmpsl
pop
cmp
xor
loop
mov
aam
push
pop
outsb
addl
pop
outsl
shlb
out
adc
sub
jge
lock
mov
mov
lods
jg
add
sub
dec
jns
mov
popa
test
clc
inc
fistl
scas
enter
scas
pop
add
adc
xor
int3
pop
mov
movsb
push
sbb
insl
xchg
mov
pop
xchg
push
mov
push
out
mov
xor
ss
mov
inc
jno
sub
aas
out
dec
sbb
xor
add
mov
jns
mov
mov
mov
jnp
pop
lcall
lcall
sbb
in
pop
sub
pusha
test
jne
je
hlt
je
data16
jb
scas
and
lea
fisubrs
xor
xor
mov
divl
das
push
sbbl
push
in
cmc
stc
sbb
and
ror
jno
mov
pop
lock
xlat
push
cwtl
lds
push
shlb
scas
push
cmp
sbb
sbb
adc
sub
ror
jl
out
sub
orb
or
xchg
iret
cmp
fimuls
adc
cmp
cs
add
repz
push
stos
push
sbb
iret
lds
cmp
dec
les
cli
aad
lock
addb
fadd
lea
xor
lret
sbb
xlat
jle
jb
inc
cmpsb
fisubrs
pop
out
jae
jg
fwait
out
dec
lods
sarl
or
hlt
or
and
jmp
jge
lcall
jmp
add
or
xchg
mov
in
adc
mull
xor
scas
test
in
lds
jbe
mov
in
and
cmpsb
gs
sbb
pop
cmc
popf
jno
in
pop
outsl
jo
dec
or
push
iret
xorl
loopne
pop
dec
out
sti
jnp
lods
sahf
or
jns
stc
in
pop
adc
xchg
fdivl
je
push
mov
xchg
ficoms
or
mov
cmpsb
and
jno
insb
pop
pop
cltd
xchg
inc
loop
jno
hlt
push
jp
push
add
int3
cli
xchg
lahf
sbb
mov
add
dec
pop
subl
sbb
stos
ljmp
test
cltd
and
mov
push
xor
test
jg
mov
outsl
dec
cmp
add
je
or
enter
lds
or
and
cltd
pop
xor
or
test
outsb
daa
xlat
mov
xor
push
adc
jb
mov
outsb
sub
call
adc
inc
je
jecxz
scas
inc
pop
rcrb
or
mov
and
mov
scas
fadd
lods
mov
popf
in
inc
cwtl
cmp
fcomps
mov
mov
adc
jmp
mov
sahf
mov
inc
inc
orl
add
aad
in
mov
jnp
push
jb
add
inc
sbb
jmp
pop
ja
cs
roll
popa
cltd
sub
adc
cmp
divl
ja
aad
lea
push
or
pop
mov
out
jo
lret
out
dec
lahf
inc
push
xchg
push
jo
pop
mov
dec
and
lcall
push
ret
mov
push
sub
out
cmp
lret
sbb
or
andl
add
sti
mov
arpl
nop
dec
or
dec
fimull
fidivrl
xchg
int
sbb
mov
imull
and
loopne
mov
add
stc
aam
test
rcr
adc
add
inc
ret
fstpl
int3
sub
cmpsl
push
lret
ret
lods
adc
inc
lcall
push
adcb
push
mov
movsl
outsl
lret
lret
and
pop
cmc
dec
sub
dec
daa
push
outsb
cmpsb
add
xchg
mov
daa
int3
ja
push
mov
es
mov
gs
scas
loop
cmp
xlat
lods
jnp
lock
les
movl
out
les
or
sub
repz
and
xor
cli
jl
push
and
add
pop
insb
mov
push
faddl
pop
mov
jl
lods
aam
xchg
mov
add
in
or
push
mov
dec
mov
aas
inc
or
loope
dec
sub
lods
sbb
push
in
jg
mov
mov
xorb
pop
jae
mov
mov
mov
repnz
int3
fbld
xchg
xchg
sub
mov
out
push
mov
xchg
mov
pop
lds
mov
sti
dec
mov
jbe
cmp
jl
xchg
xchg
fidivrs
aad
xchg
and
xor
stos
mov
push
inc
mov
cmc
lods
cmp
pop
cmove
addr16
xor
stos
and
test
fdiv
cld
nop
pusha
fcmove
inc
fcmovbe
out
cmp
leave
or
sbb
scas
mov
xor
ss
mov
mov
xchg
movsl
rcrl
cmpsb
dec
xchg
and
int
xor
push
xor
or
sbb
inc
push
sbb
jne
in
imul
test
inc
jg
mov
jno
es
pop
cmp
call
pop
xchg
dec
sub
dec
sub
pop
sahf
jg
lea
push
push
popf
mov
mov
movsb
xchg
mov
loopne
popa
lds
pop
xchg
test
leave
push
or
push
pop
fstpt
dec
xchg
pop
pop
mov
mov
sub
jns
xchg
insl
sbb
daa
add
aad
mov
sbb
mov
aad
fimuls
inc
inc
fnsave
sub
xor
sub
jne
stos
scas
sbb
pop
add
dec
pop
sub
sub
addr16
sub
xchg
push
mov
subb
gs
cmp
mov
stos
into
and
inc
pop
mov
jae
jp
dec
mov
mov
mov
ljmp
pop
inc
js
push
jecxz
addl
and
pop
push
jne
pop
fnstcw
pushf
data16
addb
push
pushf
sub
sub
jecxz
push
mov
cli
dec
adcl
fst
es
push
jg
xchg
jae
cmp
cmp
daa
ret
ja
loopne
jae
adc
ret
push
jae
mov
jo
loopne
adc
dec
xor
xchg
loop
sub
xlat
cmpl
sbb
dec
clc
add
push
add
lods
add
scas
xor
xchg
dec
stos
loope
divl
ret
inc
int3
out
cmpb
movsl
pop
ficompl
dec
xchg
inc
ljmp
mov
jl
arpl
clc
jae
dec
xorl
iret
push
fnsave
and
add
push
pushf
test
mov
sbb
pop
or
xor
fistl
cmp
cmpsb
cmp
or
fwait
adc
pop
and
dec
dec
aad
add
adc
es
push
scas
mov
push
xchg
cmpsl
cmp
lock
xchg
loop
aaa
xor
mov
mov
sub
addr16
popf
roll
pop
ret
add
jg
mov
xchg
add
cmpsb
xlat
mov
jge
or
jne
add
sti
stc
mov
xor
jp
jns
jae
int
test
inc
in
dec
mov
and
push
push
push
adc
ds
out
leave
dec
or
mov
pop
data16
fists
mov
mov
mov
push
test
mov
xchg
push
popf
test
pop
test
shrb
cld
add
sbb
sbb
fdivrl
scas
pop
adc
std
in
test
das
sbb
sub
outsl
pop
or
pop
mov
sub
cmc
cmpl
sbb
scas
sbb
pop
out
out
cltd
mov
imul
movsl
out
test
mov
sbb
sbb
shlb
push
in
loopew
bnd
and
incb
inc
dec
test
dec
cmpsb
push
mov
les
cmp
push
repz
outsb
jo
je
adc
or
mov
test
outsb
adc
movsb
lret
cltd
cwtl
cmpsl
cmc
movsb
xchg
dec
pushf
outsb
dec
addr16
mov
fs
jno
push
inc
dec
sbb
mov
loope
or
bound
push
xchg
add
xchg
rcrl
jl
or
loopne
sub
data16
cld
popa
inc
pushf
ljmp
xchg
ja
scas
jno
cmp
pusha
pop
lret
or
pusha
cmp
push
fiadds
mov
push
stos
cmp
pop
mov
add
xchg
stos
add
and
test
cvtdq2ps
in
paddusb
outsl
cltd
stos
mov
aaa
xor
movb
mov
dec
cld
mov
mov
dec
es
cmpsl
insb
adc
mov
add
pop
adc
out
jle
shrb
arpl
setno
repnz
jg
in
xor
gs
movsl
lret
mov
ja
push
mov
jno
rcrl
dec
xor
nop
test
cmpsb
je
notl
ds
lret
mov
and
test
lea
sbb
pop
push
mov
mov
dec
jns
loope
cwtl
xorl
or
xchg
outsb
lds
xlat
cmp
cmp
xlat
rorl
dec
pop
xchg
push
push
popa
jbe
arpl
int
out
js
mov
cmp
call
xor
ret
xchg
mov
test
push
out
leave
adc
push
xchg
nop
test
mov
popa
cmc
cwtl
int3
shlb
xlat
stc
pop
subb
je
enter
sti
cld
nop
mov
lock
sub
arpl
mov
fcoml
xchg
inc
dec
iret
push
xchg
mov
out
xor
jmp
not
sbb
and
xlat
or
sbb
lods
out
mov
test
roll
jp
iret
mov
pop
jae
sti
js
sahf
cmp
fwait
lods
sbb
cmpsl
je
in
es
call
jae
jle
mov
stc
lods
mov
cwtl
daa
hlt
fiaddl
cs
popa
rolb
add
dec
and
sahf
dec
xlat
jge
test
mov
insl
pop
cltd
mov
sbb
enter
add
or
js
and
not
cmp
jnp
xchg
test
ds
addl
mov
outsb
lods
mov
fs
stc
push
movsb
fldenv
fisubrs
push
test
add
bound
jb
mov
lods
imul
mov
xor
dec
xor
pop
jp
pusha
fbstp
cmp
out
in
pop
enter
inc
dec
adc
dec
sub
mov
fldcw
ds
jle
leave
fldt
aas
orl
in
call
decb
dec
mov
inc
xor
mov
mov
push
pop
mov
shll
rcr
inc
add
movsl
icebp
and
cltd
hlt
shl
jle
in
cmpsb
jmp
les
cmp
mov
mov
ret
aam
das
fwait
sbb
mov
jg
xor
sbb
mov
fwait
jp
stc
pop
loope
dec
outsl
adc
aam
mov
sub
maxps
sub
inc
pop
push
mov
sub
cmp
das
add
cmp
mov
bound
repz
sbb
sbb
sub
adc
insl
add
popa
imul
in
jle
sqrtps
scas
mov
ljmp
dec
mov
push
sub
lods
dec
jb
pop
cmp
in
or
js
aaa
sbb
ret
sbb
fbstp
jns
add
out
in
pop
or
mov
scas
sub
push
sbb
movsb
nop
xor
push
stc
out
gs
pushf
xchg
sbb
add
mov
push
pop
mov
loopne
adc
adc
xchg
fwait
lds
js
std
lret
or
adc
pop
sub
adc
das
arpl
lds
enter
jecxz
testb
loope
pushl
sbb
orl
lret
jl
adc
push
fs
pinsrw
inc
cmp
imul
inc
xchg
push
or
xchg
rorb
ret
mov
or
ja
mov
dec
das
pop
mov
lret
xor
cltd
dec
mov
cwtl
mov
jae
sbb
mov
int3
push
sahf
pop
shl
icebp
sub
leave
shr
xchg
mov
add
sub
jnp
cld
fildll
insl
add
adc
jo
in
sbb
lods
sub
lcall
adc
cwtl
sbbb
popf
inc
outsl
subl
pop
ret
int3
ljmp
mov
insl
push
lahf
shl
xchg
rcrb
int
cmp
pop
shr
cld
aas
add
mov
sub
aas
cmpsb
xor
les
add
pushf
mov
fcmovnu
cmpb
rcrl
mov
lret
cmp
fidivrl
jo
negb
dec
and
or
adc
inc
rorl
in
cmp
scas
aaa
or
sbb
sub
xchg
sar
loop
dec
cmp
cmp
cmpsb
mov
jmp
dec
repnz
test
out
or
imulb
aad
xchg
ja
cmp
push
cmpsl
add
pminub
dec
xor
cmp
in
in
popa
pushf
mov
and
je
inc
mov
sti
sub
and
mov
sbbb
and
test
lock
gs
inc
pushf
ret
push
push
scas
mov
dec
dec
scas
jne
push
dec
jle
iret
lret
mov
movsl
fbstp
adcb
loopne
add
and
push
sbb
mov
scas
inc
push
cmp
push
rcrl
inc
lret
and
fbstp
or
fwait
mov
int3
mov
fs
or
mov
ret
sbb
icebp
adc
cltd
jno
insl
jmp
je
sarl
bound
idivb
xlat
in
sub
stc
outsl
arpl
repz
cmp
ret
cmc
and
js
xchg
mov
iret
rorl
dec
or
mov
call
scas
dec
idivl
pop
stos
add
push
or
mov
mov
or
in
popa
pop
inc
int3
loop,pt
ss
jmp
aas
loopne
es
push
insb
mov
xchg
daa
sub
in
shll
ret
dec
in
cmpsl
in
cltd
add
xor
adc
sub
sti
push
sbb
cltd
pop
ret
sbb
cmpsl
jmp
repz
nop
adc
push
lods
sub
ja
les
pop
rorb
insl
dec
in
cmp
fwait
sbb
dec
dec
fs
inc
testb
fidivs
in
dec
sub
jecxz
dec
ficoms
call
pusha
mov
lcall
push
xchg
scas
loop
pop
in
push
dec
insl
or
lahf
cmpsb
addb
test
rclb
scas
mov
test
out
or
pop
mul
add
inc
xorl
out
inc
jl
jb
jb
insl
sub
push
stc
movsl
leave
inc
repz
push
aas
push
add
push
insb
aad
int
sbb
and
dec
dec
stc
movsl
aas
dec
cmp
inc
into
adc
sub
xchg
stos
jge
repnz
and
outsb
or
mov
fbld
push
add
cltd
cmp
xor
cltd
aaa
push
add
inc
hlt
std
or
nop
cmp
jbe
jecxz
inc
mov
arpl
movsl
mov
cld
xor
hlt
je
roll
push
hlt
adc
das
push
test
mov
int
mov
adc
scas
loopne
lds
inc
lods
adc
ss
adc
scas
pop
and
jbe
movsb
sbb
shrb
push
jb
or
cmp
fxch
mov
sbb
xchg
cmc
push
sbb
xchg
jp
and
mov
nop
gs
gs
punpcklbw
pop
je
sbb
lds
mov
xor
cmpsb
xor
nop
or
lcall
push
mov
adc
xorl
pusha
repnz
push
ret
jmp
addr16
enter
imul
stos
push
and
and
mov
arpl
sbb
fs
pop
xlat
or
mov
daa
push
pop
scas
fs
push
lea
adc
push
cmp
out
fadds
inc
fndisi(8087
movsl
sub
les
push
inc
dec
xchg
aas
in
bound
xchg
push
roll
and
mov
jl
aaa
and
xchg
out
push
in
stos
sarl
adc
sbb
and
push
sti
inc
lcall
dec
mov
push
lods
cmp
mov
sbb
pop
das
xchg
mov
aas
mov
lcall
add
repz
shr
in
frstor
sti
fidivrl
ret
call
fsubrs
push
call
nop
sub
mov
dec
in
dec
inc
inc
add
repz
or
into
or
cmp
addr16
mov
icebp
adc
xchg
je
cmpsb
inc
iret
in
dec
sub
add
ds
sub
fcmovnbe
rclb
insl
cmpsb
dec
push
repnz
dec
jne
loop
call
jge
mov
sbb
sbb
je
roll
add
arpl
cmpl
call
loopne
fcmove
pop
repz
mov
icebp
xor
xor
jbe
loope
sub
bound
jp
sbb
inc
mov
and
pop
stos
pop
sub
shrl
call
cmpsb
cwtl
mov
inc
fcmovbe
enter
pusha
or
leave
arpl
je
mov
test
or
movsl
xchg
xlat
int
jbe
cmp
or
mov
and
fwait
nop
addb
call
fs
xchg
rcrl
pop
jns
push
cltd
daa
mov
scas
and
push
mov
aam
adc
fistl
insl
pusha
push
stc
sub
xor
es
in
mov
sub
jp
lock
std
daa
xchg
pop
test
cmpsb
lods
pop
add
rorb
sub
push
arpl
test
jl
pop
push
adc
jns
xor
in
cltd
lea
daa
mov
iret
cmp
xor
pushf
ret
js
mov
inc
add
push
add
test
in
xchg
dec
inc
mov
hlt
push
mov
or
fdiv
add
add
dec
in
std
and
and
pusha
jne
xor
rol
arpl
inc
jae
xchg
mov
xor
adc
fcoml
and
repz
outsl
cmp
cwtl
js
push
imul
imul
and
fisubl
mov
mov
xchg
pop
imul
mov
enter
decb
bound
push
mov
xchg
rcr
js
adc
or
sarl
mov
mov
nop
jae
mov
lea
jne
push
rcrl
push
gs
xor
jnp
ret
out
lahf
jbe
cvtdq2ps
mov
xchg
lea
sarl
mov
mov
sbb
jbe
hlt
push
mov
push
loopne
rcrl
cmp
rolb
mov
fwait
mov
pop
add
add
addr16
xchg
stc
and
mov
test
pop
xchg
fdivrs
shlb
jp
sbb
sahf
mov
mov
ficoms
ja
xchg
cmpsb
jno
sbb
and
inc
inc
aas
inc
xchg
pop
shl
lret
cmp
lds
popf
sahf
fcompl
sbb
push
mov
jo
popf
adc
div
push
popa
adc
xchg
jg
fldt
cli
pause
xchg
or
xchg
dec
dec
and
mov
adc
cmp
sbb
and
in
push
push
sahf
ja
xor
inc
jge
mov
mov
mov
lea
xchg
add
xchg
mov
sbb
cmp
push
test
push
push
xchg
push
cwtl
int3
xlat
and
in
pop
sti
adc
mov
push
stc
cmp
mov
mov
cmc
mov
jecxz
fcoms
mov
sbb
fsts
stc
push
jb
scas
dec
gs
jge
jbe
pop
xchg
xchg
movsb
sub
pop
mov
mov
sbb
or
insl
jecxz
in
mov
inc
lahf
gs
nop
fldt
js
into
add
push
ror
mov
add
leave
cmpb
inc
repz
push
dec
hlt
sbb
push
loop
inc
test
pop
or
or
push
rcrl
mov
adc
popa
xchg
mov
jne
or
push
dec
lds
ja
out
mov
pop
ljmp
xchg
push
not
inc
lock
sub
aad
dec
daa
jmp
xchg
mov
xchg
test
test
cmpsl
sub
jmp
add
pushf
pop
cmpsl
push
inc
add
gs
in
push
rorl
pop
ja
and
pop
test
mov
inc
cmpsb
lods
fsubrl
mov
sbb
insb
jle
pushf
jge
fcomp
cmpsl
loope
add
fidivl
sub
movsb
mov
cmp
adc
fimuls
pop
dec
adc
add
mov
enter
jle
leave
and
cmp
neg
in
es
add
test
cmp
sub
jns
push
stos
insb
sub
jbe
and
dec
pop
adc
out
jle
push
push
bnd
cmp
loopne
stos
adc
sbb
not
xor
push
cmpsb
mov
repz
jae
clc
imul
les
and
daa
arpl
pop
add
fs
fidivrs
nop
ss
jae
aam
outsb
mov
cmp
negl
cmp
stc
ret
or
push
xchg
jnp
jno
inc
cmp
or
sahf
in
cltd
in
test
dec
mov
push
mov
xchg
sub
cmp
pop
inc
cli
jne
dec
or
xchg
loopne
push
jge
xor
popf
pusha
lds
sti
mov
xor
aas
and
imul
shl
add
popf
or
aam
out
jg
les
cmp
push
and
xchg
enter
aam
add
xor
popf
ret
enter
or
lret
lcall
stos
xchg
scas
arpl
ret
int3
sti
pop
arpl
mov
pop
or
or
enter
push
cmp
shlb
popf
mov
push
enter
dec
jbe
mov
mov
mov
sub
sbb
aam
test
call
stc
out
dec
stos
iret
jg
adc
fwait
cli
inc
pop
jg
push
sub
sti
sbb
pop
mov
push
jae
lods
push
inc
nop
icebp
aam
mov
imul
rcrb
mov
neg
enter
xor
leave
inc
push
fdivrs
out
push
pop
mov
mov
add
test
mov
mov
lahf
pop
fs
push
iret
pushf
loope
in
adc
cmc
mov
push
lahf
test
mov
lock
mov
lods
mov
insb
cmpsl
jae
int3
pop
sbb
sti
jae
mov
gs
xor
test
sarb
fisubs
jl
cmpsl
out
out
lret
push
mov
aam
xlat
or
or
adc
push
or
push
in
inc
jecxz
nop
cmpsl
xchg
sbb
sub
adcl
jge
jge
dec
mov
push
mov
ret
repz
andl
pop
in
mov
mov
lcall
jae
mov
mov
in
shr
dec
mov
sbb
fmull
int3
iret
pushw
mov
push
adcl
aad
sahf
stos
push
repnz
sbb
adc
or
pop
sbb
int
dec
cmp
add
push
loope
bound
and
popf
jmp
pop
or
cltd
lds
jp
pop
ret
daa
imul
in
das
xchg
xor
mov
xchg
jecxz
sbbb
xchg
orb
fldl
jle
inc
or
ljmp
or
cli
hlt
cwtl
lds
int
adc
sbb
mov
xchg
sbb
cld
rcrl
dec
sbb
cmp
mov
mov
add
jne
ljmp
mov
lret
into
dec
add
loop
mov
sub
outsl
rolb
push
les
loop
xchg
out
adc
ja
into
inc
fcmovnu
xorb
inc
imul
fld
fs
js
add
sub
inc
push
mov
or
out
stos
jecxz
lret
mov
mov
cli
or
mov
cmpsb
sub
test
stos
bnd
jecxz
into
aaa
cwtl
jl
fistpl
ds
fcoms
push
or
fmul
push
sbb
call
cmpsl
xchg
in
inc
sbb
mov
cs
mov
stos
test
sub
pop
jns
icebp
out
sub
out
gs
push
jno
sub
clc
ljmp
and
adc
ja
sbbb
dec
jecxz
out
aaa
aad
adcb
addr16
int
ss
inc
ror
shll
xchg
insl
pop
sub
cmp
outsl
or
and
test
js
pushf
data16
mov
jbe
ja
sbb
mov
and
or
xchg
or
cmpsb
push
cs
test
aad
mov
cwtl
movsl
mov
aad
sub
add
cwtl
es
pop
inc
mov
pop
xor
sbb
push
movsl
cmp
mov
outsb
jnp
jle
inc
mov
cmp
shrl
mov
or
testb
scas
movsb
popf
aam
adc
cmp
inc
imul
mov
addr16
jae
lcall
push
rorl
mov
in
out
les
mov
fisttpll
cmp
push
adc
repz
pop
fwait
push
xor
push
out
or
jbe
movups
je
mov
mov
mov
mov
mov
inc
fsubrs
push
jmp
or
cmpsb
in
out
stos
add
xlat
adc
mov
sub
xor
or
shrb
insl
jg
and
xchg
fucom
push
mov
aaa
test
xchg
adc
mov
and
out
mov
adc
dec
inc
insb
stos
repnz
adcb
mov
pop
xchg
inc
adcl
pop
loop
ja
lods
je
int3
mov
mov
pushl
cwtl
das
popa
subb
scas
outsl
movsb
enter
daa
mov
test
mov
and
pop
mov
test
push
jg
sar
das
xchg
xor
imul
data16
mov
push
nop
ret
jmp
fistl
pushf
cmc
lods
data16
inc
int3
xrelease
cmp
inc
and
roll
jne
ret
mov
sub
mov
daa
add
jle
popa
out
cwtl
xor
add
cmp
test
jge
dec
jns
xchg
push
das
or
les
pop
push
inc
inc
adc
xchg
stos
data16
add
adc
xchg
scas
and
add
cmpsl
cmp
jp
setbe
aad
adc
jmp
sbb
mov
lods
xchg
sbb
clc
jns
cmp
inc
push
push
jbe
mov
and
push
fwait
loope
inc
inc
push
and
mov
or
xchg
leave
xchg
loope
out
ja
std
enter
sbb
mov
int
icebp
jecxz
push
mov
mov
jecxz
dec
add
ret
jbe
fldt
stos
dec
aas
pop
aaa
jmp
gs
das
mov
testb
push
js
out
lcall
or
jl
push
mov
pop
cli
popa
sbb
subb
outsb
cmp
dec
xchg
std
lret
pop
mov
aas
sub
sub
mov
cmp
jmp
fwait
xchg
mov
fisttpl
cmp
cmp
sub
push
adc
xchg
or
adc
mov
fwait
cltd
ds
jmp
cwtl
es
out
ret
push
cld
xor
nop
sbb
lcall
mov
jnp
icebp
dec
daa
xor
out
sbb
cmpsb
push
add
dec
popa
leave
jmp
mov
int3
and
jae
jbe
inc
sub
inc
mov
out
insl
sbb
xorb
and
punpckhbw
rcrl
pop
std
jns
lods
lods
adc
lret
cmp
repnz
int
add
or
jnp
xor
sbb
pop
stos
xor
mov
and
lods
sub
idivl
mov
inc
sbb
pop
dec
cld
pop
lods
fcmovne
mov
mov
mov
add
lods
pushf
dec
cs
js
cli
jge
int3
push
sbb
cmc
cwtl
push
mov
js
sub
in
rorb
rcll
arpl
jecxz
mov
out
mov
shrb
mov
dec
les
mov
mov
loop
lds
push
outsl
js
jg
daa
mov
push
stc
jne
xchg
pop
mov
je
inc
adc
dec
add
or
push
adc
push
jae
cmpsl
aas
es
ret
dec
push
xchg
arpl
movsb
mov
or
ljmp
adc
or
cs
stos
shlb
mov
aas
push
sub
pop
pushf
cmp
jl
iret
xor
inc
add
hlt
nop
adc
xor
fidivl
das
popa
mov
sub
inc
fs
cmpsl
sbb
or
inc
mov
aaa
jnp
cmp
lds
pusha
adc
stos
push
cmp
mov
dec
or
or
cwtl
or
lea
imul
movsb
aad
or
cmc
dec
sbb
outsl
out
movl
inc
mov
mov
xor
push
sub
jmp
push
ror
mov
add
mov
out
push
fisubrs
data16
mov
mov
adc
pop
and
mov
sarb
repz
lret
push
jo
and
xchg
mov
xor
mov
and
into
push
lea
mov
cmp
cmp
add
lcall
xchg
shrl
popf
aas
les
shrb
stos
or
addr16
sti
push
jp
pushf
mov
jnp
aam
loopne
adc
adcb
xlat
repz
inc
sti
sbb
cmp
mov
test
lea
lods
loopne
dec
int3
mov
lea
mov
xorl
pushl
repz
nop
xlat
add
jmp
mov
out
sti
cmp
mov
fidivl
adc
mov
cs
sbb
insl
pop
sar
pop
popa
mov
cltd
sub
sbb
xor
xchg
ficomps
xchg
xchg
push
jae
mov
cmp
sbb
push
ljmp
jle
lcall
fildll
icebp
push
movsl
dec
sbb
push
ret
push
add
insb
jae
jmp
mov
iret
les
inc
nop
push
test
movsb
pop
adc
sub
mov
stc
sarb
xlat
dec
mov
dec
sbb
pop
push
adc
std
xlat
ret
cmp
sti
add
ret
dec
in
fdivs
dec
pop
dec
jne
mov
outsb
xchg
xchg
inc
or
sbb
mov
inc
mov
arpl
xchg
xchg
dec
gs
jnp
outsb
in
rolb
std
dec
pop
gs
sub
dec
popa
add
pusha
push
loope
xchg
push
push
mov
pop
adc
bound
sub
ss
pop
das
jge
iret
inc
adc
bound
loope
andl
xor
test
adc
inc
cltd
movsl
ficoms
loopne
addr16
test
jge
xor
popf
popa
jmp
stos
push
in
push
push
cmpsl
xchg
mov
pop
xchg
inc
inc
jl
push
push
and
clc
loop
cmc
mul
dec
sub
push
cmpsl
add
jno
shr
push
ljmp
out
repz
lods
cmp
jno
enter
jecxz
stc
cmp
addps
imul
cmpsl
popa
mov
adc
inc
arpl
out
sub
xchg
enter
enter
insl
mov
xor
stos
inc
sub
dec
ss
in
mov
add
fs
shlb
adc
xchg
xlat
cmpsl
jns
stos
repnz
xor
testl
xchg
addr16
insb
dec
aaa
nop
lods
loop
jmp
mov
popa
mov
jl
dec
mov
xchg
mov
sub
pop
mov
aad
loop,pn
gs
jne
dec
xchg
call
cmp
sahf
jle
sbb
mov
cltd
movsl
or
push
lret
ja
call
mov
popa
inc
sub
xor
popa
outsl
jnp
mov
data16
pop
dec
das
fs
nop
addl
das
xchg
popf
cwtl
fnstcw
movl
inc
mov
adc
xor
lea
jge
or
dec
popa
dec
sbb
shl
mov
leave
pop
mov
iret
or
push
cmp
hlt
imul
inc
sub
pop
imul
loope
push
ja
bnd
outsb
mov
cmp
or
iret
fldl
jg
sbb
pop
lods
xor
pop
pushf
mov
divb
rclb
cmpsb
out
xchg
psrld
ret
jns
aam
loope
ljmp
sbb
jo
mov
cltd
outsl
mov
mov
add
xlat
les
ficoms
sub
clc
mov
inc
sub
les
add
pop
lock
rcrb
decl
xchg
das
fwait
or
push
cmp
mov
insb
loop
jbe
sbb
adc
dec
js
mov
xchg
add
aas
mov
int
xchg
push
cmp
cmp
add
mov
push
or
pop
stos
sub
pop
pushf
adc
ja
jmp
pop
jns
cs
add
dec
inc
jp
sbb
cmpsl
xchg
push
ljmp
mov
or
dec
rol
mov
nop
push
mov
loopne
adc
je
cmp
fidivs
fildll
dec
imul
dec
dec
stos
jo
in
rcrl
fdivs
sub
shlb
mov
sub
cmp
cltd
scas
push
or
xlat
ljmp
sub
cmp
pop
bnd
xor
iret
dec
sbb
sub
mov
xchg
cmp
cmp
outsb
cmp
popf
cmc
mov
fwait
call
out
fcoml
push
sub
imul
test
xorl
dec
mov
frstor
dec
aam
jne
pop
pop
push
dec
fistl
add
shll
lcall
mov
push
adc
mov
rcrl
adc
inc
add
xchg
imul
cs
mov
jecxz
push
cmpsl
jb
or
into
stos
in
shlb
std
sub
rcll
fs
cmp
sub
divb
inc
hlt
mov
cmpsb
and
pop
add
in
fidivrl
popa
push
loop
lret
inc
imul
xchg
hlt
push
push
jp
orb
and
or
icebp
sti
int3
inc
add
mov
clc
sahf
lahf
leave
sub
adc
repnz
iret
push
es
cmc
outsl
imul
xor
nop
push
or
jns
popa
pusha
pop
out
xchg
mov
outsl
push
adc
movsl
loopne
out
sti
push
jmp
xchg
mov
ss
fisttpl
pop
je
mov
lcall
mov
stos
xchg
mov
pusha
repz
pop
scas
rorl
fucom
fbld
aad
dec
fs
pop
xchg
inc
push
movsl
das
mov
or
lahf
cmpsb
inc
arpl
outsb
and
and
mov
push
inc
pop
fistps
fucomip
shrb
pop
andl
xor
punpckhbw
ret
fdivr
mov
add
sti
into
pushf
iret
nop
xchg
js
mov
jno
jb
dec
popw
mov
les
pusha
popf
xchg
adc
lcall
in
add
cmpsb
lret
push
push
mov
psllq
mov
mov
adc
dec
mov
xlat
fxch
pop
sbb
jns
push
sbb
mov
stc
inc
mov
rol
sbb
sbb
stos
and
fcoml
add
fwait
sbb
push
sub
dec
addl
cld
xor
and
stos
iret
rclb
push
popa
xchg
scas
imul
jo
shlb
mov
loopne
dec
sahf
jmp
push
cmp
cltd
fildll
popa
jp
sub
or
divl
lret
and
aas
xchg
mov
or
jge
test
testl
jmp
cs
iret
xchg
ja
add
ds
xchg
xchg
ljmp
jmp
mov
pop
es
fscale
adc
mov
push
xor
mov
out
or
adc
hlt
sub
clc
int
das
sub
stc
mov
daa
xchg
jmp
pop
ja
pop
xorl
subb
add
outsl
je
pop
mov
out
or
pop
mov
out
or
pop
sbb
jl
std
push
mov
add
sbb
sub
xchg
cmp
add
pushf
flds
adc
lcall
aad
or
push
insl
lahf
fs
fstpl
mov
aam
jns
push
pop
and
andb
xlat
pop
movsb
or
inc
sub
xor
in
jne
sti
lds
iret
push
ficompl
bound
push
ja
repnz
pop
mov
pop
push
test
lods
pop
pop
cmp
ja
into
inc
cmp
mov
jg
mov
loope
movsl
shr
lock
adc
out
arpl
aas
cwtl
sbb
dec
mov
pop
les
daa
cmp
sbb
ja
jno
cld
dec
mov
int3
jno
repnz
cmpb
clc
jno
jno
into
push
sub
pop
adc
add
je
xchg
dec
add
push
fwait
sub
mov
lods
jp
call
add
insl
js
out
pusha
xor
lahf
es
push
fsubl
lret
mov
shl
mov
push
xchg
inc
inc
push
pop
mov
int
push
sbb
xchg
ret
les
bound
pusha
dec
ja
std
sbb
in
iret
xor
adc
in
jnp
jo
jge
pusha
inc
stos
popa
sbb
std
lret
repnz
nop
push
lock
jo
lcall
ljmp
shll
test
movsb
push
adc
mov
jmp
orl
or
cmp
out
cli
out
adc
or
mov
lret
dec
xor
push
mov
and
cmp
xorl
pop
adc
fnstenv
push
lds
pop
inc
xlat
sahf
mov
cmp
pop
jecxz
sti
call
lea
pop
ds
adc
repnz
or
pop
mov
inc
mov
test
popf
cmpsb
shlb
mov
dec
movsl
imul
push
sbb
dec
stos
cmp
stc
ljmp
nop
and
jbe
sub
icebp
bound
add
sub
xchg
rorb
push
popf
out
gs
inc
jecxz
fucom
mov
mov
push
cwtl
ljmp
ja
sbb
lret
out
or
mov
pop
aad
mov
jbe
and
inc
cmp
jle
daa
int
andb
cmpsb
inc
stc
std
dec
test
ljmp
dec
test
fistps
push
dec
pop
mov
mov
sbb
clc
insl
xchg
iret
cmc
orb
jecxz
push
mov
cmp
jmp
loopne
fwait
inc
sbb
test
lds
ds
or
aaa
out
cwtl
and
popf
push
fistpll
jge
shl
call
cmp
shl
cmp
pushf
and
icebp
inc
sub
imul
mov
jbe
cmpsl
push
lahf
inc
enter
adc
pop
jge
xor
ss
dec
pop
pop
es
cmp
insb
cmovg
divl
jo
mov
or
out
lock
jbe
sub
cmpsl
xchg
or
sub
sub
addr16
add
or
sarb
mov
mov
test
xor
in
cmp
pop
inc
cmp
jecxz
dec
mov
push
lock
pop
jbe
ds
clc
jo
cmp
fldenv
jnp
repnz
mov
call
inc
mov
out
imul
and
mov
ljmp
or
inc
sarl
adc
je
or
pop
negl
sub
mov
call
imul
inc
lret
pusha
mov
jmp
mov
pop
xchg
adc
push
fs
mov
inc
adc
jmp
xor
rolb
subl
cmpsb
mov
dec
push
sbb
mov
cmp
pop
jmp
mov
lcall
inc
fbld
mov
xchg
mov
xor
pop
pop
outsl
jle
or
push
sbb
insl
mov
cmp
inc
lods
idivl
rclb
gs
cmovg
or
nop
shl
cmp
xor
dec
les
ss
sti
loop
cld
adc
sahf
mov
rcll
dec
inc
cld
mov
and
or
pop
bound
sbb
cmc
mov
fsubl
adc
cmp
aas
cs
scas
cmp
lods
sbb
or
mov
jb
pop
dec
xor
and
repnz
in
inc
sbb
std
adcb
in
mov
daa
shll
fbld
and
iret
mov
in
or
addb
inc
jo
push
in
mov
ret
push
cmpsb
push
pusha
push
jge
xor
cmp
cmp
scas
inc
xor
mov
xor
addl
dec
pop
scas
movl
jo
std
icebp
shl
sub
adc
ret
cmpsl
push
jo
dec
and
lahf
cmp
adc
add
adc
sti
int3
sbb
push
rolb
adc
xchg
push
stos
cltd
or
cltd
inc
ret
dec
push
out
fsub
sbb
cmp
rorb
adc
cli
push
in
inc
sbb
mov
mov
jbe
pushf
loopne
jmp
dec
sbb
jge
lret
push
daa
and
and
addb
ljmp
mov
ja
add
imul
sbb
add
jl
push
imul
ds
out
aas
dec
mov
inc
sub
push
popa
mov
mov
pushf
push
je
mov
mov
adc
jecxz
or
mov
or
test
fbld
jnp
pop
loope
lea
jbe
movsl
pushf
rol
into
rcr
and
shlb
or
fnstcw
dec
shrb
dec
loop
jno
iret
call
push
in
mov
jns
jns
enter
ficoml
mov
pop
cmp
pop
lea
sub
add
cmp
jle
sub
lahf
popa
out
or
daa
xchg
dec
gs
jbe
leave
arpl
fwait
lret
dec
ds
sbb
mov
ja
push
out
and
mov
and
sub
test
clc
cmp
jg
push
jge
cmp
call
movsb
test
add
rol
fmul
sub
dec
sbb
inc
scas
mov
jo
or
sub
push
std
cwtl
mov
leave
jbe
pop
sub
mov
dec
test
cs
fcomps
or
xchg
jl
lea
loope
jns
mov
jnp
add
call
addr16
aam
pop
pop
push
lahf
xor
dec
outsb
popa
inc
pushf
fisubrs
ret
mov
push
sti
xchg
cmp
or
jmp
nop
into
test
cmova
jnp
dec
mov
jp
pop
jo
xlat
icebp
pop
and
into
test
mov
test
fisttpl
xchg
inc
imul
hlt
enter
idivl
mov
or
call
and
test
loope
mov
lahf
lahf
enter
scas
movl
cmp
sbb
jecxz
and
popf
fnstenv
fmull
sub
in
or
mov
mov
cmp
mov
sub
sahf
mov
imul
jge
cmp
mov
cmp
call
shrl
or
inc
aaa
push
fcmovnu
jno
jmp
inc
popf
arpl
dec
cmpsb
adc
or
fsub
sahf
or
cwtl
mov
shrb
je
mov
mov
iret
mov
mov
mov
out
push
pop
adc
xchg
jecxz
arpl
das
cmpsl
push
lods
push
or
dec
mov
out
mov
sti
inc
mov
mov
into
xor
stos
dec
dec
cmp
mov
pop
in
lea
adc
fwait
and
xchg
add
push
and
jb
push
jge
xor
imulb
pop
dec
add
jecxz
lods
mov
xchg
pop
xchg
inc
dec
lcall
and
das
mov
mov
cmp
inc
pop
pop
inc
mov
inc
inc
adc
scas
in
jnp
add
pushf
test
loope
popf
mov
out
in
pop
stc
daa
movsl
cs
xlat
push
push
mov
hlt
dec
jecxz
xchg
movsb
std
push
fadds
mov
add
loop
pop
scas
sbb
adc
test
movsl
xlat
cmc
pop
sub
test
mov
fidivl
or
in
enter
stos
lods
dec
dec
sub
divb
lds
in
imulb
scas
add
cmp
dec
lods
inc
je
popf
mov
xchg
call
in
mov
sbb
jge
add
cs
and
add
cli
sub
jle
xchg
and
and
xchg
popf
insb
pop
mov
dec
sar
cmp
aaa
pop
add
gs
pop
mov
pop
mov
dec
rcl
lea
adc
lock
pusha
sbb
mov
jg
cmp
mov
adc
in
xlat
adc
jnp
mov
pop
out
mov
sub
cltd
ja
aaa
lcall
pop
pop
pop
pop
push
dec
xchg
sbb
jl
pop
add
lods
sub
jg
movb
pop
cmp
and
cmp
xchg
imul
fdivs
fdiv
dec
stos
shl
outsl
pop
add
in
nop
shl
add
sub
inc
push
out
loop
sub
pop
int3
mov
or
arpl
gs
and
jo
mov
ljmp
mov
nop
inc
icebp
xor
xor
mov
dec
fsubl
fildll
aad
call
jbe
jg
mov
push
inc
in
pop
sub
out
leave
lret
callw
addr16
mov
dec
dec
fidivs
out
push
xchg
push
jb
ret
fcos
scas
mov
test
or
lcall
or
cmp
out
scas
push
out
std
or
inc
insl
or
arpl
rorb
addr16
jns
mov
cmp
in
in
adc
jp
add
adc
cmp
adc
addr16
es
leave
stos
mov
leave
adc
pop
aam
shr
ret
mov
cli
dec
add
cmpsb
addr16
and
add
and
out
adc
dec
adc
inc
sahf
mov
jp
ret
xlat
nop
mov
push
decb
dec
xor
jb
dec
mov
cmc
std
fcmove
inc
popa
lock
cwtl
jno,pt
ds
aam
out
add
sbb
mov
sub
es
cld
lods
mov
les
pusha
xor
inc
pop
mov
push
push
cmc
push
ds
and
mul
lods
push
add
pop
addr16
jo
cs
outsb
ret
lret
loope
movsl
orl
std
mov
dec
xor
loope
push
mov
dec
inc
sub
repz
mov
xchg
mov
sbb
pop
lahf
andl
xchg
out
shl
xlat
mov
sahf
ret
jo
dec
mov
aam
sub
add
mov
aam
push
js
or
dec
in
cmp
out
sub
lea
mov
es
cwtl
sbb
loopne
cs
cmp
xor
ror
call
fists
nop
cli
test
mov
imul
rcrb
mov
outsl
mov
notl
je
or
in
insb
pusha
mov
les
adc
mov
cmp
and
test
fistpll
call
dec
add
fildl
mov
add
cld
or
dec
xor
mov
xchg
fildll
les
and
daa
popa
lods
push
punpcklwd
sbb
fdivrs
sbbl
out
out
ret
cmp
cmpsl
loop
mov
mov
in
xor
int
mov
out
sbb
outsl
cmp
sbb
push
xlat
aam
hlt
mov
cmp
mov
add
test
aas
lods
outsl
dec
test
cmc
repnz
mov
push
mov
add
mov
std
adc
pop
mov
jp
arpl
lock
out
jg
outsb
loope
lret
sub
loope
jg
into
push
imul
lret
lcall
andb
sbb
imul
test
or
jno
adc
ljmp
mov
test
lock
das
out
loop
or
fwait
in
dec
mov
iret
add
addb
pop
scas
jae
xchg
sbb
push
in
arpl
jl
mov
hlt
addb
mov
imul
adc
adc
insb
ds
cltd
add
mov
add
clc
test
xchg
stos
sbb
imul
dec
adc
mov
in
sbb
add
std
daa
cmp
or
push
es
xor
inc
mov
cmpsb
jae
stos
add
adc
movsb
cs
les
sarb
addr16
std
push
xchg
pop
inc
xor
pop
mov
inc
cld
inc
jg
jbe
sub
jbe
dec
xor
xchg
into
call
jl
cmpsl
sub
sbb
popf
xorb
pop
loop
out
mov
fmulp
movsl
adc
and
pop
loopne
sub
test
mov
cmp
add
mov
ds
jns
jecxz
ret
xchg
mov
push
sub
inc
and
in
mov
sbb
addr16
xchg
lds
insl
addr16
xchg
inc
inc
lods
outsb
lret
sub
subl
int
inc
jbe
xchg
imul
test
xor
sub
mov
nop
in
push
cmp
sbb
push
lods
cmp
fbstp
mov
mov
lock
mov
xchg
push
jbe
loopne
ficomps
addr16
or
js
cmp
add
into
loopne
push
pop
hlt
test
push
das
test
push
lods
ljmp
arpl
and
xchg
inc
repnz
sbb
mov
jle
jg
popf
into
scas
into
xor
jne
add
jno
and
inc
pop
xchg
insl
cmp
test
cmp
dec
sub
xor
mov
jo
cmp
loopne
data16
sub
aam
xor
aam
jp
repnz
xor
dec
pop
mov
cmp
es
ja
adc
out
ret
push
sahf
gs
mov
leave
icebp
lret
scas
push
inc
cmp
dec
or
push
pushf
jmp
subb
pop
xchg
cmc
es
in
std
sub
outsl
xlat
dec
je
lock
fiaddl
ret
cmpsl
mov
xchg
cmc
shlb
daa
or
insl
or
arpl
in
test
in
out
aad
test
pop
inc
inc
add
mov
sti
mov
mov
imul
mov
xor
xchg
idivl
or
sti
cltd
popf
popw
insl
mov
mov
add
mov
sbb
xchg
mov
dec
mov
xchg
cmp
cmpsl
or
push
pushf
ja
int3
jecxz
mov
pop
leave
mov
push
cmp
ja
jne
mov
movsl
out
pop
nop
ret
call
subb
push
in
xorb
int
shll
inc
aam
dec
in
jg
hlt
push
inc
mov
cmp
cmpsb
in
sbbb
lods
clc
shll
cmp
insl
xor
nop
sbb
movsb
stc
mov
ja
mov
cmc
xchg
lcall
jae
fadds
cwtl
ds
dec
dec
dec
xor
mov
pop
shlb
aam
mov
pop
es
cmp
rcrl
mov
in
lods
mov
cmc
adcl
add
daa
jmp
in
jbe
push
sub
lea
xor
mov
sbb
mov
inc
inc
pop
call
fs
xor
adcb
push
sti
loop
jb
mov
and
addr16
leave
or
testl
popf
xlat
inc
pop
icebp
into
and
ror
rep
ljmp
dec
aad
inc
mov
pusha
sub
push
mov
insl
sub
in
mov
out
leave
sbb
dec
leave
out
push
gs
cltd
mov
sbb
js
xchg
and
pop
pop
lahf
pop
es
outsl
psubq
es
pop
out
xchg
fnstcw
or
xchg
addr16
adc
xchg
xchg
push
mov
inc
sarl
push
jo
mov
cmpsl
vhaddpd
ret
fs
xor
lods
cli
pop
dec
pop
xchg
xchg
mov
inc
ss
sub
sub
mov
xor
out
int3
mov
cmp
test
negb
out
adcb
add
mov
mov
sbb
jne
iret
test
ret
loope
sarb
fisttpll
cmpsb
push
pop
adc
insb
stos
dec
dec
and
push
cmpsl
sbb
popa
movl
jbe
and
dec
inc
fwait
sub
aam
lret
movsb
test
push
mov
push
pop
push
mov
xchg
mov
sub
inc
push
nop
daa
lcall
inc
in
xor
call
adcb
push
outsb
dec
sub
and
mov
sbb
push
cmp
push
sbb
cmp
nop
in
mov
fcmovbe
scas
inc
ret
in
cmp
je
jae
fbld
cmpsb
adc
mov
dec
lea
pop
sarl
cs
in
sub
mov
fsubrs
mov
ja,pt
or
aaa
lcall
outsl
dec
lods
in
cmp
xor
xchg
es
enter
adc
out
inc
mov
sbb
cltd
divl
imul
push
subb
out
xlat
xor
aad
jnp
cmpsb
stos
add
mov
ror
inc
insb
xchg
push
inc
push
pop
adc
sbbl
outsl
out
dec
cwtl
aas
stc
add
mov
xchg
adc
sahf
icebp
push
push
std
cmpsl
sbbl
mov
pop
pop
and
adc
adc
cmp
xchg
inc
inc
enter
and
fdivs
call
pop
xchg
rol
mov
mov
or
adc
out
and
repz
xor
in
imul
clc
mov
scas
jae
rcrl
cmpsl
leave
inc
sub
xor
pop
and
xor
nop
jle
pop
fisttpll
in
jae
stos
ret
std
ljmp
jae
sbb
insb
loope
and
inc
mulb
stos
jae
xor
mov
stos
xor
xchg
fsubl
aaa
cmp
call
outsb
sbb
push
aad
aam
sub
dec
ret
ja
das
addr16
arpl
inc
jecxz
fs
push
cmp
xchg
mov
push
mov
mov
pop
mov
dec
shrb
les
xchg
js
dec
jmp
out
out
outsl
mov
push
jo
cmp
push
mov
les
and
push
lret
cmp
in
out
icebp
inc
test
addr16
and
jecxz
ficomps
mov
nop
mov
dec
arpl
pop
inc
mov
stc
in
jbe
lahf
enter
and
dec
pop
sub
inc
xchg
aam
scas
psubusw
pushf
fsubl
mov
fldl
test
jmp
ror
sbb
test
cs
inc
jle
or
stc
aas
sub
inc
clc
arpl
xor
jmp
jge
xchg
jecxz
dec
lret
xor
dec
mov
push
mov
popf
push
clc
pop
dec
iret
mov
in
sbb
adc
xchg
data16
xchg
je
call
fidivrs
stc
pop
cli
mov
sbb
lret
call
push
imul
subl
inc
push
rcll
xor
fs
dec
adc
int3
sub
sbb
dec
jo
pop
xchg
into
ret
mov
out
jnp
mov
loopne
je
jmp
test
jae
je
pop
mov
imul
rolb
push
mov
shrb
push
iret
jo
mov
cld
shll
scas
xchg
rclb
addr16
push
cmpsb
sti
jp
int
sbb
subl
pop
test
rcrl
idivb
jle
mov
mov
test
xorb
adc
push
aam
sub
aaa
test
jno
jecxz
test
inc
mov
or
lods
and
ds
aam
and
loopne
jecxz
dec
dec
cltd
jg
or
lock
add
enter
jg
mov
or
adc
mov
sahf
sbb
test
jo
scas
cmp
sbb
adc
mov
xor
lock
xor
or
insb
cmpsb
sub
dec
pushl
dec
lods
mov
push
aas
adc
adc
xor
mov
xchg
jle
inc
or
inc
stc
dec
popa
sub
mov
pop
pop
das
mov
mov
jb
sbb
nop
loopne
lret
ljmp
inc
insb
add
mov
aam
cli
clc
add
push
xor
or
add
xchg
int3
cmc
xchg
adc
mov
es
pop
ljmp
jg
inc
mov
outsb
mov
lods
cmpsl
sarl
call
pop
sbb
sbb
mov
movsb
and
test
rcrb
mov
xchg
inc
ret
aaa
push
inc
mov
push
lods
xchg
movsb
mov
xchg
mov
lea
imul
sbb
pusha
imul
enter
sarb
idivl
dec
movsb
push
insb
cld
aam
or
rorl
dec
insl
in
dec
inc
pop
or
jo
aam
fwait
mov
pop
dec
fwait
shll
subb
imul
fnstcw
pop
sti
std
shlb
fisttpl
sub
loope
iret
aas
or
mov
in
push
loop
jns
xor
xorb
test
pop
adc
and
pop
xchg
jns
jle
push
out
sub
repnz
jae,pt
out
lret
daa
lret
jmp
xor
push
mov
cli
xchg
sub
mov
cmp
out
int
and
sub
stos
xor
sbb
jo
repnz
inc
imul
add
sub
push
sbb
outsb
or
insl
mov
jno
jne
gs
mov
loopne
mov
lods
dec
mov
into
jno
xor
pop
test
pop
sbb
clc
xchg
rcll
mov
lods
cmp
out
jns
out
jmp
loopne
ljmpw
dec
pop
jp,pn
sub
push
inc
add
jns
mov
test
push
out
mov
mov
jns
mov
sbb
addl
pop
add
mov
and
push
add
imul
dec
xchg
mov
mov
in
xor
outsl
bnd
test
les
pop
sbb
xor
add
fbld
push
je
jne
clc
dec
adc
shlb
rcl
jbe
or
mov
xor
mov
mov
leave
ret
mov
mov
and
ljmp
cltd
push
ret
sbb
stc
les
les
shlb
mov
lcall
cmp
cmpsb
and
inc
dec
sahf
pop
int3
cmc
lock
jmp
xchg
inc
testb
stc
mov
gs
repnz
jae
mov
leave
rclb
fstpt
inc
mov
maxps
xor
mov
jmp
fs
outsl
push
ja
or
xchg
scas
inc
xor
imul
addl
test
cs
xchg
mov
cli
xchg
std
sub
test
scas
dec
pop
jo
xor
leave
pusha
mov
xor
cs
push
scas
pop
or
jp
lods
clc
mov
xchg
std
mov
imul
rcrb
inc
jmp
jmp
and
loopne
dec
lret
xor
pushf
inc
adc
xlat
lock
daa
xchg
nop
dec
or
or
shrb
negl
lahf
lret
xchg
outsl
fwait
cltd
add
stos
popf
loop
jnp
xorl
push
jnp
les
add
mov
out
jge
sbb
mov
mov
andb
popa
fcoml
or
test
ret
nop
dec
lahf
incl
push
mov
arpl
rcll
pop
and
mov
push
dec
dec
cwtl
mov
inc
cvtps2pi
out
dec
inc
rcr
pop
dec
mov
in
lock
scas
loop
nop
mov
add
adc
clc
xor
mov
bound
into
add
sahf
xor
or
dec
fdivrs
data16
pop
nop
push
inc
sub
or
aas
add
rorb
inc
pusha
push
int3
lret
jns
adc
aas
inc
xor
outsl
int3
inc
adc
out
nop
xchg
add
push
push
pop
outsl
sub
adc
jb
test
movsb
jecxz
cs
lds
ret
push
nop
aad
mov
mov
add
inc
mov
cmpsl
sbb
sahf
mov
out
lret
and
mov
xchg
xchg
out
push
add
pusha
adc
adc
std
inc
aam
das
jle
fdivl
dec
stos
mov
fcoms
popf
xchg
or
pop
insb
sub
or
ds
and
sub
je
pushf
js
test
and
stos
aad
xchg
mov
imul
add
test
push
insl
cmp
ds
into
cmp
mov
sub
dec
xorl
jnp
test
out
adc
lods
mov
xchg
call
test
test
fcmovnb
cld
jno
notl
rcll
arpl
cmpsb
mov
aam
xor
cmp
iret
mov
sbb
iret
push
out
push
movsb
push
and
xchg
mov
add
push
fisttps
sbb
sub
lods
sbb
mov
xor
adc
adc
sahf
addr16
jmp
xor
ret
sbb
and
clc
fstpt
cmpsb
sarb
aaa
add
ss
sbb
push
addl
mov
jle
cmp
dec
sti
xlat
lret
inc
push
mov
fisubrl
inc
mov
mov
dec
jmp
mov
aaa
aad
jno
adc
fcoml
das
inc
dec
ljmp
out
lahf
pop
rorl
insl
sbb
jnp
pop
jmp
xchg
lea
jmp
adc
xor
aaa
in
xchg
loope
cmp
pop
push
mov
aaa
fcomp
out
mov
cmp
loopne
inc
pop
outsb
fsubrl
inc
and
call
popf
stc
jle
nop
leave
dec
lahf
bnd
xchg
aad
or
movsb
xor
lea
rcl
sahf
ret
push
cmc
lea
pop
in
mov
jae
pop
cs
pop
mov
es
ljmp
pop
add
jmp
inc
das
sar
cmpsb
mov
nop
fidivs
sbb
cmp
rorl
cmp
jo
and
mov
shll
orl
movb
mov
lea
mov
xor
gs
mov
mov
jnp
xorb
mov
jo
push
ret
inc
cmpsl
jmp
cld
popa
rclb
inc
jns
push
xchg
insl
mov
ror
mov
cmpsb
mov
inc
add
fsubrp
icebp
outsl
stos
inc
jle
dec
test
jbe
out
shll
je
orl
pop
inc
mov
pop
xlat
inc
jle
mov
jns
lock
xchg
cmpsl
sub
dec
sbb
xchg
xor
ss
adc
call
xchg
stos
or
movsl
sbb
jno
insl
ljmp
inc
test
sub
cmpsb
xchg
push
aad
bound
sbb
mov
gs
fsubp
sub
pop
xchg
mov
jecxz
dec
repz
ljmp
xor
and
enter
jns
or
push
pop
sub
jl
loop
iret
xlat
icebp
and
test
and
mov
dec
push
jge
adc
rorl
popf
fldl2e
or
sub
sub
pusha
or
xchg
mov
int
cs
push
mov
jno
push
cwtl
xorl
inc
push
popa
adc
dec
daa
imul
fldpi
jmp
or
hlt
in
out
sub
mov
jp
das
repz
cmp
pop
ja
inc
ds
popf
push
push
mov
cli
outsl
or
sbb
cltd
jmp
loop
loope
push
cmp
imull
movl
scas
into
in
imul
push
aaa
push
push
imul
into
sub
cmpsl
or
jb
out
xchg
dec
repnz
movsb
jl
rorl
adc
mov
gs
push
mov
cs
out
mov
and
mov
pop
rclb
dec
sub
pop
xor
adc
sub
add
inc
cmp
mov
jge
mov
mov
inc
pop
jne
or
lods
iret
in
xor
mov
mov
sub
pop
jp
xor
leave
xchg
push
rol
mov
mov
adc
adc
pop
femms
dec
mov
shll
push
orl
and
ljmp
push
lea
cmc
mov
xchg
adcl
out
sub
fwait
cmp
imul
sub
xchg
lahf
dec
sub
sbb
cli
cli
pop
add
fadd
cs
sahf
lock
js
cmp
cld
push
cmp
pop
sub
repnz
push
adc
or
ljmp
jmp
mov
insb
cld
sub
jbe
dec
les
in
cmp
mov
rclb
mov
push
fidivrs
cmc
or
push
mov
jge
pop
shl
cmpb
pop
aad
lods
sub
stos
push
pop
pushf
mov
and
mov
scas
fbstp
rep
add
fcomps
fadds
sbb
data16
push
mov
and
push
dec
jp,pt
dec
fsubl
add
inc
mov
mov
pop
xchg
subb
test
roll
nop
into
lret
dec
adc
push
loopne
aam
sarb
mov
push
pop
out
aas
push
xchg
dec
in
movd
sbb
and
mov
fcmovnbe
xchg
push
pop
insb
das
mov
mov
sbb
or
mov
gs
pop
test
push
in
nop
mov
cmp
cmpsb
pop
sub
mov
aad
inc
mov
sti
cmp
sub
cmp
mov
inc
lock
fbld
hlt
jae
sahf
xor
test
sti
adc
fwait
rcll
cmp
cli
jle
jg
fdivrl
aam
test
and
lods
mov
add
push
sub
inc
push
mov
dec
mov
stos
pop
insb
test
fimull
les
stos
xchg
xor
rcr
push
xchg
mov
sub
iret
cltd
gs
imul
stos
adc
fst
adc
push
cmpsb
add
pop
xchg
jno
cmp
lret
cwtl
inc
cmp
cli
jo
mov
int3
cmp
jmp
popa
or
loopne
inc
in
mov
dec
lods
xchg
loop
loope
push
in
ficoml
xchg
mov
fucomp
aad
aam
cltd
mulb
inc
pop
sbb
scas
fcomps
mov
mov
test
bound
rclb
cmpl
out
jmp
or
sti
cs
dec
test
jns
int3
gs
in
test
or
pop
inc
xchg
inc
push
pop
xchg
jb
scas
in
mov
jge
sarl
cmp
aam
out
repz
or
lods
xorb
inc
rorb
cltd
in
jnp
sbb
dec
jge
inc
inc
sub
dec
sbb
dec
ja
xchg
cltd
and
aas
push
lods
lret
push
outsb
leave
imul
into
sub
cmc
xlat
inc
test
in
mov
pop
sarl
mov
test
jp
aad
neg
mov
or
das
adc
cs
nop
pop
into
test
fmuls
jno
and
cmp
sbb
cwtl
and
imul
insl
icebp
nop
pop
dec
cmp
push
xor
fdivrs
sub
jmp
outsl
in
xor
add
mov
sbb
mov
adc
mov
lea
sbb
stc
jle
test
nop
lret
leave
fcomps
lret
stos
cs
sbb
inc
sti
xor
inc
dec
fistps
dec
mov
scas
aaa
xorb
iret
stc
aaa
sbb
jne
xchg
shrb
pusha
dec
adc
dec
pop
mov
adc
cmc
fisubrs
subb
add
cmp
and
add
mov
push
js
lret
cmp
cmp
jne
test
add
addr16
sahf
cmp
cmp
arpl
sbb
nop
mov
pop
pop
or
add
ret
jp
push
int
or
outsb
push
stos
dec
cwtl
ret
pop
out
add
in
mov
adc
leave
push
pop
sbb
inc
dec
mov
add
mov
pushf
jl
mov
jl
lcall
mov
pop
push
adc
dec
ja
mov
and
pop
std
lds
sahf
cwtl
leave
push
fisubs
popf
mov
dec
lret
pushf
sbb
addr16
xor
pop
sbb
hlt
add
mov
xor
stos
aam
lods
xchg
jns
shl
push
cmp
loope
jno
loop
push
mov
arpl
ja
sub
pop
scas
sub
aad
or
popa
jg
pop
mov
mov
cwtl
arpl
push
xchg
sbb
jmp
inc
mov
push
sar
and
sbb
push
mov
or
sbb
pop
or
pop
cmp
in
or
shl
and
jb
cmp
arpl
add
daa
je
das
imul
je
ljmp
lahf
test
in
sbb
ds
mov
xlat
ds
jp
mov
repz
fcom
cmp
cmpl
icebp
dec
lods
and
mov
mov
mov
mov
sub
int
jge
stos
sbb
adc
lret
xchg
xchg
cs
aaa
popa
rcr
lret
dec
sub
mov
and
pop
mov
jno
data16
mov
in
push
or
adc
sub
insl
outsb
xor
pop
add
cmp
and
iret
shll
hlt
in
sub
cwtl
mov
aas
iret
shl
pop
fsts
scas
das
fisubrl
dec
add
xlat
cmp
pop
pusha
fwait
mov
push
ljmp
rcr
mov
pusha
lahf
outsl
ds
adc
cmpsl
push
cli
je
orl
and
mov
xor
cld
into
push
daa
mov
addr16
adc
xchg
mov
mov
cmpsb
inc
clc
adc
xchg
cli
mov
and
popf
push
ja
in
nop
fs
add
stos
dec
dec
aas
mov
pop
sub
adc
movsb
inc
dec
ljmp
out
inc
mov
cs
push
hlt
cmp
lods
fiadds
movsl
movsl
xchg
mov
lret
lahf
aas
sbb
sub
aam
push
aad
jno
out
mov
push
movsb
adc
mov
leave
dec
out
andl
outsb
or
mov
mov
dec
jno
jg
scas
movsb
xchg
lock
sub
lds
lds
iret
lret
inc
add
fwait
xor
imul
out
out
cmp
sub
mov
incb
adc
cltd
push
mov
mov
inc
fcmovnbe
adc
cmpsl
push
mov
repz
push
lds
out
clc
or
pop
in
incl
repz
addr16
mov
mov
xor
inc
jae
fistl
dec
js
xchg
inc
mov
xchg
jge
push
adc
xchg
scas
mov
mov
xchg
jbe
mov
jg
pop
loope
orl
mov
enter
ret
pop
cmpsl
in
lods
insb
imul
popa
clc
daa
xor
rcr
cs
sbb
pop
inc
int
pop
mov
push
jns
adc
nop
test
sub
or
sub
xchg
cli
cmp
pop
xor
enter
sbb
cmp
xchg
mov
out
and
jg
fiaddl
fldenv
mov
mov
out
xor
push
inc
outsl
adc
imul
cmc
xchg
adc
pop
push
inc
cmp
jg
int
pop
repnz
cmp
adc
into
xor
sub
int
in
stos
cmc
nop
pop
pop
dec
mov
insb
testb
mov
xchg
add
cmp
xchg
jb
cld
add
stc
or
aaa
pop
arpl
pop
push
in
imul
divl
repnz
arpl
ret
xchg
xor
xor
lds
adc
dec
cmp
movsl
add
adc
roll
jns
adc
outsb
cmp
jmp
inc
pop
push
iret
sahf
cmp
cmp
sbb
out
xlat
cmpsb
mov
sahf
push
fistl
popa
arpl
shll
mov
inc
pop
popa
or
cwtl
gs
push
nop
dec
jae
jmp
push
xor
lea
push
jno
jmp
inc
mov
add
sub
fistl
adc
in
cmovp
jg
in
loop
movsl
push
adc
mov
lds
jnp
rolb
dec
or
lds
sbb
ds
arpl
push
mulb
xor
pop
movsb
adc
dec
push
xchg
or
jp
cs
sbb
hlt
mov
jg
sahf
cs
push
sbb
std
cmp
mov
movsb
pusha
movl
notb
lds
xorl
stos
add
push
test
xchg
es
mulb
aas
adc
data16
dec
mov
lods
subl
inc
repz
repnz
mov
loopew
xchg
mov
xor
xchg
nop
inc
xchg
push
pusha
lret
shr
pop
mov
or
inc
or
xorl
nop
xlat
movsl
iret
lock
in
pushf
mov
pop
loope
clc
sub
push
and
push
fwait
sti
outsl
push
stc
fcmovb
jbe
jne
jle
xor
mov
add
sub
mov
xchg
roll
xor
mov
ljmp
inc
jmp
xor
lahf
xor
test
shlb
and
scas
mov
shll
adc
mov
mov
inc
fdivrs
sbb
scas
push
push
stos
mov
or
fisttps
lea
push
fucomp
mov
out
shrb
adc
pop
mov
jb
pusha
scas
imul
mov
lds
movsb
cmp
inc
aad
push
stos
popa
cmp
call
lock
sbb
cmp
push
fwait
push
insl
jg
stos
adc
or
adc
push
fists
push
pop
mov
cli
popf
mov
xlat
cs
cmp
sbb
jbe
push
pop
lret
and
movl
sub
sbb
cwtl
sbb
jp
adc
push
mov
enter
xchg
cmp
mov
stc
test
xchg
push
daa
adc
cmp
in
movsl
pusha
add
cmp
xchg
hlt
pop
or
lds
sbb
jae
dec
movsb
loop
xchg
pop
lcall
adc
repz
jmp
mov
lods
dec
dec
cmp
add
ret
jns
aad
jp
mov
cmp
dec
rolb
lods
mov
aaa
mov
mov
sbb
int3
xlat
in
cmpsl
inc
rorb
test
sarb
pop
loop
dec
mov
push
push
add
adc
ljmp
stos
or
stos
ss
js
and
mov
mov
nop
mov
mov
jmp
lea
mov
push
cmpl
jo
cmp
pop
fcmovne
clc
js
pop
push
pop
rcll
cmpsl
xor
xchg
rcr
loope
pushf
pop
js
xor
mov
addr16
push
sbb
leave
sub
sub
stos
popa
xchg
pop
mov
jb
mov
sbb
push
inc
ja
pop
fiaddl
sti
mov
add
add
inc
fmul
sbb
lds
push
mov
xchg
packsswb
xor
mov
xchg
mov
ret
jae
jmp
inc
jo
sbbb
adc
mov
leave
xor
xchg
shlb
repnz
dec
and
jb
inc
shl
dec
inc
stos
xchg
add
mov
push
jns
fs
addr16
mov
mov
mov
push
data16
btr
int3
xchg
jnp
loop
std
fnsave
sbb
js
or
out
ss
adc
pop
push
fucomi
push
loope
mov
sub
fnsave
mov
pop
mov
icebp
cmp
lahf
sub
push
das
pusha
lret
pop
fisttps
pop
and
adc
rorb
lahf
and
inc
cmp
cld
dec
outsl
icebp
xchg
pop
add
add
dec
cmp
imul
iret
jge
add
inc
mov
pusha
scas
test
inc
inc
dec
in
push
movsb
add
xchg
push
inc
jne
lods
push
sub
jns
pop
or
mov
shlb
adc
ja
or
sub
pop
add
add
dec
pop
stos
daa
ret
icebp
addr16
fidivrl
pop
jle
dec
mov
add
loope
in
push
daa
push
out
int3
data16
in
shrb
insb
paddsb
pop
popa
xchg
mov
sarl
imul
push
cltd
xchg
insl
pusha
scas
imul
imul
add
jnp
repz
aaa
in
dec
mov
adc
jae
imul
insb
pop
movsl
jne
iret
xchg
push
aam
in
mov
iret
pop
adc
adc
sub
adc
out
arpl
push
lcall
les
std
jae
int
in
into
inc
pop
fiadds
push
dec
push
bound
mov
mov
sbb
sti
fidivl
cltd
lods
pop
je
sbb
popf
or
iret
rolb
aas
fimuls
arpl
jp,pn
push
gs
loopne
inc
push
aad
dec
fs
rcrb
cmp
jl
push
lahf
adc
xchg
mov
andl
or
sub
out
pop
frstor
mov
xorl
sub
test
cmpsl
out
int
mov
cmp
stc
xchg
in
ss
pop
hlt
push
and
out
in
or
lods
lcall
mov
jge
out
fiadds
add
ret
mov
adc
hlt
inc
add
je
jg
inc
nop
jae
test
popf
jno
lret
add
and
pop
jno
ljmp
mov
loope
decb
in
scas
arpl
popf
orb
repnz
je
out
shll
sahf
adc
mov
pop
lret
cmpsl
pop
xchg
mov
dec
or
jo
insl
or
push
mov
or
push
mov
scas
sub
popa
jecxz
add
jns
fisubrl
add
int
mov
sahf
daa
or
mov
das
mov
outsb
data16
into
push
loopne
mov
jo
or
pusha
in
inc
ffreep
sbb
dec
and
adc
loop
adc
lods
xchg
xor
pop
push
fs
nop
fnstenv
push
dec
sbb
cmp
xchg
leave
cli
xor
pop
xchg
mov
data16
clc
xchg
stc
jge
in
jmp
movsb
enter
test
inc
addb
out
push
xchg
fidivs
aas
jmp
test
out
ret
xchg
mov
aaa
xlat
inc
es
xchg
aaa
cmpb
pop
add
fwait
lcall
mov
cmp
fcompl
cmovns
jp
inc
test
xchg
and
ficoms
packssdw
xchg
imul
lcall
mov
cmp
test
dec
xchg
jns
jecxz
lcall
loopne
sbb
outsb
loopne
inc
les
addr16
pop
outsl
dec
shll
jb
sbb
dec
mov
divb
mov
add
mov
mov
mov
mov
gs
sub
and
icebp
jl
dec
mov
insb
pop
rorb
cmp
adc
out
repnz
enter
movsb
mov
ss
adc
add
xchg
mov
enter
enter
in
mov
pop
insb
ljmp
in
fsubp
pop
scas
jbe
push
xcrypt-ofb
cmpsl
scas
jp
es
xor
xchg
cld
xor
cs
pop
ret
mul
mov
inc
pop
sbb
stos
jge
stc
xorl
ds
mov
add
out
push
xchg
bound
cmp
jmp
call
imull
ficoms
pop
insb
aas
test
dec
adc
pop
mov
or
jbe
cli
stos
dec
lea
ret
out
lock
jne
in
sub
mov
imul
xchg
cs
lock
or
stos
insb
mov
lock
lcall
fcomi
lcall
pop
pop
mov
iret
xor
and
push
mov
adc
out
adc
mov
mov
int
mov
ja
jle
jb
je
test
sbb
mov
stc
in
or
or
repnz
or
arpl
and
or
sbb
or
fwait
js
mov
sti
out
xor
loope
mov
out
cmp
scas
jmp
jne
loope
or
les
xchg
repz
test
xor
mov
sub
pushl
ficoml
add
or
push
jno
or
lods
popf
dec
xor
out
push
loope
ror
das
and
dec
inc
cmp
fcmovne
and
gs
call
sbb
nop
mov
mov
dec
mov
mov
mov
cli
imul
pop
arpl
sub
mov
xchg
imul
int
mov
jne
test
or
inc
outsb
in
lock
stos
mov
loope
movsl
push
or
jne
mov
les
pop
lods
pop
sbb
lods
insl
mov
jne
subb
mov
std
mov
insl
bound
imul
pop
lock
popa
popf
test
enter
movsl
ss
icebp
les
sub
repnz
or
sbb
hlt
jmp
stos
shlb
xchg
jl
mov
or
mov
jmp
dec
inc
cmp
jns
jns
inc
pop
flds
sub
daa
xchg
mov
das
aam
fsubrs
ss
test
fsubr
lret
leave
cmpl
insb
icebp
in
xor
ret
clc
dec
shll
cmp
and
adc
jb
adc
icebp
outsl
loop
insl
inc
nop
xor
sub
jbe
filds
lahf
sub
leave
jnp
cmpsb
je
stc
mov
mov
and
aad
cwtl
lea
inc
mov
cmp
cs
addb
pusha
cld
jns
push
mov
sbb
fsubrp
or
mov
push
adc
mov
stos
movsl
repz
mov
loop
pop
or
test
adc
enter
inc
jge
xor
test
call
mov
add
cmpsl
sti
notl
in
add
and
and
add
push
pop
push
adc
mov
and
xorb
mov
xchg
fimuls
mov
and
shll
aam
or
sti
cmp
test
enter
aas
xchg
adc
jo
mov
pop
inc
loope
push
mov
icebp
call
xchg
pusha
cltd
cli
enter
sbb
in
xchg
push
mov
mov
les
aad
es
jns
mov
inc
sbb
out
popa
mov
sub
or
cli
mov
out
mov
jp
shl
inc
sub
cs
jnp
mov
sysenter
shll
push
adc
rclb
std
call
fnstcw
das
jecxz
jecxz
fs
dec
pusha
jp
adc
test
push
cmp
cmpsb
jmp
add
test
mov
push
cmp
out
sbb
inc
ret
jl
sarl
mov
lods
dec
imul
jb
pusha
roll
shll
insb
mov
pop
inc
and
fldcw
adc
shll
aaa
into
aam
mov
pop
or
int
cld
aam
sbb
insb
or
stos
adc
test
out
jae
add
addr16
movsb
sbb
mov
rcrl
es
sub
jbe
pop
dec
fisubl
insl
es
sub
jmp
sub
mov
and
fwait
in
adc
or
jae
jo
or
lods
pop
pop
dec
repz
in
jno
inc
scas
or
shlb
cli
sub
jmp
out
jmp
xchg
push
repz
iret
scas
pop
and
adc
decw
adc
stos
int
mov
mov
mov
dec
cmpb
into
cs
fsts
fs
lret
cmp
stc
loope
pop
es
mov
dec
ja
sub
mov
mov
movsl
out
and
xchg
sahf
cmp
jmp
xorl
xchg
sbb
addr16
jmp
push
scas
std
testl
add
xor
xchg
mov
inc
add
rcl
xchg
push
jp
cld
xlat
ja
fidivrs
shll
sub
jb
call
add
fsub
jae
mov
adc
fbstp
in
faddl
out
lret
scas
push
add
mov
ficompl
hlt
ficompl
xor
mov
addr16
popf
jle
and
out
lcall
push
xchg
or
xor
fcomps
ljmp
mov
jl
loope
jle
add
fsubs
and
cmpsl
adc
add
ret
or
test
pusha
mov
push
adc
cmp
fiaddl
jge
mov
test
shrb
pop
lret
scas
and
pop
das
jecxz
data16
fucomp
cmp
xchg
dec
lea
mov
dec
or
xchg
popa
leave
scas
dec
jbe
movsl
xchg
pushl
test
add
or
xor
sahf
outsl
mov
push
mov
mov
cltd
dec
xor
mov
enter
push
xchg
out
xorb
clc
cld
std
mov
add
inc
jl
pusha
fcompl
push
xchg
std
xlat
rol
mov
cmpsb
ret
das
sub
ss
lds
adc
outsl
addr16
pcmpgtd
and
sub
push
jmp
dec
cmp
test
mov
movsl
in
aas
inc
dec
adc
loopne
popa
ja
inc
jb
lods
out
iret
inc
jns
jns
mov
inc
fwait
jle
out
xchg
add
adc
arpl
sbb
cltd
xchg
inc
pop
imulb
sbb
sbb
lcall
movsb
lds
adc
rorb
pop
mov
sbb
faddl
or
pop
loopne
data16
lods
cmp
aaa
push
xor
xchg
mov
push
and
ficoms
sbb
decl
lcall
ss
cmc
mov
call
lret
aaa
lret
xlat
push
jns
mov
xor
js
fcompl
iret
jecxz
pop
seto
mov
jp
aas
sbb
scas
mov
repz
out
inc
addb
jecxz
fimull
iret
or
xchg
loope
fcom
jg
mov
and
jae
cli
xlat
inc
pop
test
and
mov
mov
or
push
insl
fmull
xor
sbb
adc
jo
pusha
mov
xor
imul
cli
xchg
pop
arpl
lock
sarl
jl
rorb
push
aam
add
mov
jle
xor
jo
sbb
lock
mov
mov
mov
not
in
mov
xchg
mov
jle
jne
outsb
scas
int3
stos
adc
sub
sti
jbe
fwait
cmp
shr
ss
cld
mov
sahf
movsl
stos
ret
arpl
inc
mov
rorl
fdivs
mov
and
mov
lret
jle
jle
push
jbe
out
sarb
ljmp
insb
jle
mov
and
adc
inc
ret
xorl
sbb
imul
sub
sub
or
jp
cld
push
mov
pop
int
push
cmp
and
mov
adc
test
adc
jne
filds
jo
push
cmp
pop
lahf
sub
lock
mov
cmp
mov
add
add
and
push
add
inc
movsl
mov
adc
jb
sub
test
insb
ret
cmp
in
sub
add
scas
pop
mov
test
adc
ficompl
orl
ret
jmp
push
and
pop
mov
pop
mov
std
in
cli
sub
jbe
pop
xchg
fcmove
adc
das
sbb
and
pushl
or
inc
push
sub
imul
dec
pop
mov
add
mov
rorl
xchg
into
int
jp
sti
dec
je
fsubrl
cwtl
clc
sub
mov
imul
mov
push
jne
jne
or
pop
push
sbb
jb
lahf
xchg
lea
test
ret
mov
out
out
xor
outsl
mov
shl
sub
jg
call
inc
icebp
and
or
jnp
imul
shlb
push
xor
pop
jle
dec
xor
stos
aam
out
stos
or
pop
test
aad
jmp
pop
stos
jnp
negl
idivb
shrl
subb
xor
or
sbb
jecxz
add
xor
pop
pushfw
mov
mov
pop
call
pop
popa
cltd
addr16
xchg
gs
adc
outsb
lahf
loopne
jns
jle
sub
xor
or
dec
xchg
rcll
or
sub
call
mov
sbb
jae
negl
cli
in
pop
mov
lock
mov
lret
or
popf
pusha
jp
in
jecxz
not
test
popf
scas
aas
jl
pop
lea
add
mov
push
pusha
hlt
rorl
pusha
xor
insb
jle
addl
cmp
loopne
mov
mov
add
inc
ret
mov
jbe
ret
dec
incb
pop
sbb
js
test
and
lock
ljmp
fsubrs
mov
int
xlat
dec
xlat
jb
fsubs
jno
lods
pop
scas
add
mov
in
inc
popf
popa
std
jnp
ds
push
jns
lock
mov
cmpsl
sub
enter
cli
xchg
jge
mov
imull
sti
hlt
adc
loopne
dec
cmp
std
jbe
js
mov
and
lcall
add
push
lock
jg
out
in
jne
aaa
test
lcall
push
inc
mov
and
dec
outsl
scas
mov
sub
add
repz
mov
rcl
stc
sub
mov
add
enter
shll
sbb
shlb
sbb
fimull
imul
andl
sbb
insb
iret
in
out
inc
test
mov
push
xchg
add
fmull
add
xchg
ret
dec
out
js
ficoms
xchg
aas
xchg
push
jp
xchg
lods
movsb
xchg
add
stc
xor
cld
cmp
jno
jo
xchg
push
push
lods
push
or
shrb
pop
inc
insb
jno
mov
sti
inc
aam
int3
out
daa
xchg
or
mov
xor
shr
mov
cmp
pop
nop
pushf
lret
sbb
dec
lret
xor
decl
test
inc
into
mov
lods
ret
out
jl
jmp
das
ret
std
popa
insl
push
inc
xchg
cmpsl
ljmp
es
stos
adc
cltd
aaa
sub
loop
mov
jno
lods
out
dec
sbb
jg
cli
dec
mov
aas
pop
rorb
pusha
and
lret
out
mov
dec
shlb
fdivp
shll
push
aad
ss
dec
add
out
add
adc
or
out
stos
lahf
push
int3
iret
jo
stos
cmpsb
repz
stos
sbb
cmp
mov
sahf
jne
mov
jecxz
jg
jnp
cli
cmp
pop
cmpsb
ss
mov
leave
xor
fucomp
bound
pshufw
mov
push
stc
dec
insb
add
and
pop
cs
jge
and
test
xchg
scas
jmp
ret
pop
cmp
xor
push
and
inc
cmp
lods
nop
jmp
xor
push
xor
shlb
fwait
sbb
mov
jns
push
in
push
ret
adcl
add
mov
jp
dec
aam
mov
cmp
sub
mov
add
popf
lock
inc
and
dec
xor
mov
mov
push
dec
jecxz
nop
push
lret
in
xor
out
dec
mov
cmpsb
pop
cmp
test
in
mov
sbb
cmpsb
jecxz
pop
cmp
adc
gs
add
sbb
add
sahf
pop
inc
xchg
pop
insb
inc
dec
lea
xlat
cwtl
testl
stos
xchg
enter
insl
nop
in
daa
mov
xlat
fistpl
push
call
pop
mov
add
repnz
pop
ret
dec
push
movsl
inc
mov
or
and
fmull
hlt
add
repz
cmc
push
outsl
sbb
xor
inc
mov
xchg
pop
dec
mov
dec
inc
inc
popf
pop
int3
jl
push
out
push
lods
xchg
mov
out
imul
imul
addl
fwait
and
jae
out
rclb
mov
out
rcll
xchg
fcmovnb
cmc
xchg
xchg
aam
cli
movsb
loopne
cld
xchg
xor
inc
lcall
xor
js
enter
clc
or
repz
ljmp
mov
int
sbb
mov
mov
in
in
add
or
mov
sbb
test
pop
pop
xor
xchg
add
add
pop
sbb
mov
inc
aaa
mov
xor
and
daa
cmp
aaa
add
decl
mov
xchg
mov
mov
add
es
icebp
aad
sbb
clc
jle
adc
sbb
pusha
rcrl
dec
push
aam
push
inc
loopne
add
mov
dec
push
sub
add
pushf
cmpsb
xlat
or
cltd
rclb
jae
scas
mov
hlt
adc
cs
mov
mov
roll
pop
lods
mov
insb
andl
jle
js
jmp
dec
add
test
insl
lret
jns
and
in
or
movsl
add
lret
push
lods
sbb
fnsave
add
bound
xchg
sbb
mov
shrb
or
leave
out
pop
jns
inc
sarl
popa
inc
movsl
lods
inc
insb
jmp
mov
sbb
pop
inc
push
cmp
rolb
scas
into
insl
mov
call
or
or
xchg
sub
out
addr16
mov
ret
pushf
sbb
je
mov
sub
inc
mov
imul
dec
and
das
mov
push
fs
mov
inc
add
aam
xchg
add
inc
repz
insb
jl
ds
iret
mov
mov
dec
js
cmp
xor
aam
outsl
fldl
mov
ret
popf
imul
inc
mull
add
inc
bound
lret
xchg
fiaddl
repnz
loope
outsb
mov
ret
repnz
push
fidivrl
push
jecxz
sahf
ljmp
jo
adcl
or
addr16
outsb
ss
sub
mov
loop
xchg
jmp
sub
call
sbb
das
pushf
ret
sub
outsb
aam
mov
jp
xchg
ds
sub
in
push
inc
mov
push
cmpsb
mov
dec
xchg
out
push
lea
adc
in
xchg
nop
cmp
push
push
inc
aam
leave
pop
sub
pop
es
insb
pop
sub
push
cmc
cmp
mov
xchg
pusha
dec
sti
add
rolb
jl
mov
jp
into
data16
fsubrs
cmc
test
jbe
cli
outsl
mov
sahf
ficoml
fisttpll
iret
or
mov
pop
das
xor
mov
and
add
add
in
rcl
jg
arpl
mov
decb
mov
cld
push
cmpsl
dec
mov
mov
hlt
push
and
int3
mov
inc
fisubrs
jmp
ret
rcl
xchg
mov
lret
inc
jae
filds
rorw
or
aas
sub
dec
std
rcl
lds
or
mov
aad
fsubrl
pop
stc
inc
cli
jecxz
adc
and
pop
adc
ret
mov
sti
jl
add
shlb
je
add
cmp
into
push
cs
leave
push
hlt
sbb
jmp
pop
shlb
leave
in
ficoml
mov
mov
xor
cmpsl
mov
inc
push
or
lret
push
fadds
loop
xlat
mov
scas
aad
daa
jno
aad
xor
leave
pop
cmp
mov
pop
adc
xchg
xchg
in
pop
xorl
fs
dec
jmp
ficoml
mov
ja
cmp
xor
and
pop
xor
lahf
mov
mov
sub
icebp
mov
popf
outsl
and
dec
pop
jecxz
mov
test
mov
fidivrs
adc
push
std
stc
mov
xchg
stos
and
mov
into
decl
xor
mov
add
mov
ffree
jecxz
adc
adc
js
repz
mov
or
xlat
clc
leave
sar
fdivrl
stc
orb
pop
push
aam
mov
add
lea
cmc
cld
push
xchg
mov
fbld
jbe
adc
mov
repnz
pavgb
mov
and
cmp
adc
fucomi
push
mov
mov
sbb
push
sbb
fs
popa
subl
ds
cmpsb
dec
mov
leave
repnz
dec
mov
icebp
push
int
mov
cld
repz
arpl
sub
dec
scas
test
mov
aad
scas
sub
outsl
shll
pop
jns
je
test
flds
in
stc
push
cli
nop
jne
jl
cltd
sbb
insb
dec
into
push
scas
shll
pop
jmp
test
xchg
mov
or
inc
mov
inc
sbb
cmpsl
test
and
inc
xor
xchg
mull
pushf
cltd
in
adc
add
cltd
hlt
cli
or
inc
mov
iret
mov
out
add
jo
pop
pop
jno
repz
mov
loope
pop
push
mov
add
std
jecxz,pn
test
iret
pop
sbb
and
add
mov
cmp
shll
mov
add
ljmp
dec
mov
pop
addb
sub
pop
fldenv
loop
pop
addr16
pop
mov
lret
sbb
fcoml
lock
mov
jns
push
roll
cmp
stos
and
seta
popf
xchg
popf
lret
divl
and
sahf
jns
addr16
movsb
in
pop
jle
ds
test
std
sub
or
or
push
mov
pop
or
mov
push
stos
jl
mov
mov
psubsb
lods
es
lods
and
add
dec
pop
sbb
jnp
in
sub
icebp
imul
xchg
test
sarb
ret
push
stos
loope
cmp
add
outsl
nop
mov
push
push
mov
adc
or
ljmp
xchg
cmp
pop
or
stc
push
and
mov
insl
data16
daa
inc
dec
stos
loop
push
aam
mov
addr16
pop
jecxz
imul
call
loop
xor
mov
hlt
push
mov
mov
pop
aas
ja
call
inc
mov
or
lret
mov
mov
and
imulb
mov
pop
jo
mov
push
pop
add
xor
sti
add
roll
jno
and
sub
inc
xor
mov
pop
cmp
or
cs
jle,pn
rcll
push
inc
call
mov
sub
cmp
dec
fiadds
dec
ja
lahf
in
sahf
jns
dec
mov
xor
or
lret
inc
xlat
push
add
aas
dec
and
add
xor
repz
sbb
xlat
sti
xor
adc
and
add
insb
inc
pop
ret
sahf
leave
in
push
out
repnz
mov
mov
fwait
or
jbe
mov
mulb
adc
fdivs
jno
mov
or
repnz
aam
mov
sub
sti
mov
lret
and
xchg
jmp
adc
or
mov
adc
mov
test
cmpb
cmp
dec
lock
jne
dec
insb
add
sub
pushl
dec
nop
pop
lds
cmp
shlb
cmp
fmul
pop
push
stos
leave
mov
dec
sub
aad
hlt
in
sub
push
sub
dec
lds
call
test
cwtl
push
rcr
adc
scas
dec
xor
jae
es
fwait
adc
fdivrs
hlt
push
cmp
xor
enter
popf
dec
leave
xor
mov
push
xchg
or
repnz
pop
loopne
or
jns
in
int
add
mov
sbb
stc
xor
jmp
loope
inc
sub
push
aad
pop
mov
or
ret
xor
loope
xor
pavgb
push
cli
pop
dec
rol
ret
adc
dec
shll
mov
inc
pop
add
lea
pop
cmpsb
mov
test
dec
sti
scas
loop
call
and
pop
in
lock
movsl
daa
xchg
fadds
cwtd
inc
jb
jg
ret
mov
je
mov
cmp
icebp
push
sub
jge
push
cmp
mov
popa
ret
fs
jae
loopne
adc
pop
fwait
neg
fbstp
mov
addl
cmp
gs
xor
sub
scas
pop
lcall
dec
shlb
imul
push
inc
stos
jl
pop
inc
int3
xor
idivl
push
xchg
fiadds
and
push
xor
push
out
cltd
sub
pop
shlb
dec
popf
cmp
and
and
and
notb
sar
dec
xchg
sub
sti
mov
mov
cmpsb
ret
add
mov
sub
icebp
jb
les
lock
mov
jnp
push
and
cmp
jmp
xchg
dec
mov
cmpsl
lea
sbb
xchg
fucomp
jl
test
lock
inc
cmc
enter
std
repnz
lea
outsb
sub
loope
lds
xor
adc
stc
push
push
xchg
inc
arpl
cmpsb
cmp
enter
adc
add
aam
push
mov
or
push
arpl
movsb
mov
popf
movsb
idiv
lods
mov
pop
loopne
push
cli
pushl
call
pop
pop
adc
push
stc
sbb
jge
fstpt
in
pop
xchg
lods
pop
dec
xor
call
lret
int3
int3
push
jbe
mov
inc
pop
pushf
test
das
fildll
xchg
jge
jne
into
add
cmp
xchg
mov
sbb
mov
and
fisubs
lods
or
xchg
divl
xchg
mov
loopne
call
push
mov
push
repz
mov
dec
out
call
mov
inc
dec
hlt
aad
stos
mov
xchg
les
int
jo
push
clc
out
leave
popa
cmp
fistpll
rcll
lret
sbb
xchg
std
and
jmp
xor
stos
andl
mov
orl
test
je
inc
dec
rcrl
xchg
popf
sbb
fnstsw
xor
and
sub
jecxz
push
rcrl
pop
mov
cmp
insl
mov
shr
fiaddl
or
adc
fists
test
pop
adc
sub
mov
mov
imul
ret
push
pop
scas
jbe
repnz
fyl2x
add
jge
das
movb
aas
sub
xor
cwtl
setge
out
dec
jb
fsubrs
cmp
or
arpl
sub
xchg
sbb
roll
lds
xor
testl
push
pop
mov
add
insl
sub
mov
add
sbb
sub
inc
bound
mov
xchg
ret
cmc
push
pop
fninit
lock
xchg
filds
fwait
ljmp
mov
popa
rcrb
cwtl
out
pop
sub
pop
pop
hlt
jp
pop
loope
xchg
scas
dec
push
dec
add
loopne
cmp
out
fwait
lahf
pop
fwait
mov
and
cmp
out
dec
mov
movsb
lcall
adc
negb
sbb
jns
mov
in
or
inc
mov
ret
dec
sbb
rcr
mov
or
pop
cs
es
dec
pushf
mov
jecxz
roll
add
enter
fidivl
mov
sub
bound
push
pushf
ret
inc
push
mov
call
icebp
push
pop
movsl
pop
outsl
lret
mov
mov
jp
mov
lret
mov
orb
cmpsb
lods
shlb
addl
pop
fisubl
jmp
and
xchg
push
mov
push
addb
lea
xchg
dec
fptan
popf
sub
stos
imul
cmc
mov
imulb
into
dec
xor
push
enter
cld
jno
push
xchg
push
mov
les
es
push
mov
xor
and
into
jne
adc
in
aas
pop
fsub
xchg
push
cli
pop
fiaddl
imul
cmpsb
test
cli
xchg
ss
pop
aaa
sub
pop
cmp
pop
andb
mov
lods
outsb
pop
adc
lret
in
pop
nop
scas
jbe
fwait
pop
sub
add
mov
int3
orl
add
aad
popf
xor
out
adc
ret
int3
jmp
cli
add
fnstenv
orl
xchg
add
sbb
mov
lahf
dec
jae
add
pop
js
loope
mov
dec
mov
pop
inc
xor
js
jecxz
pusha
inc
iret
ds
out
inc
dec
sub
sub
xor
jle
pop
icebp
mov
notl
cmp
push
jp
jle
idivl
loop
push
dec
xchg
push
xlat
push
mov
cwtl
in
orb
mov
pop
jp
jl
mov
gs
rolb
nop
jne
dec
or
cmpb
cwtl
and
adc
fcoms
adc
jbe
pop
ret
or
inc
mov
data16
cli
repz
std
in
mov
jno
mov
jmp
stos
loopne
pop
push
dec
mov
push
les
pop
aaa
adc
push
mov
insl
fstpt
xchg
xchg
in
jnp
and
das
mov
adc
test
adc
mov
jb
iret
inc
movsb
jmp
clc
jg
jnp
sub
testl
iret
sbb
sbb
mov
sti
jmp
xchg
loop
or
enter
sub
mov
gs
cld
std
mov
xorl
jne
push
scas
gs
dec
push
cmpsb
bound
pop
clc
cmpsl
mov
xchg
fdivrl
mov
cltd
std
cmp
push
push
sub
ljmp
sub
shrb
cltd
jmp
sahf
test
xor
outsb
scas
jbe
leave
mov
push
sbb
outsl
cwtl
pop
dec
mov
test
call
mov
call
dec
xchg
jbe
inc
pushl
ret
push
push
or
test
bts
leave
sti
add
cmpsl
jo
outsb
int
clc
lea
push
test
mov
repz
xchg
dec
xchg
cmc
xchg
adc
dec
popa
mov
jno
aad
stos
cs
lret
clc
leave
jg
xchg
jmp
aad
cwtl
mov
mov
adcb
adc
das
fimull
jno
sub
and
add
faddl
sub
fwait
push
jo
xlat
push
add
xchg
in
adc
cmc
sbb
lds
aaa
ds
or
inc
test
push
daa
push
jbe
dec
xlat
mov
repnz
je
bound
inc
push
inc
test
bound
dec
xor
sbbl
and
or
iret
lahf
xchg
pop
mov
inc
lods
aad
in
fwait
lock
iret
test
xlat
xor
popa
pop
stc
mov
btc
or
flds
mov
sti
aad
or
sbb
leave
aad
clc
mov
imulb
enter
mov
jno
xchg
lds
rcrl
cwtl
jnp
mov
cmp
mov
das
and
jae
adc
adc
jmp
push
int3
cld
js
and
dec
test
pop
bound
mov
push
mov
addr16
adc
jb
pop
mov
mov
jge
or
mov
jb
je
int3
xor
jo
dec
imul
jne
in
iret
cli
adc
sbb
daa
xchg
sub
adc
add
je
arpl
cmpsl
push
pop
sbb
xchg
lcall
inc
repz
insb
movsb
sbb
inc
daa
pop
jl
mov
neg
arpl
and
sar
in
push
xchg
push
stos
lahf
inc
sub
fisttps
divl
cltd
sti
ds
inc
xor
aad
push
adc
pop
fmulp
mov
xchg
xor
mov
mov
pop
ljmp
xor
sbb
aas
cmpsb
dec
shll
push
cld
xor
pop
andb
shll
add
popa
xlat
jl
clc
add
and
push
incb
jmp
js
sub
pop
or
xchg
push
sbb
aad
push
idivb
fbld
fistl
movsb
mov
sahf
xchg
mov
xor
pusha
into
lods
movsl
scas
cmp
mov
aas
cld
pushf
jle
mov
push
lret
loopne
movsl
adc
ret
aam
mov
xor
arpl
notw
mov
inc
stos
hlt
fsubs
es
push
jno
jbe
xchg
push
mov
inc
dec
adc
jbe
push
out
mov
xchg
xor
cmp
jecxz
inc
xchg
inc
or
inc
cs
inc
push
or
insl
mov
mov
mov
out
mov
out
popf
sub
out
es
in
dec
rdtsc
xchg
sub
clc
shrl
pusha
lods
iret
iret
scas
mov
sarl
or
popf
ss
fidivs
hlt
int3
adc
movsb
jp
sahf
out
sbb
daa
add
adc
sub
push
xchg
fidivs
negl
xlat
mov
dec
movsl
clc
or
pop
out
mov
mov
xchg
lret
insl
adc
enter
pop
mov
aas
test
sti
adc
adc
or
fldl
and
inc
aam
loopne
push
aad
int3
mov
mov
mov
insl
stc
incl
mov
jl
in
mov
dec
cmp
dec
push
scas
lods
adc
pop
xor
dec
clc
dec
or
jmp
xor
fadd
xchg
adcl
mov
jnp
push
xor
faddl
jno
xchg
enter
fldl
in
shlb
dec
add
inc
and
cmpsl
repnz
pop
mov
cld
cli
sti
add
dec
dec
ljmp
xchg
and
inc
movsl
and
repz
sub
pushf
cmp
bound
mov
pushf
push
out
xlat
xchg
or
jge
sub
jae
cmp
inc
pop
insl
or
cli
mov
dec
xor
leave
xor
stos
mov
inc
into
insb
jmp
add
insb
jl
cmp
add
mov
testb
sbb
and
or
mov
xor
jb
mov
add
loope
pop
sar
pushf
shll
stc
push
ds
adc
setb
or
aam
loopne
lahf
inc
push
jmp
shll
adc
ljmp
push
aam
fldenv
loopne
fucom
mov
ds
repz
sar
adc
or
mov
mul
sti
sahf
mov
out
rdpmc
add
nop
nop
jno
hlt
sbb
imul
inc
iret
pop
pop
jmp
test
test
mov
test
inc
cmp
mov
mov
cmc
pop
mov
hlt
and
pop
aam
mov
pop
mov
into
adc
jo
imul
jecxz
inc
stos
add
cmpsb
mov
es
aas
popa
ret
mov
movl
pusha
sub
lret
adc
arpl
sbb
xchg
push
mov
cltd
rorb
xchg
addr16
aad
fucomip
push
jo
call
jl
in
in
cmc
inc
xor
inc
cmp
iret
outsl
test
inc
xor
test
and
out
das
mov
cmp
jae
mov
cmp
lods
mov
mov
test
fs
and
adc
inc
clc
pushf
cmp
pop
nop
push
or
roll
mov
add
jmp
sbb
shrb
loopne
ds
add
subl
add
hlt
fisttpl
mov
or
daa
jae
inc
in
fwait
jle
inc
adc
mov
mov
xor
lock
lahf
loopne
mov
test
xlat
pop
mov
pop
cmpsl
rorl
pusha
push
std
mov
sbb
addr16
or
dec
negl
roll
sbb
test
mov
ds
mov
scas
cltd
clc
sub
sub
test
insb
ret
xchg
jo
xchg
pop
sub
xorb
adc
out
mov
filds
lods
xchg
adc
int3
push
scas
les
mov
out
mov
out
int
sub
jmp
push
inc
mov
icebp
cmpsb
pop
je
cmp
add
fwait
xor
shlb
or
xchg
cltd
jnp
in
inc
pop
mov
fadds
jbe
xchg
aam
sarb
or
pop
cld
xlat
mov
int3
dec
mov
nop
je
mov
jg
out
cltd
in
jne
test
mov
adc
addr16
testb
cmpl
data16
imul
clc
dec
pop
fistpl
mov
mov
ret
sub
sti
xor
xchg
cmc
and
jg
push
or
mov
outsl
imul
xchg
ret
xor
loopne
pop
or
mov
and
insb
sub
inc
jecxz
data16
ljmp
push
add
xor
aam
iret
dec
loopne
leave
jno
out
sbb
insb
arpl
test
stc
test
mov
pop
and
int
pop
xchg
sbbb
aam
repnz
dec
insl
roll
int
adc
cli
cs
mov
jbe
pusha
movsb
mov
shll
ret
sbb
or
jnp
mov
cmp
add
stos
sti
cltd
lods
cmp
sub
lods
adcl
or
add
and
add
in
icebp
mov
sub
cmp
sub
cltd
dec
sub
or
int
dec
inc
xchg
or
jmp
loopne
and
xchg
clc
ss
aas
dec
cwtl
jl
xor
aam
inc
pop
push
sahf
sti
and
mov
icebp
inc
stc
push
fisttpl
das
push
movsb
ss
cmpsl
iret
pop
sub
or
insl
jle
mov
inc
mov
jnp
popa
cmp
dec
rcll
mov
in
dec
push
push
leave
jl
int
hlt
adc
pop
pushl
ss
leave
push
mov
pushf
std
pop
hlt
int3
xchg
or
mov
rcrb
les
push
out
clc
mov
lds
push
mov
inc
enter
fdivr
sti
insb
pop
nop
out
jb
inc
add
scas
negl
fs
scas
pop
sti
rol
add
cmpsb
subb
scas
pop
hlt
arpl
loop
inc
xor
out
jne
jge
mov
cmp
cmpsl
fisubrs
orb
pop
adc
xchg
cmp
xlat
or
sbb
cs
ficompl
ds
jle
pushf
dec
jmp
gs
sahf
mov
mov
ss
cli
mov
addr16
loop
cmp
fdivl
test
outsl
add
push
or
aas
adc
cld
shl
and
ret
jecxz
jecxz
sub
call
inc
mov
push
je
out
loope
adc
aam
add
xchg
mov
sahf
sahf
fdivrl
pop
inc
repnz
lcall
aas
mov
aaa
stos
dec
jg
ret
subb
push
sub
add
dec
dec
jne
int
lods
lods
loop
scas
in
xchg
xchg
adc
lahf
mov
sahf
adc
inc
insl
dec
jbe
mov
xor
popa
cmc
dec
jae
add
test
sub
popf
xorl
repz
pop
push
lods
push
jp
mov
pop
mov
lcall
es
pop
mov
adc
mov
jecxz
xchg
stc
sahf
lea
jb
movsl
adc
jl
sbb
movsb
scas
sbb
pop
movsb
push
stos
adcb
mov
inc
xorl
or
lods
cwtl
sbb
push
push
add
push
cmc
sbb
sub
leave
xchg
and
cmp
mov
mov
test
push
jae
cmc
adc
and
xchg
mov
ficoms
mov
pushf
aam
cli
pop
data16
sahf
pop
in
mov
mov
lcall
lods
adc
dec
scas
jl
push
filds
iret
fimuls
jg
bound
mov
test
repnz
dec
movb
add
mov
rcr
sub
mov
jne
sbb
mov
rcl
mov
inc
cmp
jb
nop
test
jns
inc
xchg
lds
into
cwtl
sbb
imul
addr16
or
pop
dec
inc
lret
call
cwtl
cmpsl
popf
push
dec
push
loopne
lahf
xchg
jge
push
lds
xor
push
jmp
push
test
jp
mov
sub
sub
mov
je
ss
jle
or
int3
lods
mov
sub
and
outsl
into
ljmp
fsub
sbb
mov
arpl
xchg
inc
repz
fstps
loop
cmp
enter
das
push
adc
cmpsb
mov
inc
push
test
jle
in
inc
cmp
mov
in
pop
add
jmp
dec
or
jmp
fnstenv
mov
fsubs
mov
std
cmpsl
inc
xchg
or
jbe
xorb
fwait
jne
mov
mov
mov
test
int3
sub
popf
addl
mov
outsl
mov
subl
shrl
shlb
ljmp
int3
jecxz
mov
ss
mov
pop
fnstsw
ret
push
test
mov
sub
pop
sub
dec
push
shll
pusha
add
add
mov
repnz
and
aaa
xor
popf
and
cli
sbb
push
inc
and
jp
sbb
mov
sub
dec
inc
mov
in
arpl
add
and
xor
std
outsl
fwait
jns
sysret
ljmp
cli
push
notb
fists
outsl
cmp
lea
inc
nop
aas
sub
and
ljmp
pop
push
imul
mov
dec
jg
mov
push
and
ss
test
sbb
mov
mov
push
xor
movsb
hlt
mov
mov
dec
stos
inc
adc
cmp
scas
mov
dec
jne
xchg
sbbb
adc
lret
cmp
fldcw
aaa
lds
sbb
fldt
cmp
inc
push
cmp
pop
and
inc
ljmp
es
push
stos
aaa
or
add
aas
mov
xor
in
push
es
pop
aaa
push
sahf
sbb
aam
xchg
test
xchg
mov
inc
es
inc
shll
sub
mov
mov
pop
int
shll
adc
fidivl
ljmp
fsub
out
xchg
es
jbe
fwait
addr16
int3
xchg
push
fisttpll
cld
mov
in
mov
adc
jnp
icebp
mov
mov
dec
dec
mov
dec
int3
add
fcmovb
xor
mov
mov
roll
testl
outsb
subl
cmc
xchg
mov
lock
jmp
mov
and
sub
stc
or
fisttps
loop
pop
mov
mov
lock
add
das
xchg
fldcw
mov
and
push
idivl
icebp
cmp
imul
jae
data16
xchg
adc
gs
sbb
xchg
inc
sbb
mov
xchg
sbb
mov
mov
pushf
and
mov
ljmp
and
mov
subb
fdivs
jl
movsl
in
adc
push
div
sbb
dec
push
inc
xor
push
add
stos
lods
add
ja
inc
jle
cld
cld
mov
dec
mov
in
inc
int3
dec
adc
sub
fmuls
xchg
shlb
mov
pop
test
out
pop
mov
push
mov
jne
mov
pop
ror
pminub
out
and
mov
movhlps
inc
divl
cmp
shl
xchg
rclb
test
outsl
sti
jl
jle
xor
fdiv
sub
les
mov
sub
ds
ret
sbb
les
mov
shl
loop
inc
adc
sbb
js
sbb
sbb
push
test
imul
mov
out
inc
imul
into
mov
sub
jb
ret
popl
inc
imul
sbb
add
lret
pop
inc
xchg
pop
stos
incb
test
loopne
gs
outsl
xchg
mov
jo
cwtl
icebp
inc
cltd
push
daa
in
xchg
shrl
push
sbb
mov
aaa
or
and
loope
scas
test
shll
sbb
leave
cmp
rorb
mov
adc
lds
dec
xor
jecxz
dec
sbb
or
jl
loope
dec
mov
push
sti
mov
mov
xor
popa
cmpl
lods
cmpsl
rorl
nop
outsl
sbb
jne
or
or
jns
mov
clc
cmp
imul
xor
add
test
mov
dec
add
movsl
cmc
jg
and
movsl
hlt
adc
jmp
das
roll
fs
shl
jae
mov
add
shlb
pushf
xor
xor
aaa
xchg
jecxz
push
sahf
gs
sub
stos
lret
imul
or
pop
sbb
repnz
sbb
ss
xor
add
test
int3
movsl
pushf
dec
mov
lods
mov
js
and
sub
loopne
stos
fwait
push
pop
and
sti
mov
jle
dec
xchg
je
and
shrl
cmp
popf
mov
pop
in
sub
movsb
std
shl
push
sub
ret
xchg
das
rcrl
cld
aaa
loop
jl
jne
adc
js
out
add
jb
in
popa
xor
pop
and
repnz
fsubrp
fcmovne
xor
sub
xchg
push
pusha
movsb
mov
mov
mov
dec
aas
push
sbbl
xchg
cmp
dec
push
adc
inc
or
pop
and
pop
mull
dec
or
jp
push
push
push
aaa
in
jbe
push
xor
pusha
call
jg
pop
fnstcw
xchg
or
or
and
xor
or
cmp
sbb
outsb
outsb
addb
adc
sbb
push
loopne
aaa
jbe
mov
mov
aam
mov
add
or
xchg
cmp
inc
xor
add
adc
adc
mov
mov
cmp
mov
mov
ja,pt
lret
sbb
clc
fs
dec
int3
outsl
out
pop
lret
rclb
test
stos
cmc
jecxz
call
shlb
imul
subb
call
push
fwait
pop
pusha
xor
add
mov
fucom
gs
xor
call
jecxz
cmp
cmp
mov
hlt
mov
sbb
mov
push
xorl
fistpll
leave
and
addb
scas
inc
insl
jns
in
jne
clc
insl
cwtl
je
xchg
lahf
pusha
mov
xor
iret
sarb
data16
xchg
mov
jnp
aaa
out
inc
inc
adc
lock
mov
in
shrl
mov
out
cs
ret
cmp
mov
je
ret
lods
jge
imul
and
pop
pop
cmp
pop
pusha
push
gs
cmp
sbb
stos
fwait
jmp
outsb
int3
in
jbe
cmp
in
test
insl
andl
jl
pusha
stos
stos
mov
ja
pop
es
insb
inc
imul
pop
mov
into
movsb
sbb
pushf
dec
jo
icebp
gs
lods
cmp
pop
stos
fcompl
mov
jb
mov
adc
sahf
push
fcompp
mov
and
add
test
cmpsb
sbb
jecxz
jnp
add
adc
jns
clc
and
and
ret
push
cmpl
mov
push
mov
imul
xor
jp
pop
stos
xchg
sbb
je
aas
test
mov
xor
hlt
call
inc
and
cmp
mov
daa
in
lock
pushf
filds
cmp
popf
insl
imul
mov
pop
maxps
pop
sub
cwtl
xor
in
push
repnz
addr16
xor
xchg
push
stc
push
stos
jge
iret
xchg
xlat
pop
add
pop
adc
aam
push
into
add
lods
cmp
dec
push
mov
cmpl
in
and
outsl
push
aam
popa
jno
xor
ss
in
xchg
inc
scas
movsb
fsubs
les
adc
jnp
add
add
sarb
or
mov
sbb
je
movups
xor
loopne
aaa
insl
je
loopne
fwait
sub
inc
cs
dec
xchg
pusha
mov
nop
adcb
xor
lret
xchg
push
jmp
cmpsl
pushf
xchg
ljmp
shlb
scas
movsb
push
lods
jmp
push
xor
jb
sub
sbb
adc
pop
das
int
jb
mov
sbb
fisubs
out
pop
dec
lahf
sbb
inc
sub
push
xchg
das
pop
add
cltd
push
push
iret
dec
mov
add
mov
push
cmp
lahf
adc
scas
mov
or
mov
int
mov
stc
add
add
aam
jge
sub
xchg
arpl
scas
mov
and
jg
cmp
push
xchg
dec
outsl
cmp
fcmovbe
rcrb
mov
addr16
shll
sbbl
cmpl
sub
xchg
cmpsl
adc
pop
out
dec
int
and
fidivrl
xor
push
icebp
pop
stos
inc
arpl
jl
and
gs
gs
mov
jno
xchg
xor
cmp
clc
and
iret
in
pop
xor
mov
mov
out
mov
add
lock
push
jmp
or
js
xor
pop
mov
xor
push
movsb
xchg
cmc
mov
mov
jns
imul
imul
notl
push
and
push
stc
jecxz
out
cwtl
and
inc
cmp
jae
pop
inc
int
stc
fdivrl
mov
repz
jl
adc
add
pop
pusha
xchg
push
fcmovnu
out
mov
mov
pushf
test
in
icebp
cmpsl
xor
ja
xor
or
lods
scas
xchg
mov
lods
mov
scas
jge
mov
jno
jl
jle
aam
cld
jb
mov
mov
or
js
loop
orl
inc
add
sub
jb
shrl
add
mov
mov
jnp
and
test
dec
cltd
daa
dec
cmp
and
fld
test
mov
test
pop
lea
jecxz
icebp
insb
cs
pop
xor
in
xchg
jno
div
xchg
sbb
pusha
fldenv
jae
xor
into
mov
jl
rorb
sbb
push
mov
push
xor
addr16
dec
or
ss
mov
cmpsl
or
jnp
mov
mov
mov
sbb
xor
shl
dec
and
cmpsl
push
aaa
dec
loop
mov
cmpsl
lret
stc
inc
mov
cmp
jecxz
xorb
inc
adc
pop
add
pop
lea
jp
cmp
or
sbb
dec
pop
lcall
mov
push
mov
mov
xor
js
mov
aam
push
fisttpll
jl
fdivl
push
mov
adc
rcl
adc
clc
gs
or
inc
shlb
bound
jbe
repnz
cmp
enter
insl
or
add
mov
pop
mov
fldt
xchg
xchg
add
push
lret
inc
lcall
je
jmp
push
in
cmp
sbb
pusha
and
xor
xchg
add
pop
scas
add
fucomp
add
xor
cld
outsb
cmp
xor
jmp
sbb
jne
scas
jne,pn
aam
xchg
mov
mov
dec
aam
divb
movsb
lret
cmc
jle
pop
sahf
in
and
addl
mov
sub
cmpl
rcll
test
pop
out
mov
mov
shlb
dec
sbb
movsl
sbbl
or
cmp
dec
push
and
mov
sbb
xor
sub
aas
inc
stc
xor
sbb
mov
sahf
or
pop
push
dec
dec
jmp
mov
mov
jge,pn
lret
ljmp
aaa
pushf
rolb
mov
pusha
mov
jl
test
mov
les
clc
or
std
mov
arpl
adc
mov
mov
push
ds
das
xchg
addl
add
in
pop
sbb
into
imul
or
scas
lock
xchg
scas
jecxz
mov
cld
xor
mov
scas
ror
shl
std
ja
jb
jae
xor
add
push
loope
xchg
jl
sti
lock
jns
repz
push
pop
imul
pop
inc
out
mov
dec
icebp
loop
mov
jg
inc
ja
xchg
std
fs
xor
mov
jmp
mov
ljmp
xchg
insb
aas
dec
add
and
fsubp
jg
mulb
mov
ret
mov
dec
movl
mov
inc
clc
cmc
sub
jge
jnp
and
js
xchg
jne
mov
jbe
add
aas
je
mull
jnp
push
nop
stos
or
lcall
imul
loope
or
sub
xchg
cmc
das
pop
lods
insb
push
and
stos
mov
hlt
pop
das
jnp
adcb
pop
fwait
sbbb
jp
lret
jb
cmp
je
and
jns
dec
jecxz
pushf
popa
leave
push
pop
cmp
bound
mov
mov
sbb
test
xchg
add
mov
hlt
cltd
sbb
movsb
lret
pop
dec
or
jge
adc
dec
jg
jno
jl
mov
lret
mov
pop
inc
push
jno,pt
add
jecxz
xchg
mov
jbe
cmp
lret
shll
outsl
test
mov
jecxz
jo
jne
in
mov
andl
stc
mov
push
and
jae
inc
inc
mov
push
cmp
in
mov
pusha
dec
or
push
repz
es
repnz
loopne
sbb
jnp
jg
in
xchg
mov
and
xor
out
mov
rol
jecxz
xlat
add
lods
pop
cmp
gs
add
dec
push
xchg
loop
fsubs
stc
xor
cmp
mov
lods
fisubrs
flds
pop
aas
add
inc
dec
push
mov
mov
pop
lea
xchg
jmp
add
imul
frstor
adc
lcall
sti
arpl
test
mov
mov
mulb
nop
fucomp
scas
in
push
iret
mov
roll
scas
sbb
sub
mov
sub
or
test
stos
pop
jge
mov
fmull
mov
rol
popa
cmp
sbb
jp
inc
roll
nop
push
add
out
xor
xor
sar
mov
stc
mov
movsb
jmp
add
gs
addr16
hlt
nop
mov
fcos
xorl
cs
cmpsb
shll
mov
lods
shlb
cli
sbb
dec
dec
pop
add
test
setbe
sbb
sub
push
inc
ret
stos
cmc
inc
jns
mov
ret
int3
daa
add
sbb
jne
sub
cmc
adc
cld
xor
xlat
sub
inc
push
test
adc
mov
scas
cmpsb
data16
dec
mov
xchg
mov
pop
lods
out
pop
inc
roll
mov
adc
sbb
sbb
fstpl
add
pusha
out
dec
jmp
ss
jp
jge
bound
out
cmpsl
inc
stc
cmc
repnz
mov
cmp
int3
dec
xor
lret
repnz
inc
and
mov
jge
jle
mov
push
dec
ja
sub
out
loop
xor
or
jb
or
jmp
mov
lret
xor
dec
aad
cmp
addr16
pop
rorb
imul
inc
insl
xor
mov
push
push
scas
sub
mov
andb
jge
push
mov
clc
jne
mov
jb
cmp
cli
xor
dec
psubsw
xchg
pop
imul
dec
push
add
inc
aam
std
pop
fmull
scas
jp
rorb
push
mov
xchg
mov
xor
dec
cmp
xor
mov
rcr
pop
jmp
push
out
and
leave
cmpsl
fisubs
imul
dec
cmp
xchg
push
popa
scas
mov
adc
and
test
dec
cmp
dec
xor
imul
jno
out
add
mov
mov
cli
or
ret
movsl
add
icebp
jmp
mov
imul
lahf
push
jno
cld
test
sub
aad
xorl
nop
sub
fdivl
scas
xchg
enter
fimuls
scas
je
mov
jns
push
popf
pop
arpl
mov
outsl
out
cmpl
test
xchg
inc
sub
jno
cmpsl
jne
pop
lea
xchg
lods
mov
int
mov
icebp
or
repnz
xchg
fidivs
xlat
pop
pop
je
xchg
inc
pop
enter
push
sub
sub
xor
sti
mov
jecxz
mov
repnz
jmp
or
arpl
push
lret
insl
pop
xor
ret
pusha
ficoml
call
aaa
mov
iret
jbe
push
add
mov
xlat
gs
flds
ja
xchg
ljmp
mov
and
mov
push
adc
cmp
sbb
mov
imul
scas
imul
repnz
data16
and
pop
push
sarb
jo
jg
or
pop
pop
jo
push
cs
lea
or
aas
cltd
mov
cs
sti
or
aaa
pop
jae
cmp
call
repz
lret
and
aad
roll
es
mov
cld
mov
fidivl
push
jg
inc
push
rclb
ss
inc
mov
movsl
ss
pushf
mov
xor
loopne
mov
and
ljmp
out
nop
xchg
int
push
mov
mov
jp
mov
add
sysexit
popa
nop
adc
push
loop
sbb
sbb
xor
push
fidivs
out
push
in
xchg
leave
leave
test
and
leave
ss
push
les
fstpt
jo
decl
faddl
cmp
add
sub
btc
in
push
scas
aas
xor
stos
jmp
adc
jp
xor
lret
leave
cmp
and
xchg
xchg
inc
popa
mov
adc
jle
pop
dec
rcll
ret
sbbl
es
and
dec
inc
jecxz
push
repz
mov
jge
mov
enter
stc
mov
push
sub
pop
push
test
add
mov
xor
movsl
pop
call
js
aad
jb
shr
iret
pop
sbb
adc
dec
jns
dec
cltd
sti
es
or
movsb
jle
or
in
jmp
out
inc
dec
fistpl
icebp
loopne
jmp
jne
and
pop
sbb
std
adc
jne
mov
or
xlat
mov
push
cwtl
dec
mov
or
pop
adc
repnz
cltd
fcmovu
js
int3
enter
adc
orl
mov
mov
cltd
or
inc
xor
adc
insl
adc
divl
repnz
sbb
int
mov
aam
dec
mov
sahf
xor
in
mov
jno
cmp
outsl
stos
cltd
cld
mov
mov
jne
cmc
inc
gs
mov
inc
pop
lods
stos
daa
cmpsb
int
scas
lock
mov
repz
scas
inc
jge
cmp
pop
jg
push
pop
stos
sbb
jle
sub
std
jno
fsubl
out
jle
aaa
add
push
adc
pushl
lea
out
cmp
adc
rcrb
ret
shrl
pop
sbb
and
insb
fwait
iret
and
and
and
loope
xchg
mov
push
mov
cmp
mov
ret
aad
roll
inc
lods
loop
pusha
sub
mov
shl
jle
shrl
enter
repnz
or
cmp
jmp
fcompl
xchg
mov
pop
jmp
cmp
and
pusha
mov
in
mov
dec
sub
inc
filds
xor
inc
test
cld
repz
cs
ret
pusha
popf
mov
cmp
scas
loopne
lret
gs
and
or
xchg
shr
sti
lret
lret
add
mov
push
push
inc
xor
pop
cli
out
jo
pusha
jnp
mov
lea
sti
stc
adc
mov
nop
cs
or
xchg
pop
inc
bound
lods
clc
add
cmc
in
push
mov
insb
test
in
mov
mov
loopne
jp
inc
dec
cmpsl
sbb
adc
rclb
mov
mov
jne
pmullw
iret
aas
scas
sbb
test
push
mov
aad
jno
add
data16
call
lret
clc
notl
out
and
mov
xchg
sub
fdivrl
or
or
mov
stc
aam
popa
jo
sbb
dec
jmp
push
add
mov
movsb
lahf
mov
push
pop
fstpl
test
inc
sti
cmpsb
and
push
mov
jno
dec
sbb
push
or
jae
std
lock
lret
mov
pop
push
inc
xor
add
mov
addr16
je
ljmp
mov
cli
push
mov
sub
jmp
inc
mov
lods
xchg
fistl
xor
pop
popf
dec
cld
pop
push
lcall
insl
and
imul
fwait
adc
inc
ror
push
push
jb
mull
push
call
sub
dec
xor
fcmovnbe
mov
jbe
insl
sub
push
into
repz
cld
mov
loope
int
push
adcb
in
ficompl
cltd
inc
ss
xchg
imul
jge
mov
inc
xchg
jne
add
add
mov
and
andb
movsb
cli
das
in
stos
adc
cli
repz
rcl
repnz
mov
mov
or
push
icebp
xorb
andnps
bound
adc
and
scas
es
call
xchg
dec
add
jmp
pop
dec
add
and
pushf
jmp
ficoms
jb
ss
lcall
jecxz
mov
dec
adc
push
pushf
rorl
jnp
ss
pop
jo
into
cmp
sub
jbe
out
aas
inc
cmp
push
push
stos
xchg
popa
lea
cmp
adc
pop
sbb
sbb
sbb
mov
popa
repnz
scas
pushf
movl
dec
push
out
sbb
push
stc
mov
xchg
stos
pop
test
cmpsl
ficomps
ljmp
mov
or
int3
insb
ror
and
fmull
sub
iret
mov
subl
mov
adc
clc
fbld
sbb
pop
sarl
pusha
xor
and
cmp
sbb
sbb
lahf
aad
sbb
jae
push
repz
xchg
adc
mov
pusha
cs
sub
sbb
imul
cmp
dec
mov
test
dec
mov
mov
jl
cmpsl
rorb
add
add
pop
imul
jp
fdivrs
push
orb
mov
add
int3
jge
adc
test
in
jns
icebp
in
dec
jo
pcmpgtb
pop
gs
pop
mov
leave
sub
or
mov
fsubl
mov
adc
fistpl
daa
ja
repz
aaa
out
xor
add
aas
test
push
lock
into
lcall
mov
adc
push
mov
or
test
mov
mov
mov
dec
aas
fisubrl
lcall
lock
pop
pop
std
or
xor
cltd
lahf
call
sub
xorb
idivl
bound
inc
test
int3
nop
cld
fisttpll
mov
mov
cmp
pop
xor
lods
jb
cli
mov
push
jp
dec
and
xchg
xor
adc
in
mov
cmc
fstl
inc
dec
pop
cmp
dec
or
pop
xchg
adc
cli
mov
fistps
shlb
and
sbb
mov
ficomps
push
inc
aas
push
ror
jmp
xor
dec
adc
insb
scas
xor
dec
aas
pop
sbb
push
ret
cli
shll
fnsaves
movsb
push
in
inc
pop
loopnew
into
push
ds
repz
jmp
and
jo
out
out
mov
sbb
push
lock
jae
test
sbb
mov
pextrw
cmp
pushl
aam
inc
jb
cmpl
adc
enter
mov
ss
incl
roll
gs
mov
dec
outsb
daa
mov
pop
sti
lock
add
xchg
fisttpll
jle
cwtl
sar
sarl
test
loopne
pop
ret
shll
inc
xor
sbb
mov
cmpsl
sahf
and
pop
xchg
dec
fdivrl
ja
and
sbb
dec
mov
jle
and
push
hlt
daa
sbb
push
cli
lods
jl
pop
aad
loop
popf
cmpsb
aaa
jb
insb
ret
out
sbb
push
movsb
ret
sub
je
xor
sarb
adc
fs
mov
sbb
inc
mov
outsb
sahf
arpl
ret
mov
ljmp
cli
ficomps
or
xor
push
faddl
mov
movsb
or
in
mov
mov
inc
inc
imul
fbstp
push
icebp
jl
mov
fisubl
mov
pop
jne
daa
adc
std
dec
call
push
push
nop
xchg
stos
jnp
sti
das
in
insb
enter
hlt
fistl
jne
shlb
call
sub
sti
iret
das
pusha
stos
xchg
push
or
push
test
inc
xlat
bnd
in
xchg
mov
pop
sbb
stos
into
aad
leave
inc
jmp
adc
adc
fwait
dec
jae
pop
dec
inc
in
mov
shll
inc
mov
mov
fs
adcb
test
inc
push
xor
dec
xchg
fildl
scas
inc
aas
lods
out
push
insl
mov
xchg
aas
es
loop
xchg
push
and
sub
and
lds
mov
int
xchg
in
imul
in
cwtl
push
sti
push
pop
xor
dec
stc
stos
push
dec
push
int
bound
add
int
cli
out
ljmp
ret
pop
bound
mov
sub
mov
ljmp
push
shr
icebp
mov
divl
jp
pop
jo
dec
shrl
jmp
ss
inc
test
addr16
fbstp
xlat
test
js
sub
sub
xchg
rclb
and
adc
push
push
dec
push
aad
add
cmc
jns
jno
xchg
call
jle
and
std
sahf
inc
mov
scas
push
lock
add
inc
sbb
bound
or
fstl
push
adc
adc
imul
push
repnz
mov
fs
mov
scas
sub
sub
insb
aad
sub
in
pop
out
pop
lea
xor
pop
lock
or
mov
add
movsb
push
scas
add
mov
mov
mov
imul
sbb
xor
out
dec
fldt
das
in
je
iret
ss
push
int3
out
xor
int
adcl
mov
imul
cmp
sub
repz
cld
mov
sub
pop
lods
sub
cmpsl
movl
call
and
push
iret
adc
enter
mov
sbb
jae
sub
popa
cmp
cli
cmp
push
or
xchg
int3
inc
push
into
mov
test
inc
dec
ret
and
dec
cmp
andb
mov
jne
das
inc
movsl
jmp
js
sbb
and
or
pushf
adc
test
in
cs
mov
fcmovnu
mov
ja
mov
xchg
outsl
fdiv
lret
call
xchg
push
leave
dec
mov
cmpl
ljmp
dec
cwtl
or
and
movsb
aam
out
rcll
ret
mov
stos
adc
and
add
mov
jns
out
cld
je
gs
dec
lock
mov
mov
and
addr16
mov
adc
dec
and
push
xchg
loop
mov
lock
sub
out
lcall
xor
mov
mov
cmp
mov
jecxz
repz
data16
push
pop
dec
and
sub
dec
xchg
jne
je
push
and
push
mov
bound
dec
cmp
inc
pop
enter
stos
inc
cld
je
je
mov
fistpl
nop
add
sbb
pop
gs
stos
sub
and
aas
sti
in
sbb
jg
test
push
ss
test
pop
and
add
fs
jmp
dec
mov
jbe
mov
sub
mov
mov
dec
stos
pop
xor
jne
rcr
xchg
jbe
mov
or
iret
notl
mov
inc
add
dec
cs
aam
add
adc
push
push
leave
mov
mov
in
movsb
xchg
sahf
std
mov
mov
lock
pop
test
ret
rol
xchg
fidivl
mov
rcl
mov
pop
push
cltd
aaa
lret
adc
xchg
imul
sub
mov
aas
dec
lea
mov
push
push
sub
push
add
scas
movsb
mov
test
ja
xchg
jbe
xchg
push
dec
or
push
adc
cmp
cmp
cmp
and
xor
fisttpl
lock
ja
cmp
mov
adc
adc
rcl
ljmp
sarb
fdivrl
mov
and
and
rcll
sub
pop
out
mov
xchg
pop
push
add
fucomip
jno
and
sbb
mov
test
pmaxsw
lods
cmp
add
dec
cmpsl
xchg
xor
jne
out
push
jmp
push
cmp
fsubl
jle
sbb
nop
rep
sarb
les
mov
les
repnz
loopne
pop
lret
and
xchg
clc
push
push
xchg
mov
mov
mov
jae
into
and
pop
xlat
cltd
sub
lret
outsb
mov
sub
jge
outsb
into
xchg
or
pop
lods
xchg
in
and
lods
or
pop
fdivr
in
lods
sub
mov
fisubrs
xor
jae
enter
dec
scas
out
imul
stc
mov
nop
in
fcompl
imul
icebp
and
adc
sbb
mov
hlt
les
daa
jmp
adc
sbb
mov
pushf
std
adc
incb
scas
mov
push
mov
cs
mov
push
in
pop
pushf
mov
jl
cmp
andl
jmp
rol
sub
enter
sub
jmp
pop
dec
popa
pushf
pop
sbb
and
push
push
je
cs
or
sbbl
cld
leave
imul
and
fbstp
movsl
enter
std
test
push
out
outsl
mov
cmpsb
or
cld
dec
jmp
mov
adc
xchg
add
sub
out
mov
mov
fs
push
push
mov
imul
aas
sbb
cs
in
hlt
cmp
lods
inc
jmp
sub
add
cli
rcll
ficompl
push
sahf
js
xchg
lahf
push
push
dec
ja
lahf
mulb
pop
adcb
out
hlt
push
mov
addb
shrl
aam
add
cld
dec
mov
mov
sbb
fmul
sub
or
pushf
mov
sbb
add
and
cmp
bound
clc
cmp
push
aam
scas
movsl
insb
sub
loopne
call
cmp
das
pop
or
adc
movsl
scas
xchg
mov
mov
add
push
fs
mov
mov
lret
xchg
clc
fdivrs
test
push
test
or
fs
fmuls
out
lds
push
inc
dec
xor
mov
cmpsl
sub
mov
xor
dec
adc
push
pop
cli
jl
sub
loope
adc
or
scas
es
lods
and
xchg
rorl
adc
mov
pusha
cmp
xchg
hlt
clc
les
je
fwait
jmp
cmp
add
inc
cwtl
dec
and
add
mov
pop
pusha
xlat
insb
out
out
jl
adc
xchg
mov
insl
inc
and
inc
jmp
cmpsl
ja
mov
popf
jecxz
and
mov
pop
stc
out
pop
cwtl
pop
aam
mov
mov
cmpsl
xchg
std
sysexit
jle
fcoml
lds
cwtl
pop
stc
fwait
add
add
ds
icebp
dec
insl
inc
push
decl
fcomip
sbb
jmp
bound
xchg
jno
hlt
cwtl
or
ja
shlb
dec
adc
iret
shlb
mov
je
lret
jae
scas
adc
subl
mov
xchg
dec
cmp
fwait
push
xor
stc
xor
fisttps
adc
insb
lret
pop
pop
lods
mov
inc
pop
and
dec
ljmp
lret
or
dec
insl
lahf
adc
jb
inc
inc
push
mov
leave
add
add
push
inc
inc
dec
sbb
cmc
inc
stos
loopne
stos
push
jg
jl
sub
adcb
adc
mov
fidivs
fs
cmpsb
imul
mov
rorl
lea
les
dec
mov
inc
mulb
mov
dec
outsb
xchg
inc
out
or
test
into
mov
les
push
rclb
mov
xchg
push
push
mov
movl
ret
push
in
push
mov
jbe
mov
xor
outsb
mov
out
leave
rorb
adc
dec
sbb
ret
add
scas
xor
das
inc
movsl
mov
icebp
xorl
ljmp
adc
call
ss
test
in
out
test
mov
lods
jecxz
aaa
xorb
or
out
scas
scas
sub
sub
outsb
xchg
xchg
in
mov
mov
pop
shrl
and
inc
aam
rorl
dec
insb
jecxz
sub
ljmp
int3
lock
and
neg
push
cmp
in
in
loop
mov
pop
scas
jo
scas
std
cmp
sahf
push
or
sub
cmpsl
in
or
loop
xor
xchg
icebp
int
popa
xor
sbb
arpl
push
or
call
xor
jp
xchg
push
test
or
shlb
pusha
pushf
push
insl
xor
daa
xchg
or
push
adc
test
test
xor
sub
cmp
fldcw
inc
fstpl
jb
pop
cltd
add
xor
add
loopne
sub
or
cli
sbb
cmp
adc
push
test
push
pop
dec
push
lcall
mov
add
dec
cld
out
sbb
cmp
sbb
xchg
sbb
sahf
push
sti
daa
push
inc
fstpl
aaa
xchg
adc
push
adc
pop
push
aad
faddl
daa
filds
cmpsl
inc
loope
aaa
pop
movsb
popf
inc
sub
pop
call
lods
inc
shl
js
and
pusha
lret
push
jge
mov
sbb
dec
push
cmpsl
push
adc
les
js
inc
jbe
test
in
in
std
xor
popf
in
shlb
or
xchg
lahf
lcall
loope
push
aaa
push
jno
sub
adc
gs
mov
js
imul
test
js
lds
loopne
sti
cld
adc
sub
orb
or
mov
add
call
jbe
jmp
fsts
lret
xchg
pop
loopne
arpl
sbb
add
test
pop
push
outsb
stos
lock
or
or
xor
mov
popf
add
out
mov
adc
or
xchg
stos
insl
test
mov
imul
jmp
mov
scas
jb
pop
fwait
xor
xchg
cmp
sub
xchg
mov
repnz
cwtl
arpl
call
sti
mov
and
mov
imul
bnd
sbb
aas
mov
sub
adc
ret
mov
sub
lcall
pop
inc
sbb
pop
movsl
xchg
xor
mov
or
rorl
cmp
xchg
sbb
aas
addr16
mov
rcl
jbe
fsubrl
cmp
jg
sbb
inc
xor
imul
cmp
mov
push
sti
cmp
or
mov
out
lret
xor
xchg
xchg
scas
pop
pop
xor
hlt
pop
xchg
jb
cwtl
fadd
sub
in
xor
jle
pop
and
das
sub
aaa
dec
inc
push
and
in
std
out
les
cmp
add
mov
cmpsb
sub
pop
or
cmp
hlt
sbb
or
mov
dec
iret
add
movsb
subb
test
add
cs
lea
sub
push
in
aad
add
pop
or
push
xorb
rolb
and
jecxz
iret
ljmp
data16
xor
pop
mov
pop
inc
movsl
and
cmp
cld
sub
divl
mov
ss
jmp
dec
jnp
lods
insb
mov
jp
pop
mov
xchg
dec
leave
or
mov
push
andl
fldt
in
adc
xor
add
dec
fsubl
cwtl
xchg
or
loop
int3
call
enter
lods
mulb
lret
add
xor
dec
or
jl
sti
aas
rclb
or
xlat
aam
ficompl
inc
sar
inc
cmp
js
dec
sbb
in
add
xlat
mov
cwtl
and
dec
mov
inc
cmp
dec
aaa
cltd
mov
xor
xlat
or
insl
add
mov
dec
ret
and
add
stc
jae
ret
mov
mov
dec
mov
sbb
hlt
inc
int
adc
add
jp
jne
push
sbb
arpl
testb
xchg
xor
paddusb
sbb
xchg
lock
negb
jge
xor
out
cs
sub
push
pop
clc
pop
dec
ret
les
cmp
fs
jp
shr
arpl
and
das
pop
or
das
mov
lods
jo
mov
pop
arpl
repz
mov
cmp
rcrb
shlb
loop
gs
in
shrl
imull
hlt
xchg
and
jg
xchg
pop
call
out
sbb
xor
ss
inc
divb
mov
stos
mov
stos
mov
mov
mov
js
adc
stc
xchg
pop
loop
ljmp
push
repnz
and
outsl
add
inc
pop
push
jmp
pop
xor
int
pop
inc
jno
stos
adc
je
inc
ret
sbb
lock
loopne
adc
outsb
and
sub
sbb
gs
int3
lret
sub
push
insb
mov
out
clc
nop
xor
pushf
mov
push
jge
test
insl
sbb
adc
aas
sbb
mov
clc
hlt
addr16
or
sarl
test
sub
shlb
sub
scas
adc
cwtl
mov
out
adc
lcall
call
cli
test
fisubl
fcoml
cmp
and
popf
cltd
ljmp
or
lret
jg
cmp
je
push
mov
and
mov
andl
rcll
cmc
jp
addr16
gs
addr16
jg
and
sbb
mulb
nop
sub
outsl
mov
shl
imul
into
add
mov
in
cmpsb
push
test
pop
iret
push
mov
cmp
cmc
mov
ja
push
aaa
pop
outsb
pop
lret
outsb
mov
push
mov
fildl
insb
sub
mov
dec
xor
add
push
cs
aam
mov
hlt
aad
xor
mov
push
mov
aam
inc
xor
rcrl
icebp
adc
sarb
or
hlt
mov
pop
ret
les
mov
mov
dec
insb
jp
inc
and
pop
push
mov
repnz
das
jne
aas
cmp
xor
jne
icebp
and
out
mov
mov
stos
popf
rcll
adc
push
lock
lods
push
adc
popf
rolb
shrl
int
inc
bound
dec
in
and
sub
xchg
mov
jmp
psubb
enter
and
pop
xchg
dec
add
mov
jg
cltd
inc
fistpl
xlat
lret
xor
inc
mov
fnstenv
sub
lea
inc
movsb
pushf
bound
jno
pop
ret
mov
xchg
push
cli
lahf
bound
or
popf
cmp
and
shrd
addr16
popa
movsb
div
int
dec
mov
mov
xchg
push
movsb
shl
add
pushf
out
sahf
rolb
sub
sub
imul
inc
push
mov
mov
arpl
bnd
pop
pop
sbb
pop
ljmp
pop
std
xor
pop
ljmp
in
mov
sbb
or
incl
adc
je
fdivs
dec
les
std
inc
xchg
lret
jnp
inc
lock
jnp
mov
out
push
cli
sahf
push
sti
aam
lods
sub
dec
dec
push
adc
movsl
pop
into
loop
ret
mov
jl,pn
mov
sarb
xor
ljmp
mov
mov
jl
jns
cmpsb
mov
outsb
arpl
loop
and
sub
mov
fdivrs
sbb
inc
pusha
insb
in
and
inc
xchg
fwait
jmp
jecxz
insl
ljmp
lret
and
scas
popf
xor
outsb
cmp
sub
pop
adc
push
xor
sub
lods
test
mov
sub
xor
xchg
repnz
mov
mov
mov
or
mov
stos
pop
aad
mov
int3
sbb
mov
pop
mov
imul
lods
in
popf
shrl
lea
xchg
lods
fcmovb
xor
dec
cltd
sub
out
adc
pushf
les
pusha
shl
mov
xor
jo
cltd
xchg
pop
xor
mov
bound
mov
sti
dec
cmp
sub
add
push
inc
pop
sbb
fisubs
pop
fs
xor
loop
mov
outsb
sbb
mov
mov
test
sbb
loopne,pt
test
bound
jg
mov
pop
test
inc
inc
sub
sbb
push
fwait
rolb
fistps
add
jbe
sbb
inc
xor
test
in
cmpsl
fdivr
out
xchg
push
out
or
fdivrs
leave
and
ret
pop
stc
xchg
add
xchg
mov
pop
mov
sbb
scas
pusha
push
aam
shl
cmp
test
mov
jb
xor
in
inc
bound
sahf
cmp
inc
jb
sub
ja
add
mov
push
outsl
pop
jge
or
push
pusha
xchg
sbb
adc
insb
fcomp
pop
inc
jne
mov
xchg
aam
jne
arpl
into
movsb
add
jp
das
out
out
jl
gs
xchg
add
pop
cs
cli
dec
pop
mov
icebp
add
pop
push
fs
fmull
inc
xchg
outsl
pop
fisttps
in
stos
xor
repz
cmp
sbb
mov
sbb
popf
sub
mov
into
mov
in
nop
xchg
lods
xor
scas
mov
jecxz
pop
sbb
xchg
pop
add
mov
insb
push
stos
mov
mov
add
fmull
int
mov
mov
mov
add
daa
add
ret
enter
lds
lods
mov
inc
fbstp
xor
stos
stc
scas
rep
test
sahf
xor
jbe
xor
mov
mov
push
inc
cmpsl
pop
rorb
fsubrl
aaa
cmp
mov
mov
sub
fs
fcomp
mov
movsl
add
adc
mov
xor
xchg
xorl
xchg
jl
das
sbb
xchg
xchg
insb
test
xchg
mov
inc
in
pop
mov
sti
inc
push
out
nop
xchg
shlb
and
xchg
das
lods
inc
adc
fmuls
pop
push
daa
xchg
shrb
lods
je
insb
add
cmc
ret
pop
sub
mov
pop
adc
or
gs
xor
mov
mov
add
xchg
xor
test
adc
and
or
jle
push
cmp
in
in
bnd
xor
sahf
and
mov
xchg
jl
movsl
fs
mov
fs
jg
sbb
rcrl
inc
rclb
jmp
imul
sarl
mov
add
add
int3
ror
push
mov
fstpt
decl
cmp
ss
dec
lret
inc
fwait
and
subl
push
cmpl
mov
or
sub
jbe
dec
fiadds
and
xor
test
xchg
loopne
pop
mov
rsm
lret
mov
xchg
mov
into
jl
xor
stos
sbb
loopne
fnstenv
mov
cmp
je
xchg
into
jle
or
lods
mov
fldl
inc
push
adc
xor
mov
mov
and
xor
and
push
jne
add
mov
lock
adcl
pop
inc
movl
cmp
push
push
xchg
mov
rolb
push
dec
lahf
out
xchg
out
cmp
repnz
dec
sarb
lcall
test
lods
test
imul
movsb
lds
rol
inc
xchg
cmp
pop
pop
mov
jle
add
mov
pop
pop
aaa
gs
push
movsl
jno
sbb
cwtl
aad
pop
cmp
sbb
push
outsb
mov
mov
aam
and
hlt
mov
jmp
outsb
jp
into
mov
jno
cmpl
mov
add
jns
aad
aaa
mov
push
mov
bound
ss
dec
in
xor
loopne
and
mov
aad
sti
pushf
or
xor
inc
in
and
jbe
jno
cli
lret
lcall
sbb
loop
xor
dec
pop
jae
or
test
xor
xchg
fiaddl
mov
jmp
sahf
sub
mov
lret
out
mov
enter
out
xor
xchg
test
jge
cmovl
sar
push
out
adcl
push
mov
int
pusha
pop
roll
xor
negl
or
insl
sti
scas
jo
addr16
and
push
pop
and
jle
enter
xchg
orb
push
adc
xchg
imul
dec
add
fstl
sub
jnp
or
jns
repz
dec
pop
out
pop
pushl
repnz
repz
roll
inc
inc
or
and
test
push
sbb
jnp
ret
push
xor
ljmp
ret
sub
mov
iret
push
push
fucom
stos
insb
jl
jo
add
and
and
fisubs
xchg
lahf
cmp
paddsw
jne
popa
fstpl
cmpsl
fdivs
shlb
adc
jno
jno
in
daa
das
mov
inc
sbb
out
sub
orl
in
ds
bound
mov
mov
rorb
clc
lahf
and
in
pop
outsb
addl
je
or
cmpsb
imul
push
xchg
add
xor
inc
jo
jno
jp
out
sbb
dec
or
test
stos
mov
das
or
fs
test
cs
or
cmp
dec
pop
outsb
xchg
mov
and
hlt
out
scas
and
add
aas
mov
push
push
fwait
out
dec
jb
sbb
push
pop
test
jo
cmpsl
imul
mov
scas
mov
fsubs
jnp
adc
mov
jl
inc
out
call
subl
sbb
xlat
lea
mov
inc
movaps
mov
mov
cmp
xor
lea
xchg
movsb
xchg
dec
cmp
add
ret
imul
mov
sub
sub
loope
scas
push
sti
mov
dec
decl
ds
sbbl
rorb
aas
fcmovbe
jne
out
mov
add
mov
negl
out
sub
push
sub
aam
push
pop
mov
pslld
mov
nop
lret
outsb
xchg
pop
sarl
cmp
pop
movsl
jno
rorl
adcl
loopne
lcall
and
cmp
int
std
jnp
int
inc
out
or
adc
dec
jmp
test
add
sbb
cmp
cmpsb
lahf
loopne
push
dec
clc
push
movsl
xchg
dec
sub
xor
mov
rcr
iret
cmp
les
add
push
sub
std
enter
lods
sbb
aas
mov
sbb
pushf
xlat
jp
add
pop
stc
or
fld
test
inc
or
mov
push
test
mov
dec
xchg
fdivr
mov
das
adc
or
xchg
jecxz
lock
mov
lea
xchg
rorb
jecxz
dec
jnp
xor
xchg
mov
gs
fisubrl
cli
rorb
jmp
sub
addr16
jecxz
push
xor
lret
jno
ja
add
pop
xchg
add
lcall
cmpsl
xchg
dec
sbb
add
push
jae
sbb
push
bound
repz
cli
cmp
sti
js
lods
ja
rcr
jmp
fcos
sub
out
adc
test
mov
or
pop
jg
int3
inc
xchg
aad
sub
jb
adc
xchg
adc
inc
fwait
xchg
sub
mov
xchg
mov
mov
add
and
hlt
icebp
mov
jecxz
mov
inc
jnp
sbb
fldt
nop
frstor
xor
mov
xchg
jge
add
pop
mov
fidivl
in
push
call
inc
or
xchg
leave
inc
mov
in
cs
rcrb
loope
xor
cmp
lret
cmc
jnp
cld
je
inc
mul
rolb
push
sahf
mov
aad
and
jo
insl
mov
jg
mov
jb
and
outsl
xor
mov
jae
mov
xor
add
and
testl
enter
xchg
jne
aas
or
push
out
outsl
mov
add
repz
ds
add
pop
push
dec
in
sahf
xchg
bswap
push
mov
fmull
xor
cmp
mov
jns
xlat
outsb
xor
cltd
movsb
fisubrl
shrb
inc
inc
in
in
push
sbb
or
mov
pop
xchg
pop
iret
pop
mov
lock
jl
mov
data16
int
mov
stos
push
fstp
ds
mov
stos
add
je
pop
dec
lods
push
jl
fcoml
ja
xchg
call
mov
jnp
cmp
jp
shll
fadd
test
jecxz
push
loop
arpl
sbb
aam
push
mov
dec
xchg
jb
add
lock
adc
push
dec
out
in
push
dec
int3
stos
fldl
pop
jno,pt
and
bound
inc
outsl
and
cmc
fisttpll
mov
lea
sahf
pop
test
jl
xchg
jno
aaa
mov
fldl
push
push
xchg
movsb
xchg
hlt
cmpsb
outsl
loope
rcrl
mov
and
inc
jb
pop
xchg
inc
bound
mov
cmpsb
and
mov
xchg
mov
test
pushl
jae
dec
les
mov
out
inc
data16
mov
push
shlb
cmpsl
clc
xchg
mov
outsl
fchs
mov
or
push
pop
sub
push
add
outsl
xor
push
cli
xlat
sbb
and
or
cmc
push
mov
loopne
dec
lea
aas
add
xchg
xor
inc
popf
in
and
mov
add
scas
push
inc
push
mov
xchg
cmpsb
jae
fucom
cltd
push
mov
dec
clc
aas
mov
add
les
adc
adc
clc
pop
xor
movsb
icebp
mov
inc
mov
adc
sub
ret
xor
repz
adc
or
mov
xchg
pop
pushf
imul
int
rorb
jmp
mov
shlb
inc
sub
xor
lahf
sahf
out
mov
orb
xchg
sarb
popf
add
push
push
inc
out
adc
xlat
jne
adc
and
int3
arpl
mov
mov
gs
jp
loop
jl
std
push
push
std
inc
sbb
cmp
sarb
scas
mov
repnz
gs
adc
ljmp
cmp
out
mov
add
scas
icebp
sub
cmc
fistps
mov
mov
ret
and
mov
sbb
iret
sub
clc
rorl
mov
mov
push
hlt
or
xor
stc
icebp
loope
lock
insb
fdivrl
movsb
imul
dec
mov
xchg
push
xor
xchg
shlb
shrl
add
mov
mov
scas
sbb
jge
and
outsb
cmpsl
or
in
jb
mov
rcll
das
mov
outsb
incl
xor
mov
rclb
xchg
bnd
lods
mov
loop
jo
mov
test
xorb
bnd
je
mov
mov
je
push
cmp
mov
insb
and
lret
sarl
push
das
sahf
sarb
cbtw
fcoml
adc
aas
aad
mov
stc
shrl
lods
jbe
push
sbb
repnz
and
std
add
sbb
add
adc
lahf
push
bound
sub
xchg
pusha
xor
dec
sub
cwtl
repnz
xor
test
mov
sub
jl
jno
pop
sbb
call
out
pop
add
dec
mov
hlt
mov
rcl
jnp
xor
cli
dec
cmc
xchg
mov
dec
shll
pop
push
cmpsb
push
jmp
jecxz
push
pop
je
mov
inc
add
clc
mov
in
mov
push
and
push
pusha
mov
sbb
add
push
sbb
hlt
mov
ror
mov
rcll
push
lods
inc
and
lods
push
push
cmp
mov
add
dec
adc
cld
xor
pop
mov
rclb
xchg
fistpl
jae
pop
xor
rcrb
cmp
cmp
and
hlt
cli
loop
in
loopne
mov
mov
mov
mov
fdivrs
push
arpl
inc
cli
mov
shll
icebp
mov
jmp
out
lods
test
lret
int
mov
lods
dec
movb
cld
lods
xchg
das
lahf
or
sti
in
jbe
std
jge
imul
or
js
xchg
lret
xor
fldt
push
mov
jnp
in
testb
popa
bound
ret
cwtl
ds
mov
test
es
test
in
xlat
or
pop
sbb
dec
mov
mov
ss
in
sbb
int
aad
cmpsl
or
and
test
in
fistpl
push
xchg
mov
fwait
adc
iret
pushf
adc
inc
insb
out
pop
pop
mov
subb
pop
and
xor
fcoms
pop
ret
mov
jg
movsl
cmc
fsubrl
shrb
jns
mov
mov
mov
movsl
andl
cltd
nop
or
dec
dec
lods
movl
outsb
adc
pop
inc
pop
dec
stos
int3
dec
xchg
jl
xchg
mov
push
cmpsb
movhps
sub
movsb
cmpsb
mov
ja
iret
xchg
add
jge
lds
jne
cwtl
xchg
push
mov
push
push
and
push
and
divl
pushf
inc
xor
test
jmp
shll
movsb
add
iret
mov
sub
mov
inc
enter
subb
lods
aas
sbb
jecxz
jecxz
dec
movsb
push
and
in
imul
imul
jmp
lds
scas
ljmp
push
inc
hlt
mov
xchg
push
push
cli
xchg
mov
jae
or
xchg
or
xor
mov
movsb
fwait
daa
ja
ret
push
js
mov
ret
shrl
lret
xchg
insb
sbb
inc
add
fimuls
ret
roll
xlat
mov
out
mov
adc
nop
iret
lret
mov
mov
ja
sahf
jg
lret
loope
xor
add
dec
mov
xor
ret
adcl
xchg
jge
cmp
imul
cltd
and
mov
lods
mov
pop
mov
fiaddl
hlt
jecxz
pop
xchg
push
sbb
xorb
std
fcomp
or
dec
sbb
paddsb
cmp
xor
inc
jbe
lds
xor
mov
lock
xchg
pop
pushf
iret
sub
lcall
xchg
dec
popf
ja
pop
mov
add
xor
outsb
flds
inc
adc
adc
imul
gs
adc
pop
out
adc
xor
loope
jns
pop
cmpl
or
or
inc
leave
shll
shll
popf
inc
in
xor
dec
cs
fbstp
sbb
mov
lods
adc
ficomps
insl
clc
inc
cmp
and
lods
xor
lock
dec
rclb
add
out
es
cld
int3
iret
movl
in
push
pusha
add
mov
xor
sub
jne
pcmpgtw
and
push
pop
sbb
push
pop
push
pop
rorl
lods
in
mov
cmp
icebp
aad
lret
jge
ss
mov
adc
push
fnstcw
arpl
mov
pop
mov
dec
xchg
pushf
mov
jae
lea
mov
addr16
hlt
add
fucomp
jp
inc
vpcmpeqb
and
xchg
mov
shrb
shl
sub
es
lods
dec
pop
adc
pop
push
rorb
or
testb
xchg
sbb
or
adc
mov
sub
test
add
ret
xchg
mov
je
mov
jbe
xor
sub
inc
sbb
inc
push
lahf
stc
add
jge
mov
dec
shll
or
dec
test
xor
xchg
jle
test
mov
push
jp
stc
nop
pop
iret
mov
stc
cli
insl
push
jge
test
and
fwait
mov
test
cld
xor
mov
or
daa
or
jecxz
mov
add
and
sub
xchg
adc
test
push
imul
mov
cld
push
sbb
mov
rclb
mov
or
and
dec
stos
inc
add
xorl
or
movsb
push
push
lahf
sub
std
aaa
popa
and
int
insl
push
pop
jl
jmp
cs
push
pop
cld
cli
dec
jbe
fdivs
xchg
jne
dec
mov
inc
mov
ret
sbb
in
aas
mov
mov
push
sub
or
lret
popf
or
lret
int3
mov
jbe
or
push
bnd
scas
int3
pop
call
xchg
cld
jg
pop
dec
cmp
in
movl
sub
rolb
ret
jle
popa
scas
sub
in
pop
jg
cmpl
pop
scas
iret
mov
inc
scas
adc
jle
loope
ja
jg
ja
jo
xlat
xchg
lret
and
jecxz
pop
push
push
mov
scas
add
dec
sti
loope
mov
inc
inc
xchg
add
or
inc
xor
outsb
mov
movsb
mov
push
jmp
pop
jbe
push
rcll
pop
imul
pop
fwait
shlb
adc
cwtl
xchg
cmc
repz
jp
in
pop
sub
or
jecxz
xor
pop
push
into
dec
imul
pop
out
jnp
mov
stos
arpl
inc
cli
pop
cmpsb
cmp
pop
ja
in
outsb
xor
cltd
mov
insb
subl
pop
arpl
dec
adc
push
dec
adc
lods
ja
pop
jnp
insb
clc
xor
lock
orl
pusha
mov
push
push
sbb
dec
les
in
dec
movsl
jne
jecxz
ja
push
fcoml
pop
cmc
adc
imul
rol
or
inc
sbb
in
ljmp
sarb
jne
enter
mov
pop
sub
sub
jne
and
shrl
jle
movsl
shll
ss
enter
push
mov
imul
inc
nop
push
pop
shrl
test
jg
push
in
push
mov
push
sbb
push
mov
add
and
repnz
sbb
lcall
cmp
mov
gs
cld
gs
insl
repz
cmpb
fs
sub
mov
arpl
in
scas
push
xchg
lcall
out
pop
mov
js
inc
jb
mov
xchg
aad
xor
rolb
and
add
and
and
imul
mov
into
jg
nop
ret
fldenv
ret
inc
mul
fcoml
movsl
inc
cmp
enter
and
scas
sbb
daa
mov
xchg
loop
xchg
cmpl
dec
dec
adc
push
hlt
in
xchg
lods
les
dec
outsb
inc
dec
in
add
inc
arpl
lahf
xchg
add
sarb
int
stc
or
jae
push
xor
and
hlt
dec
xchg
pop
dec
jecxz
push
fistpll
mov
pop
mov
jmp
roll
arpl
adc
xchg
mov
pop
add
xchg
mov
mov
mov
ja
sbb
push
add
out
mov
out
icebp
xchg
fdivrs
push
xchg
xor
scas
addr16
pusha
es
or
jmp
cs
cmp
dec
ljmp
pop
jge
fstpl
out
fildl
in
mov
push
inc
incl
mov
rorb
bound
pushf
dec
xor
add
jg
push
ror
jae
rcrb
or
fldenv
aaa
stc
mov
adc
dec
inc
sti
lods
adcl
addb
or
push
decl
out
ljmp
and
dec
pop
mulb
dec
or
push
dec
ja
je
mov
jmp
out
xchg
jb
stc
jae
int
inc
shlb
leave
add
inc
popf
inc
rcr
pop
movsb
cmc
sub
or
inc
inc
inc
push
pop
fwait
mov
inc
xor
mov
inc
fbstp
mov
xchg
lock
xor
ss
cs
mov
or
jg
add
imul
xlat
inc
out
dec
mov
inc
outsl
imul
pop
jecxz
sarb
add
fwait
shrl
xlat
mov
and
push
xchg
pop
xchg
mov
inc
jmp
ljmp
fstl
testl
add
das
push
lahf
addr16
aam
lods
sub
scas
xchg
push
adc
leave
insb
mov
mov
das
pop
sub
inc
jmp
les
aam
or
in
jg
pop
xor
imul
fcomps
add
mov
pop
mov
or
icebp
lcall
je
lcall
addr16
cltd
sub
loopne
fiadds
arpl
arpl
imul
cmp
push
mov
icebp
jbe
movsl
mov
clc
xchg
in
sbb
push
cwtl
pop
lock
mov
outsb
rol
mov
out
aam
sbb
jnp
mov
pop
inc
cwtl
ret
ljmp
pop
mov
mov
hlt
xor
aad
scas
jl
fs
cmpsl
xchg
sub
push
pop
lock
ljmp
addr16
lea
xchg
mov
filds
clc
xor
inc
fucomi
or
and
cld
jnp
loope
mov
ja
adc
fs
push
daa
jae
jbe
sbb
cwtl
loop
loop
cmpl
leave
mov
in
idivb
fisubrs
dec
lahf
leave
jg
xchg
dec
mov
pop
mov
mov
leave
mov
fs
popa
push
mov
mov
fsubr
es
lcall
arpl
scas
xor
aam
push
mov
and
dec
lock
inc
adc
push
loope
push
mov
xchg
pop
out
xor
mul
and
test
out
or
xlat
rcrl
add
movsl
lods
stos
adc
addr16
mov
outsl
shll
out
add
jle
jbe
sub
add
xor
loopne
ss
or
int
mov
mov
cmpsl
push
sub
jo
and
and
push
xlat
mov
pop
or
push
pusha
push
rcl
xlat
enter
cmp
and
dec
stc
dec
mov
arpl
add
inc
movsb
cmp
call
sbb
mov
ret
jp
test
sbb
jno
jno
sbb
cmc
pop
lock
pop
loop
cmp
out
xchg
das
test
das
sbb
adc
cld
mov
lcall
and
jbe
sbb
cltd
adc
or
and
xchg
dec
stos
loope
test
pushf
sbb
imul
push
pushf
scas
imull
jmp
ret
mov
cwtl
cwtl
sub
nop
mov
movsb
sbb
subl
xlat
cmpb
mov
ror
mov
lock
sbb
xlat
cltd
xor
lock
icebp
dec
push
call
call
sub
dec
jg
inc
out
xor
out
sti
add
insl
mov
shll
in
add
mov
adc
pop
movsb
mov
cli
data16
ret
mov
rcrl
ljmp
sbb
mov
xor
mov
ret
loope
push
pop
inc
sbb
shrl
cmp
pushf
aad
test
mov
sahf
add
or
roll
xchg
cmp
stos
sub
cwtl
rcll
jmp
mov
add
cmp
movsb
insl
xchg
mov
sub
lcall
cltd
xchg
dec
ljmp
in
data16
pop
lret
fldenv
push
add
pop
push
movl
outsb
xchg
add
push
int
xchg
test
mov
fidivl
test
cmp
dec
and
hlt
xor
into
sahf
rclb
pushf
and
inc
je
pop
pushf
lahf
icebp
dec
jns
mov
lds
push
or
push
orl
or
movsb
das
sub
or
mov
jns
subb
mov
shr
jae
cli
fadd
lods
cmpsb
sbb
cs
xlat
in
cwtl
ret
cmp
ret
and
jmp
sbb
fimuls
rorl
cmp
push
out
xchg
loop
pop
lods
cmp
push
xchg
mov
xor
sub
jno
out
jg
and
pop
or
das
xor
in
mov
mov
aas
pop
dec
adc
and
out
into
dec
std
mov
add
pushf
add
or
and
lret
test
lcall
loop
pop
cmpb
xor
push
and
rorl
test
lods
mov
xchg
pop
cmp
ljmp
fadd
mov
cs
iret
add
and
mov
and
aad
sahf
sahf
insl
push
cmp
cmp
lahf
adc
add
aad
push
push
call
xchg
bound
sbb
inc
mov
pop
and
push
scas
lcall
hlt
data16
jl
xor
cs
mov
pop
mov
xchg
mov
mov
pop
sti
test
mov
lahf
sub
es
mov
daa
and
mov
cmp
jecxz
popf
add
xor
xchg
inc
nop
or
adc
hlt
xchg
addps
cmpsb
popf
push
out
int3
hlt
push
mov
outsl
push
test
leave
iret
or
lcallw
movsl
xchg
jne
push
pop
xor
pop
cmpsl
stos
nop
jo
and
mov
in
icebp
or
sbb
ss
cmp
dec
mov
jl
in
out
aad
push
clc
mov
sub
lret
xchg
imul
das
fisubs
jmp
iret
sbbl
push
jmp
loopne
in
inc
int3
jnp
and
jmp
stc
gs
add
ljmp
jne
cs
popa
mov
notb
or
popf
and
xchg
ret
adc
data16
loope
add
std
lahf
push
mov
fs
jg
cmp
testl
aad
add
sar
aam
cli
loope
pop
inc
xchg
loop
shrb
out
inc
outsl
mov
and
xor
test
lcall
fmul
outsl
and
push
lret
pop
gs
add
mov
xchg
adc
mov
sbb
pop
xchg
add
and
cld
testb
pop
jo
sbb
or
mov
cwtl
xchg
mov
xchg
arpl
dec
ret
pop
dec
popa
std
clc
xchg
dec
imul
rcll
scas
lahf
sub
inc
iret
int
je
movsb
jae
pop
mov
jb
pop
int
cmp
lea
mov
cwtl
pushf
sub
popf
out
cmpsl
lods
jg
shll
incl
xlat
pop
jo
xor
inc
ds
pop
and
and
sbb
push
sbb
mov
lds
testl
test
int
push
xlat
xchg
cmpb
ja
inc
fwait
sti
out
outsl
mov
imul
loopne
fmull
jl
cmpsl
in
std
enter
out
lock
or
pop
sbb
mov
xor
idivl
les
sahf
and
ljmp
lret
std
mov
pop
cld
adcb
data16
jecxz
sub
push
adc
sbb
clc
jl
mov
fcmovnbe
sbb
xchg
xchg
shrb
cmpsb
lock
cmp
loop
inc
adc
rclb
xchg
mov
shlb
xchg
adc
xchg
add
jbe
sbb
or
and
mov
mov
clc
mov
ljmp
mov
rcll
cmpsl
iret
inc
fs
pop
test
lds
adc
mov
cmp
push
loop
fildll
and
std
stc
mov
mov
pop
add
xchg
mov
xor
pop
shll
repnz
gs
push
iret
ljmp
lds
xor
sub
cmpsl
adc
iret
mov
or
sbb
or
movsb
pop
jle
cmp
mov
sub
jle
mov
mov
sub
mov
mov
lcall
aaa
push
sub
cmpsl
sbb
mov
sbb
ss
jmp
push
or
lds
add
jge
adc
pushf
mov
shlb
js
adcb
xchg
mov
lcall
jl
andl
mov
in
pop
test
dec
mov
sbb
mov
test
adc
push
jo
xchg
clc
dec
pop
imull
inc
and
lock
mov
xchg
icebp
mov
stos
sbb
es
cs
int3
in
pop
sub
push
mov
pop
pop
cmp
addl
repz
cmpsl
les
or
repz
add
out
test
cs
sub
mov
std
dec
dec
or
jne
outsl
rep
insl
in
xchg
repz
sub
fwait
jo
inc
testb
dec
insb
aad
les
xchg
cmpsl
push
jg
dec
or
lods
mov
jns
add
mov
popf
pop
shlb
pop
inc
mov
mov
sbbl
add
or
sub
inc
jo
and
dec
dec
das
or
mov
iret
das
jmp
xchg
int
lds
mov
and
pop
fiaddl
lcall
jge
mov
add
sahf
mov
sub
pushf
scas
add
mov
imul
andl
outsl
xchg
xor
out
mov
stos
out
enter
push
sbb
imul
and
shr
lcall
push
imul
das
icebp
icebp
or
inc
lods
sbb
lahf
es
loop
jno
mov
loop
push
adc
fimull
push
mov
stos
xor
aas
test
mov
pop
les
movsl
cli
mov
push
jl
pop
adc
add
mov
jno
cmp
jl
js
leave
ret
das
jmp
loopne
mov
add
and
or
icebp
mov
imul
add
mov
shrb
ljmp
data16
sbb
xchg
in
popf
jg
and
popa
repnz
xor
cmp
xchg
inc
xchg
mov
mov
sub
rol
add
sbb
mov
xor
roll
mov
ss
mov
adc
rcl
xchg
addr16
test
adc
adc
add
mov
xor
push
cmp
mov
hlt
sub
ljmp
mov
pop
fcmovu
pop
fcmovb
cmp
mov
xchg
insl
cmc
idiv
xchg
jl
push
inc
ljmp
ljmp
or
ljmpw
in
or
adc
and
jae
cmpsl
xchg
inc
sub
sub
mov
push
sbb
lods
jno
test
xchg
and
mov
lahf
push
int3
xchg
inc
mov
inc
rorb
pop
outsl
addl
out
mov
push
std
sarb
mov
mov
jp
jno
push
push
mov
xchg
and
rclb
lea
push
sbb
sbb
leave
pop
xchg
sub
mov
mov
pmullw
dec
out
imul
dec
cs
xchg
mov
cltd
adc
aas
pushf
mov
mov
hlt
repz
xchg
sub
adc
inc
push
bound
mov
add
imul
movsb
and
cld
cs
movsl
or
jns
sub
or
fwait
cs
dec
and
push
jno
arpl
cmp
imul
jno
mov
xchg
popf
push
leave
sahf
xchg
ja
cmp
mov
mov
mov
jmp
orl
and
sbbb
mov
adc
xchg
ficoml
mov
inc
js
xlat
xor
mov
mov
cmc
cmpsb
xchg
jg
sub
mov
mov
ja
push
lret
cmc
stos
pop
xor
add
mov
insl
inc
xor
rcrb
mull
mov
sub
jmp
pop
jnp
aas
sub
cltd
pusha
sti
and
test
inc
push
xor
out
cmp
pop
mov
fdivs
data16
push
gs
dec
lods
sbbl
or
mulb
push
jnp
iret
mov
lcall
int3
xor
mov
hlt
loop
push
cmovl
push
clc
pop
add
movsl
dec
lret
dec
int
dec
push
shll
mov
daa
pushf
jecxz
nop
adc
fcompl
and
or
add
in
aaa
mov
push
lods
testl
testb
into
mov
mov
test
cmp
xor
jge
je
push
fisubs
mov
insl
push
lock
lcall
out
call
adc
loope
xlat
jae
shlb
fidivrs
enter
shll
xchg
add
sub
imul
jo
rorb
lahf
sub
add
mov
push
mov
xchg
rorb
add
cmpsl
inc
pop
mov
jmp
mov
aaa
and
repz
mulb
pop
xchg
rcrl
mov
mov
jle
test
stos
lahf
adc
add
dec
push
add
sahf
sbb
add
fwait
mov
xchg
sbb
pop
cli
hlt
stos
dec
xchg
jb
cmp
mov
imul
mov
sbb
ljmp
fisttpll
mov
jne
dec
fsub
add
or
aad
xchg
xor
adc
pop
adc
inc
sub
push
jnp
dec
xchg
mov
mov
leave
pop
cmp
mov
ds
imul
mov
xchg
push
imull
cmp
push
iret
popf
xor
cwtl
cmp
xchg
fsubr
inc
xlat
push
les
jl
push
add
add
lret
movd
lea
imul
mov
push
push
jg
adc
vorps
push
cmp
rcll
push
mov
cmp
stc
scas
rcrb
add
mov
mov
in
xchg
mov
test
dec
inc
mov
mov
xor
not
test
pop
mov
mov
flds
sub
addr16
add
add
pop
out
push
sub
jmp
adc
ficomps
dec
loope
lds
xor
in
mov
stos
add
sahf
and
sub
and
mov
mov
mov
outsb
sub
jecxz
aam
pop
cltd
cmp
pushf
fcmovbe
jge
inc
xorl
fstpt
push
clc
daa
sti
pop
loop
add
pop
loopne
shl
fdivr
add
xchg
mov
xchg
dec
test
xor
mov
ja
int3
imul
dec
sar
pop
test
je
in
aad
pusha
mov
add
mov
add
mov
and
pop
dec
mov
fldcw
mov
dec
ret
jl
push
bound
orl
or
add
cld
jecxz
pusha
int3
movsb
xchg
aam
test
sbb
inc
test
test
fistl
ret
xor
cmp
dec
lcall
add
inc
les
xor
sub
fisubrl
lea
popf
sbb
data16
insl
add
dec
adcl
jnp
test
mov
mov
scas
lock
clc
les
push
mov
jl
cmpsb
shrb
sbb
leave
xchg
mov
jg
cs
into
push
xor
or
cs
pop
lods
loope
lods
inc
mov
ret
ja
mov
xchg
xor
pop
or
mov
nop
pop
loopne
and
rorb
jecxz
loope
xor
xchg
fstpt
fiaddl
xchg
sti
rorb
sar
test
int
sbb
push
ja
nop
adc
sahf
int
inc
xchg
psubw
mov
pop
or
push
xor
cmc
and
repnz
jmp
push
lea
int3
aaa
shl
push
or
mov
aas
inc
pop
scas
in
mov
sub
dec
dec
xlat
lods
push
ja
stos
pop
shll
sbb
aaa
popf
xchg
xchg
mov
pop
movsb
mov
push
mov
inc
es
jnp
ret
outsb
add
inc
jmp
xchg
sahf
pop
sub
imul
out
mov
sti
dec
lahf
insl
sbb
mov
xchg
pop
xchg
inc
ret
cmp
push
imul
repnz
fistpll
inc
and
lods
jle
push
add
mov
push
push
gs
leave
out
mov
cmc
es
lods
repnz
stos
xchg
fcmovu
das
gs
sbb
scas
hlt
mov
sub
fcomps
add
sbb
lcall
inc
and
dec
or
shrl
dec
pop
inc
lea
arpl
not
cmp
loope
dec
je
jg
dec
scas
int
out
lret
cmp
movsl
jl
sub
loop
fistpl
lock
call
mov
cld
mov
and
je
negl
jae
std
sbb
pop
sub
dec
xchg
bound
loopne
or
imul
test
inc
inc
stos
pop
call
mov
add
or
shll
insl
mov
or
xor
cmp
inc
sbb
jne
cmp
aas
pop
mov
push
sub
iret
rep
insl
jle
lret
xor
mov
je
lock
inc
loop
fwait
push
ficoml
iret
insb
push
insb
dec
mov
fcmovnu
jo
push
popf
movsl
xor
xchg
shll
mov
test
fsubr
add
jbe
hlt
rcrl
mov
mov
bound
test
jnp
sbb
into
icebp
addb
loopne
es
push
mov
stc
daa
lods
aam
inc
pop
inc
bound
xor
pop
dec
push
push
xor
dec
int
insl
xor
sbbl
mov
inc
movl
roll
mov
and
cmp
mov
cltd
pop
jecxz
cmp
cmc
mov
and
and
jecxz
shll
mov
in
jg
cmp
mov
subl
addr16
cmpsl
dec
add
cmp
int
and
adc
or
inc
dec
sub
push
sbb
outsl
mov
scas
sbb
lret
push
scas
pop
jge
mov
popa
xor
inc
cmp
sub
jmp
insl
lcall
push
test
iret
add
cs
ficoms
add
push
cwtl
cmpsl
xlat
push
popf
aas
nop
sbb
pop
iret
iret
cwtl
mov
mov
cld
adc
jge
in
stos
loopne
or
pop
shll
shr
add
dec
lock
sub
cmp
insl
pop
jb
mov
push
imul
aas
mov
mov
popa
pusha
push
cmp
push
fstpl
stc
mov
ljmp
and
ret
sub
stc
xlat
jno
mov
fdivl
push
mov
fdivl
mov
pop
sub
dec
test
mov
shl
mov
loopne
dec
sub
cwtl
fmul
or
in
sbb
shll
xchg
jno
push
jo
out
jle
lock
in
cmp
mov
movsl
inc
mov
pusha
dec
dec
add
imul
rolb
sub
subb
dec
adc
mov
imulb
adcb
fistpl
add
outsl
push
pop
cmpl
xor
sti
bound
or
not
or
cmc
pop
loopne
xor
adcb
jl
stos
mov
lret
sbbb
push
fnsave
pop
nop
sbb
or
clc
rcrl
add
icebp
movsl
out
movsb
pop
mov
inc
fidivrl
jb
aad
test
mov
sbb
lods
loop
push
shr
sub
sbb
sub
sub
mov
add
and
xor
adc
xchg
jmp
sub
cmpsb
rcrb
insb
mov
enter
in
arpl
jo
and
mov
je
mov
shrl
sbb
imul
sub
push
es
arpl
mov
lea
call
adc
jae
jnp
frstor
mov
hlt
or
sub
sub
loop
adc
inc
jo
jp
mov
pop
mov
cmp
out
test
mov
add
xchg
aaa
nop
fnstenv
pop
inc
test
paddusb
icebp
jns
xlat
xchg
fdivrl
adc
xchg
mov
inc
mov
in
es
sti
add
and
popf
inc
sbb
mov
push
push
inc
es
push
xor
subb
add
popa
fstpl
aaa
adc
xlat
mov
sub
xor
pusha
sar
mov
daa
outsb
idivl
lods
mov
pop
aas
out
pop
sar
dec
je
and
test
xor
cltd
pop
mov
outsl
or
jb
ja
cmpsb
mov
cmpsb
and
lahf
out
sbb
out
in
outsl
mov
fldcw
outsb
addr16
mov
mov
jp
enter
je
jmp
cmpl
popa
mov
sbb
jnp
inc
fisubl
xor
push
fstp
nop
cltd
fsubrp
orl
adc
insb
adc
xchg
xor
xchg
jnp
mov
xchg
arpl
in
pop
inc
fstps
adc
fmull
mov
lea
jg
push
push
aaa
push
or
cmpsl
lret
or
dec
dec
test
and
cmp
enter
loop
pop
stos
enter
js
aas
xor
sahf
dec
xor
push
pop
mov
xchg
mov
push
sahf
clc
js
test
stos
push
jae
mov
pusha
in
jbe
ds
add
push
loop
jo
aam
and
dec
pop
mov
pop
inc
pop
pop
mov
cmp
into
pop
mov
mulb
addr16
ss
xor
das
addr16
scas
or
push
push
push
lcall
adc
xor
xchg
jns
mov
mov
mov
outsl
imul
rcrb
mov
xor
mov
sbb
nop
push
ret
jns
mov
jg
mov
push
and
int3
fadds
inc
ret
aaa
xchg
dec
adc
enter
jecxz
adc
adc
jbe
movsl
lds
sbb
fildl
xor
lock
mov
rcll
out
insb
xchg
test
push
push
clc
out
add
jmp
dec
sbb
jp
outsl
clc
inc
add
das
int3
xor
sub
xchg
mov
jne
loop
js
jb
in
cmpsl
mov
jp
xchg
inc
and
inc
cmpl
ja
xlat
sub
or
mov
negb
xchg
mov
rorl
stos
xchg
call
fcomps
pushf
mov
push
inc
cmp
dec
cltd
mov
cwtl
mov
in
js
inc
scas
add
addr16
mov
jae
out
fwait
sbb
dec
sub
pop
stos
adc
cmp
jbe
je
mov
imul
push
adc
jl
xchg
andb
inc
push
adc
lds
fstl
pushf
inc
adc
jne
sub
mov
mov
addr16
out
jge
push
push
adc
in
hlt
fcomps
loope
add
mov
in
js
mov
adc
dec
int
stos
xchg
adc
add
dec
fisubs
cmp
mov
xchg
rdpmc
xor
in
repz
outsb
das
rcr
xlat
fwait
imul
sahf
jp
push
les
add
cmp
jne
or
sbb
cld
cmpsl
mov
cmp
pop
inc
rclb
lds
imul
popf
into
jmp
push
call
jge
movhps
push
push
insb
cld
cmp
add
adc
test
inc
mov
pop
pushf
popf
out
cmc
mov
jmp
mov
rclb
repnz
inc
jecxz
imul
out
inc
std
jbe
xchg
sbb
rol
xor
dec
movsb
cs
mov
jb
imul
and
jge
je
sub
scas
aas
outsb
shrl
cmpsb
pop
fidivl
cmp
pop
in
sahf
jno
das
adc
popf
cmp
addr16
or
subl
cmpsb
nop
jg
insl
pop
leave
add
out
fs
jns
jbe
cmp
pushf
fstl
and
dec
dec
mov
mov
out
das
pop
test
cmp
ljmp
add
xor
in
push
fnstsw
adc
or
xchg
xchg
stos
pop
inc
mov
ds
mov
test
mov
xchg
fisubrl
in
std
xor
jns
adcl
ljmp
lret
adcb
das
test
mov
sbb
and
sub
mov
aaa
inc
ss
or
dec
pop
xor
test
fs
fsubrl
add
dec
cmpsl
mov
xor
xchg
addr16
lods
xchg
xchg
adc
dec
fstpt
mov
mov
jns
je
or
in
mov
addr16
jmp
jg
data16
shl
or
jge
pushl
sub
dec
jecxz
in
ja
into
popa
fistl
popa
add
inc
scas
rorl
aad
pop
inc
mov
lds
mov
fistpl
cmp
cltd
push
aad
sarb
inc
je
jecxz
std
pop
fwait
popa
mov
mov
lahf
push
out
cltd
mov
sub
xlat
pop
mov
and
sbb
scas
xchg
pop
jo
add
push
and
or
cmp
out
pop
aaa
cwtl
jmp
fidivrs
xchg
out
lods
lock
shrb
xor
clc
fs
out
int
jae
scas
push
adc
mov
push
pop
popl
mov
subb
sbb
js
or
sub
out
adc
jb,pt
pop
rcrb
out
lret
inc
xchg
fwait
insl
xchg
push
arpl
jl
repnz
sub
xchg
adc
sub
js
out
notl
mov
clc
inc
insl
hlt
ja
inc
add
jg
mov
imull
push
ret
fucomip
fsubrs
call
loop
pop
jle
and
out
fsubs
loopne
adc
mov
sub
sahf
or
imul
inc
mov
cs
aad
mov
das
push
or
mov
push
mov
rcrb
daa
call
inc
inc
or
fmuls
repz
xor
outsl
push
movsl
lcall
jo
sub
lahf
pushf
mov
mov
xchg
and
cmp
rcrl
cmp
stc
insb
data16
sub
ret
iret
pop
xlat
test
or
in
cmp
stos
add
fnstcw
call
lcall
sub
xchg
clc
pop
adc
xchg
lods
lret
iret
loop
jno
or
mov
shlb
arpl
hlt
mov
xchg
push
sbb
push
cmp
cmpsb
pop
lcall
clc
sbb
or
lods
into
mov
mov
iret
ljmp
push
sbb
mov
or
cmp
imul
sbb
inc
movsb
xchg
rcll
mov
filds
idivl
inc
mov
andl
push
stc
montmul
cmpsb
test
xor
jb
mov
adc
sub
stc
andb
pop
push
push
push
or
cmp
mov
in
cmp
clc
aad
cmpl
jbe
rclb
shll
inc
cwtl
adc
fcoms
mov
fwait
repz
aam
aas
mov
mov
add
inc
fiadds
sub
jo
addr16
mov
out
decb
cmp
out
rol
mov
mov
pop
outsl
and
rcll
pop
sbb
rolb
sub
pop
repz
sub
les
popf
and
adc
test
or
cwtl
cli
mov
xlat
int3
repnz
adc
push
and
mov
rcl
pop
fstpt
mov
scas
add
jmp
xchg
cmp
jge
push
inc
pop
je
loopne
addr16
mov
push
stos
sbb
fisttps
lahf
push
add
das
push
add
roll
js
jb
mov
sarl
pushf
pusha
std
jo
mov
mov
or
fisubrs
clc
or
cmpsb
dec
jae
loope
and
jns
movsb
sub
stos
shl
aaa
lahf
adc
adc
out
stos
out
das
int
dec
add
sahf
inc
mov
jnp
mov
adc
aas
push
xchg
bnd
lods
cmp
mov
cmc
mov
stos
fcmove
popf
aam
jl
jmp
cwtl
mov
std
imull
xchg
shl
lret
jecxz
xchg
jmp
xor
retw
loope
jne
sub
popa
xchg
icebp
xchg
xchg
rol
imul
cmp
jle
xor
cmpb
insb
outsb
cmp
inc
and
or
mov
pop
cmp
lds
lods
test
inc
mov
mov
mov
clc
dec
sarb
sar
jbe
xchg
dec
lret
adc
inc
jg
xor
orb
and
insb
pop
aam
cltd
pop
jle
xor
xchg
sbb
add
jmp
push
pusha
aad
fildl
mov
pop
pop
scas
xchg
adc
orb
add
push
aaa
and
clc
sbb
cmp
stos
es
pushf
fidivrs
lahf
mov
xor
add
das
repnz
mov
sub
adc
sub
sahf
xchg
jl
mov
dec
add
push
xchg
jmp
or
inc
pop
clc
neg
xor
dec
cmp
lret
push
in
test
add
inc
outsl
cld
call
sub
dec
jno
add
mov
push
sub
enter
mov
mov
out
test
fwait
xchg
mov
shll
je
out
mov
xlat
inc
and
call
iret
mov
mov
sbb
gs
repz
or
insl
push
sbb
pop
push
add
and
and
push
dec
jns
loope
loopne
pushf
push
sarb
fcompl
push
pop
and
lods
sbb
xchg
cltd
fcomip
sub
iret
pop
es
jmp
inc
xchg
or
out
sbb
enter
std
mov
fwait
xchg
pusha
popf
scas
test
xor
movsl
xchg
dec
push
pop
inc
cmc
in
pop
xor
xchg
lret
inc
and
test
paddq
hlt
jge
test
rcrb
push
dec
scas
or
or
push
jg
inc
lcall
add
inc
pop
mov
xchg
cs
xchg
add
dec
adc
adc
cmp
aas
adc
icebp
aas
xchg
int
iret
push
imul
ds
cmp
not
nop
mov
ss
jp
lods
popa
nop
in
sub
mov
add
test
addr16
fwait
in
stos
xchg
setle
lret
aaa
notb
das
rclb
int3
xchg
add
out
push
loop
push
into
in
mov
jbe
mov
xlat
pop
inc
test
xchg
mov
or
inc
testl
ss
filds
jmp
mov
cli
push
or
push
xchg
mov
pop
mov
jecxz
push
repz
xor
subl
pop
rcll
push
or
fdivl
add
and
pop
inc
or
test
jbe
inc
jmp
dec
js
jnp
je
shr
xchg
cmpsl
add
loop
std
leave
movsl
imul
cltd
cmpsl
int3
leave
rcrl
cli
jge
lds
push
sub
mov
daa
jno
popa
push
icebp
push
fiadds
mull
pop
andl
and
inc
jp
roll
mov
add
mov
pushf
mov
push
pop
loop
gs
pop
mov
sbb
dec
mov
lahf
cld
idivb
mov
fs
mov
shll
adc
mov
jmp
sub
mov
xlat
xchg
imul
call
imul
arpl
xor
test
xor
mov
jb
out
pop
inc
in
cmp
rorb
aam
or
loop
jns
int
adc
lds
xchg
test
test
sub
cltd
xchg
rorl
shrb
xor
xchg
dec
sti
add
sub
test
repnz
or
dec
clc
and
add
pop
sbb
jg
push
sbb
mov
fnstsw
mov
mov
push
mov
faddp
lods
mov
and
cmp
inc
dec
in
cmp
or
and
pop
mov
pop
lahf
sar
out
das
in
lahf
call
mov
add
mov
push
mov
ss
sub
pusha
inc
clc
pop
fisubrl
out
jo
mov
jno
hlt
dec
inc
jg
push
mov
sbb
push
push
int
lods
popf
push
jns
gs
iret
mov
cmp
and
shrb
out
mov
pop
imul
xor
jo
inc
cmp
icebp
insb
adc
mov
lcall
loopne
pop
inc
add
test
mov
in
xchg
jbe
in
std
in
cmc
iret
lds
dec
js
in
sub
lods
adc
and
iret
mov
daa
ljmp
outsl
pop
xchg
in
xchg
jns
add
push
mov
jbe
sbb
dec
xor
sub
add
mov
xchg
aad
movsl
xchg
fisttps
xchg
loopne
push
icebp
movsl
adc
cmc
pop
fbstp
fnsave
sub
mov
mov
cmp
xorl
push
pop
push
popa
pop
dec
fdivl
jecxz
pop
cltd
pop
orb
hlt
fidivrs
cmp
aas
cmp
loopne
ja
repz
mov
test
icebp
and
add
or
cli
sti
pusha
hlt
and
shr
aad
xor
and
add
imul
adc
push
add
int3
inc
mov
hlt
icebp
jp
je
push
cmpsl
cmp
add
pop
shlb
push
mov
cmp
and
nop
icebp
rolb
lds
pusha
jmp
clc
movsl
lds
loop
xor
fsubr
fucomip
inc
shl
int
nop
mov
xchg
xor
lcall
inc
xchg
mov
mov
cmp
jg
jae
and
cmp
lock
push
pop
popf
dec
pop
ljmp
sub
pop
inc
movsl
lret
lret
ljmp
jge
notl
mov
sbb
adc
inc
xchg
inc
inc
push
out
cmp
sub
xchg
xorb
inc
shll
jg
xor
aaa
sbb
imul
mov
add
subb
leave
out
mov
in
inc
jae
ss
jmp
sub
add
pop
push
sub
mov
je
stos
jno
fcoml
mov
push
iret
out
add
clc
xchg
push
movsb
add
int
jno
movsb
loope
sbb
mov
push
push
or
push
add
push
dec
and
iret
fisttps
jle
lcall
test
popf
addr16
imul
aaa
sbb
or
cmp
dec
iret
mov
aad
es
xor
mov
jge
xchg
andl
das
iret
out
test
mov
das
mov
mov
jmp
mov
js
andl
or
clc
dec
daa
divl
shl
xchg
cld
adc
ret
sbb
fiaddl
insb
hlt
cld
push
and
lahf
mov
ljmp
int
push
addr16
push
xchg
aaa
cli
jge
push
movsb
pop
arpl
fsincos
xchg
lcall
jo
imulb
sub
mov
adc
sti
repz
mov
movsl
jg
cmp
pop
sbb
push
shrb
jae
ds
popl
and
inc
hlt
mov
pop
das
andl
add
test
push
or
jp
sub
jg
sbb
hlt
lods
jns
mov
mov
jmp
movups
xor
and
rcr
ljmp
push
inc
mov
outsl
ret
rcr
scas
xchg
dec
jmp
xor
shll
add
popf
imul
or
bound
xor
or
pop
js
mov
cmp
ror
cmp
sub
cmp
pop
xor
mov
test
sbb
lret
js
and
lods
imul
lcall
test
jae
enter
enter
xchg
notl
mov
cld
mov
fwait
outsl
bound
fistpl
mov
aas
jo
loop
ret
into
add
sbb
adc
add
gs
cmpsb
jb
dec
sbb
fistps
movsb
stc
mov
pop
stc
cltd
test
xor
imul
sbb
adcb
lret
cwtl
pop
je
lods
mov
lods
adc
or
add
adc
mov
xchg
xor
push
mov
dec
hlt
sets
xchg
ljmp
enter
loope
stos
into
rorl
fidivl
sti
pop
sbb
jmp
and
iret
adc
ja
cmp
jbe
pop
mov
inc
sbb
sbb
mov
jge
sbb
lock
cmp
ss
xchg
push
dec
jnp
in
shl
pop
popa
pop
subb
add
lods
cld
repz
xchg
out
xor
iret
into
arpl
and
mov
jp
or
dec
inc
div
push
inc
mov
pop
sbb
mov
movsb
loopne
test
inc
jno
gs
mulb
jge
shlb
pop
mov
cld
inc
mov
cwtl
mov
jbe
lods
adc
aam
or
and
adc
lret
sar
pop
nop
sub
push
and
sbb
fnsave
xchg
enter
add
push
or
mov
adc
test
sbb
cmp
cld
fs
cmp
mov
stos
lea
aad
sbb
orl
insb
and
mov
repz
sbb
bound
inc
pop
push
inc
fisttps
sbb
xchg
aam
jp
pop
movsb
mov
pop
pop
pop
jae
pusha
xchg
gs
nop
int
test
cmp
sti
sahf
mov
add
cli
mov
shlb
nop
pop
in
xchg
fnstenv
sbb
addr16
pop
inc
icebp
in
out
cli
xor
mov
inc
sbb
repz
fimull
sub
inc
ret
and
mov
jnp
adc
scas
outsl
xor
in
pop
add
xchg
jl
cwtl
jnp
in
mov
mov
mulb
mov
or
call
inc
pusha
jae
jno
push
mov
xor
adc
mov
test
push
scas
dec
pop
scas
add
orb
icebp
xlat
or
xchg
out
les
lds
dec
pop
push
and
inc
inc
adc
mov
sub
xchg
inc
dec
ficoms
xor
int3
cltd
aad
xchg
pop
jp
ljmp
out
das
or
decl
repz
fwait
in
lahf
int3
adcb
popf
or
les
and
outsl
xchg
inc
pushf
add
and
notb
xor
out
dec
test
inc
loopne
stos
push
loopne
dec
cmp
push
repz
adcb
jae
pusha
test
fdivrl
cmp
add
dec
pop
addr16
xor
push
fldenv
adc
push
push
sbb
jp
stos
dec
lock
imul
lods
ss
fnstcw
shrl
push
push
fdivrl
mov
leave
jo
sti
cmc
mov
mov
ret
push
pop
insb
je
mov
sub
cli
in
repnz
loope
or
shlb
cmp
xlat
clc
mov
lret
inc
push
fisubrs
push
cmp
pop
xor
pop
and
nop
aad
iret
cwtl
in
push
sbbl
push
ja
pop
imul
xchg
fildl
cld
pop
fsubl
je
call
sub
loopne
dec
sub
out
push
pusha
dec
imul
nop
pop
mov
into
lods
ljmp
push
lret
repz
imul
in
scas
out
pop
icebp
popa
inc
sar
pushf
add
inc
push
lds
mov
push
lahf
popf
sahf
divb
orl
leave
and
fildll
sub
shll
rorl
test
lret
and
leave
outsl
insl
and
sbb
stos
in
or
aad
aas
pop
sub
push
dec
popa
sbb
gs
into
fsubrs
aaa
xor
xor
lods
fdivr
imul
in
mov
cld
stos
pop
dec
out
cmc
stos
add
xor
or
movsl
fists
ja
addl
pop
push
or
xor
xor
cs
rolb
cmpl
aam
or
mov
out
add
push
pop
outsl
popf
sahf
inc
bound
arpl
sbb
mov
cmc
dec
push
clc
clc
mov
and
adc
mov
clc
cmp
dec
inc
lret
loop
jbe
mov
xor
out
xchg
mov
or
mov
jle
repz
mov
mov
cmp
mov
dec
test
adcl
addr16
sub
sahf
out
hlt
xchg
mov
xor
out
std
gs
cmp
in
mov
in
push
push
mov
sbb
mov
insb
mov
mov
push
inc
add
in
fstpt
bound
add
dec
mov
lea
sbb
stos
mov
mov
out
andb
push
xor
jno
je
dec
jno
fisubs
daa
xchg
je
testl
inc
inc
clc
ds
xchg
les
test
andb
lcall
dec
lds
ret
mov
rcrl
pop
cmp
mov
and
sti
icebp
ds
xchg
and
imul
xorl
mov
sbb
dec
in
imul
les
pop
sbb
sub
decl
pop
ja
cmpsb
jns
imul
shll
mov
sbb
leave
lcall
fidivs
push
outsl
or
shll
push
mov
mov
mov
jg
or
andl
jbe
xor
inc
xor
dec
ljmp
add
sub
pop
call
int3
repnz
popf
push
sbb
push
sub
out
in
test
fs
insl
jbe
sbb
shrl
xchg
inc
xor
and
aam
xor
jle
mov
adc
xchg
pop
insb
mov
mov
lods
fwait
mov
test
mov
jo
cmp
add
repz
icebp
xchg
js
mov
test
andl
pop
mov
push
ficomps
sub
push
call
cmp
ficoms
ss
push
pop
iret
adc
or
jns
sub
jl
lods
xor
mov
cld
mov
pop
repnz
xchg
nop
mov
out
jge
cmp
sar
mov
mov
mov
or
movsl
loop
mov
pop
dec
mov
jns
lock
int
hlt
or
into
ret
push
jae
bound
mov
push
or
data16
mov
ret
adc
stos
gs
inc
insb
and
dec
sgdtl
pop
push
arpl
rcrl
mov
mov
push
cmpsl
or
pop
std
push
mov
out
lcall
sub
xor
push
into
push
call
push
push
lock
fwait
adc
dec
add
lret
and
inc
push
iret
jg
sub
hlt
int
inc
push
outsl
test
rcll
and
iret
js
test
sbb
fnstenv
aas
inc
adc
push
inc
xlat
scas
repz
int3
mov
test
mov
insl
inc
das
enter
cmp
and
inc
sarb
pop
jecxz
mov
cmp
mov
ret
push
mov
jb
xchg
pushf
mov
bound
cmp
pop
imul
mov
push
xor
sub
aam
sub
mov
sbb
and
iret
push
movsl
lea
test
jno
cwtl
rorl
insb
dec
dec
test
sbb
or
or
adc
imul
daa
stc
push
shl
pop
and
ljmp
pushf
loop
jp
stos
test
scas
add
maskmovq
testl
cltd
push
push
insl
call
dec
nop
lea
les
inc
in
mov
mov
repz
push
das
adc
push
daa
mov
out
mov
lock
mov
push
fisubl
pop
das
aaa
dec
jae
adc
loope
idivb
pop
pop
sbb
and
jne
pop
mov
imulb
push
add
mov
pop
mov
nop
fldt
push
insb
mov
mov
js
jo
xor
xchg
in
mov
push
repnz
ljmp
pop
inc
mov
aas
mov
cs
imul
inc
mov
cltd
mov
push
mov
push
dec
inc
dec
xchg
out
mov
dec
sbb
xorl
shrb
icebp
pop
cmc
xor
pop
push
ss
mov
scas
mov
pushf
inc
xchg
push
and
in
pop
or
sbb
stos
dec
bound
nop
repz
cltd
and
lods
xor
jge
mov
cmpsl
lods
mov
mov
mov
mov
push
ds
sub
sub
sti
cmpsl
cmpb
cwtl
and
loop
stc
repz
dec
inc
enter
stos
pop
mov
inc
fistps
mov
inc
and
jns
cwtl
leave
cmpsl
or
and
sbb
sbb
adc
adcl
mov
sarl
dec
jae
push
jo
insb
dec
sub
outsb
leave
cld
aad
shrl
pushf
mov
mov
and
dec
fnsave
xchg
in
jae
and
mov
scas
mov
pop
pop
jns
enter
fldt
mov
scas
pop
xor
lock
sbb
out
shll
push
mov
int3
test
aad
dec
movsb
and
loopne
pop
mov
ljmp
sbb
xlat
sarb
nop
ret
push
inc
jmp
dec
push
mov
mov
push
ficoms
fldenv
lret
ljmp
popf
daa
sub
aaa
aas
aaa
or
mov
inc
dec
into
sbb
insl
into
add
rorb
leave
int3
jge
or
sbb
mov
jecxz
and
outsb
or
sbb
dec
ja
hlt
bound
scas
je
shlb
mov
lods
add
inc
mov
jecxz
pop
jecxz
ljmp
sub
iret
pop
out
call
jle
mov
scas
jmp
add
mov
daa
xchg
fimull
enter
xchg
jg
pop
sbb
mov
push
mov
jns
int3
sbb
dec
xchg
inc
pop
gs
xor
ret
repnz
outsb
jecxz
pop
mov
cli
sub
in
mov
and
xor
andl
in
imul
out
xlat
mov
cli
pop
jg
mov
add
xchg
loope
inc
jb
and
cli
fs
shl
push
icebp
call
sub
cs
dec
addr16
lret
jl
jge
or
xchg
popf
pop
sbb
jb
addl
xchg
mov
sub
jmp
mov
data16
mov
imul
aas
jecxz
and
jle
outsb
nop
sahf
hlt
pop
push
lods
rcll
lock
ds
jp
mov
test
inc
xlat
cmp
sbb
aaa
sahf
mov
ficoml
cmp
mov
pop
loop
add
sub
flds
jg
stc
xor
cmc
sub
cmp
mov
lock
adc
mov
and
add
mov
hlt
pushf
or
xor
xchg
mov
jle
cmp
clc
xchg
lahf
mov
int
dec
ficompl
in
mov
adc
nop
cmpsl
mov
cmpsl
out
sub
fs
xor
cmp
inc
scas
outsl
inc
push
inc
pop
sbb
adc
mov
andb
add
movb
out
lret
jne
ss
mov
inc
insl
scas
adc
loope
xchg
pushf
mov
inc
mov
sti
push
outsl
dec
add
lret
gs
or
fdivrs
xor
sbb
gs
sbbb
fcoms
push
xcrypt-ofb
cmpsl
ljmp
adc
mov
inc
dec
imul
arpl
pop
fs
xor
int3
pop
mov
or
cli
out
mov
movl
jno
into
popf
out
popf
xchg
loopne
sbb
stos
cli
lahf
push
out
lods
add
addb
push
fsub
or
nop
cmp
xchg
xlat
bound
dec
xchg
das
lea
jbe
jl
pop
mov
inc
inc
sub
xchg
pop
or
dec
insb
enter
addr16
shrb
dec
mov
cmpsl
enter
movsb
mov
cmp
sub
push
sub
mov
loopne
xor
popf
daa
lods
sub
add
jae
push
stc
xchg
jl
jnp
lcall
aam
scas
loop,pn
stos
adc
add
push
cmpsl
xchg
cmp
jle
mov
adc
cs
or
mov
sbb
cmp
aas
push
out
inc
ljmp
cmp
scas
std
and
imul
fmuls
xchg
arpl
jbe
pop
jl
push
jno
fiadds
inc
push
incb
hlt
aam
pop
push
cmpsl
fstpt
lea
into
shll
test
sbb
inc
stc
dec
mov
add
outsb
outsl
insb
mov
dec
inc
lahf
gs
lds
sub
daa
dec
insb
sbb
sahf
push
cmpsb
jl
or
sbb
or
daa
hlt
jg
jge
or
add
jge
xchg
inc
addr16
call
call
call
popa
sbb
push
mov
jbe
add
dec
mov
push
out
test
stc
xchg
jp
sarl
shll
sbb
mov
ret
push
inc
cld
int3
inc
cmp
jmp
notl
call
add
outsl
jae
pop
xor
fadd
mov
add
or
stos
xchg
sub
push
aad
mov
push
rol
cmp
std
mov
xor
push
ficoml
cmp
mov
pop
inc
shlb
lcall
mov
mov
xor
pop
add
fnstcw
fldl
push
adc
enter
nop
popf
jb
test
vmovaps
mov
movsl
jbe
sbb
or
pop
jae
pop
bound
mov
cwtl
subl
pop
fs
push
dec
lcall
push
test
lds
and
mov
aam
jmp
dec
cltd
stc
pop
add
iret
orl
into
mov
jnp
loope
inc
mov
outsl
cli
ror
arpl
in
ds
nop
jge
cmp
sti
test
adc
mov
pop
or
xchg
adc
sbb
pusha
sbb
in
jae
sbb
sub
std
adc
in
sbb
inc
aam
adc
adc
jae
jle
not
mov
dec
or
sbb
decb
jge
das
and
stos
add
add
scas
lock
clc
mov
inc
fidivrl
es
adc
jge
pop
push
scas
mov
jne
ja
lret
divl
xor
and
pop
lds
shlb
out
mov
mov
addb
push
cmp
inc
rcrl
inc
inc
sahf
movsl
iret
pop
jne
ja
cmp
cmp
inc
std
sbb
cwtl
scas
testl
scas
fwait
cwtl
sarl
clc
adc
jo
xchg
mov
xchg
shrl
incl
mov
rcrb
jno
and
fs
pop
pop
mov
mov
pop
xor
mov
sti
pop
out
ja
xchg
leave
mov
shr
sub
xor
call
bound
pmullw
push
rcll
sub
out
push
jo
pop
es
ret
mov
cmp
nop
lds
rcrl
inc
push
pop
xchg
adcl
ret
or
in
jb
enter
popf
mov
pop
push
cwtl
std
add
dec
pop
mov
fdivrl
mulb
cwtl
push
cmp
lret
outsl
jae
xlat
push
leave
mov
out
dec
fwait
pushf
iret
xor
les
movsl
int3
jne
or
ficoml
lods
pusha
out
movsb
jp
pop
dec
cs
cmp
or
fyl2x
sahf
dec
mov
das
shlb
shl
shlb
xlat
push
mov
dec
push
in
add
shrl
jg
or
push
imul
bound
or
jecxz
inc
mov
xor
lcall
add
mov
xlat
xor
pextrw
sahf
int
je
and
fs
pop
rorl
int3
lret
ret
lock
stc
cld
std
outsb
push
pop
push
pop
in
or
and
movsl
testl
cli
idivl
es
jl
clc
out
and
jle
pusha
pop
sbb
sub
xchg
mov
jmp
mov
aas
fldl
int3
cld
sub
das
jg
popl
cli
xor
scas
daa
or
cmpsb
pop
sub
idivl
sbb
pop
cs
cwtl
in
mov
and
out
ljmp
int3
subl
add
jecxz
and
sbb
out
mov
xchg
es
sti
scas
and
pop
aaa
dec
xor
bound
stos
jb
out
mov
xor
pop
aad
mov
xchg
roll
mov
or
test
cltd
push
sbb
fwait
movsl
sbb
loope
xchg
lods
test
dec
cs
cld
push
outsb
or
clc
test
rcr
dec
inc
push
fsub
sub
std
pop
lods
lret
sub
cltd
and
adc
mov
pop
lret
or
cmp
out
mov
jne
pop
loop
rclb
jbe
dec
push
mov
loopne
mov
jo
add
wrmsr
mov
stos
fstpl
jecxz
je
dec
jne
aad
pop
add
in
dec
dec
mov
mov
pop
stos
pusha
mov
xor
xorl
or
scas
adc
jecxz
iret
lock
js
mov
push
inc
xor
push
xor
movsl
fdivrs
pop
test
jnp
iret
pop
xchg
mov
int3
cld
dec
cli
iret
pop
push
cmpsb
out
mov
xor
lods
sahf
aad
or
aaa
shlb
aad
and
xlat
cmp
cltd
mov
mov
lcall
clc
push
add
testl
icebp
xchg
jae
push
and
cmovp
and
cmp
decl
mov
fdivrl
mov
xchg
or
jecxz
enter
push
sbb
mov
ss
test
sarl
adc
rorl
stos
cltd
ret
popa
adc
pop
addr16
mov
mov
fdivrs
jmp
decl
mov
cli
fnstcw
jbe
repnz
mov
add
int
cmova
jae
fwait
bound
iret
pop
mov
sub
rolb
mov
mov
adc
and
lret
decb
and
out
xor
push
fstpl
dec
mov
ret
cmp
or
cmp
shll
push
cmpps
inc
shll
pushf
cmp
pop
adc
inc
orb
fs
filds
sub
cmp
or
jmp
loopne
outsb
mov
mov
inc
add
pop
nop
cmc
inc
inc
or
fistpl
aad
inc
jns
int3
and
stos
jb
add
pop
inc
leave
rorb
sub
ret
pop
and
cmp
inc
fucomi
pop
mov
dec
mov
mov
push
aas
mov
orps
push
imul
int
cmpsl
mov
imul
xchg
and
int3
jg
movsl
loop
es
data16
rcrl
or
stos
push
mov
outsb
roll
xchg
aaa
add
dec
cmp
and
mov
mov
sbb
push
das
cmpsb
jecxz
jge
aam
fsubrs
adc
sbb
inc
xchg
cmp
mov
es
mov
iret
arpl
xor
pop
aas
lret
aad
sub
repnz
adc
sbb
andb
xchg
mull
clc
mov
pop
fidivrs
push
xor
call
push
shrl
pop
and
ds
jb
dec
imul
out
xor
inc
and
push
orl
adc
push
fcoms
dec
iret
mov
sbb
dec
mov
xchg
subl
clc
push
or
int
call
sub
mov
sub
pusha
jp
cmp
push
or
sbb
xchg
js
xchg
and
sub
and
sub
je
sbb
or
rcrb
xor
mov
xchg
xlat
cmp
adc
loop
sbb
push
shl
push
mov
daa
ret
and
pop
sub
push
rcll
icebp
lahf
jp
mov
clc
ud1
popa
lret
jg
cwtl
lods
cmp
test
jb
out
pop
dec
push
in
inc
sahf
and
cmp
jecxz
xchg
pop
pop
add
jb
sub
pushf
mov
dec
sti
and
shl
mov
adc
or
mov
popf
sub
arpl
or
push
mov
jmp
cmpsl
inc
jl
xor
iret
pop
xor
insb
ja
inc
jns
jmp
adc
aas
inc
mov
inc
adc
xchg
cmc
push
shlb
es
cs
xchg
mov
push
lds
movnti
fucomp
and
dec
bound
test
dec
jno
fwait
xchg
testb
push
cld
xor
std
xlat
xchg
arpl
mov
in
jo
out
lods
shll
sahf
adc
push
out
pop
stos
inc
mov
xor
icebp
cmc
shl
into
loope
in
adc
js
or
nop
nop
jg
pop
add
add
pusha
aad
out
imul
cli
mov
jle
out
push
xchg
cmp
push
iret
fstps
mov
fs
mov
or
fidivs
adc
dec
cwtl
jecxz
sbb
mov
lret
mov
ret
mov
movsb
test
mov
pop
in
lock
and
jae
scas
rorl
inc
sub
jecxz
mov
into
mov
cmp
int
sbb
jne
lods
sbb
or
ret
cmp
popf
inc
pop
das
repnz
mov
addl
mov
adc
cmova
dec
sbb
enter
mov
imul
inc
cs
int3
ret
fldenv
xchg
sub
sbb
lret
jae
mov
in
sti
jo
shll
icebp
outsl
and
shl
clc
inc
xchg
lret
jl
das
int3
add
repz
ljmp
mov
outsb
xchg
jne
pop
mov
scas
movl
in
or
dec
enter
push
inc
xor
jl
mov
jno
mov
imul
and
test
mov
scas
mov
sub
dec
or
ret
mov
cs
ret
je
push
outsb
mov
fnsave
out
pop
subl
sbb
sar
sub
inc
iret
mov
push
mov
daa
jge
sub
mov
mov
int3
jno
cld
add
iret
xor
or
arpl
jle
into
mov
dec
fimull
mov
int3
cmp
fstpl
aas
test
sub
hlt
inc
loop
push
lock
add
and
or
push
sub
sub
roll
push
mov
pushf
lds
aaa
inc
std
bound
xchg
sti
inc
sarb
in
aaa
aaa
fadds
cs
inc
out
stc
adc
sbb
mov
nop
mov
mov
das
push
movsl
out
ljmp
sub
pop
rorl
daa
add
xchg
jbe
cmp
and
or
cs
xor
sub
inc
es
xor
int3
mov
mov
rorl
cmc
xor
cmp
stos
and
rcrl
push
jg
shll
stc
pop
pop
jo
pop
outsb
mov
jbe
adc
fisubs
dec
pop
or
insl
jge
lret
mov
xchg
insb
xor
test
stos
test
jg
ja
push
je
or
out
pop
pop
movb
stos
xor
fisttpll
xchg
lds
or
mov
mov
sahf
pop
subb
sbb
mov
stos
or
leave
xor
sub
xor
jns
and
out
jg
fsubs
lds
cmp
stc
xor
test
daa
jae
je
push
dec
int
xchg
out
cmp
negb
stos
xchg
mov
push
icebp
movsb
adc
xor
sub
ljmp
sub
jbe
cmp
and
and
out
sub
sti
fsts
cld
mov
sti
in
pop
leave
int3
inc
gs
sub
push
call
aam
xchg
rorl
movsb
jle
mov
inc
ret
sarl
std
or
lods
hlt
aaa
mov
push
push
xchg
pop
adc
fwait
xchg
aad
inc
jmp
mov
inc
aam
pop
cmp
and
lcall
dec
push
or
insb
jnp
xchg
cmp
dec
ljmp
shll
cmc
mov
xchg
out
jle
push
cmp
fdivl
mov
mov
lds
push
push
insb
in
xor
je
sahf
mov
dec
sahf
jo
mov
jbe
ror
inc
mov
inc
inc
sub
movsl
dec
mov
es
sub
jae
scas
pop
jbe
iret
int
orb
xor
or
pop
lahf
fwait
lods
lds
test
scas
movsb
jno
dec
push
cmp
sub
icebp
pop
xchg
pop
insb
ja
cltd
dec
fstpl
sub
jns
jns
das
sbb
movsl
lods
das
adc
sbb
addb
fdivrs
test
inc
imul
cmovnp
pop
shll
mov
sub
loope
jne
pushf
imul
int3
in
outsw
adc
addr16
sub
xor
fsts
aas
lods
mov
movsb
add
lret
xor
cmp
cmp
inc
xchg
xorb
stos
jge
pop
and
mov
pop
pop
dec
jge
adc
mov
gs
sbb
es
cld
out
mov
mov
jnp
mov
jmp
dec
jno
push
pop
mov
mov
test
fisubrl
nop
jb
in
loopne
lret
mov
daa
sub
dec
dec
add
xchg
negb
test
jne
mov
mov
xor
imul
push
dec
jns
daa
iret
sub
pop
movsb
or
and
sbb
mov
aas
scas
loopne
popl
sti
xchg
imul
push
adc
xchg
mov
lods
in
sub
insb
xor
xchg
enter
xor
cwtl
or
test
sbb
outsb
test
imul
pop
sub
popf
mov
mov
xor
cmpsl
fwait
jno
or
jmp
jnp
pusha
cmp
sbb
xchg
mov
filds
xor
cmp
push
adc
dec
mov
outsb
pop
or
test
pop
push
adc
dec
xchg
jmp
enter
sahf
push
aam
aad
mov
int
insb
mov
nop
iret
lods
cmp
nop
lcall
popf
popl
sbb
jle
mov
mov
xchg
inc
sbb
stos
xor
lods
sti
push
fucomp
lret
rcr
pusha
or
xor
push
insb
push
mov
adc
test
aas
mov
in
dec
iret
gs
mov
jle
sti
cmp
pop
test
loop
in
movsb
push
dec
das
pop
push
pop
xor
push
sub
ljmp
das
mov
mov
hlt
pop
out
or
xchg
push
pop
nop
or
out
andnps
jnp
hlt
push
gs
gs
cmpsb
stos
jne
and
xlat
mov
and
rclb
sbb
push
or
mov
xor
push
pop
cmp
lods
orb
mov
mov
cld
lcall
aam
pop
pop
inc
lods
ds
jge
inc
or
xchg
pop
mov
call
pop
push
or
mov
or
xchg
sub
loop
push
cmp
jecxz
popl
jle
ljmp
imul
mov
leave
les
insb
push
xlat
pop
and
dec
das
mov
lcall
into
add
xchg
mov
push
jmp
mov
fcomi
mov
pop
mov
push
stos
nop
inc
loopne
pushf
cs
sub
adc
addr16
mov
stc
ret
jo
adc
push
mov
mov
scas
subb
aam
in
xor
jno
xor
stos
dec
xchg
cmp
xchg
stos
in
lret
in
add
insl
inc
sub
xchg
mov
imul
fistpl
popf
jae
repnz
pop
push
stos
add
into
stos
xchg
lahf
dec
in
lcall
xchg
subb
movsb
sub
add
mov
push
ret
sub
fs
dec
dec
push
jae
xor
shrb
iret
xchg
xlat
inc
cmp
xchg
ret
dec
add
cld
daa
adc
test
out
scas
hlt
jmp
lret
loope
adc
cld
dec
int
outsl
xor
stc
arpl
fisubs
push
aas
add
arpl
daa
imul
outsb
adc
pop
xchg
addr16
adc
loop
mov
pushf
cmovns
xor
scas
mov
jmp
push
inc
adc
cli
lods
or
mov
adc
fisttpl
pop
inc
ja
add
sub
cli
scas
xchg
jnp
xchg
fiaddl
fwait
mov
jmp
inc
sub
cwtl
mov
jecxz
out
sub
lods
cmp
mov
outsl
push
scas
ret
movsb
andl
push
movsb
mov
cmpsl
or
push
mov
rcrl
push
insb
and
pop
xchg
inc
push
add
scas
bound
mov
out
and
je
or
jnp
pop
jmp
mov
xchg
push
adc
repnz
mov
testl
mov
fs
sub
mov
addl
jnp
filds
outsb
daa
in
js
jg
jg
fsub
lret
sub
mov
lods
add
enter
push
bound
push
mov
inc
dec
dec
cli
jnp
leave
pop
andps
call
adc
sbb
out
push
inc
test
jmp
or
out
pop
cli
imul
ror
mov
rcll
pop
dec
add
mov
out
lds
pop
andl
sub
popf
cwtl
bound
test
lcall
into
sbb
add
mov
in
imull
lea
mov
mov
mov
loopne
mov
movsl
or
scas
xchg
adc
jg
lods
and
icebp
sbb
mov
xchg
pop
cmpb
cmc
sar
pop
and
dec
sbb
mov
iret
scas
adc
daa
xor
inc
es
inc
push
lods
and
scas
loop
filds
iret
in
lgs
je
lret
cmpsl
dec
pushf
jle
pop
cmp
mov
cwtl
cli
adc
mov
cmp
aaa
adc
lret
ja
or
sub
xchg
cmp
fiaddl
and
sahf
daa
push
lahf
jecxz
sbbb
inc
mov
mov
push
test
mov
dec
jmp
cmc
std
shll
loopne
ljmp
testb
add
or
lock
xor
push
data16
jmp
pop
cmc
and
mov
into
or
xlat
add
dec
add
jno
adc
xchg
in
mov
cmp
les
push
xor
dec
insb
fwait
push
push
xchg
cmp
xchg
push
ret
loop
jbe
repnz
in
xor
mov
xlat
int3
clc
push
inc
insl
pop
das
sbb
push
or
popf
cmp
ds
into
push
sub
fcmovnu
jbe
sbb
test
out
pop
pop
psrld
inc
and
mov
adc
sub
int3
adc
push
adc
std
cmc
jge
and
cmc
mov
push
je
mov
out
push
in
mov
sub
fs
popa
fdiv
mov
test
daa
jg
fbstp
jno
roll
push
mov
pop
pop
js
jmp
jnp
mov
jns
mull
insl
sub
ds
adc
les
stos
repnz
cmpb
mov
mov
sub
xchg
jge
inc
nop
aad
imul
imul
mov
inc
lock
sub
or
out
fsts
mov
leave
cmp
sub
adc
cmpsb
jle
pop
jne
and
icebp
ret
psrld
add
addr16
inc
imul
jae
inc
push
cmpsb
jae
out
aas
repnz
mov
data16
ljmp
leave
adc
jb
lods
rclb
or
imul
and
pop
popa
inc
subb
lahf
jno
sbbl
push
imul
jge
shl
mov
jbe
mov
mov
jle
cltd
jns
icebp
cmp
mov
pop
xchg
ret
aam
imul
aas
jo
lcall
jge
shl
inc
loope
scas
pop
xor
xchg
dec
dec
pop
scas
sub
xchg
cmp
adc
xor
nop
sub
or
mov
mov
pop
pushf
lret
jecxz
imul
mov
xor
push
fwait
ss
dec
lret
sub
rcr
xchg
inc
out
scas
or
les
adc
xchg
pusha
lea
leave
orb
adc
mov
mov
inc
int
popa
ss
sbb
or
clc
aam
leave
adc
clc
push
push
push
aam
test
fists
pop
int
push
fsubrs
ret
mov
mov
in
cmc
jnp
push
jp
inc
xchg
int3
mov
cmp
jge
push
pushl
ja
pop
popf
lret
loop
inc
fadds
cmc
xlat
push
jnp
imul
lcall
cmp
lods
lea
or
lcall
and
push
push
test
add
cwtl
mov
in
insb
xor
xor
add
ret
push
sbb
fiaddl
add
mov
adc
inc
cld
mov
mov
jle
cmp
mov
cmp
mov
xor
and
cwtl
test
adc
push
pushf
dec
mov
or
push
fisttps
push
adc
or
cmp
cmp
dec
or
sub
jle
xchg
movsb
mov
int3
call
ret
cs
aas
hlt
daa
jo
mov
cwtl
xchg
enter
aad
inc
mov
mov
pop
cmpl
push
or
dec
rorl
push
nop
les
loope
mov
je
popl
xor
popf
movsl
cmp
fcomp
cli
sti
mov
jge
and
jne
data16
jmp
shr
mov
cmp
inc
insb
mov
lods
mov
mov
inc
in
push
daa
stos
enter
movsb
fldenv
popa
aad
xchg
dec
xlat
pop
cmp
lods
sti
or
call
cmpsb
push
pop
outsl
scas
pushf
jl
push
mov
push
xchg
and
mov
lret
jmp
xor
cwtl
stc
adc
movl
notb
testb
mov
fcomps
pop
jg
icebp
dec
mov
sub
sub
cltd
mov
xchg
je
aas
test
cwtl
test
sub
mov
or
inc
xor
xor
push
push
push
pop
pushf
fidivrl
bt
xchg
lret
test
iret
pop
lods
xchg
push
leave
jno
mov
ja
mov
repnz
pusha
and
ja
mov
jg
movb
bound
test
jge
cwtl
lods
outsb
mov
pusha
adc
jp
orl
cmc
and
mov
aas
cmp
shl
imul
sub
xchg
cmp
arpl
push
mov
into
dec
lds
mov
loope
enter
inc
and
mov
loopne
inc
stc
das
dec
add
xor
lahf
jl
cmp
testl
lods
jmp
mov
mov
adc
mov
push
ss
in
or
push
es
or
fimuls
inc
ret
mov
loop
popf
or
cmp
cmp
adc
push
jo
mov
mov
leave
lea
xlat
addr16
xchg
insb
jae
daa
adc
testl
xor
pop
sub
popa
mov
loopne
subl
jne
int
xchg
aaa
push
xchg
mov
idivb
and
sub
jb
cmp
out
in
jae
lods
lret
inc
and
test
push
sub
in
sub
jp
jo
nop
add
cmova
mov
sti
imul
push
jb
xlat
stc
sbb
mov
rcll
dec
fcomps
mov
ja
cmpsb
mov
push
aas
jecxz
pop
imul
jne
movsb
adc
mov
cs
mov
outsl
sbb
sbb
push
pop
repz
adc
cli
ret
mov
cmp
rcr
stos
add
sbb
insb
xchg
xor
icebp
or
mov
inc
pop
cld
jo
xor
mov
das
jb
aad
xchg
adc
and
inc
mov
out
dec
shlb
data16
icebp
sub
dec
or
std
repnz
lods
dec
xchg
daa
cltd
in
lahf
stc
inc
mov
shrb
cld
outsl
outsb
int3
out
sub
mov
cltd
insb
loope
sub
and
mov
std
es
cmp
mov
jg
int
ss
xchg
shll
dec
mov
fldcw
int3
dec
fdiv
push
adc
or
bnd
push
js
inc
outsl
cmp
mov
xor
inc
out
xchg
nop
loope
aad
push
pop
jmp
daa
add
lahf
in
jp
mov
mov
push
sar
mov
imul
scas
mov
jp
inc
mov
mov
out
in
out
pop
nop
pop
jl
mov
out
jmp
test
decl
inc
dec
xchg
pop
aam
loope
shrb
and
inc
clc
stc
imulb
enter
dec
jo
xor
aad
sub
dec
insb
scas
push
mov
fcomps
pop
aas
pop
jmp
pushf
add
enter
scas
test
ljmp
push
inc
mov
add
test
or
addb
xor
imul
loop
mov
pop
or
insl
add
sbb
rcl
js
jg
mov
sbb
loopne
mov
xor
dec
test
jo
lahf
jg
sub
fstps
xor
cs
mov
mov
or
add
xchg
jno
dec
cmpsb
cld
mov
fwait
push
mov
mov
jmp
stos
cli
inc
push
dec
lods
xchg
adc
mov
or
rorb
pop
mov
sarl
and
popf
repnz
push
xchg
cs
popl
or
pop
movsl
dec
mov
arpl
mov
dec
jle
cmp
rcll
fldl
add
pop
pop
jmp
dec
jbe
clc
lcall
or
jne
addr16
cwtl
push
aas
cmp
cmp
pop
sbb
mov
aam
lock
or
lock
adc
add
lret
mov
aaa
inc
push
sbb
arpl
xchg
lahf
mov
dec
stos
or
fmuls
pop
add
rol
sbb
dec
push
pop
lock
ljmp
add
pop
cld
sti
dec
cli
rorl
pop
dec
inc
xchg
push
cmc
pop
ss
mov
dec
adcl
xlat
test
pop
outsl
mov
pop
cmpl
icebp
xchg
mov
pop
push
xchg
pop
cmp
stos
dec
and
dec
movsb
pop
push
cltd
test
sbb
insl
jns
je
loop
mov
push
stos
jnp
loop
les
int3
jns
cmc
hlt
cmpsb
lahf
outsb
cltd
popa
xor
in
cltd
js
add
lret
dec
xchg
stc
stos
out
leave
in
or
jne
imul
xchg
xchg
pop
lods
loopne
fdivr
pop
ss
call
jle
add
lahf
lret
jns
xchg
lret
cmpl
adc
mov
movsb
testb
mov
xor
pop
out
movsl
mov
testl
and
in
add
xchg
xor
stos
dec
stos
inc
mov
pop
xchg
hlt
jle
scas
mov
test
data16
adc
inc
mov
adc
stos
and
mov
fsts
push
xor
aaa
jge
jp
push
daa
or
jae
adc
shrl
mov
xchg
sbb
fcmovu
sub
dec
movsl
insb
jl
daa
inc
jp
ret
mov
clc
sti
lret
push
das
pop
fisttpl
xchg
push
sub
lds
rorb
outsl
add
jg
mov
add
mov
adc
inc
pop
push
insl
enter
jbe
iret
dec
mov
fsubrs
push
nop
subl
fucomi
ss
insb
lea
mov
xchg
or
test
push
pop
inc
call
repnz
adc
cmc
pushf
and
or
dec
je
fsubrs
jl
sbbb
in
push
push
iret
sbb
stc
aaa
aad
mov
mov
xchg
test
clc
pop
pusha
pushf
fwait
insb
xchg
les
dec
jmp
xchg
cmp
jbe
dec
sub
cmpsb
xlat
mov
cmc
sub
scas
aad
rol
stc
add
imul
sbb
cmpsl
pop
cmp
dec
xor
mov
or
popa
stc
cmp
xor
sub
movsb
lahf
je
arpl
inc
push
push
int3
pop
mulb
mov
jae
ret
shrb
cmp
sbbb
adc
out
xor
jmp
push
es
test
scas
add
mov
and
mov
ds
fisttpll
push
xchg
insl
repnz
sbb
stos
imul
stc
sub
mov
int3
outsl
push
movups
mov
push
inc
lret
pop
sub
inc
adc
shl
cmp
add
scas
jno
incl
popf
mov
mov
cmp
sbbb
xchg
xchg
insb
cs
into
jnp
hlt
outsl
dec
jnp
cmp
and
div
int3
inc
test
add
test
cmp
sbb
rolb
ss
dec
insb
push
mov
lock
les
rcrl
lods
lret
cmpl
sub
loope
or
push
mov
gs
mov
mov
popf
stc
rep
jp
jecxz
cmp
pop
inc
adc
fdivrl
xor
ljmp
in
gs
pop
or
add
or
mov
dec
or
cli
jmp
shr
dec
ret
and
loope
jne
inc
mov
push
scas
mul
pop
incb
ljmp
out
adcl
scas
arpl
adc
push
testb
outsl
sub
mov
pop
lock
mov
jmp
movsl
ror
int3
mov
ja
pop
nop
iret
and
ljmp
or
lahf
lret
inc
add
pop
jno
dec
sarb
stc
scas
pop
cmp
loopne
jo
or
cwtl
add
adc
or
dec
insb
out
pop
dec
ret
inc
mov
lods
mov
cmpsl
xor
mov
pop
xchg
xchg
mov
or
push
data16
xchg
pop
lret
iret
and
mov
cmp
es
push
adc
hlt
cmp
aam
sub
inc
bound
jle
imul
std
fwait
popf
sbb
mov
aam
jge
popf
lret
push
roll
into
mov
xor
mov
mov
xchg
xchg
insb
mov
inc
sub
inc
pop
inc
sub
or
lahf
pop
stos
sbbb
pop
insb
xchg
adc
cmp
je
xchg
mov
push
dec
pushf
adc
xor
adc
in
xor
push
and
out
inc
mov
in
mov
stos
lds
test
jns
mov
cli
sub
inc
lcall
pop
in
nopl
inc
push
call
sarl
jp
pop
xor
dec
sub
pop
cmpsl
jnp
cmp
pusha
lock
int3
insb
ficoml
xor
mov
xchg
and
jbe
pop
bound
dec
and
test
sbb
mov
outsl
cli
inc
daa
xor
cmp
pop
adc
push
into
jg
fisubrl
inc
lods
cli
sbb
jg
mov
xor
insb
push
adc
bound
fwait
call
mov
mov
test
sbb
adc
fs
mov
mov
sti
push
inc
lock
lahf
fsubs
push
fldcw
popf
sbb
ret
cmp
mov
mov
jne
mov
cmc
lds
cmpsb
inc
cmp
pushf
add
rcrb
adc
stos
dec
aas
test
cs
push
jae
in
out
lret
pop
add
pop
subb
ss
fisubs
jne
orl
xor
jmp
cltd
std
fimull
fmuls
insb
cmpsl
xchg
outsl
sbb
pop
and
aam
add
jns
adc
mov
sbb
shl
xchg
cld
cmpsb
dec
test
dec
les
add
push
inc
push
push
imul
sub
pop
adc
in
ds
push
sti
dec
mov
scas
mov
testb
scas
ljmp
loop
fs
inc
ljmp
cwtl
inc
mov
inc
rol
out
mov
lea
or
mov
arpl
mov
imul
xor
cmp
addr16
and
sbb
xchg
xor
orl
out
sbb
pop
push
jne
divl
adc
push
sbb
fwait
scas
daa
out
xlat
jge
notl
sbb
pop
clc
and
out
and
sbb
pushf
mov
das
fsubrl
mov
mov
lds
mov
xchg
inc
loope
pop
xchg
jecxz
or
and
fs
cmp
clc
test
xchg
fmul
test
pop
mov
inc
push
es
loopne
inc
inc
push
push
popa
mov
or
mov
mov
sub
cltd
push
arpl
adc
xor
jbe
inc
fs
inc
outsb
stos
mov
js
outsb
mov
mov
jo
ja
lret
cmp
mov
fstps
and
cmp
mov
sahf
push
push
or
pushf
cs
sub
mov
call
pop
in
and
les
or
mov
jbe
lahf
into
fmul
mov
mov
movsb
ficompl
stos
nop
inc
inc
sub
mov
repz
jmp
sbb
inc
rolb
jo
je
sbb
cmpsb
subb
sub
loop
aaa
sbb
add
adc
cmc
pop
sarl
bound
jo
lds
cmp
mov
mov
pop
pop
add
dec
mov
mov
jle
mov
fsubr
loop
rcr
movsl
mov
push
sub
les
cwtl
sar
cmc
outsb
fistpll
pop
inc
jnp
sub
xchg
xchg
and
cltd
incb
dec
sbb
push
cmp
andl
jecxz
add
xchg
xor
jns
pop
xchg
xchg
xchg
outsb
pushf
push
push
or
xchg
les
in
mov
push
xchg
cmp
inc
lcall
cld
in
mov
repz
inc
sub
jne
ja
hlt
fimuls
rclb
shl
cld
rorl
idivl
or
call
mov
stos
shlb
xchg
inc
mov
dec
scas
xchg
inc
fbld
pop
mov
cli
dec
xor
icebp
or
cmp
jp
adc
push
mov
jae
sub
popa
popl
push
jbe
mov
xchg
fadd
mov
aaa
or
icebp
push
push
mov
lock
data16
lret
addr16
and
xor
scas
push
pop
outsb
repnz
outsl
cmpsl
pop
inc
mov
push
out
aad
call
sub
add
mov
shr
repz
mov
mov
sub
dec
repnz
sbb
jns
call
imul
and
shlb
std
pop
into
xlat
dec
inc
sub
stos
xchg
mov
aaa
dec
in
dec
mov
jmp
movsl
or
xor
ret
mov
mov
xor
cmc
loop
push
mov
xor
mov
std
pop
in
shlb
enter
sub
pop
sahf
push
pushf
bound
mov
inc
pop
xchg
xchg
test
shll
das
shlb
icebp
daa
mov
add
fistps
pop
jo
adc
int3
ljmp
mov
js
je
cmpsb
jnp
sbb
pop
mov
jne
loop
mov
and
xchg
jo
pushw
xor
dec
xor
cmp
sub
dec
imul
xchg
movntq
test
add
lahf
sbb
pop
orb
scas
jno
mov
addr16
in
ss
outsl
enter
ja
or
lock
rorl
push
fstpt
sub
sub
cli
nop
adc
mov
mov
push
int3
imul
icebp
xchg
jne
aad
mov
adc
mov
jo
insl
sub
in
fs
push
xchg
push
jnp
outsb
les
jg
mov
xor
rcr
xchg
mov
xor
imul
jle
sub
std
inc
je
pushf
in
and
loopne
loopne
cs
aad
call
xchg
add
xchg
mov
ljmp
dec
jnp
add
mov
out
add
xchg
adc
mov
inc
mov
scas
xor
add
aaa
add
pop
inc
and
mov
cmp
and
das
xchg
ffree
jp
cmp
jbe
int
dec
lds
outsb
cld
add
or
subb
pop
inc
cmp
mov
cwtl
dec
pop
mov
addr16
test
sub
lods
cs
js
push
xchg
dec
pushf
imul
sub
mov
dec
push
fnstcw
outsl
dec
dec
push
cltd
push
aaa
cli
pushf
decb
imul
subb
out
je
iret
arpl
dec
add
dec
jno
mov
ficoml
btc
repnz
lods
sub
rolb
jb
mov
sub
mov
lea
mov
jo
push
or
mov
add
ss
ljmp
push
stc
icebp
pushf
cmpb
inc
adc
jbe
adc
call
fidivrs
mov
movsl
std
js
pop
sub
ljmpw
sbb
xlat
dec
loopne
cwtl
xchg
mov
sub
inc
insl
push
cmc
mov
arpl
jo
enter
aam
ja
push
ljmp
ss
xchg
mov
pop
imul
sbbl
dec
pop
adc
call
jne
and
push
xchg
ja
xchg
cmp
sub
push
ret
cmp
jnp
mulb
iret
jge
push
inc
or
dec
jae
dec
push
aad
pop
aad
xchg
sub
repnz
or
sub
cwtl
jns
pop
dec
rcr
into
add
pop
cmp
int3
fisubl
aam
cli
or
mov
adc
mov
xor
jb
outsl
sub
xchg
inc
jbe
call
push
mov
pushl
or
popl
mov
es
lds
sar
inc
and
xchg
cmp
push
adc
fnstsw
in
pop
jmp
inc
loope
add
repz
std
stos
arpl
mov
orl
xchg
test
aad
into
loope
js
mov
cwtl
movsl
push
aaa
pusha
jmp
adc
add
pop
test
jge
in
js
bound
xchg
xor
fildll
stos
dec
movsb
xchg
rclb
or
xchg
pop
push
scas
les
imul
mov
scas
and
leave
pop
aas
lret
dec
pop
dec
push
leave
jl
jno
ret
dec
add
les
sbb
sub
sbb
push
movsl
out
cmp
out
mov
cmpsl
cmp
cmp
rol
xor
cmp
fdivrs
lods
push
mov
cli
dec
xor
insb
xor
outsl
pusha
push
fistpll
jnp
inc
mov
sub
xor
add
das
iret
add
sub
out
push
add
or
push
inc
mov
and
andl
pop
adc
push
test
jnp
jnp
in
mov
in
popl
test
xchg
jo
pusha
mov
in
dec
inc
mov
cltd
cwtl
lahf
dec
dec
mov
inc
loop
add
roll
push
or
aam
xchg
push
mov
mov
jl
xor
xchg
lret
out
mov
jnp
mov
fmull
push
pop
inc
mov
push
stos
sub
js
push
push
stos
mov
pop
shr
xor
cmp
xchg
inc
xchg
movsl
cmp
cmp
pop
insb
add
int
imull
dec
cmpsl
sub
jg
shll
stos
xor
lock
xor
mov
xchg
imul
adc
xchg
cmp
in
pop
dec
inc
push
jo
in
xor
or
test
outsl
lea
push
xchg
push
ja
xchg
jmp
sti
adc
push
pop
xchg
pop
lcall
shrl
test
mov
xchg
mov
mov
xor
xchg
das
pop
adc
add
jge
stos
mov
pop
pop
pusha
cmp
fildl
pop
std
leave
loopne
lret
adc
fisubrl
dec
lret
js
mov
jno
and
jge
cmpsl
cwtl
insb
fistps
fxch
xchg
pusha
cmpsb
cmc
jge
inc
xchg
pop
loopne
add
mov
sub
cwtl
mov
cmp
add
push
mov
out
imul
cld
enter
adc
jno
out
add
stc
xchg
jle
sub
rclb
or
pop
adc
arpl
jle
pop
or
pop
pop
sarb
pop
dec
mov
lods
xor
fs
loope
call
cmp
imul
repz
push
sbb
dec
js
push
pop
lcall
xor
lret
les
imul
push
jne
aaa
leave
mov
daa
and
andl
dec
mov
imul
pop
repnz
ror
pop
mov
scas
mov
adc
adc
pusha
das
jne
mov
mov
movsb
mov
xor
fildll
cwtl
jnp
push
mov
cmpsl
lcall
sarb
inc
jne
sbb
push
sub
cmc
xchg
in
push
cmp
sbbl
fsubl
ret
lock
and
push
fucomip
test
push
push
jae
add
cmp
das
test
push
loope
sbb
addr16
dec
imul
movsb
jp
xchg
add
rorb
xchg
rcrb
cld
xchg
out
mov
pop
push
push
sbb
mov
pop
and
pop
mov
jne
jmp
and
in
cmp
inc
ror
mov
mov
xchg
int3
shl
adc
inc
std
mov
mov
mov
in
lret
addr16
lods
sub
rolb
inc
pop
push
mov
inc
cmp
pop
js
mov
sub
add
mov
sbb
and
and
das
scas
mov
ret
and
adc
mov
jae
leave
jge
fcoml
insl
rcll
adc
push
xchg
jl
push
shll
add
mov
xor
and
dec
or
xchg
fildl
jg
lods
jae
push
xor
loope
popf
ret
shll
push
add
inc
lods
aaa
repnz
popf
push
repnz
jne
hlt
std
sbb
xor
mov
inc
pop
xchg
mov
aam
inc
pand
dec
adc
xchg
add
stos
test
or
pop
loopne
adc
fnstsw
pop
or
mov
inc
jge
lods
ret
cmp
andb
int3
push
stc
mov
cli
adc
pop
push
push
stc
sbb
mov
or
popa
or
pop
dec
ds
and
add
sbb
loop
inc
rcrl
sub
jae
sarl
call
mov
cmpsb
idivl
jp
adc
jge
fldcw
cmpb
mov
sub
pop
xlat
dec
push
shr
dec
jg
stc
addr16
imul
sbb
fistpll
jp
sahf
fs
sar
adc
lcall
test
les
cmpsb
mov
mov
mov
pop
sarb
and
daa
xor
sub
jno
les
fisttpl
scas
fs
xchg
enter
xorb
fcoms
sbb
pop
sub
stos
es
cmpsb
push
sbb
mov
sub
int
and
mov
repnz
orl
sbb
dec
mov
jp
add
or
push
ret
mov
adc
push
cmp
in
sar
xor
mov
outsb
inc
js
stos
repnz
rorl
fldl
inc
jnp
addr16
cmp
cmp
rorb
fmull
or
cmp
ret
push
cli
pop
cmp
mov
jno
adc
add
add
cli
leave
dec
xor
pop
dec
icebp
pop
mov
in
cmc
rol
push
sub
xchg
dec
mov
jne
mov
push
sub
inc
push
cmp
inc
pop
sub
andl
dec
outsl
pop
hlt
hlt
cld
mov
adc
xor
xor
push
jp
scas
in
into
iret
sahf
mov
sbb
arpl
test
mov
or
sbb
outsb
aad
loop
repz
movsb
and
test
ss
jno
or
xchg
std
scas
scas
movsb
decb
cwtl
clc
std
ja
push
int
cmc
sbb
movsb
fnstcw
xor
push
pop
test
cmp
xor
cmp
iret
jl
add
pop
push
mov
out
jecxz
loope
mov
pop
jg
xlat
xor
inc
pop
enter
xor
and
mov
mov
out
lcall
mov
adc
or
rcr
mov
sub
push
decl
pop
mov
inc
adc
xchg
movsb
xchg
sbb
jp
arpl
outsl
leave
pop
cmp
lods
shl
xchg
icebp
mov
mov
roll
ret
pop
stc
divb
xchg
or
pop
lock
xor
in
sti
out
mov
shlb
xchg
lahf
jg
adc
aad
ret
push
jmp
push
mov
ret
shl
push
mov
in
imul
js
adc
loope
push
pop
pusha
sub
xchg
cld
mov
mov
addr16
shlb
ficompl
mov
sub
cmpsb
lret
cmp
adc
bound
fdivs
lock
out
sti
mov
out
push
jbe
cmpsl
add
outsl
in
out
fidivs
cmc
jbe
xchg
adc
es
xor
scas
jbe
fdiv
mull
push
std
sbb
scas
mov
mov
dec
or
mov
xchg
loope
mov
aam
xchg
in
inc
aaa
mov
cmp
in
mov
fists
pop
lret
push
adc
jno
cwtl
jp
add
sub
sbb
ja
push
jnp
je
stc
inc
pop
call
xor
cs
mov
and
and
outsb
pop
bound
out
nop
mov
pop
sbb
jge
or
jae
addr16
mov
enter
cmpsb
pop
cmp
jmp
repz
movsb
aaa
push
cmp
addr16
sub
testl
xor
in
popa
jmp
sbb
decb
or
mov
in
jge
jecxz
shrl
pop
cwtl
xchg
cmp
pop
lahf
popf
cmpsl
inc
lcall
and
mov
call
mov
insl
aad
loope
imul
jmp
test
lods
into
add
mov
jne
inc
pushf
push
movsb
push
js
mov
mov
pop
inc
push
mov
add
xlat
xchg
cmp
jl
dec
arpl
es
inc
cltd
pop
jne
cmp
cs
push
and
lret
out
popf
cli
pusha
and
adc
je
mov
insl
xor
jnp
mov
push
loope
sub
test
ss
adc
call
jl
jl
add
dec
pusha
pop
push
pop
sub
and
sbb
xchg
cmc
xchg
jae
popf
rcrb
orb
stos
and
in
sbb
insb
xor
jg
test
dec
test
xor
lret
xchg
in
push
jmp
andl
out
int3
je
popf
lret
xorl
mov
mov
cmp
or
xchg
lds
or
xor
push
mov
inc
mov
pop
ret
movsl
xchg
mov
xor
rolb
mov
icebp
rclb
sub
jp
pop
test
xchg
inc
int
lahf
pop
enter
repnz
sbb
outsb
cmp
lea
rcrl
inc
lret
push
mov
push
and
xchg
pop
xchg
in
dec
mov
or
in
mov
cli
push
repnz
outsl
enter
inc
icebp
push
and
mov
bound
fildll
or
addr16
in
lds
outsb
push
mov
in
jo
sarl
fdivrl
xchg
mov
and
push
movsl
or
rcl
mov
fsubrl
push
push
cmp
inc
push
xchg
repz
lock
lods
movq
and
xorb
mov
popf
jmp
inc
sbb
out
sbb
push
mov
insb
clc
idivb
iret
mov
push
adc
jmp
pop
fsubrl
movsl
fbld
subl
xorb
loopne
xor
sub
cltd
pop
inc
cmp
les
cmpsb
sub
mov
jns
dec
xlat
les
mov
loopne
pop
jbe
inc
mov
leave
std
or
scas
add
test
je
stc
mov
push
jle
mov
loope
mov
cs
cmp
xchg
inc
xchg
dec
mov
fdivrs
dec
in
adc
aad
adc
dec
xor
imul
and
sub
xor
xchg
aas
clc
lea
push
mov
inc
mov
shlb
call
jne
out
cmpsl
jp
xchg
js
mov
cmc
jns
dec
fwait
imul
inc
cltd
mov
sub
ss
and
je
rcl
mov
addl
lret
in
addr16
mov
imul
adc
cwtl
pop
add
outsb
subl
test
loop
dec
dec
push
inc
sub
push
imul
loopne
lcall
clc
pop
or
inc
shl
ds
push
cs
cmp
adc
in
jns
mov
mov
push
addr16
stc
test
sahf
mov
dec
mov
test
mov
dec
or
shrd
push
icebp
inc
push
das
test
sahf
hlt
pop
jge
lds
and
pop
in
out
mov
cld
mov
cmc
push
jae
es
push
pop
mov
rcll
or
mov
or
add
dec
es
sub
push
and
shll
popa
subl
repz
xor
sti
sbb
call
sbb
hlt
test
call
mov
xor
or
add
iret
clc
push
jg
std
cmpsb
sub
mov
in
fs
mov
out
clc
sti
enter
xchg
cmovle
rolb
mov
dec
xchg
sub
xchg
dec
outsb
cmp
iret
cmp
pop
push
sahf
jmp
lret
out
add
imul
cmp
loop
jmp
scas
xchg
push
sbb
call
lahf
push
out
mov
sti
mov
loop
ret
push
jle
xchg
roll
inc
push
cmpsb
lret
jae
adc
stos
mov
orl
cld
test
out
sti
daa
and
dec
std
inc
lock
sub
push
add
sub
shrl
test
movsl
inc
push
les
dec
xchg
rcr
mov
call
sbb
shrl
aaa
mov
stc
int
push
mov
lds
dec
idivl
mov
pop
xor
incb
add
push
popa
mov
enter
jno
shlb
stc
test
dec
iret
jns
nop
test
inc
repnz
loope
mov
mov
call
dec
xchg
fildll
lods
sbb
jns
in
or
hlt
dec
jge
sub
sti
inc
es
push
dec
jo
scas
sub
daa
negb
push
call
push
pusha
pop
lret
add
movsb
daa
ret
out
inc
aad
mov
ss
sbbb
xor
push
pop
out
clc
int3
in
xchg
fs
pop
jae
mov
mov
out
lock
insl
lods
repnz
mov
ja
lahf
scas
les
pop
data16
push
jp
test
push
dec
cld
mov
pop
test
lahf
mov
mov
jnp
cmpsl
mov
xor
sub
bound
negl
xchg
cmc
es
and
jp
mov
mov
pop
rcll
dec
push
sbb
loope
sub
dec
lcall
dec
pushf
mov
hlt
cmpl
cmpsb
inc
mov
xchg
cltd
cmp
leave
addr16
addr16
mov
cmp
lret
sub
xlat
pop
inc
xchg
adc
mov
std
dec
xor
xchg
in
mov
adc
std
jbe
pushf
mov
ss
cmpsb
fsubrs
push
jmp
add
dec
bound
mov
jns
push
cli
inc
and
and
mov
pop
dec
mov
std
jg
call
cmp
jmp
inc
ret
and
ret
and
fwait
pusha
fdivs
mov
clc
enter
nop
cmp
mov
push
pop
fsts
lea
int
imulb
roll
mov
push
add
into
cwtl
bound
add
iret
fcmovb
mov
push
sbb
sub
push
ss
inc
sahf
push
pop
int3
push
jno
sub
push
dec
or
mov
xor
and
insl
scas
mov
mov
ret
cmpsl
mov
pop
or
inc
testb
jl
cmp
roll
sub
and
lock
add
inc
ret
cwtl
sub
push
rcll
inc
popa
ror
lahf
pop
gs
popf
push
rcrb
insb
popf
fistpl
xor
sbb
mov
cmp
call
aad
fnstenv
sub
xchg
addr16
xor
fstpt
pop
insl
aam
inc
fwait
push
scas
repnz
cmp
es
fstp
lret
or
mov
dec
and
outsb
xor
sbb
add
adc
fisubs
pop
lods
mov
test
inc
out
nop
adc
iret
clc
xlat
test
rolb
cwtl
testl
test
repnz
rorb
scas
xor
mov
sbb
stc
cmp
push
inc
dec
frstor
sub
nop
mov
loopne
mov
imul
sbb
loop
stos
or
mov
in
mov
jne
mov
and
pop
mov
lret
movsl
fs
insb
add
lods
push
lds
mov
pop
or
mov
rcll
jl
xchg
stos
insb
pop
lds
pushf
cmp
pop
es
dec
mov
cli
movsl
mov
adcl
ds
cmp
jp
adc
xchg
ffree
std
fimull
popa
pop
clc
aam
loope
js
inc
fprem1
mov
fmuls
pop
cvttps2pi
or
in
sub
subb
cmc
notb
xchg
ja
ds
je
sub
int3
or
les
addl
call
inc
imul
inc
leave
adcb
adc
mov
dec
dec
jg
xor
push
lds
inc
add
and
cmp
xchg
je
xor
addr16
sbb
mov
notl
in
adc
mov
jne
and
xor
inc
cmp
pop
and
or
mov
push
jp
rcrl
jecxz
add
push
stos
pushf
xchg
push
or
jge
inc
xor
adc
jne
pushf
add
cmp
xor
xchg
mov
test
fldt
inc
and
mov
stc
add
sub
call
repz
xchg
dec
push
inc
mov
xor
cmpsb
cmp
icebp
dec
push
xor
dec
jmp
loop
jp
mov
inc
xor
jns
sbb
sysret
xchg
jae
sahf
out
cmp
stos
testl
pop
js
test
je
inc
pop
inc
mov
loop
outsl
sarb
int
clc
fs
pop
adc
inc
lcall
dec
in
mov
fnsave
push
insb
shrb
outsb
push
lds
push
int
sub
add
out
add
mov
stos
aaa
ret
aam
mov
push
imul
hlt
shrl
decb
es
repz
loopne
ja
xchg
pop
aad
sbb
stos
imul
jno
js
ss
mov
and
pop
scas
pushf
clc
jmp
adc
lcall
shl
popa
xchg
int
mov
push
les
pop
add
inc
insb
divb
jno
in
mov
icebp
cs
test
adc
fldenv
mov
cwtl
push
mov
mov
cmp
shrb
and
mov
jle
fs
jae
in
push
push
fwait
mov
mov
pop
add
push
xchg
cmc
mov
jae
xchg
lods
pop
pop
mov
cwtl
jg
mov
jl
inc
out
es
xor
mov
inc
mov
imul
add
jge
ret
stc
sub
mov
sbb
lods
rol
inc
fildl
leave
scas
mov
mulb
jle
adc
aad
mov
ljmp
jo
daa
test
inc
push
gs
sar
and
xor
aas
cltd
pop
cmpsl
mov
adc
mov
push
and
xlat
mov
adcl
xchg
js
add
repz
stos
adc
mov
adc
sbb
mov
add
sahf
rclb
or
adc
insl
adc
mov
bound
dec
sti
clc
int
mov
push
xchg
inc
or
lea
int3
jg
lcall
iret
inc
pop
jb
les
je
in
ja
mov
popf
test
mov
jns
hlt
inc
fdivl
sbb
inc
leave
cmp
fidivrs
sbb
aad
xchg
mov
inc
adc
push
loop
cltd
out
inc
xor
jp
jmp
adc
out
imul
pop
cmp
sub
enter
lret
repnz
adc
ss
sbb
in
sub
dec
mov
scas
jmp
fistps
mov
movsl
push
mov
repnz
xor
fisttpl
and
pushf
leave
push
jl
xchg
es
add
scas
sbb
mov
bound
jg
adc
and
call
std
jno
fnstcw
mov
inc
xchg
pusha
sub
imul
jns
push
in
xor
jbe
inc
push
or
shlb
mov
jp
sbb
xchg
jb
mov
and
xor
ss
aas
inc
sbb
sbb
pop
pop
ds
sbb
clc
mov
jp
mov
add
sbbl
mov
cmp
fstpt
es
loop
xor
sbb
jnp
js
lock
xchg
jle
outsl
gs
xor
xchg
dec
pop
cmpsl
xor
clc
mov
pusha
mov
push
push
xor
sub
mov
enter
mov
push
dec
pop
insb
pxor
movsb
jb
test
mov
push
sbb
clc
jg
cmpsl
into
jmp
rclb
stos
xor
xor
mov
movsl
jge
divb
pusha
insb
mov
hlt
sahf
into
out
pop
arpl
rorl
and
mov
lret
pop
jns
outsl
push
scas
xchg
or
cs
mov
adc
gs
push
jne
add
and
and
lods
push
rorb
add
mov
xor
push
repnz
je
mov
sub
push
loopne
mov
fiaddl
hlt
fs
data16
lret
push
push
mov
js
int
mov
and
pop
mov
dec
out
push
adc
in
orl
lcall
jecxz
pushf
mov
test
sti
xchg
ljmp
ljmp
lea
mov
sub
inc
add
push
dec
mov
pushf
fisttpll
and
addl
mov
adcb
data16
adc
aaa
sub
mov
pop
mov
pop
xchg
leave
mov
inc
mov
js
mov
sub
rcll
push
push
and
jae
or
ljmp
dec
sub
and
or
mov
adc
xor
jl
ss
adc
jae
adc
out
sub
js
jno
jnp
sub
sbb
lret
push
xor
out
outsb
bound
sbb
xchg
xchg
shr
jle
pop
push
dec
jns
xor
pop
push
xchg
ret
and
add
jo
push
dec
test
aaa
mov
cmp
xor
rcr
jbe
mov
test
sbbl
add
pusha
insb
hlt
dec
sbb
jmp
in
cmp
cld
xchg
insl
xor
scas
push
int
lahf
cmp
mov
lds
cs
js
adc
addr16
je
fs
mov
je
fwait
call
fbld
jp
call
adc
insl
lock
sbb
hlt
repnz
xor
clc
mov
enter
dec
xchg
inc
sub
inc
lret
jle
push
loopne
xor
sti
pop
add
dec
mov
push
sub
nop
pop
xchg
fsubl
dec
jae
mov
or
dec
cmpsl
add
xchg
repz
mov
or
xor
repnz
push
inc
loope
cmp
addr16
data16
sub
cmp
cli
gs
xor
movsb
mov
repnz
xchg
bound
mov
test
fistps
push
inc
repnz
inc
rclb
and
push
in
nop
fisubs
arpl
cmc
pop
loope
pop
and
pop
adc
mov
pusha
or
mov
lcall
std
rcll
mov
scas
int3
pop
mov
adcl
cmpsb
xor
push
lock
mov
pusha
cmpsl
rcll
mov
out
ret
cmp
and
std
pop
notl
and
mov
and
lret
cwtl
jmp
jg
dec
loope
push
fbld
add
jl
jge
pop
xchg
shlb
adc
mov
mov
in
cwtl
das
push
adcl
mov
hlt
or
lods
lock
stos
pop
lret
ja,pt
paddsw
js
adc
push
lock
mov
outsb
or
lret
stos
cmp
xchg
jnp
cmp
lods
lock
add
cmpsl
lds
addb
push
aam
pop
dec
pop
daa
dec
xor
pusha
sub
inc
inc
call
das
fisubrl
fisubrs
and
movsl
fwait
dec
sub
add
imul
ret
ret
enter
add
or
or
mov
dec
rcrl
gs
loope
jg
cs
fdivrl
lods
jne
adc
sub
in
hlt
data16
notb
movhps
xchg
insl
sbb
or
or
lods
cmp
dec
mov
pop
gs
dec
aam
inc
dec
mov
jle
push
mov
jle
lret
int3
ret
sbb
pop
push
cs
inc
iret
lods
pushf
movsb
fcmovnbe
dec
andb
adc
movsb
push
jle
push
aad
icebp
xchg
cld
dec
rol
push
lret
sar
xor
jecxz
out
aad
js
adc
sbb
popa
jle
jp
dec
in
loope
leave
jne
jnp
xchg
push
fsubr
ja
mov
ljmp
mov
nop
jl
addr16
outsb
jae
jle
pop
push
shl
in
in
mov
pop
cld
stc
dec
repz
jecxz
mov
sbb
add
out
jne
loopne
cmp
xchg
dec
stos
and
xor
or
sbb
lods
stc
orb
inc
and
inc
bound
cmp
xchg
sub
loope
lds
out
repz
and
xor
jne
ljmp
mov
fdivr
ja
fnsave
mov
cltd
fs
in
mov
pop
pop
xchg
mov
sub
pop
sbb
or
imul
pop
scas
int
outsl
or
sub
jae
mov
adc
rcll
lods
lods
stos
add
ficoms
popf
ret
and
shlb
stc
movsl
pop
clc
dec
andl
lret
and
lods
insl
test
ljmp
cmp
jb
add
sub
lret
fsubrl
jnp
hlt
pop
push
sub
sarb
icebp
sub
jecxz
test
test
js
rol
cmpsl
sbb
xchg
aaa
or
mov
add
adc
push
mov
popa
icebp
and
mov
jecxz
add
inc
mov
cmc
ret
mov
imul
xorb
lods
lock
ss
mov
xchg
mov
adc
pop
je
in
lea
js
and
inc
insb
outsl
dec
mov
inc
pop
dec
inc
mov
push
in
dec
xor
jbe
cmp
pusha
cmp
xor
inc
fs
dec
mov
cmp
into
out
and
cld
call
pop
rcrl
outsb
mov
icebp
pusha
cmpsb
xchg
lahf
adc
jg
std
push
push
je
notl
dec
add
sbb
cwtl
dec
mov
fcomps
stc
cmp
out
lods
sahf
cmp
pop
in
xchg
sub
sbb
jp
mov
mov
jle
je
lds
pop
in
repz
mov
xchg
enter
pop
cmp
or
int
es
lods
or
out
adc
sbb
xchg
or
mov
xor
in
inc
les
mov
inc
add
iret
sub
fs
jl
sbb
insb
ret
mov
out
xor
pop
insb
into
rcr
cltd
pop
subl
dec
xchg
mov
test
test
adc
imul
push
hlt
mov
mov
in
nop
pop
ss
aaa
xchg
adc
mov
xor
adc
imul
cmp
pop
mov
push
icebp
popl
push
orl
pop
xlat
jno
or
push
mov
adc
cmp
and
daa
pop
in
aam
vpsraw
stc
cmp
mov
sub
pop
in
out
andb
pushf
jg
pushf
pop
scas
mov
pop
loop
xchg
dec
cmpsb
scas
fwait
cmpl
jne
cmp
inc
cwtl
or
lock
push
inc
mov
add
insl
data16
sti
xchg
fcompl
pusha
fistpll
push
add
mov
jmp
push
divb
notb
xchg
movsb
push
mov
push
or
mov
jle
adc
and
jo
xor
jle
std
mov
imulb
lods
push
sub
shlb
test
push
jl
sti
sbb
leave
iret
sti
xor
add
or
mov
repnz
daa
sbb
jg
out
jecxz
and
pop
cmp
jp
mov
mov
push
fadd
or
mov
push
fcoms
js
or
orl
dec
mul
inc
shl
jnp
loopne
push
adc
out
aaa
dec
mov
lock
push
fucomi
cmp
jae
add
cmp
lock
inc
nop
neg
inc
stos
scas
pushf
xor
pop
sbb
mov
pop
cmpsl
cld
adc
stc
fucomip
jae
and
cs
in
xchg
scas
mov
mov
cltd
lds
test
js
mov
lds
xor
hlt
arpl
and
out
sbb
movsb
fnstcw
lds
shlb
ficomps
nop
or
mov
scas
pop
adc
dec
mov
sbb
mov
scas
xor
pop
sub
or
pop
push
mov
dec
arpl
push
addr16
fs
and
push
ja
mov
and
out
sbb
adc
sarl
push
sahf
push
je
jb
stos
dec
xchg
and
sub
jge
cld
jl
jns
sub
aad
ret
jge
pop
rcrb
movsb
inc
in
adc
call
mov
xor
pop
cmp
movsb
or
cmp
dec
sbb
and
add
mov
repz
mov
inc
add
and
mov
mov
mov
jmp
sub
inc
xchg
sbb
or
roll
daa
pop
in
pop
cmc
mov
jge
movsb
cmc
push
sbb
scas
jmp
pusha
shlw
inc
mov
mov
and
and
decl
outsl
sahf
fwait
mov
scas
sbb
adc
mov
sbb
lahf
into
push
out
negl
adc
mov
gs
jno
push
push
sub
adc
push
sbb
mov
xchg
cmc
xchg
js
es
nop
push
inc
pop
jno
lock
jo
push
divl
mov
into
sbb
enter
gs
mov
filds
pop
inc
jle
sarl
push
xchg
jg
mov
cmp
push
and
push
mov
xchg
icebp
add
mov
dec
sub
fisubrl
and
aad
ret
sti
or
push
mov
mov
jne
cmp
das
sub
lea
test
hlt
adc
cmc
inc
iret
pop
mov
movsb
sahf
pop
es
scas
in
inc
stc
cmp
in
lods
cmp
aas
jmp
sbb
imul
lods
dec
dec
popf
or
dec
mov
dec
fsubrs
sar
sbb
rorl
xchg
push
xor
das
pusha
sbb
test
pop
test
cltd
dec
int3
inc
xor
movsb
mov
sbb
in
add
lods
cmp
mov
and
jbe
xor
das
inc
shll
and
test
repz
cmp
jne
mov
sbb
pop
xchg
in
pop
adcb
inc
ret
je
movsb
addl
fiadds
push
cmpl
dec
jge
ret
icebp
insb
ret
xor
ljmp
fiaddl
hlt
cmc
cmp
and
test
mov
adc
jp
hlt
jnp
inc
adc
into
jne
lods
adc
ret
aam
add
sbb
idiv
rorl
repnz
loope
cmp
popa
or
mov
lahf
gs
std
in
cli
cmp
push
fwait
add
push
stc
dec
popa
pop
push
fsubr
mov
mov
pop
push
mov
lods
jmp
jnp
push
pushf
sub
cli
xor
cwtl
out
stc
mov
addr16
loopne
mov
repz
inc
xchg
cli
sti
ja
std
pop
mov
mov
js
adc
sti
jns
mov
sub
dec
mov
push
cld
mov
pop
dec
fisubl
fldl2e
push
call
mov
and
jp
sbbb
mov
cld
push
dec
push
addr16
fs
sbb
jno
outsl
cmp
std
xchg
mov
dec
in
pop
test
mov
push
popa
out
add
pop
pop
sub
rcrl
add
imul
aas
repz
outsl
inc
cmpsb
dec
fstl
loopne
icebp
adc
dec
jbe
scas
add
jl
xchg
mov
pop
gs
push
pop
in
or
sub
lret
sub
in
popa
or
xchg
mov
loopne
pusha
fstenv
pop
mov
out
mov
imull
call
lods
mulb
scas
jl
jmp
pop
addl
test
repz
xchg
fabs
add
imul
dec
add
movsb
add
int3
xor
push
loope
sub
push
movsl
and
jle
sbb
fisubrl
lret
icebp
mov
dec
ds
insb
mov
push
adc
subl
jmp
push
je
push
xchg
push
or
sbb
xchg
and
das
pop
add
pop
scas
mov
mov
mov
loop
jb
dec
adcb
roll
sbb
mov
mov
mov
scas
dec
adc
lods
imul
mul
in
adc
fwait
mov
and
fld
mov
fstpt
mov
std
mov
xor
cmp
insl
test
jle
push
mov
popa
mov
and
mov
and
gs
sub
fstl
insl
ficoms
icebp
jg
push
push
in
rolb
divl
mov
mov
lret
pop
lock
aas
hlt
and
mov
sbb
or
popf
mov
aaa
dec
fwait
mov
divb
adc
lds
iret
xchg
adc
push
std
hlt
xor
xor
and
push
lret
cmpsb
testb
sbb
lcall
sbb
or
mov
scas
stos
sahf
push
cmp
or
in
ss
int3
push
mov
faddl
pop
xorl
lods
stc
xchg
iret
dec
adc
dec
mov
mov
cltd
or
inc
daa
movsb
cmc
insl
push
adc
stos
mov
or
outsb
or
cs
inc
mov
popa
icebp
test
pop
sbb
fdivp
nop
xchg
sbb
pushf
and
push
xor
jecxz
addr16
scas
psubw
mov
jne
enter
lret
sarl
int3
push
bound
ret
mov
repz
dec
add
mov
adc
mov
add
das
leave
adc
sub
adc
cltd
adcl
cmp
and
hlt
mov
cltd
call
and
scas
cmp
jecxz
test
stos
dec
sbb
jp
in
sub
std
adc
jbe
xchg
jbe
cmp
xor
mov
or
in
ficoms
lret
fistps
sbb
pushf
cmp
mov
leave
outsb
adc
dec
sub
push
out
cmp
jo
jmp
clc
fmull
arpl
sbb
jns
add
adcl
dec
sub
lret
lahf
pushf
out
out
xlat
repnz
movsl
sarl
sbb
fisubrl
or
int3
insb
ja
decl
mov
cmp
jecxz
pushf
and
ret
data16
or
shll
fcoml
cs
aaa
jl
stos
lds
int3
pushf
push
sarb
stc
fcoms
mov
cltd
jmp
lret
inc
or
add
sbb
mov
push
stos
pusha
cltd
aam
and
repz
repnz
mov
icebp
jns
fistpl
xor
mov
and
sbb
repz
cmpsb
shr
mov
dec
fsubrl
fisubrl
sub
lds
mov
jmp
push
jb
and
pusha
push
movsb
ficompl
mov
and
loope
cmpb
in
lret
ja
add
xorb
inc
les
pop
roll
sbbl
cmp
sub
mov
add
cmp
pop
in
in
jl
mov
jg
pop
and
mov
fwait
je
jmp
mov
mov
subl
mov
or
jecxz
push
aas
xchg
pop
inc
jns
sbb
dec
xchg
sbb
repz
int3
and
xchg
mov
cmp
mov
sahf
cmp
addr16
in
mov
sub
dec
icebp
fldl
out
xor
cmc
xchg
gs
sbb
xor
arpl
xchg
fcomip
notl
xor
cltd
cwtl
addr16
mov
and
push
cmp
js
mov
enter
sbb
outsb
fisubl
stos
pop
sahf
data16
cltd
mov
mov
and
or
jmp
test
mov
sub
inc
fsubr
adc
out
jge
cmp
xchg
insb
add
cmpsb
test
cmp
subb
enter
xor
dec
mov
xchg
and
repnz
inc
pop
push
xlat
mov
xor
push
push
mov
mov
lods
xchg
loope
push
dec
jl
iret
shrl
jno
inc
lcall
and
lret
scas
adc
xchg
std
movb
ja
sub
push
mov
mov
inc
mov
mov
popf
enter
push
dec
sarb
mov
movsb
mov
pop
mov
xchg
fwait
mov
cmp
loop
notl
loope
iret
push
push
xor
adc
fiadds
lods
imul
push
sbb
insb
andl
jne
call
mov
test
push
pop
xor
pop
bound
ja
enter
cmp
push
adc
sub
das
bound
pop
ds
jb
mov
dec
and
mov
cmp
xor
mov
loopne
sti
lds
movsb
in
adcl
loop
mov
lods
pop
es
dec
cld
mov
imul
cmp
out
sti
pop
push
clc
movsb
jbe
push
and
mov
aas
iret
in
stos
ficomps
add
add
stc
cmpl
sbb
cmpl
inc
nop
dec
loop
jnp
int3
js
jne
fcomp
clc
cltd
pushf
push
pop
mov
mov
pushf
loope
cmp
sti
mov
sahf
or
nop
aad
cmp
cs
jle
dec
adc
movsl
sub
lret
notl
xchg
iret
orl
cmp
fistps
inc
inc
and
add
hlt
iret
lcall
fcmovne
movsb
aas
hlt
fsubl
cmpsb
jne
imul
into
cmpsb
in
jp
or
sbb
out
push
icebp
int3
cmc
fs
daa
mov
xor
lahf
int3
sarl
mov
jne
sub
cli
xchg
mov
jle
and
jo
jae
daa
xor
mov
xor
pop
fistpl
sbb
sub
pop
push
imul
stos
iret
daa
fwait
push
jae
sub
aad
jb
insl
fs
aas
dec
xlat
icebp
int
fwait
pop
inc
mov
cmp
jnp
xor
jg
jge
gs
mov
cmp
push
fldl
test
add
sahf
inc
fmul
sub
sbb
cli
iret
scas
cli
pop
adcl
dec
mov
sub
mov
and
jae
and
push
push
pop
add
into
or
stc
cmpsb
pushf
cwtl
in
add
out
push
cmc
stos
sbb
insl
add
ds
jb
lret
inc
mulb
jnp
mov
arpl
dec
repnz
sbb
cmpsb
adc
pop
out
and
and
rorl
sbb
mov
mov
arpl
mov
xchg
lods
inc
dec
movsb
mov
mov
negb
xor
jg
push
xchg
popf
scas
inc
fiaddl
imul
add
mov
loopne
filds
faddl
sbb
aam
jbe
mov
je
loop
cltd
shrb
imul
or
mov
cmp
int3
fisubrl
jbe
fwait
sti
xor
sbb
pusha
int
ljmp
xchg
mov
jbe
cs
or
adc
cltd
mov
jno
xor
jae
adc
rorl
sbb
sbb
insb
aaa
movsl
xor
call
or
xor
std
jns
push
jb
sbb
xchg
fstl
lea
test
mov
sbb
xor
xor
test
scas
push
inc
std
push
jecxz
xchg
in
push
loopne
ds
cmp
push
les
mov
lea
xchg
scas
pop
adc
test
or
daa
popa
mov
adc
mov
pop
adc
cld
add
inc
adcb
lods
popf
test
fs
mov
movsb
cmp
adc
dec
dec
iret
cmp
jno
dec
cmp
adc
pop
fsubrp
je
mov
shrb
mov
cmpsl
push
xor
in
jmp
sbb
lods
mov
mov
ret
mov
jle
xlat
inc
adc
mov
out
xor
mov
divb
stos
mov
notb
jae
mov
and
mov
cmp
mov
mov
mov
out
cmp
dec
loopne
mov
incb
pop
mov
and
pop
cli
imulb
jg
sbb
cmp
fiadds
outsb
mov
popa
cmp
mov
ss
pop
mov
fwait
dec
pop
xor
inc
inc
mov
or
out
add
dec
or
and
cmc
sub
inc
dec
add
decb
imul
fsubp
mov
popf
subb
ja
add
lahf
movsb
adc
imul
shlb
imul
data16
loop
and
test
imul
popa
pop
and
pop
in
loope
jmp
inc
cmc
mov
pop
cld
mov
aad
stc
imul
loop
push
mov
jmp
test
ljmp
stc
ret
dec
stc
jb
xchg
cmpb
jbe
addr16
rcrb
ss
xchg
jno
pop
in
in
or
orb
or
pop
lods
dec
adc
shr
dec
negb
jns
fadd
stc
pop
int
xor
scas
loopne
xchg
bound
dec
testb
xlat
cld
outsb
inc
addr16
sbb
ret
push
jno
loopw
add
shrl
fildl
jmp
cwtl
mov
pop
aas
and
fsubs
dec
sub
rcrb
mov
jo
mov
shrb
jecxz
cli
bound
jmp
cltd
pop
lds
jle
clc
mov
shll
mov
jb
movb
pop
out
xor
hlt
gs
pop
test
call
es
add
xchg
lock
inc
or
adc
adc
outsl
xor
dec
mov
pusha
push
mov
jnp
fcoml
iret
mov
pop
enter
push
jmp
roll
push
ja
sub
int3
test
loop
mov
jge
xor
sbb
mov
cltd
pop
xchg
les
mov
hlt
leave
out
dec
out
jp
gs
leave
out
cmpsb
roll
leave
jmp
add
rclb
cmc
int3
ss
jno
daa
sub
xchg
pop
icebp
and
pushl
das
cmp
push
dec
add
imul
xchg
sarl
adc
xchg
dec
cmpsb
andb
cmp
aas
sahf
cs
loop,pt
cmp
int
lock
dec
das
xchg
xchg
push
daa
out
fiaddl
push
adc
sub
fisubrl
cmc
jl
lods
mov
mov
mov
repnz
or
push
sbb
jmp
pushf
add
fldl
pop
dec
bsr
mov
test
sub
add
fwait
and
or
insl
xor
xor
or
pop
loop
dec
inc
aad
shrb
push
mov
fisubrl
jl
lahf
in
pop
movsb
fcmovnb
sbb
out
and
dec
cwtl
int3
shll
pop
mov
push
cmp
ficoml
or
lea
mov
in
mov
packuswb
and
xchg
dec
inc
test
mov
pop
insb
push
pusha
cmpsl
xchg
mov
fsubrp
dec
xor
push
jl
shl
in
lret
aad
lock
xorl
lahf
mov
test
icebp
jnp
xor
mov
scas
into
jae
insl
add
test
adc
fs
popf
fildl
fsubrl
popa
jnp
sbbb
jne
sarb
jae
mov
ret
sbb
ljmp
or
js
add
mov
dec
add
inc
jp
aam
xchg
mov
and
cmp
xchg
ror
xor
int3
notl
out
push
or
mov
add
mov
outsb
ret
cltd
pop
int
ljmp
cmp
adc
loopne
jns
std
lods
xor
sub
addr16
dec
sub
insb
roll
sarl
cmp
dec
and
lods
addr16
mov
xchg
call
pop
divb
add
lret
stos
js
xchg
ss
lods
inc
sbb
movsl
add
cmp
aad
or
fistpll
adc
or
mov
push
popl
in
pop
mov
pusha
bound
pop
aad
dec
iret
lock
iret
sub
test
movsb
jbe
sub
ds
xchg
mov
loope
out
jp
cmp
daa
fldt
sahf
xor
mov
jb
scas
xor
out
test
loop
and
insb
push
fimull
dec
rclb
cltd
sub
lahf
dec
jmp
call
jo
pop
push
iret
jno
add
sub
loop
jne
aad
mov
roll
cmp
test
xchg
and
cmp
jge
cmc
scas
stos
or
mov
inc
in
js
cmp
stos
push
mov
inc
insl
cmp
aaa
xlat
lods
sbb
pop
test
das
outsl
and
mov
xchg
and
fldcw
mov
addr16
push
push
push
or
stc
adc
popa
push
jns
mov
xchg
add
mov
in
add
or
clc
mov
cmp
ret
dec
xor
notl
mov
adcb
faddl
inc
adc
fs
or
mov
jne
jb
push
std
bound
ret
sahf
subb
ret
jo
dec
add
aad
popa
in
sbb
lcall
and
loop
push
pop
mov
push
imul
fisttpl
mov
rorb
adc
hlt
mov
ja
addb
jne
and
xor
and
shlb
stos
mov
mov
enter
jne
btsl
ja
lea
insl
flds
shrl
int
addr16
inc
aas
dec
cmpsb
pusha
push
pop
ficoms
popa
pop
cwtl
mov
imulb
sarl
cmp
mov
xchg
lods
std
push
lea
roll
gs
push
mov
icebp
addr16
xor
in
jecxz
sub
and
sti
sbb
jecxz
push
test
sbbl
int3
or
test
rclb
dec
fbstp
xlat
jp
dec
pop
and
mov
mov
call
mov
dec
sub
and
mov
sbb
test
mov
pop
mov
stc
jmpw
in
repz
mov
sbb
mov
push
mov
rcrb
rcll
rorl
sub
and
sub
scas
push
loopne
push
cmp
rol
jne
push
insb
pop
rcr
lea
sahf
ficoms
ds
jno
test
push
push
xchg
popf
push
fistpl
adc
out
cs
or
sbb
jnp
jmp
dec
jge
inc
cs
and
subl
outsl
inc
push
xchg
mov
dec
in
inc
lods
jmp
fsubrs
aaa
cltd
ljmp
out
pop
jbe
jb
movsb
or
push
pop
and
jl
mov
push
cmpsb
ret
popa
jae
aaa
test
scas
jnp
inc
insb
cmp
xor
mov
ljmp
fldenv
jo
mov
pushf
xor
nop
popl
mov
sti
movsb
xor
mov
addr16
push
xor
loope
mov
push
daa
test
lods
xchg
xchg
bound
stos
clc
pop
fsubr
fwait
pop
or
xlat
clc
or
mov
je
jo
repnz
cmp
daa
push
mov
mov
enter
inc
aad
test
inc
or
cmpsb
test
rolb
in
mov
cmp
daa
dec
jne
pusha
add
popf
pop
jae
xchg
scas
sub
xchg
pop
and
hlt
call
test
sti
adc
jp
aam
icebp
and
mov
sub
fmul
std
test
cltd
clc
sti
mov
push
and
jecxz
xor
in
and
push
fimuls
jg
dec
test
inc
enter
imul
mov
dec
add
enter
call
add
xchg
scas
jae
push
nop
ljmp
jge
repnz
add
or
jbe
ret
lds
cmc
xor
iret
add
push
jns
xchg
ss
jb
sbbl
cltd
add
mov
test
and
cmp
outsb
mov
cli
jmp
loop
iret
inc
cmp
out
mov
mov
sbb
iret
idivl
sub
jae
push
lret
pop
lods
inc
sub
cmpsb
adc
mov
cld
imul
mov
jns
cmp
cmpsl
and
jae
cld
mov
jae
jg
aas
mov
jl
jmp
out
xchg
cmp
xor
mov
mov
inc
das
std
test
sbb
mov
jle
shrb
sub
ss
in
and
lods
addr16
push
ret
sahf
enter
and
mov
stos
jnp
jnp
mov
inc
sbb
hlt
movsb
ret
or
or
cmc
add
push
pop
lcall
out
mov
out
inc
or
movsb
sbb
int3
xor
inc
lahf
add
es
adc
pop
jbe
ret
nop
stos
mov
sbb
cmpsb
adc
adc
add
mov
imull
jno
pop
call
xchg
out
dec
jecxz
test
add
repnz
lea
cmpsb
cmpb
mov
mov
sbb
inc
out
or
mov
jnp
mov
adc
inc
xchg
xor
xor
out
andb
adc
pop
push
push
or
mov
xor
sub
fldenv
jae
mov
inc
xlat
hlt
add
icebp
mov
movsl
jmp
xchg
out
push
sbb
ds
or
jne
into
jb
in
daa
inc
ja
adc
mov
or
in
in
lcall
test
mov
xor
mov
loop
sbb
test
mov
inc
loopne
cmp
into
fisubrl
lret
js
test
sbb
cld
add
dec
outsb
and
in
sbb
fstpt
lahf
dec
ljmp
repz
out
jg
push
nop
out
dec
in
xor
mov
xor
movl
arpl
fists
push
and
cmp
in
nop
sub
dec
fidivs
pop
loop
jbe
sub
xor
xor
outsb
inc
lcall
inc
aad
vhsubpd
imul
rorl
xorb
push
pushf
pop
xor
hlt
add
jne
mov
xchg
aas
or
hlt
push
sub
xchg
repnz
dec
mov
mov
mov
ret
daa
pop
lahf
adc
jge
int
mov
test
fimuls
stos
lods
sbb
cmpsb
jno
cli
pop
ljmp
in
scas
test
pop
pushf
jbe,pt
jno
inc
sti
jmp
stos
fcmove
or
jl
lcall
jecxz
push
out
ja
mov
mov
xor
inc
mov
fdivr
shll
leave
movb
outsb
hlt
dec
dec
scas
jns
xchg
cmp
pusha
scas
mov
push
addr16
mov
cmp
pop
fdivr
lahf
test
into
xlat
sbbb
adc
dec
xchg
rcrb
jno
lcall
mov
sbb
loope
inc
xchg
mov
pop
add
inc
scas
hlt
jb
ds
addr16
rcl
pop
xchg
xor
push
sbb
xchg
out
sub
and
dec
test
icebp
xchg
adc
xorl
popa
mov
aad
mov
cltd
int
mov
xor
mull
jno
xchg
mov
xchg
xlat
jl,pt
arpl
test
mov
xlat
jo,pt
jmp
add
fistps
dec
jno
aas
bound
bnd
lcall
shlb
cli
popa
movsl
std
popf
arpl
mov
sbb
les
test
push
addr16
sub
aas
push
leave
or
gs
testl
push
arpl
xchg
test
icebp
imul
fsub
cli
push
lret
mov
pop
in
mov
adc
jns
popf
jb
xor
in
adc
call
movsl
xor
adc
xor
push
int
jg
ret
sbbb
call
outsb
sbb
sbb
aas
shrl
sbb
outsl
xor
jl
ja
iret
mov
call
scas
cmp
repnz
lock
mov
sub
pushf
pop
mov
xchg
sti
and
add
mov
sub
aaa
xor
add
aas
cmc
push
icebp
lods
lock
and
add
add
js
cli
cmpsb
adc
js
cmc
ja
iret
lds
mov
or
xor
mov
data16
fstpl
movsl
scas
sbb
cmp
jo,pn
mov
arpl
call
lock
sbbl
dec
nop
or
into
push
outsl
test
pushf
in
sahf
dec
stc
stos
jl
fnstenv
mov
outsl
mov
xchg
out
mov
js
jmp
push
jns
in
mov
or
sub
xor
push
cmc
pusha
mov
xchg
push
arpl
dec
stos
jmp
jp
add
cmp
in
jbe
out
mov
or
loope
or
rcrb
jle
jb
xchg
pop
dec
mov
stc
das
pop
cmp
xchg
or
into
les
adc
mov
mov
and
sbb
xchg
negb
mov
pop
jbe
jno
stos
mov
sub
jg
je
loopne
cwtl
inc
loop
mov
jmp
mov
testl
mov
fwait
pop
jo
jae
in
ficompl
fidivs
sbbl
jne
mov
mov
jecxz
sbb
mov
dec
out
pop
mov
icebp
xor
xchg
mov
test
loop
xchg
push
int3
out
nop
pop
sti
cltd
mov
adc
test
fisttpl
ss
cs
jecxz
push
pop
insl
ljmp
cmpsb
imul
or
xor
xchg
dec
cmc
inc
push
pop
or
xor
sub
jecxz
mov
outsb
pop
hlt
arpl
mov
aam
jnp
sub
test
movsb
lods
adc
testb
sub
jnp
dec
cmp
imul
aam
call
fld1
repnz
movsb
imul
pop
fsubp
movaps
dec
jp
lea
dec
mov
push
test
adc
jns
sahf
mov
mov
sbb
hlt
pop
sbb
inc
sub
ljmp
repz
mov
jge
test
or
mov
out
or
push
pop
mul
lahf
icebp
pop
xchg
pop
outsb
les
out
stos
fistps
call
leave
pop
rcl
pop
push
lcall
popa
dec
sbb
iret
or
push
fmulp
sub
or
mov
inc
sub
xchg
jle
or
and
xchg
movb
push
sbb
push
stos
bound
and
enter
inc
xchg
lahf
add
mov
cmc
lock
sahf
sbb
ds
push
push
movl
inc
push
in
dec
dec
pop
dec
dec
mov
jnp
jl
push
loopne
test
test
sbb
mov
test
and
pusha
sbb
sbb
sub
and
sub
dec
jbe
push
iret
or
pop
cmc
jl
xor
ret
and
or
cld
dec
jne
push
xor
test
cmp
add
inc
fstpl
jp
insb
xor
adc
xchg
gs
cmp
adc
push
mov
xor
xor
cld
rcl
mov
cmpsb
or
jo
or
movsb
addb
mov
add
push
sub
shlb
jo
add
aam
mov
mov
cld
hlt
insb
sub
repz
pushf
mov
add
mov
push
or
stos
add
mov
nop
xorl
push
xor
flds
push
mov
or
test
push
lods
out
jecxz
mov
je
inc
pop
or
fists
dec
cwtl
inc
out
push
jp
movsl
std
push
jp
lock
enter
pusha
movsb
in
mov
adc
fsubr
sbb
loopne
lods
adc
test
jmp
jecxz
fmulp
mov
mov
cmpsl
mov
nop
or
movsl
mov
mov
loopnew
shll
and
dec
bound
sub
aas
mov
addb
cmpsb
inc
adc
mov
lret
popf
mov
sahf
push
ljmp
into
sbb
outsb
and
out
test
lock
loopne
sbb
aaa
aaa
jmp
imul
sbb
jle
push
dec
inc
xlat
sub
xor
shrl
dec
xor
movsl
or
dec
fwait
push
xor
xchg
sub
or
lock
call
add
jne
mov
jnp
in
and
mov
out
add
xor
sbb
stos
mov
mov
inc
inc
sbb
fcoml
add
ljmp
fdivrl
xlat
andl
into
loope
dec
inc
sub
pop
adc
xor
aaa
insb
pop
in
xchg
popa
test
mov
pop
fs
ret
and
mov
repnz
jnp
fldl2t
lea
ss
push
mov
loop
mov
cli
stos
lret
lock
xor
fistps
testb
dec
xor
or
lds
clc
ljmp
add
sbb
cltd
shl
add
cmc
jmp
mov
je
mov
and
movsb
mov
ret
jne
in
nop
pop
mov
add
or
pop
or
mov
mov
pop
ja
xchg
push
or
mov
int3
push
cmc
pop
jle,pn
adc
jle
shrl
and
mov
push
mov
xor
sti
in
or
loop
push
dec
mov
jae
cltd
sarb
add
mov
mov
xor
sub
jmp
out
rclb
xorb
pusha
inc
cltd
or
dec
movsl
fldt
cmp
jmp
cs
pop
mov
inc
les
jne
lock
and
movl
aam
iret
jl
outsb
xor
cmpb
jg
and
dec
inc
sbb
push
rorl
outsb
add
ret
cli
dec
cmpsb
or
imul
lret
mov
xchg
mov
pop
not
mov
icebp
fiadds
or
pop
add
fadds
sbb
icebp
testb
cmpb
je
inc
dec
scas
lret
xchg
xchg
push
mov
adc
cld
fs
cmp
pop
jmp
loop
mov
popf
xchg
jl
jge
mov
push
addr16
lret
sahf
dec
add
dec
std
jmp
xchg
add
mov
mov
pop
add
pop
pop
popa
push
pusha
push
or
aam
cltd
movsb
pop
pop
dec
inc
loop
sti
or
adc
mov
gs
mov
adc
ja
add
iret
mov
adc
mov
jle
xchg
popa
or
mov
scas
add
or
cli
pushf
or
xchg
sub
loope
mov
and
add
daa
lret
or
mov
in
sbb
inc
pop
cli
ret
shl
jg
fdivr
pop
pop
cld
mov
jp
push
repz
ret
mov
lret
lahf
out
lret
nop
jb
mov
cmp
xor
ret
lea
xchg
xchg
mov
mov
mov
movsl
push
cmpsl
xchg
loope
test
ljmp
daa
xchg
rorl
add
adc
clc
pop
fnsave
inc
push
or
fisttpl
sub
and
inc
aaa
jecxz
and
pop
lahf
dec
pusha
popa
addr16
push
mov
mov
jle
test
dec
clc
divl
xchg
mov
fisttps
insl
push
lahf
mov
mov
popf
adc
pop
lods
mov
mov
mov
std
insb
and
sarl
inc
sbbl
dec
xchg
inc
outsl
mov
inc
int
and
ja
in
mov
jmp
add
mov
sbb
sbb
fistpll
sbb
cmp
aam
arpl
add
scas
xchg
bound
cmp
outsl
nop
mov
mov
aad
stc
insl
ficoml
push
sahf
push
cmp
testl
jl
adc
push
cmp
adc
loope
stc
cmpsb
cmp
scas
mov
repz
lahf
lds
sahf
fstps
or
in
lret
int3
dec
sbb
lods
pop
cmp
push
dec
mov
loope
mov
xorb
sbb
add
pop
call
cltd
push
repz
add
mov
aad
arpl
int
sbb
mov
cmp
pop
cmp
xchg
mov
lds
jle
leave
test
loopne
inc
out
adc
dec
push
std
mov
sbb
cmp
or
sbb
inc
ficompl
sbb
idivl
jle
ficoml
mov
dec
mull
iret
daa
sbb
into
push
clc
movsb
pushf
ljmp
sbb
or
xchg
in
ds
addr16
hlt
xchg
add
in
loope
and
loopne
cwtl
lds
ret
daa
repz
std
std
and
ds
cli
adc
fwait
cmp
stos
das
xchg
imul
ljmp
stos
aam
movsl
fadds
mov
popf
sub
inc
mov
es
dec
push
jb
mov
sub
sti
outsb
or
dec
sbb
push
adc
stc
enter
ret
or
sbb
sbb
dec
test
lret
xchg
repz
xorl
mov
inc
aam
es
or
inc
test
rcrl
pop
rclb
mov
rol
jb
sbb
jnp
push
mov
addr16
add
xor
sbb
ret
or
decb
pop
mov
ljmp
fnstsw
dec
popf
mov
ja
out
outsl
orb
idiv
dec
cmp
pop
mov
xorl
jp
xor
cltd
andl
jmp
rorl
imul
mov
mov
insb
popa
fwait
add
xor
xor
lds
xchg
sti
out
sub
cmpsb
and
fildl
adc
fdivrs
and
inc
not
cltd
out
pop
pop
or
mov
jae
data16
test
imul
in
adc
call
jo
sbb
ljmp
js
mov
push
xor
ret
cmp
add
aam
stc
push
jne
out
add
ficoms
inc
mov
push
fcoms
push
fidivrl
lods
inc
and
cmp
fs
loop
jno
arpl
push
shl
out
mov
rolw
or
loopne
sarb
or
imul
pop
aas
aas
inc
inc
sub
pop
push
imul
icebp
das
jmp
test
inc
and
loop
dec
or
popf
sub
mov
std
xchg
arpl
sbb
xchg
ljmp
sub
je
adc
leave
andb
imul
pusha
stc
lahf
cmpsb
dec
cmp
xor
cmp
dec
es
lcall
mov
mov
inc
test
lds
push
xor
int
xchg
loope
scas
popa
das
or
jecxz
gs
pop
xor
xchg
sti
jno
cmc
xchg
test
mov
mov
mov
xor
push
mov
mov
gs
subb
mov
in
push
repz
cld
pushf
lods
mov
inc
adc
sbb
jle
decb
push
sub
jne
gs
in
and
and
add
mov
cmpsb
fstl
mov
jp
stos
popa
add
and
movsb
mov
mov
and
mov
sbb
cmp
pop
mov
mov
mov
push
or
test
xor
or
loope
out
inc
fcomp
push
add
inc
xchg
xchg
pop
mov
fsubrl
jae
or
jmp
repz
nop
inc
ds
test
js
idiv
inc
nop
fiadds
xor
mov
andb
xchg
dec
xchg
mov
sub
cmp
push
xchg
jo
push
mov
bound
push
imul
aam
aaa
cltd
cmp
cmpsl
imul
jbe
scas
xor
lret
inc
test
dec
cmp
std
and
pop
push
in
popa
sbb
test
dec
int3
push
mov
adc
shl
lds
mov
push
jae
ja
insl
and
sub
fsubrl
dec
pop
sub
ja
fimuls
xchg
cmpsb
jp
daa
loopne
das
fucompp
mov
inc
dec
ret
cmp
sbb
movb
out
enter
sti
mov
dec
jno
xor
bound
adc
stc
dec
lahf
mov
test
gs
xchg
ret
negl
and
jecxz
cmp
adc
sub
and
test
mov
cmpsb
mov
lcall
shl
cmp
ljmp
and
fwait
in
into
pop
sbb
jno
aam
dec
dec
iret
inc
push
jg
jne
and
enter
xchg
popa
or
dec
push
std
xchg
test
pop
jns
xor
dec
adc
dec
fsubl
and
mov
xor
loope
repz
enter
lods
xchg
pop
jmp
and
adc
push
nop
imul
loop
inc
lods
sbb
adc
inc
imul
dec
lods
and
ljmp
xor
mov
push
cmc
xchg
popl
flds
jae
or
adc
loopne
scas
cmp
xor
stos
pop
pop
call
fisubl
aam
xor
inc
push
adc
out
jecxz
cmp
dec
dec
test
or
mov
sarl
jmp
das
sti
mov
inc
loope
lods
adc
adc
bound
fldenv
hlt
fiaddl
jae
mov
or
ljmp
push
loopne
out
aaa
mov
test
shlb
mov
mov
and
enter
jecxz
cmp
outsl
nop
inc
mov
shrl
out
sub
jmp
aam
jns
call
pop
add
loope
dec
sbb
iret
call
imul
dec
subl
jp
ret
push
sub
iret
mov
fs
inc
mov
int
sub
jo
roll
mov
ja
js
mov
popf
mov
xor
cmp
and
decl
js
inc
lds
popl
xchg
push
jmp
and
pop
add
hlt
in
cltd
adcl
add
std
test
xor
xchg
fiaddl
xchg
lds
cmp
pop
push
sub
repnz
js
cmp
scas
test
sub
movsb
cld
jp
cs
pop
incb
and
in
push
movsb
adc
push
out
cli
jb
sub
sub
aam
addr16
pop
add
xchg
xchg
pop
sub
in
sub
xchg
push
sub
cltd
push
dec
call
gs
hlt
xchg
lods
pop
dec
or
ljmp
cld
int
sarl
les
popf
in
rolb
movsb
adc
fsubl
js
and
mov
or
ficoms
in
and
jb
pop
pop
movsb
cmp
pop
out
lea
loopne
mov
into
outsl
mov
hlt
push
scas
notl
insb
pop
pusha
adc
sbb
xor
iret
mov
inc
mov
dec
dec
lock
jl
pop
xor
xorl
or
dec
scas
pop
nop
pop
push
cmp
and
add
ja
subb
fsts
mov
dec
hlt
mov
and
dec
stc
nop
xor
add
jno
pop
pop
call
sarb
inc
jb
mov
outsl
ljmp
dec
or
xor
mov
cli
movsl
fisubl
sbb
dec
xor
cmc
lcall
sbb
jl
or
iret
push
ds
cmp
cmpsl
and
iret
mov
mov
xchg
mov
mov
push
test
jmp
push
sub
or
in
lea
adc
and
pop
insl
cmp
xor
pop
cltd
sub
stos
int
cmpl
int3
push
fisttps
push
out
sbb
test
adc
loop
stc
rorl
lcall
insb
xchg
push
cmp
dec
push
mov
and
rclb
shll
adc
sbb
xchg
mov
sub
inc
push
xor
gs
insb
lds
arpl
sbb
lock
mov
mov
aam
xor
push
addl
and
sub
sahf
ljmp
xchg
fidivs
icebp
inc
shl
ficoml
shll
rorl
inc
movsb
sbb
and
dec
lcall
jnp
pop
fwait
cmp
jecxz
inc
outsb
mov
jnp
dec
sbb
jb
xor
das
idivb
sub
repnz
das
mov
insb
mov
in
mov
movsb
pushf
adc
push
push
into
stos
sti
xor
mov
test
je
sub
inc
fsubrs
sbb
mov
cmpsb
fdivrp
aaa
mov
xor
inc
pushf
cmc
repnz
sub
mov
mov
xchg
std
add
insl
cltd
loope
push
mov
out
pop
push
mov
push
bnd
nop
fimuls
jl
mul
jmp
scas
lahf
pusha
sarb
in
add
les
aad
imul
mov
lods
bound
repz
cwtl
cld
lods
cmp
call
push
add
outsl
sahf
push
add
mov
xchg
mov
mov
sbb
mov
pop
stos
add
bound
call
idivl
sbb
jo
popl
jae
or
jcxz
lret
aam
outsb
adc
insb
sbb
sbb
xor
push
or
or
xor
mov
inc
in
ljmp
arpl
xlat
enter
cmp
int3
in
or
mov
push
cmp
gs
sub
in
jge
mov
in
pop
popf
jecxz
fs
mov
shlb
cmp
jecxz
imul
dec
stos
sbb
xchg
add
cld
sbb
push
lret
flds
push
xchg
or
and
xor
mov
mov
sbb
cmp
ret
sbb
ret
imul
fstl
lea
out
xor
lahf
cmp
sbb
inc
jns
stos
fs
sahf
aad
and
insl
mov
popf
cltd
lahf
and
shl
lds
outsl
jg
addw
out
mov
inc
into
push
and
mov
inc
in
jno
and
out
shlb
pop
shll
jo
enter
dec
int
imul
shll
data16
out
shr
push
jecxz
aam
cs
push
cmc
cmp
dec
xchg
mov
call
mov
adc
jmp
int
leave
adc
lock
push
ljmp
int
jecxz
nop
inc
pop
mov
mov
and
push
lahf
shrl
cmc
xchg
mov
pop
sub
dec
xchg
sbb
push
and
mov
or
mov
xchg
divb
test
adc
lahf
sub
aas
sbb
pop
cmpsb
and
cmpsb
cld
push
pop
sub
mov
xchg
sar
addr16
and
jecxz
divb
push
aas
ret
jl
nop
test
addr16
push
pushf
subl
xchg
or
int3
aam
in
xchg
loope
and
inc
jecxz
in
in
inc
inc
daa
mov
and
stos
ljmp
or
in
ret
int
adc
mov
mov
stos
scas
adc
and
jns
add
into
mov
dec
popf
inc
mov
ja
cli
ja
in
add
stos
jle
sarb
mov
insb
sub
scas
and
rcl
dec
xor
dec
push
inc
out
add
xchg
testb
addb
pop
scas
dec
das
mov
mov
pop
xlat
and
aaa
xchg
adc
cltd
inc
pmaddwd
aaa
mov
pushf
pop
adc
dec
adc
add
stos
cmp
or
movsb
xor
mov
test
in
cmpsb
mov
mov
cmp
jnp
icebp
fsubl
push
pop
xchg
adc
and
leave
push
outsb
cmp
adc
decl
scas
test
sub
xor
lds
sub
mov
xchg
sub
or
jbe
sti
jns
dec
mov
js
or
ljmp
inc
loopne
clc
lret
mov
sarl
nop
imul
xchg
repz
imul
stos
mov
push
into
mov
repnz
fs
shll
jp
repz
test
inc
out
add
and
lret
ljmp
dec
mov
popa
sub
xchg
mov
push
mov
dec
mov
dec
mov
dec
push
std
sbb
sbb
scas
and
cs
push
lods
xchg
popf
sbb
push
out
daa
or
jae
and
push
das
add
cmp
xchg
test
or
in
push
outsl
lock
iret
stos
or
shlb
mov
or
jg
cmpsl
inc
inc
data16
lret
xor
stos
enter
dec
adc
sub
inc
inc
push
add
ret
cmp
cmp
enter
xor
addb
pop
nop
or
lcall
mov
and
lods
movsb
push
xchg
imul
das
sbb
stos
mov
pop
in
and
mov
mov
add
lret
pop
xchg
imul
xor
jb
outsl
or
or
dec
xchg
fistpll
sub
insb
pop
ret
loope
cmpsb
shrl
or
push
cmc
arpl
xor
cmc
xor
inc
dec
jg
setge
outsb
sbb
mulps
sbb
sbb
in
shll
out
incb
scas
jnp
cmp
aam
sub
outsb
xchg
gs
mov
in
pop
aas
mov
push
adc
lock
xchg
add
vmovmskpd
jge,pn
in
testb
lahf
jle
jecxz
cmp
lods
push
jmp
dec
add
cwtl
je
nop
xchg
or
cmp
cld
test
push
mov
and
cmp
insb
inc
xlat
inc
sbb
pop
fs
mov
add
in
test
aad
fcmovnb
sbb
scas
movb
mov
push
adc
ret
test
les
dec
lahf
inc
lahf
dec
orl
sbb
out
push
and
aam
mov
sub
sub
stos
aas
xchg
mov
lcall
mov
shlb
adc
push
jecxz
out
pusha
mov
fmulp
cmc
add
mov
mull
test
mov
sub
std
and
sbb
insb
xlat
cmpsb
inc
fs
fiaddl
fisttpl
push
and
pushf
shll
fdivr
in
lcall
nop
scas
push
lcall
push
adc
jo
ret
fstpt
lcall
je
shrb
inc
fiadds
cmpsb
mov
data16
mov
fcompl
pop
sbb
jmp
je
mov
ret
pop
stos
sbbl
push
jle
mov
sub
js
in
xchg
loopne
pop
and
adc
rolb
sub
pop
leave
xchg
js
push
in
sbb
or
push
mov
or
fistpll
test
mov
xchg
arpl
into
mov
and
mov
cmp
add
pop
jg
insb
cmp
dec
inc
mov
mov
jo
adc
jns
adc
mov
sbb
ficoml
ret
pop
test
mov
dec
loop
jle
push
inc
and
gs
addr16
hlt
add
test
lret
jb
xchg
xor
bound
cmp
shr
ficoms
and
repnz
std
jl
push
mov
leave
xor
lock
pushl
xor
xor
jp
dec
in
loope
cmp
icebp
inc
js
mov
pop
out
jnp
shl
stos
dec
mov
into
and
push
push
sete
sub
mov
jnp
adc
add
mov
mov
arpl
stc
xchg
shr
movsl
outsl
ljmp
fbstp
call
in
jl
mov
dec
in
mov
sahf
fsubrl
xchg
xchg
xchg
test
js
ds
inc
xchg
ja
push
jge
cmp
dec
push
out
cld
cmp
adc
jmp
xchg
dec
mov
adc
mov
jo
cltd
and
movsl
jnp
ret
stos
add
test
lcall
scas
pop
mov
sahf
and
bswap
sarl
mov
fwait
mov
iret
enter
mov
mov
sbb
mov
hlt
xor
xchg
cltd
jg
pop
ja
mov
add
ljmp
ret
add
dec
fidivs
push
scas
test
sbb
fidivs
aad
int3
xlat
pop
test
cmp
mov
push
cmp
xor
mov
shlb
cmpb
add
test
scas
dec
sub
lea
add
outsl
xchg
aaa
mov
lahf
loopne
or
mov
adc
bound
xchg
dec
daa
inc
pusha
fdivr
adc
fdivr
cmpsl
jp
ss
pop
push
std
or
or
idiv
pop
loope
xlat
mov
add
in
addl
push
std
sub
ret
or
jge
clc
xchg
dec
loop
xchg
pushf
lret
jg
test
sbb
jns
lock
or
mov
rorb
cmp
insl
dec
and
cwtl
cmp
out
je
out
mov
add
or
sbb
jge
and
std
dec
dec
pop
inc
test
or
mov
dec
lods
mov
sahf
and
mov
cmp
cmpsl
or
and
cmp
roll
in
mov
test
xchg
cs
pop
out
nop
xchg
iret
jnp
sbb
xchg
adcl
call
push
subb
xchg
in
pop
jle
pop
adc
mov
push
decl
mov
push
or
xchg
movsb
xchg
dec
rcl
inc
xlat
enter
add
fs
xchg
addr16
sub
jmp
dec
mov
xor
scas
lret
movsl
in
or
popf
cmp
push
sbb
lea
data16
imul
mov
call
xchg
les
sub
and
and
sub
in
pop
ret
mov
mov
jb
out
scas
inc
mov
pop
mov
std
sub
add
xlat
popf
jg
mov
loopne
adcl
icebp
mov
or
in
loopne
xchg
fstl
repz
add
dec
in
sahf
fistpl
ret
lods
nop
xchg
insb
rorb
ljmp
sbb
inc
mov
jl
test
vpand
out
pop
xchg
data16
shll
lahf
mov
test
fcoms
out
dec
mov
add
movsl
shll
mov
enter
fimull
test
ret
imul
sub
test
sub
inc
dec
pop
lret
test
push
outsl
cmpsb
cmp
sub
inc
mov
sbb
cmp
rclb
pop
jp
test
sub
inc
movsl
in
jns
add
lea
stc
gs
fdivrp
sbb
dec
sub
cmp
xor
jae
cli
cmp
mov
sub
mov
les
add
or
das
out
ljmp
mov
lds
inc
daa
dec
repz
xor
addr16
jb
test
outsb
mov
xchg
mov
inc
cmp
popa
sti
loop
add
pop
ficompl
shll
dec
rolb
fs
cmp
jnp
test
dec
stos
aad
mov
lds
mov
xchg
sbb
cmp
hlt
jb
sub
stc
out
inc
sbb
and
divb
push
xchg
lock
and
je
cmp
movsb
add
jmp
dec
sub
clc
adc
loopne,pn
daa
fs
loope
rorb
dec
data16
xlat
test
bound
mov
jp
les
adc
pop
add
pop
xorl
ficoml
xchg
mov
sbb
mov
loop
enter
mov
js
das
mov
ret
orb
push
pop
mov
cmp
scas
mov
sub
ja
or
jo
stc
mov
push
fistpl
lret
pop
push
lret
mov
xlat
rol
xchg
fcmovb
cmc
sahf
xor
dec
dec
cmp
fmul
add
cmp
lahf
test
xor
mov
loop
cmpsb
fisubs
lods
sti
aam
pop
push
jge
jg
mov
aad
aaa
inc
inc
in
fnstcw
je
cmpsl
ja
ficoml
fsubrp
int3
clc
mov
aad
adc
push
lahf
jp
mov
jle
inc
sti
lret
push
ficoms
aam
pop
sbb
sarl
sub
cmp
notl
sub
fsub
pop
jb
xchg
xchg
cmpsb
rorl
adc
insl
dec
push
lods
in
rcr
dec
pop
rolb
je
pop
dec
mov
push
push
je
cmp
mov
fistl
insb
rcll
adc
fsubrs
in
fdivl
bnd
bound
div
bound
fnstcw
in
and
int3
lods
adc
adc
add
cmp
into
jb
test
push
cltd
popa
les
out
xor
cmpsb
add
inc
scas
xor
adc
dec
roll
loopne
pop
jb
lods
sub
lahf
push
push
cmp
xor
dec
sti
mov
mov
cmp
dec
cmp
cmp
inc
test
ljmp
mov
repnz
xor
icebp
sbb
mov
int
jnp
fdivrs
mov
popf
movsl
in
rcrl
das
dec
xor
imul
push
fcomip
out
ljmp
stos
cmp
add
stos
and
std
add
add
mov
sbb
jno
dec
lcall
hlt
es
in
lods
repz
test
ret
push
or
icebp
jb
xor
imull
add
xchg
aaa
lcall
and
mov
add
inc
cmp
add
icebp
or
jne
inc
inc
xchg
dec
es
sub
lock
outsl
adc
dec
mov
dec
cli
add
dec
xchg
or
rolb
inc
cwtl
daa
mov
push
shll
iret
add
push
inc
push
jno
mov
inc
push
pop
dec
js
lret
mov
pusha
iret
pop
cld
insb
mov
dec
pop
arpl
xchg
out
or
int3
sbbb
mov
jns
fwait
pop
out
sbb
aad
mov
les
inc
add
and
ss
sti
jecxz
cli
adc
js
ljmp
inc
pop
mov
pop
lock
mov
jp
mov
push
or
dec
jns
add
mov
insb
nop
aas
dec
pop
movsb
scas
xchg
cli
jo
shll
push
test
cmp
xchg
mov
mov
sbb
jecxz
mov
sti
repz
mov
lcall
ja
int
pushf
sbb
mov
popa
mov
pop
cmc
cmpl
sbb
jecxz
scas
cmp
ret
inc
iret
inc
mov
sbb
mov
movsl
adc
mov
cs
add
or
xchg
repnz
es
or
dec
mov
adc
fisttps
sahf
insb
pop
sub
fldt
jo
jo
leave
mov
jecxz
mov
cmp
pop
and
popa
outsb
stos
imul
mov
arpl
nop
xor
or
mov
adc
adc
nop
xchg
sbb
mov
imul
addr16
jmp
mov
xchg
mov
daa
sbb
push
cmpsb
sub
sub
jl
dec
aas
mov
nop
add
pand
jp
stc
xchg
jns
cmp
push
movsl
shl
pop
mov
adc
sbb
lods
in
ss
outsl
es
mov
and
mov
cmp
mov
inc
adc
pop
lahf
bound
jmp
inc
sbb
movsl
movsb
xchg
das
cmp
mov
or
mov
mov
sbb
rcrb
push
cmp
cld
cli
mov
mov
out
out
insl
pop
jb
jl
jbe
push
or
dec
pop
lock
jecxz
sbb
mov
push
dec
pop
sbbl
mov
repz
xchg
subl
fistl
stc
aas
push
or
repnz
hlt
cld
ja
xor
fnstsw
mov
test
les
out
adc
addr16
popf
sbb
daa
add
jns
bnd
pop
xor
imul
push
xchg
push
dec
inc
sbb
test
cmp
push
mov
sbb
mov
dec
test
adcl
in
in
out
loope
insl
dec
pop
push
mov
sbb
mov
repnz
shr
icebp
ret
icebp
add
popf
or
ret
cs
xor
fld
clc
aas
inc
mov
ds
mov
xchg
xor
and
mov
popf
arpl
fwait
addl
lods
inc
test
mov
popf
divb
gs
imul
in
cltd
rorl
sbb
in
mov
push
shl
dec
idivl
imull
and
out
popa
out
orl
test
ds
xchg
inc
test
mov
sub
vcvtps2dq
in
ljmp
fstpt
cld
icebp
sub
sub
repnz
xchg
aaa
jns
sub
hlt
outsl
sub
aad
in
lods
movsb
divb
lret
rcll
insb
or
sahf
and
or
lock
mov
inc
movsb
dec
test
fcoml
pop
xchg
sbb
mov
in
rclb
sbb
and
dec
mov
cmc
sub
and
pop
test
in
fld1
push
xor
xchg
mov
sub
sahf
pop
test
outsl
xor
test
mov
sbb
sub
cmp
pop
fwait
dec
xchg
popa
cmp
cmp
lcall
dec
push
push
sbb
pop
int
fwait
adc
ja
repz
and
inc
and
outsl
jno
pop
or
pop
pop
jp
or
or
xchg
nop
mull
loop
lahf
out
sbb
adc
in
push
jecxz
dec
into
faddp
adc
jmp
mov
ret
shll
hlt
cmp
insb
jb
xchg
xor
lcall
push
pop
add
faddp
repnz
pop
jbe
shl
jns
inc
loop
or
movsl
mov
fiaddl
fbld
push
cld
ja
sbb
dec
sbb
adc
stos
xor
into
adc
push
loope
cs
sbb
stos
cld
cmp
fisttps
pop
add
addr16
sti
insb
insb
xchg
fs
push
jns
into
or
decl
aam
jbe
xlat
pushf
out
xor
sbb
xchg
mov
icebp
popa
loopne
jge
addr16
shlb
xor
push
mov
inc
loopne
and
and
mov
in
or
jno
dec
aas
cmp
rcl
movsb
push
cmovg
cmp
cwtl
hlt
daa
sub
mov
and
pushf
test
std
cli
push
inc
sbb
mov
sbb
pop
dec
popf
jns
cmpsb
mov
xlat
push
repnz
aam
inc
fwait
mov
lock
mov
loopne
mulb
mov
scas
int
push
outsb
test
out
je
dec
push
cld
sbb
pushf
pop
lea
scas
and
pop
and
jb
inc
sub
jmp
mov
mov
dec
mov
adc
push
dec
push
sbb
push
pushf
lahf
pushf
icebp
sub
xchg
jmp
ficoml
subb
xchg
inc
outsl
loop
inc
orb
popa
loope
imul
imul
in
cmp
cmp
call
loope
aaa
xchg
lret
sahf
aam
shrb
notb
xor
mov
push
dec
mov
jae
mov
scas
dec
sub
inc
jp
clc
adc
xchg
pushl
out
push
mov
ss
mov
adc
mov
movb
sub
lahf
adc
xchg
cmp
cli
outsl
jbe
jmp
push
nop
push
in
sbb
mov
mov
or
xor
arpl
mov
sub
std
adc
addb
pop
push
add
xchg
xor
push
rorb
les
testb
shll
es
inc
xor
les
jle
cli
push
imul
mov
in
fwait
repz
int
push
push
ret
arpl
gs
and
mov
jl
xor
push
jge
dec
insl
les
xchg
leave
popf
pop
mov
cmp
rorl
xchg
cmp
pop
scas
dec
int
outsl
mov
cmp
and
cmp
ret
mul
mov
mov
xor
xchg
mov
jp
out
out
fbld
inc
push
push
stc
out
gs
bound
adc
jmp
dec
rep
cli
sub
out
test
lock
inc
cli
rol
mov
push
lods
pop
mov
pop
insl
iret
push
fs
mov
mov
dec
idiv
jg
mov
imul
call
sub
lret
std
repnz
fistpll
das
push
inc
notb
sub
dec
aad
rorl
dec
xchg
cmc
lods
jl
insl
mov
jge
addl
push
cmc
or
mov
popf
pop
push
cmp
cmpsl
divl
sbb
push
cwtl
mov
repz
cmp
inc
push
cmp
mov
sti
out
aam
enter
stc
out
fstl
out
mov
movb
mov
cmp
adc
pop
data16
xchg
test
cwtl
jmp
pushf
add
dec
push
jge
fidivrs
std
mov
cmpsb
cli
cmpsl
mov
jle
dec
push
adc
outsb
jne
add
nop
push
xchg
cmpsb
bswap
cwtl
insl
jbe
pop
into
jmp
inc
fwait
ja
push
jge
or
fisubrs
and
jmp
sbb
repz
mov
stos
pop
inc
movsb
lods
pop
sbb
enter
dec
pusha
popf
mov
fstl
push
xchg
stc
loopne
inc
and
jge
fdivl
lret
inc
out
je
add
gs
in
sub
clc
and
xor
mov
xchg
sbb
xchg
xchg
lret
xchg
mov
xchg
dec
popf
xchg
xor
stos
xor
sbb
mov
popa
in
ret
adc
clc
iret
mov
lret
dec
or
pop
mov
mov
pusha
sub
xchg
mov
pop
push
icebp
xchg
addr16
cmp
push
incb
xchg
push
xchg
adc
pop
shrl
lods
andb
jb,pn
es
movsb
and
loope
mov
xor
inc
inc
mov
sbbl
pop
pop
rorl
cmp
imul
push
dec
fidivs
inc
pop
into
inc
fnsave
pop
test
pop
xor
pop
lods
aad
push
mov
lea
mov
stos
in
insb
adc
lret
push
test
mov
pop
lods
sbb
in
mov
add
sti
lds
adc
in
fldenv
pop
mov
inc
out
je
sub
movsl
iret
enter
int3
in
inc
scas
mov
xchg
popf
hlt
mov
out
dec
push
lods
cwtl
sbb
fs
sbb
dec
mov
add
mov
sub
sub
or
in
mov
addr16
jmp
add
shll
fildll
sub
lret
sarb
daa
cwtl
cmpsl
cmp
add
dec
add
rorl
push
inc
mov
js
ljmp
lds
loope
in
and
or
in
add
lret
insb
aaa
cmp
cwtl
xchg
data16
xchg
fisttpll
shrl
sub
mov
sub
daa
mov
enter
incl
cmpsl
fsts
mov
pushf
ret
icebp
daa
jnp
mov
sbb
shlb
push
fcomps
jle
mov
or
push
nop
insl
imul
inc
mov
mov
std
js
aad
mov
dec
pop
cmp
fadd
inc
push
pop
push
sahf
push
lahf
or
pop
inc
ds
push
cmp
cmp
int
sbb
shrl
fsubrl
adc
jno
in
add
es
call
cld
ja
insb
mov
mov
mov
repnz
inc
outsb
inc
xor
pop
cwtl
push
movsl
push
test
mov
xlat
ret
out
sub
jl
push
data16
push
sarl
addb
leave
or
add
loop
ds
sbbb
sub
icebp
or
fstpl
add
imul
or
cld
pop
cld
inc
mov
inc
imul
mov
sub
test
dec
mov
movsb
call
icebp
xchg
mov
xchg
or
fwait
int3
or
int
lcall
push
mov
push
out
movsl
in
mov
jmp
lcall
lods
or
into
jg
push
pop
and
cmpsb
addl
inc
jge
sbb
icebp
sub
mov
lcall
insl
subl
sub
mov
les
sbb
sub
dec
dec
pop
frstor
dec
xchg
mov
cli
mov
cmp
pop
sub
push
mov
or
call
ds
int
add
or
testb
xor
cmp
dec
mov
or
xorb
loopne
cmpsl
add
lahf
xor
and
pushl
outsl
ret
and
mov
mov
xor
movsb
std
lock
fwait
cs
popa
push
leave
addl
sub
jns
nop
stc
shll
andb
and
sub
enter
das
lahf
in
add
sti
xchg
outsb
mov
idiv
xchg
add
jl
cwtl
movsb
bound
pop
imul
and
pop
rcll
imul
sbb
mov
push
inc
ds
dec
dec
jo
xchg
int
iret
rcrb
sbb
imulb
inc
rcr
xchg
cmp
mov
mov
cmpsb
xor
rcrl
cmovle
test
cmp
xchg
fbld
xlat
pop
cmp
scas
dec
test
insl
mov
push
outsl
in
jp
mov
bnd
xor
push
xchg
ds
or
mov
or
sbb
inc
fsts
pop
mov
xchg
dec
int3
rcl
cmp
inc
sub
dec
out
insb
mov
imul
mov
notb
xor
push
cmp
xchg
pop
test
sub
jo
stos
dec
icebp
stos
sbb
dec
mov
loop
push
gs
adc
sub
lods
int
iret
add
xlat
xchg
add
leave
jnp
xchg
mov
js
mov
inc
pusha
pop
lock
sub
mov
popa
adc
aas
or
jne
dec
out
xor
dec
arpl
mov
stos
mov
jecxz
and
aaa
outsb
xchg
xchg
jne
dec
gs
cmp
sahf
insl
mov
and
xchg
mov
push
dec
inc
mov
xchg
pop
jnp
adc
add
xchg
cmp
sub
xchg
jb
mov
mov
push
mov
xlat
add
negb
xchg
xchg
pop
test
jge
sbb
lock
decb
iret
test
and
or
dec
rorl
cmp
and
fistps
xlat
lret
mov
mov
into
jne
andl
mov
stos
and
mov
cmp
leave
dec
or
enter
int
sbb
ret
mov
fdivrl
test
mov
popf
mov
adc
xchg
stc
iret
je
add
xorl
dec
das
and
xor
sbb
mov
xor
sub
mov
stc
and
subl
xchg
mov
push
pop
nop
mov
stos
cmpsb
sbb
and
fsub
xor
jmp
xchg
sbb
xchg
xor
dec
pushl
or
test
popa
int3
add
add
jmp
cld
aas
aam
sub
hlt
call
je
test
pop
inc
jbe
cmpsl
sub
leave
fwait
push
inc
sub
fdivr
xchg
out
aaa
pop
lcall
pop
pop
pop
fiadds
sub
pop
cmp
mov
repnz
xchg
push
mov
cmc
or
jb
xor
jl
jge
cs
mov
fwait
lahf
scas
loop
subb
in
jmp
fldenv
jp
jle
pop
movsb
mov
out
inc
cmp
sbb
cmc
and
inc
xor
nop
ds
and
scas
pop
dec
and
movsb
push
adc
jae
sbb
fisubs
movsl
jmp
negb
and
pop
lock
stos
sub
out
incl
pop
fisubrs
jne
cld
cltd
sub
jo
lea
jge
dec
push
in
dec
je
in
xor
aad
and
int3
stos
repz
les
lods
aaa
cld
push
sub
aas
test
fwait
mov
push
xor
test
fmulp
aaa
das
test
and
sahf
sbb
insb
mov
nop
hlt
jmp
cwtl
xchg
ljmp
stos
call
out
imul
js
xchg
out
mov
or
push
inc
cmp
mov
mov
movsl
sub
xchg
sbb
adc
in
scas
nop
mov
lret
in
jbe
test
out
mov
rcl
push
mov
lret
sbb
xor
xor
subb
xchg
es
imul
jle
or
mov
clc
and
das
mov
mov
adc
jne
ret
fdivrs
push
mov
pop
xor
jnp
test
loop
rcrb
pop
ret
add
dec
xchg
enter
mov
mov
xchg
pop
lods
jg
adc
test
aad
pop
hlt
lods
das
or
lods
test
mov
test
fnsave
push
dec
nop
rcrl
fs
test
cmp
sub
pop
mov
aam
push
xchg
mov
cwtl
lods
adcl
dec
lret
sbb
repz
add
js
or
mov
test
repnz
cmc
int3
stc
mov
test
or
enter
lock
jl
mov
loope
mov
mov
sub
pop
pushw
jecxz
aam
movsl
rcrl
push
add
int3
jns
dec
iret
push
xchg
sbb
rcl
clc
sub
sahf
mov
inc
int3
mov
outsl
rol
ds
es
pop
mov
sbb
andb
mov
sbb
fisubl
cltd
jb
adc
adc
xor
dec
xor
icebp
pop
icebp
ljmp
into
sbbl
fucomi
mov
fwait
push
fldcw
repnz
jae
pop
je,pt
mov
cmpsb
insl
xchg
subb
mov
sub
jno
or
jae
subl
sub
ss
ss
ret
cli
mov
leave
cltd
lds
out
or
rcll
and
push
mov
loope
push
xchg
pushf
xchg
daa
xorb
sub
mov
ss
bound
or
or
sbb
loopne
or
adc
inc
and
insb
into
cmp
push
in
dec
scas
mov
mov
or
rcl
jae
rdtsc
xchg
int
or
mov
popa
icebp
pop
loope
lods
mov
mov
and
and
mov
xchg
xorl
pop
cltd
and
subl
imul
cmp
test
push
stos
jns
ljmp
sti
jbe
add
shl
sub
and
orb
es
xlat
push
cmpb
rorl
int
xchg
sti
push
cmp
scas
ret
add
adc
add
nop
inc
jg
add
xchg
sub
mov
stos
mov
cwtl
add
adc
push
stos
mov
loope
xor
fwait
das
enter
xor
add
subb
fs
mov
cmp
sahf
sbb
xchg
pop
pop
insb
or
push
inc
andl
lock
pop
and
or
jecxz
or
mov
add
push
mov
mov
sbb
subb
fildl
clc
fldcw
jge
out
mov
pusha
mov
add
and
inc
fnstsw
jmp
aas
xchg
jns
int
inc
sbb
stos
and
xchg
fsubl
andl
and
pop
push
xor
dec
push
enter
cmp
jp
std
rorb
pop
dec
lods
pop
scas
addr16
xlat
sti
xchg
sub
sbb
or
mov
fstp
cmpsl
xor
std
dec
ss
sbb
loope
mov
icebp
in
cs
dec
add
cwtl
shll
adc
and
cmpsb
sahf
mov
or
or
push
into
push
repnz
jp
ret
xor
inc
mov
pop
lcall
nop
stc
add
mov
loopne
xchg
ljmp
mov
lcall
cmp
add
or
roll
dec
fcoms
inc
fsubl
pushl
mov
bound
cltd
call
stc
insl
int3
adc
cmp
vcvtss2sd
rclb
loopne
add
icebp
add
jno
bound
addr16
jbe
sbb
lods
movsl
test
jp
jns
jae
inc
pop
fsubl
jge
enter
lds
mov
pop
cwtl
js
jp
push
fimuls
add
es
pop
stos
adc
call
lea
enter
flds
push
dec
emms
push
lcall
jmp
jbe
adc
jge
cmc
shrb
mov
mov
sub
cmp
and
ljmp
jge
in
xchg
mov
sahf
dec
adcb
icebp
adc
adc
fdivrs
fsubr
fsub
xchg
fucomp
add
adc
imul
stos
push
test
sbb
dec
mov
mov
pusha
xor
in
mov
sub
add
fs
fisubs
insl
mov
inc
lea
andb
sbb
jnp
cmc
xchg
repz
je
inc
cmp
cltd
iret
push
jno
cs
les
mov
cmp
mov
add
push
mov
mov
adc
cmpsl
rcl
xchg
jae
push
mov
mov
popa
add
je
add
and
mov
inc
ljmp
mov
and
cmp
xlat
xchg
xor
adc
sub
mov
out
fwait
inc
mov
push
adc
add
cmp
fildll
cld
popa
dec
aaa
push
sbb
push
lock
xor
push
outsl
in
pop
les
jns
ja
jmp
std
push
jae
or
sub
mov
mov
ffree
mov
push
loope
inc
or
cmp
xlat
call
lock
add
or
outsl
enter
push
push
lds
push
jbe
imul
dec
aaa
cli
jecxz
mov
and
pop
or
dec
push
adc
push
push
pop
lds
push
mov
hlt
or
mov
loope
sub
add
loop
dec
mov
push
push
out
inc
je
mov
loop
out
pop
add
lods
fimull
pop
sub
lea
stos
shr
adc
fcoml
lret
pop
fs
mov
or
mov
and
push
aam
inc
stos
jns
xchg
std
int3
ss
add
mov
lea
push
inc
jle
and
sub
add
pop
xchg
mov
sub
jo
faddl
xchg
int3
jmp
roll
mov
hlt
mov
push
xor
loopne
cmp
cmp
mov
mulb
xchg
test
xchg
adc
clc
scas
fwait
sbb
or
mov
dec
lock
sar
lahf
and
inc
dec
rcrl
ror
mov
push
lock
pop
cmp
pop
jl
jns
hlt
mov
daa
xchg
sub
cmpsb
add
pop
aad
fldt
hlt
dec
dec
push
sub
int
insb
ja
movb
pop
dec
inc
jle
sub
lahf
jb
dec
mov
insb
mov
cld
je
out
mov
pop
sub
mov
insb
pop
xlat
mov
sbb
cmc
cs
int3
loope
mov
testl
cmp
and
insb
mul
rorb
cmp
sub
std
fisubs
and
mov
mov
xchg
fwait
and
lret
cmp
test
xchg
pop
mov
add
dec
cld
cmp
adc
cmpsw
cmp
bound
xchg
sbb
mov
sbb
xchg
outsb
rolb
in
mov
pop
popa
je
cmp
jo
movl
jmp
dec
add
xchg
popa
cmp
xchg
or
pusha
pop
iret
pop
mov
jmp
and
mov
pushf
xchg
pop
repz
sub
dec
mov
andps
loop
adc
fs
cmp
and
add
js
mov
mov
sub
in
je
mov
movb
push
lret
xchg
cltd
shrb
cli
inc
add
hlt
hlt
push
clc
out
add
jbe
lods
mov
add
jne
out
sbb
sbb
fisubrl
jne
dec
or
andl
imul
enter
mov
xor
in
lods
inc
das
mov
das
adc
sub
mov
