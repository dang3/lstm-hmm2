sbb
add
adc
daa
je
sub
jge
cmpl
inc
and
fucomp
ljmp
pop
sub
leave
loopne
inc
xlat
xchg
je
sub
or
movsb
fmuls
sbb
lds
xchg
adc
adc
jne
or
xchg
out
out
pop
push
int3
out
xorb
out
inc
push
cld
adc
mov
idivl
lcall
fdivrl
push
jl
nop
xchg
je
pop
js
test
xor
popa
loope
clc
in
adc
cmp
jns
sbb
sahf
iret
and
pop
sbb
cmpsb
cmpsl
jmp
sbb
sbb
es
ja
jae
aas
fs
cmc
mov
imul
cli
pop
inc
popa
push
push
fstl
test
sbb
aaa
sub
lods
xorb
xor
xor
scas
jno
dec
sub
dec
inc
fwait
movsb
xor
push
stos
and
in
push
push
lahf
jle
jg
jg
or
xchg
arpl
into
xor
cmp
pop
push
jp
xor
adc
sbb
dec
push
shrl
push
rcrb
les
ss
daa
es
push
inc
adc
pop
xchg
sub
mov
or
pusha
je
sub
jge
jbe
call
pop
xchg
imul
outsl
les
add
out
dec
icebp
push
pop
push
sbb
data16
les
ret
or
insb
out
jo
mov
js
insb
xchg
test
cld
popf
icebp
xor
mov
imul
popa
inc
adc
mov
aas
gs
pop
dec
lahf
enter
aas
fwait
orl
int
ret
out
cmpsb
inc
test
push
aas
xor
dec
sti
cmp
sub
shlb
js
or
jbe
pop
vpsrad
rcrl
mov
hlt
or
jno
js
testl
jb
fldl
andb
xchg
and
fisubs
call
adc
shll
mov
fwait
repnz
shr
push
ret
mov
sbb
call
mov
ret
repnz
mov
ja
or
inc
adc
pop
insl
pusha
lahf
fldt
dec
sbb
pop
lods
jp
cmp
lea
jb
add
push
mov
int3
mov
mov
or
xchg
or
imul
fcomip
mov
pop
mov
lcall
out
pop
mov
shr
into
ficomps
fdivrs
bound
ret
mov
push
arpl
add
loopne
sub
jno
jo
outsb
leave
push
jae
and
movsl
ds
xor
subl
mov
mov
push
imul
int
mov
pop
les
loope
cltd
xchg
sbb
inc
jmp
jg
jno
mov
test
push
cltd
adc
jbe
xor
aam
lcall
push
sbb
mov
mov
and
jl
lock
imul
in
and
and
jmp
push
nop
hlt
pop
or
in
aad
or
pop
dec
ret
js
cmp
xchg
jmp
mov
daa
xor
mov
and
dec
lods
into
push
mov
jmp
mov
sbb
mov
mov
dec
mov
pop
sbb
fwait
out
mov
movsl
xor
and
add
neg
test
std
fldenv
rcr
inc
lea
imul
sub
mov
mov
loopne
mov
cs
jecxz
movsl
pop
stos
mov
fs
add
and
enter
popa
lret
cmp
lds
xchg
sti
das
stc
mov
mov
jb
sub
mov
repnz
loop
add
iret
stos
loope
outsb
xor
dec
or
dec
inc
pusha
push
movsb
lods
bound
outsb
mov
mov
mov
sbb
mov
xor
mov
xor
add
sarl
xchg
stos
inc
rorl
fsubl
jo
fisubl
or
and
cmc
xor
fiadds
pop
mov
jl
int3
pop
sub
iret
mov
pusha
mov
mov
push
sbb
and
in
cmp
add
dec
dec
adc
mov
jae
and
sbb
test
mov
mov
out
inc
mov
aad
jno
mov
sbb
leave
inc
lods
xchg
add
push
fdiv
in
lret
jae
jp
xchg
jl
adcl
sbb
push
and
cbtw
rcll
xchg
ljmp
ret
mov
and
ret
stc
adc
mov
jle
pop
dec
sub
xchg
pushf
mov
adc
adc
fdiv
incb
aad
test
stos
dec
xchg
cs
daa
jle
arpl
and
sbb
xchg
fdivl
incb
push
mov
movsl
lret
jb
or
pushf
test
add
mov
and
cmpsb
jnp
push
clc
lahf
xchg
inc
xlat
pop
sbb
aam
es
movsb
lahf
repz
repnz
aam
and
test
ficompl
insb
ret
popa
and
insb
icebp
add
sub
xor
lahf
inc
mov
sbb
adcl
mov
movsl
mov
das
cmp
in
leave
push
push
cmp
pop
test
cwtl
movsl
iret
or
ret
ljmp
ret
mov
mov
fnstcw
es
test
outsl
jmp
ds
xor
scas
ja
or
inc
sub
scas
outsb
lahf
into
dec
jge
pop
aam
cmp
fmull
jae
adc
mov
and
jne
pushf
or
leave
jmp
dec
adc
dec
out
mov
xor
mov
inc
pop
cmp
push
and
or
mov
sub
adc
ret
push
add
leave
xchg
mov
push
push
or
mov
negl
jb
or
mov
out
sbb
inc
in
ret
test
adc
or
xor
adc
xchg
out
mov
adc
es
notl
rol
push
bound
ljmp
push
movsb
scas
inc
fbstp
shll
dec
jp
sbb
mov
mov
xor
lret
aas
pusha
cltd
cmp
jmp
sbb
sub
jmp
push
inc
jge
int3
and
test
sub
add
lret
test
ficompl
dec
lahf
stos
mov
sbb
push
sbb
pusha
loopne
adc
mov
mov
cmpb
out
insb
pop
popf
inc
and
and
enter
add
xchg
jp
jb
push
stos
xchg
cmp
rol
sub
xchg
fdivrs
lret
and
leave
out
ja
ds
mov
cmp
inc
mov
push
sub
inc
iret
sbb
xor
xchg
mov
push
int3
in
mov
sar
test
andl
sub
dec
cmp
js
xchg
int
in
mov
push
loope
nop
xchg
mov
cwtl
pop
leave
shl
xor
cli
sbb
inc
incb
mov
aam
pop
adc
or
int
insl
mov
cmp
and
pop
or
push
xchg
inc
test
add
sub
pop
pusha
cwtl
rol
cmpsl
adc
cmp
andl
bnd
inc
ror
xchg
ja
in
les
and
mov
sbb
test
mov
addb
icebp
xlat
mov
lock
imul
lahf
xor
cli
and
aam
movsb
orb
or
xchg
push
aas
ficoms
loop
mov
fidivl
inc
pop
ds
inc
insl
mov
lods
jnp
icebp
inc
mov
sbb
lcall
int
out
dec
testb
mov
ss
insb
loop
xchg
in
es
inc
in
sarl
loope
ljmp
jl
fidivrl
cmpb
and
mov
dec
jne
and
arpl
sarb
call
inc
nop
testl
arpl
test
pushf
test
jns,pn
jl
adc
cwtl
adc
das
imul
pushf
in
mov
stos
xchg
in
je
mov
dec
fldt
add
cs
imul
inc
in
mov
imul
mov
jo
cmpsl
loop
clc
lea
mov
mov
out
pop
add
xchg
inc
fdivl
or
sbb
lods
cmp
adc
mov
insl
iret
jge
lds
cmp
cmpsb
mov
repnz
jmp
shrb
out
leave
lock
jae
sub
push
dec
pop
lods
stos
aas
sbb
mov
ret
and
push
pop
lock
and
xchg
fmul
add
enter
std
int
ds
pop
add
popf
nop
xchg
insb
hlt
lahf
fidivrs
inc
sti
add
pop
scas
inc
add
addr16
cli
scas
sbb
xor
and
push
lds
mov
rcr
pop
popa
loop
push
or
aaa
aas
and
xor
add
mulb
lcall
and
test
sbb
xchg
cltd
aad
mov
push
adc
out
iret
loope
xor
push
test
xchg
add
ret
dec
out
fidivs
xor
shll
insl
stos
movsl
sar
cmp
xchg
fildll
test
fld
ljmp
fistpll
shl
int
jno
decb
data16
addl
ja
orb
jnp
mov
mov
bound
das
xchg
inc
fstl
xchg
pop
jb
cs
ljmp
xchg
push
aaa
push
bound
xor
mov
adc
ret
cmp
lea
cmpsl
in
push
in
xchg
popa
jp
mov
adc
out
ret
aas
mov
pop
xchg
jno
pop
insb
lea
adc
cmp
push
shrl
xchg
or
sbb
lock
aaa
outsl
dec
stos
sub
adc
ss
and
divsd
add
mov
jle
cmp
test
ss
xchg
inc
mov
xchg
lds
cwtl
push
arpl
xchg
dec
lock
xchg
or
ja
mov
ljmp
add
ja
xchg
insl
mov
dec
pop
sub
sub
xchg
mov
std
cwtl
movsb
sti
test
addr16
adc
imul
andb
outsb
mov
ss
inc
repnz
xchg
mov
or
mov
xchg
push
lahf
jo
pop
call
push
dec
jne
cltd
clc
imul
sub
mov
rcrl
imul
add
adc
mov
adc
or
imul
clc
mov
xchg
dec
pop
add
mov
and
sbb
out
les
pop
lret
adc
or
xchg
dec
cmp
add
jmp
je
push
jle
dec
or
xor
loope
mov
adc
xchg
jae
jb
fwait
out
test
or
repnz
loop
mov
mov
adc
xorl
or
cmp
in
sbb
xchg
ja
adc
imul
xchg
in
into
sbb
out
xchg
jl
sbb
inc
insl
jle
lods
das
push
lcall
xchg
push
and
aaa
mov
loopne
sbb
lds
imul
mov
xor
ja
mov
sbb
dec
aad
test
jo
cmp
sub
push
popf
mov
out
mov
bound
sub
mov
or
mov
addl
movsb
mov
in
sbb
dec
lret
loop
call
mov
and
mov
jo,pt
dec
and
jns
pop
lret
outsb
ror
aam
fisttps
outsb
stos
aas
pop
insb
ds
xor
ss
pop
mov
jnp
nop
das
ljmp
ss
adc
jne
mov
scas
pop
out
cs
aas
pop
shrl
dec
jecxz
imul
dec
mov
xor
mov
mov
push
lea
mov
mov
push
jb
lret
fwait
sbb
xor
xchg
aad
sbb
fs
add
and
in
cmc
inc
call
jns
repz
outsb
fistpl
pop
in
out
pop
sub
arpl
adc
add
xlat
enter
imul
in
jne
imul
enter
stc
push
add
adc
out
rcrb
mov
dec
push
dec
scas
cmp
mov
mov
mov
lret
and
xor
dec
sbb
cwtl
bound
push
sbb
mov
pop
cmp
mov
stos
arpl
adc
fildl
stos
push
push
adc
fucomp
or
pop
repz
add
ret
jecxz
jno
roll
out
mov
orb
cmp
fstps
stos
mov
fwait
out
in
sub
or
mulb
mov
lcall
lret
cmp
and
jb
bound
sysexit
pop
ret
imul
cmc
fucomip
add
out
xchg
repnz
idivb
test
push
and
cs
mov
js
mov
jo
push
xchg
into
out
mov
pop
lods
lds
push
mov
sahf
in
lods
mov
loop
add
add
xor
mov
mov
lahf
mov
xor
xor
cmp
cltd
add
push
mov
add
and
jmp
xchg
mov
push
lods
std
ds
sbb
xor
or
lods
imul
mov
je
aad
adc
mov
mov
pop
test
jbe
lods
arpl
rclb
in
clc
add
into
lock
sbb
and
shlb
xor
cmpb
pop
les
shlb
lret
leave
insl
mov
pop
fcmovne
xchg
cmp
andb
adc
jg
testb
mov
xchg
lea
rorl
pop
inc
lods
fsubrs
jmp
gs
sahf
out
movl
mov
mov
adc
adc
mov
jmp
notl
and
or
mov
mov
cld
shll
mov
push
adc
daa
scas
inc
rol
call
pop
and
ljmp
push
jle
test
and
cmc
pusha
imul
cld
mov
or
inc
xchg
xchg
stos
cmp
adc
fstps
mov
mov
mov
add
arpl
jnp
pop
out
and
fidivs
ljmp
xor
sti
sbb
mov
mov
sar
push
mov
jmp
sub
movsb
and
and
pop
mov
push
cmc
mov
pop
popa
test
clc
data16
adc
lock
jl
mov
enter
ljmp
sbb
rorb
dec
push
in
inc
arpl
lods
xor
inc
mov
mov
add
and
sub
mov
mov
bnd
test
push
repnz
lea
adc
cmp
mov
and
daa
push
mov
fiaddl
jns
push
xor
adc
mov
cltd
push
sbb
mov
cmpb
pop
pop
dec
int3
pop
dec
sub
mov
xchg
iret
test
lret
testl
mov
push
lcall
or
rcrl
fimull
or
jne
iret
add
fistps
jo
lods
pop
mov
add
dec
pushf
out
mov
cmp
inc
je
cmp
ret
mov
shrb
pushf
fcmovbe
lods
jns
jne
lahf
and
hlt
nop
mov
sahf
bound
cmp
push
test
es
pop
scas
mov
addr16
jmp
inc
scas
jle
sbb
and
dec
call
mov
es
mov
insl
imul
mov
dec
addl
jg
push
test
dec
and
push
mov
stos
push
and
dec
mov
icebp
adc
rcrb
mov
pushf
mov
out
repnz
jle
lods
inc
not
mov
jge
leave
jo
and
mov
out
lea
pop
sbb
fdivrs
out
push
arpl
add
mov
mov
test
add
into
mov
mov
psllw
sbb
pop
imul
pusha
lea
push
adc
cs
rclb
call
push
adc
sub
call
cmc
dec
push
je
or
sub
inc
das
xchg
mov
jne
pop
adc
xchg
adcb
sub
jl
sub
jne
mov
push
push
out
or
jge
push
in
xor
out
pop
aaa
and
and
ror
lahf
pop
aam
fisttpl
shr
bnd
mov
gs
ds
ficompl
cmp
rclb
pop
decb
lods
xor
jl
lods
ja,pt
sbb
jae
adc
jge
rorb
cmc
jl
xor
cmpb
test
xlat
inc
mov
dec
js
mov
lahf
mov
dec
xor
mov
and
shlb
int3
and
mov
icebp
pop
jp
cmp
iret
cli
mov
cwtl
out
sub
shr
mov
and
dec
pop
and
dec
mov
mov
pop
sbb
pop
lcall
cmpsl
movsl
add
fistpll
ret
negb
adc
sub
les
jno
pop
or
fwait
or
cmpl
xlat
dec
and
pop
shlb
xchg
push
fwait
sub
jnp
pop
out
adc
or
xlat
mov
ficomps
jge
scas
dec
inc
sahf
out
sti
cli
outsb
pop
mov
out
mov
xlat
xchg
or
jp
push
leave
fistps
fcoml
stc
push
lcall
lret
push
jecxz
jns
pop
imul
aas
mov
pop
test
repnz
in
shll
sbb
inc
jnp
fsts
xchg
add
inc
stc
js
pop
inc
shrb
dec
iret
leave
pop
fdivr
call
jbe
aad
xor
inc
scas
pop
mov
xchg
sub
cmp
daa
push
jbe
or
pop
dec
mov
or
mov
sbb
out
sbb
cmp
std
xor
or
pop
xchg
mov
cmc
adc
fsubrs
mov
int
psubsb
sub
mov
nop
xchg
sbb
pop
pop
mov
sbb
orb
dec
push
push
popa
call
adc
cmpsl
rorb
das
lods
lcall
ds
and
daa
and
or
fnstenv
jle
das
and
mov
push
psllq
inc
add
adc
or
mov
in
pop
scas
xchg
lcall
jle
mov
add
push
cmp
fwait
iret
xchg
movsb
mov
fs
inc
lds
sbb
push
dec
insl
xor
int
dec
or
push
fiaddl
mov
mov
mov
das
daa
scas
rcll
add
dec
push
mov
jl
rcll
pop
fnstcw
repz
push
jb
inc
rcll
xor
mov
testl
push
push
pop
sbb
stos
ret
jecxz
in
jns
fs
mov
push
push
ljmp
pop
shll
lods
push
rcl
and
sbb
pusha
movsl
fcmovnb
pop
scas
mov
fidivrl
fwait
jb
sub
popl
insl
inc
cmp
ja
mov
fcmove
or
addr16
inc
mov
in
push
xchg
je
push
pop
std
insb
mov
sub
pop
dec
cmpsl
rcrb
cmpsl
mov
jp
dec
xor
rorl
ljmp
inc
stc
fstpt
bound
and
xchg
mov
stos
sub
sbb
push
cs
call
jb
adc
cld
daa
scas
dec
in
hlt
ret
sbb
add
lock
int3
out
xchg
lret
lret
xchg
outsl
bound
and
xor
mov
jmp
stc
push
cwtl
data16
add
jb
rclb
and
insb
outsl
mov
xchg
insb
aad
aam
xchg
jle
scas
shll
pop
imul
in
push
fnstsw
clc
aad
mov
rolb
es
outsb
push
xor
stos
add
xchg
mov
add
push
in
jno
push
sub
testl
xchg
aaa
neg
push
push
test
jo
xor
mov
add
cmp
xor
or
push
mov
cvtps2pd
mov
lahf
mov
lds
mov
cli
or
adc
pushf
inc
push
mov
mov
bound
and
pop
lods
enter
fnsave
mov
push
aam
fimull
adc
sub
js
and
leave
aas
lret
push
dec
mov
sahf
sahf
popa
sti
lcall
xlat
mov
cwtl
cmp
movsb
xor
addr16
adc
xchg
je
pop
dec
mov
std
mov
fnstenv
loope
repz
leave
jmp
push
add
call
cmp
subl
jle
push
ret
sbb
jp
jge
cli
push
fiadds
dec
clc
out
call
jg
lock
add
xor
adc
jnp
push
push
sub
mov
inc
loope
dec
pushf
dec
jno
jb
int
and
cmp
xor
pop
popf
xchg
mov
cld
mov
and
push
or
mov
je
jle
push
int
loope
andb
mov
pop
stos
dec
aas
jmp
test
bound
mov
cmp
or
push
push
dec
sub
mov
pop
xchg
jle
jg
jg
push
ret
mov
xorb
sbb
lods
jle
lret
scas
lcall
and
mov
loopne
stos
mov
aas
jns
insl
pop
fwait
out
cmp
jb
insl
lock
cld
incl
pushl
push
mov
fmuls
cltd
and
enter
xor
cmp
fwait
lahf
jb
gs
mov
nop
adc
leave
and
ss
inc
ds
jecxz
jg
pop
add
push
sub
mov
xor
js
popa
movsb
std
xorb
xchg
adc
mov
lea
add
xchg
stos
lahf
xchg
xchg
pop
lcall
incb
in
dec
jno
xchg
adc
dec
push
xor
jp
jno
fisubs
push
leave
imul
js
lret
in
fcom
mov
cwtl
enter
mov
div
shll
leave
mov
add
int3
xor
mov
in
ljmp
divb
inc
in
stos
mov
lds
ss
push
sti
push
xchg
xchg
out
popf
into
xchg
aaa
fabs
mov
lea
and
push
jg
cmc
adcl
lds
insl
xchg
in
sbb
mov
loop
in
inc
or
inc
and
jne,pn
xchg
jl
jnp
inc
je
cmp
aad
add
adc
xchg
insb
sarl
pop
mov
inc
idivl
outsl
pop
cmc
adc
cld
aam
popa
cltd
mov
mov
mov
mov
pop
sub
adc
testb
mov
jmp
sarl
outsb
push
ljmp
cmp
sub
mov
lret
xchg
sbb
insb
loope
mov
sbb
ret
xlat
add
jnp
cmc
mov
mov
rorb
xchg
fwait
xchg
bound
mov
aad
aad
mov
cmpsl
loop
push
xchg
fisubrl
adc
ja
xchg
jno
xchg
popa
pop
lret
sub
lds
jbe
je,pn
cli
fs
xlat
mov
mov
or
sbb
jbe
call
rol
test
mov
cmpsl
inc
clc
sub
rcrl
adcb
inc
add
jle
mov
in
lods
test
push
mov
jne
negb
mov
sub
cmp
nop
sbb
xor
test
lock
stc
cmp
xchg
xchg
leave
dec
jae
xchg
push
mov
cmp
addr16
ja
ja
dec
push
cmp
mov
xchg
push
sbb
pusha
ficompl
and
sub
xor
test
mov
inc
pushf
jle
ret
stos
and
leave
mov
push
mov
push
rcll
inc
stos
inc
mov
jbe
or
cvtpi2ps
cmpsl
or
aas
test
out
pop
in
push
call
rcr
dec
push
pop
lcall
xor
xchg
xchg
je
push
imul
imull
pop
add
push
pusha
dec
data16
scas
adc
inc
inc
popf
or
jnp
adc
xchg
out
out
cmpl
out
cmpsb
cmp
lods
pop
jg
or
test
out
loope
mov
cmp
aas
xlat
movsb
inc
scas
daa
mov
das
and
js
lahf
nop
sub
push
dec
xor
pop
int
mov
enter
lret
imul
sbb
xor
subl
jge
push
lret
mov
sub
mov
je
test
inc
sub
jb
fdivl
ja
fcoms
inc
iret
inc
sub
sbb
mov
xchg
inc
daa
sbb
sub
addr16
mov
jbe
add
cmp
out
out
clc
push
mov
and
decl
insb
mov
dec
adc
cmp
push
push
jecxz
stos
and
icebp
jne
and
push
sbb
mov
push
and
push
aad
in
pop
cmp
jle
cmp
or
cld
scas
add
ds
das
push
add
and
lods
xchg
shll
ror
xchg
jno
mov
mov
xchg
dec
cmpsl
sub
into
rclb
add
insl
jecxz
xchg
lods
pushf
lods
arpl
call
xor
std
ja
xor
pop
and
mov
pop
mov
dec
repz
and
je
xor
push
fstpl
adc
jmp
in
negb
mov
aas
addr16
dec
cmp
xchg
mov
int3
mov
push
and
int
ja
mov
outsb
sbb
mov
and
test
rcrl
insl
jge
push
mov
inc
dec
add
stos
xchg
jmp
in
insb
int3
cmp
fucomi
fidivrs
ficoms
mov
je
aam
pop
nop
cmpsb
mov
cs
sbb
mov
repnz
push
xor
hlt
rcll
adc
mov
leave
dec
xchg
and
dec
inc
mov
dec
fistl
adc
rorb
and
es
mov
scas
push
cmpsb
push
pusha
imul
shrb
sub
sbb
and
cmc
push
js
dec
inc
iret
jne
insb
inc
sub
xchg
add
push
dec
hlt
jmp
clc
ds
aas
mov
cmpsb
out
pop
loope
pop
pop
dec
and
pusha
push
jp
add
roll
push
enter
adc
pop
int
je
mov
pop
inc
out
pusha
sub
into
dec
jg
inc
jmp
out
dec
xchg
push
push
xor
mov
cmp
dec
int
bound
call
cmpsb
cmpb
inc
inc
adc
out
inc
cwtl
xchg
sahf
and
adc
pushf
in
jp
mov
cli
cmp
push
sarb
imul
pushf
andl
ss
lds
idivb
loopne
mov
test
arpl
js
sub
pop
xchg
call
imul
subb
int3
mov
mov
jae
push
fistpl
aaa
or
cmpsl
test
push
pop
imul
call
and
sub
adcl
out
rclb
cmp
or
inc
aaa
dec
push
cmpsb
dec
adc
inc
imull
xchg
push
aaa
push
pop
xchg
cmp
arpl
mov
in
popa
aad
inc
sarl
xchg
or
pop
add
mov
dec
lahf
iret
test
fbld
cmp
jmp
mov
into
arpl
out
inc
mov
xorb
in
push
mulb
cmp
flds
ja
gs
xchg
andl
iret
jne
jnp
out
mov
push
pushf
adc
cwtl
or
mov
addr16
fadd
addl
jle
in
or
or
sbb
mov
xchg
xor
inc
mov
and
dec
push
adc
imul
jecxz
scas
iret
and
insb
push
or
fstpt
and
jo
lds
adc
inc
mov
xchg
sub
push
jmp
out
mov
ss
xor
ret
bound
mov
adc
sahf
jecxz
xchg
xchg
imul
or
nop
movsl
sbb
and
jae
adc
sub
or
adc
and
push
int3
xchg
loope
test
cmpsb
and
pop
pushf
call
rcrl
adc
inc
addr16
inc
mov
sti
inc
aaa
xor
andl
testb
and
mov
es
mov
or
xchg
test
ljmp
push
pop
inc
lds
mov
push
and
fisubl
rcll
out
sub
pop
mov
mov
add
pop
sar
sub
roll
test
lods
nop
cmp
cmpsb
cmp
mulb
dec
jecxz
jo,pn
sti
repz
xchg
mov
push
movsl
pop
pop
pop
mov
xchg
mov
addl
mov
mov
mov
enter
adc
dec
je
das
nop
sbbb
popf
cmp
add
mov
xchg
add
fisubrs
jl
adcl
lret
daa
ljmp
pop
mov
outsl
outsb
inc
lods
mov
sbb
into
dec
jb
js,pt
pop
xor
fs
mov
cmp
repnz
dec
sbb
sub
inc
push
cmpsl
pop
xor
fmuls
in
inc
dec
shlb
and
xchg
sbb
fcom
fwait
int3
sti
test
bound
push
rorb
sub
lcall
xor
mov
cmp
add
lods
sub
xor
stos
xor
adc
pusha
iret
xchg
jmp
ljmp
sbb
stos
mov
dec
rcrl
mov
xchg
pop
xchg
jnp
aam
xchg
inc
jno
loop
cmovl
inc
cmp
jmp
mov
sbb
add
pop
test
jo
jae
sub
jl
dec
mov
mov
fcomps
sbb
xchg
ja
jecxz
ljmp
fldenv
pop
mov
pop
xchg
add
iret
cld
pop
or
and
pop
add
pusha
dec
into
pop
xor
shlb
faddl
jge
inc
insb
movb
mov
test
loopne
es
lods
hlt
xchg
mov
dec
les
leave
sub
push
jno
sub
scas
cmp
jbe
cmp
push
add
add
shlb
cs
data16
rcr
loope
shlb
enter
mov
enter
int3
dec
mov
movsb
and
test
or
negl
xchg
cli
xchg
xchg
call
xor
mov
mov
mov
ja
mov
cltd
mov
testl
xor
out
xchg
scas
mov
jae
cmpsl
inc
xor
mov
aam
loope
inc
call
cmc
cmp
cmpsl
imul
enter
and
jge
cmp
outsl
into
push
lea
mov
int3
jo
push
cmpsl
add
pushw
loope
pop
pop
sbb
xlat
sti
cmp
scas
aam
cmp
jo
ja
test
mov
andb
xchg
mov
movsb
aas
gs
xchg
jno
sahf
xchg
or
cmp
cmp
push
cmp
or
test
int
mov
mov
xor
lea
outsl
jae
inc
xchg
stos
sub
fimull
mov
xchg
cwtl
or
bnd
out
loope
pop
movsl
lret
xorl
cmp
mov
lret
je
inc
outsb
xchg
push
fdivs
fsubrs
mov
mov
and
jnp
add
cmpb
dec
dec
sub
cs
jp
lods
push
inc
cmp
mov
hlt
outsb
shrl
inc
xlat
daa
cmp
cltd
dec
out
adc
dec
mov
mov
in
movsb
push
inc
fisubl
push
sbb
int
orl
pusha
adc
daa
xchg
sbbl
mov
cld
sub
pop
and
test
push
rolb
stos
inc
cs
mov
pop
fidivs
imul
push
add
or
loope
xor
aad
sub
jo
mov
dec
add
jns
or
fsub
sarl
pop
mov
dec
or
les
dec
inc
dec
mov
pop
pop
inc
or
bnd
sub
mov
push
cmc
sub
aad
xor
jbe
and
or
or
test
lods
je
mov
nop
lods
or
es
int
outsl
fs
mov
insl
pop
stc
mov
dec
xchg
jmp
inc
pop
gs
ds
xlat
adc
out
jge
sub
push
out
pop
pop
jecxz
mov
inc
stc
adc
jno
outsl
aas
mov
cmp
dec
cmp
rolb
and
imul
mov
daa
icebp
jmp
aaa
pop
adc
out
jmp
and
mov
xor
dec
dec
cmp
cli
cmpsb
cs
mov
jg
cmpsl
scas
pop
inc
scas
imul
inc
dec
ss
daa
jp
outsl
aas
fs
in
or
mov
add
neg
and
mov
add
push
add
testl
mov
mov
jnp
lds
aaa
dec
adc
adc
fdivrp
pop
imul
push
lods
mov
xchg
mov
into
inc
inc
int
and
push
mov
sbb
xor
mov
cmp
cwtl
or
push
pop
add
inc
dec
leave
sub
mov
aad
std
aam
arpl
aaa
mov
dec
and
sbbl
jns
movsb
lods
clc
test
rcrl
inc
xchg
scas
movsb
cs
pop
mov
hlt
pusha
jmp
inc
stc
mov
test
in
cmp
pop
lock
les
mov
in
jnp
insb
sbb
imul
jne
push
in
popf
push
and
xchg
adc
add
loopne
shlb
nop
je
fidivs
pop
push
fs
ja
add
push
jecxz
popa
adc
xchg
out
lahf
xchg
mov
add
push
adc
js
mov
push
arpl
jmp
inc
cmpsb
test
inc
shlb
push
loopne
mov
repz
cmp
cld
and
insb
mov
test
aad
mov
pop
push
repnz
call
movsb
js
sbb
mov
lret
mov
ret
pop
into
jae
adc
rclb
xchg
pop
enter
les
repnz
fldcw
sub
pop
cmp
push
es
dec
xor
pop
fmuls
icebp
and
rclb
add
mov
das
mov
loop
inc
jmp
shrb
mov
xor
xlat
das
repnz
jmp
loopne
or
test
ja
adc
jge
jne
es
inc
xorb
in
push
xchg
mov
pop
mov
das
xchg
iret
mov
cmp
rcrb
mov
sbb
sbb
mov
dec
dec
dec
int3
jno
and
fsubr
xchg
lahf
sub
or
jle
add
cmpsb
imul
inc
in
fisttpl
jnp
fsts
lock
cltd
test
lret
and
repnz
or
cmp
sub
xor
jg
pop
stos
mov
fdiv
xor
enter
js
ja
fwait
aaa
jnp
in
bound
ljmp
subb
test
scas
mov
push
cmpb
stos
lahf
movsl
out
xor
mov
lds
negb
mov
mov
pop
out
int3
iret
leave
adc
arpl
lods
aas
je
pop
mov
mov
scas
in
mov
scas
mov
fisttpll
add
dec
or
cltd
mov
mov
sbb
dec
cmp
cli
pushf
adc
popf
fs
fistps
sub
sti
iret
stos
pop
popf
hlt
mov
test
xor
and
xor
clc
xchg
mov
xchg
and
mov
jae
xchg
mov
sbb
add
les
jecxz
pop
aam
outsb
cmpb
cmp
mov
mov
sub
xor
xor
popa
out
cltd
or
mov
mov
arpl
loopne
pusha
xchg
or
lcall
mov
push
cs
sbb
stc
mov
in
fisttpl
mov
in
mov
lock
and
adc
les
ret
cltd
jae
pop
ret
js
push
and
push
stos
ja
push
out
test
jnp
inc
cmp
mov
adc
mov
repnz
and
adc
leave
test
cmc
scas
dec
lret
sbb
cmpsl
push
addr16
xlat
sbb
jl
ret
add
packssdw
jns
push
or
mov
lea
mov
push
cmp
out
dec
sub
cmpsl
outsb
repnz
push
ss
mov
addl
les
push
stos
fisttps
xor
push
hlt
lods
ss
ret
adc
arpl
fninit
lret
out
ret
lods
jb
and
and
mov
add
xchg
lret
and
es
sarl
push
mov
mov
pop
fstps
mov
mov
fiadds
pop
mov
dec
add
popf
in
sbb
imul
jnp
xchg
dec
shrl
std
aad
gs
insb
add
jb
es
jecxz
pop
pop
push
mov
xor
mov
and
or
pop
popf
add
push
and
mov
das
xor
hlt
rcrb
xor
xchg
std
jbe
ficoml
mov
dec
mov
xchg
jo
jbe
jo
jns
mov
xlat
lds
int3
and
repnz
xchg
outsl
ss
movsb
push
lods
cld
add
mov
lds
xchg
mov
sbbl
ss
sub
cwtl
push
test
xchg
push
addr16
push
stc
cmp
mov
es
mov
psrlq
xor
push
mov
jb
mov
aaa
adc
jle
orl
or
cmp
das
pop
jns
pop
adcl
inc
pop
fsubrl
sbb
loopne
addb
cmp
test
dec
mov
xchg
test
repnz
push
and
pop
mov
mov
push
mov
std
xchg
pop
and
push
aam
xchg
jge
aam
out
adc
test
inc
inc
jbe
push
outsb
adc
push
leave
and
sbb
dec
mov
arpl
push
inc
and
daa
loope
inc
rorl
inc
and
or
std
sub
add
cmpsl
imul
pop
push
dec
cmp
pop
imul
fs
xor
movzbl
popf
pop
xchg
cmp
ret
in
inc
push
pop
mov
xchg
cmp
xor
or
and
and
in
lods
ds
ret
cmp
fsubrs
sarb
sahf
inc
shll
popa
mov
xchg
dec
jb
sub
bound
mov
imul
xchg
test
add
mov
sub
ja
and
cmp
pop
es
in
scas
movsb
xor
dec
popf
mov
xor
sub
dec
push
push
stos
and
inc
mov
rclb
out
jecxz
test
aam
imul
mov
testl
cltd
mov
bound
ret
mov
hlt
jne
or
stos
pop
sbb
inc
or
push
fisubrl
mov
dec
ja
inc
cmpsb
sahf
mov
cltd
xor
dec
xchg
push
es
cmp
enter
fdivrl
in
jns
ret
shr
pop
out
fsubl
or
inc
jl
lahf
out
push
jo
cmpb
sbb
out
jge
pop
mov
in
addr16
xchg
cwtl
dec
cld
add
xchg
inc
adc
test
pushf
into
and
adc
mov
jmp
jbe
jns
cmc
out
inc
sub
xchg
push
cld
inc
sbb
out
aam
xlat
mov
adc
or
push
pop
adc
push
stos
dec
sbb
or
xchg
mov
sbb
cmpsl
jno
mov
js
pop
xor
adc
pop
jbe
xlat
sahf
mov
dec
xchg
nop
push
ljmp
aad
or
insb
and
jne
adc
sbb
orb
push
outsb
xor
inc
xlat
cltd
rcl
and
loopne
mov
aas
mov
iret
out
out
pushf
test
pop
and
inc
or
lock
sti
adc
mov
testl
xchg
pop
dec
cwtl
aam
not
rorl
iret
inc
aad
push
cmp
or
std
mov
aam
lock
xchg
mov
ret
pop
xchg
stos
add
dec
add
inc
in
and
jbe
test
pop
cli
lret
push
pop
stos
push
stc
push
mov
or
movsl
loope
push
ficompl
mov
xchg
out
roll
ror
loopne
icebp
or
mov
jl
push
imul
out
into
cmp
psllq
pop
stos
mov
push
inc
out
fadd
sbb
dec
shlb
ljmp
sbb
shrl
cmp
dec
cmp
std
dec
lods
hlt
sti
add
and
xor
movsb
imul
inc
sar
enter
jae
mov
pop
mov
hlt
or
jmp
testl
xor
sarb
sahf
pushf
icebp
push
push
mov
push
xchg
aam
insb
or
aaa
sbb
pop
pop
scas
dec
cmc
lret
js
mov
or
and
lret
dec
sarb
rclb
adc
stos
adc
jl
or
mov
lret
addr16
jne
les
dec
add
mov
test
jp
push
sti
sub
cmp
push
pushl
jo
out
shrb
movsl
into
ret
mov
addl
mov
filds
arpl
subl
lahf
jge
mov
push
and
cmpsb
sti
jbe
and
es
mov
xchg
ja
fstl
ret
xorb
faddl
sub
adc
inc
and
xor
or
xor
subl
fwait
pop
pusha
pop
divb
adc
sbb
es
sbb
lahf
loopne
aam
pop
ss
ja
mov
jge
subb
rorb
sub
xchg
push
xor
das
scas
push
jns
jb
and
inc
mov
aam
pop
fistpl
cmpsb
mov
pop
rcrb
push
lds
push
scas
sahf
mov
adc
aas
cwtl
mov
enter
push
adc
adcb
and
fwait
mov
xor
jae
mov
fs
outsl
pop
jl
or
xchg
inc
cmpsl
sbb
xchg
pminsw
push
add
push
dec
icebp
cmpsb
dec
insb
cmp
rclb
jmp
fimuls
xchg
pop
out
movntps
or
push
xchg
xchg
push
push
aad
cmp
add
or
cwtl
popf
and
icebp
sbb
adc
jge
cmpsl
int3
pop
test
data16
adc
lcall
insl
sbb
mov
xchg
fnsave
inc
sub
incb
dec
jle
aaa
dec
ret
daa
aam
rol
repnz
push
adc
jnp
push
pushf
pop
push
mov
leave
sbb
jge
add
pop
jae
push
lret
loopne
lods
pop
scas
in
loopne
xor
pop
xor
jle
or
rorl
scas
rcl
idiv
sti
iret
popa
out
dec
or
add
out
mov
sbb
xlat
nop
jno
cs
mov
out
sub
pop
je
xchg
lret
push
or
pop
sbb
pushf
sub
add
stos
aaa
aas
sub
mov
mov
scas
fisubrs
push
mov
sbb
mulb
dec
lods
pop
add
js
sbb
or
fadd
push
dec
sub
mov
int
and
fstpl
jae
ret
in
aas
adc
dec
test
sub
stos
adcl
out
addr16
push
out
sahf
mov
inc
pop
sar
xor
dec
cmp
cmp
andb
cmp
or
ja
adc
scas
adc
add
stos
jbe
insb
jne
jno
push
pop
repz
dec
mov
cmp
or
outsb
jp
xchg
xchg
inc
js
lods
or
xchg
push
fbld
lock
jmp
sbb
dec
cli
cmp
lods
and
fcom
shl
mov
loopne
sbb
imul
iret
add
insb
in
sbb
shlb
lods
call
mov
leave
jmp
inc
sbb
xor
xor
jp
push
lods
dec
pop
add
mov
out
orl
pushf
aas
ja
jmp
repz
test
sub
sub
add
xor
sbb
add
fs
test
jl
sahf
int
and
and
push
cmp
dec
cmp
in
dec
adc
add
mov
loopne
jle
mov
add
or
xchg
jno
pusha
adc
rol
lock
int
vfnmadd132sd
sbb
cmp
cmp
add
daa
cmpb
mov
shl
cmp
loope
insb
cmpsb
fdivrs
xlat
negl
fidivrl
and
adc
and
loopne
pushf
cmp
mov
inc
sub
cmp
stc
and
and
in
in
xchg
jb
test
add
outsl
mov
test
pop
pop
ja,pn
ficoms
or
das
push
push
mov
xor
dec
xorb
mov
xor
sahf
adc
sahf
xchg
test
push
pop
and
xor
mov
inc
adc
jle
ds
out
jae
test
mov
push
mov
pop
xchg
movsl
insb
daa
inc
or
mov
inc
int3
inc
addb
mov
add
adc
aam
enter
shrb
les
mov
adc
leave
cmpl
dec
sahf
jp
in
lea
aam
cs
mov
loop
cld
popl
mov
push
mov
push
cmp
shll
mov
inc
push
add
cld
inc
ficoms
push
and
les
in
xor
out
test
push
loopne
ds
push
aad
jle
loopne
pushf
and
pop
jnp
dec
cmp
jp
fnstsw
bound
add
push
sahf
mov
xor
dec
aad
dec
dec
je
movsl
leave
jmp
sbb
mov
pop
xor
icebp
rolb
and
cmp
pop
inc
dec
push
mov
push
daa
push
sbb
push
out
and
dec
and
call
test
xor
jmp
movsl
lahf
out
cmp
sub
adc
fistl
xor
mov
cmpsb
cmp
dec
popl
dec
outsl
aad
adc
pop
and
stc
shlb
mov
popf
shlb
pop
popa
clc
pop
cli
shll
dec
adc
jge
add
pop
push
jo
in
inc
call
jge
in
jb
sbb
mov
add
lock
shll
adc
xor
scas
cmpsb
in
out
data16
mov
sti
repz
popa
imul
pop
clc
mov
rcrl
imul
jmp
dec
aas
jmp
cmp
jbe
sbb
lods
mov
roll
add
pushf
ja
pushl
aaa
mov
pop
sub
fidivl
push
bound
sub
mov
fs
jns
or
mov
push
xchg
cld
aam
mov
testb
jmp
xchg
push
popf
adc
cmp
test
jge
push
std
cmp
add
aam
cmc
push
andl
cltd
pop
add
push
mov
jne
repz
in
push
cmp
lcall
cltd
or
xor
out
xchg
aad
fdivr
fwait
enter
adc
mov
push
and
jecxz
inc
rorb
imul
push
adc
lret
out
imul
mov
mov
jmp
adc
jno
lea
stos
jmp
pop
mov
push
enter
mov
inc
frstor
int3
cmpb
adc
sbb
push
and
in
and
fistpll
ficoml
in
sub
xor
jb
or
cmp
out
notl
push
xlat
add
pushf
pop
mov
arpl
inc
cld
lods
pop
movsl
jl
js
or
repnz
xchg
mov
sbb
insl
hlt
mov
nop
movsb
dec
test
js
cmc
popa
enter
or
lret
in
jp
pop
pusha
push
iret
cli
cli
dec
jle
push
mov
sub
aam
mov
cs
inc
loop
mov
out
xchg
jle
adc
add
loope
sbb
cs
mov
loopne
in
mov
lods
repz
add
shl
mov
jmp
mov
mov
lods
jge
push
and
aam
push
ret
pop
mov
xor
cwtl
pop
test
addr16
xchg
or
push
sbb
and
inc
mov
popf
repz
aam
addb
cmp
and
iret
mov
push
mov
mov
sbb
jo
je
xor
jmp
into
movzbl
test
sbb
dec
rcrl
xchg
mov
cmp
xchg
leave
mov
xor
mov
in
and
jbe
sub
sub
mov
jno
in
mov
stos
jp
add
int
cs
ds
outsb
jg
out
in
xor
push
fstl
call
jmp
and
out
lds
cltd
push
fwait
lcall
cwtl
adc
mov
pop
incb
stc
and
xlat
orl
xchg
movsl
icebp
inc
aam
sub
sbb
lcall
mov
out
adc
mov
xchg
add
inc
popf
sub
pop
jno
adc
xor
sub
ja
or
outsb
mov
popf
lahf
and
xchg
or
cld
pop
sbb
inc
test
arpl
xor
inc
dec
jge
dec
lds
and
and
adcl
add
xor
out
or
push
xchg
mov
push
sarb
adc
xor
fwait
cmp
inc
add
sbb
cmp
mov
test
jle
fucomip
sub
cmpsb
loop
mov
insb
popa
and
loope
and
jmp
lret
test
lock
mov
aad
inc
xchg
pop
xor
jecxz
fdivp
scas
pop
mov
mov
insb
test
or
ss
cld
fwait
cmp
jnp
lcall
sarl
and
adc
mov
mov
mov
inc
shrl
pop
outsb
cmc
aas
add
inc
sub
mov
xor
mov
jp
sbb
push
insb
xor
pop
push
mov
add
addr16
cmp
inc
bound
xor
pop
push
xor
mov
lods
repnz
andnps
pavgw
add
lods
and
clc
insb
rcrl
imul
negl
aas
repnz
cmpsl
stc
add
aaa
or
push
dec
mov
mov
jbe
push
jne
subl
arpl
mov
push
xor
adc
inc
xchg
lcall
mov
insl
or
mov
add
push
cmp
push
mov
xchg
dec
scas
scas
in
cmpsb
xchg
jbe
lds
or
fildll
inc
icebp
mov
cmpb
sub
jns
cld
inc
xor
pop
push
mov
bound
movsl
pop
jno
mov
fldl
rorb
add
pop
test
into
dec
xor
int3
lods
mov
xchg
addr16
add
jecxz
fdivl
push
into
stos
loopne
mov
mov
jno
mov
cltd
sar
mov
sub
mov
mov
lcall
add
jo
idivl
sub
sarl
adc
push
test
rorb
or
adc
lods
outsl
inc
jle
cld
aam
inc
hlt
xchg
xchg
jecxz
mov
cli
stc
stos
insb
subb
jno
mov
shl
and
les
in
xchg
sti
push
incl
jp
xchg
and
and
rcrl
adcl
mov
aad
and
mov
inc
mov
sub
add
adc
add
pop
mov
and
ret
imul
push
dec
lcall
pop
xchg
xchg
movsb
inc
sub
gs
js
jne
sub
or
clc
lock
xor
outsl
mov
jmp
lds
mov
lcall
leave
mov
sarb
test
push
insb
lcall
sbb
xchg
sub
cmp
pop
push
xchg
sarl
jmp
and
shl
call
push
orb
sbb
add
mov
lds
leave
mov
ds
sub
ja
ss
loope
out
xchg
adc
stos
cmp
fcmovnu
insl
push
jnp
and
movsl
xor
mov
jne
lea
xchg
scas
neg
lods
fadd
add
inc
xchg
popf
mov
inc
icebp
arpl
daa
das
leave
inc
leave
add
adc
bound
stc
adc
sbb
jle
pushf
iret
test
add
imul
iret
inc
sbb
xor
sbb
ret
cltd
push
push
lret
int3
mov
sbb
pop
sbb
fisubs
jb
mov
lret
cmp
and
cltd
pop
xchg
sub
mov
jmp
xor
push
ss
cmpsb
and
leave
cwtl
dec
pop
rcrl
dec
lods
js
jb
adcb
popa
mov
mov
sbb
punpckhbw
iret
xor
jo
scas
push
jmp
xor
cmpsl
adc
jns
xlat
cmp
pushf
pop
inc
mov
jecxz
or
mov
dec
push
and
das
imul
pshufw
repz
pusha
insb
popa
fdivrp
sar
idivl
pop
ret
stc
mov
or
repnz
int3
pop
into
push
xchg
xchg
sbb
ds
icebp
pop
fistps
xor
cwtl
fwait
inc
or
adcl
jns
mov
pusha
jmp
sbb
in
mov
adc
fcmovb
bnd
cld
xchg
inc
xor
xchg
push
xor
dec
mov
mov
rorl
movsb
and
xchg
popa
adc
clc
cmc
pop
mov
jl
mov
icebp
add
pop
sub
push
out
frstor
test
dec
popf
imul
sbbb
ret
jmp
or
loope
fidivrl
adc
cli
andl
out
or
loope
jno
stos
test
jmp
mov
inc
inc
imul
sbb
cltd
cs
xchg
addr16
push
std
mov
lods
shl
out
xor
shr
adc
cmp
scas
rclb
shrl
repnz
fistpl
cwtl
xchg
int3
xor
jbe
push
push
cwtl
xor
mov
pushf
movl
arpl
jl
inc
popf
addr16
sbb
out
cltd
mov
jnp
movsl
add
sbb
test
jns
lods
mov
rol
cld
aad
adc
fisubl
mov
jle
and
and
jp
push
aad
pusha
xchg
xor
repz
xor
shrl
aaa
pinsrw
es
dec
lret
push
movsb
and
adc
stc
xor
add
cmc
or
cmc
push
jno
pop
imul
hlt
cs
insb
jg
mov
pop
std
or
cmp
inc
fistps
lods
xchg
out
push
ljmp
adc
fdiv
inc
adc
xchg
jg
out
mov
push
mov
mov
mov
or
cmc
mov
dec
mov
push
fisubrl
dec
mov
cmp
mov
repz
shlb
push
ss
lea
lock
mov
jp
push
lret
ljmp
cld
dec
cmpsl
mov
xchg
jmp
scas
jb
inc
gs
lret
popa
dec
shr
cmp
ss
inc
cmp
dec
cmpsb
and
push
nop
iret
lret
loop
mov
pop
insl
sti
lds
lea
mov
pop
and
and
add
jmp
sbb
or
test
js
fisttpll
push
push
jnp
loope
sbb
test
enter
mov
inc
aaa
stos
sub
insl
add
push
xchg
push
pop
mov
add
adc
mov
sub
jl
xlat
stc
pop
jmp
cwtl
cmc
or
mov
push
sar
add
xchg
dec
aam
int
and
sbb
mov
jl
subl
lahf
outsb
lret
pop
jae
and
jae
xchg
test
stos
loop
insb
xchg
dec
xchg
gs
pop
cmp
ja
push
mov
xor
and
aam
aaa
daa
shll
push
nop
cwtl
scas
stos
mov
ljmp
notl
rorb
xor
push
adc
shlb
and
or
andb
add
sub
push
ds
push
bound
pop
jl
pop
imul
sub
bound
push
dec
mov
adc
add
pop
iret
pusha
jns
or
or
cmc
loop
test
pusha
cmpsb
xchg
stc
scas
test
pop
push
push
divl
lcall
mov
pop
pop
scas
pop
imul
cmp
sub
pop
mov
sub
cli
mov
or
cmpsb
push
aam
stos
jmp
push
and
adc
ss
outsl
inc
imul
mov
or
pop
arpl
movd
xor
jge
and
ljmp
sub
pop
xor
in
jge
lods
movsl
sub
jg
lods
push
js
xchg
pop
lods
pop
stos
imul
mov
jo
mov
icebp
add
gs
daa
insb
add
jo
cmc
sub
nop
push
mov
sub
pop
inc
fxch
push
push
orb
fmuls
mov
mov
xor
leave
or
jnp
cmp
andl
lods
mov
push
mov
leave
in
jae
cmp
inc
iret
pop
test
inc
mov
std
sbb
aas
xchg
dec
push
lcall
mov
lea
xlat
mov
int3
jle
pop
jae
dec
shrb
movq
pop
into
popf
pop
mov
dec
loopne
rcrb
adc
inc
outsl
jl
ds
add
leave
lahf
add
gs
pop
sbb
lret
jbe
insl
adc
adc
orl
xchg
and
xor
dec
add
das
ss
inc
iret
and
popa
pop
or
loop
in
addl
clc
enter
push
les
test
jl
cs
cmp
cmpsl
ljmp
test
imul
cmpsl
add
mov
mov
sbb
stos
jne
mov
jmp
or
jp
lret
mov
sbb
ficompl
imul
sub
push
and
jecxz
lahf
adc
data16
int3
mov
adc
out
fidivs
out
in
mov
in
mov
inc
mov
shrb
xchg
adc
mov
jl
sub
test
outsb
jge
insl
mov
mov
loope
pop
aam
jmp
inc
mov
fnstsw
dec
inc
ret
jge
pop
sbb
loop
xorb
push
mov
ror
mov
test
mov
jbe
rolb
xor
jecxz
push
lahf
pusha
mov
sub
in
in
int3
mov
repnz
add
adc
and
lods
addr16
fisubrl
daa
jnp
stos
dec
jp
inc
xor
mov
jbe
adc
ds
or
and
jmp
pushf
adc
les
and
push
cmpsl
outsb
add
push
mov
movsb
push
pushf
cs
rorb
dec
mov
push
test
aam
cld
fwait
and
push
adc
mov
and
addr16
xchg
mov
jge
inc
push
pop
xchg
cmp
push
cmp
aad
cmpsl
dec
test
mov
mov
jmp
pop
lret
les
adc
call
std
inc
cmpsb
loopne
pusha
and
pop
xchg
or
pop
shl
pop
in
into
mov
aas
mov
lcall
sbb
xchg
sahf
and
flds
cmp
fwait
out
bnd
or
xchg
out
pop
mov
popf
sbb
rcrb
test
pushl
scas
pop
xchg
fwait
pop
sub
adc
mov
adc
gs
mov
cmp
daa
adc
jae
out
jne
aas
cmc
leave
test
push
das
ret
popa
or
pop
or
out
es
iret
in
enter
fs
ja
xchg
inc
jns
push
cmp
lock
out
pop
cli
adc
adc
flds
or
pop
into
or
mov
stos
inc
pop
pop
ret
cltd
cs
int
pushw
push
jg
push
fwait
jo
cld
dec
xor
mov
cli
and
inc
out
mov
sbb
pusha
xor
fidivs
mov
pusha
stos
push
dec
pusha
push
int3
aaa
arpl
sahf
jge
inc
add
in
subb
fwait
rolb
xchg
scas
lds
adc
lock
hlt
inc
popa
inc
push
mov
mov
sti
jmp
andb
iret
addl
jbe
or
cmpsl
adc
mov
adc
outsb
dec
sbb
mov
jmp
addr16
test
xor
insb
mov
push
add
repnz
iret
push
mov
dec
cmc
or
std
push
nop
pushf
mov
clc
push
stos
mov
stos
add
nop
sub
mov
mov
dec
imul
enter
in
pop
int3
mov
dec
rcr
xchg
lret
sbb
stos
sti
les
mov
hlt
fildl
and
pop
jg
rclb
add
push
jnp
cmp
fistpl
mov
lea
fldt
fwait
xlat
pop
xor
daa
imul
add
das
insl
incb
mov
mul
cli
or
push
test
xchg
push
daa
in
xor
dec
and
mov
cmp
imul
mov
mov
xor
inc
mov
insb
out
testb
aas
pop
mov
mov
push
out
mov
pop
fstl
notl
xchg
mov
mov
enter
and
xor
add
push
int
leave
or
fnstenv
cmp
pop
cs
jo
jns
call
test
pusha
pushl
int3
sbb
jp
xor
adc
in
mov
jecxz,pt
out
in
pop
and
adc
sub
fwait
enter
cmp
jae
sbb
adc
pop
inc
cwtl
sti
xor
cmp
call
and
mov
out
jae
test
cmp
adc
or
test
dec
mov
inc
lods
shrb
push
lret
cmp
add
test
int3
mov
mul
or
sub
loope
sub
sub
movsl
cmpsb
ficoml
xchg
dec
int
adc
and
push
bound
jno
jb
sbb
cwtl
dec
or
dec
jge
xchg
cld
add
pop
cmc
sbb
aad
xlat
push
push
sbb
push
or
popf
push
icebp
pop
sbb
lock
mov
mov
pushf
lret
test
lea
sbb
orb
scas
push
ss
into
inc
lret
mov
and
cmp
imul
insb
inc
call
and
mov
and
rorl
sahf
pop
and
das
xchg
jae
adc
loopne
das
mov
int3
push
cmpsb
push
dec
cld
mov
lcall
imul
out
mov
and
jg
out
fisttpll
aad
inc
sbb
mov
sbb
mov
mov
dec
adc
push
cmp
sti
push
push
and
add
or
movsl
or
stos
cld
adc
cmpsl
sbb
push
push
mov
jbe
mov
and
out
add
lret
push
adc
push
push
mov
ss
cltd
jmp
into
mov
inc
jae
ss
xchg
xchg
popa
cmc
cmp
sbb
xchg
aas
sbb
or
lea
and
and
insb
int3
jb
lods
fwait
cmp
mov
sahf
and
imul
out
popf
imul
int3
mov
divl
cmpsb
mov
in
pop
dec
sbb
push
mov
scas
enter
jmp
or
mov
leave
dec
lahf
fwait
or
ret
sbb
ljmp
push
les
pop
std
xchg
cmp
adc
pop
cwtl
or
stos
lock
lcall
mov
or
in
imul
outsl
pop
mov
add
rcrb
nop
push
cld
insl
pop
mov
adc
in
mov
push
or
leave
repz
stc
div
adc
jmp
loopne
icebp
mov
xchg
popa
sbb
iret
aaa
sub
int3
pop
add
jo
add
xor
ljmp
cmp
xchg
jp
jmp
lds
jne
mov
mov
cld
cs
add
pusha
jbe
or
vrcpps
push
pop
imul
push
jae
pushf
mov
add
mov
addr16
cltd
lock
cmpsb
mov
loope
ljmp
sbb
cmp
adc
sbb
inc
xchg
cmpsl
dec
mov
mov
or
mov
dec
rolb
jne
sub
incl
mov
int
jmp
ljmp
mov
pop
mov
sbb
int3
push
push
mov
aam
sbb
sub
jno
fdivs
enter
sbb
aad
sub
inc
lahf
xor
ret
sbb
add
and
lock
xor
cs
add
test
mov
aam
sti
xor
lock
cmpb
xchg
xor
add
cmp
cli
push
stc
mov
inc
pop
gs
sub
outsl
xchg
hlt
outsl
ret
xchg
pop
aam
dec
int3
pop
pop
and
push
fdivrs
xor
lods
orl
imul
aam
inc
and
iret
fldcw
js
adc
cmp
outsb
test
mov
or
dec
push
mov
adc
mov
dec
inc
test
stos
out
imul
jle
sbb
jl
mov
pop
or
loopne
clc
add
sarb
adc
xor
mov
not
cs
sbb
jae
or
sbb
sub
lcall
mov
inc
insb
cltd
stc
sti
lock
repz
mov
nop
xor
pop
ret
fnstenv
icebp
mov
stc
xlat
mov
int3
imul
cmp
enter
mov
lret
pop
out
addr16
inc
fstpt
in
scas
jge
adc
lea
mov
push
xor
shrb
pop
or
adc
jae
lret
clc
inc
dec
bound
inc
sub
mov
std
sub
ret
mov
pop
nop
je
mov
popa
jbe
mov
repz
dec
adc
aad
mov
shll
jbe
dec
shll
sbb
xor
jge
cmp
and
lahf
iret
cmp
pop
ljmp
add
sub
aas
cmp
cmp
out
jno
cmp
and
inc
into
ljmp
mov
sub
cmp
and
dec
mov
lret
sbb
adc
cmp
sbb
adc
fldcw
nop
dec
fs
cld
and
xor
pushf
pop
mov
js
push
mov
xor
pop
addr16
sar
iret
scas
push
daa
and
push
pop
push
lcall
mov
xchg
jmp
mov
dec
jmp
mov
xchg
lret
sbb
add
push
fwait
sahf
sbb
scas
add
fiadds
cmp
ljmp
icebp
gs
fisubl
jmp
call
xor
lods
pop
fwait
jno
xor
lret
stos
cmp
movsl
xchg
mov
out
movsb
mov
test
inc
adc
popa
cmp
insl
std
push
inc
pop
lock
mov
icebp
outsb
mov
repnz
cmp
sbb
test
cmp
and
jmp
inc
sbb
xchg
les
mov
hlt
cltd
dec
xor
push
sub
insb
jns
fbld
mov
icebp
shl
mov
je
aam
add
scas
inc
jg
stc
es
adc
pushf
jg
push
daa
ror
aaa
shl
fnsave
mov
push
mov
filds
loopne
out
loope
imul
fsubl
inc
lcall
mov
and
out
movsl
pop
iret
shlb
jle
mov
mov
push
xor
mov
imulb
es
mov
rcrb
es
sti
imul
imul
sub
orl
push
out
push
lret
add
mov
test
cmp
cmp
movsb
nop
pop
data16
pop
mov
pop
inc
movsb
bound
pop
stc
or
cmp
into
scas
sub
push
mov
rclb
inc
fs
cmp
test
sub
adc
jne
jne
xor
andb
push
int
cld
xor
mov
stos
mov
ds
repz
stc
fists
jg
xor
or
sub
lahf
cmp
repz
adc
int3
or
add
insl
iret
cmp
in
cmp
pop
push
test
lods
pop
jnp
inc
iret
dec
push
xchg
xchg
add
repnz
jmp
and
sbb
cmp
jnp
mov
push
in
inc
addb
shl
lret
gs
mov
cmpsb
aaa
sbb
call
loope
ljmp
inc
rcrb
pop
mov
dec
pop
call
or
es
mov
je
into
stc
stos
daa
fld
loope
fcmovu
and
int3
mov
jnp
lret
and
sarl
test
mov
lds
stos
pop
pusha
inc
mov
andl
pop
ret
dec
jmp
std
arpl
dec
loopne
dec
cmp
stc
sbb
mov
dec
pop
lds
outsl
fidivs
loop
fcompl
wrmsr
jbe
pop
push
cld
mov
mov
pushf
out
ret
xchg
iret
adc
xchg
xor
leave
outsb
inc
out
push
push
loope
jg
inc
push
in
jo
lret
aaa
rol
ficoms
push
jnp
iret
scas
sub
cmc
mov
mov
icebp
xlat
push
dec
test
sbb
dec
mov
push
cmp
pop
mov
daa
hlt
sti
aaa
dec
xchg
shl
mov
jg
daa
push
hlt
jecxz
cmp
and
jnp
add
mov
jmp
adc
addr16
inc
or
movsb
enter
mov
mov
pop
nopl
and
sbb
shrl
xor
lret
mov
push
adc
dec
std
pop
mov
repz
sbb
es
jb
int
lcall
cmpsb
stos
adc
add
scas
in
aas
add
mov
arpl
in
aas
aas
aas
add
mov
push
bound
negl
dec
loope
cmp
in
push
jge
push
pop
mov
mov
sub
or
mov
sub
mov
clc
arpl
adc
dec
adc
adc
in
loope
sbb
push
lds
dec
jmp
jl
hlt
shlb
xor
shl
add
cmp
lea
mov
mov
out
dec
das
in
inc
and
in
jmp
lret
mov
mov
sbb
push
aad
in
dec
push
cmp
cmp
stos
iret
test
rcll
xchg
aam
ret
mov
pop
mov
shr
lret
add
iret
out
mov
fdivs
shll
fsin
fs
repnz
xchg
out
cmpsb
xor
in
pop
cmc
mov
pop
mov
push
mov
lcall
sar
into
cmpsl
inc
andl
jg
test
jmp
gs
xlat
cld
xchg
insb
xor
stos
mov
jbe
dec
and
fiadds
xchg
sub
mov
sub
or
adc
sahf
adc
jae
sub
sti
add
cmpsl
push
xor
imul
cmp
cwtl
pop
xchg
inc
mov
dec
mov
mov
out
mov
or
negb
push
push
mov
outsl
inc
das
in
fildl
xchg
and
stos
fdivr
push
daa
mov
outsl
test
loop
cmpb
mov
adc
loope
xor
ds
sbb
xor
cmpsl
push
xchg
mov
lret
push
ficompl
stos
ret
and
mov
int
pop
adc
xchg
xor
push
pushf
cld
and
push
imul
repz
insl
xchg
inc
fisubrs
jmp
outsl
outsb
add
cmp
jp
je
cwtl
adc
push
inc
cmp
out
pop
pushf
inc
fcomps
add
aad
sub
xchg
lahf
popf
dec
imul
test
or
lahf
push
fdivrs
scas
cmpl
jge
jge
adc
repnz
dec
dec
cmp
xor
lcall
inc
scas
xchg
cli
hlt
mov
es
push
jp
or
test
mov
xchg
shl
arpl
and
in
fnstsw
jmp
cwtl
adc
xchg
jecxz
pop
xor
adc
test
dec
test
mov
mov
outsb
push
cmp
xchg
pusha
dec
sub
inc
adc
lret
cmp
in
arpl
adc
mov
test
ja
adc
sub
lret
cld
imul
push
cltd
dec
dec
int
sub
fnsave
pushf
out
mov
out
and
mov
push
push
and
xchg
mov
ffreep
mov
mov
inc
dec
pop
mov
ret
outsl
sar
lcall
push
sub
mov
dec
je
and
mov
jmp
ja
xlat
push
adc
mov
dec
mov
jne
pop
popf
xorl
jae
or
jg
dec
lret
cmp
fs
or
xor
movsb
stos
rep
add
or
and
rolb
mov
mov
data16
movsl
pop
jmp
daa
es
fsubp
out
aaa
scas
test
mov
sbb
add
fs
es
insb
aas
lcall
inc
inc
jle
jae
mov
cmc
sbb
adc
add
fildll
add
sub
xchg
enter
mov
into
jne
sub
dec
adcl
xchg
out
or
movsl
or
mov
mov
or
jle
jbe
out
outsb
imul
out
xor
mov
cmpsb
movsb
and
sbbl
mov
mov
dec
adc
dec
dec
add
inc
push
cli
out
adc
jle
dec
pop
fs
aas
std
mov
decb
inc
leave
decb
inc
outsl
mov
in
mov
mov
rorb
jns
popl
push
push
loopne
loope
lea
adc
pusha
push
cmp
cmp
gs
enter
clc
cli
push
jne
and
pop
lahf
addb
sbb
add
daa
fwait
mov
pusha
ss
in
out
xchg
dec
push
or
subl
lcall
lods
push
xor
insl
into
add
shrb
or
mov
scas
jecxz
aam
test
push
cmpsb
mov
inc
inc
add
mov
cmpsb
addr16
pop
xor
mov
jge
or
inc
jns
movsb
cmp
mov
push
inc
test
pop
mov
pop
pop
jle
push
aad
call
push
movsl
and
call
pop
sbb
sbb
add
and
mov
pop
test
hlt
ja
stos
das
pop
push
dec
incb
shr
mov
bound
loop
fistl
addr16
cwtl
daa
add
jmp
push
inc
mov
xor
jno
sub
adc
inc
mov
fisttpl
divl
into
rcr
mov
jl
lcall
add
int
xchg
ss
ds
les
clc
ja
stos
cmp
fisttps
jo
cmp
xor
mov
adc
sbb
cmpsl
repnz
xchg
call
pop
dec
fcompl
xchg
jnp
sti
neg
aaa
les
notl
mov
gs
icebp
data16
outsb
mov
cs
adc
pop
sub
test
icebp
jae
idiv
sub
fs
repnz
add
mov
lret
cld
mov
mov
or
aad
add
stos
loope
or
adc
rcrl
pop
pop
mov
orb
sbb
cmp
mov
outsb
stc
push
shlb
xor
cmp
jl
mov
outsl
push
sub
sahf
in
jbe
js
and
cmp
lods
pushf
xor
jbe
stos
mov
sub
mov
fcomps
stos
sub
and
add
mov
sub
inc
pop
push
nop
imul
movsb
mov
or
loopne,pt
mov
iret
icebp
pushf
arpl
fcom
add
iret
cmp
push
int3
adc
or
xchg
lea
lret
je
fistpll
out
dec
cmpsb
jp
popf
sbb
fsts
push
shrb
call
arpl
xchg
mov
repz
out
mov
pop
push
inc
fwait
xorb
out
mov
cltd
sbb
jo
es
xchg
pop
xor
subps
pop
push
icebp
jge
xor
je
sub
or
xor
mov
cmp
jle
cmpsb
inc
imul
mov
or
pop
test
xorb
add
jge
push
mov
adc
ss
aam
orb
add
jae
add
mov
divps
adc
cmp
cmp
daa
inc
adc
mov
lock
mov
inc
pop
lret
aad
outsl
or
inc
fcomps
push
inc
mov
pop
hlt
cmpsb
xor
and
jmp
dec
lret
adc
jo
addl
hlt
and
xchg
jo
jno
inc
push
sbb
jne
insl
and
cltd
xchg
sub
outsb
data16
addl
jge
imul
repz
shll
fcomip
jle
mov
sub
shrb
mov
mov
add
in
movb
call
sti
xor
jbe
aam
inc
test
mov
mov
dec
or
cmp
jno
sbb
test
mov
jmp
ja
inc
lock
jb
les
mov
sub
into
rol
add
pop
iret
jl
mov
mov
mov
scas
pop
shrl
popa
mov
sti
mov
mov
xor
mov
clc
add
push
push
dec
les
lcall
xchg
popf
cmp
sub
lcall
jae
sub
sbb
xchg
and
ret
xor
jge
inc
add
mov
repz
ret
xchg
jl
xor
fwait
and
insl
xchg
daa
xor
js
popa
sahf
ficomps
repz
icebp
or
and
iret
loope
jae
roll
rolb
mov
mov
aaa
lahf
sbb
je
mov
pop
cwtl
dec
imul
cli
out
lods
xchg
iret
loope
xor
pop
xchg
rcr
lea
cs
xchg
std
sahf
mov
and
fildl
cli
shlb
jo
xchg
sbb
cwtl
outsb
dec
xchg
scas
int
mov
cmpsl
lock
repnz
stc
mov
arpl
mov
xchg
jbe
adc
add
mov
lret
and
outsb
sarl
mov
jg
mov
dec
dec
lds
xchg
xor
cmp
rolb
cmp
xchg
icebp
jl
push
cmp
cmc
in
jmp
push
in
or
mov
jl
sar
push
in
pop
lds
mov
inc
lods
scas
test
and
scas
outsb
in
push
push
in
cmc
mov
push
or
std
fs
and
jo
loopne
mov
add
outsb
movsl
mov
lahf
lods
dec
mov
fucomp
mov
adc
xlat
test
insb
pop
jecxz
icebp
jp
xchg
mov
hlt
pop
xchg
jbe
dec
aad
mov
lahf
dec
and
icebp
pop
cmpsb
sub
notl
push
test
test
ljmp
jge
fsts
fs
test
shrb
jecxz
sbb
push
jg
push
mov
int3
mov
dec
testl
jecxz
mov
aas
jno
andb
fdivp
mov
push
push
jle
je
dec
or
cld
iret
scas
mov
mov
cmp
jcxz
pop
leave
out
adcl
or
out
jb
in
sahf
sti
cmp
add
test
xchg
adc
pusha
push
fisttps
cmpsb
inc
jb
ficomps
pop
gs
rolb
mov
mov
lcall
inc
cmp
xchg
mov
mov
sub
cmp
incb
lret
cmp
sub
add
fadds
mov
cli
mov
adc
pop
pop
roll
push
nop
and
int
mov
aad
xchg
mov
or
sbb
xchg
sbb
xor
lea
xor
shlb
lahf
std
sub
push
cmp
sbb
adc
adc
into
shrl
lods
cld
mov
jge
xlat
aam
sbb
push
dec
mov
arpl
out
imul
add
nop
adc
xchg
or
cmpb
in
fucom
leave
and
push
mov
add
add
shr
sahf
or
add
cld
xor
cmc
xchg
leave
push
neg
sub
or
or
pop
mov
xchg
femms
outsl
cmp
cmp
xor
lock
xacquire
cmc
sbb
add
fidivl
clc
clc
and
xchg
mov
jne
fmuls
fdivrl
fisubrl
xchg
or
int3
jb
cs
sub
mov
pushf
int3
mov
xchg
dec
mov
ljmp
popa
inc
mov
adc
jp
fdivr
jge
adc
in
in
stc
fcompl
test
jbe
inc
nop
hlt
mov
insl
and
filds
sarb
cmp
enter
or
push
pop
pop
xor
mov
xor
inc
fldenv
sahf
mov
pop
jb,pt
mov
jmp
push
pop
mov
ffreep
mov
mov
cli
jbe
cmp
cmpb
ljmp
iret
bound
shrl
dec
roll
mov
xor
outsl
fxch
cwtl
push
lods
into
pusha
scas
and
bnd
data16
shlb
sub
push
add
jecxz
mov
aaa
cmp
outsb
lods
dec
pushf
cli
adc
cmpl
adc
lods
and
gs
adc
jle
es
sbb
mov
lret
sub
movsb
fstl
cmp
sbbl
mov
push
cmc
shl
in
jg
sub
mov
mov
in
aad
jecxz
pop
iret
sbb
fmulp
in
jo
stos
nop
je
jno
into
mov
inc
jmp
pop
in
arpl
push
cmp
pop
fisttps
and
daa
sbb
dec
scas
popa
jns
ret
adc
hlt
pop
fimull
lret
divl
and
xor
cld
scas
xchg
inc
pop
repz
lds
scas
pusha
dec
pusha
push
inc
mov
test
mov
push
sub
cmc
inc
in
mov
mov
call
js
mulb
testb
pop
incb
lret
dec
outsl
mov
sbbl
pusha
repnz
arpl
pop
mov
ds
in
mov
hlt
xor
mov
ds
in
xchg
push
scas
jo
test
mov
fcoms
lret
xchg
cmc
ficompl
push
push
bound
adc
into
fsts
test
inc
adc
mov
add
movsb
mov
cmpsl
js
lods
out
inc
adc
in
iret
rcrb
divl
pop
in
cmc
dec
imul
mov
mov
mov
xor
sub
std
shrb
xlat
scas
xrelease
jmp
ret
pop
test
loopne
cmp
xchg
mov
mov
mov
dec
aad
xchg
dec
cmp
jo
and
inc
gs
imul
nop
dec
xchg
cli
divb
pop
inc
or
mov
es
mov
jle
inc
mull
fcomps
or
sahf
sbb
test
pop
add
hlt
sub
idivb
pop
inc
push
shrb
jg
pop
mov
les
mov
adc
in
hlt
and
adc
push
notb
int
mov
jae
xor
aaa
mov
stos
sti
nop
ret
dec
xor
dec
shlb
stos
ss
jae
xchg
scas
scas
fsubs
aaa
xchg
cmpl
pushf
pop
xor
push
lret
ret
cmp
inc
and
insb
dec
sbb
push
cli
repz
sub
movsl
xchg
iret
xor
dec
lock
push
pop
pop
stos
andl
in
xor
cld
sbb
movsl
fisubs
call
cmp
mov
lahf
sahf
inc
out
mov
ja
std
inc
push
and
lock
mov
pop
and
pop
jb
jp
mov
std
iret
daa
cmp
adc
xor
mov
sbbb
repnz
cld
test
js
int
nop
mov
push
outsl
orb
adc
mov
in
mov
nop
sub
repz
xchg
out
popf
jl
sti
stc
and
mov
or
jo
push
ror
jmp
lcall
popa
int3
test
lods
stos
insl
push
inc
adc
adc
sub
jo
leave
pop
dec
lea
push
lds
jmp
or
rclb
mov
ljmp
repnz
pop
lahf
mov
cwtl
movsb
push
pop
leave
cmpl
jno
xor
call
cmp
pop
pusha
sub
sbb
notl
add
ficoms
icebp
or
les
inc
push
cmp
or
or
loopne
hlt
and
fwait
aam
dec
movsl
mov
sub
push
push
sbb
popf
cmp
cmp
cmp
xor
push
aam
pop
mov
add
jae
jno
or
pop
arpl
and
shll
inc
je
sub
fcoml
push
push
inc
outsl
in
xor
je
and
out
aaa
mov
ret
jg
addr16
mov
cmp
outsl
and
jle
mov
adc
scas
jge
jmp
rcr
test
dec
arpl
inc
fiadds
add
sbb
mov
inc
rcrl
xchg
fisttps
mov
mov
dec
cmp
inc
sti
fdivrs
scas
push
icebp
mov
jno
es
xchg
stos
push
imul
adc
stc
sub
xor
jle
jmp
rclb
push
popf
orl
xor
cmp
out
push
ja
adcb
mov
test
sbb
or
fidivrs
sub
in
mov
jmp
add
push
cmp
pusha
aas
decb
and
adc
pop
test
outsl
cmpb
shr
xor
jecxz
add
sub
arpl
and
cmp
or
scas
test
clc
scas
or
ret
stos
call
in
ja
inc
pushf
data16
pop
jmp
sarb
orl
adc
imul
cmp
insl
mov
stc
mov
dec
sub
cs
or
test
lahf
sbb
lods
pusha
lcall
outsb
xorb
cmp
adc
xor
add
push
push
jb
fcos
mov
mov
add
mov
mov
lods
fidivs
mov
icebp
mov
add
pop
push
outsl
outsb
ds
jge
or
mov
mov
sahf
ss
or
adc
lods
and
daa
test
or
das
into
in
pop
mov
lret
xchg
cmpsl
out
push
add
test
movsl
push
in
mov
or
xchg
and
imul
stos
xchg
adc
jne
sub
out
jno
push
movsl
ljmp
popa
loopne
inc
mov
pop
fsubl
and
nop
adc
sub
cli
mov
pusha
jmp
das
icebp
mov
push
mov
leave
cmpsb
pusha
pop
cld
mov
cli
ds
sub
iret
pop
pusha
ret
xchg
bound
sbb
movsl
lea
outsl
roll
les
leave
jnp
cmp
pop
cmp
test
lahf
jo
outsl
bound
cmp
or
push
push
sti
push
movsl
jge
xchg
jo
shr
fnstsw
mov
into
or
pop
pop
sbb
das
incl
aas
scas
loope
add
in
mulb
jns
push
mov
inc
xor
jnp
shl
cld
jo
test
aaa
jae
jge
fbld
mull
push
lea
pop
ss
int
cld
pushf
adc
pop
add
push
sub
hlt
aad
pusha
sub
test
jge
inc
fisttpl
dec
rorl
out
mov
sbb
imul
push
push
inc
mov
and
hlt
cmpsl
test
mov
in
add
sub
aam
imul
jno
mull
insl
scas
mov
xor
cmpsb
lods
jmp
jnp
lods
mov
mov
movsl
and
xor
outsl
addr16
xchg
imul
adc
jmp
jns
bound
into
add
xchg
test
cmp
xchg
or
orb
ja
shr
mov
hlt
sub
daa
mov
push
mov
gs
push
mov
fmul
gs
aam
push
fdivrs
fwait
popa
sub
mov
and
nop
push
stos
xchg
std
leave
jno
dec
inc
dec
mov
call
cmpsl
loope
and
push
stc
out
clc
fdivs
xchg
xchg
xor
lcall
lods
lcall
aam
ret
lea
and
lret
or
xchg
test
lds
and
scas
aas
jbe
fnstsw
ss
inc
roll
jecxz
dec
movsb
fidivrl
xor
test
mov
pop
iret
cltd
xchg
and
mov
xor
dec
lds
mov
mov
loope
pop
cmp
out
call
pop
jmp
cld
or
stos
fildl
or
daa
sub
dec
fcmovnu
dec
cmp
push
cmc
in
push
push
in
lret
dec
and
stos
or
or
cmp
das
xchg
pusha
sbb
into
cmp
push
in
mov
mov
insl
cld
cmpb
mov
or
pop
mov
adc
jnp
fwait
orl
jno
mov
mov
pop
loope
cmp
call
repz
add
loopne
arpl
dec
pop
fildll
lods
xor
sbb
mov
popa
inc
push
mov
and
mov
xor
jmp
in
push
sub
xchg
xor
wbinvd
sbb
mov
leave
dec
lret
mov
sbb
icebp
mov
js
sbb
lret
and
js
add
adc
dec
xor
aaa
jle
push
mov
xor
or
lds
outsl
jg
jo
arpl
sarl
push
arpl
in
loope
outsl
in
jecxz
fstp
cld
and
sub
and
sbb
mov
mov
clc
mov
pcmpgtw
idivb
adc
in
push
dec
mov
in
addb
mov
lret
sbbb
stos
xor
dec
add
bound
sbb
pushf
pushf
fmuls
mov
push
stos
jne
jns
aam
pop
aad
movsl
jbe
mov
jbe
sbbl
rorl
mov
adc
mov
cli
dec
push
pop
mov
mov
or
ficoml
push
test
minps
jecxz
fisubrs
outsb
clc
push
and
jns
jae
push
lahf
scas
nop
jp
lret
cmp
mov
insb
jno
mov
dec
in
mov
dec
sbb
out
xor
adc
jb
popa
mov
mov
aad
mov
imull
mov
addr16
ss
out
mov
scas
addr16
inc
lock
cmpb
xor
cmpsl
mov
call
divb
jecxz
or
imul
shrl
jmp
cmc
sbb
repz
and
xchg
mov
pop
rcrl
mov
jns
fwait
inc
notb
cmp
pop
popf
and
scas
and
mov
ret
mov
dec
in
pop
adc
adc
lahf
fldl
lret
mov
loopne
xor
jecxz
xchg
or
movsl
jmp
mov
int3
push
adc
mov
xchg
xchg
push
cmp
ret
sbb
pop
gs
jns
fwait
jmp
in
cmp
add
push
cmp
outsb
pop
std
sub
or
add
jmp
sahf
jae
and
cmc
loopne
dec
enter
lds
les
addl
xor
mov
icebp
xchg
cmpl
mov
dec
xchg
mov
or
test
lods
sbb
shlb
dec
pushf
cmp
and
xchg
shll
xchg
inc
fcomps
int
push
and
call
ret
or
mov
fnstsw
adc
jge
mov
jmp
xchg
xchg
aad
pop
cmp
jae
xor
xlat
xchg
inc
pusha
xor
sub
leave
pop
rcl
push
aaa
sub
jnp
jge
jb
cmp
mov
xchg
jnp
invd
pop
sbb
into
je
jge
bound
xchg
repnz
dec
dec
adc
fs
ret
jecxz
out
imul
std
ljmp
dec
fstl
std
lcall
loop
pop
jns
outsl
les
or
jae
sbb
ds
push
mov
or
dec
inc
ret
jg
je
dec
std
ja
and
insb
stc
xor
decl
or
push
adc
dec
into
mov
hlt
mov
ljmp
lock
xchg
mov
repnz
insl
xchg
je
imul
daa
xchg
pop
hlt
jns
test
mov
outsl
movsl
jp
sbb
fisttps
mov
add
jns
data16
mov
repz
dec
mov
mov
popf
mov
pop
stc
sahf
andl
aam
jo
mov
dec
xlat
outsb
or
scas
js
add
mov
pop
and
cld
ss
xchg
jmp
pop
cmp
xchg
out
mov
out
mov
test
jns
xlat
in
scas
enter
push
cmc
inc
idivb
adc
mov
cld
pop
push
or
xor
pop
mov
call
sahf
fwait
dec
sub
mov
cmpsb
and
lods
jne
icebp
dec
push
rclb
stos
subb
rorl
xchg
daa
xchg
inc
enter
sbb
sbb
xor
sub
add
xchg
leave
ficoml
mov
lods
insl
mov
outsb
pop
out
pop
cmp
sbb
and
cmp
push
jg
push
sub
iret
push
sbb
xchg
add
cltd
and
dec
inc
add
sbb
cmp
push
jno
ja
je
roll
inc
sub
lods
fidivs
cmp
inc
sub
adc
sub
jp
xlat
cmc
push
loope
outsl
cwtl
jl
shl
div
enter
cmpsb
je
test
push
enter
and
bound
and
movswl
shlb
xchg
mov
dec
or
sbb
lret
addb
movsb
inc
pop
mov
pop
jne
mov
jb
mov
fisubrs
jns
push
into
ss
mov
and
jle
cmp
ret
out
push
mov
rcrb
mov
in
sub
cmp
int
xchg
xchg
lcall
mov
mov
add
sbb
in
inc
ja
sub
pop
cld
daa
inc
imul
divb
cmp
inc
jnp
mov
in
aaa
cmpsb
insl
pop
test
arpl
enter
mull
mov
push
ja
sarl
dec
and
cmp
ss
pop
push
xchg
sub
stc
push
rol
hlt
loope
sbb
in
scas
nop
arpl
inc
push
sub
mov
testl
or
shl
push
add
jo
lods
or
push
clc
ret
les
ss
loopne
mov
in
push
flds
nop
das
fwait
stc
jnp
test
movsl
or
loopne
int
xchg
mov
cwtl
out
popa
sub
mov
adc
hlt
pop
adc
inc
xchg
xchg
push
xchg
divl
and
xchg
pop
fwait
lods
addps
jg
jmp
jne
pushf
push
xchg
xchg
xchg
add
xchg
jl
fnstsw
rcll
dec
rep
inc
xor
mov
push
pop
loope
ljmpw
push
mov
pop
stos
pop
imul
nop
cli
mov
hlt
pushf
push
cli
cmpb
mov
jp
add
leave
jecxz
vrcpss
mov
xchg
bound
push
stc
jmp
mov
jo
movsl
mov
in
pushf
xchg
sahf
sbb
and
rorl
inc
dec
sbb
sbb
jl
inc
or
sub
in
test
lret
call
hlt
xchg
cmp
lock
les
mov
jns
sub
xchg
cmp
scas
fs
into
push
icebp
shlb
push
in
js
test
mov
sbb
imul
retw
jge
jnp
inc
sbbb
addl
jmp
or
mov
insl
rclb
or
ss
mov
hlt
test
adc
adc
jge
lret
je
mov
pop
and
rcrl
js
inc
loopne
fnstenv
cltd
dec
push
jge
fs
ret
insb
pop
mov
test
sbb
data16
xchg
call
popf
das
sbb
mov
dec
mov
cld
inc
mov
lahf
fistpll
insb
mov
enter
sub
movsb
mov
mov
gs
nop
sbb
shr
cmp
and
mov
pop
pop
pop
jl
test
cmp
pop
les
ja
sbb
in
mov
out
pop
dec
fcoml
xor
and
leave
mov
mov
or
xchg
cwtl
pop
daa
adc
cmpl
dec
scas
popa
icebp
iret
vpsraw
mov
scas
and
mov
mov
repnz
imul
push
popa
push
add
aas
shlb
cld
shll
aaa
jle
jg
fisubl
in
dec
lcall
xchg
jmp
scas
or
shld
or
cmpsl
fcompl
cmp
imul
mov
mov
mov
mov
fcmove
push
fistl
pushf
addr16
lods
dec
and
xor
mov
cmp
mov
mov
jp
push
pop
xchg
enter
adc
adc
in
push
adc
fimull
es
mov
sbb
mov
dec
testb
jp
mov
xor
xor
xlat
hlt
daa
jns
testl
in
xchg
call
xor
aas
in
orb
pop
jns
pop
retw
push
popa
adc
jge
and
sbb
mov
enter
ficoml
insb
xchg
add
mov
fisttpl
push
inc
mov
or
inc
and
nop
xchg
sbb
loopne
sbb
std
aad
jle
fcompl
pop
sub
stos
insl
ja
add
pop
call
xor
mov
or
rcl
push
inc
into
iret
inc
mov
mov
js
jo
enter
and
test
repz
xlat
adc
xchg
dec
pop
movsl
std
sub
or
bound
jb
xchg
out
leave
cld
add
lds
scas
mov
filds
outsb
mov
cwtl
ljmp
xor
mov
dec
jp
scas
out
cltd
lahf
ja
scas
cmc
jl
or
leave
xchg
xlat
stc
mov
cmp
pop
mov
into
add
push
inc
cmp
push
fisubl
dec
outsb
jp
sbb
arpl
popa
inc
call
cmp
adc
mov
mov
and
out
out
sub
lcall
fwait
sbb
test
stos
inc
test
sub
iret
pop
sub
and
hlt
cmp
aaa
fadds
lcall
mov
mov
push
inc
enter
das
mov
stc
mov
fdiv
jns
mov
cmp
mov
push
leave
cmp
shrb
jle
in
ljmp
mov
stos
xorb
inc
push
in
lods
int3
jecxz
cmp
xchg
mov
xchg
or
sarb
jge
xchg
sub
data16
test
fmull
jge
repz
xchg
enter
mov
shll
xor
cmp
mov
subl
mov
mov
adc
stc
cmp
lret
mov
mull
fs
pop
movsb
xor
fdivl
leave
mov
pop
pop
lret
sbb
push
lcall
adc
aam
xor
xchg
jbe
cs
sub
leave
addr16
pop
mov
lret
rcll
lcall
bnd
fsubrl
hlt
je
push
fnstenv
lcall
fldenv
or
sub
xor
pushf
or
sub
ret
ja
in
mov
addr16
dec
scas
push
push
shrb
inc
or
xchg
inc
mov
call
sahf
xor
fisttps
imul
push
jne
push
rcl
gs
mov
scas
mov
mov
ds
lds
mov
or
xor
inc
cmc
ss
test
xchg
movsl
jnp
add
lock
cmp
mov
call
mov
mov
div
and
lea
push
inc
sbb
inc
jle
iret
xrelease
loop
sti
cs
cld
jns
ret
nop
and
arpl
hlt
ja,pt
push
ret
fsubrl
jg
jmp
ficomps
lret
fdivs
loope
xor
stos
dec
cmp
outsb
xlat
not
jmp
lds
xchg
lret
imul
pop
and
aad
pop
out
sbb
add
andb
int
sbb
movsl
sbb
mov
lds
out
jecxz
int3
js
notb
out
mov
aaa
dec
and
lods
addr16
jno
mov
mov
insb
mov
adc
lret
cmp
sbb
pop
sub
push
ret
lret
pop
ja
jne
lcall
xchg
int
popf
mov
out
mov
lahf
pop
std
data16
jns
add
rcl
pop
mov
and
jns
mov
and
push
jne
pushf
outsl
sub
fsubs
xchg
fs
loope
fists
std
xchg
sbb
mov
bswap
stos
insl
or
push
leave
shll
ja
mov
xlat
mov
test
aaa
push
pop
stos
fcmovnu
dec
cwtl
sarl
mov
xor
ss
cmp
in
add
push
mov
jbe
rol
mov
roll
push
daa
inc
pop
popf
sub
xchg
lcall
push
out
and
jmp
sub
lahf
not
fnstsw
jnp
push
jmp
dec
jns
pushf
loop
and
lock
push
das
fwait
das
in
and
mov
xchg
stc
push
sub
fisubl
lods
mov
mov
cmp
sbb
pop
sub
mov
in
mov
sub
stc
shlb
sbb
in
je
je
xchg
das
mov
and
jns
in
push
icebp
add
inc
cwtl
jmp
xor
insl
data16
xchg
filds
cmpb
lcall
cwtl
call
push
in
add
int
xchg
mov
lret
mov
iret
cmp
setno
lret
mov
sbb
and
pop
xchg
inc
or
imul
in
scas
jbe
mov
dec
insb
mov
mov
inc
dec
bswap
mov
pop
jne
pop
scas
insb
in
scas
xchg
loop
dec
aam
xchg
lds
adc
loope
jmp
out
mov
jle
add
add
rolb
mov
sbb
dec
andb
xor
movsb
fldenv
lahf
mov
inc
xor
ds
xchg
sub
rcrl
icebp
loop
fists
or
inc
xchg
add
in
jp
or
xor
add
pop
inc
sti
jae
sarb
lock
push
hlt
add
and
sbb
cld
pop
lods
pop
repnz
loop
nop
jg
stos
add
lcall
jg
ss
int3
xchg
mov
pop
aas
pop
pop
mov
adc
popf
inc
push
sub
mov
js
mov
rolb
lcall
mov
sub
je
in
push
cmpl
bound
mov
sarb
add
outsb
data16
jp
mov
pop
rcrl
das
cmp
and
in
fwait
lds
mov
mov
push
mov
sahf
pmuludq
dec
cmp
cmc
in
pop
pop
xor
loop
je
inc
jp
mov
sbb
ss
sub
pushf
pop
xchg
out
adc
push
shrb
xchg
dec
jge
stc
test
or
aam
sub
js
sub
add
jp
push
mov
mov
and
test
int3
insb
inc
pop
repz
adc
mov
inc
je
jnp
dec
push
mov
hlt
sti
decl
shrl
lahf
iret
movsl
fs
pop
icebp
inc
repnz
mov
jmp
dec
push
je
push
adc
leave
les
fnstenv
cmp
mov
dec
jns
lret
fs
adc
ss
jle
xchg
rorb
daa
cli
xchg
inc
mov
out
mov
ss
inc
loope
and
dec
lods
or
sub
jno
sti
cs
in
std
push
cmp
cwtl
mov
sbb
aas
push
mov
xor
ret
mov
repnz
lock
insl
jecxz
mov
dec
into
test
adc
test
push
in
cmpb
cltd
in
lods
outsl
arpl
cmp
mov
cld
jecxz
cwtl
iret
xor
adc
pop
adc
divl
insb
int
pusha
mov
dec
sub
lret
cmp
inc
mov
mov
pop
xchg
xlat
sub
outsl
dec
shr
loop
mov
pop
cltd
sbb
repnz
mov
add
aaa
push
adc
outsb
cmp
jnp
cld
mov
ficoms
xor
push
in
in
adc
and
imul
loope
cs
sub
pop
aas
cmp
sbb
jge
gs
std
out
iret
fisubrs
call
push
test
xor
je
sub
sbb
mov
int3
subl
decl
popf
outsl
and
mov
test
mov
mov
mov
testl
add
add
dec
inc
push
sub
cmp
mov
faddp
cwtl
call
inc
jecxz
and
cmpsb
pop
pop
xchg
xor
das
adc
sub
push
leave
and
lea
mov
jle
pop
mov
dec
enter
dec
stos
pop
inc
dec
sbb
pop
xor
test
xchg
mov
out
add
in
scas
lea
push
xor
ss
and
adc
inc
xchg
sub
push
adc
xor
mov
ficomps
jnp
xchg
lds
rcl
arpl
loope
repnz
hlt
leave
popa
cmpsb
mov
cmpsl
jmp
aam
xor
sub
jl
pop
xchg
js
test
mov
sti
and
cwtl
inc
aaa
sbb
neg
lea
nop
mov
dec
mov
mov
sub
cmp
adc
aam
adc
xchg
sub
je
scas
sahf
adc
ret
test
sbb
ret
sahf
in
inc
pop
mov
jmp
mov
pop
cwtl
mulb
std
sbb
mov
mov
mov
in
adcb
inc
pop
fdivrs
cld
and
shr
vpacksswb
push
or
jns
dec
or
addr16
mov
ret
stos
xchg
mov
insl
ret
cmp
mov
hlt
ja
dec
push
mov
out
xchg
inc
data16
mov
cltd
mov
fsubs
or
dec
sbb
fdivrp
mov
dec
ret
pop
mov
sub
imul
inc
lret
repnz
mov
dec
jecxz
inc
add
fs
repnz
out
add
xor
jo
xor
lret
test
pop
and
inc
lds
xchg
addr16
ja
xchg
aas
cmp
mov
jg
rcrl
push
sub
int3
les
jno
cli
sbb
add
pop
out
fildll
and
fidivrs
inc
add
enter
xchg
add
pop
mov
clc
push
ljmp
mov
or
and
rorb
fbld
mov
mov
cmp
ficoms
mov
sbb
test
push
lock
xor
or
jae
or
pop
xor
adc
gs
or
cmpsl
repnz
je
sti
push
in
les
je
dec
pop
stos
jl
arpl
mov
vpminub
jge
jbe
and
add
outsb
or
pop
inc
pusha
sub
xor
dec
xchg
fcmovnb
pop
push
xor
pop
and
js
outsl
lcall
cltd
mov
mov
cmpsl
cld
sti
movb
or
lret
mov
mov
cmpsb
sbb
cmpb
cmp
jmp
pop
xor
imul
sahf
daa
std
sub
or
adc
call
mov
dec
push
mov
sub
stc
pop
icebp
out
lds
push
xor
adc
adc
les
aas
shrb
inc
stc
push
test
shr
enter
xchg
dec
push
jnp
sbb
mov
push
sub
xchg
jno
cmp
push
je
fwait
pop
daa
inc
ret
cld
add
adc
test
mov
aas
not
jge
mov
xor
icebp
adc
dec
cmp
movsl
pop
sub
jnp
bnd
mov
and
xchg
pop
jb
xor
mov
in
sbbb
cmp
lret
test
inc
inc
out
mov
inc
or
mov
cmpsl
cs
into
or
jecxz
scas
mov
pop
xor
divps
adc
push
mov
adc
cmpsl
leave
pop
aas
test
pusha
jp
mov
push
inc
mov
xor
cli
dec
pop
ljmp
popa
addr16
pop
sbb
or
aad
xchg
xchg
sahf
aaa
jmp
aad
mov
pop
decb
xchg
popf
cs
notl
movsb
jo
cmpsl
testl
push
out
lahf
sbb
or
jns
lea
dec
sbb
lea
outsb
lahf
xchg
lock
xor
mov
xor
cmp
jbe
add
ja
sub
jns
mov
ret
add
xchg
cmp
cmp
pop
fstps
and
dec
cmp
mov
inc
mov
mov
adcb
dec
in
inc
pop
jp
pushf
loope
imul
movsb
inc
fs
dec
sbb
lahf
hlt
mov
mov
inc
push
cmp
sub
in
add
xor
popf
mov
jb
loopne
add
jnp
fs
adc
shl
mov
mov
mov
add
dec
xor
outsl
inc
adc
mov
or
movsb
push
push
mov
icebp
jns
mov
adc
and
dec
or
popf
sub
andb
pop
sub
push
lea
mov
dec
sbb
xorl
fs
pop
pop
sbb
mov
int
loop
xchg
shrb
mov
ret
push
inc
push
pop
cltd
push
adcb
mov
stos
xor
in
xchg
and
mov
add
xor
mov
or
cmp
push
mov
and
mov
dec
lods
imul
xchg
flds
insb
or
add
movsl
ss
mov
repnz
xor
or
popf
mov
insb
movsb
xchg
pop
cs
imul
popa
lods
mov
subb
mov
push
scas
enter
adc
push
adc
cs
add
loop
xor
xchg
push
cmp
loop
and
dec
or
test
sti
xor
or
cmp
mov
ds
out
mov
jge
pop
jg
and
and
jne
loopne
xchg
pop
idivb
push
mov
dec
and
mov
and
dec
push
imul
in
jecxz
lods
popa
add
jge
fs
cmp
mov
sub
cmpb
add
jns
test
insb
popa
add
pop
in
pop
adc
adc
cmp
out
sub
in
xchg
jl
adc
sbbb
pop
das
inc
cwtl
jp
loope
push
in
std
int
lret
inc
or
add
jp
aam
cs
push
mov
shl
repnz
test
imul
negl
adc
jnp
or
fwait
push
out
test
shl
cs
sbb
mov
mov
repnz
andl
repnz
gs
addr16
loope
cld
mov
rcll
shlb
mov
jp
dec
jmp
repz
or
imul
ret
ljmp
fnstsw
nop
push
inc
pop
das
mov
cmp
cld
out
cmp
dec
js
mov
mov
aad
sub
xchg
aad
sub
mov
adc
cmp
popf
mov
sbb
arpl
xor
popf
jmp
scas
jl
imul
mov
sub
pop
sbb
das
mov
jo
test
test
sub
ljmp
sub
push
xchg
out
or
sbb
dec
in
xor
insb
or
mov
mov
inc
popf
sub
jge
aad
add
mov
les
mov
pop
scas
les
pushf
xchg
jmp
add
mov
inc
and
fiadds
aas
aas
mov
sar
pop
adc
xchg
sarl
sub
dec
mov
xor
popa
fsts
pushf
aad
mov
dec
testb
sti
and
lock
rorl
xor
mov
pop
inc
jo
out
xchg
lods
mov
int
lea
lods
dec
ljmp
das
stc
adc
sahf
xchg
mov
rcl
aas
xchg
aas
mov
cmpsl
je
data16
sbb
pop
mov
int
das
pop
outsb
sar
pop
jb
bswap
sbb
shlb
jno
hlt
and
jmp
mov
pop
adc
or
xor
jmp
xchg
lods
scas
jecxz
inc
mov
dec
xlat
lods
dec
pop
mov
or
negb
pop
nop
mov
shl
movsb
jbe
jno
pop
shr
jg
sti
test
lret
pusha
sub
es
sbb
scas
insb
push
push
add
daa
sarl
mov
not
and
sti
stos
push
ljmp
mov
scas
outsl
pop
and
mov
int
jle
bound
jp
imul
pop
or
jl
adc
inc
test
adc
adc
lock
sbb
lret
aad
cmp
je
sbb
mov
incb
mov
mov
push
inc
gs
add
stos
add
hlt
mov
clc
push
dec
or
icebp
mov
js
xchg
push
mov
add
call
cltd
lock
sbb
mov
inc
arpl
ret
inc
ficompl
lret
push
faddl
in
cmp
in
idivl
fs
dec
dec
xchg
cli
out
adc
lret
cltd
mov
rclb
add
cmpsb
scas
xchg
mov
roll
xchg
ljmp
lds
in
or
arpl
icebp
test
jno
xchg
loop
xchg
and
push
jae
std
jnp
push
mov
out
int
sbb
xor
cmpsl
and
adc
icebp
fildl
mov
stc
mull
mov
cmp
and
xchg
pop
jge
push
cmpsb
push
xchg
in
pop
ficomps
xorb
aad
xor
clc
outsl
out
inc
xchg
mov
dec
into
test
adc
std
ljmp
pop
pop
aaa
sbb
popl
fsts
cmp
xor
cmp
outsb
sarl
and
inc
sub
push
fwait
jo
call
push
xchg
and
sti
pop
addb
or
dec
aad
sbb
push
lcall
cmp
or
repz
mov
ficoml
pop
aaa
xor
popa
repz
fcmovb
cmc
cmp
mov
and
in
mov
adc
or
out
lahf
imul
inc
jno
mov
scas
das
and
pop
subl
lcall
es
pop
add
fnsave
jne
xchg
cmp
and
hlt
add
dec
jg
pop
cmp
mov
jmp
cmp
mov
imul
pop
mov
enter
sbb
pop
into
inc
mov
ja
and
mov
mov
je
fidivs
movd
imulb
add
push
xchg
out
xor
sbb
xchg
pop
sahf
in
ds
pop
xchg
cli
pop
repz
adc
push
push
push
jns
add
push
mov
out
data16
sbb
data16
pop
dec
leave
mov
mov
out
addr16
add
jae
dec
aam
inc
pop
adc
adc
sbb
xor
push
or
outsl
sbb
sbb
mov
pop
rorl
nop
mov
scas
stos
inc
rcl
push
mov
push
sahf
mov
pop
fsubrs
orb
mov
js
push
scas
jnp
mov
mov
mov
cwtl
sbb
adc
jns
imul
js,pn
subb
stc
push
arpl
mov
push
out
sub
std
insb
rclb
stos
dec
adc
cmc
push
mov
testl
sahf
imul
rolb
fcompl
stos
dec
jp
addb
pop
dec
pusha
mov
adc
hlt
mov
lret
mov
push
out
xor
push
imul
mov
mov
xchg
cmp
mov
inc
lods
stc
ja
jns
lock
pop
idivb
outsb
xchg
cmc
pop
sub
cmp
pop
xchg
push
bound
push
jp
rcll
xchg
dec
xor
sbb
mov
mov
jns
cmp
cmp
repz
mov
aad
fucom
cmp
xchg
int
std
and
lods
lods
sub
icebp
stos
lcall
cmpsl
adc
fcoms
mov
adc
cld
mov
pushf
addr16
fs
pop
pop
cmpsl
rcr
or
fcmovnbe
outsb
cmpsl
loop
rol
cmp
pop
fdivrs
adc
xchg
cmp
rorl
push
mov
outsl
jbe
jle
lret
in
pop
mov
xor
push
imul
movsl
cmp
jp
pop
hlt
data16
jno
adc
imul
shlb
popa
shrb
cltd
lret
movsb
sub
and
sbb
xchg
jae
mov
or
dec
push
mov
in
jno
xor
loopne
xchg
ja
push
aam
dec
dec
mov
outsl
pop
outsb
gs
iret
lods
jno
jbe
and
mov
stos
loopne
sbb
xchg
xor
add
enter
adc
mov
add
daa
incl
push
mov
cmp
in
lods
push
fstps
pop
jecxz
lret
fistpl
dec
xchg
jp
add
lds
aam
aad
sub
cmpsl
xor
in
jno
loope
jae
pusha
pop
les
inc
dec
add
lea
ficoml
inc
lds
xchg
popa
dec
int
lods
mov
mov
pop
lahf
pop
mov
xor
mov
sbb
aam
ficoms
xchg
es
mov
or
and
mov
dec
loop
adc
inc
or
cld
and
pop
aaa
stos
add
mov
xor
xor
cmp
fadds
enter
cwtl
push
xchg
jno
fbstp
in
out
icebp
cmp
out
dec
push
out
adc
test
pusha
lods
hlt
fs
add
movsb
jne
call
mulb
dec
aaa
popl
pushf
jnp
data16
mov
into
rorl
or
in
fiaddl
xchg
push
xchg
push
adc
add
dec
push
dec
rcrb
add
mov
in
xor
inc
cs
test
mov
add
sti
pop
pusha
loope
dec
jno
repz
xchg
xchg
dec
push
mov
xor
fwait
repnz
cmp
pop
ret
idivl
jb
mov
iret
pop
scas
iret
test
cmp
push
xchg
ja
subl
adc
bound
movsb
fs
jg
es
add
mov
xor
xor
outsb
adc
and
xchg
or
dec
adc
add
and
pop
and
sub
sub
sti
fistpll
pop
cwtl
and
or
jae
insl
in
xchg
pop
xchg
pop
push
fwait
jge
mov
fnstenv
inc
je
orl
daa
rcrl
lods
dec
ret
or
imul
shl
inc
aam
gs
test
mov
mov
pop
inc
jmp
leave
pop
in
insb
loopne
jnp
mov
out
and
aaa
mov
cmp
movsb
mov
cli
popa
test
or
adc
in
pop
push
xchg
and
clc
lret
popf
ret
sbb
mov
loope
lret
jne
or
cli
mov
and
pop
mov
loopne
push
mov
dec
sub
mov
cld
sub
mov
sarl
jl
aaa
inc
shl
xchg
stc
dec
pop
arpl
jb
aas
jbe
arpl
dec
sub
rcrl
test
push
jns
push
dec
xchg
or
int3
cmpl
xchg
imul
dec
inc
pop
xor
adc
jg
jo
clc
sar
dec
outsl
pusha
sahf
xorl
xor
icebp
fmul
enter
mov
das
clc
shlb
xchg
pop
filds
push
ud2
call
mov
das
sbb
in
add
push
data16
xor
pop
shr
mov
pop
in
jmp
fisubrs
or
inc
push
and
fsts
xchg
push
inc
add
push
adc
aaa
vmaxsd
shrb
les
in
pop
daa
jnp
mov
xchg
push
jne
mov
fiadds
push
xor
cmp
cmc
fpatan
or
mov
jecxz
push
loopne
fisubs
inc
popa
loope
xchg
imul
sbb
int
jmp
roll
cli
inc
xchg
or
push
xor
pop
je
scas
mov
mov
adc
in
fwait
rolb
xor
or
popf
inc
fwait
inc
xor
std
js
daa
xor
popa
xchg
xor
cmp
repnz
out
mov
movsb
xchg
inc
push
inc
dec
insl
int
out
pop
shl
jle
hlt
mov
fsubs
inc
sbb
pop
test
sahf
in
push
push
jg
cli
push
cmpsl
outsb
arpl
fiaddl
jno
xor
imul
mov
pop
clc
jge
xchg
loop
pop
addr16
push
push
pop
push
pop
bound
arpl
sahf
out
mov
ds
pop
aas
xlat
jecxz
sbb
pop
cmp
into
mov
or
insb
pop
cmp
imul
iret
dec
cmpsl
sbb
mov
cmpsl
mov
imul
loopne
fldenv
push
pushf
mov
mov
in
ret
rcrl
xor
icebp
mov
ljmp
and
insb
push
and
cwtl
sahf
sbbl
xchg
dec
mov
inc
push
pop
cmp
mov
xchg
movsl
stos
cmpsl
mov
lcall
inc
mov
pop
adc
std
sub
xor
inc
data16
pusha
dec
mov
test
mov
cmp
pop
mov
cmp
mov
xor
es
adc
lods
mov
add
movsb
cmpb
loope
lea
popf
mov
aaa
aas
add
push
mov
js
inc
jle
cli
and
pop
jecxz
aaa
mov
sbb
rclb
sub
or
pop
fdivs
sbb
and
mov
xchg
cltd
adc
bound
pop
stos
je
addl
out
cmp
lret
pop
dec
in
jmp
xchg
out
add
ds
xchg
or
mov
and
cmpsl
sub
mov
xchg
ficompl
imul
mov
dec
mov
push
pop
sti
loop
inc
insl
and
dec
lcall
popa
nop
pop
out
faddp
dec
and
sti
popw
scas
fisubl
in
jp
add
jmp
hlt
xor
mov
loop
clc
out
xor
adc
xchg
int
push
xlat
idivb
add
aas
imul
fs
xchg
or
lahf
lock
jl
mov
xchg
popf
mov
jne
mov
orb
xorl
dec
pop
testb
adc
sub
jle
aaa
sub
lods
mov
jae
inc
test
dec
sbb
adc
imul
shrb
xchg
xchg
imul
or
cli
addr16
or
mov
mov
xchg
jecxz
cmp
addb
lcall
push
sbbb
and
adc
add
insb
mov
ds
fdivr
adc
in
mov
test
xchg
es
mov
pop
push
jp
std
movsl
mov
jns
pop
lods
mov
addl
mov
xchg
in
scas
mov
mov
jle
movsb
lret
shl
aas
adc
lock
negl
jne
lds
rcr
mov
adc
push
pusha
sbb
and
pop
jl
mov
mov
test
jnp
jg
cwtl
pop
push
or
cmp
add
rcll
fcoms
push
jge
jno,pn
cmp
mov
out
insb
bound
dec
mov
in
loope
in
icebp
fcmovnbe
jo
mov
jnp
leave
cmc
fcom
jb
in
jecxz
sbb
dec
cld
fdivs
mov
mov
test
pand
fnstenv
adc
cs
dec
int
cmp
pop
arpl
in
repz
hlt
arpl
nop
nop
ret
add
pop
dec
cltd
push
pop
and
xorb
mov
and
in
sbb
icebp
sti
xchg
leave
xor
pop
inc
pop
mov
jne
sub
inc
std
push
mov
int
pop
and
pop
jns
jmp
sbbl
js
mov
and
mov
bsf
testl
das
xchg
xchg
cltd
scas
add
xchg
int
mov
mov
jp
sbb
fldcw
push
jmp
xor
xor
xor
mov
out
std
inc
data16
mov
or
cs
dec
sub
cmpsl
cwtl
ficoms
in
stc
cmp
sub
push
or
jns
jge
outsl
and
rol
jge
dec
fldt
aas
or
nop
in
mov
sbb
aaa
enter
flds
test
xchg
rcr
dec
shll
inc
pushf
add
loopne
lds
out
cmpl
rolb
nop
or
mov
cmc
insl
mov
xor
js
addr16
inc
mov
in
push
push
cmp
jno
sub
add
repz
div
dec
int3
or
movsb
repnz
mov
cli
cmpsl
lret
ret
neg
xchg
ret
jle
in
adc
jnp
icebp
pop
and
lock
sbb
jnp
lret
loopne
pop
and
xchg
aam
push
inc
adc
test
test
mov
mov
mov
lods
ret
adcl
cmc
jb
push
xchg
cmp
sbb
xchg
gs
call
popf
lret
jp
ret
jp
jg
mov
ret
mov
negb
ror
pop
or
jbe
mov
ret
pushf
ds
bound
mov
popf
ret
or
jg
jnp
pop
and
inc
sub
js
push
sub
imul
aas
or
nop
out
jge
mov
mov
pop
iret
add
and
mov
cmp
mov
pushf
inc
mov
out
in
push
push
push
mov
pop
push
push
and
lods
adc
cmpl
lods
mov
leave
fists
mov
jo
outsb
or
imul
xchg
jecxz
cmp
jl
movsb
xor
clc
repz
aas
lods
inc
rclb
mov
out
adc
and
jl
rcr
addr16
fstpt
test
hlt
in
cli
pushf
lds
jmp
lret
xchg
pop
ret
std
cmp
push
and
push
sbb
fbstp
enter
nop
xchg
push
mov
xchg
xor
jne
lods
cmp
cmc
jne
dec
fcompl
mov
sub
fs
jp
pop
xchg
js
in
xor
or
ja
in
xchg
mov
xchg
test
mov
or
sti
js
xchg
jo
in
mov
adc
adc
out
mov
faddp
jmp
pop
mov
adc
sub
xchg
push
cmp
in
mov
cmp
mov
mov
push
mov
inc
movsl
xchg
xor
das
ss
cmp
cmp
jecxz
pop
cmp
out
es
and
adc
xchg
mov
pop
xchg
cmpl
cmp
and
pop
mov
and
xchg
in
jecxz
push
inc
dec
sub
sub
insb
mov
roll
rcll
sbb
adc
lods
jb
movl
fwait
push
and
scas
xchg
inc
lret
fldenv
jl
jg
pop
add
ds
fnstcw
lret
mov
fcmovnu
xchg
cmpsl
adc
ja
dec
jb
out
add
xlat
sbb
jnp
jge
xchg
scas
jl
stos
loope
ljmp
sbb
shrl
mov
lahf
add
ja
xor
inc
jmp
and
xor
ret
aas
jo
jg
cmp
lea
in
add
mul
fistpll
jecxz
aas
cmc
push
add
pushw
sahf
lret
xor
xor
adc
fldcw
xchg
mov
fwait
andb
repz
ret
in
ja
xchg
adc
sahf
or
adc
dec
dec
repnz
icebp
mov
mov
add
jae
inc
jp
dec
pop
dec
into
iret
sbb
aad
mov
mov
add
adc
push
cmp
ljmp
faddl
jne
pop
test
loope
sbbl
out
pop
call
adc
pushf
bound
jo
loope
pop
xor
mov
imul
or
xchg
popf
test
mov
enter
cmp
xor
lods
dec
jg
mov
leave
jmp
mov
push
inc
xor
pop
push
adc
fcompl
lock
xor
lcall
jecxz
jle
fistpll
loop
cmp
push
mov
lock
mov
ret
inc
movsl
pop
xor
rcrl
lea
mov
ljmp
jl
popa
push
cmp
aad
lods
rcr
pop
pop
ret
scas
mov
push
jle
aam
sbb
icebp
jbe
jae
cli
adc
xor
cld
mov
inc
sti
test
or
adc
icebp
fdivrs
fisttpl
inc
push
pop
sub
mov
lcall
in
sti
int
lea
mov
pop
lods
jae
mov
rcl
call
mov
in
mov
sub
adc
lret
lret
dec
push
das
es
sbb
pusha
push
xor
mov
in
and
add
nop
mov
stos
rorb
pushf
cwtl
mov
mov
pop
inc
incb
and
jb
stos
testl
push
lret
mov
cli
mov
loope
stc
push
lret
aas
int
lret
jle
scas
imul
loop
sahf
in
fs
xchg
xchg
cli
cli
and
outsb
mov
add
pop
in
add
jl
push
stos
aad
daa
movntps
xchg
adc
jne
mov
rclb
shl
cmp
mov
pop
xchg
lock
outsb
mov
sub
das
imul
sub
pushf
dec
pop
mov
xor
xor
sahf
in
aad
xchg
mov
insl
jg
lahf
mov
iret
inc
xor
lea
lock
les
jge
jmp
sub
cld
jns
popf
xchg
inc
jge
push
aad
mov
adc
js
inc
scas
sarl
int3
inc
jle
rcll
mov
out
mov
sub
cmpsb
mov
and
fprem1
cwtl
es
jl
ljmp
lret
xchg
pop
out
nop
jecxz
or
pop
out
adc
mov
ljmp
fwait
xchg
add
cmp
sub
fwait
xchg
fld
adc
std
ja
divl
cmp
xchg
jl
jecxz
ljmp
shl
jno
in
lahf
and
test
cmp
mov
lds
cmc
push
testl
sbb
cmp
stos
add
icebp
mov
mov
xchg
rcl
adc
add
or
mov
xchg
ucomiss
pushf
sbb
lds
cltd
xor
negb
movsb
xor
mov
aaa
das
mov
int
int3
cmp
mov
mov
jecxz
icebp
mov
mov
incl
push
test
pushf
mov
movsl
pop
testl
shrl
and
es
repnz
jg
push
repz
jmp
js
sbb
pop
loopne
fcmove
mov
bound
ljmp
popf
xor
lahf
inc
outsl
push
add
jnp
or
mov
in
sbb
jnp
loopne
inc
pop
mov
sbb
ja
xchg
ljmp
or
fldcw
fs
les
push
mov
pop
add
outsl
jo
fucomp
fs
adcb
mov
mov
xor
mov
pop
rcrl
mov
mov
aam
out
pop
cmp
xor
ljmp
sarb
pop
sub
adc
xor
or
loop
cld
test
jae
mov
inc
popa
adc
out
sti
fimuls
fistps
cmpl
cmp
pop
mov
stos
test
aas
jno
scas
arpl
out
addl
or
cmpsl
dec
sbb
mov
andl
add
pop
mov
mov
and
inc
mov
mov
out
nop
push
lahf
aaa
sub
jae
mov
xchg
loop
sub
jbe
cmpsb
pop
mov
inc
into
mov
jle
aaa
cmp
int3
in
pop
jg
xor
or
in
mov
xchg
out
movsl
add
add
mov
or
jmp
dec
adc
std
xor
jne
aad
xchg
push
test
sbb
pop
cli
stos
leave
lahf
bound
ds
jg
cli
add
cld
shl
sub
and
cmp
push
dec
jo
roll
adc
pop
ret
bound
push
pop
dec
pushf
es
inc
lahf
cltd
mov
stos
or
pusha
mov
mov
push
jne
push
jno
add
push
das
outsl
cli
push
pusha
push
inc
xchg
insb
pop
pop
push
in
int3
adc
fxch
out
cld
dec
daa
jns
add
mov
adc
mov
insb
into
fs
sub
imul
movsl
out
jmp
jecxz
aam
mov
pushf
adc
test
mov
mov
movsb
fnsave
cli
cmp
adc
xchg
jmp
dec
mov
cmovne
sbb
push
lock
pop
or
stos
jnp
out
mov
fidivs
pop
mov
test
cmpsb
and
mov
jae
out
iret
shl
cli
jmp
cmc
adc
pushf
shrl
loope
mov
jb
out
int3
jno
xchg
jae
mov
push
xor
fwait
lea
daa
inc
jne
je
jecxz
fs
outsb
icebp
xor
fcomi
or
cltd
nop
daa
daa
subb
arpl
popa
jg
movsb
fwait
out
dec
loopne
gs
pushf
je
pop
pop
js
xchg
arpl
mov
mov
pop
jbe
das
pop
jecxz
inc
jne
sub
xchg
pop
adc
lcall
out
fstl
scas
xor
rcll
into
not
xor
jno
rcrb
mov
in
xor
testb
rcrl
add
xchg
sbb
out
mov
cmpsl
je
add
adc
out
cmpsb
sbb
stc
dec
jecxz
shrl
xchg
xchg
pop
jge
and
scas
sub
shll
stos
scas
push
mov
jne
push
rep
imul
pop
xor
jecxz
inc
adc
mov
xor
jo
mov
jl
test
mov
mov
push
and
je
out
into
mov
sbb
sub
cmp
inc
nop
scas
mov
cmc
adcl
cli
add
cwtl
mov
pop
cltd
adcl
mov
jae
jno
cmpsl
push
mov
scas
lods
push
outsb
push
sub
nop
adc
dec
aad
or
sub
fldl
lods
subb
mov
or
mov
mov
push
scas
xchg
decb
cmp
pop
inc
jecxz
mov
outsl
pop
stos
add
mov
xchg
cltd
mov
stos
sbb
pop
push
in
inc
lods
inc
ret
jbe
fcmovb
sbb
cltd
xchg
je
and
inc
js
or
aam
mov
in
movsb
stc
xchg
sub
pop
daa
mov
outsb
lret
and
cmp
adc
xchg
push
mov
test
jo
or
mov
and
iret
sbb
xlat
xor
jbe
dec
fwait
cwtl
jecxz
adc
dec
aas
scas
jnp
jns
shll
jns
insb
fiadds
stc
pop
lcall
mov
cld
stos
or
xchg
push
mov
sti
mov
add
dec
cmc
sti
fwait
sbb
push
xor
mov
inc
js
jo
xchg
fnstenv
cmp
mov
add
dec
jp
adc
xchg
fidivl
cmpb
xchg
jle
adc
fcomp
mov
cltd
cmp
mov
ljmp
cld
push
dec
lock
test
fldl
adc
out
in
dec
push
lcall
add
push
rorl
rorl
xchg
movsl
mov
arpl
xchg
pshufw
lret
mov
push
jbe
daa
rolb
mov
gs
stos
push
sbb
xor
and
test
pop
data16
stos
dec
js
pop
in
ja
jge
mov
leave
arpl
pop
mov
jns
jp
and
mov
xlat
and
int3
data16
je
movsl
ficoms
outsb
adc
arpl
cli
in
cmp
js
jp
out
jnp
cld
mov
loope
or
loopne
mov
call
js
mov
out
sbb
add
fisubl
fisttps
mov
sti
jle
lods
bound
dec
fistps
int3
pop
mov
mov
cs
pop
mov
mov
cmp
or
aad
ljmp
movsl
pop
orl
ljmp
shll
inc
test
scas
adc
adc
ss
iret
sbb
mov
outsb
xchg
jne
ret
fstpl
test
rcr
fldcw
jb
hlt
mov
add
outsb
jo
shrb
cld
jnp
cs
cmp
push
add
sub
cmp
enter
push
inc
das
es
pushf
xorl
fisttpll
mov
clc
clc
lods
xchg
xor
xor
cmp
addb
imul
add
and
mov
pop
push
lahf
inc
add
xor
cltd
lahf
stos
mov
fs
call
xchg
push
inc
mov
frstor
dec
or
push
mov
dec
add
mov
inc
cs
cmp
aam
xlat
xchg
jg
push
sub
and
inc
call
pop
ror
push
lock
aad
push
stc
test
push
loop
aaa
test
adc
adcl
ret
mov
xchg
testb
jno
cmp
ret
iret
pop
inc
push
sub
pop
lret
and
loopne
loop
out
mov
fidivs
cmp
mov
aam
gs
add
adc
pop
xchg
pop
push
imul
lahf
lret
cltd
aam
cmpsb
xchg
mov
loop
cmp
dec
mov
das
and
inc
push
outsl
jmp
mov
mov
scas
adc
call
xor
adc
out
addl
aaa
mov
jo
add
xor
lahf
inc
xor
cltd
xchg
jecxz
xchg
xchg
jno
xor
in
push
adc
movsb
cltd
mov
enter
testl
jge
pop
adc
push
aas
pop
xchg
leave
popf
or
loop
notb
or
lds
movsl
xor
jno
shlb
imul
push
cmp
fisubrl
or
jnp
adc
jbe
daa
cmp
cs
ljmp
or
xchg
fimull
scas
sub
mov
mov
addb
les
clc
cmpl
pop
iret
mov
xchg
nop
push
popf
test
jae
movsbl
cld
xor
loope
cli
sahf
outsl
imul
pop
cmp
inc
jae
sub
pop
ficompl
push
rol
or
lods
pop
js
or
mov
test
int3
sbb
sbb
or
cs
jnp
jno
sarl
jne
sbb
push
popf
ds
add
pop
gs
jmp
out
inc
jmp
lods
adc
lret
sbb
mov
dec
jl
sub
dec
jg
nop
rcll
pop
shll
sub
lea
and
push
push
aad
mov
dec
pusha
mov
sub
cmpsl
aad
mov
and
pop
and
out
das
mov
loopne
loop
mov
cmpsb
or
imul
addr16
inc
movsl
or
aas
outsb
mov
and
shlb
in
push
sbb
fwait
pushf
lods
cwtl
cmp
pop
test
sub
lret
repnz
sbbl
repnz
in
rclb
inc
scas
mov
loop
test
rorl
sbb
jmp
int
or
or
and
test
aam
leave
cmp
fwait
and
in
pop
push
shll
icebp
xor
sahf
in
xor
jns
mov
lea
lret
sub
or
cmc
mov
inc
jecxz
and
sahf
dec
scas
add
sub
cwtl
fsubl
jbe
pop
inc
pop
cld
incb
pop
dec
out
shll
jg
loopne
loopne
jecxz
shlb
push
test
pop
adc
inc
xor
pop
in
mov
repnz
test
or
dec
add
jle
pop
out
or
mov
in
jb
adc
adc
pusha
repz
popf
jne
bound
dec
cmpsl
sub
fsubrp
adc
arpl
cmp
push
test
arpl
iret
jmp
testl
addr16
adc
addr16
js
cltd
xor
in
lcall
jbe
mov
sbb
addr16
divps
sub
sbb
jle
pop
test
stos
fsubrl
ss
pop
rorb
cmpsb
outsl
lea
cmp
mov
mov
pop
lahf
test
jae
out
test
mov
fdivp
mov
xor
or
cwtl
fistps
and
and
xor
pop
jp
gs
or
int3
lock
mov
lds
je
cmp
insb
and
push
sbb
cmp
clc
shlb
shlb
sbb
nop
ja
pop
test
int3
js
pop
and
and
mov
and
add
test
hlt
xchg
movsb
test
nop
cwtl
dec
pop
sahf
xor
or
fwait
cwtl
rorl
jp
orl
js
test
in
aam
pop
lret
and
pusha
add
dec
inc
movsl
sub
jb
lret
pminub
cltd
iret
nop
xadd
lods
push
mov
dec
cmp
mov
dec
cmp
add
test
inc
jb
test
adc
and
in
sbb
sub
xchg
clc
mov
mov
pop
mov
scas
int
mov
test
mov
daa
and
xchg
lods
jmp
data16
pop
add
pop
in
cltd
lds
cmp
repnz
pop
fists
lahf
imul
mov
aad
or
js
lods
mov
lcall
orb
daa
mov
ffreep
stc
int
rcll
mov
loope
ret
inc
popf
ds
mov
sub
iret
inc
pop
push
pop
icebp
jbe
das
xor
in
lock
sub
lock
push
mov
and
xlat
aad
adc
cli
dec
or
repnz
jp
push
lcall
and
ret
mov
mov
cmp
les
cwtl
xchg
hlt
jecxz
fdivr
sbb
icebp
jl
adc
mov
fdivrl
mov
into
push
repz
aas
sbbb
push
xchg
pop
aas
push
aad
movq
shll
jbe
popf
jle
dec
ret
loop
stos
movsl
inc
mov
lock
or
mov
mov
shrl
inc
les
loopne
add
and
lds
fwait
xchg
adc
cmp
cmp
dec
ret
sub
sbb
cwtl
sbb
pop
das
or
orl
jnp
sub
xor
lcall
js
mov
add
dec
jp
jle
insl
pop
fs
loopne
xchg
sub
popf
or
mov
fisubs
and
mov
xchg
xchg
pop
int
imul
mov
mov
cmp
push
xchg
idivb
adc
mov
call
jecxz
lcall
inc
add
mov
push
mov
inc
jnp
jns,pt
out
mov
imul
daa
cmp
jl
push
inc
dec
bound
inc
enter
adc
pushf
xor
fisubrl
push
test
sub
push
mov
adc
mov
push
scas
add
push
jl
pop
mov
in
std
mov
sbb
mov
in
inc
sti
and
jne
pop
push
inc
mov
mov
inc
xchg
xchg
lods
xor
stc
sti
cmp
pushf
mov
cmp
pop
push
fwait
std
jge
cmp
mov
inc
add
xchg
out
pop
and
popa
add
and
outsb
test
or
jmp
fldcw
in
lods
scas
fwait
cmpl
ja
dec
push
mov
and
in
stos
dec
and
jns
cmp
adc
aaa
jns
lods
mov
jns
cmpsb
add
insb
aad
mov
aam
lock
xchg
pushf
fistpl
daa
ss
lods
sub
xchg
rcll
jp
jne
leave
sub
lods
mov
fadds
xor
inc
orl
fnstcw
hlt
sahf
loope
cwtl
repz
xor
gs
push
xor
and
mov
push
rclb
xor
add
and
fisubs
rcl
sbb
xlat
pop
enter
cwtl
das
sar
xchg
mov
sbb
lret
rcll
sub
jbe
shlb
mov
ljmp
shrb
push
xchg
roll
sub
lods
adc
jo
sub
movsb
mov
mov
or
sub
add
dec
dec
sub
movl
loope
jge
mov
xchg
ret
add
js
dec
push
jle
pop
mov
dec
int3
scas
add
and
test
sbb
mov
addr16
xchg
or
inc
lock
js
into
xchg
rorb
loope
xor
lcall
push
fildl
movsl
frstor
loopne
jnp
dec
adc
aaa
dec
push
push
xchg
int3
sub
mov
dec
add
xor
lods
pop
jae
pop
enter
hlt
pop
and
mov
mov
jge
sub
dec
mov
leave
pop
and
jle
mov
adc
sub
xchg
inc
xchg
mov
imul
mov
in
mov
dec
sti
cmp
lcall
ljmp
push
push
push
xchg
std
sub
fucomip
arpl
add
lock
xlat
mov
jae
imul
adc
aam
cltd
das
ds
mov
into
add
hlt
jl
add
sbb
cmp
xchg
inc
cld
cmp
and
or
outsb
or
jo
out
dec
xchg
testb
in
xor
dec
and
xor
jns
test
fbstp
neg
nop
cmp
arpl
fs
lods
jecxz
in
enter
or
lods
jns
out
ds
scas
roll
inc
and
stos
xlat
jge
dec
rcrb
js
mov
cltd
pop
jle
dec
arpl
loop
popf
ljmp
mov
pop
es
nop
ja
and
aas
adc
popa
xor
mov
lods
sub
adc
push
inc
bound
adc
stos
lock
cmp
jnp
sti
pop
pop
lods
shll
enter
mov
adc
aas
fnclex
pop
adc
and
adc
loope
add
mov
mov
mov
adc
stos
sti
mov
shl
ficoms
insl
or
xchg
cmp
or
jle
xor
cld
test
dec
cwtl
ja
cwtl
jp
dec
and
inc
out
sub
and
inc
push
out
and
push
aad
mov
mov
mov
ds
cmp
int3
inc
lret
inc
cmp
jle
insl
jbe
sbb
push
or
xlat
sub
jmp
pop
sub
jecxz
ljmp
lock
and
push
sub
xchg
scas
dec
jb
cwtl
pop
das
push
push
lods
vpmaxsb
xchg
pop
sti
inc
lretw
mov
cmp
pop
pop
es
sbbb
int
in
out
push
aam
mov
mov
cmpsb
cltd
nop
aaa
cwtl
hlt
loope
ja
xchg
faddp
popf
stos
push
flds
jge
js
jno
pop
jle
mov
dec
shrb
fnstenv
cmp
xchg
pop
mov
push
fldt
mov
lock
enter
out
pop
arpl
xor
fwait
add
jno
cmp
test
frstor
mov
jge
loopne
loop
jbe
shlb
mov
xchg
cmp
outsb
in
push
iret
movsl
inc
push
adc
cli
loop
enter
inc
popa
cmp
xchg
ljmp
cmp
jle
roll
add
jb
push
sti
inc
sub
jle
clc
mov
xchg
cmpsb
push
sbb
xor
lahf
pop
jae
mov
lahf
jne
repz
adc
aaa
aad
add
xchg
xor
or
adc
cmpsl
push
mov
das
pop
sbb
mov
jo
loope
repz
or
inc
mov
loop
xor
test
lret
mov
xlat
cs
mov
in
cltd
test
cmp
add
ret
cmp
push
sbb
in
mov
and
add
xchg
insl
lods
imul
pop
pusha
inc
inc
aad
mov
mov
pop
fldl
mov
cmp
fucom
int3
clc
dec
in
mov
ljmp
loopne
fsubrs
push
in
mov
sub
xlat
aas
movsl
jge
dec
cmp
inc
add
test
lret
out
je
cmpsl
and
adc
repnz
orb
test
inc
dec
cmovne
jecxz
jno
dec
mov
mov
cmpsl
shll
push
xchg
loopne
or
mov
sbb
jp
int3
mov
or
jns
inc
push
mov
sub
lcall
stos
mov
movsb
sbb
das
xor
or
daa
sbb
test
push
test
jne
ja
popa
xchg
and
or
mov
push
arpl
mov
repz
hlt
cld
add
es
cmp
add
in
inc
add
leave
adc
and
dec
dec
arpl
ljmp
test
jno
rorb
xor
inc
leave
or
jae
add
xor
xor
mov
paddq
fucomip
jl
sahf
sub
sbb
pop
cli
fisubrs
lcall
lock
shll
xor
jnp
mov
mov
xor
mov
pushf
push
daa
pop
fs
arpl
pusha
mov
and
mov
shrb
mov
loop
addb
inc
ret
and
xchg
dec
movsb
shlb
cmp
mov
jne
int3
je
jnp
leave
cltd
js
xlat
xchg
pop
clc
insl
and
push
sbb
dec
pop
push
ret
dec
xchg
mov
jnp
pop
jl
jbe
in
fs
inc
fnsave
out
pop
add
xchg
cltd
iret
popf
dec
add
mov
outsb
out
fidivs
mov
inc
lock
dec
cmovg
shrb
cmc
cmc
in
mov
shrl
inc
and
sbb
sub
jp
scas
jbe
fistl
pop
dec
and
sub
mov
inc
in
stos
push
mov
lods
jno
mov
add
int
movsb
dec
ja
popf
fsubs
xor
push
sahf
and
loope
popf
stos
iret
jb
idiv
push
pop
mov
out
jo
dec
sub
out
dec
mov
mov
inc
jae
or
mov
inc
pop
push
jecxz
mov
mov
pop
pop
inc
popa
push
sub
sub
movq
shll
mov
push
push
dec
int3
ss
inc
sbb
mov
div
insl
int3
sub
jb
pop
add
or
cmp
sub
gs
xlat
add
fiaddl
lea
dec
jge
fbstp
mov
jae
mov
dec
dec
popf
pop
mov
loope
xor
jp
jne
mov
cmp
xor
and
jmp
sub
outsl
pop
daa
lds
aad
lahf
popa
insl
or
push
push
xchg
push
pop
jl
pusha
xlat
adc
fs
mov
bound
sti
nop
dec
xchg
or
lcall
sub
pop
loop
subl
or
gs
fxch
sub
scas
inc
ror
mov
jmp
adc
or
sub
or
cltd
mov
mov
cmpsb
aad
or
rorl
add
pop
mov
fstpl
nop
push
bound
push
mov
add
repnz
sti
push
pop
mov
cs
cwtl
int
mov
xchg
les
xor
and
daa
inc
add
loop
mov
dec
sbb
sbb
ja
inc
xor
movsb
push
sbb
mov
scas
shr
push
mov
push
jle
sbb
dec
mov
mov
push
dec
stc
pop
sub
sbb
das
push
es
ljmp
ret
mov
and
stos
push
or
jae
sub
inc
mov
fstpl
pop
and
xchg
ffree
filds
dec
add
push
in
mov
leave
mov
fcomps
repz
cmp
jl
jp
in
pop
push
and
addr16
dec
dec
arpl
subl
mov
jg
in
pop
push
stc
movsl
jne
mov
insl
pop
movsb
mov
mov
sub
cwtl
int
jl
and
lock
add
fisttpll
addl
and
add
inc
das
out
popa
mov
fdivrl
stos
repnz
out
or
cmp
push
movsb
inc
cmpsb
adc
xor
mov
sub
popa
xchg
xchg
clc
pop
xor
loop
int3
fldt
icebp
inc
dec
xor
push
in
mov
xlat
mov
pop
sbb
dec
icebp
jnp
cvttps2pi
pop
movsl
lock
xchg
insl
dec
jo
out
and
shlb
xchg
je
movsb
xor
pop
sbb
arpl
int
push
jno
xchg
mov
and
push
xchg
push
stos
data16
jg
call
test
push
dec
cmp
jl
add
loop
add
repnz
fistpll
call
jmp
xchg
or
mov
push
or
inc
aas
addr16
test
xchg
jb
jae
arpl
std
cmp
xchg
into
and
iret
in
lcall
xor
adc
sbb
ret
sub
dec
mov
subb
sub
xor
nop
lds
enter
daa
cmp
hlt
fimull
sbb
mov
lea
pusha
out
test
gs
enter
data16
mov
or
xor
daa
out
dec
addr16
dec
sub
into
call
rol
subl
insl
inc
loopne
dec
icebp
jge
test
pop
mov
cltd
mov
stos
loope
bound
lret
push
imul
push
add
xlat
dec
push
xchg
enter
mov
fmuls
cmp
test
sarl
cmpsb
mov
int3
mov
jp
pavgb
int
push
mov
mov
and
xchg
stc
adc
loopne
mov
int3
cld
fsubrs
mov
sti
push
mov
jo
sub
inc
arpl
out
lds
push
into
push
movsl
cmp
fdivs
out
rorl
inc
xor
pop
mov
push
sub
sahf
fscale
jge
add
xchg
idivb
push
dec
scas
lods
add
cltd
jmp
in
aam
mov
in
int
sbb
xchg
es
xor
outsb
xchg
mov
push
incb
ss
jo
in
and
pop
pop
inc
lret
ds
sbb
add
lret
out
test
rclb
mov
in
mov
lods
dec
inc
mov
int
test
cmp
adc
mov
and
sbb
sbb
jecxz
xchg
push
mov
push
ret
rol
arpl
cmp
jns
xchg
jo
cmp
fcompl
je
int
movsb
and
or
sub
push
sub
mov
lods
aam
xchg
xchg
mov
inc
imul
nop
stos
push
jns
out
test
xor
mov
cld
push
xchg
int3
into
xor
lds
lods
test
out
nop
aas
pop
stc
adc
mov
sub
into
hlt
mov
xor
lcall
movsl
inc
mov
xchg
int3
bt
imul
pop
mov
scas
push
outsb
mov
scas
lahf
das
dec
fldt
dec
and
int
into
int3
lock
push
xor
or
pop
xor
sbb
daa
pop
cs
dec
daa
out
or
mov
xchg
bound
and
xchg
sti
or
inc
dec
das
jno
and
mov
and
mov
test
inc
in
push
xchg
mov
decl
movsb
adc
mov
dec
lods
fbld
lret
jmp
popa
pop
and
jo
or
loop
mov
fdivr
push
push
xor
xchg
outsb
add
mov
xchg
repnz
aaa
or
mov
push
xchg
std
jo
sub
pop
stos
sub
ss
cmc
and
push
mov
in
jmp
jno,pt
dec
xor
push
push
insb
xchg
incb
outsb
fsubrs
and
es
js
xlat
cmp
or
fisttps
in
mov
mov
out
push
daa
inc
jne
ret
push
jge
fwait
repnz
sbb
rcl
movb
inc
pop
repnz
fwait
or
push
and
push
js
xchg
push
outsl
adc
push
fucom
mov
loop
sbb
mov
les
cmp
sbb
adc
dec
test
push
cmc
dec
js
cmp
data16
and
pop
out
popf
in
or
movsl
cmp
adc
sbb
inc
lahf
daa
test
cmp
lcall
xlat
mov
out
jp
or
sbb
jl
sub
jmp
xchg
shrl
xor
cmpb
inc
xchg
ret
imul
imul
xchg
cli
mov
jmp
dec
xchg
test
dec
ret
push
inc
fistpl
pop
xchg
in
in
add
roll
fadd
jno
stos
inc
adc
inc
push
into
sub
rcrb
mov
ret
sar
and
lea
jecxz
das
add
sub
mov
lret
data16
mov
jg
sub
sbb
fildll
xor
xor
fmull
mov
and
xor
xor
jb
or
sbb
or
add
mov
pop
push
push
fistl
xchg
sub
and
sub
loopne
cmpb
icebp
xchg
push
test
xchg
rcl
mov
dec
mov
xchg
cmp
xchg
mov
pop
out
xor
dec
shr
cmpsl
sahf
mov
pop
mov
rcl
test
mov
mov
sub
push
sbb
mov
pop
mov
dec
inc
icebp
xor
dec
cltd
inc
push
int3
mov
iret
mov
mov
outsl
insl
incl
or
sub
xor
pop
sub
xchg
xor
popf
sub
enter
or
pop
dec
or
movsb
fistl
sub
inc
pushf
add
rclb
fwait
popf
fcomps
jbe
dec
lods
hlt
movsl
mov
sbb
xchg
xlat
and
adc
mov
dec
popf
xchg
test
loope
or
inc
jle
jae
mov
aaa
lret
int
sub
push
adc
or
and
std
sub
popf
push
pop
fstps
imul
adc
dec
push
loope
jl
out
in
popa
xor
mov
cwtl
lahf
shlb
mov
fucomi
shrl
repz
enter
enter
mov
gs
fwait
mov
lods
and
xchg
mov
xchg
mov
fwait
xchg
push
and
cld
mov
je
add
lea
mov
mov
fiadds
aad
push
outsb
ja
lahf
xor
movsb
cwtl
cmp
dec
sub
popf
adc
jg
push
ficoml
adc
mov
push
cwtl
cmp
mov
aad
xor
adc
inc
nop
jbe
push
roll
ficoms
pop
jnp
pop
cmp
pop
fnstenv
in
shl
call
pop
rcrb
enter
pop
in
dec
lret
mov
dec
insb
popa
das
push
pop
data16
mov
jmp
add
push
mov
int
sbb
mov
pusha
imul
cmp
adc
mov
mov
mov
or
lcall
andl
testl
cmpsb
aaa
pop
std
dec
ret
and
jns
or
jmp
mov
imull
jecxz
data16
cmc
lret
int3
cmp
sub
imul
fisttpll
mov
in
mov
ret
mov
pop
out
push
jmp
out
xchg
xchg
push
mov
movsb
cli
inc
sti
sbb
mov
ret
in
sub
or
jns
adc
adc
loope
mov
call
rorl
fcmovu
pop
xchg
in
inc
inc
in
cmp
rcrl
inc
sbb
or
dec
ror
lods
jns
out
rcr
mov
loop
jp
cmpsl
cld
pop
cli
pop
movsl
movlps
scas
jns
jne
add
xor
sbb
dec
int3
cld
shlb
cmp
add
cmpsb
fdivs
lea
or
xlat
aas
push
das
adc
out
push
pop
sahf
xlat
or
and
decl
mov
mov
lcall
xor
cmp
stc
roll
fdivrp
cs
out
outsb
and
fsubs
or
mov
and
and
xor
add
test
xchg
addr16
inc
lds
jl
mov
dec
ja
data16
nop
aas
inc
bound
mov
inc
hlt
or
sti
cbtw
pop
dec
mov
stos
cmpsl
movsl
mov
inc
sbb
add
gs
push
cmc
push
ds
lds
inc
fsts
xor
cmpsb
js
dec
pusha
popf
std
inc
jae
std
idivl
ret
pop
xchg
pop
and
cmp
sqrtps
mov
mov
and
mulb
xchg
jno
out
stos
sub
mov
and
gs
jbe
std
sub
lds
jmp
bound
inc
mov
imul
adc
in
mov
popf
push
movsb
imul
hlt
push
dec
insl
mov
mov
cmp
ret
mov
pop
sub
mov
test
mov
je
gs
mov
xor
jg
mov
push
sub
sbb
add
dec
jg
les
std
movsl
sub
loope
unpckhps
filds
add
lahf
das
sub
fmull
cs
mov
pop
mov
mov
adc
add
xchg
divb
sbb
and
push
in
sub
lahf
sub
cmc
out
jae
mov
je
lcall
shlb
pusha
ss
fwait
sub
pop
pop
in
xor
and
jl
das
mov
ret
sti
enter
jmp
jp
insb
sahf
ja
mov
mov
popf
pop
sub
pop
inc
ljmp
mov
push
or
push
arpl
mov
movsb
hlt
mov
sbb
lods
or
lods
adc
pushf
or
int3
jp
stos
xor
jae
and
push
xchg
jb
mov
jns
cwtl
jno
xchg
sub
jg
dec
push
shrl
test
test
push
pusha
data16
pop
sub
mov
movsb
adc
fs
xor
sbb
or
fcomp
adc
sbb
jmp
mov
aam
inc
mov
pop
es
mov
loope
mov
adc
lret
mov
pop
inc
dec
cld
insb
notl
mov
mov
andl
test
adc
and
xchg
push
xchg
aam
arpl
loopne
fwait
cmp
dec
scas
mov
pop
stc
shrb
orl
xchg
test
mov
shrl
ret
out
lret
test
iret
add
std
cmp
scas
arpl
test
je
jb
inc
es
jnp
pop
ds
xor
and
cmp
mov
test
pop
pop
out
mov
das
lods
pop
push
jl
cmpsl
notl
inc
test
aam
sbb
sbb
mov
outsl
xlat
pop
or
rcrb
xchg
pop
adc
lods
popa
jb
call
add
lahf
insb
sbb
or
testl
in
ja
cltd
jl
aaa
or
in
add
xor
xlat
jo
cmovg
lret
pop
adc
push
test
shrl
adc
outsb
leave
push
bound
imul
fidivrs
clc
mov
out
adc
sub
ja
pop
sub
mov
push
mov
out
add
call
scas
aas
je
lds
scas
xlat
les
dec
jl
mov
jmp
ljmp
mov
rorb
aad
in
cwtl
pushf
in
mov
adc
mov
inc
push
mov
notb
loopne
push
outsl
push
bound
lods
adc
pop
int3
lods
dec
pop
mov
add
inc
or
inc
xor
cmp
out
ljmp
sbb
mov
scas
xchg
cmp
bound
pop
lods
ret
inc
adc
and
push
mov
stos
mov
and
wbinvd
adc
ret
test
sbb
mov
jnp
jecxz
add
push
mov
push
loope
cwtl
cmp
rcl
fdivs
push
push
push
adcb
stos
and
lock
test
dec
push
mov
xor
jge
data16
xor
in
out
call
and
js
push
clc
in
push
repnz
addb
mov
mov
sub
push
jmp
pop
pop
fcom
cld
xchg
loopne
mov
pop
cltd
pop
xor
cmp
push
mov
outsb
mov
xchg
mov
fs
pusha
dec
mov
je
xchg
sub
leave
mov
fdivs
adc
pop
mov
test
sub
inc
adc
cs
movsl
fcmovne
push
ret
fldt
mov
sbb
jb
mov
orl
push
pextrw
rclb
mov
jno,pt
sbb
cli
push
imul
xchg
es
mov
pop
mov
rol
in
gs
push
inc
and
mov
in
sbbl
insb
frstor
scas
leave
adc
and
xor
aam
aad
and
test
mov
inc
imul
mov
adc
xchg
mov
mov
cmp
or
xor
rorb
cmp
xlat
aaa
mov
inc
add
outsl
in
sbb
out
arpl
cmc
daa
or
cmp
pop
push
jno
cmp
rcll
into
dec
inc
push
and
ss
mov
or
add
jge
inc
shrb
mov
daa
in
dec
jbe
out
rorb
mov
mov
mov
mov
shlb
sahf
or
pop
stos
add
sbb
pop
pop
push
lods
imul
or
subb
imull
push
mov
xchg
push
jne
xchg
mov
pop
add
rcll
push
lea
dec
pusha
lret
xchg
mov
pusha
into
xchg
pushl
and
aad
out
js
sub
sti
xchg
xor
cltd
mov
mov
ret
shrb
sub
mov
xchg
in
sub
mov
popa
in
mov
mov
lahf
daa
mov
cs
or
lahf
and
inc
cmp
scas
pusha
cmp
adc
into
inc
mov
xchg
js
aas
push
xchg
je
sub
xor
jl
movb
mov
lds
lahf
mov
lret
cwtl
push
in
pop
lahf
sub
push
jae
lock
push
ret
adc
sbb
sub
and
into
and
lcall
lods
ficoms
out
lods
out
dec
add
fcmovnb
outsb
or
push
iret
sub
aas
add
ss
rorl
bnd
jp
dec
shlb
mov
cmc
loop
xchg
rclb
dec
rclb
loope
cwtl
cmc
push
inc
inc
xchg
movb
mov
sbb
cmpsl
lds
scas
xchg
push
out
mul
xor
jnp
es
in
in
leave
push
xchg
jle
stos
scas
fcoml
mov
outsl
xchg
mov
fwait
dec
push
cmp
pop
mov
cmp
mov
nop
jb
cmp
xor
dec
push
bound
or
xchg
in
and
lock
jne
divl
adc
fldl
push
lods
or
xchg
cli
mov
mov
test
push
test
mov
jl
mov
mov
jmp
js
fsubl
rolb
inc
xchg
cs
sarl
in
sbb
rcrl
das
sbb
pop
in
gs
lahf
cs
sub
stc
lcall
cmp
imul
sub
es
iret
sarl
push
push
mov
fisubrs
pop
dec
dec
push
cs
adc
mov
addb
or
mov
iret
lock
dec
popf
lcall
stos
rcrb
lds
in
das
mov
aam
jl
sub
pop
aam
aaa
mov
xor
idivb
aam
addr16
push
jmp
mov
mov
add
ret
bound
push
push
in
jbe
mov
pushf
mov
sbb
pushf
cmpsb
inc
add
icebp
shl
fldcw
inc
stc
push
sub
sbb
and
xlat
adc
dec
pushf
scas
push
lret
insb
pop
adc
add
fisttps
cmp
adc
mov
loope
and
add
dec
ret
add
hlt
pop
mov
test
jbe
push
fstpt
sub
xchg
and
out
out
mov
pop
int3
mov
xor
dec
aas
in
mov
jecxz
sahf
add
loopne
jle
aam
std
popf
into
cltd
orl
jns
js
jle
cli
lcall
in
push
test
sub
int3
data16
inc
add
in
dec
push
roll
int
cmp
ret
jp
lods
mov
lcall
repnz
sub
cltd
sbb
out
adc
cmp
rcrb
sbbb
test
js
xchg
rcrb
scas
mov
jno
dec
popf
cmp
cwtl
loope
inc
or
push
sahf
jge
xor
insb
lret
push
jb
or
cmp
dec
clc
or
loop
pushl
cmp
adc
pushl
adc
sbb
out
mov
pop
cli
cmp
arpl
clc
outsl
jno
ja
or
jg
dec
pop
cmc
xchg
in
and
inc
aaa
fwait
pop
sbb
pop
gs
xor
sti
lahf
inc
pop
lret
addr16
ja
push
fwait
inc
push
imul
jmp
imul
andl
fisttps
shlb
pop
jmp
mov
sahf
mov
in
or
bound
ret
xor
mov
and
rol
inc
addr16
xorb
cmp
loopne
fmull
sbb
cmp
cmpsb
in
xchg
ljmp
cltd
popf
iret
mov
test
out
gs
push
repnz
lret
jg,pn
or
xchg
leave
cmp
lret
adc
stos
out
pop
push
sbb
imul
icebp
or
sti
aam
sbb
mov
dec
cli
dec
cs
or
jmp
or
in
push
shl
jg
and
fisttpl
imul
inc
inc
sub
mov
enter
and
cld
sbb
pop
and
xor
jp
shlb
cld
xchg
pusha
jmp
cmp
dec
hlt
pushf
or
into
fcmovbe
and
inc
fsubrs
cld
cs
sbb
les
test
sarb
int
pop
jle
push
addr16
stc
pop
inc
xor
jne
fwait
inc
push
inc
bound
leave
mov
xchg
and
and
in
push
jb
push
out
xchg
xchg
jno
imul
and
jno
roll
push
pop
mov
subb
nop
mov
insl
outsl
pusha
add
adcb
xchg
cmpsb
pop
inc
loopne
mov
shrb
leave
cmc
orb
jbe
inc
in
inc
push
and
loopne
mov
mov
pushf
out
xor
stos
adc
dec
mov
add
repnz
and
jns
pop
ja
es
jno
push
pop
ljmp
xor
gs
insl
mov
xchg
push
aad
in
pop
addb
inc
out
xorb
and
sub
pop
test
stos
sarl
add
out
cs
mov
jg
fcompl
mov
cmp
lahf
cmp
in
or
xor
or
and
stc
jo
ja
sub
push
sahf
push
test
loope
mov
fidivl
mov
mov
cs
sub
inc
xchg
decl
and
aad
call
mov
out
mov
mov
jnp
les
fsts
mov
adc
inc
xor
fistpl
dec
jne
in
stos
sbb
sbb
lock
inc
pusha
and
icebp
sub
fisubs
xchg
push
adc
enter
dec
add
inc
shrl
data16
adc
pop
mov
divl
or
dec
and
adc
sahf
jl
push
xor
inc
dec
or
fs
fwait
mov
cs
lahf
mov
mov
xchg
jg
mov
orl
pop
fdivrs
int3
sub
jno
je
repnz
pop
cwtl
imul
test
aas
out
xchg
adc
inc
push
lret
out
xchg
insb
mov
xchg
movsl
mov
rcrl
push
push
add
scas
mov
out
sub
lret
icebp
fimull
dec
xor
aaa
inc
lret
jp
or
lods
xlat
dec
int3
add
pop
adc
jp
jge
pop
fisubrs
inc
mov
and
mov
mov
stos
leave
add
js
inc
and
leave
std
clc
push
js
pop
mov
sar
push
push
ja
mov
mov
xor
inc
pop
pop
xorl
jno
dec
jle
aas
shl
push
pop
or
cld
sbb
push
out
mov
dec
dec
add
dec
mov
je
std
cmpsb
mov
divl
jne
incl
inc
or
pop
les
decl
mov
add
je
cmc
mov
sbb
enter
sbb
loope
add
and
inc
adc
cli
adc
lret
add
sub
mov
movsl
aaa
adc
pushf
repz
ss
mov
adc
cltd
jb
lds
sbb
add
outsb
cmovo
dec
mov
jno
in
mov
jnp
or
fidivrs
dec
shrl
pop
jae
cmc
add
adc
jae
ds
insb
lcall
push
or
ljmp
lret
xchg
mov
xor
neg
inc
pop
adc
test
dec
dec
cs
out
pop
nop
add
inc
lret
addr16
jb
push
jbe
push
or
or
xor
jle
add
je
jns
out
cli
stos
inc
dec
fs
repnz
pop
insb
popf
dec
cmpsl
add
iret
jle
lods
aaa
sub
mov
dec
adc
pop
pop
mov
pop
repz
dec
jne
rolb
sub
or
test
or
inc
mov
xchg
insl
xor
mov
mov
out
rorl
fnstsw
mov
inc
mov
dec
push
imul
stos
mov
fcmovbe
testl
mov
mov
sub
push
movsl
xchg
stos
fildl
add
sbbl
jb,pn
enter
pop
pop
add
xchg
lahf
jmp
add
add
lea
push
pop
inc
cltd
dec
cmpsb
aaa
in
mov
fwait
mov
movsl
jp
sbb
repz
je
ds
xor
fisubs
push
cli
out
push
mov
nop
lcall
or
popa
das
xor
repnz
add
sbb
fs
gs
xchg
xchg
add
inc
push
je
pop
out
test
cmp
or
or
pop
jns
fisttpl
lea
mov
dec
xor
notb
pushf
dec
cmp
or
push
dec
stos
sbb
lock
notb
and
jne
push
iret
cmp
push
add
add
mov
inc
inc
ds
insb
lret
pop
dec
test
and
mov
add
mov
cmp
push
sub
adc
js
xchg
push
cmp
insl
fiadds
mov
mov
cmpsb
mov
mov
lahf
jge
push
faddl
mov
inc
test
test
xchg
pop
loop
dec
jl
out
mov
jle
cmp
xlat
cmp
mov
dec
sub
xchg
shrb
jbe
cmp
xchg
mov
add
mov
or
cmpsl
cmpsl
mov
xor
scas
cs
hlt
lahf
push
mov
aam
mov
xor
mov
fwait
dec
rcll
push
insb
std
pop
cmpsb
adc
ja
and
jecxz
add
pusha
sbb
push
movsl
lahf
mov
cmpsl
loopne
out
dec
pop
icebp
test
ss
es
in
jne
pop
js
dec
mov
in
loop
icebp
xorl
add
cmpsb
dec
push
cli
cmp
out
sbb
cmp
pop
xchg
xchg
or
mov
lods
popa
out
clc
mov
dec
inc
add
mov
int3
jo
daa
ret
stos
and
ret
addr16
sub
push
and
fdivrl
inc
sub
add
fistpl
insb
mov
or
inc
push
aad
cld
divb
jg
ljmp
jnp
xor
scas
jg
adc
xor
inc
icebp
lock
cltd
mov
xor
jns
insl
scas
mov
mov
stc
jecxz
xchg
mov
outsb
insb
inc
hlt
out
stc
pop
jg
inc
push
adc
popf
stos
lods
pushf
push
sbb
dec
mov
dec
or
jle
into
mov
fistps
outsl
dec
mov
pop
imul
jle
sbb
lahf
sub
andb
addr16
adc
pop
jmp
mov
fimuls
test
outsb
jnp
mov
mov
ljmp
sahf
dec
shr
adc
les
outsb
mov
call
mov
cld
outsl
imul
adc
inc
gs
push
mov
or
and
in
push
ljmp
fildll
imul
pop
inc
mov
imul
jb
ret
iret
sahf
push
jnp
test
jnp
and
add
lahf
decl
inc
mov
cmpsb
loop
insl
jbe
pushf
daa
fcompl
adc
mov
inc
popf
adc
sti
jge
jg
add
bound
cmp
jl
clc
mulb
sub
faddl
sub
cli
mov
fwait
imul
mov
inc
xor
cmp
pop
shl
mov
stc
sahf
jb
pushf
cmp
clc
push
lods
outsl
inc
jle
mov
jmp
fiadds
add
or
xchg
xor
nop
test
mov
jne
mov
add
push
cmpsl
mov
es
repz
shrb
mov
lea
xchg
and
data16
sbb
sti
inc
lcall
pop
rol
xchg
mov
or
pop
movsb
popa
jle
or
xchg
pop
xlat
mov
mov
imul
fs
lock
jo
jnp
scas
mov
xor
push
jno
movsb
or
push
test
mov
jg
push
icebp
lret
or
sbb
push
scas
sub
push
mov
shrl
loop
notl
add
ficompl
cmp
jg
insb
mov
jae
xor
adc
cmpsb
test
mov
fwait
bound
cs
sbb
pminsw
sbb
or
sbb
out
insl
aaa
sbb
inc
sti
mov
inc
pop
or
xchg
dec
imul
xchg
pop
xchg
xchg
loop
xchg
push
in
xor
cmc
mov
out
or
test
mov
sub
repnz
mov
out
cs
outsb
shll
cmpsl
in
test
xor
subl
fistpll
loope
les
adc
push
subl
xchg
xchg
pop
push
cs
cltd
or
jo
pop
jne
jnp
repz
mov
inc
int
lcall
mov
or
pop
loopne
adc
mov
mov
adc
dec
xchg
pop
out
popf
aas
mov
jo
jmp
into
or
movsl
es
pop
xor
mov
int
js
lcall
push
adc
fxch
lcall
stos
mov
loopne
jae
cmpsw
stc
jp
mov
add
adc
negl
push
mov
xor
fs
pop
cmp
repnz
cmp
arpl
loopne
and
sbb
push
repz
ja
push
xchg
lods
add
test
dec
mov
js
lods
and
dec
pop
jp
ss
cmp
push
cmpb
fbld
xchg
add
pop
cs
pop
sti
les
das
mov
or
frstor
test
stos
sbb
aad
jecxz
cwtl
and
test
ja
mov
jns
pop
mov
out
shll
fisubrl
shl
or
cmp
pop
mov
lcall
fdivrs
loop
mov
in
mov
push
and
stc
jp
pop
outsb
push
xor
adc
loope
push
push
inc
inc
mov
shll
pop
out
xchg
jmp
adc
divl
push
add
test
jl
int3
sbb
push
fistps
dec
push
mov
inc
cmpsl
and
outsl
adc
fwait
dec
pop
js
shl
push
inc
leave
cmp
inc
subb
incb
nop
xchg
imul
or
ret
mov
lds
test
sarl
push
push
sbb
scas
inc
shl
jg
mov
sahf
jns
shrb
test
add
sub
iret
inc
jg
fcmovb
dec
fs
out
test
je
mov
test
xchg
ret
jno
repz
movsl
insb
fwait
imul
xchg
leave
jge
cmp
mov
or
or
push
stc
jp
and
mov
aam
dec
jns
adc
andps
add
sbb
mov
fwait
and
jg
imul
fsubr
sahf
sahf
add
pop
mov
add
sbb
fbld
or
sti
call
xchg
addr16
popf
sbb
and
dec
je
jecxz
jp
push
sub
jp
movsl
daa
rcl
clc
cmp
pusha
jo
add
adc
ret
jp
pusha
fstpt
lods
sub
rcll
sbb
stos
test
cmp
in
mov
fistpl
pop
jns
cmpsl
or
les
jne
fbld
xchg
xchg
out
insl
push
les
sub
pop
cmp
insl
dec
push
cmp
pushf
imul
xor
push
mov
xchg
sub
outsb
into
cli
bound
jnp
mov
cmp
push
jns
pushl
lret
mov
cmc
ret
fidivrl
adc
mov
push
mov
push
xchg
aas
xchg
jbe
and
leave
lds
js
cltd
clc
inc
xor
test
jne,pt
xchg
aam
sbb
ss
loopne
filds
lds
stc
dec
or
dec
and
or
out
divb
cmp
andl
xchg
xchg
iretw
clc
dec
lock
daa
push
or
cltd
flds
pop
icebp
dec
mov
pusha
jle
je
inc
ficomps
push
test
push
push
aam
mov
aad
sbb
call
adc
cli
dec
cmp
outsb
hlt
out
mov
repz
pop
testb
aam
and
mov
jl
bound
sarl
or
lahf
mov
popf
sahf
pop
inc
callw
jl
iret
fstpt
ret
sub
adc
push
mov
repz
push
add
and
xchg
cmpsb
or
pop
adc
repnz
popl
out
push
sub
xor
xor
pop
mov
dec
cmp
lcall
sub
adc
pop
inc
pop
cs
int
rcr
test
ror
arpl
and
scas
ss
popa
test
add
and
mov
outsb
mov
in
mov
sbb
add
lret
aas
or
pop
cltd
sti
into
clc
cs
xchg
ficoms
incb
push
add
push
mov
push
test
sbb
dec
adc
inc
add
lds
ret
or
ja
aam
divb
int
jne
dec
mov
xchg
fidivrs
into
je
insb
jp
scas
int
fists
inc
js
pop
mov
insb
xchg
cli
mov
addr16
ss
aad
aas
cmp
dec
pop
push
outsb
movsl
xchg
adc
shll
jp
sahf
in
repnz
sub
pop
xor
sub
mov
or
pop
push
jns
adc
mov
arpl
fimuls
out
adc
add
pop
subb
inc
outsl
out
orb
flds
rclb
push
repz
pop
dec
jg
adc
ja
and
outsl
jne
jg
cmp
mov
insl
sbb
jno
lods
imul
nop
cmp
mov
mov
sbb
mov
rcrl
shlb
loop
aam
push
or
hlt
dec
dec
call
cmp
mov
push
jns
rorl
jae
xor
out
fwait
mov
out
aas
jnp
aaa
stc
out
xor
movsl
sub
xchg
jbe
pop
cwtl
test
je
adc
adc
mov
lds
roll
je
lahf
imul
sub
call
mov
mov
jmp
test
mov
xchg
dec
inc
leave
movsb
lret
mov
fildll
jnp
inc
jns
xor
inc
fs
jecxz
scas
push
xchg
jmp
add
xchg
lcall
pop
jp
sti
and
mov
mov
loope
push
int3
xor
add
fistpl
or
aaa
add
ja
enter
jp
mov
fs
ja
cmpsb
xchg
cld
jmp
xchg
mov
cld
jg
cmpsb
out
divb
sarl
and
inc
pop
adc
test
popa
jno
or
sti
sbb
mov
xchg
or
mov
dec
and
movsb
xchg
sahf
loopne
and
sti
inc
pop
dec
aaa
jecxz
adcl
shll
pop
push
cs
or
stos
enter
sahf
jb
fmull
fcmove
sub
pop
push
add
dec
fisubl
jge
in
pop
mov
push
mov
icebp
sbb
xchg
or
out
adc
push
pop
ds
loopne
es
fdivrl
cmpsb
mov
ret
shll
jle
xchg
push
aas
loope
push
and
pop
lods
in
fmuls
ss
mov
lock
push
fdivrp
push
lock
bnd
sbb
push
int
imul
bnd
or
inc
mov
mov
test
icebp
popf
xlat
mov
mov
push
mov
adc
pop
je
and
shll
shl
test
sbb
xchg
ljmp
inc
or
hlt
lcall
jecxz
hlt
fiadds
or
pop
test
xchg
sub
mov
cmp
inc
in
lods
subb
fdivrl
jl
cmp
insl
mov
sti
adc
inc
movsl
mov
out
mov
jge
test
lret
movd
inc
lods
and
sti
lret
fidivrl
test
jo
inc
fsubr
rorb
pop
push
cmpsl
jmp
add
cmp
adc
out
xor
mov
test
adc
pop
push
test
dec
add
std
push
xlat
push
lcall
xor
xor
inc
int
push
or
pop
cld
shl
pop
mov
jo
shrb
std
mov
fdivl
mov
add
pop
js
js
fwait
movsb
outsl
add
fstps
jns
and
inc
sbb
inc
sbb
inc
push
pop
fbstp
lcall
pop
mov
dec
sbb
cmp
jmp
arpl
arpl
pop
imul
fstl
inc
dec
jge
test
insb
sub
mov
fs
cs
outsb
mov
je
cmp
in
mov
scas
cmp
fmul
pop
cmp
pop
xor
movsl
int3
fmul
sbb
jle
scas
push
cwtl
and
aad
inc
mov
mov
cmpb
inc
ljmp
mov
int
sbb
or
aad
test
and
sarl
sbb
test
mov
cmpb
insl
shll
jg
sub
pop
stc
lcall
xor
or
and
outsb
lret
jl
xchg
mov
das
add
dec
loop
cltd
aaa
in
jg
sarl
jmp
clc
ffree
dec
jno
aas
hlt
push
decl
or
stos
push
popa
aaa
ljmp
add
lds
xor
rcl
frstor
mov
clc
pop
xor
mov
jp
test
lock
xor
fsubrl
or
call
or
cwtl
inc
rorb
shll
jbe
push
sbb
enter
hlt
dec
pop
mov
push
xchg
aad
cmp
jbe
call
jo
iret
test
pushl
leave
iret
arpl
adc
loop
inc
jge
push
and
inc
repnz
cli
push
sbb
loop
clc
mov
cmp
mov
xor
aam
adc
idivb
arpl
lods
adc
mov
popf
lods
fwait
lahf
test
and
ret
sub
fildll
dec
mov
enter
xchg
mov
jne
sbb
jmp
jl
aam
mov
lods
out
push
into
shl
xchg
js
sbbl
push
int
scas
pop
xchg
repz
mov
xchg
or
mov
push
data16
leave
mov
fcomps
inc
adc
int
jb
rcrb
je
test
pop
icebp
push
rol
xchg
pop
add
movl
cmp
js
aaa
arpl
pop
pop
lahf
repnz
jb
shr
movsl
pop
test
cld
aad
xor
or
cmpsl
mov
out
cltd
push
mov
inc
icebp
push
das
rolb
xor
scas
pop
inc
je
pop
sahf
fs
sub
daa
addr16
inc
inc
enter
jns
out
mov
mov
faddl
pop
inc
fs
pushl
mov
adc
or
or
aas
hlt
pop
push
jne
or
bound
and
lods
dec
add
or
out
mov
and
dec
push
jmp
test
sbbb
out
call
xchg
sub
push
loopne
adc
testb
or
mov
adc
pop
and
loope
xchg
push
mov
mov
loopne
xor
pop
adc
fildl
xchg
lods
repnz
sbb
jecxz
dec
mov
lahf
jmp
jbe
cwtl
rclb
push
mov
mov
aam
xor
scas
ds
jns
mov
je
sbb
cmp
and
hlt
pop
mov
out
pop
sub
jmp
lods
enter
imull
xchg
push
dec
jecxz
xchg
lods
add
mov
test
and
addr16
mov
sub
leave
add
iret
xchg
pop
pop
and
and
fists
sbb
cli
push
mov
inc
xchg
pop
jle
in
adcl
hlt
popa
cltd
testb
add
or
xchg
iret
mov
mov
sub
jecxz
nop
aad
repz
test
push
xchg
roll
xor
mov
or
push
dec
or
jne
inc
enter
lahf
outsb
cltd
test
dec
out
cli
rcr
adc
in
ficompl
mov
sub
jle
es
test
test
mov
push
mov
adc
adcl
cmp
lcall
arpl
pop
mov
xor
mov
jnp
cmp
stc
bound
push
push
rcrl
int
push
ss
aad
stc
jo
and
loope
jmp
lock
mov
sub
mov
cli
xchg
xchg
xlat
mov
jae
sub
mov
lret
lahf
cmp
jns
pushf
arpl
lds
sub
cmpps
mov
sub
enter
xor
out
or
fwait
out
insb
clc
pop
int3
push
aad
push
aaa
or
scas
xchg
add
push
inc
mov
cmpsl
test
xchg
mov
mov
int3
stos
ds
mov
dec
imul
popa
mov
xor
inc
cmpsl
sub
movsb
or
push
lret
adc
mov
movsb
mov
fsts
mov
cld
aaa
sbb
sbb
insl
fidivrs
mov
jge
leave
fldt
push
lods
mov
into
mov
dec
mov
cmpsl
jo
xor
sahf
test
and
outsb
mov
sub
pop
das
add
add
enter
in
mov
mov
sub
cltd
pop
lods
and
fistpll
test
int
adc
jae
ja
aas
inc
ljmp
and
dec
xchg
popf
add
pop
test
adc
jbe
cmp
jns
cmpsb
mov
lea
mov
xchg
and
scas
mov
enter
lea
jg
and
and
add
in
mov
push
into
scas
jo
pop
sub
mov
mov
cs
mov
rcrb
pusha
cmpsb
stos
into
dec
mov
xchg
jae
jne
xchg
lret
dec
pop
dec
push
loop
leave
or
loop
sbb
lret
xor
mov
push
leave
xor
outsb
shl
repnz
sub
icebp
cld
inc
ret
mov
xchg
push
cli
lods
loop
and
pop
mov
lahf
cld
dec
dec
es
dec
adc
cltd
lea
repnz
sub
fnsave
inc
jbe
lds
sti
fstpl
jno
sar
into
fstpl
movsl
sub
mov
das
add
mov
sbb
cmpb
sahf
clc
dec
inc
jmp
mov
cltd
xor
xor
xor
jg
sub
cmpl
imul
and
push
das
add
pop
cmp
cmp
lcall
sahf
mov
mov
dec
cs
mov
stc
rcrl
into
jnp
inc
push
pop
and
xchg
setns
repnz
mov
rcr
aam
out
rcl
mov
mov
pop
sub
cmpsl
xchg
mov
dec
lods
sub
ret
pop
stos
push
pushf
add
push
xchg
jle
lcall
cmpb
arpl
aam
xchg
je
imul
pop
cmc
jae
loop
ret
fcoms
xchg
inc
cwtl
mov
icebp
mov
cltd
test
sub
hlt
sub
lea
ja
push
xabort
aaa
out
jp
xor
fmull
in
cltd
enter
cwtl
insl
push
shll
rorl
inc
pop
inc
test
sbb
pop
in
fimull
jge
sub
pop
in
xor
mov
fsubl
adc
fwait
pop
or
scas
mov
lea
je
jb
cli
cmp
dec
jge
jnp
add
std
xchg
loop
ljmp
arpl
jno
orb
xchg
shlb
xor
loop
or
je
adc
inc
xor
mov
adc
cmp
pusha
jecxz
mov
push
cmp
outsb
add
sub
cltd
insb
sbb
clc
movsl
jae
mov
sub
adc
inc
sub
mov
shlb
pop
xor
or
xchg
jb
sub
mov
not
push
rolb
ljmp
pop
aas
sub
imul
xchg
cld
jle
jmp
repz
mov
adc
pop
or
sahf
jp
jb
adc
dec
mov
ficompl
lods
mov
mov
jo
or
dec
push
addr16
mov
fsubrl
push
jge
inc
cltd
cmp
mov
adc
adc
test
mov
push
inc
cmpb
mov
and
js
ljmp
dec
shll
mov
sbb
push
sub
add
pop
inc
ror
gs
xchg
pop
xor
sbb
lcall
rolb
xchg
rcrb
xchg
cld
jg
cld
test
or
rcrb
call
sahf
lods
js
insb
popa
sbb
push
je
dec
adc
cltd
std
imulb
pop
jns
sbb
sbb
movsl
test
push
jmp
iret
fdiv
mov
fcoms
in
adc
lret
insb
cmp
lret
fidivrl
push
sub
xor
and
jne
rcl
mov
mov
test
push
arpl
sub
xchg
push
rol
mov
sbb
int
scas
jno
pop
fs
mov
or
lahf
into
daa
imul
ss
cmp
loopne
data16
lods
and
xchg
jge
dec
adc
mov
dec
test
into
fstl
sbb
pop
shl
dec
iret
add
dec
xor
movlps
cmp
jl
dec
dec
add
jmp
pushf
xor
sub
in
pop
and
inc
lret
and
dec
insl
jb
aaa
dec
adc
push
mov
mov
xchg
jle
ss
pop
mov
cmp
pop
and
cmpsb
jo
out
scas
xchg
add
hlt
adc
pushf
mov
adc
ret
addl
mov
and
mov
inc
mov
mov
test
or
rep
enter
nop
orb
outsb
xchg
xchg
subb
xchg
fstpt
and
jge
add
and
loopne
and
pop
xchg
jae
mov
inc
iret
outsb
mov
rcll
shlb
and
fistpl
shlb
rcll
add
mov
cli
push
aad
cli
jmp
sbb
enter
int
xchg
sahf
inc
roll
add
dec
xor
sub
push
bound
repnz
or
orl
or
lcall
sub
jmp
mov
sbb
add
adc
mov
sbb
outsl
test
mov
jg
mov
sub
sbb
or
or
sbb
aas
inc
pushl
ljmp
adc
inc
or
or
test
or
xor
xor
adc
cmpsl
jle
bound
repnz
adc
aaa
das
mov
adc
repnz
ret
subl
rcrl
sbb
rcrb
xchg
dec
sti
out
enter
push
fnstenv
pop
loop
rcrl
test
xchg
xchg
dec
sub
aaa
lods
insb
adc
mov
rdpmc
ljmp
cmpsb
cmp
jg
xchg
lock
add
pushf
mov
loop
pop
movsl
call
out
jo
nop
mov
pop
cltd
fldl
or
loope
xchg
dec
mov
push
aad
mov
push
iret
xor
sub
or
sub
es
adc
mov
test
push
cmp
pop
or
movsl
shrl
inc
arpl
inc
shr
mov
sub
cltd
pop
mov
aaa
out
jne
sbbb
cmp
xchg
dec
inc
jno
inc
out
test
adc
lea
jbe
adc
mul
outsl
sub
rclb
xchg
fisubs
xor
xor
add
insl
dec
imul
imul
inc
dec
dec
stc
mov
loopne
int3
jecxz
or
jnp
mov
popa
pop
cmp
ror
push
stos
popf
and
call
cmp
cmp
dec
jno
pop
lods
lods
faddl
jle
push
adc
fs
and
push
movsl
outsb
push
jl
lods
push
loop
pushf
cmpsl
in
in
pop
push
cwtl
xor
inc
call
imul
pop
push
or
and
lahf
pop
mov
test
imul
mov
call
jmp
loopne
add
adc
roll
icebp
mov
mov
je
cmp
jb
fisttpll
pusha
in
push
aam
add
aad
movsl
lods
mov
jmp
cmpsl
dec
jbe
sti
push
xchg
cs
xchg
idivb
mov
loopne
xchg
sub
popa
dec
add
push
xor
mov
xchg
scas
fisubrl
lcall
stc
cmp
lret
ljmp
loop
mov
loopne
icebp
iret
mov
dec
pusha
sbb
and
dec
dec
outsb
adc
push
xchg
cs
jmp
sub
add
testb
hlt
and
xchg
filds
in
pop
in
jg
add
add
adc
inc
hlt
inc
mov
xchg
mov
add
rorl
mov
ret
adc
shrb
imul
sub
aad
mov
adc
and
lods
xchg
xchg
xor
and
xor
jge
lods
mov
and
sbb
jnp
xor
cmc
scas
push
es
leave
hlt
or
outsl
inc
sar
jle
fildll
in
adc
jmp
pop
dec
pop
pop
inc
and
cwtl
std
fldenv
scas
movsb
cmpsl
adc
xor
dec
out
xchg
pop
mov
pushf
subb
and
scas
push
dec
pop
mov
leave
push
or
icebp
cmp
shrb
pop
scas
sub
xchg
dec
pop
sbb
rcll
inc
sbbb
stos
push
pop
xchg
insl
add
arpl
loopne
ret
mov
pop
pop
push
sbb
inc
cmpsb
or
pop
ss
in
mov
pop
sub
frstor
cltd
ss
adcb
push
pop
cmc
aaa
call
fsubrl
mov
and
pushf
je
enter
mov
out
mov
jns
arpl
fs
rorl
ss
cmp
cltd
inc
cmp
xor
ja
cmp
cmp
insb
test
adc
rorl
mov
adc
xor
inc
aas
in
je
stos
callw
sbb
pop
xor
lahf
cwtl
aad
and
xchg
cli
jae
cli
notl
jno
je
jnp
cmc
fsubrl
jg
jns
push
inc
add
test
xor
pop
sbb
add
xchg
xor
inc
dec
inc
psubusb
aaa
icebp
insb
sub
add
fdivl
movsb
adc
lds
xchg
test
movsl
xchg
add
movsl
push
sub
cmpl
hlt
leave
iret
mov
mov
mov
pop
sbb
aaa
cmp
mov
jecxz
inc
mov
pop
cs
mov
aas
adc
out
adc
sbb
jnp
fistps
mov
cs
push
imul
jmp
enter
mov
popa
push
xor
pushf
sti
ds
mov
cltd
jo
cltd
es
std
lods
mov
aaa
mov
lock
ja
inc
mov
fmul
add
mov
cmp
xchg
and
icebp
sub
cmp
sbb
pop
roll
lahf
push
notb
lret
push
jb
les
call
mov
call
jl
js
jno
cmpsl
xchg
lock
pop
jb
lcall
mov
andb
pop
jge
fsubrp
cmp
sub
cmpsl
and
and
mov
out
repnz
cwtl
call
ret
jns
push
xchg
arpl
sbb
xchg
cmp
stos
aas
ret
dec
add
xor
enter
jmp
in
sub
int
dec
pop
ret
addr16
mov
in
jl
push
xor
dec
outsb
push
mov
js
sub
arpl
and
inc
jo
fdivrp
mov
std
lret
push
cmp
mov
sub
add
xchg
cld
inc
push
push
push
xor
repz
sub
sub
addb
mov
mov
fistps
filds
adc
fcmove
mov
inc
mov
xchg
jnp
test
lea
pop
insb
mov
shl
idivb
aad
out
inc
repz
pop
push
xchg
es
out
and
rep
and
jge
jb
lods
iret
mov
bound
data16
inc
push
mov
inc
gs
mov
push
push
push
sbb
sub
dec
popa
xor
fldenv
and
pop
pop
cmp
mov
add
jnp
in
adc
iret
and
fldt
mov
dec
lcall
jnp
fildll
ja
jmp
jg
fsubl
fdiv
int
sbb
cmp
icebp
mov
repz
ss
pop
or
cltd
mov
mov
fisubl
leave
adc
dec
fsts
xchg
shlb
push
inc
stos
outsl
inc
mov
push
jle
frstor
test
jmp
fimull
xchg
dec
dec
adc
jo
mov
adcl
xor
dec
mov
mov
jmp
inc
jne
or
jns
lret
mov
mov
int
mov
lock
dec
or
fisubl
inc
jns
cmp
ret
or
pusha
sahf
loope
out
data16
lods
rorl
pop
cmp
or
jne
fsincos
out
xor
mov
lret
loop
add
mov
ss
leave
movsb
push
or
lods
jg
aad
sar
insb
mov
dec
test
ja
rcrl
pop
adc
cmp
ja
mov
stos
sub
or
mov
movsl
rcrl
push
pop
jl
shll
dec
jge
add
adc
jg
mov
xor
adc
mov
mov
cmp
pop
lds
add
std
push
scas
insl
lock
xchg
dec
in
ljmp
cmp
and
mov
xor
test
cmp
jl
adc
test
fbld
push
mov
fisttpl
lea
scas
mov
sbb
xor
addb
pop
add
cmp
jne
adc
dec
pop
insb
repnz
movsl
shlb
imul
sub
jbe
mov
mov
sub
mov
xor
pop
push
in
mov
mov
jnp
pop
push
mov
pop
push
testl
mov
lods
and
js
rol
add
insb
shll
mov
push
iret
rorb
in
lds
mov
sbb
pop
pop
sub
scas
aad
sub
inc
ret
jge
dec
repnz
pop
mov
jne
jne
lcall
mov
decl
ja
daa
dec
add
popf
pavgw
mov
stos
sbb
shl
daa
in
cmpsl
push
xchg
js
popa
jge
lcall
dec
ja
cmp
or
movb
lcall
adc
cmp
dec
adc
sarl
or
inc
add
mov
repz
mov
rcll
jecxz
cmp
inc
lahf
or
out
and
cld
xchg
aaa
push
shrl
out
cli
daa
xor
lret
loop
popf
outsb
adc
push
insl
rcr
dec
inc
or
sbb
nop
orl
testb
or
xchg
jb
nop
fcmovnbe
inc
xchg
fnstcw
pop
mov
pop
aas
ljmp
inc
jg
addl
arpl
outsb
adc
testl
xor
int
adc
fs
xor
lcall
jle
les
roll
shr
daa
sub
mov
mov
cwtl
sbb
and
nop
pop
mov
or
cmpsl
iret
push
xchg
bound
popa
pop
in
sbb
xchg
ss
sbb
and
rorl
jmp
sub
mov
nop
ret
scas
mov
and
xchg
das
daa
lods
sbb
mov
mov
gs
cmc
sub
std
sbb
sbb
xchg
out
push
nop
or
pushf
into
mov
mov
xor
scas
mov
mov
sarl
jp
imul
inc
dec
sbb
xchg
sub
ss
push
lods
mov
jmp
xchg
lcall
int3
mov
and
outsl
sub
mov
dec
les
out
das
dec
xor
sub
fisttpll
and
jbe
test
xchg
xchg
cmp
dec
xor
push
xor
xor
jg
cmp
cli
inc
enter
push
inc
jl
int
cs
adc
push
nop
fistps
loop
test
shll
ds
inc
scas
int
add
test
dec
in
xchg
inc
test
out
subb
mov
mov
mov
inc
gs
lods
sbb
imul
cmp
mov
pop
lahf
push
sbbb
into
mov
hlt
or
or
and
adc
imul
je
in
mov
int3
outsb
fisubrl
js
je
negb
addr16
mov
jecxz
xchg
in
push
cmp
xchg
jmp
mov
push
adc
push
and
cmp
movsl
in
and
fucom
and
or
popf
int
xchg
fbld
das
cmp
and
sub
mov
or
cwtl
ss
xor
aad
add
mov
cltd
loopne
and
in
cmp
xchg
jno
xchg
ret
insl
cmp
nop
push
decb
scas
jae
sbb
fwait
arpl
sbb
adc
cltd
insb
and
imul
cmpb
push
or
cmc
mov
icebp
cmp
jmp
or
cmp
loop
jecxz
pop
sub
into
pop
es
mov
push
sbb
sub
push
sub
push
imul
mov
sub
lahf
aas
jno
sahf
mov
pop
sub
inc
sub
mov
clc
and
and
pop
jae
js
jo
stos
or
int3
sbb
test
insl
pop
adc
xchg
out
inc
aas
push
inc
test
mov
lahf
sub
mov
dec
inc
or
push
je
mov
mov
decb
int3
fcoml
rcrl
mov
outsb
js
stos
lds
ret
test
mov
push
js
sub
mov
enter
les
dec
iret
pushf
and
pop
jecxz
in
dec
xor
xor
test
mov
xor
ljmp
or
jno
movsl
mov
or
stc
mov
push
lds
lret
add
mov
add
add
mov
add
aas
push
jl
das
mov
mov
cmp
rcrl
pop
sti
lret
icebp
shlb
xchg
imul
mov
cmp
mov
adc
adc
loope
fisubs
adc
jg
xlat
push
das
sti
in
jns
mov
or
ljmp
call
jae
into
push
aam
pop
out
ret
and
pop
scas
fisubrl
or
rcll
fildll
mov
fldenv
mov
iret
lods
xchg
and
add
outsb
sub
mov
mov
push
sub
fisttpl
fcomi
stc
xchg
stos
jl
fisttps
mov
xchg
addr16
pop
pusha
int
les
mov
out
xor
push
test
bnd
orl
push
andb
lret
enter
and
lds
das
shl
out
sbb
std
je
enter
jmp
ljmp
int
nop
clc
xchg
repz
add
pop
incb
lock
jle
jmp
daa
adcb
inc
mov
sub
ds
adc
mov
jbe,pt
shll
insl
mov
rcrl
or
ficoms
mov
and
mov
insl
imul
adc
cmc
in
cmpsl
clc
jne
in
js
sarb
scas
ret
sub
adc
ja
rorl
iret
sub
sbb
or
mov
scas
sbb
push
fwait
fs
xchg
pop
repz
mov
in
pusha
enter
pop
inc
xchg
inc
adc
jl
lret
fsubs
mov
mov
mov
inc
dec
mov
pushf
cwtl
mov
int3
xor
icebp
xchg
dec
daa
shlb
push
popf
jge
or
cmp
adc
or
push
rcr
sti
xor
pop
dec
out
jle
shr
cmc
push
int3
cmpsb
jle
mov
xor
lods
fidivl
adc
cmpsb
fs
pushf
or
mov
and
mov
sbb
insl
xor
in
dec
jp
push
inc
outsb
adc
jmp
mov
sub
inc
and
jp
cld
xlat
mov
xor
sbb
cmp
ljmp
mov
xchg
mov
mov
xor
sbb
adc
push
cmp
mov
shlb
push
pop
push
addr16
je
inc
sar
sarb
dec
xchg
mov
in
mov
outsl
xchg
clc
sahf
les
inc
push
cli
cmp
xor
call
into
dec
or
shlb
lods
outsb
lret
push
cmc
sub
and
mov
pushf
sub
ljmp
pop
cmp
add
add
adc
cmpsl
or
push
cwtl
sbb
and
push
mov
idivb
jge
lock
xchg
in
jb
xchg
dec
xchg
adc
xchg
add
imul
leave
imul
mov
pop
sub
cmp
xchg
and
and
dec
mov
lods
mov
xor
in
pop
je
ret
push
and
rcll
movb
lds
pop
aam
mov
popf
push
out
pop
insl
adc
fs
dec
movsb
xchg
lea
pusha
fs
hlt
cmp
das
aaa
jg
jns
jg
adc
test
mov
gs
jo
inc
xor
and
cli
or
inc
insl
mov
jecxz
jns
hlt
hlt
cmpsl
fsubrp
push
arpl
and
mov
jl
cmp
mov
pusha
imul
mov
mov
mov
fildll
push
sub
add
aam
movsb
js
imulb
xchg
repz
clc
cmp
adcb
mov
movsl
push
fcmovnb
mov
into
pushf
mov
data16
mov
or
jae
sub
stos
pop
cwtl
clc
jle
inc
or
stos
rdmsr
xor
xor
lock
xor
cmpsl
pop
aaa
dec
dec
cmp
and
xor
add
addr16
adc
cmp
pop
mov
xlat
stc
arpl
call
cmp
pop
inc
call
xchg
jns
xor
inc
xor
fistpl
daa
jp
movsl
dec
mov
das
xchg
sbb
out
fisubs
push
cli
fbstp
mov
xchg
insl
push
es
scas
sahf
mov
cmc
sub
push
dec
sbb
xchg
push
and
popa
inc
mov
in
push
jp
insb
dec
jnp
int
fs
hlt
cmp
and
pop
pushf
in
mov
and
mov
push
or
leave
ret
xlat
mov
inc
in
or
mov
cmp
mov
cli
ret
testl
pop
sub
mov
scas
xlat
xor
stos
std
push
sysret
or
sub
mul
inc
fidivrl
jg
daa
ret
shl
or
mov
adc
and
call
mov
sub
inc
inc
stc
cmp
test
jecxz
gs
push
or
ss
cmc
shlb
int3
jmp
inc
xor
loope
repz
mov
xchg
inc
and
ljmp
adc
cwtl
mov
ss
cmpsl
mov
xor
push
bound
mov
ret
es
add
adcb
fstl
cmpsl
nop
or
in
xor
out
in
repnz
aam
mov
or
add
movsb
push
into
fcmovu
jno
ret
mov
cli
jns
pop
ja
iret
mov
loop
add
cmpb
mov
dec
inc
xchg
ror
push
gs
jl
arpl
or
pop
sbb
out
sub
lcall
pushf
lock
xor
ja
jns
in
mov
jno
stos
rorl
clc
inc
stc
push
adc
scas
aam
sbb
xor
xor
je,pn
mov
jmp
sub
mov
lods
push
cmpsb
add
inc
dec
sbb
fs
jno
xchg
pop
pop
cmpsb
cmp
mov
dec
jp
out
lock
icebp
xor
nop
ret
mov
push
leave
popa
mov
mov
xor
ficoml
or
enter
mov
push
xchg
movsl
mov
pop
push
jp
mov
and
imul
clc
sbb
aas
fistl
mov
sub
stos
les
jo
cmp
cmp
pop
push
or
fnsave
js
mov
arpl
clc
nop
dec
call
pop
mov
push
into
inc
sbb
aam
jge
loopne
cld
in
and
insb
pushf
das
jg
adc
subb
cmp
push
sar
ret
adc
inc
arpl
fimuls
xchg
loope
add
xor
sub
lret
inc
fisttpl
lahf
fisubs
sub
mov
xor
leave
jle
mov
and
sbb
movsb
mov
mov
add
lahf
out
das
dec
das
sti
adc
lret
cs
pop
popa
add
and
test
sbb
mov
stos
push
xchg
xor
xor
mov
sbb
outsl
inc
jecxz
insb
mov
test
xchg
in
xchg
mov
adc
add
mov
or
ret
xchg
push
rcr
xchg
jbe
push
inc
into
add
mov
insl
test
test
loop
xchg
jmp
das
loop
jo
das
ret
inc
sub
shlb
leave
dec
test
lea
lods
cmp
cmc
cmp
out
mov
push
test
inc
mov
pop
into
xorl
sbb
xor
inc
jecxz
pop
cwtl
movsl
out
jne
movsl
aam
push
xchg
mov
xor
xor
xor
sbb
dec
test
insb
into
mov
push
inc
leave
mov
cmp
pushf
ret
jmp
jle
sub
xchg
mov
mov
leave
les
aam
xor
scas
dec
push
fisttps
pop
push
adc
dec
jbe
rolb
insb
push
push
dec
mov
lret
out
sub
or
xchg
sbb
out
adc
pushf
in
loop
add
lods
mov
cmp
orl
push
inc
into
mov
cwtl
xor
pusha
pop
std
inc
add
ja
push
fcom
jmp
fiaddl
xor
dec
ja
inc
ret
xor
ss
sub
jno
int
xchg
in
ljmpw
in
adc
fbstp
sub
pop
iret
cli
mov
andb
clc
sbb
flds
xchg
stos
jp
sbb
lds
outsb
rclb
pop
adc
int3
jl
aas
pop
push
loop
fwait
test
cltd
push
xor
insb
sahf
fcmovnbe
push
add
or
or
and
xor
ds
sbb
lret
lea
mov
jne
test
out
inc
repnz
lretw
gs
mov
xchg
sbb
loop
scas
mov
push
push
pop
cmp
sbb
cwtl
sbb
dec
and
xchg
dec
cmp
popf
xchg
popl
and
addr16
or
into
inc
mov
mov
push
xchg
xlat
sub
jge
jbe
lods
cmp
das
enter
add
inc
in
dec
iret
test
outsb
sbb
insl
inc
xor
add
push
sub
imul
mov
jl
enter
mov
and
push
movsl
mov
push
int
inc
inc
insb
adc
mov
sub
sub
and
pop
add
mov
stc
ja
std
sbb
sarl
dec
inc
lods
fwait
cmp
pop
das
mov
insb
ljmp
pop
test
shlb
fucomp
jb
sbb
adc
aad
lods
shrl
arpl
lret
inc
inc
sub
or
push
xor
jp
mov
fsubs
decl
lcall
xor
xchg
test
lock
and
mov
std
adc
jg
ljmp
pushl
push
cmpsb
inc
pop
mov
movsb
add
frstor
gs
scas
lea
jmp
fucom
mov
jge
leave
inc
and
faddl
insl
lcall
aaa
into
push
leave
mov
ljmp
shll
icebp
sbb
pop
mov
adc
test
and
xor
xchg
mov
xorl
dec
gs
inc
cmp
cmp
adc
jecxz
leave
pushf
das
faddl
push
movsl
xchg
lods
xor
mov
insb
leave
xor
aam
dec
or
stc
mov
mov
call
jne
mov
xchg
cltd
loopne
mov
jno
xor
icebp
pop
dec
fdivrl
repz
push
pop
iret
inc
xor
ret
fildll
xchg
frstor
mov
and
in
loop
fidivrs
mov
sbb
into
adc
sahf
sbbl
pusha
in
xor
jae,pt
xchg
mov
adc
mov
jae
jg
adc
loope
ss
pop
dec
test
mov
pop
xchg
repnz
dec
arpl
pop
adc
jmp
repz
inc
add
dec
dec
gs
mov
xor
sbb
pusha
or
mov
loop
jns
mov
xor
dec
xlat
fsub
subl
mov
lret
push
pop
inc
jb
dec
sbb
xchg
sbb
lea
pop
js
add
adcb
mov
xor
push
pop
sbb
subb
xchg
cmpsb
adc
cmp
sbb
cmpsb
push
add
mov
loope
rolb
dec
xchg
rorb
out
fstp
std
push
ficomps
cmp
xor
popa
push
incl
gs
rcll
jae
cld
cmp
mull
sbb
das
ja
mov
aad
sbb
mov
inc
data16
jno
outsl
add
scas
test
push
addr16
shrl
das
nop
push
sti
popf
pop
and
cwtl
or
sub
imul
push
dec
mov
pushf
not
inc
imul
fdivrl
or
sub
mov
stc
mov
fisubrs
pop
pushf
sub
repz
stos
outsb
push
dec
jg
push
cltd
add
movsl
mov
pop
jle
push
fbstp
jmp
xor
rcr
ja
out
pop
pop
fidivs
inc
mov
push
add
inc
push
pop
insl
cmp
adc
hlt
sub
jno
daa
push
mov
addr16
mov
arpl
adc
mov
xor
in
js
das
iret
in
shr
jmp
jno
or
sub
mov
mov
popa
mov
mov
and
xchg
jge
es
mov
mov
ljmp
fstpt
arpl
mov
sbb
repz
cmp
out
pop
arpl
cmp
pop
mov
roll
int3
sbb
cmc
popa
pusha
ja
pop
mov
pop
into
subl
jmp
xchg
nop
and
jb
mov
mov
inc
leave
test
flds
xor
cmp
xchg
fs
sahf
out
inc
inc
jno
outsb
pop
lret
fs
push
and
ret
cmp
push
lret
daa
or
adc
mov
jb
mov
es
pop
les
loope
hlt
movsb
out
cmp
mov
imull
xchg
ljmp
xchg
pusha
pop
jg
sbb
inc
sahf
sub
mov
sub
mov
test
push
cmpsb
int3
ja,pn
out
sbb
aas
fwait
outsb
sbb
jp
jmp
popf
fldl
lock
pop
in
lea
arpl
test
nop
call
test
and
xchg
ljmp
mov
push
stos
xchg
pop
aam
test
push
jp
test
or
shlb
pop
popf
mov
scas
int
add
lods
repz
add
sub
xor
jp
insl
aam
scas
sub
inc
jmp
int3
and
inc
xor
or
and
fadd
ret
lods
add
lea
iret
lods
mov
cmp
lret
lahf
xchg
fidivrl
add
frndint
cmp
adc
es
les
xor
adc
adc
in
int
dec
out
add
push
cs
or
ja
push
les
push
insb
adc
inc
cmc
movsl
leave
xor
xchg
mov
mov
mov
lock
sub
adc
jg
sub
pop
in
mov
test
sbb
dec
pop
jo
cmpsl
xor
xor
mov
xor
jge
outsl
push
mov
pop
pop
movsb
jo
fstpt
call
in
add
mov
sbb
pop
fnstsw
lea
cmc
push
pop
fs
pop
addr16
dec
int3
pop
popf
loop
mov
sub
pop
sbb
pop
cltd
fiaddl
adc
rolb
push
filds
xchg
jecxz
call
js
jp
mov
addb
mov
xchg
mov
aaa
sbb
push
mov
imul
sub
dec
push
add
adc
jecxz
or
sub
xor
cmp
cli
xchg
jle
fmull
dec
les
cmpsl
mov
adc
dec
jmp
cs
adc
add
sbbl
movsl
jmp
inc
mov
fsubrl
mull
jnp
pop
bound
in
cmc
andb
cmp
cmc
les
jmp
add
daa
outsb
inc
cwtl
push
xchg
add
push
push
fdivs
fucomp
mov
jp
or
outsl
sbb
ja
xor
inc
shlb
in
icebp
mov
out
mov
aam
push
pop
push
sub
outsl
mov
shll
out
les
adc
adc
test
outsb
mov
pop
jmp
push
mov
and
arpl
mov
add
inc
popf
fs
je
cwtl
das
pop
dec
shr
in
mov
pop
mov
test
mov
fmull
imul
cmp
inc
lahf
scas
fisubs
mov
cltd
xchg
xchg
imul
clc
xchg
mov
pop
into
daa
cwtl
idivb
inc
cld
and
jns
xchg
push
add
fildl
mov
adc
dec
pop
sbbl
xlat
or
sbb
dec
push
fnstcw
imul
pop
add
add
jmp
int3
push
xchg
lock
xchg
shrl
and
add
imulb
lret
mov
imul
xor
repz
push
addb
mov
sarb
push
pop
push
mov
dec
divb
pop
mov
and
fwait
pop
inc
mov
jl
or
mov
cmp
fsub
icebp
frndint
int3
add
inc
les
dec
call
dec
mov
cld
or
pop
mov
and
dec
inc
mov
gs
inc
les
int
add
repz
mov
inc
mov
xor
testb
shl
fbld
mov
loope
adc
insb
shr
push
push
das
out
dec
cwtl
dec
sbb
rcrl
test
or
std
out
xchg
pop
sbb
sub
mov
iret
xor
int3
mov
dec
lds
push
movsb
scas
lea
cmp
pop
cmc
loop
repnz
sub
fsubs
and
jecxz
addl
mov
cmp
mov
imul
cmp
mov
push
pop
ret
pushf
sbb
cmc
pusha
call
mov
sbb
jo
sub
mov
mov
mov
sti
jg
scas
loopne
int3
sbb
int
add
pop
push
xor
dec
mov
lds
dec
ret
mov
mov
jle
lret
inc
dec
fscale
aam
jno
shlb
ds
pop
sub
fstps
lahf
fs
adc
lods
mov
push
jnp
push
xchg
imul
cmp
call
in
aam
ljmp
jnp
shll
in
rclb
fucom
xchg
push
in
xchg
repz
dec
push
cld
jbe
mov
jno
stos
daa
incl
push
mov
loope
lds
and
decb
repz
das
xchg
jge
out
inc
mov
mov
popa
outsb
mov
jmp
xor
repnz
test
jo
adc
aad
movsb
out
or
or
push
sub
data16
mov
pop
stc
jg
jge
xchg
lcall
scas
xchg
pop
dec
jle
mov
sbb
lds
in
jbe
mov
sahf
jae
rcr
lahf
xor
outsb
push
outsl
xchg
cmp
insb
xlat
iret
adc
nop
hlt
cli
subb
daa
xchg
out
pushf
enter
add
into
xchg
cmpsb
sbb
lcall
dec
out
and
in
and
call
jbe
pusha
dec
das
addl
sbb
stos
sbb
sub
inc
pop
int
jl
enter
sub
mov
sbb
cltd
push
shll
shrb
lcall
fldl
sub
mov
scas
bound
xor
mov
add
loope
fldcw
jg
pop
mov
pop
jae
inc
dec
cmp
mov
add
outsb
ret
je
cmc
fists
mov
cmp
fildl
jno
pop
or
lea
xchg
pop
xchg
jno
sbb
ret
push
in
push
add
jle
into
inc
or
outsl
repz
cmp
fcomps
mov
adc
mov
or
jmp
adc
pop
ss
xor
mov
inc
pusha
jecxz
inc
cwtl
ficomps
fnstcw
push
hlt
xor
dec
fmull
jbe
pop
pop
scas
int3
shrb
xor
jge
jp
xor
loop
add
sbb
sub
xor
lret
add
icebp
es
fs
sahf
outsl
push
cmp
addr16
adc
push
sbb
add
fdivrl
sub
das
int
and
inc
pop
and
pop
sbb
sbb
cmpsl
pop
and
hlt
in
cld
fcmovne
xchg
jne
scas
mov
pop
cmp
dec
lahf
or
mov
cli
outsb
xchg
call
es
lcall
xchg
call
popf
mov
jno
iret
fadds
xchg
mov
add
mov
lret
lret
jmp
jne
push
fistpl
or
xchg
lahf
jp
dec
xchg
rolb
xchg
test
and
xchg
dec
cmc
imul
sub
loope
jl
imul
jmp
push
xorb
sub
cmpsl
popf
jg
mov
incl
fsubrs
and
jmp
mov
xor
pop
orl
lock
xchg
je
push
jmp
sub
test
insb
call
cmp
dec
pop
mov
mov
js
enter
sub
pop
xchg
jnp
mov
test
rclb
jmp
pop
xlat
xchg
push
stc
mov
pop
test
fisubl
push
imul
sub
pop
movsl
add
jno
or
addr16
mov
flds
dec
cmp
dec
aaa
mov
js
mov
and
lock
pusha
pusha
mov
std
and
sbb
out
push
rorb
ljmp
pop
jb
lds
leave
out
or
mov
mov
adc
iret
cwtl
mov
scas
insb
sbb
loope
xor
emms
jnp
xor
and
in
sub
or
cmp
ljmp
movsl
pop
inc
addr16
outsl
fwait
inc
fistpll
mov
mov
hlt
add
sbb
push
ret
sub
xchg
dec
mov
out
fcomip
xchg
mov
cmp
mov
jo
inc
adc
aam
je
or
and
sbb
jo
jmp
mov
pop
cltd
mov
dec
roll
stc
repnz
outsb
xchg
ds
fs
push
and
enter
xchg
mov
in
or
cmp
pop
xor
cmp
leave
sub
pop
test
sub
jmp
fmul
adc
cwtl
out
insb
sahf
div
std
or
xchg
lret
out
ljmp
ret
sbb
adc
or
into
orl
adc
jl
push
mov
xchg
ffreep
adc
push
shlb
jge
cmp
arpl
popa
xchg
ljmp
inc
or
xchg
add
sbb
cmc
and
mov
mov
jecxz
int3
mov
popa
in
sbb
mov
imul
inc
mov
ret
bound
fcompl
xor
arpl
add
xchg
hlt
inc
pop
lret
stos
mov
push
add
ss
mov
lock
dec
bound
movsb
outsb
movsb
leave
adc
int3
mov
leave
outsb
fs
lret
xchg
xor
or
imul
xor
ja
pop
push
in
pop
aas
jbe
and
adc
rorb
dec
jns
arpl
mov
inc
sub
mov
ds
pop
mov
decl
cmpsl
js
jno
popf
cmc
pop
sbb
mov
lock
mov
test
inc
sbb
or
test
ds
in
pop
or
data16
cmp
push
sub
cwtl
cmp
xor
pop
jmp
in
mov
cwtl
aas
aas
leave
cmpsb
push
mov
xchg
outsl
mov
rclb
mov
stc
shl
or
add
mov
out
push
stos
popa
adcl
xor
loop
sarl
aam
mov
xchg
fcmovnb
xlat
mov
jmp
outsl
ret
scas
or
scas
enter
call
popa
jne
fsts
and
mov
ss
mov
stos
dec
mov
inc
test
or
hlt
add
fadds
jns
or
jg
sub
push
xchg
or
leave
lcall
pop
and
loopne
sub
in
pop
js
lcall
rcl
cmp
and
mov
cwtl
dec
inc
dec
aas
stos
data16
pop
fs
jo
rcr
adc
in
cmp
push
inc
add
or
xchg
dec
fdivrs
insl
cmp
pop
inc
xor
out
push
push
stos
stc
dec
popf
cltd
or
or
lds
int
call
mov
inc
jmp
xchg
jno
in
rorb
xchg
mov
ret
xchg
push
nop
out
outsb
adc
mov
xchg
inc
or
aam
mov
out
pusha
das
mov
and
lods
xchg
out
mov
lahf
ret
and
cli
imul
imul
mov
je
or
or
push
pop
in
pop
lods
ss
cmp
inc
mov
aad
mov
subb
mov
lock
fisubs
lods
fists
fmuls
push
jl
adc
jmp
into
out
push
cmp
lods
mov
scas
sar
inc
and
ret
jbe
mov
push
push
xor
lcall
in
xlat
fldenv
or
and
imul
arpl
adc
add
inc
xor
cmc
mov
shlb
jge
inc
mov
fisubl
cmp
pop
jl
les
cmpsl
inc
pop
lret
inc
cmpsb
mov
addr16
outsb
mov
push
mov
push
divb
fcoml
sahf
or
lods
jbe
push
clc
and
cli
sub
mov
or
cmp
jns
iret
in
jecxz
addr16
repz
mov
nop
loopne
xor
sbb
dec
cs
mov
ret
and
jnp
sar
xchg
cmpsl
xchg
mov
fdivl
lret
cmp
mov
or
cmp
incl
hlt
out
fstps
dec
inc
gs
jmp
sub
cmp
add
xchg
inc
movsb
cmp
pop
sti
inc
push
lods
dec
out
dec
inc
inc
adc
adc
fs
pop
sbb
test
std
rcrb
xlat
mov
add
xchg
mov
sahf
shll
add
cwtl
mov
ja
add
mov
aaa
mov
pushf
test
sti
pop
in
dec
divl
jae
add
popa
mov
xor
adc
movsb
cmp
stc
popa
cltd
add
js
sbb
cmp
frstor
sbb
add
pop
pop
xchg
dec
dec
mov
pop
sahf
mov
inc
stc
je
int
pop
call
scas
cmp
sub
clc
cmpsb
sub
inc
mov
jns
js
arpl
movsb
mov
inc
fsubrl
push
inc
pop
jl
sub
mov
int
or
outsl
cmpsb
aad
out
aaa
out
adc
scas
ret
into
xchg
and
imull
hlt
movsb
sub
pop
mov
inc
cmpsb
pushf
daa
add
add
in
out
ficoms
popf
and
das
outsb
push
cmp
ja
aad
and
dec
test
mov
clc
pop
sahf
add
or
loopne
lea
add
push
pop
ss
jb
out
test
ljmp
cmpsb
push
adc
or
stos
xchg
mov
push
ds
shll
and
aas
jp
scas
fstpl
movsb
mov
lcall
pop
push
es
daa
test
sarw
pop
loope
std
and
imul
jle
jp
ret
cli
xchg
jle
add
sahf
fcompl
cmpl
es
push
out
jecxz
fmuls
int3
jno
and
ret
shrb
sti
in
xlat
jns
rcl
pop
lahf
test
sbb
add
mov
arpl
push
pusha
mov
stc
ja
adc
or
loope
into
jne
stc
jns
test
xchg
ds
dec
add
les
dec
cmpsl
mov
pop
mov
sbb
pop
call
fwait
dec
push
xchg
push
inc
pop
mov
subb
xchg
jbe
jb
lods
orl
pop
lods
add
jne
jo
shrb
outsl
or
jecxz
mov
xchg
jge
insb
out
push
push
pop
mov
mov
cmp
xchg
push
pop
sub
movsb
jne
and
mov
fmull
mov
and
jecxz
mov
stc
fwait
call
cmp
lds
jmp
xchg
jnp
adc
pop
xchg
test
push
int3
lret
lea
sub
inc
and
sub
xchg
push
jnp
in
test
mov
mov
cmp
sar
in
ja
stos
pop
sbb
daa
das
xchg
inc
bound
mov
sarl
xor
test
push
or
pop
pusha
jge
dec
scas
mov
inc
sbb
sbb
ljmp
in
mov
adc
cmp
stc
inc
pop
push
jno
pop
jle
loop
push
popf
mov
inc
cmpb
jp
fcmovu
sub
sbb
inc
and
lds
cltd
aam
ficompl
dec
cld
aaa
dec
test
nop
sbb
ds
ja
add
cmp
cltd
mov
push
jns
dec
pop
sub
dec
std
das
lea
enter
mov
jbe
mov
add
movsl
xlat
scas
dec
cmc
dec
ficompl
in
lea
lock
popa
mov
sar
add
stos
jmp
mov
lahf
jne
xchg
inc
inc
and
rcl
ret
stos
jne
pusha
jbe
push
push
faddp
jae
add
sub
gs
andb
bound
xchg
insl
pop
adcl
fwait
cmpl
hlt
pop
cltd
jp
mov
xchg
jo
popa
sar
dec
ret
dec
fnstenv
daa
mov
js
data16
push
out
loop
leave
sti
bound
sti
push
mulb
scas
adc
or
xchg
into
popl
cli
jo
xchg
push
sbb
out
pop
xor
clc
push
push
pop
inc
xchg
mov
dec
sub
dec
mov
movsl
push
shll
xor
outsl
into
ja
ja
call
into
or
test
xor
fsubrs
push
cmp
cs
sub
iret
insb
mov
sbb
pushf
push
repz
or
sub
les
fiadds
inc
xchg
cmpsb
push
ds
mov
xlat
xchg
mov
xor
or
xchg
push
cmp
fs
incl
fnstcw
cmpsb
lahf
jns
jns
fs
repz
pop
cmc
sub
mov
and
pop
into
outsl
pop
mov
mov
addr16
dec
js
sbb
and
adc
loop
jecxz
jmp
and
jo
int3
cli
subl
push
in
cld
adcl
inc
mov
in
dec
insl
adc
syscall
or
call
ja
adc
xor
push
inc
pop
enter
mov
fcmovb
loopne
pop
inc
cli
inc
sbb
sbb
xchg
xchg
mov
cs
addb
ja
nop
dec
mov
pop
div
std
addr16
push
sub
lea
shlb
jo
pusha
rclb
xor
call
imul
lahf
cmc
scas
mov
pushf
cmp
inc
push
sbb
or
cmp
cmp
push
cld
xlat
out
in
dec
xchg
cltd
data16
mov
sub
xor
loope
jg
arpl
lea
imul
out
sub
movsb
pushf
push
cmp
scas
ja
test
jbe
add
mov
mov
inc
xchg
lret
aad
mov
mov
push
mov
xor
sahf
andb
leave
int
in
out
das
js
inc
test
clc
and
sub
mov
mov
outsb
pop
out
ror
fildll
ljmp
xor
fsubl
iret
scas
and
js
inc
sbb
mov
dec
addr16
negl
test
mov
cmp
mov
pop
dec
sub
fstpt
jnp
fadds
outsl
or
or
push
movsl
test
icebp
clc
sbb
addb
pmulhw
in
sbb
jnp
push
mov
and
pop
clc
jae
insl
nop
jo
cmp
pop
mov
fsubl
lods
stos
adc
bound
jle
dec
and
dec
inc
sbb
dec
sbb
js
inc
movsl
xor
cli
xlat
rclb
fbstp
cmp
jbe
ret
sub
push
or
enter
inc
lahf
js
scas
loop
aas
mov
negl
cs
sbb
cmpsl
inc
fldl
aaa
mov
xchg
mov
push
mov
dec
mov
icebp
or
je
icebp
mov
ljmp
mov
es
xchg
or
lea
add
je
sub
mov
jne
jns
icebp
fcmovu
push
aaa
rorl
xchg
cmp
js
push
iret
adc
addb
jns
push
mov
dec
xor
shl
nop
mov
jle
je
leave
negl
xor
loopne
inc
mov
fstps
je
idiv
mov
add
sub
ret
movsl
bound
pop
adc
in
out
mov
or
pushf
dec
outsb
pop
aaa
push
movsb
aad
cmp
aaa
mov
xor
in
mov
pop
nop
cmp
mov
mov
insl
xchg
cmpsb
test
xchg
cmp
sub
xchg
pusha
aam
int3
sbb
out
xor
test
pop
adc
in
jae
jbe
fdivs
mov
or
cltd
and
sahf
int
fistpll
push
pop
jmp
int3
push
cmp
xor
add
mov
test
pop
ja
cmpl
repnz
scas
sub
or
mov
mov
hlt
inc
je
popl
dec
dec
sahf
stos
repz
stos
push
outsb
iret
sub
xchg
sti
inc
mov
jmp
push
sarl
flds
cmp
icebp
pop
inc
mov
or
push
sbb
daa
add
mov
xchg
movsl
leave
add
mov
mov
jno
jg
or
xchg
xchg
sbb
xlat
inc
dec
ja
push
clc
mov
aad
mov
mov
lods
cmpsl
pop
sbb
and
and
or
inc
jmp
xchg
pop
insb
enter
pop
mov
and
int
push
mov
jnp
jg
push
mov
jg
je
fcomps
dec
fninit
jae
sub
loop
fdivp
subl
repz
jle
je
decb
out
mov
in
stos
loopne
adc
hlt
es
adc
outsb
mov
out
inc
sub
mov
ror
repnz
dec
add
mov
shlb
or
mov
insl
icebp
into
pop
pop
lret
jns
mov
enter
dec
data16
lods
and
sbbb
sub
loopne
cwtl
push
jae
jg
xchg
ret
mov
loope
icebp
fucomi
orb
pop
add
push
mov
pusha
push
pushl
sarl
mov
mov
iret
add
ljmp
inc
lods
aad
mov
jbe
hlt
jl
daa
int
int
flds
orb
push
in
jecxz
js
sti
stc
jg
imul
fcoml
inc
mov
clc
stos
jae
and
fidivrl
mov
xchg
test
out
clc
add
andl
out
jo
mov
mov
jno
cvtpi2ps
mov
movsb
pushf
xchg
out
mov
push
mov
xchg
dec
not
ljmp
es
scas
mov
mov
mov
mov
jns
inc
lods
cmp
add
data16
clc
stc
stos
dec
mov
hlt
xchg
push
movsb
mov
sub
sbb
or
pop
ret
push
ds
cwtl
mov
bound
cmp
pop
sbb
and
add
sahf
sub
jne
data16
loope
adc
xchg
adc
in
lods
mov
aad
mov
lock
xchg
or
loopne
dec
dec
push
addr16
sub
ja
gs
jecxz
or
sub
push
dec
and
push
mov
and
int
inc
push
push
pop
mov
mov
jb
cmp
push
xor
aad
inc
lock
cltd
lea
pop
es
adc
dec
push
aam
out
ja
or
inc
push
out
fadd
sti
sub
fdivr
push
push
xchg
fidivrl
pop
jg
sahf
jne
adc
mov
les
iret
dec
xchg
push
push
cmp
not
push
pusha
push
jns
cwtl
adc
mov
mov
dec
jne
or
cmp
xchg
iret
jae
scas
mov
inc
cmpl
or
xchg
jbe
mov
inc
sahf
lahf
inc
imul
push
lods
push
xchg
xchg
out
pusha
push
jle
sub
or
cmpsb
fstl
lea
loop
clc
or
insb
push
in
sti
pop
clc
mov
or
inc
std
push
mov
dec
popa
fnstsw
xor
icebp
hlt
into
or
out
aaa
sahf
and
mov
aam
mov
pop
scas
mov
xchg
stos
pop
adc
ret
movsb
inc
hlt
in
lahf
xor
rcll
mov
adc
pop
cmpsl
popa
dec
jg
and
ficoms
pop
mov
jnp
ret
rorl
mov
int
mov
incl
shll
dec
push
pop
int
popf
mov
sbb
adc
push
dec
inc
mov
mov
arpl
ljmp
cmp
cmpsl
inc
dec
mov
ret
bswap
pop
loop
mov
adc
in
xor
cmp
out
addr16
sub
stos
push
mov
xlat
push
add
jg
pop
xorl
sbb
mov
mov
aas
sub
divb
mov
loop
aaa
xorb
ljmp
mov
lret
stc
inc
sti
pop
adc
stc
cmp
mov
mov
mov
sbb
std
outsl
aam
adc
push
adc
sbb
inc
pop
ljmp
ja
iret
pop
and
xchg
jle
ror
cmpsl
mov
aad
cmc
insb
xchg
xchg
fcmovne
xor
sub
stos
sbb
outsl
in
movl
stos
mov
mov
sub
add
call
xor
lock
mov
sub
xor
add
loope
xchg
jbe
lods
add
mov
popa
pusha
push
movsl
movsb
pop
mov
mov
stos
adc
pop
aad
int3
mov
les
lret
sti
das
xchg
fldt
mov
cmpb
lods
push
dec
sbb
fwait
das
pushf
inc
mov
mov
push
jb
jno
pushf
and
lods
inc
dec
cmp
mov
dec
adc
setbe
dec
jne
int
jge
hlt
or
or
into
adc
jecxz
push
jmp
add
outsb
loope
fsub
mov
fbld
and
mov
fwait
and
lret
mov
or
pop
sbb
stos
movsb
sahf
xor
fcoms
fistps
ljmp
jne
add
lock
mov
fisttpl
jle
aas
jae
adc
pop
mov
sbb
sahf
and
fsincos
in
xchg
jg,pt
insl
mov
add
movsl
negb
mov
or
push
clc
lds
jmp
push
cli
mov
sbb
mov
ja
test
jge
pop
addr16
push
pop
xor
lods
jnp
cmp
dec
loop
shlb
data16
or
push
push
jl
adc
mov
jae
mov
push
int3
xchg
push
into
cmp
call
xor
hlt
shr
fdivs
orl
cli
inc
movl
xor
jno
jge
rcr
jl
imulb
ss
inc
inc
push
pop
or
lahf
popa
mov
lcall
mov
out
mov
push
xchg
clc
xchg
std
jecxz
sbb
fs
or
ret
or
and
xor
pop
paddusb
sbb
add
mov
and
cltd
add
lahf
mov
sbb
mov
inc
sub
sub
pusha
inc
cmc
mov
loope
repz
adc
jp
push
pop
mov
ljmp
and
or
mov
mov
inc
xlat
call
in
cmp
inc
jg
rcrl
imul
cwtl
jecxz
jmp
dec
dec
mov
mov
loope
sub
jno
mov
lret
push
jmp
fsub
daa
test
repnz
cmp
mov
popa
mov
push
sbb
cmpsb
pusha
into
dec
enter
nop
jbe
es
lret
push
mov
sub
das
cli
xchg
stos
dec
sbb
subb
cs
rolb
mov
xchg
pop
mov
push
cmc
jbe
mov
jmp
adc
mov
mov
sbb
shl
daa
sub
repz
adc
inc
sub
push
cmp
movsb
or
shrb
sub
lock
pop
dec
mov
mov
cmp
nop
fnstenv
adc
add
cmp
cmp
xor
mov
loopew
push
jl
or
decb
mov
mov
or
cwtl
xchg
jae
pop
movsl
movl
stos
sub
fisubrl
xchg
sub
push
inc
dec
jbe
out
inc
test
je
gs
jns
mov
add
and
enter
in
imul
inc
les
popf
in
fs
pop
cmp
stc
jb
je
inc
adc
adc
xchg
cld
pop
popa
outsb
bound
pop
adcl
sbb
neg
xchg
push
pop
mov
inc
loop
js
inc
adc
xor
inc
repz
xchg
in
adc
mov
inc
not
mov
jg
dec
sub
jne
lock
clc
push
jae
push
xchg
xchg
test
and
loop
dec
xchg
inc
xchg
xchg
jbe
repz
fists
and
mov
xchg
aad
adc
xchg
test
test
mov
out
loop
js
pop
jmp
aad
pop
and
mov
mov
mov
pushf
push
push
add
pop
in
xor
push
cmp
jno
scas
mov
jne
and
or
dec
pop
mov
cmp
daa
xchg
push
adc
xchg
rorl
cs
loopne
cmp
or
and
or
pushf
lds
nop
hlt
loope
scas
cli
ss
sub
call
jnp
int
popf
addr16
mov
ljmp
jno
adc
fdivp
pusha
mov
jge
lret
jge
or
mov
dec
sub
jmp
popf
pop
inc
imul
mov
in
rcl
test
xor
popf
mov
pop
push
fistps
into
sub
add
pop
dec
lret
mov
shrb
sub
shll
jnp
push
ret
pop
mov
inc
pop
test
rolb
push
lods
inc
jl
jle
sub
cmp
jb
inc
leave
insl
sti
sub
mov
cmp
mov
aad
xor
lret
stos
sbb
insb
repz
ret
dec
aad
xor
shl
push
mov
sar
lahf
mul
fs
mov
adc
push
pop
adc
cmpl
and
lods
cmp
adc
or
mov
dec
push
dec
push
sarl
icebp
insl
mov
jle
jae
push
and
lods
stc
testl
add
mov
shll
push
jo
adc
cmpsl
dec
dec
xor
sub
in
dec
mov
aas
xor
notb
stos
push
push
gs
dec
or
fmull
loopne
mov
int
adc
addl
lods
out
mov
add
xlat
outsl
iret
lret
adc
repz
rcl
ljmp
mov
push
add
adc
aas
xor
pop
and
popf
les
mov
xchg
cwtl
cmp
adc
mov
xorl
lods
pusha
ds
loope
adc
adc
sbb
xchg
call
mov
stos
test
and
aas
mov
rep
sbb
jmp
lcall
jmp
fcomip
imulb
inc
aam
sub
fdivl
inc
xchg
pop
sbb
jnp
xchg
mov
out
lret
out
out
loop
mov
add
add
dec
popf
out
inc
int3
loope
mov
mov
pop
addr16
loope
jecxz
aam
les
inc
or
pushf
les
mov
iret
mov
mov
pop
dec
adc
add
std
into
dec
test
sub
or
into
sbb
fmull
push
push
gs
das
add
shrb
sub
sbb
push
loope
mov
dec
pop
fadd
add
adc
mov
shr
ljmp
outsb
or
ljmp
mov
dec
mov
call
aad
test
pop
mov
xlat
mov
jne
mov
stos
addl
jne
ret
sub
lods
imul
scas
jg
mov
movsl
and
jg
bound
adc
movsl
std
xchg
lods
cs
mov
jg
mov
cmpsb
mov
pop
imul
pop
cld
mov
subb
xchg
push
xchg
xchg
xor
xor
mov
or
pop
and
mov
pushf
or
jp
fnsave
mov
bound
add
enter
mov
fisttps
xor
fisttps
push
mov
cltd
cmp
out
fdivrl
adc
jno
dec
dec
cmpsl
xchg
insb
mov
push
mov
lock
sub
and
ja
clc
add
jns
cli
cmp
cmpsb
mov
push
rorb
fisttps
pop
out
inc
add
loope
lea
imul
add
cwtl
push
mov
cmp
xchg
xchg
je
mov
stos
xor
pushf
mov
aaa
xchg
cmp
aad
lret
repz
dec
repz
dec
in
add
lcall
in
mov
test
jg
inc
or
das
test
push
jne
or
pop
pop
mov
mov
lcall
lret
dec
xor
push
ficomps
test
dec
mov
and
popf
push
dec
outsb
push
mov
lea
fistps
xchg
mov
cltd
loope
adc
push
xchg
jg
into
jne
xor
cmc
insb
add
dec
xchg
loop
movb
aaa
mov
mov
cmp
ret
inc
xor
rcrb
incb
dec
lret
push
vmovd
outsl
inc
test
xchg
lcall
lock
pop
xchg
jb
andl
xor
test
xor
pusha
xchg
fsub
jno
sbb
mov
outsb
jno
jae
cwtl
mov
dec
lock
out
sub
cmp
and
insl
lcall
pop
repz
and
pusha
mov
cmp
call
or
pop
addb
inc
push
and
outsb
xorl
adc
cltd
subb
push
xchg
cld
cmp
call
xchg
mov
sbb
mov
or
xor
mov
xchg
xchg
aad
xor
inc
xlat
or
mov
repnz
xor
ds
xor
fisubl
adcl
stos
jge
lods
aas
das
insl
out
aaa
pusha
pop
push
rol
jmp
mov
push
sbb
jo
andl
xor
ret
pop
int3
push
sub
in
xor
jb
cmp
pop
mov
xchg
cltd
sbb
sti
rcl
mov
sbb
pop
dec
andnps
push
sbb
cmp
xor
pop
int3
dec
ds
mov
insl
nop
jnp
jae
aaa
call
push
pop
and
jp
push
cmp
xor
cwtl
dec
cmpb
outsb
flds
popa
ljmp
mov
pop
jmp
fisubrl
dec
lods
hlt
lret
test
lds
sbb
out
incl
fildll
lods
mov
dec
pop
cmp
push
fiadds
repnz
lods
mov
mov
dec
in
mov
adc
enter
int
push
jno
pop
pop
push
ret
inc
rcrl
jecxz
sbb
lret
int3
push
cmp
mov
in
xchg
mov
or
sbb
or
mov
xor
jle
pop
push
repnz
sarl
mov
and
ljmp
jb
mov
sbb
dec
mov
jmp
dec
imul
adc
pusha
repnz
xor
mov
push
mov
mov
or
call
push
jne
mov
int
mov
mov
sbb
push
add
xchg
call
mov
jl
dec
fcoms
dec
adc
mov
jmp
addr16
fdivs
xor
outsl
cmpl
inc
mov
dec
in
xchg
ret
cmp
and
add
mov
loop
and
lds
and
pop
movsl
xchg
iret
push
pop
and
in
movsb
xchg
jnp,pt
popf
mov
push
push
push
mov
ljmp
xor
cld
or
push
scas
imul
sarb
lret
lock
test
push
cmpsb
pop
movsb
lret
xor
mov
jl
sub
cmp
cmpb
xlat
ret
movsb
sarb
ret
pusha
imulb
js
mov
imul
lea
jg
push
repnz
scas
frstor
sub
nop
pop
enter
and
ljmp
shll
inc
add
rclb
testl
movsl
jnp
sbb
sub
add
lock
ljmp
xchg
lcall
faddl
dec
jg
jne
pop
scas
push
jo
pop
push
lods
inc
xchg
mov
push
xchg
mov
mov
mov
ret
orb
aaa
or
mov
mov
sub
je
aad
pop
ja
xor
out
fisubs
scas
cmp
daa
stos
cmp
mov
sub
push
jne
nop
pushf
push
test
loope
lods
les
loop
inc
into
mov
and
dec
push
and
pop
lea
xor
mov
fdiv
lcall
dec
pop
cmc
jne
jae
lods
mov
or
loopne
or
ficompl
jae
movsl
rcll
stc
sarl
jno
aas
sbb
cmp
pop
and
insb
arpl
xor
sub
in
sbb
adc
roll
jne
jl
mov
jge
xlat
pop
cmp
mov
inc
fcmove
sti
nop
fadds
leave
fidivl
bound
stos
jl
jmp
jp
push
fwait
dec
jecxz
sub
pop
add
pop
shl
pusha
cmp
cmpsb
shrl
cmpl
xorb
leave
stos
pop
or
xchg
xor
xchg
addb
insl
fnstcw
sub
andl
cmc
call
jo
jmp
mov
cmp
jge
dec
lcall
fiaddl
sti
mov
mov
mov
sahf
or
mov
push
gs
mov
cwtl
orl
lods
or
push
pop
lock
or
ret
dec
xchg
fisubrl
push
ljmp
lods
jo
jl
movhps
nop
js
cltd
cmpsl
adc
pop
into
pusha
stos
dec
push
fdivs
inc
shlb
sub
mov
pop
imul
xlat
stos
sti
hlt
mov
sub
sbb
test
loope
aad
sub
adc
mov
sbb
sbb
xor
and
xchg
aam
cmp
addr16
shll
dec
push
stc
xor
ljmp
inc
aaa
lods
mov
adc
insl
pop
jge
push
aaa
test
dec
push
ljmp
mov
out
xlat
cmc
inc
es
and
jl
or
adc
sbb
rcrb
xor
or
inc
adc
loop
cmp
cs
fstps
pop
lods
adc
cmc
sarl
cld
jae
sbb
cmpsb
mov
mov
mov
sbbb
pushf
pop
mov
mov
aas
inc
mov
int3
pop
push
or
dec
cmp
and
inc
dec
jg
add
sahf
mov
add
mov
loop
in
inc
mov
pop
xchg
lock
test
cli
pop
clc
lods
imul
dec
inc
add
mov
pmaxsw
sbb
sub
pop
les
dec
cmp
clc
leave
nop
mov
loop
xchg
lret
push
fisttpl
repnz
mov
sub
test
out
test
adc
dec
mov
add
or
stos
scas
or
push
mov
mov
adc
jle
pandn
adc
loope
out
sbb
push
mov
xor
popf
rclb
xchg
cmp
or
test
xlat
and
xchg
rorb
iret
outsb
out
xchg
cmp
ret
sub
cmp
call
out
push
ljmp
stos
mov
out
add
movaps
gs
dec
add
outsb
push
lcall
xchg
test
divb
sub
xor
dec
int
sbb
push
mov
xor
test
icebp
cmp
inc
cld
push
in
jmp
lods
adc
cld
mov
aad
or
lret
jmp
pop
jns,pt
js
or
ja
cwtl
stos
movsb
das
inc
mov
nop
stc
sbb
loop
dec
sub
outsb
fisubl
add
jle
scas
ja
inc
xlat
hlt
ret
adc
push
and
pop
pushf
ljmp
push
fcompl
mov
mov
test
cmp
jmp
fcom
test
aad
inc
mov
insl
lods
repnz
push
nop
add
cwtl
out
sahf
sub
repz
inc
or
and
dec
jne
mov
enter
jns
xor
xchg
outsl
xor
xchg
add
add
testb
sar
idivl
ss
inc
inc
mov
rcrl
xchg
add
in
pushf
shlb
pop
fsub
or
push
sarl
or
push
cs
xchg
iret
add
push
or
mov
mov
out
arpl
jmp
add
pop
test
jnp
movsb
cmc
xchg
orl
call
sbb
pop
xor
aaa
sbb
cli
adc
in
xchg
mov
leave
mov
dec
sub
mov
cmp
mov
pusha
ret
sub
mov
and
jne
cmp
popa
jnp
mov
dec
cli
dec
rcll
push
sub
jo
push
test
xor
ss
into
inc
cmp
xor
jmp
mov
mov
fdivl
cmp
loopne
nop
xchg
inc
and
cs
add
lods
mov
negl
push
adc
out
hlt
dec
sub
fadds
mov
subl
idiv
push
lahf
lcall
mov
outsl
data16
orb
clc
sub
imulb
pop
frstpm(287
loope
ds
mov
cltd
ljmp
cmp
xchg
leave
rol
testl
shrb
xchg
xchg
add
sub
loop
int
int3
rorl
movsl
dec
add
dec
out
enter
jmp
push
ror
xchg
sbbb
inc
fimull
sub
sbb
adc
jg
adc
divl
and
cwtl
xor
mov
outsl
push
popf
mov
lds
inc
aas
push
xchg
jb
sub
mov
testl
cmc
push
or
lock
and
fwait
mov
sub
lock
cs
ret
and
and
call
xchg
inc
sub
mov
xchg
lcall
push
xchg
clc
in
fdivs
outsl
fidivs
ds
sub
xor
stos
fdivrs
sub
adc
xchg
sub
sbbb
loope
mov
push
frstor
inc
mov
sbb
idiv
and
xor
loope
inc
xor
and
popf
push
pop
ljmp
loop
pusha
andl
cmpl
scas
mov
test
add
xchg
scas
or
xchg
pop
lahf
fistps
lods
out
lahf
mov
test
pop
daa
mulb
cwtl
shlb
xor
mov
sahf
sbb
out
repnz
cmc
and
jge
sbb
push
jg
cli
imul
adc
jecxz
inc
inc
bound
adc
adc
mov
mov
mov
lods
lea
mov
arpl
mov
jb
mov
jg
pop
sbb
loope
adc
lods
cmpsb
stos
mov
pop
dec
xor
push
fdivs
sti
add
xchg
and
test
es
dec
repz
icebp
mov
pop
cmp
jb
mov
rolb
cmp
pop
ret
inc
mov
pop
xchg
add
loopne
sub
mov
pop
adc
enter
sub
mov
into
pop
jle
push
out
shll
shlb
lahf
or
jle
mov
pop
sbb
je
or
cmpsb
insb
xor
imul
xchg
nop
xchg
dec
and
and
test
jbe
mov
push
call
inc
enter
dec
lcall
daa
and
repnz
xor
nop
sub
popf
mov
movsl
ds
cmp
mov
mov
bound
mov
dec
dec
lcall
ja
fsts
jp
pop
jp
fwait
dec
pop
cmp
inc
scas
push
pop
pop
sbb
ja
orb
pop
or
outsb
outsl
cmp
mov
jno
jb
out
sbb
xor
data16
xor
sbb
popf
imul
cmpsb
stc
adc
mov
mov
scas
sub
cwtl
pop
xchg
mov
xor
add
ja
adc
movsb
and
adc
mov
lods
xchg
xor
fwait
xchg
xchg
in
push
inc
inc
mov
jp
xchg
mov
pop
sub
movsl
loope
jl
test
les
lds
pop
ljmp
bnd
sahf
in
shl
adc
inc
aam
sbb
hlt
sbb
popf
pop
xchg
xchg
push
test
adc
gs
push
mov
push
lods
popf
ret
sbb
sar
int
loopne
xchg
xchg
adc
bound
jmp
pop
or
cmp
shl
dec
popa
lods
sub
aam
dec
movsl
ret
inc
xchg
xchg
and
adc
mov
adc
inc
aas
push
mov
inc
mov
mov
push
and
mov
or
aaa
lret
jb
or
cs
js
and
inc
lret
in
jnp
mov
inc
outsb
shl
mov
pop
negb
inc
push
pop
sbb
mov
jecxz
jne
pop
pop
call
dec
nop
jp
pushf
in
push
and
jg
fnstenv
cmp
cmp
push
idivl
sbb
adc
sub
aas
sub
es
cmp
inc
rolb
shlb
int3
pop
rcl
aad
fcompl
xchg
les
loop
hlt
or
aaa
in
out
add
push
aad
mov
fidivl
xchg
xchg
clc
or
dec
xor
rorl
jmp
xor
jg
out
int
or
leave
leave
jne
xchg
incb
leave
push
push
insb
adc
xchg
pusha
push
jne
xchg
mov
ficompl
add
fisubs
lahf
fwait
dec
pop
cmp
inc
pop
adc
inc
jae
fs
mov
inc
xor
popf
jae
jnp
in
cltd
lret
push
sti
add
pusha
mov
mov
jl
ljmp
adc
mov
rolb
or
jge
mov
push
and
ficoms
xlat
in
pop
cmpb
fsubr
negb
pop
cmpsl
mov
in
fists
ljmp
or
in
call
sbb
inc
aas
jbe
mov
or
sub
mov
movsb
pop
leave
cmc
inc
xlat
mov
or
adc
clc
loop
adc
outsb
loop
or
movsb
sub
fwait
dec
push
and
pusha
or
sub
mov
sub
repnz
cltd
jbe
std
xor
fwait
stos
dec
inc
insb
out
add
cmp
xchg
lods
cli
cs
xor
inc
cmc
lcall
xor
bound
lret
add
or
shrl
mov
into
sbb
xchg
jmp
cmp
sbb
xlat
rcrl
lret
mov
test
push
out
xor
mov
cmpsl
and
ljmp
or
js
jne
jmp
in
jl
xor
push
add
inc
fwait
mov
bndstx
outsl
rorl
call
outsb
aaa
lea
out
aad
test
sub
adc
data16
mov
ljmp
pop
adc
mov
in
xor
mov
push
and
popf
movsb
stc
cltd
adc
dec
inc
movsl
addl
mov
rolb
loope
xor
xor
pop
xchg
insl
icebp
cmp
mov
test
xchg
adc
mov
leave
pop
push
or
je
push
xlat
shlb
pop
fildl
and
inc
jne
rol
aam
fdivs
push
sub
pusha
test
dec
bound
movsl
xchg
fwait
mov
dec
jl
cmp
cmp
insl
pop
sbb
push
xor
dec
add
pop
shll
les
pop
fstpt
aaa
pop
push
out
arpl
cmpsl
or
mov
mov
push
mov
outsb
out
sub
adc
ret
fs
or
push
addb
mov
out
mov
pop
and
xchg
daa
xlat
mov
adc
pop
loopne
jnp
cmpsl
cmp
push
das
into
mov
cmp
xor
outsb
sti
fdivrl
ret
pop
inc
sub
clc
scas
adc
add
scas
sub
lret
sub
int
movsl
lea
movd
or
clc
sub
jge
xchg
imul
test
jle
adc
mov
imul
mov
sub
cli
repz
mov
cmp
add
mov
adcb
cmp
sub
jg
mov
inc
pushf
sub
pop
push
xor
xchg
mov
xchg
push
mov
jbe
push
aam
test
pop
push
movsl
mov
repnz
andb
ljmp
fadd
adc
shl
jg
out
stos
mov
and
inc
pop
pop
push
cwtl
mov
jmp
paddusw
incb
js
test
pop
fimull
push
dec
pop
dec
call
adc
cmp
sbb
iret
lcall
push
js
mov
sbb
aam
icebp
add
out
sub
lcall
add
mov
std
into
or
insb
ficoms
dec
or
shrl
pusha
xor
and
dec
in
cs
out
lods
mov
xor
jno
push
sub
lret
subb
sti
fwait
cld
imul
enter
fsts
js
cmp
mov
roll
dec
inc
pop
scas
gs
adc
mov
out
adc
iret
push
mov
in
ljmp
mov
or
aam
cmp
stos
inc
jb
rcll
test
pushf
cld
test
mov
in
or
xor
shlb
mov
test
cwtl
pop
add
adc
cltd
ss
jl
mov
cwtl
out
dec
into
jg
in
rcrb
sbb
push
push
shrb
clc
stos
aad
fnstcw
out
es
cwtl
and
push
call
xchg
cmp
or
mov
repnz
mov
or
and
cltd
les
sub
mov
in
cmpsl
sbb
add
pop
call
int
jno
int3
inc
int
shll
leave
bound
mov
xchg
sub
xchg
xchg
movsb
sbb
cltd
xchg
fcmovnbe
cmp
mov
cwtl
sbb
fsubs
scas
call
sbb
xchg
nop
rolb
jbe
dec
cmp
mov
jns
xchg
pop
mov
jp
pop
mov
sbb
adc
sbbl
cld
sahf
aaa
fwait
je
in
push
xchg
xchg
mov
push
js
sub
and
mov
xchg
pop
insl
sahf
mov
mov
jno
push
jb
in
jle
mov
mov
decb
rcll
ja
cld
ret
gs
or
mov
push
xchg
out
in
inc
lea
sub
push
jmp
imul
sub
outsl
and
jl
or
fldl
outsl
cmp
jecxz
mov
or
int
test
jge
setge
ljmp
pushf
aam
leave
inc
mov
rcrb
adc
jle
xor
mov
test
ret
adc
mov
test
pop
push
je
dec
lods
fidivrl
mov
scas
or
or
and
sbb
pop
adc
xorb
stos
mov
insb
lcall
pop
loop
das
aas
stos
xchg
xchg
inc
loop
jle
loopne
jnp
fcmovu
pop
imulb
in
fsubrl
mov
mov
push
call
dec
test
mov
fcoms
pusha
das
aas
mov
dec
rcll
mov
mov
mov
cmpsb
mov
add
add
mov
rcl
arpl
pop
push
pop
sbbb
hlt
fsubrl
xchg
jg
mov
lods
push
xchg
lods
mov
jmp
lds
and
nop
xchg
and
lcall
pop
out
and
sub
dec
mov
and
cltd
mov
add
push
cmp
cmc
xor
cmp
jbe
imul
adc
push
out
sbb
jl
xchg
push
out
xor
push
xor
popa
pushf
aas
adc
xchg
ficoml
lret
xor
rorb
jns
inc
and
mov
cld
adc
cmp
inc
aas
jnp
rcrb
outsl
mov
pop
push
aad
repz
add
aam
daa
sub
push
jbe
sub
sti
pusha
dec
daa
test
xor
ss
mov
dec
dec
adc
lahf
hlt
mov
push
pop
mov
mov
fstl
js
iret
xor
jmp
stos
xor
cmp
and
mov
sti
cmc
cmp
jo
sbb
or
popf
cltd
cmp
repnz
jle
js
mov
insl
xor
arpl
out
and
mov
push
add
cmp
xlat
fildll
pop
fistl
stc
ret
ror
scas
cmp
loopne
fnclex
loope
pop
cmpb
jae
lods
mov
pop
aam
mov
shlb
insb
enter
push
in
mov
imul
add
sbb
sbb
outsb
add
dec
mov
mov
pushf
aas
es
cmp
ret
fnstsw
ret
outsb
pusha
call
sbb
int
adc
push
adc
sbb
xchg
ds
mov
imul
cmp
je
cmpsb
lret
adc
lock
out
fbstp
mov
leave
adc
scas
inc
fbld
xor
lods
mov
cmpsb
sub
pop
pop
in
and
outsb
lods
out
hlt
stos
and
gs
mov
sub
mov
push
test
add
aam
testb
pop
mov
lret
aas
sar
fcomip
mov
mov
jle
xchg
shlb
cmp
aam
sti
xor
mov
insb
adc
xor
icebp
cmp
jg,pt
and
mov
enter
sub
jo
jne
sbb
loope
cmpb
mov
push
mov
push
movsl
fiadds
or
cmp
js
xchg
jecxz
mov
and
loope
or
mov
pop
push
adc
cltd
aam
dec
shll
sbb
inc
test
add
int3
adcl
aas
pop
andl
pushf
punpckhdq
shrl
jne
jl
dec
jnp
in
pop
xchg
cli
loope
push
mov
popf
lret
sbb
mov
test
stos
paddsw
xchg
adc
adc
frstor
push
xor
dec
sub
jae
add
repz
adc
inc
test
cmp
or
gs
and
and
xchg
mov
xchg
inc
pushf
sbb
xchg
movsl
cwtl
ljmp
xor
incl
xor
shrb
test
cmp
mov
dec
sbb
imul
lcall
mov
dec
sbb
jp
or
mov
icebp
fmull
stos
jl,pt
mov
add
fidivs
mov
pop
mov
mov
pop
adc
arpl
jne
xchg
sbb
mov
xchg
sbb
push
add
aam
lcall
jmp
pop
mov
xchg
dec
sbb
das
mov
test
jmp
outsb
xchg
aaa
cwtl
leave
jl
push
pop
xchg
jne
sub
imul
fmull
mov
mov
stos
dec
adc
test
pop
repz
aas
mov
dec
mov
popf
ret
adc
in
push
lahf
push
jbe
mov
jnp
cs
sbb
xor
test
or
lret
and
sub
sbb
rcrb
mov
add
pushf
loopne
add
pop
jo
mov
pop
popl
push
aaa
mov
int3
jno
lahf
jp
add
push
add
int3
in
xchg
or
jg
out
jno
pop
fwait
mov
daa
jns
loopne
inc
loope
inc
pop
push
add
push
insl
fisubs
push
and
mov
pop
xor
add
pop
pop
adc
out
mov
pop
arpl
arpl
sub
or
xchg
repz
out
fadds
int3
sub
jle,pt
ljmp
mov
inc
mov
cli
shr
mov
adc
sub
and
push
ror
and
out
ja
loopne
daa
incb
xchg
inc
dec
stc
sbb
inc
inc
dec
sbb
aaa
xchg
or
and
cmp
sbb
sti
xchg
dec
inc
test
sbb
add
xchg
ret
rcrl
rcr
orl
call
les
dec
lret
leave
cmp
loope
cmc
imul
shrl
mov
bound
mov
xchg
fldl
jnp
mov
jnp
test
xchg
pop
leave
sub
out
and
adc
data16
jbe
mov
sub
xchg
inc
fsubs
xchg
gs
push
lods
in
into
jnp
adc
xor
or
test
sbb
nop
stos
inc
or
cld
and
inc
gs
movsb
lahf
cmp
dec
rcll
andl
push
pusha
inc
lcall
or
stos
adc
and
mov
adc
std
insb
movsb
mov
mov
aam
lret
push
sub
add
push
sub
lret
pop
test
mov
cli
inc
push
pusha
out
or
orl
inc
cmp
cmpsl
pop
xchg
lret
test
xorb
add
push
imul
and
jp
dec
aam
and
shrb
jecxz
mov
mov
pop
outsl
pop
pop
leave
adc
pop
mov
nop
mov
mov
shrl
sbb
inc
mov
jl
jg
cmpsb
and
insl
test
pushf
or
mov
jns
pop
cmp
lret
or
fucomp
sahf
xchg
leave
jmp
dec
ret
add
adc
int3
movsl
lahf
xchg
scas
sub
test
push
mov
jae
jl
sub
mov
out
pusha
iret
xlat
xchg
cmp
cli
call
fiaddl
jg
call
loop
les
ss
lods
pushl
mov
lods
pop
fmull
inc
cmpsb
mov
jmp
aad
sub
lods
aad
and
or
push
dec
stos
pop
mov
sbb
shll
out
or
in
inc
cs
fimull
add
inc
iret
fimuls
pop
hlt
jno
aaa
outsl
and
mov
pop
call
nop
adcl
fwait
push
lods
sbb
icebp
fwait
lcall
sub
mov
inc
ss
pop
cltd
in
pop
lcall
pop
or
and
mov
jl
lahf
sub
sbb
push
dec
push
cmc
xchg
cmc
out
fisttpll
in
int3
cmp
push
sbb
lret
mov
add
pop
cs
mov
dec
inc
js
in
or
lods
push
push
lods
negb
scas
sub
scas
push
mov
adc
pop
xchg
mov
mov
leave
pop
mov
and
stos
jnp
or
les
fdivs
pusha
stos
sub
dec
int
mov
dec
xchg
inc
mov
addr16
scas
push
and
xchg
test
add
jo
gs
dec
push
xor
mov
dec
push
in
dec
add
fs
repz
push
ja
inc
mov
test
icebp
push
in
mov
push
inc
lds
adc
and
or
lock
and
subb
sub
jno
addr16
xor
addr16
mov
jne
scas
mov
stos
sub
scas
lahf
cltd
stos
dec
or
cmp
and
movsl
mov
pushf
and
andl
mov
push
test
mov
mov
je
add
mov
in
push
ds
scas
dec
mov
lahf
int3
inc
fisubs
sahf
jp
mov
lock
mov
mov
adc
mov
repz
inc
mov
adc
jo
push
sbb
dec
push
std
push
sub
xchg
push
and
sti
fwait
cmpsb
mov
inc
or
pop
imul
shrl
push
out
mov
repz
das
mov
pushf
add
xor
test
cmp
or
pop
loop
cmc
jb
sub
lea
pusha
addr16
push
sbb
or
loop
ja
rclb
iret
jno
sbb
xchg
outsb
jns
js
inc
mov
arpl
mov
xlat
push
out
sub
sub
loope
pop
loope
ret
js
dec
ds
cmp
insl
mov
repnz
ss
push
bound
inc
sarb
xlat
adc
and
es
xchg
stos
dec
push
push
je
std
or
insb
out
sub
jl
inc
add
fmull
out
inc
dec
mov
cld
mov
addl
jl
mov
xor
push
or
mov
int
dec
jp
sbb
divl
push
sbb
pop
daa
scas
stos
in
inc
jb
mov
dec
dec
mov
jnp
cmp
call
pop
inc
aam
jno
mov
mov
js
push
aas
push
ds
sub
mov
sub
jnp
push
push
adc
stos
add
mov
mov
jne
push
loop
mov
dec
sbb
lcall
jmp
les
pop
mov
mov
and
mov
das
and
rcl
and
aad
std
adc
mov
sub
mov
aad
shlb
xor
ja
aad
and
push
pop
mov
fs
aad
iret
jg
jb
xchg
sbb
dec
push
sbb
test
dec
arpl
lods
aaa
subb
loope
nop
int3
fwait
enter
lcall
pop
jns
ljmp
out
ljmp
cmp
or
xchg
loop
xchg
dec
clc
pop
or
inc
icebp
mov
sti
mov
shll
mov
fdivrl
and
inc
xlat
cmp
mov
sub
pop
iret
jl
and
call
insb
ds
cmpsl
sub
jmp
fdivp
dec
xor
cmp
scas
mov
das
mov
dec
test
inc
test
add
shl
sbb
cld
adc
add
movsb
cmp
jmp
loope
out
movsl
jbe
repz
arpl
jae
jmp
pop
and
lods
aas
test
sub
xor
xor
xor
fsubl
cwtl
mov
dec
mov
cmp
movsb
xor
mov
pop
pop
mov
andb
cmpsl
fisubl
idivl
jne
daa
inc
sbb
mov
pop
fs
mov
std
int3
lahf
and
cmpsl
push
push
cmpb
jae
jne
or
sahf
or
adc
mov
mov
pop
loope
hlt
popf
cmp
sbb
test
lods
cld
dec
cwtl
mov
cli
out
scas
cs
ret
and
dec
divl
test
das
jmp
jbe
fdivl
or
sbb
ds
fildl
mov
sbb
mov
dec
inc
ljmp
testb
cld
xchg
insl
adcl
xchg
cmpsl
jo
mov
mov
mov
sub
test
jle
mov
cmp
pushw
fisttps
dec
imul
daa
dec
ret
loope
loop
dec
hlt
mov
and
ss
stos
pop
bound
dec
sti
mov
popa
and
add
or
rcrl
outsl
int
popa
mov
leave
aam
xor
repnz
cltd
sbb
aas
mov
and
in
sti
add
push
cmpsb
push
nop
adc
mov
or
mov
jb
subb
mov
test
addr16
cwtl
sub
mov
popa
outsb
xchg
inc
pop
xchg
jge
int
ss
adc
ss
fcmovnb
nop
lret
cltd
je
in
mov
lahf
bound
inc
lret
dec
inc
pushl
jl
repnz
or
fildl
ja
mov
jg
out
xor
and
push
daa
or
scas
stos
push
ljmp
out
xor
test
mov
fcmovnb
cs
inc
leave
jae
mov
push
xor
mov
xor
cmp
push
sbb
repnz
fs
loope
xor
push
adc
in
adc
les
stos
xor
dec
popf
mov
add
mov
push
inc
or
fildl
rorb
push
inc
jne
popl
sbb
or
inc
dec
outsb
dec
mov
inc
sahf
iret
cmp
inc
ret
loopne
rcrb
nop
daa
pop
popf
cld
adc
dec
sub
mov
mov
in
bnd
pop
cmova
clc
cmp
jnp
ja
sarl
cs
push
jge
and
xor
push
lahf
roll
xor
add
and
addr16
and
test
bound
dec
sahf
pusha
int3
add
add
push
negl
aas
pop
dec
cmp
jne
lcall
js
cmc
mov
add
test
cltd
pop
out
into
out
jge
adc
mov
int3
lods
xor
les
mov
loop
pop
fldl
popa
mov
mov
mov
aaa
add
xchg
sub
rolb
mov
dec
movsb
out
sub
or
mov
mov
jmp
sbb
gs
adc
sahf
sub
repnz
hlt
and
mov
sub
scas
dec
mov
mov
mov
xor
ja
nop
aad
add
sti
inc
cmp
jns
jno
pop
mov
ds
mov
mov
pushf
sub
js
mov
xchg
adc
sbb
scas
jno
pop
and
ds
jbe
test
decl
mov
movsb
leave
cwtl
mov
gs
pop
push
xchg
push
add
sub
dec
sti
pop
jns,pn
dec
std
sbb
xchg
push
mov
mov
or
and
xor
xchg
xorb
fcmovnb
cs
mov
aam
cli
ret
or
ljmp
out
push
insl
aas
xor
jno
xchg
ja
ljmp
mov
push
cmpsl
frstors
pushf
sub
adcl
sbb
imul
sahf
adcb
aas
stc
stos
insl
gs
or
jp
jmp
mov
adc
sbb
clc
adc
imul
xchg
and
out
pop
cmc
les
into
std
aas
xchg
jg
pop
cmpsl
addr16
push
adcl
xor
cmp
inc
adc
mov
mov
lea
inc
imul
and
sub
inc
jbe
dec
fldcw
repz
subl
jmp
jmp
loope
filds
push
or
mov
cmc
adc
aad
jns
fbstp
lea
bound
cs
cmp
call
mov
ficoms
mov
je
stc
cmp
jmp
cmp
lods
mov
jecxz
push
or
adc
push
cli
add
fcmovne
fnstcw
testb
pop
int3
xchg
dec
sahf
sub
test
add
sub
jmp
fistl
or
push
push
adcb
divb
icebp
xor
xor
jne
sub
xor
xchg
pop
loopne
add
jne
mov
cmc
jbe
jg
sarl
pop
dec
vpsadbw
fisttpll
insb
or
cmovno
cmp
and
cmpsl
and
jae
lahf
adc
or
sub
xchg
imul
jp
mov
stc
mov
test
nop
stos
add
sahf
mov
or
cmp
loop
cltd
add
push
movsl
xor
xchg
cmp
aam
lock
test
mov
js
arpl
cmp
lahf
mov
insl
bound
and
cs
adc
cmp
pop
sbb
jp
jne
adc
sub
adc
mov
jg
les
and
push
xchg
inc
in
xchg
mov
jnp
xchg
es
test
xchg
nop
addr16
push
mov
out
xchg
repz
inc
push
rcll
ljmp
cmp
into
cmp
jnp
pusha
aaa
jo
pop
xor
dec
cs
shlb
sbb
sub
inc
xchg
mov
jb
call
pop
lock
leave
daa
scas
rcrl
fstps
insl
xlat
push
pop
addr16
pusha
cmpsl
push
mov
mov
lods
clc
and
fsub
in
fdivs
push
and
xchg
pop
push
push
adc
xchg
faddl
testb
jb
outsl
sbb
pop
add
push
pop
and
cmovp
fistps
rcr
and
lret
ja
adc
bound
sbb
adc
cmp
mov
inc
xchg
xchg
or
cs
xor
sub
loop
xchg
lods
call
aas
aam
mov
mov
shl
push
cmp
xchg
dec
sbb
dec
sub
push
insb
outsb
xchg
test
cmp
xor
iret
xlat
jb
mov
lret
cmp
or
popa
mov
cmp
fdivrs
leave
pop
neg
inc
mov
xchg
mov
dec
mov
cmpsl
or
rcrl
push
pushf
lret
push
dec
adc
mov
imul
and
or
stos
dec
cmc
push
mov
inc
fidivrl
fs
jmp
cmp
mov
mov
pusha
test
push
or
testb
inc
mov
cmpsb
and
xchg
mov
fbld
cmp
out
and
mov
add
adc
pushw
je
cmpsl
es
push
pop
repnz
add
xor
dec
fmul
fucom
push
dec
and
sub
jge
out
bound
xchg
dec
cs
es
jmp
aaa
cmpsl
into
dec
pop
mov
ret
or
add
fcmovu
sub
aad
pop
push
subl
dec
or
xchg
sub
sarl
and
aas
dec
es
ret
dec
fcomi
es
or
dec
xor
pop
mov
out
ja
cmpsb
and
and
mov
ja
mov
insl
xchg
dec
fiadds
in
fs
inc
outsb
jo
scas
mov
jns
dec
pop
push
adc
xchg
aaa
jmp
add
aad
push
add
adc
or
std
lock
jecxz
dec
loop
mov
sbb
mov
dec
xchg
mov
leave
sub
dec
loope
popa
dec
fstpt
xchg
push
xchg
jmp
and
loop
addb
js
adc
decl
icebp
dec
pushf
pop
xchg
push
shll
xor
jmp
sbb
je
dec
icebp
mov
push
outsl
fnsave
add
push
cmp
repnz
lock
xor
iret
std
stc
push
mov
inc
dec
loopne
pop
popf
adc
mov
orb
daa
sti
fisubrl
add
repz
sbb
xor
xor
mov
xor
js
pusha
add
xchg
inc
jmp
in
pop
inc
dec
iret
sub
test
sarb
mov
das
cwtl
xchg
fimuls
rorl
popf
out
pop
pop
pushf
adc
add
out
pop
cmp
add
jmp
push
jl,pt
or
dec
stos
pushf
arpl
sbb
xchg
jo
aad
lret
sbb
adc
arpl
les
mov
adc
movsl
test
xchg
fwait
sub
pushf
xor
pop
sti
add
xor
pushl
repnz
test
xor
pushl
test
frstor
fldl
pop
repz
sub
dec
mov
jns
push
test
dec
add
mov
pop
outsb
and
out
jns
xchg
lcall
sbb
xchg
pop
mov
or
ret
pop
lds
cmpsl
dec
pop
adcb
adc
inc
mov
loopne
jge,pn
imul
lods
pop
adc
sti
push
xor
lret
mov
dec
bound
xchg
imul
imul
push
sbb
and
idiv
repnz
aam
or
leave
inc
lods
add
jl
inc
mov
mov
and
add
dec
loope
cmp
clc
jo
xchg
cmp
sbb
aaa
xchg
jg
dec
test
orl
mov
subb
mov
jbe
mov
and
add
push
fldlg2
mov
push
push
lcall
push
adc
enter
pop
push
imul
std
xchg
hlt
pop
cmp
adc
mov
ret
pusha
push
xor
das
neg
mov
cmc
or
pop
out
inc
push
dec
cltd
es
int3
pop
xchg
ja
pop
inc
dec
adc
xchg
jecxz
or
or
inc
push
adc
mov
adc
lea
aaa
push
mov
popa
sti
xor
and
mov
xor
sbb
jge
fprem1
or
inc
ds
dec
add
adc
and
fs
xor
pushf
sub
and
sub
add
cwtl
insb
ficoms
xchg
sub
add
cmp
sahf
scas
fisubl
mov
and
into
dec
or
sub
xor
imul
andl
in
pop
mov
mov
insb
sbbb
pop
in
cmp
fs
sub
cmp
aaa
ljmp
xor
cli
cltd
jb
ds
and
adc
repnz
mov
pop
jmp
mov
mov
test
xchg
jns
mov
or
mov
xchg
mov
cmc
out
addl
add
scas
lret
jl
adc
cmp
je
push
arpl
mov
cmp
dec
mov
adc
shlb
mov
adc
ret
ja
and
inc
xchg
xchg
push
jmp
cwtl
cmp
mov
imul
mov
jno
pop
int
pop
divb
scas
jp
scas
movsl
hlt
lret
shll
pop
imul
push
das
pushf
ss
cmpsb
fld
test
mov
in
lods
add
ds
gs
scas
lcall
or
pop
test
rcr
pop
adc
xchg
arpl
fcom
dec
mov
sub
inc
jmp
orb
out
xor
jo
pop
jmp
std
sbbl
mov
icebp
popf
cmp
mov
inc
jmp
xor
and
xchg
sbb
ja
push
lods
mov
and
stc
mov
mov
jge,pn
jmp
inc
push
mov
mov
push
and
outsl
aam
filds
jmp
push
sbb
cmp
adc
je
jo
cmp
adc
andl
js
or
popf
test
xor
push
lea
sbb
xchg
or
in
push
sub
and
or
fmulp
jl
push
pusha
dec
xor
aaa
or
icebp
jb
in
stos
sarl
jp
jl
dec
dec
test
xchg
inc
or
stc
sbb
cmp
xor
les
lock
fs
mov
mov
push
out
lds
push
adc
cs
orl
mov
pushf
addr16
es
xor
out
in
push
add
push
lea
inc
fbstp
cmp
mov
push
sub
and
fsubrs
inc
sub
orb
xchg
mov
cwtl
fwait
inc
dec
imul
push
adc
inc
popf
push
inc
xchg
jns
pop
out
bound
cmp
push
enter
sbbb
rorb
stos
insl
mov
lahf
imul
jno
addr16
cmc
inc
xchg
mov
cltd
push
pop
loope
push
inc
jns
testb
cwtl
pushf
jno
dec
xchg
sbb
fcomps
dec
cmp
lods
sub
iret
testl
push
sub
adc
insb
outsb
xor
jg
sahf
cmp
pusha
stos
push
cltd
adc
fstp
push
push
ja
shrb
fadds
add
es
jo
cmc
fiadds
pop
js
jno
sbbl
int3
ds
xchg
mov
mov
xor
lret
rcl
cmp
push
movsb
inc
cli
jbe
add
scas
arpl
negl
mov
mov
sub
test
jl
test
je
jnp
xor
inc
xchg
dec
sub
adc
xor
aas
xchg
lds
test
popf
sub
mov
lods
test
andb
mov
subps
mov
lods
test
jo
mov
ja
adc
out
dec
int3
adc
sbb
jbe
push
mov
or
fxam
pusha
les
outsb
add
inc
sbb
popa
jge
call
movsb
sbb
dec
add
xor
pop
rcr
jmp
sahf
mov
jg
scas
cmp
mov
xchg
sub
movsl
xor
xchg
mov
pop
data16
mov
and
lea
cmpsl
retw
and
push
push
pop
cmc
je
cmp
or
push
and
pop
dec
mov
js
divb
jg
sahf
dec
test
jp
das
jge
xchg
loop
sbb
in
cmp
fstpt
pop
iret
lahf
sbb
lods
xchg
add
add
mov
es
in
enter
idiv
dec
sahf
test
sub
cmp
adc
popf
popf
repnz
out
das
adc
insb
xor
or
enter
fisttpll
pusha
bnd
fildl
dec
mov
sahf
xchg
pop
loope
adc
scas
loope
jb
xor
stos
fnstenv
test
data16
xor
inc
dec
mov
shlb
pop
icebp
and
xor
inc
jne
cs
cld
das
mov
or
scas
lods
inc
adc
call
jg
push
or
into
pop
add
jno
in
pop
push
addr16
xor
add
jns
or
cld
and
or
inc
inc
xchg
xchg
xor
or
xchg
rclb
xchg
movb
cmc
add
or
mov
stc
sbb
xor
test
mov
orl
mov
outsb
or
lcall
pop
leave
jp
movsb
fisttpl
push
jg,pt
or
pop
dec
xchg
ss
mov
ret
push
lahf
fldcw
insb
jo
mov
enter
mov
stc
cmp
mov
inc
jbe
or
out
mov
shll
mov
out
aad
cwtl
aaa
xchg
pop
mov
lahf
sbb
es
inc
inc
mov
daa
cmpsl
stc
jl
inc
inc
into
dec
mov
sbb
push
scas
mov
nop
cld
cmp
cwtl
jo
in
mov
pushf
sbb
in
mov
les
test
lods
adc
dec
mull
aad
pop
sbb
cmp
arpl
fs
mov
add
xchg
pushf
pop
mov
fildll
jge
rolb
imul
cltd
inc
lahf
fdivs
daa
and
xor
and
xor
fcoml
mov
xchg
int
mov
arpl
pop
into
adc
clc
cmpsl
lea
cmp
outsl
stos
xchg
mov
jle
and
fsubr
iret
and
orb
or
add
pop
lcall
jp
cmp
shrl
push
jmp
jp
mov
mov
mov
popa
push
pushf
imul
aam
pop
test
js
push
bound
negl
xchg
test
sbb
pop
mov
adc
mov
inc
push
cmp
or
mov
mov
mov
mov
or
cld
adc
stc
adc
ljmp
dec
mov
stc
sub
mov
movsl
pop
filds
pushf
xor
mov
sar
mov
add
xchg
xlat
imul
jns
sbb
push
cld
cmp
arpl
inc
mov
dec
sar
adc
insl
and
mov
adc
je
data16
fs
xchg
lea
mov
cmp
gs
mov
cmpsl
js
stos
inc
lret
sbb
mov
test
sub
int3
dec
jecxz
jns
xlat
or
loopne
test
xchg
add
cmc
or
imul
mov
sbb
subb
xor
inc
push
sbb
mov
add
out
sti
push
mov
std
sbbb
sahf
test
testb
add
add
mov
lret
xlat
xlat
sub
scas
out
jle
cmp
push
mov
pop
push
in
pushf
inc
xchg
jae
in
fs
adc
xor
rorb
out
inc
sahf
xor
pop
rolb
mov
test
icebp
mov
xor
pop
std
stos
enter
inc
push
cmp
imul
add
xchg
shlb
or
fbld
scas
push
cs
jnp
or
pop
jmp
push
sub
xor
mov
mov
test
cmp
popa
mov
xor
cmp
jnp
in
dec
outsl
insb
sbb
pop
jp
push
call
mov
push
xor
loope
inc
loop
and
inc
xchg
lcall
pop
inc
aad
fcmovu
inc
jb
pop
outsb
les
movswl
loope
loopne
jns
dec
int
mov
jmp
popf
lret
or
sub
cmp
lret
pop
pusha
jns
aam
xchg
icebp
mov
insl
testl
popf
or
into
imul
sahf
xor
lcall
movsl
hlt
sub
mul
mov
pop
jns
push
mov
aad
jo
nop
orl
sbb
imul
mov
and
dec
cmp
push
mov
js
xchg
cli
push
lcall
mov
xchg
push
pop
cltd
or
and
inc
lea
inc
xchg
pop
mov
stos
movsl
xchg
lds
fsubrs
jg
pop
adcb
cmpl
cmp
inc
stc
jne
and
xchg
shll
cwtl
aaa
jno
sub
aam
ret
daa
aad
push
mov
fdivrl
add
testl
aaa
fsubl
xor
lods
adc
push
sub
sahf
mov
mov
shlb
lret
push
push
and
sub
mov
je
inc
sbb
scas
xorb
xchg
add
out
loop
sbb
aam
insl
pop
jle
and
xchg
outsl
add
stos
sub
mov
sub
lods
lds
lds
mov
xor
xchg
jne
pop
test
xchg
mov
out
lahf
pop
fs
fsub
cmp
adcb
pop
or
jb
push
xlat
jle
lahf
gs
sahf
mov
fwait
cmp
cld
es
cmpsb
pushw
inc
aaa
cmpsb
inc
jno
mov
data16
sbb
jp
popa
mov
clc
add
jmp
fisubrs
push
xchg
xchg
sub
xchg
scas
or
negl
inc
sahf
addl
mov
in
dec
push
lahf
pop
das
loope
push
mov
push
adc
jmp
clc
push
mov
fcom
in
out
xor
movsb
sbb
divl
mov
cld
pop
orb
iret
mov
int3
mov
sbb
push
push
mov
adc
dec
movsl
test
ret
or
push
bnd
mov
imul
and
cld
mov
mov
sbb
es
inc
mov
hlt
xchg
lods
ret
push
mov
std
cli
cmp
add
cs
cmpsb
movsb
outsl
orb
ja
aad
jb
mov
shll
enter
mov
gs
fucomip
dec
pop
enter
lcall
adc
jg
scas
sbb
sub
adc
push
mov
mov
out
imul
adc
popa
xchg
test
je
int
pop
iret
sti
lret
shlb
out
xor
mov
popf
adc
iret
push
jge
mov
adcl
fsubrs
pop
cld
lods
fidivrl
pop
inc
adc
rclb
xchg
inc
lods
in
xabort
adc
mov
push
es
push
mov
mov
movsl
insb
je
jno
mov
mov
fldcw
fwait
xor
jge
cmc
or
mov
mov
sbb
idivb
mov
mov
divb
outsb
mov
fwait
inc
adc
jp
mov
test
mov
cwtl
xchg
dec
jbe
sub
mov
out
xchg
js
adc
ss
adc
out
xchg
je
push
stc
inc
scas
sti
shll
lods
push
mov
or
outsb
xchg
push
es
call
sti
cltd
repnz
xor
push
incl
aaa
and
jns
xchg
lods
jp
data16
out
sbb
xchg
outsb
add
insb
adc
mov
leave
jle
repnz
addr16
orl
lock
repnz
ret
xchg
mov
jo
dec
sub
pop
sbb
xor
aad
sbb
xlat
xchg
push
xor
fdivrl
mov
rcr
mov
mov
ja
movsl
inc
stc
lea
repz
ret
rol
cmp
jg
push
adc
test
aam
int3
lods
cwtl
xor
jge
or
pusha
mov
fldt
test
xor
sub
scas
jmp
mov
mov
jbe
mov
mov
adc
idivb
std
lods
aam
mov
sub
popa
jmp
in
or
call
jmp
inc
or
hlt
inc
dec
or
inc
fcomi
sub
fnstcw
aas
pop
add
inc
push
pop
dec
jg
lea
addr16
lds
aas
sub
push
rcrb
or
test
jno
fisubs
xor
in
js
add
es
jns
add
jmp
pop
cmp
fdivl
sbb
push
cmpb
xabort
and
cmp
ljmp
scas
out
je
ljmp
addr16
add
sub
leave
mov
push
xchg
xchg
ja
data16
int
sub
outsb
add
sub
fcomip
in
push
xor
inc
or
jmp
sub
test
adcb
push
lahf
xchg
jg
scas
and
fwait
inc
outsl
mov
ret
cmp
into
cmpsb
cwtl
xchg
push
fadd
std
ss
adc
cltd
jno
or
inc
jb
sbb
subb
and
dec
loop
test
mov
enter
fidivs
adc
push
xchg
outsl
push
std
push
and
push
gs
jne
sti
jb
or
sub
dec
mov
sti
push
lock
fnstenv
jmp
incb
add
popa
and
fildl
jae
xor
xchg
add
mov
in
insl
push
push
lahf
cltd
popf
dec
inc
fstl
sub
arpl
sub
repz
fs
sbb
mov
shlb
test
int
outsb
lahf
sub
xchg
dec
faddp
stos
test
aas
mov
adc
push
cmp
mov
cld
into
popa
or
or
movsb
and
mov
adc
pusha
adc
fimull
loopne
leave
negb
pop
aaa
dec
repz
push
mov
jmp
mov
and
jne
xor
stos
cmp
add
int3
dec
dec
faddp
push
xchg
xor
or
aaa
in
xchg
or
jbe
jae
sub
sti
icebp
fisttpl
daa
push
push
fs
jmp
dec
arpl
testl
aas
xchg
testl
or
mov
fnstenv
mov
int
push
xchg
movsb
inc
xchg
lcall
sub
int3
bound
mov
in
stc
pop
mov
mov
push
cs
imul
adc
and
mov
jmp
xchg
xchg
imul
sub
cmpsl
sbb
repnz
add
mov
cltd
cmc
sbb
js
adc
jns
jae
mov
pop
aaa
push
mov
push
pop
xor
pop
jne
adc
ret
cmp
push
arpl
dec
push
loopne
cmp
or
sub
push
cltd
jge
rorl
rcl
pop
adc
setg
pushf
sahf
sar
incb
adc
int3
ret
faddl
push
lcall
into
mov
jbe
and
pop
pop
mov
mov
inc
sbb
addb
mov
sbb
jbe
cmp
fwait
cli
fs
fldt
cmp
add
rcrl
dec
jl
sub
popa
and
loop
dec
push
dec
cmp
jae
subl
leave
pop
jmp
loop
jl
enter
jns
loope
mov
sbb
sahf
rcr
ja
mov
jns
icebp
push
movsl
sbb
add
cs
arpl
xor
jmp
mov
xlat
imul
pushf
cmpsb
lds
and
leave
xor
jno
in
leave
jecxz
adc
jl
fmuls
icebp
ljmp
jmp
push
je
cwtl
push
push
sbb
jbe
mov
add
test
in
rorb
scas
mov
outsb
inc
bound
pop
cmpsl
mov
and
insb
mov
ss
sub
inc
xchg
rcl
outsl
fs
cmc
mov
data16
insb
into
int3
aam
mov
loope
pusha
sbb
and
and
jae
std
in
dec
mov
push
nop
into
cs
stos
movsl
ret
stos
testl
mov
or
adc
sbb
rol
and
lret
shlb
mov
mov
or
add
pop
mov
jmp
and
inc
scas
push
xchg
data16
bound
scas
inc
push
xor
and
mov
sbb
jp
add
push
mov
insl
xor
push
inc
mov
sbb
pop
sbb
comiss
add
dec
in
sahf
ret
and
push
in
and
loop
int
lods
jns
mov
push
cltd
jmp
lahf
jno
xchg
and
cmp
mov
fwait
das
xor
and
xor
push
cs
push
mov
push
insl
or
cmp
push
fchs
inc
stos
xor
pop
jg
inc
outsl
xchg
jle
ficompl
cmp
ret
xchg
or
imul
icebp
add
and
adc
cmpsl
outsb
mov
jns
in
in
mov
mov
test
mov
fdivr
lcall
or
lock
mov
pop
mov
mov
pop
and
imul
insl
repz
xor
lahf
mov
mov
mov
mov
adcl
xchg
popf
out
out
jle
mov
sbb
hlt
aam
into
lods
lods
cmp
outsl
test
aaa
pop
out
shll
lock
mov
jg
orb
fidivrs
std
jge
ret
popa
test
mov
jl
fwait
inc
das
mov
push
int3
mov
push
push
push
jge
push
xor
loop
fiaddl
push
jle
sub
pop
mov
das
mov
sbb
test
cwtl
aaa
sub
sbb
pop
adc
jge
xchg
adcb
cmp
jl
insb
adc
cmp
cmp
push
insl
adc
pop
adc
mov
ds
mov
mov
sahf
out
mov
ds
inc
aam
repz
dec
test
sti
repnz
xchg
stos
xchg
sbb
movsb
stos
push
cltd
les
fldl
imul
leave
add
and
loop
cli
or
or
sub
cs
orl
xchg
jmp
xlat
mov
mov
push
mov
jg
mov
push
sub
sub
or
xor
out
mov
cmp
dec
mov
lret
sti
add
fadds
std
pusha
scas
nop
lods
sub
mov
lods
stos
pop
sar
sti
mov
lret
les
mov
fiadds
test
push
cmpl
adc
and
loop
adc
int3
or
mov
ljmp
jecxz
mov
js
popf
mov
push
imul
hlt
cmp
xchg
jb
jnp
and
repnz
loope
je
jb
sub
cmp
fisubrs
xchg
rorl
sub
sbb
jbe
test
mov
pop
inc
jae
push
xchg
js
notl
testl
mov
testl
push
test
adc
outsl
rep
mov
add
jb
lock
into
sbb
push
mov
jl
popf
mov
pushf
cltd
jle
pushf
xchg
repz
push
rclb
or
sahf
rcr
fsubr
daa
cmp
dec
or
movsb
and
popa
pop
dec
in
jbe
sub
mov
dec
daa
dec
outsl
mov
mov
stos
pushf
or
jo
push
outsb
fpatan
xor
mov
pop
scas
adc
iret
mov
stos
ret
xor
dec
in
cld
adc
fisttpll
xchg
xchg
or
lods
ret
sahf
ja
jmp
push
lret
mov
es
add
mov
jge
push
or
add
adc
push
adc
inc
icebp
add
daa
sahf
cli
and
bswap
cmp
mov
les
hlt
adc
inc
sub
sbb
mov
pop
push
pop
stos
aaa
fisubrl
push
popf
repz
dec
or
outsb
pop
jno
pop
adc
add
ljmp
cmc
mov
fs
inc
es
xchg
rclb
in
push
sbb
pop
mov
or
jecxz
cld
mov
fs
mov
out
hlt
andb
sbb
ret
movsl
inc
ss
adc
mov
push
add
push
ss
pop
mov
imul
iret
les
inc
lcall
data16
and
ds
mov
and
daa
push
cmp
enter
movsl
cltd
push
sbb
push
pop
push
adc
mov
das
mov
test
inc
push
ret
xor
sti
cltd
jae
lods
xor
adc
popf
xchg
cmp
imul
sub
ret
rorb
je
sbb
std
in
fldenv
push
sub
stos
call
xchg
xor
adc
mov
inc
mov
and
lret
sub
lods
push
and
cmp
pop
popf
adc
frstor
pop
jle
sub
imull
cld
nop
adc
hlt
stos
xchg
mov
in
jecxz
loop
mov
mov
mov
mov
inc
adcl
jo
mov
pop
daa
mov
scas
add
and
pop
inc
mov
stos
sub
fldt
mov
xchg
or
aaa
xchg
in
pop
inc
hlt
daa
mov
cmc
and
jecxz
into
pop
jo
dec
and
mov
sub
push
dec
adc
cmc
in
sti
mov
les
repz
dec
jbe
mov
add
out
lods
ret
mov
sub
dec
mov
mov
lds
push
imul
push
fdivrs
out
leave
push
cmpsl
ja
mov
outsb
fcompl
mov
lock
bnd
xchg
ret
jnp
test
mov
xchg
fs
scas
movsl
out
push
or
iret
aam
test
sahf
lods
pop
cmp
nop
aam
inc
lahf
repnz
ret
adc
mov
arpl
push
std
or
mov
and
out
or
jae
add
jp
mov
pop
bswap
cmpsl
cltd
jmp
aaa
ror
mov
movl
jg
jg
fldt
pop
mov
jns
cmp
mov
fcomps
pushf
push
inc
add
es
dec
jne
mov
outsl
jl
bound
fidivrs
pop
lock
push
mulb
testl
pusha
and
pushf
cmp
sbb
mov
mov
jle
and
addr16
dec
push
jne
or
sub
dec
dec
ror
repnz
sti
xor
cmpsb
mov
jnp
cmpl
in
mov
adc
cwtl
test
imul
lret
sarb
jmp
push
cmp
add
cwtl
js
adc
call
pop
pop
pop
sbb
dec
fst
jne
nop
xor
xchg
repnz
in
and
xchg
sub
leave
jae
pop
addb
and
in
adc
xor
fwait
mov
mov
call
std
sti
addl
jno
es
test
out
test
mov
dec
inc
xor
jbe
int3
push
addb
repz
or
scas
daa
popa
mov
inc
push
mulb
dec
lods
lea
or
xlat
xchg
cmp
sub
jns
pop
xchg
mov
pushf
pop
lds
push
jmp
mov
push
mov
jp
ljmp
mov
fsubp
push
mov
add
jmp
inc
inc
cld
movsb
movsl
jp
adc
jnp
and
out
in
sub
push
arpl
lock
int3
pop
negl
lods
out
inc
sbb
adc
lahf
xchg
add
ficomps
ds
adc
lods
add
push
into
pop
test
orl
add
jmp
inc
dec
and
add
jae
fs
or
sub
pop
adc
xor
and
pushl
pop
jnp
std
std
jne
popa
jb
dec
lret
aad
loop
lock
mov
aad
or
rorb
xor
adc
aaa
mov
push
adc
push
mov
xchg
rcl
jecxz
mov
sahf
pop
ljmp
call
je
jo
ja
mov
shrb
imul
pop
ja
mov
jp
sub
xor
imul
push
jecxz
ror
icebp
insb
pop
lods
sbb
rorb
xor
lds
insb
or
jo
cmpsb
int3
jbe
jp
sub
cmpsb
add
call
push
inc
ficoml
cwtl
and
hlt
ja
inc
mov
insl
pop
sub
adc
out
xor
or
xor
pop
cmpb
lds
fimull
es
push
and
xor
inc
or
sbb
stc
out
stc
fidivs
loopne
int
hlt
fdivrl
int3
pop
mov
pop
jb
gs
scas
jge
es
xchg
mov
sti
dec
and
inc
dec
add
xchg
mov
mov
pop
cmp
arpl
fiaddl
cwtl
push
push
subb
cmp
jecxz
lret
int3
pop
jle
or
lds
cmp
inc
xor
movsl
add
jp
jp
mov
stos
push
icebp
sub
xor
dec
imul
pop
pop
xchg
cmpsb
test
sub
popa
inc
add
in
sti
pusha
insb
testb
sub
subl
add
pop
lret
insl
adc
outsl
gs
rcrb
arpl
sub
ljmp
fs
fs
mov
jnp
xlat
mov
and
movsl
sub
mov
daa
dec
aas
into
xchg
aam
ja
and
jae
xchg
movsl
loopne
mov
and
xlat
dec
xchg
dec
pushf
fimuls
into
ret
mov
mov
lahf
idivl
rolb
sbb
notb
mov
xor
test
adc
ja
xor
sub
mov
cmpsb
loopne
sub
sub
aas
push
mov
cwtl
cmp
loope
leave
sub
cmp
sbb
add
mov
fcoms
aaa
mov
sub
sub
aad
lcall
adc
and
iret
ret
jl
ljmp
incb
cmp
add
es
icebp
lods
popf
addr16
imul
in
push
ljmp
sbb
jle
lods
xchg
mov
fsubrs
je
test
pop
cltd
scas
jmp
push
xchg
push
jae
mov
mov
and
add
imul
scas
rcrb
addr16
fldenv
fldt
jl
push
jl
sbb
repnz
repnz
and
pop
orb
sbb
inc
jbe
mov
inc
add
or
cmp
jo
mov
pop
call
jle
mov
mov
xchg
adc
andl
test
aad
xchg
and
mov
in
pop
or
mov
das
pop
ljmp
xchg
mov
sti
sub
lods
lahf
add
cli
inc
in
sub
xor
je
mov
imul
push
repnz
lahf
push
cmp
push
stc
enter
push
shl
aad
outsl
insb
lods
mov
mov
out
cmp
arpl
sbb
mov
cmpsl
inc
int
pop
shrl
jo
dec
and
aas
or
cmp
lods
cs
daa
xchg
data16
out
or
mov
stc
pusha
sbbl
sub
pop
fisubs
fisttps
sbbl
pushf
cmpsb
mov
mov
aam
pop
fisubl
hlt
hlt
loopne
jp
fld
test
or
arpl
mov
xor
push
mov
out
pop
jnp
popfw
jp
stos
outsb
call
cs
rcr
sbb
popf
loope
mov
ljmp
push
gs
fwait
daa
sub
ret
in
rorb
repz
arpl
aad
fstpt
enter
ss
jecxz,pt
aam
mov
add
and
mov
movsl
insb
adc
arpl
push
jmp
jnp
xchg
xor
mov
pop
pop
movsb
int3
mov
jbe
xchg
test
ja
aaa
jg
lock
dec
jno
stos
push
mov
lahf
cmpsl
xor
test
cs
ret
jne
mov
xchg
ljmp
cwtl
mov
mov
in
mov
lds
cmc
dec
leave
rolb
ds
push
and
test
pop
jae
mov
in
repnz
loope
push
es
jbe
incb
sbb
add
push
jo
xchg
incl
push
ret
imul
rcll
movsb
jno
dec
dec
mov
jg
jne
std
jno
pop
and
lcall
mov
pop
dec
dec
rolb
xor
cmp
lret
mov
lret
inc
cwtl
pop
xor
inc
push
adc
push
andb
mov
adc
scas
lcall
jne
pop
dec
repz
leave
xor
mov
and
leave
stos
divl
cmpsl
push
aas
ljmp
pop
popf
cmp
aaa
addr16
out
das
mov
dec
xor
popf
je
pop
arpl
xchg
popf
push
mov
mov
mov
cmpsb
and
imul
mov
inc
sbb
push
test
cli
fs
jp
repz
loopne
add
loopne
add
testl
lock
inc
cmpl
cltd
lods
push
pop
push
addr16
jbe
pop
mov
out
hlt
push
fwait
cmc
imul
out
scas
mov
fstl
scas
pop
adc
dec
mov
fistpll
or
sbb
sahf
scas
nop
lcall
xor
dec
or
cmp
inc
sub
and
cli
adc
sub
aam
shrb
stos
adc
call
xchg
cltd
out
xlat
in
das
add
addr16
mov
test
xor
movsl
push
xor
sub
or
out
dec
add
shlb
jecxz
popf
adc
gs
iret
adc
and
push
cmp
in
mov
sub
iret
pop
arpl
cmp
xchg
sub
rcrb
lea
cmpsb
std
mov
imul
xchg
pop
inc
daa
jl
pop
pop
push
lcall
and
hlt
iret
jo
jle
xchg
ljmp
fs
movsl
std
andb
pushf
jge
jecxz
pop
ret
pop
pop
or
outsl
jns
mov
fsts
aam
xchg
xor
jg
jmp
jbe
inc
sbb
pop
stc
sbb
push
das
comiss
jns
popa
mov
sub
push
cmpb
adc
cs
das
mov
inc
add
mov
ret
scas
and
imul
lcall
dec
xorb
jg
shrl
jp
pop
sub
popf
adc
out
xor
or
stos
sti
js
js
xchg
fmul
int3
mov
and
fdivrl
cltd
or
in
mov
fmuls
aaa
cmp
cmp
and
dec
adc
xor
inc
roll
es
push
inc
pop
mov
dec
mov
pop
out
jmp
int
jbe
pop
add
push
inc
ds
sbb
fwait
pushf
push
mov
mov
mov
into
jne
fisubl
lds
sbb
xchg
adc
fiadds
xlat
mov
lcall
sbb
xchg
push
rcll
lret
mov
roll
or
pushf
jp
cmp
xlat
mov
mov
scas
lret
or
cmp
fsubrl
mov
cmp
pop
mov
pop
movsb
jg
mov
stos
jb
lea
inc
cltd
adc
xor
loope
imul
add
sub
jae
js
fnsave
iret
addr16
pop
out
or
fcmovu
in
push
dec
mov
sbb
lock
les
fnclex
mov
or
jnp
jnp
or
adc
sbb
int
and
dec
or
stos
mov
sub
arpl
add
movsl
in
cmpsl
mov
std
sahf
pop
dec
mov
push
push
testl
loope
int
pop
xchg
fwait
push
mov
pushf
in
sbb
mov
sbbl
ds
push
jecxz
cwtl
fcom
fists
pop
mov
addr16
das
inc
arpl
notl
add
jo
pop
jecxz
decb
lcall
fwait
lcall
call
cld
loop
lock
fcoml
daa
xchg
sarb
xchg
cltd
sbb
insb
loopne
xchg
stos
add
inc
pop
jmp
rolb
stos
mov
inc
cmc
in
dec
int3
sbb
push
mov
or
mov
push
mov
sbb
repnz
jecxz
in
shr
cmp
movsb
in
nop
fstps
test
stos
sbb
lds
mov
movsb
mov
ja
fstl
not
ds
test
je
fcoms
out
ret
mov
push
sbb
xchg
or
aaa
or
sahf
mov
lds
sahf
sub
dec
add
pop
inc
or
je
sub
jne
enter
dec
incl
fs
dec
pop
mov
adc
imul
lods
sub
out
sub
leave
xor
inc
sarb
test
dec
xchg
lret
lret
int
mov
cmp
pop
add
add
mov
adc
adc
push
push
sub
sar
push
adc
inc
push
push
sti
jg
dec
lods
adc
imul
xchg
stos
pop
shll
mov
test
sub
dec
mov
sub
push
xor
adc
xchg
inc
aam
movsl
dec
iret
cmp
inc
inc
sub
scas
adc
sarl
lahf
loopne
pop
pop
out
insl
call
lea
jp
je
lret
inc
add
or
mov
inc
ret
cmp
or
pusha
cmp
and
jo
hlt
dec
sbb
jno
mov
cmpsb
xchg
pop
sbb
mov
int3
jge
cli
sti
add
pop
inc
lret
dec
mov
sbb
and
in
ja
cltd
out
test
out
mov
dec
jp
mov
test
fwait
movsl
adc
aad
shlb
or
pop
shlb
xchg
push
mov
scas
cmp
jmp
testb
fistpll
dec
stc
ret
imul
loopne
push
cmp
inc
add
push
into
xchg
pop
push
insl
jbe
testb
mov
sub
dec
std
in
aad
in
scas
loop
pusha
pusha
pop
sahf
cmp
push
fdivrp
push
shlb
xchg
sarl
xchg
std
sbb
pop
jbe
inc
push
mov
sbb
aad
dec
adc
and
push
xchg
dec
mov
data16
nop
inc
push
inc
repz
dec
mov
sub
and
dec
jmp
and
outsb
js
mov
icebp
ja
int3
cwtl
ret
fcmovnu
push
sbb
cld
ret
dec
or
xchg
jne
push
xor
repnz
and
mov
cmp
lods
jb
in
jae
add
dec
pop
fcmovnu
out
add
out
in
and
test
pop
push
int
ficompl
popa
sbb
insb
lods
pop
dec
bound
jae
pop
mov
cmp
mov
mov
xor
sarl
or
fstpl
inc
pusha
popf
xchg
sub
cld
test
jl
or
sti
xor
stos
in
pop
outsb
pop
sbb
xor
fwait
cld
or
xchg
test
or
push
pusha
sub
pop
and
dec
outsl
lret
dec
cli
or
fsubrl
ja
pop
pop
jp
lcall
shl
xor
xor
adc
lods
mov
push
sbb
push
mov
xor
xchg
frstor
cmp
xor
insb
push
lock
pop
push
ljmp
sahf
shll
xchg
mov
data16
jmp
mov
out
cmp
add
mov
push
push
sbb
xor
mov
hlt
mov
cltd
dec
lcall
pop
popa
adc
ss
cmp
pop
cmp
inc
adc
mov
mov
jle
cli
push
and
add
mov
in
xchg
jmp
cmp
stc
inc
pop
mov
mov
push
aad
cli
mov
aad
xchg
sbb
in
mov
jns
es
push
popa
int3
push
fcmove
stos
mov
mov
push
das
into
fcomi
dec
ficomps
dec
divl
cmp
mov
fsubs
inc
pusha
and
dec
iret
and
inc
loop
pop
and
idivl
mov
cmp
outsb
idiv
push
movsb
and
out
lea
int
jmp
pushl
add
daa
test
fstps
xchg
fisttpl
mov
mov
std
cmp
and
adc
aas
nop
mov
popa
sbb
fstpt
fisubl
movsl
out
ret
mov
xchg
call
xchg
jg
mov
sbb
mov
addr16
and
cmp
sub
cmpsb
mov
cmp
pusha
rclb
gs
in
stos
mov
jno
and
mov
scas
and
sub
faddp
movsl
jmp
jb
mov
std
dec
mov
popa
xchg
jnp
push
jae
pop
xchg
out
pop
aam
cli
lock
das
dec
inc
ss
loop
jbe
xor
aaa
lds
cmp
add
jbe
lock
mov
fldenv
pushl
sahf
js
in
shll
inc
dec
sub
xorb
inc
dec
ss
mov
lcall
xchg
fadds
sbb
jp
sahf
inc
xor
xorb
enter
mov
hlt
dec
push
xlat
out
pusha
popl
inc
sarl
jg
test
adc
clc
lahf
stc
inc
mov
or
aas
cmpps
imul
push
divl
xor
loop
test
xor
mov
pop
and
cmpsb
adc
push
shll
cs
sarb
mov
mov
shll
dec
lcall
mov
mov
rclb
fucomp
hlt
xlat
rorl
aaa
push
int3
pop
or
out
sub
lahf
outsl
inc
mov
imul
add
add
xchg
mov
rol
sarl
hlt
cmp
movsb
sbbl
or
or
cmp
mov
cmp
sub
lcall
in
push
and
fstl
fsubp
mov
test
frstor
neg
jno
jge
cmpsb
pop
daa
shll
ret
mov
sbb
shr
out
out
cmp
lea
mov
cmp
nop
imul
and
adcl
inc
fs
js
fidivrs
prefetchw
xor
test
ds
and
jmp
inc
or
xchg
mov
stos
push
inc
fisttpll
scas
mov
push
insb
push
movsl
pop
nop
ljmp
movsl
cmpsl
xlat
sub
dec
xlat
shll
and
das
daa
sbb
mov
mov
push
pop
ja
pop
cwtl
rcrl
xchg
sarl
sub
shl
aam
dec
ret
xor
aas
insb
jmp
int3
sbbb
in
test
roll
jmp
mov
xchg
std
pop
jno
lahf
or
orb
das
xor
icebp
or
inc
dec
aad
adc
cmpl
lahf
jno
jo
or
cmp
out
mov
data16
pop
out
idivl
xor
subb
jmp
xchg
jle
adc
int3
cmc
mov
lods
push
test
je
mov
inc
aad
in
sbb
push
inc
out
dec
dec
movb
mov
add
pop
mov
xor
xor
jns
cmpsl
mov
sbb
sahf
dec
jno
pop
js
xor
or
cmp
push
adc
dec
cmp
jno
sbb
inc
shrl
fdivp
sub
mov
jg
xchg
out
mov
mov
inc
mov
jo
fstps
add
cmp
bound
jns
mov
and
aad
out
xor
ret
mov
jmp
jg
nop
mov
mov
movsl
ja
mov
adc
xchg
xlat
lods
dec
enter
pop
pop
call
mov
push
xchg
mov
stos
xchg
or
fs
dec
dec
js
pop
aas
fstpt
leave
scas
jae
test
sarb
push
and
shlb
call
enter
aas
jne
adc
fwait
mov
add
dec
loop
jb
pop
je
sbb
jmp
sbb
add
inc
mov
push
xlat
rcr
insl
test
cltd
sub
mov
mov
sarl
dec
mov
not
xchg
dec
mov
addb
dec
mov
jmp
pop
shll
repz
push
push
jle
adc
clc
mov
inc
jl
sbb
std
cmpsb
mov
pop
jl
inc
xchg
pop
lret
dec
test
or
inc
mov
sbbb
add
cs
les
jmp
es
clc
jbe
mulb
or
cmpsb
sub
mov
adc
push
daa
xor
rolb
inc
or
fnsave
movsb
inc
mov
push
lahf
subb
in
ja
sub
cli
sbb
inc
das
movsl
test
cmc
xor
adc
dec
adcl
pop
test
std
jmp
sbb
int
mov
add
mov
lods
int3
test
cmc
bound
sbbl
aad
inc
pop
pop
jl
jp
pop
sti
out
cmpsl
test
test
fnstenv
int3
aas
or
jecxz
inc
movl
ljmp
or
mov
inc
cmp
dec
jbe
je
insl
jp
repnz
lret
stos
sti
mov
or
push
ds
lahf
arpl
push
mov
mov
orl
jge
jb
xchg
jo
iret
ja
or
rcll
in
scas
pop
ret
jl
mov
call
or
lahf
xchg
inc
es
addl
popa
and
or
fdivl
or
cmp
in
leave
push
sbb
in
inc
testb
mov
fidivs
mov
and
push
out
pop
inc
xor
xor
hlt
dec
mov
decl
mov
jmp
in
pop
mov
out
int3
mov
mov
sub
aad
cmp
loop
sbbl
xlat
add
sub
lods
push
add
mov
mov
mov
movsb
out
jp
mov
out
mov
xor
add
or
outsb
xor
push
add
inc
mov
cmp
leave
bound
lahf
loop
nop
xor
push
iret
outsl
dec
adc
mov
fwait
imull
xchg
dec
cmpsb
sub
or
add
cmp
mov
or
xor
dec
jne
pop
xor
ds
insl
loope
xchg
pop
cwtl
pop
jl
pusha
inc
fstl
ja
sbb
sub
pop
addr16
xchg
sbb
ljmp
pop
sub
and
push
cmpsl
jp
fs
xchg
cmp
sbb
fcoms
loop
inc
add
in
pop
sub
insl
mov
hlt
test
mov
mov
xchg
push
in
add
adc
mov
sbb
mov
sahf
icebp
and
pop
push
or
pop
into
push
loope
jp
fdivrs
dec
xor
cld
inc
popa
cmp
popa
lock
sub
pop
repnz
push
je
and
sbb
mov
bound
leave
adc
cmp
add
out
repnz
xchg
sbb
outsb
mov
jbe
pop
mov
mov
cmpsl
xor
dec
xor
push
dec
push
imul
pop
sub
pop
sbb
iret
lods
aas
mov
jb
lahf
jmp
movsb
sbb
adc
or
mov
arpl
stos
inc
mov
test
push
mov
push
int
pop
in
mov
fcompl
cmp
test
mov
mov
les
out
lret
push
outsl
popf
fmulp
push
mov
push
ja
or
stos
nop
insl
add
cld
rclb
push
fwait
push
jle
icebp
dec
nop
jne
inc
dec
or
dec
stos
mov
cmp
in
out
data16
aas
adc
lahf
stc
scas
jo
in
mov
clc
notl
mov
push
jbe
mov
inc
mov
mov
fildl
jo
jmp
jb
dec
jb
sub
mov
jae
jbe
cmp
subb
xchg
les
mov
xchg
xchg
cmpsb
es
imul
das
jmp
js
push
ljmp
add
cmpsb
jle
jne
push
enter
fistpll
or
jge
inc
xor
mov
stc
popl
orb
inc
sub
xor
mov
aam
adc
jne
push
test
jno
xor
push
pop
push
loopne
push
cwtl
add
inc
addl
sub
lds
clc
sbb
pop
cmpsb
inc
fcmovne
push
loop
aas
push
cmp
pop
loop
sub
and
mov
sbb
sahf
xor
push
sub
icebp
jbe
out
push
das
subl
mov
std
repnz
mov
pop
jp
cli
mov
cmp
jecxz
sbb
ja
jnp
mov
xchg
push
pop
cld
xor
pushf
outsl
fidivl
mov
push
lods
not
jb
push
imul
insl
cmpsb
dec
push
mov
sub
imulb
jp
push
dec
fcomip
pop
fwait
xchg
xor
jle
das
push
adc
ljmp
int
stos
movsb
or
inc
pop
push
ljmp
add
xor
test
fistps
fsubp
imul
imul
cmpsb
stos
and
xchg
pop
ds
addb
das
or
push
push
lock
and
jmp
iret
or
inc
push
push
cmp
adc
jmp
sbb
rcrb
xchg
je
mov
add
lret
xchg
cmp
into
pusha
cld
adc
dec
das
sub
insl
scas
mov
inc
push
lahf
frstor
sbb
movsb
mov
pop
inc
inc
loopne
not
rcll
int3
pop
pop
scas
mov
push
cwtl
xor
out
sbb
cmpsb
adc
cmp
push
cmp
pushf
cltd
inc
scas
scas
xchg
jge
ja
lods
or
aas
or
dec
mov
dec
out
dec
pop
ds
das
mov
roll
lods
out
fsubp
dec
sbb
mov
sbb
dec
push
jno
push
sbb
push
dec
out
xchg
pop
int
inc
rcrl
fs
fsubr
lahf
add
cmp
and
cmp
jae
je
mov
add
in
in
test
inc
sub
out
cmp
lods
ds
in
lods
or
mov
pushf
sbb
inc
xchg
or
jns
popf
sti
les
andl
gs
pop
pop
push
les
aas
arpl
cmpb
or
das
xor
mov
inc
fbstp
push
fdivrp
out
bnd
or
nop
jl
push
fcom
adc
cmp
stos
out
jmp
mov
icebp
mov
lahf
fdivrl
inc
ljmp
repnz
add
mov
jbe
and
and
mov
cltd
sbb
add
jo
es
outsl
aad
mov
mov
divl
inc
xchg
adc
inc
jmp
inc
sbb
inc
or
es
ret
inc
sub
xlat
lods
add
repnz
les
das
xor
fidivl
lds
adc
loop
cmp
inc
jns
lret
pop
mov
jb
loope
push
cmp
xor
sbbb
pusha
lock
test
mov
cli
xchg
xchg
int3
and
cmpsl
jbe
movsb
mov
cmp
push
mov
and
pop
orl
add
jae
and
mov
cmp
int3
mov
ret
shlb
push
fistpl
pop
adc
std
movsl
fcompl
in
movsl
and
push
das
and
push
lret
jb
mov
jnp
lret
cmpsl
pushf
push
mov
add
pushf
xchg
pop
mov
in
xchg
pop
push
sub
xor
aas
inc
fmulp
cli
stos
call
add
push
cmp
jb
cmc
xor
stc
ds
pop
jmp
mov
mul
repnz
mov
inc
jg
jno
sbb
enter
out
cmp
sbb
lret
sti
shr
icebp
adc
add
loop
cmc
icebp
pop
cmp
stos
ja
fistps
push
add
stc
add
push
push
cmp
fadd
or
sbb
mov
lods
iret
pushf
xchg
pop
ficomps
adc
xchg
or
mov
and
pusha
rclb
and
xor
and
lock
xchg
stos
xlat
imul
or
ja
ret
inc
ficompl
jo
push
pushf
sub
cmpsb
iret
sbb
jns
mov
nop
imull
and
push
mov
xor
notb
insb
std
pop
push
or
add
mov
ret
pop
jge
xor
and
aas
cmp
and
ds
negl
jle
ret
push
dec
shlb
jg
lods
jg
aas
fmull
or
ret
sbb
mov
iret
cs
rorb
cmp
sbb
xor
cld
or
out
mov
cltd
vpaddw
loope
adc
movb
loopne
leave
sarl
gs
repnz
mov
sbb
pop
lcall
cvttps2pi
sbb
xor
cmpb
ret
adc
icebp
out
das
fisttpl
mov
inc
jnp
cmp
xchg
push
loop
sbb
add
cs
adc
jno
cld
test
test
adc
je
daa
mov
scas
clc
mov
fstl
dec
push
out
in
pop
dec
aaa
cltd
dec
xor
or
insb
sti
push
test
add
imulb
cmpsb
pop
mov
xor
daa
adc
bound
mov
inc
scas
sti
add
cmp
ljmp
cltd
pusha
mov
sub
inc
divb
pop
adc
loope
pop
fbstp
jge
popa
mov
push
sti
mov
js
std
cmpsb
hlt
aam
clc
sbb
int3
dec
lret
xor
leave
jl
icebp
sub
inc
dec
xchg
pop
stos
or
lock
add
lcall
mov
jb
push
ds
cmp
pusha
cs
fiaddl
xor
jns
lcall
fbstp
fisttps
data16
stos
or
push
pop
sbb
repnz
enter
or
dec
lods
and
ljmp
mov
fmuls
fwait
cmp
mov
sarl
fwait
stos
rol
pop
nop
mov
lods
push
clc
sub
dec
mov
mov
ret
xlat
jg
cld
in
xor
add
jbe
stos
xchg
movsb
in
lcall
hlt
loopne
pop
out
shr
jl
aas
mov
add
adc
xor
aaa
jmp
clc
shrb
dec
jnp
push
push
mov
test
loop
mov
and
in
les
jecxz
sub
add
and
jp
push
loope
xchg
jb
mov
cwtl
sbb
pop
out
jge
cltd
adc
fcompl
push
fs
add
add
mov
iret
jl
inc
and
jmp
aad
cmp
in
jb
insb
or
inc
cmp
mov
xchg
movsb
and
clc
int3
xchg
mov
rorb
cmpsl
gs
or
gs
mov
jmp
or
cmp
xor
cli
or
cwtl
push
jbe
movaps
add
sbb
jmp
insl
sbb
movsl
push
push
in
testb
out
push
xchg
inc
adc
add
in
mov
mov
fimuls
pop
fs
mov
jns
jl
loope
xor
cmc
pop
insb
xchg
or
pusha
imul
sub
sbb
incb
into
jp
xor
mov
in
mov
xchg
aaa
sub
add
sub
cld
test
add
sbb
pop
ret
loop
aam
xchg
mov
or
dec
fldl
sahf
jno
in
repz
rolb
rclb
jecxz
sbb
xchg
sahf
adc
xorl
dec
cmp
pmulhuw
repz
add
sub
xchg
ljmp
sti
sub
sbb
push
jnp
out
pop
lahf
adc
test
pop
es
dec
pop
out
outsb
arpl
mov
xor
pop
int
test
push
fcoml
je
popf
dec
xor
out
in
ret
jp
xchg
fstpl
pop
shll
addl
dec
mov
popa
out
leave
inc
adc
popf
lds
negl
and
es
iret
outsl
mov
repnz
faddl
out
dec
lret
mov
xor
push
pop
cltd
imul
adc
jmp
add
mov
lea
jns
add
push
sti
or
jmp
mov
or
lds
cmpsl
shll
fidivs
lahf
add
sub
nop
lea
jnp
int
adc
ret
add
mov
insb
aad
outsb
sub
inc
js
jb
int
push
push
ret
xchg
enter
fdivrl
fnstenv
mov
push
aam
daa
add
jno
xchg
out
dec
lds
or
sbb
mov
push
cmp
dec
or
fstpt
cmc
push
sub
rclb
cmp
mov
xchg
push
ret
xchg
popf
fmull
dec
insl
push
out
test
adc
jp
mov
mov
jmp
mov
push
aad
xchg
xchg
jp
cld
and
gs
jae
je
dec
pop
pop
adc
xor
test
lock
inc
enter
mov
cs
fldl
jp
dec
and
sub
test
xor
imul
aaa
push
mov
sub
or
imul
lock
outsl
bound
mov
or
xor
ja
push
fxtract
jbe
lcall
dec
mov
cmp
mov
and
xchg
mov
pop
jo
cmpsl
mov
in
loop
sti
push
mov
je
loopne
and
icebp
jb
lahf
cmc
imul
cwtl
dec
pop
xor
out
jmp
cmp
fidivrs
call
pop
aaa
or
aad
mov
test
nop
jnp
in
cmpsl
rolb
lret
icebp
gs
cmp
imul
shlb
and
pop
pop
jne
pop
pop
xchg
cmc
adc
add
pushf
into
mov
adc
or
hlt
or
and
test
push
in
inc
mov
mov
push
sbb
pop
push
js
aaa
fistpll
inc
xchg
imul
cmp
cmp
es
daa
aad
in
pushf
stos
jmp
lret
add
xor
imul
call
pop
pop
lahf
iret
jo
rcrl
out
pusha
xor
fnstenv
loop
loope
rolb
inc
xlat
fcoml
add
inc
call
rorb
jo
jecxz
inc
xor
mov
ret
xor
inc
pop
ficoms
adc
push
aad
leave
mov
add
addl
shll
pop
push
xor
pop
ja
cwtl
aas
mov
xchg
jo
pop
and
dec
sbbl
daa
inc
xor
sbb
xchg
pop
xchg
mov
or
push
daa
pop
fwait
push
pop
jae
es
push
arpl
jnp
mov
nop
fs
cmp
or
lret
xor
jb
ret
lahf
call
mov
jnp
cs
imul
mov
cld
and
lret
push
adc
cmp
add
jmp
cmp
push
lds
insl
pop
adc
in
addb
int
in
lock
mov
imul
mov
mov
aas
aaa
sub
push
mov
outsb
sub
aas
sahf
lock
cmpsl
add
jne
jo
in
leave
jle
idivl
mov
xchg
jns
aam
sub
out
repnz
xchg
fs
shll
call
lea
sbb
rclb
fisubrs
and
in
lcall
out
fidivrl
dec
xor
leave
int
xchg
cmp
xor
lds
xor
xchg
and
xlat
push
fldcw
jl
pop
and
fdivl
xor
sti
hlt
adc
and
sti
ret
in
mov
es
fcmovbe
in
les
jp
sub
cmp
and
pop
scas
lods
mov
testl
ss
or
jmp
jle
and
outsl
xchg
cmpsb
fisubrl
adc
mov
cltd
bound
outsl
or
inc
jmp
dec
push
xor
mov
rorl
jno
nop
cmp
out
cmp
push
mov
bound
jbe
mov
mov
and
sbb
mov
subb
in
push
jnp
das
imul
adc
sti
xchg
stos
jno
xchg
lea
xor
syscall
add
hlt
gs
push
mov
loop
ljmp
in
inc
test
jg
inc
cmp
fcmovbe
test
cmp
ret
and
inc
out
mov
in
inc
mov
into
sub
nop
and
lcall
shrb
jo
cld
jnp
sarb
not
xor
or
int
xchg
pop
pushf
mov
sub
xchg
push
sbb
fmuls
jb
cmp
fdivrs
push
mov
mov
and
test
fisubl
test
push
gs
dec
out
adc
daa
sbb
cmp
push
lea
cltd
push
insl
mov
sbb
aas
fwait
in
xor
pop
and
lea
nop
rclb
or
or
dec
adc
sbb
mov
cwtl
cmc
imul
jnp
mov
bnd
mov
rep
jmp
dec
lret
test
mov
and
sahf
pop
test
xorb
scas
clc
dec
cmp
jge
jle
test
sti
add
out
inc
or
inc
jg
pop
ds
inc
icebp
adc
inc
es
xor
cmpsl
cld
pop
loope
lock
dec
push
inc
in
mov
xchg
sbb
ss
lods
jbe
mov
fisubl
pop
leave
mov
push
pop
jge
hlt
sbb
out
add
popf
cmp
inc
sbb
gs
cwtl
inc
sub
dec
xor
xchg
push
or
xchg
ja
mov
enter
mov
mov
fmuls
js
mov
lret
int3
mov
and
outsl
filds
jb
jl
rolb
fstps
add
int
add
xchg
jmp
inc
fisubrl
inc
int3
shrb
xchg
push
clc
ror
int
mov
adc
and
les
mov
or
hlt
jge
jge
repnz
in
lcall
and
test
mov
inc
test
and
sub
mov
pusha
cwtl
mov
mov
loopne
jmp
fcomps
xchg
push
jb
lret
cmp
pop
pop
and
and
push
notl
jge
imul
clc
enter
andb
outsb
xchg
pop
jle
lods
fs
inc
xor
nop
mov
dec
mov
push
cwtl
or
push
daa
lds
in
jp
imul
push
test
jl
imul
push
inc
jl
popa
out
sti
xor
hlt
mov
dec
cmp
dec
pushf
add
push
pop
test
dec
add
sub
jge
dec
loopne
add
jmp
sbb
mov
add
mov
lock
and
pushw
inc
and
lods
lahf
imul
pushf
jne
rorb
jp
and
scas
xchg
cmp
repz
adc
out
jp
shll
sub
test
mov
inc
mov
xor
imul
cli
cmp
lea
adc
mov
cmp
add
sbb
sub
loopne
add
hlt
popa
popa
ffreep
fcompl
into
xchg
dec
hlt
jecxz
shlb
pop
xchg
mov
mov
lret
cmp
stc
repnz
cmp
in
jne
push
or
cmpsb
sub
leave
xchg
aam
repnz
das
int3
jecxz
dec
mov
popl
orb
repnz
ret
roll
jae
jo
add
mov
nop
jle
mov
loopne
inc
jg
in
xchg
mov
pop
xchg
cmp
dec
mov
in
sub
mov
fcoms
cmp
push
in
cld
enter
test
iret
gs
jo
dec
dec
enter
jo
testb
push
repnz
mov
stos
clc
repz
xchg
jns
cmp
or
shlb
ljmp
inc
pop
mov
pop
lcall
mov
xor
xor
mov
out
jnp
push
inc
push
adc
movsl
test
and
push
loop
inc
mov
fnsave
js
add
sub
add
xchg
jmp
call
sti
or
push
cmp
sbb
ret
and
ja
int
jmp
mov
je
dec
sub
shlb
push
inc
fwait
sub
jmp
or
fildll
or
cmp
ret
addr16
or
mov
or
or
fistpll
xor
push
mov
aas
addr16
add
in
cmpsb
adc
cmp
das
xlat
or
mov
pop
mov
repz
or
aad
bound
jns
cmpl
xchg
mov
xlat
test
cmpb
rcll
loop
jl
sbb
dec
cmpb
fidivrs
cmp
subb
mov
pop
cmp
add
je
repnz
imull
jb
xor
cmc
cmp
add
adc
jb
jg
sub
stc
pusha
fldenv
test
xchg
cmp
cmp
mov
and
push
adc
dec
fcmove
cs
jns
int
push
test
nop
enter
xor
sub
mov
mov
jp
lcall
sub
and
sahf
inc
test
xor
jp
pop
xchg
jp
push
mov
hlt
cltd
jp
and
mov
ja
jno
pop
shr
imul
mov
cmp
xchg
sub
mov
jne
add
es
lea
sbb
mov
jg
or
xorb
lret
ljmp
js
jge
xor
ret
sarb
fisttpll
test
mov
rorl
push
sbb
inc
loop
ret
movsl
pop
mov
pop
push
neg
pop
dec
in
orl
push
push
ja
pop
stc
and
mov
mov
xlat
es
and
into
call
cmp
insb
imull
lods
stc
pushf
pop
cmp
adc
and
jmp
scas
pop
fs
out
in
xor
inc
xchg
add
dec
inc
xchg
jle
lds
roll
xchg
mov
nop
sbb
out
ljmp
bound
adc
mov
jb
dec
mov
divl
loop
dec
std
inc
jle
pop
shr
fcoml
xor
xlat
push
jmp
insb
mov
inc
jae
ret
add
in
aaa
push
cmp
popa
sbb
or
push
rcll
icebp
imul
jl
scas
pop
or
fcmovbe
movsb
mov
shll
rorb
subl
test
sub
jno
dec
add
outsb
je
pop
fdivr
out
mov
stos
sbb
daa
test
sbb
xchg
cmpl
rcrb
rolb
in
push
mov
std
mov
sub
inc
dec
aam
push
fildl
or
cmp
push
mov
cmp
shrl
mov
inc
outsb
out
lcallw
je
mov
mov
xor
loop
add
push
repz
adc
mov
sbb
push
mov
xor
aaa
mov
sbb
hlt
dec
imul
sub
inc
cmp
js
cmp
add
and
push
out
xchg
iret
push
lock
xchg
mov
jne
pop
mov
in
xlat
jg
movsl
push
into
dec
mov
arpl
fsubr
pop
addr16
jbe
imul
gs
sti
out
jmp
add
loope
jecxz
xchg
call
jb
add
or
addl
out
add
adc
decb
fsubrl
xchg
dec
int
xchg
in
sti
sub
cmpsl
fsubrp
jmp
cli
mov
dec
fists
and
fwait
adc
mov
nop
jnp
push
mov
decl
iret
aas
cltd
inc
mov
insb
scas
adc
push
pop
sbb
mov
cmp
stc
aad
sub
imul
outsl
loopne
shrb
inc
push
es
sub
movsl
or
arpl
aad
in
sarb
ja
stc
push
and
jge
fildl
xor
lret
pop
xchg
out
push
enter
cltd
rcl
xor
idivb
dec
jle
xchg
adc
in
data16
ss
ds
rclb
xchg
lods
add
push
cmp
dec
imull
stos
aas
adc
sbb
push
or
jmp
add
das
movsl
jmp
ret
stos
clc
add
rorb
shll
inc
jle
push
jmp
fs
je
into
push
or
pop
imul
inc
pop
mov
push
pop
sbb
or
shr
mov
push
lock
dec
inc
lock
stc
test
cld
push
adc
cmp
fdivl
inc
push
cmp
or
cld
mov
pop
enter
or
push
mov
xchg
sbb
orl
xchg
mov
xchg
mov
daa
or
arpl
sbb
call
push
sub
ret
mov
sbb
or
lea
xor
and
out
mov
cld
push
iret
mov
dec
dec
pusha
jp
fidivs
dec
push
push
scas
mov
aad
adc
jg
sbb
mov
ret
mov
pop
xchg
sbb
xor
adc
or
ss
mov
popf
aad
cmpsl
clc
stos
fdivrs
lock
daa
fwait
ret
je
or
xchg
out
stos
sbb
mov
shlb
insl
lcall
pop
notl
push
jae
push
add
xchg
push
push
lock
shrl
mov
add
lea
jle
or
int3
jnp
pop
lretw
push
fnstsw
inc
mov
ss
cmp
cmp
inc
jmp
rorl
sbb
test
leave
cmpsl
xchg
xchg
dec
push
shll
jo
jg
out
adc
push
loopne
lods
or
sbb
in
movsl
xchg
mov
add
mov
add
mov
movsb
xor
pop
icebp
jg
js
mov
test
popf
mov
pop
imul
lahf
pop
outsb
sub
xchg
je
or
pop
std
jmp
dec
sub
push
sahf
std
aam
aaa
lods
loope
mov
mov
loopne
pop
cmpsb
inc
leave
call
je
xor
in
in
jno
shll
hlt
stos
fistpl
test
push
jl
test
mov
sub
pop
or
push
cld
fs
rolb
cli
shrl
pop
sub
pop
lahf
inc
insl
xchg
jne
call
or
stos
stos
cmp
xchg
addb
cmp
in
pop
inc
and
pop
push
adcl
das
fwait
dec
or
shlb
sbb
jg
in
mov
mov
gs
les
mov
xor
push
sbb
jo
fs
cmp
fistl
lods
aaa
cmp
or
adc
jecxz
mov
or
or
cwtl
xchg
insl
xchg
pop
sub
mov
sbb
mov
mov
jl
jb
and
xor
mov
das
out
jle
pop
add
add
cmp
push
test
add
xchg
push
int
jnp
mov
sbb
popf
add
add
pop
out
stc
jecxz
scas
mov
pop
stos
inc
xor
cmpsb
stos
sub
and
mov
movb
call
lahf
lods
or
test
test
nop
push
pop
sahf
adc
jo
jb
push
fsts
into
cmp
fidivl
xchg
fsub
imul
nop
xchg
test
push
cmp
repnz
sbb
or
loop
and
popf
push
dec
dec
sub
push
in
mov
cmp
mov
cwtl
inc
mov
adc
call
add
push
iret
sar
scas
lahf
inc
out
xchg
sbb
push
cmp
test
test
and
add
aad
pushw
daa
mov
scas
sbb
in
inc
stos
sbb
dec
imull
cmp
out
mov
popf
loope
or
xor
pop
xchg
cmp
pushf
ficompl
cmpsl
jne
cmpb
fmull
nop
mov
addr16
or
fmuls
xor
lahf
cs
bound
int3
or
test
dec
dec
fwait
lret
push
je
mov
sbb
int3
rorl
mov
dec
testb
cmp
jle
lcall
adc
popa
mov
in
xchg
lds
out
scas
lret
mov
add
mov
in
mov
mov
dec
outsl
into
testl
dec
test
or
out
dec
mov
iret
push
imul
dec
imul
push
clc
stos
dec
stc
cli
dec
push
pop
scas
xchg
insb
add
mov
popf
cwtl
mov
call
cmc
jnp
andl
orl
iret
shlb
imul
xchg
push
add
int
mov
or
jo
rorl
mov
pop
jmp
jno
sti
add
rcrb
jo
pop
movsb
and
adc
movsb
mov
ret
xchg
rorl
jl
pop
les
in
sbb
decb
fcmovnb
iret
adc
std
adc
cmp
ja
sahf
jae
and
sub
insl
add
xchg
sbb
push
int3
clc
xchg
push
jl
nop
sub
dec
out
lds
in
sbb
push
cld
xchg
jno
lret
xor
aad
adc
lahf
adc
ja
scas
es
push
adc
jae
cmp
insl
jbe
bound
in
lret
cmc
in
inc
add
ljmp
adc
and
jo
sbb
xchg
sbb
testl
pop
testb
mov
xor
or
pop
or
jb
cmp
mov
dec
dec
das
cld
shlb
out
xchg
push
out
pop
jl
xchg
into
cmc
push
fistpl
adc
and
jno
dec
xor
sbb
outsb
ja
mov
sbb
cmpsl
loop
xchg
sarb
pop
mov
pop
xorb
or
adcb
pushl
jge
addr16
inc
cmpsl
ss
add
sahf
jb
cmpl
and
xchg
loopne
outsl
ljmp
arpl
notl
int
ja
cmp
sub
mov
scas
push
pusha
inc
sub
insb
cmpb
outsl
cli
aad
aad
push
jae
js
pop
addl
das
mov
repz
xor
push
movsl
pop
jnp
jg
sbb
mov
mov
cmp
add
fsubrl
je
ds
xchg
arpl
aad
mov
imul
add
out
add
jmp
jle
mov
fisubrl
push
jg
jae
sti
rcrl
in
add
insb
clc
mov
push
xlat
xchg
cmc
lods
shl
loop
in
pop
adc
das
pop
xchg
inc
cltd
sbb
into
dec
mov
cmc
test
popa
mov
outsl
iret
sbb
mov
nop
ret
adc
scas
add
adc
push
out
and
and
adc
mov
xchg
into
push
ljmp
popl
jp
in
add
jmp
xchg
scas
stos
xchg
popf
xor
mov
inc
jne
inc
sbb
jne
add
pop
jg
add
mov
int3
test
cmp
push
and
aaa
in
jl
enter
mov
adc
std
xchg
sbb
aas
push
adc
mov
lea
xor
dec
jmp
cmpl
test
fcmovb
pop
popf
sahf
pop
movsl
mov
xor
das
dec
mov
xchg
add
scas
daa
popa
cmc
movsl
mulb
lahf
cs
inc
mov
aaa
sbb
adc
stc
shrl
data16
jnp
out
jnp
lcall
jmp
inc
xchg
sub
push
pop
jmp
mov
xchg
dec
sbb
xor
out
adc
xchg
and
mov
cmp
jns
or
stos
lock
xlat
pop
add
movsl
sbb
push
mov
cmp
ficoml
arpl
shrl
jnp
or
ljmp
add
dec
mov
je
inc
mov
enter
jge
rorl
mov
push
xchg
enter
lock
cld
jae
insb
pop
shrb
into
pushf
lea
test
inc
xor
repz
icebp
mov
or
pop
rorl
push
out
xor
ljmp
inc
jmp
jmp
cmp
test
inc
outsl
movsl
sub
lea
inc
scas
xchg
and
inc
jne
je
xchg
cld
dec
aaa
icebp
mov
lahf
iret
push
inc
push
xchg
sar
wbinvd
fcmovbe
jg
in
sbb
push
in
sub
movsb
orb
fisttpl
xchg
mov
jnp
push
xlat
mov
js
xchg
or
inc
into
arpl
lods
fwait
mov
dec
mov
xchg
adcb
jns
push
rcrl
or
sbbb
mov
mov
adc
jnp
test
and
test
fildll
sub
inc
data16
dec
xlat
loopne
sub
inc
cmc
fidivl
xor
or
call
enter
rcpps
cmp
jmp
jo
ret
mov
pop
and
movsl
xchg
sbb
add
fdivp
stc
adc
lss
scas
pop
cmp
jmp
mov
cmp
add
jmp
fildll
adc
xchg
ss
roll
xchg
scas
aam
xchg
negl
outsb
sub
sub
imul
and
dec
inc
mov
push
testl
ret
outsb
stos
sub
aam
ret
push
xchg
push
xchg
cmpsl
mov
icebp
js
popa
push
xchg
aaa
inc
push
or
mov
xor
loopne,pn
inc
roll
xchg
lret
lock
push
mov
mulb
pop
adc
fsubrs
iret
and
dec
mov
or
popf
jne
scas
inc
fwait
dec
adc
pop
imul
cmp
xchg
rorl
fdivs
push
sub
imul
jl
sbbb
sti
outsl
mov
out
call
enter
jne
sbb
mov
mov
pusha
ljmp
dec
mov
fisttps
popf
or
rclb
stos
fisttps
mov
inc
out
push
stc
fcomip
imul
adc
stos
lock
lea
stos
mov
push
shrl
push
popf
sti
adcb
popa
sbb
mov
les
sbb
and
jge
loopne
addr16
xchg
repz
jbe
mov
hlt
adc
rclb
gs
add
jle
ret
dec
movsb
js
jl
dec
pushl
and
sbb
in
push
insl
fisttpll
fbld
xchg
dec
sub
lods
mov
ja
cltd
imul
mov
scas
and
push
pop
cmp
jge
js
push
cmp
outsl
jecxz
lret
xchg
in
sbb
xor
in
andl
pop
pop
aas
fidivrs
call
inc
cmp
xchg
mov
xchg
adc
inc
dec
xor
int3
cld
inc
dec
inc
int3
clc
sub
mov
rcl
in
sub
in
cmp
pop
cmp
sbb
xlat
xor
mov
in
sbb
sti
int3
clc
test
mov
mov
in
out
cld
and
dec
addl
ds
sbb
inc
pusha
ja
outsl
scas
sub
mov
or
sub
push
addr16
xchg
stos
add
lret
mov
mov
add
gs
shll
aad
jge
push
jl
cmpsl
insb
sbb
xor
sbb
sbb
les
cmp
xor
pop
stc
ss
mov
enter
mov
push
jbe
repz
enter
mov
loopne
and
cli
out
push
aas
sub
aad
out
fstpt
lods
push
stos
dec
scas
inc
dec
jge
mov
lahf
rcrb
pop
adc
inc
pop
mov
lods
insb
jl
js
cmp
mov
fcoml
pop
dec
or
loopne
popf
mov
in
frstor
dec
mov
jno
or
ljmp
int3
xor
sbb
repnz
out
enter
mov
xor
mov
add
mov
cwtl
jecxz
inc
dec
scas
sub
shll
nop
push
pusha
test
stos
inc
push
sbb
sbb
and
out
fcoml
in
mov
shlb
loop
cmp
popa
lret
cli
cwtl
mov
aad
mov
pop
inc
ret
jl
adc
sub
sub
add
leave
filds
call
js
fwait
dec
shll
mov
inc
dec
cmpsl
sub
sbb
inc
les
xchg
ja
std
sbb
out
sti
sbb
push
fcoml
lods
cwtd
cmp
inc
shlb
xor
stos
daa
or
cmpb
push
or
push
mov
aam
repz
loop
ret
or
dec
mov
iret
mov
fisubs
das
or
cmc
xor
ret
dec
outsb
ror
insl
xor
mov
mov
jge
sbb
xchg
nop
cltd
xchg
repz
imul
loopne
pop
ficomps
loop
add
das
cld
xchg
xor
push
fidivrl
inc
je
addl
pop
add
jp
fsubl
xchg
or
jecxz
hlt
mov
pop
xchg
ficompl
mov
in
fisubl
push
lods
cmp
mov
cmp
sub
pusha
xor
inc
into
pop
push
push
sahf
mov
scas
pushl
ret
lds
lret
ds
aaa
xchg
pop
mov
sub
leave
xor
mov
ds
push
jmp
or
or
dec
cli
and
lea
dec
psrld
icebp
out
data16
ja
enter
es
ds
daa
iret
insl
rolb
mov
cs
mov
xor
xchg
ret
or
fcomi
ja
cli
shrl
popf
pop
mov
or
stos
dec
dec
xchg
sbb
or
dec
sub
sti
inc
movsl
stos
push
int3
xchg
jns
cmpsb
mov
mov
shlb
fwait
xchg
inc
icebp
and
dec
in
mov
push
and
insb
cltd
cmpsb
pushf
mov
cmpsb
xchg
mov
psubsb
ja
jne
sbb
mov
push
mov
lock
mov
mov
pop
pusha
mov
jns
xchg
add
fs
xor
xchg
or
mov
test
in
fildll
movsb
sub
mov
ss
popa
fstps
aam
out
jg
ss
pop
push
dec
xchg
jmp
sarl
mov
xor
sub
dec
sbb
pop
nop
mov
push
xchg
repnz
int3
xchg
mov
cmp
sub
mov
iret
push
sub
xorl
ficoml
shlb
dec
adc
xlat
mov
dec
xchg
or
cmpsl
or
sbb
push
or
cmpsl
xchg
jne
jp
mov
sar
movsb
xchg
push
mov
cmp
add
pop
outsl
mov
cld
jb
mov
js
jl
testl
hlt
int3
or
sbb
xchg
ret
inc
shrb
dec
mov
clc
mov
sub
movsb
fcomps
sbb
je
mov
mov
hlt
dec
jo
fsubp
insb
mov
out
cmp
adc
out
mov
pop
mov
cmp
jle
inc
lret
insl
ljmp
das
xor
xor
into
shlb
aaa
mov
mov
adc
cmc
push
mov
or
mov
lea
sub
mov
std
jmp
out
pushf
sbb
out
mov
adc
and
jne
scas
js
repz
add
mov
mov
shll
or
test
cwtl
repz
fwait
mov
sahf
mov
add
xor
sbb
cmpsl
test
lock
sub
pusha
push
mov
cltd
roll
xchg
xchg
push
dec
jb
push
fsubr
or
sub
and
jno
imul
mov
pop
mov
or
cli
rorb
mov
xchg
add
loop
int
loopne
lea
or
ljmp
inc
adcb
push
inc
inc
dec
testb
insl
iret
int3
aad
mov
cmp
sub
mov
lcall
jo
push
es
sub
pop
cmc
sbb
stc
mov
xchg
out
adc
adc
aaa
cmp
dec
xor
and
lods
xor
xchg
mov
add
aad
add
hlt
scas
inc
test
out
aad
lret
add
inc
test
clc
push
imulb
xchg
ja
insl
out
fs
mov
jne
mov
sbb
push
xchg
nop
aas
insl
pop
ficoms
rclb
and
dec
dec
andl
mov
adc
scas
mov
jns
test
xor
xchg
test
cmpsb
push
xchg
add
enter
cmc
fs
jo,pn
push
iret
lods
pusha
cltd
aas
lret
mov
cmp
popa
nop
pop
push
loope
popa
iret
out
pop
jecxz
cmp
out
mov
adc
in
mov
sahf
xchg
push
shrb
outsl
cld
adc
loopew
jl
xchg
jge
add
ljmp
je
adc
cmpsl
sbb
pop
sbb
dec
mov
pop
adc
pop
je
mov
test
jge
inc
or
movsb
leave
cmp
je
xor
push
sub
fs
adc
lcall
add
fmuls
ljmp
flds
xchg
adc
addb
jp
fbld
mov
lret
add
adc
mov
outsl
je
jae
stc
cmp
sbbb
fists
aaa
or
xchg
roll
fnstenv
andb
ret
adc
je
fucomi
mov
aad
shlb
dec
mov
dec
pushf
sub
cmp
in
mov
dec
mov
loopne
pop
bound
jecxz
cli
aam
mov
lret
adc
imul
stc
daa
test
jbe
xchg
bswap
lret
mov
in
adc
scas
pop
xchg
in
scas
sbb
into
mov
pushf
fdivrs
fistl
cmp
push
and
movsb
pop
stc
mov
pcmpeqw
shl
fiadds
or
dec
push
sbbl
mov
jecxz
and
test
pop
jg
xchg
jecxz
outsb
push
pop
inc
stc
sbb
xchg
inc
fidivl
inc
xchg
jno
fwait
inc
mov
cli
insb
push
pop
fcmovbe
fadds
data16
mov
mov
and
jecxz
sarl
add
mov
pusha
mov
adc
jb
pop
and
jge
stos
adc
and
mov
test
dec
roll
sub
fiaddl
rclb
lods
ljmp
arpl
icebp
adc
pop
sbb
or
push
jg
loop
inc
cmp
jne,pt
mov
popa
iret
lret
aaa
je
scas
pop
or
call
dec
ret
push
fwait
imul
and
sbb
lret
adc
and
adc
shlb
lods
add
jp
xor
xchg
add
add
add
arpl
inc
xchg
mov
subb
mov
mov
mov
xor
mov
scas
pushl
imul
push
shrl
pushf
inc
arpl
iret
and
jae
mov
jle
inc
adc
or
sbb
add
fisubl
call
push
std
dec
push
dec
and
test
cmp
out
ret
mov
adc
sbb
in
addl
data16
cmp
imul
je
imul
mov
sbb
out
call
pusha
pop
leave
xchg
push
icebp
pushf
dec
test
xlat
inc
andl
rclb
loop
adc
iret
and
fistps
mov
pop
adc
les
aam
mov
add
push
dec
aad
out
shll
add
repz
popa
gs
dec
push
js
ja
rcrl
push
jbe
dec
int3
xor
sub
mov
cmp
sbb
aas
and
aas
movsl
loope
scas
jmp
adc
les
call
stos
or
outsb
clc
mov
push
lds
xor
ljmp
dec
lahf
jle
cmp
repnz
sub
gs
mov
shll
fwait
mov
push
xchg
orl
pop
xchg
and
mov
out
mov
jmp
leave
rolb
cmp
pop
loop
xlat
pop
and
aaa
push
add
add
data16
xchg
add
mov
ljmp
jle
rol
ror
in
movsb
add
in
mov
jae
into
cmp
and
sub
inc
jns
pop
sbbb
repz
mov
push
push
sub
ljmp
xchg
push
lret
scas
sbb
mov
insl
inc
mov
dec
stos
sbb
adc
sub
inc
addl
imull
nop
rcll
mov
mov
popf
popa
lock
jmp
xlat
fwait
jb
push
dec
lock
ljmp
pop
inc
add
stos
bound
adcb
cmp
fisubs
into
std
sub
mov
or
add
jne
and
pushf
pop
into
xchg
arpl
and
jnp
jle
int3
insl
or
mov
jge
inc
mov
cltd
leave
fs
lret
in
stos
add
sub
iret
jno
dec
mov
mov
and
in
mov
lahf
stos
inc
add
lds
sub
xchg
aaa
aam
xor
ficompl
pop
xchg
fisubs
ljmpw
jnp
addl
roll
in
xchg
pop
cmp
pop
ret
shlb
dec
hlt
add
mov
dec
or
outsb
inc
push
adc
jbe
arpl
push
imul
xchg
hlt
push
cmpl
dec
cmpsb
movsl
je
test
pop
outsl
mov
sub
pushl
mov
scas
cmp
mov
cmpsb
loopne
fmuls
add
daa
sub
jbe
pop
cmc
pop
notb
jge
test
and
pop
fadds
lret
push
cmp
push
or
fmuls
icebp
add
clc
cld
mov
fwait
adc
inc
push
outsl
outsb
pop
sahf
cwtl
adc
push
notl
add
in
xor
sub
sarb
jnp
leave
add
adc
inc
cmc
iret
hlt
mov
push
and
dec
xor
insb
aaa
ret
pop
fstp
or
jbe
pop
adc
loopne
lret
sub
mov
lods
push
jns
jae
mov
or
ds
push
clc
test
xor
sbbb
cmc
jb
pop
out
jno
or
in
mov
cmpb
cli
pop
lock
or
insl
push
inc
jp
add
mov
mov
outsb
pop
or
mov
cmp
lret
xchg
in
cs
push
in
cmc
popf
xor
movsb
neg
add
lods
or
and
out
push
cmp
fcmovbe
dec
insl
push
popa
xchg
fsubrl
sub
lret
xor
or
and
push
fsts
movsb
mov
add
mov
das
push
jmp
pop
add
sti
dec
jp
test
leave
jo,pn
pusha
rclb
push
lret
stos
cmp
fistpl
shlb
fsubrs
call
mov
test
scas
adc
jns
and
xor
jg
jae
xor
push
dec
sbb
negl
sbb
cli
adc
push
movb
movsl
and
jae
pop
dec
add
fs
in
movsl
push
out
rorb
xchg
xorl
mov
push
icebp
fldl
iret
pusha
or
popa
aas
mov
out
and
xchg
sbb
lea
out
andb
cmp
jg
out
or
fmull
into
jl
sub
jecxz
inc
fbstp
fmuls
adcl
int
cli
mov
aad
inc
push
mov
and
fcomp
das
and
enter
xchg
inc
int
cmp
fwait
aam
mov
outsl
sub
fisttps
push
daa
sub
mov
scas
add
jno
cmpsl
adc
cmp
or
ret
call
int
fadds
and
mov
rol
mov
or
data16
ljmp
push
mov
out
push
dec
dec
fcoml
push
mov
adc
lea
dec
cmc
or
dec
push
or
js
movsb
imul
pop
xor
ss
mov
pop
and
and
cmp
or
out
loop
dec
sub
mov
push
inc
and
add
mov
inc
mov
cmp
lret
or
sbb
push
leave
inc
cmp
nop
or
or
cld
lcall
inc
out
sbb
jmp
xor
jo
jb
inc
sub
faddl
dec
push
sub
jne
aaa
mov
push
mov
ffreep
scas
aas
cmp
rcr
ja
movsl
iret
xchg
jle
adc
js
rclb
sbb
jmp
sbb
mov
jle
int3
jno
into
inc
punpckhbw
sahf
cli
js
xchg
pushf
xor
testb
les
outsb
rorl
mov
std
xchg
jmp
mov
mov
aad
push
xor
xchg
mov
test
mov
sbb
mov
xchg
fsubrp
shlb
sub
popf
mov
lds
shll
xchg
call
dec
stos
xchg
mov
fisubrs
xchg
sbb
adc
dec
arpl
cltd
iret
cmp
stos
dec
dec
into
and
mov
dec
push
fwait
leave
cmp
stos
xor
lcall
in
or
cld
cli
pop
lea
mov
mov
jl
xchg
pop
iret
sbb
daa
mov
dec
push
cld
lea
jmp
ja
mov
insb
lds
cmp
fstps
cld
movsl
mov
out
xchg
xor
jmp
fnstenv
xor
push
ret
push
jecxz
push
cltd
hlt
popa
std
cmpb
jp
clc
icebp
dec
mov
mov
cmp
xor
push
cltd
loope
mov
add
jle
insb
ljmp
mov
pop
push
into
push
stc
mov
push
aam
sbb
cmp
and
xor
or
shl
dec
cltd
add
sub
adc
cmpsl
add
rcrb
push
pop
outsl
jmp
inc
inc
mov
push
stos
loop
sbbb
mov
dec
in
jg
jmp
jg
xor
jmp
popf
adc
nop
mov
add
jecxz
dec
and
imul
sbbb
and
sbb
outsl
fwait
test
mov
dec
xchg
pop
inc
mov
inc
pop
repz
dec
hlt
fldl
fnstcw
nop
sahf
mov
test
dec
sbb
sti
jle
inc
add
pop
cwtl
push
fwait
sub
test
adc
jg
xlat
and
sbbl
lret
fadds
xchg
in
or
push
loope
in
clc
and
xchg
sti
into
cli
dec
out
mov
xor
mov
mov
lahf
les
and
mov
sbb
xlat
add
xchg
test
fistl
push
xchg
inc
test
gs
cli
mov
leave
jne
and
pusha
and
out
mov
ja
dec
xchg
pushf
in
sbb
pop
stc
fdivs
or
mov
inc
and
cmp
popa
lret
into
popa
ds
add
shlb
xchg
cmc
jno
push
into
add
fs
cmp
mov
addb
jecxz
frstor
lods
rcrl
mov
cmpsl
add
scas
pushf
mov
dec
pop
and
jl
and
dec
jmp
push
roll
cmp
imul
and
pop
cwtl
sti
xlat
hlt
scas
int3
jl
addr16
js
push
add
dec
pop
in
aam
lcall
daa
ljmp
icebp
push
adc
pop
ja
sub
push
ds
add
or
icebp
test
fcompl
mov
mov
adc
jl
test
roll
cwtl
insb
pop
cmp
das
mov
xor
dec
and
mov
out
movsl
mov
adc
jne
sub
mov
jo
sbb
bound
add
mov
andb
jg
xchg
lcall
xor
cmpsb
xor
cmp
push
cmp
ja
xor
jb
call
mov
les
jns
push
imul
xchg
pop
stos
enter
sbb
out
shrl
movsl
das
xor
test
mov
mov
dec
jge
sti
dec
xor
mov
mov
dec
mov
and
cmp
inc
popa
sub
sub
cltd
adc
jbe
dec
xor
test
out
lds
imul
xor
movsl
sbb
add
ret
popw
cmc
push
xlat
pop
std
daa
fstps
push
and
dec
ret
in
xlat
push
mov
jnp
adc
adc
pop
xchg
outsl
addl
outsl
mov
fcoml
lea
negl
cmpsb
jae
bound
fstpl
lret
rorb
adc
pop
xchg
xlat
pushf
imul
dec
movsl
imul
gs
and
adc
xchg
mov
xchg
std
rol
xchg
into
pop
xchg
xor
movsl
std
loop
dec
mov
enter
jae
or
xlat
lcall
mov
loopne
jno
fxch
dec
fcoms
lea
add
push
std
pop
rcrl
xchg
jmp
divl
mov
out
sub
scas
jnp
aam
clc
or
inc
xchg
mov
xchg
arpl
les
clc
sahf
jl
cld
fs
cmp
mov
mov
mov
lret
add
enter
pushf
lea
mov
lcall
sbb
push
movsb
ds
in
pusha
adc
nop
out
inc
or
movl
mov
add
mov
loop
dec
jp
pop
dec
je
fnstenv
pop
pop
test
mov
jl
sub
stos
mov
sbb
and
in
bound
test
mov
push
mov
jl
fisubs
cmpsb
and
aam
pusha
aad
repz
push
cld
xor
cs
in
cmp
push
shl
jmp
decb
jg
pop
push
movsb
addr16
xor
xor
xlat
cs
fdivl
sbb
fisttpl
addr16
jb
popa
xchg
shlb
xchg
lea
lea
mov
scas
xchg
popl
fcom
jg
xor
loopne
push
clc
inc
gs
xchg
aam
sub
sbb
push
imul
stos
fstps
cltd
data16
les
jo
in
cmp
stos
daa
cmp
inc
fs
add
fdivr
lret
out
mov
push
add
and
inc
push
cltd
and
mov
adc
cmp
js
cmp
inc
rcll
cli
mov
test
inc
inc
lods
pop
imul
and
add
test
icebp
push
xor
inc
and
imul
jge
sbb
dec
xchg
jae
xchg
outsl
xchg
push
int
xchg
sbb
mov
or
add
mov
fiadds
jo
jp
and
cmpl
sub
shlb
out
push
fsubp
es
adc
and
jnp
or
add
pop
xchg
imul
sbb
into
cmc
push
xor
dec
push
gs
popf
jecxz
flds
pop
hlt
scas
cmpsb
adc
in
negb
std
scas
pop
mov
pop
sbb
mov
in
std
and
sub
aam
xchg
enter
mov
pop
mov
jge
cmp
xchg
dec
mov
push
ja
shlb
popf
les
test
and
shr
stos
inc
xor
inc
xchg
jl
mov
mov
jno
push
adc
jno
cli
dec
inc
sub
mov
dec
iret
inc
sbb
push
xchg
jmp
adc
mov
sbb
mov
test
push
inc
gs
js
fiadds
add
mov
inc
pop
inc
mov
or
pop
out
add
mov
push
gs
mov
xchg
xchg
xchg
out
test
stos
xchg
mov
ficompl
push
push
dec
mov
jmp
iret
xchg
pop
and
push
test
jmp
push
jae
rorb
sbb
ret
fildll
ret
in
mov
add
jl
loope
lock
cmp
addr16
pop
outsb
scas
fcoms
and
sbb
add
lods
fdivrl
pusha
loope
in
or
movsb
cmp
jns
arpl
in
pop
jl
pushf
pusha
aaa
imul
add
xchg
xchg
xchg
shlb
inc
call
inc
sub
jle
icebp
test
out
scas
ficompl
xor
and
adc
rorb
test
mov
les
jl
scas
pop
out
mov
mov
xor
mov
xor
test
movsb
mov
hlt
lret
mov
dec
add
xor
xor
mov
js
or
pop
jp
jnp
adc
push
add
outsb
or
std
pop
imul
std
xlat
in
test
dec
push
in
adc
pushf
add
stos
push
and
push
push
cmp
mov
jo
cmp
pop
cmp
add
mov
cmp
jnp
les
movsb
push
mov
push
clc
movsl
fstl
push
jle
cmp
or
mov
inc
pop
jmp
icebp
lcall
push
shlb
adc
sub
mov
sbb
fwait
mov
mov
mov
das
jmp
nop
pop
fstpt
addb
push
jnp
or
mov
dec
inc
mov
lods
xchg
add
out
scas
jo
loopne
jbe
fs
pop
push
xchg
bound
popl
filds
cld
jle
xchg
into
inc
jns
mov
sbb
cld
mov
cmp
mov
add
int
push
xor
lock
mov
das
xor
cmp
lea
enter
es
aam
out
in
or
dec
sbb
ss
into
out
outsl
daa
push
mov
fmull
outsb
inc
sbb
pushl
jae
rcll
dec
test
fadd
mov
sub
mulb
sbb
fwait
pop
push
mov
orl
fsts
and
bound
lcall
pop
inc
es
xor
clc
mov
cmp
or
mov
mov
cli
sti
sbb
inc
cmp
les
fnsetpm(287
cld
push
mov
mov
sbb
mov
cli
inc
leave
es
mov
sub
pcmpeqw
test
shll
pop
add
fidivl
cli
ret
outsl
cmc
movsb
fucomi
popa
xchg
mov
jo
test
sti
mov
jbe
push
and
icebp
jmp
popa
or
push
mov
addr16
ja
mov
bound
insl
ljmp
push
lahf
add
insb
sub
add
and
arpl
jne
fmul
mov
bound
or
push
std
mov
iret
lcall
push
cmp
aaa
add
pop
mov
mov
mov
push
repz
lods
outsl
jae
pop
in
sbb
adc
roll
cwtl
mov
lock
push
aas
jnp
icebp
cli
incb
pop
je
aad
mov
iret
cmp
incl
dec
frstor
push
mov
je
add
shll
lcall
fists
or
dec
xchg
or
dec
lds
lods
add
shrb
cs
xchg
add
push
push
fdivl
lods
arpl
or
mov
jecxz
mov
inc
or
add
imul
fists
push
sbb
in
xor
jg
inc
stos
jbe
adc
jnp
cmp
or
jo
into
pusha
dec
stos
sbb
push
dec
dec
mov
mov
pop
les
mov
jle
xchg
test
adc
jge
pop
outsb
xchg
inc
popf
mov
add
inc
andl
pop
add
inc
ret
mov
jmp
lret
aad
loope
or
push
pop
pop
mov
inc
loopne
cli
push
inc
in
mov
xor
into
lret
or
hlt
mov
rclb
loopne
loopw
pop
in
xor
pop
push
mov
jle
icebp
pop
out
test
loope
cmpsb
fnstsw
insb
push
cmp
in
mov
scas
in
xchg
inc
fistpl
and
fsubr
or
lret
add
pop
inc
mov
ds
pop
shrl
int
pusha
jmp
jl
dec
ds
push
push
iret
stos
ss
mov
jbe
inc
push
add
in
cmp
xchg
sub
dec
out
pop
icebp
aad
jne
sub
jle
ja
dec
popa
loopne
and
dec
lret
insl
cltd
shlb
push
jp
cmp
mov
and
sti
in
dec
push
dec
pop
sarl
mov
fistpl
rorb
movsb
push
jb
xchg
imul
test
add
aad
inc
jmp
inc
dec
dec
mov
fstpl
dec
sti
lret
lret
movsl
arpl
movsb
and
lds
arpl
cld
fdivl
push
into
dec
mov
dec
ror
sbb
push
jne
cmp
scas
push
bound
and
xchg
sub
imul
mov
lods
xor
jle
inc
sub
mov
push
mov
clc
push
add
lock
into
inc
adc
repz
fbld
je
ret
in
in
dec
jo
in
ds
filds
or
and
jae
lea
inc
xchg
lock
cmpsb
xor
mov
inc
mov
xor
aaa
mov
cmpsb
je
stos
push
sbb
dec
xor
lea
mov
sub
rclb
cmp
add
sub
inc
jl
movl
mov
imul
test
mov
jle
jl
lret
mov
cs
bound
out
fstps
xchg
sbb
mov
or
lods
pop
xor
dec
cmpsl
das
std
lods
or
xor
sub
pop
arpl
fldln2
or
insb
xchg
and
cmp
push
ret
xchg
push
lea
mov
add
mov
movsl
sbb
jno
mov
repnz
outsl
imul
movsb
cmc
fldcw
call
jns
std
dec
out
adc
imul
sub
hlt
push
mov
mov
test
and
sub
lea
sub
fcomps
sub
mov
dec
pop
add
testl
mov
pop
imul
cmp
enter
xchg
sarl
lods
mov
sbb
push
iret
idiv
or
jb
push
imull
int
frstor
dec
sbb
aad
add
mov
ds
inc
xchg
cld
mov
gs
jb
lock
push
inc
sbb
cs
dec
and
pop
lcall
cmp
in
mov
pop
jecxz
ds
lods
xor
push
scas
mov
pop
loop
and
add
test
cmp
outsb
sarb
mov
mov
and
inc
lea
adc
inc
xor
xchg
pop
cmp
jge
mov
insl
imul
or
rcll
arpl
push
mov
pop
inc
clc
int
jno
jae
out
stc
call
add
sub
test
std
sub
arpl
jle
inc
fstpt
dec
xchg
pop
or
je
pop
push
mov
xor
loope
shrl
mov
xor
mov
addl
gs
cmpb
cwtl
xchg
icebp
std
rorb
aad
mov
rep
cmc
xor
sub
mov
and
or
loopne
add
lods
push
mov
add
xchg
ret
rcll
out
push
popf
loopne
mov
jle
xor
pop
std
stos
pop
inc
mov
xchg
aam
mov
cmc
fsubr
dec
pop
jle
mov
pop
test
sbb
xor
bound
aam
stos
stos
sub
sar
cmc
add
pop
ja
insb
add
ret
mov
sbb
out
pop
and
xor
ficompl
insb
xor
mov
iret
inc
push
lret
mov
mov
outsb
jae
dec
rcrl
xchg
sar
cmp
pop
sbb
jne
jp
adc
and
or
sahf
jbe
cmpl
pop
lods
add
jg
push
aad
outsl
cwtl
js
filds
rolb
mov
sahf
add
call
mov
aam
cmp
jbe
ret
pop
je
je
int
sbb
aas
or
iret
xchg
xor
loop
insb
push
or
loopne
fnsave
sahf
sub
into
lcall
inc
mov
les
lds
in
mov
jle
jae,pn
push
nop
adc
dec
and
and
in
ret
dec
in
pusha
aad
pop
out
mov
dec
jmp
arpl
sbb
jb
ds
sbb
fbld
mov
inc
jns
add
je
adc
mov
cmpsl
dec
imulb
push
in
int3
dec
sbb
sbb
ficompl
loop
pop
mov
into
mov
out
xchg
add
lahf
mov
stos
add
add
mov
fisubl
ljmp
push
lret
or
dec
mov
jb
es
cmp
add
imul
xchg
adc
add
sbb
push
repnz
stos
sub
mov
or
lret
fcmovbe
push
mov
lahf
adc
cwtl
push
andl
pop
dec
pop
adc
loope
xchg
in
arpl
jp
aas
aad
in
sub
mov
xlat
push
movsl
mov
push
movsl
add
cmp
push
inc
ror
pop
daa
jl
jnp
and
gs
add
sti
loop
adc
loopne
sbb
jl
inc
cmc
repz
cmp
movsl
sbb
inc
inc
or
sub
mov
adc
pop
pop
cmp
inc
pop
mov
scas
mov
cmp
shl
cmp
fnstenv
dec
sub
and
icebp
out
sbb
xchg
mov
adc
sahf
fsubrs
popa
and
sbb
push
rorb
andb
pop
in
adc
jb
lea
jmp
xchg
aas
mov
ror
xor
fldl
das
cmp
dec
mov
mov
mov
ret
sbb
pop
outsl
mov
pop
clc
lods
xchg
aam
fcmovne
ret
cmpsb
inc
mov
shrl
jp
mov
sbb
je
imulb
jl
int3
scas
mull
shrl
cmp
imul
and
mov
pop
or
pop
push
mov
lret
sbb
adc
inc
pop
mov
sub
loope
fcoms
jae
push
jg
shlb
xchg
out
imull
sbb
sbb
inc
stc
cmpsl
push
jp
cmpl
ror
in
ds
cli
out
mov
xor
cmp
sub
hlt
sub
js
sbb
pusha
push
add
cltd
ret
test
inc
add
adc
jae
stc
mov
dec
inc
xor
xor
sub
mov
mov
sbb
cmpsb
sub
jle
sahf
into
add
int3
out
and
lock
repz
jmp
stos
inc
bound
push
fstpl
xorl
int
repz
xchg
dec
inc
fistpll
pop
clc
cld
pusha
xchg
mov
lock
fcompl
add
push
or
mov
fdivr
xor
inc
xchg
je
mov
and
inc
stos
mov
daa
add
jle,pn
movsl
test
push
imul
js
mov
mov
sarb
sti
loop
push
int
sub
btc
das
lock
addr16
test
mov
sub
pop
movsb
dec
lds
inc
hlt
shlb
aad
aaa
push
icebp
scas
mov
jg
sub
xchg
out
cmp
adc
jg
cli
jecxz
js
jl
jp
xor
jl
rcr
dec
lds
mov
mov
hlt
fwait
add
in
pop
insl
cwtl
and
inc
inc
or
push
mov
lock
inc
test
inc
adc
lcall
cmpsb
test
adc
lods
jmp
cwtl
jge
lea
push
fsubrp
daa
test
lds
fwait
push
xor
mov
cmpsb
jns
fwait
jp
fidivrl
jl
dec
pop
ds
or
sub
adc
rolb
cld
test
loopne
or
cmc
sbb
inc
xchg
fxch
and
icebp
xchg
scas
adc
mov
stos
jno
aam
fldlg2
mov
mov
in
cmp
adc
shrb
mov
gs
arpl
inc
push
into
dec
pop
jns
sti
lret
rcrl
pop
inc
or
sub
ret
mov
sub
ss
adc
dec
xor
test
ljmp
push
cltd
add
and
push
adc
dec
add
xor
lock
mov
mov
hlt
inc
inc
pop
and
cmp
dec
fsubl
inc
in
aas
or
push
xchg
test
pop
mov
mov
fnsave
pop
movsl
arpl
shl
fdivrs
push
aad
loop
sbb
dec
popa
add
xor
dec
adcb
rol
call
in
cmp
adc
pop
into
xlat
pop
testl
fldt
sub
xor
test
out
xorl
test
ljmp
push
dec
mov
enter
mov
outsb
neg
andl
add
add
enter
fimuls
popa
paddsw
mov
aam
sahf
fs
gs
xor
cmpsb
mov
dec
dec
pop
test
xchg
outsl
jge
cmc
sti
cmc
jmp
insl
adc
xchg
inc
mov
les
xchg
pop
xchg
ret
push
inc
dec
xor
cld
or
outsl
dec
pop
dec
fbstp
movsl
cwtl
xchg
inc
je
mov
push
jmp
push
adc
adcl
xchg
push
movsl
push
mov
sub
and
nop
fnstenv
xchg
cmpsl
push
dec
fcompl
lods
ret
sub
shrb
jecxz
stc
jge
jbe
inc
fmuls
das
push
fistpll
xchg
pop
lea
imul
aam
lods
xor
adc
xor
pop
pop
pop
ds
xor
sbb
aas
cltd
arpl
scas
sbb
gs
sbb
cmp
movd
shrl
add
stc
jno
in
jb
xchg
sub
nop
mov
xchg
fsubr
insl
fwait
repnz
xchg
push
rcrl
add
push
jno
mov
es
pop
aas
jo
adc
mov
push
add
inc
hlt
ds
stos
lods
insl
sbb
scas
icebp
pop
push
in
lcall
fwait
xchg
xchg
mov
jle
stc
adc
testb
and
das
xor
jg
inc
pop
inc
pop
mov
mov
pop
sub
aam
repz
je
mov
in
dec
dec
stc
xor
call
arpl
imul
dec
aaa
jno
bound
add
jecxz
dec
in
push
inc
test
adc
je
sbb
ret
jl
or
fldcw
jbe
pop
sub
and
xlat
mov
and
out
mov
pop
mov
mov
test
stos
in
icebp
pop
inc
js
repnz
push
and
imul
imul
pusha
loope
and
bnd
mov
ds
sbb
cld
movsl
into
pop
shlb
pop
dec
inc
push
and
mov
mov
xchg
or
sbb
add
push
xchg
xchg
xor
add
inc
test
ds
push
movsb
cmp
popf
sub
jp
xor
iret
xchg
fucomp
adc
inc
push
rorb
scas
cmp
pop
add
jbe
dec
les
inc
js
imul
or
stos
or
or
mov
in
sbb
xchg
mov
cmpsl
dec
inc
dec
dec
jge
int3
jg
cli
and
or
movsl
dec
dec
push
adc
or
adc
je
popf
orb
test
dec
jge
cmovs
push
aam
cmpsl
subb
leave
add
psubd
adc
iret
divl
movsb
cltd
jne
and
cmpsb
js
ror
ljmpw
xchg
pop
aad
cmp
mov
add
add
insl
dec
pop
sub
mov
imul
jl
addr16
jb
test
das
divb
cmpsb
mov
push
mov
sbb
pushl
out
pop
nop
sbb
in
inc
push
jp
outsb
test
iret
jo
lds
ret
and
push
push
mov
xchg
ret
ret
pushf
mov
xchg
sbb
inc
mov
mov
xchg
cmp
jmp
lret
and
cmc
xchg
icebp
cmpl
in
mov
cmp
aam
cs
mov
mov
inc
icebp
xor
and
mov
mov
mov
pop
sub
xor
mulb
fwait
adc
js
call
jecxz
mov
stos
xor
or
insl
lods
rolb
cmp
adc
fists
imul
add
dec
push
push
andl
sbb
inc
pop
sahf
mov
and
and
add
and
cld
scas
push
into
push
outsl
cmp
pop
mov
push
clc
mov
mov
cli
jl,pn
push
and
rcrb
push
ficoms
adc
mov
ret
arpl
pop
jecxz
int
cmp
push
mov
push
out
mov
aaa
out
add
out
popf
mov
push
fwait
nop
jns
call
push
js
imul
clc
sub
or
push
and
ds
repz
jne
shlb
jle
out
sub
rolb
in
stos
pop
push
daa
out
and
pop
xchg
fwait
inc
or
out
fldl
sbb
dec
leave
pop
mov
into
push
in
or
dec
fcomps
jo
or
das
sbb
test
xor
cmp
inc
push
repz
adc
aaa
push
or
push
pop
add
jns
push
fistpl
jnp
in
dec
filds
push
jle
pushf
jne
inc
cmp
mov
movsl
jecxz
sub
mov
mov
mov
xor
test
sahf
lahf
fmul
push
cltd
and
cmp
ljmp
nop
sub
and
inc
arpl
outsl
sbb
ret
adc
pop
test
pop
mov
in
push
mov
leave
push
cmp
aaa
mov
outsb
push
mov
fsubrp
xor
xchg
adc
or
clc
and
xchg
pop
ja
insl
xor
dec
jecxz
sahf
outsb
addb
test
push
mov
test
xchg
ljmp
rorl
cmpsl
jbe
jl
aaa
imul
cmc
pop
mov
mov
jl
cmp
fcoml
insb
push
sbbl
mul
rep
data16
xchg
inc
jae
ja
inc
and
or
fidivs
mov
int3
cmc
xorl
int
shl
jnp
sbb
negw
adc
cmp
orl
call
cld
push
pop
out
into
xor
mov
or
loop
gs
sub
fistpll
leave
pop
add
cmp
jo
cmpsb
repnz
jmp
push
sbb
push
addr16
or
pop
rorl
mov
pop
lret
push
dec
and
in
shlb
int3
iret
xchg
pop
mov
pop
ja
hlt
nop
jno
mov
mov
xlat
or
ja
imul
push
fwait
and
popa
jbe
jo
shl
inc
xchg
push
sahf
js
fdivs
mov
jno
out
repz
xlat
mov
xchg
ds
add
mov
js
fcmovnb
jge
jbe
jmp
mov
mov
inc
sbb
lea
data16
pop
jb
leave
sbb
imul
loope
sub
lods
std
in
scas
pop
mov
sbb
shll
lds
add
cmpsl
sub
mov
sub
push
cli
push
mov
dec
xor
dec
pop
loope
inc
aam
jo
jne
adc
ret
mov
pushf
test
xor
push
cmp
add
push
xor
and
xchg
lods
fucomp
popa
shl
mov
outsl
sbb
sub
aas
mov
dec
hlt
cltd
enter
push
pop
pop
cmpsb
cltd
sbb
std
lock
xor
scas
xchg
mov
aas
testl
out
push
aas
push
add
or
jb
inc
and
push
ficompl
or
mov
rclb
sub
cmp
mov
imul
test
cmp
lds
xor
sub
adc
test
pop
or
mov
inc
mov
add
cwtl
lret
pusha
fisttpll
pop
enter
push
jle
loopne
mov
mov
scas
pop
stos
add
push
xor
fistps
sub
insb
xor
loope
sbb
cmp
adc
stc
cmpsb
je
inc
or
push
ja
jmp
push
xor
addr16
adc
fwait
leave
out
or
out
shll
mov
jp
test
adc
xor
mov
push
xchg
xor
rorl
and
cmp
mov
jg
cmpsb
imul
jns
gs
or
jmp
xor
mov
lock
stos
sub
adc
pop
or
mov
and
sub
add
mov
inc
je
cmc
push
jne
xchg
dec
and
mov
jge
push
mov
and
adc
aas
dec
mov
rcr
insb
lods
ja
or
xor
push
pushf
popf
add
push
out
xlat
mov
rorl
lock
cmp
xchg
aad
xchg
xor
add
lods
adc
nop
mov
lcallw
scas
mov
jmp
xchg
push
sub
addr16
pusha
aas
incl
shl
std
push
inc
mov
mov
cmp
test
pop
dec
js
cmc
ss
icebp
in
pop
mov
mov
insb
add
jae
repnz
testb
aaa
mov
ret
dec
ja
dec
ret
std
cli
xchg
subb
mov
ljmp
rcll
add
lods
pushl
mov
push
pushf
sti
and
imul
lods
aaa
pushf
data16
pop
lds
inc
cld
adc
xchg
out
scas
jae
mov
fstps
imul
jmp
lods
dec
mov
jmp
ds
pop
int
ds
mov
es
fs
dec
adc
movsl
ja
cli
dec
jb
mov
lock
add
out
inc
jo
lcall
sub
fwait
test
xchg
mov
lock
daa
adc
inc
sbb
shl
dec
xchg
into
daa
mov
cmc
sub
push
js
sub
std
xchg
mov
pop
jge
xchg
cmp
sbb
into
in
icebp
mov
or
call
push
pop
mov
stos
int3
fstps
cs
divl
fcomps
mov
orl
pop
push
sbb
sub
lea
ja
test
negl
out
or
pop
pop
gs
hlt
sbb
addb
lret
xor
test
fiadds
pop
cs
in
sahf
and
push
jne
into
aaa
mov
hlt
popa
test
repz
inc
stos
dec
in
imul
aaa
fimuls
jbe
negl
in
mov
stc
sarl
subb
ljmp
fidivl
fcoms
cltd
inc
inc
mov
out
daa
sahf
push
inc
mov
out
pop
push
or
imul
ss
orb
mov
mov
dec
sahf
repz
loope
or
jp
stc
and
jge
jne
inc
in
pop
icebp
pop
icebp
inc
push
or
inc
jne
mov
xlat
hlt
mov
cli
jl
std
mov
sbb
mov
loope
and
das
xchg
nop
xor
fsubl
addr16
stc
cmp
and
and
addr16
mov
add
dec
fcmovb
in
cmpsl
aaa
mov
js
inc
cmp
test
icebp
fstps
les
and
mov
mov
and
rolb
lods
xchg
ret
or
pop
sub
aas
scas
jo
and
adc
push
push
and
and
ret
sub
das
scas
lret
cmp
sub
in
pop
rcrl
inc
add
mov
adc
pop
cld
jp
or
sbb
pop
cmpsl
ss
mov
js
pusha
xchg
rcrl
aam
lret
jbe
mov
adc
jmp
xchg
cmc
aam
stc
pop
icebp
adc
or
repz
aam
sbbl
pusha
adc
xor
rorl
jge
divl
xchg
jb
mov
test
push
test
aad
ljmp
mov
xchg
and
lods
pop
push
scas
jbe
mov
mov
lret
cmp
out
push
adc
or
mov
ss
nop
dec
pop
lahf
ret
jno
adc
and
sti
inc
dec
iret
loop
nop
clc
mov
mov
lahf
ja
jne
dec
fcomp
adc
imul
mov
fucomp
enter
xchg
loope
mov
aaa
jns
sbb
xor
insb
xor
rorl
cmp
adc
iret
mov
sub
and
insl
mov
fwait
and
sahf
mov
repnz
loopne
cli
ljmp
ja
xchg
adc
mov
dec
std
jl
cmc
mov
popf
jae
mov
inc
imul
pop
cmp
shl
xchg
testb
lds
ret
adc
cltd
scas
icebp
js
inc
push
imul
jnp
enter
cmpsl
cli
rorl
fisubrl
sub
pop
loop
mov
adc
mov
or
aam
into
daa
cmp
xchg
mov
popf
div
test
sub
inc
push
sbb
xchg
push
out
in
fnsave
movsl
cmp
fwait
popl
jae
xor
sbb
sub
jmp
inc
mov
mov
dec
fldt
stc
mov
jnp
lock
xchg
xor
pusha
pop
jmp
lods
inc
push
dec
push
stc
les
aam
mov
xor
je
in
cmp
jae
mov
pusha
iret
divl
xor
loop
xor
pop
das
hlt
jne
jo
cltd
sbbb
ret
dec
aaa
insl
sub
iret
adc
push
outsb
dec
adc
mov
mov
jno
clc
test
inc
outsb
xchg
add
call
cmpsl
fadd
jae
push
out
std
aad
xor
mov
fcomps
mov
xchg
pop
loop
inc
das
xchg
cmpsl
gs
adc
fistl
mov
adc
mov
std
jne
jmp
enter
inc
iret
or
xchg
push
dec
sahf
xchg
and
pop
adc
bound
and
lcall
push
outsb
and
adc
scas
mov
inc
andl
rcrl
jno
jle
or
pop
inc
mov
lcall
imul
insb
jb
negl
inc
in
bound
rcrl
and
xchg
mov
repnz
lcall
mov
and
and
rcl
ja
pmuludq
cmp
in
jg
pop
mov
push
iret
inc
in
fs
pop
fcomp
cld
xchg
xchg
bound
cmp
gs
clc
fstps
push
sub
test
pop
pop
ret
cvtdq2ps
pusha
adc
mov
cmpl
iret
lcall
xor
xlat
jle
decl
adc
cmpsb
cmp
push
js
repz
pop
ret
clc
stc
mov
mov
loope
test
push
dec
mov
insl
xchg
jns
cs
mov
pop
roll
xor
cmp
daa
sub
rcrl
jno
fldcw
sbb
xchg
xchg
lcall
add
or
test
push
repz
movsb
shrl
xor
or
jl
dec
lahf
jge
int3
scas
jae
mov
lret
clc
shlb
mov
push
xor
jle
in
xlat
xor
inc
dec
pushl
in
aaa
xchg
int3
inc
inc
push
dec
in
dec
jmp
out
jg
add
jne
stos
out
jg
shl
rcrb
or
mov
sub
xchg
add
inc
sbbb
pop
jo
test
sub
mov
inc
lcall
icebp
popf
lds
cmp
sub
adc
imul
jp
and
xchg
sbb
xchg
pop
shrb
mov
test
mov
sbb
daa
xorl
mov
loop
or
dec
pop
repnz
and
fs
verr
sbb
add
inc
mov
mov
arpl
movsb
add
pop
mov
idivl
lcall
and
int
or
ror
dec
cs
outsb
lret
subl
fwait
mov
xchg
hlt
push
call
in
das
pusha
push
mov
loop
imul
adc
push
mov
cwtl
insl
add
adc
and
cli
xlat
inc
mov
stos
hlt
out
fnclex
cli
pop
sbbb
ss
ror
dec
daa
stc
int3
jecxz
xor
pusha
pushf
mov
xchg
divl
jmp
jmp
jb
cmpsb
rorl
test
scas
shlb
sub
cmpl
scas
sub
cmp
cmpsb
inc
sub
lea
inc
nop
mov
sti
ret
pop
push
loope
xchg
sub
and
push
mov
inc
xor
sti
mov
mov
repnz
sahf
or
cmp
jae
lds
pop
mov
mov
lcall
test
icebp
cmp
js
pop
xchg
add
adc
out
dec
xchg
xchg
cmp
pop
test
sbb
xchg
popf
pop
jl
imul
shll
addl
mov
mov
dec
test
inc
repnz
jnp
or
inc
xor
lods
and
cmpb
hlt
jns
dec
sbb
je
xor
movsb
sub
fimuls
add
add
jp
enter
negl
pop
shll
in
test
dec
cmpsb
inc
mov
mov
out
adc
and
or
pushf
add
cmp
arpl
lock
inc
inc
xchg
cmp
and
fsqrt
int
cwtl
jp
mov
cmp
mov
push
pop
fisubrs
jmp
push
jmp
xlat
stc
mov
fs
lods
lret
pop
pop
xor
xor
in
mov
sub
xor
shrl
arpl
mov
mov
cltd
ret
mov
int
cmp
sub
cmp
add
or
dec
mov
addr16
es
sbb
fisttps
insb
repnz
mov
fcoml
cmp
fiaddl
pop
xchg
stc
mov
loopne
popa
push
push
sbb
cmp
lds
mov
sub
jno
popa
pop
dec
aas
cmpsl
push
lret
repz
dec
and
push
pop
jno
popf
xchg
and
out
out
xchg
mov
and
das
daa
xor
push
sub
mov
out
sbb
aaa
test
js
cmc
ja
fildl
cld
mov
jl
lahf
in
or
rorb
fcomp
cmp
mov
mov
loop
repnz
into
data16
push
cltd
imul
xor
out
dec
or
int3
mov
xor
and
mov
fs
dec
lret
stos
nop
clc
je
into
jle
mov
adc
add
push
sahf
cmpsl
push
rcrb
test
outsb
js
jl
arpl
daa
dec
je
adc
out
add
stos
add
jo
shll
mov
mov
into
insb
stos
stos
pop
icebp
call
pop
push
mov
test
in
mov
inc
das
sbb
shrl
testl
fnstcw
add
pop
sti
mov
dec
dec
test
in
in
je
gs
xchg
mov
mov
out
dec
shrb
scas
pop
xchg
push
and
lock
test
cwtl
or
dec
xor
nop
inc
into
dec
dec
ret
mov
test
and
daa
filds
xorl
xchg
clc
pop
in
inc
mov
into
jne
mov
mov
sub
lock
xor
outsb
and
out
or
jb
mov
push
mov
sub
push
adc
ficomps
negl
nop
dec
outsb
adc
imul
sar
jecxz
lret
aad
sbb
xchg
and
jl
or
dec
adc
int
mov
inc
push
fiaddl
rcrl
jle
imul
lods
jbe
dec
int
movsb
mov
adc
sub
push
add
test
fnstsw
cld
mov
aam
repnz
jbe
mov
enter
or
gs
inc
cli
std
or
out
lret
or
fnstenv
imul
adc
adc
test
loope
cld
jb
pop
dec
stc
cwtl
xchg
sub
out
scas
insl
loopne
dec
repnz
out
je
into
addb
shrl
push
loope
cmp
imull
aad
out
cmp
bound
sub
dec
cwtl
push
jmp
mov
mov
lea
leave
mov
test
pushl
xor
nop
add
mov
cs
inc
pop
ret
shl
loop
addr16
je
jmp
and
repz
push
pop
mov
fucom
loope
fstpt
and
rcl
add
pusha
push
ljmp
cld
xor
lcall
cltd
aaa
add
and
insb
cmp
lods
push
stc
scas
lret
lea
lods
arpl
aas
mov
jno
mov
repz
xchg
mov
mov
dec
mov
jbe
push
jne
stos
orl
cmpsl
sub
cwtl
jg
in
mov
pop
dec
mov
scas
xchg
push
push
xchg
pop
divl
cmp
push
dec
and
xchg
mov
outsl
insl
or
jb
stos
jo
and
dec
ss
dec
aad
dec
ret
inc
mov
mov
mov
ss
lea
addr16
addr16
stos
enter
lahf
sti
cmp
aas
and
rcrb
test
sbb
mov
cmpb
in
fdivrl
loop
xlat
sub
outsb
or
ljmp
rorl
mov
dec
scas
lret
cmp
stos
sub
add
mov
aas
jp
push
xor
jno
hlt
int
inc
psrad
xchg
orb
repz
push
out
in
jb
xlat
or
fs
fld
ja
push
mov
jle
vmread
insb
ljmp
adc
sbb
lods
les
out
mov
inc
pop
pop
push
lea
sub
loop
lea
pandn
lods
xchg
jle
int3
iret
cmp
stos
jecxz
push
add
jb
sbb
sbb
xor
pop
ljmp
imul
fisubl
xor
xchg
insl
ret
aas
out
call
jmp
leave
dec
jno
in
jp
mov
imul
in
cmp
dec
dec
mov
repz
mov
jnp
and
cld
inc
inc
inc
pop
xor
test
popf
ljmp
mov
sbb
mov
dec
repz
fisubl
in
inc
iret
xorb
lea
cmpsb
addr16
movsb
sub
xor
ss
lea
mov
mov
insl
das
ret
jecxz
movl
imul
lock
push
enter
ja
in
ret
mov
repnz
out
or
out
jae
mov
mov
mov
inc
mov
sub
popa
push
add
ret
cmp
mov
push
add
ds
or
out
sub
test
scas
jne
cmp
adc
dec
xor
fldenv
lea
push
fstps
xor
test
mov
sbb
lods
repnz
cwtl
push
andb
pop
pop
cmp
pop
mov
mov
ss
repnz
xlat
leave
jne
ss
or
jbe
xchg
test
nop
adc
xchg
jae
sahf
xchg
pop
popf
mov
stc
add
pop
push
in
xorl
repnz
mov
adc
lea
sbb
or
pop
loope
inc
pop
sub
pop
sub
dec
and
ret
xor
incb
lret
or
jne
xor
repz
xchg
lods
pop
lods
popa
leave
mov
adc
ds
loopne
shrb
fcoms
into
xor
jecxz
into
notl
pop
add
xchg
push
imul
loop
and
leave
addr16
jecxz,pt
push
cmp
jae
dec
divb
mov
nop
test
rcrb
test
fnstenv
loope
clc
or
or
mov
mov
cmp
push
hlt
adc
cwtl
call
cmpsl
shll
pop
adc
jl
popa
rcll
aam
or
std
pop
push
jg
xchg
lret
cmp
push
inc
adc
adc
lods
fs
lret
negb
ficoms
mov
lock
scas
scas
xchg
xorb
addr16
push
fmuls
les
mov
std
jg
dec
nop
imul
xchg
push
fdivp
pop
lret
jl
ret
mov
addr16
mov
test
addr16
xchg
and
jae
fistpll
sub
pop
dec
lea
lret
adc
mov
ss
adc
mov
pop
arpl
inc
aaa
cltd
fs
das
xor
clc
dec
clc
mov
mov
aaa
fidivs
lods
mov
pop
xchg
in
cwtl
or
or
adc
les
push
fildll
lahf
lahf
sub
sbb
and
movb
sub
dec
imul
push
gs
xchg
popa
loopne
out
stos
daa
or
push
push
out
test
lds
repnz
or
mov
out
or
cmp
movsb
dec
inc
fidivrs
and
adc
aaa
lcall
dec
imul
cli
fs
loopne
mov
lcall
mov
cmc
push
dec
dec
stos
in
daa
pusha
mov
in
gs
lret
sbb
cmp
mov
fstpl
popa
mov
xor
scas
push
sbb
jnp
pop
ss
jb
sbb
or
pop
in
loopew,pt
dec
shll
lret
rorl
pushf
scas
rcrl
pop
cmp
or
mov
pop
gs
fmuls
pop
mov
fists
cmp
stc
jmp
inc
les
dec
xchg
imul
test
fnstsw
stos
sub
push
sub
mov
das
insb
xchg
push
mov
lahf
and
mov
xchg
notb
dec
testb
sub
cwtl
addr16
cmp
mov
pop
lock
jl
shlb
jge
fcmovb
xor
adcl
into
icebp
outsl
stc
add
insb
scas
lock
movsb
cmp
add
inc
pusha
inc
popa
inc
jmp
loop
out
jmp
push
inc
cs
mov
pop
jmp
dec
test
sub
mov
lret
mov
jp
mov
mov
and
lcall
jbe
or
shll
and
xchg
jmp
jne
mov
adc
pop
or
mov
pop
lret
addb
sub
cmp
inc
and
scas
xor
sbb
lret
push
cli
mov
inc
mov
jp
and
or
pushf
ljmp
xorl
sbb
test
aaa
mov
rcrb
loop
test
ljmp
sbb
outsl
lret
enter
pop
add
sbb
mov
push
adc
add
sub
cmp
in
dec
clc
xchg
sahf
lcall
dec
in
daa
push
sub
mov
or
testb
popa
data16
adc
push
ljmp
sarl
rorl
add
cmp
stc
or
inc
cmovbe
sbb
movntq
out
push
add
xor
xor
push
fistps
jnp
add
divb
dec
leave
cltd
scas
subb
mov
xchg
push
sbb
clc
sbbb
rorb
xchg
jnp
inc
mov
or
js
jb
lods
cmpl
lds
pop
and
and
sbb
loop
outsb
in
addb
xor
mov
mov
aam
shlb
mov
hlt
mov
out
cli
cmpsl
pop
into
and
das
repnz
repnz
lea
idiv
add
ljmp
incl
shll
test
sti
push
mov
and
ljmp
adc
lods
inc
leave
push
inc
push
aaa
add
mov
lds
rclb
sub
cmp
lcall
push
cmp
addr16
jnp
rcrl
adc
xchg
jb
or
cmpsb
xchg
leave
inc
and
xlat
sbb
pop
push
pop
mov
mov
add
dec
xchg
push
incb
imul
push
lcall
loop
xchg
inc
or
sbb
xchg
or
mov
push
xlat
adc
jae
xor
cmp
mov
loopne
jg
pop
arpl
adc
lock
cs
adc
in
fisttpl
test
repz
xor
dec
push
sub
loop
daa
int
cmp
addl
adc
mov
inc
leave
dec
mov
dec
inc
pop
sub
cltd
sbb
loope
jecxz
dec
xor
jp
es
lcall
iret
mov
pop
divl
cmp
add
mov
sbb
iret
out
pop
ljmp
testb
out
sub
std
sti
stos
fnstsw
test
enter
and
fildl
cld
stos
cmpsl
jne
fcomi
inc
mov
hlt
sbb
xor
insb
push
pushl
lea
je
inc
xchg
jns
pusha
or
ret
and
xor
int
inc
ss
jge
leave
je
lcall
je
sbb
sbb
subl
add
outsl
push
rcl
dec
add
add
les
mov
fcoml
xor
xlat
mov
pop
fidivl
shl
jns
imulb
jle
shrb
fmull
sti
sti
stos
cmp
movsl
aaa
cmp
xor
pop
call
cmp
pop
and
xor
xchg
sahf
push
jb
jo
into
movsl
xchg
mov
dec
dec
addr16
mov
jp
inc
ljmp
lret
mov
sub
mov
cmp
mov
ret
cs
das
iret
cmc
add
or
jae
sbb
dec
mulb
aaa
lret
roll
sti
sbb
mov
or
mov
pop
aas
mov
mov
imul
fnstenv
scas
jmp
add
pop
or
ss
dec
test
lret
ret
mov
or
dec
daa
pop
xor
in
ja
ljmp
xchg
out
xor
out
inc
test
dec
lds
daa
jns
outsl
cmp
inc
adc
movsl
mov
sub
and
xchg
or
insl
lcall
mov
jg
cmp
push
and
sahf
out
adc
daa
inc
lahf
pop
scas
inc
ljmp
fwait
add
dec
data16
iret
cs
hlt
addr16
jns
jne
pop
mov
test
mov
arpl
jmp
btc
dec
jnp
lock
pop
xchg
xchg
loopne
shll
js
enter
sbb
les
add
cmp
call
popf
jae
mov
add
daa
leave
add
mov
and
ret
cmp
sub
push
sbb
jns
pop
daa
call
lcall
xor
sbb
jp
dec
mov
cmp
xor
inc
jne
add
fidivl
lods
js
sarl
or
call
cmp
adc
mov
xlat
xor
pop
jg
dec
pop
sbbl
iret
sbbb
notb
scas
arpl
nop
cmp
outsb
mov
mov
mov
sub
push
xchg
push
pop
rorl
mov
lahf
xchg
mov
cmc
fnstcw
sub
inc
inc
inc
popf
sbb
mov
cmp
clc
mov
outsb
dec
mov
and
lods
popa
fidivrl
xchg
mov
and
sbb
jmp
xchg
mov
jbe
js
push
inc
pop
mov
aaa
leave
daa
xchg
xchg
xor
push
inc
out
test
xchg
je
push
je
mov
imul
psllw
push
hlt
addr16
out
mov
xchg
scas
lods
fwait
jmp
inc
shll
iret
mov
mov
xchg
incb
jg
clc
xchg
mov
cmovns
adc
jns
sbb
sub
mov
mov
cmp
sbb
out
in
jg
push
orl
xchg
mov
push
adc
loopne
xchg
ljmp
adc
int
jne
inc
adc
add
jae
jne
mov
mov
mov
mov
jmp
mov
iret
out
and
pop
dec
mov
cmpsl
mov
bound
in
jo
in
mov
aas
inc
cmp
test
out
xor
cmp
jbe,pn
push
fsubp
aaa
push
nop
out
aam
adc
test
les
repnz
clc
mov
pop
xchg
lock
xor
push
cmc
outsb
cmpl
jp
daa
cmpsl
scas
xchg
std
push
jns
aad
sbb
test
jno
and
xchg
mov
adc
push
xchg
cli
mov
clc
mov
fcompp
xor
imul
push
xchg
out
cmp
adc
cmpsb
lock
lock
jbe
outsl
xchg
leave
sbb
push
lret
sbb
call
scas
mov
into
ja
xlat
pop
sub
or
jo
and
ss
fadd
mov
inc
outsb
pop
mov
shll
cmp
loope
rdpmc
mov
pushf
mov
call
push
pop
add
outsl
fmull
add
xor
and
lcall
sub
aas
mov
in
sahf
fwait
sbb
imul
jecxz
pusha
or
cld
mov
cli
scas
push
cld
pop
mov
arpl
xchg
roll
scas
pop
mov
dec
sub
mov
push
sarl
mov
das
pop
or
mov
rorb
inc
add
mov
fildl
hlt
add
jge
sub
fidivl
dec
mul
rcrl
inc
aas
imul
cmp
sti
inc
sti
sti
pop
and
sbb
fmuls
sub
sti
shl
sub
mov
dec
lcall
daa
outsb
mov
and
mov
aam
jl
mov
fmull
add
sub
jbe
xor
addr16
xchg
jp
mov
imul
jl
push
cmc
jnp
clc
out
add
fs
mov
ret
pop
jecxz
adc
lcall
cmpsl
cli
xchg
add
gs
aas
lea
repnz
loop
xor
scas
aad
rolb
mov
lock
mov
mov
lds
js
stos
in
xor
sbb
push
push
push
fs
pmulhw
cwtl
cltd
stos
mov
dec
ja
lods
sbb
xchg
jl
loop
pop
push
aaa
imul
adc
and
out
cltd
mov
inc
addr16
sti
sbb
push
test
in
stos
out
mov
push
xor
jne
sahf
jae
hlt
sub
dec
mov
rolb
addb
leave
add
in
push
insb
pop
lret
push
leave
inc
or
pop
insl
lods
jae
jno,pt
sub
lea
lock
cmp
pushf
xchg
cltd
cmp
adc
xchg
mov
xor
mov
mov
and
jp
popf
inc
cmp
dec
test
and
fcompp
sbb
push
cmp
test
jns
sub
mov
add
and
xor
push
cs
inc
add
jmp
pop
dec
scas
jns
icebp
xchg
push
xor
push
jl
sbb
or
cld
adc
sub
sarb
loop
cltd
push
pop
call
int
mov
xor
je
cmp
pop
sub
jge
adc
or
out
sti
fcomps
cmpsl
jmp
sub
push
push
jne
lret
xlat
mov
push
or
cmp
outsb
gs
rcr
sub
jg
adc
sub
jns
out
mov
push
pop
or
js
or
in
in
mov
ljmp
popf
or
addr16
bound
adcb
icebp
xchg
fucomp
std
imul
mov
shl
mov
xchg
push
push
scas
mov
lods
daa
sub
inc
cmp
test
scas
and
js
cmp
mov
adc
jbe
movsl
movsl
into
mov
dec
xchg
or
leave
out
sbb
mov
xchg
sbb
out
push
inc
xor
cmp
orl
mov
xor
int3
je
into
jp
fwait
and
addb
out
paddsb
nop
jmp
dec
ret
lds
sahf
es
incl
pop
cwtl
cmpb
testl
mov
sbb
popa
mov
jl
ss
pop
inc
mov
aaa
ret
dec
inc
and
das
pop
jno
out
inc
dec
pop
jbe
jne
mov
rorb
add
adc
mov
pop
sti
inc
dec
xchg
push
fs
push
lretw
xchg
mov
loopne
cmp
mov
mov
sbb
pusha
push
and
fbld
mov
xchg
sti
dec
out
das
shr
mov
cmpl
and
push
daa
mov
adc
fld
ret
mov
inc
or
andb
sahf
adc
cltd
bound
pop
jnp
lds
nopl
mov
xor
cmp
popa
xchg
in
ret
mulb
inc
cmp
test
gs
fstpl
cmc
sbb
call
int
cli
cli
xchg
inc
test
and
or
fs
scas
push
je
push
pop
ret
fidivrl
or
add
fs
not
xchg
adc
out
out
idiv
xor
mov
js
jnp
ja
or
int3
scas
mov
mov
sbb
out
add
cmpsl
mov
loopne
mov
jns
imul
dec
dec
push
mov
loopne
lds
and
repz
aam
arpl
mov
jge
mov
lods
and
ret
inc
sbb
sbb
es
and
add
add
in
inc
test
mov
push
pop
add
inc
ds
or
add
mov
mov
fnsave
xchg
sub
or
jmp
sub
mov
xor
popa
add
add
push
fsubrl
call
lret
int
or
aam
loopne
mov
mov
aam
insb
fwait
mov
pushf
dec
pop
fdivl
adc
mov
out
dec
mov
es
aaa
mov
pop
outsl
xor
dec
cmpsb
mov
daa
xchg
or
into
clc
jge
int
dec
jp
mov
sbb
sub
pop
add
in
add
cltd
pop
pop
and
mov
stos
shll
mov
mov
nop
pop
mov
mov
cmp
fisttpl
sub
jns
les
mov
arpl
xor
jmp
or
sbb
leave
mov
jne
mov
es
dec
and
sbb
inc
out
push
dec
jle
insl
jp
ret
das
adc
hlt
jle
shll
push
pop
lret
std
xor
or
push
clc
fistpl
fistl
mov
lods
inc
jecxz
pop
mov
outsl
lahf
pop
hlt
fsubr
aaa
loop
or
pop
pop
cli
push
in
int3
into
es
lods
sahf
mov
or
xor
and
adc
fwait
dec
mov
in
inc
lea
in
xor
push
daa
test
cmpl
add
test
mov
js
ja
add
flds
js
xor
in
data16
jns
adc
xchg
cld
pop
sub
sub
pop
add
imul
sbb
pop
js
inc
shlb
dec
clc
push
mov
mov
icebp
nop
jmp
mul
mov
or
xchg
xchg
push
mov
mov
fisubl
enter
mov
add
lods
sarl
mov
imul
je
xor
pop
or
fistl
cltd
dec
cmpsb
jnp
bound
sarb
fwait
add
xchg
movsl
pop
out
imull
jle
jae
jae
xchg
in
imul
push
scas
mov
push
sub
jecxz
cltd
clc
lods
inc
std
cs
pop
repnz
fistl
xchg
sarl
sbb
and
sbb
outsb
inc
es
enter
clc
jnp
push
push
fistps
cli
or
orl
inc
push
inc
xor
rcrl
adc
cs
sub
ret
hlt
adc
jl
jge
call
shr
fmull
cmpsl
xchg
adc
sub
push
or
sti
cmp
jle
ljmp
loopne
and
jmp
out
add
jns
movsl
push
pop
mov
mov
sarl
or
sbb
lds
es
push
xor
sbb
dec
shr
jle
ret
or
xor
lahf
icebp
dec
adc
aaa
cmpsl
cmp
rcrl
or
testl
mov
xchg
ljmp
dec
cmp
and
and
xor
cwtl
xor
movsb
mov
arpl
dec
jb
js
or
lods
lods
or
fldcw
lods
scas
push
cltd
popa
xor
push
or
lds
mov
fsubr
pushf
lret
loop
leave
dec
insl
and
adc
pop
or
dec
push
daa
mov
aas
sbb
test
rclb
fwait
cwtl
imul
sbb
mov
mov
out
cwtl
sub
test
mov
loopw
cli
bound
sbb
adc
dec
in
sub
pop
sbb
insl
fdivrl
dec
or
imul
in
jne
jnp
xchg
sub
in
jne
mov
pop
push
cs
dec
out
push
adc
lcall
xor
mov
adc
push
scas
mov
pop
jp
and
and
test
outsb
pop
clc
jbe
cld
fisubrs
movb
jo
sbb
sub
xchg
mov
imul
mov
dec
mov
jp
mov
int
xorl
sub
pop
mov
pusha
xor
add
ret
or
inc
int
test
dec
int3
sahf
fs
pop
cltd
outsl
xor
pushf
cltd
inc
addr16
dec
mov
test
jmp
mov
fdivp
fwait
pushf
adc
push
inc
clc
jae
add
insb
mov
mov
jge
sub
popf
add
fcmovnb
adc
pop
pop
push
sub
jmp
xchg
dec
stos
lock
push
in
push
sbb
repnz
mov
fistps
lods
and
pop
ja
je
and
outsb
ret
repnz
add
cmc
fcoml
push
pop
aam
mov
test
mov
pushf
jns
repz
stos
cmpsb
push
int
push
mov
mov
or
repz
les
mov
icebp
cmp
mov
nop
outsl
sti
xchg
and
adc
adc
or
fs
loop
jbe
mov
cmc
in
mov
cs
imul
mov
scas
mov
push
mov
into
cli
lods
dec
xor
arpl
gs
xchg
pop
pop
repz
out
cmp
inc
inc
arpl
xchg
pop
rcrb
loope
dec
push
adc
popa
jmp
cmp
packssdw
pop
adc
sahf
out
pop
cmpsl
fdivrs
sub
add
pop
lea
loope
fmulp
rorb
popa
and
push
jge
xchg
ljmp
in
ljmp
mov
push
pop
add
mov
or
mov
cmp
pop
mov
cld
sahf
rcll
xor
mov
nop
sbb
mov
cmp
sbb
mov
sub
jmp
int
push
clc
jg
xchg
add
into
pop
scas
aam
xchg
testb
bound
aad
testl
ss
enter
pop
mov
and
xchg
xchg
inc
aam
pop
mov
in
aam
mov
cmpsb
pop
out
sub
bound
stc
jbe
mov
cmp
add
xchg
cmpsl
jnp
pop
sbb
subl
and
shl
ret
xor
cmp
insb
mul
enter
xor
and
or
mov
in
cmp
sbb
jmp
dec
xchg
xchg
addb
bswap
or
incb
push
idivb
push
aad
pushf
movsl
scas
lret
js
fdivrl
dec
xchg
fisubrl
lods
nop
or
fcomps
inc
pop
dec
push
jne
xor
pop
cmp
dec
xchg
pop
adc
jns
scas
xchg
and
mov
cmp
dec
fnsave
lret
mov
clc
mov
pop
jle
test
iret
stc
mov
test
adc
ret
repnz
pusha
and
mov
loop
cmp
ja
pop
jae
dec
or
mov
mov
and
mov
leave
xchg
xor
fimuls
aas
fstl
shl
push
js
mov
xchg
xor
cmp
pop
mov
bound
dec
cli
lods
mov
iret
mov
add
add
cmpsb
loop
and
jle
mov
mov
xchg
mov
sbb
ret
or
dec
fwait
aas
addl
xor
mov
ljmp
mov
stos
insb
aam
push
test
jmp
addl
fdivrl
mov
lock
sub
xchg
mov
orl
cmp
mov
mov
fs
pop
aas
es
cmpsb
jae
push
or
mov
pop
int3
call
and
mov
adc
lret
xor
ud0
sub
sti
inc
dec
cmp
dec
mov
stos
les
lret
inc
inc
dec
das
push
lret
jbe
sarb
xor
fwait
test
movsb
mov
daa
ss
mov
or
mov
repz
jmp
in
lret
mov
adc
jecxz
adc
mov
les
and
fwait
cmpsb
sub
jo
movsb
xchg
jle
lea
idivb
add
sub
inc
lock
shll
clc
mov
dec
mov
push
dec
jmp
cmp
jae
push
cmp
jge
cmp
ret
inc
shl
lds
pop
scas
adc
pmaddwd
add
rorb
cmpsb
jb
rclb
inc
and
ja
xor
push
add
add
dec
pop
mov
lret
lretw
mov
imul
and
or
lods
mov
jne
cmpsb
jno
mov
aad
loope
mov
mov
mov
pop
loopne
push
iret
or
jle
jge
pop
movsb
mov
push
xchg
test
push
lahf
mov
incb
je
fstpt
aam
sbb
or
mov
popf
xor
adc
push
mov
pop
int3
icebp
jge
cld
adc
ljmp
stos
into
push
cmp
sbb
xchg
sbb
insb
mov
sbb
adc
lahf
insb
pusha
inc
popa
push
mull
xchg
lods
cmpsb
pop
leave
sub
movsl
data16
jo
scas
out
add
pusha
std
bound
imul
mov
adc
test
es
std
sub
cmpsb
jg
inc
or
movl
and
jmp
inc
cmp
xchg
inc
ret
sbb
std
jg
pop
xlat
add
dec
jmp
dec
les
out
jge
scas
out
jmp
push
pop
xor
mov
pop
lock
xor
das
mov
sbb
lds
cmp
jecxz
sub
out
xchg
sub
push
xor
and
cmp
negl
lock
imul
ss
mov
pop
pop
dec
ljmp
mov
push
lods
js
ret
inc
fwait
inc
sbb
dec
lahf
xor
adc
iret
and
enter
xor
sbb
aam
test
mov
inc
push
nop
pop
mov
mov
sub
aas
mov
or
aas
movsb
sub
dec
jnp
sbb
arpl
sbb
or
inc
push
or
arpl
std
lahf
sub
cli
scas
ja
es
cltd
jmp
inc
jge
push
repz
adcl
pop
rorb
frstor
arpl
lret
shrl
in
roll
aad
das
cmc
repz
icebp
aad
and
or
sbb
sub
int3
mov
jno
xor
mov
data16
add
jp
push
sti
inc
and
test
inc
stos
sub
xor
inc
sbb
jmp
outsb
in
addr16
test
jmp
xchg
mov
cmp
stos
or
cmp
inc
and
sti
mov
cli
lods
pop
or
add
out
dec
enter
pop
jmp
rorb
and
iret
sbb
lahf
test
xchg
popa
loop
mov
leave
outsb
nop
test
xor
data16
add
int
push
adc
mov
shrb
int3
jae
dec
int
or
arpl
adc
mov
fs
lock
cs
out
sub
or
inc
jnp
mov
sbb
mov
aas
pop
adc
sarb
mov
mov
rorb
aas
add
insb
test
lea
adc
xchg
decl
nop
cli
sub
aam
mov
mov
and
or
test
pusha
clc
mov
add
jb
dec
lds
jae
insl
mov
repz
sti
or
xor
cmp
inc
fldenv
stos
in
push
cmc
and
pushf
es
cmp
push
sub
lahf
jmp
mov
push
xor
mov
cli
dec
mov
lret
pop
xchg
add
xchg
cltd
or
sub
insl
push
jno
mov
pushf
xor
sbb
inc
fdivrl
iret
jmp
xchg
xor
xchg
pop
in
dec
cmp
mov
js
jae
daa
outsl
push
xchg
orl
es
sbb
aaa
lds
mov
lock
adc
or
movsb
mov
pop
dec
loopw
je
fsubp
iret
aaa
mov
inc
lea
mov
xor
into
add
mov
ret
out
mov
outsb
das
mov
pop
pop
sub
pop
dec
or
div
xor
mov
xchg
dec
ja
add
pusha
out
pop
sub
or
jp
data16
sub
in
or
mov
dec
scas
aaa
fwait
insl
into
push
inc
push
mov
xchg
lret
jp
sahf
scas
in
sbb
and
mov
dec
or
std
cmp
jns
sbb
inc
pop
mov
mov
es
imul
pushf
jecxz
bound
inc
sub
jecxz
cmp
jp,pt
fwait
xor
jns
xchg
imul
outsb
push
nop
sub
cwtl
in
bound
stc
mov
or
mov
pop
adcb
xchg
shlb
loope
cmp
add
sarb
cs
mov
mov
enter
xchg
mov
cmp
scas
rcrb
leave
add
or
popf
xlat
sbb
jge
xor
add
and
mov
jp
repz
mov
cmp
aad
pop
pop
femms
loope
mov
sub
pop
mov
cmp
jmp
mov
sbb
jmp
inc
sarl
xor
ret
adc
icebp
pop
ss
mov
inc
movsl
divl
pop
push
push
cli
pop
arpl
adc
xchg
sub
cmpsb
pusha
mov
in
or
lods
inc
test
int3
add
xor
jbe
xor
enter
rorb
iret
sbb
add
adc
gs
push
add
shrl
enter
fsubs
cmp
ret
aaa
movl
out
xor
push
pop
cmp
mov
cmp
int3
ljmp
jnp
shlb
adc
push
xlat
pop
int
mov
pop
scas
sub
stc
or
test
mov
out
jo
test
fldenv
dec
push
in
xlat
mov
cmc
xchg
nop
pop
popa
jae
sbb
nop
add
test
out
addb
mov
ffree
mov
shlb
mov
lahf
dec
mov
xchg
and
pop
jb
mov
mov
int
outsb
sub
jns
clc
xor
pop
push
jno
dec
pushf
pop
mov
mov
cwtl
sbb
adc
into
testl
mov
sahf
scas
push
jb
out
cmc
mov
or
or
in
mov
enter
stc
in
xor
insb
adc
push
push
pushf
in
jg
movsb
aam
mov
cmpsb
cli
xor
mov
pusha
ret
or
fcomp
push
sahf
push
mov
mov
xlat
adc
inc
mov
mov
cmp
into
jno
movsl
in
and
sub
push
dec
std
add
add
shlb
and
xchg
jbe
fwait
and
xchg
jb
mov
insb
mov
mov
jne
pop
lods
gs
pop
ljmp
push
push
leave
or
or
fdivl
stos
cmp
push
daa
int3
insl
dec
sub
dec
push
dec
ljmp
xor
imul
push
int3
inc
push
pop
mov
ljmp
loope,pn
xor
jns
out
mov
stc
xlat
roll
adcl
sbb
sti
aad
js
sub
mov
sahf
xor
pop
lcall
pop
xor
push
mov
adc
out
cwtl
jno
shlb
addr16
in
sbb
mov
test
or
rcrl
fmulp
xchg
daa
and
subl
pop
loope
iret
add
mov
add
jns
lods
or
sbb
outsl
jnp
cmpsl
mov
es
outsl
icebp
mov
mov
dec
fisubl
aad
cmc
addr16
clc
mov
push
gs
cmp
mov
sti
xor
rcrl
pop
inc
jle
sbb
push
mov
push
lds
rep
pop
add
and
push
clc
lret
rol
mov
mov
icebp
adc
xor
cmpsl
test
int
stc
cmpsl
inc
inc
movsb
push
push
movsb
push
mov
hlt
xchg
ret
test
xor
cmpsb
xchg
inc
dec
int
pop
add
mov
lds
loop
mov
ja
mov
lods
ret
outsl
xlat
xor
xor
cmc
mov
out
int
xor
xchg
jmp
cmc
movsb
cmp
outsl
add
lahf
pop
pushfw
int
xor
add
xchg
hlt
sahf
test
test
out
popl
xchg
push
test
ja
xchg
aad
add
sbb
int3
leave
jae
stc
in
mov
ss
mov
dec
punpckhdq
or
daa
push
mov
xchg
xor
jle
mov
fwait
aas
xchg
pop
das
dec
stos
or
and
mov
out
fisubrs
adc
push
xchg
mov
xchg
aas
lret
adc
mov
lods
cmp
push
dec
arpl
mov
and
imul
xlat
es
mov
popa
out
int3
sub
dec
push
cmp
push
sbb
test
call
in
pushf
popa
lahf
xchg
lock
stos
sbb
mov
mov
sti
test
sbb
mov
add
adc
cmpl
cli
lea
test
jg
jp
stos
cs
out
jecxz
jge
imul
fisttpl
scas
xchg
push
xchg
test
test
adc
add
sbb
arpl
or
shll
sbb
jnp
push
dec
fwait
pop
jns
or
push
fisubrl
iret
dec
push
jns
faddl
sub
pop
addr16
dec
aam
inc
sub
push
xchg
out
inc
fstps
sbb
pop
xchg
pop
push
push
adcb
std
sti
or
dec
cmp
and
mov
fcomps
cmpsl
push
mov
incb
outsb
repnz
in
jge
dec
ss
es
inc
mov
mov
push
bswap
and
mov
inc
mov
xchg
push
inc
jnp
test
icebp
cmp
and
gs
aad
and
cmp
mov
xor
int
rcl
jge
int3
imull
pushf
out
xor
jnp
mov
dec
and
sahf
imul
cld
pushf
stc
jmp
push
xchg
xchg
stc
add
cli
sub
call
xor
mov
dec
xlat
mov
xchg
add
adc
ds
push
call
inc
mov
push
leave
ror
in
shll
out
jae
push
xor
mov
mov
mov
lods
imul
xchg
cmc
and
cwtl
mov
push
dec
decl
mov
insl
xor
insl
dec
fsubrp
cwtl
xlat
and
or
push
mov
push
cmp
ss
imul
cltd
leave
test
cmp
dec
sarb
or
dec
bound
icebp
les
mov
push
and
mov
mov
jge
call
inc
sub
jae
xchg
xlat
mov
arpl
in
xchg
sub
push
fdiv
mov
jnp
ja
cmc
pop
mov
adc
in
inc
outsb
pushf
les
sahf
lret
dec
pop
scas
popa
ds
inc
fdivl
mov
insl
dec
add
shlb
inc
dec
xor
ret
mov
stc
adc
mov
jl
push
mov
icebp
inc
lcall
inc
inc
out
push
daa
pop
movsb
sub
pop
push
rorl
sub
and
les
pop
pop
jle
add
aad
stc
or
and
cs
jle
addl
les
xchg
pusha
mov
xchg
mov
out
nop
icebp
mov
test
push
and
mov
or
xor
or
cltd
fcompl
jl
adc
cmp
jge
je
mov
inc
pop
cmp
add
jne
ljmp
sbb
daa
das
mov
fbstp
pop
jecxz
sbb
rorb
mov
cmpsl
out
mov
mov
je
stc
mov
push
sbb
push
lcall
pop
imull
xor
in
mov
mov
jo
cmp
sub
fs
xor
jmp
in
push
add
popf
and
sbbb
iret
nop
aaa
or
dec
or
add
icebp
andl
adc
sub
stos
or
mov
popa
inc
and
das
stos
js
add
sbb
popf
mov
push
dec
addr16
dec
adc
int
xchg
jnp
sub
sub
lock
mov
nop
jb
cld
ficoml
shrl
sbb
cmc
xchg
add
adc
stos
lahf
xor
punpcklbw
pop
inc
jp
ss
mov
jns
fisttps
les
loopne
jp
push
test
pop
int
cmp
add
loope
ss
call
cmc
inc
sbb
ds
dec
negb
cmp
xchg
jbe
in
push
repnz
icebp
xlat
jae
add
sub
sbb
lret
pop
xor
lods
jmp
shl
rcrb
lret
push
adc
mov
mov
das
inc
xor
dec
dec
mov
or
fistpll
pusha
insl
inc
loop
inc
bound
jns
dec
sbb
imul
jle
pop
jns
jecxz
sbb
pushf
in
cmp
dec
icebp
adc
jle
fdivrs
popa
sbb
push
sbb
shrb
dec
addl
push
test
test
lret
icebp
adc
insb
adc
xchg
stos
aaa
negb
dec
cld
inc
cmp
adc
cmp
cmp
cmp
push
and
lods
das
sub
xor
test
ss
and
and
inc
mov
fisttps
clc
xchg
sub
into
shl
aaa
es
repnz
mov
add
mov
cmp
adc
jle
jo
jecxz
xchg
test
fwait
mov
xchg
fwait
es
mov
mov
iret
popa
jecxz
mov
adc
pop
data16
into
jmp
mov
adc
in
int
es
sub
jmp
idivb
fistps
push
call
cs
mov
negl
dec
and
sbb
and
push
jg
ljmp
adcl
test
movsl
cmp
int3
mov
push
mov
cmpsb
iret
jecxz
xlat
shrb
test
rcrb
arpl
dec
push
add
xchg
sbb
push
mov
jp
dec
inc
inc
imul
adc
sub
rorl
inc
xor
push
push
pushf
and
scas
lahf
xchg
dec
sub
adcl
mov
jg
in
lret
or
inc
insl
inc
mov
lods
jge
xchg
xchg
aam
mov
fwait
sub
or
dec
sti
cmp
lds
test
cmp
xchg
add
enter
pop
shlb
pop
movsl
sbb
sti
ljmp
inc
out
xor
dec
out
mov
loopnew
test
mul
test
fbstp
mov
pop
ffree
mov
mov
xchg
mov
xor
lret
mov
push
movsl
cmp
add
into
push
and
inc
mov
in
hlt
shrb
lret
ss
into
and
repz
inc
sti
dec
hlt
cmc
repz
xchg
adc
adc
adc
jae
jg
mov
add
iret
cmp
push
mov
repz
xor
jle
xchg
or
add
push
mov
push
pusha
and
lea
popa
test
mov
ds
push
sti
and
xchg
mov
jnp
mov
or
shll
std
lahf
lds
dec
adc
adc
scas
popa
out
jnp
or
cwtl
jecxz
inc
mov
push
mov
test
je
jecxz
lcall
mov
inc
addr16
mov
iret
gs
mov
push
mov
pushf
mov
jnp
fwait
ret
sbb
inc
jg
lock
pop
push
jno
icebp
mov
mov
jbe
xchg
inc
and
pusha
popf
rcrl
mov
pop
and
and
aad
stos
jl
dec
cmp
or
push
jg
in
aaa
mov
cmp
and
jb
out
push
ficoml
or
aad
clc
shll
call
mov
add
push
xchg
add
jmp
sub
int3
sti
xchg
dec
dec
sub
ja
mov
loop
out
mov
mov
push
or
dec
jbe
mov
sub
sbb
adc
push
cmp
cmpb
insb
insl
inc
arpl
mov
mov
xor
stos
mov
scas
cmp
mov
lcall
cltd
pop
or
mov
iret
sbb
inc
je
test
adc
ret
aaa
inc
push
leave
push
cmp
mov
insl
call
fdivs
dec
sbb
adc
pusha
cli
leave
xor
call
repz
mov
jo
adc
sahf
lods
ror
stos
fwait
outsl
dec
inc
pop
insb
lods
or
mov
inc
addb
xor
or
outsb
inc
pop
inc
xchg
adc
mov
shrb
test
test
jnp
movsb
or
sub
cmp
insl
jmp
or
popaw
lret
cmp
in
fiaddl
dec
mov
les
mov
pop
xor
push
mov
push
cmpsl
jns
add
and
cmp
cmp
mov
jno
scas
pop
mov
push
push
pop
je
pop
xchg
aaa
cmp
add
adc
dec
sub
daa
movsl
sbbl
in
in
xchg
or
lcall
mulb
inc
fsubs
mov
xor
imul
mov
add
sub
orb
fildll
test
rorb
sub
push
xor
cmp
and
pop
jb
jae
or
repnz
stc
pop
into
mov
sbb
jns
aas
jg
and
sbb
test
popa
jno
adc
sbb
sbb
into
dec
cmp
out
popf
movsb
mov
shrl
push
std
stos
daa
fsub
xchg
push
into
pop
fucomi
dec
jb
les
mov
inc
int
mov
push
orl
je
jl
sahf
adc
xor
fmuls
dec
shrb
ret
dec
cltd
dec
fstps
sbb
scas
mov
mov
aam
adc
xchg
jge
repz
mov
lods
bound
push
test
data16
xchg
sbb
mov
and
and
mov
push
sbb
xor
jle
pop
push
mov
lret
and
push
push
inc
test
xchg
jb
jp
inc
fistpl
xlat
add
ja
xchg
mov
sub
fwait
pop
and
pop
sahf
cwtl
test
iret
adc
call
mov
faddl
movsb
pop
push
ficompl
lea
sbb
adc
mov
lahf
out
cmp
push
nop
mov
pop
add
push
fisubrl
inc
add
xchg
xor
jne
or
dec
stos
inc
jge
jmp
stc
stos
outsb
push
inc
mov
mov
call
sbb
mov
scas
xor
jb
xlat
xchg
mov
divb
rolb
sbb
mov
inc
outsb
dec
cmp
inc
in
xchg
stos
nop
call
mov
inc
loop
aad
adc
stos
popf
pop
cmp
test
mov
sub
fidivrl
mov
data16
stos
pop
pop
jnp
in
out
sbb
or
and
pop
pop
rcll
imul
xlat
cld
ficomps
dec
adc
mov
push
jle
lods
call
adc
jp
aas
jns
push
mov
mov
push
aas
scas
cmpsb
cld
scas
inc
imul
lcall
sub
imul
cmc
pushf
xlat
sub
push
pop
cmp
mov
ret
jne
pop
roll
xchg
notb
sbb
push
jbe
daa
ret
push
dec
pusha
fstps
daa
cmc
call
push
aaa
and
cwtl
push
pmovmskb
inc
inc
pop
in
data16
adc
vpsubq
xchg
cs
push
fisttpl
and
js
popa
adc
cmc
mov
stos
in
jb
xchg
jno
loope
pop
addr16
daa
xchg
xchg
mov
mov
fnstcw
jmp
in
in
dec
imul
mov
push
sbb
out
hlt
ss
pop
movsl
ret
sub
jbe
xchg
jno
std
mov
and
push
dec
andb
pop
inc
lcall
mov
push
lock
cwtl
imull
or
mov
movl
movsl
scas
dec
mov
into
int
int3
mov
mov
mov
outsb
pop
lcall
adc
mov
stos
xor
stc
mov
xchg
aaa
push
aam
mov
pop
cli
and
mov
push
pop
mov
mov
cmp
or
in
inc
dec
lds
jae
jnp
pop
lock
sub
mov
push
mov
imul
aad
cmp
aas
and
in
push
mov
and
sub
jp
mov
jg
mov
fisttps
xor
mov
loop
lcall
insl
in
adc
mov
mov
mov
fstps
or
mov
fnstcw
add
push
sbb
int
je
add
and
lea
divl
popf
out
or
cmpsb
adc
stos
adc
mov
ljmp
xchg
inc
cmp
pop
stos
ret
fisubrl
cmp
push
sbb
adc
into
add
mov
cld
push
lahf
xchg
and
je
xchg
pusha
jae
add
repnz
decb
xor
cli
popa
lret
fisubs
inc
cs
test
ret
into
mov
sbb
scas
dec
sub
mov
cld
loope
add
filds
sub
jg
sahf
xchg
mov
mov
int3
mov
mov
xchg
pop
fimuls
movsb
add
enter
test
je
in
cmpsl
dec
sbb
add
rclb
lds
and
lods
jbe,pt
jmp
inc
xchg
movsl
inc
shlb
mov
adc
aam
imul
mov
and
or
sub
dec
ds
mov
sbb
push
push
jmp
test
inc
lret
push
in
cmp
push
mov
mov
test
jmp
pop
in
push
mov
pop
xchg
adc
sbb
sbb
jno
fs
xchg
leave
sub
mov
xlat
inc
hlt
je
rcr
or
in
movsb
mov
nop
aaa
imul
add
subl
les
mov
push
push
mov
sbb
fdivrp
lods
rcll
inc
repnz
aas
dec
jne
mov
pushf
xchg
jns
mov
jl
pop
fildl
xor
sbb
push
push
push
lret
cmc
idivl
leave
in
pop
jmp
dec
fcmove
adc
push
adc
adc
sub
mov
jp
mov
fidivs
outsb
jmp
push
inc
adc
inc
int
sbb
cmpsl
call
inc
pop
orl
aam
out
fwait
in
lahf
push
inc
sti
les
pop
cmc
sbb
mov
subl
jns
dec
fsubrs
loop
bound
xchg
mov
or
sbb
jne
jnp
mov
add
mov
mov
inc
stc
into
stos
cmp
pop
push
cmp
lods
cmp
dec
sub
xchg
cltd
push
hlt
loope
insl
push
pusha
fcomp
mov
test
xchg
dec
pop
mov
call
and
cmpsl
shll
cli
mov
pop
test
sbb
or
jne
cmpsb
mov
pop
les
lods
adc
jg
arpl
pushf
mov
mov
mov
mov
test
je
mov
in
imul
pop
loop
lahf
cwtl
mov
sbb
popf
inc
ret
ss
push
call
fwait
maxps
nop
in
add
dec
add
and
aas
sbb
int
pop
push
mov
cmp
or
and
or
push
cmpsb
pop
xor
or
cmp
pusha
adc
mov
mov
mov
sbb
leave
insl
outsb
in
cwtl
int3
cwtl
psubusb
adc
jbe
jnp
pop
push
dec
std
imul
jmp
dec
fstpl
repz
enter
dec
addr16
loopne
mov
in
or
sbb
movsb
leave
pop
in
xor
dec
rcll
test
divl
inc
push
xchg
scas
lahf
mov
push
jmp
inc
dec
or
inc
push
jae
out
pop
inc
ss
into
push
scas
jge
pushf
outsl
add
mov
xchg
aad
xor
lcall
xorl
ret
push
and
mov
xor
mov
nop
pop
push
mov
shl
inc
inc
and
mov
cmc
mov
ret
incb
mov
mov
fidivl
mov
sub
inc
jl
rol
mov
cmp
mov
mov
mov
ret
push
gs
rorb
xchg
test
xor
shll
mov
push
lret
mov
int3
mov
inc
nop
repnz
xchg
xchg
and
xor
out
or
bound
pop
mov
std
pop
addl
fldcw
pusha
jbe
mov
pop
mov
push
dec
data16
je
insb
jo
mov
nop
xchg
in
cmp
jg
xor
ret
pusha
jbe
outsb
test
pop
add
or
clc
js
inc
jecxz
btr
pop
xchg
aaa
adc
test
pop
push
add
mov
push
jmp
sti
push
stos
std
mov
adc
rol
pushf
adcb
inc
test
mov
mov
jne
inc
fs
pop
mov
mov
je
sbb
js
jbe
xor
inc
dec
jg
aaa
adc
notl
xor
mov
and
lret
lcall
pop
inc
and
xor
in
lcall
out
test
leave
jno
and
push
sbb
sar
lods
nop
adc
mov
jb
ja
mov
fidivs
jmp
jo
adc
sbb
ljmp
js
sub
xchg
ljmp
rorl
les
fcoms
xor
ret
inc
in
mov
xchg
xor
das
mov
rol
jae
in
lcall
popa
mov
sub
add
loopne
sbb
dec
popa
fnstsw
adc
nop
ret
inc
push
add
stc
sbb
inc
xor
pop
mov
push
call
arpl
mov
push
fcmovb
lock
ret
popf
xchg
sub
mov
or
shlb
and
hlt
sbb
scas
lods
es
push
add
mov
cltd
out
xor
add
inc
pop
lahf
add
push
push
jmp
scas
pushf
jno
std
add
mov
fbld
mov
mov
out
adc
movsl
ficoms
stos
lret
out
add
jb
jge
cli
mov
mov
mov
push
or
scas
mov
pop
jns
rcll
lahf
fisubs
push
or
or
push
xchg
jno
cmpsl
inc
jb
jo
add
cmp
movsl
add
std
mov
add
jmp
cwtl
jnp
dec
data16
push
and
int3
fadds
inc
dec
or
add
mov
in
or
test
jl
jbe
jnp
cmp
std
test
cmp
ss
in
jnp
mov
cmpsl
cld
imul
adc
dec
sub
mov
push
daa
loope
fmull
sahf
cmp
push
pop
idivl
mov
xchg
je
shlb
iret
mov
pop
jecxz
rcl
das
and
mov
add
dec
sbb
pop
dec
stos
jnp
push
nop
or
mov
xor
and
shrb
fwait
sbb
adc
xchg
sbb
jmp
ret
rorl
div
notb
decb
sbbb
shll
scas
sub
fcomp
mov
int
ss
bswap
inc
mov
insb
test
shll
js
add
insb
ljmp
faddl
arpl
jle
xchg
sub
mov
jns
rcr
add
andl
pop
push
mov
loop
rep
jle
mov
inc
ret
mov
data16
outsb
adc
pop
repz
cmp
xor
insl
subl
and
add
imul
cmp
or
scas
enter
cmp
mov
jns
cld
pop
dec
and
add
repz
cmp
mov
loope
jb
jno
mov
and
clc
mov
adc
push
mov
bound
jbe
lods
sbb
lret
push
std
and
mov
ret
sbb
or
xlat
xchg
xchg
in
jo
jnp
lods
pusha
fldcw
sub
pop
das
js
mov
jge
push
fnstcw
repnz
jl
cmp
fisttpll
mov
adc
test
inc
aaa
or
addb
jae
in
aad
sar
je
mov
mov
sbbl
aam
enter
popf
lods
lahf
mov
add
gs
cmp
dec
cmp
insl
xchg
pushf
fwait
scas
and
ljmp
xor
or
xor
push
icebp
js
out
xchg
sub
fldcw
std
dec
push
ljmp
add
cmp
rcrl
loope
aad
sub
or
jl
fisubs
aas
in
and
add
test
adc
data16
jmp
negb
loop
pusha
int3
popf
loop
roll
test
cwtl
mov
sarb
ds
jmp
push
mov
sub
addr16
scas
das
sub
dec
sbb
bound
jecxz
lea
test
sbb
push
pop
dec
gs
std
push
or
ret
sub
cli
je
push
sbb
cmp
sub
hlt
in
xchg
icebp
mov
or
sbbb
out
loopne
repnz
push
mov
loop
jnp
dec
jle
lcall
xlat
adc
push
out
sbb
nop
dec
aaa
lret
clc
push
std
fsubrl
add
fiaddl
xchg
jne
inc
out
ficoms
loope
mov
add
imul
sbb
mov
insb
stos
add
adc
cmp
xchg
pop
cmp
push
adc
daa
push
das
or
adc
add
addr16
jb
sub
adc
mov
inc
lahf
sbb
aaa
shll
jne
mov
es
push
movsl
mov
mov
popa
lods
movsb
cwtl
sub
sub
lret
xor
push
mov
sarb
mov
jmp
sbb
add
jno
xchg
mov
mov
inc
jg
nop
push
lahf
movsl
dec
bound
xchg
imul
cwtl
scas
sbb
cmpsl
in
or
jbe
jl
arpl
imul
sub
int
cli
cmp
add
push
xchg
scas
cmp
fsubrl
push
sub
sti
push
sbb
sbb
mov
call
xor
dec
xlat
xorl
int
push
rcrl
pushl
jge
dec
mov
shll
ret
sub
insl
clts
add
pop
gs
sbb
testb
jmp
dec
ja
mov
insb
insl
push
jo
push
inc
sub
cmpsl
mov
cmp
das
cmpsl
in
or
sub
jne
lock
mov
mov
pushf
sub
mov
dec
push
mov
shlb
aas
jno
push
fucomip
push
call
sarb
in
lahf
inc
dec
jne
not
inc
dec
mov
sub
and
dec
mov
xor
aad
add
aam
mov
add
adc
pop
mov
sub
sbb
adc
aad
xchg
icebp
sub
scas
mov
sbb
daa
fmuls
das
jg
sbb
fs
int
ss
dec
sub
daa
arpl
ja
pusha
loop
pop
adc
or
lods
mov
mov
lea
push
inc
xchg
hlt
je
and
in
int
xchg
hlt
fstpl
iret
or
mov
xor
bound
stc
sahf
popa
xchg
push
jbe
lahf
stc
nop
outsb
insl
ror
repz
pop
xor
adc
sub
lret
jae
push
jns
fs
jbe
js
leave
mov
sbb
inc
loope
inc
push
or
in
loopne
dec
cmp
xlat
or
jbe
std
mov
or
stc
fcmovnb
mov
orl
and
or
nop
das
xchg
add
int3
ljmp
xchg
sahf
ja
orl
dec
sub
outsl
ljmp
push
adc
push
rcll
and
ror
cmc
jno
mov
dec
sub
or
and
jae
out
popa
jmp
out
push
outsl
or
mov
mov
popf
stos
shlb
icebp
sub
movsl
xor
mov
lcall
cmp
push
cmpsl
jmp
sti
out
pop
mov
sarl
mov
ss
inc
push
sub
mov
addr16
es
mov
insl
gs
pxor
adc
divb
cld
push
xchg
outsl
ret
or
nop
pop
ffreep
mov
pushf
fiadds
jo
js
data16
roll
fldenv
insl
add
dec
and
fistpll
mov
add
push
jle
cmp
es
push
push
lods
pusha
cli
enter
pop
test
idiv
in
aam
sub
jbe
data16
sub
or
mov
sbb
sahf
mov
fwait
cmp
repz
stc
inc
mov
jge
notb
xor
or
xor
daa
lcall
cli
jp
or
notl
nop
in
sbb
jbe
cwtl
or
mov
sahf
push
lods
in
mov
stc
jmp
test
cmp
cmp
push
mov
pop
adc
sbb
sub
sbb
psubsw
adc
cltd
inc
fisubrs
ficomps
les
sbb
clc
ffree
flds
shll
dec
scas
rorb
in
xlat
adc
test
shll
fs
jo
sub
stc
fdivr
mov
lock
lea
push
faddl
sub
shrl
dec
cmpsb
das
jmp
pop
pop
mov
mov
xor
sub
ret
movsl
fildll
mov
dec
mov
pop
pop
add
pop
sbb
icebp
repnz
scas
add
fstl
or
sub
aas
fwait
lahf
fcom
add
push
or
aad
xor
lods
sbb
out
iret
movsb
into
mov
int3
adc
add
decl
addr16
cmc
outsb
sbbl
in
insb
mov
or
ret
fsubl
jmp
loop
mov
mov
jne
fcomps
push
movsb
dec
repnz
push
push
or
in
fldenv
addr16
cwtl
jne
ja
je
iret
mov
dec
mov
mov
fstpt
jae
fdivp
scas
push
gs
movsb
or
lret
lea
iret
mov
lret
lea
mov
or
lret
insb
jecxz
mov
xchg
push
xchg
data16
loop
rcrl
ss
clc
adc
mov
testl
cmpb
push
ret
xchg
aas
mov
add
xchg
and
mov
push
shl
es
xor
mov
lock
lret
mov
ret
sub
fstpl
or
clc
sub
mov
fsts
hlt
lds
in
hlt
inc
fcomps
lret
mov
inc
test
cmp
int
cmp
push
sbb
insl
jno
lock
out
pop
dec
aaa
cmp
push
rol
in
aam
imulb
push
cmp
xorl
adc
arpl
inc
jp
popf
jle
and
or
push
or
sub
mov
dec
or
sub
xor
push
inc
pop
mov
fdivr
inc
dec
push
xchg
mov
xchg
and
notb
cmp
daa
outsl
adc
fnstcw
sub
sub
rorl
mov
cmpl
adc
xlat
mov
lea
divb
add
insb
xor
cmpsb
out
add
aas
jns
and
xor
mov
inc
pop
dec
jae
incb
or
es
adc
loope
out
jge
mov
adc
pop
push
push
and
repnz
dec
movsl
xlat
or
push
imul
dec
and
notl
int
sahf
int
loopne
mov
dec
xchg
hlt
mov
mov
pop
clc
cmpsb
in
pop
sub
and
pop
insl
or
sbb
and
sarl
xor
rcrb
dec
xchg
fldl
pop
pop
push
mov
jp
loop
orl
aam
cmp
jle
push
pop
inc
jg
adc
or
ja
push
sbb
inc
popa
sahf
mov
dec
xchg
dec
ss
in
pop
scas
insb
dec
lcall
mov
adc
imul
rcrb
jle
pop
fmul
mov
mov
push
fwait
pop
mov
enter
adc
pop
mov
loopne
sub
jg
bound
leave
lcall
sub
test
and
in
mov
in
in
push
xor
aam
xchg
add
xlat
dec
icebp
or
jns
jl
mov
stos
aam
lock
lea
cmp
cmc
cltd
rorl
push
fwait
adc
stos
push
xor
test
push
or
loope
lcall
outsb
xchg
pusha
dec
mov
in
or
test
dec
dec
punpckhdq
ficoms
jg
cltd
sbb
cmp
sub
subb
sub
leave
mov
pushf
push
lock
mov
lods
test
dec
lret
scas
mov
mov
mov
js
rorb
int
xchg
int3
jecxz
sarl
mov
in
rol
js
pop
loopne
inc
icebp
cmpsb
out
xor
loop
push
mov
loop
push
push
cs
jmp
insl
popa
add
lret
sub
pusha
xchg
cmp
dec
mov
pop
ss
imul
ljmp
into
vcmpsd
mov
jl
stos
loopne
sbb
add
add
scas
sub
push
and
cmp
dec
mov
mov
mov
lret
cld
cmpsl
sub
pop
insb
pushf
and
push
aam
jp
inc
jo
movsl
adc
adc
mov
mov
mov
inc
mov
shl
cmp
out
popf
popf
mov
or
mov
movsb
stc
push
in
pushf
stc
nop
xchg
mov
push
mov
cld
sbb
cltd
or
jp
in
test
mov
stos
enter
inc
mov
jge
lds
pusha
adc
rcrb
sub
mov
insl
pusha
push
out
into
mov
dec
test
cmp
push
or
and
cmp
inc
inc
lods
and
rcrl
out
inc
and
jge
xchg
lret
fnstsw
inc
mov
sbb
mov
push
mov
inc
lret
scas
push
insl
jo
sbb
fs
fildll
jmp
add
test
xchg
add
jp
aaa
aam
lea
and
outsb
mov
jmp
mov
inc
or
les
cltd
and
out
sub
nop
scas
daa
insb
bound
ds
or
mov
movnti
es
mov
repz
out
pop
psubusw
dec
mov
mov
decl
xchg
outsl
push
icebp
pop
xor
fsubl
rcrl
cmp
and
xchg
in
jnp
jmp
mov
bound
into
divl
outsb
cs
sti
jno
fadds
ljmp
lcall
out
out
sub
in
and
shll
outsl
add
mov
push
repnz
sbb
ret
push
ds
mov
dec
sub
adc
mov
loop
cmp
mov
inc
push
idiv
dec
sbb
adc
xlat
sbb
arpl
ret
pop
das
fimull
in
fidivs
add
sbb
push
cmpsl
std
ret
lods
stos
cmp
mov
lods
sub
sub
aam
mov
add
and
rorb
cmp
test
dec
cmc
cltd
movsb
call
xlat
rcr
sbb
imul
jnp
mov
mov
dec
mov
pop
fists
sub
and
test
and
dec
sub
enter
es
negb
mov
fs
repnz
xchg
dec
lret
sub
dec
outsb
pop
lods
xchg
popf
add
xchg
cmp
mov
push
in
xor
into
aas
jmp
dec
sub
cs
pop
popf
frstor
add
out
and
f2xm1
fwait
adcb
xor
or
push
mov
in
mov
jp
out
mov
dec
hlt
imul
in
mov
xchg
mov
adc
fidivl
xchg
sub
imul
cmpsl
push
in
es
in
or
mov
xor
filds
mov
inc
inc
xor
loope
fimull
rcr
inc
jle
inc
and
shl
cs
leave
sarb
loope
insb
mov
shll
in
ds
xchg
dec
sub
cmp
fildll
mov
pop
mov
int3
shrb
cmp
and
in
inc
enter
sub
jmp
inc
cld
repz
fwait
mov
sub
das
and
xor
sub
push
dec
sbb
lods
movsl
std
mov
push
mov
sbb
pop
aam
data16
push
or
gs
cmp
gs
push
and
roll
movsl
xchg
cmp
loop
shrb
mov
fucomp
sahf
imul
repnz
outsl
mov
mov
dec
dec
ficoml
dec
xor
cmc
xchg
mov
xchg
xchg
rolb
movsl
pop
jns
insb
test
bound
push
test
mov
test
or
call
dec
frstor
movsl
or
mov
xlat
add
xor
or
push
mov
pop
pop
lds
cs
sub
ja
ljmp
jnp
aas
and
rcrl
in
or
jnp
fsub
movsb
cltd
xchg
mov
int3
pop
testl
adc
or
jmp
leave
pusha
repz
mov
ret
in
add
aaa
add
ja
add
fidivl
cmpsb
fstps
lret
aam
sbb
mov
cmc
daa
js
out
scas
and
rcll
mov
jne
xor
jnp
xlat
inc
sbb
xorb
aad
test
mov
pushf
push
ss
dec
adc
sub
hlt
test
popf
rorb
add
lods
fstpl
dec
lds
lcall
in
mov
cli
xorb
pop
dec
sbb
lea
or
and
shlb
in
fidivrl
aad
mov
ffree
cmpsl
scas
cmp
inc
mov
lret
bound
ret
sbb
repnz
mov
and
sbb
pusha
imull
inc
loope
mov
imul
push
mul
andl
das
mov
mov
sbb
das
push
sti
jae
push
dec
aam
xchg
lret
dec
in
pop
push
sbb
je
xchg
push
fidivrs
lods
sub
mov
int3
pop
lods
out
push
or
lcall
fs
out
dec
dec
fs
push
inc
add
sbb
aaa
mov
faddl
pop
jg
add
std
loopne
aas
ficomps
xchg
sahf
andps
add
lds
or
dec
repnz
sub
push
or
rcr
and
popf
mov
mov
or
arpl
xchg
mov
jp
jecxz
scas
sub
fistl
and
mov
pop
mov
mov
xor
mov
movsl
inc
xor
shll
icebp
pop
stc
scas
leave
inc
mov
jnp
dec
test
jp
mov
cwtl
adc
es
sub
ja
xor
imul
leave
inc
mov
add
stos
fld
or
push
sahf
inc
mov
jg
sub
jnp
repz
jl
test
popa
add
lahf
sub
adc
mov
mov
xchg
xchg
push
daa
push
sahf
push
scas
in
push
mov
or
xchg
lret
aad
shll
mov
mov
sub
leave
aam
pop
jge
dec
fmull
leave
mov
push
xchg
out
pop
mov
in
gs
add
push
sbb
outsl
gs
stos
sub
mov
sar
inc
cmp
sub
mov
xor
push
aaa
rcrl
jge
lds
jmp
ss
loop
test
and
loopne
and
icebp
push
std
xchg
ja
aad
gs
scas
push
cmp
cmc
cmp
imulb
push
js
jne
pop
shrb
pushf
test
and
loope
loope
add
mov
aaa
rolb
gs
in
mov
jmp
shlb
ss
inc
inc
lea
adc
push
or
and
jmp
cmpsb
adc
mov
dec
movsb
or
repnz
push
stos
je
popl
out
add
inc
sbb
pop
icebp
bound
int
mov
repz
xchg
in
sbb
or
lods
sub
xchg
sti
lods
cli
repz
sbb
dec
fbstp
ja
mov
or
fadds
or
adc
xchg
cwtl
inc
pop
rolb
ljmp
dec
xchg
cmpsl
and
stos
in
sub
xchg
movsb
idivl
mov
orb
xlat
fiaddl
dec
lret
cs
mov
andl
xor
sahf
mov
add
out
fstp
cwtl
test
rorb
sti
inc
stos
mov
negb
repnz
scas
add
fs
mov
repz
inc
lret
je
jle
mov
or
mov
test
push
repnz
mov
cmpsb
add
cmp
jge
fmul
decb
mov
rcrl
leave
stos
fucomp
mov
test
mov
sbb
orb
ljmp
mov
insb
inc
push
into
imul
setnp
inc
pop
adc
popa
add
shrb
jnp
lods
xor
fistpl
adc
jae
loopne
popf
dec
test
call
lods
pop
cmpsl
inc
popl
lock
jp
aas
pop
loope
dec
loopne
dec
jb
pop
test
popf
popa
mov
xchg
ret
inc
aad
mov
mov
push
fcmovnu
sbbl
xchg
jmp
push
ret
jle
xor
popa
fdivs
and
mov
clc
sub
xchg
dec
das
or
xor
mov
int
dec
push
or
leave
addr16
jmp
ret
inc
sub
mov
int3
mov
push
mov
add
and
andb
cmp
mov
aas
mov
pop
xchg
sbb
jnp
mulb
xchg
push
mov
clc
push
lret
xchg
jl
cmc
push
xchg
js
dec
sarb
cmc
ljmp
xor
push
rclb
push
xchg
testb
cmp
mov
shlb
stos
mov
lret
push
not
add
pop
add
stos
out
out
or
sub
push
insb
xchg
aas
icebp
lcall
in
xchg
test
mov
icebp
mov
xor
dec
push
and
pop
jne
scas
mov
pop
mov
cmp
xchg
and
xor
fsubs
add
mov
mov
je
push
ret
mov
jno
data16
xchg
push
push
frstor
push
sar
imul
shll
dec
out
shr
jns
xchg
add
cltd
gs
xchg
pop
aam
and
mov
add
ret
lods
lods
call
add
jmp
in
in
inc
mov
not
fistpl
fcmovb
mov
adcl
ret
xchg
dec
push
out
or
dec
xor
test
mov
inc
pop
out
lret
xorb
sbb
pop
loopne
scas
or
cmp
inc
mov
push
in
repnz
dec
sub
inc
adc
inc
daa
rol
push
lcall
cmp
std
xor
and
mov
add
test
jnp
cld
lds
adc
and
adc
inc
in
jno
xchg
pop
xchg
xchg
mov
sbb
je
sub
repz
xchg
mov
out
lret
arpl
andl
insb
data16
pop
mov
and
int
mov
xchg
xchg
loope
into
xor
scas
dec
xor
adc
outsl
lds
and
arpl
mov
sbb
pop
stos
lods
inc
bound
bound
xchg
mov
scas
pop
sbb
pop
jecxz
cmp
int3
popf
fnstenv
sbb
sbb
jg
dec
jbe
cmp
pop
jne
xchg
les
push
pop
rcrb
ret
out
aad
sti
mov
loope
dec
dec
enter
inc
or
cs
lahf
repz
ret
pusha
add
inc
add
add
and
das
xchg
aam
lret
pop
pusha
add
inc
inc
sbb
scas
adc
ret
lods
adc
mov
adc
mov
repnz
rolb
ret
pop
inc
sti
mov
or
adc
mov
ja
push
mov
jp
mov
adc
inc
in
fmull
shll
rolb
mov
jl
ud0
rcrl
repnz
push
scas
dec
jl
jne
fwait
add
jbe
inc
adc
lods
aad
push
cltd
jnp
or
inc
rcr
insl
mov
or
adc
mov
pushl
pop
dec
lret
fistpl
cmp
hlt
mov
insl
in
pop
dec
pop
mov
into
rcrl
sti
out
loopne
sbb
dec
mov
movsb
test
push
jns
xchg
mov
pop
mov
insl
cmpsb
call
mov
shl
cwtl
and
dec
cltd
mov
jnp
jecxz
push
and
stc
jle
mov
sti
dec
dec
repnz
test
in
add
or
jb
inc
mov
push
mov
nop
jnp
ljmp
mov
and
mov
and
jne
fcoml
mov
and
inc
aas
ds
xor
push
fs
imul
es
lea
ret
inc
add
pushf
arpl
pop
out
lret
ss
mov
mov
jbe
xchg
fdivrs
xor
shll
sti
and
mov
in
add
pop
call
cmp
movsl
inc
push
mov
jecxz
dec
sbb
daa
mov
es
test
decl
outsl
aad
imul
adc
mov
cmp
xor
xsaveopt
push
cmp
and
rcll
pop
mov
add
xor
jmp
push
add
mulb
xor
fsubrp
pop
das
call
xor
fcmovne
out
mov
int
bound
adc
popa
pop
sub
aad
imul
mov
sbb
aas
addl
or
pop
and
lock
fsub
jl
mov
pusha
jl
rcrb
and
mov
cli
leave
mov
cmovge
test
cmp
sub
pop
xchg
pop
hlt
sub
sti
adc
jb
push
jmp
es
push
jmp
pop
outsb
cmp
lret
shl
loop
les
inc
mov
xor
cmp
cmp
subl
std
xor
mov
in
dec
ss
lahf
pop
push
test
xchg
pop
pop
push
mov
jno
or
sub
dec
test
add
sbb
jg
inc
jnp
xor
or
ret
jbe
jg
sbb
gs
xchg
add
xchg
iret
dec
or
imul
mov
fldt
sub
into
push
or
pop
aad
in
xchg
in
sahf
insb
cmp
lcall
ret
ret
pop
sub
mov
mov
inc
dec
repz
push
movsb
pop
cld
add
rcll
gs
rol
fisttpl
jmp
nop
lcall
pop
andl
dec
in
jle
sbb
jbe
pop
dec
addr16
fcomps
mov
fnstsw
push
push
sbb
hlt
xlat
fxam
stos
pop
lock
daa
cmp
enter
js
cmpb
pop
sahf
je
cltd
outsb
decl
xlat
repnz
inc
dec
dec
pop
xchg
push
pop
jmp
xor
testb
adc
shlb
push
shlb
push
popf
mov
gs
pop
push
ret
movsl
fiadds
nop
dec
pop
daa
mov
cld
test
push
jl
mov
xchg
outsl
push
or
push
push
sub
push
fsubs
xor
push
sbb
add
push
out
fsubrl
fcoms
les
jge
sbb
orb
jecxz
das
inc
leave
xchg
mov
or
fnsave
sbb
mov
or
aad
stc
iret
clc
inc
mov
shll
lret
xchg
jmp
mov
imull
cmp
iret
pop
jp
jmp
push
ljmp
clc
mov
cmp
lods
dec
data16
mov
into
xchg
mov
popa
stos
pop
stos
sub
in
add
and
nop
clc
call
mov
cmp
out
mov
jge
jle
in
cmp
rorl
insl
leave
xor
ss
loopne
xchg
xchg
iret
jl
jecxz
and
jmp
lret
inc
jb
mull
popa
imul
pop
push
jg
mov
pop
shrb
and
test
repz
cld
in
repz
inc
addr16
out
dec
pop
pop
jl
add
scas
add
xor
cmpsl
pop
push
push
ret
in
and
jecxz
ja
push
and
cmp
pop
cltd
leave
sbb
sbbb
dec
add
orl
cwtl
adc
stos
or
and
mov
inc
jns
idiv
js
xor
lret
pop
lods
cwtl
xchg
inc
daa
and
ret
cmp
and
xchg
or
inc
or
int3
jg
pusha
xchg
mov
je
aas
inc
mov
test
inc
lods
xor
mov
pop
mov
sbb
rcrb
pusha
inc
test
mov
addr16
lret
mov
or
scas
scas
or
add
scas
int3
sbbl
mov
imul
shl
inc
or
das
subl
xchg
dec
nop
push
dec
push
stc
mov
in
outsb
movsb
mov
mov
and
add
xor
mov
push
sub
cli
movsl
insl
push
push
mov
loop
and
ds
mov
pop
repnz
inc
icebp
subl
pop
shll
test
cltd
mov
mov
movsb
fldl
lahf
jp
push
scas
cwtl
mov
jno
daa
ror
mov
adc
imul
mov
insb
adc
rcll
mov
adc
mov
repnz
loop
or
addr16
sub
push
sub
addr16
push
repz
pop
into
pop
xor
outsl
insb
test
mov
or
jbe
inc
and
fildl
push
loopne
fbld
ja
imul
pop
movsb
sub
lret
cmp
jecxz
pop
xor
ds
dec
xor
or
filds
push
repnz
jg
je
popf
shlb
inc
shll
test
add
pop
cld
mov
aam
xor
sbb
fstl
adc
mov
leave
repnz
mov
cli
imulb
mov
jb
mov
and
xor
mov
cmp
pusha
mov
pop
and
js
mov
dec
mov
jecxz
icebp
and
push
stos
or
xlat
jns
jnp
push
jl
cld
xor
push
xor
in
leave
adc
fnsave
outsb
xchg
dec
push
xchg
test
loope
add
out
cld
inc
cmp
test
inc
stos
cltd
adc
fcompl
dec
outsb
jb
int3
xlat
cmpsb
and
mov
xchg
imul
stos
or
adcb
dec
cmc
mov
movsb
test
push
mov
ret
jl
sbb
ficomps
out
jecxz
sbb
add
int
mov
lea
dec
push
stos
cmp
lret
push
out
popa
add
sub
pop
fistl
lcall
xchg
push
imul
xor
test
int3
stc
out
outsb
scas
or
dec
ja
mov
decb
sbb
iret
mov
cmp
mov
repnz
adc
ss
outsb
mov
inc
lea
mov
ret
insb
js
push
sub
jne
out
in
push
xchg
imul
call
add
cmp
fstl
add
fcmovnb
dec
and
loop
fidivrs
pusha
aas
test
xlat
pop
mov
js
dec
loop
xchg
scas
mov
or
mov
mov
insb
cmpsl
mov
dec
or
pushl
xchg
inc
mov
add
cmc
mov
lock
ljmp
inc
jmp
adc
sub
inc
repz
xor
add
mov
mov
dec
lods
pop
sarl
repz
dec
loop
inc
jae
xchg
xchg
fcomp
mov
idivl
or
daa
pop
add
test
insl
sub
aad
inc
sub
jae
int3
out
add
mov
leave
push
or
push
sub
leave
add
dec
lock
mov
pop
jb
cs
into
cmp
sub
dec
sarl
andl
adc
dec
outsl
add
sub
fwait
sbb
mov
and
movsb
or
dec
add
aad
aam
cmc
adc
fwait
decb
imul
push
sbb
mov
push
enter
out
sbb
and
loop
pop
test
or
mov
xchg
mov
out
sub
pop
xchg
lods
mov
dec
dec
jns
enter
sub
aas
xchg
add
scas
jae
arpl
pushf
addr16
repz
les
jp
sub
push
das
dec
sbb
cs
fcoms
sub
in
repnz
dec
out
rclb
sahf
sti
fcomp
nop
pop
insl
out
sbb
jle
mov
in
mov
test
and
stos
add
cmp
jle
pop
mov
add
add
lods
jne
or
ret
push
push
mov
setb
xchg
test
stos
sbbl
mov
mov
ss
push
xor
cmp
cld
lret
rcr
jns
icebp
cmp
cwtl
xchg
cmp
xchg
adc
or
fadds
lea
push
add
lret
std
into
cli
dec
pop
in
mov
aam
cli
inc
mov
dec
outsb
push
fs
std
pop
in
sub
dec
movsl
and
insl
enter
adc
adc
mov
shl
mov
scas
rolb
adc
outsb
push
inc
xchg
call
push
ljmp
and
cmp
fstps
mov
addb
push
push
dec
inc
and
fists
cmp
icebp
je
sahf
jg
inc
ret
push
scas
into
fstpl
aad
popf
xor
jp
pusha
mov
loop
std
pop
jno
mov
ds
ficoml
jae
mov
in
or
int3
push
xlat
fwait
imul
fs
or
mov
sbb
mov
mov
pop
gs
data16
ljmp
jge
adc
addb
rcll
xchg
outsb
mov
sub
in
insl
jmp
arpl
sub
test
js
xlat
icebp
xor
shl
mov
xchg
lock
mov
mov
mov
xchg
stc
mov
add
cmpsl
push
fstl
adc
mov
cmp
add
xor
addr16
fstps
les
add
xor
jmp
mov
fimuls
push
loop
adc
in
sarl
pop
mov
dec
in
jg
mov
push
popf
inc
ja
pop
loope
cmc
push
inc
sbb
inc
inc
bound
mov
inc
or
loope
xor
ss
std
xor
and
lock
push
cs
ret
xchg
fs
jecxz
jb
mov
stos
sti
push
sbb
fwait
sti
bound
aas
rolb
pop
jne
imul
int3
dec
sub
ss
loopne
je
std
pop
inc
push
ret
pop
lods
loope
sub
or
mov
or
dec
mov
jae,pt
addl
gs
adc
push
and
xchg
repz
and
adc
and
lock
and
popa
int3
mov
inc
xor
dec
cmp
xchg
enter
cmp
push
push
xchg
cld
sti
cwtl
and
fadds
rcll
pop
xchg
popa
sbb
arpl
iret
dec
movsl
adc
and
movsb
repnz
out
arpl
sbb
lods
push
data16
cmc
mov
xlat
rolb
sbb
int
push
or
jmp
pop
cwtl
sub
rcll
loopne
addb
or
xor
outsb
push
in
mov
dec
cmp
das
xlat
push
inc
push
jl
lods
add
adc
fistpll
outsl
aam
test
cmp
xchg
fs
pop
jnp
pop
add
dec
sub
aaa
push
inc
sbb
shrl
ljmp
loop
repz
or
pusha
aaa
dec
into
push
shll
fsubs
mov
pop
in
add
mov
mov
in
xorl
and
adc
and
mov
outsb
rcll
imul
fnsave
dec
mov
cmp
dec
stos
and
out
jo
aam
mov
or
or
imul
idivb
enter
pop
or
push
xorl
insl
cmp
cmp
ficompl
jge
and
xor
adc
adc
mov
repz
stos
jge
xchg
mov
push
cmovp
fcoml
push
stos
test
leave
mull
pop
ljmp
lahf
mov
adc
loopne
andl
incl
repz
xchg
push
scas
jne
xor
mov
repz
aaa
pop
test
and
and
xchg
in
xchg
mov
roll
dec
mov
push
xor
incl
dec
cltd
inc
jp
jb
dec
mov
xor
jo
out
mov
inc
mov
mov
xor
jmp
and
fisttpll
pop
aas
fadds
fsts
inc
in
lea
pop
xor
loope
das
mov
test
lcall
jbe
movsb
inc
iret
lcall
xchg
mull
or
repz
imul
adc
jmp
xor
jne
shrb
aad
es
xor
mov
sub
std
or
cmpsl
addr16
pop
fidivrs
mov
pop
imul
fcomps
mov
xor
jge
sub
aad
lods
cmpsl
and
sbb
push
mov
lods
pop
inc
cmc
into
push
xor
ss
pop
sub
xchg
jb
dec
loop
pop
adc
sbb
or
mov
dec
xor
jl
and
lcall
ja
data16
sbb
push
fdivrs
jmp
mov
push
inc
push
xchg
jg
push
gs
cmp
push
ficoml
xchg
adc
fcomps
inc
and
cmc
getsec
cmp
lea
pop
push
dec
add
sub
mov
lock
int3
gs
lret
loopne
cmp
call
mulb
mov
and
xchg
add
and
xchg
sarl
adc
push
iret
xchg
sbb
insl
in
js
fildll
mov
pushf
adc
popf
mov
and
imul
cs
adc
mov
cld
call
inc
lds
or
sti
ret
add
dec
lea
scas
inc
insl
pop
fmulp
loop
push
data16
sub
xor
out
xor
push
lea
adc
or
adc
lock
add
jns
gs
jb
ljmp
pop
sahf
sahf
jbe
cmp
inc
fwait
rorl
std
lods
stos
inc
mov
out
in
fistpl
test
jb
and
repz
xor
out
sbb
or
cmp
call
movsb
and
pop
outsl
pop
mov
test
addr16
xchg
fwait
jo
add
rcrl
sub
jmp
dec
fsubrs
pop
push
push
outsl
mov
xor
clc
iret
adc
push
int3
push
ret
test
inc
movb
aaa
mov
sub
xchg
in
cmc
inc
sbb
cmc
push
dec
sub
sub
sbb
push
aad
mov
jno
in
bound
fiadds
enter
or
xchg
cs
js
xchg
movntq
les
aad
jbe
and
push
stos
test
fidivrs
xchg
or
inc
adc
sub
out
les
sub
cmp
clc
in
fsubrl
ja
mov
xor
push
call
loope
mov
pop
aam
mov
push
cmpsl
mov
mov
cmp
std
lret
adc
imull
mov
mov
mov
xchg
push
icebp
int3
leave
jle
outsb
das
into
sbb
mov
insl
cmp
dec
js
push
repnz
inc
bound
repz
xor
fistps
adcb
loope
mov
js
add
xchg
pop
pop
mov
outsb
adc
imul
fwait
lret
dec
jp
jo
das
xchg
mov
dec
cmpsl
jnp
clc
push
dec
test
outsl
ss
jg
pop
std
lock
mov
sarb
cmp
frstor
cwtl
add
loope
xor
fimull
push
xchg
fcomp
and
pop
test
sbb
mov
loopne
rolb
cli
pop
cli
and
mov
scas
add
fcomp
outsb
xor
xor
arpl
sbb
mov
mov
sub
xchg
outsb
pop
mov
or
data16
scas
mov
in
jns
and
int3
ja
cmpsb
in
pop
xor
mov
or
cmpsb
push
sbb
leave
int
out
pop
push
cli
outsl
nop
pop
or
mov
sub
or
push
xchg
stos
inc
call
mov
mov
icebp
sub
call
repnz
sarb
leave
dec
cmp
icebp
outsb
arpl
inc
dec
mov
arpl
cmp
inc
dec
jle
mov
out
jp
xchg
fsubr
pushf
or
lret
jle
jecxz
outsl
ds
test
cmp
add
lret
decb
xchg
add
scas
inc
add
aaa
cmp
popa
lock
mov
jno
out
cmp
xchg
out
lods
clc
str
xor
fldl
dec
add
lods
xchg
push
orb
js
add
les
inc
stos
hlt
fmuls
and
cli
notl
hlt
jecxz
stc
fwait
dec
test
pop
clc
bnd
sub
test
mov
ss
xlat
jge
inc
adcb
movsb
and
jmp
push
mov
leave
or
xlat
jmp
jle
test
xor
mov
dec
jb
push
jle
insl
aad
xor
out
adc
cmp
or
mov
mov
pushf
lods
mov
or
stos
test
je
add
or
test
adc
mov
stos
das
cmpsl
adc
push
and
fwait
cmp
cmpsl
lahf
xchg
xor
mov
mov
xchg
add
mov
cmpsl
push
lcall
in
dec
sbb
cwtl
inc
xchg
mov
imul
add
xor
in
mov
jle
add
in
movsb
mov
hlt
or
stos
fldt
sbb
loopne
xchg
xchg
jno
fcmovu
or
inc
orb
mov
int3
sbb
mov
sbb
mov
movsb
cmp
dec
fildl
mov
xor
xchg
pop
push
sub
jecxz
inc
loop
fcmovbe
dec
xchg
jg
lock
mov
cmpsl
push
stc
push
outsl
nop
xchg
fistpl
stos
sub
cli
pop
jns
imul
xor
push
add
in
pop
xchg
jp
in
in
stos
inc
nop
lahf
clc
pop
inc
push
clc
jmp
mov
stos
lea
test
mov
sbb
insb
rcrl
enter
mov
aam
push
inc
rol
dec
in
imul
xchg
movsb
mov
or
stc
and
adc
inc
outsl
inc
in
cmc
mov
sbb
and
xchg
pop
push
mov
rcrl
jne
iret
push
jne
or
pop
jle
sub
jecxz
pop
fcomps
icebp
mov
icebp
cmp
add
out
mov
mov
lret
setp
jbe
xchg
stos
iret
call
out
cltd
cmp
push
test
arpl
sarl
mov
jmp
andl
lcall
int3
add
aam
and
out
push
in
stc
mov
add
mov
fstpt
sub
xor
fstps
icebp
sub
fs
jmp
pop
mov
cltd
ret
lods
into
cmp
mov
ficoml
xchg
adc
cmpsl
aaa
pop
daa
addr16
dec
bound
pop
cli
xor
inc
jg
fs
xchg
push
cli
mov
dec
mov
ja
mov
ljmp
sbb
punpckhwd
cmp
in
pop
jnp
icebp
add
movsb
xchg
inc
add
lret
and
je
test
jne
jecxz
sub
mov
mov
lods
pop
andb
jl
scas
push
aam
insb
and
xchg
mov
lret
mov
mov
sahf
jne
xchg
inc
sti
test
fdivrp
cmp
xchg
xchg
xor
mov
mov
lahf
iret
cmc
add
sbb
push
jmp
and
test
push
imul
bound
fnstenv
adc
pushf
lods
cltd
rolb
sar
shrb
pusha
sbb
lret
dec
in
mov
push
add
stc
rol
dec
mov
mov
lret
test
push
sbb
mov
pop
jecxz
fs
fiadds
repnz
aam
lcall
lock
mov
push
aam
xchg
jns
insl
adc
sbb
or
push
nop
pop
imul
adc
cwtl
dec
movsl
mov
fcomps
mov
cltd
cmc
jno
out
sbb
sarl
ljmp
cli
loop
je
bound
test
test
out
mov
adc
mov
push
push
sub
cltd
xchg
movsl
lcall
ds
mov
add
mov
repz
sub
imul
and
aas
sub
push
jmp
mov
dec
dec
and
cmp
lds
dec
pop
jge
insl
xchg
inc
dec
and
adc
stos
push
dec
sub
mov
aaa
js
jae
mov
lds
repz
ret
ljmp
dec
nop
hlt
or
xchg
mov
add
data16
add
into
lods
jns
shrl
xchg
jbe
fcmovnb
fnstenv
iret
adc
ja
scas
fnsave
call
and
inc
mov
je
fldt
dec
lds
sub
scas
mov
xor
lods
adc
adc
push
xchg
push
jecxz
pusha
xlat
outsb
inc
xchg
mov
pushf
data16
pusha
mov
andl
movsl
or
mov
pop
lret
les
mov
stc
dec
xor
push
dec
dec
cmp
daa
jbe
sub
xlat
stos
lods
xchg
imul
or
xchg
js
push
mov
shll
or
dec
inc
jecxz
rorl
mov
in
push
jmp
inc
inc
sbb
jl
mov
lods
jg
adc
mov
xchg
cltd
aad
sub
lods
and
add
notl
push
sub
lds
pusha
cs
lds
xchg
clc
dec
lea
sub
pusha
out
mov
xchg
cmp
sbb
gs
shll
dec
mov
fistpll
lods
xchg
mov
push
lret
mov
xchg
cltd
xchg
mov
sti
das
push
pop
jo
push
mov
jmp
sbb
jnp
sahf
mov
ljmp
imulb
iret
out
lds
mov
test
push
pop
mov
cmp
call
push
pop
lret
in
push
lea
js
scas
stos
cmp
dec
and
and
push
popf
fistpl
lods
mulb
inc
pop
hlt
xchg
dec
sahf
add
out
push
outsb
enter
dec
out
xor
leave
adc
cmp
int3
inc
sub
ja
dec
mov
add
inc
loopne
sub
dec
add
sahf
inc
and
ds
shll
mov
std
popf
add
ss
test
shrb
xor
hlt
and
outsb
xchg
ss
push
push
cmp
pop
xchg
xchg
push
jle
scas
mov
mov
push
or
lcall
rorb
mov
push
jp
cmp
xchg
jmp
fwait
pop
and
stc
lods
cmp
cwtl
shrl
cmp
mov
xchg
cmpsl
clc
push
mov
clc
xchg
std
cmp
icebp
out
fs
add
push
ds
pop
mov
scas
add
push
push
lods
fs
mov
dec
xlat
adc
sbbb
cmp
std
jge
xor
pop
or
jge
addb
js
gs
jge
iret
cld
gs
inc
xchg
ds
pop
mov
dec
pop
mov
push
loope
div
jae
ss
push
dec
repz
pop
stos
mov
mov
inc
adc
inc
scas
scas
mov
imul
ljmp
loopne
int
inc
push
jo
sub
inc
movsl
push
out
nop
adc
xlat
mov
cmp
cmp
mov
cmc
push
scas
ds
dec
mov
js
mov
xchg
and
jle
cmp
pushf
push
enter
lahf
imul
jle
shlb
mov
aaa
sbb
movsl
pop
pop
lea
imul
xchg
jle
xor
pop
or
push
insl
stc
xchg
fld
push
test
test
inc
sbb
and
lcall
xor
fnstsw
leave
mov
lods
jae
dec
dec
pop
mov
and
cmp
or
repnz
jecxz
icebp
sub
gs
pop
xchg
push
je
fldcw
jle
jle
push
sbb
mov
inc
rorl
add
cmp
stos
imul
pop
xchg
mov
cmp
mov
adc
ret
xor
or
daa
jo
xlat
pop
inc
mov
les
aad
dec
jmp
mov
push
jl
repnz
test
arpl
cli
adc
mov
adc
or
jg
dec
adc
sub
aad
mov
dec
loopne
inc
stos
test
push
orl
pop
jecxz
out
in
test
fnstenv
insb
movsb
sbb
ljmp
out
dec
add
inc
mov
xor
xor
push
fsub
sbb
aam
sub
add
cmp
cmpsl
cmp
icebp
bound
pop
cs
sbb
cmp
fnsave
test
in
out
jl
outsb
cmp
xor
je
push
out
jnp
and
les
sub
pop
xor
fs
push
arpl
jp
sub
and
mov
ljmp
mov
andl
mov
mov
mov
cmp
sbb
movsl
out
sub
sub
pop
sub
add
mov
in
mov
mov
ljmp
mov
ds
les
xor
lods
xchg
mov
sbb
orl
shl
fsubrl
imull
loopne
jp
jbe
out
fs
insb
push
mov
add
or
dec
mov
push
stos
in
mov
sbb
nop
imul
and
fstpl
push
std
cmp
mov
and
push
pop
pop
and
stos
popf
fcmovbe
sub
test
inc
test
shl
push
sbbl
cmp
imul
xchg
outsb
xchg
push
mov
out
out
cmp
mov
nop
nop
xchg
push
inc
pop
dec
shll
push
pusha
lcall
xor
mov
cmp
std
gs
xchg
adc
aaa
repz
into
push
dec
pop
mov
dec
jl
inc
and
push
cmpl
jo
in
jp
arpl
data16
out
rorb
jp
icebp
fabs
fcompl
daa
mov
pop
push
pminsw
std
icebp
hlt
arpl
dec
int3
adc
xor
pop
inc
shll
movb
and
dec
out
or
imull
aam
fs
sub
pusha
dec
jb
cmpsb
popf
mov
jle
out
jb
mov
xchg
sub
mov
xchg
sbb
movsl
or
popa
cmc
push
adc
stos
dec
testl
add
out
or
xchg
mov
es
mov
in
movswl
adc
rorb
xchg
pop
pushw
cmp
repz
add
mov
dec
xchg
dec
sarb
sbb
xchg
sbb
adc
pop
out
mov
fwait
shrb
jg
pop
cwtl
mov
gs
fiadds
sub
jp
loope
mov
push
mov
iret
leave
adc
cmp
pop
push
aas
jae
jbe
negl
pushf
repz
mov
rorl
fs
data16
fbld
mov
cmpsb
cmc
xor
lea
sti
repz
repz
pop
pop
inc
mov
sti
rolb
imul
and
stos
mov
and
sbb
push
fsubrl
shll
int
arpl
add
aam
and
mov
ds
stos
jecxz
pop
jb
fstl
pushf
add
pop
rol
mov
hlt
pop
xorb
bound
hlt
lcall
decl
jecxz
idivb
imul
fsts
test
xchg
sarb
pop
loopne
jp
dec
insl
xor
sub
inc
xor
push
popa
pop
add
repnz
pop
imul
mov
mov
pop
enter
enter
sub
mov
jp
mov
xlat
ja
fistpl
mov
push
rcrl
addr16
gs
push
repz
out
jbe
das
xor
adc
sbb
and
xor
rcrl
aam
inc
test
leave
mov
movsl
mov
pop
jge
cwtl
mov
xor
add
outsl
pushf
outsb
adc
add
int
lods
pop
add
xor
pop
jo
mov
add
orl
mov
mov
xlat
and
cmp
das
push
cmp
push
addr16
dec
call
rclb
push
out
fists
fcom
push
xlat
cmpb
xchg
fdivp
and
push
mov
icebp
cltd
stos
aad
push
and
xchg
daa
xor
fbld
into
popf
in
inc
or
inc
aas
iret
aam
mov
cmp
fidivs
adc
add
push
push
repz
aas
ret
jb
mov
gs
xor
jne
ds
jge
push
sbb
mov
cld
cmp
out
gs
sti
add
cmp
ds
ret
arpl
outsb
pop
aas
fucomp
push
push
xor
sbb
and
sub
cs
loop
xchg
inc
cmpsb
fildll
pop
mov
jle
push
push
cmpsl
hlt
mov
lret
push
mov
pop
into
jp
js
gs
dec
pop
lea
cwtl
imul
lock
orb
add
iret
jmp
cmpsl
jle
mov
mov
adc
orl
or
and
jnp
jl
sahf
jle
mov
xor
aas
out
dec
stos
sub
test
lret
mov
in
mov
scas
andl
pop
aaa
inc
mov
ficoml
fs
jbe
mov
fnop
add
or
fildl
sbb
sarl
inc
aam
lcall
mov
fists
cmp
inc
movsl
aaa
cmp
repnz
mov
in
mov
js
mov
aad
cwtl
xlat
sub
mov
insl
mov
mov
insb
gs
pusha
aaa
dec
pusha
xlat
dec
dec
stos
outsb
out
dec
popl
push
sub
sub
jb
xchg
jecxz
mulb
cmp
adc
or
xor
mov
pop
sti
repnz
or
dec
push
ret
xchg
jge
test
addr16
inc
les
xchg
out
mov
xchg
sbb
jbe
shlb
mov
mov
pop
jle
mov
movsl
push
into
scas
sub
test
fldenv
cmp
jne
and
inc
inc
out
xchg
mov
push
dec
mov
add
arpl
pop
es
insb
data16
xor
lcall
cmp
aam
dec
rorl
mov
popa
or
dec
stc
jmp
jo
dec
stc
insb
inc
push
sti
lea
push
push
pusha
push
push
mov
shl
inc
inc
sub
mov
add
xchg
les
mov
mov
sbb
dec
fnstcw
imul
jmp
dec
fimull
push
push
loope
lahf
and
xchg
mov
mov
jne,pn
pop
inc
xchg
adc
lods
ds
jg
aam
xor
lret
or
fldl
push
rcr
jns
popf
stc
test
mov
mov
repz
sbb
fisttpll
or
mov
push
gs
cmc
inc
xchg
ret
jl
jl
mov
mov
add
or
jo
test
xchg
je
testl
nop
mov
loop
and
enter
and
mov
dec
fwait
push
xchg
jmp
pop
outsl
and
and
sahf
xchg
mov
mov
push
push
jl
mov
adc
mov
adc
add
hlt
push
adcb
data16
sub
and
imul
xor
and
mov
mov
xor
xchg
clc
dec
test
xchg
push
push
sub
inc
jmp
cmp
and
or
ja
add
xchg
mov
and
stos
mov
push
rorl
inc
push
adc
dec
insb
mov
sub
jno
out
and
and
outsb
imul
add
es
add
movsb
ret
ss
outsl
shr
dec
add
adc
add
push
or
jnp
inc
cs
jl
jnp
cli
adc
sbb
sub
out
mov
fdivrl
aaa
cwtl
mov
sub
into
mov
push
jge
cld
mov
aas
mov
cltd
ljmp
push
jecxz
je
movsl
pushl
lret
push
addr16
or
daa
jle
ret
jnp
ljmp
mov
xchg
push
pop
outsb
test
jo
inc
mov
testb
int
sub
fistl
dec
cmpsb
push
push
sbb
jg
outsl
push
or
lahf
fdivrl
adc
push
mov
cwtl
popf
outsl
dec
js
aad
cmp
sbb
or
jle
adc
mov
jns
shlb
into
dec
or
xor
ret
or
arpl
sbb
cmp
jg
pop
mov
fldz
loope
ret
sbb
push
out
jo
div
xor
mov
xlat
cvtpi2ps
cmp
jl
addb
xchg
hlt
movsl
adc
call
ret
add
call
sarl
test
sbb
arpl
test
dec
test
ret
mov
daa
push
adc
popf
xor
pop
sub
jg
mov
in
sbb
push
xchg
lcall
mov
movsl
adc
outsb
rcrl
jne
inc
jb
add
xor
push
pop
add
sbb
jp
shlb
pop
test
in
cltd
sbb
jb
pop
xor
dec
cmp
shlb
movl
or
fists
mov
mov
xlat
test
dec
fstps
jae
movups
mov
fadds
insl
das
mov
adc
xor
out
push
push
push
cmp
arpl
addr16
mov
mov
push
test
pop
xchg
xlat
adc
cltd
movsl
push
outsl
stos
pop
cs
pop
xchg
sub
into
jne
cmc
cmp
jmp
jb
sub
adc
or
and
pop
mov
fisttpll
nop
fsubl
cltd
adc
and
xor
repnz
push
push
inc
hlt
and
xchg
sahf
rcr
mov
and
ja
fwait
outsl
stc
dec
lods
add
add
adc
pushf
sbb
lahf
sub
aad
ds
xor
push
dec
lds
rolb
in
adc
sub
jg
sbb
aam
or
adc
adc
push
js
int3
cmpsb
sbb
cmp
cmpsb
cmp
and
jns
xlat
dec
or
orb
gs
dec
mov
mov
ret
cmp
xchg
mov
sbb
sbb
adc
arpl
repz
sub
cld
shll
xor
sbb
mov
shll
dec
fildl
outsb
xor
movsb
icebp
ds
subl
lds
imull
orb
mov
xchg
xchg
push
adc
in
inc
cmp
aam
cs
je
mov
mov
fs
jl
sub
push
sub
scas
pop
dec
rclb
inc
xor
mov
dec
les
push
xchg
aam
bound
fnstsw
inc
or
sbbl
adc
sub
test
es
ljmp
rcll
lcall
cmc
push
test
inc
dec
inc
jge
shl
stos
inc
mov
popa
push
xor
xchg
or
lock
fistpl
pushf
faddl
lea
pop
sbb
daa
call
mov
jle
mov
rclb
xchg
jp
inc
and
pop
outsl
leave
imul
jno
xchg
fsub
outsb
inc
jmp
xchg
pop
loopne
xor
stos
sbb
out
ficoml
daa
ret
mov
or
addl
mov
shrl
xlat
and
lock
loope
xor
push
test
scas
sub
mov
or
outsb
push
mov
fdivrs
jecxz
mov
mov
in
sahf
fadd
loope
push
pop
fsubrs
inc
call
jl
and
out
cmc
insb
into
mov
icebp
xor
xor
add
out
dec
xchg
mov
cmp
fs
dec
jne
add
jno
jo
and
int3
pusha
add
mov
mov
fs
adc
push
insb
fwait
loop
int3
leave
sti
xchg
icebp
jmp
add
es
mov
add
or
push
jp
sbb
and
enter
jmp
int3
xor
lret
push
jno
xchg
mov
std
sub
mov
add
cmp
xchg
mov
mov
sub
ljmp
fildll
leave
cmc
push
outsb
cmpsl
cmc
push
inc
pusha
cmp
mov
fiaddl
xor
xchg
repnz
imulb
jnp
insb
int3
mov
xor
out
adc
aam
and
cmp
or
cmp
inc
xchg
dec
xor
jl
es
jae
andb
xchg
lcall
xor
movsb
lods
fucomp
lret
lret
xchg
jmp
push
loopne
in
js
sub
mul
mov
inc
adc
js
pop
in
dec
das
push
push
pop
push
xchg
sbbb
lret
and
mov
test
nop
sub
test
divl
test
test
xchg
adc
xor
repnz
push
dec
movsl
popa
mov
inc
das
std
mov
lock
jp
jno
cmc
mov
sarb
rol
pushf
in
icebp
inc
xor
out
lods
sub
mov
inc
dec
rorl
push
fnstcw
cs
push
lcall
push
cwtl
test
cmp
adc
jecxz
mov
add
cli
shlb
sub
in
jmp
imul
jae
sub
lret
jp
push
daa
arpl
test
cli
inc
push
sub
sbb
repz
or
xchg
out
cmp
shll
sbb
push
cmp
in
push
mov
xchg
outsl
pusha
nop
das
jno
nop
arpl
push
fs
out
jg
xchg
addl
fsubp
inc
test
cmpsb
mov
xchg
pop
sbb
aad
xor
push
push
insl
sbb
xchg
cmp
mov
cmp
outsb
daa
or
pusha
mov
mov
fstps
or
xor
inc
dec
sub
test
stos
dec
outsl
jg
lods
push
movsb
jmp
fldenv
mov
fisubs
cmp
xchg
dec
mov
mov
lcall
pop
or
mov
and
sbbb
pop
cmpsb
inc
add
or
sbb
adc
jnp
pop
lea
sbb
ss
add
loopne
outsb
insl
xor
dec
sti
jmp
pop
push
add
dec
jecxz
add
sbb
into
hlt
push
push
nop
in
mov
lods
cmp
sub
and
pop
and
sbb
out
iret
loop
adc
icebp
mov
jnp
xchg
movsl
xor
in
mov
jns
sbb
push
sti
fstp
daa
movsl
mov
xor
ss
fimull
lcall
icebp
xchg
add
inc
dec
jge
mov
fdiv
sahf
rorb
adcl
and
mov
inc
sbb
shll
in
shrb
arpl
sbb
xorl
sub
push
pop
cmpsl
icebp
pop
scas
test
mov
xlat
jl
cli
mov
mov
lahf
in
test
pop
pop
sub
addr16
rol
inc
pop
outsl
loopne
and
je
fs
gs
xchg
push
pop
cmp
lahf
test
cmpsl
mov
das
push
inc
xchg
js
aam
inc
add
mov
adc
pop
sbb
ss
pop
mov
lods
cmp
ret
cmc
sbb
out
fsubp
in
aas
bndldx
cmp
sbb
cmp
xor
xchg
mov
mov
mov
inc
ljmp
add
inc
pop
adc
sahf
or
and
mov
push
dec
xchg
aas
mov
ret
cmp
shl
fs
loope
xchg
add
int3
xchg
cmc
pop
inc
sbb
lret
cmc
test
or
loope
fsubs
rorl
into
or
jbe
adc
adc
inc
jne
push
mov
sub
outsl
or
cmc
pop
ficoms
clc
jge
dec
sub
pop
fcmovbe
mov
int3
cmp
pop
insb
iret
shll
cli
outsb
dec
cld
in
and
xor
fcmovnbe
adc
push
pop
addr16
lea
ja
dec
aad
mov
dec
icebp
nop
loop
jo
aad
and
dec
add
mov
mov
jecxz
inc
fists
fldt
xlat
sub
mov
mov
and
fstpt
jmp
dec
and
mov
sbb
xchg
mov
inc
shlb
cmp
lcall
adc
fs
movsb
ficoml
bound
mov
cmp
jb
inc
ss
stos
xor
rcl
add
fcoms
mul
daa
clc
rorl
add
in
push
fimull
sbb
dec
in
je
cli
or
cmp
movsl
inc
pop
inc
pop
push
into
cmp
lock
dec
mov
and
test
cmc
repz
lds
sbb
sub
inc
daa
rcrb
pop
inc
lahf
cld
nop
push
push
int
mov
lds
mov
inc
xlat
pop
sbb
cmp
stos
in
dec
repz
sub
xchg
mov
mov
sbb
cmp
pop
mov
sub
cmp
ffreep
mov
lahf
pop
push
cwtl
sarl
push
lods
aaa
lret
inc
pop
mov
ss
shrb
bnd
xchg
iret
pop
lret
dec
iret
pop
xor
popf
js
loope
pop
push
stc
mov
rolb
popa
out
pop
or
outsl
outsl
pop
cli
dec
lods
inc
mov
push
mov
movsl
xor
adc
stos
dec
xchg
loope
test
inc
or
add
dec
cli
inc
lahf
int3
sbb
adc
out
jo
pusha
cli
outsb
bound
ret
inc
les
dec
lods
adc
inc
outsl
sbbb
fidivs
ss
cltd
mov
bound
xchg
test
inc
mov
imul
push
lahf
je
sbb
add
movsb
ljmp
pop
xchg
inc
in
pop
cmp
push
or
push
dec
cld
mov
add
cmp
pop
mov
clc
cwtl
scas
or
sti
dec
cmpsb
outsl
mov
mov
lods
sti
scas
pop
mov
lret
int3
xchg
movsl
lds
add
jae
push
jmp
xor
daa
ds
shrl
xchg
ds
jmp
scas
shrl
repnz
bound
mov
and
stos
dec
in
xor
leave
nop
xchg
int
repz
xor
add
jb
addr16
sahf
cmp
repnz
pushf
not
mov
ljmp
div
sti
outsl
xchg
and
inc
ffree
xlat
fistpl
lds
ret
enter
in
sbb
aad
es
iret
mov
pop
fildl
scas
js
ret
and
xlat
repz
or
cltd
jl
or
in
push
jmp
aam
push
pusha
jle
cmp
sub
mov
mov
xor
cmpb
cs
mov
jne
test
lahf
cmpsb
outsl
jnp
dec
jae
jno
inc
in
out
das
xchg
cld
ds
add
or
dec
mov
mov
add
imul
in
shrl
cs
pusha
add
in
pop
jecxz
les
rorb
je
cmc
into
jge
out
cmc
xchg
and
xlat
cmpsl
test
adc
push
xchg
call
push
fbld
aam
and
testl
xchg
push
mulb
add
xor
out
adc
in
int3
movsb
xchg
dec
mov
xor
jb
sti
pop
inc
mov
les
xchg
lret
mov
cmp
push
movsb
dec
or
inc
stc
nop
ret
mov
sbb
pop
or
sarl
xchg
int3
in
ds
or
jb
mov
or
loope
adc
xor
repz
mov
in
sub
pop
gs
out
lea
addl
adcl
jo
pop
insb
loopne
push
pop
dec
cltd
dec
jbe
adc
mov
iret
cmpsb
mov
or
lret
adc
sub
inc
xchg
nop
cltd
mov
test
in
cmpsl
xor
add
cmp
mov
stos
pop
pop
dec
inc
push
add
insl
mov
shlb
rol
mov
testb
pushf
inc
test
xor
add
adc
bound
stc
xor
xor
jmp
loopw
shll
mov
in
push
mov
and
sbb
push
xor
push
cld
dec
stc
lea
nop
and
and
inc
enter
lea
leave
and
push
push
daa
inc
mov
test
into
mov
int3
sbb
pushf
inc
int
int3
adc
jo
push
imul
les
loopne
xor
lods
xchg
mov
xchg
repz
push
push
mov
inc
or
sbb
cs
sub
lret
cmpl
addr16
subl
out
mov
insl
xchg
mov
ret
in
pop
daa
pop
test
and
jno
ss
sbb
cmp
jno
dec
fstp
rcl
fisubl
lret
mov
ret
popa
imul
sbb
lea
push
jle
inc
rcl
mov
sub
fbld
scas
xor
lock
jns
cmp
sbb
rolb
cmpsb
es
scas
push
or
pop
push
mov
cmp
mov
sbb
pop
roll
imul
movsb
dec
and
testb
shlb
sti
stc
outsl
pop
pusha
push
cli
mov
leave
mov
ret
sbb
push
sub
adc
out
cli
idivl
dec
push
andl
cld
fldl
cwtl
lret
cmpsl
lahf
je
dec
push
xchg
roll
adc
movsb
scas
adc
cmp
jo
lret
xorl
mov
into
pop
pop
in
cmp
sti
cmp
push
sub
sub
test
jnp
data16
outsb
xchg
roll
push
adc
aas
call
sbb
insb
mov
mov
loope
test
int
sbb
adc
add
ds
pop
jno
lret
cmp
pop
imul
out
mov
mov
nop
mov
xchg
inc
out
xor
cmp
inc
xchg
inc
mov
aas
ret
fmuls
std
mov
push
adc
enter
mov
mov
dec
cmc
orl
fcomps
jge
stc
inc
insl
fdivs
jno
cmp
inc
or
mov
fwait
addr16
pop
add
push
aas
or
mov
jmp
or
rorl
mov
sub
dec
pop
cli
dec
lahf
cmp
dec
add
pushf
jg
xor
and
testl
push
or
add
lret
mov
pop
orl
push
gs
push
out
push
mov
lea
cld
mov
push
inc
pop
in
cmp
sbb
movsl
add
nop
dec
fwait
jge
xchg
jmp
jp
push
pop
mov
cmpsb
repnz
adc
idivb
pop
pop
xchg
pop
jnp
add
aam
cld
pmaxsw
dec
push
lret
arpl
mov
std
hlt
fwait
cmp
dec
out
adc
addb
cmp
aam
leave
rorl
xchg
call
cwtl
mov
jb
out
in
mov
fildl
sti
insl
test
fldl
lods
push
adc
sbb
sbb
cmp
adc
loopne
test
jb
adc
inc
cwtl
sbb
ds
aaa
cmp
add
lods
jns
pop
adc
push
popf
mov
and
ss
pop
test
cs
iret
lcall
notb
loopne
aaa
dec
loope
arpl
je
fwait
scas
cmp
js
testl
fs
mov
sbb
sbb
mov
push
mov
das
in
test
xorb
fxch
cmp
add
stos
ss
call
add
out
add
and
mov
movsl
ret
dec
jmp
push
test
xlat
sarl
aas
pop
mov
xor
clc
sbb
or
mov
pop
adc
nop
mov
shrl
or
pop
and
dec
sub
test
je
aaa
jo
adc
mov
ja
mov
mov
hlt
lcall
mov
adc
or
stos
repz
adc
fisttpll
sub
decb
imul
lcall
pusha
xchg
sbb
and
mov
fwait
push
pop
jge
in
cmp
ja
lcall
test
pushf
shl
scas
scas
jmp
adc
rorb
outsl
push
dec
roll
cmpsl
and
jne
addb
xor
cmp
imul
das
xor
iret
pop
movsb
lods
jnp
sarb
add
stos
pop
jo
add
jnp
xlat
xlat
mov
clc
xor
dec
out
je
sbb
repnz
roll
cld
dec
movsb
lea
pop
jg
movsb
fsub
dec
push
inc
mov
sbb
sub
movsl
sub
push
mov
int3
inc
aaa
outsl
jb
mov
ss
or
xor
xor
and
loopne
add
pop
mov
movsl
fidivl
std
push
mov
or
or
cs
test
jno
push
daa
idivb
jns
mov
mov
pop
dec
into
fs
aaa
adc
fldt
mov
sbb
sub
cmpsb
sahf
int3
shrb
negl
dec
adc
jg
scas
bound
push
mov
scas
test
das
pop
mov
rorb
leave
mov
jbe
out
mov
xchg
and
sub
mov
and
add
push
es
icebp
xchg
pop
mov
xor
jne
xrelease
mov
pop
popf
xchg
push
inc
mov
mov
lock
lea
mov
rcrl
lods
or
push
incb
imul
mov
sub
scas
rcl
repnz
jne
cmp
xor
inc
fsubrl
xor
lar
dec
add
push
orl
cmp
sahf
xor
and
fiaddl
jle
ret
pusha
rcrl
pop
jle
ret
pop
push
popa
stos
xchg
por
sbb
in
mov
int
pop
sbb
rorl
in
dec
jp
fwait
or
or
idiv
jns
loop
jns
aas
rcr
test
add
inc
push
mov
xor
aad
dec
rcrb
jmp
jmp
es
push
xchg
je
adc
inc
mov
inc
pop
mov
andb
pop
subb
jp
pop
pop
or
fisubl
or
mov
jb
ss
out
or
clc
fisubs
loopne
cltd
stos
push
in
pusha
and
bound
push
inc
insb
adc
pshufw
pop
sub
mov
insl
imul
sbb
mov
push
roll
mov
cmp
addb
stc
fs
imul
pop
push
mov
or
or
push
mov
stos
fcompl
ja
popa
popa
dec
out
je
daa
fiaddl
cmp
sahf
mov
adc
push
imul
sbb
dec
out
mov
ja
jle
lock
push
or
aaa
and
insb
aaa
fwait
add
push
xchg
push
dec
jmp
add
mov
add
jge
push
mov
mov
sbb
data16
ja
xor
imul
xor
dec
aaa
mov
out
les
and
add
mov
mov
orl
in
and
daa
lods
out
xor
xor
or
dec
out
dec
jns
loope
sub
mov
push
sti
push
popa
ja
lods
cmp
mov
mov
or
ss
inc
lds
inc
in
jge
push
out
or
repnz
les
mov
mov
pop
pop
repnz
cmp
sub
mov
adc
sub
pop
cmpsb
mov
loop
xchg
push
decl
pushf
dec
jmp
icebp
fists
sahf
mov
cmpsb
mov
pop
lods
inc
push
xor
xchg
je
sub
inc
cld
inc
mov
mov
jae
mov
push
xchg
cmp
adc
andb
cmp
push
das
jnp
xchg
aas
mov
lods
pop
mov
jle
jle
or
sbb
mul
dec
imul
movsl
pop
jmp
xchg
sub
dec
mov
mov
outsb
stc
das
mull
xor
jge
sbb
aad
cltd
adc
mov
mov
repz
inc
roll
mov
mov
inc
push
inc
test
aad
loope
add
aas
adc
mov
jae
mov
pop
inc
mov
push
push
push
pop
sbb
dec
sub
pop
cwtl
lea
jge
mov
insb
lds
push
div
js
mov
out
xor
dec
orb
stos
sub
aad
sti
lret
pop
fstl
test
or
iret
clc
je
mov
or
cmp
into
sbb
test
mov
aas
fsubl
push
testb
and
out
adc
jb
pop
and
adc
icebp
xchg
leave
push
in
pop
sti
pop
lock
sbb
push
sub
test
int3
ja
out
sub
aad
xchg
rorb
mov
inc
clc
xchg
psllw
ficoml
adc
or
fstpl
cmpsb
nop
lds
jo
xchg
jbe
jmp
imull
out
movsl
inc
test
aam
pushf
xchg
aas
stos
jbe
movsl
mov
mov
jb
dec
lods
leave
pop
xor
stos
mov
mov
mov
retw
in
jl
add
jb
or
xchg
xor
cli
add
js
inc
adc
bound
popa
stos
adc
out
jp
jg
movb
scas
mov
adc
jb
in
out
jmp
mov
outsl
mov
push
inc
fnstcw
frstor
mov
jbe
mov
mov
xchg
lea
rol
lea
dec
adc
aam
movsl
mov
xchg
fbld
xor
dec
ss
divb
cmc
mov
loope
fcompl
xlat
xchg
fcompl
cmc
xchg
pusha
push
jo
sbbb
pop
sbb
adc
xchg
push
cmp
push
cmp
mov
cmp
rorl
test
cmp
repz
dec
xor
add
mov
outsb
scas
sbbl
leave
es
rol
sbb
and
xchg
dec
lds
and
mov
jmp
push
mov
fdivl
daa
jns
dec
push
clc
fwait
mov
xchg
dec
push
cmpsl
push
and
int
cmp
mov
mov
mov
cs
pop
xchg
rorl
in
sub
jo
mov
push
mov
int3
mov
mov
mul
mov
add
mov
mov
dec
aas
shlb
dec
fstl
mov
adc
jae,pt
jg
sbb
dec
push
jbe
fwait
or
mov
lea
mov
and
xchg
mov
scas
inc
ljmp
pop
sbb
aam
pop
cltd
adcb
sbb
andb
push
and
data16
sahf
or
xor
bound
mov
lcall
push
in
xchg
arpl
scas
insb
fbld
xor
push
mov
xchg
insb
sbb
sub
pushf
mov
fsub
sub
insb
es
xor
xchg
test
stc
add
aam
sub
pop
inc
loop
sub
inc
and
leave
test
inc
jns
mov
pop
stos
cmpsw
xchg
mov
clc
pop
add
orl
push
mov
add
mov
lret
leave
mov
movsl
in
ret
out
xchg
bound
xor
push
sub
fidivrs
les
cltd
outsb
xor
pop
push
pop
pop
dec
jmp
insl
fucomi
sbb
cmp
jne
sub
sarb
je
sbb
push
mov
or
xchg
push
jecxz
mov
std
sbb
ret
pop
addb
scas
pop
imul
call
movsl
out
out
adc
fmuls
dec
sub
int3
xchg
and
outsb
test
imul
addr16
pop
xor
test
push
lock
push
sub
and
into
adc
cmp
mov
dec
cs
or
dec
push
ret
dec
leave
push
adc
push
imul
ljmp
vmovss
jne
dec
mov
inc
pop
xchg
imul
nop
inc
xor
in
cmc
sub
loopne
nop
es
add
mov
sahf
out
xchg
mov
cmp
mov
push
gs
aas
pop
mov
add
jp
adc
mov
or
adc
insl
stc
ds
outsl
insl
or
sbb
in
pop
fcoml
sub
jg
ret
imul
mov
pop
xor
fnstsw
fmulp
jge
add
xor
xchg
mov
scas
in
les
jg
xchg
jno
addr16
test
fwait
pop
loopne
test
mov
in
in
mov
mov
mov
sti
repz
lret
mov
int3
in
or
add
stc
pop
xor
out
stc
sub
pusha
push
mov
xor
push
or
sbb
loope
lret
aaa
cmc
lods
mov
sub
xlat
hlt
popf
rclb
es
ljmp
imul
jp
mov
sub
mov
cld
mov
loop
mov
orl
dec
pushf
out
test
stc
inc
lret
push
mov
or
insb
les
imul
clc
mov
repz
xchg
test
add
shll
mov
jmp
sub
push
mov
hlt
pop
mov
test
cli
lods
sub
loop
push
popf
mov
sbb
jecxz
xchg
sub
aas
leave
data16
and
ret
mov
push
fs
fstpt
lcall
push
data16
push
sub
jb
mov
inc
pop
outsb
addl
dec
or
lods
lods
lds
or
push
add
push
ds
insl
faddl
mov
mov
cmp
insb
adc
js
cmp
sbb
subl
dec
cvtdq2ps
dec
jnp
mov
orl
add
ret
dec
pop
cmc
imul
in
sbb
or
das
dec
out
jecxz
movsl
pushf
and
pop
int3
push
stc
xor
test
outsb
repnz
jnp
xor
mov
ljmp
xchg
jb
and
daa
and
push
outsl
sub
jae
sub
xchg
mov
in
int3
cmp
dec
xor
sbb
aas
fisttpl
ds
stc
arpl
xor
sarb
xlat
jne
out
adc
pop
dec
mov
leave
or
out
cmp
mov
inc
scas
test
hlt
fbstp
cmpsl
jb
mov
imul
scas
psubd
pop
xchg
mov
call
push
test
xchg
adc
xchg
in
mov
movsb
repnz
shl
idivl
fmulp
les
movsb
push
rclb
sbb
outsb
mov
clc
movsb
insl
pop
mov
outsb
orl
sub
add
pop
pop
rcll
jge
mov
mov
push
sbb
jg
push
mov
mov
inc
js
lds
iret
inc
jle
xor
inc
xlat
out
fcmovne
cmp
push
mov
daa
imul
pop
incb
xchg
rcrl
pop
mov
mov
cli
add
sahf
fbld
into
dec
xchg
aam
sbb
out
jno
icebp
inc
mov
or
cltd
and
popf
mov
popa
jb
ljmp
jno
lea
pop
cld
cmp
lcall
or
cmp
daa
cmp
dec
loope
int3
das
adc
and
fs
pop
xchg
jb
mov
rcll
cmp
push
jmp
mulb
adc
adc
sbb
add
lret
ss
and
fisttpll
xchg
das
icebp
mov
fsubs
pop
or
pusha
int
nop
sbb
ds
mov
out
int
pop
mov
pop
mov
hlt
sahf
add
push
sbb
xchg
popa
or
jns
daa
pusha
jp
jmp
jge
add
clc
inc
outsl
ret
or
aam
inc
pop
adcb
or
and
frstor
addr16
cmpsb
mov
push
pop
outsl
add
and
push
sbb
cmp
jnp
mov
inc
mov
shl
imul
cmp
inc
inc
loopne
aaa
into
mov
test
fcmovnb
push
test
fnstsw
es
and
cmpsb
test
fistpl
repnz
bound
mov
jmp
mov
cmp
iret
xor
or
mov
test
repnz
add
xor
bound
movsb
push
ja
pop
dec
xchg
adc
cmp
mov
or
jno
lcall
bound
test
test
jge
mov
mov
sarl
out
rcr
popf
xor
jbe
scas
dec
xchg
out
mov
jo
mov
mov
adc
ret
imulb
jmp
pop
sub
mov
cmp
jp
and
imul
push
test
out
mov
pop
jl
xchg
out
aad
mov
test
lea
mov
xor
sbb
mov
jo
pusha
loope
or
mov
xchg
cmpsb
cmpsb
sub
repnz
lea
and
lret
mov
jecxz
sti
scas
insb
cs
mov
test
movsb
ss
and
mov
fs
shlb
xor
cmp
inc
in
loope
jle
jae
dec
js
aaa
sub
aam
sbb
sub
loop
mov
xor
dec
dec
lret
pop
pop
movsl
or
sub
rorb
jb
insl
mov
icebp
lds
mov
pop
pop
xchg
push
mov
jmp
in
outsb
outsb
mov
fsts
cli
shll
sbbb
inc
mov
test
sub
into
cmp
cltd
sti
cmp
mov
out
push
cmp
mov
fcompl
and
out
jns
mov
jge
js
inc
popa
push
add
lahf
xchg
inc
inc
push
sub
js
mov
leave
jecxz
inc
sbb
mov
pop
sbb
mov
cmp
pop
mov
xor
dec
sub
in
mov
mov
hlt
stc
popa
sbbl
sub
xor
stos
imul
loop
enter
test
lea
loope
and
mov
repnz
lods
addr16
xchg
in
subb
push
adc
xor
push
stc
adc
outsb
lock
lahf
sarb
std
sub
int3
xchg
inc
std
lock
aaa
or
fs
lret
movsb
or
sub
lahf
stc
sub
subb
lcall
pop
jp
mov
push
adcl
cltd
ja
xor
cmp
add
xchg
out
mov
mov
mov
clc
inc
jmp
xchg
sahf
and
cmp
adc
add
nop
cmp
dec
cmpsb
dec
and
out
scas
imul
push
jmp
and
xchg
inc
aam
sub
dec
daa
jecxz
mov
pop
jg
mov
jl
insb
testl
sbb
jne
sub
xor
jb
ds
jl
add
mov
sbb
lahf
push
jecxz
sbb
shl
rcrb
pop
inc
dec
js
ds
lahf
push
je
xor
dec
xchg
lock
mov
into
insb
and
or
dec
or
fxch
mov
idiv
jne
addr16
push
gs
daa
inc
add
cs
xor
pop
jp
in
clc
jmp
ds
outsl
andl
mov
xor
cmp
mov
adc
jmp
adc
sbb
cmp
cmc
sub
mov
dec
std
or
jmp
jge
outsl
pop
outsl
cltd
bound
adc
cmp
out
adc
sbb
insl
mov
ret
xor
int3
mov
vpcmpeqw
lock
jno
call
int3
sub
outsb
fstpl
push
xchg
push
in
test
xchg
jg
and
adc
ss
fwait
cmp
loopne
gs
std
mov
or
shlb
and
std
pusha
mov
pop
out
dec
lods
push
outsb
fs
aaa
negb
movsb
fnstenv
mov
mov
sub
adc
lods
mov
ret
lods
dec
addb
cmp
cli
shl
out
addr16
shrl
pop
imul
mov
inc
add
jbe
xor
lcall
adc
push
loope
pop
out
pop
lcall
dec
mov
and
mov
xchg
and
adc
and
adc
jl
arpl
xchg
xlat
test
insl
jnp
inc
pop
sbb
cmpsl
pop
jecxz
or
pop
cmp
mov
mov
sub
outsl
insl
out
jl
lcall
sahf
push
in
xlat
dec
cs
cmp
xor
push
or
repz
scas
enter
xchg
mov
add
sar
repz
mov
bnd
dec
inc
mov
mov
fsubr
mov
cmpsb
stos
scas
xchg
dec
lea
out
pop
fidivs
pop
mov
mov
jge
mov
jns
xor
sub
xchg
or
dec
inc
xor
sarb
orb
cmp
lock
and
out
pop
outsb
jmp
loopne
dec
insb
and
iret
mov
mov
es
hlt
rcrb
gs
popf
mov
pop
cmp
mov
je
cwtl
pop
test
push
aas
pop
into
mov
ss
mov
push
dec
inc
out
xchg
sbbl
xchg
sti
mov
fnstsw
adc
xchg
adc
lret
lods
test
inc
test
sub
mov
pop
jmp
gs
aam
mov
lcall
aas
pusha
stos
xor
push
imul
jae
xor
mov
xchg
mov
add
push
mov
dec
fistps
push
into
inc
jbe
pop
shr
mov
fbstp
repnz
loope
test
push
xchg
jns
loop
sub
mov
fldcw
or
add
rorb
cmpsl
inc
lret
or
out
mulb
mov
iret
adc
sbb
idiv
in
fisubrl
cli
loopne
mov
std
fildl
and
out
fwait
sahf
and
mov
push
nop
lret
pop
cld
imul
add
xor
cltd
jl
adc
in
in
and
sbb
out
scas
inc
xchg
add
cmp
js
jne
dec
cltd
push
fs
push
cli
add
jl
test
sar
inc
out
dec
int
insl
shrl
lods
pop
push
and
aad
cmp
lcall
in
mov
xor
push
sets
pop
jne
ja
lahf
xchg
jp
push
jb
popf
and
add
mov
mov
mov
icebp
lret
ljmp
stos
xchg
xorl
and
inc
add
sbb
xor
mov
mov
les
hlt
jmp
push
mov
adc
xchg
stc
loopne
out
sbb
jg
fistps
popa
arpl
mov
sti
inc
scas
imul
dec
mov
into
sub
mov
popf
out
sub
pop
loope
ds
test
sahf
and
daa
movsb
popa
inc
pop
sbb
je
scas
mov
xlat
sbb
pop
loope
adc
fs
daa
jbe
daa
aam
push
ficoms
shrl
mov
jecxz
ds
inc
mov
fdivl
scas
mov
push
fisttpll
fistpl
sub
in
iret
addl
fimuls
push
sub
cmp
sarb
aas
cli
cmp
mov
pop
adc
cmpsb
and
adcb
ficomps
fmuls
xchg
mov
popf
xchg
sbb
pop
fiaddl
push
enter
sbb
inc
sub
mov
sbb
xchg
mov
adc
popf
fistps
jno
cli
cli
lret
addr16
rclb
in
xor
dec
mov
sbb
pusha
mov
data16
jae
and
mov
or
add
outsb
es
push
es
scas
popa
dec
jnp
lea
mov
lods
push
dec
repz
add
pop
ret
adc
jo
sbb
nop
cmp
mov
lods
in
sbb
loopne
push
and
arpl
imulb
jl
mov
roll
xor
jnp
xor
fsubr
add
scas
jno
outsb
pop
adc
fsubrl
scas
sub
pop
addr16
gs
imul
sub
xlat
mov
jnp
mov
bt
iret
cmp
sbb
jbe
enter
push
sti
push
leave
loope
shll
jo
jl
pop
and
mov
dec
inc
mov
xchg
jo
fidivrl
or
in
mov
lcall
jno
sub
push
mov
vcvtdq2pd
out
jne
out
dec
decb
jge
fmulp
out
fcoml
clc
cmp
and
stos
pop
aad
fisubl
mov
test
in
jle
mov
mov
jbe
outsl
add
mov
in
stc
sub
mov
popa
fdivrp
cmc
adc
out
fmuls
push
sbb
cmpsb
xchg
sbb
jae
decb
add
repz
mov
scas
fisttpll
jmp
cld
sbb
pop
jne
insb
movq
pop
xchg
push
or
es
out
aaa
repz
mul
inc
das
test
add
lcall
fists
adc
cld
lock
sahf
cltd
dec
mov
dec
jnp
or
jo
cli
lods
and
xor
mov
gs
mov
jl
aam
adc
insb
pop
movsb
xor
xor
fcmovnb
das
addr16
push
aam
adc
xlat
push
mov
xor
pop
popa
out
aad
test
aaa
bound
or
testb
add
pop
mov
push
enter
inc
icebp
mov
mov
int
sbb
loopne
loop
and
adc
jle
add
add
inc
fnsave
nop
cmpsl
sub
and
mov
push
push
stc
arpl
push
cltd
mov
out
mov
mov
addb
in
loop
outsb
mov
lock
add
cmpl
adc
aas
sbb
and
loopne
mov
aad
pop
pushf
mov
add
aam
sub
jge
lods
xor
aas
sbb
into
cwtl
mov
mov
mov
inc
adc
popf
xchg
dec
int3
cld
stos
or
push
mov
adc
sbb
xlat
mov
data16
cmp
aaa
mov
jns
ljmp
xlat
insb
add
out
imulb
pusha
lods
enter
xchg
cmp
xchg
mov
xchg
xor
cmp
jmp
push
xchg
inc
lock
add
xchg
icebp
icebp
pop
int
loope
fwait
imul
cmpsb
into
ficoms
jmp
repz
jbe
imul
popf
pop
push
shlb
mov
cmp
mov
imul
inc
hlt
filds
mov
mov
into
test
add
xor
les
adc
xlat
mov
call
fdivrp
aas
pop
call
mov
push
mov
mov
xchg
pop
pop
add
stos
rcl
push
adc
fildl
aam
pop
mov
jo,pn
in
cmp
and
pop
outsb
dec
pop
jmp
data16
stos
loopne
or
adc
pop
sub
pushl
sbb
std
repnz
test
test
lds
mov
out
mov
negl
ja
rorl
push
shrl
popa
xchg
bound
push
repz
and
ja
or
xor
pop
addr16
push
dec
jnp
mov
dec
pavgb
std
push
daa
dec
mov
push
cld
dec
xchg
mov
push
mov
out
cwtl
out
scas
add
jge
mov
gs
jo
cmp
cmpsb
mov
mov
stos
ret
xchg
repnz
add
mov
aaa
arpl
inc
pop
add
sub
and
repnz
or
test
mov
clc
pop
push
test
push
loop
mov
mov
jae
int3
cmp
add
jg
ror
cmc
js
or
xchg
fwait
test
fsubrl
fdivl
test
jnp
dec
add
sub
pop
lods
mov
mov
mov
sbb
jp
push
pop
push
mov
test
inc
jle
push
cld
leave
inc
cs
fwait
movsb
adc
lods
cmc
jg
or
or
push
ljmp
push
and
mov
jne
sub
inc
lea
pop
and
xchg
xchg
sbb
hlt
xchg
and
ficomps
decl
out
bound
stos
ret
inc
stos
pop
pop
jns
movlhps
js
popl
test
and
aad
fwait
jbe
or
mov
cld
sub
movsl
cmp
mov
mov
aaa
jge
sarl
js
jge
xchg
mov
xchg
loope
pop
imul
pop
icebp
mov
aaa
lret
cmp
adc
dec
orl
jl
xor
das
hlt
rol
hlt
pusha
cltd
test
inc
push
mul
stos
imul
pop
les
push
shlb
jb
add
scas
ja
das
inc
in
push
jnp
insb
int3
jge
mov
pusha
in
mov
sarb
jno
xchg
push
push
push
sbb
add
mov
fistpl
sbb
adc
mov
repz
mov
scas
push
dec
xchg
arpl
dec
cmpsl
popl
adc
outsl
and
out
mov
fnstsw
ret
push
arpl
dec
outsl
mov
lds
sbb
aas
outsl
mov
sti
sbb
or
repnz
in
mov
cmc
xlat
out
pop
lsl
jmp
sti
iret
xchg
add
and
test
sahf
out
in
dec
sbb
or
ret
popf
pop
xchg
out
dec
je
shll
add
rorl
mov
dec
push
outsb
xchg
xor
sar
outsl
insb
cmc
xchg
aas
xchg
sub
xor
push
fnstcw
cmpsl
cmp
je
mov
pop
imul
push
mov
sub
mov
mov
cmp
jecxz
cli
out
cmc
ret
shl
daa
in
xchg
dec
mov
add
orl
test
insl
mov
jle
xchg
adc
mov
or
mov
rcrl
mov
aaa
or
push
sahf
add
cmp
mov
mov
mov
stos
pop
je
insl
xor
xchg
pop
in
cld
jmp
mov
cmp
pop
adc
pop
or
jae
scas
mov
inc
or
cmp
hlt
out
dec
out
sbb
mov
popl
loopne
bound
xchg
repz
and
aam
js
pop
mov
fstps
mov
jns
movsb
push
cmp
addr16
cli
add
test
rcrl
push
in
and
fsubrl
aaa
adc
jmp
lcall
xchg
and
dec
movsl
adc
call
in
ds
push
repnz
or
xor
jl
xor
mov
jp
fs
mov
cmp
sbb
mov
daa
lea
xchg
js
jno
cld
ja
pcmpeqb
sub
cli
add
jo
mov
sub
xchg
mov
adc
xchg
xchg
jl
pop
loopne
xchg
shr
cli
int3
ss
filds
pop
push
lret
sub
jge
inc
xor
mov
mov
imul
sarl
aam
xchg
push
xlat
mov
xchg
divb
movsb
xchg
andl
out
sub
js
cmp
stos
xlat
enter
int
pop
and
insl
daa
jmp
jbe
cld
in
mov
out
test
or
and
cmpsl
push
jne
sbb
shlb
aad
out
sahf
fs
jo
jne
subb
push
sbb
adc
push
into
cmp
pop
pop
mov
aaa
in
shl
gs
nop
popf
pop
pop
fsubrs
mov
ja
sub
xchg
ljmp
pop
adcb
adc
ss
mov
sbb
jle
in
cltd
pop
adc
sub
sub
sbb
data16
sti
pop
movsl
adc
or
mov
lret
push
lock
jno
pop
notl
scas
lret
and
push
aad
ja
fisubrl
hlt
push
and
in
cs
je
scas
mov
or
out
mov
lea
cli
mov
test
cmp
js
int3
xchg
mov
jecxz
xchg
leave
cld
mov
cmp
mov
in
stc
jecxz
xchg
jae
out
clc
sub
lods
jne
popa
jnp
sub
das
out
inc
mov
dec
adc
lods
jae
mov
jmp
mov
cmc
add
pop
out
jle
iret
imul
xchg
out
out
gs
add
xchg
fdiv
xor
roll
mov
in
int3
mov
popa
ret
mov
mov
push
push
mov
adc
rorb
push
adc
sub
test
aas
fldcw
mov
mov
push
xchg
mov
icebp
sarb
test
inc
cmp
pop
push
iret
xchg
mov
jmp
pop
mov
xchg
jb
sub
cld
cmp
add
aad
loop
lcall
xor
lret
adc
mov
scas
lods
mov
iret
fwait
loop
mov
lcall
jmp
mov
mov
and
out
shlb
jle
push
sub
rorb
pop
mov
sbb
sarl
jecxz
inc
bound
inc
mov
stc
imulb
and
aaa
pop
shll
add
inc
push
xor
mov
sarb
leave
push
or
daa
add
leave
or
into
fs
sub
andb
in
loopne
in
in
pushf
pop
cmp
movsb
jae
dec
outsb
das
push
inc
aam
addr16
aaa
push
xor
mov
cmp
sub
add
mov
nop
sub
sahf
push
cwtl
out
push
push
add
xchg
lods
stc
push
xchg
or
addr16
mov
pusha
mov
lahf
cmpsl
or
repz
sub
fsubr
inc
lea
lock
lea
xchg
icebp
mov
add
xchg
inc
xchg
sbb
icebp
sub
mov
fmulp
das
inc
pop
test
pop
inc
xor
in
icebp
add
jmp
enter
inc
repz
push
outsb
adc
cmpsl
lahf
pop
out
push
cmp
inc
add
rcr
out
pop
jno
mov
int
xchg
mov
shl
rcl
xchg
cmp
ljmp
lahf
xor
rclb
sub
inc
in
arpl
inc
adc
jnp
mov
add
popf
fidivs
push
cld
ds
xchg
pop
and
sub
cmp
pop
jno
mov
das
pop
out
mov
lcall
adc
arpl
push
idivl
movq
test
in
cld
pop
ljmp
xchg
lret
ljmp
push
test
rcrl
mov
cmp
repz
lea
je
iret
pop
cmp
sbb
fiaddl
daa
cmp
or
cmpsb
mov
jmp
enter
es
sbb
sbb
push
sbb
aaa
sub
mov
roll
ret
pop
xchg
jmp
ljmp
xchg
sbb
push
xor
jp
and
xchg
cmpsl
xor
jmp
mov
scas
inc
aam
mov
jmp
out
xchg
fildl
insb
ja
mov
ret
popl
fisubs
pop
outsb
insb
leave
mov
push
js
mov
js
cs
inc
adc
push
ss
xor
jb
sbb
xchg
test
add
dec
and
or
sarb
xchg
cmc
test
jecxz
or
and
aam
lret
xor
mov
push
divb
cwtl
adc
xlat
ss
hlt
or
jl
or
cmpsb
pause
loop
movsl
dec
scas
sub
idiv
lock
gs
scas
mov
dec
and
sbb
add
push
dec
sti
add
stos
xor
push
and
add
in
adc
xor
mov
flds
das
cmp
or
pop
sub
arpl
lods
mov
fs
pop
and
jg
add
cmp
out
pop
cld
xor
out
mov
xor
or
fmul
dec
inc
jne
jnp
xor
cmp
dec
lds
std
call
aad
xlat
iret
push
push
sbb
leave
and
hlt
test
ljmp
test
pop
test
int
sub
jecxz
and
adc
imul
mov
cmp
sub
test
push
pop
popf
jle
xorl
sub
outsl
ret
jmp
xchg
cli
popf
sbb
ucomiss
in
xor
cmp
jecxz
mov
cmp
dec
sbb
clc
add
add
stos
rorl
rcl
mov
outsl
dec
sbb
imul
fwait
xor
sbb
dec
inc
shl
jg
mov
lock
fsubr
fwait
jp
sti
repz
cmp
jo
xor
cwtl
cltd
in
sub
shr
mov
push
and
leave
outsl
cmpb
jo
mov
sbb
ret
ljmp
fimuls
std
sbb
jns
fldenv
outsl
gs
jecxz
shll
lds
and
fldcw
lds
add
movsb
or
mov
insb
xor
push
popa
repz
adc
cmp
das
inc
xchg
addr16
sub
test
sbb
out
faddl
inc
clc
mov
xchg
xchg
cs
mov
insl
inc
add
shrl
mov
inc
ret
lret
shlb
xchg
push
call
cmp
lods
mov
loope
nop
xchg
ret
shrl
fisttpll
push
xor
imul
arpl
movsl
shl
popf
add
int3
push
fstpt
sub
xor
push
and
pop
je
test
loop
pop
addr16
fildll
inc
aam
add
mov
sbbb
cs
ljmp
jg
pop
cs
mov
mov
aas
fnstsw
addr16
mov
mov
adc
iret
inc
mov
pushf
ror
sbb
sahf
cmc
sbb
insb
pop
mov
push
dec
push
lods
jg
jmp
mov
daa
mov
jl
cmp
mov
es
xchg
insl
lcall
das
or
and
fildll
cmpsl
repnz
pop
mov
rclb
stc
jge
xchg
or
pop
ljmp
aas
in
mov
push
mov
loope
jae
popa
dec
repnz
shrd
xchg
xchg
sub
outsb
or
nop
xchg
in
mov
stos
mov
in
or
sub
adcl
cmc
test
fcomps
sub
leave
stc
jmp
or
into
in
aas
mov
into
push
sub
xor
insl
adc
mov
das
or
test
ljmp
adc
adc
pushf
outsl
das
push
push
addr16
test
pop
insb
xor
outsb
push
shlb
sub
pop
push
xchg
xchg
or
xor
sub
xchg
cmp
dec
es
jno
mov
pushf
sub
ljmp
je
jbe
sub
dec
loope
sub
mov
jge
lret
mov
pop
adc
dec
cmp
out
ja
aam
cmc
sub
int3
push
inc
mov
jo
xchg
insb
push
add
dec
pop
scas
sbb
das
push
js
sahf
leave
inc
enter
push
dec
popa
dec
movsl
aad
add
rorb
ljmp
shrb
shrb
out
outsb
pusha
ljmp
mov
push
jmp
popf
lcall
xor
cmc
xchg
adc
xlat
rcll
imul
lea
or
imul
sbb
push
pop
test
inc
adc
xchg
insb
out
loope
jg
jns
cmpsl
js
mov
out
cwtl
iret
push
pop
mov
xchg
lods
xchg
nop
into
sbb
lahf
adc
jle
popf
push
xlat
fdivs
imul
stos
cmpsb
pop
sbb
sbb
or
scas
icebp
adc
dec
fisubrs
out
std
pushf
mov
pop
dec
jo
xor
push
push
daa
cmpsb
jno
xchg
push
leave
and
sahf
fnstcw
mov
xchg
cmp
cltd
adc
cwtl
pusha
pop
aas
rcrl
mov
addr16
or
mov
pop
xor
pushf
dec
pop
and
xchg
int
int
push
into
je
cmp
call
imul
inc
ljmp
das
test
outsb
jo
sahf
cmpsb
pop
mov
xchg
in
imul
dec
scas
dec
inc
sti
rolb
sub
push
xchg
or
lock
les
mov
imul
imul
jo
ss
mov
xor
inc
out
mov
sbb
lret
add
sub
fs
xchg
pop
lea
rcrl
and
dec
push
pop
imul
std
pop
jecxz
jl
jl
mov
fcoml
shl
push
dec
sbb
xchg
adc
adc
jecxz
das
pop
push
mov
adc
cmp
cld
lock
mov
xchg
push
in
shl
xor
fwait
cmp
push
lret
inc
scas
fisttps
shrb
aas
cmp
or
cmp
inc
js
lds
stos
fwait
and
and
rcrl
and
add
inc
and
xchg
inc
bound
inc
les
bound
jno
rcrl
xchg
adc
jb
rorb
xchg
movsl
lods
add
cli
jmp
test
fisubrl
pop
jb
xchg
cld
loopne
push
daa
shrl
jae
jge
call
add
push
cmpsb
sub
outsb
push
scas
lret
jg
add
xlat
mov
mov
mov
aam
jg
add
lcall
scas
or
add
mov
or
jno
jl
std
mull
or
test
dec
inc
mov
dec
pop
scas
mov
fldpi
inc
inc
sub
pop
int3
sbb
jecxz
scas
cmp
addr16
pop
pop
push
iret
mov
xchg
fdiv
pop
std
call
test
in
jl
and
test
imul
mov
call
jg,pt
jmp
push
pop
arpl
mov
pop
rol
int
mov
imul
mov
jg
mov
mov
add
testb
inc
xchg
mov
jp
lods
mov
shl
cmc
lret
jge
xchg
sbb
test
mov
sbb
les
xchg
ss
mov
pop
or
jb
adc
stc
pop
fucomp
pop
xchg
daa
aam
sbb
xchg
addl
xchg
jle
push
adc
jg,pn
xchg
aaa
xor
into
out
out
ret
in
dec
addl
mov
ja
je
test
mov
push
shl
fidivrs
jnp
xchg
jns
in
filds
sbb
sub
in
push
out
sub
inc
fisttpll
insl
or
cmp
imul
mov
movsb
out
cmpsb
pop
cs
rep
loop
sbb
xchg
xorl
stc
mov
xchg
ljmp
adc
jecxz
or
test
mov
and
rorl
popf
push
movl
mov
test
mov
out
xchg
nop
push
and
popf
cmp
pop
ja
daa
push
fsubl
inc
mov
aaa
js
outsl
jno
inc
fmuls
orl
add
pop
jecxz
jmp
insb
pusha
inc
test
sub
mov
pop
jnp
cmpsb
sub
insl
fcomi
push
push
out
pop
imul
jns
push
xor
xlat
fstl
xlat
insb
cli
mov
lock
mov
or
scas
mul
cmp
cwtl
cs
fisttpl
and
or
cmpsb
jb
sbb
and
inc
scas
ficomps
lret
sbb
inc
pop
mov
loopne
cmp
mov
inc
jne
testl
test
xor
movsb
in
inc
stos
les
jl
sbb
dec
and
mov
push
aas
cwtl
divl
xchg
jnp
push
xchg
mov
repnz
add
rolb
sbb
push
lea
stc
pop
icebp
or
popa
iret
push
inc
cmpsl
rolb
into
insl
sti
loope
arpl
xchg
pushf
push
arpl
cmp
dec
push
stc
mov
mov
clc
jne
test
mov
int3
hlt
inc
jnp
dec
lds
adc
pop
jns
inc
fsubl
ds
icebp
mov
ds
sbb
jge
movsl
stc
ja
adc
arpl
dec
pop
jecxz
add
cli
es
out
pop
test
cmp
push
ja
in
mov
and
xor
dec
mov
enter
sbb
mov
imull
mov
sbb
and
cmp
jmp
sub
inc
xor
lahf
adc
cmp
push
mov
test
dec
cmp
adc
imul
add
push
test
inc
jno
jle
sbb
in
js
pop
add
mov
xlat
cs
xchg
jb
inc
pop
insl
xchg
add
mov
mov
push
dec
jo
add
mov
xchg
cmp
add
mov
mov
mov
sub
call
push
xchg
push
mov
sbb
dec
push
lret
cli
data16
pusha
push
cmp
stos
mov
out
push
imul
pusha
mov
retw
shll
stos
gs
mov
pop
mov
cmp
xor
push
xchg
jo
shll
jmp
mov
push
addr16
je
mov
jmp
aaa
dec
or
out
dec
gs
out
int
sarl
bnd
icebp
inc
sub
loop
jbe
cmpsl
push
push
pop
jno
ss
pop
adc
mov
mov
sub
and
and
mov
add
or
mov
bound
mov
cmp
push
cmp
subl
andb
repz
sbb
pusha
call
and
out
fcmovnb
cmp
lret
arpl
sub
cld
dec
rcr
or
test
jp
xchg
fdivl
pop
or
in
adcl
jbe
aad
pop
lock
sub
rorb
mov
lret
jmp
mov
sti
adc
dec
cmp
iret
sub
lods
cmp
inc
les
cmc
loope
and
hlt
xchg
sbb
fsubl
sub
mov
out
stos
lcall
gs
push
adc
xchg
mov
and
mov
cmpsl
aam
ret
sbb
pop
dec
out
xor
hlt
jo
pop
sub
inc
dec
js
call
push
mov
push
push
mov
and
push
jnp
les
daa
int3
push
fiadds
andb
inc
cmc
lock
aas
push
call
and
fdivrs
jne
push
xchg
jle
add
push
outsb
dec
mov
icebp
sub
jne
dec
add
shrl
xchg
movsb
or
pop
inc
inc
fsubrs
sbb
push
xor
pop
outsl
inc
bnd
xchg
xor
vmwrite
clc
jmp
ficoms
cmp
ja
scas
outsl
in
xchg
das
movsb
and
out
xor
daa
repnz
cmpsb
jns
sarl
push
and
int
jno
or
out
xchg
ja
call
add
xorl
dec
jne
aad
sahf
test
aad
es
sub
les
xchg
mov
push
dec
xchg
stc
loopne
jno
jl
int
cmp
int
jno
idivb
sahf
and
loope
aad
xchg
imul
inc
mov
cmp
fidivl
push
xchg
inc
jge
cmp
js
ret
push
jb
mov
jmp
popa
inc
jnp
ss
insb
pop
mov
pxor
xor
enter
in
loopne
fcmovnb
jg
mov
pop
sub
adc
add
lods
fstl
mov
cmpsb
incb
js
pop
lea
test
sti
and
adc
shlb
movsl
lret
insl
add
das
inc
arpl
mov
mov
js
and
loop
ficomps
or
inc
dec
scas
cmp
arpl
enter
lret
mov
ja
lods
stos
in
push
shl
xlat
jae
adc
and
dec
push
dec
insl
jle
loopne
jecxz
mov
mov
xchg
inc
xchg
aam
fs
loope
arpl
pop
or
add
aas
pop
mov
adc
loope
mov
inc
fldenv
add
mov
sahf
push
insl
bound
stos
mov
sbb
ss
movsb
mul
sub
out
jl
jge
movsl
jae
iret
inc
sub
je
loope
ret
cmp
in
mov
sahf
aas
loope
mov
pop
cmp
jge
imul
and
in
xchg
cmp
loop
xchg
cwtl
fdivs
out
dec
call
aaa
test
fdivrs
xor
inc
scas
adc
pop
push
hlt
and
fmul
aad
data16
in
xchg
sub
in
xor
mov
sub
mov
cmp
mov
mov
scas
ds
dec
cmp
sbb
lds
inc
sti
lods
test
std
push
rol
pop
sbb
jge
ret
add
dec
push
jb
cmp
push
dec
push
jecxz
test
loopne
shrl
lret
lods
push
cmpl
or
stos
out
inc
xor
mov
movb
stc
jmp
cmpsl
xchg
or
mov
sbb
jg
sbb
imul
xorl
mov
loopne
xchg
ret
cli
push
mov
jne
sub
fs
xor
popf
add
mov
shlb
scas
xchg
jmp
insl
and
inc
mov
test
imul
das
iret
xchg
imul
mov
inc
dec
sub
xor
cmp
cmp
fistpl
cld
mov
outsb
push
pop
lret
and
imul
dec
xchg
inc
sub
mov
bound
jmp
xor
arpl
leave
popa
and
out
or
lret
mov
arpl
sbb
hlt
pop
enter
pop
cmpsb
xor
mov
es
decb
ret
mov
je
add
jno
in
cltd
or
lock
sti
repnz
ds
push
lret
outsl
inc
fidivrl
xor
sub
mov
aaa
push
aas
inc
cli
cltd
dec
mov
add
xor
in
jnp
inc
inc
cli
sbb
push
decl
movb
test
jle
out
mov
je
push
sub
loop
push
cmp
loop
popf
stos
nop
mov
aas
fmuls
xor
mov
xlat
test
ds
ss
xchg
in
xor
or
iret
xchg
xor
or
sbb
insl
xchg
aad
lods
and
and
test
mov
mov
and
adc
mov
int3
ljmp
or
jmp
insl
in
stos
or
std
xchg
jae
call
mov
leave
or
dec
jmp
imul
xchg
std
pop
pop
leave
mov
push
aam
dec
mov
dec
dec
xchg
cmp
mov
mov
sbb
mov
stos
add
scas
outsb
stc
push
xor
jno
insl
ret
sti
andb
in
xchg
cmp
sbb
sub
hlt
cmp
data16
fistps
jno
push
int3
push
adc
add
rcrb
cvtdq2ps
fbstp
int
and
push
clc
jl
dec
dec
jo
jnp
mov
dec
aad
add
fucomip
fwait
xor
daa
call
xchg
push
pop
pop
push
cltd
jns
or
orl
push
mov
mov
inc
push
imul
push
insl
pop
mov
push
xor
pushf
insl
lret
ljmp
xchg
das
scas
roll
xchg
xlat
jl
adc
out
add
punpcklwd
mov
stc
cwtl
stos
pop
cmp
jle
out
jp
lret
inc
xchg
inc
outsl
xor
or
ret
and
ret
adc
cwtl
pop
adc
add
pusha
cli
cmp
jns
popf
mov
test
sub
push
jns
adc
jge
add
test
ja
ds
pop
addr16
lahf
ret
daa
fists
jge
aad
pop
addr16
fdivl
fwait
jmp
mov
int
push
pop
iret
adcb
sub
lret
insb
lds
inc
sub
dec
inc
clc
fs
loope
in
push
sbb
es
testb
mov
dec
mov
out
push
adc
pop
mov
int
out
adc
adc
lds
adc
and
insl
mov
push
incb
mulb
xchg
mov
dec
lret
in
mov
stc
sub
push
dec
pusha
push
jecxz
jl
push
sbb
sbb
fimuls
xor
popf
cmp
in
out
test
jle
lret
nop
je
dec
das
in
mov
loopne
and
cltd
shrb
aaa
js
cmp
sbb
jnp
fnsave
push
cmp
pop
pop
jne
insl
cltd
rcrb
or
lret
sub
sub
pop
fcomi
lods
dec
les
shlb
testl
mov
and
bound
enter
mov
je
xor
pushf
add
and
pop
sbb
sub
or
aam
pop
dec
call
stos
dec
cmp
xchg
cli
bound
lods
dec
ja
pop
inc
hlt
pop
mov
std
pop
cltd
stc
outsl
mov
or
fwait
idivl
ljmp
lds
jns
xchg
shrb
pop
xor
pop
mov
ret
push
aas
cmp
xchg
dec
pop
ljmp
adc
mov
mov
xchg
xchg
push
mov
aaa
jae
push
insl
data16
mov
shll
xor
aad
int
cmc
mov
jmp
cmp
js
jg
mov
sarb
shrl
dec
or
data16
in
inc
push
pusha
imul
mov
orl
and
mov
inc
es
fstpt
cmpsl
fisubl
ljmp
sub
mov
pop
xchg
ret
fs
dec
pop
cmpxchg
rcrb
fstpl
pusha
data16
test
mov
xchg
test
insb
xchg
cli
dec
loope
adc
pop
push
inc
jno
out
repz
xchg
sbb
xor
push
mov
xor
mov
fucomi
pop
pusha
hlt
addr16
rorl
cmove
stos
jo
cld
adc
or
push
xchg
mov
dec
inc
push
xlat
push
dec
mov
adc
pop
outsl
loop
test
sbb
jge
cmpb
cmpsb
shrb
fisttps
or
lods
mov
xacquire
mov
xor
lret
sbb
add
or
scas
rcrl
call
sub
xor
sub
pop
inc
cmpsl
add
cli
pusha
iret
push
scas
fdivp
add
jecxz
pop
lea
sbb
cltd
lret
das
or
xchg
push
stos
scas
test
in
jg
int3
outsb
jge
mov
in
dec
pop
pop
or
mov
xlat
cmpsb
jno
xchg
int3
xor
int
sbb
iret
xchg
fsubl
imul
hlt
aad
dec
or
inc
inc
movsl
adc
sub
add
popa
mov
js
mov
lea
mov
pop
test
pop
inc
dec
stos
jae
inc
cmp
out
ret
ss
sub
lahf
pop
sbb
push
mov
movsl
xor
es
push
sub
push
xchg
mov
dec
int3
adc
xchg
mov
popa
mov
std
stos
xchg
aas
and
bound
xor
inc
shrb
mov
jp
add
cmpsb
insb
dec
or
dec
in
jmp
enter
add
or
insb
sbb
outsb
and
push
mov
nop
repnz
popa
ficomps
mov
pop
out
loope
fistpll
fnstsw
mov
adc
subl
int3
in
fnstsw
inc
mov
popf
add
stc
nop
pop
inc
sahf
push
pop
xchg
arpl
sbb
int3
scas
dec
cmp
pop
test
sti
mov
pop
xor
lret
cs
push
xor
fwait
popa
loop
jge
std
mov
push
jl
sahf
aad
dec
xchg
jae
inc
jmp
lsl
pop
cmpsb
mov
aaa
clc
xor
out
clc
orb
mov
lods
shl
insb
dec
pop
dec
mov
pop
add
int
jbe
iret
cmp
hlt
pop
mov
or
cmp
out
addr16
mov
push
popa
insb
sbb
sub
inc
pop
js
das
nop
jo
lods
ja
into
cmpsb
pop
push
nop
push
push
ficoms
lahf
fbld
sub
aam
andl
push
aad
insb
popa
pushf
mov
test
lahf
pop
out
xchg
sbb
mov
inc
jae
mov
cmp
cli
mov
cld
iret
out
push
xchg
inc
outsb
inc
and
sti
sbb
pop
mov
xor
cwtl
inc
stos
decb
stos
out
xor
inc
sbb
subb
out
mov
imul
cmpb
jb
ret
pop
lods
sub
cmpsl
inc
adc
or
and
xchg
mov
dec
push
jae
add
test
push
sbb
es
or
xchg
lods
cld
fcomps
insl
sbb
pop
iret
jb
and
in
and
xor
jecxz
test
les
iret
cmpsl
pop
mov
jp
cmpsl
aas
sbb
inc
outsl
popa
pop
sbb
popf
xor
or
inc
ret
jno
pop
jg
mov
iret
jge
movsb
mov
insb
jg
mov
pop
cmc
and
and
aaa
mov
push
test
ss
cmp
dec
xor
xlat
shr
out
sbb
clc
shr
xor
add
or
jl
stos
and
pop
test
pop
and
sbb
mov
sub
jmp
mov
xor
mull
cmp
xchg
fcoms
jecxz
pop
mov
jg
jecxz
lds
jb
push
xor
dec
jb
call
clc
loop
mov
pop
daa
xchg
push
outsl
fs
dec
jb
mov
mov
cmp
mov
push
push
and
popa
std
sub
jge
mov
mov
dec
call
xchg
mov
or
xchg
fsubp
out
ljmp
int3
vmptrld
sbb
fstpt
inc
daa
push
cld
call
mov
cmpsl
jmp
in
sub
add
and
out
xchg
or
mov
jecxz
bound
mov
jns
data16
xorl
adc
mov
push
xlat
pusha
and
subl
sub
push
aam
add
xor
push
jle
ja
add
fstp
mov
ja
andl
gs
xorb
sbb
out
xchg
das
ds
cs
imul
xchg
loope
or
ror
out
nop
inc
repnz
inc
or
js
inc
imul
adc
ja
inc
mov
push
mov
ret
fldl
in
pop
fbstp
gs
xor
xchg
jno
mov
das
imul
std
sub
inc
fimull
sbb
adc
push
test
ljmp
xchg
out
shlb
movsb
lret
dec
lods
or
loope
pop
js
lock
or
or
leave
or
mov
add
or
pop
shll
xchg
mov
iret
and
mov
mov
mov
js
or
icebp
adc
ss
cmp
inc
test
das
fsubs
xchg
cltd
mov
inc
pop
in
and
sbb
sub
cmp
dec
dec
sbb
sub
aad
into
push
in
mov
outsl
add
icebp
xchg
mov
mov
es
pop
pop
and
int
sub
add
outsl
pop
jb
popf
mov
dec
xor
aam
fwait
and
cmpsl
pop
jb
jne
xor
test
pop
es
mov
sbb
femms
and
pop
xor
sbb
inc
and
insb
test
mov
push
je
shrl
pop
mov
movsl
push
vaddsubps
dec
jecxz
je
inc
jle
pusha
mov
rol
or
out
movsb
inc
mov
or
push
or
xchg
ror
popa
push
repnz
dec
out
aam
mov
jg
shlb
xchg
shlb
jmp
bound
xor
inc
pop
ret
test
sbb
repnz
fistpl
add
js
add
es
mov
push
test
mov
jg
sbb
xchg
cli
stos
xchg
in
cli
sbbl
push
es
pop
rcrb
pop
ds
stc
push
sbb
bound
das
cltd
cld
cs
das
imul
lahf
mov
and
sub
fucomi
in
test
mov
outsb
and
jl
outsb
inc
test
outsl
fistps
outsb
push
lahf
imul
mov
push
loop
adc
xor
movsl
xchg
dec
dec
sti
xor
dec
movsl
cld
outsl
jns
shll
mov
icebp
mov
pushf
push
dec
sub
out
pop
ret
arpl
mov
push
cld
loopne
push
xchg
and
or
cmpsb
aam
les
testl
ret
mov
adc
pop
daa
leave
in
cmp
cs
popa
out
outsl
or
lcall
and
int
rclb
aas
jne
or
xlat
or
jl
lcall
sub
inc
cmp
push
fiaddl
pop
or
lea
fdivrp
mov
shlb
push
js
mov
cmc
outsl
jle
cmp
and
ja
sub
xor
mov
in
sub
sbb
lcall
jb
cmp
or
adc
ja
das
adc
xlat
in
fst
mov
push
push
dec
xchg
into
insb
mov
stos
inc
aaa
inc
in
in
les
ret
dec
loopne
neg
mov
in
sub
sub
shrb
addr16
xlat
cmp
scas
xlat
in
mov
hlt
icebp
sbb
popa
cmpsb
mov
cmp
scas
add
scas
jno
jns
sub
jb
mov
push
ljmp
int3
push
fwait
ret
sarl
push
fdiv
xchg
lods
push
fstpl
in
ret
leave
int
fisubrl
test
pop
mov
gs
insl
js
cli
jne
out
mov
repz
adc
sarb
mov
adc
dec
adcb
mov
je
add
idivl
add
fisttpll
into
pop
xor
mov
adc
stc
cmpsb
and
pop
js
mov
mov
push
mov
imul
loopne
arpl
cmp
adc
add
xchg
push
orb
mov
ljmp
ret
inc
pop
lods
sub
xchg
pop
or
data16
inc
jecxz
jae
jecxz
shr
add
popa
subps
pushf
cmp
xor
enter
subb
mov
ja
mov
sbb
rcl
jae
jbe
mov
pusha
hlt
dec
cmpsl
lret
ret
out
fmulp
lock
ficomps
mov
cld
pushf
mov
sbb
stos
xor
arpl
call
xor
outsl
add
lret
test
arpl
xchg
cltd
or
lock
loop,pn
shlb
or
loopne
inc
daa
out
push
mov
jle
dec
push
add
addl
jle
iret
sbb
xor
add
test
xchg
outsb
xchg
xchg
rorl
in
outsl
and
in
or
test
stos
adcl
xor
sti
jg
daa
repz
into
imul
shrl
outsb
xchg
mov
dec
jns
pop
out
daa
jl
mov
xchg
mov
sbb
mov
jl,pt
add
push
mov
sahf
lret
cs
sbb
adc
mov
jae
sbb
fcompl
xchg
frstor
jmp
insb
add
cmpl
lret
jne
out
pop
xor
adc
push
ret
cwtl
in
sarb
dec
add
in
and
in
mov
xchg
out
push
gs
mov
std
add
lds
push
gs
repz
sub
dec
fstp
adc
sbb
dec
stos
push
or
inc
insb
xor
sbb
lea
add
leave
xchg
lahf
es
inc
movsb
sub
jne
aaa
ja
imul
rorl
sub
cmp
xchg
add
and
add
hlt
insl
xchg
mov
stos
rorl
xchg
fsubrp
dec
call
out
js
into
mov
ljmp
xchg
jl
mov
jp
bound
xor
enter
gs
out
test
push
add
push
into
push
or
adc
xchg
pop
inc
and
out
inc
sbb
mov
lahf
push
iret
pop
mov
lahf
les
sub
sbb
jp
mov
cmpsb
push
mov
test
mov
popa
or
sub
push
fwait
xchg
jmp
inc
loopne
pusha
inc
dec
hlt
fdivs
mov
cmp
ja
jae
lods
inc
cmc
nop
subb
cmp
lret
push
ljmp
mov
mov
xchg
push
jmp
adc
mov
mov
repz
mov
mov
dec
fs
push
or
add
out
adc
jecxz
or
xchg
xchg
mov
push
mov
sub
inc
mov
into
xor
loopne
push
cmp
jecxz
cmpsb
inc
mov
xor
cmp
aaa
inc
outsb
shrb
pop
add
lods
and
fwait
mov
xor
fisttpl
popf
imul
cmp
push
cmpsb
lods
inc
ret
nop
sbb
lds
inc
and
pop
inc
hlt
cmp
cli
jmp
cmp
stc
pop
in
rcrb
lret
mov
xchg
cld
outsb
imul
pusha
sub
cld
mov
cs
xor
ljmp
cmp
pop
jb
pop
mov
push
test
sahf
xchg
cmp
in
pop
dec
add
jnp
clc
sub
push
push
incl
xor
decb
pop
mov
push
out
leave
lea
outsl
or
adc
out
lods
xlat
xor
jo
aam
fldenv
outsl
jnp
pop
xchg
cmp
jmp
jae
mov
push
es
jle
lcall
loopne
aaa
aad
arpl
sub
xor
cmp
mov
jns
xchg
push
and
loopne
mov
popf
test
stos
and
and
pop
and
ds
and
jns
fisubl
cmp
xor
sub
xchg
or
mov
add
lcall
popa
fsubrs
iret
or
mov
paddb
dec
out
pop
pop
dec
std
bnd
or
jmp
test
push
fcomi
rcr
push
fs
pop
jns
mov
rol
divl
rcrl
dec
daa
rcll
imul
scas
jl
sbb
inc
sub
jle
stos
leave
jmp
stos
fldenv
mov
sbb
mov
loop
dec
pushf
rorb
daa
rcl
xchg
dec
iret
scas
cmp
popa
lcall
test
cld
shll
repnz
jnp
xchg
pusha
fcmovu
sub
insl
adc
cmp
nop
and
ja
sbb
in
mov
test
loope
ret
inc
loopne
gs
cmpsl
ret
ljmp
push
push
je
mov
xor
push
sub
and
fs
xor
scas
pop
bound
pop
adc
mov
call
fistps
jl
mov
cwtl
nop
insb
jmp
and
pusha
push
test
mov
lahf
popa
das
xchg
pop
popa
clc
mov
xchg
rolb
pop
jl
rcll
push
fbld
push
lret
das
bnd
lds
cmp
adc
arpl
adc
roll
daa
imul
sub
mov
adc
test
inc
inc
scas
pop
xorl
ss
push
sbb
xor
xchg
insl
dec
push
xchg
dec
xchg
mov
pop
outsb
fsubl
sub
lds
insl
adc
fidivs
pop
aad
cmp
sbbb
add
sbbl
jmp
or
xchg
pop
inc
jo
cld
outsl
je
xchg
jle
mov
inc
mov
push
sti
in
ret
data16
lds
daa
lods
xor
and
sbb
stos
pusha
push
xor
pop
cmp
das
clc
or
out
sbb
cmc
lcall
outsl
xchg
pushf
dec
pop
sub
in
jns
lcall
pop
push
test
xor
push
aas
or
xlat
cmp
push
inc
idivb
sbb
or
loope
mov
arpl
xor
inc
lea
rcrb
pushf
xchg
xchg
sbb
dec
adc
dec
dec
push
out
shll
jge
adc
adc
jae
imulb
incb
cmp
imul
sub
push
and
notb
out
pop
add
dec
push
in
flds
andl
push
push
popf
inc
mov
data16
cld
aaa
cltd
mov
xor
rorl
fnstcw
cmp
dec
iret
aas
js
icebp
or
stc
les
push
adc
stos
push
sub
fnsave
and
imull
mov
cmp
inc
mov
inc
jecxz,pn
push
aam
pusha
lret
daa
incl
int3
push
or
dec
lock
stos
mov
test
push
ret
call
scas
mov
sub
iret
jb
mov
mov
movsb
fdivrs
je
xlat
rorb
repz
xchg
sarl
pop
lahf
lods
jmp
sub
and
es
fiadds
lods
addr16
leave
xchg
test
es
jno
or
ficoml
psubusb
je
mov
pop
pushf
cmp
rcrb
mov
xchg
nop
es
out
cwtl
sbb
xor
mov
lea
aam
sbb
or
loopne
sbb
pop
cltd
popa
push
ffree
shlb
inc
inc
out
sbb
or
out
sbb
int3
mulb
mov
mov
hlt
pop
movsl
sbbb
sti
sbb
mov
push
adc
add
cmp
out
or
xchg
jnp
jmp
loope
clc
and
or
xchg
cmpl
pusha
adc
adc
jnp
in
pop
dec
push
mov
jno
arpl
dec
mov
inc
das
jg
jb
pop
mov
popa
rcrl
cmp
dec
hlt
adc
mov
inc
push
cwtl
or
xchg
mov
xchg
mov
mov
pop
dec
jne
aas
add
mov
les
jns
push
bnd
add
inc
jp
pop
arpl
pushf
fdivrl
arpl
xor
in
shl
xor
cld
fbstp
es
push
insl
jl
and
andl
mov
push
scas
sbb
xor
or
cmp
test
jno
in
inc
sahf
rolb
out
inc
iret
add
imul
push
dec
mov
mov
outsb
sbb
leave
adc
in
scas
cmp
sbb
aas
pop
int
flds
in
mov
sbb
out
add
push
fldt
insb
pushf
adc
adc
ret
pusha
rorl
xor
sub
sarl
rcl
xor
push
pushf
mov
aad
mov
fcmovnu
jecxz
outsl
jl
pop
mov
push
jb
dec
sbb
sti
sub
or
adc
cmc
pop
xchg
subl
dec
addl
scas
enter
fisubrs
xor
and
les
dec
mov
xchg
mov
pop
xor
pop
call
loope
dec
into
cmp
add
hlt
adc
outsl
jbe
cmp
mov
call
shll
fucomp
test
test
lahf
jnp
dec
aam
sbb
repz
dec
sbb
sbb
bound
in
into
js
hlt
int3
in
sub
jecxz
repz
sahf
mov
mul
jb
xchg
ret
jb
jge
iret
jle
fmul
mov
or
xchg
push
dec
mov
stc
icebp
cltd
push
out
adc
incl
ret
dec
test
pop
movsl
clc
push
das
inc
rep
xchg
rcr
xchg
int3
js
ret
push
imul
cmp
inc
imul
lock
test
or
sbb
jae
shrb
or
mov
hlt
out
mov
ljmp
daa
dec
pusha
je
jnp
je
pop
gs
cmp
cs
das
pop
add
outsl
dec
lea
push
int3
imulb
pop
adc
bswap
test
loopne
sbb
xor
sbb
lock
mov
dec
scas
bound
mov
lods
and
mov
arpl
insl
fsubrp
xchg
jo
mov
push
pop
xchg
mov
std
clc
pop
pop
jbe
mov
mov
cmpsl
mov
adc
push
pop
fildll
mov
inc
mov
in
std
jbe
sbb
dec
or
leave
sub
mov
mov
sub
mov
xchg
sbb
sub
cmc
sahf
aam
out
and
xchg
mov
out
pop
out
std
mov
aad
adc
mov
add
adc
enter
push
sbb
inc
pop
loopne
sbb
jmp
into
out
lcall
sub
icebp
fcmovne
inc
int
add
pop
insl
cmp
sub
lods
addr16
loopne
mov
sub
mov
jns
les
adc
subl
fldl
sbb
push
inc
imul
mov
push
ljmp
aam
stos
jp
sahf
cli
add
sbb
mov
cmpsl
xlat
xor
aad
insb
movsb
jg
mov
aam
xchg
stos
stos
push
cmp
xchg
pusha
aam
inc
mov
or
in
fwait
mov
or
insb
jle
add
dec
lods
nop
push
and
dec
daa
nop
lods
addb
cld
dec
filds
sub
jle
bsf
inc
leave
adc
inc
dec
iret
xor
dec
rcll
add
pop
fidivrs
adc
lcall
add
hlt
mov
fsubl
adc
xchg
push
cmpsl
cmp
adc
xchg
in
mov
push
aad
mov
jmp
xchg
sbb
into
imul
jle
push
xor
jge
ret
add
lahf
lods
inc
mov
jae
test
and
ret
loope
in
cmpsb
xchg
testl
outsl
jg
rcrl
hlt
mov
sarl
mov
pop
xor
or
sbbl
gs
test
jne
inc
ja
mov
pop
test
cmp
bound
cmpsl
cwtl
mov
mov
stos
cmpsl
jle
test
orl
mov
outsb
adc
stos
push
jp
nop
insl
jne
fsubr
jg
lea
scas
fisttps
cwtl
fbstp
in
jb
hlt
stos
dec
ljmp
or
subl
shrb
std
testl
lahf
add
fisttpll
adc
mov
push
mov
mov
repnz
fsubr
ret
in
and
in
xchg
ret
or
xor
in
xlat
dec
rcrb
loop
xchg
out
xchg
dec
pusha
pop
mov
xor
les
pop
push
lahf
scas
mov
xchg
xchg
jmp
sbb
mov
xchg
mov
shlb
jb
xor
cli
fistpl
shll
aas
cltd
sbb
add
inc
repz
stc
fs
sahf
out
and
pushf
ss
xchg
aam
js
sahf
mov
decb
idivl
xchg
xor
adc
shr
xor
dec
cmp
in
or
dec
or
ret
jo
mov
and
dec
jmp
loop
jns
xchg
movsl
sbb
sub
sarb
sub
dec
fcmovnb
loope
mov
xorl
ljmp
fwait
adc
dec
cltd
jle
arpl
leave
imul
push
test
lock
mov
ja
inc
sarb
push
and
out
hlt
lahf
xchg
lods
sub
jge
fidivs
mov
jns
cmp
sub
outsb
sub
leave
into
pop
mov
out
stc
inc
daa
js
lock
and
xor
sub
punpcklbw
mov
jmp
mov
jns
cmp
or
push
dec
fildll
xchg
push
fiadds
in
stos
mov
mov
repz
push
jbe
pop
pop
hlt
push
jge
push
xchg
fisttpl
dec
push
dec
cmpb
pusha
push
xlat
jecxz
sbb
pusha
jae
in
dec
xor
or
leave
cmp
movsl
inc
jg
push
jb
xor
sbb
pop
nop
mov
push
cmp
aas
mov
faddl
mov
xchg
push
pop
in
mov
jecxz
sub
mov
inc
nop
insl
lods
sub
pop
push
jae
pop
push
movsb
les
nop
and
imul
jmp
mov
xor
dec
sti
ss
cmpsl
fwait
inc
and
je
jbe
dec
fdivrs
mov
pop
outsb
push
repz
lock
mov
popa
xchg
orb
ret
add
jbe
popf
les
xor
pop
jnp
or
sbb
xchg
cmp
mov
sub
mov
xchg
test
sbb
fwait
jg
outsl
mov
hlt
push
xchg
hlt
sbb
mov
or
into
push
repz
cmp
dec
push
adc
icebp
loope
adc
scas
mov
push
cmpsl
xchg
pushl
in
lds
pop
xor
pop
iret
inc
cmpsb
lods
or
int3
addr16
gs
fildl
mov
cwtl
mov
out
pop
insb
jb
outsb
jne
xchg
ret
cmc
pop
push
lret
test
sub
sub
incl
push
andb
adcl
cmp
pop
adc
lcall
js
mov
jno
cwtl
sub
cmc
sub
shlb
cmpsb
xchg
lock
or
repnz
and
mov
xchg
sub
mov
rol
pop
sbbb
jecxz
pop
mov
cmp
mov
fcoms
int3
nop
dec
lea
adc
ficomps
insb
test
loop
push
mov
pop
stos
jnp
sbb
adc
sub
mov
roll
jnp
loope
std
mov
aad
aam
mov
jae
xor
inc
pop
mov
repnz
sahf
movsl
mov
pusha
inc
mov
test
xor
inc
pop
pop
sbb
jb
cli
testb
and
bound
stc
aad
inc
xor
jmp
movsl
pop
cli
enter
inc
es
daa
lea
jecxz
xchg
lea
xchg
pop
dec
loopne
popf
or
dec
pushf
mov
sti
bound
add
pop
push
jne
orb
insb
cmc
imul
imul
stos
jge
frstor
jnp
aaa
cmp
loope
sub
jp
sbb
adcb
gs
std
scas
adc
jg
mov
inc
push
rorb
insl
push
adc
pop
cmp
imul
and
loop
and
jmp
cs
dec
inc
dec
jle
in
mov
shrb
xor
movsb
mov
mov
bound
xor
pop
add
inc
pusha
out
inc
or
orb
out
xchg
stos
mov
mov
mov
nop
gs
or
jne
dec
loopne
jbe
in
out
xlat
ja
jg
xor
xor
pop
inc
jecxz
cmp
dec
mov
or
ret
jp
cld
loop
jmp
fdivrs
test
insl
jne
leave
movsl
push
lds
push
frstor
fsubr
lahf
mov
mov
into
xchg
bnd
dec
jne
loope
or
outsb
out
clc
adcb
ret
sarl
sahf
mov
cmp
jno
jle
add
out
pop
xchg
xchg
cwtl
nop
enter
divps
lods
jecxz
inc
leave
mov
aaa
fldenv
push
mov
shl
out
into
out
or
jb
lea
pop
mov
aam
ds
and
jecxz
add
sbb
mov
cld
std
dec
rcl
das
test
shlb
cwtl
setae
lret
cltd
movq
das
repnz
adc
push
push
aaa
call
jo
cld
sub
aad
call
mov
and
frstor
addr16
sbb
and
push
jmp
push
xchg
sbb
or
cmc
sub
in
mov
cmp
aad
dec
movb
and
pop
jp
sbb
lds
inc
lret
cmp
repz
pop
shr
movsb
loop
mov
or
lock
fisubl
ds
push
or
stos
inc
stos
or
jge
and
sbb
or
das
mov
dec
mov
pop
lret
movsb
xchg
xchg
cmp
leave
pop
mov
mov
lods
lods
pop
sbb
pop
adc
into
push
xor
mov
aas
xchg
hlt
fstpt
gs
xor
idiv
aaa
xor
ja
arpl
xchg
or
push
shll
notb
mov
jle
mov
mov
mov
push
int
sub
aas
mov
mov
imulb
and
addr16
inc
sub
pop
adc
mov
rcrb
cmpsl
clc
push
jmp
in
push
test
adc
push
jmp
pop
cmc
add
or
fistl
xor
jle
fimull
pusha
or
inc
leave
mov
jp
aas
ss
inc
pop
xchg
je
sarb
out
and
inc
jl
dec
adc
push
mov
adc
sub
add
aad
hlt
pop
jne
mov
daa
lcall
repz
subb
sbb
mov
scas
scas
loope
jb
fadds
dec
bt
push
ror
adcb
cs
notl
out
cwtl
std
pushf
rorb
outsl
jg
outsb
aas
js
mov
pop
sub
mov
shll
das
mov
inc
in
cmp
stos
clc
xor
inc
pop
jp
stos
jmp
mov
fcompl
mov
data16
mov
cmc
lcall
adc
fcmovnu
and
jp
addb
mov
mov
mov
aas
imul
cmp
les
xor
and
loopne
mov
insl
xchg
mov
test
xor
popf
stos
sub
cmc
jmp
call
mov
insb
jg
xchg
in
pop
xchg
cmpsb
push
xor
adc
push
stos
leave
jno
xor
popa
iret
repnz
sub
adc
pop
inc
push
rorl
pop
cld
rolb
lret
and
push
mov
xchg
cwtl
add
in
test
les
sbb
ret
jo
clc
mov
push
mov
xor
imul
dec
push
aam
popa
dec
add
in
cmp
cltd
test
mov
shll
movsb
insl
enter
jle
loope
rorb
insl
js
iret
lods
sti
push
or
add
adc
in
xor
xor
mov
leave
dec
rorb
addr16
scas
ret
sbb
ljmp
or
addr16
pop
push
es
xchg
push
xchg
sub
fists
push
imul
jmp
lods
jmp
dec
and
push
addl
pop
outsl
xchg
jecxz
popf
mov
mov
jp
adc
sbb
cmpsl
xor
imul
push
push
bound
scas
xor
add
into
insb
call
addr16
add
push
jl
test
fdivs
loop
add
cmp
pop
mov
andl
cmp
cmp
mov
xor
add
push
test
mov
mov
data16
out
imul
add
lcall
je
gs
dec
mov
add
aam
mov
lds
repz
subl
xchg
mov
jns
cmp
scas
cli
hlt
jp
sub
popa
sub
pslld
mov
sbb
inc
in
in
cmp
or
and
mov
out
sarl
add
stos
movsb
adc
xor
lea
lret
fdivl
js
push
jbe
mov
and
push
mov
adc
pop
adc
jle
into
nop
sub
lock
jge
cmp
movsb
int
pop
sub
jo
cmp
push
mov
sub
dec
mov
aaa
test
in
loope
sbb
je
test
mov
push
push
addb
xor
or
fbstp
jns
scas
pop
popf
call
dec
jl
inc
push
push
pop
cmp
xchg
push
xchg
push
daa
or
push
jo
push
ss
lahf
jo
lods
mov
ffree
mov
add
stos
sbb
jno
mov
cmpsb
fdivrl
sbb
jle
cmp
pusha
daa
iret
mov
add
xor
xor
dec
loope
inc
mov
aam
or
fadd
test
aad
or
jae
mov
lret
pushf
mov
mov
out
pop
ljmp
mov
adcb
push
push
or
jbe
xor
mov
test
push
xchg
int3
cmp
cmc
iret
mov
lods
in
mov
sarl
sti
out
adc
inc
mov
cmp
nop
insb
mov
vpsubd
mov
lahf
xchg
call
and
pusha
rcr
sbb
sbb
data16
cmp
je
fnstcw
jns
arpl
idivb
es
xchg
pop
cmp
sub
test
sbb
and
aam
mov
loopne
cwtl
and
sbb
testl
movsb
push
push
cmp
je
enter
testl
sahf
and
and
push
sub
pop
popa
imul
lret
sbb
cmpsl
in
mov
cmovbe
xchg
sbb
notb
test
sti
fisttpll
xor
mov
scas
sub
aam
lea
add
adc
sti
mov
cld
dec
mov
mov
dec
xor
mov
out
sahf
sbb
add
jns
enter
jp
call
mov
lahf
pop
shlb
xchg
push
aaa
or
cmpsb
mov
sub
mov
push
jnp
adcl
cmpb
fnstcw
dec
stc
mov
in
js
int3
cmpsb
adc
scas
outsl
and
xchg
sbb
jne
jno
subl
mov
addb
ret
mov
sahf
pop
enter
cltd
and
lcall
or
sbb
rclb
inc
mov
jle
movsl
lret
test
je
sub
cmpsb
into
fnsave
cmpsb
fisttpl
stc
xchg
mov
sub
and
mov
add
and
dec
int3
and
outsb
xor
es
pop
push
mov
leave
out
outsb
out
cmpsb
inc
mov
sub
testb
out
cld
mov
sahf
aad
fdivrl
mov
mov
adc
test
jmp
ficoml
jecxz
fadd
push
xor
cltd
inc
into
out
jnp
xchg
mov
adc
sbb
pop
xor
mov
sub
adc
out
ja
mov
cmp
jnp
and
inc
inc
lcall
sahf
insl
xchg
jmp
jno
cmp
or
je
push
xor
xorb
xor
or
push
jb
bound
inc
lock
es
xchg
adc
or
mov
mov
push
push
mov
xor
inc
rclb
shlb
mov
jae
sub
enter
jl
in
sub
in
inc
ljmp
ja
adc
dec
repz
hlt
xor
jle
mov
lret
sbb
cld
add
testb
inc
mov
add
lret
inc
pop
in
movsl
lds
mov
inc
mov
push
adc
sub
aam
cmpsb
rcr
jbe
stos
or
xchg
cmpsb
loope
cs
pop
mov
cltd
out
xchg
add
lcall
cmp
push
push
gs
and
mov
inc
outsb
and
stc
inc
xor
fidivs
aad
pop
lock
sbb
and
ds
js
push
inc
pop
and
ds
pop
sub
xchg
jp
xchg
cwtl
enter
or
mov
or
pop
adc
dec
push
and
imul
cmp
mov
inc
dec
jno
fisubs
mov
sbb
shrb
divb
pop
or
stos
mov
jecxz
das
mov
sbb
int
mov
adc
add
push
fucom
fstps
mov
push
stc
cmp
jl
pusha
lahf
pop
in
les
imul
dec
jnp
testl
adc
pop
and
pop
shll
xchg
xor
push
pop
ss
rorl
repz
inc
stos
mov
cs
pop
pop
jne
in
inc
rclb
leave
xchg
inc
push
mov
lea
out
mov
and
daa
lcall
xor
sub
orb
push
jns
cmp
sub
dec
mov
xor
dec
xor
pop
push
shl
inc
popa
pop
dec
jae
cmp
pop
jmp
dec
pop
pop
shll
icebp
cmc
cmc
pushf
cmpsl
ror
jne
in
sub
int3
xor
addr16
dec
shrb
inc
sub
jmp
add
sbb
lock
bound
mov
sub
jmp
loopne
mov
xchg
sub
cwtd
stos
bound
sbb
jns
sub
andl
xor
cmpsb
mov
xlat
int
add
jns
cmp
idivl
out
scas
dec
movsl
adc
rcrl
or
cmp
mov
pop
or
xor
xor
outsl
xlat
outsb
data16
xor
jl
bound
xor
pop
bound
add
xchg
jb
addr16
lock
aad
inc
push
cmpsl
stos
fstp
sub
fwait
out
sub
mov
popf
mov
sbb
pop
sub
sbb
cs
aaa
xor
fmulp
fucom
out
pop
imul
into
repz
scas
adc
repnz
rcrb
popa
pop
mov
and
and
lock
stos
orb
and
loopne
or
and
nop
lret
adcl
cmpsb
jl
lret
add
push
xor
and
cmp
shlb
push
mov
mov
js
lock
fmull
lds
mov
cmp
mov
fprem
stc
jle
jbe
sub
popa
aad
into
add
add
stos
insb
mov
dec
mov
mov
push
mov
push
test
jmp
jp
outsl
push
fstps
add
add
lcall
loop
mul
and
das
lret
je
jae
or
into
sbb
into
iret
int
pop
dec
cmp
or
dec
mov
mov
mov
xor
loope
cmpsb
shlb
xchg
int
xor
mov
gs
mov
mov
or
mov
lret
clc
ds
popa
and
cwtl
jb
and
sub
inc
jecxz
pop
xor
scas
and
test
loope,pt
mov
inc
mov
push
sar
jle
gs
into
mov
into
lods
imul
loopne
jnp
scas
push
std
out
adc
jge
ja
mov
ds
jb
arpl
out
or
test
sahf
or
or
add
movsb
sub
jp
outsl
jecxz
xchg
or
arpl
mov
xchg
sbb
daa
arpl
jle
sub
out
cwtl
inc
sub
sbb
mov
inc
fisubrl
sbb
or
mov
in
lods
jmp
sub
fisubs
mov
rcr
mov
jecxz
jno
inc
out
push
sbbl
nop
pop
pop
lock
lret
mov
sbb
mov
jo
push
daa
jmp
aad
push
ljmp
loop
xchg
add
imul
inc
test
fidivs
cltd
add
ss
cmp
xchg
adc
jnp
test
cli
outsl
lahf
jae
ret
xchg
repz
sti
gs
jo
imul
sbb
movsb
daa
icebp
dec
fcmovb
sub
fisubs
mov
movsb
mov
jge
mov
dec
and
push
sbb
inc
mov
jne
jecxz
pusha
aad
sub
push
arpl
loopne
or
xchg
push
jecxz
andb
inc
in
lods
mov
xorl
sarl
push
xchg
dec
out
or
pop
jns
mov
mov
aam
jge
loop
mov
xchg
adc
and
aam
nop
mov
test
loope
aam
sbb
dec
sarl
or
stos
jno
add
ss
iret
aad
cli
xor
movsb
jge
adc
adc
test
push
ja
cmp
fmul
fs
push
mov
repnz
sub
or
push
popa
or
pop
cmp
push
pusha
jno
outsb
sarb
jmp
sahf
jnp
push
lods
and
inc
into
xor
popf
inc
xchg
addr16
lods
idivb
sbb
pop
xchg
push
test
movsl
enter
loope,pt
jns
std
mov
inc
push
inc
xchg
jge
sbb
fsub
stc
jno
je
fdivs
jle
mov
ficoms
mov
jno
cmc
or
ret
add
nop
mov
inc
cmpsl
jl
sarl
movsb
popa
cmp
imul
aam
inc
and
fs
shll
int3
test
adc
pop
pusha
movsl
gs
mov
adc
ja
andb
outsb
aam
inc
push
dec
cld
dec
inc
das
lock
mov
pop
push
arpl
js
cmp
rorl
ss
inc
xchg
xor
pop
cmpb
pusha
xchg
ret
push
ljmp
jb
dec
repz
cmp
andb
inc
add
fisubrs
push
stc
jb
adcb
mov
aas
js
cwtl
popa
test
les
stc
mov
or
das
rorb
sbb
xor
dec
jbe
mov
imulb
xor
sbb
cmp
sti
inc
inc
cmp
lock
in
cltd
dec
std
das
test
mov
lret
mov
push
push
call
mov
or
cmp
push
test
and
in
js
gs
xchg
mov
xchg
jo
andb
sub
int
pop
jp
fistl
pop
mov
xchg
adc
sti
lea
cs
cwtl
cmpsl
out
lahf
test
pop
cmp
xor
xchg
add
test
cmc
add
jmp
jae
ss
adc
mov
lahf
or
or
inc
into
jo
and
pusha
ja
shll
imul
int3
into
aaa
cmp
lock
pop
jns
call
aam
mov
jecxz
inc
jmp
dec
adc
pushf
int3
pop
mov
or
mov
mov
insb
stos
loopne
cs
jecxz
pop
fidivs
addr16
enter
adc
xor
sbb
mov
pop
icebp
push
inc
dec
pop
pop
xchg
lea
mov
push
cli
sbb
movsb
popa
mov
cmp
or
jns
jmp
pusha
popf
fldl2t
bound
adc
xor
sbb
stos
xorb
outsl
mov
push
jp
mov
jmp
sub
mov
fmull
mov
aam
and
movsl
xchg
sub
and
inc
add
cli
pop
jae
push
fwait
adc
mov
leave
xchg
jns
insb
repz
xchg
rdpmc
mov
cmp
lcall
pusha
test
cwtl
xchg
out
xor
xchg
rorl
xor
xchg
mov
mov
imul
inc
jecxz
cwtl
mov
in
test
cli
pop
imul
pop
adc
and
stc
sub
clc
stc
push
push
dec
xor
jne
js
aam
adc
sub
ljmp
pusha
jecxz
sti
push
inc
push
xchg
das
imul
add
fadds
add
xor
ret
test
mov
fs
jb
out
sub
xchg
jle
sbb
sti
adc
sbb
jp
icebp
in
sti
inc
aad
out
data16
fsubrp
sub
push
rcrb
cmp
lret
pop
sub
add
aad
dec
ljmp
cmc
adc
push
adc
cli
mov
jno
dec
mov
pop
sti
mov
sub
in
in
cmp
movsb
int3
or
je
inc
and
imul
xlat
cmpsb
mov
mov
inc
fildl
xchg
lcall
dec
inc
sub
jae
inc
pop
divl
pop
mov
mov
or
lds
pop
cmp
mov
xor
cli
insl
add
sbb
fisubl
test
bound
xchg
test
pinsrw
push
dec
jl
add
dec
mov
mov
into
inc
cmpsl
icebp
add
fdivp
icebp
pusha
cltd
lea
inc
or
stos
outsb
pushf
out
inc
push
xchg
cmp
sub
in
cmpb
decl
scas
icebp
insb
adc
lods
xchg
jg
xchg
mov
adc
and
adc
rclb
jge
inc
xor
cmpsl
xchg
imul
sub
push
cmpsb
jg
dec
addl
cld
jmp
mov
repnz
clc
repz
sbb
and
jae
pop
mov
lea
mov
stos
decb
or
fldl
mov
mov
jmp
in
xor
scas
movsb
adc
scas
push
femms
mov
into
pop
call
jg
fsts
iret
or
push
sub
fstpl
das
add
js
mov
push
data16
mov
out
add
add
dec
sarb
inc
mulb
std
cmp
leave
ret
xchg
pop
jle
lods
ljmp
pushf
cmp
cmp
sarb
out
mov
pop
fsubrs
mov
insl
dec
inc
dec
mov
and
add
adc
aaa
xchg
scas
xor
mov
stc
push
mov
test
jns
jae
insb
ljmp
inc
loop
loop
push
mov
cltd
dec
or
lahf
aad
fldcw
xor
mov
push
insl
daa
stos
jbe
dec
or
pop
add
lods
or
sbb
movsb
or
js
fmull
outsl
orl
fcmove
and
jno
cmp
imul
loope
hlt
dec
pushf
add
mov
bound
out
mov
es
mov
adc
in
mov
ret
insl
push
push
in
cmp
and
dec
cmpsl
inc
mov
in
mov
fimuls
scas
add
mov
in
lcall
push
mov
ds
dec
ret
into
cld
jp
add
sbb
push
es
icebp
xchg
dec
js
jecxz
mov
push
fistps
aas
sub
mov
sub
mov
fs
rorl
sub
adc
or
or
scas
inc
mov
stos
movsl
data16
sahf
mov
dec
adc
fs
sbb
jns
pop
push
xor
addl
push
ret
loop
imull
xlat
cmpb
push
in
jp
pop
mulb
out
xor
lds
fbld
pop
inc
mov
ds
jne
and
fldcw
insl
loopne
push
popa
imul
adc
das
jnp
and
push
das
pusha
sbb
pop
dec
sbb
jg
pop
ss
std
std
or
and
gs
loopne
push
test
das
jg
pop
cli
dec
bound
fisubrl
jmp
cmpsl
mov
push
cmp
movsl
movsb
adc
sub
imul
sbb
mov
adc
xor
inc
mov
push
outsb
mov
loope
js
and
cli
push
negb
and
push
daa
mov
push
jnp
pop
bswap
mov
dec
push
push
loopne
dec
xchg
jnp
mulb
std
xchg
mov
fldl
mov
and
fsub
mov
sti
in
jp
adc
push
test
scas
imul
xchg
and
fldenv
stc
movsb
push
push
or
das
or
scas
int3
out
adc
mov
inc
int3
jge
pop
mov
mov
fsubrl
scas
mov
xor
fnstcw
push
cmp
data16
sub
jl
data16
lea
adc
faddl
jge
cmc
adcl
ljmp
in
movsl
js
rcrb
mov
int
push
add
outsl
in
xor
jle
stos
mov
nop
pop
dec
lods
fisttpll
daa
in
fs
push
sub
sub
lea
pop
push
and
sbb
fucomip
sub
fisubs
and
in
call
insb
jmp
cmp
and
outsb
bound
xchg
fistps
int
sarl
xor
loop,pn
push
sahf
add
adc
sub
in
out
leave
sub
cli
call
dec
inc
push
add
imul
insl
dec
sahf
sbb
aad
out
mov
adc
mov
rorl
mov
mov
lret
imul
dec
cwtl
addb
in
xor
push
or
adc
js
cli
repnz
dec
cli
push
mov
shll
fadds
or
in
mov
repnz
fildll
jae
xor
in
pop
mov
lds
outsb
std
inc
mov
cli
insl
ret
adc
aas
scas
cmp
int
mov
pop
xchg
cmc
sbb
mov
and
jne
into
jbe
call
adc
mov
pusha
es
jae
inc
enter
roll
jg
stc
js
xor
jbe
or
push
xchg
push
cmp
fs
add
pop
pop
lret
push
add
imul
lock
xchg
sub
pusha
xor
fiaddl
add
jl
js
sub
xchg
repnz
inc
mov
dec
mov
les
loopne
iret
adc
into
sbb
fiadds
adc
sbb
test
cmc
sarl
in
push
std
xlat
xchg
sub
insb
scas
jge
xchg
mov
roll
je
or
or
push
cmp
mov
sahf
flds
jg
ja
enter
adc
dec
std
xchg
push
add
dec
add
faddp
lahf
les
call
inc
lock
mov
cld
xchg
jnp
dec
or
xor
mov
sahf
cli
jbe
fnstcw
outsb
jo
pop
fildl
stos
scas
xor
decb
in
scas
sti
ljmp
pop
and
sub
xor
test
adc
ficoms
sbb
lcall
enter
les
sbb
stc
mov
repz
ja
movsb
shr
fistpll
sti
outsb
sbb
js
add
leave
int
xchg
mov
adc
and
outsl
mov
push
inc
mov
lret
xchg
hlt
jp
add
lods
mov
scas
fbld
sbb
cli
mov
mov
std
push
rclb
imul
jae
jl
push
mov
push
xchg
jecxz
subl
sub
mov
xor
xchg
lret
rol
gs
push
or
add
adc
cmp
popf
mov
sub
dec
dec
stc
ds
xor
xor
ds
ljmp
pushf
mov
pushf
in
ljmp
mov
jo
sbb
jae
inc
fsubrs
mov
xlat
insb
xorl
in
imul
stos
or
push
mov
push
adc
adc
pop
jle
dec
nop
or
mov
mov
aas
pusha
les
ja
cmp
sbb
enter
filds
fisubl
loopne
pop
mov
repnz
popa
subl
lds
lock
out
sahf
setb
gs
push
add
sbb
fnstenv
clc
cmp
jns
pop
mov
movsb
push
rcll
xchg
js
dec
dec
daa
cmp
fstpl
adc
xchg
pop
xor
add
sti
xchg
mov
dec
mov
cmp
push
rcl
outsb
mov
sub
lock
mull
add
adc
mov
push
in
or
mov
xchg
fcomi
inc
into
push
dec
jmp
enter
movsb
es
fwait
sub
sub
imul
repnz
add
into
in
pop
jecxz
imul
icebp
cmpsb
in
inc
push
or
pop
mov
xchg
mov
add
jno
lods
and
clc
adc
push
dec
leave
outsb
imulb
ja
mov
pop
xor
divb
mov
scas
jne
sarb
loop
adc
in
in
loope
bound
xor
in
sub
lea
inc
pop
scas
sbb
enter
in
es
sub
ficompl
xchg
lret
addr16
divb
sarb
icebp
shll
aad
lret
icebp
mov
push
and
jae
adc
das
clc
sbb
cmpsl
inc
sarb
xor
and
jecxz
cli
xchg
inc
dec
dec
adc
pop
inc
jno
pushl
jbe
jo
and
mov
push
dec
mov
mov
mov
mov
pop
sbb
js
lods
loopne
cmp
mov
ret
mov
int3
dec
sub
adc
lods
inc
mov
push
adc
mov
dec
aas
inc
mov
test
sub
lds
cmp
lcall
push
jg
jnp
adc
shll
sbb
xchg
scas
push
push
xorps
mov
cmp
fidivl
imul
rcrb
mov
cmp
and
fadds
push
outsb
call
mov
stc
mov
pop
fmul
pop
insl
mov
mov
nop
adcl
push
daa
xchg
push
movsb
push
movsb
sbb
shll
mov
iret
mov
jle
stos
mov
in
inc
inc
popl
nop
pop
cmpsb
loop
into
loopne
insl
pop
repz
into
js
sbb
inc
in
jae
or
xchg
mov
dec
test
mov
xorb
or
ss
aad
jns
bound
rorl
jp
adc
imul
cmc
sbb
popf
sbb
ret
dec
stc
add
ja
cld
pop
pop
or
pop
push
clc
enter
pop
pop
out
xchg
push
dec
pop
rol
ja
dec
pop
sti
xchg
sahf
pop
dec
pop
imul
and
insb
adc
stos
or
jecxz
fidivl
inc
inc
sbb
add
sti
enter
push
int3
popf
xchg
pop
dec
pop
add
and
add
inc
mov
and
or
loopne
sub
aaa
inc
jae
dec
lds
or
add
cmp
sbb
addl
dec
dec
sbb
mov
clc
insl
data16
cmpsl
fstl
mov
push
aad
cs
out
les
les
cs
test
pusha
test
pushf
cwtl
or
mov
push
adc
xchg
addr16
fists
mov
jo,pt
dec
xchg
in
sub
mov
stos
mov
ficoml
test
dec
cwtl
or
jo
or
push
inc
cmpsl
dec
jecxz
js
push
ljmp
sbb
sbb
dec
loopne
mov
push
lods
jg
jns
enter
ret
xchg
outsb
push
aam
jae
cmp
out
dec
dec
lds
xchg
scas
or
sarl
cs
pop
rorb
add
aam
hlt
popf
sbb
lcall
push
pop
mov
jle
arpl
adc
add
sbbb
adc
aaa
inc
pop
ret
movsb
xchg
add
dec
cwtl
sti
imul
sbb
xchg
int3
xchg
in
aas
push
mov
popf
cwtl
push
mov
js
cld
out
cwtl
adc
data16
sahf
xchg
inc
inc
adc
lods
insl
idivl
pusha
out
icebp
xlat
shr
mov
pushf
mov
fistl
aaa
ret
inc
jle
jae
fimull
mov
incl
xor
lods
rcrb
mov
xchg
xchg
and
cs
adc
movsl
adc
dec
jp
ret
adc
jecxz
int3
les
fs
jo
inc
or
or
push
clc
xor
mov
mov
pop
add
inc
mov
pop
and
insb
outsb
xchg
push
push
inc
lret
outsb
mov
pusha
repz
in
int3
pop
xor
enter
cmp
mov
xlat
gs
pop
insl
mov
dec
cmp
in
jge
mov
shl
popa
mov
or
xlat
adc
repnz
aas
pusha
dec
xlat
ss
xorb
mov
mov
inc
hlt
fucomp
out
mov
cs
stos
jbe
jo
jmp
mov
es
popf
xlat
cmc
test
out
iret
pop
add
cld
nop
push
mov
ds
cmp
imul
push
mov
cmp
xor
and
cmp
inc
mov
ja
inc
jecxz
mov
push
sbb
push
pop
iret
into
mov
ljmp
popf
aaa
ja
push
pusha
mov
in
sarl
xor
pop
jnp
adc
shrb
sub
test
push
pop
scas
gs
out
lock
inc
xor
xlat
sbb
mov
into
enter
pop
pop
lds
scas
into
mov
sub
lahf
sub
hlt
dec
jp
out
push
push
sbb
clc
and
pushf
jmp
fdiv
mov
xchg
in
lret
adcw
sub
jge
sub
ss
or
jecxz
ljmp
jo
sarl
sbb
js
jmp
aas
add
inc
and
in
mov
jmpw
test
js
fistpl
je
adc
out
subl
cmpsb
loop
pop
pop
dec
es
ficomps
mov
push
jmp
mov
leave
fs
loop
jmp
stos
xchg
xchg
pop
test
loope
pop
daa
hlt
jne
xchg
aam
pop
sbb
cwtl
push
mov
mov
fadds
push
jle
jl
hlt
jno
mov
pop
fisubrs
sub
int3
sub
adc
clc
outsb
lahf
lods
mov
and
lds
fsubs
or
fisubrs
out
mov
ja,pt
out
sub
dec
shll
shrl
jb
sbb
adc
jbe
out
lods
inc
cwtl
or
jbe
dec
icebp
and
repz
loop
dec
sbb
mov
sbb
rcll
leave
xchg
push
cmpb
test
and
lock
and
mov
push
pop
cs
mov
rcll
lret
add
inc
xor
push
mov
lret
push
xor
add
adc
js
jecxz
bound
jecxz
cli
cli
out
mov
nop
dec
out
add
dec
sub
cmp
das
inc
outsl
rorb
clc
xorb
mov
adc
xor
or
mov
nop
out
mov
and
aam
ret
jno
cs
call
and
xchg
inc
pop
push
xor
lock
sub
in
adc
cmp
dec
push
add
xchg
sbb
dec
int3
test
fldcw
fs
push
add
pop
dec
adc
mul
stos
imul
leave
jmp
mov
push
jl
stos
or
jbe
hlt
push
inc
or
and
call
jmp
adc
push
je
in
mov
inc
enter
jb
popa
xchg
cld
push
mov
arpl
and
jmp
jno
test
push
pop
rcrl
hlt
movsb
adc
lock
jb
fsubs
lods
sti
sub
nop
out
adc
push
sbb
inc
in
jle
adc
cmp
ljmp
xor
dec
bound
movsl
dec
and
dec
jno
jecxz
fdivl
scas
jmp
std
mov
pop
jbe
or
lods
cmp
and
popf
repnz
ror
xchg
popf
push
out
sbb
sbb
adc
add
push
push
lds
scas
mov
nop
movsl
test
lret
jg
mov
mov
fs
and
lock
ds
loopne
mov
cmpsb
arpl
and
pop
or
or
sar
cld
xchg
and
pop
clc
mov
fstps
lods
inc
mov
xchg
adcb
xchg
xchg
push
and
and
gs
ds
sub
mov
clc
mov
dec
int3
sbb
add
jl
lock
dec
sbb
enter
out
movsl
subb
push
push
test
jp
and
cwtl
xchg
testl
imul
subl
outsb
and
jo
or
arpl
mov
mov
cmp
fwait
popf
enter
sbb
testl
mov
pop
inc
shlb
jne
decb
pop
xchg
xchg
cmp
cld
pusha
lods
mov
mov
mov
jno
gs
and
jb
cli
test
mov
pop
je
aas
dec
lcall
cmpsl
fistpl
pushf
adc
sub
adc
xchg
push
test
arpl
cmp
cltd
mov
outsb
movsb
mov
lcall
push
sub
test
jne
in
xchg
call
jnp
xor
mov
dec
fnstsw
pop
std
mov
incb
out
jae
pop
sbb
orb
std
xchg
fisubs
mov
in
pop
int
pusha
call
cmpl
lds
dec
repz
inc
dec
or
mov
loopnew
sbb
push
jmp
sbb
lret
cmpxchg
sbb
push
sti
aaa
lea
pop
inc
repz
cmp
xchg
mov
pop
jb
push
repz
adcl
sbb
cmpsb
and
movsb
iret
xor
xchg
sub
test
stos
sbb
dec
xchg
test
testb
push
inc
insb
pop
hlt
mov
sti
mov
fucomip
aas
leave
and
sbb
sbb
sti
sahf
lahf
jl
leave
mov
test
dec
xor
data16
lret
loopne
rcrl
pop
bound
inc
dec
sbb
mov
enter
xor
mov
cmpsb
outsb
ljmp
sub
xchg
out
add
or
rol
sbb
lret
jne
push
bnd
cltd
push
repnz
push
xchg
pop
xor
adc
je
sahf
popf
imul
jne
push
cld
test
mov
cwtl
sbb
fcmovbe
mov
test
or
xchg
mov
push
jno
aas
popf
pop
test
sub
movl
lret
es
out
sbb
inc
lcall
mov
pop
inc
mulb
aaa
mov
out
xor
add
xchg
pop
add
fwait
das
cmpsb
mov
mov
mov
out
lods
loopne
add
jns
mov
jne
sbb
iret
add
into
fcoms
inc
pop
aas
jae,pt
fwait
mov
sbb
shll
add
or
into
clc
pop
sti
sbb
pushf
sbb
lahf
insl
aas
lods
pusha
fdivr
or
jle
test
xchg
jb
mov
shl
int3
pushf
pop
sub
lret
out
pop
je
and
mov
jp
ret
mov
repz
xor
mov
fcomp
ss
leave
and
pop
fsubl
jne
mov
lea
fmul
sbb
mov
jmp
mov
xor
push
shlb
int
jno
xchg
shrl
mulb
inc
addr16
or
dec
push
lods
sahf
icebp
gs
jge
frndint
mov
sub
add
mov
ljmp
sbb
sbb
sbb
ljmp
jnp
lret
push
pop
adc
push
push
pop
cmp
sbb
push
sbb
les
clc
shr
mov
daa
mov
or
cmp
int
cmp
sbbl
adc
hlt
cmpsb
popa
mov
adc
fadd
mov
jl
test
pushf
fwait
jbe
cmp
fnsave
aam
dec
jns
and
or
icebp
outsl
test
scas
jp
dec
lcall
xchg
xchg
dec
xchg
mov
pop
jl
sub
add
jle
xchg
sbb
pop
fbld
lcall
mov
mov
mov
fmull
idivb
xor
push
outsl
in
clc
dec
cmp
dec
neg
pop
cmpsb
mov
in
fnstcw
or
mov
xor
inc
lods
ja
fisubrs
addr16
and
loopne
sbb
cmpsl
cwtl
sbb
ds
out
and
mov
lods
bound
stos
test
sbb
xor
push
push
cmp
in
add
or
xchg
scas
mov
in
mov
jle
outsb
clc
jb
cmp
lahf
popa
mov
push
push
add
mov
jecxz
jbe
pusha
inc
dec
mov
ljmp
adc
or
and
dec
mov
fwait
pop
dec
cmp
add
lods
inc
jb
adc
das
sbb
sub
jmp
add
adc
adc
or
aas
in
inc
push
repz
add
sbb
outsb
dec
lea
repnz
mov
fcoml
inc
jle
mov
les
shll
inc
fcoms
or
sbb
push
push
pushf
cmp
or
popf
leave
mov
mov
cld
outsb
xor
jge
stc
mov
mov
das
adc
mov
or
jne
repz
and
std
mov
sub
cmpl
add
jne
xlat
leave
cld
mov
jecxz
mov
add
jecxz
frstor
sub
lahf
pusha
test
jbe
pushf
sti
mov
push
sbb
enter
in
or
fstps
mov
and
and
movsb
mov
shrl
pop
inc
cld
aaa
cmpps
add
sbb
pop
sub
and
mov
adc
enter
add
adc
or
lcall
add
mov
arpl
mov
subl
push
sub
push
dec
add
mov
jl
and
hlt
add
push
stc
mov
out
jmp
fimull
xor
push
movsl
lret
mov
jne
lahf
mov
out
ja
mov
repz
mov
jp
push
adcl
push
adc
mov
idivb
sub
add
les
cltd
fldl
mov
sbb
mov
lret
aad
mov
rolb
pop
sbb
or
shlb
pop
or
cmp
mov
in
sahf
xor
cmp
or
pop
ret
bound
jno
jno
xchg
or
cwtl
or
bound
sub
push
rol
sub
mov
outsb
push
cli
fwait
pop
adc
xor
and
jno
xchg
inc
dec
sub
ficoml
aas
pop
fdivl
lock
add
xchg
add
into
mov
jnp
push
xchg
in
xchg
fidivrs
pop
pop
push
inc
mov
ficompl
pop
xchg
dec
imul
jge
lock
loope
data16
sub
push
into
adc
adc
lea
push
arpl
jb
mov
inc
and
jb
sbb
sahf
pop
dec
imul
sbb
lsl
jnp
sub
movups
sahf
sbb
sbb
popf
scas
lcall
dec
dec
sbb
mov
lcall
xor
fld
add
push
int3
fwait
repnz
jno
push
xor
daa
pop
daa
xchg
cmp
xchg
test
xchg
fldcw
sbb
and
xchg
lds
insb
lods
mov
addl
fidivrl
out
xchg
and
dec
adc
inc
arpl
mov
cmp
repz
outsl
cmp
push
fwait
xor
in
mov
lock
and
ficompl
popa
pop
add
inc
jno
mov
icebp
cmpsl
ljmp
mov
dec
pushf
stos
rcll
adc
pop
push
addr16
daa
sub
mov
adc
das
mov
jle
nop
ret
cmp
aam
xor
and
jo
imul
dec
loope
testl
inc
push
push
cmpl
data16
clc
fsubrs
push
jb
cs
or
push
aaa
push
inc
xor
xor
jno
stos
sbb
add
push
xchg
mov
ljmp
or
cmpsb
popf
mov
push
neg
lock
shl
gs
jg
push
fldenv
std
bound
mov
push
adc
xchg
out
xor
add
sahf
jp
mov
dec
cmp
pop
add
pop
outsb
test
mov
dec
cmpsb
xor
and
adc
les
pop
loope
dec
ja
cltd
scas
int3
cmpsb
cmc
inc
nop
push
scas
dec
movups
and
xchg
mov
mull
pushf
cmpsl
xchg
in
aam
mov
daa
mov
fwait
aad
mov
loop
fstpt
lret
loop
es
lods
cmc
jmp
mov
mulb
lock
dec
mov
sbb
testb
out
sbb
sti
fimuls
rep
cmp
insb
loopne
sbb
sbb
pop
or
mulb
jo
sub
arpl
ljmp
pop
lods
and
and
inc
mov
cltd
or
dec
dec
lods
int3
cmpb
std
in
add
push
rol
adc
sbb
push
add
iret
xor
aaa
mov
pop
mov
adc
inc
xchg
or
es
mov
xor
jge
jbe
in
mov
in
cs
shll
mov
xor
mov
ficompl
arpl
sahf
pop
or
xchg
push
jecxz
xor
mov
jb
mov
and
lret
imul
pop
repnz
xchg
test
lret
in
cmpsb
stos
fistps
and
ret
push
inc
or
mov
fnstcw
sbb
pop
pop
xor
ds
aaa
rcll
aas
data16
aad
cmp
fsubrl
xchg
lds
cs
imul
xchg
cmp
ja
or
xchg
arpl
xchg
in
imul
pop
mov
push
aad
bound
pop
mov
inc
mov
aam
shl
icebp
mov
sbb
add
cwtl
leave
daa
cmp
push
inc
clc
aad
sbb
and
mov
in
lds
je
cmp
cmp
push
mov
into
dec
pop
ret
push
sub
pushl
shll
out
push
add
or
pop
ficoml
insl
repnz
arpl
mov
fcmovnb
jl
or
adc
rorb
and
pop
cltd
std
lret
into
sbb
xchg
insl
mov
sarl
cmp
and
add
subb
imull
loop
mov
rcrl
test
dec
lock
in
push
or
pop
stc
cmp
mov
cli
ja
xchg
push
adcb
push
mov
mov
mov
jge
ljmp
cmp
nop
jmp
and
jnp
xchg
dec
in
or
pushf
add
sbb
rolb
inc
popa
iret
bound
add
push
jle
push
stos
mov
jmp
std
mov
out
xchg
rcrl
jns
cld
cmpsb
int3
loopne
inc
sub
and
pusha
test
test
and
add
inc
testl
dec
rcrl
cmc
cmc
lret
inc
inc
sbb
shl
lret
cltd
loope
xchg
std
in
add
test
iret
pop
inc
repz
jge
and
pop
dec
enter
pop
cmp
push
movsl
cwtl
mov
pop
mov
cmpsb
cld
movsb
rcrl
pusha
test
sub
cmp
and
mov
test
sub
mov
dec
ljmp
jne
lods
xor
sub
ret
push
cmp
in
popa
movsl
sub
jnp
les
ret
sbb
jbe
lds
mov
negl
fcom
es
les
jae
add
xorl
sbb
mov
in
add
add
in
movsb
cmp
jl
test
lock
mov
xor
sub
lret
mov
xchg
outsl
je
ss
cmp
add
repz
pop
addb
stos
dec
sub
dec
shl
xchg
xchg
mov
movsb
pushf
pop
sbb
cmpsl
popf
cld
test
push
mov
push
popa
and
stc
pop
shl
into
push
fsubs
lock
push
push
cmc
pop
lcall
pmulhw
inc
dec
xchg
dec
sbb
mov
pop
and
push
scas
mov
daa
ja
fisubrs
push
cmp
iret
xor
push
pop
loopne
addr16
dec
dec
pop
orb
xlat
sbb
lods
cmp
test
dec
pop
ror
movsl
add
push
xor
ss
mov
sub
push
adc
push
loopne
push
jne
mov
jno
lahf
test
sbb
scas
xchg
in
shrb
cmpsl
sbb
pop
push
and
pop
cmp
hlt
lock
movsb
jns
mov
adc
dec
pop
and
xchg
adc
jns
sub
mov
jge
or
or
inc
sti
idivl
push
mov
mov
inc
lcall
or
adc
jg
mov
hlt
dec
test
xchg
xchg
mov
orl
xor
jmp
cmc
sbb
rclb
in
lret
out
add
aaa
pop
mull
icebp
inc
lods
jns
add
sarb
inc
cmp
fldcw
mov
cmpsb
imul
dec
fs
cmp
fldl
adc
addr16
xchg
push
adc
inc
lds
mov
jne
push
test
cwtl
in
inc
gs
inc
dec
rorb
test
fwait
add
push
xchg
in
lds
out
dec
xchg
cmp
sub
jnp
cmp
mov
xor
mov
jae
dec
cmp
jbe
jmp
add
push
sahf
sub
push
shl
sahf
fldcw
cltd
ret
loopne
inc
push
je
aad
and
out
dec
jne
stos
gs
inc
shl
push
stc
shrl
pop
xchg
incl
popa
inc
sti
add
cli
jl
pop
inc
fldcw
dec
xchg
push
aad
in
add
mov
arpl
mov
ja
testl
mov
mulb
cmp
cmpsl
sub
xor
jae
aaa
inc
dec
mov
out
sub
add
cmp
loope
dec
push
and
mov
psubb
xchg
mov
adc
push
dec
fwait
and
sub
lahf
cmp
cltd
call
push
inc
cmp
dec
and
popf
lock
jmp
or
lds
mov
iret
mov
mov
fisubl
hlt
jmp
mulb
test
pop
lcall
pop
gs
rcr
aaa
pop
les
cmpsb
lods
xchg
fstl
add
aaa
dec
int
xchg
hlt
lahf
and
mov
out
test
xchg
pop
out
lret
sub
sub
lds
push
scas
je
out
test
push
lret
call
ja
mov
pop
negl
std
push
mov
ljmp
arpl
daa
jno
mov
mov
fidivl
popa
mov
lods
stc
jae
xlat
fildl
add
subb
pop
leave
lret
fucomp
data16
or
enter
and
xor
test
fisubs
fwait
gs
sbb
bnd
test
popf
xor
adc
dec
mov
js
dec
xchg
and
pop
mov
stos
jg
xorl
out
gs
popf
adc
jb
je
xor
aaa
or
lret
loopne
inc
pop
lret
jo
shll
sbb
jmp
into
or
ja
lcall
into
mov
sub
sub
gs
xor
sub
xorb
popf
inc
add
outsl
movsb
lods
or
xorl
int3
insb
popa
push
ljmp
lea
jns
sub
lahf
or
dec
insl
or
mov
arpl
inc
and
inc
pop
push
mov
mov
mov
ror
jg
pop
fiaddl
icebp
push
xchg
jbe
lods
xchg
mov
test
fnstsw
in
jmp
cli
fsubrl
add
stos
jae
cmpsl
sbb
add
aaa
sub
mov
test
or
jg
jno
rclb
inc
mulb
jae
mov
wbinvd
call
dec
and
lahf
mov
and
or
jle
rorl
push
out
jns
push
inc
and
jne
dec
cmp
xchg
imul
loop
cmp
dec
popa
shrl
addb
dec
mov
divb
jno
lea
pop
pusha
lea
xorb
mull
and
subl
add
jo
dec
adc
in
sbb
das
dec
jbe
mov
xlat
lcall
in
inc
and
pop
mov
push
adc
inc
sti
pop
add
adcl
xor
or
enter
iret
inc
sub
jl
pop
mov
in
or
subl
push
lea
xor
xchg
rclb
xchg
jb
sub
pop
add
sbbb
in
ja
les
jb
or
div
stos
fstpt
movsb
cmc
cs
adcb
lods
lcall
dec
cli
dec
adc
test
mov
ror
push
and
cwtl
dec
loopne
std
push
in
popa
loopne
jecxz
jbe
adc
enter
cmp
mov
mov
ret
pop
sub
ss
xchg
stc
inc
push
sub
jae
loopne
push
ss
sbb
in
sub
mov
or
ljmp
xor
loopne
lcall
mov
imul
cmp
pop
cmpsl
dec
imul
jecxz
es
jns
xor
xor
push
xor
jl
pop
pop
pop
addr16
dec
mov
repz
aaa
jp
stc
jne
jb
or
add
insl
sbb
xchg
xchg
ds
xchg
mov
xchg
mov
add
adc
inc
divb
mov
xchg
cld
dec
mov
jmp
testb
cld
jp
dec
mov
iret
cmpsb
add
loopne
mov
scas
sbb
icebp
and
lret
out
xchg
les
add
xchg
xchg
mov
divps
dec
sbb
orl
sbb
jmp
xor
lahf
fidivrs
les
loopne
mov
test
push
fldl
movsb
dec
fwait
sub
mov
clc
add
insb
pop
pop
cltd
fcmovnbe
xor
scas
sub
rolb
xchg
lret
inc
add
adc
dec
les
test
test
sub
lods
addr16
adc
imul
cmc
jge
push
frstor
sbb
cmp
mov
xlat
dec
lods
mov
dec
rcrb
dec
imul
imul
icebp
or
jge
movsb
push
fisubrs
repz
dec
nop
mov
aas
andb
in
mov
push
mov
cltd
icebp
push
push
xor
adc
es
ljmp
xor
mov
cmpsl
jno
adc
sub
adc
cmp
dec
stc
adc
add
clc
fisttpl
loopne
add
mov
rol
in
cmpsb
mov
mov
sbb
cmp
popf
add
cmpl
pushf
cmpsl
in
xor
lock
jnp
mov
dec
jmp
xchg
xchg
add
push
cmpsl
lods
subl
hlt
mov
sbb
or
mov
dec
ljmp
jns
out
adc
lcall
mov
imul
lahf
inc
jbe
pop
mov
dec
cld
enter
cmp
push
ljmp
jbe
push
out
jns
mov
repnz
cmp
jbe
cmc
iret
fisttps
pop
mov
sarl
popa
cmpsl
or
push
out
call
dec
out
xchg
dec
xchg
std
jle
subl
and
inc
loope
aaa
sbb
push
insl
fbstp
jmp
inc
out
dec
or
leave
inc
int3
xchg
es
shlb
mov
outsb
jns
mov
dec
adc
cmpsl
cld
adc
xchg
shll
insl
shll
pop
push
jb
repnz
stos
dec
adc
popa
xchg
sahf
pop
adc
push
pop
push
xchg
mov
jecxz
or
mov
dec
sbb
sbb
dec
jle
xchg
xor
call
xchg
repz
pop
sbb
cmp
fwait
sti
ds
pop
fwait
push
sbb
loopne
push
mov
shlb
or
sbb
pop
enter
in
or
pop
jp
pop
jl
out
popf
out
inc
dec
gs
mov
pop
cmp
in
push
or
cli
inc
lret
sub
mov
jge
jnp
pop
cmp
inc
stos
into
in
sub
mov
cmc
and
and
repnz
cs
lea
push
pushf
lret
in
cli
addr16
nop
leave
sbb
sti
xor
xchg
cmp
les
pushw
lods
add
in
or
mov
cwtl
stc
mov
mov
push
mov
pop
sbb
cmp
mov
psubsb
sbb
inc
add
hlt
cmp
mov
je
aam
mov
mov
pop
or
or
cmp
setnp
in
add
fucomi
fiaddl
xor
repnz
insl
cmp
in
cmp
ss
mov
mov
test
aad
jecxz
push
cli
inc
mov
fistpl
xchg
mov
sub
shrl
ljmp
loope
test
ds
jg
in
stos
into
scas
icebp
sbb
fistpll
mov
push
mov
cmp
jns
and
enter
mov
aaa
lods
pop
adcb
or
stos
clts
xlat
xchg
out
mov
js
xchg
jbe
adc
mov
xchg
data16
dec
test
std
testl
into
pop
inc
pop
and
in
cmpl
pop
xchg
gs
scas
test
dec
imul
or
and
cli
ret
out
mov
mov
cmp
mov
mov
lcall
sub
dec
add
lds
sbb
scas
mov
js
push
cmp
add
fdivl
jns
or
pop
imul
mov
shrl
pop
jl
jg
fs
jmp
sub
movsb
sahf
sub
inc
popf
scas
daa
push
mov
push
add
shr
movnti
aad
call
xchg
bound
jl
bnd
or
insb
data16
and
arpl
xchg
lcall
cltd
push
sbb
or
dec
popa
shrl
rol
push
clc
imul
dec
int
and
fbstp
mov
mov
xor
cs
mov
lds
adc
lds
adc
insl
iret
in
adc
jno
ss
adcb
mov
mov
push
mov
mov
fyl2x
inc
mov
adc
mov
dec
dec
ds
sub
jno
add
dec
or
ds
aad
jle
xchg
or
jle
imul
inc
xchg
arpl
cld
in
sbb
sbb
repz
int3
repz
or
pop
insb
dec
adc
inc
outsl
fs
adc
stos
inc
jne
paddb
iret
adc
dec
lcall
adc
sbb
or
into
test
pop
xchg
roll
ret
dec
mov
fsubrs
adc
mov
xor
xor
rcr
cmp
inc
xchg
xchg
add
loopne
push
mov
xor
iret
adcl
cltd
sub
pop
divl
jo
pop
dec
arpl
fs
xlat
sub
jne
cmpsb
jl
inc
out
cmp
xor
es
stos
hlt
jmp
mov
cltd
fcompl
outsb
lret
sub
popa
xor
push
mov
xor
mov
push
push
xor
mov
pop
std
jg
notb
cmpsb
mov
mov
lret
mov
outsb
pop
mov
inc
push
pop
mov
xchg
adc
je
shll
repz
mov
push
xor
sbb
movntq
int3
and
xchg
jae
or
mov
dec
sub
cmpsl
and
xchg
jp
cwtl
outsb
in
xchg
mov
inc
in
add
rclb
mov
nop
test
int
push
add
ret
lds
std
ficompl
aas
fcmovu
push
inc
hlt
sbb
jge
out
lods
iret
cmp
inc
lds
sbb
mov
test
shlb
lcall
jne
mov
stos
fisubrs
push
push
push
cwtl
mov
fdivrp
outsb
mov
es
stos
pop
mov
xor
and
fstps
add
mov
bound
mov
xor
adc
pusha
lods
pop
nop
nop
dec
jb
cmp
add
add
xor
push
adc
ds
popa
clc
push
and
fs
xchg
mov
cmp
or
popa
leave
inc
add
xchg
bound
ss
mov
jmp
lods
push
xchg
sub
popa
stc
xor
xchg
mov
nop
jge
mov
pop
mov
loope
jg
add
xlat
dec
addb
loopne
mov
jmp
xchg
jb
cli
dec
mov
ljmp
addr16
mov
mov
fsubrp
into
gs
cli
insl
add
test
xor
test
mov
xchg
cmp
andl
jecxz
push
in
jg
jno
cmpsb
pop
or
aas
rorb
xchg
test
gs
addr16
cmpsl
adc
push
mov
or
inc
mov
dec
or
fidivl
les
mov
push
mov
or
fcmovb
lea
jle
movsl
std
out
sbb
push
mov
fsubs
push
xor
in
jmp
imul
mov
pop
shl
sbb
call
sub
mov
testl
mov
and
cmc
daa
and
nop
sahf
cwtl
movsl
adc
or
ja
dec
cmpsb
fldt
outsb
add
mov
fwait
pop
mov
or
das
iret
dec
icebp
scas
jle
jb
mov
rcr
cmpsb
dec
add
pop
sbb
jecxz
imul
dec
push
fwait
and
lret
dec
notb
cmpsb
ss
ds
xor
jl
iret
sahf
sahf
jmp
shlb
dec
jl
insl
mov
or
xchg
adc
cmp
xchg
sub
pop
push
int3
aam
dec
xchg
jno
test
repz
inc
dec
imul
shr
pop
lock
mov
aas
inc
inc
sbb
add
movsb
and
sahf
dec
pusha
cmp
aas
negl
jl
cmp
sti
fisttpll
jne
dec
pop
xor
out
xchg
mov
aaa
sub
sbbb
shlb
fs
ja
fidivrl
mov
imul
jno
je
repnz
dec
out
dec
ds
rclb
fsubrl
call
rolb
lret
cmp
sahf
mov
inc
lret
xor
test
cmpsb
jns
cmp
and
push
popf
pushl
xchg
ljmp
shlb
sbb
stos
add
xchg
sti
lods
mov
and
sub
mov
mov
xchg
or
lds
push
stos
int
flds
imul
sub
clc
dec
fisttpll
in
dec
mov
ds
pop
push
inc
mov
pop
pop
pop
jno
pop
sbb
adc
pop
push
jno
jnp
jmp
rcrb
clc
popf
pop
enter
pushf
pop
xor
pop
inc
shl
sbb
out
push
mov
cmovp
xchg
push
fdivr
test
sub
adc
addr16
movsl
outsl
into
pop
cmp
xchg
rcrb
or
jo
and
mov
je
lods
jae
je
out
jbe
bound
inc
mov
pusha
out
or
js
sahf
push
daa
repnz
dec
imul
push
ret
and
cmp
in
ret
dec
setg
scas
pop
inc
adc
rclb
int
mov
out
mov
mov
dec
adc
mov
les
xchg
inc
push
inc
pusha
mov
dec
das
dec
shll
sub
add
cmp
add
dec
outsb
mov
mov
movsl
cli
xchg
adc
jae
sub
mov
xor
daa
adc
push
cli
lcall
lcall
ret
xchg
push
cld
enter
lcall
pusha
lods
jp
lcall
outsl
and
aad
mov
roll
mov
lahf
xor
push
repz
pop
push
std
push
hlt
or
xchg
clc
xchg
xor
bound
mov
bswap
repnz
subb
insl
and
dec
int3
cwtl
push
xchg
fimuls
push
and
dec
sbb
popa
xchg
jno
pop
push
sub
mov
sbb
mov
outsl
icebp
sub
jbe
sarl
shlb
lahf
xchg
fstl
or
in
insl
enter
xor
or
or
adc
sub
dec
js
repz
xchg
and
adc
pop
push
addl
mov
js
cmp
push
xchg
leave
mov
xchg
jecxz
sub
and
icebp
push
inc
xlat
cmp
imul
pop
xchg
jo
rcr
dec
and
jp
push
push
dec
mov
imul
test
pop
pop
rcrl
scas
addl
cwtl
and
negb
pusha
in
inc
fidivrs
adc
mov
addr16
repnz
and
mov
push
or
cmpsl
js
rclb
cwtl
jns
insb
mov
mov
shr
jecxz
and
cmp
pop
mov
xchg
ret
icebp
mov
pop
je
cmp
aam
mov
push
or
sub
sub
pop
enter
rolb
data16
aaa
dec
push
cs
xchg
test
pushf
lret
pop
rolb
sub
adc
pop
xchg
xlat
adc
mov
and
xor
rcrl
pop
mov
cwtl
sbb
imul
mov
mov
ja
shlb
mov
cmp
sarl
fiadds
nop
negl
outsl
adc
pop
mov
cmc
outsl
mov
sarb
leave
lds
nop
insb
inc
pop
push
xchg
push
mov
loopne
sub
addr16
in
repnz
rcrb
loop
in
push
xor
dec
cs
fdivrs
les
pusha
les
dec
bound
pushf
push
cmp
stc
inc
fwait
testl
gs
add
bound
out
cwtl
mov
pop
pop
out
insl
cwtl
push
inc
mov
adc
push
xchg
inc
aam
and
push
and
fldenv
std
cli
test
adc
pop
test
xchg
xor
int
sbb
stos
push
push
sub
outsb
jno
dec
imul
pushf
push
fwait
cwtl
push
jae
or
cltd
rcll
arpl
out
out
test
cmc
or
popa
cli
adc
out
fildll
mov
jns
adc
cld
inc
mov
cltd
add
lahf
sar
fldl
les
jle
repz
or
cmpsb
cmp
je
sub
enter
movsb
out
pop
pushf
and
xor
out
and
push
sub
out
out
inc
aad
mov
pop
cmp
sub
daa
jg
adc
and
popa
lock
xchg
sti
mov
or
dec
push
movl
xor
jg
test
cltd
insl
ss
mov
dec
push
or
lods
mov
lret
sbb
std
test
push
adc
inc
test
jne
xor
aas
push
cmp
add
cmp
dec
data16
sahf
mov
push
xchg
jge
inc
out
inc
and
pop
movsb
lods
movsb
ret
xchg
sub
push
sub
movsl
je
outsb
push
popa
adc
sbb
scas
cli
cs
mov
cltd
lcall
add
cmp
test
popl
xchg
mov
leave
shr
ljmp
push
outsl
cmp
or
lcall
aam
mov
rcll
cmpsb
push
clc
pop
adc
jbe
cmp
xchg
arpl
mov
in
inc
mov
lar
jb
adc
out
fistpl
pusha
cs
les
pop
out
mov
das
mov
loop
mov
ds
sub
sub
sbb
scas
roll
pop
lea
ret
or
inc
cmc
test
adc
call
or
repnz
mov
jb
in
mov
add
mov
lea
movsb
xor
test
sub
inc
sbb
inc
dec
mov
and
test
movsl
push
sub
adc
or
jnp
push
jb
es
repnz
adc
test
xor
push
push
sarl
pop
insl
ds
in
cltd
dec
xchg
add
jno
push
cmp
addr16
enter
or
inc
fstps
clc
out
rorl
leave
or
xchg
mov
daa
pop
sbb
out
insb
inc
mov
orb
mov
shll
popa
loopne
scas
cmp
xor
adc
pop
add
out
push
mov
push
into
mov
push
gs
push
aam
push
jl
xchg
movsl
pop
mull
and
shll
ffreep
scas
cmp
outsl
das
filds
or
jns
jmp
cmc
or
fucomi
xchg
sar
inc
repz
adc
push
xor
push
jnp
jecxz
stc
inc
push
pushf
cmp
cmpsl
movsl
lds
jg
out
xor
sub
cld
jno
inc
arpl
fsubs
dec
pop
xchg
call
mov
mov
fists
or
mov
fwait
dec
das
push
sub
mov
ds
insb
add
adc
xchg
insb
into
or
lcall
cmpsl
adc
xchg
test
cmp
jne
and
fwait
mov
fcmovne
cmp
mov
and
insb
push
push
mov
push
adcb
and
dec
pop
testb
jle
mov
xchg
jno
loop
pop
adc
dec
dec
dec
cmpsl
in
sbb
pop
add
xchg
stc
jge
sbb
data16
icebp
jg
ss
or
les
out
repnz
daa
into
push
das
sub
jno
push
mov
mov
sbb
pop
outsb
shlb
mov
shrl
jb
stc
push
push
jns
shrl
pop
adc
mov
or
rolb
rcl
cwtl
sub
and
mov
dec
cmp
jg
fucomp
xchg
dec
int
fisubs
inc
outsl
pushl
out
or
std
and
clc
and
cmp
add
sahf
pop
scas
shlb
iret
jae
xchg
hlt
std
jmp
dec
sbb
popf
mov
cmp
shr
shrl
imul
loopne
call
loopne
mov
stc
test
repz
mov
jne
lret
cmp
aaa
adc
in
lret
ja
pop
fwait
stos
adc
popf
je
xor
bound
pop
fwait
loopne
xor
cmp
test
lea
dec
hlt
in
and
stos
les
cmpsl
mov
xor
movsb
or
cmp
test
call
jno
scas
js
mov
xchg
mov
inc
daa
mov
ret
xchg
mov
js
cmp
xor
mov
mov
add
cmp
fs
jne
in
sbb
sub
and
cs
add
push
aad
sub
subl
cmp
idiv
pop
pop
pop
pop
repz
lods
and
gs
cmc
jle
je
xor
loopne
or
pop
jbe
mov
jbe
dec
sbb
push
lods
dec
lret
iret
mov
cmp
adc
repnz
out
jg
out
pop
xor
insb
mov
pop
movsb
mov
and
jmp
fisubrl
dec
jbe
xchg
out
jmp
cmc
aam
pusha
scas
hlt
cmp
add
mov
out
mov
lods
adc
cmp
leave
js
dec
jge
xor
xchg
push
shlb
mov
mov
cwtl
xor
outsl
push
repnz
mov
mov
add
push
adc
dec
lret
aam
daa
dec
cmpsb
pop
mov
fwait
out
jp
imul
mov
incl
xor
jl
sbb
push
lds
push
aad
aam
aaa
xor
pop
inc
lea
push
and
hlt
mov
adc
mov
scas
in
stos
mov
or
xchg
adc
lret
pop
andl
jmp
sbb
mov
xchg
or
js
fldenv
lea
clc
xor
and
xchg
and
mov
add
adc
xor
adc
jae
data16
rolb
cwtl
scas
mov
aad
xchg
lahf
mov
mov
cmpsl
jge
fs
mov
xor
mov
rcrb
cmp
push
mov
pop
decb
sbb
aaa
fcoml
and
fstl
mov
mov
adc
dec
inc
out
jnp
mov
add
adcb
mov
adc
data16
xchg
lods
stc
jle
lds
mov
ffreep
and
cli
leave
adc
jmp
sti
pop
or
push
and
pop
loopne
psraw
lods
cmp
sub
sub
cmc
mov
das
xlat
pusha
test
jmp
push
sbb
inc
stc
push
shl
push
pop
mov
or
lods
or
lret
pop
xor
pop
lahf
mov
sahf
inc
pop
divb
xor
jb
outsl
jge
mov
les
sbbb
sahf
in
xor
cmpsl
or
addr16
fs
inc
mov
inc
cli
inc
sahf
enter
xor
pop
cmp
jne
xor
pop
stos
and
bound
cmp
stos
mov
out
cmp
aam
mov
mov
inc
icebp
pop
jl
xor
and
mov
mov
inc
inc
shlb
jmp
cmp
inc
mov
or
shr
xor
adc
popw
fwait
push
test
stos
les
mov
mov
inc
cltd
or
inc
jbe
jne
push
adc
test
test
bound
dec
mov
and
lcall
jb
inc
xor
xor
mov
fists
mov
shrb
leave
cmpsl
mov
xchg
push
mov
test
push
xchg
jp
sbb
jbe
out
xchg
sarl
lret
mov
cmpb
cmp
xlat
sbb
push
inc
lds
and
mov
fstps
int3
repnz
push
pop
push
mull
mov
es
or
mov
pusha
pop
cs
fsubrs
shrl
xor
adc
ret
pushf
jle
mov
je
xor
mov
mov
arpl
push
bnd
xor
sbb
es
clc
test
and
dec
es
popf
mov
cmp
arpl
xchg
icebp
push
scas
dec
add
test
jmp
les
jbe
xchg
scas
or
xlat
mov
mov
popl
outsb
out
out
pop
int
jp
insl
jns
dec
jb
addr16
pop
pop
mov
cmp
scas
frstor
push
lds
push
sbb
sbb
decl
mov
repz
pop
lcall
movsb
movsb
inc
stos
dec
imul
rcr
addr16
divb
inc
fildll
jmp
icebp
adc
pop
jbe
aad
jg
push
data16
cmp
mov
imul
xorb
lret
jle
jae
dec
rolb
mov
push
dec
cmp
pop
push
std
and
mov
sub
stc
jg
sbb
call
cmpb
ja
emms
dec
fidivl
adcl
pop
inc
loop
xchg
push
pop
inc
stc
inc
addr16
sub
inc
pop
scas
ja
dec
icebp
sbb
push
sub
addr16
xchg
shlb
test
test
mov
sub
insl
xor
out
arpl
sarl
enter
xor
push
inc
mov
popf
mov
out
jmp
xor
les
dec
loope
push
icebp
xlat
cltd
mov
fcompl
push
push
cli
pop
sbb
and
jb
pop
loopne
push
inc
in
repz
cmpsl
jns
dec
popf
dec
shll
in
pop
or
mov
mov
jl
divb
les
pop
and
sarl
test
cli
into
outsb
or
insl
aas
fstps
push
ds
or
dec
push
jnp
sub
inc
jmp
inc
mov
pop
setbe
sub
xchg
mov
xor
lret
ret
mul
aas
xlat
inc
push
jne
out
test
and
jmp
fsubl
imul
fisubs
sub
pop
jne
jp
outsb
mov
adc
mov
xor
in
mov
mov
jecxz
daa
cli
popf
mov
jmp
cld
xlat
mov
xor
adcb
dec
out
or
and
or
mov
or
mov
jne
cli
jl
sbb
test
or
cmp
dec
movsb
leave
rclb
mov
cli
adc
jbe
push
imul
adc
xor
sbb
xchg
lods
or
cmp
shll
repz
mov
mov
lcall
dec
aaa
xchg
add
cmp
data16
test
outsb
jecxz
std
mov
lahf
mov
push
icebp
insl
push
mov
mov
popf
rcrb
fucom
fwait
es
addl
ret
out
sub
xchg
cmpl
popf
sub
dec
pop
push
xchg
inc
xchg
rcr
jle
sub
sbb
push
movsb
fisttpl
mov
test
cmc
dec
cmc
je
push
or
fdiv
shll
dec
insb
fwait
sti
clc
call
cmp
and
push
cmpsl
jle
mov
fsubl
jmp
push
addr16
xor
mov
scas
fcoml
xor
xor
xor
jnp
adc
xchg
dec
sub
mov
jns
outsb
cmp
pop
test
idivl
scas
cmp
mov
and
mov
cli
sub
int3
mov
xor
lock
cmc
add
ja
push
or
fidivl
push
push
dec
mov
movsb
ret
push
loopne
pop
leave
add
sbb
push
aam
out
or
cmpsl
int
mov
mov
jge
in
pop
das
icebp
es
inc
test
jnp
iret
lea
cmp
ljmp
add
call
repz
adc
movsl
pop
sahf
js
mov
push
jge
test
ljmp
pop
fidivl
int
push
insl
mov
xchg
jbe
or
adc
pop
mov
pop
jno
in
sub
pusha
sub
inc
aad
and
dec
cltd
in
test
clc
xchg
fsubrp
aaa
stos
sbb
inc
push
loope
sbb
ds
iret
inc
xchg
inc
lods
sahf
pop
aam
ret
and
pop
scas
shll
and
sbb
es
jb
out
pushf
in
cmp
pushf
insb
fdivrs
inc
xchg
std
pusha
mov
or
sbb
xchg
in
insb
dec
adc
hlt
psrld
arpl
xchg
es
or
pop
loop
sub
jae
cli
dec
in
xchg
cli
bound
pop
adc
lahf
into
and
inc
jge
mov
inc
xchg
jg
sbb
xor
aam
call
add
ds
scas
sub
stos
adc
lds
imulb
movsl
fiadds
pop
mov
xchg
out
pusha
or
jae
push
out
push
hlt
sbb
or
cmc
add
mov
shlb
call
popa
out
loop
inc
or
inc
add
scas
push
sub
rorl
sbb
inc
leave
mov
xchg
imul
xchg
in
insl
mov
jbe
push
pusha
cltd
jns
cltd
cs
arpl
adc
call
jle
xchg
add
test
subb
sbb
push
data16
call
sarl
xor
jne
clc
dec
in
popf
sbb
out
sbb
mov
sahf
int3
fucomip
lahf
insb
outsb
jns
sub
popa
mov
xchg
dec
fdivl
popa
push
mov
adc
sbb
jmp
iret
imul
jno
mov
inc
push
addb
cli
outsl
inc
jmp
xor
xlat
faddl
push
sbbl
mov
inc
in
aam
stos
test
cwtl
into
pusha
inc
out
inc
lret
fcmovb
adc
mov
outsl
push
xor
cmpsl
mov
int3
in
mov
js
data16
lret
xor
push
test
mov
lock
mov
pop
cmpb
mov
push
push
es
push
mov
enter
sbb
jmp
sbbb
lock
test
sbb
fs
sbb
orb
jp
dec
loop
out
sbb
outsb
insl
jl
mov
cmp
xchg
lods
test
sbbl
xor
xchg
leave
push
jl
stos
cmpl
clc
push
mov
sub
dec
out
pop
xlat
stos
push
mov
outsl
jmp
mov
imul
outsb
jo
adc
cli
xor
out
fwait
shl
sub
and
mov
add
mov
in
mov
test
mov
loop
mov
push
xor
roll
scas
movb
mov
add
jmp
lret
es
enter
test
pop
dec
fisttpl
cmc
aam
inc
arpl
adc
fwait
adc
gs
jle
jno
push
xor
sbb
pop
adc
js
push
loop
sbb
xchg
cmp
xchg
fsubs
mov
mov
cmp
mov
push
ljmp
add
loop
sahf
add
mov
or
cmp
lods
in
mov
and
rcll
out
xchg
cmp
xchg
push
test
jo
cwtl
jp
inc
ds
adc
je
fstps
pop
filds
call
jmp
add
jg
pop
call
jo
or
enter
test
push
mov
bound
add
inc
out
test
push
ss
push
aaa
pop
int
idivb
inc
loop
jle
scas
mov
cmp
pop
cmc
icebp
loope
push
inc
aaa
mov
jg
mov
in
mov
mov
pop
add
ret
inc
and
jg
iret
pop
stos
push
mov
insl
ds
or
push
fwait
mov
popa
in
adc
mov
add
and
push
lods
xor
xor
sub
bound
in
pusha
stos
pop
jnp
pop
in
int
mov
mov
ret
xor
xor
je
cmp
fists
mov
decb
lds
loopne
lods
loop
dec
out
push
push
notl
enter
push
dec
movb
sbb
nop
idivb
mov
dec
lcall
xor
and
in
mov
les
or
dec
mov
mov
push
popa
push
fstps
or
ficoms
and
cmp
and
cmp
or
das
xchg
out
mov
add
lea
pop
cmp
pusha
inc
dec
jecxz
leave
rorl
jb
fmuls
adc
mov
stc
cmp
cld
and
cmc
xchg
loope
aas
in
cli
pop
out
es
je
sub
in
das
or
movl
lock
push
push
mov
test
add
mov
push
cwtl
movsl
imul
push
jmp
mov
push
push
sbb
xchg
cmp
movsb
and
mov
cmp
test
sub
mov
jmp
sbb
sti
into
sub
daa
inc
mov
pop
arpl
mov
xor
insl
mov
repnz
xor
mov
fnstcw
icebp
dec
add
inc
int
cmp
gs
adc
pusha
inc
popf
adc
mov
ds
sub
mov
inc
adc
or
push
hlt
aad
scas
sbb
rorb
rcll
jle
sbb
test
ds
adc
or
fsubrl
or
stos
inc
mov
pop
add
mov
das
sub
pop
push
and
jno
ljmp
addr16
mov
stos
stc
out
xchg
lods
or
ficomps
push
shl
data16
jle
add
mov
dec
inc
adc
cli
add
push
add
jmp
mov
daa
pop
mov
shrl
loopne
loope
mov
inc
or
adc
dec
mov
mov
sub
push
movsb
rclb
pop
flds
repnz
loope
or
mov
pushf
mov
repnz
mov
mov
fnstenv
push
cld
adc
add
subl
mov
test
push
jle
fcmovb
pop
mov
addr16
mov
scas
rorb
push
fcoml
enter
lods
imul
cmpsb
inc
dec
fisttpll
outsb
in
out
pop
or
mov
testb
pushf
push
pop
inc
sbb
ret
xchg
insb
jnp
mov
adcb
insb
add
jae
cmpb
fsts
sbb
mov
pop
out
shrl
xor
xlat
rcrb
pop
add
push
add
mov
adc
dec
xchg
rorb
subl
stos
fnstcw
jmp
repnz
pop
popa
data16
fmul
and
xchg
push
fldt
inc
adc
dec
mov
lea
stos
cli
test
int
movsl
fsubrs
and
in
insl
jns
shlb
hlt
or
and
mov
or
fiadds
data16
out
jns
lea
pop
cmp
out
and
mov
mov
push
jae
lods
xor
xor
cmp
loope
out
or
and
mov
mov
inc
jecxz
xor
insb
xchg
testb
mov
add
lcall
out
sarb
jecxz
mov
mov
repnz
and
or
and
dec
test
xor
aas
dec
test
jae
ljmp
mov
add
push
repnz
sub
call
lret
add
xchg
or
out
daa
push
sbb
in
push
xlat
inc
scas
xor
cmp
jle
jl
dec
mov
ss
jo
imul
push
mov
jne
adc
xor
mov
gs
cmp
jmp
imul
push
idivb
adcb
sbb
cmp
fdivrl
daa
ret
rcl
and
ret
dec
xor
int3
dec
xchg
das
pop
mov
adc
inc
adc
and
push
std
xchg
shr
mov
aad
into
lock
sub
std
leave
xor
and
inc
pop
rcrb
or
sub
add
push
nop
dec
sub
mov
sbb
mov
cmp
pushl
jl
mov
push
mov
pop
pop
aas
ret
lcall
push
mov
sbb
xor
movsl
neg
cwtl
push
pop
ljmp
jno
add
mov
icebp
cltd
xchg
push
sbb
cmp
fadd
scas
stos
pusha
mov
adc
mov
adc
xchg
xchg
int3
mov
fdivrl
push
in
fs
push
jmp
andl
push
out
mov
push
fsubr
pop
addr16
enter
sbb
xor
aam
shl
or
push
dec
mov
popf
pushf
push
dec
jo
cli
inc
or
xchg
and
sub
mov
pop
arpl
int
push
pop
test
aaa
inc
inc
leave
enter
dec
cmc
call
pop
inc
inc
scas
or
lds
sub
insl
fildl
cmp
mov
sbb
movsb
call
in
test
cmp
sbb
repnz
call
or
stos
ds
push
mov
jp
iret
inc
cs
and
iret
sbb
loopne
shlb
or
ret
loop
lcall
cmpb
or
lock
fsubr
lods
repnz
or
mov
push
iret
or
ret
or
adc
push
cmc
xchg
ret
inc
dec
js
jne
daa
mov
call
fadd
js
lea
lret
sub
push
xor
xlat
fcmovnb
push
fmull
fsubrl
push
lea
das
jg
xchg
inc
repnz
mov
inc
js
and
jbe
test
test
mov
xchg
sbb
stos
jo
out
jnp
fstps
test
jb
in
pop
enter
ja
iret
lret
xchg
ret
dec
jl
test
sbb
hlt
popa
popf
mov
adc
repnz
push
add
test
call
mov
movsb
arpl
add
pop
xor
es
xchg
dec
mov
xor
cmp
les
jl
inc
xor
or
sbb
sbb
push
fsubr
imul
scas
xor
cltd
mov
enter
xor
pop
jl
hlt
adc
push
cmc
aas
out
ljmp
or
pop
inc
cld
fstl
cmpsl
aad
jnp
jg
pop
pop
mov
cmc
mov
adc
hlt
xor
pop
test
std
push
add
or
cmpl
mov
pop
mov
mov
xor
adc
pop
push
test
int
insl
icebp
es
push
pop
arpl
or
mov
pop
pop
fsubrs
outsl
stos
fsub
popf
xchg
add
push
sub
xchg
xchg
rcl
ja
es
in
inc
popl
mov
inc
add
sbb
into
enter
and
fidivl
mov
insl
stc
inc
mov
xchg
int
or
das
adcl
or
inc
clc
inc
pop
out
fistl
push
inc
sti
dec
inc
sahf
nop
outsb
push
mov
cld
push
cltd
flds
mov
int3
stc
pop
dec
outsl
lret
inc
stos
lret
mov
push
lock
jp
imul
dec
pop
test
mov
xchg
jae
mov
or
leave
mov
imul
add
dec
popa
cmpsl
adcl
xchg
repnz
adc
push
popf
ffree
push
cmpsl
out
add
cmpsb
push
test
push
mov
movl
jnp
push
imul
and
in
rol
imul
xchg
lods
mov
adc
sbb
sbb
jns
movsb
aas
andl
pop
cwtl
shlb
popf
addr16
pop
test
mov
and
nop
fmull
dec
pop
mov
vshufps
mov
pop
lea
outsb
mov
mov
aam
jno
sbb
loop
ljmp
clc
data16
xor
roll
shlb
pop
shlb
jg
sahf
or
sbb
ror
push
mov
mulb
push
push
test
incl
pop
mov
arpl
inc
imul
loop
test
or
idiv
xchg
mov
pop
or
data16
push
lret
not
xor
insb
and
xor
dec
mov
bound
fdivrp
enter
mov
inc
lea
pop
cltd
inc
out
or
popa
and
mov
sub
sub
int
ja
dec
jns
push
fnsave
dec
test
std
adc
sbb
jp
xchg
xor
mov
je
cwtl
aas
and
inc
stos
out
lods
or
sarl
sbb
inc
daa
aas
aam
pop
ret
jns
sub
fbstp
fcomp
push
cmp
loop
into
sub
add
rol
inc
movsl
sti
ret
sub
jmp
ficompl
jecxz
mov
and
addr16
addr16
and
les
and
iret
dec
pop
jmp
jg
pop
xchg
scas
jg
jmp
adc
jnp
pushf
mov
jns
movsb
mov
mov
cmp
dec
lcall
outsb
ds
mov
or
insl
xor
mov
data16
or
clc
cli
fs
inc
inc
les
test
or
mov
push
or
aam
mov
jns
lock
movl
mov
es
mov
lea
arpl
pop
add
adc
std
push
loopne
lret
call
and
ja
popa
mov
and
ficoml
sarb
xchg
jbe
ret
sub
pop
dec
dec
pop
sub
fistps
shlb
mov
or
push
pop
fsts
xchg
push
orb
out
xchg
aad
arpl
std
sub
xor
mov
cmp
ss
jne
or
sti
subl
sbb
and
and
test
sahf
xchg
into
mov
push
mov
lods
cmpsl
lock
and
sub
cmp
push
test
repz
cs
dec
or
cmp
adc
xchg
adc
sub
pop
and
test
sub
ret
jnp
rcl
mov
sub
xor
cmp
jnp
inc
add
adc
add
adc
stc
cld
popf
jecxz
or
pop
sbb
xchg
dec
je
xchg
dec
mov
test
mov
ljmp
fcoms
or
cmc
in
or
adc
es
cmc
xchg
mov
leave
mov
lret
jmp
mov
jg
xchg
dec
out
xchg
stos
lret
pusha
in
jmp
add
cmp
arpl
out
and
dec
jl
mov
std
or
lods
pusha
sub
pusha
cmp
adcb
xor
lcall
inc
xlat
int3
rolb
inc
mov
ja
sbb
cmpsl
incl
or
scas
idivb
or
pop
xor
adc
pop
cwtl
adc
cmp
sarb
in
stos
inc
jbe
fwait
and
in
ss
push
fwait
ret
iret
cs
mov
push
sbb
rolb
pop
mov
sub
xor
test
mov
mov
pusha
mov
xchg
sbb
pop
mov
add
sub
xchg
out
in
fisubrl
popf
mov
cli
dec
mov
sbb
mov
jae
aas
lret
ret
loopne
or
mov
jae
ror
out
cmc
aam
add
mov
je
sub
jmp
out
mov
add
aam
inc
pop
push
mov
stos
jae
push
and
addr16
ljmp
cmpsl
arpl
dec
pop
loopne
sbb
sbb
not
xchg
pop
testl
loope
std
xchg
decb
cld
dec
xchg
test
sbb
mov
inc
add
in
out
mov
xor
cwtl
jle
out
dec
jl
repz
mov
fsub
pusha
out
and
out
mov
push
inc
mov
insb
insb
sbb
sub
insb
add
push
sbb
dec
out
sbb
ja
fadds
ljmp
cwtl
je
xchg
ds
fmul
insl
push
cmc
xchg
push
xchg
fldlg2
daa
loopne
movsl
inc
xchg
inc
cmc
cmp
rcll
mov
in
in
sub
movsl
sub
in
outsl
dec
inc
or
add
inc
mov
pop
fwait
sbb
mov
loop
movsl
jge
adc
jg
mov
mov
adc
sbb
data16
mov
fsubrs
mov
popa
int
aas
sub
pop
mov
mov
xor
mov
fidivrl
sbb
sbb
stos
mov
in
int3
or
inc
mov
mov
cmpsb
ret
inc
xchg
xor
fcomip
mov
jmp
sbb
adc
xchg
and
mov
shl
lret
rorb
xchg
pop
cmpsb
sub
mov
xchg
push
mov
xchg
mov
pop
sbb
or
add
jmp
push
test
jecxz
inc
shll
mov
xor
arpl
pop
jno
push
push
psadbw
out
xchg
pushf
and
push
andl
bnd
xchg
mov
jnp
fs
mov
lret
adc
pop
mov
add
mov
xchg
cli
xchg
loop
repnz
nop
dec
rorb
sbb
lock
mov
jl
jmp
loop
cmp
xlat
stc
in
mov
xchg
fistpl
in
sbb
pop
loope
xchg
les
mov
inc
jb
ds
ret
mov
and
inc
mov
cwtl
test
sbb
pusha
int3
xchg
xchg
addr16
sbb
jbe
mov
sub
stc
negw
loope
dec
inc
out
mov
jle
mov
fistl
aaa
outsb
idiv
or
add
arpl
xorb
rclb
and
xchg
jle
and
or
sub
push
push
jge
add
inc
pop
fimull
aas
push
dec
adc
test
es
inc
dec
lcall
jbe
and
cmp
addb
out
insb
jb
add
sub
scas
xchg
push
pop
push
jp
loope
out
cmp
outsb
xor
jg
add
fs
std
cltd
shl
loopne
lcall
jmp
mov
cmp
mov
push
add
jno
jl
pop
push
sbb
mov
hlt
and
lret
push
jg
mov
jo
inc
arpl
pop
push
loope
adc
add
xor
push
mov
mov
adc
lret
cmp
das
add
int3
jne
mov
push
int3
dec
sbb
imul
clc
jge
or
cmp
jno
jge
mov
sub
lea
push
inc
test
mov
movsb
add
leave
arpl
test
outsl
mov
mov
negb
add
jae
lahf
xchg
mov
cmp
je
imul
pop
dec
mov
out
dec
cs
push
ret
dec
and
fldenv
lahf
adc
xchg
frstor
jns
sub
xchg
mov
xchg
mov
sub
aam
fstpl
inc
shlb
cmp
add
lret
shl
inc
jle
sub
add
outsl
add
sbb
fnstcw
aaa
fs
leave
xchg
adc
jmp
xchg
sbb
push
aam
mov
xchg
mov
mov
jmp
ss
popa
add
push
out
adc
stos
lods
test
xor
cmp
cli
inc
mov
sbb
mov
testl
cwtl
dec
cmp
jne
ret
mov
or
rclb
sbb
das
push
dec
arpl
push
jae
sar
jg
cmp
popf
sahf
testl
rol
sub
xchg
jmp
pop
pop
xchg
mov
rcl
imul
jnp
leave
or
lcall
jmp
fisubrl
sub
pop
into
pop
out
dec
or
movd
mov
negb
and
ret
out
dec
dec
mov
jae
lahf
inc
icebp
into
mov
int3
arpl
fldt
push
out
mov
mov
mov
aas
test
sub
sbb
jg
sarb
mov
aam
mov
adcl
int
jecxz
icebp
ds
imull
or
cwtl
pop
fldl
inc
in
push
dec
inc
push
popa
push
scas
cmpsl
xchg
ja
icebp
cmp
mov
mov
roll
sbb
roll
das
xorb
popa
jbe
sub
jae
or
lcall
jae
sbb
daa
pop
jecxz
push
or
sub
or
mov
clc
mov
pop
adc
dec
pop
out
or
pop
mov
xor
xor
enter
jbe
fcomp
cwtl
wrmsr
mov
imul
in
xor
incb
aam
sbb
pop
mov
add
stos
ds
js
xchg
into
fisubs
dec
mov
lcall
mov
jb
loopne
sbb
outsb
insb
sub
and
iret
inc
cmp
fs
mov
negl
sbb
push
enter
test
in
sar
sahf
cmp
push
in
rorb
or
movsb
js
lods
insb
repz
pop
les
cmpsl
in
mov
frstor
imul
adc
jno
fwait
jmp
or
mov
jne
push
xorb
mov
cmp
out
movb
fwait
or
xor
fwait
andl
fwait
outsl
mov
mov
sar
and
in
bt
xor
jo
shr
jb
fidivrs
mov
enter
mov
cmpsb
int3
test
pop
pop
in
out
in
inc
nop
aam
mov
and
xchg
sahf
adc
ret
mov
or
add
or
andb
fstps
xchg
bound
jo
or
ja
pop
mov
mov
orl
clc
ds
daa
scas
test
xchg
aas
mov
cmp
jo
and
pusha
xor
xchg
out
cmp
nop
jb
out
push
cltd
hlt
dec
sbb
into
mov
stos
data16
mov
mov
scas
xchg
mov
cmp
jl
sahf
mov
mov
repz
mov
mov
cmpl
pop
lea
subl
enter
andl
inc
adcl
and
pop
or
xor
popf
dec
xor
imul
lret
call
and
add
push
stos
cmpsb
add
clc
popf
push
push
pop
arpl
sub
push
lahf
cmp
sub
jge
popa
jns
clc
mov
mov
push
mov
inc
fimuls
pusha
aaa
cli
ss
push
imul
testl
add
mov
adc
hlt
xlat
inc
test
push
aad
call
add
insb
cli
mov
sub
scas
dec
fs
push
cwtl
pop
in
ja,pt
sbb
movsb
push
mov
ljmp
or
sbb
arpl
or
push
std
daa
movsb
pop
imul
push
popa
cmp
icebp
mov
shlb
aam
out
mov
push
push
cmp
dec
fucomp
mov
and
hlt
addb
clc
cmp
and
cmp
pop
pop
xor
and
mov
push
out
pop
out
ljmp
mov
add
push
aam
repnz
sbb
xchg
push
push
mull
push
nop
add
sbb
push
lods
xor
popf
out
icebp
enter
pop
ficoms
orl
mov
mov
push
and
mov
stos
mov
jp,pt
dec
mov
adc
orb
push
and
cmp
in
xlat
sub
roll
pop
cmp
pop
fldt
rorb
pop
pusha
inc
int3
add
jo
cmp
inc
push
or
xor
inc
jmp
adcl
lods
adc
pop
mov
or
lcall
scas
cmp
xor
xchg
call
mov
dec
push
inc
mov
sbb
cwtl
mov
jae
ljmp
arpl
jp
xor
lahf
sbb
jp
sbb
mov
cli
fidivrs
inc
lea
je
dec
ret
and
mov
jecxz
sarl
lds
in
adc
jb
rorl
int3
imul
fwait
cld
fidivrl
in
sub
jg,pt
sub
mov
sub
push
std
jae
dec
mov
pop
daa
faddp
mov
inc
sbbb
inc
cmpsb
pop
pop
or
add
bound
and
push
mov
mov
jmp
sub
mov
mov
sub
sbb
pop
cwtl
or
test
rclb
subb
push
adc
aad
mov
fs
xchg
orb
into
nopl
cwtl
ret
or
pop
sahf
idivb
or
aam
adc
in
test
hlt
in
xor
inc
cmc
lock
out
pop
dec
push
and
test
cld
push
insb
leave
lcall
mov
ja
andl
sbb
xchg
mov
sub
das
cmpb
test
popa
aas
push
inc
es
xchg
loopne
movsl
mov
leave
andb
mov
cmpsb
or
push
sub
movsl
or
xor
sbb
sti
sbb
lock
rol
push
inc
xor
ret
xor
mov
movsb
mov
shlb
and
pushf
push
out
mov
mov
mov
fstpt
in
inc
out
mov
lahf
in
cwtl
jns
mov
rcrl
iret
pop
push
push
mov
das
mov
push
xchg
movsl
aam
sbb
jb
push
jne
mov
mov
xchg
jae
sbb
xor
sbb
inc
xchg
jge
push
stos
mov
test
enter
cli
fidivrl
pop
bound
pop
ss
sbb
fs
ss
add
movsb
repz
inc
stos
jmp
inc
filds
cmc
mov
xor
test
sbb
push
push
xchg
adc
mov
inc
mov
fldt
daa
sbb
out
fidivrs
outsb
adc
lods
mov
add
in
mov
popa
add
sbbl
sbb
or
or
inc
rorl
pop
push
popa
pop
imull
mov
fisubrl
mov
test
push
out
jae
jne
cmpsl
jl
jmp
dec
icebp
aad
push
mov
push
lea
mov
jle
ss
sub
andl
or
dec
das
addl
adc
push
push
insl
dec
movsl
fistl
push
push
cmpsb
lods
sub
or
xchg
ffreep
popf
and
jbe
in
jo
je
dec
push
lcall
jbe
or
fcoms
outsb
je
mov
rorl
fldcw
mov
xor
xlat
add
lcall
cmp
divb
je
rcll
mov
mov
jae
mov
sub
sbb
sbb
dec
notb
fsub
mov
xor
and
int3
cmp
jecxz
jg
vpsubq
and
testb
insl
sahf
jbe
iret
mov
add
mov
and
mov
dec
jle
mov
pop
mov
pop
cmp
shll
xchg
dec
iret
insb
pop
cld
mov
adc
xor
adc
jge
pop
xchg
sub
insl
dec
repnz
and
andl
inc
in
rcrl
sub
xchg
ret
adc
scas
xor
int3
shll
ret
cltd
pop
aad
jb
aad
jp
test
movsb
ror
cmp
lret
xchg
xchg
rcl
cmp
mov
ljmp
repz
leave
xor
ret
or
dec
push
inc
xor
push
inc
add
jno
dec
push
in
add
shll
arpl
xor
inc
sbb
and
negl
stc
test
mov
mov
pop
in
jmp
mov
repnz
int3
mov
mov
jg
or
sub
and
scas
lock
jns
ljmp
adc
add
mov
lock
jo
sti
push
pop
into
pushf
sahf
hlt
sub
adc
icebp
pushf
push
or
fnstcw
and
mov
mov
shlb
inc
dec
fwait
popf
push
lods
in
gs
add
rclb
xchg
xchg
test
mov
adc
lahf
adc
mov
pop
jl
test
cld
adc
enter
or
fmuls
xchg
xchg
cwtl
lret
mov
inc
xchg
aam
dec
repnz
mov
scas
jl
sbb
adc
mov
and
jecxz
mov
or
jle
mov
js
fldl
pop
aad
out
sub
jmp
and
xchg
xlat
jg
imul
mov
shll
inc
xor
push
sub
es
stos
pop
addr16
mov
outsb
es
mov
adc
pop
clc
arpl
dec
pop
jae
mov
scas
movsl
jmp
mov
testb
shrl
inc
orb
push
test
add
out
dec
ja
sub
jb
stos
outsl
cli
or
cld
shlb
add
and
arpl
addb
lock
loopne
ja
shll
sahf
pop
mov
dec
cmp
ja
jae
insb
in
dec
add
pushf
int3
sbb
pop
xchg
jmp
pop
ja
ret
adc
sub
sbb
mov
xchg
fistps
test
mov
fcmovbe
mov
mov
out
dec
lods
negb
add
push
push
mov
nop
mov
mov
or
xor
movsl
jmp
adc
adc
mov
inc
xchg
sbb
or
sub
loope
mov
cld
adc
aaa
sub
fucomip
mov
jnp
aaa
fisubs
inc
leave
outsl
ss
add
add
adc
out
mov
out
ja
dec
sub
ret
xchg
and
mov
scas
call
out
shl
arpl
and
ficomps
lock
mov
push
xor
mov
push
xor
xchg
mov
add
add
sub
in
jno
sarl
cltd
lods
push
pop
sbb
sub
push
shlb
into
dec
push
xor
dec
and
test
mov
jno
subl
xor
jae
inc
out
or
lahf
es
cmpsl
add
push
daa
adcb
jecxz
jne
out
add
push
lahf
xor
dec
rcl
jns
and
jg
sub
xchg
aas
mov
push
testb
imull
jbe
pop
xchg
sahf
out
hlt
cs
sbb
inc
xor
movsl
js
push
mov
cmp
stc
pop
adc
add
jp
call
mov
add
nop
out
xor
sub
pop
lret
je
fnstenv
ror
shrb
xchg
inc
out
lock
cld
add
cs
arpl
cmp
testb
mov
sbb
push
iret
xchg
out
fsubrp
mov
xchg
pop
js
xor
stos
inc
dec
outsl
xlat
cmpsb
sahf
cmp
lock
cs
mov
mov
dec
es
xor
fcomps
adc
xchg
dec
cmp
mov
sarb
jbe
push
es
lods
inc
enter
movsb
out
xor
jnp
into
out
outsl
or
jmp
test
sub
jns
adc
inc
lods
pop
mov
addb
insl
xor
jno
into
test
cmp
mov
dec
inc
cmp
xor
sub
xor
xor
rol
push
cld
or
or
cmp
sbb
pusha
mov
cmpsl
inc
leave
xchg
leave
dec
inc
imul
cli
lahf
push
cli
xchg
jecxz
jl
ljmp
adc
pop
out
sub
cmp
adc
shl
add
or
inc
dec
or
sbb
bound
lahf
mov
add
testl
xorb
mov
or
fimull
cmp
mov
adc
mov
push
mov
stos
hlt
fsubs
shr
addr16
clc
movsb
fidivrs
orps
insl
cmpb
pop
test
mov
sub
or
mov
aas
ret
test
jne
out
les
push
push
push
dec
xchg
add
int3
mov
push
jl
xor
mov
cli
sub
dec
add
dec
sbb
adc
and
stos
neg
lret
imul
ret
adc
es
aas
and
leave
push
xor
sbb
adc
xlat
fdivl
push
addr16
aaa
dec
test
dec
icebp
pop
pop
ja
inc
pop
lods
movsl
add
sub
mov
nop
mov
loopne
jno
and
cmp
ret
add
mov
addr16
adc
push
int3
repnz
aas
addr16
or
sbb
and
and
jns
fldcw
or
fildl
mov
loopne
out
mov
sbb
outsl
movsl
cmpsb
ret
or
imul
sarl
es
dec
push
int
or
and
sbb
xor
and
mov
shlb
jge
xchg
mov
aad
aam
sbb
mov
add
jne
loope
dec
movsb
pop
outsb
fldenv
mov
xor
inc
jecxz
sbb
or
mov
cli
ds
inc
lock
insl
dec
out
dec
roll
int
out
leave
ja
jae
pop
rcrl
aam
xchg
pushf
out
cmp
pop
insl
add
out
dec
ljmp
inc
jbe
adc
out
sbb
lds
jg
sub
dec
fdivp
out
fstps
test
cmp
mov
jmp
imul
xor
outsb
xor
mov
pop
cli
or
cwtl
scas
mov
loope
pop
xchg
es
dec
rol
add
xchg
xor
and
xchg
lods
jae
dec
shrl
mov
es
bound
inc
or
out
xchg
jbe
mov
push
popf
test
jb
test
and
push
cwtl
and
mov
and
pop
pop
cmp
ljmp
ja
sub
dec
inc
xchg
push
inc
mov
and
pop
cmc
add
xchg
sti
push
cmc
or
adc
movsl
cmp
shrl
adc
icebp
jl
je
xlat
mov
add
cwtl
mov
idivl
fs
or
imul
sub
aad
pop
fldenv
ret
mov
push
test
sub
scas
call
cmp
test
sahf
mov
mov
lds
sbb
mov
popf
out
in
test
imul
hlt
insl
imul
jp
lods
mov
nop
aam
push
or
mov
inc
and
mov
bound
les
push
push
rorb
push
cmp
daa
jmp
xchg
stos
mov
movsl
add
out
xchg
call
jae
xchg
loop
outsl
fstpl
pop
aas
bound
sahf
mov
movsb
add
cmpsl
pop
movsb
call
popf
nop
insl
pop
fs
fsubrs
into
cmp
add
fdivrs
xchg
adc
popa
dec
cmpsb
cltd
enter
dec
sub
mov
in
jne
jmp
adc
fs
or
inc
into
xchg
cmp
loop
test
pop
jae
pop
push
clc
sbb
sub
out
mov
incl
std
stc
xor
xor
inc
mov
xor
jno
and
out
jbe
push
movsb
push
lea
mov
aad
adcl
sbb
and
push
push
xchg
fstps
or
inc
pop
jmp
adc
cmp
out
push
js
jne
outsl
mov
lgs
ja
shr
jae
cmp
pop
cmpsl
dec
loopne
adc
loope
pushf
or
pop
pop
xor
xor
mov
jecxz
daa
leave
out
mov
push
rcll
and
cld
scas
adc
adc
push
sbb
ficoms
mov
int
push
xchg
fimull
sub
dec
stc
movsl
ja
jo
imul
push
std
repnz
mov
xor
out
add
loop
rcrl
hlt
into
add
fwait
dec
lods
rorb
xchg
movsl
jnp
rorl
sbb
lret
in
xchg
pop
mov
push
loope
cltd
addl
jo
test
out
std
fisttpl
dec
lods
cmp
jge
mov
pop
adc
inc
inc
call
ds
push
lret
icebp
das
je
arpl
cmpsb
jl
or
divl
lds
mov
in
xchg
push
xor
sbb
pusha
sbb
pusha
outsl
push
or
pop
stc
mov
rep
lret
addr16
je,pn
jno
and
outsb
cltd
outsb
andl
frstor
mov
sub
xchg
pop
mov
mov
inc
mov
loope
pop
mov
lea
pop
rcll
pop
inc
cmp
stc
mov
push
adc
cmp
loope
ret
test
sub
jge
fistpl
out
mov
idivb
out
jno
sub
icebp
data16
aam
sbbl
outsl
and
pop
push
xchg
sub
stos
popa
sarl
fistpl
enter
testl
or
cmc
pop
pop
cmp
clc
movsb
push
mov
lods
fadds
adc
or
xchg
cltd
sbb
stc
outsl
imul
bound
mov
add
xor
or
or
leave
pop
icebp
fistpl
loopne
lret
mov
pop
inc
xchg
lock
popa
inc
fwait
lds
mov
sbb
dec
or
into
movsl
xchg
pop
insb
or
push
cwtl
stos
filds
imul
inc
loopne
shlb
adc
dec
xchg
nop
cmp
inc
push
or
cmp
mov
mov
mov
outsb
sbb
sub
fnstsw
push
jno
pop
inc
int
cmc
sub
pop
cmp
sub
lcall
je
xchg
add
repz
aad
and
mov
sub
sub
mov
mov
mov
jnp
mov
push
pop
inc
pop
mov
adc
and
jg
dec
cmpsl
mov
mov
stc
nop
or
and
cmp
leave
mov
or
testb
mov
sub
cmpsb
dec
andl
dec
mov
addr16
movsl
push
cs
popa
lds
xor
sbbb
sub
jnp
jb
imul
pop
scas
or
stos
or
push
mov
jne
cmp
fmul
pusha
push
sub
lods
lods
sbb
sbb
pop
mov
dec
sub
adc
mov
or
cli
add
lcall
dec
or
xchg
xchg
jmp
arpl
sbb
test
inc
fmul
stos
add
push
les
sub
out
xchg
cmp
dec
and
and
pop
stc
ret
movsb
mov
add
or
jns
call
and
mov
sub
lret
fadd
pop
out
jp
stos
sub
data16
inc
rclb
sub
add
cli
or
aad
sahf
jae
sub
push
aas
lcall
dec
xchg
ret
inc
cmp
sbb
dec
stc
sbb
lock
adc
jo
jns
fsubl
lea
call
frstor
fidivs
sub
mov
fadd
test
xor
loope
shrl
inc
sub
adc
iret
fs
mov
adc
mov
jmp
mov
jno
outsl
mov
push
rcrl
pusha
xchg
fisubrl
or
jge
add
sbb
jne
cwtl
inc
mov
xor
sub
mov
imul
incl
adc
inc
cmp
inc
add
addb
sbb
and
mov
rolb
insb
pop
scas
clc
test
out
or
push
mov
jle
jge,pn
lahf
sbb
push
inc
test
push
mov
stos
push
add
test
or
cld
or
dec
pop
jmp
sub
push
xor
int3
mul
popf
test
dec
imul
fidivrs
cmp
add
pop
stc
je
and
andb
insb
pusha
stc
and
and
adcl
or
int3
loope
in
repnz
bound
adc
rcrb
push
mov
mov
dec
push
imul
lea
je
sbb
testl
pop
and
push
es
lahf
mov
xor
scas
mov
pop
arpl
push
mov
mov
sbb
test
push
popf
sti
pop
pop
lock
xor
jp
movsb
mov
jmp
scas
xchg
xchg
jb
push
cmpsl
cmp
cmp
movsb
xchg
push
push
pusha
cltd
loopne
cmpsb
push
pop
add
lea
push
in
cwtl
add
insb
seta
mov
push
sub
pop
inc
adc
loope
ja
int3
and
jne
in
stos
and
pusha
loop
es
xor
insl
mov
lret
iret
pop
mov
jge
cmc
mov
addb
mov
and
adc
in
fsub
test
xor
jle
fcom
imul
push
cmp
and
cltd
in
sub
jo
dec
sahf
std
fucomp
xor
testb
xchg
scas
leave
incb
dec
addr16
xor
cmpsb
add
mov
fnstsw
into
mov
fnop
ja
leave
jmp
xchg
lcall
out
cmp
loopne
mov
out
pop
fsubrs
shlb
fwait
rcrb
mov
aad
xorb
or
mov
xchg
cmp
fadd
ds
outsl
roll
sbb
push
or
xor
dec
mov
pop
jae
adc
js
sbb
mov
aam
and
sbb
pop
dec
jb
jne
fsts
fimull
ljmp
adc
mov
and
rcrl
pop
mov
movsb
mov
in
test
popl
mov
jle
ja
jns
xor
movsb
stos
fiadds
shll
sub
es
jecxz
into
mov
int3
les
jg
push
out
pop
enter
adc
and
in
test
and
imul
sbb
pop
sub
notl
jns
jne
ficomps
fcomps
leave
dec
inc
inc
fs
sbb
lods
cmpsb
insb
out
loopne
test
xor
daa
fists
rcrl
and
cmp
sub
mov
pop
mov
xchg
xor
ror
adc
pop
xor
movsb
call
dec
je
push
repnz
rcrl
mov
ficoml
adc
aas
or
mov
mov
les
mov
iret
pop
xchg
je
jecxz
mov
ljmp
aas
push
inc
sbb
int3
pusha
outsb
imul
mov
in
adc
cltd
stc
ja
mov
pop
cld
rol
js
xchg
and
test
leave
mov
sbb
jge
in
sbbl
movsb
lock
cltd
or
inc
andb
jno
outsl
sahf
jns
test
cwtl
inc
and
into
daa
add
scas
aam
iret
and
inc
pop
in
lods
mov
add
cld
mov
popf
mov
add
inc
imul
mov
outsb
gs
movsb
cmc
out
push
sub
call
jg
cmp
int
ret
adc
fisubs
dec
leave
mov
xchg
mov
jo
and
sub
push
ret
fwait
inc
daa
test
inc
aas
inc
test
jle
jecxz
jns
aaa
xchg
push
xchg
loopne
add
fmul
loop
in
or
insl
rolb
adc
xchg
pop
jne
iret
xchg
mov
adc
mov
pop
icebp
enter
pmullw
cmp
sub
cmp
fs
lods
mov
dec
shlb
sbbb
les
popf
scas
mov
lea
xor
push
add
repnz
sub
ss
outsb
inc
dec
mov
inc
stc
sbb
pop
push
jno
jge
js
fwait
push
shll
out
jmp
push
inc
in
hlt
mov
jmp
shll
inc
shlb
add
movsb
pop
outsb
and
adc
push
sbb
daa
push
mov
or
nop
inc
in
and
and
fstps
xor
adc
inc
and
pop
jno
fs
pop
lea
out
fcompl
push
cmpsl
scas
out
or
sub
jno
insb
inc
pop
push
xchg
test
data16
push
mov
or
pusha
insl
and
mov
rep
pop
fistps
jbe
jne
lock
jns
stc
xor
pop
and
mov
cld
out
mov
or
push
loopne
sti
xor
inc
mov
lods
shll
fwait
cmp
lret
outsb
jno
pop
jbe
jo
test
into
in
out
cld
ror
sub
inc
lcall
add
sbb
cltd
cld
dec
and
jo
mov
rcll
mov
fmuls
fildll
push
push
add
mov
imulb
xorl
pushf
and
fdiv
int3
add
clc
int
shl
sub
push
mov
ljmp
lds
and
and
mov
xchg
mov
xorb
jae
int3
faddl
ds
mov
and
mov
imul
out
mov
jp
fidivl
ds
jno
stos
ss
fstpt
in
ds
sbb
xchg
fdivrl
imul
add
mov
adc
ja
pop
test
into
or
imul
rcrl
mov
dec
inc
loopne
sbb
mov
pop
rcll
and
mov
test
mov
jecxz
mov
lods
sete
lahf
ss
dec
test
sub
xchg
je
cs
jnp
mov
in
js
ljmp
inc
sbb
push
mov
pop
das
test
scas
dec
push
repnz
pop
inc
lcall
cmp
mov
popf
test
mov
xor
arpl
push
pop
mov
mov
sahf
cmp
cwtl
in
mov
xchg
mov
inc
xchg
push
fisubl
aam
mov
push
gs
mov
movsb
sbb
jmp
xor
mov
jne
dec
je
or
mov
mov
mov
cmpsl
imul
icebp
icebp
arpl
add
shr
jne
aas
adc
imul
test
and
sub
add
xchg
mov
mov
fcmovnb
cmp
insb
jp
outsl
stos
xchg
jnp
filds
sub
pushf
movsl
mov
stc
cmc
mov
fistps
xchg
dec
mov
adc
jns
pusha
outsl
xchg
call
jb
push
pop
bound
fiadds
arpl
ret
pop
insb
into
dec
hlt
shrb
push
mov
dec
js
jle
rorb
jmp
lock
fucom
das
or
out
or
andb
dec
mov
mov
pop
adc
sarl
dec
inc
mov
test
and
out
fnstcw
iret
xor
je
xchg
fidivs
shrb
dec
mov
or
xchg
outsl
in
sub
jae
addb
in
inc
pusha
jecxz
out
das
mov
cmc
fisubrl
dec
cmp
cmc
push
nop
ljmp
xchg
nop
rcl
pushf
cmp
sbb
cmpsl
jnp
adc
sahf
jo
cmc
incl
lds
push
lock
dec
aam
push
test
mov
fs
dec
inc
fwait
lock
add
xchg
or
ds
fcompl
popf
adc
sub
in
mov
xor
mov
jge
cli
and
call
sub
test
xor
push
fdivrl
mov
int
mov
inc
sub
push
xor
pusha
xchg
mov
mov
repz
bound
xchg
das
orb
mov
push
xchg
outsl
es
pop
fmuls
mov
sbb
push
add
push
xchg
pop
pop
pop
aam
mov
lods
pop
jmp
call
jne
mov
xor
pop
mov
push
mov
mov
pop
push
sbb
jne
xchg
in
rcll
daa
stc
mov
dec
jl
dec
sub
cmpsb
fs
mov
push
xor
scas
daa
sti
adc
xchg
outsb
jle
das
cli
int3
inc
fimull
aas
out
mov
jno
and
jl
xor
mov
lds
lods
cmc
xor
popf
dec
xor
mov
sub
clc
clc
lahf
arpl
adc
sbb
jb
lock
test
inc
push
xor
jl
jnp
outsb
and
xchg
dec
jp
push
ret
or
pop
or
jbe
cli
pop
lret
lret
dec
adc
pop
cmp
rorb
mov
shlb
insb
or
jg
addb
fnsave
cmp
bound
lret
incl
in
add
mov
lods
int3
xchg
stc
or
sub
dec
and
xor
mov
ds
push
inc
lds
push
jnp
dec
xchg
out
push
lret
lret
push
inc
cmp
jecxz
loop
jecxz
mov
mov
cmp
jne
js
orb
mov
push
mov
shlb
movsb
push
cmp
sbb
bound
sub
ja
mov
push
pop
mov
clc
mov
mov
orl
push
pop
and
mov
in
in
test
imul
xchg
daa
out
pushf
pop
xor
sub
sub
jno
push
or
and
ds
xlat
into
jecxz
mov
test
pop
push
cmp
mov
mov
les
pop
pushf
outsl
ds
jp
cs
push
movsb
loop
sbb
sbb
fstpt
lods
inc
jmp
jmp
and
gs
sbb
xor
and
mov
and
push
mov
scas
int3
out
jnp
adc
mov
out
cltd
jns
cld
scas
mov
andl
mov
jl
int3
mov
mov
imull
shr
out
inc
or
jno
jle
in
movsb
or
inc
push
jnp
ds
aas
cmp
popa
dec
mov
jb
fs
mov
lret
or
loop
lcall
sub
sti
xchg
loopne
mov
cs
xor
inc
scas
cltd
pop
cli
cmp
mov
fistl
push
pop
inc
hlt
xor
push
jb
and
popf
stos
dec
mov
mov
mov
insb
faddl
jne
fdivrs
pusha
stc
sbb
sub
pop
pop
cmpsl
xor
pop
loopne
cmp
sti
add
aam
lods
push
subl
push
adc
movsl
shr
dec
push
and
dec
movsb
dec
or
jbe
jl
fmuls
add
push
sub
dec
mov
out
pop
add
into
das
test
lods
push
jge
xchg
inc
jne
cmc
sahf
push
mov
pop
mov
jns
icebp
sub
jne
mov
sub
mov
xchg
rol
inc
jnp
mov
enter
mov
push
xor
stos
inc
std
out
lea
xor
in
cltd
shrl
jne
arpl
movsl
bound
stc
inc
shl
sbb
hlt
int3
dec
or
lret
xchg
movsb
in
cmp
cmp
pop
mov
jb
nop
arpl
pop
bswap
mov
jmp
sub
repz
and
insl
pop
xor
aas
fs
rcl
mov
add
imul
xchg
arpl
mov
mov
divb
scas
cmpsb
mov
aam
outsb
adc
ljmp
sbb
mov
push
rcl
mov
les
out
arpl
lahf
jo
aam
clc
sar
sub
inc
mov
data16
mov
dec
mov
lods
out
add
shlb
jmp
xor
dec
in
mov
stc
mov
xor
lds
movsb
enter
mov
dec
aas
cmpsl
jb
jbe
jg
xchg
xchg
icebp
lret
jge
into
sbb
push
push
push
fidivrs
test
push
jmp
test
mov
stos
cmp
test
insb
divl
aaa
mov
fldl
imulb
sbb
nop
test
cli
loop
cmc
inc
sub
sbb
xor
mov
js
cltd
sahf
xor
xor
test
mov
pop
sti
xor
test
xchg
dec
or
jmp
and
add
xchg
into
or
stos
xchg
sarl
xchg
addr16
das
bound
mov
out
es
xorl
push
mov
je
push
leave
adc
addr16
push
ret
dec
bound
ret
jmp
xchg
sbb
mov
std
or
daa
call
test
pop
xchg
mov
fwait
mov
push
or
cmc
ja
jb
loopne
push
jecxz
xor
cmp
popf
push
jb
rcll
imul
adcb
rcpps
sti
adc
jg
xor
daa
push
xor
pusha
add
ret
jmp
mov
push
inc
lock
xchg
and
dec
and
xor
pop
jmp
lds
fisubl
cmp
mov
imul
pop
xchg
adc
pop
xchg
aaa
pushf
cli
sti
stos
jg
push
sub
xchg
cmp
fldt
xchg
cmc
sahf
fcompl
and
fs
adcl
mov
xchg
fcoml
sbb
or
nop
mov
adc
adc
push
clc
out
cmpsb
nop
jnp
js
imul
insl
dec
jno
test
mov
xchg
and
insl
mov
mov
insb
jge
and
data16
scas
inc
jl
aas
mov
cmp
mov
xlat
out
fistps
xor
or
mov
loopne
repz
xchg
jne
outsb
js
cwtl
push
adc
mov
xchg
lods
jecxz
or
sbb
mov
aam
fmuls
jns
lods
xchg
xor
fwait
in
pop
leave
loopne
xor
nop
test
or
lods
jae
sbb
repz
mov
scas
nop
cmp
sbb
jle
addr16
pop
push
add
and
mov
sbb
fwait
sti
out
lcall
add
sub
ja
lret
xor
sub
test
out
mov
push
jbe
add
jns
jl
push
jb
das
arpl
pop
push
mov
cld
rcr
adc
adc
mov
jg
push
mov
pop
pop
test
ror
mov
fwait
dec
leave
lock
or
mov
stc
push
outsl
xchg
pop
xor
xor
sbb
mov
cs
movsl
lods
dec
aaa
sbb
test
inc
fmuls
jge
enter
scas
dec
jle
cs
inc
jp
xor
cmp
pop
dec
shrb
push
ss
leave
or
push
add
out
in
cmc
lods
pop
push
dec
nop
das
ds
dec
adc
or
movsl
mov
ljmp
and
pop
loope
gs
int3
pop
in
leave
jmp
repnz
scas
jns
adc
sub
hlt
or
xchg
mov
xchg
pop
mov
sub
in
xchg
add
mov
pop
pop
mov
int3
add
arpl
push
lret
mov
dec
lahf
mov
dec
dec
or
inc
cmp
mov
mov
ret
mov
inc
negl
add
shll
or
or
lcall
fistl
jp
and
push
lds
adc
dec
pop
xor
leave
out
icebp
fstpt
jecxz
leave
xor
bound
push
cmp
or
jp
jns
outsl
jns,pn
jg
lods
xchg
insb
dec
inc
int3
sbb
lahf
mov
sbb
xor
shll
mov
out
das
cs
xchg
adc
jle
push
push
sub
aas
jnp
imul
pop
sti
jg
fadds
lds
mov
stos
sbb
mov
or
in
sub
js
push
vorps
cmp
cli
and
arpl
int3
sub
lea
out
mov
jb
push
inc
fs
cmpl
add
icebp
repnz
out
mov
lods
cmp
or
test
in
js
dec
pop
pop
sub
daa
addr16
add
loopne
jp
enter
add
jmp
ljmp
aam
lods
fdivr
cmc
js
xchg
dec
in
xchg
enter
repnz
xchg
lock
sti
movsb
in
lods
mov
scas
xor
ljmp
outsb
xlat
into
jbe
xor
xor
popf
or
rorb
mov
pop
or
stos
stos
loop
pop
arpl
xor
inc
stos
and
xor
addr16
add
jmp
lahf
sub
and
bound
cli
stos
out
dec
cli
xchg
sti
pop
dec
mov
xor
daa
cli
fbld
inc
mov
repz
fnsave
leave
cli
fdivrs
push
mov
sub
fcmove
in
int
push
orl
out
cltd
sbb
jne
mov
sbb
mov
push
add
scas
arpl
pop
mov
aam
pop
std
clc
scas
xor
add
adc
jecxz
or
cld
fwait
loop
mulb
sub
jnp
cld
sub
call
mov
xchg
hlt
pop
aas
dec
clc
pushf
icebp
pop
jl
mov
push
int3
sahf
cmp
nop
mov
aas
mov
sub
xor
aaa
add
pushf
add
sahf
inc
sti
xor
fldenv
sti
pop
mov
lea
xor
and
sub
jmp
cmp
lret
or
outsl
enter
xlat
push
loop
mov
sarb
aaa
fsubs
mov
inc
scas
mov
fidivs
add
inc
or
test
cmp
and
cmp
repz
lret
cmpsl
cmpsb
ljmp
loop
xchg
xchg
inc
aad
mov
mov
bnd
outsl
xor
fisubrs
adc
ret
addb
hlt
jmp
xor
jns,pn
sub
xchg
or
clc
out
imul
sub
in
out
shlb
ret
mov
or
pop
sub
mov
sbb
repz
addr16
mov
pop
push
cmp
test
mov
sub
sbb
push
xor
addr16
popf
fnsave
xchg
cmp
mov
or
pop
mov
mov
nop
mov
jl
bound
repz
cmp
pop
ss
mov
hlt
jp
insb
in
dec
lcall
neg
jge
fcomip
adc
jmp
pushf
cltd
call
mov
jb
les
shrl
into
in
push
jne
int
push
mov
mov
lds
push
sbb
aaa
iret
insl
mov
or
mov
insb
ret
mov
xchg
jo
repz
push
inc
adc
xor
xor
or
push
pop
mov
push
stos
cmp
pop
jge
dec
add
jae
jno
add
shrb
dec
adc
dec
ret
dec
jl
je
cwtl
jl
mov
test
fisubl
xchg
mov
sub
mov
or
add
repnz
cmpsb
test
pop
push
cmpsb
xor
add
cmpsl
daa
fcomip
cmp
out
js
inc
cmp
imul
sub
mov
or
mov
jg
fwait
jg
loop
test
cmpsb
and
sub
stc
and
sarl
push
xchg
lods
mov
mov
lret
pop
pop
sbb
xor
push
jecxz
scas
jge
add
pop
movsl
inc
icebp
or
arpl
outsw
loop
lods
push
push
cmp
dec
sbb
push
adc
xchg
or
std
adc
shll
xor
push
dec
ljmp
dec
mov
sahf
sbb
push
pushf
dec
and
pop
out
push
and
push
fstl
inc
cmp
inc
lahf
sbb
arpl
push
negl
inc
inc
cmp
ret
jp
mov
add
rolb
pop
subl
not
jae
or
shlb
adc
test
enter
and
jns
scas
hlt
mov
pop
push
ljmp
sahf
sahf
sub
sbb
inc
and
adcl
xchg
pop
add
sub
dec
and
ljmp
loope
add
pop
stc
std
xor
push
pushl
push
jp
mov
iret
xchg
adc
fnstcw
jnp
or
in
insb
xchg
pusha
aaa
sub
push
jae
addr16
sahf
xor
jg
mov
dec
mov
les
inc
lahf
aaa
nop
xor
push
dec
imul
adc
clc
in
bound
mov
mov
mov
popf
dec
pop
xchg
pop
dec
js
lret
in
in
sub
push
mov
lret
cltd
xlat
movsb
jecxz
mov
mov
ss
pop
inc
lcall
or
out
sub
outsb
sub
je
icebp
sbb
loopne
aaa
mov
push
sub
das
mov
cmp
sub
mov
xor
lea
jp
outsl
xchg
ret
les
fnsave
ds
cmp
xor
fisttpll
ss
out
push
fimuls
hlt
inc
test
daa
xchg
xchg
lea
leave
mov
jmp
shll
sahf
push
sub
xchg
xchg
repnz
inc
dec
lods
xor
jne
fwait
les
pop
mov
pop
aaa
xchg
xor
jae
outsl
or
mov
hlt
sub
jl
sub
das
insb
add
mov
test
push
stos
push
sub
adc
fimuls
or
cmp
call
test
ret
inc
mov
sbb
or
fbld
out
and
cmp
sbb
pop
push
stos
cmp
xchg
pop
orl
fildll
icebp
movsl
loopne
mov
test
sbb
jg
push
int3
addr16
mov
nop
loop
jmp
das
aam
push
mov
hlt
cli
cmp
xlat
jg
mov
and
arpl
jae
pop
fs
rclb
iret
scas
pop
aad
pushf
cmpsb
mov
xchg
fistps
xchg
mov
scas
loope
hlt
cmpsl
rcrl
push
fimull
sub
in
mov
jbe
adc
or
inc
push
jb
pushf
xchg
mov
outsl
cmp
and
mov
pop
xchg
lods
rcll
cmpsl
out
mov
insb
adc
or
aaa
mov
xchg
inc
fs
xchg
in
pop
push
fucomi
xor
in
mov
or
xchg
push
mov
mov
bound
fists
not
cmp
jne
or
pop
push
dec
jbe
or
movb
dec
shrb
movsl
sahf
sbb
dec
sahf
cs
out
idivb
addr16
mov
or
xor
mov
xor
fs
push
push
fcompl
dec
call
mov
in
sub
mov
inc
je
cli
mov
lret
or
das
cli
les
inc
xchg
pop
sbb
bound
lcall
test
pop
ja
jb
push
mov
push
sub
sub
inc
lods
rdpmc
add
fstp
outsb
lods
loope
arpl
imul
pop
mov
xor
imulb
pop
pop
mov
cmc
xor
or
and
mov
pop
fwait
sub
test
push
cmpsl
jb
loop
mov
repz
mov
sbb
je
adc
adc
addr16
push
xchg
cmpsl
enter
adc
lcall
out
scas
test
cmp
mov
mov
mov
push
enter
clc
cmp
mov
call
push
pusha
aas
shll
or
ja
cmpsb
cs
push
xor
xchg
pop
xchg
xor
popf
rcl
shlb
sbb
adcb
mov
lahf
push
xchg
stos
fidivs
mov
xorl
into
cmp
jbe
aam
xchg
mov
adc
adc
out
mov
stc
xchg
lea
and
xor
insb
movsb
ficomps
push
mov
xor
std
sbb
sar
and
jge
ljmp
push
sbb
sar
fimuls
jp
fildl
push
push
adc
or
aad
imul
cwtl
xchg
movsb
sbb
stc
testb
xchg
mov
xor
sub
or
stc
adc
mov
adc
pop
js
stos
or
movsb
daa
xchg
xchg
xchg
out
ds
divl
sar
cmp
lret
inc
push
mov
jae
test
xchg
mov
stos
jge
mov
mov
cmpsl
insl
clc
xlat
fwait
or
sbb
call
xchg
ljmp
ljmp
jl
xor
mov
mov
inc
dec
test
xchg
loop
nop
mov
lods
add
jnp
mov
push
sahf
iret
push
fcmovu
add
aas
push
jb
and
jb
dec
incl
sub
push
testl
orl
push
roll
jl
pop
sbb
scas
bound
or
fbld
shlb
testl
aad
jl
or
ret
jno
sub
inc
js
push
and
adcl
xchg
sbb
sbb
jge
adc
cmc
std
scas
stos
mov
mov
cmp
je
add
sbb
xlat
xchg
xlat
pop
lea
test
mov
dec
or
aas
sbb
cs
mull
loop
mov
sub
push
sar
mov
cmc
jb
pop
aad
repz
ja
mov
sarb
mov
cwtl
scas
xchg
mov
mov
push
mov
jle
cmp
inc
movsb
sahf
cmpsb
jbe
shlb
jle
lcall
lds
call
push
mov
sub
jecxz
adc
mov
xchg
lcall
pop
or
pop
jne
rcr
sti
adc
sub
mov
pushf
jne
lahf
mov
lock
xchg
mov
pop
sub
mov
jno
ja
aas
jecxz
mov
stos
jp
mov
call
and
mov
and
das
loope
sub
pushf
xor
sahf
js
icebp
leave
push
mov
testl
adc
xlat
cmp
cli
orb
pop
mov
leave
inc
ror
cmp
dec
push
push
sub
and
pop
gs
sub
push
jmp
into
and
insl
adc
pop
fildl
add
mov
xchg
fadd
dec
cmp
xor
pop
add
std
subl
jae
out
fimull
sub
cmp
call
sarb
inc
inc
out
xor
lcall
xchg
testb
mov
mov
pop
lret
jg
pop
jecxz
sbb
sahf
test
jbe
or
sti
mov
xchg
or
lea
inc
stc
sub
loopne
cmp
fldcw
xor
fdivrl
int
pop
rorb
imul
mov
lret
jle
xchg
repnz
test
jp
into
pop
push
shr
mov
ja
jbe
icebp
pop
bound
sub
loope
sub
outsb
push
test
adc
fildll
mov
jecxz
sub
pop
xsha256
cmpsb
xchg
fwait
inc
shrb
sub
push
aas
adc
jl
xchg
fdiv
xchg
jnp
xchg
jae
push
add
inc
cli
inc
sbb
mov
xchg
pop
testl
sahf
mov
jmp
arpl
push
mov
jg
sbb
jge
sub
add
pushf
clc
shrl
aad
lret
decb
add
je
loopne
xchg
cmp
push
stos
ss
push
imul
mov
pop
movb
aas
sub
cmp
jno
xor
adc
fimuls
xchg
scas
mov
dec
mov
sarl
and
iret
test
dec
mov
mull
es
mov
inc
cs
shrb
jno
mov
insb
bound
hlt
lcall
int
inc
pop
pop
add
out
cmp
loopne
imul
mov
xchg
mov
repz
fnstcw
cmp
mov
or
aam
in
mov
jnp
mov
jmp
adc
inc
sub
out
leave
divl
out
adc
mov
in
add
imul
push
cmpsb
loopne
test
cmp
pusha
insb
adc
rorb
mov
dec
jnp
cmp
sbb
sbbl
daa
mov
mov
ficoml
ljmp
lahf
nop
call
xchg
and
outsl
add
lcall
insl
andl
fwait
adc
out
inc
sub
loope
push
shl
add
adc
cs
pusha
cltd
add
mov
cmp
mov
out
push
rclb
jnp
mov
xor
je
lret
rcrl
sub
fdivp
cmc
lcall
cmp
cwtl
rolb
pandn
xchg
lret
adc
dec
push
sub
bnd
fyl2xp1
sub
sti
jne
sbbb
int3
or
inc
scas
dec
xchg
xchg
lcall
pop
inc
or
dec
jae
mov
rcll
push
xorl
jno
cltd
test
and
clc
fimull
idiv
lea
pop
adc
cltd
shll
sub
jb
or
lea
and
popa
gs
cwtl
pop
in
mov
aas
les
and
stos
loop
mov
push
out
lret
shrl
fst
jl
xchg
sub
xchg
cwtl
mov
cltd
push
pop
stc
insl
pop
add
inc
mov
subb
and
movsl
dec
dec
jne
movsb
and
and
outsl
ds
stc
cmc
in
dec
out
cmpsb
cld
std
lcall
mov
mov
and
lahf
aad
lock
inc
dec
es
lcall
jle
int3
sub
pop
stc
jo
mov
movsb
dec
sub
lahf
mov
or
mov
icebp
sub
imul
mov
adc
rcrb
fucomip
add
insl
mov
mov
sbb
loopne
sbb
adc
daa
jo
xor
push
out
push
add
shrb
mov
push
sahf
dec
test
pop
xchg
add
jp
cli
std
decl
dec
xchg
or
pushl
in
xchg
adc
mov
dec
xor
sahf
hlt
iret
pop
push
pop
loop
testl
jp
in
add
jl
adc
jae
nop
addb
inc
mov
pusha
fwait
icebp
xor
xor
push
ficomps
sbb
or
cld
out
push
fdivrp
movsb
cli
movsb
mov
ds
insl
sbb
imul
push
mov
lock
mov
leave
icebp
jae
fwait
testb
dec
popl
test
mov
scas
test
mov
outsl
add
dec
and
in
rorb
xchg
leave
and
popa
pop
jnp
data16
ret
repnz
rolb
inc
mov
mov
iret
inc
add
jo
xorb
push
inc
add
imul
sub
or
movsl
sub
ret
inc
sbb
inc
sbb
pop
les
movsb
cmc
cmc
dec
test
or
ret
cmc
out
mov
adc
add
mov
sbb
cmp
movsl
cld
bound
fs
and
jle
push
adc
stos
and
sub
loopne
popf
mov
cmp
sub
call
jnp
pop
sti
sti
nop
sub
jecxz
outsl
ljmp
pop
mov
or
leave
xchg
sbb
mov
xchg
fildll
cwtl
imul
dec
aad
fs
jmp
testb
mov
mov
jge
outsb
cwtl
sahf
pop
orb
push
loop
fmull
repz
scas
test
testl
xchg
test
push
add
add
sub
loop
or
push
insl
dec
mov
xchg
xor
test
shll
rorl
pop
jge
leave
push
sub
enter
arpl
jo
or
sbb
add
popf
mov
push
sar
imul
pop
xor
mov
mov
xchg
cmpsl
ret
nop
inc
pop
loop
xorl
fstps
scas
cwtl
adc
jns
jmp
int3
lods
sarb
bound
call
xchg
adc
or
sti
adc
jae
stos
dec
loop
aas
xchg
add
int3
xchg
ds
jne
loopne
arpl
jb
push
fwait
mov
add
jmp
les
mov
insb
imul
pop
push
adc
fdivs
sbb
or
test
inc
iret
pop
sahf
roll
add
or
fbstp
dec
cmpsb
push
movsb
mov
out
add
das
pop
test
inc
je
outsl
cmp
xchg
or
addr16
xchg
sbb
arpl
bound
push
add
and
das
inc
sarb
pop
inc
movsb
mov
lret
sub
cmc
jl
les
je
xchg
mov
outsb
popf
jg
mov
es
daa
add
pop
sbb
pusha
or
dec
dec
sbb
sbb
rcll
das
push
inc
add
popa
cmp
ljmp
rclb
pop
push
dec
or
mov
gs
cli
add
fwait
sti
mov
mov
push
jl
aaa
add
shll
sub
adc
es
lds
inc
jnp
mov
adc
cmpsl
pop
pusha
cmp
lea
dec
test
inc
or
push
jl
push
nop
out
cmp
pop
xlat
add
cmc
pop
add
sbb
lret
ret
es
cmpsl
bnd
movsl
ficoms
cmp
rorl
add
and
jp
rclb
add
iret
in
adc
filds
push
dec
arpl
mov
inc
mov
pop
push
test
cmpsb
adc
mov
mov
jae
in
dec
shrl
add
add
out
xchg
pop
pop
popa
cwtl
repnz
aaa
jb
imul
stos
cmp
cmp
cmp
mov
inc
out
rolb
xchg
add
rcl
movsl
inc
pop
adc
stos
jp
imul
lahf
leave
sti
fadd
imulb
stos
fistl
ret
or
cltd
mov
cmp
hlt
push
pop
and
lds
lods
in
clc
jge
lret
out
arpl
xor
sbb
stos
mov
ljmp
jle
push
push
pop
cs
lcall
inc
and
jnp
xchg
out
sbb
pop
mov
test
mov
or
sar
add
jno
mov
ja
lret
xchg
push
xchg
aam
lret
sbb
cmp
popf
scas
imul
xlat
in
fisttps
xchg
or
inc
fxch
in
hlt
ljmp
jo
mov
fidivl
inc
sub
scas
mov
dec
dec
mov
xor
or
bound
pop
ror
sbb
or
daa
leave
sbb
mov
std
adc
cmp
fisubs
clc
xchg
push
movl
and
cli
jne
mov
call
push
xor
je
dec
pop
jbe
xor
jnp
jne,pn
pop
test
or
jb
lock
rcr
in
testl
sub
jmp
movsb
jp
dec
aas
push
cmp
shll
push
dec
daa
imul
iret
jl
fdivl
xchg
jg
cmp
daa
std
es
data16
jo
ljmp
and
das
jecxz
gs
inc
jp
out
lods
scas
pop
cs
push
or
mov
jg
stos
sarl
sbb
inc
stos
lahf
pop
stc
or
mov
mov
and
je
fwait
dec
cmp
fmuls
shrb
add
out
addr16
cwtl
jno
aaa
andb
pop
pop
jl
stos
dec
push
rclb
fsubr
push
xchg
mov
cmpsl
jp
arpl
into
xchg
loope
mov
aaa
lcall
out
lods
xor
inc
adc
stos
iret
dec
xchg
cli
xlat
mov
fstl
dec
mov
xchg
sub
cld
push
mov
ja
sbb
mov
mov
pop
dec
pop
jae
pop
popa
xabort
xchg
sbb
or
loope
add
sbb
sbb
jge
push
popf
and
mov
cmp
test
push
xchg
icebp
test
jno
aaa
mov
in
jge
pop
popa
xchg
stos
lds
xchg
mov
ss
gs
lahf
push
mov
out
push
icebp
add
dec
lret
dec
loopne
in
loope
frstor
popa
dec
icebp
dec
pop
lds
stc
daa
pop
out
push
add
scas
fisttpll
mov
js
jp
cmp
scas
out
scas
push
lret
inc
or
gs
pushf
xor
nop
jne
xor
sbb
mov
or
xchg
loopne
push
jo
dec
icebp
pop
dec
push
dec
cmp
mov
mov
push
mov
negb
adc
cmp
adc
push
pop
out
add
jae
mov
push
pop
jg
mov
xchg
ret
mov
lcall
push
push
int3
adc
mov
cli
push
out
sbb
push
jne
cmp
or
js
je
fldl
sbb
xorb
dec
cwtl
ret
mov
bound
adc
test
in
mov
aam
movsb
imul
cmp
jno
andb
sbb
sub
adc
mov
xor
pop
iret
mov
mov
lods
jle
gs
push
pushf
mov
scas
orb
cmpsl
ja
sbb
cmp
pop
popl
mov
leave
mov
push
add
rcr
aam
push
jno
sub
loope
mov
push
push
add
dec
cmpsl
xor
xchg
jge
dec
push
fwait
outsb
jmp
adc
inc
xchg
out
xor
adc
out
mov
adc
fldt
sub
dec
nop
mov
sahf
decl
dec
lods
in
mov
add
mov
sbb
xchg
js
xchg
mov
mov
mov
mov
jne
gs
std
in
inc
inc
mov
ret
dec
add
adc
ljmp
pop
js
rcl
sbb
fistpll
jecxz
rcrl
cmpsb
xor
add
stos
inc
or
loopne
jl
ret
push
fdivl
gs
je
push
mov
fsubrs
sbb
cli
sub
aaa
clc
jne
mov
aam
jo
xchg
ret
pop
mov
cli
cmc
fldenv
lods
inc
and
out
adc
icebp
jmp
mov
mov
mov
ror
or
push
test
xor
int3
mulb
cs
in
xchg
out
ljmp
inc
cmp
imul
in
or
movsl
cmp
dec
hlt
inc
jmp
xchg
adc
and
pop
das
addb
mov
ljmp
push
sub
loop
in
mov
add
jo
add
dec
pop
or
cmp
xchg
cmpsl
adc
test
ficomps
jae
adc
aam
ret
or
push
out
dec
gs
cmp
dec
sub
test
out
rorb
adc
mov
pop
sbb
xchg
xor
or
or
cmp
mov
out
aas
push
cmpsb
push
xor
adc
pop
xlat
dec
orb
aam
leave
cmp
pop
out
sbb
dec
mov
pop
pop
mov
mov
mov
sub
or
movsb
cli
es
and
nop
sub
inc
xchg
pop
cld
bound
pop
popa
xchg
pop
sar
shll
jae
adc
mov
repz
into
jno
mov
push
flds
adc
std
sub
je
cmpsb
cmp
cmp
ljmp
lods
sub
clc
das
cli
pop
xchg
push
mov
lret
clc
cltd
mov
mov
or
daa
lods
xchg
jns
stc
xchg
fisubrs
int3
adc
incl
pushl
ss
push
jno
mov
aam
inc
inc
jb
mov
test
gs
repnz
in
scas
push
into
in
rorb
loop
jmp
pop
inc
ficomps
adc
jp
mov
je
bound
sub
sbb
es
mov
ret
ljmp
imul
push
xchg
inc
out
push
int
or
ficomps
inc
pop
imul
je
pop
imul
adc
cmpsl
negb
or
scas
scas
out
sub
mov
adc
cmp
out
pop
int
cltd
jl
adc
cmpb
leave
sbb
xchg
cmp
sti
ficoms
and
imul
lret
inc
mov
std
iret
test
push
pop
scas
gs
and
hlt
xchg
pop
movsb
pop
loopne
mov
lds
outsl
mov
ficoml
bound
fs
xchg
jmp
imul
iret
dec
test
xchg
xor
push
lret
push
mov
adc
rclb
pop
pop
repz
bound
out
mov
insl
scas
rcll
or
ffreep
inc
xchg
sub
or
push
mov
leave
cmp
sub
pop
sbb
dec
xchg
aad
dec
lret
imul
dec
and
call
jns
cmp
sub
xor
pop
push
bound
pusha
add
push
cmp
lahf
mov
mov
loope
push
mov
adc
clc
rorb
fldt
xchg
pop
dec
jns
add
int3
mov
add
fwait
pushf
add
and
aam
in
inc
adc
int3
dec
fwait
ljmp
fs
mov
and
jno
pop
lock
outsl
mov
popf
or
pop
sarl
xorl
cmp
jp
insl
leave
xchg
js
sub
test
pop
jnp
inc
rorl
mov
push
jb
xchg
push
stos
sbb
mov
mov
ret
mov
fmull
test
pop
xlat
xorl
mov
rcll
out
pop
xor
mov
fisubrs
sbb
jae
nop
mov
test
adc
fisubl
cmp
sub
dec
dec
mov
hlt
jecxz
cmp
popf
sbb
mov
arpl
and
sub
dec
sbb
out
fst
rclb
jl
inc
sub
dec
mov
mov
mov
mov
imul
adc
enter
icebp
dec
add
out
mov
mov
mov
pop
hlt
jecxz
sub
bound
pminub
pop
xor
lcall
pop
and
decl
and
mov
aam
in
inc
lea
jg
in
xor
rclb
cld
dec
aaa
popf
mov
mov
push
mov
inc
jg
leave
scas
ljmp
pop
popa
lret
addl
xchg
rcr
pushf
mov
movsl
jge
pop
jbe
jae
jge
lods
sbb
aaa
imul
mov
mov
gs
and
mov
push
push
and
dec
push
jae
jno
or
iret
rcrl
mov
and
xor
pop
xor
sbb
jg
sbb
jl
mov
int3
pop
xor
fstpl
loope
ret
add
gs
testl
popf
add
int
clc
call
dec
mov
jmp
dec
mov
or
add
out
mov
dec
inc
ss
out
inc
sbb
push
push
push
push
pop
and
xor
mov
leave
mov
mov
lods
mov
and
or
lock
sub
lcall
push
mulb
out
repnz
dec
mov
pop
sbb
shll
adc
adc
and
lds
mov
jmp
cmp
adc
push
movsb
subl
inc
jne
rcrl
out
mov
in
lcall
daa
and
sbb
jne
ret
int
cs
pop
inc
push
or
mov
std
or
push
mov
test
adc
add
push
sti
xorl
sbb
xor
cmp
adc
xchg
shll
data16
mov
es
int
lret
fcom
stc
xchg
jmp
aad
mov
out
insb
and
mov
push
pop
stc
rcrl
imul
and
dec
pop
adc
sub
test
mov
inc
ljmp
scas
in
cld
push
outsl
sub
mov
rol
hlt
icebp
adc
je
cmpsl
cmp
imull
out
lcall
stos
nop
cmc
dec
ljmp
adc
addr16
das
stos
js
clc
int3
in
rcr
loopne
or
cld
outsl
aaa
push
iret
cld
cwtl
test
gs
fstpl
mov
fiaddl
sub
scas
mov
outsl
xchg
stos
das
xchg
jnp
cmp
and
fsubp
in
xor
push
int
jmp
cmpsb
fsubrl
insb
imul
push
outsl
mov
xlat
jbe
cmpl
add
mov
jbe
xchg
stc
mov
int3
cli
xchg
push
pop
mov
sub
int3
sbb
add
jg
out
mov
pop
pop
inc
insb
inc
jl
fistps
test
into
clc
xor
jne
jge
in
insb
add
nop
stos
test
loopne
cmpsl
mov
sub
fisubrl
adc
ret
fiadds
lock
sbb
in
les
sub
int3
enter
pop
mov
fwait
clc
adc
and
fstp
in
dec
adc
fsubrs
jge
scas
loopne
pop
out
repz
xchg
push
addb
sub
cmpl
adc
fidivrs
xor
fildl
sarl
fwait
pop
pop
xor
ss
dec
pusha
xchg
jge
xlat
pop
test
mov
cmpl
in
clc
dec
out
imul
sbb
das
loop
mov
pop
pop
popa
fsubr
push
adc
cmp
stos
and
in
inc
cmp
cmp
adc
xchg
aam
hlt
out
cltd
out
dec
jmp
sub
gs
scas
shrl
add
and
aad
dec
std
sub
xchg
inc
sahf
xor
pusha
test
fwait
subb
xchg
jg
adc
sti
inc
in
fbld
mov
out
lret
ret
lds
stc
iret
mov
and
cltd
push
mov
mov
xor
add
int
lds
jns
outsl
lret
mov
stos
inc
mov
dec
dec
and
jns
push
xor
aaa
clc
jns
data16
fsubrl
outsl
pop
lods
loop
test
pop
cmc
iret
pop
fidivrs
test
xchg
sti
ds
mov
stos
daa
test
mov
fdivrl
out
xchg
lcall
ljmp
addr16
pop
xchg
dec
xchg
dec
leave
adc
out
out
out
pop
mov
jl
cmp
les
dec
sbb
jecxz
adc
jecxz
dec
test
pop
xchg
jp
pushf
mov
hlt
negb
mov
mov
lods
ja
sti
or
aas
xchg
in
pop
push
or
orb
pusha
pop
mov
cmc
push
xchg
rorl
sbb
aad
lahf
into
push
mov
mov
mov
cmp
sub
cmp
jmp
mov
loop
inc
mov
jl
ja
aad
lods
lret
or
adc
and
mov
fldenv
inc
pop
xchg
jae
jne
jne
mov
push
popa
adc
cli
xlat
data16
push
mov
imul
cmpsl
jg
fdivs
ffreep
cmp
scas
ror
inc
lahf
pushf
adc
xchg
mov
in
push
call
aam
mov
add
data16
pop
insb
aaa
sub
pop
je
xchg
sarb
adc
hlt
or
mov
jmp
inc
jp
imull
jl
pusha
outsb
mov
shrl
mov
xchg
pop
inc
lret
adc
and
call
fsubr
adc
daa
jbe
add
out
mov
pop
inc
not
xlat
and
pop
int3
loop
xor
xchg
call
inc
into
ret
and
hlt
push
pop
mov
pushf
and
out
std
xor
shl
cmp
outsb
adc
add
int3
fcomps
js
dec
mov
icebp
and
das
pop
fucomi
and
sahf
or
ret
mov
adc
data16
jge
test
xor
jmp
mov
outsl
sti
test
icebp
sub
pop
add
adc
in
or
mov
lcall
cmpsb
loop
adc
testl
jnp
add
jbe
pop
jbe
bound
iret
test
movsl
lcall
in
in
dec
adcb
dec
dec
addr16
pusha
ljmp
inc
sbb
rcrl
sub
push
rol
xor
add
jnp
lret
cli
jmp
dec
repz
data16
out
inc
jno
push
jne
fbld
sub
or
pop
pop
cmp
fdecstp
lret
xor
sti
jne
jo
fcoms
xor
imul
push
sub
adc
xchg
xchg
inc
and
daa
gs
stc
mov
sbb
test
fistpll
stos
insl
cmp
aam
fstpt
imul
shlb
sbb
cmpsb
sub
gs
cmp
jmp
jno
jge
popa
sub
sbb
mov
cmp
subl
adc
mov
and
inc
jge
ss
or
xor
pop
adc
sahf
dec
jo
pusha
adc
call
iret
loope
mov
rolb
cmp
sbb
xchg
or
test
imul
mov
rcll
mov
arpl
cmpl
jl
rorb
fmuls
in
sbb
push
push
aaa
popl
push
in
cmpsb
fucomip
mov
shrb
shll
sti
loop
loopne
shrl
inc
inc
mov
adc
jle
roll
movsb
arpl
adc
aam
aad
fdivrs
movsl
xor
je
mov
ds
pushf
xor
ja
scas
xor
das
movsl
pop
mov
and
and
mov
imul
inc
xor
into
pop
out
dec
xlat
cmpsl
adc
xor
mov
addr16
push
clc
and
sub
add
push
in
xor
shl
jne
mov
dec
sbbl
xchg
cmc
repnz
call
or
push
jp
insb
add
subl
or
and
or
fistpl
add
inc
fbld
je
loop
fiaddl
mov
inc
in
repz
and
in
pushf
pusha
fistps
sbb
sub
cmc
loop
das
sbb
rorl
subl
jno
fwait
sub
jmp
aas
and
jl
arpl
hlt
fldenv
mov
aad
cld
ret
dec
sbb
insl
test
xor
and
xchg
jle
push
stos
cmc
jno
cmpsl
xlat
jge
mov
test
call
pushf
dec
sub
popa
xor
xor
sbb
xor
mov
mov
cld
jo
sbbb
aam
mov
enter
and
adc
insl
imul
in
jbe
daa
aaa
std
mov
xchg
mov
ret
rcll
xchg
pop
stos
xor
popf
pop
inc
inc
les
adc
xchg
push
or
lock
mov
out
push
fxch
xorl
shl
or
mov
sbb
cmp
hlt
xchg
inc
sbb
pop
push
sbb
pop
mov
jb
mov
pop
pop
ljmp
push
sub
test
scas
rcll
jle
out
outsb
aas
adc
addr16
pop
jg
mov
cs
je
mov
jmp
insb
pop
loop
mov
lds
shl
loopne
enter
ret
xor
stos
pop
mov
sbb
dec
jo
mull
xchg
sti
lock
push
push
xchg
or
rcrl
push
adc
inc
and
add
sub
jbe
or
pop
out
dec
sub
push
mov
sub
mov
inc
or
xchg
lcall
cld
loope
mov
cmpsb
jmp
add
push
dec
movsl
inc
and
jg
and
in
or
push
aaa
jnp
dec
or
sub
mov
inc
xchg
or
arpl
or
xchg
jmp
je
or
jp
outsl
mov
mov
loop
sti
or
imul
cltd
push
pmuludq
icebp
shr
sub
cmp
repnz
mov
lahf
ret
pop
fwait
or
dec
rorb
push
inc
in
iret
cs
pop
cmp
std
test
push
mov
insl
push
repnz
mov
das
sbb
inc
imul
test
into
cltd
cs
shll
jo
cmpsb
jae
add
xchg
cmp
pop
pop
out
push
mov
and
push
xor
mov
xchg
fisttps
add
fidivs
cld
int3
fimull
aas
dec
mov
rcrb
test
sti
repz
leave
mov
cwtl
popf
jo
dec
sub
sbb
and
bound
scas
inc
clc
jl
movsb
pop
loope
sbb
test
cmp
jo
nop
sbb
jb
or
int3
fstl
mull
xor
jne
out
dec
stc
push
outsb
in
roll
mov
dec
imulb
andb
cmp
fwait
mov
je
shlb
lret
lea
jp
mov
insl
xchg
or
test
cld
mov
and
dec
jne
jmp
sbb
add
cmpsl
outsl
pop
pop
mov
clc
aam
lcall
cmp
pop
lcall
out
dec
adc
out
fcompl
xor
in
jns
sarb
add
aam
push
push
mov
sbbb
adc
cmp
pop
ljmp
jbe
repz
cltd
add
push
push
mov
ja
mov
test
rorb
sub
cmp
mov
scas
repz
ret
jnp
xchg
int3
push
add
cwtl
jg
stc
loopne
pusha
repz
cmp
and
pop
out
fidivrs
int3
out
pop
pusha
xchg
jno
data16
sbb
pop
in
mov
stc
pusha
ret
lea
sbb
fnstsw
jg
pop
fadds
test
adc
jg
mov
push
and
shrl
add
cmovle
movsb
cmp
imul
aam
push
sbb
add
lcall
repz
fs
sbb
loop
mov
cmpsb
mov
std
int3
push
pop
stos
or
sar
pop
mov
pop
ja
imul
mov
jbe
fidivl
cltd
ret
movsb
scas
mov
mov
cmp
lea
ret
dec
dec
cmc
xor
leave
pusha
js
ljmp
into
push
add
clc
push
mov
pushl
imul
mov
orb
jecxz
push
dec
jg
mov
add
and
mov
arpl
push
xor
xchg
xlat
add
cmc
xor
sbb
sub
xor
pop
or
push
xchg
push
cli
jne
add
andl
cmpsb
mov
inc
xor
out
insl
addr16
aas
and
aad
subl
and
lods
ss
gs
or
mov
loopne
dec
xchg
loope
inc
orb
or
in
mov
sbb
mov
xchg
push
sbb
pusha
sbb
popf
and
je
in
dec
movsl
push
add
fwait
and
sub
adc
inc
dec
dec
push
jl
push
xor
lcall
push
aas
call
loop
pop
cmpsl
xor
sbb
pop
outsb
pop
mov
inc
fisubl
xchg
cmpsl
nop
arpl
stc
aas
jp
out
jecxz
dec
ret
add
xor
iret
aad
iret
iret
inc
add
and
ljmp
rorb
je
fxch
hlt
sbb
shl
fs
sbb
mov
leave
pop
jns
add
push
dec
rclb
out
clc
filds
adc
add
lods
ljmp
stos
sbb
and
add
imul
mov
xchg
xchg
imul
popa
mov
cmp
sbb
fistps
mov
sbb
inc
mov
mov
sbb
sbb
sub
xchg
repnz
sub
push
shrl
fiadds
lock
sbb
cmp
fcoms
pop
cmp
mov
enter
mov
lods
or
xor
cmpsb
dec
adc
loopne
mov
push
pushf
push
push
push
sbb
and
dec
test
push
xor
aam
jle
xchg
or
loope
mov
mov
popf
sti
es
lock
and
mov
jbe
and
stos
jb
punpckldq
jbe
push
mov
mov
fidivrs
mov
add
pop
in
dec
fdiv
dec
pushf
out
insb
push
in
dec
iret
add
and
inc
xchg
sbb
mov
stos
cmp
jg
push
jne
gs
inc
adc
adc
ss
cli
js
in
inc
xor
mov
cmpl
insl
inc
pop
or
sbb
std
inc
lea
pextrw
push
mov
fcom
xor
loopne
aam
inc
stos
dec
jnp
mov
outsl
cwtl
xchg
cmp
jne
test
sbb
nop
inc
xor
push
stc
xlat
lock
jp
sti
xchg
loope
push
jmp
mov
push
jns
dec
imul
rcrb
inc
mov
lret
pop
jne
and
or
jmp
sub
imulb
xchg
push
add
push
aam
icebp
repnz
ret
mov
adc
cmp
mov
pop
cmpsl
nop
aaa
or
pop
sub
pop
call
xchg
insl
leave
xor
nop
dec
mov
ficompl
jecxz
loope
mov
lret
mov
dec
lds
mov
cld
arpl
loopne
push
ret
mov
mov
pop
lock
icebp
sub
mov
cmp
or
dec
xchg
das
mov
mov
imul
fiaddl
add
inc
push
sahf
mov
andl
aas
xchg
movsl
sar
dec
cmc
xchg
sub
xchg
mov
dec
cmp
cmp
std
pop
clc
xor
addb
push
xchg
mov
jo
sbb
in
cmp
jge
xchg
cmp
add
scas
xor
push
cmp
pop
out
mov
in
test
jns
fdivs
pop
xlat
jo
fadds
sub
enter
fcoms
inc
mov
push
or
mov
inc
aas
jp
xchg
addr16
cld
mov
scas
scas
mov
xchg
aas
fildl
scas
or
std
push
rol
ss
mull
aad
jge
into
in
jo
in
inc
add
inc
mov
loopne
cltd
mov
jmp
push
stos
mov
fucomip
fs
push
push
lods
icebp
inc
loope
add
cld
pusha
lret
add
jns
jae
mov
imul
xor
imul
add
sbb
jecxz
ret
lahf
jne
imul
sub
ret
pushf
imul
dec
xor
in
cs
cmc
or
pop
aas
jbe
iret
jp
fstpl
cltd
jle
push
sub
and
push
jecxz
sti
aas
leave
mov
jle
jns
inc
outsb
imul
add
lods
xchg
adc
lret
or
mov
or
jns
jbe
adc
inc
js
push
mov
loopne
aaa
or
xchg
fsts
push
fcmovnb
inc
jo
cmp
adc
add
ss
rcr
xchg
out
fwait
lds
or
shrl
mov
das
outsl
repz
out
ja
or
pushf
lock
dec
pushf
add
dec
and
sarl
jbe
aas
pop
rorl
xlat
out
pop
test
xor
cmp
clc
lret
les
fld1
mov
sbb
inc
loope,pt
ja
mov
mov
cltd
and
cmpl
std
dec
jae
jmp
xchg
pop
dec
cmp
addr16
in
pushf
sahf
jge
ret
add
out
and
xor
std
rorl
jbe
notl
outsb
bound
lock
cmp
or
add
das
movsl
arpl
mulb
cs
push
mov
fucomi
push
mov
push
pop
sub
cli
mov
cmpl
mov
sbb
test
and
clc
inc
or
mov
enterw
or
cwtl
push
mov
push
adc
add
icebp
mov
inc
insb
lea
ja
ds
out
xchg
xchg
lea
fwait
insb
andb
sub
loopne
mov
push
lock
add
push
fadds
dec
cmp
pop
xchg
inc
in
xor
cmp
xor
out
push
mov
mov
loopne
ja
add
add
pusha
mov
jno
ficomps
fcmovnb
pushf
pop
adc
das
and
jmp
imul
jmp
jl
cmp
cli
fwait
sbbl
lret
arpl
psllw
jp
jo
pop
adc
pop
lea
dec
jne
and
lods
lds
cmp
add
cmpsb
stc
mov
jmp
imul
fdivrs
cmp
out
stc
gs
ljmp
dec
adc
lahf
mov
sbb
inc
and
jmp
insl
jne
inc
mov
mov
jbe
push
or
xor
mov
add
lea
xchg
loop
in
add
imul
mov
test
test
sbb
clc
xor
add
push
scas
aam
mov
nop
jne
xchg
push
sbb
or
xchg
lret
lcall
repnz
test
lds
lret
notl
negb
mov
add
cwtl
cmp
cli
push
mov
aam
movsl
int3
inc
push
pop
cmp
sbb
cmp
pop
ljmp
repnz
out
in
int
inc
cli
lcall
xchg
dec
sub
push
leave
jg
repz
sub
popa
xlat
dec
or
outsl
fnstenv
push
xor
adc
jo
pop
sahf
jge
adc
xchg
outsb
lock
adc
cld
xlat
or
movsb
cwtl
mov
sub
outsb
sub
movsb
lea
aam
sbb
aad
adc
cs
adc
jecxz
inc
lods
mov
mov
clc
adc
jns
or
lock
and
xor
test
pop
test
dec
movsb
ss
mov
data16
fs
xor
xor
inc
inc
mov
xchg
pop
mov
pop
les
repnz
or
aas
into
xchg
ds
jge
lock
roll
dec
dec
inc
jp
or
dec
aaa
mov
sbb
jnp
sub
movsb
push
jae
lods
mov
sub
mov
push
and
xchg
add
test
xchg
jg
mov
sub
daa
cli
mov
jl
dec
push
and
and
and
sub
mov
cmp
xchg
or
jp
movsb
push
mov
cld
loop
dec
and
xor
out
dec
imul
dec
sub
mov
sbb
push
addr16
and
cmp
xchg
cmp
bound
push
ret
idiv
cmc
jle
xchg
lods
push
out
adc
mov
arpl
pop
mov
lahf
jae
cmp
subl
add
and
stos
icebp
clc
lods
loop
fs
mov
inc
imul
and
mov
jecxz
sbb
out
es
mov
popf
pop
stc
push
fildl
add
jge
mov
aad
xor
daa
ret
lods
lds
mov
mov
push
lahf
mov
int
enter
inc
pop
mov
xchg
xchg
out
sbb
int3
sub
popf
sub
push
ljmp
leave
sbb
dec
pop
add
cld
test
jnp
sbb
cmp
jg
imul
push
clc
imul
scas
inc
sub
fs
xchg
and
or
mov
sbb
int
icebp
push
dec
adc
push
sbb
mov
cmp
lods
fwait
dec
mov
lods
jo
push
cli
inc
das
pop
inc
mov
xor
inc
dec
dec
fdivrs
cmpsl
test
cld
jo
repz
or
mov
or
aad
add
pop
arpl
pop
and
jae
sub
and
aas
jl
sub
push
ja
xchg
mov
mov
pop
xchg
repz
xorb
shrl
jns
js
add
xchg
cltd
push
cmp
dec
mov
pop
dec
add
dec
jno
notb
das
pop
or
xor
dec
cwtl
icebp
jno
incb
xor
subb
xchg
insb
ficomps
pop
cmp
mov
xchg
sub
mov
inc
cmp
roll
pop
fnstenv
cmpsb
imul
mov
ja
dec
aas
fs
bound
in
dec
cmp
fdivr
add
mov
movsb
xchg
lock
js
aad
cmc
addr16
test
sbb
sub
roll
orb
imul
dec
pop
mov
mov
lahf
adc
lods
push
push
sahf
in
fimull
clc
mov
jne
mov
shrb
clc
lods
push
in
jae
mov
sti
ret
push
pop
int
jbe
ljmp
adc
aaa
aad
mov
aas
sub
scas
mov
aaa
mov
scas
mov
sub
das
inc
mov
int3
jbe
mov
inc
and
dec
imul
test
fstps
pop
divl
xchg
arpl
stos
pop
rcrl
add
mov
and
cmc
push
push
jae
aas
or
sbb
fdivs
add
sub
sub
xchg
mov
xor
shll
sahf
je
bound
loopne
shlb
scas
popf
inc
ficomps
orl
cli
mov
fs
sbbl
ljmp
sub
rcrl
push
or
jnp
icebp
sub
dec
cli
inc
and
mov
jmp
jl
inc
into
pop
lcall
mov
std
mov
ret
xchg
divb
call
mov
cmp
xlat
roll
xor
jecxz
out
arpl
pop
xor
lret
repz
sbb
repnz
pushf
fsubrs
mov
push
xor
mov
dec
add
push
mov
sub
push
dec
xchg
sbb
or
mov
pusha
out
mov
arpl
sub
pop
and
mov
mov
xor
ja
shrd
daa
mov
out
mov
cmp
outsl
scas
push
xchg
fsub
jbe
xchg
or
xchg
mov
loope
push
shll
jnp
jl
mov
xchg
leave
sub
pop
and
or
fisttps
mov
popf
mov
adc
push
daa
sti
adc
mov
outsl
pop
jbe
mov
push
cmpb
push
popl
sbb
and
mov
push
out
or
mov
fdiv
push
dec
lea
and
sbb
and
shlb
call
inc
inc
xlat
fs
push
push
mov
jp
scas
or
xchg
mov
flds
insl
addl
jecxz
xor
dec
sarb
jns
dec
jne
inc
ljmp
imul
cmp
pushf
cmp
movsb
stos
cmp
xor
xchg
loope
aaa
stos
test
sbb
or
insb
cmp
dec
imul
jmp
jle
xor
mov
pop
and
jmp
ss
jl
test
rcrl
or
das
sub
mov
mov
shrb
mov
imul
jno
pop
ds
cld
cmp
fmul
pop
mov
int
andl
fs
pop
nop
add
out
mov
adc
push
movsl
sub
shl
aaa
in
sti
push
pop
xchg
inc
dec
cmpsl
sbb
enter
or
in
or
stc
dec
lods
dec
out
pop
ss
cmp
pop
jns
jmp
fldt
push
icebp
cmpl
rcrb
lret
subl
fs
ds
cmp
mov
push
lret
out
pop
cmp
cmp
xor
lock
mov
mov
fsubrs
pop
rorl
out
repz
sbb
data16
std
sbb
lret
sbb
dec
push
rolb
into
fstl
aaa
lds
bound
inc
jne
lods
xchg
das
adc
fnstenv
dec
int3
mov
jo
lods
in
mov
and
shlb
aas
negl
cld
repz
push
imul
mov
mov
and
inc
ljmpw
mov
out
test
cmpsl
inc
jp
pop
ss
sbb
negl
ret
xor
add
sbb
mov
inc
push
xchg
imul
cwtl
insl
lods
insb
jp
sbb
bound
andl
dec
loopne
sbb
test
leave
jbe
rcl
add
xchg
aam
outsl
sbb
jb
xchg
push
lods
enter
mov
xchg
lret
cltd
push
pop
add
in
xchg
cmp
pop
add
inc
sub
mov
andl
jae
mov
js
pop
mov
and
add
loope
pop
and
jp
mov
int
shlb
jle
fldcw
ljmp
je
push
push
inc
inc
push
in
xchg
cmp
mov
scas
dec
push
pop
xor
pop
in
mov
jmp
in
or
mov
jbe
xor
in
das
aam
mov
jle
pop
ficoml
gs
js
xchg
or
jo
cmp
xor
xchg
mov
out
stc
into
mov
and
test
call
gs
or
mov
stc
into
jo
aad
andl
insl
xchg
into
add
push
aas
in
jae
pop
pop
imul
xchg
nop
ljmp
shrl
pop
mov
icebp
testb
sub
add
xor
or
mov
pop
repz
ljmp
cs
mov
pushf
or
movsb
in
xor
inc
sbb
jns
out
mov
inc
mov
jbe
test
fwait
ret
in
cmp
inc
push
and
sub
and
sub
test
dec
add
ljmp
mov
sbb
xchg
sbb
add
push
cli
lea
push
cmc
push
adc
mul
xchg
mov
inc
pop
lods
ds
lods
call
stos
scas
popa
mov
jle
lock
xchg
fistps
mov
jge
rorb
fucomi
jl
jae
pop
pop
nop
jg
popf
mov
fidivrs
fildll
scas
xor
lds
inc
pop
ficoms
jno
test
sbb
scas
pop
and
sbb
lret
mov
ret
cmpsl
mov
xchg
addb
xor
push
mov
jb
pop
and
mov
and
push
push
cltd
scas
loope
cwtl
or
xchg
sbb
ret
mov
test
cmp
or
stos
xchg
stos
ss
cmpsl
or
adc
arpl
lds
pushf
andl
sub
pop
mov
dec
aad
push
fwait
and
inc
pop
cmp
es
das
in
pop
pop
ja
arpl
push
sahf
call
and
jl
pop
enter
movsb
jns
sbb
xchg
insl
sbb
adc
mov
or
mov
jno
mov
pop
and
sbb
out
pusha
mov
in
sub
call
push
jae
xchg
cmp
dec
xchg
flds
repnz
negl
mov
or
test
repnz
es
inc
movb
xor
imul
clc
jp
xchg
test
pop
lcall
aaa
rcll
adc
les
xchg
or
cmp
add
nop
or
pop
shll
shl
test
push
xorl
or
mov
xor
xchg
jo
mov
jmp
jp
xchg
insb
jb
pop
pusha
in
push
inc
outsl
fs
xchg
leave
les
add
pushf
xor
mov
mov
mov
pop
and
push
pusha
push
pop
mov
cs
fisubl
pusha
addb
das
or
mov
das
jne
push
ret
adc
je
xchg
pop
or
xlat
stc
clc
adc
loope
xchg
sub
gs
xchg
xchg
and
fcoms
enter
std
adc
out
fwait
pop
xor
fisubrs
adc
jns
aaa
cld
dec
lods
xchg
lcall
jl
mov
mov
fstps
lods
and
jge
inc
and
xchg
sub
out
in
jbe
and
add
jne
out
rol
movsb
lods
fadds
add
test
clc
arpl
add
xlat
daa
cli
lcall
cmpsl
mov
jmp
popa
jle
les
fsubs
cmpsl
loope
mov
pop
cltd
add
push
pop
in
fsubrl
and
stos
jbe
mov
lahf
push
loope
aas
dec
call
popf
adc
aaa
ss
add
aas
mov
or
js
push
or
push
adc
sub
les
xchg
cli
mov
xchg
sbb
pushf
sub
push
js
test
cmp
mov
mov
leave
aaa
push
jne
jmp
aas
xchg
mov
jnp
mov
inc
movsb
out
or
adc
sbb
fstpl
push
sub
pop
add
and
cmc
pop
xor
push
sysenter
in
lahf
dec
in
dec
mov
es
jmp
daa
movb
xchg
jno
jo
jecxz,pn
in
adc
addr16
push
out
jno
sub
inc
mov
ss
test
xchg
shlb
sbb
mov
adc
psubsb
out
push
or
or
call
fwait
movsb
inc
push
fwait
aas
inc
inc
fadd
mov
xor
push
cwtl
and
xor
int
cli
shrl
mov
sub
add
pop
lock
lods
mov
lds
mov
mov
test
pop
mov
sbb
mov
out
andl
pop
ret
data16
push
or
jl
repz
int
xchg
mov
lret
aad
daa
sub
outsb
xchg
push
notb
lods
jmp
cmc
rcrl
pusha
jge
mov
test
jnp
and
sbb
mov
imul
dec
cmp
jp
ret
cld
mov
out
pop
call
mov
pop
mov
stc
imul
mov
outsl
jle
mov
xchg
bound
rdtsc
inc
mov
outsl
mov
test
jae
inc
cltd
fisttps
inc
adc
jl
out
lock
test
or
rcl
fcoml
xchg
push
adc
insb
cwtl
fcmovu
cli
pop
out
in
or
mov
inc
fnstenv
ficoms
xlat
ficomps
jmp
jno
rorl
sbb
inc
sbb
cwtl
ror
repnz
xor
imul
lcall
xor
aaa
pop
dec
cld
cmp
xchg
in
mov
into
mov
scas
or
int
jl
push
xchg
cmp
fnsave
add
sahf
cmp
out
test
adc
test
fldt
sub
or
push
jecxz
leave
cmp
mov
and
push
out
or
adc
inc
inc
stos
dec
into
xchg
es
sbb
pop
push
imul
push
repnz
cli
mov
mov
das
xor
sub
movsl
and
iret
mov
mov
ss
leave
add
andl
or
cwtl
mov
cmp
adc
stos
push
dec
fiadds
or
not
jne
push
jnp
mov
xchg
xchg
mov
pop
dec
cmp
bound
sub
test
and
adc
out
scas
rorl
test
inc
xlat
decb
ror
sbb
loopne
fcompl
repnz
ficompl
dec
inc
ret
shll
jg
into
mov
adc
ret
jnp
daa
cmp
mov
mov
adc
xor
stos
sbb
lahf
movsb
mov
test
mov
insb
dec
inc
xor
pusha
add
and
cmp
in
movsl
mov
js
lahf
push
adc
insb
test
mov
jg
sha1nexte
leave
inc
fnsave
sub
stos
into
push
jnp
cmc
or
add
adc
pop
fwait
inc
cmc
and
movsb
or
mov
ss
or
enter
rorb
and
mov
mov
fdivl
cmp
cmpl
movsl
lret
mov
add
mov
push
and
std
xchg
xchg
sti
sub
cmp
nop
and
inc
sbb
jp
jb
sbb
int
mov
push
push
lret
add
add
outsl
out
lds
ja
push
pop
cmc
jl
add
popf
je
xchg
dec
inc
mov
lahf
push
hlt
stos
insb
jns
pop
or
stc
loop
hlt
fstpt
mov
addl
int3
cmp
fmull
jno
sbb
dec
mov
push
cmp
in
push
sbb
mov
loopne
nop
and
inc
pop
loope
jbe
and
pop
scas
cmpsb
mov
mov
lahf
cmp
xlat
mov
push
add
pop
cmp
rep
push
shrb
lret
push
jbe
jp
loope
js
push
sbb
xor
das
inc
push
in
ret
iret
push
and
mov
jp
ret
mov
inc
lea
pop
jne
pop
xchg
and
push
rorb
add
jns
lea
cmp
sbb
popa
rcl
andl
jno
xchg
pop
adc
rorb
push
mov
sub
jl
outsb
mov
xchg
data16
mov
ss
or
outsl
mov
repz
xchg
jns
sti
fwait
out
jns
push
pop
xchg
dec
int
adc
sti
out
jae
mov
sti
rcrb
dec
outsb
cmpsb
cmpsl
sbb
insb
adc
mov
inc
outsl
inc
sbb
push
sub
sub
stc
jg
scas
jo
adc
das
xchg
in
ss
sbb
sbb
add
icebp
in
push
sub
sar
jae
add
in
fdivrs
jns
arpl
pop
ja
daa
test
push
lret
in
not
test
stc
sti
test
mov
ljmp
cmp
ret
jge
mov
or
subb
adc
in
scas
enter
adc
cmp
shll
and
xchg
fidivrl
in
mov
sbb
leave
pushf
jle
lds
and
test
lods
inc
sbb
imul
sbb
test
sahf
arpl
iret
dec
aad
imul
mov
insb
out
stos
pop
aad
mov
insb
clc
dec
mov
ret
mov
xchg
outsb
push
xchg
aad
ljmp
add
icebp
push
dec
leave
inc
xor
inc
mov
jnp
inc
mov
sbb
loope
or
lret
jo
xor
ljmp
enter
mov
ret
adc
data16
sbb
dec
sbb
iret
imul
aas
cli
rcr
outsl
fdivs
pop
sub
outsl
push
and
sbb
jb
pop
mov
mov
push
mov
xor
mov
call
pusha
out
pop
cltd
sarl
and
cmp
dec
lahf
xchg
lods
mov
hlt
xor
inc
int3
inc
pop
jg
cli
imul
test
rorb
mov
jo
in
repnz
mov
dec
xchg
cwtl
arpl
cmpsl
cmpsb
push
mov
es
out
lcall
pop
dec
or
loop
xor
lods
cmc
fucomi
pusha
pop
out
xchg
imull
xchg
sbb
pmulhrw
or
sbb
int3
sbb
or
xchg
mov
js
rcr
into
mov
shll
hlt
inc
cmp
sbbl
fimuls
fildll
push
mov
jbe
add
sub
pop
aam
xchg
pop
pop
cmp
mov
test
fwait
sahf
add
insl
sub
cmpsl
push
pop
push
jmp
mov
insl
adc
in
jp
mov
dec
push
pop
jae
xor
mov
xor
ja
fldenv
rcll
or
jg
scas
push
out
xor
inc
lea
and
sahf
push
xchg
popf
lea
xlat
mov
push
add
and
outsl
add
adc
mov
imul
sub
outsl
ss
aam
jno
or
lahf
in
xor
xor
push
or
xchg
stos
aam
fsubs
std
ja
imul
ds
inc
jecxz
movsl
sub
lret
enter
push
ljmp
call
outsb
js
xchg
mov
addr16
or
nop
out
xchg
incb
xlat
or
inc
push
push
pop
fsubr
sarb
pop
jge
pop
or
lea
shll
movsl
mov
adc
adc
fs
adc
cmp
jecxz
add
pop
add
dec
std
inc
sub
ds
add
pop
push
ret
jp
mov
sub
xor
push
test
adc
out
pop
jae
aas
fstpt
cmpl
mov
and
out
add
sub
out
fdivr
mov
shll
push
insl
sub
xchg
adc
ds
aaa
cmp
mov
mov
adc
insl
pop
push
iret
dec
cmpsl
dec
int3
fsts
cli
jl
mov
mov
fidivs
arpl
notl
out
fldenv
or
inc
stc
shlb
sbb
lds
jmp
insb
outsb
movsl
mov
pop
push
xchg
out
mov
push
or
aas
nop
sub
imul
ds
push
pop
pop
pop
sub
scas
lret
lahf
mov
test
repz
or
pop
xchg
mov
add
in
sub
lods
push
bound
jl
lods
sbb
xchg
sbb
push
adc
mov
outsl
loopne
pop
sbb
mov
in
fwait
and
jbe
cli
sub
mov
das
not
popa
and
cmpb
iret
lods
shll
repz
fldcw
push
sub
mov
jl
aas
outsl
rcrb
add
lea
or
addl
push
testl
inc
cmpsl
xchg
adc
inc
mov
cmp
adcb
or
cmp
std
xchg
daa
sbbl
and
aas
dec
ljmp
jl
mov
adc
push
jmp
iret
popf
pop
and
sub
sub
out
jl
dec
dec
cmc
or
inc
xor
cmp
push
jp
add
cmp
icebp
lods
push
mov
inc
pop
pop
stc
pusha
sub
out
orb
xchg
adc
outsl
out
xchg
pop
jecxz
fisttps
jmp
aad
jge
in
jns
sti
out
push
cs
xchg
sbb
jmp
xor
jle
movsl
push
lods
cltd
xchg
add
aaa
jnp
cltd
cmpsb
cwtl
bound
cmp
adc
inc
loope
stos
cmc
lds
xchg
popf
push
push
pushf
je
loop
cmpsl
mov
enter
cmp
push
adc
repz
icebp
sbb
push
out
xor
pop
sarb
and
sahf
mov
imul
or
popa
pmaxub
inc
mov
mov
ret
out
push
test
push
in
popa
xchg
ficomps
sbb
mov
outsl
pop
cmpsb
ja
loop
lret
int3
dec
fadds
in
mov
stos
lods
pushl
enter
pop
mov
and
push
mov
cmc
lea
pop
out
dec
mov
inc
test
icebp
and
xorl
sarb
jle
arpl
inc
fldl
fstl
sub
imul
mov
cmp
out
add
shrl
iret
rep
mov
or
in
adc
mov
pop
ret
sbb
aad
leave
stos
or
mov
push
lcall
gs
jne
pop
inc
cmp
ret
mov
test
test
lret
out
cmp
mov
dec
push
imul
adc
sbb
lods
bound
pop
sbb
sbb
mov
dec
bound
stos
adc
ret
fisttpl
add
push
jp
insl
cmp
fucompp
aad
add
xlat
ret
adc
stc
daa
xor
jne
add
inc
adc
out
inc
mov
mov
rorl
xor
sub
push
popa
sbb
lods
fs
fstl
scas
xorl
test
outsb
jno
pop
idiv
mov
xchg
mov
sbb
int3
adc
cmp
divl
cld
cld
fstpl
in
xchg
push
adc
in
aaa
in
fiaddl
sahf
adc
mov
push
push
sub
mov
mov
stc
cmc
aaa
and
test
and
add
fwait
in
out
or
sub
mov
jno
outsb
pop
lods
add
push
jo
loopne
bound
mov
mov
mov
mov
stc
ficoms
jae
out
jg
in
xchg
mov
xor
and
add
mov
push
mov
insl
jle
sbb
jb
dec
xor
lcall
repnz
push
pop
into
shl
cld
or
rorl
dec
sub
cmp
and
dec
mov
cmp
lods
adc
dec
jle
dec
sub
add
push
sbb
or
nop
cwtl
sub
repz
cmp
movsb
sub
add
or
in
inc
add
sbb
cmpsb
mov
jae
cld
xor
jo
repz
pushf
xchg
jo
xchg
loope
jne
imul
jbe
and
pop
jl
mov
aas
gs
or
pop
xor
xor
gs
jae
dec
push
mov
pop
xlat
and
aam
cld
add
jge
test
mov
jge
mov
cmc
or
dec
int3
and
cmc
or
daa
pop
test
xor
inc
popa
subl
cmp
rorl
xchg
enter
add
inc
fimull
jo
cs
jo
arpl
mov
int
jae
aam
pop
and
add
pop
cmc
sbb
mov
sbb
jb
mov
xchg
jno
dec
mov
sbb
aam
lods
jae
mov
pop
add
adc
mov
push
pop
lods
add
insl
nop
mov
lea
pop
arpl
loopne
negb
rcl
pop
and
sti
lret
cmpsb
mov
gs
xor
push
push
mov
lock
wrmsr
xchg
mov
or
xor
adc
movl
sbb
es
test
lds
mov
daa
js
jae
inc
test
outsb
add
aam
jmp
adc
cs
push
add
jle
dec
loope
jecxz
outsl
xor
lods
das
loope
mov
in
inc
inc
mov
clc
jns
je
or
sbb
or
cld
outsl
lock
std
sub
jnp
addr16
fwait
jae
fwait
mov
loopne
imul
imul
mov
add
movsb
pop
cmpsb
jle
ror
inc
xchg
aas
ret
sub
hlt
mov
inc
xor
mov
or
sbb
cmpsl
mov
pop
loope
push
push
out
aaa
pop
insb
roll
adc
loopne
pop
mov
divb
add
inc
mov
popf
inc
fiadds
adc
lret
mov
leave
fwait
mov
xorb
jae
mov
lds
pop
je
or
js
aaa
test
adc
pop
push
lods
clc
mov
inc
sbb
aaa
pop
cmp
addr16
popa
and
mov
push
pop
jge
out
lahf
xor
outsb
fsubrs
das
jmp
jo
add
or
adc
aaa
xchg
xchg
jmp
test
push
mov
mov
jno
push
mov
mov
stos
movsl
xchg
inc
ja
icebp
stos
jnp
xor
in
mov
outsl
push
sub
push
jbe
mov
jmp
and
orb
dec
mov
cmc
mov
outsl
jle
cmp
mov
jno
mov
test
cmpsl
repnz
or
and
imul
rorb
out
add
jle
cmp
aad
lods
adc
cmp
clc
and
das
mov
ss
mov
mov
xchg
shll
shr
xchg
out
sbb
sbb
addl
test
into
cmpsb
mov
call
mov
and
mov
lret
jp
mov
xor
add
sbb
lret
push
dec
sbb
rorb
jle
out
roll
inc
push
mov
fnstcw
cmp
push
push
fs
hlt
pop
pop
pop
inc
mov
cmpb
inc
repnz
cs
add
ret
faddl
mov
inc
xchg
xor
xor
inc
stos
jb
testb
mov
repnz
mov
mov
jns
cs
testl
imul
inc
jnp
adc
jbe
push
and
mov
or
pushf
xchg
mov
iret
jmp
in
and
in
or
sbb
outsl
mov
rcr
and
fmul
ret
lret
nop
notb
cmpsb
xor
repz
sub
sub
std
dec
icebp
repnz
jecxz
cmp
sbb
xchg
add
loop
repnz
aam
lahf
pusha
inc
inc
ljmp
pop
inc
arpl
mov
adc
push
in
pop
add
fs
inc
lahf
xchg
movsl
dec
rcr
xor
aas
aas
std
ret
push
fidivrl
ja
popa
push
mov
jbe
data16
jne
pop
pop
jae
inc
sbbl
and
inc
xchg
test
test
push
adc
mov
inc
rol
xchg
inc
pushf
mov
xor
or
mov
rcrl
jb
mov
cmp
mov
popa
sbb
ja
lret
adc
iret
lods
scas
push
cld
inc
mov
push
xchg
sahf
and
xchg
xchg
push
push
xchg
sub
or
mov
arpl
lea
incb
dec
mov
movsl
xchg
pop
inc
ret
aad
inc
jecxz
fsubp
in
jge
stos
loop
cld
push
pop
xchg
mov
int
mov
sbb
repz
add
enter
insb
inc
movsl
movsb
push
pop
jo
lods
movsb
dec
outsl
lfs
push
jno
mov
jmp
hlt
jo
lds
mov
jo
push
jmp
sub
aaa
xor
mov
jg
aas
push
mov
push
stos
leave
enter
and
rcl
dec
aas
cmp
xchg
imull
pushf
orb
mov
dec
or
hlt
insb
pop
jecxz
iret
mov
adc
xchg
xor
out
sbb
into
repnz
xchg
into
mov
jge
dec
xchg
mov
popf
mov
push
cmovle
jmp
sub
movsl
hlt
rorl
shll
inc
dec
adc
dec
loopne
dec
aaa
adc
mov
lcall
mov
pop
fwait
pop
shlb
fs
push
xor
ss
mov
xchg
movsb
push
mov
jmp
cmpl
jmp
sub
dec
mov
and
cmp
add
jb
insb
pop
iret
cwtl
pop
sub
mov
jbe
sub
ss
and
xchg
aaa
in
andb
cltd
outsl
cs
loopne
jb
mov
jnp
push
lea
ds
out
test
clc
sub
imul
rolb
or
rcll
dec
xor
gs
pop
sahf
push
pusha
lock
cmc
mov
xchg
cltd
push
push
std
mov
push
std
outsb
lds
fldt
sub
roll
out
adc
push
sti
lahf
adc
into
jne
les
mov
jne
push
mov
push
popf
jbe
sbb
pop
xchg
xchg
inc
rclb
push
ja
xor
popa
mov
scas
std
push
out
dec
jns
outsb
jno
mov
out
cli
jg
outsb
adc
xor
sub
ret
cmp
movsb
mov
addb
imul
iret
or
ss
fwait
pop
adc
dec
loopne
out
loop
aam
jecxz
jns
push
pop
insl
pop
mov
cmpsl
push
mov
mov
iret
jb
fbld
mov
push
mov
push
ret
dec
jg
or
dec
xor
xor
pop
pop
lahf
aad
jmp
into
mov
fsub
cmc
imul
cs
adcl
add
fsubrp
push
js
cltd
lret
add
loop,pt
ljmp
lahf
pop
je
loop
sbbl
pop
ljmp
mov
notl
pop
das
mov
mov
aaa
xor
ficoml
mov
filds
dec
and
outsb
movsb
dec
jae
aad
push
testb
mov
cli
bound
cmp
aam
xchg
les
lea
xchg
pop
int
mov
lret
mov
inc
notb
and
hlt
add
and
pop
out
sub
push
leave
daa
sbb
test
or
pop
pop
mov
insl
and
popa
jp
lret
and
mov
jno
cmp
gs
pop
xchg
cmp
jno
dec
loop
and
popf
rcr
xor
mov
stos
enter
adc
clc
daa
lcall
leave
cmp
movsl
mov
dec
xor
incl
iret
sti
and
in
movsb
mov
or
nop
push
mov
cmpsb
fidivrl
insl
and
pop
pop
enter
sahf
mov
xor
pop
mov
rcll
dec
nop
dec
pop
mov
mov
std
nop
enter
pop
xor
aas
fwait
cmp
outsb
mov
add
xchg
loop
cmp
sahf
push
inc
sarl
pushf
cwtl
adc
test
cmp
into
and
std
lods
or
into
jl
push
insb
add
je
int
adc
push
pop
pop
es
mov
push
int
pop
in
cmp
fcompl
xchg
shrb
pop
jl
roll
mov
jg
xchg
sub
mov
and
dec
mov
aam
loop
or
xchg
imul
dec
leave
jne
in
and
aaa
sub
repz
and
mov
xchg
outsl
insl
xchg
lods
push
adc
lock
cmpsl
stc
idivb
jle
aas
add
call
testb
mov
in
movsb
fstps
pushf
out
nop
push
or
ror
rcrb
test
sbb
loope
and
push
cmp
and
fiaddl
cmpsb
add
int3
dec
mov
in
jecxz
loop
sbb
inc
movsl
addr16
out
push
dec
shrb
test
imulb
test
fidivs
mov
imul
insl
push
and
outsl
mov
fdivrl
dec
mov
pop
icebp
cmp
out
cmc
jno
pop
aam
pop
out
fcmove
fidivl
push
ds
sti
mov
fimull
jb
mov
ds
jno
cs
hlt
pop
cmpsb
popa
stos
sub
movsl
test
test
je
cmp
orb
mov
into
lcall
call
loop
xchg
popf
sub
mov
inc
mov
inc
in
pop
inc
das
mov
sahf
cli
mov
mull
call
cmp
mov
inc
into
sbb
push
and
mov
stos
push
movsb
mov
mov
xlat
sub
clc
mov
and
or
lds
ljmp
ret
sbb
adc
sbb
mov
test
addr16
test
inc
push
push
iret
xor
lahf
mov
inc
dec
adc
roll
jne
sbb
insl
rcrl
int
sub
sub
loope
std
shll
xorl
or
jmp
sub
ds
mov
out
dec
cmc
shll
lock
mov
inc
dec
xchg
ljmp
mov
pop
lret
or
faddl
fwait
mov
jl
lds
jg
xor
nop
pextrw
mov
sbb
cld
lret
fsubrl
nop
cmp
ss
cmp
push
fadds
jp
or
xchg
push
mov
sti
sub
sub
xchg
cli
test
cmp
push
test
es
je
mov
adc
popa
andl
mov
add
sub
rorb
dec
adc
mov
stos
adc
cmp
push
arpl
in
adc
or
mov
sti
or
inc
xchg
addr16
test
cwtl
stos
add
roll
push
xchg
bound
sbb
imul
stos
es
cmp
xor
cmpsl
mov
pop
pop
or
stos
je
mov
test
idivb
xchg
pop
mov
jp
mov
and
outsb
dec
movsl
icebp
or
insb
mov
mov
mov
pop
insl
sarb
sbb
and
imul
jno
inc
in
sbb
xchg
sti
xchg
ret
stos
sbb
mov
sarl
mov
mov
mov
movsb
push
rcrl
sub
mov
or
test
out
rorl
ljmp
mov
sarl
leave
cltd
arpl
adcl
jmp
test
cld
inc
or
jns
and
sub
lahf
shlb
insl
mov
cmp
leave
dec
cltd
addr16
jecxz
dec
push
and
pushf
cmpsb
sbb
cmpb
mov
ret
stos
inc
scas
xchg
adc
pushf
and
fistl
lret
test
ret
jns
push
arpl
pop
xchg
lea
xchg
wbinvd
jbe
lea
ja
mov
lahf
lcall
test
mov
leave
mov
out
cmp
dec
movsl
mov
ja
push
orb
push
daa
mov
imul
lods
std
jb
xor
and
rol
sub
popa
cmp
jg
sub
push
fwait
mov
push
push
sbb
or
dec
xchg
add
fistps
cmp
dec
cmpsl
add
xchg
pop
mov
mov
adc
aad
mov
jecxz
std
pop
push
lea
mov
push
scas
test
mov
xchg
pop
and
and
int3
xchg
or
pop
leave
add
xchg
xchg
and
inc
fs
mov
ja
sub
sub
je
daa
jae
lahf
inc
insb
enter
sub
fimuls
imul
test
adc
dec
icebp
cltd
repz
in
test
int3
and
mov
pop
mov
jns
out
daa
daa
xor
cltd
sbb
lret
insl
mov
jle
push
cld
mov
mov
push
xchg
clc
stos
inc
aam
xchg
xchg
mov
imul
loop
xor
call
lods
stc
sub
mov
jp
outsb
xor
mov
push
xchg
repz
scas
loope
adc
imul
imul
lcall
stos
jno
or
out
push
sbb
enter
insb
jmp
aam
lret
cld
iret
and
lods
cmp
out
xor
addr16
loopne
or
loop
ret
jmpw
mov
mov
xchg
sbb
nop
outsl
outsb
je
lea
sahf
clc
xchg
enter
je
aam
sub
outsl
popa
add
or
fildl
js
mov
dec
mov
lock
shlb
out
std
mov
dec
pushf
push
ds
jge
dec
adc
mov
sbb
xchg
xchg
movsb
pop
fistpl
xchg
in
push
mov
xchg
jl
pop
xor
sbbb
sub
repz
cmp
or
sub
bound
mov
dec
xchg
sbb
adc
pop
std
pop
lods
jns
sahf
cmp
ret
enter
inc
addb
cmpsl
sub
sahf
sbb
mov
add
jnp
xchg
js
out
inc
sbb
aaa
dec
lcall
clc
jmp
lods
jbe
push
xor
int
cmc
sbb
idivl
mov
mov
mov
push
dec
adc
outsb
xor
cmp
aam
and
adc
in
outsb
mov
cwtl
sub
out
leave
fsubrs
daa
ja
sub
pop
insl
xchg
cwtl
xor
bound
repnz
rcrl
jl
insb
jle
sbbb
mov
push
test
enter
scas
iret
das
dec
inc
pop
add
pop
daa
mov
mov
stc
and
pop
sti
movsl
pop
mov
dec
fimuls
mov
jg
pop
cwtl
jae
mov
push
xor
jle
ret
js
fwait
arpl
in
mov
nop
push
scas
les
push
mov
icebp
sti
fistps
popf
sub
sbb
push
imull
sahf
gs
jne
iret
push
int3
jmp
jp
pop
cmp
mov
test
lods
int
mov
out
or
inc
ret
push
test
push
fcmovnu
and
out
add
into
inc
cmp
inc
lock
cltd
mov
inc
aad
leave
push
pop
popa
push
arpl
mov
sbb
adc
push
je
mov
fs
addr16
push
or
mov
adc
insb
jg
and
push
xor
mov
clc
shlb
xor
faddl
shlb
sbb
and
push
pinsrw
mov
repnz
xchg
mov
fbld
xor
mov
jg
push
mov
mov
arpl
fdivs
decb
pop
daa
lods
sbb
inc
jmp
mov
sbb
xor
mov
xchg
mov
and
add
push
push
xor
mov
sub
mov
arpl
mov
daa
bound
aad
push
in
adc
inc
pop
pushf
or
scas
aas
add
dec
dec
lret
and
ret
out
shlb
in
mov
je
dec
idivl
add
int
adc
jmp
xchg
std
adcb
pop
out
pop
pop
push
xchg
and
or
stos
insl
push
sbb
int3
cmp
in
pop
xor
mov
adc
sahf
pop
lcall
clc
ss
int
lock
shrl
fldt
stos
fdivrl
adc
cmpl
popa
gs
fsubrp
sarl
pop
jge
test
xchg
xchg
stos
enter
fldenv
add
pop
mov
xchg
push
pop
xchg
pop
mov
xchg
add
imul
adc
hlt
out
dec
cltd
jle
in
decb
jmp
cmpsl
and
dec
add
pop
push
jl
add
sbb
imul
and
mov
scas
dec
movsb
inc
stc
push
dec
jmp
frstor
jno
add
lods
cmp
push
int3
jle
ljmp
push
dec
das
push
adc
push
stos
hlt
pop
sbb
jg
loope
jb
es
in
xchg
aaa
fwait
pop
xchg
pop
or
daa
mov
imul
insb
adc
jns
fimuls
mov
aas
xchg
mov
jb
jecxz
test
cmp
scas
jle
sarb
inc
test
mov
sub
outsb
cmp
xchg
jno
push
insl
dec
fmuls
or
dec
sbb
jne
imul
fidivs
jae
test
and
jg
inc
push
ret
sub
or
je
add
xchg
mov
sbb
mov
leave
lret
dec
or
pop
movsb
or
push
fistl
xor
roll
push
add
scas
test
loope
pushf
cld
mov
xchg
and
sbb
and
stos
lea
in
fstpt
popf
in
aaa
pop
add
lret
xorl
test
aam
and
sbb
ljmp
inc
imul
loopne
mov
arpl
mov
jnp
xlat
pop
adc
fwait
pop
pop
pop
cmpsl
sub
popa
loopne
jmp
in
pop
sbb
aas
inc
mov
adc
push
popa
cmpsl
shll
pop
mov
sbb
rorl
stos
repnz
mov
add
rcrl
pop
loopne
add
adc
test
jno
push
xchg
jns
sub
mov
xchg
sub
cld
adc
jle
cmc
dec
inc
nop
mov
cmp
pop
xchg
and
mov
sub
rclb
lret
cwtl
and
mov
cmp
movsb
lahf
pop
and
mov
shlb
bound
aam
mov
or
add
jb
adcl
stos
cwtl
mov
jmp
addb
adc
or
xchg
dec
jbe
pop
clc
adc
push
push
dec
lea
xor
cld
test
dec
jg
jmp
add
or
adc
sarb
aaa
les
dec
imul
lock
scas
cmpsb
daa
out
mov
repz
xchg
add
jecxz
pushf
pop
inc
add
jne
outsb
sbb
push
lds
aas
dec
mov
shlb
push
and
push
pop
outsl
cmp
or
or
leave
scas
shlb
sub
in
mov
clc
lcall
out
inc
lods
popf
mov
sub
outsb
scas
cmpsl
mov
iret
pop
out
mov
add
scas
add
ljmp
imul
pop
shr
movsb
daa
repnz
cmp
dec
mov
mov
clc
mov
mov
pop
mov
lahf
aaa
pop
push
arpl
js
cmp
ret
hlt
scas
xor
enter
mov
push
cmp
pop
lods
movsb
lcall
xor
mov
ljmp
lods
daa
faddl
add
rcrl
ds
mov
das
or
loop
push
outsl
adc
loopne
pop
push
mov
mov
lahf
sub
arpl
sub
push
inc
outsb
mov
inc
pop
mov
xchg
pop
addr16
cs
push
pop
divl
cmp
popa
xor
xchg
lret
xor
mov
mov
sub
int
sbb
sub
test
mov
mov
lcall
sub
repz
adc
pop
and
pop
mov
or
filds
faddl
mov
xchg
cld
inc
push
xchg
pop
xor
aas
mov
clc
popf
jne
aad
xchg
loopne
rcll
mov
jp
mov
and
pop
mov
rclb
fnstsw
mov
lret
mov
cmp
and
icebp
jp
dec
cmc
mov
in
pop
xlat
cli
repnz
pop
jns
sahf
filds
int
je
call
mov
or
pop
pusha
scas
sbb
mov
cmp
incl
test
jae
cwtl
mov
xor
test
jp
aad
push
jl
and
orl
dec
cmp
test
inc
xchg
ret
icebp
mov
mov
jg
sti
pop
dec
mov
mov
loope
cli
movsb
and
mov
and
in
loopne
mov
pushf
sti
jne
lods
mov
scas
adc
dec
iret
cli
ljmp
push
pop
mov
dec
jb,pn
pop
lock
scas
fsubl
cltd
hlt
int
jle
pop
ret
hlt
movl
xlat
stc
mov
mov
icebp
pop
loopne
xchg
cwtl
sbb
aam
xor
inc
sbb
pop
cli
push
shll
sub
mov
and
aas
or
sub
jnp
daa
xchg
jno
mov
dec
mov
jge
fwait
pop
stos
movsb
mov
mov
or
and
clc
add
and
inc
inc
out
out
jl
loope
dec
aaa
pop
hlt
clc
mov
and
out
ljmp
test
push
xor
subl
jns
sub
and
mov
addl
push
mov
aaa
jle
movsl
mov
push
into
bound
jl
and
mov
push
xchg
jge
lea
scas
pop
and
enter
lea
mov
filds
jbe
fnstsw
and
testb
cs
lcall
or
and
xor
loop
jne
into
xchg
push
jl
insl
inc
inc
xor
jle
sub
test
adc
pop
fnstcw
and
popa
sbb
mov
and
movsb
pop
out
cmp
inc
in
and
xchg
cmc
push
add
stc
in
dec
loopne
pushl
or
mov
sub
shll
nop
xor
sar
adc
and
jl
mov
and
jns
notb
fldl
adc
dec
xchg
psubd
faddl
or
and
push
jb
shll
adc
mov
push
je
mov
cwtl
dec
fisubl
fildl
bound
mov
out
inc
xchg
cwtl
or
jmp
or
mov
and
arpl
or
int
sub
cmpsb
pop
adc
sub
mov
pop
mov
sbb
data16
ficomps
xor
nop
adcl
pop
into
jge
jb
dec
inc
int3
insb
call
mov
test
or
xchg
mov
xchg
pop
jo
js
mov
daa
xchg
mov
insl
dec
sub
ret
or
daa
enter
push
test
jg
jmp
mov
movb
dec
mov
shll
cmp
mov
test
hlt
mov
mov
push
es
or
sub
mov
ret
mov
or
and
in
push
lods
daa
mov
insl
repz
fs
pop
aad
mov
jne
lcall
adc
imul
call
add
out
out
into
jbe
cmp
xchg
data16
cmpb
fistpll
dec
mov
ja
mov
pop
lcall
lds
and
sbb
fiadds
xchg
sub
fbld
xor
ret
jo
enter
into
jecxz
mov
mov
jbe
mov
add
or
and
mov
cli
in
or
xor
int3
lret
nop
mov
pop
xchg
aam
sti
mov
aaa
outsl
mov
push
push
stos
outsb
mov
out
xchg
imul
or
cmpb
in
fcompl
fsubl
add
ret
mov
rolb
scas
sub
clc
pop
lods
sub
pop
jg
push
rol
jp
push
mov
add
fnstsw
push
ljmp
mov
orb
jb
xor
aad
sahf
sub
out
in
pop
arpl
aam
out
mov
adc
ffreep
jbe
sqrtps
xchg
cmp
rorb
inc
testl
in
push
xchg
xor
pop
push
in
xor
andl
dec
mov
into
shrb
push
xchg
jno
xor
shll
es
and
mov
repz
mov
xor
in
imul
lcall
add
xlat
pop
inc
xor
xor
test
mov
push
dec
push
jo
and
cmp
cmp
lret
sub
dec
xchg
notl
dec
sti
aad
cmpsb
pop
jae
ret
mov
inc
rcll
ljmp
mov
dec
mov
les
loop
or
nop
xchg
mov
adc
cld
mov
jle
fisttpl
pop
aas
arpl
push
popf
rorb
inc
sub
or
xchg
inc
jmp
movsl
sub
mov
mov
push
gs
in
inc
xchg
sbb
repz
mov
loope
dec
stos
mov
xchg
add
fiaddl
mov
adc
push
cmp
jne
cwtl
loope
xchg
pop
xlat
lahf
ficompl
sbb
stc
es
pop
sub
ja
push
sbb
int
pop
jne
sbb
mov
lret
ljmp
mov
or
sbb
mov
xor
pop
idivb
bound
sbb
cltd
lods
xor
lds
loopne
or
imul
dec
xor
insb
pop
or
push
ja
xchg
xchg
lret
sub
adc
dec
or
adc
cmpsl
add
adc
es
push
mov
jae
movsb
movsb
mov
mov
les
xor
pop
dec
stos
je
inc
les
sbb
push
mov
xor
sahf
pusha
cld
lds
dec
dec
adc
mov
out
or
sub
lods
mov
jno
xor
repz
mov
adc
hlt
or
adc
das
lcall
push
aam
push
pop
cmp
sub
test
pop
pop
test
adc
pop
jns
dec
push
or
je
fisttpll
aas
pop
jb
jne
inc
sub
xchg
cltd
pop
cmc
mov
hlt
sbb
faddl
add
dec
mov
jg
aas
xchg
test
shlb
jl
push
cmp
xchg
xchg
cwtl
add
sbb
dec
movsb
mov
clc
push
stos
int3
mov
sub
fwait
add
cmp
test
stc
sub
jb
mov
push
dec
dec
xchg
icebp
stos
jo
frstor
and
loop
repz
iret
push
inc
mov
mov
mov
and
insl
push
push
mov
add
xor
mov
adc
push
fwait
push
mov
stos
jbe
in
dec
rcll
out
jo
dec
fcmovu
adc
lock
adc
dec
sub
nop
xchg
pop
mov
xor
sbb
push
pop
fs
sbb
jne
push
push
popf
movsl
out
jae
in
stos
push
mov
sub
mov
sub
adc
inc
xor
inc
popa
jl
js
cmpsl
or
loope
add
cmp
test
cli
jle
and
push
xlat
dec
and
loope
sbb
adc
popl
cli
pop
push
sub
dec
xor
loope
lock
mov
sbb
dec
out
add
or
lret
push
cmp
pop
aaa
nopl
jbe
ja
into
imul
add
adc
add
lret
or
test
je
in
mov
lods
fimuls
push
loope
xor
clc
push
dec
pushf
pop
sbbl
jg
mov
lret
shrb
jno
xor
movsb
hlt
std
cld
and
sub
push
or
in
in
mov
das
loop
xchg
divl
pop
sbb
mov
es
pushl
aad
mov
into
push
xor
pop
stc
inc
arpl
adc
loop
imul
or
xchg
sbb
loop
nop
mov
bound
fists
out
jecxz
dec
and
dec
cmp
test
adcl
ret
adc
mov
shrb
scas
inc
pusha
dec
push
insl
daa
adc
or
sbbb
mov
jecxz
xor
leave
jbe
jp
rol
push
push
insl
dec
mov
pop
daa
jbe
iret
jae
or
cmp
mov
mov
dec
or
push
mov
mov
in
std
cwtl
sub
enter
mov
leave
js
dec
pslld
xlat
jmp
sub
fcomps
push
xlat
jne
daa
fistpll
notb
lods
daa
lahf
lret
clc
mov
xchg
pop
add
mov
add
arpl
add
std
cmpsl
sub
dec
and
mov
pop
bound
out
call
push
jne
dec
inc
inc
hlt
cmpb
ret
mov
jae
mov
xchg
rcrb
xchg
add
mov
aam
mov
cmpsl
xchg
fisttps
xor
sbb
cmpsl
cmpsb
mov
fisttpl
add
pop
aaa
push
das
or
sbb
and
ss
stos
mov
lcall
out
jp
das
lret
mov
jmp
push
mov
aaa
out
bound
or
sub
fistl
out
int3
clc
add
mov
adc
xchg
adc
sub
dec
test
inc
aas
mul
adc
jle
ret
jne
sti
pop
xchg
sbb
sub
mov
bound
mov
jmp
inc
lahf
cmpl
and
pop
cmp
mov
in
addl
push
mov
mov
fwait
arpl
adc
js
aaa
scas
fcomip
stc
in
test
andb
adc
add
xor
inc
xchg
ljmp
jmp
or
popa
cmc
or
cmc
shr
stos
xchg
jne
cmc
rolb
out
pop
arpl
into
idiv
aas
cmp
push
testb
rcrl
out
pop
adcl
jno
enter
jp
dec
sahf
js
jg
js
sarl
aaa
hlt
cld
in
int3
adc
fiadds
jo
xchg
xchg
jnp
pushf
adc
dec
mov
movsl
outsb
push
out
inc
rolb
cwtl
mov
out
std
test
aam
out
jne
cmc
in
xor
leave
imul
out
int
shrl
xor
dec
mov
imul
sub
subl
xchg
scas
dec
addr16
scas
and
data16
add
add
movsl
mov
int
add
mov
rorb
or
inc
push
xchg
mov
adc
ss
cmpsb
push
ja
fists
in
push
mov
pop
xchg
sti
stos
or
cmp
xchg
addr16
pop
in
inc
loopne
daa
push
adc
pop
lock
mov
addb
ss
loop
addr16
icebp
into
jle
xlat
xor
sbb
jmp
mov
mov
or
icebp
jb
adc
lods
dec
ret
or
je
scas
adc
adc
sbb
sub
movsl
shlb
aas
or
in
mov
cwtl
cmc
bound
stos
cld
flds
aaa
sbb
inc
lea
xlat
sbb
ret
xchg
xchg
pushl
xchg
jmp
aam
cltd
mov
cwtl
mov
xor
push
adcb
addr16
dec
lcall
dec
lret
sub
push
add
push
and
jecxz
or
cmp
in
in
sbb
jne
jo
mov
cmp
in
and
dec
ret
cmp
jp
gs
in
mov
jns
shrb
mov
add
mov
push
cmp
nop
push
pusha
cmp
lcall
pushf
pusha
and
sub
add
out
scas
and
xor
lahf
sub
cmp
jns
inc
shrl
and
sub
sti
inc
fsubs
test
add
mov
ss
adc
mov
add
hlt
push
adc
fidivs
xlat
decb
cmp
adc
cmp
int3
rorb
xor
adc
js
push
jb
mov
test
sub
nop
sti
bound
mov
cmp
jecxz
outsl
xor
out
lahf
leave
out
sahf
mov
adc
pop
fdivrl
xchg
mov
mov
xchg
or
leave
mov
test
pop
add
mov
fstpl
orl
les
enter
sbb
cmp
je
aas
rcrb
pop
sub
shl
cmpl
or
cmpsl
jo
fwait
mov
jb
dec
shlb
mov
sub
adc
adc
xchg
jmp
mov
xchg
lock
cmp
add
and
xchg
push
mov
stos
dec
mov
xchg
idivl
jo
outsb
and
jl
adc
push
lods
ljmp
pop
popf
xor
adc
sub
or
adc
mov
stos
adc
aas
nop
outsb
insb
in
and
mov
pushf
xchg
loop
fdivrs
jne
iret
mov
or
jno
fiadds
lods
push
jbe
pop
lods
dec
jmp
ret
dec
push
mov
sahf
inc
pop
lahf
sbb
fsts
rorl
test
push
cmp
mov
inc
cltd
out
mov
mov
mov
outsb
fs
push
in
xchg
and
xchg
adc
pusha
insb
lock
in
imul
mov
adc
stc
jle
xchg
inc
mov
mov
aaa
jl
or
jmp
nop
cmc
inc
fcmovb
fldl
inc
jb
mov
mov
aam
mov
mov
neg
out
push
out
dec
test
pop
out
jecxz
inc
cmp
orb
or
hlt
pusha
mov
fldcw
pop
mov
sbb
mov
shrb
adc
jmp
aam
gs
imul
cmp
pop
ss
cmp
add
or
js
inc
repnz
cmp
and
push
xchg
jmp
jmp
movsl
dec
pop
out
add
das
xor
insb
or
test
in
fstl
add
add
mov
inc
imul
add
jae
lea
xor
fcomps
dec
xchg
hlt
rorb
pop
dec
inc
dec
arpl
in
jp
jno
dec
cmc
addl
jns
xchg
sbb
mov
out
ret
fldl
adc
imul
data16
push
aad
jne
ds
cmp
ret
inc
data16
xchg
movsl
lcall
lods
dec
mov
mov
pop
stos
mov
dec
xchg
sbb
sti
stos
cmp
mov
xchg
xchg
mov
ljmp
movsl
pop
in
loope
cmpsb
inc
scas
imul
push
jmp
cli
lods
xor
and
andl
jnp
jo
ds
mov
fistl
arpl
rorl
mul
ja
mov
in
and
daa
and
mov
push
fsubl
inc
mov
and
inc
clc
shrl
mov
stos
shl
rolb
add
sbb
or
adc
jae
mov
pop
arpl
cmp
ljmp
jecxz
subl
jmp
sbb
sbb
mov
lret
xchg
sbb
lahf
cmp
cld
fwait
inc
push
enter
ficoms
push
loop
stc
rcrl
sarl
inc
xor
pop
mov
jle
inc
into
add
movsl
pop
rcrl
int3
bound
cmpsl
lcall
push
dec
add
popf
outsl
lea
mov
xchg
xor
js,pt
repz
xchg
mov
or
push
jb
je
mov
inc
popa
test
mov
lock
fiaddl
adc
jno
push
filds
and
inc
repnz
sub
cld
mov
dec
mov
sbb
jl
aam
mov
xor
pop
pop
push
mov
mov
jg
add
aam
rol
hlt
leave
fistpll
pop
mov
inc
or
sbb
mov
push
xchg
and
inc
into
inc
push
and
mov
testb
lods
or
aas
cmpl
ljmp
test
sarb
xchg
add
cli
jmp
dec
out
rcl
cld
xor
clc
xchg
jecxz
push
shll
mov
inc
dec
mull
cld
cs
dec
lock
dec
stos
mov
rcrb
pop
popa
popa
pop
pusha
scas
sub
and
pop
mov
mov
das
mov
jge
sbb
mov
push
ljmp
adc
xor
stos
mov
push
pop
andb
daa
rorb
adc
mov
xor
and
mov
mov
push
lods
xchg
dec
push
inc
mov
std
int3
lods
dec
outsl
push
inc
iret
push
adc
mov
lea
push
inc
push
push
loopne
mov
sbb
sub
dec
pop
dec
xor
test
jo
xor
movsl
xchg
out
cmp
movsb
test
loope
sub
pop
and
xlat
data16
jge
outsb
mov
loopne
movsl
mov
dec
pop
xchg
lahf
lea
xor
adcl
sbb
jmp
inc
inc
mov
jle
fcom
pop
test
pushf
popf
aaa
mov
mov
outsl
enter
sub
repnz
in
sub
jl
mov
daa
and
arpl
adc
insb
pusha
cs
out
mov
mov
in
in
sahf
pop
lahf
push
adc
push
xor
mov
scas
aad
mov
inc
pop
xchg
bound
pushf
test
addr16
jmp
jb
data16
cwtl
dec
repz
aad
push
mov
xchg
sub
push
xor
ret
loop
movsl
out
pop
push
mov
jg
into
sti
xor
pusha
push
adc
cmp
mov
sbb
rcll
mov
mov
lcall
aad
mov
push
jp
punpckldq
aad
xchg
enter
test
lret
std
cld
push
iret
push
lcall
int
cmp
jo
push
mov
lods
dec
xchg
bound
xchg
xor
lcall
aaa
or
in
inc
aaa
test
pop
jg
cltd
mov
mov
xchg
or
nop
xchg
and
add
fdiv
and
cltd
repz
push
cwtl
dec
sub
loope
callw
xchg
push
stos
sub
dec
les
sbb
inc
sbb
fld
dec
lret
ror
test
ja
mov
xchg
cmp
add
daa
imul
aad
lret
cmpsb
jmp
mov
mov
je
and
stos
aad
ja
int
push
adc
adc
jns
mov
jnp
mov
dec
xchg
lods
das
dec
inc
xor
xchg
xchg
add
add
mov
push
enter
pusha
fisubl
mov
jecxz
ja
fadd
ja
jb
fisttps
cmp
push
add
inc
popf
xchg
xor
mulb
add
enter
mov
push
cmp
sbb
aad
dec
lds
jmp
jo
fsubr
adc
outsl
cmpsb
mov
and
inc
call
loope
mov
js
repnz
or
imul
jns
push
pusha
push
js
fnstsw
icebp
jecxz
insl
lods
shll
mov
or
sbb
insb
sti
push
fsubs
mov
insb
inc
jge
sbb
jb
mov
add
lods
mov
mov
mov
jae
push
sub
cltd
mov
aaa
shll
ret
mov
je
xor
or
pop
pop
aad
pop
pusha
aas
popl
jecxz
pop
pop
rorl
sub
pushf
lret
sarb
add
mov
leave
test
jle
lahf
pop
mov
mov
lahf
int3
ror
xor
or
jecxz
xchg
mov
dec
call
add
nop
xlat
fadds
mov
repz
pop
and
jne
mov
xchg
ja
fistpl
pop
in
cmpsl
mov
or
inc
lahf
je
daa
out
fnstcw
popf
aas
bound
ds
or
adc
fstps
push
addr16
mov
jbe
gs
jp
push
adc
pop
mov
mov
movsb
scas
inc
push
daa
mov
stos
orl
xor
cwtl
cld
pop
mov
mov
outsl
mov
xchg
cmp
hlt
subb
sbb
push
in
sub
out
rol
mov
ret
sub
mov
ss
scas
jge
or
sub
hlt
test
iret
xor
cwtl
xchg
sub
xchg
xchg
jne
inc
mov
push
sbb
shll
jge
mov
scas
add
cmp
ret
add
jno
out
stos
mov
pop
mov
ds
jns
xor
push
mov
test
mov
sub
cld
scas
imul
lea
es
push
sbb
movl
fcoml
and
cwtl
scas
out
push
jno
push
inc
insl
mov
cwtl
cmp
xchg
inc
xor
xchg
xchg
push
mov
mov
push
sub
inc
cwtl
xchg
mov
and
je
push
cltd
jle
mov
mov
xchg
cpuid
out
xchg
adc
leave
push
inc
aaa
sbb
daa
jae
dec
pop
movsb
inc
ja
sub
xor
or
mov
inc
rcrb
push
out
cmpsb
dec
rclb
lahf
loope
sub
mov
ljmp
xchg
mov
aad
jb
mov
push
inc
push
xchg
pop
gs
mov
pop
mov
leave
jmp
dec
xchg
imul
mov
xchg
xchg
aam
or
dec
jge
test
mov
pop
push
jmp
push
fpatan
fists
into
insl
mov
lret
lods
pop
stos
sub
mov
mov
lcall
xchg
dec
inc
push
lahf
push
dec
cltd
lods
ss
stc
mov
jmp
leave
or
push
out
out
loopne
pop
and
shll
jecxz
dec
xchg
js
cmpsl
les
mov
cmp
dec
mov
leave
js
jae,pt
test
mov
push
jmp
cld
sti
sub
rcrb
mov
mov
mov
sahf
sbb
adc
mov
pop
xchg
jno
es
js
xchg
repz
rcl
test
mov
div
test
scas
mov
sub
pop
popf
jmp
shlb
loop
mov
jns
add
jo
push
dec
test
aas
mov
or
bound
inc
mov
push
xchg
xchg
sbb
pop
mov
dec
cmp
and
ret
rorb
cs
movsl
insb
cmp
gs
fld
mov
cmp
and
imul
or
jno
jnp
push
pop
int3
lret
shlb
loope
cmpsb
pushf
cmp
xchg
cmpsl
sbb
lods
fisubl
ljmp
jns
fdivrs
in
dec
imul
adc
jle
jg
push
mov
jno
mov
clc
dec
or
mov
outsb
mov
stc
add
lds
outsb
adc
fwait
imul
fdiv
pop
es
mov
fcompl
das
xor
sub
negl
lahf
add
xchg
aad
int3
pop
cmpsb
inc
aam
sbb
add
cmp
jge
mov
hlt
pop
and
cmp
sub
cmp
mov
mov
in
jp
pop
xlat
jl
fwait
test
cmpb
xchg
pusha
xor
push
ljmp
pop
incl
cmp
test
aad
sub
imul
bound
push
mov
lock
cltd
dec
mov
jg
xor
lret
mov
popa
xlat
shlb
cmp
imul
and
push
pop
clc
sbb
int
push
repz
rorl
dec
ret
por
lret
test
and
xor
test
dec
repz
mov
cwtl
adc
jae
lahf
test
push
xor
xchg
popa
xor
xlat
xchg
scas
stc
push
js
bound
mov
push
push
popa
aaa
daa
pop
loop
add
inc
sub
xor
lea
fldl
shlb
mov
pop
enter
push
divl
movsb
adc
in
enter
sub
leave
negl
xor
push
jmp
sbb
iret
jp
lods
dec
jp
popa
pop
push
sub
sbb
push
mov
test
add
inc
das
sbb
sub
ljmp
inc
shrb
xchg
xor
adc
push
mov
ljmp
pop
cmpsb
pop
add
loopne
daa
lahf
loope
xor
stc
outsb
out
mov
and
scas
mov
mov
cmp
lret
sbb
and
lret
imulb
das
xchg
dec
inc
xor
stos
nop
xchg
dec
xor
xchg
push
xchg
cs
and
aas
push
and
sub
mov
cwtl
mov
dec
dec
and
dec
cli
sub
mov
mov
fnsave
mov
mov
mov
lea
repnz
loop
xor
jg
sbb
addl
inc
xchg
mov
je
in
outsb
fmull
lock
sbb
gs
sbb
pop
adc
pusha
clc
les
or
ds
cmp
mov
xor
pop
hlt
xchg
ret
or
sbb
pop
add
rcrl
push
sahf
es
mov
ret
jmp
mov
sbb
fdivl
fsts
ja
iret
jl
mov
cmp
jns
inc
mov
mov
cmpsb
jp
and
mov
mov
movsb
in
push
mov
lret
rcr
and
movsl
jl
adc
jmp
das
inc
jmp
imull
cmpsl
orb
add
in
dec
pop
in
stos
scas
gs
aas
call
adc
sahf
psubd
add
in
mov
pop
inc
jl
cmpl
xor
hlt
or
dec
push
xor
shr
add
ss
mov
pop
in
push
mov
mov
sub
aas
mov
lods
cmc
into
adc
inc
mov
rcll
sbb
dec
mov
cmp
add
enter
lret
cmp
aad
mov
pop
mov
mov
and
bnd
lret
push
jge
clc
mov
js
pop
das
test
imul
jp
push
mov
inc
test
cmp
mov
pmaxub
cltd
mov
fldcw
in
movsl
cmp
push
xor
inc
cmp
icebp
or
call
imul
out
inc
xchg
orb
loope
imul
ljmp
pop
mov
loopne
repz
or
xchg
sbb
cmp
arpl
or
sbb
xchg
dec
fistpll
cld
aad
fs
add
push
dec
mov
or
and
dec
stc
sbb
mov
loope
fs
mov
xchg
aad
test
mov
jno
pop
call
es
xchg
loope
jl
dec
shr
arpl
imul
xor
xor
and
lret
or
cmp
push
cltd
inc
adcl
fwait
mov
inc
sub
loope
xchg
jnp
je
cmc
sub
jno
lock
pushf
mov
addb
push
movsb
xor
jge
cmp
ss
mov
inc
pop
or
adc
dec
and
mov
cli
orb
pop
aam
cmpb
scas
pop
dec
adc
dec
sub
jle
in
push
shl
int
je
and
out
xorl
ljmp
lods
je
in
shrl
clc
nop
xchg
and
rclb
xchg
sbb
aad
adc
add
mov
dec
sub
test
rcll
jl
or
xor
loope
inc
and
add
inc
jns
lret
fsubl
imul
ret
xchg
sbb
adc
add
mov
push
int
mov
cmp
sub
jmp
aaa
pusha
fcompl
xchg
ss
xchg
mov
mov
movsl
push
inc
inc
andl
dec
inc
or
outsl
fcmovnu
cmp
adc
outsb
aaa
lret
pop
sub
ror
or
push
jae
xchg
adc
or
mov
push
imul
rorb
push
sbb
push
jecxz
xchg
lret
jb
out
dec
and
jo
lds
into
inc
cs
pop
das
rcl
shl
and
jp
sbb
in
jno
dec
out
inc
dec
pop
fstpt
call
rclb
mov
add
xor
pop
jecxz
fwait
cmpsl
aam
lea
mov
xchg
mov
adc
and
push
repz
popa
push
insl
jb
jno
push
sub
push
rcrb
hlt
jle
and
movl
aad
pop
push
leave
adcb
sub
out
nop
or
xor
push
mov
rcrb
jg
cli
movsb
test
insb
xlat
mov
sub
test
sahf
sub
xor
pop
sti
mov
mov
imul
cmc
jge
xchg
dec
lahf
or
aas
jle
jmp
test
mov
dec
and
rcl
outsl
add
add
cs
arpl
push
lahf
jl
push
mov
mov
mov
jo
and
lcall
add
gs
cmp
mov
out
dec
sub
loopne
inc
fwait
xor
inc
inc
pop
jp
mov
fistl
sub
xlat
rorl
leave
pusha
out
in
jnp
cmp
cmc
or
inc
xor
movsl
mov
shlb
decl
inc
aad
repnz
pushf
dec
jmp
jl
xchg
dec
mov
hlt
data16
xor
mov
pusha
sub
cld
jle
add
aaa
push
ret
lods
mov
xchg
jno
mov
xchg
lods
in
xchg
mov
lods
add
mov
inc
cmp
ss
pop
pusha
inc
push
test
dec
pusha
and
ss
mov
xor
xor
lret
lcall
push
stos
testl
jg
and
xchg
or
sbb
cltd
lods
call
nop
iret
mov
cs
pop
jae
cmp
into
mov
iret
mov
sub
push
push
mov
xor
add
adc
fsub
shl
fwait
and
mov
hlt
adcb
shr
aad
stos
push
cwtl
add
sub
sub
and
inc
popf
lods
sbb
xor
xorb
mov
pop
adc
mov
inc
xchg
insb
addb
aad
jle
aas
mov
jge
xor
adc
cwtl
and
mov
daa
je
cmp
lods
loopne
inc
xchg
jbe
push
sub
sub
clc
xor
mov
sub
rclb
cs
jecxz
push
mov
shll
hlt
pop
test
or
add
add
pop
jge
sub
sti
mov
inc
stos
leave
stos
out
dec
call
je
jb
mov
and
rcrb
jae
aad
loopne
add
sub
pushf
lret
stos
xchg
sub
inc
lahf
mov
insl
in
add
cmp
cmc
sub
jb
cs
adc
and
push
xor
jecxz
or
fbstp
ljmp
aad
lock
mov
ss
lds
mov
pop
mov
lds
insb
addr16
arpl
sbb
or
xchg
ficomps
das
xor
pop
mov
jp
dec
cwtl
add
or
loopne
insl
ljmp
xchg
fnstenv
lods
mov
pop
adc
ja
dec
loope
loop
imul
dec
jo
and
icebp
push
dec
inc
fstpl
sbb
fs
xchg
mov
cmp
stos
popf
aam
sbb
pop
inc
lea
jb
add
test
outsb
stc
lret
clc
jnp
aad
pop
rcll
in
adcl
or
or
jg
ror
cld
pop
lds
testb
pop
inc
pop
sbb
cmpsl
lds
movsl
push
cmp
xor
lret
aam
lret
push
sub
mov
les
js
jns
and
fidivrs
and
aas
add
call
test
add
movsl
lods
adc
movsb
shlb
lock
dec
cwtl
mov
aam
sub
shll
inc
or
mov
jecxz
enter
stos
popf
jg
cmpsb
cli
int3
push
ret
push
mov
shrl
lcall
dec
mov
jg
scas
mov
sbb
xor
in
mov
mov
pop
jb
jmp
pushf
jge
or
stos
adc
xor
and
inc
jmp
repz
xchg
fdivr
pop
inc
sbb
sarl
and
mov
je
adc
push
test
jp
cs
bound
pop
xor
sub
nop
dec
adc
je
insl
dec
mov
xor
jge
dec
push
push
sub
mov
push
lret
ja
mov
popa
movsl
fld
adc
loope
sbb
scas
fisubs
mov
icebp
mov
rol
out
xchg
mov
mov
push
iret
movsl
xchg
fwait
inc
mov
jl
testb
out
popa
dec
push
lods
lods
xor
add
dec
and
jmp
enter
loope
mov
cltd
xor
rolb
and
cmp
gs
xchg
push
lcall
sbb
mov
mov
mov
and
pushf
xchg
xchg
popa
cmp
jp
push
negb
and
xchg
mov
fsubrs
les
and
fs
fwait
cs
aas
out
cmpsb
int
stos
cmp
hlt
mov
xor
mov
dec
stc
into
xor
das
out
mov
pushf
rolb
sub
ljmp
mov
pop
shlb
jns
inc
add
imul
mov
pusha
inc
xor
adc
adcb
jg
jnp
xchg
lds
fs
xor
jne
pushw
mov
add
mov
xchg
rclb
rol
and
pop
pop
dec
cltd
and
sub
in
mov
cmp
mov
inc
pop
fsubrp
std
xor
shll
arpl
lahf
data16
pusha
xor
les
sbb
sbb
daa
dec
into
xor
nop
inc
lock
stc
movsl
sbb
and
imul
inc
sbb
fnstenv
xchg
daa
xor
dec
add
or
inc
and
iret
jmp
mov
movhps
sub
pop
insb
cltd
mov
ds
cli
les
sub
fdivs
mov
loopne
adc
inc
orb
cmp
pusha
xlat
scas
outsb
test
push
jp
mov
cli
xor
roll
xchg
xor
ja
jns
push
shlb
pushf
lock
movsl
mov
bound
shlb
jnp
sub
inc
lock
cmc
enter
dec
sub
jge
sub
in
mov
or
arpl
dec
jle
and
leave
or
or
jp
ret
cmp
dec
cli
scas
pop
hlt
repnz
sub
inc
cmc
enter
test
ret
mov
jnp
jl
push
ds
push
push
call
cmc
cmp
sub
fnstcw
xor
lret
cmpsb
adc
push
xor
jne
push
arpl
ss
xchg
lods
fstpt
idiv
jle
adcl
nop
das
jl
inc
dec
mov
clc
adc
mov
loope
dec
sti
and
cmp
sbb
mov
mov
das
or
lds
cmpsb
jno
sbb
inc
xchg
ret
loop
ss
fs
mov
gs
or
ret
test
divl
pop
mov
in
fiadds
orb
imul
inc
into
sbb
cmp
lock
std
inc
mov
cli
repz
into
test
rolb
dec
jo
mov
dec
mov
cs
and
pop
dec
repz
push
or
pop
int
jbe
imul
inc
xchg
jge
inc
cmp
pop
data16
jbe
cmpsb
mov
inc
dec
iret
fdivrs
xor
xor
push
loop
int
into
sbb
sarb
fisttpl
pop
sbbl
rolb
std
pop
ret
mov
ficoml
aaa
add
stc
mov
divb
jmp
add
insl
jns
mov
add
mov
in
hlt
xorb
ret
cmp
bound
dec
shrb
les
jns
nop
xchg
jmp
or
and
out
mov
fs
mov
sti
xchg
inc
and
fidivl
xchg
xchg
outsl
adc
addb
and
xor
je
jecxz
fiadds
or
sub
xor
jle
jge
cmpsb
fstpt
add
xor
arpl
ficompl
push
jno
inc
cmp
leave
push
repnz
fimull
xchg
inc
rorb
inc
adc
mov
mov
mov
dec
lds
xlat
xrelease
pop
fsts
nop
xor
je
pop
cld
addb
sub
xchg
mov
cmpsb
sbb
insb
mov
pop
push
inc
xchg
and
fwait
ret
lds
pop
repnz
pop
xchg
sti
ret
or
out
jo
and
sahf
mov
push
push
xchg
movsb
and
adc
or
divb
xor
and
loopw
pop
lret
sub
pop
pop
mov
daa
rcr
add
repz
mov
mov
cwtl
add
mov
in
dec
jb
pop
roll
cmp
test
js
lods
addr16
insb
jb
add
ljmp
cmpsl
adc
sbb
sub
jp
movsl
cli
or
test
xchg
pop
push
cld
mov
add
inc
fdivl
push
mov
les
pop
push
sub
sbb
dec
jl
mov
aad
bnd
sbb
lods
data16
icebp
xchg
call
push
icebp
fs
cmp
aam
xchg
or
mov
pushf
and
sbb
in
cmp
dec
sub
ficomps
push
dec
push
or
aaa
push
mov
mov
mov
cmp
mov
dec
nop
jne
dec
notl
arpl
push
test
adc
push
xchg
add
sbb
repz
xchg
ret
fiadds
out
aam
sarl
mov
pop
sub
cmp
pop
bound
cmp
xchg
inc
xor
mov
hlt
pushf
xchg
into
cwtl
inc
jns
enter
mov
xor
cs
sub
mov
push
outsb
adc
stos
push
cmpsl
xlat
push
in
outsb
push
neg
dec
test
jmp
cld
lahf
cmp
jge
mov
loop
ret
xlat
pop
iret
mov
mov
xchg
test
jbe
pop
fisttps
xchg
pop
sbbl
push
js
sar
xlat
xor
cmpsb
jle
inc
popl
mov
lahf
lea
pop
pop
cmp
lods
pop
mov
push
jl
imul
bndstx
sbb
lcall
jb
fbstp
push
pop
into
mov
add
scas
orb
rcr
data16
adc
dec
jecxz
fists
sub
push
lds
std
lock
xor
xchg
scas
mov
cwtl
pop
push
popf
dec
mov
pop
xchg
mov
adcl
and
cmp
leave
fdivrl
pop
push
adcl
lret
cmpsb
adc
lea
in
fcoml
xchg
xchg
mov
and
mov
sar
orb
fcompl
fdivr
push
inc
mov
xchg
or
arpl
mov
rorb
lret
push
and
gs
pop
jecxz
fidivrs
lahf
push
movsb
jmp
sbb
stos
aam
cwtl
mov
pop
push
mov
sub
movsl
stos
test
dec
and
push
adc
test
bound
jge
add
mov
mov
dec
ja
jo
jne
mov
jo
rorb
iret
adc
sub
mov
test
mov
mov
lahf
dec
cltd
jae
sub
jmp
rcrb
pop
popa
call
mov
mov
mov
push
mov
into
mov
or
lock
push
and
pop
leave
hlt
lock
dec
icebp
ror
daa
sub
daa
cmc
mov
mov
sbb
adc
add
mov
hlt
push
loope
mov
jae
jmp
mov
outsl
jl
out
dec
dec
movsl
lahf
out
dec
outsb
xchg
in
js
inc
sub
scas
sub
ss
push
add
and
ret
insb
mov
mov
cwtl
jnp
imul
push
mov
or
ficoml
mov
pop
and
dec
ja
xlat
cmp
add
push
pop
cmpsb
in
mov
mov
fs
insl
mov
outsl
or
adc
mov
sbb
jge
fdivs
leave
jne
push
nop
mov
insl
mov
lea
xor
or
jmp
sbb
sbb
cli
out
mov
lock
call
mov
push
ret
inc
sahf
out
cli
dec
movsl
jp
out
pop
setp
jnp
lea
shrl
push
clc
jbe
mov
cmpsl
fistl
push
jg
int3
loopne
or
sub
adc
mov
xor
fldenv
aad
cmpsb
inc
mov
xchg
dec
dec
jmp
sbb
pop
stos
cmp
mov
imul
mov
dec
inc
sub
cs
push
pusha
call
icebp
lds
fstl
aam
out
sbb
adc
shrl
enter
xor
or
mov
int3
dec
dec
xchg
dec
push
cli
call
sti
sbb
fwait
pop
sarl
xchg
push
push
in
rolb
mov
add
lds
ljmp
mov
sbb
lods
into
sbb
mov
xchg
sti
arpl
add
dec
aad
push
inc
or
push
fdivs
push
jp
inc
ljmp
cmpb
sbb
inc
into
mov
jae
xor
js
stc
mov
dec
fs
fdivrs
jbe
jb
adc
sbb
inc
xor
out
add
adc
mov
inc
sbb
out
imul
aam
and
adc
xchg
out
clc
adc
xchg
inc
xchg
sbb
rorb
loope
mov
pop
and
scas
pop
cmpsl
push
sub
repz
and
xchg
push
mov
iret
cmp
in
enter
push
fildll
cmc
sub
pmaxub
cmp
mov
add
daa
popa
or
loopne
test
push
sbb
je
push
push
inc
arpl
fsub
xchg
adc
lahf
or
ret
nop
mov
div
fldt
or
rclb
push
aas
sub
push
push
cs
inc
jne
xor
mov
clc
test
mov
mov
ficompl
jo
mov
and
icebp
sbb
sbb
jb
inc
divb
xchg
test
and
mov
cmp
stos
stc
fs
enter
in
push
jle
cmp
mov
pop
sub
pop
pop
fdiv
and
or
push
inc
and
in
pushf
inc
xchg
pop
mov
insb
jo
push
cltd
cmpsl
xchg
in
call
mov
lds
mov
cmc
lcall
mov
lret
enter
out
clc
inc
in
orl
mov
lahf
arpl
mov
and
push
sub
shlb
xchg
cli
mov
pop
sti
push
push
inc
gs
pop
mov
sub
dec
imul
sahf
adc
pop
fld
jb
sbb
add
push
std
push
mov
loopne
xchg
sub
bound
pop
mov
loope
push
jp
call
jae
push
push
pcmpgtw
in
push
shl
test
sub
bound
pop
imul
dec
xchg
sub
mov
inc
xchg
mov
es
mov
scas
insl
sub
inc
fisubrl
jp
xchg
test
lret
in
and
aaa
sub
outsb
into
std
mov
push
scas
adc
iret
cmp
shrl
ffreep
and
loope
sub
add
out
push
test
push
sbb
add
add
hlt
pop
ja
xlat
daa
call
fistl
add
jmp
in
addl
scas
and
push
add
push
jae
jle
sub
xchg
push
div
insb
add
iret
lds
addr16
imul
je
gs
aaa
push
cmpsl
imul
inc
xchg
addr16
cmp
test
jns
xor
or
in
dec
add
ret
daa
int
cmp
daa
mov
xorb
add
mov
mov
icebp
cmpsl
ret
adc
push
daa
es
cmp
push
jmp
nop
dec
xchg
mov
bound
pop
ret
test
fwait
xor
pushf
lret
mov
xor
sbb
cli
repnz
cmpsb
inc
jne
nop
add
movsb
inc
push
movsb
fistpll
jne
mov
pop
gs
hlt
cmp
mov
inc
movsb
rorl
cmp
out
or
adc
rolb
into
les
insb
pop
inc
cmpsl
jmp
pop
and
dec
leave
popa
insb
jp
or
and
or
mov
push
xor
outsl
lret
in
andb
fistl
or
pop
out
int3
xlat
data16
and
push
sub
or
and
mov
pushf
cmp
mov
cmp
mov
or
dec
sbb
or
inc
in
cmp
into
test
enter
jmp
das
mov
fists
push
cmp
pop
push
mov
mov
jno
mov
push
xlat
lcall
and
sub
orl
ret
add
ficoml
das
out
notl
add
inc
dec
rorl
mov
pop
shll
xor
je
xchg
mov
xchg
shlb
sbb
lcall
xchg
pop
adc
mov
cs
mov
xchg
lods
mov
out
mov
roll
shrb
repz
cmp
out
mov
add
mov
jns
imul
mov
ds
dec
mov
xor
sub
add
into
int
mov
push
insl
mov
add
hlt
mov
inc
mov
sarb
mov
dec
pop
add
cltd
or
in
push
mov
repz
in
mov
jle
xchg
jne
mov
fisttpl
cld
cld
xorl
fdivrl
push
pop
jae
dec
add
ss
mov
pop
sbbb
mov
into
sti
fcmovbe
ljmp
or
sarl
int
sub
lea
mov
mov
jo
ss
stos
pusha
std
inc
es
jp
ja
inc
frstor
test
adc
mov
inc
dec
push
pop
gs
adc
sub
outsb
and
inc
add
cmpsl
mov
mov
imul
test
incb
and
add
enter
cmp
cmc
dec
ss
sbb
daa
lock
xor
fisubs
lods
push
sub
es
incb
mov
rorb
bnd
mov
cld
cmp
cli
jne
test
jmp
ret
subl
outsl
fidivs
fistps
movsb
jnp
or
adc
pop
xchg
testl
xchg
cmc
insb
and
sub
daa
xchg
xor
jns
cmp
sub
mov
sub
outsb
cli
mov
mov
notl
cltd
addr16
insl
mov
cld
into
int
cmp
shlb
fstl
jl
lret
push
mov
sahf
clc
cmc
fldl
stos
sub
xor
dec
pop
aad
mov
dec
stc
out
jg
xchg
in
sub
cmp
dec
xor
pop
fldenv
movsl
insl
mov
xchg
outsl
sbb
leave
adc
push
je
cmp
push
xchg
pop
dec
jle
mov
adc
cmc
xchg
iret
jp
iret
pop
pop
cmc
push
or
pop
mov
dec
push
mov
pop
push
sbb
jle
add
xor
les
xchg
sub
jb
add
mov
and
adc
in
and
or
dec
jge
aam
jno
cmp
inc
pop
and
dec
stos
push
cmp
push
lret
mov
sbb
adc
add
orb
repz
cmc
call
add
mov
insb
popf
pushf
xor
mov
lock
or
cmp
shll
data16
aaa
cmp
mov
sbb
add
xchg
aam
mov
or
fsubr
jb
jno
pop
cld
ja
cmp
sbbl
push
ret
rolb
or
or
dec
das
js
dec
out
mov
in
push
rorb
add
lcall
arpl
lock
lcall
ja
stc
lret
or
push
sub
cmp
test
lret
adc
fimuls
dec
push
testb
xlat
mov
adc
and
xor
test
stc
dec
push
jmp
sub
xor
add
sbb
mov
frndint
divl
pop
cmp
push
push
add
add
test
lock
cmp
cltd
mov
mov
push
ret
in
rorb
mov
xchg
lret
mov
xchg
mov
nop
add
and
xchg
enter
enter
cmpsb
iret
cmp
adc
loope
dec
es
xchg
jmp
cmpsb
pop
mov
rolb
sub
push
inc
xlat
pop
push
sahf
xor
sub
sub
push
xchg
dec
call
jecxz
jno
pop
fdivr
call
sbb
pop
and
icebp
jecxz
in
orb
loope
jecxz
add
cmpsl
cmp
dec
sub
xor
daa
inc
push
movsb
cmpsl
fidivs
fmul
xchg
ds
cmc
xchg
out
mov
or
cli
cli
ss
divb
xchg
mov
aam
rcll
inc
mov
aam
sub
cmpsb
inc
dec
cltd
gs
mov
mov
cmp
push
hlt
ja
and
push
mov
or
inc
ret
fwait
pop
pop
leave
lret
inc
push
add
hlt
nop
push
rcll
psubb
xor
das
bound
addb
mov
jno
dec
pop
jle
add
add
sbb
and
mov
xchg
gs
lea
pop
push
xlat
dec
lods
mov
inc
mov
mov
lock
sub
mov
fnstenv
test
mov
movsl
push
sub
ret
ljmp
scas
addr16
cltd
xchg
and
push
int3
sbb
daa
jae
or
aas
dec
andb
mov
ds
mov
or
punpckldq
daa
push
cs
cmpsl
fnstenv
test
pop
xor
jle
mov
pop
sahf
inc
sub
mov
int3
arpl
rcrb
sbb
lods
pop
cld
xchg
pop
mov
rcr
and
jp
std
cmp
scas
mov
jo
pop
add
cmp
cmpsb
cmp
cmp
insl
js
inc
xor
lret
dec
frstor
andl
mov
ds
stos
int3
test
adc
out
fwait
loop
in
les
xchg
mov
adc
inc
and
dec
pop
pop
mov
insl
cmc
das
pop
mov
test
or
xchg
pop
xchg
xchg
les
js
mov
outsb
inc
mov
movsb
xor
popf
jnp
or
in
in
test
xor
lods
pop
cs
cmp
adc
out
jecxz
leave
fisubl
insl
xor
lret
mov
dec
inc
ret
push
adc
std
mov
mov
iret
faddl
xchg
cmp
push
std
insl
push
testb
in
in
cmpsb
cli
jp
mov
or
in
dec
dec
int3
push
out
push
cli
sub
arpl
test
aam
jae
sbb
jnp
mov
jl
dec
mov
lcall
les
cmp
lods
addb
cld
mov
mov
mov
les
pop
pop
pop
mov
lods
cli
mov
cmp
sub
shrl
and
and
mov
pop
dec
data16
push
popf
or
std
punpcklwd
aas
or
lahf
cmpsb
lods
add
jg
push
lods
enter
stos
or
or
loopne
out
fcoms
sarl
lahf
inc
push
rclb
call
sub
jle
add
pop
icebp
pop
rdpmc
out
es
dec
mov
inc
mov
or
pop
mov
scas
sub
jns
sbb
imull
dec
cwtl
and
mov
adc
ficoml
pop
mov
mov
call
and
mov
insl
shrb
xor
push
subl
sbb
ficoms
pop
and
imul
xor
dec
xchg
call
mov
lahf
repnz
cmp
push
mov
adc
lret
adc
data16
sub
and
lret
loope
inc
loopne
add
cli
scas
loop
jmp
icebp
adc
jmp
push
cmpsb
jge
daa
jmp
cltd
sub
xchg
push
jg
pusha
xchg
rol
outsl
cmpsb
repnz
cmp
je,pt
in
mov
popf
dec
or
xlat
push
sbb
jnp
xchg
test
rolb
gs
xorb
or
xchg
cmp
push
andl
inc
cmp
sbb
cli
mov
in
pop
mov
xchg
push
xchg
push
pop
or
icebp
push
pop
mov
mov
mov
xlat
mov
push
stos
xor
mov
es
fs
clc
mov
adc
mov
and
xchg
add
jno
mov
dec
jmp
jne
adc
jl
or
sbb
push
xor
xchg
nop
mov
xchg
xor
pop
outsb
fcmovne
mov
fisubl
aam
or
out
in
enter
push
mov
idivl
mov
mov
jl
add
sti
mov
mov
sarl
dec
jg
inc
lcall
pop
push
or
xlat
xor
rcll
popa
jmp
dec
fs
push
outsl
fcmovnb
rclb
inc
shll
pop
add
aam
arpl
movl
test
jp
push
shll
aas
push
mov
mov
out
lret
fmulp
jp
jbe
imul
ja
fs
mov
add
movsl
xchg
test
and
xchg
ja
cmp
jle
mov
neg
insb
loop
mov
jne
hlt
dec
negb
cmp
adc
leave
xor
or
jmp
clc
mov
push
push
push
andb
hlt
push
push
adc
fadds
xor
push
mov
aaa
xchg
pop
fistpl
jmp
pop
movsb
rol
out
sub
ja
mov
fstpt
mov
push
jne
cmpxchg
outsl
in
sahf
fnsave
fiaddl
inc
in
pop
dec
negl
sub
sbb
sub
or
push
adc
lock
inc
es
xor
dec
and
add
in
out
push
xchg
fistl
adc
ret
mov
into
add
ljmp
mov
pushf
push
data16
lahf
aad
jecxz
sbb
cmp
sbb
lods
jmp
sub
inc
pop
mov
insl
sbb
jo
jg
aam
mov
cmc
aam
out
ror
into
sbb
and
add
or
sub
inc
pop
mov
test
lret
xor
or
push
ficoml
addl
test
cmp
mov
jb
xor
cmp
int
mov
or
mov
cld
inc
push
lods
inc
and
stc
sub
mov
mov
xor
loopne
insl
rcrb
mov
sbbb
pop
shlb
and
adc
cmp
aam
mov
in
fs
inc
dec
cmpl
fmull
fdivrl
popf
mov
push
fcoms
mov
cmp
push
fiaddl
loopne
add
or
les
mov
xorl
adc
hlt
mov
mov
ja
adc
jg
sub
mov
pop
cltd
daa
int3
stc
popa
cmpsb
mov
push
adc
add
sub
sub
pop
dec
repz
push
fs
xchg
xchg
sub
xor
imul
inc
add
jmp
in
inc
xor
sbb
test
push
sub
hlt
jg
scas
rcrb
push
xchg
inc
sbb
jge
xor
cmp
loopne
and
subb
mov
xchg
lcall
mov
icebp
push
inc
aam
pop
mov
scas
inc
pop
push
daa
stos
push
jne
and
ret
adc
pop
inc
pop
ret
fbstp
leave
fs
out
test
pop
lods
bound
mov
ret
repz
inc
push
in
jae
cmpsb
pop
xchg
mov
ret
loop
or
add
scas
sub
and
neg
add
pop
dec
jecxz
movsb
idivb
outsl
sub
xchg
push
push
out
dec
mov
ret
mov
dec
mov
push
cmp
js
stos
sti
stos
popf
lods
imul
and
repnz
insb
sbb
mov
int
pop
cmc
rcl
fisubl
shrl
divb
lds
in
les
mov
fldl
pushf
push
dec
lret
xchg
and
push
cwtl
out
and
adc
lea
stc
enter
mov
sahf
fsubs
sub
adc
push
lods
sbb
xor
pusha
push
push
lock
lret
or
jmp
push
pop
in
pop
push
mov
and
inc
ljmp
dec
nop
int3
add
test
and
ret
js
inc
mov
out
jl
mov
sarl
stc
jns
lods
rolb
sub
mov
xor
subl
fistps
repnz
nop
sbb
jno
test
aad
movsb
sbb
xchg
pushf
rcll
xadd
cmp
pop
pop
sub
dec
jge
xchg
mov
inc
stos
outsl
fildll
ret
dec
xchg
adc
lods
sbbb
aaa
repnz
int3
mov
rorl
popf
xchg
mov
lods
in
addl
xchg
xor
das
dec
pop
cmc
clc
xor
mov
stos
jne
adc
mov
lods
insl
fisubl
xchg
repz
jecxz
mov
inc
and
jno
or
scas
nop
aas
cs
inc
ror
mov
dec
inc
cmpsl
jl
rorl
out
mov
popf
in
mov
add
xchg
pop
notb
jl
cmpsl
inc
push
mov
leave
je
rcll
sub
out
lret
pop
dec
mov
aaa
fdivs
dec
or
xchg
lock
imul
jns
pop
bound
jb
jp
mov
dec
lods
inc
mov
xchg
xor
xor
test
lods
push
push
mov
jmp
add
popl
cmp
repnz
adc
cmpsb
jnp
std
xchg
adc
loope
or
add
push
cmpsl
pop
cld
cmpsb
ret
int3
push
pop
cmpb
jnp
add
push
scas
aad
iret
mov
dec
sub
cltd
test
xor
cmp
adc
and
loop
jg
pop
sahf
ret
jmp
addr16
or
cmpsl
pop
cmpsl
popa
adc
adc
subb
adc
popa
stc
adc
inc
xor
ds
pop
push
insb
xor
lahf
sbb
movsb
fmuls
sar
imul
sbb
std
or
cmpb
pop
scas
dec
int3
cld
mov
pop
and
je
and
iret
lahf
pusha
add
dec
xor
pop
test
mov
xchg
pop
pushf
aad
mov
mov
inc
dec
sub
push
dec
fs
pusha
les
sub
cmp
and
push
int
idiv
pop
xchg
out
jnp
or
stos
pop
and
and
jns
adc
leave
dec
add
mov
xor
push
popf
fdivrl
test
and
pop
imul
rcrb
test
sbb
push
test
adc
insb
adc
int
cli
sarb
movsb
das
popa
pop
imul
pushf
xor
xchg
pop
mov
daa
pop
movsl
mov
call
xchg
push
and
pop
adc
in
dec
fdivr
lret
bound
pop
lds
and
out
out
cmpsb
movsb
xchg
cmp
add
lock
mov
or
sahf
fcmovne
test
add
xor
inc
cmpsb
or
push
xchg
xor
sbb
insb
jge
das
mov
rorb
shl
data16
cmpsl
dec
call
xchg
sub
je
mov
ret
lcall
or
enter
sbb
test
lock
aas
jne
push
insl
mov
sub
clc
dec
ja
jle
dec
pop
mov
outsl
sub
dec
imul
inc
lret
inc
subl
ljmp
mov
jae
or
push
out
insb
or
insb
das
push
std
sti
xchg
lea
mov
push
in
push
loope
in
fildll
pop
fcmovb
mov
stos
xor
lock
addl
mov
jbe
hlt
test
subl
or
add
daa
xchg
aaa
andl
scas
pop
fisttpl
push
dec
sub
movsl
or
xchg
lret
stos
aas
pop
mov
popa
sub
jbe
ja
ret
popf
cmp
sub
sbb
fisubrs
push
fisubl
pop
pusha
test
scas
orb
int3
les
xor
test
jmp
add
push
test
pop
push
test
in
jecxz
jno
test
enter
stos
out
shrb
nop
shll
arpl
inc
pusha
sbb
jne
movsb
lock
mov
out
xor
leave
sar
stos
mov
arpl
mov
mov
or
cmp
dec
adc
dec
insl
in
dec
push
fldt
incb
mov
sbb
dec
mov
add
ljmp
aad
mov
xor
cmp
gs
fmulp
jecxz
xchg
adc
adc
dec
rcr
cld
mov
scas
mov
aas
xor
repnz
sahf
not
mov
adc
ja
inc
rorb
test
insb
mov
xchg
push
jns
pop
int
cmp
scas
add
ret
jns
lock
adc
xchg
or
fs
pusha
mov
mov
cwtl
inc
ss
in
hlt
dec
es
negb
mov
rolb
fwait
jnp
and
fsub
xchg
lds
in
imul
sub
xor
cmp
idivb
sbb
xchg
andb
movsb
mul
mov
popa
subb
inc
lods
pop
ja
adc
cwtl
push
in
aaa
pop
lods
jl
stos
das
lahf
cmc
push
xchg
aad
adc
fidivrs
insb
push
stos
mov
aad
dec
aam
addr16
std
fstpt
dec
into
js
mov
sub
fists
mov
pop
out
xor
mov
loopne
nop
lret
push
dec
lods
test
xor
sbb
inc
int3
leave
imul
add
inc
xchg
fisttpl
xchg
outsl
or
es
inc
xor
xchg
std
popa
jp
test
pop
adc
mov
or
mov
xor
sbb
sub
inc
mov
cmp
adc
push
rorb
pop
in
fs
dec
sbb
ja
cmp
push
add
bound
in
xorl
xchg
fcomps
pop
cmpsb
cmp
popf
lret
outsb
mov
testb
and
cmp
dec
sbb
inc
hlt
jl
push
iret
jbe
cs
xorl
cmp
outsb
xchg
test
cmpsl
pusha
repz
xlat
and
mov
push
test
bound
inc
lret
mov
repz
adc
in
mov
ljmp
push
sti
dec
sub
out
sbb
mov
cmc
cmpsl
test
mov
dec
inc
insl
orl
or
push
jge
mov
push
xchg
fstps
inc
in
mov
push
xchg
daa
lods
outsb
or
scas
addr16
shl
fisttpl
fdivrs
aaa
dec
leave
jno
mov
std
mov
push
sbb
arpl
call
test
incb
inc
jmp
int
pop
lods
pop
sbb
fists
pop
and
int3
orl
mov
push
icebp
cmp
out
scas
fstl
push
rcrl
sub
pop
mov
std
outsl
dec
pop
xchg
in
cmp
jns
cwtl
push
push
pusha
or
stos
sahf
mov
dec
push
pop
xchg
out
dec
movl
jbe
xchg
fucomi
inc
and
sub
cmp
rcrl
lret
adc
ret
jb
sbb
push
pop
test
xchg
mov
insb
and
push
inc
pop
leave
sub
xor
std
add
lock
cmp
xchg
addr16
imul
aad
fwait
scas
and
cmpsb
in
mov
mov
inc
movsb
xchg
clc
cmp
lods
cmp
sub
mov
loopne
or
or
call
ja
lods
pop
add
inc
xor
notb
das
push
push
test
mov
insl
xor
mov
arpl
sub
xchg
ds
cmpb
jb
fsubrl
xlat
outsl
jmp
inc
pushf
mov
lret
pop
stos
sub
jle
lahf
pop
dec
pop
and
and
and
or
jge
scas
xchg
popf
push
out
push
test
loop
lock
inc
push
imul
xchg
mov
cmp
fwait
mov
jnp
cmp
out
in
xchg
mov
pusha
cltd
std
mov
dec
sbb
dec
lock
pop
imul
leave
sti
repnz
cmpsb
imul
js
push
xor
sub
push
sbb
cmpsl
addr16
je
lret
lcall
mov
movsb
test
fdivrs
add
sub
loop
mov
aas
jb
jns
push
pop
mov
shlb
sbb
inc
jo
icebp
and
add
test
leave
mov
mov
cmp
inc
mov
xchg
dec
push
inc
or
jno
pop
test
addb
sbb
jp
jl
iret
xchg
mov
xorb
inc
mov
ja
dec
dec
fstpt
shlb
lahf
dec
dec
gs
stc
out
adc
cmpsl
or
movsl
push
xchg
mul
aam
add
cmc
or
mov
cltd
popf
divl
push
xor
movsl
push
int3
cld
insb
adc
call
jae
pop
in
mov
push
imul
xchg
aad
ljmp
lret
fwait
dec
jae
inc
and
xlat
and
jg
xchg
or
outsl
psraw
add
lret
loopne
loop
xchg
jg
mov
icebp
sub
pop
imul
fistps
mulb
imul
ror
roll
mov
scas
xchg
addr16
jo
sahf
xchg
cmp
in
mov
or
lcall
arpl
jp
mov
mov
orl
fnstenv
sarl
pusha
ss
mov
mov
nop
pop
lret
pop
aaa
call
out
cmp
stos
xchg
xor
mov
adc
adc
pop
push
jb
imul
inc
mov
sbbb
cmpsb
or
sbb
inc
add
mov
mov
lret
mov
into
repz
movsl
loop
test
push
inc
cli
inc
stc
mov
stc
cmp
xchg
gs
xor
aas
fiaddl
or
or
and
or
inc
cmpsl
mov
bound
cmc
pop
mov
mov
dec
mov
sar
or
mov
mov
push
add
arpl
lcall
xor
push
push
pop
push
jmp
add
jp
push
test
adc
cmp
mov
or
sbb
inc
js
jnp
pop
dec
xchg
stc
pop
mov
loop
ljmpw
in
nop
jae
xchg
jb
jno
outsl
mov
push
pop
mov
inc
xchg
insl
dec
push
push
xchg
pop
out
fidivs
mov
rclb
mov
cld
mov
adc
adcl
cld
jo
test
dec
mov
scas
movsb
pop
arpl
xchg
in
xchg
pop
loope
popa
xchg
jmp
mov
sub
sbb
sbb
shrl
ret
mov
mov
dec
xor
adc
ret
movsl
mov
gs
mov
xor
or
xchg
mov
lock
push
outsb
xchg
pop
popa
roll
pop
dec
mov
xor
dec
inc
cmp
scas
gs
aad
clc
or
int3
lods
repnz
filds
mov
mov
and
push
ja
incl
test
decl
out
pop
dec
push
xor
add
das
cwtl
leave
sbb
icebp
jmp
cltd
xor
in
mov
mov
xor
push
adc
aad
into
fnstsw
pop
xchg
ret
inc
stc
insl
add
sbb
lret
fucomp
setg
or
mov
iret
jge
hlt
pop
pop
mov
jns
pop
nop
scas
fadds
cmpsl
sub
dec
jg
mov
xor
pop
test
aas
inc
jnp
insb
add
js
insb
loope
mov
add
xchg
pop
pop
sbb
adc
inc
enter
cmp
cmp
clc
roll
xchg
xor
mov
lock
jns
std
xor
adc
mov
xor
mov
or
sahf
sbb
inc
pop
aam
xchg
outsl
sbb
xchg
push
xchg
insl
gs
xor
inc
cmp
add
fstpl
sbb
and
push
pop
mov
imul
dec
xchg
jae
xor
adc
push
addr16
or
ss
ljmp
or
rcrb
in
das
mov
nop
or
mov
std
and
shrb
mov
in
push
mov
pop
test
add
sbbl
rcrl
mov
and
pop
cmpsl
iret
inc
loop
scas
pop
rolb
mov
add
test
sarl
xlat
das
inc
jnp
mov
andl
js
pop
push
sub
mov
mov
out
mov
nop
and
mov
fsts
inc
enter
jg
jnp
imul
sbb
mov
dec
scas
sbb
add
enter
fadds
pop
roll
dec
gs
lret
mov
ja
dec
cmp
inc
dec
mov
mov
call
ret
sub
fidivrl
jno
xlat
xchg
pop
arpl
movsl
in
mov
mov
subb
mov
aas
jno
lock
push
cld
test
mov
mov
adc
test
leave
mov
imul
stos
popa
push
cmp
cld
rorb
popl
pop
lods
lcall
sub
sbb
pop
int
rcl
mov
sbb
mov
lds
jnp
sub
aas
insl
dec
add
cmpsb
cmp
mov
inc
cmp
or
stos
inc
mov
sti
and
jne
pusha
fs
subl
jecxz
scas
cs
arpl
or
clc
sub
adc
adc
inc
pusha
shll
xchg
or
pop
movsl
loop
xchg
xchg
cs
test
and
push
ret
jno
mov
pop
mov
fildll
push
or
mov
sub
fdivp
cmp
out
and
pop
mov
xor
ds
and
and
inc
idivb
jae
push
pop
dec
imul
in
jg
push
jl
mov
mov
test
lods
jne
jo
fwait
rorb
addl
jg
dec
inc
in
sub
nop
dec
dec
inc
pop
inc
jnp
scas
scas
sub
xchg
inc
imul
adc
inc
adc
mov
dec
sub
push
sub
inc
ja
mov
mov
inc
sarb
movsl
add
outsl
push
mov
outsb
into
shrl
std
dec
cmp
insl
adc
outsl
cmp
push
xor
insl
ret
sahf
fadds
sub
cmc
push
bound
xchg
fs
mov
cmc
pop
adc
cld
mov
sbb
gs
or
xor
jg
add
add
popa
ficompl
jns
nop
in
mov
imul
fldenv
scas
jbe
fdiv
icebp
jno
xchg
inc
sub
lds
mov
stos
loop
outsl
lret
das
sub
aam
fcmovu
mov
jmp
into
int3
cmp
fisubrs
in
jbe
sub
divb
or
orb
jle
or
in
pusha
push
mov
add
pop
cwtl
lods
dec
and
push
icebp
push
mov
jmp
jp
jmp
rorl
ja
dec
ja
adc
test
sub
cmpsb
adc
add
int3
dec
adcb
cmp
pop
pop
loop
in
cli
xor
mov
pusha
repnz
in
xchg
bound
cmp
inc
movsb
jae
out
sbb
ds
sarb
mov
pop
sub
mov
addr16
ds
leave
lcall
jp
fwait
mov
mov
daa
aad
ss
push
fisubl
mov
xchg
popf
mov
je
push
sbb
jecxz
sub
jno
push
pushf
pop
lahf
lock
mov
addl
pusha
mov
daa
int3
lea
sub
push
in
sub
outsb
mov
dec
and
enter
insb
loopne
push
jmp
scas
sbb
int3
push
ficomps
dec
mov
dec
ljmp
jns
xor
xchg
ljmp
je
mov
dec
xchg
add
mov
mov
or
sti
jo
pop
pop
cmp
std
dec
fwait
stc
cwtl
les
in
fucomip
push
jge
xor
mov
mov
xor
mov
shrb
xor
pop
cmp
sbb
in
jae
mov
mov
cmpb
inc
shlb
outsl
jnp
sbb
mov
and
dec
sahf
push
cmp
adc
fldt
clc
mov
aaa
popa
dec
gs
xchg
and
xchg
popa
push
mov
mov
push
and
out
loope
aad
push
cltd
cs
fwait
mov
cmp
cli
xor
inc
je
les
fs
aad
xchg
pop
fisttps
jle
cmp
shl
mov
int3
cmp
test
mov
in
or
or
mov
out
push
pop
add
push
jge
xor
sbb
cmp
dec
fwait
xlat
mov
pop
dec
inc
xchg
adc
idivb
lds
xchg
mov
outsl
cli
repnz
sbb
dec
cs
push
and
sbb
cli
push
sub
outsl
imul
iret
call
cli
xchg
dec
mov
cmp
movsb
aam
add
or
mov
ja
xor
push
sbb
pop
pushf
call
in
mov
pop
in
sub
hlt
out
mov
xchg
lret
stos
xchg
push
xor
mov
fsts
repnz
mov
and
test
sub
ret
popf
fwait
psllq
push
jnp
aam
adc
stos
add
pop
test
idivb
loope
mov
cmc
fcomps
add
rcrb
js
lods
sti
ret
imul
dec
lds
push
jecxz
and
sahf
gs
mov
fsqrt
mov
pusha
shrl
xchg
dec
sbb
ret
subb
fwait
cmp
lret
daa
mov
fdivs
addr16
repz
mov
rcr
push
xor
add
clc
lret
iret
push
fdivl
jns
jg
cmpsb
mov
add
jle
daa
cs
stc
xor
mov
test
cli
push
shlb
int3
mov
sbb
adc
push
xlat
or
fsubrs
push
sub
dec
xchg
adc
push
gs
sbb
mov
mov
mov
add
lea
mov
pop
testl
ja
push
xor
clc
inc
xor
push
dec
mov
testl
aaa
addb
pop
sti
inc
test
repnz
in
out
and
xchg
call
mov
dec
gs
js
adc
scas
out
daa
or
es
lea
jne
pop
mov
out
lods
lock
call
lahf
in
data16
icebp
or
jecxz
mov
sbb
xchg
push
mov
xchg
es
bound
dec
aas
mov
or
arpl
or
out
sbb
pop
sbb
or
pop
lds
testl
mov
divb
pop
fisubrl
iret
pop
ds
pop
les
sub
divl
or
inc
ffreep
push
orl
rcll
cmp
aaa
movsl
cmp
inc
aam
jns
ljmp
adc
iret
movsl
lock
jle
pop
mov
lret
mov
ss
xor
cmpsl
sbb
jae
cmp
les
mov
and
push
fisttpll
pop
xor
sbb
into
int
movsl
adc
das
push
into
stos
push
dec
adc
jp
pop
mov
mov
sub
pop
push
ds
aaa
jge
mov
adc
dec
mov
outsb
push
scas
push
adc
sub
outsb
inc
movsl
aad
cmpsb
aad
jo
pop
icebp
ret
aaa
pop
add
rcrb
int3
sub
ret
inc
popf
int
mov
test
lea
sbb
arpl
fsubs
cmpsl
push
test
decl
testb
test
push
xor
push
rcrl
aaa
pushf
push
xlat
mov
pop
add
adc
push
into
popa
int3
mov
cmpsl
loope
sahf
jnp
cmpsl
lock
in
dec
push
mov
mov
sbb
fcom
inc
out
inc
insb
shlb
inc
dec
sbb
jecxz
add
in
mov
adcb
dec
movsb
add
sbb
out
or
loopne
push
and
aad
jp
sub
mov
pusha
inc
pop
leave
test
test
je
outsb
or
sbb
push
ss
jnp
vpcmpeqd
sbb
pop
arpl
push
jmp
sub
push
mov
push
sub
adc
dec
aaa
mov
sti
mov
outsl
cld
arpl
leave
dec
or
stos
stos
popf
inc
data16
xor
jmp
mov
call
outsb
jno
add
mov
push
push
clc
add
repnz
loop
push
mov
and
int3
cmp
pop
jg
xor
and
jne
mov
insl
cli
xor
imul
jae
pop
fistpll
hlt
fcmovb
nop
cmove
test
ret
jne
lret
lahf
mov
test
jle
sub
push
pop
in
fnstsw
out
push
leave
sub
jl
inc
out
add
pusha
cmp
add
test
inc
mov
inc
sbb
jg
mov
cmp
mov
adc
rcrl
sbb
cmc
int3
mov
std
cmpsb
or
and
or
inc
movsl
lahf
lahf
xor
jns
mov
in
jo
sub
movsb
cmp
lret
scas
push
xchg
in
fld
jg
sbb
add
imul
xchg
outsb
loope,pt
cmp
inc
lfs
cs
xor
stc
in
movb
out
shll
jo
add
jno,pt
sub
pop
sbb
pop
or
aaa
out
or
mov
sbb
jb
pop
fnstenv
push
nop
mov
dec
shl
mov
js
and
mov
xor
ficomps
nop
inc
push
xor
pop
xchg
cmp
dec
mov
and
enter
mov
inc
pop
imul
push
mov
sarb
dec
mov
in
data16
jecxz
icebp
sahf
scas
jp
add
inc
and
sbb
add
jle
xor
imul
fisubrs
cltd
inc
pop
adc
es
fistpll
adc
mov
push
aad
push
fs
dec
fiadds
cmp
stc
dec
jmp
lcall
or
lahf
sub
mov
out
cmp
push
xor
shll
sbbl
repnz
dec
sti
movl
mov
test
les
scas
cmp
sahf
inc
dec
and
in
and
mov
cs
dec
out
lcall
cmpsl
pop
adc
imul
stos
jge
jmp
and
in
daa
ret
sub
rcrb
stos
dec
dec
ret
and
fimull
add
aas
fisubrs
shrl
jecxz
in
aam
or
xchg
xchg
scas
add
mov
ds
mov
call
sbb
cmp
xor
jno
cli
inc
fldt
mov
pop
cmc
mov
std
xor
movsb
inc
hlt
pop
pop
rcr
mov
mov
out
pop
mull
add
sub
lock
int
in
je
lcall
iret
cmp
jne
test
fmul
cmp
dec
mov
and
mov
lcall
add
fcomps
sub
mulb
out
jae
clc
jns
insl
inc
ljmp
pop
push
mov
push
cmp
sbb
jecxz
sub
mov
xor
adc
sbb
repz
hlt
xchg
sub
and
inc
rolb
lfs
cmc
pop
lods
lahf
or
sahf
push
into
push
ret
sbb
mov
adc
mov
aaa
mov
call
mov
mov
and
xorb
popa
int
lock
arpl
orl
mov
sub
adc
xor
in
inc
inc
mov
loop
push
loope
and
repnz
or
lods
aam
push
mov
inc
xlat
add
jecxz
adc
cld
jle
mov
jno
inc
adc
addb
mov
xlat
pushf
cmp
mov
cmc
sbb
mov
int
icebp
add
add
dec
imul
mov
stc
mov
les
or
dec
mov
xor
movsb
les
in
mov
dec
fst
pushf
dec
cmp
or
cmp
in
out
dec
sub
xor
pop
pop
sub
pop
sbb
adc
push
les
push
push
sub
mov
fsubl
lea
jmp
inc
jmp
adc
aas
fnstenv
ficomps
and
loopne
add
rcl
jb
out
dec
jmp
cld
and
fwait
mov
pop
popa
icebp
hlt
mov
aaa
ljmp
mov
repnz
mov
xchg
dec
mov
out
shl
cltd
stos
jne
sbb
rolb
add
adc
stos
push
pop
wbinvd
jne
mov
jae
mov
xor
icebp
inc
inc
pop
and
cmpsb
call
xchg
adc
pop
stc
adc
fbstp
lahf
push
outsl
mov
inc
addr16
mov
mov
jmp
dec
xchg
cmp
incl
lahf
ss
inc
add
daa
xor
adc
cmp
mov
dec
or
jae
mov
and
pop
push
repnz
fidivrs
ss
and
ret
dec
sub
mov
cmp
pop
jbe
mov
loop
test
rep
dec
sbb
test
cld
or
and
iret
mov
push
faddl
outsl
push
lea
std
movsb
jne
mov
sbb
aas
imul
or
adc
pop
gs
stos
pusha
push
nop
hlt
enter
adc
pop
rcr
push
mov
es
stos
cmp
mov
mov
fs
mov
mov
or
mov
iret
cltd
pop
aad
outsb
insl
stos
fcoms
cmpsb
sbb
inc
ss
mov
push
or
mov
adc
and
push
mov
test
orb
or
shl
jbe
mov
pop
mov
sti
add
rcr
pop
repnz
ret
test
xchg
and
insl
test
sbb
lret
stc
mov
push
pop
notb
xor
imul
dec
mov
outsl
in
xor
loopne
mov
fsubrs
fs
pop
arpl
sar
dec
mov
cmpsb
dec
in
les
push
enter
xchg
push
push
lcall
add
into
pop
aam
lods
mov
mov
lock
add
pushf
enter
lret
popf
hlt
call
mov
ffree
call
xchg
jge
mov
mov
aas
sahf
push
movsl
jecxz
scas
cli
inc
and
outsb
jb
ljmp
cmp
jbe
lcall
push
bound
scas
push
pusha
dec
call
sub
mul
jbe
les
test
repz
push
mov
out
ficoms
mov
or
lahf
jl
jno
hlt
ja
outsb
cld
inc
test
xor
ds
xor
cmp
jg
pop
lcall
sub
imul
pop
cmp
pop
popa
insl
aas
mov
mov
lcall
mov
add
mov
xor
mov
aaa
mov
mov
mov
lret
jne
fs
xor
inc
mov
js
rcll
call
push
imul
sub
pop
xor
pop
add
jp
inc
sbb
enter
push
push
int
ret
cmp
scas
ja
jne
into
enter
iret
push
pop
addb
push
cltd
mov
cli
mov
dec
push
push
and
sar
and
inc
mov
or
jl
sbb
mov
and
inc
fcomps
arpl
sbb
cli
lret
pop
jo
jne
adc
hlt
jl
pop
push
xchg
add
jmp
ja
stc
add
mov
test
mov
inc
mov
cmp
push
pop
jo
pop
lret
ret
cmpsb
popf
jne
add
mov
cmp
mov
cmp
xor
pop
notb
stos
cwtl
std
das
xor
xchg
inc
xor
movsl
fwait
clc
test
xchg
sub
mov
loopne
enter
out
mov
les
jae
inc
in
pop
fnstsw
stc
scas
sahf
mov
arpl
stos
lea
popa
fidivl
pop
in
std
jnp
sbbb
lret
lret
aad
loop
xor
test
or
cwtl
cmp
push
xchg
mov
and
jmp
or
push
gs
es
sub
cs
and
ja
divl
mov
adc
mov
inc
add
fmul
and
and
sbb
add
dec
imulb
mov
roll
push
dec
lods
pop
sarl
rcrb
mov
cld
cmovo
scas
jno
mov
mull
test
rcrb
jge
xor
cmpsl
out
xchg
stc
cli
repnz
push
sbb
pop
imul
test
push
fcomp
imul
pop
aam
inc
sti
mov
cli
jbe
mov
out
rcrl
into
lahf
test
push
lods
sahf
sahf
stc
test
insl
lods
cmpsl
js
xor
test
mov
sbb
repz
ret
adc
mov
test
xchg
in
iret
test
xor
lods
dec
or
xchg
dec
insb
ja
loope
hlt
or
pop
lds
int3
addr16
pop
std
movsbl
sub
inc
mov
popa
adcl
out
mov
and
cmpsl
gs
outsl
dec
cmp
xor
xchg
jmp
jecxz
fstpt
inc
fs
fdivr
xor
mov
imul
daa
icebp
fs
mov
cwtl
repz
cli
pop
outsb
dec
xchg
in
lock
dec
or
add
fndisi(8087
outsb
jno
stos
xor
loop
adc
inc
jo
ja
inc
inc
or
mov
xchg
mov
pop
jg
scas
fcoms
mull
mov
test
popf
test
jno
roll
dec
mov
in
insl
jg
rcll
gs
mov
insl
xchg
xchg
fucom
stos
sub
or
sub
insl
movsb
es
hlt
and
add
mov
push
pop
jne
jmp
mov
fwait
stos
arpl
xchg
cld
in
out
pop
mov
sub
fwait
jo
mov
push
adc
or
int3
push
lea
es
gs
or
mov
mov
lock
mov
inc
hlt
pop
lods
outsl
mov
inc
jmp
jno
cs
sbb
icebp
mov
shrl
shll
test
sub
jne
in
xor
or
mov
mov
push
xchg
ja
dec
xor
in
jmp
mov
loopne
aad
outsl
repz
int3
sub
pop
or
inc
cmc
iret
xor
ds
lcall
lahf
pop
adc
clc
pusha
int3
mov
orl
mov
mov
and
imul
test
xlat
inc
mov
es
cli
add
arpl
xchg
lds
les
leave
pop
movsl
mov
pushf
mov
and
push
lcall
inc
jg
mov
adc
jge
dec
pop
sbbb
out
xor
dec
add
call
inc
out
lcall
jg
jge
mov
out
adc
and
mov
daa
dec
lahf
jnp
jmp
and
add
gs
jae
and
and
je
ljmp
push
cmc
imul
iret
jns
pop
sbb
sbb
jae
ljmp
ret
outsb
xchg
add
pusha
inc
adc
outsb
or
out
ret
in
jle
xlat
mov
adc
jo
xor
dec
adc
push
xchg
add
rclb
mov
pop
push
jb
adc
mov
inc
fcoms
push
daa
sub
mov
daa
dec
mov
outsl
xchg
jns
pop
movsb
pop
mov
test
sub
ret
inc
xchg
cmpsb
inc
and
aaa
jle
fstpl
sarb
test
sub
push
sbb
rorl
gs
fstl
and
or
mov
sahf
mov
sbbb
xchg
stos
shl
daa
lods
loopne
or
insl
inc
inc
mov
lods
mov
rorb
jge
jge
push
jp
mov
jne
jns
jnp
and
pusha
mov
orl
push
xor
cmp
jne
fists
jge
in
mov
and
rcll
fnsave
or
xchg
and
pusha
mov
push
lock
fwait
les
mov
xor
mov
sub
jge
sub
clc
lock
add
cmp
dec
repnz
sbb
in
fstps
out
cmp
cli
fst
xlat
cmp
scas
sbbl
shrb
ja
mov
cmp
out
repnz
repz
cmpsl
into
lcall
shll
adc
lret
ja
les
lods
lret
xchg
xchg
js
adc
pop
stos
mov
aad
lock
adc
sbb
xchg
push
sub
rorl
mov
push
roll
mov
sbb
xchg
cmp
ret
outsl
dec
dec
lret
lea
mov
sti
das
mov
mov
jno
imul
and
test
sub
jbe
or
push
add
xchg
dec
shl
out
or
test
je
test
adc
mov
fisttpl
sahf
arpl
scas
sub
mov
in
das
in
and
sub
dec
enter
jge
pop
dec
mov
mov
sub
xorb
pushf
insb
jle
inc
out
subb
aaa
or
mov
cltd
sbb
rcrl
jmp
xor
adc
xchg
push
adc
mov
ljmp
out
cmovg
add
shlb
sub
mov
mov
add
popf
cmp
lods
push
dec
js
xchg
sbb
inc
inc
push
ljmp
mul
pop
and
testb
xchg
test
xor
rorl
cwtl
inc
dec
jecxz
sbb
insl
aas
fsts
faddl
xor
inc
int
fisubl
cmp
rcrb
sub
inc
or
cmp
mov
int3
push
adc
pop
clc
mov
mov
call
adc
repnz
push
push
push
popa
cmpsl
jge
push
roll
std
dec
test
and
subb
hlt
lahf
daa
add
dec
jl
mov
xor
push
xchg
push
outsb
mov
jae
xor
add
lods
pushf
cmc
or
addr16
ret
bound
lret
xchg
mov
push
mov
xor
jp
into
push
sbb
add
sbb
stc
in
mov
and
rorl
sbbb
clc
cmp
pop
js
push
stos
pop
jecxz
insl
enter
xor
jns
mov
rolb
ret
aas
mov
jge
hlt
jl
sbb
cmp
mov
neg
mov
jg
mov
ret
jno
movups
in
leave
mov
or
cli
inc
dec
cli
je
lods
pop
std
or
shrl
iret
scas
xchg
ljmp
fwait
xor
mov
fcomps
jp
scas
push
xlat
mov
fs
jl
lods
ffree
mov
ret
test
dec
mov
lods
jo
insb
jns
out
or
hlt
xor
add
sub
dec
jp
add
out
in
xchg
adc
bound
xchg
push
xchg
add
push
icebp
neg
mov
mov
pop
xor
xor
movsl
sti
mov
jno
aad
inc
andb
jae
jl
xchg
add
mov
inc
iret
jmp
daa
shlb
mov
mov
mov
fsubrs
fimull
cmp
xor
mov
mov
jmp
fdivrl
dec
movsl
or
push
mov
pop
aad
mov
scas
cwtl
sbb
fldcw
int3
daa
les
and
or
mov
negb
dec
cmp
subl
loop
imull
mov
orb
push
aas
das
fcoml
aas
les
jg
inc
into
cmc
addr16
cmp
lahf
stos
ljmp
cmp
fs
push
je
stc
or
lahf
data16
jo
xorb
cwtl
cltd
adc
cmp
sub
lds
inc
fs
out
popa
push
and
cmp
outsb
sub
repnz
dec
or
adcb
jns
js
fiaddl
inc
and
lods
mov
fwait
dec
adc
rclb
adc
or
pop
pop
dec
dec
or
rolb
mov
xor
mov
mov
adc
repnz
pop
xchg
add
dec
rcll
and
not
adc
jnp
and
insl
mov
sub
sbb
xchg
mov
ficoms
lods
aam
or
fildl
lods
movsl
sub
insb
or
jg
jnp
movsb
inc
jno
outsb
stc
mov
mov
xchg
push
mov
ja
inc
jl
sbb
adc
fsub
adc
frstor
mov
cmpsb
xlat
or
loope
adc
mov
jge
cmp
pop
js
cmc
pop
xlat
fcomps
add
out
sub
push
ljmp
in
jae
mov
jo,pt
cwtl
cmpsl
imul
xchg
sub
add
stos
inc
sbb
push
cmp
sub
jbe
xor
int3
dec
push
add
loopne
xchg
in
xor
cmp
fstpl
ss
jae
pushf
in
data16
cmp
mov
jno
shrb
test
aam
xor
xor
push
daa
jecxz
mov
shlb
mul
pop
mov
inc
pop
sub
sub
mov
fisubl
mov
lea
out
inc
rcrb
scas
push
fdivrl
mov
jns
scas
dec
cmpsl
idiv
jl
mov
mov
adc
pop
xor
lret
cltd
fwait
add
fs
out
mov
pushl
sub
sbb
sarb
push
fwait
cld
out
sahf
rolb
aam
stos
mov
mov
stos
xchg
jg
aas
or
test
mov
push
sbb
mov
int3
mov
push
daa
test
das
leave
jbe
arpl
data16
mov
out
and
outsl
mov
xchg
enter
mov
and
in
stc
mov
mov
fcompl
lds
sbb
mov
outsb
push
fdivs
add
addr16
into
mov
mov
mov
imul
js
inc
enter
rcll
jmp
cmp
clc
popa
pop
int
mov
xchg
push
iret
fnsave
insl
xor
xor
dec
fcmovnu
in
shr
adc
push
fwait
jae
or
inc
data16
cmc
lret
cmpsl
clc
stos
scas
in
cmp
push
xchg
jmp
cmp
fnsave
jo
inc
into
sub
push
and
in
inc
jno
lret
push
sbb
jnp
int3
dec
mov
push
pop
addr16
ds
popf
push
xor
sbb
aas
dec
mov
incl
xor
xor
lret
xchg
pop
mov
mov
lret
inc
inc
test
pop
mov
lods
cwtl
lret
xor
cmc
xor
cmp
cmp
add
add
outsb
adc
fstpt
ljmp
mov
das
insb
xor
adc
xchg
inc
loopne
aad
adc
lods
xor
mov
ljmp
pop
jg
xor
pop
adc
pop
adc
js
sub
inc
out
mov
sub
test
xchg
test
enter
add
subb
and
test
in
in
insb
pop
sub
inc
xchg
shlb
pop
jl
test
iret
mov
das
xor
mov
insw
cld
sbb
stos
sti
xchg
mov
xchg
cmpsb
lea
sub
gs
dec
shrb
mov
movsb
repz
fsub
std
adc
add
shl
nop
outsl
leave
cld
fsubl
test
mov
sahf
scas
jecxz
jle
insl
ljmp
lds
inc
ds
lds
lret
aas
jnp
and
add
mov
and
push
pushf
jbe
add
pop
cmp
in
sub
push
xchg
push
iret
mov
jb
sbb
mov
jae
or
inc
mov
mov
adc
mov
out
fistpll
je
add
andb
sub
dec
fs
cltd
push
test
xlat
insl
add
loop
push
es
sub
inc
jecxz
gs
mov
into
and
dec
adc
and
test
addr16
jb
jae
fdivl
popf
nop
insb
loop
jecxz
aam
push
jnp
add
out
dec
lods
or
xchg
lods
sti
mov
fdivrl
or
int
and
cmp
sub
leave
scas
mov
pop
insl
popa
lock
xchg
add
cmpsl
testl
or
jne
xchg
pushf
cs
test
add
inc
lock
xchg
test
and
lock
sqrtps
push
mov
fwait
js
std
cmp
xchg
mov
das
inc
xor
dec
mov
mov
or
ds
and
and
cmpsw
jnp
jge
stos
gs
mov
pop
rcrb
subl
push
into
ljmp
mov
mov
xor
in
dec
or
outsb
adc
inc
push
fbstp
push
orl
push
addl
pop
arpl
pop
in
je
int
sti
jno
fcoml
data16
add
in
loopne
clc
and
adc
orl
and
sbb
outsl
into
inc
lds
cmp
inc
jmp
lret
andl
add
sbb
mov
mov
inc
fcomip
lock
xor
mov
pop
pop
movsb
sahf
ja
add
sbb
je
push
xchg
push
ja
jo
mov
adc
mov
push
imul
add
rcrb
pop
adc
dec
filds
push
pop
les
push
mov
aaa
in
cltd
lret
jns
leave
test
les
scas
pop
and
or
hlt
and
ja
bound
outsl
fdivr
repnz
in
sub
mov
cmpsb
sbb
les
mov
shrl
lock
test
imul
bound
push
aam
insb
lock
push
dec
pop
testl
clc
jae
push
dec
test
icebp
test
or
push
xor
push
add
pop
sbb
jmp
sub
fs
fistps
mov
out
addr16
icebp
rcrl
mov
adc
test
fcoml
push
ljmp
jnp
sbb
adc
inc
out
int3
popa
fsts
les
aaa
test
mov
fimull
sub
mov
cltd
mov
int3
adc
insl
xchg
xchg
fwait
stos
imul
dec
lock
lcall
pushf
adc
dec
in
imul
ret
xor
lcall
jae
cmpsl
stos
stos
xchg
and
sub
mov
pop
cmp
mov
mov
pop
cmp
cmp
mov
popa
jmp
adc
and
aas
jne
nop
popf
dec
sbb
pop
js
inc
lret
and
arpl
das
mov
sub
movsb
dec
pop
testl
xchg
pop
push
outsb
pusha
or
ljmp
inc
mov
xchg
mov
loope
mov
out
out
push
nop
sub
clc
mov
xchg
push
aam
jecxz
pop
cwtl
out
stc
inc
pop
xchg
popa
push
dec
or
mov
nop
jecxz
pop
pmaxsw
mov
push
js
jo
test
cmc
cli
lahf
xor
jno
pop
adc
cmc
stos
std
inc
jecxz
loop
mulb
pushf
aaa
ss
std
loop
in
fcomp
xor
int
es
cmp
cwtl
or
in
lahf
imul
lcall
ret
scas
clc
test
and
inc
xchg
xchg
dec
ss
imul
clc
nop
imul
scas
lret
xchg
scas
lret
lret
xorl
js
xchg
rorl
clc
mov
pop
lret
hlt
mov
mov
pop
sub
pop
and
cmpsb
movsb
pushf
sub
sbbl
or
xchg
cmc
cmc
je
push
jns
nop
repz
ljmp
and
ljmp
pop
push
jmp
fnstenv
hlt
icebp
xchg
lcall
outsl
addl
xchg
sub
ret
in
pop
push
je
mov
sbb
mov
mov
jo
andb
je
aaa
outsl
mov
mov
jle
or
pop
ja
je
negl
or
dec
cmp
cs
test
xchg
ret
loopne
dec
in
jl
mov
xchg
xor
je
pop
add
test
cld
jno
mov
add
lock
stc
sub
sarb
push
pop
lods
or
shll
xchg
push
rolb
adc
jge
cld
pop
jno
xorl
cmpsl
mov
iret
mov
adc
leave
scas
inc
xchg
std
pop
and
inc
dec
xchg
leave
adc
jne
or
int
aam
movb
repz
push
jno
shll
cmc
xor
stos
jl
sbb
xchg
addr16
add
out
testb
sbb
leave
push
mov
push
mov
shrl
enter
push
mov
add
push
jne
adc
mov
dec
inc
les
pop
fwait
ret
or
aas
push
jns
add
add
or
nop
lret
popa
out
fcoml
gs
je
cmp
cmpsl
in
adc
sahf
fs
cmpsb
les
inc
mov
mov
pop
cwtl
ror
notl
shrb
jmp
sbb
dec
dec
outsb
int
sub
lcall
idivb
imul
pop
cmpsl
add
sbb
inc
lret
outsl
sbb
add
popa
shlb
andl
mov
in
aad
les
jae
cld
ficompl
and
sbbb
inc
push
push
push
adc
iret
mov
jb
mov
scas
jle
addr16
scas
leave
pop
and
inc
jmp
pop
push
in
cli
push
mov
clc
push
loopne
cmp
sub
mov
push
es
or
xchg
cmp
int3
xchg
adc
je
dec
and
xor
sti
pop
mov
lods
push
stos
out
hlt
outsl
outsb
and
inc
cmp
leave
sub
ja
flds
ljmp
cld
cmc
call
jle
fstpl
clc
cmp
mov
or
sahf
pop
out
inc
and
pop
sahf
sub
xlat
movsb
cbtw
jae
push
xor
fstpt
inc
dec
in
bnd
or
outsl
push
roll
mulb
push
ficoms
movsl
jle
js
push
ds
shrl
mov
fbstp
push
popf
negl
clc
lea
int3
dec
test
and
jp
inc
push
out
xor
scas
cwtl
mov
pop
cmp
or
sarb
xchg
dec
mov
fildl
xchg
sub
cmpsb
in
imul
fsubrl
scas
sbb
mov
sub
push
inc
test
stos
dec
and
xor
loopne
js
or
in
sbb
std
outsl
xor
into
imul
adc
mov
unpckhps
aam
into
fisttps
shlb
in
jae
cld
call
mov
adc
scas
stc
imul
lock
cs
push
xchg
inc
loope
mov
sahf
je
sbb
or
or
iret
gs
push
das
inc
in
ds
jb
pop
or
sub
cli
pop
xchg
xchg
mov
and
xorps
jl
and
xchg
gs
insb
add
sbb
pop
pop
mov
jmp
lods
in
outsl
lcall
pop
gs
idiv
ja
test
repnz
and
fmuls
push
loop
fdivr
sub
mov
fsubrp
loopne
dec
jge
sbb
inc
jo
dec
mov
pop
arpl
adc
inc
adc
xchg
sbb
jmp
fidivl
mov
jne
jno
adc
hlt
iret
pop
ret
jb
leave
js
mov
xchg
dec
lcall
mov
mov
lods
gs
xor
in
inc
addr16
outsb
sbbl
clc
in
pusha
add
lock
sbb
lcall
loop
push
fdivrl
repz
jne
mov
fnstcw
es
mov
adcl
and
pop
jge
add
sahf
mov
lods
inc
adc
psubsw
sbb
insb
loop
pop
loope
mov
mov
xor
inc
push
aas
dec
inc
arpl
das
das
mov
mov
sub
andl
xor
push
andb
inc
loop
jecxz
lods
and
adc
mov
popa
movsl
jo
or
mov
fbstp
add
mov
test
in
pop
xor
shlb
mov
fnstsw
or
xor
out
pop
popa
rorb
cld
sub
dec
rcrl
cmc
pop
loope
ds
xor
lcall
sbb
adc
add
inc
inc
imul
dec
mov
cmpl
imul
adc
or
pop
sub
mov
imul
imul
dec
scas
aaa
in
lods
ss
pop
orl
loope
cmp
jmp
dec
cli
push
push
call
mov
mov
ret
inc
js
pop
fwait
add
das
mov
fisttpl
movsb
push
cwtl
mov
lods
loopne
sbb
ja
shrl
lret
insl
cli
jns
mov
mov
pop
loop
push
into
xor
sbb
pop
addr16
ffreep
aas
dec
addl
cmp
and
cli
inc
sub
pusha
push
bnd
jg
lods
test
movsl
adcl
dec
cld
xor
clc
push
test
out
and
add
adc
leavew
rolb
mov
je
cmp
cltd
sub
sub
mov
cmp
lea
pop
mov
cmc
shrl
pop
mov
aas
xchg
or
inc
stos
jnp
xor
sub
fnstenv
push
fidivl
xor
inc
dec
mov
mov
sub
sub
pop
call
adc
jge
iret
je
nop
loop
sbb
jl
push
pop
test
cs
push
xor
xchg
sub
or
xor
lock
mov
xchg
cmc
lahf
mov
icebp
cltd
push
lret
movsb
xchg
or
test
mov
repz
out
push
jno
icebp
out
fs
sub
mov
daa
jmp
jl
loope
xor
mov
xchg
ret
inc
jg
add
cld
aaa
data16
push
sarl
out
push
cmp
addr16
aaa
sbb
or
insb
inc
loopne
es
sub
ret
cmpsb
loope
sbbb
xor
mov
test
in
fdivrs
xchg
xchg
xchg
leave
mov
mov
jno
adc
dec
ficoml
in
lock
adc
or
cmc
dec
out
lret
xchg
add
add
sub
pop
push
sbb
mov
ljmp
adc
mov
test
adc
fists
push
mov
adc
shlb
hlt
mov
sub
test
mov
xchg
mov
cmp
aad
xchg
lods
xchg
out
ret
adcl
inc
inc
jo
jo
ret
cld
sbb
stos
sbb
loope
add
sbb
shl
leave
jae
int
push
fisubs
add
push
inc
mov
dec
imul
int
lahf
jo
inc
lock
xchg
jp
sub
lahf
mov
pop
jp
push
add
add
lret
mov
mov
mov
lret
js
repnz
add
loope
outsb
lret
xchg
jb
push
cmp
cmp
add
cs
mov
pop
jno
aaa
add
out
ljmp
mov
in
or
rcr
dec
xor
lds
testl
sti
fdivrs
stc
mov
outsb
cmpsl
mov
or
daa
jb
jecxz
mov
cmp
stos
stos
outsl
or
jmp
xchg
es
out
push
pop
jbe
das
cmp
inc
negb
add
jnp
dec
out
jns
mov
and
enter
aad
int3
out
sbb
inc
sub
and
gs
inc
dec
cmp
aam
dec
push
xchg
lahf
lods
daa
movsb
dec
call
mov
or
das
ljmp
or
sub
repz
push
mov
inc
loope
mov
pop
cli
pusha
inc
bound
lea
repnz
loop
mov
jmp
insb
dec
test
push
sbb
jns
sub
pop
movsb
rcll
push
xor
fistpll
sbb
fldl
mov
lock
cmpsb
cmp
inc
hlt
lahf
lahf
idivb
ret
sub
cwtl
ljmp
or
cs
daa
pop
jmp
in
out
addr16
in
xchg
mov
ljmp
xchg
and
jae
jb
and
dec
in
jns
scas
push
jecxz
mov
call
add
sbb
xchg
mov
dec
jb
mov
push
mov
adc
push
sub
cmp
sarl
test
bound
push
lcall
fstps
pop
insb
dec
mov
test
fsts
jne
stos
lea
inc
pop
mov
lret
std
mov
pop
out
aas
pop
mov
mov
je
jno
push
cmc
and
sub
push
test
cmp
inc
push
rorb
inc
xchg
xchg
jno
shl
inc
test
push
popf
jg
lcall
call
pushf
mov
lcall
lods
popa
mov
hlt
cmp
rcrb
jg
mov
sbb
inc
dec
mov
ss
ljmp
xlat
fwait
arpl
lea
insb
mov
xchg
jno
shrl
cmp
mov
out
jl
scas
pusha
scas
mov
mov
movsb
adc
add
xor
hlt
das
adc
cmp
mov
and
xchg
jno
dec
ljmp
cmp
fucom
aam
in
cltd
mov
push
mov
lret
pop
sbb
scas
repnz
xchg
shrb
in
and
fs
mov
lods
out
inc
out
jmp
jns
xchg
mov
ljmp
pop
jp
sbb
jb
xor
xor
cld
or
stos
xor
cmp
mov
pop
out
cmc
xchg
negb
dec
lcall
cmp
pop
lea
nop
int3
xor
ljmp
cmp
jge
inc
pop
int
mov
jg
and
pusha
lahf
stos
fnstcw
int3
mov
aaa
pop
or
xchg
lret
jl
rolb
pop
push
sbb
lds
sbb
jae
xor
xchg
xor
hlt
mov
or
mov
cmp
clc
mov
ret
adc
xchg
sub
ds
push
decb
scas
in
jns
and
xchg
dec
cwtl
mov
add
mov
push
cs
bound
sbb
inc
jp
scas
cmpsb
inc
incb
xchg
fcmove
test
add
and
out
cwtl
mov
dec
or
lcall
lret
sbb
cltd
fdivrs
cmp
sahf
or
pop
adcl
fdivs
mov
mov
loopne
sahf
outsb
in
jb
xor
add
es
cld
hlt
mov
into
push
sarl
add
in
inc
dec
test
out
cs
aad
sti
repz
std
or
jp
add
pop
and
mov
cwtl
push
jge
aaa
add
out
in
int3
jnp
inc
sbb
popf
pop
sub
adc
icebp
leave
push
sar
lods
sub
mov
je
sub
cli
jbe
sub
movsb
jg
add
push
mov
sbb
scas
jl
addr16
cmc
rcrb
add
inc
dec
rolb
xchg
push
push
aas
cmp
in
mov
jmp
iret
sub
xor
mov
sti
or
mov
divl
int
fwait
ja
dec
sub
mov
loope
push
repnz
ret
cmp
mov
sbb
stos
dec
loop
bound
shrb
jmp
jmp
or
insb
aam
or
inc
dec
call
sbb
mov
ret
and
or
ljmp
into
notb
fwait
mov
ja
outsl
ja
inc
pop
cltd
lcall
call
shr
pop
lahf
mov
ja
jg
insb
mov
cli
cmp
sub
mull
into
sbb
xchg
idivl
bnd
clc
jb
mulb
hlt
fidivrs
lock
mov
popf
lods
jge
out
lods
inc
xor
cmp
negb
int
jb
enter
fstl
and
popa
push
mov
mov
or
pusha
adc
in
inc
inc
and
cltd
sbb
bound
and
repz
pop
add
div
cwtl
mov
dec
call
cmp
inc
xchg
add
js
iret
ss
outsb
sahf
push
jo
sub
fnstenv
sbbb
rorb
idiv
sub
cmpsl
adc
mov
sahf
fadds
mov
and
ss
loope
adc
scas
push
dec
shlb
js
jp
dec
int
mov
sbb
stc
arpl
addb
inc
fxch
pop
mov
sub
add
and
dec
in
pop
inc
push
rcrb
sarl
jg
test
jns
mov
movsb
pop
aam
sub
mov
cmp
lds
ret
lret
int3
les
aas
adc
cmp
popf
repnz
imul
sbb
jns
adc
inc
mov
xchg
sub
cmp
xchg
mov
out
loope
cmp
shlb
cmpsl
jnp
push
enterw
sub
dec
lret
js
sbb
push
pop
testb
imul
cltd
push
or
fs
clc
adc
movsb
push
xchg
pop
dec
mov
dec
dec
and
sbb
lock
jp
mov
inc
pop
daa
push
adc
mov
fists
nop
xchg
mov
mov
sbb
jecxz
movsl
cmc
pop
pop
adc
fstps
lds
bnd
push
cmp
std
pop
or
dec
rclb
ret
lock
clc
loop
mov
stc
mov
mov
bnd
outsl
test
xor
iret
pushl
sbb
outsb
scas
outsl
mov
cmp
jo
loop
ret
out
pop
add
mov
pop
jnp
mov
fmull
stc
pop
mov
fmulp
xor
sbb
jmp
mov
dec
loop
cmp
jmp
mov
mov
mov
outsl
adc
push
je
jae
js
stos
mov
out
aas
add
repz
fimuls
cli
inc
mov
out
dec
test
sbb
pop
loop
jl
mov
mov
jle
push
sub
jle
jge
jmp
or
dec
cmp
and
add
xor
adc
pop
mov
in
insb
xchg
fs
movsb
inc
in
lea
out
inc
bnd
add
je
daa
scas
andl
adc
ret
cmc
das
loop
jo
pop
out
pop
pop
stos
sbb
in
cmp
lcall
aas
pop
pop
jne
mov
mov
imul
xor
mov
sarl
jae
or
loopne
xchg
sub
mov
std
test
sbb
repnz
call
bound
mov
pop
dec
pop
mov
or
sbb
mov
aas
addr16
loope
pop
ffree
mov
xor
mov
jmp
jnp
mov
inc
xchg
add
push
xor
or
hlt
test
and
fbstp
inc
clc
pop
push
cmpsl
jmp
dec
mov
pop
outsb
mov
cmp
rcll
inc
add
nop
gs
leave
push
mov
cmp
pop
lds
xchg
test
test
add
push
xor
pop
loopne
subb
ss
sbb
popf
mov
xor
andb
iret
pop
xchg
and
ljmp
es
shlb
shlb
pop
repz
and
jl
movsl
lods
xchg
sbb
in
push
cld
insb
enter
shlb
leave
lods
mov
or
mov
shrb
push
rcrb
loop
adcl
std
les
pop
or
dec
jl
cmp
pop
orl
jbe
xor
idivl
mov
outsb
mov
cmpsl
sbb
ds
loop
mov
adc
icebp
dec
cli
jb
shll
popf
adc
repnz
in
sbb
cmc
lret
dec
pop
mov
outsl
scas
movsl
sub
sub
xchg
and
xor
cwtl
sahf
outsb
test
and
mov
pushf
movsb
fucom
inc
js
dec
xchg
pop
add
cmpsb
cmp
stos
jno
jmp
sti
aaa
mov
mov
fwait
arpl
dec
addr16
or
data16
xchg
add
stc
jge
xor
pushf
arpl
out
jmp
sti
lcall
mov
aam
out
sub
xlat
in
cli
cwtl
mov
jmp
stos
mov
mov
loop
or
xor
push
scas
addb
popa
call
push
xor
shl
xor
scas
inc
in
cltd
iret
xchg
jecxz
mov
xor
dec
and
mov
dec
inc
mov
sub
jmp
lods
push
pop
sbb
test
xchg
mov
in
nop
dec
lds
push
aas
std
les
out
adc
pop
pusha
sarb
jle
lea
dec
pusha
ret
push
leave
mov
rorl
test
repz
cld
and
xchg
lahf
mov
jb
lods
fidivrs
nop
cli
sahf
dec
mov
pop
xchg
incl
push
sahf
pop
xchg
mov
cmpsl
aaa
outsb
adc
mov
sbb
or
or
mov
xchg
xchg
or
jnp
popa
jne
jb
mov
adc
cmp
mov
popf
sbb
inc
shlb
frstor
pushl
inc
es
rcll
inc
and
pop
xlat
jo
mov
in
fsub
mov
lcall
stc
call
sarl
repz
jo
arpl
jbe
xchg
push
popa
loope
mov
and
xor
xchg
mov
cmpsl
pushf
lahf
pop
inc
cmpsl
rcrb
pop
push
lret
ret
jb
cli
fcomi
lods
es
mov
jo
pop
movsl
mov
scas
daa
subb
icebp
cltd
pusha
out
scas
xor
arpl
fwait
subb
mov
mov
or
inc
pop
mov
ret
fwait
in
sahf
nop
rorb
stc
dec
xor
sbb
jo
inc
jp
cmp
into
stos
pop
daa
push
adc
adc
es
add
clc
jb
inc
jg
data16
jbe
cmp
mov
pop
stos
loopne
je
in
mov
xor
out
les
out
ficomps
mov
iret
lds
es
sub
stos
ficoml
shll
xchg
mov
cmpl
sbb
loopne
lret
jo
lds
mov
pop
pshufw
arpl
fldenv
call
insl
jg
cmp
mov
pop
test
fs
jns
popa
or
cmp
cmp
loop
fstpl
dec
ret
call
sbb
add
aam
cld
fbstp
add
mov
pop
push
xchg
sub
jae
push
or
data16
stc
es
or
jo
sbb
popa
mov
add
inc
xchg
cmp
sub
push
sub
mov
add
repz
int3
movsb
xchg
mov
or
outsl
lcall
insl
sub
dec
scas
jae
sbb
leave
clc
or
jecxz
mov
into
mov
mov
nop
idiv
adc
out
push
data16
pop
sub
test
popf
bound
xchg
movsb
fcomps
xchg
decl
mov
push
mov
cmp
mov
sbb
out
sub
sbb
push
add
jp
out
mov
stos
jge
ffreep
sahf
push
test
repz
fwait
push
push
mov
dec
xor
daa
sub
mov
ret
jg
ljmp
mov
mov
mov
imul
frstor
or
cld
loope
inc
mov
sahf
pop
cmp
fcompl
adc
insb
push
fdivs
xchg
fstl
pop
and
stos
and
lds
movsb
add
pop
inc
loopne
subl
lods
sarl
movsl
aam
dec
lods
scas
lret
xchg
pop
js
outsl
mov
inc
adc
cmpsb
mov
setae
fwait
pusha
cmp
pop
cmp
test
sub
jecxz
pushf
fwait
adc
hlt
popf
pop
adc
sarl
ljmp
dec
lcall
shl
loopne
mov
sbb
jae
lods
or
xchg
shll
repz
mov
cmpsl
outsl
or
movl
negb
cmp
lahf
xchg
or
push
mov
xor
loopne
rcrl
dec
imul
andl
sbb
divb
mov
cwtl
push
fadds
adc
mov
cltd
sub
push
ja
xor
call
push
sbb
or
fsubl
mov
xchg
add
rcr
punpckhwd
jp
push
std
cmp
and
daa
jge
scas
aas
adc
test
jns
or
mov
std
rcl
ficomps
pushf
lds
lock
xlat
ljmp
ret
mov
mov
arpl
sbb
pop
es
fdivs
push
push
inc
sub
and
lds
dec
mov
popa
sahf
xor
sub
inc
pop
mov
pop
ret
fcmovb
lods
lock
imul
pop
jne
pop
or
jb
cmpsl
jo
sarl
imul
jbe
push
je
daa
mov
xor
imul
pushf
mov
outsl
or
pop
or
mov
xlat
cld
bound
daa
jno
jle
fdivs
ret
jbe
or
and
rcll
in
aam
xlat
ficomps
pop
sti
mov
fists
test
movsl
cltd
pushf
jmp
dec
pop
in
fisttpl
inc
out
add
lods
repz
mov
lret
sbb
and
push
add
pop
out
mov
inc
mov
shlb
xor
test
push
adc
inc
movsb
add
jle
mov
das
test
test
hlt
rclb
pop
xchg
xlat
adc
hlt
sbb
lcall
ds
fdiv
in
dec
mov
fsubs
pop
faddl
iret
ret
jno,pt
iret
in
pop
outsl
xlat
ret
inc
jne
and
dec
cmc
jp
mov
outsb
stc
mov
add
fldenv
adc
fwait
inc
xor
mov
and
ss
sbb
aam
fsubl
jne
pop
mov
and
stos
shrb
mov
mov
testl
lods
test
test
jl
cmp
out
xchg
je
mov
repz
nop
cli
shl
cmc
insb
pop
sbb
pop
mov
fstpl
shl
mov
dec
shrl
push
jno
pop
ror
outsb
sub
push
in
je
or
and
or
xchg
fdiv
add
or
or
pop
add
jge
dec
xor
push
lret
lea
mov
xchg
inc
lahf
push
in
mov
pusha
xchg
fdivs
inc
test
cltd
jb
pop
inc
inc
adc
cmp
jp
mov
clc
fisttpll
pop
cs
xchg
and
std
pop
adc
jb
clc
ja
inc
sbb
enter
cmp
cmpb
sbb
xchg
cmc
sbb
and
mov
aam
pop
sbb
loop
sub
push
pop
fisubrs
push
xor
aam
dec
gs
ficoms
dec
inc
mov
outsb
pop
out
adc
sbb
mov
scas
ja
or
sbbb
or
jmp
ret
mov
cmpb
test
cld
js
dec
cmp
and
pushw
cli
scas
ret
les
mov
divb
fsubr
jmp
xchg
dec
mov
xor
sbb
or
mov
jge
mov
push
or
push
ja
cmp
in
inc
mov
dec
push
dec
call
fxam
mov
and
cmp
push
push
xchg
jg
add
je
leave
adc
ljmp
push
sti
mov
ficompl
push
push
mov
pop
sbb
xchg
pop
addl
movhps
loop
lret
mov
sti
addr16
inc
popf
pop
pshufw
add
jg
add
leave
ret
jo
sbbl
loope
ljmp
xchg
imul
inc
and
out
movsl
movl
jo
lock
in
sbb
add
pop
add
pop
push
or
rcr
lock
lea
jp
roll
sarb
std
in
cmp
je
jle
sahf
mov
jnp
dec
inc
pop
cmp
cmc
pop
sarb
stos
dec
popa
lds
dec
jno
mov
inc
push
mov
loope
sti
add
loope
test
sub
int
les
aaa
mov
and
xchg
sbb
popl
ret
adc
push
daa
or
and
out
adcl
sbb
test
leave
subl
and
inc
rol
test
in
subb
mov
xlat
movsbl
int
scas
loop
mov
jb
sarb
mov
and
sti
mov
or
pop
push
sti
sbb
in
call
push
sub
dec
jmp
jmp
cmpsl
mov
imul
imul
pushf
insl
enter
jge
and
aas
push
ret
or
push
int
lods
add
xchg
mov
fisubl
in
inc
ss
dec
sbbl
lds
dec
in
mov
rcrb
lods
scas
das
stos
add
sbb
addb
jae
pop
pop
jmp
mov
jle
xchg
rol
push
inc
inc
mov
mov
icebp
test
shrl
xor
out
jbe
xchg
dec
xor
xchg
push
ret
les
mov
xor
jns
imul
sub
adc
mov
mov
stos
imul
jge
xor
inc
cmp
mov
and
mov
mov
inc
mov
xor
dec
jnp
dec
cld
dec
jbe
inc
dec
mov
sbb
and
inc
pusha
mov
gs
inc
repnz
das
mov
jnp
and
loope
mov
sub
adc
xchg
movsb
sub
mov
out
push
test
mov
popa
loope
lods
stos
addr16
imul
lea
cs
adc
xchg
lcall
mov
fildll
cmp
dec
loope
xchg
jb
mov
add
in
addb
add
add
in
jnp
mov
add
shlb
loop
pushf
xlat
lret
mov
xchg
sub
rcll
inc
lcall
jo
lahf
mov
fcoms
das
popf
adc
push
pop
movsb
mov
rclb
or
mov
stos
mov
xor
test
insl
sub
add
lods
push
loop
js
test
jne
mov
xchg
negb
es
sbb
stc
lds
dec
mov
out
mulb
mov
mov
ja
popa
cmp
jns
sbb
call
add
arpl
icebp
lds
js
ljmp
cmpsl
icebp
insl
jge
inc
sti
lea
push
test
and
jl
mov
jmp
jl
add
insl
stc
jl
repz
xchg
pop
es
stos
aas
shl
adc
cmp
insl
ja
jo
cmp
mov
sbb
push
pop
jae
inc
add
xor
xchg
adcb
cmp
fimull
sbb
movsb
xchg
lret
xchg
sub
clc
insw
push
mov
pop
add
mov
sbb
cmc
mov
lock
or
icebp
icebp
ss
mov
clc
mov
imul
stos
dec
push
mov
bound
hlt
xchg
shrb
pop
cwtl
jnp
pop
punpcklbw
xlat
pop
or
enter
inc
cmpsl
mov
jbe
ja
fiaddl
sahf
or
mov
mov
push
sti
in
xor
adcl
xor
inc
rcl
ret
push
jae
mov
bound
dec
dec
pusha
mov
loope
lcall
andl
jne
mov
xorl
icebp
js
inc
jmp
test
cltd
cmp
xchg
or
jne
or
loopne
xlat
pop
and
rcrb
or
push
adc
cltd
testb
push
out
jb
mov
testl
sti
scas
jae
popf
adc
jg
out
inc
inc
and
mov
ds
pop
shll
mov
lret
sahf
jmp
mov
cmp
fstpt
dec
mov
mov
adc
push
and
xor
ljmp
cld
push
fildll
jno
mov
mov
imul
subb
and
adc
xor
push
cltd
pop
push
xchg
push
mov
adc
inc
mov
das
cwtl
loop
fs
ds
cltd
sub
ret
or
inc
cmp
imul
push
out
es
cmp
mov
mov
cmc
test
mov
shrb
push
lds
inc
mov
add
insl
aam
xor
unpckhps
cltd
mov
cmp
add
inc
inc
mov
dec
sbb
cmp
pop
cmpsb
cld
ljmp
mov
cmp
jbe
or
dec
rorl
dec
push
lcall
mov
xchg
push
mov
inc
out
insl
lock
inc
mov
dec
arpl
cs
dec
push
xchg
xchg
cs
shlb
ljmp
and
mov
pop
sbb
add
scas
add
pop
insb
mov
int
das
inc
sbb
iret
jnp
inc
fcmovnb
mov
lods
daa
scas
push
mov
repnz
xor
mov
loopne
sbb
mov
lods
push
push
xchg
mov
mov
dec
loopne
jb
and
sarl
pop
lds
push
mov
lret
gs
mov
cmp
dec
fiadds
in
ret
inc
jae
dec
mov
mov
movsb
sub
lea
push
scas
cs
mov
out
jge
ds
outsl
cmp
push
xchg
popf
inc
cmc
popf
cmp
adc
sbb
mov
mov
ja
dec
ret
push
fwait
sub
mov
push
mov
pop
sarl
lods
cmp
ret
jecxz
or
adc
std
xchg
cli
cmpsl
mov
and
loopne
aaa
push
cmp
xchg
les
ja
fldt
aam
and
lret
mov
test
daa
mov
dec
ss
mov
mov
arpl
mov
clc
add
outsb
push
out
in
fildl
jne
pop
push
out
add
jecxz
mov
push
cmp
fistl
cmp
jle
les
loope
pusha
roll
inc
in
sarb
out
adc
and
insb
mov
push
dec
add
out
enter
adc
add
xchg
roll
or
daa
and
add
push
ror
adc
mov
cmp
sahf
loopne
mov
push
popa
ljmp
mov
in
sub
inc
mov
andl
sbb
pop
inc
loop
addr16
mov
es
imul
and
cmp
push
or
jno
cs
lret
clc
xor
cmp
inc
jb
movsb
test
push
das
roll
scas
xor
mov
sbb
sti
pop
mov
shrl
ret
inc
jge
sahf
fldl
xchg
icebp
daa
mov
in
stc
mov
pop
xor
mov
pop
cmc
dec
stos
pop
cmp
xchg
fisubrl
add
jg
xor
imul
das
movsl
outsl
fldl
mov
icebp
mov
lock
and
jmp
aad
dec
lret
test
xchg
outsb
jle
and
loop
rcrb
and
cltd
mov
arpl
insb
mov
mov
leave
sbb
push
test
out
mov
rorb
ret
shrl
out
add
dec
inc
nop
hlt
aam
xor
std
int
divb
ret
jge
hlt
loop
and
out
add
inc
adc
push
push
fsub
inc
negl
and
sub
xor
decb
imul
call
cltd
inc
pusha
mov
stos
ja
pop
loop
dec
out
fildll
dec
mov
jb
pop
pushf
jl
add
pop
test
sbb
pop
xlat
in
in
dec
cmpsl
cltd
popa
sub
xorl
stos
out
pop
lods
inc
gs
scas
negl
ss
inc
dec
daa
jns
scas
rcr
mov
adc
mov
mov
push
mov
fwait
xchg
mov
or
pop
or
and
push
mov
in
adc
call
add
scas
inc
dec
lret
pop
mov
ljmp
sbb
fcoms
pop
xchg
dec
fsubrl
and
scas
aad
mov
clc
imul
ds
sti
leave
add
push
mov
mov
rclb
test
adc
mov
ret
pop
cs
cmp
dec
mov
cmpsl
sub
mov
add
xor
sbb
jo
sub
in
mov
aas
scas
imul
into
pop
dec
dec
push
mov
insl
nop
mov
and
or
cmpsb
int
xlat
lods
stc
jp
addr16
add
jnp
outsl
xchg
sahf
jge
out
pop
adc
and
das
jmp
outsb
adc
shll
sub
shr
and
cmp
xchg
stos
inc
xchg
aas
xchg
pop
icebp
lret
popa
push
add
add
pop
mov
call
out
movsb
leave
push
pop
imull
and
jmp
push
push
fldcw
cmp
push
sub
cmp
jge
out
xor
xchg
mov
ljmp
pop
mov
add
into
mov
addr16
nop
xor
imulb
test
pop
data16
lret
dec
lods
pop
divb
fwait
dec
andl
fbld
cmp
popa
pusha
and
inc
xchg
lea
popf
mov
jb
dec
push
push
and
int3
shll
std
ret
mov
mov
scas
adc
mov
jne
lret
imul
jbe
fmull
pop
ud0
cmpsb
loopne
or
mov
out
popf
mov
in
lods
mov
push
fildl
movsb
repz
inc
adc
add
dec
inc
pop
push
xchg
adc
outsb
adc
pop
popf
xchg
enter
jp
addr16
mov
mov
aas
std
add
insl
mov
cmp
add
sahf
jmp
in
gs
sbb
test
testl
sub
pop
inc
test
inc
into
mov
xchg
jne
sbb
push
insl
xor
or
movsb
in
inc
in
orl
dec
sub
fnstcw
cwtl
popl
add
lods
xchg
push
xchg
mov
movsl
call
xor
adc
aam
xor
outsl
rol
movsl
sbb
lcall
push
mov
imul
or
cmp
test
dec
out
pop
test
push
pusha
das
adc
xlat
mov
xchg
pop
dec
iret
push
xchg
fcmove
inc
push
mov
daa
mov
pusha
mov
jns
push
cmpsl
hlt
xrelease
xor
jno
mov
jnp
popf
or
mov
mov
pop
loop
inc
push
adc
cmpsl
xor
popa
movsb
mov
incb
iret
mov
push
mov
push
loopne
pusha
mov
out
and
xor
sahf
into
pop
inc
cmp
call
pop
movsl
inc
jmp
cmpsl
in
fstps
loopne
ja
fcompl
in
outsb
sbbb
pushf
out
repnz
push
mov
fnstsw
scas
rclb
add
pop
inc
icebp
repnz
jnp
push
loop
imul
pop
cli
loop
dec
inc
adcl
xor
fcmovb
sbb
adc
stos
mov
and
xchg
lcall
fiaddl
lods
dec
mov
or
cltd
xchg
add
fcmovnu
mov
jmp
idivb
sub
out
mov
add
pop
jge
adc
insb
adc
sbbl
mov
lods
shlb
ret
fucomp
int
stos
inc
pop
mov
pop
ja
xchg
test
dec
fiadds
inc
xor
mov
fcmovnu
xchg
out
push
mov
mov
cmp
mov
cmc
aad
pop
adc
cmpsb
add
fstps
pop
stos
ror
cmp
cmp
inc
inc
shlb
pop
int3
xchg
fisubrl
jns
push
jge
loopne
ret
out
je
inc
shlb
push
sbb
popf
xchg
jecxz
clc
xor
scas
jmp
or
les
adc
jl
sub
rcrb
les
out
les
loopne
out
adcb
mov
sbb
ss
jl
xchg
cld
rcr
lahf
dec
int
out
jp
in
insb
mov
jno
jle
sbbb
cmp
fildl
mov
cmpsl
sub
mov
add
shlb
test
loope
or
enter
cmp
sub
pop
lret
pop
cmp
leave
out
cltd
repnz
cmc
test
dec
cmp
add
cs
xchg
fldt
mov
std
xor
xlat
pop
mov
roll
fs
imulb
nop
jmp
cmp
lret
call
dec
mov
cltd
mov
cmp
inc
pop
mov
call
in
mov
jae
jg
aas
adc
inc
mov
adc
enter
aam
add
int
or
jno
fisubrs
and
mov
cs
and
dec
lahf
popf
mov
in
stos
js
jo
test
xchg
push
mov
sbb
stc
adc
sub
pusha
pop
ja
pop
or
inc
movsb
out
lahf
mov
fildl
fstpl
pop
jge
cmpsb
dec
jae
mov
inc
or
add
push
sub
xchg
ret
add
dec
xchg
ds
test
fdivl
jg
cmc
or
add
push
cli
or
dec
push
sub
inc
insl
and
xchg
clc
sbb
sub
push
or
std
inc
cmp
sub
or
add
mov
rorl
inc
cmp
mov
dec
imul
cwtl
scas
fucom
pop
adc
or
cmp
lcall
dec
dec
mov
jne
int3
insl
adc
stos
out
push
rol
stos
loop
out
sbb
add
lahf
sbb
add
outsb
mov
and
call
sarb
inc
fs
adc
jbe
mov
xchg
pop
push
fsubs
cmp
fisubs
push
cwtl
jmp
sub
fmulp
test
xchg
insb
push
jns
test
mov
mov
jmp
jnp
nop
cmc
xlat
xchg
pop
iret
lret
lods
es
pop
mov
cmc
xor
lea
sub
das
dec
rcr
pusha
sbb
inc
cs
addl
xchg
jl
out
aad
dec
pop
lret
mov
aam
fnstsw
push
mov
hlt
lods
or
lock
in
inc
mov
shll
or
nop
mov
aas
dec
push
sbb
sub
push
mov
hlt
push
aam
pop
push
adcl
rcrb
stc
insl
clc
inc
push
icebp
xor
xor
adc
aam
sbb
xchg
sbb
rcrl
push
lret
lahf
push
loopne
xor
aam
xor
mov
inc
sub
sub
data16
leave
outsb
sbb
movsb
imul
jmp
arpl
pop
add
jae
scas
add
jnp
scas
out
xor
cmpsl
mov
push
pop
fnstcw
mov
stos
repz
push
push
xor
ljmp
cmp
push
mov
ret
pop
mov
arpl
and
test
mov
jne
shrb
jne
pop
arpl
loopne
rcl
jno
pushf
cmp
test
movsb
cmp
sub
ja
add
jae
neg
push
out
call
push
adc
push
mov
cmp
inc
xchg
mov
je
jo
cmc
cmp
sbb
pop
mov
fs
test
inc
bound
push
inc
stc
xor
jb
cmpsb
fistpll
jb
enter
mov
stos
jg
andl
pop
pop
push
call
out
cmp
cmp
shrb
outsb
add
movsl
jnp
cmp
push
xor
pusha
mov
jmp
sub
jmp
sbb
nop
xor
cwtl
das
cmp
movsl
inc
pop
int3
ficompl
sub
scas
shll
dec
jmp
ret
lret
fadd
pop
push
ret
fisubl
loop
scas
inc
jl
mov
adc
lret
in
mov
lods
push
leave
mov
pop
adc
jp
out
inc
shll
adc
and
outsl
popf
jecxz
or
sbb
insb
jo
xlat
or
ret
dec
sahf
or
mov
adc
inc
xchg
hlt
and
adc
nop
mov
push
inc
xchg
inc
idivl
test
js
dec
xor
xor
shll
jns
lods
mov
add
adc
adc
push
sbb
in
out
lret
jae
inc
xlat
imul
sub
xor
int
mov
mov
push
xorb
jbe
inc
push
mov
adc
test
xchg
dec
jnp
or
in
adc
shll
jg
faddp
and
dec
insb
je
pop
sub
dec
xor
nop
faddp
test
mov
add
daa
pop
mov
pop
data16
xchg
jns
lret
mov
or
or
inc
push
push
cs
mov
dec
insb
mov
jae
fcomps
fwait
loope
iret
addr16
popa
ja
dec
call
jg
aam
int3
mov
xchg
push
jnp
popf
sbb
loope
test
push
mov
cld
ja
inc
push
inc
aam
jbe
inc
data16
fs
mov
xor
mov
out
and
push
jo
inc
inc
mov
mov
pop
into
mov
js
jmp
and
divb
out
push
adcb
mov
dec
rcll
fstl
xor
call
fldl
lds
mov
arpl
test
idiv
aas
imul
loop
cmpb
loope
pop
fbstp
dec
lea
aad
imul
test
jnp
psllq
outsb
jp
add
jmp
push
fcomi
ss
sub
mov
js
clc
jns
popf
dec
jl
js
cmovno
and
pause
je
popa
pop
int3
push
push
in
shlb
mov
pop
and
jle
mov
and
and
cmp
sarb
jne
jns
in
push
pop
es
jecxz
adcb
int
mov
dec
mov
leave
push
inc
es
push
adc
fwait
lret
sar
pop
mov
imul
pop
repnz
sti
mov
inc
test
xchg
jns
cli
sbb
sub
jg
sbb
sti
es
cmp
dec
jb
nop
gs
cmp
add
cmp
in
icebp
outsb
add
test
arpl
rcr
leave
jle
push
les
imul
xor
adc
test
push
imul
jp
kmovb
jle
or
xchg
idivb
ja
sbb
je
jne
pop
out
aad
in
ret
shll
jno
mov
and
jmp
ror
dec
pop
inc
xchg
movsb
xchg
repz
lcall
leave
ret
neg
xchg
xchg
sbb
mov
xor
dec
enter
and
fwait
test
xor
push
lods
aam
fistpl
popa
or
lret
das
shll
cwtl
enter
dec
xchg
mov
jmp
ljmp
or
mov
mov
mov
sub
loope
data16
fiaddl
mov
adc
and
addr16
or
jmp
daa
jo
push
pop
arpl
mov
inc
test
jecxz
mov
jnp
mov
dec
loope
push
int
or
cmp
pushf
push
jle
lea
lods
imul
lods
adcl
mov
jp
jmp
and
inc
mov
inc
les
and
popf
xor
pop
inc
imul
fucomp
arpl
es
mov
inc
adc
mov
cltd
outsb
jnp
fs
mov
adc
push
dec
xchg
adc
lret
jmp
adc
ss
mov
and
mov
xchg
inc
movsb
pop
adc
in
sub
or
loope
stc
cs
enter
push
pop
into
pop
xchg
loopne
scas
in
mov
pop
mov
rcr
iret
add
mov
push
jle
outsb
dec
xor
push
pop
hlt
lods
in
out
mov
push
mov
push
aad
in
into
push
negb
idivl
cltd
and
cmp
rcrb
xchg
rolb
iret
out
cmp
lea
std
data16
push
ret
pop
fwait
sub
mov
repnz
or
xor
cwtl
xlat
orb
mov
xchg
int3
mov
pop
aaa
jle
xor
pop
pop
jle
sbb
cmp
icebp
push
or
fnstcw
sbb
jns
xlat
sahf
inc
std
subb
ret
push
xor
pop
iret
pop
or
stos
push
cmpsl
sbb
mul
sti
sbb
loop
cs
dec
lea
scas
xchg
aaa
or
dec
or
cmc
rclb
mov
xor
adc
mov
cmp
dec
jge
int
sub
icebp
or
ret
cmp
fstpt
repnz
outsb
jo
movsb
mov
mov
in
add
add
add
push
xchg
inc
pop
shl
cmpsb
add
adc
xor
mov
cmpl
enter
sbbl
inc
push
loopne
fldcw
shrl
out
hlt
and
idiv
cs
lcall
ja
nop
lcall
mov
add
push
mov
xchg
ret
sarl
xor
push
xchg
loope
adc
add
test
movsb
mov
or
xor
and
or
mov
push
sub
outsb
dec
arpl
in
repnz
mov
stos
pop
jmp
push
xchg
fnstcw
dec
mov
mov
shll
dec
lret
cltd
jne
rcr
call
pop
or
dec
jle
mov
or
mov
mov
mov
mov
jno
insl
adc
dec
fs
mov
push
xor
lret
inc
adc
movsl
push
dec
add
rclb
xor
mov
ss
xchg
push
rorb
repnz
movsl
lock
xchg
adcl
mov
out
mov
push
mov
pusha
fdivrl
cld
jb
es
das
je
frstor
and
cwtl
addr16
push
jb
mov
inc
es
lret
das
mov
mov
dec
add
sub
xchg
mov
xchg
inc
jg
insb
dec
and
mov
pop
adc
dec
push
dec
insb
mov
xor
push
out
add
mov
lret
push
cmp
inc
push
push
mov
cmp
aam
push
mov
cmp
xchg
and
push
dec
mov
das
and
testb
movsb
aaa
pop
and
aad
sti
pop
into
mov
scas
scas
mov
adc
mov
mov
adc
lods
ja
inc
pop
popf
jg
test
sahf
mov
dec
cmpsb
jbe
xchg
push
in
dec
stos
sbb
std
xchg
mov
jecxz
pop
lcall
test
jno
sub
mov
sub
jno
pop
lea
or
subb
pop
and
jo
cmp
insl
pop
push
mov
or
sbb
add
mov
jmp
ja
rcrb
mov
daa
cmp
js
jbe
scas
data16
jmp
dec
cmp
or
les
push
popf
pop
gs
cmp
mov
cmpb
xchg
insl
jmp
movsl
dec
push
shlb
clc
lds
jmp
jecxz
lahf
mov
mov
pop
ljmp
clc
arpl
and
jo
inc
cmp
dec
jne
stos
leave
push
jne
stc
cmp
dec
mov
add
addl
sub
xor
stos
cmpsl
pushf
enter
dec
imul
aam
push
lcall
psubusb
and
fstl
mov
je
cmp
push
cmc
or
aas
sub
push
fdivs
ljmp
lds
rcll
jbe
int3
pop
dec
stos
fdivrl
jae
mov
jl
adc
insb
jge
cmpsl
test
cmpsb
jl
daa
cmp
call
shrb
mov
mov
hlt
test
lock
das
arpl
mov
bound
add
xor
jo
xor
cltd
cmpsl
icebp
adc
jecxz
jl
inc
test
popf
push
sbbb
scas
dec
rcrb
lock
call
adc
xor
movntq
ljmp
and
je
adc
jb
mov
out
xor
dec
shl
cs
pusha
jae
cmc
ret
das
mov
add
fucomip
xor
mov
add
jmp
ljmp
or
insl
in
mov
jmp
daa
sahf
dec
test
adc
aad
pusha
xchg
jns
nop
out
imul
rolb
outsb
mov
std
mov
cmp
lods
sbb
ss
jp
push
gs
div
loopne
sub
shl
je
cmpsb
adc
stos
popa
lahf
test
call
cs
lahf
xor
fs
jae
fisttpll
loopne
and
leave
mov
jle
inc
jnp
repnz
adc
jecxz
or
ficomps
hlt
mov
fstp
ss
nop
mov
test
mov
mov
sub
xchg
jns
outsl
xor
loope
mov
mov
sub
cmpsl
inc
adc
xchg
divb
imul
adc
mov
mov
sbb
outsb
mov
iret
nop
add
pop
sbb
mov
lea
mov
cmc
mov
scas
push
mov
sbb
jl
sub
pop
test
pop
push
out
into
xor
incb
pop
pushf
out
cld
in
push
mov
imul
xor
ret
sub
push
pop
outsb
cwtl
add
sbb
mov
movsb
ret
stc
inc
mul
dec
add
xchg
sti
sub
les
pop
adc
fdiv
movsb
pusha
cmp
pop
icebp
mov
xchg
sarl
shlb
lods
sub
fisttpl
jg
call
lods
shl
pop
jbe
sub
lea
test
dec
lods
push
fnstsw
mov
mov
lods
xor
and
stos
aas
or
movsl
adc
xchg
fcoms
adc
mov
pop
jle
adc
jmp
sub
mov
cmp
dec
pop
xor
lods
test
in
push
cltd
adc
mov
dec
xorl
and
lock
nop
fcmovbe
sub
mov
inc
clc
lahf
dec
xchg
or
dec
xor
push
sub
mov
daa
sti
repz
insl
test
pop
stos
out
or
push
ja
mov
jmp
pop
lods
mov
orb
push
sub
ja
pop
sbb
dec
mov
cmp
or
hlt
in
mov
testb
stos
cmp
inc
jle
push
inc
sbb
es
int3
cs
cmp
sbb
mov
xor
sbb
fdivs
inc
jp
and
sarl
mov
push
leave
xchg
mov
jb
pop
pushf
ljmp
ja
iret
mov
inc
sti
adc
push
sbb
rcll
stos
xchg
loopne
or
in
jp
lret
fildll
pop
int
iret
sbb
add
mov
imul
inc
fistps
mov
mov
cmp
adc
pop
ja
jge
fstpl
daa
gs
dec
mov
inc
shl
push
lcall
push
hlt
mov
loop
jo
loop
push
mov
lret
sub
jg
repnz
pop
loope,pn
iret
popa
cld
inc
das
out
cld
xchg
push
or
add
popf
dec
inc
mov
lods
out
js
repz
rcll
push
sbb
pop
into
and
mov
in
push
mov
sti
bound
sarl
jo
xchg
jecxz
or
outsb
push
jge
rorb
test
gs
and
mov
out
sti
cmpsb
cmp
push
cmovp
inc
mov
orl
sarl
jno
or
das
pop
test
sahf
shr
mov
stos
arpl
mov
jno,pn
in
xor
xchg
jg
push
jae
lods
mov
rcrl
ret
stos
xchg
add
out
ret
sub
rcrb
repz
out
pop
push
lret
cwtl
cmp
jno
push
jecxz
lods
mov
mov
sub
inc
icebp
loop
out
dec
pop
fidivs
icebp
scas
popa
out
pop
cmpsb
mov
sub
inc
and
stc
sbb
push
jno
inc
xor
cmp
push
shlb
cmp
mov
enter
jge
pop
repnz
arpl
sub
cmp
mov
jbe
in
add
ds
or
sub
dec
ret
pop
mov
stc
inc
outsl
pop
xor
stc
xchg
sub
push
jae
sar
mov
mov
lahf
or
daa
pop
cltd
inc
pop
mov
lods
add
arpl
mov
cmp
lret
or
or
jbe
mov
sub
mov
lahf
lods
sub
add
testl
dec
test
aaa
mov
pop
dec
aas
cmpl
mov
repz
jmp
jl
push
push
inc
xchg
addr16
out
lock
in
arpl
aam
gs
fildll
mov
cmc
scas
cmp
movsb
push
mov
and
cmpsl
je
xchg
cmc
shrl
or
das
stos
push
mov
sub
push
dec
inc
std
pusha
aaa
in
fdivrp
dec
mov
mov
ret
push
mov
push
lods
test
mov
je
add
pop
stos
shrl
cmpsl
inc
jb
pop
sbb
and
mov
cmpsl
orb
outsb
bound
repz
jl
stos
call
mov
fs
shll
dec
push
and
iret
lock
imulb
ja
into
sub
dec
jle
fstpl
push
fisubs
pusha
pop
insl
cmp
mov
in
fdivl
hlt
in
sub
jne
ds
inc
out
push
lret
dec
lds
dec
js
adc
add
lahf
shll
push
add
mov
sub
sub
and
lret
mov
push
fwait
insb
and
or
mov
dec
sub
push
dec
stos
add
dec
mov
mov
or
in
dec
add
push
repz
into
es
loope
out
clc
mov
jbe
out
test
imul
mov
jns
lea
dec
jle
cmpsl
negb
fstpt
and
pop
and
sub
inc
in
movsl
cmp
aam
cmp
mov
push
fwait
loop
jbe
sub
xlat
lea
xor
pop
lea
mov
es
mov
mov
add
mov
movl
or
and
pop
insb
cs
insb
push
push
movl
mov
cmp
cmp
mov
cmp
pop
mov
fdivrl
add
and
loopne
imul
lahf
xchg
movsl
dec
jecxz
xor
clc
and
scas
sub
fbstp
push
lods
pop
enter
pop
mov
mov
xorb
pushf
jo
mov
mov
xor
jno
cmpsl
mov
js
mov
mov
cmovs
lock
jp
cmp
sbb
jmp
jae
fs
xlat
sti
jge
lods
imul
add
sbb
sub
jecxz
inc
jp
xor
in
out
pop
mov
dec
inc
mov
orl
dec
mov
sbb
jl
push
inc
loop
xor
jb
sahf
or
and
jbe
mov
fisubl
sbb
popf
iret
jae
inc
idivl
jg
add
mov
mov
xor
ds
jnp
jle
inc
mov
lods
push
lods
fwait
imul
lea
mov
test
clc
pop
jae
or
xchg
loopne
lods
jge
xchg
outsl
fwait
push
xor
test
insb
mov
repnz
fxch
pop
ja
mov
sbb
cs
inc
push
jb
cmp
mov
or
or
cmp
push
fidivrs
mov
mov
aad
cmp
xor
or
mov
and
dec
mov
adc
sbb
push
jmp
jnp
fdivrl
xchg
adc
fcomp
lret
ljmp
popf
leave
jl
mov
insl
sbb
ss
aaa
push
ss
movsb
adc
and
pop
dec
outsl
inc
arpl
or
das
xchg
jae
push
arpl
mov
sub
loopne
sbbb
leave
adc
mov
test
lods
aam
cmp
pop
dec
jb
mov
stos
shl
ret
int3
cmp
mov
sbb
icebp
mov
mov
popf
orl
or
add
rcrl
cmp
pop
xor
loopne
popa
mov
clc
mov
jno
push
mov
xchg
insb
mov
adc
mov
dec
push
repz
inc
xor
and
adc
lods
add
hlt
and
adc
imul
leave
das
adc
rol
fnstcw
pop
adc
mov
test
mov
bound
aaa
sub
je
test
iret
mov
pop
aam
mov
mov
scas
loopne
shlb
jo
mov
stos
mov
fxch
cld
stos
mov
into
jb
mov
mul
imul
hlt
mov
dec
repz
test
inc
cmp
addl
mov
pusha
jg
jmp
inc
fldcw
jnp
jne
xchg
repnz
xchg
sbb
lret
test
out
cld
pop
jae
movsb
or
data16
xchg
fadds
jmp
clc
xor
cmp
pushf
or
int
push
insl
mov
sub
push
js
xchg
lock
adc
repnz
scas
fimuls
pushf
xor
and
insb
pop
insb
sub
roll
adc
push
sbb
int
add
push
addr16
icebp
je
lahf
sbb
lret
ror
cmpsb
test
gs
sub
addb
xchg
jle,pt
subl
fs
dec
stos
negb
dec
test
push
leave
mov
dec
and
or
inc
xchg
insb
push
add
pop
adcb
adc
ret
aaa
mov
test
stc
sub
cwtl
in
cmpsl
jmp
pop
fstpt
cltd
imul
or
push
fwait
shr
sub
iret
rcl
cmp
lret
loopw
fcoml
jge
clc
mov
pop
sub
and
xchg
stos
mov
xor
adc
add
fisttps
arpl
js
mov
idivb
fbstp
imul
scas
and
mov
outsl
and
mov
fcmovne
inc
inc
mov
xchg
iret
bnd
fbstp
stos
xlat
jp
outsb
jl
add
cmp
int3
add
hlt
in
jmp
je
sarb
mov
aad
fstpt
mov
icebp
mov
ret
sti
adc
inc
cmc
fwait
and
shrb
lods
xlat
adc
and
jecxz
popa
cld
sub
xchg
pop
mov
repnz
push
cs
xor
xor
in
cmp
push
sub
fmuls
clc
or
cld
call
add
xchg
lret
mov
jne
or
in
push
imul
push
fucomip
jl
mov
mov
jne
je
adc
dec
adc
lds
sub
push
sbb
inc
pop
cld
adc
and
call
rclb
lahf
mov
adc
and
pop
cmp
pop
fcomps
ss
push
and
mov
add
mov
xchg
stos
pop
inc
rcr
jecxz
pop
cmp
in
aad
loope
loop
push
loopne
sarb
jnp
xor
ss
das
adc
mov
sbbl
mov
dec
inc
icebp
call
xor
sub
into
mov
push
js
xchg
add
arpl
stc
sar
ret
xor
shrl
mov
jo
lock
sbb
sbb
mov
ss
das
pop
xor
in
insl
and
add
inc
jmp
mov
es
scas
mov
dec
or
cmp
loop
xor
fiadds
das
int
sahf
rcl
neg
stc
jmp
scas
mov
sub
inc
or
push
je
nop
add
jb
sbb
shrl
mov
mov
fbstp
push
inc
push
or
mov
lods
imul
nop
stos
jge
sbb
mov
sub
out
xchg
mov
push
xchg
sub
mov
mov
mov
push
cli
leave
dec
cwtl
push
int3
jmp
pop
rcrl
aaa
scas
pop
sar
testl
repnz
sar
iret
mov
adcb
aas
movsl
fwait
pop
ret
push
hlt
lock
push
cmp
xor
les
popa
xchg
shl
fs
xor
sub
repnz
xchg
int3
jno
hlt
in
outsl
pop
jl
jns
fisttps
inc
lahf
stos
rolb
ja
aad
ljmp
cmpsl
idivl
fcoms
hlt
mov
xor
pop
into
mov
sarb
push
xor
or
scas
lods
fsubrl
xorb
xchg
test
mov
jnp
inc
jmp
pop
mov
ret
jbe
dec
adc
aas
jg
dec
sub
int
sbb
lods
fbld
data16
fs
dec
dec
mov
fisubrl
sbb
push
mov
fsubs
scas
nop
push
sub
data16
scas
icebp
jmp
mov
jbe
rcr
in
icebp
jl
ljmp
jp
xlat
sbb
aaa
clc
sbb
std
add
jecxz
cmc
lcall
and
mov
inc
mov
rorl
sbb
sub
lods
lret
cmpsb
jne
stc
adc
out
pushf
lods
mov
hlt
adc
pop
push
bound
fucom
sti
cmc
clc
mov
xchg
fs
jnp
lods
out
add
cli
cmc
in
cmp
cmp
xor
aas
cmpsl
cld
loop
jmp
and
mov
push
mov
mov
xchg
lcall
push
hlt
loopne
push
pop
jg
xchg
dec
cmc
jbe
push
pop
dec
dec
call
push
cmp
mov
scas
push
les
cmpl
xor
lods
int3
xor
ret
inc
lds
aaa
fstps
inc
std
addr16
test
cmp
shrl
mov
xlat
fisttps
fdivs
xchg
in
ss
sbb
loop
add
xchg
lds
test
shlb
push
test
movsb
adc
jge
jmp
insl
shl
gs
push
daa
push
stos
xor
loop
xor
dec
adc
sbb
xchg
xchg
test
or
mov
pop
lea
fdiv
mov
daa
lods
in
mov
pop
cmpsb
aad
adc
rorb
xlat
mull
jl
mov
and
hlt
test
jecxz
repz
outsb
outsl
jge
addr16
ret
adc
inc
add
mov
mov
xchg
pop
dec
mov
jno
std
xchg
jle
push
andl
loope
push
cmc
adcb
mov
aad
sub
inc
xchg
clc
inc
push
push
lock
push
pop
call
inc
jno
pushf
and
cmpsl
cmp
push
sarl
jmp
sbb
mov
push
push
mov
xchg
xchg
fisubrs
xor
je
subl
mov
and
es
cmp
xor
or
mov
xchg
cmp
aas
jge
push
dec
out
xchg
sub
cmp
and
and
mov
mov
sbb
adc
mov
adc
pop
shrl
jg
jnp
sub
and
push
dec
inc
aas
sub
or
in
mov
mov
daa
js
mov
cmc
jnp
inc
notl
mov
jno
stos
jl
insl
stc
lock
cmp
jno
test
jg
push
and
jno
mov
mov
out
inc
jbe
outsb
pop
fwait
xchg
sti
push
fs
rclb
fwait
and
xor
jge
fnstsw
hlt
ret
inc
push
mov
hlt
dec
xchg
out
dec
scas
inc
and
mov
stos
mov
je
pop
add
push
push
adc
cmp
fcmovu
dec
sahf
clc
mov
xchg
cmp
sbb
frstor
rcrb
shlb
jb
fcoms
cmpsl
jge
imul
push
mov
pop
repnz
mov
pusha
and
lret
fwait
xchg
xchg
push
setb
std
ds
xor
out
mov
cs
mov
inc
movsl
adc
inc
sbbb
xchg
xor
mov
mov
outsb
aad
pop
ljmp
lahf
or
dec
sbb
fimuls
mov
or
mov
sub
xor
loope
xchg
lds
adc
xor
out
mov
gs
pop
in
repz
mov
mov
mov
in
xchg
fsubr
nop
sbb
jl
mov
aam
dec
outsl
std
cmpsb
xchg
jg
adc
adcl
pop
sub
or
xchg
xchg
add
mov
mov
mov
ds
ret
jecxz
mov
push
push
xor
add
pop
notl
ljmp
xchg
sub
push
jo
outsb
add
sbbb
ret
sbb
push
dec
xchg
push
test
adc
sub
jns
adc
mov
cmp
inc
lock
mov
push
stos
in
rorl
cmpb
test
sahf
ss
add
mov
pop
push
aad
cli
insl
fisubs
cmp
mov
pop
sub
loope
out
mov
test
ja
mov
fneni(8087
pop
sbbb
in
xchg
fimuls
jge
ds
mov
xchg
ficomps
leave
adc
xchg
mov
addr16
icebp
xor
push
sbb
inc
and
mov
in
repnz
jnp
cld
lret
add
fcomps
mov
imul
rorb
jnp
int
cmp
or
gs
aas
sub
sti
loop
xchg
pop
pop
js
push
mov
inc
inc
ret
leave
pavgb
or
pop
fsubrs
out
dec
std
sub
test
in
xchg
jge
enter
lahf
adc
sub
push
ds
or
sub
shrb
sbb
adc
mov
jmp
jge
fdivs
movaps
xchg
rcl
das
ds
test
push
add
repnz
mov
in
cli
incb
inc
xor
jmp
mov
leave
or
mov
xchg
xchg
mov
clc
sahf
pusha
rclb
adc
add
aaa
in
or
test
inc
dec
test
enter
outsl
leave
popa
movsl
fbld
test
and
fdivrs
mov
dec
cmp
push
push
ja
push
add
inc
fists
push
and
pop
mov
mov
sub
push
adc
jnp
inc
orl
dec
icebp
inc
xor
lea
mov
push
bound
lea
jmp
xchg
rolb
sbb
mov
imulb
ficoml
aam
cmpsb
mov
mov
inc
mov
aas
sub
or
jno
xchg
ds
ja
inc
jne
dec
addl
fwait
pop
movsb
inc
push
xchg
mov
lret
popf
jae
dec
mov
jns
xlat
inc
mov
cmp
aas
xlat
push
cwtl
dec
fisubl
pop
xchg
cmp
ds
in
jb
pop
stos
into
fidivl
test
dec
add
cmp
add
shlb
push
cli
mov
lods
imul
mov
out
out
sarb
add
pushf
sbb
dec
test
fwait
sti
add
cwtl
add
sar
div
ret
loopne
and
mov
movsb
je
sub
sbb
jp
jge
pop
pop
add
push
xor
jns
shll
adc
rep
mov
sbb
xchg
push
or
add
leave
inc
icebp
in
sub
cs
push
mov
and
mov
ror
cmp
ljmp
mov
ljmp
inc
lods
push
add
sbbl
or
das
jns
pushf
sbb
or
dec
jp
sbbb
iret
or
je
adc
ret
rorl
mov
add
pop
pop
bound
adcb
mov
adc
pop
mov
out
pop
xchg
rolb
pop
sub
and
imul
ret
inc
insb
hlt
mov
mov
out
xchg
mov
mov
fldenv
in
cmp
cmpsb
mov
js
pushf
std
jne
dec
mov
or
or
mov
push
jnp
add
aam
aam
rorl
rclb
adc
jle
mov
sub
cld
cmp
shl
repz
jl
add
repz
mov
aam
mov
xor
mov
pop
jmp
fsubr
hlt
adc
sbb
fadds
mov
and
jns
mov
dec
xchg
inc
sbb
jne
cli
fcmovnbe
flds
xchg
cmpsb
cs
es
xlat
inc
hlt
mov
add
mov
out
hlt
stos
adc
cmp
mov
es
sub
fidivl
mov
mov
push
push
sti
icebp
shrl
push
cli
movsl
dec
pop
mov
loope
bound
out
sbb
dec
xchg
sub
jb
filds
xor
lahf
inc
push
pop
jno
xor
arpl
mov
fstp
es
daa
push
jae
sbb
add
mov
inc
cwtl
pop
imul
or
test
lds
push
mov
gs
mov
movsb
testl
pusha
and
dec
outsl
popa
out
push
aam
int
sub
mov
xor
dec
nop
mov
jbe
adc
pop
ss
in
mov
cmp
xor
mov
andb
and
repz
dec
in
loope
add
push
mov
xchg
sub
frstor
repz
shlb
testl
fwait
inc
xor
dec
cmp
and
andb
pop
cmovae
in
popa
scas
movsb
mov
adcb
lock
jno
sbb
push
jns
rorl
dec
bswap
adc
cwtl
ljmp
mov
xor
popf
inc
sub
orb
and
pop
ss
mov
stos
insl
jae
mov
pop
pop
aaa
or
call
cs
push
add
dec
mov
push
test
mov
or
rol
add
xor
call
cmp
xchg
int
test
cmp
push
mov
mov
fcmovnbe
outsb
cmpsl
mov
push
outsb
sbb
jp
push
test
cmp
popa
jb
push
dec
cmp
lahf
lcall
lods
je
movsl
sbb
mov
les
imul
add
xchg
fsubrl
nop
popf
jnp
subb
xchg
sub
aas
dec
enter
in
pop
loop
stos
stc
sbb
popf
pop
add
sub
fldcw
leave
pop
xor
dec
push
mov
loope
loop
movsl
addb
enter
imul
mov
pop
and
hlt
jp
sub
jne
mov
push
jp
add
cmp
sbb
cltd
arpl
ja
loop
cmp
hlt
mov
lret
mov
insb
fwait
inc
ss
insl
pop
cmp
mov
xor
xor
adc
lret
test
add
push
sub
jge
mov
push
cmp
adc
pop
test
stos
xchg
aam
pop
adc
ret
lds
loopne
mov
adc
adc
mov
popa
pop
cltd
inc
fwait
cmp
jge
lret
mov
lahf
jbe
or
jl
stc
add
cmc
inc
loope
and
cmp
daa
rolb
rcrl
adc
add
sti
pop
fs
ud2
push
xor
mov
xchg
das
mov
mov
daa
lret
fs
and
ret
fsubp
adc
lods
xchg
jo
push
push
mov
ds
sti
scas
and
movsb
mov
push
lods
cs
std
dec
xorl
dec
push
je
cmp
repnz
adc
clc
push
std
outsl
sti
inc
mov
push
inc
and
jae
bts
inc
rcr
fbstp
xchg
mov
int
cmp
cs
inc
popa
push
mov
call
cld
mov
stc
mov
jbe
leave
dec
imul
ret
dec
js
dec
adc
test
out
mulb
mov
test
push
add
cmp
imul
mov
pop
ficomps
ds
sahf
cli
xchg
rcl
out
pushf
and
scas
fildl
pop
sub
stos
scas
adc
sbb
jmp
dec
aaa
inc
fcompl
sti
pop
cmpsb
sbb
push
jb
cld
sub
stos
adc
sbb
loop
std
inc
mov
sub
push
pop
dec
adc
lea
and
xchg
or
or
dec
fildll
sbb
fistl
adc
shrl
and
sub
cmc
cmp
and
pop
jl
je
pushf
int3
dec
xlat
mov
loope
fs
lds
xchg
mov
or
mov
mov
hlt
pop
xor
pusha
mov
push
push
test
sbb
rolb
inc
imul
adc
je
pop
xchg
adc
push
pop
cs
xor
int
je
popf
stos
in
or
adc
sbb
xor
add
xchg
inc
and
nop
cld
fucom
inc
xchg
scas
jp
enter
rolb
aam
int3
mov
sbb
jnp
les
frstor
mov
sbb
mov
mov
test
ret
stc
mov
adc
ljmp
xchg
xlat
in
repnz
sub
movsbl
jbe
fcomp
mov
out
jo
jecxz
jb
mov
xor
adc
cmp
inc
aad
adc
xchg
outsb
inc
xchg
addb
adc
mov
loope
mov
cli
pop
movsb
mov
mov
sti
cmp
inc
or
fnstsw
mov
dec
icebp
pop
push
aam
sbb
shrl
fsub
ret
cltd
movsl
inc
sbb
xor
rclb
xchg
cltd
pop
and
call
sbb
xchg
jo
repz
stos
bound
sti
pop
cmp
cld
mov
mov
fisttpl
call
aaa
loope
das
jp
sbb
add
and
sbb
cmp
popl
inc
orl
push
adc
xchg
or
enter
jl
xchg
mov
into
sbb
fsubs
dec
xchg
xor
mov
sub
dec
aad
movsb
daa
mov
sbb
dec
insb
or
test
cmc
xor
in
scas
or
pop
adc
iret
inc
in
andps
inc
dec
inc
mov
pop
jle
loop
outsb
in
inc
sub
loopne
or
xor
cmpsl
sbb
cmp
inc
inc
mov
cmp
in
mov
in
lahf
xor
or
repnz
aam
sbb
inc
jge
lea
mov
dec
jmp
adcl
test
popf
data16
cld
mov
in
pushf
push
push
xchg
les
stos
les
lock
pop
stos
push
push
jne
jmp
mov
leave
pop
dec
stos
mov
push
lods
leave
xchg
fisubrs
adc
adc
or
jecxz
fmul
rcrl
jg
aas
aam
cmp
lea
or
dec
mov
insl
push
lcall
sub
and
stc
hlt
jbe
xchg
or
lock
push
fstl
and
clc
iret
gs
mov
lock
ljmp
aad
fwait
aaa
loopne
sbb
push
mov
into
shrl
push
mov
and
cmpl
daa
mov
testl
out
in
lret
jmp
inc
cwtl
test
mov
inc
ss
cld
lds
hlt
cmp
movsb
sbb
cs
sti
lahf
popf
add
or
jbe
loope
and
ljmp
mov
nop
loopne
xor
repnz
call
mov
pop
jb
sub
jnp
xor
sub
in
stos
mov
iret
push
jle
stc
or
cltd
and
jnp
sbb
xchg
dec
push
mov
aam
adc
loope
ficompl
mov
lods
stc
movsl
jg
test
cltd
inc
shrb
or
cmc
pop
icebp
dec
popf
fistpll
icebp
ja
imul
jmp
xor
xchg
sbb
and
cltd
push
vunpcklps
jb
imul
mov
push
test
push
add
mov
div
pop
ret
test
ret
mov
loop
push
xor
into
inc
popf
sbb
sbb
pushf
inc
jle
inc
xchg
pop
mov
nop
aas
and
fld
out
js
and
sub
xorb
dec
lret
xchg
nop
jae
int3
fstl
sub
sub
movsb
xchg
push
xchg
es
ljmp
xchg
mov
push
sbb
cmpl
inc
push
xchg
mov
add
mov
pop
fiaddl
in
mov
jp
enter
dec
cmpsb
sub
lock
add
adc
fistpll
jecxz
mov
jnp
sub
enter
sbb
adc
mov
and
sti
test
daa
sarl
sub
jp
sbb
out
push
mov
cmp
in
gs
mov
xchg
jae
sbb
push
jg
mov
cmp
stos
adc
call
pushf
or
sbb
adcl
and
mov
mov
mov
push
iret
out
or
jge
push
sahf
xor
mov
aad
test
mov
mov
mov
mov
addl
mov
push
mov
jmp
adcl
jnp
lea
dec
in
push
xor
sti
pop
push
jmp
push
out
outsl
pop
add
dec
pop
call
or
pop
lods
xchg
sahf
cmp
jle
fwait
adcb
mov
add
mov
cmp
aaa
stc
popf
nop
gs
loopne
mov
cmp
jae
insb
and
jmp
cvtps2pd
in
lea
fcoms
cwtl
jmp
pop
mov
lret
enter
mov
adc
fildll
cmp
mov
mov
inc
mov
xchg
cmp
sbb
sub
mov
push
mov
dec
jbe
dec
mov
cmp
xor
lea
cmp
aas
pop
imul
or
movsl
cmc
ret
icebp
adc
mov
imul
call
lock
nop
lods
fistpl
dec
push
sbb
bound
cmc
xlat
cmp
push
daa
in
pushf
and
insl
pop
mov
sbb
loop
pop
cmc
aaa
scas
add
div
mov
hlt
xchg
dec
fcoml
test
int3
dec
xor
leave
push
lcall
scas
dec
lcall
outsb
and
and
test
add
xchg
loop
lds
in
pop
mov
pop
mov
jl
loopne
loop
rolb
and
adc
jmp
int
dec
push
mov
push
pop
out
fwait
sarl
cli
cltd
scas
inc
mov
jae
pop
repnz
mov
ja
dec
mov
push
dec
or
add
shl
xchg
sbb
lret
jo
stc
sub
scas
jne
aam
and
ja
das
arpl
pop
cmc
mov
push
orb
mov
daa
rcll
enter
mov
shrb
pop
cmp
and
mov
faddp
push
xor
pop
popl
icebp
aaa
test
or
daa
push
push
stos
adc
in
inc
dec
nop
loop
das
ret
push
cwtl
testl
lret
push
aaa
pop
dec
insb
testl
lock
icebp
or
and
xchg
add
xchg
shll
fwait
xchg
ret
andb
sub
mov
dec
mov
or
jne
inc
cmp
call
shlb
push
cmp
sub
inc
jmp
neg
xchg
and
jg
or
pop
in
push
mov
pop
or
outsl
movsl
inc
xor
dec
pusha
jae
fldl
std
add
fisttpll
sbb
loop
xor
rorb
or
lcall
mov
and
std
xchg
sarb
mov
inc
int3
add
adc
jmp
sbb
fisttpll
mov
inc
cmc
cli
jns
ja
out
repnz
mov
pop
inc
ljmp
add
push
lret
jo
mov
mov
cmp
mov
dec
clc
sub
fdivs
push
sub
lcall
in
sahf
pop
xorl
mov
lods
shl
test
mov
retw
cmpsl
and
mull
jnp
adcb
cmp
cmp
js
lret
cmpsb
cmp
mov
scas
xor
mov
xchg
mov
mov
dec
in
lds
jns
or
popa
inc
fs
adc
jo
arpl
daa
adc
pusha
inc
adc
iret
lea
stos
sbb
pop
orl
int3
mov
dec
std
and
sbb
sbb
jecxz
loope
sbb
xchg
xchg
adc
dec
ja
cmpsb
fnclex
add
jb
arpl
stc
push
repz
and
adc
mov
push
pop
inc
pop
inc
shlb
mov
sub
cs
mov
in
mov
stc
sub
pop
or
int3
repnz
fisttpl
add
push
push
std
mov
jecxz
dec
insl
js
cmc
lea
bound
lods
jecxz
xor
fbstp
dec
ss
mov
dec
mov
jbe
out
int
sub
iret
jae
dec
cmp
push
dec
mov
pop
xchg
lds
sbb
ss
xor
pop
incb
sbb
jle
xor
mov
enter
inc
sub
int
icebp
or
inc
shrb
shrl
movsl
cmpsl
jno
icebp
into
inc
and
push
ficoml
adc
lar
mov
inc
in
cltd
or
mov
adc
inc
push
and
adc
pop
sub
call
popa
xchg
neg
out
iret
push
fsubrl
dec
sbb
cmp
ds
mov
xbegin
das
sbb
clc
setge
add
pop
inc
nop
dec
in
cltd
test
mov
loop
cmp
mov
mov
out
sbb
sub
and
mov
ds
pusha
rcll
jno
jecxz
push
repz
lock
adc
pop
aaa
mov
sbb
add
int
mov
push
push
xchg
imul
dec
or
fnsave
cmp
mov
adc
and
subb
lret
ljmp
pop
mov
and
inc
jmp
std
mov
or
push
or
mov
adcl
sbb
test
std
sbb
sbb
jne
xlat
adc
dec
and
inc
test
stos
mov
mov
and
mov
jns
fwait
mov
jle
cltd
fnstcw
cmc
pop
jo
loop
leave
fwait
push
mov
clts
sub
lahf
pop
movsb
sbb
dec
adc
movsl
xchg
or
add
mov
mov
icebp
test
mov
das
dec
adc
jo
lods
and
mov
inc
sub
ss
xor
dec
pop
fistl
and
sarb
pop
add
std
xchg
push
inc
push
fidivl
sub
xchg
sbb
cld
test
xor
xchg
sahf
les
cmp
adc
mov
outsl
xlat
out
jge
pop
xor
pop
pop
loopne
xchg
fs
push
and
add
xchg
insl
or
mov
adc
addb
es
clc
pop
mov
aas
aas
pop
mov
sbb
jne
pop
leave
inc
adc
adc
mov
ficompl
js
add
xor
jbe
cmpsb
xlat
push
test
jg
mov
test
and
sub
jmp
and
pop
cmp
scas
testl
jb
lods
scas
stos
push
dec
es
int
imul
call
pop
scas
mov
fwait
sahf
sub
std
stos
scas
cwtl
out
fwait
push
in
and
and
aam
out
jle
xchg
shrb
push
popf
rcll
jo
out
adc
ds
xor
and
sub
xor
call
cmp
mov
xor
shrl
sbb
rcrb
add
jb
stos
je
outsl
jae
hlt
sbb
subl
mov
into
sbb
jb
rcll
jno
insl
pop
fwait
imul
addb
and
mov
pushf
push
lods
mov
cmc
aas
cli
adc
clc
push
pop
mov
mov
lods
cmp
scas
ljmp
mov
mov
mov
int
jns
movsl
xor
out
hlt
pop
mov
jle
jbe
repz
and
ja
xchg
orl
mov
pop
enter
sub
pop
jl
fists
xchg
jo
mov
inc
pop
repnz
push
adc
loope
pop
imul
fcomp
inc
cmpsl
lret
inc
cmc
cld
jns
add
sbb
pop
out
push
je
test
xor
mov
inc
lods
adc
lea
cld
lods
fwait
in
lods
cmp
dec
cwtl
jp
inc
arpl
and
xor
sbb
aam
pusha
pop
icebp
inc
push
sub
push
jnp
cmpsl
sbb
in
stc
test
xchg
mov
stos
nop
add
push
pop
mov
mov
inc
dec
in
add
adc
test
pop
subl
cmpsb
sarl
jmp
and
and
lret
dec
push
cmp
lcall
loopne
cmp
rcrl
dec
jnp
lcall
dec
lock
fisttpll
mov
xor
jae
rorl
lods
dec
int3
pop
jg
jecxz
pusha
add
xchg
push
xor
rclb
mov
cwtl
mov
out
test
jae
or
les
sbb
loope
test
push
sarl
das
mov
sub
mov
xchg
add
movsb
jb
inc
clc
outsb
aam
fs
xchg
out
call
enter
cld
icebp
cmp
rorl
je
stos
xchg
dec
xchg
push
lods
pop
ss
mov
idivb
insb
mov
subb
pop
shlb
repz
dec
incl
dec
add
enter
ret
movsb
repnz
movsl
ds
sahf
adc
stos
packuswb
inc
cmpl
jbe
les
hlt
fiaddl
arpl
sub
jno
pop
cmc
mov
nop
push
mov
mov
inc
mov
mov
decb
xchg
jecxz
or
call
cmp
jno
jge
rorl
or
xor
mov
or
pusha
and
popf
shlb
adc
jbe
fists
les
pushf
dec
popa
push
push
das
test
aad
divb
in
movsb
add
sbb
inc
push
jmp
or
mov
mov
wbinvd
outsl
dec
cli
fldenv
int3
hlt
sti
cmp
cmp
mov
jle
xchg
mov
das
jmp
fcmovu
stc
addl
dec
ds
sub
jbe
mov
or
xor
jno
test
mov
dec
jae
mov
cld
xchg
mov
icebp
das
add
fwait
mov
add
mov
pop
xor
push
test
mov
arpl
hlt
cmp
popa
repz
add
xor
pop
pop
adc
pop
pop
fisttpl
adc
sbb
aaa
pop
in
push
repz
add
mov
loopne
xchg
cmpb
std
inc
or
fcmove
stos
loopne
jbe
or
sub
jecxz
jbe
outsl
and
inc
popf
sti
dec
mov
aas
pop
pop
mull
sbb
push
pop
jbe
lods
popf
and
repz
mov
rcll
inc
cmpsb
or
pop
gs
adc
xchg
sub
add
adc
cmp
mov
jp
enter
jmp
les
inc
mov
cmp
ss
shlb
or
pop
adc
push
sahf
ljmp
xor
adc
jmp
push
inc
test
xor
and
outsb
mov
stos
int
mov
jl
lcall
and
xor
iret
bound
jge
adc
scas
ret
movsb
scas
inc
mov
jg
test
or
push
icebp
push
std
js
xchg
ljmp
push
mov
sub
mov
arpl
cltd
sbb
adc
sbb
sbb
lods
sbb
lods
orb
jmp
loope
cli
or
outsb
xchg
repz
sub
loop
jl
and
lds
pop
sub
push
jo
aas
ficomps
push
cmp
in
add
mov
enter
xor
sti
pop
pop
stc
js
test
push
inc
adc
fcmove
aam
xchg
jecxz
pop
orl
jecxz
pop
lret
shll
cltd
inc
test
mov
cmp
xor
fcmovnbe
or
push
xor
cmp
mov
aad
mov
sbb
sub
mov
dec
ret
xor
and
pop
testb
xor
roll
lds
test
cmpsb
outsl
test
adc
xchg
or
push
cwtl
lea
pusha
hlt
xor
sbb
cs
orb
mov
insb
jbe
lea
mov
rcll
fwait
clc
mov
gs
add
daa
lock
add
into
scas
push
sub
mov
add
repnz
outsb
push
xor
xor
xchg
push
cmc
rcr
aam
ret
int
push
adc
mov
jl
inc
sbb
fidivrl
test
hlt
or
xor
jns
movsl
int3
sub
or
nop
pusha
in
shrl
rcll
fstpl
adc
addr16
fcomip
imul
fstps
push
pavgb
mov
xchg
mov
lret
sub
adc
cmpsb
dec
int3
adc
sbb
pop
ret
jns
cwtl
loopne
insl
negb
fiaddl
adc
xor
lds
mov
jb
imul
aam
loope
lret
dec
push
jl
mov
add
int3
in
lock
mov
aaa
aam
pop
cltd
icebp
into
sbb
enter
movsl
xchg
insb
jl
and
js
xchg
push
mull
sub
push
addr16
sbb
pop
add
addb
and
push
pop
aas
std
push
imul
push
dec
mov
loopne
add
ljmp
xchg
mov
out
push
mov
test
add
idivl
mov
mov
imull
or
sub
add
daa
jg
int3
jl
sar
lret
lret
mov
subb
or
arpl
loopne
ss
cld
xchg
adc
xchg
or
adc
sub
lret
sub
std
xchg
leave
jne
stos
mov
jl
jnp
sbb
sbb
mov
aam
pop
call
inc
mov
mov
rcll
test
adc
loope
pop
pop
jno
mov
fistl
mov
aas
mov
inc
sbb
push
aaa
js
out
sar
ret
mov
and
xchg
fidivrl
mov
lahf
xchg
fmuls
test
add
pmaddwd
test
dec
fstps
pop
out
leave
mov
mov
xchg
jg
mov
and
sarb
inc
cmp
in
xchg
inc
sbb
jne
and
ret
and
lret
mov
popf
cs
hlt
arpl
shl
icebp
cli
loop
aad
inc
std
mov
ficomps
push
sahf
xchg
dec
and
mov
mov
pop
inc
cmp
add
push
stc
fs
push
insb
vaddsubpd
jb
jge
mov
inc
enter
sbbl
lods
fdivrs
aaa
mov
jecxz
pushf
movsb
in
adc
xchg
inc
xchg
movups
sbb
bound
cmp
ror
rolb
adc
xchg
jg
cwtl
jg
bound
std
scas
jg
and
sbb
cmp
xchg
pop
shrl
xor
fisttpll
popa
js
popa
addb
sti
mov
lahf
fidivrs
sbb
daa
dec
in
xor
stos
rorb
xor
aas
or
addr16
add
int3
and
jp
daa
mov
leave
xchg
sti
das
outsl
cltd
push
orb
dec
scas
ds
xor
xor
push
dec
xor
fidivrl
fmuls
out
pop
mov
jmp
mov
out
insb
pop
call
shll
test
scas
push
ss
mov
jecxz
mov
sub
movsl
das
sub
cmpsl
test
mov
fwait
push
xchg
pop
fnsave
scas
inc
dec
cltd
notl
mov
lcall
jle
xor
repz
jp
mov
stc
mov
popa
mov
subb
and
xchg
push
inc
xor
movzwl
pop
sbb
enter
mov
in
mov
jbe
dec
sbb
insl
rorb
mov
dec
pop
test
sti
mov
fcmove
js
jmp
jnp
rcrl
mov
cmp
xchg
xchg
out
adc
inc
cmc
xchg
sub
xor
cmpsb
pop
sahf
jl
jg
jnp
subb
pop
pop
int3
insl
int3
inc
adc
imul
lret
push
sbb
inc
inc
and
xchg
stos
jns
outsb
jnp
push
or
xor
mov
adc
ffreep
ljmp
jg
dec
dec
ja
inc
lret
jg
in
repz
push
aad
ss
rcpps
and
lret
in
xor
loop
stos
sarb
ror
dec
movsl
js
push
pushf
mov
shlb
sub
cmpsl
ja
and
ss
and
mov
jp
xor
sbb
xchg
pop
and
cmp
mov
ljmp
fucomi
popf
pop
cmpsb
jns
or
popa
mulb
and
mov
mov
xor
aas
in
adc
add
call
inc
xor
push
dec
int
aaa
jmp
call
jecxz
outsl
cmp
jne
cli
insb
ja
cmp
inc
icebp
inc
mov
or
out
mov
popa
sub
adc
jge
mov
das
mov
lock
sbb
jnp
aaa
out
jmp
std
cmpl
lds
jnp
sbb
adc
cmp
sub
jb
out
push
xchg
push
gs
cmp
pop
adc
push
dec
mov
xchg
cmp
and
inc
shlb
add
fnsave
inc
test
cmp
loopne
inc
insb
fidivrl
jp
or
int3
add
sub
add
sub
incb
adc
xchg
sbb
out
ret
data16
cwtl
adc
dec
int3
popf
ror
bound
clc
stc
call
into
loopne
aam
iret
xor
imul
jbe
das
jae
repnz
mov
imull
jnp
mov
fnsave
xchg
xchg
nop
xchg
pop
jbe
push
out
fsubl
jmp
cmpsl
dec
hlt
cmc
insl
inc
mov
int3
cmp
mov
imul
jo
dec
dec
mov
insl
add
adc
inc
in
insl
in
sub
sarl
fdivrs
sbb
add
popa
insl
popf
outsl
inc
ljmp
mov
xchg
jmp
jae
imul
lret
push
jmp
arpl
sarl
inc
cmp
inc
dec
hlt
cmc
popa
xor
mov
xor
js
xchg
test
jp
shl
sub
dec
sbb
clc
and
shl
xor
je
pop
fsubl
push
jne
inc
enter
jmp
loope
lods
sub
movsb
or
adcl
sarl
mov
rorb
cmp
jbe
out
xchg
pop
push
xchg
fdivp
scas
pushf
push
je
cmp
mov
sbb
sbb
arpl
sbb
add
lahf
sub
fs
rcl
push
iret
push
push
int
into
cwtl
fsubrl
xchg
xor
dec
sub
movsb
in
jno
scas
les
mov
aas
lods
orl
xor
push
adc
mov
jp
mov
lods
mov
push
arpl
jnp
xchg
mov
pop
jae
adc
fists
rcll
ror
or
in
xor
psubw
sarb
in
lahf
pop
jle
or
mov
xchg
out
fiadds
test
push
fldenv
cltd
jae
pop
pop
push
mov
shr
daa
xor
push
lret
out
push
mov
enter
and
es
cmp
and
cmp
xor
push
add
fstpt
mov
in
mov
call
lea
xchg
call
lret
insb
out
inc
sbb
or
sub
or
nop
in
sub
push
pop
clc
loopne
ds
aad
sbb
dec
dec
cmp
adc
jae
jns
ds
scas
test
sbb
movb
or
pop
leave
lret
insb
pusha
jne
inc
jb
aam
data16
and
in
cli
sub
ljmp
push
dec
adc
push
mov
add
xor
js
cmp
sti
jno
outsb
jge
sub
pop
push
icebp
andl
sbb
sbb
mov
xchg
xchg
fs
push
sti
jo
mov
mov
mov
insb
cmpsl
push
lcall
rcrl
adc
out
cltd
push
lret
mov
mov
ficompl
push
jae
inc
imul
sbb
rcrb
inc
js
fsin
mov
inc
jle
negb
add
into
scas
test
add
test
cmp
pusha
or
je
or
rorl
sbb
in
cltd
sti
xor
mov
bound
xor
sub
movups
and
js
mov
stos
shlb
mov
add
and
cld
fwait
push
push
lea
xchg
cmp
push
ret
xchg
je
mov
icebp
insl
lock
popf
sub
pop
cli
mov
mov
or
mov
jne
popa
das
xchg
add
dec
test
cld
cmc
jecxz
cs
ljmp
sub
icebp
xor
movsl
scas
adc
fidivs
in
or
loope
pop
mov
or
pop
jnp
pop
fmuls
pop
ficoms
mov
jecxz
inc
mov
push
and
icebp
orl
mov
repz
das
not
xor
mov
xor
push
sbb
orl
shlb
push
sbb
adc
es
adc
push
out
imul
cli
mov
jmp
dec
add
icebp
jae
in
xor
sbb
lcall
mov
rcrl
inc
jne
add
sar
cmp
addr16
fstl
sub
push
ret
cmp
in
ror
xchg
cld
adc
jmp
sub
or
insl
loop
mov
cmpl
dec
xchg
hlt
pop
inc
lret
lcall
insb
stos
lret
cmpsl
sub
stos
ret
xor
or
mov
pop
movsl
push
cmp
push
pop
cld
cli
fstl
movsb
out
out
in
mov
xchg
popa
dec
out
das
mov
inc
loope
paddsw
or
rolb
nop
push
cld
dec
mov
pop
aaa
ljmp
cld
inc
pop
adc
adcl
out
insb
pop
pop
dec
push
xor
mov
out
xor
mov
rorb
and
lret
in
test
js
dec
xor
outsl
inc
pop
sbb
dec
cmpsl
pop
push
jae
daa
push
dec
cld
sti
xor
mov
dec
inc
mov
daa
jo
out
cmp
pop
iret
inc
iret
clc
lcall
pop
add
xchg
lods
jns
push
cld
adc
mov
mov
dec
pop
in
das
jns
cli
push
jg
mov
and
sti
shl
insl
daa
mov
rorl
jge
loope,pn
pop
fmuls
jno
lcall
mov
lds
pop
jmp
sub
aad
imul
cmpsl
idiv
push
in
sti
addr16
mov
je
mov
and
lds
dec
cli
ret
and
sub
fistl
adc
fistl
push
imul
xor
adc
lret
push
sbb
aad
push
pop
xchg
sbb
xchg
insl
arpl
sbb
loopne
js
pusha
cmp
mov
addr16
jge
xchg
mov
push
and
mov
inc
inc
dec
in
ffree
outsl
clc
arpl
daa
cltd
mov
adc
sbbb
sbb
scas
or
pop
cmp
cs
mov
int
pop
add
dec
mov
pop
out
ds
lock
jg
lds
inc
pop
pushf
ret
dec
add
and
pop
mov
inc
fnstsw
ds
cmpb
cli
imul
jl
out
inc
cmp
test
fidivrs
lret
outsl
sub
cmc
xchg
sbb
ja
inc
push
pushl
filds
inc
or
lock
out
and
dec
sub
in
out
fwait
sub
pop
xchg
adc
and
jmp
adc
xlat
addr16
inc
xlat
loop
mov
ror
and
jg
sub
jnp
add
sub
adc
int
mov
imul
inc
lcall
fimull
lods
sub
mov
pop
xchg
stos
xchg
cwtl
lea
cs
les
cmpsb
test
lret
gs
cli
sbb
inc
sbbl
adc
daa
dec
popa
arpl
jg
adc
inc
mov
jno
addb
out
dec
mov
dec
stos
adc
dec
sbb
cmpl
cmp
jp
xchg
aaa
stos
and
and
sarb
xor
movsb
repnz
loopne
sub
mov
ret
xchg
ret
xchg
mov
sub
test
sub
loope
stos
jl
inc
shll
mov
lcall
mov
sub
iret
xor
sub
inc
jle
push
test
inc
stc
arpl
jmp
cs
lods
mov
lret
push
push
xor
lds
insl
jno
push
or
daa
int3
js
imul
sbb
xor
sub
or
rcl
imul
push
or
mov
mov
mov
ss
jle
jnp
decl
mov
xchg
cmp
cmp
dec
push
inc
or
ss
push
in
ret
push
lods
mov
jnp
mov
push
cmp
adc
test
push
lret
rcll
cs
dec
ja
mov
shlb
add
int3
and
fldl
cmp
out
sbb
in
loop
popf
jecxz
sahf
jne
cs
testl
lret
aaa
pushf
rcr
or
mov
mov
jbe
dec
and
aad
or
bnd
pop
pop
cltd
or
popa
add
ret
pop
inc
mov
jge
xlat
inc
subb
pushl
sbb
hlt
mov
mov
ds
fistpl
mov
mov
add
into
pop
fildll
lds
rcll
pop
sti
xlat
push
pop
leave
rcl
pop
jae
push
in
jns
out
dec
lods
lods
out
ljmp
pushf
in
cmp
js
stos
xor
lret
inc
sub
aaa
xchg
push
fstps
mov
pop
cwtl
push
pop
jle
mov
test
mov
mov
push
adc
sar
ret
jle
or
or
adc
ja
lcall
clc
aaa
xchg
mov
das
mov
mov
dec
adc
inc
pop
outsl
mov
mov
movsb
test
ljmp
imul
pop
jp
test
mov
sub
pop
pop
mov
xchg
jno
and
and
test
rcll
inc
jle
fbstp
jl
jmp
addr16
push
add
lods
aas
or
mov
jne
or
ljmp
mov
es
imul
and
fstps
test
shll
cmp
mov
and
mov
loope
and
jbe
js
gs
ds
sarl
cmp
fidivl
inc
jo,pn
mov
mov
ja
and
stc
xor
int3
jle
arpl
std
add
adc
int3
dec
add
mov
fs
push
out
pusha
mov
jae
outsb
sub
mov
leave
cld
daa
ss
adc
fmul
jno
sub
stc
inc
fiaddl
call
js
cmp
test
int3
leave
adc
adc
mov
mov
mov
pop
hlt
mov
andl
sub
or
loope
setns
rcrb
imul
ds
sub
scas
add
jns
xor
idivb
xchg
div
sbb
xor
out
loop
std
sub
rcrb
cmc
or
jl
push
das
test
jp
stos
outsb
into
aam
addl
dec
inc
shll
movsl
fldt
sub
cmpsl
sub
sub
adc
or
add
and
cmp
mov
sbb
xchg
mov
push
jecxz
data16
inc
and
loope
cmp
hlt
cmp
popf
push
int3
add
imul
fnstenv
dec
sti
adc
insb
sub
repz
xor
lahf
movswl
call
dec
mov
dec
xor
ficomps
test
or
cwtl
push
jno
sbb
stos
mov
adc
xor
inc
or
jo
scas
lds
scas
and
mov
dec
inc
iret
ljmp
andb
xchg
mov
subl
jno
loop
repnz
xlat
dec
shl
into
push
popf
shrl
es
rcrl
mov
sbb
flds
dec
sub
sbb
loopne
shl
mov
nop
mov
cmp
xchg
and
push
bound
popa
or
cmpsb
sbb
cs
mov
mov
pop
fwait
jg
inc
jmp
sbb
outsb
inc
or
int3
jg
cltd
mov
xorb
pop
inc
add
xorl
dec
sub
push
sub
mov
pop
xor
mov
mov
fildl
mov
repnz
fsubs
push
add
push
mov
out
lret
add
ss
cmp
incb
dec
push
sbb
enter
cmpsb
rorl
mov
add
adc
sub
pop
pop
push
cwtl
in
ret
jecxz
push
cmp
ja
dec
jbe
adc
in
inc
movaps
fwait
sbb
mov
mov
je
cmp
pop
popa
lods
inc
and
cli
cmpsb
stos
push
jbe
sbb
adc
mov
xor
or
sub
and
jp
add
pop
mov
and
je
inc
or
cmc
cmpsl
outsl
pop
mov
and
mov
inc
shlb
add
fwait
or
mov
mov
pop
ret
inc
cld
dec
inc
pop
loop
gs
sub
mov
mov
dec
adc
xchg
fisubs
pop
dec
pushf
mov
cmc
or
pusha
add
sub
cmpsb
popf
mov
iret
in
jno
pop
aad
mov
fwait
fs
and
mov
sbb
jae
test
or
aad
scas
sbb
cmp
int3
jmp
fimuls
jle
loope
inc
rcrb
xchg
and
stos
pop
xchg
inc
call
jb
daa
fs
int
fisttps
xchg
mov
mov
sbb
xchg
hlt
inc
test
out
out
xchg
inc
shll
out
inc
lock
js
and
mov
int3
stc
outsb
inc
jg
data16
jne
mov
rorl
mov
test
or
call
mov
xor
call
sub
aas
in
pushf
push
add
or
stos
adc
repz
leave
xchg
test
pop
adcb
add
inc
in
loope
cli
lcall
or
adc
in
pusha
cs
sbb
loop
pushf
push
jmp
xchg
int
lods
popf
in
fs
cwtl
in
push
mov
int3
fstl
cmpsb
lea
daa
push
xor
clc
dec
mov
popf
push
lea
js
sub
add
sub
fdivrs
push
std
xor
gs
pop
xchg
jo
adc
xchg
cmp
nop
add
std
inc
lds
decb
cs
outsl
inc
xchg
shlb
add
jb
add
pop
les
mov
jae
scas
lea
xor
push
mov
jle
sub
or
jbe
iret
xor
jb
mov
imul
je
and
add
out
imul
popf
mov
mov
mov
fmull
ljmp
inc
call
push
out
mov
out
pusha
add
dec
test
mov
adc
nop
je
xchg
push
jbe
fcompl
xor
pop
dec
das
out
insb
sub
jns
xchg
stos
add
pop
pop
out
sub
js
mov
sbb
and
push
insl
out
clc
popa
cltd
cmp
jne
shl
push
sarb
lcall
testb
test
push
jo
aam
imul
cli
sub
dec
xchg
iret
insb
stos
pop
daa
roll
test
scas
cmp
pop
push
jl
dec
pop
loop
scas
xchg
sbb
push
daa
addr16
stos
addb
in
scas
jns
mov
or
mov
jmp
push
loope
mov
lock
inc
mov
adc
mov
js
sbb
jmp
aaa
sbb
gs
cvtdq2ps
cmp
out
inc
or
fisubl
mov
push
xchg
push
loope
aad
mov
daa
jmp
xchg
std
mov
inc
pop
mov
lock
stos
pusha
jnp
jecxz
xor
shrb
mov
inc
push
pop
test
sti
fs
aam
fistps
adc
iret
mov
lahf
jge
inc
add
loope
xor
idivl
jp
stos
cltd
push
dec
cmp
inc
push
movsb
test
dec
xchg
insl
insb
push
mov
jne
int
fidivs
sbb
sub
in
dec
jge
insb
cs
push
cs
dec
lods
dec
pop
adc
inc
fwait
ljmp
shll
xchg
mov
mov
inc
dec
adc
ja
jmp
cs
in
xchg
adc
or
daa
dec
cmc
inc
cld
xchg
clc
pop
fisubs
cmp
mov
fwait
cmp
icebp
xchg
lea
push
adc
or
outsl
test
out
and
dec
in
outsb
cmp
jo
popa
adc
daa
in
repz
popf
pop
push
out
inc
dec
out
js
cwtl
mov
cmpsl
test
jmp
iret
fdivrs
jmp
pop
inc
daa
cld
subb
inc
repnz
lods
and
lods
and
mov
mov
cmpsb
fisttpl
shlb
adc
fs
loope
mov
fnstenv
popf
mov
dec
ja
adc
mov
movsb
adc
cmp
lret
adc
rcrl
mov
and
or
mov
fisttpll
sarl
insb
adc
mov
xor
pop
sti
mov
fadds
jbe
cmp
push
scas
jae
lock
sbb
cwtl
imul
out
sbb
push
sub
inc
xchg
mov
lods
inc
xor
jns
mov
mov
or
lahf
in
or
pop
mov
pop
xchg
sbb
inc
jns
icebp
jnp
jno
cmp
add
mov
inc
mov
pop
lret
inc
push
cmp
dec
loop
and
mov
stos
push
xchg
or
jp
xor
mov
push
mov
and
and
adc
into
dec
jae
and
jg
insl
insb
into
add
inc
loope
mov
testb
dec
mov
xchg
xlat
pop
dec
dec
push
les
dec
dec
push
fistpll
arpl
scas
repz
pop
mov
add
mov
mov
test
dec
je
std
sub
adc
push
push
test
es
aaa
push
adc
sub
inc
jmp
push
lahf
or
cwtl
mov
bound
or
xchg
fs
push
pushf
fnsave
mov
push
jecxz
rcll
push
sbb
lods
or
sbb
out
and
adc
pushf
lahf
mov
and
out
pop
push
lock
push
pop
cmpsb
and
sbb
outsl
inc
loop
inc
adc
xorl
iret
push
les
fstpl
outsl
and
mov
pop
add
sahf
mov
inc
cmp
test
jo
sarb
gs
jp
sub
ss
or
jecxz
push
aaa
xor
fsts
or
out
dec
jnp
mov
pop
mov
push
jmp
lret
daa
xor
xchg
xor
or
mov
js
cmp
nop
cwtl
xchg
push
imul
push
fstl
insl
xor
inc
mov
sbb
adc
bound
cltd
pop
add
mov
test
sbb
fildl
xchg
add
nop
and
outsl
mov
adc
addr16
dec
push
mov
lock
xchg
ret
cmp
inc
xor
lods
inc
sub
cld
popf
mov
mov
xchg
push
mov
push
cmp
push
adcb
jle
stos
fs
sub
sub
rorb
xchg
and
nop
gs
fcomi
sbb
fcomps
lret
call
inc
jmp
or
adc
rcll
loop
pop
stos
cs
stc
int3
test
repz
jb
or
xor
push
scas
mov
or
sbb
das
mov
test
xor
jmp
adcb
ficompl
out
xchg
shl
mov
jg
imul
test
cmp
adc
dec
mov
aam
push
aad
adc
inc
jb
orl
jbe
pushl
int3
mov
mov
lea
push
cmp
jno
aam
fwait
mov
sti
rcrb
jmp
dec
lcall
andl
pop
jnp
adc
out
pop
add
or
stos
aas
js
jl
adc
shrl
xlat
stos
xor
mov
jb
lds
xor
jb
int
push
cmp
pop
in
push
sahf
add
push
sbb
mov
pop
pop
cmp
popa
sub
les
and
inc
sarb
enter
imul
sbb
out
mov
ljmp
cmp
mov
dec
pop
xchg
cmpl
jnp
xor
loope
subl
fcoms
mov
out
sub
test
push
nop
mov
js
addr16
or
pop
mov
fistpll
fisttps
mov
add
out
mov
stos
adc
xchg
mov
sbb
es
sti
test
add
cmp
push
mov
scas
add
stc
sbb
or
add
or
pop
mov
jg
loop
add
add
sub
lret
push
push
inc
add
add
jmp
jb
xchg
and
js
mov
out
xchg
pushl
cld
lcall
sub
je
out
sbb
ret
xor
sub
and
push
mov
xchg
mov
mov
mov
mov
ljmp
scas
pop
push
scas
es
inc
shll
sbb
xlat
imul
mov
lods
insl
std
sub
inc
lahf
dec
mov
cmp
mov
hlt
add
popa
fadd
mulb
fstpl
and
xor
xor
mov
fiadds
sub
sbb
pop
jg
or
int3
xor
pop
sub
btr
mov
pop
rol
shr
outsb
mov
push
mov
jnp
or
or
ja
gs
jae
test
icebp
xlat
lds
dec
jmp
push
out
das
dec
mov
das
imul
mov
inc
or
pushf
rcrb
das
inc
xchg
scas
mov
mov
insl
pop
ret
sbb
xor
out
daa
xor
insb
fldpi
jmp
int3
mov
aas
push
fwait
jle
lahf
inc
in
imul
jl
lods
mov
aas
or
push
scas
adc
mov
pop
lret
add
aas
loop
outsb
jmp
adc
mov
xchg
xor
insl
xor
pop
ljmp
dec
arpl
jmp
daa
ss
jns
mov
xor
push
imul
xchg
xlat
jns
rorb
push
push
cmpsb
call
frstor
xor
xor
inc
xchg
and
xor
ret
jbe
insb
sti
lock
arpl
loop
inc
into
gs
push
ret
dec
int3
xchg
aaa
out
stos
fdivrl
pop
addr16
test
imul
mov
nop
and
cwtl
mov
xchg
pop
sti
mov
loope
inc
xchg
sbb
mov
popa
data16
mov
divl
imul
stc
js
in
arpl
daa
sub
add
test
jno
mov
cs
inc
ret
inc
adc
mov
mov
dec
push
jp
jp
and
sbb
fmulp
mov
outsl
les
inc
mov
lods
xor
outsb
pop
stc
mov
test
pop
ds
push
pop
pop
cmp
pop
pop
cmp
adc
and
inc
dec
aaa
xchg
mov
lahf
lcall
mov
movsb
pop
sti
pop
mov
jp
jbe
pop
mov
fdivrl
mov
orb
xorl
sarl
out
inc
and
and
sub
pop
pop
push
and
push
dec
mov
loop
push
hlt
ds
das
cli
aad
jle
lock
loope
fnstsw
fnsave
ds
dec
ss
add
mov
movsb
iret
or
add
ja
cmpsb
inc
cwtl
loopne
jnp
lods
push
jmp
jp
out
or
pop
jg
pop
aam
mov
and
cwtl
mull
int3
addr16
lock
fcmovb
int
inc
stos
sbb
movsl
xchg
or
shlb
mov
rcr
cmc
push
and
rorb
xchg
xchg
xchg
dec
fdivl
divl
sbb
pushf
sub
mov
jg
or
push
add
mov
fists
in
icebp
leave
loop
pushf
cltd
nop
fsubl
ljmp
sbb
add
test
jg
push
sahf
cltd
divl
push
sbb
inc
into
dec
cmp
arpl
and
aam
mov
sarb
fnstcw
adc
fsub
dec
cmpsb
sub
dec
or
pop
push
xor
inc
cli
adc
xor
ret
jp
jae
push
and
inc
sbb
shll
adc
daa
sbbb
insb
aam
add
jmp
sbb
xor
ret
lods
ss
test
daa
loope
jle
add
cmpsb
and
jae
jnp
fiaddl
jge
hlt
jle
xchg
pop
xchg
sar
in
xchg
and
stc
mov
mov
and
ret
xor
inc
dec
mov
fucom
xchg
enter
cltd
arpl
sub
iret
lea
mov
pop
mov
std
add
ds
outsl
repnz
lcall
sub
sub
stc
inc
xor
jg
jae
mov
pop
and
push
dec
sub
mov
and
daa
adcl
or
jnp
shl
push
repnz
orb
add
dec
aad
ds
pop
mov
test
or
inc
leave
pop
and
lahf
xchg
mov
bound
and
mull
roll
shlb
out
inc
push
cmpl
push
mov
sbb
dec
jge
xor
je
sti
pushf
insb
jne
dec
cmc
mov
push
mov
idivl
pop
sbb
test
mov
inc
mov
je
mov
mov
es
add
movsl
ficoms
mov
xor
cmp
add
inc
pop
hlt
dec
push
pop
and
es
dec
leave
mov
sub
add
jnp
daa
arpl
movsl
mov
push
push
push
xor
std
nop
sahf
outsl
lds
lret
jbe
add
je
iret
adc
test
and
xor
aaa
mov
xchg
add
sub
mov
insb
mov
xchg
fdivrl
mov
daa
adc
test
daa
ss
adc
or
out
inc
jo
push
sbb
add
loop
leave
add
fmull
xor
mov
negb
outsl
and
loop
fidivl
jno
into
arpl
test
jae
cmpsl
cli
sub
nop
mov
sbb
lods
cmp
pop
and
adc
in
lcall
lahf
repnz
rcrb
cltd
mov
or
lea
xchg
mov
sub
jecxz
jl
dec
mov
cmp
mov
push
mov
lret
or
sbb
lea
or
add
out
out
jno
pop
or
and
and
xor
les
sti
mov
cmp
pop
or
and
sbb
xor
call
arpl
xchg
test
je
mov
push
popl
lods
leave
negb
mov
sbb
mov
ja
cmp
and
or
mov
dec
push
leave
push
shrb
scas
cmpsl
push
mov
mov
cltd
pop
mov
pop
push
lret
mov
mov
mov
movb
outsb
lods
jge
mov
rolb
cmpsb
scas
insl
stos
shl
push
dec
mov
decl
into
xchg
inc
pusha
shlb
out
push
xchg
push
sbb
std
inc
xchg
clc
jmp
dec
aaa
insl
pop
fdivrl
xchg
cltd
outsb
inc
push
leave
mov
data16
iret
cmpl
andb
and
sahf
lock
dec
enter
or
push
popa
daa
fimull
in
es
sbb
adc
sbb
ret
sbb
xchg
add
cmc
es
mov
cmpsb
jae
movb
and
faddl
sbb
cmpsl
popf
push
push
sahf
sbb
pop
fiadds
js
shlb
jnp
je
jmp
aas
hlt
enter
dec
or
jb
push
push
int3
pop
mov
add
outsb
xchg
jl
jo
mov
sbb
mov
jl
sub
sub
inc
and
inc
stos
in
icebp
dec
aaa
and
xor
adc
pushf
mov
test
push
mov
ss
mov
pop
fmuls
les
add
xor
movb
cmp
and
data16
mov
xchg
jle
or
cmc
jge
outsl
or
lock
je
mull
pusha
sub
test
ja
lahf
adc
out
mov
mov
iret
shrl
ds
ret
out
int3
add
sub
jle
inc
test
mov
push
outsb
je
aam
out
mov
and
ret
out
mov
jb
jge
lahf
xchg
sbb
adc
mov
mov
mov
mov
jle
adc
sbb
jae
into
xchg
xchg
shrl
jb
adc
pop
dec
int
push
mov
and
inc
cs
inc
bound
push
xchg
mov
cmp
in
jge
cmp
adc
orl
outsl
subl
jnp
add
or
mov
in
sbb
or
data16
xchg
dec
nop
cmp
addl
mov
cmp
pop
fdivl
js
test
jg
sbb
cmpsl
or
mov
mov
repz
int3
push
in
jno
cmp
je
and
add
call
popf
dec
sarl
or
xchg
aad
hlt
jnp
adc
lods
fadd
mov
pop
or
push
add
sub
icebp
jecxz
dec
in
xchg
inc
scas
sbb
sbb
dec
adc
pop
in
dec
pop
loope
icebp
cmp
mov
sbb
push
cmpsb
push
shrl
hlt
dec
cltd
cmp
xchg
cmp
ljmp
add
aas
xchg
aam
push
loopne
outsl
jl
mov
sbb
push
cmp
cmp
jge
scas
cmp
incl
lds
cli
ja
outsb
dec
arpl
pop
push
subb
sub
and
mov
dec
lods
inc
xor
push
or
orw
imul
stos
cmc
jl
insl
push
ret
cmp
mov
cmc
sub
inc
inc
fs
sbbb
xchg
testb
rolb
dec
xchg
jbe
std
sar
and
or
mov
imul
enter
sbb
adc
pushf
cmpsb
lds
adc
or
and
cwtl
jecxz
outsl
sbb
fnstcw
dec
lahf
or
adc
xchg
lret
mov
out
std
int3
push
jg
push
dec
lahf
inc
out
fwait
popa
arpl
fs
sahf
sti
gs
je
mulb
cmpsl
sbb
insl
cmpsl
sub
lahf
in
lds
push
fmuls
or
out
pushf
sub
jmp
jb
sub
xor
push
inc
roll
xchg
push
sub
aad
xchg
pop
xchg
push
mov
mov
repnz
scas
mov
clc
push
std
pop
push
rorb
adc
jle
loopne
or
lahf
xor
ret
test
sub
sbb
pop
call
ds
rolb
pusha
and
jne
hlt
pop
in
repz
inc
jae
sarb
std
mov
and
imul
mov
cmp
or
xchg
out
outsl
ror
in
fldt
cmp
imul
pop
jl
inc
mov
inc
jg
mov
sbb
jbe
add
and
inc
enter
mov
ds
xor
test
dec
mov
aad
idivl
es
repnz
loope
push
test
mov
sbb
mov
mov
hlt
jl
ficomps
pushaw
mov
sbb
mov
in
sti
lea
das
adc
arpl
rorl
into
nop
cld
imul
out
lods
xor
add
jae
in
aas
xor
das
call
sbb
pop
bound
fs
and
push
sti
div
and
or
lret
sbbb
cmpsb
mov
sahf
cmp
pop
gs
orl
std
cmp
adc
dec
inc
jno
jmp
sti
mov
xchg
lahf
push
mull
sub
mov
mov
and
inc
sti
or
or
push
mov
nop
xchg
aad
imul
dec
lock
adc
sbb
mov
mov
dec
sbb
ret
bound
xchg
jo
and
cmp
jle
movsb
xlat
jns
mov
test
leave
mov
sub
jnp
sbb
jmp
loop
add
cld
in
rcll
mov
pop
cmpsb
inc
add
push
inc
int3
in
mov
inc
lds
cs
cmpb
mov
mov
mov
push
enter
aaa
sub
cmp
insl
psubsb
jecxz
test
popa
or
lods
inc
cmp
in
fimull
and
jbe
sub
mov
aas
lea
mov
xor
stos
xchg
ljmp
shll
rcl
stc
out
cltd
mov
and
xlat
sbb
inc
xchg
sub
out
adc
lock
fiaddl
or
call
xchg
push
test
out
outsl
mov
adc
push
push
jge
inc
test
push
je
jne
fsubl
cwtl
insl
call
dec
pusha
mov
and
xor
cmp
xchg
clc
mov
add
inc
inc
hlt
fs
mov
jl
pop
adc
test
pusha
cmp
ds
adc
ljmp
es
lahf
ret
rorb
aas
push
aas
mov
ret
outsl
mov
cmc
je
jne
ljmp
pop
cmp
out
and
fs
popf
mov
daa
xchg
lcall
push
outsb
outsl
add
pop
pop
aad
sub
test
or
inc
xor
scas
xor
ret
loop
jecxz
adc
call
mov
daa
jne
adc
cmp
mov
pop
mov
jbe
cmp
mov
shll
int
xor
sahf
stc
insl
mov
je
or
lcall
mov
inc
fs
mov
and
mov
out
sub
mov
jb
insb
mov
jbe
push
inc
fwait
xchg
cmpsl
mov
fbstp
cmpsl
cmp
lock
or
in
mov
fnstsw
imul
pop
push
and
cmp
je
scas
dec
pop
movsl
jp
out
adc
sti
pop
das
jne
or
scas
mov
rclb
cmp
enter
mov
int
cmp
lea
clc
inc
xchg
daa
mov
xchg
dec
shlb
jo
mov
loopne
cwtl
cmpsb
movsb
pop
stc
push
sahf
mov
int3
out
ds
insb
andb
lock
push
sbbb
mov
mov
mov
and
pop
cmpsl
push
icebp
cmp
fists
pop
bound
pop
mov
lcall
pop
stos
stos
xor
inc
xchg
adc
mov
mov
xlat
scas
push
mov
push
in
es
idivb
adc
cmpsl
mov
je
pusha
outsb
adc
jp
incl
jl
cmpsb
dec
push
jmp
outsb
pop
adc
shlb
out
aaa
xor
test
hlt
sbb
or
dec
dec
dec
pop
push
sbb
scas
sbb
xor
inc
aam
xlat
mov
cmp
mov
cmp
fcoml
test
pop
cmpsl
fimull
add
dec
rcrb
and
or
mov
addr16
mov
xlat
mov
sbb
add
adc
cmp
fiadds
push
insl
std
jne
iret
jnp
loopne
adc
push
cmp
ja
xor
out
insb
cmpsb
and
leave
nop
add
dec
mov
cltd
aas
and
fstpl
fsubl
mov
ret
and
sbb
inc
adc
sarl
sbb
push
mov
lret
mov
adc
imul
mov
jb
lret
sub
data16
push
cmp
or
sbb
adc
sub
jnp
lcall
xchg
mov
mov
cmpsl
xchg
lods
test
cmc
in
mov
add
insb
int3
adc
int
mov
sub
cmp
imul
lods
or
data16
fisubrs
jge
mov
or
adc
pop
loope
xor
ss
dec
or
lahf
inc
mov
leave
pop
pushf
sahf
cmc
pop
fs
insl
aas
ljmp
and
ret
fwait
fs
sub
popa
stc
cmp
cmp
mov
dec
rcll
fwait
shll
mov
jns
xchg
add
fidivrl
or
sbb
mov
cmpsb
out
aam
inc
cld
hlt
call
pop
imul
lods
test
sub
sbb
adc
xchg
lock
scas
cmp
es
jns
aaa
out
imul
decl
xor
inc
inc
mov
xchg
pop
faddp
inc
test
sbb
sub
pushf
xor
jo
xor
and
mov
fnstenv
movsl
test
aad
clc
lods
jp
xchg
sbb
cmpsl
cmp
adc
pop
repz
scas
popa
mov
aad
adc
push
or
stos
jno
pop
mov
dec
pop
dec
or
cmp
cmpb
movsb
cmp
pop
xlat
mov
dec
in
insb
pop
mov
in
jnp
push
pusha
xchg
jae
aam
adcb
inc
sub
and
in
sub
test
xchg
xchg
jp
mov
ljmp
jbe
dec
inc
mov
icebp
aas
sub
scas
fwait
cltd
push
cmp
xchg
xor
mov
push
pop
cmp
andb
loopne
jecxz
jg
sub
scas
mov
in
inc
mov
cmp
mov
loope
add
pushf
jne
cmp
into
or
mov
push
and
out
imul
jno
push
add
xor
fsts
test
xchg
xchg
fldt
and
jno
movsl
sub
jns
pusha
adc
xchg
ljmp
fcoms
xchg
adc
mov
xchg
jbe
jge
dec
add
sbb
iret
scas
cmpb
dec
cwtl
ret
mov
imull
shll
add
scas
xor
pop
sub
movsb
ret
enter
bound
jge
push
jae
xchg
inc
or
dec
mov
cmp
pop
rcrb
mov
pop
inc
push
loope
stos
mov
scas
dec
in
jecxz
mov
add
repz
mov
dec
xor
stc
dec
sbb
push
sbbb
jae
push
out
test
aad
scas
xchg
inc
jns
fnsave
mov
inc
out
addl
xor
sub
push
cmova
gs
ret
add
adc
and
push
pusha
ja
or
data16
mov
insl
cmp
sbbl
popl
pop
inc
add
lods
dec
push
jo
mov
pushf
rcl
in
jno
int
cli
cmp
out
test
cmc
add
push
test
jl
shrb
dec
pop
mov
enter
add
push
push
jle
sbb
mov
or
gs
je
lea
push
aad
dec
pusha
insb
out
dec
cmpsb
sub
sub
dec
mov
inc
mov
cltd
xchg
xorb
shlb
jmp
das
lret
xor
pop
fbstp
subb
outsl
mov
mov
ds
or
mov
mov
dec
pop
sub
les
xchg
dec
push
push
xor
jmp
cmp
cmp
push
lea
dec
push
aas
xlat
mov
je
mov
ret
iret
dec
cmp
aam
push
add
js
fisttpll
daa
cmp
cmp
mov
xlat
aad
cld
xorl
xchg
sub
jb
and
cmp
push
or
inc
loop
decl
push
cld
pop
mov
and
sub
call
xor
movsb
leave
divl
inc
cltd
arpl
pusha
cmpsl
aas
pop
pusha
into
dec
movsl
xor
fldt
pop
movsl
imul
mov
sti
pop
in
inc
std
jbe
and
in
inc
aas
iret
mov
addr16
push
inc
test
lret
leave
mov
lods
or
xchg
loope
lahf
insl
or
xor
lret
je
adc
or
icebp
loope
iret
mov
add
scas
sahf
cld
loop
mov
scas
std
lcall
push
lea
cli
repz
in
mov
mov
aad
push
jb
aaa
lcall
push
repz
or
aas
sub
xorb
jecxz
imul
mov
xchg
rorl
mov
sar
ficoms
scas
adc
popf
das
and
subl
daa
movsl
adc
adc
jg
cld
lods
shll
push
pop
movsl
ja
scas
pusha
loop
lods
daa
movsl
pop
popa
cmpsl
push
dec
dec
adc
xor
in
mov
cmp
test
das
mov
jle
xchg
sbb
les
jb
or
pop
outsl
icebp
jge
and
ret
xor
inc
fs
cmc
pop
roll
mov
clc
sbb
pop
jae
imul
lea
ja
mov
xchg
enter
push
lahf
cld
ds
orb
jecxz
test
pop
sbb
fadd
pop
js
jbe
push
rorl
into
lahf
movsl
add
push
push
jno
rolb
adc
frstor
mov
ret
out
sub
iret
sahf
ds
subl
pop
adc
pop
in
int
cmc
cmp
lods
sub
add
jne
push
or
pop
out
cwtl
mov
xchg
iret
jno
xor
aad
push
testl
in
hlt
ret
and
les
ds
addl
jecxz
ret
lock
movsb
add
push
mov
inc
cmpl
xchg
sbb
aaa
xor
sub
shll
imul
xlat
sarb
mov
pop
push
mov
leave
or
lods
daa
mov
lcall
xchg
pop
cwtl
shlb
stos
dec
fcomi
pop
pushf
hlt
adc
push
cmp
test
pop
push
dec
sahf
pop
in
leave
shll
fcompl
js
xor
xchg
mov
pop
push
pushl
enter
stc
shrl
test
push
adc
pop
sub
loopne
adc
jae
adcl
repz
push
or
xchg
mov
out
sub
adc
dec
sbb
push
lret
mov
sub
inc
cli
lock
fcom
fistps
jb
mov
push
cmp
mov
rorb
xorl
jae
sbb
jmp
jne
pop
imul
mov
rcr
divb
ftst
fdivr
pushf
add
imul
cmp
cmc
lahf
sahf
push
xor
or
inc
dec
outsl
andl
and
inc
add
neg
out
xchg
test
stos
inc
inc
jno
push
push
leave
cmpsl
fmulp
mov
or
loopne
mov
inc
clc
rorl
bound
mov
sahf
mov
hlt
popf
add
xor
testb
xor
pop
rol
aam
jb
out
xchg
rcl
push
sbb
jbe
in
dec
push
in
or
int3
adcb
jo
push
jnp
inc
mov
mov
and
scas
pop
out
pop
mov
stos
test
fwait
daa
cli
aam
cs
mov
mov
ljmp
or
aas
and
aaa
movups
xor
ja
roll
jl
pop
std
mov
shrl
lds
mov
xor
xchg
push
cltd
pop
mov
dec
ret
pop
popf
mov
inc
lcall
repnz
inc
inc
sbb
movsl
mov
stos
and
mov
shll
aas
mov
hlt
outsb
movb
dec
push
inc
pushf
lea
das
stos
lods
or
lahf
rcll
sbb
aaa
cmp
sub
sbb
insb
dec
and
jnp
lods
fstpl
sub
add
shrl
mov
neg
addr16
cmc
sub
add
inc
xchg
pop
dec
mov
xor
push
in
imul
push
orb
in
pop
pop
pushf
jl
xor
pop
xlat
inc
insb
and
js
xor
push
arpl
mov
rcrb
dec
dec
push
shr
and
mov
mov
jmp
rorl
xor
fucomip
imul
out
lods
jo
and
into
shll
ret
loope
mov
in
out
mov
jl
nop
into
pop
adc
divl
negb
je
nop
jp
mov
daa
push
adc
pop
outsb
inc
xor
mov
fldl
dec
or
out
sbb
je
dec
jp
jecxz
mov
jbe
push
fnstcw
add
adc
jmp
jb
out
cmpsb
mov
movsl
mov
dec
mov
dec
add
and
mov
lds
mov
adc
pop
in
or
mov
mov
rorb
sbb
pop
adc
and
movsb
iret
lds
push
cmp
in
inc
dec
jmp
jnp
mov
rcl
shrl
shlb
sub
jmp
rolb
ret
dec
mov
and
imul
lock
sub
or
imul
js
ds
mov
mov
pop
shlb
popa
add
sub
lea
cs
loope
orb
cld
dec
or
jmp
pop
hlt
cmc
xlat
jbe
ret
lret
repnz
data16
outsl
lods
sub
and
push
jp
or
add
std
jae
rcr
fildll
rcrl
jmp
sbb
mov
aad
in
pusha
mov
sub
sbb
testb
xchg
cltd
popa
out
rcrb
daa
insl
adc
cmpsl
push
js
push
fcomi
dec
imul
loop
cmp
fwait
movsb
cltd
jno
jne
pop
loop
mov
ret
repz
in
int3
xchg
push
fbstp
xor
and
mov
dec
mov
push
stos
mov
aam
lock
adc
xchg
cmp
sub
add
mov
mov
dec
and
in
push
rcrb
out
adc
dec
stos
sub
fildl
push
add
xor
ljmp
inc
andl
rorl
outsl
push
jbe
push
scas
xchg
push
add
add
lods
pop
in
dec
inc
fmul
ficomps
jnp
inc
adc
mov
mov
push
js
mov
adc
loope
inc
cmpsl
rcll
mov
movsl
inc
into
in
mov
shl
cmp
cwtl
cmp
and
mov
add
mov
in
dec
popa
shll
mov
dec
pop
xchg
cs
jl
xchg
pop
push
lock
insb
sub
in
mov
mov
lock
or
mov
jmp
dec
ds
lds
addr16
std
xor
push
out
and
gs
mov
stos
and
clc
ret
insb
pop
fwait
jp
jbe
sub
ljmp
mov
mov
sbb
lds
loop
in
rclb
mov
fidivs
xchg
inc
popa
push
out
es
movsb
xchg
xchg
sbb
xchg
scas
mov
adc
pop
das
shl
fchs
jle
push
push
sub
inc
shrl
inc
or
popf
push
fs
dec
pop
icebp
pop
jae
into
scas
stc
sbb
dec
addl
adc
js
sbb
cmc
int3
sub
adcb
fs
outsb
and
jle
rcrl
push
loope
or
dec
test
add
lahf
lret
or
and
addr16
lock
sbb
sti
stc
sbb
adc
das
mov
adc
cli
idivb
lahf
dec
andb
and
cmc
fistl
ds
jbe
and
jecxz
xchg
fstl
and
mov
pop
adc
ljmp
subb
int
xchg
inc
lret
mov
mov
push
dec
jae
test
push
cmc
movsb
jmp
cld
dec
std
jmp
mov
ja
xor
out
pop
mov
aam
or
and
jne
insl
push
inc
ds
mov
mov
inc
mov
mov
xchg
jno
sbb
into
aad
test
lea
inc
js
loopne
bound
mov
orb
sub
xor
stos
add
addr16
psubq
cmp
int
loop
popf
xchg
stc
je
std
pop
popf
xor
shlb
or
inc
lahf
pop
adc
daa
dec
sub
and
mov
enter
xchg
lcall
pushf
mov
call
inc
xor
enter
push
ret
mov
xlat
add
enter
lret
push
es
adc
cld
push
call
mov
inc
sbb
test
enter
pop
cs
cmpl
out
adc
sbb
dec
jnp
cmpsl
lods
sub
add
push
dec
in
mov
sbb
repnz
adc
cwtl
adc
in
sub
and
cmc
pop
sbb
pop
iret
stos
xchg
dec
ret
xor
sbb
xor
jb
lea
mov
sbb
xor
cltd
pop
xlat
rorb
sub
push
data16
arpl
push
stc
dec
ret
or
xchg
dec
jl
cmpsb
inc
dec
mov
pop
pop
insb
jle
mov
lahf
and
int
fimull
int3
in
xchg
jle
cmpl
jecxz
and
cmpl
movsl
jmp
iret
mov
das
std
out
sub
jo
fisttpl
mov
xor
clc
iret
sub
into
push
insb
mov
sarl
loope
ret
jnp
test
in
mov
jp
cmc
pop
cmpsb
cmp
pop
fwait
das
cmp
push
imull
push
or
dec
fcoml
sub
mov
sti
mov
pop
sbb
pop
or
imul
xor
mov
mov
fildl
and
rclb
cmp
pop
shll
sbb
aaa
ds
mov
int
pop
xchg
stc
adc
std
filds
jns
lahf
les
or
add
xlat
push
xor
gs
sub
mov
in
xchg
and
push
imul
mov
jnp
xor
mov
and
and
sub
scas
jno
jmp
xor
mov
xor
mov
cmp
ja
pop
pop
mov
adc
sbb
mov
arpl
push
movsb
push
cmp
mov
sahf
aaa
cld
mov
adc
mov
pop
jns
test
ret
mull
dec
add
aam
cld
call
mov
and
lds
es
jge
mov
repz
cmp
repz
add
or
in
and
mov
mov
xor
mov
faddl
push
repnz
stos
push
lahf
or
push
dec
pusha
orb
and
dec
pop
imul
sbb
jp
out
cltd
adc
nop
out
add
or
imul
dec
pop
aas
bound
sbb
out
and
and
and
in
les
lods
xchg
lahf
dec
push
enter
icebp
ljmp
xchg
js
xchg
iret
aas
mov
into
fists
xor
mov
cmpsb
sbb
inc
rcr
movsl
add
jmp
fnstcw
xlat
cwtl
cmp
mov
fisubs
rolb
inc
ficompl
jmp
mov
mov
insb
xchg
adc
push
mov
and
subb
daa
pushf
mov
pop
pop
inc
cmp
cmpsl
std
stc
mov
leave
jne
lods
icebp
das
adc
xlat
ret
lea
and
enter
jle
jno
outsb
enter
jne
pop
rcl
push
out
scas
add
mov
addb
fists
cmpsb
push
pop
push
push
jge
icebp
and
or
and
xchg
hlt
or
repnz
jg
insl
jle
jbe
mov
mov
cmp
gs
jl
push
loopne
rep
insb
movsl
ss
jbe
mov
inc
or
repz
popf
pop
dec
or
jge
pop
enter
and
cmp
jp
cmp
jb
jl
out
pusha
ja
call
push
lahf
mov
jmp
ss
pop
stos
or
mov
aas
push
inc
outsl
mov
movsl
adc
mov
xchg
pop
cmp
mov
and
or
cli
mov
adc
jecxz
mov
push
cli
jnp
out
xchg
cs
repz
adc
push
imul
fiadds
jns
pop
dec
das
in
jmp
insl
add
xlat
inc
and
xor
mov
push
xchg
jle
fdiv
push
lods
scas
xchg
or
data16
adc
pop
xchg
or
negb
push
mov
xchg
mov
lods
movsb
lods
outsl
mov
mov
popa
int3
push
jmp
mov
imul
adc
int
xchg
adc
sub
rorb
push
icebp
sbb
inc
cmp
pop
xchg
sbb
jae
sbb
and
stos
lret
jns
idivb
adc
jnp
adc
cmpsb
clc
inc
or
dec
and
push
repnz
dec
sti
add
and
aam
sbb
xchg
and
pop
push
xor
insl
enter
sub
sub
dec
paddusb
jno
outsb
fists
jp,pn
adc
dec
movsl
mov
pop
mov
int
inc
scas
mov
cli
int
push
daa
inc
out
and
jg
inc
cs
xor
ficoml
lret
xor
cld
pop
add
inc
jno
mov
jmp
ret
das
test
jns
in
pop
push
xchg
lods
cmp
cmp
lods
out
clc
and
bound
test
mov
repz
adc
push
adc
cltd
adc
std
adc
xor
add
inc
cmp
daa
sub
cmc
daa
shl
inc
mov
out
test
push
popa
daa
mov
sbb
cltd
lods
mov
movsb
sbb
dec
stc
dec
repnz
std
push
cld
add
xor
rcll
mov
inc
mov
mov
fisubs
sbb
out
cmp
aad
pushf
cltd
sbb
mov
fisttpl
mov
sahf
out
pop
lods
xor
mov
fiaddl
mov
lods
mov
test
mov
int3
or
leave
daa
mov
jecxz
mov
and
and
push
cmpsl
stc
scas
lret
stc
push
das
or
aad
js
imul
add
addb
rorl
cmp
jle
aad
mov
test
repz
aam
outsl
or
mov
gs
pop
adc
inc
mov
xchg
fistps
lcall
mov
add
negl
leave
mov
push
inc
xchg
insl
fistpl
and
insl
inc
out
pop
pop
jo
mov
mov
loopne
lock
js
adc
xor
cs
xlat
jbe
pop
inc
or
bound
mov
mov
sbb
cmp
pop
lret
pop
sub
or
xor
sti
jge
mov
sub
xlat
push
movsl
and
outsl
aad
inc
outsl
popa
ja
in
fsts
pop
inc
mov
inc
inc
lcall
hlt
jmp
jge
out
inc
outsb
dec
loop
stc
iret
xchg
and
fnsave
or
fisubs
pop
xor
adc
test
out
sti
bound
add
pop
aam
sbb
lcall
cmp
mov
lock
jmp
lods
cmpsb
mov
pop
insl
mov
stos
mov
add
cmpb
xor
adc
fdivr
sbb
ffreep
nop
rorl
hlt
sbb
mov
pusha
enter
or
outsl
out
inc
jge
icebp
sub
pop
pop
out
test
dec
xchg
decl
in
xchg
mov
stos
adc
inc
stc
fucomp
decb
push
sbb
fdivr
insl
add
dec
pop
dec
pop
xchg
mov
call
push
cmpsl
nop
neg
ret
jecxz
adc
push
imul
pop
insb
sub
scas
pop
mov
xor
jle
jnp
ret
jno
cmpsl
shl
in
xchg
mov
cmc
stos
push
lret
mov
mov
cmp
psrlq
outsl
xchg
sbb
fwait
push
sub
repnz
add
enter
out
jl
xor
stos
scas
in
add
out
imul
push
sti
aam
movsl
mov
aaa
insb
stc
ss
sti
shll
sub
dec
xlat
mov
in
rolb
cmp
scas
testb
ret
sbb
push
sbb
push
cli
js
xchg
lods
pop
mov
or
mov
sbb
sahf
pop
pop
popa
cli
mov
arpl
frstor
mov
not
mov
fnstsw
jg
add
aaa
mov
fwait
sbb
add
mov
mov
sub
add
mov
std
rolb
adc
out
sub
js
popa
pop
push
sbb
pop
mov
add
aam
or
xchg
and
pop
jle
out
cmp
outsb
scas
push
insl
shlb
jnp
xchg
fdivrs
into
mov
dec
nop
sbb
sub
aad
hlt
mov
mov
cwtl
loope
mov
add
cli
fwait
test
adc
shl
cli
gs
clc
int3
xor
jbe
repnz
inc
jl
leave
and
subb
inc
into
push
mov
xor
inc
jge
cmc
mov
sub
pop
ss
dec
or
mov
fstp
jnp
push
cmp
outsb
push
fidivrs
das
mov
push
lcall
mov
lret
xor
cmpb
lds
orl
mov
sarl
scas
push
jl
mov
cmp
mov
cld
sbb
in
push
push
sbb
push
inc
sbb
xor
jno
add
mov
push
jb
lret
std
shrb
fistps
inc
xchg
inc
push
xor
xor
sub
lret
insb
aaa
lods
sahf
daa
ds
and
jecxz
mov
call
or
pop
clc
ret
rcrl
das
and
in
cmp
sbb
xchg
sub
int
pop
cld
push
ret
in
xchg
mov
mov
in
repnz
dec
mov
add
or
cs
adc
xchg
xlat
adc
jns
mov
pop
sub
inc
mov
and
cmp
loope
popa
movsb
or
jne
jb
sahf
cld
cmp
mov
cmp
int3
inc
jg
jnp
and
int3
repnz
out
adc
mov
sar
jmp
mov
iret
lahf
cld
int
hlt
leave
dec
xor
cmp
imul
mull
dec
inc
cmc
inc
ss
cmp
popf
pop
int3
pop
push
fmuls
out
jns
mov
or
pop
inc
repnz
ret
push
or
pusha
rclb
adc
pushf
in
sbb
imul
cmc
or
ss
loopne
das
push
imull
pop
cmp
jne
shlb
sbb
cmp
int3
xchg
int3
fcmovu
push
sbb
fwait
xchg
push
mov
dec
pop
jge
adc
stos
sahf
sbb
cmp
lea
lahf
pop
lods
cmp
int3
adc
sbb
loope
ja
sti
xchg
fwait
out
push
dec
mov
pop
sub
ljmp
xchg
mov
pop
dec
jmp
movsl
int
sub
insl
shl
clc
cmpsl
mov
cld
or
imul
and
xchg
xchg
inc
or
jge
sbb
fiadds
mov
mov
or
in
mov
jno
mov
out
sub
pop
pop
loop
push
dec
or
mov
pop
movsl
inc
mov
fistpll
inc
jp
in
jl
sbb
sbb
scas
push
arpl
inc
bound
mov
sub
stos
sbb
xor
mov
ss
pop
xchg
fiaddl
call
ret
in
and
mov
clc
scas
pop
add
sub
jbe
jmp
ficomps
repnz
or
cli
sahf
or
negl
stc
or
inc
add
push
rcrb
sbb
hlt
xor
in
mov
icebp
mov
es
dec
jnp
jo
clc
mov
mov
mov
rcrl
inc
mov
sub
sbb
adc
xor
movsb
repz
jge
ja
mov
pop
shrb
xchg
test
adc
xchg
iret
and
xlat
in
dec
pop
repz
test
cmp
push
push
cmp
mov
mov
dec
mov
scas
lods
nop
xchg
stos
loop
add
fwait
mov
cltd
test
les
fstpl
xor
sbb
sub
fcom
sbb
sbb
test
sbb
movsl
sbb
mov
add
mov
and
cmpxchg
movsl
je
out
outsb
cmp
leave
and
cmp
sti
iret
fcmovne
add
xchg
das
push
scas
sub
test
push
pop
loope
loop
dec
nop
bound
fimull
inc
xchg
pop
xchg
lahf
xchg
mov
scas
xor
pop
adc
jnp
clc
std
fsub
movsb
and
cmp
loope
sti
pop
or
test
lret
dec
lock
or
jae
dec
sbb
sub
das
and
xor
cld
inc
sahf
or
mov
jl
push
push
lahf
out
push
mov
cld
lods
push
lds
jge
mov
shrl
jno
jmp
mov
int
fldl
lods
adc
andl
and
mov
rcrl
sbb
mov
lods
or
js
dec
mov
ljmp
add
outsb
fistps
aad
leave
xchg
imul
iret
and
jno
call
mov
and
xchg
lods
sbb
dec
das
xor
push
sub
lea
jl
les
adc
cwtl
mov
dec
out
fldcw
cltd
lret
mov
leave
sub
cmp
push
mov
mov
outsl
lods
mov
ret
push
xor
sbb
mov
cmpsl
pop
jg
loop
push
mov
fwait
sub
ror
dec
das
scas
xchg
enter
mov
mov
dec
lahf
daa
mov
mov
mov
and
mov
mov
adc
into
jmp
ret
push
dec
mov
push
pop
mov
cmp
push
in
xor
rclb
lods
loopne
mov
cwtl
jl
mov
mov
sarl
enter
sub
fistpll
xor
inc
adc
fs
cmp
add
xchg
push
movsb
ficomps
cmp
adc
rol
into
push
or
or
cmp
jp
pop
pop
cwtl
add
xchg
mov
jg
xor
dec
hlt
mov
lock
fldcw
mov
xchg
sub
call
nop
mov
lretw
and
cli
enter
inc
add
adc
out
fcmovnb
shll
je
mov
mov
pop
cmpsl
test
push
lahf
dec
mov
cmp
or
into
or
push
xor
int
xorb
cmp
xchg
push
mov
mov
cmp
les
clc
fistpll
inc
and
pop
cli
cmp
xor
xchg
push
in
push
fidivl
cmc
jecxz
or
fdiv
push
cmpsl
push
orl
loopne
leave
adc
push
fsubr
leave
mov
adc
pushf
das
or
mov
int
sub
int
jecxz
je
mov
mov
or
arpl
repnz
cmc
adc
and
xor
fwait
dec
or
sbb
sbb
or
push
cmp
mov
jl
inc
xor
repnz
int
lods
sbb
lea
into
adc
jb
cmp
cmc
stos
or
xchg
mov
iret
mov
xor
int3
imul
adc
mov
fs
addb
dec
lock
mov
sub
dec
rolb
or
add
sbb
jmp
sbb
call
xlat
mov
push
lret
adc
sub
sub
xchg
lds
dec
les
push
xchg
lcall
addr16
ret
jge
data16
aam
in
hlt
or
mov
push
por
jb
push
out
into
rcl
ja
xchg
dec
insb
add
sahf
xchg
mov
popa
dec
adc
cmp
rcrl
adc
pop
sbb
sub
pop
mov
fs
cmpsl
jge
pop
fiadds
jmp
xchg
and
cmpsl
pmaxub
out
xor
inc
ja
sbb
jae
push
mov
fnsave
sub
mov
sbb
fbstp
push
push
loopne
into
or
add
sbb
lds
xchg
xor
mov
sub
rcrl
jae
jp
popa
cmc
push
xor
jg
jnp
cs
jp
sbb
cmpb
jmp
jmp
test
pop
rorl
xorl
or
dec
pop
sbb
mov
push
pop
stc
jo
xlat
insb
imul
pop
insl
aaa
movsb
jno
mov
ds
xchg
mov
mov
and
std
jb
lret
out
or
imul
jns,pn
in
fbld
in
xor
jno
dec
pop
push
push
cmp
fstpt
stos
lahf
int
cltd
cmp
sub
push
sahf
test
repz
icebp
mov
imulb
shlb
push
push
fdivrl
hlt
outsb
stos
pop
lods
lahf
inc
jmp
dec
js
cmp
push
movsb
pusha
stos
cli
test
or
inc
xor
inc
in
mov
int3
cltd
push
int
pop
or
icebp
xor
push
pop
pop
fsts
mov
cmp
or
jo
fisttps
in
mov
shl
aaa
mov
xor
mov
xchg
movsb
in
testl
pop
repnz
jbe
mov
outsl
rcrl
enter
addb
daa
divl
lock
scas
mov
push
ret
cmpsl
enter
mov
mov
mov
stc
lret
pop
into
lea
int3
sahf
and
out
fisubrs
shll
pop
movsb
or
lea
sub
les
lock
sbb
dec
inc
xchg
ss
insl
lods
je
insl
push
scas
sbb
iret
pop
mov
push
inc
int
push
fisubs
xchg
jecxz
stos
das
lods
jmp
push
clc
movsl
cltd
pop
divl
sar
ds
sub
in
popa
subb
movsl
dec
mov
mov
lods
adc
inc
testl
clc
sbb
repnz
or
cli
and
aas
mov
scas
int
sbb
stc
or
in
add
fbld
fisubl
ret
loop
call
das
push
aam
xor
jmp
popf
movsb
add
xchg
dec
dec
imul
jle
call
aad
or
gs
xlat
cld
mov
mov
jge
pop
nop
or
xchg
ret
fstpt
les
hlt
les
sub
rcrb
loopne
jnp
arpl
cmp
pop
cltd
fwait
jge
nop
mov
push
mov
icebp
mov
inc
add
ss
mov
mov
sub
and
insl
add
mov
lods
xor
dec
pop
loopne
fstps
xor
ficompl
imul
clc
test
jl,pt
lcall
pop
jmp
mov
mov
aad
mov
xor
add
or
pop
jae
dec
call
and
mov
lock
lahf
es
in
mov
sbb
mov
add
mov
loop
aad
test
scas
ss
aam
xchg
das
sub
adc
sti
shlb
clc
ror
cmp
adc
jmp
or
cmp
out
repnz
orl
add
testl
cmp
inc
xchg
pop
jp
pop
cmp
cli
jo
pop
outsb
test
and
adcb
mov
pop
test
gs
imul
pop
movsl
or
les
movsl
adc
loopne
sbb
pusha
mov
sbb
fs
jno
lcall
inc
jae
mov
call
cmp
sbb
cmpsl
test
cmp
test
add
cli
clc
icebp
lahf
mov
adc
pop
push
xor
cwtl
adc
fwait
inc
repnz
test
pop
adc
push
loopne
ds
sahf
adc
movsl
mov
adc
mov
sub
es
test
pop
add
int
ja
int3
push
push
and
xchg
cmp
mov
mov
lds
dec
lret
cmp
test
das
dec
jb
adc
push
gs
jns
jns
sti
pushf
lret
mov
retw
sarl
add
xor
xor
xor
pop
decl
mov
out
fdiv
in
dec
jb
dec
loopne
ret
cli
int3
jo
movsl
int3
pop
add
rclb
aas
cmp
test
dec
mov
lcall
push
dec
ret
mov
inc
sbb
xor
pop
fistl
sub
jge
cmpsl
loope
lods
out
dec
cmp
xor
jmp
inc
mov
cld
xchg
and
push
fdivrs
stc
clc
or
out
mov
jecxz
push
xor
orb
or
call
repnz
imul
js
pop
xor
hlt
mov
gs
sbb
mov
dec
sahf
push
das
rcll
lea
hlt
push
cltd
jmp
test
out
cmpsb
push
shlb
dec
cmp
rcrl
push
inc
mov
test
or
cmp
aas
xchg
pop
inc
sub
test
pop
rclb
lahf
cmp
push
mov
mov
adcb
enter
or
and
int3
popl
mov
das
fiadds
push
jns
sahf
mov
pushf
push
jmp
mov
dec
icebp
jo
pop
out
in
jbe
pop
cmc
scas
ds
inc
jecxz
ret
inc
movsl
sbb
cltd
in
lahf
das
push
pusha
xor
das
push
add
dec
jge
jbe
mov
int
cltd
test
repz
adc
sbb
or
push
jl
pushf
aas
inc
jg
xchg
xor
lretw
mov
push
mov
sub
rcrb
inc
hlt
pop
test
loopne
adc
shlb
hlt
outsl
or
int
jb
xor
sub
mov
call
adc
cs
std
jp
adc
cld
lock
mov
das
push
push
outsl
add
mov
mov
pop
icebp
lahf
adc
push
imul
dec
popfw
sub
push
fldt
xchg
cmp
ret
int3
ss
fnstcw
int3
jl
loop
and
fiadds
pop
dec
aaa
scas
mov
iret
push
negl
ss
push
jbe
ljmp
inc
subb
push
xchg
mulb
sub
and
movsl
mov
pop
xchg
add
xchg
vzeroall
sbb
mov
pop
and
pop
fneni(8087
ja
sbb
mov
insl
in
inc
ja
mov
push
sub
pop
inc
mov
dec
and
adc
xor
mov
mov
xchg
arpl
mov
and
fwait
mov
mov
add
mov
sub
aad
cmpsb
dec
xchg
movsb
jp
bound
push
cwtl
jbe
std
ret
adc
fistps
in
lret
jp
aam
and
mov
jle
adc
pop
mov
mov
nop
sahf
add
xchg
sub
je
sti
fwait
add
or
add
nop
xchg
and
in
cmp
adc
push
xchg
cmp
ret
jo
adc
or
sbb
ret
ret
or
sbb
inc
pusha
mov
pop
pusha
jmp
rorb
rcr
mov
and
sbb
aam
daa
adc
mov
pop
mov
nop
xchg
inc
mov
sub
xchg
push
adc
push
jmp
adc
popl
push
ljmp
cmpsb
sub
xchg
inc
movsl
mov
push
insb
repz
pop
test
hlt
add
data16
stos
cmp
addl
mov
cmp
jnp
fadds
ja
jae
int3
insb
loopne
lock
jp
lods
scas
inc
push
and
push
ret
data16
jae
nop
lret
jg
test
xor
mov
inc
mov
push
push
mov
enter
mov
mov
or
adc
jae
ficoml
pop
xor
jno
jb
jne
cs
jl
mov
xlat
cltd
and
push
xchg
je
push
je
fildl
enter
mov
dec
daa
imul
adc
inc
enter
in
loope
ljmp
add
jnp
repz
mov
xchg
mov
pop
sbb
add
xor
cmc
lds
and
inc
sar
add
fistps
test
aam
jbe
out
mov
sub
std
in
mov
addr16
sub
jnp
mov
lods
and
pop
push
lret
jl
mov
int
outsl
cli
adc
cmc
clc
fisttps
sub
scas
or
je
clc
sub
push
pop
adc
gs
daa
push
iret
or
add
push
adc
jmp
sbb
test
mov
jge
cld
push
xor
pushf
int
shl
fisubrs
cmp
std
fistl
movsb
xchg
or
xchg
popa
sub
rcrl
mov
pop
jp
test
push
pop
das
cmpsl
sub
shlb
adc
sub
stos
jp
outsb
inc
notb
dec
xchg
xor
call
jne
xchg
and
pop
mov
movsb
add
outsb
jb
jns
cmp
inc
xchg
jae
in
rolb
push
jb
add
out
sbb
scas
sbb
push
push
into
movsl
xchg
or
xchg
subb
sub
imul
dec
popf
loope
inc
sub
pop
mov
mov
pop
out
repz
leave
mov
mov
shlb
cmp
lods
push
mov
fbld
sub
addl
repnz
fldcw
mov
push
adc
add
dec
es
xchg
test
pop
test
xorl
dec
int3
push
ss
pop
jle
add
js
in
sub
xlat
and
scas
xlat
pop
push
adc
jno
xor
push
negb
inc
jbe
dec
mov
mov
jns
cli
mov
jae
jb,pt
popf
lods
jmp
jp
pop
mov
mov
out
adc
xchg
idivb
insb
push
enter
out
mov
mov
push
dec
in
pop
inc
push
rcl
clc
stc
mov
or
or
pause
push
jle
xchg
mov
jecxz
sbbl
rcrl
lcall
pop
aaa
jmp
mov
push
pop
insb
lahf
mov
shll
daa
fiadds
fwait
sbb
xlat
call
rol
cmpsb
test
cmp
aas
dec
es
adc
xchg
scas
rcll
leave
or
xor
out
imul
or
frstor
in
or
js
add
inc
stos
inc
scas
pop
lds
xlat
bound
jbe
lods
pusha
xchg
aad
push
jmp
cmc
push
jo
aaa
pop
int
lret
icebp
xor
das
adc
mov
push
push
arpl
out
dec
clc
fsincos
pop
insb
ret
and
repnz
out
inc
repz
scas
sbb
jns
out
jp
jl
aad
imul
in
test
or
int
xor
scas
mov
inc
xor
mov
adc
ljmp
hlt
adc
rcl
cmpsb
xor
jb
insl
out
imul
ficomps
mov
in
in
arpl
mov
pop
std
xchg
jecxz
xor
xchg
outsb
jae
fildll
cli
xor
adc
pop
subl
out
or
jnp
je
and
stos
enter
sub
arpl
mov
push
notl
adc
and
test
les
cmpb
or
cmp
sbb
xor
cld
push
cli
pusha
outsl
ja
cltd
xor
imul
pusha
and
popa
cmp
int3
sub
mov
shrb
call
push
scas
insl
and
in
ljmp
mov
stos
mov
xor
mov
mov
repnz
mov
mov
and
add
outsl
push
sbb
cmpsl
push
add
mov
mov
sahf
mov
pop
xchg
jecxz
push
jle
pop
mov
xchg
pop
js
cwtl
cmp
es
dec
mov
loopne
xchg
mov
sub
and
mov
cmpsb
les
push
ds
cwtl
cmp
lods
lock
push
addb
mov
and
xor
mov
mov
pushf
adc
push
jmp
sbb
push
mov
jl
push
cltd
xchg
xlat
movsl
push
inc
mov
sub
test
mov
mov
aas
cwtl
mov
add
xchg
mov
stos
dec
icebp
xchg
dec
add
cmp
or
idivb
mov
pushl
jb
jecxz
jp
push
icebp
cmp
in
das
outsl
xchg
dec
cmpb
shll
jnp
jp
or
mov
xor
mov
aas
sbb
xchg
mov
mov
xor
xlat
jnp
mov
mov
pop
subb
leave
je
ret
push
inc
fisttps
rorb
popa
inc
repz
jp
sbb
dec
push
mov
or
jmp
ret
jle
add
int3
cmp
or
mov
adc
cmp
out
push
mov
je
inc
adc
push
les
jo
fs
push
ss
add
inc
scas
out
aaa
popf
js
loopne
test
ficomps
fdivrl
test
aam
mov
mov
ds
inc
jl
jbe
loopne
xor
insb
xor
jne
fsubrl
nop
addr16
mulb
jle
sbb
scas
xchg
xchg
mov
lret
gs
xlat
loope
popa
aaa
pop
jb
mov
and
gs
cmp
mov
mov
or
fdivp
sub
pop
sbb
mov
test
cld
sti
push
daa
mov
adc
push
jnp
mov
mov
sarb
sbb
mov
into
repnz
test
pop
fildl
xorl
push
leave
fnstenv
fsubr
fsubl
aad
je
aam
shl
sbb
mov
mov
cli
push
lcall
negb
xchg
mov
mov
dec
push
mov
cmp
loop
push
stc
adc
adc
in
cmp
outsl
mov
push
jno
or
shlb
sub
xchg
and
ret
cmp
cwtl
out
jp
sarl
dec
mov
sbb
pushf
jge
pop
jo
xor
and
cli
cs
mov
cmpsl
pop
sub
sub
ds
mov
pop
mov
nop
idivb
ja
es
mov
into
xchg
stos
pusha
lods
add
addl
mov
aad
les
cltd
dec
inc
mov
aad
pop
adc
insl
jmp
jmp
je
mov
mov
rorb
dec
xor
pop
out
mov
rep
in
xchg
fdivs
hlt
into
in
shrb
test
repz
test
aam
mov
sar
pxor
xchg
jbe
in
mov
push
mov
cmp
insb
movsb
orl
push
jle
xor
hlt
mov
xchg
test
mov
ds
test
sbb
out
jne
mov
inc
lahf
lret
push
xchg
out
in
xchg
sti
cmpsl
xchg
or
je
mov
nop
arpl
sahf
mov
inc
jp
inc
popf
pop
and
or
int3
rorl
lods
xchg
ds
jnp
sti
sidtl
ret
jp
sbb
push
xchg
push
repnz
mov
jnp
cwtl
daa
mov
lods
push
mov
ss
daa
repz
jb
push
cmp
fcompl
pop
lods
imulb
push
mov
mov
enter
mulb
sbb
pop
ja
pop
sbb
inc
push
stos
inc
in
or
lahf
frstor
dec
arpl
ret
or
push
outsl
mov
xor
add
in
lds
push
mov
mov
jl
mov
add
inc
add
in
je
mov
fwait
mov
jo
aam
push
push
lahf
sbb
cmpsl
fnstenv
cmpb
test
ret
lods
or
inc
jmp
in
cmpsl
adc
xchg
sbb
inc
loop
push
das
mov
sbb
mov
mov
or
pop
xor
mov
lods
add
fidivl
xchg
lea
pop
loope
arpl
jecxz
pop
pushf
bnd
or
jmp
add
dec
out
pop
sbb
mov
xchg
inc
rcr
pop
dec
in
pop
mov
xor
pop
mov
in
jecxz
int3
lods
xor
push
pop
add
es
push
jmp
icebp
dec
outsb
add
mov
mov
sub
and
fdivs
inc
xor
inc
clc
testl
pop
mov
push
enter
inc
lods
test
adcl
jmp
in
pop
xor
xor
ret
call
and
insl
push
icebp
pop
js
mov
xchg
lods
fwait
cltd
jne
pop
inc
imul
or
int3
add
mov
or
adc
inc
daa
and
xor
lret
pop
jbe
repz
int
mov
and
cmc
mov
ljmp
adc
sti
xor
mov
rorb
outsl
cmp
icebp
and
pop
rcpps
push
out
mov
jp
push
std
mov
fcomp
je
adc
mov
sbb
inc
mov
xorl
sub
xor
addr16
cmp
mov
push
jne
das
pop
in
dec
mov
xchg
roll
pop
addl
jmp
cmpsb
es
push
push
mov
in
push
push
xor
fs
mov
mov
or
inc
inc
lods
addr16
sbbl
fptan
jae
int3
test
outsl
popf
fisubrs
int3
sbbb
cmp
popa
push
mov
shl
add
add
xchg
xchg
shrb
or
and
add
stc
mov
sbb
mov
dec
and
es
lds
cli
sahf
not
adc
mov
fnstsw
adc
add
lods
lods
les
mov
mov
icebp
jg
movsl
arpl
push
stos
adc
pop
push
gs
sub
pop
dec
mov
cmpb
add
in
or
inc
or
or
inc
clc
xchg
dec
ret
das
xchg
mov
cmpsl
inc
arpl
stos
mov
sub
sti
ss
cmc
jmp
ds
jno
push
es
push
cli
cmp
leave
mov
fwait
jno
shrb
lret
rclb
or
sbb
mov
xchg
sbb
and
xchg
outsl
push
pop
mov
enter
aaa
aas
sar
add
repnz
sub
and
les
test
and
movsl
in
negl
les
sbbl
lret
clc
jge
dec
cmp
sarb
jo
and
addr16
pop
jge
push
lahf
clc
add
scas
pop
adc
or
sub
ffree
jge
movsb
hlt
mov
cmp
cmp
mov
insb
lahf
push
xor
sub
xchg
cmp
cs
xor
sbb
int
jns
push
outsl
je
and
push
and
aas
clc
jp
loop
cmp
xor
adc
enter
push
repnz
loopne
mov
cmp
aas
int
mov
movsb
leave
mov
insb
in
mov
mov
jmp
cmpsl
imul
sbb
fistpl
or
ja
or
push
cs
adc
fwait
mov
movsb
mov
mov
or
cmp
out
add
xor
fnstsw
cs
adc
mov
ds
adc
and
lods
loope
loope
movsb
add
ljmp
clc
cli
add
loop
jmp
sub
mov
pop
adc
loop
faddl
add
lcall
in
pushf
pusha
jl
fadd
pop
int
out
inc
testl
negl
inc
inc
adc
stos
push
xchg
mov
loopne
mov
lcall
fisubrl
push
repz
fidivrl
dec
cmp
inc
repnz
add
xchg
push
push
test
mov
inc
jge
xor
cmp
mov
sub
scas
popf
cmc
jle
insb
cli
aaa
hlt
push
pop
pop
sbb
dec
call
ss
xor
adc
int3
fisubs
xchg
adc
repz
adc
xor
gs
call
pushf
pop
inc
pop
pop
imul
cmpsl
lds
cltd
mov
ret
push
js
fsubr
scas
and
pop
sbb
xor
je
add
or
mov
sti
jbe
std
enter
ss
pop
mov
movsb
or
add
lods
push
sbb
jne
jge
jmp
sbb
push
inc
inc
dec
pop
in
in
add
push
jo
push
mov
rorl
and
shlb
or
ss
pushf
int3
add
push
lock
inc
or
add
shrb
lods
cmp
dec
and
dec
dec
mov
xor
inc
adc
cltd
jbe
daa
jle
mov
inc
inc
push
jb
aaa
jo
adc
sbb
notl
addb
call
pop
jle
adc
mov
loopne
jae
pop
adcl
in
leave
loope
cmp
idiv
adc
adc
mov
fisubs
sub
and
cmp
shll
mov
and
adc
pop
mov
sbb
and
mov
xchg
or
jge
into
loop
ret
cmp
xchg
cmp
lds
mov
into
sub
jp
leave
and
lret
dec
jecxz
adc
jb
mov
push
das
cmpsl
repz
sub
popf
ret
insb
or
push
pop
jns
jp
subb
or
leave
out
cltd
outsb
lds
sbb
xor
or
cmp
dec
pop
xor
push
lea
mov
or
cmp
cmpsb
and
cli
cmp
cmp
xchg
inc
mov
call
es
and
pop
push
add
out
xchg
in
cvttps2pi
sub
mov
fldcw
rorb
xchg
mov
xchg
xor
or
inc
test
pusha
cmpl
pop
lods
repz
pop
mov
data16
call
repz
movsb
ret
sbb
add
mov
lcall
cld
cli
push
adc
and
cmp
imul
push
xchg
xchg
popf
in
mov
aaa
jl
out
fildll
notb
addr16
dec
test
cld
adc
jge
pop
lea
test
mov
dec
repz
imul
icebp
cltd
sbb
sar
add
imul
shlb
and
xor
lods
push
shrb
inc
add
push
push
ret
jbe
add
ret
or
cmp
jg
cmp
sar
push
xchg
xor
push
out
imul
sahf
push
insb
or
cld
sti
pop
ljmp
inc
pop
dec
inc
dec
aaa
mov
out
lds
je
and
mov
lds
in
push
lret
ds
sysret
ja
leave
cwtl
rorl
dec
inc
es
push
test
push
fs
xchg
shl
js
mov
push
js
ret
sahf
out
inc
fisttpl
xlat
cld
testb
sbb
lock
imul
pop
insb
data16
mov
xchg
cwtl
inc
dec
sbb
inc
add
rorl
cwtl
push
test
test
loopne
pop
jb
fmull
xchg
inc
bound
sub
not
lds
xor
fldenv
adc
dec
adc
mov
inc
push
and
outsb
data16
xor
aad
dec
les
stos
xor
and
cmp
add
jle
sbb
inc
rorb
imul
dec
gs
call
cmpsl
xchg
or
hlt
aam
in
push
popf
mov
sub
in
push
je
sbbb
test
add
mov
movsl
push
icebp
out
shl
sbb
ljmp
xchg
push
lds
repz
outsl
mov
xchg
xchg
dec
shrb
inc
jecxz,pt
inc
mov
mov
push
fldz
xor
mov
jne
mov
sub
xchg
dec
outsl
pop
sbb
addr16
mov
sub
mov
and
push
jecxz
mov
lds
rcrb
inc
out
jmp
aas
aas
push
and
int
insb
pop
adc
shlb
cli
shlb
es
adc
xor
sub
dec
inc
stc
mov
mov
xor
rorl
and
cmp
fisubs
ret
cld
flds
adc
sbb
cmp
xorl
rolb
mov
jnp
loopne
dec
aaa
mov
sub
mov
push
jne
in
movsl
fsubrl
sbbb
mov
dec
test
add
bnd
sbb
std
jmp
sbb
sub
adc
and
inc
mov
mov
lcall
pop
mov
mov
xchg
jno
ret
das
data16
dec
or
pop
ret
fmulp
mov
lcall
repz
dec
add
adc
stc
jnp
int
jecxz
xchg
cld
repz
lahf
sub
repz
mov
cmp
pop
pop
dec
out
xchg
js
pop
pop
jl
dec
sub
outsl
cmpsl
shll
aas
xor
lods
movsl
add
pop
cmp
outsl
sbb
push
sahf
je
pop
push
in
inc
pop
mov
inc
fsub
insb
ja
add
call
jbe
sub
sti
clc
dec
mov
and
add
inc
pop
loop
icebp
bound
xlat
into
jp
out
push
cld
add
jmp
push
std
mov
lcall
pop
mov
inc
pop
cmp
adc
cmp
pushf
in
fimuls
ror
mov
add
and
xorb
test
icebp
sub
push
xor
inc
out
mov
dec
push
bound
stc
out
mov
dec
aaa
push
out
mov
cltd
jecxz
loope
jg
roll
cmpsl
adc
std
dec
in
sub
mov
mov
je
lcall
add
in
js
mov
push
and
call
mov
adc
call
jl
dec
mov
fs
iret
push
cs
cli
sub
push
fldcw
xor
mov
movsb
or
das
inc
ret
mov
sub
or
or
jo
push
fsubrs
in
lods
ffree
add
and
scas
clc
leave
pop
pop
das
sbb
gs
ficompl
iret
sbb
push
sub
jl
gs
mov
jbe
add
aaa
jl
dec
xor
dec
out
imul
sti
jne
ret
insl
pop
pop
lcall
or
lds
push
mov
lea
lods
sub
xchg
cs
ficomps
pop
inc
pop
mov
addr16
mov
rep
xor
sub
imul
push
pop
lods
pop
imul
mov
imul
gs
fwait
mov
jns
and
push
int3
cltd
jg
adc
stos
jbe
pop
cmc
pop
scas
jmp
mov
push
xor
arpl
xchg
lods
shrl
movsb
cmp
push
scas
push
and
mov
xor
cmp
dec
xchg
scas
mov
xchg
scas
das
repz
push
nop
or
sub
insl
or
mov
sar
fimull
movsl
fistl
sub
int
sbb
lea
adc
hlt
add
sbb
test
pop
negl
rclb
cli
mov
scas
and
test
dec
test
loopne
incb
ljmp
add
push
pop
pop
lcall
xlat
mov
cmpsl
adcb
out
jns
fcom
ja
inc
ror
pop
popa
stos
test
addr16
push
lret
aad
or
notb
mov
push
xchg
mov
popf
loope
mov
lds
insb
aaa
das
test
cvtpi2ps
arpl
sbbl
lret
mov
pushf
or
jmp
push
push
test
test
jne
add
lds
inc
ficomps
popf
and
push
pop
daa
lock
int
sub
or
incb
movsb
shll
push
cmp
incb
dec
icebp
push
aas
cwtl
xor
xor
in
movsl
repnz
pop
test
jne
mov
test
xchg
ljmp
cmpl
dec
sti
movsl
test
jmp
shr
jae
aam
lock
pop
push
es
ds
xor
xchg
adc
push
inc
out
and
mov
sarl
adcl
es
push
mov
cltd
cmp
xchg
xor
and
or
pop
int3
mov
mov
jae
arpl
aam
mov
inc
cs
adc
out
or
repnz
mov
push
lds
movsb
arpl
cli
xchg
loop
popa
mov
xor
aam
cmpsb
out
out
sarb
loop
das
inc
and
bound
cmp
cld
movsb
repnz
mov
mov
push
test
in
lods
jbe
aaa
gs
mov
testb
and
mov
pop
ljmp
mov
push
lret
movsl
inc
jg
lahf
sbb
imul
fnsave
dec
push
fwait
into
jl
dec
xchg
and
repz
mov
push
sbb
fisttpl
mov
sbb
sub
add
stc
lea
das
or
in
mov
push
iret
sbb
inc
test
arpl
sbb
aas
movsb
aas
test
jl
lods
jl
arpl
dec
ja
ja
aad
mov
jno
add
pop
pop
mov
pop
movsl
call
test
push
jl
jge
mov
repnz
mov
daa
imul
out
popf
clc
jns,pt
jb
jge
popa
cmpsb
leave
ds
mov
test
aam
insb
in
xchg
cli
mov
inc
pop
jne
leave
add
dec
lds
inc
adc
xor
add
inc
dec
das
jns
hlt
cmpsb
lret
push
mov
arpl
rcll
insl
loopne
ds
and
repnz
test
pop
jl
mov
cmpsl
mov
loop
push
gs
dec
aad
pop
das
adc
xor
gs
xchg
cmp
pop
xor
sbb
outsl
cmp
out
mov
mov
lods
cmp
mov
adc
test
jl
push
adc
push
scas
jge
jne
jbe
or
push
push
scas
fs
xchg
and
fmulp
sarb
mov
loope
loop
fdivl
pop
xchg
mov
cld
clc
jo
and
test
movl
push
pop
xchg
adc
ja
loope
mov
inc
ret
in
add
push
xor
decb
fcmovnbe
push
adc
jge
fcomps
adc
jnp
dec
in
sbb
lret
and
lea
mov
adc
mov
sbb
mov
sub
pop
sbb
xchg
ret
and
jno
filds
inc
gs
mov
xor
jmp
hlt
sahf
mov
mov
call
inc
cltd
jge
jo
mov
ljmp
fsubrs
mull
cmpsb
dec
in
sarb
cli
aad
add
stos
in
jle
daa
jns
popf
daa
xorb
mov
mov
sbb
mov
mov
stos
xor
xchg
test
adc
cmpsb
sub
push
out
jg
and
add
jns
int3
gs
dec
add
mov
adc
dec
or
mov
inc
pop
cmpsb
push
mov
or
stc
xor
or
jp
hlt
pop
inc
das
mov
mov
bound
test
mov
das
jno
add
test
test
add
adc
das
pop
push
lods
jne
int
jmp
xlat
lods
stos
pop
and
or
add
pop
jge,pt
xchg
push
jns
movsl
xor
pop
xor
mov
sub
lahf
sbb
and
int3
loopne
mov
pop
xchg
fstps
test
fs
into
mov
cld
iret
dec
dec
scas
scas
and
pop
imul
test
xchg
add
adc
in
popf
dec
xlat
dec
sbb
js
adc
scas
and
or
enter
cwtl
call
add
daa
jge
jbe
pop
in
fadds
rclb
push
call
lods
call
out
iret
out
push
xchg
add
and
decb
mov
inc
push
pop
sub
mov
out
bound
pop
inc
add
daa
mov
lods
aas
mov
insb
out
lahf
js
mov
cmp
push
jge
mov
push
push
test
dec
pmaddwd
jmp
js
stc
cmpsl
pushf
ss
push
movsl
imul
out
mov
add
pop
mov
push
cli
inc
popf
cmc
jo
mov
neg
sbb
add
sahf
pop
mov
adc
arpl
mov
aad
lret
cmp
jg
std
fldenv
stos
xor
nop
test
push
test
lret
add
mov
cmp
or
shrb
jp
and
int
imul
int3
cmpsl
call
inc
cmc
xor
scas
ljmp
subl
in
dec
das
pop
and
sbb
and
jle
jecxz
pushf
pause
push
fidivrl
sub
outsb
arpl
jp
add
sub
shrl
or
or
aad
adc
sbb
inc
jnp
fisubs
insl
jae
inc
rorb
mov
inc
push
or
scas
shll
sub
daa
add
inc
dec
insb
loop
dec
pop
mov
pop
cmp
pop
mov
bound
mov
sbb
cmc
jge
xor
jmp
stos
push
fmul
les
pop
lret
or
push
mov
enter
sub
jp
lret
mov
cmp
xor
popf
or
mov
mov
gs
cmp
jne
mov
jo
dec
push
std
inc
push
mov
cmpsb
push
xchg
xor
icebp
dec
push
add
sub
xchg
rorl
pop
dec
jmp
inc
sub
jnp
fidivl
add
and
jae
dec
js
sar
call
cs
xchg
std
push
sbb
pop
xor
insl
add
sub
ret
inc
in
add
pop
stos
xchg
jmp
xor
dec
fnstcw
not
jae
repz
stos
jbe
int3
adc
aaa
pop
or
mov
mov
xchg
std
cltd
sub
les
out
dec
xor
das
xor
test
out
sbb
lods
dec
mov
repnz
mov
jge
nop
fisubrl
aaa
pop
mov
inc
jmp
dec
sahf
adc
inc
sub
jg
or
mov
xchg
in
scas
loopne
sti
scas
rol
out
jmp
sbb
movsb
xchg
int3
sub
imul
pop
aam
out
insl
mov
sahf
daa
lret
call
sub
adc
xlat
das
pushf
mov
xor
shll
dec
xchg
in
jns
inc
add
jge
push
add
nop
jb
push
dec
clc
imul
dec
jno
xchg
ret
test
jle
xor
push
lock
jnp
mov
jp
add
sahf
sbb
ljmp
divb
xor
xchg
mov
sub
popa
dec
xor
push
pop
mov
mov
adc
sub
xchg
imul
leave
popf
dec
test
sbb
lea
mov
into
xor
movsb
pop
xchg
in
adc
rcll
or
xchg
imul
test
add
and
out
mov
mov
fsubs
pop
outsb
push
test
leave
sbb
fldl
xchg
js
push
pop
out
adc
sbb
mov
inc
daa
in
je
add
aas
jb
push
add
out
stc
fsubp
lods
cmp
xchg
imul
les
in
add
xchg
in
sub
jmp
cmp
ljmp
dec
jg
and
aad
dec
push
repnz
add
sub
mov
cmp
push
addr16
test
mov
xchg
stos
jb
cmp
repnz
jbe
adc
lret
jle
test
jne
nop
or
pop
fisttps
mov
data16
lahf
fdivp
jge
xlat
rolb
cmc
test
scas
sbb
dec
mov
jmp
and
roll
aam
sub
push
aad
hlt
js
fdivrs
mov
jecxz
cmp
inc
aaa
out
add
js
dec
daa
mov
jns
sbb
pop
mov
xlat
sbb
insb
push
pop
test
cmc
les
pushf
loop
or
rorb
dec
ds
sub
data16
cmp
cmp
movsl
jbe
lret
dec
dec
mov
inc
inc
sbb
idivl
popf
sub
cltd
fstl
pop
test
aad
jmp
cmp
and
cltd
test
cmpsl
sub
and
int
repz
xor
test
mov
loop
cld
mov
leave
add
or
inc
insb
jbe
pop
xchg
dec
cwtl
dec
loope
arpl
out
insb
push
add
pop
cld
dec
or
cli
in
ret
aaa
jge
jp
push
test
ss
jb
mov
notl
cmp
outsb
int
mov
pop
pop
mov
ds
lret
and
or
lcall
xor
test
ss
mov
iret
movsl
arpl
ds
insb
jecxz
cwtl
add
adc
dec
inc
sub
out
test
lods
push
and
jmp
push
sahf
fistpl
push
cmp
mov
sbb
mov
and
addr16
mov
push
mov
fcomps
push
xchg
cli
pop
loope
loopne
xor
les
pop
fldcw
sbb
sbb
push
push
cmp
rcrb
sbb
jns
push
test
xorl
shlb
lea
and
pop
mov
add
nop
pushf
and
nop
iret
jg
int
popl
pop
jl
inc
or
loope
js
in
xchg
scas
into
xchg
mov
mov
dec
xor
ljmp
cmp
jb
arpl
adc
xor
arpl
loop
shl
fsubr
adc
shll
int
pop
xchg
aam
in
cmc
lock
test
jbe
mov
mov
inc
enter
call
leave
clc
inc
jo
and
sbb
fs
repnz
xor
cli
dec
and
push
jnp
clc
or
lcall
shl
add
jo
mov
stc
vmovq
adc
xchg
push
movsb
pop
mov
cmpsb
fstl
mov
test
ds
fidivrl
insl
adc
lret
pop
daa
and
xor
xchg
dec
fs
mov
in
cmp
inc
cld
ss
jb
addl
mov
lcall
je
jno
cmp
lods
xchg
cmp
idivb
aad
xor
add
lods
mov
stos
cmp
or
insb
jbe
sahf
cmpsb
rcr
push
leave
mov
out
out
shrl
fwait
aaa
inc
add
sti
test
cltd
inc
mov
in
push
aad
imul
pop
cli
sub
and
nop
addb
mov
mulb
outsl
out
icebp
mov
hlt
dec
cwtl
into
inc
inc
fistpll
push
xchg
daa
ss
jae
sub
mov
arpl
xchg
lret
jmp
or
inc
and
hlt
aas
outsb
add
cmpsb
mov
out
jg
xor
jnp
jl
ljmp
ja
pop
inc
lds
scas
push
call
sub
jo
pop
jb
mov
pop
ret
sub
divb
mov
jbe
dec
les
shr
fidivs
adc
sub
xchg
leave
enter
adcb
xor
out
xor
sarb
sbb
cmp
adc
mov
and
ret
imul
int
mov
and
in
enter
repnz
testl
popa
fdivrp
mov
xlat
xchg
ds
test
xor
leave
ds
adc
adc
int
imul
in
sbb
int3
jns
inc
sub
lock
stos
stos
dec
pop
jbe
sbb
pop
xchg
push
icebp
inc
add
dec
add
imull
sub
lds
int3
sbb
xchg
and
pop
xor
test
cmpsb
call
cltd
or
pushf
or
push
jge
sub
repnz
test
out
lea
pop
stc
mov
fcoms
cltd
outsb
push
mov
jno
cs
inc
movl
stc
jecxz
inc
mov
xor
shl
sbb
jnp
xor
mov
jnp
sub
movsb
arpl
xchg
jle
cmp
pop
dec
xchg
xchg
clc
push
insl
sub
movsl
inc
or
aas
xchg
inc
cmp
lock
xor
icebp
push
xor
and
lock
pop
test
fdivrl
lahf
push
jne
in
arpl
add
nop
stos
mov
imulb
xlat
sti
mov
repz
cmc
xor
icebp
insl
fwait
int3
cmp
jp
add
push
jg
ja
pusha
ret
sarl
jb
addr16
xchg
sbb
fcomi
into
fmull
adc
rcrl
jge
mov
aam
pop
scas
mov
mov
mov
xor
test
or
icebp
pushf
ret
mov
lock
jnp
imul
aaa
mov
add
push
sub
inc
dec
ljmp
test
dec
cmpl
pop
fildl
es
xor
lahf
xchg
cmp
aaa
outsl
decb
pop
cmp
jbe
jge
cmp
push
mov
xor
push
das
sub
loopne
adc
mov
popf
test
push
fstl
mov
lock
pop
and
cmp
fcom
cmp
hlt
out
push
cmp
push
inc
aam
cmp
faddl
cmp
clc
repz
pop
cs
fldl
lcall
repz
jmp
pop
mov
dec
xchg
flds
loopne
stc
mov
lret
mov
rclb
movsb
shlb
xlat
pop
push
and
sbb
inc
mov
cmp
ficomps
in
pushf
pop
lahf
mov
sbb
inc
fidivrs
scas
or
xchg
loope
jbe
scas
stc
jno
inc
push
movsl
lret
les
inc
push
mov
or
stos
xchg
mov
inc
dec
sbb
stos
scas
cltd
add
xchg
xchg
mov
hlt
add
pop
adc
repz
mov
inc
mov
shr
and
mov
pop
lock
push
ret
mov
mov
mov
xor
scas
pop
popa
sub
scas
xchg
lods
jecxz
fwait
shrl
push
xchg
lret
jne
mov
xchg
mov
lock
adc
mov
adc
enter
daa
and
or
xor
lcall
out
rolb
push
sub
pop
jbe
or
je
xor
dec
ret
or
dec
decb
mov
adc
and
ret
enter
mov
out
jmp
mov
push
subb
dec
inc
adc
sub
xor
push
lcall
enter
sahf
subb
mov
hlt
and
notl
in
lcall
inc
add
cmp
shrb
popa
lock
mov
xchg
fnstcw
jns
mov
mov
dec
xor
push
fdivrs
movsl
sub
add
sti
mov
xchg
repz
mov
pop
in
aaa
add
jb
dec
fld
arpl
inc
mov
jns
jno
sbb
ds
dec
mov
push
inc
cmc
repz
mov
imul
xchg
arpl
inc
stos
aam
js
aas
js
scas
icebp
jb
mov
insl
popa
inc
call
inc
cmp
push
incl
popf
and
std
ret
pop
pushf
out
stos
xor
sbb
repnz
dec
xor
or
mov
test
mov
mov
push
mov
push
ret
and
pushf
xlat
adc
cmpsl
mov
aam
mulb
pop
mov
jns
adc
pop
pop
ds
dec
clc
rol
aad
dec
fiadds
hlt
pop
cmpl
xchg
in
jb
add
dec
cmp
rol
dec
or
inc
lock
push
cltd
loope
xor
cwtl
movups
imul
cld
data16
nop
push
mov
pop
idivl
xchg
sbb
pusha
jnp
push
push
test
scas
inc
and
jo
ss
xor
sarl
fdivrs
jne
rcl
aaa
lcall
push
pop
lcall
sti
xchg
mov
and
push
ret
and
mov
pop
add
iret
lea
fsubrs
bound
ror
inc
or
add
pop
es
rcrl
cmp
js
adc
push
jb
scas
in
ja
jne
pop
or
cld
mov
lods
fnstcw
lahf
xchg
adc
dec
ret
jg
jne
jmp
pop
sub
cmp
jg
and
sbbb
or
jb
ret
andb
jns
jmp
sbb
iret
int
inc
cmp
out
sbb
fimull
sar
nop
xor
or
xor
insl
enter
pop
mov
daa
push
gs
jnp
fsubrl
lods
mov
sub
xchg
fcmove
mov
std
lret
and
adc
and
std
fxch
scas
stos
fists
pop
rcrb
push
cmp
adc
jb
mov
xchg
rorl
sar
dec
clc
add
es
rcll
bound
cmp
mov
out
mov
stos
or
pusha
stos
icebp
test
mov
out
sub
inc
dec
xor
arpl
jl
adc
jl
xchg
test
xchg
into
mov
dec
andl
jl
jge
jmp
mov
mov
push
fldcw
push
fldt
ret
shlb
add
xchg
ret
ds
out
cmc
and
mov
lret
xor
ja
dec
outsl
out
cs
test
ret
cld
or
adc
cmp
sbb
adc
cmove
mov
in
mov
gs
push
popa
sbb
cmp
sub
sbb
cmp
in
gs
popf
and
ficoms
add
xchg
lock
add
mov
jmp
movsb
mov
dec
out
xor
jge
sbb
lea
cmp
test
ss
push
xchg
lret
adc
adc
or
xor
or
push
mov
fnsave
jo
push
insb
xlat
inc
lock
mov
mov
jno
jle
mov
jae
mov
push
pop
or
fcoml
mov
mov
pop
mov
cmpsl
xchg
into
popa
fcompl
out
dec
out
cmp
cmp
push
fcoml
lock
ds
insb
shll
fistpl
sub
aas
adc
test
popa
jno
jno
push
cmp
in
mov
jns
jne
out
in
mov
orl
pop
jb
movsl
adc
xlat
fwait
nop
arpl
sahf
sub
out
jecxz
scas
jp
cli
ret
iret
mov
lret
subl
mov
inc
jl
sbb
pop
jnp
loop
daa
ret
xlat
pop
pop
scas
mov
mov
sbb
pusha
loope
mov
clc
loopne
xchg
inc
cmp
scas
jmp
inc
sbb
mov
inc
iret
repz
in
and
mov
adc
mov
test
lret
xchg
jmp
js
sbb
mov
add
and
mov
imul
dec
jb
inc
in
andl
rolb
insl
mov
xlat
hlt
and
popa
in
dec
and
dec
mov
mov
jl
in
std
inc
adc
je
int
push
fs
pop
ljmp
xchg
mov
insb
shl
adc
negl
pop
je
fs
arpl
and
js
sbb
pop
adc
out
pop
dec
xorb
aas
sbb
push
scas
xor
sub
cmp
pop
push
in
pop
inc
xchg
outsl
loopne
xchg
push
dec
sarl
or
push
mov
cmpsl
addr16
and
and
lds
shlb
imul
add
imul
nop
lahf
cwtl
test
jno
push
mov
pop
pop
and
ljmp
out
adc
mov
mov
test
lahf
es
cli
int3
nop
dec
lret
lret
push
js
imul
xchg
sbb
je
out
dec
xor
cmpsb
sub
nop
pushw
jbe
xchg
mov
aaa
pop
adc
lcall
sub
jmp
test
fincstp
sub
jnp
push
push
rclb
pop
mov
push
sub
sbb
inc
test
repnz
test
xchg
pop
sbb
nop
mov
inc
mov
icebp
mov
pop
xchg
and
sbb
inc
xchg
cli
leave
outsl
shl
cld
into
add
inc
cmc
js
cli
lret
stos
add
imul
sub
dec
shl
dec
adc
push
jecxz
lea
cli
out
pop
cmc
mov
in
adc
sahf
inc
jmp
nop
repz
pop
lds
sbb
pop
ja
adc
mov
aam
jmp
mov
mov
add
hlt
dec
and
lods
mov
popa
lock
cmpb
inc
jmp
popw
andl
loop
cs
addl
cmp
adc
jns
popa
in
sub
aaa
add
xchg
jl
cmp
mov
push
lea
mov
add
les
movq
adc
sub
aad
mov
out
and
and
je
stos
push
shll
icebp
mov
sbb
dec
int3
loop
add
push
or
ss
pusha
aam
sahf
ljmp
sub
mov
mov
mov
add
jp
xor
sub
jne
mov
subb
stc
and
shrb
push
xor
jmp
dec
mov
mov
fdivrl
lret
fadds
shlb
xchg
pusha
cli
pop
shrb
ret
iret
imul
out
lea
mov
popa
das
movb
fcmovnu
scas
mov
test
jl
repnz
icebp
mov
adc
rclb
jno
sahf
adc
test
fstps
shll
push
add
pop
jecxz,pn
or
aad
push
pop
and
das
dec
lods
rcll
mov
mov
ret
pusha
mov
sti
loope
push
inc
xchg
leave
sbbb
in
leave
pop
sub
xlat
mov
mov
fsub
out
cltd
push
cmc
mov
cmpsb
mov
arpl
stos
movswl
shlb
adcb
pop
and
les
sbb
sub
scas
jb
mov
mov
lods
push
jae
xor
lcall
sahf
add
push
xchg
adc
stos
and
xchg
clc
out
pushf
sbb
add
mov
retw
pop
arpl
mov
push
adc
cmp
mov
inc
push
imul
sub
rcl
aam
inc
in
test
out
or
enter
dec
and
xchg
loope
inc
icebp
jp
add
outsl
jbe
enter
fdiv
add
ja
or
fdivl
xchg
faddl
shll
sbb
cmp
fwait
cmp
mov
imul
dec
jnp
mov
daa
mov
iret
pop
ds
jge
out
jne
clc
mov
in
jns
adc
ret
in
mov
repnz
or
call
xor
lea
cld
jne
cmpsb
insb
push
daa
shlb
xor
out
xor
or
add
dec
jbe
std
pop
in
or
and
pop
lret
test
mov
lret
repz
cmp
add
mov
dec
stc
enter
xor
sbb
dec
inc
pop
xchg
imul
rorl
adc
fwait
test
gs
dec
ja
dec
fldl2t
cltd
data16
or
mov
jbe
dec
fsub
fiaddl
pop
sub
andl
adc
add
cld
daa
xor
push
inc
mov
cmp
cmp
cmc
rorl
jecxz
cmp
xchg
xor
dec
loopne
jmp
dec
push
sub
lcall
lahf
dec
arpl
int
pushf
stos
add
and
out
icebp
or
pop
sarl
pushf
mov
call
xchg
aaa
ret
push
lea
push
ja
imul
mov
dec
pop
out
and
in
test
movsl
push
or
loope
dec
aad
out
sbb
xchg
or
sbb
mov
outsb
mov
shl
pusha
ljmp
notb
push
iret
in
jae
cli
pop
popa
lea
mov
or
xor
mov
jle
and
inc
cmp
or
xchg
ds
push
and
add
or
addb
cmp
xchg
icebp
jo
xor
mov
and
cmp
and
pusha
push
ss
pop
cli
pop
mov
gs
sahf
xorl
cmp
mov
sbb
mov
sub
push
shl
fs
lahf
jecxz
mov
push
sub
inc
fildll
mov
stos
sub
rclb
mov
sbb
sahf
cmp
scas
mov
ss
jle
xorl
lock
sub
push
es
mov
imul
scas
iret
stos
pop
shlb
mov
insl
outsl
and
push
xor
xchg
sbb
mov
mov
pop
add
mov
fs
orb
arpl
imul
outsl
push
icebp
xchg
pop
push
leave
enter
clc
arpl
sbb
inc
mov
push
mov
out
lods
ret
jbe
arpl
mov
pop
xor
pop
xchg
push
xlat
fdivl
cmp
mov
pop
jno
and
rcrl
cld
jg
mov
mov
popf
cmp
push
sub
test
movq
mov
in
repnz
jne
jo
addl
push
ljmp
mov
sub
lock
stc
jg
xorb
out
imul
pop
sub
xor
clc
scas
push
mov
fisubrs
cmp
ja
add
pop
sbb
mov
cmpb
and
mov
insb
pop
in
clc
pusha
js
cmpsb
mov
repz
mov
aad
orl
sbb
sbb
mov
add
mov
out
push
pop
jnp
jno
mov
jo
cld
rcrl
hlt
js
popa
mov
shlb
add
mov
lcall
cmp
test
mov
bound
fsubrl
cmc
dec
daa
in
popa
push
cmp
push
add
data16
cmp
test
pop
test
inc
jecxz
std
xchg
pop
enter
rorb
movswl
push
sbb
testl
adc
jns
push
dec
mov
cmp
inc
adc
stos
add
jno
and
sub
push
insb
imul
je
jbe
data16
daa
jp
pop
push
xor
pop
mov
lret
outsb
insl
push
lahf
shrl
dec
js
pop
dec
sub
push
push
leave
push
imul
aaa
pmaxub
mov
popf
xchg
movsl
xor
es
sti
xor
adc
xchg
in
aam
mov
mov
daa
addr16
test
out
push
jns
cmp
fstps
mov
sbb
mov
jne
iret
imul
cmpsb
cmp
and
cld
pop
sub
fadd
xchg
ret
sbb
and
lock
fdivl
call
fisttpl
out
dec
mov
cmpl
inc
jae
xchg
xlat
out
pop
jo
aad
popl
inc
jg
xchg
cmc
ss
test
dec
fnsave
arpl
and
push
es
xchg
jl
fcoml
xor
xchg
pop
cwtl
mov
sahf
imul
js
push
add
sti
pop
subl
rcrl
jge
and
je
mov
mov
fldl
jl
cmp
pop
push
add
in
or
cltd
mov
fcoml
out
stc
hlt
loope
loope
int
fldl
ds
sbb
push
outsl
push
jnp
mov
sbb
mov
iret
jge
jmp
je
mov
push
or
cmpsb
pop
mov
pop
les
in
sub
rorb
push
push
mov
test
sub
sti
ljmp
test
or
out
xchg
dec
sahf
cmpsl
out
jmp
jecxz
mov
jmp
push
lds
pusha
lea
lods
inc
pop
cltd
mov
jge
push
xchg
loop
jae
sbb
adc
jne
int
mov
mov
jge
sub
aad
aam
cld
add
addr16
jmp
out
pop
sbb
out
int3
in
rorl
leave
dec
push
loope
jecxz
imul
add
out
jl
adcl
loopne
dec
into
mov
jbe
xlat
sub
push
lret
mov
mov
gs
fnstenv
orl
cmc
test
lret
scas
xor
lods
jmp
sbb
pop
lea
lret
pop
mov
inc
dec
hlt
ret
cmp
jecxz
cmp
mov
jmp
sbb
xchg
fwait
pushl
addr16
movsl
add
divb
bound
mov
jb
rdmsr
clc
pop
lahf
xor
add
push
ljmp
mov
into
fwait
call
scas
push
mov
pop
inc
sub
rcl
pop
ja
in
int3
fildll
ret
mov
nop
mov
jl
hlt
mov
incb
fistpll
mov
popa
mov
orl
push
in
mov
mov
pop
shrl
cmpb
sbb
add
loop
or
ja
out
loop
mov
sbb
int
xchg
xor
cli
xchg
sub
push
je
lods
int
lea
dec
mov
and
cmp
push
loop
xor
lcall
call
scas
mov
cmc
cmp
movsl
cmp
scas
sahf
das
sti
inc
xor
subb
mov
pop
out
and
mov
pop
sbb
add
das
rolb
cs
scas
imul
push
fists
jno
lcall
mov
jno
mov
xor
mov
add
push
and
out
pushf
xor
or
cmpsb
mov
mov
je
in
mov
ret
or
ret
rorb
es
adc
mov
add
rorb
sbb
mov
pop
mov
aam
mov
int
pop
push
push
ret
cli
push
arpl
lret
sub
xchg
jge
inc
ror
lds
divb
popf
repz
roll
or
jbe
lods
pushf
push
mov
fldcw
imul
push
ffree
lahf
xor
out
icebp
call
aas
jns
xchg
scas
lret
dec
sub
xchg
sbb
in
jle
jb
and
adc
dec
pop
iret
mov
adc
outsl
popf
call
xchg
or
push
sar
aas
shlb
in
jmp
aaa
pop
movsb
cli
int
mov
xor
and
sbb
xor
add
sub
mov
in
jge
inc
add
inc
jecxz
jne
mov
xor
add
mov
das
fsubrs
dec
repz
les
gs
nop
aam
mov
jns
xor
push
out
insl
mov
or
in
lret
mov
mov
movsb
aad
insb
jo
jl
sti
mov
shlb
push
cmp
mov
push
add
in
dec
sub
movsb
mov
push
sub
enter
mov
mov
mov
or
subb
fdivrl
rcrl
ds
sbb
inc
pusha
push
outsl
mov
les
out
sub
jne
sub
loope
cmp
popf
mov
mov
push
aas
imul
mov
out
gs
mov
or
lock
orl
sbb
frstor
mov
xor
lock
cmc
sub
shlb
enter
xor
enter
jl
push
add
jg
stc
xchg
push
mov
dec
pop
shll
adc
int3
jnp
aam
adc
mov
pop
inc
sbb
andl
cmp
pop
xor
or
jno
shr
xor
mov
cmpsb
dec
pop
jne
test
rcl
cmp
pop
pusha
je
cmpsl
inc
pusha
sub
sti
cmc
test
lock
mov
xchg
ret
adc
fcomps
lods
shr
mov
iret
or
sbb
das
sub
mov
int3
adc
pop
es
stc
push
adc
jge
mov
lcall
jnp
cli
mov
xchg
pushf
fdivrs
push
and
call
adc
in
sub
jae
xor
mov
ret
fs
pop
xchg
cmp
insb
jnp
jo
cld
jb
and
xor
push
push
addr16
outsb
cli
add
sbb
mov
scas
mov
mov
jmp
out
stc
inc
pop
movsb
mov
ss
push
jns
mov
and
popa
xchg
pop
xor
popa
push
sbb
bound
hlt
mov
fbld
pop
ja
loopnew
and
sub
cwtl
pop
in
fcmovb
jb
mov
mov
mov
cld
mov
inc
jl
add
or
outsb
pop
adcl
jns
jg
out
and
leave
sub
iret
in
xchg
cmp
mov
popa
nop
lods
xchg
pop
pop
icebp
rol
sbb
test
sub
mov
pop
or
leave
mov
push
jnp
rcrl
jo
or
mov
fst
or
fidivrs
shrl
pop
or
rol
data16
je
dec
push
xor
dec
mov
dec
clc
out
adc
jnp
xchg
cmpsl
push
test
xorl
movsl
shlb
or
sbb
mov
icebp
fnstenv
push
imul
nop
lret
nop
xor
ss
mov
test
mov
jno
je
add
loope
and
test
jnp
xor
push
sub
sub
sbb
and
mov
js
xor
rcrb
popf
adc
out
je
cmp
lock
sbb
xchg
ror
xchg
jp
test
rcrl
jecxz
ret
dec
test
cmp
test
jmp
ret
xorl
jle
and
cmp
push
sbb
aam
and
dec
std
cmpsb
movsb
out
shr
inc
scas
or
xchg
loope
and
mov
dec
mov
add
add
insb
movsl
or
sbb
push
fdivl
or
cmp
mov
adc
lret
int
fildl
lret
test
rcrb
jo
jnp
inc
adc
sub
jae
stos
mov
and
pusha
ljmp
xchg
loopne
scas
imul
mov
jg
sub
add
add
lods
cld
test
inc
or
std
enter
ljmp
dec
jp,pn
insl
fucomi
inc
push
push
lea
mov
cmp
xchg
inc
loopne
cld
fnstcw
cmpsl
xor
out
insl
outsl
ljmp
lahf
repnz
adc
lods
scas
in
in
dec
shrl
aaa
sbbb
fwait
mov
push
lods
jb
sarl
push
sbb
cmp
xchg
cmpsb
or
gs
sbb
fistpl
inc
fbstp
xchg
xchg
or
dec
push
jge
fnsave
mov
sbb
and
nop
inc
adcb
repz
inc
pushf
push
pusha
cmpb
inc
aad
lret
push
mov
jge
fdivl
dec
or
xchg
subb
xchg
incl
inc
jmp
or
jno
inc
xchg
mov
bnd
xor
cli
sub
sbb
mov
enter
sti
outsl
sbb
add
ret
sub
mov
les
sahf
shll
and
testb
cmp
jge
lret
push
xchg
mov
iret
sub
test
dec
sahf
push
stos
and
ja
sub
xor
outsl
cmp
popf
mov
fists
call
hlt
add
and
and
or
sbb
inc
cmp
insl
in
mov
and
push
sub
cmp
andl
cld
jecxz
jnp
cmpsb
fidivrs
fisubl
mov
cli
cmc
cmpb
neg
dec
lcall
adc
sbb
mov
out
jle
test
ljmp
mov
sub
push
jno
mov
lret
push
mov
pop
inc
incb
pop
dec
adc
xchg
inc
and
test
outsl
mov
ret
filds
xchg
xchg
push
sub
lock
xchg
xor
insb
gs
and
shrl
push
mov
stos
cmp
jns
movsl
insb
pushf
js
inc
fwait
mov
cmp
scas
push
pop
fidivrs
lock
shr
adc
mov
imul
int3
cmp
xor
fnclex
insb
mov
pushf
pusha
jnp
push
in
fldcw
cmp
add
scas
aad
lds
imul
mov
mov
popa
shrb
mov
adc
movl
imul
adc
mov
hlt
in
popf
push
add
jmp
push
rcll
nop
inc
shll
sbbl
adc
sbb
fldcw
mul
pushf
ficoml
aam
lcall
jo
je
scas
fnstsw
out
and
test
jmp
in
dec
add
mov
cli
xchg
push
xchg
mov
sub
test
adc
cld
mov
lahf
dec
lods
iret
cmp
ljmp
pop
stos
xor
imul
or
stc
dec
imul
lret
adc
or
inc
sub
je
fldl
icebp
cmpsl
js
mov
aad
stos
push
shr
add
xchg
lods
int
fildl
jno
jno
test
imull
mov
insb
dec
outsb
lcall
jmp
push
mov
fs
and
aam
jecxz
adc
lds
xchg
jge
pop
cmp
jle
adc
dec
mov
cmp
sub
or
sub
outsl
push
cwtl
ljmp
loope
pushf
adc
sub
aad
add
mov
mov
lahf
mov
push
dec
jmp
sbbb
arpl
ret
aad
inc
lock
shlb
lods
jns
xchg
pop
loop
sti
jb
jp
sti
push
jge
dec
cmp
mov
jmp
mov
shll
adc
test
inc
pop
hlt
pop
fcoml
fistpl
pop
lcall
pop
jecxz
lret
out
push
dec
out
pop
pop
cmp
cmp
sbb
rorl
or
test
add
fistl
or
inc
jns
pop
sti
cli
push
push
sub
mov
ja
xorl
jne
xchg
lahf
arpl
cmp
ja
mov
test
js
sbbb
ret
cmp
inc
sbb
lea
addr16
sbb
popf
inc
xchg
push
jecxz
adc
dec
psrlq
out
inc
addr16
cmp
notb
lods
jp
rorb
add
std
in
adc
ret
ss
popf
jmp
sub
into
add
adc
sub
mov
ljmp
fisubs
fimull
push
hlt
xchg
pop
les
add
lods
aaa
pop
fsubr
lret
push
int3
repz
loopne
mov
pushf
in
pop
xchg
loop
in
mov
or
jecxz
aaa
ss
jg
ret
mov
cmp
cmp
jnp
push
adc
sti
test
cli
mov
inc
add
scas
sbb
rcrb
add
jmp
insl
xor
lcall
fidivrl
das
loop
add
lds
add
popf
test
jmp
mov
lahf
test
pop
xchg
adc
mov
inc
lds
jmp
cmp
push
out
dec
mov
in
aam
test
dec
fs
outsb
mov
and
push
out
mov
shll
loope
stos
cmp
js
das
and
js
loope
xor
sbb
fimuls
jo
inc
lock
inc
add
dec
imul
pop
inc
push
pop
mov
test
fistl
out
stos
test
jle
test
insl
add
addb
adc
xchg
adc
lods
movsb
es
outsb
mov
lods
or
fwait
mov
cld
jl
pop
adc
xchg
gs
add
shrl
fldlg2
mov
cmc
push
bound
sub
xacquire
sbb
in
fmull
mov
repz
sub
push
push
sbb
or
mov
hlt
mov
aas
xchg
rolb
fwait
sub
sub
xor
mov
jb
add
dec
dec
pop
mov
lods
cmp
cmpsb
lods
add
pop
cmpsl
and
xchg
sbb
or
pusha
mov
gs
inc
es
pop
pop
adc
push
jb
xchg
nop
hlt
jns
adc
mov
aaa
add
mov
jge
push
xchg
shlb
fs
sub
xchg
pop
popf
jns
lret
or
adc
pop
mov
cmp
xorb
mov
xorb
mov
test
ja
jne
and
xorl
cmp
push
jns
mov
xlat
out
aad
movsb
data16
pop
out
pop
cmp
fisubs
inc
sbb
out
mov
pushf
fbstp
imul
lea
or
lret
mov
dec
xchg
adcl
movq
idiv
push
jmp
dec
inc
or
add
in
cld
cmc
push
adc
push
jmp
pop
lea
xor
cmp
xor
adc
mov
les
mov
in
cs
dec
adc
mov
lock
call
adc
jbe
or
cs
push
jl
addr16
cmp
lret
rol
out
push
je
xchg
repnz
data16
xchg
jae
mov
cwtl
xchg
push
push
stc
jns
fisubl
inc
push
ljmp
cmp
mov
jnp
out
cs
stc
sbb
loopne
roll
subl
hlt
aad
mov
ret
sbb
inc
aad
clc
movsb
push
adc
xchg
rolb
push
push
insl
add
sti
cmp
xchg
dec
fwait
mov
mov
or
dec
and
sarb
xor
scas
aam
jne
pop
lds
push
aaa
sbb
inc
dec
pop
mov
pop
sub
hlt
pop
dec
jg
sub
pop
push
jmp
pop
aas
js
or
xchg
mov
or
and
int
aaa
icebp
ljmp
jnp
cmp
xchg
lea
cmc
scas
icebp
aad
lds
fwait
movsb
cs
out
mov
adc
adc
loopne
add
add
dec
loope
cltd
sahf
xchg
dec
call
arpl
push
add
pop
sahf
xor
in
imul
ss
cmp
ret
cmpsb
xchg
shr
sysret
cld
xor
out
testl
inc
jae
sbb
mov
and
loopne
dec
mov
aam
mov
jp
les
push
scas
cmp
inc
jnp
das
lds
jge
daa
xchg
pop
imul
and
push
or
xchg
mov
mov
jecxz
mov
inc
lods
pop
adc
cmp
stos
jecxz
pop
lock
xchg
xor
in
xor
iret
lods
mov
negb
daa
dec
jb
roll
adc
leave
fidivl
jbe
or
xor
movsl
ss
add
push
xchg
adc
dec
jl
lock
shll
imul
fisttpll
jecxz
add
jmp
sub
or
subl
icebp
dec
pop
mov
sbb
add
fldcw
pop
stc
dec
ret
mov
xorb
lds
test
sbb
sub
aad
adc
or
and
scas
inc
push
xchg
or
cwtl
out
mov
sbb
lock
mov
lea
iret
mov
mov
popa
and
aam
inc
faddl
std
pop
popf
pusha
dec
mov
inc
insb
aas
xor
fwait
stos
xchg
mov
jns
inc
addr16
pop
inc
xor
cwtl
pop
xor
xchg
dec
imul
call
aad
mov
scas
aad
push
aam
push
lds
shrl
fsubr
scas
insb
sub
inc
scas
test
rorl
sub
or
sbb
inc
adc
fucomp
loope
xchg
add
in
jb
cmp
pop
pop
shrl
xor
add
out
repz
aam
lods
or
inc
xor
iret
ljmp
sahf
or
push
mov
lret
fs
mov
jns
push
mov
add
std
push
cltd
add
sti
add
mov
daa
cmp
dec
pop
test
inc
loop
outsb
adcb
jge
out
ds
jg
nop
dec
xlat
mov
mov
dec
sub
divl
dec
and
loop
pusha
enter
out
subl
mov
dec
daa
fidivrl
clc
cmp
xchg
fisttpl
cld
shld
xchg
and
mov
adc
pop
jl
test
mov
add
adc
fs
sub
std
pop
out
cld
imul
cmp
hlt
xchg
xchg
inc
fdivl
and
mov
icebp
xor
lock
subb
jno
popa
inc
sub
out
mov
cmp
cmp
adc
mov
js
imul
testl
loopne
loopne
push
xor
lods
ds
jo
mov
ret
pop
push
iret
xchg
dec
inc
mov
xchg
shlb
cmp
sbb
adcl
ljmp
arpl
mov
cmpsl
ljmp
push
fs
gs
das
adc
pop
loop
hlt
cld
cmp
pop
sub
jge
shrb
sbb
cs
push
sub
sbb
pop
inc
xchg
xlat
cmp
ja
jno
lods
adc
adc
rorl
inc
ss
jle
xchg
out
jnp
xorl
cld
int
xchg
xlat
push
push
popf
xchg
xchg
mov
inc
inc
and
fwait
sub
mov
mov
cmp
cmp
sub
push
push
push
mov
jl
dec
fiadds
aaa
mov
lea
cmp
fiadds
cmpsb
mov
mov
jmp
ds
adc
les
mov
lret
adc
arpl
inc
lock
sub
leave
adc
movsl
cmp
popf
push
add
sti
and
pop
push
scas
push
jp
aaa
adc
cmp
adc
inc
inc
negb
sub
movsl
fcmovbe
shrb
in
lahf
push
test
mov
xor
xchg
jl
cld
into
sub
dec
dec
ja
out
shll
enter
sahf
adc
out
sub
test
inc
cwtl
addr16
dec
outsl
fcoml
lret
lods
adc
xor
adc
mov
inc
aas
repz
in
push
push
xor
fs
cli
xor
mov
fs
sbb
out
lcall
cmpsl
adc
sub
out
mov
out
jle
lret
cmp
stc
stc
sbb
jo
sbb
in
dec
mov
pop
fcompl
stc
lods
shll
pop
bound
out
sbb
scas
js
paddd
sbb
pop
cwtl
push
cltd
and
lods
lods
leave
adc
int
repnz
insb
inc
test
out
inc
lahf
mov
ret
mov
lret
inc
jns
mov
adc
gs
jns
daa
mov
mov
call
push
push
hlt
xchg
fucom
mov
add
push
imul
adc
in
pop
hlt
pop
inc
dec
fwait
jmp
adc
aas
rcrl
mov
or
jp
aam
stos
and
add
mov
bound
push
push
fstpl
aam
jg
and
scas
sub
mov
cli
pop
push
jne
sbb
popl
pop
inc
ret
push
xchg
std
mov
dec
stos
cmp
ss
inc
pop
into
das
sub
mov
dec
imul
cmp
into
imul
imul
js
or
adc
xorl
ds
nop
inc
push
lahf
cld
out
rclb
mov
adc
and
mov
xchg
aaa
add
jb
xor
sub
cs
sub
imul
pop
mov
mov
mov
cs
movsl
ret
sahf
add
dec
jnp,pt
xor
add
xchg
pop
fildll
lods
inc
sub
push
xor
fistpll
or
sub
and
scas
aad
jmp
mov
fwait
push
out
stc
jb
popa
jecxz
in
jge
sarb
loopne
inc
ljmp
xor
or
cmp
movsb
cmpsb
push
pop
jnp
ret
or
outsb
adc
cmpsl
test
push
jns
jne
mov
pop
mov
push
shlb
movsl
push
out
inc
cld
sbb
pop
pushf
inc
inc
cmp
icebp
and
sbb
dec
push
enter
pop
loop
xchg
cmp
jl
sbb
fnstenv
mov
push
ja
leave
scas
rorb
es
pushf
out
dec
shl
pop
push
push
xor
jmp
lea
mov
jle
nop
ficomps
jns
push
inc
xchg
sub
stos
daa
jg
test
ffree
jae
icebp
mov
inc
sbb
sbb
scas
mov
leave
mov
cli
mov
rcll
insl
hlt
cmp
out
frstor
xor
nop
or
and
aam
push
jle
push
shlb
lcall
push
cmp
int3
outsl
push
inc
pop
cmp
mov
das
cli
or
jmp
sub
push
notl
dec
xorb
iret
test
pop
insb
push
adc
sbb
cmp
adcb
mov
lret
push
sbb
mov
lock
cmc
jb
and
decl
lock
dec
imul
push
mov
push
jb
pop
xchg
xor
adc
xchg
mov
mov
xor
xor
imul
je
jmp
jecxz
in
xorl
and
mov
popa
xor
jg
lcall
mov
popf
xchg
mov
or
mov
and
mov
adc
data16
sub
ljmp
divl
into
mov
push
in
push
cld
dec
xorb
ret
je
or
sub
bound
jge
xor
lea
and
aam
add
dec
cmp
lea
fwait
je
cli
stc
push
sub
fldt
mov
and
fs
and
or
sub
mov
push
mov
jp
sbb
fisttpll
mov
add
outsl
jge
sbb
xchg
loopne
iret
data16
mov
stos
sub
fmul
jo
mov
push
and
rorl
add
ret
push
into
fistps
dec
mov
out
jae
in
fs
mov
jl
cwtl
cmp
sti
pop
out
push
cmpsb
sbb
adc
mov
leave
clc
xor
mov
dec
sub
icebp
pop
add
push
jmp
dec
xchg
arpl
cmp
outsb
orl
mov
add
sub
pop
scas
jno
and
in
inc
loope
xor
frstor
gs
pop
adc
popa
jge
stc
pop
int
xor
out
ja
imull
pop
jg
cwtl
fwait
xchg
aad
icebp
push
rcll
pushf
mov
ror
xchg
test
inc
data16
xchg
cs
mov
cmpsb
shll
and
jo
push
jle
push
mov
stos
jae
mov
clc
pop
push
adc
xchg
mov
push
jmp
sbb
mov
jb
cmp
inc
test
xor
icebp
pop
add
stc
jbe
mov
and
inc
add
addr16
out
roll
xchg
fnstsw
roll
inc
adc
in
mov
jno
cmc
loope
adc
and
mov
stos
imul
mov
push
nop
sti
in
xchg
mov
mov
cltd
stos
in
lret
adc
test
je
movsb
fistl
sti
cmp
sbb
fcmovnu
call
jmp
sti
push
mov
sbb
xor
push
mov
fnsave
sub
push
shl
adc
fists
jecxz
divb
mov
subb
out
add
shr
andb
outsb
fcmovnb
pop
mov
fidivl
icebp
shrb
lret
jns
rolb
imul
mov
or
mov
addl
pop
fs
lock
mov
out
add
xchg
jge
je
arpl
lods
adc
data16
inc
imul
xchg
fldcw
pop
fists
notb
aam
push
adcl
jp
int3
mov
mov
addl
cmp
movsb
leave
call
popa
jns
lret
cmpsl
cmp
scas
push
jl
aas
jecxz
push
pop
push
arpl
cmp
lahf
jno
mov
mov
addr16
cmp
dec
das
sarb
aam
pushw
inc
lods
jg
or
es
cmp
adc
sti
ljmp
cwtl
push
repnz
jb
pop
sub
pop
jl
or
repnz
fidivs
push
mov
mov
xor
pop
addr16
out
aam
lret
adc
incb
pop
jb
ljmp
add
jno
cmp
test
push
out
loop
add
fstps
call
xchg
sbb
sub
xor
xor
jmp
mov
pop
push
insb
mov
push
push
fwait
cmp
inc
aad
inc
aam
jl
call
mov
mov
ljmp
ret
sbb
pop
sub
push
dec
mov
fbstp
test
dec
in
dec
jl
mov
xchg
mov
xor
into
push
mov
adc
mov
out
mov
pop
mov
push
push
bound
pop
mov
pusha
out
cs
mov
lret
push
fstps
ljmp
lahf
sbb
pop
xor
add
pop
dec
cli
mov
arpl
push
fimuls
insl
sbb
push
xchg
int
sub
das
call
int
adc
mov
xor
inc
leave
push
pop
sahf
mov
mov
mov
insl
push
negl
lds
or
sbb
dec
outsl
out
gs
in
mov
lret
dec
push
push
push
mov
stos
lock
jne
xchg
sub
xchg
lds
gs
lods
jp
mov
stos
mov
shll
lock
ljmp
les
push
inc
pop
push
adc
jmp
inc
dec
jmp
pushf
stos
jnp
jb
leave
cmp
inc
adc
inc
sbb
aas
cmp
mov
out
aam
ja
scas
cmp
mov
clc
mov
nop
or
ljmp
push
dec
stos
mov
imulb
lock
ret
movl
push
fildll
mov
cltd
scas
scas
neg
mov
jg
ss
push
outsb
mov
inc
scas
jnp
add
out
adc
ljmp
test
push
pop
ficomps
sub
xchg
in
mov
lret
add
xchg
ds
stc
jge
cld
jmp
push
mov
in
push
mov
loop
arpl
jmp
out
dec
dec
mull
fbld
jae
mov
push
inc
or
movsl
rorb
lods
stos
hlt
lds
enter
out
and
mov
and
or
mov
sbb
push
fisttpll
je
jecxz
in
lret
pop
outsb
lcall
rclb
mov
pop
dec
push
adc
fnsave
shlb
adc
popf
jbe
sub
mov
cli
js
fs
hlt
push
cwtl
gs
inc
mov
inc
cmpsb
mov
push
push
and
push
daa
in
rcrb
imul
je
or
repz
cltd
std
je
adc
idivb
adc
xor
jnp
into
inc
mov
movsb
leave
rcl
adc
xor
stos
mov
cmc
jl
cli
imul
mov
bound
jae
jne
mov
in
in
lret
test
dec
sarb
dec
mov
push
pop
add
pushf
int3
stos
inc
jne
xor
into
inc
pushf
aas
or
lds
ljmp
mov
jbe
enter
lcall
dec
mov
jnp
mov
ljmp
mov
call
jb
cmp
pop
dec
jne
pop
add
xor
and
xlat
bound
fwait
das
outsb
xorl
mov
push
and
lcall
sub
ret
add
jecxz
dec
cmp
fidivrs
mov
ss
push
aad
insb
push
or
xor
lods
fistl
jno
cltd
addl
mov
bound
nop
mov
leave
pop
int3
jae
lret
dec
push
sub
add
xor
cltd
or
mov
push
repz
adc
mov
test
scas
pop
cmp
jo
jno
rolb
loope
inc
sub
or
iret
insl
mov
mov
mov
mov
cltd
mov
cmp
adc
fxch
or
stos
lea
popf
jle
push
nop
xlat
int3
dec
rolb
pop
test
iret
xchg
icebp
jmp
ss
je
xchg
mov
jne
cld
mov
ficompl
cmp
sub
cwtl
inc
xor
jns
jge
out
cmc
inc
sbb
mov
add
jne
or
sbb
or
ja
lea
push
mov
mov
arpl
and
push
enter
dec
pop
cli
sub
mov
cmpsl
dec
pop
les
xlat
fdivp
test
cmpsl
jo
orb
inc
jl
sub
dec
adc
xlat
mov
xchg
sub
dec
arpl
sub
inc
repnz
out
int3
xorb
fwait
in
fsubrl
rorb
loopne
test
hlt
out
ja
xor
inc
into
cwtl
mov
jg
push
push
test
mov
mov
sahf
mov
in
sub
add
mov
js
mov
pop
daa
add
out
out
fisubl
lds
es
adc
insb
loopne
sar
and
pop
sub
mov
movsb
adc
push
scas
std
jle
popa
outsb
movsl
sub
test
gs
fsubrl
cli
loopne
in
push
in
movsb
ret
repz
fs
std
das
roll
adc
adc
jecxz
xor
dec
or
dec
ss
and
mov
in
and
test
xor
mov
pop
sahf
daa
mov
pushf
lret
pop
inc
mov
cmc
sbbl
cmp
add
insb
push
xchg
or
mov
nop
pushf
xor
fsubrl
cli
cwtl
lea
sub
mov
add
fidivs
lds
popa
fistps
cli
jge
push
add
or
scas
repz
mov
lea
fisubrs
shll
cmp
push
stos
rep
stos
adc
lret
push
sub
nop
xchg
xchg
fcmovnb
push
mov
ss
jp
push
jg
mov
ret
mov
les
cwtl
in
mov
xchg
shll
cmp
inc
ja
stc
lock
lds
xchg
test
or
xchg
sti
dec
out
pop
loop
jmp
or
pop
in
sub
jae
mov
mov
push
mov
in
imul
lock
jnp
aaa
in
jnp
nop
lds
adc
inc
inc
mov
dec
aam
in
pusha
fcmovnbe
js
mov
mov
jno
push
loope
pop
mov
and
mov
adc
stos
sub
iret
rclb
test
stos
sub
clc
int3
xchg
bound
sti
jne
inc
cltd
push
and
hlt
sbb
jns
into
sub
sub
mov
adc
out
movl
cmc
sub
push
in
loop
xchg
repnz
nop
or
and
push
fiaddl
xor
lods
insl
inc
push
sbb
and
int
add
push
dec
rcll
enter
orl
mov
jge
int3
test
cmp
nop
in
jg
addb
sub
loop
lds
fldt
xor
es
sbbb
mov
add
testl
mov
stc
cmp
sarb
hlt
xchg
test
pop
insb
into
xor
sti
ret
cs
insb
jbe
fbstp
push
sub
jmp
jnp
cld
or
sub
aaa
pop
gs
rcr
fcoml
pop
xor
cmp
aaa
pop
push
mov
and
out
or
call
inc
adc
mov
inc
stos
cmpsb
aad
sbb
jmp
mov
add
rcll
jle
xchg
stos
dec
in
xchg
sbb
lods
mov
outsb
sbb
push
mov
adc
xchg
test
pop
cld
outsb
pop
outsb
jb
repnz
adc
jbe
dec
les
stos
xor
scas
or
cli
xor
in
lock
pop
mov
addr16
cmp
mov
mov
shll
mov
and
lret
push
xchg
inc
imul
xor
xchg
and
test
in
cwtl
or
pop
fwait
lahf
insb
movsb
daa
ftst
aam
xorb
mov
out
nop
arpl
mov
fsubrl
or
cmp
xor
sbbl
push
cmpsb
xor
or
jmp
xchg
sbb
loope
fstl
popa
jg
cmp
or
xchg
test
jle
insb
and
sti
cmpsl
fdivl
pop
xchg
sbb
dec
inc
jl
inc
push
jge
jns
inc
lcall
cmp
cld
dec
scas
sbb
sub
jnp
mov
push
sub
mov
inc
cltd
and
jmp
shll
jns
jp
or
aam
cmc
testb
xorl
fisttps
mov
push
cltd
inc
loopne
pop
mov
daa
stc
ds
icebp
or
je
fdivp
and
or
jb
stos
mov
sub
enter
xchg
pop
ret
aad
inc
dec
push
dec
mov
iret
outsb
loop
cmp
shlb
test
xor
xor
cmpsb
pop
insw
fwait
xchg
call
jne
pop
ljmp
nop
pop
push
rclb
jnp
mov
pop
cli
int
xor
push
inc
jle
cmc
inc
xchg
lahf
mul
aam
and
xchg
mov
aad
jno
andl
sti
test
fcmove
cmp
jb
cmp
sbb
mov
dec
or
jo
sub
in
push
shrb
in
and
and
repz
pop
ljmp
xor
or
pop
pop
xchg
and
jae
sub
pusha
loopne
inc
lods
cli
and
shr
sbb
cmp
test
icebp
push
shll
iret
and
into
mov
lock
jge
gs
pop
in
popf
xchg
push
dec
rcll
xchg
aam
jo
popf
test
mov
int3
into
mov
aad
jg
push
pop
icebp
aam
push
mov
mov
cltd
dec
inc
fnstcw
mov
les
sub
inc
stc
movb
dec
jmp
gs
sub
xor
js
add
mov
mov
in
iret
sub
xor
inc
outsb
mov
shll
stos
es
push
lret
aas
push
outsb
out
dec
in
dec
enter
aam
xchg
xchg
in
inc
ljmp
stos
and
pop
sub
mov
xsavec
add
and
fcmovbe
jne
push
xchg
insl
xchg
push
push
addr16
dec
mov
push
or
mov
imul
jae
data16
or
xchg
pushf
adc
mov
pop
xchg
loopne
add
fisubrl
out
stos
mov
jae
bound
inc
pop
out
and
cmp
or
mov
push
xor
pop
test
dec
pop
push
aam
ja
dec
cmp
mov
pop
push
enter
iret
xor
sahf
jmp
and
in
add
outsb
dec
mov
xchg
dec
icebp
dec
or
mov
lea
push
fchs
dec
xor
adc
pop
xchg
outsb
xorb
loopne
add
push
aas
ljmp
rcrb
sbb
pop
mov
icebp
add
xor
addr16
push
jns
pop
jmp
pop
lahf
push
int
std
cmp
test
xor
adc
out
xchg
cmpsb
mov
sbb
movsl
out
or
or
jb
imul
stc
push
adc
xchg
stos
jecxz
xor
or
imul
mov
je
push
sub
mov
shlb
push
mov
shlb
jmp
add
sahf
pop
insb
faddl
xchg
xchg
lds
cmpsl
lods
push
lods
or
pop
out
lahf
lcall
imul
xor
cs
mov
xchg
es
bound
fucomp
or
or
jnp
pop
out
cwtl
push
and
mov
mov
insb
aas
dec
imul
push
mov
push
into
pop
pop
push
mov
mov
int3
mov
xchg
mov
jbe
xor
push
push
aam
subb
shrb
push
scas
mov
repnz
imul
repnz
jmp
clc
and
mov
icebp
mov
sbb
fsub
subl
gs
jnp
jne
imul
jecxz
inc
js
push
push
fsubrs
adc
push
in
imul
jne
data16
out
jo
stos
gs
es
inc
idivl
and
dec
pop
jns
sub
sahf
xchg
sbb
cltd
xlat
push
cmp
jns
push
lahf
sbb
pop
movsb
push
cmp
jecxz
sub
mov
dec
dec
add
icebp
arpl
lcall
adc
inc
lret
in
dec
lods
fdivr
leave
push
ret
pop
into
fwait
sbb
pop
or
shrl
sar
cmpsb
or
loopne
test
adcl
out
push
lock
lcall
or
out
pop
dec
xor
inc
pushf
xchg
mov
xor
scas
cltd
sbb
inc
addr16
cwtl
cmc
mov
orb
mov
xor
repz
data16
and
das
das
rorl
xchg
outsb
out
mov
fisttps
adc
or
mov
jge
pop
xchg
dec
iret
cmp
adc
inc
sbb
xchg
inc
test
sub
sub
sti
mov
xchg
cwtl
mov
sarl
sub
cwtl
cmpsl
jnp
shll
es
aaa
add
test
mov
es
push
loope
mov
adc
test
scas
lds
aam
or
cli
outsl
scas
pushf
fdivs
pop
adc
dec
xchg
inc
xlat
lret
xor
gs
dec
dec
stos
sbb
xor
sti
call
ljmp
leave
xchg
inc
ret
sub
aaa
cs
mov
and
pop
push
lcall
pop
pop
xor
out
fadd
jp
add
enter
or
movsl
ret
mov
xor
dec
or
xchg
jmp
jecxz
cmp
incb
fstpl
test
jo
cmp
mov
popf
insb
outsb
cmpsb
xor
mov
les
add
push
pop
adc
aad
ret
or
jecxz
stos
imul
int
roll
mov
fwait
mov
dec
xchg
inc
mov
pop
jecxz
push
int3
mov
xor
sub
push
cmp
cmpsb
sbb
leave
pop
outsl
divl
or
or
adc
push
cwtl
jp
sarl
xor
insl
push
mov
adc
add
insb
pop
xlat
scas
in
dec
mov
dec
push
push
xor
cmp
push
mov
cmp
cmp
outsb
adc
xchg
lock
fisubs
enter
call
push
into
dec
lods
xlat
or
mov
mov
jp
jp
fwait
cmc
test
into
stos
jp
and
movsb
jns
ss
lock
xchg
mov
inc
push
test
push
clc
xchg
daa
int
rcl
fs
pop
jmp
or
pop
and
sbb
xlat
jecxz
pusha
xchg
mov
mov
mov
mov
xlat
jmp
add
std
xor
js
bound
out
add
daa
inc
xor
xchg
xchg
adc
sub
adc
fmuls
icebp
push
insl
arpl
sub
adc
les
lods
leave
and
subl
push
loop
mov
faddp
mov
inc
fwait
sub
push
inc
ja
int3
mov
ret
scas
mov
sarb
jb
inc
idivb
filds
popa
mov
fnstcw
jmp
adc
or
jne
aam
int
sbb
mov
loop
sbb
sti
fwait
lret
daa
mov
and
mov
movsl
in
ret
cld
lods
sbbl
out
mov
add
mov
push
out
add
pop
dec
mov
fimuls
aas
pop
push
sti
int
sbb
cld
push
arpl
pop
testb
pop
inc
lods
adc
xchg
mov
mov
pop
sbb
enter
lea
imul
xor
orb
sbb
rorl
xchg
lea
inc
inc
sbb
lret
push
les
out
imulb
pop
pop
and
xchg
xorl
dec
jecxz
sbb
arpl
pop
sbb
lea
xchg
imulb
sbb
fldl
push
mov
adc
mov
sti
cwtl
inc
scas
jnp
sbb
sub
out
or
cmp
icebp
std
cmp
mov
xchg
in
adc
xor
lods
cli
xor
test
pop
cmp
cmp
mov
sbb
roll
mov
aaa
adc
sub
push
jne
loopne
call
outsl
and
mov
or
sahf
mov
das
insb
pop
cmpsb
pop
lods
subb
mov
xchg
cmp
fiaddl
movsl
loope
dec
sbbl
mov
xchg
out
xor
cmpsl
jo
hlt
and
cmp
out
lds
iret
fsubl
cmp
adc
cmp
sarb
push
in
les
jnp
arpl
sbb
aaa
add
outsb
inc
pop
or
outsb
adc
daa
mov
sub
les
pop
je
cmp
xchg
aas
stc
iret
lock
pop
imul
mov
pop
roll
cmpsb
bound
xor
add
add
dec
sub
cmp
mov
sbbb
push
ret
xchg
add
adc
xor
adc
jns
pop
mull
jno
sbb
and
mov
scas
pop
adc
or
and
cld
push
lock
fwait
add
loopne
rolb
inc
shlb
cmp
inc
pop
mov
sti
mov
test
add
insb
fcoml
mov
repz
mov
daa
add
lock
stos
push
inc
rcl
je
mov
sti
xchg
xor
movb
sub
push
shlb
loope
in
mov
test
and
xor
nop
add
and
dec
mov
ja
jecxz
and
fistpll
xchg
sub
inc
mov
adc
cld
jae
pop
sbbb
mov
cmp
jae
fbld
pop
mov
dec
mov
fldl
iret
repnz
push
stc
in
cmp
jae
mov
mov
lcall
shlb
out
sar
bound
mov
popf
add
imul
mov
adc
lret
fsubrl
mov
xor
test
hlt
scas
and
push
aas
gs
mov
pop
sub
inc
adc
int
bnd
lods
or
or
pop
pop
addr16
and
lods
jl
sbb
das
sbb
je
int
js
lods
push
mov
add
fdivl
pop
in
xor
add
mov
push
test
aas
fadd
sbb
sahf
xchg
dec
inc
jbe
dec
adc
jbe
or
adc
rcll
cmp
fstpl
push
rorl
jg
lods
pop
pop
mov
sub
push
adc
add
into
sub
pop
mov
pop
aas
imul
arpl
mov
dec
jg
gs
jbe
mov
fsts
push
bound
scas
test
aas
cmpl
imul
sarb
into
vpmuludq
movsb
out
or
cmp
fmuls
or
test
lock
mov
push
cltd
or
dec
mov
xor
lcall
fsubl
jg
xchg
call
pop
inc
mov
ret
es
adc
pop
mov
mov
jl
in
ljmp
ds
adc
cltd
cmp
call
cli
loop
mov
mov
xor
adc
in
aam
or
arpl
mov
sbb
loope
mov
dec
cmpl
mov
mov
mov
xchg
lahf
lock
sbb
inc
cltd
test
enter
fsub
mov
jmp
loop
sbb
stos
into
arpl
cmc
mov
xchg
inc
popa
mov
sbb
into
mov
add
jecxz
repnz
aas
xchg
aam
sbb
ret
push
les
addl
out
orb
dec
sbb
mov
cmp
xor
mov
sbb
sub
mov
sahf
xchg
out
xor
mulb
jns
add
mov
daa
arpl
cli
jle
pop
fldenv
sub
stc
rolb
jle
push
test
outsl
hlt
jno
xor
xchg
outsb
ja
mov
cwtl
neg
mov
je
cld
fsubs
test
and
outsb
cli
pop
adc
test
jecxz
fwait
push
popf
inc
xor
jp
mull
cmp
shll
test
fisubrs
rcl
sub
lret
pop
dec
ljmp
dec
mov
jnp
or
dec
add
mov
cli
push
push
pop
scas
fildl
inc
shll
lock
push
and
pusha
sub
aaa
xorb
cmp
test
les
imull
fstpl
cwtl
mov
add
jmp
ficompl
pop
out
xchg
xchg
xor
sbb
mov
repz
lret
push
cmpsl
and
mov
loopne
mov
xor
ljmp
jo
cmp
lea
arpl
dec
bound
loop
mov
jno
add
adc
inc
pop
mov
mov
push
fistl
fdivrs
testl
mov
les
outsl
leave
sub
or
mov
pop
gs
push
xor
pop
std
jge
das
adc
mov
inc
rol
fwait
xchg
pop
mov
adc
push
repz
lea
out
mov
mov
dec
arpl
pop
xchg
cmp
xor
inc
fwait
push
dec
icebp
adc
fnstsw
test
movsl
pusha
xor
ret
add
xor
adcl
jno
add
inc
out
testb
out
dec
testl
jo
mov
mov
inc
xor
cmc
subl
push
mov
xor
cltd
xor
push
or
dec
mov
push
mov
jge
dec
jbe
fdivl
ds
hlt
cmpl
stos
add
lea
insb
add
push
lds
xor
and
loopne
mov
lea
cmp
pusha
test
sub
vunpcklps
test
or
sub
adc
aad
out
int3
movsl
sub
and
inc
adc
hlt
jg
loopne
stc
mov
test
jbe
cs
out
loop
int3
mov
insb
in
jae
add
subl
sub
out
add
sbbb
loope
in
ret
jne
mov
mov
shlb
mov
pop
insb
aad
std
adc
js
leave
addb
imul
stc
jg
xchg
xchg
mov
or
jge
jo
daa
fwait
loopne
inc
in
xacquire
pusha
arpl
mov
inc
cmpsb
jo
dec
push
lret
or
push
jmp
add
popf
clc
inc
orb
pop
stos
mov
cmp
mov
adc
test
and
ret
adc
in
idivb
sahf
test
jge
movsb
inc
xchg
mov
xor
mov
push
dec
in
test
cmp
jl
test
push
mov
mov
std
mov
inc
xor
inc
movsb
cs
clc
mov
mov
sub
lcall
xchg
popa
xor
mov
jle
scas
adc
mov
fs
push
ds
stos
mov
imul
fwait
adcl
in
push
in
mov
das
mov
sub
push
add
push
sarl
sbb
arpl
sbb
mov
fdivl
mov
or
fcomi
icebp
mov
and
or
loopne
adc
insl
add
cmp
dec
mov
or
orb
in
addr16
mov
xlat
jp
ja
add
jb
stc
jp
dec
int
out
into
orl
mov
hlt
mov
lods
imul
cmpsb
into
mov
push
iret
cmp
test
cmpb
call
pop
in
rcrb
pop
cli
sarl
adc
insb
mov
sahf
inc
jg
imul
xchg
adc
je
popf
rcl
rcrl
sub
lods
rcr
and
lods
in
lock
fadd
loop
dec
popa
adc
out
sub
loopne
in
je
daa
dec
mov
adc
or
dec
fldcw
int
push
push
test
test
fsubrs
out
imul
loopne
das
clc
fimull
and
add
or
int
xchg
das
aaa
aad
and
sarb
cli
and
outsb
dec
lret
jo
and
sbb
add
scas
imul
push
push
pop
xchg
arpl
push
leave
cmpsl
mov
push
icebp
sbb
out
mov
cltd
ficompl
dec
loopne
es
insb
outsb
push
nop
dec
idivb
cmp
lahf
xchg
into
loop
inc
and
lea
lock
mov
inc
mov
aam
imul
stos
inc
mov
cmp
cmc
pop
dec
shrb
arpl
mov
xchg
mov
scas
add
mov
aam
dec
leave
add
mov
fisubrs
fldenv
popa
enter
pop
pop
sub
jns
in
addr16
add
int3
pop
push
out
sahf
xchg
outsl
shr
jae
mov
lods
popf
adc
icebp
mov
and
popa
aad
insl
in
cmp
mov
jbe
mov
in
mov
lcall
adc
sub
xchg
sub
sub
nop
imul
rcll
les
xchg
xor
stc
mov
aad
hlt
xchg
cmp
add
push
icebp
out
jae
cmp
addr16
pop
adc
loopne
and
jg
push
lahf
mov
fsubs
mov
ds
dec
mov
stos
jge
sbb
push
mov
fcoml
cmpsl
jmp
add
cmpsl
adc
add
pop
mov
cmp
test
cmc
pop
lea
lret
mov
les
mov
enter
out
lcall
add
movsb
pop
push
add
jne
mov
test
or
lds
aaa
sub
jg
pushf
popa
rcll
rcr
xchg
negb
cmc
xchg
push
sbb
mov
ret
loopne
test
lods
setnp
dec
jb
movsb
fisubrs
daa
das
outsb
jae
pop
inc
stc
jg
sahf
shlb
jo
push
shrb
mov
sub
adc
in
lock
xchg
inc
cs
js
arpl
sub
lds
mov
sub
mov
fistpl
or
es
push
scas
cli
popa
sub
data16
popa
mov
ficoml
dec
testl
adc
lods
data16
adc
xor
mov
fbstp
notb
push
out
testb
in
les
sub
push
xor
popf
cli
rorb
dec
jg
fwait
into
xor
adc
adc
push
imul
mov
sub
add
and
or
adc
mov
adc
pop
test
dec
sbb
push
xchg
xchg
and
lcall
sar
pop
pop
hlt
inc
xlat
xchg
xchg
mov
push
mov
je
mov
pushf
inc
psllw
and
mov
addr16
repnz
add
into
decl
inc
dec
mov
and
repz
xchg
ja
test
cs
add
or
pop
in
mov
pop
inc
scas
in
push
out
pop
xchg
inc
pop
sub
mov
aas
inc
and
mov
jb
enter
xchg
jg
aaa
xchg
jno
notl
ret
mov
pop
test
je
fcmovb
mov
jp
loop
lods
and
ret
mov
dec
xchg
mov
cli
dec
sub
daa
pushf
mov
xchg
or
cmp
cmpsb
jge
mov
fstl
stos
sub
clc
rolb
popf
imul
lea
or
cs
bound
mov
mov
cltd
sub
mov
pop
sbb
dec
leave
xlat
ret
iret
dec
xchg
sub
inc
add
inc
movsb
add
sub
lcall
lods
lahf
addb
sbb
outsl
mov
mov
or
pop
je
and
xchg
add
jbe
jmp
lret
pop
mov
and
leave
sbbl
insb
aad
fxch
fdivr
sub
pop
mov
je
mov
add
out
dec
mov
inc
pop
fwait
repnz
les
pop
sahf
or
lcall
mov
mov
adc
add
adc
inc
vmread
or
fistps
or
pushf
mov
mov
lahf
lds
jle
fldenv
inc
das
lds
push
cmp
add
jns
std
xchg
shrb
imul
outsl
mov
loope
xchg
mov
mov
in
mov
sbb
les
and
push
or
adc
adc
fidivrs
mov
add
adc
fdivs
xlat
sahf
into
das
movb
lods
sbbb
sti
imul
stc
stc
mov
in
mov
lds
jecxz
add
stos
adc
add
fwait
adc
jns
imul
pop
mov
sbbl
pushf
cmp
inc
ror
jge
adc
mov
test
fwait
cmpsl
jnp
dec
cmp
mov
fistl
aaa
xor
fsubs
push
out
sub
repnz
cld
push
mov
pop
int
test
in
shrl
push
or
xor
jnp
lahf
push
or
pop
movsl
jno
out
pop
pop
mov
leave
js
call
lcall
sub
insl
gs
adc
push
insl
cld
jg
dec
or
and
dec
stos
sbb
xchg
inc
mov
jnp
dec
jl
sub
cmp
lods
fchs
pop
inc
mov
jb
lods
mov
push
mov
sub
hlt
jns
push
jle
dec
shr
mov
je
pop
push
dec
aas
and
dec
cltd
push
xchg
mov
sub
cmc
mov
xor
hlt
ss
ja
jne
mov
in
fwait
pusha
sub
enter
and
testl
dec
mov
or
pop
test
shrl
jnp
push
lret
add
ret
xchg
mov
das
pop
push
inc
mov
insl
cmpsl
xor
pop
enter
push
xchg
jmp
lret
push
mov
mov
mov
or
int
dec
jb
and
enter
enter
and
mov
adc
jecxz
jno
inc
or
filds
jge
mov
cmc
xchg
fdiv
sbb
push
clc
adc
neg
pop
pop
inc
dec
jnp
push
repnz
mov
mov
and
aad
es
ljmp
hlt
stos
add
arpl
loopne
leave
inc
xchg
nop
aam
xlat
shrb
ret
pop
adc
or
mov
loop
push
jl
xor
popf
aam
stos
fistps
dec
test
data16
testl
mov
jmp
sub
push
les
cs
icebp
inc
fnstenv
sub
mov
sub
test
or
lods
xchg
jge
cmp
push
inc
and
repnz
add
add
ret
test
filds
and
andl
adc
mov
movsb
fdivrl
and
and
mov
push
lret
insb
iret
out
repnz
xchg
out
mov
pop
mov
and
mov
mull
shrl
sbbl
xor
xor
out
enter
leave
dec
jb
sub
jb
mov
and
sahf
jmp
mov
scas
push
mov
popa
push
jo
fimuls
and
dec
xchg
cmp
cmp
pushf
pop
jns
das
push
mov
pushf
stc
jp
cmp
dec
insb
xlat
push
sub
sub
adc
leave
adc
mov
cmp
and
icebp
inc
sub
pop
adc
sahf
sub
mov
ret
cwtl
xchg
pop
xlat
inc
xchg
jo
sub
sahf
cmp
jbe
clc
daa
cmp
jg
and
out
imul
fnstcw
dec
insb
lret
sub
cmp
fstpl
lods
cmpsb
fdivrs
ljmp
mov
pop
cltd
imul
outsl
mov
add
ljmp
add
dec
xchg
xchg
adc
hlt
xchg
int3
mov
xor
sub
clc
or
inc
mov
inc
inc
xchg
movb
mov
or
nop
andb
test
iret
cmpsb
xchg
rolb
mov
in
dec
mov
dec
mov
mov
add
fstl
push
stos
mov
dec
push
sbb
add
xor
or
lds
jo
shll
pop
dec
pop
dec
push
sbb
xchg
cltd
dec
into
sbb
add
in
mov
subb
mov
insb
sub
movsb
fdiv
push
or
mov
xchg
inc
jmp
shll
mov
sub
pushf
push
xchg
mov
xchg
pop
icebp
sbb
xchg
iret
jnp
sbb
std
mov
imul
das
push
outsb
mov
in
shrb
and
fld
enter
aam
xchg
pop
ss
mov
in
mov
push
addr16
cmp
push
test
pop
out
and
scas
hlt
xorl
xorb
xor
sti
push
adc
outsl
xchg
mov
ret
dec
and
dec
inc
mov
pop
inc
loope
pop
and
and
and
sub
sub
mov
xor
gs
sub
cld
jg
lcall
adc
sbb
mov
jne
dec
pop
cmp
jle
mov
pop
mov
pop
lods
jp
fstpl
mov
adc
mov
and
outsb
cmp
pop
mov
xchg
pop
stos
mov
mov
ljmp
sub
shlb
mov
inc
movsb
fsubs
and
xor
mov
inc
stos
xor
jp
rolb
mov
stc
mov
test
sbb
xor
or
xchg
or
jbe
sti
mov
dec
xchg
adc
in
add
add
sar
adc
jl
push
popf
xchg
es
test
inc
in
inc
pushf
mov
shll
subb
loop
mov
ss
push
test
ret
xchg
jmp
xchg
adc
push
inc
nop
and
mov
mov
popf
cmp
div
imulb
xor
mov
cld
in
imulb
cmp
xor
mov
scas
loopne
pop
xchg
fldcw
sbb
push
or
ja
mov
pop
mov
inc
icebp
adc
push
arpl
or
push
mov
xor
mov
in
mov
inc
lock
or
in
push
mov
cmp
mov
and
nop
sub
decl
mov
mov
jl
lea
imul
lahf
mov
xorb
xor
ficoms
in
or
xor
cmc
cmp
lahf
pop
adc
clc
sbb
sub
or
arpl
mov
or
cmp
cli
sbb
shrl
lahf
push
xlat
and
adc
loop
test
mov
mov
mov
pop
in
xchg
mov
addl
mov
jmp
mov
lods
roll
insb
cmp
mov
repnz
cltd
hlt
dec
xchg
cmp
int
aad
lea
out
xchg
pop
movb
mov
add
ja
test
call
xchg
addb
lret
sbb
out
ds
dec
stos
mov
jg
cwtl
gs
or
aad
adc
dec
roll
mov
mov
out
dec
imul
jnp
jle
mov
outsb
sbb
mov
imul
cmp
pusha
and
scas
pop
jae
sub
mov
aad
inc
and
mov
xchg
xor
ret
push
popf
push
jb
push
jp
ja
pop
loopne
or
mov
mov
movsl
or
jo
int3
cmc
iret
into
xchg
pushf
xchg
in
adc
je
out
add
mov
aad
out
jnp
cmp
loope
rorl
sub
imul
mov
inc
mov
xchg
out
addl
cwtl
jno
daa
fcomps
adc
cmpsl
js
movsb
fldenv
add
pop
xchg
inc
add
ja
andb
ss
push
inc
jecxz
lret
mov
shll
aam
lea
and
jp
daa
addr16
xlat
push
imul
dec
add
pop
out
aaa
adc
push
inc
cmpl
dec
fsin
jno
mov
test
cltd
adc
pop
mull
mov
add
movsb
inc
cmpb
add
aas
fprem
punpckhbw
push
bound
in
jge
or
mov
clc
sti
in
outsb
in
and
dec
shlb
mov
fcom
adc
xchg
and
pushf
pop
and
test
mov
push
fsts
xor
jp
lods
and
aaa
lret
jmp
jns
scas
lahf
fs
data16
sbb
sub
xor
xchg
fcoms
cltd
out
cmp
xchg
dec
imul
lret
nop
aam
lods
mov
imul
in
sti
mov
out
or
xchg
inc
fisubrl
ljmp
push
cmc
mov
mov
in
fdivrp
shlb
stc
jmp
pop
dec
loopne
sub
fwait
pop
fistpl
sti
jmp
sbb
jecxz
lcall
in
fs
imul
sbb
ud2
sub
je
xchg
mov
jp
stos
int
arpl
mov
push
push
lock
inc
cmp
insl
push
outsb
inc
enter
scas
inc
xorl
pop
pop
mov
fwait
ja
sti
pop
fstl
fstpl
push
jb
fmul
mov
inc
push
mov
test
movsl
xor
cltd
ret
das
jno
or
jg
dec
int3
mov
push
adc
stos
jp
gs
dec
outsl
fs
cmp
rcl
jmp
loope
test
stos
fdivl
mov
inc
or
test
inc
inc
pop
xor
inc
insl
cltd
icebp
dec
xchg
mov
sub
aas
lcall
fcoms
mov
mov
pop
or
mov
xor
cmpsl
xchg
push
jp
or
adc
mov
push
jns
daa
sbb
push
out
sub
pop
lods
sbb
xchg
or
sti
mov
push
jne
add
in
les
mov
imul
and
rcr
xor
lock
rolb
mov
mov
pop
xchg
jmp
adc
int
or
in
imul
pop
cwtl
loope
pop
mov
test
mov
push
repz
cmpsl
add
dec
cli
push
push
icebp
sarl
and
testb
cld
outsb
push
adc
imul
rorb
lods
jb
cmp
fldl
mov
add
pop
das
mov
out
or
mov
inc
mov
inc
or
popa
test
jmp
dec
inc
fldl2e
mov
pop
out
dec
arpl
inc
aad
out
in
std
cs
fldl
xchg
sbb
lcall
mov
ss
aad
xor
dec
and
ds
ret
dec
imull
xchg
mov
xor
mov
mov
aas
lods
jl
add
pop
ljmp
sbb
sub
in
pop
sub
enter
iret
inc
push
mov
xor
fs
fdivl
icebp
push
insb
das
mov
sbb
sub
subb
mov
mov
mov
pusha
cmp
push
cmp
xchg
testb
stos
jo
mov
dec
jl
fistpll
inc
cmpsb
ss
rcrb
cmp
rorl
xchg
sub
fwait
adc
and
inc
or
mov
xor
pop
or
ret
nop
stos
insb
dec
cmp
stos
xchg
call
lods
inc
dec
jp
icebp
imul
cmpsb
pop
push
sbb
xor
dec
sbb
ss
dec
iret
dec
push
aaa
push
cli
fisubl
mov
xchg
rorb
mov
push
into
lock
mov
and
xchg
inc
test
stos
fdivp
dec
dec
mov
jg
in
or
ficompl
aam
mov
fucomi
into
cmp
andl
lret
repnz
pop
pop
hlt
test
inc
lock
outsl
das
xchg
xchg
mov
icebp
cld
cpuid
arpl
fdivl
lock
cmc
mov
sub
ss
data16
dec
push
shll
rorb
mov
sbb
inc
sub
cmpb
insb
push
es
inc
push
insl
or
jp
shrl
and
and
outsb
mov
cmp
repz
sub
jne
sbb
and
mov
ret
push
insl
aaa
adc
mov
xor
lods
call
or
jne
xchg
xchg
imul
sub
bound
hlt
xchg
pop
sub
or
cmp
scas
gs
fstps
cmp
or
enter
in
xchg
mov
pop
dec
pop
shl
adcl
xor
push
shll
dec
pop
jnp
and
cltd
std
leave
pop
cltd
mov
jb
jl
orl
pusha
mov
int3
int3
test
int
in
movsb
mov
push
mov
add
inc
ja
fnstcw
out
pop
outsb
lcall
add
mov
inc
cmp
aam
sub
add
movsl
pop
pop
js
fs
mov
add
ds
cmp
shr
insl
les
sahf
dec
fdivrs
daa
pop
in
mov
or
sti
and
push
xchg
push
or
pop
jbe
repz
mov
loopne
fwait
stc
jmp
xchg
xchg
into
setne
hlt
jge
cmp
mov
mov
push
and
push
js
loopne
jmp
es
testb
mov
push
push
rorb
in
sub
stos
and
push
jno
stc
lcall
je
push
incb
cmpsl
mov
xchg
adc
add
lods
mov
xchg
mov
mov
js
test
pop
sbb
test
loopne
pusha
repnz
pop
push
int
xchg
and
or
push
dec
outsl
fidivrs
mov
sub
mov
out
scas
leave
add
inc
es
cmp
pushf
xor
inc
es
fstpt
cltd
inc
xchg
xchg
push
xchg
fildll
movsl
inc
mov
lahf
fldl
mov
lret
into
js
xor
popf
outsb
mov
cwtl
cmp
pop
dec
js
pop
push
inc
adc
stos
dec
movsl
dec
idiv
icebp
sub
xchg
dec
frstor
xorl
mov
in
ficomps
in
sub
nop
call
cmp
xchg
stc
xor
dec
sub
fcompl
cmp
aas
add
data16
cmpsl
sbb
addr16
xor
pop
xchg
je
subb
lds
sti
lcall
mov
sbb
xchg
dec
in
adc
pop
movsl
jge
inc
mov
mov
jp
push
cmc
outsb
add
add
cmp
addr16
inc
lock
adc
sbb
cmp
add
push
sub
outsb
shrl
int
fmull
es
outsb
movsl
mov
push
daa
iret
mov
in
lods
cltd
stos
cmpsl
mov
inc
dec
into
push
in
fcoml
adc
pushf
aam
xlat
movsl
xchg
lcall
inc
dec
cltd
jno
stos
enter
add
xor
jnp
mov
scas
mov
jmp
or
sbb
or
pop
int3
add
mov
pop
mov
xor
out
and
mov
jmp
data16
inc
shrb
andb
xchg
sub
lret
or
out
sub
xor
add
push
je
stos
jnp
or
sbb
call
cld
inc
or
mov
mov
push
fucom
js
sub
imul
push
mov
or
push
adc
or
hlt
mov
loope
push
loopne
es
je
mov
mov
je
sub
fnsave
mov
dec
adc
ss
pop
dec
add
fstps
xchg
lret
jnp
add
pop
int3
cmp
sahf
cmp
mov
or
push
in
mov
lea
xchg
outsl
mov
js
popl
shl
mov
ljmp
and
push
push
pusha
loopne
xor
cmp
iret
cmp
scas
sbb
add
and
fadd
jns
push
cmp
mov
mov
cmc
imul
push
mov
dec
out
mov
int
fwait
stc
icebp
jl
std
das
cmpsb
repnz
rolb
jge
rcl
movsb
mov
test
loopne
mov
int3
sub
add
das
insl
mov
cwtl
push
push
fdiv
bnd
int
push
cmc
cmc
lea
pop
arpl
lea
sbb
xor
pop
dec
cs
cld
pop
scas
scas
fldl
roll
sahf
je
adc
inc
add
adc
jg
inc
rorl
jo
xchg
and
mov
xor
gs
mov
stc
das
sbb
adc
fidivrs
fs
ljmp
cltd
mov
push
bound
pop
loop
out
cmp
imul
inc
cltd
and
push
movsl
fsubr
fcoms
sbb
dec
test
out
lret
ss
jl
or
cs
push
and
xor
push
test
fsub
imul
js
jnp
mov
jg
sub
mov
mov
das
cld
pop
dec
push
in
movntps
inc
jno
sub
std
stos
mov
js
push
mov
nop
inc
push
or
sbb
iret
adc
sub
leave
xchg
outsb
sti
das
jne
lcall
out
movb
aas
jae
jae
out
shlb
push
sti
aam
popf
cmc
test
pop
in
movsl
daa
out
inc
rcrb
sbb
sbb
jmp
xor
xor
cs
inc
popa
xlat
cmp
jg
out
enter
mov
data16
js
roll
neg
test
loop
dec
outsl
inc
mov
mov
lahf
leave
dec
inc
push
dec
andb
mov
add
sbb
pop
cmp
dec
cmpsl
pop
xchg
jo
pop
es
mov
mov
add
mov
mov
repz
hlt
mov
outsb
inc
loop
lahf
leave
mov
shlb
mov
iret
fcmovnu
fcoms
cmpsb
mov
int
hlt
push
mov
mov
mov
stos
jno
mov
mov
add
fnstsw
and
inc
ds
adc
pop
push
push
pop
xchg
enter
push
mov
lods
je
btr
mov
jle
dec
outsl
rolb
mov
in
sub
xchg
enter
inc
add
rclb
stos
mov
inc
dec
subl
mov
inc
je
cmp
into
lea
xchg
jmp
adc
ret
pop
mov
xchg
xchg
or
mov
std
andb
sub
xor
ss
xchg
int3
mov
or
sbb
cmp
inc
ja
hlt
dec
cmc
in
xlat
dec
fsubrs
push
mov
test
bound
push
push
xchg
and
rcr
aam
adcb
cmc
pop
cmp
ja
mov
fs
addr16
pusha
inc
mov
scas
fistpl
jg
sbb
dec
jp
mov
fs
cmpl
cwtl
jl
and
rclb
inc
cmpsb
xchg
xchg
das
cwtl
fwait
dec
hlt
mov
mov
jp
ror
sbb
mov
mov
loope
ja
jo
inc
js
and
scas
int
mov
pop
cmp
daa
and
sbb
cmpsl
sbb
cmp
mov
icebp
adc
inc
add
mov
pop
lret
sahf
test
outsl
loopne
es
dec
sub
das
cmp
loopne
push
dec
adc
cmp
popf
dec
int
imul
test
adc
idivb
push
fidivrl
jmp
pop
pushf
popa
daa
int3
mov
push
lds
cld
and
jle
push
loopne
rclb
call
inc
jmp
cmpsb
mov
popa
in
xchg
adc
lahf
jnp
xor
hlt
jle
fcoml
adc
push
stos
scas
jmp
fldcw
test
inc
movsl
shrl
das
lret
add
maskmovq
mull
fnsave
dec
stos
push
fwait
jns
push
cmp
xor
pop
or
xchg
jecxz
push
popf
pop
lcall
sbb
sbb
jmp
xlat
jno
mov
movsb
sahf
push
add
test
mov
std
shr
and
jbe
addr16
in
subl
cmc
mov
push
jns
repz
bound
repz
aas
jmp
xchg
sub
cld
mov
adc
aas
std
leave
or
js
movsl
pusha
mov
les
fldpi
ljmp
aam
push
mov
mov
or
loopne
dec
je
insb
pusha
int3
push
add
jecxz
or
sbb
inc
jmp
adc
inc
sub
cmp
addr16
arpl
push
push
jmp
insb
les
xchg
leave
ret
movl
sbb
jns
iret
pusha
in
mov
or
mov
mov
into
add
sbb
cmp
push
roll
dec
dec
sahf
inc
jns
out
mov
ds
xchg
jmp
mov
or
inc
or
nop
xchg
into
repnz
loop
jno
addr16
sbb
and
adc
lahf
or
cmc
xor
push
add
cmpsb
dec
push
adc
ja
ds
lcall
mov
loop
in
add
adc
nop
imul
dec
xor
pop
cmp
pop
sub
into
lock
je
xor
out
icebp
je
inc
pop
add
mov
xchg
or
loopne
pop
lret
lods
dec
dec
xor
std
xchg
mov
xchg
mov
int3
jge
sahf
jl
ret
push
out
imul
add
pop
push
imul
dec
popf
adc
or
sarb
push
popf
mov
outsb
lea
xchg
enter
shl
xchg
movsl
push
mov
sbb
hlt
xchg
xor
out
pop
std
loop
dec
push
sbb
sub
dec
negl
and
cmpsb
xor
stos
add
mov
push
sub
pushf
ds
int
bound
inc
cmc
push
bnd
cmp
ret
cmc
addb
push
sbb
mov
pop
sbb
xchg
add
scas
add
push
cmp
jbe
icebp
lahf
pop
adc
inc
cwtl
ljmp
faddl
das
sbb
imul
cmp
xchg
and
or
jne
inc
enter
test
popa
dec
sbb
fs
enter
ss
or
pop
bound
jno
mov
xchg
leave
and
lret
fistps
xchg
inc
stos
adc
loopne
push
push
mov
sbb
mov
lock
push
mov
xor
sub
ss
inc
pop
inc
lret
fs
dec
pop
adc
cmpsb
and
jp
mov
std
mov
dec
pop
out
negb
ret
aam
mov
xchg
cld
sub
xchg
xor
pop
call
and
push
dec
add
cmp
mov
iret
aaa
dec
jb,pt
push
mov
loope
ljmp
mov
mov
out
rcll
imul
adc
and
fs
sub
movsb
fnstenv
jg
into
add
adcl
inc
xchg
testb
xchg
insl
jnp
add
outsl
loop
lret
cltd
cltd
or
mov
pop
imul
sub
pop
lds
popf
test
outsb
cmc
out
xchg
push
or
or
mov
arpl
mov
into
mov
sub
pusha
enter
ljmp
inc
icebp
inc
iret
loop
push
loope
push
lret
stc
sbb
adc
ret
sbb
insb
lock
cmp
cmp
cmpsb
inc
push
add
cltd
stos
aaa
clc
inc
mov
lock
push
test
aam
into
cmp
pop
pop
inc
dec
sbb
xlat
cwtl
xor
jmp
lret
rol
push
mov
aas
cs
and
dec
je
xchg
and
popf
jns
jle
mov
insb
xor
xlat
mov
cmc
push
pop
es
je
or
enter
enter
arpl
push
andl
jle
inc
fimuls
cmp
push
mov
out
popa
loope
adc
mov
or
in
movsb
je
sub
push
lods
jle
insl
pusha
mov
mov
out
mov
fwait
insl
add
xor
bound
mov
out
outsb
sbb
jne
fs
push
push
imul
ret
jl
lock
and
mov
fwait
mov
pop
loope
cmovle
cmp
lock
clc
pop
jae
xchg
pop
shll
xor
sarb
jg
add
sarl
push
fsubrl
test
or
dec
imul
or
cmpl
lds
sti
loope
jmp
xor
out
pushf
ficomps
mov
cli
adcl
push
stos
sbb
imul
outsl
pop
das
pop
or
pinsrw
outsb
js
pop
lds
sub
pop
in
adc
mov
imul
pop
bndstx
lea
mov
ss
stc
mov
shl
jne
add
xchg
enter
jns
lret
hlt
mov
out
sub
mov
mov
mov
nop
ds
loope
cltd
inc
sub
mov
mov
lock
cmp
jb
and
mov
and
jbe
xlat
ljmp
gs
leave
das
xor
jae
je
mov
gs
cld
outsl
in
inc
sub
ljmp
addr16
xor
call
pop
or
jbe
sbb
inc
or
rcrl
out
mov
add
pop
mov
loopne,pt
mov
sbb
pop
lahf
aad
xchg
out
add
push
mov
fstl
push
and
push
and
mov
inc
aas
pop
test
inc
jg
jo
xlat
addb
xor
lret
pusha
xchg
shlb
lahf
fwait
aad
push
shrb
pop
push
mov
popf
sub
sub
mov
push
ret
dec
dec
jno
int3
loop
adc
bound
mov
fstpt
mov
mov
aaa
and
lret
in
fld
imul
shrl
or
push
roll
andb
testb
cmp
lock
pop
inc
outsl
push
mov
outsl
scas
mov
jg
and
xchg
jg
movlps
out
daa
loope
clc
fwait
sub
dec
inc
mov
push
add
nop
test
in
sub
push
mov
inc
setp
rcrl
xchg
out
orb
jb
imul
lret
xchg
sahf
imul
add
jns
lea
shll
dec
mov
gs
lods
call
pop
dec
loope
xor
frstor
xchg
dec
test
pop
int
popa
lods
mov
icebp
pop
imul
hlt
out
in
outsb
push
inc
dec
mov
add
xchg
in
xchg
mov
cmp
dec
and
hlt
mov
ret
adc
xchg
lret
rcrl
ljmp
xchg
pop
push
sbb
dec
lahf
clc
push
push
ss
mov
xchg
lret
icebp
jne
and
pop
fsubr
add
sldt
leave
in
lret
stos
loopne
mov
adc
movsl
mov
cmpb
cmp
adcb
cmp
cmpsl
popa
mov
into
inc
adc
sbb
mov
xchg
cmpsl
fsubp
sbb
repnz
ljmp
jl
in
push
cmpsb
dec
push
aam
xchg
andb
jne
call
adc
shr
aam
shll
lods
push
inc
ss
rorl
pop
xchg
jl
add
adc
lds
pop
pop
sub
dec
jle
mov
sub
nop
mov
test
loop
lds
ljmp
mov
add
sahf
jno
jne
xchg
out
xchg
mov
addr16
lret
lods
xorb
xchg
in
jge
mov
add
scas
mov
pop
jo
fsts
lods
and
and
lods
cmp
mov
mov
cmp
mov
pop
insb
ss
dec
mov
sub
hlt
lcall
js
jae
ss
loope
into
fcomi
adc
add
jb
mov
fsubrs
sub
push
scas
rcrb
cmp
mov
mov
xchg
orl
cmc
lods
pushf
int3
and
add
dec
adc
test
jo
xor
sbb
push
inc
lahf
xchg
ja
push
scas
push
lret
in
push
fidivl
fs
xchg
mov
lock
test
xor
mov
mov
cltd
lret
mov
mov
xchg
rclb
cmp
test
mov
movsl
outsb
aad
call
insl
inc
movsl
mov
or
mov
push
loopne
sbb
in
data16
xor
jecxz
or
es
lahf
bnd
outsl
lret
arpl
adc
mov
xchg
test
pop
add
jnp
dec
cltd
mov
cld
sbb
mov
lcall
lcall
mov
cmpsb
lods
int
mov
mov
jge
mov
add
xchg
jecxz
cmp
jmp
sahf
popa
iret
pop
cs
cld
xchg
pushf
pop
loop
push
inc
xor
les
std
jecxz
and
int3
fistpll
mov
xor
int3
call
xchg
xchg
scas
pop
roll
mov
or
push
xchg
jns
mov
pushl
bound
movsl
mov
fimull
es
and
mov
xor
rorb
mov
shlb
ja
mov
jmp
dec
pop
cmc
scas
lds
mov
or
jge
loop
push
jae
mov
lret
aam
push
pop
or
xchg
test
jl
jp
cmp
sub
cmp
popf
adc
das
bound
js
xchg
and
repnz
or
mov
mov
cmp
xchg
out
iret
cltd
sbb
jp
leave
adc
xor
cmp
xchg
ss
sti
std
add
inc
cmpsb
push
pushf
pop
dec
inc
pop
popa
mov
jle
js
xor
sar
jle
test
inc
stos
seto
idivb
pop
add
ja
cld
xchg
add
mov
adc
sbb
add
dec
leave
mov
js
jge
push
and
mov
inc
dec
lret
in
insl
jmp
rclb
jp
movsb
jbe
sub
daa
aam
jp
std
push
sbbb
lret
fldenv
push
jno
int
sub
test
mov
sub
xchg
fldt
loopne
add
pusha
call
aad
jg
inc
push
dec
mov
aas
divl
fnsave
xlat
dec
push
ds
gs
pop
and
cltd
cmp
xor
dec
dec
repz
push
or
pop
in
cmpsl
loope
pop
mov
or
loop
xor
sbbb
repnz
fcomps
filds
sbb
fcoml
cltd
pop
xor
out
sub
inc
xor
ret
daa
jmp
out
sbb
mov
cmpsb
data16
xorb
imul
gs
xchg
mov
jbe
cmpsl
jnp
addb
mov
inc
push
mov
push
and
push
sub
sub
add
mov
call
data16
andb
insl
daa
adc
sbb
and
lahf
mov
sub
test
and
mov
mov
jb
mov
ds
nop
add
mov
mulb
jae
out
sbb
out
cmp
push
cmpsl
cwtl
inc
pop
or
cmp
inc
clc
cmp
jecxz
fmuls
push
mov
xchg
xchg
add
iret
ret
stos
daa
pushl
call
jecxz
lahf
roll
xor
rol
pop
jecxz
add
dec
aad
cmpsb
addr16
or
mov
jp
icebp
jg
dec
push
paddusb
out
sbb
xor
out
xchg
mov
aam
and
arpl
and
js
lcall
fists
dec
imul
push
les
adc
aas
inc
in
adc
ljmp
fsubr
int
out
fnstenv
cmp
sub
mov
xchg
jg
je
iret
insb
jecxz
ss
mov
movsb
xlat
lcall
stos
and
adc
and
add
mov
adc
shrb
and
pusha
pop
inc
insb
enter
adc
push
pop
insb
dec
mov
push
sbb
lds
imul
mov
aaa
mov
movsb
daa
ds
repnz
loopne
jmp
mov
xchg
adc
sbb
stos
lds
mov
sub
mov
mov
cs
jle
jae
hlt
test
mov
sub
stos
popf
loopne
std
mov
cli
or
out
cs
jp
cmp
xchg
shrl
and
push
sbb
xchg
jbe
lock
ljmp
mov
sub
dec
idivb
inc
lock
or
cmc
cmp
mov
pop
mov
imul
mulb
mov
addr16
dec
in
in
mov
xor
out
cld
repz
iret
inc
mov
push
jns
iret
pushf
call
jbe
lret
dec
aam
rorb
push
faddl
stos
inc
push
adc
fdivrs
call
out
add
jae
sahf
xchg
sahf
mov
xor
movsl
lcall
xchg
ds
es
mov
in
jmp
pop
pop
cmp
dec
adc
jbe
fcoml
pop
cli
fbstp
ret
push
xchg
jne
mov
fildl
stos
js
push
es
jge
lret
jno
mov
dec
pushf
xchg
cmp
scas
sbb
mov
lret
popa
in
add
shl
decb
add
dec
sub
in
inc
inc
jb
push
scas
adc
inc
jb
push
jbe
insl
xor
push
jne
or
in
in
xchg
cmp
dec
leave
push
sahf
out
cmc
cltd
mov
jl
add
lods
jae
sbb
jo
in
pusha
xor
pop
xchg
pop
add
fs
clc
lods
fidivrs
push
pop
ret
mov
mov
ja
xchg
int3
pop
pop
add
jle
mov
adc
mov
insb
and
sub
icebp
mov
inc
in
bound
push
push
mov
incl
out
int
xorl
loop
rcr
jl
dec
or
loope
shrl
and
adc
and
and
mov
and
js
stc
in
and
add
dec
jae,pt
in
push
xlat
adc
push
lods
ja
arpl
repz
push
enter
test
inc
clc
mov
mov
pop
outsl
daa
jmp
adc
sbb
dec
and
cs
jmp
insl
inc
dec
and
xchg
push
push
shrl
pushf
in
mov
cld
dec
cmp
mov
push
pop
xor
adc
push
sbb
mov
clc
jl,pt
dec
cltd
mov
cltd
int
dec
loop
aad
cmp
inc
xor
jecxz
dec
je
lods
xchg
movsl
pop
aas
add
xchg
sub
and
mov
into
pop
mov
jg
jo
imul
fs
add
insl
int3
xor
and
sub
push
stos
dec
pop
adc
push
mov
mov
rclb
and
dec
adc
pop
mov
cmp
mov
cmp
subb
push
fucom
mov
test
mov
imul
aaa
out
call
push
adc
mov
or
jp
push
sti
in
cwtl
jmp
sub
aad
mov
fsts
add
adc
and
fidivs
push
int
push
mov
sub
push
xchg
imul
jbe
jbe
shll
pop
adc
psrlw
jne
xor
push
outsl
and
push
inc
cmpsl
xchg
pop
push
ja
arpl
imul
fwait
push
cs
add
sti
imul
sub
or
stos
in
lahf
int3
notb
dec
push
arpl
fwait
push
imul
cmp
in
xlat
xchg
jae
pop
mov
shrb
mov
and
or
push
arpl
push
jmp
mov
jns
js
das
and
sub
pop
pop
cltd
loop
add
shll
scas
mov
loop
rclb
cmpsl
bound
loope
sbb
hlt
jl
fsubl
xchg
adc
testb
data16
imul
jle
outsb
push
ja
repnz
or
decl
sub
in
mov
mov
bound
xchg
sub
mov
arpl
xchg
pop
xor
jns
insb
jo
fs
outsb
inc
notb
mov
cmp
add
hlt
daa
shll
bound
inc
push
sub
movsl
xor
repz
shr
adc
clc
aas
repz
xchg
mov
adc
dec
pop
fists
push
xor
mov
insl
montmul
cmpsb
inc
jb
adc
cmpb
shlb
adc
sbb
fwait
popa
hlt
xchg
mov
and
inc
jle
pusha
sti
insl
or
mov
pop
and
pop
inc
ror
xchg
xchg
xlat
mov
dec
es
and
dec
jmp
es
xchg
dec
mov
mov
jnp
cli
mov
xor
fnstcw
test
into
mov
ja
loop
cmp
icebp
ja
push
ss
stc
mov
rcll
jo
adc
jno
fsubrl
aas
jmp
fstpl
add
orl
repnz
rcll
scas
stos
fnstsw
mov
pop
int3
pop
js
mov
xchg
out
or
daa
pop
in
push
mov
adc
pop
cmp
lret
out
jne
pop
or
bound
subb
fmuls
push
cmpsb
outsb
lret
addb
mov
lret
repnz
outsb
sbb
sti
mov
xchg
scas
lret
mov
pop
int3
iret
xchg
cltd
shrb
out
mov
xor
sub
cmp
sbb
out
xor
loop
aaa
xchg
imul
jp
mov
adc
pop
fstps
popa
pusha
int3
out
cli
jecxz
add
mov
loope
sub
je
test
jns
sbb
mov
mov
fs
mov
mov
repz
mov
mov
and
cmpsl
inc
ficompl
fcmovu
mov
pop
pop
inc
shlb
ss
movsl
push
ljmp
int3
jg
mov
jmp
dec
data16
icebp
fdivrs
and
push
sub
inc
data16
xor
in
xchg
fcomi
rolb
xchg
es
jl
pop
fildll
loopne
into
adc
sbb
xor
aas
pop
inc
nop
jle
shll
outsl
insl
dec
dec
sub
mov
cmp
daa
and
push
roll
ret
repz
ljmp
out
sbb
aad
and
mov
xchg
enter
rcr
jae
dec
or
mov
out
ljmp
dec
fnstsw
mov
jecxz
xchg
mov
xor
rcrb
out
out
or
enter
xchg
adc
ss
in
test
inc
ljmp
cmp
mull
imul
cli
cmpsb
nop
adc
mov
and
add
addb
push
mov
mull
ljmp
mov
iret
mull
mov
jle
stos
mov
mov
pop
cmpsb
mov
dec
fcompl
and
sbb
cmp
loope
fidivrl
cli
xchg
sbb
aaa
push
xor
mov
fs
pop
pusha
jp
int
sub
cli
mov
mov
jp
or
stc
jge
movsb
ret
push
inc
jns
push
mov
adc
mov
in
nop
ret
lcall
push
mov
push
mov
push
sbb
add
sub
dec
in
jmp
dec
test
dec
sub
call
out
or
xor
adc
xor
inc
scas
sub
cld
add
or
cmp
loopne
insl
and
pop
add
dec
in
push
shl
sahf
pop
pop
ja
in
shll
loop
neg
xchg
sbb
out
add
aas
mov
sub
out
cmc
xchg
dec
lods
pop
adc
dec
jmp
insl
sub
push
rep
pop
or
sahf
inc
daa
stos
cmp
push
aam
pop
cwtl
rolb
cs
push
push
jg
rorb
mov
cli
inc
mov
mov
rorb
sub
stc
stos
jne
imull
ficoml
mov
push
and
xchg
lret
dec
inc
mov
inc
xchg
aam
bnd
out
push
shll
mov
dec
cltd
aam
push
xchg
fcoml
lock
xchg
xchg
sarl
inc
stc
outsb
icebp
stos
daa
inc
imul
sbb
or
test
lock
push
scas
aas
jns
adc
mov
subl
jg
ss
sub
fbld
out
push
out
jmp
daa
add
inc
mov
cmp
mov
sbb
push
xchg
loopne
jg
add
clc
mov
test
fadd
mov
dec
or
jmp
scas
mov
add
dec
add
test
jno
sub
inc
bnd
loopne
cwtd
int3
pop
dec
mov
sub
repnz
xchg
cmc
test
mov
imull
enter
xor
in
mov
sahf
sub
mov
cwtl
push
loopne
jne
xchg
push
jmp
std
pop
push
iret
loop
dec
cs
add
mov
push
jle
jno
ds
adc
xchg
jne
repz
ljmp
jbe
xor
push
xchg
cmp
mov
and
out
out
cltd
pop
adc
push
sbb
fisubl
xor
pop
xchg
pop
les
xchg
orb
fdiv
hlt
push
xor
cmpsl
adc
cli
hlt
add
scas
inc
pop
xchg
movsb
imul
cmp
dec
cmp
or
xor
leave
shrb
jle
lods
cmp
mov
xchg
and
sahf
jns
repnz
cld
sti
imul
sbb
dec
aad
in
mov
outsb
mov
xchg
push
mov
cli
ficoml
jb
ss
mov
std
jno
cmp
into
in
ja
in
popa
xor
jmp
dec
mov
xlat
es
and
ret
dec
es
and
xchg
jno
ljmp
cld
movsl
testl
movsb
pop
cmp
sti
xor
cmp
cmp
bound
pop
or
loop
out
dec
xor
and
insl
lret
mov
scas
inc
inc
lcall
lods
lods
loopne
and
mov
lods
jns
xchg
add
push
lahf
stos
mov
inc
xchg
test
fcom
ja
repz
push
jl
xor
jmp
sbb
lahf
or
mov
in
cmp
mov
pop
mov
jecxz
xchg
dec
mov
addl
push
dec
inc
inc
addr16
or
mov
jmp
xlat
into
xlat
add
cwtl
cmp
and
into
je
and
out
les
mov
dec
sub
incl
loopne
mov
xor
pop
jne
ficomps
push
out
lods
xor
jle
mov
fldl
and
lret
loope
mov
sub
mov
sarl
sub
loopne
aad
xchg
pusha
imul
push
jge
jne
in
push
int3
int3
dec
dec
pop
rcrw
ret
je
call
dec
jecxz
shll
call
insb
xorl
lret
push
call
push
ds
cmp
mov
sbb
add
adc
jnp
loopne
push
arpl
sti
push
aad
push
push
cltd
lods
hlt
stc
push
je
sbb
xor
jle
popa
xchg
sub
or
and
std
pop
cmp
hlt
pop
cld
cli
push
iret
cmpsl
add
pusha
in
or
out
loopne
insb
mov
rcr
icebp
and
dec
pop
jle
jl
sub
sar
jno
sbb
sub
addr16
mov
sub
cld
xchg
add
out
hlt
add
sub
mov
leave
mov
outsb
push
inc
jp
sub
xchg
cwtl
test
mov
push
xor
mov
shll
xor
fidivl
jecxz
xchg
enter
cltd
mov
ja
jmp
int3
and
rcll
out
leave
shufps
in
lret
pop
stc
inc
cmc
shll
xchg
outsl
jns
mov
mov
sti
xchg
in
mulb
test
xor
loope
lods
ret
sarl
xor
movsb
xchg
mov
xor
clc
pop
leave
fwait
push
add
inc
les
inc
inc
stos
inc
ret
or
push
movsb
xor
daa
mov
inc
rcll
push
lret
dec
pusha
push
lret
cmp
imul
repz
cmp
int3
pop
in
sub
cmp
popa
xchg
in
test
sub
sub
cmpsl
pop
cmp
sub
jo
jbe
fnstenv
mov
into
int3
or
jl
and
sbb
setnp
aam
ret
dec
xor
mov
aaa
lods
jge
push
hlt
mov
mov
dec
out
outsl
test
or
sbb
sbb
push
roll
enter
mov
movsl
sub
cmpsb
add
jl
in
sub
mov
cmp
xor
stos
or
je
cmp
jge
std
cmp
es
nop
cmp
out
daa
loope
sbb
xlat
jo
fnstcw
leave
ret
inc
int
xor
dec
adc
bound
lods
lods
cmp
sub
pop
pushf
pop
ss
scas
mov
test
xchg
xchg
mov
insl
div
jb
call
or
and
mov
or
outsl
sti
mov
movsb
mov
repnz
clc
ss
sub
cs
inc
xor
enter
cltd
popa
adc
inc
mov
adc
push
fcmove
js
jne
inc
mov
sub
jl
or
fsubs
push
dec
pop
inc
push
sbb
int3
inc
inc
push
mov
cmpsb
bound
dec
mov
insb
filds
mov
push
xchg
out
xchg
test
test
jmp
mov
push
stos
xchg
out
dec
shrb
jbe
jo
sub
je
pusha
mov
or
jo
pop
fisubrl
lods
mov
mov
mov
pop
mov
lea
addr16
push
xor
push
push
sti
loop
xor
jecxz
push
sti
fdivr
xchg
mov
in
cmp
neg
into
jne
or
loope
ja
stos
dec
cmp
lret
dec
jae
mov
les
out
mov
cmpsl
dec
lock
jbe
and
lods
xor
lret
movl
imul
or
daa
add
pushf
pop
in
cs
and
inc
sbb
push
test
inc
ds
imul
and
or
mov
movsb
and
mov
fistpll
xor
mov
test
jae
stc
adc
cmp
mov
lock
mov
mov
or
add
cwtl
and
aam
mov
aaa
in
or
imul
xor
ret
push
es
adc
push
or
call
movsl
xor
mov
sub
jge
xchg
push
cmp
add
mov
and
popf
movsl
jg
push
sub
or
sub
rorb
mov
inc
mov
xor
int
insl
loope
mov
cmp
cmpsl
push
and
sub
xor
pop
lods
out
aaa
pop
xchg
popf
aam
repz
cmc
mov
jge
movl
int3
lea
sbbb
push
push
mov
fcoms
adc
sub
mov
push
xchg
ret
dec
adc
and
jbe
push
out
dec
mov
mov
xor
pop
or
add
mov
push
push
jl
mov
mov
cmp
cmp
mov
rclw
out
xor
push
adc
fstps
dec
mov
cmp
mov
mov
mov
popa
fisubl
fistl
cs
xor
aaa
inc
and
sbb
out
cmpsb
sahf
add
call
sbb
inc
push
mov
add
ds
lds
and
lahf
pop
dec
fdivrs
sbb
shrb
mov
sbb
pop
sub
cmp
ss
popa
bound
fidivrs
pop
dec
sti
xchg
stos
mov
outsb
ja
icebp
and
lds
or
mov
push
dec
sti
divb
das
jbe
mov
xorl
sub
test
push
cmp
mov
and
fdivrs
stc
xor
xchg
popf
cmpsb
das
sub
sub
mov
pop
mov
bound
mov
and
enter
adc
and
mov
ret
in
sti
leave
push
sub
dec
xor
xor
mov
mov
pop
rcl
mov
adcb
push
cmc
jo
jp
dec
movsb
aas
mov
jb
repnz
shrb
lods
test
shl
xor
pop
jno
arpl
clc
hlt
xor
pop
or
pop
test
int
sub
repnz
or
xor
enter
scas
push
inc
fmull
nop
out
lods
and
mov
js
xlat
xor
je
movsb
cmp
mov
add
jb
fistpll
push
mov
jae
mov
ds
lea
cmp
bound
push
fwait
popa
xor
jbe
inc
les
stc
push
lahf
stc
das
adc
push
adc
sbb
cs
rclb
mov
or
rcl
xchg
hlt
dec
movl
ljmp
pop
dec
dec
sub
inc
imul
adc
mov
call
lds
sarl
push
or
into
addr16
add
xchg
sub
mov
fisubrs
sbb
mov
cmp
insb
mov
push
lret
cmp
rcll
subl
repz
ret
arpl
in
cmp
fimuls
cli
xchg
mov
ds
in
xor
repz
dec
ficoms
or
xor
inc
mov
mov
mov
push
repz
ja
aad
lret
ret
sub
jae
outsb
push
pop
bound
pop
and
xchg
cmp
repnz
jge
mov
insl
push
xor
xchg
fcompl
rcrl
mov
popf
or
push
addr16
rorl
push
adc
dec
or
xor
cmpsb
mov
es
js
inc
loopne
fldt
mov
fmuls
and
sbbl
pop
iret
fnsave
dec
icebp
fwait
add
loop
adc
hlt
cmc
add
adc
jno
inc
test
push
pop
mov
and
mov
inc
fsubrs
inc
ds
loopne
xchg
or
fcoms
shll
arpl
or
cli
cltd
sub
imul
lds
xchg
mov
insl
insb
and
mov
fidivrs
jno
push
sbb
mov
xlat
sub
mulb
ret
mov
ljmp
lds
cs
lret
dec
into
out
outsl
add
stos
insb
lret
cld
mov
or
ret
push
and
pop
pop
cltd
inc
popl
hlt
inc
xchg
or
arpl
out
xor
xlat
in
pop
mov
stc
xor
in
add
mov
cmpb
xor
test
pop
inc
or
and
insl
push
push
fcoml
lret
dec
iret
sbb
push
pop
sbb
xchg
scas
fldt
outsl
jle
negl
sarl
xchg
add
cld
sbb
push
dec
testb
inc
pop
stc
cmp
pop
test
sbb
rol
push
pop
pop
stos
stos
fistl
lahf
stos
pop
cmp
insb
or
inc
int3
scas
ljmp
je
lods
or
jle
fst
ja
push
aas
sub
rcl
hlt
add
and
xor
xor
daa
stc
mov
stos
stos
xor
xor
jp
mov
es
cmp
xchg
cmp
jge
scas
scas
pop
bound
mov
std
mov
sub
xchg
pop
outsb
mov
add
pusha
pop
cmp
pop
iret
inc
shl
sarb
imul
das
inc
jg
ljmp
cmp
insb
dec
stos
fidivs
fstpl
sbb
add
jg
mov
cld
mov
hlt
std
jg
pop
int
rcll
or
fs
sbb
rcrl
lods
orl
gs
fwait
mov
push
push
mov
enter
pop
sbb
add
subl
mov
popa
push
sub
and
repnz
jo
fadds
jo
pop
xor
xor
dec
cmp
pop
inc
inc
push
adc
rcrb
rolb
lds
imul
sub
mov
adc
repz
decl
jg
lds
sbb
pop
cmp
scas
repnz
shrl
sbb
popf
imul
ja
test
imul
es
mov
ret
arpl
push
cmpsb
daa
push
and
or
and
je
inc
xor
sub
data16
stc
loope
xchg
shrl
mov
and
mov
les
mov
movsl
iret
fsubl
inc
and
push
mov
popa
mov
sarb
int
and
jb
mov
pop
cwtl
mov
mov
xchg
push
mov
cmpsl
mov
xchg
fsts
inc
das
fsubrp
sti
dec
cmpsb
lret
mov
cld
lcall
dec
js
into
nop
cmpsb
clc
clc
push
mov
test
sbb
mov
insb
sti
repz
paddusb
mov
push
jne
enter
inc
scas
jo
add
pop
jle
cld
cmp
xor
add
fadds
mov
push
cld
in
push
pop
mov
dec
scas
or
sub
fs
roll
pop
push
adc
mov
mov
cmp
call
add
xor
fucomi
or
iret
jmp
andl
jl
sbb
cmp
fwait
in
icebp
in
aad
cmp
mov
pop
shll
inc
mull
fisttpll
xchg
mov
cld
imul
dec
jo
mov
xor
pushf
pop
jecxz
dec
pop
fsubrl
push
xor
int3
mov
jge
fsubl
mov
std
mov
cmp
mov
sbb
cwtl
push
adc
pop
cmp
mov
sub
cmp
mov
ss
jbe
rorb
mov
popf
sarb
call
insb
paddq
sbb
xlat
addb
stos
and
xor
imul
mov
pushf
jecxz
mov
mov
dec
xchg
or
push
pop
mov
clc
stos
int3
xchg
adc
sub
sub
cmp
insl
sarl
sub
arpl
or
imul
divb
push
sbb
dec
add
jo
mov
jecxz
aaa
mov
cmp
and
cmpsb
sub
enter
add
xlat
shr
and
ret
popa
xor
inc
lret
xchg
ljmp
adc
loop
ss
adc
fs
inc
leave
and
inc
push
cmp
call
sub
push
push
mov
cltd
imul
xor
addb
sub
fs
bnd
sbb
sub
pop
rcl
stos
scas
push
insb
push
sub
push
push
jno
shlb
push
add
dec
pushf
lcall
push
sbb
xor
icebp
js
shrb
sub
xchg
cmp
xor
xor
pushf
ss
cmp
mov
pop
mov
sahf
push
rclb
dec
fsubl
test
out
sbb
xchg
addb
or
add
mov
data16
les
fimull
pop
inc
add
jb
outsl
or
and
in
jae
sbb
or
rclb
call
hlt
stos
xchg
fnstsw
adc
mov
mov
mov
mov
cmp
sbb
and
inc
pop
jns
ret
dec
pop
shlb
iret
fsubl
xchg
adc
aad
aas
pop
ret
or
sub
mov
ja
or
loopne
bnd
dec
fstl
sbb
or
mov
leave
push
mov
sti
sbb
sahf
dec
or
es
add
mov
push
loope
into
sahf
int3
mulb
inc
sti
and
dec
sbb
aas
fs
imul
test
xchg
les
add
pop
inc
filds
mov
movsl
mov
mov
mov
lods
push
repnz
sti
dec
sub
popf
mov
shrb
sahf
mov
sub
inc
mov
lret
or
popf
divl
and
push
xor
je
lret
mov
ret
dec
inc
mov
test
jge
fnstsw
outsb
cs
enterw
bound
ret
xchg
jmp
xlat
fsub
jne
addr16
or
pop
jo
test
lea
bound
cmp
insl
out
or
xchg
or
jbe
inc
movsl
xchg
mov
je
mov
stos
add
icebp
addl
cwtl
push
mov
cmc
push
xchg
adc
aam
xor
testl
cli
mov
fldenv
leave
cmp
xchg
dec
lock
out
aam
jns
xor
push
sub
lea
mov
repnz
inc
lahf
int3
xchg
mov
xchg
cmpsb
ja
lea
mov
cmp
stos
fistps
mov
mov
cmp
shrl
lret
loope
mov
insb
push
iret
or
dec
in
cmp
mov
lahf
fsubp
lret
xchg
punpckhwd
in
scas
jbe
push
pop
push
adc
dec
clc
ds
dec
stc
das
jbe
jb
orl
out
mov
rcl
pusha
mov
arpl
loop
iret
jmp
lret
mov
popa
cmp
push
push
jg
mov
or
rcll
xor
sbb
mov
sbb
arpl
mov
pop
mov
ss
es
or
sub
in
xchg
clc
in
shll
and
mov
out
mov
lods
sbb
add
enter
or
iret
jp
fdivrl
or
sub
out
jecxz
mov
sbb
add
rcrb
hlt
mov
xchg
mov
test
into
sahf
jge
js
and
mov
dec
xchg
out
aad
and
nop
jae
fidivrs
daa
ret
incl
xchg
ljmp
lods
loope
pop
call
inc
xor
cmpb
addr16
inc
push
mov
push
dec
or
add
lahf
dec
fsubrs
popf
pop
adc
mov
jecxz
pop
pushf
fdivl
xlat
xorl
in
aas
sub
sahf
mov
push
cs
adc
test
xchg
dec
js
sub
jnp
lret
mov
data16
sub
adc
mov
or
hlt
jle
enter
mov
shll
and
inc
dec
out
push
pop
jg
imul
std
aas
mov
imul
pop
mov
push
dec
mov
loope
or
sub
sub
sarb
pop
data16
inc
cmp
mov
mov
pop
lock
pop
mov
jns
and
sti
add
stos
pop
inc
add
dec
xchg
xor
push
xchg
test
pop
jecxz
or
xchg
adc
insb
jmp
leave
insl
or
imul
jl
push
pop
icebp
xor
jb
push
aad
subb
mov
outsl
and
adc
lds
fwait
lds
pop
dec
lods
lret
jg
sbb
jo
fcomps
mov
sub
mov
mov
sbb
jl
xchg
xlat
daa
xchg
xchg
leave
inc
jne
ret
dec
mov
imul
add
mov
sub
mov
or
nop
cmp
or
pushf
xor
jne
inc
xlat
lods
stos
add
mov
insl
ret
hlt
iret
add
jb
divb
lods
mov
ret
mov
lock
or
dec
and
clc
mov
jmp
push
lret
fisttpll
outsl
add
loop
xor
push
push
lods
ret
jg
pop
insl
jmp
paddq
mov
fstl
js
dec
pop
test
lcall
fmuls
data16
xor
add
movsl
imul
mov
inc
daa
sub
pusha
inc
loop
and
sub
stos
cmp
cmpsl
incb
int
mov
js
fstpl
mov
daa
xchg
inc
int3
or
pop
xor
lcall
adc
hlt
daa
pop
push
jg
xchg
pop
adc
mov
add
iret
daa
leave
sbb
inc
lret
and
mov
fmull
jecxz
mov
hlt
pop
insl
mov
xor
call
lods
ja
fistl
sbb
jae
and
sahf
push
xor
int
cmp
xchg
xchg
sbb
call
and
add
rcrb
or
scas
dec
in
inc
lds
fdivrs
sbb
loope
enter
je
int3
aaa
add
icebp
fsubs
push
jne
mov
add
sbb
scas
sahf
filds
xchg
pushf
scas
mulps
lds
and
xchg
clc
pop
mov
pop
lds
out
mov
inc
dec
jae
mov
shll
in
jp
ds
and
jmp
add
lret
enter
decb
in
push
das
adc
adc
or
pop
mov
xlat
jno
pop
fdivrs
xlat
nop
mov
mov
or
jnp
sbb
les
lds
pop
sub
jb
test
dec
jns
push
adc
and
push
adc
daa
mov
mov
adc
pushf
mov
xor
dec
jns
pop
pop
push
mov
xchg
push
mov
pop
faddl
inc
insl
xchg
sub
xchg
sub
adcb
fdivs
rorb
cli
sub
int
shll
mov
and
xchg
sbb
popa
int3
xor
mov
xorl
pop
clc
jl
icebp
pop
sub
push
mov
xchg
lods
mov
xor
mov
lcall
rclb
dec
push
aam
mov
pop
fstpl
mov
les
mov
dec
jb
pop
push
cld
enter
cmc
test
add
in
add
cmp
out
leave
scas
insb
or
jmp
cmp
lcall
js
jecxz
repnz
cmp
mov
insw
xchg
push
xchg
sbb
and
jae
inc
push
jmp
xchg
add
loopne
mov
sbb
sti
jne
call
jbe
mov
subb
mov
repnz
int3
and
lahf
outsl
fs
pop
aad
mov
int
mov
inc
ss
jecxz
fwait
clc
imul
enter
cmp
ja
xor
sarb
nop
test
fwait
xchg
jns
daa
ss
aad
out
lcall
ficompl
test
mov
outsl
xchg
mov
push
sbb
in
mov
add
jne
push
sbb
mov
pop
rcll
xorl
push
dec
mov
outsb
jns
dec
xorb
jne
test
test
out
and
push
cmp
mov
leave
mov
push
pop
pusha
ret
sbb
jns
inc
popf
dec
sub
gs
fs
imul
stos
cmp
xlat
and
or
push
adc
js
adc
nop
repnz
faddp
adc
int3
xchg
xor
inc
mov
push
sub
cmp
mov
push
mov
lods
pop
into
mov
fwait
push
adc
and
jns
sub
aas
pushf
icebp
inc
jnp
mov
lcall
push
jo
and
or
or
push
mov
pause
mov
cmp
mov
or
or
push
movsl
sbb
xchg
lahf
pop
sahf
mov
sarl
bound
xchg
pushf
cmp
pop
out
insl
inc
pop
and
mov
mov
cmpsl
adc
inc
arpl
xchg
bound
cli
jl
rcr
movsb
dec
repz
push
ljmp
sbb
pop
dec
push
push
das
outsb
stos
add
or
int
add
pop
push
orb
push
push
push
cmp
into
adc
dec
adc
jmp
push
xlat
lock
mov
xchg
icebp
inc
add
mov
adc
lahf
xor
jp
hlt
mov
cltd
leave
lret
pop
js
mov
push
ret
dec
inc
cmp
add
repnz
movb
sbbl
nop
mov
add
sub
push
ja
xchg
dec
and
out
mov
fisubl
daa
add
jb
jmp
xor
scas
cmpsb
mov
bound
cmp
or
stos
iret
jb
arpl
clc
out
push
push
mov
int3
scas
rep
fidivrl
mov
sub
lahf
dec
inc
addr16
scas
xchg
js
mov
xor
push
inc
aam
sub
das
movsl
push
cmp
xlat
push
ficoms
les
pusha
cmc
mov
add
jecxz
lock
push
fdivrp
adc
in
dec
subb
jmp
hlt
data16
inc
pop
addl
jl
fdiv
fmul
js
lds
xchg
mov
xchg
or
mov
stc
fnsave
adc
fstps
inc
xor
scas
enter
xlat
outsb
andl
and
xorl
loop
rorl
jge
mov
jge
dec
and
mov
adc
lods
inc
cmp
cmp
mov
ret
jmp
inc
jmp
movsb
mov
scas
enter
outsb
adc
xor
xor
push
insb
mov
pop
mov
daa
enter
push
pop
push
sbb
sbb
dec
push
jbe
push
mov
in
fwait
es
pop
dec
xchg
shll
add
subb
xchg
cmpsb
rcl
gs
mov
and
jo
addr16
mov
cmp
cs
mov
pop
mov
jge
push
ss
cwtl
aas
decb
pop
inc
and
popf
jmp
shr
jl
outsl
add
jmp
mov
mov
je
mov
jne
xchg
icebp
mov
xchg
push
mov
xlat
adc
lods
xorb
imul
outsl
sub
push
insl
ficoml
pop
out
ret
sub
stos
shll
xchg
or
or
lea
xor
sub
adc
dec
push
dec
sub
in
push
arpl
movsl
push
nop
in
cmp
mov
insb
test
sahf
lahf
cmc
inc
jne
or
push
int
sti
cld
lret
and
fs
movsl
or
mov
adc
cltd
inc
popf
fdivrs
mov
and
push
mov
cmpsl
addr16
decb
scas
lods
xor
cs
mov
mov
cmp
jg
xchg
pushf
sbb
jbe
test
cs
std
rcl
dec
or
sub
jge
mov
or
mov
cmp
jo
add
adc
out
outsb
jae
test
pushf
jb
cmp
hlt
mov
mov
or
inc
push
mov
pop
mov
mov
inc
adc
js
jbe
popf
xor
shl
es
sub
ss
xchg
ret
xchg
dec
enter
pop
or
data16
cmpsb
int3
add
icebp
and
adc
scas
adc
sahf
push
mov
jae
jo
test
rol
or
dec
mov
das
js
jns
mov
imul
stc
add
fyl2x
bound
sbb
nop
dec
dec
xchg
imul
sub
into
push
ret
mov
or
js
sub
push
hlt
add
pop
daa
add
loop
mov
jecxz
cmc
mov
pop
pop
fldcw
popa
ja
lods
and
inc
test
mov
sub
ret
lods
leave
subb
hlt
in
and
fisttpl
leave
js
xchg
jle
mov
and
push
popa
into
inc
dec
mov
jle
push
jg
jl
insb
int
js
sbb
dec
sti
mov
mov
inc
aam
push
fcompl
pop
je
loope
sub
dec
cmp
push
shrl
sbb
cmpsl
mov
shlb
out
adc
push
and
push
xchg
inc
cmpsl
mov
inc
ret
fwait
in
jp
call
insl
xchg
and
adc
ret
xchg
out
nop
adc
cmp
xchg
into
cmp
jne
rcr
pop
push
iret
std
ror
arpl
inc
sbb
mov
jecxz
mov
adc
js
jnp
jmp
mov
dec
add
adc
mov
mov
sbb
ss
shlb
mov
inc
mov
push
inc
fstl
adc
out
sbb
ficoms
aad
pop
pop
jne
call
push
jo
jo
sbb
xor
sub
xchg
mov
sub
fsubrs
addr16
push
mov
fwait
jle
aad
push
mov
dec
enter
push
scas
in
or
rorl
outsl
imul
or
jle
push
vpaddw
repnz
mov
fstl
arpl
pop
sub
shlb
xchg
dec
pop
jae
in
pop
dec
jno
lahf
pop
cmp
jbe
shrb
xchg
dec
outsl
gs
in
out
test
aaa
add
outsl
sahf
adc
and
dec
sti
mov
loope
cmp
xor
rorb
jnp
mov
mov
mov
leave
cmpsb
mov
push
aaa
push
inc
push
inc
sub
mov
xchg
faddp
pop
repz
and
stos
or
lret
pop
jmp
test
push
rorl
sbb
shr
repnz
inc
std
rorl
adc
lds
cmp
jnp
mov
sub
iret
fbld
pop
std
xchg
xchg
sbb
fld
lahf
add
imulb
xor
into
insb
push
into
or
xor
aaa
imul
shlb
test
clc
dec
adc
in
shll
lahf
inc
stos
xor
mov
jecxz
mov
mov
jg
xchg
bound
dec
rorb
mov
mov
and
push
mov
clc
xchg
push
sub
or
sub
cmp
lret
js
rcrb
stc
or
clc
push
imul
mov
jae
scas
cmpsl
stos
dec
cld
xchg
loop
sub
cld
sub
test
fnstsw
and
fwait
push
out
fistps
mov
dec
inc
mov
lods
jno
cmp
jbe
xchg
orl
aam
xchg
pop
mov
out
push
mov
jae
fcoml
mov
inc
lahf
fwait
add
adc
xor
cmp
fwait
jo
mov
fisubs
mov
push
push
shrl
dec
ds
movsb
sub
xlat
dec
ror
scas
xlat
stos
data16
mov
add
cmp
jl
lret
xchg
cltd
in
mov
call
fistps
mov
add
sbbb
cli
les
xor
jns
mov
and
fisttps
adc
mov
or
subl
pop
sub
xchg
sub
pushf
pop
test
mov
mov
sub
dec
sbb
fwait
pop
mov
mov
push
pop
aad
sub
add
xchg
sbb
hlt
push
clc
mov
inc
movb
testl
test
lcall
or
mov
addl
cmp
xchg
nop
lds
mov
jecxz
xchg
lods
out
es
adc
cmp
cmp
je
and
stos
lea
jge
idivb
divb
fildll
mov
mov
lea
ja
mov
dec
cmpsb
in
xchg
fs
cmp
sbb
dec
rcll
xchg
add
dec
jbe
iret
cmp
push
and
mov
daa
fimull
add
mov
insb
stos
outsb
xchg
push
testb
cmpsb
es
daa
cli
mov
rolb
aas
imul
out
mov
mov
fdivrs
out
popf
pop
mov
mov
es
roll
cli
cmp
sub
pop
sub
push
xor
hlt
das
or
sub
je
mov
aam
jle
jo
mov
xor
adc
idivb
enter
mov
dec
xchg
cltd
xor
test
push
add
std
cs
stos
sub
push
cltd
cmpsb
insb
and
rcrb
xchg
int
cmpsb
cmp
mull
dec
mov
adc
enter
cmp
shrb
pop
pop
xchg
pop
inc
nop
les
rol
cmp
jbe
mov
push
outsl
test
jmp
mov
adc
jae
outsl
or
sub
or
push
jecxz
bound
jg
ret
xchg
pop
ljmp
sbb
lret
mov
cmp
sahf
punpckhwd
int
pop
out
push
das
push
pop
je
pop
jecxz
push
cmp
pop
dec
sahf
jmp
nop
fwait
movsb
or
fs
in
icebp
test
ret
and
imul
imul
lahf
fsubl
aad
addr16
or
add
iret
or
inc
testl
into
jmp
das
mov
push
mov
xor
xchg
adc
in
outsl
dec
popa
cli
aaa
data16
push
pop
xchg
es
sub
pop
int
fwait
xchg
mov
lods
add
sub
test
es
scas
jecxz
loopne
bound
and
std
in
or
shrb
dec
dec
lcall
jle
jo
inc
roll
arpl
lods
dec
repnz
pop
subb
or
lahf
lds
movsb
mov
idivl
mov
push
pop
and
shll
call
xchg
in
cmpsl
cmp
ljmp
lret
dec
cmp
out
fcmove
mov
repz
dec
push
push
mov
int
shll
cmp
fildll
cmp
mov
leave
mov
push
lahf
inc
mov
rcrl
xchg
call
pusha
movsl
subl
push
xchg
sub
xlat
pop
movsl
fldt
xor
lods
je
mov
xor
lods
sarb
xchg
sbb
lcall
dec
ret
jb
sahf
inc
mov
adc
fcom
push
dec
clc
xor
sbb
xchg
xchg
push
fstpt
xchg
pop
repnz
mov
ret
mov
iret
sbb
xchg
test
lcall
add
mov
aaa
fists
mov
adc
test
lret
push
movsb
mov
pop
xchg
xchg
test
shrb
add
mov
cs
lahf
jbe
xor
pop
sbbb
cmp
fldz
rcrb
fs
test
dec
negb
mov
xchg
in
fs
mov
stos
cmp
iret
pop
fldenv
xlat
mov
loop
add
shrl
inc
ret
or
lods
dec
fsubs
add
push
xchg
popa
inc
mov
pop
sbb
cld
adc
int
dec
fnstenv
inc
lods
inc
push
test
cmp
jg
arpl
mov
and
int
or
dec
or
pop
repnz
pop
mov
lahf
pop
rcrb
scas
inc
xchg
loop
out
fwait
xorb
push
daa
cmpsl
loopne
icebp
inc
jle
inc
lock
sbb
out
push
lods
sbb
es
inc
lret
xor
mov
cmp
icebp
fwait
decb
mov
in
ds
cs
mov
inc
pushf
pop
call
mov
add
xchg
mov
cmp
loope
lcall
sub
cwtl
test
push
mov
test
mov
mov
or
pop
sub
mov
std
cmp
adc
dec
or
or
sbb
aam
sti
add
add
in
lret
jbe
loop
clc
cmc
mov
fidivrs
mov
jb
or
test
dec
lret
jge
sarl
cmp
test
aas
sub
out
mov
movsb
sbb
bound
cmpsb
fnsave
rcll
add
mov
dec
sahf
push
inc
hlt
outsb
dec
jne
imul
dec
mov
flds
out
or
test
xchg
outsl
mov
push
scas
sbb
pop
sub
sbbb
std
in
cmp
sub
shl
nop
or
mov
inc
mov
xchg
out
js
jb
add
and
addr16
and
lods
outsb
ds
aaa
cwtl
in
xor
sahf
pop
push
push
xchg
push
aam
pop
xchg
jl
imul
xchg
fldt
mov
ficoms
jl
xchg
lret
sbb
sub
jnp
mov
jo
sbb
mov
aaa
cmp
mov
push
cmp
subl
mov
mov
scas
cmp
or
cltd
fstpl
jl
xor
mov
jnp
sub
mov
dec
aaa
cs
daa
push
mov
ret
sbb
or
js
rclb
xor
notl
mov
push
mov
das
dec
idiv
loope
mov
push
xchg
adc
jecxz
and
in
inc
mov
inc
or
andb
xor
jo
mov
and
arpl
and
pop
js
das
fistpll
enter
test
sbb
adc
cld
sub
shrb
daa
loop
fwait
daa
lea
fucom
lods
inc
push
jmp
mov
push
loopne
fs
and
jg
push
shll
addr16
xchg
scas
outsb
dec
xor
or
fs
xchg
pop
orb
jge
fdivl
outsb
stc
insl
jo
aas
add
iret
sub
sbb
cmc
lcall
sub
jns
sti
repnz
repz
xchg
popf
sbb
outsb
lock
xchg
dec
faddl
jo
and
cmp
fcoml
in
lock
ficomps
das
and
dec
xchg
mov
lods
hlt
ret
sbb
cmp
das
out
xor
rcll
outsb
popf
dec
jl
inc
inc
sarb
loopne
push
inc
pop
jg
cs
cmp
imul
jns
push
add
daa
pop
pusha
cmp
inc
jb
push
add
jo
pop
mov
xchg
stos
jo
scas
fcomi
fwait
nop
aad
jo
mov
repnz
mov
lahf
pop
out
and
xlat
push
pop
xchg
sub
mov
xor
or
jb
mov
pop
test
adc
xchg
add
ljmp
dec
add
jno
pop
push
cmpsl
mov
dec
scas
stos
adc
push
cmpb
jno
dec
and
movntq
int3
mov
lock
adc
daa
adc
scas
cmp
roll
xchg
pop
xchg
ret
addr16
or
and
pop
xor
dec
mov
jmpw
rorl
add
jmp
push
cmp
mov
sbb
mov
dec
add
or
popf
sub
xlat
mov
inc
mov
out
pop
xchg
jo
ret
or
and
cli
jno
subb
out
sbb
push
stc
dec
push
sub
cli
movsl
test
jp
sub
test
int3
aaa
dec
fwait
mov
jno
dec
pop
sub
aas
lret
adc
mov
cmp
sbb
and
pop
das
imul
test
out
mov
jmp
sub
jbe
call
jae
xchg
popa
sbb
jne
in
xor
inc
mov
mov
imul
xor
js
mov
pop
das
mov
in
shll
imul
out
lcall
sarb
icebp
rcl
xchg
data16
pusha
add
cmp
xchg
lock
cmpl
loopne
add
arpl
cmp
cmp
movsl
and
lcall
or
mov
int
cmp
orl
add
inc
xchg
test
js
cli
xor
loop
pop
and
xchg
std
jbe
push
jecxz
adc
inc
adc
push
lock
ja
cmp
ss
dec
ficoml
lods
mov
mov
fiadds
adc
xchg
hlt
insl
fisubrs
mov
inc
aas
xchg
clc
and
sub
push
push
cmc
outsb
loop
mov
cltd
mov
push
mov
data16
push
rcll
in
pushf
clc
loope
mov
push
scas
cltd
push
in
cwtl
and
cli
jno
push
mov
repz
sarb
inc
aad
add
jmp
or
clc
dec
xchg
mov
mov
jp
mov
sub
in
icebp
sub
popf
and
and
sbb
outsb
cltd
jmp
mov
add
mov
cmp
jbe
leave
mov
xchg
sbbb
inc
push
das
mov
pop
out
mov
cmpsb
call
popf
dec
stc
sahf
mov
xchg
inc
scas
outsb
addr16
sbb
xor
cmpsl
std
jbe
jmp
sahf
and
lret
cmpsb
pop
pop
cld
add
lahf
sbb
dec
sub
dec
clc
mov
fcmovne
lret
test
mov
fisubrs
xor
push
lret
sub
or
test
stos
xor
jns
pushf
sub
aad
pop
aas
ljmp
push
mov
mov
fs
lahf
test
or
adc
dec
aam
loopne
movlps
lret
adcb
jecxz
sahf
xor
daa
in
add
in
aas
lea
fisubrl
dec
lds
mov
repz
lahf
mov
andb
adc
fstpl
andl
jnp
in
shll
or
sub
ret
clc
inc
andl
stc
xchg
roll
or
fwait
jmp
ret
xor
xchg
or
push
jecxz
lods
sbb
dec
sbb
xor
mov
popl
leave
arpl
mov
aas
stc
xchg
lret
xor
xchg
fsubs
dec
outsb
imul
incb
rcl
out
push
xchg
hlt
add
dec
cld
xchg
mov
in
ret
adc
jp
daa
roll
push
mov
push
or
push
pop
popf
mov
xchg
iret
fldt
outsl
sbb
lea
stc
push
cmp
push
out
or
aas
xor
cmp
pop
lret
icebp
ret
sub
sub
or
pop
xlat
pushf
dec
xchg
add
adc
adc
jbe
lahf
jl
dec
mov
push
insb
ret
adc
shrb
adc
add
mov
pop
dec
mov
stos
jne
xchg
jo
inc
xor
add
mov
lahf
xchg
js
in
lea
fucomi
scas
mov
subl
push
pushf
mov
pop
js
rcrl
popa
aaa
inc
es
arpl
fdivs
ds
xchg
sbb
and
lret
jle
jbe
aad
adc
or
add
lock
stc
mov
jmp
lds
inc
xor
inc
sub
jno
push
mov
stos
imul
cli
pop
aaa
cs
dec
cmp
cmp
pusha
cmpsl
xchg
ljmp
mov
sbb
cmpsl
jo
mov
jb
xor
daa
inc
cmp
jg
sahf
stos
test
push
fidivrl
mov
gs
sbb
std
xchg
lods
es
or
inc
inc
cli
sub
cmp
or
ss
xor
movsb
aaa
pop
sahf
jp
js
and
mov
jne
xor
dec
loope
fwait
nop
mov
repnz
arpl
mov
add
xor
test
sub
enter
inc
aas
ss
mov
notl
push
or
jno
adc
sbb
ljmp
pushf
loopne
or
jno
pop
adc
sub
nop
mov
inc
sbb
lcall
rorb
aas
sahf
fstp
add
lahf
add
jns
add
in
lock
inc
mov
sbb
jne
dec
popa
cmp
mov
fstps
cli
jbe
dec
leave
lods
pop
lahf
mov
mov
pop
pop
out
inc
sbbb
jns
add
push
xlat
in
in
mov
sub
pushf
out
inc
xchg
mov
xchg
lret
or
shl
and
rorl
pop
cmp
push
sub
int
xor
imul
jg
push
jns
adc
popf
sbb
roll
movsl
inc
jle
and
adc
sub
adcl
fcomps
in
sbb
inc
jo
insl
out
loop
or
or
push
cmpsl
or
cmp
outsb
jle
pop
jmp
add
dec
jne
into
popa
andb
xor
lret
sub
aas
sub
jns
cmpb
jb
mov
mov
mov
int
cmpsb
sti
dec
pop
mov
mov
cwtl
pop
push
movsl
jno
loope
ljmp
or
les
and
push
es
cmp
jno
push
loope
sub
lods
mov
mov
jge
jge
xchg
dec
lret
xchg
and
lock
out
dec
jno
scas
mov
ficoml
dec
dec
pop
mov
out
aad
add
insl
scas
mov
xor
movsl
push
rep
xchg
sti
popa
das
iret
jbe
and
xlat
in
sahf
jnp
adc
and
adc
call
xlat
xchg
adc
fs
pop
fidivrs
es
hlt
add
test
aas
jmp
repz
pop
aad
push
ja
push
sub
sub
rorl
ret
add
mov
cwtl
mov
mov
movl
add
sub
in
mov
addl
ds
call
inc
add
cs
cs
cli
mov
push
lahf
pop
xchg
int
mov
jg
jecxz
and
aad
in
jmp
push
dec
mov
aaa
pop
lds
mov
push
mov
xor
push
cli
xor
or
lahf
lcall
cltd
adc
mov
fists
lahf
push
ret
inc
fisttps
sar
repz
adc
movsb
shlb
notb
xlat
popf
adc
dec
adc
inc
jmp
repnz
jb
adc
cmp
adc
lods
mov
inc
hlt
shrl
jle
fs
aad
or
loopne
fstpt
xor
cmpsl
scas
cli
xchg
aas
lods
aas
inc
lret
aad
xchg
lock
xor
popf
pop
push
dec
and
cmpsb
stc
cmpsb
or
orl
push
movsb
popw
and
or
fwait
lea
in
sbb
push
dec
mov
pop
sbb
imul
sub
out
in
sbb
sub
andb
je
or
xchg
pushf
aad
push
repz
fisubrs
test
mov
adc
inc
xchg
sbb
loope
push
insb
add
test
movb
mov
pop
jg
inc
adc
xor
cwtl
push
sbb
inc
cli
rcl
mov
mov
hlt
jmp
inc
xor
xchg
adc
adcb
xchg
rorl
insb
int3
fwait
outsl
outsb
pop
xadd
in
pop
enter
push
jns
lret
subb
in
dec
sbb
hlt
mov
pushf
inc
pop
cmc
outsl
push
mov
mov
aas
add
pop
div
sub
cs
inc
cmpsl
fwait
mov
push
inc
mov
mov
pop
xor
popf
sbb
sbb
insb
dec
stos
outsl
aaa
mov
dec
lods
xlat
inc
out
inc
mov
xor
pop
and
xchg
add
mov
dec
out
sub
add
or
push
nop
sar
lods
and
adc
mov
mov
das
mov
mov
not
dec
push
pusha
arpl
fs
movsb
xchg
icebp
lret
sub
lods
in
xchg
mov
cmpsb
scas
xchg
call
popf
xchg
in
adc
cmp
pop
xchg
inc
mov
fwait
out
ret
push
mov
push
mov
icebp
pop
pop
adc
fsub
fildl
xchg
ficoms
sub
and
sbb
mov
ljmp
test
iret
xchg
add
imul
iret
mov
xor
add
loop
mov
dec
and
out
rclb
add
lock
or
lahf
jnp
push
jmp
jb
call
mov
jle
dec
or
push
xor
fidivl
or
imul
dec
jo
or
out
mov
push
sub
mov
mov
xchg
push
movsl
xor
das
sub
cmp
aam
dec
add
arpl
cmp
in
out
clc
pusha
add
data16
and
push
loope
xchg
push
push
rcrl
and
ljmp
push
mov
mov
add
mov
cmpsl
and
test
sub
jl
ret
jg
rcll
repnz
ja
test
cmp
mov
jbe
xchg
aas
xchg
imull
stos
xor
xlat
mov
lea
and
dec
add
int3
outsl
and
fsubrl
sarb
adc
add
mov
cmpsl
lods
push
push
pushf
out
push
cmpsb
mov
sub
push
inc
mov
je
push
jno
xor
movsl
or
and
jmp
js
push
movsl
lods
scas
dec
xchg
mov
adc
mov
jae
shr
mov
repnz
xor
cmp
xor
add
mov
jno
jp
push
jmp
or
scas
or
sbb
lods
pop
adc
jae
loope
pop
call
std
jbe
call
imul
in
lcall
insb
cmpsl
div
or
dec
add
sbb
clc
repnz
xor
divb
std
mov
xor
movsl
shrl
mov
popa
shr
imul
rcrb
arpl
scas
lods
ret
mov
cwtl
es
mov
mov
xor
sahf
xchg
pop
mov
jp
test
in
jmp
stc
cli
mov
ja
cwtl
or
stc
das
int
cltd
ss
aas
fcmovu
pop
cmp
jle
push
pop
adcl
mov
sbb
mov
push
fsubs
ja
lcall
xlat
mov
sbb
xor
or
mov
xchg
xchg
pop
pop
dec
adc
mov
shlb
test
sbb
imul
xchg
or
mov
repz
push
into
mov
jbe
fcompl
out
mov
or
movsb
sub
or
lret
enter
sub
int
shrb
mov
loopne
cs
sub
and
pop
mov
negb
push
pop
lods
sub
xor
adc
mov
cmp
ds
repz
push
push
xor
lea
jbe
in
inc
or
xchg
mov
push
sahf
pop
mov
cmp
mov
push
inc
push
mov
mov
sbb
and
mov
fnstenv
repz
pop
mov
insl
jns
outsb
fisttps
jp
lock
adcb
pop
mov
ja
test
and
out
ret
mov
add
push
fwait
mov
sub
lahf
scas
jle
sub
in
mov
test
mull
or
mov
mov
adc
adc
add
out
mov
pop
sub
pop
add
out
fidivrs
or
sub
lahf
inc
push
dec
sub
pusha
lret
cmp
add
int3
push
sub
jg
jbe
cli
lret
pop
sahf
or
or
jp
dec
sub
or
jo
inc
mov
mov
ss
insl
addr16
mov
in
and
test
and
inc
out
add
xchg
cli
popl
push
loopne
sahf
push
adc
push
adc
adc
pushf
mov
adc
roll
sub
dec
inc
cwtl
shl
push
dec
lcall
xchg
mov
push
clc
xor
in
push
stos
mov
mov
pop
scas
rcrl
lret
and
iret
adc
movsb
outsb
mov
jns
jg
jl
fidivrs
xor
jle
adcl
mov
xor
iret
outsl
movsb
xor
std
pop
data16
pop
jns
adc
add
push
loopne
je
sub
pop
mov
mov
ljmp
repnz
or
aad
fadds
jmp
mov
sbb
xlat
mov
xor
mov
jp
aas
adc
add
sbb
scas
ss
push
cmpsl
push
fnstenv
pop
mov
in
popa
or
call
push
push
lret
les
cmp
clc
loope
aam
movsb
cmp
call
pop
mov
ss
ljmp
loop
aad
cmp
xor
lds
in
aad
pop
dec
or
or
xchg
mov
pop
stc
xchg
lds
mov
inc
mov
out
cmp
cs
dec
aaa
sbb
jge
loopne
inc
mov
sub
or
hlt
insb
sahf
shll
out
call
fists
faddl
sbb
and
sub
pop
lds
scas
bound
ds
arpl
in
sub
int
movsb
pop
mov
orb
enter
movsl
inc
inc
mull
or
ja
jg
xor
mov
adc
insl
xchg
cmp
and
dec
jle
sbb
insl
lods
pop
std
insl
jge
inc
mov
cmc
or
insb
pop
dec
pop
pop
jle
jecxz
add
std
cmc
andb
inc
pop
insb
adc
loope
scas
pop
iret
insb
enter
xchg
jl
and
and
pusha
mov
mov
aaa
pop
jnp
sbb
imul
pop
outsl
dec
cmp
cmpsb
mov
xlat
pop
out
iret
or
dec
scas
mov
in
lret
mov
mov
pusha
mov
divl
jmp
cmp
sbb
xor
mov
dec
pusha
add
and
mov
or
shrb
scas
push
in
ret
test
add
daa
lods
das
cmp
mov
in
gs
out
sub
ss
mov
xchg
int3
in
sub
jae
jbe
push
dec
pop
xchg
pop
jne
adc
jae
and
pop
jne
fcmovbe
push
jl
sub
cmpsl
shll
das
lret
cmpsl
cmpsb
fidivl
mov
and
mov
cmc
bound
jg
pusha
pop
jbe
xchg
cmp
mov
shl
cmpsl
shll
sbb
idiv
mov
or
fidivrl
jb
xchg
pop
rol
inc
push
cltd
xchg
lcall
mov
testb
add
xor
mov
stos
pusha
cltd
jne
pop
dec
jle
mov
push
mov
bound
pop
jbe
ljmp
inc
add
mov
hlt
xor
mov
cmpsl
or
cltd
lods
inc
test
cmp
lock
jns
popf
add
sub
inc
pop
pop
pusha
stos
dec
lods
lcall
pop
push
adcb
cmc
mov
fistpll
popa
fisubl
inc
xor
loop
lds
inc
inc
test
das
fsubs
outsb
int3
lock
xlat
sub
lret
and
inc
mov
jp
jge
dec
orb
mov
iret
fs
test
pop
into
mov
pop
and
lret
pop
mov
roll
fmulp
stos
loopne
test
add
fistpll
mov
mov
mov
push
ret
mov
inc
repnz
adc
add
pop
xchg
and
pop
shl
push
orb
and
mov
push
mov
icebp
enter
jae
jecxz
ja
mov
xchg
and
mov
shl
sti
repnz
mov
or
xlat
lods
imul
inc
js
push
push
mov
pop
aam
cmpsb
lahf
lret
pop
sahf
push
scas
dec
shrl
fcmovbe
lods
sbb
or
mov
shlb
mov
fisubrs
popf
stos
cltd
fdivrs
ljmp
test
xor
nop
adc
sarl
push
adc
xchg
sti
cmp
mov
fs
cmp
jg
orl
mov
jle
pop
insl
or
mov
mov
arpl
xchg
jmp
jle
mov
add
xchg
xor
mov
js
dec
insl
mov
nop
test
in
xchg
xor
into
out
lcall
ds
popa
fsubrl
in
fwait
xchg
sti
fadd
popf
dec
push
xor
adc
mov
push
fdiv
jl
fidivrl
pop
dec
xor
jl
jl
shlb
push
jnp
inc
insb
mov
outsb
cmp
jnp
mov
xchg
fwait
and
push
push
cli
out
aam
push
jg
mov
mov
pop
idivb
add
jb
sbb
sbb
in
cmc
insl
and
push
aaa
jecxz
sbbb
movsl
mov
mov
cmpsb
decb
and
mov
xchg
inc
mov
mov
jb
stc
int3
dec
lea
aas
push
push
mov
std
orl
fwait
mov
mov
mov
outsb
dec
fs
pusha
movsl
nop
cs
fstps
adc
das
pop
rcrl
xchg
pop
adc
cmc
hlt
loopne
stos
imul
jmp
jmp
push
adc
mov
sbb
dec
cmpsl
repnz
adc
adc
jo
xchg
sarb
push
dec
cltd
cmpsb
mov
jo
cmp
aaa
jmp
mov
in
xchg
xchg
into
daa
mov
push
in
mov
clc
jmp
jle
dec
push
decl
jle
and
dec
fnsave
mov
xor
imul
scas
inc
bswap
sahf
imul
xchg
adc
sbb
xor
sub
xchg
sub
repnz
mul
stc
lods
ljmp
cmc
mov
test
mov
cmp
jnp
xor
xor
xchg
nop
aas
push
and
imul
out
stos
add
rorb
or
fisubl
outsb
pop
add
lock
mov
inc
in
dec
es
mov
fisttpll
pop
fwait
sbb
mov
xchg
inc
push
mov
mov
psubb
sub
and
cld
mov
popl
mull
and
cmp
jg
jbe
fisubrs
mov
loop
jnp
sub
cmpsb
jns
leave
pop
mov
cld
mov
pop
mov
push
and
adc
jno
insl
add
mov
test
add
mov
test
popa
inc
xchg
pop
int
pop
and
cwtl
mov
pushf
ss
ficoml
jne
push
in
arpl
mov
cmc
fmull
cwtl
ret
inc
arpl
imul
xlat
ljmp
test
adc
push
into
or
xchg
mov
daa
mov
outsb
les
push
xor
dec
cli
dec
mov
jnp
push
push
mov
pop
pop
lds
mov
push
cmp
je
int3
xchg
rorl
stos
and
mov
std
mov
xor
inc
dec
push
dec
mov
sub
fcompl
insl
push
popf
ja
jno
add
sub
sub
iret
mov
jno
inc
popa
dec
push
inc
push
jmp
xor
sub
push
jo
outsb
xor
aaa
sub
ljmp
test
jo
les
adc
out
add
xor
mov
cmp
dec
sbb
inc
add
jp
sarb
sbb
packsswb
in
aad
adc
sbb
push
je
repz
adc
stos
sbb
ljmp
aas
cmp
xchg
incl
push
fmuls
iret
in
lock
mov
imul
adc
mov
xchg
lret
ljmp
and
jo
testb
adc
dec
mov
lret
cld
push
jae
cmp
mov
aad
mov
push
push
push
mov
inc
jmp
mov
and
loop
push
nop
cmp
les
xchg
cmp
lcall
hlt
mov
aaa
fsubrl
mov
cld
xor
mov
inc
aaa
dec
push
test
mov
mov
mov
cmpsb
in
add
outsl
pushf
movb
cli
add
push
sahf
sub
xor
cmp
xchg
mov
dec
mov
dec
sbb
sbb
das
cmpsl
lds
sub
add
add
imul
stos
in
xor
fnsave
inc
xchg
movsb
es
cmp
into
add
sbb
mov
lahf
dec
dec
shll
aam
insl
lcall
add
lea
bound
and
sub
add
es
bound
insb
push
mov
xor
adc
xor
or
scas
mov
push
or
adc
jno
movsb
in
inc
movsl
mov
ja
movsb
mov
jge
mov
fsubs
aas
lcall
mov
xchg
inc
imul
int3
xchg
cmp
cmp
addl
imul
movsl
jg
add
adc
insb
mov
mov
mov
outsb
int3
jle
cmp
in
mov
popa
jne
mov
test
xor
stc
lret
inc
fildl
int
or
dec
and
popf
dec
mov
cld
clc
mov
cmpsl
dec
push
gs
subb
test
popa
jecxz
and
lcall
push
inc
insb
test
les
cmp
test
dec
ds
daa
ja
xchg
xor
mov
nop
push
aaa
sbb
stos
gs
inc
mov
xchg
mov
adc
dec
lods
sbb
sbb
and
test
hlt
xor
fldl
cmp
mov
adcb
std
mov
adc
jb
ss
xlat
push
jns
or
fsubrs
xor
xor
xlat
fstpl
hlt
movsl
scas
int3
test
popa
pusha
xor
dec
and
adc
push
movsb
inc
in
sub
xor
mov
push
mov
fldt
lahf
mov
xchg
push
xchg
jns
push
sub
push
push
std
call
inc
loopne
xchg
inc
test
inc
mov
enter
cmpsb
das
mov
fstl
sbb
inc
mov
andl
add
mov
pop
push
stc
sbb
or
jmp
inc
inc
fadd
push
xchg
testl
pop
mov
nop
sub
iret
add
inc
sbb
in
xchg
or
shll
ret
xchg
dec
pop
sti
out
mov
pop
dec
dec
cmp
inc
pop
sbb
mov
sub
out
push
leave
cmp
fs
mov
cwtl
or
cmp
mov
insb
into
xlat
pushf
cli
adc
pop
mov
test
les
push
inc
pop
shl
adc
jo
movsl
mov
loop
sbb
ja
inc
repz
es
lea
andb
stos
fs
arpl
mov
out
je
fstl
mov
sbb
bound
sub
dec
int3
jg
stos
jo,pn
bound
sub
cmp
jne
pop
pop
or
aam
mov
push
add
ds
cli
les
mov
test
repz
adc
mov
mov
sub
div
in
stc
and
ret
mov
dec
xlat
and
mulb
jbe
mov
adc
mov
sub
das
pop
or
les
jbe
mov
aad
add
push
sbb
inc
jg
je
ret
dec
stc
mov
loop
dec
bnd
int
gs
xor
jle
or
push
insb
xchg
loop
lcall
adc
data16
pop
sub
dec
nop
in
pop
xor
out
adc
roll
mov
ret
jmp
cmpsb
ss
test
fiadds
mov
mov
mov
add
sbb
movsb
mov
or
dec
daa
xor
je
neg
aas
inc
in
test
xor
ret
push
shll
sub
sahf
jge
jg
xor
mov
mov
mov
ljmp
sbb
sub
adc
pop
ds
loop
ficomps
mov
dec
out
rcl
push
jno
inc
shrd
xor
into
fsqrt
sub
dec
pop
pop
xchg
mov
stos
cmpsb
pop
cmp
shlb
add
mov
jo
jmp
fnstcw
enter
dec
cs
pop
nop
arpl
jns
add
xchg
xor
push
ss
outsb
pop
xchg
lcall
push
das
stos
and
pop
mov
gs
daa
xchg
stos
addb
xor
out
shr
stc
daa
dec
and
pushf
mov
cwtl
test
test
into
pop
sahf
mov
dec
and
imul
outsl
lds
int3
sbb
cli
mov
xor
xor
add
js
xchg
mov
xor
insb
jg
adc
je
arpl
fwait
test
pop
jb
jae
mov
fimull
xlat
in
add
inc
fists
das
mov
pop
jmp
aam
insb
cmp
cmp
cmp
mov
inc
xchg
pop
jecxz
adc
inc
mov
jno
or
push
sbb
lret
in
push
lods
pop
das
out
xchg
out
xchg
xchg
test
outsb
outsb
pop
xor
sub
mov
aad
inc
or
mov
pusha
lcall
inc
decb
daa
in
sti
call
inc
inc
jge
shrb
jle
into
mov
mov
push
xor
scas
je
aaa
stc
subl
dec
lret
icebp
xchg
imul
push
cmpsb
out
int3
das
mov
mov
push
insb
stc
xor
adc
pushf
xlat
xchg
jg
fmuls
adc
sub
movsl
jb
into
and
fiaddl
push
xor
mov
rcl
or
sub
ds
mov
mov
out
popf
test
jnp
aas
mulb
mov
cmp
aam
clc
and
scas
rcrb
shll
adc
inc
popa
inc
cltd
mov
lods
inc
ja
cmp
push
pop
lods
jne
pop
loope
push
aas
imul
pop
sub
outsl
xchg
mov
pop
jnp
xor
lret
cmp
xchg
jnp
cli
clc
out
test
in
shl
push
pop
or
mov
mov
aad
insl
pop
ss
lea
imul
ljmp
out
aam
jns
out
xchg
push
lret
adc
testb
sti
sti
mov
and
mov
es
fstl
test
xor
into
mov
cmpl
push
or
fabs
stc
je
lock
ljmp
push
sub
push
mov
dec
or
jge
decl
xor
fcoml
add
sar
dec
pop
fmull
mov
xor
xor
mov
loope
inc
scas
mov
or
arpl
push
adc
inc
lock
pop
mov
jecxz
outsl
cli
xchg
and
gs
outsb
cwtl
test
inc
repnz
dec
mov
rcll
hlt
call
dec
cwtl
sbb
stos
inc
xchg
rclb
or
stos
jmp
sbbl
pop
insl
insb
pop
stos
stos
in
nop
das
sub
or
out
pop
inc
mov
cwtl
insb
jbe
jo
cmp
xchg
scas
or
arpl
push
shll
add
iret
cs
nop
ud1
imul
cs
das
out
mov
out
xchg
in
jge
popa
je
pushf
stos
mov
mov
xchg
push
int3
inc
jl
mov
es
mov
hlt
dec
fwait
aad
sbb
push
jo
daa
mov
ja
mov
fidivs
lods
out
gs
mov
arpl
xor
mov
push
int
mov
shll
push
add
pop
aas
icebp
xor
xchg
and
add
rol
loop
fiadds
sahf
bound
icebp
in
scas
and
ret
pop
and
stos
out
jle
mov
pop
cmpsb
mov
adc
or
xchg
adc
ds
lcall
push
jmp
adc
movsl
pop
fcomip
ret
xchg
inc
xlat
cmp
fistpll
in
xor
fnstenv
in
dec
xorb
dec
notl
ret
popf
and
xchg
lea
rorl
repz
dec
cmp
test
fdivrs
aad
cmp
loopne
xchg
mov
mov
push
aad
sahf
push
cmpsb
jb
inc
fcmovu
loopne
aad
rorb
stos
pop
insl
pop
add
js
cmp
mov
mov
xorl
jbe
mov
cmpsl
xor
int3
or
test
cmp
sbb
cmpsb
mov
pushf
jle
rorl
mov
les
fistl
sub
insl
xlat
mov
or
mov
xchg
mov
mov
cmp
adc
xor
add
pop
test
xchg
fsubrs
popa
leave
jg
adc
push
jg
es
cmp
fsubs
int3
jne
push
mov
fwait
xchg
and
push
sub
pop
xchg
sub
fcmovu
cmp
mov
lds
shl
inc
sbb
rclb
jle
add
cmpsb
sbb
stc
fucomi
sub
inc
sbb
adc
sbb
mov
pop
pop
push
addr16
and
data16
dec
inc
ja
cmp
ja
sar
add
or
push
es
iret
xlat
out
mov
cmc
inc
mov
jle
add
mov
xor
xchg
cmp
mov
sub
loopne
out
mov
cmp
outsl
daa
test
ret
mov
dec
sub
mov
xor
and
sbb
aas
or
sahf
shrb
adc
and
sub
arpl
cmpsb
cs
pop
xor
adc
xchg
sbb
fs
in
sbb
mov
hlt
fdivl
cmpl
pushl
or
jae
push
andl
or
outsl
jge
sub
rcrb
sub
mov
push
xor
xchg
push
mov
sub
fucomp
mov
es
push
sbb
clc
in
pusha
shlb
sub
mov
dec
int3
out
xchg
push
xchg
fldt
addb
sti
inc
cs
pop
mov
mov
lret
int3
adc
xor
fs
shlb
mov
cs
jo
sbb
aam
and
lret
pusha
push
sub
addr16
in
lcall
push
cmc
push
xor
mov
jns
pop
mov
jecxz
sub
cmp
dec
sbb
xchg
pop
xlat
xchg
mov
ljmp
pop
arpl
dec
cli
pop
xchg
jmp
add
mov
loope
mov
dec
mov
or
icebp
inc
xchg
loopne
jge
leave
inc
add
icebp
xchg
sbb
mov
push
out
mov
adc
les
stos
imul
mov
scas
mov
pop
loopw
jecxz
cltd
mov
pcmpgtd
jp
lock
pop
cmp
rcrb
adc
xor
outsl
and
test
aad
xor
mov
dec
ja
data16
inc
insl
dec
loopne
pop
dec
dec
fsubs
lret
add
fs
add
mov
in
in
inc
call
sub
mov
push
push
xchg
cmp
test
arpl
stos
scas
loop
cmpb
out
xchg
cmpsl
push
sbb
fwait
out
fcoml
jae
movb
stos
xchg
icebp
mov
mov
out
aas
rcrl
faddl
std
mov
shrb
mov
notb
pop
xor
cmpb
lds
imul
idiv
cmp
gs
mov
pop
sti
mov
mov
pop
mov
dec
dec
shrb
rorl
mov
test
add
add
iret
scas
repz
sub
outsl
pop
dec
cmp
fisubrl
ret
gs
push
test
roll
and
add
insb
mov
pop
sub
inc
xchg
subb
ds
pop
out
inc
jns
xlat
add
test
push
xchg
iret
jle
std
pop
test
mov
mov
divl
nop
mov
and
xchg
loope
mov
xchg
outsl
ret
xor
fisttps
pop
std
and
mull
pop
sti
int
adc
inc
xor
adc
sub
jp
imul
jmp
test
mov
in
pop
xchg
pop
add
sbb
ljmp
jg
xchg
push
fnstcw
or
adc
cltd
dec
mov
xchg
jnp
jecxz
mov
inc
in
xchg
adc
and
mov
mov
movsb
inc
sti
out
jne
jle
pop
lds
xchg
push
lea
lcall
das
cmc
int3
sub
and
ljmp
inc
daa
pcmpeqw
push
gs
mov
adc
lods
lds
mov
adc
aas
pop
adc
or
and
enter
push
sub
sbb
mov
mov
frndint
in
pop
outsb
and
daa
push
fisttpll
pop
loopne
out
rcrl
mov
xchg
jb
es
jo
mov
test
roll
enter
push
test
icebp
daa
xchg
test
fwait
push
add
jl
scas
inc
aaa
pushf
cmc
xchg
and
add
push
mov
adc
or
sbb
mov
in
in
mov
test
pop
xchg
pushf
jo
lock
pop
imul
aas
mov
jl
imul
or
test
cmp
dec
mov
rcrl
mov
leave
xor
pusha
mov
fldl
sub
adc
enter
out
mov
lods
jnp
cmp
cltd
jno
dec
fnstenv
insb
cmp
loope
pop
mov
mov
lds
mov
data16
fistps
test
pushf
dec
lds
cmp
xchg
mov
in
imul
int3
xchg
imul
cmp
aam
arpl
iret
sub
leave
cwtl
xlat
xchg
orb
loopne
fcmovu
sbb
jle
in
push
mov
mov
push
mov
ja
fwait
and
scas
push
sbb
loop
loope
mov
nop
icebp
sbbb
adc
and
jge
jp
sub
cmp
daa
or
pop
popa
mov
int3
int3
sbb
sbb
sbb
sbb
add
fmul
sub
ljmp
data16
jecxz
movsl
cmp
scas
xor
in
mov
dec
pop
in
arpl
aad
mov
xor
les
ror
notl
mov
dec
sarb
scas
mov
aad
jp
out
adc
outsb
and
test
lods
fsubl
add
cmp
movl
repnz
nop
jo
jl
xor
sti
mov
leave
push
leave
icebp
sub
or
cwtl
jne
imul
aad
mov
int
xchg
mov
xchg
sahf
out
notb
mov
js
loop
jle
or
push
icebp
xor
sbb
lret
repnz
jl
cmp
ret
mov
push
adc
out
jge
sbb
adc
lahf
ja
scas
jo
dec
mov
sub
push
dec
lret
mov
xchg
arpl
sbb
orb
je
mov
cld
rcrl
outsl
pop
pop
mov
and
fisubrs
cmp
mov
repnz
dec
scas
mov
fxch
aam
fwait
out
xchg
mov
nop
aad
push
insb
push
fsubp
sar
sub
in
sbb
inc
cmp
outsb
dec
mov
or
fcoml
cmc
xchg
test
sbb
aas
imul
and
push
jne
lret
pop
mov
mov
inc
cmpsb
pop
mov
imul
dec
jbe
or
pop
xchg
sbb
dec
insb
outsl
xchg
sub
les
insb
push
push
popf
cmp
cmpsb
data16
dec
add
jp
adc
jp
xchg
push
into
in
push
repz
cmp
lea
or
lahf
hlt
push
loop
pushf
inc
pop
sar
sub
mov
sub
bound
lar
aam
xchg
push
ret
enter
movsl
lods
push
adcb
mov
jno
cmpsl
adc
jecxz
sub
daa
and
mov
mov
filds
cmp
imul
mov
imulb
scas
or
loop
lret
or
xor
xor
cmp
lds
lock
popa
push
jnp
xchg
dec
and
mov
outsb
pop
cmc
adc
cmp
jb
xor
adc
cmp
lods
push
adc
inc
stos
leave
gs
xchg
adc
in
mov
pop
in
push
mov
ss
cmc
sbb
push
xor
aad
rorb
std
add
mov
inc
icebp
and
jle
adc
add
daa
stos
mov
and
sub
jbe
call
mov
sub
test
clc
xchg
adc
fldenv
mov
mov
dec
or
popa
and
mov
jnp
cltd
push
inc
mov
cli
push
and
test
pop
repz
or
in
ss
jno
dec
mov
inc
or
sti
xor
mov
mov
mov
fldenv
push
mov
call
jbe
mov
aam
adc
lret
pop
push
mov
or
sahf
ret
xchg
pop
sbb
xor
push
je
add
mov
xorl
lcall
out
mov
push
stos
mov
daa
fidivrl
mov
decb
dec
adc
push
addr16
and
sbb
jge
sbb
jae
bound
xorb
dec
cltd
jle
mov
and
adc
loop
jne
insl
pop
push
das
das
test
and
xchg
lds
ja
and
push
ret
in
scas
into
and
not
push
mov
xor
aas
adc
mov
push
mov
into
jmp
pop
and
rcll
xchg
mov
lods
adc
inc
pop
into
mov
cwtl
iret
cli
cmp
mov
pop
push
loop
mov
push
fstpt
jg
lahf
stos
iret
mov
push
test
ja
inc
fmuls
mov
cmp
and
inc
sahf
loope
aaa
cmc
xchg
iret
and
jge
mov
iret
into
xchg
inc
xor
jbe
push
adc
or
fmull
mov
xchg
xor
outsl
or
sub
jmp
ja
add
mov
outsb
xchg
mov
adc
sti
mov
es
pusha
or
iret
xchg
out
ret
mov
mov
scas
es
adc
aam
add
xorb
iret
imul
pop
fdivrl
insl
jb
xor
mov
adc
scas
add
scas
mov
out
xchg
add
sbb
or
or
mov
ret
lret
out
push
push
jmp
lahf
mov
xor
ljmp
cld
lcall
or
xlat
pop
adc
sbb
xor
adc
fildl
xor
cwtl
loope
jo
jg
cmp
out
xchg
lds
xor
test
push
pop
cltd
int3
xor
mov
cld
pushf
jge
cmpb
dec
into
mov
add
nop
addb
mov
das
int
jbe
cmp
into
and
sbb
xchg
add
addr16
into
gs
push
ss
mov
lods
inc
inc
aas
addr16
call
adc
jo
out
inc
fsubl
pop
in
jno
hlt
pop
mov
xchg
arpl
inc
push
gs
or
push
jmp
cmpsb
cltd
jp
dec
dec
ret
mov
sti
sbb
mov
xlat
stos
aas
mov
push
ja
inc
xchg
adc
test
mov
jno
std
or
xchg
sbb
shll
jecxz
jmp
mov
jbe
mov
mov
sbb
jns
push
sahf
jbe
sub
out
stos
movsl
pop
xor
or
jmp
imul
or
aas
in
xor
mov
sti
pop
xchg
scas
inc
sub
iret
mov
test
pop
ss
loop
mov
jnp
mov
repnz
jmp
sbb
jb
mov
mov
xor
int3
and
cwtl
jp
xor
pop
cmpsb
test
jo
sbb
push
orb
in
pusha
subb
xor
sti
mov
push
stc
or
insl
pop
xchg
cmp
or
dec
jnp
lods
data16
mov
fsts
push
jns
fyl2xp1
and
pop
sbb
push
pusha
stc
push
cld
cld
fistl
mov
add
test
dec
scas
dec
pop
rclb
push
in
popf
imulb
push
or
push
add
adc
dec
in
addr16
clc
rclb
or
outsb
stc
dec
stc
imulb
in
adc
xchg
push
lret
push
inc
sub
cmp
jg
lret
push
fmull
out
xor
lret
xchg
ds
idiv
shll
pop
dec
sbb
insl
fcmovb
pop
cmp
or
repz
add
xchg
idivb
shrb
andl
sarl
mov
cmp
rol
int
dec
push
repz
inc
mov
jmp
mov
sti
je
push
inc
fidivrl
mov
pop
imul
mov
xor
mov
cmc
icebp
push
lods
sbb
cwtl
ret
in
pop
pop
mov
push
pop
shll
xor
mov
imul
out
cmc
xchg
iret
outsb
pop
jb
sbb
xchg
jo
lcall
adc
xchg
pop
or
rol
les
movsl
mov
add
repnz
sub
jl
dec
xchg
sub
dec
xlat
sbb
cmp
insl
cld
sbb
jle
ficompl
into
sub
sub
push
cmpxchg
jecxz
mov
adc
push
aad
xor
out
adc
cmpsb
mov
mov
ret
movsb
pushf
jl
fwait
adc
loop
adc
cltd
sub
push
mov
clc
popa
or
mov
nop
pusha
imul
hlt
lds
ret
ljmp
adc
mov
lds
and
jle
rolb
sbb
xchg
inc
testl
or
pop
jg
movsb
fldl
jo
inc
sub
lods
pop
movsl
jmp
mov
ss
and
outsl
lds
sbb
data16
pop
loop
xchg
lods
mov
pop
pushf
cmpsl
and
pushf
rolb
mov
xchg
sahf
out
iret
sub
js
cmp
add
or
test
sub
xor
and
subl
jge
push
inc
lahf
cmp
and
sub
leave
jmp
rcl
jge
sbb
jle
adc
dec
cmp
mov
and
gs
sbb
jo
lret
sbb
pop
adc
loope
js
test
in
sbb
sub
xor
fisubs
stc
in
pop
sarb
test
lret
sub
cmpb
into
ret
inc
enter
shrb
sub
pop
rcl
cmc
jno
push
push
sti
and
mov
testl
jb
scas
cltd
stos
dec
pop
fstpl
and
add
jmp
adc
push
or
push
shl
jecxz
into
aad
int3
test
inc
fistpl
push
xor
outsb
dec
shrb
mov
out
js
jne
inc
data16
mov
mull
and
lods
popa
jl
mov
add
lret
pop
or
push
jg
jb
mov
popf
loopne
jae
movb
lahf
adc
push
std
inc
jmp
jae
pop
cli
ret
and
pop
aad
mov
and
adc
mov
fcompl
stos
nop
nop
cmp
or
lahf
loopne
shl
stos
sub
mov
cmpsw
dec
mov
outsl
imulb
and
fldenv
mov
mov
inc
sbb
dec
ficoms
roll
or
xchg
mov
xchg
pop
push
jg
imul
mov
in
inc
sub
mov
scas
jp
pop
jno
and
mov
in
enter
inc
push
negb
test
sbbl
cmovg
fiadds
mov
sub
scas
gs
cmp
jmp
std
push
rcl
test
pop
push
dec
xor
fcmovnu
das
cmpsl
xchg
sbb
inc
into
shl
sbbl
cmp
mov
pop
fwait
and
fiadds
cmp
sbb
out
and
ffreep
or
call
ja
xor
repnz
push
stos
jnp
xor
cmpsb
mov
push
push
or
jg
out
outsl
rolb
add
sbb
ja
lret
mov
sub
cmp
cmp
ret
pop
fdivl
mov
aam
es
sahf
sub
jmp
xchg
sub
jno
and
adc
dec
xor
and
fcoms
jbe
movsl
xchg
lock
es
or
or
shlb
add
unpcklps
repnz
mov
jbe
rorl
dec
cmp
lods
jo
sub
enter
sahf
mov
xor
fcoml
adc
loop
popa
dec
fprem
mov
decl
shlb
in
and
cmp
lahf
in
mov
ja
sbb
test
sbb
mov
imul
mov
ljmp
or
jb
and
mov
or
pop
iret
ficoml
gs
fldl
movsb
out
test
xor
loope
out
jmp
imul
lds
ds
int
push
in
scas
cli
jg
cld
mov
pusha
js
cmc
add
faddl
bnd
cmp
sbb
push
inc
cmpsb
movsb
inc
pop
scas
jg
rcrb
push
je
imul
mov
or
add
push
or
cmp
cmp
dec
inc
mov
icebp
or
ja
das
xchg
pop
adc
je
xchg
cwtl
ljmp
and
std
dec
outsb
push
inc
insl
mov
sti
cmpsl
mov
sbb
out
gs
aam
sub
stc
shr
mov
imul
inc
xchg
repnz
cmp
push
sbb
clc
pushf
jae
sbb
fstpl
idivl
repnz
adc
dec
xor
mov
mov
pop
or
ja
scas
jae
add
ret
ds
push
sbb
icebp
push
jmp
sbb
roll
pop
jmp
mov
iret
mov
repz
cmp
pop
popa
sarb
inc
mov
mov
xor
out
fwait
inc
movsb
andb
xor
hlt
pop
xor
aas
jmp
mov
popa
stc
outsl
rolb
fiadds
xor
int3
icebp
dec
add
jecxz
pop
mov
aas
out
sti
mov
cmpsb
in
movsb
fisttpll
andl
insl
test
hlt
sub
dec
outsl
xor
imul
dec
mov
push
sub
repz
lret
inc
or
cmp
sbb
lea
notb
push
test
out
cmp
mov
sahf
pushf
mov
fildl
test
cmp
stc
dec
shl
xor
fs
sbb
mov
sbb
stc
cmp
movsl
insb
push
fldz
in
aaa
push
sbbl
fdivl
daa
loopne
lahf
test
jmp
outsb
push
mov
mov
or
sbb
dec
popa
and
jmp
pop
sahf
lret
push
adc
daa
ja
xorl
and
inc
ds
and
enter
or
mov
in
aad
enter
sub
cmp
pop
div
sub
sub
push
and
ret
or
setp
ret
les
gs
out
iret
cmp
jnp
adc
adc
xchg
dec
adc
imull
jne
out
pop
xor
add
fs
jne
in
outsl
xchg
ds
sub
inc
or
test
lret
pop
stos
cmc
loopne,pt
nop
mov
cld
cmp
inc
jmp
ja
mov
inc
enter
and
xor
iret
xor
and
ja
mov
xor
out
ficomps
lret
add
mov
mov
cmpsb
scas
cwtl
add
aaa
std
jne
js
mov
pop
lds
push
out
adc
xor
sub
lret
cmc
call
mov
or
xchg
orb
cwtl
out
popf
rol
mov
jecxz
xor
cmc
and
xor
ret
rolb
lods
xchg
mov
je
test
nop
jno
sbb
scas
adc
cltd
notb
xor
push
mov
iret
xchg
push
cmp
jmp
cmpsb
repnz
lret
jp
sbb
or
je
pop
mov
dec
fdivrs
mov
mov
xchg
xor
ficomps
pop
enter
inc
add
adcb
xchg
out
add
stc
xchg
movsl
scas
add
add
in
and
loopne
inc
loope
dec
gs
les
and
xor
shl
cwtl
mov
outsl
add
sti
cli
and
jg
pop
pop
pop
jbe
lea
add
mov
mov
hlt
mov
imul
aad
adc
fcoms
pop
stc
aad
gs
mov
jne
pop
inc
pop
or
mov
lds
inc
ror
test
shll
sub
cmc
ja
test
popa
stos
sti
shl
sub
sbb
push
popa
sub
sub
lret
cmp
jl
xchg
mov
mov
fidivrl
repnz
aad
data16
xor
call
icebp
mov
jg
xchg
add
into
jb
push
pop
sub
imul
loop
lea
and
mov
adc
dec
mov
mov
xor
imul
add
sub
lock
add
add
into
sub
movsl
mov
sub
mov
jnp
mov
xchg
outsl
xchg
dec
stos
push
sbb
test
stc
jg
popf
fsubr
xlat
pop
mov
js
xor
inc
cmp
pop
xor
jmp
ja
scas
jbe
movsl
inc
xchg
push
ja
aam
xor
mov
inc
loopne
jecxz
cmpsl
push
xchg
int3
gs
push
hlt
or
test
in
or
cmp
pop
std
mov
xchg
adc
add
int3
lds
test
cmpsl
dec
pop
mov
bound
adc
lret
jae
test
mov
lret
xchg
cmp
and
push
gs
nop
push
sub
mov
adc
sbb
daa
cwtl
mov
outsl
out
push
test
lahf
mov
xchg
jmp
pusha
jp
lea
xor
cwtl
int3
movl
adc
jo
xchg
bound
or
out
call
imul
jg
sbb
ds
lahf
test
les
test
stos
or
sub
inc
movsb
sub
sub
pop
jge
dec
xor
fcoms
cwtl
sbb
jns
xchg
cmpsl
js
push
into
sbb
out
loop
jb
jecxz
icebp
or
sbb
cli
cmp
call
mov
aam
movsl
pop
mov
cli
das
arpl
fwait
jl
dec
clc
xchg
or
add
sub
push
xchg
add
add
bound
lock
fstpt
das
js
mov
lahf
sbb
in
fidivl
inc
sub
lahf
arpl
sbb
subl
push
inc
rorb
aaa
push
sub
into
mov
mov
dec
lock
xchg
shlb
inc
lret
gs
cltd
mov
clc
and
fwait
call
adc
cld
andb
xchg
jns
repz
lock
sub
pop
pop
push
add
jge
aad
push
and
out
xchg
cmp
iret
mov
shrl
inc
dec
lea
cmpsl
enter
ljmp
rol
sub
adc
lahf
std
pop
push
mov
test
push
mov
fwait
adc
in
in
mov
push
aaa
fisubrl
test
and
ja
out
lret
mov
push
mov
mov
mov
rclb
dec
pop
insb
call
in
aam
ss
ds
imul
pushf
cltd
or
or
jp
xchg
xor
cltd
sub
mov
clc
mov
pop
xor
push
sbb
pop
shlb
xor
adc
rcl
negl
xor
int
inc
sub
bound
jno,pn
test
jbe
stc
scas
fstps
and
mov
sub
repz
sbb
loope
xchg
das
push
ds
cmpsl
loop
inc
fsubr
jl
xor
xchg
enter
sub
inc
in
nop
test
test
or
mov
lret
mov
loop
neg
cmp
in
pop
sbb
fildl
sbb
lret
push
jns
xor
inc
or
fistps
loope
sbb
xchg
and
push
xchg
lods
xchg
xor
push
stc
frstor
pop
adc
ja
out
and
daa
insl
cmp
ret
dec
jg
sti
sub
jge
scas
pminsw
enter
lret
repnz
xchg
adc
pop
add
rcrb
pop
adcl
pop
fdivp
sbb
arpl
in
cmp
pop
popa
adc
pushf
mov
add
inc
inc
loopne
jmp
mov
lcall
inc
inc
jle
cmp
cmp
pop
mov
out
out
cmp
ljmp
sbb
push
sbb
adc
lds
lock
movsb
cmp
mov
pushf
mov
add
adc
push
gs
xor
dec
enter
jo
lock
lret
fs
cli
cmp
sub
add
adc
lock
and
push
jns
mov
adc
add
mov
or
scas
add
in
pop
add
adc
dec
lods
scas
shl
push
mov
shufps
xchg
addr16
test
stos
adc
push
in
cmp
data16
mov
cli
rcrb
jo
je
sub
not
xor
dec
lcall
and
add
adc
xchg
or
icebp
sbb
into
loop
xor
sbb
aas
stos
xor
pop
lods
dec
adc
ss
dec
push
add
jge
jb
inc
adc
mov
nop
cmp
fstp
adc
outsb
or
cmc
adcb
sub
in
bound
pop
xchg
cmp
or
out
sub
mov
xchg
mov
jp
imul
adc
out
dec
out
imulb
fnstsw
push
das
xor
mov
subl
inc
cltd
enter
cmc
jle
adc
js
fstpt
mov
lcall
or
scas
imul
adc
cmp
mov
jl
and
popa
test
push
sub
in
rolb
add
addr16
test
jo
in
push
mov
push
pop
push
pusha
fwait
jnp
les
dec
mov
cmc
sub
or
cmpl
shr
lock
xor
dec
xchg
jo
ss
jg
pop
xor
mov
push
nop
arpl
or
cmc
enter
out
add
mov
cld
sub
push
ds
xchg
mov
mov
or
dec
xchg
leave
scas
add
adc
push
jo
jae
push
sbb
daa
cmc
aas
movsl
arpl
stc
jecxz
adc
pop
sbb
or
andl
mov
mov
scas
push
push
popa
bnd
shrb
das
cmp
ss
mov
cltd
and
insl
lcall
jmp
pop
sahf
cmpsl
xchg
test
iret
jb
add
jecxz
mov
adc
es
je
push
sub
xchg
adc
mov
cmp
mov
daa
stos
dec
mov
fwait
mov
decl
cmp
mov
mov
fsub
std
or
lea
adc
nop
mov
mov
mov
cvtps2pd
dec
xor
ficoms
call
add
shrb
and
and
xchg
dec
push
loop
int
outsl
shll
jae
cwtl
xchg
je
lcall
mov
repz
addl
jge
sti
sbb
sbb
xor
scas
push
lret
fwait
inc
movsl
or
add
jno
mov
data16
fwait
xchg
push
rolb
xchg
pop
fisubrs
add
je
fists
rorb
scas
inc
lcall
jg
aam
add
push
addr16
pop
ja
or
adc
inc
stos
outsl
outsl
inc
mov
push
xchg
testl
sbb
push
jg
subb
data16
scas
inc
in
nop
inc
dec
pop
unpcklps
test
mov
push
stc
fisubl
pop
dec
sub
jb
es
inc
inc
add
testl
iret
cmp
ret
rcrl
scas
inc
fisubrs
ja
mov
fldl
rorb
mov
or
das
xchg
push
out
push
fmull
dec
sbb
xchg
ret
in
movsb
cmp
mov
sbb
xchg
and
fs
gs
lret
fs
lcall
push
xor
loope
mov
fsubrl
outsb
mov
sbb
dec
add
je
ret
cmp
fnsave
lahf
mov
ds
or
pop
push
push
xor
loop
inc
jae
jns
fsubrl
lods
repz
push
out
add
inc
cli
jae,pt
pushw
cmp
cmp
mov
inc
jb
shl
les
push
jmp
inc
js
stos
ds
lret
movsb
mov
push
jge
sub
imul
mov
sbb
cli
push
pop
adc
jo
jns
daa
shll
push
dec
arpl
sub
in
es
pop
adc
lea
jno
jmp
int3
imul
lcall
pop
test
mov
xchg
xchg
cmpsb
les
pop
cmc
xchg
inc
mov
mov
or
aas
inc
mov
fidivrl
mov
mov
repz
jmp
es
or
mov
adc
push
xchg
gs
inc
cld
xchg
sbb
andb
add
decb
mov
popa
dec
test
in
cmp
test
rorl
mov
hlt
ficomps
dec
pop
scas
imul
jl
mov
lret
and
push
pushf
ljmp
pop
cld
test
push
add
out
sub
movsl
inc
and
movsl
test
pop
cs
inc
int3
mov
inc
cmpsb
mov
mov
pusha
and
cmp
push
jnp
ja
jg
add
std
xchg
gs
lods
xor
enter
add
loopw
add
out
jge
mov
mov
imul
imul
jmp
xchg
mov
cmpsl
and
dec
cmp
lahf
das
jb
and
xchg
lods
and
aaa
push
cwtl
inc
insl
mov
in
xor
rorl
cmp
push
dec
decb
mov
sub
push
outsb
push
out
push
cmp
xchg
shl
in
addr16
or
and
adc
xor
sub
sbb
inc
imul
pop
pop
xor
jne
sub
or
leave
jecxz
ds
cwtl
pop
cmpl
mov
cmc
add
shll
mov
ret
xchg
sub
mov
mov
cmp
roll
enter
cmp
mov
imul
out
fisubrl
xchg
loop
arpl
push
in
shrb
rolw
jns
or
sub
das
jg
or
mov
xor
leave
cmp
loopne
outsl
les
jns
fldt
dec
mov
ret
fidivrl
jae
inc
mov
adc
cmpsl
rcrl
lahf
xchg
sbb
loope
sub
jnp
sbb
pop
and
int3
andb
int
aad
enter
adc
mov
inc
jae
mov
negb
inc
fwait
dec
loope
mov
jo
dec
push
je,pt
jae
mov
lret
sbb
int
inc
xor
dec
dec
int3
nop
mov
iret
xchg
das
rorb
rcl
xor
dec
push
aad
jl
push
ja
adc
testl
mov
or
jecxz
cmpsl
notl
mov
fadd
hlt
rcll
jo
mov
ds
mov
call
jmp
inc
inc
sbb
js
xchg
xchg
jmp
xchg
pop
and
cmpsb
jns
jnp
inc
dec
ds
mov
xchg
xchg
mov
ret
jns
cmp
out
ds
in
std
jae
sub
and
pusha
out
cmp
loop
cmpsb
repz
ret
popa
adc
popa
enter
lret
jmp
test
xchg
cmpsl
movsl
xchg
test
stos
inc
subb
iret
stc
in
mov
loop
fisttpl
add
mov
and
cmp
fwait
rclb
sbb
or
jb
mov
pop
adc
xor
icebp
sahf
mov
sub
mov
or
dec
test
or
jb
cmpsl
lret
scas
mov
faddl
ljmp
out
in
jo
adc
ljmp
movsl
bound
loope
ss
pop
xorl
sahf
in
cmp
adc
or
loopne
jp
sbbl
out
mov
add
xchg
xchg
dec
xchg
test
into
add
adc
out
int
fscale
add
jb
out
adcb
inc
hlt
adc
imul
notl
cmc
pop
rcr
dec
pusha
loopne
or
push
mov
cltd
mov
mov
mov
lahf
dec
mov
mov
xorl
mov
sub
cli
xor
in
jge
jo
sbb
push
add
push
out
aam
pop
cli
mov
add
lds
iret
lea
lods
stos
add
aaa
mov
cli
inc
ss
notb
jg
mov
pop
ret
and
repnz
and
cli
cmp
mov
shll
jmp
rcrl
xor
mov
push
int3
jmp
dec
aas
fildl
jne
xchg
adc
jl
sbb
sub
je
lahf
data16
sub
das
dec
cmp
push
daa
dec
push
adc
sbb
insl
stc
inc
pop
cwtl
scas
stos
add
sub
push
scas
jle
fwait
loopne
in
dec
xchg
addb
push
gs
gs
es
mov
inc
add
or
pusha
lret
xchg
mov
dec
jnp
fs
stc
sbb
mov
insb
sahf
pop
ret
ljmp
jmp
xchg
ljmp
lock
insb
xor
subb
sub
call
shrb
sub
fiadds
and
lret
inc
pop
mov
or
add
cmp
imul
popf
jne
ret
xchg
sbb
pop
jo
fists
adc
out
and
scas
into
lock
lea
xchg
lahf
or
mov
and
sbb
ds
shrl
inc
ret
mov
add
jge
or
cs
cld
push
sbb
mov
aaa
lcall
sub
lods
or
pop
clc
push
stos
jbe
sub
mov
cmpsl
mov
repnz
pusha
mov
int3
test
clc
add
xor
pop
mov
xor
sub
jne
pushf
pop
imul
loop
jecxz
aas
adcb
lcall
mov
jmp
pop
popa
jle
jle
je
adc
cmp
mov
imul
push
sub
andb
jns
arpl
push
pop
push
popf
das
notl
jmp
xor
and
push
cltd
aam
jns
pop
das
into
aaa
movzwl
xchg
cmp
xchg
mov
inc
push
sbb
mov
pushf
xor
mov
fidivrl
rorl
dec
nop
sarb
imull
jnp
jmp
lahf
insl
lret
sub
xchg
iret
mov
and
sbb
in
mov
ds
inc
mulb
pop
std
pop
fcomps
mov
sub
sbb
and
and
pop
sbb
pop
push
and
mov
sahf
mov
or
or
mov
inc
xchg
aaa
test
rcrl
rcl
pop
jg
insl
jns
cltd
imulb
fwait
pop
mov
fwait
roll
cltd
test
xchg
mov
inc
dec
adc
sbb
lods
orb
or
push
loop
mov
sbb
addr16
cmovno
mov
adc
add
mov
insl
out
pop
and
mov
sbb
sbb
push
or
adc
aas
and
dec
inc
jmp
sti
fnstcw
push
out
mov
insl
sub
dec
jae
scas
addps
ds
push
pop
mov
ljmp
adc
je
inc
jecxz
push
ljmp
movsl
sahf
pushf
sub
divb
sbb
cmp
test
sbb
add
sahf
mov
mov
aaa
or
dec
jbe
sbb
push
pop
mov
sbb
mov
int
sbb
xlat
fdivs
pop
mov
outsb
sahf
sbb
bound
mov
in
sahf
dec
jbe
mov
ror
outsb
pop
jl
lcall
xlat
shlb
cmove
rol
aaa
jecxz
loop
ja
outsb
dec
dec
imul
cmc
sub
sbb
out
lcall
mov
inc
and
mov
mov
or
sbb
js
jmp
inc
mov
leave
xor
in
and
inc
shll
ss
ret
movsl
cmp
jmp
mov
mov
cli
xorl
test
pop
int
mov
movsb
sbb
mov
outsb
pop
mov
add
fstl
mov
dec
pop
jno
cs
stos
inc
fisubrs
in
aad
push
jge
out
paddusb
pop
mov
and
aaa
sbb
fisttps
cmp
mov
dec
push
dec
ss
cs
adc
sti
mov
xchg
mov
mov
popa
inc
shl
pushw
mov
cwtl
in
pushf
xor
push
mov
sarl
fimull
sbb
add
mov
mov
pop
std
loope
add
leave
gs
dec
cmp
xchg
mov
das
sub
stos
sbb
iret
sub
push
cmp
and
cmp
add
mov
or
xor
leave
xchg
mov
into
fisttpl
loopne
fwait
push
mov
stos
inc
sub
lahf
jle
jg
sbb
test
push
mov
add
mov
loopne
xchg
cmpsl
sarl
or
sub
je
mov
stos
rcrl
ja
sub
aam
xor
in
mov
xor
jp
bound
stc
inc
cmp
lods
push
shlb
int
mov
pop
mov
sbb
jp
cld
xchg
lea
fst
cmp
int
add
push
add
enter
out
ret
push
idivl
cltd
adc
or
cmp
out
aad
dec
es
mov
movsb
inc
clc
repz
push
adc
pop
pop
or
dec
xchg
into
test
mov
jl
testb
xchg
fsubr
stc
adc
bound
xor
dec
add
cmp
push
les
mov
std
fcoms
mov
arpl
cwtl
jnp
or
loopne
xor
cmc
and
push
das
cmp
xor
fstp
pop
imul
push
loopne
cwtl
sahf
aad
mov
xor
push
dec
mov
mov
cmpsb
xchg
dec
lahf
mov
aaa
shlb
scas
xor
xor
dec
or
jne
jmp
shr
pop
fxch
or
int
jge
pop
loopne
ss
scas
jge
jp
out
in
inc
adc
orl
in
std
cmp
push
fdiv
adc
sub
sub
cmc
pushf
stos
lret
inc
xchg
hlt
mov
mov
sahf
mov
mov
mov
movsl
adc
sbb
enter
or
leave
lea
mov
jne
cmc
fimull
sbbb
adc
je
push
jns
jae
push
dec
jp
out
js
lods
stc
pop
mov
pop
pushf
adc
push
mov
pop
jg
fs
inc
push
xor
push
scas
rorb
xchg
xor
cltd
data16
cmp
mov
mov
xchg
adc
daa
outsl
or
push
arpl
mov
out
add
push
xchg
pop
and
call
int3
mov
push
mov
push
hlt
out
je
test
mov
je
add
xorl
jo
into
add
add
mov
lret
notb
push
scas
or
loope
mov
pop
stc
leave
sub
lret
imul
cwtl
ss
int
inc
fisttpl
push
sbb
sar
jbe
jp
lea
in
shll
scas
or
cmp
add
ret
xchg
adcl
loope
push
jbe
mov
sbb
lret
sub
jecxz
out
xchg
mov
jecxz
mov
hlt
subb
adc
cmpsl
cli
mov
hlt
jmp
dec
mov
mov
add
mov
sub
frndint
mov
dec
scas
int3
lock
pushf
pushf
jge
dec
sub
ficompl
fsubs
bound
mov
xchg
xchg
test
movsb
lods
into
js
leave
adc
int
mov
dec
mov
sbb
dec
xor
js
or
aaa
std
mov
mov
inc
add
push
mov
add
push
lea
xchg
scas
popa
xor
mov
out
test
cld
shrb
outsb
lods
mov
dec
push
adc
mov
add
icebp
mov
cmovge
pop
sahf
xchg
add
xor
push
rclb
stos
andb
arpl
pop
cmp
inc
dec
and
cmc
and
mov
dec
pusha
out
outsb
cmp
jnp
and
jp
sahf
fsub
xchg
mov
push
adc
pop
inc
shrl
sub
xor
popf
sti
mov
add
inc
in
add
rcl
mov
jecxz
and
aam
repnz
jge
es
sar
sbb
mov
dec
movsl
test
in
or
cmpsl
scas
adc
sbb
xorl
popf
ret
adc
cmp
stos
pop
jnp
sbb
addr16
cs
int
cli
outsb
gs
outsb
push
mov
mov
sub
or
int
inc
aaa
out
mov
cmp
pop
ljmp
adc
int
add
dec
inc
sub
sbbl
pop
jl
decl
jmp
ret
xor
rorb
and
add
mov
fmull
push
fnstsw
imul
and
test
leave
aad
es
adc
add
dec
cltd
or
sub
push
test
fidivrs
push
cmp
cmc
xor
jp
roll
pop
fldt
pop
pop
and
sub
mov
sub
movsl
clc
aaa
lds
push
mov
adc
jno
add
push
mov
hlt
xchg
sbb
mov
or
cmc
mov
sahf
inc
dec
ret
inc
loop
dec
add
rcll
add
pop
inc
shll
lcall
or
cmp
ss
dec
lds
or
repz
push
inc
jne
movsb
sbb
sub
xchg
fsts
imul
xor
push
in
loopne
pop
dec
fcompl
dec
adc
rolb
sarl
push
das
sarb
xadd
and
jb
outsl
js
call
scas
outsb
shr
cmpsl
aas
sub
pop
push
sbbb
mov
ds
push
lods
dec
icebp
and
or
scas
cmpsb
rcll
sub
nop
add
je
and
jbe
dec
scas
insl
xor
ret
lea
xorb
xchg
adc
sbb
jle
mov
ret
and
in
mov
je
or
subl
cwtl
xor
out
aam
cmpsb
jg
mov
mov
inc
fldcw
outsb
push
aad
adc
popa
jnp
enter
push
mov
jg
push
pop
sahf
rolb
add
lcall
fwait
das
adc
mov
fiaddl
mov
and
sub
cmpsb
cmp
and
sbb
pop
test
jbe
aaa
aaa
out
mov
ds
inc
xchg
jle
jmp
mov
sbb
insl
xchg
aaa
adc
lds
test
cwtl
inc
add
add
jmp
jb
add
sbbb
xchg
dec
adc
lret
in
aam
fmull
jo
inc
xchg
push
pushf
cltd
cmp
and
push
push
call
inc
pop
fisubl
jbe
mov
outsl
imul
cmc
push
fistps
xchg
jmp
pop
add
test
adc
cmpsb
sbb
adcl
mov
xchg
and
into
inc
or
sub
add
int3
out
ds
cli
jae
out
inc
jmp
pop
dec
dec
add
aaa
sub
mov
xchg
adc
testb
scas
repnz
mov
lcall
loope
sub
int3
jbe
xchg
repz
mov
in
ljmp
mov
out
out
push
cli
lea
je
adc
icebp
scas
jle
ror
f2xm1
mov
je
mov
add
aaa
cli
sbb
or
loopne
and
jmp
enter
test
ficompl
idivb
bound
inc
add
idivb
aaa
sbb
loopne
arpl
scas
dec
xchg
fnstsw
mov
ja
lret
mov
mov
and
jg
and
loopne
in
cmpsb
outsb
nop
shrl
mov
jg
test
stos
test
pop
push
imul
adc
push
cwtl
push
pop
mov
inc
stos
insl
icebp
pop
mov
lds
fistpl
mov
ficoms
adc
dec
adc
cmp
inc
aam
inc
outsb
aas
sub
lods
xchg
repnz
xchg
stos
and
ds
imul
inc
sahf
pop
mov
fistpll
fmull
sbb
xor
cmp
std
rorl
or
mov
push
sbb
jmp
sub
js
sti
mov
lock
mov
adc
inc
jle
mov
and
sbb
add
inc
sbb
clc
popf
mov
fstpt
adc
dec
in
test
push
xchg
jae
add
xor
in
push
fbld
inc
jge
mov
xor
fistpl
rorb
es
imulb
sub
fdiv
cmpsl
test
popa
int3
cmp
in
ljmp
test
ficompl
inc
in
leave
sbb
jmp
jbe
jmp
sahf
jecxz
and
jae
mov
xlat
gs
push
inc
shlb
sbb
xor
inc
mov
mov
mov
neg
cwtl
sbb
lds
and
shl
inc
push
mov
shll
add
cli
inc
lea
stc
mov
jmp
popf
clc
mov
mov
sbb
arpl
push
stos
fdivr
and
out
lret
xchg
loopne
or
aaa
hlt
popa
adc
ljmp
sarb
rclb
fcompl
pop
rcrl
jecxz
pop
lock
adc
xchg
movsl
fistps
imul
jle
add
sbb
ljmp
loop
call
adc
mov
push
test
addr16
pop
hlt
add
inc
movsb
nop
faddl
divl
and
xchg
xor
sub
movsl
pop
das
gs
sbb
aaa
pop
or
lea
popa
sti
movsb
out
push
pop
jnp
call
aas
add
sti
push
mov
pop
mov
cli
jbe
fwait
lea
out
jno
xor
xchg
mov
lcall
mov
and
dec
fwait
push
fsub
scas
jnp
dec
pushf
inc
out
fmull
ds
mov
pop
jne
mov
sub
and
sbb
mov
in
and
inc
fisubl
fldlg2
xchg
push
mov
fs
add
xor
rcr
lcall
mov
setg
aam
xchg
sahf
movsb
xchg
ret
movsl
rolb
test
ret
pop
sub
mov
daa
sahf
mov
dec
xor
dec
push
cwtl
sbb
fidivrs
fists
sub
mov
stc
sbb
inc
sub
sub
inc
push
ret
icebp
outsb
hlt
jbe
into
aaa
add
mov
xchg
mov
pop
cmpsl
jmp
mov
fstl
lds
mov
fcom
lahf
mov
sbb
xor
iret
scas
jns
clc
jl
adc
popa
inc
mov
stos
test
ljmp
aas
in
enter
jne
insb
enter
mov
cmpsl
pop
or
ja
adc
inc
inc
in
movsb
xor
xchg
and
inc
inc
push
adc
aam
xchg
addr16
and
sub
rcrl
jecxz
aaa
jp
mov
dec
ficoms
pop
and
push
nop
lea
inc
ljmp
mov
sahf
std
mov
dec
cld
inc
sub
add
push
adc
mov
cmp
ret
lret
push
mov
add
je
jmp
fisttpl
call
push
pusha
outsb
popa
mov
lahf
inc
and
test
mov
sbb
add
push
pop
fld
nop
sti
jl
mov
jae
ss
sub
cwtl
test
testl
movq
xchg
ljmp
mov
push
inc
sub
dec
add
flds
sbb
fs
xchg
stos
iret
cmc
push
jecxz
mov
xchg
pop
or
mov
mov
inc
adc
cmp
cmp
fwait
shl
bound
js
sarb
and
sbb
fisubs
or
fwait
adc
movsl
clc
and
mov
mov
xchg
adc
adcb
push
push
inc
sti
aas
adc
aaa
cmp
or
int3
arpl
addr16
popf
shl
enter
pop
mov
xor
cmp
das
mov
cli
mov
sub
aas
lods
int3
leave
fwait
cmp
xor
fcoml
push
je
mov
leave
pop
xchg
mov
test
xlat
cmpsb
mov
push
and
xchg
pop
fs
dec
loop
sbb
mov
fisttpll
sbb
push
dec
jb
ficoms
mov
fbld
in
scas
outsb
insb
data16
xor
pop
insb
sub
xor
xchg
lods
xlat
jmp
dec
dec
das
jle
ljmp
fidivrs
stos
xor
shl
cmp
leave
inc
imulb
inc
in
daa
jns
jmp
xorb
xchg
insb
andb
mov
mov
jecxz
fildll
jmp
mov
xor
inc
fldenv
stc
dec
jg
xchg
xchg
stos
inc
push
add
and
cli
stos
pop
jns
fs
cmp
inc
mov
mov
mov
ss
in
xor
pop
test
or
or
fcmovnb
data16
push
and
xchg
call
stos
cltd
ret
dec
sbb
das
leave
or
cld
jp
jp
into
ficompl
imul
inc
loop
add
in
push
mov
xor
jmp
xchg
mov
jae
icebp
mov
jp
jb
les
adc
aad
xchg
into
pop
sub
or
loop
shlb
push
int
xchg
sbb
lods
jae
dec
rcrb
or
leave
cs
in
push
mov
lds
sbbb
mov
mov
sti
jge
and
dec
xchg
cmpsb
mov
out
mov
cld
roll
or
xchg
adc
outsb
jecxz
jbe
adc
imul
dec
insb
repnz
imul
addr16
mov
scas
xchg
inc
cmp
cmp
push
mov
push
pushf
sub
pop
rcrb
out
or
loopne
pop
or
xchg
incb
adcl
loopne
movsb
iret
cltd
adc
mov
add
add
sbb
push
mov
arpl
jmp
clc
push
push
dec
lcall
push
leave
movsl
pop
mov
xor
call
xor
sub
sbb
scas
jae
cwtl
insl
popa
loope
push
hlt
enter
and
mov
mov
jno
ds
fldt
les
testb
dec
add
mov
xor
test
ror
sub
or
ret
mov
aaa
out
in
clc
pop
aas
out
shll
mov
or
mull
lcall
push
mov
inc
xchg
ljmp
int3
ds
ffreep
lahf
call
repnz
mov
test
cmpsl
add
out
aaa
test
push
add
dec
decl
jge
push
inc
jbe
mov
add
sub
add
and
dec
call
addr16
icebp
test
mov
adc
repz
xchg
into
cmp
fadds
sbbb
jg
mov
sub
and
xor
mov
inc
mov
in
lock
es
pop
pop
inc
cs
or
mov
add
or
and
pop
pop
or
sbb
xchg
jae
jp
mov
addr16
ja
jbe
lods
add
lds
daa
out
push
aaa
and
sub
adc
fisttpll
enter
outsb
lcall
sbb
push
out
lret
jnp
push
js
out
movsb
les
add
jecxz
jmp
daa
push
add
pop
in
jmp
mov
mov
dec
mov
movsl
mov
stos
add
sbb
push
mov
shrb
cld
jno
in
jno
mov
dec
jo
in
push
cmp
dec
je
cmpsl
or
cmp
mov
mov
mov
popf
dec
mov
mov
pop
adc
pop
sub
pop
mov
test
iret
pop
arpl
das
aam
xchg
xor
je
pusha
pop
cmpb
hlt
inc
push
cwtl
push
push
movsb
jecxz
inc
push
adc
repz
rcl
pop
mov
sbb
mov
adc
rolb
out
sbb
inc
xor
aas
push
test
shrb
loop
iret
gs
pusha
jb
mov
jge
and
mov
jge
orb
aas
imul
fnstenv
jmp
nop
mov
mov
sub
mov
mov
push
and
pop
pusha
sbb
mov
mov
or
push
out
icebp
cmp
fisubrl
cmc
pushf
bound
rcll
out
pop
fistpl
xor
ja
mov
push
insl
mov
or
cmp
out
fdiv
mov
sti
jo
pop
jmp
pop
dec
inc
xchg
pop
stos
or
aaa
notb
jb
mov
out
ss
add
xchg
shr
or
push
sub
fwait
out
out
movsb
xlat
aas
xlat
cmp
cmp
and
jnp
pop
dec
lcall
popa
in
test
push
and
ret
gs
cld
stos
xchg
stc
xchg
sbbb
sbb
sub
test
daa
mov
push
inc
adc
sub
inc
fstpt
xor
jne
scas
lods
pop
sbb
or
fldenv
xor
data16
jo
ljmp
and
mov
sti
dec
in
jno
adc
inc
mov
pop
adc
inc
jno
clc
mov
mov
test
repz
jnp
dec
leave
xchg
jae
add
aam
sbb
cwtl
mov
xchg
jnp
pop
fsubrl
jle
add
in
test
aas
mov
into
jecxz
in
mov
or
test
insl
rcr
push
dec
out
aas
lods
fbstp
add
daa
cmpsl
out
xor
jne
jns
divb
aam
sub
dec
cli
cli
cmp
es
xor
ret
inc
and
ljmp
out
int3
int3
dec
xor
sub
push
nop
ljmp
or
imulb
mov
pushf
fidivs
pop
adc
arpl
mov
xor
clc
out
or
xchg
int3
jns
mov
movsb
xchg
lret
lret
ds
stc
jmp
lea
repz
cmp
sbb
daa
js
stc
test
sbb
mov
fs
mov
xchg
push
call
outsl
mov
sub
lahf
cli
hlt
scas
adc
add
and
daa
or
icebp
mov
fistl
dec
jb
ds
je
add
js
scas
shr
xlat
mov
xor
out
in
xor
or
roll
pushf
sub
xlat
loope
lock
mov
dec
xchg
jge
ret
dec
pop
pop
pop
mov
mov
xchg
mov
sarb
pop
xchg
call
cmpl
je
dec
les
mov
sbb
lods
xor
loop
adc
fcoms
push
cmpl
adc
testb
mov
rol
cmc
xor
in
scas
jl
shlb
sub
cmp
fbstp
loope
pop
cmp
int3
and
mov
jnp
xor
bound
sbb
inc
adc
dec
test
sti
dec
mov
fidivs
cmp
test
mov
adc
lahf
mov
es
leave
push
sar
fdivs
jns
adc
dec
stos
cli
lds
outsl
sbb
jmp
dec
daa
adc
mov
jnp
pop
mov
pop
lret
pop
clc
push
mov
sub
cli
movb
jmp
in
je
dec
sbb
sbb
xchg
mov
out
mov
jmp
xchg
mov
pop
jo
push
or
dec
or
hlt
dec
xor
push
inc
xchg
adc
jbe
add
aaa
add
outsb
loop
dec
stos
adc
inc
mov
cmp
pop
pop
add
pop
adc
imull
repnz
lods
or
jp
in
in
dec
and
fldenv
jb
or
dec
inc
negb
hlt
adc
sub
mov
dec
sub
push
mov
xor
cld
and
js
pop
inc
nop
mov
enter
cmp
bound
rcrb
inc
test
sub
mov
sbb
sbb
and
repz
mov
test
mov
fimuls
nop
xor
xchg
daa
fiaddl
dec
jge
pushf
mov
cmpps
repnz
outsl
movsl
in
rclb
mov
shr
fs
cmp
mov
sti
insl
lahf
fdivrs
orl
and
jns
stc
sub
jns
dec
lock
adc
aad
sub
mov
adc
pop
aam
loop
cli
aaa
cmp
data16
jl
scas
popf
push
push
sbb
addr16
std
mov
adc
push
in
int
cmp
jbe
mov
test
pop
out
inc
adcl
imul
inc
add
rol
rcr
stos
fdivrl
cmp
xchg
sbb
mov
fwait
mov
inc
or
cmp
cmp
pusha
push
mov
push
div
stos
push
in
push
mov
inc
shll
in
mov
add
jb
inc
cmpsl
nop
shl
fisubrs
xchg
rcl
mov
sbb
std
in
adc
aaa
lods
cmpb
xchg
pop
mov
add
xor
sbb
push
pusha
and
push
mov
inc
cli
dec
and
fmuls
fcomps
js
out
popf
adc
inc
insb
mov
dec
call
sbb
xor
and
and
stos
jmp
mov
push
cmp
sbb
cld
mov
adc
dec
mov
pop
mov
notl
xor
imul
push
push
add
pusha
jmp
popf
out
adc
sbb
xchg
mov
stos
xchg
xchg
push
xchg
pop
icebp
add
dec
into
inc
fwait
ds
xor
movsl
fstps
sub
adc
dec
xorl
jle,pt
sbb
jge
fs
das
icebp
ss
xchg
iret
pop
mov
or
out
cmp
pop
cmp
orb
imul
gs
ficompl
in
push
push
and
pop
dec
add
adc
sbb
sarl
cmp
cmp
push
negb
sub
pop
and
mov
fs
jp
xor
adc
cltd
mov
pop
mov
nop
pop
jge
repnz
sub
das
push
js
out
jb
inc
push
inc
mov
sub
fwait
sbb
adc
aas
adc
nop
lods
pop
jo
cmp
fsubl
cmp
adc
rorb
loope
or
test
dec
aad
inc
popf
outsl
mov
cmp
stos
sub
outsb
test
movsl
xor
pop
inc
xchg
or
outsb
test
imul
mov
mov
pushf
cmpsb
jge
mov
and
std
loop
lds
mov
mov
out
dec
and
inc
insb
jl
mov
push
mov
test
push
aad
rcr
lods
psrlw
dec
movsb
cmpsl
out
mov
and
mov
adc
jne
or
xchg
xchg
cmp
imul
in
into
scas
jnp
add
out
push
cmpsb
iret
sub
arpl
sub
icebp
adc
sub
rorb
js
mov
xchg
insl
popa
jb
aad
and
jp
fcmove
sub
cmp
popa
andb
lods
mov
sub
mov
bswap
nop
pushf
mov
jno
arpl
leave
cmc
scas
and
jge
aam
cmp
sbb
iret
lods
push
dec
adc
add
mov
xchg
test
std
jne
or
push
or
test
or
cmp
push
test
cmp
repz
or
nop
pop
and
ja
pop
or
in
or
and
jle
add
sub
and
xchg
lock
push
pop
dec
push
jno
ja
out
xchg
repnz
and
repz
pop
js
into
dec
cmp
mov
mov
add
popf
jg
adc
sbb
xchg
sbb
xchg
inc
add
jns
leave
test
push
movsl
int3
jp
fsubs
aas
in
outsb
stc
sbb
bound
mov
sbb
sub
or
xchg
xorl
ficompl
lret
icebp
mov
fcmovnbe
xor
add
push
xor
xor
jecxz
mov
sub
cmpb
or
jmp
stos
push
cmp
cltd
in
xchg
je
insb
mov
jo
cmp
sub
or
lods
jmp
mov
mov
sub
jno
add
xor
mov
in
dec
loope
pop
and
mov
xchg
nop
bound
inc
hlt
decb
sahf
jnp
push
xor
push
pop
fstpt
and
pop
imul
out
sahf
insb
cmp
fs
hlt
xor
cmc
push
push
jg
fldl
lods
rcl
add
scas
inc
mov
push
nop
mov
ror
xchg
push
inc
xchg
jne
les
mov
fstp
or
movsb
mov
aam
jns
pop
mov
xchg
les
sub
lcall
mov
and
jmp
mov
xchg
add
insb
xor
stc
mov
lret
push
mov
xchg
push
inc
inc
adcl
push
pop
cmc
mov
mov
mov
pop
popfw
mov
leave
mov
inc
hlt
fs
sub
add
popf
aas
jae
dec
cmp
push
testl
test
sbb
lock
popa
dec
in
mov
jae
testl
mov
xor
mov
jge
xchg
cmpsl
and
and
lahf
sub
aad
cmpsl
mov
cmp
and
push
or
pusha
xchg
or
jg
jb
stos
jmp
xchg
mov
jbe,pt
sub
jl
and
xor
ss
sbb
es
aad
sbb
mov
lahf
mov
jbe
lea
sub
mov
outsl
aaa
shrl
das
dec
cmp
dec
add
jae
iret
js
pop
and
lods
mov
call
inc
rcl
mov
adc
or
lods
cmp
jno
lea
lcall
popa
je
inc
jle
gs
add
in
sbb
out
stos
ja
outsb
stc
or
into
cmpsb
pop
jno
test
pop
sub
js
xor
cmpsb
sbb
mov
mov
dec
das
fsubp
and
insl
mov
rcll
push
mov
ret
and
movsb
inc
cli
push
sbb
cmc
jp
mov
fdivs
test
sub
sbb
outsl
add
ljmp
ret
push
pop
push
adc
not
jns
jge
shrl
pop
int3
dec
jne
pop
push
jmp
aam
test
lahf
push
sahf
testl
mov
loopne
call
lret
nop
mov
dec
lahf
addb
jmp
jecxz
and
outsb
nop
xor
adc
icebp
lret
lahf
pop
out
xchg
call
stos
jmp
leave
add
ret
sub
or
out
fisubrs
mov
lock
sub
add
inc
fmulp
xor
test
flds
div
and
add
ss
mov
in
adc
xchg
test
addb
xchg
test
arpl
test
out
imull
mov
push
sub
adcb
jecxz
xor
dec
xchg
fs
and
out
mov
sbb
xchg
fs
aam
cmp
adc
mov
std
cmc
adc
fnstsw
mov
inc
xchg
std
mov
lahf
push
mov
popa
gs
lods
pusha
adc
sbbb
pop
lods
cmp
cmp
pop
dec
jp
pop
or
pop
xor
addr16
and
rcr
pop
into
sub
inc
mov
cmpsb
insb
out
stos
dec
lret
mov
int3
mov
dec
adc
sub
push
xor
pop
cwtl
inc
fs
sbb
sbb
shlb
movl
mov
mov
insl
mov
pop
xchg
adc
adc
fwait
pop
imul
adc
iret
ret
xor
loop
subb
dec
jns
jmp
pusha
in
test
out
and
loopne
sub
jbe
mov
in
jecxz
cmp
mov
gs
xor
cmpsb
pop
mov
aas
fwait
xor
imul
arpl
scas
shlb
insl
aas
sbb
push
out
jae
aas
sub
mov
mov
hlt
js
daa
ljmp
movsb
mov
dec
fmull
test
mov
repz
mov
hlt
insl
xchg
pusha
fdivl
and
scas
jg
mov
mov
push
lea
mov
scas
inc
and
inc
outsl
adc
pop
fsts
int3
jo
or
loope
repnz
sub
push
insl
adc
add
inc
fs
sbb
dec
adc
sub
adc
mov
xor
in
mov
mov
cpuid
in
mov
push
das
xor
sub
insb
scas
pop
jne
inc
cmp
in
sub
clc
clc
inc
sbb
into
and
push
cmp
mov
and
add
push
bnd
and
dec
aad
cli
std
scas
dec
lods
jmp
mov
sub
inc
out
rcll
or
lods
cli
cli
imul
or
add
lahf
je
das
pop
xlat
pop
iret
out
lods
lods
cmc
dec
xor
hlt
push
fmuls
mov
mov
mov
or
jmp
push
or
adc
ja
popf
mov
and
je
mov
int3
add
outsb
fs
xchg
stos
fwait
outsl
pop
leave
xchg
lds
mov
cmpsl
xor
movsl
fs
loopne
pop
add
add
xchg
xor
and
cmp
rep
fnstsw
and
mov
cmp
stc
fs
int
ljmp
lea
push
rcrb
cmpsb
inc
push
add
mov
inc
push
shll
xchg
rcr
js
add
xor
inc
push
xchg
dec
jbe
cltd
dec
clc
fimull
les
hlt
cwtl
push
les
mov
inc
in
and
roll
out
xorb
inc
rcl
pusha
icebp
shl
mov
xor
clc
xor
xchg
jo
push
sbb
add
dec
xlat
imul
or
pop
adc
fsubrl
aad
or
and
push
lods
sub
negb
mov
mov
mov
sbb
rcr
das
jecxz
pop
lds
xchg
and
mov
out
gs
int
pusha
rolb
pop
das
push
add
in
daa
dec
decl
test
mov
sbb
jmp
mov
cld
imul
mov
fbstp
out
push
mov
push
xchg
or
pop
fdivrs
repnz
jl
ljmp
mov
je
lret
xor
xchg
sbb
mov
ret
les
call
jl
mov
ljmp
icebp
enter
xchg
mov
push
pop
inc
mov
inc
dec
adc
shr
arpl
jns
inc
and
xchg
xchg
inc
push
mov
sub
xchg
sub
testl
rorb
out
fwait
xor
mov
mov
pop
das
lods
sti
in
test
cmp
mov
inc
xchg
stos
xorb
test
xlat
and
loopne
scas
movl
fs
movsl
inc
fistpll
cmp
and
aam
sbb
push
mov
incl
and
push
pop
pop
insb
movsl
and
stos
aad
push
je
mov
and
negb
js
jl
adc
aam
movsl
sbb
mov
in
add
out
setb
adc
xor
shll
xlat
outsl
xchg
adc
dec
mov
xchg
jbe
addb
in
enter
loope
add
fldl
outsl
push
mov
rclb
inc
pop
lods
addr16
inc
ror
mov
xor
push
mov
iret
test
mov
inc
sub
dec
jl
fiadds
push
sbb
dec
mov
xor
xchg
faddl
xor
fs
jno
pop
out
gs
fstpl
inc
mov
cwtl
outsb
cmp
stc
pop
and
cli
dec
outsl
inc
mov
sbb
push
icebp
leave
mov
mov
pusha
xchg
dec
xchg
lods
and
jp
sbb
pop
in
pop
and
adc
or
inc
sub
negb
adc
aam
push
mov
inc
outsb
ret
ja
and
jbe
and
sbb
fistps
xor
cli
lods
lret
call
aam
jae
ljmp
aad
js
xchg
or
xor
adc
adc
in
xor
mov
adc
or
repnz
xor
push
xlat
jmp
or
inc
sub
adc
addb
orl
stos
rclb
lods
jae
inc
mov
or
ret
adc
iret
ds
ds
sbb
paddb
in
scas
call
or
ja
jmp
xor
add
adc
lret
in
add
sbb
inc
dec
into
iret
pusha
add
push
icebp
ja
sub
push
andb
mov
xchg
fildll
fcmovbe
imull
add
mov
repz
mov
mov
push
call
jmp
jle
mov
sub
data16
mov
cmpsb
and
xchg
loop
std
sbb
or
and
shr
mov
jmp
and
or
inc
adc
pop
cmpsl
jl
mov
popf
pop
std
aaa
rcll
out
jnp
inc
fs
outsl
ret
in
mov
daa
jae
mov
pop
inc
popf
and
leave
ljmp
mov
inc
jl
jl
popf
mov
jge
imul
mov
ja
and
int3
inc
push
mov
sub
cmp
roll
out
int
mov
inc
gs
ret
packsswb
fdivr
or
xchg
pop
dec
je
scas
test
hlt
in
xlat
or
addr16
sbb
int
bound
mov
pop
mov
movsb
xorl
mov
xchg
xor
repz
add
jg
mov
loope
mov
loope
mov
lea
enter
in
fcmovnb
and
std
mov
push
js
test
inc
mov
std
cwtl
mov
push
push
mov
add
fstpt
jmp
mov
ja
cmpxchg
jns
xor
adc
pushf
push
sbb
mov
testb
test
stc
sbb
fs
pop
fdivs
dec
les
cltd
test
dec
mov
pop
xchg
cwtl
mov
insl
cld
fwait
push
lds
insl
rclb
cmp
pop
dec
movsb
xchg
loope
push
fcmovb
addb
lret
sbb
fwait
mov
jp
sti
mov
mov
xchg
or
adc
inc
xor
lret
pop
push
in
add
ret
jbe
pop
nop
cwtl
negb
sbb
fstpt
pop
xchg
add
mov
sahf
and
icebp
pop
sbb
xor
incl
adc
xor
fptan
lahf
sub
adcb
inc
cmpsl
into
mov
fidivrl
add
call
mov
inc
movsb
enter
int
mov
jp
mov
and
push
lods
pop
mov
or
daa
jbe
jecxz
sbb
push
addb
call
fidivrs
mov
inc
jg
adc
push
in
data16
sub
jle
aas
add
inc
bound
cmp
push
push
adc
lea
xor
xlat
cmp
cli
dec
stos
stc
pop
repz
repz
cs
mov
loope
rcr
xchg
adc
mov
out
ss
inc
out
lret
jnp
jg
jae
pop
jg
cmp
sub
out
mov
cwtl
xlat
stos
ljmp
or
adc
inc
test
lods
sub
repnz
adc
jae
pop
clc
orl
sbb
mov
mov
xor
repz
mov
jb
mov
fwait
imul
leave
and
movsl
ss
pop
testl
mov
aas
xchg
cmp
das
popf
sub
xor
leave
pop
lret
cmp
pop
dec
add
push
pushl
add
in
scas
xor
scas
stos
imul
cmc
cmp
add
mov
jp
mov
stc
pop
and
pop
or
mov
jno
sub
mov
loope
sbb
or
pop
and
cs
lahf
decl
xlat
xor
repnz
in
cmp
mov
dec
mov
xchg
xchg
inc
dec
jnp
jo
pop
cli
das
dec
out
push
test
sub
cs
inc
pop
jnp
pop
repz
lods
adc
scas
mov
in
and
xchg
jg
imul
push
cmp
fmull
mov
push
ss
sahf
add
ja
or
in
dec
pop
inc
mov
jo
and
and
and
and
mov
pop
lock
dec
out
xorb
xchg
add
test
jg
inc
adcl
cmp
sub
add
xor
mov
aam
xor
out
ret
mov
dec
dec
push
jb
rclb
or
sub
fxch
outsb
lahf
add
pop
jns
scas
push
daa
pushf
adc
cmp
inc
cmp
xchg
movsl
mov
sbb
cmp
sub
xchg
jl
jecxz
and
cmp
sbb
jbe
outsl
dec
leave
add
and
mov
lods
out
ds
insb
imul
xchg
ss
mov
out
xchg
add
out
icebp
out
jae
loope
ds
sbb
mov
into
push
add
inc
add
pop
pop
xlat
icebp
aad
icebp
cwtl
mov
push
fsubp
cmp
jle
lahf
clc
push
fistl
clc
mov
or
xor
push
sub
xchg
loopne
xchg
adc
cmpsl
mov
popf
jp
or
daa
adc
add
inc
into
push
adc
cmp
stos
divl
aam
cs
aad
insl
xchg
pop
pop
aas
in
test
fs
ja
fiadds
test
push
popf
sub
mov
mov
push
mov
cmp
dec
test
imul
scas
popa
sbb
rolb
jle
test
mov
mov
leave
loope
test
clc
int3
lock
fs
loopne
adc
in
sub
xchg
in
mov
into
sub
cli
sbb
cwtl
push
push
adc
inc
mov
xchg
push
inc
call
xor
mov
ficomps
cmc
sti
loopne
jo
and
push
and
outsl
push
sbb
inc
jge
es
lds
outsl
mov
fsqrt
pop
sub
int3
adc
cmp
xor
rorl
test
int
jmp
shlb
pop
in
mov
aas
sahf
mov
es
int3
adc
popf
clc
push
adc
push
push
mov
add
and
xlat
jnp
imul
shlb
cmc
data16
cmc
push
movsl
cmp
loop
inc
loope
inc
jp
insb
test
pop
mov
ffree
mov
and
adc
fwait
repz
popf
notl
mov
movsb
ss
push
adc
pop
stc
imul
mov
cmp
ja
ja
mov
outsb
insb
cltd
data16
je
shlb
cmp
push
add
idivb
insb
mov
xor
int
sahf
ret
mov
divl
in
pop
push
test
inc
ds
les
mov
ljmp
cmpb
fcoms
mov
lret
fcomi
stos
or
int3
cli
add
fs
fsub
pop
xchg
jns
jbe
fcoml
testb
mov
fs
jb
pop
arpl
out
and
pop
or
aam
xchg
lahf
ror
or
cmp
call
fmull
push
jae
scas
paddb
ja
test
sbb
cmc
xchg
xor
mov
inc
or
cmpsb
inc
inc
push
xchg
push
int
sahf
cmpsl
adc
pushf
jge
iret
inc
mov
jp
or
addr16
dec
andl
rorb
std
push
xor
data16
dec
js
push
shll
xchg
sbb
pusha
imul
pop
jne
push
sarb
hlt
lea
and
mov
test
mov
xlat
scas
lods
mov
pop
loop
or
repnz
xor
jecxz
xchg
cmp
push
les
xor
bnd
cmp
jbe
xlat
xchg
or
addr16
pop
leave
mov
aas
bound
sub
jg
inc
add
int3
sti
inc
invd
icebp
scas
lahf
push
outsl
bound
add
loop
repz
inc
mov
test
jge
push
jnp
ret
push
push
out
inc
xchg
cmp
and
fwait
or
cmp
scas
imulb
jne
clc
adc
mov
inc
test
lahf
jecxz
jmp
push
aam
lret
shlb
mov
test
addl
and
in
xor
nop
xchg
push
loope
push
iret
xacquire
flds
sti
fdivrs
push
jg
add
push
icebp
xor
jae
sbb
or
int
aas
rolb
dec
and
test
mov
mov
dec
leave
gs
leave
cmpsl
mov
and
sbb
stos
dec
xchg
les
xor
add
dec
sub
repz
shrl
push
aad
pop
stos
fdivrl
dec
shlb
push
xchg
cmp
push
das
in
iret
shll
pop
dec
out
fsubrl
in
dec
xchg
out
imul
push
mov
je
icebp
and
in
push
lea
movsl
sub
sbb
and
out
push
fbld
fnstsw
jl
div
loopne
jmp
ds
ret
add
into
nop
push
pop
mov
push
enter
daa
xchg
sbb
jmp
jle
xor
sub
mov
outsb
sub
jecxz
cmp
inc
mov
mov
nop
ret
push
loope
jns
fstps
mov
pop
mov
jmp
adc
jle
paddusb
sub
jg
mov
mov
fst
pushf
scas
into
popf
mov
pop
and
jecxz
xchg
sub
hlt
fwait
or
cmpb
arpl
or
add
dec
sbb
mov
loopne
cs
imul
sbb
gs
icebp
add
cmc
and
sbb
and
mov
push
dec
imul
mov
addr16
dec
xchg
bound
sbb
movsb
test
inc
xchg
arpl
xchg
push
lods
sbb
xor
aad
fidivl
push
out
andl
push
aam
hlt
jl
bnd
xor
xchg
cmp
test
bound
fbstp
call
mov
cmp
mov
movsl
adc
jg
mov
les
in
int3
arpl
daa
xor
pop
stc
in
or
jnp
adc
fstl
pop
shrl
mov
cmpsl
mov
or
push
lret
arpl
aaa
jecxz
jg
jge
adc
subb
mov
xor
push
out
adc
xchg
inc
mov
cld
imul
sbb
xchg
xor
in
aaa
in
jnp
stc
call
mov
mov
data16
lahf
mov
xor
push
fidivs
je
adc
lods
cli
sti
es
inc
jge
jmp
call
aas
push
push
xchg
or
out
inc
or
adcb
mov
inc
dec
dec
test
in
lret
push
push
cs
xlat
mov
xor
fidivrs
push
xchg
cmp
cmpsb
lcall
sub
lcall
cmpsb
loop
mov
sbb
sarl
cmp
mov
sub
gs
out
in
subb
or
cmc
lock
mov
push
je
cmp
lahf
jne
daa
xchg
mov
pop
xchg
or
jo
cmpsb
nop
out
fildl
mov
lock
push
movsb
ss
sbb
cmp
and
mov
stc
sahf
push
fistps
int3
add
mov
iret
dec
icebp
mov
imul
aaa
lcall
jb
jno
xchg
mov
cwtl
add
stos
mov
cmp
out
push
and
in
daa
push
lods
or
inc
ljmp
fisubl
dec
repz
aas
sub
xchg
fnstenv
add
jmp
out
dec
push
adc
cmp
mov
adc
cmc
jle
xchg
aam
jnp
pushf
jle
sti
mov
test
jo
pushl
jecxz
je
jl
test
mov
lahf
scas
mov
stc
in
adc
lcall
mov
and
leave
cmpsb
rolb
outsl
lock
xor
lret
mov
cmp
inc
in
lods
add
fisubl
int
sbb
adc
adc
xlat
pop
adc
mov
lock
xchg
mov
hlt
jp
sbb
dec
adc
add
lret
and
jns
jg
add
mov
inc
stos
push
cmp
and
ds
test
aaa
inc
xchg
movaps
xorb
js
std
add
sahf
jecxz
push
mov
ret
test
or
cmp
fwait
shlb
dec
insl
pusha
dec
mov
shrl
addr16
in
fwait
inc
fdivrs
mov
sti
jbe
sbb
push
mov
lea
js
xchg
ret
lods
enter
xchg
xchg
mov
add
enter
in
xchg
fidivs
in
popf
subb
imul
iret
and
jno
scas
inc
shlb
or
mov
stos
sub
jl
movsb
adc
inc
mov
xchg
inc
cmpsb
and
jg
daa
xchg
pop
scas
icebp
cmp
ljmp
push
loope
mov
sub
jmp
pop
filds
pop
mov
pop
adc
xchg
out
add
rcrl
fs
sbb
jb
inc
test
in
mov
jnp
aam
dec
out
inc
pushf
sub
lods
sbb
gs
jnp
call
jmp
pushf
clc
cmpsb
testl
or
mov
fnstsw
test
xchg
sub
or
jns
sahf
mov
in
std
lret
jmp
mov
int
daa
das
mov
mov
movsb
jbe
dec
test
mov
loopne
insl
aas
push
mov
loope
xsaves
loop
jg
mov
add
scas
loope
push
lcall
pop
addl
push
out
jge
pusha
mov
test
pop
jle
mov
and
sbb
out
pop
lods
fdivrs
add
movsb
pop
pop
cli
nop
ficoml
pushf
rclb
imul
mov
icebp
loope
ret
adc
test
int
mov
and
mov
outsb
pop
push
cltd
mov
mov
lahf
movsb
push
mov
xchg
inc
xor
ljmp
test
sub
pop
fcoml
xchg
cmp
fs
test
xor
lcall
and
push
mov
fcomip
and
sub
inc
adc
jne
lock
push
inc
mov
adc
cmp
xchg
mulb
push
mov
dec
adc
test
std
pop
mov
sub
mov
icebp
jae
shrb
jge
jbe
lds
pushf
mov
dec
add
cmp
dec
sbb
adc
addr16
adc
test
sar
int
je
xchg
inc
jb
dec
stos
push
push
dec
popa
push
cli
mov
push
rolb
cmp
fstp
lcall
popa
dec
rcrb
mov
add
push
push
test
push
ja
scas
roll
dec
pop
adc
sub
dec
add
shll
mov
stos
stos
pusha
andb
cli
mov
cli
mov
pusha
push
cmp
jns
dec
dec
dec
cmpsl
sub
fbstp
gs
xchg
sbb
jecxz
or
jle
mov
mov
xchg
in
xor
lds
loope
or
cmp
sbb
push
addb
mov
and
cwtl
pusha
clc
or
aaa
xchg
cwtl
sbb
sti
lcall
cmpsl
out
mov
push
xacquire
test
outsl
scas
push
sub
not
mov
sub
jg
lods
pop
mov
push
dec
addr16
xchg
jp
lods
cld
data16
loop
and
pop
xor
out
jp
cmp
loope
pushf
xchg
mov
cmp
fsts
jbe
adc
dec
js
dec
mov
dec
and
inc
xor
cs
out
xchg
jnp
je
lret
adc
gs
and
mov
icebp
push
lcall
aam
sub
xor
subl
adc
gs
jns
ja
and
pop
cmpsb
add
stos
mov
mov
sbb
notb
loope
mov
popf
pop
ljmp
sub
fistpll
xor
pop
xor
dec
mov
clc
test
cwtl
aam
outsl
xorb
fcomip
inc
jmp
jg
sub
addr16
into
jg
jmp
and
shlb
loope
xchg
out
iret
jle
mov
mov
mov
xchg
subb
pop
sahf
in
mov
jp
cmpsl
or
out
mov
pop
cwtl
xor
out
inc
and
rolb
mov
call
stc
push
cmp
fmuls
push
inc
jae
insl
sub
je
sub
std
push
sbb
or
lock
xchg
dec
pop
call
in
adc
out
mov
pop
cld
lahf
pop
adc
mov
sbb
lock
pop
bound
sbbl
sbb
aam
cmp
push
mov
pop
aaa
jle
ficomps
setge
xor
in
push
cwtl
jne
ret
repz
fstp
add
mov
jne
push
aaa
pop
scas
test
jbe
rorl
dec
cld
in
or
inc
outsl
push
pop
jno
das
pop
mov
ds
push
pop
sti
out
inc
iret
setno
repnz
cltd
mov
es
mov
outsb
into
pushl
mov
push
or
mov
ja
xor
pop
and
daa
arpl
xchg
add
adc
xchg
stos
push
dec
pop
ds
adc
mov
mov
pop
mov
loop
cld
mov
push
mov
and
test
mov
sbb
andl
lea
push
cld
and
xchg
aad
fsubr
pop
idivb
push
xor
shll
jl
cwtl
bound
pushf
inc
out
dec
xor
mov
lret
divb
mov
jg
mov
jo
cld
dec
push
or
inc
and
or
pop
ss
into
mov
push
enter
mov
xchg
out
in
mov
mov
mov
daa
pop
pop
dec
inc
lcall
cmc
fisubrl
xor
inc
mov
pop
bound
mov
in
mov
repz
or
inc
jb
xor
add
data16
inc
mov
xchg
call
test
jb
test
xor
mov
sub
arpl
iret
push
outsl
jle
pusha
out
xor
dec
xor
rcrb
rcrl
or
mov
inc
out
shlb
xchg
std
pop
sub
xor
mov
inc
pop
mov
aam
test
or
push
lret
test
jae
int
mov
dec
adc
cmpsl
mov
sub
jl
mov
pop
out
push
sar
hlt
cwtl
inc
stc
cltd
mov
jno
in
adc
mov
pop
in
fdivp
out
dec
pop
xchg
or
notl
les
add
movsb
pop
in
cld
cmp
sbb
push
sbb
sbb
push
xor
incb
bound
push
jge
fwait
and
lahf
das
shrl
je
repnz
jge
xor
mov
das
repnz
aad
imulb
pop
mov
dec
xchg
scas
cli
xor
mov
leave
mov
cmp
repz
mov
sbbb
xchg
jb
push
outsl
cld
mov
pop
or
sbb
pop
mov
aam
push
mov
mov
cltd
pop
aad
cs
mov
mov
sub
lods
leave
adc
xchg
jb
mov
repnz
hlt
lcall
jecxz
lds
mov
mov
pushf
orb
sub
negl
jp
mov
mov
inc
aas
cli
lret
push
xchg
aaa
sti
cmp
mov
cmp
adc
jbe
xchg
loope
ss
push
rcrl
popa
add
repz
imul
inc
inc
fwait
lret
cli
sub
iret
fwait
sahf
inc
sub
test
or
nop
inc
mov
sbb
mov
ljmp
vpsadbw
jmp
or
sarl
leave
ret
mov
xchg
rcll
mov
out
sbb
mov
sbb
cltd
stos
das
cmpl
lahf
adc
and
cmpsl
mov
push
es
and
and
xchg
ror
nop
sub
aad
xor
jno
xor
aas
inc
sbb
push
mov
hlt
and
xchg
out
scas
js
mov
stos
inc
enter
fcomi
push
pop
cmp
fildl
sub
xor
xchg
xchg
jg
fildl
inc
mov
cmpsb
out
jmp
adc
ja
into
sub
cmpsl
std
xchg
pop
mov
shrb
pop
sahf
in
pop
push
xchg
inc
inc
push
dec
pushl
jle
lea
ret
enter
rcrb
ret
xchg
cmp
mov
xchg
xchg
push
jno
ds
out
lea
xchg
sub
fisubrl
cmpsl
cmp
jnp
out
fmuls
mov
jp
bound
sarl
out
and
pop
jg
jmp
pop
jbe
ret
push
mov
cs
mov
in
inc
inc
xchg
fmull
jnp
jne
inc
clc
scas
fiaddl
cmp
add
fidivrs
sub
mov
push
cld
push
stos
hlt
fidivs
in
jle
fmull
fidivrl
or
dec
es
jle
popf
xor
leave
mov
stos
mov
loop
out
xchg
vphaddudq
imul
inc
decb
xor
xor
lcall
mov
xlat
sub
push
dec
mov
add
pop
push
test
xchg
cli
fdivrs
dec
scas
aad
scas
mov
rolb
mov
flds
push
xchg
adc
fwait
jne
ss
xchg
lods
rcrb
jns
mov
mov
call
push
dec
loop
and
push
insl
inc
mov
xchg
repz
mov
add
sbb
mov
cmp
arpl
adc
mov
fs
push
jge
pop
dec
aaa
aaa
dec
inc
dec
pop
mov
or
inc
push
push
or
clc
insb
leave
cmpl
rcrl
mov
inc
and
outsb
cmpsb
mov
inc
pop
push
push
shlb
mov
and
inc
cwtl
sbb
pusha
pop
dec
mov
pop
insb
jle
or
jmp
pop
add
int3
cltd
lret
fcoms
xchg
xchg
inc
add
add
ret
xchg
xor
mov
push
pop
xor
adc
xlat
jge
jmp
xchg
int3
pop
decl
push
cld
push
lret
test
daa
or
inc
loop
outsl
mov
mov
incb
jecxz
sub
mov
test
pop
stos
cld
addr16
loope
bound
push
aaa
or
imul
add
test
pop
es
je
stos
arpl
pop
addb
pop
jecxz
inc
sar
loopne
ljmp
push
xchg
mov
cwtl
jg
nop
insb
xchg
push
xchg
clc
popa
out
xchg
pop
add
insl
outsb
jo
cmpsb
mov
jae
jb
push
lock
cwtl
mov
cmpsb
arpl
push
cmp
js
jbe
scas
dec
lahf
add
fs
imul
fdivl
scas
inc
jl
std
scas
jo
push
cmp
dec
inc
pusha
sub
fdivs
sub
sahf
add
xchg
rol
sti
mov
xor
mov
leave
and
push
aaa
mov
pop
xchg
jns
bound
and
add
call
pushl
pop
ljmp
out
dec
pop
mov
sbb
push
hlt
xorb
dec
xor
cmpsb
outsb
xchg
push
imul
xlat
cmp
es
cmpb
je
mov
xchg
mov
mov
rorb
mov
add
shrl
js
push
stc
call
leave
mov
loopne
mov
int3
pop
push
pop
jmp
or
xchg
in
add
lock
outsb
inc
xor
pop
mov
jecxz
inc
inc
dec
notb
push
sub
fdivl
mov
call
push
hlt
shrl
adc
lcall
shl
sub
cli
nop
decl
mov
rclb
mov
sarl
mov
imul
daa
cs
fs
fstl
push
mov
hlt
lea
out
pusha
pop
push
subb
jo
cmp
inc
mov
mov
icebp
jbe
ss
lcall
popf
push
pushl
xlat
dec
cmc
ljmp
clc
cltd
push
xlat
arpl
xor
ljmp
test
lods
lcall
jg
xchg
sub
imul
mov
xor
cmp
stos
dec
ret
dec
out
jbe
inc
adc
daa
push
jg
jecxz
imul
outsl
int
cmpsl
pop
dec
enter
hlt
mov
jecxz
scas
mov
ret
arpl
enter
je
jmp
push
mov
aad
mov
jg
insb
dec
cmp
mov
pop
jns
sti
ret
xchg
sbb
aas
push
sbb
xchg
cmc
adc
jl
test
jle
jb
mov
subl
mov
cltd
sub
xor
std
imulb
mov
mov
iret
lea
mov
pop
jns
sbb
stos
dec
push
xchg
int
fstl
jns
sahf
jge
or
out
cmp
cwtl
jg
stos
jg
push
popa
jmp
fwait
xchg
dec
push
inc
sub
nop
cmp
pop
inc
lret
pop
push
jl
insb
lret
inc
test
sub
sbb
fcmovnu
mov
stos
scas
dec
sub
int
in
rorl
je
movsb
lahf
and
or
xchg
ret
ret
testl
movsb
iret
mov
mov
sbb
mov
cmpsl
push
jmp
add
inc
add
jns
sbb
mov
out
mov
cmp
mov
test
out
cltd
or
outsb
push
and
mov
mov
mov
cmp
inc
jle
ret
flds
dec
jb
jns
decb
mov
cmpsb
xchg
popf
sub
inc
add
jne
sub
lret
pop
ret
pusha
cmp
lock
mov
inc
pop
notl
mov
mov
enter
testl
sub
fildll
xchg
popa
jg
fisttpll
add
and
mov
jle
leave
sub
push
push
jmp
add
lock
jge
idivl
fcmovbe
std
orb
in
aas
lret
inc
stos
imul
inc
lcall
adc
cmp
cmpsl
fldenv
mov
pop
pop
dec
mov
sbb
out
jo
push
xorb
jecxz
cmp
push
dec
lahf
push
or
scas
sti
cmp
adc
pushf
jg
mov
mov
nop
inc
out
sbb
cld
mov
xlat
aam
push
and
arpl
fcoms
cs
cmp
mov
mov
aas
inc
pop
dec
inc
push
push
or
movsb
mov
into
push
movsb
test
movb
mull
into
gs
aaa
mov
jne
nop
push
ljmp
and
fsubr
mov
test
push
cmp
push
in
mov
sub
cmp
pushf
subl
int
fwait
xor
test
xchg
sbb
insb
cs
gs
jge
mov
or
repnz
insl
inc
movsl
mov
in
dec
or
dec
mov
das
daa
adcl
cmp
or
cmp
dec
add
dec
ja
test
adc
sub
daa
mov
fwait
scas
adc
push
inc
scas
pop
cs
adc
jmp
scas
ret
stos
lock
xor
push
cmp
add
and
push
pop
jmp
je
dec
shrl
mov
mov
jno
js
sub
xchg
ss
in
mov
dec
mov
dec
addb
or
xchg
adc
dec
push
mov
jge
cli
or
int
test
push
dec
mov
cmp
stos
pop
aaa
popf
lcall
lahf
xor
icebp
xorb
pop
test
stc
xor
test
sahf
test
jo
test
add
shll
shrb
dec
jge
mov
pop
out
pop
insl
test
jo
lock
cbtw
loop
mov
scas
ds
sbb
fucomi
mov
mov
test
lcall
sub
sub
sbb
inc
pop
add
pop
arpl
mov
sti
nop
js
and
dec
sbb
scas
sbb
xor
fmul
xor
sbb
and
adc
test
add
lods
lret
add
imul
pop
pop
data16
bound
mov
rorl
ret
icebp
stos
mulps
out
ret
imul
jmp
insb
adc
adc
pop
jae
int3
movsb
std
cltd
cli
inc
adc
mov
add
xchg
sti
xchg
push
in
jl
in
scas
xlat
mov
sbb
fsubp
xor
test
gs
mov
clc
enter
push
lcall
xchg
outsl
loope
sub
daa
cwtl
in
pop
pop
xchg
inc
data16
pop
ljmp
repnz
loop
mov
out
fmull
into
fdivl
jecxz
xchg
insl
in
cmp
cmp
sub
scas
push
icebp
or
jb
xor
sub
leave
mov
mov
dec
push
xchg
add
pop
jmp
aas
loopne
mov
sub
xchg
push
sarb
stc
aaa
add
mov
or
mov
addr16
ljmp
sti
mov
or
dec
inc
push
or
les
ffree
aad
jns
add
push
add
mov
push
int3
loopne
xor
sbbl
ficompl
inc
es
adc
std
or
repnz
or
sbb
js
add
fdivr
das
jns
add
imul
js
test
lcall
out
stc
movsb
mov
xlat
outsb
sbb
push
mov
pop
mov
mov
nop
mov
insb
cwtl
jmp
push
loopne
xchg
xor
mov
xor
sub
xchg
pusha
fdivs
mov
push
lcall
aaa
adc
jns
lret
test
and
mov
ret
bnd
cmpsl
mov
pushf
push
mov
je
aad
aas
dec
adc
sti
and
adc
dec
pop
and
xor
cltd
xchg
movl
cmpsb
pop
or
rcll
pop
outsb
call
out
xor
jg
xor
push
dec
xor
adc
pop
les
or
cmp
sahf
cmp
sub
pop
fsts
mov
dec
aaa
imul
jae
shl
idivb
mov
lret
shl
pop
and
xor
or
cltd
cli
mov
push
adc
repnz
or
xchg
lret
out
xchg
test
or
dec
inc
fs
pop
rolb
xchg
inc
es
sbb
ja
jns
inc
je
add
sbb
daa
aad
xchg
inc
jmp
pop
test
xchg
cli
in
xor
mov
mov
push
inc
xchg
adc
gs
or
outsb
test
out
ss
scas
mov
push
or
out
in
jne
dec
lock
int
dec
ds
mov
fcompl
mov
cli
cmp
shlb
lods
push
jne
icebp
cmc
movsb
push
mov
pushf
shrl
pop
movsl
fsubrs
mov
and
inc
lcall
dec
pop
movsl
or
and
xor
lcall
mov
mov
movsb
mov
mov
arpl
xchg
lds
pop
inc
ds
repz
sahf
cli
stc
test
push
jl
xor
sub
gs
jmp
dec
aam
mov
loopne
repz
fstps
ja
and
stos
jl
into
adc
mov
dec
nop
mov
lods
jmp
jb
ljmp
outsb
addl
pop
aas
xor
out
cs
mov
xchg
mov
test
push
adc
mov
lea
or
jl
and
xor
xlat
push
cld
cwtl
xor
stos
pop
and
cwtl
sub
xor
add
enter
mov
jmp
mov
sub
repz
adc
aad
xchg
ljmp
or
fwait
out
mov
pusha
xor
out
and
outsl
outsb
push
push
mov
cmp
test
inc
sub
fisubrs
sub
jge
mov
sub
add
pop
add
or
imul
cmpsl
xchg
push
sub
pop
jne
punpcklbw
pusha
mov
jle
sar
mov
pusha
mov
ret
mov
dec
fnstenv
imul
pextrw
adc
push
push
mov
stc
fcmovu
iret
push
xchg
aas
sbb
push
mov
nop
inc
mov
in
insb
dec
and
je
loop
xchg
icebp
in
adc
decb
cli
or
es
iret
loopne
lea
negl
insl
sbb
sbb
mov
mov
incl
cmp
outsb
mov
sbb
or
adc
ds
push
jp
mov
or
leave
lret
mov
cs
idivl
push
push
shll
out
pusha
mov
cwtl
rorl
out
stos
call
push
loopne
xchg
or
cmp
push
xor
movsb
arpl
cli
mov
aaa
pop
dec
call
rcrl
lds
inc
popa
push
xchg
fsubs
call
xchg
mov
mov
pop
aaa
lds
sbb
xor
aam
cwtl
push
mov
push
iret
aad
xchg
fnsave
adc
stos
mov
push
push
lds
jge
inc
xor
sbb
in
mov
imul
scas
out
jo
cmp
sahf
add
xchg
imul
inc
imul
adc
sbb
loopne
cmp
sub
lods
aaa
inc
out
pop
lcall
jle
shl
xchg
jae
int3
mov
imul
loopne
pop
std
push
sub
arpl
mov
dec
xchg
add
mov
sbbl
push
iret
aad
std
sti
subb
push
movsl
fsubrl
pop
in
push
roll
xchg
pusha
mov
sbb
add
pop
xor
push
test
in
cld
lods
or
int3
pop
or
out
aas
out
push
out
imul
out
loope,pt
or
dec
adc
lahf
jo
sub
push
xchg
or
pop
or
inc
adc
or
inc
loope
sbb
in
shll
pop
iret
or
ljmp
out
test
push
pop
das
sahf
or
or
fmull
lods
pushf
xor
scas
ret
sub
jns
jnp
mov
iret
enter
cs
dec
mov
push
cmp
mov
jge
lcall
inc
add
fidivrs
jmp
aam
lcall
xor
cld
inc
adc
in
dec
std
cwtl
ljmp
das
movl
es
jb
mov
push
subl
cmp
notl
xchg
xlat
rolb
pop
add
and
mov
cmp
ja
cld
aam
inc
pop
sbb
in
lcall
adc
in
push
ja
rcrb
jae
and
push
push
or
jno
push
jecxz
pusha
pop
fimull
cltd
xchg
loope
adc
xchg
lret
pop
pop
pop
dec
cs
clc
push
lods
test
icebp
mov
inc
jp
lds
popf
sbb
push
mov
push
mov
adc
fsubrl
push
ret
mov
inc
sbb
cmp
in
aaa
gs
mov
mov
add
fiadds
addr16
hlt
xsaves
xor
fidivs
out
push
mov
inc
sbb
or
mov
pop
repz
scas
ss
ret
jg
jo
push
inc
mull
fdivrs
insb
sti
scas
lret
push
jp
jnp
cmp
cltd
shlb
and
and
aam
fisubs
inc
jae
pop
lods
lret
iret
add
jg
mov
stos
mov
iret
and
das
and
ljmp
or
popf
or
movsl
es
jecxz
ret
mov
pop
cmp
das
in
jnp
shrd
lds
lahf
cs
punpckldq
pop
mov
jmp
mov
outsl
jbe
jb
loopne
sub
sahf
push
jmp
xchg
adc
mov
xchg
andl
divb
lret
xchg
lods
or
cs
cmp
xor
add
test
lret
or
insb
dec
les
mov
mov
in
and
xor
popa
xchg
xchg
out
pop
dec
push
dec
into
and
repz
imul
loop
jno
mov
jnp
add
pop
add
push
dec
fildll
jb
cmp
int3
enter
daa
lods
cmp
inc
cmp
js
pop
fwait
mov
jmp
push
stos
jnp
ret
inc
jbe
dec
dec
jle
jge
fldenv
add
or
shrb
movsb
sub
push
mov
pop
pop
xchg
xor
outsb
movsl
out
in
repnz
iret
in
xor
imul
enter
cmpb
inc
dec
dec
xlat
mov
dec
rolb
addr16
cs
or
fwait
xor
sti
imul
scas
lods
mov
movsb
test
push
je
jns
sbb
insb
test
pop
loopne
and
mov
aad
or
xor
cwtl
mov
cmp
cld
jb
seta
loope
jbe
fcmovnu
sub
jae
mov
jae
and
mov
add
mov
push
negb
mov
xor
fdivrl
clc
orb
mov
and
out
xorb
mov
icebp
cli
xor
movsl
inc
push
loopne
push
je
ret
aad
into
fcmovbe
push
outsl
pop
mov
shlb
dec
mov
pop
jecxz
sbb
movsl
mov
into
shl
insb
pop
inc
push
icebp
daa
sub
inc
aas
push
cmc
and
adc
daa
cwtl
fwait
shlb
lret
pop
sbb
cmp
xchg
addr16
inc
jmp
xlat
hlt
pop
jbe
add
enter
cmc
xor
xorl
add
int3
pop
subb
xor
xor
and
dec
pop
daa
fidivrl
scas
into
jnp
fildll
stos
sub
mov
jge
mov
lds
in
stos
adc
loopne
sub
sbb
mov
cwtl
xlat
inc
adc
xchg
push
popf
mov
lcall
sar
stos
push
push
inc
jo
rorb
xlat
cltd
pop
dec
rcll
mov
push
incl
sbb
jb
faddl
mov
add
sahf
clc
in
xchg
shr
sub
fucomp
mov
mov
mov
pop
mov
ss
add
cs
sub
stc
mov
call
mov
jecxz
les
lahf
into
push
call
js
pop
push
in
jno
fidivs
out
lahf
insb
sub
sub
xchg
lods
push
xchg
jle
xor
aam
and
cmp
push
xor
rcrb
sbb
push
shl
insb
adc
adc
cmp
test
popa
clc
mov
clc
mulb
mov
loop
mov
into
shll
dec
inc
cmp
add
je
fadd
sbb
sbb
lods
sub
out
xchg
mov
fwait
push
fldenv
sub
pop
jnp
mov
aaa
lock
mov
sbb
push
jbe
pop
pop
popf
xor
bound
js
repnz
insb
jmp
inc
inc
or
add
xor
loop
cmpsl
cmp
in
or
loope
stc
lds
mov
sbb
loopne
movsl
das
jl
fisubl
push
xor
pop
add
adc
fs
xor
orl
and
xlat
push
sbb
fwait
xlat
sahf
mov
ss
adc
dec
mov
and
daa
les
add
sub
sub
push
jle
jg,pn
lock
popa
fisttpll
xor
out
pop
in
sahf
jle
push
jl
xchg
mov
inc
sbb
mov
mov
arpl
pop
incb
xchg
fstl
aad
lea
ljmp
scas
adc
mov
pusha
in
imul
fs
pop
adc
mov
adc
sbb
xlat
inc
test
ficompl
cmp
pop
sar
call
add
ret
xor
push
push
fsubrs
push
inc
cmp
xor
xor
fimull
addr16
xchg
add
mov
mov
dec
insb
scas
jnp
es
hlt
popw
push
enter
xor
dec
or
xchg
in
sub
adcl
fucomp
int3
inc
xchg
or
add
cmp
push
jg
mov
gs
inc
leave
mov
lods
scas
pop
ficompl
mov
and
xchg
loope
sahf
adc
mov
add
push
jb
xor
sub
cmp
ret
xchg
cli
pop
add
dec
out
cmp
jecxz
mov
mov
sbb
mov
shl
lds
mov
test
jbe
xor
test
nop
loop
divl
stc
cli
scas
scas
scas
push
lods
push
je
push
aaa
cld
int
call
shrb
sbb
pop
adc
and
xchg
loop
loopne
sub
gs
sub
xor
hlt
cmp
xchg
jge
sbb
adc
ds
mov
lret
fwait
push
xorl
repz
scas
add
jbe
pop
sub
jo
lods
test
punpcklwd
enter
fisubl
fcompp
arpl
xor
test
pop
sub
aad
mov
adc
mov
insl
xlat
inc
enter
dec
dec
sahf
cmp
fildll
mov
xor
or
fcomps
frstor
mov
inc
int
push
mov
add
mov
mov
ds
jge
ljmp
ss
sbb
addr16
es
shll
add
push
push
inc
es
cwtl
pop
xchg
fs
iret
jnp
push
scas
das
adc
cmp
cmpl
push
cmp
ror
shl
addr16
fsubs
xchg
sbb
out
sbb
dec
loopne
js
mov
cmp
lahf
and
jmp
test
jo
in
fsubrs
jbe
mov
int3
push
aam
pusha
ds
xchg
ds
lods
inc
std
aas
xbegin
ret
loop
mov
or
fwait
or
std
push
xchg
mov
mov
cmp
in
xor
pop
xor
jecxz
rorl
test
inc
add
push
xchg
inc
push
pop
and
pop
sbb
mov
and
nop
int3
push
or
fcomps
scas
mov
adc
rcll
cs
popf
rorl
push
sub
imul
mov
shlb
fs
xchg
in
aaa
mul
leave
mov
mov
pop
and
int
cli
push
pop
lods
and
sbb
jb
lock
adc
loop
push
ss
xor
mov
mov
icebp
pop
cmp
mov
jnp
out
mov
stc
mov
dec
dec
lret
jge
mov
lods
shll
xor
movsl
aaa
xchg
data16
cmp
fildl
aas
xchg
mov
lgs
sub
movsb
xor
les
push
les
xor
mov
and
out
adc
loopne
lock
mov
stc
std
rolb
stos
mov
and
scas
inc
xchg
test
add
stc
mov
mov
loopne
xchg
cmpb
jns
les
pop
add
setbe
int3
push
mov
dec
sbb
outsb
inc
xchg
jecxz
mov
or
jl
adc
cltd
loopne
ret
ja
mov
scas
dec
adc
jbe
leave
pop
mov
aam
dec
pop
xchg
repnz
add
in
mov
push
adc
push
sbb
jb
faddp
je
in
pop
xor
push
mov
xlat
in
xchg
cmp
repz
adcb
mov
fsubrs
mov
jb
sub
fildl
inc
or
xchg
inc
fs
and
cmp
cmp
incb
stc
popa
inc
nop
filds
jne
int3
mov
mov
ficoml
pop
je
ds
mov
aas
imul
jno
movsl
fstpl
arpl
pop
fistl
add
push
xchg
test
mov
js
es
mov
out
jmp
or
pop
jle
lods
or
outsl
lret
loop
mov
cmc
pop
add
in
aas
call
cld
xorl
cld
push
lahf
jmp
rol
push
sub
test
lock
aas
test
cmpsl
gs
rcrl
movsb
mov
ljmp
push
mov
push
push
inc
aas
ficompl
mov
sub
xorb
daa
cwtl
pop
sbb
call
mov
js
cld
out
and
lahf
stc
inc
dec
loope
mov
lods
dec
scas
cwtl
sbb
and
cmp
lea
push
sbb
rol
and
repz
in
nop
sub
add
pushf
aad
ret
imul
test
sbb
inc
mov
pop
mov
mov
scas
stos
gs
dec
jbe
testb
lods
cmc
imul
icebp
add
idivl
cmp
sub
push
dec
push
call
inc
pop
inc
fsubp
pop
sub
dec
lret
sbb
dec
lcall
jne
bound
cmp
mov
and
hlt
int3
dec
jb
pop
lea
push
jne
jno
stos
in
ds
xchg
in
mov
xchg
xchg
in
nop
cmp
dec
mov
xor
sub
inc
movsb
pusha
pop
mul
sub
out
iret
fldenv
fnsave
pushf
popf
jnp
divb
mov
scas
jno
jno
fistpl
push
or
jns
daa
daa
pop
out
stos
mov
outsl
xchg
negb
hlt
out
into
inc
pop
cmp
addr16
xlat
cmp
mov
xor
cmp
cmp
mov
mov
nop
jmp
push
scas
mov
mov
scas
push
daa
xor
add
scas
and
add
sbbb
pop
pusha
add
dec
popa
mov
call
pushf
leave
movsb
lea
sub
dec
gs
xchg
mov
jbe
aam
addr16
jo
in
push
fdivl
push
mov
nop
addr16
jae
or
cltd
mov
cmp
push
sub
sti
das
mov
ds
pusha
in
add
push
cmp
jge
pop
push
in
push
sub
ds
mov
loop
and
jne
or
aad
and
enter
mov
shlb
sbb
mov
ret
shl
jge
dec
fildl
in
int3
adc
and
stc
adc
adc
pop
sub
xchg
add
mov
add
mov
xchg
inc
cli
jmp
push
mov
mov
mov
push
sbb
xchg
fidivrl
xor
sub
push
and
das
sub
lahf
inc
movsl
aas
or
lock
out
adc
aas
lret
leave
enter
sti
jo
dec
outsb
rcrl
xchg
mov
arpl
pop
test
xor
fcomps
mov
bound
xchg
sub
insb
aaa
adc
js
movsl
popf
fs
daa
xorl
test
lret
or
xchg
mov
pop
sbb
loop
pop
addr16
je
or
gs
adc
incl
mov
dec
mov
cmp
add
pop
test
bound
bound
mov
cmpsb
repz
sbb
dec
mov
adc
sbb
pop
lahf
mov
or
sub
mov
es
imulb
fstpt
cmp
call
jb
int
and
stc
push
je
adc
cmpsb
pop
movsl
push
jae
in
mov
ret
lds
into
movsl
xchg
mov
xchg
aaa
or
adc
aaa
inc
pop
inc
fisttpl
xchg
push
call
jge
fucomp
mov
imul
ja
dec
testb
and
inc
cmp
sbb
xchg
jge
mov
std
mov
xchg
mov
add
outsl
sub
xor
push
lods
hlt
push
outsb
inc
repnz
lahf
cli
int3
repnz
cmp
mov
lahf
lret
cmp
std
xchg
dec
ja
sbb
mov
jb
push
or
xchg
push
jno
ret
ss
je
add
lahf
loopne
stos
pop
mov
shl
cmpsb
pop
sbb
rcrl
dec
cmpsl
outsl
pushl
pop
imul
lods
icebp
push
lea
add
push
add
movsl
mov
jbe
add
sub
aas
inc
push
jmp
xchg
mov
test
adc
lret
rcll
inc
bound
adc
movsb
jle
sbb
sub
mov
cmpsb
mov
gs
aam
pop
outsb
mov
popf
cmp
into
sub
adc
jmp
dec
ds
inc
cli
xchg
into
mov
push
popw
mov
mov
je
inc
jo
mov
lea
pop
jns
stos
and
fsubrl
lret
dec
in
mov
sbb
rcll
mov
pushl
xor
xchg
mov
jle
or
ror
testl
sbb
test
pop
sub
aas
dec
inc
outsl
in
mov
jmp
dec
mov
and
fmulp
mov
enter
mov
test
fs
cmp
out
test
fxtract
sbbb
rol
xchg
ljmp
lods
adc
jnp
fildl
in
jecxz
cmp
push
mov
push
sti
ja
cmp
dec
sbb
sbb
hlt
cmp
pop
iret
outsb
loope
mov
cmpsl
sbb
xor
or
je
repz
mov
push
faddp
mov
pop
popa
sbb
lods
sub
test
xchg
or
in
ret
or
jmp
cli
rorb
je
repnz
rcpps
mov
cld
mov
sub
clc
das
push
shlb
sbb
sarb
insb
ss
or
inc
pop
cmp
dec
mov
icebp
lods
les
jbe
add
cs
sbb
jb,pn
testl
dec
and
cmp
addr16
pushf
jmp
fldt
cwtl
add
rol
aas
add
jae
xor
dec
fstps
jns
pop
jne
or
inc
inc
out
add
cli
cmp
jae
mov
dec
shll
push
mov
xchg
adc
test
outsb
pop
mov
or
pop
push
fidivl
in
lods
int3
mov
mov
mov
pop
push
push
lods
or
cld
lods
add
call
mov
jb
mov
mov
add
jns
ss
lret
sub
je
mov
dec
subb
test
push
push
sbb
lahf
in
xlat
sbb
insb
mov
or
add
jbe
aas
popa
shll
and
gs
cmp
xor
cmc
pop
or
imul
ja
scas
jl
dec
xor
push
insb
cmc
or
push
out
and
add
jle
mov
xor
jecxz
adc
movsl
enter
lret
dec
cmp
mov
mov
jno
mov
popa
pop
xchg
fnstcw
rol
addr16
inc
pop
inc
shlb
fidivs
lret
adc
test
popf
push
pop
leave
dec
out
fldl
xlat
xchg
mov
xchg
mov
add
mov
jns
jmp
jl
pushf
mov
dec
movsl
stc
adc
jp
shll
jge
gs
jle
push
jne
add
xor
cltd
aam
mov
not
push
mov
repnz
pop
out
scas
js
adc
sbb
mov
cmc
add
mov
lcall
ret
rcrb
push
cltd
sarl
adc
scas
icebp
cmc
int3
xchg
inc
push
sub
push
mov
outsb
ja
mov
fcompl
and
or
push
fdivrl
mov
or
push
ret
cmp
add
ret
jmp
jp
adc
mov
mov
mov
xchg
mov
bnd
sub
adc
dec
push
push
inc
jge
pop
adc
inc
dec
jno
aam
push
xor
push
mov
inc
stos
outsb
test
fldcw
adc
out
lret
test
jb
mov
movsl
data16
mov
mov
std
addr16
hlt
pop
pop
sbbb
inc
mov
mov
sbb
test
fildl
xchg
mov
fmull
mov
inc
add
dec
mov
jae
or
xor
and
mov
push
imul
pop
ret
cmp
ret
imul
pop
hlt
sbb
ja
jl
jnp
mov
inc
xchg
out
into
inc
mov
push
pop
add
arpl
jne
repnz
enter
repz
or
pop
fildll
mov
leave
test
sbb
cmp
rolb
mov
sbb
push
in
and
mov
je
scas
addr16
xor
inc
lock
jo
shr
int
sbb
out
arpl
sbbb
cwtl
outsb
adc
stc
xor
ljmp
hlt
mov
jne
xchg
ds
ss
por
mov
das
cld
cmpsl
add
mov
mov
scas
mov
sub
in
mov
test
jg
inc
xor
cli
and
pop
lcall
lea
imul
shll
jns
cmc
enter
pop
jno
mov
testl
test
cmpsl
cwtl
cmp
cld
test
cmp
push
aam
jg
fisubs
js
xchg
fcmovnbe
pop
jle
dec
rcl
xchg
mov
outsl
add
mov
add
dec
and
insl
mov
orl
ret
sbb
leave
xor
sti
repnz
jmp
jecxz
mov
sbb
mulb
in
or
jl
push
xchg
pop
out
testl
inc
pop
std
mov
dec
mov
xchg
cmp
xchg
out
sbb
xchg
add
xchg
pop
xchg
jns
in
ret
inc
fstps
mov
adc
xchg
data16
lods
jnp
adc
push
es
mov
iret
fwait
push
push
mov
mov
js
mov
fsincos
mov
pop
jae
mov
cmpsl
stos
imul
push
das
adc
mov
jge
cld
int3
in
imul
ret
jecxz
xchg
movl
dec
mov
pop
loop
stos
fwait
nop
hlt
lods
insl
outsl
out
xchg
and
xor
fimull
add
inc
jmp
lcall
cmp
adc
dec
cmpsl
cmp
insb
inc
idivb
sbb
pop
in
mov
es
push
stc
sahf
in
xor
mov
mov
pop
dec
es
push
push
xchg
mov
mov
dec
jg
xor
iret
push
enter
pusha
test
and
sbb
jge
jne
cmp
mov
fidivrs
jns
mov
mov
push
mov
sub
icebp
add
adc
mov
scas
add
std
mov
fmull
adc
push
pop
shrl
or
dec
test
add
aam
mov
mov
pop
and
push
leave
push
mov
xchg
push
out
in
jo
rcrl
imulb
inc
fstl
xor
push
jo
lcall
mov
lea
clc
inc
test
or
fnsave
js
and
or
lock
stc
scas
rorb
mov
roll
stos
mov
movsl
push
sarl
test
pop
scas
fsubrs
mov
sub
lcall
mov
pop
and
and
aas
and
and
push
pop
nop
push
adc
jno
add
push
inc
dec
mov
pop
pop
mov
or
fxch
lret
fidivrl
ret
jmp
sbb
inc
push
out
leave
movsb
in
iret
test
daa
popf
sub
in
ss
sub
inc
jge
pushf
and
aam
or
sbb
out
add
dec
push
push
mov
xor
pop
and
ss
rorl
mov
jns
jmp
and
xchg
loop
test
xor
std
inc
ret
dec
mov
cmp
fstpt
out
repz
out
outsb
xrelease
sbb
mov
adc
aaa
inc
cmp
and
lods
mov
sarl
aaa
popa
loopne
lock
daa
add
jg
nop
stc
cmp
inc
jecxz
out
arpl
mov
mov
subl
add
push
adc
shrl
fsub
sbb
dec
outsb
mov
xchg
pop
xchg
inc
ret
mov
es
lods
lock
enter
outsl
in
dec
and
xchg
ljmp
push
sub
or
inc
cmp
outsb
aas
ret
cmp
sarb
and
push
lahf
xor
dec
ret
fisttpll
push
out
lds
pusha
push
sub
std
xchg
cmp
orl
into
test
cli
lea
shl
push
push
stc
scas
xor
addl
adc
js
loope
jmp
jecxz
scas
xchg
enter
idivb
sub
aam
stos
mov
add
ficoml
xchg
int
roll
test
lods
and
int
repnz
dec
and
out
fiadds
push
mov
shrb
call
and
icebp
pop
test
mov
push
mov
dec
push
and
sub
nop
call
stc
lods
and
jl
cmp
pushf
out
pop
sbb
frndint
mov
andl
jp,pn
repz
leave
popf
cmp
scas
xor
outsl
jmp
and
inc
sub
sbb
push
lds
sbb
push
stc
add
jns
ret
pop
dec
in
pop
fistpl
jmp
or
mov
int
push
loope
test
call
ljmp
idivb
rcrb
pop
or
cmp
adc
cwtl
xchg
push
hlt
cmp
mov
cmp
fisttpll
mov
inc
push
inc
sub
ds
insl
rcr
popf
mov
xchg
rcrb
negl
fsubrs
aaa
call
mov
mov
dec
dec
mov
and
mov
divl
or
sub
pop
rol
les
mov
jae
aaa
mov
dec
mov
sub
jmp
pop
test
cmp
xchg
xor
jge
ljmp
cs
das
mov
or
adc
xchg
lret
fistpll
add
out
roll
pop
mov
pop
dec
es
daa
bound
inc
insl
movsl
repnz
addr16
sbb
add
and
loopne
clc
insl
das
mov
out
push
xor
je
ret
add
mov
repz
subl
arpl
and
adc
mov
push
pop
jmp
aad
fcom
aas
mov
in
sbb
sub
ret
or
dec
call
cmpsl
jmp
add
fmul
int3
xor
movsb
sub
ss
mov
xchg
fsubrl
fdivr
pop
cli
inc
inc
fisttpll
push
loopne
push
push
dec
and
adc
jnp
aam
lret
add
adc
adc
inc
xor
mov
shlb
sar
xor
xchg
sahf
daa
aas
dec
mov
cmpsb
cmp
in
test
xchg
mov
or
nop
mov
pop
enter
outsb
hlt
mov
std
popa
lahf
mov
insb
and
pusha
xor
cld
lock
fiaddl
gs
int3
adcl
std
and
sub
xlat
push
mov
pop
mov
push
inc
add
add
mov
sbb
ds
aaa
inc
movsb
cmp
and
loop
in
mov
cmpsb
rcr
pop
popf
push
loope
and
icebp
stos
xchg
out
and
and
mov
inc
sahf
jle
mov
popa
andb
adc
dec
test
mov
xchg
jl
mov
in
loop
sub
jg
xchg
imul
inc
std
adc
fdivrs
dec
xlat
cmp
inc
int
stos
push
push
cli
push
mov
sub
jp
fnstcw
stos
mov
and
and
cmp
mov
push
arpl
or
dec
mov
sbb
inc
inc
xor
and
jle
outsl
pusha
pushf
idivl
repnz
dec
andl
push
sub
nop
adc
push
enter
sub
mov
int3
stc
sbb
and
xor
mov
flds
mov
stos
inc
dec
pop
pop
xor
ror
mov
pop
and
ret
aas
lock
xchg
cs
sbb
inc
rorl
test
ja
push
sub
sub
jo
lods
cmp
dec
add
adc
int
add
aas
add
cmp
lods
mov
sbb
outsb
movsb
jle
push
push
jb
pop
out
fadd
xchg
std
int3
mov
jae
lahf
cmp
mov
pop
mov
cli
int
mov
push
ds
xchg
lcall
imul
push
gs
int3
repz
push
add
lret
int3
pushl
cmp
movsb
push
adc
int3
ja
xor
andl
icebp
xchg
outsb
mov
das
pop
lock
or
movsl
or
pop
iret
add
add
outsl
or
and
push
sbb
and
int
lods
or
dec
subb
add
gs
sarl
inc
jmp
inc
mov
mov
dec
pop
sbb
push
mov
jbe
hlt
es
dec
outsl
xchg
adc
lods
stos
jno
rcr
xor
cs
xchg
mov
cs
shl
xor
int3
lods
or
orl
push
xor
shlb
ja
lret
inc
inc
jp
push
sti
out
lret
repz
pushf
xchg
dec
or
inc
and
fs
mov
xor
repz
cmp
cmpb
pusha
adc
xor
rol
test
mov
mov
pop
pop
lcall
mov
jg
test
fstl
xchg
inc
outsb
or
ret
int3
leave
mov
repz
and
out
shr
mov
in
iret
xchg
sbbb
cltd
insl
scas
lcall
dec
jl
pop
add
int3
nop
push
test
mov
push
mov
scas
inc
sub
push
mov
fisubrl
jg
aaa
popa
lods
loope
mov
sub
jg
and
push
pop
xchg
sub
sub
shld
dec
sub
fs
xchg
fldcw
adc
adcl
dec
or
cltd
mov
inc
add
divl
mov
and
insl
and
rcrb
mov
ja
mov
in
sahf
lock
push
pop
aam
loopne
jo
das
ss
movsb
clc
subb
int3
push
xor
cs
decl
mov
mov
aad
sub
dec
pop
shlb
aam
push
loopne
sub
push
push
mov
jb
dec
insl
and
mov
mov
and
xchg
ret
fldlg2
and
sbb
pop
xchg
movsl
sahf
xchg
out
push
sub
nop
arpl
cwtl
dec
out
lret
shl
fs
and
inc
icebp
jg
adc
pop
clc
mov
push
cmp
push
in
sub
sub
pop
adc
cmp
jo
fsubrp
nop
ljmp
sarl
pop
movb
loope
insb
je
int
lds
in
insb
add
test
out
jnp
adc
loopne
fwait
jge
scas
sub
jle
dec
mov
icebp
cmp
subb
cmc
pop
cmp
dec
pop
cmpsb
xchg
pop
stos
push
xchg
in
adcl
in
mov
add
jecxz
lahf
jno
mov
adc
hlt
js
pop
jbe
call
std
insb
fildll
pushf
into
cmp
pop
scas
push
sti
ror
mov
mov
pop
aad
mov
jnp
fnstenv
sbb
fldcw
jae
mov
pusha
inc
add
dec
xchg
lods
jmp
pop
cltd
cmp
cli
cmp
adc
and
jne
dec
out
in
and
sbb
enter
ljmp
xor
mov
scas
lods
int3
in
mov
cs
adc
fs
push
nop
cmp
xlat
or
and
mov
lret
movsl
out
mov
push
ja
pop
jge
fmuls
pop
xchg
push
cmp
xchg
dec
dec
sti
xchg
notb
or
int
push
push
cmc
pop
xchg
lret
in
xchg
dec
cmc
testl
sub
and
in
jbe
out
inc
out
mov
pop
pop
push
aaa
lea
dec
or
inc
mov
sub
lret
mov
push
enter
sub
fs
and
inc
mov
fst
and
cmc
stos
fadd
pop
orb
inc
popf
dec
imul
popa
mov
loopne
icebp
imul
pop
test
orb
dec
and
mov
mov
dec
mov
pusha
icebp
ljmp
mov
sbb
pop
outsl
aaa
jp
jae
shll
mov
das
jp
add
lods
lahf
aas
stos
add
xchg
pop
push
jecxz
jnp
add
enter
negl
push
mov
addr16
jae
test
inc
aam
or
add
jl
in
cltd
andb
push
lds
leave
pop
imul
xchg
inc
add
and
mov
mov
icebp
mov
jns
pusha
or
xor
or
je
xor
or
add
dec
lock
add
and
cli
enter
dec
out
bound
or
push
cld
ret
xor
or
pop
movsl
lock
inc
xchg
dec
jmp
mov
mov
jae
ja
out
push
or
cmp
sub
xor
movsb
jae
jmp
mov
mov
lods
or
dec
inc
loope
push
insb
or
dec
aam
aam
add
mov
jo
testl
pop
loop
in
fisttps
sbb
push
jo
and
andb
sbb
xchg
dec
popf
das
dec
rcrb
push
jecxz
jmp
aam
daa
mov
mov
jbe
and
mov
adc
sarb
sub
sbb
popa
xor
shll
repz
scas
dec
mov
jbe
xorb
ret
lods
mov
jo
and
xor
je
xor
cld
stos
jb
pusha
dec
aam
inc
xchg
pop
xor
lea
adc
push
mov
or
andl
mov
arpl
xor
add
scas
cmpb
iret
hlt
test
push
mov
repz
inc
dec
add
xor
addr16
cmp
addr16
icebp
push
cltd
iret
lret
repnz
jl
lds
test
cmp
aaa
mov
mov
imul
aam
orl
cmc
xchg
add
addb
jecxz
lods
stos
mov
cmp
in
adc
addb
or
mov
movsl
jnp
sbb
outsl
nop
pop
mov
xchg
dec
jo
nop
into
test
xor
jl
fstpl
hlt
push
add
mov
popf
jmp
dec
fadds
or
test
or
mov
sbb
cmp
andb
scas
jnp
fcmove
xchg
data16
aad
je
and
bound
xor
hlt
jecxz
push
and
mov
clc
cmp
push
ds
or
jno
in
mov
or
rsqrtps
je
loope
add
aaa
dec
inc
xor
mov
ds
lds
push
adc
inc
and
and
mov
in
ret
pop
dec
pop
insb
pop
fwait
pop
adc
cmpsl
pop
popf
jmp
mov
movsb
lret
pop
xchg
pop
adc
and
push
add
mov
pop
daa
lods
aaa
lds
jno
jbe
ja
sti
jl
dec
inc
sub
xchg
inc
jmp
lcall
in
sbb
movsb
addr16
movsb
ja
pop
f2xm1
pop
cmpsb
mov
ljmp
xor
xchg
stos
popa
pop
call
jno
decl
movsb
or
cmp
hlt
xor
aam
imul
mov
jl
cmpsl
test
xlat
enter
lahf
loope
in
pop
xchg
testb
mov
pop
jo
fidivrs
test
fwait
pop
aaa
loope
ss
out
push
fiadds
or
mov
sbb
test
jnp
cmp
imul
js
jns
aam
shl
enter
cmpl
adc
fdivrs
add
inc
mov
fildll
push
xor
ror
pop
int
rclb
out
mov
shll
jne
add
sbbb
jo
je
jecxz
out
cmp
mov
andb
outsl
dec
mov
cmp
adcb
insl
jmp
rcrl
inc
jmp
out
xor
dec
or
cmc
in
xchg
out
out
xchg
ss
sbb
into
scas
ds
mov
jns
inc
testb
call
mov
std
bound
sbb
jae
cli
xchg
sub
mov
pushl
stc
stos
pop
sub
lret
push
repz
pop
movsb
out
push
in
lods
sbb
adc
shr
and
out
adc
add
aaa
jl
adc
add
jg
mov
sarl
pop
sub
push
pusha
fstpl
xchg
adc
notb
adc
mov
mov
xchg
push
stos
or
lret
push
daa
test
jae
cmp
out
cmp
xor
es
dec
jae
dec
xor
test
fildll
scas
sbb
cmc
gs
adc
mov
mov
sub
cli
stc
push
loopne
mov
mov
xchg
into
adc
arpl
push
sahf
scas
or
les
fdivrl
mov
repz
sub
jae
clc
inc
dec
sbbl
fimull
enter
cmpsl
loop
cmp
push
mov
jle
int
icebp
iret
dec
in
shll
pusha
popa
pop
xchg
adc
mov
ror
lahf
add
adc
test
xor
sbb
sub
push
jle
cmpsl
gs
loop
dec
pop
xchg
jne
fucomp
cmp
dec
sub
xor
pop
jo
xchg
cmp
mov
inc
jb
fidivrl
dec
xchg
xchg
data16
xor
mov
xor
cmp
xchg
imulb
push
mov
lret
add
add
cmpsl
and
mov
mov
mov
sub
pop
daa
adc
jnp
mov
loope
loopne
push
inc
pop
fwait
iret
sub
cltd
adc
in
mov
jp
test
inc
aad
fldl
xorl
jp
daa
jns
mov
test
inc
in
bound
cli
xchg
std
and
in
or
hlt
jl
out
mov
je
add
jae
inc
jp
adc
jecxz
enter
xor
xchg
sarb
jl
xorb
mov
popa
out
hlt
xchg
jnp
into
xor
insb
lock
pop
fstpl
jb
into
mov
fistl
sti
fisubrl
inc
data16
sub
fcomi
shlb
pop
call
into
adc
and
popa
aam
dec
insl
mov
jb
or
inc
ss
push
call
in
lret
sbb
add
cltd
les
les
arpl
and
lahf
shlb
dec
add
mov
call
lock
xchg
in
decb
mov
into
adc
jg
cwtl
out
gs
dec
flds
stos
pop
inc
jg
xchg
mov
in
dec
mov
sub
jle
incb
push
mov
test
sbb
pop
mov
fsubl
out
lods
cmpsl
fidivs
push
and
pop
mov
arpl
loop
cmpl
sbb
dec
add
cmp
int
inc
fwait
adc
or
and
xchg
aad
jnp
mov
lret
cmc
in
lahf
cltd
cmp
movsb
jecxz
lret
icebp
imul
mov
fstps
push
imul
sbb
xchg
mov
test
repnz
leave
xchg
jg
lock
adc
xchg
lret
jne
fdivrl
mov
ds
sub
fsubp
movsl
push
push
loope
jne
std
sti
dec
dec
fistpll
cld
shl
lds
aas
js
mov
xor
aaa
jne
je
xchg
idivb
in
out
jmp
mov
add
cmp
test
or
aaa
pop
jp
sbb
cli
pop
rcrl
jge
imul
hlt
adc
iret
mov
jle
cmpsl
push
sub
loope
cmpsl
pop
int
and
adc
ficoms
jge
xor
divb
imul
out
push
jno
xchg
test
or
xchg
sub
xor
scas
push
mov
repz
cmpsb
iret
sub
cli
aad
fstpl
sub
push
push
mov
inc
cmp
fidivrl
pop
dec
pop
add
mov
or
mov
jmp
jnp
mov
arpl
negb
push
repz
scas
sub
pop
and
add
jnp
jb
pop
jno
aas
rclb
jp
jle
mov
or
cmp
iret
inc
js
scas
insb
inc
mov
aad
inc
jl
add
adc
insl
stos
out
sub
push
jl
pcmpeqd
mov
add
cli
xchg
movsb
jb
daa
pop
scas
out
outsl
push
jb
int3
mov
aas
repz
outsb
or
sbb
das
fst
lcall
iret
insl
xor
cltd
sub
test
pop
mov
or
ja
push
or
leave
lret
and
repnz
outsl
cmp
jecxz
xorl
fs
aaa
movsb
lea
shll
jle
hlt
insb
outsb
sub
jne
mov
daa
mov
cmp
mov
mov
mov
mov
shlb
sarl
or
dec
sbb
sub
sbb
pop
cmp
pusha
cmpsb
int
cmpsb
jns
loope
hlt
mov
add
push
in
sbb
lods
xchg
xor
pop
push
xchg
scas
add
inc
lea
mov
fwait
ret
mov
lret
dec
popf
sub
fdiv
out
mov
insb
cmp
add
mov
inc
loope
arpl
ficomps
shlb
sbb
pop
ret
add
adc
rolb
cmp
inc
ljmp
and
fwait
mov
push
nop
mov
jo
loopne
jle
dec
icebp
xor
jbe
out
aas
or
mov
jge
adc
lret
popa
dec
nop
mov
outsb
sub
int
pop
pop
imul
push
in
mov
push
cmpb
aam
adcl
fistpl
hlt
stc
push
es
outsb
inc
mov
mov
cmp
and
jns
jns
lret
xchg
jmp
adcl
cli
sbb
in
in
rorl
adcl
mov
scas
ljmp
xchg
iret
pop
xchg
arpl
push
mov
mov
sbb
dec
mov
inc
ss
push
sti
jg
and
addb
out
mov
jno
mov
les
mov
or
in
movsl
add
sbb
std
test
rcl
into
mov
push
notb
mov
push
mov
push
fsubrl
lret
cmc
push
test
mov
pop
ljmp
loope
pop
pop
dec
jo
xchg
sub
insl
movsl
adc
fsubrs
jno
in
ja
mov
and
xor
lcall
lods
add
xor
adc
daa
arpl
mov
cmp
mov
cld
inc
cmpsl
call
sarb
mov
repz
adc
jbe
jo
rcrb
mov
push
mov
push
mulb
or
inc
dec
xchg
stos
add
cli
inc
shrb
inc
fmulp
adc
jb
xchg
rsm
lods
cmp
cmp
jecxz
pop
pusha
out
cs
aas
repnz
sub
inc
movsl
or
outsl
les
inc
loope
sbb
xchg
sub
filds
push
jns
xor
xor
stc
outsl
sahf
fs
sbb
xchg
paddw
insb
jae
jmp
rorl
arpl
js
push
fildll
rorl
das
xor
ja
data16
pop
dec
xchg
movsb
jge
es
jnp
aaa
mov
xchg
pop
sbb
dec
or
pop
data16
xchg
xchg
out
sarb
shl
lods
pop
dec
adc
xlat
fsubr
pop
sbb
dec
scas
mov
and
fs
out
dec
mov
out
xor
int3
adc
or
push
pushf
imull
mov
ja
sub
rorb
rol
pop
cmc
push
mov
out
pop
sbb
lea
lods
repnz
daa
jmp
sbb
pop
xor
into
xchg
out
and
sbb
aad
or
sub
jne
and
sahf
arpl
sbb
aas
jp
sbb
fimuls
rcrb
jecxz
lds
lcall
mov
xchg
shl
shlb
push
incl
clc
sbb
mov
ret
xchg
push
adc
mov
push
icebp
push
cmp
inc
out
adc
xor
aad
jae
fcom
jae
cld
and
sahf
dec
and
out
cmpsb
fcmovnb
dec
mov
mov
mov
in
mov
dec
mov
xor
xor
add
adc
mov
fucomi
or
aam
and
and
cmc
inc
fcomi
dec
or
loop
lods
sbb
cmpsl
dec
aas
cmp
pop
cmp
cmp
pop
push
inc
inc
or
and
test
cltd
jge
mov
or
into
scas
sub
adc
cmp
fcmovne
addr16
sbb
cmp
mov
add
mov
loop
lock
dec
scas
ret
loop
out
repnz
andb
lock
lcall
xlat
add
jno
cli
mov
inc
xor
mov
div
or
mov
rol
mov
loope
inc
sbb
negl
sti
pop
pop
imul
or
mov
movl
sub
xor
or
pop
jg
sub
faddl
jmp
dec
inc
inc
sub
jo
ret
out
or
lret
dec
arpl
pop
xchg
lods
mov
test
ljmp
int3
cmp
mov
xchg
in
div
fcmovbe
add
outsb
mov
out
push
mov
pop
push
xor
mov
out
js
imul
jl
aas
adc
mov
mov
sti
and
push
pop
mov
loopne
pushf
push
clc
cmp
int3
lods
push
lock
pop
cli
push
shl
mov
insl
mov
orl
add
cmp
pop
iret
dec
pop
sti
stos
pop
dec
mov
mov
add
outsb
dec
pusha
ret
pop
inc
and
push
push
xor
mov
jns
aad
mov
cmp
shll
pusha
jo
movnti
jne
xchg
arpl
adc
adc
cmpsb
sti
sbb
out
cld
sub
and
les
cmp
pop
mov
push
push
movsb
dec
ret
roll
das
insb
iretw
inc
pop
data16
push
hlt
jl
xor
add
mov
add
xor
sub
jl
imulb
dec
lock
add
add
or
mov
add
xchg
in
mov
rcrb
and
cmpb
mov
or
mov
and
adc
dec
lea
push
je
and
cs
cmp
inc
adc
push
xor
icebp
loop
ss
test
jecxz
and
adc
je
shr
push
dec
in
dec
inc
fcompl
adc
xor
cltd
fsubs
cmp
xchg
or
or
cmp
cmp
xchg
pop
cmp
jb
pushf
cmp
xchg
fbstp
mov
fld
sub
xor
es
aas
int3
xchg
adc
mov
rcrl
mov
ss
cmpb
cltd
lock
inc
add
sbb
mov
push
repnz
push
int3
add
pop
es
lret
cmpsl
push
movsl
xchg
dec
add
jmp
aad
push
add
and
or
fisttpll
js
sub
outsl
lret
add
mov
sbb
push
pop
out
pop
mov
orl
push
xor
add
push
dec
inc
pop
jg
loop
mov
or
inc
stc
movsb
cmpsl
dec
cld
daa
xor
push
jg
sti
das
ds
mov
dec
mov
xchg
inc
jl
pushf
addr16
sarl
outsl
in
sbb
pop
fdivp
add
jo
pop
test
and
add
lods
ss
adc
xchg
push
std
and
adc
jle
push
pop
aam
jo
cmp
fs
cmpsl
je
out
jns
cmp
dec
lea
jno
out
dec
arpl
stos
or
inc
push
xor
pop
daa
ja
or
ret
cltd
into
push
fdivl
and
mov
rclb
jnp
bound
mov
xor
iret
jns
js
mov
add
mov
aas
sub
lea
stc
mov
enter
hlt
sbbb
adc
test
in
push
push
das
and
enter
mov
dec
lock
pop
sub
sbb
mov
lods
andl
mov
jecxz
shll
jle
pop
es
outsb
stos
jp
push
out
sbb
xor
add
inc
aad
enter
inc
sub
add
xchg
je
jle
fisubrl
push
pop
ud1
pop
mov
enter
movsl
jmp
outsl
mov
jecxz
dec
mov
pop
pop
lds
push
nop
cmpsb
xchg
dec
adc
add
and
out
icebp
inc
jle
push
lock
lret
shl
mov
decl
rolb
mov
mov
ljmp
filds
shrb
jg
cli
or
daa
imul
fldt
lea
orl
js
aad
xchg
xlat
add
cltd
dec
sbb
sbb
inc
je
clc
cmp
fisubl
out
add
incb
jns
iret
inc
nop
ljmp
pop
or
jge
aaa
data16
loopne
inc
cmp
clc
fwait
hlt
pop
sub
addr16
jecxz
mov
cmp
ror
imul
js
fcomi
push
nop
sbb
fisubrs
xor
mov
adcb
jo
jne
pop
lcall
out
test
adc
mov
icebp
lahf
and
clc
lea
bound
mov
fyl2xp1
icebp
sub
mov
and
aas
aas
adc
mov
pop
inc
repz
xor
xchg
shrl
ja
sub
lahf
sahf
leave
mov
shll
mov
add
push
lods
adc
cmp
push
pushf
fcomps
pop
sarb
je
rorb
sub
dec
jb
xchg
and
mov
mov
nop
add
sub
mov
fs
dec
test
add
shrb
sbb
arpl
shrl
add
mov
cmp
mov
xchg
adc
inc
not
andl
std
ret
and
mov
mov
call
or
or
adc
pop
adc
push
js
mov
jnp
jge
or
cmp
add
pusha
pop
cld
std
add
mov
rcr
mov
pushf
and
add
push
sbb
push
daa
das
test
call
arpl
rorl
xor
mov
pop
cltd
adc
icebp
xchg
dec
or
pop
ljmp
inc
repnz
push
das
mov
call
push
in
sub
xchg
dec
arpl
xchg
arpl
push
xor
cmp
shlb
imul
mov
push
sub
mov
shll
dec
xchg
jmp
sbb
aam
push
repz
in
mov
test
mov
shrl
cmp
daa
inc
mov
outsb
aaa
adc
fnstenv
aaa
mov
adc
pushfw
xor
sbb
push
mov
adc
push
fwait
mov
cs
mov
ror
mov
inc
movsb
sbb
stc
leave
add
push
ret
pop
rorb
sub
mov
loopne
loop
or
jg
ror
adc
call
push
xchg
push
jno
fstl
mov
pop
insb
adc
jo
pop
inc
out
movsb
addr16
repz
or
gs
mov
jmp
data16
fbstp
add
dec
rcrl
push
aas
std
dec
pushl
mov
cmpsb
add
lea
test
jp
pop
out
xlat
lods
cmpsb
aas
mov
mov
lods
sub
sbbl
adc
xor
jns
cld
fdivrl
ss
in
imul
notb
nop
xor
aam
inc
test
insl
scas
cmp
outsb
mov
sub
test
pop
sbb
pop
dec
adc
icebp
xchg
xchg
into
xchg
out
fprem1
cmpsl
add
xchg
sub
addb
sbb
shlb
and
mov
sbb
lahf
pop
sbb
les
mov
dec
xor
pop
lock
pop
cmp
cmpsl
mov
mov
popl
dec
mov
dec
loope
mov
outsb
test
sbb
dec
rcrl
and
aam
push
aam
aaa
push
hlt
loop
push
test
ss
inc
lock
std
push
lret
mov
cwtl
add
inc
lahf
lahf
and
pop
xchg
jb
test
sub
xor
imul
cmp
lahf
out
and
cmpb
and
mov
pop
test
in
repz
pushf
std
pusha
repz
rcr
rclb
in
mov
xchg
mov
mov
xchg
cmp
pop
cs
daa
test
mov
pushf
push
fdivrs
pop
inc
mov
xchg
inc
push
pop
mov
inc
jno
add
dec
inc
test
pusha
gs
pop
mov
mov
rorl
sbb
stc
fwait
xchg
jbe
fistpl
gs
cltd
sub
lods
push
xchg
repnz
mulb
xor
add
or
or
adc
xchg
out
in
sbb
ljmp
mov
mov
test
jne
inc
jecxz
mov
ja
test
jne
pop
mov
xchg
mov
ffreep
fdivrp
mov
movaps
mov
lret
out
mov
xchg
popa
pusha
push
jle
pop
leave
mov
push
adc
ss
clc
sub
or
scas
mov
xor
les
xchg
mov
mov
push
cli
fisttps
pop
cmp
cmp
sbb
sub
inc
ret
outsb
cmc
mov
mov
incl
push
imul
jbe
pop
pushf
cwtl
mov
sbb
xor
push
xor
insl
mov
imul
clc
xor
scas
jmp
dec
fsubrl
sub
fnsave
aaa
dec
out
xchg
popa
loopne
int
addr16
xchg
cmpsb
or
sub
int
scas
test
xor
push
adc
bound
mov
test
out
xor
stos
jo
mov
push
mov
xor
insl
or
inc
into
fisubrs
mov
std
xchg
mov
faddp
mov
push
daa
add
aam
dec
dec
dec
je
xor
cmpsb
jns
fucomp
xlat
cs
and
shlb
shrl
inc
ja
int
or
std
sbb
jl
gs
andb
popf
pop
push
gs
int
and
mov
push
imul
imul
or
or
or
cld
or
js
aad
cmp
cmpsl
leave
cli
cmp
dec
inc
xchg
sub
in
cmp
movsl
or
cmp
pop
arpl
and
mov
mull
adc
mov
imul
sbb
push
jmp
add
mov
sub
push
in
jmp
movsb
repnz
daa
loopne
in
xchg
inc
mov
pusha
xchg
push
lds
sub
cmp
or
dec
inc
cmpsl
xchg
in
insl
cltd
nop
sarb
add
ret
pop
sub
cmc
out
outsb
jno
popf
sbb
mov
movsb
daa
loope
lods
std
mov
jbe
iret
or
stos
lds
int3
nop
push
sub
xor
sub
lods
lahf
cli
sbb
nop
cli
jnp
mov
mov
pop
push
push
insl
fstpl
fidivrs
cmc
and
mov
dec
cmp
ja
adc
fsubr
fisubrs
push
sbb
sub
push
or
push
fmul
jns
pop
testb
nop
ss
pop
fsub
rcll
cli
mov
adc
xlat
cmpsb
mov
mov
fsub
lock
imul
push
sti
sub
or
or
mov
inc
hlt
add
das
cs
and
test
sub
stc
pushf
push
pushf
sub
cld
inc
data16
mov
push
sbb
adc
add
push
das
jge
adc
jg
mov
xchg
and
xchg
ds
lahf
ss
jb
iret
jg
cmp
pop
and
aam
mov
sub
push
xchg
sbb
mov
sub
divb
and
jae
mov
es
mov
xor
fisttpl
imul
test
jmp
cmpsb
mov
xor
mov
lock
retw
pop
cmpsl
mov
pushf
jl
scas
jnp
pop
push
cltd
fcompl
shrl
sub
int3
jo
int3
adc
inc
sahf
jbe
xchg
inc
pop
int
repz
xor
sub
sbb
or
inc
adc
mov
aad
int
mov
xor
repnz
int3
rclb
fs
inc
sbb
mov
sub
mov
xchg
and
jne
clc
jbe
fldenv
jb
in
int
push
cmp
test
pop
lahf
sbb
xchg
add
icebp
fstps
mov
add
inc
or
mov
add
hlt
xor
jg
repnz
ljmp
or
add
loope
mov
inc
rsqrtps
cmpsb
shrl
adc
cmpsl
add
push
or
mov
sahf
or
lods
popf
push
or
inc
push
mov
pop
xchg
fwait
dec
fdivrl
lcall
pop
add
arpl
jge
lock
ljmp
dec
sete
loop
rcrl
jo
and
test
add
or
or
jge
add
aaa
ret
pop
mov
pop
repnz
adc
sbb
roll
mov
sub
sahf
movsb
loopne
cli
faddl
pop
mov
xchg
mov
dec
hlt
fcoml
dec
mov
sahf
add
or
or
sbb
sbb
imul
sub
pusha
xchg
cwtl
loope
and
cmpl
out
mov
push
in
sti
add
jno
call
add
mov
fnsave
aam
mov
imul
int3
paddd
pop
pop
jb
lcall
xorl
movsb
dec
emms
mov
das
and
ret
sub
mov
icebp
pop
push
cmp
pusha
aad
cmc
scas
roll
push
jns
stc
jl
imul
imul
into
in
lds
push
adc
rcrl
xchg
mov
daa
ja
insl
aad
jmp
mov
push
jg
es
sub
clc
mov
jmp
imul
orl
add
mov
das
inc
mov
or
scas
mov
mov
dec
sub
adcl
mov
es
mov
add
cmc
cmp
and
enter
and
jl
mov
xor
insb
push
pop
bound
cmp
enter
test
xchg
addr16
or
in
adc
stos
loop
pop
cmp
cs
pop
stc
xor
mov
jne
add
sbb
fwait
mov
sub
push
push
data16
stos
inc
pop
scas
push
lods
pop
lds
hlt
fiaddl
jp
push
cwtl
or
sahf
cwtl
not
inc
sahf
xlat
sub
loope
xor
cli
mov
mov
xchg
not
shll
mov
dec
pop
fistps
adc
mov
out
cmpsl
mov
cmpsl
cli
push
test
inc
dec
sti
inc
lahf
aas
sbb
push
or
out
fiaddl
loope
test
popa
out
jns
push
jne
rclb
pop
mov
stc
testl
addr16
lret
les
aaa
cmp
push
insb
test
mov
gs
mov
cs
pop
movsb
js
push
pop
mov
mov
lock
dec
jbe
mov
shr
jnp
imul
dec
push
add
jg
out
sub
mov
arpl
insb
sub
outsb
jne
fistpl
push
aad
push
cmp
xchg
arpl
adc
mull
xchg
test
push
push
std
out
data16
push
in
addr16
xorb
clc
dec
scas
sub
imul
int
push
adc
inc
shlb
nop
ss
add
or
mov
out
adc
insl
mov
pushf
jp
ja
subb
add
jae
mov
xor
fs
pushf
push
mov
mov
push
mov
imul
ljmp
jecxz
outsl
dec
dec
jbe
les
pop
icebp
jmp
out
mov
jmp
dec
dec
jmp
ljmp
cli
fs
sarb
imul
out
inc
lahf
loope
cmpsl
mov
sub
sub
scas
mov
popa
scas
js
pushf
and
cltd
or
stc
shll
jmp
mov
js
rdpmc
inc
rcrb
jg
or
or
jmp
sbb
jnp
jbe
idivb
in
push
mov
adc
or
insl
xchg
sub
sbb
sub
add
cmp
or
push
add
or
or
call
push
aam
jnp
push
notb
mov
mov
bound
jno
leave
inc
das
add
adcb
cmpsb
inc
jge
mov
dec
xchg
xchg
inc
dec
push
xchg
push
lahf
arpl
shl
sub
or
fidivrs
cmp
lcallw
dec
loopne
movsb
add
sar
xchg
push
mov
and
repz
sub
xchg
cs
dec
es
jmp
aad
imul
dec
jmp
loopne
xchg
jne
scas
cltd
cs
push
out
js
or
scas
scas
xor
cltd
insl
or
add
nop
adcb
adc
add
lea
sub
outsl
sub
repz
mov
test
xor
xchg
push
cli
adc
xor
push
sarl
repz
inc
jae
outsb
es
pop
ds
push
and
ds
out
clc
lahf
mov
out
pop
stc
xor
in
test
push
adc
addr16
inc
adcb
aas
sbb
mov
and
mov
mov
out
dec
dec
mov
pushf
repnz
scas
lock
sbb
mov
scas
adc
not
push
sub
out
inc
movsb
icebp
lret
xchg
pop
dec
lock
je
jl
push
test
sub
sbbl
adc
movb
xor
lock
xchg
out
xchg
ds
movsl
jl
pop
xor
lcall
jne
test
adcb
xchg
inc
xlat
out
jl
and
cmc
cltd
push
lret
pop
in
movsb
jmp
and
arpl
xchg
loopne
push
leave
add
push
pushf
sbb
and
jl
nop
in
shlb
inc
dec
int
push
popa
ja
sub
cmp
mov
cld
lock
mov
push
nop
lds
lea
sarl
cmp
hlt
jno
lret
cmp
outsb
inc
or
ljmp
mov
ss
push
pop
jg
lods
andb
sub
enter
out
inc
mov
add
loope
xlat
sbb
sub
mov
ljmp
xchg
push
xor
dec
in
mov
ds
in
mov
jne
sbb
cli
sti
sbb
or
or
rolb
add
outsb
push
xchg
out
mov
mov
pop
cmpl
sbb
pop
xchg
dec
mov
dec
sbb
sbb
lods
lock
xor
jbe
mov
leave
pop
jbe
and
or
jmp
dec
and
inc
or
leave
mov
cli
mov
fimuls
arpl
sbb
or
pusha
cmpsb
pop
sarb
mov
jp
xor
mov
in
push
je
jge
cmp
pop
push
std
sahf
and
fists
dec
in
jno
jmp
pop
cmp
mov
inc
jae
jae
dec
jg
push
pop
loopne
xchg
fbstp
sarb
cli
mov
lods
mov
popf
out
fiadds
cld
mov
push
push
fnstenv
dec
xor
pop
jmp
cltd
loop
xor
mov
scas
sub
cwtl
add
jle
pop
jno,pn
add
iret
movsb
jecxz
mov
nop
add
push
stos
repnz
mov
add
fwait
mov
cmp
sbb
fnstcw
jmp
pop
out
lods
and
jns
mov
xchg
mov
cmpsb
jnp
lret
lcall
push
rcl
pop
and
jo
cmp
mov
hlt
leave
popa
sub
lds
sbb
sub
hlt
push
xlat
cli
shrl
je
mov
adc
or
xchg
aad
xchg
hlt
add
lcall
in
scas
mov
repnz
adc
mov
rolb
xchg
push
fcomps
fcomi
sbb
ret
jge
ss
lods
inc
and
loope
sti
daa
cs
repz
and
jno
dec
push
push
jge
rol
ja
pop
scas
mov
dec
in
icebp
roll
loopne
jmp
addr16
sbb
inc
or
enter
imul
or
leave
xchg
push
out
cmp
divl
fisttps
mov
and
subb
mov
push
sbb
xchg
stos
sbb
dec
dec
outsl
cmp
out
out
pushf
aam
push
push
dec
enter
outsl
push
or
mov
xchg
pop
add
pop
mov
les
jmp
in
xor
mov
push
pop
push
cmpsb
jl
aad
jg
jnp
lcall
andps
ret
sarl
mov
imul
lea
in
xchg
clc
and
lock
cmp
fwait
outsb
adc
cli
ds
xor
into
testb
mov
xlat
into
test
push
hlt
adc
inc
push
or
data16
repnz
pop
lea
test
imul
addb
adc
dec
in
mov
pushf
dec
repnz
mov
imul
ret
dec
icebp
add
icebp
xchg
cmc
pop
rcll
inc
mov
jno
out
fucom
leave
mov
pop
add
mov
inc
mov
mov
mov
std
mov
cmp
cmpsl
fadd
loopne
push
or
and
mov
bound
pop
into
cmp
cmp
in
mov
push
lcall
ds
pop
int
mov
mov
dec
sbb
pushaw
jns
xor
push
mov
cmp
lcall
cld
xchg
repnz
xchg
pushf
sbbl
in
inc
push
pop
mov
inc
dec
xchg
xor
test
add
sbb
fisubrs
sbb
push
sub
mov
pushf
inc
sub
inc
shlb
cmp
pop
out
xor
dec
es
cmp
adc
addb
cmp
lock
movsl
or
push
dec
lock
and
xchg
test
pop
jle
xchg
mov
popf
dec
xchg
xchg
loop
insb
rcl
lods
mov
into
jg
cmp
cld
clc
fimuls
cmp
pop
rcr
je
lret
mov
jbe
xchg
sbb
in
inc
rcrb
iret
xor
jl
rolb
icebp
sbb
jge
ret
mov
mov
jecxz
dec
out
mov
insb
cmp
sbb
aaa
in
loop
je
mov
push
fwait
dec
jp
mov
pop
out
shlb
xchg
sbb
mov
das
ljmp
xor
mov
testb
push
mov
dec
rcll
and
fldenv
adc
jbe
mov
mov
repz
sbb
fnsave
loope
push
insl
rolb
lods
cmc
insb
pop
and
add
sub
cs
sub
arpl
shlb
add
aam
fidivrs
pusha
push
loopne
xchg
das
mov
fadd
mov
jbe
pushf
and
rolb
mov
push
repz
pop
movsb
cmp
outsb
popa
jle
push
lds
clc
test
ss
lock
clc
rcrb
mov
or
movl
jmp
mov
push
mov
sbb
xchg
inc
jno
add
mov
cli
aam
push
mov
out
data16
mov
out
mov
pop
aam
dec
shlb
cltd
sarb
or
test
pop
stc
iret
nop
jnp
mov
movsb
in
scas
lahf
push
and
sub
loopne
push
inc
dec
pop
mov
into
mov
mov
cmp
fnstsw
mov
add
fldl
push
mov
out
je
sbb
xchg
arpl
cmp
lret
dec
dec
mov
pusha
cmpsb
fnsave
andb
fmull
jno
dec
jno
and
dec
sbb
cmp
sbb
pop
addl
stos
add
out
iret
neg
dec
loopne
lret
mov
scas
inc
daa
sbb
hlt
sbb
mov
andl
xchg
lret
cld
orb
jl
push
adc
pop
arpl
or
lock
fnstenv
lret
aaa
xchg
rcrl
bound
and
in
xchg
inc
das
out
ret
rcrb
test
dec
dec
ret
cmpsb
jns
jno
push
out
outsl
es
mov
push
sbb
cmp
and
test
add
mov
rorl
xchg
sub
aas
pop
or
pop
ja
pop
inc
dec
data16
ret
mov
dec
mov
hlt
lock
adc
jae
test
pop
push
fstpt
sti
sbb
xor
push
jle
repz
icebp
cmpl
outsb
xor
push
aam
push
leave
dec
data16
inc
cmp
subl
loopne
sub
mov
aaa
xor
test
dec
movsb
das
fs
rcrl
jl
jbe
xchg
leave
inc
push
movsl
mov
push
ljmp
xor
lock
jge
ret
xchg
mov
mov
mov
iret
iret
jnp
sbb
pop
popa
inc
aaa
pop
cmp
mov
ret
addr16
ds
imul
lock
and
rcr
or
stc
cs
or
jmp
mov
mov
and
clc
xor
mov
loop
adc
jecxz
movsb
outsb
loop
cmpsl
fcmovnbe
stos
ret
std
sbbl
shll
dec
popf
roll
lcall
in
dec
cmc
xchg
cmp
mov
test
sub
in
pop
aaa
pop
mov
clc
xchg
jae
aam
and
inc
jle
inc
xchg
imul
add
mov
or
into
sbb
or
add
mov
add
jmp
out
xchg
xchg
push
call
pop
push
scas
mov
int
andl
test
mov
loop
jecxz
lret
test
push
insl
dec
pop
dec
pop
mov
push
push
add
in
adc
addr16
mov
cwtl
mov
add
ljmp
fdivl
pop
xchg
push
sbb
xchg
xor
lock
jno
push
inc
mov
popf
xchg
inc
jp
out
das
adc
out
rclb
push
xchg
mov
scas
je
fisubl
arpl
cmpsb
mov
mov
sub
inc
jle
arpl
scas
fs
jmp
lcall
mov
dec
add
mov
in
loope
cwtl
iret
push
mov
roll
jae
rolb
inc
std
or
jmp
jp
fisubl
out
sub
ret
xchg
jb
mov
fisttpl
jmp
std
fcompl
test
xor
outsb
mov
outsb
js
mov
jns
ja
and
mov
loope
aaa
xor
and
shlb
mov
lods
movsb
mov
or
xchg
sub
dec
add
jl
stos
popa
cmp
in
inc
adc
jecxz
mov
aaa
jnp
in
dec
test
out
lret
out
mov
call
mov
jp
jnp
call
ficomps
das
jne
jl
mov
into
lcall
sbb
es
sbb
pop
cmpl
enter
mov
mov
dec
dec
lahf
pop
fisttpl
sub
in
mov
or
nop
sbb
ds
push
jp
mulps
jb
and
push
inc
cmp
nop
dec
divl
hlt
out
cmp
cmp
repz
lods
stc
nop
push
std
inc
movl
mov
push
push
aas
jnp
jl
loopne
and
divb
lcall
filds
arpl
aam
xor
add
and
popf
icebp
and
lods
jmp
xchg
mov
xor
mov
not
jno
or
sbbl
les
pop
test
divl
dec
sarl
pop
sbb
daa
xlat
setge
xor
or
and
mov
repnz
mov
push
jmp
stos
sub
test
push
add
pop
std
jle
popf
into
test
cld
out
cmpsb
cmp
cmpsb
jne
jle
adc
pop
fistl
xchg
jne
xchg
cltd
ror
cwtl
fsubr
fcmovb
pusha
mov
sbb
inc
xorl
dec
aas
repz
push
inc
adc
fidivl
daa
add
stos
es
sub
lods
push
nop
sbb
jmp
pop
mov
aam
and
data16
dec
sub
cmpsl
fstps
shll
cmp
or
adc
sbb
aaa
out
or
adc
and
or
popf
fidivrs
fs
daa
fiadds
xor
rcrl
inc
daa
push
mov
out
pop
popa
dec
test
ds
jo
pop
in
icebp
sbb
mov
adc
push
popa
mov
scas
sti
lret
leave
jle
xchg
call
or
pop
ret
pop
mov
or
pop
cs
adc
add
dec
and
adc
pushf
movsl
pop
add
adc
ret
inc
jns
pop
add
cmpsl
mov
mov
xchg
std
mov
inc
and
into
inc
imul
je
out
ficomps
out
add
mov
insb
insb
test
rcrb
dec
inc
mov
mov
xchg
add
dec
inc
jae
push
sbb
xchg
cmp
loope
add
popa
dec
lock
push
cmp
iret
sbb
ljmp
jmp
bound
addl
or
movsb
bound
cmp
dec
mov
mov
insl
add
icebp
stos
cld
jecxz
push
xor
sub
cmp
stc
je
xchg
aad
pop
test
fs
insb
push
add
xchg
jg
cltd
or
mov
or
xor
out
pop
add
cmp
cltd
lcall
int
xchg
lcall
and
popa
mov
mov
cli
cmp
std
not
add
or
lahf
loopne
popa
in
and
mov
push
fwait
dec
rcrl
sub
jbe
inc
mov
cmp
add
sbb
arpl
sub
xlat
dec
enter
jp
sub
cmp
cld
movq
fs
inc
jo
insb
or
xor
mov
push
sbb
push
xchg
dec
icebp
loop
pop
decl
sub
ja
sbb
enter
sbb
jge
daa
cmpl
push
and
inc
add
mov
jnp
dec
movsb
xchg
les
sub
inc
jno
sahf
icebp
in
das
sub
sbb
mov
popf
icebp
mov
dec
aam
jns
ja
pop
pop
dec
enter
xchg
pop
and
mov
sub
cmpsl
jge
lock
leave
fbstp
shrb
push
rorl
push
jle
aaa
aad
push
pusha
and
inc
aas
insb
std
out
jmp
sbb
adc
arpl
orl
pop
push
pusha
mov
imul
repz
jge
std
lret
sahf
or
and
mov
add
jns
js
cmpb
pop
lock
fildl
pop
dec
lret
mov
dec
dec
test
out
mov
xchg
adc
pop
rolb
frstor
xor
mov
insb
push
jp
push
jl
jp
xchg
lods
mov
push
cmp
aaa
shll
inc
stos
gs
mov
pop
sarb
loopne
repnz
pop
add
gs
mov
rcrl
cwtl
jnp
push
cmp
push
movsb
dec
mov
sub
outsl
cltd
inc
sbb
and
jecxz
push
mov
lea
add
stc
sub
pushf
adc
aam
or
enter
sahf
jo
rcl
hlt
fimuls
inc
into
mov
rcr
arpl
xchg
pop
mov
sbb
test
addb
add
lea
rorb
lcall
fisubl
arpl
push
fstps
rolb
xchg
sub
push
lods
mov
mov
arpl
xorb
aas
or
cmp
jg
ds
movsb
xchg
jl
push
sbb
fistpl
iret
call
test
pop
orb
lret
or
fisubs
jae
rcr
push
ss
jns
cmc
cmp
add
jne
jle
stc
adc
mov
jno
shll
rol
add
xlat
sbb
ja
adc
movsb
cmpsb
repz
fadds
sahf
pop
js
jno
dec
push
ficomps
mov
mov
sarl
cmpsb
adc
nop
ret
mov
mov
and
stc
cwtl
jle
dec
or
in
mov
out
mov
and
mov
lcall
fistps
dec
jle
std
fstps
and
jle
lcall
lods
call
add
pop
outsb
xor
jbe
inc
xor
or
ret
mov
inc
xchg
add
jnp
add
or
xor
add
stos
dec
rclb
jno
mov
sbbb
movsl
mov
call
aas
ljmp
mov
or
ret
adc
jmp
pop
or
test
pop
sub
mov
inc
sbbb
sti
ftst
bound
mov
aad
fwait
inc
inc
arpl
mov
jno
or
inc
incl
mov
out
pop
inc
stos
pop
pushl
int
movsb
arpl
es
les
add
imul
fmul
mov
push
popf
and
lcall
or
lret
leave
inc
pop
sub
outsb
std
cmc
fcmove
push
add
fsubr
push
cwtl
rcll
and
dec
mov
inc
and
test
inc
push
in
adc
jmp
out
lret
add
mov
push
jg
jae
lods
sbb
or
test
dec
inc
xor
outsl
cld
aad
pop
scas
loope
mov
and
in
insb
cmp
stos
neg
xchg
test
push
std
add
xor
mov
mov
pop
or
mov
insl
mov
and
mov
and
mov
repz
or
scas
test
inc
in
leave
or
std
es
int3
cwtl
jno
and
in
scas
lret
mov
jmp
lcall
inc
cmp
rorb
rorb
jge
in
aaa
pop
mov
dec
inc
push
adc
xchg
test
add
dec
pop
lods
sub
cmovo
mov
jmp
test
push
pusha
loopne
repz
adc
mov
dec
dec
fldl
mov
stos
out
mov
data16
ret
cmp
repz
jbe
pop
xchg
cmp
loopne
aas
add
std
mov
into
inc
sbb
adc
rolb
mov
push
shlb
aaa
mov
cwtl
cmpsl
jecxz
xchg
pop
fstpl
lret
mov
nop
mov
inc
jecxz
repnz
fistps
push
shll
or
sbb
fists
imul
aaa
jo
je
mov
pop
sti
cld
pushf
mov
ficompl
adc
jl
cld
roll
adc
lcall
sub
xchg
aaa
xlat
mov
cli
sbb
mov
ljmp
repz
lods
jnp
lock
fsubrs
jns
aaa
shll
jb
mov
pop
idivb
lcall
lea
mov
push
sub
jecxz
movsl
dec
sbb
adc
enter
dec
sbb
shrb
mov
lods
jnp
cwtl
outsb
and
xor
mov
mov
insb
dec
in
adc
or
pop
mov
pop
fisubrl
test
push
push
cmpsb
push
cmc
push
jle
sbb
scas
imul
loop
pop
pop
lahf
push
mov
lret
cmp
ljmp
jecxz
lds
ss
mov
jb
or
sbb
sub
aaa
sub
cbtw
in
loop
insb
les
mov
out
int3
call
roll
jbe
movsl
icebp
stos
adc
clc
scas
and
fstl
mov
movsb
shl
stc
dec
lock
fdivrs
or
jns
leave
mov
sbb
jp
mov
outsl
popa
loop
jle
sub
mov
jne
inc
imulb
xchg
jecxz
mov
mov
sbb
mov
das
xchg
mov
in
sub
outsl
inc
jmp
fwait
or
sarb
mov
dec
dec
adcb
xchg
mov
mov
imul
xchg
sbb
dec
mov
aas
iret
scas
shl
shrb
out
das
call
hlt
fmul
lcall
and
dec
leave
inc
adc
xor
mov
xor
stc
dec
xchg
repz
bound
imul
jo
mov
xor
inc
je
mov
pop
pop
shr
add
imul
adc
sub
aad
rcrb
cmc
ss
movsb
sub
adc
sub
cmpsb
ljmp
and
jge
outsb
std
div
mov
loop
add
in
mov
leave
mov
xor
inc
jle
xorb
in
ja
movsl
push
scas
fs
push
nop
test
dec
sbb
test
lahf
insl
inc
inc
test
and
sbb
outsb
add
xor
push
pop
test
pop
sub
lods
es
pushf
ja
xchg
into
mov
movsl
mov
cmp
pop
dec
lock
nop
push
ds
sbb
inc
sbb
daa
push
loopne
insb
ret
cwtl
add
mov
lret
insl
mov
cmc
mov
inc
mov
adc
shrl
cmp
mov
jmp
mov
xchg
jnp
cmp
mov
adc
mov
sahf
xchg
xlat
inc
movb
mull
and
cltd
push
inc
fcomps
cltd
push
xor
add
xor
mov
xchg
movsl
in
test
fistl
jge
jns
lret
mov
inc
lock
mov
xor
fildl
popf
pop
int3
clc
inc
jnp
inc
sbb
pusha
lds
dec
das
fs
push
mov
jl
and
data16
mov
jg
or
push
mov
mov
push
std
inc
adc
jb
aaa
into
xlat
pop
dec
mov
iret
das
push
push
xlat
rcll
push
std
cltd
gs
xor
mov
fucom
aam
jmp
es
dec
xorb
lock
inc
movsl
jecxz
loopne
and
push
or
fs
xchg
or
or
ret
mov
movsb
inc
mov
lods
and
sbb
pop
pop
pop
pop
or
dec
jo
int
xchg
adc
rcrl
ss
lret
pop
in
loope
pop
mov
test
cmc
push
add
sub
enter
mov
push
pop
push
jmp
dec
pop
daa
stos
mov
ds
push
inc
and
xchg
ficoms
pop
aam
xor
fucomip
and
mov
aad
insl
inc
fnstcw
and
gs
xlat
pushf
jecxz
pop
notb
mov
mov
jne
sbb
jb
cmp
scas
repnz
icebp
or
sbb
fmull
push
add
sub
sub
std
pop
into
sub
into
push
mov
scas
shrb
xor
xor
jbe
in
addr16
stos
pop
data16
jns
pop
mov
mov
in
xchg
lea
pop
adc
adcl
fwait
std
adc
jmp
jno
jne
mov
ret
sub
dec
xchg
lcall
enter
mov
stos
sahf
dec
mov
int
in
test
add
mov
pushl
inc
stos
test
ljmp
jno
addr16
out
ret
cld
gs
cs
xor
gs
frstor
jmp
aam
xchg
aad
mov
aas
xchg
int
add
pushf
popf
add
in
inc
nop
push
add
sbb
xchg
hlt
adc
jge
sbb
mov
rep
enter
jno
push
jae
iret
xchg
daa
int
jl
stos
bound
roll
pusha
jmp
xor
jecxz
or
push
jne
mov
movsb
mov
in
data16
cmc
pop
or
jno
inc
jle
aas
xor
cmpsl
icebp
fldt
lcall
ljmp
jne
stos
fisttpll
dec
and
adc
inc
lds
aas
add
push
insb
gs
xchg
fiaddl
jns
sbb
inc
enter
js
lock
leave
xchg
push
xor
cwtl
aas
mov
push
scas
out
in
inc
cmpl
cli
inc
aas
or
testl
jns
aam
and
push
ret
mov
fisubrs
popf
cmpsb
sbb
in
xor
xchg
push
lea
inc
cmp
xlat
fistl
add
das
testb
inc
icebp
jl
mov
or
daa
mov
xor
mulps
je
jge
mov
inc
pop
mov
leave
mov
adc
adc
xchg
popa
jo
leave
test
push
fwait
sahf
aad
std
mov
jns
in
imul
adc
int3
dec
cmp
test
mov
in
mov
addr16
shl
lods
shl
mov
push
leave
insl
ljmp
test
inc
xor
cmp
cwtl
mov
cmp
rcr
call
es
mov
std
pop
push
mov
aad
pusha
mov
imul
mov
dec
xlat
loop
imul
fistpll
arpl
push
mov
mov
imulb
in
bnd
mov
popf
movsl
adc
test
jo
loopne
sub
das
insl
aad
imul
xorl
mov
pop
push
mov
mov
arpl
shrl
inc
mov
xchg
sub
jmp
jne
jl
js
push
leave
outsl
mov
lret
or
mov
std
in
mov
jae
mov
adc
and
int3
push
push
mov
mov
add
lods
sub
xchg
adc
rorl
sub
cli
into
xchg
outsl
ucomiss
into
pop
dec
sahf
dec
dec
arpl
test
inc
add
imul
sub
pop
adc
aam
xor
stos
shrb
das
jns
test
inc
mov
les
add
int3
jge
aam
out
sub
out
dec
sbb
scas
or
enter
add
repz
xchg
repz
testl
and
sbb
xor
mov
fmuls
test
out
outsb
arpl
ss
outsb
mov
jg
mov
xor
inc
inc
mov
jmp
imul
mov
mov
enter
das
test
sbb
dec
xchg
xchg
sub
sub
xchg
cmp
mov
test
push
iret
aad
jae
stos
aam
pop
xchg
inc
imul
dec
xlat
push
jmp
xchg
aad
les
data16
popa
mov
sbb
dec
aam
xor
imul
adc
xchg
pop
adc
jmp
aam
les
cltd
arpl
lods
test
filds
jle
sti
cmc
cmc
cwtl
sub
clc
sub
fcomp
cli
jg
in
popa
and
insl
sbb
aaa
scas
repz
shr
stc
and
add
or
mov
xchg
les
add
daa
and
ljmp
ret
pop
mov
test
rcll
cmp
and
addr16
cld
shrb
cmc
cmpsb
mov
mov
repz
inc
xor
push
test
mov
add
xchg
std
inc
scas
ficompl
fsubp
add
imul
cmp
loopne
pushf
mov
xor
scas
sbb
lea
mov
mov
lretw
cltd
fiaddl
in
rclb
insl
aad
sbb
lcall
push
push
mov
sbb
loop
mov
test
pop
das
cmc
pop
jmp
jle
push
hlt
inc
dec
mov
pop
fsubrs
sti
adc
ss
push
int
mov
jecxz
scas
push
inc
loope
fnstcw
ljmp
cmp
add
das
mov
imul
outsl
js
mov
cmpsl
and
lahf
sbb
sarl
mov
push
push
mov
and
in
test
xchg
jne
test
in
xchg
in
cmp
push
and
dec
adc
dec
cmp
pop
cmpsl
or
arpl
lret
jge
sub
icebp
adc
lock
iret
shrd
test
and
rorb
sbb
push
xor
ret
dec
dec
mov
scas
inc
xor
int
sub
and
mov
fmul
popf
dec
push
addr16
adc
mov
xor
int
adc
sub
adc
xor
mov
lods
mov
cli
pop
mov
mov
jl
cmp
push
cld
gs
jmp
mov
fxch
ja
push
lret
scas
push
fstps
xchg
es
movsb
fldcw
fildl
pushf
jnp
clc
lahf
add
cli
mov
push
testl
push
inc
push
sbb
fsubr
push
jecxz
and
sbb
bound
int
rcll
stos
adc
sti
push
lcall
jb
jle
and
fists
push
adc
imul
scas
lods
mov
ljmp
pop
add
xchg
daa
xchg
or
add
pusha
pop
jl
add
dec
out
inc
rcrb
xor
pop
and
and
xchg
jno
test
fisubrl
jecxz
sub
mov
test
adc
dec
jle
lret
lods
aam
in
cmpsb
leave
aad
cmp
mov
and
pop
lock
es
xchg
aad
add
loop
jbe
add
imul
push
jnp
xchg
out
in
pushf
sahf
or
mov
loope
in
xchg
dec
jae
cmc
or
dec
and
popa
and
and
int
fidivrs
shl
int
aaa
pop
jge
stc
xor
into
mov
or
push
cltd
push
xor
push
out
add
int
push
movb
out
mov
inc
mov
movsb
push
push
mov
xor
add
aam
pop
imul
insb
xor
jno
mov
jge
test
mov
imul
xchg
and
xor
inc
loop
add
in
pop
clc
stc
and
jge
jge
add
cld
push
int
popf
sbb
sub
scas
sahf
cwtl
add
push
fiaddl
jb
sbb
hlt
repz
push
sub
hlt
mov
jge
inc
shlb
dec
mov
mov
dec
jl
popf
daa
sub
mov
popf
in
mov
iret
aam
xorl
cmp
lret
mov
jge
pop
jg
negb
aad
fsubs
jno
clc
pusha
xchg
cmc
cmp
sub
or
ret
lcall
fimull
sbb
call
es
stos
mov
pop
lahf
pop
or
sahf
stos
push
mov
cmp
lods
adc
jbe
dec
and
adc
xchg
das
mov
jge
pop
sbb
shl
fstpt
into
sub
out
add
orl
pop
bound
sbb
test
mov
and
imul
lods
in
test
subb
cld
call
jae
stos
pop
jno
xchg
cmovp
mov
cmp
cmc
test
jmp
das
pop
aas
mov
cs
cld
fcomp
sbb
fcmove
lock
es
sbb
dec
xor
fdivrl
fiadds
imul
aam
clc
mov
fsubp
int
jae
adc
sbb
or
aaa
jbe
jb
or
imul
fisubrl
mov
arpl
push
xchg
mov
push
mov
cld
mov
lahf
fbstp
mov
pop
push
or
jne
fs
mov
jge
cs
cmpsb
jg
add
pushf
inc
scas
add
mov
mov
mov
inc
daa
add
je
test
sahf
jnp
xor
xchg
push
push
xor
call
add
imul
mov
repnz
fwait
add
test
add
pusha
aad
loopne
mov
push
mov
push
mov
sbb
les
xchg
imul
repnz
xor
inc
cmp
cli
addb
lods
push
xlat
ss
adc
sahf
lea
test
dec
xchg
and
lds
inc
cld
outsb
fidivrs
xor
stc
dec
shrl
push
lods
and
xor
mov
xor
bound
fmull
pushf
pusha
scas
popa
in
std
xor
shrl
insb
jne
mov
pop
and
xchg
loope
pop
mov
and
insl
clc
or
jnp
sbbl
mov
orl
pop
add
lds
pop
mov
out
adc
pop
fldcw
in
fildll
pop
cmp
call
mov
jne
adc
loopne
cld
std
cmp
inc
ljmp
sub
jle
jo
jmp
cwtl
int
mov
fnstenv
mov
mov
xchg
mov
jg
pop
cmp
lock
xor
cmc
sub
and
addr16
sbb
push
fsub
subb
sub
jo
and
in
jg
dec
ficompl
ljmp
mov
testb
mov
push
jecxz
and
outsb
xchg
cmp
icebp
les
test
push
push
shll
call
clc
mov
in
aaa
jbe
adc
subb
les
je
add
xchg
fs
jmp
xor
mov
rcll
jecxz
pop
push
jbe
arpl
jb
fnstcw
imul
jae
test
aas
jge
dec
sub
mov
scas
testb
xor
cs
or
es
mov
movsb
std
pop
inc
cmp
es
pusha
mov
and
mov
js
jbe
scas
inc
inc
push
jg
adc
pop
stc
inc
gs
insb
jbe
sbb
inc
ret
xlat
dec
mov
stc
jne
cmp
loope
mov
sbb
inc
dec
mov
add
add
ja
mov
mov
outsb
popa
call
or
jmp
popf
add
add
jecxz
inc
inc
mov
push
xor
sub
push
mov
or
sub
dec
push
xor
divl
and
jbe
and
loopne
movl
mov
fwait
ljmp
xlat
jmp
dec
jg
into
dec
dec
dec
pop
clc
pop
lods
addb
dec
xor
lret
add
repz
jnp
out
rclb
fcomi
imul
test
jno
clc
lods
mov
roll
movsb
clc
mov
xchg
stos
or
addr16
adc
rdpmc
mov
leave
shll
pop
aam
cltd
jp
cmp
and
jo
mov
cmp
mov
jmp
int3
rcl
pop
popa
call
pop
mov
inc
insl
mov
mov
cmp
xor
roll
loop
call
inc
ds
mov
cwtl
cltd
mov
mov
ret
jo
cli
test
ja
pop
cmp
adc
xor
push
leave
dec
aam
popa
xlat
icebp
or
cmp
mov
divl
pop
adc
pop
ljmp
pop
inc
adc
add
mov
add
jns
sub
lea
push
cs
stos
insl
sbb
pop
repz
inc
jmp
push
repnz
sti
inc
stos
dec
dec
mov
adc
outsb
sbb
jecxz
sarb
jb
cmp
je
jmp
loop
sbb
sub
cltd
cli
out
ret
cld
dec
push
lret
orl
movsl
mov
mov
push
xchg
xchg
xor
or
leave
popf
lea
fdivl
out
dec
adc
cmp
shrb
mov
int
inc
shrl
jo
add
sbb
mov
loopne
jnp
int3
cmc
jle
jmp
ret
xorl
mov
bound
or
adc
sbb
icebp
movsb
adc
xchg
es
cld
sti
xchg
aaa
sbb
outsb
sahf
push
fs
nop
cmp
pop
nop
out
addb
pop
addr16
jno
jp
call
stos
cmc
sbb
outsl
lret
mov
arpl
lods
cwtl
push
fcmovnb
stc
mov
lret
or
mov
adc
out
popf
sub
inc
fdivrl
loopne
pop
mov
lock
sub
cmpl
cmp
mov
inc
cli
xor
mov
sbb
mov
mov
loope
pop
pop
jno
loop
inc
in
push
inc
mov
jg
jmp
cmc
enter
mov
push
les
shrl
sahf
mov
mov
aad
outsl
pop
or
cmc
sti
mov
mov
cltd
xchg
insb
or
lret
jns
cmp
rcll
icebp
push
sbb
scas
cltd
inc
call
xor
out
mov
ljmp
arpl
cld
xchg
sti
fistpl
mov
dec
pop
into
clc
in
cmpsl
cmp
clc
imul
aad
ffree
clc
mov
clc
fisttps
ret
or
mov
ss
sbb
in
rcrl
or
movsb
iret
jae
and
jp
out
lds
or
loope
add
pop
jno
pushf
dec
sbb
mov
cmp
jae
pop
mov
out
test
add
push
cwtl
sbb
aad
ficompl
pop
mov
jge
cld
pop
lahf
sub
repz
xor
push
mov
inc
mov
lret
push
xchg
cmp
mov
repz
push
arpl
fs
loop
flds
sub
inc
data16
or
std
stos
mov
incb
sub
lds
stos
in
ja
sbb
std
andb
out
or
mov
xchg
sbb
pop
test
mov
int
cmpl
mov
xor
mov
sahf
lret
pop
jno
stos
inc
clc
cmp
add
jae
popf
out
and
mov
into
out
je
cmp
cmpsb
nop
je
lcall
pop
xchg
pop
add
jl
cld
xlat
addr16
add
cmp
test
jnp
imul
into
push
add
and
add
pop
xchg
into
mov
test
push
mov
cmpsb
idivl
and
shlb
xchg
lods
scas
push
cwtl
sbb
addps
sar
into
icebp
adc
hlt
sbb
aaa
push
dec
adc
sbb
mulb
mov
pop
adc
enter
jge
sahf
orb
imul
out
or
jecxz
lods
or
das
jp
ljmp
mov
push
lods
into
pushf
jb
add
subb
push
xchg
movsb
dec
or
in
cmp
jp
sub
cwtl
stos
push
jae
outsl
sub
jecxz
mov
lock
call
mov
sub
roll
xor
cmp
in
mov
js
out
sub
fiaddl
mov
xchg
pinsrw
and
imul
aaa
push
inc
test
sbb
insb
cmp
xchg
fwait
cmpsb
dec
pop
mov
lock
clc
scas
dec
push
add
or
add
outsb
into
and
pop
hlt
bswap
add
push
idivb
subb
loop
aad
js
in
push
stos
call
pop
cmc
xchg
adc
pop
test
rorb
jnp
popa
xor
fcomps
pop
and
test
add
cmc
insb
mov
shll
out
xchg
xchg
ljmp
inc
cmp
test
pusha
dec
subl
push
mov
mov
shl
negb
cs
mov
xor
jns
gs
push
jecxz
push
imul
xlat
and
aas
jmp
pop
push
fcompl
sbb
test
xchg
xchg
lods
inc
or
ljmp
cmpsl
ss
sbb
incb
push
test
pop
push
fisubrs
cmp
push
or
inc
jl
inc
push
mov
fbld
dec
fst
mov
bound
out
and
cltd
scas
or
jnp
fs
shrb
inc
dec
stos
sarb
jge
dec
test
je
cli
pop
dec
mov
in
sbb
pop
sub
and
jge
idivl
mov
insb
movsb
or
sahf
jb
jmp
nop
mov
pusha
pop
ljmp
jg
adc
or
iret
sbbb
xchg
loope
in
jno
cmp
inc
push
mov
rolb
mov
cmp
ljmp
or
js
add
push
sub
daa
fmull
push
mov
pop
inc
pop
jg
jbe
pusha
inc
mov
ficoml
fnstenv
mov
jb
adc
inc
xchg
push
into
or
mov
pop
lea
rorl
push
test
in
les
xchg
in
mov
push
js
stos
inc
and
out
add
pop
dec
xchg
or
xchg
stc
sbb
cmp
inc
incb
loop
add
mov
mov
jb
rcl
sbb
push
dec
push
ret
cwtl
jns
adc
mov
mov
pop
cmp
pop
push
mov
aaa
and
into
repz
lret
jecxz
movsb
and
repz
data16
scas
insl
adc
mov
pop
xchg
fwait
xor
cmp
mov
pop
sbb
mov
sbb
movsb
roll
insb
adcl
mov
xchg
or
stc
sbb
cmp
out
divb
mov
loope
loope
cmp
test
adc
push
inc
insb
inc
xchg
pop
push
xchg
cmp
sub
fmull
pop
mov
mov
out
xchg
es
mov
adcb
pop
pop
insl
pushf
push
lea
aaa
mull
cwtl
sbb
inc
inc
lods
aaa
mov
cmp
push
mov
outsb
and
sbb
xchg
test
decb
addb
mov
arpl
daa
out
stc
xorl
mov
pushf
mov
ret
lock
sub
cmp
and
cwtl
dec
mov
push
dec
sub
adc
jno
shl
loope
lods
fbstp
push
cld
sti
mov
push
aam
outsl
add
add
gs
or
add
fildl
enter
mov
xchg
outsl
fwait
xchg
mov
loopne
cmp
inc
mov
mul
push
dec
in
sarl
into
fcoms
cmpsl
out
movsb
mov
cmp
js
mov
test
pushf
jb
or
shlb
addb
sti
lret
pop
push
into
clc
sbb
nop
test
popf
fs
xlat
xchg
jge
cmc
sti
loopne
xchg
add
fnstenv
dec
adc
stc
mov
inc
into
pop
ds
js
sub
mov
inc
cmpl
sti
cmp
xor
xchg
movsl
orl
fldl
pop
pop
jmp
das
mov
push
adc
inc
insl
sbb
sbb
cli
cmpsl
out
xchg
mov
and
outsb
push
shlb
push
inc
mov
rclb
lods
or
cld
pop
es
es
ljmp
out
int
iret
movsb
fcmovbe
inc
pop
int
mov
jae
adc
into
lcall
stc
imul
add
jmp
mov
mov
stc
pop
test
das
dec
aaa
inc
int
addr16
mov
in
movsb
je
aad
and
mov
and
mov
leave
push
jb
movsl
fistl
dec
das
imul
popl
test
mov
or
loope
fimuls
int
adc
lea
inc
jno
pop
mov
push
call
jp
xchg
ficompl
mov
adcb
test
aam
cmp
cmp
sbb
call
pop
cbtw
lcall
scas
clc
add
push
icebp
cmp
mov
fstps
sti
imul
lods
xchg
or
dec
int
pop
mov
pop
pop
mov
aad
int3
into
dec
notb
dec
sar
or
popa
mov
jmp
fmuls
cmp
mov
jmp
inc
je
pop
mov
test
loopne
lcall
xchg
fcmovnb
jno
jge
nop
jecxz
cmp
pop
xchg
xor
inc
add
lock
sbb
in
loopne
push
push
ss
mov
mov
cltd
add
pushf
dec
adc
in
xchg
jno
sarl
ds
adc
sub
pusha
lcall
in
xchg
sahf
push
inc
pop
xor
popa
push
in
inc
fdivs
xchg
shlb
test
in
adc
mov
scas
iret
aaa
push
movsl
jo
adc
and
jae
cmp
or
jo
jp
cmpsb
mov
dec
xchg
mov
add
pop
shll
rol
jmp
dec
loop
fcompl
adc
ds
sbb
fsubrs
push
pop
ret
repnz
test
loope,pt
out
sbb
pop
cmpsb
enter
icebp
jecxz
adc
pop
mov
xlat
mov
cmp
shll
cmp
sub
or
cmp
pop
xchg
rorl
jno
rcrl
stc
movsb
out
mov
xchg
stos
jmp
cs
inc
sbb
fistps
adc
stc
and
sub
andb
shrw
mov
imul
lret
idiv
push
xchg
outsb
dec
mov
clc
test
sbb
mov
fists
scas
fwait
dec
pushl
jo
add
push
aas
nop
pop
jnp
jnp
ret
mov
inc
test
mov
jecxz
les
push
jo
jge
fldl
pop
adc
xchg
pop
lods
pop
les
or
inc
pop
ret
dec
aam
lods
jmp
adc
inc
movsl
or
or
mov
dec
scas
xchg
ret
push
and
xchg
sarb
xor
rorl
xchg
rcrb
cs
fcomip
add
mulb
fisttps
test
aaa
insl
mov
dec
xor
mov
mov
or
loope
mov
adc
push
add
outsb
mov
push
pop
into
lods
sbb
and
mov
jo
jge
mov
adc
sbb
pop
and
in
dec
add
xor
pushf
jbe
xchg
mov
mov
add
movsb
dec
lock
shl
fs
adc
sbb
cmp
adc
outsb
sbb
subb
push
idiv
pop
cmp
pushf
jb
addr16
jle
or
hlt
out
mov
or
scas
xchg
pop
mov
insl
or
pop
cmpb
pop
loopne
xchg
sub
mulb
adc
imul
fs
insl
sbb
or
pop
das
sbb
push
cmp
inc
fists
add
outsl
mov
clc
dec
fwait
in
cli
cmp
fnstsw
pop
cmp
cmp
sbb
sub
pop
or
adc
std
mov
sbbb
xchg
popf
xor
movzbl
pop
aad
jno
lea
pop
ret
add
fnstcw
lock
mov
xchg
mov
aad
mov
pop
ficoms
testb
imul
pop
mov
dec
sbb
push
push
push
mov
fwait
roll
jmp
ret
adc
sarb
stos
add
out
hlt
sti
fs
or
xor
scas
push
movl
mov
inc
addr16
mov
mov
jns
jle
test
xchg
push
pop
mov
call
and
add
icebp
test
pop
push
call
push
sbb
jmp
inc
push
xchg
pop
dec
and
mov
sti
and
fstl
mov
sub
jbe
and
sub
mov
cmc
push
rcpps
rorb
popa
pop
xchg
mov
and
pop
icebp
pop
ret
ret
pushf
mov
es
aam
mov
ret
cmpsb
test
dec
push
cmp
dec
jl
mov
daa
gs
and
loop
daa
dec
pop
arpl
adcb
jo
nop
pop
sahf
fstl
cwtl
cmpl
shlb
jae
into
stc
xchg
ljmp
les
lret
shl
je
lds
es
aad
insb
and
inc
rorb
lods
mov
sbb
add
cld
icebp
inc
gs
mov
addr16
or
xchg
in
xchg
jge
inc
scas
inc
shl
ja
mov
xor
mov
pop
inc
je
mov
sbb
push
inc
jg
movsl
mov
cmp
mov
daa
clc
in
push
in
sub
jp
sub
and
shl
and
movsb
and
push
test
add
ljmp
int
repz
addr16
ficoms
pop
xchg
push
loop
sarl
leave
into
jl
mov
jl,pn
mov
frstor
sti
out
ret
or
ljmp
lret
dec
push
adc
jnp
int
cwtl
push
mov
cs
stos
fwait
dec
mov
inc
xchg
adc
shrl
enter
out
xlat
divb
mov
fisubrs
sub
push
mov
xchg
or
cmp
pop
lret
aaa
jnp
xchg
lods
and
cmc
mov
sarb
jp
or
mov
aad
cmc
and
push
fsubrl
jnp
adc
loopne
lahf
adc
mov
xor
clc
outsb
xor
mov
jno
mov
sbb
and
scas
xor
aad
insl
sub
out
ja
xor
out
sahf
fimull
fsubl
add
push
daa
fildl
cs
movsl
sbb
clc
stos
daa
or
mov
bound
jbe
std
xchg
mov
mov
dec
or
and
lods
lock
std
xor
xor
mov
test
pop
out
popa
xor
mov
mov
and
xchg
mov
mov
outsb
and
dec
lods
in
lds
jne
dec
les
xor
mov
outsl
adc
pop
adc
inc
in
loop
jp
rcll
cld
rcrl
and
fsubr
add
or
pop
cmpsl
xor
es
insb
lods
fidivl
sub
adc
data16
or
dec
dec
xchg
mov
out
test
jo
fmulp
xorb
sbb
sub
out
push
js
add
dec
aas
ljmp
cmc
inc
ror
sub
outsb
jns
out
jo
popf
or
add
ja
outsb
repnz
out
xor
ret
cmpsl
push
mov
jb
rcr
cmp
mov
cmpsb
test
sti
out
in
bswap
es
in
inc
hlt
stos
in
push
cwtl
xchg
sub
lods
addr16
dec
in
xchg
adc
pop
imul
loop
jmp
or
fsts
pop
sub
xchg
movsb
neg
test
dec
dec
pop
addr16
push
jmp
in
movsb
push
ret
cltd
cmp
cmpsl
and
cmp
test
movl
and
lret
adc
dec
sbb
rolb
push
jne
das
cmp
pusha
mov
ja
inc
pop
pop
enter
stc
imul
cmpsl
mov
push
and
pop
psubsw
ret
pop
in
dec
cmp
xorb
or
fs
out
adc
xchg
and
and
inc
sub
cmc
les
or
into
and
add
insl
push
data16
std
jmp
lret
or
imul
outsl
jg
aam
mov
in
cmp
nop
enter
test
mov
outsb
mov
lret
pop
sar
xchg
pop
push
add
imul
xor
mov
lea
mov
ljmp
jo
cmp
push
add
jl
stos
iret
mov
adc
dec
sbb
cwtl
js
cmp
push
vmovaps
outsb
mov
das
xlat
pop
sub
add
or
out
inc
jbe
add
out
iret
add
push
mov
ficompl
in
out
shll
pop
mov
push
iret
and
cmpsl
fidivrs
rolb
jge
mov
xor
shll
push
and
push
mov
mov
cmc
sbb
jg
mov
adc
pop
fsubs
stos
sti
lods
les
or
sub
jmp
mov
xchg
popa
mov
enter
inc
movsb
pop
inc
loopne
push
lds
loope
mov
stc
sbb
jp
xchg
xor
inc
mov
cpuid
jne
jne
and
mov
call
pop
fdivs
or
and
add
add
repz
mov
inc
cmc
push
jno
or
and
push
and
dec
movsl
push
rorb
mov
jns
ss
stos
insb
mov
cli
inc
xchg
mov
ret
fmul
les
dec
push
pop
popf
or
pop
loop
pop
mov
test
fldl
cmpsl
cwtl
shrb
dec
mov
scas
outsb
scas
cmp
xchg
add
jb
jmp
cmp
dec
and
gs
xlat
testl
pop
leave
or
and
sti
mov
pop
call
call
pop
pop
insb
cmp
push
xor
adc
aaa
out
sub
in
cltd
add
out
in
dec
xchg
push
jnp
add
nop
fiadds
gs
int3
outsl
mov
outsl
xchg
mov
gs
pop
fs
fnstsw
aas
xor
push
pop
jo
ret
mov
or
dec
scas
por
inc
jecxz
jo
cmpsb
lret
inc
cmp
nop
ret
cmp
aad
sub
cmc
jbe
sbb
pop
cmp
jle
add
ret
xchg
cli
ss
jp
sbb
icebp
cltd
ss
push
xor
push
jp,pn
pop
dec
shrb
loope
in
icebp
fists
push
push
sub
lcall
fidivl
dec
xor
xchg
xchg
pop
mov
or
push
inc
sbbb
fcoml
lcall
xchg
mov
or
or
push
enter
in
movsl
out
in
shl
jns
add
lret
das
rclb
imul
pop
inc
scas
sbb
enter
out
ret
push
jl
iret
or
shrl
arpl
adc
xorl
mov
pop
and
das
ret
jge
pop
and
jle
xlat
js
bound
rcrl
pop
in
icebp
xchg
rcl
xchg
pop
and
mov
push
mov
arpl
in
test
aam
in
mov
push
insb
enter
sub
and
sbb
sti
in
out
leave
ds
cmp
bound
dec
int
mov
cmp
cmp
bound
repnz
mov
in
pop
fwait
movsb
cmp
cmc
inc
lods
orl
fistpl
mov
mov
cmp
mov
das
pusha
push
sbb
imul
push
dec
adc
adc
xchg
inc
lds
pop
mov
out
int3
sub
cmp
rclb
cmc
pop
sbb
mov
test
fsubr
leave
inc
fists
xor
pop
mov
mov
popa
aaa
daa
pop
mov
imul
inc
inc
push
sti
mov
push
ss
sti
add
in
push
test
ret
hlt
xor
pand
mov
gs
sbb
mov
jp
aas
scas
call
sub
and
leave
inc
or
inc
lret
xlat
daa
xchg
xchg
jmp
or
jecxz
and
enter
xor
xor
out
mov
stos
cmpsl
out
mov
fnstsw
and
fwait
gs
cwtl
outsl
xchg
cmpsl
inc
push
daa
push
mov
imul
lret
add
pop
aam
jnp
pop
divl
xchg
inc
movsl
scas
adc
add
inc
cli
or
popf
or
and
insb
dec
ds
push
and
xchg
icebp
adc
outsl
int
mov
or
popf
inc
lock
mov
stc
sbb
cld
xchg
sbb
jbe
sub
cmpsl
sub
ffreep
sahf
out
mov
les
in
cli
mov
insl
xor
xor
shlb
xchg
test
ja
aaa
inc
inc
add
aas
xor
mov
aad
into
test
mull
out
xchg
dec
je
sbb
mov
sahf
sbb
data16
sbb
cltd
or
rep
xbegin
mov
clc
bound
fstpl
inc
mov
es
out
fdivr
mov
loop
cmp
fnstenv
cwtl
cmp
js
test
into
push
aam
sbb
push
and
add
adc
xchg
arpl
mov
jno
mov
call
outsl
ljmp
psubw
aam
or
pop
int
mov
jae
cld
lods
ss
sbb
sar
subl
jno
scas
dec
xchg
enter
cld
js
cmp
cltd
inc
cs
mov
stc
mov
scas
inc
jo
or
mov
jnp
aaa
push
mov
dec
mov
lcall
jg
out
pop
mov
pop
push
inc
and
dec
or
mov
rcll
sub
mov
ffreep
mov
out
stos
xor
pop
pop
addr16
mov
subl
in
or
push
call
neg
push
bound
add
jle
xor
std
fists
nop
fidivrl
pop
rolb
jp
fistpl
mov
testl
and
loope
jne
nop
add
roll
jb
outsb
fnstenv
jae
jmp
sub
push
xchg
adc
add
pusha
mov
inc
cmc
movsl
cli
aam
add
mov
popf
loop
cwtl
int
ret
sbb
xchg
subl
sub
add
adc
in
fldl
movsb
mov
xchg
jno
in
fmulp
add
xchg
push
scas
out
pop
movsb
or
cmp
jecxz
add
pop
outsb
xor
arpl
pop
dec
in
enterw
enter
jns
inc
pop
sti
repnz
inc
mov
xchg
decb
addb
sub
mov
int
pop
inc
push
cltd
lock
push
or
adc
and
jbe
pop
pop
pop
mov
push
mov
cmp
xchg
enter
aam
mov
push
pop
test
dec
mov
mov
fwait
pop
loop
xchg
and
sub
out
roll
pop
enter
add
cmp
dec
js
je
mov
cmp
pop
pop
shlb
call
inc
jne
mov
push
add
push
femms
dec
fwait
arpl
adcl
adc
clc
inc
mov
jae
js
fs
aas
lret
int
enter
mov
cmp
xchg
and
pusha
xchg
mov
mov
fistl
dec
int3
xor
sti
imul
in
lahf
sub
dec
or
cmp
loop
enter
mov
enter
push
mov
lods
pop
mov
lock
jb
pop
aas
mov
fisubl
or
cmc
xchg
pop
popf
mov
imul
stc
xor
movsb
sbb
test
in
clc
lret
js
xchg
ds
xor
sahf
adc
and
pop
xchg
lods
sub
sbb
lret
sbb
jnp
cld
out
cmp
pop
pushw
pop
nop
pop
rcll
dec
sub
mov
lds
lds
icebp
popa
cmp
stos
push
cltd
jnp
out
adcl
lods
mov
xor
imul
mov
cs
mulb
and
or
push
data16
jg
xor
nop
mov
pusha
pop
lret
sahf
cmp
cli
jecxz
dec
fiadds
sub
ja
inc
mov
mov
shlb
fstl
mov
add
push
adcl
push
push
test
jg
push
add
fadds
je
pop
pop
sub
pop
xchg
inc
lahf
pusha
inc
mov
add
push
in
call
sbb
cmc
push
in
and
xor
iret
or
add
in
or
sbb
dec
loopne
jl
std
ficoml
rclb
repz
push
jge
pop
aam
jmp
pop
sbb
test
pop
movl
push
aaa
and
lods
pop
lcall
in
xchg
add
jno
add
movsl
das
jns
clc
jg
fnstcw
xor
add
cmp
or
pop
jle,pt
pop
add
outsl
mov
dec
inc
adc
sysexit
lock
fdivrs
dec
pushf
push
loop
lahf
jl
cmp
fcoms
fsubrs
mov
mull
adc
push
stos
loop
pop
in
push
jnp
ret
rcl
mov
mov
mov
testl
ss
push
flds
xor
push
mov
cmp
mov
xchg
jl
icebp
inc
push
ljmp
inc
or
loop
inc
mov
mov
mov
ljmp
rorb
push
stos
call
jne
stos
jp
mov
sbb
mov
dec
mov
ljmp
imul
dec
outsb
add
sub
lcall
ljmp
imul
in
mov
faddl
shll
or
ret
pop
jecxz
outsl
repz
dec
adc
xchg
cmp
loop
xor
clc
mov
sub
pop
stos
scas
xchg
testb
in
cli
sbbb
or
inc
jno
inc
add
or
js
pop
fldl
pop
sahf
dec
mov
add
push
push
cmp
jo
daa
rorb
jbe
xchg
sbb
ret
mov
inc
idivl
test
xchg
arpl
imul
loop
mov
or
repnz
rol
pushf
or
xchg
ficoml
pop
call
jo
in
aas
dec
out
mov
popf
dec
ret
cmpsb
into
je
ret
scas
fistps
test
inc
pop
ficomps
test
repz
dec
adc
sub
mov
xor
mov
lahf
test
ljmp
lcall
test
pop
adc
lret
sub
fwait
add
jmp
les
dec
int
inc
xlat
sahf
outsl
pushf
mov
push
jns
sti
jmp
xor
dec
push
and
pop
inc
fidivrl
es
dec
inc
stos
and
scas
lods
and
cmp
mov
push
lock
in
test
mov
and
sub
andb
lods
inc
dec
xor
cld
enter
dec
insb
pop
loop
leave
inc
sub
xlat
enter
arpl
xor
or
aam
lcall
leave
popa
adc
test
das
jl
inc
pushf
in
out
xor
push
movntq
ljmp
into
or
test
mov
and
add
les
cmp
sbb
cmp
jg
pop
adc
std
rcl
je
or
dec
lahf
dec
adc
loop
xor
sub
lret
and
mov
aam
out
xor
inc
pop
loop
push
loop
inc
dec
adc
daa
push
in
xchg
aad
shr
or
sahf
xchg
test
stos
test
mov
daa
addb
xchg
dec
ds
popf
cltd
add
aas
sub
mov
out
out
fnstcw
aam
push
cmpsl
popf
push
sub
xchg
cmp
stos
lods
fisttps
pop
cmp
sbb
cs
mov
xor
dec
push
loop
inc
nop
cld
sub
jb
mov
pop
js
mov
adc
mov
sub
mov
pop
clc
roll
pop
call
mov
dec
xchg
mov
fisttps
pop
ret
repz
pop
out
fldenv
adc
aad
cmp
xchg
dec
pop
stos
jnp
lahf
xor
mov
js
push
jns
or
mov
lret
loop
in
lret
push
cmp
push
mov
aas
sbb
in
mov
int
xchg
cmp
outsl
mov
xchg
js
dec
sub
imul
roll
push
lods
std
popa
shlb
cs
in
mov
popa
and
icebp
ffree
data16
push
xchg
sub
xchg
xor
ss
inc
cmpsb
fisubs
xchg
lret
push
imul
fdivr
lock
hlt
dec
repz
fdivrs
roll
xor
cmp
push
mov
decl
cwtl
jne
test
jle
adc
mov
inc
jecxz,pt
sub
mov
fld
mov
int3
lods
add
push
push
js
push
inc
cmp
or
push
ds
sbb
das
push
cmp
dec
fwait
add
sub
test
fsubl
mov
xchg
outsl
lods
fiaddl
adc
inc
jno
cwtl
rorl
push
mov
dec
or
test
mov
push
fmull
xchg
mov
push
scas
cs
out
mov
cs
cli
out
adcb
mov
pop
xor
dec
testl
mov
xor
and
fbld
in
fcompl
cs
mov
arpl
int3
mov
out
dec
gs
push
pusha
dec
add
dec
imul
xchg
insb
ret
xor
cmpb
pop
jnp
or
adc
cltd
mov
jmp
or
movsb
push
cs
pop
mov
push
push
scas
add
leave
insl
ja
push
xor
lahf
out
push
pop
jmp
xchg
mov
lcall
jno
cld
dec
iret
pop
or
mov
test
int
cmp
mov
xcrypt-cfb
cmpsl
out
push
lcall
push
int3
mov
inc
fcompl
add
xchg
aad
cli
faddl
call
mov
ss
mov
adc
sbb
pop
fwait
xchg
push
mov
xchg
mov
lock
jnp
mov
inc
push
popf
cmpl
pop
es
pop
inc
scas
imull
mov
lods
bound
pop
push
inc
dec
xchg
jge
sub
add
add
adc
sbb
test
jecxz
pop
in
fwait
in
dec
jle
adc
jae
rol
fwait
add
fisubs
jge
jl
test
sbb
xchg
xchg
or
dec
aam
hlt
sub
movsl
pop
jp
data16
push
ret
jle
adc
mov
mov
xchg
lret
push
scas
into
mov
sbb
add
and
lock
add
repz
xchg
out
add
loopne
inc
insb
cmp
outsb
std
mov
enter
addr16
popa
adc
sub
scas
pushf
in
jg
lods
divl
icebp
and
call
pop
je
in
lds
push
lret
lcall
inc
test
push
mov
lret
adc
or
sub
stc
aam
sbb
pop
cmp
add
mov
add
shlb
jnp
test
negl
inc
pop
mov
stos
mov
jae
orb
out
shll
inc
lea
push
lahf
add
fidivrs
and
jg
repz
mov
enter
or
repz
movsb
sahf
mov
pop
and
jl
mov
inc
lock
pop
inc
xlat
sub
out
cld
mov
dec
sbb
bnd
aad
adc
sti
dec
movsb
cmp
clc
addr16
lcall
gs
cli
mov
outsb
cmc
inc
std
xchg
inc
mov
jnp
mov
push
fisttpll
and
cmp
xchg
sbbb
mov
sub
add
mov
push
jbe
mov
cltd
sti
inc
popa
push
xchg
mov
xor
or
sti
ja
mov
push
push
fst
mulb
mov
lods
into
push
jb
adc
xchg
outsl
cmc
inc
in
pop
dec
daa
mov
mov
add
xchg
imul
mov
xlat
orl
or
push
out
lock
movups
test
imul
jnp
scas
push
in
mov
push
in
cmpsb
xor
and
repz
mov
sub
jns
pop
sbb
mov
fnstenv
push
pop
sub
enter
hlt
into
insl
inc
xchg
aas
mov
sti
mov
xlat
int3
cltd
jno
pusha
pop
scas
jae
shl
sbb
mov
popf
mov
fmul
xchg
inc
les
xchg
jl
cs
xor
pop
sub
cmp
stos
inc
add
fidivl
mov
clc
jnp
fiadds
test
mov
mov
xor
or
in
icebp
mov
hlt
mov
xor
push
mov
ret
fbld
int
sahf
scas
out
push
nop
mov
fisttps
ja
cmc
xchg
dec
add
sti
enter
int
mov
xor
aaa
das
or
test
out
out
mov
inc
jne
insl
fsubrs
mov
repz
dec
dec
cmp
repnz
mov
lea
fidivrs
xor
into
jnp
pushf
mov
scas
jp
cmp
enter
jmp
rclb
jecxz
cmpsb
or
enter
mov
sbb
push
arpl
aad
pop
aaa
add
js
pop
push
push
dec
data16
xchg
cmp
mov
in
cmp
adc
in
fisttpll
pop
fs
mov
adc
xor
inc
outsb
adc
cmc
jo
hlt
cwtl
lods
in
rolb
mov
lcall
jae
jle
push
adc
in
dec
pop
mov
and
movhps
cwtl
cmp
jb
cmp
stos
inc
sti
jp
sbbb
out
jnp
inc
int
mov
adc
roll
mov
xor
sub
sub
jle
out
repnz
add
dec
imull
fcom
nop
daa
fstps
adc
movb
inc
mull
xor
sahf
cmp
aam
mov
push
scas
xor
pop
mov
push
xchg
pop
sub
xor
shrb
adc
jbe
jne
push
call
in
cmpsl
sub
and
aas
push
inc
movsb
and
and
cmpsb
cwtl
dec
xchg
mov
pop
lock
fwait
dec
dec
cmp
nop
imul
fdivs
cmpsl
xlat
and
nop
sbb
xchg
mov
das
mov
int
scas
gs
nop
nop
jmp
mov
add
in
dec
scas
sbb
adc
cmpsl
loop
jmp
jbe
sub
ffree
add
stos
mov
pop
xchg
jl
adc
and
fbld
test
pop
scas
lret
cs
mov
pop
sub
pop
nop
lock
dec
mov
mov
mov
shrl
cli
dec
ss
mov
pop
adc
dec
xchg
ret
bound
call
mov
je
aam
jnp
and
push
push
mov
mov
pushf
jns
adc
push
cmp
dec
repnz
push
punpcklbw
addb
call
jns
mov
mov
inc
repnz
sbbb
out
mov
sbb
in
insl
movb
lcall
lods
pop
aad
loopne
or
jnp
mov
and
sub
xor
pop
add
mov
mov
adc
sub
add
je
pop
ret
movsl
fstl
jecxz
lret
mov
insb
cmp
add
in
pop
je
scas
fwait
push
fs
pushl
div
push
mov
cmp
repz
aaa
in
adc
mov
push
cltd
fldenv
dec
mov
xchg
lods
repz
mov
jle
mov
loop
lret
fisttpll
fsub
push
jp
mov
lret
test
inc
les
sub
insb
pusha
insl
lods
in
xchg
rclb
xchg
push
pusha
imul
pop
rclb
mov
in
in
inc
mov
inc
sub
mov
xor
lahf
inc
inc
xor
aas
and
pop
mov
and
mov
mov
sbb
inc
ja
fisttps
pusha
mov
cmp
pop
inc
mov
push
call
lret
cld
repnz
lret
les
push
mov
jnp
and
pop
dec
pusha
sbb
repz
mov
mov
loope
or
out
pop
rcrb
xchg
enter
sub
xor
test
fnstenv
aam
lret
shlb
movsb
jae
mov
iret
rcr
sub
fsubl
jnp
out
aaa
mov
je
and
popa
or
sbb
mov
fcmovnb
lret
mov
mov
push
xchg
push
mov
jnp
jno
sub
mov
mov
inc
incb
push
in
pop
xchg
stc
inc
loop
dec
xor
ret
mov
pop
jo
dec
push
dec
gs
and
ljmp
mov
pop
push
jmp
pop
mov
sbb
mov
int
mov
js
inc
cmp
gs
insl
cmp
push
stos
sahf
xor
fsubr
push
adc
pop
out
mov
jb
ljmp
and
push
mov
cmp
addr16
dec
adc
ds
pop
mov
and
ret
mov
sbb
mov
jae
iret
sub
std
adc
mov
repnz
sub
movnti
cmp
push
fdivrl
sbb
xlat
push
stc
mov
out
or
push
dec
cmpsb
or
rclb
mov
jle
repnz
xor
dec
or
mov
jbe
jle
mov
push
das
pop
inc
jo
ljmp
jae
or
cli
sarb
mov
cwtl
jno
add
and
or
inc
cmp
sub
pop
lcall
lods
cmp
mov
or
not
cmp
imul
mov
loop
sbb
jbe
pop
std
mov
ja
inc
jnp
sub
fsubr
cmp
jbe
pop
mov
mov
adc
dec
pop
negb
dec
jle
lret
mov
jecxz
or
cltd
cmp
push
mov
insb
mov
jmp
jae
xchg
pop
lea
xchg
subl
and
fwait
jbe
adc
test
int
inc
adc
inc
jb
inc
cmpsb
pop
pmulhw
decl
mov
nop
mov
sub
loope
rorl
jge
dec
jmp
cwtl
popa
fsubs
fwait
movsl
mov
sub
mov
cltd
cmpsl
enter
negl
fsts
icebp
rorb
addr16
xor
or
mov
cmp
mov
cmpsb
mov
dec
out
testl
add
jno
loope
das
enter
fldt
mov
dec
jo
adc
scas
mov
xchg
add
lcall
xchg
sahf
jbe
faddl
xchg
or
jp
std
sbb
mov
mov
sar
insb
arpl
pop
and
mov
add
sub
int
mov
xchg
into
test
popf
pop
int
lret
out
add
xlat
push
inc
sub
scas
iret
mov
inc
repz
into
ss
mov
out
mov
pop
adc
inc
and
hlt
je
dec
icebp
dec
out
stc
pushf
push
cmpsb
lcall
xor
add
dec
je
in
arpl
add
push
xor
aad
jl
xor
inc
lock
repz
ljmp
outsb
jnp
int3
lret
jle
jg
rol
xchg
std
mov
fnsave
push
mov
daa
popf
aam
outsl
repnz
sub
and
inc
int
cwtl
jne
je
xchg
xor
xchg
dec
stos
js
dec
cli
xor
inc
dec
jge
fildll
xchg
adc
mov
jmp
imul
mov
iret
loope
mov
mov
jle
cmp
loop
outsb
testl
pushf
xor
imul
pop
or
push
inc
mov
push
sbb
test
mov
clc
pushl
stc
fsubs
ja
xchg
mov
aam
adc
pop
mov
sahf
and
inc
outsl
mov
imul
inc
and
daa
lods
out
pop
out
pop
das
inc
push
call
dec
rorb
mov
dec
mov
jns
jecxz
xchg
pop
iret
pop
das
mov
pop
pop
icebp
or
shrl
icebp
scas
imul
sbb
repnz
inc
aas
and
enter
fldenv
ror
mov
fists
push
arpl
roll
xchg
mov
jecxz
push
push
mov
mov
xchg
in
pop
pop
clc
or
pop
add
dec
jl
push
inc
dec
pop
pop
add
lds
pusha
pop
jb
xchg
je
push
mov
ret
jge
sbbb
cld
pop
mov
cmp
inc
orl
repnz
movsl
jecxz
mov
roll
mov
sub
xor
xor
push
je
popa
imul
rep
add
pop
jle
int3
sbb
or
mov
aaa
in
lock
std
pop
xor
sti
out
inc
insl
jb
push
mov
pop
add
cmp
mov
outsb
mov
outsb
push
arpl
sti
loopne
pushl
orb
pushf
adc
cmp
add
xor
mov
xchg
pushf
add
test
mov
jl
xor
push
hlt
and
icebp
pop
push
sbb
fisubl
icebp
cltd
lea
movhps
push
push
sbb
dec
dec
add
stos
sti
inc
aas
loopne
adc
lea
inc
or
xlat
ficomps
mov
mov
imul
push
arpl
lahf
pop
scas
es
lds
arpl
enter
mov
lds
jmp
ficompl
enter
xchg
ret
push
or
or
pop
lock
push
adc
test
daa
aaa
or
mov
rcrl
movb
mov
out
push
xor
leave
xor
addb
cmp
jnp
iret
in
mov
repz
mov
mov
mov
xor
xlat
inc
dec
xchg
imul
neg
pop
mov
icebp
xchg
int3
jecxz
icebp
cmp
rcrb
add
stc
and
inc
inc
icebp
in
neg
lret
out
js
dec
aas
ds
inc
subl
iret
sbb
or
nop
movsb
outsl
stos
addr16
cmp
movsl
xchg
xlat
push
fiaddl
lahf
xor
mov
xchg
adc
fwait
icebp
das
jmp
psraw
test
pop
mov
push
adc
movsl
mov
clc
in
push
xchg
adc
repz
or
cmp
add
mov
and
out
repz
pop
movl
fsubrs
sbb
aad
mov
ljmp
cmp
mov
aam
pop
xchg
lret
add
dec
pop
stos
ja
push
scas
in
push
mov
push
xor
imul
lcall
sbb
inc
and
movsl
pop
sti
fildll
push
inc
das
shl
ljmp
fldenv
inc
mov
stos
and
mov
sub
xor
cmp
out
cmc
cmp
mov
mov
and
pop
pushf
arpl
inc
or
subl
jns
leave
xchg
test
loope
add
enter
sub
mov
fs
xor
xor
jns
mov
lea
pop
lahf
je
or
dec
pop
iret
lret
mov
mov
cltd
cmp
lret
and
mov
inc
andb
imull
and
fcompl
cmp
repnz
mov
insb
sbb
or
pop
or
pop
jnp
adc
sub
add
adc
insl
je
pop
cmp
sahf
pop
adc
cli
jo
call
insl
scas
ljmp
enter
popf
sbb
add
aad
xor
test
jbe
xor
sahf
or
pusha
pop
test
dec
notl
jge
inc
push
stos
mov
xchg
out
sbb
gs
jecxz
add
inc
frstor
inc
push
pop
fwait
fwait
int
sbb
adc
inc
int
adc
fmuls
out
jecxz
stc
bound
test
mov
dec
mov
xor
les
push
cmpsl
push
int3
cmp
imul
daa
pop
jo
test
mov
shlb
pop
pop
or
mov
cmp
aad
xchg
inc
sbb
pop
push
inc
in
outsl
mov
xchg
pop
mov
lods
test
add
cltd
in
in
out
nop
lcall
mov
in
js
pusha
push
and
popa
jp
jl
popa
pop
nop
movsb
test
hlt
lods
addr16
push
mov
pop
fimuls
loopne
addr16
outsl
into
add
stos
pop
jmp
out
dec
fs
and
lds
shl
mov
add
mov
lods
mov
adc
dec
outsb
mov
jno
adc
jg
sbb
inc
xchg
ss
lcall
aad
jbe
pop
stos
ret
pop
cmp
pop
loopne
out
add
call
test
xlat
arpl
cs
arpl
or
inc
test
repnz
data16
push
and
mov
xlat
mov
pop
pushf
mov
aaa
shll
lahf
pushf
jmp
pop
mov
push
into
call
das
inc
xchg
inc
ds
jp
insl
lock
repnz
outsl
adc
push
lret
mov
imul
push
ja
scas
aaa
add
stos
scas
int3
sub
lea
enter
push
out
add
mov
es
js,pt
jge
push
sahf
ror
pop
gs
adc
outsb
negl
jne
xor
and
pop
mov
sar
scas
mov
call
out
adc
sbb
shrb
jg
pusha
mov
fdivrl
test
bound
enter
lcall
mov
test
push
arpl
sbb
fsts
testl
xor
xchg
push
ret
push
pusha
fsubs
pop
out
or
sub
mov
pop
repnz
inc
dec
bound
pop
dec
inc
lret
xor
lret
mov
ds
mov
insl
outsb
push
mov
xchg
inc
pop
mov
sub
testb
addr16
cmpl
adcl
dec
sub
pop
dec
inc
je
out
fs
mov
movsl
pop
and
cmp
pop
lea
xor
insl
push
push
xor
enter
adc
xchg
jecxz
loop
xchg
stos
jne
dec
scas
mov
jle
inc
pop
sub
bound
adc
pop
js
dec
fidivl
rclb
jp
jns
sbb
sbb
ja
dec
sbb
pop
adc
adc
int
aad
frstor
mov
loopne
jb
daa
mov
xchg
int
insb
aas
add
pop
jl
ret
push
mov
test
dec
mov
imul
pop
pop
out
ret
xchg
cmpsb
jbe
bound
shrl
mov
lea
xchg
sbb
jae
mov
push
xchg
push
gs
sbb
mov
push
mov
dec
stos
movsb
sbb
jbe
jg
push
jb
lods
test
jns
loope
adc
lods
ljmp
lret
jb
hlt
adc
and
sbb
and
mov
rorl
mov
mov
xchg
push
popf
ljmp
adc
test
mov
cld
lea
push
mov
stos
pop
out
or
cmp
xchg
or
arpl
add
cmp
sahf
es
jno
sarb
dec
cmp
fwait
aam
into
or
repz
repnz
add
leave
pop
xor
adc
ljmp
insb
cltd
pusha
adc
test
or
mov
cli
push
test
pop
xor
xor
sub
push
push
xchg
lock
imul
andl
or
xlat
or
dec
mov
insl
sarl
incb
jmp
insb
cmpb
icebp
test
cmp
or
mov
pop
ds
mov
dec
mov
enter
leave
dec
push
cmp
or
cmp
jb
inc
xchg
push
and
stc
xor
xchg
enter
shlb
inc
ss
inc
out
cmp
push
repnz
add
mov
push
push
pushf
lods
aad
sub
inc
popf
in
ljmp
adc
dec
mov
lret
daa
and
imul
and
vpmacswd
div
or
cmp
enter
adc
cmp
int3
ljmp
mov
xchg
inc
pop
inc
dec
lcall
aad
xor
cmpsl
push
pop
insl
add
stos
adc
jbe
mov
arpl
out
xchg
out
push
mov
adc
cmpsb
rcl
stc
rsm
pop
enter
fsub
out
xchg
jp
dec
lock
insl
fnsave
pop
mov
cmc
test
jecxz
sub
leave
cmpb
add
jns
ss
push
adc
dec
push
mov
aaa
and
arpl
cltd
stos
filds
cmovp
loop
push
fmuls
inc
imul
pop
jg
fimull
fildll
push
push
je
lret
lea
popf
mov
mov
js
adc
add
imul
lret
sub
out
add
pop
push
pop
or
jae
cmp
or
sbbb
aad
adc
fcoms
rol
jmp
lret
arpl
fdivp
add
adc
and
jbe
pop
xchg
fldenv
std
mov
sbb
insl
ret
mov
xor
insl
mov
or
add
jge
or
cmc
cld
cmp
cmpsl
push
sub
shlb
rcrb
aas
xor
out
lods
insl
lds
icebp
sub
addr16
pop
ret
pop
adc
cli
mov
sbb
lock
js,pt
out
xchg
inc
loopne
or
ds
mov
xor
leave
push
cmpsl
sub
xchg
test
cmp
add
jb
xchg
outsb
call
outsb
push
jl
dec
xor
sbb
and
lret
cmc
sbb
pop
xlat
lahf
lods
call
jp
ljmp
mov
push
adc
pop
testb
add
call
fucomp
inc
adc
rcr
icebp
inc
aas
sub
addr16
in
out
into
mov
push
subl
mov
popa
mov
ret
imul
mov
outsb
arpl
xchg
jo
pop
mov
xchg
sub
mov
data16
fcomi
xchg
xor
jnp
ss
mov
repnz
dec
sbb
adc
scas
popa
or
imul
test
cld
xchg
add
push
insl
jnp
mov
adc
mov
push
les
lock
movntps
inc
dec
nop
lcall
insb
push
cltd
mov
test
and
sbb
jmp
xchg
push
mov
mov
xor
sub
movsl
cmpsl
xchg
scas
jae
test
xchg
fs
das
cld
dec
or
mov
inc
adc
cmpsb
in
lret
sbb
ret
ljmp
xlat
sub
sub
movsb
adc
adc
arpl
out
pop
mov
cmpsb
mov
sbb
add
dec
lods
data16
xor
mov
xchg
push
mov
test
sbb
dec
ret
std
lods
cltd
out
negb
out
lods
scas
sub
push
push
mov
sub
dec
nop
add
mov
xchg
inc
and
into
jmp
pop
push
pop
jns,pt
test
push
nop
add
mov
mov
imul
sub
and
mov
test
pushf
xchg
in
data16
jne
test
scas
add
rcll
shrl
jnp
repz
inc
xchg
sub
xchg
xlat
loopne
pushf
mov
ljmp
xor
inc
loope
xchg
jae
dec
nop
mov
mov
mov
mov
int3
lahf
ret
add
adc
decl
fists
push
movsl
hlt
rolb
sbb
lcall
popf
pop
push
add
rcll
ds
lret
divb
or
cmc
mov
loop
fsubs
pop
sbb
adc
cltd
shrl
dec
cmp
xor
dec
in
scas
dec
cld
and
arpl
lea
sub
push
cltd
pop
mov
insb
sbb
push
stc
or
pop
xor
adc
jb
push
push
lret
jl
shlb
xchg
jmp
dec
ljmp
inc
mov
fildl
mov
cwtl
push
xchg
mov
mov
loope
mov
rol
jl
and
cwtl
ss
xchg
cmp
ja
aad
cs
pusha
xlat
cmp
mov
jbe
jo
cltd
jecxz
mov
lock
push
mov
jecxz
inc
sub
clc
scas
cmp
adcl
sbb
sub
cltd
lcall
cmp
enterw
dec
sub
adc
ja
inc
lret
jmp
decl
dec
add
mulb
jmp
push
pushf
lcall
add
or
popa
imul
xchg
mov
push
aaa
sbb
push
xor
lods
imul
test
jle
mov
mov
andb
insl
insl
add
in
cmp
mov
stos
pop
pushf
aas
adc
and
mov
stos
inc
pop
sub
inc
shl
mov
mov
pop
and
cmpxchg
mov
mov
push
movl
gs
sub
mov
pop
ret
mov
jecxz
inc
std
and
ss
mov
mov
pop
mov
stc
in
pushf
or
or
aaa
mov
mov
inc
lods
dec
sbb
in
adc
add
or
mov
insb
jo
jo
fnstsw
mov
add
pop
dec
fistl
cwtl
jge
sbb
repz
arpl
cmp
mov
repz
inc
jne
icebp
add
mov
adc
call
sub
lods
jecxz
inc
or
mulb
sub
loopne
mov
jae
push
pop
inc
dec
sub
cmp
movsb
fisubl
gs
rorl
and
mov
in
je
imul
cmc
and
jne
xor
je
xor
cmc
mov
jb
mov
add
add
repnz
jmp
pop
pop
mov
lret
lods
mov
in
cmp
lods
pop
dec
clc
add
mov
dec
iret
shll
out
std
daa
xchg
and
mov
mov
imul
popa
jbe
outsb
aam
dec
js
lahf
add
inc
orl
mov
test
sarb
mov
dec
lods
push
inc
or
mov
or
jg
mov
mov
cmp
xor
mov
in
jg
pop
sbb
adc
in
std
add
mov
in
push
call
sti
push
mov
pushf
ret
cltd
or
jl
mov
inc
les
add
sbb
bound
mov
push
xor
in
ss
mov
push
pop
mov
mov
andl
and
jmp
mov
fdivrl
push
add
lds
lahf
loop
mov
adc
ret
jecxz
sbb
cmp
fistpl
inc
sbb
aad
pop
sub
jne
jb
mov
in
fidivrs
stos
ret
cmpsl
js
test
gs
add
int3
stos
push
dec
popf
aas
movsl
push
jns
cmpsl
xchg
sbb
and
test
add
or
push
xchg
mull
divl
xor
lret
and
rcrl
jle
mov
ds
mov
mov
sbbl
in
jb
pop
add
xor
xor
jb
sub
les
ljmp
push
add
mov
popa
sbb
xchg
test
sub
mov
aaa
sbbb
inc
loop
push
pop
or
dec
mov
popa
hlt
lret
shl
scas
sbb
fisubrs
add
mov
push
das
pop
mov
scas
movsb
push
sti
adc
mov
repnz
lahf
inc
mov
xchg
enter
jecxz
inc
sub
sbb
insl
outsl
mov
adc
inc
pop
lea
xor
pop
mov
adc
push
aam
xchg
sub
mov
and
sahf
lret
nop
push
adc
iret
insb
pushf
shlb
mov
jo
rorl
ljmp
sub
xchg
dec
mov
lea
clc
push
sbb
loopne
mov
daa
pop
jae
movsl
or
lods
sarb
es
movw
dec
in
shll
jns
push
out
sbbl
mov
mov
push
cmp
xchg
mov
scas
test
sub
lds
lea
lahf
cwtl
or
push
std
jbe
mov
loope
mov
mov
or
inc
inc
sti
jbe
adc
js
ffreep
mov
mov
cmp
jb
cltd
jge
xchg
xchg
in
test
sbb
data16
jge
jecxz
jns
fists
cltd
and
mov
mov
xlat
mov
imul
push
outsl
adc
adc
add
add
sbb
dec
push
sub
or
std
and
sub
popa
jnp
roll
iret
popa
mov
jne
les
scas
enter
mov
fs
outsb
push
daa
loopne
mov
mov
and
cmpsl
lahf
mov
sarb
loope
sbb
xchg
addb
pop
mov
xchg
xor
sub
push
jg
inc
loope
gs
jge
xchg
aad
enter
pop
addr16
lock
mov
nop
sbb
push
xchg
sti
inc
or
add
fisubrl
pop
pop
jnp
call
xchg
push
add
dec
mov
js
insl
out
dec
add
push
repnz
mov
int3
or
bound
inc
imul
iret
xchg
cwtl
call
aad
outsl
lock
lahf
sbbb
cld
popf
push
jne
cmp
int
scas
sbb
enter
sbb
stos
stos
ss
repz
mov
jnp
sarb
rorl
ljmp
int3
mov
cmpsl
xchg
push
inc
jnp
cmp
jle
fnstcw
push
sbb
push
in
imul
aad
add
popf
add
inc
push
sbb
icebp
ret
mov
and
addl
jbe
jg
js
xor
adcb
test
and
pop
mov
push
adc
repnz
test
lahf
xor
nop
fxch
out
mov
inc
sub
test
imul
loopne
pop
daa
inc
sahf
inc
gs
push
ret
mov
lret
or
lret
xor
pusha
cli
addr16
popf
cmp
scas
push
cmp
jmp
fadds
imul
mov
add
jb
xor
or
insb
xchg
jecxz
jecxz
scas
dec
in
mov
adcl
mov
mov
rcrl
xor
leave
popa
cltd
jle
jns
xchg
ficomps
mov
xchg
mov
push
adc
lods
in
dec
cmp
push
fbstp
pusha
out
mov
cmp
mov
adc
and
test
ds
sbb
mov
lret
ljmp
test
dec
loop
fisubl
fbstp
mov
sahf
lock
and
jb
fstpl
dec
test
mov
mov
pop
fstpt
mov
push
imul
in
movsb
shlb
gs
hlt
pop
cld
mov
idivl
pop
aam
scas
loop
mov
popa
push
fdivrs
gs
insb
divl
xor
rcr
mov
out
or
jnp
add
das
xor
icebp
pop
xchg
xor
pusha
ret
mov
cmp
push
add
std
xorb
pop
sarl
nop
sbb
out
lock
sbb
mov
rcrb
cs
mov
xlat
in
mov
sarl
ds
xchg
mov
lahf
shll
or
xor
xchg
cwtl
rcrb
sub
xor
cmp
push
cs
cld
push
add
arpl
insb
into
cmp
aas
cmp
and
loopne
fisubl
adc
mov
ss
mov
nop
sub
mov
out
jle
sub
orl
lods
mov
faddl
adc
sahf
das
xchg
xlat
xorb
mov
xor
arpl
data16
pop
bound
fwait
push
push
clc
add
js
add
mov
es
cmp
xchg
push
popa
pop
pop
mov
bound
push
jno
or
jmp
add
add
jle
adc
jns
cmp
and
push
mov
adc
jnp
push
out
jg
cmpsb
inc
mov
fs
add
sub
inc
cwtl
popa
mov
push
fsubs
push
push
cmc
jp
mov
js
dec
add
mov
cltd
ret
das
adc
into
xchg
in
loop
xor
push
add
pop
outsb
js
mov
cli
lods
mov
sahf
dec
std
jo
push
push
jae
aas
dec
push
add
or
mov
sub
mov
mov
mov
ja
pop
lcall
in
jecxz
mov
adc
lea
mov
sti
lock
cltd
xor
xchg
popa
ja
xor
and
jns
clc
cmp
insl
bsf
push
push
je
outsb
sub
pop
mov
shlb
xchg
inc
xchg
push
push
rcrb
dec
inc
into
std
cmpl
dec
ja
cltd
out
or
add
push
mov
jle
sub
jnp
test
jb
out
jbe
stos
or
jb
lret
xor
dec
dec
out
js
or
sbb
adcb
jmp
aaa
aad
aam
pop
jge
icebp
jp
fs
mov
xchg
inc
in
into
xchg
jno
lea
cmc
push
int
daa
negb
cltd
sub
fsubp
dec
insl
inc
pop
sbb
pop
mov
jmp
mov
stos
pop
in
les
xchg
sbb
pop
push
scas
mov
int3
xor
sbb
push
loopne
cld
mov
mov
xchg
mov
jnp
jbe
js
push
xor
jle
jbe
adc
bsr
das
dec
test
mov
pop
lret
or
jb
cmp
out
push
into
subl
cwtl
adc
jae
icebp
sbb
jp
inc
les
inc
outsb
je,pn
xor
ja
lods
push
iret
pop
lods
mov
adc
fcoml
stc
int
xchg
mov
add
rolb
dec
mov
adc
or
push
mov
dec
lea
ret
and
in
out
loop
fwait
nop
mov
dec
fcmovnb
or
arpl
dec
imul
inc
xchg
pop
push
fcomps
and
push
mov
and
cmp
adc
call
stos
dec
or
mov
sbb
xchg
scas
mov
test
sub
mov
dec
rolb
push
cmp
daa
in
add
push
or
rcrb
mov
push
int3
mov
inc
ret
mov
pusha
andl
pop
dec
xchg
xchg
ret
nop
lcall
lcall
dec
addr16
cmp
negb
in
push
aas
ds
dec
inc
mulb
add
sub
mov
sbb
mov
cmp
bound
mov
out
dec
lret
movsb
pop
cmc
ret
shlb
nop
les
test
stc
pusha
mov
jno
loopne
dec
orl
pop
ret
or
leave
push
pop
jae
inc
testl
sbb
sub
insb
mov
shlb
mov
or
dec
jmp
fcmovu
nop
cli
jbe
mov
xor
and
jg
popl
xchg
dec
std
addr16
jnp
outsl
and
fsts
push
popa
dec
sub
adc
outsb
movsb
mulb
or
insb
mov
sub
sbb
les
pop
addl
cmp
dec
loope
inc
pop
int
repnz
sub
jmp
xor
mov
cmpl
jmp
mov
lahf
mov
call
push
push
mov
ss
jb
imul
or
cmpsl
sbb
sbb
jmp
popa
fwait
jle
movsb
mov
addr16
aad
pop
sub
add
enter
clc
or
mov
pop
inc
mov
je
sub
loop
test
dec
mov
cmp
repz
rcrb
jno
in
fisttpl
aam
sub
insb
xchg
lea
mov
xchg
pusha
aaa
stos
pushl
lds
loop
mov
pushf
icebp
loope
xchg
mov
jbe
adc
imul
ret
loope
movsl
mov
dec
sub
push
xchg
push
pop
aas
push
scas
cli
add
lods
roll
stc
daa
push
inc
push
mov
inc
or
mov
mov
fsubrs
into
es
sarl
fidivrs
pop
ds
or
mov
fildll
sbb
mov
mov
push
test
pop
out
jle
repnz
loop
stc
out
cmp
mov
add
es
jo
and
repz
imulb
sub
mov
sbb
movsb
cmp
incb
lret
xchg
test
sahf
push
xor
push
imul
in
lods
scas
and
test
movsl
mov
adc
cmp
cmpsb
xor
and
inc
mov
xchg
push
sub
bnd
push
test
sti
addr16
cmpsb
fmul
mov
sub
or
dec
test
push
jbe
inc
pop
xor
fcompl
inc
in
inc
or
mov
xor
icebp
inc
nop
pop
gs
pushl
imul
in
inc
fildll
and
inc
aad
jp
jns
sub
test
out
sbb
jo
jmp
test
shlb
cmp
stos
imul
ss
push
sbb
int
int
adc
stc
ss
clc
testb
stc
mov
dec
in
imul
dec
xor
xchg
or
lock
push
sbb
cld
aaa
outsb
loop
subb
adc
pop
inc
cmpsb
dec
lock
sbb
jmp
xchg
scas
sbb
push
hlt
outsb
mov
pushaw
fstl
push
mov
je
test
imul
jge
gs
mov
mov
xchg
cli
ljmp
stc
mov
arpl
iret
xchg
lret
mov
sub
scas
hlt
or
jbe
pop
push
push
pop
or
out
fs
xlat
cwtl
and
mov
sti
jb
popa
push
add
add
adc
test
push
repnz
xchg
xorb
mov
repz
xchg
outsb
pop
clc
xor
sub
ja
iret
push
lcall
push
push
cmp
mov
xchg
jmp
mov
bound
fsubrp
mov
cs
fstpl
jmp
jge
rcll
mov
jae,pt
pop
hlt
movsb
pusha
stc
int
push
or
nop
pop
sbb
push
mull
adc
rol
and
jnp
movsl
std
in
loope
fists
incb
addr16
inc
mov
aad
pop
stos
xchg
icebp
and
addr16
dec
test
inc
inc
pop
stos
imul
pushf
scas
sub
mov
xor
sub
or
jns
jmp
das
add
test
mov
dec
mov
not
ror
fs
jbe
shll
movsb
dec
inc
outsl
cs
int3
in
inc
jl
ret
sub
cs
xchg
add
and
pop
dec
adc
xchg
mov
add
mov
cmp
pop
nop
in
movsb
mov
sar
nop
cmp
pop
pop
insb
call
out
or
xorl
jmp
mov
into
clc
mov
dec
js
movsb
je
inc
aaa
fldcw
hlt
sbb
mov
inc
jl
xchg
dec
pop
xor
mov
cmp
sub
movsb
lods
mov
dec
xor
mov
out
jo
adc
cmpsb
fsub
mov
hlt
cmp
xor
add
out
pop
sahf
jmp
insl
test
fildll
sub
outsb
mov
fidivs
and
sub
mov
xchg
movsl
and
sahf
push
or
fldt
xchg
cld
push
mov
cli
cwtl
roll
adc
pop
popl
add
enter
cli
aas
mov
push
push
xlat
cmp
add
mov
repnz
out
add
jb
xor
dec
mov
sub
xchg
jo
out
loope
mov
scas
mov
mov
sub
out
mov
ja
rorl
ret
aas
ljmp
pop
mov
sub
mov
dec
lds
shll
mulb
repz
mov
test
sub
xchg
cmp
push
mov
add
and
out
mov
mov
mov
sub
sbb
neg
dec
push
lock
bound
pop
fisubs
clc
clc
mov
fimull
popf
mov
mov
or
dec
push
out
fs
in
shll
rolb
pop
loope
mov
cltd
into
fists
sarl
ja
lea
push
push
push
iret
sub
pop
push
mov
out
bound
outsb
pop
xor
sar
push
cld
pop
sub
xchg
xchg
rol
cmp
ret
scas
repz
dec
inc
xchg
and
cmpb
andb
fistps
rclb
or
jae
adc
lcall
xchg
xor
cmpsl
inc
inc
jo
sub
cld
pop
and
bnd
pusha
mov
push
cmp
inc
pop
push
dec
push
xor
out
stos
dec
aad
cmp
or
xor
cmp
lret
xchg
imul
fcomps
mov
dec
push
and
mov
lahf
mov
int
sbb
movsl
mov
sbb
fdivp
jecxz
sbb
xorb
dec
mov
xchg
adc
mov
push
mov
mov
pop
xlat
pusha
pop
std
jo
and
xchg
lock
or
and
or
popa
xor
ret
jno
cs
dec
pop
jle
add
sub
scas
test
adc
mov
lds
iret
in
test
or
insl
xchg
out
in
mov
inc
cmp
xchg
cli
stos
inc
mov
icebp
xor
adc
adc
ficoms
cltd
int
adc
mov
jne
into
or
mov
mov
insb
sub
scas
jge
sbb
test
sub
mov
je
and
repz
movsl
mov
aam
lahf
sbb
pop
je
xlat
xor
adc
aad
in
rcl
sti
fidivl
mov
push
mov
and
push
or
pushf
mov
shlb
loop
cltd
jbe
and
mov
or
mov
lahf
cmp
gs
jecxz
or
add
rcrl
or
jb
inc
mov
mov
loope
ljmp
les
mov
mov
leave
sub
xchg
lods
adc
addr16
pusha
fiadds
fnstcw
pop
in
pop
idivb
xchg
pop
enter
pop
jecxz
sbb
loopne
sti
and
popl
xchg
jle
enter
sub
mov
push
loopne
and
push
sub
jo
xchg
icebp
jp
fwait
jnp
enter
push
insb
test
jns
xor
dec
jo
mov
jbe
mov
mov
out
xor
nop
fidivrl
shrl
xor
jb
inc
and
iret
fs
xchg
lods
cmc
test
dec
jae
mov
xor
cmpb
add
mov
add
dec
outsl
repnz
add
cmp
lods
subl
mov
add
sbb
insl
pop
xchg
enter
dec
mov
sbb
int3
das
mov
hlt
mov
fcomp
mov
inc
add
push
mov
scas
mov
iret
jmp
jecxz
inc
mov
sbb
dec
jns
das
xchg
or
inc
inc
ss
adc
inc
or
mov
fisttpl
jo
jge
stc
pop
jle
ficoms
xor
lret
pcmpeqd
rcrl
cmpsl
stc
pop
or
and
jge
sub
iret
dec
xor
rcrl
mov
loop
dec
cmp
cltd
cmp
mov
adc
das
jecxz
sub
and
and
ja
mov
push
push
ds
int
and
lds
cld
mov
iret
rcrb
add
inc
dec
xchg
push
dec
inc
mov
divl
int
outsw
mov
std
int
call
cmp
iret
mov
and
push
fdivl
lods
jge
icebp
inc
pop
push
in
rcl
insl
fwait
ja
icebp
bound
mov
or
mov
xchg
push
add
mov
mov
jmp
loope
sub
cmp
xchg
test
loopne
xchg
or
inc
scas
inc
scas
notl
enter
jl
cmp
push
data16
add
inc
leave
sbb
jbe
xor
rcrl
pop
cmp
mov
cmp
mov
mov
cmp
add
xchg
xchg
data16
jnp
stc
mov
lret
push
lret
cmp
jnp
and
jge
dec
xor
xor
aad
data16
and
popa
push
call
xlat
pop
les
loope
or
cmpsb
cmp
push
xchg
repz
ret
inc
rorb
jmp
pusha
test
int3
outsb
fadds
in
xchg
lea
daa
jg
push
xchg
or
lret
icebp
bound
dec
call
or
int
cmp
inc
and
adc
and
jmp
data16
jge
inc
nopl
in
cmp
sti
rclb
stos
mov
jb
jecxz
mov
xchg
jb
sub
add
cli
ja
sub
cmp
mov
sbb
or
push
les
ret
inc
leave
movsb
and
outsl
in
mov
and
sbb
push
sbb
push
xchg
and
mov
cwtl
lcall
sbb
das
jne
mov
xchg
add
fsubrs
mov
and
fwait
cmp
int
or
lock
or
add
in
pop
pop
mov
repz
rclb
dec
xchg
xchg
ds
aaa
push
andb
sub
insb
push
shl
shl
add
scas
push
pop
add
in
ljmp
adc
dec
jl
scas
enter
sahf
pusha
pop
mov
add
cld
xor
pop
add
add
scas
mov
mov
enter
mov
push
std
lcall
adc
or
and
leave
popf
std
pop
test
cmp
mov
shlb
add
sbb
cmp
cmp
dec
push
repnz
test
xchg
adcl
ret
xchg
pop
or
sub
aaa
in
outsb
add
icebp
in
stos
insb
pop
ja
xor
mov
mov
push
scas
or
clc
pop
jg
jae
cltd
dec
out
icebp
scas
dec
jae
mov
les
in
add
sbb
lret
xor
mov
xchg
incb
repnz
ljmp
or
cmp
mov
sbb
cltd
dec
lods
inc
popf
jmp
int
dec
push
cmpsb
test
insl
mov
mov
cmp
int3
sub
ss
xchg
leave
adc
dec
inc
sbb
gs
enter
lea
shrb
addl
fstp
mov
insl
xor
cld
jo
daa
sbb
in
shlb
sbb
cmc
cmc
rorb
sbb
jmp
lods
sahf
xor
in
test
jb
mov
cmc
bound
cltd
mov
jbe
pop
cmpl
inc
jnp
stos
outsb
mov
repz
js
mov
scas
out
js
fucomi
push
and
cmp
daa
lea
inc
lahf
mov
lods
add
and
jecxz
xor
cmp
dec
jne
sub
rolb
mov
enter
or
sbb
jg
adc
mov
sub
xor
xchg
cmp
and
imul
incb
mov
inc
imul
or
jge
or
hlt
je
adc
pop
lret
jecxz
cwtl
inc
push
pusha
mov
ljmp
push
lret
mov
add
xchg
xchg
jns
ja
or
loop
subb
adc
jmp
and
pop
inc
push
lods
mov
sbb
rorb
int3
push
es
inc
xchg
insl
xchg
sbb
adc
imul
fs
leave
repnz
in
imulb
add
fistpl
jecxz
mov
ja
and
dec
or
inc
cwtl
clc
cmpsb
je
loopne
jne
inc
or
mov
and
stos
pop
rcll
daa
or
xchg
pop
popl
jbe
jg
imul
and
add
scas
loope
addr16
cld
insl
out
jne
sub
loop
ja
add
in
fdiv
test
mov
jecxz
adc
rcrb
int3
inc
mov
sub
fdivrp
lods
dec
mov
stos
xorb
jo
jg
leave
dec
imul
dec
std
inc
cltd
and
movsl
jge
pop
movsb
dec
stos
lret
xchg
push
hlt
das
xchg
jae
or
dec
mov
xor
add
push
lds
enter
pop
imul
cmpsl
push
mov
add
scas
and
or
mov
mov
jmp
arpl
and
fiaddl
push
jb
xor
sub
jae
pop
lret
cld
out
pop
cmp
push
xchg
inc
add
clc
inc
mov
sti
xchg
inc
loop
in
mov
xlat
pop
inc
lret
stos
pop
inc
cmpsl
imul
test
cltd
adc
xchg
or
sar
pop
lea
cld
add
lcall
jno
movl
and
push
pusha
xlat
jae
hlt
jo
add
je
xchg
pop
lahf
gs
mov
push
jp
adc
mov
jno
je
and
imul
mov
sbb
dec
insb
lods
jne
les
sti
leave
and
sub
cmp
lret
or
daa
sbb
jp
and
push
sub
lods
jb
movsl
fidivl
inc
and
ror
mov
add
pop
out
fstpl
shll
cmc
dec
sub
in
inc
jecxz
mov
lahf
lods
cs
push
xchg
sub
mov
inc
or
mov
push
or
push
cmp
aaa
sbb
push
inc
xchg
rcrb
or
push
and
movsb
xor
in
sub
outsb
jnp
or
outsb
xlat
mov
gs
mov
aam
gs
cmp
lock
jnp
pop
mov
or
xor
sti
adc
fsubrl
xor
aad
ret
dec
call
fwait
outsl
xchg
mov
and
js
loope
add
pop
mov
addb
inc
dec
lret
hlt
mov
dec
pop
leave
subl
movsb
ret
xor
fs
xchg
sahf
lods
mov
popf
inc
aad
ret
cmp
ficompl
xchg
sub
cmp
or
scas
sub
cmp
xlat
cmp
sarl
dec
repnz
cmp
pop
sti
mov
xchg
sbb
add
sbb
xor
push
sbb
jmp
dec
pop
sar
loop
cmp
xchg
stos
or
addr16
dec
cmpsl
test
fstpl
xor
xchg
das
push
adc
jno
shlb
int3
dec
cmp
mov
rcrb
repnz
cltd
gs
enter
or
sar
mov
sub
shlb
cmp
sar
mov
sarl
call
imul
adc
xchg
add
sub
pop
sub
stc
dec
imul
repnz
neg
js
mov
lds
mov
aaa
inc
movsb
enter
inc
leave
sbb
pop
sbb
aam
push
in
repnz
in
or
xor
adc
insb
sub
jmp
movsb
inc
mov
aas
and
fldcw
fwait
lods
in
sub
mov
and
enter
mov
cs
loope
mov
inc
push
xchg
jo
pusha
out
push
sbb
sbb
dec
mov
and
lods
insb
mov
sub
aas
or
fnsave
call
mov
mov
enter
ret
scas
scas
repz
mov
adc
xchg
and
orb
adc
cmp
sbb
test
shrl
popa
and
inc
fcoms
pushf
mov
inc
mov
push
xchg
mov
stc
pop
mov
xchg
inc
enter
rorb
cmc
add
stos
sbb
jb
mov
mov
pop
sarb
out
mov
rorl
push
mov
enter
data16
mov
mov
std
push
cmp
je
nop
aaa
inc
test
sbb
adc
popa
or
or
mov
xor
repz
jno
out
inc
lods
xchg
jle
enter
dec
adc
pop
dec
out
movsb
jle
cltd
sub
and
rcl
xchg
or
sub
mov
aam
mov
pop
or
and
sbb
jo
dec
mov
nop
aad
jle
or
lods
mov
fisubrl
push
test
or
bound
daa
mov
aaa
xlat
mov
loopne
fnsave
push
mov
inc
jnp
lock
or
stos
push
scas
push
pop
test
leave
sbb
in
cmp
xchg
or
cmp
push
fbld
pop
push
loope
adc
xor
gs
sbbb
mov
fnsave
shll
imul
add
gs
inc
je
xorb
mov
outsb
sub
popa
inc
dec
rcrb
jo
clc
flds
xor
sub
jnp
cmp
icebp
or
mov
adc
cmp
or
fmull
lcall
push
sar
cwtl
xor
and
stos
push
lods
xchg
lds
jo
cli
stos
jne
and
xlat
dec
test
es
loopne
aad
push
push
or
data16
scas
fst
fbstp
xor
mov
mov
push
lahf
jbe
mov
ret
das
jl
sbb
cmpb
add
sbb
outsl
rorb
cmc
jns
mov
cs
push
call
and
icebp
xchg
or
fidivrs
sub
fldl
dec
fs
or
and
into
aam
cmc
lret
mov
xchg
clts
ja
cmpb
dec
mov
popf
mov
loop
fistpll
xchg
es
jbe
jno
popf
add
cmp
or
int3
popw
shlb
lcall
xchg
leave
mov
sbb
cmp
bound
pop
cmp
rorb
inc
push
daa
sub
int3
std
push
mov
mov
orl
stos
add
iret
out
mov
adc
lds
cmp
mov
sbb
push
pop
dec
fs
dec
rcll
test
popa
pusha
ljmp
inc
jno
pop
stos
jge
mov
jns
xor
hlt
in
loop
clc
mov
enter
fadds
push
test
sbb
out
xlat
aam
mov
and
xchg
fiadds
adc
cmp
shl
add
jp
ja
out
mov
pop
mov
sub
jae
lods
sub
andl
jge
mov
push
push
in
cld
push
jge
in
xchg
je
jno
in
fstps
pop
cmp
pop
in
push
faddp
mov
les
mov
sub
insl
sbb
inc
mov
cmp
pop
inc
ficomps
push
pop
shlb
inc
les
pop
outsl
sbb
fnstsw
sub
lcall
sub
clc
xchg
pop
in
outsl
or
loopne
and
and
sarl
fs
mov
icebp
insl
ud0
sbbl
enter
fmuls
push
or
aam
test
jne
dec
sbb
and
pushf
in
lret
out
fstpl
dec
xor
dec
pop
roll
cmp
mov
repnz
push
cmp
dec
fcompl
rolb
das
xchg
inc
rolb
jno
jl
pop
jg
lea
adc
stc
sub
hlt
mov
push
test
adc
sub
dec
or
mov
lock
mov
insl
push
push
jge
test
inc
add
sbb
inc
dec
mov
faddl
jge
ja
mov
inc
cwtl
push
add
sti
mov
or
sbb
and
adc
dec
push
add
shlb
mov
ret
inc
adc
and
pushf
lret
add
xor
xchg
out
mov
add
ss
xchg
pop
std
pop
sbb
in
xor
xchg
mov
push
adc
ret
cmpsb
inc
sbb
shl
and
lods
int3
lret
inc
addr16
fidivl
dec
imul
xor
mov
daa
movzwl
sbb
lcall
cmp
gs
mov
xchg
push
mov
push
lock
pop
push
in
add
mov
mov
sub
cmp
enter
sahf
jecxz
rorl
arpl
sub
push
mull
cmp
xor
rorb
add
sbb
aam
inc
shll
pop
cld
mov
push
push
sub
loope
sbb
cmp
mov
dec
mov
jb
arpl
pusha
push
call
xchg
xchg
aad
cwtl
out
add
push
imul
insb
xor
lods
cwtl
and
mov
dec
loope
jne
mov
and
push
aam
mov
pop
add
add
test
lret
pop
dec
fidivl
cmpsb
fwait
out
fisttps
loope
inc
int
cs
loopne
xor
and
iret
loop
dec
push
cli
fdivl
add
push
scas
arpl
pop
add
mov
stc
lcall
push
mov
fildll
cmc
mov
xor
mov
jno
add
push
mov
lods
dec
outsl
or
pop
push
cmp
mov
sub
cwtl
popf
pop
sbb
or
add
mov
in
imul
pop
pop
xor
jge
call
inc
ret
arpl
adc
dec
and
push
outsb
ljmp
sti
pop
pop
adc
das
daa
lcall
aaa
jo
mov
sbbb
lahf
in
push
in
pop
mov
mov
adc
clc
in
inc
mov
aas
cmp
mov
or
ret
popa
rcr
inc
aad
sub
cmp
stos
dec
adc
je
inc
mov
mull
imul
mov
add
pop
repnz
notb
test
loopne
test
lock
out
imul
arpl
cmp
add
dec
inc
cmpsb
xchg
cmp
xchg
test
into
iret
std
lods
insl
pusha
movsb
mov
subb
jo
or
gs
push
lcall
es
xchg
xchg
dec
hlt
dec
addl
lret
sahf
arpl
sbb
outsl
movsb
je
call
sarb
movsb
daa
add
mov
das
jmp
sub
mov
icebp
xchg
mov
cltd
cmc
jb
addr16
jno
mov
les
icebp
repnz
mov
std
add
push
or
push
xchg
mov
insl
mov
xchg
stc
out
ffree
push
xchg
mov
pop
les
pop
inc
in
inc
dec
dec
stc
repnz
inc
pusha
or
mov
dec
cs
mov
fimull
mov
and
jne
and
sbb
outsl
or
xorb
xor
sbb
dec
pop
pop
jne
popa
cs
in
xorb
hlt
pop
in
mov
mov
push
pop
dec
jp
mov
sub
mov
inc
jbe
or
sarl
shr
jp
cwtl
lds
leave
push
cmc
aaa
push
in
pop
repz
or
pop
repz
lret
mov
notl
jns
rorl
out
ja
lret
dec
dec
jg
jge
lods
movsl
stos
std
setns
inc
jnp
adc
push
sub
cmp
lods
pop
mov
test
pushf
inc
xchg
sub
xor
pop
lock
push
loopne
iret
xor
inc
sub
mov
mov
sub
jns
dec
jns
inc
mov
or
pop
or
pop
mov
aaa
pusha
test
mov
insb
sub
push
sbb
xor
clc
outsl
into
js
scas
push
inc
cmp
shrb
dec
pushf
xchg
push
xchg
div
in
sbb
test
cmp
insl
push
cs
mov
call
add
xor
lret
cmp
movsb
push
outsb
jae
xchg
ljmp
mov
push
xchg
mov
adc
stc
in
add
rorb
pop
cli
nop
pop
int
jge
lock
dec
clc
jl
iret
gs
negl
in
out
js
imul
flds
je
xor
bound
lahf
xor
out
xor
jp
mov
mov
dec
sbb
daa
mov
push
mov
in
mov
push
push
mov
mov
imul
mov
jb
mov
gs
dec
xor
out
out
in
mov
shlb
jne
xor
leave
in
pcmpgtd
aad
ret
andps
pop
ds
push
lret
jg
pop
xlat
je
mov
sub
loopne
in
dec
or
movd
jb
pop
and
jns
mov
and
sub
mov
push
inc
fldt
mov
outsb
add
mov
inc
lods
stos
clc
outsb
mov
clc
cmp
xor
sub
rcrl
outsl
mov
fildl
sbb
cltd
stos
out
add
jmp
pop
xchg
and
jg
xchg
jo
lret
mov
inc
mov
push
mov
add
imul
xchg
mov
adcb
shrb
vprotd
test
dec
jae
jp
lcall
cmpsb
push
ds
jg
in
or
popf
ss
cmc
lret
test
pushf
gs
out
lds
and
dec
add
aaa
popa
mov
clc
nop
adc
dec
les
xor
hlt
pop
sbb
xchg
nop
aad
jo
outsb
iret
fcompl
rcll
jo
xchg
hlt
std
hlt
mov
pushf
test
testl
and
xor
pop
inc
in
cmp
mov
sbb
gs
sub
and
hlt
xor
sbb
fisubl
movsb
jne
les
frstor
sub
inc
adc
push
lods
cmp
mov
je
fimuls
insl
into
jmp
inc
mov
sub
pop
dec
addr16
or
lock
rclb
mov
pusha
test
sub
mov
test
or
push
cmp
mov
cld
outsb
pop
aaa
daa
ret
cmp
fisttpll
subb
pusha
jle
jae
insl
cmp
dec
xor
ret
jnp
nop
fistpl
insb
mov
pop
std
sbb
push
loop
fwait
call
lods
dec
adc
repnz
sub
or
test
int3
xlat
mov
gs
mov
lret
mov
sbbb
in
shlb
mov
sbb
sbb
ja
pop
subb
movsb
cmp
mov
push
pop
mov
mov
icebp
cmpsb
enter
push
fnsave
sub
add
sub
push
dec
std
cld
cld
sbb
pop
roll
nop
sub
test
inc
push
lret
js
sbb
mov
fcoms
pushf
inc
xchg
mov
test
rolb
sbb
lods
mov
imul
mov
test
cmp
rolb
xchg
in
mov
pop
push
inc
push
dec
sub
sbb
add
aam
imul
mov
pop
add
test
dec
into
ljmp
rorb
or
inc
and
sbb
insl
insl
xchg
andnps
test
xchg
ret
shll
rorb
hlt
mov
ja
xchg
in
rclb
cltd
push
mov
insb
inc
pushf
lret
inc
pop
xor
mov
jecxz
pop
ds
orl
dec
sub
sbb
cmp
mov
mov
jmp
iret
insl
pop
aaa
push
sbb
mov
lods
add
rcrb
lds
rorl
sub
lret
repz
mov
push
pop
out
jns
leave
lock
push
add
pop
lock
fucomi
scas
xchg
pop
aad
add
jae
add
out
cmp
push
mov
dec
out
mov
js
xchg
add
addr16
ror
jl
pop
dec
push
cmp
imul
sti
mov
xlat
mov
scas
xor
xchg
adc
xor
aaa
xor
push
or
push
das
xchg
test
fcmovb
adc
icebp
in
inc
dec
das
cmp
and
xor
dec
stc
scas
sub
xchg
xchg
leave
mov
mov
cmpsb
or
pop
and
popf
mov
leave
clc
ja
pop
fldcw
mov
mov
adc
push
addr16
int3
sbb
repnz
adc
pop
ds
inc
dec
sub
mov
mov
cmp
loop
repz
lds
mov
adc
jnp
in
lods
mov
dec
add
inc
lret
sti
fbstp
loope
adc
xchg
rorl
xchg
and
lahf
jbe
push
lret
mov
or
stc
or
add
cmp
sub
jno
push
rclb
adc
pop
adc
outsb
nop
and
push
pextrw
mov
daa
cmpl
push
push
dec
mov
call
orl
decl
pop
mov
mov
imul
push
inc
dec
mov
inc
adc
in
test
test
jb
adc
movsl
dec
dec
lret
nop
or
lods
inc
pop
mov
xchg
pop
fsubrl
stos
movl
inc
lods
loope
inc
arpl
push
ret
outsb
enter
into
nop
mov
loope
fcomip
add
add
mov
out
push
icebp
mov
fldlg2
dec
sbb
imul
lds
or
inc
iret
jae
pushf
sar
pop
cmp
xor
stc
loopne
ds
adcl
or
std
lea
or
pop
addr16
push
loope
outsb
out
sub
stc
cmpsl
xchg
pop
dec
movl
out
call
hlt
lahf
pop
xlat
push
addr16
inc
in
jbe
fiaddl
cmc
add
mov
pop
sbb
mov
xchg
into
sti
push
fildl
scas
sbb
push
addr16
shll
out
icebp
jns
stos
sbb
adc
jge
out
sahf
ret
inc
add
movsb
xchg
mov
icebp
pop
negl
mov
push
dec
push
sbb
fdivl
sbb
jge
cli
mov
js
or
outsb
dec
rorl
xor
mov
out
or
enter
mov
add
pop
sbb
call
add
jle
mov
mov
cwtl
iret
lcall
jl
lret
les
jecxz
aam
inc
mov
bound
push
insl
int
mov
or
push
pop
mov
add
int3
pop
fsubrs
dec
arpl
movsl
leave
pop
sahf
popf
cmc
sti
jo
loop
adc
popa
arpl
das
lahf
push
jg
mov
mov
sub
xchg
or
rcll
cmc
ljmp
xchg
dec
fldcw
or
mov
xchg
movsb
in
sbb
mov
or
clc
in
or
cli
xorb
loope
pop
test
dec
cli
sbb
push
sub
les
cmpl
outsb
ds
sbb
ret
flds
inc
fisttps
dec
out
mov
in
addr16
shrl
and
cmc
mov
sbb
scas
out
cmp
outsl
dec
or
xor
movb
mov
or
dec
pop
pop
je
lods
push
mov
or
mov
fwait
pop
push
in
push
scas
dec
sub
pop
jmp
jae
and
loop
sub
and
js
xor
adc
xchg
and
dec
int3
cli
jmp
stc
xchg
jbe
sub
mov
push
inc
lahf
shlb
jp
insb
or
insb
mov
mov
sub
sub
es
push
push
mov
nop
bound
hlt
shrl
int
jno
or
jne
and
mov
or
jge
mov
lret
fwait
cmpsb
fsts
jns
sahf
mov
lods
lcall
or
scas
or
ret
clc
push
sbb
cs
loopne
insb
cmp
rcll
pop
push
addr16
pop
out
inc
add
aas
scas
mov
lea
sub
inc
dec
and
and
iret
mov
popa
push
pop
jbe
jb
push
out
adc
and
inc
movsl
jecxz
jmp
inc
fistpll
push
fwait
sbb
lret
jne
xchg
rclb
adc
jmp
jnp
aad
outsl
jp
mov
jns
cmpsl
mov
imul
outsb
add
out
jns
xchg
out
cmp
push
mov
jns
xchg
shrl
imul
aam
test
iret
fs
stos
and
cmp
es
lods
aad
inc
insb
jnp
xchg
or
push
push
lock
imul
pop
xor
jne
lea
and
pop
cmpsb
jb
mov
mov
mov
add
loope
pop
xlat
lret
test
push
pop
fdivrs
mov
outsl
loope
or
fistpll
and
sar
dec
clc
sub
sbb
mov
push
mov
cli
lock
dec
test
dec
sahf
inc
cltd
or
sbb
in
outsl
int
test
je
sub
dec
mov
cmp
fidivl
push
jo
pop
sub
inc
mov
gs
and
lock
pop
dec
adc
push
fidivrs
mov
and
cmp
lret
loopne
xchg
xchg
popa
push
ficompl
inc
cmp
sub
dec
xchg
pop
mov
mov
mov
insb
pushf
insb
mov
adc
jecxz
pop
or
popa
sub
shlb
or
mov
cld
aaa
repz
add
movsl
in
clc
sbb
stc
loope
cli
and
lret
pop
popf
loop
mov
sub
or
jp
ds
mov
mov
ja
dec
sbb
fiaddl
stos
dec
mov
js
out
shrl
dec
movsl
cltd
sbb
jae
fwait
mov
out
rcl
cmpsb
out
xchg
int
lds
dec
mov
loop
xchg
inc
dec
mov
pop
lret
lods
jp
lods
sub
frstor
and
add
aaa
dec
mov
jno
sub
ret
ret
mov
pop
in
test
mov
and
sbb
out
das
adcb
gs
loopne
pop
or
shrb
imul
inc
xor
jne
insb
xchg
in
sub
push
pand
adc
stc
push
sahf
pop
mov
push
sub
xor
dec
mov
mov
dec
leave
or
ljmp
fmul
daa
cmpsl
lock
jge
mov
and
je
idivb
ja
xchg
add
xor
mov
xor
pushf
test
repz
mov
stos
ljmp
and
jns
sbb
outsb
cld
das
dec
sub
cmp
cmp
cmpsb
ja
sbb
jnp
sbb
jnp
leave
sub
push
lock
mov
ljmp
jbe
add
cld
inc
sbb
in
jp
nop
and
or
inc
and
add
fisttpl
stos
test
jae
cmp
jmp
xchg
pop
icebp
stc
cmp
lods
mov
mov
xor
jmp
add
xchg
pop
int
inc
push
xor
sub
and
cmp
jno
data16
pop
loop
jbe
jg
add
gs
insl
cmpsb
daa
adc
addr16
add
adc
test
stos
add
push
xor
mov
aaa
lock
pop
jg
repz
fldenv
cli
sbb
jmp
imul
iret
push
mov
inc
mov
adc
xor
jge
loopne
add
fidivrl
popa
inc
cmc
mov
xor
decb
cmp
and
sbb
add
pop
mov
and
cmp
push
orb
adc
test
adc
lods
fistpll
loop
mov
cld
enter
push
es
pop
call
and
mov
sbb
pushf
cmp
xor
ror
dec
jns
and
mov
sti
leave
pop
dec
mov
pop
ljmp
mov
or
rcrb
movsl
out
scas
jge
sub
loopne
adc
mov
push
incb
iret
mov
stc
jne
test
push
std
ljmp
dec
icebp
stos
pop
mov
pop
hlt
xor
mov
imul
mov
ss
add
pop
push
or
mov
inc
movb
jb
je
outsb
pop
inc
leave
lret
testl
mov
negb
lods
jne
dec
or
cmpsb
mov
mov
lock
cmp
sub
sbb
jo,pt
inc
dec
lret
sub
sbb
jge
test
inc
cltd
aas
sbb
push
mov
dec
fwait
cmp
dec
pcmpeqd
inc
xchg
inc
je
mov
test
push
insl
lods
and
ljmp
mov
out
cmpsb
dec
sahf
adc
and
pushf
out
inc
jne
jne
daa
repnz
pop
adc
mov
sub
sub
pop
out
mov
ds
cmp
inc
ss
dec
adc
push
cmc
or
mov
push
cmp
add
jbe
not
and
mov
pusha
out
ja
mov
mov
mov
fldl
roll
clc
mov
pop
xchg
and
inc
xchg
push
pop
sub
sub
sti
out
push
push
dec
in
mov
hlt
inc
xchg
sahf
addr16
dec
lea
xchg
std
adc
and
sbb
mov
out
xchg
xchg
push
and
xlat
loope
in
sbb
rcrl
notb
fstps
pop
sbb
iret
sbb
and
pop
leave
test
or
ljmp
xchg
push
and
sbbl
pop
out
dec
xchg
cmp
mov
fwait
sti
test
jns
inc
sbb
xor
cltd
stos
aas
adcl
fnstsw
mov
sbb
loop
pop
or
stc
out
loop
xchg
sub
mov
inc
cmpsl
fsubs
pop
push
aam
jo
inc
xchg
inc
movsl
sbb
and
fiadds
hlt
loope
in
push
push
std
sub
inc
ds
int3
lods
xlat
imul
fimull
stc
stos
xchg
fadd
and
push
inc
jmp
rorb
jnp
cmp
add
sub
xor
aas
push
push
pushf
test
rcr
and
frstor
adc
pop
mov
xchg
sarl
jmp
or
push
out
ret
and
imul
out
dec
fsubrl
std
xor
in
sti
dec
cwtl
jno
xchg
aaa
outsb
cld
popf
dec
insb
sub
pop
leave
xor
cmpb
out
aaa
sbb
xor
into
outsl
in
movsb
ret
sbb
mov
push
fnstsw
mov
lcall
and
mov
out
jns
pop
test
inc
mov
aad
sub
jg
inc
pop
adc
fildl
sub
xor
pop
sbb
cmpsl
ljmp
jp
xor
loop
into
addl
sbb
mov
xor
js
and
xor
test
jno
add
loop
aad
mov
decl
out
ds
movsl
jne
scas
lods
dec
mov
aas
in
xor
mov
nop
gs
lret
fs
sbb
mov
ja
ret
sub
mov
or
cld
mov
mov
sub
test
sbb
mov
adc
jnp
and
sub
in
test
push
ret
ss
out
sub
pop
je
imul
inc
ficomps
cltd
fs
push
cmc
and
or
cmp
mov
hlt
daa
dec
jl
cli
sbb
mov
js
xor
loop
bound
fistl
jo
mov
and
std
insb
inc
jmp
mov
or
mov
push
sub
pop
sbb
inc
shll
push
jge
fimull
clc
adc
sub
jp
xor
or
loopne
jns
pcmpeqd
xor
outsl
mov
test
fsubrs
push
sbb
pusha
jmp
out
test
adc
rorl
test
dec
ret
nop
enter
shr
sbb
test
fnsave
push
xor
lods
lods
ja
stc
mov
inc
dec
jbe,pn
jns
or
lock
jbe
add
xchg
cld
sti
imul
movsb
sahf
subl
push
jp
leave
fprem
or
xchg
scas
lods
add
mov
mov
push
ljmp
mov
sub
xor
in
jae
dec
stos
loopne
push
inc
cmp
dec
data16
jmp
daa
inc
dec
nop
xor
insb
push
ljmp
jle
test
and
in
push
cmp
movsb
inc
xchg
mov
ljmp
inc
and
das
xor
and
outsb
clc
sbb
xchg
fidivrs
jnp
adc
fwait
iret
testl
outsl
mov
and
rcr
xorb
xchg
pop
and
lcall
insl
es
jae
movsl
dec
mov
fs
sbb
ss
test
mov
test
adc
adc
jb
loop
js
iret
push
sahf
sahf
dec
sbb
rclb
mov
lods
out
or
out
and
mov
pop
push
jecxz
xchg
mov
loopne
mov
add
popf
fisttps
jo
jg
mov
adc
in
mov
mov
test
test
jmp
jno
mov
repnz
jo
adc
push
imul
push
push
adc
cld
mov
ja
dec
mov
jne
add
ret
out
out
enter
das
bound
inc
and
js
xor
sbb
push
push
mov
adc
adc
xchg
imul
ss
pop
add
mov
sbb
int
aas
pop
fstl
insb
ss
mov
and
loopne
xchg
adc
mov
push
fdivrl
sub
mov
sti
int3
sub
fyl2xp1
dec
decl
inc
xor
dec
mov
in
sub
pop
ds
xchg
xor
and
ja
cmp
fs
js
xor
dec
jmp
adc
fiaddl
movsl
int3
jns
test
int3
mov
hlt
ficompl
repz
sub
pop
xor
lcall
orb
call
adc
in
cli
outsl
clc
test
dec
mov
data16
in
push
sub
pop
fimuls
inc
sbb
xchg
sub
xor
mov
nop
push
arpl
dec
pop
cmc
mov
push
lods
in
push
lea
mov
xor
fistpl
or
jnp
mov
lcall
ret
dec
sbb
pushf
pop
ret
mov
mov
mov
ss
into
ja
mov
stos
mov
ret
pop
pushf
xchg
dec
fildll
xchg
add
ljmp
ss
test
push
lcall
sbb
add
add
rcpps
mov
dec
testl
cmpsl
enter
sub
fldpi
xchg
mov
testb
push
jno
or
add
sbb
cld
xor
stos
adc
mov
mov
fstl
int
xchg
push
fstps
push
imul
ja
xchg
cwtl
jge
jns
inc
cmpb
jb
jmp
cmpsl
rcrb
xchg
xlat
adc
test
es
or
sub
gs
fcmovnu
inc
adc
fmuls
cmp
out
jne
and
test
adc
cmpsb
mov
repz
mov
int3
test
xor
mov
lock
inc
insb
int
repnz
xchg
pop
sbb
xchg
call
lahf
add
rorb
jno
xchg
icebp
into
jge
inc
sahf
movl
mov
repnz
test
shll
stos
arpl
stos
add
mov
in
imul
ret
aam
pusha
mov
jle
mov
mov
cs
imul
or
enter
icebp
mov
sub
dec
xchg
lahf
rolb
pop
test
rorl
clc
xchg
sub
sub
sub
cmp
sahf
add
mov
js
stos
das
sbb
mov
arpl
lcall
stos
jo
xchg
fldcw
jbe
cmp
pop
mov
cli
xor
jmp
out
lret
and
jmp
cmp
mov
fwait
pop
push
sub
out
jno
jmp
aas
mov
or
pop
xacquire
ficompl
lcall
adc
xor
js
lea
and
or
pop
xor
jmp
and
lcall
jge
mov
shlb
mov
insb
mov
adc
adc
shrb
xchg
lcall
mov
aam
mov
push
addr16
test
and
jbe
pop
cmp
pop
aaa
lds
push
loop
inc
mov
pushf
cvtps2pd
push
dec
stos
int
fcompl
xchg
icebp
and
popa
stos
xlat
arpl
inc
sahf
and
mov
dec
jge
inc
shl
xchg
or
pop
cmp
leave
and
jp
or
add
test
test
std
xchg
sbb
outsb
outsl
ficompl
push
sub
mov
aas
ljmp
shl
xor
cmp
add
int3
push
sub
in
dec
aaa
sub
jnp
test
mov
clc
cmpb
pop
jmp
loop
je
loope
das
xor
icebp
jmp
inc
subl
cs
scas
stos
sbb
inc
add
add
jle
sbb
push
pop
pop
movsb
rorl
push
lea
xlat
pop
rolb
popa
mov
dec
xchg
out
cmp
fmull
push
fisubrl
mov
push
cld
jl
popf
fistps
mov
adc
addr16
sahf
cmp
inc
jno
sahf
ljmp
inc
arpl
push
pop
jae
lahf
sbb
push
je
adc
adc
xor
repz
pop
xchg
lea
cmp
sbb
pop
in
ror
leave
mov
popa
pop
add
outsb
xlat
js
cwtl
jo
enter
jmp
divl
cmpsl
and
xchg
jo
rol
xchg
mov
ss
inc
mov
mov
imul
and
dec
sub
cmp
movsb
xor
fisttps
sbb
sarl
gs
xlat
mov
push
loope
outsb
add
hlt
lods
ret
in
inc
xor
add
js
sbb
and
mov
divl
pushf
xor
test
or
jns
pop
mov
roll
pop
fcmovb
sub
fildl
les
sub
in
call
pushf
add
sarb
arpl
out
addr16
int
insb
shrb
cld
xor
lods
mov
lret
push
adc
hlt
data16
mov
cmp
ljmp
lcall
lods
jmp
mov
pop
xchg
fidivrl
or
jae
addr16
test
push
lock
mov
stos
fcoms
dec
mov
fidivl
add
aad
dec
dec
or
jns
ss
cmp
jge,pt
roll
ficoml
and
mov
mov
fisubrs
int3
or
sbb
sub
jne
imul
int3
xchg
push
iret
sbb
roll
popf
adc
into
cwtl
pop
xor
jp
or
jae
add
adc
mov
adc
inc
jo
jo
gs
test
inc
pop
jo
cmp
cmp
sbb
ss
or
xchg
and
adc
cmp
inc
gs
lods
out
fisubs
fisubs
cmpsb
push
mov
mov
pop
lods
pop
int
push
in
out
or
cmp
in
push
fwait
fwait
ja
xchg
adc
inc
ret
fbstp
and
leave
addr16
jae
push
mov
sub
shrb
into
in
add
gs
jae
cltd
mov
and
loope
loopne
idivb
jmp
xor
sub
and
xchg
push
jmp
pop
inc
mov
insb
test
sbb
rol
dec
daa
adc
std
dec
jns
leave
lret
or
jecxz
js
cmp
je
insl
xchg
pushf
and
pop
mov
out
hlt
cmpsb
rcrb
sub
data16
push
add
data16
or
mov
jno
mov
adc
in
inc
mov
cwtl
xchg
sbb
cmp
cltd
mov
in
and
push
fnstsw
mov
mov
jp
addl
and
mov
ret
sbb
aam
or
jae
push
inc
test
push
call
iret
push
xchg
movsl
xor
or
xlat
xor
xor
pusha
mov
add
push
jne
fisubrs
or
mov
repz
cs
xor
and
cltd
cltd
xchg
mov
in
mov
loopne
push
test
inc
inc
fidivl
idivl
cmp
out
mov
mov
sahf
inc
add
xor
aad
push
mov
sub
mov
sar
in
sub
jbe
add
pop
sub
or
xorb
pop
scas
test
fildl
mov
push
aam
sub
jg
sahf
in
adc
sub
adc
sbb
cltd
scas
push
outsl
lret
icebp
pushf
xor
inc
mov
pop
stos
lahf
cltd
sbb
xor
push
pushf
mov
xchg
lahf
mov
mov
push
jp
mov
popa
ljmp
cltd
aad
add
mov
xor
mov
es
push
or
cmp
testb
pusha
test
sbb
outsb
outsb
and
sbbb
jg
outsl
pop
xor
jle
cwtl
cld
into
sbb
pop
pushf
jmp
icebp
adc
xchg
sbb
imul
lcall
jmp
sbb
cmp
and
xchg
aam
xor
push
ds
add
das
sub
roll
mov
jmp
mov
int
mov
addr16
rorb
pop
scas
rorb
leave
stc
mov
xor
xor
mov
sub
sbb
imul
es
jge
mov
les
add
ret
out
sbb
lret
and
movsb
cld
jecxz
fisttpl
arpl
jp
xchg
mov
jg
in
or
add
arpl
sbb
xor
push
jno
std
jo
sbb
add
push
or
int3
and
sbb
pmaxsw
push
mov
cmp
or
daa
xor
mov
lods
pop
fmul
test
ret
int
or
push
sub
xchg
or
adc
addr16
jle
popf
subl
stos
fisubrl
push
test
stos
sbb
mov
les
test
xor
ljmp
into
mov
xchg
add
stc
fwait
jmp
add
movsb
aad
bound
jmp
inc
int
jmp
push
adc
icebp
fwait
inc
fs
js
sbb
mov
xor
and
fdivrl
cmpsb
sbb
xlat
mov
stc
cltd
jg
fidivl
push
adc
js
std
push
ret
xor
es
mov
cmp
mov
int3
idivb
inc
outsl
pop
in
test
outsb
or
mov
mov
xor
cltd
xchg
add
mov
lock
and
pop
int3
push
in
pop
pop
pop
lret
push
dec
std
jnp
dec
adc
fsts
imul
sbb
popa
ja
dec
test
divb
scas
insb
out
jge
jnp
add
icebp
lds
ret
es
scas
xchg
adc
int3
inc
out
insl
sbbb
dec
or
inc
push
mov
gs
pop
mov
xchg
lods
jbe
dec
dec
add
xor
lcall
mov
cmpsb
cmpsl
and
fimull
scas
add
push
jno
mov
push
or
lret
pushf
jle
sbb
push
into
sbb
xor
fwait
jbe
push
dec
ja
xabort
push
inc
mov
fcmovb
xchg
jb
jae
shrl
pop
inc
imul
mov
mov
fsubr
or
push
add
dec
shrl
test
mov
xor
cmpsb
adc
dec
pop
jbe
xor
mov
les
add
cmp
loopne
iret
cmc
aas
stos
rcrl
sahf
sbb
imul
xchg
push
js
xchg
dec
pop
daa
fs
jge
or
jmp
xchg
lret
lret
imul
jmp
ljmp
cmp
std
pop
mov
addl
loopne
sbb
mov
loopne
inc
or
xor
jmp
test
std
pop
out
sbb
lret
lcall
push
xor
jbe
xchg
daa
pop
jb
imul
icebp
and
add
enter
scas
test
cmp
xor
jb
xor
pop
add
cli
ja
push
mov
daa
aas
in
mov
insb
mov
shll
stos
xchg
fimull
lea
inc
lock
mov
inc
jae
mov
sbb
popf
adc
pop
adc
mov
fwait
lcall
pushf
push
adc
mov
fldenv
sbb
data16
pop
pop
pop
jg
dec
jg
shll
movsb
mov
in
lret
iret
dec
inc
imul
push
call
in
mov
xchg
insl
push
sub
sub
or
jmp
pop
push
lret
jae
cmpb
adc
fs
fsts
lcall
insb
jo
cs
shlb
xchg
mov
mov
mov
cmp
pushf
sarb
dec
enter
ja
iret
ret
mov
stc
imul
inc
cmp
sarl
sbb
int3
faddp
add
shr
dec
neg
insb
xchg
out
pop
test
nop
adc
shr
push
out
xchg
xchg
outsb
jp
add
xchg
scas
inc
push
decb
in
push
jne
xchg
insb
cltd
mull
rolb
add
cmp
xchg
mov
or
orl
imul
push
add
push
inc
ljmp
sbb
ret
jo
cmp
sub
cmp
shrb
popf
daa
add
adc
jp
add
cmpsl
aas
into
ret
insl
cwtl
mov
subb
pop
adc
mov
out
add
xchg
pop
inc
loopne
jae
mov
mov
in
push
std
mov
or
mov
les
loope
push
sahf
adc
adc
jp
push
sub
aas
mov
add
int
pop
imul
push
movsb
push
xor
jns
addl
cmp
out
mov
xor
insb
ret
ret
xor
and
adc
add
ret
xor
add
mov
int3
arpl
add
sub
or
aas
nop
jns
out
mov
enter
fsqrt
mov
test
sub
loope
add
inc
aas
sbb
shl
push
push
nop
mov
jbe
xor
pop
inc
mov
shlb
inc
ret
xor
xlat
cmc
loopne
mov
mov
mov
fstps
pop
stos
jge
and
roll
cld
push
fnsave
push
sbb
push
pusha
xchg
insw
or
mov
rcrb
jne
push
adc
js
out
jl
mov
xor
jbe
xor
test
leave
xchg
insl
dec
or
pushf
push
sub
push
jg
cwtl
jp
sub
adc
jmp
je
inc
aas
fwait
into
cli
or
repnz
sbb
mov
outsb
mov
xor
out
cltd
xchg
push
inc
out
inc
jecxz
push
mov
jno
push
ja
add
fsubrs
in
adc
mov
cmp
fisttps
xchg
add
push
shl
fwait
push
les
pushf
jg
adc
xlat
loop
dec
ret
sahf
xchg
push
std
pusha
inc
mov
xchg
xchg
xor
nop
xchg
mov
imul
pop
or
mov
in
sbb
arpl
and
xchg
test
rcrl
fs
xor
sbb
addr16
ss
mov
fdivrl
and
cmp
xchg
xor
daa
das
xchg
or
fstl
push
clc
adc
dec
aam
push
mov
fists
ljmp
xlat
das
pop
push
insb
outsl
pop
outsl
mov
minps
mov
pop
sti
sub
shll
and
xor
daa
mov
and
jmp
mov
and
inc
jb
fidivrs
icebp
add
pop
jg
jne
in
outsl
adc
dec
mov
push
cmp
mov
lds
mov
cmp
in
adc
dec
dec
stos
xchg
loopne
lcall
scas
lret
es
test
in
sbb
aaa
fidivl
inc
lods
add
rolb
out
rcll
mov
mov
xlat
popa
mov
cwtl
stos
mov
push
test
mov
cltd
jb
hlt
std
sbb
adc
sbb
in
inc
xor
aam
out
adc
or
shl
and
xchg
sbb
or
mov
inc
add
enter
in
push
loopne
push
dec
js
pop
pop
mov
das
sbb
mov
mov
and
or
xor
push
lcall
ud0
cltd
mov
dec
lcall
mov
out
cmp
sub
cs
jae
xor
shll
and
loope
enterw
mov
sbb
inc
cmpsl
lcall
ret
mov
cltd
lds
cmp
stc
mov
pop
sub
test
cmpsl
cld
jnp
lods
mov
ficoml
shll
and
subb
sub
insl
inc
add
push
jp
pop
pop
push
outsb
sub
fisttpl
mov
or
sbbb
int
xor
out
fmuls
sub
call
insb
sbb
popf
incb
roll
inc
jl
aad
cmp
sti
cmpsb
jle
xor
jns
mov
jne
cld
stc
mov
lds
cmp
jae
mov
xchg
pop
adc
xchg
mov
aas
pop
jns
push
in
shrl
inc
repnz
cltd
push
movsl
shll
inc
xchg
cmc
jp
adc
push
push
sbb
lods
pop
shll
jns
negl
push
std
in
lods
xor
aaa
popa
mov
sbb
into
imul
sub
cmp
sub
dec
add
xor
gs
and
ljmp
sub
aas
dec
arpl
jb
xor
lret
jp
jg
bswap
inc
andb
dec
aaa
loopne
fs
pop
add
loop
jge
xchg
push
add
int3
inc
dec
jb
mov
mov
int
jne
push
add
mov
int3
std
sarl
iret
and
addr16
sbb
ds
clc
xchg
push
sbb
leave
jle
test
and
pop
int3
movsb
js
neg
adc
bound
pop
jge
mov
ficoms
xchg
cmp
daa
xchg
cli
ss
push
xchg
adcl
popf
and
out
cmp
mov
jl
iret
cmpsb
xor
ss
in
mov
ret
ror
leave
inc
xchg
sub
scas
jns
insb
add
inc
movsb
pop
data16
in
into
adc
or
mov
cmp
sahf
dec
pushf
ret
adc
sbb
mov
sub
mov
loopne
dec
test
pop
mov
or
pop
inc
in
loopne
sub
sbb
sbbb
inc
mov
pop
shll
xor
mov
sub
dec
or
mov
out
sub
push
stos
movsl
lahf
movsb
fbld
dec
aam
pop
mov
or
or
cltd
pop
and
inc
lds
gs
loop
es
ret
adcb
adc
fildll
out
sbb
adc
aad
cs
mov
sbb
jo
mov
push
sub
inc
jge
lods
or
clc
inc
jmp
gs
mov
xor
shlb
xchg
jmp
pushf
movsb
jge
sbb
pop
rorb
xor
or
cmp
cmp
inc
mov
dec
mov
and
popf
sub
mov
and
mov
jg
push
negb
sub
cld
or
pusha
push
dec
xorb
xchg
cmpsl
mov
lret
cld
or
out
mov
mov
jmp
in
jg
lret
jo
jge
or
out
rolb
sub
imul
cmp
dec
int3
add
add
fiaddl
cmp
std
loop
call
xor
add
lahf
outsb
push
jecxz
sarb
mov
out
mov
loop
adc
sub
push
xchg
xchg
mov
push
adc
test
ja
sti
in
into
mov
push
div
je
gs
cmpsb
ss
ret
dec
mov
inc
addl
or
push
sub
fdivs
xlat
push
add
lods
or
jp
fmull
or
jbe
out
lods
xchg
scas
push
orb
js
pop
jns
jo
pop
nop
enter
ljmp
daa
jge
jne
jl
sbb
loop
inc
dec
imul
hlt
hlt
popf
in
dec
das
or
addl
adc
xor
fcoms
aad
pop
xchg
push
mov
inc
xchg
lock
xchg
setbe
pop
xchg
add
xchg
scas
cmp
aad
shlb
sub
lods
ret
sub
fisttpl
push
fs
mov
jne
lock
inc
mov
stos
push
sub
lret
bound
pop
outsl
jp
jl
push
push
in
faddl
xor
cmp
arpl
or
lea
lcall
push
inc
repnz
sti
jg
or
js
aas
mov
jge
mov
or
xor
in
add
out
mov
xor
movsb
test
jb
mov
int3
cmpsl
test
ja
dec
pop
lock
xchg
ss
dec
and
call
stos
iret
cltd
sti
or
in
inc
out
xchg
imul
cmp
pop
or
in
sbb
fwait
or
iret
adc
jnp
mov
out
or
push
movsl
imul
hlt
jp
daa
mov
in
data16
rcrl
adc
mov
test
push
sub
imul
andl
dec
insb
enter
or
ja
hlt
sar
and
push
dec
insb
cmp
sub
bound
pop
fisubs
lea
ret
jp
fmulp
and
ss
push
rolb
xchg
sbb
aam
data16
cwtl
test
mov
push
adc
arpl
adc
in
cmp
call
mov
clc
stos
jge
xchg
add
loop
mov
mov
lock
call
or
cld
repnz
sar
out
adc
insb
js
aam
dec
aaa
xor
popf
iret
pop
inc
dec
and
sub
jno
dec
popf
dec
cli
bound
or
jle
popf
add
fldl
jns
push
sbb
into
push
jne
mov
dec
sbb
js
adcl
fnstcw
push
repz
inc
icebp
std
push
inc
mov
mov
and
mov
cmp
pop
push
bound
lods
pop
mov
add
xchg
sub
xor
cmpb
jae
ret
notl
rclb
sub
dec
xorl
lds
jns
and
iret
dec
ds
call
sub
bnd
clc
mov
inc
int3
stos
stc
adc
or
jno
pop
push
lahf
mov
bound
aas
mov
xor
fld
jmp
lods
test
sti
push
fadd
pop
mov
add
out
pop
scas
notb
push
dec
dec
mov
popa
fsubs
daa
pop
ret
test
adc
es
and
nop
adc
pop
xchg
jns
and
arpl
push
sbb
enter
inc
sarb
stos
cmp
cli
data16
inc
mov
notb
movsb
stos
sti
lock
mov
sahf
dec
in
pop
push
andb
jl
dec
jp
mov
scas
push
push
xlat
sub
in
mov
or
push
aad
mov
dec
sbb
int3
mov
and
or
jp
insl
xchg
int
gs
mov
xor
in
cmc
subl
inc
dec
jb
and
enter
sub
imul
sub
cwtl
ss
rcrb
inc
mov
in
jmp
sbb
and
and
in
lcall
cmp
mov
ret
lods
push
or
mov
jg
dec
xchg
mov
jne
inc
fisttps
dec
inc
pop
pop
sub
inc
xlat
sti
xor
fwait
out
mov
mov
jp
rcl
inc
repz
push
xchg
cli
dec
mov
aad
hlt
add
rcrl
cmp
sarl
xchg
jo
jle
dec
xor
dec
cltd
dec
data16
out
roll
test
adc
outsb
lahf
aaa
push
loopne
mov
sarb
xor
mov
jmp
push
mov
xor
adc
sbb
mov
cld
mov
xlat
sbb
jl
cltd
jbe
aas
adc
xchg
cmpl
jns
inc
xchg
add
lahf
pop
mov
loopne
add
in
push
pop
lea
popa
cmp
sub
push
inc
sahf
in
pop
outsb
jmp
jl
sbb
push
pop
outsb
push
push
pop
or
mov
push
cmp
sbb
std
nop
fildl
mov
gs
lret
and
pop
push
test
ja
lods
sub
and
imul
push
xchg
xchg
jg
icebp
xor
or
into
sub
and
movsl
cmpsl
mov
or
repnz
sub
mov
arpl
sbb
scas
pop
mov
loope
pop
or
dec
pop
cmpsl
pop
and
pop
push
or
add
jnp
and
test
jne
ret
out
cmpsb
inc
lea
imul
xchg
popf
cmc
sbb
jg
bound
sti
mov
pushf
xchg
cmp
in
xlat
out
in
enter
jmp
sbb
mov
pop
lods
js
out
jno
cltd
ljmp
dec
int3
jnp
repnz
push
pop
pop
loop
add
sub
inc
xchg
jle
sub
jg
out
rcrl
fwait
add
idivl
sub
movsb
cmp
cs
inc
in
and
add
pop
idiv
cmp
das
or
add
loopne
pushf
in
pop
cmp
cmp
mov
mov
jl
lock
jno
xchg
and
int
outsb
xchg
pop
jb
fwait
or
pusha
aas
pop
icebp
add
insb
sub
bswap
imul
xor
mov
or
cmpsb
or
sbbl
push
push
movsl
xchg
js
xchg
dec
push
xchg
ljmp
adc
jae
inc
mov
into
addr16
or
scas
gs
and
repz
cmpsl
fisttpl
lea
rcrl
cli
fstps
enter
testb
xchg
call
sbb
pop
loopne
or
leave
and
mov
aas
fldlg2
mov
in
fwait
cmp
rcll
pusha
lock
popf
xor
out
inc
add
addps
or
adc
pop
pop
das
je
ficoml
fisttps
repz
lret
push
jno
test
movsl
inc
into
pop
cmp
movsb
pop
push
adc
rcrl
lcall
sbb
cmp
mov
or
mov
pop
sub
fcompl
or
and
je
and
dec
loopne
int
cs
pslld
sbb
add
das
dec
mov
and
xor
jbe
adc
push
scas
pop
mov
es
xchg
orb
push
dec
sub
inc
sbb
popa
das
mov
pop
jnp
loopne
and
xchg
mov
scas
add
jae
dec
cmp
inc
popf
stos
jl
add
cmpb
or
jp
mov
jbe
xchg
lods
mov
pop
cs
jg
mov
and
dec
sahf
addr16
rcrb
xor
pop
lods
test
movsl
jg
cmpsl
xlat
pushf
or
outsb
jb
insb
cmpsb
add
push
es
popf
loopne
in
mov
test
push
or
outsl
cwtl
pop
insl
sub
inc
xchg
pop
adc
adcb
xlat
jnp
add
movsb
cmp
lods
mov
sbb
push
mov
in
or
dec
insl
es
enter
int
sahf
xchg
insb
loop
repz
inc
sti
mov
cmp
out
pop
je
add
mov
push
insb
fiaddl
pop
fistl
sub
insb
int
or
repnz
fadds
daa
into
xchg
jno
jle
adc
stos
cmc
sbbl
or
xlat
push
daa
sbb
push
scas
out
jns
daa
pop
push
add
das
adc
pop
mov
sub
push
pop
aas
mov
mov
in
leave
jae
jl
pop
mov
jge
arpl
xor
movsl
jg
xor
dec
jbe
test
jecxz
add
outsl
lods
cmp
clc
in
push
xor
mov
iret
idiv
dec
sti
inc
lcall
lret
xchg
stos
aad
xorl
movsb
int
xchg
mov
loope
cli
inc
jmp
jge
lea
add
in
pop
outsl
lock
adc
jns
push
adc
mov
das
jle
jmp
es
or
cld
movsl
sub
jno
sbb
inc
loope
repz
ja
adc
scas
jge
pop
dec
push
push
pop
mov
xchg
push
cmpb
pop
andl
test
add
cmpsl
pop
sti
inc
inc
test
imulb
mov
sub
inc
andb
divl
addb
clc
out
dec
aam
aam
stos
cmpsb
repnz
clc
push
mov
pushf
xor
mov
pop
cltd
jns
das
lods
cmp
popf
pop
add
jo
inc
xlat
sub
add
xor
hlt
inc
inc
jb
mov
dec
pop
push
xchg
rorb
sub
or
inc
mov
jae
lcall
call
divl
and
xchg
pop
movsb
fidivrl
das
and
shll
lods
out
adc
mov
mov
sbbl
add
xchg
xchg
neg
sbb
bound
jbe
movsl
and
adc
dec
sub
and
mov
sub
mov
outsb
shll
insl
lds
mov
lea
pop
cmp
rcll
cmp
dec
and
fwait
push
popf
into
popf
in
imul
shrb
mov
or
lods
rcrb
cld
cld
push
sahf
xchg
cmp
or
and
mov
mov
xor
mov
add
jmpw
cmpsl
sbb
xchg
addl
xchg
hlt
lret
jp
es
repnz
mov
scas
inc
jo
or
or
cmp
popf
aaa
mov
call
jmp
fprem
in
dec
cmp
xlat
jg
call
int3
imul
ljmp
jecxz
stc
jae
push
stc
pop
jns
cli
rorb
dec
popa
mov
sub
jge
cmp
pop
mov
test
imul
sub
add
ret
insb
fsubl
ljmp
leave
mov
leave
pop
call
xor
push
rclb
dec
out
push
shlb
movsb
mov
clc
mov
outsb
add
popf
push
and
jno
lods
and
out
lcall
scas
ljmp
jle
loopne
bound
subb
and
adc
out
push
aaa
xchg
jo
arpl
pop
addb
sbb
js
xchg
adc
dec
pop
fdivl
arpl
cmc
movsl
jmp
push
dec
in
sub
nop
les
into
ror
adcb
into
mov
xor
adc
xchg
outsl
inc
lret
test
test
push
mov
add
out
lea
fs
movsl
jge
dec
xlat
mov
mov
pushf
fs
jnp
adc
icebp
mov
cmpsl
out
enter
jmp
fisttpll
aad
sbb
or
fwait
stc
add
mov
cmpsl
ret
js
dec
mov
inc
and
mov
cs
data16
xor
test
xor
orb
sbb
into
cmp
fwait
inc
xchg
fimuls
adc
pop
cmpsl
rcrb
neg
rcrl
add
ja
rcrb
mov
pxor
daa
jmp
daa
shll
xchg
dec
outsl
outsl
cli
and
sti
mov
imul
ljmp
lds
mov
out
push
decb
cmp
jb
push
mov
inc
xchg
scas
jbe
movsb
push
jle
fstl
scas
es
cmp
cmp
mov
jno
pop
dec
out
mov
mov
inc
inc
xchg
mov
movsb
fdivr
or
ret
aaa
mov
jb
sub
pop
xchg
popf
mov
xchg
adc
xor
sbb
aas
mov
add
pop
je
push
sbb
add
arpl
hlt
push
gs
popf
or
xlat
xchg
cmp
dec
dec
sub
addr16
mov
jmp
mov
cmpsl
mov
shlb
jno
sbb
js
iret
mov
pop
mov
lea
out
enter
xor
xor
cmc
loop
pop
sub
fs
mov
inc
call
stos
lret
pop
jecxz
popa
pop
aam
lcall
adc
add
cld
xchg
hlt
sbb
push
mov
sbb
pop
xor
and
mov
outsl
fadds
xor
imul
scas
xchg
aaa
stos
mov
xchg
orl
xchg
xchg
mov
push
cmp
adc
mov
pop
push
test
jge
pop
xor
xchg
cmp
addr16
fdivrl
lock
cmp
and
inc
inc
shrb
cmpl
test
int3
into
sbb
add
mov
inc
fdivs
outsb
je
pushf
inc
adc
ss
gs
xchg
add
test
popa
xor
push
cs
cmp
sbb
test
loope
mov
mov
pop
sub
sahf
dec
rcrl
lahf
pop
in
in
sub
lcall
sti
jae
adc
jno
cli
frstor
dec
sub
sub
xor
les
push
stc
xchg
popf
test
jmp
fmull
and
cmp
mov
and
cs
roll
lods
test
lods
xlat
aad
jg
insl
mov
int
sbb
xlat
ds
aad
out
ficoml
std
xor
inc
xlat
and
lock
dec
fldl
adc
lcall
aam
cmp
sbb
cmp
and
sub
mov
cmpsb
add
push
mov
mov
dec
arpl
hlt
hlt
sub
div
mov
xchg
sub
sbb
sbb
and
es
push
pop
loopne
adc
ljmp
pop
push
call
rcrl
jmp
pop
sahf
mov
xor
subb
or
mov
jb
inc
scas
push
and
rcll
test
push
mov
push
ss
fst
dec
fs
ds
daa
cmpsb
call
sbb
xor
lea
mov
push
adc
lret
sbb
jb
sub
ficoms
pop
cmp
dec
lods
xchg
dec
sub
cmp
dec
in
aad
daa
es
mov
test
pop
jo
jmp
out
push
test
push
test
loopne
scas
popf
loope
mov
stc
cmp
adc
mov
andb
mov
ror
pop
dec
and
pop
or
adc
push
mov
sar
icebp
mov
push
addr16
xchg
push
sbb
leave
xchg
inc
xchg
add
inc
fiaddl
jbe
aaa
push
pop
jge
inc
mov
xor
cmpsl
or
or
push
cld
or
mov
xchg
lds
xchg
mov
or
cli
in
pop
andl
movsl
dec
aad
cld
std
sub
push
cmc
test
iret
mov
sub
mov
fs
pop
fwait
add
inc
sbb
sub
into
xchg
fs
mov
and
ja
adc
inc
mov
inc
adc
jp
call
sahf
inc
xchg
sub
inc
data16
adc
stos
nop
lods
outsl
lock
sub
fdivrl
jecxz
frstor
insb
mov
pop
loopne
fisttps
inc
jnp
insl
gs
jecxz
mov
inc
test
sbb
push
dec
lret
xor
data16
add
push
add
test
stc
ja
mov
xchg
pop
pop
adc
js
call
adc
pop
enter
xor
jg
nop
in
jns
jmp
xorb
loopne
out
lcall
mulb
jns
bnd
mov
mov
add
repz
jle
out
rorb
push
cmp
fiaddl
dec
push
jnp
mov
jb
cltd
jno
pop
mov
imul
mov
orl
adc
pushf
es
leave
sub
mov
stc
mov
jbe
jne
aad
inc
orl
dec
push
imul
xor
sbb
sub
ss
mov
scas
scas
mov
push
mov
xchg
cmc
mov
push
sahf
pusha
enter
xor
dec
sbb
sbbl
popa
loopne
mov
add
sbb
and
popf
shlb
mov
or
lds
add
or
stc
sbb
dec
add
testb
push
ret
mov
mov
fwait
xchg
enter
fs
hlt
daa
inc
adc
cmp
adc
push
stos
shl
jns
xor
lock
push
inc
mov
sti
dec
and
sbb
ret
xchg
and
insl
sahf
jg
xor
lea
pop
jp
push
or
add
pop
pushf
sbb
xchg
push
and
mov
adc
jmp
cld
jnp
and
rorb
mov
imul
adc
jge
mov
add
in
dec
jmp
xor
adcb
inc
mov
mov
mov
push
inc
lods
jmp
push
and
mov
sub
mov
mov
cmp
xchg
adc
imul
dec
mov
xchg
fidivrs
jp
nop
mov
mov
xchg
push
push
pop
lock
and
pop
das
inc
notb
sub
push
ja
adc
fidivrl
shll
fsts
loope
leave
aas
sub
push
inc
in
inc
mov
es
int3
addr16
sbb
stc
pop
repnz
lds
ja
adc
leave
or
mov
rolb
push
nop
pop
es
popf
mov
sbb
lcall
cmp
test
lret
pop
push
sbb
mov
inc
nop
mov
arpl
mov
incb
mov
pop
ss
mov
clc
vphaddudq
ret
out
lods
cmp
xchg
stos
fldcw
dec
or
icebp
add
pop
mov
mov
out
shll
xor
cltd
fnstenv
sahf
fdivrs
mov
sbb
mov
jae
movsb
push
xchg
aas
adc
add
ds
std
popf
mov
arpl
movsl
push
or
push
push
loopne
int3
jg
jmp
aas
lea
loope
mov
dec
cwtl
jne
jge
dec
adc
divl
jb
mov
insl
cs
fists
mov
scas
mov
or
mov
mov
mov
rcr
ficomps
jl
xchg
lods
shl
in
adc
pop
jle
popf
jge
std
jg
out
enter
xor
shl
adc
mov
inc
pop
addb
xchg
hlt
test
inc
cmpsb
inc
call
fwait
cmpsl
arpl
xor
push
sbb
mov
sub
icebp
pop
outsb
push
mov
jge
adc
out
inc
nop
and
fistpll
cmpsl
imul
lock
mov
add
pop
stc
xchg
int
bound
outsl
and
js
mov
or
mov
les
test
mov
or
mov
inc
jne
fcomi
mov
jl
jmp
sbb
pop
pop
mov
test
dec
jb
inc
mov
xor
mov
lods
outsb
or
ret
dec
jl
pop
xor
adc
xchg
inc
cltd
orb
enter
and
jmp
push
jno
or
lods
push
and
push
xchg
xchg
cmpsb
adc
dec
hlt
and
shrb
bound
iret
or
nop
mov
lcallw
lods
out
rcl
push
out
lahf
jecxz
jecxz
push
or
out
inc
lret
test
into
mov
or
mov
ss
lcall
imul
dec
mov
xchg
mov
fstp
push
pop
test
iret
mov
cmp
jge
dec
rcrl
ljmp
push
mov
movsl
mov
fidivl
out
xchg
xchg
jbe
adc
xchg
add
hlt
mov
pop
in
mov
push
push
mov
add
add
dec
in
sbb
popa
cli
jp
jp
mov
adc
pop
clc
lahf
mov
imul
fstpt
je
mov
mov
lock
mov
icebp
mov
std
fisttps
ds
push
loopne
add
xor
push
js
mov
xor
cmp
movsb
dec
pop
mov
lods
rcl
add
mov
icebp
inc
fsubrl
movsb
outsb
mov
or
lock
shll
sarl
and
ds
aad
adc
inc
mov
negl
fldl
sub
cli
or
loop
xchg
pop
std
xchg
adc
pop
call
daa
int
es
cwtl
insb
movsl
xor
jbe
and
mov
mov
pusha
mov
inc
add
dec
sub
dec
out
push
in
fdivs
or
int
inc
fldcw
mov
movsb
and
pop
lcall
cmp
mov
ja
push
or
loopne
test
sbb
mov
cwtl
mov
lods
bound
ss
cmpsl
aaa
out
in
jnp
cmp
pop
xchg
mov
and
cmp
imul
mov
adc
rclb
mov
rcl
lds
push
scas
jne
stos
xor
add
dec
jp
pushf
pop
mov
mov
lret
mov
data16
add
sub
lea
cld
mov
cld
adc
insb
add
cltd
sti
mov
jecxz
ret
mov
sbb
subl
push
in
out
pop
js
in
mov
inc
int
cmp
movsb
cmp
test
lahf
xor
out
loop
lock
mov
imull
cmpb
stc
mov
xchg
in
aad
stos
add
std
sub
movsl
mov
fbld
lea
lock
add
mov
mov
shlb
dec
xor
xchg
call
and
xor
pop
std
xor
xor
test
stc
scas
clc
outsb
insb
jno
daa
les
sub
cmc
ror
xchg
jnp
sub
ja
cli
mov
mov
imul
cmpsl
mov
pushf
mov
push
mov
inc
sub
xor
jle
adc
imul
ja
inc
mov
nop
pushf
ret
fs
xchg
dec
leave
cmpsl
lods
lods
dec
cmpsb
imul
mov
pop
add
rolb
xchg
adc
push
push
out
aas
nop
jp
jns
ja
sahf
jl
pop
pop
lcall
out
xchg
push
push
loope
frndint
mov
fs
stos
add
insl
rorb
add
push
bound
or
and
fdivs
dec
adc
arpl
dec
fsubl
ret
jae
jae
arpl
sub
xchg
imul
pop
xchg
inc
mov
add
mov
push
ss
test
mov
jge
test
js
and
push
or
nop
dec
add
mov
dec
sarl
push
mov
and
mov
xor
and
push
push
out
test
dec
cmpsb
inc
pop
and
and
aam
int
sbb
push
arpl
mov
loop,pt
mov
stc
push
pop
mov
shll
adc
in
push
outsb
mov
ljmp
arpl
push
popa
dec
aaa
popf
movsb
inc
sub
cmpsl
cmp
adc
pop
rcr
jae
popf
pop
and
xchg
rcll
ret
push
add
lahf
mov
inc
lea
insb
xor
pop
pop
push
adc
jno
std
pop
lds
lcall
jnp
movsl
aas
push
inc
xlat
mov
stos
fadd
cmpsb
hlt
movsl
jp
jl
xchg
push
in
inc
jnp
ja
mov
jbe
fnstenv
inc
fists
adc
pop
xor
ret
dec
and
mov
aad
pop
aas
scas
fildl
jp
inc
std
pop
ret
test
mov
mov
sbb
jle
outsb
imul
pop
inc
or
sub
icebp
xchg
lea
or
xlat
pop
fisubrl
loopne
cmp
cltd
testl
imul
data16
mov
fsub
cmc
mov
mov
add
xor
jnp
sbb
mov
das
inc
mov
aam
les
out
inc
push
and
scas
adc
mov
je
and
mov
xchg
cmp
pop
inc
push
test
jg
push
jbe
ds
lret
loopne
outsb
mov
leave
repz
int3
int3
scas
cs
push
jo
push
add
mov
mov
stos
aas
cs
mov
cmc
jae
mov
mov
andl
inc
icebp
mov
push
testl
enter
inc
mov
js
jp
cltd
rcl
les
cmp
inc
aas
add
xchg
aad
data16
pop
jmp
add
fnstenv
lods
and
and
in
xchg
negl
int3
sub
jle
loop
lahf
lods
adcl
iret
and
push
cmp
push
dec
mov
jge
out
lahf
add
jbe
cmpsb
or
mov
jae
inc
and
sti
movsb
lahf
pop
scas
outsl
dec
mov
push
push
lock
scas
mov
gs
xchg
orb
dec
mov
loopne
ja
jmp
mov
pushf
and
inc
int3
mov
cltd
mov
push
adc
imulb
mov
ret
xor
mov
xor
add
roll
mov
aad
xor
lahf
test
mov
mov
mov
and
xchg
stos
mov
xor
stos
ret
aam
outsl
mov
mov
rorl
lods
sbb
pop
xchg
js
jns
mov
mov
dec
sub
add
cmp
addr16
dec
pop
test
or
dec
mov
fldenv
leave
xchg
imul
cmpsb
pop
and
xchg
scas
inc
ret
cwtl
adc
push
in
dec
push
stos
hlt
xchg
cmp
jae
je
jl
xor
mov
push
mov
in
jmp
xchg
loop
in
xchg
xchg
in
mov
xor
out
inc
mov
jmp
dec
adc
sub
mov
outsb
fwait
popf
bound
fs
cmp
shll
shrb
push
test
lods
mov
xchg
jle
and
stos
popl
or
jecxz
or
jl
and
mov
mov
fsubr
or
lock
pop
cmp
mov
add
xchg
aaa
mov
lret
scas
imul
gs
inc
mov
subl
jl
or
pop
int3
and
push
push
test
adc
and
or
iret
shrb
or
daa
cmpsl
sahf
add
adcl
ljmp
scas
jns
mov
cmp
push
cmp
pop
jnp
fisttpll
les
loopne
enter
cli
jmp
sti
sti
std
mov
add
add
sbb
cwtl
mov
mov
jle
iret
stos
xor
sbb
or
idivb
mov
inc
das
daa
popa
mov
or
adcl
shrl
cmc
fwait
xorb
out
adc
push
mov
jle
and
pop
inc
cmpsl
inc
inc
or
negl
push
xchg
xchg
push
in
rcrl
adcl
sbb
push
or
mov
int3
not
xchg
dec
fmull
leave
sbb
jno
idivl
add
xor
dec
jns
dec
xor
iret
sub
or
cmp
jne
push
test
adc
mov
xor
sub
xchg
pop
out
jb
mov
lods
adc
sarl
aas
xchg
mov
das
mov
cmp
outsb
mov
xor
clc
scas
mov
add
sbb
pusha
div
int3
idiv
jle
iret
jns
fmuls
ss
adc
jnp
leave
and
aad
mov
test
mov
out
mov
fs
rorl
mov
movsb
mov
insb
jecxz
jle
xor
mov
adcl
mov
loopne
push
leave
lret
jmp
mov
inc
cmp
jmp
or
pop
inc
fmull
adc
loopne
inc
gs
pop
jbe
sbb
mov
leave
js
jp
sbb
enter
inc
pop
mov
jle
or
push
sbb
cmp
jmp
jmp
and
scas
lahf
adc
jne
jb
rcl
cmp
cmpsb
imul
es
sbb
sbb
cmpsl
int
xor
sbb
jnp
inc
sahf
lods
mov
scas
xchg
popf
cmp
dec
jp
jae
lds
movsl
xchg
in
sbb
or
int
sub
mov
lock
jp
xor
pop
inc
add
adcl
ja
jb
cltd
mov
lea
mov
out
lods
dec
sbb
sbb
push
aaa
sbb
xor
lcall
movsl
mov
xchg
push
push
jecxz
lret
push
mov
rcl
getsec
mov
mov
xchg
inc
and
rcrl
xor
fisubl
imull
rolb
in
insl
or
pop
ret
add
sbb
xor
lcall
dec
test
incb
stos
ds
push
inc
push
loope
sub
mov
pop
mov
push
push
pop
or
inc
and
test
aas
aad
pop
in
adc
popf
sub
sbb
movsb
sahf
in
sbb
jb
sahf
imul
push
dec
push
lcall
sbb
lods
cmp
mov
fiadds
sub
push
jo
rolb
dec
hlt
push
jmp
or
jp
add
mov
aam
aas
inc
push
cmpsb
fimull
cmc
and
and
pushf
xchg
mov
adc
inc
ljmp
xor
mov
call
dec
dec
add
pop
cmp
mov
add
in
jmp
movsl
jno
je
je
cwtl
jmp
int3
and
std
lea
mov
movsb
pop
cli
ljmp
and
xchg
mov
clc
xchg
or
movsb
pop
das
xchg
push
lcall
ljmp
inc
jmp
pop
imul
pop
inc
iret
inc
fdivr
pop
and
je
xlat
sbb
ficompl
push
fidivs
push
cmpsb
xchg
lods
jo
mov
jbe
dec
sarl
pop
mov
add
mov
push
aam
jecxz
adc
mov
mov
or
xchg
arpl
pop
movsb
inc
fstpt
push
or
dec
insb
push
lahf
test
rol
push
scas
and
stc
add
popa
movsl
xor
xor
rorb
mov
push
arpl
pop
loop
jle
ljmp
rcl
pop
mov
ljmp
loop
sbb
loopne
mov
faddl
pop
add
cmp
xlat
rclb
xor
addr16
repnz
pusha
mov
sub
cmp
out
ret
xchg
xorl
ljmp
bound
scas
mov
aaa
ret
inc
aas
push
push
mov
sahf
iret
adcl
sti
jmp
repnz
dec
sub
ja
icebp
inc
or
insb
xor
pop
xor
or
jnp
icebp
adc
xor
sti
pop
adcb
mov
inc
adc
icebp
bound
out
arpl
sarw
mov
fldcw
jne
adc
mov
sbb
add
and
xchg
xchg
fs
mov
out
jmp
test
and
loope
sbb
in
jbe
xor
test
cmp
sbb
sbb
xchg
dec
cmp
ficoms
popf
mov
inc
gs
inc
or
xor
subb
cmp
shlb
out
std
and
xchg
and
mov
movsw
test
sub
push
repnz
aas
out
inc
es
add
arpl
lds
add
cmovp
inc
mov
and
or
sar
cmpsb
movsb
sub
jno
cmp
jp
int
lcall
loop
jno
jl
adc
lea
repz
daa
movsb
and
pop
sub
mov
cmp
call
adc
mov
add
cwtl
dec
pop
mov
sub
mov
xor
mov
cmp
xor
or
push
fnsave
shrb
xor
sub
and
mov
dec
rcll
adc
push
pop
xchg
jb
mov
sub
or
ljmp
mov
jns
addr16
xor
dec
dec
sbb
sbb
jg
lock
pop
jnp
pusha
fisubs
imulb
xchg
loop
rclb
cmp
mov
icebp
mov
xor
ljmp
scas
nop
jg
lods
mov
push
jg
inc
inc
xchg
fcomi
mov
rcll
fnstcw
scas
xchg
fs
stc
insb
add
jmp
inc
push
leave
dec
and
xchg
insb
sbb
test
aaa
sub
sub
pop
dec
push
cmp
ja
sbb
xchg
loopne
repnz
push
decb
lock
add
mov
rorb
and
adc
pop
cs
aas
shl
ret
or
mov
inc
mov
jbe
dec
xchg
mov
jne
rcl
notb
fcoml
push
inc
or
in
cli
lret
xchg
dec
lds
dec
xor
mov
inc
repz
xor
lcall
sub
data16
jnp
inc
inc
shrb
sub
mov
xchg
imul
repnz
push
and
xchg
cld
pop
out
test
cli
test
cmp
loopne
or
roll
enter
pusha
mov
bound
mov
sub
scas
jo
in
jmp
pop
pop
fisubrs
sub
xchg
fwait
shll
pop
mov
daa
jmp
push
xchg
cmpsb
and
bnd
loop
loope
std
pop
arpl
stos
test
sbb
pop
push
push
aam
mov
ds
sbb
out
clc
insb
enter
stos
std
addl
cmp
ror
test
out
shlb
push
out
in
div
rcrl
aam
xchg
pop
pop
mov
ret
add
pop
leave
inc
daa
ret
inc
xchg
xor
xor
push
and
mov
mov
sub
push
cmp
mov
mov
xor
outsb
rclb
data16
sbb
ficompl
dec
xchg
push
cld
sub
test
jp
xor
xor
movsb
lods
xchg
arpl
out
xor
je
or
cmpsl
shl
inc
push
lret
loopne
stos
inc
mov
cli
jl
rcr
js
or
js
add
adc
mov
push
mov
dec
dec
fisubs
cmp
lret
mov
out
dec
ror
pop
sbb
sub
inc
adc
fchs
js
jbe
push
notl
in
and
push
xchg
in
mov
iret
push
div
adc
adc
sbb
sbb
dec
ds
aaa
push
xchg
test
shlb
loopne
push
rcrl
cltd
pop
cltd
push
and
into
lods
adc
or
cmpsb
add
sub
pop
push
lods
js
lret
bound
mov
push
leave
jne
push
lock
add
mov
cwtl
sbb
pop
repnz
mov
add
inc
lret
outsb
call
mov
imul
pop
roll
gs
in
call
push
or
lret
movsl
mov
mov
sub
stos
cmp
mov
cld
daa
ret
or
jbe
xchg
sbb
or
mov
mov
adc
jp
iret
xor
mov
and
dec
subl
pop
aas
aas
mov
clc
in
mov
xchg
loope
pushf
scas
or
ja
jbe
js
pop
repz
int3
ret
pop
rorl
lds
pop
fwait
popf
test
psubsb
dec
dec
pop
push
insb
shrl
mov
icebp
aaa
mov
inc
push
cltd
divb
adc
sti
fst
mov
sub
inc
mov
sub
xchg
ss
mov
sbb
sahf
data16
xchg
loope
das
add
push
aas
test
pop
stos
xchg
enter
fsts
add
sbb
imul
and
ret
leave
decb
add
xchg
cmp
sbb
iret
xor
fistpll
and
insb
fldenv
std
std
stos
mov
sub
pop
fisttpl
or
test
sbb
mov
addl
fbstp
ds
ficompl
lds
xchg
arpl
fmul
inc
movsb
bound
sub
push
push
pop
mov
pop
jns
test
xchg
stos
daa
pop
loopne
adc
adc
or
popl
sbb
pushf
testl
cwtl
faddp
push
std
jae
mov
adc
pop
les
pop
inc
movsb
xor
les
sub
iret
xchg
pop
xor
xlat
dec
xchg
fwait
push
jecxz
inc
inc
xor
sahf
adc
mov
push
fisubs
in
leave
mov
or
cmp
pop
enter
sbb
adc
test
fwait
xchg
dec
pusha
icebp
inc
and
testb
push
xor
add
sbb
mov
pop
outsb
mov
cmp
rcl
ret
jl
push
xchg
pop
sbb
mov
xchg
bound
pop
fisubrs
insl
cwtl
jge
rorl
inc
cltd
fwait
mov
imul
mov
fdivr
scas
test
adc
rcl
jb
std
outsl
xchg
adc
mov
add
push
mov
jmp
testl
inc
mov
jg
mov
or
dec
pop
ret
outsb
mov
push
mov
pop
or
pop
aam
hlt
jnp
insl
in
xchg
shll
or
js
aas
out
xlat
xorb
lcall
lds
cmp
inc
les
adc
testb
inc
pushf
out
pop
es
bnd
mov
add
insb
xor
scas
ret
xchg
push
mov
xchg
lea
ret
in
repz
pop
idivl
cmp
gs
loop
ja
outsb
imul
aaa
movsl
into
lods
sar
jo
jne
sbb
or
jo
inc
add
dec
or
ret
repnz
mov
cmp
mov
loop
lea
push
outsb
xchg
in
dec
popa
mov
mov
jl
mov
add
push
add
loope
sub
imul
push
mov
gs
fisttps
mov
dec
add
mov
fs
jnp
cmp
xchg
dec
cmp
imul
add
sbb
or
sbb
push
addl
repnz
sti
sub
mov
xor
add
mov
mov
scas
gs
push
xchg
test
push
jae
shrl
mov
aas
shr
push
and
nop
cmpsb
push
daa
stos
pop
or
popa
or
test
lock
iret
rcrl
lods
insl
in
out
cmp
or
xchg
pop
xchg
sub
pop
or
cld
mov
cmpsb
jecxz
call
mov
loopne
rorl
xchg
movsb
iret
jecxz
das
jl
and
xor
xchg
hlt
fwait
push
cmp
xchg
shr
mov
add
lcall
adc
fisubrl
adc
idiv
jle
xchg
nop
push
add
inc
pop
inc
sbbl
jecxz
cld
mov
pop
push
ret
push
mov
dec
dec
scas
dec
enter
sti
sbb
mov
lcall
xchg
push
imul
into
je
cmp
lock
push
pop
dec
in
fisubrl
pop
xrelease
sub
out
arpl
push
ret
mov
lea
xor
jmp
push
mov
inc
lock
jne
shll
jbe
adc
vlddqu
data16
mov
mov
inc
movsb
pushf
nop
pop
mov
mov
push
jne
sbb
in
push
mov
shr
and
mov
repnz
adc
cmp
jge
out
dec
inc
mov
push
push
mov
into
scas
pushf
pop
jl
push
adc
rorb
mov
and
mov
pop
jbe
push
or
repnz
ja
jg
jbe
movsb
jge
sbbl
or
mov
cmc
sbb
mov
sub
mov
or
ret
lock
imul
push
inc
mov
and
jl
sub
push
xor
push
sbb
popf
cmp
js
jne
test
mov
rclb
dec
loop
jecxz
mov
or
and
testb
insb
add
in
insl
lcall
pop
scas
aad
ds
cld
imul
iret
scas
movsb
popa
ficoml
xor
mov
push
sub
aaa
push
sbb
inc
fwait
mov
scas
jb
jecxz
jg
es
loope
xor
cmpsl
mov
scas
and
out
and
movsl
mov
pusha
std
push
xor
sbb
adcl
test
ss
mov
and
and
je
sub
or
out
or
insl
lock
jp
fsub
loop
jge
in
add
pop
mov
cmc
adc
cmpsb
movsb
pop
inc
fnstenv
mov
out
loopne
and
arpl
pop
ljmp
pushf
inc
sub
cmp
sbb
or
mov
in
mulw
lahf
les
cmc
cmp
js
mov
jnp
fnclex
fcmovnbe
sbb
int
jns
cmp
nop
ret
out
jle
inc
test
adc
mov
xchg
jbe
imul
xchg
imul
lahf
cmp
jno
sarb
lret
cwtl
pusha
addr16
push
fisubs
sarl
fsubp
jno
cmp
jne
scas
cmp
add
lcall
mov
mov
lods
lret
cmp
add
je
pop
stos
cmp
jbe
mov
pop
fs
test
or
sbb
sub
cs
mov
cmpsb
ljmp
inc
push
movsl
inc
faddl
xchg
xchg
ret
testl
lret
stc
pop
lea
ljmp
dec
jecxz
aam
mov
aaa
cmp
ficoms
inc
mov
outsb
and
or
cmp
mov
dec
mov
loop
pusha
mov
mov
pop
xchg
xchg
add
pop
rorl
aad
scas
insb
icebp
int3
push
and
inc
fnstenv
inc
cmp
pop
in
repz
stos
loop
pop
aas
dec
out
mov
mov
negb
and
mov
pop
lret
sahf
pop
cmp
sbb
test
int
pop
loop
clc
mov
addb
cmp
out
or
test
imul
xchg
mov
dec
lock
mov
push
ja
fidivl
jne
mov
std
push
sbb
xlat
and
shll
sbb
clc
mov
pop
imul
inc
xor
aas
mov
and
dec
mov
js
push
dec
repz
pop
pop
adc
in
or
sub
hlt
insb
fmul
cmpb
cld
mov
push
sbb
jle
out
ret
mov
pop
lods
pop
outsb
cmpsl
test
cli
movsl
pop
cmp
stos
icebp
fildll
je
adc
scas
loop
sub
jb
xchg
sbb
cmp
adc
adc
cmp
lcall
idivb
push
test
sbb
jg
stos
dec
mov
int
xor
jns
lods
inc
call
or
mov
cmp
mov
aam
dec
in
lret
xchg
and
pop
lcall
loope
imul
test
mov
pop
adcb
mov
add
popf
rorb
jmp
mov
adc
sbb
out
callw
ds
pushf
push
add
push
pop
in
and
cmp
stc
jbe
jnp
shlb
push
or
add
and
cmp
fld1
ret
xchg
rorl
test
imulb
jno
add
call
xchg
pop
les
fs
orb
aaa
aam
xor
mov
sahf
aaa
mov
stc
mov
jo
and
lds
addr16
or
xor
mov
outsb
in
mov
mov
mov
ja
inc
out
call
sbb
lock
scas
push
in
dec
movl
lahf
test
pop
gs
sti
int3
xlat
enter
mov
pop
push
rolb
pusha
adc
sbb
xchg
add
jg
movsl
push
jno
mov
sbb
out
pop
repz
popf
mov
test
flds
push
mov
xor
cmc
and
loopne
scas
push
pop
push
cmc
jne
in
push
cmpsl
stc
xchg
arpl
jge
dec
mov
push
js
mull
mov
aad
xlat
bound
sahf
stos
pop
xchg
sbb
cmpsb
pop
push
je
mov
jmp
cmc
js
fistps
enter
push
and
cmpb
add
jbe
stos
sub
movsl
daa
scas
dec
pop
test
jb,pt
ror
and
cmp
dec
iret
mov
mov
adc
xchg
inc
lds
out
adc
loopne
cmp
movsl
out
gs
cltd
movsb
loop
xlat
mov
mov
pushl
or
mov
dec
sbb
add
dec
pop
and
ret
js
pop
mov
lods
loopne
dec
mov
sahf
aas
int3
mov
int3
sub
ret
lea
pop
out
lret
inc
push
out
xchg
jp
ss
sbb
add
lea
add
xchg
add
xlat
movsb
push
add
sbb
xchg
push
mov
orl
mov
fcoml
pop
nop
push
or
sbb
inc
mov
and
and
adc
lods
icebp
minps
dec
filds
inc
imul
xor
push
je
dec
mov
mov
hlt
add
pushf
jne
movsb
dec
or
movsl
mov
and
or
inc
or
out
mov
scas
pushl
adc
push
cmp
testl
push
sbb
mov
pushf
loopne
clc
es
ret
lahf
imul
or
push
ficoml
aaa
fs
outsl
ds
test
xor
addb
mov
shl
cmp
leave
or
test
mov
fcompl
outsb
shr
in
int
movsl
mov
push
aas
shl
mov
fldcw
dec
mov
or
movsb
movsb
push
cld
pop
fcomip
aad
clc
xor
mov
add
les
movsl
popf
adc
pop
inc
mov
sub
jle
loopne
sbb
cmp
adc
test
sbb
cld
adc
stos
push
psubusw
xor
xor
lcall
test
das
aad
inc
jle
stos
dec
mov
enter
dec
push
std
jmp
in
call
shlb
jbe
enter
inc
inc
fistl
sbb
aad
or
and
xchg
push
sub
inc
insl
add
gs
add
mov
sub
add
test
xlat
push
or
std
dec
add
adc
adc
and
ss
nop
sub
cmp
fistpll
cmpl
or
xchg
ljmp
scas
jo
rcl
loopne
xor
idiv
lret
jmp
jne
cwtl
sbb
mov
sub
ja
or
dec
pushf
shlb
rcr
add
fwait
sub
lret
ret
jns
sbb
filds
ffree
sbb
mov
ret
aad
rclb
mov
addr16
rcll
call
call
mov
fnstcw
cld
mov
inc
dec
std
insb
jge
sbb
outsl
js
or
or
and
ret
and
push
or
xor
aas
sub
fists
mov
int3
fisubrl
push
jo
shrl
cmp
push
shlb
jecxz
mov
lret
or
adc
sbb
sbb
loop
aaa
loop
stos
in
or
pop
jle
add
call
shrl
push
add
in
sbb
or
jo
or
out
js
fsubrl
in
out
ja
rol
mov
xchg
and
int3
mov
add
popa
mov
imulb
mov
jmp
out
test
inc
xor
out
sbb
out
sti
xchg
aam
fldt
sub
dec
aam
into
ss
push
fsubl
jne
inc
cs
dec
xlat
jecxz
xchg
test
les
out
push
sbb
dec
cmp
mov
insl
xor
cmp
lea
shll
fmull
jmp
jmp
je
xor
outsl
insl
dec
push
adc
push
shl
sarb
cwtl
movsb
lds
sub
data16
xchg
popa
adc
je
pop
mov
call
xchg
push
aaa
mov
xorl
stc
pop
cmp
and
xchg
sar
cmp
jmp
lahf
jmp
dec
int3
lock
push
mov
mov
sub
out
or
arpl
xor
push
cmc
and
inc
sbb
test
mov
cmp
loop
or
adc
iret
mov
mov
fstpt
ret
sti
or
jl
fld
mov
pop
test
jge
ret
cmc
xchg
mov
scas
popa
xor
mov
inc
pop
pop
jp
in
mov
test
call
aaa
jg
bound
pop
pop
push
adc
cmp
cmp
int3
ljmp
inc
xchg
fadds
mov
push
sbb
sahf
inc
dec
sub
xchg
mov
ja
lahf
xchg
jge
add
ficoml
jp
in
mov
jns
sub
pop
mov
aaa
insl
xchg
sub
pushf
daa
clc
nop
std
push
xor
aad
in
pop
lods
pushf
and
test
lods
dec
in
gs
repz
jnp
jae
sbb
xchg
mov
mov
aas
cmp
add
sti
movsl
ret
push
sub
jg
dec
or
sbb
adc
fildl
mov
ljmp
insb
aas
fxch
dec
push
mov
pusha
and
fcoms
filds
pop
push
and
fiadds
jg
dec
pop
pushf
outsb
adc
and
test
and
pop
movb
lret
divl
add
out
and
push
imul
mov
push
xor
ja
jg
dec
cli
jg
xchg
inc
add
fld
and
push
mov
xchg
cmp
lahf
dec
sbbl
mov
xor
js
int
mov
rcrb
dec
gs
std
les
lahf
push
test
aas
cld
clc
jno
enter
xchg
sub
xchg
mov
insb
arpl
sbb
dec
adc
js
jb
jl
lret
daa
mov
shrb
add
aas
push
cmp
aas
xchg
fcomps
cmp
pop
mov
mov
mov
roll
xor
es
dec
mov
xor
add
std
je
sub
scas
filds
mul
mov
inc
or
lret
or
mov
out
repz
push
test
mov
inc
mov
je
mov
cwtl
imul
repnz
mov
movl
sbb
rclb
add
and
xor
ficomps
mov
xchg
push
jg
faddl
xor
xchg
mov
xchg
lods
in
sbbb
jo
xchg
rcrl
inc
sbb
mov
mov
shll
int
fisttps
cli
aas
mov
aad
mov
sub
and
push
or
and
lods
outsl
sub
stos
sbb
xor
movsb
xchg
in
inc
pusha
fidivs
rcll
pop
add
mov
out
cmc
dec
pop
stos
dec
ficomps
test
xor
dec
rclb
push
inc
rcr
fsubrl
cmp
push
jae
mov
inc
sub
arpl
adc
dec
or
mov
outsl
int
aad
movsb
scas
movsb
pop
cmp
adc
insb
or
imul
add
popf
test
out
xchg
mov
lock
shlb
cmp
les
or
mov
int
dec
jl
pop
fidivrl
aas
out
push
xchg
cwtl
mov
jge
sbb
jae,pn
lods
jle
and
sub
jecxz
dec
or
dec
dec
pop
loopne
sti
ss
mov
pusha
adc
adc
imul
mov
dec
push
push
inc
xor
test
xchg
ss
decb
aam
dec
push
jbe
pop
push
cli
mov
in
into
sbb
or
cmp
insl
push
fnsave
testl
or
aad
jbe
cmp
add
add
mov
add
pop
dec
sub
mov
xor
mov
test
push
sbb
lds
sub
sub
dec
cmc
ss
test
adc
loopne
in
push
fistl
fidivrs
jb
mov
loope
cmp
ljmp
jbe
xchg
push
pop
mov
or
push
jae
fidivl
loopne
test
ret
lods
movsb
ret
cmp
loop
mov
mov
int
loop
enter
xchg
or
push
dec
sbb
rol
cmp
mov
cmp
idivl
add
fdivrl
lock
jns
fdivrs
mov
out
loope
add
pop
std
sahf
and
rcrl
pop
or
mov
xchg
mov
ss
cmp
divb
cltd
inc
sbb
sbb
scas
pop
xor
push
push
rep
sbb
mov
or
fldl
test
ds
js
add
dec
adc
orps
rorl
rcll
outsb
push
cmp
repz
or
pusha
flds
int3
and
push
mov
jge
ret
inc
dec
dec
xor
mov
mov
xchg
mov
add
adc
cmp
mov
xchg
ss
rol
xor
pushf
jae
sub
mov
dec
sbb
ret
shlb
lds
ss
dec
fdivs
pop
jbe
aas
dec
mov
inc
insl
andb
dec
jmp
arpl
pop
jmp
cs
jecxz
in
shll
adc
jnp
imul
ror
bound
loope
jge
or
jae
loop
loop
test
stos
test
cmp
dec
xchg
xchg
pop
mov
pop
mov
je
push
je
dec
lcall
les
outsl
push
dec
push
jecxz
bound
xor
arpl
add
xchg
ret
mov
inc
inc
jle
adc
xchg
mov
aad
ljmp
pushf
in
inc
add
pusha
les
ja
jp
and
imull
iret
std
xchg
mov
outsb
adc
inc
push
sub
mov
sbb
les
in
leave
int
or
mov
decb
pop
mov
xor
sar
lahf
mov
insl
sub
inc
and
push
int3
xor
xchg
jmp
pop
inc
xor
test
mov
shlb
jle
cld
xchg
xor
sub
aas
incl
rclb
cs
sbb
pop
test
sti
jmp
dec
mov
push
sbb
std
enter
lahf
mov
and
dec
leave
mov
dec
add
arpl
popa
out
dec
fnsave
das
into
sbb
xchg
lods
pop
das
jl
cmp
cmp
movsb
jecxz
ror
repz
ljmp
dec
push
dec
sub
pop
loopne
mov
or
inc
sub
lret
xchg
xor
sub
inc
push
shll
pop
movb
fstpl
pop
ret
mov
rorl
xor
mov
out
pop
fnstsw
fbstp
inc
mov
int
sbb
sarb
mov
insl
mov
mov
adc
cltd
adc
mov
ret
dec
push
sarb
outsl
sub
adc
adc
push
iret
cmp
inc
inc
mov
std
mov
stos
push
and
std
or
jo
sub
adc
ds
pop
jbe
jmp
fsubr
stos
lea
inc
inc
lahf
jns
cltd
pop
jnp
and
pop
in
jp
xchg
cwtl
arpl
sbb
js
lahf
lret
xor
xor
and
xchg
stos
cmp
dec
cld
rcll
mov
shrl
dec
jmp
inc
push
stos
mov
xchg
int
pop
jae
push
mov
lock
movsb
outsb
or
addr16
sub
andb
add
jnp
ja
adc
cmpsb
popf
add
push
sbb
cwtl
push
out
mov
fwait
pop
push
cltd
add
or
nop
dec
mov
scas
jl
sub
cld
test
imul
loopne
out
sub
inc
jae
loopne
xor
in
adc
pop
pop
push
jne
sub
mov
sahf
mov
add
adc
aas
cld
cmp
leave
cmp
mov
cmpsl
sub
jmp
sub
mov
jnp
mov
xchg
jmp
and
mov
lods
stos
sbb
push
inc
rol
sub
cs
fwait
jno
xchg
aaa
lods
imul
popf
mov
adc
test
hlt
pop
das
jecxz
lods
inc
cmp
lret
add
add
rcr
adc
mov
jnp
insl
ds
jecxz
pop
mov
xchg
popf
repnz
mov
push
xor
lahf
aas
arpl
or
dec
setbe
xchg
and
ret
mov
call
loopne
out
dec
sbb
dec
xchg
movsl
aam
mov
cmc
jmp
add
movsl
mov
mov
lret
or
or
cmp
or
js
xor
sbb
xchg
inc
cld
mov
lea
fcompl
jge,pt
cwtl
push
or
jo
sub
push
lcall
jmp
aad
rorb
cli
popf
jmp
cmp
sti
aad
mov
pop
adc
push
jne
mov
pop
fists
cmpsl
jae
nop
hlt
dec
in
shr
ret
mov
ljmp
xor
cld
stos
sbb
je
test
mov
or
jcxz
jge
cmc
dec
or
cmp
or
jno
sub
pop
mov
negl
sub
in
lock
les
xchg
insb
cmpsl
mov
mov
inc
xor
xchg
shrb
jmp
test
int
or
mov
sbb
mov
jno
dec
insb
xchg
dec
dec
repz
popa
jge
jns
pop
dec
mov
enter
lods
cmpsb
ss
jae
lds
mov
and
roll
fsubs
out
ss
jno
daa
pop
mov
out
lret
sbb
mov
cmp
mov
scas
inc
ljmp
mov
sbb
adc
inc
repnz
pop
cwtl
add
push
test
mov
and
and
pop
mov
mov
ror
out
fs
das
or
fsubrl
mov
shlb
sbb
push
popa
call
xchg
addr16
inc
jg
ror
stos
xor
and
ss
dec
sub
or
xor
xchg
mov
pushf
lods
lcall
sbb
pop
dec
filds
fwait
cmp
into
sbb
jge
shlb
mov
add
ja
cltd
in
mov
mov
push
sub
inc
loop
and
subb
mov
mov
mov
test
inc
out
inc
adc
repz
or
and
adc
mov
mov
nop
adc
mov
shr
fs
push
sub
jecxz
jbe
mov
mov
and
int3
or
adc
dec
insl
sbb
scas
jne
add
xchg
jge
jo
cmpsb
lahf
and
or
mov
adc
repnz
inc
jl
inc
push
sub
pop
push
pushf
lods
outsl
mov
jnp
push
sbb
and
push
outsl
xchg
lahf
adc
push
or
fnstsw
incl
mov
cltd
icebp
jg
outsb
in
jnp
fistps
ret
sbb
mov
jne
mov
xchg
lods
iret
iret
push
test
lods
test
fwait
icebp
inc
push
ds
out
push
pusha
mov
repz
lds
sbb
mov
add
repnz
cmp
inc
out
dec
dec
cmp
xor
in
aad
mov
add
aaa
test
jecxz
mov
int3
mov
shlb
dec
hlt
pop
fstpl
xchg
mov
add
sub
or
aas
pop
mov
sub
pop
mov
adc
xchg
bound
rcr
icebp
sub
cmpl
push
xchg
adc
aas
scas
jo
push
cmpsb
sbb
loopne
jp
nop
push
orl
das
push
add
cld
ret
sub
je
jecxz
mov
xchg
movsl
jecxz
pop
je
adc
pop
and
enter
mov
xor
loope,pt
ret
inc
xchg
ja
sti
pop
call
into
cmp
xlat
ret
pop
out
adc
dec
mov
ss
xor
push
jns
adc
inc
mov
ret
sub
loopne
inc
xor
clc
push
movsb
or
arpl
jbe
jae
pop
or
loope
insb
adc
pop
cwtl
cmp
bound
scas
jecxz
int3
adc
jae
mov
stc
xchg
int3
pop
stos
pop
out
pop
aas
ret
jg
call
pop
fisubrl
popa
or
xchg
dec
xor
jge
xchg
add
dec
push
je
xchg
inc
pop
sub
push
in
sbb
movb
ljmp
scas
in
cmp
out
sbb
mov
push
adc
mov
jnp
jae
js
jl
mov
lock
aad
imul
adc
stc
repnz
and
sbb
leave
lods
push
rcrl
or
jge
lcall
call
mov
jbe
cmp
stos
mov
aam
imul
mov
pop
and
jl
mov
fisubrl
shrb
add
mov
push
xchg
dec
cld
rorb
mov
jne
aad
movsl
ret
fstps
adc
inc
jge
adcl
mov
push
jecxz
jle
lret
shr
jno
mov
hlt
cmp
mov
jno
and
bnd
fdivs
daa
imul
xlat
mov
dec
mov
inc
xlat
jns
jb
push
vprotb
adc
cmp
stos
daa
mov
fs
mov
xchg
lods
test
in
inc
jb
cmp
and
push
push
cmp
pop
add
pop
psrlw
stos
xor
sti
in
daa
sbb
stos
pop
push
pop
and
aad
cmpsl
lret
imul
push
and
mov
push
push
mov
cmpsl
insb
push
and
lcall
adc
ja
mov
ss
pop
enter
addb
aad
cmp
cmc
dec
mov
dec
mov
mov
fcomps
mov
pop
or
and
popa
xchg
int3
add
xchg
aas
push
gs
cmc
sbb
inc
or
out
or
jge
jg
hlt
push
mov
sub
jo
movsl
xlat
xchg
fwait
sti
sbb
push
sub
add
sub
mov
cli
fsubrs
test
mov
fdiv
inc
lcall
lea
fldl
shl
int
mov
pop
pop
lods
jecxz
pop
shlb
fldcw
add
sarb
xlat
and
inc
inc
rcl
cmp
pusha
jno
dec
xchg
pop
dec
push
enter
test
lds
mov
or
loope
outsb
mov
fs
loopne
loope
popa
pop
mov
jae
mov
dec
imul
pop
dec
adc
test
les
cltd
push
xlat
mov
incb
fists
lods
or
jge
lods
mov
xor
imul
pop
decb
popa
add
xchg
movsl
and
inc
sub
lret
lcall
xor
jl
rcll
cmp
sub
es
push
push
popf
push
or
mov
lret
rclb
mov
jmp
cs
loopne
iret
fdivrs
inc
sbb
or
pop
aam
arpl
mov
repnz
data16
movsl
xchg
xchg
xor
add
out
xchg
mov
popf
out
pop
sub
aad
cmpsl
mov
mov
and
out
push
pop
mov
mov
and
lcall
dec
mov
aas
adc
loop
or
add
or
test
push
cld
ja
into
lds
jmp
test
ljmp
jp
push
xchg
pmaddwd
dec
fdivrl
xchg
data16
push
leave
lea
das
in
sub
pop
mov
xor
add
aad
xchg
xchg
mov
in
jg
rol
cmp
mov
sti
jbe
shl
fistpll
hlt
loope
das
test
sahf
push
mov
shlb
shr
xor
pop
iret
jns
loopne
mov
fst
or
stos
mov
or
mov
mov
in
mov
es
cmp
ret
xor
pop
inc
std
sahf
add
mov
je
cld
mov
das
mov
lcall
jmp
lea
mov
add
mov
movsb
das
add
and
mov
jo
arpl
fiaddl
int3
pop
adc
jecxz
dec
pop
cli
call
cmpsl
push
js
pop
int3
cli
mov
aad
inc
sub
test
push
rcrl
cmpsl
jbe
cld
scas
lds
mov
adc
mov
cmpsb
and
pushf
test
dec
cld
movsl
push
out
xor
mov
xlat
xlat
sbb
mov
add
mov
je
fsubrp
in
shl
shll
sub
dec
xor
adc
pop
js
insl
lret
ret
jno
push
jnp
pop
ret
out
xchg
lods
xor
inc
mov
outsl
stos
movl
xor
add
repz
testb
sahf
sub
inc
xchg
pop
mov
mov
adc
jge
jp
test
scas
mov
dec
test
sub
sbb
shlb
or
xchg
popa
lea
jb
aam
das
loope
xor
pusha
add
cld
lret
jne
inc
sbb
mov
add
xchg
dec
out
es
fs
sbb
pop
push
sub
cmp
fnstenv
add
push
sbb
cmp
lods
adc
mov
mov
sbb
pusha
sahf
ds
rcrb
or
or
add
mov
jne
or
popl
hlt
out
mov
mov
cmp
fists
xchg
cmpsl
jge
sub
and
mov
movsb
fisubrl
push
dec
mov
xchg
sbb
add
shrl
mov
dec
adc
and
fnstenv
loopne
cli
and
jae
ljmp
ret
xor
shr
repnz
add
mov
add
xchg
mov
push
clc
out
push
sahf
movsb
je
outsl
and
jmp
rclb
mov
xchg
pop
daa
xorl
sti
jge
jp
xchg
int
add
lods
lret
jb
scas
arpl
pushf
sbb
xchg
out
mov
in
ret
xchg
iret
sbbb
xchg
andb
and
sbb
cltd
add
cli
fnstcw
gs
xor
mov
pop
sti
push
ss
int3
xor
in
lahf
or
jo
scas
xlat
mov
hlt
into
sahf
ja
mov
mov
std
xor
or
in
inc
lea
mov
out
sub
fildll
mov
rol
outsb
cmpsb
jbe
jne
cmp
out
mov
rorb
movl
dec
outsb
mov
xchg
test
inc
jbe
inc
cli
es
cmpsb
stos
xchg
int
jg
inc
mov
sti
push
into
mov
les
stos
mov
pop
dec
ds
in
lea
sub
cmp
cmp
cltd
movsb
xor
fucomi
push
cld
sbb
lret
push
out
les
sub
hlt
mov
loop
add
xchg
imul
xor
int3
arpl
dec
sub
or
orl
xorb
push
mov
hlt
je
jno
mov
loopne
data16
pop
pop
or
mov
ss
xor
ljmp
mov
loop
jecxz
dec
xchg
test
test
jle
loope
arpl
add
ret
inc
push
inc
jp
test
scas
int
and
stos
imul
add
xor
mov
mov
out
clc
sbb
addl
add
loope
in
lea
mov
mov
or
fs
nop
sub
loopne
push
add
inc
out
insb
test
paddw
adc
jge
and
xchg
adc
sti
cs
xchg
mov
mov
stos
out
arpl
or
sub
dec
sub
out
aas
icebp
inc
xchg
cmpsl
adc
idivb
mov
imul
mov
je
in
sbb
push
pop
pop
fistl
mov
imul
arpl
cmp
xchg
push
add
push
lcall
sub
mov
fsubrs
jp
lods
and
stos
pop
mov
sbb
adc
xor
dec
mov
cmp
mov
add
jp
call
aaa
sbb
addr16
add
daa
lock
or
shlb
lret
pop
and
xchg
mov
inc
pop
into
mul
lea
mov
jbe
sub
movsb
inc
cmpsb
out
jo
test
or
mov
sbb
sub
lcall
mov
dec
sub
push
sub
sar
in
loopne
enter
dec
dec
inc
test
and
cwtl
repz
add
test
sbb
xchg
sbb
mov
stos
gs
sahf
push
bound
outsb
cld
jb
sbb
xor
pop
jbe
sbb
jmp
adc
out
ja
clc
sarb
inc
cli
fcomp
cmp
iret
cwtl
sarb
mov
and
int
xchg
ds
jge
out
mov
jg
js
imul
mov
mov
sub
push
test
pop
out
cmp
mov
mov
pop
push
mov
test
lea
cmpsb
cmpsb
add
idivb
scas
out
out
jmp
aas
and
into
adc
pop
lods
repz
xor
pop
scas
xor
repz
inc
das
lods
iret
pop
jo
push
jnp
rcll
mov
xor
jnp
add
mov
lock
push
pop
loope
inc
sub
jge
push
movsb
sub
sub
inc
repz
cmpsb
mov
inc
dec
shll
in
dec
jb
adc
arpl
or
jnp
pop
and
fimull
test
movsb
aaa
fs
sbb
enter
inc
jbe
mov
push
inc
sub
adc
sub
nop
je
and
arpl
shlb
jg
mov
mov
imul
jl
orl
xchg
sar
out
jbe
pop
jge
xor
mov
jp
jae
xchg
pop
cmpsb
pushf
test
ljmp
jle
insl
sub
sub
daa
mov
pop
and
in
inc
xlat
jg
js
pop
xor
cld
mov
cmpsb
push
push
cmp
xchg
adc
mov
or
mov
dec
mov
sbb
inc
arpl
push
push
decl
loopne
sarl
add
pusha
outsl
mov
fstl
shrl
xchg
out
mov
daa
adc
fadds
push
sahf
adc
fsubrs
std
scas
xor
xor
test
ret
inc
or
cmpsb
cli
call
cmp
mov
xchg
dec
adc
xor
aas
js
lcall
ret
das
inc
add
cmp
sbb
stc
clc
popf
sub
fsubr
add
sbb
and
xchg
pushf
jnp
mov
popa
and
xor
inc
jl
mov
stc
inc
test
insl
push
or
les
xchg
addl
mov
ljmp
cmc
or
sti
cmpsl
mov
pop
cmpsl
mov
sarl
call
push
cmp
pop
orl
pop
es
mov
mov
shrb
shll
xor
lcall
sub
jbe
mov
popf
xor
adc
je
cmp
xchg
pop
popf
mov
push
mov
push
adc
sub
mov
mov
or
cs
pop
mov
push
movsl
push
adc
shll
or
mov
jnp
and
and
test
pop
mov
dec
mov
pop
push
dec
std
and
adc
jno
popf
add
pop
outsl
jns
ss
jecxz
or
mov
xor
test
lds
daa
cmc
push
es
or
pusha
in
fdivs
and
aas
push
xchg
fbld
in
sbbl
inc
pop
mov
loope
and
outsb
int
addr16
dec
ja
dec
or
jb
int
popl
xchg
or
ss
fnstcw
add
dec
loop
push
repz
pop
xchg
add
mov
jnp
dec
cmc
call
ds
orl
outsl
jb
inc
adc
mov
sbb
inc
and
lea
aam
lret
test
imul
mov
cmpsb
mov
addr16
push
pop
out
xor
xor
das
and
mov
xor
push
jp
sahf
lds
pusha
mov
std
outsl
movsl
sahf
cmp
push
ja
shrl
xchg
adc
sub
xchg
xchg
jnp
push
xor
xor
or
daa
mov
jno
mov
testb
mov
xchg
sbb
int3
lea
rep
xchg
jg
jl
es
lea
push
outsb
aam
mov
stos
cli
cmc
mov
inc
enter
dec
outsb
ss
sbb
outsl
lret
mov
inc
jg
jnp
pop
loop
pop
or
pusha
cmp
jns
sbb
loopne
xchg
mov
pop
mov
popa
pop
inc
add
mov
repz
sbb
xlat
mov
xchg
nop
xchg
xchg
push
push
ja
pop
adc
xchg
lret
stos
mov
sbb
inc
and
bound
push
inc
xor
pusha
xchg
xor
inc
lahf
jno
rorl
mov
cmp
xchg
or
loopne
xchg
fmuls
cmp
xor
sub
inc
dec
je
cmp
arpl
sub
xor
or
sbb
ficompl
jne
adc
fsubl
mov
dec
je
aam
shll
pop
gs
scas
stc
sub
xchg
cmpsb
outsb
imul
cmpsb
pusha
gs
jnp
mov
mov
push
xchg
je
cmp
mov
aad
sbb
lahf
or
data16
fcoml
pop
ljmp
add
icebp
cmp
pop
inc
fcompl
hlt
mov
je
xlat
imul
rcrb
outsb
add
sub
and
into
out
mov
out
repnz
adc
les
push
and
xchg
int3
les
inc
popa
push
in
mov
scas
shl
fistpll
mov
mov
outsl
mov
mov
insl
adc
or
mov
iret
sbb
push
xchg
sbbb
fidivs
and
pop
out
push
lahf
je
addr16
out
push
mov
jecxz
sarl
mov
xchg
aad
frstor
or
add
arpl
icebp
dec
aas
lcall
push
mov
cmpl
les
xchg
xor
pop
add
outsl
push
dec
pop
push
push
jae
pop
movl
das
mov
out
rcrl
cmc
or
inc
xlat
hlt
les
test
jo
outsl
nop
int
sub
xchg
xor
mov
lahf
dec
and
icebp
mov
sbb
roll
cs
mov
int3
jbe
xchg
in
dec
and
xor
lahf
scas
int3
stos
inc
mov
push
bound
add
push
aad
pop
aam
shll
push
jle
fnstcw
dec
mov
shrd
popa
fs
cld
sub
mov
adc
pop
pop
mov
push
add
or
scas
dec
jge
mov
shlb
scas
fcompl
std
add
adcl
negl
cmp
enter
adc
jno
xor
add
mov
loopne
in
mov
sbb
scas
inc
je
mov
mov
insl
mov
cmp
jnp
in
sbb
lcall
cwtl
jg
andb
ret
jecxz
add
push
hlt
push
mov
jmp
cmp
icebp
popa
and
cmc
stos
xchg
mov
mov
es
popa
lock
sbb
push
rolb
dec
orl
or
fstps
ss
scas
ljmp
or
jp
out
mov
lock
hlt
adc
push
cli
cli
popa
dec
mov
icebp
in
sub
fisttps
jns
cmp
mov
jmp
cwtl
stos
push
mov
jne
icebp
nop
pushf
and
inc
std
jp
sbb
daa
xor
xor
jb
inc
mov
clc
inc
repz
xor
inc
or
pop
lods
ja
rclb
ret
cld
imul
ret
and
lret
xchg
push
outsb
jmp
inc
jo
and
jmp
dec
sub
in
aam
in
cmpsb
push
lret
mov
adcb
add
icebp
lcall
int
icebp
jp
stos
lahf
rcl
cli
push
mov
mov
mov
sub
pop
lret
push
test
jno
cld
in
push
dec
out
or
es
inc
or
cmpl
div
mov
jns
jmp
data16
push
shll
and
rcrl
ja
cmp
sahf
into
in
jge
xchg
push
xchg
clc
dec
lods
pusha
jb
mov
xlat
mov
xchg
cld
and
loope
ret
ret
mov
and
mov
and
scas
imul
imul
mov
out
mov
stc
shl
push
lds
pop
lcall
add
and
cmp
repz
and
outsl
sbb
andb
sbb
and
out
push
addr16
mov
cli
dec
mov
pop
lea
sbb
xchg
popf
inc
sahf
jge
lods
adc
jmp
aaa
push
add
mov
daa
aam
into
imull
sarb
vcvtss2sd
lods
mov
pop
enter
out
ja
mov
repz
mov
aam
sbb
or
sbb
mov
cmp
ret
add
mov
sub
push
pop
xorb
push
xchg
and
loope
xor
sbb
adc
xor
mov
bound
lcall
mov
dec
mov
dec
bound
jge
std
je
je
add
inc
rcrb
rcll
in
mov
popa
sub
aad
iret
stc
jle
negl
into
inc
cmp
jp
ret
and
push
mov
loop
jecxz
les
push
in
mov
jb
sti
bound
leave
jp
inc
addr16
in
inc
cmp
inc
mov
cmp
cltd
fcoms
add
or
jno
mov
rcr
mul
lret
loope
sbb
test
mov
movsb
cmpsl
adc
mov
push
nop
imul
sub
es
pop
mov
sbb
xor
push
ds
test
mov
jg
repz
mov
mov
rclb
cmp
sub
push
jg
popf
jp
sub
inc
sub
sahf
jae
scas
and
pop
out
scas
inc
mov
sub
aas
cmp
mov
stos
jle
ja
mov
mov
push
test
mov
sahf
adc
pop
out
xor
and
loop
jb
or
xchg
sbb
bound
in
lea
popa
mov
lods
mov
lret
jno
mov
dec
rolb
jp
inc
or
xchg
movsb
aam
jnp
jecxz
fcomi
ljmp
cmp
ret
mov
call
mov
push
shl
xchg
mov
mov
xchg
rcrb
pop
or
or
into
push
mov
daa
cmp
adc
test
mov
cmc
xchg
adc
jno
mov
xor
test
xor
mov
decb
or
push
or
push
mov
in
fcmovnu
xor
mov
mov
popa
xchg
mov
jb
inc
loope
xchg
imul
pop
arpl
or
incl
xor
loope
ret
arpl
lock
out
jns
fwait
call
xchg
js
dec
sahf
data16
aad
fstps
mov
xor
enter
lock
push
mov
stos
adc
xchg
jbe
sub
jmp
dec
mov
lods
lea
lods
mov
mov
mov
and
cmpsb
into
ds
aad
xchg
scas
cld
push
jns
adc
loopne
pop
out
notb
adc
in
xor
in
movsb
or
dec
orl
and
out
pop
sbb
xor
mov
xor
xchg
dec
out
lahf
call
ljmp
iret
pop
mov
jl
pop
jmp
ret
pop
fimull
sub
sub
sbb
imul
test
loopne
jns
arpl
pop
orl
fnstcw
dec
jae
subb
and
adc
mov
pop
adc
scas
lods
push
mov
mov
ret
and
pushf
or
pusha
insb
push
popa
dec
test
sub
xor
mov
vxorpd
imul
cmp
mov
jo
lds
sub
dec
and
and
xchg
jae
jns
lock
outsb
or
divl
xor
cmp
insl
push
into
push
mov
jg
fadds
cmpsl
stos
cmc
adc
je
inc
pop
cmpb
adc
imul
xlat
dec
cmp
xchg
sbb
push
das
jg
out
push
call
js
mov
in
sbb
es
add
inc
cmc
cmp
dec
test
insl
mov
cmpsl
cltd
ljmp
mov
test
loopne
shlb
pop
cmp
shll
adc
sarb
or
push
daa
push
clc
nop
mov
dec
enter
xchg
stos
cmp
lods
adc
stc
inc
adc
lea
lret
out
mov
cmpsb
xlat
mov
or
movsb
sub
jg
cmp
or
scas
fisubrl
insb
daa
inc
stos
mov
fidivl
stos
xchg
sub
mov
std
sti
out
scas
clc
xchg
and
push
xchg
pop
mov
cmp
mov
fcompl
in
sub
adc
idivb
repz
push
jl
cwtl
add
aaa
jecxz
mov
aam
jge
stos
aam
jmp
into
bnd
mov
jbe
lret
sbb
mov
iret
arpl
fwait
adc
and
mov
jp
fcompl
fld
aaa
dec
and
hlt
xchg
push
ficoms
js
subl
jae
lds
mov
insb
xor
mov
lds
out
pop
pop
es
daa
mov
iret
fldenv
ret
push
adc
jbe
pop
pusha
sarb
cmp
sub
outsb
cs
pop
ja
incb
test
adc
inc
rcrl
mov
cmpsl
sbb
test
in
daa
int3
daa
cli
lcall
add
xor
mov
or
js
push
mov
xchg
out
int
jnp
jnp
icebp
push
push
dec
imul
mov
jge
int
push
pop
adc
inc
sarb
cmp
in
jbe
jbe
cmp
ss
movsb
adc
fistps
in
mov
nop
add
lahf
fwait
stos
mov
clc
sti
addb
jno
pop
mov
adc
add
mov
nop
nop
das
inc
push
cmp
in
std
fucomp
mov
call
pop
cmpsb
mov
cmpb
jnp
int3
inc
sarl
insb
stc
and
pushf
std
mov
and
mov
mov
mov
rcll
pop
mov
stos
mov
idivl
stc
cmpsb
lret
jbe
mov
adc
cltd
jae
seta
sbb
roll
push
movsb
xor
jg
insb
inc
add
scas
mov
cmp
adc
popf
xchg
sarb
leave
inc
jp
addr16
jns
mov
dec
mov
outsl
mov
mov
cmp
popa
cmp
adc
dec
and
jmp
mov
jg
popf
lret
nop
jne
aaa
mov
sub
outsb
jae
mov
lods
pop
lock
and
jbe
jge
or
sub
fstpl
push
idivl
loopne
and
lcall
pop
nop
insb
mov
adc
outsb
cmp
sbb
pop
sbb
sti
sub
lods
mov
pop
scas
addr16
imulb
cmp
rclb
and
jl
dec
sub
stos
subl
and
daa
xor
and
adc
hlt
cmp
add
shlb
jns
scas
test
dec
adc
mov
inc
add
addl
daa
xchg
ss
testl
add
lcall
enter
push
iret
ljmp
in
rcrb
sub
adc
cmp
adc
mov
dec
das
clc
std
nop
jno
xor
xchg
adcl
sub
pop
add
test
rcll
ss
push
sub
cmp
xor
imul
or
stc
sbb
pop
std
or
leave
ret
jae
pop
pop
inc
xlat
psrld
add
cmp
insl
enter
inc
sub
sub
notb
xchg
sub
mov
je
sbb
push
push
sub
sub
jecxz
outsb
xorb
cwtl
mov
xor
adc
sbb
mov
sbb
mov
nop
test
sbbb
and
dec
iret
loopne
mov
mov
and
rcl
xchg
inc
pop
xor
mov
adc
dec
add
jle
inc
jno
lcall
lea
and
lret
sub
cmc
lods
in
lahf
imul
popf
fidivrs
icebp
pop
mov
das
cmp
pusha
jp
pop
dec
out
pop
ja
cmpsb
outsl
outsl
adc
push
mov
movsb
test
mov
push
imul
sub
mov
mov
sub
xor
pop
les
mov
int3
hlt
jmp
or
mov
les
cwtl
or
aas
push
repz
cmc
push
mov
xchg
in
adc
and
push
ljmp
jp
push
xor
sbb
outsb
hlt
lock
mov
mov
loop
cwtl
or
and
mov
dec
jge
insb
outsl
xchg
lcall
fcmovu
lret
fs
movsl
in
xchg
data16
test
aas
jno
fsubrs
xchg
mov
and
mov
xlat
lock
cmp
dec
jge
out
jmp
call
sbb
sbb
addr16
jbe
pusha
cmpsl
out
lret
xlat
insb
std
push
bound
xchg
or
cmc
push
in
leave
scas
cmovnp
les
push
aas
std
cmp
dec
cli
pop
cwtl
mov
push
ljmp
lcall
gs
push
shlb
sbb
lods
jecxz
repnz
nop
sub
pop
xor
addr16
lea
sarl
push
add
xor
push
sbb
push
test
cs
sub
mov
sbb
mov
add
movsl
cmp
iret
scas
enter
pop
sub
dec
push
fisubl
int
and
test
jge
jp
movsb
lret
fwait
ret
sbb
orl
pusha
clc
jecxz
sub
icebp
es
mov
inc
push
mov
inc
xchg
xchg
mov
inc
repnz
dec
mov
mul
pushl
leave
add
push
inc
lret
std
aad
pop
movsb
mov
mov
dec
cmp
and
push
mov
addr16
arpl
xor
and
out
fstps
pop
inc
std
xchg
loop
jo
pop
xchg
jle
add
ljmp
adc
sti
cltd
cmpsl
int
fcomps
mov
push
jo
adc
lock
lea
fildll
pusha
dec
js
jae
movsl
sbb
ja
dec
ror
adc
mov
data16
int
push
add
adc
mov
xor
aam
adcb
and
cpuid
daa
jmp
sti
dec
jmp
gs
dec
rcrb
cmp
popf
xchg
dec
jp
into
jl
dec
jae
repz
lds
cmp
aaa
pop
mov
xor
or
daa
jb
gs
incb
popa
jl
mov
sahf
lcall
or
fidivrl
push
dec
xchg
mov
orb
sbb
push
orb
and
das
and
pop
std
sbb
push
std
push
arpl
add
lods
daa
fists
enter
out
data16
shlb
jae
push
hlt
pushf
sti
outsl
mov
mov
shlb
jns
fs
push
aam
fidivrs
push
leave
xlat
xchg
aaa
jp
andps
dec
dec
aaa
mov
xor
aad
cmpsb
lock
jle
push
mov
mov
iret
mov
inc
fwait
inc
or
jl
js
pop
cmp
je
in
aas
jp
pop
jmp
xchg
call
sti
add
ret
and
punpcklwd
mov
hlt
mov
mov
pop
adc
and
loopne
loop
jg
lcall
xor
push
inc
rorb
arpl
ret
push
repnz
xlat
xor
cld
test
mov
cmpsl
cld
mov
imul
into
xor
ret
mov
mov
push
test
push
jg
mov
or
loopne
js
outsb
jl
rcr
xchg
fstps
dec
shl
push
movsb
stos
xlat
mov
sub
rcrb
or
inc
pop
ss
inc
pop
in
dec
dec
shrb
scas
dec
mov
adc
pop
int
sbb
out
das
jns
ret
cmpl
cmp
ss
sahf
sti
jge
sbb
dec
mov
repz
lods
push
lds
sbb
sub
aad
out
dec
cli
inc
adc
add
xchg
pop
aam
loopne
in
adc
jp
inc
inc
andl
add
es
test
in
test
cmp
aad
adc
aad
xchg
into
dec
fstpt
gs
dec
ret
rol
mov
gs
dec
jmp
and
repnz
sahf
into
outsb
mov
cmp
into
jmp
mov
xchg
lahf
ljmp
in
movsl
stos
lret
inc
fadds
xor
pop
fildl
inc
cmc
jbe
loop
mov
mov
mov
xor
cmp
adc
jecxz
jae
sub
out
cmp
pop
pop
pop
push
imul
shl
mov
lahf
xlat
dec
cld
dec
gs
dec
dec
cmc
std
mov
in
daa
mov
popf
xlat
in
dec
adc
pop
mov
jae
shll
jmp
jno
xchg
pop
pop
sbb
xchg
push
popa
jle
ret
push
dec
mov
ret
outsb
mov
inc
sub
dec
shll
stos
jnp
rol
jbe
dec
cmpsb
out
out
dec
rol
xchg
xor
mov
stos
sub
fchs
push
or
xor
jns
dec
clc
jb
shrl
testl
mov
xor
dec
lret
mov
and
mov
pop
repnz
xor
pop
sub
addr16
push
daa
jmp
out
rcrl
add
mov
xchg
dec
ljmp
frstor
xchg
fstp
loop
xorb
and
call
sub
xchg
add
xor
out
cli
jecxz
add
mov
popa
or
into
cmp
hlt
rcr
in
insb
or
mov
jmp
cmp
orl
sti
jnp
mov
dec
loop
leave
cmp
int
je
inc
pop
push
push
ljmp
das
pushf
add
and
scas
jne
jae
and
pop
pop
add
fsqrt
mov
inc
add
xchg
stos
mov
aaa
sub
rorb
mov
outsl
pop
outsb
adc
lods
out
xor
aas
push
push
jbe
mov
mov
idivl
inc
push
sub
bound
test
in
repnz
lods
les
aad
sbbb
iret
push
sbb
movsb
add
repnz
add
jl
fwait
mov
mov
mov
daa
mov
push
adc
popl
lock
xchg
in
sahf
lret
mov
pop
xchg
xchg
lret
in
jns
filds
orl
inc
clc
sub
cmpl
inc
jl
les
aaa
rcr
daa
or
imul
cwtl
jbe
cwtl
add
repz
and
int
inc
or
rorl
mov
sar
in
inc
jg
mov
cmp
outsb
sbb
xchg
outsl
aas
into
sub
std
push
pop
xor
mov
pop
xor
and
ret
sarb
repnz
fdivr
xchg
data16
mov
push
or
shlb
xchg
ds
jo
mov
hlt
sub
stos
and
leave
je
inc
fistpll
push
push
and
pop
addr16
adc
xchg
xchg
lcall
pop
bound
call
rorl
in
stos
das
xlat
and
out
xor
cmpsb
leave
inc
out
jmp
fcom
out
pusha
xor
mov
jge
movsl
xchg
xlat
jns
testl
or
or
xchg
iret
jl
popf
mov
inc
loope
out
arpl
aaa
add
adc
lock
mov
std
push
movsl
enter
pop
aaa
stos
aaa
inc
and
repnz
push
push
inc
fcomps
sub
insb
push
je
popa
pusha
sbb
pop
repnz
loop
daa
jb
push
call
ljmp
mov
out
rorl
outsb
jp
jbe
xchg
in
xchg
mov
pop
mov
adc
inc
ficomps
rcrb
inc
add
sub
xchg
or
test
or
mov
pop
and
std
notb
lods
sub
xor
and
fmull
mov
jp
sub
ja
sub
jno
pop
mov
xchg
ja
int3
in
mov
jge
dec
adc
gs
leave
mov
data16
es
jno
xor
mov
inc
pop
xor
and
rcr
aam
cmp
cmp
clc
pop
adc
lahf
xchg
jecxz
xchg
cmp
and
ss
loop
cmp
add
loope
icebp
ret
mov
pusha
imul
enter
jnp
push
cmpsl
rorl
test
inc
and
pop
add
out
clc
xchg
addr16
aad
jae
fcmovb
pop
cltd
stc
stos
pop
lret
int3
sbb
cs
ret
jns,pt
in
jns
add
outsb
inc
push
or
ljmp
and
aas
pop
mov
xchg
mov
dec
push
insl
nop
test
loope
scas
add
sbb
sub
loope
mov
xchg
je
lods
dec
push
loopne
repnz
and
sub
lret
in
test
imul
or
shr
mov
add
adc
and
cmpsb
pop
and
movsl
mov
adc
int3
arpl
imul
mov
je
fidivrl
ljmp
xchg
decl
push
xchg
mov
shlb
mov
fistps
pusha
add
adc
fwait
add
cmp
test
rcrl
cmp
loopne
pop
mov
or
push
jns
repnz
pop
ret
cmove
js
push
add
mov
sbb
aas
sub
mov
int
or
and
addb
fnstsw
jecxz
jge
add
jmp
sarl
jle
scas
inc
mov
popa
orl
mov
loop
inc
repz
int
ljmp
scas
mov
xchg
data16
inc
aad
xor
insb
cmp
aam
mov
sub
sub
xor
xor
inc
cmpl
sarb
out
mov
mov
sbb
imul
inc
add
mov
add
insb
mov
and
call
xchg
roll
stos
push
and
rcll
push
sub
lods
jnp
iret
or
xor
or
lahf
cmp
aam
mov
movb
repnz
lret
popf
cwtl
or
inc
xor
leave
sub
out
int3
xchg
fists
push
mov
test
pop
jnp
jne
imulb
jge
std
dec
push
add
imul
stos
aad
mov
push
inc
es
and
or
add
pop
mov
push
enter
fisubrl
sub
jne
insb
pop
jo
xchg
adc
pop
das
adc
jg
or
in
mov
fdiv
inc
addr16
sbb
push
pop
fwait
mov
cmp
jge
mov
arpl
repz
orb
inc
sbb
sbb
push
mov
and
in
jle
mov
out
push
push
test
scas
sbb
sahf
sub
mov
mov
add
lret
out
mov
mov
sbb
aas
das
inc
jns
fs
push
stos
insl
jne
inc
andl
jmp
dec
inc
or
adc
xchg
cld
sahf
add
stos
add
test
fcom
mov
push
or
lods
jbe
out
add
mov
fs
xlat
imul
mov
xchg
xacquire
xchg
fadds
sbb
jo
es
mov
and
in
das
mov
jne
or
test
movsl
add
mov
test
lahf
cmpsl
movsl
imul
sub
sbb
adc
or
adcb
dec
mov
pop
add
mov
sbb
rorb
imul
int3
lods
and
jbe
xor
push
imul
icebp
adc
rcll
cmp
and
movsl
ret
loopne
cli
sahf
pop
aaa
sbb
xlat
xchg
enter
sbb
and
dec
xor
imul
push
adc
into
mov
xchg
push
cltd
mov
dec
jbe
dec
ja
aaa
lret
stos
cmp
outsl
inc
jb
mov
fistpl
push
adcb
fimull
xchg
cmp
sub
fwait
ret
bound
push
cmpsl
xchg
aaa
pop
pop
sbb
xor
inc
mov
rclb
xchg
sbb
repnz
in
push
push
jle
out
lea
or
ljmp
loope
jo
pop
aaa
xchg
push
sbb
jno
cmp
mov
mov
aam
scas
test
jle
dec
pusha
xor
mov
lods
mov
mov
push
xchg
imul
insl
mov
rcll
pushf
data16
popl
das
shlb
mov
pop
outsb
cli
xor
xor
jmp
out
dec
xor
adcl
loopne
insl
xchg
stos
adc
add
or
test
sbb
fcompl
mov
push
movsl
and
adc
mov
clc
xchg
arpl
mov
xor
mov
int
cmc
sbb
hlt
sbb
mov
dec
adc
ficoml
insl
add
mov
fnstcw
dec
and
mov
adc
popa
mov
pop
pop
lcall
data16
xchg
daa
sbb
data16
popa
adc
xor
pop
inc
xchg
mov
mov
cmp
es
add
int3
inc
mov
lods
cmpb
std
daa
das
adc
es
iret
and
call
imul
pop
pop
inc
leave
mov
ficompl
or
xchg
ja
cld
fnstcw
jge
pop
testl
lret
stos
and
push
std
jmp
js
shlb
and
stos
cmc
mov
shl
and
aas
sti
scas
and
setne
out
in
ret
ret
and
pop
ja
xor
add
xlat
sbb
bound
mov
sbb
ja
and
popf
aas
mov
xor
aad
in
sub
stos
arpl
fidivl
shl
adc
xor
push
xor
insb
rcll
adc
pop
inc
int3
pop
test
bswap
das
dec
mov
movsl
inc
outsl
adc
mov
push
int
mov
test
enter
movsb
fnstsw
clc
ss
std
sub
adc
adc
sar
and
xchg
add
add
sub
lcall
pop
xor
or
dec
mov
cmp
arpl
shll
adc
pop
mov
sub
out
fcomps
test
push
lret
lea
sbb
je
adc
jmp
pop
or
cmpb
lods
or
cltd
jno
add
mov
imul
addb
inc
mov
sub
mov
sbb
loop
jle
xchg
add
pop
js
mov
mov
cwtl
cmp
popa
out
dec
cmpsb
out
cmpsb
jecxz
daa
xor
movb
cli
pop
cmpsb
cmp
cmp
into
fcmovne
int3
add
sub
repz
loope
rcl
js
cmc
adc
mov
add
add
inc
sbb
or
ror
xlat
adc
aaa
bound
lods
pop
aad
mov
ljmp
mov
sub
pushf
cmpsb
imul
push
add
xchg
es
xorb
fisubl
mov
fwait
sahf
pop
sbb
fisubrl
faddl
daa
out
adc
pop
xor
cs
pop
imul
dec
jmp
rclb
cmpsl
xchg
aam
les
add
push
push
mov
ret
dec
adc
outsb
adc
rcll
mov
inc
test
jge
btc
test
call
jl
sub
adc
insb
outsb
outsb
lods
stos
in
rorl
pop
mov
push
jno
add
jle
mov
test
les
mov
xor
ret
stc
cmp
xchg
push
jg
in
xor
ds
add
xor
shll
out
int3
iret
arpl
sub
sub
pop
in
jo
sub
mov
push
jg
in
push
pop
pop
adcl
in
imul
test
dec
and
fwait
jne
movq
sbb
movsl
jl
bound
ret
test
xchg
jg
jl
fs
ja
inc
mov
rcl
or
adc
xchg
or
push
mov
cmp
pop
sbb
out
sbb
lods
lods
mov
cmpsb
sbb
inc
xor
movsl
lock
cmp
inc
fdivr
mov
movsl
sub
movsb
mov
movsl
jno
add
cli
ja
cmpsb
mov
jl
scas
into
cmp
dec
jl
test
mov
cmp
pop
insl
sub
inc
clc
aam
clc
and
inc
sarb
mov
xor
stos
lcall
pop
stos
test
pop
pusha
push
xorb
outsl
or
sbb
aaa
out
mov
jecxz
in
rcr
das
mov
push
and
and
nop
test
aas
ljmp
add
scas
repz
jnp
std
push
lods
ljmp
outsb
jbe
adc
in
es
inc
cli
add
lahf
add
mov
loope
jp
pop
inc
sbb
cld
cmp
xchg
push
jmp
adc
pop
test
mov
xor
icebp
xor
jne
pushf
loop
xchg
testb
mov
imul
pop
add
sub
sub
inc
pop
int
pop
call
sub
lahf
cmp
inc
inc
mov
mov
mov
cmc
inc
jg
pop
jae
jb
mov
mov
and
movsl
cwtl
ret
cmpsl
in
jo
push
sbb
cmpsb
sbb
xor
xchg
xchg
gs
out
adc
mov
or
xchg
and
test
inc
stos
and
data16
mov
js
ja
stos
daa
pop
rclb
loop
xor
loop
stos
jb
cltd
sbb
inc
pusha
bnd
mov
das
xor
popa
inc
inc
js
popf
or
bound
aad
aaa
jp
push
pop
dec
push
popa
dec
aas
je
inc
xor
negl
out
test
pop
pop
mov
fwait
negb
dec
xchg
fldl
adc
in
pop
notb
dec
fildl
mov
xchg
push
xor
in
inc
pop
push
xor
stos
rorl
imul
lds
jo
fwait
mov
xchg
push
adc
sbb
repnz
and
aad
push
loopne
cmpsb
das
fs
mov
imul
int3
jl
push
adc
jnp
popf
shl
les
or
adc
pushl
fucomip
lods
push
subb
fadds
pop
pop
jecxz
and
mov
xchg
enter
or
mov
pop
mov
inc
xchg
and
rol
sub
pop
mov
rorl
pop
xlat
or
test
pushf
fs
sub
jns
dec
adc
adc
cmpsl
adc
inc
fbstp
pop
xor
lahf
lcall
insb
sub
arpl
jns
mov
loop
xor
popf
push
imul
inc
mul
iret
jns
ret
cltd
das
in
cmp
cwtl
aam
ja
repnz
icebp
sub
clc
gs
orl
inc
int
aaa
in
adc
pushf
hlt
xor
cmpl
or
cmp
mov
add
pop
jno
cmp
stos
mov
dec
dec
sub
sub
addr16
in
sbb
pop
adc
dec
nop
push
dec
jl
inc
push
cli
jo
int
cltd
stos
sar
enter
xchg
lret
ljmp
mov
lret
push
push
push
mov
sbb
call
xor
mov
mov
push
fsubrs
mull
push
pop
jns
sub
push
xor
add
sbb
clc
adc
sbb
stos
push
add
mov
clc
xchg
jbe
scas
imul
popf
enter
inc
in
xor
lods
fadds
push
lods
sub
jge
cwtl
stos
repz
repz
orb
data16
xchg
pop
or
subb
cmpsl
push
add
xor
xchg
jo
movb
push
rorl
sbb
ja
and
sbb
jmp
adc
dec
ds
and
sahf
sbb
setg
jg
add
leave
pop
fisubrs
xor
xchg
push
das
dec
movsb
jl
std
rcll
lahf
inc
inc
pop
or
sbb
sub
jo
fprem1
push
clc
inc
jnp
stos
adc
nop
add
pop
ljmp
call
shr
pop
pop
js
nop
mov
pop
or
and
cs
mov
fsub
dec
shl
sub
dec
aad
mov
xchg
aam
push
loopne
clc
addl
popf
cmp
dec
adc
je
sbb
jno
shlb
ret
cmp
je
fdivs
and
mov
aam
cmc
mov
fldt
ljmp
add
pop
mov
test
clc
jne
jecxz
mov
pop
popa
iret
adc
jnp
ret
cltd
inc
dec
jge
data16
mov
pop
arpl
jbe
lock
mov
lds
sbb
es
es
ficoms
ret
jp
push
push
xor
mov
adc
out
std
mov
push
out
cwtl
jbe
pop
sub
and
pop
mov
popw
pop
jle
jecxz
aaa
push
clc
stc
movsb
rorb
mov
xor
andl
mov
popa
push
inc
xchg
ret
loopne
sbb
icebp
ss
dec
sbb
enter
jae
js
and
daa
xor
mov
aas
sub
pop
or
xchg
jo
mov
call
insl
out
movsb
push
adc
in
sti
adc
xor
call
xor
mov
sbb
icebp
je
mov
sahf
add
sub
hlt
jbe
fiadds
pushw
mov
iret
mov
in
push
mov
mov
pop
jbe
add
loopne
popa
mov
or
xchg
cli
aam
aas
mov
outsb
cmp
jnp
scas
push
adc
xchg
jmp
or
fsts
outsl
sub
xlat
mov
fwait
push
cmp
aas
lods
cmp
scas
sub
fidivs
jg
ss
adc
adc
xchg
adc
cmpsl
je
and
mov
insb
mov
sub
push
pop
testb
push
cmp
scas
pop
je
xchg
push
and
mov
fiaddl
cmp
dec
loop
xchg
pop
pusha
push
out
jmp
mov
fldl
ficoml
dec
mov
lock
in
and
test
in
mov
cmc
cmp
mov
pop
mov
pop
inc
lea
lret
push
decl
out
xorl
pop
int3
in
inc
add
jae
gs
loopne
mov
push
jnp
lcall
sbbb
push
mov
push
dec
push
mov
dec
outsl
add
add
pusha
mov
xchg
mov
and
mov
jbe
sbb
adc
imul
scas
jns
jns
lcall
push
fistl
jo
push
inc
dec
test
repz
adc
sbb
test
or
mov
lcall
sub
xor
adc
or
lods
arpl
sbb
jb
and
sti
mov
inc
cmp
dec
mov
sbb
mov
push
fwait
mov
js
xchg
xchg
shrl
adc
add
push
lods
lods
or
test
cld
test
cld
lods
jecxz
dec
loope
xchg
bound
imul
cltd
add
mov
jl
jne
xor
push
mov
sarb
adc
dec
xor
fmuls
int3
jno
ret
insl
xchg
andb
faddl
out
popf
fwait
lds
pop
popa
xlat
and
mov
pop
pop
fcmovne
add
and
insl
pushf
outsl
negl
mov
cmp
push
mov
and
xchg
fstpt
fidivrl
or
mov
cwtl
xchg
pop
cmc
jg
mov
out
and
jae
mov
push
out
ljmp
jecxz
aaa
dec
and
faddl
fmull
sub
pop
lods
test
push
jne
imul
loope
mov
add
pop
je
dec
daa
mov
aas
cwtl
fcomps
jb
aam
push
fidivs
sub
pop
mov
outsb
loope
mov
mov
fsubs
mov
das
insl
adc
cwtl
sbb
dec
and
int3
loop
mov
aam
fbstp
push
in
dec
mov
nop
test
sbb
faddl
dec
addl
adc
or
mov
sub
sub
mov
cmp
stos
das
mov
into
outsb
pop
sbb
bnd
inc
or
xchg
test
mov
addr16
xchg
push
sbbb
adc
or
and
aas
aam
xor
inc
adc
daa
pop
or
push
movsl
xlat
test
mov
test
and
jns
push
mov
fisubs
stos
mov
out
lods
mov
ret
xchg
addr16
pop
out
push
jmp
outsb
dec
mov
ret
jmp
bound
inc
outsb
filds
xor
repz
lcall
loope
xor
sbb
shr
adc
insb
pusha
push
sub
rclb
or
shlb
cvtdq2ps
inc
jp
xor
lcall
fimull
insb
inc
inc
out
cmp
add
in
add
cmp
fstpl
push
ds
addr16
push
das
and
rcrl
das
mov
cmpsb
adc
nop
sub
int3
inc
lods
js
jl
fildll
cltd
pusha
and
dec
ja
iret
aaa
fiaddl
fdivrl
lock
addr16
mov
negl
popl
mov
out
pop
int
lret
aam
mov
in
pop
aas
sub
xchg
mov
ljmp
push
fwait
jae
adc
aam
cmp
cltd
xor
adc
mov
inc
nop
mulps
jne
sub
sarb
sbb
mov
pop
js
lock
or
dec
and
cltd
jl
lock
ss
enter
mov
cli
repnz
jb
xchg
cmp
pop
push
aas
inc
in
rclb
jnp
in
lea
sbb
and
sbb
into
jbe
sub
mov
xorl
and
push
xchg
rorl
sbb
cmp
vmulsd
jmp
xchg
orb
popf
jl
mov
fs
mov
xorb
mov
aaa
imul
sub
add
fsubl
movsl
or
test
mov
dec
mov
pop
ret
jge
xor
in
out
mov
inc
nop
xchg
rcrb
jecxz
pop
mov
aam
loopne
inc
pop
orl
fs
js
jns
mov
inc
cwtl
jb
mov
push
frstpm(287
mov
mov
or
cltd
add
out
push
jg
xor
inc
cld
and
xchg
mov
fsubs
sub
cmp
mov
jecxz
repz
loopne
aad
movsb
sbb
call
mov
mov
test
xorb
stc
jnp
mov
repnz
add
add
in
add
mov
leave
aaa
or
ficoml
adc
in
es
pop
es
into
pop
cld
rolb
mov
xchg
mov
shrl
movsb
roll
push
call
xor
stc
sbb
mov
aas
jo
pop
jo
scas
cmp
mov
jne
in
daa
xor
mov
mov
jmp
sbb
outsb
fcoml
andl
sar
movsl
lods
cs
cmp
repnz
xchg
inc
test
push
xchg
insl
in
loop
xchg
mov
xor
mov
lds
lock
test
rep
sbb
outsl
push
pop
and
movsb
loope
or
jb
or
xchg
fdivrs
jne
clc
je
daa
and
addb
push
cld
in
addb
mov
arpl
and
imul
mov
loop
scas
paddq
mov
popw
daa
sbb
inc
jl
mov
jmp
jmp
cmp
jmp
ja
into
mov
jo
sti
sub
push
jo
push
rol
in
cmc
push
mov
setge
push
shr
fidivs
movsl
jp
loope
pop
bswap
out
imul
loope
xchg
jo
push
cmpsb
dec
movsb
je
loop
inc
dec
imul
inc
or
ret
fstp
movsl
inc
dec
addl
xchg
pop
jno
bound
pop
dec
mov
fadd
mov
cltd
out
in
dec
lret
leave
fnsave
repnz
sbb
jbe
mov
pop
jne
call
rclb
push
mov
pop
cmc
cmp
clc
out
andl
mulb
dec
sub
add
mov
ljmp
pop
or
subl
test
popf
bound
and
sbb
push
aam
lret
adc
add
mov
stos
aad
xlat
dec
push
and
leave
loope
adc
mov
cmp
pop
fwait
std
stc
leave
je
mov
dec
or
push
and
test
mov
movsb
lods
movb
mov
xchg
push
ljmp
and
addb
dec
adc
loope
or
orps
push
pop
es
in
mov
cmp
adc
scas
sub
fcoms
or
sbb
test
bound
mov
push
adc
mov
cli
imul
and
aaa
ret
out
fisttpl
bound
int
lods
fistl
test
orl
adc
xchg
mov
sbb
mov
mov
es
cmp
jns
std
xor
arpl
xlat
subl
insl
or
movsl
iret
mov
movsb
adc
jle
sub
fs
ds
pop
sti
sbb
bound
dec
cld
cmp
das
in
leave
sbb
mov
sbb
rcrl
adc
and
in
push
xchg
shrb
sub
shll
ljmp
adc
movsl
insb
dec
push
inc
mov
test
outsb
or
aaa
pop
movsb
mov
lock
mov
push
pop
xor
and
xchg
mov
test
mov
fbld
push
mov
add
mov
js
leave
jp
in
pushf
adc
loopne
cmc
jge
push
pop
outsb
daa
je
cltd
jecxz
jno
lcall
fs
mov
jb
mov
ret
jecxz
pop
rclb
in
jb
mov
xchg
mov
jnp
aas
adc
outsb
mov
mull
inc
lret
mov
rcrb
xchg
ret
or
flds
movsb
push
adc
icebp
out
iret
loopne
cmpsl
push
stc
xor
out
mov
lret
stos
xor
inc
sbb
jmp
dec
lret
popf
and
or
push
dec
inc
je
mov
pop
cld
je
rsm
cmp
icebp
into
cli
repnz
mov
lods
or
sar
dec
icebp
mov
jge
cmpsl
inc
adc
and
mov
in
push
int
mov
mov
inc
and
xchg
push
out
or
adc
cmp
es
shrb
push
adc
or
lods
psubusb
jne
js
stos
aaa
test
mov
aad
imul
pop
inc
or
std
inc
addb
cli
sub
mov
mov
lods
incb
jg
int3
push
loop
jns
jno
bound
adc
push
add
mov
pop
pop
dec
repnz
repnz
cmp
fists
rolb
mov
xchg
xor
mov
test
mov
sub
lahf
jae
aad
lock
add
or
mov
int
xor
ror
mov
cwtl
int
hlt
ret
jae
xchg
dec
cwtl
pop
cltd
cwtl
mov
and
mov
xchg
lret
mov
jo
inc
icebp
cmp
mov
mov
add
rolb
push
xchg
xor
scas
push
ss
xchg
adc
xchg
rol
imul
test
push
or
jl
mov
mov
sbb
pop
dec
rorl
mov
leave
adc
jmp
mov
nop
or
xchg
and
shrl
pop
int3
xchg
adc
sti
jge
dec
fisubs
push
fidivl
mov
mov
outsb
sbb
cmpl
lods
xchg
pop
mov
addr16
ds
or
lock
jl
pusha
xchg
xor
int3
mov
iret
jae
cmp
mov
sbb
mov
mov
out
pop
lock
into
xchg
push
jbe
fs
lahf
in
mov
ret
loop
enter
fwait
cs
mov
mov
mov
inc
mov
pop
cmp
adc
xlat
fisttpll
lea
pop
rorb
cmp
es
fiadds
mov
shr
pop
rorb
jb
idivl
pusha
mov
fadd
or
xor
fs
leave
das
jecxz
inc
mov
push
out
jl
call
adcl
lods
in
sbb
lahf
gs
pop
xchg
ja
ss
clc
fsubr
fwait
mov
xchg
mov
loop
sub
jle
jae
sub
cltd
fistpl
ja
mov
add
push
out
jp
sub
leave
or
push
mov
jbe
repz
mov
jns
jp
out
sbb
cld
mov
in
xor
add
out
out
push
ret
mov
fimuls
dec
lods
dec
xor
leave
jge
sbb
fwait
std
sbb
lea
mov
insl
das
and
or
push
sti
sub
jl
outsb
sbb
bnd
in
outsl
cs
mov
lods
add
lret
push
xchg
imulb
mov
imul
sahf
pop
xchg
and
or
mov
cmpsb
mov
xor
jae
in
test
mov
xchg
jbe
ja
fisubrl
and
stos
sbb
inc
pop
or
test
das
cmpsl
sbb
xchg
mov
repnz
or
icebp
aad
sti
push
xor
pushf
insl
pop
xchg
xor
sub
lcall
mov
mov
shlb
shll
sbb
loope
xchg
mov
cmp
add
ret
in
adc
mov
test
fs
repz
xor
test
and
xchg
dec
aad
xor
mov
jno
ja
rolb
test
in
aaa
push
dec
inc
mov
or
adc
xor
inc
or
cli
mov
adc
repz
sbb
insl
fwait
ret
dec
in
cmp
in
ja
inc
imul
cmpsl
and
inc
test
ljmp
int
cmpsl
add
xor
mov
push
mov
mov
mov
mov
loop
sub
out
mov
cmp
rcr
loope
mov
jnp
jns
xchg
xlat
jecxz
mov
sub
xlat
aam
fcomip
adc
outsb
add
inc
xor
fildl
dec
inc
adc
or
xor
les
stos
dec
add
push
imull
xchg
fcoms
outsl
xchg
sbb
test
jp
dec
fstl
mov
mov
fisubrl
hlt
aam
jns
add
pushf
cmp
test
pushf
popa
sbbl
inc
sub
leave
cmpsl
test
pop
xor
mov
cli
bound
enter
jbe
aas
dec
add
add
jo
pop
in
dec
pop
dec
in
push
cmp
enter
call
das
imul
lcall
pop
clc
mov
cmpsl
pop
cltd
je
push
cmpsl
clc
lret
fdivp
sbb
adc
fadd
sub
fistpl
cmp
hlt
push
xlat
outsb
lods
stos
xchg
imul
lret
fstl
in
rorb
cmc
imul
andl
lea
jmp
fistl
pop
and
mov
mov
dec
into
out
imul
cmp
add
mov
repnz
xchg
add
lods
loopne
inc
bound
mov
mov
das
add
gs
shl
andl
fdivrs
mov
inc
and
mov
arpl
mov
fidivl
loope
jp
dec
mov
fldenv
jge
lods
mov
xchg
sub
fstps
shll
add
xchg
mov
push
xchg
cld
pop
stc
and
scas
test
fsubl
pop
stc
adc
and
push
push
lods
daa
mov
lret
jb
dec
cmp
push
mov
ret
iret
mov
cmp
cmpb
movsb
leave
shr
data16
in
mov
jo
test
icebp
pop
sar
test
pop
push
cmpsb
mov
int
ja
into
jne
add
test
adc
lea
jle
add
shll
jecxz,pt
cld
mov
jmp
pop
leave
stos
out
adc
sbb
xchg
jmp
arpl
adc
sbb
jecxz
adc
jl
stos
sbb
pop
jae
ss
inc
add
mov
sub
pop
xchg
push
sub
mov
scas
mov
pop
pop
jae
filds
xor
pusha
movsl
xchg
lods
arpl
aaa
test
sub
cmp
inc
push
pop
mov
fidivrs
and
call
pop
js
pop
mov
aam
stos
ljmp
cmp
dec
nop
repnz
fstl
nop
hlt
mov
sub
jo
add
pop
sub
and
aad
mov
dec
scas
mov
xchg
fwait
decb
jl
int
rcrb
nop
push
cld
out
jno
fs
hlt
clc
jle
out
xchg
es
iret
rolb
mov
cmp
mov
pop
scas
mov
in
mov
inc
fwait
arpl
dec
sub
clc
dec
in
add
inc
or
xchg
dec
inc
pop
push
sub
outsb
outsb
lock
enter
les
ds
bound
mov
test
dec
popf
int3
inc
add
out
ret
xlat
cld
das
push
sub
lock
enter
xor
pop
lds
pop
rcll
inc
outsb
divl
imul
aad
mov
movsl
les
out
mov
cmp
loopne
aad
cld
orb
inc
mov
mov
cmp
fidivrl
mov
adc
adc
int
scas
iret
pop
rcrb
mov
loop
mov
adc
mov
mov
loop
pop
ja
sub
or
data16
mov
test
add
or
push
gs
les
jo
cmpl
inc
mov
mov
lock
rol
push
fistpl
stc
pop
xchg
rorl
push
cwtl
jb
mov
sbbb
inc
xchg
inc
aas
push
jl
mov
repnz
inc
fcmovnu
dec
mov
cmc
aam
loope
cmp
inc
jmp
jo
test
sbb
xchg
aaa
xchg
dec
filds
hlt
or
xor
repnz
and
push
ja
scas
addr16
xor
mov
incb
mov
adc
outsl
push
sbb
push
fisttpll
mov
loopne
cmp
and
xlat
lock
push
mov
out
dec
mov
aad
mov
pusha
xor
movsb
add
insb
pop
cmp
and
pop
filds
mov
jb
mov
sbbb
out
xchg
adc
imul
lock
bound
sub
jmp
pop
inc
mov
testl
and
sarb
add
inc
mov
aaa
adc
xor
or
xor
jne
xchg
loope
jg
mov
cmp
jmp
adcl
scas
mov
inc
test
lea
lods
ja
cmp
pop
xchg
cmpb
adc
in
jmp
xor
shlb
mov
dec
adc
das
dec
pop
or
adc
or
fsub
dec
cmp
xchg
sbb
xor
popa
push
iret
fs
repnz
fsts
shrb
icebp
xor
inc
cmpb
out
loopne
in
sbb
cmp
loopne
xor
mov
sbb
outsb
mov
leave
fwait
rcr
enter
cmpsl
dec
push
ret
lret
sahf
lock
adc
sub
sub
xor
cld
jae
sub
push
std
bound
mov
or
adc
cltd
mov
and
mov
shr
inc
mov
movsb
adc
insb
or
fcompl
lods
push
out
jl
repz
aam
jo
pushf
frstor
push
dec
es
stos
sbb
pusha
cmp
std
adc
leave
xchg
xchg
sbb
fwait
addl
js
xor
dec
mov
xor
mov
ss
dec
aaa
popf
lea
adc
scas
mov
cmp
sahf
int
jg
xchg
hlt
and
lock
push
xor
movsb
outsb
mov
popa
lds
xchg
aas
ret
movsb
je
xchg
and
mov
in
je
bound
fadds
mov
sbb
inc
dec
jne
into
xor
pop
in
push
adc
sbb
test
repnz
push
xor
cltd
enter
movsl
jge
xchg
sbb
mov
and
lahf
xor
into
mov
mov
fs
pop
jmp
xor
xchg
fs
fucomi
out
inc
xor
push
xor
cmp
popa
lods
es
sbb
mov
pop
rcrl
gs
int3
mov
add
inc
or
out
ret
outsl
adcl
or
or
push
mov
rcll
adc
es
out
sbb
add
sbb
test
jno
nop
jmp
rorb
pop
mov
stos
mov
jb
inc
fnstenv
mov
sbb
leave
adc
outsl
push
mov
jno
xchg
arpl
pop
sbb
addr16
push
mov
testl
scas
push
sbb
add
lods
cmp
lea
inc
cs
je
mov
mov
lret
movsl
iret
add
fs
in
imul
jae
xchg
sahf
sbb
cmc
fmull
jno
imul
xor
pop
lahf
call
sub
mov
adc
daa
addr16
shr
and
fs
mov
mov
and
pop
push
push
lock
test
push
push
outsb
pushl
test
test
mov
fidivrs
push
sbb
repnz
push
xor
jae
fcmovnbe
push
xorb
jnp
mov
psadbw
push
lea
popa
shll
into
jl
and
cmpb
sbb
or
mov
loope
les
dec
pop
xor
mov
ja
dec
xchg
push
in
inc
test
jecxz
ljmp
clc
out
sbb
mov
ds
sbb
sbb
je
cmpsl
xchg
fnstsw
push
cmp
ret
push
js
cmpsl
sub
loope
out
pop
loopne
pop
and
and
push
xor
mov
sti
or
out
sbb
das
push
xchg
push
es
and
outsl
bound
loop
lea
xchg
sub
jns
mov
shll
addb
popf
push
push
pop
imul
call
or
jp
mov
mov
cmp
in
int
mov
call
gs
dec
ret
aam
sub
fwait
mov
mov
jle
rclb
ret
sub
xchg
cmpsl
dec
xchg
jp
clc
xchg
mov
xchg
jnp
sbb
stos
lock
sbb
in
mov
cmpsb
mov
insl
sub
cmp
xor
inc
inc
shll
adc
out
mov
pop
inc
cmc
mov
pop
dec
addb
test
xchg
adc
inc
cmp
mov
cs
jb
pop
insb
stos
adc
pop
xchg
sbb
sbb
push
push
xchg
jg
and
push
fsts
cmp
xlat
sahf
in
or
jecxz
ret
stos
or
adcl
js
dec
dec
mov
fnstenv
clc
xchg
mov
lret
fisttps
jg
inc
loope
push
sbb
mov
mov
inc
push
clc
mov
scas
xor
dec
push
out
lahf
addr16
sub
and
leave
int3
sub
adc
mov
push
scas
hlt
add
stos
xchg
daa
and
jp
cmp
xor
aad
rclb
aad
rol
scas
ret
sub
decl
jo
idivl
mov
cmp
jg
xor
inc
test
jecxz
cmp
add
or
es
movsb
mov
mov
dec
add
mov
sub
mov
or
jne
push
sub
movsb
mov
xor
stos
xchg
xchg
pop
dec
cli
test
jno
dec
xorb
outsl
cmp
dec
jmp
lock
push
in
test
mov
pop
repnz
pop
int3
mov
ficoml
ret
lret
pushf
aad
xchg
mov
in
addr16
mov
adc
cmpsl
sub
jge
sbb
shll
add
into
andl
pop
mov
lahf
call
mov
popa
call
jnp
cmp
stc
mov
icebp
lret
mov
or
mov
pop
leave
push
in
divl
dec
jne
add
xchg
mov
cmp
adcb
sub
addr16
add
and
or
sub
dec
pop
jo
xor
sub
cmp
fiaddl
adc
mov
stos
loope
adc
pop
jnp
jne
into
jecxz
cltd
pop
cld
pop
push
loop
cmc
mov
mov
mov
dec
push
mov
push
or
mov
andb
js
faddl
or
jns
jne
enter
mov
movsl
lcall
and
icebp
mov
mov
or
movsl
fsubrl
les
push
xlat
adc
sub
in
subl
xchg
js
adc
scas
imul
outsb
mov
push
dec
pop
hlt
push
push
lcall
and
add
aam
push
sbbl
loope
mov
inc
movsl
push
pushf
sub
inc
lock
mov
in
xchg
jge
jnp
mov
mov
lock
jecxz
add
pop
adc
xor
cli
xchg
mov
adc
fistl
xlat
dec
pop
cwtl
cmpsl
addl
cmpsb
jne
xor
rcll
cli
mulb
xor
bound
push
cmpsb
packssdw
out
bound
mov
stos
mov
jecxz
iret
stc
dec
test
push
aam
imul
mov
add
out
inc
imulb
xor
dec
add
adc
mov
scas
aad
add
xor
mov
mov
jl
mov
xor
out
mov
dec
mov
jmp
ljmp
or
stos
decl
lss
scas
shrl
ds
ljmp
xor
push
mov
sub
inc
jns
sbb
int
repnz
scas
decl
insl
gs
repz
or
sbb
mov
hlt
sbb
cmp
cmp
dec
dec
jg
add
xor
jmp
aas
xor
movsb
rorl
mov
repz
dec
xchg
inc
cmpsb
xor
mov
lea
mov
mov
outsl
dec
push
pop
and
es
cli
mov
enter
adcb
into
insl
jb
push
push
dec
repz
dec
insb
out
inc
dec
xchg
loopne
in
rorl
push
jae
mov
negl
ja
fwait
push
cmpsl
mov
jp
adc
xor
pushf
gs
dec
add
outsl
adc
ss
jmp
pop
lea
ss
push
int
jne
shrb
iret
pop
loope
jge
xchg
adc
inc
mov
out
lcall
mov
or
pop
add
push
cmpsb
sub
bound
icebp
divb
and
xchg
dec
sahf
xor
lds
test
mov
xor
scas
mov
jne
adc
xchg
cld
and
cmc
sahf
int3
push
out
jecxz
mov
cmp
fisttps
push
push
les
mov
mov
in
cs
mov
insb
mov
or
push
push
jbe
cs
sub
repnz
cmp
and
mov
mov
jne
scas
dec
daa
nop
ds
pop
aas
bnd
popa
xlat
loopne
jle
clc
xor
mov
cmp
popa
adcl
add
cltd
cmp
xchg
sub
pop
xchg
pusha
mov
bound
out
sbb
mov
jecxz
sbb
rolb
or
mov
inc
movntps
dec
fmull
out
bound
call
inc
cwtl
fists
pop
and
push
and
adc
jnp
lods
cwtl
fsub
mov
xchg
jb
popa
cwtl
push
cs
xchg
adc
mov
dec
jmp
repnz
push
imul
adc
mov
stos
add
mov
inc
inc
jp
subl
cmp
dec
adc
push
jb
pop
mov
cmpsl
inc
add
or
ffree
lret
fdivrp
mov
xchg
addr16
call
hlt
outsl
sarb
mov
gs
outsb
aad
mov
lahf
xchg
movsl
and
cwtl
cmp
cmp
clc
nop
aam
mov
mov
or
lods
imul
jecxz
inc
lcall
cmp
push
cmp
pop
or
mov
adc
add
xchg
or
add
add
xor
xor
cmp
shlb
jg
mov
inc
jo
icebp
mov
xchg
sub
cwtl
mov
push
les
cwtl
mov
jne
fiadds
fnstcw
push
mov
ds
push
sub
pop
xor
ds
jnp
sub
bound
mov
pushf
cmp
int
cmpsb
and
dec
repz
insb
shrl
adc
pop
inc
sub
in
ss
push
jae
sub
sub
fnstenv
clc
jns
fucomi
adc
and
dec
mov
jbe
or
add
shrl
iret
or
mov
sub
xor
jle
mov
inc
aaa
jge
mov
scas
mov
push
insl
and
mov
push
loopne
dec
call
imul
sbbl
outsb
enter
jmp
cmpsb
and
rcrl
inc
cmp
sbb
pop
mov
insb
ds
pop
sub
repz
jno
rcrl
in
fisubl
ficoms
icebp
int
movl
test
int3
rcll
outsl
daa
int
pop
xchg
lcall
sbb
cwtl
add
bound
lret
push
pop
sub
hlt
cmpsb
pushf
push
insb
sysenter
sbb
xchg
lcall
incb
and
add
es
mov
push
loopne
mov
sub
fbld
jb
sti
cmpsl
cli
xlat
flds
dec
loopne
fiadds
test
fwait
mov
dec
fwait
dec
call
jecxz
cmp
and
add
test
cmp
push
cmp
loop
dec
popf
lahf
in
pop
ljmp
mov
xchg
les
ds
in
std
jnp
inc
ficoms
cwtl
cmc
cmp
ja
mov
cli
dec
xor
lret
sti
xlat
pop
rcrb
inc
lret
ret
sbb
repnz
fsubrl
inc
ljmp
mov
push
jo
mov
into
mov
sbb
xchg
sub
sub
jle
fsubrl
jmp
xchg
les
cltd
dec
adc
jecxz
cmp
in
xchg
cmp
pop
mov
xor
jae
sub
pop
and
repz
mov
dec
jne
in
dec
fcomps
movsb
adc
dec
mov
repnz
int3
movsb
mov
imul
or
add
fdivl
xor
xchg
pop
push
mov
stos
pushf
and
arpl
xorl
gs
or
push
lcall
loop
mull
cmp
movsl
xor
popf
push
sbb
cmpsb
in
mov
mov
and
and
clc
imul
cmp
dec
sti
add
cmp
lea
lret
push
pop
sti
inc
mov
push
shl
scas
mov
sub
shrl
loop
in
mov
mov
mov
mov
mov
mov
jae
cmp
inc
mov
insl
xchg
mov
push
push
xchg
cmc
sbbb
jnp
or
lret
or
in
pop
movsl
sub
lds
stos
cmp
addl
jb
adc
mov
rclb
movsl
cmp
pop
mov
mov
nop
mov
std
je
mov
inc
enter
mov
push
shr
orl
cli
jle
dec
xor
cmpl
inc
and
loope
fs
je
mov
jbe
or
loopne
aas
pop
icebp
sub
push
sub
lret
pop
sub
sub
mov
sahf
sub
aad
call
lret
pop
sub
or
jns
movsb
xchg
or
insl
pop
and
sbb
call
add
jo
icebp
enter
loopne
jle
repnz
aaa
loope,pn
push
test
es
out
mov
jns
mov
mov
push
jg
stos
push
lods
dec
leave
add
ret
cmp
fisttpll
xor
cmp
imul
jo
adc
pop
inc
inc
jns
outsl
sub
lcall
mov
outsb
mov
aad
sarl
or
shrb
sbb
and
test
in
push
movsl
xor
push
xor
bound
jp
jp
adc
adc
push
insb
lahf
lds
cld
movsb
cli
pop
push
xor
inc
sbb
or
pop
inc
cltd
out
adc
sub
lret
sbb
mov
mov
int3
pop
insl
dec
iret
push
pop
push
push
inc
pushf
lret
hlt
inc
xor
dec
les
xor
sub
jb
sub
out
data16
inc
leave
xor
iret
pop
jge
mov
rolb
in
xchg
dec
mov
dec
xor
push
loope
nop
cmpsb
imul
sub
push
fimuls
adc
add
jno
jmp
sub
aas
cmp
pop
decl
aaa
jb
loope
cwtl
sub
push
pop
out
pusha
or
lods
fimull
lods
insl
cwtl
xor
in
pop
dec
or
incb
daa
iret
pusha
cltd
mov
scas
lea
mov
mov
and
push
loope
dec
inc
loop
pop
out
je
cmp
sub
jge
cmp
bound
sarb
loopne
jne
or
jb
stos
out
pop
pop
cmp
sbb
sahf
stc
inc
movsb
dec
or
inc
dec
sbb
sti
mov
decb
mov
cs
jno
xchg
xchg
jne
jnp
sbb
add
shlb
jmp
cmpsb
sub
repnz
mov
or
out
sbb
add
inc
clc
push
shufps
inc
or
orb
xlat
out
and
push
es
lock
mov
or
jns
inc
ss
cmc
into
aad
pop
xor
jbe
sub
jl
xchg
leave
sbb
sbb
xor
lods
addr16
push
aad
add
clc
das
mov
loope
movsl
fs
push
into
jnp
sub
add
dec
mov
lods
jae
insl
pop
fldenv
mov
jmp
dec
mov
sub
push
jne
mov
dec
and
loop
cmp
sahf
test
std
or
sahf
jl
test
test
std
je
in
les
mov
aad
jl
mov
lret
in
cmpb
pop
mov
mov
xchg
push
jge
mov
leave
mov
std
jle
negb
jo
cmp
jb
pop
daa
cs
pop
fstpl
fucomip
xchg
shlb
inc
fistpl
and
add
jge
xchg
ljmp
fldt
mov
xchg
or
notb
dec
dec
mov
pushf
add
fs
jo
mov
sub
sbb
mov
or
out
push
jg
inc
mov
ret
imul
adc
sub
enter
hlt
or
arpl
and
hlt
cmp
inc
cmpsb
out
inc
jno
sti
lahf
dec
xchg
addr16
fsubrl
xchg
pop
jnp
push
lods
rorb
lods
sub
in
xchg
loopne
push
sbb
out
mov
pop
stos
ja
or
sub
rolb
jmp
out
xchg
int3
jg
add
outsb
dec
hlt
mov
xor
movsl
stos
sbb
lret
and
loope
cmc
leave
test
sti
push
repnz
out
sbb
pop
mov
addr16
xchg
cld
addb
popa
inc
sub
and
mulb
loopne
stc
xchg
shrl
adc
sbb
mov
and
rsm
push
cmpsb
jp
mov
fsubrs
sbb
pop
sub
ret
adc
mov
mov
mov
js
iret
in
or
cmp
mov
in
mov
sub
cld
mov
mov
jg
add
mov
pop
rcl
les
std
aam
jbe
push
je
movlps
jne
sub
jae
xor
aad
int3
sarl
leave
cld
test
or
cmp
xor
mov
movsb
repz
and
cltd
imul
scas
push
das
cltd
push
mov
nop
cmc
sub
sub
cltd
push
sahf
push
push
dec
mov
mov
imul
aaa
ljmp
rcll
aam
loope
xchg
mov
and
xchg
mov
sti
out
pusha
cmpsb
enter
in
jecxz
xor
xchg
adc
mov
pop
or
adc
mov
stos
icebp
mov
xor
jns
sub
stc
push
in
mov
xlat
fbstp
jg
sti
shlb
push
cmc
pop
dec
cmp
pop
adc
jecxz
jge
add
insl
or
lahf
cltd
or
out
data16
push
test
jp
into
sub
inc
xor
cwtl
in
and
sub
cmp
lret
or
in
les
pop
pushf
div
xorl
test
pop
xor
dec
sbb
jmp
cmc
shl
js
lods
adc
push
in
mov
push
push
adc
scas
aaa
outsl
hlt
repnz
imul
mov
mov
sub
push
push
inc
loopne
aaa
pushf
cmp
pop
dec
cld
pop
fimuls
ss
push
xor
pop
call
xor
jp
mov
jne
test
sti
and
ljmp
pop
inc
inc
push
fidivl
ss
sbb
and
fs
mov
dec
rorb
into
mov
mov
dec
imul
mov
sub
pop
mov
inc
and
push
rorl
js
pop
pushl
mov
adc
cmc
dec
into
mov
push
mov
lds
or
out
int
or
xchg
mov
cmp
sub
out
imul
les
data16
cmp
jl
lds
lcall
xchg
inc
fsubrl
cmp
sarl
je
test
inc
out
out
inc
dec
lock
inc
pop
dec
jnp
dec
jns
cmp
xor
cli
pop
push
sbb
push
dec
out
push
dec
leave
das
sub
mov
lods
leave
lock
mov
and
sub
rcrl
xorb
add
adc
push
out
movsb
scas
cmp
adc
mov
int
jl
ficompl
mov
mov
in
mov
pusha
clc
and
cmp
inc
adc
lods
cmpsb
sbb
sub
pop
push
fsts
es
fdivrs
or
ljmp
std
jecxz
lea
cwtl
dec
insl
jbe
hlt
outsl
push
les
cmp
cmp
adc
shll
ja
sahf
xor
xor
dec
dec
mov
pushf
lds
inc
rcll
outsl
fcomps
lea
out
pop
fwait
into
pop
mov
movsl
add
call
lcall
out
shlb
cmc
jnp
jbe
or
inc
jb
rorl
mov
pop
jns
lds
mov
out
lahf
test
jecxz
mov
lods
adc
lods
lea
lcall
dec
mov
xchg
cmp
inc
push
mulb
xchg
nop
or
add
jge
cmp
mov
testb
leave
adc
cmp
adc
xchg
lret
jb
ljmp
xchg
push
fcoml
lret
and
in
es
push
sarl
push
or
out
fdivrl
sbb
add
jnp
loope
mov
insb
je
lods
fwait
pop
xor
test
mov
fs
add
leave
lahf
outsl
fstl
lods
or
fnstsw
negb
xor
xor
outsl
icebp
imul
testb
or
xchg
inc
js
loop
mov
mov
pop
mov
fwait
pop
call
les
xor
bound
sub
shll
mov
enter
scas
loopw
xchg
dec
jmp
in
push
je
mov
xor
fs
mov
push
sbb
ret
repz
mov
std
and
bts
push
xor
out
mov
shlb
jp
arpl
sti
cmpsl
arpl
lods
cmp
jns
add
jb
int
js
mov
daa
sbb
sub
into
dec
cmc
fwait
sbb
lds
scas
add
jl
cli
xor
ljmp
jmp
enter
pushf
stos
ret
aas
xchg
adc
xchg
lock
add
into
sti
sbb
stc
rcl
shll
sub
push
clc
les
mov
movsl
mov
mov
xchg
mov
aam
inc
iret
movsl
sbb
adc
pop
mov
or
lahf
sub
jge
cmp
leave
sub
test
add
in
fiaddl
leave
clc
sbb
cmp
daa
lret
lock
outsl
aad
in
in
stos
roll
dec
sbb
mov
fistpll
mov
mov
mov
or
shrl
xchg
insb
pop
push
jg
hlt
xchg
or
mov
xor
jne
cld
jmp
ljmp
jp
test
dec
pushf
adc
test
ds
pushf
int3
dec
push
and
insb
inc
mov
add
sbb
leave
rorb
xlat
fwait
jle
mov
and
or
int3
testl
jo
repz
jg
and
fistpl
mov
push
adc
lock
push
cmpsl
lret
movsb
xor
sub
outsl
cs
adc
add
or
fwait
push
xchg
pop
in
dec
dec
and
ss
fxch
icebp
aad
xchg
fldenv
push
mov
js
jle
xor
jne
pop
jb
push
mov
xchg
xor
in
jl
les
scas
inc
popl
in
or
xchg
dec
sbb
inc
xchg
shrl
inc
std
dec
mov
movsb
and
ljmp
imul
xchg
mov
orl
sbb
sub
addr16
push
push
cmp
push
xchg
adc
jo
aaa
and
and
das
xor
inc
sbb
fs
or
imul
movsl
cs
inc
popf
stos
inc
inc
sbb
jecxz
popa
or
rcrl
jnp
jge
icebp
jecxz
mov
push
push
mov
insb
ficompl
data16
add
push
push
mov
movsb
repz
and
mov
cmp
xchg
fwait
int
sbb
fldt
mov
jl
in
jae
and
repnz
cmpsl
ret
cmp
add
dec
pop
mov
addr16
cmp
bnd
push
mov
pop
push
popf
cmp
std
xor
insb
dec
jne
cmp
roll
jnp
add
inc
lock
aad
fidivl
or
push
movsb
mov
mov
xor
lods
push
icebp
push
mov
sub
leave
mov
out
aam
mov
dec
rcll
and
in
pop
imul
fwait
nop
stc
das
cld
pop
jb
mov
fdivrl
dec
inc
and
adc
in
out
aam
mov
jle
adc
push
pop
lcall
loopne,pn
bound
mov
lcall
in
push
mov
pop
pop
les
dec
out
mov
lret
loopne,pn
push
fwait
scas
xor
or
dec
push
inc
push
mov
jae
std
pusha
imul
loop
addb
ror
and
fcmovb
iret
cmpl
rorb
adc
push
xlat
add
lds
sub
adc
dec
sub
mov
das
fldt
push
out
dec
les
mov
mov
pop
testb
mov
test
movl
or
or
inc
fucom
std
xor
test
repz
fdivrs
in
xor
lret
pop
mov
idiv
mov
pop
pop
mov
repnz
inc
jae
mov
scas
pop
filds
pop
mov
cmp
jo
inc
imul
and
scas
lods
loop
xchg
sbb
dec
jno
ds
mov
dec
lods
xor
stc
xchg
cmpsb
or
nop
fs
ficoml
fdiv
inc
xchg
xchg
xor
pusha
repz
mov
dec
stos
mov
scas
jbe
xchg
jae
xchg
rolb
nop
mov
movsl
jno
in
in
fstpt
leave
cmp
aaa
and
popl
mov
pop
mov
rcll
jb
mov
adc
push
sbb
out
aaa
ja
mov
mov
jae
sbb
sbb
sbb
mov
orl
jge
sub
cwtl
xlat
push
scas
mov
sbb
cwtl
clc
mov
jp
cmp
mov
lock
ficoml
dec
xor
movsl
ja
push
mov
pop
bound
mov
sbb
movsb
inc
cmp
or
ds
mov
mov
lods
lods
out
ret
xchg
sub
add
push
sub
lds
sbb
push
cmpsl
mov
add
loop
arpl
lcall
repz
gs
cltd
mov
inc
pop
mov
imul
jns
push
leave
in
jbe
cmpsb
mov
and
inc
pop
test
test
xchg
xor
sub
pop
add
lahf
or
sub
insb
inc
stos
lods
xchg
int3
and
sub
and
orb
cmpsl
mov
insb
xor
movsb
inc
stc
sub
cmp
push
xchg
mov
enter
xor
data16
lods
loop
aam
or
adc
cwtl
out
mov
fwait
dec
shlb
aam
cmpsb
or
repz
push
jo
mov
aam
outsl
sahf
je
mov
adc
popf
mov
xchg
lods
testb
pushl
jp
cmp
pop
shl
imul
jo
pusha
add
mov
sub
or
mov
lcall
shlw
dec
sbb
rorl
ret
cmp
cwtl
jg
sbbl
jb
pusha
cmp
mov
lea
leave
fs
sbb
push
or
fwait
mov
mov
call
mov
imul
fldz
inc
inc
into
imul
aaa
divl
dec
aam
push
repz
pop
shll
sti
aad
jns
or
adc
mov
lahf
lsl
sub
jb
addr16
add
cmc
push
sub
inc
lahf
mov
cmp
ds
add
ja
add
xchg
add
jne
test
gs
out
xchg
or
lahf
cmp
ds
sub
sarb
mov
jle
test
mov
push
call
repnz
cmpsb
out
popf
clc
jl
int3
pop
pusha
inc
or
insl
popa
jmp
sbb
mov
dec
and
push
cltd
xchg
push
jp
testl
insl
cltd
in
sub
sub
adc
mov
loope
iret
cli
lods
gs
lods
mov
inc
rol
out
push
xchg
xchg
test
test
sub
call
and
xchg
add
out
push
dec
loop
xor
leave
sub
jo
dec
lret
out
cmpsl
cmp
aaa
pop
or
enter
jecxz
pusha
cmp
cmp
inc
pop
mov
jne
cld
dec
nop
out
inc
clc
shlb
aaa
into
outsb
inc
mov
xchg
xchg
lods
int
popf
mov
push
pop
xchg
add
dec
ds
jecxz
mov
cli
mov
push
mov
dec
fimull
fcmove
pop
mov
lcall
scas
jnp
ds
arpl
mov
sbb
xor
bound
jge
nop
push
adcb
fcoml
aad
adc
add
lret
clc
and
lcall
adc
pusha
loop
inc
lea
push
and
cmp
scas
aam
repnz
test
sbb
dec
out
dec
xchg
jecxz
add
sbb
jmp
xchg
es
outsb
rcll
jbe
xor
test
pop
push
push
dec
fnstenv
inc
cli
push
test
addr16
outsb
ja
xor
aam
dec
into
push
outsl
mov
push
lea
jae
arpl
mov
data16
add
mov
mov
ljmp
or
je
cld
cmpsl
fmul
and
jp
cld
push
les
sbb
dec
fstps
outsb
int
test
dec
outsb
pushf
repnz
mov
cmp
test
sbb
add
or
imul
sub
cmp
in
pop
test
and
mov
inc
inc
mov
dec
mov
scas
xchg
arpl
and
mov
lcall
jecxz
jp
int
in
sub
jne
loope
fisttps
fnstsw
sbb
ss
and
adc
mov
adc
lock
aas
std
or
adc
xchg
push
icebp
push
test
ds
mov
xchg
lahf
dec
cmp
mov
jb
sbb
sahf
int3
imul
out
sub
adc
or
and
lcall
or
and
shl
test
cmpsl
lret
ror
mov
bound
jecxz
movsb
sbb
arpl
push
je
adc
stc
sbb
fsubs
shl
push
jecxz
movsl
mov
icebp
cltd
pop
sahf
xor
pop
push
iret
sbb
xchg
jmp
xchg
stos
push
push
iret
push
xchg
leave
inc
inc
sbb
push
das
jmp
scas
or
and
xlat
test
in
jns
in
inc
mov
xchg
add
xor
adc
shll
outsb
fisttpl
mov
ret
sti
popf
mov
xor
push
adc
sbb
pusha
hlt
pusha
push
std
in
adc
dec
fdivrs
cmc
mov
push
xor
sub
pop
pop
cwtl
mov
lds
lock
mov
jl
lods
pop
xor
xchg
mov
mov
scas
mov
cmp
xchg
mov
loop
sub
clc
ror
xchg
je
mov
xor
scas
jno
mov
mov
cmp
aad
and
jp
insl
xor
in
fiadds
out
inc
rorl
push
stc
jecxz
es
icebp
loop
mov
jg
pop
push
es
bound
fistl
xor
mov
call
scas
insb
add
add
xchg
call
repnz
les
cmp
insb
inc
arpl
ret
repz
popa
mov
cmpsl
push
jns
push
repz
call
rorl
jnp
sbb
jb
mov
cli
jbe
adc
pusha
mov
pop
or
out
stos
dec
dec
gs
imul
and
mov
inc
enter
bound
add
pushf
xor
mov
mov
mov
in
jns
pop
mov
test
push
dec
scas
push
cmp
iret
sbb
cmp
inc
lret
xchg
xlat
outsb
loopne
aad
js
mov
jl
sub
rolb
xlat
out
mov
xchg
daa
cwtl
inc
sbb
jne
jbe
mov
jae
mov
push
shll
jne
and
and
add
bound
scas
stos
into
push
inc
sti
das
sbb
movntps
sti
out
cmpsb
lods
daa
movsl
lret
mov
sub
mov
movsl
out
lahf
xchg
call
out
push
ss
push
jbe
sbb
push
out
js
aaa
pop
push
xor
aaa
mov
jae
jge
jno
mov
les
push
sti
cwtl
jno
out
fcmovb
stc
shll
test
jo
add
mov
and
inc
sbb
mov
add
xchg
xor
add
insl
add
fistpll
mov
fdivrs
add
fnstcw
sub
push
mov
dec
inc
add
sub
sbb
dec
int3
push
cld
push
leave
test
or
insl
pop
add
int
cmpsb
mov
je
fs
push
jmp
mov
sbb
imul
mov
in
mov
sub
in
jnp
into
es
into
in
lods
int3
jg
jne
imul
or
add
sub
imul
loopne
sub
jno
call
fbstp
arpl
negl
ljmp
daa
pusha
inc
sub
adcl
adc
ss
mov
add
pop
cltd
inc
ror
in
cmc
leave
cmp
ret
cmp
jb
test
sub
inc
xor
stos
loop
dec
sub
push
in
or
pop
out
ljmp
inc
and
add
jl
sbb
sbb
inc
pop
adc
popa
jge
aad
subl
ret
scas
ret
jecxz
cmp
sbb
cmpsb
scas
hlt
pop
test
mov
xchg
sbbl
xor
hlt
out
jge
jp
bound
cmp
aas
rcrb
mov
add
stos
repnz
sub
lret
popa
pop
jne
xchg
cmp
add
push
dec
pop
int
int3
incb
jecxz
test
popf
out
push
out
mov
popf
sub
loope
sbb
mov
lods
mov
jnp
adc
jle
hlt
out
adc
imul
ret
das
subl
mov
push
sub
xchg
xor
aam
xor
xor
fnsave
push
cmpl
loope
outsb
popf
jecxz
xchg
adc
jb
add
dec
pop
jo
cltd
add
movsb
sub
es
lahf
sbb
pushl
xlat
jl
mov
xchg
cmp
sbb
mov
fs
add
rolb
sub
sbb
rcll
lods
jmp
jno
or
jb
mov
enter
jnp
lcall
jb
pop
sahf
mov
test
and
out
gs
cmp
negb
sti
push
imul
mov
or
lock
sbb
aad
xchg
outsb
dec
xor
sub
bound
sbb
push
je
mov
leave
dec
mov
addl
out
dec
insb
push
lret
mov
or
sbb
imul
and
xchg
mov
mov
incl
jge
insl
xchg
fsubp
and
aad
pop
in
cli
pop
adcb
cmp
dec
inc
les
mov
test
jg
jecxz
cmp
and
push
mov
sahf
aam
push
jg
mov
ds
jg
incl
mov
loopne
push
or
add
or
inc
imul
in
mov
outsl
adc
in
cmp
test
rsqrtps
imul
jns
push
xchg
cmp
jmp
sub
cmp
stos
mov
sub
jmp
push
pushf
xchg
lcall
int
bnd
movsl
loop
dec
push
pop
jbe
popf
fdivrl
out
cld
and
outsb
jl
test
das
dec
shlb
sbb
jmp
push
xchg
mov
cmp
rcr
xor
das
jp
mov
gs
sub
aam
mov
clc
mov
in
mov
lcall
push
adc
dec
adc
je
cwtl
xchg
xor
lahf
fidivrl
xor
andl
sub
push
sbbb
jns
or
jg
cmp
sbb
mov
cmc
push
je
test
mov
aam
mov
imul
xor
inc
pushf
xlat
xchg
repnz
in
outsb
mov
mov
nop
js
shl
push
pop
nop
mov
adc
inc
stc
iret
and
gs
jecxz
mov
and
test
add
fcomi
fldl
leavew
xor
insb
inc
cli
pop
add
iret
inc
lods
outsl
sub
insl
loop
arpl
mov
adc
sbb
imul
adc
movsb
push
das
es
enter
pop
popa
leave
push
lods
out
lds
std
sbbb
jle
mov
or
jnp
pop
mov
rcr
insl
and
lods
sub
cmp
sbb
loope
rcrb
jp
dec
stos
pop
loope
xchg
insl
inc
dec
xor
gs
fadd
faddl
push
sub
sub
sbb
ret
pop
adc
add
add
inc
in
or
fimuls
xchg
or
mov
mov
les
xchg
arpl
and
pop
je
mov
xchg
gs
push
movsl
hlt
pop
adc
sbb
sbb
xchg
lock
dec
inc
sbb
imul
repz
inc
xor
dec
mov
sbb
adc
xchg
dec
pop
dec
xchg
mov
push
pop
xchg
fstps
push
mov
lahf
loopne
icebp
dec
or
mov
push
adc
adc
gs
pop
or
out
push
push
ja
mov
xor
mov
mov
jecxz
inc
cmp
sbb
int3
ja
int
push
pop
jmp
jge
enter
cs
dec
mov
in
pop
inc
stc
in
adc
dec
add
fbstp
adc
inc
inc
cmpsb
fdivs
outsl
push
push
xchg
arpl
stos
clc
in
lock
cmp
jl
inc
loopne
das
inc
jmp
or
and
fldenv
xor
adc
int
lods
xchg
bound
and
and
mov
mov
sbb
sahf
inc
and
push
xchg
push
sub
ficoms
cmp
or
pop
in
fcmovne
mov
mov
pop
pop
add
add
push
cs
mov
lods
xchg
icebp
stc
testb
pop
je
add
mov
adc
mov
ljmp
pop
and
push
mov
sbb
mov
mov
push
push
add
add
cltd
pop
jmp
in
mov
aad
mov
push
aam
sub
add
pop
xor
mov
filds
adc
into
stos
ss
lret
or
stos
fsubl
jle
mov
add
sbb
addr16
xorl
xchg
pop
ret
cmp
pop
push
pushf
pop
and
rorb
sub
movsl
xchg
push
and
cld
loopne
mov
lea
or
gs
mov
inc
xchg
push
inc
xchg
push
add
xchg
inc
cli
sub
pusha
sbb
jne
repz
fdivl
out
push
or
xor
sahf
mov
pop
movsb
shr
ret
pop
lret
sbb
lret
adc
in
add
and
mov
stos
das
into
cmp
mov
push
mov
repnz
inc
dec
push
out
jno
psubb
sub
mov
inc
das
std
xchg
and
xchg
and
mov
ret
adc
out
mov
cwtl
call
sbb
xor
lods
push
push
cmc
lods
les
sub
and
xor
orl
and
sahf
mov
decl
popf
scas
mov
mov
aaa
shll
daa
sbb
pop
sarb
or
stc
rolb
inc
xor
push
mov
adc
and
mov
insl
xor
lds
ja
aam
fcoms
and
push
adc
adc
shlb
pop
push
dec
add
popa
push
mov
jne
daa
xrelease
or
mov
jecxz
mov
pop
fcompl
popf
inc
pop
sub
cmp
dec
dec
shrb
xor
mov
std
dec
adc
jle
jge
dec
push
mov
int3
out
loope
pop
icebp
xor
jnp
cmpsl
xor
pop
sbb
and
addb
movsb
cmp
jl
fisubrs
xchg
mov
jle
mov
es
test
add
subps
xor
adc
pop
cmp
add
sarb
ficompl
xchg
push
dec
xchg
ret
sti
mov
jnp
stc
pop
add
sbb
jo
repnz
pop
push
push
mov
inc
xchg
xchg
outsl
lea
add
loopne
ljmp
adc
jo
push
pop
fninit
lahf
les
dec
sbb
movsl
stos
jl
pushf
pop
inc
hlt
arpl
pushl
dec
clc
daa
loop
stc
push
push
adc
inc
mov
push
jg
mov
aam
cmp
outsb
push
push
mov
int3
or
insl
gs
daa
push
dec
xor
jne
scas
xchg
dec
out
jnp
lret
ja
pop
fisttpll
adc
out
jne
arpl
sbb
imul
mov
jae
lock
sbb
push
icebp
cli
xor
lds
inc
xchg
jl
out
loop
out
sbb
pop
lret
xchg
sub
push
mov
fisttpl
insb
repz
adc
test
xchg
sbbl
out
inc
arpl
and
or
add
stos
pop
push
fadds
xor
add
add
out
in
jo
xor
sti
mov
xor
adc
into
push
sub
gs
les
inc
cmp
pop
xchg
fxch
mov
push
sti
ret
sbb
cld
dec
out
jl
cmc
outsl
lret
adc
ret
fstps
outsl
xchg
lret
rorl
scas
shlb
addr16
jno
fs
sbb
xor
pop
add
xor
jb
imul
addl
divb
sti
xchg
fnstsw
mov
repnz
lahf
adc
ljmp
push
push
mov
push
adc
cmp
and
movsb
lret
sub
and
pushf
pop
pop
cmp
movl
gs
testl
bound
int3
stos
and
cmp
testl
sub
mov
fyl2xp1
lods
inc
ret
pop
pushf
sub
out
mov
xchg
movsl
aam
out
jl
mov
and
clc
fs
outsb
stos
dec
daa
or
shll
je
push
mov
fistpl
inc
jmp
mov
jo
mov
sbb
xchg
inc
in
or
add
outsl
ja
or
push
clc
xchg
adc
jmp
in
js
pop
ret
add
aas
aas
aad
in
pop
and
mov
fdivrl
inc
fidivl
cmp
inc
iret
mov
ljmp
xchg
jne
mov
cmc
add
push
subl
mov
mov
mov
iret
or
or
clc
sbb
out
ja
push
jle
mov
arpl
sbb
movsl
movsl
subb
lret
xchg
adc
sbb
sbb
and
test
mov
lds
mov
inc
divl
mov
and
mov
leave
mov
xor
call
xchg
cmpsl
dec
iret
sub
fiadds
sbb
jo
mov
or
pop
push
mov
cmpsb
mov
in
jae
cli
int
push
add
push
scas
stos
mov
xor
xor
xor
pop
xor
mov
pop
rcl
sub
insl
sub
arpl
and
inc
sub
ret
cmp
in
xor
lcall
sbb
lret
mov
inc
data16
pop
pop
xchg
loopne
adc
push
loop
jae
cmp
dec
pop
or
rol
stc
sbb
dec
rcll
xchg
dec
clc
int3
and
ret
cli
mov
adc
add
inc
mov
push
jmp
outsl
in
mov
jo
subb
insb
lret
cmp
mov
push
mov
mov
and
adc
imul
ret
jp
bound
cmp
in
sbb
push
roll
lcall
test
mov
adc
mov
push
cli
xor
sub
das
and
fbld
lret
jno
loopne
rolb
loope
sbb
inc
add
loop
imul
inc
frstor
arpl
insl
mov
mov
cld
mov
xor
pop
cld
shll
scas
cmc
xchg
lahf
enter
addr16
cli
inc
cmp
imul
inc
rorw
or
push
scas
mov
adc
mov
in
scas
mov
sub
jae
stos
cmpb
or
out
icebp
or
mov
jl
int
out
mov
push
mov
adc
mov
adc
jno
fldt
es
lcall
jl
movsb
jg
cmp
jae
lret
std
cld
fwait
mov
push
in
jp
fldl
adcb
and
outsl
jecxz
xchg
rol
imul
cmpsb
inc
sti
dec
xchg
data16
fsubp
clc
stos
xchg
cmc
lahf
pop
lea
mov
push
rcrb
mul
mov
sbb
xchg
inc
int
dec
mov
or
lock
push
mov
sub
frstor
xor
int
mov
pop
sahf
mov
in
adc
stos
push
sti
dec
jnp
inc
dec
mov
rcrb
push
adc
sub
hlt
lods
push
adc
sahf
aam
mov
jbe
scas
sbb
mov
cli
aad
xchg
dec
mov
inc
jo
xchg
out
and
popa
lret
outsl
xor
add
in
inc
lock
adc
iret
dec
inc
rolb
jmp
push
sub
es
mov
adc
andl
pop
add
xchg
iret
les
mov
frstor
lret
inc
or
add
lock
push
scas
and
outsb
sbb
mov
nop
pop
dec
add
fiadds
scas
sub
outsb
clc
in
jnp
f2xm1
fidivrs
xlat
ret
xchg
push
outsl
fimuls
mov
sub
pop
repnz
jbe
pusha
int3
mov
or
fisubrl
mov
pop
arpl
dec
loopne
out
cwtl
xchg
mov
jbe
repnz
xchg
loopnew
js
xchg
out
lods
clc
lods
xchg
fadd
jne
mov
lcall
sti
js
fcomip
adc
mov
and
and
cmp
nop
dec
cmpsl
pop
lods
outsb
movsl
stos
push
inc
xchg
xor
xchg
pop
fwait
pop
aaa
mov
sbb
cmp
shrb
mov
imul
xchg
mov
cltd
cmp
adc
mov
aaa
hlt
jo
mov
push
and
jne
cli
int3
or
add
mov
rcrl
xor
bound
jp
pop
jp
pop
cmp
pop
cmp
jnp
inc
nop
dec
or
xchg
jns
outsl
aam
adc
pop
ds
jbe
push
cmp
imul
xor
mov
mov
mov
stc
notl
mov
fstl
xchg
mov
pusha
push
stos
cmp
jge
mov
test
mov
imul
dec
subb
inc
cmp
daa
scas
adc
lds
xchg
and
xchg
aam
insl
cli
sbb
push
lock
xchg
cmpsl
dec
ror
and
ja
inc
lods
mov
mov
les
test
xchg
mov
mov
jle
pusha
mov
mov
cmp
aas
fcmovnbe
push
cmp
outsb
les
jns
pop
cli
jnp
cld
data16
mov
sbb
cld
mov
ss
jo
jmp
add
into
xor
mov
shl
pop
ret
or
sbb
pop
lret
or
xor
pop
movsl
sbb
cs
sbb
movsb
enter
repz
cld
fs
addl
cmp
jmp
dec
stos
push
mov
js
pop
mov
jle
xchg
scas
cld
out
lahf
icebp
out
mov
pop
addr16
jne
cmpsb
pop
lea
inc
gs
mov
inc
push
mov
enter
mov
sar
inc
gs
push
cli
jnp
xchg
cmp
out
add
push
lret
mov
data16
mov
pop
ja
xchg
fndisi(8087
jp
andl
lock
jecxz
and
pop
test
daa
sti
adcb
lret
cmp
xchg
mov
orl
or
mov
cmp
adc
jp
scas
mov
xor
and
movsb
push
nop
mov
pop
arpl
add
mov
mov
or
xchg
aas
testb
sti
xchg
testl
pop
xchg
cmp
pop
out
and
cmp
mov
andl
outsb
pop
fs
sar
sahf
xor
inc
or
push
dec
mov
loop
mov
pop
mov
pop
push
cmpb
inc
jb
insb
cmp
loop
mov
push
js
lcall
in
loope
mov
cmp
inc
dec
lds
push
loopne
arpl
ja
push
leave
push
int3
js
rcll
xchg
pop
into
push
outsl
mov
inc
movsb
repz
sbb
mov
rclb
or
ja
fistps
dec
jle
push
cmp
cwtl
pop
ss
nop
stos
fldl
xor
dec
push
jne
mov
es
sub
or
clc
jmp
setbe
mov
in
pop
outsl
test
iret
push
out
xor
lahf
jne
sub
jae
jb
sub
sbb
push
xor
imul
loope
sbb
shr
cmp
int3
jns
sub
xor
jle
dec
sbb
fstpl
adc
lds
xor
cmp
andl
and
xor
jmp
sbb
movsb
xor
in
shlb
dec
mov
cmp
xor
int
mov
clc
push
stc
adc
push
rorb
mov
rcrb
mov
cmpsl
mov
pop
or
or
icebp
mov
and
aas
mov
pushf
adc
adc
push
mov
sbb
xor
int3
inc
xchg
lahf
out
jbe
push
mov
add
mov
cmpsb
xor
mov
fdivl
leave
testb
inc
adc
pop
push
loop
cs
inc
sub
add
push
inc
or
data16
pop
dec
inc
mov
mov
add
ret
or
ljmp
and
add
hlt
imul
je
jb
ljmp
int
testb
inc
cmp
xchg
data16
ss
dec
xchg
or
mov
popf
pop
push
pop
sub
scas
cmp
fsubl
jg
jmp
push
std
pop
push
inc
and
pop
lock
mov
out
adcl
arpl
cmove
inc
xchg
lret
jp
fwait
aaa
loope
lret
pop
push
sub
xchg
lock
rorl
push
cmpl
mov
arpl
and
sbb
pcmpeqw
aas
mov
lret
test
cmp
add
mov
out
cmp
cli
mov
es
loope
jmp
lret
inc
bound
push
lcall
mov
ss
adc
rorl
jns
mov
in
nop
xor
adc
push
xlat
int
adc
add
dec
lret
jmp
add
or
dec
push
stc
into
mov
cs
pushl
or
lret
test
imul
mov
lcall
in
push
enter
outsb
test
add
outsb
push
pop
fidivrl
cmp
and
sbb
push
lcall
std
shll
nop
jnp
mov
mov
add
or
mull
sbb
das
inc
or
jnp
mov
cmp
int
inc
cmpsb
fsubl
lea
push
cwtl
outsb
sbbb
int3
movsl
std
mov
insb
fldcw
sub
cwtl
xor
pop
mov
cmp
mov
mov
vshufps
pop
jnp
dec
stos
mov
cld
movsl
ret
inc
ds
mov
jecxz
icebp
faddp
pmulhuw
pmuludq
repnz
lret
xorl
pop
movups
cmp
repnz
lret
addr16
testl
aaa
dec
pop
and
insl
pop
adc
hlt
inc
ja
pop
or
outsb
and
mov
es
jmp
idivb
sbb
mov
es
inc
movsb
inc
ficoml
in
icebp
adc
int
or
mov
fistl
inc
dec
test
push
outsl
cmp
daa
inc
xchg
xchg
insl
pusha
rorb
fsubrs
fmull
aas
iret
adc
outsb
lret
aam
les
mov
testb
dec
push
out
mov
pop
adc
cmp
bound
in
test
mov
mov
fwait
mov
inc
cmpsb
sbbb
pop
js
jbe
in
into
xchg
inc
mov
mov
and
add
shrl
cmp
rcrb
in
dec
stos
add
push
or
add
adc
push
xor
mov
sub
sub
push
lret
insb
hlt
mov
mov
and
xchg
divb
test
cs
mov
shll
xor
mov
lods
mov
push
push
xor
sub
mov
xchg
add
sarb
gs
stos
sub
test
push
or
sbb
outsl
je
mov
in
dec
push
pop
sbb
dec
adc
xchg
lret
pop
sarb
jmp
gs
insb
jg
push
pop
sbb
xchg
mov
xor
repz
out
mov
xchg
push
mov
rol
push
mov
repz
stos
testl
dec
sbb
in
call
inc
inc
nop
aas
scas
scas
or
dec
das
loope
adc
lods
jecxz
aad
mov
in
sub
push
jo
ret
fs
and
pop
popa
inc
ret
cmpsl
xor
mov
cmp
mov
mov
xchg
sbb
out
imulb
test
std
leave
lahf
inc
sub
adc
imul
leave
andb
pushf
or
jecxz
xchg
dec
mov
push
xchg
adcb
cmpsl
adc
push
inc
popf
mov
sbb
push
push
mov
pop
mov
push
aad
cmp
je
popa
mov
mov
mov
int3
cmp
scas
negb
loop
push
sbb
sti
popa
adc
stc
test
and
adc
sbb
xchg
scas
sbb
mov
mov
fiadds
ss
js
arpl
stos
repz
inc
test
or
pop
sub
cli
mov
xchg
dec
stc
nop
xchg
cvtps2pd
out
jg
jo
in
sub
out
int
jae
movsb
int
mov
jnp
jge,pn
inc
sbb
js
push
dec
or
dec
int3
outsb
sbb
xor
push
lods
nop
dec
ficompl
inc
push
mov
dec
mov
test
pop
repnz
push
jge
jle
daa
mov
jle
dec
call
shr
ljmp
cmp
mul
pop
inc
cltd
cmp
lcall
in
or
push
pop
push
sbb
and
jmp
pop
push
in
lcall
mov
mov
jae
or
in
mov
and
pop
lea
das
jl
pop
pop
push
jecxz
sbb
roll
sbb
mov
frstor
inc
sub
cmpsb
xchg
dec
adc
cmp
decb
xor
jmp
lock
or
movsb
fldt
add
sbb
clc
ja
ljmp
pushf
lds
stos
jae
xchg
mov
inc
xor
jo
rcl
rcr
pushf
dec
int
mov
dec
movsb
stc
lock
inc
cmp
arpl
xlat
cltd
mov
mov
inc
loope
adc
loope
fcoml
mov
cmp
sbb
mov
or
mov
movsl
sub
xchg
out
sub
nop
sbb
jmp
xchg
mov
push
sub
xchg
cmpsb
es
push
dec
sbb
jb
push
jns
cmp
pop
scas
arpl
cs
xchg
out
movsl
add
or
fldt
jne
dec
push
into
mov
loope,pn
std
mov
dec
mov
imul
xor
imul
xchg
jecxz
inc
add
cmp
xchg
mov
fisttpll
add
lods
clc
loope
xchg
cwtl
clc
or
mov
adc
inc
loope
aam
xchg
jmp
add
shl
repnz
test
cmc
mov
jnp
mov
xchg
pop
inc
mov
int3
pop
repnz
cmp
fbld
fcompl
insb
mov
adc
lret
fcomi
mov
dec
sub
fcoms
mov
cli
cmpsl
lret
aas
imul
icebp
pop
cmc
push
fnstenv
cmc
dec
les
or
jae
lds
xchg
sub
pop
xchg
jl
je
mov
ret
xor
fsub
and
ss
subl
sub
mov
sbb
fildl
pop
insl
scas
stos
jnp
fdivrs
adcb
mov
cmp
lods
mov
or
mov
pop
adc
pop
lahf
inc
xor
sub
scas
stc
mov
xchg
loope
jp
jb
ss
shrb
scas
add
clc
fistpl
das
into
and
shl
js
jno
push
int
dec
cmc
xchg
cmp
dec
xorl
aam
xchg
sbb
in
push
or
mov
test
xor
sahf
add
bound
adc
push
sbb
pop
flds
adc
sbbb
inc
add
andb
imul
and
pop
cmp
mov
subl
pop
inc
mov
adc
shrb
ja
sbb
fsubrl
loopne
xchg
scas
movsb
loopne
xchg
mov
cmp
jmp
sbb
int3
lcallw
rclb
push
loop
negb
addr16
dec
jg
mov
mov
lret
xor
ret
pop
js
rclb
fsub
sar
or
in
sbb
js
add
cmpsb
pop
mov
adc
out
aad
sub
loope
fisttpll
ja
cld
scas
xchg
jl
daa
add
sarb
sbb
int
call
mov
lcall
mov
cmp
mov
test
repnz
addr16
aas
push
xchg
mov
pop
and
inc
movsb
dec
test
mov
cs
imul
outsl
cmp
dec
sbb
sbbl
stc
test
mov
jno
mov
fwait
jo
ds
in
push
jne
out
scas
dec
and
dec
mov
pop
and
fwait
stos
sbb
push
sub
or
mov
fxch
imul
repnz
in
mov
sbb
ret
xchg
mov
cmpsb
xchg
xorl
stc
push
leave
popf
aad
mov
jne
cmc
stc
lahf
insb
in
in
push
lcall
xchg
scas
mov
mov
pop
aad
push
iret
mov
push
pop
loop
adc
test
lds
mov
scas
mov
ret
nop
inc
and
inc
adc
sbb
mov
insl
clc
stos
sub
push
test
stc
push
pop
cmp
gs
xor
xchg
sbb
lock
inc
jne
out
inc
push
xchg
cmc
mov
lods
sbb
test
xlat
jl
dec
stos
mov
test
mov
mov
mov
sbb
divl
movsl
dec
mov
rcrl
jns
cmpl
add
loope
mov
fucom
add
arpl
adc
dec
cli
stos
outsl
push
out
js
outsl
lret
sahf
mov
dec
add
xor
pop
pushf
cmpl
xor
aas
or
add
daa
cmc
push
cmp
xchg
pop
pop
mov
pop
dec
ja
pop
std
and
cmc
jns
aad
dec
lds
int3
and
and
cmp
fmull
inc
adc
and
mov
jp
inc
clc
in
imul
jg
or
lret
jae
and
leave
push
sub
fsts
sub
inc
mov
push
mov
jl
xchg
and
je
sub
xchg
cmp
or
rclb
hlt
mov
mov
xor
xor
iret
pop
dec
pop
dec
mov
xchg
xchg
lock
jo
xlat
sbb
ss
and
xchg
je
lds
add
pop
mov
inc
mov
inc
shll
xchg
cmp
adc
inc
jmp
or
sbb
xor
flds
mov
xor
fs
add
sub
mov
pop
dec
adc
out
mov
hlt
pop
insl
jg
rorb
flds
xlat
adc
and
pusha
xor
rcrb
pop
mov
pop
pop
ss
adc
insb
add
fidivrl
dec
pop
into
xor
mov
cli
xchg
out
lret
jnp
dec
in
mov
cmp
mov
movsb
mov
cli
insl
push
icebp
jbe
add
mov
mov
subl
fmuls
loope
imul
fdivrs
notb
adc
daa
add
jg
cmp
xor
jnp
aas
cmp
fistpl
mov
jbe
aad
inc
jbe
push
and
xchg
inc
jae
mov
mov
mov
push
sbb
or
int
bound
xchg
movlps
dec
pop
pop
in
fisttps
sbb
jb
test
fisubrs
sbb
aas
lret
aaa
mov
dec
push
mov
xchg
push
int3
int
cmp
fidivs
mov
pop
xchg
mov
iret
inc
inc
sbb
cmpsb
insl
aas
or
lret
push
or
push
xchg
into
sbb
xchg
lods
jnp
pop
push
or
jne
aam
sub
popa
rclb
ret
sbb
aad
imul
rol
fbstp
lock
cli
mov
test
push
and
xchg
inc
sbb
stos
mov
inc
loop
sahf
cmpsb
lock
dec
lahf
and
lea
gs
fsubrp
out
outsl
jp
and
sub
lcall
mov
mov
jge
sub
mov
push
lahf
insl
mov
into
mov
out
enter
jge
imul
insl
adc
or
jno
sbb
mov
cli
pop
ljmp
stc
aad
fcomps
mov
lret
dec
cmp
mov
and
loop
fldenv
fs
mov
adc
mov
push
popa
int
xlat
dec
cli
popa
or
clc
test
cmpsb
xor
pop
rorb
pop
ja
xor
mov
mov
inc
or
movsb
jg
loope
mov
pop
cmpl
jle
les
jne
adc
inc
arpl
dec
cmp
fadd
sbb
test
xor
rclb
fisttps
sbb
enter
or
push
lods
lea
out
fsubrs
or
jnp
adc
jbe
mov
cmp
rorl
rcrl
and
lret
sahf
stos
xchg
inc
arpl
hlt
and
sub
nop
loop
mov
mov
mov
adc
add
and
mov
sub
insb
es
or
rcrl
pmaxsw
test
cmpsb
mov
test
fwait
mov
or
lds
sahf
jecxz
jmp
repnz
gs
stos
insl
mov
out
int3
cmova
idiv
jecxz
cmp
inc
add
and
out
inc
lret
enter
cmpsl
ds
xchg
cmp
pop
push
push
cli
in
mov
pop
ret
xor
push
push
je
dec
mov
ret
cwtl
jnp
xor
loope
dec
jge
jge
jae
pop
ret
pop
xor
sub
and
or
or
xlat
test
inc
int3
push
out
mov
bound
mov
add
mov
jae
fldenv
push
or
and
xor
jge
fcomps
jb
ret
dec
divl
jns
push
cs
pushf
pop
stos
popa
stos
inc
mov
bound
nop
and
and
clc
inc
jg
mov
push
dec
pop
inc
hlt
push
add
xchg
cmp
mov
push
sub
lcall
stc
dec
mov
jecxz
mov
mov
push
cmp
cltd
add
lea
out
sub
loop
lds
jb
addr16
js
and
xor
mov
data16
sbb
cmp
outsl
adc
scas
lods
mov
pop
out
aas
adc
and
xchg
sub
dec
inc
incl
add
pop
dec
and
pop
dec
fistps
adc
pop
mov
xchg
dec
or
aam
adc
inc
ffree
lahf
repz
cltd
and
call
xor
or
cmp
mov
xchg
dec
icebp
mov
or
adc
or
sbb
ja
scas
mov
inc
call
push
or
mov
out
jo
sbb
popf
test
mov
cmp
sti
xchg
int3
hlt
cwtl
inc
daa
or
ss
and
je
ss
dec
mov
loop
fiadds
repz
lret
or
pushf
les
icebp
push
stc
cmp
push
adc
or
ljmp
cli
dec
icebp
jae
mov
ja
push
push
std
adc
lea
inc
push
negl
or
or
add
les
lahf
test
push
dec
mov
cwtl
cmp
leave
mov
stos
cmpsw
xor
pop
out
mov
sub
push
rol
ja
inc
mov
sbb
cwtl
rol
aaa
iret
jb
adc
adcl
scas
jl
xchg
aas
cmp
and
add
mov
adc
inc
adc
pop
inc
cmpsb
lahf
push
int3
out
cltd
scas
pop
mov
in
idivb
jns
fistps
shr
ljmp
hlt
sar
push
int3
and
cmp
data16
aas
shrb
mov
lock
xlat
xchg
test
test
daa
int
mov
mull
mov
push
or
cmp
adc
jl
test
out
fisttpll
sbb
pushl
out
or
xchg
adc
xchg
pop
adc
push
movsb
adc
mov
pusha
push
inc
cmpsl
push
mov
aam
ja
lcall
loopne
xchg
inc
inc
push
mov
andb
and
lcall
adc
aad
idivb
andb
mov
inc
push
shrb
and
jl
les
adc
inc
enter
xchg
hlt
in
mov
push
cmp
mov
aam
pop
repz
lret
xchg
iret
mov
push
rcrl
test
mov
cmp
sub
scas
push
daa
adc
jb
xchg
shll
int
sti
out
jge
out
mov
rcrb
mov
mov
fcoms
pop
or
insl
hlt
fstpl
pop
sub
mov
in
mov
cmp
mov
in
test
shrb
int
int3
pop
dec
push
xor
mov
pop
or
cmp
dec
pop
shll
jnp,pn
add
int3
addl
insl
jp
cs
cwtl
push
adc
mov
es
jbe
loop
test
sbb
jno
fbstp
mul
jo
sub
int
adc
sbb
int3
sub
xchg
xchg
and
jl
dec
cmc
and
push
rcrb
lods
int3
imul
inc
mov
push
xchg
jge
and
lret
jl
mov
adcb
dec
mov
leave
iret
stos
add
lret
jb
mov
lods
push
sarb
js
fistpll
or
cwtl
and
dec
sub
into
pop
sub
pop
xor
dec
and
loop
ja
imul
sti
test
cmp
aad
cmp
das
add
test
in
insl
movsb
jecxz
push
mov
adc
stos
js
imul
push
rcll
push
int3
xchg
pop
pusha
out
cmc
mov
or
out
or
lds
sbb
sbb
notl
dec
xchg
xchg
mov
clc
cwtl
xchg
xchg
cs
je
jg
lahf
lea
aas
sbb
pop
cmp
fcoms
stc
mov
mov
inc
cmp
xchg
push
push
outsl
inc
fdivrs
out
pop
pop
mov
movsb
pushf
cmp
push
iret
lods
je
test
or
idiv
cmpsl
cltd
bound
out
pop
push
cmp
push
xor
cld
and
lods
icebp
push
negb
fisttps
pop
and
fwait
ret
fnstsw
jp
pop
push
sbb
shlb
mov
mov
xchg
or
cltd
cmp
andl
inc
mov
adc
adc
xor
sub
cs
push
xchg
add
les
pop
ret
loopne
leave
aas
lahf
fldt
nop
and
scas
icebp
pop
gs
pop
xchg
rcr
fildl
dec
ja
enter
sahf
fnsave
and
xchg
pop
mov
add
mov
loopne
sbb
mov
pushf
mov
dec
loope
jg
add
pop
lock
cmp
stos
xor
lahf
adc
stos
mov
push
jmp
sub
faddl
sti
ret
pop
sub
in
out
adc
xor
xchg
in
pop
out
inc
xchg
rcll
mov
sbbl
adc
mov
imul
into
push
xor
sub
inc
push
stc
adc
jmp
mov
inc
outsb
pop
jbe
cmp
xor
jg
pop
fcmovne
mov
jns
mov
cmp
push
cmp
bound
xlat
mov
adc
cmp
clc
loopne
pop
sbb
int3
mov
push
pop
adc
jns
lods
inc
mov
addb
pusha
cmpsb
add
leave
xchg
arpl
and
inc
push
mov
iret
xor
or
xor
xor
inc
mov
imull
mov
dec
lods
sbb
xchg
mov
test
int
gs
je
popa
xorb
add
aaa
js
rcrl
lret
pop
cwtl
imul
mov
mov
jmp
xor
jge
push
stos
lods
repnz
mov
shl
or
and
out
mov
fisubrs
out
jns
popf
popf
in
sub
aad
add
pop
bnd
ret
inc
out
aam
orb
mov
ret
jns
push
cmp
and
clc
mov
sub
and
addr16
or
sub
outsb
cmc
xor
clc
jno
inc
inc
dec
mov
xchg
sub
cmpsl
fwait
leave
mov
pop
std
out
lods
lds
lret
adc
push
mov
xor
loop
fwait
sub
sbb
sar
movsl
push
cmp
sbb
in
push
adc
xorb
xlat
rorb
mov
jb
push
pop
inc
mov
leave
addr16
mov
fsub
inc
bound
push
dec
add
add
das
sbb
ds
mov
rcl
enter
adc
xchg
insb
fisubl
sbb
and
je
add
cmp
xchg
les
jo
mov
sbbl
dec
test
mov
shl
push
inc
pop
adc
mov
mov
push
pop
push
loopne
push
push
mov
mov
push
jmp
nop
fs
and
leave
addr16
pop
ljmp
or
xor
out
adc
ds
int3
in
mov
es
fimull
rcrb
sti
jne
out
into
xchg
enter
push
mov
push
scas
mov
lds
inc
fisttps
inc
mov
mov
jle
xchg
stos
cmp
scas
inc
cmp
inc
and
mov
mov
iret
shl
ret
inc
sub
scas
sahf
mov
scas
cmc
jecxz
aad
xor
xor
stos
lods
adc
popa
or
mov
out
mov
xchg
dec
pop
mov
loop
add
mov
dec
ror
arpl
cmp
cmp
xor
jb
not
dec
or
mov
pushf
loopne
movsb
jp
test
cmp
lret
cmpsb
in
icebp
mov
stc
sub
cwtl
adc
push
aam
loop
out
and
jbe
push
ret
stos
mov
inc
std
in
mov
pop
inc
movsb
inc
sub
addb
or
stos
xor
not
cmc
fmuls
pusha
xor
rsqrtps
and
push
ret
sub
clc
mov
inc
hlt
pop
fadds
and
cltd
fs
in
xchg
push
int3
xchg
cs
and
jl
ficompl
loopne
pop
pop
cmpsl
add
xchg
push
pusha
dec
cmp
jnp
or
fdivrp
jae
aam
gs
aam
push
mov
adc
sarl
stc
push
mov
sbb
sub
lcall
subl
jae
shrl
adc
shrb
test
pushf
push
dec
dec
addr16
xchg
pop
cmpl
push
insb
mov
and
leave
out
pop
fnstsw
xchg
das
and
and
in
test
daa
js
inc
repnz
cmp
popa
sub
arpl
mov
jecxz
push
dec
sbb
pop
or
cmp
rclb
fs
ljmp
inc
int3
sub
xchg
loope
lods
dec
ja
xchg
scas
shll
lret
into
xchg
mov
jne
xor
adc
sub
jecxz
je
mov
and
mov
push
jo
lret
xor
mov
cltd
mov
mov
sbb
or
inc
insb
mov
outsl
ret
repz
push
bound
inc
or
ds
pop
dec
ja
cmpsl
add
pop
xchg
cmpsl
jmp
cmp
jb
ja
es
xor
pushf
mov
push
lahf
out
xchg
cmp
pop
loope
pop
cwtl
cmp
aas
jne
xchg
outsl
adc
push
pop
fcomp
enter
jb
lahf
lods
cs
xorl
and
fisubs
lock
dec
mov
dec
push
pop
ja
test
andl
repz
lods
leave
das
cmp
push
pop
insl
sub
psubq
stos
outsb
mov
ficompl
dec
insb
adc
fld
cmpsb
mov
and
sub
jb
mov
test
rcrb
and
popf
sub
or
push
imulb
jmp
jle
movsl
es
mov
test
push
int3
xchg
or
fsubrp
nop
or
leave
xor
popf
ret
lahf
clc
pop
jo
in
sub
scas
xchg
jg
inc
sub
arpl
xor
adc
inc
dec
mov
jmp
dec
push
jecxz
mov
ret
mov
outsl
dec
cmp
cmp
fwait
stos
sub
jne
jbe
xor
ljmp
clc
and
dec
es
lea
sub
jg
lea
pop
orb
cltd
xchg
shrb
sbb
jmp
movsb
xchg
mov
push
addr16
sbb
jnp
lahf
xlat
call
je
bound
push
xchg
push
xor
and
inc
xor
fnsetpm(287
xor
and
mov
xor
hlt
leave
lret
es
sub
ss
mov
xor
add
or
cmc
mov
adc
pop
decb
ret
adc
dec
pop
in
sti
jle
xor
lahf
pop
jg
or
jmp
in
cli
jge
pop
movsl
pop
mov
gs
and
into
sbb
or
pop
loopne
pop
in
into
ret
dec
loope
cmpsb
subb
mov
jbe
inc
cmp
mov
push
or
insl
mov
pushf
jb
cmpsb
add
dec
loope
jb
repnz
inc
mov
cmp
int
in
xchg
movsb
scas
int3
scas
arpl
int
inc
jno
pop
out
rcrl
pop
insl
outsb
jns
and
lods
je
shll
sbb
cmp
movsb
int3
mov
sbb
ret
add
cld
mov
loopne
out
lock
in
hlt
sub
scas
pusha
lret
adc
fcoml
in
and
arpl
enter
dec
dec
es
and
movl
sti
xchg
in
out
inc
push
dec
sub
add
dec
lock
fdivrp
jb
std
push
shlb
in
into
mov
dec
mov
jg
xor
mov
dec
mov
fwait
into
pop
xchg
inc
add
stos
mov
mov
jnp
ja
jno
pusha
fdivl
in
scas
popf
jo
rcr
adc
lret
imul
iret
sub
and
clc
lcall
cli
sbb
xchg
sbb
in
lds
push
dec
xor
push
mov
je
or
push
je
mov
adcl
and
adc
test
mov
pushf
neg
jb
add
jl
dec
xor
sbb
sahf
fisubrs
sub
and
shrb
out
dec
scas
lock
in
aad
in
gs
or
push
add
and
movsl
movsb
pop
pop
push
mov
or
lret
sub
dec
push
adc
stc
shlb
xchg
or
adc
xchg
sbb
adc
adc
or
xor
sbb
xchg
icebp
cli
or
xchg
lret
mov
mov
out
mov
iret
inc
fisttps
pop
sub
push
fdivrp
scas
or
fwait
add
aaa
xrelease
cmp
jge
rcrl
ja
in
sub
ret
add
pop
add
push
and
jne
test
repnz
in
jge
icebp
test
shll
je
or
pusha
mov
lods
or
enter
mov
in
shlb
ret
jl
imulb
lcall
jae
lods
push
arpl
int
cmp
mov
jl
pop
aas
xchg
mov
pop
int3
sbb
push
mov
pop
xchg
mov
add
xor
dec
stc
adc
and
and
call
cltd
pop
loopne
mov
xor
adc
mov
xor
jecxz
sbb
mov
call
lea
mov
sbb
cmp
pop
lret
clc
cmp
pop
push
pop
pop
mov
ja
add
mov
inc
js
dec
jne
loop
inc
fcomip
out
outsl
ja
cmp
outsb
cmp
repz
sbb
push
sub
push
mov
rclb
lock
stos
fbld
mov
ja
std
sub
mov
outsb
out
xchg
sub
pop
adc
pop
adc
lahf
xchg
cmpsb
mov
pop
movsl
loopne
sysret
jge
mov
jae
imul
push
ss
or
popf
stos
xor
out
mov
mov
movsl
pop
gs
cmp
inc
adc
and
jp
push
mov
xor
mov
aam
sub
call
orb
repz
jnp
sub
xchg
les
outsb
add
iret
lock
out
pop
xchg
xor
adc
jbe
cmpl
jp
mov
setge
adc
pushl
aaa
push
sub
iret
fsubs
pop
xor
lods
inc
fdivl
rol
int3
xor
hlt
push
imul
stc
mov
jle
mov
pop
popa
xchg
aaa
adcl
push
jle
pop
lret
cmpsl
lea
mov
gs
rep
push
mov
lods
outsl
adc
add
push
inc
insl
mov
jno
movsl
test
fsubs
cmp
mov
fwait
bound
cmp
iret
stos
fldenv
mov
xor
icebp
lock
sub
outsl
xor
sub
push
sub
in
mov
cmp
popf
mov
insb
inc
adc
mov
push
lods
xchg
push
jbe
pop
das
push
arpl
adc
or
lods
addb
mov
cmp
pushf
inc
and
mov
leave
adc
xchg
fimuls
push
mov
outsl
push
negb
inc
cmp
mov
xchg
es
ljmp
push
les
test
enter
fnstsw
shl
dec
jbe
jb
mov
sub
sbbb
fstpt
push
mov
sub
jmp
mov
fcompl
sub
sbb
push
jmp
les
mov
or
adc
dec
mov
loopne
pop
mov
push
fs
daa
in
add
pop
push
mov
shll
fldcw
aam
jae
adc
add
movsb
scas
into
mov
stos
loop
in
cmp
addl
out
aad
or
sub
pop
cwtl
daa
push
sar
adc
sarl
dec
xchg
lcall
add
cmpsb
cwtl
and
dec
repnz
icebp
xor
and
jge
fs
int
pop
mov
xchg
mov
mov
push
rolb
push
sbb
and
enter
dec
mov
mov
lods
fisttps
mov
call
add
push
scas
sub
inc
xchg
push
pop
jmp
jle
push
mov
je
mov
sar
mov
pop
xor
movsb
rcrb
pop
sbb
test
xor
inc
imul
imul
lea
lock
xor
sub
or
sbb
mov
outsl
inc
bnd
add
scas
outsl
mov
push
arpl
outsl
mov
insl
nop
sahf
hlt
xchg
pop
mov
sub
lds
or
shrb
les
sub
xchg
pop
inc
comiss
mov
inc
cmpsl
add
xor
or
iret
fldl
pop
sbb
adc
repz
add
pop
stc
jo
out
cmp
icebp
sub
and
xchg
data16
stc
call
icebp
and
enter
hlt
dec
out
sub
mov
fcomip
mov
arpl
add
pop
pushf
xchg
and
sbb
inc
sbb
enter
pushf
cmp
lds
aam
inc
inc
insb
sarl
and
or
pusha
push
arpl
jno
cmpsl
cmp
lret
sub
pop
mov
mov
push
cltd
fldenv
std
stos
dec
leave
and
rolb
inc
adc
lock
adc
dec
std
lods
insl
xchg
not
push
push
add
push
stc
mov
dec
cmp
push
cmp
mov
inc
repz
or
and
icebp
clc
leave
xchg
popa
inc
push
add
mov
adc
out
movl
dec
mov
mov
scas
popa
mov
pop
dec
out
mov
sub
mov
add
divl
filds
lods
mov
pop
mov
sbb
movsl
cmc
and
test
cmp
mov
popa
inc
add
or
pop
lds
pop
ret
in
inc
test
adc
je
fistpll
mov
cmp
gs
push
test
aas
aam
aaa
push
pop
xchg
push
pop
xor
sbb
std
or
mov
sar
in
push
loop
add
out
dec
adc
pop
pop
cmp
lret
xchg
push
ljmp
fnstcw
mov
and
or
cmp
mov
cwtl
ljmp
out
fidivrs
fbld
inc
cmp
pop
inc
inc
lcall
pop
xchg
cli
push
jne
in
pusha
and
inc
inc
pop
jmp
sub
lods
outsl
cld
cli
testl
mov
pushf
push
gs
inc
clc
cltd
shll
shlb
int
int
les
mov
out
adc
inc
sbb
pop
fdivrl
lret
push
mov
testl
sbb
jecxz
cmpsl
push
icebp
inc
mov
cmp
inc
dec
xor
xor
jg
mov
mov
jnp
sti
adc
stos
hlt
jb
dec
test
rorb
stos
cmp
xlat
rclb
call
lods
jg
jg
leave
add
ss
out
inc
mov
cld
lcall
mov
and
sub
idivl
arpl
sub
cmp
movsl
mov
sbb
mov
mov
lds
scas
test
jo
jp
fisttpl
sub
mov
push
sti
cmp
jnp
pop
je
decb
stc
mov
lcall
inc
rcrl
lods
in
push
lahf
fldcw
pop
add
push
fs
push
inc
stos
xor
sbb
rol
jmp
add
mov
xchg
mov
fdivl
call
cmp
push
movd
roll
jnp
jb
mov
dec
cmp
dec
mov
push
test
adc
rcl
xchg
inc
lfs
sti
test
lock
jl
nop
mov
frstor
in
sub
test
dec
outsl
pop
out
stos
shr
xchg
lods
xchg
out
shlb
pop
sbbb
cmp
cmc
sbb
pop
sbb
cmpsb
add
mov
cmpsb
sbb
dec
test
pop
int3
cmp
inc
ja
jle,pt
std
lock
mov
add
and
stos
sub
add
int3
add
mov
insb
mov
sbb
loopne
dec
cmc
leave
mov
push
mov
cli
cmp
mov
shlb
xchg
sbb
lcall
fwait
lods
sti
pop
in
outsb
mov
dec
enter
jecxz
mov
adc
and
gs
push
mov
mov
int3
pop
pop
mov
mov
sti
pushl
dec
add
icebp
adc
sub
xor
das
bound
mov
pushf
fisubs
mov
fidivrs
mov
jecxz
or
xor
sub
enter
stc
icebp
mov
push
enter
pop
cmp
leave
sti
add
aaa
jns
fstpl
pop
stos
les
mov
push
xor
call
cld
mov
mov
push
shrl
and
adc
pusha
mov
push
loope
mov
xor
repnz
mov
inc
int3
push
stos
hlt
xlat
pop
pop
filds
sti
adc
dec
adc
dec
mov
xor
xor
cmpsl
arpl
jge
sahf
mov
jno
push
in
cld
add
roll
cli
pop
ljmp
fcomps
jle
fldt
jne
mov
dec
xchg
out
pusha
in
int3
js
cld
setns
add
stc
mov
sub
nop
aaa
inc
cmp
cmp
push
mov
fbstp
mov
popf
out
add
sbb
pop
in
mov
sbb
cmp
and
fs
test
sbb
jg
cmpsb
scas
cwtl
cmp
popf
in
fldenv
push
dec
in
or
xchg
pop
leave
fcoms
pop
or
dec
push
jecxz
out
dec
call
js
inc
cmp
pop
in
xchg
push
not
pop
cs
jbe
cmp
test
add
mov
sbb
sub
adc
inc
mov
add
outsb
lea
mov
jb
in
xor
xchg
jno
and
or
mov
sbb
pop
fcomps
in
shll
cmp
xor
cmpsl
push
xor
mov
lods
int3
ret
inc
pop
push
sbb
outsl
jnp
push
jno
pop
mov
iret
jg
int3
shl
mov
aas
lea
repnz
mov
ja
mov
sbb
mov
fisttpll
inc
outsl
clc
pop
xor
cmp
jno
mov
test
lods
cmp
sbb
shrl
or
ffreep
xchg
mov
adc
pop
jb
lret
push
sarb
mov
push
sbb
adc
imul
loopne
push
cmp
ss
mov
leave
jno
xchg
or
xor
clc
movsl
out
push
mov
jp
mov
repnz
orb
adcb
push
mov
mov
stos
mov
push
xchg
or
dec
jo
add
aam
pop
mov
rorb
jo
mov
flds
sub
sbb
and
sub
push
push
pop
adc
add
adc
lret
out
enter
xchg
push
xor
out
popa
sbb
sub
push
sbb
dec
mov
shll
jg
sub
ljmp
or
pop
and
inc
xor
ror
mov
jbe
mov
xchg
sbb
pop
ds
ss
popf
sub
add
rolb
lcall
mul
scas
lret
sahf
mov
in
sbb
xor
pusha
mov
outsl
stc
and
mov
add
dec
xchg
cmp
js
mov
mov
pop
cmpl
in
xor
lahf
xchg
adc
pushf
leave
adc
cwtl
insb
lret
dec
lods
sub
sub
test
js
inc
jg
sub
adc
gs
lods
or
jecxz
pop
dec
and
and
ss
out
arpl
nop
and
or
jae
add
jecxz
nop
sahf
in
inc
jnp
inc
and
or
popa
cwtl
xchg
std
call
dec
fisubl
loope
ret
jno
int
fxtract
out
popf
lea
paddusw
adc
stc
push
addl
pop
sbb
inc
cld
mov
xchg
pusha
lea
ja
push
cmp
bound
xchg
jl
jbe
sbb
dec
inc
imul
add
enter
lods
dec
jne
out
ja
imull
repnz
cli
jo
andl
xor
mov
push
shlb
lock
jae
mov
andb
mov
popf
icebp
xchg
mov
xchg
notl
push
mov
mov
aas
mov
rdmsr
loop
movsb
add
or
mov
jnp,pn
sub
push
mov
push
icebp
mov
fdivrl
lret
jo
movsb
xor
or
mov
or
mov
loop
mov
dec
repz
rcrl
push
jmp
mov
stc
xor
cmpsb
dec
dec
pop
sub
mov
sbb
int
and
mov
sub
push
push
out
rorl
in
cmpsl
sarl
dec
lods
dec
cmp
aaa
inc
pop
inc
aad
insw
data16
mov
lock
xlat
out
adc
add
jle
sub
xor
xchg
xor
shll
sbb
cmp
mov
in
lods
xchg
iret
mov
or
daa
push
flds
pop
int
mov
xchg
xchg
int
mov
loope
jl
orb
loop
lock
or
sbb
xor
cmp
je
mov
lret
lcall
xorb
push
cmpsb
sbb
jne
and
pop
je
mov
dec
cmp
mov
sub
add
mov
add
fcomps
sub
in
pop
fildl
iret
mov
int
bound
int3
inc
cmp
xchg
das
lds
stos
cmc
movntps
xchg
cmc
mov
dec
cmc
mov
mov
dec
sub
lret
mov
bound
cmpsb
stos
xor
out
jno
dec
arpl
push
add
xor
mov
adc
mov
in
lret
push
aaa
bound
movsl
jo
jo
push
cmp
nop
add
xchg
ds
pop
stos
push
cmc
and
mov
cmp
adcl
or
stos
aas
push
inc
movsl
popa
or
cmpsb
loop
dec
mov
fimuls
repz
push
rorb
jne
int3
dec
jecxz
sbb
xor
cmp
aad
pop
pop
xor
sbb
mov
lds
adc
ret
and
mov
pop
aaa
adc
rcr
pop
cs
xchg
sbb
pushf
pop
fsubrs
cmp
adc
sub
sub
aas
addl
orl
cmc
imul
jb
or
and
xor
es
mov
jbe
mov
xor
icebp
js
xchg
repnz
fisubrl
inc
pop
fndisi(8087
outsl
sub
inc
test
adc
aaa
mov
jl
ficomps
inc
test
lret
pop
out
mov
jmp
sbbb
mov
jne
clc
loopne
mov
jg
movsb
mov
in
push
nop
lock
and
lock
fadd
pop
mov
xor
push
addb
clc
pop
push
dec
leave
push
pop
cmp
add
or
add
adc
mov
cmp
cltd
int
dec
xchg
push
jl
jmp
cwtl
mov
cli
push
es
rcl
in
xchg
popa
cmp
jo
mov
cld
ja
inc
dec
out
loope
js
sub
and
mov
pop
xchg
enter
and
test
sbb
jmp
mov
andl
push
cs
or
addr16
jno
add
mov
ja
movsb
inc
aas
rcrb
inc
xchg
push
xchg
hlt
leave
xor
sbb
xlat
lret
adc
lock
lods
and
lods
mov
inc
adc
mov
inc
adc
loope
lahf
or
pop
icebp
enter
and
fcoms
shr
test
dec
mov
shlb
rorb
lcall
lahf
adc
daa
sbb
mov
ss
xlat
pop
sahf
inc
mov
ds
push
out
and
enter
xchg
insb
inc
jnp
sbb
xor
and
dec
mov
fistpl
jmp
cmpsb
imul
mov
lods
sub
add
mov
and
inc
xor
push
movsb
xchg
mov
stos
mov
sbb
es
push
clc
adc
and
xchg
fistl
xchg
outsl
mov
fwait
sbb
cmp
rcrl
iret
int
imul
int
cltd
sbbb
shll
rcr
sahf
cmp
mov
mov
add
push
inc
dec
mov
pop
jge
push
push
ret
jmp
xor
popa
inc
inc
jle
dec
test
or
jl
ds
ja
into
test
jge
ja
test
ret
push
test
inc
fimull
push
jb
cmp
in
xor
rcll
adc
out
es
jle
jb
add
nop
nop
mov
or
adc
push
mov
daa
outsb
inc
xchg
ljmp
dec
sbb
in
filds
test
inc
pop
inc
adc
xorl
pusha
jnp
and
cltd
mov
xchg
fsubl
test
sub
arpl
js
mov
into
adc
inc
mov
cmc
xchg
xor
ljmp
pop
mov
cltd
popf
or
cltd
inc
pushf
not
jge
and
arpl
repnz
iret
lds
jae
imulb
adc
js
std
mov
push
dec
xor
xor
les
adc
jecxz
jle
cmp
cmp
push
mov
push
in
pop
psubusb
pop
inc
out
aad
mov
xor
and
sti
push
aad
fwait
xchg
mov
push
mov
xchg
sub
pop
out
mov
shrl
lahf
inc
adc
lea
mov
in
cmp
test
add
ds
out
test
or
fnstsw
fisubl
jmp
mov
jae,pn
in
out
in
cmovno
add
push
daa
sub
enter
lock
icebp
cmpsb
sti
xor
xchg
cmp
mov
lea
mov
jb
lret
pop
lods
sahf
dec
jle
stos
cmp
xor
std
jecxz
cmp
les
sbb
pop
repnz
fdivr
push
push
stc
pop
dec
sbb
sbb
cmp
mov
cmp
push
cli
sti
int3
icebp
hlt
cmp
xchg
mov
mov
mov
or
add
push
ret
ds
pop
in
subl
mov
inc
addr16
cmp
shll
das
xor
ret
imull
mov
lret
mov
pop
in
loopne
stos
out
ret
mov
mov
and
iret
push
push
mov
push
aad
mov
inc
jbe
ret
dec
inc
pusha
push
loope
mov
adcb
mov
adc
pusha
insb
ret
jbe
lret
jnp
push
iret
jo
loop
push
jl
lret
data16
inc
jo
rolb
out
cltd
cmpsl
rclb
mov
test
js
add
inc
dec
inc
jge
out
fcmovb
sub
imul
in
and
and
push
fimuls
in
lods
pop
lahf
stos
loope
xchg
fwait
mov
sahf
xlat
and
add
dec
mov
rolb
sbb
add
addr16
xchg
push
jbe
lock
or
jle
lods
xor
jecxz
jle
addr16
std
pop
fcompl
mov
mov
fucomip
xchg
in
rclb
push
sub
jge
push
pop
sbb
test
mov
shll
lods
mov
pusha
or
xchg
nop
xlat
xchg
lahf
out
cmp
daa
ret
mov
sub
push
sbb
nop
inc
into
cli
adc
loopne
nop
sub
mov
inc
cld
and
or
cli
lock
stc
xchg
test
xchg
mov
in
add
lcall
jb
pop
xchg
add
addr16
jne
popf
or
push
cli
or
cli
xor
sub
sbb
leave
push
pop
loop
and
inc
mov
stos
inc
xor
outsb
rorl
aam
jmp
sub
sahf
es
or
xchg
popf
out
add
sarl
mov
andb
dec
dec
lahf
xchg
push
pop
xor
rorl
pop
add
xchg
rol
imul
jne
cli
inc
mov
inc
sahf
xchg
push
fistl
cltd
inc
jg
dec
scas
fnsave
mov
push
push
notb
xor
sbb
gs
mov
js
fwait
xchg
mov
fs
push
dec
out
inc
fstpt
push
or
jl
popl
push
mov
fs
pop
js
scas
inc
test
jmp
es
mov
push
jl
dec
xor
imul
sub
in
pop
cmc
inc
mov
adc
sub
cs
cmpsl
adc
sbb
test
inc
mov
add
adc
cltd
sbb
leave
pop
xchg
jne
mov
stc
movsl
inc
fstps
push
jl
pop
xchg
insl
fwait
push
or
jo
jbe
mov
in
and
ficoms
lea
lret
pop
enter
pop
out
sahf
cmp
dec
mov
and
cwtl
lds
leave
fmuls
cmp
ds
add
mov
stc
out
pop
repz
scas
pusha
inc
xor
sbb
lahf
daa
mov
and
loop
jmp
sahf
testb
jns
jp
xchg
cs
out
xchg
hlt
adc
mov
mov
and
shll
jne
pop
pop
push
and
stos
mov
cmp
mov
into
push
das
mul
sti
mov
pop
insl
inc
leave
and
cld
scas
xchg
xchg
cmp
fwait
gs
xchg
adc
adc
push
lea
imul
cmp
out
into
movsl
mov
popa
aaa
mov
jae
cmp
push
shl
lahf
cmp
call
and
arpl
xchg
jge
fiaddl
movsl
add
xchg
lds
push
in
addr16
sub
sbb
cmp
stos
mov
jp
cmp
iret
cmpsb
or
jbe
enter
pop
adc
push
cmp
add
int
mov
and
movsl
pop
sub
mov
mov
daa
xor
dec
test
push
mov
push
pop
jne
in
arpl
lahf
insl
push
push
hlt
addb
rcrl
and
inc
or
or
adc
cwtl
in
sahf
add
lods
sub
loop
xchg
in
jle
cmp
jns
or
imul
cmpsb
add
fidivl
mov
rcrb
pop
aaa
adc
sbb
lock
mov
sub
hlt
xor
dec
sub
gs
inc
sub
imul
ljmp
test
xchg
mov
mov
cmpsb
stos
mov
stos
scas
out
xor
sbb
cmp
jns
or
mov
inc
in
cmp
imul
mov
push
call
scas
xchg
pop
ljmp
jns
or
cmp
xor
sbb
fstpl
js
cmpsb
mov
sbb
lock
aas
lret
cwtl
ret
pop
daa
mov
jg
in
jo
inc
popfw
pushf
mov
repz
les
or
or
outsb
stos
and
lea
jmp
out
repnz
movsb
add
out
sbbl
and
and
fwait
ret
mov
jp
scas
in
xlat
stos
das
test
scas
lret
fisttpll
sub
cmp
fiaddl
shrb
mov
ds
or
cld
dec
popa
add
adc
jae
stos
mov
push
hlt
and
pop
lret
sti
rcll
subl
add
mov
push
mov
test
push
push
push
lock
popa
outsl
cs
repz
cmp
push
repnz
repz
jo
mov
adc
fnstenv
jnp
xor
movsb
mov
and
jne
mov
lods
pop
and
das
jl
mov
rol
mov
inc
cmp
push
adc
dec
roll
mov
repz
pop
lret
xor
inc
push
fidivl
push
jns
pusha
xor
test
dec
testb
ljmp
stos
aad
mov
mov
xor
pushf
push
cmpsb
jns
and
cmpb
in
pushf
sub
mov
into
push
iret
fistps
cld
pop
or
arpl
aaa
sub
inc
fldt
scas
pop
dec
jmp
dec
xchg
xchg
sub
cld
mov
jmp
fsts
and
xorl
push
outsl
mov
into
out
cli
in
jnp
mov
and
jo
imul
xor
pop
lcall
insl
divb
jl
jl
stc
sub
aam
ret
push
movsb
cmp
in
and
rcr
scas
xchg
jb
or
imul
roll
push
movsl
in
loope
je
test
and
adc
mov
sub
das
das
mov
xchg
mov
adc
cmp
xchg
xchg
sar
sub
cmp
xchg
xchg
repz
fnstsw
cmp
add
xor
insl
movsl
jne
in
pop
inc
ja
mulb
or
or
fcmovu
loope
cld
dec
pop
lds
mov
int
mul
lods
jmp
out
popf
ja
mov
mov
dec
jo
and
int
add
mov
sbb
sub
test
pop
mov
pusha
push
mov
fldenv
push
mov
sub
out
push
rcl
push
add
xchg
enter
insl
pop
xchg
lock
add
dec
xor
mov
pushf
ss
sbb
jl
in
into
scas
xlat
dec
movsb
jmp
cltd
test
cmpsl
negl
fwait
call
mov
orb
mov
xchg
cli
or
push
or
inc
push
jle
sti
fsts
cmpl
push
loopne
mov
push
or
jg
iret
push
cld
xchg
dec
in
jno
fwait
cld
mov
insb
sti
mov
xor
adc
add
dec
fbstp
ss
push
test
mov
sti
and
push
or
mov
add
push
xchg
mov
imul
adc
lods
imul
add
divl
sbb
dec
cmp
int3
int
jbe
mov
cmp
lods
sbb
sub
insb
repnz
sbb
jp
das
lahf
jmp
dec
and
sar
push
xchg
add
xor
pop
ja
pop
xchg
cmp
push
clc
or
adc
sub
mov
dec
jl
cmp
frstor
lret
in
pop
ja
push
mov
loopne
stos
lahf
xchg
stc
mov
call
sbb
jne
inc
pusha
push
or
ljmp
xor
cltd
ds
mov
sbb
inc
cmc
push
push
push
xor
dec
sti
jecxz
dec
fistps
outsl
shlb
and
mov
inc
dec
stos
lret
push
ss
dec
pop
call
sti
inc
lret
mov
pop
pop
lahf
sub
mov
mov
mov
lret
add
mov
js
sbb
jb
mov
imul
mov
mov
jg
clc
and
sbb
fldl
pop
mov
dec
mov
add
inc
int
sbb
jo
mov
fiaddl
insb
dec
push
int
loope
arpl
movsb
jmp
cmp
adc
mov
and
loope
out
ja
out
sbb
push
ret
bswap
bnd
mov
pop
scas
add
fcomip
adc
xor
xadd
and
je
andb
out
jge
cmpsb
xlat
aad
dec
inc
xor
cmp
jp
push
xchg
pusha
pop
call
push
mov
xchg
addr16
dec
addl
mov
adc
jbe
adc
jecxz
int
or
loope
lods
mov
or
inc
aaa
pop
xor
daa
add
lods
leave
mov
mov
xor
fucomip
add
not
fcmovb
cmp
repz
sbb
ds
mov
repnz
mov
jno
loopne
in
jns
push
stos
test
mov
inc
rolb
fs
ret
adc
fimuls
xchg
mov
push
or
out
stc
xchg
rorl
push
or
mov
mov
dec
cmovp
cmp
adc
movsl
in
push
cmp
mov
mov
sub
mov
inc
xor
pop
jg
je
mov
or
out
jns
test
or
test
in
mov
sbb
leave
and
xchg
cmp
fsubrp
push
int
mov
cltd
xor
insl
mov
std
lahf
into
push
js
or
jnp
repz
mov
jge
jp
out
mov
and
xchg
rcll
jmp
mov
mov
pop
mov
mov
call
add
or
sub
loope
leave
mov
cmpl
jno
xchg
push
stos
lahf
xorb
bound
xor
insl
mov
out
mov
cld
mov
jmp
dec
arpl
push
jne
movsb
loope
mov
push
cmc
loope
je
loopne
insl
fsts
jl
getsec
sub
push
pop
lods
insb
fs
pop
jge
xor
dec
fisttps
scas
pop
mov
scas
fwait
es
in
push
clc
jbe
xchg
in
add
aas
sbb
mov
repnz
js
ljmp
int3
popa
pusha
cmp
adcl
sub
adc
popf
stos
mov
stos
cmp
sub
fbstp
or
ds
movb
jo
movb
sbb
sarb
mov
movsb
sub
and
push
push
mov
xor
push
push
push
pop
dec
xchg
imul
stc
sub
mov
fsubl
out
sbb
cmp
out
mov
ss
popa
movd
mov
xchg
iret
ret
dec
or
mov
mov
in
lea
insl
mov
js
inc
shr
cltd
push
jo
dec
add
mov
and
xlat
ljmp
mov
xor
dec
sub
adc
aad
push
adc
mov
icebp
or
jmp
ficoml
push
xchg
pop
enter
mov
mov
mov
fsubrs
das
cmp
aam
adc
pop
int
mov
jl
test
jl
or
ret
add
add
add
or
insb
push
push
jns,pt
add
jp
pop
es
xchg
lcall
add
adc
in
pop
xor
xchg
outsb
push
push
ficoml
mov
das
leave
push
jns
and
jmp
mov
mov
addl
pop
int3
lea
in
sbb
sub
adc
mov
scas
outsl
inc
jge
jb
shrb
sub
addr16
pop
ljmp
pop
test
daa
mov
pop
or
fisttpl
and
mov
or
rcrb
mov
fldenv
repnz
addr16
add
push
xchg
ret
sbb
sub
push
push
cmpsb
xchg
pop
fiaddl
jg
xor
das
push
stos
xorb
in
inc
dec
imul
adc
lods
std
sbb
or
push
cmpsb
xor
pop
xor
in
add
inc
leave
shl
sbb
sbb
call
scas
inc
mov
dec
mov
ja
lcall
mov
fisubrs
sbb
fisubrs
sub
jle
pusha
adc
pop
out
mov
xchg
icebp
addr16
mov
inc
sahf
xor
adc
pop
stos
and
shl
sti
mov
aad
lret
mov
mov
pop
arpl
mov
in
fnstcw
js
adc
rcrb
aam
sbb
mov
rcll
addb
subb
cld
pop
sub
and
jbe
and
mov
sahf
fisubrs
iret
or
flds
cmp
pop
iret
ljmp
xchg
loop
xchg
outsl
pop
lahf
xchg
shll
and
cwtl
mov
jno
frndint
mov
les
sahf
pop
mov
push
push
fists
sbb
popf
jne
push
lds
jge
cli
jnp
or
jg
jbe
cmp
cmpsl
rorl
sub
insl
mov
xor
adc
and
push
ds
dec
repnz
or
mov
ds
pushf
imul
ss
add
dec
mov
clc
dec
cmp
sub
popf
sbb
mov
jo
xor
loope
and
cmpsl
insb
ja
ja
lretw
mov
test
jmp
inc
rorl
jne
fs
adc
inc
int
pop
testl
mov
lds
lock
mov
push
and
inc
mov
inc
les
ds
xchg
mov
sub
ja
shll
pop
ret
in
sarb
mov
mov
cwtl
cwtl
cli
and
mov
mov
mov
mov
fnstcw
xor
pop
clc
pop
ret
mov
jmp
inc
lcall
push
or
and
pop
mov
mov
data16
xlat
scas
jmp
pop
push
mov
les
and
sub
push
xchg
orb
or
jle
mov
or
xchg
dec
jbe
xchg
addr16
scas
repnz
xchg
loopne
rclb
xchg
add
mov
outsl
popf
stos
cmp
mov
ret
ret
jae
andb
mov
push
mov
sub
fcmovu
pop
mov
xor
repz
fmull
repnz
sti
dec
outsl
out
scas
dec
and
jmp
sub
loop
outsl
int3
cmpl
jge
rolb
jne
inc
bound
xlat
nop
and
xchg
enter
movb
lea
aaa
add
push
fs
outsl
ffreep
loop
add
jb
idivb
outsl
lds
insl
mov
ret
pop
mov
xorl
or
cmp
jae
push
pusha
xor
test
jae
and
mov
lock
xor
sub
mov
popf
dec
jg
mov
popf
jae
mov
dec
mov
push
clc
adc
loop
mov
push
cmp
pop
or
aam
into
into
jecxz
add
cmp
insl
mov
fisubrs
mov
jno
in
fnstsw
sbb
jno
insl
lods
cld
mov
sub
sub
sub
cmpsl
lretw
push
fdivs
pop
push
fsubrl
jnp
arpl
xor
mov
clc
mov
sub
cltd
lahf
jp
push
shlb
int
leave
aad
hlt
or
daa
adc
dec
into
or
fnstenv
fists
push
testl
stos
mov
aaa
ret
push
ret
pop
cwtl
subb
xchg
int3
sahf
enter
cmp
and
mov
jl
xchg
jge
xor
test
jb
lret
mov
add
and
push
mov
fnsave
cmpl
inc
cmpsb
nop
xor
push
xor
jmp
clc
mov
fistl
cmp
ss
shl
jnp
jnp
scas
xchg
inc
sbb
push
push
sahf
and
sub
pop
in
jo
adc
adc
mov
add
push
inc
ja
ret
gs
iret
sbb
sbb
in
mov
jg,pn
enter
mov
fs
int3
mov
jb
cwtl
fidivrl
sbb
clc
and
dec
lcall
or
mov
dec
cltd
arpl
je
sub
inc
pop
jle
inc
cwtl
lret
andb
aam
cmpsb
pop
out
aaa
xor
test
sbb
xchg
mov
cld
adc
addr16
push
push
dec
ljmp
sbb
xchg
sub
pop
xor
lret
stos
inc
mov
hlt
push
mov
xchg
dec
inc
or
jmp
shl
xchg
popf
cltd
sahf
insb
and
es
xor
mov
ret
sbb
xor
xchg
std
mulb
in
mov
les
sub
push
call
mov
cmpsl
sbb
sub
dec
dec
ficomps
mov
gs
dec
in
mov
pop
mov
ss
js
jecxz
jecxz
jbe
xchg
daa
pop
lea
ja
inc
sub
in
xchg
sbb
pop
gs
xor
pop
cli
jb
scas
jnp
shrl
adcw
ror
inc
jecxz
dec
js
inc
push
jg
je
adc
jmp
mov
jnp
push
or
es
cmp
test
mov
mov
cmp
jecxz
data16
lea
cmp
scas
out
ja
enter
outsl
or
add
rcl
and
mov
jb
shrl
mov
mov
sub
push
sbb
or
adc
out
inc
pushl
outsl
pop
enter
hlt
pop
test
add
mov
mov
int3
or
pushf
fldl
scas
push
xor
jno
lahf
xor
leave
movl
cmp
sub
pop
xor
mov
xchg
dec
ljmp
in
pop
stos
mov
inc
sti
add
push
pop
js
mov
add
lock
shl
pop
cmp
fisubl
lock
scas
scas
out
cmp
cmp
add
pmaxsw
cmp
add
jmp
cmpsb
push
cmp
pop
push
cmp
push
addr16
popf
incb
lret
jp
mov
mov
mov
test
dec
sub
cmp
pushf
arpl
push
mov
or
xor
lock
mov
into
ret
adc
add
or
je
xchg
repz
or
insb
inc
lock
pop
pop
mov
mov
stc
es
xor
cmp
adc
aas
bound
mov
add
int3
out
in
jge
call
mov
inc
out
add
pop
movhps
sub
pop
ret
push
cmp
test
adc
movsl
repnz
enter
or
pop
mov
les
inc
repnz
xor
adc
and
js
push
mov
cmp
rolb
fcmove
pop
out
or
repz
dec
sbb
stc
rcrl
clc
test
sbb
fstps
xor
sub
neg
mov
pop
sbb
iret
stos
mov
iret
push
cli
mov
pop
je
pop
cmp
sbb
lods
shrb
shlb
pop
sub
popf
popa
push
ret
testl
inc
jecxz
pop
push
iret
jne
pop
cmp
movsl
jp
ljmp
mov
or
and
jo
shlb
pop
in
and
push
dec
sbb
subl
mov
ja
hlt
stos
sub
ja
or
mov
pop
into
int
bound
or
push
cmp
mov
jb
shrl
mulb
add
push
add
fwait
mov
pop
jp
popa
call
enter
ss
lahf
push
int
xchg
fidivrs
mov
inc
push
out
loope
int
loope
push
iret
mov
fs
jns
arpl
push
into
push
cmp
cmp
flds
adc
icebp
test
lret
shll
xor
inc
hlt
add
repz
lahf
ds
stos
notb
rorl
inc
sbb
imul
push
mov
and
inc
sbb
dec
femms
push
lahf
dec
xor
add
dec
call
loope
cmc
push
addr16
mov
adc
add
jae
lock
cld
js
push
mov
mov
rorl
adc
rorl
lret
xlat
push
pop
xchg
outsl
xor
mov
sahf
jg
icebp
fcmove
fisttps
es
mov
pop
mov
lret
jns
mov
pop
test
sbb
cmp
adc
pop
sahf
cmc
divb
mov
mov
dec
pop
call
dec
lods
mov
xlat
xor
test
push
xor
jne
ficomps
add
push
scas
add
inc
shr
sbb
xorb
pop
jl
sbb
lock
cltd
ss
arpl
mov
add
mov
pop
add
or
loope
jnp
repnz
xchg
sahf
std
jne
out
pop
add
jmp
es
inc
mov
push
enter
pop
mov
mov
lods
das
sbb
add
sbb
jle
xlat
or
fstps
jno
sbb
mov
xchg
ret
adc
cwtl
push
and
ret
cs
cmpl
jg
and
seta
shll
in
mov
enter
jge
orl
leave
pusha
mov
adc
aad
pop
pop
pop
cmp
insb
pop
inc
mov
mov
inc
test
les
insb
movb
test
testb
or
popa
aad
rcl
pushl
mov
mov
xor
cmpsl
fwait
push
mov
jmp
pop
push
movsl
insb
or
jle
inc
insb
cmpl
add
repz
outsb
popf
push
fimull
inc
idiv
sub
mov
cmc
jle
icebp
imul
xchg
inc
pop
jbe
imul
das
xor
movsb
push
and
fstps
xor
movl
jmp
sahf
and
sub
hlt
and
outsb
cli
jns
xchg
and
pop
add
cmp
addr16
rorl
lret
ss
push
sub
les
mov
insl
loop
xor
cwtl
insb
sahf
dec
or
sbb
push
shlb
xlat
pop
cmp
xor
adc
xchg
mov
mov
inc
xchg
in
push
sub
push
and
xor
and
into
test
in
pop
and
add
cmc
addr16
push
sbb
subl
inc
stc
dec
sti
test
bound
ds
sbb
cmp
inc
cmp
gs
xchg
outsb
ret
lock
pop
lret
or
or
sbb
sub
inc
mov
push
in
inc
and
mov
jecxz
pop
pop
je
xor
xchg
pop
lock
xlat
inc
popf
and
and
cmpsl
push
out
adc
adc
add
cmp
nop
push
fistps
pop
stos
mov
dec
adc
mov
in
jge
xchg
mov
dec
cltd
or
decb
jl
loope
test
or
test
dec
sti
bound
rcll
fadd
and
sub
xor
cmpsl
push
pop
fwait
repz
stos
fisubrl
pop
ret
or
and
add
or
mov
int
daa
insl
outsl
push
popf
add
sub
and
and
xchg
and
fcom
or
add
sub
jmp
and
jg
stos
addr16
repnz
fdivrs
sbb
into
add
inc
int3
cmc
or
dec
pop
xor
cmc
mov
mov
cmp
loope
test
ret
xchg
push
cmp
into
add
or
sbb
mov
jo
push
cld
push
fmul
fstpl
cmp
outsb
pop
pusha
dec
pop
call
adc
push
jp
shrb
pop
sub
and
or
lods
std
imul
jmp
jle
stc
iret
xchg
addr16
and
jns
sub
stos
cmp
out
loop
bound
mov
add
sti
jns
fs
jns
ss
mov
iret
push
jg
and
mov
dec
inc
mov
ret
xor
fwait
or
sahf
jmp
stos
insl
mov
pop
es
lods
push
negl
mov
mov
div
or
out
and
sbb
fstps
aaa
jl
mov
and
jge
ss
mov
das
dec
or
gs
mov
nop
fbld
movsl
int
je
push
or
xchg
lcall
pop
jno
les
jg
repnz
sbb
sub
lea
aas
loopne
or
divb
cwtl
outsl
in
xor
mov
cmpsl
add
mul
dec
aad
stc
outsl
ret
jl
pop
dec
xlat
inc
mov
push
xor
inc
les
pop
pushf
in
inc
cwtl
or
xchg
or
ficoml
xor
sahf
jg
lret
pop
data16
test
lods
push
ret
xchg
addr16
lret
leave
or
push
adc
xor
sub
es
adc
dec
and
adc
cli
sti
sub
cmp
cmp
and
stos
pop
inc
inc
fstp
push
adc
out
jb
and
aam
inc
les
mov
add
lock
pop
sbb
cltd
dec
aam
pop
jb
loop
pop
mov
dec
arpl
jb
jbe
push
insl
shll
pop
xchg
push
loopne
ljmp
pop
push
cmpb
out
cmc
mov
sub
sbb
in
jne
pusha
clc
vshufps
xchg
enter
and
mov
idiv
test
insb
loop
mov
fldl
mov
inc
cmp
int
push
mov
stc
pop
xchg
mov
pop
je
and
jb
xor
and
test
bound
pop
jge
dec
jl
outsb
ret
fcmove
rcrb
or
xor
in
sahf
jmp
xchg
outsl
mov
mov
lods
ja
jl
sahf
jecxz
cld
cmp
iret
aad
shrl
lods
repz
cltd
data16
mov
fs
push
dec
in
adc
stos
mov
imul
or
xor
inc
in
cs
pop
pop
jle
sbb
push
iret
inc
sub
push
inc
add
sbb
sub
insb
std
mov
lret
push
in
test
xchg
out
sarl
jnp
cmpsl
out
mov
iret
mov
dec
ja
and
repnz
loope
cmc
mov
adc
sub
pop
sbb
xchg
int
in
lret
sub
mov
inc
pop
out
test
xchg
cli
orl
mov
nop
xor
pop
cmp
sbbb
mov
repz
adc
cmpsl
int
pop
pusha
ds
mov
stos
icebp
xchg
mov
sub
or
pop
test
scas
adc
inc
int3
imul
add
fidivrs
xchg
push
cmp
jno
pop
mov
ljmp
dec
inc
loope
out
test
pop
mov
fcmovnbe
gs
fnstcw
lahf
cmc
xor
jns
std
nop
pop
pop
in
adc
mov
outsb
xlat
mov
jns
push
movsb
in
repz
push
stc
call
dec
cli
sub
xorl
mov
jns
call
es
in
rorl
jg
mov
pop
cmp
jo
add
sti
stc
xor
arpl
stos
mov
cmp
add
dec
inc
pushf
sub
stc
lret
mov
test
pop
arpl
mov
out
adc
negl
clc
pop
cli
sti
mov
fdivl
or
lea
mov
dec
rolb
call
outsl
mov
xchg
sbb
lret
fistps
push
adc
mov
pushf
rcrb
mov
adc
xchg
aam
add
cmp
loopne
dec
xchg
xchg
repnz
movsl
dec
inc
cmp
popf
icebp
lock
inc
pop
fisttps
jnp
sahf
cld
lahf
push
cs
jmp
loope,pt
in
adc
enter
jge
lods
jne
stos
js
and
add
lds
adc
jb
inc
fsub
mov
scas
mov
adc
sahf
scas
xchg
mov
mov
pop
mov
mov
sub
enter
in
into
pop
push
cmp
mov
cmp
into
mov
xchg
jno
jge
scas
mov
out
fwait
leave
dec
and
pop
dec
xchg
pushf
jmp
jo
lcall
and
adc
repz
adc
icebp
lods
jl
push
ljmp
divl
jns
sbb
xchg
cmp
outsl
add
xor
jne
or
out
xor
adc
out
mov
dec
std
or
xchg
inc
icebp
filds
pushf
pop
mov
daa
xor
inc
and
rorb
sbb
aam
sti
sbb
pop
sarb
pop
test
sbb
jbe
inc
mov
scas
cld
pop
pop
out
scas
imul
insb
pop
repz
mov
and
pop
insl
xor
popa
mov
das
mov
mov
jmp
in
scas
lock
jge
jle
out
add
imul
pop
and
insb
xchg
xchg
clc
pushl
cwtl
mov
inc
dec
jne
pushf
lret
mov
scas
js
inc
nop
jno
imul
mov
xchg
fcoms
mov
sub
movsb
cmp
mov
add
out
mov
hlt
add
inc
cmp
inc
cltd
mov
inc
aaa
aaa
mov
mov
xor
imul
call
lds
mov
ret
mov
add
cmp
xor
sub
adc
jbe
mov
cmp
in
and
mov
mov
enter
in
dec
adc
push
jns
add
jbe
jno
inc
aam
push
cmpsb
mov
outsb
mov
or
rol
mov
lret
sbb
fmuls
mov
or
sub
in
push
in
in
repnz
sbb
movsb
sti
jl
mov
inc
jo
xchg
lcall
fs
jge
jo
dec
sub
and
mov
xor
jge
xor
mov
aas
int3
jmp
adc
inc
daa
mov
fs
xlat
fstps
and
jnp
insl
fsts
divps
enter
pop
pop
lahf
mov
add
or
je
add
mov
jnp
mov
push
sub
rolb
sbb
test
cmpsb
insb
mull
fldt
mov
cmpsl
cli
push
xchg
inc
push
xor
lea
lock
jne
cmp
xor
or
mov
fisttpl
mov
bound
mov
and
and
pop
sbb
mov
repz
fs
aad
inc
movsb
jb
jae
adc
jp
mov
in
stc
mov
sub
mov
jp
and
pusha
adc
adc
sub
fs
outsl
adc
cli
pop
sbb
loope
ja
dec
lea
add
or
add
sbb
iret
sub
stc
movsb
stc
ret
pop
xor
popf
js
and
push
jno
sub
sub
insl
push
je
out
inc
inc
into
mov
ljmp
jecxz
out
pop
arpl
mov
push
xchg
daa
aaa
mov
inc
fistps
mov
sub
jno
adc
sub
les
js
mov
imul
push
out
pop
mov
xchg
jge
mov
push
jge
and
rcrb
ljmp
mov
mov
fstpt
inc
arpl
jmp
sbb
call
ret
pushf
movsb
adc
sbb
das
add
pop
mov
push
push
daa
sub
in
xchg
fcoms
inc
lcall
cmc
or
mov
mov
out
js
jb
xchg
cwtl
jbe
sbb
or
mov
pop
lods
scas
cmp
loope
mulb
xor
aaa
sbb
out
loopne
xor
jno
pop
aaa
dec
mov
pop
or
repz
pop
adcb
jg
dec
sahf
inc
sbb
inc
pop
shl
add
jmp
das
incl
lods
movsb
pop
adcl
and
into
cmp
mov
inc
fucomp
dec
fistpl
call
jo
fiaddl
leave
stos
push
inc
iret
test
aad
xorb
fdivrl
mov
out
pop
or
sub
push
jl
add
insb
add
adc
das
push
mov
mov
bound
pop
mov
mov
mov
and
inc
mov
ds
or
into
mov
push
sbb
jp
mov
pushf
pushf
loopne
jge
xchg
adc
jl
jp
insl
and
sbb
test
sub
rolb
push
and
repnz
popf
xchg
push
rcrl
mov
hlt
pop
jo,pn
in
popf
scas
jg
rorl
test
fimuls
mov
pop
adc
shlb
mov
into
loop
arpl
and
sub
int3
mov
aaa
mov
out
sbb
add
and
popl
cmp
jno
adc
aaa
lahf
and
out
ljmp
add
xchg
loop
enter
fst
fnstenv
clc
push
movb
sbb
fucomp
mov
xchg
lock
dec
adc
inc
mov
xlat
cmp
je
orb
ljmp
out
xlat
shlb
cltd
js
sub
lods
push
insb
fisubl
xor
pop
sbb
adcb
mov
mov
sub
add
sub
push
loope
cli
icebp
shll
mov
pop
xor
adc
mov
dec
icebp
lret
movsl
out
loop
pop
dec
pushf
mov
orb
cmp
mov
ret
lods
add
aad
dec
xor
ficomps
out
or
sub
in
pop
push
cld
mov
jne
and
jp
pop
cwtl
add
mov
inc
lret
inc
and
xchg
ficomps
ficomps
lock
test
out
mov
or
push
movsl
jb
sbb
dec
outsb
jecxz
push
loope
xchg
xchg
sbb
lret
or
and
dec
into
outsl
mov
push
fstpl
adc
scas
jno
mov
out
notb
add
dec
lock
jno
sbb
jecxz
cmp
popf
movsb
enter
sahf
sbb
xchg
push
xchg
mov
lods
adc
outsl
dec
rol
test
ds
popa
std
and
pop
test
loope
jmp
sub
mov
mov
or
inc
push
mov
add
addr16
xor
or
jb
mov
mov
fwait
jle
adc
jo
pop
mov
inc
dec
popa
pop
xchg
xchg
fldcw
lods
jle
test
out
jg
add
mov
aaa
xor
call
xor
dec
pop
lret
sub
sti
and
sub
ja
rolb
push
mov
xchg
add
cmpsb
inc
xchg
bound
xor
or
fisubs
fidivrl
ror
inc
jo
fnstcw
inc
xchg
mov
mov
jne
sbb
xor
jle
push
push
jbe
mov
jnp
es
into
adc
mov
push
rorb
adc
outsb
fnstsw
pusha
push
push
push
in
adc
cmp
mov
push
rorb
pop
imul
mov
stc
imul
jmp
in
in
addb
sbb
or
lret
fstps
rorb
cld
pop
push
mov
cmpsb
fnstcw
add
dec
fwait
mov
add
add
inc
jnp
push
inc
movsb
fwait
mov
clc
ret
popf
pop
push
dec
jne
cmp
insb
out
cmpsb
out
fimull
stos
gs
rcl
mov
les
arpl
jno
sbb
xor
test
cmp
jo
pop
aad
push
pop
mov
mov
cltd
sub
loope
sarl
mov
ret
xchg
add
stos
ret
push
adc
cli
add
mov
inc
fadd
cmp
dec
sub
jecxz
cld
popa
setp
test
sbb
testl
sub
jo
aam
add
into
pusha
or
inc
adc
mov
loop
mov
test
and
sbb
movsl
stos
adc
mov
xor
and
ljmp
adc
pop
mov
push
jnp
push
ret
cli
inc
push
insl
lods
mov
add
xlat
lret
cmp
cmp
cmp
xchg
aaa
dec
adc
dec
stos
arpl
aaa
jge
adc
cmp
cmpsl
rolb
jo
jne
xor
dec
cltd
pop
sahf
fisubrl
imul
shl
jecxz
or
sbb
mov
push
in
arpl
stos
push
into
iret
mov
mov
fldcw
push
lret
mov
out
es
adc
scas
in
push
xchg
mov
mov
repz
cmpb
mov
mov
ja
movsl
testl
inc
dec
sbb
xor
mov
fstps
arpl
loope
or
cmp
sbb
sub
faddl
or
fdivs
in
jl
adc
testl
arpl
mov
stos
pop
sub
push
jl
pop
scas
mov
stc
pushf
sar
and
pop
sbb
out
cs
jp
cmc
movsb
and
ret
fnstenv
xchg
mov
sub
aam
test
fnstsw
addb
jecxz
fstpt
adc
jae
or
repnz
les
imul
and
ds
das
push
xor
push
add
push
mov
stos
cmc
test
adc
frstor
sbb
in
fidivrs
popf
mov
pop
or
call
fs
fiadds
and
sub
lahf
dec
roll
jecxz
popf
insl
test
mov
ljmp
and
aas
inc
faddl
shl
arpl
cmc
cmp
sarl
mov
out
xchg
sbb
imul
dec
std
pop
push
in
pop
dec
adc
ja
push
cwtl
fistl
mov
mov
outsb
arpl
roll
lock
jno
xlat
mov
xchg
cmp
aaa
icebp
and
loope
jb
pop
gs
jno
adc
cmp
insb
shl
mov
lcall
cmp
lahf
clc
mov
in
mov
dec
es
dec
mov
fldl
mov
rolb
sub
hlt
mov
pop
out
pusha
adc
push
xchg
jge
aas
xchg
pop
stc
imul
nop
push
rorl
add
adcl
lahf
stc
add
clc
out
imul
incb
push
xchg
fstps
xchg
add
js
and
std
hlt
sti
sbb
out
jns
dec
rcrl
sub
pop
arpl
mov
mov
loopne
dec
mov
add
iret
mov
and
aas
fs
pop
mov
bound
inc
mov
inc
sbb
sub
aad
add
push
jecxz
into
sub
dec
jne
jmp
push
pop
cld
cltd
int
das
dec
icebp
pushf
lds
sub
ficoms
adc
dec
mov
aas
xchg
orb
adc
call
cmpsl
leave
xchg
adcl
mov
sbb
ret
lahf
mov
adc
out
inc
imul
adc
ljmp
popa
dec
aaa
push
inc
mov
or
mov
cld
jno
mov
in
xchg
cmpsb
scas
shr
jmp
mov
repz
xor
adc
ret
ss
push
insb
pop
out
jmp
cld
test
and
jne
inc
and
jo
orl
adc
push
xchg
push
dec
inc
stc
or
call
insb
scas
mov
add
jmp
jg
inc
adc
mov
test
call
push
stos
add
popf
xchg
stc
scas
call
sub
jbe,pt
xchg
xchg
fmul
dec
mov
or
repz
loopne
les
in
push
cltd
sbb
call
insb
es
outsl
and
mov
xchg
cltd
clc
cmpsb
add
xchg
add
or
xchg
sub
je
test
ret
xchg
repnz
xchg
aas
leave
mov
cmp
or
dec
imulb
push
sub
cmc
sub
cmpsb
push
std
cmp
loope
xchg
or
aad
pop
add
lock
fists
dec
xor
jp
and
out
adc
bnd
and
sub
insb
pop
fs
aad
sahf
push
shl
stc
xor
in
mov
xorl
js
push
push
pusha
rol
jnp
fisubs
cli
fdivl
shlb
in
xor
and
lods
arpl
xlat
cmp
stos
xor
cwtl
jl
call
pop
sti
adc
and
cs
lahf
pop
inc
jbe
cmpsb
sbb
cmp
fs
xchg
push
es
fisubrs
cmpsl
xor
push
aaa
sub
jecxz
js
aam
jbe
cmpsb
mov
mov
jmp
sbb
jge
fldenv
inc
int3
and
dec
dec
jg
mov
das
push
inc
lret
lock
inc
sbb
jae
fwait
daa
mov
arpl
dec
or
aaa
adc
data16
pop
jp
add
out
pop
sub
fisubl
dec
test
loopne
lock
add
loopne
outsb
cmp
out
jne
xchg
sub
xchg
es
mov
sbb
mov
mov
add
sub
sbb
mov
xor
sub
adc
cld
jns
fcoms
sub
rol
movsb
cmp
and
outsb
iret
xlat
pop
fists
cmpsb
push
lahf
mov
or
mov
mov
jo
sbb
adc
add
mov
add
dec
aas
and
push
mul
mov
fimuls
lret
dec
repz
adc
dec
xchg
and
jp
inc
ss
jle
stos
imul
push
dec
outsl
cmp
dec
sub
cmp
xor
nop
flds
jle
fmuls
rcr
mov
int3
jo
daa
mov
mov
aas
das
std
and
mov
lock
or
mov
sarl
int
shl
xchg
add
inc
xchg
cltd
stos
adc
and
fdiv
bound
mov
push
pop
fwait
pop
aad
xchg
cmpsb
mov
push
bound
mov
mov
push
sub
mov
outsl
fistl
push
in
sub
cmp
sbb
dec
jp
jae
mov
or
sub
jl
mov
push
dec
mulb
ret
scas
cmp
das
pop
mov
push
or
pushf
dec
and
ljmp
xor
ffreep
scas
dec
mov
es
insb
xchg
clc
sbb
ret
aas
dec
pop
aam
push
jnp
inc
push
adc
xor
mov
sub
jmp
cmpsl
pop
ljmp
imul
xor
xchg
les
cld
dec
dec
mov
xor
xor
xchg
in
adc
fdivrl
xor
jno
mov
aad
push
idivl
mov
jle
test
repz
or
insl
pop
cmp
test
push
lret
jl
xor
ret
in
pushf
inc
iret
xchg
sub
xchg
repnz
call
xlat
mov
adc
dec
and
and
pop
mov
mov
ret
rcll
jo
or
push
call
pusha
ljmp
cmp
je
xor
and
xchg
fs
cmpsb
mov
pop
inc
adc
repnz
or
push
pop
aad
and
rolb
pop
inc
and
test
daa
icebp
out
lods
into
movsb
stos
cmp
inc
mov
xchg
aaa
mov
push
jns
xor
inc
loope
mov
push
daa
adc
sub
mov
adc
movsl
and
mov
in
fnstcw
lret
xor
adcl
fsubs
and
fs
inc
xlat
lret
call
dec
push
ret
leave
stos
sbb
push
mov
pusha
shll
pop
dec
loopne
sbb
xchg
mov
pop
xchg
insl
xor
sub
notl
roll
stos
stc
xchg
inc
nop
xchg
in
popf
sbbb
rcrl
test
fildl
sar
bound
jns
mov
xor
xor
inc
jne
push
jns
mov
imul
dec
arpl
or
cmp
shll
dec
daa
pop
sub
pop
add
sahf
jb
je
sub
ja
ficoms
pop
mov
pop
mov
fmul
cmp
idivb
sub
stos
cmp
cltd
inc
xor
mov
xchg
jns
fldt
and
ds
and
or
add
nop
xchg
mov
std
mov
std
inc
xchg
movsl
sbb
cmp
lret
jno
sbb
add
mov
in
pop
mov
test
sub
pop
pop
inc
mov
mov
repz
imul
jmp
push
xchg
add
dec
cmp
ret
fidivs
aaa
jb
adc
adc
iret
jmp
cmp
and
out
jno
outsl
roll
jmp
xchg
int
iret
pop
jle
fiadds
dec
or
push
mov
mov
add
popa
and
jmp
jle
lahf
out
xchg
mov
or
pop
xor
test
clc
jo
jmp
push
or
idiv
movsb
fisubs
mov
jne
in
mov
inc
mov
mov
sbb
subb
mov
push
test
sbb
sub
orl
mov
mov
xor
push
xchg
mov
lds
repz
popa
or
imul
fildll
xor
popf
stos
movsb
push
sub
sub
fs
push
xchg
xchg
pop
inc
or
mov
add
cmp
fnstenv
arpl
mov
repnz
jge
mov
or
or
jl
dec
dec
pop
cmp
adc
mov
adcl
pushf
std
xchg
cmc
scas
mov
cmc
inc
xlat
jbe
outsb
sbb
test
jbe
loop
jo
pop
xor
jl
jl
hlt
aam
mov
mov
sahf
roll
out
mov
xor
dec
enter
in
jae
enter
pushf
dec
mov
gs
adc
sbb
cmp
lods
push
outsb
stos
xor
mov
dec
clc
push
sbb
cmc
xchg
mov
inc
fsubrl
pop
xchg
negb
push
pop
and
pop
dec
out
inc
sbb
sub
dec
mull
out
inc
mov
cmp
dec
adc
subb
mov
mov
test
xchg
imul
pop
inc
adc
inc
cli
cmpl
xor
sbb
ljmp
das
testb
aaa
or
inc
mov
lahf
or
jecxz
aaa
test
dec
dec
jne
pop
cs
cmp
into
jmp
dec
dec
inc
or
inc
test
inc
in
xchg
es
mov
dec
repnz
sub
sub
xchg
cli
sbb
cli
inc
sub
mov
ljmp
xchg
jp
jns
and
gs
xchg
es
push
mov
jae
sbb
clc
adc
and
cmpsl
xor
insl
inc
out
inc
xor
out
in
les
xor
mov
push
insb
cmc
jp
mov
xchg
inc
aas
sbb
cltd
orb
test
cs
movsb
push
mov
rcll
mov
xchg
out
sub
cmpb
les
jge
je
insb
push
xchg
mov
ja
push
icebp
xchg
sub
daa
cmpsb
mov
loope
sub
jne
jmp
fdivs
lods
sub
cmp
jno
mov
je
xchg
hlt
push
ds
xchg
call
pop
fdiv
pop
adc
int
faddl
xchg
mov
rcl
inc
xchg
lock
jns
insl
push
dec
mov
out
in
and
sbb
add
cmc
jne
inc
jne
add
shr
aad
sbb
test
jg
mov
inc
mov
jmp
sti
mov
hlt
xchg
loop
mov
cmp
in
push
pop
test
cmpb
addr16
or
leave
popa
jns
bound
push
test
sbb
popf
int
out
fstp
scas
push
bound
pop
pop
and
popf
add
lcall
hlt
cmp
movsb
dec
lds
mov
or
enter
pop
fdivl
js
fildll
gs
sub
std
push
pop
xchg
push
scas
scas
call
adc
ret
dec
xchg
aaa
jno
dec
das
pop
and
jge
inc
repnz
repz
movsb
adc
fcoms
and
ja
lds
push
test
es
cwtl
pusha
loope
fstpl
andl
sbb
add
mov
jno
mov
pop
je
jns
push
aaa
popf
aad
push
sbb
lea
stc
stc
push
or
std
rclb
adc
int3
dec
iret
scas
aam
bound
out
sbb
xchg
jle
outsl
mov
push
in
inc
shll
and
rorb
aas
add
insl
insb
mov
pop
test
adc
mov
jl
xor
inc
inc
out
sbb
hlt
stc
aas
adc
inc
ss
fisubrl
je
add
lea
lods
lcall
roll
add
dec
dec
dec
ljmp
imul
xor
ret
and
push
cmp
psubusb
lahf
inc
les
pop
sbb
daa
mov
cli
mov
pop
arpl
outsb
pop
inc
inc
stos
outsb
xchg
les
addr16
test
pop
jbe
jnp
adc
jno
dec
les
icebp
les
inc
sub
ds
mov
shrl
loop
inc
push
ret
push
sbb
daa
and
pushf
aaa
or
in
ja
xor
mov
cmp
subl
mov
inc
dec
in
add
les
mov
in
stc
lret
repnz
or
add
and
outsb
adc
jbe
lods
adc
fsubrl
shl
test
faddl
test
and
mov
sub
inc
xchg
aad
lods
add
aam
ds
negb
fildll
gs
lea
mov
iret
les
fildl
pop
enter
sahf
push
loop
cs
aas
push
sar
or
jno
fiaddl
inc
negb
mov
jge
sub
repnz
push
inc
sbb
cmp
enter
inc
hlt
fidivrl
mov
mov
and
push
outsl
lods
adc
daa
mov
push
push
stc
sahf
pop
in
inc
mov
insl
rorl
push
cltd
loope
jge
fldl
lock
mov
dec
into
pushf
fisubs
jmp
into
pop
inc
cmp
push
fsubrs
mov
push
pop
int
cmpsl
add
rcll
mull
outsb
dec
or
cmp
movsl
mov
insl
enter
pop
icebp
rorl
cmpsl
xor
les
cs
stc
popa
lds
add
stos
aaa
xchg
cmp
test
mov
mov
xchg
fnstenv
and
out
test
in
jmp
mov
lahf
inc
aas
loop
xchg
lahf
loope
xor
aad
stc
pop
sub
repnz
fcmovne
add
sbb
sti
nop
xchg
outsb
cwtd
push
xchg
mov
jmp
pop
hlt
lret
out
and
lods
add
mov
iret
jle
inc
cli
xchg
aad
lock
pop
or
dec
push
xchg
lods
cmpl
test
ljmp
in
into
inc
shl
aam
mov
mov
sub
sbb
dec
mov
sti
in
xor
sub
xor
pop
lods
popf
dec
repnz
mov
mov
jns
push
sub
and
jns
xchg
int3
cltd
js
xor
push
jg
pusha
or
lcall
mov
vmovupd
in
add
clc
imul
xchg
je
or
enter
in
mov
popf
iret
mov
pusha
push
jno
mov
jge
push
mov
lods
jbe
or
mov
jnp
jno
mov
rcl
movsl
vpmaxub
inc
nop
inc
sbb
xchg
pop
jge
dec
pop
cmp
and
mov
jnp
adc
pop
in
cmp
push
and
lcall
lock
or
mov
cmpsl
xlat
int
loopne
ret
and
test
mov
scas
enter
leave
incb
push
pop
and
mov
mov
into
xchg
mov
mov
loopne
mov
and
es
and
dec
incb
jg
cmp
lcall
gs
clc
mov
unpcklps
fidivrs
jbe
ret
ds
mov
mov
inc
and
pop
mov
incb
lods
adc
mov
js
mov
fisubrs
pop
push
aad
int
sbb
pop
cmp
adc
and
sbb
les
icebp
mov
stc
push
das
mov
shlb
movsb
or
fwait
sub
arpl
scas
nop
push
push
pop
inc
xor
lcall
repz
push
lock
mov
lret
mov
leave
addb
loope
pop
mov
add
and
pop
dec
xchg
lea
inc
adc
ds
cmc
sub
int3
mov
jp
inc
add
sub
cmc
dec
xor
fsubl
jne
arpl
push
jnp
sbb
xchg
ja
cwtl
jno
je
imul
popf
int
xchg
in
jp
xchg
es
fimuls
sub
mov
mov
leave
scas
stos
ret
ja
ja
mov
aaa
adc
xorl
cltd
stos
lods
sbb
out
repz
sub
cmp
testb
je
cltd
mov
or
popa
outsl
or
out
jne
pop
inc
jne
sar
inc
push
leave
enter
scas
xor
jge
sti
rcrb
mov
xlat
popf
sarl
xchg
mov
mov
dec
icebp
and
jne
sbb
rcrl
lcall
add
push
outsl
aad
hlt
leave
cmp
data16
lock
xchg
add
cmp
scas
pop
orb
outsl
xchg
add
lock
fimull
add
lods
xchg
pop
and
cli
sub
pop
or
cmpb
inc
sbb
rcll
jns
loop
push
pop
enter
jecxz
and
cmp
push
mov
xchg
lods
or
test
ljmp
js
cmp
mov
jne
push
test
andb
insb
inc
stos
outsb
pop
fstpt
jo
push
add
ljmp
pusha
lretw
arpl
mov
sbb
mov
jecxz
mov
xchg
pop
loopne
jmp
rcr
and
notb
test
mov
sti
dec
enter
aaa
push
insl
cld
sbb
xor
mov
or
pop
loopne
lret
addl
and
mov
sub
call
and
test
or
rorl
inc
dec
jp
sbb
fisubrs
ficoml
or
mov
or
sbb
fs
or
push
xchg
lahf
sub
popa
ficompl
push
stos
pop
push
lahf
scas
sbbb
aas
and
ret
sbb
mov
mov
out
push
dec
cmp
mov
jecxz
pop
lcall
push
scas
sub
jbe
jo
idivb
jge
adc
cli
je
daa
xor
sbb
adc
or
push
mulb
adc
push
or
pop
or
xchg
vorpd
lock
addr16
adc
sbb
inc
xchg
xor
adc
popa
push
bound
imul
and
negl
lds
push
mov
mov
pop
adc
inc
and
pop
cmp
mov
jnp
dec
lock
fsub
repnz
or
sti
jo
adc
xchg
repnz
pop
push
pop
dec
inc
fsubs
sti
dec
add
arpl
cmp
jl
test
pop
out
cltd
test
or
inc
loope,pn
test
lds
mov
andl
test
xchg
pop
jle
inc
cmp
inc
add
or
clc
outsl
sub
out
mov
xor
push
mov
dec
lods
data16
add
jge
push
and
jae
inc
lods
and
add
test
aaa
cmpsl
lcall
inc
jbe
rorl
xor
stos
lret
cs
add
popa
dec
test
add
shlb
inc
adc
lock
cmp
testb
inc
stc
adc
xor
iret
mov
push
mov
test
jg
stos
and
cmp
inc
push
icebp
test
cmp
push
xchg
test
jns
out
repz
ljmp
scas
pop
jmp
mov
cli
pop
negb
dec
push
test
setno
inc
and
cmp
lods
cmp
mov
mov
cmp
js
mov
nop
lock
mov
stos
cwtl
mov
push
add
mov
xor
mov
jmp
test
dec
jae
or
xor
call
loopne
dec
bound
pop
inc
test
das
push
lcall
in
loope
sub
mov
iret
xor
rcl
xchg
insl
mov
ds
insl
xchg
lock
in
mov
cmp
lods
addl
inc
mov
and
test
fwait
out
fs
ret
mov
or
and
sti
mov
insl
sbb
sub
pop
popf
push
into
dec
je
mov
push
dec
das
incb
dec
outsl
sub
lret
mov
dec
xchg
test
cwtl
push
into
repz
sbb
loop
xchg
cmp
mov
lret
jne
xor
scas
xor
outsl
ja
out
mov
jae
push
mov
sbb
jo
imul
dec
pop
mov
mov
cmpsl
cmp
mov
and
xor
mov
ds
mov
testb
shl
cwtl
add
push
xor
loopne
inc
lret
jns
aaa
or
jae
jnp
xchg
xor
ret
out
mov
dec
cli
cmp
jg
mov
dec
pop
cmp
jle
jnp
push
out
imul
mov
dec
or
and
fidivrl
dec
aad
mov
lock
sahf
repz
mov
pop
sbb
sub
mov
je
leave
stos
sub
cmp
cmpsb
cmp
sti
lahf
mov
adc
push
dec
push
xchg
mov
push
pop
add
daa
mov
sahf
cmpsl
ss
cld
xchg
jmp
inc
jne
jne
pop
std
js
cmpsb
xor
cld
mov
cld
repnz
pusha
push
sbb
cmpl
mov
test
imul
mov
jmp
popa
in
popf
inc
push
xchg
inc
push
and
bound
cmp
xchg
push
push
or
add
mov
inc
lret
cmpsl
xor
insb
jge
aam
in
pop
rclb
cli
imul
popf
pop
mov
dec
mov
dec
sbb
or
xor
pop
repz
or
dec
sahf
out
js
jnp
hlt
sbb
push
mov
sub
in
test
dec
negl
cmp
inc
mov
mov
gs
xchg
cmp
dec
cmp
arpl
cmp
int3
nop
test
push
push
ret
adc
push
loop
mov
sbb
gs
sti
jnp
repnz
inc
mov
pusha
subps
pop
call
pop
aad
aas
cmp
repz
mov
scas
xchg
cmpsb
add
rcr
popa
jo
je
bound
add
das
into
ret
mov
and
xor
ret
test
insl
imul
xchg
shrb
jbe
dec
shl
push
xor
sub
push
xor
shlb
aas
mov
mov
out
out
pop
mov
imul
in
outsb
imul
pop
cmp
popa
and
les
xchg
mov
mov
enter
shlb
adc
ret
out
xchg
and
jno
push
jne
lds
xor
sar
pushf
and
stc
xchg
xchg
push
mov
lods
cmpsb
stc
hlt
ja
lods
cmc
pusha
push
es
inc
fwait
cmovb
sbb
mov
sbb
mov
mov
lahf
fs
cltd
out
inc
sti
or
in
cmp
push
addr16
or
aaa
xchg
sub
orl
mov
adc
add
xchg
flds
mov
gs
push
mov
jo
dec
lea
std
or
sbb
push
add
or
ljmp
push
mov
cmp
addr16
add
sub
or
lods
push
dec
sbb
add
test
mov
push
pushf
dec
sub
les
pop
lods
arpl
jmp
sbb
jo
pop
popf
cmovno
inc
sbb
scas
cld
cmp
mov
les
cmp
imul
jae
int
pop
ret
stos
insb
adc
adc
mov
sahf
fmuls
xor
adc
jae
test
iret
clc
or
inc
js
push
mov
ret
push
jle
or
mov
dec
jle
js
nop
cmp
push
aam
pusha
out
pop
mov
mov
and
mov
imul
mov
fstl
cmp
cld
jb
lds
cmp
mov
dec
push
sbb
ficomps
loop
fs
nop
aas
jecxz
out
mov
sbb
cmp
mov
jns
pop
and
jae
lds
inc
xchg
enter
cs
cmp
cld
cwtl
es
icebp
or
shlb
lods
ds
stos
mov
and
sub
add
data16
fidivrl
xlat
movzbl
push
test
adc
imul
sub
xor
ficomps
lds
push
jmp
and
movsb
call
push
xchg
ja
jae
xlat
shll
push
push
enter
test
rol
inc
push
movl
test
dec
insl
movsl
aaa
cli
xor
push
jno
ja
mov
xchg
movsb
addl
test
cmp
cmpsb
stos
sti
fcoml
loop
mov
cmpl
jno
in
sub
jo
push
pop
add
aas
mov
push
adc
cmp
jbe
mov
push
mov
push
outsl
inc
inc
mov
lods
scas
fs
add
jmp
out
in
enter
and
pop
jns
and
push
mov
xchg
aad
in
shl
xor
int
xchg
add
cmpsb
lods
loopne
data16
pop
shll
dec
repnz
push
arpl
dec
mov
cmpsb
xchg
and
jne
daa
push
mov
or
fnop
dec
cmp
enter
sub
dec
jnp
and
out
adc
add
cwtl
and
ss
cli
es
es
xorb
mov
mov
ljmp
xchg
ja
shrl
hlt
or
mov
and
adc
cmp
adc
jb
pop
pop
mov
pop
mov
popa
fmuls
mov
mov
cmp
jnp
shll
xlat
cld
addr16
xchg
dec
daa
fcmove
cmp
or
pop
sub
inc
int
test
aas
sub
leave
jl
popa
fists
pop
jb
scas
in
shrb
mov
fidivs
loop
xor
lods
scas
mov
je
fcomi
push
outsb
fwait
mov
out
cmp
jle
add
int
repnz
imul
xchg
loopne
and
dec
jl
stos
pop
mov
out
mov
and
adc
stc
imul
imul
addr16
jl
pushf
aad
pop
mov
ret
or
jecxz
in
inc
lods
mov
fstpt
mov
std
movsl
cmp
outsb
or
mov
cmp
pop
sbb
addr16
mov
xorl
pop
or
pushf
dec
xchg
pushf
andb
fsubs
jecxz
ljmp
mov
aam
or
pop
mov
aam
inc
sub
add
movsb
lea
iret
jl
pop
cmc
shrl
in
xchg
inc
and
pushf
cltd
dec
add
mov
pop
and
mov
or
pop
out
in
sarb
ds
lods
adc
fs
adc
dec
adc
sub
sub
lods
jo
out
mov
jp
aad
int
repz
orb
mov
xchg
sbb
fs
dec
xchg
adc
pop
loopne
inc
mov
out
add
mov
push
dec
xor
and
fcomps
and
adc
in
sbb
in
ficoml
pop
in
ret
pop
inc
test
adc
les
ret
xor
outsl
pop
jecxz
and
xor
in
leave
iret
scas
mov
cmp
xchg
sbb
and
add
daa
mov
cmp
push
xor
mov
jecxz
fisttpl
adc
mov
push
sub
xchg
push
sbb
das
test
cmc
rol
mov
mov
in
adc
xchg
pop
sub
into
fs
hlt
fcompl
in
lods
fs
xchg
lret
fwait
jo
test
arpl
lds
hlt
sbb
xchg
imulb
aas
jl
jg
inc
scas
lret
cmp
mov
out
into
lds
bound
aad
cwtl
test
push
in
cltd
pop
ljmp
aam
jb
inc
sbb
xor
xchg
and
lea
push
je
das
pop
out
xor
aaa
dec
fnstsw
adc
add
jge
stos
add
push
sub
fs
sbb
clc
sbb
decb
dec
scas
ja
roll
inc
push
push
push
and
lret
mov
pop
pop
sub
push
pop
and
pop
leave
and
pushf
xchg
pop
or
rep
addr16
aas
push
stos
xchg
cmp
jb
sti
lock
aad
loopne
int3
xor
pop
push
jmp
cli
loop
into
stos
jg
add
jne
mov
out
enter
in
lcall
ret
mov
inc
mov
jl
mov
hlt
jbe
rclb
lcall
push
adc
rcrl
fimull
xchg
cmp
sbb
ja
add
imul
dec
lods
js
and
lret
sbb
adc
dec
cmp
test
mov
mov
sahf
les
insb
ret
sbb
loope
aad
dec
cmpsb
push
mov
and
aam
lahf
lret
in
sbb
ljmp
test
fisubrs
sbb
lret
cwtl
and
sub
repnz
mov
out
imul
in
add
and
mov
mov
fs
rol
dec
jg
adc
push
push
add
loop
add
cmp
mov
cmpsb
mov
pop
das
mov
jmp
idivl
je
pop
dec
call
sub
orb
arpl
jbe
orb
pop
cmpsl
sbb
pop
insb
jmp
mov
lahf
ret
test
push
rcr
fidivs
mov
mov
mov
divl
jo
cmp
push
loope
push
call
ficoms
in
aas
bound
es
add
cmp
imul
cmp
jb
lock
sbb
ror
xor
cli
punpcklbw
push
mov
add
enter
sub
pop
xchg
xchg
mov
cmp
mov
test
inc
and
mov
sub
mov
xlat
ret
fcoms
jecxz
jae
cmpsl
test
mov
mov
sub
addr16
adc
jb
andb
inc
inc
adc
xchg
xor
and
out
xchg
inc
adc
add
xchg
sub
mov
pop
out
xchg
rcll
negl
mov
nop
lds
fs
and
xor
js
and
mov
inc
sbb
sarb
push
out
cmp
xor
and
add
push
jno
and
mov
add
sbb
xchg
jge
or
jns
insl
jbe
sbb
jae
sub
fcoml
lods
addr16
aaa
inc
fdivrl
aad
js
add
mov
sub
push
xor
subb
mov
shll
jp
arpl
xlat
daa
dec
or
xchg
stos
push
cmp
mov
rcr
hlt
push
dec
xor
and
test
pop
scas
cmc
addb
fsubs
ret
sbb
mov
xchg
jae
pop
xor
lret
xchg
sbb
adc
test
xor
outsb
loopne
repnz
xchg
xor
daa
push
add
mov
xlat
mov
mov
mov
repnz
sahf
and
std
mov
int3
fcmovnb
dec
xchg
inc
dec
lea
inc
sbb
fdivl
pop
shlb
dec
flds
insl
das
lret
pop
mov
jge
xchg
adc
out
push
outsl
sti
cmpsb
mov
les
sub
jle
lret
jmp
mov
aad
outsl
shll
inc
dec
subb
arpl
mov
mov
cwtl
popf
and
jmp
pop
sub
mov
push
je
outsb
popa
pop
imul
arpl
mov
fidivrl
xor
jno
insb
or
sbb
push
adc
fsubs
mov
aad
stos
leave
mov
jle
test
pusha
mov
into
out
inc
or
pop
adc
push
sbb
xor
mov
test
rcrl
lret
lahf
xchg
stc
xor
in
jb
loop
loopne
jl
and
inc
cmc
data16
inc
das
mov
xchg
out
sbb
jmp
inc
dec
jno
clc
mov
pop
cmpsl
and
dec
xchg
mov
xchg
repnz
push
pushf
adc
mov
jns
sub
xchg
imul
or
stos
insb
mov
sti
sets
adc
add
inc
dec
fwait
in
sbb
loope
add
inc
inc
aas
les
xchg
std
jno
xchg
pop
icebp
inc
bnd
cmc
xchg
or
push
mov
daa
xchg
fs
and
sub
xor
xor
jbe
jg
sub
test
and
scas
daa
pop
lea
lds
js
fcomps
mov
inc
stc
inc
rorl
dec
sti
es
xor
sub
adc
cld
test
pop
mov
cmp
lods
adc
aad
xor
or
ficompl
repnz
inc
mov
add
iret
call
adc
test
push
cld
inc
inc
or
inc
sbb
mov
mov
add
gs
test
mov
mov
xor
in
fwait
sub
clc
test
insb
test
lcall
push
movl
dec
add
mov
outsb
adc
popf
sub
lock
pop
scas
in
add
das
mov
test
jae
ret
sub
or
pop
inc
iret
pushf
inc
jg
adc
sbb
pop
xchg
or
ret
sub
inc
shlb
jmp
stos
xor
loop
adc
xor
pop
addr16
ds
fcmovu
mov
xchg
and
in
pop
lahf
ljmp
push
lock
mov
in
cmpsl
icebp
mov
lods
test
pop
sbb
xor
adc
adc
fucomp
sub
jecxz
cld
and
add
addl
jmp
jae
mov
rcrb
ret
int3
stos
push
in
mov
cltd
aaa
push
sub
add
pop
push
mov
inc
loope
mov
jge
in
sub
adc
add
and
and
sbb
inc
sub
cs
daa
adc
pop
inc
cwtl
mov
mov
and
sbb
out
lods
pop
xlat
jb
dec
loope
push
mov
movsl
cmpl
push
sub
pop
les
lcall
aas
fsubs
fs
dec
je
loopne
xor
stos
sub
ret
sub
pop
xchg
repnz
repnz
nop
xchg
sarl
cmp
or
adc
rcll
dec
mov
mov
mov
data16
adc
ljmp
mov
fsubl
aas
hlt
xchg
clc
lret
lret
roll
and
test
or
add
lret
insb
dec
shl
xchg
pop
filds
das
mov
imul
xor
jbe
jb
je
popf
test
pop
dec
sub
testl
xchg
out
sub
jmp
imul
enter
jg
movsb
call
ficoms
jo
mov
mov
or
sub
sahf
lods
sbb
in
addr16
push
pop
xorl
xchg
or
mov
loope
fcom
pop
mov
std
and
inc
inc
xchg
dec
enter
loope
cmpsb
sub
loope
mov
imul
cmc
shll
arpl
mov
jmp
sbb
cmp
add
outsb
cmp
mov
sbb
out
cmpsl
or
jns
sbb
cmp
xchg
xchg
or
in
inc
insb
mov
aas
push
xor
loopne
xor
xchg
xchg
mov
out
sub
xchg
ror
inc
jns
jg
scas
sarb
inc
push
inc
adc
cld
inc
adc
mov
shll
test
sahf
jmp
aad
mov
dec
out
lret
pop
cld
ljmp
cwtl
mov
dec
push
adc
pop
cmp
imul
std
jne
xchg
and
rorb
mov
icebp
jge
cmp
xorb
jecxz
xor
pause
aad
mov
out
lahf
jne
shlb
jle
cmp
call
jae
int
aam
or
adc
pop
shll
aad
inc
mov
xchg
dec
add
xor
adc
inc
movsl
mov
mov
lahf
js
jp
les
clc
push
mov
add
and
fisubs
dec
jl
sahf
pusha
jb
pop
mov
add
xor
mov
aad
push
cmp
stos
mov
in
outsl
pop
push
out
jle
sti
incb
jae
cmpsb
mov
in
ja
mov
add
icebp
aas
hlt
ret
lret
negl
jecxz
jno
mov
mov
enter
repz
aaa
in
adc
adc
imul
mov
cmp
leave
aaa
mov
cli
lock
pop
dec
shlb
lret
out
mov
neg
mov
loope
orl
mov
or
in
insl
adc
lods
push
incl
mov
cmp
lods
and
lods
pop
or
mov
sub
movsb
sub
inc
js
test
jb
sbb
scas
lea
mov
sbb
xor
bound
test
dec
push
inc
cmpsb
outsl
fwait
in
fcmovu
and
dec
ljmp
push
popa
hlt
ret
out
and
leave
bnd
xchg
xorl
fst
add
pop
lods
inc
sub
pop
pushl
fwait
dec
shll
stos
adc
inc
mov
insb
shlb
pop
testl
pop
sbb
mov
fucomp
lods
out
jns
push
insb
mov
xor
mov
push
inc
mov
or
sub
push
das
dec
lea
mov
pushf
mov
popa
daa
gs
jp
mov
syscall
mulb
bound
insb
in
xor
jg
out
cs
push
push
sbb
sub
xchg
sahf
cmp
push
fbld
stos
leave
jae
inc
add
clc
and
mov
cmp
mov
int
jne
fs
daa
std
mov
mov
inc
inc
movsl
enter
fdivs
dec
inc
mov
jg
dec
ret
int3
inc
sti
sarl
in
js
and
aas
mov
jg
xor
fidivs
popa
jnp
push
outsl
push
test
adc
lahf
mov
add
push
mov
inc
lods
sbb
cltd
std
push
jmp
ret
movsl
ljmp
pop
test
lea
arpl
push
stc
xchg
lds
or
test
mov
mov
dec
scas
mov
pusha
dec
cmp
in
stos
mov
addr16
inc
ja
hlt
jmp
xlat
xor
popf
cmp
mov
add
jl
xchg
stc
adc
xchg
jns
dec
lods
jbe
xor
fidivs
lods
lret
and
dec
xor
jge
push
call
pop
xorl
add
mov
inc
xchg
cmpsb
jo
jne
inc
jmp
and
fs
xchg
movsl
dec
and
sbb
aam
mov
fucomp
jbe
jno
or
jae
testl
dec
out
cmpsb
subb
adc
outsl
mov
mov
dec
popf
icebp
fsubl
pop
stos
mov
jp
xchg
mov
dec
leave
jns
sbb
inc
outsl
cs
ljmp
pop
test
or
xor
loope
out
mov
jo
xor
and
pop
mov
mov
cli
xchg
scas
inc
mov
loop
inc
pop
mov
aaa
test
adc
and
inc
out
das
push
sbb
fwait
insb
leave
jge
movq
mov
xchg
fistpl
dec
inc
lcall
cmpsb
or
mov
decl
inc
sub
fdivs
jb
mov
pop
xchg
clc
nop
int
dec
xchg
cmc
loop
and
mov
cmp
pop
adc
or
lods
jmp
mov
mov
and
pop
pop
jns
jae
jge
dec
jne,pt
fistpll
idiv
aam
inc
cltd
inc
push
xchg
enter
lock
mov
lock
dec
nop
lods
dec
fwait
sbb
lret
lock
jae
xor
cwtl
or
roll
insl
jg
mov
pop
int
dec
subl
lock
lea
xor
imul
mov
loope
xor
mov
dec
ds
add
pusha
loop
test
in
mov
cmpb
lds
or
ret
in
jecxz
mov
adc
js
repnz
repz
lret
in
scas
jnp
lea
xor
push
sub
call
sbb
aaa
mov
test
popa
mov
mov
or
push
fsubrs
lret
jg
or
cli
pop
adc
lods
sahf
xor
push
cmp
stc
fstps
fxch
rolb
xor
cli
jno
out
pop
sysenter
ret
mov
ret
into
enter
sub
aam
outsb
dec
faddl
fucom
jmp
jo
fistps
sub
dec
roll
mov
stos
xor
push
jbe
push
loope
fbstp
lret
mov
sbb
pop
sti
push
mov
mov
xchg
and
or
mov
lea
cmp
sub
repnz
xor
mov
loop
push
into
jns
aam
push
pop
sub
inc
sbb
add
sub
into
adc
js
loope
mov
mov
adc
addr16
jg
daa
pop
lock
mov
stos
inc
xor
out
inc
sub
outsb
bound
jne
data16
sub
ret
out
js
test
jo
jae
cmpxchg
roll
aad
insb
pop
jecxz
dec
adc
or
repz
inc
rolb
lahf
xor
inc
mov
cmp
jg
mov
lods
addb
aam
pop
ret
mov
add
stos
in
fcompl
stos
rorb
stc
sbb
int3
dec
mov
in
or
pop
or
xor
js
fnstenv
xor
and
pop
lods
sbbb
and
addr16
daa
or
xor
ret
xchg
xorl
rorl
popa
and
lods
lret
add
bound
pop
push
popf
or
cld
repnz
lock
sbb
pusha
in
inc
xchg
dec
push
into
add
mov
pop
ljmp
cmpl
in
fnsave
push
mov
xchg
mov
cmp
aad
std
lods
jb
add
mov
xor
into
shlb
sbb
cwtl
insb
fidivrs
push
ret
cs
out
out
aad
jle
test
fmuls
inc
push
pop
sbbl
cmp
add
pop
mov
dec
je
push
push
cltd
dec
mov
inc
dec
mov
push
cmp
sub
in
flds
cli
incb
inc
orb
sbb
push
leave
jo
or
mov
sbb
pop
mov
add
adc
in
mov
das
ds
sbb
sahf
adc
call
add
mov
sub
xor
ljmp
add
cmpsb
cli
sub
sbb
mov
push
adc
jp
popaw
or
aad
xchg
gs
fistps
imul
mov
cmpsl
das
pop
mov
out
or
outsb
fnstsw
mov
push
shr
lock
sbb
cmp
imul
jmp
aam
cwtl
test
sub
loope
cmp
mov
xchg
push
call
cmpsl
and
iret
pop
xlat
and
push
mov
mov
inc
std
jb
add
iret
jg
outsl
mov
iret
ret
decb
std
sbb
cmpsb
pop
int
jne
ret
rol
loop
cmp
pushf
stos
xchg
inc
lea
scas
pand
arpl
pop
sbb
popa
xorb
mov
repz
inc
je
out
fldcw
xor
fs
lds
jnp
imul
fnstsw
lcall
cmpsb
shl
imul
and
jns
mov
mov
lods
pop
or
fst
leave
dec
test
cmp
xchg
xchg
mov
push
in
inc
insl
mov
sbb
jmp
subl
iret
je
aas
ret
sbb
sub
dec
or
bound
lock
pusha
push
mov
pop
inc
pop
lods
adc
mov
pop
popf
add
outsl
std
std
sub
fcomi
into
sarl
lret
pop
bound
hlt
addr16
add
jbe
pop
es
pop
inc
sar
sbb
lds
cs
mov
cmp
sub
addl
mov
sbb
and
cmpsb
dec
scas
in
loopne
lea
inc
loop
pop
jbe
out
outsb
inc
insb
aad
dec
sbb
mov
xchg
popa
loopne
hlt
imul
movsl
pop
pop
cmp
push
xor
bound
fdivl
fs
testb
mov
icebp
mov
mov
push
xchg
in
mov
xchg
mov
imul
sbb
not
pop
sbb
sbb
push
cmp
sub
scas
xor
shlb
xorl
pop
daa
aaa
sahf
mov
xlat
cmp
loopne
mov
xchg
in
test
or
pop
adc
fsubs
jbe
hlt
les
inc
lods
dec
cmpsl
xchg
jbe
out
inc
insb
pop
sbb
in
test
sbb
cmp
pop
inc
jo
mov
outsl
mov
into
and
cmpsl
scas
push
mov
jb
pop
xor
cmp
and
dec
add
mov
and
cwtl
stos
mov
ja
inc
in
adc
add
pop
push
enter
loopne
repz
in
outsb
xchg
imul
push
mov
daa
icebp
std
mov
sbb
jge
ja
lret
addr16
bound
jne
mov
jle
adc
mov
mov
lods
xor
lea
mov
pop
bound
pusha
cmp
mov
sbb
cmp
test
mov
addr16
inc
nop
push
lret
sub
orb
adc
into
push
scas
cmp
pop
sub
xchg
cld
xchg
add
in
scas
mov
repz
sarb
shll
adc
stc
jg
enter
push
aad
dec
xchg
sbb
cmp
fidivs
sti
mov
cmp
dec
insb
jmp
mov
push
add
pop
cmp
mov
shll
fs
xchg
nop
cmc
adc
lret
and
leave
outsb
outsl
daa
mov
push
cli
fs
jg
cwtl
cmpsl
loope
movsb
jle
inc
out
mov
pop
jle
scas
rolb
xchg
jbe,pt
imul
jno
cmpsl
jp
and
daa
scas
pop
pop
leave
mov
call
aam
test
test
pop
xchg
mov
movsb
mov
mov
leave
iret
cld
fbstp
lcall
push
arpl
mov
loop
gs
xor
lds
js
dec
out
inc
pop
leave
jbe
lock
test
xchg
mov
xor
cmp
dec
and
rcr
or
call
mov
add
movsb
xchg
dec
bound
push
adc
sbb
push
into
icebp
push
sahf
sbb
cmp
jo
test
int
jg
sbb
sbb
stc
das
loope
ljmp
popa
jmp
inc
mov
mov
adc
imul
test
into
test
jmp
jp
in
cmp
and
mov
out
dec
and
inc
xchg
mov
push
gs
sbb
fstpt
adc
or
xchg
lock
adc
push
pop
push
mov
in
xchg
fwait
ret
cmp
inc
inc
mov
mov
and
icebp
jg
dec
out
mov
int
xor
mov
mov
or
movsl
sbb
push
or
jnp
out
push
fwait
push
mov
pop
add
xchg
inc
add
and
pop
jbe
mov
dec
orl
arpl
dec
or
js
mov
movsb
xlat
mov
fnstenv
dec
sbb
add
add
in
fildll
fistpl
pushf
lret
sub
jmp
sub
mov
inc
int
stc
dec
movsb
into
adc
fists
mov
mov
int3
pop
mov
inc
movsb
pop
aaa
cmp
mov
lods
mov
loope
idivl
jbe
stos
insl
mov
cmp
jmp
xchg
xchg
mov
pop
frstor
mov
shlb
in
in
push
bsr
vmovaps
idivl
jbe
push
push
push
sbb
push
sub
in
pop
hlt
lahf
sub
push
jl
push
rorb
mov
mul
adc
in
push
test
mov
lcall
enter
dec
icebp
out
ret
aaa
into
sbb
mov
mov
ret
cmp
scas
loop
into
rcrb
outsb
test
push
test
jmp
gs
int
outsl
jbe
push
sub
icebp
cmpsl
xor
jnp
hlt
add
pop
jb
mov
adc
std
lods
cmpsb
push
sahf
fldt
add
push
xchg
add
jp
out
jp
mov
cltd
cmp
sbb
or
std
pop
cld
pop
ds
int3
out
inc
dec
cmp
xchg
or
mov
pop
fsubrs
xchg
adc
mov
loopne
and
sub
mov
pop
adc
push
loope
mov
clc
or
in
jecxz
jb
mov
jbe
mov
adc
sbb
mov
stc
lods
add
shlb
testb
test
cmp
outsb
les
adc
out
and
cmp
dec
sbb
pop
cwtl
sbb
add
fnstcw
insb
xchg
fisubrl
push
and
xor
cmpb
jbe
or
jmp
xchg
mov
dec
or
enter
xlat
rcll
and
movl
pop
xchg
aaa
pop
mov
push
push
shr
scas
ljmp
cltd
mov
adc
stos
gs
xor
cmp
add
sbb
rcll
sub
xor
mov
mov
jb
cmpsl
int
mul
pop
xor
leave
add
jmp
lret
xor
orl
out
sbb
cmp
fiaddl
sahf
cmp
mov
inc
lahf
cs
fsubrl
outsb
shr
push
mov
pop
ja
mov
mov
in
cmp
pop
stc
cs
push
xor
or
icebp
outsb
mov
lret
rcl
std
in
push
imul
jmp
cmp
les
push
imul
rol
scas
jmp
orb
xchg
jbe
jle
jmp
dec
adc
mov
xchg
pop
cmp
push
mov
insb
xlat
mov
dec
mov
add
pop
mov
lods
mov
ret
stos
mov
in
jb
push
mov
pop
negl
sarb
cmp
incl
pop
sub
adc
adc
std
pop
adc
pop
pop
add
cmp
add
rol
jecxz
add
fcmovnbe
sbb
lcall
push
mov
ja
dec
push
popf
out
fidivrl
or
inc
pop
mov
push
jne
int3
mov
adc
adc
cmp
pop
and
cmp
mov
push
lock
lret
rcll
mov
jl
fsub
jbe
aad
inc
stc
popa
adc
ret
imul
imul
iret
push
push
adc
add
getsec
les
fs
push
and
mov
adc
loop
cmp
pushf
xor
pusha
insl
pusha
ficoms
shr
push
pop
and
ds
push
lds
pop
inc
ficoml
stos
gs
jno
pop
sbb
sbb
add
aaa
pop
roll
pop
pop
add
xor
sub
or
sub
adc
xchg
xchg
lret
insb
test
les
cmc
imul
out
rol
gs
leave
and
imul
add
sbb
shlb
xchg
in
outsl
add
lcall
stos
lret
arpl
sub
adc
ja
pop
data16
or
fcmove
add
bound
data16
push
rcrb
das
enter
cmp
enter
and
mov
dec
ficomps
adc
or
pop
jns
push
mov
out
cwtl
lret
nop
arpl
imul
mov
cmp
inc
mov
bound
fcomps
mov
mov
test
mov
dec
cmovns
out
scas
or
mov
add
cwtl
mov
aas
push
mov
and
fisttpl
lods
mov
adc
xor
or
rcrb
shl
cld
jo
jnp
pop
mov
inc
mov
loop
push
jne
pusha
addl
jno
xor
scas
les
adc
sbb
and
push
sti
pusha
mov
loope
mov
roll
inc
bound
outsl
xchg
popa
or
adc
cmp
mov
nop
loope
jmp
xchg
push
pop
ds
neg
mov
std
xor
cs
dec
testb
das
pop
mov
lret
fcmove
lahf
sahf
jne
adc
mov
divps
push
inc
pop
cmpsb
jecxz
mull
fnstenv
stc
test
xchg
lahf
daa
inc
idiv
push
ja
in
xlat
mov
hlt
or
pop
xor
popl
insl
sbb
icebp
test
int3
or
jl
mov
enter
dec
in
sarb
mov
loop
lock
sub
jl
jns
cmp
out
iret
mov
inc
lahf
mov
jb
ficoml
mov
xor
fwait
mov
pop
mov
mov
lret
lock
leave
and
sbbb
arpl
aam
es
push
test
jp
cmpsl
mov
decl
sbb
mull
cmp
xchg
inc
cmp
mov
lea
ja
xchg
pop
mov
rcll
mov
outsb
roll
and
push
and
lock
xchg
lcall
dec
orl
cmp
jge
fldt
sbb
negl
jecxz
cwtl
dec
dec
lods
xchg
cmp
sbb
jecxz
loope
mov
jl
cld
mov
jp
shl
jae
lds
loope
jg
cmp
pop
inc
cld
int
sub
out
jbe
shl
add
sub
xor
lcall
push
jmp
or
lds
aam
aad
and
pop
popa
stos
stos
mov
push
test
pop
adc
cmpb
test
inc
add
ds
aaa
mov
push
pop
sub
jns
push
les
and
nop
out
pop
or
lret
cmp
jae
mov
cld
cmpsb
mov
cwtl
jne
dec
sub
ret
mov
xchg
xor
sbb
sbb
push
call
adc
xchg
sbb
aas
xlat
jl
mov
mov
sub
mov
mov
xchg
and
push
stc
pop
mov
negl
fwait
jno
jmp
xor
cmp
int3
mov
sub
sbb
pmulhuw
arpl
push
mov
in
stos
add
js
xlat
pushl
pop
sarl
ret
jle
andb
insl
pop
js
mov
mov
das
cmp
xor
pop
aas
jns
out
jle
lods
mov
pop
jne
lock
mov
pop
xchg
cmp
and
xchg
testl
iret
and
jle
push
pop
ds
mov
insb
stc
imull
fucomp
xchg
call
fstpt
aam
scas
xchg
jbe
pop
fwait
add
sub
fldt
push
sahf
leave
hlt
and
lds
push
add
inc
push
inc
and
mov
push
out
out
filds
jnp
jnp
pop
into
add
jle
faddp
add
xchg
xchg
jae
push
dec
or
inc
addr16
dec
push
shll
sar
or
scas
pop
mov
mov
inc
inc
sub
daa
jecxz
into
jno
das
sub
push
inc
cld
inc
popa
or
ret
and
out
jne
std
sbb
sbb
shll
fldenv
mov
and
aam
xchg
mov
jl
jne
pop
sub
cmpsb
jno
loopne
iret
pop
lret
pop
sbbb
and
sbb
rorl
shl
xchg
test
cld
xchg
lods
ss
add
rcrl
loopne
pop
xor
addr16
or
mov
sub
or
jg
call
leave
pop
es
push
xorb
test
cli
repz
add
sbb
and
ljmp
mov
adcb
and
addr16
std
aaa
es
aaa
or
jo
jb
adc
xchg
push
sub
xchg
mov
pop
insl
xor
ds
xor
addb
xor
mov
mov
repnz
sub
int
and
fmuls
sar
fisttpll
dec
mov
dec
inc
aaa
mov
es
or
mov
mov
sti
cli
xor
add
mov
xor
xor
addb
and
or
rcl
fwait
stos
imul
mov
jmp
mov
loope
cmc
enter
inc
inc
adc
movsl
cmp
sub
fs
or
lods
push
loope
lea
push
fsub
add
cmp
sub
push
inc
cmovne
out
xor
fs
push
in
outsl
js
push
pop
xchg
cltd
mov
in
ret
aaa
outsl
dec
ljmp
lahf
cmp
mov
or
adc
xor
testb
dec
aaa
std
sbb
lahf
shl
mov
mov
mov
aad
xor
enter
mov
das
cwtl
gs
xchg
adc
lcall
ds
jl
dec
push
push
rolb
popa
jb
sbb
add
inc
mov
mov
mov
lock
adc
jnp
jmp
and
fs
jmp
mov
lea
sbb
bt
stos
adc
dec
inc
and
ljmp
sti
insl
test
out
adc
mov
mov
pop
push
jecxz
sub
sarb
sbb
jo
mov
pop
loope
ret
jmp
and
jb
mov
cltd
inc
int3
push
jae
xor
mov
daa
and
or
out
test
dec
scas
xor
mov
sub
stos
xor
push
bound
repnz
mov
in
shl
fldt
xchg
or
xor
adc
push
aam
imul
sbb
pop
in
arpl
pop
test
mov
int3
rorl
push
cs
mov
imul
cmpl
cmp
sub
cld
push
mov
into
push
movsl
out
mov
dec
pop
dec
mov
out
jmp
lret
cmp
mov
jmp
pusha
add
dec
jbe
ret
inc
or
cltd
push
bound
jo
push
mov
incb
xor
add
aad
repz
mov
clc
pop
add
cmp
clc
cmpsl
rol
xchg
aaa
inc
lret
and
xchg
in
std
pop
js
mov
jle
mov
cmpsl
adc
mov
or
mov
pop
xor
or
ret
sbb
testl
jg
jp
cmp
and
pop
sub
outsl
jle
inc
add
and
mov
cmp
cmpsb
rcrb
sbb
into
push
xchg
push
sbbb
into
or
xchg
inc
adc
jo
inc
inc
or
pop
add
stos
daa
mov
pushf
dec
mov
dec
cmp
mov
imul
loope
out
pcmpgtb
lret
shll
add
or
add
push
outsl
xchg
mov
jle
mov
loopne
test
pop
pop
xor
iret
jge
loop
jbe
arpl
adc
push
les
sbb
mov
ficompl
int3
or
fwait
inc
popf
scas
dec
xor
gs
out
leave
xor
repz
push
mov
jae
out
fcoms
add
cmp
addl
adc
leave
icebp
fnsave
pop
jb
sbb
pop
fs
outsl
inc
addr16
pop
mov
jg
jle
sub
mov
test
movsl
es
inc
loope
sti
clc
or
jge
cld
aad
mov
popa
push
or
jae
sub
mov
mov
fbld
int3
push
pop
sbb
mov
out
add
cs
ja
lahf
jo
xor
push
pop
mov
lcall
in
pop
sub
sub
jmp
fcomps
jbe
in
sbb
pop
loop
cmp
pop
ret
jno
ror
sub
push
cmpsb
fdiv
lret
push
rcrl
lea
jmp
add
ja
jp
out
mov
lret
lcall
negl
push
xor
in
inc
in
leave
mov
fwait
movsl
jo
sarl
outsl
sub
fwait
cwtl
jae
ds
xchg
enter
mov
dec
add
jns
mov
clc
push
in
jae
fs
push
loope
mulb
lea
sar
mov
jae
out
insl
xlat
xor
int3
xchg
bound
andb
mov
pop
cmp
pusha
xor
mov
shl
xlat
stos
xor
lret
lods
dec
xor
mov
xchg
stc
push
mov
andl
cmp
rclw
scas
inc
xor
jne
mov
and
cmpsl
sarl
idivb
dec
es
mov
cli
cltd
fwait
mov
mov
ja
push
sbb
xchg
mov
push
adc
lahf
inc
repz
shlb
enter
inc
pusha
rol
add
stc
flds
loopne
add
sbb
mov
lcall
jo
jmp
push
scas
xchg
cmpb
aad
push
adc
or
pop
mov
popf
pusha
mov
scas
aad
push
cmp
add
cmp
jl
cmp
insb
mov
sbb
rolb
cmp
fcompl
fcmovnb
fmul
push
push
or
add
add
xor
loop
movb
mov
iret
add
or
push
fdivr
push
inc
or
movsl
pusha
mov
popf
in
lock
in
sti
imull
and
mov
cltd
ja
ret
xchg
mov
fsts
loop
rolb
sbb
dec
or
sub
ss
cmp
js
sbb
in
sub
into
xchg
cmpl
cltd
xor
adc
sbb
int
into
lea
ret
test
iret
add
add
aam
mov
jmp
fmuls
mov
sub
and
ss
sti
dec
stos
dec
mov
pop
adc
sub
ror
and
dec
aaa
shrb
lret
adc
shll
aad
out
es
push
stc
sub
cltd
adc
std
fisubrl
jno
dec
jg
out
fnstcw
cs
loop
jnp
flds
cltd
add
adc
dec
notb
mov
sub
aas
jno
addr16
adc
addl
add
lock
filds
ret
and
mov
sub
hlt
inc
dec
jge,pt
sbb
jne
sub
sub
cwtl
adc
jo
xchg
jl
out
push
sbb
frstor
fistpl
enter
mov
inc
enter
sahf
jnp
or
aad
cmp
xchg
adc
bnd
push
mov
add
mov
movsb
mov
stos
dec
sbb
mov
bnd
mov
push
jmp
in
dec
or
ljmp
repz
mov
add
xchg
jg
fists
into
xchg
inc
testb
sarl
scas
jl
jle
and
fcmovnbe
or
aas
cmpsl
das
aam
pop
jne
push
xchg
pop
xchg
or
in
lahf
nop
adcl
into
or
dec
inc
hlt
test
mov
out
es
push
dec
iret
sub
pop
cwtl
xchg
lods
xor
cmc
repz
aaa
jno
ja
mov
inc
add
dec
pop
sahf
repnz
in
or
call
mov
ret
loopne
pop
in
scas
loope
scas
inc
xor
pop
fimull
jb
fistpll
inc
lret
sub
sbb
mov
pop
jle
fldenv
inc
inc
test
push
cmp
imul
cmp
outsl
or
pushf
sti
scas
jge
not
dec
mov
pop
stos
das
pop
adcl
sbb
pop
inc
mov
cld
rcll
jp
in
mov
in
popl
int3
jne
stos
pop
mov
decb
mov
push
rcrb
mov
out
pop
jnp
or
add
pop
out
jmp
in
mov
leave
sbb
ds
int
popa
addr16
je
scas
jne
cmp
inc
into
test
pop
mov
clc
pusha
mov
or
pushl
jl
subb
push
cs
imul
rclb
addr16
dec
pop
les
jmp
out
paddq
rcr
cmp
push
add
movsb
cld
xchg
jne
call
fimuls
mov
inc
push
gs
xchg
je
or
or
cmp
mov
in
mov
lcall
enter
sbb
mov
pusha
mov
cwtl
stc
nop
lea
std
pop
xlat
mov
into
mov
jmp
mov
ret
push
cmp
cmpb
and
and
push
xchg
mov
jbe
push
lret
adc
mov
roll
leave
xor
pop
sbb
test
movsb
bound
rcrb
andl
or
arpl
inc
sub
aas
pop
mov
imul
in
fcomps
push
sub
ljmp
inc
mov
inc
push
cltd
not
ret
push
mov
mov
test
aaa
lea
enter
jg
pop
insb
in
in
insl
js
push
pusha
dec
add
loop
push
xchg
dec
test
jbe
xchg
jg
scas
cld
adc
xor
jnp
jae
pushf
sbb
xor
fsts
and
dec
or
mov
pop
cltd
dec
loope
insl
arpl
mov
sysenter
pop
js
mov
lea
out
jge
adc
push
fiadds
and
into
mov
jne
pushl
lret
lock
push
pushf
jo
les
icebp
jecxz
xchg
cmp
push
test
insb
or
or
push
jb
jecxz
into
lahf
pop
sti
rcrl
xchg
loopne
mov
repz
xchg
roll
test
es
xchg
and
leave
jbe
stc
and
in
in
out
pop
pop
or
js
les
cmp
push
lahf
scas
lahf
adc
scas
lods
fisubrs
mov
sbb
or
lret
sbb
and
fldt
rolb
les
cltd
mov
xor
inc
cmp
xchg
jecxz
fisubrs
jnp
in
mov
jle
mov
je
xchg
mov
popf
adc
pop
jo
aad
insb
fildl
frstor
mov
inc
outsb
stos
jo
arpl
push
loop
out
sbb
das
cmp
in
in
and
pop
lock
hlt
inc
pop
xchg
push
push
jecxz
test
cltd
cmp
and
int
fdivs
mov
mov
lds
mov
fwait
scas
mov
mov
out
lret
sbb
pusha
push
shll
cmpsb
dec
or
scas
jmp
fidivrl
xchg
rorb
xchg
pop
jp
xor
xor
mov
lds
xchg
sub
aas
or
xchg
dec
cmp
xchg
xor
leave
out
rorb
jle
out
jecxz
xchg
and
repnz
int
xor
push
orb
push
pop
adc
pop
sub
cmp
jl
notl
push
jnp
fwait
les
pop
in
idiv
int
ss
sub
clc
out
pop
mov
adc
mov
scas
inc
jnp
call
sub
test
cmp
lods
pop
mov
sub
leave
cmpsb
pop
add
outsb
cmp
pop
fisttpll
push
fldenv
cwtl
jecxz
js
adc
shr
fs
arpl
rclb
lret
mov
in
or
fsubl
scas
inc
jno
ret
stos
add
movsl
adc
mov
push
and
cli
cmpsl
push
xchg
mov
in
add
icebp
or
mov
and
aas
cmc
adc
jp
lret
out
icebp
push
incb
orl
movsl
jne
pop
or
xchg
cmp
sbb
cmp
jne
mov
add
leave
push
push
scas
pop
xor
jne
mov
stos
out
pop
mov
js
inc
lds
bound
push
and
jmp
into
pop
push
daa
cmpsb
loope
fwait
out
inc
push
mov
test
sub
pop
lea
and
ja
movsb
lods
pushf
mov
mov
ljmp
jae
and
or
out
shlb
loope
loope
xor
cltd
out
ljmp
sbbb
es
and
adc
pop
pop
pop
or
fbstp
int
popf
bound
ret
fwait
xchg
loopne
mov
and
roll
dec
and
call
mov
mov
dec
mov
inc
ret
pop
pop
xchg
in
cmp
lret
popa
adc
jg
mov
jge
add
jnp
add
test
cwtl
pop
mov
hlt
dec
xor
cmpl
aad
push
xchg
rcr
push
enter
aaa
inc
push
push
pop
cmp
sti
fiadds
subl
xchg
xor
hlt
sbb
mov
or
pop
movsb
out
jb
cmc
mov
sbbb
out
cltd
and
in
cwtl
int3
call
cld
mov
sub
mov
int
pop
mov
jae
movsb
adc
inc
ss
sub
in
dec
push
add
test
sub
xchg
jb
cmp
sbb
sub
test
push
leave
jns
mov
rcrb
ljmp
mov
add
fcmovb
pop
mov
add
mov
pop
fcomps
mov
mov
jmp
xor
aad
fs
pop
jo
popa
xor
je
adcl
jecxz
mov
cmp
sti
mov
imul
inc
scas
mov
pop
dec
addb
outsb
inc
cmpsb
stc
jmp
push
push
ds
das
decb
adc
leave
mov
lods
lods
mov
lret
arpl
push
aaa
mov
cmp
mov
xchg
push
pop
negb
xor
xchg
dec
pop
and
out
in
jg
pop
aad
sarb
addl
std
xchg
pop
lea
shl
sahf
into
push
cmp
jb
sarl
jb
movsb
testb
cmp
mov
add
pop
bound
inc
lea
int3
or
cmp
ftst
mov
test
xor
outsb
sbb
add
das
daa
jge
cmpsb
mov
je
mov
cmp
insb
push
pop
mov
insb
cmp
inc
inc
mov
inc
add
shll
adc
mov
jns
mov
lods
mov
adc
xor
faddl
sbb
jb
cwtl
mov
cmp
jbe
mov
stos
hlt
outsl
gs
mov
adc
ljmp
sbb
sub
or
incb
push
dec
test
pop
cmp
and
sbb
out
repnz
xchg
sbb
jl
scas
xor
les
mov
cmp
xchg
dec
xor
stos
std
xchg
mov
and
xchg
add
jo
pusha
push
scas
mov
xchg
in
push
xchg
jne
pop
push
in
and
mov
mov
fsts
lret
mov
pop
pushf
loope
test
jge
les
int
shlb
scas
cmp
jo
enter
cmpsb
pop
stos
xor
adc
sti
loope
call
sbb
dec
jle
jmp
cltd
mov
decb
or
call
arpl
xchg
fidivs
add
cmovo
jge
mov
sub
fisubrs
fsubrs
push
mov
imul
add
pop
mov
sti
cmp
inc
xchg
and
in
adc
ja
lds
pushf
imul
pop
pop
mov
mov
xchg
andb
and
push
sbb
ljmp
cmp
imul
pusha
and
inc
mov
mov
call
dec
cs
iret
cmp
nop
xchg
out
mov
mov
inc
xchg
cmp
mov
cmp
mov
mov
pop
push
insl
leave
jns
scas
cmpsb
xor
cs
mov
out
inc
inc
sbb
insb
sbb
push
int
sub
xor
mov
and
stc
mov
jnp
clc
add
pop
ljmp
xchg
int3
push
rolb
add
sbb
sub
mov
imul
inc
insb
sti
enter
daa
add
stos
mov
fucomip
push
int3
sbb
shrd
mov
push
addb
mov
jnp
sti
dec
push
mov
popf
iret
sub
xchg
into
adcb
xor
filds
js
arpl
ljmp
push
cwtl
sti
clc
lret
push
pushf
mov
sbb
test
jae
or
xchg
jo
sbb
les
lcall
sbb
insl
jp
xlat
loopne
mov
leave
sub
js
ret
sub
bound
cmp
lea
pop
push
jecxz
mov
pop
xchg
popf
pusha
and
or
mov
pop
xchg
test
push
lcall
arpl
xchg
sub
jp
pushf
hlt
adc
push
popa
loope
jnp
stos
fwait
mov
shl
add
mov
mov
inc
jg
and
push
push
mov
imul
dec
nop
sti
and
add
ss
rol
scas
mov
pop
loope
mov
pop
clc
add
pop
push
hlt
popf
into
sahf
add
popa
cwtl
lret
cmpsl
mov
lock
lods
mov
mov
adc
and
mov
scas
push
jbe
lcall
xchg
lock
inc
pop
xor
sub
js
sbb
test
mov
loop
lcall
dec
jne,pt
push
imul
fisttpl
dec
add
jmp
mov
and
dec
data16
push
push
push
test
xchg
sub
sbb
fwait
pop
in
inc
xchg
aas
pop
ja
insl
adc
into
lds
sbb
sub
xor
pop
shll
jne
lretw
call
xchg
mov
inc
les
cwtl
mov
and
dec
and
dec
and
adc
inc
sub
mov
icebp
loopne
sbbl
lret
aam
movsl
jno
adc
xor
xorl
mov
ja
adc
xchg
add
bound
lret
leave
mov
mov
movsb
fwait
inc
rorb
jle
js
jb
mov
jno
pushf
dec
xlat
or
push
sbb
cmc
out
insb
jecxz
outsl
and
cld
adc
sub
test
pushf
repnz
xchg
jmp
push
outsl
cltd
mov
movsb
pop
push
push
movsl
scas
add
out
mov
add
sbb
fcmovb
jg
mov
cmpsb
dec
pusha
jmp
bound
shrl
dec
popf
cli
jl
daa
xor
xchg
push
mov
mov
pop
in
inc
das
or
mov
mov
push
lods
mov
mov
cwtl
xchg
xchg
jns
call
pop
inc
les
sbb
push
xchg
sub
fisubl
inc
mov
add
or
mov
inc
jae
xchg
fldlg2
pop
idiv
jge
fdivs
mov
pcmpeqb
jp
cmp
cli
cmp
mov
or
scas
sub
je
or
fsubrs
lret
inc
pop
test
rcrb
and
lock
fcomps
jnp
add
leave
push
add
popf
outsl
push
sub
jb
enter
ret
lret
aaa
push
fcomps
push
scas
jecxz
jl
cmp
adc
jle
and
dec
aaa
nop
cmp
mov
xor
adc
and
mov
popa
and
mov
inc
xchg
movsb
hlt
jp
fcmovnu
add
push
decl
popa
pop
xchg
jae
and
es
rcll
xor
not
add
inc
pop
sub
sahf
popf
repnz
jae
or
adc
xchg
ss
inc
sub
or
ret
out
xchg
insb
daa
pop
jbe
aam
movsb
jg
pop
push
data16
notb
xchg
cmp
dec
aaa
jecxz
xchg
mov
lock
xlat
fimull
push
sbb
adc
xor
clc
fdivrl
mov
ds
loop
push
int3
push
or
mov
sbb
xchg
loop
cwtl
imul
jae
xchg
jp
je
push
push
cmpsb
sti
clc
cmpsb
mov
sub
in
sbb
xchg
lods
scas
sub
and
xor
mov
mulb
sub
adc
adc
jo
pusha
and
xchg
and
adc
loope
test
repnz
or
ja
mov
adc
fs
mov
ret
icebp
hlt
add
push
leave
aaa
repnz
mov
es
xchg
cwtl
dec
in
push
stos
loope
scas
push
es
js
shll
cmp
xor
add
ret
jnp
inc
test
mov
inc
sbb
test
sarb
ret
pop
movsb
xchg
inc
dec
aaa
push
jnp
pusha
fisttps
pop
dec
stos
fdivrl
jo
fcomps
push
daa
adc
ret
mov
pop
in
out
enter
into
mov
es
addb
jmp
cltd
movsl
xchg
mov
mov
iret
lret
mov
loop
push
sahf
jno
and
std
ja
adc
es
push
testb
fadd
es
add
test
lea
icebp
std
loope
out
mov
call
popa
add
xchg
mov
ljmp
pop
mov
mov
repz
in
popa
or
dec
push
scas
push
pusha
cmp
pusha
mov
dec
push
popa
ljmp
std
fisubs
cmc
pop
into
insl
dec
xlat
leave
mov
adc
cmc
adc
stos
fbstp
jecxz
bound
push
sarb
js
repz
popf
add
dec
cmp
push
fidivrl
mov
sbb
sub
enter
and
or
cmp
movlps
in
mov
loopne
lret
inc
xlat
or
fld
jg
bound
push
mov
lods
pushf
mov
sub
ss
int
pop
popa
mov
or
or
jb
in
push
cld
xor
fs
xor
pop
test
das
xlat
stc
out
adc
fcomp
dec
push
imul
mov
ljmp
insl
and
stos
adc
sti
imul
faddp
xchg
in
lahf
jae
sbb
insl
loope
mov
adc
imul
mov
shrb
addl
into
jno
stos
xchg
dec
aam
sub
adc
mov
jg
pop
or
jge
cli
mov
cmc
mov
pushf
xchg
add
into
ret
iret
mov
mov
xlat
enter
fs
lcall
jl
sbb
jb
je
mov
out
mov
xor
sbb
xor
pop
js
mov
imul
in
sbb
js
outsb
push
in
jns
stos
mov
rorb
push
sbb
and
or
ret
rorb
cli
pushf
repz
xchg
add
pop
pop
mov
popf
movsl
scas
and
gs
rcl
jb
jb
dec
dec
jb
xchg
imul
loop
add
dec
add
mov
rorb
test
sub
or
test
xor
scas
add
mov
xchg
inc
mov
fldl
int
iret
or
xorb
cmpsb
imul
nop
ret
sbb
cmc
push
sti
dec
addr16
fists
sahf
pusha
fcoms
xchg
pop
mov
push
scas
stos
push
and
pop
xor
sbb
pop
dec
icebp
or
cli
lret
rorl
in
xor
xchg
push
pop
cmpsb
jb
mov
jl
jmp
or
mov
jle
or
sub
and
sbb
mov
jb
icebp
mov
pop
dec
int
adc
sbb
pusha
test
rolb
les
in
mov
ret
xor
loopne
dec
shlb
sub
jae
sti
icebp
insl
mov
adcl
fsts
ds
leave
iret
imul
add
lock
sub
cmp
jnp
fisttpl
mov
and
push
jo
push
mov
adc
test
xlat
and
push
sti
cmp
xor
lahf
sbb
xchg
nop
out
arpl
rcll
mov
test
jnp
cltd
out
push
dec
aad
xorl
pop
dec
xchg
call
xor
testb
fmuls
js
int
inc
adc
jb
add
je
xor
cmpl
into
popf
movsl
js
scas
in
xor
mov
movsb
mov
outsl
les
or
orb
repnz
incl
push
jo
mov
pop
ret
cmp
insb
sbb
in
stos
mov
and
icebp
pop
or
divb
out
mov
cmp
sti
ljmp
ja
call
lock
les
aam
rol
call
dec
sbb
loope
pusha
leave
aas
ret
sub
inc
addr16
ds
data16
jle
jmp
mov
jns
xchg
xchg
jns
dec
sbb
in
shll
push
fnstcw
pop
push
sbb
and
lods
adc
cmp
fwait
xor
mov
lea
loopne
int3
outsb
jmp
xor
scas
notl
cwtl
les
call
loop
loopne
movsl
shll
inc
push
jecxz
pusha
xor
xor
sub
loope
in
mov
call
push
fadd
mov
cmp
push
hlt
mov
mov
add
mov
fsubs
add
xlat
lahf
ljmp
int3
push
mov
iret
repz
inc
int
insb
ret
outsl
leave
xor
mov
mov
sbb
mov
stc
imul
xor
push
and
sbb
imul
mov
repz
mov
jb
mov
jb
adc
or
xor
mov
es
push
iret
dec
push
mov
sbb
adc
xor
xchg
jg
mov
mov
adc
iret
xchg
and
xchg
jle
outsb
out
aas
add
xor
cmp
js
jmp
sahf
fldcw
adc
push
mov
daa
in
push
loop
jl
out
mov
pop
jp
imul
push
arpl
enter
add
push
push
mov
xlat
pop
or
pop
jnp
dec
xor
inc
add
out
hlt
xchg
or
dec
into
pushf
mov
cli
int3
mov
mov
sbb
adc
stos
and
mov
lret
pop
mov
sub
mov
and
sti
js
stc
xchg
outsl
rcr
lcall
sub
test
stos
and
int3
xchg
push
mov
lret
shll
mov
xor
pushf
mov
das
andl
and
push
fisubrs
loopne
add
sarl
js
mov
rclb
jge
push
fdivrs
inc
cmp
arpl
mov
imul
fistl
mov
or
jp
fldcw
roll
adc
dec
sub
mov
shll
pop
jle
pop
stos
push
push
xlat
insb
aam
dec
pop
jns
jne
sub
mov
stos
sbb
js
out
add
mov
mov
cmp
xor
or
pop
test
inc
mov
pop
xor
insl
inc
mov
out
adc
mov
lret
repnz
pop
cs
xchg
xchg
mov
clc
test
push
xor
mov
push
addl
xchg
push
ljmp
fidivrl
dec
push
repnz
or
test
shrl
cmpsb
ds
inc
pop
pop
inc
or
push
jns
xor
lods
xchg
cmp
rclb
mov
dec
mov
pcmpeqb
test
jb
insb
pop
sbb
mov
rcll
lahf
jbe
xor
movsl
filds
mov
xor
ljmp
jg
push
push
enter
test
ret
nop
sub
lods
scas
mov
pusha
pushf
scas
daa
and
add
dec
add
mov
sbb
test
sub
test
shrd
iret
adc
sbb
shll
jmp
shrb
mov
test
cltd
insb
clc
fdivrs
sub
stos
adc
cs
pop
and
mov
mov
or
fnstenv
push
xchg
ja
subl
in
icebp
lods
fldl
pop
or
outsb
movsb
push
pop
add
mov
inc
rcpps
add
pusha
fistpl
dec
fidivs
mov
jae
cmc
jecxz
clc
in
push
or
stos
push
fcompl
loope
cmp
cld
push
aad
shld
push
aad
lret
mov
dec
sti
inc
xchg
mov
scas
scas
dec
mov
lret
and
sub
mov
popf
aaa
ljmp
rcll
cwtl
outsl
mov
dec
xchg
or
pop
adc
das
push
or
adc
cli
sar
test
movsb
mov
mov
cmp
xor
je
fistpl
ljmp
inc
sbb
test
and
insl
leave
fwait
cltd
leave
jne
out
fisubs
jecxz
jg
movsl
sub
clc
enter
stc
push
mov
mov
cs
divb
xchg
sub
sub
movb
sub
dec
enter
insl
fwait
xchg
dec
dec
sub
jb
movsb
rcl
fimull
lret
rcrb
pop
shlb
jne
or
lods
adc
xchg
loope
adc
adc
ret
mov
stc
dec
dec
xor
add
in
ss
dec
movb
mov
add
orl
xchg
cmp
decb
dec
push
xchg
push
movsl
and
jb
popf
xor
movsl
or
fwait
clc
ds
inc
and
mov
popl
push
cs
pop
lret
aaa
repnz
xchg
push
mov
mov
imul
cltd
xor
stos
and
out
hlt
stos
movsb
out
sbb
push
roll
jecxz
jo
pop
cs
inc
cltd
jle
out
pop
aas
fs
mov
in
fidivrs
push
add
idivl
in
xor
cmpsl
int
jecxz
jae
orl
insl
xchg
fmuls
push
orl
ret
xchg
pusha
jb
mov
out
cmp
movsl
or
or
out
aaa
xchg
cmp
or
and
test
inc
je
xchg
or
or
fucom
push
pop
cmc
sub
in
lret
or
stos
sahf
xchg
push
cmpsb
fwait
adc
test
gs
jae
cmp
jno
inc
push
imul
ds
cwtl
push
filds
xchg
xchg
sbb
jns
sbb
dec
jp
or
and
repz
jmp
add
cmc
mov
jge
pusha
xor
push
les
push
mov
mov
cmp
sahf
sub
mov
adc
jmp
cmp
jbe
outsl
push
hlt
push
dec
test
in
outsb
mov
jp
out
pusha
xchg
lods
mov
sub
jnp
xchg
xchg
outsb
mov
and
test
in
out
stos
sub
or
add
in
cmp
in
cwtl
adc
fiadds
test
mov
push
fiadds
mov
in
rclb
test
scas
mov
nop
sub
mov
addr16
mov
bound
xor
call
jp
jecxz
sbb
iret
adc
or
and
ja
xchg
mov
xor
fistpl
loope
inc
cltd
loope
or
enter
daa
je
inc
dec
sub
and
mov
movsl
gs
mov
enter
or
icebp
scas
dec
in
out
mov
add
das
test
pusha
jmp
push
lahf
rcrl
sahf
stos
push
mov
lock
cmc
and
or
push
or
lock
pop
nop
ret
adc
aam
jl
adc
dec
lahf
lock
popf
xchg
imull
or
add
jo
fwait
out
fs
add
test
pop
cld
xor
out
test
xchg
xor
lret
add
push
sbb
sbb
pop
into
test
adc
sub
pop
imul
pop
int3
sti
test
sbb
pop
aam
or
mov
xor
push
out
test
mov
add
sub
inc
adc
xor
dec
jae
sbb
xchg
add
arpl
nop
xor
aas
push
cmc
addr16
sbb
lods
or
dec
repnz
fcmovbe
popf
je
lods
add
add
cmc
int
inc
inc
int3
idivl
add
sub
add
cmc
pop
mov
imul
jmp
clc
adc
cltd
xor
lret
mov
movsb
cmpsl
mov
jl
adc
loope
jbe
ficomps
clc
xor
push
je
dec
inc
push
movsl
xchg
je
mov
imul
cli
jno
int3
inc
mov
pop
adc
inc
mov
repz
mov
pop
and
imul
adc
add
mov
arpl
int
mov
push
mov
mov
clc
stos
sbbl
sub
shlb
fbstp
scas
es
cmpsb
les
fs
dec
int
inc
mov
mov
jae
int3
mov
push
push
fsubl
push
movsb
push
mov
int3
xor
sub
stos
pop
popa
cmp
pop
int
adc
cli
add
pop
daa
movsl
les
cmp
jne
faddl
xchg
nop
inc
rolb
iret
xchg
adc
xchg
push
lock
aad
inc
jp
cltd
mov
repz
adc
js
in
pushf
xchg
push
test
notb
pop
cmp
jno
dec
cmp
xchg
jnp
jbe
sbbb
mov
cmc
stc
push
dec
in
fcom
stos
xor
pop
outsl
pop
adc
add
xchg
outsb
stc
mov
add
mov
nop
mov
fcoml
repnz
cmpsb
mov
ret
insb
mov
fiaddl
ja
scas
ds
cld
jle
push
jb
fs
jno
and
pushf
inc
adc
jl
fs
push
adc
jae
imulb
out
add
fbld
hlt
movb
jl
mov
hlt
jns
add
stc
rclb
push
int3
xchg
js
fs
fsub
adc
jle
jge
push
xchg
int
dec
popf
cmp
imul
popa
or
negb
aam
cltd
fmuls
mov
mov
adc
hlt
test
call
mov
mov
push
cmp
insl
fs
in
std
jl
fcomps
push
outsb
stos
repz
dec
scas
push
lods
mov
loopne
push
push
int3
fs
pop
inc
rolb
lahf
mov
or
push
and
das
xor
popa
cmp
cwtl
in
lcall
daa
filds
aas
xor
aaa
sub
and
fcomi
test
int3
jne
inc
cmp
jle
or
lahf
out
std
in
jl
cwtl
add
dec
and
mov
push
jmp
xchg
mov
test
loop
rcrb
cmp
or
cmp
xchg
push
xchg
in
icebp
or
lock
sbbb
jo
cld
mov
lcall
sbb
std
lahf
xlat
adc
mov
lret
sbb
fmuls
ret
adc
inc
leave
cli
pop
pop
ror
add
sbb
repnz
lods
out
inc
mov
int3
sbb
lret
shrb
scas
lcall
mov
es
or
fscale
loope
fnstenv
cli
mov
out
rcr
lahf
jl
or
lock
add
loopne
rcrl
push
in
cs
cmp
xchg
lret
pushf
lock
xor
pop
pusha
push
inc
icebp
dec
mov
jmp
xor
pop
mov
stos
pop
sub
addr16
dec
std
lret
insl
test
add
pop
lock
mov
popa
xor
pop
addr16
lretw
int
outsb
xlat
add
fldt
sub
sub
pop
pop
mov
pop
xchg
dec
out
das
insl
dec
and
outsb
pop
mov
movsb
xchg
xchg
or
or
inc
mov
lea
test
mov
jb
push
jp
jnp
adc
out
jl
mov
and
out
push
sub
and
leave
hlt
or
movsb
add
test
test
or
jl
xchg
push
pop
xor
pop
hlt
das
cmp
mov
pop
and
mov
fsubrp
add
dec
inc
lret
mov
inc
stos
jmp
sbb
mov
iret
loope
lds
int3
gs
nop
push
ljmp
pushl
push
jp
xor
sbb
jnp
add
repz
mov
pusha
mov
sub
dec
divl
jge
pop
call
pop
mov
push
xchg
cs
leave
sub
xor
ds
inc
sbb
icebp
out
or
mov
xor
push
pop
adc
sahf
repnz
nop
xchg
out
movsb
test
mov
cmp
inc
leave
pop
inc
minps
je
mov
mov
push
push
cmp
dec
outsb
movsl
mov
and
lahf
xchg
cmp
out
aam
dec
stos
adc
sub
adc
mull
lret
push
stc
rcrb
xor
test
xor
sub
push
xlat
in
xchg
fistps
mov
sbb
fcmovne
or
mov
lds
aaa
sbb
push
dec
cmpsl
test
pop
cmc
clc
mov
lret
pop
daa
sbb
push
imul
shrl
mov
mov
test
cmpsl
movsb
mov
int
frstor
rcrl
add
in
lcall
nop
mov
data16
inc
mov
orb
inc
pusha
test
cmpsb
jo
inc
mov
cmp
add
push
jmp
xlat
jl
ja
mov
out
out
sub
adc
xor
mov
mov
cmp
popf
xchg
add
int
jns
dec
mov
mov
sbb
adc
jno
outsb
mov
xchg
pop
mov
cmp
mov
jecxz
jno
fcmovnu
mov
jle
and
stos
int
sbbb
mov
cmp
divl
fidivl
bound
push
mov
aad
dec
lret
fisttpll
fisubrl
adc
fs
or
outsb
sbb
pusha
frstor
lcall
je
lahf
int
xchg
mov
cmp
ljmp
nop
xor
imull
or
sbb
add
or
inc
aad
push
bound
adc
je
popa
pop
imul
test
movsb
js
cwtl
push
xchg
adc
adcl
iret
fs
sub
adc
fmuls
fisubrs
cwtl
pop
cmpsb
lret
pop
cli
inc
scas
mov
cmc
cmp
push
mov
sbb
sub
icebp
add
xor
cmp
int
das
int
dec
push
stos
int
fstp
sub
sbb
repz
in
xchg
inc
lret
les
movsl
sbbl
add
dec
jg
jl
loopne
cmp
dec
aam
mov
sub
call
pop
and
push
or
andl
xchg
testb
xchg
mov
dec
pop
movsb
add
xlat
fwait
mov
adc
jae
mov
mov
loope
out
sbb
mov
jno
shlb
mov
xchg
mov
int
push
mov
dec
mov
adc
sbb
and
insl
das
fistpll
repnz
mov
ja
push
incb
sahf
sub
imul
push
mov
cmp
out
pop
push
arpl
or
fsubr
cmpsb
in
push
sar
push
or
stc
inc
xor
mov
pop
sub
mov
inc
xlat
xchg
sarl
dec
dec
add
sub
scas
mov
push
fs
roll
loop
scas
mov
sti
mov
cmpsb
pop
mov
push
dec
jle
jae
fiaddl
shlb
test
or
sahf
mov
cmp
cwtl
ss
adcb
xor
ret
orl
sub
adc
adc
cs
stos
ret
xchg
cmpsb
dec
adc
xchg
dec
and
clc
in
das
out
leave
lcall
out
fs
xchg
mov
lahf
mov
jmp
pusha
cs
js
mov
xchg
inc
dec
sub
xchg
jp
stos
stc
jle
fnsave
xchg
mov
sbb
add
scas
jns
xor
pop
stos
hlt
or
les
into
pop
xor
sahf
mov
pop
add
bound
or
test
into
repz
and
pop
xor
hlt
xor
xor
sub
insl
dec
mov
xor
shll
sbbl
add
stos
test
int
add
pop
sub
push
xor
ret
xchg
repz
lods
pop
adc
popf
add
insl
sub
mov
sahf
leave
iret
xchg
stos
pop
xchg
add
icebp
jae
add
gs
loop
fcomi
fisubrs
xchg
aas
dec
mov
data16
outsl
cmpsb
cld
hlt
sbb
out
or
inc
mov
mov
add
cmp
xchg
sbb
push
or
and
mov
ret
jne
loop
add
scas
fwait
enter
sbb
jmp
sub
cli
mov
xor
test
lods
es
in
mov
pop
or
cs
dec
out
jnp
cmp
std
mov
jmp
push
push
adc
test
dec
ret
mov
xlat
addl
push
dec
testl
jae
int
cmp
dec
stos
std
adc
mov
ja
xchg
pushf
pop
clc
push
mov
pop
repnz
jp
ljmp
insl
inc
pmullw
cs
xchg
ljmp
jnp
scas
jp
ja
dec
mov
les
data16
lahf
inc
adc
push
shrl
and
mov
sub
movsb
mov
mov
dec
outsl
roll
pop
pop
out
push
dec
lds
mov
pop
sbb
lret
adc
xbegin
stos
clc
jnp
sub
adc
sub
dec
arpl
lea
dec
xor
fiaddl
int3
xor
and
xchg
pop
cmp
test
cmp
gs
mov
jo
fstpl
call
xchg
cmp
mov
adc
loop
add
shll
stos
add
push
sbb
push
flds
int3
inc
mov
pop
ficomps
arpl
jg
sbb
cmc
repnz
cmc
incb
loop
rcrl
mov
mov
jmp
repnz
rorl
add
xchg
loopne
or
mov
fldt
gs
sti
xor
inc
pop
xchg
imul
xchg
sbb
sub
push
inc
push
adc
mull
pusha
inc
mov
dec
cltd
or
pop
negl
lret
jno
jb
inc
cmpsb
and
imul
dec
push
pop
adcb
fistps
and
out
pop
jmp
pop
mov
lea
subb
mov
add
mov
loop
mov
mov
lcall
loop
jp
imulb
jbe
call
punpcklwd
xchg
push
push
sub
ljmp
mov
test
jns
xchg
cltd
daa
fldenv
dec
cmpsb
jnp
dec
jbe
fwait
adc
pop
loopne
fildl
xchg
ret
sbb
pop
mov
sub
or
imul
and
lods
and
shll
das
fwait
cmp
loopne
push
iret
lods
jae
aam
jg
loop
inc
inc
imul
push
xorps
arpl
inc
ds
cmpsl
cmp
jns
hlt
ret
test
xchg
pxor
dec
je
xchg
push
pop
inc
mov
jl
lods
fisubl
and
ss
cmp
jnp
cmc
or
ret
cwtl
add
sahf
jae
mov
rcrl
aas
push
mov
dec
sahf
loop
cmpsl
arpl
inc
inc
icebp
fwait
pusha
push
and
test
subb
mov
insb
rorl
inc
or
sar
shrb
je
repnz
popl
lock
fdivs
test
je
adc
sbb
xor
fnstsw
icebp
insl
adc
push
push
scas
sub
into
sahf
lock
cli
cmp
jns
cli
push
lahf
xor
sbb
adc
andb
fisubrs
pushf
sbb
sub
jne
inc
js
sbb
pop
cmpsb
lock
xchg
add
mov
push
ja
dec
xchg
pop
insl
mov
xchg
lock
jae
and
xor
sub
pop
mull
movsb
mov
lods
arpl
or
lods
lods
push
inc
sub
mov
pusha
repnz
jo
push
call
pushf
into
sbb
shlb
or
les
dec
inc
push
pusha
dec
mov
mov
xor
cwtl
xor
jae
inc
sarb
call
fwait
mov
and
mov
inc
cmp
xor
inc
mov
std
clc
movsl
and
or
int
jge
mov
add
imulb
xchg
push
dec
mov
pusha
cmp
fucomp
mov
je
pop
cmpsl
xor
inc
sbb
xorl
mov
or
xchg
pushf
dec
repz
leave
pop
lahf
icebp
out
lahf
mov
pop
xor
repnz
shlb
mov
insl
cmp
sbb
inc
xchg
xchg
pop
mov
sahf
scas
idivb
aaa
jno
fstl
pop
lods
aad
cwtl
ret
aaa
adc
daa
dec
negl
stos
jnp
push
arpl
cmp
xor
jge
pushf
xchg
xor
push
aas
daa
dec
orb
loope
cltd
mov
cmp
mov
les
mov
sbb
popf
sub
jecxz
sbb
pop
adc
push
adc
pop
hlt
jecxz
inc
jnp
jbe
cmpsl
sbb
dec
xor
sub
lcall
aaa
fistpll
mov
fistl
xor
cmp
fs
adc
fists
aas
xchg
cmp
jbe
pop
test
lea
ret
movsl
ds
sub
arpl
enter
stos
adc
pop
jnp
in
rcl
mov
pop
xchg
inc
inc
xchg
push
orb
pop
push
inc
in
gs
ljmp
movsl
cmpsb
ljmp
fisubl
and
mov
xchg
test
cmc
ss
cmpsb
adc
dec
lock
sarb
fnstcw
sub
repnz
ret
mov
cmc
rcrl
loopne
cli
jle
fists
fcmovne
push
dec
xchg
cs
je
mov
sbb
scas
rorl
out
sbb
ret
test
rol
inc
mov
adc
adc
jnp
aam
push
sub
and
mov
sub
xchg
cmp
outsl
rcrl
hlt
pop
push
bound
scas
push
fwait
add
mov
push
and
inc
xor
out
mov
jne
fistpll
stos
lahf
pushf
fisttpll
aas
ret
xchg
xchg
fildll
push
int
repz
or
push
insl
into
mov
mov
out
push
mov
adc
xchg
jb
cs
adc
fcos
frstor
pop
pop
sbb
in
xor
sub
iret
leave
lcall
rorb
push
hlt
jo
xchg
fildl
ffree
addl
divl
cmp
xchg
jle
call
out
cmp
in
mov
notl
insb
push
or
pushf
mov
pop
and
sbb
test
dec
popf
nop
sub
push
test
pushf
xor
xchg
stos
adcb
aaa
dec
faddl
inc
sbb
ret
dec
jl
push
adc
inc
sahf
fiadds
loope
test
andl
or
add
rcrb
out
jle
stos
scas
mov
dec
cmp
popa
jl
xchg
push
testl
xor
adc
jne
out
cmp
test
jbe
clc
sbb
jecxz
pop
stos
movsb
xchg
movsl
jno
pop
call
out
icebp
jb
dec
imul
les
ljmp
fs
das
stc
mov
xor
out
sarb
cmp
mov
mov
movsb
pop
arpl
out
push
or
push
loopne
dec
gs
lahf
push
das
adc
test
mov
arpl
push
hlt
sti
fstps
aas
mov
adc
ljmp
mov
sahf
dec
lcall
into
lahf
mov
shrl
add
psubd
gs
dec
test
xor
iret
pushf
or
ss
stos
sbb
and
cmc
lock
enter
dec
dec
add
mov
xlat
out
lret
sbb
mov
popl
jg
pop
repnz
sti
jo
test
mov
pop
ss
inc
icebp
daa
dec
push
add
push
lahf
fwait
cld
add
mov
cmpsb
sub
lret
outsl
out
cmc
cmpsb
sti
in
cmc
loope
mov
pop
bound
std
or
jp
sbb
xchg
in
divl
fbstp
and
xchg
in
lods
fstpl
dec
cmc
mov
mov
mov
pusha
adc
popa
int
add
pop
lahf
push
jne
adc
add
cs
aam
pushf
out
test
pop
fucomi
cmp
push
push
add
adc
inc
sub
or
cmp
mov
test
jnp
jge
push
movsb
shll
out
subl
shlb
pushl
jle
and
dec
stos
loope
or
pop
sar
gs
pop
push
adc
pop
xchg
mov
push
fdivs
repz
sbb
ret
jo
xlat
es
aam
adc
scas
stc
or
aad
ret
out
sbb
stos
scas
shl
inc
mov
mov
aam
and
loopne
xor
or
lds
in
sub
lds
push
inc
xchg
mov
imul
out
stc
arpl
sub
fsubs
aas
jnp
lock
in
call
sbb
and
adc
and
inc
cmp
imull
lds
dec
loopne
mov
leave
jo
sbb
ds
adc
lods
clc
in
iret
xchg
jmp
jge
mov
ljmp
sub
ror
xor
jbe
lds
test
adc
and
pop
aam
fs
pop
dec
int
mov
inc
xor
test
dec
pop
and
rcll
dec
jb
aad
into
aaa
dec
jnp
mov
test
mov
stos
cli
cmp
xorl
and
ja
scas
mov
fwait
in
adc
xchg
push
imul
mov
std
jae
inc
popf
and
cmp
dec
mov
jb
nop
xchg
daa
jg
leave
and
andb
cli
xor
insl
loope
in
stos
dec
iret
ss
pop
jg
outsb
push
and
xchg
fwait
aaa
mov
xchg
jmp
in
jae
dec
adc
scas
dec
jmp
movsl
xchg
scas
cld
lahf
mov
std
scas
inc
sbbl
cmp
adc
popa
mov
sti
cmp
push
dec
loope
mov
sbb
fsubr
adc
or
movl
inc
inc
loopne
or
insb
loope
mov
push
mov
hlt
adc
mov
es
lods
ja
or
push
mov
adc
pop
or
insb
inc
jle
imul
or
aam
push
fdivs
and
imul
pop
add
gs
cmp
xchg
push
dec
int
out
xor
adc
ret
xor
adc
cmp
add
sbb
fcomps
cmp
mov
nop
decl
int
das
icebp
popa
leave
dec
jecxz
jmp
pop
sbb
jnp
adc
push
mov
sub
in
cmpsb
mov
mov
or
adc
mov
popa
or
bound
xor
add
lcall
pop
call
fldl
xchg
fistps
mov
stc
loopne
adc
pop
sub
stos
test
out
sub
movaps
cli
adc
adc
and
insl
pop
jnp
repnz
int3
icebp
mov
mov
jns
push
icebp
imul
push
mov
out
inc
pop
jb
stos
lods
xchg
and
push
imul
sub
dec
push
call
mov
ja
jbe
out
int3
ror
data16
xchg
cmp
add
enter
popa
mov
cs
jg
jae
mov
xchg
in
lcall
hlt
test
hlt
inc
pop
sar
sub
addb
invd
shr
inc
out
pop
ljmp
loope
jns
mov
movb
rol
or
ja
movsl
out
or
sbbb
push
cmp
add
clc
je
adc
and
dec
mov
popa
jo
notl
mov
add
lret
mov
jb
mov
cwtl
push
in
dec
xchg
xchg
pusha
iret
shlb
fcmovbe
push
stos
xchg
cmc
push
xchg
movsb
cmpsb
adc
dec
cmp
in
lahf
xorl
popf
sbb
fwait
jbe
push
add
jne
sub
xor
mov
mov
out
into
ja
mov
cmc
addr16
test
sarb
sarl
push
sbb
pop
in
sar
inc
pop
xchg
add
js
out
inc
mov
xchg
into
pop
mov
push
out
insl
out
and
lar
sub
js
push
and
push
add
cwtl
insb
and
out
and
scas
jne
mov
xor
lds
push
or
jmp
push
push
cmp
adc
fsubs
cld
fs
popf
mov
inc
sub
stos
ss
insb
pop
add
lods
mov
or
ret
mov
stc
sahf
lret
mov
xchg
xchg
arpl
mov
mov
insb
or
pop
pop
sbb
insl
sub
mov
mov
jle
icebp
pusha
inc
sub
loope
aad
lock
xor
jae
sub
xchg
js
push
fcmovb
stos
sub
testl
fildll
clc
insl
sti
push
xor
rcrl
jecxz
mov
mov
cmp
pop
int
push
in
outsl
xchg
stos
movsl
inc
stos
daa
inc
aas
mov
cmpsl
mov
movsl
adc
adc
xor
insb
andb
out
pop
arpl
push
xchg
pop
xor
scas
inc
xchg
in
lds
mov
add
loopne
sbb
pop
faddl
jge
enter
inc
rolb
cmp
adc
rcl
cmp
push
mov
shlb
and
jg
or
lods
add
adc
dec
rorb
xor
push
in
fistps
mov
adc
lcall
popf
lods
out
push
jo
addr16
sbb
inc
mov
pop
push
jno
outsl
popa
mov
aam
pop
dec
xchg
fnstcw
mov
lea
mov
mov
xor
xchg
dec
test
mov
pop
out
adc
push
into
sbb
and
adc
test
mov
add
iret
pusha
mov
fldl
out
aam
pop
lret
sbb
pop
fsts
mov
dec
push
insb
loope
xor
aad
std
mov
sbb
lret
mov
js
jae
loopne
jl
shll
mov
pop
lcall
inc
pop
inc
or
push
xor
pop
dec
mov
jge
dec
imul
sub
std
push
scas
cmp
cmp
jns
out
inc
cld
mov
daa
test
insl
mov
pop
and
and
rclb
sub
sbbb
push
pop
gs
mov
jns
push
and
mov
xchg
scas
hlt
and
lods
xor
dec
dec
lret
sbb
cmp
mov
bound
jp
mov
int
into
sbb
movsl
cmp
fwait
rolb
inc
xor
cld
fistl
pop
shl
aas
jo
add
inc
lds
ret
pop
dec
notb
push
aas
stos
sbb
aam
decb
pop
sub
mov
inc
fbld
sub
jle
enter
mov
inc
push
ss
xchg
mov
xor
fs
xor
jmp
cmpsb
xchg
cmp
or
pop
dec
jle
mov
lcall
out
xchg
dec
push
into
and
inc
mov
jge
inc
mov
xchg
pop
lret
aaa
rol
hlt
jmp
insl
pop
cbtw
sub
dec
jb
inc
pop
int3
pop
mov
ja
push
mov
and
xor
pop
test
sar
mov
roll
dec
ret
and
movsb
xchg
mov
mov
clc
pop
push
adc
lcall
frstor
inc
mov
jb
adc
lcall
mov
adc
sar
nopl
icebp
xor
out
sbb
lea
shll
sub
cmp
cmpsb
mov
mov
sbb
cmpsl
lods
adc
rcll
add
iret
aas
jb
push
roll
xlat
or
push
outsb
push
pop
and
hlt
shrl
jecxz
les
bound
cmpsb
push
out
lret
or
mov
xchg
cmp
or
mov
fs
xchg
jno
shrl
enter
jbe
iret
dec
insb
addr16
ret
fildl
sub
imul
inc
xadd
int
lods
ret
pop
cmp
rcl
mov
ret
pop
sbb
rorl
fbld
mov
mov
in
inc
sub
sub
jbe
mov
push
inc
pop
ss
sar
xor
jl
xor
lock
push
cmp
ror
adc
loop
sbb
aaa
pop
int
vpsubusb
mov
cmp
fs
icebp
lock
mov
inc
push
stos
arpl
mov
fwait
adc
lcall
mov
ret
sbb
out
push
cmpsl
in
or
in
fsubrs
mov
cld
inc
mov
loope
popa
xor
xchg
icebp
in
sub
sub
imul
push
out
dec
ret
pop
add
sbb
inc
in
repz
xchg
adc
mov
pop
jnp
pinsrw
mov
jbe
sub
adc
pop
mov
out
stos
stos
stos
mov
mov
rclb
dec
mov
mov
pushf
sbb
add
dec
addr16
dec
popf
testb
jmp
imul
lods
mov
sbb
test
xor
mov
aas
out
scas
sbb
stos
sbb
lret
das
ljmp
xor
inc
js
int3
mov
jl
mov
in
fidivs
adc
push
mov
repz
pop
maskmovq
divl
add
jae
movsl
xchg
cmc
and
fidivl
iret
xlat
nop
jl
mov
xor
add
dec
js
lock
or
test
sbb
mov
xchg
or
jno
pop
inc
xchg
jle
jmp
sub
lret
xchg
and
push
fidivl
add
cmp
in
test
adc
js
fwait
imul
sbb
pop
clc
movsb
push
dec
dec
add
push
pop
fwait
lea
stc
xlat
sub
adc
test
in
jbe
mov
xchg
inc
jl
mov
xlat
mov
sub
push
dec
imul
mov
inc
fnstcw
mov
xchg
cmp
push
cli
sub
xor
outsl
xchg
xor
cmp
or
xchg
mov
pop
pop
sarb
ret
jmp
xchg
xchg
in
mov
pushf
mov
push
test
ret
lahf
mov
in
cmp
dec
pop
data16
mov
insl
jle
jecxz
scas
mov
test
mov
and
cmp
xchg
loopne
lret
cmc
fldt
and
pop
loope
sbb
dec
sbb
test
popa
mov
insl
je
cmpsl
icebp
push
cltd
dec
push
cmp
cmp
jnp
adc
lods
test
pushl
cmpsb
lds
rep
add
idiv
mov
dec
add
in
jne
sbb
out
inc
addr16
and
sub
ret
sub
push
add
jne
int3
sbb
arpl
dec
andl
repz
push
rclb
push
cwtl
and
push
fsubrs
std
pop
sub
cmpsl
pop
mov
mov
xchg
fiadds
ja
xchg
out
xchg
repz
or
leave
fdivrs
andl
fbstp
jl
hlt
stos
pusha
in
lods
jl
addr16
int
orl
icebp
out
dec
jo
jecxz
lods
mov
loope
lahf
insb
inc
js
cld
dec
lahf
or
outsb
xchg
mov
stc
adc
inc
std
xchg
and
or
lods
cmpsb
xchg
fs
das
sbb
mov
mov
adc
loope
dec
adc
movsb
aam
testl
xor
xor
js
xor
add
xlat
fimuls
or
scas
cmp
mov
jmp
mov
cmp
test
adc
ret
stc
jecxz
cmp
inc
movsl
mov
negl
mov
addr16
mov
push
stos
mov
testl
fcompl
ja
loope
dec
push
pop
inc
sbb
inc
mov
test
xor
cmpsb
das
sub
roll
push
push
scas
push
xchg
inc
mov
and
pop
movb
in
mov
inc
inc
loope
cmp
pop
mov
mov
dec
sub
xchg
cmp
es
pusha
int
mov
push
dec
insb
outsl
jg
out
cwtl
stos
cmp
int
mov
adc
pop
inc
outsb
sahf
shrb
testl
mov
adc
jno
das
movsb
mov
aad
push
hlt
lcall
add
call
addl
xchg
dec
inc
pop
icebp
ss
mov
js
sahf
sti
loop
pushf
push
add
xor
sbb
movsb
les
cwtl
mov
cmp
and
cli
in
dec
jb
add
shr
pop
aas
aaa
add
in
xchg
xor
cwtl
dec
or
jb,pn
pop
daa
jl
mov
inc
pop
or
addl
jbe
out
adc
roll
lods
cltd
lea
gs
testl
xchg
movsl
mov
dec
movsb
fwait
test
mov
jl
rorl
and
gs
or
pop
cwtl
fdivr
jae
pop
xor
repnz
aaa
aaa
cmp
cmp
stc
cmpsb
inc
cmp
mov
or
cli
dec
mov
jns
pop
mov
repz
dec
jbe
outsb
rorb
sbb
outsl
loope
in
jge
imul
popf
pop
lea
gs
insl
sub
pop
shr
xor
jnp
lret
push
pop
pushf
add
xor
push
sub
xchg
sub
pushf
in
imul
jl
add
sub
add
add
aad
cmp
lods
xor
pop
ds
pop
sub
movsl
jl
mov
mov
add
leave
jp,pt
sub
imul
or
pop
loop
jo
pop
mov
loop
aam
mov
mov
xchg
ret
fucomp
stos
cltd
aaa
inc
faddl
imul
mov
xor
out
xchg
in
mov
faddl
mov
push
pushf
bnd
popf
repz
lahf
imul
pop
rcrl
cmpb
inc
add
jbe
aam
mov
xchg
adc
mov
push
icebp
pop
mov
push
ss
or
inc
daa
imul
sahf
adc
test
imul
push
popf
inc
loop
icebp
popf
inc
add
iret
and
iret
dec
cmp
lcall
xlat
cli
add
dec
mov
adc
pop
ds
mov
inc
jae
pop
test
cwtl
cltd
push
add
xchg
xor
xchg
push
push
xchg
dec
addr16
lret
outsl
push
nop
shrl
sub
and
into
adcb
je
pop
fisubrl
testb
and
or
jbe
rorb
xchg
jne
dec
and
fstps
rcrl
or
fisubrs
dec
fwait
dec
xchg
add
xchg
repz
pop
adc
pop
int3
les
xchg
mov
repnz
arpl
dec
inc
xchg
add
sub
xlat
cmp
andb
inc
repz
repnz
dec
bnd
in
dec
mov
add
ds
cmpsb
inc
mov
xlat
rcrl
xchg
jne
xor
fdivs
aad
imul
mov
idivl
das
jmp
push
pop
adc
scas
ja
dec
fsub
jg
dec
push
jnp
push
jo
fwait
xor
mov
dec
sti
sarl
cmc
test
push
and
dec
mov
test
lea
and
cmp
int
fbstp
arpl
sub
xchg
js
and
in
mov
jae
ljmp
pop
int3
call
mov
out
mov
fcompl
shlb
rorl
outsb
das
and
or
outsb
pop
and
or
mov
insl
add
fstps
push
repnz
or
pusha
pop
adc
lcall
test
rorb
sub
pop
mov
sbb
adc
pushl
sbb
jns
loope
jg
jle
ficomps
mov
pushf
es
in
rol
aas
mov
or
stos
insl
int
xor
gs
sbb
xchg
push
outsl
rcrb
addl
push
into
push
flds
repnz
add
les
arpl
adc
sbb
mov
lock
into
pop
push
pop
scas
fstpt
cmp
inc
arpl
mov
xor
sbb
and
xor
mov
xor
mov
pushf
addr16
iret
jb
in
dec
jbe
nop
push
mov
lahf
fnstenv
pop
adc
cltd
lods
pop
push
mov
push
mov
mov
hlt
cmp
rcl
icebp
movsb
xchg
or
mov
movsb
shlb
pop
push
je
lods
dec
movsl
jno
daa
dec
aad
sbb
leave
mov
test
cmpsb
int
jo
inc
xor
xchg
mov
adc
xchg
pushl
sbb
sahf
lods
or
insl
movsb
xchg
rep
imul
pop
push
add
mov
imul
dec
adc
popa
cmpsb
jecxz
gs
xlat
test
mov
dec
fsubs
xchg
imul
stos
repnz
push
ja
cmc
cli
adc
shll
xchg
sub
xchg
fucomp
and
mov
pop
cmpsl
testl
push
adc
pop
out
mov
lods
leave
mov
rclb
and
mov
mov
add
cli
stc
arpl
mov
outsl
inc
fnstenv
bound
ljmp
es
fldt
add
lods
test
test
push
add
pop
xlat
mov
xchg
dec
fisttpl
mov
push
imul
mov
gs
imul
adc
pop
insb
in
jno
subps
lock
je
mov
adc
push
icebp
bound
xor
add
push
sbb
out
pusha
out
inc
mov
mov
lret
jl
scas
stos
adc
or
adc
cmp
sbb
into
push
mov
loope
cmp
xchg
les
inc
stos
jnp
loopne
out
clc
movb
fnstsw
shrl
inc
sti
mov
shr
mov
add
in
cmp
and
mov
jnp
xchg
icebp
imul
sbb
push
mov
jo
xchg
pop
mov
test
mov
xchg
jb
inc
adc
inc
nop
stc
aaa
sub
neg
mov
stc
std
fdivl
ss
add
mov
imulb
sub
inc
sub
aas
jmp
data16
mov
rolb
push
or
push
pop
sub
mov
icebp
nop
or
push
adc
mov
lods
jecxz
loope
imul
sub
icebp
pop
shlb
mov
es
sti
dec
daa
jecxz
mov
mov
xchg
stc
dec
jge
mov
shlb
or
xor
jecxz
sarl
daa
inc
and
jge
mov
sbb
xor
mov
cwtl
sub
mov
inc
dec
sbb
jecxz
pop
mov
cmc
pop
mov
outsb
rorb
fcomps
sub
lods
push
push
movsl
dec
and
cmp
test
mov
icebp
xchg
subl
sub
push
xchg
inc
aaa
rcl
int3
pop
dec
ss
sbb
loopne
pop
xchg
imul
pop
hlt
jl
dec
xor
adc
addr16
test
mov
outsl
out
pusha
hlt
xchg
pop
cmp
push
int
icebp
in
jno
adc
test
inc
test
sarl
inc
xchg
shll
jle
ret
std
leave
je
cli
cli
push
inc
fs
incl
ja
dec
enter
dec
xchg
sub
mov
out
hlt
push
xor
jl
sbb
mov
or
sahf
lock
fstp
pop
es
fucomp
enter
xchg
into
es
inc
lods
clc
push
mov
add
psrlw
mov
popf
sbb
sub
cwtl
aam
push
mov
lea
lock
lods
add
and
enter
mov
jbe
push
sahf
fdivp
mov
mov
sub
outsb
int
jmp
add
shrl
and
pop
in
orl
imul
test
or
cmpl
mov
xchg
lods
xor
xor
pop
push
pop
add
stos
test
cmp
notl
xor
fucomi
pushf
lds
aad
fstps
push
cli
repnz
pushf
arpl
vprotw
push
dec
jge
sub
bound
aam
in
inc
mov
ja
icebp
bound
mov
jnp
or
jnp
lcall
adc
adc
sbb
jne
sub
out
popf
ret
push
add
mov
cmc
mov
loopne
cwtl
add
repnz
orl
xchg
adc
sbb
pop
xor
mov
mov
sbb
clc
and
mov
fwait
xor
jo
jmp
arpl
movsl
jno
lock
outsb
cld
int3
es
clc
add
dec
and
push
fimull
clc
sbb
adc
mov
jp,pt
cmp
or
outsl
jp
or
mov
andl
dec
ja
icebp
add
adc
pop
addb
gs
adc
pop
cs
cmp
imul
pop
xor
popa
cmp
cmc
jo
es
fistps
lods
test
inc
push
mov
sahf
push
mov
cmp
mov
aam
push
lock
test
mov
andb
pusha
mov
mov
pop
out
cltd
sub
filds
inc
push
sbb
fisttpll
mov
stos
jno
out
in
ja
cmp
mov
aas
fadd
dec
xorb
mov
xchg
mov
in
shrb
jbe
push
adc
xchg
sub
dec
pop
lock
sti
outsb
imulb
dec
pop
test
fstpt
mov
pop
fidivrs
cmp
jg
mov
xor
lock
pop
add
cmc
rcll
adc
xchg
cmpsl
into
jmp
je
or
and
lret
sar
add
xchg
loopne
jbe
clc
lahf
pop
or
stos
mov
add
xchg
add
rolb
in
push
sbb
mov
pushl
sarl
jnp
dec
daa
pop
idivb
mov
push
xchg
xlat
lods
movsb
jb
jbe
push
cwtl
jns
ja
push
ja
clc
jecxz
dec
push
mov
push
push
pushw
cmp
out
xchg
mov
sbb
and
pop
loope
lret
xchg
lcall
sub
outsb
xor
mov
and
push
and
test
adc
sbb
out
xchg
pop
mov
hlt
decb
dec
mov
or
or
and
mov
and
pushf
pop
mov
hlt
fisubs
repz
aaa
lds
test
xor
leave
fisttpl
stos
fdivrs
icebp
adc
mov
out
mov
lock
insb
dec
push
xor
das
rol
xor
lea
jmp
or
jno
jle
out
hlt
sbb
popa
aas
push
and
dec
rcl
xor
sub
add
cli
stos
pop
push
ficompl
sahf
mov
mov
or
gs
pushf
and
loop
push
hlt
lahf
pop
cmp
push
inc
mov
and
rcrb
lods
xor
movsl
adc
repnz
rorl
xor
repnz
rcll
pop
popf
sbb
mov
icebp
not
and
int
insl
adc
pop
dec
and
pop
sub
gs
jbe
jecxz
lds
jmp
mov
adc
pop
iret
mov
clc
add
xchg
push
outsl
xchg
addr16
fcomi
inc
out
loope
dec
inc
sub
adc
add
loop
and
jle
insb
lret
cs
pop
sbb
in
push
arpl
cmp
es
pop
pushf
aam
dec
mov
test
fldt
adc
mov
dec
mov
and
mov
lcall
popf
imul
cmc
lret
mov
jle
cmp
fwait
lret
loop
sub
ret
pop
pusha
ret
rclb
cmp
push
push
shlb
adc
ret
xchg
jns
cld
jo
mov
xchg
pop
adcb
dec
stos
in
int
cmc
clc
cwtl
push
pop
cmp
and
sbb
adc
jge
pop
addr16
sub
insb
cli
dec
inc
push
nop
ret
out
inc
lret
clc
pop
mov
add
jl
pop
fisttps
rcl
data16
lret
adc
cmpsb
and
push
add
add
rol
and
adc
add
push
mov
mov
out
int3
je
stc
shl
xor
sbbl
pop
push
jp
jl
lahf
lea
xchg
xor
xchg
ror
add
dec
xchg
cmp
ljmp
add
rolb
push
pop
scas
mov
mov
and
push
inc
lcall
sbb
pop
outsb
inc
push
decl
and
movsl
sub
incl
sub
inc
sbb
enter
ss
scas
out
fs
mov
lds
and
cmpsl
xchg
cmp
cmp
cmp
jb
jae
cwtl
loope
aas
pop
dec
push
push
push
inc
faddp
jmp
jmp
int3
repnz
add
sbb
inc
adc
ds
xadd
add
stc
sub
adc
lea
mov
mov
and
adc
faddp
cmp
adc
pop
lock
xor
jne
dec
lahf
add
aas
dec
add
aaa
jg
inc
cmp
push
jb
pop
pusha
fmulp
in
fwait
mov
sub
inc
popa
aad
imul
in
mov
sahf
icebp
or
pushf
test
movsl
adc
jge
dec
sbb
sbb
or
cmp
mov
fiadds
dec
push
cmp
dec
pop
fisubl
jecxz
js
insb
jg
aas
int
insl
inc
mov
push
repz
sub
ret
mov
xchg
testl
mov
or
ret
add
pusha
lds
lret
xchg
jb
mov
xchg
xchg
arpl
mov
jo
sub
push
jb
cmpsb
pop
add
js
cmp
or
imull
mov
js
ret
inc
sbb
mov
or
scas
test
mov
mov
js
sub
fldenv
adc
push
lret
xchg
loop
xor
loope
add
xor
mov
cs
sub
sub
out
insb
shrl
cmp
push
cmp
pop
rorl
adc
mov
mov
dec
mov
or
dec
jb
int
cmp
mov
xchg
bound
in
rclb
xor
push
xor
sub
test
stc
in
imul
out
xor
jle
stc
sbb
fstpt
cld
aam
jmp
xchg
xchg
mov
aam
inc
dec
jl
sbb
inc
mov
clc
xchg
call
jns
pop
push
xchg
add
and
dec
lods
sbb
jb
fwait
or
ljmp
jbe
pop
cmc
sub
and
lock
jbe
jle
stc
mov
test
jnp
sub
jae
clc
push
mov
sahf
pusha
movsl
add
cli
popf
mov
inc
cmp
cli
test
data16
xchg
sti
icebp
mov
mov
scas
pop
push
stc
mov
mov
gs
test
ss
ss
cbtw
popf
fadds
rcrb
std
repz
pop
mov
mov
cmpsb
inc
adc
mov
rcrl
mov
jmp
addr16
pushf
push
dec
sbb
test
out
xchg
or
mov
pusha
jne
mov
jge
mov
and
pop
add
pop
shlb
xor
cmp
inc
push
and
or
adc
mov
push
js
inc
sbb
inc
push
shrl
loop
lods
pop
js
cltd
mov
cmp
pop
je
mov
pop
and
out
or
jecxz
je,pt
add
fisubl
inc
lcall
dec
sub
sub
xor
aas
or
add
sub
dec
subb
test
sbbl
xor
int
adc
jg
mov
xchg
shl
sbb
scas
call
shl
pushf
sahf
stos
fbld
add
cmp
xchg
pop
push
adc
or
lock
mov
out
sbb
xchg
rcrl
xor
mov
mov
aam
and
insl
cmp
rcrb
sub
sub
dec
jbe
or
xor
xor
jno
cltd
dec
push
xchg
cmp
jne
in
sub
fnstsw
popa
faddl
fidivrs
imul
cmp
enter
adc
pop
or
rolb
add
and
scas
cmp
ljmp
test
pop
data16
sub
pushf
and
mov
xchg
jle
daa
icebp
pop
outsl
out
gs
cwtl
xor
movsb
ss
add
out
fcomps
push
xor
fisttps
mov
sti
fcoms
cmp
adc
sub
cmp
dec
in
std
jae
mov
ja
jg
adc
pop
add
pop
xchg
jo
rorb
in
sub
xor
dec
mov
pop
xor
adc
or
test
in
xor
ret
dec
stos
mov
sub
jecxz
andb
repz
xor
push
dec
or
mov
pop
mov
mov
jl
xor
test
push
and
insb
and
fs
xor
add
sub
or
repz
shlb
jb
test
aad
repnz
push
test
ficompl
pushw
repz
adc
push
lret
lahf
pop
jl
movsl
cwtl
and
ds
sub
fs
jle
in
lods
sub
scas
jns
jae,pn
add
scas
jnp
push
fwait
jge
pop
in
inc
cmp
movsw
out
faddl
iret
mov
add
xchg
imul
cmp
pop
add
push
xor
fsubs
sub
fdiv
cwtl
lret
cmc
jnp
adc
test
lahf
mov
addr16
cmpsb
fnsave
movsb
hlt
dec
shrb
andb
lea
push
popa
mov
in
mov
in
psubusw
jo
or
and
xchg
ds
pop
push
popl
jle
outsb
fxam
pop
sub
vhaddpd
xlat
addl
add
xchg
and
sarb
int3
loopne
add
mov
sbb
inc
loopne
cltd
mov
cmpsb
or
fsubp
pop
not
xor
dec
push
nop
ds
xor
daa
popf
sbb
cltd
lcall
push
out
stos
iret
mov
in
mov
pop
ds
fldenv
pop
mov
or
xchg
xchg
pop
mov
dec
inc
and
sbb
sub
add
ljmp
and
aam
xchg
or
xor
or
xchg
adc
pusha
adc
or
pop
xchg
imul
arpl
sub
xor
sbb
dec
mov
dec
mov
or
sub
mov
out
clc
adc
mov
stc
and
xchg
aad
inc
dec
ljmp
push
and
loop
lcall
scas
sahf
sbb
rclb
inc
pop
loope
add
jg
mov
push
outsb
adc
mov
je
jo
arpl
xchg
jle
fidivs
add
xchg
mov
rcr
enter
lea
xchg
cltd
push
add
mov
add
pop
fwait
jns
push
jo
andl
xchg
mov
shl
xchg
cltd
cld
or
int3
jge
mov
cli
ss
jae
jmp
cmp
icebp
orl
test
cli
jge
adc
xor
pop
arpl
rorl
push
test
or
dec
inc
gs
push
aam
push
repnz
and
jl
cmp
xchg
add
xchg
hlt
xor
cmpl
mov
lcall
lea
inc
int
jg
mov
aad
aam
xchg
inc
test
sti
push
xchg
cmp
fcomi
sbbb
aad
or
jle
enter
jl
mov
das
inc
std
sbb
mov
out
xchg
pop
and
jnp
jbe
scas
or
xor
insl
das
lock
adc
pop
sub
rclb
out
repz
jge
cmpl
stos
fcoms
gs
sub
test
mov
push
loop
ret
loopne
or
pop
lret
fdivrs
xchg
pop
push
rcl
int3
xlat
or
pop
sarl
mov
icebp
mov
and
xlat
jmp
notl
lahf
jno
sarb
xorl
add
and
jae
hlt
and
imul
cmp
and
fistpl
ss
fs
jno
mov
push
sub
cmc
das
stos
mov
sbb
xchg
xlat
mov
cmpb
aaa
notb
add
xor
inc
int
dec
fsqrt
testl
imulb
jb
inc
pushf
xchg
es
xacquire
sbb
add
jbe
mov
jno
cmc
repnz
mov
push
es
jmp
sub
mov
dec
add
out
xor
jns
push
leave
stos
cltd
jnp
clc
dec
jno
and
shll
adc
daa
pop
adc
das
adc
movsb
mov
mov
out
xchg
mov
pop
insl
pop
rep
jns
std
enter
and
stos
enter
push
shl
aaa
mov
or
mov
mov
xor
out
loopew
cmp
xor
jne
js
cmpsl
push
popa
xchg
dec
stos
clc
in
push
pop
fucom
rcl
in
es
cmp
mov
push
mov
incb
aad
cs
xchg
pop
stos
pop
mulb
fldl
xchg
test
int3
sbb
pop
aad
rcrl
push
mov
mov
mov
in
jp
mov
pop
ret
cli
xor
sbb
or
jae
dec
push
mov
jg
dec
push
mov
jge
rolb
leave
sub
test
loopne
jbe
xchg
cmp
das
cmp
dec
pop
aas
mov
or
pop
lret
rdtsc
lea
pop
pop
jge
push
add
sahf
es
dec
popa
js
and
inc
das
mov
aad
sbb
dec
shrb
scas
aad
xchg
jbe
enter
fiadds
push
lret
and
xor
js
int3
mov
adc
test
loop
xor
scas
rorb
add
out
dec
outsb
mov
xchg
jne
xor
stc
rdpmc
test
loope
leave
shll
pop
cmpsb
sti
mov
cmpsb
inc
std
test
and
loopne
pop
shll
pusha
mov
in
into
cmpsb
mov
loope
xchg
loope
daa
xchg
stos
das
or
dec
add
outsl
inc
mov
aaa
pop
into
jmp
dec
inc
ds
and
arpl
in
in
popf
dec
sbb
mov
pop
sub
addr16
push
divb
or
pop
inc
mov
push
mov
nop
mov
xor
js
pushf
push
inc
or
sbb
repnz
push
cmp
ficomps
call
int
cmpsl
repnz
xor
xchg
mov
cmp
xchg
mov
sbb
xorl
fbld
inc
scas
les
push
test
cltd
adc
xchg
insl
or
xor
mov
add
or
push
xor
xor
xchg
and
pop
jbe
in
ret
jmp
je
shlb
imull
push
sarb
insb
jbe
adc
or
push
sub
in
xchg
adc
fbld
or
nop
and
iret
and
and
in
pop
push
push
jmp
lret
fisubrs
ret
inc
dec
cmp
xor
and
aad
dec
insl
sub
loope
int3
add
mov
and
sub
pop
fwait
stos
gs
jne
cmp
sub
flds
jp
dec
jnp
push
xlat
clc
std
push
cmpsb
fwait
cmp
arpl
or
cwtl
mov
divb
lcall
cmp
nop
mov
adc
xor
sbbl
sub
mov
cltd
rcrl
insl
aad
cmp
negb
sbb
ss
sti
es
sbb
int
aaa
popa
test
or
xchg
adc
arpl
call
xor
scas
inc
pop
sahf
pop
inc
jge
pushf
adc
stos
dec
push
aas
js
sub
pop
mov
and
cli
jae
jb
add
jp
inc
sbb
xor
ja
mov
mov
imul
imul
push
cmc
les
mov
insb
es
loopne
push
add
lds
repnz
xor
into
xor
mov
push
pop
pop
dec
inc
pop
das
subb
add
sbb
add
mov
lret
cmpsb
sbb
movsb
stos
dec
inc
movsb
iret
pop
jno
push
cmp
push
das
inc
and
testb
rcr
dec
or
push
mov
mov
mulb
mov
loope
cmp
ds
xchg
repnz
jmp
xchg
fsubp
push
adc
sbb
imul
jmp
cmpsb
fsts
cmp
jge
push
leave
lret
cltd
mov
cmp
jmp
scas
leave
sub
sbb
popa
mov
outsl
int
insl
push
sbb
sti
jge
addl
pop
and
pop
fldenv
ret
cmp
lods
add
xchg
mov
int3
lret
mov
adcl
mov
nop
out
cmp
mov
xchg
loope
test
mov
mov
dec
sub
test
push
rcl
or
mov
outsl
inc
mov
pop
sub
mov
in
fstp
sbb
negb
sbb
inc
jno
sbbl
dec
pop
push
int
int
arpl
movsb
push
sub
add
xchg
fisubl
cmpsl
js
sub
cmp
or
lret
rcl
filds
imul
daa
and
les
inc
add
popf
lahf
sbb
cmp
mov
pop
cmp
mov
mov
sbbb
je
insb
pop
enter
popf
dec
arpl
popf
push
and
lods
cmp
adcb
push
arpl
lahf
dec
clc
sbb
into
lods
outsl
daa
or
hlt
mov
gs
adc
mov
out
lret
push
enter
int
scas
in
pop
add
adc
push
pushf
cmp
jno
jl
or
xchg
or
jp
pop
fisttpl
clc
mov
add
dec
dec
clc
mov
dec
repz
out
int
push
or
outsb
mov
and
pop
stc
and
aam
sbb
gs
stos
int
pop
loope
in
mov
mov
outsl
rcrb
js
or
out
mov
inc
dec
pop
int
lret
adc
lret
mov
pop
push
rcll
pop
ja
fnstenv
scas
push
jbe
pop
imul
pop
add
sbb
fs
popf
dec
pop
pop
mov
pushf
bound
inc
xchg
daa
sbb
mov
es
cmc
xchg
push
aas
add
add
out
jae
shrb
ss
movsb
push
xchg
push
xchg
cmp
insb
mov
mov
dec
cmp
and
daa
es
dec
xchg
loop
xor
adc
add
aam
cmp
imul
shl
cmp
inc
sahf
movsb
xor
test
flds
in
mov
and
out
jmp
xchg
mov
lods
mov
mov
fst
leave
sbb
enter
dec
mov
leave
lret
sub
dec
cld
cmp
mov
pusha
pop
sahf
js
sbb
sbb
cmp
stos
dec
inc
sbb
daa
adc
test
gs
idiv
pop
ret
xlat
pop
in
sbb
ret
jo
sbb
clc
rcrb
push
loope
loopne
sub
outsl
and
lods
sbb
inc
push
dec
pushf
xor
stos
dec
icebp
prefetch
movsb
xchg
and
sbb
cltd
cmc
ljmp
jmp
add
cmc
aad
cmp
pop
movsl
add
scas
scas
in
push
loope
insb
sub
mov
sahf
or
repnz
cmpsb
sbb
pop
add
mov
movsl
dec
jmp
scas
pop
add
xor
fcoms
je,pt
ja
adc
mov
icebp
daa
jo
loop
shl
or
bound
pusha
xchg
lret
aaa
out
aad
xor
xchg
cmp
sbb
js
outsl
pop
shlb
ret
lahf
cmp
arpl
push
imul
dec
adc
in
pop
xchg
cmpsb
push
push
clc
inc
fs
loopne
stos
lods
mov
push
adc
ja
or
fimull
in
lods
push
pusha
lcall
roll
adc
clc
arpl
ljmp
inc
negb
fnsave
fcomps
cmp
ss
stos
dec
outsl
xlat
repz
sarl
lahf
mov
mov
xchg
lahf
stos
jge
outsb
push
je
popl
add
je
fwait
mov
rcll
outsl
push
sarb
xor
addb
int3
adcl
or
dec
int3
xchg
out
pop
test
pop
add
js
shrb
push
xchg
inc
cmp
pusha
pusha
jns
aaa
jno
enter
pop
pop
std
inc
fildll
cmp
inc
push
lods
jns
jp
inc
clc
in
hlt
loopne
in
lahf
mov
push
arpl
fisttpl
aam
mov
lcall
out
jb
das
int
jns
das
mov
lds
and
push
pop
pop
es
cmpsb
bound
add
inc
fnstenv
push
sbb
xchg
xor
stos
cli
popf
bound
imul
push
sbb
pop
in
cmc
test
js
adc
aas
adcb
fildl
fisubrl
sti
push
mov
or
mov
mov
outsb
jae
add
in
dec
adc
mov
imul
rolb
mov
aam
in
popa
push
mov
mov
stos
xor
and
add
jmp
movsb
nop
call
testb
in
sbb
mov
arpl
mov
cs
fidivl
and
loope
pusha
mov
xchg
dec
cltd
sbb
mov
popa
adc
mov
jno
adc
fidivs
pop
xor
jmp
pop
test
inc
and
mov
jne
lahf
sub
sub
inc
adc
pop
xchg
inc
or
adc
test
popa
ret
adc
pop
enter
out
addr16
bound
out
bound
xor
call
mov
jae
xor
sbb
je
out
fs
ud2
adc
adcl
popa
lret
pop
enter
leave
imul
or
cmp
loop
addr16
dec
popa
shrb
cmp
pop
add
sahf
or
iret
cmpb
outsb
or
cli
ja
xchg
mov
or
jo
mov
ret
inc
cltd
cli
out
lock
addb
fwait
loope
shr
fwait
out
daa
int
in
add
dec
adc
inc
rcrl
jae
push
shl
jb
jne
ja
scas
outsb
xor
adc
repz
sti
cltd
sbb
jo
pop
fsubr
sbb
cmp
scas
in
mov
xchg
arpl
lret
xchg
fidivl
aaa
js
and
push
icebp
cmp
mov
out
xor
mov
ret
lcall
or
daa
lods
popf
out
xorb
call
mov
das
mov
push
lahf
loope
pop
das
movsl
push
in
cmpl
aad
cmpsl
insb
cmpsl
inc
enter
sbb
cld
insl
or
mov
fnstenv
sbb
clc
xor
xchg
pop
mov
mov
ds
cwtl
push
shll
ljmp
pop
lret
push
jo
lods
or
or
rorl
bnd
test
lds
sbb
xor
sub
jmp
repz
and
fs
mov
stos
add
aas
mov
loop
xchg
sti
scas
cmp
mov
jbe
ret
call
lds
mov
outsl
cmp
movb
cmp
out
pop
jno
mov
jb
ljmp
push
lahf
sbb
imul
mov
iret
cmc
cmpsb
stc
rorb
xchg
mov
js
insb
outsb
sub
jecxz
les
sub
cmpsb
stos
mov
jecxz
ljmp
sbb
scas
pop
mov
out
pop
jb
push
jb
hlt
popf
or
jns
xor
jo
jno
inc
xchg
sbb
and
imul
sub
sbb
or
dec
movsb
xchg
inc
stos
push
ss
ja
mov
mov
and
pop
pop
inc
jb
jnp
test
test
test
pop
cmp
dec
dec
jge
loopne
adc
push
dec
test
rolb
leave
in
dec
sbb
in
sbb
jae
push
ja
and
enter
addb
adc
lcall
repz
enter
in
pop
or
mov
lods
cli
mov
mov
adc
leave
mov
jne
sub
mov
push
mov
cmp
mov
scas
jge
mov
and
lcall
jle
push
cmp
xlat
add
inc
jecxz
dec
push
aaa
add
sbb
jae
adc
in
pop
lea
push
stc
and
push
adc
pmullw
scas
clc
xlat
mov
jo
ljmp
adc
std
mov
pop
bound
bound
mov
xor
ljmp
enter
imull
ret
mov
push
outsl
fcompl
or
dec
or
shlb
in
into
shll
mov
mov
jg
lock
jg
xchg
xchg
rcrb
repz
mov
dec
hlt
iret
push
dec
inc
mov
orb
sbbb
and
dec
shlb
inc
nop
out
fwait
mov
test
push
mov
pop
pop
cld
andb
idivb
jg
out
clc
cmpsl
imul
or
inc
sub
jecxz
xchg
icebp
outsl
add
add
or
addr16
or
mov
pop
or
adc
sbb
cmp
leave
xor
in
mov
xchg
insl
ja
rolb
and
ss
imul
sbb
push
repz
dec
xchg
xor
mov
out
inc
push
aam
in
pop
dec
out
test
jp
rcl
insl
dec
fstpl
inc
dec
jo
mov
gs
mov
out
dec
stc
mov
scas
into
mov
inc
or
cmp
dec
push
inc
mov
dec
pop
sbb
sub
cmp
repnz
pop
cwtl
punpcklwd
mov
and
cmp
add
jmp
sti
mov
pop
fdivrp
mov
in
mov
dec
sbb
inc
jl
cmp
or
mov
in
mov
lret
jge
je
mov
cmp
dec
sbb
pop
fwait
mov
mov
rcrb
sti
mov
shlb
and
imul
adc
add
dec
mov
xlat
jne
in
lea
jbe
mov
or
shrl
test
jbe
inc
and
mov
insb
pop
mov
inc
add
pop
ljmp
pop
sub
ds
int3
push
push
aam
lds
mov
bound
fwait
xor
movsb
aad
dec
mov
mov
push
das
call
ljmp
fwait
sti
inc
es
jbe
adc
fcmovbe
lahf
adc
xchg
mov
and
cmp
pop
xor
or
sbb
xor
adc
xchg
mov
adc
arpl
mov
into
inc
and
ret
pop
paddusb
cmp
pop
xchg
adc
dec
inc
ret
jecxz
ss
add
add
in
pop
xor
jo
push
pop
xchg
mov
dec
mov
mov
mov
mov
int3
fwait
sti
dec
popa
fld
fcomps
or
xchg
mov
call
aam
imul
lock
out
dec
pop
inc
mov
push
dec
and
cs
out
imulb
je
sub
and
mov
adc
pop
xor
lods
xor
mov
dec
pop
and
cmp
inc
add
stc
or
or
push
test
push
imul
test
shll
in
xlat
sarb
sbb
xchg
dec
push
jecxz
jmp
inc
add
cltd
sbb
push
cmp
and
pop
inc
in
xchg
rcrb
in
sbb
les
cmp
mov
loopne
jle
cwtl
pop
sub
popf
mov
lods
push
push
mov
pop
dec
xchg
sbb
out
ffree
lods
cmp
sahf
pop
push
xchg
js
inc
leave
int3
sub
addb
cmp
ds
or
sub
adc
xor
pop
out
xchg
push
data16
fimuls
movsl
into
xchg
mov
leave
sarl
dec
ret
repz
out
mov
fdiv
add
mov
shrb
shrb
insb
and
inc
fsubrl
adc
fstps
sahf
outsb
jp
loop
jbe
jmp
jle
les
mov
and
dec
mov
hlt
mov
dec
orps
mov
out
int3
push
dec
jb
dec
insl
pop
movsl
subl
rorl
push
insb
mov
xchg
cmpsb
push
addr16
outsb
pop
cmp
mov
rorb
insl
sbb
cmc
roll
adc
pop
das
xchg
sbb
testb
push
scas
add
lock
std
lods
sub
jmp
bound
fucomip
or
push
fstps
xchg
sbb
shl
bound
lret
xlat
int3
sbb
xor
push
js
inc
push
inc
pop
addr16
sub
outsb
fstpl
mov
popf
ljmp
sar
mov
andb
xchg
pop
outsb
cwtl
xor
push
dec
inc
cmpsb
lret
sub
xor
jbe
aam
test
push
fsubs
push
jecxz
outsl
mov
mov
pusha
mov
test
or
xor
rcr
adc
bound
cld
mov
or
das
jle
cltd
stos
test
and
and
cltd
test
push
pop
jno
sarb
lret
cmc
fbld
rorl
fmuls
sahf
pusha
test
ds
fstpt
fldt
dec
pushf
pop
cmp
mov
pop
shl
xor
in
push
mov
icebp
outsb
popa
cmp
inc
bound
mov
and
sbb
push
dec
data16
insl
jns
add
movsl
push
loope
mov
lock
add
cli
dec
popf
sbb
in
push
pop
in
jnp
pop
icebp
sarb
cltd
addb
jnp
std
xchg
cmp
mov
xor
adc
xor
sbb
mul
mov
push
sbb
cmpsl
sbb
ret
imul
orl
and
lret
and
nop
jmp
cmp
xor
rcll
cmp
mov
test
insl
imull
sahf
ss
mov
repnz
jae
andb
cld
xchg
out
rcrb
les
testl
pusha
add
inc
ja
out
sub
stc
cmc
pop
cmp
mov
scas
mov
dec
in
in
call
cmpsl
inc
dec
mov
and
inc
shlb
xchg
dec
push
and
mov
jl
enter
mov
push
stos
adc
xchg
ret
pop
jnp
jno
push
divl
dec
outsl
jae
loope
cmpsl
adc
movsb
add
lret
or
jo
sahf
sub
sub
inc
mov
push
mov
jno
xchg
ret
xchg
mov
ss
in
sbb
xchg
fwait
inc
mov
pop
jbe
and
rol
inc
popf
xor
xor
xor
mov
out
sbb
xor
in
pop
or
aaa
arpl
xor
xlat
lods
mov
and
mov
fs
fldcw
imul
pmovmskb
and
inc
sbb
inc
mov
and
enter
or
xchg
mov
pusha
push
mov
xchg
cmc
cs
and
subb
sbb
stos
mov
and
sbb
cmpsl
dec
hlt
sub
jmp
sbb
lods
jae
sbb
ss
stos
mov
jle
ds
pop
xchg
movsl
repz
ljmp
xchg
cs
es
jmp
sub
das
imul
fstpt
in
shrb
lahf
push
ljmp
pop
repnz
lcall
add
and
xor
out
or
int
loopew
dec
stc
cmp
push
jecxz
pop
fcompl
jge
les
push
cmp
sbb
and
fstps
sub
sahf
rolb
ret
cwtl
loopne
testl
cmp
xorl
hlt
out
iret
and
jbe
aaa
mov
pusha
sbb
decb
fwait
repz
mov
mov
movsl
out
push
js,pn
popa
sub
pop
pushf
and
test
dec
andb
out
sub
adc
dec
lret
lods
andl
stos
les
cmp
imull
out
stos
int3
enter
sub
dec
mov
inc
lret
enter
testl
pop
mov
std
lods
sti
lods
dec
xor
mov
fimuls
xchg
or
add
mov
sub
gs
out
push
xor
xchg
cmp
mov
inc
dec
push
mov
cmp
mov
mov
cmpsb
dec
xchg
cmp
xor
stos
cli
mov
jle
jl
dec
ja
jne
mov
inc
stc
xor
adc
pop
outsb
loopne
movsl
dec
xchg
cmpsb
sarl
popa
mov
aas
cmc
cmp
icebp
in
mov
jne
adc
sub
xor
pop
mov
movsl
xchg
lret
pop
pop
push
movsb
jmp
push
out
call
inc
or
dec
xor
and
icebp
scas
mov
push
call
jb
pop
cli
mov
mov
xor
in
jp
dec
adc
mov
pop
call
shrl
cltd
stos
mov
xor
test
dec
sub
lock
cmc
xchg
jle
dec
or
inc
inc
sub
clc
std
mov
daa
addl
mov
add
mov
in
lds
jnp
outsb
addr16
jnp
push
and
inc
ja
jne
ret
cmp
jge
out
cmp
fs
sub
loope
test
dec
mov
loopne
mov
pop
daa
popf
xchg
push
leave
loopne
insb
hlt
fstps
inc
push
jae
fcom
inc
cmp
jmp
or
outsb
lock
in
sub
fwait
mov
xor
ljmp
ss
cmpsb
lahf
xchg
sub
push
in
cmc
xchg
sti
popa
jbe
fs
stos
or
lret
imull
enter
ror
ljmp
aam
pop
aas
xor
xor
add
insb
aam
xchg
out
aad
dec
int
aad
fdivs
mov
je
inc
or
mov
xchg
jg
inc
in
jns
jns
mov
fs
mov
add
cmc
dec
addr16
dec
call
mov
outsb
push
pop
pop
cli
imul
mov
std
not
data16
lcall
cmpsb
inc
cmp
out
call
or
xchg
andl
stos
mov
daa
push
push
xorl
aaa
mov
shr
in
and
in
mov
mov
pop
pop
cmp
dec
dec
cmpb
scas
mov
inc
je
cmp
mov
xchg
add
out
sahf
test
pop
outsb
cmp
popf
scas
test
fs
fmul
in
sbb
jmp
mov
or
imul
push
and
and
aaa
mov
dec
add
adc
loope
pop
popf
arpl
popf
fstpl
mov
inc
or
jg
hlt
inc
lods
sti
sbb
inc
nop
pop
add
nop
pop
xchg
into
mov
mov
push
bound
icebp
fsubl
xor
pop
iret
xchg
xchg
imul
sub
outsb
notb
int3
ret
mov
jge
mov
adc
ret
ljmp
mov
xchg
js
testb
jmp
hlt
push
jge
xor
xor
insl
push
jp
sub
cmpsl
cmp
jle
fnstenv
flds
ljmp
sbb
jne
xor
imul
dec
mov
push
adc
jle
adc
xor
add
jl
push
cmp
push
sub
fidivrs
push
push
inc
sahf
xor
sub
fsubrl
cli
sbb
orl
fiadds
fisubrl
lock
xchg
adc
sbb
js
lahf
stos
jnp
dec
dec
sbb
stos
out
and
mov
sub
mov
sub
or
pop
adc
cmp
orb
mov
bound
dec
call
cs
ret
lock
push
incl
addr16
stos
push
mov
push
mov
jnp
out
jl
push
gs
jmp
cltd
lahf
lock
stos
pop
push
sub
add
test
mov
adc
xchg
dec
jnp
pop
nop
inc
pushf
jp
adc
xchg
je
cmpsb
add
jl
add
aaa
shl
dec
loop
repnz
xchg
mov
into
in
fwait
xor
outsb
pop
pusha
call
imul
and
lea
sub
fdivrs
pop
bnd
pushf
xchg
mov
mov
sbb
add
out
cmp
andl
out
and
and
lahf
pop
insl
and
int3
out
pop
lea
pop
or
stos
mov
jbe
je
mov
pop
orb
arpl
xchg
andl
xlat
movsl
xchg
ljmp
adcb
cld
jp
out
and
jl
xor
pop
stos
sbb
and
lds
cmpl
jo
rcrb
mov
and
inc
xor
bound
sub
out
xchg
jnp,pn
lcall
pop
cli
in
hlt
pusha
adc
adc
das
mov
ja
mov
ja
mov
sub
push
shl
lret
data16
push
hlt
lret
addps
je
mov
das
add
sahf
cmp
in
cmpsb
out
push
push
cmpsb
ja
cmp
jle
or
loop
cmp
adc
das
dec
std
cltd
addr16
and
cs
push
mov
push
xchg
stos
dec
cmpsb
aam
ror
pop
xor
add
or
out
ss
xchg
add
stos
xor
add
icebp
push
fxtract
lret
imull
roll
xchg
push
fdivrl
push
aam
mov
and
sbb
inc
popa
into
test
enter
mov
jno
jecxz
or
shrb
jecxz
inc
xor
imul
sub
aam
dec
cmp
adc
mov
mov
dec
aad
push
test
and
in
cld
mov
xchg
jg
pop
int
cmp
xchg
repnz
push
stos
loope
lret
cli
push
cmp
push
scas
shlb
xchg
sbb
je
test
fucompp
in
fsubrl
mov
imul
test
aad
jmp
inc
popf
cld
outsl
push
lret
sbb
xchg
xchg
pop
stos
or
xchg
and
lret
mov
xchg
clc
push
icebp
fst
test
test
sbb
daa
imul
adc
gs
xchg
jle
rol
call
cmpsl
int
daa
add
and
pop
lahf
movsb
addr16
mov
sbb
in
and
sub
cltd
dec
dec
sbb
push
mov
aaa
sbb
push
or
mov
aas
pop
int3
addl
gs
js
lcall
fisttpl
iret
pop
sbb
inc
inc
loop
jmp
rcrb
push
pop
mov
adc
shlb
inc
lret
inc
push
cmp
jb
and
sbb
leave
push
mov
incl
ds
lahf
mov
mov
sbb
sub
mov
ja
pop
call
add
xchg
sbb
push
insl
mov
adcl
push
dec
sub
adc
shll
push
dec
mov
add
push
push
sbb
out
push
mov
insb
lcall
loopne
rcrl
stos
rorb
aam
call
out
inc
cmp
cmp
or
insb
push
sub
inc
int
mov
push
sbb
jecxz
jmp
pop
and
js
cmp
cs
aad
je
cmp
insl
inc
test
je
adc
mov
jns
mov
stos
add
sahf
in
sbb
xorb
mov
jp
or
data16
test
pop
addr16
stos
sbb
mulb
popf
xchg
sbb
pop
xor
push
jl
mov
xchg
mov
lea
shrb
xor
dec
int
ja
arpl
adc
adc
sbb
push
popa
mov
xchg
mov
inc
cld
fadds
sarl
subl
sbb
sahf
xchg
cmp
mov
lods
insl
ds
scas
mov
stos
push
add
mov
outsb
pop
sub
cmp
es
pusha
mov
push
inc
addr16
fwait
out
jno
call
mov
jnp
aas
int
cmc
imul
xchg
leave
in
repnz
sub
scas
push
test
inc
scas
jle
mov
ret
pusha
testl
sti
xchg
dec
pop
fwait
aas
xchg
gs
jmp
ljmp
call
fbld
outsl
or
int3
jge
sbb
int
ja
movsl
daa
loope
scas
or
out
and
sarb
out
movd
mov
fwait
dec
cmp
mov
dec
and
shl
loopne
ss
xchg
insb
aam
jb
dec
call
jmp
in
je
repz
or
push
imul
sbb
int
and
daa
sub
push
cli
mov
loopne
fiadds
push
mov
push
icebp
add
mov
std
out
xchg
out
gs
adc
pop
subb
popf
cltd
dec
fnstsw
or
push
popf
jbe
or
jo
aaa
mov
adc
sub
nop
ja
addr16
stos
push
fmuls
fidivrl
inc
out
rorl
movb
loopne
ret
fs
mov
scas
push
ffree
dec
sbbb
sub
mov
jg
lods
mov
stc
test
pop
add
repnz
inc
cltd
icebp
sub
xchg
adc
insl
arpl
add
mov
inc
dec
ret
lods
jecxz
rorl
cmpsl
xor
pop
loope
push
ljmp
mov
orl
and
mov
into
fidivl
add
and
mov
jp
leave
ljmp
or
aad
mov
mov
or
stos
inc
fnstsw
fldcw
or
jmp
test
xchg
mov
add
test
sub
adc
jns
add
lods
lret
pop
out
push
lods
mov
push
add
pushf
adc
jns
test
daa
aaa
fnsave
add
jae
push
adc
push
ret
sub
hlt
imul
add
jg
xor
mov
pop
aaa
mov
push
hlt
pop
push
movsl
dec
or
stos
push
sbb
mov
xor
mov
scas
push
leave
cmp
imul
lds
in
test
sarl
pop
adc
in
mov
arpl
pop
sar
insb
xchg
in
shlb
ret
loope
test
cmp
adc
aam
loop
nop
dec
fcmovnu
into
aad
ret
dec
xchg
sub
add
test
mov
test
lods
mov
and
dec
daa
scas
ljmp
out
enter
call
xchg
and
pop
cmpl
fists
jecxz
inc
cpuid
rorb
mov
loope
push
mov
adc
push
mov
test
test
or
repnz
out
shr
add
stc
or
push
into
jo
dec
sub
hlt
or
jnp
imul
or
add
je
mov
mov
inc
mov
clc
or
repnz
lret
movsb
jmp
into
dec
and
or
jne
ljmp
stos
repz
mov
aas
mov
sbb
dec
inc
adc
sub
or
test
xchg
pop
lea
cmp
pop
clc
mov
xor
pop
push
add
lods
nop
sub
inc
inc
rcrl
ds
or
sub
adc
xor
movsb
aam
clc
mov
sub
cltd
arpl
loopne
xor
mov
push
or
daa
rolb
lods
pusha
mov
lret
or
xchg
stos
or
pushf
sti
imul
movsb
mov
insb
jbe
icebp
into
movsl
jle
rcrb
leave
test
in
mov
hlt
and
inc
mov
aam
pop
fs
xlat
pop
clc
ret
stos
jae
xor
mov
pop
xor
pop
sub
dec
pop
sub
add
jle
call
icebp
dec
ja
int3
pop
jl
repnz
cmp
push
sbb
dec
inc
popf
jb
push
mov
clc
aad
mov
and
mov
aaa
pop
lret
mov
mov
repz
cmpsl
iret
mov
insl
sahf
push
jb
push
mov
mov
shlb
cld
out
xchg
imul
les
test
js
out
das
fwait
imul
sub
xlat
pushf
les
add
lds
push
jbe
stos
mov
addr16
rcl
mov
add
ja
pusha
inc
or
adc
movsb
and
ret
iret
mov
shlb
fildll
cmc
jecxz
and
out
pop
push
inc
out
and
add
inc
jns
lea
push
aad
adcl
mov
negb
mov
inc
fwait
mov
daa
divl
rcr
dec
jecxz
inc
push
outsl
stc
call
fistpl
out
in
dec
mov
pop
mov
adc
or
mov
in
insb
cmp
cmpsl
inc
enter
xchg
ficoms
icebp
inc
jo
out
adc
ljmp
push
inc
cmpsb
outsb
cld
dec
loopne
ja
sbb
xchg
mov
cmp
cld
sub
pop
int
push
push
mov
cmp
xchg
rol
lret
ljmp
mov
mov
std
pop
mov
outsb
mov
pop
jp
xchg
lcall
clc
jl
xchg
cltd
jb
cmc
sbb
add
cmp
sub
cltd
call
jmp
push
mov
xchg
xchg
or
mov
cmc
ljmp
shll
mov
and
xor
inc
fs
adc
inc
data16
imul
cli
jne
daa
pop
iret
pusha
push
xor
jl
popa
mov
add
ja
push
jno
jg
push
imul
pop
test
jmp
lods
mov
fnstsw
aaa
and
cmp
loopne
loop
ret
inc
dec
push
nop
jecxz
and
sub
pop
dec
push
lahf
sbb
or
in
cmp
loop
bound
or
inc
adc
aad
xchg
mov
jp
sub
or
int3
cs
enter
cli
mov
fwait
iret
fsubs
jge
mov
xchg
clc
cmp
addr16
xchg
xchg
inc
jge
scas
and
or
mov
cld
jno
jmp
loopne
pop
jle
jno
fwait
pop
jno
adcb
add
dec
mov
stos
idivb
stos
popf
add
sbb
mov
push
ja
aas
jo
mov
push
int3
lret
mov
leave
les
xchg
mov
in
lock
call
lods
jno
pop
call
jecxz
rcrb
loop
daa
cld
js
cmpsl
fwait
xchg
fisubrs
negb
ljmpw
add
lret
sub
adc
mov
inc
sahf
orl
popf
sbb
sbb
push
cwtl
rorl
daa
shll
adc
test
scas
cld
xlat
iret
pop
data16
jb
jae
mov
fmuls
std
hlt
insl
sub
insl
mov
adcb
dec
mov
push
sub
les
pusha
xor
mov
push
xchg
aad
lods
icebp
out
shlb
mov
and
or
pushf
sub
sbb
xchg
mov
ret
lock
add
aam
in
jo
mov
adc
push
in
mov
pop
mov
les
push
push
test
call
movsl
add
aad
mov
out
lahf
mov
jno
sbb
xor
popa
bound
or
out
push
enter
pop
dec
xlat
xor
push
mov
jne
lods
jecxz
sub
outsb
in
push
dec
orl
or
cmp
ret
sbb
test
je
ds
add
add
inc
cmp
mov
dec
lret
cwtl
js
jb
and
in
orl
nop
imul
lret
mov
sbb
insl
mov
dec
or
push
sar
cmc
data16
gs
pusha
xor
xchg
xchg
mov
loop
push
ret
stos
pop
dec
jns
push
inc
add
xor
lea
das
mov
push
pusha
pop
dec
cmovns
lahf
inc
popa
xchg
mov
repz
mov
mov
adc
push
stos
ret
lea
push
f2xm1
push
xchg
xor
and
int
mov
push
add
leave
pop
mov
dec
cmp
test
addl
xor
push
jns
rolb
movb
mov
arpl
or
out
insl
jno
stc
mov
lahf
xchg
xor
add
push
adc
je
xchg
rorb
xor
jg
rcl
js
jecxz
push
jno
push
cmp
cli
jmp
iret
pusha
add
daa
iret
add
sahf
jns
das
mov
test
mov
daa
bound
out
arpl
inc
cs
mov
and
sahf
outsl
mov
lock
sahf
xchg
outsl
mov
lret
xlat
xchg
f2xm1
sbb
sub
mov
stos
sbb
mov
into
mov
dec
fs
jmp
test
lea
push
ret
lret
shll
arpl
clc
fdivrl
and
aaa
std
xlat
lcall
lret
mov
les
imul
in
push
lds
imull
xlat
or
arpl
add
sbbb
bound
mov
xor
orb
or
jne,pt
xor
and
xor
push
inc
xchg
dec
es
adc
cwtl
or
jle
pop
lcall
mov
lcall
popf
imull
lods
cmc
cmp
xorl
divb
push
lods
pop
test
pop
dec
insb
mov
and
and
jo
cltd
mov
jle
arpl
xchg
push
pop
sbb
loopne
lods
sbbb
jg
mov
mov
test
lods
test
les
mov
jne
add
cmp
ss
pop
adc
cs
sbbl
hlt
cwtl
dec
cmp
xchg
in
into
sbb
jg
mov
mov
mov
or
fisttpl
mov
xchg
dec
fcomi
pop
mov
sbb
sbb
icebp
or
mov
sub
mov
pusha
pop
divb
aad
sub
sahf
cld
cmp
cmp
call
insb
and
xor
jae
xchg
out
lcall
sbb
imul
lods
incb
out
lds
cmp
cmp
aas
sbb
push
cltd
cmc
dec
leave
xchg
push
adc
les
js
ds
mov
pop
mov
and
in
sbb
sbb
cmp
jb
pop
xor
test
pop
and
mov
adc
mov
imul
sbb
xlat
ja
add
ljmp
adc
jl
test
and
push
mov
es
mov
jle
test
imul
adc
pop
call
sahf
sbb
mov
xor
inc
mov
rcr
out
subl
testl
and
in
int3
sub
or
push
add
pop
mov
cld
xchg
xor
or
dec
mov
loop
fcomps
adc
push
aam
into
push
dec
mov
ds
ja
test
pop
dec
sbb
nopl
xchg
lret
push
in
dec
out
sbb
sub
push
lea
push
pop
enter
repnz
aas
jge
xchg
mov
and
jno
push
pop
and
shrd
addr16
lea
pop
pop
pop
mov
int
pop
cmp
aaa
shrb
shr
imul
push
xchg
jmp
mov
mov
fcoms
dec
jmp
sbb
sbb
int3
jbe
out
adc
xor
les
xchg
out
add
ficoms
add
dec
pop
dec
mov
mov
lret
inc
ja
dec
aad
jecxz
sub
push
mov
or
insb
stc
xchg
stc
jno
jnp
shrb
jno
pop
cmp
cmp
cmc
ror
cmpsb
jecxz
xlat
repnz
xor
and
rclb
push
mov
lea
jl
pop
aas
and
jmp
xchg
aaa
mov
dec
shr
ds
jecxz
xchg
cmpsb
mov
inc
addb
sub
lcall
cmp
dec
mov
jecxz
pop
fadds
lret
outsb
sbb
pop
pop
jle
fldl
je
cwtl
mov
rorb
jecxz
in
cmp
lret
insb
hlt
pop
or
mov
bswap
sbb
ret
repz
pop
cmpsb
xchg
sub
mov
cmpsl
jae
push
sbb
lret
std
fcmovb
pop
rorb
xor
int
push
pop
dec
mov
shl
test
sbb
mov
jae
and
inc
cmc
scas
lods
xor
mov
xor
fsubrs
sahf
icebp
gs
lods
pop
push
in
ja
mov
shll
or
cmc
cli
jge
add
cmp
xchg
das
nop
xchg
jbe
jns
adc
fcmovu
pop
loope
mov
dec
cmp
jo
lret
pop
popf
cmp
push
sbb
xorb
cltd
and
adc
out
pop
mov
cmp
in
leave
mov
pop
rolb
fisubrs
pop
iret
xchg
das
jmp
pop
push
jmp
push
xor
cmp
jge
jp
mov
jne
cmp
xor
cmp
push
push
mov
test
xchg
push
sahf
shl
loopne
add
enter
lock
jne
out
mov
scas
or
xchg
les
call
jp
iret
shl
jns
and
push
lea
ret
add
mov
inc
jl
inc
push
mov
sub
mov
mov
mov
mov
and
addr16
mov
dec
or
jg
push
movsl
jbe
imul
pop
pop
xchg
jbe
adc
cld
cmp
testl
sub
mov
push
lods
pop
cmp
out
inc
add
jg
pop
push
out
je
mov
lret
mov
mov
cmpsl
jns
mov
mov
adc
push
clc
and
inc
xchg
xchg
je
xor
movsl
pusha
fucomp
xchg
test
fcompl
push
ds
and
addb
adcb
push
and
cmp
mov
mov
scas
lods
sub
pop
ss
xchg
test
fmull
xchg
or
cmpsl
xor
cmp
incl
or
jb
add
jbe
in
sub
test
and
jmp
add
pop
scas
pushf
test
jbe
sub
dec
popa
inc
insl
test
ss
imul
cltd
pop
push
jnp
cmp
into
mov
dec
in
push
ret
jne
mov
fldt
dec
stos
push
cmp
les
mov
idivb
cmpsl
push
xchg
mov
and
pushf
out
leave
dec
or
mov
mov
push
mov
cmpsl
pop
fisttpll
call
push
dec
scas
sahf
nop
lret
adc
and
pop
adc
insl
jne
mov
xor
push
leave
jbe
inc
sub
mov
outsl
xchg
sbb
adc
mov
push
xlat
adc
push
int
mov
fwait
add
cmp
xor
xlat
push
loope
orb
std
imul
or
sar
jge
add
add
incb
cwtl
mov
imul
dec
push
mov
pop
push
xor
mov
stos
jb
and
imul
xchg
leave
push
sub
dec
into
or
pop
test
mov
imul
dec
bsr
insl
outsb
xchg
mov
mov
cmpsb
bound
adc
iret
dec
mov
lret
divl
gs
stos
fnstcw
xor
outsb
mov
sub
and
add
add
dec
jecxz
pop
push
insl
mov
int
daa
inc
roll
cmp
arpl
and
es
add
jmp
cmp
addr16
movsl
movsb
imulb
push
cmp
sub
push
testb
cmovg
dec
int
fnstsw
cltd
mov
dec
dec
dec
ljmp
popf
mov
jnp
fwait
mov
and
adc
xor
push
push
popw
insb
pushf
call
ret
mov
pop
into
xor
movsb
clc
jmp
aam
rcrb
jecxz
mov
or
pop
hlt
xchg
in
test
ljmp
dec
dec
fyl2xp1
xor
mov
mov
adc
cld
pop
jbe
movsb
push
in
jmp
xlat
or
loopne
mov
repnz
mov
mov
adc
or
outsb
loope
cmp
arpl
clc
mov
xor
cmp
mov
add
out
sbb
mov
jo
into
cli
lods
jns
loopne
movsb
inc
push
insl
aaa
loop
pop
aaa
cli
xchg
sub
mov
mov
lds
mov
push
mov
sub
loopne
mov
ss
callw
mov
inc
jb
leave
mov
adc
mov
call
jo
fisttpll
xor
lahf
push
test
xorl
and
sub
in
adc
pop
xchg
lods
ds
mov
xchg
in
lret
dec
or
addr16
jg
lretw
test
sub
sbb
int3
sbb
push
bound
divb
fbld
insl
test
cmp
and
and
add
jge
out
mov
jno
cmp
ret
jmp
or
jnp
add
cmp
inc
and
push
testb
fcoml
scas
clc
inc
sti
dec
or
daa
dec
lds
fsubrl
stos
mov
sti
nop
xchg
jno
inc
lret
pop
ss
sbb
cmp
test
pop
shrb
pop
testb
insb
mov
dec
cltd
sbb
sarl
fldl
cmpsb
fwait
jno
cli
dec
jo
adc
pop
or
mov
sub
jbe
adc
test
shll
xchg
add
dec
cli
loopne
add
testb
jmp
pop
or
iret
add
mov
mov
cmp
mov
push
orl
xchg
sbb
js
aam
stc
insb
mov
sub
lea
negb
sahf
fwait
dec
sarb
mov
adc
add
or
je
aad
jne
mov
out
xchg
les
push
pop
les
in
popf
cmp
icebp
popf
adc
mov
lea
and
mov
push
popf
popf
mov
add
push
int3
jle
filds
xor
dec
nop
or
push
pop
ja
dec
adc
loop
neg
test
leave
loope
test
addr16
imul
das
lcall
test
xlat
inc
mov
rcrl
aad
aas
cmp
shr
packssdw
test
and
outsl
movsb
aam
inc
or
add
add
cli
adc
leave
dec
mov
ljmp
fldenv
cmpsb
mov
xlat
dec
xor
push
push
and
jl
in
pushw
push
xor
xchg
mov
xor
iret
incb
lret
push
cltd
fstpl
andl
hlt
lds
jp
imul
aad
mov
or
pop
cmpsb
rclb
mov
daa
js
pop
loopne
gs
les
pop
in
jp
xchg
mov
into
inc
adc
push
jl
sub
mov
addr16
mov
add
mov
iret
push
inc
push
into
and
dec
push
fcoms
xor
mov
mov
adc
test
outsl
call
sti
nop
push
cltd
cmp
xor
push
leave
sub
cmp
dec
push
adc
pminsw
dec
mov
pop
push
mov
adc
mov
mov
test
rorb
imul
pop
daa
cmp
sbb
dec
imul
test
xchg
or
sahf
pop
xchg
jno
hlt
dec
out
movb
add
and
icebp
out
cli
sbb
imulb
test
push
push
pop
mov
adc
and
add
inc
daa
jne
jp
ljmp
xor
lds
repz
mov
xor
cmp
xchg
imul
dec
xor
sub
sub
mov
add
push
dec
mov
clc
inc
xor
jnp
pop
mov
loope
add
int3
mov
xlat
push
mov
jnp
lret
ficomps
movsl
stos
ficomps
inc
inc
sbb
scas
inc
inc
imull
and
pop
test
adc
pop
mov
push
pushf
aam
adc
imul
lods
aam
push
mov
xor
adc
inc
test
pop
fldcw
cmp
stos
fmull
negl
rclb
in
add
lahf
test
jns
jmp
das
or
lea
inc
cmc
sarb
ret
pop
fcomps
outsl
add
fwait
adc
cld
xchg
mov
in
mov
insl
pop
pop
push
leave
push
pop
imul
les
mov
mov
daa
pop
insb
inc
and
call
mov
and
lods
sub
or
mov
lret
dec
push
adc
jle
push
imul
add
add
or
arpl
les
popf
arpl
les
mov
addr16
ss
adc
cmpsl
add
repz
xrelease
or
call
xor
add
rorl
repz
mov
std
adc
fwait
jnp
test
inc
repz
rcl
icebp
dec
lcall
dec
and
das
pop
xor
sub
push
outsl
jle
loope
loopne
mov
jne
jno
popa
call
sbb
and
sbb
xlat
lock
into
fidivrl
jl
sub
inc
push
pop
xor
repnz
and
add
push
cmpsl
sbb
mov
lods
push
popf
mov
dec
rolb
dec
add
mov
sub
out
nop
movsb
lea
imul
icebp
pushf
stos
sub
sbb
push
pusha
mov
or
adc
mov
insl
stc
fisubs
sub
lods
xor
xlat
mov
mov
xchg
mov
push
xchg
lcall
mov
fnstenv
in
dec
dec
pusha
movsb
cmp
xchg
gs
loopne
jecxz
push
push
sahf
push
mov
rclb
popf
xchg
sarb
cmc
push
fidivl
xchg
mov
ret
xor
cmpsl
je
movsb
popf
xchg
les
jo
scas
in
xchg
mov
addr16
das
arpl
sub
in
push
push
push
mov
iret
ds
pop
lds
hlt
pop
inc
xchg
das
daa
xlat
xchg
adc
cmc
imul
sarb
or
std
dec
xor
dec
mov
icebp
and
nop
fdivrl
adc
dec
mov
stos
xchg
xchg
xor
loope
sbb
cli
and
cwtl
mov
mov
mov
jg
mov
dec
insl
pop
inc
pop
jle
lahf
roll
cmp
push
adc
jmp
insb
pop
cmc
cmp
push
mov
addb
mov
sub
jmp
lret
js
inc
mov
sti
leave
or
pop
xor
mov
pop
rcrb
test
rcll
or
sub
aam
cli
adc
sarb
outsb
push
cli
dec
aaa
aas
js
insl
cmp
add
mov
mov
jno
das
call
mov
push
lahf
mov
inc
into
jb
aad
ss
lds
int3
sbbb
xchg
gs
shlb
sub
orl
aad
icebp
xor
ss
enter
and
add
cld
gs
insl
lret
data16
cltd
jns
pushf
push
psrld
stos
les
test
aad
pop
push
out
inc
stc
sub
inc
cwtl
and
lret
shll
dec
mov
lods
dec
test
movsb
push
sub
or
imul
mov
mov
cs
jo
cwtl
test
add
adc
sub
mov
pushf
inc
jmp
push
mov
rcl
pop
add
dec
or
pop
mov
dec
cmp
dec
mov
or
inc
adc
push
mov
pop
popa
lods
scas
hlt
movsb
xor
lods
cmp
and
mov
add
aaa
sbb
clc
lret
bound
push
dec
std
loope
sub
shlb
sti
imul
mov
or
mov
outsl
pop
shl
xor
mov
pusha
cltd
jle
dec
test
mov
cs
bound
pop
sti
mov
popa
pusha
sub
leave
into
clc
fsts
sbb
sbb
stc
mov
insb
test
daa
mov
and
pop
mov
add
imul
sub
and
shll
call
sti
outsb
jge
mov
int
cmp
sbb
addr16
xor
hlt
pop
xorb
cltd
cmp
fisttpll
push
xor
mov
sbb
xchg
sbb
xor
jg
lock
loope
dec
adc
xchg
push
ljmp
mov
sbb
mov
shlb
std
repz
imul
push
inc
sbb
dec
sub
cmp
sbb
repnz
ret
pop
push
xchg
add
icebp
insb
jno
gs
imul
addb
repz
movsb
in
imul
fwait
inc
aaa
notb
out
push
pop
jb
adc
or
sub
ret
mov
mov
mov
mov
sbb
cmp
mov
fwait
push
sbb
iret
sbb
repnz
push
out
push
in
mov
loopne
jecxz
jae
mov
pushl
fcoms
fbstp
push
xor
mov
ds
int3
xlat
dec
push
cmc
roll
rcrl
cwtl
mov
mov
loopne
cmp
fwait
pop
data16
or
inc
mov
push
mull
stos
push
fstps
jge
icebp
cmp
push
int3
mov
popf
cmpsl
data16
incb
jp
jp
xchg
jae
mov
std
jb
cmpsb
dec
ret
sub
clc
push
scas
insl
mov
mov
or
into
xor
pop
cmp
inc
push
inc
mov
jge
repz
sahf
jmp
mov
jmp
jo
sub
imul
fnsave
iret
ret
dec
fidivrl
aam
filds
or
cmp
xor
xor
daa
outsl
dec
nop
or
xlat
loop
inc
sub
jp
pop
mov
xchg
add
cltd
adc
dec
mov
dec
lds
mov
cld
dec
dec
cltd
hlt
loopne
loopne
fdivl
cmp
and
mov
cmp
pop
cmp
and
sti
out
mov
xlat
xchg
adc
bound
adc
lea
fcomi
or
cld
jne
out
test
cmp
ret
mov
call
jno
mov
arpl
sub
push
ja
shlb
mov
xchg
insb
lret
ret
out
cmp
popf
push
nop
and
dec
mov
fisttpl
mov
push
mov
gs
adc
xchg
dec
stos
add
xchg
cmpsb
add
mov
ret
rcrl
test
cmpsb
and
pop
xchg
ret
jae
or
loop
je
add
xor
lock
inc
xchg
lods
pop
fcmovnb
push
mov
mov
inc
fs
cwtl
add
jns
add
gs
stos
popa
subl
inc
movsb
push
pop
popa
add
fisubrl
orl
sub
or
pop
adc
add
arpl
jae
push
mov
xchg
aas
cvtpi2ps
sbb
cmp
std
in
pop
or
mov
mov
jnp
fisttps
ja
and
out
popf
add
jno
cmp
jb
jg
inc
fmuls
inc
aad
not
mull
jo
pusha
dec
jmp
lcall
lret
cld
lock
and
in
insl
stc
shll
adcb
and
pop
xor
das
int3
insl
lcall
mov
or
pop
adc
movsb
in
jle
test
call
cli
xchg
aas
xor
nop
jno
push
loopne
lea
divl
sbbl
xchg
jl
orb
and
arpl
stos
jnp
lods
cmp
inc
sub
inc
dec
push
adc
outsl
add
in
mov
test
in
dec
jbe
outsl
jae
and
pop
add
dec
andl
pop
arpl
ja
ds
and
mov
add
jnp
shll
cmp
inc
out
ret
imul
lcall
das
mov
stc
mov
inc
loop
sub
js
pop
ds
mov
clc
or
xor
sbb
xor
adc
sbbb
std
mov
ret
in
mov
push
push
and
jno
ret
mov
cli
inc
je
cmc
mov
decb
inc
mov
test
lret
pop
sbbl
test
inc
mov
pop
push
push
cltd
leave
insl
jae
fwait
cmp
pusha
add
xchg
adc
mov
out
std
add
xchg
or
sbb
lea
fcmovnb
pop
stos
mov
leave
out
nop
leave
shlb
aam
sub
mov
cli
enter
push
cmp
std
jg
cmp
and
mov
fmuls
add
ficompl
stc
pushf
mov
mull
xor
das
cmp
stos
gs
call
xchg
push
add
push
pop
and
push
lcall
xchg
repnz
pop
jp
outsb
int
push
aam
and
cmpsb
pop
mov
cs
fcmovne
fildl
mov
cmpsb
pop
lahf
in
icebp
cmp
stc
into
and
dec
in
ret
ljmp
sbb
rorl
cltd
xor
pop
popa
sbb
fs
fisttpll
std
mov
xor
push
mov
sti
shl
cmpsl
popf
lds
scas
mov
lods
into
push
inc
mov
hlt
daa
cmp
ljmp
shrb
std
movq
dec
std
and
repnz
andb
push
sti
and
sahf
xchg
mov
notb
shll
sbb
add
in
mov
pop
testb
fsubs
jg
jl
sbb
call
lods
sbb
in
lcall
cwtl
dec
stos
in
movsb
sbb
ret
jmp
insb
out
xor
out
cmp
fs
lods
pop
pusha
add
movsb
or
lock
or
fistpl
adc
aas
xor
outsl
mov
push
sbbb
sub
out
xor
mov
cmp
pop
sub
out
push
or
pop
adc
outsb
push
jae
movsl
in
xlat
cltd
fdivs
sti
mov
jl
xor
imul
jl
les
or
roll
in
mov
xchg
fcoms
test
or
in
mov
test
loopne
leave
adc
scas
add
shlb
icebp
jae
call
mov
jnp
sub
jg
inc
loop
push
shrl
lcall
insl
lahf
cmc
insl
scas
and
bound
pop
add
mov
sahf
gs
mov
lods
fildll
addr16
cmp
enter
imull
xor
das
xor
nop
lahf
add
in
xlat
adc
xor
sti
mov
mov
movsb
int3
sbb
jae
adc
mov
into
out
outsb
push
fsubs
into
jns
mov
or
test
out
mov
pop
je
mov
dec
js
hlt
mov
dec
dec
popa
jecxz
cmpl
inc
mov
shll
popa
jmp
cltd
push
lret
add
adc
push
mov
test
dec
adc
es
insl
and
add
xor
stos
popf
fcom
mov
and
ret
daa
dec
or
in
xchg
cmpsb
cld
push
fwait
pop
mov
or
cltd
adc
test
mul
insb
xor
js
aas
jnp
ficoms
les
stos
daa
loope
xor
cwtl
js
iret
inc
ret
or
in
inc
dec
das
pusha
imul
stos
push
test
jne
testl
push
in
dec
push
xchg
test
cmp
fidivl
adc
out
das
add
jb
mov
icebp
or
dec
dec
pop
rclb
jb
fsub
mov
adc
sahf
hlt
xchg
mov
in
sbb
test
fisubl
sahf
hlt
test
out
outsl
sub
lret
mov
fwait
addl
push
roll
jbe
lds
jns
ret
mov
cmpb
femms
push
xchg
out
loop
les
rolb
test
jno
xor
or
repnz
xor
pop
fcmovb
pop
js
test
push
decb
sti
cmpsb
xchg
jnp
repnz
test
jo
mov
std
aaa
loope
nop
sbb
filds
sub
pop
imull
cmpb
cmp
aam
push
xor
cltd
dec
clc
or
sbb
or
cwtl
adc
std
in
movl
pushf
jl
cs
insb
xor
stos
testl
pop
pop
cmc
in
add
inc
aam
inc
incl
clc
faddl
push
ret
xchg
js
jb
mov
inc
lcall
add
push
mov
mov
ljmp
and
add
cmc
mov
ret
or
push
xchg
lcall
mov
sahf
push
mov
js
cmpsb
and
call
idivl
inc
jae
stc
push
sbb
lcall
rol
push
faddp
lds
out
fistpll
mov
and
test
cmp
push
cmc
jne
pop
or
or
pop
add
fbld
test
dec
jp
lods
xor
adcl
mov
adc
outsb
xchg
test
and
jp
rcr
pop
fstpt
movsl
test
cmp
xor
sti
out
add
lcall
push
repz
add
inc
mov
add
fdivrp
dec
adc
fwait
scas
sarb
popf
xchg
mov
sarb
ds
cmp
fldt
lds
imul
xchg
leave
cmp
or
iret
sarl
sub
movsb
repnz
mov
fists
inc
inc
std
sbb
sub
sub
cmpb
popf
mov
fcoml
ret
ja
jge
xchg
into
inc
loopne
inc
dec
jns
repnz
pop
xchg
inc
sub
sub
inc
fwait
ret
mov
mov
repnz
or
aas
xchg
jecxz
loop
movsb
stos
push
mov
outsl
cmpsl
jno
test
jge
fdivrl
add
cmp
cs
sub
inc
rorb
xchg
aam
sarl
movsb
pop
fmull
lods
repnz
cmp
add
aad
testb
std
fiaddl
sub
jle
push
xchg
mov
adc
dec
cmp
dec
lea
adc
pop
jg
addr16
out
popf
icebp
andl
loop
xor
in
mov
push
rcrl
xchg
shl
xchg
ret
and
adc
fs
popa
xor
in
pop
inc
aad
dec
shll
mov
add
pop
xor
jne
mov
sahf
sub
adc
jge
rcr
mov
xchg
jmp
pop
popf
cmp
loopne
or
sbb
jb
mov
pushf
dec
sbb
insl
mov
mov
aas
inc
sbb
fisubl
adc
inc
or
jne
xor
push
ret
in
mov
jno
mov
ret
cld
mov
adc
stos
jle
fistpl
fadd
loope
xchg
sub
sub
das
mov
inc
sbb
lret
icebp
xor
jge
push
outsl
jmp
shrl
int3
or
jg
je
arpl
sahf
xor
idivb
shl
scas
stos
mov
pop
mov
dec
jmp
aaa
mov
stos
lret
insb
push
jecxz
sub
jmp
loopne
jp
addr16
adcb
sti
call
inc
stc
mov
xchg
ret
or
pushf
or
addb
out
xlat
int3
cmp
das
jae
data16
cmc
xlat
mov
sub
inc
and
or
push
bound
gs
mov
cmp
cmpsl
imul
ds
add
push
or
test
fsubs
and
xchg
mov
repz
mov
shll
xchg
or
dec
jne
movsl
cwtl
fadds
mov
mov
out
xchg
sub
mov
jmp
ret
xor
sub
imul
add
cmp
ja
fnstsw
inc
mov
stos
or
pushf
mov
in
cltd
lds
mov
insl
out
movsb
lret
mov
js
icebp
stc
mov
push
repnz
mov
cmp
cmp
mov
inc
sub
je
xor
mov
push
rol
popf
stos
mov
test
mov
dec
mov
repz
mov
pop
inc
int3
inc
push
out
fcomp
test
xchg
gs
cmpxchg
jnp
imulb
pop
push
jne
sbb
cld
mov
mov
js
loope
mov
test
mov
push
mov
xchg
add
sbb
jge
sub
into
pushf
iret
push
cmp
sarb
movsl
fcom
mov
les
inc
dec
cmp
jo
add
push
loopne
ret
js
jp,pt
pusha
inc
repnz
dec
dec
shl
inc
pop
or
mov
enter
pop
or
jb
pop
ljmp
sbb
xorl
rorl
mov
add
stc
loope
inc
ret
push
mov
mov
mov
lahf
or
decl
xor
lahf
ja
fdivr
fistpl
mov
leave
mov
xchg
icebp
push
shlb
out
aaa
mov
xchg
push
dec
inc
dec
int3
es
inc
in
pushf
jno
push
das
dec
cwtl
pop
daa
push
enter
sti
push
aad
or
xor
mov
lock
jno
sub
xor
xlat
cmp
lock
lock
sahf
out
inc
fiaddl
fstl
pusha
sbb
js
jae
lock
jb
add
adc
popf
loopne
pop
pop
cltd
push
scas
loop
cmp
aam
cs
push
dec
adc
mov
lcall
imul
pop
ret
push
call
jp
xchg
gs
call
mov
adc
std
orl
in
pop
jbe
loopne
icebp
lds
loopne
jp
loopne
xchg
mov
push
mov
add
aad
sahf
daa
ljmp
arpl
xchg
arpl
mov
mov
orl
adc
sbb
aas
test
ror
setae
xor
scas
test
ss
xor
sbb
sub
jno
mov
jno
cs
sub
hlt
bound
pop
addl
sbb
push
push
mov
sub
push
loop
imul
mov
jmp
cli
gs
or
sbb
cld
push
jle
imul
int
pop
or
lcall
mov
sbb
sbb
out
mov
and
xor
outsl
mov
xor
inc
sub
xchg
fwait
roll
sub
stos
cld
xchg
inc
fmuls
pop
movsb
xor
bound
enter
fnstcw
pop
in
mov
fsubrl
popf
fmul
out
cmp
iret
addl
mov
cltd
leave
cs
jg
out
lea
add
jmp
ret
push
lcall
stc
aam
lret
leave
pop
jmp
ret
fnsave
cmp
imul
std
pop
leave
add
insb
cld
fiadds
mov
das
add
ret
test
xor
add
loop
and
std
call
subb
lods
in
ljmp
and
out
shll
notl
test
mov
mov
fwait
add
and
fsqrt
mov
test
scas
das
aas
dec
out
sub
jbe
shl
rclb
out
pop
and
xor
sbb
std
andl
pop
xchg
xor
js
sbb
movsb
lcall
out
arpl
int3
lock
dec
dec
xchg
pop
scas
test
mov
sub
lcall
lods
divl
mov
dec
mov
rcrb
inc
std
daa
mov
das
mov
hlt
mov
pop
mov
stos
push
cmp
lcall
xor
lea
adc
andl
pop
cmpsl
add
pmaddwd
stc
stc
mov
jns
push
mov
lret
imul
mov
daa
mov
mov
sahf
and
xor
push
lods
cmpsb
push
ds
aad
mov
les
pop
sarb
stos
mov
xchg
movsl
cmp
nop
lahf
mov
cmp
addr16
pop
sbb
lret
addr16
push
mov
roll
cld
call
je
scas
pop
test
xchg
xchg
add
or
int
jns
insb
mov
push
adcl
sub
sub
movsl
cmpsb
xlat
fcmovb
xor
adcl
dec
popf
mov
sahf
pop
lock
push
sub
push
outsb
sbb
dec
inc
mov
mov
retw
xorl
movsl
mov
mov
in
xchg
sti
es
cmp
inc
jns
stc
ljmp
pop
movsb
or
pop
mov
out
xchg
cmp
sbb
cmp
sbb
dec
push
or
sbb
adc
outsb
inc
int3
adc
lahf
mov
hlt
or
inc
mov
mov
lcall
aaa
insl
sub
jnp
fs
stos
dec
adc
das
xchg
out
repnz
leave
mov
add
push
xor
in
outsl
mov
in
cmp
fstp
jmp
cwtl
mov
into
scas
rcll
and
cmc
jno
xor
cmp
cld
push
jle
push
add
add
lret
cmpsb
and
out
adc
out
sub
mov
cmp
imul
mov
jo
xchg
in
mov
filds
lock
das
xor
xchg
je
test
pop
je
adc
in
pop
sub
xor
push
nop
stos
mov
push
xchg
adc
mov
aaa
enter
icebp
mov
adc
or
int
stc
cwtl
jno
insl
or
pop
insl
pop
lds
sti
enter
ds
lods
mov
pop
mov
mov
dec
pop
enter
test
pop
stos
cli
mov
ret
insb
cmpsb
jae
inc
push
pop
xor
je,pn
lods
push
jno
ret
and
xor
and
fcomi
jb
dec
loope
movsb
mov
test
das
fcoms
sub
inc
mov
pop
pop
sbb
cwtl
sti
ja
inc
jns
imull
iret
cmp
mov
lock
fcomps
ja
inc
inc
stos
daa
adc
push
mov
cmp
out
sbb
insb
or
pop
sub
clc
mov
mov
adc
fiaddl
xorb
xchg
pop
fwait
add
push
ficompl
mov
fdiv
xchg
jge
inc
xchg
dec
fnsave
rorb
rclb
jbe
jmp
test
dec
dec
pop
mov
pop
fwait
mov
or
ljmp
sbb
ror
mov
outsl
sahf
mov
pop
scas
into
or
mov
negb
xor
inc
xorl
sub
bound
aaa
jecxz
addr16
mov
adc
and
xorl
cmp
jg
jl
pop
repnz
sub
fnstenv
fisttpll
pusha
push
sbb
std
adc
dec
jno
pop
mov
loop
inc
and
sbb
sbb
or
stos
dec
lock
rclb
mov
scas
inc
sub
movsl
cmp
repz
mov
jle
fisttpl
cmc
test
test
mov
xchg
pop
insb
lods
aam
add
fwait
movsl
cmp
lea
sub
in
add
jg
add
dec
loopne
lret
sub
shll
push
pop
dec
gs
jge
cmp
jb
pop
pop
int3
je
ljmp
push
cs
inc
push
sbb
cmp
loop
add
in
rcr
xchg
xlat
cmp
xchg
push
fidivl
shrb
outsb
in
je
adc
pop
into
sub
add
add
fnstcw
not
pop
bnd
adc
cmp
mov
dec
nop
xor
inc
inc
icebp
movsl
xchg
mov
cmpsl
jecxz
dec
in
push
pusha
add
xchg
pop
pop
sub
mov
mov
cmc
pop
data16
lods
dec
rcll
push
shrb
shll
pop
rcll
add
lods
daa
or
cmpsb
ds
dec
sub
mov
pop
or
mov
cmc
cmp
pop
call
xor
or
inc
call
sbb
stos
andl
je
xchg
push
push
mov
fs
adc
xor
lret
ja
lcall
push
fnstsw
adcb
rorb
sbb
mov
dec
fmuls
ret
sbb
arpl
inc
aam
imul
xchg
pop
inc
adc
fmul
subl
adc
mov
aad
xchg
scas
daa
je
jne
and
dec
mov
push
cmc
push
pop
mov
enter
mov
fidivrl
xor
xor
push
sub
mov
ficoml
mov
fcoms
in
mov
shl
xor
popf
ret
xchg
fistpl
stos
test
test
mov
and
stos
mov
fistpll
cmc
cmc
inc
pop
ret
lret
dec
adc
es
inc
fsubr
stos
and
sub
js
jl
jne
push
lret
leave
pop
xor
push
ss
scas
sti
pop
pop
add
ss
mov
cld
jbe
or
test
or
inc
push
xor
pop
insl
fwait
insl
add
pop
push
incl
je
in
jns
inc
bnd
or
addl
mov
jns
hlt
std
clc
icebp
imul
mov
sbb
mov
in
and
adc
mov
and
bound
mov
push
sbb
sbb
aaa
cli
jno
in
xchg
repnz
mov
inc
ds
outsb
pop
call
jl
jnp
out
xchg
decb
data16
or
sbb
push
or
mov
sub
jp
push
cmp
xlat
loop
fxch
rcr
xchg
jno
mov
xor
pop
sub
push
sbb
jb
jg
and
push
cmpsl
dec
xor
dec
lahf
repz
roll
inc
add
pop
adc
push
adcl
mov
jmp
and
mov
in
lea
sbb
xchg
cmpsl
sbb
push
cmp
xchg
pop
xor
loopne
hlt
mov
je
mov
push
ljmp
enter
jg
outsb
scas
stc
lahf
js
aas
xchg
imul
push
pop
mov
cmp
xchg
or
xchg
push
mov
add
xchg
mov
pusha
movb
lock
sbb
sbbb
jbe
popa
out
movsb
bound
call
cmp
jae
and
js
xor
and
pop
push
mov
xchg
shll
je
dec
xchg
inc
aaa
call
push
pusha
sbb
push
adc
inc
orb
mov
mov
inc
rolb
stos
adc
jge
xchg
cltd
sbb
outsl
push
xor
daa
iret
imul
stos
out
pop
cmc
jecxz
outsb
stos
outsl
out
push
lock
mov
xor
inc
fucomp
mov
roll
push
push
mov
sbb
int3
cmp
sub
repz
int3
jo
xor
std
mov
or
lods
jge
jp
pusha
inc
sub
cld
mov
test
pop
xchg
bound
out
dec
xorl
xchg
lds
inc
popf
rcrb
arpl
pop
cld
mov
lret
and
push
lea
cwtl
pop
jo
jo
xchg
and
mov
pop
jle
icebp
xchg
stc
sub
sub
inc
mov
lea
mov
push
cwtl
out
cmp
dec
dec
sub
sahf
or
sub
dec
jno
or
xchg
xor
mov
adc
out
dec
jbe
xchg
and
or
sbb
out
dec
shl
xor
cmc
ret
pop
js
mov
das
or
jp
dec
dec
inc
fs
sbb
mov
lret
cmp
inc
inc
fldenv
jge
decb
dec
fimull
dec
cs
cli
jmp
adcl
add
fisubs
test
in
xor
mov
std
and
popa
mov
jb
jge
mov
out
lods
out
out
pop
sbb
movsb
fdivs
sbb
cli
mov
cs
in
xchg
xor
push
ja
or
cli
addr16
and
jns
xor
adc
jmp
sbb
mov
aaa
outsb
fldl
mov
rcrl
call
leave
sbb
aaa
movsb
xor
xchg
ds
inc
imul
scas
aad
mov
int3
xchg
popl
mov
cmp
push
scas
pop
xor
jbe
pop
test
js
scas
sbb
fcoms
adc
jmp
cmp
movsb
add
sub
mov
adc
loopne
sbb
lcall
jns
lahf
xor
into
xor
mov
sub
and
imul
and
nop
cltd
adc
xchg
fnstsw
mov
mov
pop
dec
lea
sbb
cmp
push
std
lds
or
imul
mov
decb
lret
jecxz
xor
push
cltd
mov
and
xor
sahf
inc
push
push
cmp
adc
jns
add
mov
ss
dec
test
test
dec
mov
sub
dec
lods
or
popf
pop
mov
or
jb
adc
cmp
pop
fiadds
mov
add
dec
mov
ss
ss
scas
or
push
jp
leavew
in
into
sub
dec
jns
nop
sub
daa
loopne
test
mov
divl
shrb
and
aad
repz
test
jne
xchg
inc
mov
das
std
pop
jne
push
out
sub
mov
dec
xchg
scas
movl
xor
out
jmp
jecxz
ret
pop
loopne
sub
inc
jbe
scas
outsb
dec
push
in
dec
int
negl
push
ret
scas
pop
cwtl
push
pusha
cmp
insb
aad
mov
stc
ljmp
icebp
cmp
jecxz
mov
xchg
test
in
fnstcw
and
mov
das
popf
enter
mov
mov
jp
pop
sub
ds
sahf
or
mov
dec
pop
jne
or
nop
xor
aas
mov
sbb
inc
in
xchg
inc
add
jmp
icebp
repz
pop
mov
cmp
sub
imul
and
insb
jl
lock
inc
mov
cmp
fcoms
add
cmp
xchg
push
test
je
cmp
adc
jl
dec
lods
mov
mov
pop
cmp
test
dec
pop
fimuls
mov
out
push
jne
push
and
lods
fdivl
mov
sbb
out
or
jecxz
gs
mov
push
jg
cs
sbb
cmp
cmp
mov
mov
sti
or
xchg
sahf
and
xor
dec
xchg
pop
jecxz
hlt
or
push
call
adc
enter
jo
pop
sbb
push
ret
fstps
push
inc
mov
addr16
pop
addr16
js
js
and
sti
test
shrb
xchg
jmp
jge
lock
mov
mov
in
and
mov
pop
cmpsl
cmp
shll
push
cmpsl
pop
sbb
gs
mov
les
cmp
xchg
pop
and
daa
add
call
mov
stc
int
addl
sarl
data16
int3
mov
and
mov
call
sti
je
lcall
pop
xchg
pop
and
sti
jno
sahf
addr16
ja
sbb
jle
pop
dec
fisttpll
pop
xor
push
int
call
mov
scas
pop
xor
jnp
and
test
jp
dec
jge
sahf
mov
inc
in
int
sbb
mov
jp
es
or
cli
adc
mov
cmc
lret
addr16
es
add
jge
mov
xchg
arpl
ss
pop
ja
dec
push
mov
popa
push
sub
ljmp
daa
or
dec
xor
outsb
dec
mov
test
xlat
imul
push
fisubrs
cmp
test
shll
test
rcrl
inc
adc
rorb
enter
jge
sbb
or
int
nop
lock
je
rorl
ja
sub
inc
pushf
insb
test
loopne
xchg
fisubrl
leave
cmp
push
negl
cltd
bound
test
pop
pop
xchg
and
pop
test
jns
mov
cmpsl
ljmp
xchg
shr
rorb
fldt
pop
sbb
pusha
lret
fstpt
pop
mov
sub
pop
enter
rcl
out
fwait
xchg
loop
stos
lret
dec
scas
xor
test
arpl
sub
test
sahf
loope
inc
add
mov
les
es
movsl
repz
adc
jmp
dec
ljmp
pop
rol
ret
je
ret
xor
push
push
imul
inc
inc
call
cmp
mov
cmp
mov
mov
incl
and
mov
ja
fs
mov
mov
outsl
xlat
pop
sub
xor
cld
push
xchg
and
or
int
mov
shrl
pushl
sub
adc
into
adc
pop
mov
loopne
jmp
rcrl
inc
movsl
pop
fcomp
loopne
push
dec
jne
rorb
mov
inc
jne
pop
add
imul
sbb
rclb
mov
jmp
sti
add
mov
scas
repnz
push
or
pop
lret
shl
mov
subl
mov
mov
fnstsw
xchg
dec
mov
sub
pop
sub
loopne
adc
repz
xchg
sub
add
js
xchg
in
adc
jecxz
imul
mov
mov
xchg
xchg
pop
mov
test
aas
xorl
ds
pop
inc
lock
aad
mov
test
xchg
lcall
mov
add
cmp
cmpsb
jl
insb
es
inc
mov
jb
xor
cmp
je
xchg
dec
loopne
ss
test
cmc
je
jge
iret
sbb
stc
or
pop
or
jg
loop
cmp
fiadds
or
and
lret
jne
adc
inc
call
movsl
in
inc
imul
inc
ljmp
adc
fwait
mov
int3
push
adc
in
push
add
push
xor
add
fs
mov
stos
jae
push
int3
mov
dec
in
testl
sub
movsb
lock
outsb
jno
dec
inc
sub
lea
add
test
fs
mov
mov
mov
jae
push
fs
mov
jnp
push
xchg
iret
or
dec
arpl
jo
and
push
and
mov
lock
mov
test
in
xchg
icebp
into
xor
mov
jnp
aas
jae
and
lcall
sbb
out
loop
int
lock
push
or
int
aas
sub
das
subl
adc
inc
insl
inc
out
ffree
pop
arpl
mov
ret
ss
xlat
cmp
sahf
imul
sub
xorb
push
jae
jg
mov
shlb
pop
adc
mov
aam
notb
push
ret
hlt
push
fidivs
fsts
pusha
test
outsl
push
mov
pop
es
cmc
out
bound
ja
mov
incl
movsl
push
cld
adc
mov
sub
push
xchg
pop
add
cmp
mov
clc
mov
fdivrs
in
stc
cmc
addr16
jbe
pop
mov
adc
mov
xchg
cmp
pop
popa
push
lea
imull
dec
add
fnstcw
mov
sbb
aam
or
pop
dec
fnstcw
push
inc
push
stos
xor
pop
pop
mov
mov
aad
aaa
out
aam
sbb
cmp
adc
es
mov
jecxz
rcrb
imul
pop
adc
cld
icebp
jno
push
adc
and
mov
ljmp
pushf
jl
xchg
outsb
lcall
adc
mov
adc
lret
ret
jmp
in
mov
pop
cmp
in
into
jg
pop
sbb
inc
aas
sub
jnp
xchg
stos
das
sbb
test
mov
mov
rcrb
clc
pop
push
int
adc
adc
xchg
rol
call
test
push
loope
add
cmp
push
mov
cs
mov
stos
lods
mov
xchg
pushf
mov
adc
sub
repnz
std
movsb
out
leave
xor
jns
xchg
dec
ret
xchg
push
aaa
jae
jle
ret
bound
int3
xchg
mov
in
mov
mov
pop
xor
inc
cltd
js
test
xchg
daa
or
mov
add
iret
inc
cmp
rorl
repz
adc
inc
mulb
pop
pushf
out
in
cwtl
sbb
jbe
xor
jmp
leave
or
rcr
mov
push
scas
jbe
jmp
das
dec
cs
xor
add
in
or
out
mov
lahf
push
ds
scas
inc
hlt
out
add
add
ja
or
xor
push
fnstcw
adc
mov
pop
xor
mov
ret
aaa
sub
push
push
dec
aaa
sub
jae
stos
mov
or
lret
mov
adc
insb
push
cmp
movsb
mov
jb
push
jb
dec
test
ret
and
je
adc
call
into
mov
push
loope
icebp
adc
jle
hlt
test
icebp
inc
jl
and
insl
push
xor
cmp
add
out
shr
inc
push
outsl
or
sahf
sbb
lret
aas
pop
into
and
test
jge
jmp
lods
adcb
sbbb
xor
lahf
leave
call
sbb
fistpll
jmp
ja
lcall
cli
mov
cld
shll
cwtd
fs
jno
xchg
mov
mov
loope
subl
push
repnz
addl
jecxz
insl
jo
dec
dec
repz
addr16
inc
inc
xchg
cltd
cmp
pop
jge
xor
leave
mov
cwtl
mov
pushf
dec
mov
cmpl
arpl
push
icebp
and
testl
mov
sarb
jo
lcall
scas
inc
xchg
or
push
popf
add
mov
mov
cwtl
movsb
sbb
fcom
popa
xchg
lock
xor
fwait
sti
jge
fdivs
cli
stos
insb
jl
pop
mulb
mov
sbb
negl
push
mov
sbb
mov
outsb
addr16
adc
xchg
sub
dec
cmp
mov
fcmovu
adc
inc
jge
jae
lds
daa
aaa
push
and
sbb
out
add
adc
add
xchg
in
cmp
or
pop
fmuls
jns
add
push
xor
dec
adc
xor
out
adc
loopne
sti
fisubl
pop
mov
cmp
adcb
sbb
sub
add
ret
cmpsl
sbb
xor
push
leave
aad
fisttps
adc
shll
stos
xor
stc
or
leave
sbb
jo
push
jmp
cld
fidivrs
xor
loop
iret
daa
ja
leave
sbb
push
mov
fucomp
test
lea
rcrb
dec
sbbb
das
lods
xchg
rorl
shrl
sub
push
mov
repz
adc
fdiv
ret
out
jbe
mov
cwtl
loope
inc
int
daa
or
shrl
negl
mov
inc
push
adc
push
mov
cmp
arpl
faddl
mov
mul
jo
out
mov
mov
push
stos
pop
int
rolb
lds
add
and
jno
inc
xor
dec
arpl
pusha
push
inc
insl
lods
es
decb
mov
ja
mov
and
movsl
xor
push
push
or
decl
mov
sub
frstor
addr16
dec
adc
leave
push
jp
imul
xor
mov
dec
mov
gs
fwait
adc
mov
push
add
int3
xchg
push
push
pop
pop
add
xor
mov
xchg
sub
inc
in
shlb
mov
and
and
and
stos
int
call
mov
inc
dec
inc
fdivs
repnz
cmc
insl
mov
fstpl
in
mov
and
and
cmc
js
add
out
xchg
mov
repnz
mov
mov
lock
call
adc
mov
pop
lods
clc
pop
mov
clc
inc
pop
jnp
and
pop
adc
inc
popa
cmc
iret
jo
and
pusha
and
xor
in
mov
push
mov
clc
lea
loopw
mov
outsl
push
fnstcw
in
aad
mov
psrad
inc
out
repnz
inc
fimuls
pusha
mov
mov
lds
sti
mov
lar
dec
je
js
js
cmp
jg
outsb
arpl
add
nop
mov
mov
in
pop
aas
xchg
mov
stc
cmp
add
rclb
push
ljmp
insb
cli
stos
dec
pop
fnstsw
cmp
addr16
cmp
movsb
jecxz
pop
mov
pop
lcall
xchg
sub
insb
inc
outsb
mov
mov
jg
jmp
jle
cli
mov
or
xchg
and
shlb
jae
xchg
movsl
jl
jmp
ret
into
jp
sub
dec
outsb
jo
or
push
xchg
mov
jno
hlt
add
sub
loopne
loop
adc
lret
xchg
mov
jns
sub
out
mov
cmp
mov
negl
inc
mov
mov
cmp
lahf
addl
insb
out
mulb
pop
scas
dec
pusha
pop
pop
xchg
cmp
pop
outsl
mov
adcb
add
out
cmp
xor
or
inc
pop
jbe
or
rorb
out
sub
les
and
and
cs
lret
pop
cmp
or
push
inc
das
and
mov
xor
adc
adc
mov
fidivrl
sbb
pop
imul
ret
movsb
mov
push
mov
into
inc
xor
and
cmp
fsubrp
mov
mov
lds
addr16
or
xlat
cmc
mov
enter
sbb
repnz
inc
pop
fld
mov
cltd
cs
jns
lret
negb
sahf
jp
addb
adc
push
xor
lahf
in
xlat
pop
sub
rcrl
or
fmull
outsb
push
addr16
cmpsl
les
jecxz
int3
iret
jmp
pushf
adc
cwtl
mov
cmp
mov
addb
movsb
out
mov
sbb
bound
in
leave
lods
je
sbb
push
mov
lret
loop
stos
jnp
jge
mov
ja
sti
mov
lods
or
repnz
jbe
sahf
sub
sub
inc
scas
mov
insl
inc
and
lods
roll
or
mov
push
and
dec
jp
pusha
lea
loope
fwait
mov
movsb
mov
pop
sub
das
inc
cmpsl
xchg
scas
xchg
in
sbb
mov
or
or
or
insb
lret
mov
movsl
jp
out
or
jb
outsb
and
adc
or
cld
xor
jne
shr
call
and
movsb
xchg
dec
out
shrb
mov
pop
loopne
pop
mov
mov
mov
push
lahf
mov
cltd
test
rcll
ja
add
jns
pop
xor
sbb
mov
jb
inc
test
aad
in
movsl
xor
out
pop
clc
mov
cmp
and
push
or
sti
stc
sub
mov
popa
and
dec
popf
push
jp
lods
lock
cmc
mov
shlb
loopne
xchg
scas
out
xlat
inc
jp
outsb
fnstsw
pop
imul
push
dec
mov
sti
out
or
or
ss
xchg
sub
sahf
xlat
js
js
cmp
out
mov
dec
jno
es
cmp
pop
popa
sarb
sahf
pop
enter
mov
enter
adc
cld
das
pop
mov
mov
inc
jl
xchg
fsubrs
lea
mov
xchg
mov
cmp
das
lcall
inc
push
pusha
sahf
outsb
mov
shrl
loop
and
in
sahf
movsl
rorb
jo
push
leave
sbb
adc
cli
or
test
sbb
xchg
jl
out
lret
jg
int
push
inc
sbbb
lret
mov
mov
or
lret
xchg
orb
cmp
enter
push
stos
xchg
xchg
stc
or
dec
cmp
mov
pop
mov
mov
xlat
ja
cmpsl
rolb
cmp
dec
add
push
pop
inc
cltd
aad
arpl
mov
push
lret
rorl
sbb
and
test
or
ficoms
ret
mov
xchg
push
mov
and
out
pop
ss
repz
push
and
sub
pusha
ljmp
es
ss
pop
jle
leave
xchg
add
inc
lahf
mov
test
rcr
or
imul
xlat
sbbb
pop
push
ljmp
lahf
imul
mov
mov
xor
clc
xchg
jge
mov
jl
xchg
mov
adc
fstl
repnz
ds
mov
bswap
add
sub
arpl
cmp
or
mov
xchg
js
or
xchg
sub
in
dec
inc
adcw
cmp
push
insb
sbb
mov
imul
int
sahf
lods
pusha
js
popa
pop
jecxz
mov
int3
je
in
push
sub
gs
stos
inc
dec
inc
mov
mov
sbb
sar
shrl
sti
xchg
adc
push
repnz
xchg
cmpsl
push
jbe
lods
adc
jne
sbb
shrl
bound
andl
cmp
ss
push
jecxz,pt
int3
aas
js
pop
dec
repz
int
push
out
iret
mov
in
fidivl
hlt
or
ret
ljmp
jg
test
mov
push
xor
pop
cmp
inc
push
fcompl
sub
cmpsl
lods
scas
cwtl
aam
das
xchg
mov
nop
les
aaa
out
push
inc
aaa
inc
jmp
fwait
arpl
sub
shrl
jbe
inc
lods
sbbl
movl
and
push
add
lcall
lahf
mov
scas
pop
add
ljmp
jge
mov
sar
loopne
lret
xchg
adcb
test
roll
out
into
test
or
sbb
aaa
je
dec
adc
dec
xchg
dec
cmp
test
mov
loope
imul
in
cmp
std
andl
mov
or
mov
pop
sbb
cmp
dec
pushf
inc
insl
push
inc
xchg
adc
fstps
fbstp
xchg
loopne
insl
lcall
sbb
ja
enter
sti
inc
mov
pop
imul
lcall
mov
fwait
cmc
scas
cmp
ja,pt
outsb
add
jl
fcoml
pop
leave
xor
sahf
fisttpl
mov
add
fwait
adc
es
adc
mov
aad
mov
clc
jg
cmc
ret
loope
addb
mov
out
insb
adc
stos
int3
dec
and
mov
lahf
std
in
mov
dec
or
std
ret
inc
psubq
pop
sahf
popa
cwtl
scas
test
mov
lret
push
pusha
stos
xchg
lock
pop
push
nop
push
shlb
aam
rcl
or
les
adc
push
fidivs
mov
mov
outsb
cmp
rcrb
clc
mov
jmp
mov
scas
shlb
sbb
mov
jge
mov
add
inc
add
iret
xchg
loopne
pop
mov
mov
ret
jo
fsubrp
pop
sbb
insl
xlat
fcompl
sahf
cmp
pop
jnp
rclb
stc
push
dec
imul
out
push
dec
stc
inc
mov
sbb
mov
dec
pushf
dec
and
call
xchg
cmp
scas
mov
movsb
adc
arpl
adc
cmp
mov
fwait
or
and
div
mov
pusha
in
sbb
push
add
jnp
call
mov
mov
mov
sbb
add
inc
cmp
cmp
and
test
jl
pop
sti
xor
popf
insb
cmp
stc
loop
or
adc
pop
xchg
and
inc
sbb
xchg
int
jp
ds
sub
pop
xchg
adc
push
xor
jae
cld
adc
ljmp
cs
jmp
imul
repz
mov
dec
aaa
es
ss
xchg
outsb
mov
jno
pop
push
fcom
xor
xchg
inc
loopne
std
mov
add
mov
mov
mov
mov
cld
test
cmp
enter
les
dec
sub
lods
in
dec
lods
bound
adc
push
mov
adc
push
cmp
ss
loopne
cmc
sub
sbb
pop
jmp
mov
hlt
das
sahf
sbb
imul
pusha
mov
leave
shlb
stos
sahf
jae
push
mov
lock
fadds
or
mov
cmc
push
inc
add
cli
mov
imul
leave
adc
shr
rorl
movsl
hlt
out
push
xor
push
in
adc
inc
adc
orl
jns
lods
mov
js
jmp
xlat
cmp
cmp
mov
sbb
xor
inc
shrl
sub
or
or
adc
into
sub
in
xor
sub
push
cmp
pop
or
xchg
sti
push
popa
push
inc
cmp
in
xor
sti
shrl
in
sub
adc
and
sbb
adc
lahf
lea
decl
ljmp
mov
ss
aas
push
rol
jns
pop
xchg
enter
jmp
test
daa
inc
sub
adc
stos
scas
ffree
mov
and
cmc
xchg
repnz
ss
addr16
xchg
dec
lea
mov
pop
or
inc
mov
mov
mov
out
mov
daa
inc
fistpl
inc
mov
cmp
inc
stos
imul
inc
cmpsl
xchg
test
push
notb
loop
stc
jns
pop
dec
jbe
xchg
xchg
loope
out
xor
add
mov
aam
je
jmp
xor
adc
or
mov
mov
jp
push
xchg
push
in
push
or
filds
xchg
or
and
call
in
sti
push
cli
aas
cmpsb
cmpsb
test
cmpb
enter
cld
cmc
movsl
sub
aad
lods
mov
imul
call
adc
outsb
bound
cmp
iret
or
mov
in
mov
xor
inc
mov
ud1
jns
aas
lret
cmp
or
mov
sbb
add
pop
loop
pop
xor
mov
fstpl
fsts
repz
inc
sbb
stos
mov
jge
and
popa
frstor
adc
outsl
ret
sub
jne
out
repnz
xchg
add
push
cmp
mov
pop
imul
jae
outsb
dec
scas
pop
dec
cmp
mov
ret
mov
ret
in
cmp
sub
mov
pop
mov
pop
or
mov
adc
and
and
sbb
or
in
shl
test
jns
push
or
sub
add
jg
xor
xor
xchg
outsb
pop
sbb
loop
insb
or
roll
fcoml
out
cltd
lret
adc
and
aad
jae
popa
pop
jle
adc
sub
ljmp
aaa
or
cmp
inc
mov
mov
pop
jb
pop
xchg
push
imul
adc
in
sub
mov
aas
lahf
sub
sahf
inc
lret
imul
dec
and
jmp
xchg
fs
add
pop
pop
mov
sbb
lock
scas
mov
dec
fcomi
ljmp
mov
mov
divl
movsl
or
mov
in
xchg
pop
push
mov
xchg
sbb
inc
push
cmp
or
stos
es
push
out
sbb
sbb
mov
adc
out
pusha
inc
cld
push
mov
fwait
popf
in
loopne
xor
push
decb
jl
xchg
xor
jmp
mov
imul
mov
inc
dec
lea
jne
and
jnp
loop
in
inc
popa
jecxz
fadds
mov
xor
or
leave
popf
mov
mov
inc
mull
push
in
dec
ret
jae
mov
addr16
ret
pop
lret
xor
in
xchg
and
scas
and
add
push
dec
nop
cmp
xor
jnp
cmp
mov
mov
mov
loopne
aam
fiadds
int
jg
push
test
fisttpll
ret
or
adc
jecxz,pt
lods
sbb
roll
fisttpll
pop
pop
or
aad
lahf
adc
aad
insb
xor
cmp
mov
mov
ja
adc
insl
into
cwtl
loopne
faddp
mov
sahf
and
adc
lret
push
mov
fs
push
push
jbe
mov
xchg
or
aad
jge
cwtl
das
hlt
mov
mov
mov
sub
fsubrl
icebp
or
cmp
dec
mov
and
mov
dec
mov
inc
ret
sbb
push
and
rol
cmp
mov
in
cmpsl
xchg
dec
and
stos
daa
in
lret
pop
pop
outsb
cmp
cmp
or
stc
stc
pop
jle
adc
lret
ror
out
das
int
inc
je
ja
sub
push
arpl
and
dec
sub
mov
dec
xor
dec
testb
scas
fnstcw
dec
and
push
fildl
test
xchg
mov
cmc
cmp
push
nop
lock
and
xor
and
sahf
stos
cmp
scas
ret
popa
jb
in
xchg
lahf
rol
call
sub
mov
mov
cmp
lock
cld
mov
pop
shr
mov
outsb
add
imul
in
out
es
cmpsb
add
and
mov
push
cmp
xchg
push
movsl
inc
mov
pushf
out
sbb
in
push
bound
pop
outsb
xor
mov
loopne
aas
imul
lcall
notb
sbbb
sbb
enter
push
mov
or
push
subl
lds
cwtl
sbb
outsb
enter
rcrb
push
dec
dec
stc
mov
mov
stc
push
mov
ljmp
ds
lcall
adc
es
sub
cmp
lods
dec
and
push
pop
icebp
add
cld
dec
add
pop
pop
pop
movsb
out
push
lock
or
loope
and
adc
xor
test
imul
or
inc
scas
test
icebp
add
test
popf
jmp
into
xor
xchg
mov
xor
and
or
pop
lock
mov
jmp
mov
mov
pop
pop
or
data16
mov
add
popa
add
sbb
je
shl
in
fisubl
scas
mov
jmp
es
jle
cmp
shl
mov
movsl
push
or
data16
lcall
je
es
jo
stos
movsl
sti
mull
mov
add
popf
dec
adc
daa
lret
or
pushf
dec
and
es
into
jnp
mov
and
nop
sbb
pusha
sbb
lods
je
ss
fwait
dec
or
movsb
imul
pop
or
dec
jo
and
in
fisttpll
shlb
jo
push
push
cmp
lock
jge
sub
adc
cmp
ja
adc
pop
mov
xchg
test
xchg
pop
sti
insb
fdivp
pusha
sbb
mov
jb
mov
arpl
pop
ret
insl
jbe
cld
mov
push
adc
andl
jmp
sub
sub
fmull
divl
cmpsl
pop
shr
jbe
cmp
out
cmp
cmp
pop
jb
inc
fldl
dec
or
sbb
dec
mov
sub
cmp
mov
cmpsl
inc
or
mov
pop
pop
shrb
in
andb
push
scas
mull
jle
daa
imul
cmp
push
aad
mov
sub
inc
mov
or
or
xchg
xchg
sub
inc
into
divl
cli
jmp
cmc
std
pop
mov
aam
mov
ds
sbb
lea
daa
mov
mov
dec
aaa
xchg
mov
adc
jae
enter
bound
jp
shrb
xchg
je
jge
mov
sbb
hlt
jb
inc
bound
call
mov
rolb
shlb
mov
pop
cmp
js
mov
dec
stos
imull
inc
lcall
mov
pop
insb
daa
mov
lahf
mov
insl
roll
lret
roll
xchg
sub
pop
in
cwtl
cwtl
dec
shll
mov
add
insb
sti
lret
jnp
divl
dec
xchg
lcall
mov
xchg
sub
sub
jmp
xor
insb
sub
std
loop
xchg
pop
push
sbb
andl
jl
inc
das
mov
push
mov
mov
popf
adc
push
aad
mov
add
test
xchg
mov
ret
movl
sub
push
dec
push
jbe
out
push
iret
mov
cmp
inc
ljmp
into
shlb
sbb
cli
sbb
pop
lods
loope
lea
pop
jecxz
cld
ja
fmull
shrl
jne
mov
mov
push
push
clc
sub
pop
aam
and
pop
sbb
fmul
pop
dec
push
add
push
subb
addr16
test
mov
mov
sbb
nop
hlt
jge
add
inc
repz
sbb
xchg
sub
pop
bound
cs
adc
push
mov
fsubrl
add
int3
cltd
push
js
sahf
push
sahf
pop
popa
inc
mov
sbb
inc
enter
push
repz
jb
dec
pop
out
mov
out
or
push
pop
sbb
dec
repnz
shlb
jnp
les
out
in
call
ds
pop
jno
popa
cs
stc
or
xor
jmp
sub
mov
stos
cltd
outsl
xor
repnz
fwait
dec
imul
icebp
fs
out
outsb
inc
call
push
sti
movsb
addl
lcall
stos
repz
sub
xchg
sub
scas
push
push
stos
and
mov
jb
xchg
mov
popf
loop
fistpl
roll
sub
and
loopne
sub
and
inc
jp
ds
cmpsl
jo
les
fstps
inc
loope
out
xchg
or
dec
addr16
inc
mov
lock
fisubl
and
frstpm(287
mov
imulb
mov
inc
add
dec
in
mov
ds
mov
and
repnz
dec
jmp
adc
fstpt
mov
push
push
xchg
pop
fstps
add
mov
divb
adc
arpl
test
lods
jnp
or
ret
mov
push
cmc
pop
ret
xchg
sbb
cli
test
mov
sub
je
shlb
fldenv
mov
sub
call
cltd
jmp
add
in
hlt
adc
sarl
test
push
push
mov
mov
repnz
add
push
ret
sbb
ror
imulb
out
mov
cld
adc
push
mov
movsl
sub
in
pop
loop
imul
mov
push
push
imul
jge
aad
mov
cmpsb
xor
xchg
adcb
mov
sub
xchg
dec
mov
adc
loopne
add
add
sbb
pushf
in
ds
scas
fistl
test
jmp
call
sahf
pop
add
jnp
or
push
sbb
andl
cli
or
notb
sbb
pop
les
xor
shlb
inc
sbb
jle
pop
leave
jecxz
adc
cwtl
push
mov
frstor
add
gs
pop
stos
mov
in
sbb
lret
into
repz
insb
pushf
imul
jecxz
push
pop
movsb
dec
lods
or
mov
out
or
int3
sti
mov
popf
popa
sbb
inc
in
jae
mov
bound
sub
mov
mov
aas
rorb
leave
popa
cmpl
mov
mov
jo
rol
loope
cli
sbb
insb
into
das
dec
pop
jg
jl
lea
fmul
insb
add
out
xchg
jns
aaa
mov
movsl
or
aaa
sbb
push
push
cwtl
mov
xchg
pop
das
data16
enter
mov
mov
icebp
xor
add
sbb
or
je
mov
mov
push
sub
mov
jae
adc
and
inc
pop
cld
pop
jmp
rcrb
jae
cld
out
pop
push
mov
xchg
jb
loopne
dec
add
and
xor
inc
or
adc
stos
cmp
or
movsl
movsb
bound
cld
xchg
ds
dec
leave
or
sti
stos
xor
movl
cmp
iret
xor
nop
movsl
cli
aam
adc
adc
fldenv
std
inc
lods
mov
mov
lahf
iret
add
mov
insb
in
lret
ror
pop
aam
scas
xor
fiaddl
fcom
mov
push
sub
adc
inc
ss
sub
and
gs
adc
lret
cmpsb
mov
mov
repnz
rcl
std
clc
push
imul
ror
dec
jp
or
xchg
out
add
cmc
ss
mov
sti
test
xor
dec
lods
in
cmp
fadds
jp
mov
movsl
or
decl
rorl
inc
dec
sub
pop
jmp
xor
mov
psubsb
out
xchg
add
jno
enter
outsl
mov
sbb
js
mov
jecxz
pop
fstl
addr16
inc
inc
fs
lock
shlb
or
iret
es
mulb
test
aad
stos
insl
ret
cltd
das
cmpsl
divb
jno
lcall
jno
mov
rcl
clc
dec
into
pop
sbb
call
lock
jle
es
fsubp
js
in
imul
xor
jae
or
and
imul
arpl
out
insl
and
cmp
in
movsb
pop
mov
data16
cltd
mov
in
ja
and
mov
push
mov
fsts
gs
enter
push
arpl
int3
push
push
lds
push
out
stos
call
pop
scas
popf
dec
and
xchg
mov
outsl
lret
mov
mov
jecxz
xor
call
mov
mov
out
and
in
or
es
into
aam
push
and
sahf
cmp
lea
les
adc
push
sbb
lea
mov
push
fldt
insb
xor
mov
add
fsts
test
mov
mov
add
push
or
imul
int3
jae
xchg
jno
jo
cmp
in
je
dec
sbb
pop
ljmp
inc
cwtl
mov
aas
jmp
in
jns
lods
inc
movsl
test
ljmp
mov
xchg
loop
mov
test
sbb
mov
mov
sbb
pop
and
lea
test
cmp
add
push
pop
repnz
shr
add
mov
pop
push
rorb
sub
rcll
add
mov
cmc
mov
and
jecxz
mov
ss
int
lock
mov
stc
icebp
cld
adc
mov
pop
xchg
pop
test
lods
cli
jp
imul
jge
inc
adc
fdivrl
mov
cmc
push
adc
cli
adcl
jle
sahf
cmp
mov
pop
xor
cmpsb
pop
pop
std
outsl
ljmp
xor
jecxz
lret
push
insb
lea
das
inc
pop
xor
add
iret
adc
aad
or
xor
mov
lahf
xorb
fdivl
sub
cld
lds
add
jle
das
cmp
jno
sbb
lahf
adc
push
cli
out
fmulp
pop
and
outsb
hlt
scas
mov
pushl
push
xor
lock
sub
jmp
push
cmc
mov
pop
sub
pop
test
push
sbb
shl
push
ja
adc
sahf
add
jecxz
mov
scas
enter
sbb
push
cmpsl
jl
pop
leave
mov
sarl
stc
push
enter
adc
lcall
repnz
adc
testl
pop
cmp
mov
sub
iret
popa
cmp
mov
inc
inc
dec
xor
inc
cld
ss
adc
push
mov
fs
stos
stc
pop
arpl
sahf
call
mov
jp
or
pop
in
mov
jmp
js
sub
or
mov
in
scas
jb
lds
push
sub
les
mov
cli
ja
xor
mov
sub
add
xor
movsb
jne
and
aas
xlat
lret
pop
lods
popf
scas
ljmp
jp
pop
mov
addr16
addl
mov
inc
lahf
mov
stos
xlat
testb
cmp
std
mov
movsl
mov
mov
adc
ss
mov
push
fbld
cli
xor
inc
icebp
cmp
sbb
push
sub
in
shl
aam
je
inc
adc
shll
ret
xchg
in
outsb
je,pn
mov
jbe
mov
std
sar
or
psubsw
push
add
cmp
stc
cmp
lods
sbb
dec
pop
or
sbb
inc
das
jp
jecxz
stc
mov
insl
pop
addb
sbb
xchg
push
outsb
mov
cmp
sarb
pusha
and
add
lods
mov
pop
inc
mov
mov
xchg
cmc
add
rcrb
push
add
ret
adc
push
and
cld
sub
push
dec
stos
jbe
inc
inc
cmp
in
gs
pop
mov
scas
cli
outsl
icebp
mov
mov
call
mov
mov
xchg
jle
roll
dec
inc
add
xchg
sub
rcll
loop
cmp
sub
and
push
cwtl
int3
std
sbb
cltd
inc
dec
pop
mov
xchg
xor
lods
int
imul
je
mov
push
adc
xchg
sti
mov
dec
mov
fcmovnu
fldenv
sti
dec
mov
xor
mov
pop
xchg
mov
mov
mov
cs
stos
push
mov
dec
jae
loopne
sbb
or
mov
xor
in
xchg
mov
or
daa
fildll
insl
in
test
loop
mov
in
into
push
pop
add
lods
sbb
cwtl
cld
data16
or
and
test
addr16
scas
scas
testl
call
in
scas
das
dec
repnz
xchg
loopne
cmp
fstl
and
stos
repz
jbe
mov
pop
movsl
sub
aas
dec
outsb
mov
dec
inc
inc
test
or
rorb
rep
int
push
sub
pusha
xor
movsb
jge
dec
in
shl
xor
adc
mov
cmp
pop
fists
jle
mov
mov
jb
jge
jecxz
scas
cmpl
and
mov
dec
mov
hlt
dec
jl
movsb
rcrl
ss
push
add
aaa
dec
sti
notb
bound
clc
into
jmp
adc
stos
insb
je
in
pop
add
mov
jbe
jl
push
jne
jbe
fisubrs
push
mov
outsb
jae
ret
testb
cmc
repz
movb
out
inc
ret
cmc
mov
mov
mov
add
push
mov
inc
ljmp
pop
jno
ss
out
mov
cs
jne
dec
clc
jb
inc
fistl
cltd
out
and
loop
inc
mov
out
test
popa
and
jp
jmp
xchg
lahf
ss
das
push
int
lods
and
push
mov
js
sbb
sub
es
cmp
push
repz
pop
mov
inc
pusha
xchg
and
clc
or
std
sub
pop
fwait
xor
out
test
or
pop
incb
std
push
and
mov
out
adc
jae
push
lcall
cs
lahf
fsubl
inc
pop
mov
cmp
cld
push
xchg
fldl
and
in
dec
push
xchg
stos
xorb
push
push
mov
jg
add
mov
mov
movsb
test
popf
xor
push
push
sbb
mov
jg
loop
lods
or
inc
pop
jmp
and
repz
xor
xchg
sahf
int
jecxz
pushf
fnsave
lods
push
xchg
repz
ja
ss
pusha
adc
ds
pop
mov
fidivrs
loope
loope
insl
daa
cmp
cs
insb
mov
les
ret
lods
mov
popa
iret
dec
push
adc
push
dec
loope
mov
imul
inc
shrl
mov
cmp
jbe
pop
aas
rclb
fldenv
in
jo
cwtl
imul
aad
pop
js
repz
sbb
out
xor
out
test
rol
test
jnp
dec
hlt
add
int3
clc
pop
sbb
add
mov
adcl
hlt
mov
shll
fnsave
inc
aaa
test
repnz
iret
mov
push
fcomps
jnp
shr
sub
sbb
aad
int3
inc
outsl
int3
xor
testb
adc
mov
jl
mov
mov
mov
dec
or
or
ds
in
push
jns
sqrtps
dec
pop
cld
and
xor
out
pop
in
in
mov
fsubrs
or
mov
adc
test
sbb
fnsave
or
loopne
pop
cmp
inc
and
sub
data16
inc
xchg
out
fistps
xchg
loopne
ret
insb
jbe
xor
and
es
mov
add
fsubrl
inc
mov
out
and
jle
into
lds
or
push
jmp
in
sbb
test
and
jbe
sub
pop
jg
pop
loope
test
inc
das
xchg
adc
jg
mov
adc
and
loope
mov
ds
mov
into
std
vphadduwq
std
arpl
cmp
cmp
out
lahf
rcll
std
mov
int3
loope
sub
jb
dec
xchg
sbb
cmp
ljmp
pusha
enter
lret
sbb
insb
stos
jp
insb
push
out
mov
int
scas
xchg
addb
inc
push
lods
dec
sbb
xchg
add
scas
xlat
mov
into
sbb
sti
testl
push
adc
je
add
subb
enter
jns
icebp
rclb
in
jl
push
jae
test
in
addr16
insb
loop
ret
and
sub
lret
cmp
xor
push
repz
inc
xchg
jp
push
scas
dec
pop
sub
test
repz
popa
jecxz
pop
push
jmp
lret
cmpsl
rclb
jecxz
lahf
xlat
add
or
mov
out
scas
push
mov
jns,pt
fdivrl
push
shlb
lret
int
nop
movsl
sub
fcmovbe
and
insl
mov
negl
push
inc
loop
pop
xchg
cmp
cmpsb
cmc
add
xor
sti
jmp
fistl
pushf
xchg
lds
mov
ja
fwait
aaa
mov
sub
in
cmc
sub
mov
aaa
push
pop
mov
mov
out
test
jno
scas
xchg
test
sub
ret
and
jo
pop
int
mov
push
in
loopne
jnp
cmp
shrb
aad
loop
lret
dec
lcall
xor
mov
rcll
and
aam
clc
js
fildll
fwait
out
jbe
push
push
dec
movsl
outsl
sbb
jmp
or
cmc
push
test
arpl
rcll
jnp
out
jl
dec
xlat
and
mov
ret
cmp
aam
call
out
in
into
stos
movsb
lahf
mov
rorl
es
push
insl
xor
ljmp
in
movsl
cli
dec
enter
sub
jmp
dec
push
jp
insb
std
out
adc
xchg
and
dec
xchg
adc
sub
movsl
xorb
jmp
insb
xor
out
cmpl
inc
cmpsb
push
mov
push
jg
sahf
cmp
lods
movsb
xor
pop
push
xchg
fcmovne
fists
mov
add
dec
inc
push
xchg
cmp
clc
xor
xchg
adc
outsl
into
out
outsb
jns
cmp
cmpl
cmp
cmp
je
jg
das
inc
adc
mov
sbb
lret
mov
enter
pop
add
xor
out
xchg
repz
push
cmp
loop
mov
testb
mov
lds
cltd
std
adc
std
adc
aaa
test
add
cltd
cmp
sbb
ljmp
pop
xchg
and
xor
jle
pop
inc
mov
clc
fdivl
test
xchg
lahf
push
push
mov
lahf
mov
push
mov
and
sbb
out
lahf
jmp
lahf
daa
insl
in
stc
jp
jmp
adc
test
jno
adc
dec
das
int3
pushfw
add
sub
jp
into
fwait
dec
fldt
or
fsts
leave
fistpl
and
sub
insb
stos
les
popf
mov
test
imul
adcl
addr16
xor
leave
jecxz
mov
mov
fwait
sbb
mov
bound
xor
pop
ljmp
sub
sahf
rcl
loopne
cmpsb
pop
lret
push
idiv
imul
lock
push
inc
and
aaa
add
push
cmp
pop
mov
or
into
adc
mov
mov
stos
arpl
lds
add
sub
xchg
call
xorb
fwait
lcall
add
and
fadd
sub
pusha
pop
push
xor
or
test
jecxz
movsb
xor
or
and
add
dec
sub
lods
mov
mov
rolb
dec
popf
ret
bound
ret
frstor
adc
inc
cmpl
fmul
scas
inc
cli
jb
ljmp
scas
sub
cmc
aaa
aas
inc
add
imul
sbb
mov
mov
inc
outsl
or
pop
adc
mov
xchg
orl
pop
aad
fs
mov
dec
sub
cmpsb
jnp
cmp
pop
adc
jmp
lahf
loop
iret
movsl
sbb
lea
xor
cmp
and
sub
jg
pop
mov
cmp
mov
xchg
out
mov
jnp
das
sub
dec
les
mov
mov
lret
or
aaa
js
andl
hlt
mov
cmp
and
out
cmpsb
mov
cmc
mov
nop
fadds
xchg
sbb
mov
cmc
mov
movsl
out
adc
fisubl
out
adc
jle
fwait
insb
icebp
movsl
decb
shl
push
pop
push
add
or
push
icebp
sbb
mov
lock
and
dec
roll
push
pushl
xchg
outsb
jp
and
xchg
jge
mov
mov
adc
inc
outsb
shll
mov
cwtl
mov
stos
mov
jp
cwtl
mov
mov
inc
ss
stos
int3
cltd
sub
jg
inc
outsb
imul
movsb
fwait
lea
test
fstps
fidivs
imul
je
push
divl
out
fcmovnu
fists
and
add
or
adc
xor
xor
lahf
std
aas
and
mov
adc
les
adc
inc
and
sbb
xor
adc
pop
xchg
push
fwait
pop
xor
or
into
adc
xorb
inc
clc
dec
and
mov
divb
pop
test
jne
push
mov
cwtl
hlt
and
decb
push
cmc
add
adc
cld
enter
lea
jns
int
fs
jmp
mov
sbb
dec
fisubrl
dec
scas
outsl
out
adc
notl
mov
mov
test
mov
lcall
xor
fcompl
dec
xor
mov
repnz
cli
stc
int
cmc
into
inc
enter
inc
gs
mov
fwait
xchg
mov
push
add
cmp
mov
out
fists
clc
fdivl
jo
or
mov
mov
or
adc
mov
fistpl
pop
sahf
faddl
pop
xor
out
jno
jp
dec
xchg
jecxz
and
cmp
and
movsb
sub
push
jmp
fstl
mov
dec
xchg
subb
arpl
rolb
idivl
add
ret
mov
jle
jecxz
lds
hlt
jno
jbe
jle
sbb
inc
mov
clc
enter
xor
cmp
push
aam
out
xchg
pop
loope
xor
jns
fcoms
add
and
fldt
add
pop
mov
inc
and
ret
pop
xor
adc
loopne
add
xlat
cli
leave
xchg
popf
stc
jne
sub
clc
or
mov
mov
adc
push
adc
sbb
mov
fldt
xor
jge
es
in
xlat
xchg
jnp
rorl
push
inc
scas
fsubl
sbb
pop
sub
test
xchg
add
jecxz
xor
pop
insl
add
nop
sahf
in
jns
sub
dec
sbb
or
mov
aad
jmp
aas
xchg
adc
push
mov
aaa
xchg
and
fmul
dec
pop
out
jl
ret
insl
dec
das
and
mov
cli
aaa
ljmp
loop
cmp
add
sbb
add
jnp
fadd
adc
gs
pop
mov
sub
jecxz
dec
jp
cmp
lds
mov
clc
sbb
rclb
faddl
lock
or
sbb
adc
adc
xor
pop
ret
es
imul
xchg
inc
adc
mov
lahf
pop
xchg
pop
enter
popa
out
xor
pop
fdivl
sbb
ret
popa
je
mov
pushf
push
xor
sbb
scas
int3
lcall
and
les
mov
and
mov
jbe
cli
and
pop
repnz
data16
enter
push
call
jno
xor
pop
adcl
mov
mov
imul
jno
outsl
bound
stc
adc
shrl
push
sub
fsub
sahf
in
jo
lret
inc
push
cmpsl
pusha
scas
xlat
cltd
inc
adc
int3
clc
cmp
arpl
cmp
sbbb
cs
xor
std
mov
add
mov
lods
xor
mov
jns
je
sbb
adc
adc
sub
dec
sti
lret
sub
test
inc
rcrl
pop
mov
jle
int
clc
jl
dec
inc
lds
das
std
push
pop
dec
icebp
imul
stos
xchg
dec
lret
ds
mov
je
xchg
imul
or
mov
cmpsl
or
cwtl
xchg
push
push
jo
pop
xchg
lods
mov
jns
faddl
sub
and
xor
fucomip
js
shrb
aas
lods
sbb
xchg
adc
mov
mov
rcll
jnp
cmc
gs
mov
pushf
push
xchg
lret
ss
outsb
push
es
cmp
and
int
clc
cmp
add
mov
jns
aaa
leave
arpl
cld
push
mov
xchg
lret
or
testb
cmpsb
mov
jmp
or
sti
mov
push
sub
popa
xchg
filds
add
int
push
mov
inc
jmp
dec
jns
jnp
mov
movsl
loop
or
mov
push
mov
ret
imul
cmc
lar
and
lea
std
lods
dec
loope
aad
loop
stos
fisubrl
cmp
add
pop
or
jo
xor
out
scas
fdivs
fiadds
jecxz
repnz
adc
jbe
scas
and
sahf
push
bound
movsl
fisubrl
mov
ds
lods
ret
or
mov
std
lret
xchg
movsb
push
mov
or
aaa
push
cmc
mov
mov
xor
bound
dec
pop
andl
or
pop
and
mov
stc
adc
sbb
push
rcl
add
xorl
dec
jo
cmp
into
lcall
and
jns
xor
jb
jmp
into
or
adc
ret
sub
cmp
or
dec
mov
ret
add
mov
mov
fisttpl
test
bnd
dec
divb
dec
sub
pop
jle
xchg
push
jecxz
sbb
cmpsb
pop
adc
icebp
test
popf
in
cmp
cmp
cmpb
nop
jmp
negb
in
gs
or
push
cmp
mov
adc
imul
push
out
loope
sub
sti
scas
inc
call
mov
nop
shlb
jle
and
fidivs
xchg
cmp
cs
or
and
jae
add
lret
sbb
jge
rcll
mov
pop
jl
cmpsl
dec
dec
pop
mov
in
push
movsb
mov
mov
popf
inc
jno
pushf
fs
arpl
dec
repnz
je
cmp
stos
add
mov
scas
xchg
nop
mov
push
xor
int
sbb
adcb
xchg
jo
js
pop
fwait
jl
sti
lcall
sub
xchg
dec
les
jle
sub
mov
and
loopne
stos
scas
pop
insb
popa
ljmp
xchg
out
cwtl
fstpt
in
test
out
push
jno
iret
addr16
xlat
test
adc
mov
flds
mov
push
jg
mov
fcompl
xor
pushf
lret
stos
cli
pop
jo
insl
xor
and
rorl
pop
xchg
lahf
sbb
cmp
sbb
fwait
ja
ret
or
dec
int3
fsub
aam
sar
xchg
inc
xchg
mov
das
or
dec
loop
mov
xchg
xchg
sbb
cmp
cmpsl
fsubrp
stos
add
jnp
imul
pop
mov
dec
dec
pop
sahf
add
push
insb
scas
stos
fucomip
loopne
or
imul
dec
mov
mov
mov
adc
mov
pushf
mov
in
mov
jbe
int3
sbbb
sbb
flds
out
bound
les
div
xchg
sub
add
inc
push
sbb
add
out
movsl
xlat
mov
cmpsl
cmp
add
mov
ja
add
inc
and
into
jo
mov
int
neg
shll
fsubrp
fwait
mov
mov
sarl
sub
sahf
xchg
mov
movsb
clc
mov
push
dec
sub
outsl
in
pusha
add
pusha
scas
adc
cltd
jge
inc
les
mov
add
dec
inc
sub
xchg
lahf
ficomps
or
lret
cmpsb
xlat
int
in
rcrb
mov
jns
xchg
mov
and
xor
imul
or
mov
inc
xchg
push
xchg
add
es
push
imul
cmp
inc
test
jmp
jne
or
aad
push
jp
ljmp
mov
inc
shr
outsb
neg
fldcw
sub
xlat
imul
imul
xchg
push
scas
ret
mov
xor
sahf
ret
and
pop
daa
cmpl
sbb
inc
add
sbb
jno
addr16
or
pop
mov
mov
movsb
mov
mov
pop
sub
arpl
lret
or
cmp
js
arpl
push
jnp
outsl
sbb
test
fildl
adc
xchg
xchg
mov
xor
xchg
mov
sbb
in
jmp
aad
inc
jge
add
psrlw
es
push
aad
mov
popl
xor
mov
or
pop
adcb
xchg
jl
jle
push
iret
adc
rcrl
cmp
arpl
pushf
push
jne
or
shlb
mov
nop
xchg
lahf
cmc
push
loop
cmpsb
fimull
xchg
in
imul
iret
adc
in
outsb
xchg
in
mov
in
repz
sbb
loopne
pop
mov
sbb
hlt
dec
add
mov
adc
sub
mov
xor
aam
cmc
cmp
xor
dec
mov
movsb
cld
loop
push
test
pop
xrelease
mov
xchg
fdivrs
or
sbb
iret
or
int
rclb
xchg
mov
pusha
lods
sbb
lea
add
mov
inc
lcall
fdivrs
jb
shrb
pop
mov
push
and
xor
idivb
pushl
inc
int
adc
cltd
in
iret
jl
shl
sub
test
imul
pop
push
cmp
xchg
push
lcall
lock
mov
sub
mov
mov
push
xchg
mov
xor
in
xor
pop
adc
cmp
gs
mov
addr16
jns
and
push
ficompl
test
stos
add
mov
es
push
and
aam
das
lahf
sbb
aad
xchg
mov
sub
and
push
pop
out
js
lahf
lcall
ds
cld
mov
add
add
test
lahf
cmp
sub
or
out
and
lods
jle
cmp
insl
into
xchg
pop
cmp
sbb
sbb
ss
and
add
hlt
xor
notl
add
and
mov
jecxz
jmp
hlt
xchg
aaa
inc
mov
inc
stos
sahf
outsb
mov
xchg
xchg
sub
jnp
xchg
add
xor
test
cmp
jp
mov
xor
xchg
and
mov
xchg
xchg
jns
xor
outsb
mov
shll
mov
nop
shr
jmp
sub
aaa
and
enter
stos
mov
aaa
mov
ja
or
push
leave
push
cmp
dec
lahf
popa
ret
in
xchg
mov
loopne
aad
mov
mov
inc
mov
shr
scas
in
inc
push
mov
jae
jne
pushf
mov
idivl
adc
jmp
or
adc
fwait
push
roll
loopne
das
xchg
fidivl
ja
repnz
jb
popf
mov
push
xchg
call
mov
sbb
push
jmp
adc
dec
mov
outsb
fimuls
es
stc
inc
cmp
add
adc
jmp
add
ljmp
mov
xchg
and
mov
movsl
fldl
in
out
sub
dec
ret
pop
test
mov
inc
or
inc
or
lret
jns
ret
movsl
fwait
movsl
loop
cmp
cmp
outsb
push
int
jl
outsb
inc
push
jbe
lret
xchg
xchg
pop
push
into
jmp
adc
jae
cmc
mov
mov
shl
fs
mov
jmp
push
nop
add
shrb
ret
dec
pop
push
push
test
dec
mov
sub
jae
daa
imul
imul
rclb
push
icebp
xor
mov
outsl
out
dec
sbb
jns
fdivp
lcall
in
cmpb
mov
sbb
mov
fidivs
ficompl
xchg
aad
int3
xorb
xor
sub
mov
ss
mov
push
adcl
rcr
xchg
mov
xchg
shlb
lcall
loopne
test
xor
push
mov
popf
push
rcr
dec
adc
xor
popf
out
repnz
mov
in
mov
add
cmpsb
imul
lock
cs
stos
push
adc
out
or
xchg
js
in
pop
sub
fbld
inc
jmp
push
adc
in
imul
loopne
inc
cmp
sbb
cmpsb
arpl
or
fisubl
adc
inc
sbb
scas
pusha
lcall
imul
imul
jle
out
loop
ja
jbe
fwait
dec
ss
adc
scas
cmp
fwait
and
cmp
cmc
sbb
pop
loope
daa
fcoml
pop
orb
pop
pop
pop
sub
repz
adc
fs
outsl
adc
xor
repnz
push
add
rol
repnz
push
fildl
fdivr
add
mov
or
addb
int3
sub
enter
fildl
aam
arpl
jge
fstpl
xor
loope
cmp
sub
insl
adc
dec
mov
out
push
xchg
adc
out
std
push
dec
add
jns
mov
dec
adc
jnp
or
daa
rclb
int
pop
inc
scas
xchg
and
cmpsl
xor
ljmp
push
movsl
shrl
lods
sbb
filds
sbb
scas
mov
add
inc
stos
and
jo
orl
dec
in
sub
sbb
xor
add
js
subl
xor
pusha
loop
xor
adc
jecxz
repz
pop
mov
cltd
push
xchg
ss
cmpsb
push
scas
movsl
cltd
inc
lcall
dec
ss
push
das
jge
mov
fimuls
push
ficoms
fildl
add
jg
in
sbb
subb
jge
imul
cli
shlb
jo
mov
lahf
inc
into
sub
inc
mov
adc
adc
inc
dec
push
cltd
add
sbb
and
dec
dec
les
loopne
push
lock
lds
outsl
pop
jg
push
add
imul
sbb
push
xlat
stac
lock
sbb
sbb
xor
aaa
insb
jmp
xchg
xchg
cmpsl
lods
int3
adc
sbbb
xorl
ret
push
pushl
into
repnz
jns
daa
int
add
mov
scas
insl
test
rolb
adc
std
jmp
cs
stc
xor
push
imul
stc
std
mov
insb
mov
or
jo
repz
mov
add
cmp
and
xor
outsl
js
add
and
lods
sbb
sbb
cwtl
hlt
scas
mov
lcall
push
ljmp
leave
mov
test
jge
dec
sub
dec
mov
mov
mov
adc
cmp
mov
and
out
clc
movsb
pop
andl
adc
fidivrl
pop
rcl
fucomp
cmp
cmp
sar
jp
push
xor
cwtd
cs
flds
lcall
cld
idivl
int
push
or
cmc
and
pop
push
inc
inc
push
cmp
xor
ds
ds
dec
testb
fs
pop
loop
or
shl
or
leave
adc
xchg
pop
nop
adc
and
xchg
pop
mov
inc
pop
xor
ja
cmp
test
add
mov
adc
xchg
in
mov
pop
test
cli
jp
jp
push
ja
test
shlb
inc
lods
jg
cltd
pop
mov
push
mov
leave
in
inc
adc
lret
les
jns
jecxz
clc
adc
jp
imul
jmp
and
mov
cwtl
aam
and
cs
call
out
data16
jecxz
movb
sbb
mov
data16
mov
int
pop
push
aam
mov
jns
xchg
fstl
cmp
sbb
ljmp
into
call
pop
test
popa
mov
das
sbbb
cmpb
add
popa
pop
or
jae
adc
jne
cmpl
enter
dec
in
mov
dec
test
adc
xchg
mov
sub
cmp
data16
jo
test
mov
add
add
adc
repnz
sbb
scas
mov
lret
and
push
shlb
sub
faddl
xor
dec
and
pop
fnstsw
fs
out
sbb
push
scas
mov
add
mov
cmp
int
lret
pusha
pop
jle
mov
sbb
icebp
ret
jg
jl
rcrl
jp
xor
scas
loope
sahf
cs
das
adc
mov
mov
jno
pop
jmp
scas
fcomps
jbe
cmpsl
lcall
insl
out
xor
xchg
fld
fs
mov
sbb
imul
add
xchg
es
sbb
cmp
outsb
rorb
sbb
push
or
mov
adc
sahf
jle
enter
enter
call
pushf
test
pop
add
adc
sti
or
out
mov
xor
iret
cmove
clc
jo
push
mov
flds
test
scas
lretw
pop
fwait
mov
adc
cld
out
in
das
pop
mov
outsb
lods
mov
sub
mov
sbb
in
imul
mov
imul
xchg
and
push
mov
in
mov
jb
popf
adc
or
in
nop
cmp
dec
arpl
xchg
pop
stc
jg
cmp
inc
mov
mov
mov
data16
xor
push
test
lods
pop
fs
xchg
xor
je
mov
mov
mov
movsb
add
and
mov
outsb
ss
fstl
mov
mov
mull
mov
mov
insb
and
add
push
cli
cli
mov
sti
pop
push
jle
and
xor
pusha
push
rcl
pop
pop
repnz
and
loopne
mov
lahf
xlat
je
inc
xchg
shlb
insl
dec
leave
xchg
mov
stos
dec
mov
fcoms
or
inc
pushf
or
and
add
cwtl
pop
test
out
jge
inc
daa
inc
jno
push
aas
ficoms
loopne
xlat
mov
push
mov
jnp
push
adc
std
es
das
pop
push
and
push
xor
cs
xchg
pop
cmpsl
jnp
xor
sahf
adc
divl
xor
mov
fbstp
in
shl
inc
cs
insb
inc
aas
pop
jnp
shrb
adc
outsl
sub
sbb
cmc
lods
sahf
inc
mov
mov
enter
fwait
leave
push
scas
bound
pusha
lea
jp
pop
movsb
jge
jbe
clc
jecxz
imulb
vmread
add
sti
inc
mov
mov
out
mov
roll
xor
pop
aam
aaa
orl
cld
cli
push
and
aaa
lock
inc
enter
lods
xor
sub
pop
jmp
cmp
rolb
adc
mov
mov
stos
pop
dec
adc
fs
push
pop
mov
jnp
loope
jecxz
pop
insb
and
add
adc
bound
jne
lret
loope
add
dec
lret
lret
mov
mov
inc
les
fwait
inc
mov
rorb
mov
push
cmpsl
arpl
scas
daa
sbb
movb
sub
test
rcrl
inc
das
inc
aam
idiv
int3
push
sti
push
adc
push
subl
scas
aas
ljmp
sub
jge
std
sub
rorl
cmpsl
fwait
cmp
aaa
pop
stc
dec
sbb
dec
cmp
sbb
std
and
cmp
sub
out
imul
sar
andl
inc
sbb
arpl
repnz
dec
in
mov
in
out
inc
int
cmp
sub
inc
sbb
mov
mov
or
sub
pop
dec
push
ret
sub
ret
mov
and
push
pop
dec
and
shrb
imul
or
popa
or
lods
ljmp
xor
inc
or
sbb
inc
fwait
dec
ss
cmp
shlb
jge
adc
lods
xchg
mov
in
jae
push
add
sarl
push
andl
addr16
loop
fcomps
rcl
mov
cmpsb
mov
mov
xor
adc
mov
mov
movsl
or
dec
js
or
std
cld
dec
add
mov
push
lods
lahf
push
adc
les
cmpsl
cmc
push
add
sub
pop
or
faddl
ret
mov
loop
jle
mov
out
pop
stc
xchg
mov
xor
push
and
mov
aam
lea
lock
fstp
xchg
and
push
dec
subl
ljmp
adc
inc
cwtl
scas
mov
call
and
xchg
mov
jbe
scas
push
lds
xlat
xor
shl
jo
movsl
daa
pop
rcll
outsl
pop
in
notl
add
cmc
nop
mov
sub
pusha
mov
push
mov
cmp
pop
imul
stc
or
inc
sar
add
mov
mov
xor
lea
sub
xchg
mov
loope
rorl
iret
mov
aad
push
mov
and
lret
mov
mov
lds
inc
nop
xchg
inc
fcmovne
or
pop
or
jle
pusha
add
in
aaa
sbb
adc
int3
movsl
mov
daa
mov
pusha
rclb
mov
test
ret
cmp
js
out
pop
fisubs
mov
jl
loop
dec
jg
push
cmpsl
xor
mov
int
enter
fadd
idivl
add
shlb
icebp
jae
ljmp
and
sahf
pop
sub
cmc
xlat
xchg
data16
adc
mov
outsw
jns
int3
pop
jnp
pop
mov
test
mov
ret
into
movsb
push
adc
lea
test
cmp
jmp
shll
test
dec
xchg
push
out
psubsw
xor
cmp
lds
and
sbb
ret
push
ret
insb
test
shl
xchg
fmuls
pop
sub
jns
fisubrl
stos
push
or
cli
and
pop
sbb
pop
je
inc
pop
ja
adc
and
mov
scas
xor
xor
and
jmp
pop
add
push
mov
out
push
mov
push
xor
das
popf
or
cmp
add
dec
movsl
ret
adc
divb
fsubrl
repnz
mov
insb
repnz
dec
adc
jle
inc
mov
sub
and
lock
pop
clc
ljmp
push
aaa
jp
sub
and
push
push
pushf
jmp
sub
mov
pop
sbb
mov
lret
sahf
mov
jecxz
xor
pop
cmc
mov
mov
inc
stc
inc
jns
inc
out
adc
cli
fsubr
popf
movsb
cmp
dec
movsb
mov
and
stos
push
jo
insb
mov
repnz
fildl
int3
fldenv
pushf
inc
inc
outsl
fcmovne
and
xor
cmpsl
adc
in
not
fsubrl
and
cmovae
shrb
inc
mov
jae
stos
inc
out
xor
test
adc
dec
fwait
mov
mov
pop
push
bound
jo
or
pop
and
mov
mov
lods
ja
cmpsl
es
inc
mov
mov
xor
in
mov
mov
sbb
xchg
pop
or
mov
push
push
mov
xor
jae
fwait
xor
push
jecxz
dec
dec
mov
repz
inc
inc
fdivs
inc
arpl
pop
fdivrl
pop
rorb
pushf
inc
cmpsl
push
adc
adc
arpl
loope
loop
sahf
and
push
add
ret
or
lods
clc
push
add
andnps
mov
mov
fs
lds
push
pushf
inc
cwtl
jle
cwtl
inc
insl
inc
rclb
xor
outsb
cmp
mov
stos
sub
sub
and
dec
lret
les
jl
pop
test
adc
sahf
cs
pop
mov
rcrb
cs
icebp
cmp
nop
hlt
movaps
xchg
repz
stc
pop
insl
inc
sub
mov
adc
pop
push
sub
push
cmpsb
cwtl
cmp
jl
cwtl
jg
lahf
fbstp
adc
cltd
inc
adc
mov
adc
inc
adc
pop
inc
sub
insl
rorb
fcom
inc
addl
mov
xchg
je
cmp
pusha
push
rcrl
cmp
jne
repnz
and
mov
dec
xchg
dec
inc
push
clc
xchg
inc
lret
jmp
popa
mov
roll
cmpsl
call
int
jne
hlt
sub
inc
or
cmp
sub
mov
invd
subb
bound
mov
fwait
cmp
sbb
fdiv
pop
and
push
nop
lods
mov
scas
mov
xchg
pop
into
iret
pop
and
js
and
jbe
cmc
fnstsw
adc
and
hlt
mov
lret
and
popa
imul
aas
mov
stos
repnz
aad
mov
std
pop
fwait
outsb
loop
fwait
sub
inc
mov
sahf
adc
aaa
or
mov
jp
daa
xor
inc
aas
cmc
xchg
jo
mov
stc
out
dec
popa
xor
mov
lret
pop
xor
sub
sti
xchg
and
fadds
mov
sahf
js
jns
cs
ss
jg
mov
mov
pusha
call
lods
fbld
push
enter
pop
fildl
mov
add
mov
psllw
push
mov
sub
daa
xchg
dec
setg
inc
add
cmp
xor
insl
sahf
inc
call
jmp
lods
jo
cmp
inc
xor
aaa
arpl
addr16
xor
dec
adc
jp
adc
shlb
fcoms
and
xor
insl
aaa
sub
cmc
xchg
sbb
xchg
push
imull
mov
lret
mov
dec
in
lcall
pop
fists
mov
or
stos
testl
and
into
xchg
scas
xor
lahf
nop
push
lods
sub
or
lds
loope
lret
addb
jbe
loope
push
adc
jnp
enter
push
gs
ja
push
or
and
scas
sub
js
xor
into
push
les
xchg
push
xchg
or
mull
daa
mov
cmp
les
mov
sbb
sbb
cmpsl
dec
rcrb
sbb
test
or
loope
int3
mov
mov
outsb
faddp
repnz
aaa
dec
mov
dec
bound
mov
iret
mov
adc
shl
xchg
fnstcw
jp
sbb
movsb
out
rcl
aad
je
jmp
aas
lock
lret
jo
jo
mov
mov
inc
in
jg
stc
push
stos
loopne
push
unpckhps
filds
fcoml
mov
jle
iret
xlat
sub
xchg
leave
sub
popf
xchg
insl
add
mov
xlat
mov
mov
xchg
jp
xor
dec
mov
adc
loope
mov
lret
aaa
xlat
arpl
cmp
jbe
enter
mov
lahf
int
jo
adc
adc
sub
mov
out
or
or
aaa
mov
clc
cli
xor
sti
sbb
aad
pop
jecxz
cmp
sti
pop
enter
jg
nop
nop
outsb
mov
repnz
inc
dec
mov
out
inc
outsl
fldt
shlb
jp
pop
outsl
pop
sbb
ss
xor
mov
mov
aas
sbb
push
fidivrl
inc
cmp
aas
mov
inc
jl
and
and
xchg
adc
jge
add
xor
les
and
jmp
out
pop
inc
mov
mov
and
in
pop
sarb
hlt
or
scas
lock
subl
out
addr16
cs
push
xor
mov
xor
mov
cmp
ret
inc
jbe
dec
pushf
mov
aam
push
call
mov
push
scas
in
cmc
outsb
add
aam
xchg
push
pop
incl
in
arpl
pop
add
lret
stos
lea
repz
mov
xchg
pop
dec
sbb
bound
hlt
lods
jns
stos
push
inc
inc
pop
or
lods
push
sub
pop
loopne
fbld
mov
fstps
fcmovu
fldcw
mov
sbb
cld
sbb
clc
mov
and
push
xchg
clc
or
lock
aaa
movsb
pop
mov
push
and
mov
pop
adc
leave
push
cmpsl
mov
lret
sbb
cs
jno
imul
decl
cs
and
call
jge
dec
add
sar
imul
mov
push
push
imul
es
je
add
cld
stos
add
dec
sub
jnp
mov
dec
mov
add
fdivrs
pop
sbb
pop
adc
insb
and
adc
sbb
add
nop
adc
ret
sbb
xchg
cld
push
inc
sbb
movsb
add
inc
stos
out
js
ja
outsl
mov
in
enter
sbb
sub
cmpsl
scas
inc
cmc
icebp
test
inc
jle
inc
or
cld
xlat
adc
out
lcall
jnp
test
test
xchg
xlat
insl
scas
adc
outsb
and
repnz
cmp
xchg
sahf
jb
aas
popa
dec
sbb
rclb
xchg
xor
push
inc
pop
mov
movsb
sub
cmp
jnp
xor
mov
inc
adc
test
out
cmc
insb
or
in
dec
cmpsl
in
or
andb
or
cs
int3
jg
negl
sbb
mov
loope
sbb
cmp
mov
cmpsl
xor
or
out
push
cmp
leave
aam
mov
int
fcmovu
dec
test
ja
dec
gs
fistps
enter
movsb
stc
enter
cmc
push
ja
outsb
inc
fidivrl
lods
sbb
ret
sub
cli
bound
cmpsb
jle
sub
sti
aam
in
ror
movl
and
subl
loope
xchg
mov
mov
test
movsb
and
das
sbb
mov
inc
mov
adc
sti
pusha
aad
and
das
stc
sub
arpl
loop
xchg
clc
in
mov
adc
pushf
mov
push
xor
out
pop
cwtl
xor
fbstp
sub
cmp
insl
pusha
cmp
cmpb
roll
addb
or
test
shrl
gs
lret
mov
adcb
mov
mov
pop
inc
mov
aaa
and
add
jno
mov
movsl
out
fcomps
repz
inc
lea
fidivs
std
inc
mov
pop
inc
sti
popf
fsts
pop
bound
data16
pop
sbb
dec
and
mov
or
daa
xor
jmp
leave
inc
pop
inc
std
inc
cwtl
push
je
cmpsb
mov
outsb
lret
dec
inc
sub
pop
sub
push
cmp
ds
jnp
dec
dec
jno
jbe
sahf
xlat
push
fstps
lahf
popa
push
pop
mov
aaa
sahf
adc
scas
scas
cli
sbb
insl
inc
out
andl
sub
sbb
xchg
and
js
push
popa
pop
hlt
fisubl
je
enter
les
enter
jmp
adc
jno
xchg
mov
repnz
mov
or
call
divl
push
jmp
ss
out
sbbl
cli
mov
lcall
fcmovnb
out
std
das
roll
fidivrl
imul
fdivrp
stos
jmp
jb
add
les
js
xor
aaa
add
int
filds
dec
std
xchg
ja
fidivrl
add
daa
jp
shlb
mov
jp
mov
pop
adc
into
mov
jnp
push
cmpsb
mov
ss
mov
rcr
jb
pushf
fisubrl
add
xchg
hlt
stos
lds
mov
icebp
iret
pop
arpl
out
jp
int3
test
xchg
lods
loope
push
js
shr
movsl
clc
mov
or
in
or
jae
mov
dec
dec
inc
cltd
mov
mov
clc
jnp
rclb
mov
or
je
pop
push
insb
shll
push
dec
xchg
jl
cmpsb
lret
sbb
out
dec
xor
sti
sahf
test
and
movsl
jecxz
cmp
sbb
out
repnz
jo
pop
xchg
xor
dec
ja
jmp
pop
fimull
aam
mov
popf
lret
cmp
xor
in
push
sub
lods
push
xchg
add
rcll
loop
inc
pop
jg
pop
dec
jl
mov
int
hlt
jne
mov
sub
lcall
add
insb
sub
sbb
mov
adc
stc
jmp
in
les
sub
xchg
adc
arpl
out
fwait
js
push
inc
pusha
out
cli
xchg
adc
add
jne
ds
imull
sbb
push
jo
ljmp
mov
movsb
out
mov
data16
sahf
cwtl
in
cmc
push
lods
call
mov
dec
mov
jae
mov
xor
and
es
xchg
outsl
dec
out
fwait
int
lods
inc
push
gs
pop
stos
popa
dec
data16
ljmp
add
push
cmp
loope
movsb
xchg
mov
and
movsl
fcomip
je
sbb
stos
fmulp
sub
mov
in
cmp
scas
loopne
fimuls
out
sub
out
xchg
and
adc
andb
fs
mov
mov
je
mov
xor
or
and
jge
out
or
xchg
clc
jb
mov
dec
test
pop
adc
inc
push
outsb
and
and
mov
pop
jp
dec
jge
xchg
push
inc
jg
outsb
outsb
std
sub
sbb
popa
and
or
dec
cmpsl
pop
mov
mov
fdivs
mov
aad
mov
loope
insl
or
xor
pop
clc
xchg
test
mov
mov
mov
out
outsl
add
icebp
ror
mov
decl
mov
and
loop
or
sub
jb
leave
dec
pop
xor
ret
xchg
inc
addb
and
enter
mov
les
add
iret
or
data16
lea
stos
ljmp
xorb
test
mov
lock
add
popa
rcll
xor
inc
les
iret
jo
cltd
adc
fistpl
xchg
and
adc
sub
mov
sub
cmc
in
popf
push
idivl
aad
or
shlb
mov
std
into
mov
mov
ror
shll
or
pushl
dec
call
lret
imul
mull
inc
dec
mov
xlat
inc
aam
cmp
sbb
test
xor
jns
test
mov
mov
dec
xchg
cwtl
or
stc
sub
sub
push
jge
mov
cmpsb
outsw
in
sarl
jmp
fs
sbb
ljmp
rcll
xchg
loop
jle
or
add
mov
fistpl
scas
fs
mov
pop
jb
test
sbb
push
imul
es
ret
jge
jge
js
and
push
test
push
push
in
enter
sbb
mov
sub
sub
mov
mov
mov
push
mov
pop
mov
adc
addr16
pop
lods
mov
mov
jmp
fsubrs
pop
cmp
push
xlat
jb
mov
mov
cmpsl
scas
outsl
subb
cmp
add
push
push
sbb
push
jl
add
shrl
pop
int
jo
or
sahf
lahf
or
pushf
movsb
jno
repz
icebp
jmp
pop
js
adc
xchg
mov
data16
mov
in
jmp
int
xchg
mov
into
shll
xor
lret
add
icebp
sbb
sbbl
mov
aad
xchg
roll
mov
cwtl
addr16
aaa
lahf
ljmp
shlb
adc
cs
pop
aaa
adc
ja
repz
jge
es
in
and
xor
xchg
xor
popf
int
dec
mov
insl
hlt
pop
pushf
in
ret
mov
out
push
mov
fldcw
sub
xlat
xchg
sarb
jmp
cmp
shrl
xchg
ret
cmp
mov
xchg
out
mov
js
neg
out
add
push
adcl
add
push
cmp
lret
movl
cmp
adc
loop
mov
mov
push
cmp
xor
pop
in
cmp
push
sub
mov
aam
jns
sub
lock
mov
ljmp
jne
lods
push
movsb
fs
sub
sub
sub
dec
and
mov
dec
loope
add
sahf
call
adc
in
in
in
in
mov
scas
pop
lds
lret
inc
inc
add
je
pop
dec
movsb
hlt
movsb
jg
sub
sub
mov
dec
push
or
xorb
pop
fsubs
out
mov
adc
mov
sub
xchg
loop
add
sbb
mov
nop
mov
test
xchg
int
mov
add
sbb
pop
out
xchg
pop
sbb
pop
mov
sbbb
sub
jmp
repnz
outsl
stc
cmp
cmp
cmp
ja
outsl
idivb
xor
shlb
push
add
lea
fiadds
xchg
fisubl
inc
sub
inc
test
inc
imul
push
imul
fildl
pop
data16
in
push
xchg
cltd
setp
jne
dec
cltd
sahf
lret
or
sub
pop
mov
notl
and
ficompl
mov
daa
or
and
int3
rorb
shll
sub
inc
nop
xchg
and
adc
xchg
mov
mov
push
pop
gs
pushf
out
pop
fisttpll
sbb
dec
ret
pop
xor
les
adc
stos
xor
in
dec
mov
push
clc
out
div
sub
bound
stos
push
xchg
sub
mov
mov
hlt
mov
out
cmpsb
pusha
or
xchg
sti
push
jg
imul
popa
push
es
lret
ss
into
or
mov
call
lock
insb
jae
sar
retw
sub
jle
mov
xor
sbb
ret
test
lods
mov
add
sbb
loop
sahf
adcb
loop
or
pusha
filds
std
add
std
and
loope
cmp
sahf
jbe
leave
dec
inc
out
sbb
ss
mov
imul
cmovbe
fs
add
insb
sbb
or
push
mov
daa
sahf
push
aad
mov
mov
cmpsb
test
pop
pop
pop
jmp
es
out
cmp
inc
rorl
ret
cltd
mov
aam
and
and
pop
aad
lock
lret
adc
mov
inc
loopne
inc
inc
into
je
cmpsl
pop
xchg
lock
jmp
xchg
daa
and
fldt
inc
dec
sbb
xchg
dec
std
stc
repnz
pop
dec
sbb
ror
or
xchg
sub
push
test
add
stos
add
out
mov
add
jb
mov
cwtl
jecxz
jg
jno
push
mul
inc
jnp
movsb
call
daa
xor
sbb
les
fstpt
xchg
pop
in
pop
andb
sbb
loopne
addb
mov
mov
aaa
or
xchg
jb
mov
xchg
xchg
iret
mov
pop
cmp
outsl
or
adc
loop
sub
dec
sahf
mov
dec
loop
mov
adc
enter
mov
push
xor
inc
pusha
scas
gs
mov
repnz
add
fnsave
cmp
pop
cmp
mov
cs
out
and
xor
fldcw
pop
sbb
cmpsl
jno
jle
ja
and
or
xchg
inc
popl
rcll
icebp
sub
inc
std
dec
test
cmp
push
sub
add
mov
mov
ret
gs
loopne
adc
jb
inc
inc
jmp
cmpsl
jbe
imull
es
icebp
add
dec
push
cmp
jno
jno
cvttps2pi
inc
cmp
mov
mov
dec
loope
fmul
dec
jg
adc
insl
and
iret
imul
scas
pop
push
and
push
lods
bound
enter
sub
cmp
and
xchg
push
test
insb
jb
ja
ds
pop
xchg
nop
div
mov
pop
negl
lahf
out
ljmp
xchg
cmp
aam
push
movhps
loopne
dec
cli
push
sbb
addb
lret
test
jp
sub
sbb
out
adc
adc
lcall
push
pop
fistpl
inc
repnz
clc
dec
pop
push
dec
cmp
xchg
cmp
mov
add
mov
lcall
scas
jecxz
and
push
pop
mov
repz
cmp
xor
dec
cli
cli
out
fimull
sub
lcall
and
sub
shl
into
add
dec
hlt
inc
jg
arpl
sbb
or
or
lret
push
test
cmp
ljmp
dec
cld
add
outsl
pop
shlb
mov
mov
or
shl
fldcw
cmp
inc
stos
scas
into
test
loope
call
int3
es
pop
cmp
je
ljmp
push
jp
add
test
sbb
dec
andb
movb
cmp
pop
inc
call
xor
and
daa
aas
fxam
xor
jne
scas
cltd
pop
cmp
test
aas
test
xchg
cmpb
adc
mov
imul
lret
lods
outsl
mov
mov
pop
sub
lret
cmp
pop
cmc
sahf
pop
cmp
adc
adc
mov
xor
aam
cmp
scas
mov
leave
mov
cmp
out
mov
mov
xchg
adc
repz
daa
jmp
mov
daa
shlb
orb
jp
xchg
push
push
sub
xchg
lea
ss
and
cmp
or
mov
daa
shll
inc
pop
cmp
cmp
fadds
pop
clc
ss
mov
push
push
imulb
inc
mov
sahf
sahf
xor
cmp
repnz
jae
jge
call
dec
sti
out
shrl
les
sbb
xchg
xchg
outsl
outsl
div
and
cmp
out
fstpl
out
xchg
push
aaa
fldt
jbe
bound
out
js
sbb
lret
xchg
fadds
mov
and
jo
je
movsl
xchg
cmp
shrb
ret
addr16
inc
outsl
stc
pop
dec
mov
fdivl
cmpsl
movsb
repnz
enter
mov
cmp
or
sbb
pop
dec
loopne
repnz
pusha
dec
and
movsb
cmp
movsl
jmp
mov
sbb
inc
mov
int
push
js
lods
fdivs
movsb
repnz
xchg
add
pusha
sub
xchg
lds
push
mov
inc
cs
ds
xchg
jns
shrb
mov
sti
push
movsl
dec
arpl
mov
inc
cmpsl
in
adc
fabs
and
out
ljmp
push
negl
sub
rcr
test
push
pop
out
scas
mov
jno
daa
pop
in
or
push
sub
fldcw
popa
in
jg
xchg
dec
pop
xchg
mov
inc
or
xor
inc
movsb
inc
xorb
mov
adc
add
xor
inc
call
adc
dec
dec
dec
mov
mov
adc
je
aam
pushf
dec
pusha
rorb
dec
dec
sbb
frstor
fsubs
or
jecxz
push
inc
push
sbb
je
sbb
dec
push
jo
movsl
icebp
mov
out
les
cs
mov
xchg
or
pop
and
adc
lods
cmp
sub
cmc
mov
loopne
push
lds
xchg
sarb
repnz
ja
lods
add
add
xor
xchg
xchg
mov
ljmp
js
rol
inc
push
pushf
ljmp
xchg
dec
or
sbb
fisttps
xlat
enter
adc
cmp
cmpsl
or
add
sub
jb
lock
jmp
aaa
xor
aaa
push
mov
movsb
testb
sti
loop
leave
cli
cli
jmp
rorl
mov
sbb
lret
jp
dec
mov
loopne
xor
xchg
in
loop
sahf
sub
rcrb
scas
xorb
mov
push
lea
call
push
cmp
sbb
jb
clc
out
movsl
adc
les
xchg
sbb
push
add
cmp
notl
mov
jae
mov
sbb
xorb
xor
add
jp
lahf
sbb
add
int3
add
sti
lods
pop
lret
push
pop
int3
sbb
dec
repnz
mov
popa
mov
addl
xchg
or
adc
mov
push
xlat
dec
dec
xchg
push
cld
lods
lds
ret
mov
movb
imul
dec
push
push
adc
fwait
loopne
xorl
cmp
ja
inc
cmp
in
add
mov
cmp
jae
pushf
add
subb
aas
or
loopne
xchg
and
outsb
cmp
jmp
push
pop
xchg
lods
movl
cli
jge
inc
pop
mov
out
cli
sbbl
sbb
lret
pop
cmp
test
inc
dec
mov
or
fsubrp
xor
iret
or
lods
xchg
push
imul
mov
or
nop
clc
cmp
fildl
in
rorl
aad
data16
repnz
aas
pop
ret
outsb
mov
sub
sbb
sub
sarb
into
dec
imul
lea
adc
lcall
flds
sub
add
mov
push
mov
fsubl
mov
je
and
sti
mov
daa
ss
jne
fnsave
test
inc
int3
add
fnsave
testl
std
cmp
dec
xlat
and
popa
daa
ja
cmpsl
int3
ljmp
sti
in
icebp
test
das
stos
insl
and
aas
cmpsb
mov
and
push
cli
nop
sub
and
cmpsb
jge
dec
pop
in
push
adc
insl
xor
xchg
or
inc
sahf
shll
jbe
xchg
mov
in
push
sbb
mov
int3
mov
mov
leave
sbb
movsb
mov
hlt
and
pusha
cmpsl
push
add
and
mov
std
addb
push
inc
xchg
add
or
push
adc
dec
sarl
xor
outsb
lret
fwait
sub
add
inc
cld
inc
std
shlb
sbb
nop
xchg
xchg
inc
mov
mov
inc
add
scas
add
adcb
pop
test
sub
shll
inc
leave
in
ret
add
in
jle
mov
in
je
fs
inc
pop
pop
and
test
outsl
dec
add
jg
or
cmpsl
hlt
and
and
cmp
and
insb
adc
aad
lods
aas
ds
sbb
xchg
fcmovu
data16
cmc
cmpsl
xlat
jecxz
mov
in
test
xchg
sbb
jmp
pushf
rdmsr
push
ror
cmp
adcb
add
pop
and
outsl
cmpsl
cli
gs
data16
xor
loop
cs
cmp
cmp
cmpsb
mov
je
xchg
add
push
inc
cmp
outsl
mov
fcoms
sbb
sti
sub
pop
cmp
jnp
sbbb
pop
mov
cwtl
adc
loopne
movsl
pop
ret
cli
sbb
stos
insl
outsb
test
xor
jb
adc
cmp
jnp
inc
ja
mov
pop
fidivrl
mov
sbb
cwtl
and
jge
mov
mov
mov
adcb
cmp
repz
push
jbe
xlat
push
jge
lcall
mov
fdiv
into
pop
mov
outsl
sbb
inc
or
daa
and
repnz
and
lahf
sbb
add
shll
sbb
pop
icebp
jbe
xchg
sti
or
push
adc
imul
jmp
arpl
jecxz
xor
mov
loop
mov
xchg
jp
inc
pop
mov
xchg
lea
adc
imul
dec
fbld
sbb
lahf
xor
fcoms
mov
daa
jl
add
iret
xor
cmp
insl
fs
mov
jl
fmuls
mov
fimull
rclb
inc
lret
lea
cli
cmp
sbb
int
pop
popa
mov
fwait
test
inc
cmp
jmp
jno
in
loope
xchg
pop
add
ret
loope
insl
insb
cmpsb
push
dec
mov
adc
mov
movsl
inc
mov
sub
shlb
inc
sub
mov
xchg
inc
repz
pop
lcall
dec
sub
lods
xchg
xor
ljmp
cmpb
sub
xchg
icebp
pop
jmp
push
jmp
or
dec
shrl
inc
psubsw
xchg
in
imul
jg
ds
movsl
cs
lods
sub
xchg
loopne
bound
ljmp
popf
adc
dec
mov
pop
pop
mov
rcrl
inc
lret
mov
enter
ja
stos
cmpsl
xchg
xchg
cmp
push
sbb
cli
es
xlat
mov
out
enter
bound
aas
cmp
scas
sbb
jbe
pop
mov
inc
xchg
mul
push
sub
fxch
mov
cmpsl
mov
mov
nop
fisubrs
adc
xchg
cmp
push
clc
jae
std
stos
jno
adcb
movsb
lock
add
aas
jmp
mov
scas
sub
sub
outsl
mov
dec
push
xchg
inc
adc
js
mov
int
pop
fimuls
ret
cmp
nop
push
dec
mov
mov
push
mov
sub
movsb
pop
loopne
mov
mov
mov
mov
sti
cld
out
dec
dec
sbb
cmpsb
add
imull
cmp
mov
sub
pop
sbb
repnz
into
xlat
mov
dec
adc
das
mov
adc
adc
xchg
push
sub
in
mov
xor
out
arpl
imul
and
mov
addr16
add
aas
enter
pop
lret
out
inc
cmp
mov
inc
jmp
cwtl
cmp
movb
cmpsl
outsl
lcall
xchg
mov
in
aas
or
add
int3
push
scas
nop
push
or
inc
cmp
or
sbb
sbb
adc
xor
xor
mov
loopne
lock
pop
mov
call
jns
pop
mov
clc
jmp
mov
frstor
in
sub
loope
in
xor
shlb
dec
or
xor
or
xchg
cmpsl
add
out
sbb
pop
lods
pop
add
sbb
mov
imul
int3
cli
adc
test
pop
sbb
jg
out
sti
lods
sub
jb
lret
jo
icebp
push
and
imul
dec
testb
fildl
stos
in
jle
rol
xor
cs
cmpsl
jecxz,pn
fldcw
loopne
movsb
pop
testl
jge
sub
inc
into
hlt
cmp
test
and
sub
loope
mov
maskmovq
negl
fwait
xchg
push
push
mov
xorl
mov
test
push
inc
sbb
adcb
pusha
fisttps
je
cmpsb
mov
fwait
cmp
lret
scas
jb
jbe
xor
into
and
mov
clc
sbbl
in
imul
lds
sti
xchg
push
pop
test
adc
pop
imul
add
adcl
xor
lock
lea
mov
loopne
pop
daa
push
aas
push
cld
ret
push
pop
test
ljmp
inc
int
mov
pushf
push
xor
dec
inc
ret
sub
xchg
push
fstl
lods
mov
shrb
push
bound
scas
das
pop
dec
mov
js
push
icebp
imul
call
aad
cmp
mov
xchg
inc
lods
test
cld
xchg
cmp
mov
lock
sbbl
jle
dec
and
loopne
and
ljmp
into
xlat
dec
push
pop
ret
enter
mov
fdivl
mov
jl
repz
fidivrs
sub
inc
inc
out
lcall
ret
je
mov
push
loopne
aad
orl
fisubs
or
cmp
mov
pop
jns
jne
cmp
add
mov
stc
xchg
pop
fcmovnbe
iret
jns
mov
test
push
stos
leave
aam
xor
sbb
cmp
dec
fs
mov
pop
sub
xchg
sub
inc
mov
jne
sub
adc
dec
js
movsb
dec
mov
mov
test
pop
cmc
push
data16
daa
xchg
nop
add
pop
dec
ss
rclb
pusha
stos
leave
pop
loope
mov
out
in
inc
jp
inc
push
jmp
mov
int
popf
enter
scas
inc
mov
sti
xor
adc
ds
nop
xlat
jae
xchg
pop
lea
push
repz
test
push
fistps
sbbl
push
xchg
mov
jbe
cwtl
shll
dec
push
mov
xor
cmp
jno
shll
add
lret
inc
jle
xchg
icebp
mov
enter
repz
rclb
cmpsb
ljmp
mov
fistpll
divl
jg
out
pop
xchg
out
shrl
rorb
jno
les
mov
xor
in
ja
xchg
ljmp
rcrb
or
fneni(8087
mov
ja
rol
scas
fistpl
lds
mov
jnp
ret
fistpl
leave
add
test
xor
cmpb
add
dec
xchg
xor
lds
jge
sahf
arpl
notb
ljmp
lds
mov
pop
jns
dec
lds
dec
xchg
int
xchg
or
add
xor
inc
push
loope
cltd
xchg
lret
jecxz
dec
inc
pop
dec
xchg
fs
nop
clc
add
push
scas
push
jbe
inc
inc
cld
xor
dec
pop
bound
fmuls
sbb
pop
lea
adc
pop
test
jno
arpl
insw
jmp
addr16
mov
sbb
dec
add
xor
mov
and
adc
loopne
pop
movsl
pop
mov
ret
push
test
pushf
rcll
test
push
ret
jno
add
lods
xchg
aam
lret
cmp
xor
jmp
in
sub
xchg
and
inc
mov
daa
lods
push
test
fs
push
les
mov
les
cmp
pop
sbb
leave
sub
fwait
xchg
adc
lret
jb
dec
jge
lret
shl
stc
or
mov
add
push
adc
xchg
cmc
or
sub
aas
addr16
icebp
mov
xlat
pop
mov
sbb
add
ds
iret
push
fisubl
enter
sbb
xor
into
stos
mov
pop
mov
nop
icebp
lret
sub
mov
shrl
xchg
sub
cmp
sbb
mov
add
ja
jae
inc
cmc
pop
adc
and
and
mov
and
xor
xchg
nop
in
push
in
adc
and
repz
push
sub
add
sbb
xchg
push
xor
iret
scas
fwait
pop
jmp
pop
add
cmpsl
out
inc
mov
sub
and
fsubp
loop
push
popa
or
jae
test
stos
pop
sahf
xchg
test
insl
sti
sbb
jae
outsb
rcrb
adc
mov
pop
xchg
jle
sahf
decl
jp
mov
pop
lret
push
sbb
dec
cltd
arpl
mov
or
push
adc
ljmp
cmp
xchg
popf
stos
outsl
mov
cmp
dec
cmp
cltd
sub
push
hlt
sbb
jg
call
inc
aam
push
xorb
into
jno
pop
and
out
xor
aas
rorb
xchg
mov
push
cmp
mov
cltd
push
insb
adc
lods
mov
and
addr16
shll
daa
negb
jecxz
stos
outsb
movsl
cmp
sti
out
mov
inc
fiadds
loope
dec
pop
xchg
xor
clc
data16
in
push
ja
std
outsl
mov
sub
inc
jnp
xor
fisubl
fdivrs
mov
sbb
gs
mov
outsb
add
popa
fldenv
sbb
pushf
or
dec
dec
outsl
dec
lds
fsubl
add
adc
sub
loope
inc
push
inc
xor
cmp
leave
clc
push
pop
das
out
push
push
add
hlt
outsb
adc
dec
aaa
and
push
aad
xor
push
jbe
pop
inc
mov
push
sbb
add
scas
jp
outsl
mov
and
cmpsl
rcll
fldcw
ja,pt
sub
inc
dec
inc
arpl
sbbl
std
lret
data16
insl
ss
jne
fcom
push
xchg
arpl
mov
stc
inc
int3
jne
xchg
jo
in
sbb
fists
push
lea
out
hlt
mov
xchg
arpl
insb
jae
lahf
imul
shll
and
imul
aas
sub
addb
xchg
jle
out
xchg
in
dec
sahf
push
sub
rcrl
sti
imul
aaa
icebp
repnz
mov
inc
in
dec
inc
mov
int3
iret
add
mov
pop
test
push
inc
fwait
cmpsb
pop
push
repz
dec
xor
mov
or
pop
and
outsl
out
mov
and
cli
je
xchg
aaa
or
hlt
dec
hlt
pop
stos
sub
lods
maskmovq
idivl
movsl
test
in
push
xchg
daa
sbb
orl
push
add
into
or
pop
fcoml
mov
movsl
push
inc
and
into
outsl
je
mov
fnstenv
test
fdivrs
test
lock
xchg
das
mov
cld
xor
lds
rcl
scas
pop
loopne
in
mov
lahf
mov
icebp
mov
xor
jge
add
aaa
cmp
mov
shll
jne
inc
popf
in
xor
push
xchg
push
cmp
stc
fidivrl
loope
inc
fsubrl
xor
mov
jge
cs
into
stc
faddp
test
in
cli
lcall
arpl
je
sub
and
mov
inc
mov
push
mov
ror
xchg
or
ret
inc
test
jecxz
ret
imul
mov
sub
dec
pop
inc
pop
pop
sbb
cmp
fisttpll
lcall
cld
or
inc
push
ds
stc
push
adc
cli
jge
adc
es
or
add
mov
out
imulb
loope
or
add
jl
inc
pop
rclb
test
jnp
or
sub
or
xor
popa
pusha
in
inc
jl
cmp
cmc
and
insb
and
icebp
div
sbb
pop
xchg
adc
and
push
movsl
shr
sahf
nop
xlat
out
in
jp
and
lret
out
adc
enter
pushf
pop
clc
loop
pop
pop
addr16
lock
mov
dec
adc
insb
iretw
xchg
andl
je
sub
ret
into
insb
scas
mov
cmp
add
ret
dec
pusha
stc
lret
stos
adc
mov
sbb
mov
jge
adc
gs
and
jecxz
push
daa
and
sbb
dec
xchg
adc
xchg
dec
sbb
fidivl
clc
shr
cmp
insb
das
clc
mov
push
pop
and
inc
das
push
push
jo
dec
int3
mov
mov
jmp
es
int3
mov
out
out
popf
mov
xchg
out
xchg
stc
imul
sub
mov
gs
sarb
jmp
jp
sarb
in
rol
adc
add
sbb
stos
sub
sbb
imul
addl
and
xchg
sbb
mov
js
xor
inc
cmp
scas
in
pop
into
insb
mov
mov
inc
dec
mov
cld
ja
mov
out
inc
cmp
test
mov
or
aas
mov
inc
mov
out
xchg
mov
je
aas
or
shll
and
cmpsl
push
roll
mov
jae
mov
push
into
insl
repz
xor
sbb
lcall
xchg
testb
sub
jbe
outsb
ja
filds
out
sbb
fsubrl
dec
jl
push
std
lock
push
xchg
cld
pop
sub
pop
and
jmp
xchg
int3
mov
cli
jno
shr
hlt
stc
push
int
nop
repz
and
push
pop
mov
test
insb
or
add
fstps
icebp
sub
push
dec
inc
into
pop
aaa
sbb
lret
xchg
scas
mov
xchg
repz
jl
sbb
mov
push
pop
push
cmp
out
jno
mov
and
ljmp
pop
cmpsb
repnz
cwtl
xchg
sub
cmpsl
andl
arpl
cmp
mov
cmpb
fisttps
sahf
std
cmc
lcall
xchg
mov
orl
outsl
insl
or
int3
xor
inc
adcb
insw
and
gs
mov
inc
add
xlat
adc
in
mov
aad
and
sbb
jb
mov
decb
mov
cmp
repz
in
push
pop
push
or
in
flds
jne
test
inc
mov
pop
orb
insb
mov
adc
stos
mov
pop
addr16
nop
ds
leave
outsb
mov
cmp
cmp
testb
aad
adc
fucomp
insl
cmp
mov
ret
inc
push
fdivl
pop
inc
arpl
sub
add
lea
fistpll
fwait
insl
sahf
movsl
pop
outsb
pop
cmp
inc
sbbl
lcall
or
js
dec
pavgb
std
shr
add
cld
mov
pop
or
cli
xchg
xlat
xchg
call
and
or
add
pop
fsubrs
mov
addr16
push
hlt
push
push
cmp
lret
loop
jno
cmc
mov
pop
sub
dec
repnz
xor
sub
lret
iret
pop
into
push
pop
pop
and
xchg
fidivrs
loopne
xchg
aam
xor
mov
push
inc
jnp
movsl
imul
loope
sti
adc
and
lret
data16
push
sbb
aaa
pop
cmp
lds
jl
std
loop
stc
lcall
sahf
xor
push
test
and
push
imul
sbb
jne
push
xorl
orb
scas
xchg
cmp
mov
xchg
fs
push
scas
subl
fldenv
cmp
adcb
mov
ds
dec
or
pop
test
and
sarl
repnz
add
xor
pop
stos
rclb
inc
out
push
mov
dec
push
outsl
pop
nop
xor
sub
push
add
outsl
mov
pushf
cmp
mov
mov
add
xor
sbb
sarb
push
test
lods
out
pop
test
fldlg2
push
and
std
mov
repnz
mov
or
xchg
cs
insl
sub
cmpsl
shll
and
jb
cmp
jbe
dec
pop
sub
dec
add
sbb
mov
test
push
add
popf
dec
push
mov
add
je,pn
and
or
iret
cmc
hlt
cmp
push
adc
mov
loopne
mov
adc
in
jbe
ret
cmpb
fildl
mov
enter
adc
out
icebp
loopne
dec
loope
cmpsb
data16
scas
cmp
pop
mov
cmp
lret
xchg
dec
dec
inc
cmp
jecxz
or
cmp
daa
orl
fs
dec
adc
add
divl
xchg
rorl
add
add
fistl
cmp
mov
and
pop
enter
lret
ja
jl
sub
mov
lds
cmpsb
sahf
dec
mov
xchg
out
movl
test
pop
cmp
dec
adcl
nop
push
repnz
adc
lcall
sub
popf
jnp
and
cmp
movsl
lds
movsb
mov
sbbb
imul
or
push
inc
pop
pop
fcoms
jmp
loope
xchg
add
leave
idivb
mov
dec
sbb
ret
or
data16
mov
xor
xor
test
dec
std
faddl
cmp
int
xlat
arpl
inc
lea
sbb
xlat
inc
adcl
dec
movsb
mov
ja
sti
pop
movsb
int
dec
lods
pop
mov
movsl
fprem
roll
xor
hlt
sti
xor
xchg
dec
mov
call
filds
lods
int
and
push
in
out
fsub
mov
inc
add
imull
mov
inc
imul
fldt
pop
mov
ljmp
arpl
inc
test
cmpsl
pop
sub
enter
mov
add
das
jae
addr16
iret
xchg
or
mov
test
icebp
mov
push
inc
std
loopne
xor
cmp
adc
xor
cltd
fstpl
xlat
iret
sub
or
pop
jecxz
or
sahf
repnz
sub
mov
popf
jnp
movsl
push
sub
dec
fistpll
adc
test
jae
loope
mov
mov
loope
int3
sub
jg
push
les
inc
pushf
push
es
shlb
ljmp
nop
enter
jb
scas
das
rol
push
jnp
icebp
jae
push
push
sbb
popa
aad
and
cmp
mov
push
push
cwtl
jnp
lea
dec
cld
fldenv
push
shll
test
lods
sub
movsl
sub
and
mov
sub
push
test
or
xchg
cmp
mov
lret
push
pop
sub
cmpsb
ljmp
and
adcb
leave
jo
add
int3
sbb
shrl
push
xor
mov
dec
pop
aaa
inc
jb
xchg
nop
icebp
dec
int
stos
daa
das
pop
out
leave
pop
adc
gs
aam
fisttpl
loop
and
test
jae
adcl
cmp
or
ret
xor
fisubl
out
pop
jg
mov
fildl
arpl
imul
sbb
inc
adc
mov
or
ret
push
inc
or
push
mov
mov
xchg
imul
notb
out
mov
mov
pop
test
sbb
std
lahf
stc
cmp
ja
js
cltd
jp
mov
stc
push
shlb
icebp
rorl
popa
lods
pop
xlat
mov
insb
and
sub
into
cmp
jle
dec
inc
out
dec
or
mov
cmp
mov
pusha
dec
fmulp
cwtl
xor
aam
aad
or
adcl
sbb
dec
sbb
loop
add
lock
insb
push
inc
lods
jo
inc
xchg
cli
ss
inc
mov
dec
xchg
inc
nop
ret
lea
fiaddl
mov
xchg
lcall
push
loope
gs
shll
xchg
push
data16
and
cs
gs
mov
add
mov
cmp
push
aaa
repnz
sbb
into
mov
ss
stc
jnp
push
sub
cmpsl
mov
push
or
xlat
jnp
into
daa
pushf
inc
xchg
xor
ret
fwait
xor
in
adc
std
imul
pop
push
mov
jae
idiv
out
das
jge
gs
push
int3
in
out
ja
fwait
scas
bound
pop
gs
test
jp
mov
mov
dec
sbb
mov
mov
or
out
das
pop
jb
insb
or
adc
adc
cmp
mov
data16
ficoml
stos
inc
popa
adcb
mov
inc
push
aad
lods
sbbl
cmp
cmc
out
adc
cwtl
jne
mov
mov
das
pop
xchg
cmpl
mov
lock
imul
fisttps
jae
stc
ret
mov
sub
jno
add
scas
fidivrs
pop
ds
mov
xchg
dec
inc
inc
cmp
xchg
hlt
jmp
lretw
loopne
mov
sbb
test
xor
push
out
imul
push
sti
jmp
push
cmc
mov
cmc
dec
cli
rcr
jle
and
mov
addl
sbb
jne
lods
mov
ljmp
jo
jnp
cmpb
jnp
shlb
popf
or
mov
loopne
mov
mov
in
dec
hlt
cmc
inc
or
dec
push
jne
nop
test
mov
mov
cmp
mov
add
xchg
js
sbb
jb
xchg
fwait
mov
sbbl
add
xor
pop
mov
sbb
or
out
jmp
push
sbb
scas
fsubl
mov
lds
movsl
les
aas
mov
mov
pop
addr16
sahf
aam
xchg
aam
jge
add
popf
push
out
enter
pop
jae
pop
mov
stc
jp
push
js
and
mov
sbb
jnp
push
push
mov
movsl
mov
mov
in
dec
or
and
lret
sti
mov
cltd
add
imul
sti
and
sbbl
fadd
inc
or
fwait
bound
addr16
mov
ror
mov
inc
xorb
fistpl
testb
dec
inc
push
push
xor
je
cmovae
dec
pop
push
ljmp
pop
jmp
jl
jb
std
test
mov
mov
adc
adc
test
loopne
inc
movsl
lahf
xor
xchg
repnz
leave
pop
jle
nop
push
imul
xor
repz
arpl
sub
inc
fwait
push
addr16
dec
push
lret
xchg
loop
insl
pop
mov
pop
popa
fwait
push
cs
sbb
mov
add
je
sub
in
jecxz
adc
sbb
out
lret
cmpl
andl
pop
dec
lcall
sbb
popfw
and
lea
cltd
or
std
aad
push
lds
xorl
std
mov
sbb
outsl
je
cs
je
in
sub
rcrl
clc
lds
outsl
mov
xlat
pop
add
daa
arpl
push
daa
cs
push
lea
lea
xor
or
sub
mov
fnstsw
xchg
xor
loope
je
sub
repnz
mov
cli
rcrl
inc
cs
xchg
xor
mov
jns
std
adc
hlt
jae
popf
rcrl
sbbb
hlt
sbb
lret
fldenv
mov
es
pop
jp
jb
sar
adc
lds
shl
cmp
sahf
sbb
add
xchg
mov
add
add
dec
pop
stos
lret
jp
mov
test
dec
js
neg
mov
xchg
lea
inc
pop
arpl
int
fcompl
push
mov
xor
daa
cld
cmp
pop
adc
mov
or
fiaddl
inc
fnstsw
rcl
sbb
shll
test
loop
test
xchg
cltd
mov
sahf
movsb
out
add
add
pop
push
or
cmp
or
sbb
sbb
mov
push
jp
xchg
cltd
subl
cmpsb
cmp
cmpsl
lock
sar
push
cmpsb
sbb
in
jbe
stos
xor
inc
xchg
shlb
mov
scas
mov
cmp
cltd
push
stc
icebp
cmp
jp
pop
xor
pop
shrb
sahf
gs
repnz
pop
mov
popa
ds
mov
xor
pop
jns
mov
leave
call
lret
enter
pop
xor
cmp
mov
insb
inc
mov
jo
cltd
dec
data16
std
inc
dec
std
clc
test
fildll
adc
xchg
pop
es
repnz
push
mov
sbb
sbb
in
icebp
push
mov
iret
outsb
add
cld
inc
paddq
push
rorl
gs
out
mov
scas
fwait
jg
outsl
dec
sbb
jmp
xchg
divl
rcrb
subb
xlat
jnp
mov
lret
push
xchg
js
mov
outsb
test
lahf
std
pop
push
adc
push
int
div
clc
cmp
dec
in
dec
mov
push
cld
ljmp
loopne
push
sub
cmp
cmp
hlt
mov
das
cwtl
imulb
sub
sti
test
jo
lods
dec
cmpsl
dec
movsb
scas
aas
ret
imul
in
loopne
jp
adc
movsb
push
push
jecxz
add
lret
push
shlb
stos
or
es
jg
add
sti
push
sahf
call
sti
cmc
mov
push
aam
xlat
jmp
ret
test
sub
ljmp
inc
adc
jne
jbe
ja
out
xchg
cmp
in
push
push
dec
xchg
pop
jmp
and
test
cmp
xchg
or
mov
mull
arpl
je
pop
sbb
dec
xor
add
aam
fdivr
js
stos
fcmove
or
pop
cmpsb
jmp
sarb
lock
shlb
push
dec
mov
xchg
inc
stos
cld
jo
push
test
push
and
or
push
test
outsl
and
daa
popa
imul
xchg
sub
leave
dec
das
adc
mov
scas
fiaddl
sti
push
xchg
nop
js
sbb
inc
pop
mov
leave
adc
pushf
sahf
cmp
in
push
enter
lea
subb
iret
fidivrs
imul
and
fisubl
mov
inc
sbbb
imul
and
or
adc
test
mov
hlt
inc
push
loop
cmp
dec
ds
jge
lock
sub
xchg
movsl
popa
xor
iret
add
cmp
mov
inc
aaa
mov
aaa
fs
and
mov
insb
cmp
adc
movsb
jb
insl
dec
and
pop
ret
sub
ljmp
iret
xchg
mov
jo
cmp
push
mov
fstps
push
popa
and
jo
xchg
add
mov
in
int3
lcall
cmp
xorl
inc
mov
test
and
scas
dec
xchg
xchg
pop
addb
pusha
jp
in
add
mov
mov
sub
int
push
lods
add
adcl
and
push
dec
jns
ds
insl
insl
xchg
and
push
jle
nop
and
sbb
clc
ljmp
popa
and
in
pop
cmp
das
shll
xor
xorl
shl
inc
insl
cmp
ret
mov
inc
xchg
cmc
xchg
cmp
ffree
int
adc
sub
xor
mov
js
adc
stos
adc
mov
nop
mov
mov
and
mov
adc
movsl
aad
lods
and
adc
pop
add
mov
mov
cmpsb
or
js
hlt
sbb
lret
das
in
pop
es
and
mov
inc
ds
pop
cltd
mov
in
inc
movsb
push
mov
push
jg
cmc
loopne
movsb
in
sarl
mov
xor
xlat
ljmp
js
jnp
mov
out
mov
daa
insl
push
cld
aaa
push
xor
or
sub
rcl
mov
push
aaa
outsl
leave
jo
cs
or
sahf
subb
daa
lahf
push
fwait
or
decl
and
jno
mov
push
push
incb
cmp
dec
in
pop
jle
or
cmp
lret
sbb
jg
scas
mov
outsl
or
jle
mov
adcl
insb
mov
cmp
clc
movsb
test
lock
stos
stos
in
js
adc
add
arpl
mov
icebp
insl
sub
sub
shr
dec
lea
aaa
leave
dec
test
mov
xchg
inc
push
add
fildl
adc
mov
pop
pop
outsl
ja
call
and
aaa
mov
test
call
ljmp
and
addl
cmp
pop
push
pop
cmp
loop
sbb
mov
cmp
rorb
fs
sbb
inc
xchg
mov
sbb
jno
xchg
xor
bound
mov
inc
xor
or
cwtl
lahf
and
dec
pop
pushf
inc
and
psubw
mov
das
push
subb
mov
mul
pushf
shr
push
or
mov
fcom
es
inc
call
in
fbstp
cltd
daa
gs
movsl
mov
xchg
mov
ja
jae
testb
pop
inc
jbe
sti
repz
sarl
xchg
xor
mov
movsl
test
push
cmp
filds
fldl
outsb
cltd
inc
sbbl
xchg
ss
mov
push
cltd
mov
mov
mov
jbe
add
popa
jo
lods
inc
jle
icebp
lds
loopne
jecxz
mov
clc
adc
sbb
rcl
xchg
subl
lret
cld
xchg
imul
testl
test
push
mov
in
jmp
pop
dec
mov
aad
in
jmp
xor
cmp
pop
jno
jns
ja
pop
insl
es
repz
add
pop
mov
xchg
xchg
test
dec
sbb
and
mull
rcrb
fcmovb
xor
xor
cmp
lret
ja
lahf
mov
shrl
fdivs
mov
mov
scas
mov
iret
cmp
mov
pop
xor
loop
rcr
inc
stos
cltd
insl
mov
add
ret
mov
hlt
shr
dec
insl
cmp
test
mov
add
out
mov
cwtl
and
jno
mov
aad
sub
sbb
mov
movsl
add
sbb
notb
xlat
scas
dec
dec
into
cs
cmp
mov
fs
sub
fimull
aaa
outsb
dec
jns
jmp
lahf
pop
jecxz
cmp
hlt
xor
out
mov
aas
push
scas
add
sbb
sahf
in
xchg
daa
nop
sbb
fmull
xor
addr16
cmp
sahf
cmp
xor
ja
ljmp
aad
add
add
lods
hlt
cmp
pop
adc
stos
xchg
shlb
notl
cltd
addr16
in
xor
cmp
mov
push
sub
clc
lahf
test
sub
pop
xchg
fnstcw
test
xlat
push
lea
jl
mov
and
stos
hlt
push
mov
inc
das
pop
leave
xor
jae
inc
loopne
mov
jecxz
push
lea
and
adc
push
pop
jge
mov
or
xchg
pop
mov
fst
adc
cld
inc
andl
out
sbb
push
mov
movsbl
repnz
aas
in
test
cwtl
ret
icebp
dec
pextrw
int
shll
pushf
mov
adc
stc
sbb
fnstsw
sbbb
out
push
insb
imul
jns
jle
cmpsl
pop
or
enter
or
rorb
aaa
sub
cmpsl
mov
mov
lret
adc
cmp
xchg
xchg
xor
imul
je
ljmp
cli
or
je
pop
mov
xchg
aad
jle
insl
ret
pop
cmpsl
int3
outsb
mov
or
bound
pop
mov
mov
pop
sbb
repnz
adc
jno
ds
ficomps
sbb
pop
lock
cmp
inc
shrb
scas
imulb
lods
and
es
cli
fwait
dec
adc
or
and
scas
push
push
jno
mov
in
orb
es
int
push
test
fidivl
push
popf
mov
or
or
jmp
mov
fidivs
inc
jle
add
int3
sub
ljmp
inc
jmp
std
inc
jno
dec
rol
enter
mov
jae
and
pop
lods
cltd
mov
sbb
sub
cmc
jb
xchg
inc
leave
daa
cld
js
mov
mov
out
jo
mov
jl
cmp
lret
movsb
cltd
sbb
shll
pop
ljmp
mov
mov
mov
xor
insb
sbb
shl
push
cmp
cmp
jnp
mov
lods
jg
mov
mov
push
test
jmp
lods
jns
inc
fdivs
shr
sub
mov
dec
movsl
repz
mov
data16
inc
inc
add
dec
int
adc
out
fnstcw
cld
lret
idivb
mov
test
inc
outsl
or
pop
inc
lea
sbb
mov
cld
add
loope
mov
lods
aaa
cmp
xchg
scas
sarl
flds
xchg
fiaddl
repnz
inc
jbe
sub
pop
pop
mov
sti
mov
mov
sub
dec
lret
cmp
lock
lret
sti
jg
fisubrs
ret
ljmp
movsb
loop
scas
movsl
mov
bound
inc
xor
cmpsb
ss
filds
lret
inc
imulb
aad
hlt
jnp
js
mov
inc
sbb
mulb
jecxz
mov
jecxz
xlat
xor
lret
and
in
inc
subb
fwait
mulb
cltd
das
inc
sub
ret
aad
adc
in
xor
movsb
jle
movsl
jbe
aaa
jge
test
fdivr
xor
fsts
cli
repnz
mov
sahf
cmp
jb
and
hlt
inc
sub
mov
stc
jae
sbb
out
pop
shll
mov
cmp
fstpl
dec
aad
ljmp
fnsave
inc
xor
inc
packuswb
imul
outsb
int3
cmp
std
in
addl
cmp
scas
fildl
movsl
jmp
lock
inc
hlt
mov
ja
pusha
sub
iret
inc
ret
sub
out
daa
loope
push
sti
outsl
xor
mov
mov
dec
add
insb
sarl
xchg
aaa
aas
xchg
add
cmp
fs
xor
push
cs
push
sub
pop
rcll
jne
mov
pusha
or
and
sub
adc
jns
push
sub
mov
xlat
iret
mov
adc
loope
or
sar
or
mov
shl
out
sub
daa
xor
ljmp
and
sti
push
mov
mov
pop
jno
inc
sub
cs
or
fisttps
cltd
aas
sbb
adc
dec
mov
ja
cld
stc
in
cmpsb
imul
mov
cmpsb
les
mov
fsubs
insl
xchg
and
lcall
lock
mov
sar
push
inc
enter
cmpb
les
sub
xchg
pop
pop
stos
xchg
mov
pop
add
repz
mov
add
jbe
cmpsl
pusha
hlt
and
mov
mov
mov
mov
sub
inc
div
add
movsb
cmp
rcrl
shrb
outsl
fstpl
and
mov
sbb
testb
inc
insb
test
popf
subl
in
push
add
lods
ss
dec
sarb
sahf
xchg
sub
inc
mov
fisttps
sbb
xchg
push
mov
in
pusha
adc
cld
or
mov
js
push
insl
into
out
stos
loope
mov
adc
shlb
dec
push
test
sbb
sub
in
test
dec
sbb
adc
int
or
jbe
and
test
fmull
js
xchg
cli
xchg
in
sbb
adc
mov
pop
out
cli
incl
movsl
jne
mov
call
aas
mov
dec
ret
test
push
mov
xchg
pop
mov
cmpsb
jne
nop
inc
push
dec
repnz
inc
inc
inc
add
adc
ror
aad
subl
lea
mov
xor
sbb
sbb
mov
mov
push
inc
rcrl
xchg
inc
mov
xor
cmp
or
cwtl
adc
xchg
push
lret
jmp
adc
arpl
mov
cmp
dec
sbb
xchg
mov
fnsave
dec
idivl
mov
repz
add
insl
into
cmp
cmp
pop
mov
push
xor
aas
je
call
jbe
xlat
add
insl
aam
ret
xor
inc
shlb
sub
fcompl
inc
inc
mov
xor
imul
ja
cmc
and
addr16
cmc
sub
mov
mov
lock
pop
or
sub
mov
shll
or
jmp
jg
push
clc
sub
in
xchg
mov
ja
dec
stos
mov
add
fbstp
xor
lock
test
and
std
stos
inc
out
aaa
xchg
adc
out
pop
xchg
and
dec
pop
sbb
insl
jno
mov
sahf
xchg
push
cmc
jb
push
ret
scas
mov
insl
mov
or
mov
pop
rcl
movsb
mov
and
test
inc
push
xor
repz
hlt
pop
adc
stc
mov
xor
fidivs
sbb
inc
mov
xchg
mov
add
inc
ljmp
imul
inc
sub
push
iret
inc
jle
out
aad
mov
push
lret
out
out
sub
mov
rclb
inc
loopne
cmp
sbb
std
or
out
sbb
mov
stos
cmpsb
or
adc
lcall
xchg
stos
daa
in
movsb
xchg
lret
xchg
outsl
data16
adc
inc
push
xchg
mov
fldcw
imul
xchg
cmpsl
push
cmp
arpl
sbb
ret
add
testl
dec
lahf
test
test
sub
ds
mov
add
fucom
shl
jg
pop
add
add
daa
fimull
sarl
leave
jmp
notb
or
xor
and
and
fcmovbe
js
mov
iret
lock
mov
jno
pop
mov
xlat
xchg
xor
repnz
cwtl
arpl
dec
lods
push
push
mov
or
mov
pop
jbe
jmp
test
lock
xor
int3
rolb
fucomip
ss
rcrb
std
loop
mull
mov
js
movsb
add
xchg
mov
mov
push
pop
je
out
loopne
sub
popa
cmp
add
push
filds
cmpsb
inc
fstpt
xchg
int3
jns
das
lsl
xchg
inc
sub
mov
push
lret
xchg
mov
xchg
lods
sbb
call
dec
jnp
loopne
test
sub
jbe
add
pop
pop
popf
inc
out
jo
xchg
sub
push
movsl
ljmp
inc
outsl
pop
jno
mov
cmp
sub
int3
pavgw
hlt
push
leave
out
sub
xor
adc
mov
mov
mov
adc
out
jbe
imul
in
call
cmp
stos
out
dec
movsl
fisubs
pusha
sub
mov
scas
lahf
jmp
data16
ret
sbb
arpl
std
jnp
xchg
in
in
sbb
addr16
nop
rcrl
jns
loope
fmull
adc
test
int
insb
repnz
cmpsl
cwtl
insb
sub
xchg
add
push
orps
xlat
mov
jns
inc
cmp
or
roll
xchg
xor
leave
mov
mov
mov
mov
sub
jl
push
mov
sub
sub
jmp
jnp
sub
je
mov
jno
push
addr16
mov
dec
cli
push
push
push
xchg
sbb
add
mov
jne
das
das
cmpsb
push
adc
fcmovbe
aas
mov
jg
pop
push
leave
adc
jb
pop
mov
ja
lret
js
fildl
adcl
lea
jmp
xchg
outsl
out
in
push
lea
pop
inc
movsl
jnp
int3
imul
subl
push
sbb
dec
mov
cmpsl
hlt
and
data16
adc
scas
mov
outsb
jle
incl
sbb
jge
and
ret
bound
lea
xchg
jbe
adc
mov
sub
int
mov
in
cmc
test
mov
lahf
rclb
mov
ret
mov
ss
ds
imul
jae
loop
add
cmp
movsl
add
aaa
mov
lcall
orl
and
sub
das
and
leave
mov
sub
cmp
lea
outsb
adc
add
push
cli
pop
and
mov
filds
push
pop
push
pop
movsl
push
xor
sub
pop
int
ficoml
push
mulb
adc
data16
lods
pop
mov
xor
arpl
addb
push
lea
cmpsb
adc
adc
and
icebp
or
xchg
out
add
enter
fwait
inc
scas
sub
pop
xchg
sbbb
jmp
iret
push
loope
cld
or
in
ret
in
movb
mov
nop
pushf
fsubrl
mov
loope,pt
ss
sbb
mov
or
sbb
loope
add
rcr
nop
cmp
or
dec
jne
inc
and
shrl
sub
mov
imul
sbb
pop
int3
and
mov
push
aam
test
pop
sbb
inc
out
add
dec
ret
inc
cmp
sub
push
sti
xchg
fildll
sbb
mov
lret
movl
lds
push
dec
lea
fwait
cmp
loope
in
lods
roll
daa
sbb
sarl
and
aaa
jbe
lret
loopne
inc
loopne
push
push
cmp
xchg
scas
adc
cmp
call
pushf
insl
scas
mov
fcoms
adc
and
add
clc
fnsave
test
fisttpll
nop
xchg
stos
dec
adc
jo
mov
cwtl
shll
les
addr16
mov
jge
mov
cmp
dec
and
adc
and
ret
call
fildl
test
mov
pop
js
pushf
cmp
push
aas
push
xchg
inc
mov
pusha
fldl
fidivl
lret
pop
mov
xchg
cmpsb
dec
or
in
dec
sbb
inc
xchg
mov
jae
xchg
pop
fistl
and
int3
xchg
add
and
xor
std
dec
int
jae
pop
pop
xor
cmpsb
aaa
xchg
or
mov
iret
sbb
push
push
jae
and
jo
gs
dec
daa
jnp
sti
sub
mov
push
mov
jo
mov
mov
push
imul
rcll
or
shlb
test
cmp
jne
adc
insb
enter
inc
or
nop
inc
ss
pop
dec
inc
push
add
mov
ja
enter
jns
insb
or
and
pop
test
xlat
leave
rorb
insb
xlat
jecxz
jbe
cmp
mov
xor
jp
pop
popa
notl
lods
sbb
das
jne
push
push
sti
enter
jne
mov
push
inc
out
push
scas
sub
or
add
dec
aaa
test
xchg
sbb
call
pop
scas
imul
sbb
sub
adc
jecxz
jge
or
stos
sbb
in
pushf
lcall
add
imul
jle
jl
inc
xchg
pmulhuw
imul
cmp
xor
push
les
hlt
mov
push
imulb
dec
in
adc
lret
jae
popf
fiaddl
jne
ret
jnp
xor
orl
sahf
shr
jbe
sub
mov
xchg
lcall
xorl
jns
popf
ds
orb
test
stos
inc
add
das
popa
je
add
mov
mov
cmc
and
sbb
leave
add
mov
lcall
negb
inc
fwait
js
add
push
iret
mov
mov
pop
shl
mov
ret
adcb
push
mov
ljmp
hlt
jle
subl
sarl
mov
insl
stc
dec
jle
xchg
pop
imul
int
or
inc
pop
outsb
mov
rcr
js
sarl
xchg
out
aaa
mov
xor
push
pop
adc
xchg
cmp
jmp
lcall
das
ret
jecxz
gs
jp
xchg
sbb
and
lret
sbb
dec
daa
jb
loopne
iret
out
dec
sub
xchg
or
mov
mov
inc
inc
or
adc
adc
jecxz
mov
jmp
testb
jo
sub
adc
jp
dec
add
or
out
sbb
lea
mov
mov
sti
push
aaa
fildll
lahf
adc
test
loop
mov
ljmp
cltd
add
mov
in
add
fdiv
ljmp
pop
cs
cmpsb
mov
jbe
ss
lods
mov
add
add
dec
clc
repz
loop
das
inc
fmull
sub
sahf
mov
cmp
nop
test
data16
mov
sti
push
loopne
pop
ret
ret
cld
cltd
fwait
out
cmpb
or
sar
pop
dec
dec
jnp
arpl
inc
lock
stc
aad
and
jno
call
mov
pop
cmpsb
andb
xchg
mov
insb
xchg
lret
mov
pop
xchg
pushf
filds
xchg
aas
jge
inc
xor
mov
mov
add
outsb
pop
adc
xchg
pop
push
std
in
gs
pop
imull
pop
out
mov
je
adc
cmc
adc
push
arpl
mov
push
adc
dec
in
movsl
fldcw
or
arpl
jg
shrb
fisttpll
cwtl
test
jns
stos
aas
jg
or
inc
cmp
dec
mov
xchg
lea
inc
mov
jae
and
xor
je
pop
mov
cmpsb
xor
adc
lahf
mov
push
and
cmp
rolb
add
inc
pop
mov
lods
sub
and
lahf
rolb
adc
push
mov
cmp
adc
out
and
lcall
cmp
adc
mov
fnsave
xchg
mov
lds
pop
mov
inc
xchg
inc
inc
clc
pop
mov
orl
cltd
jge
lret
lods
cwtl
lahf
imulb
int
mov
daa
add
loopne
inc
adc
popf
fbld
inc
pop
nop
pushf
xlat
inc
add
lds
sbb
jp
mov
fdivr
xor
xor
mov
sub
jbe
mov
pop
into
or
adc
pushf
dec
mov
imul
test
addl
in
inc
lret
mov
adc
nop
xor
mov
shlb
mov
aad
mov
sbb
dec
scas
dec
out
pop
dec
sti
jno
and
cld
pop
jnp
inc
adc
fbld
inc
iret
mov
aad
loope,pt
mov
dec
push
dec
cmp
mov
sahf
mov
mov
fdivl
fwait
lret
inc
stc
stos
xor
or
dec
sbb
adc
jb
dec
cli
divb
fldcw
mov
cmp
out
les
adc
sbb
mov
push
pop
cmpb
fstl
adc
push
cmp
movsb
daa
leave
jge
xchg
pop
jle
inc
add
popf
xor
arpl
add
xchg
mov
sti
xchg
aad
sub
js
mov
xor
jp
call
mov
fisttps
jns
sahf
jbe
lcall
adc
nop
rcr
cmpsl
lds
cmp
mov
mov
jge
mov
xchg
mov
lods
lods
mov
xor
mov
das
mov
add
pop
mov
mov
sub
sbb
mov
lahf
mov
shrb
sub
ret
and
jns
mov
cwtl
xchg
sub
out
adc
inc
mov
insl
in
adc
and
mov
jnp
dec
mov
into
mov
gs
pop
sbb
loopne
and
scas
add
jns
push
jae
out
in
cmp
idivl
stos
pop
popl
sbb
mov
shlb
jns
aas
and
cli
xchg
call
sbb
jno
lods
cli
mov
add
in
fs
fs
lcall
and
jge
pop
outsb
push
xor
icebp
inc
add
in
push
xchg
sti
sarb
and
into
stos
xor
test
clc
pop
adc
gs
adc
fadds
data16
scas
and
std
test
or
jle
fs
cs
jbe
fidivs
push
cmp
scas
mov
and
cltd
add
pushw
fbld
xor
or
pop
jle
inc
jmp
in
add
cwtl
out
outsl
and
idivb
stc
mov
dec
into
add
xchg
mov
sahf
movsb
daa
les
adc
insl
shll
jo
lret
inc
lods
lock
or
mov
sahf
jge
push
push
cwtl
rcrl
sbb
faddp
test
mov
and
mov
aad
add
and
js
inc
or
das
js
into
xchg
jecxz
push
hlt
lds
or
push
add
fldcw
icebp
sahf
aam
adc
push
adc
push
rcrb
adc
sbb
cli
sbb
jb
pushl
mov
dec
pop
shr
add
xlat
jno
ja
mov
mov
add
repnz
cltd
inc
xchg
ljmp
sbb
mov
pop
loope
stc
mov
mov
mov
js
and
inc
xlat
incl
insl
ja
test
or
sub
pop
in
dec
add
out
popa
push
jg
fnstcw
movsb
xchg
fisubl
mov
mov
addb
push
or
popf
in
rol
ljmp
xchg
hlt
or
into
adc
xor
dec
inc
mov
lods
xlat
push
xchg
sbb
in
arpl
jb
in
out
jo
sbb
add
test
pop
push
sbb
loope
pextrw
sbb
dec
es
mov
repnz
adc
inc
mov
add
mov
cmp
aam
iret
arpl
popf
or
pop
mov
sub
fsubrl
mov
sub
jl
imul
mov
imul
or
lock
sarb
mov
addr16
scas
stos
cmpsb
arpl
jp
mov
imul
fs
add
ds
enter
push
fs
inc
in
mov
scas
out
imul
lods
int3
add
adc
leave
fidivl
ss
adc
das
mov
mov
inc
cmp
or
pop
mov
jmp
int3
aas
loope
shll
loope
les
sti
pop
cmp
cmp
lret
test
gs
xchg
jmp
insb
je
enter
mov
add
xorb
cmp
mov
lock
ja
xchg
fwait
jo
lods
out
mov
dec
add
xchg
lods
or
pop
pop
test
lods
dec
cmp
pop
fcomps
pusha
jle
clc
xor
and
out
stos
dec
or
push
add
sub
fcompl
mov
scas
pop
rcr
cmp
test
adc
insl
push
insl
push
push
cmp
mov
addr16
adc
cmp
test
dec
cmp
xor
xlat
sbb
add
out
sahf
mov
xlat
clc
out
add
sarb
cmp
stos
mov
add
cmpb
inc
or
or
jo
and
movsb
cmp
arpl
mov
aaa
ficoms
sub
movsb
int3
aas
lds
fs
fiadds
arpl
test
push
pop
lcall
in
and
mov
jb
or
cltd
out
cltd
leave
mov
fwait
rcll
outsl
dec
mov
fwait
nop
enter
mov
sbb
inc
lahf
in
jle
adc
ror
lock
inc
movsl
clc
fimull
pop
adc
cmp
test
push
cmp
call
in
pop
stc
push
push
into
inc
pop
xchg
nop
mov
sub
or
loopne
mov
andb
adc
sbb
scas
lahf
cmp
add
imul
lahf
dec
jo
loopne
idivl
repnz
adc
add
dec
mov
xor
dec
jl
dec
call
inc
and
imul
mov
cwtl
mov
ds
jg
xchg
pop
push
pushf
clc
inc
bound
fistpl
loopne
mov
jbe
out
in
pop
in
pop
insb
insl
push
rcrl
add
es
cltd
xorb
pushf
in
roll
repz
rorb
ret
xchg
lods
stos
dec
mov
xchg
outsb
movl
adc
add
xor
jae
fmull
sti
je
xchg
inc
or
loop
ss
movsl
lods
mov
dec
aaa
and
lds
mov
cmpsl
mov
xor
pop
push
pushf
aam
stc
in
lret
jl
icebp
push
add
mov
mov
data16
cld
push
es
in
xor
xchg
ficompl
xorb
cmp
test
out
testb
test
js
xor
xlat
dec
scas
outsb
sub
add
jae
lods
test
xchg
inc
imul
mov
sub
add
aam
mov
jno
cmpsl
lock
dec
sub
inc
mov
shrl
pop
push
mov
mov
or
arpl
sbb
xor
fwait
pushl
jae
mov
dec
je
add
mov
pop
insl
xlat
xchg
fwait
mov
and
subl
cltd
push
mov
test
xchg
xor
dec
sbb
push
xchg
ljmp
mov
mov
jno
ret
out
adc
adc
mov
mov
mov
pop
jl
loop
xchg
lcall
ud2
mov
test
xor
cmpsl
pop
cmpl
add
fwait
push
cmp
loope
cmp
movsl
mov
ss
xor
sahf
test
int
outsb
stc
fimuls
lahf
push
mov
movsl
jbe
inc
cld
dec
sub
cwtl
mov
aam
fsubs
sbb
imul
mov
mov
scas
sub
test
cmp
sbb
jo
lock
jae
add
adc
xchg
nop
mov
sub
lock
iret
in
push
push
pushl
cs
xor
xchg
int
mov
pop
mov
or
nop
insl
push
mov
jns
shrl
sub
dec
sahf
testb
xchg
mov
loop
call
sub
rcrl
lods
int
movsb
lcall
push
jbe
add
cltd
push
div
dec
pop
pop
movsb
repz
mov
push
mov
fidivl
xchg
push
xchg
mov
js
dec
aam
add
xchg
jmp
pop
mov
mov
add
das
test
sbb
sub
sub
and
inc
dec
mov
mov
fs
stos
dec
mov
movb
xchg
les
fwait
dec
idivb
and
jecxz
jo
addr16
sub
repnz
inc
adc
xor
sbb
inc
and
mov
mov
and
jne
es
push
stc
pop
cmpl
mov
sbb
push
aas
mov
sub
je
decl
push
jns
adc
push
or
ja
adc
ret
sbb
jl
mov
imul
cmp
push
int3
bswap
out
lock
and
xchg
xchg
int
addr16
mov
mov
xorb
fwait
xchg
test
mov
xchg
push
je
jle
and
lods
pop
repz
xor
loope
mov
movsb
mov
inc
mov
cmpsl
jns
fstps
fistpll
pop
mov
aad
pop
pushf
je
stos
fistpl
mov
scas
push
pusha
cmpsl
xchg
push
sbb
insb
stc
sub
mov
inc
out
repz
cmp
divb
call
inc
rcrb
movsl
mov
sub
inc
cmp
adc
push
or
xor
or
mov
push
or
jecxz
xchg
or
mov
test
xchg
lods
sbb
cs
xor
and
es
add
mov
int
xor
xchg
insl
in
insl
rorb
ds
pushf
mov
lcall
sbb
and
dec
ss
cmp
mov
inc
mov
ss
jnp
fidivrs
cmp
jp
rcrl
ret
dec
lahf
ret
insl
mov
loopne
jo
pop
pop
pushf
inc
cmpsb
jno
mov
stos
inc
cwtl
idivb
sub
addb
mov
loopne
jbe
jbe
sub
adc
rcrb
and
dec
xlat
iret
push
decb
lds
cvtps2pi
push
inc
fdivr
insb
xor
outsl
and
jl
jmp
mov
mov
fwait
pop
jne
xchg
mov
ret
outsb
imull
inc
scas
aad
fsts
fisttps
rcr
pushf
stc
aad
inc
and
xor
adc
mov
in
sub
call
lock
mov
mov
ja
mov
or
inc
out
std
mov
sub
mov
inc
adc
adc
add
and
mov
addr16
mov
pop
inc
mov
lret
jo
ljmp
mov
dec
xchg
mov
scas
lret
sub
out
fsubrl
addr16
adc
xor
inc
movsl
ror
mov
lcall
sbb
or
mov
outsl
outsb
jbe
pushf
sbb
sub
pop
jecxz
sbb
xchg
mov
sub
mov
daa
js
jnp
add
push
inc
xor
sarl
or
int
pop
fistpll
pop
cmp
cwtl
add
vpinsrw
repz
inc
stc
sub
add
in
cmp
jb
sbb
adc
ret
push
sbbb
jb
int
inc
sbb
inc
mov
adc
push
hlt
fdiv
sar
out
jo
pushf
mov
js
or
int3
xor
faddl
std
xlat
pop
sbb
cmp
mov
xchg
stos
or
cs
bound
dec
pop
addr16
fdivs
fisubrl
lock
dec
adc
cmp
fwait
adc
loopne
jo
pop
cwtl
cmpsb
push
adc
mov
arpl
push
mov
add
loop
pushf
push
notb
inc
mov
gs
daa
xor
sub
adc
xor
pushf
stos
xchg
rclb
dec
insb
or
inc
call
repz
cmc
mov
fcomps
dec
add
add
fmull
outsb
cli
jmp
lods
dec
movsl
jae
xchg
int
mov
testb
jle
fldt
ss
push
fcmove
cmp
add
dec
jb
sbb
fmuls
cmc
sbb
loope
test
loope
call
loop
cmp
jp
xor
mov
fiadds
js
dec
popf
xor
mov
sub
inc
sub
repz
popa
mov
xorl
push
gs
popa
cmp
out
mov
xchg
push
shlb
mov
add
xchg
test
adc
xchg
inc
fcomp
inc
subb
jecxz
or
dec
rclb
loope
out
cmp
insb
adc
mov
mov
dec
push
sub
xor
sbb
mov
andl
jae
loop
pusha
cmp
xor
pop
ss
sti
push
inc
movsb
popf
in
jbe
gs
bswap
xchg
add
iret
cs
into
fisubrs
cmpsb
repz
in
cmp
pop
sbb
ljmp
jae
inc
add
mov
adc
pop
mov
mov
push
jmp
test
push
sbb
in
xchg
push
xor
xchg
jge
pop
icebp
int
int3
mov
mov
mov
arpl
jae
push
mov
push
and
lock
pop
jp
and
push
hlt
xlat
cmp
insl
outsb
or
push
pop
popf
in
xchg
int
push
push
jmp
sub
mov
out
je
repz
fmull
int3
lcall
pop
int
and
jecxz
sub
jmp
dec
add
pop
adc
ret
push
cmp
test
hlt
je
mov
xchg
adc
dec
cli
inc
mov
push
adcl
inc
movsl
fnstenv
out
push
jae
xchg
lock
lods
daa
xchg
je
arpl
xchg
ljmp
enter
mov
mov
daa
jo
adc
add
cmpsb
and
adc
ss
jnp
cmc
lea
shrb
sti
push
loop
jno
rorl
mov
in
jmp
mov
mov
and
ret
xchg
jl
pop
lods
hlt
sbb
sbb
or
jns
icebp
test
in
mov
mov
jno
or
ds
push
mov
std
xchg
push
clc
sub
xor
or
shr
nop
add
stos
inc
out
lret
fimuls
xor
ljmp
and
lods
into
bound
ds
sbb
stos
dec
jo
jecxz
xlat
push
adc
push
inc
test
mov
jb
outsl
outsb
dec
ficoml
int3
clc
insl
sbb
mov
int3
iret
xor
aad
inc
sbb
and
orb
pop
mov
stos
in
or
fsubrs
and
les
sar
cmp
xor
ret
and
movsl
xchg
mov
jp
mov
ljmp
data16
xchg
push
pop
inc
imul
mov
dec
lods
push
aam
xor
jg
or
mov
mov
sbb
outsl
sti
enter
gs
enter
aad
les
out
pop
test
mov
pop
mov
aad
imul
leave
dec
jle
out
adc
pop
mov
adc
inc
push
mov
push
dec
adc
mov
addb
jmp
sub
les
and
sti
loope
and
popa
int3
call
push
in
ret
invd
ds
subl
out
and
mov
push
xchg
cmp
lock
out
std
in
lret
jne
in
sti
sub
insb
cmp
fstps
rolb
adc
pop
test
sbb
mov
lret
ret
in
sbb
out
sub
add
aaa
push
sub
cmp
adc
add
scas
sbb
xor
mov
ja,pt
cmp
adc
pop
fs
jne
outsb
mov
push
mov
rclb
pop
jo
dec
adc
xor
jno
cmp
sbb
nop
loopne
iret
out
fwait
loop
sbb
push
in
fdiv
repnz
aad
aas
jp
repnz
divl
mov
arpl
xchg
cmp
dec
data16
cli
fs
aad
test
sub
cmp
std
dec
sub
dec
into
dec
or
sbb
inc
sbb
sbb
dec
addr16
xorl
sbb
mov
mov
test
pop
push
stos
inc
popa
ss
and
repz
mov
push
push
pop
dec
das
dec
test
lock
adc
orb
jle
pop
test
in
inc
or
sub
dec
addr16
hlt
es
xchg
cmp
test
fcmovb
jno
or
insb
sub
inc
jnp
out
mov
gs
dec
mov
mov
in
add
mov
cli
jns
ret
jne
dec
mov
les
mov
jg
sub
mov
push
xchg
aad
and
jnp
outsb
insb
dec
pop
or
ffree
es
add
inc
gs
sub
movsl
and
mov
adc
push
and
sbbb
out
mov
lret
lret
and
mov
push
xchg
sub
loopne
push
data16
call
inc
sbb
sti
push
fistl
mov
cmp
lods
bound
out
and
test
mov
lods
loopne
insl
lock
and
fwait
add
cs
fisubrs
mov
xor
cmp
jecxz
vmwrite
mov
repnz
pop
sub
add
loope
mov
mov
jae
bound
or
out
test
or
or
cmp
lcall
mov
adc
fcompl
jmp
and
mov
sbb
sbb
jmp
mov
das
sbb
mov
sbbl
jnp
insb
cmp
jo
mov
fstpt
pushf
inc
and
jmp
jno
int3
xor
into
dec
mov
mov
mov
mov
push
add
fs
add
loop
into
int
mov
aam
lret
mov
insl
and
jl
inc
jbe
fisttpll
xchg
mull
pop
jecxz
jl
and
out
int
popl
clc
sub
or
add
xor
in
or
inc
test
pop
adc
mov
push
sti
fcmovbe
cmp
pop
dec
ret
mov
xchg
xor
xchg
dec
lods
or
adc
jg
jg
bound
jnp
xchg
jp
xor
add
test
jae
pop
leave
sbb
add
fildl
lcall
pushw
dec
lret
icebp
adc
sub
xchg
cmp
xchg
test
aad
sbb
push
push
cmp
lret
push
xchg
mov
mov
call
and
shrb
xor
sub
push
pop
rcrb
movsl
xchg
out
push
fistpl
ficoms
addr16
add
imul
jl
cmp
jae
adc
push
and
movb
movsb
mov
je
mov
xchg
inc
and
shlb
pop
sahf
sbb
inc
add
mov
leave
push
ja
add
fsubr
pop
add
movsl
lods
scas
pop
fistl
int3
mov
repz
sub
div
divl
enter
mov
mov
lea
xchg
xchg
in
inc
lods
add
dec
xchg
mov
push
xor
dec
pop
push
sub
push
lahf
jmp
into
jnp
movsb
in
cmp
mov
pop
push
jb
int
fisubl
test
mov
push
xchg
inc
jl
inc
in
in
adc
inc
pop
jecxz
cs
icebp
cli
push
or
sbb
sub
hlt
pop
icebp
pusha
pop
imul
cmpsl
fsubrs
add
xchg
nop
imul
jnp
testb
loope
and
jmp
sbb
or
inc
xchg
leave
orb
pop
push
inc
aas
jmp
or
in
ljmp
pop
leave
push
and
lcall
and
es
aaa
pop
pop
imul
rol
pop
adc
out
clc
ret
ret
mov
mov
add
in
mov
test
repnz
add
lock
jae
add
sbb
mov
aas
xor
xor
jnp
sti
sbb
repz
popf
cli
sub
dec
lea
jecxz
xor
aam
sub
shlb
mov
enter
cs
lock
xchg
cmp
int
cltd
nop
jb
icebp
jne
jle
xchg
add
pusha
test
sbb
or
pop
sub
push
imul
xlat
push
push
push
xor
dec
fcmovnu
ret
das
loope
and
jns
test
mov
and
div
xorl
add
popa
push
arpl
add
sub
mov
mov
daa
pop
pop
xor
sbb
adc
or
call
xchg
jle
addb
mov
pusha
jb
and
int3
enter
push
jmp
test
out
pop
or
call
add
add
push
test
jp
dec
push
insl
add
imul
out
ss
adc
mov
outsb
scas
pop
push
fldenv
lcall
rorl
jle
or
dec
lds
push
test
stos
dec
shrl
jle
aas
xor
shll
pushf
pop
cmp
negb
sub
ljmp
mov
push
adc
aaa
jb
movsb
insb
lahf
in
adcl
testl
xchg
mov
outsb
pusha
insb
push
jno
int
sub
inc
or
jnp
rol
leave
and
or
inc
xchg
sub
sbb
jae
fwait
jnp
or
cmp
jl
mov
cmp
inc
iret
ror
mov
and
mov
jb
xlat
mov
imul
jg
cmp
into
sub
out
and
sbb
sub
ret
sbb
pop
pop
xchg
shlb
adc
hlt
inc
repnz
pop
fistpl
or
mov
xchg
fnstenv
pop
cmp
pop
out
fiadds
xchg
jl
inc
and
cmp
or
hlt
push
jle
rclb
add
outsl
xor
out
dec
xchg
mov
xchg
dec
pop
es
das
sub
and
dec
lea
ret
fwait
mov
pop
and
mov
adc
mov
dec
lret
push
lea
mov
jge
and
popa
iret
xor
jle
loope
pop
bound
jae
and
inc
pop
xor
clc
add
jmp
loopw
fisubrs
movsl
jno
adc
push
sbb
pop
mov
push
mov
mov
ret
insb
sahf
push
xor
les
pop
aaa
fsubr
jg
and
jb
pop
ror
pop
outsl
inc
jns
mov
fildll
js
into
adc
dec
inc
arpl
in
sbb
jmp
lret
mov
mov
xor
pop
cmpsl
std
sub
inc
xchg
add
aad
out
cli
outsl
mov
sub
sbb
mov
int3
sbb
mov
call
add
mov
jo
xchg
sbbl
cmc
testl
mov
dec
jns
sti
sbb
or
inc
sbb
cmp
inc
pushf
int3
aam
into
loope
mov
sbb
mov
loop
hlt
xor
stos
pusha
xchg
in
sub
xchg
daa
jne
xchg
insb
xchg
and
mov
lock
and
mov
mov
cmc
pop
push
repz
cmp
loope
mov
push
and
je
or
sub
jne
in
arpl
ds
jge
shl
add
cmp
pop
dec
adc
push
push
and
ss
movsl
or
inc
loope
sbb
stos
pop
pop
xlat
xchg
lahf
mov
jno
and
xlat
push
pusha
add
lret
pop
mov
push
or
cmpsb
addr16
sbb
xor
dec
cmp
jbe
xchg
int3
mov
jae
aad
out
pop
push
cld
fisubs
sahf
scas
aas
aam
jnp
and
js
mov
mov
xchg
out
mov
mov
js
and
in
sub
dec
cwtl
dec
scas
pusha
addr16
repz
decb
or
stos
adc
gs
out
cmpsb
jl
icebp
pusha
rcrl
hlt
mov
pop
inc
and
das
ds
leave
roll
shrl
sbb
andb
ss
in
push
fidivl
pusha
stos
lock
mov
ret
cmp
mov
sbbl
pop
jb
push
pushl
push
clc
xor
and
pop
push
js
lret
outsl
dec
jmp
mov
aaa
lret
and
arpl
fisubrs
jmp
lods
inc
jmp
inc
push
mov
pop
xlat
dec
push
fnstcw
and
lcall
push
sub
sbb
or
sub
scas
mov
pop
xlat
out
sub
pop
adcl
addl
int
cmp
push
repz
mov
out
les
jmp
test
xchg
leavew
xor
scas
mov
dec
cwtl
adcb
sarb
outsl
jge
scas
sbb
cmp
int3
and
push
mov
lods
jmp
jl
or
pop
aad
lock
test
fs
cwtd
adc
sbb
lock
push
movb
xor
pop
loopne
mov
iret
cli
enter
cmp
cmp
inc
pop
mov
jmpw
sbb
xchg
cmp
out
mov
push
jns
out
inc
inc
jbe
adc
addl
inc
cmpsb
xchg
ss
push
data16
loop
mov
clc
cli
jbe
inc
lds
push
cli
sbb
xor
dec
pop
loope
decb
mov
xor
decb
xor
sahf
dec
rcl
inc
test
pop
sar
mov
divb
or
adc
ljmp
icebp
out
dec
lahf
xchg
data16
xlat
push
aas
aad
into
jecxz
sbb
cli
aad
or
std
out
inc
aaa
aad
inc
cli
cmc
mov
sbb
xor
daa
lahf
lret
out
and
test
lcall
scas
pop
cmpsl
nop
push
ljmp
xchg
ret
out
mov
stc
daa
scas
in
jae
scas
jnp
sbb
outsl
jmp
fwait
aas
jnp
jle,pt
sub
out
stc
jbe
cmpsb
mov
fnstenv
enter
gs
mov
xlat
test
fwait
sahf
divl
fcomps
and
mov
adc
aad
or
inc
add
and
sbbl
adc
ljmp
sbb
xor
cmp
cmp
cltd
mov
out
mov
add
jp
sbb
cmp
scas
mov
cld
jl
stc
sbb
add
in
cmpsb
push
gs
mov
mov
xlat
pop
loope
ficoms
orl
jp
push
adc
test
clc
mov
scas
das
cld
or
inc
ret
and
mov
sbb
pop
sbb
inc
cmp
adc
push
das
mov
or
or
adc
scas
outsb
mov
jnp
pop
pop
inc
push
fstps
push
cvttps2pi
aad
in
jmp
repz
scas
or
cmp
lds
int
aad
nop
aaa
js
repz
lahf
mov
pop
in
mov
xchg
daa
lods
popa
push
xchg
clc
fsubrp
dec
push
xor
xchg
jg
mov
adc
pop
xor
sub
jns
mov
or
sbb
mov
sbb
sbb
inc
push
idiv
aam
in
loopne
mov
push
frstor
sub
in
ficompl
jecxz
shrb
cwtl
mov
lods
add
sbb
or
rclb
cltd
test
dec
or
or
xchg
xchg
add
push
adc
cmpsl
imul
aaa
add
push
cmpsl
lds
fs
rcrl
sub
cltd
cmp
jle
xor
test
mov
xchg
inc
mov
inc
xchg
push
cmp
jp
mov
sbbl
pop
cmp
sbb
add
xor
rorl
mov
jg
sbbl
adc
push
sahf
fbld
inc
rorl
test
mov
and
xor
xor
sbb
ds
inc
sbb
popa
pop
stc
dec
int
cs
fbstp
fdivl
cmp
cmovge
adcb
aam
cmp
dec
cltd
push
xor
dec
inc
popa
clc
jbe
negl
or
rcl
clc
or
insb
ss
xchg
xor
add
outsb
jno
dec
popf
fimuls
inc
pop
lcall
pushaw
inc
dec
mov
arpl
push
sbb
sub
arpl
dec
jnp
xchg
nop
dec
iret
or
cld
mov
mov
sub
nop
push
dec
mulb
pop
dec
ljmp
dec
repnz
es
test
and
push
mov
test
inc
lods
jg
mov
bound
or
or
call
das
mov
xchg
in
mov
fs
push
testb
lods
xor
fisubrs
adc
dec
test
sub
ds
dec
mov
cmpsb
mov
hlt
out
pusha
mov
cmp
push
or
sarb
jmp
arpl
pop
mov
outsb
push
fidivs
aaa
scas
jg
or
or
popf
xchg
push
jl
cmp
imul
jb
xchg
mov
out
xchg
adc
cmpb
mov
add
test
shlb
jb
xchg
mov
clc
icebp
adc
jbe
es
cmc
mov
cmpsb
sbb
or
repnz
std
mov
xor
in
jmp
jne
xchg
fisttpl
xchg
outsl
jno
ss
mov
mov
out
lret
mov
mov
mov
loop
gs
in
scas
icebp
dec
data16
sti
xchg
out
loop
stos
subl
push
cmp
cmp
ja
stos
cwtl
mov
dec
dec
mov
dec
cmp
and
ret
jg
loop
adc
sub
mov
adc
call
jle
aam
repnz
mov
push
inc
push
stc
cltd
lret
fisttps
loopne
inc
add
iret
push
jb
jecxz
es
push
xchg
roll
fbstp
std
adc
scas
inc
xchg
xor
ljmp
xor
cltd
dec
ljmp
pop
xor
popa
sbb
inc
pop
aaa
call
dec
das
push
gs
insl
dec
enter
or
xor
push
or
or
mov
cmpsl
pop
jl
fbstp
rol
sbb
sub
scas
pop
jae
sub
pusha
xlat
xchg
push
nop
jbe
xor
test
fidivs
dec
test
xor
in
adc
lds
lahf
dec
xchg
cli
popa
pop
pop
sub
movsl
pop
bnd
add
cmp
push
or
dec
or
add
aad
shl
xor
inc
sub
sub
ja
add
add
sub
inc
push
mov
dec
dec
aam
mov
xchg
fs
push
nop
mov
mov
mov
aad
out
push
shrl
popw
xchg
sub
cld
inc
imul
push
int3
out
mov
push
test
stos
sahf
cmp
dec
mov
iret
xor
sti
nop
cmpsl
lock
loope
imul
lods
pusha
js
adc
or
or
imul
mov
mov
imul
adc
or
xchg
pop
jbe
push
xor
dec
jl
pusha
xor
and
in
mov
fiadds
mov
cwtl
out
das
adc
jne
inc
je
push
dec
pushf
ja
lret
aad
sbb
push
ret
mov
ss
mov
mov
push
fisttpl
fistps
les
addr16
lds
sbb
jae
div
stc
outsb
in
inc
cmpl
and
pop
mov
clc
mov
ja
inc
shl
pop
mov
insl
mov
mov
jge
sbb
xchg
setle
sub
cli
lret
mov
pop
dec
out
push
test
jnp
lds
jg
push
aas
lds
addl
into
add
xchg
aad
xchg
lds
xor
or
test
loop
ss
aam
and
cmp
lret
movsl
mov
dec
mov
ret
sbb
mov
test
inc
js
stos
mov
jno
push
jecxz
add
out
testl
out
notl
popf
test
fdiv
leave
fisttpl
sarb
and
cmp
std
push
or
xchg
jg
pushf
das
repnz
cwtl
test
dec
dec
call
or
mov
fistpl
inc
lahf
push
negb
jns
push
mov
enter
inc
xchg
inc
lods
push
out
adc
dec
xchg
rcrl
pop
cmp
movsl
pop
ljmp
sub
jne
inc
adcb
cwtl
and
rolb
stc
or
dec
repz
pop
adc
cmp
pop
jo
sahf
xor
inc
sbb
push
loope
xor
pop
mov
mov
mov
jp
xor
loope
mov
test
out
lret
addr16
inc
in
lahf
ljmp
outsb
pop
pop
push
cmp
lret
cmp
int3
dec
arpl
popf
ljmp
sti
out
push
jge
in
filds
mov
push
cwtl
push
jp
sub
sbb
imul
sbb
jl
call
cmpl
or
repz
sbb
dec
popa
xchg
cs
nop
cmp
mov
jnp
sbb
jno
adc
push
mov
test
shll
sbbb
mov
sti
adc
call
jbe,pt
test
mov
loop
inc
inc
mov
cmp
xchg
lea
inc
push
ss
mov
sahf
pop
or
pop
and
loope
and
jbe
pop
cmc
loop
test
inc
push
xchg
xor
jmp
and
sbb
push
adc
dec
movsl
jns
aas
mov
outsl
jle
adc
jb
jecxz
pop
sub
shll
pop
and
adc
adc
imul
xchg
xor
or
sub
inc
sti
pushf
dec
adc
push
push
xchg
sahf
jecxz
mov
out
mov
push
xchg
test
arpl
cmp
add
jb
push
mov
xor
inc
jne
push
sarb
sbb
enter
es
mov
sar
stc
in
clc
lret
dec
sahf
jg
bound
add
mov
ss
jp
cmp
xchg
mov
ljmp
cmpsb
fcoml
movb
cmp
sahf
leave
sub
fnstsw
sbb
jmp
push
add
mov
call
or
xor
stos
mov
jmp
pop
mov
mov
xchg
push
int3
call
lods
arpl
cld
dec
stos
push
lods
cmpsb
pop
dec
push
scas
jmp
xorb
sub
mov
stc
int
sub
cmp
jp
xchg
inc
mov
repz
nop
cmpsl
mov
loopne
mov
out
push
rorl
lods
sbb
xor
fstpt
jae
pop
out
dec
mov
inc
xchg
test
mov
or
lods
cmp
pop
mov
push
test
movsl
inc
jb
or
adc
adc
lahf
sbb
loop
loopne
push
shrb
data16
ss
pop
loopne
mov
jb
xor
jne
aad
sub
jb
inc
dec
popa
add
mov
push
or
shll
fs
enter
xor
arpl
cmp
shlb
rcl
sub
jge
sbb
enter
lahf
mov
jl,pn
out
rcll
jge
fstps
sub
sahf
in
enter
xchg
loope
adc
push
movsb
xor
sub
mov
push
cmp
mov
dec
or
ja
jae
sbb
push
fmulp
xlat
leave
movsb
inc
test
and
movsl
push
adc
mov
insl
das
je
jmp
cmpsl
inc
jge
popf
clts
adcb
push
insl
mov
out
add
and
daa
xor
sti
scas
in
mov
and
cmp
push
clc
ljmp
xlat
decb
lds
in
and
jo,pn
xor
pop
ja
cld
jmp
jge
cmp
call
fwait
sub
mov
sub
loop
jbe
push
mov
dec
and
dec
xor
lahf
sahf
mov
aaa
call
sbb
xor
mov
pop
mov
push
insl
pop
in
not
or
and
int3
mov
inc
icebp
jbe
adc
push
mov
mov
in
sub
in
call
push
xor
push
sbb
scas
ds
leave
lea
mov
jnp
add
push
mov
sbb
lods
xchg
adc
mov
cmpl
stc
cli
pop
cmp
imul
xchg
imul
out
push
lcall
push
fstl
push
shrb
icebp
or
jns
leave
lods
adc
in
pop
push
pop
push
add
or
cmp
lods
xchg
xor
bound
mov
mov
je
mov
push
push
popa
xchg
fcompl
mov
cmp
cmp
ret
jl
lock
jbe
out
mov
sbbl
es
in
adc
mov
xor
add
sbb
lret
jbe
pop
popf
mov
scas
loopne
pop
xchg
ja
and
inc
lret
sub
xor
aaa
shlb
jmp
sub
mov
adc
test
jae
pop
jl
xor
cmp
sbb
mov
push
icebp
cs
mov
addl
mov
sbb
lock
xlat
pop
push
das
inc
stos
push
pop
cmp
cmp
fmull
stos
and
jae
mov
jnp
push
jnp
xor
sahf
or
aam
xlat
add
jge
dec
icebp
dec
pusha
or
cmp
outsl
jecxz
sbb
movsl
xlat
bound
cmp
cli
mov
divb
pusha
fsts
bound
fbld
hlt
out
cmp
js,pt
xor
and
movsl
xchg
mov
lods
xlat
ret
and
sbb
rcl
aam
push
mov
dec
or
cmp
idivb
incl
and
dec
xchg
dec
lock
push
mov
jae
popl
jns
fadds
mov
push
sti
gs
cmp
push
mov
mov
pop
std
stos
or
lret
test
add
icebp
clc
and
jb
mov
jle
stos
dec
mulb
lock
xor
xlat
scas
and
jno
pop
dec
jns
enter
loope
sbb
mov
lret
or
xchg
mov
lds
sub
je
ret
xchg
mov
lods
addb
mov
xor
jecxz,pt
inc
daa
or
add
mov
mov
xor
or
jbe
push
imul
test
loopne
xor
add
pop
fxch
push
cmp
inc
movsl
add
mov
pop
dec
jns
xor
out
sub
jnp
sbb
adc
int
sti
leave
lfs
adc
stos
adc
test
sub
lcall
or
mov
and
sub
or
mov
in
aad
cmp
lds
lea
sub
filds
dec
jl
lea
fsubrl
fcoms
and
cwtl
enter
in
cs
sti
or
ja
cld
push
hlt
adc
in
jl
sbb
jl
pop
arpl
aam
icebp
addr16
movsb
das
or
mov
lret
jnp
sbb
dec
scas
std
adc
hlt
into
imul
or
inc
push
jb
pop
xor
lds
outsb
dec
lcall
mov
inc
stos
cltd
mov
add
cmp
push
repnz
sbb
xchg
xchg
xchg
loop
mov
movsl
push
out
inc
and
fwait
int3
loop
xchg
daa
xchg
pop
sbb
cli
arpl
sbb
cmc
movsl
pop
xchg
aad
mov
gs
inc
push
pop
xchg
ficoml
test
lea
mov
cmp
lahf
mov
and
xor
mov
lods
addb
mov
xchg
cltd
pop
and
cmp
pop
rcl
mov
jle
jb
xor
xor
jnp
pop
imulb
pop
das
push
xor
xchg
enter
cli
mov
mov
jle
cmpsl
mov
ret
push
mov
pop
fadd
inc
xor
adc
or
jmp
mov
jne
aam
and
cli
popf
lcall
dec
sbb
mov
mov
cmp
lea
shll
push
push
jnp
insb
rcrb
std
xchg
in
add
fcompl
shr
cmp
lock
in
mov
in
aas
push
and
shlb
add
cmpsl
push
sub
xchg
push
pop
lahf
test
xchg
out
imul
test
fwait
pop
mov
mov
lret
fwait
add
adc
mov
pushf
jae
push
shlb
mov
jbe
jbe
cmp
jmp
mov
cmpsl
addr16
jl
movsl
aas
or
push
jo
scas
pop
daa
jnp
add
sbb
sbb
pop
xchg
pop
loop
push
mov
test
mov
addb
xchg
and
dec
fwait
orb
in
mov
jl
xlat
mov
ss
rcr
mov
jmp
dec
test
mov
mov
ffreep
and
mov
shlb
mov
imul
dec
mov
pushf
das
ljmp
das
pop
or
xchg
js,pn
fnsave
ret
mov
sbb
mov
adc
cmp
inc
sub
sub
outsl
pop
lret
mov
cs
mov
imul
jbe
outsl
inc
xor
fcomp
ja
fbstp
mov
int3
arpl
ja
je
dec
mov
loopne
mov
adc
inc
imul
or
push
call
subb
fwait
outsb
mov
sub
ja
ret
adc
std
mov
add
sbb
jb
call
fidivl
call
inc
jno
lock
test
sbb
test
inc
cmp
xor
test
clc
cli
int3
shrl
and
xchg
pop
push
sub
pop
imul
pop
data16
push
jge
mov
mov
fsubr
xor
cmpsb
sbb
jb
mov
ret
les
arpl
mov
shll
sub
inc
mov
mov
lods
xchg
das
jmp
push
pop
lds
fdivrl
sbb
es
and
into
lods
in
faddp
cmc
adc
mov
adc
mov
outsl
dec
mov
jle
add
stos
adc
fwait
insb
movsb
fisttpll
mov
jg
les
std
cmp
xor
mov
aaa
sbb
int3
movsb
pop
ljmp
jo
xor
stos
adc
stos
add
add
mov
enter
repz
sub
jge
xchg
mov
mov
dec
sub
push
add
mov
push
loop
mov
cli
mov
inc
dec
lods
hlt
sub
mov
xchg
rcrb
aam
out
stos
dec
cli
mov
popw
pop
lret
das
in
and
sti
push
ds
sahf
dec
je
sbb
cmp
xchg
jmp
scas
pop
adc
cmpsb
or
pop
mov
pop
ljmp
ret
js
in
cmpsl
rolb
mov
cmp
dec
lcall
mov
mov
aaa
push
dec
pop
sbb
in
pop
pop
pop
pop
mov
inc
mov
sbb
sub
pusha
jae
stc
in
cmp
adc
js
or
push
push
mov
xor
xchg
mov
mov
jb
scas
lea
dec
fisubs
test
mov
mov
sbb
pop
push
jae
dec
mov
aad
xor
pop
shll
jbe
notl
xchg
add
and
and
pop
mov
or
daa
and
hlt
mov
pop
sti
rcll
mov
ja
xor
in
add
pusha
cld
fcomps
insb
int3
cmp
jo
mov
pop
int3
mov
pushw
shr
mov
aaa
push
or
out
xchg
jo
push
js
inc
test
mov
rclb
push
rolb
push
je
int3
test
mov
fucomp
shrl
xchg
inc
cli
xor
xor
dec
xchg
aam
push
or
idivb
pop
nop
dec
dec
or
sbb
mov
sub
jmp
icebp
cmp
cmc
pushl
xor
jecxz
loopne
cs
out
mov
out
cmc
loopne
pop
mov
mov
out
or
lret
xorl
es
mov
test
push
pop
ja
das
repz
push
cwtl
jmp
shll
mov
lcall
sbbb
jmp
jl
and
lds
xorb
int
fs
movsb
fwait
jl
call
cmp
sbb
addr16
hlt
into
into
sbb
outsb
or
ret
lds
cmc
leave
add
repnz
mov
sar
icebp
pusha
ds
movsl
stos
xchg
outsb
clc
daa
sbb
fsubrs
scas
test
mov
dec
adc
loopne
sbb
neg
cltd
js
std
aam
xlat
test
fstps
testl
lret
bound
add
popa
int3
sub
and
sets
dec
imulb
xchg
sub
pushf
mov
sahf
mov
test
xor
fildll
stc
mov
je
dec
push
jecxz
testl
stos
insb
push
add
xchg
jne
jge
xchg
lahf
add
rcrl
jge
movsb
aaa
ds
jb
push
xor
push
nop
sub
mov
xchg
adc
adc
fwait
push
jbe,pt
or
cmpsb
retw
lods
pop
ss
add
push
sub
sub
sbb
repz
xor
and
inc
les
dec
enter
inc
inc
mov
jno
xchg
jl
jbe
push
jecxz
adc
xor
lahf
jge
mov
orb
push
xlat
push
mov
or
push
add
mov
push
adc
sahf
and
add
push
add
xchg
xchg
cwtl
mov
cwtl
and
daa
adcb
ss
add
cmc
push
xchg
pushl
shll
add
push
inc
dec
xor
push
ja
stc
lret
in
xchg
dec
mov
mov
sti
jo
pushf
daa
cmpsb
pop
mov
arpl
out
outsb
fnstenv
shlb
fs
lahf
jmp
popa
lahf
arpl
aaa
pop
dec
ljmp
push
fisttpl
mov
sub
add
ljmp
xchg
cmpsb
cmp
in
or
leave
or
pop
pop
shll
lret
pop
rcll
test
outsl
xchg
pop
xor
js
shll
arpl
jg
clc
in
jle
nop
cltd
fsts
mov
pop
dec
or
arpl
sub
mov
cld
lods
imul
out
xchg
in
cmp
gs
xchg
out
popa
stc
or
outsb
in
pop
push
sbb
xor
loope
int
jp
mov
push
xchg
pusha
std
push
inc
and
or
xchg
rorb
ret
lds
or
mov
call
cld
mov
cmp
into
call
shrl
push
lods
xchg
cmp
loop
arpl
cmp
fwait
gs
jno
xchg
fmul
pushf
repnz
fmull
add
and
pop
jl
divl
aas
cli
pop
sub
ja
cld
push
cld
inc
jp
mov
push
out
jb
lods
lds
sub
pop
mov
push
xor
fisubl
mov
dec
inc
or
push
cld
ret
rcll
dec
sub
mov
pop
pop
cmp
sbb
ret
fstps
sar
and
test
mov
fildl
repnz
aaa
mov
pop
or
pushf
lods
rcl
mov
jmp
loopne
sbb
jo
shr
mov
out
cmp
xlat
andb
inc
sbbb
out
shl
fs
shrb
pop
outsl
in
loope
and
xchg
outsb
gs
pop
outsb
push
push
push
dec
outsb
lock
ret
es
ret
dec
popf
mov
xchg
mov
adc
mov
adc
push
out
jb
popa
lret
mov
xchg
rolb
inc
lods
jge
or
or
cbtw
mov
stc
fdivl
jge
ffreep
rcrb
or
dec
stc
pop
pop
xor
jno
in
add
sub
push
and
aas
into
imul
dec
push
mov
sbb
test
xor
lahf
adc
push
push
ss
stos
popf
and
sub
sbb
add
rol
enter
jbe
dec
popa
test
jg
lods
fnstenv
sahf
cmp
stc
ds
hlt
or
and
add
inc
ret
push
jg
jl
mov
addr16
push
cli
or
pop
add
test
dec
testb
push
push
test
mov
cmp
and
push
mov
ss
cli
in
push
mov
ljmp
cmp
jp
scas
mov
js
adc
ret
pop
enter
aam
fstpl
cmp
bound
imul
andl
movsl
cltd
adc
data16
sub
lea
fsubs
imul
sahf
sahf
mov
mov
shlb
repz
or
mov
and
in
jg
pusha
shl
fcomps
dec
fstpl
adc
nop
lea
pop
add
mov
or
bound
cmp
lret
dec
sub
sub
fwait
rcl
cmpsl
jmp
insl
mov
inc
clc
mov
add
sub
bound
sbb
jg
pop
jg
mov
cmp
cli
mov
js
push
imul
es
pop
test
pop
mov
test
xor
stos
cld
xchg
addr16
adc
je
jbe
popa
lds
mov
fcoml
jg
pop
xchg
pushf
jne
mov
inc
xchg
pop
xor
add
dec
adc
mov
cmp
mov
jbe
xchg
fsubrs
fimull
icebp
icebp
xor
pop
xorl
or
mov
xlat
xchg
add
aad
in
mov
into
sar
mov
mov
out
lcall
inc
aam
fs
adc
xchg
test
jl
jmp
iret
jne
pop
inc
cs
add
cmpsb
cli
rclb
pop
mov
mov
into
in
pop
int
js
bound
inc
imul
fadd
jle
imul
push
andl
je
scas
bound
push
push
out
iret
and
aas
xchg
lcall
pmaxsw
adc
jge
jnp
stc
cmp
mov
fnstsw
and
and
sbb
aam
cmpsb
cmc
mov
inc
xor
ja
bound
nop
cmpsb
idivb
fsubrl
nop
test
cmp
and
jg,pn
inc
stos
lods
stc
pop
mov
push
jnp
gs
dec
cmp
pop
jle
dec
pushf
idivb
xchg
mov
sti
hlt
or
add
or
test
adcl
mov
fisubl
incb
pop
shr
sbb
jmp
popf
imul
jno
cmc
push
ljmp
int3
dec
cwtl
pop
add
daa
mov
push
jns
icebp
adc
addps
sahf
mov
xor
daa
nop
shrl
xor
test
pop
inc
mov
push
adc
push
jnp
push
rcr
lret
mov
into
mov
int
mov
lods
iret
lcall
adc
andl
lret
addr16
dec
push
repnz
popa
ss
fcmovnb
dec
mov
in
jae
lods
inc
mov
loop
fdiv
adc
das
mov
movsb
xor
orb
je
loope
xlat
cmp
mov
ret
inc
lret
ret
jns,pt
or
mov
cltd
xchg
fldcw
out
lret
shrb
jg
aaa
sub
jo
std
repz
lea
cmp
arpl
cld
inc
pushf
xchg
and
jbe
stos
mov
jne
dec
jg
lea
add
in
jle
cltd
cmpsb
cmpsb
outsl
iret
pop
pop
cwtl
fcoml
aas
movsl
pusha
sbb
mov
xchg
adc
cmpb
pop
adc
or
inc
mov
imul
jecxz
pop
aam
push
mov
fidivl
or
jp
aas
out
out
cmp
aas
ficomps
mov
or
aad
mov
inc
shrb
addr16
and
dec
daa
lret
add
push
daa
lods
cmp
aas
rcl
out
or
mov
mov
push
mov
jmp
cmp
shlb
ljmp
push
dec
jnp
gs
adc
add
int
dec
pop
test
or
and
cmpsl
lahf
cld
mov
ja
fistpl
fdivl
test
fsts
rcll
in
add
dec
pop
dec
xchg
sub
push
adc
es
fildl
sub
push
xchg
add
jp
aaa
mov
cmp
mov
xchg
dec
loope
test
pop
movsb
mov
mov
in
jg
pop
mov
repnz
sbb
xor
or
ret
in
data16
rolb
mov
push
xchg
fmull
xchg
popa
stos
movd
shr
rolb
mov
ds
and
dec
or
or
scas
add
rorl
sub
push
jp
stos
outsb
ds
and
mov
in
pop
sbb
pop
clc
dec
aam
test
pop
xor
rclb
xor
push
cs
add
mov
ss
subb
ss
shlb
orb
mov
fwait
xchg
add
push
jbe
add
rcrl
cmp
mov
in
dec
jl
xor
mov
and
in
je
ja
dec
ret
mov
or
dec
inc
dec
xlat
xor
popf
addr16
rorb
popa
adc
sbb
add
mov
movsb
jmp
mov
nopl
jecxz
dec
dec
push
jge
push
dec
cmp
cmp
fdivs
ret
xchg
add
pop
fnstenv
or
lret
aas
cs
dec
mov
fisubl
xchg
imul
mov
fstpt
scas
filds
jmp
add
rorl
sbb
push
movsb
jp
adc
dec
rcl
fists
lds
dec
mov
jbe
movsl
dec
jne
xlat
and
cmp
mov
nop
jp
mov
mov
pop
in
rolb
jg
out
insl
sbb
sbb
add
pop
push
mov
jl
jp
jge
mov
xchg
mov
cmp
mov
mov
loopne
xor
push
lods
rcll
loop
xor
add
sub
cld
jo
repz
adc
cltd
cmp
lret
xor
int
fdivs
sbb
xchg
mov
xchg
push
push
push
push
rdpmc
sub
or
sub
lahf
xchg
dec
ret
mov
push
dec
inc
das
outsl
dec
push
xlat
outsb
frstor
dec
or
mov
jecxz
outsb
stos
cld
imul
js
jle
cmpl
mov
sbb
jge
mov
cmc
fs
cmova
cmpsl
cltd
or
mov
sub
jmp
addl
mov
xchg
ljmp
mov
jle
mov
or
and
and
movl
xchg
testl
mov
cltd
jl
outsb
jb
movsb
add
aas
divb
or
push
pop
add
cwtl
mov
mov
dec
test
sub
pop
pushf
aam
mov
mov
mov
and
ss
pusha
adc
mov
fsubl
pop
test
gs
xchg
ja
or
and
lahf
sahf
aad
mov
push
dec
lea
inc
add
inc
fsubs
push
shl
xchg
mov
fsts
jmp
jecxz
aad
mov
xorb
sbbb
nop
inc
mov
jae
fnsave
jecxz
into
pushf
push
dec
or
pop
popf
sub
gs
and
dec
add
xlat
jbe
in
fcomi
pop
dec
int
fwait
ret
xchg
mov
sub
stos
das
mov
or
movsl
sub
mov
add
cmpsl
cmp
adc
xchg
andl
jns
shll
inc
stc
jns
ret
int3
imul
or
fdivp
test
push
nop
push
dec
sub
cmp
lods
fs
inc
cltd
xchg
loop
xor
or
cmpsl
pusha
out
mov
ret
notb
pop
or
xor
inc
push
pop
pop
popa
je
icebp
mov
jg
and
hlt
mov
xchg
push
or
test
sub
adc
pop
add
test
mov
rcll
or
xchg
ja
sbb
and
fcompl
enter
pop
test
mov
jg
js
std
sub
jmp
call
fdivs
jecxz
fwait
call
add
ljmp
cmp
insl
mov
jb
notl
or
lret
lret
sbb
pop
or
loope
addr16
xchg
out
cmp
lret
mov
gs
mov
sub
jae
sbb
push
adc
cmp
pop
add
jno
in
mov
jg
mov
int3
push
inc
xchg
enter
fidivl
es
addb
fimull
xor
and
bound
pop
xor
and
sahf
xor
push
or
jmp
xor
sub
imul
xchg
cmp
cs
push
repnz
jl
cli
loope
adc
xlat
int
pop
jnp
jne
add
jbe
cmp
stos
pusha
aas
in
nop
mov
pushf
pop
std
xor
insb
or
popa
divb
je
cmp
aaa
es
in
push
xchg
rcll
fidivrl
into
fdiv
test
or
leave
cltd
or
mov
popf
sbb
pop
test
fldenv
add
iret
flds
pop
mov
ljmp
pop
call
xchg
pop
lret
fadds
fs
in
xchg
ror
leave
pop
scas
aad
test
mov
ljmp
ss
xchg
ret
jnp
and
stc
shlb
jno
cltd
in
int
and
bound
ret
outsb
mov
mov
in
push
jae
xor
int3
inc
adc
cmp
insb
into
out
aas
out
xchg
xchg
sbb
enter
inc
or
ljmp
push
mov
cmc
mov
jae
jg
sbb
adc
cmpb
xchg
mov
cs
in
mov
in
in
jge,pt
sub
mov
mov
push
xchg
and
inc
or
push
test
in
mov
cs
andl
pop
and
push
js
mov
test
xor
rorl
popa
pop
push
adcl
mov
sbb
sub
stc
dec
cwtl
inc
xchg
in
or
imul
xchg
ret
push
sbb
loopne
aad
out
lcall
add
sbbl
adc
out
fldenv
inc
das
fbstp
dec
cmova
add
inc
jbe
mov
stc
inc
mov
daa
jge
dec
int
cld
or
outsl
scas
icebp
and
jnp
jo
pusha
lcall
lret
sti
xor
cmp
adc
jmp
push
loope
xchg
mov
cwtl
sbb
data16
out
cmpsb
xchg
cmp
mov
insl
dec
pop
or
add
mov
jbe
jp
cli
rorb
sti
sub
cltd
or
movsb
sbb
ret
push
arpl
mov
jle
jno
and
dec
cmp
pushf
cld
sbbb
jno
cmc
cmp
mov
fidivrs
mov
sti
mov
mov
add
scas
add
mov
js
pop
add
push
and
mov
cwtl
lds
aaa
mov
cmp
add
or
loopne
dec
shrl
testb
mov
arpl
es
push
aad
and
fcom
pushf
and
and
sbb
mov
in
outsb
pop
or
pusha
jle
movsl
mov
sub
mov
dec
out
hlt
pop
dec
aam
lahf
lods
jns
jo
bound
js
xchg
push
push
inc
in
outsl
bound
fdivl
or
cltd
and
inc
fwait
adc
aas
ja
mov
or
sbb
movsl
and
push
int3
inc
pushf
inc
ljmp
int3
mov
push
fimull
jae
mov
push
shrl
adc
cmpsl
pop
sti
subb
aam
scas
lods
push
push
popa
or
xlat
std
push
jo
jmp
popa
mov
push
mov
mov
cwtl
aad
cmp
in
cwtl
sti
xchg
xchg
mov
mov
dec
sbb
std
dec
sbb
fxch
xorb
pop
outsb
adc
and
loope
arpl
inc
bound
xlat
jmp
jo
rorb
testb
push
jecxz
dec
popf
aam
ja
add
mov
xchg
shr
in
jns
ret
rol
fdiv
test
inc
movsl
test
sbb
cmp
popa
jnp
add
dec
pop
mov
mov
shll
push
add
lea
int3
and
rcrb
inc
int
es
hlt
dec
xor
push
lods
xor
pop
xchg
xor
dec
aad
fnstenv
int
mov
jg
inc
jmp
cltd
xorb
fcoms
outsb
mov
push
test
into
outsb
mov
into
and
push
aaa
and
std
inc
pop
sub
call
int
inc
sub
pop
inc
out
clc
clc
dec
pop
insb
sbb
js
cmc
mov
ss
jae
mov
and
pop
mov
out
and
pop
icebp
xorl
mov
mov
and
in
mov
fildl
out
in
bnd
mov
loopne
ja
mov
push
je
adcb
mov
jbe
addl
aas
pop
imul
jo
sbb
push
fwait
popf
clc
mov
outsl
cwtl
dec
jp
loop
roll
int
fs
les
cmpsl
cmp
sbb
jp
gs
mov
adc
popf
sbb
jno
repnz
in
jle
test
gs
sbb
aam
lret
rcrb
cmpsl
ret
xchg
sbb
into
aaa
insb
push
dec
inc
pop
mov
xor
es
lret
push
iret
inc
pop
xor
lahf
xchg
insl
faddl
imul
lds
mov
add
setbe
adcb
fldenv
cmp
clc
mov
or
rep
test
pop
lahf
add
fwait
lods
sub
jns
int
sub
lahf
ret
cmpsl
jb
cmp
xchg
test
mov
mov
xchg
repz
fildll
mov
xchg
xchg
mov
aad
inc
cmp
adc
lcall
shl
mov
dec
push
push
jns
or
loopne
fdivr
repz
adc
fisubrs
addr16
mov
sub
stos
int
popa
adc
cmp
dec
popa
fsubr
mov
outsl
mov
mov
xor
pop
xchg
push
and
idiv
mov
ret
ja
sub
mov
mov
daa
adc
in
lea
jnp
arpl
jmp
xchg
lret
in
jmp
xor
dec
inc
and
jne
jl
cmpsb
sub
add
hlt
push
add
inc
aas
and
push
push
dec
fistpll
ja
lret
inc
xor
inc
push
adc
mov
xor
lret
mov
jmp
and
les
inc
icebp
mov
and
jecxz
cltd
lods
addr16
inc
rclb
push
pop
sbb
sub
mov
insl
lock
mov
jo
cwtl
cli
cmp
shll
addr16
push
lock
out
mov
jbe
imul
xor
cwtl
repz
repz
add
adc
mov
jg
sbb
repz
into
test
mov
push
inc
aaa
sub
popf
movsl
ds
add
push
mov
dec
int3
iret
repnz
cmpsb
xchg
in
fdivrs
test
imul
sarb
leave
jmp
mov
hlt
ss
pop
sub
mov
or
es
lock
dec
lret
mov
sub
out
sti
mov
repz
mov
aad
xor
or
inc
mov
dec
sahf
sbb
lcall
jbe
aad
pushf
jns
cwtl
jbe
addb
cmpsl
ja
xlat
incl
fmull
and
add
out
aaa
enter
js
add
jbe
adcl
push
pop
test
adc
call
sub
cmp
xchg
aas
or
xchg
xchg
xchg
inc
xchg
xchg
mov
pop
cmpsb
repnz
push
shrb
mov
jb
add
jno
mov
ljmp
pop
cmp
popf
popa
adc
stc
xlat
and
fmull
int
jle
cmp
mov
mov
mov
js
and
dec
mov
cmpsb
pop
std
lcall
add
rol
dec
mov
lods
add
subb
rcll
xor
and
dec
pop
add
push
stc
je
mov
and
pop
mov
xor
rcll
dec
push
ficomps
lcall
push
xorb
dec
ss
mov
or
mov
lds
inc
jle
dec
scas
stc
sbb
sbbl
push
outsb
aaa
lds
jnp
in
mov
mov
push
xchg
enter
cmpsl
int3
data16
jmp
outsl
int
inc
inc
lea
push
mov
xor
push
xchg
and
pushf
add
hlt
stos
lea
and
rcrb
les
fiaddl
xchg
inc
in
push
mov
xchg
gs
adc
sub
pop
mov
pop
fcompl
xchg
jbe
add
mov
movsb
sbb
orb
in
push
test
addl
push
divb
sbb
dec
and
cmp
call
movsb
in
pop
jbe
bnd
insl
xor
scas
jnp
fdivrl
sub
mov
xchg
popa
mov
cs
sbb
sub
in
cltd
mov
push
mov
or
aas
iret
ljmp
int
mov
cmpsb
jge
push
adc
jne
fwait
cmc
clc
out
mov
pop
repz
xchg
push
adc
mov
inc
dec
inc
outsl
cli
mov
cmp
pop
sbb
dec
jo
lds
mov
jns
in
xor
push
sbb
fpatan
inc
xchg
pop
jg
insl
xor
fsubp
out
test
dec
mov
pop
mov
cmpsl
push
jne
imul
nop
ljmp
out
aad
stc
orb
adc
push
push
mov
pop
fcmovnbe
mov
sub
fcomps
inc
xor
mov
mov
imul
shrl
and
or
mov
mov
and
cmp
dec
sbb
inc
es
push
mov
or
pop
mov
xchg
mov
shlb
fldenv
mov
cwtl
and
push
push
cs
jae
inc
orb
jns
mov
push
repz
add
mov
xchg
cltd
sub
dec
jbe
sbb
mov
insl
fwait
ljmp
mov
cs
imul
mov
pop
shll
nop
push
mov
scas
arpl
jnp
leave
mov
push
mov
mov
test
jp
int3
pop
cmp
arpl
fsts
jmp
xor
sbb
repz
jge
in
cltd
sahf
sbb
out
test
cmc
test
negb
xor
dec
filds
and
jp
push
xor
pop
cmp
das
xor
bound
dec
sarl
mov
or
or
or
aad
sbb
or
iret
imul
aas
mov
sbb
std
test
xchg
and
cmp
pusha
int
mov
adc
cmpsb
loop
js
pop
int
push
shl
daa
add
bnd
stc
popf
jl
xlat
inc
arpl
outsl
adc
push
loopne
mov
lcall
int3
dec
cmp
xchg
jne
cld
iret
negb
pusha
add
mov
jbe
dec
inc
xlat
repnz
test
push
repnz
je
fsubp
out
xchg
lret
loope
mov
mov
mov
and
fchs
pop
pop
int
lret
out
pop
pop
hlt
add
jno
mov
daa
pushf
adc
or
xor
or
xor
aam
loopne
jnp
mov
es
inc
dec
or
notb
sub
push
out
sub
push
push
jno
test
mov
lahf
fstpt
xchg
jns
jle
push
jecxz
in
xchg
xchg
int3
int3
insb
cmpl
xor
sbb
out
mov
mov
std
xchg
mov
aaa
cmp
popa
sub
sub
scas
sbb
pop
andl
add
mov
mov
adc
xchg
cmc
jecxz
test
cmc
lcall
cmp
mov
out
mov
sti
insb
mov
cmpsb
inc
add
cmpb
out
mov
lods
out
xchg
scas
cmp
or
pop
xchg
insb
xchg
mov
add
gs
shlb
movsl
and
xchg
cmc
adc
int
fwait
rorb
adc
xlat
mov
mov
popa
push
dec
and
dec
mov
fisubs
cmpb
arpl
shll
pop
bsr
loop
fldl
or
test
stos
push
mov
stos
adc
push
inc
das
mov
push
test
sbb
addr16
fldl
xchg
or
jbe
push
movsl
mov
stos
out
adc
push
faddl
jmp
dec
ds
dec
leave
and
aaa
mov
inc
adcl
fnstenv
xchg
testb
push
sbb
loope
stos
cld
shlb
cmpl
es
mov
mov
movsl
sbb
cmpsl
or
lds
xor
or
lea
ds
sbb
outsl
outsl
bound
xchg
dec
rcrb
and
outsb
jg
pop
push
scas
pop
popa
mov
decl
adc
inc
mov
lds
shl
sbb
mov
movsb
add
out
lret
mov
cmpsb
adc
shlb
pop
or
das
inc
sbb
cmpb
or
enter
movsl
xchg
adc
pop
or
divl
add
repnz
pop
jae
push
sbb
in
mov
insl
adc
xor
popf
jns
daa
into
fmul
add
lret
jmp
push
mov
cmp
ljmp
mov
ljmp
repz
outsb
repnz
mov
add
movsb
jp
xor
jne
loop
dec
addl
add
push
rolb
mov
xchg
popa
dec
cmp
in
jb
xor
repz
sub
cmp
add
xor
movsb
addr16
mov
and
js,pn
jae
enter
mov
test
lret
xorb
adc
and
mov
adc
icebp
pop
mov
popf
emms
out
psubd
sub
loopne
addr16
out
adc
dec
inc
cmc
out
dec
out
pop
pop
clc
jg
jp
pop
jo
mov
in
jg
inc
add
cmp
sbbl
popa
mov
fidivs
cs
fisubrl
cmp
mov
fistl
pop
sbb
cmp
test
test
cmp
mov
inc
pusha
out
jns
ficomps
xor
cmpb
dec
stc
gs
and
mov
jl
sub
arpl
out
push
xor
movsl
sbb
adc
mov
aam
les
jg
std
mov
das
xchg
testl
pop
lods
mov
movsl
mov
icebp
inc
sti
mov
add
in
leave
cmpsb
cmpb
test
sub
lods
loopne
nop
sub
aaa
stos
test
iret
cltd
rolb
data16
jnp
mov
mov
ljmp
dec
or
enter
nop
loope
add
mov
test
je
pushl
enter
int
dec
imul
cmc
out
flds
in
loope
pop
dec
xchg
out
pop
pop
pop
sbb
jge
mov
xor
aaa
push
push
push
je
das
push
cmpl
push
sti
adc
lret
fwait
adc
cmp
add
dec
dec
sub
jmp
sbb
pop
fildl
inc
sbb
add
xchg
cld
subb
stos
lahf
push
addr16
mov
dec
pushw
adc
out
push
dec
and
lcall
popa
mov
dec
adc
shlb
fdivp
int3
lds
xor
lea
imul
mov
jnp
cwtl
or
leave
fsubrs
push
out
imul
push
out
pop
in
mov
stc
inc
cwtl
cmpsl
out
rorb
xchg
inc
repz
inc
es
sub
push
pop
aas
adc
js
cmpsl
xchg
sbb
pop
lcall
cmpsb
popf
leave
enter
sbb
bound
and
mov
aam
fucomi
insb
outsb
ja
push
test
pop
scas
lea
into
inc
sbb
mov
cwtl
loopne
sahf
mov
fldl
cmp
xchg
mov
pop
jge
dec
mov
outsb
dec
out
shll
pop
push
xchg
push
inc
dec
or
xlat
ljmp
lock
mov
mov
iret
add
add
pop
mov
popa
push
jnp
add
scas
les
mov
mov
mov
popa
fiaddl
mov
bound
idivb
aad
mov
js
and
cld
add
stos
faddl
add
fsubrs
push
scas
sbb
jge
mov
xor
mov
jle
icebp
push
xlat
inc
scas
add
inc
mov
popf
cmp
ljmp
iret
mov
jg
dec
sbb
cmp
inc
loopne,pt
adc
or
mov
clc
in
sbb
std
repz
or
mov
mov
pusha
in
je
daa
push
repz
jmp
loopne
dec
or
les
sub
push
dec
shrl
imul
call
push
aad
xchg
mov
stos
mov
push
or
daa
cmp
into
cmp
pop
rcrl
fucomi
nop
adc
insb
imul
popf
dec
fwait
inc
sub
mov
add
push
cmp
mov
dec
sub
jns
and
and
mov
lret
or
clc
or
in
insb
push
dec
cmp
fnstsw
mov
xchg
andl
cmc
cld
jle
test
xchg
cmpsl
xor
in
push
popf
pop
xlat
dec
repz
adc
sub
inc
aas
and
mov
popf
popl
xchg
sahf
sub
icebp
cltd
movb
ret
mov
jae
in
nop
mov
inc
jae
jp
ficoml
adc
or
aaa
cmpsl
repnz
repnz
add
arpl
jns
int
lods
dec
lcall
mov
shr
dec
call
sub
xchg
mov
mov
sbb
dec
sahf
mov
jp
scas
cwtl
outsb
mov
subb
lds
popf
cld
sbb
int
sub
sub
lret
pushf
movsl
jmp
xor
push
adc
pop
int
xchg
push
stos
pop
mov
sarb
push
jns
rorl
xchg
into
mov
idivl
lock
and
repz
in
or
lahf
out
sub
pop
scas
pop
std
jl
fwait
dec
pop
dec
mov
push
ljmp
pop
scas
fwait
mov
inc
inc
in
lea
push
inc
add
dec
xrelease
xor
xchg
jno
addl
out
sahf
cltd
sub
cmp
into
out
xorb
scas
mov
xor
int
or
popa
inc
lret
xor
enter
out
cmp
cmpsb
xor
lcall
lock
pusha
xchg
out
inc
pop
out
fcom
lret
loop
cltd
bswap
cmpsb
clc
lods
or
std
dec
insb
dec
sbb
sub
push
loope
out
pop
dec
xchg
testb
sbb
xor
inc
imul
add
adc
jbe
ret
sub
cmp
jl
mov
lret
jb
out
sbb
jmp
repnz
gs
cmpsl
add
daa
in
enter
mov
pop
ljmp
push
adc
inc
xlat
movsl
push
xor
adc
pop
jmp
jnp
pop
sbb
mov
das
movsl
xchg
dec
xor
ss
setae
sbb
push
pop
fisubs
daa
int
popf
popf
into
inc
sub
sbb
cmpsl
movsb
ret
pop
aaa
inc
enter
mov
out
aaa
lret
jmp
andb
rcl
addr16
frstor
repz
ja
dec
cmp
dec
sbb
jae
cmpsb
les
or
add
out
in
gs
adc
hlt
std
add
in
sahf
fldt
loope
pop
outsb
hlt
call
and
mov
pushw
out
lret
push
jo
cmp
insb
add
push
mov
mov
fmul
or
fidivrs
sub
add
fwait
dec
jbe
das
arpl
pop
adc
nop
loope
rcrb
orl
push
jo
test
incb
push
icebp
inc
xor
loope
cmc
insb
add
mov
daa
incl
call
les
inc
or
cltd
in
add
pop
test
pop
addb
out
pop
test
push
es
mov
xchg
add
and
shrl
jge
out
cli
loopne
fiadds
lea
fwait
dec
adc
mov
mov
mov
hlt
pop
mov
mov
mov
fnsave
mov
cmc
and
lret
mov
daa
sbb
test
mov
jbe
fldenv
add
dec
popa
inc
mov
mov
fadds
xchg
mov
and
mov
jmp
aam
imul
leave
jae
dec
or
xchg
sub
stos
pop
adc
outsb
out
jg
rsqrtps
jge
cmpsl
shlb
in
or
popa
in
push
ror
iret
sarl
dec
into
push
std
mov
jae
adc
stos
out
mov
ret
pushf
test
dec
mov
jmp
mov
inc
dec
js
mov
fs
pop
xor
pop
dec
mov
jl
stc
jmp
mov
add
in
pop
pusha
jmp
leave
mov
shl
sub
xor
xchg
imul
jmp
imul
lods
ljmp
mov
lea
push
mov
popa
jmp
adc
jns
xchg
insb
sbb
dec
ficoml
jo
xor
cmpsl
shrl
pop
fimull
subl
xchg
iret
push
jns
mov
lods
jge
ja
ds
stc
adc
das
les
lahf
movsb
mov
in
and
and
lea
scas
push
push
and
lret
or
xchg
gs
sbb
jmp
jmp
daa
sbb
rorb
push
add
cmp
push
jl
std
add
fsub
lock
loopne
pop
cmp
add
adc
xchg
pop
stos
adc
or
sub
mov
add
mov
shll
gs
cltd
jno
adc
mov
addb
jg
jp
jnp
fiaddl
adc
rcr
lahf
neg
mov
in
jecxz
leave
fwait
pop
les
lea
fmull
xor
pop
fnstcw
pop
sbb
lcall
sbb
loop
adc
daa
out
pop
cld
ds
repz
jnp
lods
push
bound
orb
adc
fnsave
sti
jge
mov
dec
xchg
xlat
inc
mov
cmc
cmc
mov
pusha
mov
jns
and
push
or
dec
ss
dec
xchg
xor
inc
in
out
hlt
pop
aad
push
dec
int
xchg
in
in
mov
aam
jne
aas
movb
popf
cli
in
push
mov
in
mov
stos
sbb
add
and
pop
push
mov
cmp
dec
dec
mov
imul
mov
scas
mov
adc
pop
and
jns
clc
jecxz
lahf
ret
push
sahf
mov
xchg
dec
cs
add
cmpb
outsb
cmp
xor
movsl
xor
fisttpll
cli
pop
pop
push
mov
in
adc
jg
repz
ds
inc
das
leave
cld
xchg
and
pop
jle
push
pop
arpl
nop
ret
rorb
rcpps
mov
mov
cltd
jb
push
inc
or
ret
fidivrs
dec
ret
xor
sub
movsl
sbbl
mov
out
cmpsb
pushf
xlat
pop
dec
jo
dec
ret
cmp
hlt
xchg
or
add
xor
xchg
fwait
cs
ss
add
xor
test
push
stc
xor
sub
and
dec
jmp
pop
repnz
jo
enter
int3
mov
push
jae
lods
imul
push
das
cld
mov
lahf
sub
mov
and
sti
clc
cmp
test
test
popf
arpl
cld
mov
lods
add
sub
jns
imul
sar
test
xor
push
lret
add
loop
in
mov
jnp
pusha
andl
mov
ja
mov
cs
mov
inc
sbbb
in
cltd
push
movsb
sub
mov
aas
add
mov
lea
inc
sbbb
sbb
mov
lods
dec
pusha
sbb
inc
in
inc
or
icebp
rorb
push
add
shrl
mov
imul
mov
xchg
scas
cmpl
push
lods
mov
iret
mov
mov
stos
ret
mov
adc
lret
push
addb
jnp
sub
cmp
push
pop
xorl
pop
fs
xor
mov
jbe
mov
mov
or
xchg
out
outsb
pop
adc
xchg
push
lahf
mov
xchg
sub
mov
push
mov
dec
jle
or
lcall
out
push
and
subl
jno
jmp
scas
iret
loope
or
fdivrs
out
addl
push
or
dec
shrb
sub
jl
test
fistpll
rcr
mov
add
xchg
push
push
enter
test
sub
stc
repnz
das
aad
out
mov
ja
mov
ja
add
cmp
bnd
push
lods
outsl
incl
fdivrs
cmp
dec
xchg
sub
ljmp
shrl
scas
stc
cmpsl
je
arpl
xchg
mov
scas
int3
or
stos
scas
lret
mov
jns
pusha
add
lods
cmp
jle
shll
push
or
mov
xchg
sbb
fisubrl
addl
cwtl
aas
aam
xchg
xor
mov
call
pushf
repnz
lock
inc
rorb
mov
imul
jecxz
subb
pop
sbb
mov
adc
inc
cli
pusha
adc
lea
movsl
mov
push
inc
js
add
mov
insl
mov
adc
mov
faddl
test
pushf
int3
sub
jns
and
dec
addr16
push
jmp
bound
shr
fldl2e
mov
rorl
add
cltd
enter
sub
leave
jne
xchg
and
and
lret
insb
mov
in
test
loopne
dec
xchg
push
push
or
mov
or
gs
bound
in
add
xchg
pop
and
sub
or
les
repz
insb
cld
int3
test
outsl
xor
mov
push
ja
and
sti
mov
andb
imul
xchg
les
lret
repnz
into
push
and
xchg
push
cltd
in
jg
lea
lods
imull
ficompl
sbb
dec
push
scas
xor
imul
mov
mov
push
adc
mov
cmp
push
dec
mov
sbb
add
dec
xchg
adc
jb
jecxz
and
je
lret
mov
inc
pop
lea
outsb
mov
dec
inc
cld
xor
xor
pop
repnz
xlat
std
add
mov
pusha
push
aaa
test
sub
in
jp
popa
das
adc
outsb
mov
pop
add
aam
jno
shll
push
pop
pop
lods
inc
cmpsl
popa
je
mov
inc
xorb
jbe
cltd
xchg
jmp
rol
ja
pop
arpl
mov
inc
ss
movsb
popa
cs
pop
xor
nop
imul
lods
lret
sbb
inc
mov
pop
mov
cmp
je
mov
aas
loope
insb
imul
iret
mov
xor
std
psubq
out
sub
sub
mov
mov
mov
inc
cmp
ja
in
adc
call
jae
adc
mov
or
hlt
push
pop
and
and
jo
int3
cmpl
fsubrs
imul
pop
inc
jbe
loope
xchg
clc
aam
addr16
pop
jecxz
dec
in
xchg
dec
mov
adc
loopne
jns
adc
mov
xchg
dec
movsl
mov
adc
das
mov
xor
pop
push
pop
imul
or
mov
stos
aaa
lds
push
sbb
push
mov
push
push
aaa
pop
vpmacsdd
xchg
cmp
rcrb
repnz
cld
and
stos
sub
or
fstpl
pop
push
xor
es
adc
sahf
aaa
xor
push
or
xchg
xchg
std
pop
inc
je
bound
lret
loope
push
fimuls
or
pop
lahf
loop
shrb
gs
mov
pop
insl
sub
pop
gs
clc
mov
fmull
fwait
cmp
enter
aad
fsubp
mov
or
xor
cmp
rcl
sbb
mov
je
mov
dec
jne
shr
imull
popa
je
out
xchg
xor
loope
repnz
or
into
cmp
imul
pop
inc
xchg
xchg
movsb
pop
pop
mov
insb
mov
js
mov
je
outsb
jbe
jae
mov
adc
mov
jne
dec
clc
lcall
fimull
dec
xchg
ja
clc
les
pushf
jns
aad
inc
mov
xor
xchg
int3
xchg
scas
cmpb
or
sbb
insb
sti
mov
lock
xor
push
mov
insb
mov
out
xchg
out
jmp
mov
ret
andl
nop
out
pop
xchg
lock
push
add
xchg
cld
pop
or
cmp
pop
lahf
div
jno
add
mov
xchg
ja
lahf
loope
and
fsubrl
and
enter
imul
inc
push
xchg
mov
jecxz
jg
xchg
mov
cmp
xchg
and
or
or
lock
cmp
push
adc
sbb
outsl
or
repnz
jb,pt
inc
lds
cwtl
add
push
int
lock
insl
andl
push
mov
std
mov
outsb
push
rol
pusha
inc
pushw
jno
pop
adc
cli
aad
pop
push
nop
sbb
inc
xchg
in
in
push
mov
pop
mov
push
xchg
mov
stos
pushl
inc
adc
push
pusha
int
sbb
mov
cmpsl
addb
mov
inc
pop
in
aas
sbb
das
sub
rolb
and
xorb
push
sub
inc
sbb
aaa
mov
lret
filds
sbb
xchg
mov
sub
hlt
xor
loope
pop
mov
test
scas
loopne
push
aam
dec
dec
mov
add
gs
or
test
shrl
cmc
sub
loopne
inc
inc
push
leave
pop
xor
in
div
mov
sub
jg
mov
xor
or
imulb
mov
adc
out
add
unpckhps
js
loop
stos
ret
inc
and
jno
dec
jge
neg
inc
or
cmp
pop
mov
jp
bound
add
xor
mov
cltd
cmp
xchg
xchg
fs
aas
mov
jnp
mov
shlb
lret
aam
clc
in
test
lock
jo
shrb
mov
pop
and
dec
sub
pushf
pop
xlat
mov
cltd
loopne
pushf
mov
lock
cmp
ret
sti
jb
ss
cmp
fisttpl
out
in
test
push
rorl
or
test
push
pusha
mov
in
gs
xor
inc
xlat
jne
sbb
scas
hlt
xor
cmpsb
test
data16
sub
outsl
ss
mov
mov
mov
adc
sarb
xor
and
fdivp
jne
mov
jp
sub
pop
inc
or
sarl
lds
in
mov
adc
xor
into
hlt
jge
scas
dec
stos
shr
mov
xchg
inc
pop
push
mov
mov
into
add
jb
push
xor
enter
cmp
inc
xchg
cld
into
js
dec
movsl
dec
jle
jp
mov
pusha
movsb
pusha
iret
ss
sbb
in
fdivrs
shlb
fidivrl
testl
pop
stc
stos
mov
cmc
aad
mov
sub
jecxz
xorb
aam
ret
and
adc
cltd
js
lea
imul
scas
dec
sub
cld
mov
mov
or
aaa
mov
cld
in
mov
frstor
push
hlt
sahf
fcomps
lea
or
pop
jl
jmp
arpl
jmp
add
add
push
adc
out
xchg
gs
jl
lret
sahf
jl
or
dec
xchg
pop
clc
jb
push
fiadds
lea
fs
and
je
clc
push
sti
ss
or
shl
fsubs
out
stc
push
pop
mov
xchg
or
and
pop
sbbb
mov
out
cwtl
lods
jp
sub
lods
lahf
aaa
mov
cmp
sbb
lods
xchg
mov
lahf
loopne
lcall
js
lret
dec
nop
dec
iret
fstpt
xchg
mov
int3
bnd
mov
imul
inc
ret
mov
dec
rolb
mov
pop
jb
mov
sbb
cmp
push
loopne
aam
in
hlt
inc
aad
cmp
push
bound
je
imul
mov
jecxz
push
add
jp
fmulp
push
lods
push
cmp
loop
in
cmpsl
scas
xchg
adc
cwtl
add
jbe
enter
lds
fldt
or
jae
adc
jmp
imul
int3
jle
sub
xor
jmp
out
push
popl
clc
mov
inc
into
mov
push
mov
out
jo
dec
jmp
aam
mov
and
rcll
fsubrs
stc
stc
mov
stc
scas
int3
sub
ljmp
sub
xchg
or
lret
lret
or
les
repz
push
xchg
fbld
cltd
and
xor
cs
pop
int
cmp
aaa
rep
xchg
sbb
outsb
mov
adc
filds
mov
sub
jle
shlb
pop
and
outsl
mov
jb
cmc
xor
lods
pop
adc
stos
adc
ja
insb
stc
xor
add
pop
dec
jb
repnz
add
gs
in
js
xchg
subl
pop
jb
push
jbe
push
stos
inc
outsl
cmp
in
adc
cwtl
mov
xchg
sbb
jbe
xchg
fsubs
sbb
jno
xchg
jno
icebp
lods
bound
gs
fstl
pop
push
or
and
pop
push
pop
cld
pop
enter
lea
xchg
filds
nop
lahf
daa
adc
mov
ja
adc
aam
dec
jno
nop
xchg
push
and
pop
and
aam
sub
mov
movsl
aas
jl
and
rcrb
fsubrl
das
ret
jae
popa
jle
push
jbe
xor
inc
cmc
push
shr
jl
pop
inc
mov
push
test
test
aas
inc
push
shll
mov
inc
pop
pop
xchg
test
test
and
pop
gs
sub
lret
xor
add
addr16
inc
outsb
aaa
subl
inc
out
inc
mov
inc
pop
sub
pop
mulb
and
leave
mov
dec
in
add
inc
cli
mov
cmc
enter
popf
test
and
jnp
ja
stos
bswap
jae
lcall
adcb
push
stc
and
mov
dec
test
pop
add
loope
adc
nop
mov
int3
enter
fldl
push
subl
and
js
mov
xor
repz
clc
divl
inc
mov
sbb
xchg
inc
out
pop
leave
inc
movsl
and
dec
dec
mov
ds
push
xchg
insb
or
cmp
mov
bound
sbb
add
xchg
jg
mov
cmpsb
inc
and
adc
out
cs
push
dec
jge
int3
pop
push
jae
aas
sub
lahf
enter
ss
out
movsb
mov
pusha
insl
leave
int
xchg
mov
ja
push
cli
out
add
add
das
insb
fsubrl
in
mov
js
cmp
cs
mov
xor
out
cld
cmp
test
push
push
mov
lahf
dec
clc
lret
mov
addr16
mov
icebp
mov
int
inc
and
call
xchg
inc
pop
scas
or
push
jmp
xor
adc
push
es
cmp
loopne
jg
push
cmp
cmp
sbb
shll
sahf
push
push
pushf
loope,pt
push
les
push
cmp
pop
shrb
lock
adc
cld
inc
pop
enter
push
add
cli
push
mov
xchg
cmpb
mov
jo
pshufw
push
cwtl
and
shll
xor
cmp
repnz
outsl
pop
jo
sarl
ss
xchg
xchg
inc
divl
adc
xor
or
inc
addr16
push
xor
adcl
xchg
lds
subb
movsb
jo
adc
lret
dec
xchg
add
shrb
dec
stos
or
aam
mov
sbb
femms
stos
mov
pop
push
in
jge
dec
or
dec
add
push
in
sbb
jo
dec
push
outsl
sbb
mov
cmpl
lcall
ljmp
ret
xor
repz
outsb
lock
rorl
inc
js
jge
sub
in
imul
jmp
cmp
lods
cmp
mov
cmpsb
add
inc
add
or
cltd
stos
and
adc
mov
inc
and
in
dec
jb
es
pop
lock
dec
or
cmp
lock
mov
xchg
jbe
sbb
pop
das
cmp
push
push
adc
test
adc
stc
sahf
xor
xchg
cltd
mov
stos
fcom
lds
inc
sub
adc
push
or
lahf
mov
dec
mov
pop
or
xor
jnp
repz
insl
int
mov
vpaddq
insb
mov
clc
clc
sahf
ds
mov
inc
dec
fbstp
and
sahf
and
hlt
xor
cmpsl
or
sti
movsb
arpl
ror
enter
inc
sti
xor
dec
and
jge
data16
mov
cli
in
aas
jl
fwait
fwait
scas
inc
xor
cmp
pop
dec
adc
push
test
mov
stos
jae
repnz
sub
pop
stos
push
cmp
popa
lea
cmp
movsb
cmp
pop
imul
xchg
ljmp
mov
in
sub
rcl
mov
lcall
xchg
xchg
call
in
sub
loop
dec
nop
mov
jp
dec
xchg
jle
decl
and
pushf
lret
xchg
push
inc
into
sub
into
ret
das
xchg
jne
xor
fsubl
inc
fwait
ret
jb
fstl
mov
cmp
mov
push
fbstp
and
ret
and
stc
add
rcr
repz
add
cmp
cld
cmp
shrl
test
jmp
test
not
mov
daa
add
dec
fistl
mov
cltd
aam
pop
jl
cld
lods
aaa
jg
dec
cmpb
adc
pop
pop
das
pop
and
inc
ret
pop
fdivl
shlb
outsl
movsb
not
imul
xchg
stos
test
dec
lock
lret
mov
add
or
or
mov
aad
sub
insl
dec
into
and
test
cmc
into
mov
repnz
pushf
push
cld
insl
cmp
mov
arpl
jle
movsb
pop
xor
std
and
add
jle
jecxz
imul
dec
call
or
loop
pop
inc
inc
out
mov
dec
jae
jne
loope
push
pop
cmp
dec
jae
adc
jmp
out
jne
mov
test
sbb
adc
pop
gs
imul
xchg
adc
mov
push
push
lds
filds
mov
sarb
jbe
cmpsl
cmp
mov
mov
roll
jecxz
lret
mov
cmp
push
xchg
dec
mov
pop
dec
mov
xchg
and
push
sub
cmc
scas
push
int
mov
or
cmpsb
ret
inc
mov
test
pop
cwtl
ds
lahf
cltd
xchg
jno
xchg
xorb
xchg
push
add
adc
and
gs
adc
outsb
inc
test
scas
push
mov
outsl
dec
es
inc
repz
test
and
mov
xlat
sete
rcrl
cmp
pop
in
hlt
sub
dec
loopne,pt
lret
cli
lods
jmp
jne
sbb
xor
jg
pop
mov
pushf
cli
mov
mov
dec
add
pusha
fisttpl
cs
cmc
arpl
sub
dec
lahf
in
rorl
xchg
and
mov
aas
jecxz
mov
insl
adc
jae
jecxz
icebp
rol
into
test
aas
mov
call
mov
mov
mov
mov
mov
out
and
cmpsb
std
mov
xchg
pop
cltd
pop
stos
push
fwait
adc
cli
fisubrl
insb
add
dec
push
scas
xlat
inc
stc
aas
push
or
decl
out
xor
lods
jl
mov
daa
movsb
fcomi
test
push
jbe
mov
ljmp
jne
ja
ja
stos
inc
aad
adcb
or
lock
mov
pop
push
xlat
xor
cmp
stos
inc
cld
mov
dec
pop
test
xchg
push
mov
mov
fisttpll
jg
xchg
ret
push
leave
pop
in
fbstp
cmpsl
divb
aas
inc
mov
fldcw
pop
push
mov
push
inc
and
clc
lcall
sub
or
mov
xorl
dec
je
rolb
into
dec
inc
test
ja
jle
pop
dec
cmp
cld
jecxz,pt
dec
adc
cmp
adc
add
inc
aaa
test
xchg
pop
dec
in
or
or
sbb
orb
arpl
adc
adc
sbb
adc
mov
pop
addb
nop
dec
xor
lock
movb
xor
jne
cltd
sti
rol
xlat
jmp
cmc
imul
xchg
cli
xchg
xchg
cmc
inc
add
lods
push
or
mov
jbe
jns
rorb
push
dec
sti
push
rcrl
jecxz
dec
add
jbe
addb
movsb
jmp
dec
data16
out
push
mov
int
sub
std
jb
fdivrp
das
adc
sub
and
xor
loopne
mov
xor
fwait
add
cwtl
cmp
aaa
incl
sub
mov
mov
push
inc
out
icebp
sbb
lahf
in
xchg
add
mov
sahf
test
jnp
fnstenv
addr16
xchg
adc
sbb
sbb
shll
pop
inc
inc
dec
mov
out
inc
xchg
call
outsl
in
jae
adc
imul
fnstsw
imul
pop
mov
clc
mov
iret
cwtl
xor
jge
popa
add
pop
add
pop
sub
in
push
add
rorb
dec
pop
cld
lods
xchg
pop
sub
sub
jp
test
add
sbb
jne
popa
call
xchg
mulb
xchg
test
movsl
ja
dec
and
xor
jb
cmpsl
daa
enter
dec
lcall
push
cltd
cmpsl
inc
cmp
imul
inc
push
and
imull
in
jmp
leave
xchg
xchg
test
xor
lret
addr16
sahf
pop
xchg
push
xchg
in
fisubs
adc
imul
jge
das
inc
mov
lds
or
mov
pop
dec
cltd
sub
add
mov
loop
adc
stc
movsl
lcall
jmp
pop
sbb
rcll
pop
cltd
cmpsb
int3
pushf
shlb
jo
push
test
stos
out
mov
test
adcb
sub
adc
add
sub
and
arpl
repnz
fs
pop
cli
jne
cltd
or
xchg
mov
xchg
sub
bound
pop
je
aam
loop
pop
popf
loop
imul
push
jg
add
inc
pop
and
icebp
add
ss
pusha
mov
pushf
in
es
subl
test
pop
clc
pop
subb
adc
pop
lods
push
test
es
push
int
push
xchg
shr
in
imul
inc
push
insb
pop
aas
sbb
hlt
adc
inc
in
ret
clc
daa
mov
out
jecxz
sarl
cltd
cmpsl
rorb
push
scas
test
bound
mov
jno
cmpl
mov
cmp
test
push
or
add
gs
je
pop
mov
pop
iret
mov
cld
lea
mov
xchg
cmp
aas
scas
movsb
scas
push
mov
mov
adc
aas
mov
jns
cwtl
mov
scas
pop
and
pop
sub
mov
xchg
aad
sarb
in
test
push
jns
stc
mov
inc
lock
xor
cmp
adc
aas
xchg
jmp
std
imul
jge
ds
push
add
cmp
enter
nop
sub
sbb
mov
xchg
sub
inc
leave
lock
inc
loop
movsb
dec
test
dec
add
and
adc
xor
inc
fnsave
sbb
mov
xor
jae
sub
mov
add
adc
aas
sub
stc
pushf
push
jne
ficompl
jb
jl
fidivrs
insb
mov
sarb
dec
mov
stos
iret
xor
xchg
cmp
jle
jae
lahf
test
repz
and
stos
xchg
dec
mov
xchg
iret
repnz
and
xchg
in
cmpl
dec
xlat
add
pop
sub
push
das
clc
mov
jae
cwtl
adc
adc
mov
pop
jle
imul
pushf
clc
mov
lock
dec
fstps
inc
sbb
movsb
push
xchg
pop
and
aad
xor
push
cmp
push
fistpl
or
pop
add
outsl
xor
stos
push
imul
push
xchg
jecxz
aaa
repz
out
mov
out
or
pop
mov
bound
pop
addr16
mov
es
push
adc
mov
sbb
fldcw
les
fidivs
cmp
mov
inc
add
jle
push
and
add
mov
sahf
and
sti
sbb
ss
and
jbe
adc
or
inc
jp
xchg
repz
push
jle
iret
pop
mov
sub
inc
inc
xchg
or
popa
cwtl
jg
add
jmp
mov
enter
int3
addl
fldt
jmp
mov
xor
ficompl
or
add
xor
dec
xchg
and
nop
and
imul
icebp
sbb
mov
and
jne
xchg
push
fidivrl
pusha
mov
clc
push
ret
bswap
iret
mov
mov
ja
int
call
pop
push
testl
les
roll
fwait
aas
repz
addr16
jbe
test
pop
pop
sbb
add
roll
mov
test
js
or
pop
mov
jne
and
mov
add
lcall
or
pop
xchg
test
pop
adc
js
push
pop
clc
mov
sti
pop
sbb
aaa
fidivrs
mov
aad
xchg
mov
lcall
or
in
cld
and
sbb
dec
test
cltd
jno
and
fistpl
pop
push
and
push
jmp
repz
mov
jp
jle
jb
and
hlt
fdivrs
addr16
lret
xor
imul
sbb
repz
mov
or
jmp
lea
xchg
add
cmpsb
pop
sbb
stos
aaa
jae
in
stc
stos
push
lretw
cmp
and
jb
fmulp
and
into
lcall
lret
adc
int3
ds
or
jecxz
dec
sub
push
mov
negb
mov
in
xor
out
imul
mov
scas
and
pop
dec
push
push
das
in
pop
ret
inc
dec
xor
imul
int
shl
std
adc
pushf
cmpsl
mov
aaa
mov
mov
sarl
rorb
enter
jl
icebp
xor
mov
hlt
sub
dec
outsl
inc
and
addl
roll
mov
fimull
mov
push
mov
dec
pop
push
push
add
mov
jo
mov
test
pop
pushf
jbe
in
inc
dec
sti
pop
mov
inc
sub
xor
cmp
insb
mov
cmp
and
ss
or
jne
mov
xor
inc
sub
cmp
fcmovnb
jle
shrb
dec
mov
fcomps
jbe
xor
ja
movsb
das
out
nop
adc
sahf
sbb
mov
push
insl
test
sar
std
jbe
jp
pop
inc
sbb
dec
test
sbb
pop
sub
fxch
jge
sbb
sti
xchg
sti
mov
out
test
mov
sbb
lods
pop
cltd
fildl
jl
or
lret
mov
lcall
sbbl
fs
cs
ret
pop
js
mov
lahf
movsb
popa
fisttps
xlat
push
pop
aas
jb
push
and
arpl
mov
insl
mov
cmpsl
adc
mov
push
ss
jg
fstpt
insb
hlt
push
int
push
xor
pop
xchg
movsb
out
in
repnz
mov
mov
in
xchg
cmpsl
and
lret
aas
sbb
cmp
inc
movsl
adc
lea
xor
lds
add
cmp
push
sbb
std
pop
jnp
mov
js
push
jp
test
lock
jbe
ljmp
xor
test
jge
add
dec
push
frstor
stc
dec
mov
dec
iret
hlt
lret
mov
sbb
mov
cmp
xorb
adc
add
cwtl
and
popf
mov
jnp
mov
insl
push
adc
add
cmc
mov
lods
js
in
mov
fwait
in
jno
xor
adc
mov
sub
in
and
je
or
pop
jmp
insb
or
pop
mov
mov
lcall
or
jle
pop
jne
enter
stc
in
adc
cmpb
pop
sti
sbb
push
xchg
mov
fldl
mov
leave
adc
aaa
rcll
decb
fisttps
cmp
xor
fstl
shrb
adc
and
xor
mov
xor
js
lahf
push
push
cmp
fldenv
push
popa
jl
dec
dec
jmp
icebp
pop
insl
push
bound
les
lret
cmp
add
movsb
test
xchg
mov
aaa
add
cltd
lods
mov
arpl
fstl
mov
cmpsl
lret
clc
pop
sub
test
leave
int
pop
sub
jp
sbb
sbb
xchg
aas
nop
adc
in
lea
and
cmp
fwait
jo
push
sbb
sbb
gs
repz
jo
rcll
inc
add
push
push
add
lahf
dec
mov
dec
dec
xchg
fisttpl
divl
aam
xchg
test
pop
push
mov
jg
popf
mov
aam
sbb
push
insl
cmpsb
pop
mov
movsl
stos
fsubs
mov
loop
cmpsl
jb
sub
pop
stc
ja
xchg
test
cli
cltd
jae
mov
push
lock
lods
or
aas
add
inc
aas
ret
dec
cmp
or
les
in
lds
fldenv
mov
push
push
xchg
xchg
xchg
les
ja
or
rcrb
or
lcall
cmpsb
outsl
out
lea
push
push
pop
cmp
in
daa
push
jno
sbb
into
cmpsl
enter
inc
rcrb
sub
add
inc
mov
gs
shll
inc
int
mov
fildll
stos
mov
add
inc
mov
dec
ret
add
jl
outsl
out
loope
imul
push
insb
lock
xchg
sti
push
mov
jbe
mov
xlat
add
outsb
shrb
sar
and
movsb
mov
adc
in
lcall
out
repz
les
insb
jmp
std
xor
pop
stos
in
int
cld
jo
xchg
adc
repz
addr16
fwait
sbb
or
jg
inc
jp
data16
lods
jo
xchg
xor
fildl
inc
push
gs
in
add
popf
cltd
pop
lahf
lret
lock
lahf
and
adc
ss
sub
mov
mov
lcall
xchg
iret
cltd
fwait
cmp
popa
cmp
int
or
test
mov
pop
into
pop
xchg
inc
jbe
dec
icebp
sarb
sti
faddl
xchg
in
cltd
and
pop
mov
mov
jmp
pusha
pushf
enter
push
adc
dec
fwait
gs
ljmp
mov
adc
mov
rcrl
mov
in
aaa
stos
push
mov
and
repnz
ficoml
and
adc
xor
jp
imull
mov
xor
imul
and
sub
arpl
jnp
adc
fmul
addr16
in
in
lock
scas
xor
jecxz
inc
cs
push
push
or
lret
je
push
cmc
popa
fiadds
mov
jae
ds
ljmp
je
stos
cmp
push
ljmp
nop
lds
test
xchg
lret
mov
sbb
adc
in
daa
je
dec
lods
cmpsb
xlat
jo
jo
loop
fistpl
or
xchg
push
mov
or
les
cs
or
or
xlat
mov
mov
icebp
stc
arpl
cmpsl
cmc
xor
pmulhuw
lods
stc
das
bound
add
arpl
dec
mov
mov
cmp
out
sub
sbb
imul
in
test
cs
add
arpl
imul
add
repz
outsb
sbb
dec
or
incb
cmp
fistps
push
int3
push
push
aam
ss
lcall
sub
dec
ret
sbb
ljmp
and
ds
fwait
iret
sbb
sbb
out
rolb
scas
fstps
scas
or
dec
jl
sbb
clc
mov
pop
inc
push
inc
push
xchg
dec
add
pop
add
push
xor
cld
mov
pushf
rcll
push
push
xchg
sbb
push
sub
int
adc
subb
dec
test
das
dec
add
jbe
xor
adc
int3
fwait
das
inc
xchg
xchg
pop
frstor
inc
sarb
adc
aas
js
sbbl
int3
inc
sub
shrl
scas
mov
push
xchg
data16
adc
inc
sbb
dec
das
push
movsl
lcall
mov
and
pusha
jbe
inc
and
imul
jg
push
ret
addr16
xor
js
cmp
mov
push
mov
lods
mov
fisubrs
xchg
pop
xor
and
es
and
imul
adcb
ds
cmpsl
adc
mov
pop
ret
lcall
inc
ja
shr
mov
mov
sub
aaa
mov
std
and
mov
adc
addr16
int
and
or
sub
dec
test
sub
mov
mov
dec
aad
dec
push
gs
ds
mov
pop
fisttpll
or
cwtl
adc
add
outsb
jnp
sub
xor
jne
je
sarb
push
fsub
pop
test
dec
jle
cmp
imul
push
inc
dec
leave
push
sbb
push
movsl
sbb
test
movsb
jl
or
jg
mov
aam
mov
and
dec
mov
push
mov
inc
scas
mov
addr16
sub
push
or
gs
push
sbb
outsl
cmp
jo
and
mov
push
lds
mov
int
jp
mov
push
repnz
nop
cmpsl
adc
nop
ss
jmp
mov
arpl
das
fdiv
call
nop
adc
out
mov
int
aas
rorb
push
leave
jl
adc
adc
push
xlat
and
pop
lret
test
je
xor
stos
test
mov
push
xchg
push
cld
fiadds
jl
pop
sbb
wrmsr
and
scas
push
movsb
fdiv
lds
cmpb
dec
jmp
mov
and
aas
xchg
dec
sub
ja
icebp
mov
lods
ret
pusha
fcoml
xchg
icebp
sarb
mov
sub
into
mov
sti
xchg
into
push
outsl
ret
fcmovu
push
cmp
sbb
add
dec
dec
jno
jne
clc
testl
lock
out
pop
loop
dec
aam
fldcw
orb
xchg
daa
inc
jp
pusha
push
lahf
test
cmp
movsl
add
and
lods
out
dec
lret
xchg
fidivs
adc
insl
pop
loop
jl
xor
vmovd
jae
dec
into
ds
mov
add
fldcw
insb
cmpb
loop
pop
mov
xor
cmc
sahf
mov
test
pop
ror
adc
dec
add
pusha
xor
repnz
insl
jmp
cmpsl
loopne
adc
xchg
lret
jg
sti
inc
icebp
pop
in
mov
pop
in
idivb
lret
mov
jo
mov
arpl
outsb
jne
arpl
in
fsubp
pop
pop
ret
daa
dec
ja
jne
test
popa
daa
pop
shl
pop
sub
push
push
add
inc
out
and
pop
xor
sbb
sbb
or
jle
sbb
pop
pop
dec
fsub
stos
inc
popa
jns
fimull
lods
mov
loope
cmpl
outsb
jo
adc
pop
sbbb
mov
jae
aam
mov
imul
dec
hlt
mull
cmp
xchg
fnsave
and
rcl
push
dec
mov
bound
dec
jl
sbb
and
add
fwait
push
cwtl
push
aad
mov
mov
int
fsubrl
jno
mov
shr
adc
in
nop
sahf
mov
roll
call
pop
flds
adc
push
imul
push
sub
sbb
sbb
std
jecxz
lret
enter
sub
push
pop
sub
popf
in
icebp
divl
cmpsl
xchg
movsl
pop
roll
in
mov
mov
or
pop
push
jmp
or
aam
xorl
lcall
sbb
push
push
mov
jae
mov
lret
cmp
out
lcall
add
out
xchg
sub
negb
add
insb
cmp
jl
adc
dec
enter
je
push
enter
sbb
pop
cs
mov
imull
jecxz
jae
jl
test
jle
into
sub
and
adc
inc
outsl
jl
inc
dec
mov
into
mov
icebp
pop
out
rclb
mov
aas
push
mov
jne
incb
mov
fiadds
je
cmpsl
mov
dec
outsb
aam
ret
push
shll
jp
outsb
lahf
push
ja
sub
pop
sti
scas
jno
dec
dec
loop
cli
xor
hlt
xor
pop
jmp
ret
cmp
jno
cmc
fimull
fcomps
pop
fwait
stc
jle
mov
sbb
add
mov
xchg
jecxz
aam
imul
adc
psubsb
movsb
jnp
or
mov
add
pop
arpl
xorl
fldln2
or
pop
int3
lods
addr16
pop
sbb
mov
inc
and
mov
repnz
jbe
pushf
ljmp
mov
and
shrl
push
mov
sbb
fbstp
or
inc
addb
mov
mov
iret
lahf
in
inc
add
mov
int3
push
imul
imul
jae
sub
movsb
jbe
scas
out
mov
pop
loopne
sbb
test
mov
xor
inc
jns
lods
jo
in
test
xchg
popa
scas
je
and
hlt
sbb
mov
cwtl
sbb
call
les
cmp
fisttpl
cmp
inc
faddl
ds
into
cmp
imul
pop
or
scas
imul
sti
in
add
orb
les
push
test
and
mov
into
adc
pop
jne
mov
scas
mov
cltd
mov
test
cli
add
in
inc
add
push
test
push
fwait
pop
pop
scas
cmp
dec
in
pop
cmp
jne
jecxz
xor
stos
aad
inc
rol
sti
pop
adc
xchg
frstor
loopne
js
fcmovnbe
xchg
insb
cltd
mov
and
lret
mov
add
sbb
pop
push
pop
add
movsb
adc
fmull
or
les
mov
fwait
bound
sub
push
pop
push
out
or
push
xor
sbbb
push
xchg
jno
cld
in
loop
jno
push
or
fcmove
ret
fisubs
pop
or
je
pushf
das
lret
pop
sub
mov
mov
xor
stc
in
jo
jno
scas
test
inc
sub
mov
test
inc
xchg
mov
push
fneni(8087
pusha
loope
sahf
push
sub
adc
leave
cltd
sub
cwtl
or
pop
push
adc
loop
lods
xlat
outsl
lds
cmp
aam
dec
sbb
jae
mov
in
lret
fs
outsl
cld
jmp
into
or
jo
cmp
mov
jmp
push
clc
cltd
leave
sub
pop
add
xchg
sbb
andl
push
iret
dec
mov
mov
gs
adc
adc
mov
mov
stc
fists
idiv
fucomp
rol
xor
test
adc
loope
sub
loope
jmp
mov
pushf
cmpl
pop
and
aad
mov
adc
xchg
xchg
or
divl
aaa
movsb
pop
cmpsl
fstps
xor
add
cltd
add
mov
xor
or
cmp
rolb
arpl
mov
ftst
ja
jle
enter
enter
testb
ljmp
mov
and
lcall
jno
enter
loopne
in
dec
or
mov
stc
cs
ss
mov
pop
fisubs
cmp
test
cmp
xchg
sbb
imul
ja
jb
adc
cltd
or
adc
pop
popa
sbb
dec
dec
in
pop
mov
rclb
dec
mov
mov
cmp
gs
in
xchg
jp
xor
mov
inc
adc
jno
fwait
inc
int3
in
dec
roll
in
int3
out
jnp
push
pop
mov
les
pop
scas
xchg
loopne
insl
xor
iret
fdivp
push
mov
inc
loop
adc
stos
dec
pop
pop
sub
pop
popa
sub
mov
lods
mov
iret
or
std
aas
mov
ja
es
and
fildll
adc
pusha
sbb
add
inc
rolb
add
inc
jnp
les
lcall
sub
jg
dec
xchg
sub
movq
test
inc
push
dec
repnz
push
jne
das
test
and
call
inc
xchg
fists
mov
enter
mov
sub
sbb
fidivrl
ja
cltd
gs
push
and
sub
xchg
sub
cltd
push
dec
adc
fsubs
sahf
int3
outsl
mov
pushf
aam
push
fimull
out
mov
lret
xor
push
cmp
popa
mov
mov
xchg
add
xor
xchg
movl
dec
sbb
sbb
sbb
mov
pop
lods
xchg
repnz
sub
icebp
daa
or
adc
inc
adc
rol
dec
in
fidivs
cltd
sub
rcl
mov
nopl
sbb
dec
adc
push
ljmp
dec
mov
jnp
sub
lcall
jl
pushf
push
dec
xchg
add
dec
dec
cmp
mov
jmp
sub
cmc
fnstsw
test
arpl
les
lea
clc
cmpl
ficompl
pushf
mov
mov
sub
dec
in
pop
test
hlt
pusha
pushf
test
shrl
loope
data16
es
lahf
pop
stos
sub
push
sbb
mov
je
arpl
js
std
dec
jns
jb
in
push
outsl
mov
jb
mov
aas
xor
dec
daa
scas
xchg
cli
inc
enter
push
cmpsb
pusha
int
cwtl
xorb
pusha
sbb
sbb
insl
imul
sub
cmp
sbb
mov
jne
jo
popa
out
movsb
cmp
aad
cwtl
inc
lea
sub
leave
pop
scas
mov
jns
in
xor
pop
sbb
std
cmp
jmp
and
dec
sti
xchg
and
cmp
dec
dec
cmp
sub
and
shll
fs
jno
sbbl
cmp
adc
data16
mov
sbb
dec
notl
lea
loope
imul
das
cmp
es
fsts
sub
fldt
sti
dec
pop
mov
fisubrl
out
mov
pop
movsl
inc
pop
pushf
test
or
rcll
sub
shll
rol
stc
push
or
out
mov
mov
cmp
jo
pop
mov
mov
cltd
into
aad
pop
leave
cmp
loope
int3
in
sti
stos
dec
mov
sub
cmc
cltd
inc
mov
push
test
lcall
subl
xor
data16
or
sub
sbb
lahf
xor
pop
sub
pop
mul
ja
push
shlb
xchg
jle
repnz
roll
out
xchg
jl
mov
pusha
adc
mov
ja
inc
ret
pop
mov
cld
testl
push
xchg
bound
pop
push
inc
mov
adc
push
or
jl
sbb
pop
add
inc
imul
in
sbb
adc
push
jae
fiadds
sub
xor
aas
iret
cld
cmp
mov
lret
mov
or
mov
xor
iret
mov
fdivr
adc
mov
mov
sbb
and
fwait
stos
es
stos
sbb
sub
lock
popf
addr16
imul
shrl
mov
lret
pop
xchg
pop
nop
sahf
cwtl
xchg
dec
lock
fbstp
or
cs
mov
sbb
iret
xor
fcmovnu
jge
jecxz
jp
xchg
lock
mov
fwait
push
xlat
fsub
in
aaa
daa
sbb
add
sub
jne
cmc
add
cmpsb
pop
pop
jae
pop
stos
ljmp
adc
adc
add
js
adc
xchg
out
int
cli
sub
int3
dec
sbb
sbbb
jl
fistl
in
or
loopne
test
lods
ficomps
mov
imul
scas
pushf
xchg
ret
aas
inc
repnz
cwtl
mov
lea
lahf
ror
cwtl
es
int3
jnp
mov
test
sub
mov
mov
xchg
mov
cmp
inc
mov
mul
pop
cmp
movswl
ss
ss
or
pop
mov
push
or
lds
inc
xor
dec
mov
xor
lret
xchg
test
pop
dec
out
mov
xchg
out
lock
mov
mov
jge
xchg
or
dec
mov
mov
mov
push
jge
and
gs
fists
aaa
xor
push
and
loopne
aad
jp
hlt
lahf
iret
out
pop
loope
loope
int3
sub
inc
popf
adc
fistpll
negl
push
and
rorl
das
lods
fcmovnbe
fwait
scas
movsb
mov
jo
mov
cmp
fmuls
and
fs
ss
dec
insb
mov
push
push
cmp
push
push
int3
bound
addr16
dec
sub
xchg
cmp
fsub
jns
dec
xchg
and
fists
pop
test
xchg
rolb
cmp
jl
xchg
jg
adc
mov
loope
jno
xadd
in
jnp
sar
mov
add
arpl
loopne
mov
hlt
mov
jg
mov
dec
dec
adc
iret
pop
insl
sub
lods
gs
test
stos
and
jg
jb
repz
dec
mov
and
negb
ja
lock
ss
aas
idivb
pop
in
stos
iret
out
mov
sub
fucom
mov
mov
cmp
insl
sub
movsb
add
adc
jl
push
mov
es
mov
fdiv
dec
daa
les
inc
push
cmp
cmp
adc
inc
mov
and
pop
in
in
dec
ss
mov
and
data16
daa
repz
ffreep
mov
push
cmpsl
xor
add
addb
clc
aad
push
pop
ret
xchg
push
dec
jl
xlat
dec
xchg
and
lret
int3
mov
out
push
icebp
sub
sti
pop
mov
jno
dec
gs
jnp
ds
pop
cmp
mul
inc
mov
push
jnp
and
daa
and
fstpl
dec
mov
sub
aaa
cmp
adc
jns
cmp
fnstsw
add
adc
and
fldl
ljmp
xor
xor
dec
incl
popa
mov
cli
hlt
add
sar
scas
ret
test
repnz
jb
adc
mulb
cwtl
cltd
cmp
subb
mov
add
inc
push
jecxz
outsl
add
movsb
add
add
std
fildll
hlt
or
and
jno
lds
scas
adc
pop
std
test
in
xlat
push
cmp
sbb
add
and
fiadds
outsb
loopne
mov
lds
jecxz
cli
mov
imul
int3
adc
lret
nop
aad
push
mov
ret
xchg
push
jo
push
jecxz
jno
ficompl
stc
stos
stc
in
ljmp
ja
lock
movsl
mov
lods
mov
xor
mov
mov
lods
inc
lea
loope
xor
out
test
sub
and
or
add
mov
fmull
xlat
bound
push
sub
notb
dec
ficoms
push
icebp
push
sub
stos
mov
loope
aas
ljmp
mov
push
mov
pop
sub
iret
mov
mov
sub
sub
sub
cltd
rcll
push
in
leave
xchg
cmp
fnsave
cmpsl
jne
lods
xlat
out
icebp
arpl
dec
in
xor
loopne
sub
popa
call
test
jp
orb
mov
arpl
jecxz
sbb
pop
out
cmpsl
enter
ror
mov
stos
mov
xor
nop
add
pop
lea
pop
jo
in
in
push
and
add
fidivrs
das
jnp
hlt
sbb
pop
mov
add
sar
cwtl
fisttpl
xchg
sub
sub
cltd
jae
scas
cmp
adc
pop
ljmp
in
fadds
cli
add
lds
xchg
addr16
mov
pushf
lods
xchg
je
jne
cli
mov
sbb
shl
lock
test
sbb
cmp
cmp
jp
jae
inc
push
jmp
adc
lcall
fimull
push
push
pushf
add
scas
push
push
jbe
js
stos
adc
jo
xorl
mov
mov
xchg
fwait
call
mov
sbb
push
jecxz
dec
clc
shl
outsl
mov
lods
add
jns
cmp
lahf
jno
mov
pushf
jns
mov
sbbb
decb
into
imul
pop
fisttpl
and
gs
into
into
imul
cmpsb
push
pop
push
add
lods
pushf
and
adc
xchg
cmpb
test
shr
popa
fwait
popa
xor
jb
and
jne
nop
and
cwtl
cli
sub
xor
jge
lcall
xorl
sbb
cmpsb
ja
dec
and
call
insl
scas
fiaddl
cmp
out
and
pop
cltd
pop
xchg
stos
xchg
lcall
pop
push
js
aad
and
testl
pop
movsl
jle
fidivs
inc
mov
push
test
sarb
arpl
sbb
jle
add
cmpsl
and
and
pop
je
push
mov
sarb
in
sahf
mov
lea
sbb
cmp
pop
push
or
mov
dec
addr16
mov
rolb
scas
addl
xor
fdivl
xchg
cmp
pushf
mov
mov
fldenv
inc
or
xor
loope
cmp
outsl
loop
sub
dec
dec
ret
sub
cmp
cmp
cmpsb
scas
cmp
jg
mov
call
jns
jp
sub
jns
ret
mov
movsl
dec
pop
loop
xor
cs
dec
iret
repz
gs
test
pop
fcmovnbe
pop
xchg
fidivrl
rclb
add
or
dec
mov
pop
pop
and
adc
jecxz
test
clc
jno
cltd
sahf
dec
or
pop
mov
ja
imul
pushf
testb
std
jns
xchg
arpl
or
dec
ds
sbb
jb
jmp
aam
xor
xchg
testb
cmpsb
jno
mov
pop
cmpsb
dec
adc
cmp
xor
xor
dec
iret
test
and
mov
adc
add
ret
in
inc
jp
xchg
push
inc
sub
les
orl
cwtl
sub
mov
iret
stc
out
cmp
adc
xchg
fildl
cs
inc
loopne
nop
xchg
out
fbld
in
fdivrp
mov
orl
cmp
or
aam
xchg
arpl
fnstsw
aad
shl
fsts
leave
jmp
jecxz
into
cmp
pop
push
insl
into
lcall
xor
and
mov
mov
or
int3
scas
add
mov
lock
cwtl
fimuls
jecxz
js
jo
or
pop
cli
mov
mov
adc
lods
add
shll
test
cmp
imul
fsubl
subb
inc
ret
push
mov
mov
lret
fidivrs
push
adc
add
test
aas
pop
cmc
push
add
push
inc
mov
sub
mov
call
jp
mov
mov
inc
int3
inc
imul
pop
pop
sub
ret
cmpsl
adc
aad
sarb
dec
hlt
mov
insl
fildl
jmp
xchg
xchg
and
ljmp
cmp
xchg
cmpsl
jle
ljmp
sti
mov
adc
sbb
into
mov
out
mov
or
adc
out
xchg
mov
inc
sub
adc
lds
mov
push
pop
into
mov
sub
stos
insb
inc
les
sbb
inc
sbb
pop
push
cmp
push
ds
push
cmpsl
inc
and
sbb
and
popa
xchg
scas
data16
negl
jno
jbe
add
jmp
and
loope
std
xchg
cwtl
mov
in
loop
jo
xor
xorb
ss
inc
jmp
jae
xchg
jmp
jne
jecxz
mov
bound
rorb
pushf
stos
xchg
lea
or
pop
sub
push
sbb
jp
rcrb
dec
push
mov
or
fdivl
xor
cmp
jo
xchg
fldl
push
lret
sbb
insl
lods
sbb
adc
jno
lret
sbb
fcomps
pop
lcall
lret
adc
xchg
adcl
jle
inc
shr
gs
xlat
cmpl
sbb
xchg
or
data16
mov
int3
jp
sub
lds
pushf
popf
scas
std
xchg
fdivp
xchg
sbb
dec
popf
sub
stos
pop
js
popa
cmovns
mov
pop
ss
dec
iret
push
mov
xor
push
lcall
sbb
cld
sbb
outsl
adc
dec
stos
std
mov
pop
xor
push
sbb
test
lret
cmc
pop
pop
pop
pop
pushf
test
push
and
push
cld
sub
pop
icebp
add
push
mov
and
xchg
inc
inc
test
xorb
jl
nopl
shlb
mov
add
mov
push
add
ficoms
adc
sti
xchg
dec
ret
ljmp
aas
and
imul
mov
cmp
pop
or
hlt
mov
adc
fldcw
ds
out
xor
insb
adc
xor
mov
adc
jo
mov
and
or
imul
push
lcall
imul
mov
sub
ret
test
dec
punpckldq
lds
popa
mov
dec
inc
lea
and
push
mov
cmc
bound
xchg
imul
adc
and
xor
add
js
dec
das
js
scas
in
jg
movsb
outsl
cmc
outsw
adc
push
outsb
jbe
lret
int
cmpsl
cmp
pop
push
xchg
in
push
outsl
lods
pop
xor
mov
adc
mov
add
sub
arpl
mov
mov
loop
shll
push
inc
jns
cwtl
fdivl
and
into
sbb
mov
cltd
inc
inc
or
dec
add
iret
xchg
or
mov
mov
test
cmp
aaa
adcb
mov
jo
and
sub
push
lods
xchg
mov
das
mov
loopne
clc
mov
mov
push
mov
dec
or
pop
mov
push
sti
xor
xlat
mov
mov
mull
mov
push
mov
adc
push
sbb
imul
mov
pop
xorb
mov
pop
mov
cmpsb
ja
dec
add
xchg
int3
loop
test
jnp
xchg
dec
clc
pop
lcall
mov
fisubrl
mov
fdivrl
adc
movsb
pop
ljmp
push
push
fidivrs
add
dec
jle
std
shl
popa
push
jle
jl
jne
mov
adc
dec
dec
mov
popa
or
jno
mov
jg
mov
cmp
mov
adc
ds
sbbl
mov
dec
stos
push
dec
lock
or
adc
cli
dec
test
mov
lret
cli
icebp
in
push
dec
ret
popa
js
pop
xchg
in
dec
push
pushf
cld
pushf
pop
out
pop
pop
cld
sbb
push
xor
or
jno
sbb
xor
cltd
test
imul
loop
xchg
movsb
xlat
cmc
pop
add
mov
pusha
mov
inc
movsl
cmp
outsl
jo
add
lds
repz
pop
leave
lret
rcll
mov
in
adc
insl
jb
xorb
or
mov
pop
fs
imul
rorl
fwait
xor
add
sub
mov
mov
cmpl
mov
adc
or
sti
cs
mov
or
cmp
mov
std
sbb
xchg
xlat
fwait
pop
xchg
mov
and
pop
or
out
or
jmp
add
push
leave
stc
cld
dec
pop
sti
sub
cmp
fidivrl
sbb
sub
inc
xchg
cld
cmpsl
dec
int3
pop
pushf
sub
js
sbb
leave
frstor
pusha
repz
sub
dec
rolb
and
pusha
add
push
and
mov
addr16
mov
mov
jo
cmp
push
push
cmpb
fidivrl
out
lret
jp
popa
call
xchg
hlt
mov
sbb
out
iret
jnp
bound
sar
inc
inc
imul
stc
dec
lcall
shl
mov
pop
cmp
add
push
xor
and
mov
add
dec
mov
jle
inc
cltd
aam
inc
aam
mov
mov
push
sarb
pop
pop
cmovne
inc
ss
enter
sub
mov
adc
dec
adc
mov
push
add
mov
mov
dec
add
dec
addb
lahf
into
lea
cmp
or
insl
mov
xor
jmp
cmp
add
cmpsl
div
test
pop
push
aas
out
jmp
pop
jbe
add
xchg
sbb
pushf
fsubrl
add
dec
dec
aam
je
jo
sub
lret
mov
lcall
js
and
nop
jmp
sahf
test
pop
cli
jmp
fnstsw
in
lret
sub
je
mov
sub
fwait
ret
ljmp
mov
cli
push
mov
adc
cmpb
dec
pop
sbb
sbb
psadbw
mov
pop
push
xchg
into
stos
fnstenv
inc
cmp
arpl
sub
aaa
rclb
add
icebp
mov
sti
or
nop
add
xor
push
mov
out
mov
xor
xor
stos
sub
imul
mov
jbe
test
lahf
mov
xchg
sbb
add
push
add
mov
pop
ret
sbb
dec
cs
data16
shlb
dec
arpl
sahf
sahf
fdivrl
out
or
cmp
jae
jae
fldl
pop
test
stc
arpl
mov
cmp
inc
xlat
push
pop
mov
sbb
ds
sub
xchg
add
sbb
in
fcmovu
sbb
jne
dec
repnz
or
or
cmpsb
sub
sbb
jno
push
scas
add
add
mov
pop
test
xchg
pop
ret
push
cmp
cld
pop
adcb
cmp
or
lahf
andb
sub
rolb
inc
or
dec
jg
pusha
push
imul
cmp
mov
mov
jmp
push
loopne
mov
cld
popa
pushl
test
adc
dec
xor
adcl
popa
insl
jne
mov
mov
fcmove
test
dec
imul
inc
sbb
dec
dec
sbb
and
push
lahf
push
dec
or
dec
movsb
adcl
push
aad
cmc
adc
xchg
mov
jg
jb
pop
or
mov
fidivrl
pop
shlb
stos
cmp
sub
mov
aas
lret
push
mov
jl
inc
scas
test
jp
sub
nop
mov
lds
arpl
push
std
repnz
das
xorl
out
cmp
adc
outsb
inc
xchg
in
jp
popf
mov
ror
mov
ret
out
dec
test
pop
adc
loope
jl
fstl
mov
cwtl
mov
ja
fsubs
repnz
mov
stc
pop
mov
cmp
sti
hlt
cltd
out
or
mov
idivb
sbb
lea
cmpsb
mov
repz
jne
push
das
loope
shrl
rolb
push
jo
adc
mov
test
jecxz
cmp
cltd
fcmovnbe
lea
adc
lea
sti
int
cmp
call
sbb
scas
movsb
stos
pop
sub
orb
mov
popa
dec
outsl
repnz
jb
sbb
or
enter
pop
dec
das
add
push
divl
dec
daa
mov
mov
stos
mov
cmp
push
sub
cli
stos
cmpsl
mov
add
les
sbb
or
repnz
push
enter
les
push
je
sbb
pop
or
in
jne
scas
shr
xchg
int
ds
es
lahf
les
or
sub
movsb
in
inc
mov
sbb
loopne
and
divl
xorps
outsl
and
out
sub
aas
loope
push
jae
lret
push
shlb
mov
xor
iret
mov
ds
repz
fwait
packuswb
fisttps
popa
mov
or
in
imul
lds
rorb
inc
push
pop
mov
cli
mov
xor
xor
dec
adc
popa
inc
rolb
adc
jnp
test
xchg
add
sub
shlb
jnp
and
sub
or
hlt
adc
js
repz
fcmovbe
loop
stos
mov
lret
sbb
jg
ret
arpl
mov
out
mov
ljmp
out
out
bound
dec
lret
push
clc
xlat
dec
adc
int3
jmp
mov
or
push
call
jmp
mov
push
inc
xor
jbe
pop
je
mov
jb
sbb
add
add
out
inc
cs
dec
jge
shlb
xor
mov
dec
dec
mov
popf
pop
pop
lock
adc
test
xor
push
or
out
mov
sbb
int
push
mov
inc
repz
sub
outsl
dec
and
mov
lea
fidivrl
xchg
daa
rorl
lods
subl
daa
mov
xor
call
xchg
mov
pop
shrb
adc
and
adc
sbb
loop
bound
rol
popa
xchg
jle
or
ljmp
test
dec
inc
stc
mov
pop
mov
sbb
insb
vmovups
lock
push
std
cmp
pushf
mov
inc
jecxz
popa
das
cld
lock
jmp
ret
leave
arpl
jbe
in
fistl
jo
xor
imul
cmc
push
dec
imul
adc
lahf
and
jecxz
sbb
ds
fsubs
pop
cmp
lock
inc
mov
cmp
imul
inc
mov
or
loop
adc
mov
push
cmovo
movsl
subb
orb
sub
cwtl
int
pop
imul
outsl
pslld
aam
lcall
jge
testl
enter
imul
and
in
je
push
outsl
lcall
fwait
orb
imul
pusha
add
lret
les
pop
bound
rcr
or
mov
das
je
xchg
pop
test
test
push
repz
jnp
xchg
lret
mov
mov
addl
aaa
loopne
in
test
or
ret
xor
cmpsl
mov
lret
cltd
stc
adc
mov
dec
imul
adcb
dec
aam
test
mov
mov
out
push
addl
lret
pop
sar
jae
xchg
mov
bound
mov
jno
push
fimuls
add
insb
in
sbb
or
sbb
adc
push
call
mov
test
sbb
loope
andb
movsb
xchg
xor
mov
push
jb
sub
inc
or
data16
or
in
insb
roll
sbb
movsl
les
adc
push
fdivrl
mov
shl
divl
jns
push
push
out
inc
mov
add
jne
scas
dec
orb
stos
mov
inc
and
int3
mov
and
adc
shll
dec
jmp
push
dec
mov
aaa
mov
cmc
pop
das
push
sahf
mov
push
sbb
jbe
sti
add
jnp
pop
aad
mov
and
jmp
in
inc
divb
fadds
mulb
xchg
ret
es
outsl
ljmp
cmp
mov
mov
xchg
stc
cmp
int3
fisubrl
jg
push
sbb
inc
sub
scas
dec
xchg
mov
popf
jp
lds
lds
fnstenv
rcrl
jmp
cltd
jp
mov
dec
arpl
jne
xchg
mov
movsl
enter
les
sub
xor
sbb
sub
sub
sbb
rolb
cmp
push
lods
stos
jmp
aaa
and
add
push
div
mov
mov
jns
rcll
nop
sbb
movsb
sbb
insl
cli
popf
out
sub
popa
push
xor
cmp
add
ret
or
imul
cmp
dec
fs
push
and
sbb
adc
movsb
shl
push
pop
mov
stc
fprem
xchg
and
pop
js
ljmp
cmp
idiv
mov
stc
or
fstpl
repnz
cmpsb
jmp
jb
dec
enter
pop
pop
mov
loopne
inc
push
cmp
lds
adc
mov
and
sbb
arpl
or
push
add
addr16
rclb
or
cmp
mov
mov
pop
xlat
scas
test
decb
jne
in
pop
adc
clc
ficoml
cwtl
fs
fdivl
aaa
sub
adc
xchg
scas
inc
outsl
ret
push
pop
adc
insb
adc
push
mov
adc
push
lahf
pop
pop
push
stc
mov
xchg
pop
push
cltd
mov
js
pop
mov
into
aaa
mov
push
pop
add
mov
mov
cld
aad
pop
xchg
add
lods
push
and
or
or
mov
pop
enter
cmp
inc
xchg
inc
insb
ljmp
sbb
das
test
pop
ja
push
rorb
or
dec
iret
xor
dec
ret
ds
sub
xor
jne
or
pop
pop
mov
pop
shll
mov
jle
fnstenv
cmp
push
jno
cmp
xor
inc
stos
cmp
jge
cmpsl
sar
subb
out
ret
mov
dec
out
lret
pop
mov
sbb
rorl
sub
loope
pop
sub
mov
sbb
and
dec
or
addr16
punpcklwd
out
test
xbegin
insl
repz
bound
pop
out
push
inc
arpl
mov
add
adc
jl
fmulp
inc
dec
cmpsl
add
les
or
cmpb
xchg
dec
cmp
dec
adc
pop
mov
and
jg
sti
fdivl
test
or
fwait
inc
outsl
in
pusha
data16
dec
xchg
cltd
insb
xchg
or
jl
jecxz
imul
fisttpl
adc
cmp
add
outsb
test
pusha
test
add
sub
or
adc
mov
gs
jb
orb
pop
ret
mov
sarl
adc
jb
or
outsb
fucomi
je
jns
mov
ret
decl
jbe,pn
push
jecxz
out
sub
aaa
leave
xchg
xchg
xchg
sub
subb
jg
insl
clc
push
fcompl
xchg
iret
jmp
push
mov
leave
inc
out
sbb
dec
cmp
mov
mov
jmp
mov
pop
pop
pushf
mov
stos
daa
loop
push
pop
cmp
mov
jae
aad
out
or
pushf
rcr
cmp
mov
jg
sub
adc
addl
mov
ret
and
jp
xlat
sbb
mov
adc
inc
je
enter
fcom
pop
adc
in
or
ret
popf
xchg
es
out
sbb
insl
push
push
pop
push
addr16
inc
mov
inc
mov
sbb
push
mov
in
insl
add
cmpxchg
pop
dec
and
xchg
fs
jmp
xor
jae
fbstp
pusha
fldl
or
repz
jno
push
adc
fdivr
xchg
inc
pop
dec
lahf
mov
aaa
lea
leave
pop
xor
orl
scas
xor
inc
mov
call
pop
mov
fldcw
mov
ja
movsb
inc
dec
out
scas
aad
add
movsl
arpl
mov
push
outsl
mov
popa
arpl
xchg
ret
sti
pop
lds
sbb
pop
popf
or
sti
ja
xor
jl
xchg
fidivs
scas
inc
lods
mov
aaa
sub
addr16
int
mov
icebp
pop
aam
fsubr
mov
sub
mov
mulb
cmp
adc
mov
mov
push
xor
and
add
shlb
pushf
fisttpl
out
lret
addr16
jo
xchg
mov
cmp
add
pop
jnp
jge
sub
mov
xchg
fdivrl
push
pop
les
andb
outsb
and
add
rorb
cwtl
jnp
pop
mov
inc
inc
test
dec
mov
outsl
mov
pop
sahf
pop
adc
pop
jecxz
cmp
cmp
test
jbe
dec
lret
pop
shlb
mov
test
xchg
push
push
lods
ret
push
sbb
cmp
jg
aad
shll
add
mov
aas
jl,pt
loope
movsl
out
dec
ret
pusha
pop
in
scas
jb
inc
dec
xor
pop
xor
jbe
or
insb
movsb
int3
enter
enter
mov
sub
sbb
jg
ljmp
mov
jmp
aad
sbb
mov
cmp
das
loop
scas
jb
cmpb
mov
mov
out
rcr
pop
arpl
push
push
xor
xor
jnp
jns
jo
call
shrb
js
push
popf
sbb
mov
xor
sbb
or
push
fwait
xor
jae
sub
testb
mov
sbb
jge
or
dec
adc
xor
mov
lock
pop
or
push
xor
scas
add
cmp
test
in
push
or
test
jle
ficompl
int
inc
adc
inc
adc
es
dec
ss
mov
pushf
jnp
jno
rolb
jp
div
or
sti
dec
xchg
in
scas
lret
pop
or
inc
stc
fidivrs
inc
add
adc
lock
xchg
orl
inc
jno
out
cld
push
scas
sbb
add
hlt
aad
cmp
dec
or
pop
lods
gs
fadds
loope
dec
or
insb
push
or
xlat
sub
xor
and
pop
xor
out
jnp
ficoms
mov
stos
icebp
cmp
ljmp
ficoml
ret
es
mov
fiaddl
xor
pusha
jb
lcall
out
ja
repnz
adc
mov
stc
loop
jmp
mov
mov
movsb
pop
sbb
lret
lock
mov
in
pusha
sub
out
pop
push
outsb
jno
cli
sbb
aas
push
mov
mov
lahf
mov
loope
fiadds
ljmp
mov
cs
pusha
mov
xor
and
xor
out
xchg
xchg
push
jne
push
push
cltd
int3
sub
mov
imul
mov
popa
mov
xor
aad
insl
pushf
popf
cmp
and
mov
push
pop
aaa
enterw
cli
cmp
xchg
mov
das
into
in
pop
jge
addl
cmp
bound
hlt
push
fcomi
fstps
inc
outsb
mov
fdivrs
jmp
ss
mov
xor
xchg
sahf
hlt
xchg
sub
mov
repnz
xor
pop
adc
dec
xchg
jp
adc
pop
pop
cld
es
test
es
mov
lods
jno
add
push
fsubs
xchg
imul
xchg
sub
cmpsl
cltd
loopne
mov
mull
mov
xorl
push
sahf
scas
fistpll
mov
rolb
mov
in
inc
je
push
cmp
fstl
in
cmpsl
insb
jae
leave
mov
mov
fstpl
adc
inc
adc
lock
addr16
push
dec
add
pop
jo
mov
xor
mov
dec
inc
popf
xchg
loop
pop
push
jae
test
or
pop
or
mov
dec
and
xchg
in
sbbl
ss
arpl
dec
fst
js
mov
pop
pop
jae
movsb
test
fdivs
int3
gs
mov
cmpsl
out
fdivl
mov
jmp
jp
xor
lds
imul
imul
and
in
js
hlt
push
jmp
in
xor
das
and
sti
dec
dec
jae
pop
rol
xchg
fiadds
dec
mov
jne
jecxz
pop
and
mov
sub
in
mov
enter
enter
cs
inc
jb
shlb
add
pop
pushl
rorb
cmp
push
cwtl
rclb
jbe
adc
and
repz
fisubrl
je
xor
loopne
jmp
test
pop
adc
iret
xchg
fmul
sub
addr16
mov
test
xchg
notl
mov
outsl
cmp
sub
out
int3
out
push
add
ret
xchg
loope
ljmp
cmpsb
jne
int
ret
pushl
lock
in
ds
push
sub
inc
in
push
cli
add
inc
pop
lcall
jno
sub
repz
dec
xor
lret
push
xlat
dec
bound
fmul
add
mov
push
mov
pusha
mov
aad
data16
and
addr16
sbb
shlb
test
lock
outsb
icebp
imul
popf
imul
nop
xchg
push
adc
in
mov
mov
mov
idivb
mov
cwtl
arpl
sbb
jo
or
loopne
idivl
jmp
xlat
nop
inc
pop
mov
mov
cltd
jecxz
cwtl
sbb
pop
dec
pop
cmpsl
mov
pop
pop
xchg
test
mov
jl
or
aas
ja
mov
mov
mov
push
loope
sub
xlat
pop
cmpsb
inc
mov
faddl
pop
sub
or
test
stc
push
push
xchg
sub
mov
mov
adc
in
orl
push
pop
push
dec
mov
pop
xchg
mov
arpl
nop
or
fxch
ds
test
pushf
mov
inc
mov
int
imul
fsubp
nop
int3
push
fwait
repz
and
or
in
lret
xchg
jo
pop
in
jo
cli
int
jne
xchg
jle
jb
out
bound
adc
icebp
inc
lahf
rcll
lahf
sar
out
repnz
mov
jns
and
pusha
icebp
or
aaa
inc
out
fnstcw
xchg
inc
shlb
sub
dec
dec
mov
mov
ret
fisubs
push
inc
fidivrs
idivb
cmpsb
leave
in
push
push
lea
shrb
aas
imul
cltd
rcrb
adc
mov
stos
mov
and
sbb
add
jbe
jge
mov
push
nop
mov
xchg
push
jle
or
push
push
push
icebp
add
das
push
pushf
or
or
jecxz
rolb
aam
int3
add
idivl
or
iret
ds
push
lods
and
mov
cmp
out
xchg
out
imul
cmc
imul
jecxz
add
mov
outsl
stos
js
dec
sub
in
shrb
js
jp
clc
jbe
addr16
jp
ffree
out
inc
mov
in
xor
mov
fnstsw
xor
out
cmpsb
or
jns
mov
daa
mov
scas
xchg
lret
jge
jnp
std
fscale
lea
push
shlb
xchg
inc
xchg
adc
adc
xor
xchg
dec
js
mov
inc
sbb
enter
cmp
xchg
lods
push
and
and
push
stos
cs
sbb
pop
pop
xchg
mov
xor
vmread
xor
out
data16
mov
adc
mov
addr16
je
data16
lock
ret
mov
add
out
mov
cwtl
jge
inc
push
mov
push
mov
or
std
lret
jbe
in
shll
add
cwtl
push
icebp
fcmove
fistps
push
sub
nop
cmp
loop
movb
pop
jge
rcrl
cmp
or
sub
pop
xor
sub
leave
cmp
and
push
sbb
popa
or
add
out
sub
jb
sbb
fsubr
adc
pop
xchg
dec
insl
popf
outsb
mov
ret
lret
mov
adc
sbb
lcall
int3
jne
mov
aaa
stos
ljmp
sbb
outsb
rcll
mov
jle
pushf
push
in
lds
mov
cmpsl
dec
mov
inc
sbb
ss
lods
mov
sarl
and
mov
adc
and
mov
ret
and
cmpsb
jge
jmp
add
jb
push
frstor
out
jns
outsb
int3
cld
adc
inc
pop
xchg
push
mov
xor
xor
out
jmp
out
scas
adc
sbb
sub
mov
pop
sub
stc
and
dec
mov
outsl
lret
popa
xchg
cli
sahf
faddp
mov
dec
xchg
pusha
mov
pop
ret
ljmp
xorps
ret
psrld
pop
dec
call
dec
sbb
data16
xor
adc
xorl
dec
jne
pop
xor
push
sbb
ds
sbb
inc
in
mov
daa
pop
push
sub
pusha
jp
sub
aam
cld
cmc
repz
lahf
into
push
js
orl
or
xor
sub
push
push
out
push
mov
gs
mov
cmpsl
dec
insl
adc
aas
ds
sub
pop
inc
bound
jmp
add
inc
gs
aam
sbb
sti
fldcw
xlat
in
popf
in
stc
and
pushf
cmp
xor
addb
enter
in
std
mov
xchg
adc
test
and
mov
cltd
int3
xlat
xor
dec
inc
pop
clc
call
aas
sub
xor
mov
in
push
jmp
add
in
js
and
xchg
mov
jle
in
mov
jno
insl
lods
enter
sub
lock
jo
loop
xchg
in
shrb
dec
repz
shrl
or
add
mov
negl
push
not
loop
in
fiadds
popa
jbe
and
mov
jno
push
add
cmpsb
mov
mov
sarb
adc
sbb
mov
shr
cmpsl
and
xor
mov
or
jmp
sub
sbb
pop
jae
cmp
loopne
mov
push
xchg
inc
xor
icebp
out
xchg
sub
shlb
inc
movsb
sbb
sti
push
lea
lret
push
clc
leave
mov
sub
imul
scas
ss
clc
add
nop
cwtl
add
jg
jo
inc
mov
shrb
loop
scas
xchg
daa
jo
sahf
out
ret
mov
call
out
dec
ljmp
jge
inc
xor
push
js
add
pop
mov
rdtsc
or
add
cmp
mov
xchg
xchg
shlb
sub
jp
fs
xchg
gs
push
or
inc
je
pop
gs
xchg
and
jno
xchg
and
sbb
rol
mov
ffreep
addl
push
pop
outsb
call
mov
inc
lahf
enter
sub
push
cwtl
jp
repnz
stos
cmp
popa
enter
ja
cs
and
mov
int3
lds
adc
mov
scas
pop
ss
notb
xchg
xchg
pop
out
cmc
mov
or
dec
dec
out
lahf
or
cmp
jmp
fbstp
mov
rol
insl
mov
es
push
loopne
lods
mov
inc
xchg
or
not
scas
lods
movsb
les
pop
jne
pop
jg
xchg
xor
sub
lock
dec
xchg
loopne
repnz
sti
sub
xor
mov
xor
pop
pushf
and
push
adc
enter
mov
ffreep
add
ljmp
sub
jge
fwait
cli
cmp
pop
gs
sbb
stos
scas
cmpsb
xchg
mov
cmp
sbb
inc
cmpl
repnz
xchg
push
out
clc
pop
imul
out
mov
repnz
mov
mov
xor
stos
test
fiaddl
inc
lock
xchg
into
push
rclb
es
jo
sbb
test
outsl
or
ret
sahf
mov
push
xchg
sarb
fnstenv
push
rclb
movl
or
fldcw
mov
outsb
push
inc
sub
add
or
mov
push
into
jb
test
mov
push
or
jo
xchg
mov
rcrb
stos
popf
lret
jmp
in
ret
jmp
test
scas
incl
dec
mov
jl
mov
mov
xchg
mov
test
pop
adc
insb
std
sti
test
pop
lods
das
sbbb
inc
adc
aaa
ljmp
pop
mov
outsb
lds
and
pop
push
stos
sbb
push
pushf
arpl
adc
test
mov
inc
in
rorb
jae
jae
dec
xchg
jmp
rdpmc
icebp
clc
sub
jbe
movl
push
sahf
mov
das
or
repnz
jbe
inc
and
mov
xchg
inc
into
sbb
mov
ret
mov
cmp
std
add
notl
loope
pop
mov
nop
stos
movsb
test
insl
jo
inc
lods
iret
push
push
lods
sub
shll
ljmp
inc
pop
mov
int
fidivs
sbb
push
lret
lcall
or
mov
int3
push
mov
inc
sbb
lcall
pop
inc
sub
jns
push
cltd
and
jo
sarb
add
jecxz
ror
mov
es
adc
enter
fisttps
inc
std
daa
cmp
inc
into
push
push
fadds
out
mov
call
xrelease
lret
lcall
add
and
ja
test
lods
lods
cmp
add
jne
shll
dec
movsl
popa
mov
lea
movsl
movb
sbb
div
sahf
dec
inc
cmpsl
mov
lcall
mov
dec
lods
mov
fsubs
pop
and
les
sbb
fnstenv
movsb
mov
mov
and
in
je
andl
mov
push
xchg
flds
subb
mov
add
adc
fisubl
or
mov
xor
mov
xchg
fists
xor
cld
addr16
loop
sbb
push
out
add
mov
push
adc
dec
fidivs
subl
sub
sub
sub
push
pop
cmpsb
mov
dec
das
arpl
scas
sahf
cmp
test
movsb
subb
sub
decb
stc
adc
mov
adcb
xchg
mov
xor
rcrl
aas
ja
push
pop
xchg
mov
bound
cmp
lods
ja
ja
in
jg
imul
mov
loope
pop
cmpsl
dec
mov
adc
adc
push
pushf
lea
pop
addb
cmp
jle
outsl
xor
je
lock
push
pop
in
jp
mov
arpl
clc
push
cmp
pusha
xor
push
mov
pop
or
jno
je
in
pop
mov
jl
out
out
js
mov
inc
push
xor
pop
cmp
mov
arpl
es
or
pop
loope
xchg
scas
aaa
pop
add
loopne
or
mov
xor
test
pmaxsw
sub
ss
mov
icebp
mov
aam
mov
nop
test
and
xchg
aas
xor
js
gs
cld
pop
mov
lcall
dec
outsb
iret
dec
sti
jb
movl
jle
add
pop
fmul
faddl
sub
mov
int3
cmpsl
movsl
dec
and
xchg
adc
mov
push
add
jno
and
in
push
ficoms
inc
arpl
push
lds
out
and
jmp
in
fmull
iret
gs
mov
out
insl
les
mov
jle
inc
aas
push
lds
jo
push
mov
xchg
jle
testl
clc
jo
adc
std
das
inc
loope
sbb
inc
xchg
add
je
xor
push
or
inc
cmpsb
xor
bound
mov
jl
sti
jne
jle
pusha
push
and
ror
mov
adc
dec
sub
sti
scas
mov
pop
rclb
ds
enter
jg
in
xchg
filds
adc
lock
stos
xchg
mov
inc
mov
push
call
push
xor
sbb
jecxz
call
adc
sub
sub
xchg
in
add
xor
mov
push
and
inc
sbb
pop
fs
push
jae
cmp
into
pop
fwait
cmpsl
mov
les
jae
int3
xlat
mov
adc
inc
pcmpgtw
pop
test
testb
push
pop
pop
mov
xchg
subb
aam
pop
addl
adc
add
movsl
leave
lock
rcll
lods
mov
mov
popf
nop
out
pop
jae
in
test
or
stc
divps
stc
les
jae
sub
call
mov
mov
hlt
les
adc
repz
and
negb
xchg
mov
test
jnp
mov
xchg
mov
ljmp
nop
ja
scas
pop
xorb
data16
outsb
dec
stos
jp
cmpsb
daa
push
mov
leave
mov
mov
inc
dec
scas
push
inc
icebp
cmpsb
mov
and
stc
fbld
mov
pop
int3
inc
sahf
daa
or
mov
cmc
inc
mov
in
insl
in
mov
cmpsl
and
mov
je
or
pop
mov
cli
mov
out
movsl
mov
arpl
mov
fldt
dec
push
cmp
sti
adc
xor
fisubrl
das
xchg
jecxz
jb
ret
cs
xchg
sub
push
push
clc
jg
das
test
jne
xchg
imul
pop
jecxz
nop
ds
and
inc
mov
imul
pop
aas
xor
and
icebp
xchg
xchg
loope
das
adc
jmp
push
mov
xor
pop
xor
lods
arpl
ficoms
add
push
dec
stos
lret
push
out
mov
nop
mov
jg
mov
push
sbb
addr16
jne
sbb
gs
rol
lret
in
inc
push
xchg
scas
stc
push
adc
sub
fmul
mov
sub
push
cld
shlb
xchg
mov
das
jp,pn
pop
lods
dec
test
clc
xor
testb
scas
repz
ds
ret
cmpsb
xchg
mov
in
bound
xchg
repz
sti
mov
ss
jnp
and
insl
repnz
clc
cwtl
mulb
xor
sub
xchg
sub
sbb
or
icebp
jno
testb
dec
arpl
call
pop
mov
ss
aad
stos
ret
lods
out
adc
into
std
or
push
dec
fisubs
add
cmc
sub
xchg
cltd
mov
lret
xchg
push
out
pop
xor
sbb
xchg
mov
mov
jns
inc
push
loopne
inc
or
rcrb
mov
call
rcrl
std
pop
loopne
push
pop
negl
int
icebp
inc
ja
sub
inc
outsb
lods
data16
mov
inc
push
pop
loop
mov
fidivrl
cmp
sbb
fldl
inc
test
ret
push
rcrl
gs
sbb
xor
lret
mov
popa
pop
or
dec
fildll
cmp
outsb
push
pop
aas
lods
adc
mov
mov
xor
lret
test
xorb
jbe
xchg
mov
pop
rclb
fistpl
fsubrs
fcmovnu
int3
inc
icebp
mov
xchg
or
aam
sub
sub
xchg
std
fidivl
jae
loope
xchg
xor
in
ljmp
add
dec
cld
mov
stos
mov
jl
mov
dec
or
or
push
ret
jl
add
incl
add
or
xchg
mov
or
inc
movsb
dec
pop
xchg
or
xor
xlat
xchg
popa
push
test
xor
outsl
mov
or
dec
cmp
xor
lods
gs
mov
inc
sub
adc
lret
lcall
stc
sub
lahf
aaa
scas
sbb
adc
push
mov
push
loop
sub
mov
rclb
cmp
insl
mov
add
mov
inc
rcll
std
in
xchg
push
mov
fstps
gs
outsb
push
nop
ds
loope
mov
fmulp
mov
loopnew
xchg
adc
inc
jbe
mov
jmp
std
imul
in
or
movsl
test
push
leave
fistl
insl
adc
pop
pop
test
mull
mov
or
mov
popa
sarl
or
push
rcrb
mov
dec
jmp
xchg
jo
push
leave
and
inc
in
cmpsb
nop
push
addr16
xchg
or
popf
fwait
or
xor
push
push
dec
lods
sbb
jmp
jg
cmpsb
icebp
jmp
aas
popa
stc
or
inc
and
mov
cmc
mov
sub
cld
scas
dec
daa
xchg
loopne
or
sub
push
ret
movsl
call
pop
jnp
insb
fsts
repnz
insl
xchg
jns
mov
nop
les
cld
adc
lahf
inc
pushf
push
lret
xor
jle
sbb
outsb
adc
pop
inc
daa
jmp
mov
cmp
je
sahf
scas
xor
iret
test
mov
lret
dec
jge
stos
stos
mov
jl
cmp
outsl
mov
push
fsubrl
fistps
dec
mov
scas
push
mov
iret
xor
lea
mov
push
jns
add
xchg
call
repnz
sbb
add
fs
mov
sbb
pop
cld
shll
xchg
mov
add
mov
call
adcb
idiv
mov
mov
sub
adc
or
outsl
or
inc
mov
xchg
movsb
pop
rcrb
addb
pushf
xor
cmp
push
lret
insl
cmp
shrb
shll
out
sub
xlat
mov
adcl
gs
loop
movsl
push
addb
or
add
jns
sahf
xor
push
call
jg
pop
and
js
pop
leave
pushf
iret
aam
sarb
or
clc
add
cmp
imul
or
aam
push
shl
out
push
filds
scas
jae
cmpsl
aaa
pusha
mov
sti
xor
cmpsl
cmp
aaa
inc
mov
sbb
xchg
sbb
stc
shrb
ds
ret
mov
or
pop
rcrb
pop
lahf
mov
cmp
and
adc
mov
repz
or
pop
pusha
xchg
push
inc
cmp
adc
push
int
test
jecxz
leave
rcl
ds
fwait
roll
inc
and
xchg
stc
lahf
dec
sub
adc
dec
lock
ja
push
iret
fcmovne
lds
mov
imul
js
sbb
aam
imul
xlat
orl
in
sbb
xchg
sti
insl
jmp
lcall
sarb
push
and
loopne
je
popa
orl
fnsave
sbb
repnz
pushf
lods
add
into
pop
call
pop
mov
inc
lret
add
leave
pop
adc
xchg
xchg
jg
inc
hlt
sub
subb
jecxz
sbb
icebp
fwait
and
push
mov
xor
xor
outsb
lods
sbb
ja
sub
lcall
push
jae
xchg
pop
xor
cmpsl
imul
out
dec
leave
pop
sub
mov
fsts
stos
and
push
mov
mov
jle
push
out
push
sbb
and
pushf
inc
cmp
rclb
jo
xchg
xorl
push
and
repz
mov
push
sbb
mov
or
repz
inc
out
pop
pop
cmp
lods
lret
sahf
inc
sbb
into
arpl
or
sub
je
jbe
xor
adc
test
divl
push
push
mov
aad
and
test
xbegin
loopne
add
mov
inc
jns
mov
or
scas
inc
or
in
xor
sbb
repnz
fistpll
data16
lods
adc
jle
loope
pop
mov
mov
xor
inc
mov
mov
jne
push
das
adc
push
or
aaa
push
cwtl
sub
int
hlt
mov
push
and
cli
sub
push
push
adc
aas
add
mov
shlb
dec
imulb
pmaxsw
mov
xor
sti
jg
lock
pop
pop
xchg
push
jl
pusha
ljmp
xchg
xor
shl
rol
inc
jnp
orl
mov
push
dec
push
jle
gs
xchg
cmp
int3
mov
add
adc
ds
add
pusha
mov
xor
inc
mov
rol
fnstenv
test
adc
repnz
fisttpl
outsl
or
jo
sbb
add
das
cmpsl
ror
js
icebp
jbe
mov
repnz
sbb
push
fisubrs
test
jae
xchg
out
je
movntps
subb
fdivrs
add
fcmovu
mov
into
shrb
inc
sbb
sub
arpl
outsb
lcall
in
mov
je
push
inc
inc
xlat
mov
ud1
test
rol
movsb
jp
jge
test
inc
mov
dec
xchg
lahf
jbe
addl
ja
mov
out
add
sbb
les
lock
shrl
ja
inc
mov
sarl
mov
xlat
xor
ficoms
adc
xchg
in
in
mov
push
in
int3
mov
mov
fisttpl
ljmp
cli
and
dec
arpl
add
test
gs
addr16
mov
pushf
jbe
imul
loop
pop
mov
das
xlat
mov
or
or
mov
xor
jl,pn
add
inc
inc
add
or
pop
iret
repnz
cwtl
test
mov
push
arpl
incb
and
pushf
sahf
clc
fiaddl
aad
cmp
push
mov
mov
mov
jge
fwait
and
jnp
inc
insl
subb
mov
push
dec
cli
lcall
aas
and
mov
lret
sarb
mov
jnp
sbb
fadds
loope
mov
cmp
sub
shr
rorl
xchg
dec
arpl
push
cmp
push
cmc
push
icebp
imul
sbb
sbb
inc
jge
sub
or
cld
aas
and
or
ja
push
sarl
je
aaa
or
push
fidivl
xchg
push
cwtl
ja
add
in
cmp
out
mov
idivl
out
stc
outsl
data16
mov
inc
xchg
test
sub
dec
movsb
push
cmpsb
sbbb
insl
cld
add
adc
cmpb
sarb
dec
pop
sbb
repnz
sahf
sbb
loope
ja
js
imul
imul
out
repz
ds
cli
and
jne
sbb
fmull
dec
lcall
js
xchg
sub
stc
bound
adc
aam
cmp
je
inc
int
mov
mov
cmp
mov
sbb
mov
out
jo
lcall
dec
jns
or
push
test
arpl
insb
dec
loopne
mov
insl
fstps
mov
jns
mov
cmp
insb
push
mov
jp
cltd
push
add
gs
inc
mov
dec
cwtl
mov
jnp
repz
push
adc
xchg
push
pop
dec
in
jge
hlt
push
xchg
ljmp
outsl
sbb
jmp
mov
popf
iret
mov
out
int
loop
fcoml
cmp
xchg
inc
fs
xchg
xchg
divb
sbb
dec
repnz
cmp
into
cld
mov
call
mov
shll
addb
xchg
imul
hlt
push
sub
cmp
inc
das
insb
hlt
movsl
xor
std
ds
jmp
call
jo
icebp
fisubs
cmp
or
jg
cmpsl
movsl
pushf
push
enter
in
vpcmpeqb
inc
and
int
push
stos
xor
mov
cmpl
into
rcr
pushf
inc
mov
sbb
adc
inc
sti
frstor
fwait
adcb
jae
rcrb
out
icebp
aad
sbb
or
sub
insb
iret
arpl
dec
iret
cmpsb
sti
mov
out
pop
jl
xor
cs
lods
ljmp
mov
add
and
mov
sahf
cmp
push
or
fs
cmc
jmp
mov
push
mov
jg
bndldx
cs
or
inc
sbb
mov
pop
jle
push
or
mov
out
lock
hlt
xchg
aaa
dec
in
add
mov
inc
mov
out
sub
xchg
lcall
in
pop
add
or
jecxz
xlat
call
adc
lret
fwait
adc
clc
arpl
pusha
jae
pop
mov
or
push
and
xor
repnz
xchg
xchg
xor
jno
inc
mov
fimuls
mov
xchg
pop
push
ret
jns
push
mov
pusha
sahf
inc
or
jg
out
xchg
movsb
or
add
push
pop
imul
testb
fcmovbe
push
roll
ror
ret
cmp
enter
hlt
cmp
xlat
xchg
insl
mov
cs
xor
xor
mov
cmpb
mov
or
test
xor
pmulhuw
jno
shl
iret
es
ret
je
sub
pop
mov
cmpsb
stos
sbb
roll
dec
movsb
fs
sub
outsl
aam
adc
xor
push
jno,pn
sub
imul
out
xchg
add
jo
lretw
loopne
or
aas
push
ds
int3
in
jle
cmp
nop
sbb
xor
jecxz
pop
into
lret
fsub
movb
enter
and
cmp
jp
jae
sbb
mov
dec
xchg
popa
sahf
repz
addr16
inc
test
mov
test
xchg
mov
cmp
xchg
xlat
pop
bound
dec
popa
pop
dec
lcall
adc
insb
popa
and
insb
lea
rcrl
fmuls
xor
leave
movsl
sub
repnz
in
outsl
aam
mov
pop
lds
mov
xchg
and
jns
or
test
jmp
add
xor
sbb
adc
sbb
test
xchg
mov
iret
idiv
mov
dec
scas
in
popf
sbb
dec
pop
pop
cmp
iret
mov
lea
insb
in
lock
or
sub
fcmovnu
jp
cmp
mov
int
inc
in
leave
addr16
or
push
inc
jecxz
aam
mov
cli
push
adcb
cmp
lret
divl
mov
sbb
call
lret
xor
call
inc
das
add
cmp
sub
xchg
dec
mov
popf
lret
sub
mov
mov
mov
lods
cmp
leave
cld
je
out
scas
popa
jne
insl
pop
mov
insl
cmp
mov
rcll
orl
mov
adc
clc
aam
push
mov
jns
adc
xchg
adc
jnp
js
repz
call
dec
cwtl
mov
sub
inc
xchg
mov
xchg
dec
sub
out
sbbb
mov
xchg
movsl
and
jno
jl
pop
lds
mov
enter
dec
pop
inc
mov
idivl
jp
dec
dec
push
push
aam
mov
lret
push
mov
mov
mov
loop
mov
xor
ss
rclb
dec
add
push
rcrb
es
xchg
cld
lahf
ret
faddl
dec
mov
jb
out
jo
xchg
fistpll
jl
mov
inc
inc
adc
ss
sbb
out
inc
or
mov
fistps
and
sbb
pusha
pushf
in
add
js
pop
insl
push
outsl
or
fisubrs
push
out
lcall
sahf
mov
jo
or
andb
cmp
addr16
adc
mov
stos
outsb
repz
jmp
or
or
add
outsb
ja
incl
sbb
mov
xchg
fs
ret
xchg
inc
xchg
fisubs
mov
or
cli
cmp
inc
pop
leave
negb
jmp
lods
into
enter
movsb
call
imul
imul
inc
or
mov
movsl
add
sub
fidivl
ret
mov
push
sbb
ret
fbstp
or
jmp
sub
out
jb
xorl
pop
mov
orb
jne
dec
aam
dec
mov
pop
sbb
add
mov
and
mov
and
lods
mov
xchg
call
ja
jle
aad
mov
bound
pushf
pop
inc
cli
lcall
cmp
mov
dec
jbe
cmp
int
mov
inc
jns
int3
inc
lods
test
shl
insl
or
mov
das
jb
and
int
ja
pop
dec
fcomps
sbb
sub
lods
mov
dec
push
fsubrs
adc
les
mov
mov
xchg
push
aas
sub
pop
icebp
loope
loop
fcoml
xlat
pop
jecxz
xchg
in
mov
xchg
mov
xchg
add
mov
or
aas
int3
shrl
fsubr
cmp
bound
loop
ljmp
divb
and
sbb
or
insb
sub
mov
ret
sbb
adc
and
fldcw
jbe
repz
pop
sbb
xor
or
mov
jmp
jne
cltd
mov
lock
xor
jg
xor
or
or
xor
daa
fldenv
xorb
notl
sahf
and
in
pop
std
cltd
jne
inc
into
mov
ja
sub
inc
pop
fldl2e
cmp
adc
cli
push
dec
in
adc
xchg
cld
xor
xchg
or
mov
mov
cli
shlb
cs
shl
ffreep
cltd
arpl
ljmp
and
lds
sbb
mov
call
cmp
xchg
jne
jl
xchg
not
mov
jp
icebp
mov
loope
xor
stc
mov
ret
adc
mov
jmp
mov
xchg
sbb
cmp
mov
or
insb
pop
sub
pop
and
vmptrst
push
push
adc
sbb
push
jecxz
iret
shr
pop
js
inc
adc
adc
dec
inc
jno
repz
add
enter
push
mov
jo
dec
dec
add
aas
add
jo
push
mov
ja
xor
jg
imul
add
adc
jno
adc
lahf
inc
out
imul
cld
mov
and
jo
and
push
imul
jns
cld
push
add
sbb
ja
inc
leave
dec
inc
mov
or
jb
data16
js
icebp
inc
sbb
into
mov
sub
cmp
inc
cmpb
push
cmp
ja
je
push
into
xchg
fmull
icebp
mov
roll
sub
imul
mov
loop
bound
into
inc
jnp
pop
test
pusha
outsl
push
jb
and
and
xchg
pop
lds
dec
test
inc
mov
dec
dec
mov
lret
mov
dec
cmp
cwtl
sub
xchg
mov
test
int3
popf
stos
inc
test
xchg
mov
inc
clc
dec
pop
add
in
sbb
push
nop
push
and
pop
pop
mov
mov
cld
pop
cli
xor
sbb
in
mov
push
mov
xchg
js
pop
cs
adc
divb
in
lock
movsb
jge
push
xor
mov
mov
cs
ficompl
jno
fiaddl
push
test
int
pop
popa
dec
xor
inc
roll
jle
jne
xchg
ret
cmpsl
push
loopne
add
jmp
xchg
push
pop
inc
pop
insl
jg
js
out
shrl
cmovo
sub
jo
sbb
inc
in
adc
divl
inc
jae
add
xor
rol
cmp
jmp
jl
cmc
mov
and
xchg
pop
pop
cmp
pop
sbb
xchg
pusha
mov
fdivs
ljmp
loop
jbe
add
mov
pushf
lret
mov
jp
sub
stc
and
decl
mov
add
fdivl
orb
aam
shrl
mov
push
shlb
imul
pop
push
xchg
sti
sub
xchg
pusha
call
inc
ds
loopne
and
out
ret
lods
ret
test
push
pusha
shll
fidivs
or
dec
cmp
adc
pop
xor
cmp
stos
mov
aad
scas
cmp
aas
out
hlt
dec
test
lds
cmp
leave
xorb
add
jo
jo
aam
popf
sub
xor
cli
xchg
in
stos
bound
in
dec
sbb
scas
add
sub
mov
out
fisubs
inc
sbb
push
mov
stc
stos
sub
sbb
add
push
xchg
stos
push
lret
mov
add
mov
ja
jb
push
je
shl
dec
mov
bound
in
hlt
dec
sub
lock
jecxz
jp
adc
mov
pop
es
and
pop
mov
icebp
dec
adc
data16
test
and
enter
adc
scas
jns
inc
sbb
adc
scas
mov
addr16
jno
lret
xchg
loope,pn
imul
in
or
jp
imul
cmpsl
pushf
scas
pushf
repz
push
or
sub
jb
fs
jl,pn
and
sbb
fistpll
xor
in
sub
jb
sub
bound
push
lock
mov
mov
mulb
mov
push
jne
aad
pop
push
dec
or
cmpsb
loope
cmc
cltd
sub
sbb
das
or
outsl
xchg
cmpsl
inc
sub
movsb
imul
movsb
add
test
fisubl
ja
pop
push
pop
xchg
push
iret
cli
loop
cmp
sub
pop
mov
in
sub
aas
xchg
jle
mov
xchg
arpl
pop
or
cs
rolb
inc
bound
push
adc
outsb
std
jp
and
dec
sbb
outsb
pop
and
cltd
sarl
mov
movsb
adc
pushf
mov
push
cwtl
cwtl
orl
minps
cmp
lds
push
dec
mov
mov
dec
cmovs
xor
stos
xchg
cli
jmp
xor
sub
in
sbb
add
lret
jle
add
sub
xchg
and
idiv
sti
jecxz
jae
and
lock
mov
pop
add
rorb
das
jae
xchg
sbb
repz
loopne
pop
pop
mov
xchg
mov
or
sbb
test
fisubs
mov
or
push
out
dec
shll
or
push
arpl
shrb
mov
lcall
call
mov
mov
mov
iret
cmp
cmp
xchg
pop
addb
div
cmp
sub
repz
sub
leave
outsb
data16
lcall
xchg
sub
movsb
addr16
jbe
pop
and
sub
data16
xor
inc
loope
mov
aad
push
mov
shrb
ret
push
mov
or
test
jno
push
jg
xchg
inc
in
test
repz
stc
xchg
dec
cwtl
cmp
mov
xchg
inc
fistpl
add
into
pop
push
xor
nop
insb
jnp
call
inc
pop
stos
fcom
lret
inc
mov
dec
mov
stos
icebp
push
jl
fimull
fsubp
bound
push
dec
imul
dec
out
dec
jecxz
xchg
ss
fsts
hlt
xor
xchg
fabs
dec
cmp
rcrl
lods
test
popa
add
test
and
sbb
cmpsl
and
or
mov
sub
dec
push
fisubl
sbb
leave
sub
or
cmp
in
and
xchg
pusha
jmp
xor
jg
and
or
pop
ret
lock
jnp
jne
push
cmc
test
pop
cmp
pop
je
xchg
adc
adc
pop
xor
xor
scas
pop
out
adc
mov
dec
xorl
and
mov
lret
mov
fucompp
sbb
lock
dec
test
xchg
test
jae
push
pop
into
fwait
jle
pop
jo
insl
xor
call
mov
mov
push
icebp
jbe
inc
inc
nop
je
imulb
loop
or
jg
out
add
pop
pop
pop
enter
xorl
punpckldq
and
daa
lret
push
or
dec
xlat
out
inc
outsl
lods
push
cmpsb
mov
mov
adc
outsl
and
fiadds
adc
mov
push
in
jb
je
int3
jle
call
popf
adc
mov
and
sbb
popf
cli
iret
aaa
mov
fisubs
ucomiss
pop
pop
xor
popf
adc
fldcw
in
dec
shlb
mov
mov
or
je
mov
test
jae
int3
lahf
fucomip
sub
aad
push
sbb
cmpsb
pusha
ret
xor
push
test
pop
inc
stos
pushf
out
add
icebp
jl
repz
jmp
and
mov
cmp
and
lahf
clc
fsts
or
ficompl
dec
lds
fists
sar
testb
in
cmp
pop
jnp
rolb
mul
ja
cmpsl
xor
mov
popa
cmp
out
scas
in
js
adc
jo
out
test
jo
or
add
negb
cmp
ret
incb
hlt
adc
lcall
dec
cmp
test
mov
cli
lds
in
jg
xchg
jmp
jno
std
ret
pop
sub
inc
xchg
or
int
and
lahf
cmp
add
lret
cmp
or
push
addl
inc
push
adc
and
and
cltd
test
int
xor
fbld
add
mov
stos
test
dec
pop
shll
mov
je
ja
lods
outsl
cld
lahf
sbb
in
repz
xchg
inc
insb
ret
mov
test
test
dec
mov
jp
stos
jge
imul
test
xchg
xchg
mov
jbe
lcall
adc
inc
out
jno
lock
mov
sbb
jns
dec
push
lcall
ja
or
adc
lahf
push
sub
inc
and
push
movsl
or
push
aam
ret
mov
cmp
mov
aas
sbbb
jns
jl
addr16
dec
es
mov
in
shrb
mov
jae
jmp
loope
out
cmp
movl
cwtl
fmuls
ret
push
mov
add
push
add
xor
inc
lock
mov
jo
sub
adc
sbb
pop
xchg
mov
push
push
mov
sbb
into
adc
pop
or
fistps
cmp
in
data16
fidivl
inc
pop
fs
stos
out
push
xor
stos
xor
out
cmpsb
cmc
push
cs
jae
and
jge
mov
push
sub
pop
mov
mov
xor
mov
xor
xor
or
and
sub
jns
cmp
and
sbb
xchg
mov
jge
add
gs
shlb
lahf
mov
pop
insb
xchg
out
cmp
or
jecxz
jl
push
push
test
and
mov
andl
pop
arpl
pushf
imul
loopne
imul
pop
cli
je
and
sub
ja
sub
xlat
or
cmp
jbe
cmp
in
pop
push
jbe
xchg
dec
pop
gs
hlt
loope
mov
inc
inc
sub
xchg
jg
arpl
loopne
cmp
addb
nop
daa
dec
sbb
fistps
mov
test
or
insb
jecxz
icebp
pop
rclb
sub
cmpsb
aaa
aam
lcall
and
xor
fnstsw
mov
xlat
inc
dec
pop
adc
xchg
daa
jge
aas
add
mov
cmc
add
ficompl
inc
or
dec
dec
push
sub
enter
cmc
sti
scas
arpl
push
pop
jmp
inc
sub
adc
idiv
push
add
nop
xor
push
jl
pop
enter
insb
cmp
aas
xchg
jle
pop
jle
stos
mov
sbb
xchg
push
add
imul
fdivl
adcb
int3
pop
mov
sub
pop
fldl
jae
dec
call
xor
stos
push
dec
fs
es
cmp
mov
popa
xor
push
and
daa
repnz
leave
shll
push
fstps
push
cmp
int
fmull
xor
jmp
shll
cmp
cmp
out
adc
xor
xor
cmovnp
push
mov
xor
adc
adc
push
adc
mov
xor
call
subps
dec
fdivs
or
aad
testb
adc
int
fcmovbe
sub
test
fnstenv
sub
in
mov
outsl
jmp
xorl
xor
ss
xor
mov
sbb
std
adc
jno
push
test
push
adc
ds
and
fnstsw
mov
inc
jbe
out
xor
lahf
cmpsb
sub
int3
imul
pop
popf
sti
lds
push
aas
ds
mov
adcl
jp
jp
clc
cli
test
push
push
add
mov
or
jp
inc
or
pop
push
sbb
cmc
pop
mov
movsb
cmc
outsl
icebp
jb
cmp
jno
cmp
setbe
mov
scas
push
xlat
lahf
xor
sub
inc
cltd
cwtl
cmc
lea
sub
jbe
push
mov
and
xchg
int
imul
jne
pop
push
jmp
sahf
mov
out
filds
pop
jp
jnp
imul
loope
sbb
aas
test
jge
inc
cltd
push
pop
and
xor
inc
sub
mov
push
loope
cmp
xchg
adc
popf
filds
dec
ljmp
pop
test
int
inc
inc
or
imull
jmp
ret
adc
outsb
popf
add
movsb
lcall
or
sti
mov
dec
xchg
mov
xchg
push
pop
js
jns
in
jmp
hlt
outsl
repz
mov
insb
and
mov
in
rcrb
xchg
xor
sub
fisttps
lock
pop
jno
das
mov
inc
js
ds
mov
push
adc
lods
xlat
cmp
jo
mov
and
pop
add
shll
call
mov
in
fwait
rcrb
mov
sub
bound
rorl
test
sbb
call
imul
arpl
jno
sbb
mov
mov
jne
fsts
sbb
push
add
test
dec
xchg
repnz
xorb
lret
dec
fnstcw
rep
jae
add
outsb
inc
cmp
add
dec
rol
sarb
idiv
xor
lods
or
outsl
add
xchg
and
std
xor
sbb
cwtl
dec
mov
and
es
sbb
inc
por
xor
xchg
pop
mov
push
pop
jne
test
jge
push
pop
mov
jnp
mov
int3
int3
orb
aad
push
push
inc
mov
add
aas
inc
sub
adc
cmpsl
xor
mov
lds
push
ret
dec
cmp
inc
add
mov
mov
aad
dec
shrb
in
cmp
mov
into
cmp
mov
cmpsl
xor
inc
mov
dec
popl
in
cltd
out
jmp
popa
out
add
fs
and
pop
ljmp
mov
sbb
cmp
mov
sahf
xchg
outsb
int3
pop
iret
dec
cmp
mov
jno
jmp
int3
xor
lcall
scas
xchg
lahf
mov
ficomps
insb
pop
xor
ja
pop
push
adc
jae
xchg
adc
stc
jmp
outsb
das
test
or
or
fdivrl
imul
subl
addr16
sub
adc
je
mov
and
cli
adc
test
into
insb
add
icebp
adc
sarl
push
xlat
cmpsl
movsb
and
and
sub
adc
dec
call
sub
sahf
shll
out
sarl
jle
sbb
addr16
add
push
cmpsb
mov
insb
xlat
dec
sub
inc
data16
mov
in
or
and
xchg
and
xor
pop
call
movsb
arpl
sbb
aas
jne
add
popf
xchg
outsb
sub
jb
add
mov
int3
mov
mov
and
or
popf
push
adc
icebp
or
jg
loopne
out
call
aad
mov
sub
dec
push
adc
lock
mov
pop
cmpsl
jecxz
in
fwait
js
push
adc
fisttpll
lods
sub
ficomps
dec
outsb
lea
out
les
jnp
loope
mov
jp
scas
add
adc
cmpsl
jbe
xor
xchg
xchg
ja
js
lea
insb
cmp
lahf
int3
sarb
test
mov
fpatan
lret
jbe
dec
cmp
rcll
add
stc
pop
shlb
cmp
xchg
shrb
cmp
pushf
mov
push
ret
sti
fiaddl
dec
mov
xchg
pop
cmpsb
cwtl
das
xchg
ret
adc
adc
cld
lcall
inc
aaa
stos
sbb
sub
rcll
mov
jle
push
push
mov
xor
mov
je
inc
es
cli
cmp
loopne
cmpsb
ret
daa
stos
rolb
inc
test
and
lret
sbb
in
ljmp
xor
push
jne
scas
adc
and
cmc
ss
dec
mov
mov
xchg
sub
cmpsb
mov
pop
push
shl
imul
adc
xchg
xchg
mov
stos
jnp
out
xor
shr
push
insl
out
mov
push
aad
mov
jl
inc
mov
fadds
rcl
lret
outsl
mov
inc
addr16
or
mov
or
out
aas
xchg
xchg
jo
xchg
adc
or
popa
push
loope
imul
imul
jno
lods
dec
cmp
lds
mov
notb
xchg
sbb
arpl
mov
inc
neg
jmp
lret
rclb
adc
adc
rclb
jne
repnz
fisubl
arpl
or
dec
movsb
fbstp
mov
loope
pop
mov
fcmove
sub
mov
sbb
inc
inc
hlt
in
and
or
pop
jge
imul
lods
sub
cmp
add
mov
movsb
arpl
push
aaa
xchg
and
push
je
sub
or
cmp
jecxz
xlat
push
fwait
xor
jb
les
test
shll
cmpsl
ffree
xchg
sahf
and
shl
mov
fistpl
outsl
jno
rcrl
jg
je
pop
stos
out
mov
insb
je
loopne
lret
cmovge
ret
ds
xorb
sub
or
jmp
arpl
xchg
lret
jmp
mov
lret
cmp
or
ss
imul
pop
lret
xorb
cwtl
ret
int3
outsl
addr16
sbb
movsb
mov
mov
clc
push
push
arpl
xchg
inc
das
adc
xchg
mov
popa
jge
loopne
repnz
push
xchg
xor
inc
adc
inc
aas
je
mov
pushf
xchg
mov
das
in
mov
jg
repz
aaa
test
lret
fs
cwtl
movsl
aad
jl
scas
bound
lret
mov
int
xor
inc
aam
ljmp
adc
jmp
stos
je
lea
mov
mov
xchg
ret
xchg
add
xchg
mov
xchg
out
sub
cmpb
inc
enter
adc
adc
xchg
sub
push
jbe
iret
outsb
sbb
mov
sbb
shl
iret
and
and
push
push
push
js
test
push
xchg
repz
lret
outsb
jne
push
iret
push
cmp
mov
mov
adc
push
loope
xor
shll
mov
leave
mov
fs
push
scas
gs
cmp
pop
xor
and
xor
jns
xchg
ficomps
pop
test
aad
mov
push
stos
nop
arpl
lea
or
dec
je
fsubr
xchg
push
mov
iret
les
push
cmp
insb
mov
push
sbb
cmp
jno
add
mov
fisttps
insb
jmp
sbb
cmp
xor
mov
and
xor
add
push
ja
and
or
gs
inc
mov
das
mov
inc
adc
xchg
in
int3
nop
add
jecxz
mov
mov
dec
jnp
push
mov
shl
lods
in
lea
popf
dec
pushf
stos
mov
jno
jg
rcl
sbb
sub
xchg
lea
mov
or
mov
adc
inc
subb
sbb
imul
insl
imul
cmp
addr16
mov
mov
jne
lock
dec
add
rorb
icebp
iret
mov
mov
push
in
daa
ss
push
fistl
scas
stc
cmp
sub
fdivl
lock
xchg
sbb
sub
sub
ljmp
pop
sahf
std
mov
mov
aad
cmp
sti
push
and
mov
lds
movsl
inc
sbb
adc
mov
test
pop
mov
sub
jno
lock
adc
fists
mov
lret
and
push
dec
inc
lcall
subl
imull
test
sbb
jge
sbb
sbb
pop
hlt
jmp
push
xchg
ljmp
imul
adc
push
sbb
dec
es
outsb
push
push
pop
subb
push
fcompl
xor
pushf
add
dec
xor
add
stos
dec
add
mov
xor
push
dec
xchg
adc
mov
jp
outsl
pop
int3
sub
nop
hlt
cmp
pop
mov
xor
or
in
gs
sub
jl
lret
loop
inc
mov
sub
cltd
push
xchg
push
repnz
andb
mov
xchg
std
cwtl
dec
or
nop
cmp
mov
das
cli
sub
inc
cmp
mov
sub
jle
lds
sub
mov
in
jle
cmpsl
mov
add
sub
mov
sub
inc
loopne
dec
subl
imul
inc
mov
push
int
enter
push
mov
xchg
std
sbb
in
xchg
ret
xor
shlb
cmp
mov
mov
mov
push
faddl
cmc
jle
fstl
sub
test
push
xchg
aaa
imull
fcmovne
mov
sbb
pusha
popf
jne
adc
and
jecxz
in
mov
push
out
arpl
leave
jecxz
sbb
pop
imul
imul
mov
mov
jg
scas
clc
mov
mov
xor
xchg
jmp
adcb
ja
insl
xor
scas
out
dec
mov
push
pop
jne
or
adc
push
add
xchg
inc
fnstsw
cmpsl
inc
adc
lds
test
rcrl
jb
and
mov
xchg
adc
jmp
outsb
add
adc
fcompl
ja
insl
shrl
add
out
cmp
xor
pop
rorl
push
mov
add
jo
dec
sbb
inc
cmpl
xor
les
pushl
xchg
mov
jno
cmpsb
nop
cmp
push
mov
jnp
call
push
xor
or
dec
pop
jge
in
sbb
mov
dec
lds
test
push
mov
push
pop
and
cld
lret
fwait
rcr
fdivrp
mov
call
add
fmuls
xchg
xchg
adc
xor
js
ljmp
sbb
jno
jbe
cmpl
imul
dec
cmpsb
pop
insl
jne
ret
lods
xchg
push
adc
mulb
mov
mov
cs
rcl
jg
js
add
and
sub
and
jecxz
sub
inc
test
mov
iret
fidivs
or
loop
sbb
jg
push
xor
subl
mov
ret
adc
sub
add
in
jle
aaa
sbb
mov
ss
mov
cltd
xrelease
pop
or
xor
push
add
lock
xchg
movsl
xor
mov
mov
lret
inc
push
je
insb
jns
push
and
xor
dec
in
cmpsl
xchg
pop
shl
test
push
mov
cmp
pop
lahf
xor
pop
jmp
push
xorb
jge
cmp
lea
mov
pop
mov
push
or
sti
fisubl
sub
cs
cmp
push
in
aad
add
dec
mov
xlat
aas
test
data16
push
stos
or
outsb
jp
and
mov
in
sbb
mov
inc
mov
test
or
imul
loop
or
sub
cltd
aaa
mov
or
push
iret
xchg
fidivs
mov
sub
fdivl
xor
jbe
inc
imul
in
cltd
aam
inc
int3
cmp
imul
push
sub
inc
fcmovu
iret
lock
aaa
enter
add
adc
jge
pop
outsb
sub
dec
inc
rcrb
data16
push
sbb
rorb
add
aaa
dec
bound
pusha
mov
or
sub
cmc
mov
rcrb
and
pop
leave
fs
cwtl
xor
fcompl
les
mov
jl
mov
and
dec
push
xor
outsl
inc
bound
sub
mov
mov
and
jmp
xchg
cltd
sbb
and
push
mov
lock
xchg
aas
outsl
inc
push
ret
lods
bnd
and
icebp
and
cmpsb
cmp
imul
or
adc
push
mov
sub
xacquire
xlat
jmp
arpl
jno
scas
inc
cmp
xor
gs
lret
mov
mov
fisttpl
fimuls
int3
stc
push
shlb
aas
push
pushf
dec
sbbl
pop
fnstenv
mov
and
popa
sub
xor
in
cld
xchg
pop
rcrb
popf
out
shl
mov
xlat
cld
ljmp
mov
in
or
mov
sub
jnp
stos
repnz
adc
mov
mov
and
cmc
mov
aas
sbb
dec
filds
inc
fwait
push
or
std
add
xchg
stos
pop
shl
pop
iret
dec
mov
movsb
mov
icebp
and
adc
je
in
sbb
and
jae
pop
inc
outsb
dec
lahf
jecxz
imull
test
sub
sti
mov
addr16
mov
mov
imul
mov
xor
xchg
scas
jb
int3
and
lcall
nop
pop
aam
or
test
das
arpl
cmc
test
pop
jl
add
sub
or
or
sbb
push
add
or
in
sub
pop
popf
jns
clc
adc
jecxz
lock
mov
rcr
cltd
push
cmc
jae
xchg
sbb
data16
in
loopne
test
ret
or
add
xchg
jno
push
mov
imul
mov
mov
stc
inc
mov
insb
cld
ret
stos
int3
iret
pop
xor
out
cmp
sbb
dec
hlt
popf
ja
xchg
sub
mov
cli
push
sbb
push
stc
leave
fnstcw
sub
stc
mov
lcall
daa
aad
ret
push
inc
cmp
int3
lret
xchg
jecxz
roll
test
sbb
jecxz
mov
clc
sbb
sub
and
mov
clc
ss
xor
xchg
pop
sbbl
shrb
clc
addr16
pop
or
stc
cmc
or
jl
mov
mov
ja
pcmpgtw
js
pop
mov
fninit
and
jge
lret
sub
jo
jle
dec
test
out
dec
imul
push
xor
dec
popf
bound
push
loope
lret
int3
insl
jl
fnstsw
mov
test
fisubrs
or
jo
jbe
dec
mov
xchg
repnz
not
mov
push
iret
pop
incl
les
mov
mov
loop
imul
nop
push
cmp
leave
scas
pop
call
aad
in
daa
pop
movsb
lods
sbb
das
pop
cld
pusha
out
das
out
cld
pop
pop
aam
add
pushl
push
mov
mov
jecxz
jnp
cld
insb
lock
sbb
push
inc
cltd
jae
xchg
mov
xor
sbb
fists
jae
jae
or
mov
and
ds
jno
sbb
test
push
pop
arpl
mov
xchg
hlt
shl
pop
aas
imul
jb
mov
mov
mov
mov
fadds
mov
cmp
push
ficoml
inc
cld
mov
add
xor
adc
out
jp
adc
pop
mov
movsl
cmp
fxch
lods
sbb
lds
fldt
mov
ret
adc
ret
pop
sub
insb
dec
testl
cwtl
icebp
push
je
ffreep
xchg
adc
imul
inc
shlb
in
mov
inc
xchg
mov
pushf
aaa
and
mov
push
sahf
nop
mov
pop
pusha
jle
mov
jns
shll
jl
imul
lcall
add
hlt
or
in
inc
ja
or
dec
loopne
addr16
sbb
in
leave
pop
call
xor
pop
pusha
test
mov
or
mov
rol
inc
inc
fldcw
cld
mov
repz
pop
push
js
push
pop
cld
popa
xor
imul
sub
cwtl
xor
xchg
inc
push
aad
push
cmpsl
add
fildll
fstp
into
pop
jnp
dec
adc
pusha
pop
inc
xor
aaa
add
fnstcw
mov
adc
cli
loop
adc
rcll
inc
sub
cmp
fwait
es
loopne
pushl
adc
aas
scas
aaa
jae
add
popa
fucomp
leave
in
jbe
out
pop
xor
cmp
dec
adc
popf
pop
xchg
and
movsl
xchg
lods
jne
test
out
mov
outsb
pop
xchg
pop
adc
dec
testl
sbb
daa
cs
pop
in
jmp
scas
pop
xchg
leave
xor
cmp
or
push
jae
inc
xor
in
ficompl
sahf
lcall
xchg
xchg
or
orl
jnp
out
divl
leave
ret
ds
inc
stos
mov
jmp
pop
push
fwait
pop
sbb
inc
dec
setb
sbb
adc
outsb
cmp
in
and
dec
xor
jo
xorb
ret
sbb
push
sub
repz
jecxz
das
pop
adc
cmp
push
xchg
notb
aaa
std
push
shlb
fldenv
jmp
pop
mov
mov
cld
xchg
inc
cld
mov
in
xchg
jo
jnp
jmp
or
inc
repz
cmp
and
or
and
hlt
mov
fisubrs
and
or
mov
pop
lcall
add
jae
add
and
subb
fnstsw
xchg
add
jmp
addl
or
dec
and
push
cmp
fisttpl
outsb
test
fld
test
xchg
stc
imul
dec
mov
push
adc
add
dec
roll
aas
cli
loope
mov
xchg
jbe
xchg
sub
add
dec
popa
xchg
scas
pop
inc
lock
fs
outsb
popf
jecxz
sub
mov
outsb
xor
call
bound
es
cmp
movl
xchg
test
aad
adc
sahf
ret
out
sbb
ds
jp
adc
pop
shlb
lea
jl
sub
pusha
jae
pop
add
pop
inc
jb
sub
into
mov
shll
jle
or
jp
aas
inc
and
cmp
bound
or
push
pushf
or
xor
das
jo
push
inc
or
popa
mov
jle
clc
jb
or
mov
jmp
mov
dec
aam
inc
ficoml
inc
mov
mov
and
mov
or
shlb
mov
dec
sbb
mov
mov
push
xchg
mov
out
leave
call
or
repnz
jnp
push
lcall
jns
lea
pop
xor
das
pop
push
fcmovnu
fiadds
mov
adc
inc
or
imul
and
loope
fnstcw
xchg
lock
dec
jns
cmp
sub
aad
imul
comiss
scas
das
lea
shlb
mov
dec
inc
push
nop
push
mov
subb
sbb
les
leave
outsb
pop
dec
cwtl
inc
mov
pop
inc
cld
cmpsb
std
jne
dec
pop
lods
shll
add
icebp
rol
sub
lcall
xchg
int3
stos
test
pushfw
xchg
subb
in
cmp
mov
adc
enter
adc
cmp
ret
adcl
aam
rorl
mov
loope
xchg
mov
call
fists
pop
jg
jns
jl
push
mov
mov
int3
pop
xchg
mov
add
sub
out
xchg
sbb
hlt
hlt
fwait
daa
je
pushf
xor
int
mov
sbb
rol
jbe
insl
bndstx
sbb
scas
rcl
or
adc
and
shrb
lret
and
mov
out
sbb
repz
or
ljmp
mov
mov
pop
inc
inc
mov
and
iret
cmp
sbb
push
test
xchg
fimull
test
adc
movsb
jns
jmp
add
or
insb
push
add
stos
and
pop
push
faddl
js
pop
pop
cmp
adc
out
sbb
xlat
push
mov
or
movsl
bound
aam
pushf
mov
jg
iret
pop
scas
adc
xor
xchg
push
dec
mov
sub
mov
lahf
pop
mov
decb
and
push
sahf
and
jb
fmuls
jg
xor
outsl
jae
mov
fadds
adc
dec
push
loope
xlat
xor
andb
mov
pop
mov
loope
xor
sbb
loopne
adc
movl
fs
loopne
enter
xchg
scas
sub
in
mov
imull
xor
outsl
adc
cmp
ljmp
hlt
adc
mov
add
inc
test
push
loopne
imul
cwtl
add
cltd
pushf
adc
mov
and
int3
leave
xlat
mov
mov
push
cli
inc
xor
mov
js
lods
idivb
mov
pop
jp
dec
jp
xchg
pop
push
add
pop
push
pop
jbe
or
lods
scas
xor
popf
push
fstpt
aas
sbb
mov
ss
les
mov
mov
jbe
mov
lret
mov
mov
testb
and
sub
pop
aam
xchg
lcall
mov
mov
xchg
pop
sub
notl
cmpsl
mov
cmpsl
das
dec
pop
pop
adc
add
mov
mov
stos
dec
push
fsubs
jo
sub
rorb
sahf
jle
movsl
clc
sub
call
cs
lock
xor
jg
lods
lahf
adcb
push
pop
pop
push
jb
mov
shl
and
or
scas
icebp
jo
jle
cmp
xchg
mov
lods
adc
add
stc
test
test
pop
add
imul
push
int
inc
fnsave
xchg
je
scas
inc
leave
ss
test
adc
adc
mov
dec
jns
out
xor
lods
sti
out
arpl
xor
ffree
shl
xlat
jp
jl
xor
std
sbb
insb
mov
test
pusha
push
les
pushf
inc
push
je
test
jb
jl
inc
ds
scas
push
inc
mov
cli
outsb
push
sbb
cmp
out
cmp
ljmp
push
inc
testl
ds
mov
dec
or
ret
call
test
test
cld
js
jg
daa
lret
add
xor
pop
jmp
mov
and
movsl
mov
testl
imul
pop
in
and
push
test
lret
jno
xor
mov
dec
ja
push
push
sbb
jnp
sub
out
nop
mov
push
mov
les
loope
shrb
je
shll
and
in
movsb
js
push
dec
idivl
fdiv
ret
nop
adc
shl
iret
pushf
jecxz
xor
and
push
repz
jp
test
je
mov
adc
adc
sbb
data16
test
int3
pop
and
popa
sub
push
sbb
xor
fdivl
sbb
ss
mov
cmp
fldenv
shll
inc
push
aam
sub
in
xchg
cmc
push
push
ja
hlt
cmp
fistl
xor
inc
xchg
icebp
data16
adc
lea
push
inc
out
popa
fcmovnbe
repz
cmp
inc
xlat
popf
sbb
xchg
add
sbb
mov
sbb
pop
push
adc
mov
xchg
dec
out
jmp
lcall
adc
sbb
in
repnz
ficoml
test
xchg
dec
pop
lcall
push
outsl
mov
ja
cmp
push
sub
sub
insb
sub
leave
addr16
mov
cli
mov
xor
movsb
push
mov
popa
jl
jp
into
mov
jno
and
and
sub
or
in
dec
sbb
test
xor
mov
pop
js
out
ljmp
imul
cmp
ss
and
lods
jae
mov
out
ret
enter
out
repnz
loop
mov
xchg
icebp
push
mov
sbb
jp
sbb
cmp
sbb
xor
push
pop
imul
xchg
xor
stc
sbb
add
jo
rclb
dec
or
cmp
jle
inc
mov
dec
add
fs
test
mov
ret
in
ret
inc
fstps
adc
sbb
xor
xchg
loope
cmp
add
mov
aad
jbe
insb
mov
mov
je
xlat
mov
insl
clc
cmp
cmpsl
inc
aam
inc
mov
inc
mov
adc
mov
ror
pop
push
mov
sub
cltd
scas
movsb
rorb
hlt
rcrl
out
call
jmp
in
sbb
frstpm(287
gs
xchg
or
mov
andl
loope
jo
xor
pop
dec
std
and
mov
pop
iret
lret
mov
xchg
jmp
mov
stc
adc
std
push
xchg
test
shl
cwtl
clc
push
jg
call
mov
jmp
outsb
cli
cmp
mov
mov
pop
dec
nop
jnp
xor
push
mov
xchg
into
mull
cwtl
rorl
lods
outsl
out
mov
lock
loop
pop
popa
ret
fninit
mull
sbb
and
adc
sub
jl
dec
pop
roll
ss
xchg
hlt
movsb
popl
xorl
fwait
sbb
imul
gs
fnstenv
cld
jecxz
and
ljmp
mov
push
pop
sub
rcl
jne
inc
mov
jg
lret
cltd
arpl
pop
xor
out
imul
cmpsl
mov
fistl
nop
movsb
add
lock
loopne
insb
xorb
fimull
mov
cmp
ret
dec
lahf
push
jecxz
and
movsb
push
imul
push
or
in
mov
mov
mov
lahf
dec
inc
xchg
sbb
imul
sbb
xchg
inc
hlt
inc
enter
jo
pop
push
xor
push
mov
jns
subl
rclb
push
mov
pop
lret
neg
in
ljmp
ljmp
inc
jg,pt
ds
shl
sbb
loopne
pusha
lcall
pusha
ficoms
cmp
test
mov
mov
dec
std
outsl
addr16
lretw
push
inc
or
sbb
mov
inc
xlat
jb
inc
stos
mov
arpl
test
push
inc
add
cmpsb
add
repz
push
dec
lret
outsb
ljmp
vpextrw
lds
fwait
and
test
repnz
pop
outsb
inc
pop
sbb
ucomiss
adc
and
aad
pop
dec
stc
mov
call
mov
xor
xor
out
cmpsl
and
xchg
push
xchg
and
xor
mov
pop
ret
add
les
mov
sarl
mov
mov
fwait
push
xlat
lds
cmc
mov
shll
xchg
dec
into
xchg
out
inc
js
dec
xchg
js
jnp
aad
lods
int3
jns
sbb
and
jge
lcall
inc
movsb
or
mov
pop
pop
mov
mov
and
insl
icebp
pusha
xor
jmp
xor
pop
xchg
dec
mov
sub
xchg
lret
pop
xor
lcall
push
xchg
xchg
movsl
repz
adc
jbe
int
xor
test
mov
xlat
loope
push
push
mov
sbb
test
ret
imul
test
dec
mov
adc
into
sbb
stc
sbb
pop
or
xor
int3
push
push
aad
dec
mov
dec
sub
or
push
or
cmp
fldcw
pop
xor
xchg
ds
imulb
aaa
mov
imul
das
lods
rcrl
rcll
inc
addr16
mov
and
mov
and
test
mov
xor
and
dec
dec
icebp
jns
into
jb
mov
pushf
jge
loope
fisttpl
mov
xchg
stc
in
dec
fcomps
mov
mov
add
mov
test
cmp
jmp
mov
mov
repz
mov
nop
or
add
das
pop
push
and
rorl
inc
mov
imul
std
les
dec
pop
pop
stos
imul
scas
data16
out
fs
xchg
jmp
out
ja
enter
les
out
inc
xchg
fcmovb
sbb
mov
xor
cmpsl
mov
cli
in
push
shrb
and
popa
mov
stos
sbb
int
pmulhw
xchg
xchg
into
mov
mov
sbb
xor
xlat
fisubs
cmp
lea
mov
sub
test
in
xchg
repnz
jmp
std
mov
sarb
and
cli
xlat
roll
loop
mov
test
cmpsl
xlat
mov
sub
jle
or
dec
add
adc
movsb
stc
mov
inc
shll
lcall
stos
notb
and
loop
jb
std
into
mov
and
lahf
mov
dec
scas
dec
cmp
mov
add
int3
rolb
and
dec
lock
scas
loop
mov
int3
xor
cmp
shrl
aam
dec
fs
aad
sub
fcmovne
leave
imul
les
subb
sub
pop
xor
or
stc
xchg
sbb
sbb
loop
aad
out
loopne
add
jp
jle
inc
xchg
mov
imul
lods
sbb
cmp
enter
adc
xchg
push
sub
ljmp
lds
cld
add
sub
add
in
jp
test
adc
repnz
dec
inc
lret
jb
arpl
jle
pop
jbe
scas
in
arpl
sti
xchg
js
cmpsl
ret
int
sbb
lret
pop
mov
push
jae
out
rclb
addr16
loop
inc
and
push
cmp
mov
xchg
sub
adc
adc
fcomps
and
mov
pop
adcb
jo
popf
std
push
sub
inc
mov
lcall
mov
jns
push
test
popf
adc
lret
or
and
mov
int
add
mov
inc
pushf
push
loope
pop
and
and
out
push
insb
or
or
xchg
pusha
mov
cmp
ret
cmp
mov
push
shlb
mov
cmpsl
and
mov
lods
pusha
push
xchg
sub
jmp
dec
or
les
insb
imul
cmp
or
mov
push
xor
sub
outsb
lds
lahf
mov
ret
add
push
out
aam
adc
cmp
mov
gs
dec
ret
xchg
call
jae
cli
pop
into
cmpsl
inc
inc
rcll
sbb
jmp
jbe
sub
pop
cmc
addr16
ret
incl
mov
xorb
mov
sub
add
lahf
andl
sbb
dec
xchg
cs
daa
inc
cmpl
push
xchg
shrl
int
enter
cli
cmpsb
mov
enter
in
in
movsl
sbb
dec
sarl
insb
mov
mov
mov
push
popa
sbb
mov
xor
push
insl
mov
lahf
lret
div
push
iret
mov
fimull
cltd
xor
and
inc
je
dec
mov
xor
pusha
rcll
pop
inc
xchg
add
xchg
mov
int
add
add
out
icebp
xor
dec
inc
mov
ss
jno
add
ror
sbb
adc
loope
jp
dec
jge
jecxz
pop
xchg
sti
movsl
dec
adcl
push
out
and
in
dec
mov
insb
xor
fstl
pop
lods
imul
cmpsl
into
in
jp
insb
cmp
movsb
hlt
dec
cwtl
test
pop
aas
mov
sbb
adc
hlt
repz
jae
and
fs
dec
sbb
fs
loope
jp
cli
pop
out
shll
sub
stos
clc
out
add
inc
or
inc
jge
stos
sbb
les
ret
into
je
fnsave
adc
push
cmc
jmp
shll
cmp
cmp
lea
push
pop
mov
mov
sub
imul
push
mov
js
jae
fbld
popa
dec
icebp
lret
xchg
out
aam
cld
fisttps
jmp
daa
jnp
mov
cmpsb
add
sbb
and
pusha
fists
sbb
pop
adc
outsb
jnp
movb
int
popf
push
sub
push
mov
pop
sub
jns
stos
cmp
pop
push
lock
addl
jns
and
insb
push
inc
mov
rol
daa
and
data16
inc
gs
aam
push
orb
or
loope
push
es
pop
dec
lods
repz
sub
xchg
pop
scas
jl
cmpsl
subl
push
cmpsl
das
mov
or
test
arpl
add
pop
add
push
jnp
sbbl
adc
cmpsl
fimuls
aad
loopne
mov
in
cli
ja
cmp
lret
mov
sahf
jns
shll
mov
jno
arpl
jb
lret
fisttpl
jne
lcall
fs
pop
add
adc
jmp
sbb
jnp
mov
cmp
pop
jle
inc
fdivp
dec
inc
notb
jg
imul
rcr
sbb
add
lods
dec
pop
sbb
dec
mov
pop
call
add
push
pop
icebp
stc
stos
fcoml
xor
jp
jle
push
add
push
test
pop
sub
arpl
scas
por
in
mov
pop
out
push
adcl
stos
jmp
push
mov
mov
daa
int3
and
ret
ficompl
leave
adc
mov
stos
mov
ljmp
sub
test
xchg
mov
rorb
dec
enter
test
xor
pop
mov
and
or
ficoms
nop
add
sti
push
pop
adc
faddl
pop
jne
lea
rcrl
hlt
popf
iret
fistl
ret
adc
or
lahf
ljmp
and
shrl
leave
insl
pop
punpckhbw
loope
cmp
jno
push
mov
mov
xchg
mov
push
mov
push
pop
or
jl
push
out
movsl
jle
xor
dec
dec
out
xchg
aaa
ljmp
cld
jne
dec
repz
mov
mulb
xor
pop
bnd
push
nop
add
xchg
cmp
cmpsb
pop
cmp
push
arpl
add
and
cmp
imul
cmp
lahf
inc
push
add
movsl
sbb
imul
fidivrs
mov
sub
cmc
adc
mov
cmp
test
cld
push
jae
cmpb
xchg
test
ret
popf
repnz
aad
push
xchg
scas
sub
sbb
adc
std
loop
movsl
mov
or
cmp
xchg
sbb
adc
ss
mov
xchg
negb
pop
pop
mov
ja
pop
xchg
and
sarl
xchg
mov
insl
mov
cli
repnz
rolb
mov
popf
mov
sub
dec
popa
arpl
sub
sarl
ret
sub
pop
xor
mov
stos
aaa
sbb
lret
fwait
mov
mov
mov
dec
cld
pushf
xchg
adc
ret
xchg
mov
stos
ror
xchg
jge
adc
pusha
scas
add
test
loop
out
cli
jbe
pop
sub
icebp
push
inc
jge
mov
ds
hlt
inc
divl
mov
lret
xchg
lret
push
xor
inc
adc
xor
push
mov
lret
sub
in
xor
xchg
loopne
and
shrl
out
lret
pop
imul
imul
push
inc
jecxz
int3
cltd
stos
inc
cmp
pushf
cmp
sbb
addr16
or
sbb
sub
bound
push
shlb
lcall
fldenv
fdivr
xor
loop
mov
into
fbld
mov
rcr
pop
imul
bound
xchg
repnz
jno
cs
sub
or
jmp
mov
rcll
mov
push
ljmp
ret
imul
cli
inc
mov
xor
push
test
sub
pop
ss
mov
nop
push
mov
popf
popa
sub
jl
cwtl
clc
fstl
xchg
push
lds
xor
xor
or
and
jmp
ljmp
in
xchg
ljmp
arpl
stc
test
pop
push
stc
in
cmpsl
je
push
call
xchg
mov
jmp
sbb
shlb
xchg
outsl
push
sub
jp
pusha
repnz
stos
sub
les
iret
cwtl
push
push
ja
ret
dec
add
stos
add
ficoms
jo
imul
jno
fildll
push
push
mov
sub
jns
fisubrl
dec
xchg
xchg
push
push
cmp
daa
outsl
push
imul
cmp
inc
jmp
sbb
push
bound
js
xchg
push
icebp
xchg
int3
shrb
and
and
mov
push
jno
pop
es
fnsave
jecxz
outsb
call
fisttpl
dec
pop
mov
cs
and
out
scas
push
pop
arpl
mov
or
jmp
add
scas
xor
xchg
jp
add
sbb
arpl
xorb
ror
movsl
iret
jae
in
enter
nop
hlt
mov
jno
out
and
gs
push
or
cmp
ljmp
psrlw
clc
fs
mov
in
pusha
nop
jmp
push
lcall
stc
aaa
popa
add
daa
add
and
xor
sub
inc
cltd
hlt
jp
pop
cmp
inc
and
sbb
push
mov
iret
jg
push
sti
push
es
je
out
mov
push
xor
nop
sub
add
jne
mov
das
insb
addr16
cld
jl
inc
adc
jo
stc
jnp
xor
lahf
aam
pop
ret
movhps
fcmovnb
cmp
scas
pop
adc
xchg
rcrb
jg
aaa
and
inc
fdiv
iret
adc
ret
push
ret
pushf
gs
xor
fisubs
andl
pushf
pop
mov
pop
lods
test
mov
jb
sbb
das
fldt
addl
xor
and
pop
mov
mull
arpl
int
adc
xchg
movsl
incb
outsb
or
lea
xor
popf
aam
popf
fcoml
lock
xchg
add
test
push
lea
lcall
lock
rclb
mov
lret
fwait
add
jbe
fiadds
into
popa
outsl
mov
mov
push
sub
jge
lods
xchg
push
cmp
jecxz
sub
outsl
fldl
mov
imul
pop
lock
xchg
shl
push
dec
inc
mov
pop
fs
xor
pop
shrb
dec
mov
test
xor
adc
adc
xchg
cmpl
dec
xchg
or
pop
sub
or
divl
mov
lock
insb
imul
or
inc
rcl
mov
ds
xor
mov
les
movsb
push
aam
sarl
sbb
adc
data16
sub
jne
testb
cmp
arpl
pop
stos
out
in
ja
mov
les
das
aad
in
out
mov
sub
xchg
jne
pop
pop
test
push
sahf
jecxz
mov
jae
add
adcl
cmp
lock
or
xchg
xor
xorl
leave
mov
push
call
lods
lea
lds
push
pop
das
es
ret
mov
inc
mov
or
pop
xor
gs
add
scas
xchg
mov
jae
scas
xchg
pop
fimuls
mov
jbe
cwtl
xchg
and
adc
jne
popa
fstpl
add
popa
ja
inc
dec
leave
mull
mov
xlat
orb
add
sbb
pop
lcall
dec
xor
jle
sahf
add
xlat
push
ljmp
adc
orl
test
jbe
aaa
leave
in
ja
mov
inc
shll
clc
sbbl
push
testb
jbe
out
mov
mov
xorl
sub
stos
popa
outsb
add
out
cld
cmp
jl
mul
or
jb
dec
repz
sti
sbb
lds
int3
cmp
dec
int3
ret
push
mov
push
leave
xchg
fyl2xp1
mov
outsb
jne
pop
sqrtps
jo
in
mull
aam
xchg
mov
mov
and
lods
sub
lds
push
fnstenv
pop
xor
loope
and
stos
and
jbe
xchg
xchg
loop
icebp
xor
jmp
movsb
xchg
cmpsb
and
push
cmp
fwait
hlt
pop
push
ljmp
dec
cmp
sub
call
inc
int3
in
cmp
xlat
imul
sbb
mov
enter
sbb
add
aaa
sbb
call
cwtl
jg
fcomp
xchg
mov
int
imul
and
sub
mov
jae
cltd
cmp
mov
mov
and
mov
iret
xor
into
push
and
aaa
mov
push
jle
js
lret
outsl
xchg
push
jmp
push
mov
mov
xchg
and
jbe
jp
mov
popa
jo
mov
jl
cli
cmp
lock
sti
rolb
sub
lea
jb
aam
inc
push
sbb
cmc
inc
sub
rcll
mov
popf
js
rcrl
sbb
aam
jbe
loop
cwtl
aad
xchg
lea
test
icebp
mov
jno
shl
xchg
push
in
dec
inc
imul
shlb
pop
xlat
pushl
pop
push
popa
jb
popf
out
add
jge
mov
sbb
pop
xor
lods
shl
aaa
xlat
rolb
es
cmp
sub
and
and
leave
or
push
push
jnp
mov
push
jae
xor
js
dec
int
out
je
push
sbb
jb
sub
inc
hlt
push
xchg
jae
les
icebp
xor
mov
ds
dec
and
cld
or
jnp
out
cmp
sbb
in
imul
push
xor
mov
insb
ja
xor
subl
jmp
and
adc
cmpsl
stc
fildll
xchg
sub
call
jl
pop
mov
cmpsl
jbe
repnz
rorl
xor
jl
popf
imul
call
test
sub
pop
repz
lock
jecxz
lods
cmp
movsl
push
lea
jmp
jno
addl
sti
or
addr16
add
mov
jmp
data16
rorl
sbb
addr16
or
test
jmp
xlat
out
fidivrl
in
ja
sbb
or
sarb
dec
lret
andb
shll
mov
test
xchg
enter
xlat
xchg
mov
and
flds
mov
stos
push
sbb
clc
std
pusha
mov
mov
xor
inc
jnp
xorl
cmpsl
ja
addl
inc
lds
mov
jns
jno
xor
dec
push
mov
jne
into
add
andl
dec
fnop
enter
test
in
sbb
fisttps
stos
sbb
cmp
lahf
dec
sub
cld
xchg
mov
gs
cmpsl
mov
mov
mov
mov
cmpsb
cli
xchg
adc
or
mull
into
inc
sbb
lock
jnp
pop
push
aas
stos
xchg
push
je
push
cmpl
pop
xor
sub
fsubrs
fsubl
in
adc
adc
repnz
jbe
cmpsb
xor
aas
fs
or
mov
aaa
cmpsb
dec
cmp
sub
ja
test
mov
ret
mov
dec
cwtl
jb
cmp
sbb
rclb
mov
fdivrp
mov
xor
add
cli
xor
xlat
outsl
jecxz
outsl
shl
addr16
lret
das
notl
and
lret
arpl
push
mov
lods
and
push
dec
push
insb
lea
and
or
cs
mov
arpl
cmpsb
sub
or
and
in
pop
push
adc
es
sbb
cmp
sbb
je
jno
int
push
sbb
pop
push
jo
fs
nop
fsts
dec
xlat
sbb
movsl
cmc
out
xchg
push
cs
lods
int
inc
mov
or
inc
loope
pop
jl
inc
out
jb,pt
push
sub
aaa
stos
sbb
sti
mov
push
imul
adc
scas
jp
xchg
or
sbb
mov
out
sub
xchg
mov
popf
stc
sbb
xchg
mov
ret
icebp
lea
jg
test
push
scas
mov
mov
add
in
xlat
orb
iret
lahf
fistps
dec
insb
int3
rcrl
mov
jb,pn
idiv
out
bound
xchg
inc
fnstenv
mov
icebp
decb
xchg
jnp
inc
or
xchg
clc
jns
fldcw
lds
notl
movsb
call
test
fiaddl
aam
popf
sub
jno
fmull
insb
mov
xchg
pusha
sbb
inc
xchg
je
dec
mov
test
mov
mov
orb
aas
out
cs
inc
cs
mov
nop
add
dec
stc
pushf
inc
out
add
or
jo
inc
pop
cmp
bound
mov
lahf
xor
pop
fptan
bound
dec
or
fimull
cli
mov
xchg
xor
cmp
push
jmp
ss
lahf
push
jl
mov
mov
sbb
push
jno
push
sub
lcall
rcll
xchg
xchg
push
push
dec
ficomps
pop
sbb
lret
jbe
adc
cmp
call
push
imul
jne
sub
jae
xchg
fstps
daa
pop
rcrl
enter
jl
scas
fcmovnbe
iret
push
test
scas
dec
xchg
and
lret
es
add
pusha
xchg
nop
testb
inc
cmp
jo
mov
and
fcoml
dec
jge
aad
and
sti
int3
lea
or
xchg
xor
push
jae
lret
mov
adc
cmp
pop
dec
repz
adc
push
lcall
inc
popa
and
hlt
pop
push
in
push
hlt
lods
cld
mov
cmpsl
push
movsl
inc
sbb
push
cmp
les
dec
addr16
and
cmpsb
fucomip
xchg
pusha
into
jg
aam
jle
emms
pushw
pop
cmp
and
outsl
ret
rsm
jns
dec
dec
jle
xchg
movsb
fimull
mov
out
sbb
loopne
lahf
negl
lock
mov
nop
lea
add
mov
aad
mov
ficompl
pop
cmp
adc
cltd
mov
cmp
adc
dec
enter
imul
stos
cmovnp
mov
in
or
jge
push
loop
adc
push
lods
mov
mov
adc
shl
adc
aam
mov
cmp
cs
jb
fcomp
mov
leave
adc
roll
add
je
in
mov
loope
test
push
out
push
cmp
mov
aam
sti
xor
into
test
insl
out
and
adc
pushf
fcomi
jge
je
loop
mov
test
mov
sub
mov
sbb
es
icebp
cmp
inc
push
dec
push
pop
mov
ja
aaa
mov
xor
pusha
and
adc
add
jnp
sbb
jne
mov
scas
xor
adc
rcl
xor
mov
cs
aaa
rcl
jmp
jge
fistl
xrelease
pop
in
adc
jg
inc
ss
das
dec
fisubl
xlat
inc
push
adc
cmp
pop
das
jne
int
rol
pop
scas
jb
push
lcall
mov
addr16
aad
sarb
hlt
fidivrs
ds
jle
sub
in
lock
add
and
dec
push
lcall
inc
in
shll
cmp
cltd
ret
xor
sub
imul
in
inc
fdivp
inc
add
pop
jmp
imul
jbe
lods
out
pop
cmp
mov
imul
aas
je
jl
inc
test
cmp
jnp
pop
cltd
xor
inc
repnz
mov
and
cs
mov
mov
xor
roll
push
push
and
cmc
loopne
add
pop
xor
cmp
mov
daa
mov
jo
dec
out
ss
sbb
test
adcl
mov
mov
xor
pop
xchg
cmp
cmp
int
dec
repz
push
dec
insb
xchg
jae
cmp
mov
mov
stos
dec
jno
mov
mov
std
mov
aaa
sahf
fstp
mov
add
mov
xor
inc
clc
add
mov
xchg
out
sub
push
push
jbe
out
jmp
jl
fwait
pop
mov
test
stc
shrl
jne
sbb
inc
push
rcrl
mov
sub
add
clc
outsl
xchg
push
xor
jnp
mov
pop
inc
cmp
lcall
dec
push
or
or
cmpsb
mov
xor
add
fsubrp
jmp
fwait
pop
xchg
test
cmp
mov
mov
popa
lock
lahf
jecxz
mov
hlt
sbb
loope
dec
jge
mov
adc
cmc
stos
shlb
fnstsw
sub
pop
fwait
mov
frstor
mov
mov
ret
or
push
sub
or
stc
int3
sbb
xor
mov
mov
jne
inc
gs
jbe
inc
jae
push
add
mov
ljmp
mov
cltd
cwtl
pop
in
fiadds
xor
adc
add
iret
jns
decl
mov
popa
jb
push
cs
jle
adc
out
ret
jge
sub
mull
shlb
sbb
cmp
inc
repz
mov
push
imulb
mov
sbb
push
fwait
nop
xor
xor
out
or
pop
add
dec
and
nop
mov
sub
stc
sub
mov
inc
push
ficompl
and
stc
add
mov
out
test
xchg
pop
cmp
andl
lods
xchg
inc
out
sub
lea
inc
jb
movsl
and
sbb
call
sbb
stos
and
cmpsb
xor
xchg
mov
rol
xor
pop
subl
lea
in
std
or
rcll
lret
negl
icebp
mov
push
jl
xor
xchg
leave
clc
bound
lret
fcmovb
jae
sub
or
and
in
add
inc
pushf
mov
lcall
mov
pop
xor
inc
adc
decl
push
pop
lea
push
pusha
adc
test
jb
ret
bnd
fbstp
add
mov
int
lret
push
sub
pop
jno
adc
or
sbb
jno
xchg
jg
dec
leave
clc
ds
mov
add
push
jge,pn
sbb
pop
mov
mov
lcall
or
pop
adc
adc
lahf
popa
inc
data16
jp
sub
sub
int
mov
xchg
mov
cmpb
lock
mov
lahf
mov
push
aaa
lods
inc
push
lret
test
in
jo
jg
mov
ja
cmp
inc
cmc
add
rcl
pop
lea
inc
pminub
ret
mov
mov
stos
and
movsl
les
pushl
outsl
add
mov
mov
aad
or
pop
pop
adc
cmp
pop
aas
jo
fisubl
xorl
xchg
repz
xchg
pushf
adc
outsb
aas
andb
xchg
cld
mov
mov
loope
sbb
sub
sbb
dec
fidivrs
repnz
insb
cmp
fcoms
or
cli
out
and
ss
inc
xchg
sub
incb
fwait
push
pop
fildll
mov
cmc
push
into
popa
out
jns
mov
cmp
and
cli
sub
flds
jne
sbb
mov
adc
and
popf
and
cld
imulb
insb
out
lods
cli
gs
push
xor
mov
push
andl
nop
dec
adc
lea
push
mov
imul
inc
pusha
movsl
xor
jge
inc
inc
shl
mov
mov
mov
and
fld
test
inc
jbe
xchg
ds
dec
in
xchg
xchg
jp
mov
ficompl
fnstsw
sub
sbb
and
adc
push
ror
or
jbe
inc
push
cmpsb
jns
sub
es
out
pusha
bndstx
stos
mov
mov
xor
push
xchg
inc
add
jp
pop
cli
sahf
int3
cltd
sub
pop
pushf
add
add
jecxz
test
and
lret
cmp
scas
imul
out
dec
hlt
clc
lock
xor
movsb
adc
jl
test
dec
adc
addl
loopne
add
xor
xlat
in
pop
push
int
dec
cmpsl
dec
push
dec
shrb
jge
cmp
and
push
in
fildl
and
jecxz
add
or
aad
cld
pop
fstl
dec
cmpsb
in
fs
dec
aaa
std
jg
sbb
mov
pop
ficompl
fistpl
popa
repz
add
std
xchg
add
movl
add
ret
lret
push
hlt
inc
stc
pop
out
mov
ror
adc
aas
lea
mov
xor
lds
jmp
push
push
or
or
xor
lea
jo
imul
push
fsubr
pop
xchg
adc
ficomps
mov
scas
stc
iret
adc
lods
sub
jo
mov
lret
xor
push
adc
cltd
and
aas
jo
or
fidivl
cmpsl
addl
lcall
sub
fsubrl
xor
mov
pop
hlt
ret
jno
fcompl
fisttps
gs
cli
mov
mov
movl
mov
test
movsb
sbb
sub
xor
xchg
inc
ret
ficoml
mov
push
pusha
shlb
imul
rcr
out
cmp
adc
cld
push
lahf
bound
add
aaa
xor
inc
sbb
mov
wrmsr
lds
inc
aaa
ficoml
cmc
sbbl
jae
mov
push
clc
push
fchs
xor
out
xor
xor
add
lret
and
call
xor
jb
xchg
add
push
or
xor
add
jb
xchg
inc
add
mov
mov
or
mov
fsubrs
or
jns
in
rcll
inc
xor
push
jb
int
ja
subb
jno
push
mov
and
fxch
lock
mov
iret
cmp
mov
rorl
hlt
js
lcall
out
insl
mov
adc
test
pop
sub
arpl
enter
xchg
les
pminub
iret
clc
xor
loope
popa
xor
push
and
xchg
loopne
stc
mov
sub
or
enter
sub
adc
loopne
out
xor
fwait
les
xchg
push
jbe
mov
pop
test
jmp
andb
cmp
nop
adc
inc
call
push
inc
mov
aaa
movsl
jecxz
vpcomd
adc
cmp
jp
orb
jmp
adc
jne
ret
cmp
pop
hlt
dec
insb
inc
test
push
mov
idivb
in
movsb
jns
jp
cmp
in
or
mov
shl
jecxz
sbb
rcrb
pusha
mov
test
movl
lods
xchg
fbld
aam
or
aam
xor
jle
push
sub
pop
jb
or
inc
sbb
cmp
adc
aam
jbe
lahf
jg
lcall
xchg
sub
mov
xchg
adc
out
pop
sub
sarl
push
push
pop
mulb
cmc
mov
pop
cmp
inc
push
sub
test
push
jle
hlt
and
pop
xchg
cmpsl
push
icebp
and
pop
enter
mov
rorb
mov
pop
and
sbb
jp
js
hlt
adc
sbb
nop
mov
xchg
icebp
leave
inc
xchg
popf
sub
add
cmp
adc
sbb
jecxz
jne
pop
mov
popf
add
and
stos
add
cld
inc
inc
xchg
imul
and
test
cmpsl
xor
lahf
xchg
add
cld
outsl
pop
outsb
mov
mov
xchg
cltd
bound
adc
mov
fimuls
inc
shl
ljmp
aaa
sbb
jo
ret
xchg
dec
outsb
scas
movsl
xchg
outsl
xor
ss
fstpl
scas
arpl
fstpt
jmp
jl
dec
push
and
jl
cmp
push
ja
lock
xor
inc
ja
ffreep
dec
jno
sbb
mov
je
xor
jb
into
out
mov
sbb
cwtl
outsb
inc
out
loope
jne
mov
lea
out
mov
mov
pop
jbe
sbb
outsb
jge
push
sub
xrstor
sarb
aad
push
push
lock
jnp
sbb
cltd
inc
cmp
pop
adc
pushf
dec
xchg
das
aaa
sbb
imul
hlt
lock
xchg
dec
aam
xchg
and
imul
addb
les
scas
and
add
mov
negl
push
push
sub
icebp
cltd
test
xor
pop
lea
inc
jp
mov
and
push
mov
dec
mov
push
pop
mov
jne
stc
std
outsb
aam
and
ds
sub
xorb
out
mov
xchg
push
int3
xor
lods
cmpsl
adc
data16
pop
ljmp
jae
mov
mov
int3
push
mov
cs
repnz
movsb
cmc
fcomp
cmp
or
out
xor
mov
adc
mov
mov
loop
clc
inc
es
adc
fsubr
andl
pop
bound
sbb
xchg
xor
icebp
sti
add
xchg
aaa
mov
pop
inc
xor
out
nop
imul
fdivrl
sbb
cmp
jbe
into
jb
sysexit
adc
in
and
and
pushf
imulb
test
adc
cmp
xchg
sub
notb
fstl
daa
cmp
cmc
loop
push
outsb
sbb
lret
jne
in
xlat
xchg
push
lods
sub
jge
pop
int3
cmc
jne
and
sub
gs
cmp
insl
or
jno
outsl
test
xchg
loop
stos
into
fs
mov
out
jne
jb
pop
inc
xlat
cs
push
sbb
mov
mov
icebp
inc
pop
les
and
and
notb
mov
xchg
mov
mov
loope
cmpsl
dec
mov
xchg
jne
dec
negl
stos
clc
fistps
jns
shr
inc
inc
inc
test
pop
or
sbb
jb
mov
out
cli
sbb
mov
mov
outsb
jne
inc
or
sahf
in
in
pop
daa
fwait
adc
pop
test
xorb
movsl
pop
sti
sbb
cmp
cmp
lret
mov
addr16
or
sarb
aas
sub
test
fisttpll
fdivl
scas
dec
jns
pop
pop
shrb
push
repnz
cwtl
xchg
inc
jge
adc
inc
mov
sub
ss
in
test
push
xor
xchg
cmpb
rol
inc
test
push
sub
lret
test
mov
je
cmp
sarb
inc
sub
cmp
ljmp
rol
adc
add
mov
jp
test
inc
push
adc
dec
aaa
inc
sub
adc
dec
jge
mov
imull
test
sbb
ds
movsb
aam
fsubrp
popf
pop
add
mov
and
cmpsb
or
data16
je
xchg
mov
and
add
cmp
iret
dec
xchg
push
mov
into
mov
mov
and
ja
xchg
dec
ljmp
pop
ljmp
cmp
sahf
push
pop
int3
and
cmp
mov
dec
add
jg
jmp
rolb
push
aas
push
xchg
mov
cmp
lahf
movsl
xor
fs
push
sub
mov
mov
insl
sub
or
sbb
gs
dec
sarb
stc
sub
icebp
mov
adc
mov
in
sti
xor
mov
mov
sarl
push
stc
sbb
push
jne
xchg
inc
mov
dec
jmp
addr16
ljmp
test
shr
lea
push
jne
jo
dec
sub
leave
pop
addr16
fnstenv
and
int
pop
inc
jb
sbb
inc
imul
cmp
movsb
bound
es
jmp
call
lods
add
and
mov
testb
sub
pmulhw
mov
jg
stos
xchg
bound
decb
dec
in
lret
or
es
lock
mov
rcll
or
and
aam
and
call
push
xor
lods
lea
add
mov
loope
repz
mov
insb
pop
sbb
or
and
insb
inc
xor
aas
xchg
repz
ficomps
add
rol
inc
jb
es
in
adc
js
and
pushf
into
xchg
mov
xor
cmp
mov
inc
cld
dec
outsb
jns
inc
mov
out
scas
nop
mov
cs
push
pop
mov
jecxz
aam
pop
push
fs
mov
int
jbe
cli
xchg
xchg
clc
push
insl
jae
cli
in
add
adcl
fisttps
dec
dec
sub
push
jb
or
outsb
and
and
pop
movsb
dec
sbb
lds
movsb
popa
sub
fidivrl
pop
push
loope
fiadds
pop
mov
inc
cmpxchg
cmp
imul
ret
movsb
push
cmc
pop
mov
pop
adc
mov
sbb
xor
icebp
push
mov
jecxz
inc
sbb
es
into
mov
jae
push
ljmp
dec
jmp
pop
mov
push
add
aas
and
scas
xchg
jmp
ret
adc
jbe
stos
xlat
push
xor
nop
xchg
pusha
push
mov
mov
pop
mov
mov
ja
sub
scas
lret
sahf
xor
imul
cli
ret
or
loope
aam
push
and
push
dec
bswap
adc
sub
scas
addr16
test
push
lret
xorl
inc
into
repz
and
mov
mov
jp
mov
rcrb
or
jno
and
jnp
jecxz
xor
pop
cmpsl
ret
in
rcl
push
shlb
aam
xor
cmpsb
stos
sahf
mov
das
mov
adc
jp
mov
outsl
and
aas
lcall
inc
mov
hlt
pop
push
cmp
enter
lock
sahf
cli
mov
mov
pop
mov
cmp
add
jno
push
imul
pop
ljmp
push
mov
add
lock
shll
ret
lock
mov
dec
xor
jp
jbe
out
fistps
xchg
mov
out
mov
push
gs
iretw
adc
mov
mov
pop
xchg
cwtl
mov
rcrb
inc
jae
add
xchg
jnp
push
adcb
arpl
in
lcall
stos
cltd
mov
xchg
ja
mov
jns
pop
mov
mov
repz
hlt
and
jge
outsb
iret
hlt
xor
mov
mov
outsl
or
mov
out
sahf
outsl
lret
pop
mov
mov
lret
adc
push
adc
xor
out
mov
daa
insl
push
inc
sub
out
dec
pop
pushf
mov
xchg
pop
jno
iret
cmp
sti
cmpsb
cmp
stc
pusha
cmpsb
jno
xor
shrl
imul
or
push
rol
and
gs
xor
mov
jb
sahf
mov
jg
inc
lcall
xchg
mov
or
mov
mov
xchg
and
arpl
sub
hlt
mov
popf
pop
or
jg
sahf
pop
pop
add
push
inc
lds
orb
adc
gs
lret
cmp
sub
mov
leave
test
pop
mov
xchg
insb
pop
xchg
in
xchg
add
cmpsl
incl
scas
inc
in
into
rcll
cs
add
cmp
ljmp
shl
push
add
pop
xchg
mov
cmp
in
stos
xchg
adc
push
sub
pop
add
ficoml
mov
scas
pop
loopne
push
out
sbb
in
ficoml
adc
or
mov
xchg
sti
push
xor
fistl
leave
sub
push
dec
mov
std
and
fidivs
fisttpll
pop
mov
sub
sbb
or
xchg
rcrb
mov
cld
mov
inc
stos
jp
pop
inc
and
bswap
jg
or
rclb
and
les
aaa
mov
jns
les
pusha
pop
cmp
cli
negl
gs
sub
incl
xor
inc
testl
bound
mov
das
xor
sbb
ljmp
xchg
fsub
daa
push
mov
push
mov
push
clc
loop
xchg
arpl
dec
push
insl
mov
stos
mov
add
sbb
sbb
sbb
add
pusha
out
mov
out
das
mov
iret
mov
jo
fisttps
test
jnp
inc
daa
jo
in
repnz
jne
add
cmp
push
jl
jge
and
ljmp
lcall
jecxz
aad
jp
mov
add
pop
mov
cmc
mov
pop
dec
repnz
icebp
insl
pop
lods
repz
or
das
pusha
sbb
xchg
mov
xor
add
outsb
adc
lods
jge
push
addr16
inc
int
idiv
and
jle
loope
lods
outsl
jle
cmp
repnz
cld
xor
cwtl
hlt
mov
xlat
or
add
das
flds
sub
outsb
sub
mov
ficoml
and
clc
inc
scas
mov
add
or
das
movl
jp
push
pop
decb
mov
gs
cwtl
stc
iret
xchg
push
inc
sbb
cli
pop
cltd
add
and
dec
cltd
push
xchg
scas
or
or
sbb
ljmp
in
xchg
jo
xchg
pop
xchg
inc
sub
lret
lcall
or
das
mov
imul
xlat
jne
dec
fisubl
push
cld
sbb
add
imul
test
aas
adc
ss
flds
mov
or
and
jnp
add
xchg
mov
add
sub
push
clc
adc
add
sbb
cpuid
inc
sarl
pop
outsb
adc
xor
cmpsl
std
mov
sub
in
jno
mov
stos
cltd
fld
gs
inc
pop
repz
fdivrl
ds
pop
adc
stos
mov
cmp
movsl
jb
lods
repnz
inc
adc
out
mov
xchg
dec
xlat
out
ljmp
sbb
push
fldenv
mul
rcrb
movsl
stos
rolb
mov
or
adc
subb
sbb
pop
push
sbb
leave
xor
iret
dec
mov
rorl
fwait
hlt
popa
imul
sub
fdivl
stos
dec
jmp
int3
cmp
dec
loopne
push
sub
movsl
arpl
mov
sub
je
sbb
out
sbb
sti
icebp
jnp
subl
es
aam
adc
ljmp
add
mov
imul
outsl
jecxz
dec
or
pop
icebp
sub
jo
push
add
sti
repnz
shr
je
test
lea
mov
adc
xchg
sub
inc
dec
jno
out
andl
clc
jbe
adc
leave
jg
js
xchg
xor
mov
pop
xchg
or
push
mov
aas
enter
xchg
lcall
movsb
push
or
popf
push
xor
xchg
cmp
push
je
cmp
fistpll
cmp
sti
mov
das
mov
inc
test
ljmp
pop
mov
aaa
add
notb
jb
in
addr16
sahf
mov
xchg
out
jae
jecxz
or
popf
sub
shr
and
or
inc
add
pop
fdivrl
xchg
mov
fldcw
cmp
mov
adc
push
out
mov
dec
adc
imul
int
cli
or
enter
add
sarl
jne
lods
out
dec
sarl
xchg
push
lock
fnstcw
in
or
sub
jle
sbb
subb
leave
mov
mov
lds
or
cmpsb
sti
icebp
in
mov
inc
les
mov
fwait
aam
mov
or
push
aam
adc
ja
loop
jo
mov
pop
out
add
and
bound
mov
dec
inc
jle
inc
push
fldt
ljmp
adc
mov
mov
nop
mov
sub
inc
data16
mov
push
add
pop
push
dec
add
in
jo
push
std
lret
pop
adcb
inc
adc
in
mov
mov
iret
int3
ljmp
lcall
jno
mov
xor
aaa
dec
test
inc
inc
push
pop
divl
insl
addb
clc
push
dec
jecxz
pop
outsb
sub
leave
pop
adc
push
das
inc
sbb
out
popa
mov
mov
iret
mov
shlb
mov
pop
insl
and
stos
pop
ljmp
jmp
dec
lea
in
int3
ljmp
repnz
movsb
sub
scas
inc
std
test
jnp
jb
mov
push
movsb
subl
hlt
mov
sahf
aad
orb
jl
mov
cwtl
outsb
sbb
dec
fidivl
mov
jge
repnz
mov
fisubl
in
jb
mov
or
dec
add
and
dec
mov
into
cmp
cmp
ret
sub
insb
mov
cmc
pop
or
sbb
jae
and
dec
popa
add
dec
mov
iret
xchg
push
fstpl
orb
sbb
into
inc
aam
cmp
es
lods
arpl
adc
mov
call
jg
hlt
dec
outsl
jp
sub
mov
xor
nop
movsl
lret
inc
xchg
mov
pusha
sbb
pop
pop
es
loopne
fldl
push
ss
cmpl
out
xor
pop
push
dec
xchg
xor
movsb
nop
shl
push
lock
adc
jae
es
xchg
adc
push
dec
test
cmp
testb
jne
in
mov
in
adc
mov
xchg
int3
cmpsb
push
imul
fsub
loope
popl
dec
fiadds
sub
clc
aad
lds
mov
cli
mov
mov
int3
and
data16
xchg
shll
repnz
push
scas
je
mov
xor
popf
mov
jnp
adc
push
push
inc
cmpsb
cmp
and
mov
sbb
pushf
pop
add
pop
mov
shlb
dec
jmp
dec
sti
pop
jg
dec
xor
sub
add
lcall
mov
test
mov
pop
mov
dec
xor
adc
pop
mov
push
popa
sub
jp
sbb
jns
xor
sbb
ss
fwait
mov
das
mov
sub
xchg
add
pushf
or
nop
sti
lahf
inc
push
adc
test
dec
int3
cmp
adcl
cmpb
out
pop
pandn
aas
push
inc
jmp
dec
jno
vmovdqa
iret
push
std
add
in
daa
add
xchg
leave
lock
mov
mov
adc
push
add
pop
imul
and
inc
push
fistpl
aaa
jge
dec
xor
push
cmp
cmp
mov
stos
fs
mov
out
xchg
in
or
inc
in
or
adc
negb
push
rcrl
lret
ja
mov
xchg
imul
xchg
cmp
jecxz
pop
pop
xchg
add
or
inc
test
insl
andb
mov
mov
jl
lcall
mov
push
enter
push
cwtl
cmc
test
jne
imul
push
out
ss
sbb
lds
push
cmp
and
jbe
mov
aam
jge
int3
pop
push
mov
insb
fcmovnb
sub
enter
sbb
cltd
mov
pop
outsl
or
cmp
and
dec
pop
stos
or
ja
fwait
hlt
js
lret
mov
push
mov
sbb
xor
xor
push
xchg
push
add
mov
sbb
pop
test
mov
mov
mov
push
adc
bound
test
xor
jecxz
jmp
mov
jecxz
and
fs
and
inc
xor
and
xor
popl
jae
push
lret
and
inc
adc
pop
lret
stos
orl
fstpt
ljmp
cltd
mov
mov
cs
das
cmp
mov
adc
int3
adc
aad
sbb
add
stos
aaa
xchg
push
popf
sub
xor
mov
mov
hlt
in
or
int3
pop
pop
xchg
push
int3
cmpsb
bound
out
and
in
cmp
or
sub
or
enter
rorl
dec
xchg
adc
ja
std
jecxz
test
int
inc
popa
adc
dec
fstl
test
push
cmp
scas
xor
xchg
dec
inc
nop
mov
call
mov
cmpb
dec
mov
das
gs
push
pop
fists
xor
cwtl
mov
leave
sbb
pushf
je
std
or
es
and
xchg
push
aas
mov
arpl
xchg
xlat
jle
stos
das
mov
sub
rclb
rcr
sbb
bswap
aad
in
dec
sbb
mov
mov
loop
outsl
dec
jno
out
and
pop
cli
jae
aad
rcl
arpl
sbb
xchg
pop
dec
outsl
stos
mov
dec
rcrb
dec
cwtl
ljmp
in
adc
mov
cwtl
aaa
data16
or
xchg
cld
ret
xor
and
mov
je
push
mov
roll
test
lods
push
enter
cld
les
and
lahf
xor
mov
adc
inc
push
arpl
adc
xchg
adc
pushl
arpl
inc
jl
jp
jne
aas
shlb
dec
adc
aaa
scas
sbb
pop
jecxz
xchg
stos
mov
cmp
push
mov
int3
cwtl
xor
ds
jbe
js
cli
iret
std
mov
outsb
mov
lock
mov
and
cmpsb
hlt
jl
fistl
in
dec
push
and
sbb
imul
mov
sub
cmc
inc
fwait
inc
adc
or
or
inc
adc
outsb
mov
leave
out
jecxz
cli
test
pop
repnz
cmp
or
test
negb
rorb
imul
xchg
stc
and
loopne
push
cmp
daa
mov
jge
cmc
lea
dec
cli
icebp
pop
lret
loopne
and
jbe
mov
int3
add
or
mov
data16
lds
je
mov
adcb
xor
in
lcall
lock
sub
movsl
mov
scas
loopne
add
adc
ds
sbb
fnstcw
stc
adc
sub
pop
sbb
pop
lret
or
jo
test
jle
xor
stc
and
pop
xchg
mov
lret
dec
cmc
add
cmp
and
inc
sbb
into
sub
or
sahf
insb
push
es
inc
mov
add
imulb
dec
sbb
jns
pop
mov
sbb
xchg
mov
sub
jne
aas
dec
add
jo
or
cmp
bt
xchg
jmp
je
cmp
cli
test
mov
dec
loopne
xchg
lods
cltd
dec
mov
cmpsb
sub
int
push
mov
xchg
sbb
fwait
inc
pop
jg
es
or
inc
mov
fs
xchg
mov
popa
or
fwait
fwait
sub
dec
inc
jns
push
and
push
xor
adc
inc
push
pop
cs
xchg
stos
lea
call
dec
jae
in
sub
and
mov
jge
jge
jge
loop
inc
adc
mov
rorb
fimuls
and
cmc
fs
arpl
xor
addl
pop
cli
das
cmp
test
mov
cmpb
lods
repz
rcrl
mov
dec
xchg
pop
pop
push
outsb
cli
jno
xchg
jno
and
sbb
cmpl
cs
adc
cs
sbb
test
fwait
push
mov
sbb
clc
cli
or
sub
xor
add
cli
dec
sbb
or
cmp
bound
mov
xor
mov
xchg
aaa
push
lret
push
jbe
add
jae
outsl
pop
pop
enter
inc
jmp
inc
or
adc
jl
fldenv
push
sti
cmp
pop
out
roll
mov
sbb
adc
iret
cmp
push
mov
lret
add
call
xlat
shll
shll
mov
sub
lcall
pop
call
or
or
sbb
xlat
jo
jne
jnp
insb
mov
enter
cli
xchg
les
pusha
xchg
push
jecxz
jns
movsb
fs
int
sbb
shrb
xchg
cmp
ja
inc
or
xor
add
cltd
mov
jle
dec
xlat
sub
mov
push
xadd
pop
sbb
or
lcall
pop
and
setne
mov
xchg
icebp
push
mov
push
fwait
mov
jns
add
aam
bswap
add
arpl
cmp
push
icebp
clc
jne
mov
pop
nop
sbb
aad
call
inc
pop
xchg
jo
or
cltd
or
bound
fadds
ret
sbb
jl
adc
add
movsb
xor
add
into
das
add
sub
fnstsw
adc
in
leave
mov
mov
push
lret
inc
dec
sbb
add
xlat
xchg
or
stc
add
and
jmp
jmp
subl
jb
lock
dec
and
gs
into
mov
pop
or
ffree
xchg
fwait
jnp
xchg
pusha
add
push
pop
in
clc
lea
mov
scas
ljmp
imul
and
adc
clc
pop
add
aam
dec
and
cmp
dec
stos
mov
fisubs
movsb
ret
add
sti
mov
inc
mov
add
inc
xor
das
fisubs
cmc
jae
xchg
leave
pop
cmp
int3
sub
aam
sahf
sti
pop
mov
pop
or
lods
mov
inc
mov
loope
xor
pop
cld
clc
scas
fisubl
xor
and
xchg
xchg
sub
daa
bndldx
clc
idivl
xchg
ficompl
mov
stc
jnp
sbb
cmc
lods
xchg
aad
jns
and
cmp
adc
sub
imul
jl
addb
dec
adc
mov
add
push
nop
nop
arpl
pop
add
cmp
mov
std
cld
or
fldlg2
jle
inc
in
test
jnp
add
or
push
ss
sti
inc
xchg
nop
and
jno
lahf
pop
add
aad
mov
jmp
sbb
dec
data16
xor
mov
jp
mov
jl
add
adc
mov
test
xchg
test
mov
mov
mov
rorl
sbb
rcrb
es
les
loope
pop
cmp
mov
scas
roll
jl
push
shl
faddl
dec
dec
jb
dec
in
push
pop
rol
rorb
sub
mov
pop
inc
xor
mov
adc
lea
cld
out
sub
ret
ficoms
cmpsb
popf
push
iret
and
mov
test
push
dec
iret
xchg
mov
loope
mov
andl
mov
pop
rcrb
mov
ss
jg
xor
stos
xchg
xchg
cmp
dec
sbb
sub
inc
fildll
inc
mov
pop
mov
sub
lock
or
sbb
ss
mov
popf
fidivs
dec
mov
sbb
cwtl
jae
and
aad
pusha
iret
pop
sub
and
cli
push
testb
xchg
push
xor
add
fcoml
xchg
dec
fmull
mov
aas
ljmp
xchg
ss
ret
pop
jno
mull
int3
cmp
add
imul
push
add
fwait
jnp
cs
inc
aam
xchg
hlt
aam
iret
gs
data16
mov
mov
loope
cltd
outsb
mov
popf
adcl
test
mov
sbb
icebp
imul
movntq
cmp
out
testl
dec
jb
push
js
sub
push
push
jnp
jb
mov
aad
inc
aad
push
mov
sub
and
in
mov
das
sub
inc
test
pop
xorb
pusha
out
into
pop
add
jno
into
mov
xchg
mov
mov
push
insb
push
xor
cltd
add
mov
jle
xor
and
jns
sbb
loop
aaa
cmc
test
xor
fimuls
les
mov
orl
mov
loop
test
add
in
hlt
mov
aad
jl
xor
movsb
fnstenv
aad
sahf
subb
adc
add
popa
es
adc
movsl
push
loope
test
fistl
fldt
dec
adc
scas
mov
add
inc
test
popa
xor
es
addr16
imul
inc
fsubs
fcmovnb
fistpll
fs
in
repz
cmp
jmp
roll
pop
fsubs
inc
add
test
imul
fisubrl
jns
xor
pop
arpl
mov
push
cwtl
decl
sbb
mov
jno
pushf
adc
inc
xchg
adc
xchg
cmp
jg
mov
popf
scas
outsb
push
cmp
orl
jns
push
icebp
cmpsl
negl
sub
jb
xor
ds
rcrb
push
popf
iret
adc
ret
or
mov
scas
fistpl
add
in
icebp
es
push
mov
jns
jno
les
pop
and
fcompl
daa
sbb
add
xorb
cmp
cmp
ljmp
pop
push
adc
popf
mov
mov
popf
daa
negl
jg
mov
cltd
aad
cli
mov
arpl
jns
dec
mov
mov
sbb
out
mov
sbb
xor
pop
push
in
out
outsb
sbb
test
inc
xor
int
shr
jns
push
adc
jae
outsl
sub
insl
fcoml
fwait
clc
mov
push
sbb
sbb
ficompl
pop
call
das
ljmp
test
sbb
xor
push
mov
mov
data16
ret
daa
pop
dec
xor
incl
mov
jne
inc
pop
fmull
or
add
mov
inc
gs
sar
int
orb
hlt
outsl
jo
add
test
outsl
mov
mov
rorb
jae
adcb
jns
adc
pop
jg
mov
out
cmp
sarl
cmp
addl
mov
or
lock
sub
lea
pushf
fs
sti
loope
or
inc
adc
fndisi(8087
out
pushf
ret
cmp
or
mul
push
fbstp
pop
add
arpl
xor
das
outsl
rcrb
xor
pusha
or
cmp
xor
pushf
adc
jnp
adc
inc
push
add
xchg
jp
fs
jb
nop
mov
ljmp
sub
inc
jmp
in
in
or
out
sbb
ljmp
mov
mov
fdivrs
enter
pop
in
mov
cmp
jmp
inc
mov
movsl
xor
add
popf
out
inc
cmpb
fiadds
or
fcos
loope
jne
add
pushf
push
rclb
ja
sub
shll
xlat
xchg
xor
gs
xlat
dec
arpl
and
or
ja
pop
mov
sti
xchg
shrl
mov
push
jmp
popf
ljmp
mov
mov
dec
jecxz
xor
mov
testl
add
lock
dec
dec
inc
fsub
das
xchg
pushf
stc
sbb
fadds
mov
jmp
xchg
out
es
jle
fidivrl
ljmp
popf
sub
pushf
mov
inc
add
into
jg
imul
cmp
int
cmp
mov
push
aas
sti
xor
ret
loop
sbb
mov
push
insl
lret
or
roll
repnz
int3
imul
mov
imul
mov
xchg
jg
push
add
ss
in
mov
lock
push
mov
xchg
sub
sub
push
fidivrl
cld
jmp
jp
push
sbb
lret
int
sbb
dec
or
pop
pop
aas
out
ja
mov
mov
cmp
pop
shl
or
mov
sub
les
jbe
sub
xchg
je
ficomps
pop
push
mov
out
xchg
les
pop
mov
xchg
jmp
call
inc
fisubrs
mov
xlat
shll
mov
mov
sbb
push
xor
lret
test
clc
dec
xchg
push
clc
adc
sub
push
std
lods
ret
fmul
inc
out
insl
lahf
jmp
and
mov
add
jge
les
mov
and
pop
and
cmp
xor
cmp
or
jnp
mov
cli
dec
mov
test
roll
xor
dec
mov
jge
das
xor
cld
cmp
in
sbb
jns
jmp
test
xor
pusha
jnp
pop
xchg
addl
std
cmp
scas
out
frstor
jge
sbb
pushf
mov
xor
mov
sbb
inc
sti
mov
lods
cmp
ss
loop
add
fidivl
cmp
lret
sbb
push
je
cmp
inc
sub
pushf
xchg
xchg
clc
mov
jns
iret
out
or
lods
pop
push
push
push
dec
mov
into
in
imulb
xchg
fisubrs
lea
and
add
push
sbb
jne
mov
rorl
vpunpckhwd
xchg
imul
lods
das
aad
cmpsl
mov
scas
ja
push
call
test
push
mov
push
iret
and
cmp
arpl
pxor
stos
andb
pop
xor
inc
movsb
adc
xchg
daa
pop
fistpl
cli
mov
jae
call
mov
pop
sbb
xchg
jns
push
or
push
mov
xchg
jecxz
int3
int
daa
xchg
imulb
lods
push
sub
pop
jae
scas
out
push
cwtl
fcmovu
stos
mov
inc
fs
or
add
jmp
xor
arpl
stos
sbb
dec
push
js
mov
cmp
xor
push
or
sub
dec
std
out
mov
es
rorb
and
pushf
aad
xor
sar
in
ja
test
adc
repnz
test
inc
je
dec
dec
bound
arpl
and
dec
call
rcll
ljmp
adc
rolb
nop
cmp
xchg
adc
jmp
addl
or
add
and
cmovl
mov
test
outsl
fidivl
das
insl
out
sbb
xor
sbb
subb
sbb
pop
cld
shl
les
mov
pushf
jne
inc
stos
xlat
push
je
dec
lret
sbbb
test
adc
xorb
inc
cmp
push
sti
test
inc
lods
scas
push
inc
jae
pop
ja
xchg
pmulhw
add
cltd
push
pop
aaa
js
pop
in
or
inc
dec
fadd
mov
xchg
out
cmp
xchg
mov
and
call
mov
jle
aaa
jns
mov
rolb
xchg
cs
and
and
lret
cmpsl
adc
test
test
push
sbb
mov
jg
push
and
mov
jbe
cs
mov
push
xchg
shr
das
add
enter
push
aaa
in
inc
hlt
enter
mov
push
pop
pusha
pop
js
mov
inc
test
int3
sub
jecxz
push
stos
lret
inc
lret
lock
xchg
sbb
mov
insb
cmp
aad
push
test
test
push
pop
cli
in
xchg
clc
jo
test
int
lret
out
outsl
stos
xchg
xchg
xchg
xchg
mov
lods
gs
cs
xchg
add
aaa
dec
fwait
dec
repz
adc
add
ljmp
in
rolb
call
xchg
dec
nop
fwait
add
ss
flds
jmp
lock
xor
sbb
rcll
lahf
loop
jb
mov
pop
adc
fisubrl
cmp
sbb
dec
xchg
adc
push
mov
test
out
sbb
cmpb
aam
sbb
inc
addb
insb
add
outsb
xorl
jle
sub
xor
shlb
mov
pop
mov
jl
mov
insb
in
sbb
pop
andl
mov
or
xor
inc
imulb
xchg
aad
aam
xor
sub
jecxz
sub
fistpll
mov
cmp
mov
test
int3
pusha
push
lods
adc
mov
xchg
dec
lea
mov
mov
outsl
jg
ljmp
jnp
imul
popa
imul
imul
ficompl
xor
popl
inc
outsl
sbb
rorl
data16
inc
sub
jmp
cli
mov
je
lret
xor
outsb
loop
sbb
mov
xchg
mov
sub
adc
xor
xchg
ficoms
or
jbe
dec
jae
mov
xchg
cmp
adc
shl
arpl
adcb
jne
sub
mov
push
jbe
cmp
adc
mov
int
dec
std
hlt
xor
mov
push
fidivs
xchg
xchg
arpl
adcl
jae
dec
sahf
and
enter
arpl
add
movsl
xchg
push
xor
sbb
push
out
sub
dec
imul
push
aas
out
lret
push
sub
iret
cmpb
dec
and
call
pop
int3
mov
jae
int3
ds
push
push
jo
pop
hlt
mov
mov
jge
pop
stc
sub
xor
and
add
adc
and
addr16
inc
sarl
or
push
sub
jecxz
fnstcw
lret
and
mov
xchg
sbb
lea
mov
orb
or
fsubrp
xlat
lahf
push
in
mov
repnz
xchg
std
rorb
shrl
popf
push
dec
inc
xchg
inc
or
scas
sar
sbb
mov
fwait
ss
sub
enter
pop
outsl
pop
rolb
add
or
cli
mov
cs
dec
adc
inc
scas
mov
mov
movsb
pop
cmp
sbb
in
arpl
int
xchg
mov
push
jbe
push
data16
xor
mov
in
pop
fisubl
outsb
test
add
push
out
sbb
cmp
fistpl
shlb
and
mov
leave
nop
les
xchg
jg
shlb
add
cmp
rcrl
lcall
jp
lcall
aad
jno
push
xchg
jae
ds
pop
inc
out
pusha
std
inc
cmp
das
aaa
add
faddl
shrl
lock
scas
sbb
mov
inc
push
pusha
sub
fs
xor
or
dec
fstps
nop
ret
xor
jmp
enter
push
dec
cwtl
jle
xor
sahf
fstps
add
xchg
mov
aad
xchg
lea
jnp
jecxz
push
movsb
sub
push
xchg
jecxz
xor
or
cmp
push
in
aad
add
sub
push
add
cmpsl
rcll
and
xchg
or
gs
and
lcall
out
mov
test
insl
jnp
inc
xchg
mov
rcll
frstor
xor
aam
mov
sub
inc
fs
jne
xor
in
cmp
and
and
cmpsb
cmp
cs
cs
bound
or
mov
mov
sbb
jbe
pop
popf
testb
or
incb
mov
jge
aam
lods
push
cmc
jmp
stc
xchg
dec
aas
inc
lret
std
pop
icebp
pop
xor
popa
mov
int
or
clc
mov
push
pushl
jbe
push
rorb
cmp
sub
fldcw
xchg
push
ja
addr16
mov
test
pop
xor
and
mov
aam
dec
jmp
mov
mov
lea
pop
call
test
scas
ss
rolb
dec
sbb
and
or
fprem
dec
or
ror
icebp
dec
sub
fisubs
movsl
ret
xor
sbb
loope
popf
fucom
rcrl
lcall
shrl
or
xchg
cltd
or
scas
or
orl
inc
xchg
mov
xchg
cmp
ret
iret
cmp
add
sub
mov
mov
fdiv
push
ds
lock
adc
inc
add
sub
repnz
adc
inc
cld
jbe
pop
rcll
enter
fmuls
dec
cs
push
pop
stos
ret
inc
pop
jnp
mov
and
cmpsb
jle
out
add
xchg
push
test
call
ret
int
lcall
cmp
negb
xchg
std
xorl
mov
das
sti
xchg
nop
roll
int3
stos
mov
xchg
sub
xchg
lods
mov
mov
test
push
mov
rcrb
jne
xor
pop
subl
pop
inc
shlb
fists
pop
lea
mov
ret
mov
clc
ja
xchg
fstpl
out
dec
je
outsl
pop
inc
pop
test
adc
pop
test
sahf
jo,pn
mov
jb
add
gs
mov
out
loopne
cs
mov
mov
jecxz
inc
or
cmpsb
dec
dec
add
and
pop
ds
jns
inc
stos
cmp
aad
andb
mov
scas
sub
push
sub
cmpsl
adc
int3
insb
xchg
jp
aam
add
pop
or
out
push
cmpsb
push
fldl
jae
dec
sti
or
lock
ljmp
outsb
sbb
adc
pop
inc
jl
sub
add
inc
pop
mov
and
lds
fs
stc
xchg
test
mov
out
or
sub
or
and
cwtl
xchg
es
addr16
fwait
pushf
std
pop
bound
xor
je
test
shr
fsubrl
mov
inc
dec
testl
ja
xorb
scas
lret
add
xchg
inc
cwtl
test
push
imul
sti
orl
jnp
jbe
mov
aad
scas
cmp
mov
ret
push
leave
sub
xchg
in
mov
mov
or
lods
sub
ja
and
jge
push
mov
ffreep
lret
insl
xchg
add
lock
xrelease
test
xchg
sbb
cmp
mov
xchg
jnp
push
and
out
jp
loope
aas
mov
lcall
dec
mov
pop
cmp
test
outsl
ret
dec
or
in
gs
mov
sub
je
into
push
jae
dec
sbb
mov
dec
or
and
mov
out
mov
jge
std
jge
cs
add
sbb
loop
jecxz
cmpb
bound
and
les
test
adc
cmc
cmp
sbb
cwtl
insl
mov
std
test
sbb
andb
mov
aaa
scas
mov
dec
jg
hlt
outsl
push
inc
sub
iret
jge
jne
iret
loopne
mov
and
mov
test
cmpsb
aas
mov
fldcw
lret
enter
xlat
push
jl
push
xchg
pop
imul
jmp
inc
pop
add
xchg
dec
iret
mov
sub
adc
out
and
fidivrs
shlb
jb
jo
cmp
insl
int
push
fidivl
rcll
sbb
ds
dec
loope,pt
sbb
add
sub
pop
mov
arpl
xchg
pushf
mov
or
or
xchg
jecxz
dec
nop
cmp
xchg
fdiv
cmc
jb,pt
fdivrl
cmpsb
mov
jecxz
sbb
ss
scas
mov
pop
pop
shl
or
inc
fs
and
ficomps
popa
push
sub
pop
aas
pop
add
mov
cmp
fcmovnb
sbb
ja
orb
jb
add
fwait
cltd
aam
mov
jg
test
lods
jge
and
dec
mov
inc
mov
sbb
insb
pop
pop
pusha
and
xor
mov
repnz
outsl
dec
mov
into
push
inc
xor
cmc
or
xorb
pop
stc
pand
push
sbb
mov
sbb
pop
and
sub
cmpsl
pushl
push
ret
xor
push
dec
xor
in
repnz
mov
cmp
or
jmp
add
mov
mov
orl
xor
out
fsubr
outsl
out
add
push
xor
pop
pop
ret
xchg
aam
fs
or
mov
int
mov
jnp
adc
int3
inc
lods
into
mov
daa
jns
imul
add
push
mov
cmp
jl
dec
push
pop
xchg
in
jge
pop
mov
into
or
bound
adc
push
push
daa
test
in
loopne
rcr
vcvtss2sd
js
mov
dec
mov
xor
mov
sahf
mov
sbb
notb
jno
pop
cmp
es
push
lods
mov
outsb
dec
daa
push
aam
inc
add
mov
pop
xchg
mov
pop
enter
lods
fimuls
fisubs
in
mov
mov
int3
mov
jns
mov
xchg
mov
cmp
add
fistps
les
lock
adc
mov
shl
sti
gs
hlt
or
ss
push
xchg
jne
dec
jnp
inc
jae
or
aam
add
sub
cs
in
sbb
fstpl
js
xor
iret
push
xchg
scas
pop
hlt
test
xor
xor
sub
fisubrs
and
pop
mov
push
into
test
add
and
or
sub
inc
pop
and
hlt
lcall
fsubs
push
pop
je
pavgb
sbb
mov
test
cli
leave
push
lahf
sub
push
fisttpll
shrl
fcomps
push
adc
clc
xchg
lahf
pusha
adc
mov
inc
mov
cmp
sahf
out
iretw
and
and
imul
pop
popa
js
inc
ss
fcoms
fwait
sbb
sub
popl
in
sbb
int3
push
seto
mov
ds
test
ljmp
sbb
push
dec
jne
mov
and
mov
lret
scas
dec
nop
fucomi
jb
pop
leave
add
sub
clc
shll
ret
sub
in
les
jge
xchg
out
dec
cmpsl
aas
adc
inc
push
mov
and
push
arpl
cmp
int3
and
imul
pop
fs
inc
into
test
dec
xchg
arpl
jo
fstpt
mov
clc
out
dec
lock
add
jle
in
xchg
sahf
mov
repnz
leave
push
icebp
pop
and
mov
xchg
or
sub
pop
leave
sub
mov
mov
aaa
aaa
fldenv
xchg
dec
ljmp
cmp
jb
popa
nop
inc
xchg
cld
cmc
lock
mov
js
inc
shlb
dec
shrb
push
mov
sub
or
loope
xchg
add
cltd
sbb
sub
incl
fnsave
xchg
mov
inc
cmpsl
nop
xor
fists
xchg
xchg
lods
ja
sbb
rorl
dec
pop
cmp
out
pop
push
movsb
in
arpl
add
xor
push
mov
xchg
and
dec
stos
or
xor
adc
mov
test
stc
sbb
testb
outsb
mov
fstpt
sbbl
pop
loop
mov
ror
loop
out
in
add
push
xchg
cwtl
clc
out
sub
cmp
outsl
xchg
mov
and
sub
add
push
mov
jmp
xor
shr
dec
pop
call
push
pushf
pop
fisttpll
jb
imull
sbb
notl
clc
xchg
or
hlt
xor
inc
push
ja
jnp
cmpsl
sub
pop
inc
cmp
mov
cmp
pop
aad
mov
outsb
in
fnstsw
add
sub
enter
scas
jle
mov
pop
mov
or
jne
push
ljmp
das
mov
push
add
jecxz
ss
lods
jb
or
cwtl
mov
rcl
aas
xchg
rol
hlt
push
push
xchg
sbb
cmpsl
mov
xchg
add
std
sbb
push
neg
daa
inc
loope
and
clc
xlat
mov
inc
sub
jnp
out
in
cli
cwtl
lods
sub
or
push
pop
js
mulb
lds
adc
mov
std
cmp
leave
xor
sub
sub
sub
xchg
cmp
push
jmp
stc
push
ss
add
gs
jle
std
xchg
and
mov
cltd
leave
add
hlt
fstp
sub
jecxz
mov
cmp
rcrl
imul
call
int
push
sbb
adc
xchg
mov
sbb
inc
es
inc
jmp
clc
xchg
pop
in
aas
out
das
cmp
jl
stos
or
xchg
movsb
out
or
mov
add
out
daa
test
sbb
or
dec
cmp
out
dec
fstps
xchg
xchg
sbb
lods
and
fisubrl
jbe
push
std
add
xlat
scas
in
jl
shlb
outsb
jecxz
repnz
dec
pusha
or
mov
movb
mov
and
jle
or
insb
pusha
cs
pop
mov
jnp
jge
pop
xlat
shrl
pop
test
and
nop
icebp
sbb
mov
out
sbb
and
jbe
jp
test
subb
push
xchg
insb
and
lahf
pop
addr16
cmp
xchg
and
sub
out
or
test
pop
stos
jle
cmc
add
mov
adc
cs
ds
addr16
mov
ja
test
inc
daa
add
lcall
aaa
push
movsb
xchg
in
shrl
jg
add
inc
mov
pop
loopne
sub
inc
ret
test
push
dec
ret
push
lret
mov
pushf
loopne
fldl
ljmp
and
or
dec
mov
or
mov
mov
cmp
int
gs
jo
cmp
pop
imul
lcall
cmc
or
int
sbb
sahf
pop
mov
in
jg
fbstp
adc
sbb
fcoms
dec
jbe
test
into
jae
add
in
enter
add
lret
das
xchg
xchg
sub
lods
inc
subb
jne
cmpsb
stc
fdivrp
leave
mov
ds
call
mov
jge
notl
and
sub
mov
das
in
adc
stc
lock
or
in
or
stc
stc
cmp
add
mov
add
xlat
add
push
cmp
add
mov
into
leave
xor
or
clc
push
push
jmp
mov
xor
pop
rcll
push
sub
loope
fisttpl
add
jmp
lret
xchg
pop
scas
int3
xor
dec
fwait
testb
add
pushl
mov
xor
lcall
jbe
ja
pusha
jnp
and
sbb
sbb
fisubrs
pop
jle
cs
shlb
adc
mov
sub
outsl
cmpsl
adc
mov
mov
jle
je
jbe
roll
jge,pn
into
popf
imul
mov
add
out
mov
fdivrs
mov
fcoml
xor
and
push
cmp
addr16
cmp
xor
lock
jecxz
xchg
ja
dec
cmp
add
mov
push
dec
hlt
test
pop
add
jmp
lret
scas
jp
or
pop
inc
hlt
sbb
mov
dec
js
inc
ficoms
jno
dec
or
repz
dec
inc
cmp
gs
jp
jmp
jle
mov
adc
mov
dec
shll
out
jno
push
mov
or
xchg
loope
xchg
lret
out
hlt
cmp
rcll
or
imul
in
cwtl
loop
xchg
inc
sub
xor
mov
or
sbb
lret
js
mov
mov
sub
in
das
nop
mov
imul
mov
fisubs
sbb
jbe
sbb
outsl
loope
aaa
lods
push
mov
jbe
mov
add
fistps
jg
dec
push
push
pop
mov
divb
vphaddwd
je
in
in
mov
scas
adc
mov
pop
cs
stc
add
into
loope
lcall
jae
mov
mov
int
data16
mov
add
mov
aam
out
scas
scas
inc
mov
dec
lret
adc
cmp
push
sbb
pop
xchg
jno
inc
call
stc
fwait
in
sub
rorb
xor
adc
pop
ljmp
xor
ljmpw
mov
dec
sub
hlt
and
push
mov
lds
mov
mov
sub
pusha
and
mov
popa
adc
or
add
out
fsubrl
inc
mov
push
add
sub
mov
cwtl
jge
sub
and
movhps
test
mov
int
sbbl
cmp
aad
out
xchg
mov
test
lock
cwtl
in
pop
movsb
dec
lret
mov
dec
ljmp
cmp
and
ffree
lods
pop
clc
fmul
mov
mov
push
jp
cwtl
cltd
stos
pop
fimuls
movsl
in
fsubrl
cmp
jmp
xchg
ja
rcrb
mov
xor
mov
inc
mov
xor
mov
sbb
jecxz
add
pop
adc
ja
dec
es
push
fwait
or
xchg
inc
jl
scas
fsubs
pop
loop
xor
jne
or
dec
and
sbb
shl
shll
push
xchg
cltd
inc
scas
insb
ret
mov
rol
push
ror
std
loopne
mov
mov
lret
jo
add
pop
jb
negl
pop
lods
pop
and
enter
and
popa
push
enter
mov
rcr
sub
or
sub
mov
inc
outsb
sti
mov
add
cmpl
add
pop
adc
out
or
notb
clc
test
inc
dec
push
adc
bound
push
mov
stos
iret
sub
rorb
pusha
mov
add
xchg
mov
popl
mov
cli
add
mov
inc
push
iret
cmp
fstps
jp
jb
mov
adc
test
scas
jmp
out
scas
out
jge
mov
movsl
fwait
movsb
xor
xlat
mov
jb
pusha
neg
xor
lds
push
rolb
push
sbb
push
adc
pop
bound
sbb
jo
cli
xchg
stos
pop
pop
inc
mov
adc
mov
inc
push
push
adcl
sbb
xchg
pop
aam
fildl
aas
mov
aas
ljmp
iret
aam
in
jb
adc
push
push
mov
pushf
loop
inc
inc
pop
pushf
add
into
mov
pop
jne
pop
inc
daa
jl
fnstcw
je
arpl
out
out
sbb
sub
sbb
push
jg
ds
mov
loope
jns
and
jmp
lret
subb
mov
inc
inc
in
cs
call
fldt
dec
sbb
rcrb
adc
inc
jmp
mov
lcall
loop
jmp
cmpsb
ljmp
xchg
lds
xlat
pushf
xchg
xor
out
jnp
std
jne
cpuid
out
lea
aad
or
ficompl
arpl
pop
jp
repz
add
dec
inc
popf
mov
std
mov
jae
sarl
mov
popl
lret
dec
cmp
out
add
push
pop
std
ret
push
cmpsb
popa
mov
es
aad
out
ds
iret
mov
push
repnz
mov
sahf
lds
aad
push
jno
dec
xchg
push
or
fucomp
mov
ljmp
push
cmp
push
addb
xor
cs
fiadds
mov
jmp
lret
pop
out
scas
pushf
mov
xor
addr16
add
xor
or
xchg
xorb
lcall
daa
clc
adc
push
sub
loop
filds
mov
pop
and
mov
in
lods
mov
mov
adc
mov
mov
lock
sub
ret
cmp
ds
pop
faddl
push
jp
mov
pusha
inc
rorb
roll
or
scas
adc
sbb
jns
inc
xchg
popf
call
scas
inc
lods
jnp
and
test
loope
xor
shrl
test
lods
stos
aam
mov
fcmovne
inc
mov
jge
sub
push
add
or
push
aas
xor
in
sbb
cmpsl
mov
ficomps
pop
jae
inc
inc
shll
in
pop
jo
ret
inc
jo
and
sub
add
adc
into
call
xchg
dec
jmp
out
and
push
adc
sub
add
rclb
sbb
fdivs
mov
xor
call
in
dec
adc
sub
dec
cli
cmp
ja
cmpsl
in
jmp
mov
ja
call
pop
pop
js
mov
xor
enter
gs
pop
jecxz,pn
loopne
into
and
repnz
add
enter
and
pop
ficoms
rcr
jnp
sbbl
xor
out
dec
jo
xor
sarb
and
ret
jo
sbbl
adc
push
pop
cmp
mov
push
adc
into
movsb
pushf
inc
pusha
adc
jns
adc
mov
loope
imul
push
movsb
jbe
jp
dec
je
adc
fsubrl
mov
fnstenv
gs
inc
clc
in
sub
lods
mov
and
jp
cmpsb
jnp
outsl
outsb
mov
lahf
popa
pop
out
dec
and
push
dec
enter
and
arpl
fmull
dec
outsb
push
mov
cltd
inc
jno
push
orl
xchg
mov
repnz
inc
xchg
outsb
pop
imul
int
sub
into
push
in
pop
mov
jb
pusha
arpl
jmp
fwait
jnp
iret
push
cmc
jp
lods
add
sub
or
ja
cld
imul
jnp
adc
sahf
jl
fwait
adc
xchg
repnz
mov
mulb
and
shl
xchg
or
or
in
push
dec
gs
sub
addr16
push
icebp
negb
std
mov
fimuls
and
push
and
std
jp
in
ss
cmp
mov
mov
nop
enter
lea
mov
push
cmp
xchg
or
mov
push
pushf
fwait
insl
adc
outsl
mov
and
cmp
cmp
mov
pop
insl
repz
mov
addr16
and
add
sub
mov
dec
add
fimull
in
mov
mov
cli
cmp
popf
push
stos
inc
negb
push
mov
push
xchg
pop
movsl
mov
test
push
pop
stos
lcall
in
push
fbstp
pop
stos
loopne
cmp
mov
inc
cmp
andl
lahf
fists
sbb
cmp
rcrb
les
sbb
outsl
btr
fldcw
fidivrl
scas
cmp
scas
adc
xchg
mov
bnd
scas
xor
push
addr16
inc
mov
jg
or
pop
cmp
sub
mov
cmc
and
dec
test
lahf
icebp
hlt
push
clc
xchg
sbb
test
imul
adc
mov
mov
mov
out
jne
cmp
add
cmpsl
movsb
cli
inc
jns
out
sbb
insb
pop
lds
and
rcrl
pop
xchg
pop
fidivrl
iret
stc
repnz
dec
push
test
mov
cmp
adc
add
dec
adc
into
addr16
cs
icebp
ss
xchg
loop
repz
cld
test
pop
xor
roll
or
add
or
sbb
mov
out
xchg
icebp
ret
and
lret
rorb
test
or
int
xchg
pushl
pop
xor
mov
xor
push
add
cs
loopne
push
xor
mov
pop
inc
sbb
pop
jg
sbb
add
xchg
out
pop
adc
dec
fcoms
insl
or
ret
cli
jo
cmc
push
jl
cmp
push
mov
adc
push
push
lds
xchg
incl
popa
pop
mov
add
lcall
test
jne
out
xor
into
jb
jbe
mov
popa
mov
push
cmp
imul
xchg
jle
jnp
arpl
or
testl
dec
ljmp
mov
fsubrp
pop
push
aaa
out
sbb
xor
xchg
mov
push
or
mov
fdivs
pop
xchg
xor
sbb
jnp
popa
ffreep
jbe
test
jecxz
idivb
enter
iret
jecxz
push
inc
sub
add
outsb
sub
and
adc
std
cltd
mov
repz
push
dec
xor
lcall
fcmovu
xlat
imul
or
xchg
mov
sub
sti
fisttpll
dec
jl
jne
cmp
in
adc
adc
jmp
add
cmpsl
cmp
fwait
lcall
sbb
dec
dec
fs
xchg
push
shrl
insb
push
imul
stos
out
mov
cmpl
sub
addr16
fs
fisubs
inc
iret
push
pushf
xchg
jae
incl
lock
adc
cmp
lahf
fmul
popa
test
cmp
test
outsb
push
adc
and
pop
or
rolb
xor
jne
pop
fdivrl
adc
sub
xor
mov
inc
repz
aam
xchg
jbe
imul
pop
mov
cmp
sahf
daa
add
ficoms
pop
pushf
push
inc
push
and
and
pusha
fnstsw
mov
scas
repnz
push
sbb
pop
pop
pop
push
pop
or
jmp
das
lock
and
or
cld
pusha
stos
add
mov
xor
or
pop
pop
sbb
mov
inc
xchg
cmp
mov
push
mov
fisttpl
pop
adc
jl
test
repnz
sahf
insl
ret
inc
pop
xchg
leave
xorb
push
sub
int3
decl
pop
repz
fwait
outsl
xor
pop
pop
and
fisttps
mov
and
jp
jecxz
add
xchg
pop
xor
dec
fbld
adc
les
mov
mov
int
enter
nop
inc
xor
mulb
pop
insb
jne
xor
in
mov
xchg
shll
cwtl
push
pop
mov
xor
cmc
xor
adc
fstpl
inc
cmp
jl
mov
mov
push
aam
xchg
test
jns
mov
xchg
shlb
xchg
call
dec
and
jecxz
stos
mov
outsl
gs
aaa
repz
push
call
cmp
clc
pop
out
dec
sub
adc
mov
in
cmc
test
scas
ds
cmpsl
sub
xor
adc
cs
inc
mov
fcmovb
pop
push
cmpsb
mov
js
lea
call
xor
xor
cmp
dec
repnz
movb
dec
bound
add
mov
sbb
ficoms
clc
movsb
ds
dec
inc
pusha
adc
idiv
arpl
and
enter
pop
pop
mov
xchg
pop
mov
fldl
iret
cmp
jecxz
jo
push
cmpsb
adc
xor
stos
inc
cmp
inc
test
bound
in
add
sbb
xchg
jb
shl
fstl
sbb
adc
mov
pop
inc
inc
nop
loopne
insl
xchg
pop
inc
mov
mov
pop
pop
adc
adc
jbe
mov
push
push
in
xor
dec
lcall
rorb
jae
and
xlat
jg
xchg
int3
mov
xchg
pop
sti
cs
test
cld
call
clc
icebp
lds
add
xchg
sar
cmp
dec
imul
mov
cmp
jecxz
in
push
cltd
lahf
jae
or
mov
fsts
and
enter
stc
mov
mov
shr
sub
movsb
seto
leave
or
push
stc
jbe
das
cs
fimuls
lods
imul
or
js
rcll
mov
pop
loopne
pop
cmp
dec
adc
loopne
push
es
sahf
sub
inc
jb
adc
xchg
lahf
outsl
cmc
fucompp
xchg
leave
push
cmp
addb
int
cmp
dec
mov
pusha
call
comiss
push
cmp
sbb
pop
mov
sub
mov
add
sub
and
call
mov
add
cltd
dec
mov
imull
mov
fs
jns
js
and
rcrb
xchg
push
frstor
test
mov
out
xchg
xor
sub
dec
pop
push
jmp
mov
rorb
pop
int
cmp
insl
cmp
sub
js
pop
stos
dec
add
jl
mov
pop
shlb
add
adc
mov
dec
and
std
lret
scas
mov
push
ja
add
dec
inc
push
in
add
orps
push
cmc
fildll
lock
adc
or
mov
mov
pop
test
ret
inc
bound
sbb
cmp
cltd
sahf
out
xchg
xor
xor
aas
call
stos
jne
fnstenv
subl
push
xchg
xlat
mov
leave
push
stos
andb
stos
sub
or
lds
adc
aam
lahf
in
insl
pop
jge
mov
sbb
xchg
sub
jns
jg
lahf
or
sub
adc
in
shll
movsb
daa
push
or
es
cli
add
mov
mov
inc
dec
jno
stos
test
imul
bound
push
jg
xlat
pop
imul
shl
cmpsb
lods
adc
fwait
loope
aam
push
in
sbb
mov
mov
std
stc
adc
fwait
push
mov
mov
xchg
or
pop
gs
xor
rclb
cmp
pop
dec
popf
enter
fwait
sti
lock
aam
dec
aam
sbb
xchg
pop
mov
sub
sbb
jb
movsw
lcall
cmc
push
sahf
mov
into
add
pusha
mov
movsb
or
xacquire
cwtl
push
addb
cmp
xlat
mov
sub
and
lcall
ret
jbe
add
mov
cmpsl
repnz
loopne
enter
pop
push
add
pop
add
movsb
xchg
mov
add
inc
pop
sti
sbb
xchg
or
pop
icebp
out
leave
shll
fistpl
into
jo
or
fmul
into
mov
pop
inc
dec
imul
inc
add
and
addr16
test
int3
pop
js
xchg
loop
cmpsb
leave
popf
push
sub
popf
xor
adc
mov
xor
push
push
jp
ds
push
fcoms
fmuls
fsincos
mov
push
sbb
jle
dec
test
in
push
movsl
cmp
mov
inc
dec
shlb
add
cmc
jg
rep
lds
sbb
ja
test
inc
and
sbb
adc
and
lds
arpl
xor
sbb
mov
pop
push
andl
dec
lahf
mov
arpl
sarl
xchg
and
cmp
cmpsb
jmp
sbb
shll
and
notb
test
jle
vphaddbq
push
cld
fdivrs
push
in
xchg
sbb
neg
sbb
mov
push
dec
leave
lret
lret
add
jns
sub
jns
into
and
xor
stc
bound
mov
scas
xor
and
int3
pop
push
mov
push
inc
scas
add
out
das
ret
mov
and
mulb
out
bnd
shll
ja
inc
or
cmp
push
adc
scas
scas
sti
stos
in
test
and
popa
mov
jbe
pop
lds
cmpl
clc
pop
jg
nop
push
sub
xor
fisttps
cmc
fnstsw
or
inc
in
dec
dec
adc
faddl
mov
in
push
jge
mov
cmpsl
lods
in
xor
bound
cmp
push
mov
scas
add
mov
sub
mov
dec
pop
stc
push
or
sbb
mov
add
test
stos
jle
aam
ds
and
jnp
push
in
popa
imul
or
inc
inc
sti
arpl
dec
mov
clc
inc
cli
push
mov
mov
lods
adc
notl
into
pop
test
mov
daa
enter
xchg
mov
push
jecxz
adc
mulb
ds
sub
pop
push
jl
fcmove
lea
sbbb
and
test
sbb
inc
test
mov
push
ret
cmp
jecxz
aas
cmpsl
es
inc
ljmp
inc
mov
adcl
add
loope
xchg
shlb
xor
or
push
push
pop
pop
jg
cwtl
test
fmuls
or
clc
push
fnstcw
mov
shll
test
shr
adc
sbb
push
arpl
sbb
scas
jae
push
setl
int3
out
dec
push
test
stc
dec
cwtl
pop
jbe
loop
mov
stos
xchg
push
jmp
sub
movsb
lea
enter
pop
vpsllw
jp
aad
loopne
cmpsb
std
mov
and
mov
rorb
ss
pop
adc
mov
sub
mov
pushl
xchg
jle
mov
stos
sbb
popa
cmp
test
and
data16
pop
mov
push
sbb
push
xchg
insl
insl
js
into
sub
lods
sub
out
out
mov
fiaddl
sarl
or
std
roll
scas
xor
sbb
adc
test
scas
repnz
push
stos
in
push
lock
or
xor
ja
mov
push
pop
aam
adc
or
sbb
pop
pusha
nop
and
test
and
out
in
aad
call
push
push
or
adc
cmc
push
push
cmpsb
cltd
mov
push
push
xchg
sub
xchg
das
lods
fsubs
add
jecxz
jo
and
push
dec
or
inc
std
xor
outsb
popf
pusha
in
out
sbbl
inc
lahf
shrb
sbb
icebp
mov
pop
add
outsl
push
mov
lret
inc
ss
mov
or
popa
lock
lcall
cmpsb
cmp
shll
rol
add
sbb
leave
iret
mov
pop
adc
jmp
scas
repnz
xchg
push
fisttpll
and
dec
and
cs
mov
jle
add
and
popf
popa
int3
mov
mov
icebp
ret
shll
cmp
fwait
mov
fcmovnbe
inc
dec
sub
add
scas
pop
jbe
cld
fwait
repz
add
mov
mov
dec
jg
test
rolb
mov
dec
mov
sub
out
loopne
and
pop
fs
dec
es
pop
cmc
fwait
mov
inc
jp
mov
pop
mov
into
pop
or
sbb
mov
and
outsb
popa
out
call
xor
flds
mov
ss
fisubl
cmp
sbb
xchg
jbe
push
movsl
sbb
mov
lods
xor
sbb
push
mov
xchg
jns
xor
and
add
add
lahf
lcall
pop
jno
push
mov
nop
jno
stos
popf
mov
in
movsb
std
out
call
addr16
add
leave
sub
cmpsl
fisttpll
pop
ret
negb
xchg
sbb
lahf
mov
popf
stc
pushf
nop
enter
cmc
cs
shll
fsub
sub
add
adcl
sbb
xchg
jb
sbb
sub
outsb
or
pop
fwait
mov
dec
dec
aas
lock
fs
mov
pop
incl
fiadds
sbb
roll
sub
call
sbb
mov
xor
popl
mov
lods
xlat
mov
mov
xlat
aas
mov
stos
sti
movsb
testb
in
push
jb
scas
loopne
jbe
call
xchg
lea
xchg
jmp
hlt
mov
outsb
lret
xchg
dec
cmp
insb
push
and
and
movsl
out
jns
sbb
mov
cmpl
das
shrl
xchg
mov
xchg
pop
iret
cmpl
pop
popf
xor
xchg
inc
mov
add
sbb
cmp
ret
jp
adc
cmp
hlt
popf
mov
stc
out
loopne
in
std
movsl
jg
cmp
pop
push
dec
frstor
mov
popf
dec
lcall
fstp
scas
iret
jae
push
shlb
mov
je
daa
cmpsl
push
cs
cli
stos
mov
and
mov
in
js
inc
lahf
jl
popa
and
jns
ret
push
cmp
jecxz
adc
movsl
stos
lock
insb
lret
data16
bsf
jp
inc
sti
jg
or
fs
sti
mov
or
dec
out
sti
pop
xchg
xchg
mov
arpl
cltd
adc
push
cmpsl
mov
pop
lea
mov
jecxz
sbb
cmp
idivb
addb
and
cld
pop
ss
pop
pop
cwtl
push
mov
add
pop
pop
cwtl
mov
xchg
lods
mov
cmc
push
incl
divl
inc
mov
sbb
out
cmc
scas
mov
jne
add
stos
or
sub
jbe
push
dec
xchg
or
lock
iret
movsl
mov
jae
mov
push
int3
arpl
mov
xchg
into
or
sbb
orb
lret
xchg
adcb
andb
mov
cmpsl
rol
push
mov
dec
push
mov
aas
int3
ret
loope
jno
cmp
xor
mov
pop
xchg
lahf
scas
ret
ret
sbb
movsb
int3
adc
sahf
imull
push
add
pop
lds
sub
sbb
ljmp
notl
sub
sbb
aas
mov
mov
pop
xchg
push
sahf
push
repz
add
mov
int3
orl
pop
stc
xor
testb
arpl
scas
mov
pop
mov
lret
push
inc
cmpsl
outsb
push
pop
jmp
cmp
dec
inc
cmc
and
movsb
cmp
cmp
cwtl
fildll
cmp
pop
mov
ljmp
cmpsl
xor
jge
or
mov
rorb
xchg
and
lret
xchg
call
xchg
jl
jo
lods
inc
inc
gs
or
test
sbb
push
js
pop
mov
int3
cwtl
adc
pop
xlat
int
cmp
repz
testl
leave
xor
decl
fs
loopw
cwtl
mov
lods
js
add
ret
enter
push
add
push
mulb
adc
sub
cmpsl
andb
nop
jbe
dec
clc
xor
mov
jmp
stc
test
les
stc
adc
mov
fsubrp
data16
jge
lea
cmp
jg
popf
xchg
mov
test
mov
mov
add
xor
int
adc
push
out
sbb
and
rorl
loopne
mul
inc
ficoms
and
mov
and
ret
xor
jno
jl
ret
popa
push
mov
cmp
or
xchg
insl
dec
subb
loopne
js
imul
sbb
inc
inc
dec
lock
ja
xchg
outsl
out
sub
cmp
sub
xor
xchg
jle
mov
push
jno
rcrb
loop
push
insb
cld
jb
sub
je
ret
cwtl
inc
sahf
sub
xor
xor
mov
add
mov
cmc
bound
and
pop
jnp
cwtl
pop
xchg
je
push
adc
test
daa
popf
push
lock
inc
in
lock
mov
popa
andl
mov
mov
adc
pop
out
cltd
lret
stos
andb
in
mov
fdivrl
dec
mov
push
push
xchg
mov
rol
test
popa
pop
aaa
sbb
ds
std
jns
and
jns
jae
xor
rcrb
inc
add
mov
pop
and
jge
mov
push
dec
in
addr16
outsb
fadds
push
sub
or
in
rcll
clc
or
adc
cmp
out
adc
mov
xorl
imul
andb
xor
das
cmp
push
push
jmp
push
and
mov
xchg
adc
add
in
jmp
xchg
lea
jno
js
dec
inc
adc
inc
or
inc
mov
xor
adc
adc
sbb
pop
mov
int3
inc
xor
push
mov
push
call
xchg
cmp
pop
loopne
mov
fstl
shl
mov
aam
cld
shlb
mov
adc
aam
test
rcrb
push
pop
mov
and
ljmp
mov
pop
or
scas
icebp
test
xor
inc
and
std
fisttpll
mov
mov
insl
mov
inc
push
add
gs
lea
jge
pusha
pusha
sar
fstpl
pop
cmpsl
pop
or
adc
or
cmp
imul
mov
and
aam
scas
sub
fidivs
inc
stos
lahf
bound
aaa
cmp
adc
jg
inc
xchg
adc
addl
imul
in
push
adc
cmp
jecxz
push
pop
pop
sub
inc
jge
push
dec
pop
pop
lods
cmp
lahf
je
outsb
cmp
popa
movsbl
mov
test
fstps
stos
ret
leave
jns
fsubrs
in
jno
ljmp
cld
xchg
mov
fsubp
subl
jno
pop
cmp
xor
fiadds
push
movsl
fistpl
xor
jbe
addl
mov
das
jne
fwait
stos
mov
xor
xor
or
repnz
or
xchg
int3
pop
imul
and
leave
inc
jns
fildll
lods
js
cwtl
loope
lcall
cld
pusha
mov
repnz
mov
sub
jno
inc
sahf
addr16
loope
and
fistpl
movsb
fdivr
in
mov
mov
inc
push
jmp
cmp
sbb
push
push
js
inc
sti
in
lret
adc
sub
fwait
and
das
pusha
mov
ret
sahf
jmp
sbb
fidivrl
jb
ds
inc
xor
sbb
jp
insl
push
dec
movnti
enter
and
cmp
push
out
jg
sbb
mov
in
jne
popa
or
sarb
fwait
sbb
dec
es
adc
mov
dec
and
xor
aad
fldenv
decb
sbb
enter
es
fistpl
sub
movsb
lret
divb
mov
or
cmp
pop
xchg
cmp
mov
scas
pushf
pusha
xchg
mov
sbb
pop
nop
sub
sub
inc
xor
repz
orl
jbe
rcrb
and
mov
aam
mov
in
sbb
ret
lahf
ret
push
inc
pop
and
rol
add
aaa
xchg
pop
or
sar
sub
aas
call
out
lahf
rcr
cmp
or
xchg
test
jb
fbstp
movsl
or
js
scas
aas
ljmp
ss
jle
mov
lds
arpl
addr16
icebp
hlt
mov
lahf
call
or
lahf
fisubrs
and
fdivl
in
pop
mov
jbe
sbbb
xchg
out
and
mov
pop
lock
pop
lcall
pop
mov
sub
imul
int
ja
lret
push
test
dec
cwtl
rcr
fs
or
andl
cmpl
leave
ja
push
lds
mov
or
add
add
push
xchg
js
sub
inc
mov
sub
lret
sub
pop
icebp
add
testl
bound
mov
jb
mov
add
mov
popa
scas
mov
and
add
jmp
ds
enter
pop
insb
popa
fsubl
push
and
lds
mov
mov
vpackuswb
fwait
dec
jae
mov
cmpsl
mov
or
gs
pop
push
cmpsl
ss
in
lods
jg
inc
push
in
xor
dec
fildl
mov
pop
in
mov
out
sbb
xchg
testb
add
inc
rol
xchg
cli
mov
xlat
aam
mov
arpl
mov
fcmovne
je
xchg
cmp
je
insl
ret
push
mov
push
push
sub
xlat
lcall
loopne
jmp
cmp
mov
cmpsb
icebp
lods
movsl
adcl
mov
and
jl
adc
push
pop
adc
in
cmpb
int3
lret
pop
jp
xchg
popf
popf
cmp
xchg
ds
jno
das
cwtl
or
lods
mov
xor
mov
arpl
outsb
dec
stos
add
mov
sbb
mov
push
mov
leave
mov
shr
lea
mov
push
fists
ds
scas
dec
mov
stos
sub
pop
stc
pop
mov
fwait
rcrb
mov
popf
fwait
int
pop
sahf
popa
int
testl
adc
mov
push
xchg
cmp
movsb
dec
add
cmpsb
testl
adc
add
insl
fdivs
mov
xor
enter
sub
mov
xchg
xchg
pushf
pop
and
jecxz
lea
mov
daa
outsl
cmp
cmp
and
push
movsl
shr
push
mov
scas
sbb
mov
add
in
pop
mov
mov
mov
mov
inc
push
sub
add
add
into
cmp
stos
mov
and
mov
scas
pusha
sbb
push
jecxz
push
je
adc
and
dec
ja
xor
mov
testb
inc
rcrb
in
adc
lods
enter
icebp
pushf
mov
fmull
inc
rclb
xchg
xor
loopne
push
xchg
cltd
paddd
cmp
sti
mov
shll
push
fistl
adc
dec
gs
inc
pop
jns
mov
adc
rclb
or
jae
or
push
jg
shr
cmp
jecxz
adc
xor
daa
add
fwait
push
stc
dec
sbb
fistpl
mov
mov
arpl
push
xchg
sub
in
push
test
sbb
arpl
push
popa
pop
imul
pop
pop
xlat
enter
out
rorl
jmp
or
arpl
xchg
cmp
mov
adc
movsb
mov
add
mov
dec
mov
scas
ret
pop
push
cmpl
add
sbb
aaa
dec
sub
cmp
push
xchg
sub
icebp
sbb
mov
imull
jg
xor
iret
fldt
push
call
lods
jnp
xor
les
xchg
loopne,pt
scas
xcrypt-cfb
cmpsl
movsl
aam
lea
das
xchg
outsb
out
jg
sbb
iret
cmc
bound
pusha
pusha
mov
mov
bound
cs
push
scas
pushl
scas
addl
clc
cld
and
pop
jne
out
in
aam
dec
loopne
dec
dec
sub
mov
and
cmc
jg
add
push
mov
or
aam
int3
das
or
mov
jmp
dec
in
sti
test
mov
cli
mov
jp
adc
pop
xchg
jle
add
in
call
xchg
sbb
mov
push
adc
mov
cmpsl
ds
nop
inc
pop
jnp
and
adc
andb
loopne
xchg
mov
xchg
pusha
ja
in
and
pop
add
cmpsb
ret
test
cltd
fisubrl
nop
xchg
es
xchg
mov
aad
jl
jns
in
ljmp
mov
sbb
xchg
push
dec
call
jb
xchg
scas
insl
in
jg
dec
mov
out
push
sbb
test
scas
notl
jnp
pop
imul
cmp
push
add
iret
push
int
decl
ss
cmpsl
ret
xor
icebp
nop
cwtl
rcrb
adc
xchg
sbb
into
xor
aad
and
shll
dec
gs
dec
pop
repz
sbb
sbb
cmc
in
fwait
imul
out
pop
stos
jle
pop
sub
inc
ret
lret
push
mov
pop
mov
xorl
cli
or
dec
fadds
mov
cmp
movsb
inc
out
or
mov
in
lahf
xchg
fsubl
jns
xchg
aaa
mov
jne
cmp
testl
daa
cmp
insb
mov
bound
lcall
out
push
sbb
jp
push
ret
sbb
iret
xchg
jle
in
or
cmp
jmp
in
insl
rcr
push
sbb
lods
aas
popa
lret
lret
push
sahf
out
cld
mov
test
xor
pop
mov
fldlg2
mov
lea
jo
adc
jle
mov
jp
mov
mov
in
or
add
aad
mov
mov
xor
adc
or
sub
inc
int3
stc
push
int
add
pop
and
into
cld
jle
add
inc
push
jno
jno
xchg
ss
lea
int3
push
idivb
pop
jle
inc
sbb
int3
cwtl
popa
and
dec
insl
and
sbb
cltd
inc
push
xchg
in
enter
popa
iret
and
ds
es
in
lea
aas
sub
mov
xor
mov
pop
xor
push
or
fs
leave
cmp
in
adc
pop
inc
jnp
notl
mov
xlat
xchg
jge
fdivrp
int3
jnp
jg
cmpl
inc
lahf
mov
in
lret
hlt
roll
incl
je
outsb
mov
jecxz
and
pushw
popa
jge
mov
repz
jge
pop
push
jo
mov
xchg
notl
sbb
cli
les
inc
lret
adc
xor
dec
ret
sbb
sahf
push
jnp
xchg
mov
int
add
daa
jle
mov
jnp
scas
daa
or
dec
add
jmp
imul
adc
push
pop
and
mov
prefetch
or
mov
insl
test
adc
js
repnz
movsb
rorb
xor
jae
addr16
xorl
mov
jge
push
push
test
jbe
jecxz
sbb
dec
jb
sub
mov
xor
movsb
cmpsb
and
and
xchg
jle
inc
or
mov
lea
scas
je
xor
mov
loopne
pop
pop
and
lret
mov
out
shlb
es
fiaddl
push
xchg
lea
out
adc
sbb
push
jae
outsb
popf
div
mov
movsl
push
je
popa
outsb
hlt
loope
jmp
aaa
xor
xor
mov
cwtl
aam
jp
sarb
mov
stos
sub
ror
adc
ljmp
inc
les
int3
cld
sbb
stc
xor
adc
imul
xchg
mov
hlt
iret
lahf
ja
cmp
or
arpl
test
mov
sub
fadd
pop
or
testl
jmp
int
cmpsb
mov
push
cmp
fs
in
push
sahf
mov
ljmp
mov
ja
sahf
das
cmp
testl
dec
xor
xchg
ds
pop
pusha
pop
or
clc
adc
fwait
js
scas
cmpsl
jne
jle
js
xor
cvtps2pd
es
inc
je
andb
out
aam
popa
rcl
sahf
jns
mov
jle
or
and
xor
ret
mov
push
cli
cmc
sub
fildll
das
mov
add
insl
addr16
hlt
xor
cwtl
or
in
xchg
xor
push
outsb
sbb
cltd
negl
push
dec
je
mov
fs
repz
loope
jl
mov
dec
push
push
dec
dec
in
sarb
xor
aad
scas
cld
popf
sub
pop
xor
je
leave
dec
adc
adcl
pop
pop
ja
clc
and
pop
std
mov
xchg
roll
push
dec
xchg
pop
mov
in
iret
push
cld
and
enter
jae
jl
add
push
push
das
cli
inc
dec
insl
mov
mov
scas
mov
mov
insb
ljmp
sti
das
stos
mov
jge
xor
repnz
das
pop
sub
and
enter
icebp
push
mov
dec
scas
add
and
mov
outsb
aaa
jmp
imul
sbb
xchg
rcr
xor
inc
aas
enter
cld
cmp
fsubrs
jmp
xchg
imul
xor
jo
shlb
dec
movsl
mov
mov
add
and
add
jmp
lahf
mov
lods
test
mov
ret
sub
xchg
cmp
cmp
fwait
add
ret
cmp
push
push
pushf
jmp
imul
mov
test
scas
stos
icebp
cmp
cmc
add
insb
sbb
sar
scas
dec
xchg
outsl
push
push
mov
xchg
aas
fstpl
mov
sub
mov
aad
ljmp
mov
repnz
cmp
push
mov
add
pop
mov
push
sub
test
gs
mov
fwait
roll
fcmovnu
ret
xchg
popa
push
ficompl
pop
imul
push
scas
inc
lret
jo
jae
jmp
add
push
cmp
fcoml
shrb
jb
int
cmp
adc
pop
sti
scas
inc
das
pop
dec
mov
pop
inc
out
cmc
xor
cld
cld
mov
ja
xor
scas
jp
cmp
pushf
ja
cld
or
add
adc
sub
inc
arpl
or
adc
push
movsl
jnp
inc
sbb
jmp
push
ret
imul
insb
push
dec
cmpb
into
daa
add
fildl
enter
mov
test
xchg
ds
movsl
mov
mov
loope
inc
mov
jl
clc
cmpsl
out
mov
fsubs
and
andb
and
shll
inc
cmc
sbb
dec
fidivrs
ret
mov
pop
pop
mov
xor
shll
xchg
dec
leave
test
inc
mov
push
push
adc
adc
cs
insl
fldcw
sahf
lea
std
push
jl
pop
popa
lods
pop
repz
ds
inc
mov
sub
cmpsb
fcmovb
dec
fucomip
inc
xor
out
sbb
repnz
es
sbb
sub
pop
stos
xor
sub
jae
mov
sbb
les
push
xor
sbb
mov
dec
and
sub
outsl
or
sub
repnz
fs
xor
jp
lea
bound
test
add
push
xchg
pop
daa
hlt
push
test
pop
mov
fnstcw
les
addr16
repnz
mov
iret
cmp
mov
mov
out
subb
sbb
enter
lcall
sbb
in
loopne
sbbb
jo
pop
and
outsl
in
pusha
pop
jne
sub
push
ljmp
add
inc
and
out
xchg
ds
adc
mov
sbbb
push
int
push
jmp
das
sbb
movsb
fstpt
pop
sub
push
mov
push
cmpsb
stos
flds
es
clc
test
pushf
or
inc
mov
or
sti
sbb
or
jmp
jle
push
push
out
jmp
xchg
stos
mov
xchg
xor
push
test
push
shll
outsl
insl
inc
jecxz
clc
sbbb
sub
jo
cld
or
push
sbb
and
sahf
mov
jmp
cwtl
cltd
int
dec
mov
sbb
jns
sti
dec
je
mov
mov
fisttps
arpl
xchg
jb
leave
pop
testb
xor
add
cmp
cld
movsl
pop
jp
int
addr16
inc
inc
jg
negl
stos
out
cmp
xchg
and
dec
outsl
fcoml
iret
mov
adc
sarb
dec
cmp
sub
fistps
outsb
adc
push
push
push
jmp
push
lahf
cli
xchg
push
fldt
cmpsl
imul
inc
sti
xor
shlb
mov
mov
lods
out
fstpt
aaa
outsb
shl
mov
xchg
hlt
insb
jb
pop
mov
out
leave
outsb
sbbb
mov
fdivrl
ffreep
jnp
sub
mov
xchg
inc
xor
fwait
cli
rcll
cmc
hlt
xor
cltd
mov
ljmp
fwait
sub
outsl
mov
in
sbb
xchg
fmull
mov
fmul
mov
fistpll
repnz
add
in
in
rcrl
data16
mov
sahf
dec
shl
push
popa
movsl
mov
and
or
mov
mov
je
aas
rolb
ret
add
cli
mov
dec
inc
das
movb
out
lods
ja
pop
lea
loope
and
push
sbb
mov
push
mov
daa
or
adc
fwait
lcall
loop
push
sbb
inc
leave
and
rcll
ret
test
ds
xlat
sub
push
adc
add
pop
mov
xor
lock
daa
push
sub
cwtl
push
in
adc
fwait
stos
jne
insl
push
cmc
movsb
adc
out
mov
pop
imul
push
shlb
xchg
int
mov
outsl
add
clc
jl
std
jae
lock
andl
aam
mov
rorb
popa
aad
popl
push
or
jle
sbb
mov
cmc
lcall
rclb
shll
mov
pop
iret
test
hlt
cli
cwtl
js
sahf
pop
mov
pop
mov
lods
and
imulb
jae
int
sarb
sahf
mov
push
sahf
imulb
mov
push
cmc
push
dec
hlt
stos
adc
xchg
ss
fisttps
jae
ret
data16
enter
xchg
and
in
xchg
inc
subl
and
adc
movsl
ljmp
mulb
mov
loopne
adc
mov
pop
mov
repz
xor
add
call
jp
cmp
and
ss
fimuls
ja
enter
pop
aaa
insl
jnp
add
jp
aam
cli
push
sub
aas
mov
fwait
pop
ficoml
pushf
pop
in
mov
xchg
jb
sub
jb
jg
mov
ss
mov
aad
xor
push
fs
jp
inc
pop
xchg
adc
push
ret
or
mov
cld
jmp
xor
nop
data16
lods
cltd
mov
jo
adc
in
pop
in
pop
mov
and
add
xor
jecxz
adc
imul
inc
jl
in
scas
sub
gs
adc
fsubs
aad
and
mov
xchg
adc
popf
clc
or
add
push
sbb
lahf
das
outsb
pop
cld
adc
xchg
mov
jmp
or
sub
and
sarl
adc
add
jge
push
enter
mov
daa
mov
xchg
add
popf
call
and
insl
push
fwait
add
cmpsl
ja
xor
xchg
push
jnp
fadds
orb
mov
leave
dec
popa
mov
and
pop
sub
aam
loope
add
sub
add
adc
xchg
arpl
in
movsb
fs
dec
lods
hlt
jbe
outsb
xor
outsb
lock
dec
cwtl
push
xchg
loope
fistpl
pop
inc
mov
push
xchg
xor
pop
sub
xchg
mov
lret
pop
call
js
adcl
jae
pop
lock
jmp
rorl
stos
stc
xchg
mov
fwait
movsb
mov
mov
sub
sub
sbb
scas
divb
xchg
leave
cmpsl
push
dec
aam
orb
cs
fwait
cmp
enter
xchg
sub
mov
gs
rorl
mov
shlb
jbe
mov
sahf
insb
int
jne
mov
xor
sbb
sti
jmp
xor
addr16
lret
inc
arpl
mov
jmp
ljmp
cwtl
lds
cmpsb
pop
out
add
inc
jno
fs
cmp
sbb
ret
data16
rorb
inc
and
push
xchg
fs
jae
inc
das
jne
sbb
fistpll
nop
xor
pop
pop
adc
xchg
dec
inc
xchg
int
xchg
iret
xchg
arpl
fistpl
loope
hlt
mov
cmc
add
icebp
sub
cmpb
aam
cmpsb
pop
fxch
aam
in
pop
sub
ret
and
and
nop
js
loop
popa
dec
int3
fnsave
repz
push
int3
ret
adc
adc
mov
and
mov
lcall
mov
add
push
nop
cli
js
mov
add
cltd
sub
movsl
jnp
decb
mov
insl
add
loop
dec
and
cld
pop
nop
aam
test
into
test
jne
push
test
push
les
idivl
sahf
stos
mov
dec
adc
jnp
sub
aaa
adc
dec
xchg
outsb
movsb
and
test
and
jb
sarb
outsb
mov
inc
xchg
nop
sub
stos
fwait
aaa
data16
push
xor
mov
popa
adc
hlt
mov
lret
mov
xlat
cmpsl
lea
jne
loop
rorl
push
adc
mov
jbe
add
xchg
push
das
push
or
sbbb
cli
jo
in
cmp
and
jmp
sub
mov
mov
js
xlat
sub
pop
xor
ja,pt
popf
stos
pop
movsl
ror
mov
ljmp
jle
in
bound
jnp
icebp
mov
pop
jne
pop
jae
and
inc
push
aaa
or
inc
push
pop
outsb
adc
int3
out
cmc
lea
cmc
mov
aas
xchg
or
in
mov
mov
test
or
pop
cmp
into
inc
add
leave
add
fstpl
sbb
adcl
popa
clc
lods
iret
sub
call
adc
sbb
xor
inc
or
insl
in
jmp
sub
push
sub
daa
xchg
outsb
imul
int3
jle
and
int3
stos
rcl
mov
inc
adc
pop
in
vpshlw
in
xchg
insb
push
adc
icebp
sbbl
cmp
inc
jb
adc
mov
out
and
aam
cmp
je
out
pop
pop
mov
daa
in
and
push
test
std
xor
data16
psraw
and
or
stos
inc
in
mov
lods
out
fstl
pop
sub
dec
inc
push
xor
outsl
loop
dec
adc
or
sub
sahf
out
cwtl
cld
hlt
repz
add
loop
lea
mov
push
mov
xor
scas
dec
adc
int3
or
xlat
jbe
cmp
popf
movsl
test
rorl
popf
and
mov
imul
imul
stos
bound
repnz
subb
cli
ja
mov
pusha
jb
mov
shrb
out
sub
pop
adc
lahf
mov
sbb
add
rcrb
sub
cmp
fwait
mov
rol
xchg
loopne
gs
fs
or
sub
jo
or
cmpsl
repnz
xor
test
adc
dec
add
mov
mov
sbb
mov
pop
xor
test
into
add
push
inc
mov
dec
pop
stos
test
push
pop
out
sarb
jmp
scas
aas
xchg
xchg
push
in
or
sbb
and
jo
add
jbe
lcall
push
xlat
xchg
xchg
cli
test
or
rcrb
inc
xchg
mov
pop
imul
sub
xor
sahf
popa
jae
jno
pop
mov
pop
loop
xlat
in
sub
lods
mov
or
add
cmpsb
push
mov
insb
mov
lods
or
push
out
jge
rorl
ficoml
out
inc
mov
xchg
dec
aaa
mov
icebp
imul
xor
ja
mov
rcrl
mov
mov
fsubrl
mov
sbb
and
push
mov
adc
xor
add
es
add
pand
ss
sub
add
mov
pop
jb
push
mov
push
jo
test
pop
imulb
add
add
or
jno
adc
jae
adc
and
or
inc
stos
arpl
ds
mov
push
pop
jne
inc
add
mulb
pop
and
add
pop
cmp
cmp
int3
inc
ret
push
imull
pop
or
fidivrs
sbb
add
adc
xor
js
fs
ret
std
push
addb
push
icebp
stos
fnstenv
pop
push
pop
xor
ja
push
out
xlat
sbbl
cmp
icebp
mov
in
and
das
das
push
pop
jmp
aam
mov
dec
insl
lods
jl
xchg
and
push
push
stos
sub
pop
pop
shll
jb
shlb
push
ljmp
lds
loope
sbb
das
lret
imul
dec
fmuls
dec
stc
mov
xchg
cmpsb
dec
js
mov
movsl
ficoms
xchg
push
js
pop
cmc
das
insb
push
mov
cmp
lahf
imul
mov
cmc
push
jg
mov
mov
or
stos
mov
les
push
into
incb
ja
mov
inc
cs
sbb
fdivrp
xorl
pop
test
mov
cltd
mov
shll
dec
mov
mov
int
adc
inc
dec
repnz
xor
mov
loopne
add
lahf
inc
jecxz
add
je
pop
cmp
nop
mov
cmp
adcb
inc
inc
iret
pop
fs
xchg
and
adc
sahf
sbbl
inc
shll
es
mov
mov
add
loope
cmp
mov
notb
lcall
xor
xchg
lcall
or
mov
mov
jge
xor
xor
mov
push
sub
mov
movsb
cltd
iret
lret
mov
cmp
bound
inc
mov
or
pop
xlat
lea
push
mov
cld
jp
and
daa
mov
negb
jne
mov
xchg
xchg
ja
shrl
cmp
inc
mov
test
jp
aam
daa
xlat
push
cli
mov
test
fildl
sub
cmp
mov
jne
fiadds
fnstsw
out
adc
dec
inc
mov
sbb
xchg
push
adc
arpl
sbb
mov
aas
pop
popa
inc
testb
and
adc
xchg
test
pusha
inc
sbb
je
xchg
lods
dec
jp
pop
or
scas
cmc
out
mov
jg
out
shrb
shll
push
xchg
lock
jle
sub
and
inc
mov
inc
mov
clc
leave
aam
cmc
aam
sub
cltd
sti
leave
std
cmp
jmp
pop
jecxz
jb
lds
ja
fcomip
sub
fsts
jg
xchg
in
lahf
fldln2
lahf
in
dec
scas
mov
xchg
loop
cmp
or
in
jl
imul
sbb
call
std
or
pop
cwtl
dec
xchg
out
testb
repnz
es
rorb
mov
mov
imul
mov
pop
sub
leave
bswap
enter
dec
pop
in
add
sub
int3
pop
in
js
rcl
dec
pop
mov
xchg
mov
aam
adc
or
xorl
rcll
mov
cmp
jecxz
jbe
out
rcl
push
jecxz
jmp
gs
lret
or
pop
mov
std
gs
cmpsl
popf
out
cmp
ret
repnz
out
subb
xchg
xchg
stc
sub
push
pop
in
cmp
and
mov
cmpsl
xchg
loopne
xchg
mov
inc
mov
loopne
sbb
pop
sbb
xchg
mov
ja
in
fisubl
and
mov
cmc
dec
mov
inc
xor
push
jecxz
into
jl
jae
aam
rcl
movsl
lods
sub
outsb
pop
fs
mov
or
push
sub
pop
push
les
ljmp
jp
and
jmp
pop
ja
test
hlt
mov
mov
js
inc
mov
jnp
xor
inc
jno
pop
out
cmpsb
jb
fldenv
cs
or
push
loop
pushf
out
mov
pop
sbb
imul
mov
out
imulb
jo
cmp
sbb
loopne
mov
mov
jge
inc
fwait
shlb
jo
jge
and
push
xchg
adc
jg
jbe
xchg
pop
orl
add
and
sbb
push
daa
xchg
pop
loope
jmp
daa
xor
outsb
pusha
adcb
sub
mov
adc
stos
or
pop
out
add
cmp
add
lods
loopne
aas
xchg
shlb
aaa
fiadds
imul
loopne
movsl
xchg
pop
je
fs
fisttps
ret
or
mov
test
nop
xchg
hlt
repz
cwtl
roll
sub
xor
cmpsl
std
in
sbb
or
fsubp
movsl
add
jg
loop
loopne
xchg
mov
dec
js
add
jns
or
push
xchg
pop
jecxz
jbe
dec
mov
out
sub
out
hlt
push
xor
mov
mov
imul
cmp
push
or
xchg
out
xchg
push
ljmp
cmp
arpl
mov
out
sub
shlb
add
inc
in
sahf
jg
push
test
stos
push
rclb
fsubp
pop
jecxz
jb
jp
popf
dec
fcmovbe
test
fsub
cwtl
inc
mov
enter
pop
lahf
mov
xchg
and
push
out
dec
lahf
test
add
pop
jns
hlt
sub
mov
jl
mov
jge
mov
gs
push
pop
sti
or
and
cmp
sti
jnp
xor
inc
je
pushf
push
sbbl
xchg
out
mov
adc
in
jo
mov
clc
shrl
jmp
pushf
adc
fistps
sahf
or
xor
imul
sbb
jge
fs
icebp
pop
and
push
or
dec
mov
lret
cwtl
shlb
lea
fdiv
inc
testl
jo
jmp
cmp
xor
add
jg
sahf
mov
xchg
das
mov
sbb
sahf
sbb
jno
inc
arpl
jmp
fistps
cmpb
xor
adc
or
pop
mov
sahf
push
dec
adcb
and
dec
or
mov
lret
test
mov
adc
fs
xchg
sahf
aad
sbb
push
push
insl
stos
mov
int
add
lock
mov
xor
xchg
pusha
adc
xor
movsl
xor
gs
inc
fcmovu
mov
xor
or
pop
cmp
cmpsl
das
int3
loop
jge
mov
imul
mov
mov
outsb
ds
mov
ret
test
jae
testl
repz
cltd
clc
adc
mov
xor
aam
or
pop
ror
js
xchg
lcall
or
or
das
in
mov
push
adc
xlat
repz
mov
xchg
ja
mov
inc
sbb
loop
fsubrs
arpl
cmp
icebp
jge
or
lcall
inc
out
insb
xor
movb
mov
fldcw
popa
rolb
cmpsb
mov
push
mov
push
sub
sub
outsb
ss
inc
mov
adc
addr16
mov
fwait
mulb
sbb
jmp
or
nop
mov
loop
pop
jnp
dec
sbb
push
adc
xor
je
xlat
std
mov
sub
xchg
test
fadds
sub
std
outsb
add
cvtps2pi
scas
loopne
mov
mov
out
cmp
unpckhps
cmp
pop
cld
xchg
loopne
aam
push
push
xor
std
movsb
in
repz
mov
sbb
cli
cmp
jmp
sub
push
pop
testb
loop
cmpsl
and
pushf
loope
sbb
mov
add
in
mov
jno
xchg
dec
xchg
gs
sti
add
jae
aad
xor
or
pop
in
scas
fld
outsb
sti
pop
fdivs
push
jmp
lret
jle
fs
cmp
stos
sub
loope
icebp
mov
push
mov
sub
mov
and
and
outsb
lea
sub
add
and
shr
fildll
loop
js
out
mov
lea
aam
jecxz
inc
sbb
popl
adc
inc
aam
cld
mov
bound
fisubl
dec
fimuls
cmp
mov
jle
clc
mov
jg
jle
pop
push
pop
and
ret
xor
les
mov
inc
mov
or
add
cmp
inc
push
sbb
les
push
repz
pop
out
inc
xchg
and
mov
pop
aad
pcmpgtw
cld
mov
xor
jmp
dec
imulb
outsb
add
loopne
and
pop
xor
icebp
push
loop
mov
inc
lahf
ret
adc
sub
add
fisubl
cmc
inc
inc
mov
xchg
sub
loope
cmpsl
push
or
gs
pop
adcl
xchg
dec
add
loopne
jb
loop
push
add
sub
test
jmp
xchg
pop
out
ds
jbe
sti
inc
out
pushf
jbe
lea
out
lahf
xchg
or
imul
cmc
imul
sub
adc
js
test
dec
sbb
inc
repz
es
mov
mov
je
addr16
js
cld
xor
cmpsb
dec
movb
xor
add
iret
adc
inc
xchg
repz
sbb
pop
jo
ret
loope
inc
jbe
ja
mov
sub
inc
inc
xchg
cld
dec
push
aam
mov
or
push
or
arpl
sbb
mov
iret
popf
clc
mov
jl
sub
fsubr
je
out
pop
push
fstl
mov
pop
shlb
inc
and
add
adc
push
xchg
call
stos
outsl
mov
push
loopne
sub
jno
icebp
aad
negb
nop
xchg
lock
mov
add
mov
jne
outsl
loopne
fs
xchg
mov
jg
mov
sbb
popa
push
jmp
mov
ja
imul
arpl
xchg
gs
mov
jge
cmc
mov
mov
sub
pop
inc
mov
xchg
pop
sub
ds
and
inc
sbb
mov
jge
cmc
push
pop
ss
add
shlb
cmp
sub
or
shll
mov
adc
sbbl
mov
inc
lcall
movsl
push
icebp
out
stc
das
or
mov
mov
add
test
and
or
push
xchg
jp
pop
insb
and
out
cmp
ljmp
mov
aam
ljmp
fsubrl
test
in
cli
nop
sbb
out
or
into
inc
sub
leave
dec
push
push
add
sub
add
xlat
fisttps
mov
xor
lea
mov
cltd
scas
or
iret
in
push
daa
lret
clc
insb
icebp
adc
mov
insl
inc
jmp
jp
push
imul
mov
mov
clc
inc
mov
adc
pop
cmp
cmp
inc
add
into
mov
dec
add
and
jbe
out
inc
xlat
or
out
and
add
mov
pop
mov
jnp
sub
pop
loope
fstps
adc
aas
arpl
pop
movsb
pop
fs
lcall
lret
sub
push
insl
test
push
scas
mov
movsl
xor
scas
dec
es
aam
loop
test
pop
add
addl
rcrb
in
adc
xor
out
insl
test
loopew
scas
xor
movsb
fadds
sti
fcomip
inc
mov
arpl
ljmp
lret
lock
push
outsb
fldenv
movsl
mov
shlb
jge
cld
dec
inc
sub
mov
lock
mov
inc
lcall
add
aad
fs
sub
inc
mov
dec
mov
push
insb
movsb
out
or
dec
mov
call
mov
scas
call
icebp
adc
leave
jle
push
sbb
add
and
clc
cli
pop
mov
das
pop
inc
sbb
outsb
scas
mov
xchg
push
pop
and
pusha
out
jb
push
notb
pop
cmp
lds
xor
xchg
sahf
jl
dec
push
hlt
and
pop
pop
add
popa
sub
pop
mov
lods
mov
pop
pop
stos
lcall
sahf
xchg
xor
push
data16
jl
mov
adc
mov
stc
test
fdivrl
adc
mov
and
push
jbe
iret
inc
js
dec
add
pusha
incl
sahf
and
hlt
ret
pop
or
popa
jecxz
mov
xchg
mov
iret
hlt
or
subb
cltd
push
cmp
test
add
xlat
nop
rorl
js
aaa
adc
or
mov
roll
loopne
cmp
dec
mov
add
mov
imul
ljmp
push
test
loopne
aas
ljmp
sbb
imul
lret
adc
iret
or
cmc
push
test
into
jmp
xor
push
shl
mov
xchg
inc
insl
push
jl
ja
int
bound
mov
lret
lea
repnz
inc
aad
and
push
pop
test
filds
cwtl
inc
scas
jl
dec
dec
mov
fs
cwtl
repnz
pop
dec
mov
dec
inc
scas
push
push
cwtl
dec
roll
jbe
pop
push
sti
les
pop
repnz
out
xchg
mov
hlt
out
xchg
jmp
add
pop
neg
popf
xor
lods
ja
mov
mov
aaa
xor
sub
push
out
std
insb
bswap
fisubrs
mov
sbb
lock
lea
or
call
shll
enter
and
xchg
sbb
sbb
cmpsb
mov
mov
aaa
xor
push
xchg
into
cmp
push
xchg
push
nop
cltd
lock
pop
sbb
cmp
vpsubusw
nop
insb
in
int3
xchg
hlt
stc
insb
ljmp
lods
mov
pop
mov
in
sub
lret
out
jle
pop
ret
dec
adc
in
or
dec
testl
dec
and
and
cltd
xor
pop
outsl
scas
fisttps
idivb
jp
sub
int3
movsb
sub
jnp
add
test
mov
out
fdivrl
aaa
push
das
out
mov
mov
test
lcall
mov
xor
adc
jg
jbe
push
test
rcrl
jle
cmpsl
adc
enter
xchg
or
int3
pop
fisubrs
mull
jbe
arpl
mov
imul
rcll
rolb
std
in
mov
add
pop
sbb
mov
insb
or
or
in
divb
lods
cmp
pop
xchg
adcl
xor
pop
or
sti
push
add
pusha
test
push
ljmp
rcll
pop
aam
xchg
pop
lock
aaa
jle
pop
and
repz
out
jg
xchg
mov
pushf
dec
jmp
xor
sarb
mov
sub
lock
push
xlat
jge
icebp
dec
cmp
lock
stos
push
sbb
icebp
pop
fnstenv
iret
cmp
sub
imulb
popf
add
ljmp
paddb
loopne
imull
pop
lahf
shrl
clc
lahf
pop
out
jmp
sarb
mov
aad
out
imul
sub
pop
adc
add
inc
shr
dec
test
cltd
add
stc
push
push
jle
fwait
xchg
nop
std
out
out
out
fwait
ss
xchg
lcall
dec
inc
add
xor
push
mov
fucomp
jmp
arpl
mov
popf
call
call
jmp
popf
xchg
jno
xchg
cmp
aas
stos
cmp
pop
and
jecxz
loope
pop
pop
add
lahf
aam
aam
fimull
adc
inc
out
push
lock
subl
push
mov
dec
or
cmp
adc
push
out
jb
pop
mov
jnp
cmp
loope
adc
es
fsubr
scas
nop
out
shrb
cmp
gs
cmpsl
xchg
xchg
sbbb
subl
jg
add
sbb
imul
rclb
lcall
es
or
mov
adc
icebp
xchg
sub
adc
and
mov
je
mov
je
aaa
or
bound
mov
cmp
adc
cmpl
mov
fcompl
add
or
cmpsl
popf
in
sub
ret
movsb
sub
sbb
sbb
adc
out
fstpt
fsts
xchg
jb
ja
ret
adc
sbb
mov
jbe
add
add
cwtl
ret
inc
inc
mov
lods
xor
ja
mov
add
cwtl
mov
decb
pop
jl
frstor
mov
loop
add
jno
cmp
and
jmp
xchg
loopne
add
cmp
movsb
jno
div
jne
or
movsl
test
adc
xor
push
loopne
xlat
fists
aam
and
bound
fwait
mov
iret
sub
add
mov
xchg
jno
lods
das
sub
pop
fisttpl
pusha
sbb
cwtl
test
enter
gs
pushw
and
mov
jne
or
fwait
movsb
push
lock
sub
mov
in
loop
sub
stos
negl
add
js
subl
jecxz
dec
mov
cmpsl
in
lcall
sbb
div
add
xchg
add
sub
jle
pushf
inc
decl
orl
or
push
cmp
int3
xchg
int
ret
xor
les
mov
lds
and
jns
mov
mov
mov
data16
mov
adc
adc
mov
inc
cmp
cmpsb
imul
dec
xchg
push
rcl
ja
insb
jp
lds
xchg
outsb
and
lds
lds
mov
mov
mov
and
jns
push
xchg
test
out
sbb
scas
jmp
jnp
adc
adc
cmp
mov
dec
or
stc
lcall
mov
jecxz
push
mov
dec
or
cmp
pop
sub
inc
sti
test
jo
movsb
pop
inc
fmul
jg
inc
sbb
push
in
and
lea
inc
jl
hlt
pushf
jmp
pop
or
ds
addr16
outsb
or
and
insb
popf
xor
jb
dec
stos
pusha
mov
sbb
jmp
std
dec
outsb
aam
test
nop
je
jle
sub
push
jp
lahf
aaa
add
adcl
std
adc
pop
faddl
fidivrl
out
int3
outsl
dec
add
aas
test
outsl
std
orb
rorl
fldt
orl
or
inc
ds
int
test
pushf
in
lret
xchg
mov
in
ret
dec
inc
nop
ret
imul
mov
loope
ds
mov
stos
fiaddl
jbe
push
jno
outsl
push
xlat
jle
add
jle
aaa
out
fists
mov
rcr
aad
cwtl
orl
je
adc
mov
sub
or
movups
lahf
mov
lock
push
lods
enter
mov
sbb
add
in
add
lret
dec
mov
dec
pusha
sub
out
gs
pop
aam
cwtl
and
and
fadds
inc
push
add
mov
mov
xlat
loopne
in
ja
lock
mov
adc
lcall
incb
push
mov
sub
cwtl
and
lea
mov
jae
xchg
add
vminsd
sub
outsl
cmp
pushf
mov
xorb
fildll
call
inc
repnz
add
out
jecxz
sub
xor
push
fldcw
and
iret
xor
scas
push
loop
fiaddl
mov
adc
push
pop
sbb
insb
in
pop
in
fsubrl
aam
cwtl
repnz
or
pushf
inc
cmp
add
loopne
arpl
movsl
insl
sti
loop
mov
push
adc
jl
test
mov
jecxz
sub
aam
jmp
out
jo
aas
out
xchg
pop
push
incb
pusha
movsb
sub
test
lea
mov
mov
inc
cmp
jmp
xor
fnstenv
int
pop
lock
mov
xor
jne
dec
neg
pop
mov
xchg
clc
add
jae
cmp
cld
jecxz
xor
cld
dec
add
test
cmp
imul
test
sub
inc
mov
pop
out
imul
cltd
mov
sub
imul
pop
xchg
mov
sbb
dec
scas
outsl
cs
mov
lock
sbb
lret
or
xor
jp
les
dec
or
jb
push
in
and
movsb
rcll
mov
jecxz
push
out
push
sbb
je
in
add
ret
out
test
mov
adc
sub
and
es
and
adc
shll
add
stos
cmpsb
sbb
mov
dec
push
arpl
nop
cmp
scas
outsl
int3
xor
mov
mov
ja
dec
xchg
je
add
in
add
flds
jo
jae
adc
sbb
mov
jae
inc
inc
xchg
cmp
mov
adc
test
enter
or
sbb
daa
add
mov
sub
shl
push
xor
enter
push
ret
mov
out
jo
data16
ds
lds
mov
lcall
cwtl
ret
jo
and
gs
or
popf
mov
xchg
stc
mov
mov
or
inc
jmp
pop
mov
aaa
adc
fistps
fxch
and
lcall
aam
das
add
testl
popf
mov
in
shll
mov
xorl
repz
aas
out
jb
inc
jo
imul
or
in
xchg
xchg
dec
cmp
fcmovnbe
pop
push
mov
pushf
movsb
in
mov
pop
leave
cld
pop
push
pop
cmp
ret
stos
or
fs
add
and
aad
xchg
dec
pop
or
jmp
int
or
lahf
repz
xor
cld
lret
testb
jle
testl
push
mov
jo
pop
fcmovb
ret
adc
dec
push
mov
mov
shll
dec
dec
hlt
sub
fsubrs
div
pop
into
ret
or
xchg
dec
and
loopne
popf
adc
ss
jbe
test
arpl
jns
cli
mov
std
mov
sar
and
adc
das
xor
sbb
mov
push
push
mov
jl
inc
mov
shl
xor
cmp
es
cwtl
test
iret
xchg
xchg
aad
and
cwtl
or
xor
push
into
rorb
push
pop
fstp
lods
fists
inc
pushf
lods
dec
or
cltd
mull
sbb
sbb
push
rclb
incb
xorl
int
arpl
in
sbb
mov
cmp
add
cmp
cvtps2pi
mov
cld
adc
scas
mov
fcompl
movsl
iret
outsb
mov
int
cmovge
pop
repz
mov
lret
jnp
push
aas
icebp
shrb
sbb
mov
sbb
push
dec
xchg
addr16
xchg
icebp
frstor
mov
pusha
jo
cli
fisttpl
pop
sti
xor
dec
or
ljmp
pop
push
hlt
rcl
movsl
jo
push
mov
and
daa
in
lds
add
or
add
and
pop
icebp
adc
mov
dec
inc
mov
and
adc
jmp
clc
in
das
and
jne
mov
jns
das
sub
sub
jmp
lret
dec
fwait
and
call
lock
push
ret
mov
into
lock
sub
or
xor
out
test
jmp
lds
aas
jp
push
mov
or
xchg
in
or
inc
push
and
mov
rclb
stos
xchg
icebp
test
repnz
mov
sbb
movsl
fidivrl
mov
aaa
ja
out
mov
insl
cwtl
push
add
lock
xchg
gs
xchg
xor
daa
jg
xor
inc
mov
lock
movsb
xor
outsb
push
jge
fcoms
or
pop
jle
orb
cmp
dec
cmp
arpl
lcall
xor
popa
push
into
stos
adcl
outsl
xchg
push
sarb
pop
dec
pop
mov
push
cmp
cmp
xchg
stos
mov
or
and
mov
in
xchg
adc
mov
repnz
pop
inc
mov
out
aaa
xchg
or
leave
push
std
xchg
orl
mov
xchg
mov
adc
stc
ret
into
push
test
add
out
cmp
test
mov
movsl
cmpsl
inc
popf
push
inc
xor
xor
ret
xor
mov
filds
fwait
mov
sub
dec
lcall
adc
mov
jmp
dec
push
popf
clc
push
mov
mov
sbb
xchg
dec
push
shlb
push
ja
cmc
repz
sbb
push
es
jae
loopne
jno
mov
xor
pusha
mov
push
jp
inc
xor
pop
add
add
or
leave
jecxz
jbe
and
cltd
pop
je
stos
aam
add
out
pop
sbb
lea
xchg
sub
push
rclb
pop
cwtl
movaps
jns
push
and
add
addr16
push
xchg
dec
scas
addl
ja
jne
fwait
dec
sbb
mov
outsl
bound
fidivrl
roll
pop
ret
push
pop
mov
pop
call
cmpsl
aas
outsl
mov
out
fwait
js
pop
pop
add
fstps
inc
addr16
jns
add
push
js
xor
and
outsb
jo
arpl
lods
lods
mov
loope
xchg
nop
in
andl
sub
mov
es
lock
stos
mov
fisttps
push
sbb
add
dec
jns
das
push
cmp
out
lock
mov
jbe
or
mov
test
out
jae
pop
stc
lahf
or
int
xchg
stos
xchg
mov
or
into
es
jge
adc
jmp
test
pop
pop
or
pop
stos
add
imul
or
lea
cli
sub
ret
add
pop
mov
pop
sbb
stos
int
push
and
mov
mov
or
jmp
push
jecxz
mov
cmp
xor
add
cmova
in
repz
push
mov
lock
test
and
popf
cmp
test
pop
xor
adc
add
mov
fcmove
jns
lahf
outsb
sti
leave
inc
lds
je
mov
das
lahf
sub
ja
stos
xor
mov
mov
rclb
or
in
mov
inc
stos
in
push
mov
jne
jl
push
push
aam
fisubrl
out
sbb
cmp
mov
pop
inc
addl
ja
sub
bound
or
inc
pop
jle
jp
push
dec
and
jp
repz
gs
sti
cmp
adc
shlb
subl
or
mov
jmp
push
int
adc
sub
cwtl
out
inc
shl
and
sti
fistl
dec
pop
loop
decb
cmp
or
cmp
cmp
add
sub
repnz
cmp
loopne
mov
test
mov
daa
push
into
ret
fisubrl
ss
mov
sub
push
dec
xchg
scas
mov
addr16
or
adc
xorb
shrb
movsb
lret
loop
mov
and
jnp
pusha
xchg
lods
add
fcomps
inc
push
fsubs
pop
dec
jl,pt
out
test
cltd
fmul
lahf
pop
arpl
imul
neg
out
movsb
or
pop
jl
or
test
xlat
fistpl
pop
mov
cmc
inc
pop
lret
sbb
push
mov
pop
mov
jl
mov
icebp
arpl
xchg
es
fsubrl
aad
addr16
inc
es
jb
imulb
loopne
movb
sbb
test
cltd
xor
mov
in
pop
mov
adc
filds
jecxz
adc
ljmp
and
test
xchg
arpl
les
div
xchg
xor
sub
lret
dec
push
xchg
mov
dec
add
cmc
mov
mov
jg
add
shl
lahf
mov
xor
cmpsb
stos
pop
sub
in
push
cmc
sub
dec
add
xchg
and
push
fs
xchg
pop
sahf
les
xor
or
mov
imul
inc
stc
stos
xor
push
push
addr16
or
movsl
add
aad
nop
aaa
sub
mov
js
sbb
jo
and
push
add
mov
xchg
cld
mov
clc
mov
jb
aam
push
mov
xor
mov
in
lret
sbb
loopne
in
clc
out
mov
push
push
adc
adc
jle
jmp
scas
cmp
xchg
hlt
mov
shr
mov
and
mov
or
push
lock
sbb
push
int3
sti
mov
cmp
sbb
in
mov
push
sub
out
pop
pusha
sub
pop
es
inc
out
rcll
add
popa
jge
loopne
dec
push
sub
push
ds
or
mov
xrelease
push
gs
cmp
jb
ret
test
pop
inc
dec
fcomip
aaa
sbb
jl
lret
jecxz
das
fistpl
inc
sub
aam
in
jecxz
mov
cmc
inc
sahf
arpl
cmpl
xlat
lods
scas
sbb
sahf
js
fiadds
les
xchg
xchg
daa
jecxz
sbb
adc
dec
and
and
cli
xor
sub
dec
or
or
xchg
bswap
push
xor
punpcklwd
pop
jmp
movsb
movsl
stos
mov
repz
filds
lcall
mov
jbe
fmuls
jmp
mov
dec
inc
sub
int
popf
jne
in
cmc
mov
imulb
xchg
xchg
rorb
sub
dec
inc
or
xchg
and
or
in
movsl
iret
adc
pop
jbe
pop
gs
cmpl
xlat
pop
and
iret
cs
push
lock
and
xchg
adc
jge
add
into
add
pushf
mov
push
in
aaa
testb
or
mov
pop
test
movsb
loop
ss
popa
dec
hlt
out
mov
cwtl
push
dec
mov
dec
lret
in
lods
lds
mov
push
stos
int
inc
and
arpl
mov
out
aas
repz
jbe
push
bound
iret
out
xor
mov
mov
sahf
test
push
and
sub
testl
lods
xchg
jae
dec
or
mov
setnp
dec
outsl
cmovge
sbb
popa
lods
lret
fwait
mov
push
movsl
ja
loopne
cmp
bound
cld
test
mov
adc
pop
lea
xor
inc
out
mov
push
repnz
inc
nop
inc
pop
sahf
aad
push
pop
mull
xchg
call
cmpsl
or
loope
loopne
adc
ja
ret
aad
jg
stc
push
jne
add
jp
into
push
lret
xchg
inc
sti
xor
flds
push
push
pop
mov
hlt
mov
dec
jmp
adc
xlat
ljmp
xchg
ret
jecxz
in
jo
mov
cs
jg
movsl
mov
xor
push
mov
shl
hlt
pop
cmp
push
mov
out
jbe
imul
lret
dec
jb
test
aas
ret
jae
cmp
jnp
int3
andl
in
mov
cmp
stos
add
stc
fucomp
mov
push
or
insb
mov
fistps
adc
or
sub
pop
gs
inc
cmp
pop
push
enter
mov
dec
push
inc
ljmp
mov
push
jb
cmp
mov
in
push
movsb
cs
data16
sbb
pop
test
add
pop
adc
xor
insb
aaa
xlat
jecxz
adc
mov
push
xor
or
xchg
in
jo
push
aam
retw
pushf
mov
cltd
cmp
xchg
loope
sbb
cmp
add
fcmovnbe
fbld
inc
arpl
repnz
xchg
add
xor
js
sti
test
inc
dec
sbb
push
add
clc
movsl
add
mov
fildll
pop
cmp
add
cmp
fst
js
mov
jmp
xor
inc
add
sahf
sub
rcrl
sub
push
test
inc
jbe
inc
xchg
jge
and
fs
insl
dec
adc
fwait
rcr
insl
inc
mov
je
mov
cmpb
out
jl
jmp
xchg
mov
mov
adc
add
sbb
stos
sub
xchg
imul
push
popf
adc
mov
mov
inc
cltd
ret
setle
pop
inc
adc
or
xor
cmpb
adc
enter
add
cmc
jbe
jmp
dec
das
jne
andl
or
incl
jae
clc
sub
cmp
and
jecxz
fidivl
push
lret
pushf
repnz
dec
pop
jb
inc
jnp
ss
xor
push
cmp
add
cmp
adc
test
cmp
cs
mov
std
das
or
mov
rorl
mov
push
dec
outsl
push
push
rcl
and
clc
pop
mov
repz
or
int
cmpl
dec
xchg
xchg
clc
fisubrl
test
ja
mov
roll
adc
imul
mov
cmp
lahf
hlt
lcall
outsl
xor
sbb
lds
cmpsl
inc
pop
cli
outsb
dec
das
fnstcw
es
mov
cmp
sbb
fs
push
test
push
cs
scas
iret
sti
arpl
jne
jnp
sbb
pop
sbb
push
stc
cltd
dec
out
imul
fstl
mov
sbb
lahf
shl
clc
push
mov
in
xchg
inc
sbb
push
cmp
mov
xchg
out
push
jne
je
loop
adc
dec
mov
lahf
mov
lock
xor
and
add
push
sub
mov
mov
jns
cwtl
adc
icebp
mov
push
mov
ds
and
dec
in
sub
xor
or
cmp
mov
jne
aas
loopne
mov
leave
lahf
ficoml
or
sub
fs
out
js
scas
or
push
ljmp
pop
out
sub
nop
cwtl
pop
sarb
ds
ja
dec
movsl
clc
lret
imul
cmp
shlb
sbb
mov
pop
shrl
push
cmpsb
mov
enter
push
imul
mov
pop
into
xchg
or
fildl
bound
jno
xchg
aad
add
leave
out
inc
movsb
int3
clc
mov
adc
mov
inc
xchg
mov
adc
clc
fmul
popf
out
mov
sub
clc
out
lret
xor
xor
stos
cmp
push
test
loope
or
push
xchg
inc
mov
push
cmp
jbe
or
leave
daa
imul
mov
push
inc
test
xor
pop
cmp
leave
hlt
mov
adc
push
xchg
lcall
stos
dec
scas
cmp
fs
sbb
out
mov
rorl
sub
sub
ljmp
pusha
int3
mov
ret
or
testb
addr16
xor
jno
cmpsl
push
sbb
pop
dec
stc
testb
lock
shll
jb
inc
dec
decb
shrb
fsubl
and
movsl
scas
imul
or
sbb
dec
sub
mov
jb
aad
not
je
sbb
dec
popf
aam
test
loope
mov
fisttpl
jecxz
mov
sub
ret
cmpsl
mov
not
test
dec
cmp
lea
cmp
cli
repz
mov
sarb
inc
scas
jne
cld
clc
mov
mov
rcrl
pusha
aas
or
mov
push
mov
mov
jne
lods
leave
inc
xchg
int
cwtl
mov
fimuls
or
push
ret
and
mov
and
fisubrs
sub
mov
shr
fldcw
adc
test
mov
mov
roll
fnstcw
mov
inc
pushf
aad
decl
mov
sub
inc
in
rcrl
dec
push
test
pop
leave
insb
sub
and
push
xorl
lods
push
sub
jns
push
mov
jb
stos
add
repnz
dec
test
pop
push
xor
push
test
pushw
sbb
mov
or
stos
jge
adcb
mov
loopne
je
aaa
rcr
test
cli
xchg
in
clc
shll
cmpsb
nop
stos
movb
popl
mov
sbb
fmull
out
push
clc
nop
xor
and
in
mov
push
xor
cmpsb
ret
push
mov
jg
ret
adc
mov
sbb
mov
pusha
ja
jnp
pushf
sub
and
sub
out
inc
and
xchg
inc
lahf
int3
mov
arpl
rorb
loop
inc
adc
mov
gs
mov
ret
bound
inc
jbe
test
jmp
enter
int3
jp
filds
fcmove
mov
mov
pop
mov
ja
popf
jae
call
fnstcw
push
push
shll
push
inc
andb
js
out
push
jl
push
xor
cwtl
fcoml
lret
iret
xchg
pop
mov
xchg
sbb
shrl
lret
jo
jp
mov
repz
repnz
xor
loop
sti
in
xchg
inc
stc
mov
aas
add
add
out
je
pusha
inc
imul
imul
adc
js
ds
dec
addb
or
mov
xchg
aad
into
inc
inc
xorb
mulb
je
loop
and
nop
pop
rolb
jne
scas
cld
inc
push
ss
inc
fisttpl
cmp
stos
inc
sbb
xor
dec
xchg
mov
clc
jbe
test
cltd
xor
mov
adc
jae
fwait
inc
insb
jge
cmc
aas
sub
mov
pop
fmuls
movsl
mov
orb
rclb
iret
leave
loop
jge
imul
mov
xor
lods
jns
aas
fucomi
mov
rcrl
out
cmp
rcrb
fcmovne
in
push
insb
xchg
loopne
ss
inc
scas
cli
xchg
ds
icebp
aaa
cmc
in
lahf
cli
test
fwait
xchg
add
mov
dec
lds
inc
aas
mov
xor
shll
arpl
add
aad
cwtl
jae
sub
xchg
lret
adc
sub
xchg
add
imull
mov
scas
inc
js
scas
push
adc
pop
popf
xchg
repnz
xchg
ret
xor
out
das
mov
adc
ret
xor
sbb
xchg
shlb
iret
jmp
pop
mov
orl
aad
cld
repnz
mov
lcall
repz
outsl
orb
cmp
cmp
xor
pop
adc
enter
xchg
movsl
jecxz
adc
je
in
inc
pop
sbb
pop
push
lcall
push
in
es
push
push
shll
lds
vucomisd
jns
mov
fcomps
rorb
push
scas
push
movsl
cmp
xchg
addl
in
xor
cmp
cmp
cmp
adc
cld
out
and
mov
les
pop
mov
add
dec
mov
inc
dec
inc
or
test
in
add
and
js
mov
and
lret
std
mov
jl
adc
in
add
sub
fsubr
mov
fs
popa
lods
aas
popa
sub
rcl
pop
sti
cmp
stos
or
popf
fwait
inc
or
adcb
arpl
push
nop
jecxz
mov
bswap
mov
mov
lea
arpl
pop
fadd
adc
out
and
jne
cmp
ret
mov
xchg
xor
inc
inc
mov
jno
ficoms
adc
xor
pusha
ret
scas
inc
jbe
mov
loopne
cmpsb
sbb
jecxz
jmp
jo
dec
pop
out
pushf
mov
mov
jmp
fs
inc
gs
xchg
or
mov
and
adc
inc
sub
ds
test
jg
das
test
mov
xchg
lds
leave
dec
mov
data16
mov
or
cmpsl
add
pop
add
addps
mov
and
rcll
pop
pop
pop
mov
dec
aaa
movsb
sbb
mov
int
sub
mov
das
imul
jg
ret
daa
pop
dec
repnz
imull
ja
clc
inc
rolb
js
ja
clc
add
icebp
fidivrs
je
aam
insl
cvtps2pi
cli
addr16
fsubrl
inc
or
stc
cltd
aas
dec
or
mov
xor
sarb
and
outsb
addl
push
sbbl
and
movsb
call
call
cld
mov
pop
loopne
jbe
xor
xor
mov
js
add
mov
popa
mov
or
push
addb
mul
mov
jns
cld
jns
cmc
jge
call
sub
push
push
aas
xchg
insb
cwtl
popf
push
jge
adc
push
push
jbe
push
pop
inc
ljmp
pop
sub
fsubs
jno
ss
leave
stos
pop
sti
push
xorl
frstor
jle
sub
inc
movsl
idiv
pop
aaa
cmp
icebp
adc
adc
mov
mov
sbb
push
and
inc
mov
dec
stc
js
jbe
and
xchg
data16
test
add
adc
bound
inc
mov
stos
adc
xorb
push
ds
lret
jl
fidivrl
loope
dec
shrb
inc
ja
daa
repnz
xchg
adc
lahf
mov
cli
mov
or
mov
mov
adc
push
add
outsb
adc
out
push
jp
adc
jp
xlat
xor
sub
inc
lock
pop
je
or
scas
sti
in
mov
sbb
aaa
fists
inc
mov
popa
in
xor
adc
adc
dec
xchg
inc
jmp
std
aaa
or
mov
es
pop
stos
mov
or
mov
jnp
add
pop
jp
mov
scas
rcll
xor
fwait
rcll
pop
xchg
mov
loopne
pop
sub
inc
pushf
clc
cld
push
dec
mov
andl
push
lret
xchg
cld
xlat
adc
dec
das
jns
jmp
jb
in
ret
int
xor
test
call
mov
test
nop
inc
pop
mov
xor
cmp
and
ja
popl
int3
inc
popa
add
std
stos
aam
pop
test
in
les
std
mov
mov
out
scas
xor
fcoms
adc
pop
mov
imul
cmp
cld
adc
push
into
push
popf
mov
sbb
xchg
ret
pop
xor
mov
frstor
and
icebp
ljmp
in
push
and
test
push
in
pop
jl
movsl
jg
or
popa
xchg
bound
call
idivl
and
repz
dec
cmpsb
sub
out
jp
out
jbe
lahf
popf
xchg
in
mov
test
pop
add
out
mov
lds
adc
mov
adc
xor
add
add
mov
les
mov
cmpsl
mov
mov
mov
and
mov
mov
pop
jne
jle
add
xor
mov
sbb
test
aam
repz
shr
inc
jbe
mov
or
stos
cmp
mov
sub
cmpb
sbb
or
leave
jecxz
inc
mull
sti
jecxz
pop
int
rcll
inc
imul
test
into
and
mov
xor
jns
pop
sbb
test
xchg
mov
push
inc
outsb
into
outsb
iret
or
adc
loopne
push
adc
cmp
add
sbb
aaa
repnz
pop
mov
xor
push
mov
jno
cmp
push
push
xchg
sub
push
xchg
adc
stc
cmpl
jge
lret
xor
cmp
cmp
or
imul
fwait
sub
sub
cmp
ret
ret
push
js
mov
rorb
daa
mov
fnstsw
inc
cmp
and
test
inc
sbb
xlat
clc
dec
clc
push
inc
jle
add
jnp
push
and
test
pusha
inc
jo
les
test
data16
clc
cmp
inc
mov
subl
xor
and
idiv
xor
add
out
pusha
mov
pusha
mov
pop
jecxz
pop
testb
adc
sti
stc
test
xor
inc
dec
dec
bound
out
and
js
mov
mov
mov
cs
or
pop
sub
int3
lret
and
add
es
mov
pop
nop
loopne
mov
insl
out
fildl
mov
sub
ret
add
sahf
test
fisttpll
loope
xchg
jg
pop
push
cmp
push
push
sub
xchg
xchg
xor
fisubrs
loope
push
mov
xlat
ljmp
movsl
push
je
sub
dec
in
insl
mov
test
jl
push
mov
cmp
mov
mov
adc
mov
adc
pop
or
and
mov
gs
jo
hlt
inc
xor
cli
inc
push
pop
adc
jg
cltd
jo
add
mov
mov
arpl
fwait
loopne
sbb
ficoml
int
mov
push
inc
inc
or
call
add
dec
adc
ja
jb
adc
cwtl
out
push
cli
subl
cli
xchg
loope
in
leave
pop
cld
mov
jp
sbb
jnp
movsb
test
std
push
add
sub
cs
and
mov
and
mov
push
inc
dec
inc
pop
add
sub
imul
pop
or
jecxz
and
daa
adc
cmpsl
or
sub
lds
jno
fcmovb
inc
ret
sub
popl
into
pushf
sti
repnz
mov
inc
mov
sub
cmp
rcrl
fsubp
xchg
es
jo
push
stc
in
add
in
sub
inc
js
hlt
outsl
jp
sbb
xchg
dec
movsb
rolb
pop
leave
mov
aas
negb
adc
out
add
cwtl
push
inc
and
mov
sub
cwtl
and
shlb
shr
mov
dec
mov
test
dec
in
xor
and
adc
mov
pusha
mov
fisubl
sarl
push
mov
jbe
fwait
pop
fdivrl
insb
sbb
cli
push
pop
leave
xlat
pop
inc
xchg
jns
pop
add
add
mov
mov
pop
jno
jle
jo
dec
lea
push
jmp
sub
xchg
cmc
xor
stos
cmp
sub
sbb
mov
loope
and
lahf
cmp
mov
mov
jge
push
mov
sbb
out
fstpt
lret
das
mov
pushf
inc
inc
das
dec
cmc
cltd
xchg
mov
dec
cmp
adc
or
mov
sbbb
xchg
pop
lods
neg
adc
inc
sub
popf
push
and
xor
or
mov
jbe
push
cmpl
xor
mov
xchg
xor
jo
cld
adcb
push
sti
push
out
mov
sbb
cmpsb
imul
cmp
mov
mov
in
add
pop
test
inc
lods
lahf
sbb
cmp
popa
sbb
and
adc
shll
xchg
fsub
add
es
mov
popf
gs
mov
push
sbb
inc
hlt
dec
or
cmc
jg
aam
test
jg
rcrl
cmp
dec
sub
pop
pushf
cmpsb
repnz
pop
pop
std
fwait
push
cmp
xchg
mov
stc
test
rcll
lods
pop
xor
mov
pop
das
flds
scas
rcll
or
movsb
notl
addl
push
fbstp
dec
lods
sbb
lea
rorl
push
jae
sbb
mov
jecxz
nop
mov
xchg
mov
sbb
iret
sbb
addr16
jae
push
test
jnp
ljmp
call
pop
test
lods
fs
mov
pop
push
rcrl
cmp
fisttpl
cmp
mov
jae
sbb
mov
movsl
fs
dec
and
cwtl
sub
xor
jno
sbb
jmp
mov
pop
scas
cmp
jae
push
shll
dec
mov
lret
imull
mov
push
mov
xor
test
inc
and
xchg
jae
jbe
inc
nop
lret
mov
idivl
mov
in
fdiv
dec
mov
sub
jno
mov
sub
push
cmp
pop
dec
add
inc
dec
loop
movsb
test
adc
xor
icebp
nop
mov
fcmovu
mov
xor
dec
stos
xchg
cltd
pop
mov
outsl
arpl
int3
sub
mov
dec
xchg
nop
iret
jle
cltd
inc
insb
fdivrl
in
mov
mov
mov
fnsave
add
lea
pop
sub
cmc
pop
lret
icebp
cmp
addr16
aam
jne
js
jb
js
mov
add
pop
dec
iret
or
and
pop
mov
mov
or
add
pushf
xchg
or
mov
cmp
fcomps
and
mov
repz
lds
or
ljmp
pop
lcall
jmp
in
jmp
and
and
mov
ret
cmp
ds
insb
lods
scas
mov
jge
roll
mov
add
pop
jecxz
push
je
ss
sahf
loop
test
cmp
mov
mov
movsl
sub
sarb
pop
jge
add
cmp
ret
stc
call
fisttpl
mov
jle
inc
sub
shrb
roll
dec
sahf
pop
push
lcall
xlat
add
dec
shl
jne
cmpsl
xor
push
add
mov
push
test
test
mov
fstps
cmp
jns
push
mov
jl
dec
fimull
andl
cmpsl
dec
mov
pop
loop
jo
cld
push
je
lods
std
in
dec
sbb
cmp
mov
movsb
daa
lock
adc
inc
cmp
mov
pop
xor
iret
sti
xor
je
xchg
add
call
add
scas
and
arpl
shr
sahf
adc
movsb
fistps
push
pop
fs
pop
or
add
adc
add
cmp
mov
out
and
mov
stos
lret
sub
mov
cmp
push
into
add
dec
imull
into
inc
adc
aaa
mov
or
lret
lock
or
aas
pop
pop
ds
xchg
add
pop
jns
imull
adc
xor
push
ljmp
and
mov
push
add
flds
aam
add
movsl
imul
dec
pop
adc
mov
scas
in
les
aam
jno
insb
hlt
cmove
out
stos
push
aaa
xchg
das
xchg
in
xchg
inc
pop
out
sub
outsl
dec
mov
dec
adc
loope
jl
sbb
mov
imul
mov
ljmp
dec
xor
out
cmp
sbb
scas
addr16
aaa
fxch
out
hlt
inc
jg
inc
sbbl
pop
mov
lret
iret
popf
or
test
push
mov
lods
jno
cmc
xchg
leave
pop
shll
sub
mov
adc
cmp
xor
mov
sub
jb
les
push
mov
icebp
lods
lcall
add
xchg
inc
mov
jmp
and
push
jno
push
push
das
scas
cmp
or
sbb
push
cmp
loope
pop
push
jbe
add
xchg
repz
mov
loop
cmp
and
push
callw
insl
mov
push
orb
or
cmp
cs
sbb
sbb
test
sub
mov
loopne
mov
jmp
cmp
jg
loop
mov
add
lret
add
pop
jecxz
jae
adc
jmp
mov
test
jg
fsts
lcall
sahf
mov
xchg
or
cmp
stos
xchg
push
das
ds
pop
aas
fidivl
movsl
jle
daa
out
rclb
aas
dec
inc
div
movb
xor
add
ret
sbb
jbe
add
cmp
lcall
ret
sahf
and
loope
and
mov
mov
push
pop
mov
dec
out
xchg
imull
aaa
pushl
mulb
out
es
xchg
or
movsb
shlb
jg
sbb
jb
nop
aas
in
pop
popa
outsl
pop
addl
outsl
stos
and
lods
fwait
test
stos
lea
mov
stos
inc
lds
xchg
jns
push
iret
ret
inc
and
lock
inc
in
mov
shlb
sub
pop
addr16
cmp
dec
dec
cmc
push
movsb
inc
mov
dec
sub
ss
xor
js
lcall
dec
cmp
cmpsl
mov
jg
jns
adc
push
jns
jns
shrb
pop
cwtl
pushf
data16
stos
mov
inc
add
insb
cli
mov
inc
rcrb
ljmp
sub
or
ror
push
call
addl
or
cmpsl
cmp
dec
stos
xor
es
filds
mov
xchg
pop
repz
push
mov
ss
pop
mov
std
cwtl
nop
adc
gs
push
jnp
jb
xchg
cmp
jecxz
cwtl
je
orb
sub
xlat
stc
js
and
dec
pop
adc
jbe
pushf
add
jns
dec
lods
in
mov
dec
and
bnd
dec
mov
repz
nop
stc
arpl
or
pop
fwait
lret
popa
cmpsl
insl
xchg
mov
pop
adc
cmpsl
add
stc
stc
inc
mov
xchg
loop
jo
sub
jg
cmpsl
in
dec
inc
sahf
in
adc
repnz
push
xor
enter
sub
mov
cmpb
or
or
and
outsl
cmp
mov
sub
xor
and
sub
jns
mov
push
push
std
jb
mov
stos
das
andl
pcmpeqd
xlat
jle
add
scas
arpl
mov
clc
push
cmp
cmpsb
adc
push
scas
mov
jns
fcmovnb
jecxz
bnd
test
sbb
iret
adc
pop
mov
sbb
call
pop
pop
sbb
jo
in
mov
outsl
int
enter
popf
sbb
dec
or
dec
cmpsb
aas
out
scas
dec
fdivrl
lcall
mov
aaa
pop
mov
push
adc
xchg
cmp
aas
cmp
mov
cmp
testb
push
lcall
cmc
push
push
add
xchg
inc
mov
pop
xor
pop
cmc
ret
daa
stos
pushf
pusha
mov
movsl
popf
std
aad
fsubr
ja
popa
xchg
mov
cltd
mov
xchg
fwait
nop
test
jne
xchg
dec
negl
aas
cmp
jg
pop
sub
mov
bound
aad
cmpsb
out
sahf
push
cmp
xor
mov
mov
cmp
inc
mov
shll
adc
pop
ret
dec
cmpsb
out
aaa
stos
shll
mov
xchg
ficoms
scas
popa
subb
rorb
je
or
sti
pop
test
mov
jg
sahf
lock
cmp
shl
mov
or
test
pop
pop
cmpb
fwait
mov
fldenv
repz
xchg
imul
loope
mov
sbb
pop
mov
mov
sbb
movsl
sub
es
inc
ljmp
pop
call
ds
mov
mov
jp
mov
test
movsl
pop
pop
jge
ljmp
pusha
je
mov
aam
in
test
ja
mov
or
add
push
mov
out
sbb
cmpsl
sbbb
pop
lock
out
inc
fisttpl
sbb
cmp
ficoms
in
shrl
test
fs
out
popa
dec
in
int3
sbb
mov
jns
push
dec
and
sub
jnp
data16
into
fisubs
mov
ds
pop
stos
add
nop
push
push
mov
adc
adc
xor
mov
cmp
or
clc
mov
nop
fs
mulb
xchg
inc
pop
xchg
in
or
popa
psubusb
jmp
shlb
pop
rolb
sub
sahf
mov
mov
adc
ret
jmp
fsubrs
add
sub
mov
fldenv
lds
pop
jle
mov
pusha
adcb
std
test
sbb
pop
push
ljmp
fst
ss
dec
inc
or
dec
mov
mov
aad
adc
and
and
les
inc
adc
mov
outsb
fcomp
mov
dec
mov
into
xchg
dec
push
sbb
dec
cwtl
nop
fisubl
and
lcall
insb
out
add
int3
cmp
das
or
hlt
sbb
clc
aas
mov
fadds
insl
xchg
pop
fcoml
lret
xor
je
lods
mov
or
mov
add
jns
pop
sub
leave
es
insl
cltd
in
mov
jns
sub
das
mov
sub
repz
dec
and
cmp
mov
add
inc
arpl
outsb
xchg
lret
pop
fwait
insl
rclb
mov
mov
das
cli
repz
mov
mov
mov
or
es
imul
add
shll
adc
ljmp
push
and
xor
pop
int
add
ret
jno
into
aas
enter
cmp
aam
call
scas
and
std
xor
out
lea
loop
xchg
push
add
dec
inc
adc
test
call
sti
dec
cmpsb
sub
jl
or
roll
arpl
loop
ret
sub
cmp
sbb
fwait
cltd
arpl
ret
movsb
lea
sti
gs
in
xchg
and
pusha
xchg
stos
fistl
lods
loopne
add
mov
stc
sub
add
mov
pop
inc
andl
push
mov
xor
dec
or
or
mov
pop
jo
dec
andl
xchg
fcmovb
lods
loop
sub
sbb
icebp
hlt
fisttps
sub
jmp
mov
adc
fwait
cmpsb
enter
xchg
mov
in
sti
shrl
ja
jnp
out
mov
bound
in
xchg
or
xorb
sub
sub
jne
mov
aas
pop
mov
loop
mov
stos
fistl
jno
and
mov
ret
jle
in
push
xchg
mov
xlat
js
gs
pop
inc
loopne
pop
dec
pushf
add
or
popf
xchg
insb
outsb
mov
mov
sbb
xor
cmp
xor
test
sub
adc
sbb
pop
js
dec
push
push
lcall
lcall
jo
fldenv
or
es
gs
rclb
call
xchg
idiv
push
sbb
cmp
push
pmuludq
mov
outsb
repnz
shrl
js
adc
nop
xchg
pop
cld
insl
cli
push
adc
out
mov
push
mov
push
fimuls
and
jecxz
ljmp
rcrb
imul
rolb
add
es
mov
mov
inc
or
inc
sarl
dec
mov
in
pop
adc
lods
daa
mov
aam
xchg
repz
enter
int
sahf
or
repz
mov
fs
push
push
ss
test
jle
and
fidivs
xchg
mov
popa
test
jnp
mov
flds
add
pop
js
in
insl
xor
cli
ror
and
scas
inc
dec
lret
loope
cli
leave
lret
fwait
lahf
fsubrs
jge
lret
push
dec
sub
push
push
pop
pop
sbb
xchg
flds
inc
inc
push
pop
loopne
cmp
push
xor
adc
ss
addl
pusha
mov
push
test
data16
out
xorl
cmpl
mov
psubq
mov
insl
sbb
loopne
rorl
outsb
in
nop
xchg
movsb
xchg
mov
jb
pop
sub
loope
xchg
subl
fiaddl
sbb
sbb
xchg
mov
sarb
into
dec
leave
mov
pop
push
jle
dec
out
inc
lahf
dec
xchg
in
shlb
push
into
cmp
hlt
faddl
push
mov
shll
cmp
xchg
mov
imul
imul
add
out
xchg
fadd
mov
inc
repnz
cmpsl
out
inc
daa
jle
pop
mov
or
xchg
push
dec
sbb
dec
jns
scas
scas
or
xor
dec
fwait
and
xor
fldcw
repz
outsl
enter
push
enter
lcall
xchg
add
je
sbb
sar
lret
sub
cli
in
xchg
or
jmp
xchg
clc
lods
jge
mov
and
mov
push
pushf
cmc
pop
add
lock
insl
cmp
push
test
icebp
mov
pop
mov
in
movsb
xchg
xchg
jmp
cmp
pop
push
push
aaa
dec
cmpb
sub
xchg
sbb
jmp
or
cmc
ret
add
push
jnp
out
xchg
imul
addb
mov
xchg
and
push
gs
addl
mov
stos
mov
das
out
xchg
jns
xchg
inc
sub
loopne
xchg
sub
bound
and
fucom
mov
movl
cmp
cmpb
insb
and
cmp
inc
mov
jmp
enter
mov
sbb
pushf
dec
inc
and
mov
divb
mov
dec
dec
lods
test
dec
sbb
mov
add
dec
iret
cld
addr16
movsb
sub
cltd
xor
sbb
filds
xchg
or
lret
jb
inc
mov
fsubrl
cli
mov
js
insl
gs
cmp
fisubs
mov
dec
ljmp
cmp
cwtl
mov
lea
xor
mov
std
imul
xchg
jb
loop
inc
ror
jge
imul
flds
sbb
outsb
enter
fs
out
mov
or
loope
loopne
popf
push
dec
pop
pop
dec
mov
fmul
xchg
clc
lret
data16
pop
or
xor
stos
add
inc
adc
clc
jecxz
scas
push
lahf
scas
sbb
cmpsb
jo
sbb
movsb
mov
pop
and
ljmp
inc
std
call
mov
adc
dec
pop
das
push
aad
lret
push
cmp
jecxz
aaa
enter
xor
fidivl
mov
pop
out
xchg
inc
mov
push
clc
shrb
cmp
shrl
rclb
in
movb
daa
xor
adc
enter
js
xor
pop
ljmp
pushl
mov
mov
and
push
add
xchg
cmp
sub
mov
or
mov
mov
mov
fwait
jl
jmp
push
testl
sub
mov
fsubl
fists
xor
sub
and
repnz
or
xchg
sbb
jecxz
dec
idivl
lcall
push
add
add
mov
sub
push
and
jb
mov
push
inc
mov
and
dec
mov
jp
jmp
dec
xchg
pop
dec
mov
repz
scas
adc
mov
rcrb
add
addr16
xlat
cmpsl
xor
leave
cmpsb
je
sbb
adc
lds
cmp
push
pop
cmpsl
sahf
enter
add
mov
inc
dec
sbb
mov
cld
addr16
mov
xor
lret
sub
sbb
lahf
push
cmp
imulb
push
sarb
rcr
fwait
sbb
xor
daa
cmp
sti
and
daa
mov
cli
in
icebp
mov
cmp
or
and
push
cmp
mov
jecxz
jb
jp
cmpsw
pop
insb
sbb
icebp
push
je
mov
iret
sub
or
cwtl
sub
push
xor
xorb
test
push
push
dec
sti
inc
leave
push
cmc
negb
out
pop
roll
lret
mov
mov
loope
call
gs
lcall
mov
sub
push
inc
dec
mov
cmpsb
out
aad
test
inc
mov
cmc
sub
and
xchg
cmp
xchg
popf
lea
cmp
and
pop
cmp
jle
or
sbb
dec
loop
sub
aad
push
add
jo
push
pop
pop
ss
rorl
ja
jbe
aam
sub
push
nop
outsb
mov
mov
cmp
inc
xchg
ss
inc
inc
xchg
in
cmpsl
out
xchg
xchg
insl
in
jns
or
pop
mov
push
cmp
jmp
pop
loopne
jo
mov
dec
les
scas
or
popf
add
fwait
xor
lret
xor
jg
fwait
add
out
adc
mov
jg
mov
xchg
fcmovne
int
daa
dec
pusha
loope
hlt
cwtl
insl
clc
lods
xor
xor
ret
add
mov
sbb
fcom
iret
jo
pop
or
xchg
inc
jno
inc
ja
movhps
xchg
mov
push
mov
and
popf
cli
test
pushf
subl
frstor
iret
or
cmp
ja
cld
enter
dec
ss
cmp
push
pmuludq
dec
idiv
enter
shl
add
aas
inc
insl
test
out
ret
pop
in
pop
or
cmp
push
aad
cs
int
lods
call
pushf
xor
cmp
adc
jns
sbb
fadds
cld
push
sahf
je
push
inc
test
stos
adc
lods
outsb
mov
lods
xchg
mov
cmp
xchg
dec
mov
out
pop
or
mov
lahf
xchg
dec
pop
dec
adc
push
popa
pop
stos
das
loop
push
mov
jl
les
nop
aad
stc
out
leave
out
push
pop
repnz
leave
mov
es
xorl
jp
xor
lods
pop
iret
pop
addb
leave
cmp
dec
int
rcll
inc
lret
or
mov
ret
data16
xor
mov
adc
repz
add
adc
test
pusha
les
mov
mov
in
call
scas
dec
ss
pop
mov
push
int3
pop
pop
mov
nop
cwtl
mov
pop
mov
xor
sbb
dec
fnstsw
cli
mov
test
aad
movl
popa
cmp
es
mov
pop
sbb
pop
test
xchg
lret
mov
cmpsb
daa
fs
mov
mov
imul
pop
jle
nop
and
push
xchg
add
inc
jb
adc
mov
sbb
adcb
mov
xchg
test
sub
mov
and
dec
pop
mov
xor
mov
push
xchg
daa
or
test
dec
dec
hlt
push
or
fs
dec
pop
xchg
dec
jne
cmp
subps
inc
sbb
xchg
or
sub
int3
daa
test
scas
pop
pushf
adc
fimuls
loop
sti
push
sbb
xlat
call
cmp
fisubrl
pop
dec
cmpsl
ds
cli
out
sarb
mov
cmp
sub
stos
jne
cmp
iret
dec
push
or
idivl
jge
jl
add
pop
adc
xchg
or
add
inc
pop
mov
divl
in
xchg
das
jb
arpl
mov
rcll
push
sub
mov
stos
cmp
into
sbb
mov
xor
and
ja
mov
or
sarb
addl
mov
and
mov
xor
dec
cmp
xchg
mov
mov
push
mov
fyl2x
in
push
jo
out
fcomps
xor
jns
stos
sub
dec
push
cmp
inc
sub
xchg
clc
pop
aad
aad
cli
cmp
push
fildll
or
inc
and
jne
push
push
fdivrs
addr16
sarl
in
xchg
add
cmpsb
cli
jae
pop
enter
scas
sub
jp
xchg
adc
loopne
jecxz
cltd
xor
das
mov
sub
add
xchg
ret
nop
jmp
cmp
and
aaa
xchg
es
fbstp
fldt
repz
xor
push
rclb
out
lcall
jmp
stos
int3
xchg
sbb
sub
rcll
mov
mov
and
repz
out
lret
jno
or
mov
scas
push
test
scas
pop
fdivrp
dec
pop
mov
pop
xchg
mov
pop
xchg
dec
out
jp
fdivr
xor
push
push
pop
imul
out
rol
out
stc
or
xchg
xor
dec
pop
adc
das
out
and
inc
in
mov
orb
mov
cmp
or
clc
push
mov
sahf
test
cltd
lds
jno
loope
filds
sub
cmp
inc
orb
jp
rclb
lahf
pusha
in
ja
inc
lds
es
pop
stos
mov
rcll
jae
movsl
lea
add
fistpl
xlat
imul
rclb
sbb
sbbl
mov
cmp
jp
jno
cmp
aaa
imul
mov
sub
out
enter
jl
notl
lret
icebp
adc
xlat
and
nop
dec
jge
shll
xchg
test
mov
repnz
cld
and
jle
sbb
xchg
xchg
mov
lahf
ss
fwait
xchg
cmp
ja
inc
inc
ret
dec
hlt
mov
insl
mov
lcall
add
popa
inc
pop
into
lods
inc
pop
cmp
daa
xlat
dec
mov
lods
cld
pop
fdiv
inc
xchg
call
xorb
mov
arpl
mov
adc
les
push
mov
cld
lds
xor
cmpsb
cmpsl
jne
push
pop
xlat
hlt
jmp
push
mov
cld
test
stos
test
inc
aas
mov
imul
sahf
rorl
push
push
push
aas
push
pop
jmp
pop
push
mov
mov
es
pop
push
adc
icebp
in
je
fisttps
aad
dec
ds
jne
cmp
loop
iret
cmp
fs
push
in
out
or
data16
inc
jmp
test
imul
aad
mov
sahf
fmull
mov
mov
adc
rolb
xor
mov
jecxz
push
pop
out
sbb
cmp
aas
xchg
cmp
mov
mov
in
fcmovbe
test
pop
xchg
adc
xchg
jbe
and
ljmp
jecxz
stos
cltd
mov
pop
icebp
sub
jle
jl
fwait
mov
sbb
fistpll
nop
or
push
mov
dec
mov
js
xchg
sbb
add
clc
fbstp
xor
gs
inc
icebp
or
cli
pop
xchg
cmpl
fstpl
xchg
xor
sub
or
jbe
je
je
imul
aas
fisubrs
imul
inc
pop
inc
mov
push
in
mov
insl
popa
mov
inc
jg
shr
jb
data16
jl
stos
add
sbb
das
rcr
or
jae
mov
enter
mov
or
and
push
push
lods
gs
jae
lock
cmp
test
and
xor
mov
js
inc
int3
sub
cmp
push
insl
clc
push
jb
dec
xor
sti
out
ret
je
xor
push
pop
mov
popf
lcall
inc
jb
add
cwtl
push
call
xorl
aad
cmp
adc
imul
lock
push
mov
mov
pop
stc
and
mov
adc
int3
jno
and
das
ja
adc
mov
pop
sbb
mov
movb
mov
ss
xchg
rcrl
bnd
mov
ret
outsl
push
testl
pop
pop
hlt
jl
repz
jns
test
and
push
imul
sbb
jns
sub
int
outsl
pusha
xchg
mov
or
sti
es
dec
das
xor
out
addr16
ljmp
bound
out
stc
mov
scas
dec
sub
repz
push
lahf
rolb
jge
mov
mov
inc
imul
pop
mov
and
push
jmp
add
inc
test
pop
cmp
js
out
aam
and
data16
mov
mov
jbe
scas
bound
adc
aaa
idivb
adc
xor
mov
in
push
enter
lds
jno
push
sti
jns
out
icebp
fidivrl
sbb
dec
mov
in
mov
xor
call
out
idivb
sahf
push
xchg
adc
outsl
decb
add
lock
outsb
xchg
jnp
jns
cld
mov
fsubrl
push
cmc
out
cld
mov
popf
dec
rol
pop
and
push
cmp
lret
out
inc
mov
mov
js
mov
test
inc
add
divb
sub
loop
repnz
pop
ja
mov
or
push
ficompl
bound
test
mov
dec
arpl
fs
imul
sti
ja
dec
or
das
clc
mov
daa
pop
fstps
call
js
lea
xlat
xor
movsb
clc
pop
xchg
stos
add
jecxz
add
or
mov
cld
into
in
dec
je
dec
in
dec
fdivrp
stos
loop
jae
inc
loope
in
imul
jge
cwtl
stc
js
js
xchg
scas
mov
call
mov
in
std
xchg
cmpsl
add
aad
bound
repz
mov
xor
push
data16
mov
stos
pushf
shll
mov
inc
jae
sbb
mov
jl
inc
jno
icebp
outsl
pop
jp
cmp
sbb
inc
lods
or
inc
mov
in
push
add
outsb
dec
jle
xchg
add
push
outsl
in
xchg
sbbb
decb
aad
lock
or
sub
add
pop
icebp
in
aas
pop
mov
push
push
out
push
adc
add
adc
lret
fisttps
loopne
je
jbe
push
inc
mov
jmp
or
mov
cmpl
push
push
xchg
notb
jecxz
lcall
mov
dec
out
aas
mov
stos
xchg
in
ret
out
jne
lea
sbb
sbb
sahf
add
cmp
push
and
outsb
test
clc
loop
push
mov
loope
push
xchg
mov
out
test
pop
and
sub
push
inc
cli
mov
pop
jp
in
int
sbb
enter
mov
jle
mov
cmp
push
outsb
dec
cmp
enter
mov
andl
lcall
adcb
push
mov
jno
inc
decb
push
xchg
mov
mov
outsl
mov
or
push
sbb
push
dec
xor
sbb
and
dec
repz
pushl
mov
cltd
add
mov
je
add
cmp
ja
aam
fidivrl
cmp
adc
inc
test
add
in
mov
jle
rcll
mov
lahf
mov
xchg
mov
je
xlat
out
lods
pop
aad
lds
mov
xor
test
add
dec
subl
cmpsl
cli
enter
subl
loope
out
push
scas
xchg
mov
sbb
es
jmp
lods
cmp
fdivr
cmpsl
sbb
imul
sub
push
xchg
mov
push
icebp
std
xor
clc
loopne
cmp
cmp
sbbl
inc
roll
shufps
gs
cli
clc
bound
push
jne
cmp
std
testb
sbbb
sti
enter
fs
push
cmpl
fnsave
sarl
jl
sub
mov
arpl
jns
xchg
ss
test
movsl
mov
or
and
ja
imul
jmp
pop
jle
inc
and
pushf
push
arpl
or
xorl
jno
jecxz
lods
pop
filds
mov
push
xchg
clc
jg
or
xchg
subl
jnp
push
loopne
mov
pop
jmp
fwait
leave
mov
sbb
or
add
fs
jb
jmp
mov
or
std
mov
xchg
lds
cmp
xor
inc
mov
xor
xchg
sub
cmc
movsb
insb
jge
push
aaa
testl
inc
mov
mov
outsl
stc
push
addr16
movsl
sahf
sub
xchg
cmc
sbb
adc
mov
push
stc
cmp
mov
pop
cmc
icebp
sub
cs
nop
jp
add
cmp
test
push
notb
aad
cs
mov
mov
andl
stos
daa
add
xchg
inc
sub
push
shlb
pop
loopne
mov
mov
aaa
dec
mulb
adc
xlat
adc
mov
es
cmp
lcall
xchg
xor
sbb
pop
push
xchg
les
daa
lds
inc
cmp
dec
or
cmp
jno
bound
cmc
and
pushf
out
popa
mov
push
and
cmp
jo
mov
stc
testl
stc
mov
insl
mov
xchg
xor
xchg
push
outsl
popa
shlb
stos
mov
and
repz
lahf
int
loop
daa
fmuls
push
jno
jae
stos
aam
into
shlb
xchg
loope
or
and
adc
out
int3
dec
mov
xchg
out
xor
insb
fs
or
cmp
and
mov
or
cmp
sbb
mov
negb
cmc
rcl
push
xchg
and
repnz
xorb
enter
add
mov
sub
icebp
fdiv
pop
inc
inc
cmc
pop
mov
imul
push
dec
lock
sbb
movsb
and
ret
fnstsw
pop
inc
sbb
xchg
add
add
pop
aad
outsl
mov
movsl
inc
jl
rclb
lret
rorb
push
inc
push
push
mov
pop
into
mov
or
jg
pop
imul
jmp
rcl
xor
xor
sub
repz
rep
ds
mov
sbb
mov
lcall
adc
pop
push
adc
es
imul
push
mov
cs
out
fs
jnp
cmp
fsubp
dec
adc
iret
jp
test
hlt
push
cli
pop
push
xchg
les
lahf
dec
cmp
or
jno
loope
sub
xchg
out
out
mov
add
mov
clc
xchg
add
pusha
loop
jle
gs
dec
lock
sbb
les
push
pop
lret
inc
push
aam
es
ja
lods
jmp
or
jno
iret
push
shl
cmpsb
fistl
mov
sub
add
adc
mov
mov
jl
addr16
xor
dec
outsb
pop
mov
callw
sub
xchg
nop
xor
jns
out
push
sahf
and
int3
push
adc
lea
rclb
andl
dec
add
or
fsubrs
daa
dec
adc
mov
out
out
cld
out
or
fs
xchg
pop
aad
dec
iret
ds
mov
out
xor
enter
xchg
repnz
fisubs
cmp
xchg
repnz
sub
mov
dec
clc
lods
push
int
mov
out
outsl
push
and
pusha
js
sbb
or
je
pusha
dec
sahf
mov
es
leave
xchg
push
push
outsb
mov
xchg
shll
mov
cli
or
fadds
xchg
sub
call
lret
mov
or
or
dec
mov
push
xlat
pusha
xor
sub
mov
jmp
popf
fstpt
xor
jge
mov
loop
fcoms
int
popl
inc
mov
xor
aas
hlt
dec
das
dec
movsl
mov
aas
les
out
aad
lock
inc
inc
cmpsl
sub
jg
sub
lods
cmp
imul
adc
negb
jl
mov
repz
add
test
mov
iretw
xchg
lret
subb
add
xor
idiv
int
fisubrl
mov
jns
mov
leave
dec
int3
xor
pop
movsl
inc
sub
inc
pop
mov
fildl
cmp
repz
lahf
shrb
or
dec
rcr
push
inc
xor
es
pop
inc
mov
push
fcomi
xor
cwtl
sub
adc
add
mov
xor
adc
push
pop
aam
ret
popa
inc
daa
xor
pushf
cmp
mov
xchg
lods
and
pop
push
inc
sahf
and
imul
fdivp
or
gs
jg
pop
pop
mov
push
adc
xchg
aad
jmp
pop
lock
inc
lds
nop
jp
into
sahf
add
inc
inc
lea
jl
in
push
adc
mov
and
popa
pop
mov
int3
lds
adc
nop
jg
mov
cmp
inc
or
cmp
ljmp
adc
mov
filds
je
push
ja
add
pushf
int3
es
lock
sbbl
mov
in
xchg
mov
sbb
jp
lock
and
mov
jno
movsb
repz
mov
or
stos
hlt
or
movsl
dec
lods
xchg
pop
or
arpl
cltd
mov
or
sar
pop
ret
adcl
adc
rclb
push
cmp
pop
push
mov
scas
mov
jae
cwtl
test
std
fcomps
lods
repz
fiadds
jecxz
pop
adc
or
fs
sub
aad
jmp
push
sbb
add
xor
shrl
pop
mov
xor
jne
shl
int3
dec
push
push
daa
jge
iret
inc
sbb
push
dec
sbb
inc
sbb
fnstcw
jne
hlt
rorb
iret
cmp
push
dec
pusha
dec
imul
jno
fldcw
push
jo
movsl
mov
and
test
loopne
or
aad
insl
addr16
lcall
ja
and
lahf
sbb
mov
mov
js
xor
mov
inc
sub
jae
adc
sub
adc
mov
xchg
int
mov
mov
outsb
push
jg
inc
hlt
jbe
pop
jns
and
rclb
mov
add
test
outsb
jnp
dec
xchg
shlb
ret
jl
dec
mov
mov
cmp
and
cmp
jnp
scas
mov
mov
sbb
pop
sub
pop
mov
mov
add
dec
adc
jbe
pop
stos
inc
mov
and
incl
push
push
mov
push
adc
xchg
pop
cmpsb
stc
cmpsb
mov
out
and
xchg
pop
cwtl
sub
mov
das
lea
xchg
push
test
mov
sub
dec
les
in
stos
or
sbb
aaa
xchg
mov
inc
inc
dec
inc
in
cmc
push
subb
jmp
int
mov
aas
or
mov
sub
lahf
mov
mov
jle
push
loopne
out
das
mov
aad
bound
or
rcl
into
ficoml
sbb
sub
fimuls
lahf
adc
push
mov
scas
bound
cmpsl
sbb
push
pop
shlb
sub
jns
push
fwait
lcall
out
jae
or
push
jo
xchg
mov
xchg
insb
sub
int3
xchg
out
bound
es
jno
gs
jnp
dec
je,pt
ret
jno
or
dec
outsb
lock
inc
fsin
js
jle,pn
fwait
xchg
cmp
mov
xchg
negl
mov
push
incb
outsb
hlt
movsl
add
and
ficoms
loopne
repnz
cmp
sbb
pop
or
or
jg
shlb
mov
loop
mov
and
sti
mov
dec
nop
jl
cmpsl
mulb
enter
iret
enter
mov
rorl
test
decl
sub
lret
pop
lret
or
shll
cwtl
adc
call
sbbb
pop
imul
call
inc
jp
js
imul
scas
hlt
or
sbb
inc
xor
stos
jb
mov
hlt
sub
mov
fcmove
xchg
mov
mov
push
xor
scas
out
out
lock
pop
das
jae
jae
sbb
popf
cld
nop
mov
dec
arpl
clc
loop
mov
inc
push
dec
test
sbbb
xchg
pop
xchg
call
sbb
ja
adc
repnz
dec
xor
addr16
repnz
lods
push
pusha
lock
ja
or
in
dec
push
or
fucomp
call
jecxz
in
jp
fildl
inc
aaa
xor
adc
data16
outsb
aam
mov
push
loop
push
pop
jno
addr16
repz
add
shr
mov
js
lds
jmp
mov
fs
add
ret
mov
lcall
mov
sti
stos
addr16
push
fisttpl
jp
push
jge
jnp
scas
and
enter
hlt
movsl
add
jo
dec
scas
add
and
push
ja
or
xchg
sbbl
jmp
insl
mov
aaa
jae
fsubp
sti
sub
in
or
int
add
outsb
aas
rorl
scas
hlt
shlb
xchg
call
cmp
outsl
fildll
lds
jbe
cmp
dec
in
fdivl
cmpb
push
lock
push
loopne
add
out
cli
loope
or
std
mov
xor
pmullw
sub
sub
roll
mov
mov
cmc
fnstenv
xor
out
inc
push
ret
mov
dec
jne
add
jbe
push
outsl
and
cwtl
xlat
push
stos
outsb
mov
mov
orl
or
xchg
push
pop
and
mov
leave
mov
add
fdivs
and
jmp
es
seto
xchg
adc
cmp
pop
inc
add
fidivrs
cltd
lock
pushf
or
pusha
rol
test
sub
add
sub
pop
dec
ror
jne
mov
lds
aad
dec
or
ja
movsl
pop
cmpl
jno
jo
loopne
aaa
pop
mov
iret
lcall
out
xchg
daa
adcb
out
xchg
movsl
adc
pop
cmp
mov
jg
lock
fcmovnb
cmp
inc
fiadds
cmpsl
sub
bound
daa
mov
or
cmp
and
scas
leave
fldcw
dec
add
mov
xchg
hlt
cwtl
mov
or
adc
cmp
test
ds
lea
loope
std
nop
mov
pop
cmpsb
inc
lds
push
push
push
popa
dec
setb
jg
xchg
sub
push
insl
mov
in
push
outsl
clc
mov
push
mov
addl
mov
fwait
notb
ret
daa
ja
xchg
outsl
adc
mov
mov
popa
test
mov
dec
sub
into
push
mov
add
fucom
insb
mov
dec
fsub
in
out
mov
test
mov
inc
mov
cld
dec
add
xchg
push
out
int
es
cmp
mov
aam
adc
push
jg
loope
mov
cmp
sbb
push
dec
and
pop
inc
sar
ret
mov
sbb
adc
mov
inc
cmp
push
push
jp
pop
aad
dec
repnz
cld
inc
or
pop
cld
pop
xchg
fbstp
out
cmpsb
in
fs
ja
jo
xchg
scas
aaa
aad
dec
iret
cltd
mov
mov
fwait
add
mov
gs
jae
mov
dec
mov
inc
jle
push
mov
mov
and
dec
push
or
sbb
mov
or
push
outsl
xor
xchg
mov
mov
jne
pop
push
pop
leave
sbb
jns
loop
arpl
cmp
mov
push
push
inc
add
addr16
xchg
pop
add
xchg
sub
imul
mov
or
lock
sub
xchg
lds
popa
popf
cs
dec
scas
hlt
ret
cli
cmpsl
push
les
xchg
aas
mov
cmp
lods
outsl
sub
inc
fadds
aaa
jecxz
int3
xchg
ds
push
xchg
sub
jp
or
cwtl
jae
daa
sbb
imul
mov
dec
ret
inc
ljmp
cmpsb
push
stos
jp
dec
rep
or
add
mov
sub
inc
sbb
xor
mov
or
ds
add
fdivs
mov
inc
vpaddb
imull
in
pop
rcll
pop
leave
sbb
adc
stc
popf
shr
xor
mov
mov
in
jecxz
dec
pop
sub
adc
jl
and
test
addl
sbb
cmp
aad
scas
mov
dec
int
sbb
pop
sbb
ficoml
rorl
pop
mov
jp
xorb
pop
cmpsl
sbb
or
jb
cmpsb
icebp
jne
push
mov
add
clc
popa
add
scas
mov
mov
inc
addl
jne
or
gs
mov
jb
out
mov
cwtl
or
in
pop
fnstcw
push
push
mov
adc
mov
mov
inc
xchg
enter
lcall
clc
xor
push
das
leave
pop
mov
sub
sahf
inc
jne
ss
and
jl
ljmp
pop
sbb
push
and
movsb
mov
mov
rcl
push
mov
test
xlat
push
dec
aam
or
gs
mov
sub
mov
jp
xor
adc
ljmp
dec
pushf
clc
sbb
jae
jecxz
mov
scas
cmpsb
nop
jnp
popf
or
pushf
add
loope
movsb
in
test
mov
push
out
xor
and
jle
ja
mov
cmp
inc
in
fmull
enter
ret
mov
mov
or
mov
orb
mov
out
mov
imull
in
mov
sub
aam
repz
jo
sub
and
add
mov
sahf
or
les
inc
sarl
rcrl
jnp
sub
lock
sbbb
ja
lods
or
imul
fs
ja
inc
in
jb
push
call
sbb
out
jg
movsl
dec
and
test
push
shl
sub
nop
push
xchg
out
test
cli
cmpsb
div
sub
test
arpl
lret
xor
call
cmp
xor
or
rclb
adc
aad
pop
icebp
lcall
pop
cwtl
pusha
fcoml
das
sbb
push
jg
mov
icebp
cmpb
mov
insl
imul
lods
push
sub
inc
pushf
and
xchg
out
adc
outsb
sbb
jle
dec
ljmp
inc
sbbl
test
cmp
mov
cs
push
das
cmpsl
sbb
or
xchg
push
mov
mov
jo
lods
aaa
push
sbb
jecxz
adc
dec
jge
fs
cmp
cmpsl
dec
adc
cmp
jno
mov
push
gs
and
in
xor
cmp
xchg
or
xchg
push
adc
test
mov
xor
or
cld
mov
lods
and
ja
outsb
or
lds
cmpsb
mull
pushf
add
sub
jecxz
fldl
sub
jo
out
cltd
add
rolb
mov
jo
jg
sbb
cmpsb
hlt
xor
and
ja
jb
sub
add
mov
inc
fcmovu
push
pop
jl
fisubrs
inc
push
mov
mov
add
decb
jmp
cld
lock
adc
mov
jb
test
mov
xor
sbb
xchg
bound
ds
xor
mov
cmp
sub
inc
adc
sub
cmc
jo
mov
push
inc
mov
or
rcl
mov
ret
outsl
add
cmp
lret
loopne
dec
lcall
pusha
insl
xchg
int3
cmp
inc
fnstenv
es
in
dec
push
push
xor
out
dec
dec
mov
sub
jecxz
mov
jg
mov
sbbl
gs
adc
xchg
mov
pop
popf
dec
fidivs
sbb
sub
lahf
dec
aam
cmp
adc
push
popa
fists
pop
xchg
filds
mov
sbbb
bound
orb
int
fistpll
loop
pop
xor
cmpsl
xor
test
cmp
mov
sti
mov
icebp
cmp
mov
push
lahf
lods
jecxz
js
mov
sbb
sar
add
adc
add
or
lret
push
arpl
and
jbe
jbe
lret
xorl
adc
sub
mov
notb
push
push
jno
jbe
xchg
das
adc
subl
fnstcw
xor
test
test
dec
scas
jns
faddl
cwtl
outsb
inc
aas
aam
sbb
fs
push
inc
in
lods
icebp
test
xchg
jae
hlt
dec
push
rol
adc
lahf
jl
cld
inc
adc
js
test
push
cld
fs
into
pop
jl
les
push
lock
pop
fbld
std
push
js
cld
pop
repnz
jbe
or
rolb
jmp
jge
xor
stc
dec
es
mov
push
sarb
outsl
lahf
inc
arpl
jbe
cmp
push
jmp
cltd
xchg
ja
jo
lds
or
mov
loope
adc
pop
add
int3
rcr
xor
cld
pusha
push
in
popa
sub
jl
adc
sbb
sbbb
mov
and
test
popa
mov
sub
xchg
pushf
movsl
xor
pop
clc
dec
push
mov
mov
sti
call
lret
outsl
int
mov
cmp
movswl
cmp
in
and
push
fstl
subl
jmp
add
mov
cmpsb
lret
loope
into
daa
xor
mov
jge
ss
pop
imul
mov
mov
mov
push
inc
sbb
leave
sbb
rcr
inc
pop
repz
pop
in
pop
fmulp
fs
and
mov
in
add
insb
sbb
jp
fwait
mov
int
jl
lea
sbb
aad
push
mov
fwait
or
movsl
push
ja
aaa
sub
pop
fdivrl
int3
stc
jg
insl
adc
fists
lock
insb
pop
xchg
das
rclb
inc
test
xchg
dec
sbb
xchg
shll
dec
nop
insl
cmc
lahf
dec
jecxz
arpl
inc
jbe
xor
mov
cmp
movsb
dec
or
adc
sbb
daa
xor
sbb
inc
sub
clc
push
fsubrs
pop
sti
add
adc
popa
or
hlt
jg
rorl
arpl
add
or
fidivrl
pop
adcl
js
mov
adc
inc
adc
daa
call
loope
xor
xchg
pop
pop
and
inc
inc
mov
out
loop
nop
in
or
dec
or
inc
and
pop
aam
push
repz
shl
jb
and
aas
jge
cmc
ljmp
mov
inc
inc
addb
rcl
addr16
adc
or
push
pop
movsb
mov
aam
sub
sbb
fsqrt
sbb
sub
cmpl
mov
fcmovnu
mov
adc
gs
mov
inc
lds
pop
cld
add
sarl
push
push
shrb
xchg
dec
inc
mov
mov
jmp
in
add
repnz
out
icebp
xor
das
push
push
cmp
test
push
mov
lret
xchg
hlt
mov
ljmp
mov
sar
mov
xor
iret
mov
xor
mov
or
leave
aam
and
sub
outsl
lcall
pop
pop
dec
or
push
cld
xchg
testb
jmp
jmp
outsb
cld
sub
ss
das
faddl
fldcw
jns
inc
clc
out
scas
add
push
push
push
in
jb
lcall
adc
dec
xchg
pop
movups
and
jp
lods
push
mov
pop
sbb
lret
mov
mov
shll
xlat
gs
xor
fiadds
mov
ljmp
cmp
enter
jo
pop
mov
adc
loopne
rcll
push
clc
and
inc
push
mov
pop
or
jne
sbb
xor
bsr
scas
inc
or
das
xchg
add
jae
ljmp
sbb
in
adc
add
cmpsl
pop
and
xor
xor
add
push
xor
adc
mov
ja
adc
imul
lock
jnp
push
sub
sbb
sbb
jbe
fstps
inc
dec
and
push
push
adc
lea
pop
mov
or
mov
in
test
cltd
mov
jb
xor
mov
cmc
mov
loopne
inc
aaa
out
repnz
imul
sub
aam
mov
js
and
or
pop
outsl
xbegin
cmp
jns
movsb
xorb
movsl
mov
inc
adc
pop
cld
push
ss
jb
cmp
pop
sbb
movsb
arpl
mov
xchg
mov
sti
jbe
ds
std
push
rcrl
pushw
lret
stos
ja
add
add
jno
out
mov
jg
in
cmp
cmpb
xor
es
ss
push
movsl
dec
popf
xor
add
in
bound
jbe,pn
pushf
ss
mov
inc
pop
inc
cmp
icebp
sub
shlb
pop
push
sbb
adc
lcall
xor
lret
bswap
data16
scas
sub
xchg
out
roll
cmp
mov
push
push
push
js
jo
lret
adc
and
int3
inc
push
push
fcmove
fildl
in
adc
mov
and
shrb
pop
movsl
cmp
push
aam
xor
xor
mov
sbb
push
push
adc
xchg
mov
je
das
dec
pop
mov
inc
in
lcall
inc
and
cli
scas
not
add
das
cli
stos
notl
mov
insb
fs
imul
cmp
add
sub
cmp
fdivs
sbb
cs
jmp
mov
dec
aaa
inc
cli
rorb
cmc
push
push
insl
push
mov
icebp
push
sub
mov
mov
cld
inc
xor
push
repz
stos
mov
jg
mov
lret
or
cmpsb
enter
gs
loop
add
inc
dec
and
jne
mov
mov
aaa
ret
cmp
sti
cld
iret
dec
inc
stc
jns
push
icebp
fpatan
mov
outsl
xor
into
jge
ljmp
sbb
push
hlt
add
mov
ss
in
pushf
push
ja
lods
dec
or
mov
add
sub
ret
aaa
pop
out
sahf
clc
and
icebp
outsl
xor
das
push
dec
mov
mov
jae
aad
sbb
in
add
jns
mov
and
mov
dec
das
nop
sub
xor
iret
push
sbb
sbb
mov
xchg
subl
ret
int3
push
jae
in
js
fwait
lds
and
in
cmp
mov
sbb
push
mov
jmp
jecxz
notl
jns
mov
sub
dec
out
or
outsl
pop
push
mov
pop
xchg
ds
rclb
pop
scas
ja
xchg
imul
out
dec
dec
ss
cli
sar
xchg
mov
dec
sti
test
push
lahf
aaa
lret
jmp
test
jne
in
adc
ret
sbb
enter
xor
sti
mov
xorb
mov
cli
push
mov
adc
in
pop
dec
decb
in
mov
cld
dec
fsubp
xabort
outsl
mov
test
mov
in
daa
into
repnz
add
ja
sbbl
cmp
and
test
xchg
aad
or
xor
sub
push
test
pop
add
mov
les
test
je
shlb
loopne
and
xchg
aad
cmpsl
xor
mov
and
sub
cld
idiv
pop
out
popa
adc
push
imulb
js
or
std
fwait
insl
mov
inc
call
pop
mov
scas
jge
fidivrs
data16
into
sbb
push
dec
xor
push
or
push
in
jg
pop
stos
sbb
mov
dec
add
pop
inc
rcll
xchg
sar
or
mov
sub
enter
sub
test
mov
cmp
fildl
out
insb
xchg
mov
hlt
fucomi
cmp
loope
cs
mov
mov
insb
addr16
addr16
int
inc
jns
dec
cmp
pop
mov
ss
push
call
jle
lea
cld
adc
rep
xor
inc
jp
xor
lcall
fisubrl
test
inc
fimull
dec
push
pop
push
sub
sti
int
adc
sub
cli
mov
or
mov
adc
cmp
std
inc
les
cmp
repz
imul
int3
and
sub
xchg
mov
iret
stos
iret
xor
push
ss
jne
pusha
fldt
sbb
ret
mov
jne
add
jmp
inc
xor
or
jg
fidivs
cmp
les
int3
mov
pop
insb
fiaddl
inc
sub
dec
in
xor
mov
fsqrt
aas
lods
xchg
ret
xlat
mov
add
push
cmpsl
sbb
mov
shll
xor
inc
push
in
sbb
cmpl
loopne
xchg
xchg
data16
les
test
inc
or
mov
bound
fiaddl
je
push
int3
or
and
fdivrl
sub
ds
shl
mov
test
mov
sub
xchg
cmp
fsts
imul
iret
loopne
cld
sbb
add
xor
mov
je
sbb
enter
cs
xchg
ljmp
dec
fcomps
movsb
in
pop
cmpsb
pop
add
jecxz
jle
sub
js
les
stos
ja
fisubrs
jmp
cmpsb
xor
mov
jle,pn
push
aas
push
jnp
in
mov
into
sub
and
iret
mov
aad
inc
icebp
bound
mov
test
adc
aam
das
push
mov
call
inc
out
xor
adc
jecxz
enter
adc
loope
xchg
or
adc
pop
fildll
pop
xor
cmpb
std
add
cltd
add
sbb
mov
xor
dec
pop
dec
xor
xor
dec
mov
cld
lret
pop
mov
test
inc
mov
movsb
les
icebp
cmc
cmc
or
fs
jns
fs
add
or
es
dec
shlb
mov
fwait
ljmp
icebp
sbb
mov
dec
mov
or
movsl
and
addr16
inc
lahf
ret
shrl
fistl
jg
ljmp
out
lods
sbb
xchg
add
jmp
xchg
int3
int
test
xchg
jle
in
mov
xor
pop
aam
xchg
fadds
fisubrs
pop
add
repnz
pop
fwait
clc
sti
ja
sub
inc
add
jl
js
arpl
xor
nop
or
leave
pop
jl
movsb
or
aas
inc
lcall
adc
lret
into
push
aam
xchg
mov
push
in
jle
cmpsb
sbbl
in
cmp
pop
push
stos
or
dec
fmul
cmpsl
or
cmc
jl
sbb
push
gs
mov
mov
or
mov
clc
in
push
jge
sbb
push
int
mov
nop
xchg
mov
or
inc
adc
sub
mov
adc
or
rcl
aam
cmp
stos
mov
sub
inc
adc
jo
cltd
scas
loop
xchg
rolb
dec
shll
out
xchg
inc
pushf
cmp
jle
aam
je
sbb
ljmp
repz
insb
incl
xlat
rcrb
aad
xor
sarl
fstpl
mov
daa
and
jp
addr16
mov
fiaddl
repz
jle
ja
sub
lret
push
jb
dec
dec
push
sub
ljmp
mov
in
dec
and
daa
negb
mov
pop
or
out
lods
xor
insb
dec
pop
fwait
add
nop
add
out
gs
mov
jno
pop
push
adc
std
and
daa
xchg
dec
mov
outsl
lds
je
xor
aad
frstor
adc
cmp
mov
mov
out
outsl
pop
ss
sarb
ficompl
inc
and
lds
push
insb
and
aam
fildl
into
pop
fimull
sub
popa
test
icebp
push
inc
push
sub
sbb
in
inc
imul
notl
pusha
dec
mov
out
fdiv
shrb
sub
push
aam
leave
add
movb
pop
inc
loope
push
js
cmp
push
xchg
rcrl
lret
xlat
dec
es
fmul
mov
cli
add
jae
jbe
sub
add
inc
movsl
mov
rcr
dec
lods
std
aad
lods
pop
cli
cmpsl
mov
sub
mov
lcall
ret
int
insl
sbb
imul
or
lret
fnsave
scas
mov
xchg
sbb
xlat
push
pop
out
mov
insb
test
fcomip
mov
lock
inc
xchg
lea
aaa
imul
jl
dec
lods
rolb
sub
xor
popf
movsb
rol
pop
loop
dec
fistpll
adc
ljmp
test
out
ficomps
sub
jl
push
push
push
xchg
mov
xchg
sbb
sahf
jnp
sbbb
sub
jns
sahf
aas
int3
insl
fldl
xor
pushf
or
loope
movsl
dec
fildll
jo
xchg
nop
jbe
sar
popf
inc
xchg
push
cmp
push
pop
ud1
andl
sub
xlat
popf
rorl
mov
mov
ljmp
sbb
pop
int3
inc
jge
push
das
ja
fldcw
xchg
mov
dec
add
sbbl
pop
movsb
jnp
cld
push
insb
outsb
mov
adc
stc
jnp
add
add
test
daa
test
lock
pop
shrl
sub
adc
mov
call
sbb
sub
pop
lock
out
hlt
inc
lret
push
lods
sahf
cmp
sbb
xchg
daa
pop
and
adc
sub
popf
mov
or
jbe
shrl
dec
push
lret
push
sar
push
mov
in
mov
inc
sbb
stos
push
and
xor
fldcw
in
test
stos
jl,pn
push
add
int3
cs
icebp
ss
testl
js
xchg
scas
loop
xor
or
pusha
sub
lea
imul
test
fimuls
ret
fbstp
into
sbb
jge
add
push
ss
mov
jle
ds
in
mov
jl
mov
leave
scas
jecxz
movsb
push
arpl
in
insl
outsl
xchg
and
rol
lret
jl
mov
and
dec
xor
dec
das
rolb
mov
into
and
inc
add
xor
ret
xchg
and
mov
sub
and
stos
inc
es
repnz
mov
sub
push
scas
dec
jb
sbb
test
sub
mov
out
shlb
out
inc
jnp
testb
mov
sub
jnp
sarl
dec
arpl
ljmp
pop
mov
push
mov
jns
fimull
push
mov
test
xchg
and
xor
pop
pop
lods
adc
xchg
fdivl
mov
or
mov
adc
out
mov
arpl
push
cmp
push
bound
negb
shlb
add
add
jge
pop
cmp
sbb
stc
addr16
push
inc
push
mulb
xlat
and
cmpsb
xchg
inc
inc
rorl
test
sbb
jmp
jecxz
xor
and
xlat
or
and
push
outsl
aaa
roll
xchg
das
adc
sbb
pop
call
lock
int
cmpsl
idivb
sub
jo
and
xchg
xchg
push
out
jae
cmp
shl
mov
fwait
sub
dec
insl
cmc
mov
imulb
xchg
ret
ret
sub
test
fisttps
pop
into
inc
xor
je
in
clc
pushf
mov
fisubl
push
push
imul
mov
scas
aas
push
scas
jle
loop
or
xchg
loop
pop
or
mov
add
cmpsb
out
jmp
mov
movsl
or
ret
mov
mov
sub
cmpsb
gs
add
std
push
mov
int
and
stc
push
dec
std
gs
sub
movsl
inc
cmp
cld
and
push
xor
rolb
int
mov
repnz
pop
xlat
lret
mov
mov
fmul
es
xchg
adc
mov
lods
out
ds
call
or
pop
push
xchg
sbb
arpl
mov
mov
rcrb
out
mov
cltd
popf
fstps
push
xor
movsl
aad
fstpt
dec
inc
cltd
sbb
dec
pop
adc
roll
insb
pop
hlt
cmp
xchg
inc
push
sbbl
jge
arpl
arpl
xchg
add
das
add
ljmp
cld
sub
dec
jmp
or
lea
xorb
int3
jge
mov
filds
scas
cltd
fsub
rorl
dec
lods
das
ljmp
idiv
xchg
imul
push
and
push
adc
push
pusha
mov
mov
hlt
and
lods
cwtl
cld
mov
xor
mov
jns
or
out
sub
dec
test
outsl
cltd
and
mov
aaa
dec
repnz
fnsave
testb
ja
xlat
inc
mov
mov
jg
mov
rorl
adcb
cmp
mov
ss
dec
cmpl
sar
push
xor
xchg
inc
jmp
and
mov
mov
mov
jl
ljmp
mov
add
gs
dec
jns
jecxz
xlat
adc
mov
in
ljmp
sub
xor
add
mov
pop
add
jl
push
mov
leave
mov
lcall
mov
sub
mov
xorb
pop
dec
scas
add
or
pop
aad
sbb
in
bswap
in
roll
dec
cmp
cmp
adc
hlt
or
jge
stos
insb
pusha
jae
add
sbb
sbb
xor
mov
arpl
sti
and
shr
xlat
cmp
mov
inc
mov
jbe
pop
push
aaa
pop
fwait
arpl
mov
xchg
cld
mov
std
btc
jge
mov
aaa
imul
iret
jns
lods
stos
rorb
mov
lock
rorb
xchg
cmp
jmp
add
inc
mov
into
mov
pop
add
iret
mov
cltd
mov
xor
jns
mov
or
test
rcll
in
jns
insb
pop
jecxz
mov
inc
add
sbb
dec
enter
xorl
inc
sub
hlt
das
mov
xchg
mull
cmpsl
xor
inc
xchg
andb
fisubrl
xchg
jae
jne
mov
fsubs
jl
cmp
stos
iret
mov
popf
inc
mov
push
sbb
inc
test
cmp
mov
cmpsl
div
inc
scas
and
jp
jecxz
jne
pop
cltd
insl
clc
push
pop
or
sub
add
nop
std
sub
adc
inc
sahf
mov
ja
cmpsl
xchg
adc
adc
push
shr
test
subb
pop
jle
pusha
inc
vorpd
out
sub
pop
or
mov
fisubrs
sbbl
ds
pop
mov
jecxz
mov
ret
sub
insb
mov
imul
mov
ja
inc
jmp
sbb
push
decb
xor
pop
xor
lret
enter
or
rcl
xor
outsl
sub
es
pushl
std
in
scas
loopne
stc
mov
inc
in
test
loop
inc
mov
mov
inc
test
std
xor
in
hlt
push
lock
mov
movsl
cs
push
loopne
iret
stc
aaa
int
jle
jo
sahf
jne
iret
js
cmp
cld
dec
and
mov
out
pop
clc
ljmp
sbb
leave
push
inc
push
inc
ja
sub
jg
push
jo
push
mov
sbb
cmp
dec
sub
mov
fnstcw
sbb
cli
js
push
fwait
inc
adc
mov
movsb
divb
mov
inc
and
movsl
push
scas
insl
rcl
das
je
rol
mov
lahf
sub
test
push
or
leave
repnz
jbe
ss
inc
fwait
fs
cmp
insb
push
lods
nop
sbb
or
pop
jmp
mov
pop
add
jl
jecxz
or
daa
xchg
cmp
push
test
pop
sub
jg
xor
jae
into
sub
andl
ret
push
int
dec
xchg
fldt
add
sti
cmp
stos
push
sbb
mov
ss
push
js
das
ret
sti
jno
add
mov
pop
ja
cli
cmpsl
cmpsb
pop
pop
stos
icebp
xor
and
cmpsb
stc
push
enter
dec
lret
flds
cli
cmp
sub
mov
jp
rcrl
inc
call
dec
cli
pop
or
add
sub
hlt
push
fisttpll
jp
or
aad
fstpt
mov
add
xchg
fdivl
out
into
popa
outsb
pushf
or
jnp
xchg
push
jne
mov
sti
aad
mul
pop
stos
inc
mov
mov
sarb
gs
rorl
js
test
repnz
jno
or
mov
mov
stos
xchg
out
mov
and
test
sarl
and
sbb
imul
inc
fs
std
cmp
mov
mov
mov
roll
dec
into
ljmp
aas
gs
stc
dec
ret
and
addr16
out
mov
add
call
pop
xchg
ljmp
lcall
and
inc
push
test
pop
lock
jle
jbe
dec
pop
pop
cmp
cmp
rcrl
pop
dec
inc
popa
mov
clc
movsl
in
jecxz
stc
out
mov
enter
dec
scas
icebp
repnz
fisubrs
xchg
mov
mov
add
sahf
aad
fnstenv
xor
ds
imul
xchg
sahf
mov
outsb
adc
mov
push
push
jmp
pop
or
add
aam
mov
ja
cld
jnp
dec
pusha
nop
adc
andl
inc
rolb
je
ficoms
pusha
or
jmp
jecxz
lea
jmp
push
pop
mov
inc
mov
ja
popa
ret
push
mov
add
les
gs
fisttpll
mov
jno
xor
mov
mov
jle
cmpsb
pop
stos
dec
inc
xchg
pushf
sahf
sub
pop
movsb
loop
mov
cltd
mov
pop
repz
sub
mov
pop
icebp
lcall
fisubs
popf
cmp
pop
xor
out
jp
fcmovbe
xchg
test
ds
cltd
sub
push
in
stos
lods
sub
add
repnz
loop
test
push
mov
sbb
xor
sbb
leave
ja
jno
test
std
jb
jmp
subl
inc
cmp
cltd
incl
xchg
inc
test
xchg
or
inc
jns
mov
adc
xor
jp
not
pop
aas
ret
fdivs
lret
orl
adc
add
lea
in
ficompl
push
shrb
add
je
hlt
jmp
mov
inc
mov
jmp
mov
fucomip
sti
sbb
daa
jns
outsb
dec
jmp
aad
jns
xchg
out
test
insb
int3
int
inc
push
adc
lahf
fldcw
inc
xor
imul
in
add
mov
pop
mov
orb
push
popf
jns
outsl
in
insl
push
add
lea
test
dec
push
in
cmp
mov
sub
jmp
sub
push
popa
test
push
in
test
xor
outsb
test
out
out
fldcw
mov
leave
mov
xchg
sub
cmp
push
xor
ud0
jl
mov
ljmp
jg
loope
cmp
jg
stos
dec
or
push
jg
pop
dec
iret
leave
shl
in
ja
cmc
jbe
mov
jno
jno
pop
mov
shrl
ja
mov
mov
sub
add
and
dec
push
cmp
xchg
std
xchg
inc
mov
adc
jbe
aam
rcll
xchg
out
push
push
push
push
adc
mov
pop
sbbl
out
icebp
dec
mulb
pop
loope
lds
mov
aad
or
jmp
aas
cmp
pusha
pop
mov
imulb
fistps
dec
mov
inc
jb
outsl
stc
pop
lret
xor
adc
jae
adcl
lahf
jae
mov
aad
mov
ret
scas
xor
jl
xorb
mov
mov
js
rolb
cmpsb
inc
aas
mov
jns
fistpl
cmp
mov
ja
sbb
push
inc
clc
cmpsl
pop
imul
les
fadds
lcall
xchg
into
xor
xchg
pushf
xchg
das
sbb
pushf
cmp
cwtl
sub
pop
jge
cmp
stc
cmp
insl
fsubp
and
cld
adc
int3
jg
lds
cmp
mov
push
test
mov
or
mov
aas
mov
lret
xchg
push
test
ffreep
sub
inc
push
sbb
rclb
add
sub
stos
inc
iret
xchg
dec
inc
jl
mov
inc
or
shlb
fstpt
mov
cmp
fnstsw
adc
dec
cmc
inc
mov
ret
jle
push
adc
pusha
leave
xlat
jb
test
stc
fistl
daa
cltd
pop
mov
push
mov
jno
jmp
xlat
imul
cmp
xchg
out
pop
pop
frstor
add
or
pusha
imul
adc
push
dec
ds
add
fldcw
pop
xor
mov
xchg
in
int3
mov
add
test
dec
lods
mov
aas
psubq
xchg
call
enter
aad
sub
xchg
push
push
pop
loopne
ror
cmpsb
leave
popa
adc
fisttps
pop
lods
out
adc
mov
mov
hlt
add
outsb
jae
enter
inc
insl
addl
mov
xlat
and
jae
in
push
add
inc
jle
les
in
das
jno
jecxz
cmp
inc
mov
xor
shl
sbb
jns
push
xchg
push
frstor
in
loopne
mov
xor
decl
cmp
xlat
pushf
xchg
pop
inc
loop
aad
push
arpl
mov
mov
add
das
mov
sbb
mov
mov
popf
pop
inc
popf
or
xchg
cltd
jnp
rcrl
inc
pusha
xchg
mov
push
stos
sbb
inc
int3
jbe
sub
cli
les
daa
cmpsl
pop
mov
mov
adc
or
inc
cmovbe
test
jg
lock
xchg
push
punpckhdq
loopne
mov
ret
in
or
shl
rcrb
data16
sbb
cmpsb
pop
xor
stos
fcmovnu
push
mov
imul
pop
xor
out
adc
nop
inc
jmp
insb
adc
movsl
sub
mov
jae,pn
and
stos
pop
adc
mov
adc
pusha
mul
lods
dec
sbb
inc
xchg
mov
out
bound
test
dec
xor
popf
orb
leave
xor
insb
jns
mov
iret
in
adc
jge
mov
adc
js
aam
mov
fldl
add
add
mov
cmpb
mov
in
mov
push
fcmovbe
lea
jne
adc
ret
fidivrs
add
or
fmul
loope
pop
sub
outsl
fisubs
ret
xchg
or
into
jge
adc
out
xchg
push
ljmp
jl
test
repnz
in
loope
jle
int3
or
js
ss
cmp
fs
jp
repz
pop
pop
mov
xchg
xor
xorb
and
stos
inc
mov
inc
call
mov
rcll
mov
in
inc
insb
divl
push
sti
fnstcw
out
push
or
push
xor
outsb
es
icebp
xchg
jo
mov
lcall
push
movsb
mov
mov
mov
mov
popaw
jae
inc
or
mov
mov
xchg
in
cmp
rol
leave
xchg
inc
mov
inc
subl
outsb
push
out
ror
jbe
adc
jb
cmp
cltd
int3
aas
pushf
xor
adc
sbb
es
and
andb
js
add
arpl
cmp
pop
mov
paddusb
sbb
and
repnz
sub
push
enter
outsb
and
mov
and
and
es
jbe
int3
add
ret
popf
dec
sbb
cmp
dec
ret
jae
add
jp
out
mov
sub
mov
inc
pushf
rep
sbb
repnz
jnp
xchg
sub
test
test
test
xchg
outsb
fcoml
adc
cmp
outsl
lret
lret
sbb
jmp
xchg
cmp
fnstsw
xor
arpl
mov
fisubrs
mov
cmp
sub
pop
fs
rorb
cmp
icebp
mov
inc
enter
inc
mov
test
sbb
std
les
pop
mov
in
adc
xor
shrl
rcr
ss
sti
mov
pop
adc
ret
nop
mov
cmp
sub
outsb
mov
out
inc
push
andl
mov
mov
in
aaa
test
inc
add
test
repz
inc
aaa
jl
arpl
lahf
jle
daa
xor
das
dec
lea
cmc
jno
cli
call
test
cmpsb
popa
pop
cmp
xor
mov
cmp
xor
fsts
push
mov
pop
in
mul
in
cmp
mov
rcll
fcoms
div
insl
out
movsb
lea
sahf
xchg
jecxz
fbstp
int3
lret
popa
adc
dec
pushf
inc
push
mov
cmc
jnp
xchg
cwtl
add
dec
hlt
lods
cs
dec
jmp
sar
pop
mov
dec
shlb
adc
cmp
mov
pusha
dec
jle
jmp
add
mov
pop
cli
jmp
sbb
popf
sbb
xchg
jp
out
add
mov
mov
fcomps
xchg
out
sbb
push
jp
pop
iret
mov
mov
push
scas
inc
stos
ds
lds
mov
mov
mov
icebp
lock
and
mov
fcompl
or
les
loopne
xchg
jno
repz
push
jle
or
je
pop
mov
ja
cltd
xchg
push
cmp
cmp
push
cmc
mov
jl
mov
lods
jle
jnp
push
loope
cmp
mov
loop
xchg
mov
xor
mov
push
xchg
inc
xor
sbb
cli
test
lret
ss
xchg
jge
popf
or
cmc
loop
test
int
pop
push
std
data16
in
adc
icebp
lods
and
push
push
and
push
push
pop
out
add
sbb
mov
adc
into
mov
pushf
rorb
movsl
shll
pop
xor
int3
in
add
sarb
fwait
in
inc
sub
cld
fldl
adc
lret
sub
daa
outsl
pop
outsb
movsb
push
xor
mov
dec
cld
fcompp
sahf
adc
and
inc
inc
loopne
adc
cmpl
in
mov
adc
dec
jg
lea
and
adc
jns
loope
arpl
push
and
outsl
rcll
lret
push
scas
xlat
icebp
sub
iret
call
adc
lret
lock
rcrl
rorb
inc
sub
and
inc
shll
movsb
inc
sar
add
sbb
int
or
cmp
adc
fdivr
dec
icebp
xchg
js
leave
cmp
sub
cmpsb
pop
lea
push
xlat
movzbl
cmp
mov
or
jl
pushf
cmp
sub
sub
sbb
sub
xchg
push
xchg
call
aaa
imul
hlt
pop
dec
dec
out
pop
xchg
mov
bound
lret
mov
fwait
ret
das
ret
pop
stos
into
cmp
pop
cltd
sahf
mov
sub
cmpsb
mov
sub
test
push
sub
insb
mov
enter
iret
dec
add
mov
dec
dec
dec
add
out
test
or
adc
add
cmpsb
add
cmp
ret
fucomi
rorb
inc
jns
in
stos
jbe
lcall
cmp
inc
shll
push
sbbb
cmp
cmpsb
pop
insb
pop
cld
or
lcall
in
xor
les
loop
in
push
jp
data16
pop
mov
push
cwtl
aam
or
dec
addr16
sbb
cltd
jl
cwtl
je
sub
or
or
outsb
sub
lcall
std
call
out
in
pop
aaa
jnp
dec
xor
movsl
sub
stc
in
jb
insb
neg
adc
fidivl
sgdtl
mov
and
scas
fstpl
aad
jne
sub
mov
lret
inc
inc
cmc
push
sub
sbb
jecxz
loop
dec
or
js
mov
icebp
pop
cmpsl
push
cmp
xchg
repz
loop
xchg
pop
pop
fs
fs
dec
ljmp
pavgb
sbb
dec
outsl
je
outsb
mov
push
push
xlat
xor
subl
jle
movsl
mov
inc
int3
jge
es
jnp
sahf
push
lcall
outsl
aad
pop
sbb
xchg
mov
mov
mov
jle
lret
repnz
sub
loope
mov
test
test
outsl
movsb
clc
iret
out
cmp
cmp
xor
leave
inc
daa
gs
sbb
in
stc
xlat
fisubrs
jp
stos
push
dec
scas
rorb
popf
xor
pop
cmp
pop
xor
testl
xchg
rcl
cmp
pop
repz
push
incb
cltd
xchg
sub
imul
icebp
fidivl
andl
jbe
xchg
xor
daa
lods
xor
jl
lods
push
push
leave
pop
stos
cwtl
hlt
enter
mov
subl
mov
fdivrs
push
repz
sub
inc
lods
mov
sbb
or
imul
cltd
loopne
push
ja
daa
das
daa
adc
adc
cmpsl
outsb
mov
pop
hlt
out
lods
stc
mov
nop
mov
stc
inc
xchg
das
call
sub
pushf
dec
mov
pop
inc
outsl
push
imul
jecxz
mov
aam
repnz
lcall
popa
adc
mov
arpl
or
scas
xchg
cmp
mov
out
adc
sub
jge
cmpsb
and
pop
mov
aaa
cmp
and
sbb
inc
cmpl
and
sub
push
mov
pop
cmp
aas
xor
pop
inc
sbb
add
adc
subl
adc
or
sub
aad
cmpsb
push
insb
inc
sub
cmp
es
fldcw
adc
fistpll
in
dec
adc
adc
sbb
lcall
sbb
xchg
jp
dec
sub
popa
insl
pop
insb
push
inc
and
subl
movsb
xlat
out
mov
jge
out
out
loop
mov
mov
jnp
cmpsl
xlat
fsubr
dec
sbb
int3
test
out
fs
xchg
subps
pushf
xchg
in
mov
or
gs
scas
lahf
cmp
add
xchg
imul
inc
dec
arpl
xor
dec
leave
fdivrs
xor
inc
xchg
mov
dec
xor
loopne
clc
int
mov
cmp
sbb
imul
jp
out
and
ja
adc
and
sub
call
ror
sub
cmp
sub
mov
ss
sbb
mov
orl
stos
pop
cltd
cltd
shlb
jge
dec
xchg
decl
sbb
xor
sub
pusha
mov
ror
nop
cli
loop
mov
outsb
jns
popf
fcomps
nop
lods
mov
in
and
out
sbb
pop
shlb
adc
test
mov
or
pushf
jg
rol
repnz
cmpb
push
mov
cli
and
mov
mov
xlat
mov
fs
sbb
push
mov
cmp
out
xchg
xchg
outsb
adc
jb
cld
daa
adc
xchg
icebp
or
out
addr16
pop
je
dec
mov
loope
int3
jmp
or
xor
pop
jns
mov
pop
rorl
push
xorb
add
adcl
or
cmp
push
cmpsl
mov
adc
addr16
inc
cli
xlat
xor
xchg
in
fcompl
pop
aaa
mov
lret
in
xrelease
xor
dec
roll
xchg
rcr
fcomi
xchg
ret
in
cltd
and
shlb
cmp
scas
add
and
jp
insl
pusha
and
jb
or
iret
xor
test
mov
aad
test
jne
cmc
dec
ss
mov
ds
dec
jb
cmp
jnp
jle
das
sbb
inc
ja
sub
cmp
jbe
cmp
push
sub
jae
shrl
push
fdivrl
sbb
or
sti
clc
add
mov
inc
mov
inc
cld
or
insl
or
out
icebp
je
adc
test
sub
fisubl
xor
and
inc
sahf
in
or
lret
mov
sub
and
sub
arpl
out
test
xorb
cld
sub
sarb
mov
jmp
push
paddq
sbb
divb
or
out
mov
adc
sahf
cmp
ret
pop
mov
add
pop
mov
in
and
mov
sbb
add
std
add
ja
cli
leave
mov
std
fidivs
jno
lock
xchg
rclb
adc
cmp
mov
cli
jno
push
fwait
lods
in
stos
and
ss
aas
ss
mov
rclb
pop
and
mov
xor
sarl
sbb
jmp
mov
push
fwait
out
jno
pop
negb
mov
adc
ljmp
xor
pop
rolb
push
jmp
out
outsl
cmp
dec
adcb
daa
jb
ljmp
or
inc
add
imull
push
pusha
orl
int
pop
jns
mov
jmp
add
lea
dec
jnp
and
ret
cltd
lods
inc
arpl
jle
xor
shl
mov
xchg
push
add
push
adc
pop
jae
push
pop
fcompl
fldcw
push
and
out
cmpsl
leave
push
div
rcl
repz
xor
movsl
fldcw
repz
aam
lds
pop
xor
stos
and
push
xchg
inc
pushf
jno
add
sub
pushf
cmp
mov
mov
mov
fildll
and
sbb
xor
xchg
rclb
call
cltd
mov
xchg
rcl
mov
lahf
push
jo
fimuls
mov
popf
push
push
rorb
mov
mov
jmp
sub
add
jnp
jno
movsb
inc
shlb
xchg
sbb
iret
dec
mov
test
loope
cmp
insb
and
lcall
loope
movsl
and
mov
rcrl
or
mov
xor
pop
aam
repnz
ljmp
punpckldq
movsl
sbb
cltd
in
cltd
or
fs
add
lret
out
outsb
and
mov
insb
daa
dec
out
shrl
dec
and
gs
icebp
clc
daa
sbb
dec
push
push
mov
nop
rclb
adc
mov
mov
mov
out
cmp
and
shlb
out
and
loop
movl
xchg
dec
and
xchg
rol
inc
nop
sub
xlat
jb
mov
mov
or
mov
enter
mov
out
test
dec
fsubs
add
mov
push
dec
in
push
jmp
repnz
pop
sbb
lds
mov
sub
sub
fsubrs
mov
inc
fldt
icebp
mov
add
insw
push
aas
loopne
out
sub
cs
or
sti
dec
pop
in
out
inc
hlt
pop
mov
fldl
inc
bound
out
pop
xchg
out
loope
loopne
push
sub
adc
loope
out
push
pop
mov
fiaddl
bound
sti
pusha
jg
or
hlt
xchg
inc
jecxz
sub
inc
or
idivl
fidivrl
adc
add
dec
out
inc
inc
adc
add
ss
add
in
test
lret
and
mov
movaps
jge
xchg
xchg
mov
pop
pop
daa
xor
mov
sarb
dec
xchg
push
jne
shrl
dec
cltd
ds
addr16
pop
xor
arpl
mov
lret
cmp
jb
dec
imulb
lds
insl
push
aaa
lahf
rcr
jb
xchg
adc
in
mov
aad
fdivr
leave
pop
aad
lret
repnz
sub
inc
inc
cmp
icebp
mov
mov
jge
in
pop
aad
int3
ja
test
call
lea
lods
cmp
rorb
int3
lret
call
test
mov
xchg
cmc
push
jmp
pushf
jno
loop
cmp
dec
fistpll
loop
xor
aaa
orb
pop
cmp
popa
adc
je
mov
mov
lods
pop
and
lret
in
push
add
loope
push
inc
or
pop
dec
and
mov
aas
dec
ljmp
xlat
test
adc
std
flds
cltd
cmp
mov
fcmove
dec
pop
pusha
or
inc
fadds
arpl
and
inc
push
or
xchg
fabs
sub
add
xchg
mov
popa
push
pusha
sub
cli
sahf
inc
push
mov
das
aad
sbb
xor
inc
xchg
out
scas
rcrl
sub
repnz
xchg
push
dec
out
fidivrl
nop
mov
enter
add
ja
jnp
jae
jns
test
xor
mov
into
sub
cmp
xchg
into
pop
xor
ljmp
cld
loop
out
sub
dec
fdivl
arpl
popa
mov
sub
cmpsb
pop
mov
inc
jp
mov
loop
mov
test
lods
imul
push
aaa
push
fiaddl
cmp
out
xchg
cltd
addb
pusha
adc
pop
clc
cwtl
stc
insb
into
andl
cmpsl
or
ret
adcb
jns
mov
add
repz
aad
mov
jnp
int
jbe
and
jno
push
lahf
sbb
sbb
add
xchg
out
jle
add
fnstenv
pop
outsl
lahf
sub
mov
jmp
dec
enter
mov
lahf
aad
test
cld
out
scas
push
ror
cs
pop
adc
loop
roll
cmp
orl
pop
dec
mov
pop
pop
push
mov
lds
pop
icebp
scas
sbb
jg
add
push
mov
int
sbb
adc
andb
bound
mov
int3
mov
xor
push
ret
leave
mov
dec
roll
out
fs
lock
fwait
leave
aas
xor
out
or
in
jl
sti
adc
adc
popf
movsl
aas
and
mov
sahf
test
mov
scas
les
pushf
clc
mov
xchg
pop
loope
int3
pop
adc
and
sub
push
ss
mov
sub
cmpsb
mov
mov
xchg
clc
test
or
dec
mov
gs
bound
loope
dec
int3
scas
aam
xchg
add
push
adc
movsb
sub
inc
or
hlt
arpl
mov
push
lds
mov
inc
adc
push
test
cld
xchg
cli
inc
mov
sbb
in
xchg
bound
adc
pop
es
adc
addr16
cmpsl
data16
push
sbb
or
cld
mov
mov
fcmovnbe
sbb
adc
mov
jg
fwait
in
fdivs
pop
mov
push
je
cwtl
push
stos
scas
push
jge
mov
stos
adc
outsb
cltd
xlat
jne
enter
or
stos
push
cmp
loope
cmc
jecxz
popf
pop
fistpll
cmc
shrb
stos
push
sub
sub
add
or
lret
add
sub
xlat
mov
push
loope
mov
cmp
sbb
mov
es
mov
mov
mov
test
push
xor
jb
inc
inc
push
dec
adc
insb
xchg
lcall
push
mov
cltd
dec
add
fucomp
sub
xchg
inc
jno
ret
adc
cmpsl
imulb
sti
xchg
push
int
stc
arpl
dec
scas
jne
aaa
ja
mov
movsb
sbb
movsb
cmp
in
push
sahf
jae
xor
adc
aad
aaa
in
mov
fistps
lds
mov
push
dec
sar
call
add
dec
in
xchg
jnp
ffree
push
in
imul
mov
pop
xchg
sbb
clc
int
cmpsl
push
int3
popa
push
out
mov
mov
loopne
aam
push
lcall
push
and
cltd
cmp
or
inc
mov
loopne
out
jg
add
pushf
and
cmp
lea
xlat
addr16
lock
pop
je
dec
imul
xchg
jp
ss
lods
clc
xorl
jnp
sahf
fistpl
push
rcrl
pop
ror
in
jb
dec
int
mov
leave
inc
xchg
fs
sub
hlt
mov
das
incl
rolb
push
sbb
push
add
and
and
sub
fistpll
clc
stos
jp
xchg
pop
pop
mov
xchg
lcall
cwtl
mov
lret
cld
loop
and
insl
hlt
mov
dec
jmp
jae
xor
xor
out
xor
xchg
popf
out
fmuls
pop
or
je
inc
addb
push
dec
std
shl
push
pop
negl
ja
aam
push
negb
jb
pop
sbb
mov
inc
stos
cli
dec
dec
cmp
cmp
pop
push
sub
mov
es
lds
iret
mov
mov
divb
jle
push
xor
mov
in
sub
stos
ss
and
sbb
cltd
subb
push
scas
and
cli
fistpll
mov
inc
and
pop
xor
cmc
inc
cwtl
push
js
pop
scas
jns
dec
push
pop
gs
test
into
repnz
imul
pop
push
test
dec
enter
mov
aaa
pcmpeqb
repz
div
popf
scas
in
cld
pop
inc
or
adc
xchg
pop
fsubrp
mov
xchg
adc
movsl
jmp
aaa
addr16
dec
scas
inc
mov
int
aas
cmp
push
and
pop
call
dec
inc
jne
adc
enter
jae
imul
jns
push
fcoml
dec
dec
fisubs
cmp
jae
and
mov
xchg
adc
inc
adc
out
adc
and
out
aas
pop
mov
je
adc
ss
jmp
push
sar
adc
fidivl
or
mov
dec
xchg
cmp
pop
lods
fsubs
cmc
mov
subps
adc
andb
pop
jecxz
daa
mov
gs
xchg
sti
call
imul
or
pop
aas
shl
pop
adc
add
lods
divb
int
jne
add
arpl
addr16
je
push
pop
ja
inc
into
cld
mov
in
bnd
mov
push
ss
jno
loope
mov
add
ficoms
data16
or
pop
in
jnp
and
insl
dec
jecxz
pop
je
js
jns
repnz
cmc
xchg
insb
pop
and
lods
inc
xor
faddl
aam
sbb
mov
cmp
push
loop
push
ret
stc
add
xchg
dec
xchg
test
pop
leave
pop
pop
jae
and
pop
lcall
mov
mov
inc
mov
repnz
sub
inc
jp,pn
inc
pop
jbe
sti
les
xchg
bswap
pushf
mov
mov
aaa
sub
push
in
call
cmc
cmp
lahf
sub
cmp
cwtl
ljmp
sub
pop
jmp
fcoml
mov
and
jo
lods
jbe
and
scas
pop
inc
mov
int
fcoms
xor
out
adc
xchg
cmc
imul
xor
pusha
fisttpll
lods
mov
dec
push
outsb
lods
rolb
add
mov
pushf
pop
dec
addr16
jl
lcall
sti
lods
mov
push
jle
fs
es
imul
iret
fsubrs
sbb
jmp
bound
orb
sub
into
scas
mov
xor
add
ja
aad
cltd
jns
in
inc
inc
in
inc
jae
shll
jne
and
pop
mov
xchg
clc
es
xchg
bound
pop
ljmp
hlt
cltd
and
movsb
adc
inc
icebp
inc
push
sbb
test
jmp
mov
cmovp
jno
mov
or
notb
cmp
js
pop
cmp
js
out
lret
cmp
rclb
and
loopne
int3
sahf
xchg
push
add
jne
cmp
std
adc
loop
test
pop
dec
add
pop
jp
ficoms
push
and
lea
xchg
push
add
push
pop
int
push
jmp
adc
pushf
notb
jae
inc
jg
pop
xchg
push
mov
std
push
in
imul
shl
jo
ljmp
movsl
sub
arpl
fwait
jecxz
dec
adc
pop
xor
inc
lea
mov
loop
adc
add
sub
loope
inc
inc
div
sbb
cld
enter
mov
sub
std
xor
in
cmp
sub
jno
mov
mov
divl
mov
cmpsb
outsl
shl
scas
fucomp
imul
push
sub
mov
mov
popf
sub
rcrl
add
xor
mov
cmc
push
push
sarb
adc
adc
jo
addr16
movsb
pop
or
mov
test
jl
loopne
jne
xchg
adc
stos
jle
jne
xchg
add
pop
cmpsl
stos
cmp
inc
fstl
imul
fbstp
je
push
in
mov
int
ret
pop
loop
movsb
aad
sub
sahf
shlb
lods
inc
push
pop
lcall
rcrl
mov
cmc
stos
call
insl
ret
cmp
bnd
mov
xchg
cmc
and
jp
sbb
data16
enter
imul
mov
inc
xchg
pop
cli
sub
mov
clc
or
xor
outsb
cmp
in
mov
sti
cmpsb
aaa
xchg
xchg
inc
pop
jle
in
inc
scas
imul
inc
sub
out
or
mov
ficoml
imul
xchg
pop
add
hlt
inc
jp
dec
ficoml
clc
fdiv
inc
cmp
popf
mov
or
pop
jae
adc
mov
xchg
xchg
jg
movsb
pushf
pop
fsubs
test
mov
lret
and
mov
enter
jns
std
in
mov
data16
das
mov
fbstp
mov
fsubrp
test
inc
adc
add
inc
mov
push
jbe
aaa
jmp
scas
pop
int3
and
inc
out
and
sbb
add
xchg
cltd
fcmovu
adc
clc
and
mov
rolb
insl
xchg
push
jg
rcrb
pop
out
xor
aad
addl
jecxz
ror
loope
in
sub
jnp
pop
mov
int3
pop
jle
fidivrl
test
inc
scas
pop
xchg
mov
pusha
jge
add
das
shrd
aam
mov
cwtl
roll
cmp
in
inc
stos
add
popa
push
xor
cmpsl
popa
mov
mov
testb
mov
jb
and
fdivs
adc
xor
sbb
sbbb
je
rol
fldenv
sarl
sar
xorb
pop
xor
pop
xchg
mov
sbb
jbe
filds
push
popf
mov
gs
lods
ja
mov
clc
data16
pop
lock
je
add
aaa
flds
jg
push
adc
pop
lea
insb
add
mov
and
pop
in
jnp
ret
stos
push
adcb
int
fsubrl
push
out
lods
test
test
dec
cmp
ja
pop
add
scas
xchg
aad
add
popf
mov
mov
adc
sub
sub
fadds
dec
xchg
pop
or
arpl
mov
sub
push
int
mov
aas
mov
clc
xor
loopne
or
dec
cltd
push
cmp
ljmp
movb
cld
mov
mov
inc
test
push
and
call
mov
stc
imul
repz
pop
fcoms
add
hlt
cmp
lds
subb
cltd
push
mov
out
mov
mov
or
jns
mov
mov
inc
pop
jp
push
mov
ja
pop
data16
dec
lea
loop
xor
in
adc
push
out
adc
js
cmc
jle
movsl
cmp
cltd
aad
add
rorb
pusha
fcmove
add
or
sbb
inc
push
sub
dec
jmp
scas
push
or
sub
das
adc
stos
push
xchg
sub
lret
les
das
adc
hlt
in
lret
imul
jle
notb
push
lds
xor
xchg
sti
push
jne
mov
aam
jl
pop
xor
inc
add
dec
hlt
and
and
dec
add
adc
dec
das
pop
scas
imul
xor
inc
push
fistps
nop
adc
and
mov
mov
movsb
push
xchg
fidivrl
sti
cmpsb
xor
sbb
mov
jno
jle
adc
cmpsl
popf
out
mov
fmull
lret
mov
gs
aaa
mov
xchg
mov
arpl
xor
aaa
sbb
lcall
cmpsl
scas
lods
lea
std
fstps
call
dec
inc
cwtl
les
sti
cmp
add
mov
sbb
xchg
push
xor
fsubp
sbb
xchg
inc
imulb
and
call
sub
fldl
sub
xor
jb
andb
dec
or
dec
add
xchg
and
das
lea
scas
jle
jecxz
sbb
and
xor
dec
test
jmp
mov
dec
stos
cli
pop
mov
ds
pop
jl
mov
lock
jae
jp
xchg
xchg
clc
loop
dec
jae
imul
jg
out
inc
pop
mov
addr16
add
aam
nop
xchg
pop
mov
cltd
les
xlat
in
and
fucomi
es
xor
mov
out
jns
xchg
dec
adc
stos
add
out
out
ljmp
mov
or
iret
jmp
icebp
and
repz
push
aas
cmp
decl
dec
mov
lcall
je
xor
fs
sub
sub
push
jecxz
dec
sub
jne
lds
sub
dec
pop
cmp
pushf
jbe
orb
pop
fwait
push
sti
and
pop
iret
outsb
cmp
and
mov
mov
mov
mov
and
ret
add
inc
push
fmuls
fadds
fnstenv
lret
addb
out
mov
pop
inc
imul
aaa
inc
mov
mov
adc
ret
push
cmp
cmp
jecxz
les
add
push
adc
sbb
ror
jno
pop
out
add
mov
xchg
jb
lods
cmp
gs
mov
stos
mov
outsl
or
mov
sarb
inc
sub
dec
pop
pop
cltd
out
cmp
ss
fimuls
pop
lret
rclb
in
pop
es
push
test
pushf
cmpsl
cmp
mov
dec
push
sbb
testb
js
call
in
insl
dec
test
push
pop
sarb
aas
mov
inc
into
les
and
jbe
cltd
into
push
stc
inc
adc
inc
fisubs
add
pop
rorl
loop
sbb
mov
fs
xor
or
fistpll
push
cmp
pop
pop
inc
mov
jne
loopne
pop
and
fucomip
imul
imul
ds
dec
icebp
sub
jecxz
mov
push
mov
pop
das
gs
sbbl
xchg
in
clc
jge
cs
out
sbb
mov
xor
push
popa
gs
rcl
cmpsb
outsl
popa
fdivs
cld
jp
dec
icebp
add
sub
inc
and
mov
popf
mov
popf
cli
ret
ljmp
push
test
das
dec
and
and
jbe
hlt
inc
fildll
aam
je
sbb
inc
test
jno
adc
pop
xlat
adcb
lds
push
lcall
mov
adcb
fdivl
cmp
loop
mov
sub
dec
cmpsl
into
scas
and
pop
das
xor
subl
mov
mov
adc
and
movl
xchg
cli
aas
cmp
rcrl
sbb
repnz
push
cmp
dec
ljmp
repz
or
jmp
xchg
mov
repz
or
inc
fcoml
leave
sbb
popf
sbb
dec
xchg
into
cwtl
ja
sbb
cmp
jae
jge
and
push
or
call
inc
xor
jl
dec
lcall
lahf
out
inc
in
cmp
and
out
ss
xor
mov
mov
cmp
sbb
jl
stc
push
imul
rcrb
ficoms
lret
aaa
test
ret
sub
cltd
mov
inc
mov
fs
lret
jmp
rorl
je
push
xchg
jns
leave
sahf
sbb
dec
cmc
inc
push
cmpsb
cmpsl
or
in
cmc
es
repnz
mov
pop
cmp
inc
gs
sahf
loopne
test
mov
push
fs
scas
sbb
stos
cli
cbtw
adc
add
jle
xchg
mov
in
push
sbb
or
out
jb
call
dec
xor
repz
lret
or
repnz
js
fcmovbe
dec
dec
xchg
repnz
or
inc
mov
pusha
fiaddl
je
dec
jge
cli
xchg
xor
nop
inc
stos
stos
ss
pusha
mov
fisubs
stc
jp
rol
inc
mov
pop
cmpsb
in
add
mov
push
or
fimuls
pusha
mov
hlt
lret
imul
add
mov
mov
in
fisttps
ljmp
push
lret
cli
cmp
dec
cmp
pop
add
push
in
fcoms
scas
jecxz
test
insb
scas
or
pop
push
dec
inc
sbbl
fisttpll
cmp
imull
fucomi
addr16
jae
sub
adcl
mov
dec
cli
or
sub
jl
jmp
inc
into
add
movsb
sub
loope
nop
sbb
cmp
dec
lock
mov
inc
xchg
sub
mov
ficoms
add
aas
ds
arpl
sarl
ljmp
ja
aad
add
mov
xchg
sahf
pop
and
dec
scas
f2xm1
dec
dec
add
sbb
xor
mov
clc
jle
sbb
push
push
xchg
fstpl
mov
sub
les
xor
fsqrt
mov
lock
in
add
mov
das
and
fbstp
fldl
sbbb
sbbb
test
int
aam
jo
std
test
faddl
int3
leave
iret
shlb
leave
aad
jecxz
jb
inc
push
dec
jno
dec
push
jl
sub
pushf
sarb
inc
daa
hlt
inc
pop
jb
mov
pop
inc
inc
into
pop
mov
and
outsb
mov
ljmp
add
mov
repnz
lock
push
hlt
add
int
mov
add
mov
fidivs
push
lea
out
jecxz
in
xchg
mov
or
xor
dec
aad
loope
and
out
cwtl
cmp
cmp
xchg
or
xchg
cmp
mov
mov
ljmp
andl
andl
add
adc
push
fisttpll
iret
xchg
dec
repnz
loop
jg
imul
aad
hlt
sbb
shlb
lcall
add
jmp
sub
in
and
addr16
arpl
sub
ja
lahf
test
mov
in
cmpsl
js
jae
movl
pop
out
push
cltd
dec
imul
cltd
adc
in
outsl
in
adcb
lret
xor
rorb
adc
aam
push
sbb
and
xlat
xchg
jle
dec
xchg
je
inc
push
imul
xchg
les
and
dec
sub
loope
leave
bndldx
mov
dec
dec
or
mov
mov
std
jle
xor
jae
dec
sub
mov
shrb
sub
cmpsb
js
xchg
inc
adc
scas
les
popa
sbb
je
sti
in
pop
daa
and
loopne
xor
adc
in
addb
enter
inc
in
mov
pop
adc
push
in
shl
std
mov
lahf
rcr
scas
sub
xchg
pop
or
divl
push
test
and
outsl
lods
scas
xor
fucomip
xchg
push
push
ret
and
rclb
and
pop
ja
clc
shlb
cvtps2pi
or
xchg
inc
enter
add
mov
inc
or
movsl
adc
fucomp
loopne
movsl
vsqrtpd
leave
popf
clc
fistps
jl
and
pushf
data16
insl
xchg
xor
clc
mov
mov
inc
icebp
lock
scas
cmp
xchg
or
mov
jo
pop
lahf
mov
xor
push
enter
inc
arpl
sbb
fisubl
loopne
and
dec
repnz
jb
sub
adc
mov
stos
push
add
test
cmp
mov
add
inc
int3
push
shlb
aam
pop
xchg
iret
insl
push
leave
mov
ljmp
ljmp
loopne
hlt
add
xchg
sub
jbe
xchg
pop
outsb
int
stc
test
mov
inc
out
and
fidivrs
and
shl
xorl
push
pop
sbbb
push
adc
sub
xchg
cmp
jmp
xchg
cmpsl
inc
sbb
movsl
js
xor
mov
cmp
adc
loop
sahf
push
sub
shll
sub
addb
dec
pusha
dec
mov
mov
xchg
cltd
xorl
push
lock
bound
mov
adc
outsl
xor
and
int
sbb
dec
xor
pop
insl
popa
fisttpl
inc
aas
loop
xchg
lods
cs
in
adc
cltd
fwait
inc
mov
mov
fstps
fnsave
push
add
jg
out
sarb
sbb
jbe
pop
add
mov
repz
pushaw
insl
mov
in
dec
popf
cwtl
push
movsb
sbb
cmp
es
outsl
mov
fisubs
nop
sbb
sti
xchg
out
cmp
add
rolb
sti
out
mov
imull
bnd
and
or
lahf
lret
out
fdivrl
cmp
scas
icebp
mov
lods
into
nop
pop
aam
jg
mov
xchg
sub
inc
dec
mov
scas
mov
idiv
imul
mov
imul
sbb
cltd
cmp
test
dec
fwait
addr16
je
cs
or
idivl
rorl
or
ljmp
push
das
sbb
sbb
sub
mov
push
sub
je
popa
insb
sbb
das
dec
bound
fwait
movsl
xchg
xchg
sbb
clc
arpl
sub
jo
scas
and
ret
sahf
aaa
call
popl
out
fdivrs
mov
inc
xor
repz
mov
sbb
movsl
je
jbe
xchg
leave
mov
mov
xor
aas
popa
mov
or
cmc
add
push
cli
loopne
pusha
hlt
rolb
fisttpl
clc
lret
ja
push
test
jnp
pushf
das
dec
xor
loop
and
test
sub
sti
mov
inc
lods
int
sbb
mov
mov
pushf
scas
in
lcall
pushf
les
push
scas
push
loop
aad
test
mov
lret
int3
push
aas
jno
adc
cmp
xor
cmp
loop
scas
mov
add
jo
pop
jmp
sarb
out
push
stos
xchg
loop
mov
fwait
in
in
jg
pop
mov
push
pushf
inc
rcl
sub
sbb
rol
pop
stos
cs
insb
mov
imul
cltd
out
clc
lret
mov
xor
test
dec
test
adc
sub
sub
add
outsb
ljmp
gs
push
mov
lea
out
imul
cmp
inc
inc
loop
das
loopne
sarl
push
xor
jg
idivl
insb
fistpl
mov
and
frstor
pop
xchg
push
xor
je
call
cmp
mov
mov
xor
cmc
push
insl
std
out
pop
xchg
inc
xchg
mov
push
xchg
xchg
icebp
cmp
popf
or
sbb
pop
clc
aam
cmpl
std
rol
dec
pop
push
and
imul
mov
imul
xchg
push
icebp
push
mov
jb
fnstsw
sub
enter
xor
xlat
gs
mov
pop
andl
mov
pop
in
int
xor
xor
cld
mov
std
jae
sti
cmp
sahf
out
lret
mov
jle
push
mov
lret
andl
push
pusha
repnz
mov
jns
lds
out
pusha
jmp
scas
enter
push
jge
lcall
outsl
cmp
loope
repz
inc
sbb
addr16
les
cmp
cwtl
sbb
je
and
push
xor
or
out
sbb
aam
test
mov
cmp
int
mov
adc
fidivs
fs
mov
test
jg
pop
dec
ret
dec
out
and
adc
pop
add
in
add
in
icebp
mov
fbld
cltd
pop
das
loop
pop
mov
int
mov
jbe
je
add
sub
orb
int3
aad
cltd
movsb
fs
xor
andl
adc
cmpsb
mov
pop
in
leave
in
push
xorl
mov
mov
cmp
jp
cmpsb
cmp
inc
mov
dec
mov
and
add
or
adcb
movsl
mov
and
jmp
and
in
lods
insl
jae
add
dec
movsb
test
xchg
pop
popa
cltd
test
or
pop
out
sub
cmp
jle
mov
xor
sub
push
jmp
dec
sub
dec
add
mov
xor
aas
mov
mov
inc
jl
cld
sub
push
in
jge
and
push
pop
shlb
and
jmp
dec
sbb
lahf
arpl
mull
or
inc
les
lock
push
adc
sub
pusha
std
in
pop
jl
out
or
les
pop
xor
sub
inc
sub
dec
mov
mov
mov
stc
cs
stos
lahf
mov
hlt
add
sbb
and
dec
sub
jl
insb
insb
dec
dec
sub
and
outsb
xor
cmp
jae
push
or
mov
jg
dec
mov
cmp
cld
cmp
sbb
adc
sti
adc
call
sbb
xor
jp
sub
dec
push
inc
pop
dec
rcrl
xorl
fnsave
fsubl
lret
xorb
adc
outsl
lods
clc
xor
aam
add
jbe
pusha
jecxz
sti
notb
or
pop
jne
mov
lock
jnp
inc
cmp
cmp
xchg
xchg
xlat
and
sbb
sub
pop
loope
sbb
data16
sbb
mov
mov
scas
pop
jp
or
lods
test
aaa
icebp
out
aad
push
ja
sub
and
jnp
lahf
nop
pop
sbb
test
je
ss
cwtl
pushf
push
hlt
cwtl
stos
fmuls
adc
inc
dec
push
in
add
sbb
push
cmc
sub
lock
jbe
push
add
cmp
add
out
mov
test
ret
aaa
pop
mov
sub
xchg
lret
add
jmp
test
into
push
xchg
pop
xchg
pop
dec
data16
fistps
and
inc
jle
gs
test
int
xor
outsb
leave
repz
sbb
loope
out
adc
test
sbb
push
mov
test
addr16
cmp
jle
jl
xchg
jno
mov
in
and
dec
cmp
ret
hlt
call
ljmp
or
cmp
add
push
mov
pop
pop
push
or
fucompp
and
je
dec
sbb
jo
test
retw
shrb
and
out
fs
add
sub
push
cmpsl
push
test
shrb
push
inc
and
mov
cmp
push
das
aaa
push
stos
pop
fdivl
push
mov
shll
test
sbbl
fst
inc
push
xor
add
test
xchg
lds
cmpsl
jmp
sar
add
push
hlt
or
clts
pop
rclb
mov
cmp
jge
and
stc
jbe
ret
cmp
fcmovu
cmp
mov
into
movsl
cld
mov
arpl
jecxz
adc
mov
hlt
ss
xor
mov
je
and
sub
je
inc
sbb
lea
push
mov
cmp
or
jo
repnz
gs
int
leave
push
dec
outsb
pop
lods
xlat
js
fiaddl
and
sub
xor
pop
insb
cmp
jo
xchg
sbb
stos
in
lods
xchg
mov
jge
cltd
stos
clc
int3
push
popa
push
mov
out
mov
fmuls
mov
dec
ds
mov
stc
fs
jnp
pop
push
or
lret
stc
leave
stos
or
jo
sbb
loopne
scas
inc
push
jb
cmp
xor
ja
mov
cwtl
adc
popf
inc
fnstcw
push
stos
hlt
mull
push
js
je
sti
jp
gs
cli
or
jp
testl
pop
jmp
int
sbb
dec
cmp
xor
push
cmc
test
jg
out
add
iret
mov
outsb
daa
jo
jg
xchg
xchg
sub
lds
lahf
lods
stos
and
cmpsl
out
pop
aas
jno
cmc
inc
or
xlat
and
sub
jg
xchg
punpcklbw
mov
iret
scas
into
lret
mov
adc
and
dec
les
int3
das
cmp
sbb
addl
xor
push
pushf
fcmovu
mov
outsb
test
push
pop
push
dec
mov
pop
jne
in
cli
stos
outsb
jno
cltd
pop
in
rcrb
sahf
dec
pop
cli
outsl
mov
xor
pop
icebp
fcmovnb
testl
jb
cmp
fsts
push
aad
push
shl
inc
fimull
fwait
inc
iret
pop
mov
fldenv
inc
fstps
push
shrb
mov
mov
mov
js
mov
aam
lods
movsl
mov
jns
push
and
stos
pop
scas
lret
push
scas
or
outsl
adc
aad
jae
cltd
clc
leave
mov
shrl
xor
adc
cmpsb
cmp
dec
cmpsl
fldl
mov
int
lahf
add
lret
mov
decb
xchg
push
mov
pop
ljmp
lods
cmp
lods
test
mov
roll
add
scas
mov
loopne
fadds
stos
adc
cmovne
pop
cmp
jns
fstpl
push
mov
lahf
roll
or
mov
push
cmp
fnstenv
fdivrp
sbb
sbb
fdivl
pop
lcall
fdiv
popf
lock
and
test
sbb
inc
scas
imul
fs
addr16
xor
push
mov
aad
int3
or
popa
push
fsub
scas
dec
xchg
fsubl
push
loope
or
addr16
cmpsl
test
dec
xchg
mov
dec
loop
in
xchg
aaa
sti
pushf
mul
dec
cs
pop
ja
inc
inc
pop
ss
ret
mov
call
test
lret
and
add
sub
fistl
mov
adc
stc
push
test
lock
xchg
mov
mov
cld
int3
xor
push
daa
cmp
fs
sub
mov
test
push
bound
ds
xchg
sbb
cmp
stos
jno
jno
xchg
mov
push
or
pushf
loopne
jno
jp
jno
xor
aad
iret
js
xchg
mov
push
sbb
cmp
pop
mov
std
push
dec
cli
adc
fsub
test
dec
out
ret
pop
mov
pop
jnp
and
loope
shl
push
popa
xchg
ja
rorb
dec
bound
notl
js
sbb
mov
xor
cmp
ss
inc
pop
pop
loope
jg
std
adc
dec
dec
lcall
mov
cmc
add
push
pop
into
sub
lahf
repz
cmpsl
rcl
xchg
sahf
xor
jmp
loopne
fwait
iret
mov
mov
jl
mov
xchg
and
jg
sbb
repnz
mov
xchg
dec
aas
ja
arpl
push
or
lods
repnz
mov
pushf
add
inc
xorb
mov
lcall
xlat
lcall
inc
inc
add
fs
pop
mov
dec
cltd
lods
lods
xchg
xchg
fstps
cmpsb
xchg
xchg
cmp
cld
popa
jge
movsb
xorl
pusha
out
pop
xor
pop
xchg
and
xchg
test
add
push
lret
ret
lret
andb
movsl
cmp
imul
outsl
das
cld
push
sub
dec
movsl
sbbl
cmc
or
jecxz
add
push
std
cmp
sbb
in
add
inc
jecxz
aaa
jbe
and
int3
call
nop
out
icebp
mov
fidivl
sar
mov
add
loopne
dec
xor
iret
pop
mov
push
sbb
clc
jns
xor
pop
les
cmpb
stc
push
fcmovu
lds
cli
icebp
sbb
in
adc
into
push
push
mov
scas
sarb
sbb
fdivrl
fidivrs
and
jb
stos
push
call
outsb
ret
add
aam
ja
lcall
sbb
sarl
xor
adc
outsl
inc
sahf
push
inc
mov
or
fnsave
out
dec
testb
insb
pop
mov
cmc
add
loop
repnz
push
fs
or
sbb
ljmp
jo
and
cmp
and
dec
jge
pop
pop
lahf
mull
xor
xor
ret
push
cmpsb
test
out
xchg
stos
pop
fists
or
je
cmp
inc
fcompl
lcall
jb
pop
jl
pop
sub
lcall
hlt
xchg
fldl
or
cmp
mov
ds
insl
fmull
into
or
ds
sub
dec
lret
push
pop
lahf
lcall
adc
repz
pusha
mov
push
mov
and
repnz
mov
es
in
in
outsl
adc
sbb
push
movsl
fnstsw
nop
push
dec
ljmp
dec
sbb
test
mov
data16
arpl
shlb
in
pop
inc
rcll
xor
and
imul
push
push
inc
xlat
pop
or
setp
pop
mov
scas
mov
sar
repz
mov
inc
gs
shl
xor
lcall
icebp
push
cmp
push
adc
je
jae
or
mov
mov
fnstenv
mov
push
xor
or
lea
xchg
test
mov
leave
dec
and
inc
sub
scas
add
mov
repnz
icebp
xorl
loope
out
imul
push
sbb
push
lock
jp
icebp
xchg
pop
iret
clc
movsb
je
mov
rcrl
pop
jecxz
sbb
push
push
push
sbb
xor
sti
xchg
xchg
int
pop
jl
push
call
mov
loopne
fstpl
or
je
inc
loopne
xor
sub
pop
push
loopne
adc
mov
cmpsb
or
push
std
outsl
or
adc
xor
pop
dec
jge
mov
inc
arpl
inc
cmp
fcmovnu
jmp
sbb
decb
rcrb
fs
jbe
aam
mov
xor
popf
xchg
sahf
jecxz
lds
mov
push
mov
xlat
in
cmp
in
adc
ret
xchg
and
rolb
addr16
insl
jnp
in
sbb
mov
jnp
sahf
xor
xchg
sub
inc
cmc
ret
fwait
cmp
jns
je
adc
fistl
xlat
mov
jmp
shlb
push
pushw
push
out
pop
jb
adc
subb
mov
pop
push
pop
sbb
jne
jg
lret
mov
xlat
mov
add
imul
rclb
dec
mov
xor
mov
xchg
jge
lcall
insb
sti
imul
repnz
lods
jns
pop
pop
lea
push
mov
mov
rolb
mov
call
icebp
sub
aad
mov
lea
sbbb
inc
test
pop
cwtl
dec
xor
lock
mov
fbstp
mov
inc
push
cmpsb
push
scas
adc
mov
sub
scas
mov
mov
inc
mov
push
push
lock
sbb
lods
push
enter
push
pop
movsl
das
xchg
and
cmp
lcall
inc
iret
mov
add
add
test
pop
xchg
gs
or
mov
sub
or
stc
xorb
push
and
stc
cmp
jne
repnz
repnz
adc
iret
lock
lods
cmp
ljmp
mov
cmp
inc
xchg
popa
outsl
or
sub
pop
test
scas
adc
pushf
aad
push
jae
sub
loop
fs
dec
push
cmovnp
add
push
popa
xchg
jl
out
pop
leave
adcl
sbb
out
cmpsl
and
scas
and
inc
mov
cs
push
or
fldcw
xchg
pop
mov
ja
js
fisttpll
push
fiadds
add
shrl
ss
mov
test
cmpsb
jo
adc
outsl
es
pop
outsb
inc
mov
add
out
cmc
lret
pop
ss
les
dec
mov
push
and
popa
aas
and
cwtl
jne
mov
cltd
xchg
subb
adc
mov
je
fdivl
dec
inc
addr16
inc
imull
sbb
testb
loopne
mov
aam
cs
pop
or
jne
aam
fcmovne
mov
push
scas
stc
jecxz
adc
test
js
popa
daa
mov
pop
rorb
pop
aam
push
adc
addr16
pushf
jge
lods
sbb
and
aam
mov
scas
lods
sbb
pusha
xchg
dec
icebp
jb
repz
and
aad
mov
or
xchg
add
ja
in
shrb
pop
xor
ljmp
mov
push
cmp
int
dec
cmc
pop
adc
adc
leave
adc
dec
or
lods
inc
in
push
add
inc
aaa
jnp
jmp
xor
int3
jbe
jns
fmuls
xchg
mov
out
js
test
xor
roll
sbb
cli
xchg
popf
jns
cmp
cltd
movsl
rcrl
ljmp
mov
jmp
xor
and
and
mov
pop
addr16
xchg
dec
shrb
aaa
cmp
push
push
push
add
cmp
icebp
ds
cmpsl
sbb
push
mov
push
xor
push
arpl
mov
pop
mov
inc
jne
sub
dec
outsb
fxch
lret
rclb
insl
sahf
adc
inc
dec
leave
lods
insl
test
fmuls
sbb
mov
insl
fldt
pop
or
jae
xchg
out
jbe
in
and
ret
push
xchg
mov
sarb
add
or
or
push
arpl
inc
int3
jb
rorb
xchg
jnp
mov
pop
cmp
shl
xor
add
pop
mov
sbb
aad
xlat
in
sub
jg
ds
lds
pop
mov
stc
jge
pop
punpckldq
mov
sbb
sbb
jb
lods
mov
mov
ds
pop
loope
push
nop
dec
xchg
jno
mov
xor
mov
sbb
or
add
xor
xabort
xchg
negb
decl
inc
xchg
pop
or
mov
rolb
adc
lods
pop
mov
out
xor
bound
mov
pop
nop
adc
mov
mov
mov
mov
lret
mov
ds
stos
xchg
int
cmpb
mov
ja
lcall
mov
push
xchg
push
mov
xorl
push
je
pop
jbe
xor
jbe
cmp
fstps
add
mov
lahf
mov
or
test
add
clc
cli
xor
fmuls
jmp
scas
dec
xor
lea
mov
push
mov
mov
dec
pop
inc
enter
jno
mov
or
mov
mov
aaa
xor
cmp
ja
rorb
cltd
adc
mov
les
imul
loopne
xor
add
or
repz
jnp
or
insb
arpl
jno
push
fsin
in
mov
xor
aad
or
ds
imulb
movsl
mov
dec
div
lret
js
dec
shlb
loope
int3
shl
mov
nop
mov
inc
sbb
cmp
sbb
xchg
fistl
push
add
jnp
int
popf
dec
mov
shrb
add
mov
dec
mov
push
popa
ret
pop
subl
push
xchg
imul
ss
push
ss
lcall
sarb
bound
test
fwait
in
push
fiadds
cmp
filds
sbb
mov
das
jge
pop
and
fwait
stos
aam
fidivrs
shl
dec
gs
sub
cmpsl
dec
fidivrs
loop
les
jnp
bound
push
xchg
cltd
and
adc
cld
rol
xlat
arpl
arpl
fstpt
lcall
ja
inc
push
xor
xchg
loop
roll
add
cmc
gs
test
rcll
pop
lea
adc
pop
jo
or
pop
cmpsb
jo
leave
out
dec
inc
test
or
iret
mov
adc
sbb
sub
mov
jecxz
pusha
and
outsb
or
leave
jne
imul
jg
or
jg
stos
lret
sbb
pop
out
jns
dec
pop
push
sub
fsub
out
jno
icebp
xor
out
cmc
xlat
sub
inc
sub
inc
lds
stos
rorl
jo
popa
adc
push
push
outsl
in
aas
adc
or
aas
or
out
fs
adc
mov
sbb
mov
cmp
push
sbb
insb
mov
add
xchg
aas
xor
cmp
sub
and
adc
mov
shrb
fidivrs
in
fiadds
jae
aas
mov
inc
cmpsb
pushf
mov
inc
xor
cmpsl
jmp
in
out
addr16
push
jns
imul
lea
hlt
xchg
push
dec
and
movsb
or
or
lahf
jecxz
scas
int3
mov
dec
arpl
pop
call
cmpl
dec
aad
je
xchg
pop
fisttps
dec
loopne
scas
std
xlat
lahf
inc
xor
out
push
rorl
xor
add
mov
add
pop
xchg
jnp
call
shlb
mov
push
int3
insb
mov
pop
jp
aas
push
loope
cmpsb
mov
mov
adc
mov
cli
ss
gs
adc
loopne
insb
ljmp
cmp
pop
fs
mov
loop
je
lock
jnp
aam
dec
dec
adc
dec
cmpsb
push
jno
cmpsb
jbe
scas
stc
inc
sub
pop
mov
sub
gs
icebp
push
mov
imul
mov
dec
jge
in
jo
or
pushf
aam
ja
cmp
setno
loope
push
mov
shll
sub
out
mov
pop
out
or
insl
dec
or
pop
int
imull
jns
out
inc
ss
in
dec
stc
insl
int
cmpsb
mov
inc
sub
push
call
ljmp
lods
jno
addl
jge
cmpsb
sbbb
rcll
jg
cmp
rcll
inc
rcrl
pusha
adc
dec
cmp
pop
cmp
push
shlb
xchg
daa
fstpl
fwait
iret
insl
rclb
or
cmp
xchg
test
movsb
xor
or
iret
push
sti
insl
lret
data16
or
xlat
dec
or
sbb
lock
pop
or
stos
outsl
rolb
cmp
out
jmp
enter
fwait
cmp
das
dec
cmpsb
mov
adc
xlat
or
jg
lods
hlt
mov
les
add
jnp
push
pop
pop
in
outsl
pop
gs
fucomp
lahf
arpl
jne
jg
lds
inc
xlat
mov
sbb
ds
das
cmp
and
push
sbb
bound
ss
sub
adc
xchg
push
nop
nop
icebp
cmp
xchg
cld
repnz
fwait
jae
je
pop
xchg
lds
icebp
arpl
push
mov
fdivl
out
movsl
out
inc
pop
cmp
icebp
push
push
cli
subb
adc
scas
cmp
rcrb
sbb
cmpsl
xchg
mov
and
addr16
inc
dec
rcll
mov
mov
in
or
repz
mov
jg
cmp
mov
cmp
dec
mov
hlt
dec
push
lcall
aaa
jo
jmp
adc
mov
and
pushf
cli
cld
testb
stc
lcall
inc
dec
inc
and
ja
mov
xchg
daa
adc
or
int3
xchg
xchg
jp
or
lret
lret
add
mov
fnstenv
aas
fs
test
cld
pusha
add
jae
sub
stos
mov
xchg
out
out
push
dec
iret
mov
testl
popf
shll
mov
xchg
fs
sbb
pop
pop
and
mov
sub
mov
pop
and
cltd
or
or
fs
cmp
aad
imul
sbb
jecxz
fimull
rorl
add
push
jno
jbe
push
add
add
push
or
add
daa
jnp
add
arpl
shr
sbb
sbb
cmpsl
arpl
imul
fdivs
xchg
and
xchg
pop
vpackuswb
fnsave
adc
mov
inc
adc
jae
ja
push
jo
dec
pop
push
cmp
pop
popa
push
fisubl
call
aas
sub
fnstsw
or
cld
adc
rclb
inc
sbb
dec
and
adc
test
dec
xchg
int3
inc
mov
int3
sub
add
cli
das
scas
inc
loopne
or
jae
xchg
pop
and
fsubs
inc
ja
addr16
jb
es
adc
lea
popf
sub
shlb
sbb
and
adc
dec
push
test
sbb
cmp
inc
jne
movsl
insb
sub
and
fsub
data16
fstps
je
in
lea
out
scas
xor
or
dec
repnz
cltd
insl
mov
cmp
iret
adc
jae
xchg
mov
ds
xchg
cmp
push
cmpsl
inc
cwtl
std
cmp
xor
sub
aaa
cmpsl
inc
mov
push
int3
dec
lock
or
adc
int3
or
js
mov
in
adc
int3
mov
lahf
movsl
aaa
push
test
das
sbb
mov
sti
lcall
or
out
jle
icebp
dec
enter
cmpsl
mov
adc
mov
push
xchg
sahf
xor
jmp
mov
lcall
sbb
test
or
push
xchg
add
dec
pop
adc
push
push
fisubl
or
push
dec
das
sub
xor
mov
inc
mov
lcall
mov
insl
jmp
int
iret
nop
fsts
cmp
repz
scas
ljmp
out
sarb
icebp
or
mov
aad
andl
lret
in
mov
mov
add
cmp
push
dec
cli
add
cmp
jp
fcmovbe
test
cmp
insb
shrb
xchg
mov
pop
and
or
data16
or
cmp
repz
pop
pop
mov
scas
jmp
dec
lcall
mov
aam
and
scas
push
rolb
jge
mov
mov
xorb
nop
aas
insb
fcmovu
sub
clc
and
add
cmp
rcll
out
pusha
dec
cwtl
sub
test
mov
popa
fdivrp
pushf
jae
ffreep
and
mov
int
and
scas
push
ficoml
jne
cld
jb
repz
push
mov
cli
push
or
mov
jecxz
xchg
subl
push
cld
lcall
test
stos
je
sub
inc
lcall
xor
xchg
sub
jae
lods
cmp
addl
jp
call
pop
stos
pop
fstl
jle
cli
popl
dec
in
orb
mov
push
dec
out
in
sub
cltd
xlat
in
ljmp
add
loopne
mov
push
push
sbb
xchg
xchg
pop
aam
add
icebp
fwait
in
and
add
pop
xchg
sarb
dec
filds
test
dec
mov
jb
push
std
aaa
adc
mov
jnp
adc
cld
ret
mov
test
mov
jecxz
leave
test
adcb
lock
stos
js
lock
push
push
fs
sbb
mov
flds
icebp
repz
aaa
lods
jmp
js
out
test
jns
or
add
inc
sahf
xchg
xchg
in
adc
or
ljmp
cld
add
jne
push
sub
push
and
popa
in
pop
test
inc
loop
ret
jno
lds
cmovae
or
sbb
cmpsb
mov
push
loop
xchg
pop
push
repnz
jg
inc
pusha
cltd
sbb
aas
shll
xchg
jne
out
ja
cmp
pop
adc
cmp
das
xchg
or
in
popa
add
es
mov
sub
cltd
add
shll
or
lods
popa
or
jmp
shl
adc
setp
add
decb
xchg
inc
fistpll
andl
mov
je
lahf
ss
testl
rcr
add
sbb
adc
sti
and
in
and
rclb
adc
cs
add
rclb
bound
mov
inc
aaa
les
cmp
sub
out
jge
add
pop
or
inc
push
dec
push
mov
clc
nop
add
hlt
divl
push
mov
arpl
ret
mov
insb
sub
xchg
mov
push
jge
int3
daa
mov
das
outsl
cmpsb
jp
xor
mov
cmpsl
mov
and
push
and
jo
and
mov
repz
mov
test
lock
ljmp
jle
and
pushf
jl
insb
mov
push
ljmp
leave
cmp
dec
cs
out
mov
hlt
cmp
mov
or
loopne
mov
push
mov
jns
rolb
sub
jg
xor
fs
subl
fidivrl
pop
cltd
dec
lahf
inc
lock
pop
shrb
cwtl
ja
push
icebp
sbb
mov
popf
mov
shl
repz
add
lock
pop
jecxz
pusha
stos
jg
adc
aaa
adc
push
pop
into
loopne
push
fnstsw
push
mov
push
ljmp
or
jns
push
frstor
fildl
cmp
mov
enter
int
push
lds
pop
hlt
lcall
out
rcr
pushl
call
cmp
test
push
mov
lds
cld
popa
lcall
in
cld
ror
test
mov
lret
xchg
inc
push
add
mov
addr16
sub
and
sbb
cmp
jo
cmp
lret
mov
cmp
jecxz
call
orb
out
mov
sub
jnp
xchg
notb
imul
adc
movsl
or
xchg
loopne
adc
xor
fstl
cmpsl
ss
push
cmpsb
test
cs
scas
pop
lods
xchg
cmp
aaa
dec
cmp
mov
push
pop
pushf
fmul
mov
aaa
enter
out
ja
ret
stc
jae
mov
add
jns
xlat
lods
nop
out
mov
lods
xlat
cli
pop
mov
sbb
movsl
cmp
add
pushf
cmpl
sbb
jnp
or
sbb
push
push
or
fdivl
call
cmp
mov
dec
lods
xor
lds
xorl
push
lea
popf
xchg
mov
scas
add
mov
repnz
pop
xchg
sahf
push
sub
clc
pushf
ret
dec
icebp
lahf
dec
push
inc
inc
cmc
mov
shll
or
scas
inc
bound
loopne
fcomp
arpl
xor
int
nop
mov
mov
xchg
nop
or
pop
fldenv
xor
cmp
addr16
lahf
jl
jns
gs
pop
mov
push
jns
inc
cmp
shll
push
in
enter
insb
dec
inc
iret
out
stc
mov
bound
jnp
aas
ljmp
sub
leave
pusha
outsb
pop
out
ds
pop
pop
out
adc
test
sub
adc
test
jmp
push
push
or
adc
cmpsl
sbb
shr
out
jecxz
data16
pop
xchg
lea
xchg
mov
xchg
sahf
in
xor
nop
test
movb
in
cmpsl
sarb
ja
and
faddl
xchg
pop
inc
sub
out
push
cmpsl
mov
aam
dec
lds
call
mov
jae
loop
adc
iret
fwait
mov
xchg
loopne
sbb
mov
xor
push
xchg
fstps
cmpb
mov
nop
lcall
adc
jo
movsb
push
pushf
sbbb
call
push
xor
pop
fisubl
arpl
add
sbb
push
pop
movsl
push
shll
cmpsl
xchg
insl
pushf
mov
or
dec
fsubrs
aam
out
movsl
sub
push
jno
cmp
cmp
scas
xchg
dec
shl
sbb
loop
jbe
jae
sarl
cmp
inc
jle
pushf
mov
in
dec
pop
push
gs
or
das
mov
loop
dec
mov
sub
dec
jnp
xor
movsl
jmp
xchg
pop
jl
lret
mov
call
ficoml
or
leave
icebp
test
and
dec
mov
mov
cmp
or
insb
test
cltd
popa
dec
dec
loop
cmp
fsubr
jg
pop
xchg
dec
aam
mov
push
jnp
cmp
xchg
jbe
xchg
add
jae
fsts
cmc
lret
push
mov
sbb
sub
js
add
and
or
mov
and
ljmp
aad
ss
je
int
clc
inc
xchg
push
add
stos
mov
cld
shll
iret
shll
inc
and
imul
das
mov
lret
movsl
add
test
rcll
sahf
mov
inc
xchg
and
xchg
xchg
mov
negb
dec
and
jmp
mov
jmp
push
add
pavgw
aad
movntps
xchg
stos
mov
in
inc
xor
cli
push
jl
push
mov
sbb
mov
jno
mov
cld
dec
or
std
xchg
ds
shlb
sbb
mov
pop
es
xchg
addr16
stos
jl
lret
jnp
lret
mov
mov
jmp
vmovapd
inc
pop
popf
jbe
xchg
roll
ret
outsb
jmp
jne
fimuls
jg
dec
ficoms
adc
lcall
imul
pop
sbb
sub
pop
pop
xchg
dec
add
nop
xchg
inc
pop
std
jmp
fstps
dec
mov
outsl
inc
sbbl
leave
push
mov
pushf
cmpsl
mov
sub
inc
xchg
nop
test
aaa
inc
aas
sbb
fucom
add
lock
mov
subb
sahf
insl
icebp
cmp
lret
fdiv
imul
pop
push
fcompl
int3
add
into
add
sub
cmp
push
adc
movsb
xchg
cmc
cmp
subl
mov
adc
mov
scas
mov
imul
movsb
loop
jp
into
call
jns
lock
sahf
rol
std
jb
incb
or
sub
inc
dec
mov
frstor
outsb
push
clc
dec
ds
push
or
push
out
arpl
in
fs
mov
les
orl
adc
andb
push
and
push
ss
xchg
push
sbb
dec
scas
test
loope
inc
stc
cmp
out
imul
jns
sbb
std
arpl
push
cmp
int
lods
cmp
les
xor
call
outsl
cltd
sbb
mov
push
mov
fisttpl
aas
mov
xchg
sub
test
mov
bound
push
scas
shrb
call
std
xchg
pop
or
ss
icebp
fnstcw
out
mov
into
xchg
jo
inc
clc
out
dec
inc
jae
add
lahf
mov
out
jne
cmp
arpl
test
out
mov
jb
sub
repnz
pop
sahf
mov
jbe
jl
addl
pushf
push
push
adc
imul
int
xchg
pop
push
lcall
iret
cwtl
dec
ljmp
jl
xchg
sbb
ret
loop
movsb
daa
std
xchg
sbb
aam
repnz
push
ret
pop
jle
divb
add
lods
xchg
in
shrl
test
mov
idivl
jne
lret
xorl
into
pop
iret
lret
xor
out
pusha
out
inc
movl
push
or
cwtl
adc
mov
sub
mov
adc
push
cmp
cmpsl
popa
xor
fstl
sbb
cwtl
xchg
aaa
mov
xor
xchg
lret
insb
mov
pop
jne
pop
mov
pop
pop
xchg
iret
push
inc
lds
sbb
negb
out
pop
fisubl
pop
je
cwtl
push
jbe
add
imul
arpl
push
and
or
cwtl
push
xchg
mov
cs
jne
dec
mov
or
inc
clc
cmp
dec
pop
sbb
and
test
lds
mov
jecxz
jno
xor
sub
cmpsl
xor
loope
out
div
fwait
inc
mov
cltd
mov
iret
out
xor
cltd
xor
stc
int3
in
xchg
ds
loope
mov
cmpsb
aam
jnp
inc
or
mov
pusha
stos
lahf
adc
sbb
mov
cltd
jo
mov
add
rclb
icebp
xchg
mov
push
sub
cltd
inc
sbb
jp
mov
mov
xchg
lret
lret
repnz
jmp
std
jmp
pop
call
jnp
xor
mov
pop
out
mov
sbb
mov
outsb
inc
pop
xchg
pop
sub
int
rcrb
xchg
lods
mov
add
xor
jb
out
push
lret
xchg
cmpb
mov
pop
mov
in
sbbl
mov
pop
pop
leave
add
mov
xor
ficompl
sub
scas
std
or
xchg
out
jnp
nop
divl
nop
outsl
lahf
mov
cmp
mov
insb
xlat
ja
leave
mov
mov
mov
cmp
xlat
aad
mov
pop
out
fsubrl
xor
clc
jno
push
ja
mov
loope
jnp
jne
fildl
mov
sub
mov
std
and
test
jno
dec
mov
add
cltd
ds
imul
das
outsl
pop
or
insb
nop
aas
mov
mov
in
bound
andl
cltd
and
lret
pushf
leave
xchg
lea
xchg
das
adc
push
rorb
adc
daa
mov
xchg
sbb
stc
add
nop
mov
testl
ljmp
mov
xor
adc
mov
inc
ret
mov
out
push
sub
sti
out
fs
mov
push
xlat
enter
rclb
adc
ds
vshufps
stc
insb
lea
in
adc
les
mov
icebp
mov
in
and
popf
mov
ror
cmp
jecxz
jns
sbb
hlt
pop
addr16
std
mov
mov
imulb
aad
dec
jbe
and
pop
sbb
or
or
xor
scas
adc
cmp
xlat
gs
mov
sbb
das
dec
mov
popf
pop
cmp
or
pop
jmp
mov
or
or
adc
xlat
nop
inc
pop
mov
mov
xor
pop
add
cmp
push
lret
ds
inc
lcall
xchg
inc
or
mov
cmp
clc
xchg
mov
cltd
inc
adc
ja
cmp
mov
fstps
push
test
xorb
cmp
mov
test
lods
cwtl
push
jmp
push
cli
push
pop
sbb
inc
lret
adc
or
xor
cmpsl
addb
outsl
mov
sub
jns
inc
mov
ljmp
add
pand
aaa
ss
push
dec
ret
mov
push
sti
pop
cmp
or
mov
call
lret
dec
cwtl
ss
ljmp
jle
jno
bnd
mov
add
jecxz
jo
add
mov
jge
pop
sub
inc
and
and
pop
jno
insb
ljmp
cmp
adc
mov
daa
dec
dec
or
dec
and
ss
push
mov
dec
sbb
add
cmp
mov
add
jns
test
mov
outsl
mov
imul
push
jno
cmp
jmp
stos
pop
push
xchg
mov
mov
mov
mov
ds
pop
pop
mov
mov
or
xor
and
cwtl
jo
fs
fdivs
adc
jl
testl
push
bound
shll
inc
daa
lods
sbb
in
add
cmc
je
dec
cmpsl
gs
das
roll
mov
dec
out
aas
or
jo
out
loopne
insb
cld
sub
push
hlt
cmp
lret
fistpll
imul
into
insb
adc
pusha
cmp
pop
jl
ficoml
in
cmpsl
insb
or
ss
int
mov
jnp
inc
int3
push
in
xchg
jne
jns
xor
push
fisubrl
add
adc
or
fdivrs
jno
pop
pop
pop
testb
mov
icebp
push
lds
test
or
inc
out
cld
imul
pop
out
aam
cs
lahf
mov
xor
data16
adc
gs
loop
push
dec
dec
xor
stos
xor
xor
lock
or
and
mov
sbb
fcmovbe
pushf
or
lods
push
jecxz
mov
mov
into
int
xchg
insl
jne
or
out
lcall
sub
jp
pop
add
ret
xchg
pop
fwait
int
out
pop
xchg
sub
add
icebp
pop
cs
cmpsl
dec
lcall
shr
mov
dec
repz
cwtl
test
jns
and
std
jmp
cmp
mov
out
sub
lods
cmc
mov
fnsave
jnp
pop
mov
sar
fstpl
sub
xor
lock
fbstp
xlat
sub
push
sub
xor
ret
xchg
adc
push
leave
dec
mov
xchg
fwait
shll
repz
pop
leave
dec
cmp
out
add
out
pop
lods
fldt
leave
push
int
loop
sbb
fsubrs
xchg
sbb
pop
out
fs
or
in
push
push
adcb
push
into
fdivrl
jns
xor
xor
xor
xor
mov
xchg
mov
mov
mov
inc
push
sbb
out
les
pop
mov
pop
pushf
sahf
shl
push
aam
in
pop
mov
pop
sub
shll
fnsave
mov
test
jno
jb
dec
lea
add
out
or
jmp
pop
sbb
jg
das
push
pushf
outsl
adc
or
mov
fcoml
and
popf
jo
mov
jae
jno
xor
loope,pn
push
sbb
clc
negb
jns
adc
imul
sub
push
lahf
stos
push
aam
ss
mov
adc
xchg
enter
inc
or
call
adc
cmc
jmp
shl
sub
paddd
out
pop
clc
sub
movlps
add
pop
gs
pop
add
rcrl
jne
lods
xlat
add
or
sti
mov
ror
and
xor
mov
mov
rcrb
jge
idivl
xchg
jnp
pop
mov
pop
les
lret
jp
xor
dec
add
fisubs
mov
or
jecxz
mov
cmp
add
mov
fwait
lret
push
scas
cmpsl
mov
movsl
loopne
lahf
jno
add
mov
mov
repnz
jns
xchg
in
or
xor
push
mov
icebp
aam
ljmp
jg
push
stos
adcl
frstor
scas
adc
mov
jb
sbb
movsb
mov
add
aad
add
jecxz
fs
rorb
lahf
or
dec
movsl
dec
mov
mov
lret
into
loope
cmp
adc
xor
mov
rorb
dec
loopne
in
and
stos
sbb
popa
shrl
adc
lcall
jno
notb
push
imul
lds
fsubp
push
sti
mov
lret
xchg
inc
nop
pushf
imul
mov
dec
push
push
mov
sub
mov
fcmove
mov
or
mov
xor
sub
in
push
les
cmp
scas
clc
clc
push
incl
je
jne
js
jge
xor
test
jb
lret
dec
mov
cmp
mov
mov
mov
aaa
cmp
test
shll
and
or
pop
inc
ret
loope
and
icebp
fdivs
sub
push
pop
aam
in
jmp
lock
inc
add
xchg
pop
sbb
clc
xor
cmpsb
cmp
jle
dec
popf
pop
jg
and
cmpsl
xchg
adc
test
daa
ss
into
fdivl
fs
jno
xchg
push
cmp
imul
roll
xchg
pop
jns
add
test
pop
jne
mov
mov
add
lahf
xor
or
mov
sbb
pop
adc
fnstsw
jmp
rcr
mov
jl
cmpsl
ljmp
xchg
arpl
js
sarl
sub
fisubrs
cmp
mov
lds
les
inc
pusha
fs
mov
gs
icebp
add
mov
mov
pop
push
mov
and
sarb
jl
add
mov
in
loop
lret
cmp
shll
cli
and
in
add
mov
dec
push
aad
loopne
andl
movsb
xor
lret
and
cmp
sahf
int
xchg
jne
jns
push
mov
lret
out
lahf
fistpl
test
add
sub
ss
dec
lods
aaa
leave
dec
cmp
shl
jnp
aaa
fstl
jecxz
in
fsubrp
stos
sarb
iret
in
icebp
mov
loopne
add
in
xchg
mov
fbld
mov
push
add
bound
adc
mov
mov
push
in
cli
cmpsl
out
mov
push
aas
popa
test
dec
aam
mov
in
mov
mov
loopne
nop
sahf
add
push
mov
pop
mov
mov
pop
mov
cli
mov
mov
ja
cmp
inc
icebp
fwait
call
inc
ja
fstpl
adc
fsub
cmp
xchg
call
push
xor
jbe
mov
add
jp
add
dec
fidivrs
push
jo
inc
fs
pop
mov
cmp
xor
mov
int
pop
nop
adc
imul
clc
sub
push
bound
enter
mov
insl
adc
test
bound
sti
push
insl
pop
shrl
shlb
xor
mov
jbe
mov
ljmp
mov
xor
mov
pop
jno
gs
jns
cvtps2pd
sub
pop
lret
jb
cmpsb
jle
lahf
inc
dec
lret
jae
push
pop
out
stc
adc
mov
mov
out
xlat
and
test
xchg
in
cwtl
xchg
cwtl
fiadds
cmp
sbb
movl
lds
cltd
pop
pusha
inc
pushf
sbb
add
adc
sbb
inc
repnz
imul
inc
add
call
xchg
lcall
jle
imul
push
lods
mov
xchg
mov
insb
outsb
adc
xchg
sub
push
mov
pop
push
in
pushf
pop
pushf
pop
xchg
sub
mov
push
sub
das
dec
cmp
insb
mov
adc
iret
mov
and
and
xchg
int
adc
mov
add
xchg
push
scas
push
xchg
push
dec
iret
in
xchg
inc
jmp
xchg
stos
mov
jp
pop
add
fs
sbb
movb
enter
cld
lods
dec
jecxz
loopne
dec
and
mov
cmc
jno
add
add
cmc
inc
xor
dec
test
sub
sub
fwait
out
xchg
inc
jae
cmp
jp
mov
mov
sbb
adc
sub
rcl
aaa
fwait
pop
ret
xchg
lcall
inc
bound
mov
jo
lret
jns
faddp
outsb
test
mov
test
push
mov
add
testl
adc
loope
xchg
cs
jno
push
addr16
xchg
popa
insl
pop
push
fstpt
lret
popf
jb
mov
fnstsw
out
sub
pop
xor
mov
das
cmp
or
and
push
adc
push
jecxz
lret
ja
sbb
mov
pop
sub
cmp
popf
jge
dec
in
clc
inc
aaa
popf
movsb
add
xchg
subb
out
rcl
data16
lcall
jle
fcmovu
aaa
shl
call
cmp
mov
mov
fs
pop
aad
cmp
dec
push
or
xrelease
cmp
mov
push
je
xchg
dec
mov
xor
loop
movsl
add
loope
dec
jno
xchg
outsb
pop
lds
popa
sbb
fs
test
out
aam
ret
xchg
push
roll
cmp
xchg
or
mov
fdivrp
imul
sub
ljmp
mov
push
aad
push
fldt
mov
imul
outsl
lds
cmp
jg
inc
xor
and
enter
in
jle
xchg
lods
sti
and
loope
fisubl
mov
push
popa
dec
mov
icebp
int3
lahf
movsb
dec
push
add
or
mull
scas
add
push
mov
loopne
jp
inc
sbb
jg
popf
mov
or
push
pop
scas
enter
cmp
xchg
adc
inc
xlat
negl
adc
fisttps
add
lods
mov
cmp
mov
mov
mov
test
js
test
les
sub
lahf
mov
add
cmc
outsl
push
insb
ss
movsb
orl
loopne
lret
fwait
loope
test
sahf
jbe
leave
notl
test
dec
mov
cld
das
jecxz
and
add
jge
add
pop
jne
adc
cmc
into
lcall
push
in
sub
iret
cmpsb
call
mov
mov
and
mov
icebp
insb
stc
xor
in
mov
or
cmp
ljmp
and
sbb
cmp
popf
out
cmp
movsb
and
cld
sbb
jae
cltd
in
jmp
inc
adc
leave
fbld
push
lret
pop
fsubp
testl
xor
mov
test
dec
lods
sbb
shlb
les
aas
jge
stc
sbb
out
iret
inc
movsb
sbb
sub
inc
dec
mov
in
jne
and
sar
xchg
xorl
or
rcll
mov
mov
mov
out
aas
push
sub
icebp
mov
and
jmp
in
mov
or
lock
push
mov
std
xchg
xchg
pop
mov
cmc
jae
ljmp
mov
cs
cli
in
arpl
loop
mov
addl
adc
pop
popf
add
pop
xchg
xchg
sbb
sbb
les
std
es
cltd
pop
movsl
in
mov
jmp
inc
pop
push
mov
sbb
int3
jl
and
fidivrs
cmpl
cmp
fidivs
xchg
xchg
push
sbb
inc
xor
mov
rcrb
test
xchg
add
sar
lods
adc
pop
mov
enter
mov
mov
loop
mov
lcall
mov
jns
lea
or
xchg
jbe
xchg
fwait
jno
fs
mov
sub
mov
sub
imulb
sub
pop
mov
mov
sti
mov
sub
and
mov
xor
xchg
js
leave
aas
jle
je
test
pop
lods
cli
imul
xlat
in
out
aas
sub
mov
data16
mov
or
jecxz
push
push
repnz
fwait
cli
or
add
lcall
jbe
das
insl
add
adc
ds
pop
dec
or
ljmp
pop
mov
lods
mov
add
pop
dec
xor
fdivp
ljmp
je
outsb
popa
xlat
pop
stos
sub
fs
and
mov
aas
push
movsl
mov
pop
sbb
inc
or
jmp
lcall
popf
punpckhbw
fwait
test
sar
dec
ljmp
cltd
pushl
cli
bound
mov
sbb
mov
pusha
mov
stc
xor
push
inc
add
iret
cli
movsl
mov
je
aam
dec
gs
das
pop
into
inc
andb
and
sahf
and
out
dec
aad
sbb
cwtl
push
outsl
sub
adc
imul
lahf
adc
dec
push
test
clc
adc
pop
cmp
fimuls
jl
pop
outsb
xor
push
popf
inc
sub
cs
loope
movsb
movsl
out
gs
aaa
pop
sahf
mov
pcmpgtd
jle
xlat
fists
insl
cmpsl
push
push
mov
rcll
push
int3
cwtl
idiv
data16
lods
fadds
int3
lcall
push
mov
imul
rorb
dec
xchg
and
je
int3
adc
sbb
jecxz
jge
stos
insl
pusha
pop
repz
push
mov
stos
imul
dec
int
jne
push
sahf
sbb
adc
popa
xlat
adc
fcmovnu
push
repz
sbb
loopne
ffree
xchg
cmp
scas
sub
ret
dec
dec
sbb
adc
dec
xchg
xchg
into
pop
jmp
push
jmp
mov
ficompl
pop
ret
and
mov
and
and
popf
fxch
cmc
xchg
lcall
adc
ss
rolb
insl
mov
xchg
mov
or
das
into
and
fcmovu
cmp
pop
push
cld
and
int3
lock
jg
xchg
sub
push
mov
xor
push
test
cwtl
icebp
insb
loopne
push
fwait
stos
xchg
stos
add
pop
jmp
pop
adcl
fstp
push
mov
lcall
jge
call
mov
xchg
sbb
mov
mov
mov
jle
mov
stos
push
xor
stos
push
cltd
dec
loope
shrb
inc
push
in
repz
cmp
inc
mov
in
cmpsb
and
cmc
sub
pop
mov
xchg
cmp
mov
repz
out
lods
xchg
push
xor
js
mov
pop
in
adc
lds
mov
xor
ds
leave
cmp
testl
push
inc
testb
dec
stos
add
pop
mov
cmc
mov
ret
xchg
fldenv
hlt
mov
dec
xlat
test
add
rorl
fidivrs
movlps
dec
aad
dec
cmp
out
shlb
pop
hlt
inc
aaa
cld
lods
fstl
fwait
sbb
inc
mov
pop
stos
mov
sbbl
flds
add
mov
mov
sti
sbb
dec
call
jo
jo
sbb
sub
push
mov
add
sbb
je
cmp
mov
xchg
sub
push
jbe
cmp
hlt
bsr
out
loopne
push
std
out
or
fwait
adc
or
negb
rcrb
inc
xchg
loopne
movsl
xchg
mov
in
insl
mov
test
mov
in
ja
mov
outsl
aaa
xor
push
xlat
sbb
lock
adc
fnstenv
popf
sbb
mov
inc
sbb
repz
out
and
leave
scas
and
mov
or
jg
mov
test
fwait
ja
pop
icebp
mov
out
sub
xor
fs
xorl
test
loope
cmpsl
ss
insl
lea
cmp
icebp
stc
js
push
cli
cmp
lcall
cs
and
popf
sub
sub
mov
mov
jbe
xlat
loope
dec
adc
cmp
data16
and
push
out
out
pop
movsb
std
push
into
adc
in
and
add
jmp
xchg
call
mov
ljmp
mov
lahf
negb
xor
pop
xor
repz
sub
lock
test
ret
daa
xchg
fdivl
sbb
xchg
rorl
mov
xchg
pop
adc
jns
xor
dec
push
or
push
jae
lahf
loopne
mov
rcrb
imul
bound
mov
push
sbb
stos
mov
or
pop
and
sub
das
mov
fucomp
cli
popa
icebp
xchg
cmp
add
cmp
leave
mov
in
jb
dec
ror
pop
add
outsl
imul
jmp
lock
sbb
in
iret
adc
sub
jb
rcl
cmpsb
pusha
inc
aaa
mov
shll
sbb
sub
push
cmp
inc
xchg
loop
and
ret
repnz
xor
imul
jecxz
sub
dec
xchg
sbb
lods
sub
outsb
sbb
test
lret
out
daa
or
das
stos
jmp
or
mov
lds
mov
cmpsl
insb
in
add
jp
xchg
sbb
insl
push
pop
xor
sub
sbb
fildll
in
push
xlat
push
xor
jg
sarb
mov
outsl
imul
mov
lock
popf
jl
push
xchg
fiadds
popa
scas
push
testl
add
and
xor
xchg
and
push
test
dec
cmpsl
vsubps
bound
jecxz
add
mov
jp
inc
fwait
pop
push
enter
bound
push
jg
add
mov
or
mov
outsb
cmp
jo
aaa
das
sbb
orb
sub
mov
push
lcall
dec
inc
std
test
dec
jp
jno
adc
or
xor
push
mov
int
dec
mov
arpl
sub
mov
sahf
sub
lock
cwtl
adc
push
push
pop
mov
outsb
ss
and
stos
xchg
sbb
stos
and
push
jo
xor
nop
enter
sub
dec
movsl
mov
and
inc
das
pushf
jmp
jmp
jp
and
loop
lods
es
std
inc
sub
pop
dec
sbb
dec
gs
sbbb
lret
repnz
mov
pusha
inc
xchg
lea
sti
int
sub
lock
push
lret
dec
adc
jae
dec
or
daa
pop
cli
push
mov
or
jle
dec
mov
pop
ljmp
repz
inc
fs
enter
mov
pop
aam
cmp
push
bound
mov
cmp
mov
push
push
add
mov
add
xor
int
lcall
out
je
xor
adc
loop
rcr
aam
xorl
popf
push
pop
fidivrs
jmp
sbb
movsb
mov
pop
aaa
cmpb
mov
adc
into
dec
out
aad
sbb
cmp
add
pop
and
dec
jle
and
cld
iret
es
dec
push
rorl
adcb
xchg
mov
or
or
mov
push
pop
bound
das
aaa
fidivs
pop
cmp
sbb
mov
lods
loope
outsb
lds
lods
xchg
or
xor
dec
pop
or
lcall
pop
pop
or
in
mov
mov
movb
jb
es
mov
jge
sbb
pop
sub
sarl
jo
loop
cmc
in
movsb
je
icebp
popa
or
in
inc
sahf
cmpsb
push
out
push
sbb
js
or
mov
mov
rolb
fnstenv
xor
cltd
in
jo
call
xchg
fdivrs
es
cli
mov
add
push
ja
or
cs
data16
mov
stos
loop
inc
jge
repnz
xor
sbb
mov
push
or
jb
or
mov
pushl
imul
adc
inc
jl
mov
popf
daa
sbb
adc
cld
mov
and
cmc
sub
out
shrl
daa
mov
ja
mov
push
js
inc
dec
cmp
stos
pop
pop
enter
shlb
jge
sub
mov
mov
xor
and
mov
aad
mov
cmp
push
mov
fdivr
data16
add
out
fisubrs
sahf
ja
mov
lods
sub
xor
imul
clc
popf
cmp
mov
push
adc
xchg
inc
shll
lods
cmp
test
test
aam
adc
xchg
mov
mov
adc
mov
xor
xor
je
lds
dec
aam
mov
mov
mov
dec
dec
movsl
es
fistl
movsl
addl
subb
jmp
mov
int
rcl
add
cwtl
push
pop
imul
shll
xor
cmpsb
dec
jecxz
mov
cwtl
push
repnz
cltd
cmp
insl
outsl
push
rol
movsb
cmp
cli
mov
es
pop
cmp
pop
imul
jne
mov
sub
xchg
ds
loope
rcrb
icebp
pop
and
daa
push
dec
push
cmp
jbe
lods
out
fwait
cli
jnp
xchg
and
cs
push
cs
lea
popa
xorb
ficoms
je
push
ficompl
or
pop
xlat
cwtl
pusha
mov
test
xchg
stos
and
outsl
mov
dec
jns
jp
fbstp
decb
pop
lock
xor
gs
lods
mov
pop
lret
rcll
adc
xor
repnz
out
sbb
lret
lret
mov
mov
repnz
mov
adc
mov
mov
sahf
je
aam
inc
adc
sub
into
scas
popf
icebp
cltd
adc
pusha
cmpsb
and
icebp
insb
cmpsl
and
cmpsb
popa
popa
pop
jge
sbb
mov
vorps
cltd
scas
rol
pusha
xor
jae
push
lock
gs
xchg
nop
mov
cmpsb
lret
mov
xor
push
cmp
cs
dec
sub
xchg
jbe
aaa
out
out
mov
xchg
lcall
cmp
sbb
sbbl
and
push
sahf
rcll
add
jmp
push
jecxz
xor
mov
cmp
push
lret
cmc
in
xor
bound
pop
xchg
adc
push
mov
loopne
rolb
add
pop
push
pop
push
je
sbb
push
xchg
sti
js
lcall
xorb
je
loope
out
jno
iret
out
and
sbbl
mov
lahf
adc
rclb
ja
xchg
dec
sahf
aad
popa
iret
scas
cmp
aas
sub
add
adc
out
push
add
cmp
mov
int3
bndcl
sbb
add
inc
or
sub
mov
adc
pop
adc
or
mov
rolb
xlat
add
out
push
aaa
mov
and
lcall
jo
leave
xchg
imul
lahf
addr16
xchg
lahf
shlb
clc
sub
pop
mov
loopne
mov
jnp
insl
out
repnz
test
jecxz
push
and
flds
jge
push
cmp
divb
pushf
insl
lret
pop
imul
add
loopne
push
stc
sbb
push
pop
cli
movsb
dec
cmp
sub
lcall
pop
xor
imul
xlat
or
and
fidivs
jo
jb
xor
jb
lock
push
aas
mov
int
mov
mov
pop
rolb
mov
jo
lods
pop
mov
inc
iret
imul
jo
sti
frstor
xor
lods
ljmp
and
add
lret
je
lret
mov
pop
sbbl
mov
push
push
out
stc
outsl
push
sti
pusha
add
mov
mov
cmp
call
out
mov
stos
gs
lock
push
outsb
mov
mov
or
gs
mov
cmpsb
movsl
pop
aam
mov
loop
dec
xchg
sub
filds
pop
in
push
in
shr
bound
add
push
addr16
das
cltd
aad
rorl
dec
mov
adc
in
sbb
movsb
adc
pusha
fstpl
lock
out
call
test
inc
cli
sarb
push
adc
add
mov
popa
adc
dec
or
out
jle
add
imulb
hlt
mov
inc
cmp
inc
out
xchg
js
cmpsb
inc
test
push
loopne
fbld
loope
in
sbb
fimuls
cmp
fld
xchg
or
stos
mov
mov
mov
sti
loope
inc
mov
ret
pusha
jmp
imul
mulb
inc
lods
inc
cmp
and
and
dec
cli
in
xchg
loopne
clc
fcoml
mov
jg
cmp
sub
inc
push
aaa
lea
or
lock
or
or
sub
push
in
jl,pn
lcall
js
sub
mov
sub
jbe
push
pop
sub
jl
adc
daa
cltd
push
xchg
adc
xor
mov
mov
sub
sub
pushf
xor
sar
push
sarb
and
leave
loop
pusha
inc
sbb
arpl
clc
ljmp
push
mov
stos
mov
fcomps
daa
cmpsl
cmc
add
pushl
and
iret
jge
dec
inc
inc
and
inc
jb
xchg
dec
xchg
inc
jg
add
add
lods
dec
out
inc
adc
push
inc
push
int3
shlb
sbb
pop
mov
inc
ret
push
aaa
ret
mov
mov
pop
call
popa
mov
push
pop
testl
outsb
adc
lock
cmp
sub
xlat
cli
setg
or
xor
mov
xor
out
push
push
fnstenv
les
push
ret
test
sub
leave
mov
scas
xor
push
in
adc
xor
adc
mov
mov
testl
das
cmpsl
shl
inc
jecxz
in
pushf
or
cmpsb
sub
aaa
lock
mov
imul
jecxz
call
mov
mov
sbb
cmpsl
iret
cmc
add
push
sub
fcoml
xlat
push
lcall
fmull
sub
pop
mov
test
cmpsl
mov
in
inc
sub
fisttpll
or
loope
pushf
adc
std
ret
loope
lods
dec
cmc
jl
jge
mov
adc
out
js
push
mov
frstor
pop
imul
adc
push
sub
mov
cld
movsl
pop
add
mov
push
js
dec
xchg
xlat
movsl
jo
out
inc
fs
lds
mov
cmp
mov
inc
call
sub
cld
imul
daa
cltd
xor
fildll
cmp
cmp
mov
int
sub
fimuls
and
leave
bound
movsl
out
xchg
and
jg
mov
sub
dec
ljmp
sbb
inc
sbb
push
in
gs
xor
push
mov
sbb
cld
mov
push
adc
aas
daa
mov
add
fsubrp
cmp
dec
dec
pusha
sbb
mov
fs
ffree
loope
and
std
inc
dec
xchg
addr16
push
fwait
and
popl
das
pushf
xor
test
stos
inc
dec
dec
jne
loope
mov
sarl
in
mov
loope
dec
aas
insb
mov
divb
xchg
movsl
jmp
push
shll
mov
pusha
adc
mul
fwait
cmpb
push
fwait
mov
enter
mov
cld
or
inc
lahf
jns
push
mov
iret
in
mov
subb
inc
push
mov
adc
inc
scas
mov
fucomip
fists
or
enter
adc
pop
lods
inc
push
popl
imul
cmpsl
ds
jne
out
mov
mov
or
rorb
sub
insl
sub
lcall
sarb
dec
inc
push
sub
sbbb
dec
xor
hlt
ret
mov
pop
dec
rdmsr
test
stos
stos
in
sbb
loop
and
lcall
cltd
in
and
mov
cmpsl
std
xchg
enter
stos
add
jl
in
sub
mov
out
cmp
xchg
popa
push
push
pushaw
or
jnp
imul
insl
lret
cs
pop
rorl
decl
stc
into
or
mov
xor
inc
iret
sub
imul
imul
imull
inc
pusha
aas
sbb
inc
incl
push
inc
adc
out
inc
inc
stos
sahf
mov
pop
js
xlat
outsb
sahf
ret
test
imul
pushf
ds
jo
sub
test
xlat
inc
mov
lret
xchg
sti
pop
cmc
stc
add
cmpsb
push
push
fcmovb
fisttpll
cmp
arpl
add
inc
sahf
push
dec
mov
push
je
hlt
add
sbb
imul
or
cmpb
pop
jbe
dec
leave
mov
data16
pop
movsl
aas
shlb
sbb
bound
test
cwtl
or
or
outsl
push
out
movsb
pop
ret
and
imul
xlat
mov
test
pushf
xor
pop
stos
subb
orb
sbbb
xchg
inc
mov
shll
int3
aam
repnz
inc
jno
lret
in
cmp
fwait
sub
popf
pop
ficompl
jns,pn
or
push
mov
not
sbb
out
dec
push
xchg
pop
int
bound
xor
cmc
ja
call
fcoml
mov
fdivs
nop
in
cmp
cmpsl
ret
sub
lcall
out
or
call
adc
ss
or
bound
arpl
or
sub
pop
daa
inc
popl
push
sub
ds
shlb
xchg
xor
repz
mov
les
and
and
pushf
fcmovnbe
fnstsw
xchg
sub
mov
outsb
nop
xchg
mov
lds
pop
cwtl
sahf
xlat
or
sahf
js
push
xor
iret
mov
lds
pop
inc
cmp
or
sub
xor
mov
sahf
jmp
or
xchg
lods
ret
xchg
cmpsb
adc
loop
cld
xchg
divb
cmpsb
loop
mov
jns
sbb
inc
pusha
xchg
pop
fisttps
insl
inc
inc
adc
mov
inc
xchg
test
js
sbb
inc
mov
pushf
call
in
xor
xchg
xchg
sbb
lcall
xchg
push
mov
jl
and
xchg
push
ret
add
lock
aas
mov
pusha
push
scas
pop
mov
ds
into
and
ljmp
and
sbb
adc
mov
rep
fs
mov
pop
rcr
push
lret
notb
jns
xchg
push
jno
leave
xchg
mov
pop
mov
pop
jne
ja
or
movsl
aas
push
pusha
sub
mov
imul
inc
and
in
pop
aad
sub
insl
dec
int
lods
cmp
and
repz
jo
mov
lds
es
push
aad
mov
loope
and
dec
insb
inc
xlat
add
mov
mov
insl
cwtl
in
mov
int
mov
pop
dec
pop
mov
iret
xor
enter
mov
add
or
sub
jne
cwtl
xor
movsb
or
or
pop
push
or
mov
insl
lcall
les
mov
mul
or
sub
mov
xchg
and
daa
ucomiss
push
mov
jecxz
mov
mov
mov
pop
jg
ret
pop
std
lock
xor
pushf
inc
lahf
cmp
loop
pop
ss
enter
out
pusha
inc
sub
push
out
pop
xor
jae
lret
stos
or
jmp
dec
clc
mov
mov
push
cmp
sub
pop
xlat
nop
push
es
add
in
stos
pop
lock
fnstenv
dec
orl
daa
cmpsl
xor
mov
scas
mov
in
push
in
imull
subb
ds
inc
test
iret
cmpsl
nop
adc
mov
std
xor
mov
out
enter
mov
in
pop
outsb
lahf
fmull
dec
test
mov
je
sub
aaa
je
cmp
mov
mov
jae
xchg
sarl
xor
mov
sarb
lahf
aas
out
cmp
dec
repz
or
dec
ja
sub
xchg
inc
mov
adc
fs
scas
push
rorb
daa
fnstcw
cmp
in
test
aaa
jb
mov
cmp
push
into
daa
sub
ficoms
dec
lods
add
in
pop
and
and
icebp
push
mov
loopne
js
mov
mov
mov
int
jmp
loope
dec
loope
shrl
es
pop
cmc
fildll
in
pop
lahf
cmp
cmpsb
pusha
mov
pop
pop
dec
loopne
jl
shrb
sub
mov
mov
cs
inc
and
adc
fldl
xor
sti
or
rol
pop
sti
mov
mov
std
and
push
push
imul
je
or
dec
pop
int3
stos
sti
pop
mov
ret
sbb
lahf
loop
in
cmpsb
mov
or
popl
mov
and
mov
cmpsl
mov
jg
subb
insl
push
int3
xor
or
shlb
addl
push
pop
rcll
xor
out
icebp
inc
dec
inc
or
adc
mov
pusha
dec
sbb
pop
xchg
cltd
sub
sbb
mov
scas
insl
setne
into
shll
call
cmpsl
adc
xor
sbb
arpl
pop
mov
and
and
mov
xchg
aaa
pop
push
jl
js
mov
dec
int3
orb
dec
insl
push
add
pop
loop
cmp
push
jle
xor
add
lea
mov
loopne
push
fsubl
mov
dec
mov
repz
pop
pop
sbb
cmc
xchg
push
mov
cmp
nop
push
xlat
jmp
push
mov
jge
je
jg
cmp
sub
leave
cltd
insl
xchg
scas
inc
in
lret
cltd
mov
ficomps
push
arpl
mov
adc
cmpsl
mov
push
insl
adcl
adc
add
sub
push
in
inc
ja
call
push
sti
aas
insl
fst
pop
mov
fidivrl
push
fstpt
out
cmpsl
mov
add
push
imul
dec
cmpb
push
imul
lret
in
leave
dec
ljmp
aad
sbb
or
add
and
lds
xor
or
jnp
push
lock
lock
jg
adc
and
jl
pop
in
in
shrl
mov
and
lods
loope
adc
in
jmp
les
mov
bound
mov
push
jo
mov
or
jne
dec
dec
jno
je
cmpsb
jg
cmpsl
lret
sti
mull
cmp
add
fnsave
iret
push
test
lcall
test
mov
mov
ljmp
mov
dec
pop
scas
loop
dec
sub
adc
jmp
and
test
sub
pop
sbb
push
sbb
xchg
xlat
mov
xor
add
icebp
inc
lahf
inc
pop
rol
push
mov
and
mov
jo
pusha
fst
insl
shlb
or
pusha
mov
push
lods
fdivrl
inc
mov
sub
lcall
rcll
fcomip
movl
shrl
cs
es
mov
xchg
add
jl
cmp
popf
adc
pusha
aad
lcall
add
sub
shrb
lods
sub
mov
outsb
daa
rcl
xor
sub
ficompl
adc
xchg
sub
push
filds
xor
cmp
inc
arpl
or
sub
and
xor
pop
insl
arpl
inc
into
mov
or
pop
fstpt
jo
je
out
mov
sbb
lcall
ljmp
mov
or
lret
mov
shl
es
jg
or
dec
mov
inc
xchg
push
jmp
jg
stos
or
pop
add
or
loop
sbb
out
movsb
cmp
cmpsb
jmp
mov
rcl
popw
addr16
aam
aad
testl
and
cli
or
aad
xchg
xchg
not
sbb
jp
mov
pop
sub
push
jnp
arpl
mov
ss
push
adc
add
lock
mov
repnz
js
jnp
cmp
into
jmp
mov
sbb
ljmp
sub
scas
mov
mov
add
rcr
int3
pop
adc
fnstsw
nop
into
jecxz
mov
jg
decl
lods
xchg
pushf
daa
test
nop
mov
xchg
mov
popf
mov
ds
out
or
out
add
mov
pushf
and
lcall
and
pop
dec
pop
and
push
jmp
addr16
shl
mov
jno
call
int
xchg
and
out
adc
leave
sbb
mov
jbe
pop
push
push
leave
cli
sahf
lret
pop
shl
xor
mov
fidivrl
mov
loop
jae
test
jbe
out
and
out
mov
stos
hlt
push
and
ret
xchg
in
dec
mov
sahf
xchg
mov
ss
rorb
sbb
xchg
xchg
ficompl
mov
cmp
ljmp
addr16
scas
out
inc
into
xor
mov
mov
push
cltd
sarl
cmp
mov
aas
sbb
adc
inc
and
add
into
sub
pop
pop
pop
inc
cli
cmp
or
lods
das
xchg
mov
dec
aad
cmp
test
jge
lods
std
jge
xchg
jge
mov
test
and
lret
adc
cmp
mov
mov
sbb
xchg
xchg
iret
mov
andl
test
xchg
hlt
sub
imul
xchg
dec
inc
jl
sub
gs
movsb
cmpsl
dec
mov
lret
jge
ss
mov
adc
xchg
lea
in
jbe
cmp
pop
jae
aaa
dec
sub
pop
loop
daa
mov
outsb
movsb
mov
outsl
movsl
lock
inc
and
inc
je
inc
push
xchg
xor
inc
in
xchg
xchg
cmp
inc
lcall
mov
les
mov
out
popa
jb
ss
bnd
sub
ja
inc
dec
aas
jle
jns
imul
roll
hlt
test
inc
dec
fcoms
mov
jecxz
or
and
mov
js
inc
inc
cli
into
testb
jmp
imul
sbb
dec
xor
mov
ret
aam
mov
jle
push
into
loope
leave
sbb
das
out
mov
test
arpl
popa
sub
sbb
sub
mov
cld
inc
jne
ja
lds
mov
js
stos
mov
jp
xor
mov
xor
xchg
lock
dec
ror
les
xor
xor
aas
orl
pop
sar
jp
mov
add
in
mov
dec
or
std
push
ja
mov
push
pop
inc
mov
lcall
jecxz
scas
adc
adc
xchg
and
xor
jecxz
sub
les
adc
arpl
imul
xchg
adc
std
jmp
sub
and
dec
out
call
bound
das
dec
lret
or
loop
popl
gs
jge
aam
stc
in
cltd
mov
mov
add
das
clc
pusha
stos
sub
cmp
insl
dec
out
outsl
scas
add
xchg
adc
sub
xor
icebp
data16
and
in
add
or
outsl
inc
cmc
sbb
sbb
fisttps
dec
mov
fmulp
inc
lret
cmp
jl
mov
push
lods
ds
pop
fbstp
adc
jg
dec
pop
jo
loope
jbe
cmpsl
push
jecxz
ja
test
enter
sbb
popf
orb
pop
add
or
sub
inc
in
subl
jp
mov
sub
xchg
rcrl
mov
mov
mov
leavew
jno
mov
mov
xchg
out
mov
mov
insl
enterw
rcl
lods
hlt
cmpl
push
loop
fsubl
cmp
enter
adc
mov
add
pop
repz
cmp
lds
ds
pop
dec
lock
leave
inc
std
shrl
xchg
jg
pop
ficoms
das
nop
out
cmpsb
pop
out
pop
jae
data16
xchg
gs
cmp
mov
or
lods
out
xchg
xor
xchg
sub
icebp
add
pop
add
addb
adc
pop
outsb
cmp
mov
jg
mov
ss
or
dec
addr16
inc
cmp
into
dec
mov
mov
mov
sub
xor
fdivs
push
mov
xor
lea
xchg
cmp
mov
cmpb
leave
cmpsl
inc
daa
pop
sub
pop
arpl
negb
shll
dec
in
sbb
push
sahf
xchg
mov
mov
jnp
xchg
cmpsb
std
outsb
and
add
jno
sub
adc
fsubrl
xchg
btsl
lea
mov
fscale
lret
nop
pop
int
scas
cli
int3
aaa
dec
push
jb
dec
push
mov
cwtl
outsb
dec
xor
pop
xor
repz
sti
aas
pop
mov
fldt
or
ja
adc
in
and
xor
js
cwtl
adc
es
imulb
cmp
adc
movsb
mov
out
outsl
dec
or
jne
mov
out
pop
call
add
jo
inc
out
and
out
loopne
jmp
adc
jmp
sahf
test
mov
pop
cmp
sub
xor
fists
setp
push
shlb
cltd
pop
add
pop
sub
or
mov
sub
dec
mov
das
shrb
fildl
mov
or
mov
lock
jge
or
in
sti
lods
ljmp
add
das
push
adc
dec
popa
aad
mov
rcrb
fidivs
shll
mov
ljmp
dec
inc
mov
sub
out
pop
mov
in
push
adc
pop
je
icebp
outsb
xor
lahf
and
inc
jge
imul
imul
xchg
ror
push
dec
dec
dec
push
jge
shlb
pushf
test
mov
push
cmp
mov
jge
sub
stos
fildl
mov
es
pop
mov
jge
getsec
push
push
mov
lret
aam
sti
fnstcw
and
int3
adc
repz
mulb
out
decb
out
adc
in
shlb
fsubs
subb
ret
inc
cmp
rclb
adc
lods
rorb
inc
add
sbb
and
mov
stos
dec
add
cmp
cmp
push
dec
mov
push
and
add
and
cmpsl
aas
call
inc
and
out
negl
aaa
shlb
arpl
push
jle
stos
bswap
int3
dec
mov
or
mov
stc
mov
test
insb
push
out
in
les
mov
sbb
mov
xor
push
or
das
stos
into
xchg
jle
js
addl
fidivs
sahf
mov
cmp
lret
inc
sbb
mov
test
xlat
lcall
add
les
mov
insb
xor
es
sahf
xchg
jle
push
bound
mov
xor
and
inc
roll
or
xor
pop
test
xchg
push
scas
push
pop
lods
shl
inc
push
xchg
stos
std
vcmpsd
lret
neg
std
repnz
test
push
pop
jns
sahf
pop
pusha
inc
pop
xchg
or
mov
adc
gs
push
aaa
cmc
popf
test
add
shrb
pop
dec
test
mov
add
adc
mov
iret
mov
gs
mov
pop
xor
fmul
adc
roll
sub
mov
addr16
jno
popa
or
aas
icebp
mov
sub
or
stc
push
daa
arpl
and
ss
push
push
jno
aaa
mov
cmpsl
stos
cwtl
nop
data16
lods
cmpsl
insl
scas
xchg
fsubrl
lods
leave
cltd
sbb
push
push
daa
dec
sub
adcl
ficoml
inc
js
aad
push
jns
dec
xchg
cmpsl
xor
mov
cmp
test
mov
mov
lods
inc
aas
mov
inc
loopne
loopne
add
jl
mov
fildll
aam
xchg
pop
xchg
and
xor
pop
add
lcall
mov
mov
cmc
mov
lret
in
imul
filds
adc
ss
xor
pop
inc
lds
int3
shll
mov
andb
xor
fbld
incb
ljmp
clc
xor
jbe
cmpsb
lea
xor
cmp
push
stos
addr16
repnz
cld
pop
xchg
clc
sbb
loope
jecxz
jb
cli
and
scas
dec
les
push
push
clc
ret
jmp
inc
xchg
outsb
repnz
cmp
adc
gs
mov
sarl
lods
fld
jge
sub
xchg
cwtl
pop
movsl
cmp
xor
icebp
ret
cmp
cltd
ret
ljmp
test
xor
adc
sbb
adc
jle
outsb
add
jmp
movsb
pop
stos
sub
std
sub
clc
pop
add
dec
in
or
inc
insb
fwait
dec
inc
mov
aas
jno
nop
cli
inc
test
cmpsl
ljmp
mov
push
sbb
loop
xchg
dec
jo
arpl
mov
xor
popf
push
scas
int
cmp
aad
js
adc
jmp
push
ljmp
mov
das
divb
fmulp
pop
or
sub
cli
cli
pop
shll
and
mov
sahf
in
xchg
pop
xchg
adc
clc
mov
gs
mov
lds
jne
xor
sbb
outsb
mov
mov
cmp
dec
push
xor
gs
xor
scas
imul
mov
and
fldl2t
imul
pmullw
jne
add
mov
jle
and
and
ljmp
and
push
dec
inc
mov
sbb
fldt
mov
mov
inc
inc
int
gs
jecxz
movsb
jl
sti
cmc
dec
call
mov
lret
in
movsl
lahf
arpl
ret
in
imul
cmpsl
imul
inc
cmc
mov
or
addr16
mov
scas
ret
cwtl
cmc
out
daa
cmp
jno
fbld
aam
mov
jbe
pop
pop
mov
daa
add
pop
lret
ror
sub
in
cmp
push
mov
sbb
clc
shrb
cli
xchg
int3
lods
repnz
movsb
fwait
add
xor
pop
mov
fiadds
fldl
pusha
loopne
in
sbb
outsb
mov
aas
xchg
je
pop
push
test
push
movsl
pop
loope
inc
fdivrs
mov
adc
ss
mov
pop
in
pop
int3
cmp
pop
or
mov
pop
loopne
pop
outsl
jns
jp
lret
jmp
inc
gs
out
imul
mov
mov
fidivrs
dec
imul
imul
test
mov
push
jae
dec
mov
or
xchg
cltd
mov
fldt
xchg
xor
test
push
enter
push
dec
in
mov
mov
lds
bound
test
fiaddl
push
testl
notl
fldl
jae
scas
dec
pop
mov
ret
ljmp
gs
mov
mov
push
cmpsb
jmp
ja
cld
in
lds
sbb
movsb
pop
imul
test
lcall
ficomps
adc
in
popa
xchg
or
adc
xor
adc
mov
add
mov
iret
test
xchg
adc
out
adc
inc
jb
in
addr16
add
fucomp
aaa
out
sbb
jle
jnp
cmp
adc
xor
aam
xor
adc
das
xor
mov
andl
iret
shl
mov
or
in
pop
pop
mov
adc
jp
dec
xor
or
in
imul
arpl
vhsubpd
and
pop
cmp
dec
in
cmp
push
aaa
jge
rcll
pop
jno
cs
in
test
lock
in
jecxz
push
ret
mov
pop
into
into
insl
hlt
pop
pop
add
cmp
lock
mov
mov
data16
mov
aam
push
gs
xchg
ja
hlt
sub
lds
iret
scas
mov
or
dec
xlat
in
mov
pop
test
fisttps
add
jo
test
xchg
fstpl
into
loop
pop
test
mov
add
cmp
sbb
inc
mov
loope
push
mov
and
push
push
test
ret
lods
mov
lea
movsl
jg
xor
mov
mov
stos
push
mov
adc
andl
pop
mov
fcompl
xor
cltd
mov
xor
in
sub
mov
ret
mov
sahf
test
mov
cmp
fcompl
adc
pop
lds
mov
outsl
cmp
mov
pop
imul
mov
fidivl
xchg
fnstcw
fbstp
scas
push
sub
lods
xor
mov
or
addr16
mov
lcall
lret
jmp
cli
rcr
ss
stc
adc
push
xor
lods
fwait
xlat
jmp
dec
adc
mov
pop
mov
icebp
leave
dec
cmp
dec
jmp
jl
fisttps
adc
and
iret
inc
fidivrl
insl
lea
adc
sbb
inc
out
adc
inc
or
and
lret
gs
sub
pop
iret
imul
out
subb
loope
mov
xchg
xchg
jo
pop
mov
bound
nop
and
int3
rcr
int3
in
mov
popf
into
pop
das
sbb
incl
xlat
gs
int3
shl
xchg
repz
mov
sbbb
stos
movsb
ss
test
xor
xchg
adc
aad
jne
repnz
loop
add
xchg
popf
mov
lcall
adc
cmp
adc
jne
jne
idivl
jae
add
pusha
pop
and
rcrb
jmp
xor
addr16
xor
outsb
mov
mov
in
insl
cmp
pusha
icebp
dec
inc
xchg
add
call
fistl
pop
adc
pop
fcompl
orb
pop
shlb
cmp
cmpsb
push
fildll
dec
push
cmp
nop
dec
repnz
xchg
mov
btsl
xor
fwait
mov
stc
adc
or
cwtl
das
scas
std
out
ss
jle
dec
dec
int3
mov
addr16
cmc
sbb
jp
push
sub
hlt
dec
movq
lret
divb
aad
into
lret
mov
lret
iret
in
mov
xchg
outsb
loopne
bound
sub
aaa
add
insb
ja
fwait
in
sbb
cmovbe
pop
in
sbb
out
bound
bound
xor
cmp
xchg
int
mov
mov
inc
aam
lock
jb
dec
sbb
stos
jmp
and
imul
mov
std
stos
fld1
and
mov
imul
push
sti
lds
adc
dec
sahf
and
xchg
push
xor
clc
out
hlt
lret
push
stos
mov
mov
mov
pop
es
xor
mov
add
notb
sub
jbe
imul
xchg
sti
add
lea
push
xlat
into
hlt
pop
int3
das
fwait
es
fldt
popa
mov
lds
pop
jo
jbe
sub
inc
sbb
enter
outsb
xor
imul
stos
mov
fimuls
sbb
sbb
mov
cld
fnsave
les
sti
repz
inc
mov
cli
add
jo
adc
cs
loope
sarl
imul
mov
cmp
mov
outsl
mov
inc
adc
rclb
cmpsb
sub
rol
push
ficomps
add
xchg
js
movl
and
push
or
shr
sub
jno
and
sbb
inc
mov
and
adc
sbb
jne
lods
sbb
mov
data16
jl
mov
fisubrs
dec
in
ds
insb
rorb
bound
test
pushf
mov
imulb
xchg
adc
jecxz
jne
addr16
jo
sub
pop
dec
imul
out
xchg
jnp
test
sub
lock
xor
mov
sbb
scas
sti
push
mov
mov
ds
jo
fwait
lahf
imul
mov
lret
das
ljmp
and
div
stc
rcrl
rcl
sbb
movsb
sbb
lcall
fs
push
pop
jg
adc
xchg
clc
push
js
pop
jg
xchg
jne
or
xchg
push
sahf
jecxz
in
jge
into
xor
psrld
popa
add
rcrl
mov
push
inc
cmp
inc
jl
adc
push
int3
lock
mov
xor
fdiv
xchg
jo
lds
in
js
cld
stos
fbld
das
dec
cs
roll
dec
out
cmp
mov
jle
xor
add
rcrl
push
pop
aam
push
inc
mov
shl
jg
jne
cmp
xchg
jnp
sahf
stos
bound
adc
and
pusha
ds
repz
adc
sub
sbbb
mov
shlb
mov
xchg
pop
imul
xor
outsb
loop
xchg
push
xchg
push
test
out
or
push
xor
mov
xchg
push
call
gs
jbe
push
xchg
cmpsl
cmp
fs
pop
xchg
cmp
shrb
push
data16
xchg
jl
cwtl
lock
inc
push
es
xchg
xor
orl
cmp
adc
jge
pop
or
cs
dec
and
loopne
rcl
push
or
lods
mov
jecxz
stos
rolb
mov
cmp
and
sbb
cmp
arpl
sub
rolb
shll
data16
rorb
repz
mov
data16
in
pop
sar
pop
cli
pusha
inc
cli
xchg
sub
jb
ret
sub
nop
enter
lcall
lods
mov
xchg
inc
dec
mov
sbb
push
jns
sbb
push
lret
data16
inc
aas
stc
mov
cmp
faddp
call
push
push
arpl
pop
lds
popf
xor
sub
pop
mov
push
sbb
jnp
dec
mov
lods
imul
mov
je
cli
inc
adc
push
gs
loop
daa
inc
dec
mov
sub
addr16
xchg
jnp
add
loopne
in
jp
loopne
xchg
push
mov
movsl
hlt
xchg
xor
jg
jmp
loop
outsl
dec
or
in
cmpsl
scas
lret
movsb
in
mov
push
or
sti
ss
push
push
movsl
push
gs
pop
shlb
icebp
mov
pushf
fildll
int3
mov
add
and
lods
xchg
repz
repnz
push
outsl
mov
jmp
into
in
in
loop
jae
adc
leave
cmp
rorl
sahf
mov
and
cmc
ljmp
adc
dec
scas
adc
popf
or
fidivs
adcl
addr16
cmp
push
std
stos
rcr
add
fucomi
push
pop
push
mov
pop
int3
lahf
arpl
js
loope
adc
add
push
xchg
pop
cmpb
icebp
mov
clc
adc
and
or
stc
sti
inc
jb
xchg
jle
jbe
push
or
lcall
mov
out
sti
push
jl
dec
leave
mov
sbb
push
xor
scas
test
movsb
ds
mov
in
inc
push
or
push
sbb
jle
sbb
dec
int
nop
or
arpl
mov
jecxz
shrl
dec
cmp
mov
push
aam
xchg
aam
cwtl
pop
dec
push
xor
dec
mov
fcmovnb
loopne
push
pop
sub
push
xor
cmpsl
aam
into
inc
mov
insl
mov
aaa
mov
fcompl
inc
mov
fisubl
xor
jno
jns
jb
outsl
ja
in
inc
std
test
and
mov
pop
scas
add
xchg
cmp
mov
mov
addl
loopne
and
fsubrl
in
adcl
popf
pusha
lods
test
dec
repnz
cmp
cli
xor
lock
jge
push
push
and
or
sbb
gs
mov
mov
adc
sub
jmp
andb
ret
pop
ss
scas
dec
cs
inc
out
sahf
mov
xor
les
xlat
fs
aaa
scas
jne
into
sub
xchg
out
subb
mov
mov
test
nop
lock
pop
or
jmp
xchg
les
xchg
sub
mov
in
sbb
inc
cmp
sbb
fmulp
inc
inc
pcmpeqd
mov
leave
mov
pop
int3
mov
mov
jo
xor
and
xchg
test
adc
pop
inc
ss
lahf
sub
add
xlat
cmc
and
add
clc
jecxz
aad
nop
shrl
push
inc
adc
pop
sub
gs
dec
push
push
adc
jae
mov
out
and
fs
add
or
jl
nop
cmp
or
or
out
sbb
push
ret
call
xchg
xchg
cmp
lods
lods
adc
inc
aam
xchg
adc
fdivs
add
pop
and
inc
and
push
push
aaa
cld
pop
leave
push
add
sbb
cmp
out
sahf
fidivs
into
hlt
mov
clc
xor
dec
into
inc
fdivrp
into
cmp
stos
sbb
sbb
sbb
outsl
lods
push
sbbl
xor
shlb
sbb
or
int
or
andb
in
negb
xor
sbb
dec
dec
pushf
sbb
movsl
fs
pop
nop
vpcmpeqd
mov
test
xor
inc
lods
or
push
mov
movsb
loop
lahf
shrb
xor
rcll
add
cs
clc
lahf
mov
arpl
jbe
xor
xchg
xlat
lahf
jmp
and
mov
xor
icebp
sbb
popf
clc
movntq
inc
adc
dec
jmp
insb
loope
jle
mov
jg
pop
push
jnp
lret
daa
mull
mov
imul
push
pushf
int
insb
mov
jg
cwtl
jns
dec
mov
es
dec
mov
push
andl
fsubrl
imul
movl
shll
mov
or
dec
test
mov
addr16
dec
jb
sub
mov
clc
cmp
mov
imul
fsubs
mov
dec
and
pusha
pushf
aam
dec
cmp
es
mov
cmc
aam
mov
pop
mov
test
mov
mov
bound
outsb
outsl
pushf
mov
or
dec
imull
fstpt
adc
xor
cmpsb
loopne
pop
jbe
add
seto
push
clc
aas
and
es
sub
mov
int
test
dec
les
adc
insb
mov
jnp
jp
add
data16
xchg
xchg
push
lret
or
sub
mov
xor
out
lahf
xlat
dec
cmc
daa
int
fldenv
repnz
bound
xchg
mov
clc
dec
cs
lcall
xor
les
pop
mov
sbb
fimuls
push
sub
jp
inc
sub
and
adc
fisubs
shrb
push
lock
sub
inc
add
movb
icebp
mov
mov
cmpsl
stos
inc
xor
lea
sti
push
sub
xchg
adc
stos
jmp
outsl
or
hlt
stos
jae
shlb
rorl
mov
add
rolb
aaa
dec
sbb
xor
xor
dec
call
xchg
aad
call
jge
jo
pop
cli
jbe
pop
add
mov
jge
nop
mov
jecxz
stos
and
cmp
adc
and
out
nop
insb
js
in
sub
xlat
jns
lcall
out
mov
stc
outsb
test
sahf
test
jecxz
std
push
pop
out
xchg
sbb
jae
sbb
sbb
ret
in
in
add
lret
add
rcll
dec
movl
movsl
test
cltd
pop
mov
lcall
cmpsb
loope
mov
test
loop
stos
out
mov
add
iret
add
xchg
movsb
mov
xor
mov
adc
jo
cmp
popf
notl
sbb
mov
das
mov
mov
sub
and
xor
addr16
sub
test
mov
gs
pop
pop
adc
mov
subl
jmp
push
mov
das
cmovo
pop
test
je
fsubl
and
clc
xor
imul
int
add
cmp
xchg
lods
cmp
xor
mov
dec
repnz
push
or
out
fadd
pop
adc
adc
jnp
pop
jne
fs
adc
push
add
jp
lea
das
xchg
fisttpl
aad
jl
faddl
loopne
push
leave
leave
dec
xchg
or
repz
scas
insl
jmp
and
pop
call
mov
adc
adc
fs
xor
pop
incl
pop
mov
in
add
mov
in
adcb
iret
xchg
popa
pop
mov
adc
mov
mov
push
ficompl
cmp
loop
sbbb
shll
mov
jbe
lret
sbb
add
mov
mov
push
in
jne
cmp
mov
notb
test
lea
imul
hlt
les
sbb
fcom
add
xchg
and
inc
jge
shll
jl
dec
loop
fildl
addr16
lahf
and
mov
sub
mov
test
mov
inc
xchg
pop
outsl
and
aam
push
cmp
test
mov
inc
mov
subl
aas
aas
mov
or
js
lret
in
mov
pop
ss
imul
cmp
aaa
pusha
add
mov
stos
in
loopne
push
xor
je
add
out
out
cld
mov
movsl
mov
cli
mov
ret
mov
enter
pop
or
fidivl
xchg
pop
repnz
push
arpl
pop
pushf
mov
data16
pop
and
cmp
ret
std
hlt
xchg
or
mov
pop
xor
ds
movsb
enter
jp
pop
aam
pop
aam
enter
addr16
mov
sbb
jmp
mov
imul
ja
push
adc
pop
divb
sub
xchg
mov
xchg
rclb
mov
and
cmpsl
xor
sub
mov
test
push
ret
adc
or
es
loop
or
xor
loope
fcom
jmp
xchg
jbe
out
push
add
data16
dec
dec
or
adc
lods
mov
stc
test
aam
lea
fnstenv
sti
std
ret
lcall
ss
int
sub
jg
push
lahf
insl
mov
xchg
dec
test
in
and
inc
pop
test
pop
mov
add
call
mov
inc
incb
mov
pop
mov
in
cwtl
out
push
aam
out
test
rsqrtps
push
addr16
jnp
xchg
cmp
and
jge
test
in
es
lahf
pop
out
subl
and
cmp
leave
movsl
jne
sub
rcl
inc
sahf
push
cmp
in
insb
sbb
ret
cmp
xchg
push
cmpsb
test
dec
push
xlat
ljmp
pop
fstl
bound
daa
ja
das
xlat
insb
and
divb
hlt
xchg
xchg
fnstcw
mov
mov
cli
pop
sbb
aam
pop
mov
stc
sub
ret
xchg
xlat
cmp
les
mov
jecxz
mov
add
imul
out
pop
jns
xor
lret
fsqrt
fs
std
jmp
dec
gs
lods
scas
daa
pop
mov
adc
lock
movsb
or
sbb
lods
aad
inc
dec
lcall
adc
inc
jb
hlt
inc
inc
fwait
int3
mov
jle
or
jl
push
test
sti
push
into
add
lds
xchg
sbb
jecxz
negb
xchg
pop
lods
stos
nop
jns
push
test
add
push
ss
dec
jo
push
aam
scas
pop
push
and
fwait
outsl
outsb
pop
in
popa
loop
cmp
fiaddl
and
fisubrl
push
mov
dec
xchg
cmp
fildll
jne
push
out
iret
lea
xchg
test
stos
loop
in
xor
fwait
or
jmp
mov
xchg
xor
dec
outsb
es
outsl
sub
mov
test
loope
das
bound
rcrl
aad
mov
repnz
xchg
xchg
add
lret
add
shlb
dec
ja
int3
mov
fldenv
int
pushf
xor
fwait
xlat
out
daa
pop
xchg
push
push
sub
imul
xchg
jae
cld
filds
mov
fcoms
xor
sbb
jl
pop
dec
subb
dec
cmovno
xor
mov
mov
xor
push
or
jne
fimuls
sbb
jbe
xor
daa
repnz
bound
sbb
and
test
cmpl
cli
sbb
adc
or
xchg
dec
stc
or
inc
inc
shr
lret
push
cld
mov
mov
movsb
test
dec
je
scas
pop
adc
pop
pop
cli
or
push
sbb
aaa
xchg
xor
dec
outsl
enter
test
jo
cmpsb
ret
mov
outsl
outsl
ja
ja
inc
loop
and
xor
in
test
push
xor
sub
push
ja
mov
shrb
clc
add
push
push
adc
shlb
push
or
jecxz
mov
nop
jo
mov
pop
mov
out
mov
movsl
pop
outsb
in
push
arpl
call
push
jne
inc
sbb
mov
pop
push
push
cmpsb
cmp
lods
mov
sbb
push
jg
push
adc
bound
mov
notl
push
ss
roll
lods
push
pop
jb
cmpsl
test
cmp
or
or
movsb
mov
mov
and
adc
cmpsl
ficoml
inc
jb
adc
dec
lret
ja
inc
imul
adc
lea
test
jl
adc
cltd
jno
sti
sbb
inc
stos
cmpps
sub
pop
sbb
cmpb
int3
or
and
or
jmp
mov
or
lods
and
ljmp
inc
lahf
popf
movsl
cs
hlt
inc
sbb
imul
ja
mov
dec
mov
xchg
es
inc
lea
std
fildl
mov
aas
xchg
cmp
rcl
pop
cmp
push
or
cwtl
cmp
imul
outsl
jns
out
mov
xor
insl
pop
xchg
lock
inc
es
cs
divl
xchg
loop
xor
out
out
push
cld
cltd
stos
adc
ficomps
sahf
pop
or
cmp
adc
icebp
lods
stc
or
divl
scas
sti
add
cmp
cld
jno
adc
fdivrl
shl
imull
push
jge
scas
iret
cs
insl
cmpb
lods
inc
adc
sti
cmc
rcrl
lods
lcall
xchg
jns
fldenv
cwtl
xor
mov
mov
sub
dec
jmp
outsb
inc
scas
add
stos
stc
loop
jb
jp
or
rorl
xlat
cmp
f2xm1
sbbl
outsl
pushf
ficompl
xor
push
mov
daa
xor
out
or
es
scas
inc
fs
mov
sub
mov
lods
mov
shrl
lret
xchg
scas
sub
aam
adc
mov
mov
es
mov
adc
dec
fadds
sti
mov
and
mov
sbb
sbb
pop
outsl
lods
xchg
pop
or
loope
lock
mov
lret
or
fistpl
mov
or
jp
cwtl
jb
jmp
es
cli
jns
pop
lcall
lods
sub
in
dec
mov
adc
jb
inc
inc
xchg
or
push
pop
dec
or
jmp
data16
cwtl
fidivrs
clc
push
adc
sti
mov
inc
out
and
cli
xchg
enter
std
je
mov
pop
outsl
pop
fldt
xchg
cmpsb
int3
inc
fimull
movsb
jo
adc
xchg
mov
jp,pn
dec
mov
cmp
into
stos
pop
xchg
pop
pop
daa
or
push
inc
or
lods
imul
and
mov
movsb
pop
mov
lret
sbb
outsb
movsb
or
pop
adc
outsl
xchg
mov
rorb
add
xchg
add
pop
mov
mov
addr16
add
outsb
pop
sbb
leave
pop
adc
add
lock
mov
popf
mov
cmp
lret
cmp
xor
adc
push
sti
xor
sahf
mov
mov
mov
or
xchg
push
cltd
in
adc
push
test
cmc
lods
xor
push
inc
cmp
or
cmp
addl
pop
xchg
or
aam
mov
in
imul
push
pop
jl
lock
mov
pop
push
mov
fwait
aam
stos
jmp
xchg
cltd
sti
cltd
pop
ficomps
mov
es
fcoms
sbb
rcrb
inc
add
addr16
stos
push
xchg
add
andl
pop
cmpsl
mov
jo
enter
xchg
jns
jge
xor
mov
sub
push
xchg
pop
cmpsb
enter
cmp
mov
cmpsb
addl
lcall
iret
mov
cld
push
repz
mov
or
aas
and
stc
inc
and
int3
xor
cld
fwait
cmp
sbb
ret
push
and
cmp
xor
mov
cmpl
add
stc
stc
lds
dec
mov
mov
je
div
ja
andb
repnz
xchg
pop
out
sub
jge
orb
inc
mov
clc
push
dec
sarb
in
jp
lds
fcompl
pop
dec
out
cmp
sub
cmc
ror
xor
cmpsb
stos
mov
mov
inc
mov
adc
push
pop
lods
shll
sbb
into
sbb
lret
cmc
pop
jg
inc
xor
or
xor
out
je
stos
inc
xor
sarl
jg
out
cltd
jg
jle
dec
sahf
jp
mov
inc
cmp
dec
rorl
into
hlt
inc
mov
mov
inc
add
sbb
int
add
add
xchg
sbb
inc
mov
xchg
rcll
sub
push
aaa
je
jle
lcall
rclb
fwait
pushf
pop
fucomp
fwait
mov
cmpl
jl
cmp
sub
repz
cli
scas
js
push
mov
shll
in
cmpsl
enter
jno
mov
inc
mov
aaa
dec
stos
adc
ret
sbb
pushf
data16
dec
test
push
mov
push
ficompl
scas
pushf
in
insb
mov
in
cmpsl
and
mov
enter
adc
insl
stos
mov
add
jbe
or
js
or
jbe
clc
push
sub
aam
lcall
loop
test
out
cmp
mov
arpl
adc
push
dec
jo
pop
sub
fmuls
dec
xor
push
xlat
xlat
mov
lret
mov
jnp
sbb
inc
ja
pop
addr16
movsb
mov
cwtl
pop
int
fucomp
push
push
ret
leave
insb
cli
xchg
sahf
ljmp
mov
sahf
pop
jns
pop
ret
cmp
adc
lods
lcall
push
adc
pop
movb
lods
push
cwtl
in
push
mov
push
pop
add
push
out
daa
lds
negl
movsb
and
je
fadds
out
add
call
sub
mov
mov
stos
in
mov
pop
cmp
out
mov
push
xor
cmp
jecxz
imul
sub
adc
negl
incl
lret
add
in
xchg
pushf
jae
xor
inc
leave
sub
push
loope
xchg
dec
jg
sub
lcall
push
fdivl
sti
xchg
shrl
jo
inc
dec
cmc
dec
xchg
and
mov
sub
js
push
jmp
or
jle
sbb
pusha
cmpsb
and
xchg
inc
sub
or
int
adc
aaa
je
shll
inc
pusha
mov
mull
je
add
out
xchg
dec
push
aad
shl
shrd
hlt
or
xchg
add
iret
cmc
out
lds
mov
pop
mov
xchg
ret
add
or
in
nop
ljmp
arpl
arpl
loop
dec
sbb
xchg
pop
in
push
fimuls
push
jecxz
lahf
inc
jmp
lods
jns
pop
mov
shl
and
fcomp
lds
jp
push
loope
push
inc
sub
mov
cltd
out
lcall
adc
jbe
jne
sahf
jg,pt
inc
scas
clc
pop
or
popa
or
sbb
iret
das
fimull
push
pop
xor
mov
sbb
xor
add
mov
xor
sbb
xor
rclb
lea
xchg
lods
loope
add
sbb
xor
xchg
push
imul
into
je
shlb
data16
cmp
out
shll
cmp
jecxz
cld
and
enter
aam
aaa
mov
or
pop
lret
ret
pop
cmpsl
daa
dec
fsubs
insb
pop
push
sbb
test
je
dec
jnp
xlat
in
xor
dec
dec
jbe
or
inc
cmp
sub
dec
dec
mov
shlb
pop
mov
addb
jb,pt
roll
mov
or
out
jg
movsb
test
lds
push
pop
nop
mov
sub
mov
mov
xchg
lds
and
fldenv
jge
pop
ret
and
mov
mov
xorl
aam
mov
in
outsl
xor
and
ds
mov
xor
push
pop
fs
or
insl
fisubrl
xchg
add
jnp
out
dec
imul
xor
mov
lock
fsubrl
adc
mov
cmp
icebp
iret
and
sbb
loope
xchg
jmp
mov
out
xor
xor
pop
push
loopne
clc
pop
or
adc
xor
cmp
hlt
hlt
push
leave
jp
bound
add
inc
jno
das
xor
xor
lret
cmpsb
inc
test
inc
or
sbb
dec
mov
mov
or
in
mov
xchg
xchg
dec
push
and
sbb
sti
push
insb
mov
push
push
pusha
mov
add
repz
push
loopne
adc
ficomps
mov
ss
pop
push
hlt
aad
adc
push
pop
jbe
mov
push
push
in
push
push
xchg
ja
push
sbb
jecxz
test
and
push
jg
je
mov
and
in
jae
ds
sti
mov
and
cmpsl
sub
jnp
adc
inc
jge
cmpsl
repz
decl
xchg
pushf
test
xchg
repnz
push
or
push
sub
aad
add
add
inc
and
negb
mov
imul
add
push
adc
rcrb
push
or
or
aaa
sbb
scas
mov
mov
fistpll
ds
mov
jne
gs
sbb
xorb
mov
jns
xchg
add
mov
jno
inc
rcrl
aam
inc
cmp
notl
test
inc
and
sbb
fadds
inc
mov
mov
push
adcl
pop
arpl
jecxz
pop
scas
dec
mov
lcall
fwait
es
pop
push
xchg
std
test
ret
sbb
mov
or
sbb
adc
pop
orl
les
shlb
enter
dec
rcrl
pushf
out
xor
ja
push
adc
lds
pop
cmp
mov
pop
push
addr16
cmp
stos
fdivs
xlat
repz
je
adc
paddd
dec
or
lods
ljmp
cmp
mov
iret
push
stos
push
and
cmp
dec
or
sub
divl
gs
insl
mov
push
adc
jge
das
adc
and
ret
push
and
xchg
out
xor
pop
fidivrl
jp
bound
jl
pop
pop
daa
sbb
lahf
sub
push
and
sahf
mov
jmp
fcomps
xchg
mov
sbb
adc
test
cmp
mov
sub
adc
ja
inc
mov
les
incb
or
xchg
push
fisttpll
cmp
mov
ja
shlb
mov
scas
testb
dec
data16
inc
or
inc
push
mov
cmc
add
sub
lret
dec
jg
xchg
arpl
lock
mov
loope
inc
add
and
arpl
mov
imul
addr16
sub
cwtl
cmpsl
andl
xchg
fmuls
mov
shrl
lds
scas
fcmovnb
mov
fcmovnb
jno
in
cld
jae
mov
ficomps
call
pop
xchg
int
inc
jp
mov
xchg
scas
aad
mov
enter
scas
sbb
xor
inc
sbb
in
scas
leave
push
mov
inc
roll
xchg
inc
jnp
aaa
daa
push
push
pop
mov
scas
inc
dec
or
in
inc
test
std
cs
jl
js
hlt
jecxz
ss
pushl
mov
dec
push
lret
fidivs
arpl
push
sarb
jb
mov
and
xchg
jg
pop
lret
movsb
xchg
shll
popf
mov
movsb
dec
jl
test
mov
xchg
xorl
aam
int3
ret
jmp
test
sub
out
xor
daa
pushf
insb
popf
into
shr
xchg
movsb
dec
mov
add
filds
inc
mov
jle
imul
lock
in
testb
add
ror
adc
push
add
add
fcoml
pushl
cmp
mov
xor
xchg
mov
je
xor
push
call
pop
push
jno
adc
adc
cltd
pusha
test
es
mov
cmp
jge
pop
aaa
sub
fists
jg
loopne
adc
into
loop
jp
ss
cmp
mov
add
popf
pop
adc
adc
sbb
dec
or
inc
sbb
lods
xor
frstor
lret
jecxz
inc
dec
xor
xlat
pop
int3
jns
xchg
pop
cmp
mov
test
std
rcr
outsb
aas
xchg
mov
pop
lds
lds
push
adcb
add
push
cmp
and
xlat
xchg
sarl
xchg
mov
stc
or
sbb
and
data16
adc
std
mov
fldl
cmp
iret
das
push
scas
das
xlat
mov
inc
xor
mov
mov
sub
jo
sti
mov
das
jmp
xchg
fs
movsb
dec
mov
stos
mov
in
ljmp
sti
mov
cmp
outsb
std
xor
daa
add
sub
subb
mov
mov
inc
stos
call
call
sub
mov
jg
cmovnp
push
jl
and
in
add
jns
pop
sbb
daa
dec
xchg
xchg
orb
leave
ret
dec
cmp
lahf
jle
mov
and
sarl
xlat
daa
inc
push
data16
jnp
pop
aam
mov
adc
leave
sti
in
shrb
gs
jbe
dec
filds
arpl
das
xor
vpmacsdql
sub
arpl
out
sahf
cmp
sbb
dec
mov
lcall
imul
popa
adc
inc
dec
push
aad
mov
stos
pop
push
add
mov
jo
scas
imul
fsubs
dec
shr
mov
adc
sub
test
xchg
xchg
push
cmp
jnp
push
lar
mov
dec
daa
pop
das
in
mov
insl
mull
imul
or
dec
mov
movsl
pushl
xchg
xchg
iret
jb
lahf
pop
jg
pop
and
out
or
je
push
inc
mov
rol
push
lret
push
or
and
pand
fnsave
scas
lret
dec
pushf
repz
lret
push
lea
arpl
lods
cmpsl
fcomps
push
fmul
movsb
addr16
xchg
adc
insl
shll
pop
sbb
imul
rcll
dec
and
sbb
mov
sbb
imul
cmpsl
mov
rolb
or
inc
or
mov
inc
fst
sub
cmpsl
cmp
cmp
xlat
inc
loopne
mov
nop
push
ficoms
xor
test
shrl
or
test
fldcw
or
add
in
dec
dec
xchg
shll
mov
mov
std
xor
sub
jne
es
inc
lret
sub
mov
cmpsl
xor
sub
jae
pop
scas
sub
pop
clc
jne
in
lret
call
cmp
jb
adc
xchg
je
dec
lcall
dec
int
shlb
scas
xlat
mov
scas
push
jns
sti
andl
sbb
and
jl
div
dec
cmpsl
pop
in
ret
int3
sub
cwtl
jmp
cmp
les
xchg
push
cmpsl
mov
dec
mov
or
loopne
cmc
and
jae
cltd
enter
fwait
dec
sub
movsl
xchg
jno
imul
add
je
xor
add
inc
jne
fadds
lods
pop
jo
pop
popf
stos
mov
test
fistps
adc
sahf
clc
inc
test
sbb
inc
xor
push
adc
mov
xchg
movsb
fstpl
cmp
jge
popf
popf
rcrb
xchg
in
je
das
cmc
ret
cmpsl
shrl
icebp
push
push
or
outsb
cs
pop
stos
out
pop
dec
negb
sub
inc
ds
stos
jo
and
add
xor
sbb
out
and
ds
jl
and
cmc
andl
stos
mov
ljmp
test
lret
jb
xchg
cwtl
mov
or
loop
insl
dec
shl
imul
data16
stc
sbb
xchg
mov
shlb
pusha
sub
adc
mov
orl
cmp
and
dec
cwtl
pop
push
mov
je
mov
jle
mov
jnp
aaa
shrb
sub
movsb
xchg
movsl
insb
cmp
arpl
rcll
inc
dec
sbb
mov
jns
ret
idivl
jge
jmp
inc
popa
bound
stos
repz
xchg
bswap
push
outsl
sbb
mov
fisubrl
mov
loop
lcall
and
or
mov
nop
push
call
test
outsl
movb
lds
popa
fcmove
jecxz
fs
jmp
dec
push
pushl
jp
mov
xor
and
in
rorb
sarl
xor
mov
popf
aad
xor
loop
push
sbb
div
fstpt
xlat
loopne
mov
xorl
xor
pop
xchg
popf
mov
mov
cmp
repnz
mov
add
aam
inc
mov
test
or
xor
xchg
xchg
ret
xchg
jns
xchg
cmpsb
lahf
imul
ja
push
popf
sub
fdivrl
dec
cmp
mov
jg
test
mov
rolb
fdivs
cld
inc
js
xor
mov
cld
movsb
jl
ljmp
sub
xor
cmp
iret
sub
mov
out
sbb
icebp
gs
xchg
jnp
fs
insb
mov
std
cmp
movaps
or
xor
inc
pop
stos
mov
fwait
jle
orl
cmp
repnz
or
rcrl
push
lahf
test
ss
or
fsubr
das
sub
cwtl
adc
loopne
adc
pop
mov
cwtl
outsl
sub
out
pop
movsb
test
push
data16
mov
push
fucomp
icebp
sbb
cld
lahf
ss
jmp
xor
sub
pop
sbb
imul
test
sbb
mov
into
mov
mulb
adc
sbb
lret
cmp
shll
jmp
mov
insb
ljmp
jmp
sarl
sub
pop
fbld
sbb
jg
xor
sub
test
or
mov
inc
fwait
pop
mov
pop
sub
add
xor
pop
loopne
mov
pop
les
shlb
movl
push
out
mov
xchg
dec
jnp
test
fsubrl
xchg
jmp
push
mov
aam
test
jno
ret
dec
inc
ljmp
les
sub
inc
pop
out
fiadds
cmp
adc
dec
add
inc
push
mov
mov
and
sbb
in
or
neg
das
xchg
push
add
cmpsb
arpl
ret
dec
divb
sub
sbb
add
lahf
xor
fwait
or
nop
xlat
adc
imul
es
xchg
scas
jmp
sbb
jno
xchg
or
xor
data16
movsb
aad
into
call
sbb
sbb
jns
repnz
mov
clc
cld
add
out
mov
dec
loope
xchg
or
in
aam
lea
loopne
dec
dec
ds
movsb
cwtl
pop
xchg
xor
pusha
dec
jg
cmp
das
mov
xchg
cmpsb
fidivrl
and
fdivrs
jl
or
jnp
jne
int
int
fwait
je
enter
lahf
jns
or
sbb
test
sub
and
inc
adc
cmc
sbb
push
push
adc
in
adc
push
inc
repnz
push
fwait
cmpsl
sub
mov
lods
xchg
ss
push
aaa
neg
icebp
testl
xor
in
cmp
dec
lea
repz
xchg
arpl
pop
ret
popa
fwait
mov
cmpb
frstor
mov
loop
pop
and
jne
movb
and
mov
movsl
lea
icebp
shrl
js
shll
sbb
lds
cmpsl
jno
sbbb
push
cmp
sbb
pop
jmp
addl
adc
int3
insl
xchg
xchg
inc
lahf
cmc
loopne
outsb
xlat
iret
or
and
sub
fldl
mov
repnz
cmp
lcall
std
xchg
or
addb
lods
push
push
movsb
idivb
mov
or
pop
shrl
icebp
jg
mov
fcompl
jbe
cld
ja
add
push
push
fcmovbe
pop
cmp
push
subb
icebp
movsb
xchg
test
push
mov
dec
gs
jae
adc
insl
add
mov
icebp
sbb
pop
mov
test
lahf
ljmp
xchg
movsb
jp
ss
arpl
stos
pop
pop
push
repz
cmpsb
xor
movsl
or
loope
push
lret
add
inc
fldenv
pop
stc
sahf
ss
inc
out
push
or
push
lret
jmp
pusha
js
std
loopne
decb
pusha
jo
lods
jo
cmpsl
pop
sub
fisubrs
sbbl
jle
test
insb
rcll
mov
xor
out
cmc
pusha
push
or
andb
mov
ds
jbe
xor
pop
fsubrl
fnsave
stc
pop
xor
pop
fnstenv
xchg
cltd
fs
push
jae
scas
pusha
xor
popa
mov
jo
das
aas
enter
div
dec
loope
jmp
push
mov
pop
mov
adc
sub
daa
loopne
dec
xchg
stc
cmp
test
fbld
hlt
lret
sub
push
ja
cmp
xor
push
jmp
cltd
jo
adc
inc
inc
adc
sbb
gs
out
es
incl
push
fdivr
pop
adc
xlat
in
ds
adc
stos
test
sub
sub
mov
xchg
fmull
stc
xchg
aad
mov
dec
mov
mov
scas
jg
dec
movsl
into
loopne
aad
jg
pop
adc
jno
dec
ljmp
into
data16
pop
das
imul
lcall
int
cmp
mov
pop
jno
cmp
out
subb
rcrl
cmp
mov
and
stos
pop
mov
scas
cmp
pop
cld
pop
sti
dec
adc
into
inc
xchg
sbb
jae
mov
outsl
test
jecxz
add
fstl
out
jle
std
aad
je
int
mov
dec
xor
sbbb
dec
loope
out
cmpsl
into
loop
aaa
mov
sbb
mov
mov
jmp
push
test
decl
adc
mov
cmpsl
jge
push
jg
icebp
sub
test
fwait
cmc
pop
push
pop
adc
dec
mov
insb
fldl
inc
jb
aam
push
jnp
adc
enter
push
adc
outsb
add
lret
or
xor
loope
add
jle
out
out
sti
test
je
popa
and
fadd
sub
bound
pop
xchg
test
ljmp
mov
xor
mov
mov
ret
xchg
and
hlt
shlb
xor
mov
and
xchg
cmc
stos
gs
in
lret
fiaddl
pop
ds
pop
sbbb
test
scas
jae
dec
icebp
cli
insb
movsb
cmc
sub
ret
sub
cmp
sub
fcmove
insl
jns
movsb
iret
cmp
pop
and
out
inc
out
mov
jp
jb
xchg
icebp
cmp
inc
mov
insb
movb
xor
push
lret
cld
cld
clc
jo
and
xor
jg
push
sbb
ljmp
jnp
ss
mov
dec
testl
push
inc
mov
test
add
lsl
xchg
lahf
in
lahf
and
pop
xorl
xchg
or
int3
arpl
mov
mov
adc
fistl
pop
ljmp
or
fisubl
sar
cmp
jbe
call
out
xor
rorl
push
daa
mov
mov
jno
mov
inc
call
lret
rolb
mov
and
popa
scas
push
xchg
jle
pop
icebp
gs
cmp
inc
adc
pushf
adc
cli
sub
mov
add
mov
ret
sub
sbb
adc
int
mov
jnp
and
pop
dec
mov
push
sub
bound
inc
cmp
aad
sbb
inc
adc
sub
mov
sub
repz
xlat
cmp
stc
adc
inc
push
inc
sub
ljmp
stc
dec
enter
test
mov
sub
fnstenv
insl
ss
popa
mov
loop
rolb
call
and
xor
and
lds
push
int3
mov
or
test
stc
lahf
mov
adc
xor
ret
lock
xchg
mov
pop
push
jbe
popf
out
fisubrl
sbb
sbb
push
loope
add
gs
outsl
push
inc
xchg
cld
movsl
fsubr
rcll
leave
xor
scas
adc
les
scas
push
push
xchg
adc
test
push
out
and
mov
pop
mov
mov
adc
jge
inc
test
add
sarb
movsb
xchg
lock
repnz
shll
fnstcw
jno
jns
dec
push
dec
popf
inc
cltd
call
call
and
xchg
pushl
push
icebp
dec
cld
dec
in
lock
jo
inc
sub
cmpsl
pop
cmp
jns
xchg
fbstp
mov
pop
lods
mov
rclb
repz
dec
sbb
or
fld
sub
jnp
jmp
sbb
das
in
in
xor
test
pop
push
notb
test
aas
movsl
sub
addr16
xor
xor
xchg
fstpt
mov
lcall
mov
cmp
test
jp
stos
mov
jmp
in
adc
mov
fsubl
inc
xchg
mov
data16
movsb
jp
jecxz
mov
cltd
or
cmp
fsubs
dec
les
and
push
push
les
and
repz
or
addr16
sub
and
test
in
jb
ror
sub
or
jecxz
das
aaa
xor
adc
mov
cmp
add
cli
or
add
cmp
mov
and
xorb
lea
mov
and
xchg
shr
fiadds
xor
xor
sub
sub
push
cmp
inc
mov
jecxz
imul
repnz
dec
test
sahf
sbb
je
mov
jne
xchg
outsb
in
imul
pop
movsb
push
js
stos
xchg
cld
leave
and
pop
cmp
dec
add
repnz
jg
stos
push
inc
rol
repnz
sti
aas
cld
cs
or
out
incb
and
jns
fists
pushf
lret
adc
xor
int
pop
jb
lods
cmpxchg
int
pop
inc
cmp
mov
ljmp
fcmovnb
lods
push
cs
xchg
std
jae
leave
mov
push
int3
inc
addr16
pop
frndint
fldcw
adc
inc
mov
insb
ret
pusha
push
xor
sub
das
cmp
test
or
and
jmp
pop
push
lcall
cmc
xchg
mov
mov
je
adc
popa
dec
xchg
inc
xor
mov
daa
sbb
mov
sti
outsb
cmp
jl
mov
test
jo
sub
fs
add
xchg
jg
pop
sub
scas
xchg
mov
bound
fstpl
insl
stos
hlt
adc
and
add
fimuls
adc
sub
mov
sarb
mov
dec
or
jbe
xchg
fsubl
je
rolb
dec
pusha
cmp
lcall
mov
lcall
lret
adc
mov
pop
mov
and
mov
inc
rcrb
mov
xchg
shlb
lods
clc
push
ret
insb
lret
mov
stc
imul
and
sbb
out
cmc
push
inc
cli
in
sbb
cltd
jbe
int3
idivb
mov
push
les
movl
jge
into
inc
sbb
scas
pop
out
xor
jmp
gs
add
sbb
and
cmp
add
mov
push
je
mov
out
out
adc
push
mov
outsb
xchg
std
mov
daa
push
dec
pop
xchg
iret
stos
and
xchg
loope
xor
fdivrl
scas
adc
mov
lret
mov
in
lret
aam
jecxz
sahf
sbb
fdivs
fbstp
jmp
es
sub
stos
xchg
or
xor
xchg
mov
aaa
dec
cmp
inc
jns
pop
mov
mov
movsl
adc
add
int3
in
test
sub
cs
add
hlt
movsl
jnp
orb
jno
dec
push
xchg
jecxz
push
mov
mov
add
push
mov
xor
sbb
dec
jmp
xchg
add
jbe
push
out
and
xchg
out
push
fs
lret
popf
inc
inc
fsubp
test
xchg
int
fldcw
xchg
xor
addr16
or
push
out
xorb
pushf
cmp
add
or
pop
push
add
and
jge
adc
sub
into
leave
stos
push
inc
insb
ret
sbb
cmp
ret
jl
sti
jnp
mov
vcvtss2sd
mov
push
loopne
in
out
pop
add
mov
jae
adcl
adc
cmp
adc
adcl
jle
and
test
ljmp
int
loop
mov
lahf
xchg
mov
cmpsl
shrb
add
rorb
outsb
mov
mov
and
icebp
sub
jg
mov
leave
sbb
jbe
gs
out
insb
test
repz
mov
lret
repnz
mov
xchg
and
stc
sub
ljmp
fimuls
inc
sti
jne
orl
or
cltd
mov
sbb
mov
pop
add
push
sub
mov
xor
cmp
scas
cwtl
mov
repz
pop
imul
mov
mov
shl
dec
sahf
add
scas
insl
xchg
int
adc
cmpsb
les
lock
jle
jo
jb
ficomps
sub
or
jl
aam
or
cli
mov
fcmovb
jne
jmp
pop
outsl
xor
sub
shlb
ja
mov
ret
jno
mov
idivb
popf
pushf
push
ret
xor
inc
fiaddl
add
and
ret
push
outsl
or
in
jmp
mov
xor
and
or
aaa
jge
sbb
test
aam
out
xor
xchg
ja
shll
imul
push
jae
inc
pop
lods
shrl
ja
pusha
outsb
filds
std
clc
rclb
mov
sub
negl
push
push
rcrb
push
divl
sbbb
test
jne
pop
std
cmpsb
out
imul
or
or
push
sub
ds
mov
repnz
fstpl
xorl
sbb
repnz
cs
jno
fbld
cmpsb
mov
jo
sbb
rorl
pop
iret
in
pop
jbe
adc
popa
daa
add
inc
pop
mov
mov
jae
out
cld
mov
mov
mov
imul
mov
jle
dec
in
xchg
cmc
scas
dec
das
rorl
andl
scas
js
adc
push
and
push
ds
or
pop
mov
adc
gs
bound
imul
cmp
daa
cmp
inc
xchg
dec
cmp
stos
icebp
mov
fbstp
sbb
xchg
in
ficomps
inc
jg
stos
es
dec
pop
pushf
int
jnp
lds
movsl
les
mov
or
outsl
mov
push
dec
mov
movsl
and
push
lcall
mov
jo
adcb
jae
lds
pusha
std
mov
pop
sbb
cmp
xor
out
xchg
repz
inc
out
xor
mov
dec
lret
pushw
int3
mov
shrb
push
test
sbb
in
and
or
mov
dec
push
ds
pop
xchg
leave
push
int
or
lods
ljmp
ds
lods
ss
jge
push
lock
cmc
lds
repz
add
push
or
bound
dec
or
fsubrl
mov
mov
and
cld
scas
cli
fs
icebp
dec
add
mov
xor
inc
fdivl
imul
dec
add
data16
push
or
sub
lea
shll
arpl
insb
pop
icebp
adc
mov
call
cmc
push
dec
and
pop
fidivrl
scas
sub
leave
jo
jns
cmp
push
scas
test
sub
sbb
mov
cld
packssdw
mov
lahf
or
fwait
jg
push
xchg
or
mov
xlat
sbb
iret
in
aas
push
xchg
cmpsb
inc
pop
testl
sub
jae
outsl
mov
iret
pop
call
inc
mov
mov
sub
jo
xor
add
fnstcw
jbe
ja
add
test
clc
jge
xchg
icebp
loopne
fnsave
cltd
mov
mov
cmpsb
inc
out
inc
jb
or
adc
push
stos
pop
or
stos
and
pop
and
leave
dec
pusha
xchg
orb
jecxz
mov
int3
hlt
dec
cmp
scas
xor
dec
shl
gs
decb
mov
in
js
push
jg
int3
sbb
inc
mov
mov
and
sub
in
loopne
fstps
fs
or
ja
and
jecxz
lock
mov
jp
sub
xor
jbe
adc
cltd
test
icebp
and
loopne
sbb
xchg
xlat
push
mov
gs
fsubs
xor
and
mov
sahf
rcrl
popa
and
jns
cmpsb
scas
js
mov
scas
or
pop
sbb
mov
ret
ret
out
roll
std
lock
push
pop
add
shlb
inc
test
in
mov
int
push
or
clc
pop
js
adc
fiaddl
lea
push
xchg
mov
jns
add
bnd
fdivs
pop
scas
lret
js
ss
mov
add
sbb
jbe
gs
xor
pop
mov
mov
mov
xchg
sub
pxor
jecxz
outsb
cwtl
xor
lods
push
sbb
adcl
cmp
cmpsb
dec
aaa
jno
fisubl
mov
pushf
jne
and
jmp
lea
pop
shlb
ja
ss
xchg
mov
xor
ljmp
sbb
jmp
sbb
ds
mov
repz
dec
cwtl
test
lods
add
mov
dec
mov
imul
and
cs
fiadds
lretw
js
push
outsl
cld
leave
ds
push
fwait
std
in
cmpsl
cwtl
inc
mov
and
in
je
test
push
daa
cli
inc
push
testl
push
jns
xor
inc
es
loopne
push
lea
mov
xchg
enter
aaa
in
movsl
push
lret
push
jmp
int
js
pop
sub
lcall
mov
sbb
push
xor
insl
or
outsl
std
pop
jmp
imul
sti
cwtl
mov
cmp
and
xor
and
jecxz
dec
stc
testb
mov
or
cli
mov
insl
lds
push
mov
gs
push
sbb
or
mov
outsl
jmp
pop
push
cli
scas
mov
test
sbb
jecxz
sbb
lock
jb
sbb
mov
call
sub
cli
xor
sbb
cmpsb
fsts
pop
cmp
xor
mov
xchg
adc
fimuls
movsl
mov
movhps
lahf
dec
dec
dec
int3
mov
in
mov
lret
out
outsb
or
imul
shr
jb
push
scas
insb
adc
cmp
inc
or
pushf
int
fs
and
sti
jge
or
jno
mov
push
sub
das
push
hlt
xchg
mov
xlat
sbb
push
pop
es
arpl
out
mov
add
push
adc
in
lcall
lcall
pop
out
rorb
cmp
dec
and
or
xchg
fcmove
add
push
test
lret
or
lret
divb
mov
mov
mov
movsl
inc
dec
push
popf
jns
clc
in
or
mov
decl
cld
addl
dec
sahf
adc
push
sbb
fisubs
jle
or
aaa
inc
and
mov
xor
enter
push
mov
rolb
imul
xor
push
mov
int
xchg
movsb
adc
xlat
lret
notb
movsb
std
popf
loopne
insl
mov
mov
rcr
inc
loop
clc
pop
inc
mov
push
sti
imull
inc
jnp
and
or
push
pop
ja
iret
rcrl
mov
xchg
sub
lahf
and
out
lock
test
cli
sbb
daa
into
mov
out
jmp
fnstsw
mov
iret
jb
mov
mov
int3
ret
xchg
ljmp
lahf
jl
arpl
scas
aad
orl
negl
lret
scas
mov
add
pop
shl
repz
xor
sub
movsb
pop
mov
in
fidivrl
js
sbb
imul
inc
mov
jmp
in
xchg
lahf
sarl
add
call
jp
push
inc
insb
sbb
jecxz
jno
jmp
jbe
fs
mov
pop
inc
and
push
das
dec
cmp
bound
scas
mov
pop
mov
or
pop
mov
pop
cmp
jo
mov
sti
pop
mov
sub
mov
repnz
rol
ja
add
pop
rcr
mov
icebp
insl
and
xor
std
lcall
shll
cwtl
mov
ljmp
jnp
dec
push
dec
cli
out
stos
dec
push
enter
sarb
out
addl
insl
jecxz
mov
shl
dec
push
mov
test
repnz
addr16
lret
test
sbb
outsb
loopne
or
pusha
adcl
mov
push
push
test
sub
nop
stos
scas
mov
add
insl
jo
sub
lock
movl
shll
inc
shll
jnp
cmpsl
xor
shll
mov
call
adc
xchg
adc
add
or
mov
call
sbb
cmp
jb
push
pop
andl
stos
mov
adc
outsl
lcall
push
add
xlat
cmp
sub
lds
or
std
adc
scas
lret
sub
jno
and
mov
ljmp
dec
sub
mov
in
stos
jg
movsb
int3
out
dec
popf
jns
and
rorb
fstpt
push
mov
mov
push
mov
cwtl
xchg
inc
pop
out
lret
push
scas
pop
hlt
out
lds
xchg
popf
sub
lods
les
sbb
cmp
cli
js
stos
jnp
movsl
ss
pop
inc
shl
lret
stc
sti
adc
testl
dec
push
pop
in
add
push
stos
mov
cmpsb
xchg
shl
jl
cmp
add
fstl
mov
jmp
sbb
into
ret
push
test
mov
inc
lcall
popa
std
insl
sub
repnz
loopne
jle
jmp
clc
dec
aaa
pop
popf
jns
or
into
out
in
test
cmc
je
sbb
add
testb
imul
push
sbb
pop
daa
shrl
xchg
mov
cmp
pusha
out
insl
ds
mov
imul
pusha
and
inc
lods
add
in
and
lds
leave
stc
xchg
or
jle
jp
das
mov
mov
ljmp
aaa
jae
push
inc
lea
clc
inc
movsb
pop
ret
mov
sbb
push
xor
out
and
repz
xchg
sarl
stc
out
ss
test
xor
pop
leave
outsl
das
inc
mov
inc
xchg
cmpb
mov
push
dec
mov
and
mov
inc
push
popl
add
ret
add
cli
inc
in
lods
pushf
push
arpl
push
subb
ljmp
lahf
dec
fs
ret
popa
mov
sub
inc
xor
aad
and
jae
stos
or
and
sbb
xor
mov
cmc
inc
mov
sbb
dec
sub
mov
jp
jmp
push
add
lock
mov
cmc
mov
std
aas
and
out
pop
adc
xlat
add
xor
and
sbb
std
jge
cmpsl
pop
fwait
adc
in
ret
stos
mov
clc
sub
je
out
shr
pop
fldenv
fmuls
inc
push
dec
mov
fs
packsswb
xor
idivb
ds
gs
mov
mulb
jle
roll
xlat
cwtl
mov
pusha
or
aad
out
mov
repz
scas
xor
loopne
cmp
xor
jmp
fs
not
sbb
jnp
cmpsl
jae
pop
add
mov
dec
hlt
mov
fsubrs
dec
mov
xchg
mov
add
es
js
int3
mov
sub
in
add
jnp
insl
data16
cld
insl
xlat
push
aas
adcb
push
add
and
addl
sub
push
idivl
cwtl
imul
mov
in
mov
or
sbb
cli
subl
xchg
xchg
jo
or
sub
fsubp
shrl
lds
sub
inc
mov
inc
divb
dec
jo
jbe
jge
push
xchg
lcall
test
and
je
in
fxch
enter
and
icebp
out
push
push
and
sub
xor
flds
push
pop
dec
cltd
loop
pop
out
or
fiaddl
clc
lcall
les
mov
iret
loopne
leave
adc
mov
inc
sub
loop
dec
pop
jnp
push
daa
add
loopne
stc
pop
jae
adc
mov
int3
mov
mov
sbb
lea
cmp
std
ret
test
lods
test
adc
push
movsl
arpl
or
xor
cltd
xor
xor
fsub
sub
pop
mov
cmc
mov
adc
jmp
cmpsl
jo
mov
cmpsb
mov
xchg
adc
mov
mov
es
leave
mov
out
mov
test
lret
lea
outsb
jae
dec
push
push
lahf
jo
jg
lret
mov
or
jp
mov
mov
mov
mov
push
mov
xchg
cmp
int
je
mov
repz
cmpsb
dec
fdiv
lea
mov
mov
push
int3
or
lds
test
cmc
test
in
cmp
dec
clc
sbb
fdivs
in
mov
mov
fisttps
dec
movsb
sbb
mov
lods
lcall
popa
xchg
hlt
add
dec
std
movsl
fdivr
xchg
jae
xchg
push
xchg
adc
xchg
dec
hlt
pop
pop
mov
pop
jp
je
sub
jecxz
sti
mov
repnz
fnstcw
popf
cli
push
in
dec
ja
sbbb
sub
pusha
loop
xchg
jnp
add
outsl
jmp
cmpsb
ljmp
stos
test
pusha
popa
inc
and
jns
int3
jle
push
movzwl
lret
mov
hlt
test
xor
xchg
dec
mov
movsb
aad
or
xchg
cwtl
andl
mov
push
pop
arpl
xlat
es
mov
cwtl
test
ja
ja
fistl
outsb
int
inc
loope
mov
in
pop
sbb
sub
adc
push
xchg
test
ret
rcll
sub
iret
mov
sbb
push
adc
or
xchg
jno
fdivs
out
mov
sub
push
pop
cwtl
sub
fdivrl
lcall
lcall
and
inc
ja
and
hlt
inc
pop
add
sbb
inc
lret
jl
int3
repnz
stos
jns
popf
sbb
xchg
loopne
addr16
add
or
into
div
mov
pop
inc
jecxz
cmc
out
clc
pushf
outsl
movsb
daa
idivl
into
or
mov
mov
int3
mov
push
std
test
loopne
cwtl
and
inc
rcll
fbld
scas
mov
xor
sub
jl
lods
pop
imul
push
stc
pop
dec
sub
mov
out
outsb
dec
xor
aam
test
dec
mov
mov
xor
popf
pop
inc
lcall
js
int3
mov
imul
mov
int3
mov
add
pushf
gs
or
call
lcall
sahf
mov
pop
jns
or
cmp
imul
add
xlat
mov
ds
ds
sti
jb
dec
mov
sbb
add
int3
lcall
in
jecxz
mov
sbb
es
sarl
rcll
dec
dec
js
xor
xchg
xchg
test
pop
out
insl
xchg
mov
jne
push
addr16
test
orb
cmpsb
imul
mov
mov
inc
or
jge
fs
cmp
push
or
sub
jnp
inc
dec
sbb
mov
scas
jg
xchg
adc
inc
or
sbb
jno
mov
mov
test
sbb
dec
or
aas
int
mov
fidivs
mov
dec
ss
popa
ss
inc
fstpl
sahf
sbb
aad
stos
stc
ja
push
es
pop
pop
cltd
jb
and
sub
dec
call
jb
adc
cmp
imul
roll
int3
aas
inc
jl
lea
adc
shrb
mov
repz
bound
mov
loop
push
dec
jg
mov
scas
decl
add
inc
ljmp
mov
adc
sub
ss
out
fs
imul
jne
test
jecxz
xchg
mov
pushf
sbb
lods
rclb
inc
pop
cli
and
add
and
or
pusha
mov
or
idivl
es
sbb
pop
jnp
loope
ret
push
ljmp
pop
pop
jne
add
sarl
in
sbb
xchg
xchg
and
jns
sbb
push
jecxz
push
pusha
push
bound
andb
jno
adc
cli
nop
daa
mov
or
jns
sarb
pop
iret
fidivs
iret
sbb
insb
cwtl
sahf
repnz
pop
pop
mov
out
jmp
mov
mov
imul
adc
jne,pn
leave
insb
lds
dec
sub
jb
jns
les
dec
xchg
rolb
add
pop
iret
subb
sub
mov
inc
pop
test
repnz
jo
jae
movsl
or
inc
mov
lock
fadd
inc
imul
in
test
les
in
sub
and
popa
sbb
jecxz
mov
pop
cmc
scas
int
xchg
inc
stc
xchg
sti
sbb
fucomp
loop
mov
scas
test
jge
pop
push
daa
cmc
cs
popa
push
pop
cmpsb
arpl
adc
pop
sbb
pop
movsb
jge
xlat
adcb
mov
mov
ret
rcr
xchg
sbb
inc
outsl
jns
imul
dec
dec
aas
add
daa
mov
ja
xor
pop
pushf
ljmp
in
out
jbe
rclb
shufps
gs
loop
adc
add
mov
outsl
jno
into
jnp
pop
mov
inc
mov
ficomps
and
and
movsl
cmc
mov
dec
xor
test
movsb
mov
fs
mov
fwait
dec
mov
aaa
adc
cmp
jb
std
mov
jecxz
insl
in
jne
add
cmpsl
pop
scas
scas
loop
mov
add
test
dec
mov
pop
xchg
jg
lock
test
aam
leave
inc
pop
mov
outsl
inc
fisttpll
pop
dec
lcall
cwtl
add
addr16
lea
in
jl
inc
cmp
out
ror
add
std
pop
das
cli
into
in
and
xor
ss
into
cld
dec
cmp
popf
int
adc
xor
sbb
repnz
mov
xchg
in
push
add
sti
push
seto
gs
cmp
notb
lods
push
mov
gs
pop
lds
pop
in
xchg
jnp
popa
push
mov
xor
daa
mov
jmp
or
int3
mov
xor
xor
dec
push
das
rcrl
push
sub
test
mov
mov
sbb
insb
ret
test
mov
fisubs
jbe
mov
cmp
cwtl
in
mov
iret
adc
fstpl
lock
insl
stos
mov
cmpsl
mov
call
pusha
fisubrs
test
hlt
arpl
add
xor
shrl
or
je
and
mov
inc
hlt
insb
add
shlb
insb
cmc
fildl
les
or
sbb
jnp
ljmp
dec
call
aad
mov
jge
xchg
pop
cmp
push
icebp
sbbl
mov
sbbb
fmull
and
daa
mov
sbb
stc
push
addl
cmpsl
in
cmp
pop
repz
in
imull
xchg
and
dec
jo
xchg
sub
or
jnp
lea
outsl
testb
jg
jb
fsts
add
sub
and
aas
daa
pop
into
jge
insb
xchg
inc
mov
outsl
mov
adc
loop
lea
repz
add
and
fadds
sub
imul
jl
out
out
aaa
popa
je
outsl
inc
pop
lea
mov
mov
mov
ds
std
out
mov
dec
pop
mov
pop
sub
insl
gs
int3
cltd
jge
stos
subb
jmp
push
outsl
pop
popa
mov
jmp
pop
jbe
mov
add
push
repnz
inc
int
cltd
pop
mov
push
push
fsubl
add
lds
mov
mov
cs
ficomps
loop
push
call
pop
push
imul
jo
xchg
dec
xchg
repz
test
inc
mov
out
pop
pop
cmpxchg
pusha
pusha
iret
jae
push
data16
sub
fcmovu
stc
loop
shl
add
das
sti
out
sahf
dec
jp
aaa
mov
and
inc
mov
mov
lds
jecxz
push
into
inc
pop
mov
arpl
pop
sbb
mov
cld
and
mov
in
xor
popl
loope
xchg
push
popa
adc
jmp
dec
inc
xchg
ret
cmp
lea
cmp
insl
and
addr16
jecxz
sbb
and
push
mov
sets
aas
mov
xchg
std
mov
adc
popw
pusha
xor
jae
and
pop
cwtl
and
inc
into
repnz
rorb
imul
add
sbb
test
adc
push
pop
sub
push
adc
and
movsb
arpl
arpl
data16
push
adc
leave
je
leave
fldl
push
mov
gs
jns
xchg
daa
mov
scas
push
loopne
pop
aam
ja
adc
or
sbb
ret
mov
pop
popf
in
jge
mov
sbb
mov
sub
xchg
aaa
call
push
sbb
ja
dec
mov
xor
cld
mov
cmp
and
dec
insb
inc
push
jge
sar
adc
fs
int3
mov
in
add
inc
shlb
out
shr
cmp
add
test
mov
fcomps
stc
sbb
fwait
iret
xchg
cmp
pop
sbb
stc
ss
incb
xor
test
fs
test
cmovnp
movb
dec
loope
nop
or
pop
icebp
xor
inc
push
testb
xchg
cltd
dec
adc
clc
dec
ret
lret
xor
gs
les
xor
cmp
out
cmpsl
jns
insb
sahf
movsl
out
cmpsb
mov
jne
dec
or
push
or
rcrl
ja
or
cli
sbb
cltd
xchg
jp
loopne
movsl
pop
pop
outsl
dec
fcomps
mov
cmp
cmp
xchg
and
mov
and
cmp
jae
into
es
stc
add
and
aaa
ds
loopne
mov
sub
arpl
aas
scas
xorb
jge
repnz
sti
imul
push
adc
jecxz
inc
push
mov
fs
out
mov
xchg
shll
mov
jp
cltd
and
ljmp
hlt
mov
aas
cmp
push
loopne
xchg
push
jbe
loop
jp
sub
arpl
rcll
pop
add
out
test
cmc
jg
or
pop
jmp
insb
xor
pop
insl
popa
jo
inc
push
jnp
divl
xor
pop
add
cmc
mov
notb
mov
jle
leave
pop
mov
shlb
push
lods
stos
pop
push
ret
mov
add
into
ret
mov
movb
pop
sub
es
out
call
and
cmpsl
test
jbe
repz
xchg
sbb
dec
dec
andl
clc
fcmovbe
js
nop
jl
xlat
cmp
scas
shlb
cmp
mulb
xor
mov
xchg
jg
repz
jnp
lock
dec
movsb
xchg
mov
sub
int
inc
std
iret
dec
add
rol
and
cmp
and
mov
cmpsl
jge
pop
mov
pop
cmp
outsb
cmc
gs
or
inc
daa
jle
arpl
jbe
orl
add
lods
dec
xchg
jmp
adc
adc
cmp
dec
out
mov
into
fcomp
dec
inc
adc
push
xchg
nopl
pand
and
sbb
push
shlb
cmpsb
bound
or
or
cmpsl
xor
add
jno
testl
mov
daa
cmpsl
xchg
es
push
mov
icebp
in
xorl
add
sub
fistpl
test
pushf
lret
gs
xor
and
aam
std
clc
dec
jecxz
in
iret
les
ljmp
mov
lods
sub
mov
loope
int
push
int3
lahf
pop
xchg
add
jg
popf
mov
mov
or
sbb
xchg
fstl
adc
into
sbb
push
add
add
and
mov
mov
loopne
cld
fcmovnb
xor
mov
push
inc
rclb
test
xor
or
es
mov
enter
mov
mov
xor
pop
mov
cwtl
pop
sahf
dec
int
cmp
mov
mull
or
adc
mov
and
mov
repz
repz
mov
outsb
ret
imul
in
pop
mov
push
ret
in
cmc
inc
scas
in
pop
xlat
cmpsb
add
push
out
push
arpl
in
outsb
dec
xchg
jo
cmp
and
dec
icebp
cmp
inc
test
inc
imul
imul
xor
sahf
lahf
inc
scas
shlb
dec
add
mov
clc
dec
clc
iret
dec
test
addl
xchg
pop
outsl
or
out
push
push
call
mov
repnz
pop
or
fsubl
cmp
lret
or
fwait
xchg
sbb
cs
inc
divb
dec
add
sub
fmul
adc
jmp
cwtl
sub
idivb
in
aam
sub
sbb
mov
iret
outsb
negb
mov
pop
mov
insl
jnp
cwtl
xchg
inc
cmpsl
popf
pushf
xchg
outsl
and
adcl
shl
or
jle
push
xor
in
movsb
test
add
in
xor
mov
push
mov
fldl
in
push
into
fmuls
lret
dec
jbe
mov
out
gs
cltd
lods
sarl
dec
sahf
xor
std
vrsqrtps
gs
das
jecxz
shlb
adc
ret
roll
mov
cld
lcall
into
sub
fimuls
mov
cwtl
test
test
leave
test
icebp
mov
ss
in
xor
sbb
out
adc
sbb
sarl
movsb
adc
lds
lea
pop
push
test
in
addr16
addr16
xchg
iret
ljmp
fwait
mov
xchg
imul
repz
and
movsl
imul
into
pop
pushf
and
idivb
push
clc
sbb
push
cld
inc
ss
hlt
int
sbb
test
adc
cmp
lods
insl
mov
jo
push
xor
mov
cltd
cmp
lods
push
cmp
loop
aas
jle
outsl
jl
pop
iret
in
testb
rcrl
faddl
xchg
cmp
inc
mov
mov
mov
mov
sbb
shrl
outsl
or
stos
inc
xor
fisttpl
push
stc
insb
popa
push
js
add
sti
lret
sbb
jns
cmp
inc
sti
mov
mov
dec
xchg
and
pop
pusha
jmp
sbb
rep
jae
addr16
jns
out
int3
out
je
pop
xor
lahf
aaa
jl
pop
inc
pusha
in
jno
out
flds
dec
js
pop
push
or
mov
test
gs
ds
lods
lret
cltd
popl
or
ja
xchg
jle
xor
inc
fisttpll
pushf
fwait
ss
outsl
pop
mov
bound
test
mov
ja
cmpsb
sbb
iret
jnp
push
stos
push
sub
add
pop
fwait
and
lds
jnp
rorl
xchg
mov
inc
ret
jno
mov
dec
xchg
push
shll
rolb
aas
imul
ss
pusha
adc
popf
cltd
cs
pusha
mov
lret
jnp
stos
repnz
mov
outsb
sbb
mov
mov
test
test
cmpsl
mov
pop
mov
mov
ljmp
pop
push
jae
sub
in
shll
aad
int
jmp
xchg
adc
fstpl
pop
repnz
push
xor
cmpsl
add
mov
or
jb
test
mov
lret
shr
mov
sub
jbe
loopne
not
inc
aad
pop
adc
inc
xchg
push
mov
add
xor
addr16
xchg
inc
xor
out
pop
jae
add
add
xchg
mov
lcall
loop
jecxz
in
test
dec
hlt
mov
xchg
jmp
mov
xchg
leave
arpl
lahf
mov
or
cs
xor
adc
xor
and
js
and
mov
fistps
mov
idivl
test
cs
andb
mov
pop
in
aad
xor
es
sub
jg
mov
mov
cmp
jnp
adc
mov
mov
or
adc
pushf
xchg
popa
mov
sub
xchg
xor
insb
mov
pop
jbe
pop
lods
jb
insl
dec
aaa
clc
mov
das
push
dec
mov
dec
push
cltd
pop
inc
cmp
dec
imul
and
push
cmc
sbb
gs
es
pusha
jecxz
dec
mov
aas
clc
in
stc
out
mov
int
push
sarb
nop
fcoms
lods
shrb
push
ret
push
lds
push
add
mov
and
mov
cwtl
aas
dec
jb
mov
data16
sub
mov
push
aam
mov
enter
add
xchg
in
sub
sbb
fildll
es
inc
dec
andb
pop
xor
pop
jecxz
sbb
mov
aad
sbb
sahf
sahf
inc
add
mov
imul
jo
mov
das
dec
and
orl
push
cmp
mov
pushl
idivb
pop
popf
inc
jecxz
inc
xor
movsb
inc
sbb
push
lahf
bound
inc
and
into
icebp
dec
ret
mov
fidivs
outsb
push
dec
sub
xorb
cmpsl
iret
out
lea
inc
jl
jge
push
std
sbb
nop
dec
test
fs
stos
pop
cmp
movsb
movsl
cs
push
stos
xchg
pop
test
cltd
aas
hlt
sbb
lock
psraw
mull
and
sub
jl
cwtl
repnz
pop
adc
lcall
bound
fdivs
sub
or
popa
inc
adc
mov
dec
aaa
mov
pop
push
fisttpl
rorl
into
aad
das
mov
mov
pop
cmp
dec
mov
sarb
movb
pop
cmp
push
mov
jmp
inc
push
xor
aad
add
cld
and
rorl
lret
fadds
sahf
loop
push
cmp
pop
lds
adc
mov
xor
xchg
pusha
xor
mov
inc
mov
negb
pop
mov
fdiv
das
pop
mov
mov
sub
enter
cmp
xchg
add
sahf
loop
fidivs
jl
cmp
dec
test
push
jne
mov
insb
mov
decb
sbb
add
add
mov
and
icebp
inc
ljmp
js
pop
mov
aas
adc
mov
out
dec
rcll
push
fwait
adcl
mov
cmpsb
adc
push
lock
mov
xor
mov
jle
mov
inc
jne
xchg
dec
and
xchg
popf
sarl
scas
pop
shr
sbb
jb
inc
xchg
push
xchg
rorb
jb
js
cmpsb
cmp
xchg
add
xchg
mov
lret
les
addr16
shl
mov
aaa
aaa
jle
lahf
into
dec
clc
and
xchg
repnz
aaa
in
daa
adc
inc
sbb
fs
nop
lods
dec
pusha
leave
xchg
or
movsb
cltd
lds
fisubrs
xorb
jp
sbb
push
cmc
sahf
in
out
fstpt
hlt
mov
int3
push
int
pop
aaa
enter
mov
xchg
outsb
ss
jbe
lods
sbb
push
and
pop
lea
mov
lds
insb
adc
xchg
out
jle
ja
mov
mov
xor
std
mov
add
andl
xlat
and
daa
pusha
cmpsl
sub
push
and
mov
inc
sti
call
mov
sbb
xchg
jp
stos
fldenv
jno
jno
test
lret
dec
cltd
and
sub
and
aam
test
fdivrs
and
cmp
cmp
mov
addr16
into
jl
mov
imul
inc
out
inc
push
sbb
inc
mov
pop
fsubs
fucom
add
cs
outsb
imul
les
rcrl
sbb
mov
pop
lea
mov
jae
test
xchg
jge
dec
fwait
aad
and
xchg
mov
mov
push
dec
fidivrl
mov
test
rclb
push
and
aam
or
pop
scas
and
popa
outsb
insl
pusha
cmp
sub
fdivs
xorb
fs
mov
xchg
test
xchg
rcrl
jp
lret
mov
mov
fcmovne
push
in
movsb
xor
adc
cmp
movsl
mov
mov
push
add
mov
jp
adc
repz
int3
aad
inc
xor
sub
lea
xor
inc
sub
inc
pop
xor
cmp
adc
add
outsb
push
scas
lret
cmpsl
inc
pop
jbe
xchg
insb
insb
dec
sarw
xchg
outsl
dec
std
icebp
pop
subb
sub
shrb
mov
mov
cmc
nop
out
imul
xor
imulb
repz
mov
push
lahf
nop
repnz
mov
sbb
push
push
inc
or
push
cmp
lret
stos
sub
in
sbb
movsl
xchg
fs
pop
ja
flds
mov
in
pusha
mov
jecxz
xor
and
icebp
mov
cmp
add
stc
popa
push
lahf
xchg
push
jae
test
xchg
dec
sbb
addl
in
int3
outsb
out
or
cmpsl
mov
incb
and
push
movsl
xlat
mov
loop
ja
push
stos
dec
pusha
loope
pop
aam
mov
add
es
jge
mov
stc
xchg
push
test
add
add
or
mov
mov
mov
xor
add
mov
fwait
inc
jb
sbbl
lea
pop
mov
pushf
adc
std
lock
and
cmp
or
dec
sahf
xor
and
das
mov
ss
mov
movsl
les
fwait
push
lea
inc
push
jge
adc
or
rclb
mov
out
mov
mov
pop
fsubs
dec
pop
pop
and
inc
mov
mov
cmp
test
lds
test
cmpsb
mov
xchg
push
jnp
mov
stc
das
mov
add
test
xlat
movzwl
adc
xchg
addr16
jno
pusha
mov
cmp
out
dec
test
jne
stc
jp
push
ret
repz
and
mov
jle
mov
ljmp
lcall
fwait
or
movsl
push
jbe
sub
mov
fwait
pusha
int3
xor
add
movb
mov
sbb
icebp
popa
sbb
pop
mov
adc
rcll
mov
outsb
stos
fidivl
fildl
mov
or
pop
sbb
fstpt
pop
out
add
vmread
loop
repz
lods
scas
mov
xchg
add
jle
cmp
lods
cltd
push
pusha
ficomps
imul
shl
pop
jb
mov
lret
shlb
mov
sub
and
shlb
test
dec
out
mov
xchg
inc
sbb
fistpl
stos
push
and
clc
mov
sti
mov
add
lods
jle
xor
mov
cld
cld
cltd
mov
lock
pop
fstpl
xor
push
aas
insb
pop
jge
hlt
mov
adc
jo
sbbb
adc
fcompl
std
cmp
inc
dec
scas
lods
lahf
or
cli
or
pop
rolb
push
or
mov
dec
jg
enter
mov
dec
das
jmp
idivb
inc
xchg
and
dec
jge
ret
push
jns
push
ror
out
xchg
mov
pop
cmp
hlt
xchg
push
insl
testb
retw
dec
loope
lods
pop
fs
loopne
inc
cmp
dec
in
cltd
push
repz
lods
insb
dec
lods
addb
mov
fs
xchg
jbe
sub
shlb
sbb
mov
xor
outsb
sub
pop
repz
and
mov
arpl
je
add
pop
cmpsb
imul
shl
push
es
cmp
test
rcll
push
movsb
xchg
add
jl
or
in
sbb
xor
xor
out
clc
jecxz
add
sti
scas
and
mov
scas
xchg
cmp
pavgb
push
and
test
loope
mov
loope
sbb
test
cltd
mov
push
lds
cli
es
pusha
cmp
xchg
xchg
xchg
mov
add
arpl
mov
in
dec
or
inc
incb
dec
or
out
add
enter
xchg
push
xchg
aas
xor
dec
add
stos
out
adc
les
cmpsl
and
mov
push
inc
pop
xchg
push
lock
pop
into
inc
pop
pop
adc
inc
jns
jbe
jg
jae
sub
xor
lret
jg
imul
jae
mov
xchg
rorb
lds
icebp
jb
inc
mov
bound
mov
out
dec
mov
fwait
xchg
mov
in
add
shlb
cwtl
popa
shlb
scas
movsb
scas
adc
sub
pop
pop
xor
ficompl
das
testl
js
and
push
cmp
rcll
or
jge
out
add
sub
pushf
fsubs
call
jnp
loop
addr16
jg
mov
insb
push
xor
push
mov
clc
jmp
pusha
fwait
jle
inc
aas
dec
cltd
cmp
cltd
xchg
sbb
mov
mov
ret
mov
xorb
inc
jg
fisttpl
loope
pop
cmc
cmpsb
push
push
pop
mov
out
mov
cmpsl
js
sbb
pop
lods
add
cmp
sub
sub
shrb
inc
addr16
mov
adc
cmpsb
cmp
fsub
mov
xchg
xor
mov
enter
inc
cmp
lret
cmp
jbe
cmp
fwait
imulb
clc
pushl
xchg
lods
sub
iret
addb
and
es
mov
mov
dec
scas
cmp
cwtl
cmpsb
adc
sub
rcl
fisubl
pop
mov
ja
sbb
push
mov
mov
mov
adc
arpl
pop
pop
mov
daa
mov
inc
imul
pop
adc
iret
jnp
pushf
iret
aas
fiadds
test
je
enter
push
les
pop
xchg
shlb
fistpll
icebp
cld
je
mov
fs
push
outsl
add
cmc
or
jbe
loopne
popf
cmpb
push
sbb
add
das
push
xor
adc
lods
xor
add
lea
cmp
jle
xchg
push
fmulp
lret
in
jg
movsl
lock
fisubrs
xor
insb
sbb
cli
clc
adc
shl
adc
mov
sub
jg
ss
mov
test
mov
insb
or
shl
inc
imulb
into
int
sub
stos
sub
push
push
or
sub
inc
xchg
scas
bound
or
les
scas
jb
fildl
xor
pop
js
cmp
xor
dec
pop
sub
inc
and
mov
nop
dec
out
jp
jne
sahf
aas
jae
lret
fwait
sbb
mov
jae
lret
cmpsb
adc
jno
negb
xchg
sub
lods
repz
jmp
aam
mov
fwait
lods
test
xchg
xchg
lea
inc
ffree
mov
sub
xchg
cmp
mov
adc
mul
inc
loop
cmp
pop
mov
lahf
nop
dec
jno
mov
loop
loopne
mov
out
out
cmp
xchg
stc
jnp
push
ret
mov
repz
stc
cmpb
leave
imul
sahf
push
cmp
mov
ja
mov
lock
test
mov
or
xchg
sbb
sub
fisubrs
vmread
adc
mov
adc
addr16
les
mov
add
xchg
push
testl
flds
sub
inc
add
or
add
jne
cmp
in
sub
cmc
or
fcoms
inc
insl
ret
pop
adc
sbb
push
mov
fucomp
cmp
sbb
cmpsl
pop
int
dec
sbb
pop
bound
xchg
fsubs
sahf
ljmp
jmp
sbb
imul
cmp
loopne
inc
xchg
out
jno
jecxz
inc
push
loopne
xor
aam
xor
testl
sbb
out
mov
xchg
cmp
or
jp
stos
pop
and
pop
fs
fdivl
fs
xchg
cmpsb
push
lret
push
jmp
xorb
insb
cmpsb
add
adc
and
cwtl
insb
dec
mov
idivb
clc
test
sub
dec
into
call
xchg
lods
mov
fmul
popf
push
imul
xchg
pop
cli
lret
or
mov
movsl
lock
rol
dec
pop
loope
js
hlt
clc
xchg
xchg
adc
mov
mov
and
popa
fldcw
sarb
add
js
fld
addr16
pop
mov
mov
cmp
ret
addr16
xchg
cmp
mov
popa
mov
lds
adc
out
pop
adc
sbb
mov
sbb
cmpsl
neg
and
jns
pop
sbb
fisubrl
inc
xor
iret
aas
xchg
pop
out
subb
cmp
mov
cli
adc
push
mov
test
cld
cltd
aas
outsl
in
repnz
clc
mov
or
out
rcl
push
mov
jns
aas
pop
push
jle
mov
pop
pop
test
outsb
lea
and
sti
sbb
mov
xlat
stos
mov
pop
imul
and
lret
sbb
test
jns
inc
xor
push
cmp
dec
xor
xchg
stos
rcrl
mov
sbb
fidivl
dec
jmp
pushf
clc
popa
mov
cmc
pop
mov
fists
std
outsl
pop
cmpsl
pop
adc
sub
pop
out
xchg
stos
sbb
mov
jne
dec
inc
xor
jo
dec
push
fidivs
addr16
add
xchg
and
xor
addb
adc
sub
inc
inc
fisubrs
fs
incb
sti
and
or
cmp
add
loop
xor
imul
aam
jmp
or
xor
mov
or
jmp
fdivrs
lcall
mov
mov
or
insb
jbe
push
cmp
mov
inc
std
dec
xor
test
adc
enter
cltd
mov
movsl
push
mov
cmp
push
xchg
mov
push
sub
mov
mov
nop
cmp
sub
imul
xchg
stc
xor
xchg
xchg
add
test
jne
lcall
shlb
and
inc
frstor
sbb
aam
sub
in
sarl
mov
sub
or
scas
adc
daa
cld
lret
mov
push
xor
test
push
or
dec
aas
fnstenv
cltd
mov
xor
cwtl
mov
pusha
enter
inc
pushf
rolb
inc
das
shlw
shll
dec
pop
sbbb
or
mov
mov
outsb
aam
xchg
cmp
fiaddl
mov
rorb
cmpsb
jmp
ja
rcl
adc
sub
mov
es
repz
mov
xchg
sub
mov
mov
in
icebp
push
pop
es
test
push
testb
push
popa
sbb
enter
push
push
pop
scas
xor
aaa
adc
adc
into
cltd
pop
pop
jns
pop
notb
sbb
sub
sbb
xchg
shl
adc
pushf
dec
jge
fdivs
popa
gs
push
mov
insb
push
aas
sub
stos
ljmp
pop
push
push
dec
or
mov
push
test
adc
mov
or
popa
push
xor
inc
fs
or
insb
stos
jg
sub
push
cmpsb
sub
cmc
test
mov
in
popaw
pop
xor
lock
pop
cmc
cmpl
inc
aas
cli
imull
sti
out
mov
sub
sub
fwait
dec
in
mov
jmp
mov
in
repnz
cmp
push
dec
xor
push
add
cmpsb
jns
inc
xchg
cltd
test
jno
jns
fstpt
cld
mov
mov
push
and
mov
or
scas
movsb
sbb
sub
add
dec
popa
add
mov
in
out
fldcw
mov
cld
in
bound
popf
rcrl
bound
fcmovnu
stos
iret
movsl
jne
and
loope
rorl
jns
ljmp
aas
test
cli
stos
push
imul
roll
xchg
jp
icebp
jle
ljmp
bound
sbb
push
out
sub
mov
fdivrs
mov
add
mov
xchg
cmp
inc
lcall
sarl
cli
lock
in
push
xchg
stos
lock
mov
mov
daa
mov
mov
testl
adcl
sarb
mov
jmp
lock
xchg
adc
pop
call
push
sbb
and
xchg
int
xor
lds
in
adc
dec
ret
outsb
setb
sub
out
xchg
sub
jecxz
xchg
jle
enter
and
mov
cmpsl
insl
addr16
pusha
lds
jp
ret
jmp
insl
into
popf
pop
lea
aaa
pushf
jmp
cmp
das
imul
pop
pop
push
cli
mov
arpl
pop
lods
xor
push
loope
mov
cmp
aad
mov
call
scas
mov
stc
or
imul
or
cmp
pop
inc
popf
pop
mov
in
testl
insb
mov
popf
cmovbe
push
pop
fbstp
or
push
roll
jns
inc
sbb
into
lock
cwtl
jo
lods
lret
sub
inc
jge
enter
test
pop
sub
testb
pop
clc
inc
pop
scas
aas
cmpsl
mov
sbb
sbb
adc
enter
pop
popa
rcl
out
in
sub
push
or
repz
cmp
mov
cld
cmpsb
clc
sahf
js
in
push
adcl
nop
add
inc
or
imul
lcall
fistps
mov
sub
out
adc
pop
ds
out
dec
or
cmp
dec
cmp
lods
je
fistpl
sti
aad
arpl
pop
and
rcr
jae
jae
mov
jge
and
out
cmpsb
call
insl
repnz
inc
push
cmc
and
outsb
ljmp
dec
shll
inc
scas
cmpsb
dec
stos
sti
mov
mov
push
and
add
lahf
push
add
aas
cmpsb
jp
popa
repz
mov
lea
cmp
cmc
sub
in
xchg
aad
lahf
repnz
pop
mov
push
testb
pop
mov
hlt
xor
jnp
mov
seto
cmc
jno
mov
and
mov
in
or
nop
or
jns
adc
cmp
mov
fmul
movsb
mov
mov
fisttps
push
loope
xor
insl
imul
xchg
mov
xor
xchg
mov
pushf
subb
aaa
out
cmp
mov
inc
test
out
mov
jmp
xor
repz
inc
add
jo
cltd
inc
test
or
insl
std
inc
mov
movsl
mov
inc
mov
fildl
push
ja
push
xchg
sbb
enter
mov
adc
jne
dec
loop
inc
je
dec
imul
jns
mov
cmp
sbb
ss
cld
dec
movsl
insl
adc
ljmp
sbb
cwtl
mov
mov
mov
ret
sbb
sbb
jnp
mov
pop
jmp
sbb
lret
mov
mov
aam
pop
nop
pop
or
sbb
dec
shl
rcll
fildll
enter
repz
test
push
adc
add
inc
sub
jecxz
pop
daa
or
fidivs
rol
iret
push
mov
dec
std
push
dec
subb
push
mov
fisttpll
mov
push
mov
adc
inc
and
aas
sti
cwtl
call
dec
jp
in
sub
fs
jbe
sbb
imul
dec
pop
mov
push
adc
inc
sarl
or
push
pop
adc
das
pushf
std
leave
gs
sub
mov
pushf
inc
or
std
inc
inc
out
fcmove
mov
je
cmp
icebp
push
and
ljmp
pop
lods
mulb
push
dec
call
adc
enter
clc
pop
xchg
jmp
cmp
add
mov
fcomi
xchg
xchg
mov
mov
aam
push
adc
and
clc
cld
daa
test
repnz
lock
sbb
sub
xor
outsl
fisttpl
mov
and
mov
shr
mov
lret
pop
cmp
mov
fstl
test
and
ja
inc
inc
xor
imul
xlat
cmp
je
jo
std
and
enter
cs
mov
lcall
mov
jg
mov
jmp
into
jg
push
fisttpll
movsl
xchg
mov
inc
std
mov
mov
nop
xor
fisubl
inc
ret
test
sbb
leave
mov
push
pop
sarb
xchg
sbb
or
pop
icebp
jge
loop
adc
mov
pop
xor
adc
inc
sub
jmp
xchg
push
out
xchg
faddp
push
mov
mov
lods
xchg
inc
repnz
out
sbb
shlb
es
scas
mov
cltd
mov
mov
pop
dec
add
ds
inc
and
jns
mov
rcrb
insb
lock
cld
push
pushf
or
fwait
cmp
mov
mov
mov
inc
jge
inc
loop
mov
fidivrs
xor
jmp
mov
inc
sbb
xchg
lcall
sti
mov
sub
xchg
les
dec
xchg
and
nop
sbb
out
push
adc
xor
mov
inc
sub
sti
push
adc
dec
pusha
xchg
pop
push
lds
rorl
sbb
ja
fstl
or
ljmp
std
rcr
fxch
gs
fisubrl
add
int3
xchg
int
cwtl
btr
xor
xchg
dec
insb
xchg
inc
mov
lock
insl
xor
nop
fsubr
jle
test
daa
cld
mov
imul
ret
or
push
push
push
je
or
jg
popf
sbb
into
insl
sub
push
xchg
cmpsl
loope
stos
addr16
in
dec
mov
inc
pop
sub
xorl
mov
daa
or
subl
sub
pop
stc
sub
movb
imul
icebp
insb
jecxz
jmp
cmc
fisubrl
xchg
mov
jns
rep
inc
adc
stos
cmp
mov
test
xchg
push
add
jnp
mov
jae
mov
scas
push
cmc
arpl
mov
cmp
ret
pushf
cmpb
or
adc
idivl
loope
dec
stos
lock
add
lock
mov
push
mov
inc
movsl
frndint
add
inc
inc
out
cs
cmpsl
sar
jno
pop
icebp
mov
xchg
dec
and
fsubrl
loope
rclb
dec
daa
sbb
rcrb
pop
repnz
stc
mov
popa
push
inc
clc
sahf
notl
inc
cwtl
into
mov
xor
push
inc
aam
fldcw
inc
sahf
mov
je
insb
dec
pop
std
lret
fcmovnb
mov
push
ret
inc
stc
aas
pop
dec
out
aam
xchg
push
jecxz
test
cli
pop
ljmpw
lds
xor
int3
mov
cmp
orb
inc
ret
shll
mov
push
not
xchg
jecxz
sbb
mov
and
fwait
sub
in
or
mov
cmp
xchg
add
inc
push
out
aas
xorl
scas
ss
test
cmp
gs
sar
inc
inc
out
push
mov
scas
push
xchg
or
adc
sub
fisubs
jg
jae
xor
sarl
mov
shlb
test
cmp
cmp
push
or
ss
inc
sbb
jmp
cs
push
sbb
outsl
xchg
adc
sub
mov
pop
mov
into
cmp
mov
cmp
shll
add
pusha
dec
dec
add
dec
jg
jp
out
dec
mov
cwtl
fsubrs
dec
adc
push
mov
xchg
inc
iret
sbbl
pop
pushf
ljmp
clc
ja
xorb
or
add
inc
ja
mov
pop
jle
scas
or
xchg
test
cmp
push
or
mov
loope
xor
imul
push
push
cltd
jb
mov
lea
test
adc
es
jo
scas
add
decb
sbb
dec
in
add
mov
cmp
adc
shll
rcr
lret
test
mov
into
cltd
inc
xor
pop
cmp
push
xchg
and
push
or
leave
scas
sbb
add
lock
cmp
cmp
cld
leave
pusha
cmp
xchg
xor
or
mov
mov
pop
inc
pop
hlt
pop
jg
dec
dec
add
mov
cmp
or
loopne
fstl
xchg
dec
pop
test
mov
dec
dec
outsl
inc
inc
cmp
les
bound
lahf
mov
and
add
outsl
dec
jle
in
adc
jg
lcall
inc
or
dec
les
rcll
mov
sub
cmp
and
call
sbb
pushf
ljmp
push
dec
pusha
lea
cmp
data16
pushf
cmpsl
sub
inc
sub
outsb
lods
jge
mov
pop
lret
loope
xchg
jae
jb
cmp
mov
lods
imul
nop
pop
dec
movsl
call
push
jno
fisubs
adc
adc
out
fwait
dec
clc
es
push
push
mov
cld
jno
iret
cmovle
mov
sbb
mov
call
xor
push
jmp
rcrl
iret
call
addr16
aam
ja
fcoml
add
outsb
js
std
inc
movsb
inc
les
mov
in
in
aaa
jbe
jp
cmc
mov
sbb
aad
cmp
aad
stos
xchg
es
sbb
xor
sub
push
rorb
sub
ret
lods
push
push
and
mov
lods
inc
push
or
cltd
xchg
sbb
sbb
icebp
mov
loope
testb
js
sub
mov
iret
mov
ret
roll
insl
mov
xchg
push
push
insb
das
cmp
mov
daa
outsb
loope
sarl
ja
dec
xchg
test
fcoms
cmp
push
xchg
xor
outsb
mov
fs
jl
int
or
pop
in
cmp
loopne
cmc
pop
nop
sbb
ss
cli
mov
das
jbe
pop
fldl
nop
sbb
jg
notl
out
sti
sub
push
orb
into
bswap
push
mov
mov
mov
stos
stos
pop
add
lret
cmp
push
cltd
dec
xor
xchg
pop
dec
push
imul
decl
adc
sar
jmp
stc
dec
arpl
sahf
in
push
inc
xor
or
push
adc
jbe
mov
push
js
fistl
sarl
inc
aas
test
jmp
cs
sbb
stos
sbb
ficomps
push
fidivl
mov
ss
aad
pop
enter
dec
dec
nopl
mov
fmuls
xchg
cmc
sub
xor
inc
repz
xchg
stos
push
daa
test
sbb
sub
pop
scas
out
jmp
xchg
mov
mov
dec
test
pop
pop
cmp
ljmp
test
sti
ret
inc
out
mov
loopne
call
jne
jecxz
mov
pop
loope
rolb
jae
in
xor
sub
outsb
pop
push
enter
fsubrl
xchg
inc
pop
cmp
test
outsb
xor
out
iret
mov
jnp
fnstcw
test
push
and
cmc
bound
cmp
pop
scas
int3
add
mov
jnp
hlt
outsl
mov
sar
sbb
pop
imul
lret
dec
nop
jge
sbb
iret
fidivs
es
pusha
add
xor
and
mov
mov
xor
pop
sbb
mov
shrl
mov
sahf
adc
inc
clc
fisttpl
add
scas
clc
popf
adc
xchg
cmpsb
arpl
pop
mov
mov
pop
xor
xchg
adc
insb
addr16
inc
aas
fxch
cmpsb
popf
add
stos
mov
loope
xorl
jmp
sbb
or
dec
aam
imul
inc
out
cs
xlat
fstpl
popf
push
sub
inc
and
mov
mov
testl
xor
mov
push
sbb
aam
fidivs
adc
insb
test
cld
ja
andl
inc
pushl
sbb
inc
cld
mov
dec
movsb
pop
inc
lret
inc
ror
push
push
jnp
in
push
imul
mov
adc
not
push
sub
repnz
clc
test
dec
cmp
add
pop
lret
dec
fbstp
fisubs
or
daa
out
cmp
pop
notb
test
ja
push
pop
movl
fbstp
rcrl
aam
mov
test
lds
sbb
cmpsb
pop
sbb
lcall
std
push
mov
xchg
xor
bound
inc
mov
inc
mov
mov
push
test
mov
js
lock
repz
inc
pop
repnz
adc
mov
fwait
jne
jbe
dec
lret
cmpsl
shlb
push
addr16
sbb
or
jp
es
and
lods
xchg
or
cmp
mov
and
add
es
sub
int3
aas
daa
jne
imul
ficompl
enter
or
jle
sbb
mov
stos
add
addr16
dec
mov
xor
shl
push
dec
mov
popa
nop
inc
scas
xor
pusha
xchg
outsb
cmpsb
cmpsl
fstpt
les
fldt
int
stc
insb
sbb
jne
gs
std
in
scas
add
scas
popa
inc
xchg
adc
fiadds
aad
outsb
adc
dec
scas
ja
test
mov
mov
inc
data16
orb
and
incb
orb
cltd
test
cmp
shll
rcl
jl
cmp
push
cmp
or
repz
clc
fs
cld
outsb
and
popf
mov
xchg
ds
fsubs
out
mov
mov
lahf
jmp
inc
push
pop
sub
stc
push
push
sarb
pop
jno
icebp
test
xlat
pop
xchg
fdivl
daa
mov
adc
pusha
movsl
sbb
pcmpeqd
xchg
test
mov
xlat
stos
loop
dec
push
iret
mov
in
data16
shlb
and
mov
in
ret
divl
cmpsl
stos
and
scas
pop
xor
xor
movsl
stos
inc
push
and
pushf
sbbl
lods
stos
dec
lahf
aas
daa
fsts
mov
incb
pop
xor
mov
mov
and
push
sbb
cli
sub
int3
xchg
lcall
jns
jno
dec
in
sbb
mov
jle
inc
out
or
out
std
shl
xor
popl
mov
stos
push
jno
loope
mov
pusha
adc
pop
pushf
movsb
mov
xor
int
or
jo
push
ret
pushf
sub
pop
xchg
stc
dec
sbb
jnp
sub
add
sub
cmp
xor
lods
jo
sbb
push
dec
adc
popf
cmpsl
and
push
imul
js
jg
xchg
jno
clc
fcmove
cmp
stos
add
mov
dec
or
cmpsb
mov
sbb
sub
lcall
pop
mov
adc
movsl
dec
inc
and
add
and
mov
dec
ds
cmpl
adc
lret
mov
mov
pop
xchg
inc
scas
std
jecxz
sahf
aam
adc
jmp
xlat
push
sbb
cmc
push
fwait
pop
fisubs
jbe
out
cmc
sahf
jno
fcmovb
stos
mov
add
mov
ljmp
sti
shrb
rcll
push
or
inc
and
adc
ret
cli
push
or
xchg
loope
ds
int
sbb
jecxz
push
sbb
pop
sti
ds
pop
imull
hlt
push
mov
mov
jns
stos
pop
mov
popl
push
out
fucom
push
cmp
popf
jle
out
sub
xchg
adc
mov
pop
xchg
in
mov
and
pusha
stc
inc
cltd
mov
or
out
pop
inc
movsl
imul
jno
xchg
pop
xor
and
add
outsl
in
mov
int
mov
repnz
mov
jae
aam
jns
loopne
nop
dec
imul
sbb
push
jno
add
add
mov
gs
cmp
and
aas
and
std
mov
jmp
mov
insb
push
pop
mov
and
add
dec
cmp
jns
inc
adc
cmpsb
in
jns
inc
lcall
outsb
test
cld
outsl
adc
sti
lcall
xchg
shlb
ljmp
in
dec
mov
adc
ss
cld
and
cmpsb
adc
inc
dec
mov
or
addr16
dec
es
lret
cmpsl
mov
fwait
popf
aam
xchg
in
ret
push
inc
or
cmp
arpl
lret
dec
cmp
aam
cmp
fsubl
pop
sbb
adc
pop
stos
ret
or
in
adc
push
in
ret
mov
mov
frstor
mov
mov
pop
mov
mov
add
dec
fsub
ss
mov
ficoms
stc
rclb
ficomps
sub
and
or
jbe
ret
shrl
mov
xchg
xchg
out
and
ret
and
test
std
out
jne
or
jb
in
jns
lret
mov
out
ror
idivb
stc
test
mov
push
hlt
pop
and
inc
xchg
inc
lcall
pushf
sarl
ss
pop
mov
mov
mov
mov
test
repnz
mov
or
xor
ss
jnp
in
jmp
data16
leave
roll
and
dec
ja
pop
leave
sub
aaa
inc
in
mov
leave
cmpb
aam
cmpsl
mov
in
or
aam
sub
clc
pop
mov
repz
stos
cmp
dec
and
sub
push
cmpsb
fdivrl
xor
hlt
pop
data16
or
jecxz
dec
loop
xchg
jle
movsl
pop
xlat
ficoml
js
lods
jle
mov
dec
mov
es
or
cld
loopne
sbb
aam
add
mov
mov
xchg
out
jle
sbb
test
cmpsb
out
icebp
lock
xlat
and
movsl
fnstenv
rolb
stos
pop
mov
xchg
mov
fnstsw
fidivrs
rclb
xchg
dec
push
clc
mov
pop
inc
stos
add
xor
jae
push
adc
push
mov
fbstp
scas
lods
lret
dec
or
dec
xchg
push
mov
sbb
cwtl
adc
lcall
fwait
jo
orb
sahf
add
jp
adc
fidivrl
cmp
shl
outsl
and
and
arpl
or
sbb
push
mov
clc
lea
fcoms
or
sub
mov
push
cmpb
xchg
and
lret
rorl
sbb
dec
mov
out
cmp
adcl
clc
pop
lods
sbb
mov
xchg
pusha
mov
lret
push
jge
xor
cmp
out
mov
stc
movsl
mov
repnz
es
lock
stos
inc
inc
push
stc
dec
cmp
adc
xor
adc
adc
mov
add
test
imulb
mov
out
sbb
aad
mov
mov
out
xor
fidivrl
repz
xchg
mov
cmpb
es
cmc
xchg
push
cmp
adc
xor
and
mov
push
xorl
sti
pop
test
xlat
push
sbb
imul
push
mov
push
sub
js
scas
xchg
scas
gs
aam
das
adc
dec
mov
lods
xchg
mov
addr16
jmp
repnz
jle
cmp
stos
mov
cmpl
xor
cmp
loop
xor
sbb
cmp
inc
in
stc
es
cltd
out
or
cmpsl
insb
lock
lods
shll
mov
movb
adc
add
push
inc
cmp
in
adcb
jne
stos
push
pop
arpl
test
mov
int
xor
or
imul
out
jo
repnz
cmp
inc
mov
mov
jge
call
mov
or
adc
or
in
jmp
dec
inc
aad
test
rorb
addr16
lret
dec
test
in
push
push
in
aaa
sub
icebp
jl
xbegin
mov
loope
test
fstpt
lds
arpl
ret
pop
cmp
in
mov
mov
xchg
push
fistpll
stos
inc
shrl
push
stos
push
cld
sub
nop
je
sbb
imulb
cmp
mov
pop
xor
jne
add
dec
jge
mov
cwtl
push
fidivl
jp
mov
leave
fwait
add
gs
fcoml
cmp
fwait
and
mov
adc
adc
dec
dec
ret
es
dec
mov
fnstsw
pop
dec
test
out
aaa
or
testb
xchg
mov
movsl
add
inc
test
nopl
fildll
xchg
dec
jmp
sub
aas
les
js
in
lods
int
push
push
je
mov
sbb
cmpl
inc
or
dec
jl
icebp
xchg
insl
jnp
jp
insb
das
push
adc
ja
les
inc
stos
jne
lret
sarl
insl
push
daa
push
xchg
cmpsl
sub
push
xchg
hlt
addr16
pop
push
xchg
cmp
mov
xchg
dec
or
test
dec
pusha
divw
pushl
arpl
push
bound
addr16
sub
packssdw
mov
mov
xchg
stc
int
cmc
xor
fcmovb
adc
loopne
out
vmovsldup
mov
dec
dec
jmp
pop
test
leave
xchg
add
cmp
or
mov
pop
jl
loop
inc
lock
lcall
mov
xor
ret
sbb
call
in
inc
dec
out
aam
push
mov
arpl
je
dec
daa
add
sbb
aaa
stc
in
sahf
push
cmpsl
pop
add
pop
mov
mov
pop
addl
sub
leave
jg
sbb
mov
push
lahf
sarl
sub
push
xchg
call
repz
mov
jecxz
mov
insb
pushf
jg
in
pusha
dec
add
cmovae
out
pop
stos
scas
loope
test
push
or
insl
jmp
sahf
xor
mov
jns
cmp
dec
sbb
adcb
arpl
pop
lock
sub
jmp
addr16
pop
mov
and
push
jbe
sub
xor
mov
add
inc
out
mov
xchg
pop
dec
push
jno
inc
mov
rclb
scas
cmp
push
and
insl
add
mov
or
je
push
call
mov
enter
pavgw
bound
adc
hlt
cmp
add
cli
bound
bound
int
inc
cmp
decl
inc
jge
insl
or
cmc
xor
dec
inc
add
cmp
pop
xor
mov
sub
push
xor
bound
jbe
ss
daa
xor
sbbb
out
inc
mov
mov
movsb
jge
out
and
jl
and
ret
mov
out
mov
sti
les
cmc
into
push
leave
popf
ss
add
xchg
pop
sub
pop
aad
cld
repnz
icebp
sahf
jb
mov
push
movsb
and
clc
or
cli
ficomps
pushl
ret
add
mov
push
clc
inc
mov
mov
cmc
shl
adc
pop
stos
push
dec
arpl
cs
enter
les
movsb
test
dec
addr16
mov
sbb
out
das
fnsave
sub
outsl
inc
mov
outsb
jp
push
mov
repz
faddl
or
add
and
adc
and
lock
add
lahf
leave
int
adc
inc
out
mov
repz
add
out
cld
dec
mov
ficompl
adc
jle
aad
int3
cmp
out
int3
fimuls
cmp
int3
outsl
test
push
jmp
cmp
imul
outsl
mov
inc
xchg
push
sub
pop
push
cli
mov
pop
clc
repz
jmp
aad
out
xchg
movb
push
mov
insl
adc
fsubs
sbb
mov
xchg
mov
sub
adc
add
jmp
repz
les
enter
add
sub
mov
jne
or
push
cmpsl
out
jne
or
mov
inc
loop
lods
fs
mov
sahf
jp
mov
add
cs
popf
mov
shlb
call
repz
add
xlat
dec
jnp
jl
popa
je
push
in
leave
testb
xor
jae
bound
dec
push
push
adc
push
dec
jnp
mov
out
cltd
jo
xlat
dec
xchg
jge
fstl
pop
inc
clc
pop
xchg
fcmovnb
xlat
xchg
popa
sbb
mov
mov
add
es
insl
jne
sahf
mov
ret
xorb
push
add
mov
dec
mov
in
xor
clc
jle
inc
packsswb
jne
iret
xor
jbe
pop
cmp
cmpsl
mov
jo
test
pop
add
or
xor
push
pop
cmp
test
cmp
shr
stos
ficompl
mov
mov
mov
divl
cmp
daa
cmp
clc
std
xlat
addr16
and
jge
fiadds
inc
adc
mov
aas
testl
push
aam
push
daa
aam
jl
mov
push
fcmovb
push
orl
and
sbb
out
ret
loope
jne
arpl
shll
out
adc
call
xchg
pop
xchg
loop
mov
cmp
clc
fwait
loop
lea
call
cmc
ljmp
add
jo
mov
dec
xorb
cmpsl
sbb
out
mov
sbb
in
fdivrs
sbb
ljmp
and
cmp
inc
push
cmp
test
cmp
stos
rclb
mov
push
add
inc
and
out
push
mov
test
pop
pushf
mov
scas
xor
ljmp
jno
popf
push
scas
mov
jmp
into
xlat
inc
mov
scas
loope
std
outsb
mov
xchg
sub
pop
bnd
imul
das
xor
adc
xor
leave
sub
jbe
dec
movsl
es
test
lds
inc
movsl
lahf
outsl
dec
pop
mov
cvtdq2ps
ds
movsb
sbb
adc
lods
and
lock
and
sub
xchg
sahf
fmuls
jle
into
jb
ret
jbe
outsl
dec
xor
fiaddl
mov
das
push
cwtl
in
sahf
insb
mov
int3
mov
imul
es
jnp
stos
lods
or
shl
jo
mov
mov
xchg
push
lcall
rorl
ljmp
pop
andl
mov
sbb
stc
enter
push
pop
rcrl
pop
stos
js
cmc
fists
lret
aas
cmp
das
pop
adc
push
push
inc
mov
cmp
push
sub
test
popf
jge
repnz
outsl
jg
cli
imul
iret
outsl
lahf
lcall
test
xor
mov
subl
in
leave
add
xchg
shll
mov
aaa
dec
push
inc
xor
jns
lds
mov
pop
icebp
pop
roll
cld
jge
rolb
pop
pop
sbb
or
xchg
popl
dec
arpl
mov
sub
mov
and
mov
arpl
rclb
push
or
and
aad
sbb
test
adc
inc
mov
into
add
in
xorl
cmp
mov
int
add
lock
adc
pop
dec
scas
rcrl
push
sbb
fs
aas
lcall
sub
sbb
adc
or
pop
push
movsb
mov
mov
mov
mov
mov
pop
stos
test
aad
mov
fwait
sbb
aam
cli
fbld
lock
sbb
pop
pop
movsb
cmp
das
pop
jp
dec
inc
pop
dec
aaa
xchg
sub
fs
xor
das
ficomps
insb
cmpb
repz
and
pop
xchg
inc
push
lahf
jb
test
inc
int3
jmp
call
sbb
cmp
loop
lret
sbb
out
jo
icebp
sbb
out
cmp
insl
insb
shrb
pop
and
xchg
les
mov
clc
pop
sbb
or
xlat
das
cmpsb
adc
add
adc
addr16
jmp
xchg
test
in
push
das
sbb
repnz
enter
mov
clc
push
fs
push
inc
loope
pop
fadd
cmpsb
cmpsl
in
aam
in
adc
jmp
adc
jmp
stc
mov
movsb
outsb
mov
int
iret
cltd
lret
mov
jle
sbb
rorl
inc
add
insl
les
notb
jmp
cmp
aam
lret
lcall
pop
mov
pop
stos
cmp
push
cs
jns
adc
dec
and
mov
jmp
in
shlb
test
sub
mov
mov
js
rcll
push
in
mov
outsb
hlt
sub
imul
out
lahf
jo
cmpsl
mov
lock
loop
daa
insl
adc
mov
out
push
xchg
inc
xor
and
clc
mov
pop
imul
add
repz
popf
mov
dec
iret
pop
inc
push
mov
mov
insl
jle
cmpsb
movsb
loop
in
pop
fmull
lds
int3
insb
jbe
jne
das
add
push
sub
cltd
test
hlt
push
ror
cmp
cmp
pop
fcmovne
aaa
mov
mov
sti
jb
popf
inc
lds
aad
or
js
jp
and
mov
fs
jle
inc
aas
mov
call
jle
sub
rcl
inc
jmp
fildll
xchg
mov
jl
jg
loopne
bound
jmp
cmp
mov
stos
lcall
add
andl
cmp
lods
inc
add
mov
cmp
jo
push
xchg
xorl
jns
js
mov
xchg
pop
test
pop
js
push
jge
stos
push
mov
xchg
hlt
mov
jecxz
ret
push
push
ja
dec
out
sbb
cmc
mov
sub
mov
mov
aaa
test
mov
es
test
aaa
into
or
out
rol
pop
jmp
mov
in
enter
mov
sbb
dec
mov
mov
sub
mov
ficompl
div
loopne
dec
jne
sbb
and
dec
aas
fdiv
mov
push
aad
sub
lret
pusha
inc
cmp
xchg
pop
xor
out
jae
scas
push
inc
mov
rcll
lods
cld
push
aam
push
and
push
xor
mov
aad
jecxz
inc
sbb
jno
dec
jae
cmpl
mov
rorb
insl
push
arpl
push
or
pop
nop
push
xchg
outsb
dec
enter
mov
pop
outsl
jle
pop
push
mov
mov
aas
jns
add
leave
loop
mov
shrb
xor
lods
mov
mov
adc
xor
jb
mov
push
jg
mov
sti
leave
xor
mov
in
cmp
loop
fwait
push
insl
lea
scas
popf
sub
mov
mov
in
popa
and
test
rorl
int
and
cltd
push
mov
lds
rol
je
push
popf
or
jae
outsl
fimuls
pop
int3
test
fs
hlt
xlat
xor
fsub
imul
ljmp
out
addr16
push
push
gs
adc
push
adcl
in
and
dec
mov
pop
aas
cwtl
pop
mov
fs
inc
mov
incl
adc
mov
fcmovnu
xchg
scas
cmp
cwtl
jp
xchg
dec
ret
shll
add
insl
sti
js
mov
pop
mov
inc
loopne
les
ret
adc
cmpsl
xchg
pop
adc
test
pop
stos
push
add
and
ja
fiadds
cmovbe
inc
mov
adc
sti
bnd
lcall
sti
addb
aaa
dec
jmp
pop
lret
dec
push
scas
bound
xlat
outsb
cmp
lds
pop
iret
pushf
push
stos
pop
lea
pop
test
fcomp
and
push
ljmp
xchg
cltd
or
mov
dec
fwait
inc
adc
xor
aaa
data16
jecxz
and
sbbl
scas
add
mov
sub
rcl
rclb
je
pop
add
inc
pop
sbb
out
push
repnz
shl
stos
mov
cwtl
and
cmpsb
xchg
jbe
inc
lods
sub
sbb
bound
rcll
xor
push
mov
scas
inc
je
mov
push
add
and
sbb
mov
setb
xchg
jl
in
push
mov
aad
ja
push
popa
mov
int3
or
adc
jb
aas
lahf
aaa
cs
test
push
in
jmp
test
push
aad
mov
test
lahf
inc
insb
cld
jp
cmp
mulb
mov
imul
idivb
test
or
mov
add
es
test
mov
cli
jno
mov
inc
jb
cmp
add
mov
xor
push
adc
and
hlt
or
cld
dec
scas
jnp
call
lret
pop
adc
or
jle
sbb
xchg
push
jmp
xchg
std
test
inc
fistl
sub
pop
pusha
mov
out
push
push
mov
std
aas
push
mov
mov
test
sbb
stos
xchg
lcall
adc
in
xchg
inc
sub
add
test
xlat
cmpsb
lods
add
mov
xor
test
rcl
add
mov
stos
push
pop
imulb
or
insl
inc
mov
push
dec
insl
lock
lret
adc
outsl
enter
pop
jbe
inc
cwtl
popf
sub
leave
xchg
and
or
dec
cmp
mov
popf
imul
xor
mov
stos
movsb
fistpll
movsb
stos
push
ret
inc
ds
cmpsl
aam
cs
imul
repz
jae
pop
fs
stc
xorl
mov
js
inc
jno
mov
pop
mov
js
pop
ljmp
imul
gs
hlt
inc
and
ret
mov
dec
push
adc
ss
sti
sar
pop
repz
loopne
mov
mov
inc
inc
clc
and
add
scas
into
pop
jb
or
mov
idivb
orl
adc
rolb
mov
rorb
xchg
rol
rcll
and
popa
xchg
xlat
dec
lahf
out
filds
gs
es
out
jmp
sub
int3
movsb
aaa
lods
aam
ret
cmp
mov
push
gs
addr16
sahf
stos
push
and
ja
iret
jns
jmp
scas
test
bound
mov
pop
mov
jbe
cmp
jg
leave
xchg
push
dec
mov
mov
rcrb
sub
mov
scas
mov
pop
jne
adc
cmp
shr
fs
loopne
push
dec
stc
sub
outsb
insb
enter
push
xchg
xor
pusha
mov
sarb
inc
cmp
xor
stos
mov
xor
insb
sub
movups
rolb
cmpsb
sbbl
xchg
je
xor
je
sbb
rol
lods
mov
xchg
pop
jp
xor
add
fsubrs
daa
sbb
mov
xor
idiv
addr16
lea
jp
add
sub
adcb
adc
loop
xchg
or
pop
mov
fisttpll
cmp
mov
xchg
imull
test
mov
cmc
les
movsb
adc
pop
adc
sub
test
inc
jb
jmp
test
dec
scas
inc
and
mov
adc
in
cmpsb
cwtl
mov
scas
dec
movsl
cmpsl
dec
mov
cld
icebp
and
adcb
sbb
xchg
popf
nop
mov
bound
pusha
mov
shr
pop
shl
sub
or
mov
mov
imul
dec
mov
mov
xor
pushf
in
idiv
cmc
sub
xor
adc
sub
cmp
and
add
mov
and
xor
hlt
outsl
iret
stc
mov
or
push
adc
adcb
jns
jae
push
out
inc
inc
mov
inc
leave
hlt
xor
scas
outsl
shlb
sub
test
testl
rep
sbb
in
push
mov
jo
mov
jbe
pop
call
popa
push
and
bound
mov
xchg
push
ret
push
inc
pop
cmc
inc
iret
ror
and
push
test
rorb
shl
fwait
aad
dec
xchg
arpl
inc
jae
notl
pop
jecxz
adc
xor
cltd
jae
and
in
mov
fnstsw
in
arpl
stos
xor
xchg
in
ds
push
add
push
cmpb
arpl
mov
push
jmp
and
mov
xchg
sub
adc
add
pop
loopne
xor
jmp
jp
push
test
out
dec
push
xorb
sub
fisubrs
xchg
cmp
add
daa
shll
test
es
int3
cli
mov
movsl
imul
sub
add
inc
dec
pop
dec
or
add
scas
lea
xchg
push
imul
outsl
add
mov
mov
outsl
push
pop
imul
mov
pop
add
je
push
inc
pop
adc
lret
sbb
nop
movsb
loop,pn
mov
fnstsw
sub
push
shll
mov
xor
lods
mov
jecxz
popl
out
mov
or
inc
xorl
in
les
out
cli
loop
enter
mov
jp
cmp
xadd
dec
sub
add
xor
or
cs
insb
cmp
add
into
fcompl
pusha
pop
in
or
adc
mov
loopne
xchg
lret
inc
loopne
mov
clc
lea
outsl
js
and
mov
mov
ss
rclb
mov
dec
das
ret
mov
vpextrw
lds
jbe
jns
pop
frndint
les
dec
mov
mov
mov
xor
pusha
pop
or
shl
push
pop
jns
add
addr16
inc
xchg
and
lea
mov
cs
xchg
cmpsb
jns
xor
incl
adc
pop
cli
dec
dec
sbb
xor
mov
lcall
lahf
fs
cwtl
cmc
into
add
cmc
repz
and
in
sbbl
mov
cli
dec
adc
xor
insb
lret
and
adc
mov
or
lret
xor
adc
mov
or
lcall
inc
cwtl
mov
mov
mov
scas
shr
xor
adc
inc
pop
inc
push
cmp
xor
hlt
mov
lock
pop
dec
or
cmp
fdiv
je
in
xchg
insb
sbb
test
cmpsw
mov
aas
push
test
test
xlat
ja
fdivrs
lahf
mov
lret
xor
mov
fbstp
aas
mov
inc
inc
and
adc
push
repz
mov
ret
lods
fs
sub
mov
push
xchg
push
adc
fsubp
xchg
dec
std
mov
mov
xorl
add
icebp
repnz
xchg
cli
aam
test
fisttpl
in
mov
out
or
stos
mov
adc
mov
bound
mov
mov
sub
mov
cmp
and
outsb
int3
jbe
push
xor
xchg
inc
xor
sbb
mov
mov
call
es
jns
cmc
push
popf
sti
pop
test
pop
pop
pushf
andb
ucomiss
ljmp
lods
mov
stos
mov
sub
xchg
cwtl
sti
lds
loop
adc
ja
and
ja
leave
sub
ss
xor
pop
push
mov
mov
aam
cmpsb
adc
mov
test
enter
pop
addr16
nop
std
dec
movsl
xor
cmp
xchg
sbb
add
pop
insb
out
dec
mov
sbb
mov
movsl
jo
movl
dec
movsb
fisubrs
cmp
into
repnz
cmp
stos
dec
jo,pn
sarl
mov
lret
and
jmp
mov
jl
mov
outsl
push
std
loopne
and
inc
jl
dec
aaa
les
cwtl
mov
mov
push
or
sub
add
mov
adc
adc
mov
xchg
inc
inc
or
data16
inc
mov
mov
xchg
cs
mov
mov
inc
push
push
sahf
push
sbb
lcall
dec
adc
inc
inc
mov
mov
lret
pop
sub
dec
mov
lea
xor
mov
sahf
lret
jne
and
int
stc
jge
arpl
add
aad
adc
push
insb
lcall
push
mov
xchg
xchg
aam
mov
es
jns
mov
and
fbld
dec
filds
movsb
mov
in
es
popf
movsb
test
push
stc
sti
xor
push
in
or
jno
push
cli
aaa
add
cmp
jne
push
jmp
pop
push
lods
aad
xor
jo
pushf
sbb
pushf
jnp
push
movl
in
iret
ficoms
jle
xchg
mov
lds
xor
or
fwait
lcall
popa
lahf
ja
cmove
push
or
movsb
jo
cwtl
aaa
xchg
call
inc
mov
mov
scas
or
xchg
inc
adc
cmp
mov
push
sub
jmp
sbbb
in
int
push
push
adc
pop
rorl
fdivs
sub
ljmp
int
jg
insl
dec
xchg
loop
and
aas
rcl
push
xchg
dec
stos
lock
ds
or
das
and
aad
iret
or
nop
fs
int
jecxz
inc
add
not
lods
sub
stos
dec
cmpsb
pop
repz
rcrb
pop
xchg
cmpsl
movsb
mov
xchg
imul
mov
je
xor
daa
mov
jle
sub
stc
ljmp
lahf
fsts
jecxz
pop
in
xor
jns
fiadds
push
mov
and
dec
or
add
clc
mov
push
fmulp
sub
jno
dec
aas
or
push
sbb
sub
pusha
cmpsb
shll
xchg
cmp
insl
adc
popa
cli
or
sbb
dec
lods
test
xchg
stos
inc
mov
sub
in
daa
xchg
sbb
icebp
imul
aaa
jb
loope
dec
dec
fdecstp
js
shl
int3
lret
hlt
test
outsb
shll
xchg
adc
fcmovbe
mov
xor
rsm
mov
ja
fbstp
mov
inc
and
fcmovb
mov
sbb
fistl
mov
cmp
or
add
pop
ret
sti
mov
cs
lret
mov
loop
outsl
lods
inc
xor
jbe
stos
xchg
arpl
aam
shrl
push
cmpsl
and
or
cmc
mov
cmp
cwtl
flds
adc
test
sbb
jbe
mov
mov
lcall
daa
sub
mov
mov
in
mov
das
pop
cli
mov
outsl
adc
mov
movsl
add
sub
sbb
or
mov
jg
push
out
mov
adc
xchg
out
je
lret
cmp
repnz
mov
mov
dec
imul
pusha
and
pop
push
call
jmp
sbb
int
pop
ljmp
decl
insb
xchg
lods
cmp
or
fsubrl
cmp
ss
loop
lcall
mov
mov
or
add
mov
es
out
pop
and
aam
aas
mov
arpl
push
push
iret
daa
xchg
jae
jp
mov
imul
and
pop
and
repz
adc
pop
addr16
adc
adcb
in
addr16
clc
stos
jae
in
mov
pop
and
mov
rorl
setbe
fildll
in
mov
add
xchg
cmp
and
mov
sbb
push
pop
mov
lods
dec
mov
test
push
pop
sub
out
dec
test
lret
fistpl
and
stos
shlb
and
data16
dec
jo
cli
pop
fmul
fildl
sub
lods
pop
jecxz
scas
inc
shrl
lret
xchg
mov
int
pop
cld
xor
stos
fs
add
jno
cmpsl
add
pop
mov
push
cmp
pop
add
pop
adc
dec
fs
add
js
lds
dec
imul
outsb
xchg
loopne
lahf
ja
push
sbb
or
repz
aam
and
and
sub
jo
jp
and
xchg
and
fistpll
pop
sub
lock
xchg
xlat
dec
fwait
xchg
push
adc
pop
das
mov
lret
loope
dec
addr16
mov
sub
cmp
movsb
inc
dec
jbe
cmc
xor
jno
mov
xor
fwait
inc
aas
leave
int
aas
cmpsb
push
mov
stc
dec
mov
fs
loop
jns
push
sub
cwtl
addr16
add
fwait
mov
and
mov
adc
gs
js
lock
aas
push
lods
gs
pop
ds
mov
sub
imul
shrb
das
idivl
leave
shlb
hlt
mov
gs
addr16
xorl
mov
inc
ljmp
dec
mov
vlddqu
orl
xor
mov
movsb
pop
xor
loop
negl
lret
loopne
ret
popf
push
jecxz
mov
je
sbb
sbb
xchg
mov
rolb
mov
fs
or
sbb
adc
in
pop
in
jne
dec
mov
and
push
push
push
or
adc
adc
dec
push
addb
adc
cmp
shlb
mov
nop
inc
nop
inc
adc
xchg
insl
sub
jno
push
jmp
fistps
sub
sub
insb
es
push
jmp
in
call
mov
jno
sbb
jl
iret
mov
jae
data16
insl
in
movsb
jg
lcall
inc
cmpsl
cmpsl
xchg
popl
ss
loop
sbb
mov
jb
dec
fs
and
imulb
add
clc
nop
inc
out
push
mov
cltd
mov
outsl
pop
mov
jg
mulb
xor
push
scas
mov
daa
les
vmovaps
mov
mull
or
pushf
mov
mov
and
sbb
xor
cmc
inc
clc
mov
pop
ljmp
enter
ss
ljmp
stos
loope
mov
xchg
pop
test
adc
push
push
in
fmull
pop
call
or
dec
lret
in
hlt
push
push
push
inc
pop
push
popa
fldl
lock
cltd
fistl
dec
xor
ja
dec
cld
cmp
aas
insl
les
push
dec
mov
fcoms
ljmp
dec
mov
sbb
rcrb
push
outsl
push
fcompl
aaa
mov
repnz
push
subl
push
lea
pop
inc
arpl
mov
decb
mov
add
and
outsl
mov
mov
cmp
into
sahf
or
sub
and
punpckhdq
mov
xchg
mov
mov
outsb
or
mov
sbb
mov
les
lahf
xor
arpl
xor
jmp
jl
pop
push
push
and
xchg
jp
push
pop
jns
movsb
jle
push
cld
sbb
mov
lcall
sub
cmpsl
mov
xor
cmp
sub
test
jno
repz
mov
cmp
les
cmp
or
lret
scas
xor
repnz
out
sarl
inc
cmp
ja
push
fstpt
jmp
xor
xchg
and
jo
and
xor
xchg
inc
das
ss
sbb
inc
push
dec
lds
mov
icebp
mov
std
js
push
ja
adc
ja
inc
sahf
push
lahf
cli
shrb
mov
cmp
sbb
xchg
lods
mov
js
stc
cli
pop
fldcw
into
pusha
xor
hlt
add
sbb
sub
xchg
repnz
push
or
leave
fistpll
sub
fisttpl
addr16
inc
cmp
popa
mov
pop
jmp
movsb
fdivrl
cmp
jp
ds
addl
or
cmp
addb
int
pop
aas
adc
and
adc
in
loope
jmp
mov
jle
xor
rcrb
out
mov
lcall
dec
icebp
jae
js
lahf
popf
adc
pop
imul
xor
frndint
mov
flds
adc
dec
lret
push
dec
mov
xchg
stos
fsts
mov
sbb
div
xchg
hlt
not
das
arpl
pop
push
pop
push
fcmovnu
xchg
dec
aam
sub
es
push
and
add
movsl
inc
out
icebp
fisttpll
lock
popa
in
jo
mul
push
xchg
adc
push
nop
sbb
inc
test
push
loop
lock
xchg
cmp
jb
sar
roll
fcoml
pop
mov
mov
fstl
ljmp
arpl
sub
mov
sub
push
mov
sbbl
and
inc
adc
sub
pop
imul
mov
cmpsl
roll
mov
jl
pop
jnp
scas
enter
cmpsl
xchg
mov
das
inc
stos
mov
inc
mov
mov
movsl
push
push
enter
jecxz
nop
sub
push
dec
bound
cmc
xchg
daa
ss
insl
testl
add
push
into
adc
dec
ret
jns
lahf
xchg
test
lret
out
or
rcr
gs
add
push
mov
push
sbb
xor
push
data16
int
pop
mov
push
pop
fcoml
cli
repnz
out
sbb
and
test
push
out
test
sub
mov
jmp
mov
popw
add
and
int
push
outsl
adc
cs
addr16
hlt
pop
add
outsb
stc
pop
mov
add
dec
ss
fiaddl
stos
popa
test
cltd
jp
push
sbb
repnz
sub
out
in
or
push
mov
decb
or
jnp
int
and
fcmovnb
into
pop
dec
fmuls
mov
ss
lret
enter
std
pushf
arpl
or
shlb
xor
pusha
xchg
adc
jp
adcb
jmp
jl
and
ljmp
xchg
xchg
pop
cmp
jle
or
push
mov
xor
ljmp
xor
mov
inc
pop
mov
dec
test
mov
mov
clc
pushf
sub
sahf
mov
insl
xor
cmp
jne
test
sti
mov
daa
mov
xchg
data16
adc
test
adc
inc
out
and
popf
in
out
pop
js
jno
push
xchg
sub
mov
cmp
add
jg
lahf
push
js
mov
ja
mov
sbbb
ret
jecxz
inc
xor
mov
cmp
xchg
fisttps
aaa
insl
inc
fnstenv
jle
push
and
sub
aas
mov
les
sahf
clc
stc
dec
sbb
in
xor
cmp
push
jecxz
fidivrs
shll
inc
sti
bnd
cmp
push
and
xorb
or
lods
jge
fisttps
mov
push
mov
ljmp
cmp
jmp
out
lods
enter
aaa
cld
outsl
call
data16
data16
mull
fs
inc
xchg
xchg
jge
mov
imul
add
adc
imul
push
xchg
lcall
cmp
add
mov
mov
call
repz
addl
or
ret
push
test
sub
cli
cli
jmp
dec
pop
scas
lds
vprotb
mov
mov
add
imul
leave
shr
iret
test
lahf
jle
or
test
lods
sub
jae
and
outsl
mov
leave
adc
rcr
std
je
leave
out
or
cmpsb
dec
mov
push
cli
shl
pop
pop
inc
mov
lret
cmp
lahf
mov
loope
in
xor
test
xor
gs
jne
jp
inc
inc
cwtl
cld
xor
int3
psubq
pushf
mov
popf
mul
in
dec
add
mov
mov
mov
addr16
mov
and
jmp
popa
das
aad
bound
and
fwait
cli
mov
sbb
push
rcrb
movsl
mov
jle
popa
mov
sbb
cmp
or
cmpl
mulb
mov
pop
dec
outsl
cmp
aad
jg
fisttpll
add
jge
ss
das
lods
in
push
hlt
leave
xchg
leave
sti
xor
xchg
imul
or
xchg
imul
inc
lret
ret
lret
loop
or
mov
mov
insb
dec
inc
lods
dec
lods
dec
mov
call
aas
in
or
shrb
add
test
daa
cli
outsl
xor
jp
jge
and
or
js
mov
std
lock
xlat
push
mov
lds
mov
ficoml
mov
pop
daa
mov
xchg
xor
adc
movsl
iret
pop
idivb
and
gs
and
cmp
movsb
repz
dec
push
add
repnz
or
dec
in
int
fadds
mov
xchg
mov
pop
inc
das
repnz
ffree
iret
or
int3
sarb
ret
cs
push
cltd
pop
nop
ret
xchg
popf
jmp
push
push
mov
mov
add
cmp
push
xchg
pushf
rorl
dec
lock
nop
ficoml
movd
les
xchg
jnp
lret
mov
imul
adc
pop
xor
jge
mov
sub
jbe
pushf
lret
rep
idivb
imul
jmp
cmp
jp
push
insb
mov
out
outsl
fistps
xchg
jne
loope
pushf
insb
and
fldt
test
popf
cwtl
loope
lret
adc
pop
data16
push
push
xchg
stos
fcompl
ret
in
stos
jb
pushf
gs
loopne
nop
adc
jecxz
test
arpl
imulb
jmp
outsb
cmp
rclb
or
scas
aaa
pop
loop
xchg
fidivs
rorb
fucomi
push
fsts
pop
or
inc
rcrl
pusha
sub
mov
imul
mov
mov
jecxz
in
jae
ds
dec
mov
or
push
mov
mov
and
popf
push
mov
test
pop
mov
andb
subb
jnp
and
xor
push
rcrl
insl
xchg
sub
icebp
loop
call
or
push
lahf
repnz
sub
push
xor
dec
mov
and
stc
mov
aam
mov
cltd
and
cmp
out
ja
sub
decl
movsl
sub
out
and
out
push
mov
outsb
cmp
imull
lcall
in
mov
out
int3
popa
mov
pop
stos
rcr
lret
dec
std
fchs
push
stos
mov
clc
daa
xchg
jbe
shlb
call
repz
shlb
sbb
xchg
pop
dec
je
enter
and
jb
add
mov
lock
sbbl
shll
mov
test
fdivr
pop
sbb
stos
lahf
cmp
xchg
xchg
dec
pusha
push
and
pusha
and
mov
sarb
aaa
stos
repz
enter
les
mov
sahf
inc
imul
hlt
xor
sbb
mov
outsl
sbb
fwait
leave
fdivr
fwait
mov
pop
xchg
push
mov
mov
orb
mov
sarl
iret
ret
fdivrl
movsb
into
in
mov
xlat
js
xor
cmp
cld
jne
or
pop
roll
aas
fwait
push
cmp
cmpsl
fnstsw
fiaddl
jl
xor
loop
adc
mov
push
push
mov
addl
sub
fcoms
loop
nop
mov
stos
or
popf
fs
popf
addr16
js
push
or
jmp
adc
mov
pop
mov
clc
lock
sbb
cmp
dec
xlat
pop
jne
inc
mov
add
pop
xchg
xor
add
jo
mov
sub
mov
jecxz
and
dec
loope
movsl
push
xor
inc
push
xchg
jle
mov
daa
adc
jne
adc
cltd
xchg
repnz
mov
or
lods
sbb
stc
and
inc
out
push
inc
mov
dec
scas
mov
test
lret
dec
leave
xchg
cmpb
push
dec
mov
js
mov
push
mov
sbbb
sbb
enter
stos
shrl
lods
mov
cmp
pop
dec
mov
mov
lret
mov
jg
lock
jmp
movsb
inc
pop
xor
lds
das
jne
xchg
popf
dec
addr16
and
cmp
adc
pop
fisubrl
test
out
and
cli
mov
push
fs
mov
jecxz
and
insl
fsubs
imul
mov
imul
add
mov
mov
or
shlb
out
outsb
into
jno
in
iret
dec
pop
or
adc
dec
int3
inc
add
push
mov
dec
mov
sub
notb
xchg
and
popf
addr16
les
aam
pop
cmp
jne
lahf
xlat
jnp
sbb
dec
add
push
xor
push
cwtl
aaa
ss
inc
lea
cmpsb
xor
xlat
add
popa
stos
insl
sti
ja
movsb
cmp
dec
cli
shlb
push
cmpxchg
mov
stos
xor
cs
lcall
arpl
sbb
add
xor
cwtl
fidivrl
into
icebp
dec
test
out
insl
mov
sub
mov
out
sbb
mov
ljmp
xchg
ljmp
aaa
and
fwait
int3
daa
sub
cmpsb
cmc
mov
pop
repz
inc
xchg
pop
int
lret
xchg
and
cmp
imul
mov
ja
push
push
jns
cmpsb
jl
mov
ret
jo
and
int3
add
pop
fldenv
imul
rorb
daa
fcompl
push
xor
xchg
mov
les
pop
push
mov
jbe
mov
dec
xchg
sti
add
leave
icebp
aaa
lret
cmpsb
test
adc
inc
mov
pusha
aas
pop
call
movsb
add
cmp
jbe
clc
cmp
sub
lcall
xchg
cltd
adc
outsb
sbb
out
repnz
fcoms
sub
scas
stos
cmp
imul
mov
jle
int
push
jmp
sub
xchg
mov
sub
fldt
xchg
jo
bound
xchg
xchg
into
in
xchg
fucomp
push
ljmp
push
aas
daa
adc
jno
and
lods
add
scas
pop
test
xchg
jnp
or
insl
cltd
or
mov
xchg
daa
stc
int
cmpsl
daa
or
or
inc
cltd
sub
inc
mov
pop
shl
ret
inc
jp
xor
lods
nop
inc
inc
lea
jbe
sub
test
into
mov
jge
test
mov
inc
adc
mov
cmp
add
shll
insb
imulb
sbb
nop
inc
repz
dec
out
divl
xchg
mov
bound
or
adc
xor
mov
out
sbb
mov
and
push
cwtl
lahf
es
in
sbbb
and
sbb
sub
jg
mov
imul
movsl
push
movl
idivb
daa
in
lds
jnp
add
test
in
repz
mov
add
sub
dec
nop
xchg
lock
pand
jae
xlat
sbb
pop
jb
repnz
imulb
sub
arpl
xchg
ja
cltd
lods
lods
adcb
sub
subb
std
cli
fcompl
ret
jmp
jge
std
or
mov
dec
nop
je
scas
cmp
pop
imul
xchg
jb
pop
xor
adc
mov
jl
xor
fcmovu
push
loope
inc
pop
fnstcw
shlb
sbb
fcmovbe
xor
fs
es
pop
or
lret
rcr
test
mov
jecxz
mov
out
mov
lock
push
scas
sbb
arpl
and
mov
cmpsb
movl
push
pushf
fwait
inc
mov
or
popf
jle
fimull
into
mov
push
or
xor
and
add
out
rcr
lcall
sbb
mov
dec
xchg
mov
dec
add
inc
pop
mov
push
pop
mov
imul
cmpsl
cmpl
pop
xor
push
aam
enter
mov
aad
fsub
inc
sub
es
sbb
cmpsl
adc
cmpsl
dec
cmc
lret
jle
cmpsb
jmp
pop
cmp
xchg
cld
xchg
or
xchg
dec
add
insb
fistps
mov
pop
mov
je
dec
sti
cmp
dec
js
jg
sub
jg
xor
jnp
jge
jge
dec
negb
mov
push
pop
push
lock
jae
fcmovnb
sbb
cld
add
mov
mov
xor
push
sub
icebp
stos
cs
xor
ds
xchg
add
in
mov
into
mov
adc
loopne
or
jae
and
shl
pop
add
mov
rcrl
sbb
xchg
pusha
lock
insb
nop
setl
cmpsb
push
gs
lods
loope
and
sahf
pop
filds
xchg
adc
mov
xchg
outsl
xor
mov
and
inc
ss
enter
xchg
in
stc
pusha
insl
je
mov
push
aas
int3
pop
aas
ss
je
lock
mov
movl
lods
sub
push
sar
push
xchg
dec
push
push
mov
pop
jp
jno
add
js
wrmsr
cmpl
insb
movsb
lea
shlb
mov
push
popf
xchg
aad
cmp
mov
sub
dec
movsb
mov
mov
sbb
pop
mov
icebp
push
pop
testl
insl
in
push
sub
dec
sub
popa
sub
ficoms
pop
mov
mov
push
pop
imul
out
pop
push
xor
sbb
out
sarb
sbb
push
add
mov
xchg
adc
mov
into
mov
jno
xor
es
mov
mov
aas
and
mov
inc
pop
pop
xchg
mov
sub
mov
or
sti
or
cmp
mov
jle
pop
mov
jne
mov
mov
mov
pop
in
aas
out
pop
pop
mov
dec
add
pop
in
cmpsl
adc
inc
lea
fcmovne
outsb
fbstp
jp
adc
shrl
test
dec
ss
or
add
push
fdivrl
shr
movsl
test
jmp
jns
pop
or
cmp
popf
out
inc
and
cmp
outsb
cltd
mov
fcomps
faddp
dec
cmp
shll
repnz
xchg
pop
jmp
dec
stc
dec
and
aam
push
add
gs
mov
aaa
and
fmull
xchg
sbb
mov
jge
movsl
pop
idivl
ss
jnp
cvtdq2ps
addl
mov
adc
or
xchg
loope
mov
add
fsts
popa
dec
out
mov
call
leave
mov
xlat
sahf
int
pop
cltd
es
call
ss
pop
lock
pop
jnp
xchg
out
divl
ss
repnz
sbb
fwait
pop
cmp
pop
sub
lcall
sbbb
stos
std
jnp
mov
push
shld
xor
stos
push
lea
pusha
push
mov
dec
scas
sub
orl
jae
scas
ja
loopew
pop
xor
push
movsl
cmp
stc
lret
mov
imul
jg
mov
stos
inc
jnp
out
outsb
xor
test
add
lret
cmc
pop
test
inc
or
cmp
xor
lds
gs
lret
fstpt
cld
xchg
out
sub
mov
fcmovbe
xchg
sub
ja
int
add
fidivrs
pop
and
aad
inc
xor
fisubrl
lds
das
es
ljmp
mov
inc
sahf
mov
or
jl,pn
jle
jo
or
pop
jge
fldl
cmp
lods
cmp
cmp
cmpb
mov
sub
sbb
les
test
mov
pop
cmp
and
sub
mov
fdivs
cmpsl
push
aam
popa
lahf
jmp
xor
lock
imul
add
shll
mov
test
mov
cmpsl
inc
pop
fstpl
incb
pop
adc
adc
push
adc
jle
mov
push
aam
fisubrs
testl
rep
pop
sbb
xorl
outsb
add
cmp
mov
pop
movsb
adc
nop
test
adc
push
dec
jecxz
xchg
stos
jl
fadds
dec
inc
add
xchg
es
add
lahf
dec
pavgb
push
dec
pop
dec
xor
jns
insb
movb
stos
test
aaa
adc
mov
mov
jg
mov
je
cmp
fbld
mov
mov
ja
lea
incb
scas
inc
cltd
cmpsb
jnp
ret
fists
add
jl
nop
jmp
xchg
orl
sub
into
mul
loop
insl
cs
inc
mov
les
sbb
sbb
fcmovbe
pusha
adcl
mov
mov
mov
cltd
inc
push
call
sbb
pop
idivl
pusha
dec
jmp
jne
cmp
addps
add
jae
inc
xor
jnp
mov
push
cwtl
xor
aaa
add
or
xchg
or
incl
shl
xor
cwtl
jbe
scas
pop
inc
clc
fidivrs
movsl
inc
push
cmp
ss
mov
rorb
pusha
cmp
jle
mov
sub
xchg
cmpsl
gs
es
mov
repnz
jl
and
les
mov
outsl
xor
and
xchg
les
inc
xor
sbb
orb
pop
loop
loop
xchg
test
dec
cmp
mov
pop
arpl
jp
cmc
lods
leave
iret
jnp
mov
or
lock
pop
jge
xlat
decb
ljmp
scas
mov
xchg
add
data16
pusha
sbb
mov
fcompl
sbb
xchg
adc
stos
outsl
pop
jns
adc
mov
gs
sub
mov
cmp
pop
cli
idiv
clc
xchg
jno
sbb
test
outsl
aas
outsl
adc
icebp
mov
cs
jns
mov
jns
lock
mov
pop
pusha
sbb
sbb
jmp
cmp
das
mov
adc
adc
pop
adc
push
add
adc
ja
jae
sbb
cld
jg
xadd
xor
xor
or
fdivr
es
or
cmc
or
insb
xchg
outsl
int
and
jge
imulb
scas
rolb
inc
in
cmp
mov
out
orb
cmp
jno
xor
cmp
fldenv
out
push
ljmp
jmp
aas
sbb
cmp
mov
mov
mov
ds
pop
les
out
pop
sbb
jbe
dec
jle
lods
dec
popf
sbb
loope
outsl
adc
pop
mov
xor
mov
or
push
shrb
sub
jns
xor
or
sub
cld
fcomip
xor
push
mov
push
in
enter
shll
pop
je
inc
pop
js
xorb
adc
xchg
cmp
aas
repz
sub
test
outsb
in
movsl
jmp
or
fstps
lahf
jb
jl
jl
clc
faddl
dec
mov
lods
mov
jmp
es
lret
xchg
leave
mov
test
adc
inc
fs
sub
subl
pop
mov
outsb
mov
or
paddusw
adc
hlt
testb
jae
sbb
dec
out
sub
movl
fdivrl
jg
frstor
and
push
and
xchg
lods
mov
lock
lods
ret
push
pop
push
or
lods
mov
clc
mov
xor
and
cwtl
and
cmp
jecxz
inc
add
cmpsl
push
call
sbb
lret
insb
shrl
mov
xchg
lock
call
push
xchg
fisttps
out
icebp
pop
scas
cmc
shl
fdivp
pop
push
movsl
loop
pusha
pop
cld
push
data16
xchg
insl
jo
vzeroall
aam
push
mov
jno
pop
push
jb
add
pop
loop
shll
jp
xchg
pop
mov
cwtl
sbb
cmpsl
inc
outsl
pushf
call
dec
mov
push
pop
xchg
xchg
mov
enter
mov
mov
push
das
lock
mov
and
leave
xor
nop
out
pusha
and
aad
jb
rol
dec
clc
loopne
inc
xchg
push
adc
push
push
inc
je
dec
inc
ret
mov
inc
adc
push
inc
icebp
mov
xchg
into
mov
mov
dec
daa
dec
pop
sub
push
or
inc
dec
push
cmp
add
sahf
lret
mov
test
pop
aaa
rol
and
cmp
pop
cld
popa
cld
xor
or
xchg
mov
push
inc
sub
sbb
jns
lock
sbb
popa
jecxz
push
repz
push
pop
push
in
mov
ja
mov
insb
std
and
push
xchg
cli
mov
push
push
repnz
mov
pop
stc
add
out
aad
in
ja
adc
inc
lahf
pop
or
aaa
pusha
cltd
repnz
mov
push
pop
cmpsl
jecxz
sahf
insl
jns
bound
rorl
mov
sbb
outsb
push
xchg
cld
xor
xchg
pop
xchg
std
inc
enter
xchg
jp
ds
lock
in
pusha
pop
call
pop
loope
outsl
sar
xchg
push
jns
mov
push
das
js
sbb
adc
fstp
sahf
sub
insb
push
push
add
out
das
mov
cmp
mov
je
jae
cmpsb
jbe
inc
adc
data16
mov
cli
jae
imul
arpl
sub
adc
fwait
idiv
sbb
scas
out
and
push
and
stc
les
mov
push
jg
push
cmc
push
rcrb
xor
mov
xor
ljmp
lahf
outsb
mov
dec
or
jecxz
insl
dec
xchg
cld
fidivrl
push
sbb
xor
loop
stos
daa
insl
jnp
cmp
inc
mov
pop
jb
sub
pop
js
and
hlt
notb
mov
std
add
mov
popf
mov
add
cmc
idiv
dec
pusha
xchg
adc
js
sub
push
repnz
test
mov
addb
xchg
aaa
daa
popf
ja
add
mov
push
scas
sbb
andl
outsb
xor
dec
repz
std
lea
jns
and
es
and
iret
xchg
inc
mov
cmpsb
imul
test
mov
das
lds
jne
add
mov
out
jmp
imulb
negl
push
sub
adc
cwtl
in
adc
adcb
mov
das
cmp
outsl
je
pop
in
xchg
leave
jo
roll
or
mov
jg
pop
dec
in
pop
sub
push
or
xor
inc
loope
test
inc
mov
stc
into
or
ja
pop
mov
push
sbb
into
pop
mov
sub
add
insl
or
scas
mov
push
adc
daa
jnp
shlb
cmp
cmp
in
inc
cli
subl
rcl
pusha
imul
fildll
jbe
pop
fstl
rcrl
movsl
mov
push
and
iret
add
ljmp
repz
pusha
les
add
scas
sbb
imul
popa
dec
insl
add
cmp
xor
fimull
clc
stos
movsb
fsubrs
mov
push
out
or
nop
cmc
subb
mov
ret
xor
cmp
xchg
das
mov
push
leave
lods
xor
or
push
mov
sbb
pop
daa
sahf
in
push
popa
jbe
add
mov
sbb
enter
xchg
test
sahf
daa
nop
std
pop
bound
mov
cs
jne
jg
or
lahf
or
and
addb
pop
jb
mov
mov
xor
int3
mov
dec
cs
jg
cmpb
lsl
jo
sbb
ficompl
dec
aam
or
mov
punpckldq
and
push
fcomp
shrb
shll
nop
es
jp
scas
and
xlat
out
sbb
es
mov
sbb
cmp
push
js
jb
loopne
test
pop
jnp
ljmp
pop
jecxz
cltd
xchg
inc
push
fisubs
lret
addr16
hlt
cmp
xor
ja
jb
repnz
pop
cwtl
mov
lret
lea
arpl
cmp
in
rorb
loopne
loop
data16
cs
or
ja
out
rcll
jnp
std
test
sti
movsl
pusha
push
imulb
idivb
decb
adc
jno
xor
sbb
or
push
push
cmp
xor
jne
mov
cmp
push
pop
xchg
pop
cwtl
repnz
mov
movl
ss
sub
push
fadd
cmp
test
aam
icebp
cwtl
sbb
aaa
sub
push
cmc
daa
rorb
jno
inc
pop
mov
aam
and
imul
pushf
ficompl
lahf
push
cmp
fists
out
push
sub
cmp
xchg
mov
hlt
xchg
xor
js
lahf
daa
filds
daa
fdivl
and
dec
dec
push
cmp
mov
repz
call
stos
cs
movsl
mov
inc
jno
push
pop
mov
in
mov
cmp
jge
in
int3
out
mov
cmp
out
out
dec
and
push
cmpsb
push
mov
cwtl
sbb
pop
cmp
adc
movsb
cmpsl
mov
cmp
shl
jno
sbb
ss
pop
inc
leave
out
lea
test
call
cwtl
fildll
xchg
test
sti
aas
and
movsl
fistl
jnp
adc
and
iret
mov
test
fucomi
popf
testl
and
push
mov
cld
pop
jb
das
clc
dec
rolb
insl
stos
adc
xor
lret
aam
outsl
xchg
mov
add
mov
or
je
mov
jns
ja
add
and
outsl
mov
adc
scas
inc
scas
or
xor
es
fisttps
sbb
adc
push
shll
rcrb
and
and
xor
jge
ja
push
cs
jp
xchg
adc
jo
dec
in
adc
shlb
out
jnp
cmp
in
movl
loop
xchg
test
aas
push
xchg
sbb
jecxz
loope
fnstcw
fwait
inc
jmp
jo
mov
aam
stos
add
add
mov
psraw
mov
cwtl
add
icebp
scas
sarb
rcrb
push
inc
outsb
inc
inc
xlat
dec
adc
stos
lods
inc
and
add
stc
jp
xchg
xor
clc
jge
mov
lahf
mov
mov
inc
movsb
or
inc
outsl
fsubl
addb
outsb
stc
addr16
xorb
rcll
jecxz
mov
jecxz
out
push
into
cmc
dec
or
sub
dec
iret
insl
dec
pop
push
lock
jns
cmp
cli
add
test
add
pusha
jno
push
jbe
bnd
out
mov
pop
icebp
lcall
push
leave
jne
jp
xchg
push
inc
lods
xor
addr16
mov
sbb
ds
push
inc
jg
push
jecxz
jno
js
fdivrl
dec
sub
sub
add
xor
aam
aas
sub
daa
mov
push
xor
dec
jle
enter
bound
leave
jle
xchg
popa
ja
add
xor
lret
fsubs
inc
sbb
sub
cli
sub
push
fnstsw
jno
lock
scas
testl
pop
aam
gs
cmpsl
out
mov
pop
outsb
xchg
fisttps
je
lock
into
je
xor
mov
cmc
jle
cmp
adc
orl
mov
sub
add
jge
ret
mov
cmpsl
arpl
pop
xor
clc
mov
mov
pop
aaa
push
pop
hlt
jno
fdivrl
loope
loope
outsb
mov
jp
lea
loopne
adc
sbb
lret
cmpsb
aad
jge
pop
push
ljmp
in
pop
jb
gs
movsb
pop
shrb
sub
xchg
cmp
pop
adc
test
dec
mov
leave
push
rcrl
add
cwtl
into
inc
jbe
inc
dec
je
adc
repz
and
mul
jno
push
adc
movsl
cmc
and
inc
inc
jae
out
out
cmpsl
mov
xor
add
jb
cmp
mov
add
mov
lret
ret
jle
and
aad
mov
shll
lahf
push
imul
std
pop
xchg
lahf
cmc
push
push
aad
out
popa
mov
mov
xor
and
fsubrp
pop
setns
adc
popa
fucomip
jecxz
aas
inc
mov
orb
repz
adc
ror
fiaddl
sarl
xchg
or
mov
sub
xchg
ret
push
push
repnz
pop
cmp
mov
rolb
push
mov
and
xchg
dec
negb
and
inc
lock
mov
dec
std
jmp
adc
repz
hlt
nop
adc
iret
into
mov
push
rcr
cmc
fdivr
dec
shrl
jb
outsl
mov
xchg
sahf
imul
mov
or
lcall
in
jle
sti
in
sub
cwtl
stos
adc
iret
sarb
in
sub
lods
mov
pushf
loopne
add
pop
aas
popa
ret
or
dec
sub
add
push
mov
xor
fmull
add
mov
mov
cmp
fwait
push
xchg
pop
rcr
xchg
lahf
adc
lods
scas
ds
ficoms
cmp
fildll
mov
out
iret
fdivrp
jl
lcall
cmpsl
sub
popa
jg
or
notb
pop
xorb
roll
mov
pop
outsb
or
dec
sub
sbb
push
int3
push
pop
mov
scas
ret
xchg
xchg
adc
in
sub
jns
jg
jo
out
add
int
xchg
pop
je
cmp
xchg
hlt
insl
jle
sahf
jnp
mov
sbb
lea
adc
sbb
rcrb
push
pop
xchg
and
jb
neg
jnp
iretw
dec
scas
rcrb
pusha
sub
dec
aam
inc
ljmp
adc
xchg
mov
dec
jno
in
mov
outsb
sbb
pop
push
fnstsw
ja
ds
pop
adc
mov
or
lock
mov
std
in
incl
fdivr
jnp
xor
in
sbb
sbb
jb
pop
cmp
test
push
add
inc
sar
je
xor
cmpsb
dec
sub
mov
btc
insl
cmpsl
xchg
in
xor
imul
jne
jmp
add
repz
lods
arpl
out
and
add
xor
popa
shll
into
mov
mov
push
sahf
lea
ljmp
aaa
call
mov
loop
pop
mov
pop
je
mov
nop
and
call
mov
sub
jne
mov
mov
mov
pusha
add
jmp
popa
insl
cmp
mov
cmpsl
mov
std
adc
aam
in
and
xorb
dec
pop
pushf
test
jecxz
je
pop
jb
aam
jnp
pop
ljmp
xchg
les
shlb
xor
out
mov
push
movsl
cmpsl
xor
ret
xchg
stos
rcr
cmp
movsl
or
fldenv
lods
in
cmp
lea
enter
aad
mov
sbb
mov
cmp
sbb
scas
pop
mov
test
inc
mov
loope
mov
mov
fs
jo
dec
push
mov
cmpl
rcrl
cmp
mov
jb
or
addr16
adc
cli
xchg
mov
fcomp
xchg
and
rcrb
cmp
dec
ds
jnp
movsb
mov
jp
mov
adc
popf
xor
nop
mov
dec
repz
cmpsb
mov
push
dec
mov
ret
mov
out
cld
sbb
jl
push
dec
xchg
clc
pop
and
imul
lret
adc
mov
cltd
add
pusha
pusha
test
pop
xchg
and
cli
cmpl
sahf
adc
jb
repnz
add
pop
iret
mov
sbb
xor
sub
lods
and
cmp
pop
test
pop
ljmp
shll
xchg
push
push
loop
pusha
sbb
sbb
cs
int
inc
aaa
sub
aam
cltd
loop
test
mov
popa
xchg
xbegin
xchg
jge
fisubrs
push
cld
insl
dec
add
rcrl
push
popf
out
mov
test
pushf
shl
jo
arpl
and
leave
fidivs
test
test
pop
aam
imul
addr16
and
or
aas
jb
std
sub
cmp
jge
enter
pop
hlt
sub
pop
imulb
ret
or
push
clc
movsl
sti
loope
sbb
addr16
mov
dec
lret
fists
cld
push
mov
cld
jle
test
xchg
mov
xor
nop
cmp
adc
xor
push
jno
stos
jg
ljmp
xor
mov
pop
sbb
cmp
pop
aaa
out
imul
dec
rorl
jecxz
xchg
jl
ljmp
push
push
cmp
jmp
stc
push
or
jo
pop
mov
iret
mov
stos
push
jp
repz
loopne
lcall
pusha
jae
jno
lcall
xchg
daa
mov
mov
xchg
pop
popa
js
negb
lea
sub
fisubrl
movb
out
jle
aaa
jbe
push
fidivrl
mov
popl
dec
dec
pop
xchg
dec
fcmovbe
gs
push
and
ljmp
imul
rorb
mov
jne
mov
cld
loope
push
rolb
movsb
ss
push
aas
inc
andb
cmpsb
pop
mov
jns
pop
jge
mov
push
mov
xchg
icebp
cwtl
das
jne
gs
scas
outsl
flds
xor
sahf
jg
push
or
lea
push
movsb
in
jne
push
shll
les
dec
lock
mov
cmp
nop
jb,pn
mov
sarl
fdivl
dec
mov
xchg
sub
pop
icebp
lods
ja
aaa
clc
hlt
and
aad
ljmp
and
sub
jnp
mov
in
adc
rolb
jmp
js
hlt
dec
cmp
stc
sub
mov
push
inc
das
jne
xchg
xor
mov
int
push
sti
mov
push
insb
dec
mov
dec
ljmp
inc
loope
and
pusha
fistps
ds
push
add
pop
dec
xchg
sbbl
push
dec
pop
std
pop
sarb
lcall
ss
test
neg
xor
insl
jmp
scas
nop
pop
sbb
sub
shrl
push
int
sbb
mov
xchg
xchg
ja
adc
sub
push
test
aas
inc
or
and
into
lock
inc
fldl
in
in
sub
loope
cs
mov
in
sbb
add
es
scas
mov
pop
notl
jb
dec
fcompl
dec
test
sub
addr16
das
and
adc
cmp
adc
sub
mov
jmp
aad
ljmp
cmp
adcb
movsl
inc
es
les
sbb
popa
push
lock
and
jne
lock
adc
sbb
fnstsw
or
pop
aas
nop
xor
push
dec
mov
dec
loop
cmpsl
loope
filds
sbb
outsb
push
pop
aaa
cmp
ja
mov
push
mov
gs
test
or
mov
imul
add
in
push
mov
push
test
lods
or
add
dec
jnp
stos
insb
lds
in
ljmp
shll
popa
or
jp
cmpb
data16
pop
jb
pop
pop
inc
aaa
add
push
mov
fisubl
mov
ja
mov
fnstsw
repz
out
fwait
sub
fwait
inc
xchg
imul
and
std
cmp
pushf
out
sub
inc
aad
or
jecxz
xor
cmp
adc
xor
mov
dec
push
push
sub
and
xor
leave
in
mov
or
dec
pop
lret
gs
pop
iret
adc
insb
sbb
es
or
sbb
pop
jge
push
orb
out
pop
sbb
sbb
repnz
adcb
test
dec
sub
dec
add
lea
pop
dec
pop
movsb
jo
sub
les
jne
xchg
hlt
inc
in
insl
xchg
pusha
mov
into
adc
sub
imul
jo
xor
es
leave
std
mov
pop
loope
pop
mov
insl
xchg
cmp
out
loop
popa
fsubrs
nop
repz
pushf
repz
outsb
adcl
or
in
leave
punpcklbw
das
push
and
scas
pusha
sbb
sahf
and
data16
sbb
out
inc
lds
in
add
ds
cmp
xchg
xor
scas
xor
shll
jae
scas
dec
and
jmp
adc
lds
adc
outsl
pushf
mov
out
cld
mov
sbb
sub
inc
lret
push
inc
pop
testb
or
jp
insb
jo
js
lock
cmp
fnstsw
push
mov
jbe
inc
push
pop
pop
scas
aaa
xchg
dec
sub
xchg
outsl
lret
xchg
mov
ret
dec
pop
sub
mov
lahf
das
in
cltd
mov
icebp
stos
test
cwtl
jge
push
jmp
push
cwtl
sub
pop
lret
sub
xlat
xchg
lock
fldl
int3
int
push
push
mov
jle
movsb
insl
roll
cmc
fisubrl
inc
inc
jb
test
and
ffreep
pop
push
cmpsb
xchg
jle
das
add
mov
jle
je
push
and
pushf
push
outsl
js
fs
nop
std
mov
ficomps
inc
clc
push
leave
jmp
gs
add
shr
into
xchg
insl
cwtl
pusha
xchg
cwtl
popa
fidivl
push
sarl
push
fsubrs
hlt
dec
cmpsb
fistps
negb
xchg
lcall
popf
mov
bound
jae
ss
xchg
inc
jns
sub
fcoml
xor
xchg
or
outsl
hlt
orl
lods
jge
cmp
jle
cmc
sbb
mov
push
add
ret
scas
jnp
mov
dec
out
loop
sbb
jle
movsl
sbb
cmp
xchg
sbb
jo
rol
inc
push
das
push
mov
inc
inc
jecxz
sbb
push
cmc
fistl
jne
jg
lds
rorl
jne
stos
xchg
sub
mov
ror
je
xlat
xor
push
push
ret
out
iret
ja
repnz
jecxz
enter
push
shlb
sbb
and
rcrl
mov
cmpsl
cmp
pop
loope
or
mov
lahf
mov
aas
loopne
repz
mov
xchg
fwait
xchg
push
in
mov
add
ret
lds
ljmp
pop
cmp
lds
sub
scas
shr
lret
lds
mov
jb
push
icebp
test
es
adc
ficoml
pop
cmp
lods
scas
inc
sub
pusha
push
subl
pop
aam
in
out
out
sbb
adc
cwtl
nop
and
pop
cmpsb
das
nop
jecxz
push
pop
addl
pop
push
add
jbe
sub
stos
xor
pusha
dec
ja
imul
dec
andl
test
sbb
jbe,pt
xorb
jmp
in
lahf
adcl
fwait
scas
adc
in
andl
arpl
jmp
sub
jp
mov
out
mov
loope
xchg
sarl
repz
xor
les
pop
inc
or
rcrb
mov
inc
in
push
add
xor
jmp
cmpsb
cmpb
cmp
stos
fsubrl
movsl
pop
add
pop
mov
out
lock
add
pop
sbb
scas
adc
and
or
lahf
and
xchg
cmp
cltd
inc
shll
aam
inc
mov
xchg
out
mov
scas
mov
aas
xor
movntps
or
sub
push
xor
inc
xchg
js
out
loop
aad
push
push
add
movsb
xchg
push
xchg
jnp
sub
andl
mov
lods
sub
cmpsl
mov
popl
jae
mov
add
or
xor
rcl
rorl
ret
mov
fxtract
mov
in
sbb
insl
adc
ss
mov
push
ds
mov
insb
popf
sub
arpl
inc
call
xchg
ret
and
aad
push
rcrl
push
sbb
xor
addb
mov
sti
cmp
in
aas
add
insb
jl
sub
xor
sub
dec
test
xor
adc
rol
aas
nop
fldt
sub
pop
repz
or
lahf
mov
out
or
jb
pop
mov
cmp
call
adc
aas
xchg
jns
rclb
subb
hlt
arpl
jg
sbb
shr
jno
jno
loopne
test
jp
mov
add
xchg
dec
lahf
imul
into
mov
into
bound
push
add
imul
aad
jp
stos
fisubrs
pusha
adc
cmp
loope
pushl
test
mov
mov
into
add
pop
les
xchg
sbb
cmpsb
mov
jge
shl
rorl
sbb
movsb
out
ror
add
jnp
fildll
pop
mov
adc
arpl
mov
outsb
jge
jae
out
jl
imul
inc
jns
jns
and
rorb
fimull
imul
aam
adc
or
in
sbb
sbb
repnz
or
xchg
and
cltd
dec
sahf
push
sbb
cmpb
paddw
lret
out
shl
cmp
movsl
inc
pushf
pop
test
fistl
xor
inc
lcall
fisttpl
push
stos
xor
and
xchg
mov
pop
outsl
dec
out
stc
sbb
cwtl
sub
sub
repnz
dec
stc
fs
push
roll
jmp
inc
cmp
shrb
pop
xchg
scas
push
adc
sub
loop
xor
test
pop
call
sub
sub
rorb
into
jle
addr16
inc
and
adc
sub
push
ja
sar
call
mov
xor
mov
xchg
add
hlt
stc
or
fidivs
cmp
test
mov
inc
lahf
inc
dec
push
pop
insl
into
sbb
sbbb
repz
mov
pop
lods
js
mov
arpl
mov
push
mov
add
pop
test
dec
cmp
gs
in
or
pop
push
stc
push
repz
add
mov
add
push
mov
cmp
or
jmp
push
pop
push
sahf
lahf
mul
sub
or
mov
dec
fnstenv
cmp
lock
and
out
push
shrb
dec
fs
and
add
es
xor
jmp
arpl
leave
jno
stc
push
cmpsl
std
sub
sub
or
sbb
mov
shr
jge
xor
or
jmp
push
mov
sub
inc
pop
pop
add
pop
cmp
dec
fldenv
mov
pop
adc
iret
call
sbb
xchg
sub
lods
mov
scas
xchg
lock
mov
cli
mov
inc
movsl
dec
sbb
rolb
arpl
sbbl
or
mov
jo
or
push
scas
add
arpl
xchg
dec
lea
push
fdivrs
mov
jl
stos
sub
mov
pop
ret
lret
ret
lret
sbb
mov
push
dec
inc
push
inc
jno
in
sti
fcmovnbe
sub
sub
mov
add
in
sub
sbb
loop
lret
fwait
jge
mov
dec
push
stos
adc
sub
adc
enter
bound
pusha
mov
mov
push
or
xor
mov
idivb
add
add
push
cmp
mov
inc
mov
aad
in
subl
pop
mov
inc
mov
out
inc
inc
out
xchg
adc
and
mov
mov
out
out
leave
test
add
sbb
jae
pop
xchg
sbbb
jne
xor
push
dec
insb
add
adc
pusha
int
iret
scas
mov
shlb
sbb
mov
test
inc
cmp
xchg
fcmovnu
out
sbb
and
mov
sahf
fsubrs
jp
jle
adc
es
fwait
ljmp
pop
jnp
mov
push
sub
xchg
rclb
fdivrl
mov
imul
sbb
in
cmp
inc
cmp
pop
pop
gs
daa
loop
lods
pop
xchg
mov
aaa
lret
roll
hlt
dec
sub
scas
fstpl
inc
add
push
lret
loop
and
jecxz
test
and
fcmovnu
adcb
popf
xchg
scas
adc
xor
scas
inc
sub
out
lahf
push
scas
les
or
je
nop
fidivrs
jb
sahf
mov
data16
pop
pop
sub
pushf
sub
xor
adc
push
push
push
jae
mov
xchg
jg
adc
inc
repnz
pop
adc
mov
decl
sub
and
pop
pop
insb
dec
inc
xchg
paddb
inc
and
outsl
loopne
add
adcb
inc
push
dec
pop
push
into
cli
pusha
ret
flds
imul
lret
ret
shll
cwtl
dec
inc
out
xor
jge
dec
add
mov
rclb
mov
push
dec
rcrl
ret
mov
mov
xchg
jmp
xchg
cmp
int
push
out
fucomp
shrl
push
xchg
insl
roll
mov
dec
clc
push
add
xchg
cmc
repz
cmpsb
mull
aam
cmpsb
ds
scas
push
mov
test
shlb
push
rclb
jmp
hlt
pop
adc
in
cmpsb
ret
jo
in
pop
int3
enter
ss
sbb
shlb
adc
pop
sbb
aam
cmp
adc
mov
pusha
test
jp
sbbl
or
out
cmp
push
push
arpl
or
movsb
lods
adc
stos
pushf
cmpsl
nop
add
cmp
rol
pop
sbb
stos
outsl
testb
adc
ljmp
mov
in
push
fiaddl
mov
xchg
push
and
pushw
and
aas
inc
sahf
test
in
std
ja
jne
jle
pushf
arpl
ss
mul
xchg
rolb
xchg
push
xchg
mov
cmp
mov
push
dec
inc
inc
pop
mov
in
rolb
inc
adc
insl
cmp
jns
adc
std
leave
pop
mov
aas
rcrl
out
inc
pop
test
test
or
add
mov
lret
xchg
notb
in
and
and
lock
cli
sub
shl
xchg
lahf
jae
push
arpl
mov
add
mov
jnp
mov
mov
je
pop
fcomp
out
inc
arpl
hlt
cmc
fstl
inc
and
call
sbbl
xor
mov
mov
fisubrs
cmp
repz
lret
stc
push
in
xor
jp
pushf
push
sbb
out
sbb
cmp
cltd
mov
inc
mov
sbb
cmp
mov
ljmp
out
sbb
std
cmpsb
stos
scas
cltd
sub
pushf
mov
ljmp
adc
push
imul
sub
adc
int
fwait
mov
inc
push
addr16
push
mov
pop
fmuls
sahf
and
cmp
int3
xchg
xor
adc
cmp
out
out
int
pop
in
push
inc
jecxz
or
xchg
cli
mov
xor
push
test
push
mov
lret
add
test
out
push
sub
add
add
push
ret
push
xchg
xchg
push
mov
mov
jmp
mov
jge
cmpsb
lods
pop
jne
in
push
xor
lret
mov
push
mov
pop
imul
fisubs
xchg
sbb
hlt
adc
jp
fwait
stos
xor
add
xchg
add
cli
in
lods
push
jg
fcom
call
xor
mov
ja
sub
jecxz
push
int3
jo
push
mov
inc
push
dec
mov
mov
jg
nop
lock
pop
pop
mov
das
or
add
push
test
and
mov
pop
jmp
pop
adc
insb
stos
jge
int3
hlt
outsb
test
and
pop
xlat
orb
es
incb
pop
ret
lds
clc
ljmp
mov
or
leave
and
loope
and
fdivl
cmp
xor
pushf
add
outsl
mov
sarb
mov
imul
jns
mov
sbb
sub
push
xchg
inc
lea
inc
add
ret
push
aad
stc
sar
jne
leave
mov
mov
mov
sub
repnz
imul
cli
into
mov
mov
test
call
xor
jns
mov
out
cmp
rclb
iret
pop
in
dec
repnz
lods
mov
inc
add
adcb
ds
in
mov
jo
mov
mov
push
out
js
mov
hlt
call
aaa
xor
and
and
aaa
jle
fs
and
popf
mov
inc
mov
es
aad
fcmovne
mov
or
lcall
data16
jo
or
cmp
jmp
rorb
cmc
mov
mov
inc
pop
cmp
aam
lods
enter
out
pop
jge
dec
fwait
gs
ja
xor
dec
fwait
out
ret
sbb
lods
dec
scas
pop
aad
sub
adc
out
out
add
pop
fcmovb
push
add
mov
pop
and
pop
inc
lock
test
sti
sbb
pusha
mov
mov
or
icebp
push
out
cmpsb
mov
aaa
mov
addr16
test
dec
mov
aad
nop
pop
push
pop
add
jbe
mov
in
hlt
dec
xchg
add
imulb
lea
outsl
xor
inc
testb
jae
out
jmp
pop
sahf
repnz
mov
jno
mov
in
and
cmp
sarl
cmp
ss
aam
fs
add
push
mov
loopne
cmp
jl
lret
cmpsb
mov
xor
lods
inc
add
ljmp
adc
js
mov
hlt
out
pop
les
aas
mov
dec
cmp
popa
add
jns
lahf
cmc
sub
rolb
or
fcoml
lcall
inc
inc
stc
pop
int
adc
xor
stos
popa
sti
popf
xor
movsb
in
imul
aad
cmp
jb
out
mov
mov
iret
dec
fisubrs
jae
fcom
icebp
jb
cmp
inc
es
jg
cs
pop
es
fdivs
adc
and
pop
in
mov
cltd
cmc
cld
xor
xor
inc
ss
sbb
xchg
pop
push
xor
stc
arpl
cmp
outsb
insb
adc
push
loope
pop
fdivl
push
es
pop
inc
loop
je
inc
push
push
cmp
pop
xchg
dec
inc
std
sahf
movl
imul
fisubrs
aam
ljmp
int
xchg
or
js
cmp
fsts
imul
sub
cltd
mov
mov
in
fwait
xlat
cmp
das
jbe
jnp
scas
jle
inc
test
out
les
lcall
add
out
popf
jno
mov
mov
in
js
sub
jl
fsubrs
decl
adc
popa
cmovae
mov
add
fsts
sub
lods
mov
mov
fsubrp
rcr
add
and
push
push
roll
or
inc
add
mov
ljmp
gs
xlat
in
push
mov
cltd
xor
sbb
dec
gs
addr16
sub
xchg
mov
clc
inc
aam
sbb
adc
lods
enter
icebp
cmpsl
into
iret
mov
add
roll
sbb
mov
in
jle
btr
add
lea
adc
adc
incb
mov
adc
stos
mov
jp
mov
addr16
add
pop
xor
add
imul
outsb
mov
sbb
loopne
mov
call
hlt
mov
fs
cmp
dec
lods
lahf
lock
bound
hlt
xchg
ja
xchg
scas
cli
lock
pop
xchg
jns
sbb
arpl
sbb
adc
jo
mov
adc
loopne
jmp
jmp
pop
xchg
cli
pusha
jg
jge
push
jo
fdivr
jle
hlt
outsb
add
xchg
es
jbe
mov
outsb
test
dec
xchg
sub
push
jp
sub
insb
inc
daa
inc
xchg
add
xchg
adc
and
mov
push
cltd
stos
jmp
dec
jle
lock
pop
inc
sub
adc
adc
out
sbb
adc
sarl
inc
or
jecxz
roll
mov
lahf
out
sbb
xchg
dec
mov
push
gs
adc
aad
jp
out
mov
dec
and
inc
push
es
fisttpll
gs
cltd
cmp
add
sti
cltd
sar
daa
add
xor
mov
mov
shlb
and
cmp
fmul
and
stc
push
xor
shrb
mov
paddusb
xchg
pop
jl
bound
add
lea
mov
fcoms
andl
push
push
push
lcall
mov
nop
pop
sub
pop
sbb
gs
xor
iret
xchg
ror
push
ss
negb
and
daa
mov
add
jne
loope
in
lods
push
lcall
fdivl
pusha
sbb
and
rcll
imul
push
scas
fs
mov
test
xchg
adc
ret
test
imul
cmpsl
jge
hlt
stc
js
or
cs
ja
or
repnz
sahf
nop
jmp
adc
add
inc
add
add
inc
imul
sub
add
imul
cmp
sub
jecxz
dec
jb
pop
cld
jne
and
cs
jg
pop
outsl
jo
inc
or
popa
mov
outsb
mov
push
cmp
push
mov
or
fcoms
cmp
xchg
cvtps2pi
cmp
jp
int3
mov
cmpsb
loopne
cwtl
aad
insl
out
ret
dec
repnz
sbb
mov
xchg
addr16
out
push
aas
add
add
add
inc
repnz
cmp
int3
cmpsb
loopne
daa
insb
sbb
mov
sub
push
mov
call
cmp
sbb
frstor
int
loope
push
jge
aaa
and
inc
int
enter
and
mov
ds
pusha
inc
inc
das
int
pop
sbb
xchg
mov
jge
and
adc
xchg
pop
js
in
inc
ljmp
out
push
call
loopne
dec
dec
out
lods
pop
mov
xchg
adc
inc
dec
test
push
popf
insl
pop
mov
cmp
das
rclb
imul
stos
xchg
inc
aaa
inc
dec
xor
sahf
jo
dec
mov
cltd
adc
ja
mov
push
mov
mov
pop
mov
sub
cs
xor
xchg
xchg
fnsave
xchg
mov
or
lds
or
xchg
imul
xchg
push
pop
jbe
fwait
movsb
push
mov
dec
fisubl
sub
pop
sbbl
xor
int
fdivrs
sbb
negb
imul
push
sub
in
mov
adc
inc
mov
fwait
add
nop
and
test
mov
sbb
jp
pop
adc
cmpsl
loop
lcall
cmpsl
dec
jecxz
popf
pop
xchg
push
dec
lea
jl
subl
stos
es
leave
div
jg
xchg
rolb
hlt
cmpsl
out
sbb
jbe
out
out
or
sbb
cmpw
pop
push
aas
sbb
lahf
push
das
mov
je
out
jg
pop
and
jmp
dec
addr16
pop
cmpsb
jmp
push
ljmp
call
into
mov
ja
ja
pop
dec
jae
pop
and
test
repnz
xor
pop
popf
push
insb
adc
add
outsl
push
out
mov
es
cmp
ficomps
movsb
test
xor
xlat
inc
jmp
lea
mov
and
std
stos
pop
fldcw
lahf
pop
outsl
or
push
cmp
pop
mov
xor
dec
ret
jle
stos
xchg
lcall
fidivl
or
mov
mov
filds
mov
out
fsubl
pop
std
xchg
push
rcr
cli
cltd
fistl
xor
jge
fdivl
dec
mov
clc
rcr
add
cmp
in
xchg
imul
xor
fildll
xchg
add
in
stos
cld
adc
stos
mov
fldenv
inc
sub
adc
pop
lock
sahf
sahf
cmp
loop
js
pop
and
fs
imul
dec
movsb
add
lahf
in
shll
cmpsl
push
outsl
aas
icebp
adc
and
xorl
loopne
popf
ficoms
pop
adc
ds
arpl
mov
or
push
insl
cmp
xchg
sti
test
adc
fidivs
mov
pushf
or
adc
imul
std
cmp
push
daa
adc
in
jmp
inc
add
dec
xchg
test
jp
fcos
imul
push
test
loope
testl
std
cmpsb
dec
adc
or
jge
jle
push
in
jne
fdiv
pop
mov
pop
insl
gs
mov
inc
ret
xchg
aas
and
js
loop
lahf
stos
loopne
mov
ja
fcmove
lock
push
in
rclb
test
and
in
pushf
xor
mov
ss
or
sub
aaa
int
in
add
arpl
pop
pop
popf
das
pop
fwait
sub
mov
jae
inc
pop
inc
jne
jmp
mov
data16
outsb
into
idiv
shll
add
cmp
rol
and
out
leave
stos
je
adc
lock
ljmp
pop
scas
lcall
bswap
dec
pop
lcall
flds
fstpt
inc
sbb
add
cmpsl
pop
sti
add
call
in
out
dec
jge
xchg
pop
xchg
sub
xchg
add
lcall
jmp
jbe
pop
cmpsb
and
jmp
nop
data16
scas
inc
shlb
and
frndint
cmc
dec
lea
loopne
mov
xor
data16
dec
fwait
outsb
test
mov
enter
fistpll
test
adc
jne
insb
mov
loope
out
xor
out
and
mov
call
jns
rolb
pop
inc
into
cmpl
imul
addb
movb
push
xchg
mov
cmc
lods
and
push
or
arpl
or
sbb
push
ss
iret
nop
mov
or
loop
je
iret
xchg
rcl
pop
hlt
movsb
bnd
in
xlat
out
and
inc
pop
aad
sbb
imul
mov
imul
rolb
nop
sbb
mov
lods
test
xchg
push
int
dec
insb
jb
or
jmp
in
sar
push
popf
cmp
pushf
arpl
fisttps
jne
xchg
jl
jne
sbb
xchg
xchg
enter
mov
icebp
mov
test
lds
popf
stos
popf
lahf
jecxz
or
nop
mov
xchg
mov
lmsw
xchg
sbbb
lret
or
sbb
mov
enter
xcrypt-ecb
cmpsl
mov
jo
add
jg
addl
sbb
aad
sub
pushf
jo
ret
or
aas
mov
mov
repz
popa
lock
lods
imul
fimuls
iret
es
scas
std
mov
movsb
add
popa
pop
or
jne
xor
cld
dec
mov
or
cs
fdivl
mov
decl
and
cmp
shrb
inc
xor
bound
lock
sti
cli
cmove
test
rcrb
out
aaa
inc
push
movsl
mov
mov
cltd
test
jbe
add
lock
out
nop
push
push
fxch
setne
sub
xchg
aam
mov
rcrl
fisubl
dec
pop
mov
js
std
jmp
out
repnz
cmc
leave
pop
pop
fsubrp
jno
add
jecxz
sarb
je
jb
adc
je
mov
mov
pop
icebp
aaa
lcall
jge
outsl
jno
mov
jge
lret
sub
mov
mov
fidivrs
dec
xabort
stos
push
and
xchg
addr16
xlat
sbb
or
dec
cmc
inc
sub
push
ret
sbb
inc
xor
lret
cmp
mov
add
daa
sub
push
pop
mov
mov
mov
push
roll
pop
ja
pop
insb
or
movsl
and
push
leave
mov
outsl
rolb
scas
jg
dec
jae
dec
mov
pop
lret
mov
mov
cmp
xor
ficompl
cmp
pop
aam
mov
sub
shlb
sbb
xor
jns
int
xor
mov
adc
roll
fwait
pop
pop
xor
inc
cmp
movsl
xchg
sub
lods
pushf
jmp
pop
lods
int3
add
cs
dec
div
add
pop
in
enter
mov
and
jge
lock
sarb
ljmp
xchg
push
push
xchg
fldl
fnstenv
sahf
pop
mov
test
call
xor
or
xor
xor
cld
dec
sbb
mov
mov
repz
pushf
pop
cmp
cmp
push
dec
pop
lcall
sub
into
incl
int
je
cmp
push
jg
push
lods
movsb
loop
mov
mov
push
stos
xor
inc
std
jne
mov
movsb
mov
test
pop
cs
sar
pop
out
sbb
mov
push
or
lahf
jmp
sub
mov
pushw
jge
inc
inc
push
inc
mov
sbb
cmp
insl
sub
loopne
adc
enter
xchg
sbb
cmpsb
imul
cmpsb
mulb
cltd
scas
test
jg
scas
sub
or
shlb
loop
adc
add
jnp
jnp
mov
aad
imul
cmp
push
mov
out
das
adc
fsts
stos
pop
mov
nop
insb
xchg
ret
lock
les
jne
jecxz
dec
pop
inc
insl
jne
lret
leave
pop
arpl
sub
cmp
loope
mov
and
test
imul
cmp
mul
int
ret
cmpsb
mov
test
iret
in
sbb
jo
test
xor
fdivp
dec
mov
aas
enter
mov
fisttps
sbb
cwtl
lea
add
int3
sub
adcb
test
mov
mov
and
cmp
scas
data16
dec
popa
loopne
cmpsl
sbb
stos
pop
jae
sbb
pop
repnz
aaa
outsl
jmp
xchg
call
adc
sbb
scas
inc
push
xchg
cmp
mov
mov
cmp
dec
aaa
in
insb
pop
rcrb
and
fisubrs
pop
bound
dec
mov
shlb
mov
push
cltd
jle
rclb
inc
imul
mov
inc
mov
outsl
or
mov
pop
nop
mov
push
add
imull
dec
orb
loop
mov
inc
std
mov
push
aaa
jle
stos
lcall
jb
jge
sahf
cmp
outsl
add
or
fstpl
out
xchg
inc
xorb
es
subl
pushf
call
fbstp
int
push
sub
mov
fistl
push
in
jl
scas
add
fistpl
mov
imul
xchg
dec
nop
ret
ljmp
adc
inc
inc
imul
xor
push
jbe
adc
jbe
imul
fadd
or
ds
and
rcl
push
xchg
jecxz
int
dec
dec
pop
sub
push
mov
xor
mov
into
mov
and
add
pop
call
push
stc
mov
add
cmpsl
mov
push
les
pop
jl
inc
xlat
arpl
lods
push
or
ret
test
int
add
mov
push
gs
sahf
repz
fistl
add
repz
adc
fdivr
jno
push
aad
mov
jo
ret
mov
jnp
push
dec
jg
mov
ljmp
xchg
fmull
aad
inc
cs
jne
mov
fwait
imul
cwtl
jecxz
int3
push
arpl
cli
lods
and
or
inc
sbb
fcmovb
pop
lds
push
sub
fdivs
xchg
jl
rcrb
jae
push
add
stc
jg
jae
dec
fwait
adc
scas
cmpsl
cmp
push
imull
ret
sub
aas
popa
push
cltd
jae
mov
pusha
cmp
jbe
push
pusha
xorl
add
mov
outsb
dec
inc
rcrl
in
pop
sbb
mov
imul
imul
or
cmpsl
push
pop
sbb
inc
adc
inc
in
adc
xor
push
pop
scas
movsl
stos
or
adc
insb
scas
jecxz
dec
or
mov
mov
sahf
js
lret
pop
cltd
jns
sbb
jmp
das
cmp
aaa
sbb
jecxz
inc
test
cld
pop
das
pusha
jp
pop
movsb
mov
lea
push
mov
jno
es
repz
gs
jbe
or
outsb
mov
pop
je
mov
test
cwtl
inc
fmull
shl
int
into
leave
xchg
jecxz
add
roll
adc
mov
and
or
dec
js
cmpsl
mov
xorl
cmc
sub
xor
rcr
xlat
sub
pop
aad
push
mov
nop
js
insl
jl
cltd
cmp
mov
or
adc
nop
sbb
fildll
sarb
dec
rcrl
add
mov
jne
rcll
cld
dec
je
xchg
cmp
in
std
mov
cmpsb
nop
imulb
xor
pop
xchg
test
call
test
jmp
addb
mov
sub
jecxz
inc
add
add
pushf
dec
mov
shl
aam
jl
lds
pop
mov
fsts
mov
insl
sub
jmp
lods
mov
jg
adc
imul
mov
add
clc
xlat
jp
fstps
sbb
adc
jl
sbb
xchg
and
daa
mov
pop
add
lret
call
pop
lcall
scas
mov
or
std
mov
cmp
push
adc
call
or
dec
out
push
test
pop
roll
push
mov
ja
jge
sbbb
lods
mov
inc
mov
pop
cmp
xchg
mov
repnz
push
add
icebp
xchg
test
mov
push
notl
sti
mov
fwait
mov
ja
scas
out
movsl
mov
adc
or
push
nop
lcall
cmp
mov
mov
dec
push
add
jne
addb
out
xchg
test
push
fstps
and
scas
cmp
cmp
es
loope
lcall
pop
xchg
fdivl
mov
in
icebp
lods
aad
push
loopne
xor
and
call
in
fadd
or
outsb
sbb
dec
pop
add
movsl
push
out
jmp
mov
inc
aad
push
push
cltd
pop
pop
jg
imul
inc
inc
loope
pop
je
lock
pop
movsb
mov
mov
aaa
jbe
add
jmp
dec
push
fs
add
cmp
dec
and
int3
stc
je
fidivs
je
pop
ljmp
push
push
push
lock
popf
lods
push
and
and
aam
daa
xchg
xor
xchg
lret
sbbl
test
mov
dec
icebp
imul
push
stos
and
addr16
movsl
scas
push
mov
inc
ret
push
iret
cmp
mov
mov
cwtl
mov
movsb
andl
jmp
cli
mov
push
divl
or
mov
andb
ret
js
mov
aam
jg
push
jno
xlat
ljmp
in
loope
stos
push
pop
enter
and
insl
cli
dec
dec
loop
scas
icebp
pop
scas
es
lahf
into
inc
mov
mov
mov
push
std
mov
sub
cmp
fsts
lea
insb
and
xchg
into
test
dec
ret
test
mov
repnz
loop
rorb
idivl
iret
inc
stos
movsl
sbb
rcrb
mov
negl
orb
out
loope
stc
and
test
cmpsl
jg
xchg
xchg
add
shrl
mov
mov
fsubrp
cmpsl
scas
push
int
incb
and
jg
xor
fnstenv
lods
cltd
fstpl
out
arpl
dec
pop
add
dec
xor
push
jns
out
xchg
aad
daa
sbb
mov
sbb
mov
sbb
fdivrl
adc
mov
add
or
pop
xlat
jno
mov
popf
insb
push
sub
jmp
xlat
jbe
mov
jns
popa
mov
mov
xor
and
arpl
and
cmc
jmp
inc
xchg
lret
mov
lds
lret
popa
cli
inc
aaa
add
arpl
idivb
ss
test
mov
ret
out
and
adc
iret
mov
jnp
lock
xor
push
cmc
add
pop
aam
cmp
mov
jo
scas
outsl
ja
mov
and
sahf
mov
or
push
stos
sahf
mov
stc
sbb
sbb
pop
add
cmc
adc
pop
xchg
or
jns
lods
jl
cmp
enter
pop
or
dec
push
mov
nop
daa
mov
sub
out
sub
movsb
jecxz
push
inc
inc
lret
stos
dec
pop
enter
xor
push
in
adc
or
xchg
fiadds
movsl
js
loope
jne
inc
pop
push
push
aas
or
mov
jae
mov
aad
cmp
jno
cmp
aam
push
out
popa
inc
rorb
xchg
sub
sbb
aaa
das
outsb
cmpsb
mov
inc
jmp
aam
xor
mov
fsts
adc
lret
shll
inc
xor
sub
int
imul
jecxz
jp
cmp
inc
sbbl
jb
cmp
cld
sti
sub
cmp
int
stos
jg
fcmovnbe
js
dec
pop
es
in
xlat
mov
testl
adc
jl
repz
mov
dec
pop
mov
jb
dec
xchg
jle
mov
dec
pushf
stos
insb
stos
pop
mov
jb
jae
lret
lret
adc
in
sub
mov
push
sahf
and
sarb
popf
shlb
cwtl
and
dec
rcl
jecxz
es
dec
cli
testl
mov
insl
cmc
mov
cmp
mov
ret
ljmp
mov
inc
adc
fidivrs
pop
fs
xchg
sbb
sbb
adc
testb
not
sub
xchg
testl
xor
rolb
mov
xor
xchg
lahf
fdivp
dec
movsl
aad
cltd
popa
gs
jns
mov
pop
lock
lods
notl
xchg
int3
repnz
fstpt
xchg
or
jmp
ljmp
fimuls
inc
int
inc
push
out
repnz
lods
mov
pop
pop
jo
mov
cwtl
mov
imul
sbb
mov
in
jle
or
sub
ds
lds
mov
hlt
mov
or
mov
push
aas
icebp
mov
cmp
aam
and
push
xchg
sub
mov
xchg
cmpsb
movsl
je
and
xlat
lods
notb
iret
adc
dec
inc
inc
jo
imul
add
ljmp
push
clc
jecxz
sub
in
pop
xchg
pop
pop
fst
adc
dec
inc
outsl
icebp
lods
iret
push
push
sbb
test
jmp
ja
loop
pop
hlt
arpl
push
jno
fadds
ljmp
cmp
movsl
leave
pop
pop
dec
out
int3
cli
inc
imul
pop
push
xchg
pop
push
sbb
loope
xchg
in
xor
mov
mov
scas
outsb
leave
lcall
insl
mov
paddb
movsb
dec
shll
movsb
push
jb
ret
xchg
fbstp
fisubrs
cs
push
mov
mov
adcl
mov
adc
stos
mov
mov
xchg
pop
loop
pushl
pop
dec
aam
cmpl
sar
xchg
lcall
enter
cmp
pushf
sub
sub
imul
popa
sbb
cmp
xchg
pop
cmc
and
shlb
test
js
repz
lcall
lret
inc
fdiv
leave
ja
pop
in
jl
test
pop
fisttps
pop
inc
arpl
imull
test
dec
sbb
cmp
mov
pusha
xor
adc
aam
sbb
bound
pop
jle
xchg
add
lcall
out
jp
push
push
jno
xadd
lea
xchg
sbb
lret
push
ljmp
pop
sbbb
or
jno
arpl
arpl
jbe
loope
jecxz
push
or
mov
loope
dec
pop
push
test
fisttpl
imul
ficoml
movsl
cmpb
pop
stos
gs
imul
pop
adc
sbb
pop
lcall
sbb
pop
outsb
inc
imul
push
xchg
fbld
mov
ror
inc
sbb
lcall
rol
cmpl
lahf
int3
pop
pop
and
xchg
cltd
sbb
adc
cmp
mov
fwait
pop
fwait
dec
and
lret
cmp
or
lds
and
cs
mov
xchg
push
cmp
movsl
push
fildll
test
pop
push
addr16
pushf
dec
xchg
xchg
and
repnz
inc
out
bound
or
mov
shl
pop
or
ret
xchg
dec
pop
ja
ret
fstl
mov
cwtl
popf
sub
cltd
jl
xchg
xor
fwait
leave
xor
repz
lret
jne
xchg
rol
loop
jl
addb
jnp
aaa
push
pushf
mov
jo
ds
fdivl
scas
pushf
lock
shll
cli
xor
shl
je
jne
dec
jg
mov
xor
ret
pushf
cmp
fstpt
adc
mov
out
scas
inc
daa
push
and
imul
outsl
jns
fdivrp
jno
sub
outsb
lods
pop
lock
repz
int3
xor
adc
daa
arpl
hlt
sub
stos
pop
mov
inc
aad
das
into
cmpsb
loop
xor
push
std
add
sahf
test
jge
out
add
mov
push
xlat
and
cmp
jno
jo
mov
mov
or
inc
sbb
test
pop
dec
insl
fmull
jl
or
test
inc
xchg
aas
loopne
mov
pop
repnz
jno
data16
scas
or
xchg
mov
sbb
out
fists
popa
loop
mov
addr16
push
lock
nop
sbb
roll
jns
dec
and
dec
sub
inc
push
in
pushf
push
mov
in
jno
xor
sahf
out
or
mov
mov
leave
fwait
lods
in
std
test
loop
mov
ss
imul
push
adc
ffreep
cmp
nop
into
mov
jmp
add
repnz
out
iret
fstpt
mov
addr16
pop
mov
mov
xor
stc
fisubs
in
js
outsb
adc
sbb
sbb
loope
incb
push
in
inc
xchg
out
or
jg
mov
popf
stos
aas
lret
xchg
pushf
push
lcall
jge
clc
jmp
movsb
fiadds
aas
lock
sbb
cli
inc
push
jmp
xchg
rol
bound
repz
iret
lcall
lods
mov
pop
inc
imull
and
adc
mov
std
xchg
jecxz
inc
scas
lret
das
mov
xchg
lods
mov
sbb
push
stos
aad
dec
mov
fists
xor
inc
xchg
nop
push
imul
cwtl
mov
xchg
and
and
leave
rcll
lcall
inc
test
adc
aam
cld
test
add
ja
ret
stc
fisttpl
push
jne
test
xor
mov
popa
xchg
ds
push
mov
shrl
dec
or
scas
outsl
das
and
sub
test
inc
test
add
xchg
dec
mov
scas
pop
push
scas
xor
dec
adc
push
adc
loop
push
push
outsb
mov
test
and
sbb
lea
adc
mov
pop
pop
test
lret
jg
les
mov
cmpb
stc
push
loop
xchg
jp
outsl
push
test
jle
xchg
ss
mov
pop
sbb
push
ja
filds
mov
sub
stos
mov
xchg
js
cmpsl
sub
insl
out
push
lahf
push
sbb
sbb
nop
sahf
sbb
hlt
movsb
popf
add
test
nop
pop
adcl
xchg
mov
outsl
inc
sub
mov
xchg
mov
xor
push
push
stc
in
push
out
data16
pop
dec
repz
adc
test
xchg
xor
cmpsb
data16
jg
inc
fdivl
pop
push
cmpsb
pop
lock
mov
das
mov
lea
and
insb
mov
stc
jmp
mov
add
popf
sbb
mov
imulb
cmp
sbb
leave
enter
shrl
push
adc
mov
iret
lds
push
mov
adc
nop
push
xchg
scas
sub
fdiv
arpl
pop
lcall
push
push
in
loopne
dec
cmpsl
jns
lods
adc
jbe
cmp
inc
fldl
dec
mov
mov
cmp
mov
int3
xchg
inc
out
imul
mov
stos
lods
sub
cmpsb
mov
adc
test
xchg
arpl
add
pop
test
xchg
cs
push
push
out
jbe
bound
adcb
outsl
bnd
in
inc
movsl
cmp
cmp
addb
gs
push
xchg
lock
mov
test
ret
or
out
outsb
mov
cmp
cmp
mov
mov
jle
mov
push
sbb
inc
add
stos
jle
sub
add
int
dec
pushf
mov
pop
jne
pop
arpl
jne
pop
stc
dec
fists
lock
push
xorb
mov
add
ljmp
pusha
in
jmp
aad
arpl
and
push
pop
mov
cmpsb
fmull
out
and
int
loop
pop
dec
inc
push
xorl
mov
sbb
in
mov
mov
jp
pop
pop
cwtl
pop
call
xchg
lds
xchg
subl
or
in
mov
adc
into
pop
ficoml
mov
repnz
sbb
aam
cmpsb
cmpsl
out
xor
xchg
push
in
xor
push
fmuls
js
mov
and
dec
stos
fistps
mov
inc
add
xchg
jp
aam
cwtl
imul
fstpl
and
add
sbbb
adc
lock
fsts
mov
divb
xchg
jle
xor
or
and
dec
push
cmp
mov
leave
gs
mov
pop
hlt
mov
xbegin
jbe
test
jmp
inc
cmpsb
inc
xor
or
sub
ljmp
call
adc
mov
mov
sbb
push
nop
aam
pop
lret
inc
fimuls
insl
dec
push
cmp
inc
loope
hlt
or
pop
or
pop
std
out
push
pop
and
icebp
arpl
lret
inc
test
clc
mov
int
dec
pusha
testb
and
and
mov
stos
adc
out
cmp
push
xlat
mov
mov
push
pop
push
jbe
xor
popf
jo
cld
fwait
les
jne
jnp
jbe
and
push
mov
shlb
or
or
mov
cmp
sub
and
mov
jno
push
test
mov
adc
loop
hlt
ficomps
and
inc
fs
or
arpl
stos
loop
mov
cmpsl
lods
dec
mov
push
out
push
je
mov
mov
scas
cmp
or
std
les
enter
mov
shlb
test
sahf
add
psubusw
mov
addl
or
insl
gs
loopne
scas
or
inc
adc
mov
adc
neg
cld
jge
lret
inc
cmpsb
xchg
mov
dec
fstl
push
std
sarb
mov
xor
mov
fwait
data16
mov
mov
push
xor
ja
mov
rcll
inc
lret
mov
imulb
fpatan
and
loopne
ficomps
int3
loop
aad
mov
ret
cs
push
and
sub
push
mov
dec
lock
aad
out
cmp
cmc
loope
mov
mov
jle
ja
mov
les
dec
pop
les
and
mov
jg
push
rcrb
add
insb
inc
add
aaa
inc
add
push
test
pop
insl
push
and
fiadds
daa
stos
fcomi
imull
sub
hlt
xor
inc
cmp
push
push
nop
fidivs
repnz
add
mov
sub
dec
aaa
dec
stos
inc
addr16
adc
bound
psubq
ljmp
inc
out
in
push
dec
xchg
test
adc
or
mov
pop
clc
sarb
mov
cmp
out
jmp
arpl
mov
call
sub
xlat
mov
sub
pop
test
pop
ret
cld
mov
fisttps
int3
xchg
xor
add
and
mov
xor
iret
add
insb
je
sti
sbb
push
mov
stos
sbb
fdivrp
jp
inc
xor
gs
imul
sarl
push
clc
adc
jb
call
pop
pushf
mov
daa
xchg
dec
add
or
xchg
int3
cmp
add
adc
mov
mov
adc
fs
jb
int3
stc
xor
stos
jle
fwait
andb
mov
jb
jbe
jmp
lods
les
mov
mov
jecxz
sbb
je
cld
cltd
into
or
push
shrb
out
fs
xlat
xor
out
fs
add
cmc
lret
mov
push
ret
xchg
pop
scas
in
movsl
cmp
test
push
and
cld
rcrl
loop
jne
or
movsb
outsb
int3
pop
int
fdivrl
in
rorl
ljmp
fisubs
cmp
shlb
xchg
jae
rorl
mov
shll
dec
mov
mov
int3
stc
jg
pop
hlt
stos
js
stos
and
lret
mov
and
xchg
in
subb
or
ds
xchg
push
lret
lock
and
scas
add
das
adc
adc
dec
imul
arpl
adc
adc
jnp
adc
iret
hlt
mov
xchg
xchg
test
dec
push
mov
jle
sti
addr16
mul
call
push
lahf
jne
pop
pop
sbb
leave
push
repz
nop
inc
into
sub
xlat
mov
or
sbb
imul
mov
popa
aam
out
jnp
arpl
sub
scas
stos
pop
stos
push
lcall
push
mov
pop
jecxz
fmull
nop
xchg
lds
mov
stos
adc
cs
inc
inc
aaa
jecxz
rorl
out
out
cmp
mov
inc
jg
mov
and
hlt
fimuls
cltd
ficomps
pop
dec
xchg
icebp
pop
mov
xor
dec
fisubrs
rorl
pop
mov
lods
hlt
jp
mov
aad
test
bnd
adc
pop
les
ja
push
jb
inc
lret
adc
rcrl
jmp
mov
out
popf
cmp
cld
mov
cmp
push
sub
xchg
add
icebp
arpl
sbb
test
orl
inc
and
xor
lret
neg
mov
push
mov
mov
sub
scas
sahf
xlat
adc
clc
das
iret
test
int
xor
outsl
aas
stc
movsl
out
insl
mov
jbe
add
dec
mov
gs
and
movsl
mov
in
lds
test
jge
adc
mov
dec
sub
and
hlt
in
dec
insl
mov
inc
mov
cmp
xchg
mov
add
ret
or
clc
faddl
mov
mov
es
scas
push
mov
repz
negb
nop
mov
outsl
pop
push
adc
lock
les
push
xor
call
in
sbb
push
pop
sub
dec
repnz
cmp
les
sub
cmpsl
add
jbe
insb
insb
xchg
test
stos
xlat
sahf
jmp
data16
pusha
test
jbe
lock
pop
sbb
xor
xchg
xor
hlt
sub
sub
mov
xchg
aaa
inc
jmp
out
pop
bound
into
lock
push
lock
jl
add
in
xor
call
or
sub
popf
mov
cmp
jl
pop
dec
ljmp
shr
xchg
xor
jmp
lods
mov
pop
outsb
pop
bound
or
aad
or
xchg
daa
push
fstps
jg
hlt
cmp
cmp
jg
sub
sbbb
mov
xchg
cld
jmp
and
bswap
cmp
xor
and
and
mov
mov
lahf
inc
ljmp
mov
add
lea
ret
jo
fsubr
mov
and
push
ljmp
movsl
xchg
push
xor
jp
scas
fwait
xchg
sbb
shlb
sub
add
sub
shrl
sahf
stos
inc
mov
in
adc
clc
test
mov
sbb
mov
xchg
xchg
data16
hlt
shlb
mov
sub
xor
lock
jmp
cld
adc
add
jmp
mov
outsl
pop
sbb
outsl
push
sub
mov
dec
repz
cli
pusha
test
shlb
test
inc
insb
sub
jl
pushl
lret
arpl
inc
sahf
or
lea
push
test
add
xchg
or
xlat
inc
mov
aas
jbe
or
and
and
push
pop
add
jp
add
push
jnp
push
int3
mov
cmpsb
mov
lret
pop
fimull
cld
xchg
pusha
push
or
cmp
mov
and
push
pop
inc
out
mov
dec
leave
xor
in
and
mov
repz
cltd
bnd
cmp
test
mov
sbb
lcall
adc
lock
stc
pop
adc
jmp
dec
fs
gs
jle
adc
mov
lods
and
xchg
je
jno
lds
loope
pop
into
adc
stc
cmc
dec
jbe
call
lea
mov
in
out
mov
push
add
aad
insb
cld
jmp
push
test
aas
notl
out
pop
popf
cld
pop
out
mov
sbb
inc
cs
add
repz
sub
jae
cld
cmp
jb
movsl
or
lcall
and
push
dec
lock
test
xchg
clc
jp
add
imul
iret
movsb
repz
xor
or
push
fucom
xorb
les
ret
xchg
fstl
fiaddl
xor
jae
mov
jne
jmp
cmp
in
jmp
sti
mov
or
add
stos
bound
mov
int3
clc
shlb
mov
sarb
mov
enter
inc
inc
fimull
sub
int
cmp
jle
outsb
xchg
aaa
push
xchg
enter
pop
hlt
xchg
cmpsl
aam
inc
lret
push
adc
aam
movsb
leave
shlb
mov
hlt
xchg
mov
push
daa
leave
icebp
sub
in
mov
xor
cmc
test
mov
jne
ror
lds
scas
mov
js
push
xchg
scas
xchg
rcrl
enter
inc
out
and
push
sub
push
arpl
in
mov
pop
sub
arpl
outsl
dec
call
data16
sub
mov
mov
push
mov
cmp
mov
shr
outsb
cmc
pop
pop
hlt
ret
repnz
inc
jb
in
js
lods
into
xchg
xor
and
pop
sbb
repz
pop
fwait
push
push
cmp
cwtl
xor
fs
sahf
aas
lods
insb
fucomip
or
icebp
mov
addb
adc
mov
sbb
fsubl
clc
push
lock
and
out
sahf
cmp
icebp
push
xor
enter
test
mov
or
out
cwtl
and
xchg
loop
lret
idivb
sbb
mov
pop
inc
addb
lcall
push
mov
and
cmpsb
mov
lods
shll
or
lock
push
push
add
jmp
xor
xchg
fcomi
stc
add
in
push
jle
arpl
daa
cld
inc
cli
adc
pop
cmpb
stos
pushf
pop
scas
fsubs
dec
pop
into
jge
sub
cltd
xlat
mov
fcomps
scas
or
mov
loopne
nop
mov
cli
mov
mov
cli
mov
in
adc
dec
xchg
ljmp
push
test
push
dec
pop
inc
dec
inc
fidivs
dec
or
rcll
xor
enter
imul
dec
cmpsl
inc
pop
cmc
and
mov
push
adc
arpl
repnz
notb
push
pop
iret
fstpt
pop
repz
push
scas
add
daa
xchg
icebp
fdivrl
jge
mov
out
cmp
or
cmpsb
mov
jne
out
jmp
or
pop
mov
pusha
popf
das
flds
sbb
mov
adc
outsl
ror
insb
mov
push
stos
mov
data16
icebp
cmp
je
movsb
fs
jo
or
int3
shrl
lahf
jmp
push
scas
out
and
push
roll
repz
cmpsl
inc
insb
sahf
sbb
dec
push
jmp
jne
clc
shll
mov
xor
sub
cmc
out
pop
loope
pop
shr
pop
push
mov
fs
daa
cs
dec
mov
push
jge
flds
xchg
push
daa
enter
aad
and
jb
ja
cld
das
popf
mov
sbb
add
cltd
inc
xor
lds
mov
add
dec
mov
mov
add
adc
cmpsb
ret
lcall
movsl
xchg
call
lds
push
ja
push
mov
aas
les
jmp
filds
insl
sub
daa
das
je
mov
push
or
or
and
adc
adc
fbstp
add
cmp
mov
inc
nop
out
lds
jo
stos
pop
pop
test
and
idivb
inc
mov
xor
divl
out
adc
jle
js
mov
mov
in
mov
lret
daa
mov
lahf
les
xchg
out
clc
adc
xor
and
in
mov
leave
pop
testl
fidivrl
pop
mov
aaa
inc
aam
pop
jecxz
test
mov
insl
ja
popf
sbb
adc
pop
scas
xchg
inc
aad
jmp
add
std
xor
jb
vmread
cmp
or
inc
repnz
adc
scas
dec
add
insb
cmp
dec
sub
aaa
adc
lret
adc
imul
mov
ljmp
rcrb
mov
dec
cmc
repz
ds
sub
pop
fs
call
xor
and
dec
orb
lahf
mov
sub
fs
cli
bndldx
add
das
jnp
inc
popa
jecxz
or
xor
cmp
xor
imul
push
pop
int
inc
dec
sub
mov
das
negb
fsts
lret
cwtl
xor
out
jns
xlat
test
jle
nop
call
add
push
dec
sub
dec
or
jmp
add
or
cmpsb
scas
lods
mov
add
mov
lods
push
cmp
ret
pop
std
sbb
dec
aad
dec
push
pop
mov
ret
sbb
xlat
jno
or
jmp
sub
out
pop
dec
stos
inc
outsb
divl
pushf
sbb
sbb
lods
inc
ret
mov
ljmp
push
movsl
push
hlt
push
decl
popa
mov
mov
bnd
mov
or
push
jne
bound
lods
mov
lcall
repnz
add
into
hlt
adc
repz
mov
adc
pop
aaa
adc
mov
fcompl
iret
pop
dec
out
aam
and
sub
fists
dec
push
cli
push
pop
std
cmp
rorl
sbb
inc
out
xchg
jmp
add
xchg
and
cmc
cli
mov
mov
xor
fstl
movntps
sub
xchg
nop
enter
mov
shlb
push
push
and
adc
jg
subb
or
xchg
jg,pt
loope
negb
daa
outsb
xchg
dec
sub
fisubrl
stos
mov
sub
xor
lret
insb
ret
mov
mov
imul
inc
inc
gs
cmp
lods
sbb
xchg
lcall
xor
scas
test
sub
sub
in
jb
stos
cmp
iret
daa
fwait
std
insb
pushf
lods
cld
aam
ret
cld
cmpsb
jecxz
cmpsl
bound
xor
xor
adc
addr16
movsl
rcr
ljmp
cmpsb
dec
aaa
fmul
leave
test
popa
xchg
inc
clc
xchg
ss
leave
pusha
push
dec
lock
lret
mov
dec
andl
mov
pop
inc
rcrb
fmuls
or
fisubrl
ljmp
dec
addr16
in
roll
fdivs
mov
jb
mov
sbb
and
inc
xlat
add
add
js
imul
jmp
or
int3
push
mov
inc
daa
pusha
pop
test
jg,pn
insb
insb
pop
mov
mov
sbb
mov
sti
xlat
or
aam
mov
das
push
sub
pop
push
mov
pop
mov
inc
xor
push
xor
outsb
inc
jno
shll
das
sub
icebp
inc
cli
outsb
mov
inc
push
push
cld
xor
nop/reserved
ds
cmp
or
cmp
scas
xchg
scas
mov
xor
out
cmp
sbb
jae
push
test
nop
mov
xchg
les
jle
test
inc
push
adc
inc
mov
arpl
das
notb
lods
adc
ds
lret
push
push
cmp
xor
orb
and
leave
fistpl
popa
and
dec
pop
cmpl
lret
ret
jb,pt
out
mov
movsl
xor
sar
movsb
mov
jns
mov
std
testl
and
push
pop
push
mov
sti
rcll
fadd
movsl
xchg
lret
sub
xchg
xchg
cmc
xor
mov
or
cwtl
shll
cld
xchg
pop
andl
call
push
jecxz
int
fsubrl
jecxz
pusha
ds
data16
adc
addr16
xchg
lock
rorb
push
mov
jge
stos
sti
mov
loope
imul
gs
push
popf
loop
inc
mov
dec
faddp
rolb
cmp
fwait
sub
cltd
push
cmp
pop
pop
cmp
mov
adc
ret
push
ret
push
jge
cmpsb
sbb
cmp
insl
stos
add
jl
cmpl
jg
adc
jns
mov
cmc
cmp
mov
xchg
cli
fiaddl
jne
fsub
sub
inc
or
push
test
jne
mov
lret
test
cltd
ja
enter
js
pop
nop
push
mov
lods
das
pop
shlb
shll
iret
add
adc
add
or
inc
xchg
ja,pn
ja
movsb
dec
xchg
cmp
mov
ljmp
ss
lret
js
inc
je
adc
pop
clc
lods
lret
push
pop
jnp
out
inc
cltd
hlt
fs
stos
aam
jb
jmp
neg
xor
aad
xor
xchg
mov
out
push
and
cwtl
in
and
leave
push
cmp
jno
push
aam
das
repnz
xor
pop
dec
je
iret
sahf
push
mov
inc
sbb
hlt
inc
out
pop
cmp
cmp
add
push
dec
shl
mov
leave
nop
jo
mov
jne
push
inc
in
push
or
inc
dec
inc
jl
and
add
xchg
test
lahf
add
pop
or
pop
aaa
push
mov
test
inc
mov
shrb
aaa
and
daa
mov
pushf
jge
inc
sti
loop
movsl
inc
push
jl
inc
aam
jno
cmp
xchg
ret
mov
mov
bound
cmp
mov
scas
fs
push
xsavec
std
jle
inc
adc
insl
out
sbb
insl
popf
hlt
xor
je
ret
outsb
push
loop
jg
call
fldenv
sub
add
ljmp
mov
imul
add
dec
push
ret
and
jg
hlt
jl
popa
add
jo
leave
push
pop
push
and
stc
addl
ljmp
sti
adc
out
movl
sub
pop
je
jae
cs
adc
sahf
imul
jne
fcomps
pop
mov
adc
lret
xlat
mov
jb
and
out
or
test
fbld
adc
push
mov
lret
mov
xor
xlat
mov
mov
cmpsl
jo
insb
sub
bound
call
popf
adc
xor
jne
filds
add
xor
in
loop
jg
mov
add
mov
xlat
xor
shl
call
cwtl
add
outsb
dec
mov
mov
sub
rcl
jp
cmpsl
cli
outsl
jle
insb
mov
hlt
push
ficompl
inc
push
sbb
xorl
out
and
repnz
inc
add
adc
jae
mov
jp
mov
mov
push
mov
fcmovne
add
aas
sub
sahf
jae
dec
jo
imul
jns
xchg
cmp
jae
mov
and
ret
jl
cld
and
mov
testb
inc
jnp
arpl
xchg
or
cmpsb
cmp
popa
cmp
dec
lret
fisttps
lret
or
cmp
int3
push
xor
sbb
aad
mov
js
lock
xchg
adc
int
push
lret
xchg
mov
outsb
orb
arpl
mov
dec
pop
pusha
insl
shrb
mov
int3
cli
rcl
sbb
pop
mov
lods
xchg
testb
mov
subl
jecxz
loop
nop
xchg
lock
add
inc
aas
fistl
pop
bound
filds
xchg
cld
lds
repz
scas
daa
mov
lock
adc
fsts
pop
daa
push
add
popa
movsb
sub
xor
insl
sti
idivl
xchg
mov
aas
leave
nopl
jl
fsts
jb
or
test
pop
shl
mov
data16
test
inc
in
lds
add
dec
lret
jmp
push
adc
pop
push
jl
loopne
cmp
shll
popf
push
mov
sbb
cmpb
lret
jbe
sahf
xchg
fstl
add
std
popa
jl
std
push
sub
cwtl
xor
sbb
fidivrl
imul
pop
mov
stos
pop
jle
adc
in
or
pop
idiv
mov
dec
in
xor
jae
sbb
pop
push
jne
mov
lret
mov
roll
adc
push
xchg
jmp
bsf
pop
rol
gs
mov
js
scas
mov
scas
cmpsb
fisubrs
jnp
lret
mov
pop
stos
xchg
jo
xor
and
scas
lret
and
dec
push
inc
popa
repz
and
and
push
jae
cmp
jo
jbe
jge
cmpl
iret
jns
jmp
aad
fsubrl
mov
inc
fmuls
loope
insl
sarb
je
das
mov
ds
and
mov
into
cld
scas
pop
int3
inc
imul
sub
popf
adc
jp
mov
call
push
add
pop
cmp
sbb
sbb
push
in
add
dec
inc
out
pop
push
xlat
insl
adc
xchg
iret
enter
mov
sub
arpl
fs
insl
cltd
jbe
andl
push
daa
cmp
fistl
push
pushf
add
pop
xor
std
cmp
add
insl
fs
inc
adcb
or
adc
inc
ljmp
nop
inc
test
fisttpl
xchg
in
clc
xchg
sbb
fwait
daa
pop
push
add
lods
mov
cld
sub
rol
cmc
pop
pop
pop
adcl
cli
mov
push
addb
mov
sub
xchg
mov
arpl
cmp
mov
xchg
or
imul
sub
cld
mov
push
es
iret
cld
jecxz
rcrb
test
cltd
pop
ljmp
xchg
jmp
cmp
repnz
xor
into
fimuls
mov
test
fcompp
out
dec
sahf
push
in
xchg
sub
xor
test
test
sbb
pop
out
out
lcall
adc
out
scas
movsl
push
push
stc
or
xchg
into
std
push
mov
movsb
iret
movsl
movsb
pop
mov
je
cmp
test
in
aad
sti
pop
adc
icebp
and
add
clc
outsb
pushf
mov
out
xor
daa
adc
cs
andb
test
jge
ss
add
loope
mov
iret
mov
div
add
scas
pop
and
mov
scas
in
js
mov
xchg
xor
mov
fsubrl
xlat
je
scas
xor
in
stos
sub
loopne
shrb
test
ja
jmp
iret
cli
xchg
add
fwait
daa
add
pop
imulb
sub
pop
pop
std
pop
sbb
mov
test
cmpsl
call
cmp
lds
fs
mov
jl
fcoml
popf
in
inc
mov
pusha
cmp
mov
icebp
push
push
ss
xchg
lahf
fdivl
fstpl
inc
cs
cmp
in
pop
dec
scas
imul
xchg
std
xor
or
out
scas
mov
fs
outsb
xchg
fdivrs
stc
testb
or
pushf
das
iret
popfw
fnstsw
cmp
insl
cmpsb
out
pop
scas
sub
pop
adc
xchg
scas
xchg
adc
mov
js
and
mov
cmp
dec
mov
out
sbb
jb
shr
lret
and
sti
sahf
jmp
cmp
adc
jge,pn
push
repz
push
call
mov
mov
push
xchg
pop
lahf
testl
dec
jg
dec
test
jns
scas
dec
pop
call
lea
mov
and
xchg
inc
mov
ja
jecxz
leave
lret
lock
pop
push
dec
mov
add
pop
adc
xor
imul
mov
mov
cmp
mov
cmp
sbb
into
xor
test
scas
mov
cld
inc
jmp
inc
fs
mov
jmp
lahf
push
hlt
inc
js
dec
into
sahf
cmp
push
mov
jnp
rcll
cmpsb
jmp
test
or
in
nop
jb
sti
dec
xlat
cmp
inc
ljmp
setge
lods
sub
fstpt
mov
ss
lds
mov
mov
lock
popf
outsl
rclb
xchg
es
insl
loopne
xor
adc
push
gs
test
out
and
test
stos
cmp
aad
out
xchg
cmp
or
imul
or
loope
popf
addb
outsl
ljmp
fisttps
xlat
loope
das
xchg
adc
loopne
inc
cmc
test
loope
jno
cltd
jnp
shl
push
xor
xchg
jp
jmp
je
cwtl
andb
cmpsb
or
out
mov
roll
icebp
cmp
mov
incl
pop
es
je
in
inc
jecxz
jno
jp
jecxz
std
out
jecxz
push
cmpsl
test
or
sbb
push
adc
jne
test
and
xchg
xor
stos
inc
push
int3
xchg
mov
dec
sub
lock
std
scas
and
push
jg
push
popf
stos
repz
les
incl
adc
xchg
sahf
popa
subl
sub
sub
adc
mov
mov
xchg
loope
decb
inc
and
dec
fsubl
sub
mov
push
or
jl
out
sub
addr16
shrl
test
out
inc
fildl
test
xor
lods
lods
pusha
xchg
iret
push
xchg
fsubrs
out
pop
fmul
xor
cld
outsl
aas
adc
cmp
push
cmc
in
dec
aam
shrb
addr16
shlb
push
fsubr
mov
or
or
insl
mov
dec
ljmp
jg
pop
leave
imull
test
test
adc
pop
out
push
lock
shll
hlt
mov
jecxz
outsl
lahf
xor
cmp
add
xchg
ret
into
into
les
gs
inc
aas
mov
idivb
jbe
in
mov
xchg
test
dec
jae
fimuls
je
lds
scas
add
mov
data16
aad
insb
cmp
pusha
dec
loope
stos
sbb
das
fistpll
rcr
not
fldl
repz
lds
cli
push
ret
clc
jbe
pop
xchg
mov
push
lods
mov
int3
add
push
jno
or
inc
js
cmp
xchg
jl
shl
mov
aas
stc
sbb
inc
jmp
mov
cmp
cmp
aam
sub
pushf
movsl
add
lahf
push
enter
jno
cmpsb
mov
cs
sar
push
ret
fistpll
out
lods
scas
dec
xchg
jnp
pop
leave
aad
daa
enter
xchg
imul
adc
in
out
inc
or
imul
in
cld
cmp
ljmp
aas
in
imul
push
decb
adc
xor
in
adc
and
xchg
ds
les
aam
adc
sub
xor
xor
fbld
scas
cmp
aad
xchg
movsl
lcall
enter
insb
push
loop
jae,pt
aam
or
ret
xchg
mov
inc
push
fcompl
push
outsb
andb
sbb
add
mov
mov
jmp
roll
fwait
xor
cmpsl
mov
out
adc
pop
lea
fdiv
in
and
sti
je
sub
ds
fwait
and
pop
xchg
and
inc
xor
jb
inc
fldenv
push
adc
pop
sub
jae
shl
sub
adc
and
movsb
or
popa
and
fs
cmp
lahf
in
fsub
orb
mov
and
dec
pop
lcall
inc
lahf
in
loope
je
lret
sbb
jecxz
dec
add
popf
cmp
cmc
xchg
mov
fidivrs
mov
mov
jns
inc
pop
mov
jno
inc
mov
mov
adc
scas
outsb
jecxz
sti
xchg
xchg
or
or
adc
pop
subl
pushf
ret
je
aad
xchg
fs
int3
inc
out
popf
sub
xor
mov
negl
push
int
sbb
cmpsb
cs
fistl
xor
aad
mov
addr16
jmp
hlt
sbb
movsl
sti
dec
repz
inc
cld
rorb
jmp
dec
xchg
out
gs
jp
push
mov
inc
mov
or
pop
mov
pop
aam
mov
dec
inc
pshufw
sbb
cmpsb
shll
jecxz
jnp
ret
pop
popf
cs
lock
lds
xor
test
adc
fcoms
push
aam
sbb
outsl
mov
jecxz
mov
xchg
adc
cmp
pop
jp
mov
les
sbb
inc
jnp
pushl
or
arpl
js
cs
push
std
mov
xorb
push
and
incl
dec
adc
sbb
test
sub
mov
sarb
popf
jb
mov
sbb
stos
lret
fidivs
push
mov
or
rcrl
es
fsubl
sub
xlat
cmp
add
out
jno
nop
imul
lods
mov
pop
lret
mov
mov
hlt
cltd
ja
mov
xchg
shll
jecxz
loope
cmpl
into
add
clc
repnz
iret
out
out
iret
xor
popa
cwtl
leave
inc
aas
jne
daa
dec
shrb
jbe
cli
xor
dec
mov
or
dec
ds
pop
sub
stos
out
and
jb
mov
shrl
out
ss
jle
cmp
out
and
add
ret
fmull
test
xlat
jge
inc
jg
and
in
pop
mov
gs
or
mov
ss
sbb
jns
mov
xor
cli
sub
in
pop
ret
pusha
imul
push
dec
push
arpl
movsb
stos
xlat
cltd
lock
push
out
aaa
negb
xchg
andb
jno
and
out
xor
dec
into
call
push
arpl
jmp
mov
mov
test
mov
repnz
mov
scas
dec
pop
cmp
jge
adc
scas
cmp
xchg
jne
inc
stc
sarb
xchg
pop
shlb
inc
inc
or
inc
fisttps
shrl
mov
movsl
stos
pop
mov
popa
xor
movsb
aam
icebp
and
les
sub
cltd
jl
fcom
enter
adc
out
pop
iret
dec
and
and
leave
and
ljmp
inc
out
shll
xor
inc
mov
jp
adc
in
mov
push
jge
iret
cmpb
inc
mov
lock
pop
std
pop
and
mov
mov
lea
push
fs
mul
jno
dec
cmc
jl
test
sub
repz
sub
push
ss
insb
out
loopne
push
inc
les
push
ret
dec
subb
jg
repnz
xchg
hlt
int3
sbb
sbbb
mov
insl
aaa
fmulp
jp
cmpsl
fsubr
mov
cmp
outsl
xor
xor
enter
inc
mov
out
cmpsl
dec
xchg
xchg
push
xor
push
jmp
and
out
sbb
cmp
lret
add
cltd
mov
jg,pn
mov
add
ss
div
jp
adc
xchg
or
popa
test
scas
mov
mov
ret
add
add
mov
xchg
call
std
iret
push
ss
sub
lcall
or
adc
sbb
stos
xor
dec
adc
and
cld
fadd
push
outsl
inc
inc
dec
or
add
inc
push
jnp
cmp
mov
in
stc
stos
push
insl
mov
int
les
aas
in
ja
pop
pop
test
loop
fs
out
fldl
aad
repnz
mov
nop
cld
adc
xor
jo
push
imull
xor
mov
xchg
xor
push
fidivrl
cmp
adc
mov
popa
xchg
push
adc
jnp
sbb
mov
cmp
daa
stos
dec
dec
fisubl
mov
mov
outsl
cli
mov
sub
arpl
mov
mov
mov
mov
negl
pop
pop
ljmp
xor
fidivrs
cmc
mov
arpl
mov
ss
dec
bnd
inc
clc
iret
xchg
xchg
sbb
mov
insl
fisubs
out
leave
adc
jne
hlt
mov
fwait
int
addr16
or
adc
adc
xchg
pop
push
ja
shrb
loopne
inc
mov
test
iret
fcompl
stos
mov
jns
or
push
inc
ret
dec
scas
test
insb
enter
lods
and
out
sbb
xor
pop
in
adc
arpl
ss
xor
inc
sti
cli
testl
addl
pushl
lods
xor
jmp
or
aas
dec
sti
daa
mov
sub
inc
sub
ss
pop
and
sbb
fiaddl
adc
stc
fsubp
dec
pop
out
cwtl
pop
inc
push
mov
and
pop
in
cmc
add
inc
sub
addr16
fwait
xchg
lcall
fwait
add
cmp
pop
das
or
or
cwtl
or
ss
xchg
xchg
ss
fbld
pop
and
clc
lea
xor
jae
popf
clc
cmpsl
pop
mov
inc
xor
int3
cwtl
movsb
push
rcrl
aad
gs
adc
cmp
sbb
loop
sbb
or
pop
fldl
mov
mov
mov
jo
xlat
dec
adc
and
insl
enterw
daa
out
push
xor
mov
pop
cli
daa
jae
ljmp
push
hlt
xchg
mov
gs
inc
dec
cmp
sub
mov
lods
and
div
cld
and
pop
loopne
loop
push
mov
xchg
pop
int3
and
xor
adc
mov
jo
xor
call
mov
mov
or
repz
inc
filds
or
aas
clc
data16
cmp
adc
push
repz
pop
or
xor
ret
int3
sub
jl
push
inc
stc
cltd
test
outsl
minps
leave
imul
out
sbb
nop
xor
mov
cmpsl
cmp
xor
pop
notl
leave
aas
dec
jno
push
push
shrl
addl
gs
orl
xlat
adc
ret
sbb
int
adc
cld
mulb
sbb
xlat
xor
ret
mov
std
mov
popa
fs
insl
repnz
pop
lret
imul
dec
adc
aaa
push
loop
popa
lret
add
adc
push
in
popf
dec
icebp
stos
repnz
clc
xor
outsb
cltd
cmc
shrl
int
xor
lret
sarl
dec
test
mov
mov
adc
pop
inc
push
push
mov
in
and
sub
inc
fs
out
add
pusha
dec
dec
mov
into
add
fmull
mov
sbbb
or
in
iret
popa
dec
loop
into
mov
jbe
lods
test
outsb
push
into
add
fisttps
dec
or
add
xchg
jno
inc
cltd
pop
or
jle
test
push
ds
imull
fidivl
mov
sub
gs
stc
push
aad
subb
sbb
cld
imull
xchg
xlat
mov
add
in
clc
std
or
add
add
divl
pop
jno
jo
pop
popa
lods
je
pop
or
inc
subl
push
dec
repnz
inc
fildl
fisttpll
pop
xor
mov
pop
mov
fsubl
xchg
push
aaa
dec
cwtl
adc
in
mov
or
cmpsb
lret
jnp
mov
pushf
ret
pop
or
imul
repz
mov
mov
es
jbe
inc
fldt
cli
dec
lods
fwait
sub
ret
test
jmp
dec
mov
jnp
cmp
fcoml
pop
push
jecxz
mov
sub
movsb
pop
lcall
insl
test
scas
xchg
mov
ret
or
lds
adcl
stos
popf
push
sub
jge
addr16
in
push
push
sbbl
sub
push
mov
jb
mov
and
xchg
add
or
push
roll
aam
incb
add
aaa
test
insb
adc
cmpsb
jno
loope
fstps
xchg
mov
sbb
movsl
push
lret
shl
les
jle
jnp
push
pop
jl
aam
sbb
fldenv
and
push
sbb
repnz
sahf
cmp
int
push
dec
cmp
int
sub
cmpsl
xlat
scas
xlat
xor
sarb
enter
pop
dec
inc
lods
fcomps
sub
ret
jg
mov
adc
arpl
sbb
cmc
test
or
int
dec
sbb
add
rorb
pop
es
jle
pop
pop
loope
ljmp
mov
mov
movsl
jl
sub
ret
mov
add
arpl
dec
sahf
inc
in
push
fiadds
movsl
inc
cwtl
xor
movsl
add
mov
mov
repz
cmpsb
and
xchg
inc
inc
or
xchg
cli
xchg
test
xor
pop
sbb
mov
dec
data16
stos
js
lret
jbe
rclb
out
xlat
xchg
mov
popa
push
ja
arpl
jbe
xor
xchg
pop
dec
les
push
cltd
dec
sub
jge
jecxz
je
cs
and
adc
cs
add
incb
mov
aas
idivb
mov
sbb
test
int
paddsb
push
sbbl
xor
mov
xchg
lods
out
lcall
jae
cmp
mov
adcb
cmp
mov
pop
push
loop
jns
pop
dec
loopne
jge
sub
rol
notb
dec
xchg
add
push
and
push
decb
sub
cmp
dec
push
xor
mov
jmp
mov
mov
mov
mov
sarb
mov
insb
sub
ret
mov
fisubs
push
lret
and
inc
xor
mov
shrb
xchg
pop
dec
push
je
add
cltd
addr16
cmp
fdivl
sbb
cmpsb
rorb
ss
arpl
push
jnp
notb
stos
sub
addr16
scas
out
cmp
jbe
call
push
push
stos
lcall
test
xchg
test
mov
imul
mov
jns
insl
into
dec
xchg
xchg
lock
mov
adc
jbe
ljmp
sbbb
add
cld
cld
mov
mov
and
pop
jae
cld
push
cmp
pop
mov
insl
sub
pusha
lock
sbb
fnstcw
cmp
sti
mov
imul
sar
fidivs
mov
fdivrs
pushf
mov
mov
mov
cmp
inc
daa
ret
movsl
imul
inc
orb
data16
jmp
in
sbbl
adc
cs
or
int
fsubrl
imul
jno
jle
xchg
test
inc
sub
rcll
jecxz
mov
push
pushf
andb
adc
cmp
xchg
xchg
or
push
ret
cmp
xor
sub
pusha
mov
pop
and
lret
cmc
sbb
aas
add
sub
adc
push
mov
push
imul
stos
lret
testl
push
jecxz
inc
pop
cmpsb
or
xor
lret
xchg
lods
mov
xchg
stos
and
push
sub
mov
xlat
in
jns
mov
sbb
loop
jae
fwait
das
inc
jp
cli
loop
ret
fs
ss
mov
lds
pop
call
pop
inc
and
xlat
out
fcomp
inc
jmp
mov
inc
mov
sub
ret
push
adc
ficompl
dec
cld
mov
push
int3
dec
cmp
dec
push
pop
or
ja
rcrb
test
iret
pop
insl
leave
js
std
insb
sti
push
mov
jecxz
inc
and
imul
stc
fiadds
fistpll
or
insl
push
inc
inc
add
inc
sbb
jmp
cld
fists
and
jecxz
sub
fstpt
jno
pandn
and
lcall
insb
jbe
dec
push
xor
add
mov
lods
cli
adc
dec
xor
repnz
lock
fwait
gs
xchg
out
and
pop
cmp
pusha
sbb
in
or
or
mov
sbb
xchg
xchg
jl
sbb
dec
sahf
call
mov
cs
xor
popa
mov
xchg
sub
lods
cld
sti
cs
dec
rclb
cld
lods
mov
lahf
pop
ljmp
sbb
out
and
adc
ret
push
in
leave
add
and
cmp
cmp
sub
movsl
dec
popf
shlb
aaa
dec
enter
mov
cs
push
addr16
lds
addr16
insb
adc
mov
test
add
jo
jmp
push
mov
shlb
pop
inc
aaa
cwtl
mov
fwait
mov
bound
sbb
mov
jge
cmc
stc
jo
movsb
pop
leave
inc
mov
lcall
shrw
test
adc
emms
push
test
pop
mov
dec
sti
fs
push
lea
mov
pop
dec
sub
inc
jbe
daa
out
inc
mov
loop
cmpsb
cmc
fs
scas
sbb
lea
mov
jg
mov
sub
mov
mov
rcll
or
fwait
mov
outsl
inc
ja
movsb
pop
inc
int3
cmpsl
leave
pusha
xor
dec
or
mov
mov
push
mov
xchg
pop
fistpl
pop
mov
es
push
out
jnp
sub
add
into
mov
adc
xor
sub
xchg
and
mov
mul
je
test
lahf
test
fbld
popf
fisttps
jne
ljmp
cmp
in
out
out
sahf
in
divl
inc
sub
mov
and
jge
or
pop
cmp
test
mov
cmp
jg
rclb
leave
mov
and
pop
loopne
push
fidivs
dec
lods
test
or
mov
pushf
fwait
je
add
lcall
int
inc
sahf
and
add
fwait
imul
aad
push
shl
ljmp
jnp
add
jae
mov
add
and
lock
rcrb
out
std
cld
mov
ljmp
aaa
in
and
inc
pop
cmp
out
insl
inc
mov
out
stos
mov
cmp
xchg
cmp
mov
in
jl
movsl
push
scas
jbe
decl
add
lret
xor
dec
cmc
sbb
sbb
sti
ret
jge
push
mov
xchg
sub
mov
daa
out
jmp
xchg
dec
sahf
jg,pt
dec
mov
iret
imul
movsl
ss
aam
sub
inc
stc
and
shl
into
cli
in
dec
lret
movsl
adc
arpl
je
call
xor
mov
or
mov
mov
sub
dec
hlt
pop
leave
sbb
movsl
and
nop
cmovge
pop
sar
lock
pop
and
shll
adc
xor
adc
sub
lret
shl
addr16
adcl
mov
inc
jle
dec
loopne
bswap
jne
jns
popa
aad
int3
push
popa
cltd
adc
mov
mov
movsb
sar
adc
loopne
aam
or
mov
xchg
lcall
xor
add
fldl
and
xor
ror
dec
mov
xor
cwtl
aas
or
stos
cltd
adc
mov
inc
testl
adc
outsl
imul
or
cmc
adc
popa
and
cmp
dec
adcl
in
mov
sti
dec
js
add
jmp
mov
icebp
fbld
xchg
jecxz
push
and
lahf
cmpsb
pxor
jns
inc
dec
out
adc
sbb
lahf
aad
sub
lret
fsubrl
stc
mov
xor
rolb
jp
shlb
inc
into
jnp
jp
add
jne
jle
mov
pop
lods
mov
jg
jecxz
inc
scas
pcmpgtd
mov
adc
dec
or
adc
les
leave
jmp
mov
scas
shld
out
jnp
sub
mov
mov
loope
jg
xor
xchg
dec
jne
ret
xchg
sbb
mov
cmp
pop
ljmp
jne
fsubr
data16
or
int
stos
or
mov
push
in
ja
mov
cmp
ds
incl
xchg
adc
sahf
decb
cmp
xchg
mov
cmpsb
mov
xchg
outsl
cltd
aaa
cmpsb
repnz
js
adc
push
push
xchg
xor
je
repnz
js
jge
xor
inc
jae
orl
mov
mov
xchg
in
loop
shl
mov
xchg
cmc
pop
cmp
push
sbb
test
add
xor
fwait
add
jno
or
xor
out
fidivrs
lods
inc
inc
stos
mov
push
or
pop
ja
stos
scas
sti
inc
or
mov
mov
mull
lods
or
ret
imul
cmpsl
adc
xor
pop
lret
test
push
xchg
test
cmp
dec
mov
iret
iret
mov
js
or
pop
in
dec
fcoml
setbe
test
lods
test
filds
movb
std
inc
clc
clc
and
adc
sub
cmp
mov
adc
xchg
nop
xchg
ds
fisubrs
fsubr
lcall
sahf
pop
lea
shlb
ror
adc
adcb
scas
xchg
lret
repz
stos
jge
or
lahf
push
into
pop
pop
jne
xor
pop
push
ds
mov
sbb
dec
scas
call
ret
xchg
mov
and
push
and
bndldx
lret
xchg
push
sbb
inc
cli
dec
add
repnz
fcomip
imul
sub
imulb
jbe
and
mov
and
push
jnp
cli
addl
sub
cmpsb
ljmp
xlat
mov
xorl
inc
mov
push
push
mov
push
into
push
ds
jbe
pop
insl
popf
fisttpl
xor
jae
push
scas
jle
cmpsb
je
loope
outsl
fptan
imul
jge
mov
arpl
ss
push
inc
loop
pop
mov
in
std
test
cmp
lods
fisubl
jge
fistpl
push
addb
icebp
xchg
icebp
xor
and
sub
int3
push
jnp
cmp
popf
or
movsb
inc
push
pop
add
xlat
ret
mov
loopne
popf
mov
out
fldenv
push
shrb
jne
les
aaa
pop
jp
xor
jo
sub
jb
jns
mov
cmpsl
xor
jnp
adc
cmp
push
stos
mov
sub
popa
or
add
sub
in
dec
xor
les
fldt
sbb
das
inc
movsb
and
mov
jns
cmpb
insb
adc
lock
bswap
js
mov
je
test
addr16
jbe
pushf
sbb
xorb
pop
xor
jle
sahf
dec
mov
outsb
aad
cs
clc
call
or
pop
or
pop
imul
mov
out
xchg
loopne
inc
jmp
mov
js
inc
xor
clc
push
or
movl
ret
adc
loope
call
lods
leave
inc
cld
or
pop
lods
inc
sub
pop
push
jecxz
jp
xor
xlat
aad
mov
inc
add
icebp
lret
scas
clc
cmp
pop
pop
cwtl
push
jmp
mov
add
outsb
std
loope
xchg
adc
pop
pop
pop
ret
cmp
pop
out
popa
add
push
fldt
jbe
loop
mov
stc
mov
sbb
outsl
bound
mov
push
iret
xchg
sbb
and
push
movsl
ljmp
sub
cmpsl
lret
or
xchg
clc
loope
stos
adc
fcmovnbe
sub
xchg
inc
scas
mov
pop
jb
or
and
push
lock
scas
outsl
fwait
mov
pop
sub
mov
addl
lods
fwait
sub
aaa
dec
cmp
cmp
fimull
and
cmc
jnp
sbb
mov
push
inc
inc
xchg
jg
outsb
xor
repz
mov
and
scas
movsb
adc
es
pop
in
pop
mov
xorb
sub
ss
jecxz
dec
out
test
push
mul
inc
iret
or
xor
push
xor
cmp
sti
in
rcll
hlt
adc
mov
inc
in
in
sbb
mov
stos
imul
and
popf
adc
cmc
sub
call
cmp
lret
dec
xor
sub
cmp
jo
push
jbe
sbb
loope
nop
xchg
cmp
popa
sbb
shll
test
lea
das
lahf
lea
dec
sub
push
punpckhbw
xchg
cmp
call
push
dec
push
aas
popf
aas
and
sbb
mov
and
cmc
or
push
or
and
int
mov
jmp
ret
ret
dec
mov
addr16
cld
cmpsl
rclb
shr
stc
mov
add
insl
ret
inc
dec
sahf
loopne
movsl
sahf
repz
mov
aas
ds
test
xor
and
xchg
adc
jo
xor
iret
xor
jge
imul
mov
fldl
lods
lret
lcall
mov
je
rorl
jne
std
mov
push
jg
or
sub
les
into
cmp
repz
xchg
decb
lods
cmp
sti
mov
jp
or
cmp
js
roll
test
jg
test
lods
mov
subb
push
cmp
mov
adc
or
pop
jno
and
jecxz
call
mov
xchg
call
mov
das
mov
cli
pop
pusha
push
fs
mov
and
iret
dec
pop
mov
fwait
xchg
jnp
fldcw
mov
xchg
and
add
mov
adc
inc
ror
movsb
jnp
dec
idivl
mov
lods
sub
mov
xchg
mov
gs
in
and
mov
or
xchg
push
out
xorl
popa
lcall
jmp
inc
cmp
cmp
add
mov
fstpl
cmp
and
std
aad
jne
inc
mov
jle
jge
movsb
cmp
out
push
and
lret
inc
out
push
rcrl
pop
shll
sar
mov
cmc
xchg
sbb
divb
stos
sbb
and
dec
inc
cmpb
nop
add
cmpsl
sub
daa
xchg
jge
sbb
lea
pop
dec
mov
loopne
jo
imul
adc
jbe
or
sahf
lods
inc
lret
mov
xchg
mov
mov
inc
mov
ds
push
popf
sbb
xchg
inc
cltd
lock
or
inc
jne
leave
mov
hlt
repz
fnstcw
out
imul
cmpsb
mul
mov
pop
stos
sub
scas
push
and
mov
adcl
sbb
jnp
int
call
mov
sub
xor
addr16
add
ret
mov
pop
jne
mov
cmpsb
cmp
sbb
add
push
add
pop
in
cmp
and
push
outsl
iret
inc
stc
add
jecxz
inc
stos
movsb
lods
div
or
ljmp
into
dec
outsl
adc
mov
mov
fsubrp
or
adc
xchg
lea
jne
inc
push
mov
xchg
jp
push
scas
ljmp
jmp
pushf
call
out
icebp
icebp
scas
inc
dec
cmp
push
sub
cltd
push
push
or
lahf
cmpb
push
es
jmp
sahf
pop
test
jae
outsl
icebp
jns
iret
mov
jl
hlt
scas
and
mov
jb
pushl
stos
lds
into
pushf
lods
mov
lods
xor
out
xchg
pop
sub
xchg
pop
mov
insl
pxor
bound
imul
movsl
mov
push
mov
mov
xchg
out
inc
scas
mov
or
rorb
dec
push
mov
repz
out
jl
pop
mov
push
xchg
cld
push
xchg
sbb
sahf
aaa
lahf
pop
out
sbb
les
adc
mov
cmp
sbb
xor
push
mov
push
out
xchg
js
dec
cmc
mov
bsr
movl
dec
sbb
or
loopne
push
dec
mov
cmp
mov
stc
xchg
fwait
je
callw
ljmp
push
and
cmp
or
xor
mov
in
mov
lods
daa
mov
xchg
imul
cltd
jne
sti
test
fchs
and
into
adc
adc
fnstenv
dec
in
fcmovnb
out
cmc
pop
mov
into
jb
imul
pop
jae
js
test
je
aam
test
loopne
pushf
scas
dec
divb
dec
fdivrl
mov
sub
add
jp
mov
pop
sarb
cmp
or
xlat
imul
and
js
add
sahf
jbe
insb
pusha
adc
jae
xor
or
pop
mov
xchg
out
mov
ja
jne
jae
xor
outsb
adc
inc
cmp
call
pop
cli
lods
cmpl
shll
ja
cmc
jne
lahf
mov
adc
inc
jle
std
mov
sub
inc
xor
sub
orb
xchg
std
aaa
lret
mov
adc
not
lods
ret
xor
xchg
inc
in
lds
mov
fistpll
shr
orl
stos
adc
xchg
inc
imul
outsl
push
scas
arpl
pop
cs
mov
inc
arpl
fildll
stc
iret
sahf
fildl
sub
aad
imul
inc
ljmp
or
mov
test
add
pop
xchg
and
push
clc
inc
jge
cld
inc
push
sti
imul
pop
mov
dec
fst
movsl
jne
loop
mov
mov
daa
das
js
xlat
fisubs
dec
push
mov
enter
jns
sbb
addr16
xchg
int
pop
push
mov
ds
adc
sti
and
call
xor
idiv
or
adc
or
bound
fdiv
aaa
aad
mov
test
sub
scas
lea
mov
add
mov
inc
jl
loopne
rcr
mov
sbb
cmp
frstor
and
sbb
cmp
jle
outsb
mov
and
out
mov
inc
nop
psubq
push
mov
sbb
jge
es
imul
in
out
push
mov
and
pop
adc
add
dec
mov
mov
mov
xchg
nop
iret
nop
add
sub
imul
popa
movsl
push
add
adc
xchg
cmp
in
aam
push
hlt
adc
ja
cmc
leave
xor
imul
stc
inc
jnp
loop
popa
mov
imul
inc
test
and
adc
cltd
mov
scas
pushf
pushf
and
int3
dec
cmpsb
scas
into
or
call
int3
in
out
mov
mov
fcoml
cmp
push
sbb
dec
xor
das
mov
adc
fistpll
or
aas
scas
inc
shl
mov
lock
js
cmp
test
dec
mov
jge
mov
xor
jl
out
inc
pop
pop
std
and
sarl
cmc
leave
das
mov
or
push
pop
scas
push
in
mov
or
mov
sahf
pushf
pop
jecxz
push
push
add
scas
pop
in
jno
clc
stos
adc
pop
lds
mov
mov
inc
adc
inc
mov
push
nop
and
aaa
inc
push
rcll
hlt
add
push
insb
ss
shl
lock
add
int3
mov
push
sub
fwait
pop
jg
shll
sub
or
test
push
jge
fidivrl
xchg
jns
loopne
push
clc
cli
inc
mov
or
xchg
aas
jnp
sub
loop
pop
stc
mov
fdivrs
sahf
or
mov
jge
imul
lret
mov
divl
mov
into
sbb
dec
imul
int
mull
or
jb
aam
xor
es
or
sub
dec
xchg
cmp
aaa
adc
jge
mov
stc
inc
fwait
mov
aam
insb
fadd
push
jg
ja
xchg
shrb
in
cmp
mov
adc
test
imul
ret
cs
lcall
inc
movsl
rorb
shrb
sbbl
insb
sbb
add
xchg
fs
mov
rol
stos
xchg
mov
sbb
ret
xchg
addr16
dec
mov
mov
push
mov
ljmp
fcompl
daa
repz
mov
pop
jmp
pop
lret
push
aam
cmp
out
inc
je
mov
rcrb
and
aam
int
rcrl
mov
jbe
adc
xchg
sbb
dec
adc
add
sbb
ljmp
xor
loope
les
cmc
jo
pushf
xchg
adc
add
mov
into
and
js
imul
or
push
arpl
cld
int3
jmp
mov
xchg
inc
sub
xor
stc
adc
sbb
outsl
xchg
addb
mov
cmp
dec
mov
js
imul
jge
cld
push
cmp
icebp
ja
xlat
in
dec
rorb
ret
mov
dec
dec
mov
mov
mov
cwtl
arpl
test
push
sub
dec
or
popa
jmp
push
dec
popa
lds
in
jns
cmp
iret
jb
out
mov
enter
sub
test
xchg
subb
out
jp
and
cmpsl
daa
cmp
fmull
mov
ds
cmp
mov
je
cwtl
fdivrl
popf
add
push
es
inc
inc
repnz
insl
or
shrl
adc
andb
sub
test
jecxz
std
xlat
mov
xchg
sbb
pusha
fsubrp
or
div
and
inc
repnz
mov
rorb
xlat
push
xchg
call
push
out
cltd
loopne
out
sarb
mov
int3
out
mov
push
pop
nop
faddl
pop
push
pop
dec
push
jmp
xchg
pop
test
jo
insb
out
and
mov
jecxz
dec
outsb
mov
or
je
or
popa
jecxz
sbb
cmc
cmp
pusha
xlat
xchg
cmp
xchg
les
movsb
ss
or
into
imul
sub
xchg
mov
mov
cmp
sub
ss
push
testb
inc
cmp
lock
mull
jmp
cs
mov
sbb
mov
sarb
mov
jne
insb
pop
aaa
icebp
loopne
pop
loop
xchg
int
out
sub
push
mov
inc
mov
clc
and
xchg
and
jo
or
rcrl
xchg
mov
sahf
cmp
mov
aaa
jg
repnz
and
repnz
rcl
clc
cli
cmpsb
mov
test
lock
pop
out
cmp
cmp
sbb
sti
sub
xchg
clc
imul
jge
jbe
jg
xchg
push
mov
mov
inc
cmp
sub
mov
jae
fnsave
mov
mov
pushf
dec
add
in
ret
aam
inc
inc
cmp
mov
insb
pusha
ret
out
pop
adc
test
sti
push
xchg
jo
cmpsl
lock
xor
mov
adc
mov
adcl
call
scas
mov
jmp
in
cmp
aaa
xchg
adc
or
jecxz
dec
jns
mov
jbe
pop
or
pop
loope
lods
pop
sarb
fstpt
cmpl
out
fwait
push
jae
lods
and
je
jb
xor
dec
jno
pushf
es
lret
add
inc
add
xor
push
sti
mov
dec
pop
sub
push
in
repz
int3
popa
and
add
adc
xor
cmc
hlt
in
pop
popf
sbb
mov
aaa
int
in
sti
divl
stos
inc
add
push
jge
adcl
xchg
jge
mov
movsb
mov
adc
lods
stc
mov
ret
jo
daa
lods
xchg
mov
fchs
xchg
dec
dec
jmp
ficoms
mov
mov
xchg
mov
popa
inc
pop
dec
negb
mov
fisttpll
pop
inc
rcl
pusha
push
mov
lret
hlt
mov
out
push
dec
into
jmp
test
cwtl
cmpsl
mov
add
and
jl,pn
jnp
sub
inc
jl
aaa
mov
add
cmpsb
je
repz
or
push
ret
cmpsl
sahf
cmp
dec
mov
xor
aas
fcmovu
das
popa
icebp
leave
fwait
sbb
sbb
mov
adc
jmp
dec
xchg
cmp
mov
cmp
xlat
xor
insl
xchg
test
test
inc
pop
adc
inc
fistps
aaa
mov
roll
testb
cmpsl
in
push
test
mov
int
xchg
inc
inc
lahf
xchg
repnz
xchg
repnz
insb
add
fwait
addr16
jo
loop
cmpsb
xchg
sbb
mov
push
or
bound
dec
lods
rol
mov
inc
xor
xchg
and
in
in
das
test
push
push
imul
dec
lret
out
fldl
les
and
fsubl
cwtl
dec
mov
lods
lock
xor
or
or
xchg
mov
test
stos
in
fmuls
int
test
push
mov
pop
js
pop
pop
inc
in
loopne
icebp
cli
dec
cmp
jmp
mov
mov
mov
sub
mov
lock
out
arpl
pop
movsl
pop
xchg
and
pop
mov
pop
push
push
xchg
ret
adc
ljmp
or
dec
jecxz
dec
fadd
shlb
lahf
xchg
jne
push
cmpl
push
popf
scas
cmp
bound
fimull
bswap
mov
push
imul
scas
mov
dec
jns
mov
xor
pop
sbb
and
adc
repnz
mov
sahf
sub
movq
pop
push
inc
fisubrl
and
add
or
ret
mov
or
arpl
adc
popa
or
adc
jo
cmp
sbb
test
or
sahf
fwait
daa
and
clc
pop
or
dec
pop
test
int
test
scas
add
rorl
adcl
mov
sub
stc
loope
mov
movsl
lret
adc
and
test
test
ficomps
lahf
xor
loop
mov
scas
lret
cmp
into
je
mov
sub
sti
jb
lcall
lahf
in
out
into
sbb
and
dec
jne
fstps
mov
jns
into
int3
mov
out
mov
cmp
and
out
add
cld
lret
icebp
in
stc
push
nop
cwtl
cmp
adc
and
hlt
idivl
repz
xor
leave
dec
pop
push
inc
cmp
push
ret
cli
push
filds
stos
sub
pop
fwait
out
cmp
or
xlat
adc
ss
fldlg2
sahf
cwtl
jb
arpl
ja,pn
sti
jg
pop
mov
sbb
mov
sub
std
mov
mov
adc
push
jl
call
shl
test
ret
sbb
mov
sub
pminub
dec
bound
mov
loop
lcall
dec
enter
daa
jecxz
push
xchg
xchg
dec
fwait
cmc
sub
lcall
mov
jae
pop
lea
call
xor
xchg
pop
ficoml
ds
and
arpl
scas
mov
inc
loope
xchg
and
stos
jns
sub
cs
gs
dec
mov
dec
pop
mov
cli
and
xchg
popf
xchg
cmp
mov
add
jmp
mov
sbbb
sahf
imul
dec
test
mov
out
jg
rcl
cli
pop
or
fmull
cmp
pop
repnz
fwait
add
mov
fsts
cwtl
sub
xchg
adc
mov
add
xor
jmp
xchg
pusha
push
cmp
loop
xchg
cmp
pop
push
fwait
xor
rcl
outsl
xchg
cmpsb
and
fstps
push
inc
xchg
leave
les
push
jb
out
cmpsb
dec
js
mov
stos
and
jb
sbb
or
mov
mov
xchg
sub
dec
sbbl
fdivrp
dec
sbb
inc
outsl
loope
adc
dec
pop
pop
stos
adc
push
pop
out
aas
sbbl
mov
xor
xor
in
fldl
inc
lahf
jno
je
scas
fs
push
xor
xchg
cltd
mov
fdivl
sub
cmpsb
dec
jecxz
fcomip
fildl
inc
repnz
fwait
mov
pusha
ret
jle
dec
jb
pop
sub
push
fiaddl
repz
aaa
sub
aam
adc
adc
imul
inc
out
je
inc
xchg
shr
mov
xlat
or
sub
lock
mov
dec
jnp
insb
iret
lods
mov
enter
mulb
loopne
adc
jmp
loop
xchg
dec
push
xor
lret
loop
mov
xchg
dec
mov
fs
and
xchg
push
das
testb
filds
es
fs
aas
cli
xchg
and
fdivrl
in
mov
cld
jp
jg
test
js
cli
fadds
jg
loop
xor
fisttps
cmpsb
xor
adc
cmp
scas
data16
jns
shrl
stc
call
push
fmuls
push
test
mov
adc
ret
sbb
and
inc
and
xlat
lea
lcall
pop
loop
imul
comiss
cmp
test
movsl
mov
xor
fptan
fidivs
xlat
gs
in
inc
icebp
add
bound
cmpsb
out
sub
lock
pop
mov
xor
dec
pop
outsl
in
mov
fmulp
cmp
dec
imul
int3
cwtl
ds
push
and
es
sub
fnstenv
test
mov
xchg
imul
sub
lcall
adc
mov
inc
cmp
mov
imul
mov
inc
and
fs
inc
aas
jo
dec
push
dec
and
dec
gs
fwait
xor
jge
mov
ljmp
dec
xchg
jno
sbbl
pop
push
outsl
nop
dec
call
clc
pop
pop
cmp
pop
push
dec
inc
add
test
mov
les
repz
scas
scas
mov
in
stos
xchg
xor
into
sbb
mov
popf
fstl
and
or
lds
sbb
push
add
outsl
push
into
sbb
bound
ljmp
test
insl
fcomps
ror
mov
shlb
or
sbb
xchg
leave
out
int
dec
pop
fsubs
test
sahf
data16
pop
xorb
jae
or
push
cs
lret
dec
inc
push
dec
pop
xor
mov
andl
in
push
and
add
push
jge
push
inc
pop
rcr
jp
cld
mov
fimuls
test
push
sbb
push
into
jg
and
mov
xchg
push
aas
mov
scas
jecxz
arpl
lret
daa
xchg
ljmp
jne
push
ret
xchg
mov
sbb
stos
mov
cltd
dec
jle
fisubs
ljmp
in
das
cli
lahf
pop
add
mov
push
loop
ret
mov
xor
pop
insb
sub
mov
jecxz
inc
xor
ss
loope
push
nop
addr16
icebp
xor
sub
stc
pop
dec
cs
jmp
dec
iret
sbb
sbb
ficoml
lock
pop
arpl
aam
push
mov
xchg
call
sub
cmpsb
mov
shrl
pop
mov
inc
repnz
jg
jne
cmp
cmp
jns
dec
roll
cmp
jg
cmp
shrb
js
pop
dec
call
fiaddl
mov
xor
iret
xchg
sub
dec
mov
nop
inc
xchg
push
jbe
lret
mov
aad
mov
pop
push
jecxz
je
pop
and
rorb
push
lods
push
add
fs
jb
fiaddl
adcb
mov
pop
loop
or
imul
cmp
aad
lret
imul
out
pop
loop
sub
rcr
mov
aam
mov
mov
mov
sub
mov
int3
push
fadds
inc
popf
mov
out
mov
call
fldcw
pop
inc
and
arpl
das
test
sub
push
sbb
rolb
mov
pop
sbb
push
mov
inc
mov
xor
fbstp
xchg
mov
lret
fsubl
cmp
push
ja
aam
pushf
sub
rcll
lea
push
test
imul
lds
sub
dec
out
mov
mov
and
loop
push
fcmovb
adc
divl
mov
adc
inc
push
jl
imulb
cmp
int3
cmp
out
lea
inc
stos
loope
and
fdivrs
jbe
lahf
pop
fnstsw
lcall
xor
jne
cmc
cmp
xchg
pop
addb
sub
rcll
xor
pop
cli
dec
shll
xchg
push
inc
lahf
lods
add
sub
sar
mov
cmovns
aam
jl
lock
lcall
xorl
adc
loop
or
sbb
adc
inc
leave
arpl
movsl
jp
cli
inc
arpl
mov
push
idivb
jbe
pop
xor
aam
rclb
xchg
push
cld
add
lret
sarl
mov
jns
jl
jnp
sub
mov
jbe
enter
dec
out
out
ss
add
sub
or
push
insl
push
enter
fists
sbb
lods
push
push
or
jb
dec
inc
fidivl
addr16
aam
fidivl
add
pop
xchg
aaa
es
push
xchg
sbb
xchg
addr16
sbb
ja
pop
xchg
stos
cltd
fsubr
stc
push
or
add
mov
sub
repnz
lret
rcrb
xchg
dec
aad
jno
adc
add
cld
cwtl
scas
insl
inc
inc
dec
dec
xor
push
into
mov
ror
int
ss
and
dec
inc
popa
out
xchg
jp
and
cs
push
outsl
sub
enter
mov
shll
ret
and
mov
ja
pop
faddl
mov
push
mov
pop
xchg
push
and
fldt
inc
mov
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
cmp
pushf
cmp
aad
maskmovq
divl
cli
fisttpl
add
push
pushl
adc
or
and
mov
int3
dec
xchg
cltd
jbe
add
add
xchg
roll
sahf
pushf
addr16
mov
jg
ss
push
pushf
mov
js
fiaddl
loopne
add
mov
mov
shrl
and
jne
and
push
enter
xchg
or
outsb
rolb
mov
fsubr
popa
nop
bound
dec
out
test
sub
js
lret
daa
lods
pop
sub
dec
int
aam
xchg
xor
push
int3
outsl
xor
sbb
xor
xor
mov
sbb
mov
pop
out
jl
mov
std
inc
stc
push
mov
arpl
mov
mov
jg
into
cli
cs
leave
addb
mov
lret
xor
imul
popf
pop
push
sub
aam
fsubr
fstl
shl
dec
mov
xchg
or
push
jp
sub
xchg
sub
and
push
cltd
pop
mov
lcall
inc
push
push
je
movl
inc
bound
jno
and
adcb
decb
sti
mov
cmpsl
sahf
xorb
jne
add
frstor
in
ret
ret
into
repnz
das
ret
imul
lret
adc
add
fnstenv
push
mov
lcall
mov
push
outsb
fidivl
iret
xor
fdivl
xchg
add
xor
cwtl
pop
mov
adc
cwtl
push
adc
iret
inc
mov
int3
jae
roll
adc
js
fldenv
add
sbb
sbb
adc
pop
jg
mov
loop
stc
pop
pusha
addr16
xor
mov
mov
dec
or
jb
enter
hlt
add
dec
test
shlb
in
stos
mov
insl
jo
and
arpl
cmp
dec
stc
dec
sarl
sub
xlat
push
stc
insb
push
dec
mov
test
pop
xor
pop
cli
xchg
mov
add
inc
ficoml
out
push
mov
fildll
rcrl
movsb
aaa
xchg
mov
shr
aas
push
fwait
xchg
or
outsb
sbb
lret
and
mov
mov
push
jnp
push
mov
jle
sub
je
into
cmc
sahf
dec
fildll
addr16
outsb
xor
sub
daa
jno
add
mov
nop
mov
hlt
aaa
mov
inc
out
adc
jae
pop
mov
sub
jle
test
mov
aad
inc
mov
add
sarb
push
pop
push
andl
adc
xchg
mov
movlps
addr16
shrb
jns
or
imulb
out
mov
inc
push
sub
or
stc
or
and
mov
popf
aaa
inc
sub
push
bswap
push
push
jge
repnz
fiaddl
pop
pop
cs
pcmpeqw
xchg
add
fdivs
hlt
dec
movsl
and
jno
xor
stos
out
mov
mov
adc
mov
add
movaps
mov
fistps
daa
orl
inc
fcoml
push
adcb
rclb
mov
or
mov
inc
loop
jge
xchg
xlat
dec
add
push
lds
gs
out
xor
out
and
pusha
jp
pop
jle
xor
jp
rolb
ret
lret
aam
fdivrl
popl
mov
add
mov
insb
fninit
pusha
mov
dec
nop
testl
int
cmp
jae
iret
cmc
popa
in
outsb
aas
scas
inc
test
fcmovnb
mov
jo
in
stos
adc
jae
jmp
xor
sbb
mov
cltd
sbb
stc
das
cwtl
pop
adc
aad
ret
cwtl
imul
frstor
cld
out
sbb
jl
jns
push
pusha
pop
mov
repz
loope
xor
push
stos
enter
sub
leave
test
stos
sahf
test
subl
aas
mov
cmpsb
dec
push
fdivs
adc
pop
adc
insb
cmp
sarl
sbb
int
xor
cmpb
mov
mov
jl
stos
data16
popa
lahf
lods
mov
ret
lahf
js
repnz
icebp
dec
and
push
mov
dec
push
push
or
push
sub
push
sbb
xor
loopne
loope
lahf
or
or
int
sub
or
insb
xchg
inc
mov
cmp
shll
shll
cmp
enter
ret
jo
hlt
mov
mov
xchg
gs
pop
pop
inc
jno
jl
les
xor
cmp
mov
jmp
shl
lds
cmp
fdivl
scas
or
sub
mov
pop
xor
std
sbb
mov
stos
sbb
mov
mov
popa
pop
cmp
jno
add
mov
sbb
or
lea
push
flds
cwtl
movsb
adc
push
mov
mov
enter
mov
sub
mov
sbb
dec
sahf
xchg
push
pop
outsb
or
add
pmulhuw
jl
pusha
push
xor
xor
mov
ljmp
push
xchg
xor
push
sbb
mov
mov
mov
xchg
aad
out
test
fwait
sbb
in
adc
movsl
jmp
stc
xchg
xchg
xor
or
popf
xchg
jne
enter
pop
movsl
std
jb
mov
xor
sbb
and
mov
iret
lahf
mov
imul
pop
pushf
das
jl
mov
and
pop
pop
adc
lahf
mov
sti
fildl
sbb
xchg
and
ret
sub
pop
cli
cmpsb
out
lock
pop
ror
add
xlat
pushl
cli
in
outsl
inc
sbb
cmc
pop
and
imul
mov
ret
out
cli
stos
rclw
in
xchg
mov
mov
xlat
cmc
mov
popl
xchg
stc
mull
jp
fidivs
fwait
sbb
lods
sub
rcll
mov
sti
mov
or
je
add
add
xchg
or
and
sub
das
aaa
andb
cmp
cld
stos
adc
bound
or
cmp
out
inc
pop
cmpsl
daa
adc
cmc
cmp
and
std
jl
push
pop
rcl
mov
jp
rcl
cmp
lds
mov
push
sbbl
add
insb
inc
loop
mov
add
sub
inc
dec
lahf
add
ja
add
add
add
pop
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
mov
xchg
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
