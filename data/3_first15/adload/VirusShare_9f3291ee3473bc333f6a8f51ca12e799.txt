pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
add
push
fcomip
mov
add
dec
outsb
je
addr16
and
iret
scas
xchg
ffreep
pop
cs
jns
insb
daa
push
outsl
jb
aas
int
fs
orb
popa
imul
add
cwtl
add
push
gs
add
mov
add
inc
add
mov
push
out
dec
dec
outsl
outsb
addr16
int
sbb
hlt
or
push
je
in
jae
out
add
pop
or
push
imul
popa
pop
sbb
je
and
or
cmp
xchg
push
inc
push
push
dec
push
mov
ds
push
inc
xor
push
push
push
pop
dec
xchg
xor
dec
mov
in
pop
push
dec
bound
arpl
pop
sbb
pop
sbb
jae
jae
insl
repnz
loope
mov
clc
jb
popa
arpl
add
push
mov
add
pop
or
imul
mov
sar
fistps
nop
int3
addl
jmp
adc
xor
std
and
int3
int3
sbb
andl
sub
mov
cmp
or
mov
inc
push
add
or
in
loopne
xor
pop
xchg
pop
xor
adc
inc
fidivrs
and
push
xor
sbb
sub
dec
sbb
and
and
push
sbb
adc
inc
push
sbb
or
daa
pop
sbb
cld
adc
sbb
enter
aas
lock
inc
push
in
call
sbb
push
in
pushf
sbb
nop
loopne
insb
adc
in
andl
nop
inc
push
sbb
int3
enter
les
les
ret
fsubrp
jmp
add
add
mov
and
mov
aaa
inc
pop
ret
data16
mov
and
daa
andl
add
push
fistps
add
mov
test
jne
xor
pop
leave
mov
push
mov
mov
ret
lea
mov
mov
mov
inc
cmp
jne
mov
mov
adc
push
inc
add
scas
mov
mov
xchg
pusha
test
jnp
jmp
mov
mov
mov
or
adc
mov
mov
ss
mov
push
or
outsl
and
push
push
push
mov
mov
mov
mov
sti
fidivrl
pop
mov
or
push
or
ret
mov
fimull
lea
or
inc
add
movsl
jge
adc
or
cmp
jne
pop
push
cld
loope
mov
cmp
test
pop
pop
jle
jo
pop
push
fidivs
mov
mov
cmp
jb
mov
add
call
ja
and
mov
add
or
mov
dec
and
fbld
jmp
pop
mov
add
pop
addl
jmp
mov
orb
loope
jg
sub
mov
lock
aam
sti
divl
or
or
jmp
sbb
sti
jne
sbb
and
mov
cmp
testl
push
add
mov
add
add
and
push
jg
lret
inc
clc
mov
test
je
mov
mov
push
lock
mov
push
and
lock
insb
sti
sub
push
mov
sub
cmp
sbb
rcr
fcoms
jne
icebp
add
fsubrs
dec
popf
cmpl
in
jno
and
dec
and
jo
mov
or
lret
mov
fists
add
mov
adc
div
das
sub
jae
out
ja
mov
add
cmp
out
xor
je
jae
or
or
sbb
or
push
in
or
add
ret
add
and
cmp
cmp
adc
sbb
sub
mov
or
cmp
inc
pop
push
adc
hlt
jg
jmp
outsl
mov
mov
and
sbb
dec
jo
loop,pt
mov
sub
or
mov
mov
pop
cmp
sti
call
jbe
mov
cmp
or
or
mov
push
scas
adc
sti
push
push
xorb
js
jo
jmp
ss
jae
and
push
lcall
xor
xchg
jmp
sahf
xchg
and
rorb
or
sub
clc
std
sbb
jae
mov
cmp
jae
std
add
into
shlb
cmp
inc
addl
mov
or
rorb
in
xor
clc
mov
aas
cmpsb
inc
pop
mov
repnz
shll
cmp
jg
inc
cmpsb
ja
cmpsb
xlat
mov
pop
cwtl
in
je
mov
fwait
push
cltd
fs
ds
jle
stos
leave
push
pop
push
add
mov
jne
negb
pusha
add
movsl
and
push
insb
fdivs
pop
inc
jo
jp
out
cli
jge
xor
aaa
add
je
cmp
inc
jne
xor
jle
sub
loopne
push
stos
mov
add
mov
xor
lea
sti
fs
sub
mov
fcoms
or
pop
and
sbb
lea
test
jne
inc
cld
xchg
jmp
imul
cld
aaa
cmc
jne
nop
cmp
fisttpl
inc
cmpl
sub
inc
xchg
popf
adc
inc
popa
xchg
incb
mov
mov
mov
sti
cli
imul
out
cmp
jae
mov
out
roll
or
mov
lock
pop
pop
test
je
imul
mov
or
adc
push
pushf
ss
jo
hlt
roll
addb
sbb
in
aaa
ret
cmc
clc
push
push
pushl
mov
push
dec
jnp
cmpb
and
fcmovnu
mov
adc
push
push
testb
cmp
add
ljmp
jg
hlt
inc
cmp
in
mov
xor
add
les
clc
loopne
aas
pop
pop
pop
pop
adc
sub
mov
ret
mov
mov
jno
xchg
push
xchg
test
shlb
mov
iret
add
add
mov
arpl
ja
mov
sub
xchg
add
push
imul
cmp
mov
sbb
orl
fistpl
loope
lock
cmp
adc
push
jb
or
adc
push
and
incl
roll
stc
add
out
ja
mov
sub
hlt
mov
add
sbbl
mov
fld
jb
add
or
pop
loopne
push
mov
cmp
add
decl
lret
add
sbb
cmp
jl
movl
imul
shll
clc
lahf
daa
add
or
idivb
inc
or
mov
and
mov
sub
test
jo
arpl
cld
push
adc
adc
push
dec
mov
push
or
push
rolb
paddb
add
andl
bsf
imul
je
cmpsl
out
push
add
cmpsl
sub
enter
ret
aas
add
jae
aas
mov
or
cmp
cmp
popl
cmpsl
aaa
testb
fisubrs
mov
add
mov
clc
add
and
fucomi
adc
inc
or
andl
mov
in
stos
add
pop
adc
add
pop
mov
xorb
into
jge
ljmp
clc
sub
sub
cmp
jge
fbstp
stos
mov
or
add
cld
lea
and
in
xchg
popf
std
add
lds
mull
or
js
and
jae
jnp
or
pop
pop
rorl
iret
mov
jmp
mov
add
sub
jo
pop
cmp
mov
adc
cmp
cli
xor
adc
mov
jge
mov
sbb
cmp
inc
adc
sbb
pop
add
sub
cmp
or
testl
mov
fdivrs
pop
or
insb
sbb
inc
adc
or
movb
mov
or
adc
in
push
jecxz
mov
dec
loopne
js
cmpsb
lock
mov
dec
jb
ds
jo
out
lock
pop
daa
push
push
mov
cmp
popa
xchg
mov
sub
add
adc
and
mov
adcb
or
adc
out
orl
fsubrs
xor
mov
xor
lock
adc
xor
lods
fwait
mov
add
leave
arpl
bswap
add
pop
jnp
mov
inc
stos
pop
int3
rol
pusha
pop
insl
sub
mov
mov
inc
sar
cmp
dec
jno
adc
jne
jmp
jle
jne
xor
mov
jl
dec
cmp
test
icebp
sbb
pop
push
jle
adc
mov
jg
pop
mov
pop
je
pop
jmp
daa
sbb
adc
adc
sbb
pop
jle
sarl
outsb
movsb
clc
mov
or
xor
add
imul
out
sub
jmp
call
mov
cmpsb
roll
xchg
leave
arpl
jmp
repnz
jne
adc
xlat
test
pop
pop
xor
ret
test
push
jne
pusha
or
je
cmp
int
clc
stos
jle
inc
cld
jbe
pop
xor
pop
leave
cmp
push
push
mov
add
push
jmp
cmp
add
sbb
xchg
jg
sub
adc
je
test
add
pop
or
inc
scas
shlb
push
or
decl
es
jge
inc
cmp
mov
pop
add
xchg
add
aaa
pusha
sbb
repz
mov
xorb
cmp
unpckhps
mov
add
xor
fcmove
sbb
inc
dec
push
adc
arpl
xor
cmp
pop
adc
dec
push
push
push
sbb
mov
jb
jne
out
or
dec
ds
jno
xor
mov
mov
test
jne
test
and
outsl
ja
sar
or
jl
aas
repz
add
loopne
push
or
xor
and
test
xchg
xor
jp
push
add
ss
inc
push
in
ret
cmp
adc
push
stos
in
or
jle
sbb
fwait
lock
lods
dec
mov
adc
ret
sbb
lcall
testl
jmp
mov
cmpl
adc
adc
roll
adc
sub
cmp
and
pop
jle
mov
mov
out
mov
loope
sub
jge
push
fwait
push
das
jecxz,pt
cmp
icebp
mov
push
fisttps
adc
iret
xchg
data16
adc
add
jbe
adc
add
mov
sub
loopne
pop
cli
mov
add
cmpsb
mov
sbb
mov
fisttpll
fmull
fcoml
and
adc
data16
mov
or
sub
cmpb
jl
lcall
hlt
xor
dec
daa
add
jecxz
add
add
dec
adc
xchg
test
sub
fbld
add
push
shrb
sbbl
adc
jmp
xchg
outsb
mov
or
mov
loopne
gs
lret
cmp
inc
cld
and
ret
add
ret
clc
mov
xchg
in
mov
test
pop
das
sbb
roll
arpl
dec
cmc
push
add
mov
lcall
mov
adc
cld
jmp
out
adc
je
cmp
add
ds
jge
aaa
inc
adc
mov
dec
sbb
jbe
mov
filds
test
jle
sti
lret
inc
clc
adc
push
or
add
lret
je,pt
je
lock
add
xor
sbb
std
insl
fimuls
or
mov
ret
push
jmp
pop
xor
add
mov
bound
shl
out
or
dec
push
mov
xchg
pop
jg
sbb
ret
rol
xor
inc
sbb
sbb
subb
addb
mov
test
xor
jle
jecxz
cmp
insb
jg
dec
sbb
or
dec
sti
sbb
sbb
popf
jge
ret
mov
inc
sbb
hlt
and
adc
push
mov
xor
jle
add
pop
jne
xor
pop
pop
cltd
pop
mov
jmp
xchg
inc
pop
lods
mov
je
xchg
xchg
pop
jle
cmp
jg
sub
inc
fnstsw
sarl
incl
inc
rep
jmp
mov
jmp
mov
jmp
xor
loop
mov
mov
xchg
add
sbb
mov
outsl
lahf
sahf
mov
push
arpl
cmp
add
lea
or
rorl
mov
lea
sub
or
sub
adc
xchg
adc
inc
fwait
nop
sbb
pop
loope
cmp
mov
sub
divl
je
cmp
repz
ja
loope
lahf
jns
je
cld
mov
fdiv
lea
xor
std
xor
cld
adc
lahf
inc
in
or
jnp
jbe
mov
es
sbb
ja
jg
popa
jb
cmp
ja
sub
ret
nop
mov
fldcw
out
jmp
add
pop
pop
jae
fwait
pop
pop
pop
repnz
fldpi
add
add
fldcw
call
filds
fldcw
pop
inc
sub
inc
push
and
hlt
cmp
shll
out
push
add
jmp
add
dec
sub
push
sar
jmp
cld
sti
sbb
jmp
cmp
pop
cmp
fsubl
and
pop
mov
xor
push
inc
fidivrl
cmp
clc
xchg
xchg
ja
mov
scas
jb
or
fstpt
sub
mov
adc
jne
call
mov
test
adc
and
sbb
jmp
cmp
xchg
dec
mov
jg
push
mov
pop
mov
xor
mov
inc
add
jb
cmp
ja
mov
clc
dec
icebp
mov
addl
adc
testl
mov
inc
xchg
loope
sbb
scas
cmc
mov
cmp
stc
lret
mov
inc
inc
and
push
xor
mov
xlat
lods
push
xchg
inc
inc
add
ret
ljmp
decl
fnstenv
dec
movsl
mov
pop
add
std
in
sbb
mov
or
loop
push
adc
incl
and
je
mov
cmp
jne
push
adc
jne
jg
lret
repnz
sbb
shr
pop
cmp
cmp
jne
xchg
jbe
or
jmp
add
push
mov
shr
or
gs
addr16
cmp
shrb
and
mov
cmp
jne
dec
dec
dec
or
dec
dec
dec
sbb
mov
jecxz
popf
push
mul
mov
shl
or
jp
out
mov
stos
pop
es
imul
arpl
push
ja
push
ret
pop
push
nop
insb
fstpt
push
or
push
inc
mov
je
mov
or
sub
repnz
js
pop
pop
je
xor
dec
mov
dec
inc
ds
add
sub
cmpb
and
ja
cmp
ja
lea
push
add
push
inc
mov
int
or
jge
jmp
inc
cmc
neg
jle
js
pop
addr16
mov
inc
inc
inc
jmp
mov
fistpll
add
movups
ja
add
scas
leave
aad
stos
aad
hlt
out
push
setns
testb
mov
notb
stc
sbb
add
and
mov
dec
jne
pop
aaa
mov
jmp
cmp
gs
repz
pop
xchg
jmp
dec
sub
pop
jle
testb
lcall
orl
adc
fldt
and
sbb
jns
sub
je
das
cmp
add
popa
push
jbe
cmp
and
jmp
pop
xchg
jge
mov
xor
sbb
out
jg
stc
jmp
fstp
fldt
inc
js
lock
out
mov
and
xor
mov
cmp
enter
inc
pushf
or
leave
cmpl
mov
adc
in
aas
and
sbb
add
popl
inc
mov
lock
test
cld
sub
test
out
sub
pop
jecxz
stc
fwait
cld
add
leave
sbb
mov
cmp
fidivrs
jg
fwait
mov
mov
bound
cmpb
xlat
repnz
dec
fadds
outsb
xor
xchg
push
or
push
push
jmp
ret
inc
mov
push
pop
test
enter
mov
inc
lcall
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
incl
dec
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
std
cmpsb
iret
decl
js
inc
mov
stos
mov
cmp
or
mov
cld
call
out
sub
imul
divl
jl
xor
cmp
call
mov
lcall
popf
sti
jmp
stos
push
inc
mov
push
sbb
sarb
repnz
test
call
or
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
push
jmp
dec
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
cmp
jne
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
push
movsl
mov
popa
fisttpll
stc
repz
mov
subb
and
decl
and
outsb
bound
xor
jmp
clc
push
xor
cli
and
cmp
jne
push
pop
mov
add
repnz
imul
push
hlt
movzwl
lea
push
imul
movsb
xor
dec
xor
xor
push
push
lahf
or
mov
movl
addr16
adc
lcall
xchg
fisttps
xor
test
mov
loopne
and
push
clc
pop
aas
or
pushl
mov
adc
inc
push
push
inc
push
inc
pop
inc
outsl
jb
out
jmp
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
insb
jne
adc
push
loope
jecxz
and
sbb
mov
jo
mov
leave
mov
inc
rep
push
or
pop
mov
mov
dec
cld
jne
dec
mov
xor
out
jne
pop
cmp
mov
fdivs
inc
fsubrl
add
rorb
add
pop
lods
mov
sbb
add
aaa
and
cmc
data16
jbe
rcr
test
or
jp
mov
push
movups
mov
jae
xlat
in
ret
xor
cmpsl
jle
loopne
mov
or
push
cld
ds
std
add
jge
mov
xor
push
shr
dec
rep
pop
and
ret
sub
pop
fdivr
add
sbb
decl
in
cmp
je
pop
mov
add
jae
xchg
mov
mov
popa
sbb
jne
mov
cmp
lods
mov
mov
mov
sub
cmp
pop
js
ret
add
inc
xchg
cmp
out
jae
paddd
add
cmpps
or
roll
push
ret
call
adc
sbb
mov
imul
nop
pop
pop
xor
mov
shlb
or
mov
ficoml
cmp
mov
roll
mov
push
add
pop
movl
sbb
jl
je
outsb
or
dec
setne
scas
or
jae
cmp
lock
test
mov
sarl
cltd
inc
mov
cmp
jne
jb
cmp
add
invd
or
or
push
inc
inc
fcoml
lds
and
scas
test
jo
cmpsl
and
push
inc
js
rclb
rorl
sti
shll
dec
jg
jne
mov
add
add
dec
pminub
jle
movl
icebp
jg
ret
or
negb
pop
add
sub
mov
pop
jg
push
cs
xchg
je
les
jmp
out
jle
inc
insb
mov
fmul
mov
xor
and
mov
dec
mov
out
les
mov
push
inc
pop
push
aad
or
jecxz
aas
sub
inc
push
stos
sbb
arpl
pop
mov
std
jmp
xor
mov
sarb
pop
int3
xchg
adc
mov
cmp
sbb
fistpll
dec
jne
icebp
fucomi
sbb
add
sbb
mov
repnz
out
dec
cmp
fistps
push
pushf
enter
mov
pop
repnz
sbb
std
decb
jmp
lahf
in
push
pop
add
mov
cmpb
arpl
hlt
xor
adc
stos
decl
imul
adc
clc
clc
cmp
daa
cwtl
mov
mov
or
or
ljmp
lods
push
adc
push
clc
lods
sbb
lea
jg
jmp
jl
jmp
cmpb
enter
fcomp
in
push
call
sbb
aaa
mov
push
popa
push
mov
add
in
or
das
sub
and
add
add
imul
jo
aaa
jae
es
negl
testl
dec
fcompl
mov
cmpb
je
or
or
mov
cmp
adc
sbb
jecxz
jo
jb
xor
adc
loop
fdivrl
lret
jo
jecxz
pop
movb
aaa
dec
testl
data16
imul
inc
mov
dec
adc
outsb
mov
flds
pop
mov
test
mov
ja
and
call
mov
cli
out
push
je
or
xchg
ret
mov
xor
test
mov
push
addb
cmp
pop
ja
sub
hlt
leave
or
xor
repnz
adc
add
jns
je
orl
out
lock
mov
push
cmp
jg
pop
je
test
dec
dec
xor
into
push
outsl
mov
outsl
or
movl
shl
ret
add
mov
adc
mov
mov
and
mov
lcall
je
dec
or
add
inc
out
jne
mov
pop
cltd
push
or
imul
inc
add
or
popf
add
aas
repnz
lock
push
addl
jne
xchg
mov
inc
or
mov
aas
call
pushw
aas
dec
jne
dec
adc
fwait
in
xor
inc
call
out
daa
push
sahf
inc
cmpsb
in
lahf
adc
adc
or
adc
mov
push
cld
cmp
sub
adc
sub
push
push
push
cld
shrb
prefetch
jmp
in
inc
add
pushf
ret
push
xorb
call
inc
outsl
or
mov
scas
cmp
pop
push
push
push
push
push
mov
fsubp
js
and
fstpt
sahf
sbb
orb
add
testl
xchg
xor
in
fidivrl
add
adc
adc
filds
pop
mov
pop
xor
subl
loop
xor
mov
cmp
push
jo
xor
xchg
ret
fdivrl
mov
cmp
or
cmp
push
sub
incl
je
jmp
add
sub
jb
je
jmp
cmp
push
adc
xchg
cs
adc
std
sbb
std
pop
jg
cmp
mov
jmp
mov
jmp
int
and
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
dec
popa
call
hlt
aam
movl
jno
vmread
stc
push
insl
mov
or
cmp
mov
mov
or
inc
sbb
cli
out
dec
rorb
cli
daa
js
or
dec
cmpsb
push
sub
loopne
mov
push
mov
loope
xor
ret
pop
jno
pop
inc
or
add
pop
shrl
cmp
aas
mov
adc
sbb
cmp
cmpsl
add
mov
psllq
cmp
je
cmp
jne
adc
mov
sub
push
add
push
dec
mov
mov
mov
cmp
test
jle
dec
mov
inc
fiadds
call
push
and
jecxz
adc
test
jns
jns
shlb
fistpl
sbb
mov
add
dec
mov
xor
jle
js
repz
add
sbbl
add
repz
movl
sbb
mov
push
and
stos
mov
cmp
add
pop
loope
stos
repz
cmp
sbb
cld
nop
pop
pop
pop
push
add
add
add
ss
jne
pop
pop
pop
inc
sbb
rorl
sbb
out
jns
orb
or
js
cmp
sbb
add
cmp
push
cltd
idiv
add
clc
leave
sti
add
daa
mov
scas
hlt
decb
outsl
sarb
xchg
pop
jmp
mov
inc
std
dec
mov
xchg
cmpsb
neg
sbb
inc
movsl
pop
sbb
pushl
stos
push
test
add
or
movsl
pop
leave
pop
pop
jmp
push
cmpsl
dec
loopne
cmpw
jmp
adc
jbe
mov
movsb
lea
or
loopne
push
push
les
in
das
in
xor
inc
pop
ret
addr16
fsts
push
adc
xor
cld
xorb
inc
or
mov
cmpb
push
cmpl
lock
adc
mov
pop
mov
call
and
dec
and
jecxz
mov
int3
loopne
push
jne
sub
and
add
sbb
jbe
fwait
inc
adc
aas
mov
xchg
in
inc
adc
cmp
jns
push
push
adc
test
add
icebp
push
mov
rcrb
pop
cmp
adc
imul
lock
ret
pop
or
das
mov
add
mov
add
shl
mov
aad
mov
std
loopne
dec
clc
dec
jl
lock
clc
push
and
pop
fs
push
mov
push
sbb
add
fmul
push
or
dec
jne
lahf
mov
and
inc
jg
cmp
repz
sub
or
ret
dec
sbb
pop
pop
jmp
mov
jnp
ja
xchg
adc
xchg
inc
test
jle
jle
push
add
call
push
cli
pop
movw
into
sub
pop
mov
lods
xor
sub
iret
clc
sbbb
mov
mov
das
stc
mov
loope
mov
pop
aas
mov
cmp
and
cmp
adc
aas
xlat
inc
or
adc
fmuls
movsb
cmp
aaa
jl
or
xchg
add
cld
or
sbb
fnstcw
jb
iret
cli
jg
jmp
lea
cmp
push
inc
dec
xor
sbb
mov
call
unpcklps
mov
fwait
testb
cmp
sub
fistpl
ss
in
pop
jbe
flds
sbb
add
cmp
clc
fcos
push
mov
or
or
mov
clc
push
cmp
je
adc
add
add
add
pop
jmp
inc
add
fabs
decb
jmp
push
cmp
lcall
or
push
push
data16
in
out
mov
or
add
mov
inc
xchg
nop
push
push
jb
scas
mov
pop
add
pop
pop
xor
pop
ret
cld
outsl
push
and
pop
cld
loopne
std
inc
ret
adc
fnstcw
or
xor
es
xchg
jo,pt
sarb
cld
ret
push
aas
dec
je
and
jmp
cld
add
and
loopne
cmp
pop
and
mov
dec
fldenv
mov
sub
cmp
out
popa
cmpb
je
xor
sarl
mov
mov
pop
sub
adc
inc
cld
add
into
sahf
cld
push
mov
cli
lds
push
jnp
rcr
sbb
dec
clc
mov
fcomp
das
loopne
lret
or
push
daa
mov
xor
xchg
adc
xchg
rorb
in
cmp
add
push
fbld
or
pop
cmp
gs
dec
jne
pop
lods
and
mov
cld
jge
aas
aam
jmp
aaa
add
dec
jmp
and
inc
pushf
sbb
repnz
add
pop
dec
jne
push
add
sbb
dec
shl
dec
pop
and
lea
jmp
xchg
leave
icebp
lock
cmp
add
subl
rorl
fs
scas
pop
dec
push
shlb
pop
scas
cmp
xchg
js
adc
sti
add
or
shll
shr
aam
mov
cmpsl
aas
mov
cmp
lods
push
add
jle
scas
hlt
add
dec
cmp
xlat
mov
push
mov
jae
sbb
inc
repnz
daa
pop
mov
daa
xor
mov
ss
ffreep
jmp
dec
jl
cmp
jge
sub
aas
sbb
pop
mov
xchg
pop
fnsave
adc
shr
in
stos
mov
inc
jmp
and
shl
inc
xor
rorl
dec
jl
sub
mov
cs
mov
add
stc
add
lea
inc
dec
jo
sbb
dec
ss
insl
icebp
in
push
or
sahf
cltd
mov
push
mov
fisttpl
adc
imul
add
gs
push
pop
cmp
mov
lea
lock
push
add
mov
fucomp
add
mov
pushf
xor
mov
push
insb
dec
js
mov
ficoml
push
inc
jae
adc
adc
mov
in
inc
lret
aaa
inc
sub
rcr
pop
mov
arpl
or
aaa
cmp
add
fndisi(8087
xchg
dec
out
and
sbb
cmp
sbb
das
loopne
in
pop
sub
mov
jo
lods
jmp
out
pop
lock
arpl
cli
pop
cmp
add
icebp
pop
jg
js
dec
enter
adc
sbb
hlt
call
mov
push
mov
ret
lods
push
faddl
mov
pusha
test
in
pop
enter
stos
push
push
les
push
push
sub
dec
fistl
incl
call
sarb
scas
mov
adcl
roll
push
jmp
movsb
sbb
push
jl
pop
cmp
fstpl
jns
pop
repnz
mov
cld
addl
decl
in
xchg
push
das
int3
pop
pushl
mov
and
outsb
and
shrb
add
and
mov
mov
or
push
mov
push
outsl
add
cmp
shr
mov
inc
cmp
popf
mov
push
add
xor
inc
sub
jle
ds
jle
icebp
leave
mov
aas
in
out
call
shll
sbb
xlat
add
scas
or
lock
cmpsb
push
push
xor
fs
xor
jl
popf
dec
mov
js
dec
lcall
or
popa
mov
jae
aaa
daa
pop
insl
pushf
decl
stos
cmp
loop
ret
inc
pop
dec
cmp
push
out
mov
pop
lcall
sub
cmp
push
insb
add
add
pop
mov
in
dec
or
mov
push
daa
cwtl
inc
fs
xchg
lods
pop
stos
sbb
test
test
push
pop
push
cmp
pushf
daa
mov
push
xlat
jmp
lea
mov
sub
loopne
adc
jo
sbb
out
pop
mov
jecxz
adc
push
push
add
cmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
dec
cmp
je
dec
sub
xorb
or
cltd
clc
jmp
adc
incb
das
outsl
or
adc
jmp
stos
aad
push
cs
roll
jno
cs
adc
mov
call
xor
pop
mov
scas
push
jmp
add
cmp
sbb
xchg
js
out
adc
cmp
stc
sub
sbb
int3
fcmovnbe
xor
rcl
ds
pop
js
repz
jbe
test
jnp
and
test
int
or
pop
in
and
lret
cmp
out
xchg
in
ja
aaa
insb
jmp
daa
push
dec
inc
xchg
pop
enter
jmp
cmp
mov
jmp
test
jbe
push
loopne
sbb
cmp
inc
pop
fldt
or
gs
jns
cmpsb
testb
jb
sbb
out
pop
push
or
or
sti
adc
add
sarl
add
jl
mov
das
mov
or
or
je
imul
push
push
je
pusha
add
pop
sahf
adc
mov
pop
dec
test
push
pop
mov
gs
leave
arpl
aaa
nop
insb
lea
push
mov
lcall
stos
push
je
clc
or
mov
add
cmp
add
jns
daa
mov
dec
sbb
aas
and
inc
xchg
jg
xor
js
jne
insb
inc
outsb
cmp
sbb
dec
cltd
cmpb
mov
in
inc
inc
inc
sahf
out
popa
jge
adc
jmp
insb
ja
pop
rorb
out
sub
jae
xchg
pusha
jno
nop
jmp
cmpsb
std
daa
lods
sub
adc
les
cmp
fisubs
clc
lds
daa
or
ja
sti
add
add
inc
ljmp
mov
icebp
mov
mov
mov
add
in
lret
xor
pop
repnz
sbb
es
adc
mov
pop
movsb
nop
push
jle
sbb
leave
adc
inc
cmp
push
call
pop
daa
xchg
xchg
scas
lods
push
push
push
mov
andb
faddl
mov
jae
dec
les
xor
xchg
mov
lock
mov
pop
inc
or
mov
ljmp
xchg
scas
icebp
xchg
and
mov
std
int3
pop
dec
fs
add
pop
adc
pop
pop
ret
lods
inc
loopne
push
mov
add
lahf
xor
or
pop
paddsw
std
jns
neg
mull
adc
add
sbb
sub
aad
neg
sbb
cmp
ret
ljmp
xor
shl
rcl
rcl
rcl
cmp
jb
scas
cmp
jb
sub
sbb
pushf
out
inc
loop
pop
test
jl
jnp
in
repz
pop
divl
and
pop
lds
add
icebp
mov
mov
stc
fisttps
xorl
stc
and
inc
jl
scas
xchg
mov
shl
or
movsl
ret
sbb
ret
ss
rorb
mov
ljmp
lock
shrb
push
or
lock
in
and
mov
sbb
inc
cmpb
ja
mov
and
mov
sub
mov
add
mov
inc
and
sub
sub
mov
pop
je
es
fcmove
int3
or
add
sub
repnz
jle
inc
pusha
gs
ljmp
dec
iret
repnz
jb
out
daa
mov
and
jo
out
xor
sbb
aaa
jmp
pop
fcoms
sbb
inc
jmp
push
or
add
and
sub
jbe
jmp
std
add
clc
jg
mov
cltd
scas
lea
movsb
loop
pop
sbb
lsl
adc
cmp
dec
pusha
push
or
xchg
in
inc
imul
es
ret
fadds
sbb
pminub
mov
xorl
lcall
xor
jne
adc
int3
cs
jg
or
mov
or
sub
adc
nop
sub
adcb
jmp
pop
add
or
xchg
shr
setl
cmp
pop
ret
add
movsl
rorb
iret
insb
pop
push
mov
dec
mov
xor
push
rclb
nop
dec
fdivrp
lcall
cmp
add
push
les
insb
test
pop
push
push
adc
jns
loopne
repnz
pop
cmc
pop
lea
mov
test
jg
test
pop
pop
pop
mov
and
mov
inc
inc
out
sub
shrl
pop
push
pop
inc
add
in
js
std
push
add
stc
fimuls
mov
imull
dec
in
sti
add
in
cmp
je
add
pop
in
and
nop
add
mov
cmp
jge
iret
xchg
clc
inc
sbb
hlt
pop
lock
mov
sub
add
push
in
sar
mov
or
mov
adc
in
xchg
jge
rcr
mov
push
in
test
ret
dec
in
push
int3
adc
into
sarb
icebp
stos
mov
shll
fsubrl
sbb
add
mov
or
lock
enter
flds
ret
cmpsl
cmpl
jl
clc
add
cltd
or
xchg
dec
jno
and
scas
jl
testl
sub
lea
push
insb
mov
out
mov
outsb
mov
cmp
pop
fs
test
clc
xor
xor
lock
jne
inc
packuswb
out
push
adc
cmp
lret
cmp
dec
imul
adc
dec
push
push
push
mov
incl
sub
pop
jae
in
sbb
push
mov
sbbl
jne
mov
ret
jno
jmp
push
mov
xor
clc
decb
adc
loopne
fsubrl
test
les
ss
sub
mov
and
jp
inc
dec
add
add
sbb
mov
fidivrl
xchg
or
je
sar
add
ja
in
adc
jecxz
jmp
pop
lahf
add
daa
cmp
jne
fisubrs
mov
push
clc
inc
jg
mov
cltd
push
in
dec
loop
cmp
inc
push
inc
mov
push
fimull
sbb
das
pop
test
xor
lds
sub
inc
cli
sbb
cmp
cmp
js
pop
jne
add
mov
cmpb
testl
out
in
mov
sbb
add
inc
add
iret
fnsave
sub
lock
rolb
roll
cli
dec
jg
push
push
push
lds
mov
fsubrp
or
andl
out
rcr
pop
loop
je
push
add
cmp
fcomip
push
movb
ret
dec
push
push
mov
inc
mov
xor
shl
test
dec
mov
ret
imul
gs
xor
cs
decl
ljmp
cwtl
push
popa
je
dec
popa
insl
mov
outsl
loopne
idivw
fsubl
xor
inc
out
and
or
insl
int3
push
pop
pop
add
and
cmp
or
roll
ja
fs
xchg
sbb
xor
pop
jo
dec
lds
mov
mov
dec
out
mov
push
and
int3
xchg
aas
sbb
mov
cwtl
cmp
pop
lods
cmp
idivl
pop
inc
sbb
sti
and
push
lods
repz
push
push
call
xor
cmpb
mov
out
xor
jnp
mov
push
je
sbb
add
cmp
fsubrs
cs
pop
cmp
jne
adc
mov
adc
sub
sbb
ret
or
push
fstpt
push
je
das
outsl
ds
pop
repz
cmc
add
pop
les
mov
mov
popa
jb
scas
mov
arpl
gs
aaa
out
mov
dec
test
sbb
mov
dec
enter
push
out
cmovp
cmp
cmp
adc
mov
adc
push
fcomps
mov
mov
jbe
ficoms
mov
or
sbb
mov
mov
mov
dec
and
cmp
inc
loop
jecxz
cli
mov
in
ret
add
cmp
pop
cmp
mov
mov
inc
dec
add
and
sub
mov
movl
mov
mov
push
int3
test
pop
dec
cmp
or
jns
dec
sub
pop
cmp
jno
inc
in
jmp
mov
or
adc
push
cld
jne
pop
cmpsb
fiaddl
xchg
ret
into
pop
aam
mov
call
sub
test
adc
cmp
push
pop
pop
mov
in
loope
mov
push
fdivs
cwtl
lahf
je
sbb
outsb
mov
sub
movsb
add
mov
pop
pop
sar
outsb
or
pop
pop
ret
sbb
adc
mov
faddl
jno
pushf
test
and
test
lahf
dec
adc
or
and
add
or
xchg
pop
and
int3
jbe
popa
fistl
js
inc
cmp
pop
or
getsec
jp
insl
jns
and
jg
cmpsb
imul
jl
cmp
xlat
paddusw
push
inc
xchg
repz
cli
xchg
movzwl
inc
cmp
ja
mov
inc
jmp
cmp
add
lea
cmp
ja
fcmovb
jmp
or
div
loopne
sbb
adc
and
sbb
and
lret
cmpsl
icebp
push
xor
xchg
jmp
popa
add
push
cmpsb
cltd
xchg
dec
popa
rolb
pop
pop
mov
add
mov
add
dec
movb
and
push
loopne
xor
or
xchg
add
cmp
lea
ret
shll
mov
hlt
out
push
movsb
xor
lock
pop
dec
ss
rcl
inc
xor
jmp
mov
or
inc
test
je
or
or
sbb
loope
and
je
cmp
adc
xor
repz
cmp
jne
push
cwtl
and
or
mov
pop
xor
fimull
cld
mov
xchg
fdivrs
fistl
or
inc
fwait
xlat
or
xorb
or
inc
adc
or
movl
and
inc
inc
mov
ret
pop
nop
xorl
sbb
in
xorb
jae
daa
or
jb
inc
or
jmp
daa
out
mov
stc
sbb
pop
jo
jmp
jb
je
adc
outsb
lea
jmp
and
pusha
inc
push
and
pop
in
xor
dec
push
or
jmp
adc
enter
pop
mov
gs
sbb
sahf
mov
hlt
mov
xchg
in
insl
rolb
cmp
pushf
pusha
fisubl
xor
or
cmp
test
cld
aaa
push
aaa
dec
push
jb
nop
xchg
pop
aaa
push
cmp
pop
xchg
cmp
cltd
dec
inc
lahf
loop
fs
xchg
mov
cld
mov
cmp
jge
push
jmp
pop
mov
pusha
inc
xor
sub
push
jae
sub
or
mov
sub
clc
xor
push
daa
pop
push
lock
and
mov
push
lea
push
push
dec
adc
rcrb
push
cld
or
pop
jecxz
xchg
je
jns
vhsubps
adc
jecxz
out
pusha
out
aam
incl
push
add
xchg
ret
rclb
call
insl
or
mov
add
jae
ss
add
jae,pt
sysenter
dec
add
add
add
and
push
loope
in
add
and
sti
adc
inc
cmp
cld
mov
sbb
sub
jg
cmp
jbe
shlb
pop
pop
jmp
mov
push
cmp
sub
pop
jmp
xchg
nop
mov
adcb
vmread
jo
je
push
push
loopne
rolb
jo
add
mov
cmpl
inc
scas
xor
out
clc
icebp
fisubrs
jmp
push
mov
jecxz
and
sub
test
jne
loope
repz
add
push
call
add
ret
mov
ret
dec
mov
inc
lret
out
decb
fsubs
fdivl
cmp
nop
mov
adc
nop
pop
or
je
and
arpl
mov
cmp
pop
jl
fwait
iret
mov
pushf
test
aad
mov
rep
push
inc
add
add
push
or
or
mov
xorl
cwtl
add
xor
cmp
and
outsl
fs
gs
jbe
pop
pop
xlat
gs
adc
ja
pop
pop
mov
or
cmp
aas
repnz
adc
arpl
inc
gs
jne
je
dec
outsl
imul
idiv
je
imul
lea
gs
outsl
inc
arpl
mov
adc
ret
or
pop
testb
pop
xor
outsl
insl
bound
outsl
js
imul
imul
dec
fs
ja
dec
inc
gs
push
je
dec
add
xor
adc
test
xor
and
and
inc
dec
push
xor
sbb
aam
xor
adc
or
sbb
inc
ret
and
test
ss
aam
ret
es
push
nop
das
adc
les
enter
mov
mov
lods
enter
test
mov
pushf
cwtl
xchg
orl
nop
mov
and
and
and
and
push
orl
push
dec
dec
inc
or
enter
cmp
enter
xor
and
and
adc
or
enter
add
cmp
and
cld
adc
fs
inc
push
hlt
lock
nop
inc
push
sbb
in
inc
push
sbb
aam
sbb
int3
enter
mov
shr
mov
adc
call
adc
adc
sbb
nop
inc
add
cld
adc
and
and
in
or
enter
aam
xor
and
int3
enter
add
mov
mov
or
lods
test
orl
mov
xor
and
and
and
and
orl
pusha
pop
pop
push
or
enter
dec
xor
and
and
and
and
or
enter
adc
xor
and
or
cmp
and
and
pop
cmp
int3
pop
enter
enter
test
xor
and
add
mov
pushf
cwtl
xchg
and
mov
cmpb
enter
insb
xor
and
and
and
dec
orl
inc
inc
cmp
or
enter
sub
enter
and
enter
sbb
adc
orl
or
dec
push
xor
add
cld
push
clc
sbb
hlt
lock
fs
inc
push
call
push
sbb
fcom
orl
ror
mov
enter
mov
mov
lods
enter
test
mov
pushf
cwtl
xchg
orl
nop
mov
and
js
fs
inc
je
insb
sbb
push
inc
push
pop
pop
push
nop
inc
push
sbb
dec
inc
push
sbb
cmp
sbb
xor
sub
fs
inc
sub
fs
inc
push
sbb
adc
inc
push
sbb
or
daa
pop
sbb
cld
adc
and
lock
xor
and
and
and
enter
enter
mov
mov
lods
xor
and
and
and
mov
cmpb
enter
insb
xor
and
and
and
dec
orl
inc
inc
cmp
or
enter
sub
enter
and
jbe
jg
movzwl
shl
or
ret
shr
pop
push
cld
sbbl
fwait
and
inc
sub
mov
and
push
and
jns
push
or
xor
sbb
fnstsw
lret
or
mov
movswl
add
out
or
sbbb
out
mov
and
inc
add
sub
pop
hlt
invd
pop
loopne
jbe
outsl
shrb
cld
aam
imul
or
adc
imul
addl
outsl
lods
pop
aam
inc
sbb
push
mov
cmpsb
cmp
and
out
stc
cmp
adc
push
or
pop
ss
push
aas
dec
sti
mov
das
push
push
aaa
push
push
ja
or
fs
push
in
or
inc
or
or
xchg
mov
sub
lahf
inc
add
gs
add
dec
push
push
dec
inc
inc
dec
jg
pop
mov
pop
push
and
dec
std
loop
jnp
inc
push
dec
pop
and
rorl
pop
std
mov
sub
push
inc
dec
pop
dec
dec
dec
inc
push
das
orb
xorl
mov
outsb
mov
jl
jnp
dec
xchg
jl
lock
push
orl
icebp
repnz
or
enter
divl
enter
stc
cli
enter
sti
cld
std
and
loopne
or
enter
in
xor
and
out
xor
and
and
and
rolb
rcl
aam
xor
and
xlat
xor
and
and
and
rolb
ret
les
enter
xor
and
and
and
mov
or
enter
mov
xor
and
and
and
and
mov
mov
xor
and
and
and
sbbl
add
in
je
inc
jne
add
mov
and
in
rolb
add
adc
inc
js
gs
imul
jnp
lock
or
push
and
insb
jae
int3
pop
call
nop
int3
hlt
je
inc
inc
bound
je
notb
in
nop
and
adc
mov
popa
jo
jb
mov
jl
jne
loopne
push
or
dec
jne
dec
dec
gs
imul
adc
fdivr
outsb
pop
adcb
inc
dec
outsb
mov
xor
lds
in
xor
add
xchg
negl
push
and
mov
pop
in
adc
jns
adc
andl
call
inc
repnz
outsl
inc
js
scas
stc
ljmp
inc
inc
imul
outsl
nop
cwtl
inc
and
jg
test
cld
push
popa
outsb
gs
lock
in
and
dec
outsb
jbe
jb
insb
outsl
ja
outsb
xchg
insb
dec
jns
js
mov
dec
pop
pop
sbb
gs
movsb
scas
movsb
add
incl
and
jbe
insb
imul
and
pop
in
cmpsl
pop
insb
jle
gs
jp
push
sbb
sub
test
xlat
lods
scas
invlpg
fs
add
psraw
in
add
cvtps2pd
orl
mov
or
xchg
rol
inc
popa
jae
mov
inc
mov
sub
xchg
scas
sbb
pop
cmpl
jae
push
adc
or
insb
push
js
js
mov
jb
insb
jne
rcrb
sbb
rorb
inc
jbe
cli
add
dec
sub
addb
dec
xchg
je
insb
inc
add
scas
ds
mov
mov
mov
popa
test
mov
daa
mov
mov
out
jle
sub
push
mov
aam
rclb
out
pushf
mov
and
xor
cmp
clc
clc
adc
add
or
stos
and
or
lea
addr16
jg
call
data16
mov
icebp
fldt
adc
cs
xor
dec
dec
mov
mov
add
test
add
and
addr16
mov
call
adc
jb
inc
psrad
fs
fsubs
push
int3
add
jne
inc
cmpxchg
or
repnz
pop
hlt
ds
in
inc
aam
cmp
inc
imul
incl
jnp
sbb
push
loopne
sbb
add
push
je
and
popa
loopne
xor
adc
sub
jo
aad
and
dec
jne
push
mov
and
out
push
f2xm1
lock
ret
lods
outsb
arpl
cmp
pop
rolb
fldenv
and
shr
div
mov
adc
pop
push
pop
push
push
lret
mov
mov
mov
popa
lods
in
pop
ret
in
in
push
cmpsl
cmp
aas
scas
and
sub
inc
cmpsl
popa
dec
push
pop
icebp
pop
lods
xor
mov
adc
sahf
sbb
sub
jp
adc
jecxz
or
mov
mov
mov
leave
push
rcrl
or
rcr
pop
jle
adc
sub
fiadds
dec
mov
iret
cli
cli
movsl
fsubr
rcrl
cmpsl
aad
lahf
add
pop
adc
push
inc
inc
fimull
scas
movsl
dec
inc
jmp
ja
imul
or
or
shll
cmp
repz
je
movzbl
pop
push
in
mov
mov
push
loop
call
or
cmpsl
jne
push
lock
inc
inc
aas
push
mov
add
or
push
mov
out
and
sti
je
xchg
sar
jnp
ret
out
sub
pop
xchg
sbb
lcall
inc
or
jb
xor
into
pop
push
jp
das
adc
lea
mov
add
mov
cwtl
gs
arpl
jns
test
push
ret
and
mov
and
jo
or
xchg
out
rcll
fisttpl
xchg
shlb
push
push
adc
insl
push
nop
ljmp
lock
movsb
add
repz
cmpb
jbe
adc
mov
dec
sub
clc
imul
icebp
into
sub
inc
xorl
push
setg
rclb
bnd
cmpl
repz
sub
mov
outsl
and
negl
or
push
push
mov
pop
shrl
xor
addr16
ljmp
lods
mov
add
sub
jb
sub
je
jae
adc
or
mov
outsb
jecxz
notrack
int
add
or
jae
inc
dec
jne
mov
das
or
jne
sarb
push
cld
hlt
mov
sub
mov
inc
std
push
xor
div
dec
pop
cmp
jb
sysret
mov
jg
and
icebp
sub
jbe
add
mov
sub
jmp
mov
icebp
ja
in
dec
jne
push
mov
sub
xor
push
outsl
cwtl
push
cmp
enter
xchg
lret
xor
fildll
pushl
mov
negl
sbbl
sarb
pop
dec
jbe
movb
mov
jmp
mov
xor
and
push
fidivs
popf
sub
mov
and
xchg
testl
fs
sti
or
push
and
fistps
ret
out
fildll
add
add
sub
add
rorl
fdivr
mov
pop
sbbl
pop
sub
fcom
fstsw
sahf
jae
pop
lret
or
scas
das
ffree
ffree
ffree
ffree
pop
aad
add
dec
les
call
inc
or
aam
push
or
and
cmp
repnz
js
add
push
mov
jp
push
xlat
adc
lock
add
sbb
and
sbb
mov
ja
mov
or
icebp
mov
jp
jge
fimull
js
in
jno
imul
mov
mov
jns
test
pusha
push
fcom
inc
mov
cmp
inc
nop
lock
mov
push
mov
scas
inc
dec
inc
sti
in
cltd
pop
dec
mov
pushf
mov
sbb
and
cltd
nop
sbb
sbbb
add
push
push
movb
pop
sarb
test
jl
inc
adc
outsb
lret
and
mov
in
clc
push
cmp
jmp
dec
sarb
stos
add
jmp
sbbb
lea
or
mov
cld
iret
inc
add
fcomps
mov
add
xchg
add
dec
ss
push
lcall
arpl
js
pop
addr16
inc
nop
scas
pop
enter
ret
ret
ss
lahf
or
lret
xor
add
dec
icebp
bound
test
scas
adc
jmp
scas
mov
cmp
mov
jbe
pop
leave
adc
cmp
sub
clc
or
xchg
jge
incl
out
cmp
ja
adc
pop
pop
and
push
cmp
push
aam
or
sub
mov
mov
test
push
lgs
add
and
int3
jg
dec
jecxz
inc
jae
inc
adc
add
jns
bound
and
cmp
outsl
push
push
mov
sbb
add
push
push
sbb
push
pop
sub
pop
out
and
dec
les
xchg
push
jbe
cmpsl
icebp
mov
add
test
push
cld
jle
aas
int3
mov
xchg
inc
push
mov
andb
push
xor
cmp
sti
cmp
je
adc
jne
mov
push
enter
pop
push
mov
and
cld
or
fstpt
mov
stc
inc
pop
add
mov
cmp
je
stc
test
rcrl
xor
call
sub
mov
insb
pop
aas
cmpsl
sub
sbb
rorl
add
dec
fwait
rclb
push
jg
bound
pushf
sarl
data16
mov
hlt
shr
pop
cmp
and
dec
mov
cli
push
fistpl
push
jg
sub
lods
jns
xchg
notl
add
push
shl
push
hlt
push
push
or
movsb
mov
enter
lea
lods
ja
push
push
popf
and
push
aas
data16
out
hlt
clc
cld
push
jnp
es
mull
loop
shrb
inc
call
mov
mov
dec
or
xor
scas
mov
xchg
adc
mov
iret
mov
int3
pushl
adc
mov
sub
mov
lahf
das
lea
jmp
int3
pop
cmp
cmp
dec
shlb
negl
pop
rclb
popa
rorl
pop
ret
in
ror
dec
in
jle
or
lret
pop
lret
add
fyl2xp1
pop
mov
fcmovb
out
les
jl
pop
and
fxch
xchg
or
push
ds
xlat
mov
int3
mov
xchg
xor
xor
repz
mov
mov
aad
inc
in
xchg
and
outsl
push
mov
cli
ljmp
sbb
mov
mov
rorb
pop
inc
pop
das
mov
xchg
xor
jmp
insl
add
add
inc
repz
shll
scas
push
mov
and
inc
jg
loopne
dec
jae
inc
dec
je
mov
js
jge
mov
pop
sub
jbe
sbb
lods
mov
adc
mov
jne
and
mov
or
mov
sub
andl
add
out
or
mov
inc
mov
ja
jmp
and
xchg
mov
sbb
adc
lock
cmp
jbe
mov
fwait
sub
dec
outsl
push
cmp
jne
les
popf
fisttpl
stc
or
and
testl
roll
fwait
sub
mov
cmp
je
mov
add
xchg
mov
subb
xchg
push
lcall
jp
loopne
into
decl
test
hlt
mov
mov
cmp
xlat
mov
and
rep
sub
imul
sub
jmp
test
inc
out
add
fildll
cmpb
cmp
das
hlt
and
lods
jmp
mov
icebp
or
sub
cli
mov
fwait
sub
mov
inc
addb
jecxz
jae
fildl
out
clc
cli
or
lret
roll
xchg
pop
mov
shrb
rep
sbb
cmpl
jle
jecxz
push
and
mov
mov
sub
jb
cmp
ja
imul
call
rolb
and
in
dec
outsl
call
cmp
sub
js
or
repz
add
rol
or
sar
out
push
and
push
pop
pop
jne
lea
in
jge
fisttps
jmp
xchg
pop
cmc
push
jnp
cmpsb
pop
ss
xchg
stos
and
xchg
cs
fldcw
xchg
mov
push
ret
or
xor
xorb
add
sub
pop
mov
call
fmull
rclb
or
jns
pop
imul
or
fisubs
jmp
imul
nop
fldcw
add
cli
sbb
div
and
jne
cwtl
pop
ret
sbb
add
mov
aad
or
jmp
xor
inc
inc
sarb
mov
cmp
jbe
pop
lahf
add
jne
aas
and
jnp
popa
je
cld
call
pop
jns
mov
push
add
data16
sub
lods
cmp
ja
or
jmp
movsl
pop
std
and
dec
mov
cltd
pop
ds
nop
loopne
cltd
leave
xor
out
mov
add
xchg
jg
sub
inc
je
mov
or
add
jnp
adc
dec
jge
mov
mov
clc
push
pop
cmp
jbe
mov
clc
push
and
ret
fdivrl
xchg
cmovp
adc
xchg
mov
inc
iret
dec
test
jo
stc
xchg
ret
xor
and
pop
push
push
pushf
int
movsb
popa
add
imul
jge
daa
daa
and
mov
push
push
cmpsb
imul
icebp
pop
insb
and
nop
pop
xor
cmp
mov
sbb
test
stc
add
movsb
faddl
or
add
lods
jge
push
cmc
cmp
lods
sti
daa
insl
clc
dec
cld
lea
lea
movsl
out
or
fiadds
std
add
inc
jmp
add
es
cltd
inc
cwtl
gs
jge
iret
add
lea
jo
xchg
ss
push
mov
ss
stos
or
pop
std
aas
rorb
jge
mov
neg
jmp
or
leave
mov
stos
rolb
hlt
xchg
push
mov
xchg
dec
aas
lea
in
or
jg
dec
mov
stos
cmp
jne
pop
inc
test
dec
addr16
inc
icebp
sub
mov
inc
push
stc
cltd
test
hlt
mov
repnz
nop
arpl
adc
inc
xor
popa
add
jge
out
mov
fstps
adc
mov
daa
lret
jb
sti
sub
sbb
dec
push
xchg
jge
movzwl
push
fwait
add
fidivl
shl
fildll
test
mov
pusha
xchg
jp
mov
lcall
adc
add
ja
movswl
mov
add
add
sbb
dec
pop
pop
negl
or
rorl
insl
cmp
popf
jmp
aad
or
jbe
fistps
inc
dec
lods
or
xchg
pop
jno
ret
std
loope
jne
mov
aam
adc
stc
std
jl
nopl
pop
sbb
addr16
mov
stos
sti
xlat
fcomip
fstps
rep
jmp
inc
inc
mov
loop
push
add
fdivp
adc
push
pop
inc
clc
dec
std
mov
jmp
add
push
mov
bound
test
dec
sbb
sub
jle
add
leave
mov
mov
mov
mov
sahf
mov
insl
cmp
add
jo
ds
jmp
pop
scas
je
mov
dec
mov
inc
pop
push
mov
inc
test
jne
sbb
sahf
pop
shl
in
stos
xor
sti
neg
outsl
outsl
add
je
inc
jne
pop
dec
jne
ret
xchg
jg
fs
repz
or
repnz
or
dec
mov
adc
lock
fsts
cmp
incb
push
push
push
cmp
xlat
sbb
or
testl
lea
or
pop
ret
and
inc
add
and
and
adc
jge
data16
sub
sub
xor
mov
and
sbb
and
sub
out
fisubrl
sub
xor
out
pop
insl
sub
xor
fldenv
push
jns
add
xchg
aad
je
mov
insl
mov
imul
jg
movsl
cmp
testl
push
add
or
sbb
sbb
inc
push
jo
jne,pn
sbb
rclb
mov
adc
sbb
pop
adc
inc
fabs
push
adc
stos
cs
push
inc
pop
frndint
rcr
scas
insb
or
fstps
mov
mov
add
or
mov
lcall
jne
lea
mov
jg
fwait
mov
xchg
shr
and
add
push
shl
mov
shrb
jns
fwait
mov
jmp
cwtl
cmp
pushf
or
cmpb
jb
movb
decb
decb
and
ja
jmp
data16
popa
xor
sbb
clc
enter
cmp
inc
xor
fiadds
push
shr
mov
add
aad
scas
ret
xchg
out
xor
lock
jne
adc
jb
fldcw
je
mov
shrl
or
decl
lock
push
inc
sub
mov
loopne
sti
packuswb
jae
dec
add
mov
fildll
ret
xor
aam
add
or
outsb
js
fidivl
fwait
cmp
cmp
mov
push
mov
and
jne
dec
sub
cmp
bound
and
inc
ljmp
dec
adc
sub
movb
cmpb
test
mov
mov
rol
or
pop
movl
add
cmp
jns
xor
icebp
fwait
call
jmp
hlt
push
cmpsb
mov
mov
cmp
lods
or
sbb
test
popa
jne
inc
idivl
enter
icebp
je
and
jne
inc
push
sub
push
testb
ret
jne
mov
sahf
lods
jecxz
add
mov
loopne
adc
aas
jmp
fstpt
sub
test
mov
jmp
rol
test
insl
and
push
pop
or
clc
int3
add
and
cmp
js
add
jae
fimull
inc
jmp
loopne
mov
aaa
mov
negl
add
clc
fldenv
push
push
inc
imul
pop
cmp
push
outsl
jb
add
sbb
shr
sysexit
push
dec
lahf
icebp
or
shr
insb
dec
inc
sbb
dec
push
notb
xor
add
mov
add
dec
mov
mov
insb
mov
loop
adc
pusha
in
sub
jge
sub
sbb
fidivl
iret
int3
pop
in
pop
mov
mov
scas
fisubrl
sbb
fwait
outsl
push
fsts
mov
ret
sti
jmp
cmp
inc
or
cli
imul
adc
in
mov
divl
push
adc
cmpsb
call
pop
pop
clc
daa
movsb
add
mov
negl
jae
or
cmp
inc
stc
inc
sbb
pop
jae
inc
pop
mov
sub
add
shlb
ja
jns
xchg
adc
or
scas
add
add
or
fstpl
fwait
es
pop
dec
insb
pop
loopne
mov
movsb
dec
fistps
data16
pop
add
pop
testl
jecxz
and
cmp
mov
hlt
not
mov
adc
rorl
lods
xor
mov
add
insb
sub
lret
fstps
cmp
fisubs
dec
mov
add
push
pop
enter
add
and
js
adc
and
xor
cmp
nop
add
adc
andl
shll
idiv
add
aaa
adc
mov
lea
inc
jge
testl
adc
jle
push
lcall
in
jb
or
jb
sti
insb
sti
cmp
ja
lock
push
out
add
clc
loopne
pop
dec
incb
jne
sub
dec
mov
aas
cltd
testl
icebp
insl
stos
rorl
fneni(8087
ds
sub
aas
pusha
ds
add
popa
ret
mov
sub
js
sbb
clc
cmp
outsb
mov
loopne
mov
and
xor
inc
adc
popa
leave
call
jg
call
jg
mov
pop
sbb
cltd
movsb
psubb
or
add
outsl
sahf
pop
dec
loopne
jo
fisttps
div
push
mov
cmp
add
inc
add
dec
pop
jecxz
and
jge
shl
lock
lods
mov
xchg
mov
add
or
dec
lock
imul
ljmp
add
add
ja
jbe
lea
bound
mov
ficomps
sub
push
jns
mov
sub
insl
pusha
jecxz
cmp
movsl
hlt
repnz
jb
adc
sub
fistpll
out
into
aam
pop
xchg
cmc
arpl
ja
adc
lret
xor
es
jbe
adc
add
fdivrs
push
push
sub
xor
out
ja
and
clc
mov
xor
add
xchg
filds
and
or
mov
mov
sbb
push
xchg
aaa
iret
repz
push
adc
pusha
faddl
ljmp
mov
lock
xchg
and
idivl
mov
hlt
add
fidivl
add
aas
sbb
xchg
and
mov
add
lea
jp
mov
add
test
ret
and
jnp
adc
push
sbb
push
jae
popa
in
xor
mov
xchg
je
push
mov
and
mov
mov
pop
add
popa
add
mov
or
sti
je
ss
mov
hlt
out
push
imull
cld
cmpb
jne
into
mov
xchg
jge
or
lea
or
xchg
pusha
sub
out
insl
jl
movb
jae
jecxz
mov
mov
jge
call
ljmp
pushf
dec
cmpsb
call
inc
jecxz
xlat
in
nop
lds
mov
xchg
inc
popa
adc
xor
out
repnz
addr16
loopne
add
xchg
sub
jo
dec
add
mov
mov
test
mov
push
inc
dec
jmp
test
and
or
add
mov
fmull
fnstsw
pop
cmpl
sub
inc
jmp
aas
jb
ja
add
inc
dec
adc
adc
sub
or
mov
cmp
push
rcll
mov
dec
sbb
imul
jno
add
int3
jo
iret
in
ret
dec
pusha
adc
mov
ret
jg
int3
fsubl
mov
je
jecxz
loope
cld
xchg
inc
cmpb
jne
push
or
movsb
ret
int
fsts
rorl
jns
pop
add
jo
add
scas
and
fadds
sub
or
stos
add
mov
cmp
mov
pop
incl
fisubrs
dec
pop
jecxz
ds
pop
pop
push
xchg
push
std
bt
pop
mov
sbb
adc
mov
xchg
jns
mov
dec
sub
cli
push
push
mov
pop
cmp
jne
mov
xor
imul
push
xchg
fisubs
push
aaa
ljmp
cmpsl
and
or
or
jo
add
enter
or
add
add
pop
or
or
or
push
enter
shl
pop
cmpsb
pop
cmpsl
add
imul
mov
fists
fcomps
xchg
add
jo
js
jno
and
push
jl
cmp
mov
cltd
lock
mov
inc
mov
outsl
mov
dec
push
lea
leave
imul
and
insb
fcomps
lcall
add
mov
adc
lods
adcb
fildl
cli
sub
fadds
push
cmp
mov
fisttpl
dec
add
aad
and
insb
and
arpl
pushf
or
fsts
rorl
mov
xchg
or
xchg
in
xchg
and
movsb
push
cmp
add
rcll
push
aas
cli
ret
jmp
and
add
adc
out
cmpl
je
or
push
jmp
sub
je
clc
sti
xchg
pop
pop
je
jmp
cmpb
dec
mov
popf
or
sub
nop
out
adc
sbb
add
adc
loope
add
pop
test
popa
mov
adc
pop
fucomp
ret
or
dec
push
mov
jmp
movsl
cmp
or
or
jle
or
or
fists
pop
inc
and
popa
out
mov
lahf
and
lret
dec
in
jno,pn
inc
lock
jne
mov
mov
push
lret
add
cmp
addl
fsubrs
add
xchg
or
add
ja
rcr
xor
jae
lret
pushf
mov
mov
inc
jmp
and
and
sahf
fildl
pushf
add
inc
es
or
push
or
ret
mov
and
adc
shll
ljmp
push
jl
out
into
jge
mov
cs
add
inc
lcall
xor
mov
inc
cwtl
jmp
adc
mov
jmp
test
fucomi
add
testb
andb
sub
jnp
add
mov
stos
popa
jmp
adc
cli
clc
test
lcall
inc
repz
fcomp
push
insb
cmc
ret
imul
mov
add
les
outsb
jmp
and
clc
rcrb
sahf
push
sub
sbb
jne
or
mov
lea
sbb
lea
mov
push
lahf
or
frstor
fwait
mov
les
or
aas
pop
adc
loop
xor
jg
jb
xor
cmp
call
movsl
test
cld
cld
pusha
pushf
sub
std
adc
xor
jmp
mov
mov
iret
add
mov
xchg
ret
adc
push
pop
pmaddwd
jae
sub
sbb
add
ret
rclb
rorb
adc
cmp
xchg
push
and
mov
pop
lods
xor
inc
mov
xor
push
or
inc
cmp
pushl
mov
les
lea
sub
cmp
pop
test
add
lods
xor
cmpsl
xor
dec
loope
pop
pop
out
subl
jl
pop
in
mov
cmp
jne
incl
je
pop
test
xor
daa
cmp
and
sub
je
dec
je
sub
outsl
je
ljmp
je
jmp
mov
jmp
push
push
push
push
ja
add
sti
fmuls
inc
mov
jle
fadd
daa
out
xchg
andb
add
hlt
inc
sbb
mov
adc
push
add
jl
pop
pop
addl
and
call
push
push
xorl
lds
adc
add
shlb
and
hlt
pop
addb
stos
sub
pop
sub
in
jne
cmp
jg
sarb
pop
jno
adc
lcall
xchg
cmp
add
iret
add
add
mov
cld
add
adc
pop
push
push
push
dec
cld
loope
push
mov
fmuls
pop
shll
loopne
push
push
notl
pop
and
mov
movl
imul
clc
and
nop
int
movsb
mov
lret
js
push
nop
ds
push
addr16
inc
popf
lock
mov
dec
fisttpl
scas
add
je
pmulhuw
in
dec
iret
sahf
cmp
mov
ljmp
nop
cmp
sbb
dec
fiaddl
jl
mov
sbb
adc
cmp
ljmp
into
add
lock
xchg
sub
jb
and
mov
jmp
mov
and
hlt
mov
xor
ss
rorb
hlt
jo
pop
enter
pop
pop
mov
mov
jmp
ret
jo
jge
add
fistpll
mov
push
fsubrl
push
fstps
fbld
push
fmull
icebp
add
mov
mov
cmpb
jle
and
fs
jne
testb
or
inc
ret
sub
aas
ja
lret
sbb
sub
mov
hlt
sub
sub
dec
pop
fwait
lds
mov
jb
lods
dec
out
shlb
jno
in
in
jl
jne
sarl
sub
mov
fisttpl
fcomp
das
fidivs
subl
fsubrs
sub
imul
out
dec
jns
mov
sub
mov
add
sbb
ret
inc
xchg
popa
and
gs
adc
ret
mov
add
adc
repnz
fildl
mov
fstpl
imul
mov
inc
cmpsb
in
aaa
jmp
push
mov
jno
mov
sub
scas
or
xchg
lods
pop
mov
inc
inc
add
xor
lret
or
mov
into
je
orl
add
cmp
sbbb
xchg
add
xor
test
es
andb
inc
lcall
jne,pt
push
add
push
rcrl
or
lcall
or
sub
mov
cli
outsl
inc
or
popa
mov
push
ja
cwtl
add
xchg
into
mov
sahf
call
cmp
stos
sub
add
xchg
pop
mov
jo
call
negb
adc
lock
stc
nop
sbb
adc
xchg
test
ret
loop
xchg
push
cli
movsb
push
daa
fnstsw
sbb
fisubrs
jb
sbb
stos
fstpl
fwait
jmp
sbb
cmp
adc
sub
out
les
add
jnp
push
pop
cli
xor
jmp
clc
std
pop
add
push
add
sub
jb
or
dec
sub
lret
xchg
stos
jo
dec
insb
cltd
pop
fwait
clc
pop
or
lea
xchg
push
mov
adc
pop
jge
es
cmp
or
fisubl
push
adc
cltd
ffreep
outsb
dec
cmp
push
xchg
addl
sub
push
xchg
call
adc
adc
pusha
sub
or
repnz
mov
sbb
sub
subb
add
test
outsb
xchg
sarb
push
push
mov
mov
lea
dec
lret
int3
add
test
xchg
enter
mov
out
ret
inc
sub
sti
or
xor
sub
pop
add
out
xchg
push
in
fadds
add
loope
xchg
xchg
in
dec
call
in
sub
call
pushf
jne,pn
mov
stos
pop
sbb
les
pop
mov
xor
clc
jle
sbb
jge
je
xchg
cmp
je
add
insb
pop
add
mov
movsb
mov
jno
xchg
mov
xchg
sub
dec
popa
lcall
mov
sub
add
mov
push
repnz
add
data16
out
in
cmpl
add
mov
inc
xchg
jecxz
mov
sbb
std
andl
decb
push
mov
sub
lds
adc
mov
arpl
and
outsl
lret
dec
jne
push
push
jns
rclb
sbb
inc
outsl
mov
psllq
ret
nop
pop
je
mov
push
add
pop
sub
movsb
or
test
mov
add
pop
or
cli
adc
lods
inc
decl
inc
sub
je
sub
je
scas
ret
je
rol
sbb
adc
bound
add
stos
inc
das
xor
mov
push
sbb
jl
mov
mov
sub
jg
lods
add
fistps
jle
mov
mov
test
cmovnp
jle
push
in
mov
mov
add
jmp
mov
cs
jo
jmp
push
xor
leave
xorb
add
in
pop
test
jle
imul
stos
orb
xorb
fcompl
push
sub
add
imul
movb
pop
add
or
sarb
fs
or
mov
push
jo
sbbb
mov
ret
std
sub
les
aaa
sub
xchg
scas
jno
stos
cmc
clc
jmp
sub
stos
mov
mov
dec
mov
pop
sbb
mov
jno
and
push
inc
mov
out
js
mov
xor
push
xor
add
roll
test
jecxz
bound
or
dec
cld
and
inc
add
clc
cmp
push
pop
mov
xor
mov
mov
in
lcall
and
sbb
data16
xor
mov
mov
cmp
mov
or
mov
clc
push
lea
movsb
rcrl
push
data16
test
fildl
cs
or
cmp
int3
mov
sbb
jnp
pop
mov
pusha
cld
stos
sbb
adc
inc
push
adc
dec
sbb
cmp
fmulp
fimull
dec
mov
loope
fwait
pop
inc
push
fcoml
sbb
add
xor
cmp
cmp
add
adc
les
push
sbb
or
nop
jmp
adc
xchg
adc
scas
sti
lea
icebp
outsb
je
clc
sub
adc
testl
ljmp
adcl
adc
push
dec
mov
sar
test
xor
or
add
pop
adc
cmp
mov
mov
dec
mov
xchg
mov
adc
fwait
inc
sbb
imul
and
test
or
mov
lods
ret
adc
push
or
add
les
iret
cmp
stos
jae
cmp
or
sti
push
jg
cmp
sbb
loop
pop
xchg
pop
mov
jmp
subb
push
or
sar
or
and
iret
or
fists
add
or
push
rcl
lret
adc
ljmp
adc
movups
add
pushf
and
lea
xor
or
pop
adc
imul
xor
jae
daa
loopne
cld
sbb
and
adc
add
ret
or
sahf
ret
fcoml
mov
sub
jbe
inc
sub
jne
or
scas
in
xchg
test
pop
out
dec
loopne
out
fmul
xchg
jge
int3
adc
test
fwait
xor
push
or
outsl
mov
push
or
in
test
jns
mov
lods
mov
repnz
mov
scas
iret
mov
sbb
enter
pop
push
push
push
stc
inc
cmp
je
jmp
xor
inc
xor
sub
jmp
and
gs
xchg
testl
add
gs
xchg
or
or
push
push
dec
icebp
or
push
mov
add
nop
sbb
add
in
rcrb
insl
inc
ret
loop
mov
jnp
std
cmovns
lock
mov
jae
or
or
sbb
ror
or
or
rcl
arpl
push
mov
out
out
dec
decb
insb
mov
pop
popf
mov
loopne
shlb
fs
iret
ror
xchg
jae
or
enter
and
mov
ficoms
lods
mov
je
lea
outsb
int3
jnp
addr16
sub
inc
dec
inc
mov
repnz
inc
add
mov
ret
mov
adc
sbb
dec
mov
sub
daa
unpcklps
std
rolb
cmc
std
sub
iret
sbb
and
or
fnstsw
test
test
outsb
dec
mov
xor
xchg
gs
add
mov
pop
sahf
cmp
mov
ret
je
push
push
jnp
test
rcll
les
jno
push
sub
or
cwtl
xor
sbb
in
sub
pushf
sbb
pop
fisubl
adc
sbb
and
jl
or
jmp
inc
and
ret
out
lods
stc
mov
test
add
or
dec
adc
mov
std
cmp
inc
or
adc
pop
inc
pushf
pushf
adc
add
adc
inc
aaa
loopne
mov
jns
nop
fldt
and
and
mov
xor
push
insb
call
outsb
xor
inc
xchg
outsl
push
adc
mov
ds
mov
mov
add
repz
lods
fs
jmp
adc
or
mov
jo
mov
jl
jle
or
adc
add
in
sbb
call
cmp
adc
leave
js
mov
jnp
jl
int3
jne
je
pop
or
je
jae
and
jge
xchg
shrb
xor
stos
fs
lods
pop
dec
xor
cmpl
adc
dec
fstpt
sbb
mov
xor
inc
push
pop
adc
jl
ss
loope
data16
shll
add
std
orl
dec
aas
mov
and
adc
aas
or
dec
push
out
iret
sub
and
or
inc
lahf
test
add
add
add
bound
lods
and
fiadds
cmovge
mov
mov
cmp
daa
jmp
pop
inc
push
shll
notb
stc
lock
adc
xor
push
imul
jg
mov
scas
cld
fbld
sub
push
add
and
dec
adc
cmpsl
mov
inc
jge
loopne
inc
stos
push
aaa
andl
nop
add
inc
mov
xor
out
dec
add
dec
shlb
sub
hlt
jge
jl
jne
xchg
test
addr16
imul
mov
or
adc
bound
and
aaa
fildll
push
cld
cmc
push
jp
jnp
dec
cmp
or
jnp
mov
jmp
decl
add
stos
jno
push
movsl
inc
jno
dec
sub
es
imul
mov
mov
sub
sub
inc
push
daa
and
mov
pop
and
sbb
add
dec
insb
insl
pusha
fcoml
jb
add
mov
and
es
ret
movzwl
shlb
mov
mov
sub
mov
in
insl
add
sbb
mov
adc
jecxz
pop
cmp
jl
andl
ljmp
notl
inc
inc
aam
test
sbb
movq
cmp
jge
or
xorb
loope
sbbb
roll
je
orb
vmread
sub
dec
xor
push
mov
rclb
das
movsl
mov
mov
sti
or
je
scas
push
push
inc
testl
daa
orl
inc
add
add
sub
sarb
cli
jbe
movsb
add
mov
push
jmp
inc
daa
movsb
lds
nop
punpcklwd
xchg
movb
add
js
xlat
xor
adc
mov
inc
jne
fnstenv
pop
hlt
adc
sub
push
mov
andb
popa
push
fldl
fdivs
pop
int3
hlt
mov
imul
jge
lock
dec
clc
in
push
mov
fwait
insb
xor
pop
cld
jg
push
aaa
push
mov
sub
jb
inc
mov
inc
ret
push
sti
stos
sbb
jl
and
jne
or
inc
test
enter
and
icebp
clc
pop
ja
pop
or
dec
insb
js
iret
js
push
push
or
adc
dec
add
jmp
pop
in
add
dec
data16
cmp
data16
outsl
mov
pusha
mov
call
in
int
pop
js
adc
mov
sti
push
xor
xchg
mov
jo
call
or
push
insb
add
sti
cmp
mov
sbb
xor
pop
inc
dec
mov
pop
pop
test
popa
mov
mov
jle
add
cmp
test
push
push
arpl
mov
pop
mov
imul
cmp
xchg
push
mov
or
xor
aas
aaa
dec
jne
jmp
push
rcrl
jge
test
and
fimull
jnp
add
xor
adc
push
repnz
sarb
or
call
lcall
adc
sbb
lock
mov
shlb
inc
sahf
adc
call
sbb
mov
enter
lods
mov
push
mov
inc
push
cltd
xchg
in
in
add
cmp
fmull
repnz
pop
fdivrl
mov
nop
aam
cmp
aam
push
testb
mov
push
fstps
sarb
sub
inc
sahf
ja
mov
sub
sub
int3
mov
push
cmp
out
enter
adc
enter
add
cmp
inc
sbb
and
sbbb
rolb
dec
hlt
mov
mov
lea
xchg
xchg
cld
push
add
loope
mov
xor
xor
cmp
sbb
add
repz
adc
je
mov
pop
push
in
test
clc
insl
das
fs
cmpsl
scas
insl
add
pop
push
push
loopne
sub
incl
popa
insl
add
scas
pop
jo
push
sbb
scas
dec
js
pop
sbb
xchg
lret
in
int
push
cmp
out
jle
shlb
imul
and
inc
or
je
mov
pusha
and
push
jecxz
adc
sub
adc
daa
and
ret
or
push
sbb
push
or
pushl
push
mov
pop
inc
loopne
imul
stc
sbb
adc
fidivrl
push
xor
mov
stos
bound
es
lcall
clc
jp
or
pop
subl
loopne
sub
es
push
nop
add
push
rorl
push
sbb
std
push
cmpb
xorl
mov
jnp
in
jle
adc
out
dec
sbb
mov
ret
dec
cmp
in
push
aam
push
jl
pop
xchg
fdivs
ret
mov
sbb
pop
jmp
cmp
push
cli
inc
repz
xor
mov
call
adc
jbe
inc
cmp
jmp
push
ror
int3
in
lock
and
out
sbb
aam
xor
les
pop
or
orb
xchg
das
add
jb
gs
jo
les
inc
arpl
jnp
xchg
lock
inc
and
pop
ret
lock
xchg
mov
aas
xchg
cld
add
mov
or
lea
call
jne
inc
cmp
jne
sti
subb
test
call
adc
es
mov
xor
jbe
add
cvttps2pi
pop
daa
scas
and
pushf
or
jecxz
or
ret
in
xchg
add
ljmp
push
loopne
push
lds
mov
sbb
mov
adc
pop
mov
inc
or
mov
arpl
add
in
add
adc
mov
mov
shll
push
lods
xchg
mov
js
outsl
mov
andl
jbe
test
mov
bound
mov
sbb
outsl
cs
push
mov
and
movl
sar
add
les
scas
adc
push
movsb
into
dec
mov
rolb
adc
frstor
in
ja
test
pop
or
mov
inc
adc
jb
enter
clc
or
in
sub
mov
push
les
fdivl
xchg
mov
sbb
push
adc
iret
inc
and
adc
clc
mov
rcll
adc
cmp
je
push
mov
mov
push
inc
clc
les
les
seta
mov
lea
icebp
push
in
jmp
mov
je
pop
jo
dec
xor
enter
aam
sbbb
ja
or
fists
sqrtps
icebp
xchg
ret
incl
ret
fsts
sub
add
shrl
push
popa
jnp
mov
mov
in
popa
scas
sub
and
xor
or
dec
rcll
mov
pop
xor
scas
add
cmp
cmp
add
rcr
addb
add
test
mov
inc
sbbb
rorb
and
dec
or
dec
adc
out
xor
int
enter
call
stos
jmp
dec
sbb
pop
mov
inc
sub
jecxz
xor
sbb
or
and
xor
fsubs
iret
mov
fdivrs
sarl
imul
mov
push
and
lock
sub
jne
cmp
nop
mov
cld
adc
push
outsl
adcl
push
jge
xor
push
aam
pop
jge
pop
adcl
cmpsb
cmp
inc
inc
data16
repz
xchg
inc
rol
cmp
int
inc
sbb
out
add
lret
movsb
xlat
add
in
clc
rcrb
jmp
movsb
imul
loopne
in
fmuls
dec
rolb
cmp
rcrl
mov
pusha
test
movsb
mov
dec
imul
lock
xlat
scas
imul
jle
js
shll
push
in
in
mov
pop
sahf
in
into
push
dec
mov
lcall
xor
sub
and
jl
sbb
jmp
sbb
aam
flds
imul
in
dec
sbb
clc
push
mov
in
add
leave
ss
out
pop
clc
push
dec
out
hlt
and
or
inc
xchg
dec
sbb
call
lock
leave
ss
cwtl
jmp
or
and
fcoms
pop
loopne
imul
sbb
push
sbb
mov
xchg
mov
shrb
xorl
imul
test
sbb
fs
xor
pushf
or
ss
mov
insl
mov
push
push
dec
loopne
lods
mov
xchg
fstl
mov
adc
sbb
ret
test
xor
mov
daa
sbb
sub
pop
mov
rcrl
lock
add
add
int3
xchg
int3
sahf
add
pop
mov
add
mov
cmpsb
jge
sub
faddl
or
xor
enter
movsb
xor
and
adc
xchg
dec
nop
test
mov
aaa
push
mov
inc
add
sbb
jmp
subl
lock
mov
hlt
mov
sbb
cmp
enter
mov
jno
xchg
sub
mov
movsb
in
addl
fsubp
repnz
pop
pop
pop
orl
pmuludq
in
fildll
adc
je
mov
sbbl
dec
cltd
out
into
pop
pop
ret
inc
scas
test
or
inc
push
pop
cltd
iret
cld
adc
mov
mov
lcall
inc
test
scas
or
test
adc
sbb
xor
xor
adc
jle
add
mov
in
in
cmp
and
enter
mov
add
inc
enter
sahf
jge
clc
xchg
gs
loop
loope
clc
clc
das
frndint
clc
lea
js
cmpb
cmc
sbb
dec
sahf
shrl
adc
mov
std
dec
loope
inc
mov
inc
xlat
ret
cmp
imul
nop
adc
mov
sahf
mov
rorl
fninit
mov
xor
nop
fbld
enter
pushf
adc
loop
push
enter
loop
dec
mov
or
es
lea
js
out
xchg
sub
dec
lahf
adc
and
loopne
pop
sbb
fdivrl
sbb
rolb
mov
mov
dec
push
cmc
push
inc
mov
mov
shrb
jg
push
and
push
mov
clc
fstpt
pop
mov
dec
cs
in
in
sbb
mov
mov
cs
mov
dec
rorb
xchg
dec
cs
enter
cs
xchg
dec
sahf
lods
push
int
dec
fsubs
or
iret
enter
loopne
enter
mov
addr16
mov
aam
jb
jae
in
push
loope
lock
xor
loopne
xor
hlt
xchg
nop
inc
sub
pop
outsb
add
jmp
push
ljmp
add
outsl
je
xchg
inc
push
inc
fs
jne
dec
jne
outsb
lahf
sbb
dec
adc
outsl
fs
outsb
jns
xchg
dec
dec
jb
pop
outsl
jb
insl
jo
repnz
aas
xor
jb
insl
push
je
push
push
cmp
jo
inc
fwait
and
push
aas
enter
loopne
inc
jae
push
inc
jns
push
outsb
mov
mov
outsb
and
and
pop
xchg
sub
cld
les
jecxz
ret
dec
sti
outsb
sbb
add
and
inc
pusha
adc
dec
insb
inc
orb
out
dec
jb
push
out
fcompl
outsb
movsl
addl
aaa
sarl
add
or
fnstenv
dec
mov
fcmove
lret
cmp
loopne
inc
insb
push
push
ds
jo
push
outsl
push
adc
dec
dec
inc
and
fimull
pop
xor
mov
shlb
in
addl
test
cmp
ret
inc
fcoms
inc
mov
mov
sbb
daa
mov
add
loopne
enter
adc
subl
data16
test
or
movl
aam
push
sbb
pop
push
inc
jb
lret
cmp
inc
repnz
fldcw
cmp
cmp
xchg
cmp
jnp
pushf
xchg
xor
jb
pushf
adc
xchg
fs
add
inc
mov
je
ds
sbb
or
addb
xor
xchg
push
add
jb
sbb
rolb
inc
xchg
adc
adc
add
insl
jo
xchg
xor
test
leave
mov
xchg
sbb
add
pushf
lds
push
outsb
divl
mov
jo
int
or
xor
mov
jo
xor
adc
pusha
xor
jl
dec
cld
mov
and
mov
pop
iret
in
lret
fwait
xchg
add
add
rolb
cmp
inc
jo
daa
push
and
call
in
mov
in
mov
in
adc
mov
add
push
in
pop
and
repnz
pop
pop
in
push
and
inc
jmp
test
sbbl
inc
out
mov
cmp
out
das
sbb
aad
lock
xor
movsl
cmp
jg
addr16
cmp
outsb
sahf
sbb
clc
sub
pop
push
loopne
sub
dec
je
in
popa
outsb
sbb
outsl
popa
cmp
push
xchg
daa
andb
enter
std
add
and
adc
gs
out
in
call
dec
pop
fldl
mov
xchg
in
clc
and
add
hlt
mov
jmp
lock
subb
mov
ljmp
cwtl
in
call
movl
push
gs
jmp
sub
inc
loopne
rcll
push
jmp
mov
aas
mov
or
sub
xchg
les
fcomp
adc
lret
ror
add
in
xor
daa
nop
int
cmp
lock
xchg
push
out
dec
loopne
or
addr16
int
mov
fimuls
ja
push
sub
jecxz
les
ret
divb
cmpsl
adc
jecxz
push
add
sbb
adc
cwtl
push
or
inc
pusha
sbb
and
test
dec
mov
jb
or
jmp
inc
lahf
dec
mov
jo
add
cmp
in
cmp
icebp
test
mov
adc
enter
push
and
and
in
data16
sbb
aas
add
or
add
repz
lock
dec
pop
xlat
jbe
xor
jge
repz
test
jp
out
std
and
xchg
jne
pushf
xchg
xchg
xchg
ret
mov
mov
fdivrl
subb
and
in
pop
call
push
call
ret
insb
or
inc
add
inc
push
add
pop
pushf
sub
std
or
adc
jne
and
inc
je
dec
mov
mov
clc
jmp
and
and
lock
loopne
xor
jmp
imul
lea
push
call
aaa
sub
shrb
lea
pop
pop
fcmovnu
insl
adcl
out
mov
sbb
sahf
jmp
inc
lea
pop
and
lcall
push
scas
jecxz
ret
loope
pop
subb
in
inc
push
jbe
test
mov
cmp
push
insl
clc
jne
adc
push
into
inc
rcrl
lret
xor
js
pop
xchg
adc
or
or
add
sbb
jne
add
sbb
aas
inc
sub
fcmovnu
dec
arpl
outsb
adc
iret
or
div
and
push
jmp
or
mov
jp
test
out
pop
and
or
je
mov
jo
lock
shlb
je
ret
or
mov
loopne
inc
lahf
orl
cltd
or
pop
aaa
add
iret
inc
pop
sub
or
adc
pop
and
in
loopne
leave
inc
xor
in
in
sbb
nop
sbb
loopne
out
pop
jmp
push
jo
and
mov
add
add
mov
pop
or
adc
add
mov
or
in
cmp
in
ret
outsb
pop
mov
push
cmp
xchg
push
aad
cwtl
orl
push
fisttpl
pop
add
or
dec
sbb
in
js
call
notrack
cltd
jmp
jns
insl
stos
adc
sbb
push
loopne
cltd
xor
dec
incl
adc
cmp
dec
and
inc
pop
sbb
data16
adc
shll
inc
in
jmp
push
push
or
adc
sti
jecxz
sbb
sub
or
pop
adcl
je
lock
je
pop
jne
imul
sbb
dec
adc
inc
add
or
jae
mov
or
ja
or
or
inc
mov
adc
int
inc
xchg
and
sbb
outsb
and
mov
push
movsb
push
add
xor
push
push
lds
and
setnp
stc
sub
mov
lea
rorb
jge
or
inc
mov
xor
mov
pop
test
repnz
adc
inc
sub
pop
inc
push
inc
push
push
jns
cli
or
mov
shll
iret
daa
mov
cld
pop
fsts
sub
testb
fildll
inc
inc
cmp
or
cmp
cltd
or
test
data16
leave
jbe
push
ficompl
rolb
xor
hlt
movsbl
cmp
jmp
and
in
mov
pop
ja
cmc
jne
add
dec
lcall
fisubs
sub
jmp
and
sbb
cltd
inc
scas
push
das
jmp
std
add
testl
or
jno
lock
xorb
add
push
jae
call
sub
lock
fstpt
mov
xor
out
xor
sub
scas
cmp
in
nop
xor
outsl
cli
in
addr16
mov
scas
leave
mov
xchg
mov
inc
cltd
mov
pop
or
cmp
or
jb
push
ficoml
and
dec
call
sbb
sbbl
sub
and
sbb
cmp
gs
ljmp
fwait
push
push
mov
xor
ds
sbbl
pop
push
push
dec
jecxz
xor
stos
pop
pop
mov
sub
jnp
sub
ljmp
cmp
lds
push
test
sbb
cs
test
orl
shrl
sbb
or
shr
sbb
sarl
jne
mov
push
imul
cmp
or
adc
in
rcrb
out
mov
roll
mov
jns
scas
std
pop
pop
fs
insb
lcall
jbe
pop
fs
mov
add
addl
sbb
inc
push
fs
xchg
and
sbb
sbb
cs
xor
or
jns
stos
add
loope
in
push
cmp
cmc
cld
bound
pop
jns
push
sub
or
mov
mov
push
sbb
fnsave
mov
dec
adc
fistpll
pushf
or
jo
mov
ljmp
imul
movsb
sub
cmc
in
into
sahf
sub
and
hlt
mov
pop
jb
int3
shr
sti
sbb
mulb
mov
jmp
jmp
adc
add
roll
dec
loop
roll
adcl
or
int
and
mov
pop
das
ja
arpl
pop
push
cmp
rcrl
xchg
sub
call
mov
fisttps
or
sti
std
jg
sub
xor
mov
lea
cmc
adc
jo
sbb
add
xchg
bound
data16
and
mov
xchg
push
daa
daa
test
test
ljmp
add
fisubl
push
adc
mov
and
inc
cmp
pusha
and
jg
jmp
shl
and
in
and
add
pusha
das
add
inc
pop
inc
addr16
push
push
adc
outsl
cmpsl
xor
addr16
xor
xor
adc
sbb
adc
pop
imul
adc
inc
outsb
xor
shll
shrl
idivb
add
es
inc
add
sub
push
xor
es
and
push
in
cld
adc
lods
inc
mov
push
mov
pushw
lods
movsl
ljmp
cltd
fdivs
sbb
xchg
xchg
push
lock
push
sar
cmp
pop
inc
leave
shl
cmp
fistps
data16
push
push
push
out
mov
insl
sbb
jo
mov
cmpl
add
in
mov
mov
cmp
jo
addl
pop
dec
je
jmp
outsl
jecxz
add
je
cltd
push
push
arpl
inc
cmp
test
add
xor
shrl
and
push
fisubl
push
cmp
fnstenvs
add
sbb
addb
mov
outsl
inc
sub
xchg
lods
adc
fwait
test
mov
mov
mov
fists
sub
sbb
daa
mov
aaa
or
daa
add
jmp
inc
pop
lock
mov
push
jae
aaa
and
jmp
push
pop
and
dec
and
adc
outsl
push
and
sbb
lahf
in
addr16
mov
jecxz
jb
mov
or
add
xchg
sub
adc
pop
add
xor
mov
jmp
xadd
xor
arpl
mov
cmpb
out
and
jne
adc
orb
add
push
fs
test
sbb
push
dec
push
roll
fistl
inc
xchg
dec
adc
adc
loope
jle
and
cld
movsl
es
inc
jecxz
jo
cmp
add
mov
lcall
sub
jne
punpcklbw
imul
int3
test
mov
jp
mov
adc
mov
pop
mov
push
aam
mov
cmp
pushl
add
xchg
pop
pop
out
adc
out
pop
sub
andb
add
jle
inc
push
dec
adc
cmpsb
imul
adc
adc
adc
mov
and
nop
pop
call
sub
inc
add
pop
mov
mov
or
push
xor
imul
push
sub
add
bound
mov
inc
lcall
lahf
add
mov
inc
xchg
or
enter
pop
lret
jl
adc
push
xchg
inc
xchg
gs
test
sbb
push
xor
xor
sbb
push
push
adc
in
and
aaa
dec
jne
stc
in
dec
xor
aaa
sbb
test
ficoms
lahf
adc
int3
add
xchg
iret
test
xchg
in
les
jne
push
or
or
jno
daa
clc
in
sbb
dec
mov
push
sub
dec
mov
cmp
ret
inc
xchg
pushf
nop
mov
jmp
dec
call
mov
mov
daa
sbbb
sbb
sbb
pop
fldl
or
hlt
inc
dec
sbb
mov
sbbb
or
call
sbb
sub
sbb
lods
lods
insl
rorl
mov
adc
mov
inc
rolb
test
xchg
sub
dec
jnp
es
dec
or
lcall
sbb
dec
imul
or
dec
mov
add
mov
scas
ret
out
shll
lock
sub
lcall
adc
in
inc
adcb
lock
mov
and
mov
pusha
xchg
pop
push
arpl
mov
and
pusha
sub
dec
mov
daa
inc
sbbb
mov
jg
xchg
dec
cmp
clc
mov
mov
add
inc
pop
andb
and
in
cs
xchg
bound
icebp
push
pop
or
pop
or
and
push
push
inc
xor
and
imul
push
mov
cmpsb
mov
add
or
push
pop
xchg
das
fstl
mov
jns
adc
inc
sub
push
movsl
jmp
sbb
and
mov
dec
push
adc
add
inc
js
pushf
sub
jmp
loope
sbb
inc
cli
jb
pop
lods
ret
and
pop
adc
dec
inc
add
mov
jecxz
pop
in
popf
mov
dec
pop
adc
repnz
scas
testb
leave
cmp
daa
cmp
xlat
jmp
loopne
xor
addl
lods
dec
xor
ds
xchg
das
push
adc
mov
fmuls
sbb
mov
es
xor
daa
jmp
out
add
or
out
out
sub
add
mov
push
orl
loope
and
popf
mov
inc
or
push
pop
and
add
jp
xchg
lcall
push
scas
mov
imul
xchg
pop
inc
pop
shll
cmp
lcall
xchg
das
xor
aaa
mov
add
jno
xchg
in
cmp
jnp
mov
sbb
and
flds
pop
adc
cmp
sub
fildll
scas
xor
pop
mov
cli
push
incl
sbb
outsb
pop
push
add
rclb
aad
sbb
sub
das
cs
push
pop
fs
arpl
cmp
push
add
dec
mov
insl
fidivl
adc
dec
adc
jle
insl
shll
rclb
rcrl
loope
push
stc
dec
adc
addb
push
sbb
pop
or
push
mov
jecxz
sbb
mov
jmp
adc
rorb
push
imul
sbb
inc
push
mov
add
rorb
cmp
and
subl
enter
addb
mov
sub
inc
push
adc
adc
pop
lds
xor
jecxz
jmp
dec
call
and
fstpl
xchg
sub
mov
adc
outsb
lods
je
add
rcrl
or
mov
and
adc
push
xor
mov
int3
adc
pop
pop
push
faddl
add
dec
inc
push
xchg
cmp
xlat
push
sahf
imul
xor
mov
pop
sbb
enter
lcall
insb
popa
popa
cltd
cmpsb
sbbl
mov
add
inc
fildll
add
nop
fnstcw
or
inc
mov
sbb
inc
lahf
pop
xchg
movswl
push
cmpsl
adc
scas
sub
mov
mov
fisttpll
fildll
push
adc
mov
push
add
add
ja
dec
push
nop
in
dec
je
adc
push
sbb
jmp
pop
dec
shll
insl
sbb
xchg
stos
mov
roll
push
pop
daa
imul
push
ss
fadd
xor
repz
cltd
fsts
sbb
sbb
inc
test
cmc
inc
adc
push
sub
sub
jmp
iret
test
scas
mov
jmp
push
adc
add
adc
fistl
aam
jae
sbb
dec
adc
jecxz
add
in
xchg
es
ficoms
sbb
sbb
dec
pop
fstp
add
inc
push
shlb
test
cmpsb
cli
or
add
repnz
pop
jb
sub
fisttpl
pop
dec
hlt
fildl
fisubrl
mov
sbb
and
in
add
sub
dec
int
imul
cmpsl
sbb
add
and
fcoml
sub
stos
add
cmp
loope
popf
or
in
push
pusha
dec
je
sub
movsb
and
inc
ret
loope
shl
cmp
xor
cs
pop
pop
int
or
rsqrtps
popa
in
push
out
pop
inc
dec
data16
adc
push
lock
push
ret
inc
xorl
push
test
scas
push
enter
pop
pop
xchg
and
sub
and
sbb
and
repnz
push
and
shrb
cmpsb
push
push
cli
or
pusha
jmp
push
jne
mov
insb
iret
push
cmpsl
adc
pop
adc
inc
inc
push
or
pop
leave
popa
mov
addr16
or
and
and
mov
addr16
mov
adc
add
mov
or
or
push
adc
andb
stos
or
and
rolb
inc
pop
adc
and
scas
pop
mov
inc
lcall
imul
ret
inc
push
outsb
and
adc
mov
cmp
push
sub
aad
jns
lods
mov
dec
inc
pop
cmp
xchg
sbb
jo
je
and
rclb
add
lea
das
mov
mov
sbb
push
flds
seto
ja
mov
fildll
sbb
and
push
in
jb
push
fildll
inc
leave
addl
jge
jb
pop
mov
fildll
jb
jb
mov
imul
jle
mov
mov
aam
and
sarl
and
lcall
daa
push
insb
pop
ss
push
jno
iret
push
xchg
xchg
adc
and
or
movsb
es
and
add
dec
in
fcompl
leave
pop
pusha
mov
inc
push
adc
das
mov
and
mov
dec
and
insl
push
adcl
and
inc
xor
push
xchg
repz
pusha
inc
into
pop
leave
add
inc
pushf
ficoms
or
std
pusha
je
pop
push
and
gs
popf
shll
in
fisubrl
data16
fiaddl
push
adc
cs
es
icebp
push
inc
daa
fildl
lods
stos
bound
pop
mov
pop
mov
cmp
xchg
mov
add
mov
push
lods
or
mov
pop
add
mov
sub
call
rolb
in
mov
mov
push
xchg
mov
shr
psubusb
dec
outsl
sbb
sbb
leave
addl
div
into
daa
cmp
sub
popf
push
mov
add
xchg
or
cs
repnz
je
and
adc
jb
gs
idivl
fnstcw
mov
lock
sub
hlt
jno
hlt
sarb
js
rcl
roll
pushf
sarb
mov
cwtl
cmp
sub
mov
loopne
jns
push
dec
inc
pop
jno
sbb
add
cld
js
pusha
add
and
adc
xchg
adcb
inc
bnd
and
cmp
cmp
aaa
xor
test
dec
push
stc
sub
sub
js
xchg
sarb
sub
add
xchg
in
loope
or
adc
addb
int
jge
push
jp
pop
push
add
push
sbbb
sbb
sub
lret
add
bound
push
sbb
mov
jmp
adc
daa
mov
mov
sub
xchg
sti
xchg
mov
in
sti
mov
inc
add
mov
push
fwait
cmpsb
imul
int
sub
add
rdmsr
ficompl
dec
shrl
push
dec
sub
lahf
mov
insl
popf
push
xchg
inc
xchg
addr16
pushf
and
dec
pushf
scas
es
or
mov
cmpsb
xor
movsl
mov
push
cmp
in
pop
repnz
or
addb
orl
pop
mov
add
push
movsb
enter
cmp
fsubr
inc
fwait
mov
xchg
into
push
or
loopne
xchg
jnp
sahf
fsub
pop
push
fsubl
pop
adc
add
pop
enter
neg
or
xor
aam
aaa
cmpsb
sub
mov
fadds
jl
fstps
int3
jbe
int3
test
fidivl
push
pusha
or
js
and
scas
insb
fcoms
mov
sub
shrb
shlb
ds
ss
mov
cmp
pop
mov
into
ljmp
xor
sub
cmpsb
xor
mov
rcrb
in
or
mov
inc
mov
mov
rorl
adc
or
jno
push
shrl
cmp
push
sbb
cmp
negl
movsb
mov
mov
mov
sbb
mov
xor
sbb
sbb
stos
xchg
jno
xor
or
jmp
adcl
jmp
popf
mov
mov
gs
xchg
mov
or
mov
and
add
xchg
pop
movsb
push
or
mov
or
mov
and
mov
in
enter
out
jmp
nop
pop
popa
das
or
push
je
adc
in
dec
sub
adc
iret
push
mov
cmp
sbb
xchg
cmp
ret
das
dec
and
jns
mov
das
loopne
stc
inc
adc
xor
rcl
test
inc
scas
and
lock
jne
in
test
mov
and
and
mov
dec
nop
imul
push
push
mov
pop
leave
or
xor
pop
lcall
scas
shl
lcall
pop
xor
dec
data16
add
push
testb
xor
mov
push
mov
or
mov
test
push
xor
push
xor
and
dec
or
push
aaa
rclb
mov
cmp
test
cli
in
in
dec
sbb
jnp
xchg
jl
movsbl
pop
sbb
aaa
aam
shrl
add
ror
add
jne
das
or
push
lret
ret
add
addr16
adc
cmp
rolb
jns
jno
mov
pop
int
ljmp
sub
xor
lcall
daa
mov
roll
nopl
sbb
rclb
or
xor
jge
push
lods
test
mov
nop
sbb
ss
in
pushf
fmull
inc
or
test
and
pop
test
movsb
aam
push
es
enter
mov
cmp
dec
sbb
cwtl
jno
adc
test
aaa
outsl
out
rcll
aaa
and
popf
nop
aaa
dec
sbb
aaa
push
pop
in
mov
int
add
pop
adc
mov
test
xor
xchg
imul
mov
cmp
int3
loopne
mov
lds
or
rolb
test
cmp
ret
gs
sbb
and
adc
mov
jecxz
cs
inc
cmp
adc
add
je
jmp
sub
test
aas
or
cmp
movsb
sub
jmp
gs
js
add
pop
mov
push
stos
ja
data16
cli
adc
add
jne
adc
xor
mov
dec
cmp
ja
adc
inc
pop
dec
aaa
inc
stos
push
jbe
inc
pop
or
lret
sub
sub
data16
xchg
xor
add
inc
insl
xor
push
xor
dec
inc
inc
cmpsb
or
pop
clc
or
cmp
idivl
pop
out
push
xor
std
sahf
adc
rol
mov
pop
jmp
movsw
xor
mov
or
fdivrs
jae
cmp
dec
lods
push
add
adc
mov
mov
xor
cmpl
in
test
add
fldt
aam
fists
in
or
fs
fldl2e
inc
push
fistl
push
popa
lahf
sbb
cltd
xchg
push
push
pop
dec
or
or
or
add
loop
inc
sub
ja
loope
cmc
aas
add
leave
pop
nop
imul
push
add
js
dec
add
rcrb
int
mov
xchg
push
or
push
pop
sbb
cmp
or
or
mov
leave
pop
xor
pop
cmp
es
imul
jecxz
adc
cmp
sbb
stos
and
lds
or
adcb
sub
cvtdq2ps
cmp
jo
fsubs
mov
and
cmpsb
test
shll
lock
or
jne
loope
push
sub
sub
cmp
dec
sbb
out
mov
cltd
std
testb
je
xor
adc
cmpl
ja
jmp
and
mulb
sub
and
jne
das
addl
test
ljmp
aas
int3
add
dec
cmp
lahf
xchg
hlt
xchg
and
lmsw
lahf
add
xchg
push
jmp
das
push
pop
adcb
jno
add
pop
pop
bswap
xor
enter
loop
addl
insb
imul
sbb
mov
negl
xor
pop
jmp
pop
hlt
fsubrs
ret
pop
lock
imul
int3
hlt
test
in
iret
loop
scas
adc
push
xchg
outsl
ficoms
push
mov
fcoms
popa
and
ret
xchg
jae
sbb
rorb
lds
jne
or
xor
loopne
adc
xchg
jne
or
mov
cmp
pop
xchg
mov
repnz
fcomps
sbb
pop
ret
xchg
shrl
lds
int
ss
push
popa
aas
add
sub
jmp
aas
in
or
orl
out
clc
push
add
ss
adc
cmc
add
xor
outsl
push
in
ret
xor
stos
jbe
sub
or
repnz
enter
je
mov
and
nop
aas
lock
addl
lea
xchg
in
aas
xor
in
sar
or
pop
xor
je
ja
pushf
dec
dec
dec
inc
clc
addr16
jb
add
inc
adc
insb
and
in
arpl
lcall
jg
std
inc
addl
adc
sbb
shl
test
cmc
push
push
jecxz
sti
adc
adc
sti
or
push
dec
scas
lds
ja
mov
insb
sbb
rclb
mov
cmp
cmc
xor
xchg
ja
mov
pusha
cmpsl
test
adc
outsb
imul
fwait
sub
js
jle
and
sub
xor
fmull
xchg
sub
fs
or
or
dec
adc
cs
flds
push
and
dec
das
mov
add
dec
sbb
or
pushf
or
jmp
out
sub
or
fs
add
cmp
adc
repnz
and
stc
or
xchg
lcall
je
imul
pusha
lcall
seto
push
les
add
xchg
pop
imul
dec
jb
mov
sub
idivl
and
pop
push
test
outsl
shrl
and
inc
jbe
inc
adc
jecxz
dec
xor
cmpb
sbb
icebp
jmp
sbb
cld
xchg
jno
fidivrl
mov
cmp
fildl
lahf
clc
shll
sbb
sbbl
add
inc
xor
dec
mov
lcall
fs
and
xor
mov
int3
inc
cmp
sub
sbb
je
dec
je
repz
ficoms
mov
add
adc
jge
in
jmp
daa
sub
pop
pushl
fcmovbe
add
xor
cmpsb
pop
arpl
nop
xor
or
gs
in
dec
dec
and
or
adc
es
push
and
dec
mov
aaa
movsb
enter
pop
jno
sub
das
inc
and
add
xor
lahf
inc
in
leave
jb
and
fs
or
xor
andb
lret
std
adc
ret
cmpsl
int3
sub
roll
aam
mov
arpl
sar
jno
or
lea
stc
adc
pop
addl
addr16
je
xchg
jo
cmp
adc
jae
inc
mov
mov
jae
push
lret
cmp
jge
jne
dec
aam
xchg
pop
xor
jne
and
ficoml
xor
inc
sarb
adc
or
jb
jmp
inc
add
sbb
lock
in
inc
cs
sub
mov
mov
clc
hlt
ja
nop
nop
ret
sub
stos
inc
and
mov
or
insl
cmp
inc
mov
jge
add
mov
mov
insl
lock
decb
cmpl
cmp
or
stc
add
popa
push
sbb
add
dec
push
lods
loopne
and
dec
lods
push
sbb
jnp
jo
pop
popa
fmull
push
jmp
add
fstpl
fwait
xchg
inc
jb
ret
dec
sbb
fldenv
sub
icebp
inc
xchg
decb
fsubr
pop
int
adc
stc
dec
pusha
cmp
popa
push
ret
dec
xor
test
sbb
inc
and
pop
xor
in
pop
leave
mov
mov
or
rclb
lods
pop
add
dec
xor
rcr
jmp
mov
dec
shrl
cli
test
mov
dec
cmpl
xchg
pop
mov
in
call
in
pop
cmp
jne
dec
xor
xor
test
shlb
add
sub
dec
les
sub
mov
in
es
mov
or
dec
or
push
insl
out
pop
pop
in
or
xor
stos
push
fadd
xchg
pop
ret
push
add
mov
xchg
pinsrw
xor
dec
xor
sarl
sub
repnz
rorb
je
sub
mov
xor
sbbb
cmp
or
push
and
jmp
iret
daa
cmp
sub
cmpsb
push
loopne
jmp
xor
jbe
lds
mov
push
cmp
xor
out
popa
pop
and
ret
xchg
pop
leave
pop
jmp
pop
cmp
mov
lret
dec
cs
sbb
stos
or
sub
dec
iret
add
add
inc
push
pop
jl
mov
in
loope
sbb
pop
inc
insl
jo
jns
adc
pop
mov
aaa
das
push
or
popa
and
xchg
cmp
daa
pop
imul
aas
insb
add
or
sbb
inc
outsl
jne
xchg
jb
outsb
arpl
inc
popa
je
dec
insb
add
pop
call
cs
inc
push
lods
pusha
sub
cmovb
imul
and
outsb
imul
inc
arpl
arpl
xor
inc
lock
iret
push
fdivl
push
ljmp
daa
and
sbb
add
test
clc
nop
push
pop
mov
adc
clc
outsb
dec
sti
lock
mov
ja
xor
leave
adc
fdivrs
jge
jecxz
sub
insb
das
lock
cwtd
add
xchg
jmp
jno
sub
lea
lea
sub
pusha
mulb
fs
sbb
adc
popa
js
andb
addr16
add
xchg
push
aaa
cmp
ljmp
and
xor
mov
pusha
mov
in
jne
std
mov
push
cmp
in
and
inc
cli
inc
inc
outsb
loop
rclb
push
mov
pushw
add
or
in
rolb
popa
fnstenv
xor
out
dec
jge
mov
in
sub
dec
fwait
or
das
mov
xor
sub
jg
mov
cmp
jmp
pushl
push
or
push
jl
out
lea
cs
call
adc
mov
dec
push
lea
push
data16
into
jns
lds
cmpsl
icebp
fcoms
ljmp
cmp
je
aad
push
cmp
sbb
aas
into
sahf
clc
xchg
pop
loopne
add
ret
lea
daa
imul
mov
lea
add
inc
add
subb
jmp
daa
mov
jb
cmp
adc
xor
sub
ret
incl
push
mov
sbb
fistl
add
push
shrb
lock
adc
inc
or
and
push
mov
ret
dec
and
rcrb
gs
pop
add
jecxz
popa
es
mov
fsubrp
arpl
pop
lods
add
pop
ret
ficomps
mov
orb
loope
mov
add
test
icebp
adc
cmp
add
fisubrl
pop
pop
and
mov
pop
mov
push
dec
mov
aad
cmp
popa
inc
jle
loope
jle
cld
dec
push
pop
cmp
mov
sti
cmp
cmp
setg
inc
mov
xor
cmpl
mov
fnstenv
xor
enter
push
inc
and
push
in
rorb
fldenv
xor
pop
orl
pop
or
inc
xor
inc
test
mov
sub
xchg
lock
dec
add
loop
pop
push
sar
pop
or
dec
lahf
movsl
sbb
add
dec
jne
xchg
int3
mov
jb
push
cmp
push
inc
mov
nop
insb
enter
incb
mov
xchg
incl
ss
adc
popa
pop
es
jae
dec
inc
sbb
add
and
dec
add
xor
in
cmp
cmp
mov
inc
out
jno
subl
jae
jne
int3
mov
adc
or
mov
mov
adc
sbb
mov
movsb
lret
xor
hlt
add
ja
sbb
fistps
fsubr
js
xor
nop
sub
lock
imul
js
or
scas
dec
dec
dec
dec
scas
nop
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
cwtl
cltd
lcall
popf
sahf
dec
dec
dec
dec
lahf
addb
addl
xchg
dec
dec
mov
dec
test
mov
popa
pop
enter
or
cmpsl
ret
pop
or
pop
mov
ret
push
add
and
add
mov
lea
mov
sbb
outsl
mov
or
cli
call
mov
xor
test
jne
and
push
sbb
cld
imull
inc
dec
xor
cmp
jle
test
sbb
std
push
cli
test
inc
jbe
xchg
add
cmpl
stc
icebp
sti
jge
and
cmp
popa
adc
mov
add
popf
out
leave
test
jle
outsb
cwtl
pop
inc
gs
lret
pop
scas
or
das
mov
fisttpl
mov
orl
int
mov
mov
mov
mov
dec
and
sub
sbb
jge
add
and
pop
mov
jg
in
jne
jmp
cmp
aas
adc
sbb
test
out
jne
sahf
push
mov
mov
inc
dec
aas
mov
cmpb
je
push
pop
push
cli
out
add
decb
mov
adc
sbb
xchg
ds
mov
cmp
jle
fldln2
std
push
add
add
adc
add
mov
xor
pop
fidivrs
add
std
inc
js
mov
in
fisttpl
xchg
push
push
adc
mov
mov
cmpb
pop
cld
or
ja
jb
add
add
call
out
xchg
daa
lock
mov
or
push
mov
push
lea
mov
jb
incl
cmp
pop
dec
and
sbb
fwait
xlat
or
nop
lret
mov
into
inc
mov
lods
cmp
fwait
mov
stos
les
scas
test
inc
movsl
les
dec
lea
in
ret
pop
addb
pop
push
sub
adc
mov
es
clc
inc
mov
push
pandn
pop
test
xlat
xchg
dec
inc
punpckhwd
pop
add
mov
mov
mov
add
or
jg
adc
adc
xor
or
sbbb
mov
xor
ss
add
add
jo
sbb
jp
mov
pop
or
lods
mov
pop
lods
sbb
pop
sub
push
cmpl
inc
lea
jo
lcall
icebp
and
xchg
add
dec
push
add
cld
xchg
cmp
mov
xor
iret
lcall
adc
dec
sub
inc
test
xchg
inc
pop
or
inc
xor
movsb
test
pop
adc
jnp
cmp
jg
add
int
xchg
dec
imul
inc
fisubl
fldt
fstps
and
adc
push
sub
push
add
jnp
lods
xchg
data16
inc
fistpll
pop
imul
or
andl
in
xchg
pop
lret
add
mov
mov
jge
stos
mov
xchg
out
dec
mov
or
and
cmp
les
push
out
sbb
mov
sbb
aam
xchg
push
fistpll
loopne
stos
sub
jp
xor
mov
pop
mov
addb
in
jmp
pop
jmp
cmp
dec
add
jmp
aaa
add
or
push
xchg
or
out
int
pop
daa
dec
or
mov
jp
std
add
add
jno
pushl
jl
add
call
ja
rol
js
add
mov
mov
adc
movsb
and
insb
push
pop
cmpb
sbb
je
adc
adc
loopne
lret
mov
or
dec
add
enter
lahf
icebp
jbe
fnstcw
or
fxch
mov
inc
notb
mov
jne
xor
nop
or
inc
fwait
hlt
push
call
lea
pop
out
pop
push
loop
and
pop
mov
sub
test
scas
and
andl
into
test
push
or
dec
cmp
out
dec
pop
push
dec
or
std
scas
mov
mov
cvtdq2ps
jb
imul
mov
inc
dec
adc
and
pop
jb
sti
xchg
xchg
popa
insl
enter
test
pop
xor
popf
popa
hlt
test
bound
xor
sub
inc
pop
inc
inc
push
lret
xchg
mov
add
aaa
or
es
or
mov
scas
dec
outsb
outsw
lret
jge
add
add
adc
pop
or
or
dec
lods
sub
sahf
or
add
or
mov
xchg
addr16
ret
pushf
xor
sub
negb
cld
pop
js
mov
jbe
or
pop
in
sbb
mov
mov
jb
xor
mov
push
push
call
rcll
mov
jb
jo
popa
jb
and
push
addr16
cld
jmp
push
mov
mov
sbb
mov
add
pop
inc
iret
test
ds
imul
pop
dec
sbb
scas
dec
mov
lahf
adc
pop
add
jge
shl
adc
dec
or
emms
jae
mull
lahf
icebp
stos
shrl
inc
cmp
in
out
pop
lock
add
imul
cld
or
or
jnp
mov
stos
pop
jp
repz
xor
mov
insl
jle
pop
push
imul
push
dec
mov
jo
fidivrl
ss
sbb
xor
inc
push
sbb
sub
inc
push
sbb
sbb
sbb
adc
or
fs
inc
or
fs
inc
push
push
dec
dec
adc
sbb
pop
xchg
fildl
les
mov
dec
fistps
dec
pusha
add
push
inc
insb
push
mov
call
sbb
inc
fdivs
xchg
dec
gs
or
data16
cltd
imul
jp
lret
mov
sbb
pop
inc
and
jg
nop
lods
xchg
or
inc
lcall
xchg
add
bound
test
push
sbb
add
imulb
adc
dec
outsl
sbb
sub
loope
xchg
ss
dec
outsb
insb
jns
movsb
shufps
sbb
inc
push
fisubrs
sbb
pop
aaa
push
push
sbb
je
or
insb
or
pusha
mov
cmovge
fs
adc
cmpsb
and
xor
push
fidivrs
test
mov
dec
outsl
add
dec
add
insb
out
mov
js
add
mov
or
mov
mov
inc
lea
or
dec
gs
and
out
pop
cwtl
adc
fsubl
and
inc
jne
jmp
imul
jbe
fidivl
dec
or
push
fldenv
adc
cwtl
call
fs
add
lods
dec
rorl
or
insl
add
sub
sbbl
pop
sbb
lcall
sub
js
xchg
or
adc
sub
sbb
or
outsb
mov
ret
test
fsubrs
ss
jb
xor
stos
in
ds
mov
inc
pop
test
scas
mov
sub
loopne
loopne
mov
and
inc
sbb
adc
mov
cmpsl
cmp
pop
inc
fisubl
mov
cwtl
mov
add
xchg
or
scas
lock
daa
inc
inc
imul
mov
iret
sub
movsb
mov
push
or
mov
or
inc
out
sub
push
mov
mov
sarb
push
xor
pop
mov
sets
inc
adc
outsl
adc
sub
sbb
jg
ja
bound
addr16
mov
fmull
push
mov
mov
and
adc
mov
mov
divb
mov
scas
jl
mov
pop
inc
xor
push
push
sbb
nop
sbb
sar
pop
fcoml
adc
inc
pop
ljmp
scas
sbb
unpcklps
arpl
push
mov
add
mov
xor
in
popf
test
movb
or
movsb
xchg
mov
scas
mov
or
lods
test
and
int3
and
add
push
cmp
cmpb
inc
imul
push
or
xlat
push
cld
xchg
cmp
imul
orl
xchg
iret
andb
sbb
cmp
pop
fucom
pop
xor
sar
adc
push
testl
fs
jo
cmp
aas
repnz
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
push
cmp
xlat
mov
outsb
add
leave
repnz
ds
adc
clc
xchg
xlat
xor
cmpsl
mov
mov
int
pop
mov
in
mov
mov
repz
enter
push
jo
pop
push
int3
cltd
outsb
fwait
mov
cmp
push
pushf
popf
aaa
shrb
int
push
add
cwtl
mov
fadds
or
pusha
sbb
nop
scas
pop
sbb
ljmp
mov
roll
aas
test
xchg
bound
je
pop
pusha
insb
out
nop
pop
or
out
or
pop
pusha
test
mov
mov
pop
int3
push
inc
stos
pop
movsb
jo
fsubrs
xchg
or
dec
mov
push
or
and
pop
aam
lcall
cmpsl
cmp
mov
push
add
xchg
jnp
add
pmuludq
scas
pop
pop
out
adc
arpl
test
es
push
faddl
hlt
stos
daa
or
scas
pop
xchg
stos
sbb
mov
sbb
pop
sbb
aaa
mov
inc
add
in
test
daa
aam
cmp
dec
repz
call
push
adc
je
push
dec
fld
daa
das
xor
sbb
cmp
xchg
das
xchg
outsl
test
inc
mov
scas
je
inc
or
lcall
cmp
in
inc
sbb
adc
stos
imull
pop
xor
push
lret
mov
inc
jno
inc
mov
inc
mov
in
sub
repnz
mov
pop
sbb
and
mov
sub
mov
movsb
jo
les
rorb
cmp
cmp
mov
lahf
pop
mov
invd
or
push
lods
sbb
adc
in
in
or
or
and
xor
adc
adc
and
sbb
and
push
xor
sub
adc
hlt
in
in
in
mov
push
sahf
fwait
shll
jl
jno
or
sub
sub
inc
push
pop
enter
jb
or
mov
dec
mov
jae
xchg
sub
loop
inc
jl
sahf
mov
repnz
jns
gs
pushf
add
mov
not
xor
data16
add
adc
in
dec
or
mov
adcb
rolb
or
subl
subl
je
xor
mov
inc
je
mov
mov
push
sub
dec
insl
orb
es
inc
xor
mov
fmuls
or
and
outsb
int
sbb
clc
loopne
pop
int3
inc
sub
pop
dec
pushl
loop
adc
js
call
sub
sub
xor
adc
data16
cmp
jne
inc
shll
xor
sahf
mov
mov
xchg
nop
incl
call
rcll
stos
mov
rorb
mov
enter
in
fsubrs
mov
test
dec
es
aam
aam
imul
push
popf
jge
ljmp
add
pop
sbb
inc
int
dec
imul
addb
lret
aas
xchg
and
fidivl
jo
out
shrl
and
scas
mov
adc
mov
out
inc
es
fldlg2
enter
jmp
push
or
mov
sbb
in
ja
sub
cmp
in
dec
mov
jmp
or
sti
adc
cld
aas
cmp
stc
clc
push
push
push
push
push
push
fldt
push
inc
mov
sbb
imul
push
shlb
in
rolb
mov
fadd
push
mov
push
jno
loop
mov
xchg
jo
imul
incl
add
pop
add
cmp
call
pop
jnp
add
rolb
xchg
ja
ja
cmpsb
imul
push
dec
push
lods
and
sub
mov
out
fs
scas
add
lock
lahf
dec
cmp
push
js
pop
cwtl
xchg
push
push
mov
adc
lock
sub
imul
push
fs
and
add
out
call
bound
pop
sub
ja
dec
or
mov
fs
subl
lahf
and
add
test
aad
xor
push
push
push
jp
roll
adc
mov
and
sub
cld
and
insl
dec
cmp
cmp
jne
push
pop
or
pushl
mov
aam
aam
add
loopne
nop
jnp
fisubs
inc
jb
jne
xlat
sub
scas
ds
pop
push
shrb
add
pop
or
add
outsl
xchg
in
push
mov
dec
lods
pop
adc
and
bound
push
ss
nop
js
je
or
aad
jmp
fwait
dec
jl
cmp
mov
mov
das
pop
or
pop
fwait
pop
lret
and
push
mov
sti
add
and
jp
sub
jl
insl
inc
cld
sub
jne
hlt
fnsave
iret
and
jmp
sbb
adc
mov
and
cmp
xor
scas
fidivrs
stc
mov
stos
jg
sahf
jl
loop
je
inc
inc
add
shll
sbb
insl
or
inc
and
pop
mov
xlat
pop
and
jge,pn
add
ret
std
jg
adc
push
jno
inc
bound
or
test
push
insl
daa
sbb
add
and
or
jns
jl
popf
insb
mov
mov
adc
cmpsl
push
xchg
adc
and
push
sbb
push
mov
mov
sub
sti
jae
or
push
inc
or
inc
popa
pop
jns
inc
or
sbb
dec
jne
pop
add
xchg
xchg
pop
add
hlt
mov
cmp
cld
cld
xor
mov
xor
sub
insb
nop
xor
adc
lea
push
into
enter
nop
mov
sub
push
mov
sub
xchg
push
jge
sar
push
fistl
gs
loope
popf
sub
push
push
cmp
and
mov
xor
incl
fdivs
punpckhdq
jne
adc
repnz
jl
inc
es
test
popa
add
and
sub
or
mov
bound
dec
imul
inc
and
or
add
xor
jecxz
imul
sbb
imul
pop
sbb
insb
sub
inc
adc
shrb
and
clc
push
xor
mov
lea
je
addr16
aas
pop
cmp
icebp
push
xchg
lock
cmp
inc
adc
adc
adc
pop
mov
push
lea
push
inc
pop
es
jmp
or
jl
inc
push
jge
push
inc
dec
jne
mov
sub
add
mov
xchg
dec
cmp
inc
sbb
jns
dec
add
push
inc
fs
sbb
rcr
xchg
sub
jns
not
cmpb
mov
dec
popf
rolb
es
add
xchg
dec
mov
in
mov
clc
ficoml
cmp
push
sbb
xchg
xlat
inc
hlt
cwtl
test
sub
cmp
mov
dec
popa
outsl
call
adc
sarb
jb
lds
sbb
sarb
sbb
push
sbb
leave
mov
pop
lock
iret
xor
inc
add
insl
stos
or
adc
or
xor
xorl
or
imul
imul
in
mov
xchg
cmp
push
xor
decl
jecxz
jecxz
dec
call
push
sbb
rcrb
mov
jno
je
lods
add
adc
jo
cmpsb
and
push
sbbl
jo
sbb
out
fimull
and
jge
sti
jne
sub
xorb
cmpsb
or
pushf
orb
outsl
push
jl
sbb
jns
pop
xor
clc
cmp
inc
outsb
jecxz
add
shr
mov
push
push
shlb
push
movsl
xor
pushf
or
cli
pop
mov
xchg
xor
and
ja
pop
addl
add
xor
dec
sub
xchg
enter
call
pop
enter
addl
xchg
sub
popa
ljmp
in
rorl
xorl
xchg
test
jecxz
shlb
xchg
mov
xchg
test
inc
lahf
lods
lds
dec
pop
subl
jo
shll
in
fiaddl
outsb
and
inc
add
inc
jecxz
and
mov
cmpsl
loop
popa
xchg
adc
inc
dec
ja
xchg
pushf
or
test
xchg
scas
orl
nop
add
mov
dec
pop
test
and
mov
outsl
test
push
add
mov
inc
push
dec
dec
inc
push
movl
es
jae
mov
out
cmp
mov
imul
cld
cmp
rol
cwtl
mov
inc
out
push
enter
shll
pop
push
lahf
fisttps
mov
in
lea
xchg
pop
mov
xchg
mov
jo
xchg
addr16
mov
mov
hlt
flds
sub
mov
ds
mov
push
or
jae
addr16
sub
or
or
mov
insl
pop
push
or
xchg
nop
or
jbe
cmc
pop
xchg
lods
fadd
cmpb
pop
lds
cmp
xchg
inc
push
pusha
pop
popa
and
mov
cmp
jne
push
mov
imul
xchg
adc
test
pop
and
aaa
lea
add
add
ret
push
popa
imul
or
adc
cmp
loope
sbb
inc
lret
dec
mov
cmp
push
scas
sbb
sbb
cli
in
or
sub
mov
popa
pop
rolb
movsl
rolb
or
fstl
mov
imull
mov
jnp
fisubrs
clc
mov
int3
mov
les
out
cmp
aad
pop
mov
push
lods
mov
or
inc
adc
dec
lahf
ja
pop
insb
faddl
adc
js
int3
ss
xchg
ljmp
sahf
push
mov
cmp
or
push
in
cmp
mov
aas
insb
dec
push
xor
js
mov
xchg
dec
mov
mov
xor
cmp
popa
rorb
inc
sub
daa
es
mov
xlat
jne
int3
push
fdivrs
mov
or
or
outsb
stos
jno
xlat
arpl
pop
mov
mov
subl
sub
outsb
pop
adcb
push
mov
loope
inc
leave
mov
js
sahf
movsl
push
or
test
mov
adc
pop
push
inc
idiv
and
sbb
mov
popf
cli
xor
cmp
cmp
je
arpl
push
mov
or
or
mov
inc
in
xchg
test
dec
inc
add
pop
jbe
add
ljmp
fisttpl
push
or
mov
rclb
notb
inc
dec
xor
aam
add
icebp
jge
adc
mov
sbb
add
jmp
leave
orl
shll
scas
sub
jp
adc
sbb
idivl
addl
pop
push
or
dec
dec
test
ret
jae
jae
loop
inc
adc
cmp
incl
or
leave
lds
insl
xchg
outsl
inc
ja
mov
hlt
adc
adc
push
push
jmp
xor
aad
pop
scas
into
cld
sub
imul
or
lods
ja
stc
lods
sbb
shl
loop
adc
or
out
and
add
aad
sbb
imul
movsb
movsb
divl
fisubrs
sbb
mov
in
addr16
enter
sub
cmpsb
les
mov
into
test
xchg
fidivl
leave
shl
ret
inc
inc
addb
xchg
inc
lahf
xchg
xchg
into
add
inc
add
ficoms
lret
push
dec
imul
adc
ds
shr
add
xchg
loope
mov
aad
sub
mov
or
add
adc
jne
sbb
inc
icebp
hlt
jnp
daa
rcll
std
and
lods
fs
bound
test
inc
pop
jo
xchg
sbb
pop
jg
rcrb
jecxz
pop
insl
es
push
mov
test
call
rclb
add
imul
or
test
sub
cs
shlb
sete
imul
mov
shl
test
dec
fs
pop
in
sbb
pusha
or
push
jns
in
cmp
jle
lock
jle
and
mov
pop
addb
gs
sub
popa
popa
pushf
adc
dec
mov
sub
push
dec
cmc
dec
dec
inc
lds
xchg
mov
ret
adc
mov
push
cs
inc
sub
pop
mov
lock
dec
mov
call
and
nop
adc
pop
das
pushf
inc
test
sub
fs
inc
inc
push
xchg
in
fs
jmp
jo
mov
inc
jne
sub
jmp
dec
add
add
sahf
or
inc
add
mov
mov
orb
imul
lds
cmp
pop
div
xchg
pop
and
test
or
cmp
push
push
aas
movsb
addr16
enter
cs
sbb
popf
sbb
cmp
jge
aas
into
sub
pusha
cmp
dec
mov
iret
imul
clc
shl
sbb
sarb
call
out
je
xchg
cmp
push
jb
lods
sbb
nop
call
fldt
jb
lds
movzbl
fcmovnbe
adc
int3
mov
mov
sbb
mov
push
add
lsl
pop
jl
or
je
stos
adc
btr
push
loopne
push
icebp
add
mov
pushf
push
push
inc
lcall
jmp
ret
push
jae
mov
and
and
cmp
inc
enter
idiv
popa
pop
testl
je
sbb
sti
aas
or
cmpsl
adc
pop
ja
and
fwait
mov
jb
cmpsb
add
push
out
ret
adc
call
jmp
inc
cmp
jne
inc
decl
jne
les
add
xor
stos
imul
arpl
ret
lcall
add
ficoms
negl
in
aad
inc
inc
in
xchg
inc
jo
lock
leave
in
jae
test
mov
and
cltd
xchg
fildl
adc
pop
add
add
jno
daa
push
leave
test
and
cltd
xchg
add
outsb
les
loopne
mov
fidivrl
movsl
and
sbb
mov
mov
stos
gs
jns
sub
xchg
jne
xchg
mov
add
enter
and
push
add
ljmp
xchg
les
add
jne
push
adc
push
shll
push
xchg
outsb
cmp
push
aas
push
push
dec
out
xchg
mov
push
cmp
ret
sbbl
jp
imul
imul
dec
push
cmp
jnp
xchg
xchg
or
outsl
adc
jnp
insb
sub
jns
lods
adc
popf
push
xchg
and
xchg
dec
add
mov
xchg
adc
sbb
ljmp
pop
jbe
out
fcomps
adcb
and
pop
dec
xor
or
pop
xchg
dec
xchg
cli
xchg
clc
icebp
lock
and
cmp
add
bound
sbb
scas
sbb
xor
addl
movsb
inc
pop
fstpl
xchg
sbb
sub
fwait
insl
mov
clc
jae
andl
cld
inc
mov
mov
pop
mov
adc
pop
pop
inc
xchg
pop
push
push
add
mov
pop
mov
lds
pop
out
mov
and
bound
add
pop
addr16
jo
pop
sar
sub
ja
es
dec
fistpl
xorb
rorb
and
in
pop
mov
xchg
adc
imul
popa
cmp
adc
adc
pop
pop
dec
in
fcomp
je
negl
cli
vphaddubw
jne
add
cmp
dec
in
jo
dec
pop
addr16
arpl
divl
cmpl
cmp
lock
ds
repnz
lock
pop
in
mov
in
sbb
jne
inc
shl
arpl
in
cmp
inc
orl
add
pop
inc
es
inc
mov
sbbl
and
iret
lds
or
ret
cltd
jmp
push
lock
add
adc
mov
fiaddl
subb
hlt
push
adc
insl
adc
or
sub
loope
aad
xor
pushf
stos
dec
xchg
and
and
mov
stos
lcall
neg
outsl
add
and
or
dec
sbb
add
push
mov
std
or
pop
adc
mov
loopne
push
inc
inc
aad
pushf
ret
adc
push
popa
orl
outsb
or
shlb
inc
aaa
mov
mov
mov
shrl
shrb
mov
call
jmp
and
inc
lret
pop
xchg
or
stc
push
xor
in
fwait
pop
call
stos
lcall
adc
fdivp
add
in
in
jae
out
cmc
es
loopne
add
xchg
mov
inc
add
pop
repnz
mov
addr16
adc
sub
ss
sbb
xor
add
and
xor
or
sbb
sub
xlat
pop
in
and
nop
fisubl
movsb
push
and
or
stos
xchg
daa
push
test
inc
imul
popa
imul
mov
es
pop
cwtl
inc
xor
dec
out
test
inc
shll
xchg
popf
iret
xor
js
xor
lods
jecxz
push
or
das
test
outsb
adc
imul
or
or
pop
test
mov
out
or
inc
in
in
or
sar
push
lret
outsl
inc
mov
and
xlat
dec
sarb
sbbb
sub
xchg
dec
sahf
pop
adc
in
cs
clc
clc
add
sahf
aam
shl
xor
lcall
adc
scas
sbb
loopne
out
push
and
jmp
mov
stos
or
mov
xlat
or
dec
add
jb
lahf
dec
fs
imul
push
nop
pushf
addb
push
add
cmp
sub
mov
push
pushf
loope
adc
pop
add
lea
out
jmp
mov
adc
leave
adcl
push
enter
mov
aam
lods
in
ficomps
mov
push
lds
int
lea
enter
mov
adc
push
and
ljmp
or
inc
scas
cmp
cmp
shlb
and
inc
mov
xor
ret
sub
insb
adc
outsb
shrl
and
adc
or
out
into
and
jno
mov
mov
xchg
mov
mov
iret
imul
dec
inc
jmp
flds
push
jp
mov
pop
or
je
or
lret
mov
sub
int
fldl
cmpb
jne
leave
sub
or
add
int
mov
mov
mov
sbb
mov
and
inc
pop
dec
mov
jo
sbb
dec
sbb
hlt
cmpsl
pop
xchg
push
flds
loop
cmp
and
or
adc
cmp
push
cmpsl
nop
bound
and
hlt
mov
mov
pushf
bound
ds
pop
insb
cmc
jae
daa
testb
cltd
shrb
or
mov
mov
cmp
jne
testb
orb
sbb
jbe
rorb
out
cmp
sub
test
and
xor
insb
out
pop
push
mov
clc
sub
and
push
das
ret
xor
cwtl
sbb
and
xor
cmpsb
cs
pop
xchg
adcl
sbb
jnp
pop
add
sub
pop
add
les
inc
add
and
push
loope
dec
fnsave
mov
adc
sbbl
js
or
leave
and
and
sub
jnp
in
jo
xor
test
dec
adc
sbb
push
andb
adc
sahf
fadds
lock
sub
in
cmp
inc
stos
or
inc
dec
pop
lods
out
adc
or
rcrl
mov
add
fldl
or
iret
add
xchg
adc
pop
cld
dec
inc
dec
sbb
mov
dec
sbb
sbb
or
imul
cmp
lock
lock
or
cmp
aas
ret
fisttps
shr
sub
adc
jo
cmp
inc
aas
jge
mov
jae
stc
rorl
ja
mov
add
pop
sbb
jle
and
scas
add
test
out
inc
inc
adc
dec
push
icebp
pop
cmp
addr16
sbb
adc
and
mov
repnz
mov
repnz
movb
decb
mov
push
cmpsl
push
push
mov
mov
shll
rcll
xlat
push
mov
add
sub
xchg
mov
sub
pushf
in
test
jbe
sub
sub
ss
or
inc
sbb
jg
adc
testl
push
push
xchg
sub
ret
jns
xchg
inc
dec
sbb
xor
repnz
push
add
mov
mov
pusha
in
jl
xorl
jo
add
inc
hlt
rcll
dec
dec
push
in
lea
dec
test
xchg
jl
aas
xchg
popf
mov
xchg
cmp
jne
mov
or
jle
sub
jne
adc
inc
jge
sbb
jle
ja
sbb
cwtl
jmp
push
loop
in
hlt
jl
mov
inc
add
dec
adcl
rol
fnstcw
fistps
int3
shlb
sub
sahf
lret
mov
or
inc
cmpl
sets
sub
add
push
xor
jle
push
add
inc
andb
cmpb
loope
sbb
push
sbb
xorb
sub
movsl
xchg
insl
cmp
aaa
mov
pop
scas
push
mov
dec
movl
iret
insl
ret
fldcw
add
jno
sub
mov
call
adcb
adc
out
movsl
xor
mov
decb
or
sbb
test
pop
inc
pop
adc
sub
sbb
lods
jne
inc
mov
dec
js
mov
dec
and
cmpsl
inc
aam
sbbl
scas
lock
or
aas
inc
xchg
mov
lea
pop
sub
xchg
xchg
adc
sub
or
cmp
push
jne
sbb
fwait
inc
pop
xor
jne
shrb
sub
or
xor
inc
mov
ja
jecxz
inc
cmpsl
clc
jecxz
fstps
push
das
lret
pop
sub
add
jno
imul
or
out
fs
dec
mov
sbb
mov
jg
gs
add
adc
push
jb
and
cmp
fwait
shlb
ja
popf
sbb
lret
or
int3
sub
js
xchg
andl
adc
or
sub
aam
sti
add
add
jbe
dec
xor
inc
call
add
call
mov
mov
xor
cmp
cli
push
pop
ja
add
out
lods
imul
imul
sub
cld
mov
mov
shrl
mov
mov
pop
mov
subl
movsl
or
cmpsl
add
flds
push
loop
insb
sub
cmp
lea
and
les
push
mov
scas
clc
shrl
dec
mov
xor
arpl
mov
xor
mov
movsl
cmp
mov
pop
dec
xchg
xchg
fistpl
or
cmp
pop
cmp
xchg
movsl
adc
imul
jno
pop
aas
jg
cltd
insl
lods
pop
or
or
pop
xchg
adc
aaa
dec
cmp
xchg
push
bound
mov
lahf
push
and
inc
fwait
xor
cmpsb
insl
sub
xchg
add
into
rcrl
push
lcall
imul
ja
jg
lret
sahf
dec
cmpl
mov
sub
call
ljmp
movsl
adc
out
push
inc
or
in
adc
jb
add
jmp
xor
cmp
xor
cmp
leave
loopne
fdivl
push
leave
and
mov
inc
or
jns
xor
adcb
test
push
sbb
adc
xor
push
dec
pop
jbe
aad
or
inc
inc
mov
jae
sub
mov
mov
loope
cmp
std
icebp
or
inc
sbb
or
nop
sbb
pop
pop
pop
and
or
dec
or
adc
sub
fiadds
add
sbb
fisubs
lods
outsl
scas
mov
xchg
ja
mov
out
or
lock
daa
sub
push
pop
lahf
sbb
movsb
out
fists
cmp
xor
and
rorb
inc
test
jno
dec
or
pop
or
pop
ret
lods
iret
add
sub
adc
pop
pusha
and
push
mov
add
cld
or
or
ret
cmp
test
mov
cmp
push
jne
les
daa
inc
movl
mov
xor
test
outsb
in
adc
mov
aas
rol
je
dec
or
mov
ljmp
in
iret
xor
add
or
pop
xchg
sub
jle
or
dec
mov
test
jmp
add
popf
and
mov
aaa
mov
add
test
mov
rcrb
mov
sbb
jb
mov
pushf
movsb
leave
mov
in
lods
adc
xor
sub
xor
movsl
dec
ljmp
fwait
out
sbb
test
inc
pop
icebp
xor
add
cmp
adc
push
test
push
mov
push
xchg
sbb
ret
jg
out
sahf
add
sbb
pop
push
pushf
sub
out
in
mov
cmp
es
xchg
addr16
sbb
inc
add
clc
lods
xor
push
or
mov
inc
cld
adc
ret
xor
cmpsl
xor
daa
pop
jo
int
sbb
movsb
mov
add
adc
adc
push
xchg
adc
pop
or
js
jo
mov
dec
push
lods
out
in
inc
insb
es
fnstcw
ljmp
mov
jo
adc
or
or
jns
or
adc
and
or
popf
mov
mov
fstp
lods
fimuls
add
jne
cli
filds
mov
mov
sub
mov
lea
sub
insl
jmp
mov
jbe
mov
inc
or
and
adc
inc
test
jecxz
dec
add
xor
push
std
outsb
xlat
add
push
aaa
push
rorb
and
enter
lock
push
fiadds
aam
inc
push
add
ljmp
push
push
out
mov
es
xchg
mov
je
push
loopne
jmp
or
jle
xor
fldl2e
add
sub
xlat
push
daa
arpl
mov
mov
loopne
loopne
xchg
mull
mov
xor
lret
add
dec
mov
mov
je
lea
and
popf
insl
enter
es
int
movsl
push
and
rorb
jl
inc
jnp
ret
dec
push
outsl
sbb
ja
adc
loop
cld
xchg
outsb
mov
clc
pop
adcl
cmp
repnz
mov
xor
jecxz
testl
dec
xchg
cmp
xchg
fs
inc
shld
icebp
imul
imul
je
in
movaps
xor
sub
sub
in
rol
push
dec
cmpsl
daa
xor
or
in
pop
inc
cmp
jl
or
mov
sub
push
fcomps
inc
push
aaa
add
mov
jmp
addr16
inc
fldenv
lcall
mov
jns
adc
inc
je
fbstp
loope
fwait
cmp
and
inc
jno
mov
pop
mov
adc
or
or
push
fnstcw
lea
or
es
call
pop
subb
xor
cmpb
dec
je
inc
add
popl
mov
push
cmp
xlat
test
inc
dec
or
xor
aad
rcrl
mov
stos
out
add
xor
push
or
repnz
xor
or
push
inc
cmp
dec
ja
pop
add
movsb
shlb
orl
data16
arpl
adc
add
das
fucomp
in
xchg
lret
fcom
dec
adc
lret
cwtl
ret
loopne
pop
movsb
mov
adc
inc
int
jge
clc
add
call
sub
icebp
cmpsl
nop
negl
jae
int3
lret
int3
inc
popa
mov
adc
int3
ds
mov
lock
and
movb
adc
lods
dec
adc
xchg
ffree
int
mov
loopne
dec
or
fmull
into
fcmovbe
jle
dec
hlt
aaa
test
or
fsubs
roll
or
call
nop
adc
adc
xlat
adc
add
call
pop
call
mov
xchg
icebp
cmp
adcb
mov
sbb
lret
imul
sbb
loopne
add
mov
xor
xchg
shl
movsl
cmp
andb
mov
mov
insb
fldenv
stc
add
jge
nop
sub
jne
and
xchg
loope
jne
add
out
loope
test
scas
sub
ja
inc
inc
cmp
xor
mov
repnz
mov
sbb
sub
negb
fadds
in
lcall
insb
or
or
addb
cmpsb
adc
jo
xor
test
xor
leave
xor
subl
insl
scas
cmpl
out
stc
mov
xchg
inc
push
mov
mov
adc
lcall
ret
add
lods
mov
es
out
jmp
dec
jne
and
jbe
add
push
dec
aaa
hlt
das
mov
jne
lods
mov
jmp
ss
or
xor
push
call
mov
cli
push
inc
xchg
pop
or
out
imulb
dec
jne
jp
test
aam
call
mov
je
mov
mov
mov
inc
loopne
mov
sbb
addb
out
pop
dec
or
mov
sub
ret
pop
in
sub
push
jecxz
push
cmp
stos
xor
inc
loopne
dec
mov
sub
xchg
loopne
xor
mov
jle
sbb
flds
xchg
fsts
lret
cli
outsb
sub
jb
cmp
lret
cmp
pusha
mov
pop
xlat
mov
cmp
jl
dec
xchg
sbb
adc
enter
and
shrb
push
cmp
shl
pop
adc
aaa
rorl
adc
jecxz
mov
dec
push
mov
arpl
adc
shrl
adc
push
in
mov
or
or
test
add
mov
add
mov
dec
loopne
or
in
mov
mov
push
and
repz
cltd
or
shll
and
mov
jns
ja
test
inc
cmc
ja
popf
pop
lds
mov
inc
adc
ljmp
cmpsl
je
sbb
fnsave
add
pusha
aas
mov
in
inc
mov
movsl
adc
insl
add
inc
imul
push
pop
gs
mov
loopne
cmpsl
mov
push
pusha
xor
js
mov
jge
and
jmp
test
mov
or
gs
jmp
sub
shlb
sub
pusha
jmp
outsl
dec
sar
xor
testl
cmpsl
add
addb
mov
test
hlt
je
mov
pushf
mov
pop
test
mov
push
test
xchg
mov
fcmove
jl
adc
outsb
std
sub
adc
add
xchg
icebp
test
or
mov
xor
mov
dec
push
int
xchg
jo
test
or
mov
cmc
sbb
lcall
hlt
cs
jo
cs
push
pop
pop
xchg
sbb
adc
addb
inc
and
inc
loope
lret
or
es
rcll
das
cmpsb
add
push
and
ret
sbb
dec
mov
outsb
pop
pop
jecxz
inc
sarl
adc
clc
jo
push
cs
add
dec
ret
sbb
aas
aad
adc
xchg
or
sub
dec
cmp
in
adc
fcmovnb
push
pop
xor
enter
add
xor
je
iret
cmp
adc
sbb
inc
sub
sbb
xchg
cltd
daa
fcomp
test
cmpb
fsubl
or
cmpsl
and
xor
pusha
inc
jo
adc
movsb
sub
fcoml
sbb
insb
leave
sbb
cmc
scas
fnstsw
cmc
rcr
push
imul
je
sbb
pop
jb
ds
pop
jmp
mov
pop
ss
mov
jo
movl
mov
mov
inc
into
faddp
pop
pushf
jne
mov
cmp
sbb
add
in
rcrb
xor
cmp
jnp
dec
cmp
adc
pusha
sbb
push
xor
js
nop
rcr
adc
mov
and
sbb
sub
xor
pop
jnp
ret
mov
aaa
sub
or
sbb
scas
jmp
imul
or
int3
pop
lds
adcb
dec
loop
cwtl
fsubs
out
inc
lcall
es
fcoms
pop
fst
or
lods
jecxz
add
inc
sub
xor
leave
roll
mov
push
mov
push
test
pop
mov
fcom
pop
out
or
fcoml
mov
ds
push
pushf
dec
je
inc
nop
and
ret
ret
fwait
sti
mov
lahf
xorl
jb
cmp
mov
cld
subb
sub
sbb
cmpb
popa
sub
xor
mov
push
or
cmp
mov
adc
cld
hlt
sub
aaa
pop
inc
sub
ja
mov
dec
sbb
add
loope
mov
fmull
dec
sub
inc
xchg
cmpsb
nop
xchg
dec
add
jae
imul
add
add
jb
lock
and
dec
xor
or
adc
lret
pop
xchg
mov
xchg
les
cltd
sbb
or
sub
dec
push
push
or
adc
jns
ret
lret
add
addb
lret
and
sub
sub
cmp
add
adcb
sub
dec
or
mov
inc
ret
sub
or
das
sbb
xchg
movsb
cltd
movsb
mov
xchg
ret
cmp
adc
daa
xchg
popa
daa
xchg
add
clc
sub
sub
daa
adc
inc
js
sbb
add
movsbl
iret
xor
mov
push
mov
push
or
test
dec
cmpsl
daa
cmp
sbb
mov
ret
in
insl
invd
xchg
ret
cltd
fwait
inc
call
movsb
mov
add
mov
push
aas
mov
push
push
mov
mov
jne
mov
mov
push
mov
pop
movl
fdivr
test
xor
lods
inc
test
sbb
ret
leave
adc
dec
shlb
hlt
add
and
test
push
loopne
push
and
cmp
add
in
shrb
pushf
call
push
or
test
fwait
mov
aad
stos
xchg
int
pop
mov
test
pop
lret
out
add
dec
inc
sbb
out
add
mov
test
add
add
mov
and
inc
xor
mov
imul
hlt
fdivr
pop
insl
dec
or
cmpb
mov
mov
or
dec
mov
popa
test
mov
sahf
inc
push
jo
inc
mov
xor
xchg
std
mov
lods
and
pop
cmpb
add
shlb
pushf
or
lea
or
cmpl
sub
leave
cmpsl
cs
sarl
xor
js
subb
xor
sbb
sbb
jl
push
push
mov
mov
insl
xor
ret
out
js
push
xchg
sbb
lea
repnz
pop
aam
das
pop
pop
sbb
pushl
nop
sbb
rol
call
mov
inc
jne
jbe
enter
pusha
add
sub
xchg
push
cmc
lods
iret
or
mov
repz
faddl
inc
pop
push
insl
xchg
lock
pop
shll
or
hlt
dec
and
push
jns
imul
adc
out
addb
jne
mov
push
out
xchg
inc
pusha
aad
cmpsb
adc
mov
pop
mov
ret
jge
cwtl
pop
inc
enter
dec
clc
out
pop
mov
pop
jb
cmp
mov
or
sbb
nop
data16
aaa
aam
clc
es
lock
add
lods
xor
imull
xchg
add
add
shlb
jno
sub
jo
js
adc
mov
adc
pop
push
jo
mov
jbe
xor
push
sarl
es
int
imul
push
add
push
mov
idivl
push
ret
inc
popa
jns
clc
pop
outsb
fwait
inc
stos
mov
enter
inc
dec
inc
test
jns
aaa
cmpsl
in
ret
inc
cmp
daa
cmp
mov
cmp
mov
loopne
xor
push
xchg
daa
xchg
leave
movsb
fsubrl
in
mov
mov
jae
int3
add
or
sub
faddl
push
xor
in
jbe
mov
sub
pop
jb
fcomp
fcompl
and
mov
into
sbb
jle
cs
dec
pusha
jmp
mov
adc
insl
or
cmp
pop
data16
daa
xor
xor
daa
inc
pushf
movsl
pshufw
pop
enter
stc
ficoml
aas
cwtl
jmp
js
adc
ds
fmull
inc
addr16
das
dec
lcall
adc
ret
pop
jmp
inc
pop
mov
mov
or
pushf
int3
xchg
xor
lret
inc
mov
out
loopne
addr16
and
fs
rclb
add
stos
test
mov
adc
enter
and
imul
adc
add
xchg
xlat
pusha
xchg
sub
jns
and
sub
cmp
adc
fwait
sbb
mov
fdivl
mov
mov
fsubr
xor
jns,pn
lea
shlb
mov
out
les
icebp
add
jo
sbb
dec
cmp
out
orb
add
add
xchg
sbb
stos
mov
push
es
pop
mov
cmp
lods
sbb
jmp
mov
adc
jnp
mov
pop
pusha
dec
pop
lds
add
sbb
es
dec
das
xchg
insl
mov
inc
mov
sub
ljmp
loope
loopne
movsl
leave
dec
nop
push
orl
ljmp
xor
xor
xchg
or
je
xor
imul
das
fcoms
dec
test
shrl
shl
inc
cld
jno
js
mov
mov
test
nop
sub
movsb
xlat
xchg
add
adc
aaa
sarb
or
pop
sarl
in
dec
sbb
xor
jne
add
xchg
lods
sub
rcrb
xchg
mov
pop
mov
loopne
stos
ret
jmp
or
pushf
mov
les
movb
scas
inc
aam
incl
test
je
mov
push
mov
fwait
adc
lea
nop
fs
sub
negb
sub
adc
fadds
adc
dec
dec
sub
mov
push
adc
mov
cld
pop
jmp
and
hlt
and
push
jae
push
jb
inc
dec
mov
add
sbbb
jg
or
push
int
and
or
shll
shll
add
pop
push
pop
lock
cmp
ds
inc
push
cmp
movsb
rclb
addb
adc
dec
lock
dec
push
adc
cs
or
and
out
addr16
call
lods
lods
lock
adc
jecxz
push
clc
or
nop
aas
add
dec
gs
sbb
jbe
add
pop
push
add
adc
shrb
mov
imul
mov
push
add
cwtl
insl
and
pusha
repz
and
mov
pop
xor
fnsave
mov
insl
out
enter
inc
adc
cmp
movsb
imul
jnp
nop
es
test
push
mov
push
into
fnsave
in
cli
or
adc
in
pop
sub
and
pop
and
mov
mov
addr16
jmp
das
pop
push
adc
fsubs
mov
mov
xchg
mov
sbb
cmp
popa
xor
mov
das
jne
push
movsb
mov
jl
inc
sub
fnsave
bnd
mov
jmp
mov
mov
and
lods
adc
dec
dec
cmp
cmp
xchg
ret
jmp
sub
outsb
loopne
subl
pop
fiadds
lock
and
add
cmp
aam
jae
stos
sbb
sbb
or
mov
inc
push
push
mov
xchg
xchg
addb
push
push
cmp
inc
lock
jl
push
sbb
aam
push
adc
jg
fisubs
and
inc
insl
add
sbb
pop
testl
lret
rorl
push
adc
stc
in
inc
push
mov
mov
inc
inc
call
call
in
test
xor
dec
push
or
sub
pop
push
cmp
movsb
pop
cmpsl
sbb
jg
sbb
leave
push
pop
dec
jae
add
push
call
mov
xchg
test
add
loopne
insb
test
pop
pop
lods
jle
aam
jle
mov
ja
cmp
jmp
inc
cwtl
xchg
aam
or
xchg
add
scas
imul
mov
test
roll
add
cmp
outsl
mov
pusha
loopne
test
xchg
cli
ret
inc
arpl
rclb
bound
mov
mov
mov
pop
repz
mov
dec
repnz
in
push
in
xchg
fld1
enter
clc
ss
sbb
mov
lea
pop
je
lret
sbb
sti
xchg
mov
adc
push
sub
ss
popf
icebp
xchg
dec
in
xor
loop
imul
hlt
pusha
loope
insb
addr16
stc
dec
sbb
das
aam
ret
or
mov
mov
and
xor
xchg
pop
xlat
adc
or
sahf
jecxz
sbbl
and
loop
loop
popa
pop
push
push
jno
ret
xchg
das
and
cmp
mov
jecxz
cs
adc
cmpsb
or
pcmpeqw
roll
inc
shll
mov
rorb
mov
sbb
mov
jns
pop
jnp
sbb
sarb
inc
push
xor
jle
pusha
sub
insl
mov
add
push
xor
ret
aas
mov
mov
push
mov
pop
mov
mov
dec
leave
push
and
sarl
int
cmp
cs
cmp
xchg
movsl
pop
or
shrw
sub
shl
sbb
jo
pshufw
lods
inc
or
inc
adc
cmp
and
mov
pop
jo
loope
mov
rcrl
je
mov
imul
or
mov
jle
jl
or
sbb
xchg
sub
cmp
shrl
or
or
and
mov
push
pop
sti
mov
add
into
mov
nop
push
mov
loopne
ja
pop
cli
fstp
xor
je
add
adc
add
mov
xchg
push
xor
fisttps
and
cmp
add
xchg
or
ss
and
sahf
mov
cmc
test
xchg
xchg
sub
movsb
mov
or
nop
in
mov
pop
push
sbb
xchg
and
fdivs
mov
push
xor
add
fnstcw
push
test
add
cmp
xchg
sbb
mov
xchg
mov
fcoml
push
mov
cld
aad
pop
jmp
icebp
orb
pop
mov
sub
add
out
or
dec
lods
out
fdivl
add
enter
test
xor
xchg
adc
out
cmp
pop
nop
aam
push
push
cmp
mov
or
sub
cltd
sub
fs
pop
push
hlt
pop
dec
sbb
cmpsb
loope
inc
test
sbb
inc
and
es
or
pop
scas
pusha
adc
mov
pop
jl
cmpsl
mov
add
push
daa
cmc
adc
fsubrl
pop
sbb
mov
pop
out
mov
scas
roll
bound
inc
fbld
sbb
inc
and
inc
call
jo
les
add
daa
pop
in
xor
mov
add
pop
sbb
adc
dec
jl
push
or
mov
xor
mov
jmp
jle
fisttps
insl
dec
shrb
movsb
cmpsl
jne
adc
lods
cmp
pop
dec
ret
cmpb
ret
pop
in
xor
jl
sub
jnp
cmp
mov
mov
cltd
es
fsts
ficoms
adc
or
sbb
sbb
fmuls
test
cmp
mov
jnp
xchg
mov
sbb
xchg
sbb
inc
push
movups
repnz
divb
sub
and
pop
call
xchg
push
add
and
leave
icebp
jo
and
mov
sbb
ficoms
jmp
fmuls
ljmp
dec
sbb
mov
mov
mov
pop
cmpsl
lock
jg
addb
mov
mov
and
mov
ljmp
enter
add
or
add
adc
mov
lds
adc
cmp
xchg
orw
inc
push
add
leave
test
add
pop
xchg
or
repz
adc
xchg
adc
adc
nop
adc
sub
stos
adc
dec
mov
inc
popf
cmpsb
inc
pop
test
and
mov
jge
cs
je
cmpxchg
add
dec
xlat
adc
clc
dec
cld
rol
fdivrs
jge
add
test
mov
or
add
stos
adc
jmp
and
imul
xchg
sarl
lds
inc
hlt
adc
dec
sahf
lret
inc
incb
mov
cld
push
pop
mov
gs
outsl
jo
decl
push
fistpll
movsb
dec
movb
aam
inc
inc
and
notl
arpl
mov
mov
mov
addl
adc
xchg
inc
insl
insl
jb
cmp
jne
xchg
push
mov
enter
hlt
dec
je
push
dec
mov
mov
push
rcrb
sub
out
dec
sahf
scas
mov
ret
hlt
pop
movsl
enter
xchg
cmp
cmpl
sub
push
mov
sbb
dec
aas
add
inc
dec
jne
or
and
adc
add
fsubrs
aaa
fistpl
xchg
jne
and
push
std
in
in
cmpsl
mov
push
inc
ret
push
sbb
push
xchg
lods
out
jmp
sbb
sbb
sbb
pushf
fbld
sub
xlat
lahf
push
add
add
or
xor
sbb
aam
aas
adc
or
jle
mov
stos
push
sbb
leave
aas
dec
pop
mov
lds
into
aam
and
jp
push
or
or
jg
push
dec
cmp
mov
xor
lret
insl
pop
ret
push
pop
rcrb
clc
jo
jb
out
mov
pop
cld
mov
data16
andb
mov
call
xor
inc
lock
addl
inc
jo
je
ja
sub
xchg
inc
neg
and
or
add
cmp
and
fistps
inc
jmp
scas
pop
cmp
jge
mov
sbb
mov
jg
cmp
int
add
hlt
vmovd
add
pop
pop
fisubrs
ds
jge
jne
ss
lret
lds
inc
and
lret
icebp
jae
add
adc
or
jo
js
inc
and
xchg
mov
test
shlb
movsb
les
scas
aas
add
cmp
pop
rcl
add
adc
mov
inc
cmpsl
cwtl
add
out
inc
addl
or
cmp
mov
ljmp
inc
jl
push
jnp
shl
jg
xchg
sub
lock
int
inc
and
shl
shl
push
or
and
pop
add
push
mov
popf
jno
mov
push
lods
cltd
fcomp
inc
mov
sbb
jmp
mov
sarb
sbb
push
mov
lea
pop
popa
movsb
add
add
dec
sbb
rcrl
or
cmp
fwait
imul
pop
inc
push
sub
call
inc
lea
xchg
dec
xchg
dec
fisubs
subl
cmp
aaa
loope
cmp
or
inc
je
dec
push
out
add
sub
adc
out
mov
mov
adc
arpl
push
mov
or
inc
add
xlat
es
lcall
call
xlat
pop
adc
es
frstor
test
and
push
push
jne
aad
mov
add
test
inc
jle
mov
push
adc
cvtpi2ps
iret
es
inc
ret
sarb
lret
btc
add
test
xor
dec
adc
iret
clc
mov
adc
cmpsb
sbb
imul
xor
cmp
inc
push
iret
jmp
jl
mov
xorb
adc
daa
add
and
movl
jle
add
push
addl
push
insb
imul
adc
in
nop
push
roll
and
test
pop
sti
shl
add
aam
xchg
loope
adc
stc
mov
cli
push
adc
cmp
add
lret
incl
or
and
inc
xchg
and
movsb
push
dec
js
fdecstp
pop
add
movl
cmp
mov
mov
or
add
adc
add
adc
dec
ficomps
add
and
inc
jg
loopne
mov
adc
jne
add
mov
aad
js
mov
std
into
jno
sbb
icebp
dec
or
fwait
in
adc
lea
mov
scas
mov
icebp
add
fmuls
xchg
loopne
sbb
or
inc
cld
and
or
fcompl
in
inc
lret
push
and
rol
dec
lret
icebp
nop
cmp
sub
and
sbb
push
outsb
sbb
sbb
xchg
push
or
sbb
xchg
xchg
or
test
incb
pop
dec
ds
sbb
loopne
dec
out
sbb
call
test
adc
jns
push
sub
jmp
imulb
jae
dec
add
lahf
out
cltd
mov
push
push
add
jp
xor
sbb
aad
cmc
xchg
jl
sub
je
movl
sahf
inc
sub
jmp
or
xor
sahf
out
and
sub
leave
inc
mov
pop
mov
dec
daa
or
xor
sbb
daa
mov
add
cmpb
mov
popf
or
xchg
pop
adc
adc
xchg
jne
xor
mov
adc
sbb
xor
adcb
pop
mov
add
movnti
pop
ret
mov
inc
sbb
jnp
rorb
pop
and
mov
ret
adc
xchg
push
mov
sub
cld
jnp
inc
mov
pop
or
add
sbb
cmc
out
outsl
and
add
pop
add
loop
mov
jne
fisttpl
xor
out
pop
mov
pop
jo
or
sbb
mov
jge
adc
mov
push
push
nop
adc
or
cmpb
test
fadd
push
enter
stc
pop
addb
push
sbb
ja
insl
sub
je
pop
inc
pop
push
push
jmp
cmc
pop
int3
push
push
pop
pop
add
mov
or
pop
mov
inc
scas
out
mov
jge
adc
filds
dec
lock
push
cld
push
test
and
sub
dec
sub
push
jo
sub
mov
inc
cmp
in
mov
cs
dec
xchg
mov
lret
repnz
movsb
orl
mov
lret
adc
into
je
into
pop
mov
jmp
pop
sub
cmp
mov
scas
call
jge
push
inc
push
cli
aaa
jnp
pop
inc
xchg
pop
add
fisubl
mov
add
add
in
ret
loopne
inc
mov
pop
and
imul
and
aam
and
sbb
xchg
sub
nop
inc
push
jb
je
inc
push
sbb
ja
push
sbb
jp
sbb
jl
jle
fs
inc
jg
popa
fs
inc
push
bound
nop
inc
push
sbb
addr16
push
sbb
push
sbb
insb
insl
outsb
sbb
outsl
push
push
fs
inc
push
push
push
push
nop
inc
push
sbb
push
inc
push
sbb
pop
push
sbb
pop
pop
pop
sbb
pop
inc
inc
fs
inc
push
inc
inc
inc
nop
inc
push
sbb
inc
inc
push
sbb
dec
push
sbb
dec
dec
dec
sbb
dec
xor
fs
inc
push
xor
xor
inc
push
sbb
sbb
cmp
sbb
cmp
sbb
aas
and
inc
cwtl
inc
push
and
add
leave
stos
push
cmc
std
mov
ret
xchg
std
mov
das
add
adc
insb
outsl
xchg
push
insb
pop
cwtl
dec
sbbl
enter
arpl
mov
xor
inc
inc
xor
decl
inc
outsl
outsb
je
imul
jo
cs
and
push
aad
pop
cs
adc
rcrl
jae
sub
xchg
or
nop
xchg
and
push
add
sub
jo
gs
imul
mov
insb
gs
xor
data16
leave
mov
dec
je
mov
or
stos
adc
inc
rclb
imul
dec
sbb
cmc
inc
test
or
jae
nop
das
ror
push
outsb
int
mov
pop
jo
outsl
sbb
xchg
mov
decb
inc
popa
jae
add
sbb
or
push
scas
pop
add
inc
jge
or
sub
and
les
sub
iret
or
bswap
and
inc
insl
inc
addr16
mov
push
push
dec
outsl
jo
je
pop
pop
jbe
pop
inc
jns
sbb
or
cmp
dec
add
dec
imul
popa
data16
pop
insl
fwait
gs
xor
aas
mov
xor
mov
pop
pop
push
xlat
jo
ja
jbe
inc
jb
jo
xorl
pop
jl
mov
dec
push
add
dec
jnp
ret
imul
push
mov
inc
imul
divb
outsb
jb
jae
es
outsl
rorb
pop
test
add
pop
sub
rcr
mov
mov
orl
decl
aad
adc
push
test
dec
inc
add
xor
cmp
imul
mov
cmpsl
inc
xchg
lock
inc
pop
insl
outsb
jl
xor
imul
push
lods
pop
lcall
cmpsb
pop
add
sbb
cmpsb
pusha
xchg
fcoml
iret
mov
mov
jb
push
lret
add
jnp
pop
adc
insl
stc
push
mov
pop
dec
push
add
pop
aas
sub
fcomp
lcall
sbb
aad
adc
pop
add
imul
push
push
dec
gs
sub
sub
inc
inc
clc
dec
dec
popa
add
cwtl
adc
sub
sbb
mov
mov
add
push
jecxz
movsb
mov
mov
jge
lea
add
adc
add
not
add
mov
push
add
pop
imulb
sahf
pop
sbb
les
int
xchg
adc
pop
cld
and
sbbl
add
rol
xor
xchg
add
mov
shlb
add
imul
and
adc
add
push
jo
push
inc
je
addr16
filds
pop
in
adc
ja
dec
push
jl
movsb
push
push
cmp
jnp
pop
sbb
add
mov
fsubl
in
dec
mov
movsb
clc
and
add
add
mov
lcall
jnp
in
and
cmp
insb
sub
jnp
mov
sbb
pop
sbb
mov
movsl
or
adc
ret
shll
or
in
in
and
push
aas
pop
int3
push
or
test
test
scas
loope
xchg
rcrl
mov
subb
jo
dec
imul
test
pop
or
mov
jb
jae
sub
pusha
std
pop
aas
addb
jo
or
dec
jge
jne
outsb
adc
inc
outsb
fs
sbb
mov
in
dec
es
mov
add
mov
add
push
inc
arpl
sti
daa
mov
lds
or
fs
es
clc
ja
outsl
ja
adc
push
add
fistpll
add
cmp
fadds
lods
push
addb
push
das
rcr
inc
pushf
arpl
push
xchg
ret
sbb
in
mov
xor
or
push
mov
ljmp
popw
jnp
adc
mov
sbb
mov
dec
lahf
pusha
mov
xchg
cs
mov
insb
stc
xchg
sbb
stos
and
xchg
or
jle
push
sub
daa
inc
adc
mov
pop
pop
pop
inc
movhps
test
pop
sub
mov
lods
xor
xor
pop
test
lods
add
add
or
dec
cmp
ds
and
jns
nop
nop
xchg
outsl
add
xor
dec
mov
cltd
fcomp
add
xchg
roll
fnsave
jb
in
or
insb
or
xchg
xlat
mov
jl
lods
or
testb
sub
je
dec
movsb
push
mov
lret
push
dec
fs
inc
push
sub
add
push
push
xchg
dec
cs
cs
pop
and
mov
jmp
das
sbb
xchg
inc
pop
inc
jb
xor
pop
mov
add
in
push
lgs
data16
movb
sbb
enter
dec
pop
out
push
add
or
mov
or
push
mov
dec
insl
in
mov
sbb
mov
push
lcall
or
dec
rcll
lods
ret
nop
js
int
arpl
pop
fdivl
leave
adc
dec
mov
push
inc
out
enter
push
inc
dec
push
inc
les
lahf
mov
ss
mov
mov
pop
pushf
inc
aas
pop
push
push
pop
jg
cmp
lret
lods
inc
cwtl
pop
pusha
pop
pop
into
pop
sbb
sub
jg
pusha
or
sbb
and
mov
pop
or
jb
fs
fs
or
jno
and
push
xor
pop
sub
and
outsl
jl
in
in
push
jno
jno
je
jne
lcall
pop
lods
jp
pop
orl
aas
or
aas
xor
testl
andl
fwait
dec
jo
xchg
pop
data16
mov
sub
mov
cli
int
add
es
or
outsl
outsb
pop
in
shrb
pop
cld
mov
push
pop
pusha
dec
push
inc
aam
pop
mov
leave
call
push
mov
jnp
push
or
enter
mov
push
fisubrs
pop
push
or
dec
imul
push
insb
pop
dec
pop
sbb
inc
cmp
enter
incb
inc
stos
aad
push
push
lahf
call
xchg
sysret
jae
inc
nop
inc
clc
pushl
es
mov
xor
rol
xor
inc
dec
jne
test
jl
xchg
mov
cmp
pop
push
push
sbb
mov
add
or
cmp
push
fsts
movsl
je
lods
clc
sub
ljmp
add
sbb
addb
test
test
push
or
vpmacssdqh
std
je
mov
sbb
inc
and
in
test
dec
inc
test
adc
adc
arpl
mov
xchg
lcall
lods
ret
mov
and
scas
push
pop
xchg
addl
inc
and
and
decl
or
mov
add
sbb
pusha
loop
leave
repz
add
mov
add
lods
mov
fisubrs
repz
and
movups
sbb
shrl
cwtl
xchg
js
testl
nop
cli
xchg
sbb
push
jmp
inc
adcl
xorb
dec
in
in
push
repnz
inc
jnp
fidivs
test
cmp
je
mov
dec
xlat
cmp
arpl
push
sbb
mov
push
jmp
lock
add
incl
sbb
pop
push
jle
aad
add
xchg
imul
sbb
int
pop
adc
cli
loope
or
adc
or
mov
test
dec
dec
cmp
loopne
data16
mov
idivl
call
imul
in
outsb
mov
add
clc
call
sbb
add
adc
adc
mov
add
int
out
adc
push
push
and
loopne
and
sbb
in
or
je
rolb
fucomip
adc
push
arpl
rcrb
mov
popa
jb
outsl
dec
mov
popf
outsb
inc
inc
popf
outsb
iret
inc
jle
pop
dec
insb
imul
jbe
out
enter
jne
jo
gs
or
xchg
test
and
pop
aaa
addr16
imul
enter
dec
imul
iret
pop
gs
insb
outsl
ja
pop
sbb
jne
or
arpl
imul
jno
popa
mov
xchg
or
jns
test
jmp
jns
ja
imul
je
inc
dec
dec
or
addr16
push
xor
dec
pop
adc
push
das
punpcklbw
adc
mov
push
sti
jo
push
pop
imul
or
addr16
sti
inc
mov
outsb
inc
push
xchg
push
outsl
es
lods
insb
mov
push
sahf
sbb
lods
xor
daa
out
jg
gs
or
sub
xlat
inc
xor
daa
pop
xchg
fs
loopne
imul
sub
xor
sub
fsts
repnz
mov
cmovle
pop
lret
pop
jg
or
adc
repz
adc
andl
mov
aaa
shr
add
sub
fs
imul
push
iret
push
outsb
push
mov
jne
or
repnz
or
pusha
adc
aas
jne
jmp
add
clc
xor
roll
popa
adc
aas
adc
nop
xchg
es
mov
or
rorb
sahf
jge
rolb
outsl
push
pop
hlt
ret
push
mov
adc
push
mov
ja
ret
cltd
mov
aaa
mov
insb
loopne
push
adc
arpl
add
pop
pop
idivw
incl
push
dec
pop
inc
dec
inc
push
push
inc
push
add
inc
inc
inc
adc
idiv
sbb
push
pop
dec
inc
dec
dec
arpl
inc
inc
push
add
aas
adc
dec
dec
inc
push
dec
dec
push
mov
and
inc
shll
dec
and
jg
fiaddl
out
inc
inc
xor
xor
push
xchg
jbe
movb
and
inc
xor
jle
push
inc
inc
dec
mov
push
push
dec
dec
push
dec
push
jnp
and
in
jnp
cs
inc
inc
dec
push
fwait
nop
decl
push
dec
inc
dec
or
jns
xor
pop
dec
pop
adc
push
push
xchg
jl
jl
dec
push
inc
scas
dec
inc
dec
push
mov
icebp
adc
movsbl
ffreep
mulb
mov
cmp
push
adc
lock
push
into
scas
or
inc
sbb
aas
stos
addb
mov
pushf
xor
testl
add
add
rclb
or
and
popa
mov
sbb
and
or
inc
or
outsb
add
rolb
or
adc
loop
out
pop
or
add
add
mov
dec
pusha
dec
les
ja
shlb
mov
xor
shll
mov
xchg
addb
cmp
xchg
mov
pop
test
out
pop
mov
movsb
fiadds
xor
inc
adc
popa
leave
js
push
push
ficoml
cwtl
adcb
cs
das
jp
aaa
hlt
or
add
xor
xor
adc
jne
cwtl
push
sub
pop
sbb
mov
push
insl
cmp
xchg
loop
test
cmp
cld
scas
adc
or
adcl
cmp
sub
psubd
push
add
sets
adc
jne
sbb
sub
in
and
jmp
sbb
and
sbb
aaa
je
mov
ja
fidivs
mov
add
xchg
cmp
mov
inc
adc
or
xor
push
xchg
mov
out
cmp
ficoms
adc
rolb
enter
test
testb
je
shlb
pop
adc
sbb
sbb
sbb
mov
adc
lea
incb
scas
mov
mov
jle
dec
pop
sbb
popa
inc
push
cmp
outsl
add
mov
mov
ss
xchg
inc
fiaddl
pop
fcomp
add
dec
cmp
rorl
or
push
jmp
inc
pusha
lret
fildl
or
jmp
lods
add
push
or
push
inc
stos
sti
or
in
mov
out
call
movsl
test
mov
and
dec
xlat
push
inc
and
aam
sti
sub
dec
push
add
mov
ret
or
and
mov
pop
adc
push
inc
lods
rcrl
inc
mov
rcrl
cmpsb
scas
adc
jmp
ds
xchg
jbe
inc
lea
lahf
mov
or
pop
enter
dec
xchg
mov
sbb
jle
push
push
xor
outsb
loop
neg
pop
xor
push
das
pmaxsw
sub
neg
push
cld
jp
mov
mov
sbb
shrb
cmp
mov
aam
lock
lea
push
outsl
inc
sbb
inc
sarb
mov
and
xor
pop
sbb
adcb
addb
inc
sbb
add
lods
add
adc
loopne
sbb
add
add
jns
pop
and
pushf
add
mov
rol
and
and
add
leavew
test
shll
inc
push
enter
adc
movsb
mul
pop
add
jne
fimuls
in
mov
mov
jg
fwait
sbb
mov
inc
xor
sbb
mov
enter
dec
in
lods
hlt
add
mov
adcl
mov
in
mov
nop
or
loopne
or
pop
orl
enter
subb
or
inc
in
xchg
or
or
add
pop
and
mov
pop
and
fs
in
push
pop
and
and
outsl
push
xchg
js
jns
xor
ja
and
pushf
xchg
in
and
sti
lock
mov
lds
adc
lods
daa
into
and
dec
and
add
mov
lods
bound
mov
push
in
fistpll
dec
or
sub
xchg
add
insb
das
dec
add
movw
loop
jno
in
ja
mov
adc
lock
je
sub
xor
adc
jnp
jb
fucomi
add
hlt
lock
leave
fs
and
andl
adc
mov
jnp
pushf
mov
mov
sbb
add
cmp
sbb
pushf
fildl
or
and
mov
movl
pop
inc
enter
lods
add
insb
adc
jns
dec
add
cmp
or
and
mov
jle
mov
cmpsl
adc
inc
shrl
dec
aaa
outsl
aam
sbb
cmp
insb
adc
movups
test
mov
rclb
xchg
fwait
loope
aam
lcall
sbb
es
mov
push
mov
sub
xor
or
pop
or
or
mov
push
push
or
push
sub
push
pop
mov
imul
or
pop
bound
arpl
or
or
in
notb
jp
adc
and
loopne
ja
test
shlb
cmp
loope
iret
rcrl
and
push
test
push
push
pusha
dec
mov
sbbb
popa
iret
js
sub
xor
imul
or
adc
ret
cwtl
movsb
xor
cltd
adcb
adc
push
push
in
pop
test
or
jge
push
insl
mov
movsb
rep
or
in
and
pushf
adc
lret
or
scas
popf
in
mov
sub
mov
scas
dec
adc
cmpsl
add
test
sub
in
sbb
or
push
int3
pop
jb
test
mov
daa
mov
imul
xchg
or
mov
push
jno
adc
ja
andl
into
add
fstl
mov
arpl
pop
dec
lods
mov
inc
dec
scas
sbb
add
aaa
pop
mov
mov
cmp
daa
inc
fsubrs
adcl
jnp
push
push
push
orb
sub
fbld
dec
addr16
jb
popa
sub
imul
inc
jmp
push
jg
pusha
in
jecxz
or
repnz
xchg
pop
push
pop
sub
ret
mov
xor
je
xor
sub
add
and
xorl
aas
aas
lods
sbb
or
sub
cmp
pop
cmp
add
out
or
inc
insl
xchg
insb
pop
inc
jae
ljmp
in
mov
and
mov
cmp
je
mov
or
clc
cld
mov
scas
and
mov
mov
out
add
jb
aam
aas
es
jp
push
lods
or
xor
sbb
out
ss
xor
andb
sbb
orb
and
out
push
pop
scas
clc
movsl
lock
mov
not
and
mov
je
add
and
nop
pop
cmpl
in
sbb
imul
mov
add
or
loopne
inc
mov
aas
in
pop
lods
pop
xor
push
xor
adc
push
stos
lods
mov
inc
sub
push
adc
sarb
inc
adc
push
ss
mov
inc
cmp
mov
mulb
sbb
hlt
fmuls
or
test
inc
in
inc
orl
xchg
test
adc
and
add
mov
xchg
mull
or
test
pushf
xchg
in
incl
sbb
or
pop
in
mov
ss
xor
repnz
cmpl
add
and
pop
aam
or
add
adc
fld
adc
adc
inc
das
lea
fisubrl
dec
add
jmp
insb
data16
mov
inc
jecxz
and
xor
sub
int3
xor
repz
jge
popa
xchg
aaa
adc
adc
in
add
pop
inc
xor
push
push
inc
test
mov
push
mov
bound
and
cmc
pop
inc
ficomps
das
imul
mov
into
into
rolb
bound
pop
test
push
xor
call
sbb
fstpl
pushf
inc
daa
aam
jle
push
adc
push
push
mov
fisubrl
or
adc
jbe
dec
dec
xor
mov
mov
cmpsl
negb
and
inc
aaa
add
popl
mov
push
or
ds
shl
sub
clc
sbb
xor
not
and
pop
pop
sar
add
fcoml
orb
add
adcl
imul
pop
sub
test
sub
bnd
lahf
add
ret
ret
js
out
test
sbb
shll
clc
pop
xor
xor
pusha
dec
xchg
in
jno
or
repnz
push
and
xor
lahf
jl
adc
int3
mull
cmpb
sbb
inc
xchg
push
push
push
jge
fstpl
inc
mov
add
das
call
and
fdivl
fnstenv
dec
jmp
jns
cmp
dec
add
movsl
push
push
aad
cmp
push
das
add
sbb
cmpsb
fs
push
and
add
fcomp
data16
add
outsl
adc
or
dec
lds
add
punpckhdq
sub
mov
and
jnp
push
lahf
flds
ds
mov
push
subb
jg
push
mov
mov
or
add
mov
dec
daa
faddp
inc
mov
call
out
push
sub
cmp
aas
dec
adc
lods
mov
mov
aas
fwait
mov
push
mov
pop
pop
and
shrl
test
cmp
add
adc
adc
adc
mov
mov
inc
add
sub
pop
push
xor
aas
aam
in
jle
mov
push
movsl
dec
js
pop
pop
shll
and
enter
sarb
mov
bnd
mov
jnp
test
jecxz
adc
jecxz
mov
mov
jmp
mov
sti
movw
push
cld
push
mov
or
repz
and
push
push
jno
pushf
add
mov
push
jp
xchg
add
or
loope
jle
mov
dec
aas
sbb
add
jnp
sub
xchg
mov
mov
iret
std
lea
mov
mov
sbb
daa
dec
fidivs
jmp
addr16
or
add
sub
cld
imul
movsb
das
stos
rcl
pop
ss
sub
mov
add
inc
ss
dec
xor
add
jns
das
outsl
push
andb
mov
cmp
movzwl
lea
or
adc
int
bound
dec
add
pop
cld
and
xchg
add
cmp
pop
push
push
dec
clc
int3
outsb
test
or
mov
or
cwtl
or
jmp
daa
dec
mov
pop
movsb
push
mov
jnp
or
adc
ljmp
mov
xchg
mov
and
xor
and
daa
add
xor
sub
out
pop
popa
add
cmpsl
cmp
dec
stos
or
push
icebp
sbb
lcall
or
add
outsb
push
dec
dec
or
fwait
mov
mov
in
data16
shrl
adc
popl
cmp
sub
lret
js
movsb
outsb
push
fwait
push
cs
adc
and
nop
lds
loop
cmp
das
adc
add
mov
adc
adcl
cs
adc
movsb
test
pop
cmp
mov
mov
lods
mov
adc
mov
out
or
mov
add
orl
dec
and
stos
shll
inc
add
adcb
dec
adc
lods
and
mov
mov
sbb
adc
push
pop
cmp
xchg
add
roll
enter
xor
mov
inc
imul
cmp
rclb
xchg
mov
jge
sub
dec
loopne
and
pop
add
and
sub
movzbl
sbb
lock
cmp
sti
movsb
subb
pusha
mov
and
dec
cmp
jg
test
jle
cmp
jl
fwait
jmp
xchg
cmp
jg
test
lock
clc
jle
cmp
inc
and
mov
mov
adc
mov
jno
pop
cmp
icebp
or
dec
dec
shrb
loope
sbb
movsb
jge
shrb
pop
hlt
sub
adc
xor
mov
push
add
fcoms
push
enter
mov
pusha
movsl
xchg
sbb
pop
hlt
imul
xor
icebp
sub
or
sahf
inc
xor
lods
sub
cmp
inc
fmull
inc
inc
sub
add
sub
add
loope
dec
mov
ret
sbb
in
sub
loopne
es
cmp
push
fimull
xchg
fwait
sub
bound
jne
inc
dec
mov
mov
add
imul
popa
push
fsubs
xor
cli
lds
sbb
cmp
ret
add
mov
sub
fwait
add
test
mov
ret
pop
aam
mov
call
add
je
int3
andb
iret
inc
pop
in
mov
js
loope
ja
xchg
pop
cwtl
leave
inc
mov
mov
mov
push
mov
cmp
clc
sbb
call
iret
rcr
jge
cmp
mov
enter
push
mov
mov
int3
aas
int3
mov
pop
mov
sbb
or
add
add
mov
or
rorb
enter
aas
push
cmp
or
pop
xor
stos
cmpl
add
pusha
sarb
jmp
xor
jmp
cmp
jl
ret
sub
test
push
insl
clc
add
test
pop
jo
jmp
sbb
sbb
sub
clc
adc
or
loopne
xchg
pop
mov
xchg
movl
int
add
mov
mov
je
dec
or
jg
lock
jmp
xchg
cltd
add
test
pop
sbb
adc
pop
rcrb
and
in
push
or
inc
and
ljmp
loopne
jl
and
or
or
sbb
or
sbb
dec
push
cwtl
dec
in
inc
test
lock
dec
rcll
imul
add
push
jns
or
pop
sub
adc
arpl
imul
mov
outsb
pop
or
add
pusha
test
mov
sbb
fbstp
pop
pusha
inc
inc
cmp
push
aas
and
daa
lods
jno
int
push
int3
jno
stos
rcrl
mov
push
sub
rclb
dec
repz
clc
clc
hlt
sub
leave
hlt
incl
mov
jg
sub
cmp
cwtl
dec
cs
lods
int3
xchg
push
inc
dec
dec
decl
xor
dec
vcvtdq2pd
sbb
pop
xchg
mov
pop
xchg
add
jns
pop
inc
add
ficomps
or
pop
in
hlt
js
inc
fs
inc
call
xchg
mov
imul
fisubs
in
outsb
dec
add
call
dec
dec
stc
loope
adc
in
fcoml
loopne
lock
add
add
mov
scas
daa
add
add
jle
xchg
inc
add
or
xor
lcall
push
in
mov
mov
or
call
data16
push
fbstp
sti
insl
mov
lods
cmpsl
mov
mov
add
in
mov
sub
push
mov
cli
dec
hlt
test
sbb
in
in
pushf
sub
gs
in
inc
insb
stos
enter
sti
fcoml
clc
call
pushf
imul
adc
xchg
and
cmpsl
and
cli
inc
movb
scas
adc
sub
adc
pop
outsl
xchg
push
cs
aaa
pop
mov
jb
mov
cmp
pop
inc
sbb
and
xor
xchg
sbb
cmp
or
outsl
sub
rclb
push
nop
fmuls
adc
insb
xor
outsb
ds
inc
push
ret
add
mov
inc
inc
or
popf
inc
or
popaw
push
out
xchg
inc
int3
inc
popa
adc
inc
push
add
or
mov
in
adc
cmp
je
or
xor
std
int3
xor
inc
outsl
clc
iret
lds
push
mov
dec
hlt
jbe
jno
and
rorb
pop
addr16
push
add
aas
jecxz
lods
sti
icebp
fstps
push
lock
popa
cmp
imul
dec
enter
lcall
mov
ret
inc
repnz
add
inc
inc
push
or
imul
add
insb
sbb
mov
push
pop
adc
test
leave
mov
in
fs
out
cmpsl
pop
ret
test
jg
adc
pop
xchg
out
call
and
mov
rcrb
popf
add
out
pop
mov
pop
lahf
fiaddl
sub
jb
lret
adc
and
or
adc
int
and
inc
stc
and
stc
xor
inc
je
inc
jl
inc
addb
and
add
adc
dec
add
or
je
push
in
jmp
or
lods
sub
xchg
lahf
popf
scas
push
inc
add
in
inc
dec
enter
pusha
mov
hlt
mov
inc
hlt
mov
and
inc
lock
push
sti
lods
xchg
dec
adc
fs
xor
popw
sarl
pop
imul
jecxz
adc
ret
sbb
roll
jae
inc
ds
inc
dec
jne
xor
popf
add
sub
and
subl
inc
popf
mov
bound
sbb
jae
adc
mov
lea
xorb
push
jle
les
insb
bound
mov
xor
mov
push
int3
adc
daa
ficoml
cmp
or
data16
pop
cmp
pop
dec
add
jo
jne
pop
pop
add
add
lea
xor
sbb
out
sbb
sbb
adc
ret
insl
push
jae
dec
das
add
lea
mov
push
dec
mov
mov
inc
add
imul
rcll
jno
or
cmpsl
xor
pop
insb
sbb
dec
fs
xchg
popf
cmp
push
push
xchg
out
insb
or
aaa
lea
add
inc
mov
loope
rcll
or
or
test
sbb
test
dec
mov
dec
dec
fldt
adc
test
push
mov
ja
cmp
jmp
roll
inc
mov
mov
cmp
inc
fdivr
aaa
xchg
mov
nop
or
cmp
mov
or
int
and
fwait
dec
jecxz
xor
push
xchg
mov
test
cmp
addl
mov
fmuls
jnp
xlat
pop
jne
mov
insb
pop
and
push
dec
mov
adc
aaa
and
sti
mov
adc
sbb
or
hlt
cmp
pop
aas
adc
lahf
xchg
cmp
xor
mov
add
jns
sub
addb
lahf
push
dec
fisttpl
adc
and
push
sarb
push
xor
inc
and
pop
mov
das
sbb
sbb
xor
sbb
dec
cmpb
cmpsl
xor
pop
inc
test
xorb
outsb
inc
movsb
js
scas
cmp
xchg
mov
out
popa
test
lds
popa
pop
push
and
or
movsl
push
mov
dec
insb
outsl
xchg
or
xor
inc
mov
sbbl
in
add
add
push
xchg
test
call
cmp
ja
fidivs
call
test
sbb
pop
or
push
lea
jo
sbb
mov
or
adc
and
or
adc
cmpsl
test
sbb
outsb
jb
and
add
mov
mov
aad
mov
sbb
das
inc
and
inc
test
jae
icebp
add
je
stc
test
dec
pop
xor
and
xor
lea
pop
pop
scas
outsb
dec
inc
mov
ds
adc
das
adc
jmp
lock
mov
xchg
add
add
outsl
lea
sub
add
cwtl
addb
pop
sbb
mov
mov
fiadds
int3
lret
sbb
push
mov
sub
jns
pop
adc
add
or
je
xor
fadds
pusha
mov
in
sub
js
jp
rolb
sub
xchg
dec
jle
test
jg
dec
or
cmpsb
adc
bound
insl
gs
das
and
cmpsl
in
nop
ja
mov
adc
mov
mov
test
mov
add
sbb
clc
inc
inc
adc
aas
mov
push
and
clc
mov
dec
scas
inc
xchg
mov
aaa
jmp
jne
cli
shlb
mov
lods
add
sbb
inc
jne
jbe
movl
push
jbe
in
inc
pop
push
sbb
negl
push
sar
mov
or
fs
dec
mov
aaa
push
xor
pusha
dec
shlb
lea
gs
push
sbb
fs
and
sub
js
push
push
add
sbb
and
jmp
ja
or
adc
jle
push
push
lock
xor
jae
or
add
xchg
stos
push
test
pushf
ret
lock
mov
in
xchg
adc
pusha
add
xchg
mov
loope
inc
lcall
mov
incl
push
add
popa
adc
xlat
xor
in
orl
mov
in
movb
sbb
dec
je
mov
add
aas
mov
add
xchg
mov
jge
and
and
bound
add
sub
xor
wrmsr
mov
adc
shlb
xchg
std
adc
adc
dec
jecxz
inc
cmp
mov
mov
sub
adc
int3
or
daa
add
mov
out
cmp
adc
test
push
popa
movsl
test
adc
or
pop
iret
insb
or
je
sbb
adc
push
jecxz
fmuls
pop
aam
cs
and
lods
xor
adc
insl
or
inc
adc
mov
subl
arpl
test
push
lods
sbb
adc
xchg
dec
jno
daa
dec
js
shrb
je
into
xchg
xchg
daa
ss
js
xor
les
fimuls
mov
xchg
sbb
movsb
push
out
leave
enter
into
inc
addr16
jb
and
mov
add
cmp
add
enter
adc
lods
xor
jo
aad
mov
xlat
int3
les
jne
dec
shl
inc
mov
pop
sub
sbb
or
pop
and
ss
xor
jns
cmp
int
sbb
cmp
mov
adc
in
lret
or
ficompl
sub
ret
push
or
das
or
rdpmc
sbb
fmuls
push
arpl
xchg
and
in
jne
or
dec
cmp
sbb
leave
adc
lahf
js
push
or
adc
ret
in
ret
push
xor
pusha
dec
aas
sbb
nop
data16
dec
or
scas
lcall
clc
insl
mov
sbb
jmp
je
dec
cmc
movsb
adc
lcall
adc
movsb
test
icebp
nop
out
in
cmpsb
iret
les
sub
mov
xchg
and
push
pop
pop
add
and
add
inc
lock
push
or
daa
cmp
rorl
or
pop
and
cwtl
repz
gs
cwtl
or
add
cmpl
je
faddl
in
insl
mov
in
sub
pop
lea
inc
pop
addr16
enter
test
test
inc
dec
loope
mov
mov
or
ror
lret
inc
mov
outsl
mov
adc
rorl
pop
enter
pop
leave
inc
cld
fists
sub
stc
or
sarl
scas
int
lcall
push
lds
out
push
inc
push
cmp
subl
sar
hlt
mov
pop
fnstcw
mov
adc
add
or
in
push
xchg
cld
pusha
jne
sbbl
clc
mov
in
ret
cmp
xchg
xor
ljmp
into
or
sub
fimull
adc
pop
enter
push
fidivl
repz
data16
outsb
jb
xchg
or
imul
pop
add
rorb
fildll
call
lock
repnz
popa
leave
aas
pop
xchg
inc
sti
sub
ljmp
lret
mov
imul
cmpsl
cmp
jne
add
int
adc
xor
andl
cld
mov
mov
inc
cmp
or
add
add
mov
cmpb
add
int3
or
pop
das
clc
jmp
adc
dec
mov
and
mov
xchg
stc
adc
inc
add
inc
adc
push
sbb
js
je
fucomp
lea
or
and
push
or
fadds
pusha
pop
cs
sbb
pop
or
xchg
add
pop
sbb
sub
daa
xor
rcrb
pop
jo
inc
pop
je
sbb
das
aaa
roll
xchg
js
adc
jo
xchg
or
adc
sub
sbb
adc
or
jae
push
sbb
push
add
nop
sbb
mov
jg
enter
roll
cmp
loope
dec
fs
or
ret
mov
mov
inc
pop
nop
mov
mov
rcrb
pop
and
shl
xor
test
cmpl
jecxz
pushf
imul
jo
push
xorb
push
cmp
or
sbb
enter
sbb
sbb
dec
and
add
daa
jb
inc
insl
pop
and
jle
insl
push
and
scas
cld
dec
insl
and
jmp
xor
xchg
xor
mov
int3
rorb
ljmp
add
cltd
add
adc
pushf
jg
push
mov
outsl
mov
jo
and
pushf
sub
dec
pop
pop
dec
addb
jno
adcl
mov
push
fcoml
inc
and
dec
mov
push
jecxz
inc
add
cmpsb
inc
or
jmp
mov
mov
inc
pop
sub
adc
lods
dec
outsl
inc
add
repnz
loope
dec
push
mov
inc
cmpl
sub
sbb
push
mov
sub
sbb
cmp
pop
je
dec
dec
aas
sahf
pop
mov
cmpsl
pushf
mov
push
test
scas
or
xor
jge
sub
ret
mov
repnz
mov
shr
pop
sarl
and
or
repnz
pop
fmul
daa
mov
mov
add
outsl
cmp
loope
mov
lret
out
pop
rcl
or
push
mov
push
sbb
shlb
inc
jg
pop
fsubl
and
push
js
pop
insl
mov
or
add
aas
movb
sub
xor
push
jp
int3
rclb
cmpsl
enter
outsl
jecxz
mov
clc
orl
xchg
pusha
pop
repnz
shlb
insb
mov
add
push
and
dec
ret
pop
in
decl
imul
dec
mov
sbb
in
add
xchg
jg
push
imul
les
adc
cs
stos
mov
xor
ret
inc
add
cmp
fidivl
bound
cmp
add
lahf
pop
push
or
mov
mov
push
add
outsl
jmp
iret
pusha
and
daa
insb
and
and
cmp
and
mov
mov
pusha
punpckhdq
sbb
lods
xor
mov
push
clc
push
xchg
lds
aam
aas
arpl
or
nop
out
inc
pop
shl
dec
sub
jecxz
dec
adc
add
aaa
push
sbb
jo
push
test
mov
pop
jmp
leave
pop
dec
lea
push
pop
add
nop
bound
imul
cmp
inc
aad
sub
push
pop
xchg
js
and
xchg
fwait
dec
add
adc
or
dec
outsl
mov
out
mov
pop
imul
fs
insb
sub
cmp
dec
mov
cmpsb
cmp
je
mov
or
fildl
les
subps
mov
in
adc
xchg
cmp
sti
mov
inc
sahf
int3
jns
or
lea
rcll
mov
call
es
jp
lods
mov
dec
fstl
dec
and
inc
test
xor
xchg
push
push
cmp
jecxz
cmp
xor
mov
out
push
gs
xlat
daa
testb
je
fildl
jne
sbb
push
es
adc
movl
mov
dec
pop
into
into
out
mov
cmp
jne
add
or
pop
test
stos
xchg
and
int
and
sbb
sbb
and
push
sbb
sbb
jbe
cmp
add
sbb
add
bound
nop
dec
sbb
sbbb
sbb
push
xchg
scas
jno
add
jge
les
stc
push
ret
ss
mov
push
dec
cwtl
fists
pop
pop
and
or
and
or
es
or
and
or
pop
mov
pop
aas
filds
inc
mov
push
faddl
add
inc
mulb
inc
test
lret
inc
sub
and
call
inc
push
mov
dec
into
xor
es
push
fmull
sbb
orb
sbb
hlt
push
insl
inc
fisttpl
or
aaa
ret
rcrl
sub
sbb
adc
pop
vmovaps
mov
faddl
adc
xchg
jle
xor
mov
hlt
cmp
pusha
stos
add
in
nop
add
imul
add
add
dec
or
cmp
and
or
lds
mov
adc
in
jmp
outsl
sbb
clc
adc
adc
addb
adc
imul
inc
mov
fcoms
push
in
jne
dec
nop
jl
mov
inc
dec
inc
push
mov
test
inc
and
dec
dec
cmp
jne
mov
sbbb
jbe
xchg
test
insb
or
xor
ret
rolb
sub
subb
sub
xchg
xor
daa
mov
or
add
imul
loop
add
outsl
mov
scas
xor
imul
inc
popa
nop
aam
and
shl
cmpsl
out
push
xchg
outsb
insb
test
sub
mov
jbe,pn
push
mov
pop
and
cwtl
push
pop
adc
mov
sbb
dec
adc
call
or
sub
jle
jmp
push
jne
sbb
sarl
shlb
loopne
cmpsb
imul
mov
inc
or
nop
test
je
std
loopne
or
loopne
iret
dec
adc
dec
and
inc
decl
cmp
shll
setl
mov
or
mov
adc
cmp
imul
push
jecxz
push
push
popf
stc
loope
loope
cwtl
test
sbb
pop
aad
xor
pop
sbbb
jg,pt
call
add
into
mov
or
iret
pop
push
sbb
jge
pusha
xchg
test
jg
sbb
mov
test
popa
loopne
xchg
mov
aaa
orb
shlb
jmp
inc
aam
or
xor
cli
pop
add
xchg
pop
out
movb
nop
dec
rcrb
and
arpl
and
outsb
mov
iret
mov
mov
into
add
lods
loopne
add
lcall
pop
mov
inc
addr16
push
inc
hlt
mov
lock
inc
out
add
add
pop
test
or
push
les
fsubrp
push
loope
test
psubsb
lret
fisttps
fisubrl
lock
call
lock
movsl
mov
imul
jge
jae
sahf
xor
outsb
ret
enter
jns
in
lcall
or
xor
dec
xchg
test
ret
inc
xor
pop
inc
mov
jne
mov
fs
or
cmpb
adc
loope
add
cmp
push
inc
cmp
sub
mov
test
adc
mov
xchg
mov
jo
or
inc
sbb
arpl
icebp
sub
add
inc
and
xchg
xchg
xor
cmp
inc
arpl
rcr
push
xchg
bound
test
in
push
mov
jo
fwait
lea
in
lods
and
or
inc
cmp
cmp
jae
and
dec
movsb
loop
and
mov
sbb
jge
mov
push
imul
dec
cmp
imul
movsb
rcl
ret
sub
or
popa
mov
movl
mov
arpl
es
sbb
mov
xor
or
sbb
in
aam
sbb
or
jge
add
add
pushf
xor
roll
daa
fcomp
and
data16
jno
push
push
adc
push
sti
fdivl
cmp
cmpsb
push
or
add
addr16
ret
xor
adc
xchg
sbb
push
or
add
and
in
je
aam
pop
mov
popl
mov
push
repnz
adc
and
xor
xchg
rcrl
xor
jmp
sbb
adc
ljmp
hlt
out
mov
sub
dec
sub
scas
shrl
shlb
xor
ss
lds
push
loope
cmp
cld
pusha
jbe
push
dec
pop
sbb
sbb
sbb
or
adc
xor
mov
test
adc
mov
pop
gs
pop
pushf
add
inc
dec
add
in
lods
add
mov
lock
xchg
call
lds
pop
dec
inc
or
inc
leave
jns
mov
pop
and
scas
pop
mov
test
mov
fcmovu
add
push
out
mov
int
add
andl
ret
mov
mov
adc
js
pop
mov
je
loope
inc
lock
adc
sub
out
loopne
aaa
push
mov
or
imul
arpl
ljmp
mov
and
dec
push
jmp
pop
sbb
pusha
push
test
push
cmpsb
mov
and
adc
jo
subb
xor
mov
stc
sub
xor
lcall
pusha
adc
cmp
cmp
sub
pop
hlt
fists
adc
sub
movsl
lret
test
inc
add
add
or
pop
dec
iret
mov
or
dec
popa
in
stc
push
adc
pop
sbb
roll
jmp
inc
or
inc
test
or
inc
sub
das
sub
or
jmp
cmp
aaa
sbb
mov
xlat
inc
push
add
aaa
cmp
xchg
dec
adc
mov
gs
cmp
out
fwait
addl
lea
inc
add
lcall
rol
adc
sub
je
sub
push
xchg
add
or
dec
pop
lods
xor
cmp
xor
add
mov
xor
lret
insb
das
jge
cli
push
jmp
mov
push
jp
or
add
or
xchg
orb
bound
fdivrs
rorb
jl
lds
loopne
xor
icebp
xchg
les
fsub
jle
sub
movsl
clc
dec
je
test
push
sahf
sub
je
out
mov
sub
pop
mov
cmpsl
push
xor
push
jne
push
scas
push
lds
pop
jmp
jne
xor
rcrl
cmp
out
js
repnz
pop
jl
dec
dec
call
jge
test
push
pop
xchg
adc
sbb
sbb
or
push
mov
add
add
dec
gs
sbb
jns
push
jp
aas
sbb
cmp
push
cmpl
jae
lret
xchg
sub
js
sub
push
rolb
jle
jb
int3
xcrypt-ecb
cmpsl
dec
pusha
fs
outsl
imul
insb
xchg
mov
adc
into
iret
ja
outsb
mov
dec
cmp
fnstcw
ret
pop
sub
in
test
jmp
mov
js
mov
ret
or
xor
sub
aas
or
inc
shll
pop
push
rclb
ss
jmp
add
dec
movb
pop
xor
mov
nop
sub
icebp
insl
pop
mov
xchg
imul
adc
pop
jnp
cmc
adc
xchg
test
ss
popf
mov
cmc
jne
pop
mov
jne
sbb
pop
repz
push
push
mov
push
cltd
sbb
je
pop
clc
push
sub
ljmp
test
xchg
stc
and
pop
test
clc
inc
call
add
lods
shl
pop
fld
push
add
sbb
mov
arpl
mov
inc
aaa
js
push
rcrl
pusha
cmpsl
jne
jle
inc
jo
fnstcw
incl
inc
and
sbb
push
out
test
faddl
jo
sub
mull
adc
pop
and
jns
jp
xor
mov
add
sbb
jo
pop
gs
dec
mov
addb
data16
les
adc
insb
sub
push
daa
mov
dec
cmpsb
jp
mov
xor
in
and
gs
ud2
jno
mull
lahf
popa
mov
or
sahf
push
cmpsb
add
push
push
popf
rcr
mov
add
xchg
mov
or
adc
cmp
ffreep
filds
cli
loopne
lcall
add
add
shlb
sbb
orl
jl
mov
lds
adc
mov
push
iret
or
inc
cmc
xchg
xor
shlb
ret
out
or
push
adc
insb
insb
leave
push
push
call
mov
sub
add
rorl
adc
adc
ret
push
lods
push
sbb
adc
clc
push
aad
add
into
and
fmull
sbb
or
mov
sub
sub
daa
adc
and
add
inc
cwtl
ds
test
or
jmp
push
inc
in
out
jle
or
pop
les
sub
mov
test
inc
jmp
adc
inc
adc
jae
in
pop
popf
mov
mov
inc
inc
fldl
push
incl
jo
mov
movzbl
or
xchg
insb
and
xchg
jle
pop
das
mov
pop
add
add
sub
mov
mov
hlt
push
aas
add
push
and
xchg
xorb
test
mov
pop
test
jl
cmpsl
jle
into
mov
je
pop
lods
jmp
in
insb
mov
outsl
pop
jmp
jbe
mov
push
dec
je
daa
lcall
dec
sti
int3
cld
jnp
cmp
sub
push
addl
adc
add
mov
jns
jle
mov
aam
inc
sbb
mov
jg
fimull
xor
in
sarl
adc
xchg
jl
in
inc
ret
nop
cmovs
push
jg
and
push
adc
push
inc
jg
add
pop
ret
push
or
js
sbb
ss
adc
and
leave
push
mov
repnz
insl
and
sbb
sbb
andl
mov
and
stos
mov
pusha
clc
push
arpl
mov
mov
pop
push
mov
stos
mov
mov
push
imul
push
mov
rcr
push
mov
pop
xchg
popa
pusha
mov
mov
popf
data16
xor
jp
inc
addr16
mov
clc
inc
push
sbb
sub
jle
push
inc
jae
sbbb
movsl
mov
sbb
dec
push
jle
adc
mov
pop
sbb
inc
mov
or
jmp
mov
cmova
inc
cmp
pushf
or
xchg
pop
cld
mov
xchg
icebp
xchg
dec
mov
sub
fwait
pop
scas
sarb
fmuls
pop
fiadds
inc
xor
pop
js
cmp
fs
fcompl
or
pshufw
shlb
or
xlat
shll
fadd
jo
pushf
mov
push
adc
sub
cmp
test
lea
push
mov
push
xchg
int
icebp
sbb
xchg
mov
lea
adc
jle
dec
adc
iret
or
sub
rolb
xchg
lea
aam
mov
sbb
dec
loopne
xlat
icebp
jnp
xchg
mov
loop
inc
adc
out
or
and
and
jle
jmp
push
sbb
aam
inc
xchg
or
push
je
cs
popw
inc
or
add
pop
mov
push
or
adc
push
cmpsl
inc
cs
outsl
enter
xor
push
add
jo
mov
cmp
push
add
dec
test
and
lahf
sbb
sahf
adc
inc
xlat
mov
xchg
mov
and
inc
js
and
imul
adc
das
addb
jnp
stc
jge
test
dec
inc
and
lret
xchg
adc
inc
xor
das
inc
dec
xchg
or
inc
xchg
call
sbb
xlat
jle
push
hlt
movb
rcll
and
mov
push
sub
sbb
mov
mov
inc
add
stos
mov
adc
mov
and
mov
fldenv
les
inc
mov
mov
out
sbb
push
ret
fmull
mov
jg
ret
pop
test
cwtl
clc
mov
je
cltd
adc
loopne
inc
cmc
xor
dec
out
clc
jmp
aad
pop
mov
dec
add
xchg
fisubrs
fucomip
sbb
lret
jl
pusha
ds
test
rolb
inc
jmp
add
stc
int3
popf
test
mov
xchg
sbb
inc
jp
xor
xchg
xor
test
sbb
idivl
jmp
stos
cmp
xchg
movb
or
mov
and
sub
add
mov
movsl
hlt
dec
ret
dec
xchg
fldt
mov
xor
or
push
aam
cmpsb
inc
dec
cli
cwtl
lea
mov
pop
and
or
aam
outsl
push
lds
jl
jmp
inc
push
push
add
call
pop
insb
dec
in
add
add
mov
adc
jnp
aas
pop
add
sbb
push
test
into
or
loope
inc
aad
rolb
and
test
ja
push
mov
add
inc
add
jp
rcrb
imul
fwait
mov
in
push
and
ficompl
subb
inc
fcoms
sbb
orl
jnp
xchg
mov
or
ss
inc
jp
add
bound
hlt
jne
push
lock
inc
xorb
cmpsb
sub
mov
pop
js
jbe
jg
or
adc
pusha
orb
cltd
or
test
rol
arpl
out
addr16
repnz
daa
and
aam
push
out
and
and
mov
xor
ja
mov
cwtl
notb
and
or
inc
xchg
pop
dec
into
inc
push
mov
inc
imul
adc
mov
mov
in
and
xor
incl
inc
add
pop
jns
mov
ja
mov
jno
sbb
pop
sub
sbb
sbb
push
push
or
fisubrl
sbb
je
push
cltd
lret
popf
and
or
cltd
inc
loop
addr16
adc
cmpsb
pop
ja
das
inc
inc
loop
ds
mov
pop
fstl
int3
pusha
rolb
add
jl
jle
adc
stos
sbb
inc
daa
xchg
adc
testb
clc
movsb
jo
xor
sbb
lcall
adc
les
pop
xor
or
mov
inc
and
adc
cwtl
adcl
dec
gs
or
cmp
ret
pop
xor
xchg
push
pop
jle
mov
popf
pop
xorb
add
and
mov
mov
adc
pop
outsl
imul
fwait
pop
sub
mov
pushf
push
or
sub
inc
xchg
push
jmp
test
add
or
call
fmuls
adc
mov
adc
jnp
adc
out
push
bound
add
cwtl
cmp
push
movsl
xchg
add
stos
add
push
rorl
or
and
xor
xchg
inc
loope
rorl
mov
shlb
add
and
mov
lcall
add
add
xchg
or
adc
mov
push
push
arpl
sub
popa
sbb
testb
insl
insl
cmp
pop
dec
addr16
cs
out
fiadds
inc
dec
push
adc
xchg
shrb
adc
sub
aaa
push
outsb
cmpsb
pushf
and
inc
rcll
or
pop
lret
imul
mov
jmp
mov
push
imul
ja
xchg
lods
add
add
xor
insb
push
or
cmp
sbb
xchg
rclb
nop
addb
lds
fnstcw
ja
scas
sbbl
divb
sub
add
mov
pop
jb
or
popa
pop
adc
cmpsl
inc
imul
test
aas
daa
push
icebp
cld
add
aaa
pop
push
mov
xor
xchg
cli
or
mov
and
enter
push
aaa
inc
lock
mov
aaa
xchg
jbe
adc
adc
loopne
and
fwait
lea
fucom
cmp
push
mov
push
push
mov
and
lock
mov
pusha
jg
loopne
xorb
lods
cmp
dec
or
decl
or
insb
xorb
outsl
adcl
rcll
bound
pop
adc
pop
push
xor
lea
test
sub
pop
sub
add
or
xor
sbb
xor
or
adc
pop
jge
adc
or
push
or
sub
push
dec
pop
dec
in
shll
add
pop
roll
mov
pop
clc
dec
mov
inc
mov
sbb
je
movsl
and
or
xor
aam
fs
xor
xchg
insb
sub
pop
sub
sbb
adc
sbb
inc
pop
adc
adc
adc
dec
cmpsb
lods
push
mov
insl
dec
popf
inc
jp
cltd
pop
test
xor
lock
mov
or
inc
inc
sbb
add
jmp
insl
loopne
dec
cmp
orl
lock
popa
pop
out
dec
add
add
test
pop
push
xor
hlt
xchg
xchg
or
mov
sbb
hlt
inc
clc
fnstenv
jmp
mov
les
pop
adc
in
and
fadd
push
pusha
xor
nop
cmp
xchg
xchg
jl
add
xchg
inc
mov
sbb
push
push
sahf
imul
in
jo
fwait
jbe
outsb
adc
fsubl
dec
cmpsb
adc
in
pop
and
push
arpl
mov
pop
dec
jnp
fdivrs
lock
xor
repnz
adcb
pop
fldt
jecxz
mov
jle
push
je
push
and
pushf
cmp
int
pushf
push
pop
mov
or
in
add
insb
dec
mov
popf
pop
fdivrl
decl
sub
xchg
cmp
loopne
sub
inc
jl
mov
in
sti
jle
in
adc
pop
fnstcw
sti
popa
mov
xor
mov
sbb
decb
mov
decl
cmp
jg
and
inc
aas
push
jl
enter
std
xchg
inc
lock
inc
mov
pop
add
pop
in
insb
ds
sbb
push
xchg
aaa
cwtl
xchg
inc
or
les
jo
iret
rclb
daa
and
push
or
scas
mov
dec
xchg
gs
sub
and
cmp
loope
dec
test
mov
roll
lea
jne
cli
push
das
adc
ret
pop
or
cmp
xchg
mov
repnz
and
adc
jnp
add
adc
push
sbb
or
aaa
push
addl
sbb
lock
xchg
or
add
xor
popf
rorb
testb
mov
rorb
or
xchg
outsl
mov
dec
push
enter
xchg
pop
xchg
inc
in
lcall
and
test
or
enter
push
enter
icebp
and
inc
push
sbb
xchg
seto
test
inc
js
jo
nop
inc
push
insb
push
sbb
test
cwtl
clc
mov
sbb
out
out
add
addb
sbbl
mov
dec
jbe
cmp
cmp
les
xchg
xor
cmp
or
mov
lds
insb
mov
mov
daa
sub
addb
or
stc
sti
mov
je
movb
mov
addb
mov
and
or
push
add
je
jb
inc
jl
and
pop
and
mov
enter
pop
push
push
jmp
jmp
inc
rclb
sbb
add
je
or
in
sbb
jae
ret
rorb
stos
sbb
cmp
push
jb
in
jl
adc
adc
sub
jb
ret
add
lret
or
es
in
and
push
push
roll
or
push
cmp
push
pop
dec
xor
push
call
or
push
popa
incl
jle
push
pop
dec
jle
adc
add
and
xor
pop
sbb
inc
rcl
lret
jne
and
dec
sahf
out
dec
fwait
add
push
dec
lcall
lods
into
daa
jmp
daa
sbb
aaa
mov
push
mov
add
xor
or
lock
mov
sahf
cmp
adc
mov
out
ret
daa
adc
pop
xlat
mov
dec
adc
daa
pushf
xchg
out
loopne
dec
or
or
movaps
push
or
jmp
cmpsb
mov
enter
adc
sbb
jge
or
in
push
inc
or
test
mov
das
adc
aaa
adc
mov
sub
test
sbbl
sbb
xor
jge
xchg
or
cmp
das
sbb
sub
sub
addr16
xchg
jl
xchg
dec
pop
inc
jle
js
or
or
add
inc
call
push
lea
lea
call
ds
clc
dec
jb
push
sub
dec
sbb
subl
and
dec
inc
pop
iret
jae
stos
cmpsl
sub
and
adc
cmpsb
in
jns
popf
cmovno
mov
adc
or
repnz
adc
nop
mov
xchg
and
aam
jne
sub
es
repz
push
stos
outsl
add
xchg
arpl
push
sub
pop
loopne
je
inc
dec
cld
and
xchg
pushf
orb
lahf
push
hlt
push
clc
test
fcmovb
neg
pushf
or
fisttpll
sbb
pop
xchg
inc
pop
out
ss
sub
and
or
fisubrl
adc
sub
es
adc
popa
lea
int
ds
outsb
jne
push
insb
popa
jns
jl
imul
mov
test
add
sbb
lret
add
les
and
mov
fwait
or
adc
pushf
adc
mov
adc
popf
sbb
xor
rclb
cmpsl
inc
push
repnz
and
pushl
mov
sbb
cmp
rolb
push
pushf
out
dec
push
fs
jg
js
lods
ret
mov
prefetchw
and
nop
add
incl
xchg
cld
mov
pop
rcll
mov
jle
jns
cmp
inc
cld
ret
dec
jg
outsb
or
imul
pushl
cli
adc
xor
gs
sbb
inc
outsb
fbld
mov
adc
enter
test
inc
data16
xor
adc
movsb
lock
sub
andb
add
lods
or
inc
sbb
dec
xor
push
shrl
adc
adc
dec
in
xchg
mov
nop
push
mov
lahf
mov
inc
xor
xor
cmpsb
push
sbb
add
xchg
dec
cmp
fcoms
fsubr
jns
mov
dec
aam
or
pushf
sbb
xor
and
cmp
adc
ret
int3
int
xlat
fnstenv
mov
sub
and
mov
lcall
movsl
aad
or
sub
xor
or
push
sub
iret
mov
sbb
movsb
cmovo
xchg
inc
sbb
xchg
mov
or
xchg
mov
push
dec
or
into
and
add
and
daa
pop
nop
out
scas
clc
clc
mov
pop
sub
jle
mov
mov
negl
dec
sbb
xlat
sub
dec
lds
adc
or
add
lods
cmpsb
add
add
xor
adc
mov
test
jo
pop
pop
mov
popa
xor
and
cmp
or
dec
cmp
mov
xchg
das
xchg
lea
lds
and
dec
cmp
pop
movl
int3
xchg
ja
cmpsb
inc
inc
cmp
xor
es
mov
and
add
mov
in
or
add
andb
xchg
or
sub
jns
fcomps
adc
hlt
pop
enter
sbb
and
cmp
fsubl
add
cmp
sub
mov
rcll
ret
add
mov
ret
dec
stos
lret
das
jg
push
adc
xchg
nop/reserved
inc
adc
sbb
xchg
push
fcmovnb
sub
sub
repnz
imulb
ror
jne
addb
inc
ja
push
xor
cwtl
fsubrl
outsb
push
sti
pop
mov
xchg
xchg
inc
or
frstor
inc
hlt
sub
push
loope
mov
cmp
adc
je
or
jmp
push
test
adc
xchg
nop
popf
pop
or
mov
xor
adc
in
daa
dec
push
add
cmpb
jle
je
shlb
push
jmp
mov
and
iret
loopne
inc
std
enter
add
nop
dec
and
jmp
ret
out
or
inc
mov
cmp
mov
jg
jne
mov
sbb
xor
mov
sbb
add
call
cld
test
scas
into
and
xor
push
cmp
leave
lock
lock
push
adc
add
pop
daa
nop
lcall
cmp
add
rcl
add
ret
jmp
pop
je
ret
in
or
xchg
daa
rcrl
fsubr
mov
outsb
daa
xor
inc
lods
pop
addb
add
inc
pop
fadd
sub
mov
das
call
or
mov
mov
and
jmp
scas
push
mov
lcall
add
in
pop
xor
scas
or
das
adcb
push
movsl
pop
mov
adc
mov
sbb
xchg
fcoml
sahf
mov
dec
rcrl
sbb
in
js
faddl
ret
cmp
test
fstl
dec
lea
sbbl
adc
mov
loopne
rcll
loopne
pop
fsubr
jmp
mov
rcll
lods
shr
pusha
jno
cmp
arpl
ss
ret
out
es
and
sbb
inc
dec
sub
add
out
inc
adc
jne
mov
mov
inc
test
and
je
adc
add
fst
and
lock
push
xchg
jne
cmp
and
call
ljmp
push
loope
push
sbb
xor
jnp
mov
inc
xchg
jo
lods
add
outsl
fabs
sub
or
nop
mov
inc
pop
or
cmpsb
dec
pop
aam
pop
and
xchg
sub
out
aam
addb
cmp
repnz
loope
stos
push
scas
and
outsl
and
data16
movsl
and
lock
push
popa
pusha
sub
xor
pop
or
ds
add
mov
ljmp
scas
add
clc
movsl
sub
jae
mov
or
pop
stos
dec
je
or
sbb
xchg
loope
xor
in
jmp
adc
xchg
pop
mov
push
add
add
sbb
mov
movsb
rol
sub
ret
das
pop
movsl
test
adc
rorl
js
jne
sbb
out
loope
adc
adc
adc
and
sbb
xchg
add
aas
xor
fcomps
xchg
xor
inc
popa
xchg
adc
bound
filds
xor
stos
mov
imul
jne
in
pop
cmp
xchg
repz
subl
out
mov
mov
outsl
or
add
in
inc
or
push
sub
push
xchg
sbb
cmpb
or
call
test
neg
sbb
push
addr16
fcmovne
jo
dec
jo
sub
mov
imul
jbe
mov
es
cmp
and
pop
fdivl
xchg
cmp
push
dec
sahf
insb
and
inc
pop
sarl
mul
mov
out
adc
inc
cmp
outsb
cmp
inc
sahf
dec
push
dec
call
rorl
fsubs
adc
cmp
adcb
iret
loopne
xchg
pop
cltd
nop
cmpsl
jns
outsb
pop
test
es
push
xor
mov
popf
inc
inc
sbb
adc
arpl
push
dec
pop
pop
mov
pusha
loope
xchg
inc
pop
push
inc
loopne
pop
jns
push
sub
pop
dec
outsl
adc
or
jbe
mov
loope
jno
outsb
sub
in
imul
ja
mov
mov
and
add
pop
pop
insl
adc
daa
jg
push
std
mov
push
enter
mov
add
mov
inc
lret
push
dec
test
push
call
dec
insb
ss
jbe
shlb
sbb
push
adc
imul
bound
push
sub
cmp
incl
add
pop
inc
inc
pop
push
add
inc
sbb
inc
stc
mov
mov
push
outsl
push
rolb
in
mov
mov
mov
js
inc
or
dec
ss
xor
out
jle
imul
imul
sbb
pop
pusha
orb
sbb
or
dec
inc
addb
nop
xchg
cwtl
pushf
dec
dec
dec
dec
mov
dec
dec
dec
mov
mov
dec
rol
int3
dec
dec
dec
dec
rcl
fcomp
dec
dec
dec
dec
loopne
call
dec
lock
clc
cld
daa
daa
and
or
or
daa
daa
daa
adc
sbb
daa
daa
daa
and
sub
mov
daa
xor
jg
mov
or
out
push
xor
mov
push
lea
mov
pusha
lds
pop
arpl
test
repz
or
add
xchg
cmp
adc
call
pop
imul
enter
test
xchg
sbb
nop
mov
sbb
jae
les
pop
pushf
in
mov
nop
mov
sahf
add
lods
inc
in
nop
out
push
mov
sahf
add
mov
nop
out
shrb
enter
inc
sahf
int3
lock
repnz
add
iret
sbb
sbb
xor
dec
call
pop
in
insb
repnz
jae
xor
iret
cmpl
push
movsb
jns
add
enter
add
or
repnz
or
adc
sbb
enter
push
and
and
enter
sub
sbb
shlb
add
push
cmp
ss
shrb
jne
je
gs
sub
pusha
mov
nop
push
fcomps
loopne
addl
enter
ss
dec
daa
inc
jnp
mov
adc
fmull
add
insl
sarb
push
and
insb
add
test
mov
cmp
cmp
lods
push
mov
addr16
xchg
dec
imul
jnp
inc
fs
pop
dec
arpl
jae
inc
inc
or
inc
xchg
cmp
mov
jns
jnp
jae
sbb
xor
jbe
add
fiaddl
push
mov
jg
popa
out
and
mov
ret
push
push
jae
bound
roll
mov
pop
dec
xor
push
mov
pusha
fisttpl
dec
sub
cmp
or
push
outsb
popa
and
pushf
xorl
in
das
pop
or
pop
fcompl
in
pop
or
aas
pop
sbb
and
sub
xchg
or
loopne
inc
and
pop
xchg
sbb
jns
outsl
addr16
out
jle
jne
insb
mov
pop
fs
pusha
imul
and
lcall
push
pop
cmp
nop
xchg
cltd
xor
pop
leave
mov
pop
pusha
adc
arpl
jo
pop
mov
jbe
or
mov
cmp
fsubrs
int
les
dec
hlt
push
mov
mov
popa
xchg
push
add
repnz
es
mov
mov
add
cltd
jbe
movsb
call
push
leave
sub
dec
or
movsb
mov
mov
aad
dec
fsubr
and
and
fiaddl
out
push
pop
jb
nop
push
dec
dec
push
fs
outsl
push
push
inc
pop
in
cmp
fmuls
aam
sbb
int3
enter
cmp
aas
mov
pop
insb
and
mov
sbb
outsb
sbb
jne
jns
scas
sub
pop
out
leave
ljmp
and
test
or
push
jb
or
xchg
idivb
pop
das
gs
pushf
or
out
or
in
js
and
rcll
cmp
pop
add
fs
push
ss
jg
pusha
andl
shlb
pop
xor
in
pop
xor
push
xor
push
in
pusha
add
pop
enter
pop
and
outsl
les
nop
fwait
das
lock
inc
or
jle
push
sbb
push
pop
popl
out
out
fdivs
sub
lcall
pop
sub
bound
addl
pop
mov
push
xor
xor
and
add
movsl
out
xchg
sub
push
flds
std
std
inc
test
cmp
cmp
or
lock
dec
dec
cmpb
dec
outsb
dec
inc
push
push
insl
mov
push
enter
mov
movb
push
push
movsb
pop
mov
not
mov
adc
push
and
add
aaa
loopne
fsts
cmp
js
pop
adc
xchg
adc
shlb
test
cmp
and
int3
inc
adc
fwait
cmp
repnz
and
add
add
stos
lret
xchg
xor
push
inc
add
imul
dec
adc
mov
push
adc
mov
negl
mov
inc
or
dec
aaa
pusha
in
mov
dec
adc
or
test
pop
pop
add
das
pop
out
xor
adc
pop
pop
push
cmp
add
pop
movsb
cmpsl
push
dec
rorb
jno
mov
pop
in
push
sbb
sub
call
xor
push
in
dec
lods
jge
add
cmpl
sbb
ljmp
outsl
inc
mov
mov
cmp
cmp
pop
out
test
xor
adc
mov
push
call
dec
loopne
dec
lahf
xor
mov
adc
and
es
push
push
dec
add
add
icebp
sar
xchg
orl
cmp
jne
dec
repnz
sbb
popa
push
push
insb
pusha
dec
add
push
xchg
lock
das
je
add
mov
push
push
pop
xchg
int
pop
rol
lods
cld
add
lods
inc
into
in
inc
inc
add
inc
jmp
inc
add
add
inc
enter
dec
and
mov
pop
adc
inc
pop
mov
push
insl
stc
mov
pop
js
xchg
data16
mov
mov
sub
push
fistpl
push
xchg
in
add
pop
lcall
mov
mov
pop
enter
les
sub
inc
and
fs
pop
insb
pop
pop
clc
std
xchg
push
ja
imul
mov
enter
cld
movsb
sub
jl
sarl
pop
rorb
ja
jbe
mov
pop
in
dec
push
jb
daa
and
mov
xchg
outsb
mov
inc
or
jae
daa
jnp
mov
pop
sub
clc
sbb
test
inc
or
push
inc
lea
mov
add
inc
push
cmp
pop
pop
sub
insl
leave
add
dec
push
inc
push
push
mov
cmp
sbb
int3
enter
cmp
pop
and
das
mov
mov
lods
lea
sbb
adc
mov
xchg
cmp
enter
lods
sbb
testl
push
lret
addl
cmp
leave
cli
adc
and
and
mulb
inc
ds
loope
scas
leave
xor
mov
lahf
sahf
jnp
mov
rcrl
xchg
or
xor
dec
push
in
movsl
js
mov
out
aaa
aas
cmp
sub
dec
xlat
jle
pop
in
xchg
enter
mov
add
lret
push
out
in
jbe
nop
add
andl
aam
int
imul
out
aaa
rcrl
lret
mov
ss
push
jae
xor
lods
adc
inc
loope
mov
sbb
pop
xchg
dec
inc
sub
js
lods
dec
pop
xor
add
daa
in
mov
aam
js
and
call
mov
rcrb
outsl
hlt
cmpsb
push
pop
test
out
roll
pop
call
add
adc
movb
loopne
jns
pop
ret
pushf
mov
pop
fisubs
test
push
lods
mov
or
rorb
cmp
mov
xor
hlt
fwait
int3
shrb
xchg
in
fcomp
loopne
mov
nop
push
add
inc
subb
adc
lret
inc
mov
sbb
insl
lock
cwtl
das
leave
imul
cmp
dec
or
es
push
cmp
add
or
dec
outsl
add
dec
out
pop
inc
pushf
or
mov
mov
mov
or
pop
push
lahf
scas
mov
dec
outsb
inc
movl
insb
pop
push
outsl
pop
or
bound
dec
push
test
mov
ss
nop
pop
push
lret
xchg
cwtl
adc
aad
or
rolb
or
filds
mov
clc
es
aad
mov
popa
add
mov
cmovg
lret
out
or
movb
or
nop
fsubl
je
add
xor
add
sbb
repz
and
cmpsb
mov
in
cmp
repnz
lret
or
xor
and
mov
and
loopne
fcomps
emms
pop
sub
mov
pop
clc
mov
outsb
pop
or
loop
loopne
clc
or
add
mov
push
sub
or
test
jae
lea
jnp
sbb
jl
test
arpl
mov
test
mov
or
ja
add
pop
cmp
jo
cwtl
cmpsb
push
dec
insl
movups
cld
inc
fsubl
mov
adc
clc
add
cs
aad
mulb
mov
dec
push
add
add
inc
fldt
mov
test
lahf
xor
lods
out
adc
push
add
mov
rcl
mov
or
add
add
mov
outsb
jne
xor
dec
fadds
sar
mov
insl
rolb
fcomps
sbb
push
or
dec
mov
add
push
int3
add
add
or
imul
pop
into
rolb
orb
pop
xor
fists
test
or
cmp
sbb
add
and
add
add
call
ja
dec
mov
jmp
mov
repnz
daa
inc
test
pushf
xchg
push
aad
jo
ret
dec
mov
pusha
pop
or
push
outsb
dec
loopne
adcb
push
pop
ljmp
and
xchg
lock
lret
inc
scas
mov
inc
inc
repnz
loopne
add
mov
pusha
xchg
test
lds
push
movsb
push
or
mov
mov
pop
mov
jo
cmpsl
add
out
sbb
pop
mov
ficomps
mov
les
mov
add
inc
dec
or
pop
lods
push
push
push
or
pop
pop
xchg
xor
mov
add
ret
add
adc
int3
push
movsb
push
add
ss
and
pop
add
ret
add
scas
dec
dec
push
fcomi
adc
in
jl
jae
cmp
jge
dec
xor
mov
mov
das
orl
mov
mov
cmp
jne
popf
cmp
jo
gs
ret
adc
testl
and
cmp
push
pushf
enter
incl
sbb
sbb
or
xor
sub
mov
pop
pushf
mov
andb
jg
cli
or
add
adc
and
cmp
pop
pop
push
nop
test
and
xlat
adc
ret
mov
mov
xor
adc
mov
mov
scas
cwtl
fs
rcll
in
inc
add
sub
mov
jge
push
roll
sbb
test
mov
push
push
xchg
sub
in
movsb
pusha
movsl
in
push
rcrl
or
daa
mov
dec
push
je
and
rcrl
push
cwtl
ljmp
imul
dec
sahf
inc
test
mov
adc
cmpsl
cli
and
in
mov
or
pop
push
push
rolb
jo
lcall
sub
je
and
inc
rcll
fs
popf
insb
push
inc
mov
pop
out
sbb
out
push
mov
lcall
adc
orl
inc
xor
or
js
push
adc
fs
jns
xlat
xor
lock
mov
nop
out
mov
les
dec
pop
lods
pop
fcmovbe
insb
push
clc
and
loopne
cmp
adc
mov
sbb
in
add
in
aam
xchg
add
mov
jge
cs
ret
xor
jne
adc
xor
xor
mov
xchg
push
pop
jo
dec
sbb
pop
lods
cmp
push
push
push
sub
xchg
push
repnz
iret
test
inc
or
mov
xchg
inc
outsb
sub
mov
xchg
push
jp
xlat
outsb
jl
out
inc
iret
je
pop
hlt
shl
in
outsl
rcl
xchg
scas
mov
js
nop
les
dec
leave
inc
outsl
cld
jecxz
push
fs
inc
mov
lahf
outsb
lock
movb
dec
mov
add
mov
xlat
inc
cmp
fsubr
stos
popa
pop
mov
sbb
incb
pop
sub
or
out
pop
sub
add
or
out
mov
pop
daa
add
popa
adc
ss
sub
jp
scas
fmuls
imul
incb
or
outsl
int3
inc
jns
leave
add
adc
dec
jmp
push
push
fstps
fstpt
inc
je
je
out
lods
cmpsl
or
shll
popa
out
pop
push
jp
xchg
jns
jp
inc
or
add
sbb
addr16
jb
fwait
push
sbb
scas
dec
dec
lock
inc
pop
bound
ss
adc
jae
push
bound
fs
mov
in
add
add
adc
jp
faddp
into
push
mov
fildl
addps
mov
add
stc
ss
and
call
jl
lea
push
out
addr16
mov
incl
xor
pop
add
push
outsl
jo
lcall
jge
mov
bound
insl
incb
imul
int
int3
xchg
push
xchg
sbb
xchg
js
or
pusha
xor
pop
call
pop
inc
jnp
pop
aaa
mov
sbb
aam
sbb
in
lahf
sbb
and
push
inc
imul
or
mov
sbb
xor
add
dec
dec
xor
add
movsb
mov
xchg
sub
jmp
xchg
xchg
add
inc
xlat
fwait
call
adcl
jnp
or
xchg
pusha
dec
lock
dec
jbe
nop
ja
insl
xchg
xchg
lcall
inc
sbb
fidivs
fs
and
adc
and
and
or
outsl
dec
cwtl
xchg
ja
jne
fdivs
xchg
imul
fimuls
mov
push
jo
loope
mov
fld
mov
rclb
mov
jns
dec
add
jnp
mov
fsubl
pop
xor
and
and
pop
hlt
fidivrl
fistl
adc
and
sub
inc
les
in
xlat
push
or
or
popa
dec
jno
cmp
insb
testb
or
push
pop
xor
push
and
mov
es
pop
or
jl
xor
pop
or
lods
andl
mov
imul
fsubl
adc
aad
in
cs
push
loop
add
push
test
lahf
adc
ds
mov
das
dec
add
es
jmp
sbb
pop
sub
cmovno
insb
add
fcomi
pop
fdiv
inc
add
inc
loopne
loopne
pop
stc
inc
js
movl
or
insl
or
sahf
adc
enter
cmp
xor
mov
mov
mov
inc
dec
jnp
js
mov
jecxz
daa
dec
push
push
jl
insl
fnstenv
xor
aam
or
jle
dec
lods
push
jecxz
insb
into
mov
pop
sub
pusha
mov
or
enter
xlat
nop
test
ficomps
push
sub
cmp
inc
sub
imul
rolb
inc
jg
jo
in
pop
std
and
inc
repz
mov
or
dec
pushf
xorl
inc
add
inc
gs
nop
adc
jb
outsb
dec
adc
insb
lcall
jne
in
mov
inc
add
cmpsb
mov
scas
pop
and
pop
test
and
movsb
xchg
popa
dec
adc
mov
jo
push
xchg
enter
rorb
enter
int
lock
inc
jl
pop
lods
insb
loope
push
ret
adc
add
sbb
cmp
sub
aam
jl
push
test
lds
xor
xor
in
add
hlt
push
dec
fdivrl
cmpsl
and
inc
mov
xor
sbb
dec
pop
ss
jo
xor
lds
adc
roll
mov
popf
sbb
sbb
inc
sbb
add
jo
cmp
and
add
push
xor
push
loop
jmp
inc
jo
gs
mov
push
jmp
and
push
dec
lret
pusha
push
insb
jno
stc
les
and
pusha
int
push
cwtl
cmp
pop
lcall
pop
push
pop
mov
push
mov
inc
ret
insl
push
inc
ss
sub
jo
add
xor
mov
pop
enter
or
adc
sbb
mov
cs
sub
inc
dec
test
push
jne
rol
sbb
push
ja
mov
movsb
les
sub
inc
sbb
mov
jp
rolb
add
inc
xchg
out
add
cmp
dec
cmp
add
arpl
leave
aad
lahf
out
nop
or
test
mov
nop
xor
xor
scas
and
dec
mov
mov
les
xor
ss
loopne
and
insb
rolb
add
cmp
int
jno
enter
push
rorb
pushf
cltd
rolb
mov
add
or
and
sbbb
cmp
push
xchg
sbb
jo
inc
clc
sbb
inc
inc
jg,pt
orb
xor
sbbl
lock
ficoms
mov
lcall
or
add
push
cmpsb
adc
add
add
or
subl
fcoml
loopne
outsb
xchg
inc
adc
out
sti
inc
call
add
dec
xchg
mov
ss
push
cld
push
lcall
hlt
and
fidivrs
outsl
dec
mov
add
or
fcmovb
movsb
in
adc
mov
movd
dec
push
sub
dec
pop
les
enter
cld
xor
push
inc
and
sub
inc
or
outsb
add
dec
mov
add
fs
or
add
add
or
xor
mov
pop
adc
dec
cli
movl
adc
and
cmpl
lds
cmp
dec
daa
or
mov
pusha
mov
dec
mov
and
mov
int
add
ds
mov
and
adc
mov
cmp
push
js
push
into
sti
int3
jne
adc
lahf
add
xor
jg
cmp
mov
mov
sub
jbe
xor
fld
jb
adc
dec
loopne
sbb
inc
adc
adc
stc
inc
add
aas
cmpsb
cmp
jge
mov
std
scas
dec
dec
jno
mov
mov
divb
fmull
jmp
sub
fldcw
xchg
pop
and
mov
insb
inc
push
jle
jge
xor
mov
or
sbb
push
sbb
push
lret
mov
ret
call
mov
ss
cwtl
pusha
and
adc
dec
loopne
adc
mov
or
adcl
cmpb
shrl
movb
xchg
inc
add
fcomps
sub
add
push
adc
jecxz
fwait
nop
gs
sub
cwtl
outsb
add
nop
mov
addb
add
or
push
jns
inc
sbb
add
rorb
outsl
cmpb
imul
pop
and
pop
dec
add
stos
pop
jbe
cmpb
add
fcoml
aaa
cmpb
pop
pop
mov
incl
ret
and
push
jge
jl
and
mov
inc
mov
ret
shlb
and
xor
adc
imul
fiaddl
or
mov
or
mov
inc
lahf
rcr
mov
aaa
push
outsb
sahf
fidivl
mov
xchg
jo
outsb
enter
cmp
mov
mov
sysret
rcr
xchg
xchg
imul
das
jnp
fs
push
jnp
jge
and
or
xor
inc
ret
pusha
int
inc
addr16
sbb
xlat
or
pop
dec
sub
test
popa
aaa
xchg
inc
imulb
mov
push
and
or
loop
xchg
icebp
jo
jle
jl
or
jg
nop
dec
mov
push
rcrb
xor
push
adc
jl
mov
inc
cmp
or
jmp
not
and
rcll
and
fcompl
daa
push
pop
inc
test
pop
push
jl
mov
xchg
push
add
jmp
cmpsl
testb
sbb
fistpll
pop
mov
out
add
sub
rclb
push
mov
xor
push
pop
lock
push
adc
lahf
aas
inc
add
xchg
sbb
pop
hlt
stos
cmp
inc
xor
pushf
add
lahf
xchg
les
js
pop
inc
add
mov
adc
aas
add
out
and
inc
and
sbb
mov
inc
fsts
scas
test
sbb
enter
push
mov
xchg
mov
push
xor
int3
mov
inc
pop
outsl
inc
push
lret
inc
cmp
gs
inc
cmpsl
mov
pop
dec
and
add
lret
or
pop
idivl
push
inc
and
sbb
or
xor
ja
xor
mov
mov
and
or
cmp
xchg
push
mov
mov
cmpsl
add
pop
mov
cmp
test
mov
daa
insb
fs
clc
and
jno
xor
push
dec
fmull
not
and
mov
mov
pusha
cmp
mov
xchg
add
add
test
out
int3
pop
jmp
pop
mov
and
xor
add
and
pop
jno
jmp
sbb
xchg
lock
loopne
xor
and
xchg
adc
lock
vmovapd
shll
iret
movsl
pop
adc
jle
flds
sbb
incl
data16
out
and
cvttps2pi
xlat
jle
fildll
sub
movsb
je
loopne
sbb
cmpb
repnz
cmp
mov
icebp
lahf
sbb
les
gs
or
xor
jbe
xor
dec
lahf
adc
push
test
sbb
loop
mov
mov
adc
sbb
mov
pop
dec
clc
sub
cmp
push
outsb
fs
mov
push
adc
push
nop
xchg
in
cld
hlt
xlat
push
aam
dec
xor
xchg
inc
xor
xchg
inc
in
ds
cld
sub
addr16
pop
or
adc
clc
adc
dec
inc
clc
pop
out
loop
daa
xor
mov
inc
gs
lea
std
loop
adc
adc
mov
and
jmp
add
sub
int
adc
xchg
sbb
xor
adc
xor
or
xchg
dec
adc
inc
in
loopne
je
add
leave
lahf
imul
sbb
inc
repz
cwtl
test
hlt
add
xor
pop
add
shlb
adc
aas
cmp
pushf
or
add
dec
mov
loop
mov
in
push
cmp
fnsetpm(287
sub
push
mov
and
xor
in
rcrl
xchg
push
mov
in
mov
mov
inc
repnz
push
inc
aaa
adc
enter
nop
mov
popf
mov
sbbb
dec
push
stos
daa
neg
shlb
add
xchg
fsubs
dec
inc
in
xor
xorb
mov
xor
pop
pop
lea
js
mov
mov
adc
dec
sub
cmc
mov
decl
jge
movsl
add
cmpsb
imul
or
aam
and
daa
xor
clc
inc
sbb
sub
mov
jmp
cmp
adc
idiv
mov
lcall
sbb
inc
pusha
inc
and
test
dec
arpl
insb
in
inc
xchg
hlt
in
push
shr
ljmp
xchg
sub
xchg
sub
and
add
call
movsl
sub
into
orl
sub
pop
mov
push
push
iret
daa
adc
insb
loop
nop
jae
or
cmc
fldlg2
pop
push
fiaddl
out
or
jbe
movb
pushf
out
and
decl
sub
sub
cs
adc
enter
adc
enter
adc
push
and
sbb
sbb
push
pop
add
enter
add
enter
add
push
and
or
or
push
fs
inc
dec
icebp
repnz
das
adc
jl
push
sbb
mull
push
inc
or
add
shrl
xor
fldcw
hlt
and
xor
shll
in
fmull
pop
ss
rcl
add
clc
test
imul
imul
cmpsb
imul
jl
je
lcall
nop
pop
mov
cmpsb
imul
lcall
lcall
push
sbb
imul
xor
cmpsb
xor
fsubrs
hlt
and
xor
in
sbb
adc
or
add
clc
cmc
les
cmpsb
imul
fisubrs
xchg
stc
add
mov
or
lea
psubw
sub
mov
out
push
shrb
inc
xchg
and
es
or
add
test
pop
mov
push
cmp
xchg
cmp
xchg
xor
insb
mov
dec
sub
scas
sbb
mov
sub
imul
and
sysexit
cli
xchg
mov
sbbl
roll
add
or
xchg
dec
popa
jns
adc
dec
mov
insb
inc
insb
jns
mov
or
pop
pop
or
sbb
or
sbb
mov
insl
pop
xchg
jle
or
mov
push
dec
jne
cmp
iret
add
cmp
mov
and
xchg
cld
sub
push
jno
push
adc
cmp
pushf
mov
fsubrl
adc
rorb
test
inc
test
pop
push
jo
mov
mov
cs
inc
cmp
adc
scas
mov
sub
pop
shrl
mov
push
in
scas
or
clc
pop
push
push
xor
push
sub
mov
lock
pop
jl
fiadds
test
in
push
div
adc
sbb
aas
dec
and
adc
rolb
aas
in
add
adc
cmp
or
sbb
jg
pop
and
adc
fcos
xlat
call
call
call
jmp
call
sbb
sbb
fnstenv
push
js
in
lcall
lock
sbb
push
loopne
ret
rcl
or
nop
jbe
and
mov
or
cmp
pop
inc
cmp
cmp
or
push
sahf
jb
sub
and
popl
xor
inc
and
inc
inc
fmull
push
jo
push
and
adc
inc
xchg
push
mov
cmp
push
xchg
sbbb
imul
mov
add
jmp
adc
add
sbb
bound
les
sub
sbb
adc
and
add
scas
mov
inc
pop
sub
fisttpll
inc
pop
sub
inc
cltd
xchg
mov
mov
subb
xor
and
shlb
mov
and
add
sbb
nop
or
or
dec
xchg
test
sbb
push
add
jl
sub
imul
mov
push
and
xor
sub
and
or
adc
pop
and
xchg
cmp
dec
inc
xor
mov
aam
inc
mov
icebp
aas
pushf
push
pop
xor
xchg
lret
jnp
pop
cwtl
dec
inc
xor
mov
icebp
or
mov
pop
and
cmp
xorl
adc
loopne
outsl
aam
shrb
aad
pop
gs
add
pusha
outsl
shrl
add
ljmp
aaa
xchg
sub
outsl
xchg
sahf
popf
jle
dec
adc
enter
insb
mov
aaa
pusha
adc
push
push
jle
fwait
sbb
inc
xlat
adc
fwait
enter
insb
push
inc
push
cmp
orb
add
test
xlat
insl
sub
cmpsl
fsubrs
repnz
mov
cmpb
add
addl
aaa
mov
add
inc
icebp
mov
add
imul
add
cmp
stos
add
sar
fdivrs
imul
add
adc
add
adc
ja
mov
out
pusha
dec
rcrl
lahf
xorl
inc
cmpl
adc
adc
lods
addr16
cmp
pop
and
shll
lods
lea
sub
fld
adc
hlt
add
enter
mov
sbbb
mov
movl
or
inc
cmp
repz
ret
fadd
dec
fidivl
xor
ja
mov
xor
pop
data16
fwait
push
mov
test
and
fcom
or
sbb
mov
jmp
sti
and
mov
and
enter
lret
pop
test
pop
xchg
push
or
mov
jbe
or
arpl
cmp
jne
sahf
or
data16
pop
lcall
adcb
pop
push
xor
test
push
xor
inc
dec
pop
jns
or
dec
adcb
cmp
mov
or
or
xor
cmpl
imulb
add
add
pop
and
adc
or
cmpsl
sbb
xlat
enter
or
or
enter
add
hlt
clc
mov
daa
and
pop
andb
jb
js
lret
aad
jbe
add
lock
pop
fiaddl
xor
nop
lods
mov
push
jno
adc
mov
inc
sub
wrmsr
push
inc
cwtl
popf
or
hlt
sub
add
inc
les
out
xor
sub
arpl
mov
loope
push
shl
xor
xchg
xchg
sarb
mov
sub
cmp
jl
xchg
enter
or
into
inc
imul
andb
sbb
stos
dec
mov
or
sub
jae
mov
mov
fstl
addl
cmp
mov
lods
push
dec
sbb
test
mov
xor
das
mov
cld
sub
ret
inc
in
pop
add
lock
in
sbb
inc
cltd
adc
cmp
cmp
jbe
add
mov
ret
lock
cmpsl
pop
lods
xchg
je
jb
adc
sbb
and
xor
mov
in
call
out
sub
push
sahf
inc
les
push
push
pop
loop
pop
mov
fcomip
inc
lock
add
add
adc
ss
adc
mov
sbb
jbe
add
stc
mov
cltd
in
in
insl
loop
lods
loop
enter
or
icebp
mov
stos
in
or
shlb
or
adc
movsl
push
mov
adc
cmpsb
xor
or
adc
adc
adc
add
and
adc
xchg
dec
in
es
push
sbb
leave
repnz
lock
rcrb
dec
or
mov
loopne
jmp
jo
push
mov
pop
or
pop
lock
arpl
das
aaa
mov
jge
pop
sub
iret
and
loopne
pop
notb
popa
xor
cs
fsub
xchg
jbe
adc
add
adc
sub
movsl
cli
call
adc
dec
adc
or
or
pop
mov
mov
data16
sbb
popa
add
sbb
dec
mov
mov
mov
dec
pop
adc
mov
icebp
aam
cmp
jne
lahf
dec
lods
enter
or
dec
fwait
idivb
adcl
jnp
sbb
cmp
mov
movsb
pusha
jns
loopne
xor
outsl
adc
gs
or
iret
sarb
inc
pop
and
adc
test
jne
jno
popf
pop
mov
movsb
mov
or
push
ss
and
rcrb
pop
nop
imul
jge
xchg
sbbb
sbb
lods
xchg
sbb
inc
add
aam
in
add
cmpsl
clc
ja
sbb
and
cmpsl
sbb
sahf
sub
jne
jae
push
mov
or
sub
mov
clc
test
push
or
call
stos
pusha
fbld
pop
imul
jo
js
and
ret
test
movb
mov
add
sbb
out
insb
push
push
imul
sbb
add
imul
dec
subl
mov
and
sub
cmp
inc
push
add
xchg
inc
jns
inc
and
hlt
jmp
inc
call
es
inc
fdiv
pop
add
sbb
inc
cmp
adc
mov
jne
ljmp
loopne
jne
adc
lret
cmp
adc
das
and
sbb
nop
pusha
mov
sbb
repnz
cmp
mov
scas
add
xor
cmp
sub
enter
shll
rcr
jge
jmp
and
jle
xchg
aam
push
add
loopne
in
pop
into
sub
cmp
dec
pushw
add
test
xchg
inc
into
cmp
sbb
cmp
sub
adc
sub
dec
inc
add
fstps
xor
in
adc
cld
mov
enter
add
add
cmp
xchg
jo
in
dec
cltd
lcall
push
push
add
pop
mov
fucomi
push
sub
aas
inc
xchg
or
pop
and
imull
push
xchg
push
mov
sbb
sbb
adc
jno
testb
jnp
les
clc
daa
cld
insb
dec
xchg
iret
sub
pop
jno
adc
sahf
int3
bound
bound
test
fisttps
cmovle
loopne
sub
test
sub
cmpb
dec
repz
jl
mov
rolb
cmp
popa
mov
outsb
lahf
and
loop
les
iret
cmp
add
push
xor
out
sahf
add
add
mov
or
ds
mov
push
movsb
ds
idivl
inc
or
push
es
nop
mov
outsl
std
ret
inc
sub
mov
inc
lods
jle
ret
push
push
mov
loop
stc
mov
jae
cltd
pop
cmp
xorl
sub
jl
mov
xorl
test
imul
mov
out
decl
inc
mov
push
sbb
pop
add
cmp
mov
jg
mov
movsl
push
test
push
push
dec
movb
icebp
into
shrb
cmpb
lahf
insb
fildll
or
jmp
adc
push
sub
flds
faddp
xlat
sub
cmp
scas
add
sti
or
testl
fs
and
add
adc
sbbl
in
arpl
andb
push
je
jg
shrb
jne
pop
or
or
add
inc
fsubs
loope
cld
fmuls
dec
jnp
or
xor
fdivrs
incl
mov
daa
fcoml
jne
lea
ret
or
jmp
aaa
js
cmp
sub
jge
jne
jae
pop
xor
add
jmp
inc
mov
sub
clc
int
inc
jns
clc
out
jae
imul
les
jae
jl
je
jne
xchg
or
js
xchg
shrb
popf
xchg
rolb
fmull
fistps
stc
or
add
dec
add
push
mov
inc
cmp
xchg
pop
cmpsl
or
sbb
push
gs
je
lds
pop
mov
sbb
or
les
clts
adc
mulb
pop
adc
mov
xchg
sbb
push
in
add
push
rcll
inc
js
dec
lea
xchg
push
jo
jbe
inc
out
dec
or
sbbb
mov
add
pop
or
mov
pop
movsb
sub
cwtl
call
shlb
jno
and
jecxz
movsl
cld
add
rol
arpl
inc
or
test
dec
pop
je
push
icebp
and
add
adc
add
mov
add
adc
sub
lea
adc
adc
xchg
add
lahf
add
cmpsb
mov
shrb
or
dec
adc
add
and
push
popf
pop
test
ret
and
adc
pop
loopne
add
xor
repnz
data16
aad
into
mov
rcrl
leave
in
cmpb
and
incb
dec
fsubrs
pushf
adc
and
push
sbb
jbe
push
in
shll
add
je
adc
cmp
and
and
les
arpl
ret
pop
mov
inc
aad
mov
lret
dec
inc
test
mov
cmp
add
jae
or
jo
mov
push
jp
ljmp
cmp
or
xor
add
mov
fstpl
test
xlat
sbbb
dec
in
pop
mov
add
inc
shr
jmp
popa
push
adc
test
push
add
mov
mov
adc
dec
addb
in
add
mov
arpl
hlt
ds
imulb
mov
test
jae
sub
xlat
add
pop
cmp
mov
pusha
add
outsl
cmp
je
aam
stos
mov
inc
das
pop
nop
and
and
xchg
and
cmpsb
je
jnp
xchg
xchg
jno
add
mov
inc
mov
add
movsb
mov
ret
pop
jne
cmp
add
arpl
dec
sahf
popaw
aas
jno
sbb
or
adc
xor
sbbl
cs
adcb
xor
setne
fimuls
mov
ret
pop
jae
jno
xlat
mov
cmp
lods
and
jno
mov
aaa
aas
je
mov
ja
js
mov
leave
dec
les
jecxz
rcrb
movsb
insl
and
or
inc
mull
jb
xchg
lods
loopne
dec
iret
enter
je
cmp
xor
icebp
add
in
mov
sbb
jae
and
clc
push
jne
je
inc
ret
je
mov
inc
insl
cmp
jo
int
inc
mov
push
pop
push
roll
mov
or
ret
or
orb
xlat
adc
mov
xor
and
adc
adc
add
and
push
sbb
mov
cmpl
mov
cmpb
sahf
adc
movl
mov
lods
in
lods
dec
cmp
inc
arpl
lret
bts
js
adc
insb
push
lret
sbbb
inc
test
daa
and
cwtl
mull
mov
shll
imul
filds
pop
add
inc
push
loope
rorb
dec
and
in
lea
roll
out
sbb
xchg
adc
jno
test
xor
add
push
popa
push
sbb
pop
repnz
cmovo
ss
xor
pop
push
sbb
push
pop
cwtl
test
fsubrl
mov
jecxz
popa
or
xor
test
mov
rolb
or
movsb
xchg
loopne
aam
pop
cltd
andb
sub
insb
add
sbb
inc
push
mov
pop
xchg
pop
cmp
jecxz
cmp
and
andl
imul
mov
jle
push
aam
adc
aaa
add
lahf
data16
push
pop
mov
or
js
and
fistl
inc
and
dec
jge
or
fimull
nop
int
ss
fimull
cmp
cs
inc
fisubl
cmp
xor
or
rcrb
sub
dec
jae
or
and
push
stc
sub
aas
dec
and
movl
cmpb
dec
or
ficomps
mov
and
and
or
and
mov
in
xlat
test
inc
sub
xor
enter
and
push
gs
and
xor
dec
lock
push
pusha
push
mov
jno
cmp
gs
ss
das
enter
cltd
lcall
add
in
jb
movups
push
jecxz
and
pop
daa
inc
and
bound
or
lret
sar
mov
aaa
fs
xchg
test
pop
lea
scas
fstl
jne
je
mov
add
push
adc
adc
sbb
and
add
add
arpl
clc
add
mov
mov
jmp
adc
jmp
je
or
add
aas
mov
pop
sbb
test
aas
orb
loope
inc
or
ja
and
outsl
push
cmpsl
and
pop
and
adc
pop
jmp
jl
test
dec
loope
add
sub
sbb
or
xorb
movb
loope
lds
iret
sub
jmp
out
xor
addl
add
pop
aam
nop
inc
adc
add
in
and
pop
sbb
out
jnp
insl
les
js
xor
lea
pop
daa
mov
adc
je
xor
inc
testb
fimuls
fs
pop
testl
fs
jge
or
in
pop
dec
and
addl
push
dec
inc
in
add
sbbb
icebp
mov
dec
es
hlt
roll
cmc
sbbb
mov
clc
jae
sbb
hlt
xchg
inc
jmp
mov
in
inc
cmp
push
pop
add
lret
fwait
or
iret
xor
and
bound
fdivs
jbe
add
or
sbb
add
pop
mov
add
xchg
daa
in
fsubs
hlt
mov
bound
scas
add
add
mov
out
loope
push
dec
pop
sub
push
push
and
or
inc
push
lock
gs
sbb
in
and
test
mov
sbb
dec
adc
enter
mov
xchg
sbb
pop
mov
mov
adc
scas
and
dec
inc
int3
inc
or
add
or
mov
loop
loope
push
or
ret
push
in
xchg
shl
add
sub
xchg
arpl
sub
leave
cmpsb
cmp
insb
ret
pusha
leave
add
addr16
pop
dec
imul
and
jae
je
push
jno
xlat
pop
rcrl
loope
or
lcall
jb
cmpsl
cmpb
scas
adc
enter
push
fidivrs
xor
push
add
add
popa
pop
or
outsl
call
lds
inc
add
xchg
and
adc
lds
and
or
jmp
sbb
mov
lds
fwait
cmpb
in
enter
in
jge
push
and
loopne
leave
inc
lret
aad
enter
addb
push
xor
adc
ljmp
sbb
ret
loope
mov
inc
push
insl
insb
push
inc
and
dec
and
sbb
std
or
sub
pop
cmp
add
and
adc
mov
adc
mov
scas
mov
xchg
push
cmp
and
xor
and
mov
sub
pop
xor
xchg
mov
sub
jbe
dec
ret
xchg
or
movsb
jne
sub
mov
and
inc
sub
out
int3
cmp
xlat
cmc
loopne
or
or
cmp
jnp
enter
cmp
fmull
add
mov
cmp
cmpsb
leave
shll
hlt
xor
jmp
sub
sub
or
cs
mov
mov
push
jg
cwtl
imul
repz
sbb
add
add
xchg
push
or
or
in
jns
pop
add
clc
xchg
xor
cli
push
sub
hlt
adc
jle
fisttpl
push
in
cmpsb
xchg
adc
shrl
roll
popa
addb
add
into
mov
mov
aad
jnp
adc
sbb
les
adc
shlb
cmpsb
or
rcr
sbb
in
lock
cs
lock
cmp
inc
lods
mov
fnstsw
push
pop
enter
sbb
pop
inc
jo,pn
test
xor
test
and
popf
push
push
xor
xchg
adc
das
add
inc
cmp
jno
cmp
jg
cs
inc
lock
dec
cmpsl
inc
hlt
xchg
add
jnp
mov
mov
mov
and
add
xor
ret
stos
call
mov
cmc
xchg
dec
shlb
es
inc
mov
clc
jnp
fcoms
xchg
cmp
rcrb
and
mov
popa
rolb
fcmove
mov
push
int3
orl
fsubp
cmp
dec
push
sbb
pop
inc
lds
adc
add
aaa
and
mov
dec
sbbb
pop
push
js
call
das
fdivl
out
pushl
in
mov
add
inc
and
cmovo
fidivl
cltd
call
mov
cmp
fs
sub
pushf
mov
cmc
imul
cmpsl
sbb
mov
mov
clc
cmpl
inc
sahf
sub
jb
insl
sysenter
scas
cmp
mov
push
es
push
push
mov
clc
push
mov
sbb
or
rcr
adc
pushf
pop
xor
jns
imul
nop
clc
iret
dec
repnz
hlt
and
nop
mov
xor
movsl
hlt
outsl
or
fimull
out
xor
out
xor
cmp
push
add
fcoml
inc
mov
push
add
clc
iret
orb
pushf
cld
sbb
cmpb
add
rorb
in
insb
roll
enter
or
mov
dec
fdivrl
xor
shll
xor
mov
push
aam
or
data16
pop
push
cmpsb
es
push
adc
xchg
or
mov
xchg
sbb
das
jb
je
aas
repz
jne
mov
imull
mov
mov
test
loope
out
loope
rclb
inc
arpl
cmp
cs
xor
adc
xor
and
pop
insb
jne
or
cmpb
cld
popa
fisttpll
inc
adc
dec
lds
pop
xor
lret
mov
enter
mov
add
cld
ss
aaa
or
ss
push
push
push
sbb
nop
mov
or
insl
mov
sub
insl
std
out
lahf
and
xor
xor
dec
imul
mov
push
mov
mov
add
arpl
insb
push
arpl
imul
inc
outsl
pop
js
arpl
in
insl
out
add
daa
jo
jb
jb
ficompl
dec
popa
or
sbb
es
mov
add
data16
daa
ja
aaa
rcrl
jo
addr16
jb
fnsave
data16
push
mov
mov
out
and
cmpsb
insb
daa
push
jg
out
sub
stos
outsb
insb
das
mov
insl
ss
cmpsl
sbb
and
insl
add
daa
mov
cmp
pop
je
jo
fidivl
daa
jns
outsl
sbb
cwtl
int
pushw
das
add
shlb
outsl
pop
push
and
jb
arpl
out
sbb
or
jmp
js
inc
sub
ret
test
pop
dec
pop
add
das
rcrb
cwtl
mov
push
mov
pop
mov
je
inc
jl
add
jno
in
sbb
sbb
xor
enter
and
or
lods
and
cmpb
gs
sub
push
push
add
jmp
push
xor
push
insb
insl
push
les
fildl
out
outsl
mov
pusha
and
sub
jne
pop
scas
call
test
jo
repnz
in
lea
adc
push
adc
inc
js
push
popf
in
xchg
sub
sub
mov
or
sbb
mov
or
out
inc
jnp
dec
out
xchg
ss
add
pop
mov
adc
adc
jno
es
je
and
aaa
push
mov
outsl
adc
xchg
daa
lret
inc
push
out
jbe
cmc
clc
in
in
jecxz
and
test
add
mov
jae
jg
outsl
jb
or
jb
jmp
sbb
xchg
and
pushf
and
jbe
rcrl
hlt
jmp
sbb
pop
xor
and
jae
dec
repz
pop
movsl
pop
adc
inc
mov
pop
ret
mov
sbb
sti
rcll
jmp
int
or
lahf
sbb
jg
adc
adc
fdivp
jle
jb
or
xor
push
aas
jo
les
jmp
rorl
xchg
stos
add
add
iret
and
xchg
dec
pop
and
add
add
jmp
or
xchg
gs
add
or
or
or
or
or
cmpsb
imul
cmpsb
imul
imul
cmpsb
sbb
push
pop
and
and
and
inc
ds
loopne
push
cmpsb
imul
cmpsb
imul
cmpsb
imul
cmp
sbb
ds
pusha
dec
shll
mov
ss
shll
loop
decb
push
cwtl
cmpsb
pop
sbb
or
cs
adc
and
or
in
nop
or
add
pop
adc
sbb
sbb
sbb
sbb
nop
addr16
or
or
and
and
addr16
sahf
movaps
sub
push
in
adc
adc
inc
sahf
add
cmp
in
nop
cmp
inc
push
inc
sahf
add
pop
dec
in
nop
sbb
push
sahf
add
sbb
sbb
sbb
ss
ja
push
popa
imul
bound
and
sbb
sbb
and
sbb
sbb
data16
adcb
and
lock
mov
pusha
sbb
les
fmuls
lret
add
push
and
cmp
and
xchg
adc
cwtl
cmp
mov
aas
inc
pop
loope
ljmp
push
fiaddl
and
sub
jmp
clc
push
adc
push
add
xchg
movsb
rorb
daa
in
pusha
ror
rorb
push
sti
repnz
mov
push
pop
cld
pusha
sbb
test
jae
xchg
out
pop
jge
loopne
faddl
jmp
dec
push
aam
dec
int3
jmp
lret
fsubs
scas
jns
pop
adc
mov
test
out
push
cld
test
add
mov
xchg
lods
sub
out
sbb
or
adc
fdivrl
test
xchg
gs
sbb
sub
loop
faddl
xor
or
adc
or
fs
dec
fidivl
inc
pop
dec
push
js
push
add
push
mov
or
pop
jl
inc
add
push
popf
or
adc
add
xchg
push
mov
aas
mov
call
fs
mov
divb
outsb
out
dec
popa
bound
pop
sub
or
mov
xchg
cmpl
xchg
inc
pop
nop
nop
xchg
add
inc
push
push
inc
fadd
add
nop
scas
pop
sbb
sub
push
xor
daa
or
push
sarb
aas
push
add
add
sub
adc
pop
rclb
orb
push
adc
push
or
adc
adc
leave
push
xor
adc
adc
and
call
shrb
or
inc
js
sarb
cmp
aam
sbb
pop
push
mov
bound
and
nop
add
mov
sbb
adc
jnp
push
lret
mov
and
or
bound
mov
mov
inc
push
outsb
push
and
mov
and
or
test
or
cmp
add
push
fnstenv
xchg
or
and
sbb
cmp
sbb
sub
sub
movsl
subb
sub
push
jb
sub
mov
imul
js
jl
and
dec
gs
jbe
inc
mov
sub
cmc
inc
nop
dec
mov
dec
xchg
pop
or
pop
nop
addb
cmpsl
lods
push
rclb
test
repnz
inc
add
or
test
xor
daa
xchg
out
push
std
inc
jo
sub
mov
mov
in
insb
dec
pop
cmp
push
push
or
dec
and
xor
test
inc
lds
add
insb
outsb
addr16
xor
inc
leave
xchg
jmp
imul
add
adc
pop
test
inc
add
mov
sbb
xorl
pop
lcall
pop
mov
or
push
mov
ret
xchg
mov
dec
out
dec
mov
fldcw
dec
out
sbb
dec
in
and
inc
pop
push
pop
xchg
jp
repnz
pop
int3
pop
jge
jg
mov
adc
enter
cs
mov
sub
pop
mov
pop
xor
sub
pop
icebp
fcmovb
fadd
lahf
xchg
pop
sbb
test
call
test
nop
mov
sbb
push
adc
or
mov
daa
insl
fiadds
adc
adc
pop
leave
aam
fs
pop
inc
xchg
mov
imul
cltd
dec
push
adc
sbb
fs
or
push
adc
adc
fcmovb
inc
sbb
jae
imul
orl
jb
or
sbb
sub
leave
sbb
or
leave
or
add
sub
push
xor
adc
leave
and
and
les
inc
leave
daa
sub
adc
and
push
xchg
and
loopne
loopne
inc
push
sub
or
call
popf
and
dec
push
jo
inc
push
inc
xchg
cs
or
xor
inc
popa
cmpsl
add
push
aam
hlt
out
xchg
xlat
sub
mov
aaa
xorl
sub
adc
clc
push
shlb
clc
icebp
cmpsl
addb
xorl
mov
jg
add
inc
pop
adc
or
xchg
nop
js
mov
jno
enter
sbb
adc
sbb
cmp
jne
push
add
mov
jl
or
or
or
stos
add
lock
push
dec
icebp
mov
test
movsb
sub
inc
sahf
movsl
push
cltd
cld
cld
mov
push
imul
and
and
push
inc
jb
ret
and
orl
sub
nop
sub
inc
pushf
sub
pop
pop
adc
sub
dec
lea
cs
aam
sbb
mov
or
in
orb
insb
inc
outsb
xchg
or
movzwl
insl
outsb
pop
push
test
lret
adc
mov
or
push
imul
inc
dec
pop
sbb
mov
sub
fwait
movsl
jns
cs
xchg
xchg
push
mov
and
xchg
pop
in
mov
bound
push
sbb
add
mov
in
std
xor
inc
mov
or
loope
dec
sbb
lds
xchg
or
inc
ror
or
fdivs
mov
and
sbb
dec
cmpsb
test
cmp
loopne
lock
sti
xchg
add
les
imul
mov
loopne
add
or
adc
inc
pusha
dec
fs
inc
mov
push
mov
in
push
cmp
adc
xchg
icebp
mov
testb
sub
push
mov
fs
cmp
scas
jo
inc
push
jo
jmp
xchg
cmpsb
xchg
and
and
inc
push
movsb
test
or
dec
es
or
xchg
outsl
cmp
mov
pop
adc
xchg
incb
out
testl
mov
popa
mov
adc
cmp
pusha
in
push
adc
xor
cmpsl
imul
imul
push
cmp
dec
xchg
dec
pop
inc
out
add
fwait
insb
inc
jmp
lock
mov
jl
les
xchg
xor
pop
push
das
push
and
dec
into
cwtl
sbb
popa
mov
mov
inc
mov
jl
add
movsb
fs
fwait
dec
and
sub
adc
insb
add
push
push
ljmp
imul
or
inc
in
movb
mov
pusha
call
pop
cmp
add
test
rorl
movsb
cmpsb
xchg
movb
push
aad
daa
test
test
xlat
mov
and
lods
pop
xor
adc
cmpl
inc
std
in
mov
fsubs
mov
lds
add
xchg
sub
add
dec
pop
jne
cmp
cld
nop
mov
xor
jbe
push
sti
pop
hlt
daa
add
insb
je
test
adcb
repz
pop
lret
test
adc
mov
cwtl
dec
add
sub
xchg
xchg
dec
add
cmp
pop
or
inc
outsl
cmp
jno
fdivs
test
dec
xchg
je
and
xor
jo
dec
add
inc
dec
or
sbb
and
cmpsl
dec
push
dec
lds
pop
sbb
sbb
cmpps
xchg
mov
lcall
dec
cmp
and
or
xor
mov
adcl
cmc
jecxz
shlb
ss
lds
and
cmp
je
push
push
mov
daa
data16
push
sbb
mov
xchg
ds
pop
xchg
lock
mov
mov
adc
push
lock
cmp
inc
push
push
push
dec
dec
xlat
add
or
mov
push
xchg
add
jle
jp
pop
out
xor
jg
or
mov
push
sbb
pushl
mov
or
add
nop
adc
cmp
jne
add
test
inc
sub
add
shlb
prefetch
or
pop
inc
pop
mov
add
popl
cltd
test
and
mov
cmp
xor
fdiv
or
dec
pop
insl
and
push
shr
test
loopne
dec
push
in
enter
aas
leave
mov
sbb
pop
and
les
addb
sbb
repnz
adc
test
test
cld
inc
fdivrl
add
mov
inc
imul
pusha
mov
sbbl
ss
outsl
jae
pop
and
je
dec
add
popf
mov
out
outsb
jae
cmp
sub
mov
jb
add
movb
ret
nop
call
jb
pmulhuw
adc
jecxz
or
cs
xchg
in
mov
int
nop
jbe
adc
mov
add
xchg
inc
fimuls
push
mov
mov
jg
push
rorb
loopne
xchg
repnz
loopne
lcall
test
lcall
test
sub
xchg
es
fisubl
mov
pusha
pop
clc
pop
inc
add
es
cmp
loop
addl
dec
and
mov
cwtl
xorl
sub
jae
popa
cmp
adcb
rorb
push
popa
repnz
inc
sbb
insb
dec
mov
dec
push
out
outsb
mov
decb
adc
and
and
push
pusha
into
mov
jne
xchg
mov
test
pop
dec
and
cmp
test
adc
pop
pusha
adc
movups
add
mov
sub
pop
inc
sahf
or
cmp
pop
dec
les
ror
push
xchg
or
lods
mov
and
xor
lods
xchg
cmp
bound
pop
scas
aam
shll
sbb
cmp
inc
loop
pop
jns
rcrb
dec
xchg
jb
pop
test
push
cmp
mov
add
dec
cmpsb
dec
xchg
sbb
arpl
xchg
pop
or
cmp
inc
clc
test
mov
cmp
cs
loop
addb
dec
add
es
xor
in
jbe
push
mov
iret
aas
mov
and
xchg
xchg
fs
push
inc
pop
or
mov
dec
in
sub
jne
mov
inc
or
or
add
mov
gs
pop
arpl
stos
add
pop
pusha
outsb
mov
xor
add
xchg
push
mov
add
je
daa
or
jnp
xor
sub
jg
aaa
dec
inc
sub
sub
and
sub
push
pop
xchg
out
sti
sbb
cmp
sub
sub
and
xor
or
xor
sub
addr16
cmp
add
in
adc
inc
and
outsb
xchg
or
cmp
or
insl
pop
jg
insb
gs
leave
xor
or
dec
xor
pop
xchg
push
sbb
insb
jae
test
mov
lock
jno
incb
in
add
and
mov
inc
mov
cmp
mov
adc
fxch
daa
pop
in
imul
mov
decb
repz
mov
cmp
pop
frstor
cmp
pop
stc
jns
lock
jne
jo
inc
dec
push
sub
jmp
sbb
and
mov
mov
add
nop
mov
push
or
push
popa
add
test
rcl
mov
mov
aaa
mov
clc
imul
and
and
mov
ret
dec
pop
sbb
popl
nop
pop
pop
es
jge
cmp
or
loop
daa
add
mov
xor
add
outsb
jg
push
cmp
je
or
je
xor
es
pop
mov
add
pushl
mov
pushf
mov
cltd
inc
addb
pop
xchg
lock
pop
mov
mov
push
add
clc
or
ffreep
mov
sbb
fildl
mov
mov
xchg
in
int3
es
pop
or
arpl
int3
mov
inc
xor
xchg
and
jge
icebp
xchg
add
lock
add
mov
xor
mov
aas
pop
push
dec
dec
dec
inc
dec
push
add
inc
dec
shlb
inc
jge
or
sti
jp
aas
and
xor
aaa
test
or
cmp
add
add
xchg
sbbl
adc
inc
cwtl
cmp
or
sbb
inc
aaa
mov
and
test
sub
pop
adc
sub
mov
shlb
mov
adc
jb
fldl
jmp
cmp
stos
jecxz
and
loope
stos
test
pop
dec
fcmovnbe
xchg
sub
inc
es
mov
jne
lds
popa
cmpsl
sar
clc
xor
les
sbb
ret
cmp
lahf
lock
jnp
dec
pop
adc
ss
clc
or
lods
mov
popa
call
jbe
in
add
xor
das
fs
push
loop
sub
xor
push
cwtl
add
lcall
push
cld
sbb
ret
cmp
bound
roll
or
inc
xor
cmp
push
mov
cmp
insl
cmp
mov
loopne
or
or
inc
push
adc
in
or
sub
xchg
imul
outsb
addb
mov
or
mov
inc
and
adc
dec
cmp
push
in
cltd
out
xor
icebp
pause
insb
subl
xor
lock
cltd
jo
adc
aaa
in
outsl
inc
jae
add
or
es
sbb
ret
add
and
int
jl
jae
pop
ss
push
jns
popa
sub
mov
push
je
add
pusha
add
sub
add
popa
mov
add
popa
xchg
pusha
mov
mov
sbbb
adc
or
lods
scas
sbb
insl
inc
add
inc
decb
xchg
inc
add
inc
mov
lcall
hlt
push
pop
push
popa
shrl
mov
or
inc
or
cmpsl
mov
andl
shll
or
inc
mov
inc
mov
xchg
cmp
int3
inc
and
cwtl
lods
xchg
add
lcall
or
mov
adc
push
pop
add
outsb
cmp
jbe
dec
push
test
subb
pop
adc
lods
outsb
inc
jo
pop
jb
add
cwtl
push
cwtl
pop
sub
xchg
cwtl
jl
adc
jns
lock
pop
cmp
outsb
xchg
stos
xchg
xchg
pushf
cwtl
adc
adc
ss
pop
fcoms
rcl
aaa
add
inc
mov
jl
xor
nop
mov
cs
push
push
push
add
in
out
pop
shll
shrl
cwtl
inc
leave
mov
pushf
jo
cmpl
and
aaa
cld
xchg
int3
lds
sub
adc
repnz
lods
inc
sub
mov
push
push
sbb
in
int
nop
movb
push
loop
hlt
mov
aaa
pushf
jno
stc
mov
sbb
add
jge
repnz
repnz
scas
in
inc
and
and
and
orb
addl
inc
inc
fiadds
adc
xor
xor
insl
bound
cmp
leave
adc
insl
bound
movsb
js
inc
jo
or
xchg
or
fs
cmpsl
test
jne
cltd
mov
mov
dec
sti
ja
arpl
jbe
mov
enter
lea
or
ret
test
enter
add
xchg
out
clc
add
hlt
cs
imul
nop
sub
rclb
adc
add
add
and
inc
or
push
loop
cmp
and
mov
pop
adc
jo
mov
or
dec
test
push
fbld
pushf
pop
or
mov
xor
lods
xchg
cld
and
negl
je
xor
and
pop
jo
fucomip
sbb
xlat
mov
lods
lods
push
loopne
sbb
movb
adc
push
lock
jl
andb
pushf
add
or
js
inc
ret
nop
or
push
or
and
out
mov
add
imul
add
imul
add
or
push
sbb
push
shrl
xchg
mov
dec
pop
sub
jns
and
adc
and
xor
mov
cmp
ss
add
xchg
mov
call
ja
in
xchg
fdivrl
testb
push
cmp
pushl
push
sbb
in
pop
mov
sbb
sbb
sub
push
xor
loopne
xor
cmp
loopne
mov
lcall
push
mov
js
adc
rclb
push
psrld
add
inc
or
ret
sub
mov
or
inc
jl
mov
xchg
mov
inc
inc
dec
sub
add
fbstp
ja
outsl
arpl
xor
call
jnp
pop
js
out
mov
scas
mov
adc
call
mov
inc
jmp
test
dec
mov
loopne,pn
lahf
jns
gs
or
fcomps
ret
add
pop
popf
inc
jg
lods
into
fcoms
or
lgdtl
mov
xchg
adc
pusha
fnstsw
or
arpl
sbb
mov
jne
or
and
jecxz
rolb
movsl
orb
add
jb
addr16
or
sbb
lea
or
cmp
mov
mov
sub
and
inc
fmull
pop
push
les
mov
add
sub
and
jb
je
sub
or
enter
adc
gs
imul
or
add
sbb
xadd
cmpsb
cmpsb
sub
adc
push
push
push
mov
test
pop
or
jmp
sbb
sub
popf
adc
test
mov
lea
xor
mov
lahf
jg
jb
pop
setb
and
fs
and
and
mov
ja
and
add
loope
cmp
push
add
add
add
add
sub
pop
add
xchg
inc
inc
or
or
mov
or
or
cmp
cmp
lock
decl
add
cmp
in
in
jecxz
jmp
jmp
jmp
fdivrp
fdivr
fidivl
fsubs
mov
sar
sar
sar
iret
imul
int
imul
leave
xchg
xlat
pop
mov
dec
push
fadds
push
fldenv
lret
gs
and
or
andb
sbb
pop
or
xor
sub
sarl
inc
fidivs
push
xor
push
mov
mov
lods
imul
clc
js
pushf
call
cmp
xchg
xchg
scas
stc
lcall
movups
test
mov
pushf
mov
lret
loopne
lret
data16
enter
push
pop
int
lret
mov
insb
fs
dec
jecxz
mov
fstpt
repz
cmp
fld
fimull
cs
mov
mov
jns
test
push
insb
les
jns
mov
sub
push
pusha
pop
int3
mov
arpl
sbb
lcall
out
or
aas
inc
cld
mov
ss
rolb
dec
lcall
jns
and
sub
dec
inc
add
inc
mov
adc
cmp
test
fdivrp
push
lods
roll
or
mov
mull
mov
push
push
or
cmp
sub
add
int3
orl
imul
inc
inc
test
mov
hlt
mov
loope
faddl
cmpl
pop
push
and
enter
addr16
cmp
lahf
je
pop
dec
add
sbb
pop
test
xchg
mov
loopne
push
clc
jbe
lahf
pushf
addl
outsl
ja
jns
aad
or
push
popa
imul
sbb
ja
ds
fnsave
addr16
inc
xchg
and
add
cvttps2pi
jns
sbb
fcmove
pusha
mov
outsb
andb
scas
adc
test
ficoml
enter
daa
cmpb
cmp
adc
in
fbstp
cmp
orl
mov
adc
dec
cld
sub
aas
cmp
sub
movsl
sub
xlat
inc
push
scas
movsb
pop
xchg
push
mov
popa
pop
xlat
mov
orl
mov
add
add
incl
sarl
aaa
mov
mov
mov
or
mov
mov
mov
mov
mov
jg
stc
and
jg
mov
mov
mov
mov
mov
mov
push
mov
xor
cmp
call
dec
cmp
inc
inc
inc
inc
inc
aas
jo
or
outsl
std
jmp
inc
clc
mov
mov
lock
arpl
pushl
or
dec
shll
dec
or
push
fwait
cmpsb
imul
data16
inc
vmread
dec
push
cld
sbb
rclb
cmp
pop
mov
xor
loopne
lock
pop
pushf
test
jns
imul
dec
adc
mov
fwait
enter
sbb
ss
dec
in
inc
push
pop
push
mov
pop
mov
xor
mov
sbb
mov
lcall
mov
andb
clc
add
dec
imul
adc
and
push
mov
and
insb
dec
imul
fcoms
aam
sub
scas
mov
mov
fs
adc
xchg
int
fldenv
cmp
add
adc
repnz
push
js
pop
data16
push
sub
xchg
insb
sbb
sbb
sarb
cmp
into
es
sub
hlt
addl
sub
push
iret
inc
pop
and
sbb
or
pop
xchg
xchg
in
ss
push
fs
jle
mov
mov
inc
incb
inc
outsl
jl
inc
in
and
icebp
movb
cmp
jo
adc
jl
orb
jbe
push
push
push
pop
add
xchg
out
pusha
pop
pop
enter
or
mov
sbb
inc
sub
sub
pusha
and
pop
or
fmuls
pusha
mov
push
sbb
sub
xchg
cmp
sarb
fs
pop
pop
fwait
in
inc
and
bound
loop
lods
std
adc
add
sub
mov
data16
cltd
cli
mov
jns
in
and
pop
jb
scas
push
mov
cwtl
jl
adc
inc
enter
mov
aam
cld
and
sub
mov
push
add
mov
hlt
or
pop
or
rorl
je
and
adc
push
or
or
xor
inc
popf
hlt
jne
add
and
xchg
dec
add
enter
movsb
sub
add
test
cmp
pop
mov
jns
mov
pop
jnp
sbb
xchg
or
enter
mov
xor
fisttpll
leave
rclb
mov
jns
add
dec
add
cmp
xchg
popf
jae
lock
addl
push
xchg
inc
dec
rcrb
xchg
jnp
fnstenv
xor
nop
fnstsw
or
sbb
lock
sub
dec
ret
mov
je
jno
enter
xor
jge
aas
and
and
adc
push
or
or
push
in
sub
inc
push
in
and
bound
les
pop
mov
cmp
in
mov
cmpsb
rolb
dec
shll
gs
dec
shll
mov
pop
rol
jle
dec
inc
popa
mov
je,pn
mov
in
mov
jecxz
add
pop
push
fistpll
push
movaps
sub
pop
pop
xor
pop
mov
xlat
jl
test
pop
cmp
push
dec
clc
xchg
pop
inc
out
push
jb
adc
inc
adc
add
lods
push
mov
mov
mov
dec
and
add
adc
pop
cld
mov
ss
nop
add
jmp
sbbb
jo
dec
bound
push
xchg
jbe
test
pop
dec
add
stc
add
aas
cmpsb
je
push
and
mov
and
shlb
add
or
testb
add
or
nop
adc
add
push
mov
adc
push
push
lock
mov
xor
adc
pop
mov
data16
es
lahf
leave
mov
inc
push
dec
jne
xor
test
inc
fisttps
dec
lock
cmp
adc
mov
adc
ret
add
jo
xlat
sbb
into
sbb
orb
push
or
xchg
dec
nop
insb
inc
mov
cmpsl
jb
daa
cmp
ja
paddsb
pop
dec
inc
or
inc
mov
pop
add
push
xchg
daa
xchg
das
jbe
push
loopne
push
push
inc
add
inc
daa
push
jo
pop
add
mov
or
inc
insb
popa
adc
xor
push
fs
ficompl
addl
daa
adc
decl
jo
imul
xchg
mov
btc
push
movb
or
jo
and
push
or
mov
push
pop
add
out
je
sbb
outsl
es
or
xchg
and
popl
mov
mov
xchg
cwtl
xchg
sti
xor
gs
adc
adc
dec
popa
xor
test
xchg
jl
fmull
lods
xchg
xor
push
mov
stc
inc
push
cmovo
andb
fwait
mov
add
mov
test
imul
push
add
adc
mov
ja
mov
adc
inc
xchg
aam
pop
lahf
mov
outsb
stc
daa
pop
mov
dec
mov
iret
outsl
and
inc
jne
mov
rcrb
jns
push
in
xchg
lret
push
xchg
push
fistpll
dec
push
pop
gs
push
sub
stc
or
xchg
inc
or
and
je
fildll
dec
xchg
add
aaa
call
push
or
add
cmp
jl
movsl
fcmovbe
outsl
pop
jno
dec
add
fdivrs
push
xor
push
scas
xorl
lea
or
inc
add
cmp
xor
mov
inc
and
rolb
adc
mov
xchg
mov
jnp
iret
in
adc
clc
jmp
add
or
jl
int3
and
cwtl
mov
mov
mov
xchg
push
cmp
cmp
jl
adc
sbb
or
imul
push
push
movsl
jno
jmp
push
push
mov
pop
pop
xchg
in
push
lods
or
adc
gs
adc
sbb
gs
xchg
and
and
sub
daa
pop
xchg
sub
scas
push
push
pop
lret
sbb
outsl
dec
pusha
sub
mov
sbbl
inc
or
xor
loope
cmpsl
divb
xchg
mov
pop
aaa
inc
call
pop
repnz
add
je
sub
dec
repnz
add
outsb
fisubs
aaa
xchg
je
ja
shl
jge
movl
dec
or
int3
xor
int
nop
cwtl
xchg
fisttps
pusha
adc
add
xchg
adc
testb
fimull
sahf
lods
adc
add
imulb
sbb
fstl
outsb
add
sub
pop
cmp
jge
pop
cmp
das
mov
xlat
dec
xchg
add
popa
add
add
repz
insl
fcomps
ss
fs
sahf
mov
inc
xchg
inc
or
inc
pop
and
and
movl
or
lods
inc
and
test
icebp
push
insl
adc
cmp
or
cmpsl
outsl
test
or
xchg
sub
inc
lea
xor
shlb
test
inc
and
faddl
fcomps
ficoms
jp
and
mov
sbb
pop
sbb
and
pop
xor
jo
mov
xchg
ds
test
ret
dec
jae
xor
imul
pop
xor
pusha
add
lds
adc
add
and
push
cs
es
ret
pop
pop
insb
insb
push
imul
inc
movsl
pop
push
pop
mov
inc
fs
movb
xor
mov
pop
inc
scas
sbb
subb
pop
scas
enter
adc
push
ret
adc
add
loopne
push
sbb
rorb
pop
xchg
adc
mov
or
xor
xchg
mov
orb
and
cmp
pop
dec
or
adc
xor
pop
add
push
aas
neg
xchg
inc
inc
or
push
push
leave
imul
data16
and
and
fisubl
test
cmpsl
xor
nop
clc
dec
arpl
sti
cmp
xchg
push
inc
cmp
push
out
cmp
adc
sub
inc
ja
sarl
jb
pop
sbb
fildll
jmp
cmp
jne
adc
sub
add
dec
arpl
bound
lahf
les
adc
orb
mov
add
cwtl
or
insb
imul
sti
bound
xchg
test
or
rcrb
add
cmp
or
jge
cmp
dec
cmp
inc
inc
pop
mov
mov
add
ljmp
in
sub
sub
enter
push
in
lods
sar
push
mov
enter
icebp
cmp
push
sbb
insl
jmp
clc
push
sbb
jae
adc
inc
aaa
sbb
jo
xlat
leave
les
adc
es
jnp
pop
add
and
jo
cmp
je
arpl
push
mov
cld
add
mov
sub
aad
in
int3
add
dec
in
lea
jns
xchg
lcall
mov
xor
test
mov
adc
jge
arpl
iret
xor
hlt
or
mov
dec
inc
ja
mov
mov
and
jp
in
adcb
lock
add
add
push
lret
and
add
push
jno
push
or
xchg
pop
cmp
lock
arpl
xchg
push
add
jle
adc
idiv
add
out
lock
hlt
push
dec
and
add
repnz
fmuls
sbb
inc
dec
jne
imul
mov
adc
jl
add
pusha
test
xor
mov
test
inc
dec
pushf
inc
stos
add
shlb
cmp
inc
jne
and
out
stc
shlb
insl
cmpsb
addr16
sub
subl
xor
jnp
cmpsl
inc
pop
in
sbb
hlt
or
es
add
inc
jl
shrb
push
dec
dec
call
push
rsqrtps
add
filds
lcall
push
scas
inc
cmp
dec
dec
adc
fcmovb
rolb
and
jmp
imul
and
insl
sbb
pop
in
call
mov
mov
les
jmp
add
pop
or
push
xor
movsb
imul
push
mov
xchg
dec
sbb
sub
lods
or
fistl
fisubrl
lea
xchg
call
jb
mov
push
xchg
push
pop
test
mov
mov
shll
fldt
das
xchg
inc
jo
jl
mov
cmpsl
or
mov
ret
sbb
add
pop
pop
adc
pop
mov
push
cmp
je
out
mov
test
out
push
mov
das
rclb
add
xor
pop
or
pop
sbb
xchg
ret
mov
fmuls
sub
fsubrl
js
sbb
jge
inc
add
insl
mov
cmp
mov
add
cltd
cmpsl
gs
andb
jbe
cs
cs
insb
xor
in
movsl
pusha
mov
jmp
xchg
daa
mov
xor
sti
cmp
out
push
jecxz
je
ljmp
lods
nop
xchg
ja
mov
sub
mov
pop
pop
sbb
push
push
add
lds
pop
enter
pop
and
ret
ja
and
lds
int3
sbb
push
dec
jnp
adc
or
mulb
add
or
mov
and
push
add
adcb
push
jo
std
je
addb
sbb
lea
xor
and
lds
fsubr
pop
pop
xor
jmp
shll
sub
or
cltd
test
pop
sbb
lock
push
push
push
cmp
sbb
pop
xor
popa
xor
cltd
pop
pop
and
fistpll
in
adc
xor
adc
or
pop
in
addb
pop
xor
lret
or
inc
mov
ret
or
and
in
add
xor
xor
pop
pop
fnstsw
mov
xchg
push
fs
stc
mov
sbb
aam
jo
arpl
aaa
adc
adc
je
add
jp
cmp
outsl
es
lea
js
add
sub
dec
and
xchg
cmp
mov
inc
bound
pop
xor
sbb
and
add
cmp
and
and
jle
sarl
sub
imul
sub
push
insl
pop
sub
les
dec
push
pop
add
adc
adc
sbb
pop
dec
adc
or
pop
lret
popa
sub
mov
adcb
xchg
jbe
mov
push
xor
pop
inc
test
shl
daa
loope
add
andl
add
mov
leave
cwtl
sub
mov
dec
fisttps
xchg
xchg
xchg
cwtl
fsubs
insl
daa
jbe
imul
outsb
and
add
jecxz
sbb
dec
mov
mov
jmp
adc
movsb
mov
add
mov
jae
mov
adc
pop
pop
into
jne
imul
sub
aas
sbb
jmp
sub
add
testb
xchg
mov
mov
fbld
mov
push
dec
sub
add
icebp
fisttps
inc
add
popf
lods
leave
inc
outsb
push
dec
push
sbb
push
mov
popa
loopne
test
pushf
je
adc
push
adc
adc
cmp
or
cmpsl
shll
push
xchg
int3
ficoml
cmp
push
push
jne
ss
mov
sbb
adc
adc
xor
rcrb
fst
push
ja
xor
mov
ds
inc
add
add
sub
and
int3
notl
sbb
test
cmp
and
movb
adc
mov
sbb
fbld
xlat
loopne
and
lret
fcmovb
inc
subb
xlat
push
adc
mov
or
cli
jmp
and
inc
adc
xchg
pushf
pop
lock
je
xor
hlt
and
movsl
adc
dec
mov
test
inc
mov
arpl
dec
fbld
push
test
adc
push
cmp
sub
pop
pop
test
cmp
push
lods
and
or
addl
jns
loope
sub
ds
sbb
pop
mov
add
rcrb
sub
adc
sub
fildll
cld
push
adc
add
mov
xchg
ss
mov
add
js
or
pop
mov
cli
xor
add
push
and
notb
int
cltd
imul
out
inc
push
movsb
mov
outsb
dec
repnz
sub
movsb
rorb
add
adc
je
dec
xor
fwait
fwait
test
repz
sbb
lds
sbb
add
sub
push
rcrb
add
dec
scas
cmc
push
leave
add
and
lds
lret
repnz
dec
push
loop
mov
jle
jl
xchg
cmp
and
bound
adc
mov
add
sub
push
mov
sub
jge
aad
push
or
mov
sub
pop
test
inc
xchg
addr16
or
aas
sub
cld
aad
mov
jle
fisubs
aas
jp
xor
popf
xor
jmp
dec
pop
fwait
dec
mov
mov
dec
mov
mov
or
cmc
xchg
pop
nop
ja
push
lods
inc
push
sub
cwtl
xchg
loopne
push
add
xchg
inc
pop
lods
push
sub
mov
iret
pop
dec
int3
fimull
outsb
sub
pop
sub
pop
in
call
lods
jnp
add
add
xchg
mov
push
pusha
sub
sahf
arpl
dec
shll
jge
lods
or
xchg
inc
jb
pop
add
test
pop
or
imul
push
cmpsb
loopne
or
shrl
aam
mov
pusha
int
mov
cmp
cmp
pushw
mov
or
inc
push
push
dec
or
mov
add
dec
push
hlt
pop
andl
xor
xchg
mov
mov
and
gs
ficoms
mov
mov
or
inc
mov
ret
shrl
sub
pushl
pop
push
and
jmp
cmp
je
mov
test
jbe
fldt
mov
add
or
push
pop
repnz
sub
adc
pop
imull
pop
out
aaa
jo
pop
cmp
cmp
xor
xchg
or
sbb
jb
cmpsb
xor
sbb
xchg
movsb
pop
sbb
xor
jne
dec
mov
dec
dec
in
inc
push
xchg
scas
jno
dec
jbe
push
adc
xlat
cmpb
ds
and
out
test
and
add
dec
dec
lea
inc
pop
xchg
cmp
xor
mov
inc
dec
add
pop
mov
scas
pusha
or
jno
jno
aaa
lods
add
add
iret
aam
shlb
pop
and
xchg
mov
mov
mov
int3
add
or
mov
add
xor
inc
dec
mov
je
ss
fsubrl
fs
fadd
hlt
or
pop
sbb
xchg
test
je
cmp
jl
sbbb
push
sbb
pop
addr16
cmp
lcall
loopne
adc
or
add
inc
pop
xchg
sbb
test
jmp
leave
sbb
clc
lret
shll
loop
fs
cmp
aam
xor
add
dec
dec
xchg
cwtl
out
leavew
pop
xchg
popf
loopne
cwtl
adc
pop
add
ret
inc
dec
jne
pop
pop
es
je
sbb
xchg
jne
jl
mov
cmp
xchg
out
insb
movsl
scas
cmp
push
xchg
sbb
push
xor
add
loopne
xchg
lock
mov
mov
jle
mov
mov
adc
add
pop
mov
pusha
add
pop
lret
fisttpl
stc
jae
mov
sbb
pusha
addb
xchg
in
ljmp
shl
mov
add
add
pop
pop
push
pop
lcall
pusha
push
pop
add
mov
jmp
lcall
add
bound
popl
adcl
xor
adc
push
nop
and
pop
xchg
cmp
inc
adc
xor
mov
inc
xchg
mov
mov
jmp
push
inc
insb
xor
int
das
repnz
fs
jmp
fadds
adcb
push
jo
jp
out
ret
push
sbb
adc
ret
xor
and
ja
addr16
pusha
popa
mov
fisttpl
xchg
xor
and
insl
xlat
daa
imul
ret
lock
test
pop
sub
pop
aam
add
inc
int3
lds
adcb
aaa
push
cmpsb
lds
fwait
int3
and
pop
adc
mov
fdivrs
push
inc
jmp
cmpsl
fcompl
add
inc
push
fcomps
stos
jg
pop
sbb
andl
orl
movb
jmp
mov
push
cmp
mov
add
pop
incl
inc
loope
xor
xchg
imul
push
arpl
in
push
xor
inc
pop
and
pop
push
and
add
mov
push
xor
xor
sub
add
pop
mov
cli
mov
faddl
or
pop
or
dec
dec
push
inc
lds
aaa
xlat
mov
inc
jl
mov
idiv
push
xchg
fldcw
lods
or
pop
or
xchg
and
and
sub
cmpsl
or
stos
test
cmp
jne
test
mov
jmp
cmp
clc
jne
sub
xchg
and
sbb
mov
sub
pop
pop
mov
xor
movsb
jne
cmpb
dec
push
cmpl
xlat
push
adc
pop
sbb
out
dec
fistps
test
ret
ljmp
cs
sub
dec
and
jne
shl
push
sar
inc
dec
push
pop
dec
xchg
push
inc
leave
shrl
out
out
and
addl
jo
add
jb
sarb
inc
ja
jnp
jne
les
pop
and
jne
invd
dec
and
popa
push
push
push
mov
dec
mov
inc
mov
mov
mov
inc
pop
lret
inc
add
shl
inc
testb
iret
dec
push
pop
popa
cmpsl
cmpb
mov
roll
sub
mov
inc
addl
ret
cmp
xchg
push
xchg
stos
test
push
inc
aaa
add
out
jae
mov
dec
das
lock
sub
inc
adc
sahf
out
pop
flds
sub
add
push
pop
mov
dec
mov
mov
imul
imul
pop
mov
add
jle
sbb
push
and
in
cmc
push
mov
inc
xor
push
pop
or
xchg
cmp
das
push
add
xor
das
adc
rolb
dec
push
loopne
js
roll
mov
inc
lret
inc
dec
add
bound
lahf
push
xchg
dec
pop
in
pusha
inc
add
push
inc
or
in
in
cli
dec
add
sub
cwtl
mov
cld
inc
adc
pop
sub
push
and
loope
inc
mov
insl
loope
mov
add
lods
rcll
mov
fs
pop
cmp
cmp
cli
clc
dec
and
scas
inc
or
mov
push
bound
cli
lds
add
jnp
nop
inc
pop
push
cmp
mov
inc
xchg
repnz
loope
sti
xor
and
mov
xchg
jmp
popf
pop
xor
test
push
cmpsb
jmp
loope
mull
test
addb
cmp
dec
sbb
add
dec
ret
sbb
dec
add
add
aam
iret
pop
mov
jne
push
insb
daa
ret
cmp
inc
jmp
push
sub
adc
and
fstp
fldl
xchg
mov
mov
cmp
xor
sub
shrb
aam
iret
testl
cmp
call
cmp
and
rorb
hlt
pop
clc
add
mov
adc
xor
or
pmulhuw
out
adc
sub
jb
sbb
push
dec
inc
fsubp
inc
leave
mov
pushf
mov
lahf
clc
add
push
inc
stos
mov
cmc
movsb
pop
jge
add
sub
mov
mov
inc
xchg
sub
les
inc
andb
lods
pop
inc
xchg
jp
mov
sub
mov
add
xlat
and
mov
mov
outsl
pop
mov
mov
mov
xchg
mov
loop
xchg
imulb
dec
jl
jle
mov
addb
imul
add
or
test
hlt
pop
dec
movsb
pop
sahf
pop
jmp
mov
add
push
test
push
aaa
add
call
add
fs
adc
inc
hlt
sub
ret
sbb
sarb
push
adc
nop
ja
xor
in
rcl
sub
sbb
dec
or
mov
insl
add
inc
fidivs
xor
imul
in
or
or
pop
dec
fmull
rolb
lods
loopne
je
es
and
mov
or
pop
lea
or
ret
push
dec
mov
push
cmpb
push
inc
push
popf
arpl
into
pushf
sub
push
jns
rcrb
xchg
inc
push
cmp
adc
lea
push
add
or
push
pop
je
mov
orb
int
outsl
clc
mov
pop
lea
cli
mov
cmp
mov
cmp
shlb
adc
cmp
aas
ja
inc
push
inc
mov
pop
and
es
cmp
jl
mov
inc
xchg
mov
pop
call
push
or
andl
xor
ret
sbb
or
bound
jmp
loopne
inc
aas
cmp
and
mov
cmp
cmpsl
add
int3
mov
insb
sub
sbb
clc
out
rcrb
cmp
je
jl
cli
aam
sbb
or
and
je
mov
mov
pop
je
mov
push
jb
inc
push
lahf
or
pop
push
add
ljmp
mov
dec
or
mov
and
daa
test
dec
mov
jae
jo
adc
fdivp
lock
adc
outsl
push
dec
testl
adc
push
pop
out
icebp
mov
sub
daa
repz
loop
mov
or
jg
aad
loopne
ret
push
cmc
adc
adc
cwtl
movsl
add
aaa
push
movaps
xor
or
outsl
pop
sub
loope
je
mov
movb
ja
xorb
cmpsb
inc
add
xor
cli
fildl
hlt
cmp
cli
inc
arpl
mov
dec
es
push
cs
push
add
xorl
cli
xor
mov
and
mov
je
mov
or
adc
aas
fwait
cmp
nop
cltd
sbb
mov
mov
dec
and
and
setnp
push
leave
leave
bnd
push
jo
push
jo
or
das
pop
pop
pop
in
dec
cmpsb
or
pusha
jge
dec
cmpsb
cmp
data16
cltd
loopne
js
pmaxsw
pop
adc
push
xorl
fcoms
popa
scas
mov
dec
inc
loope
mov
sbbl
add
mov
out
sub
dec
cmp
adc
mov
std
pop
popf
xor
scas
push
add
xor
popl
adc
mov
sbbl
movsb
pop
xor
stos
notl
or
shll
leave
je
pop
imul
push
or
cwtl
xor
rclb
ret
mull
lds
cs
add
pop
in
jns
pop
orb
jl
and
dec
dec
fcoms
sub
xorl
rclb
pop
lock
mov
clc
jae
dec
dec
jp
xchg
pop
cmpb
shl
or
testb
ja
loope
mov
mov
fmull
sub
sbb
pop
cmpsb
sbbb
xor
push
inc
mov
dec
jmp
insb
mov
imul
push
add
pusha
call
push
adc
orl
and
pop
aas
in
adc
out
jne
inc
mov
add
add
lds
inc
fisttpl
dec
iret
pcmpeqw
mov
outsb
jmp
push
or
mov
adc
test
pusha
adc
ret
mov
cmp
ja
push
rcr
add
inc
rclb
orb
movb
pushf
ss
push
push
or
push
subl
shr
test
sbb
xor
lcall
push
mov
add
dec
mov
mov
add
leave
or
push
or
call
inc
sbb
add
push
popa
mov
sbb
push
xchg
and
xor
pusha
mov
or
dec
fnstcw
jmp
and
push
dec
push
aad
jl
sbb
in
das
add
mov
jnp
pop
adc
flds
pop
inc
add
mov
cmp
data16
mov
mov
ret
push
ja
filds
jne
jecxz
mov
inc
push
jns
call
sub
xchg
add
popf
push
cwtl
lods
les
or
aad
jbe
add
jo
mov
outsl
add
fsts
mov
add
loope
xchg
mov
movb
fwait
repnz
sbb
andl
decl
push
mov
push
push
lret
inc
cmp
hlt
lock
mov
aad
add
pop
bound
push
pop
addr16
push
xor
gs
adc
adc
adc
adc
sbb
add
dec
ds
sbb
sbb
or
pop
les
dec
les
cmp
adc
xchg
xor
fadds
mov
inc
inc
inc
aas
insb
adc
ss
ret
dec
and
inc
or
loope
mov
sub
daa
sub
xor
lea
fst
outsl
jg
data16
fucomp
adc
or
and
mov
lea
jmp
push
sbb
clc
flds
pop
rcll
mov
fucomip
push
push
push
insb
push
mov
andb
push
sub
mov
push
push
sub
test
add
add
adcb
ret
mov
call
and
or
mov
cmp
push
mov
mov
cmp
fwait
fs
jno
mov
call
push
push
pushf
shrb
or
sbb
sub
add
js
cmp
or
fimuls
mov
mov
xchg
mov
xor
jmp
sub
std
sub
addl
shrb
pop
xchg
hlt
add
push
add
dec
mov
or
and
xchg
rorl
fmuls
or
addl
int
inc
inc
mov
sub
ja
dec
push
nop
xchg
xchg
dec
dec
andb
jle
push
loopne
push
push
pop
fwait
or
ret
pop
loope
xchg
mov
mov
add
mov
pop
sub
adc
sbb
repz
add
loop
lcall
test
ret
std
jne
sub
sub
in
insb
lcall
in
pop
xor
aaa
xor
sub
dec
mov
in
or
inc
in
push
push
adc
xorl
push
rcrb
shrb
adc
les
jmp
mov
call
mov
in
outsl
or
sbb
xchg
jo
mov
outsb
das
jo
xchg
push
jns
inc
jne
mov
mov
inc
add
add
add
bound
add
adc
les
sbb
adc
loope
inc
add
or
jp
pusha
inc
adc
fisubs
mov
xor
xor
or
sbb
push
daa
dec
sahf
pusha
xor
push
xchg
cmp
or
xchg
test
jb
pop
add
lea
sbb
lds
add
add
mov
aad
orl
push
fsubr
push
inc
dec
sub
mov
in
fwait
inc
pop
lret
sbb
dec
test
sub
push
push
and
rcl
insl
int3
push
pop
sbb
add
fwait
mov
xchg
imul
mov
rorb
push
test
ds
mov
xor
xor
push
or
lds
mov
add
xchg
repz
outsl
hlt
shll
sub
shrb
or
adc
sub
xor
subl
hlt
mov
test
js
or
push
add
adc
push
adc
jne
adc
push
lea
jne
pop
push
cwtl
insl
and
js
adc
and
call
in
mov
inc
shl
inc
and
add
out
loopne
addl
inc
add
iret
adc
ja
cltd
inc
and
or
lea
mov
dec
xor
stos
shlb
xor
jae
sbb
leave
adc
and
or
pop
int3
and
xchg
cmp
repnz
or
add
jo
out
add
ret
and
dec
push
pop
push
popf
xchg
push
scas
xor
pushf
rorb
or
rcll
adc
adc
into
adc
pusha
push
mov
push
pop
movsl
jmp
or
rcrb
cmc
mov
sub
add
pop
mov
bound
jo
sub
ret
in
lods
jmp
inc
inc
jecxz
ss
push
ret
insb
inc
stos
iret
jbe
add
and
ret
cltd
int3
enter
xor
ss
cli
rorw
inc
loopne
push
faddl
sbb
sbb
orps
add
xor
setl
pop
sahf
add
inc
lods
je
mov
xchg
iret
push
je
in
or
cld
jnp
jbe
insb
daa
rorb
xor
int3
daa
adc
addb
inc
data16
sub
xor
fs
or
xchg
rcrl
fnsave
loop
test
cwtl
mull
hlt
push
jmp
std
sub
jge
rolb
or
or
shrb
adc
push
int3
lock
push
or
add
xorb
cmpsl
adc
or
and
sbb
pusha
lods
fadds
ss
test
push
dec
mov
mov
lods
pushf
rorb
mov
shrl
in
jae
addr16
jmp
add
jbe
sub
or
push
jno
inc
jge
insl
stc
call
in
sub
dec
mov
xchg
popl
adc
push
sbb
stc
adc
add
sbbb
cmpb
mov
aas
add
outsl
das
add
cmp
mov
dec
pop
cmp
je
in
jbe
pusha
arpl
outsb
jle
jb
jno
mov
daa
push
cmp
mov
repnz
or
repnz
sub
dec
je
add
ret
mov
xor
mov
sub
sbb
insb
pop
repz
sub
dec
push
add
jle
push
mull
xchg
mov
adc
pop
clc
sbb
cmp
jne
jmp
enter
je
and
and
hlt
int3
sub
and
mov
cmp
je
and
sub
arpl
loopne
or
roll
js
je
test
xor
addr16
xor
mov
rcl
ljmp
mov
daa
andb
incl
sbb
ss
xorb
xor
or
clc
xchg
ljmp
sub
adc
das
test
mov
not
pop
test
js
adc
ja
dec
add
adc
cmp
loopne
sub
cmp
or
mov
inc
xchg
push
add
add
sub
inc
or
cltd
jp
sub
popl
orb
addb
lcall
sub
pop
add
xchg
or
ss
sub
jmp
popf
push
arpl
fldcw
fisubrs
add
sub
xorb
addr16
rolb
xchg
ret
cmp
sar
fmuls
xor
loopne
imul
push
xor
jg
or
xchg
jmp
das
loope
jno
or
in
cltd
div
cmpsl
lea
add
ret
cmp
aad
and
popf
sub
pop
lods
adc
mov
xor
icebp
ret
clc
roll
and
test
cs
sbb
pop
mov
shlb
adc
aaa
insb
imul
andl
mov
xor
pop
mov
jl
addr16
aaa
xchg
jmp
or
push
add
add
rorl
dec
inc
and
test
cmp
mov
add
jne
rcll
jnp
pop
mov
lcall
je
ret
pop
mov
mov
lods
push
inc
shll
push
dec
pushf
ret
push
nop
add
lahf
add
and
and
outsl
and
fimull
push
movb
inc
fcoms
mov
fs
cmpl
sub
xchg
es
xor
rol
pop
aam
push
hlt
inc
pusha
pop
dec
or
and
sarb
sub
mov
xor
xchg
pop
dec
xor
push
sbb
cwtl
subb
inc
in
dec
adc
xor
mov
sub
cmc
inc
xor
gs
lahf
lret
popf
or
bound
add
and
xor
sarb
push
push
sbb
in
cmp
inc
mov
add
ret
les
and
inc
lea
jg
mov
nop
into
xor
imul
iret
push
jmp
leave
xor
pop
ds
lock
mov
outsl
mov
arpl
das
add
jle
pop
sub
je
push
lock
xor
fsubl
or
adc
adc
aaa
mov
or
adc
or
in
sahf
dec
dec
or
dec
mov
xchg
je
mov
jg
pop
arpl
jne
testb
and
pop
xchg
into
imul
add
pop
push
sarb
jbe
dec
pop
push
fs
adc
out
push
push
inc
loop
xor
fld1
lcall
xlat
cli
pop
push
pop
insl
and
insb
cmp
ja
or
xchg
sbb
mov
popf
andl
pop
adc
aaa
push
jo
cmp
lods
pop
mov
loop
dec
push
mov
add
loop
mov
and
or
js
add
sbbb
push
or
dec
sbb
loopne
imul
sbb
dec
add
orb
xor
mov
out
pop
jb
ss
sbb
pop
outsl
pop
push
in
divl
dec
push
fsubs
pusha
negb
pop
cmovl
mov
add
adc
mov
pop
dec
xchg
cmp
divl
testb
inc
and
cmpsl
movsl
mov
dec
daa
inc
xor
outsl
dec
fildl
paddusb
in
test
and
sbb
pop
aaa
mov
stos
gs
ret
insb
sbb
test
shll
inc
or
cwtl
jb
sub
fcomps
xor
imul
push
jne
dec
icebp
jb
adc
movntps
icebp
sahf
lret
inc
loopne
add
imul
loope
scas
mov
sub
pusha
gs
movb
shrb
sbbb
shll
add
add
inc
sub
pop
mov
adc
push
pop
es
or
add
dec
or
rol
adc
in
imul
out
fcompl
lea
stos
xor
fwait
sbb
cmp
daa
mov
lods
pop
pop
pop
or
enter
repz
push
fs
or
mov
inc
mov
js
dec
add
xchg
imul
subb
repz
popa
or
pop
or
ret
stc
sbb
and
and
out
adc
add
and
cmp
add
adc
sub
psubb
mov
jecxz
mov
pop
push
xor
pop
shrb
insb
in
mov
aas
mov
cmp
dec
xchg
filds
or
inc
cmpsb
sti
push
adc
xchg
inc
and
lea
or
push
ss
xchg
aaa
nop
dec
cltd
push
lds
xor
mov
das
sbb
iret
icebp
out
into
daa
jbe
cli
adc
pushl
xorb
xchg
add
repnz
testl
xchg
xchg
scas
stc
inc
ret
and
or
add
add
sbb
js
fiadds
jp
xchg
ret
jne
cs
jo
xorb
nop
jle
rcrb
dec
jg
mov
add
add
pop
pop
ss
mov
mov
mov
add
insl
cmp
push
add
daa
jmp
lock
mov
xchg
pop
mov
or
sub
imul
xor
and
xor
add
mov
fwait
outsb
stos
iret
or
outsl
or
or
je
mov
mov
push
repz
add
pop
add
pop
add
test
push
sbb
mov
shll
sub
lds
push
dec
push
pop
mov
push
push
mov
aaa
fiaddl
nop
dec
dec
insl
sbb
rorb
ficomps
std
jmp
sbb
aaa
add
cmp
lret
or
push
jo
pop
out
stos
or
push
mov
mov
dec
aaa
push
xor
mov
gs
add
pop
shll
rorb
jno
and
xor
adcl
pop
push
mov
sahf
mov
and
inc
add
inc
jl
add
les
add
test
cmp
lahf
or
sub
or
or
sbb
ret
jl
add
mov
loope
out
or
jg
loop
or
insb
xor
or
popa
lods
insb
mov
aas
or
dec
in
or
pop
fs
sbb
push
xorl
cmc
orl
cmp
movl
pop
xchg
aad
sub
push
mov
rolb
xor
mov
inc
jns
xor
jle
das
or
test
pushl
inc
dec
imul
dec
aas
mov
xchg
mov
std
lea
mov
cmc
sbb
pop
sbb
inc
inc
add
push
jecxz
loop
hlt
loop
adc
sbb
jo
loopne
subl
mov
mov
or
adcb
and
sub
jo
inc
js
test
cmp
loopne
cmp
bound
and
mov
fs
movsb
push
add
xchg
mov
and
push
packuswb
ljmp
inc
or
mov
adc
mov
mov
push
int
js
decl
es
mov
data16
xor
out
mov
dec
sbb
or
dec
outsb
gs
sbb
dec
fwait
mov
shll
fsubl
nop
cmp
mov
or
adc
enter
sbb
idivb
les
and
xchg
and
jecxz
sbb
adc
dec
jge
sbb
ja
pop
jge
enter
xchg
xor
jae
and
add
and
out
movsb
in
add
into
lock
dec
add
add
in
fcmovu
and
das
movsl
les
xchg
pop
hlt
lahf
pop
fdivs
or
cmp
and
xor
les
je
pop
cmp
pop
push
xor
mov
jb
and
jecxz
imul
mov
push
or
arpl
xor
cmp
setg
jmp
sbb
add
add
inc
add
cmp
mulps
xor
inc
inc
es
adc
gs
inc
dec
adc
ret
cltd
sbb
or
mov
shlb
rcl
mov
pushf
pop
ror
in
sti
lods
in
loop
cmp
jmp
push
or
insb
mov
gs
jne
adc
or
dec
ss
add
mov
inc
adc
out
and
enter
inc
addb
pop
xor
or
pushf
lea
popa
add
cs
jno
inc
adc
adcl
jnp
orb
in
cmpsl
pop
push
aaa
hlt
jmp
xorl
push
sbb
je
mov
outsb
out
sub
jb
and
into
xor
call
dec
push
cmp
xchg
in
ds
inc
call
orl
push
and
sbb
push
jne
add
fyl2x
mov
push
and
xor
jo
add
jl
push
popa
add
xchg
sub
lods
sbb
xchg
pop
or
add
lods
jns
and
dec
pop
add
pop
add
loop
sub
bound
xchg
test
pop
push
cltd
in
daa
push
push
add
mov
and
jmp
imul
or
xor
js
jg
add
jmp
sbb
shrl
push
in
xor
push
xchg
push
scas
lods
xchg
loope
push
sub
mov
repnz
inc
pmullw
fsubr
jne
sbb
xchg
push
sbbl
dec
cmp
cmp
add
xchg
fldenv
dec
pop
push
stos
pop
ret
leave
or
sub
inc
inc
loopne
insl
adc
inc
cmp
jbe
add
pop
andl
cmp
push
dec
xor
data16
and
and
cmc
out
sbb
and
pop
loop
fdivr
fistpl
cmp
jne
jge
or
int3
rorb
mov
int
sub
mov
out
cmpb
push
mov
sbb
sub
mov
dec
or
dec
push
cmp
inc
inc
add
cmp
repz
jge
push
sbb
dec
lret
inc
fld
shlb
pop
sarl
iret
mov
add
fbld
fwait
loopne
push
pop
xor
movsl
mov
pop
lock
ljmp
and
push
pop
cmpsl
jne
inc
cmp
es
cmp
xchg
xor
xchg
jge
or
sbb
sbb
fstps
sbb
mov
popa
jne
sbb
push
fldt
sbb
mov
popf
dec
mov
mov
dec
mov
sbb
bound
adc
push
cmp
ljmp
ret
dec
pushl
xchg
mov
dec
ljmp
nop
sbb
jb
cmp
cmp
and
test
adc
divl
inc
dec
pop
ds
xchg
cmpsb
lea
aaa
or
iret
popa
pop
pop
add
adc
jbe
insl
fs
fisttps
sti
pusha
prefetcht0
jae
xchg
addb
jb
xor
jl
inc
or
pop
sahf
pusha
push
out
lods
call
push
incw
std
pop
inc
or
jne
andl
adc
pop
inc
adc
repnz
popf
in
or
add
repnz
aam
imul
inc
mov
lea
lods
jb
notb
sub
mov
dec
sub
and
adc
shll
movsb
adc
xor
ret
add
pop
in
push
xorl
inc
or
sub
adc
sbb
mov
mov
fcomi
ljmp
inc
and
cltd
clc
push
jo
aas
adc
mov
add
mov
inc
xor
loopne
mov
and
inc
pop
cmpsb
pushf
jmp
mov
adc
push
or
insl
pop
sbb
xor
rol
fucomi
ficoms
inc
pop
xor
push
adc
sbb
jl
arpl
push
movsb
sti
or
dec
jne
xsha256
cmpsb
push
push
out
cmpsb
std
or
add
add
adc
mov
xchg
jl
xchg
rclb
sbb
xlat
push
or
pop
in
pusha
test
lcall
inc
inc
jne
mov
mov
jmp
sar
fs
arpl
mov
test
xchg
sbb
pop
cmp
cmp
inc
adc
dec
imul
inc
mov
xor
mov
inc
push
dec
ss
inc
or
mov
aas
call
jmp
lds
cmp
or
xor
ffreep
xchg
cmp
or
mov
test
jmp
bound
jecxz
test
bound
cmp
pop
mov
jle
sbb
jmp
cs
sbb
loop
and
iret
push
xchg
xchg
imul
add
push
or
pushf
or
xor
ret
or
bound
or
push
xor
call
sub
loop
mov
xor
xor
in
xor
dec
fcomip
dec
cmp
mov
test
mov
jbe
inc
pop
jecxz
nopl
xchg
jno
and
add
dec
aaa
movsb
adc
push
mov
mov
pop
push
push
in
or
lds
push
orl
sbb
loopne
and
fwait
sub
xor
inc
adc
mov
sub
cmpl
icebp
cmp
mov
add
inc
into
and
mov
out
ljmp
push
orl
call
adc
ret
add
cmp
stos
push
sub
xchg
je
push
or
inc
adc
adc
or
xor
js
or
sbb
xchg
pusha
adc
and
sub
xor
inc
sbb
daa
inc
pop
pop
mov
inc
xor
xor
and
pop
push
enter
pop
dec
sarl
or
test
inc
mov
daa
ds
call
outsb
mov
xchg
je
adc
js
xchg
cwtl
xchg
nop
aad
testb
add
add
and
push
mov
push
xor
inc
jl
pop
mov
mov
incl
add
test
adc
inc
out
ret
dec
adc
dec
testb
insl
jno
or
push
inc
je
fcoms
push
mov
ds
mov
pop
fs
or
mov
xor
mov
pushf
shlb
add
cwtl
xlat
xchg
ffree
fisubl
and
sub
in
xor
dec
sub
icebp
pushf
test
mov
shll
add
sub
mov
ret
jmp
fdivr
inc
inc
lcall
push
jne
dec
sarl
xchg
mov
xchg
addb
add
adc
mov
sbb
daa
rcrb
mov
xor
cmp
and
fwait
jmp
dec
push
mov
sub
jae
mov
sub
xchg
cli
sbb
push
fistl
mov
or
push
mov
add
adc
ret
pop
call
ret
cmp
xchg
jmp
push
rcr
sub
mov
das
xchg
sbb
adc
adc
lods
sub
cmp
mov
add
mov
popa
jne
inc
jb
adc
xlat
lea
or
jg
mov
addl
cld
and
mov
call
mov
cmp
sbb
dec
ja
ret
les
int3
jmp
adc
mov
mov
fs
add
xor
mov
jnp
push
mov
popa
add
cmp
mov
ret
sub
addr16
mov
cltd
std
adc
pop
push
mov
cmpsb
inc
rcrl
std
int
nop
dec
std
xchg
or
addr16
addb
mov
add
popa
repnz
xchg
sbb
mov
fiadds
shl
fst
adc
pop
idiv
mov
lahf
cmp
add
add
fisubs
arpl
sub
loopne
jnp
push
add
push
jnp
push
in
lods
dec
insl
or
je
test
repnz
test
out
push
or
or
or
cmp
inc
lock
je
jns
push
mov
inc
mov
pop
sbb
push
in
nop
cmpl
adc
jns
inc
inc
bound
lods
inc
cmpsb
sub
popf
adcb
test
pop
popl
test
xor
enter
or
push
or
mov
sbb
cmpsl
scas
adcb
cmc
xchg
daa
pusha
cwtl
cmpsb
sub
and
sbb
adc
and
inc
out
jl
jp
pusha
je
sub
cmp
je
xchg
add
add
xchg
jl
sbb
jmp
xor
inc
adc
jbe
adc
add
mov
sub
push
mov
mov
inc
and
adcl
add
enter
mov
clc
inc
je
aad
arpl
loop
insb
inc
mov
push
ret
adc
or
mov
add
dec
loopne
mov
mov
daa
add
jmp
ljmp
sbb
sub
add
inc
insb
add
and
roll
arpl
out
or
xchg
movsl
pop
ss
inc
jnp
inc
popf
add
ja
scas
dec
mov
mov
sub
add
push
inc
mov
mov
dec
push
mov
jle
lods
sbb
jo
add
test
push
jmp
jne
pop
sarl
test
add
xlat
sbb
adc
add
call
or
sub
or
or
lea
repz
push
inc
inc
adc
jg
push
cmpl
test
jae
sub
stos
out
shll
dec
icebp
mov
or
inc
imul
mov
or
insl
or
mov
or
jne
imul
jle
lret
arpl
mov
pop
adc
adc
rcrl
sub
add
push
outsl
repnz
icebp
test
fidivrs
inc
or
sbb
or
sbbl
push
in
mov
js
mov
daa
push
cmp
js
sbb
call
pop
cmpsb
push
and
movhps
dec
test
hlt
mov
jb
outsb
enter
popl
mov
aam
ja
negb
adc
cs
testb
jmp
outsl
and
test
jno
subl
xor
push
push
in
add
orl
repz
inc
mov
jo
stos
test
push
or
pop
sbb
dec
mov
cmp
leave
and
sbb
or
and
mov
mov
incb
jecxz
cmp
jno
call
push
add
or
in
loope
imul
in
pop
rcll
pop
icebp
movb
add
adc
sbb
cltd
inc
in
mov
xor
imul
ljmp
pop
mov
add
lcall
adc
jl
cmp
xorl
sbb
cmp
pop
popa
outsl
test
mov
clc
or
sbb
xor
lds
dec
repnz
xchg
loop
pop
mov
sbb
lea
js
add
and
push
xor
inc
sbb
add
inc
cmp
dec
inc
cmp
push
test
add
jno
dec
mov
or
les
dec
cld
mov
or
push
inc
xchg
cwtl
or
inc
jb
insb
xor
dec
loop
sub
je
inc
sbb
or
add
out
xlat
inc
xor
push
aam
sti
xchg
pop
or
xor
inc
adc
in
mov
cwtl
daa
xor
inc
cli
add
inc
rcll
pop
movsb
jmp
shlb
cmpsb
sub
adc
sub
loopne
lcall
pop
into
shll
adc
push
push
jl
cmp
jbe
add
xor
pop
loopne
shlb
push
fmull
fistps
cmp
mov
aam
inc
lea
sub
sub
addl
add
test
adc
inc
dec
rclb
adc
sarb
imul
add
pop
sub
push
jo
jo
andb
pusha
ss
hlt
loope
dec
aas
cmc
add
lcall
push
mov
push
push
data16
jo
scas
inc
push
mov
clc
pop
sub
out
mov
add
or
fiaddl
out
and
jge
push
dec
jb
cwtl
mov
movsb
lcall
movsl
or
mov
or
xor
jb
dec
or
punpckhbw
fcompl
int3
mov
pop
fwait
inc
fwait
inc
test
pop
inc
les
mov
sbb
les
pop
mov
sti
in
push
lods
mov
hlt
loopne
sub
push
mov
pop
data16
je
rclb
dec
or
pop
dec
cmpsl
lock
test
sbb
ret
pop
mov
loopne
ja
lea
sbb
pop
push
pop
imul
nop
dec
incb
push
sub
sub
pop
getsec
or
push
cmp
xchg
sub
aas
xor
repz
sti
stc
nop
loopne
push
add
or
arpl
lds
call
xchg
sub
or
push
pop
add
xor
in
and
ret
inc
testb
cld
cmp
je
test
fldl
test
push
sbb
push
push
fwait
clc
push
sub
movsl
pop
jae
push
cld
lahf
pushf
cld
add
or
mov
mov
sbb
jmp
rclb
and
inc
rolb
adc
pop
aaa
inc
aas
add
or
fld
adc
push
push
adc
sub
mov
ss
sarl
adc
es
pusha
mov
inc
dec
insl
jp
ss
add
test
repnz
and
push
hlt
adc
imul
dec
mov
daa
pop
sbb
mov
rorl
inc
cmp
sahf
std
clc
mov
daa
imul
push
gs
mov
mov
jmp
sbb
imul
add
sbb
mov
pop
mov
xchg
dec
fstl
pusha
adc
xchg
mov
inc
push
loop
je
ror
inc
mov
mov
jne
push
pop
mov
inc
ret
test
loopne
and
mov
sbb
adc
loope
fnstsw
sbb
xor
adc
push
push
sbb
mov
gs
pop
roll
aas
xchg
cmove
and
daa
inc
cmove
sbb
adc
push
adc
cmp
orl
inc
outsl
fdivrl
xchg
or
fiaddl
ret
adc
push
pop
xor
fcomip
xchg
push
and
mov
jb
xor
mov
xchg
addr16
xor
or
pop
adc
das
mov
jle
js
popw
dec
and
mov
xchg
stos
test
sahf
jns
shrl
cmp
je
movswl
loope
adc
xchg
cs
jmp
cmpw
cmpsl
leave
push
mov
pop
sub
push
sbb
cmpsb
pop
inc
inc
sub
movsb
popa
sub
push
scas
cmp
fcomps
add
push
data16
movb
sbb
add
xor
mov
pop
fnstcw
sub
cmpl
xchg
mov
cmp
inc
aas
je
bound
dec
xchg
xor
and
sub
jbe
adc
dec
xlat
outsl
push
jbe
ljmp
xchg
adc
jl
cmp
adc
mov
xlat
rcll
test
imul
shl
setge
push
and
pushf
adc
push
jb
addl
sbb
adc
sub
and
or
sahf
add
ret
iret
xorb
lret
mov
adc
addr16
adc
cmp
ljmp
adcb
mov
repnz
rcrl
stos
xchg
xlat
in
das
jno
cmp
ss
push
and
sub
test
ljmp
ds
ret
cmp
push
or
dec
sub
adcl
repnz
repz
push
hlt
jmp
xor
fcompl
dec
cmp
dec
cltd
and
mov
adcl
aam
add
adc
rorb
mov
mov
orb
lds
jecxz
xchg
push
test
nop
clc
clc
mov
push
adc
pushf
xchg
cmp
or
test
adc
push
test
sbb
add
aam
add
jno
aad
lds
lock
insl
loopne
lahf
sbb
sub
dec
fsubp
pop
test
out
and
inc
sbb
lret
daa
cmpb
imul
and
xor
mov
lods
test
adc
orb
dec
dec
adc
add
lods
addb
adc
fcoml
jo
push
stc
xchg
lret
mov
les
mov
and
pusha
adc
pop
nop
dec
scas
and
js
mov
dec
push
push
sub
loopne
adc
adc
sub
in
add
rclb
jne
or
mov
call
jmp
pop
scas
push
inc
les
cmp
push
inc
sbb
in
xchg
test
push
pop
push
push
adc
lea
sub
mov
push
arpl
js
mov
adc
and
inc
sub
mov
addl
jo
call
sub
stos
mov
out
lea
cmp
jne
mov
in
or
push
pop
or
inc
adc
test
mov
test
inc
sbb
out
iret
loopne
adc
xchg
adc
and
mov
jg
or
cltd
push
fcomps
and
mov
xchg
jg
sbb
shl
sbb
cmc
imul
into
add
test
xchg
xchg
mov
cmp
jo
cmp
sbb
mov
dec
mov
xor
adc
xchg
push
loope
sub
sub
fadds
aas
push
iret
and
push
xor
in
call
or
xchg
nop
es
inc
mov
xchg
addr16
imul
or
jns
adc
mov
mov
xor
xor
lea
pop
sub
and
cwtl
push
fiadds
mov
add
std
push
pop
fistps
roll
and
shlb
roll
pop
lock
dec
adc
mov
sub
adc
icebp
push
cld
loopne
or
dec
faddl
push
roll
jae
adcb
jmp
and
push
pushf
icebp
sub
xor
mov
and
xchg
jecxz
subl
add
mov
adcb
fnstcw
pop
inc
pusha
adc
jbe
xchg
add
sub
dec
push
sub
or
dec
nop
xchg
stos
push
mov
lahf
push
pop
cmp
jae
adc
cmp
fisttps
in
add
out
imul
sbb
xchg
es
add
xchg
dec
pop
fbstp
mov
data16
mov
or
fcomps
scas
or
and
push
jge
sbb
movsb
subl
test
jne
popf
jnp
add
js
std
or
inc
inc
add
je
jne
negl
dec
jae
and
push
or
push
sarl
aad
or
cmp
inc
data16
out
in
dec
int
cmpsb
xchg
pop
xchg
iret
ficomps
imul
jmp
sarl
rcrb
outsl
jnp
lds
pop
in
jmp
dec
add
and
cmp
cmp
push
dec
push
xchg
ret
ror
mov
adc
mov
into
enter
lock
and
and
daa
pushf
sub
mov
dec
mov
mov
or
adc
add
cld
icebp
dec
mov
push
loopne
push
cmpsl
push
dec
adc
xchg
pop
pop
inc
push
mov
scas
inc
mov
outsl
or
push
push
cmc
add
xchg
jns
orb
pushf
pop
int
bound
jbe
pop
xor
push
or
xor
mov
xchg
jae
leave
cmp
ret
jns
jmp
dec
sub
xchg
inc
inc
pop
xor
fdivs
jp
pop
or
mov
pop
pop
xor
mulb
push
xor
push
mov
or
adc
sub
adcl
pop
cld
imul
jg
jp
sbb
sub
cli
jnp
pusha
xchg
sti
pusha
sbb
jmp
adc
aam
pop
xor
les
aaa
pop
add
sarb
subb
jnp
add
add
push
adc
cli
inc
adc
cmpl
mov
adc
pop
mov
xchg
out
cmp
or
or
stos
jne
lods
inc
xchg
and
jg
and
into
insb
adc
fcomps
rclb
lcall
je
xor
aad
push
xlat
dec
loopne
mov
xchg
push
or
sbb
mov
out
or
pusha
jl
lcall
stos
sbb
rcr
mov
sbb
push
xorb
add
xchg
add
add
adc
cli
jae
adc
jae,pn
mov
pushl
inc
add
clc
sbb
daa
add
cs
mov
push
adc
pop
jmp
add
push
hlt
mov
mov
int3
inc
loopne
and
xchg
xor
mov
xlat
add
add
clc
mov
fadd
xor
and
add
xorl
pop
mov
pop
dec
push
sbb
or
repz
jmp
add
and
push
iret
adc
popa
cwtl
cmp
inc
movsb
in
push
out
push
ret
ss
mov
stos
loopne
ret
xor
jne
sti
repnz
lahf
cmc
and
popa
sub
lock
adcl
dec
xor
je
mov
push
or
pop
sbb
adc
adc
leave
add
sub
or
jo
xchg
cmp
inc
aam
pop
mov
xor
ja
push
pop
mov
bound
xchg
inc
pop
push
dec
test
dec
pusha
xchg
insb
test
int
inc
cmp
pop
repz
dec
stos
jo
icebp
and
pop
arpl
jbe
xchg
out
xor
popa
ja
push
int
icebp
xor
xchg
and
dec
arpl
je
jne
lcall
jbe
repnz
sbbb
jbe
sbb
sbb
add
xchg
mov
push
out
sbb
pop
jge
sub
push
nop
xor
ss
sub
inc
fmull
shr
or
push
add
sbb
or
push
pop
loopne
loope
daa
in
inc
jmp
movsl
mov
cmp
out
insb
dec
and
add
cmovo
adc
in
mov
xchg
int
adc
dec
inc
sub
loop
sbb
sarl
add
les
test
jb
mov
pusha
pop
sarl
push
inc
push
dec
add
jg
js
or
les
dec
ret
enter
pushf
sbb
jns
pop
cmp
cmp
test
xchg
xchg
ret
xchg
divl
or
sti
test
jmp
sub
and
daa
mov
aad
sbb
scas
sub
pushf
fwait
les
subb
or
mov
nop
js
gs
xorb
add
mov
mov
mov
popf
add
push
ret
loopne
movsb
inc
aaa
jb
push
and
mov
push
pusha
dec
lahf
sbb
loop
mov
pop
xchg
loopne
push
pop
insb
push
ret
jge
rcll
aaa
loopne
mov
nop
cmpl
xlat
add
jle
jp
in
push
mov
ss
push
pop
mov
adc
insl
es
xor
xor
adcb
mov
or
pop
xor
repz
sbb
movsl
or
popw
gs
add
or
aam
pop
pusha
pusha
stos
popa
mov
rorl
in
dec
sbb
mov
call
enter
push
xadd
add
movsb
sbb
dec
jb
push
loopne
add
sub
jne
das
add
push
ja
jno
rolb
test
insb
or
sti
btc
and
push
sub
lds
stos
insl
inc
push
mov
push
rcrl
add
push
sbb
cmpsl
add
icebp
clc
jmp
push
fdivrs
sub
fs
jnp
jle
lret
add
mov
dec
testl
mov
scas
push
or
adc
shll
or
mov
lahf
mov
or
push
in
pop
sbb
inc
push
cmp
mov
lret
xor
mov
xchg
xor
ret
xor
push
mov
sbb
repnz
push
cmp
sbb
push
movb
dec
adc
shrb
push
test
push
adc
sbb
xor
imul
inc
push
pusha
imul
xor
mov
stos
lock
add
mov
roll
ja
mov
add
dec
cmp
cmp
xchg
jo
ret
mov
pop
or
mov
xchg
cmp
dec
mov
cmp
es
arpl
cmp
es
cs
cmp
out
add
sub
filds
add
scas
xor
mov
fmull
test
je
push
ret
addl
dec
pusha
or
ja
daa
cmc
push
xchg
nop
shlb
inc
sub
ret
arpl
dec
or
push
xchg
arpl
dec
andl
clc
popa
popa
scas
shrl
adc
pop
movsb
fstl
and
sub
or
rorb
add
je
or
cmp
mov
dec
outsl
test
push
fistpll
inc
movsb
mov
mov
cs
loope
aaa
mov
andl
je
mov
mov
dec
jne
xchg
and
sti
rolb
push
test
scas
cs
rcr
rolb
mov
loop
xchg
push
xlat
mov
and
mov
loopne
jne
jl
sub
cmp
adc
xor
test
into
psrlw
pusha
dec
fadds
add
fwait
adcb
sti
and
cmc
es
lds
movsb
adc
enter
xor
add
ja
jl
push
add
inc
dec
xor
mov
dec
sbb
js
aas
fimull
xchg
push
insb
sbb
movsb
xchg
les
inc
mov
dec
arpl
dec
enter
push
xchg
or
push
dec
sbb
xchg
mov
pop
dec
dec
adc
mov
ret
push
fmul
mov
push
shl
xchg
add
pop
je
jo
insb
cmp
addr16
fisubs
pop
mov
gs
adc
cmpsl
or
or
adc
jge
xor
xchg
es
sub
xor
or
xlat
or
add
addb
jp
addl
frstor
in
sbb
lcall
mov
stos
xchg
and
sub
adc
jmp
cmpsl
or
scas
sub
sub
rolb
lret
popf
sub
stos
gs
negl
sub
pop
clc
clc
jns
inc
sahf
lock
in
or
pop
push
or
xor
repz
cmp
or
fsubrl
fmul
aam
pop
and
orl
pop
ret
inc
inc
rcrb
jno
add
bound
mov
ret
push
loope
jl
add
inc
ret
outsl
mov
jmp
movb
or
loopne
add
add
or
cmp
ffree
cltd
xadd
popf
or
mov
pop
pop
shrb
sbb
shrl
das
push
testb
jmp
pop
pop
mov
test
mov
rcll
pushf
mov
iret
dec
mov
inc
fadd
rcrl
mov
mov
or
pop
sbb
addr16
add
sub
cmp
mov
pop
jmp
shll
adc
lds
sbb
dec
dec
or
loopne
iret
fwait
mov
das
das
or
addr16
sbb
push
mov
push
sub
push
dec
add
and
std
add
mov
les
mov
and
into
adc
mull
or
aam
jno
iret
into
adc
repz
mov
mov
shlb
sbb
sarb
jle
sbb
fsubrl
in
dec
fmull
data16
in
sub
sbb
xchg
repnz
repnz
clc
sbb
xor
aam
les
pop
xor
sbb
xchg
bound
sgdtl
rolb
or
outsb
das
mov
sbb
add
adcl
cli
add
mov
sub
cmp
idivb
mov
mov
push
sub
xchg
jl
dec
incl
sbb
imul
gs
dec
jmp
adc
mov
fadds
arpl
enter
add
jns
xor
xlat
mov
orb
push
push
mov
mov
mov
test
sub
jns
push
pusha
mov
or
fdivrl
or
pusha
int3
sub
cltd
sub
inc
sub
popf
sbbl
inc
inc
enter
lret
or
out
pop
icebp
push
ret
adcb
loop
das
es
inc
dec
int
hlt
jnp
sarb
add
ret
jae
adc
cmp
push
clc
xchg
sub
xchg
gs
in
in
dec
aam
js
in
hlt
add
mov
push
xor
pop
les
inc
xchg
xchg
adc
mov
mov
adc
push
mov
mov
pop
ss
sub
add
imul
jmp
div
lock
loope
jnp
add
pop
add
leave
lret
add
inc
or
sub
xchg
pop
les
jne
insb
dec
push
cmp
xchg
in
ljmp
insl
jo
mov
mov
pop
dec
mov
or
pop
in
shrb
ss
mov
adc
mov
jge
mov
insb
insl
pusha
cmp
sbbl
aam
mov
mov
insl
xor
and
push
sub
or
dec
fstpt
add
sbb
outsl
dec
into
add
test
inc
xchg
stos
addr16
sub
imul
add
loopne
adc
xchg
bound
popa
jmp
aam
orb
xchg
or
dec
and
sbb
jb
xchg
add
fisttpl
or
adc
and
xor
xcrypt-cfb
cmpsl
movsl
lret
pop
xchg
jne
inc
push
mov
aam
imul
fidivrl
cmpsl
jmp
push
pop
cmp
inc
or
rol
shr
sbb
push
es
push
xchg
cvtps2pi
popa
jnp
adc
push
testl
scas
subb
push
inc
inc
adc
shl
sub
in
adc
lods
add
push
mov
aam
lahf
scas
imul
shr
mov
out
or
or
add
adc
cmp
fldcw
hlt
dec
bound
pusha
hlt
or
add
inc
cmp
jecxz
or
scas
sub
ret
jecxz
add
add
add
xchg
stc
cmp
add
mov
push
add
adc
add
repz
pop
mov
inc
pop
aam
dec
adc
movsb
inc
adc
mov
xor
dec
adc
lods
inc
or
and
or
mov
mov
mov
ret
jns
xor
cmp
addr16
xchg
iret
cmpl
ss
or
aas
sti
cmp
jmp
bound
push
ret
push
push
gs
int3
movsl
sbb
pop
add
lea
addb
pop
push
sub
testb
or
mov
push
and
je
dec
out
adc
jmp
dec
and
adc
call
sub
dec
aam
xchg
add
mov
push
sub
push
fnstenv
je
jp
adc
xchg
dec
imul
or
in
cmp
clc
cmpsl
mov
orb
or
mov
or
xchg
and
roll
hlt
add
push
imul
daa
ret
pop
adc
inc
mov
lock
in
inc
push
xor
sbbb
pop
and
inc
add
dec
inc
jecxz
pop
jbe
jecxz
es
sub
xor
lahf
add
cmpl
sub
adc
adc
xor
or
aaa
addl
jo
ja
xchg
in
sub
add
add
mov
dec
or
sbb
dec
pusha
mov
data16
test
jno
inc
push
add
mov
es
inc
pop
pop
inc
dec
jmp
outsl
repnz
fld
mov
pop
cmp
add
jmp
mov
mov
addb
sbb
add
fmul
sti
pop
xchg
xorb
lret
enter
inc
inc
dec
call
inc
dec
call
mov
pop
sub
hlt
addb
and
adc
in
add
std
or
pusha
pop
test
add
loopne
fdivrs
out
sbb
andl
xchg
push
push
jns
mov
jle
and
sarl
xor
and
loope
std
popa
movsb
cmpsl
movsl
popf
mov
jle
or
and
pop
cmp
out
or
popa
jnp
xor
mov
mov
cwtl
or
xchg
push
mov
inc
stos
mov
aad
daa
loopne
or
roll
iret
lock
adc
rolb
add
test
lret
mov
or
lds
rclb
push
pop
push
jmp
pop
addr16
call
add
rolb
adc
cmp
mov
add
jmp
cmp
mov
fidivrl
sub
push
aas
inc
add
loope
sub
sbb
mov
sbb
xor
add
or
xor
or
ds
mov
sub
clc
sub
mov
paddb
or
xchg
test
jg
inc
adc
je
popa
pop
mov
aas
stos
push
mov
pop
add
pop
add
pop
outsb
xchg
jmp
insb
jl
inc
movswl
sbb
push
cld
xor
movb
sub
adc
insb
into
cmpsb
and
sbb
cmp
mov
loope
jno
pusha
xor
lahf
fld1
pop
or
js
jnp
xor
push
orb
cmp
or
sub
xchg
mov
xchg
xchg
scas
adc
mov
or
daa
pusha
lods
adc
pusha
lahf
sub
xchg
jnp
or
sbb
sbb
cmp
push
imul
push
sub
sub
into
ds
xor
mov
subb
xchg
cmp
clc
cld
in
pop
rol
cmp
ja
je
pop
xor
mov
mov
xchg
cmp
ret
lret
sbb
or
pop
mov
cmp
mov
dec
test
xor
popa
inc
popa
gs
adc
pop
and
cltd
sbb
jge
jb
push
mov
and
decl
mov
xor
xchg
xor
pop
jl
inc
mul
cwtl
xor
inc
das
fadd
adc
adcb
rorl
scas
add
or
fdivl
xchg
add
movsb
lea
jp
popf
add
jns
or
or
pop
pop
nop
pop
arpl
inc
cmp
pop
aaa
rorl
xchg
xor
enter
enter
add
dec
and
scas
lahf
adc
add
pop
or
mov
add
dec
jle
hlt
dec
cmpsb
push
cmpb
xchg
test
jne
shll
adc
and
push
enter
push
test
dec
jmp
scas
jge
pop
mov
or
sbb
xor
in
fs
lods
jle
add
mov
jmp
mov
push
sbb
enter
inc
cmp
test
add
dec
rcll
cmp
cli
add
dec
adc
out
ss
cmp
ret
pop
add
mov
add
xchg
mov
xchg
je
jb
push
out
jl
test
and
pop
sahf
jmp
enter
adc
shlb
add
fldenv
sub
fmull
sbb
mov
lods
sbb
dec
mov
call
xchg
mov
lahf
or
cltd
pop
fs
push
mov
mov
adc
cmp
dec
jne
into
inc
inc
add
add
sub
aad
pop
les
jmp
add
fimull
push
adc
sbbb
ret
cmp
jmp
iret
adc
add
fs
sbb
ret
push
addr16
or
pusha
or
push
and
pop
bound
inc
add
or
jo
add
jae
insl
jno
adc
pop
sub
popa
pop
inc
or
pop
xchg
push
add
push
aaa
pop
lods
adcl
sub
mov
cmp
or
lods
rclb
and
add
loop
sub
jne
rcr
and
pop
xchg
stc
inc
jbe
xchg
hlt
push
dec
sbb
xor
ss
out
mov
adc
add
lahf
cs
inc
cmp
dec
pop
pop
and
fwait
stos
push
lea
lods
mov
into
imul
add
inc
and
andb
inc
aam
add
inc
jbe
minps
adc
sarb
jg
jns
dec
aam
cmpl
test
test
lahf
xchg
adc
enter
fcomps
sbb
int3
in
cmp
enter
xor
sbb
pop
enter
in
add
outsb
push
repz
pop
cwtl
popw
and
mov
sub
data16
in
repnz
clc
loope
and
outsl
add
xchg
add
orl
dec
loopne
jns
add
mov
fwait
dec
in
add
and
inc
leave
into
sarb
aam
pop
xor
call
sub
cmpsb
int
ret
sbb
loop
movsl
or
stos
push
push
or
jno
jle
xor
or
loop
loopne
fmuls
fstpt
dec
and
jbe
scas
jge
jl
daa
enter
lea
push
dec
fidivrl
mov
in
pop
out
xchg
mov
fistps
loopne
dec
xor
inc
xchg
or
xchg
or
mov
mov
add
addr16
and
sbb
adc
lods
cmp
clc
mov
sbb
out
xchg
xchg
mov
clc
cwtl
or
les
jl
xor
pop
adc
mov
aas
and
popa
xchg
push
andb
and
fists
ret
mov
pop
or
imul
in
out
pushf
or
insb
stos
movsl
addr16
mov
jmp
jb
pusha
imul
cmp
xor
and
pop
lsl
cmp
insb
adcb
add
inc
adcb
xlat
leave
aam
scas
xchg
or
stc
aam
xchg
stos
sbb
mov
mov
inc
cmp
add
ret
or
addl
incl
pop
dec
insb
mov
call
in
movsb
xchg
sbb
add
mov
xchg
pop
sub
xchg
and
adc
pop
testb
les
aaa
or
or
daa
add
popf
mov
cmp
xchg
or
fs
clc
pop
pusha
fmuls
scas
fnsave
mov
push
aam
xor
inc
xor
pop
mov
mov
and
idivb
adc
xor
and
out
mulb
adc
rolb
inc
jo
adc
ret
pop
and
push
imul
mov
add
and
xor
ret
xor
adcl
adcl
cltd
cmp
out
call
xchg
daa
fs
dec
pusha
inc
mov
nop
xchg
or
inc
add
mov
jge
sub
inc
add
sbb
ret
test
xor
adc
imul
or
rclb
je
or
sub
push
dec
sarb
xchg
je
imul
lret
xor
adc
push
das
inc
adc
or
add
pop
ret
sub
add
mov
xchg
fsub
mov
push
ds
xchg
insb
add
aam
fwait
popa
out
aas
inc
xor
fidivrs
dec
jne
mov
xor
pop
insb
and
xlat
or
push
loop
jge
jmp
and
or
mov
mov
dec
test
push
mov
add
cmpsl
or
dec
xchg
rorb
out
movsb
dec
lock
push
into
push
push
add
testl
jne
mov
jno
xor
icebp
adc
notl
sub
push
add
xor
push
iret
mov
popa
inc
into
mov
fcomp
sub
pop
das
test
adc
rclb
out
or
inc
dec
and
mov
add
push
cld
xor
or
cmp
add
or
add
mov
pop
fs
sbb
mov
push
cmp
dec
jmp
xor
adc
stc
push
cmpsl
lods
scas
inc
dec
inc
pushf
data16
rolb
cmp
inc
dec
stc
mov
push
sbb
aas
push
lds
pop
fsubp
jecxz
or
sbb
leave
repnz
pop
or
or
sbb
cmp
aas
or
adc
adc
push
mov
sbb
loopne
out
jno
arpl
js
jmp
mov
sbb
out
push
sub
test
js
add
cmpsl
daa
mov
mov
adc
and
mov
mov
sbb
sub
push
xchg
add
pop
cmp
mov
jmp
sub
sbb
bound
or
pop
adc
add
or
adc
pop
add
enter
dec
in
inc
icebp
movzbl
nop
fidivrl
clc
sub
or
pop
mov
add
mov
sti
inc
mov
cltd
add
add
or
jo
dec
ret
loop
adc
cmp
add
in
stc
jns
out
sbb
aad
clc
sbb
inc
out
add
cmp
xor
push
cmp
inc
add
sbb
pop
add
aaa
es
sub
mov
scas
out
ljmp
adc
test
add
or
cmp
hlt
jns
jg
and
or
jg
pop
dec
cmp
jg
cmp
ss
loop
add
pusha
pcmpeqd
push
sti
jmp
cmc
xchg
mov
sbb
jle
sbb
sbb
pop
enter
inc
mov
adc
inc
pusha
test
loope
in
fiaddl
push
dec
adcl
arpl
movsl
adc
pop
pop
add
sub
dec
mov
add
and
gs
sbb
xor
sub
jno
mov
push
sbb
pop
sbb
cmpsl
pop
push
popf
pop
sbbb
push
inc
dec
dec
in
dec
je
arpl
and
adc
stos
push
sub
push
daa
jne
mov
and
and
je
outsb
sbb
in
jbe
std
adc
adc
aam
shll
cmpsl
fmuls
xchg
cld
mov
clc
repz
bound
xor
push
pop
inc
in
inc
mov
sahf
fmuls
rcrl
jge
jo
xchg
ret
lea
mov
add
or
cmp
test
lock
sbb
xor
or
or
push
sbb
clc
lock
jne
inc
bound
push
jae
testb
adc
jecxz
or
adc
sbb
jae
push
and
shll
cmp
xchg
mov
pop
jo
jo
and
andb
call
rcrb
inc
out
mov
jmp
sub
or
xor
movb
add
in
mov
pop
sbb
mov
negl
cmp
cmp
repz
dec
xor
cmp
or
int3
mov
push
movsb
inc
inc
mov
outsl
cwtl
into
add
js
movl
sbb
mov
lds
or
xor
in
popf
or
divl
mov
sub
add
xor
sbb
xlat
pop
rolb
adcb
push
mulb
pop
pop
add
add
push
cmp
leave
outsb
js
mov
inc
jo
pop
pop
sbb
add
shlb
push
inc
add
xor
mov
sbb
les
lret
adc
push
jmp
push
mov
jmp
cmp
push
sbb
mov
dec
sbb
add
inc
dec
or
push
mov
sbb
stos
inc
push
xchg
cld
jb
and
mov
or
in
push
inc
repnz
dec
or
das
cmp
or
add
nop
inc
inc
adc
or
filds
add
loope
nop
xor
lock
vpmulhuw
add
imul
call
popa
loopne
clc
pop
xchg
in
push
in
dec
lock
lock
lret
adc
jmp
add
repnz
and
jne
out
cmp
pop
arpl
or
push
cmp
xlat
nop
mov
fldcw
jecxz
pop
rcrb
mov
ljmp
mov
ret
and
dec
or
outsb
bound
sub
and
jg
and
shll
push
push
or
mov
push
test
sub
or
push
in
add
xchg
add
les
add
mov
push
add
sub
sub
or
mov
pop
mov
sbb
js
inc
pop
or
fs
xchg
or
pop
jne
add
hlt
add
or
iret
and
lock
out
pop
push
mov
pop
das
push
sub
shrb
xchg
dec
dec
lock
xchg
add
push
fimuls
pop
push
outsl
sbb
sbb
xor
or
lcall
ret
ds
fs
push
inc
mov
pusha
cld
or
inc
insb
imul
rclb
inc
inc
leave
enter
dec
dec
mov
pop
popa
fnstsw
fidivrs
inc
sub
and
inc
and
sub
adc
and
lock
mov
xchg
adc
push
in
hlt
lock
imul
push
dec
sbb
adc
mov
and
push
pop
sub
je
add
dec
popf
push
push
aam
push
pop
push
imul
imul
adc
adc
push
mov
mov
shrl
lret
pop
or
xor
sbb
mov
mov
adc
xchg
adc
pop
or
dec
lret
jecxz
test
sbb
jl
xor
xchg
enter
pop
cs
imul
sbb
pop
cmp
out
sbb
sbb
adc
or
pop
movsb
ret
mov
mov
aaa
sbb
sbb
sub
or
add
shrb
xchg
add
inc
push
das
mov
lea
nop
in
bound
cmp
ret
adc
sub
dec
add
cmpl
mov
jo
movb
sbb
arpl
jne
das
adc
clc
sub
adc
ds
xor
ja
add
jbe
das
add
adc
lret
dec
sub
or
inc
push
jge
xor
fldl
push
xor
pop
cmpsl
cmp
push
push
push
insb
sbb
cmp
movl
fldt
push
test
dec
test
mov
sbb
inc
jo
pusha
popf
adc
iret
rclb
sbb
aad
dec
pushf
and
and
pop
data16
mov
cli
stos
jle
sub
sub
inc
jmp
pop
arpl
test
aad
repnz
cltd
xchg
popa
arpl
and
in
and
push
loopne
cwtl
pop
aam
push
push
popa
push
xor
sub
pop
inc
sub
or
or
mov
fs
pop
in
and
dec
dec
in
shll
sbbb
xor
pop
jo
loopne
bound
mov
add
adc
ljmp
sub
popa
fstl
jo
mov
mov
push
scas
sub
insl
mov
movsb
in
inc
sahf
sbb
lcall
leave
ret
mov
in
and
aaa
push
sarb
gs
mov
push
adc
mov
mov
enter
gs
dec
jbe
ret
pop
jne
mov
adc
outsl
xor
push
push
popa
mov
jne
pop
das
jno
add
loope
adc
scas
jge
imul
dec
cmpsl
int3
add
mov
pop
sub
pop
push
pusha
adcb
inc
sbb
incl
cmc
or
loope
jae
push
pop
adc
andb
xor
mov
test
jge
push
pusha
fs
dec
movsb
sbb
shlb
mov
es
enter
insb
icebp
pop
rclb
add
push
fcompl
mov
cmpsb
adc
xchg
cmp
sbbb
repz
adc
cltd
add
cmpl
arpl
and
and
pop
adc
arpl
xchg
or
push
pusha
and
cmpsl
out
dec
xchg
outsb
or
dec
pushf
sub
rorl
inc
inc
or
faddl
pop
mov
mov
std
iret
adc
pop
add
inc
mov
out
addr16
adc
repnz
push
mov
fcmove
cltd
xor
pop
adc
cmp
adc
jbe
jnp
enter
inc
enter
cwtl
inc
movsb
popf
mov
adc
ljmp
mov
mov
add
push
dec
js
mov
arpl
mov
fs
or
cmp
loop
xor
dec
test
mov
push
jb
enter
popa
inc
clc
fwait
add
sahf
lods
or
rorb
add
leave
add
les
std
xchg
bound
xor
jg
mov
roll
push
pusha
adc
xor
sub
or
in
and
xchg
jge
jecxz
or
add
dec
push
xor
lock
sub
out
ss
ss
es
pop
lahf
lahf
inc
test
movsl
inc
dec
scas
rcrl
mov
icebp
and
push
movsb
add
push
and
lds
arpl
sbb
mov
xlat
lret
adc
and
push
sub
adc
out
adc
popa
and
test
and
xor
adc
shlb
mov
or
jo
aas
aad
insl
ret
movsb
pop
adc
dec
mov
sub
lock
mov
or
sub
sbbb
cmp
sub
movhps
pop
xlat
sub
cmp
jbe
popa
cmp
add
add
movsb
cltd
pop
jmp
ja
fmul
sbb
adc
jb
mov
fadds
cmp
scas
xchg
adc
push
rcr
lods
scas
sti
in
outsb
or
mov
mov
pop
movsb
push
push
pusha
inc
aaa
mov
pop
int
push
lahf
inc
insl
ret
or
mov
push
jg
push
adc
fimuls
test
push
mov
jb
pop
test
adc
mov
out
or
pusha
pop
ss
dec
sub
fldt
pop
cmp
jl
or
dec
cmp
divb
cmp
xor
add
xor
cs
cwtl
outsl
add
test
adc
jo
add
fldt
lods
popa
fnstenv
call
mov
add
sub
inc
xchg
cmc
out
adc
push
jns
sub
std
stc
pop
test
adc
test
sahf
out
icebp
xor
dec
enter
in
pop
fdivrl
scas
pop
dec
lret
pop
ds
xor
jp
add
or
dec
push
ss
or
push
dec
pop
fs
push
test
pop
push
pop
pop
adc
lock
mov
inc
mov
or
adc
aam
and
call
dec
xchg
hlt
icebp
insl
bound
sbb
adc
je
js
out
jne
dec
and
inc
jbe
or
add
pop
cmp
dec
rorb
mov
shlb
popa
adc
xchg
loope
mov
push
repnz
leave
lcall
adc
mov
or
sbb
jp
adc
lods
out
adcb
dec
scas
rcrb
ds
ja
xchg
and
sbb
sub
pop
xchg
dec
push
outsb
lret
mov
mov
add
xchg
adc
ja
pop
xlat
inc
add
xor
notl
dec
daa
sub
and
imul
pushf
divl
mov
add
adc
mov
sbb
push
and
test
and
inc
xor
push
xor
mov
inc
or
dec
xchg
xchg
cld
negl
imul
imul
cmp
or
mulb
cmp
repz
and
mov
loopne
inc
das
jmp
inc
inc
add
pop
addr16
sub
adc
sbb
icebp
push
xchg
mov
rcll
lea
or
ret
outsb
pop
pop
lock
cmpsb
pop
cld
fbld
jo
push
or
or
push
js
js
add
mov
xorb
pop
lea
push
cmpsb
ds
jg
adc
out
or
inc
fsub
sbb
mov
insb
add
fnsave
jo
xchg
jno
mov
outsb
arpl
push
pusha
mov
clc
push
push
popa
adc
pop
dec
fisttpll
dec
in
push
cmp
inc
push
das
rol
pop
inc
adc
push
lods
cmpsl
ds
dec
adc
push
and
jp
fists
enter
dec
dec
xor
and
imul
adc
mov
mov
inc
pop
or
and
push
popa
mov
jnp
lock
clc
sub
jo
or
popa
das
jne
cmp
cmp
push
push
inc
dec
popa
and
scas
mov
pop
in
push
adc
mov
dec
cld
push
je
xchg
xor
rolb
sub
push
push
in
xchg
xor
push
out
jp
ret
cmp
dec
test
test
add
ds
push
jg
sub
test
pop
mov
and
cwtl
sub
xchg
addr16
pushf
je
and
in
movsb
movsb
xchg
addr16
sahf
test
lods
sarb
sbb
xor
adc
and
sbb
aaa
inc
push
movsb
jle
je
cltd
dec
dec
push
inc
pop
incl
dec
inc
add
insl
and
sub
inc
sbb
push
gs
mov
daa
inc
push
nop
flds
jne,pn
das
push
xor
or
mov
mov
insl
jo
mov
das
inc
in
roll
inc
out
mov
popa
xor
xchg
dec
jae
pop
adc
gs
ret
in
cmc
sbb
push
or
aaa
cmpb
push
orl
mov
add
mov
jo
es
int
sbb
data16
mov
sub
mov
mov
cwtl
je
fwait
sbb
push
sub
push
or
dec
out
sub
mov
adc
and
adc
ss
or
dec
mov
rorb
push
add
cmp
or
nop
inc
add
nop
pop
cmp
sbb
sub
sub
add
arpl
push
mov
dec
adc
jns
push
mov
dec
dec
rcll
or
push
or
pop
dec
xor
dec
aas
inc
pmullw
shrl
inc
fwait
rolb
mov
xor
mov
nop
or
pushf
shlb
or
add
sbb
mov
nop
mov
jnp
lcall
clc
push
jae
lock
leave
mov
lock
add
inc
pop
or
pop
les
iret
psraw
jno
mov
inc
subb
add
sbb
mov
sub
pushf
lret
xchg
sub
lock
int
sub
mov
inc
shl
int3
orb
insb
or
jne
mov
inc
jns
orb
divl
js
push
rcl
or
add
decl
fsubl
xor
cmpsl
test
adc
data16
scas
mov
inc
outsb
pop
push
inc
sbb
inc
pusha
leave
pop
add
fists
dec
cmp
dec
jecxz
outsl
sub
inc
push
cmp
add
pop
cli
push
inc
add
iret
xor
dec
pop
mov
push
or
xchg
add
loopne
mov
adc
inc
fcompl
js
pushf
jp
jb
sbbb
sbb
or
push
jp
push
xchg
shll
pusha
out
seto
xchg
js
jle
fdivrl
push
adcl
add
xchg
mov
out
inc
lods
jg
fadds
mov
jle
adc
dec
leave
pop
dec
xor
sbb
sarb
push
jb
cmpsb
mull
jnp
adcl
add
lcall
cmp
nop
dec
mov
inc
lret
addr16
push
adc
cmpsl
jnp
and
lcall
pop
leave
push
push
out
addb
mov
pop
pushf
fadds
into
std
div
lret
mov
mov
nop
xorl
test
subl
dec
xchg
add
les
jo
pop
lods
mov
jae
into
nop
insl
push
enter
mov
mov
cmp
inc
mov
pusha
pop
or
outsb
movsb
aaa
loopne
cmpsb
mov
pop
js
pop
push
fs
and
js
outsb
sbb
dec
add
mov
vmread
jno
faddl
add
test
lods
push
or
and
js
sub
dec
dec
dec
scas
scas
cmp
jecxz
sbb
pusha
jle
test
in
add
test
rorb
mov
clc
addl
dec
roll
dec
pop
jo
cwtl
dec
shll
lods
mov
dec
shll
mov
adc
fimull
push
sti
push
adc
add
pop
sub
jb
inc
add
add
pop
ficompl
pop
inc
jmp
jl
xor
xor
ds
aaa
test
test
xor
call
pop
add
sbb
pop
inc
sbb
movsb
jecxz
addb
push
outsl
andb
adc
dec
and
shrl
pop
mov
pop
mov
sbb
nop
xor
xchg
mov
lea
inc
or
pop
and
push
imul
sbb
roll
add
add
inc
sbb
xchg
loop
push
fbld
adc
roll
push
int3
add
inc
pusha
xchg
mov
nop
adc
push
mov
and
dec
add
nop
or
adc
leave
and
test
add
xor
mov
test
mov
mov
mov
push
or
xor
inc
xor
adc
jns
ja
ss
jne
jmp
and
push
and
sbb
cwtl
popf
sub
and
jne
push
test
xor
ja
push
enter
adc
jno
loop
mov
jno
or
pop
push
shll
push
scas
arpl
cmpsl
cmp
nop
lcall
inc
pushf
aam
and
cmp
jne
jle
enter
sub
jle
and
mov
cwtl
push
gs
push
pop
push
pop
adc
aas
jle
loopne
andb
inc
mov
push
aad
inc
outsb
or
outsb
scas
mov
imul
sub
push
sbb
out
push
and
jne
fadds
mov
xchg
xchg
rolb
adc
xor
addr16
pop
imul
pop
dec
fcmovne
push
and
sbb
sahf
dec
and
cmpsl
pop
stos
inc
adc
testl
xor
ret
push
push
add
inc
rcll
mov
dec
inc
mov
fcoms
dec
aas
push
push
pushf
ss
sub
or
adc
pop
test
daa
inc
and
push
xor
mov
sub
movb
sbbb
push
inc
fsubp
xchg
mov
add
xchg
pop
movsl
nop
add
inc
test
jno
sbb
push
mov
pop
dec
rcpps
mov
imul
pop
ret
or
and
inc
adc
mov
cmp
sti
jns
sbb
out
xor
inc
mov
les
inc
dec
or
dec
cmp
cmp
add
and
mov
les
sbb
xchg
push
add
and
sti
daa
push
aas
add
adc
outsb
push
mov
dec
mov
sbb
movsl
mov
fbstp
pop
lods
inc
or
dec
adc
mov
xchg
push
or
jo
and
imul
inc
popa
and
insb
mov
xor
dec
jne
test
or
pop
out
xchg
movsl
cltd
push
jnp
dec
jno
lock
pop
cmp
inc
aad
mov
cld
je
lds
cmpb
nop
insb
mov
mov
ret
pop
and
xor
les
and
clc
mov
addr16
push
pop
mov
cli
pop
cmp
mov
jecxz
or
inc
stos
pop
je
add
add
xchg
push
add
out
test
jb
dec
orl
out
jae
lods
xor
imul
push
mov
adc
lahf
nop
add
aad
pusha
call
inc
jno
int
loop
jmp
je
aas
test
jb
jg
xchg
subl
xchg
push
clc
xor
into
je
jne
mov
gs
jns
mov
inc
adc
mov
inc
sub
mov
and
imul
mov
test
daa
push
push
cmp
daa
mov
xor
pop
mov
rorl
rorl
sub
jg
es
scas
push
cmp
repz
and
inc
fidivs
lea
adc
pusha
pop
push
cmpb
je
adc
out
sbb
lods
orl
mov
sbb
in
dec
aam
jmp
mov
repnz
sbb
push
or
int3
inc
inc
pop
or
jo
push
or
cmpsb
in
or
inc
popa
and
adcl
aaa
xchg
pop
addr16
xchg
or
cmp
add
xlat
sti
xor
xchg
gs
popa
test
scas
dec
push
imul
and
daa
call
pop
sbb
inc
jmp
mov
xchg
decl
or
inc
ror
push
mov
testb
pop
mov
push
rolb
and
inc
cmovl
sub
jo
cmp
and
mov
ss
fs
or
xorb
push
aad
dec
mov
insl
add
insb
or
scas
movl
les
lahf
inc
dec
aaa
sti
push
shlb
dec
mov
les
add
xchg
push
in
xchg
pop
lea
xchg
jbe
fisubl
es
pushf
ja
xor
ds
xchg
sub
inc
push
adc
dec
dec
mov
in
rclb
pop
xor
fstp
rcrb
sub
inc
rolb
or
lds
divb
in
mov
inc
out
mov
mov
and
mov
xor
scas
mov
push
leave
cmpsb
mov
or
inc
jle
imul
or
mov
push
push
dec
sahf
sbb
stc
out
inc
push
andb
dec
dec
movsl
ja
push
dec
sbb
dec
pop
push
xchg
mov
loope
inc
pusha
fmull
mov
jl
cmp
dec
push
sysenter
add
cmp
xchg
shr
adc
mov
inc
cmp
movb
mov
pop
pop
adc
mov
sbb
orl
aam
dec
cmp
cmpl
or
xor
js
add
push
add
dec
mov
mov
or
xor
and
je
cltd
jo
or
and
pop
enter
call
mov
nop
inc
arpl
add
cwtl
les
adc
roll
js
loopne
test
sti
push
pop
cmpsb
and
push
js
xor
add
out
fimuls
cmp
push
out
mov
stos
jns
xor
xchg
xorb
xchg
push
mov
inc
cld
cmpsb
out
nop
and
xchg
xor
and
jp
imul
mov
cmp
push
xor
loope
movsb
fs
xchg
lods
jno
jg
lea
into
test
lea
push
pop
mov
fs
fstps
sub
int
popa
insl
and
mov
pop
mov
pop
popa
and
mov
adc
push
cmp
sbb
mov
jae
push
push
lock
dec
or
stc
add
imul
negl
jne
shr
movsl
rcll
lods
in
fldl
push
adc
addb
rcll
xchg
mov
push
add
mov
xchg
xor
int3
push
cmp
dec
lods
sbb
roll
xchg
mov
rcll
mov
movsb
and
iret
mov
xchg
xchg
test
andb
sbb
jns
xlat
push
or
out
ret
mov
xor
add
leave
dec
shll
dec
jne
jmp
pop
pusha
cwtl
push
push
dec
push
mov
popa
ja
cmpsl
mov
iret
jnp
xchg
aaa
cmp
gs
jno
mov
or
nop
daa
in
sbb
into
pop
xchg
mov
test
fs
fxch
push
sbb
incl
mov
xchg
das
pop
add
jb
xchg
fdiv
bound
xor
scas
or
xchg
stos
daa
jb
sbb
lock
in
or
in
mov
dec
lds
lock
jmp
mov
les
push
inc
adc
in
imul
add
lcall
sarb
sbb
or
pop
cmc
call
xchg
pop
add
push
es
nop
mov
imul
mov
roll
mov
aaa
ret
push
cmp
add
lock
in
fimull
and
sub
sub
or
mov
jg
pop
mov
icebp
jmp
adc
movsl
mov
in
jmp
inc
bound
adc
mov
jle
inc
inc
inc
or
mov
mov
imul
add
cmp
cmpsl
loopne
fsubl
push
or
cmp
jmp
push
push
insl
add
lds
outsl
ret
xchg
xchg
push
nop
sub
cmpsl
push
loope
add
sahf
mov
mov
in
push
pop
out
xorb
add
inc
es
and
mov
repz
les
inc
lea
pop
push
sbb
cmp
push
sub
imul
cwtl
clc
or
inc
or
sub
dec
push
inc
lcall
xchg
add
jno
sub
inc
push
inc
subl
mov
fildll
push
gs
pop
outsb
xchg
push
pop
add
jmp
mov
adc
popa
lea
xchg
dec
lock
push
mov
dec
push
lahf
xchg
cld
dec
pop
and
jp
pushf
call
das
lret
fwait
sahf
inc
cltd
dec
pcmpgtb
clc
mov
dec
cmpsl
pop
fbstp
mov
lods
jmp
scas
arpl
mov
sbb
push
or
call
daa
adc
adc
popa
out
or
rolb
xchg
fwait
ret
adc
or
adc
mov
xchg
mov
gs
js
inc
push
or
es
mov
mov
inc
inc
mov
inc
inc
mov
lods
pop
inc
adc
jecxz
jp
cmpsb
jmp
scas
jmp
lea
mov
or
movsb
test
mov
mov
ret
arpl
sub
inc
and
in
and
push
sub
adc
xchg
cmp
xlat
jl
push
sbb
xor
mov
push
pop
rcll
sar
mov
push
mov
mov
out
adcb
xlat
sbb
adc
jmp
mov
sahf
and
sbb
jns
daa
scas
lcall
mov
jmp
cltd
cwtl
inc
pop
and
mov
cs
mov
dec
lahf
outsb
xchg
sbb
add
sahf
xchg
cs
enter
inc
dec
dec
inc
outsl
loopne
mov
sub
andl
dec
add
adc
jg
cli
xchg
add
sub
outsb
sahf
or
out
scas
movl
adc
and
jns
cmp
adc
add
add
pop
or
inc
into
jbe
and
pop
bnd
out
lahf
hlt
mov
inc
and
call
icebp
negb
or
sbb
sbb
pop
xor
adc
sub
sub
adc
add
lahf
rolb
arpl
xchg
ja
xorb
repz
jo
cmp
push
adc
in
dec
jno
nop
sbb
mov
sub
rolb
jecxz
mov
ljmp
je
sahf
add
pushf
test
sub
pop
mov
mov
lock
mov
fs
or
and
popa
adc
or
jno
in
test
add
sbb
and
test
in
xchg
shlb
xor
ds
xchg
call
push
jns
call
pop
cltd
sbb
push
sub
fimuls
data16
push
mov
rcrl
shlb
addb
xlat
add
adc
leave
rorb
icebp
rorb
lock
dec
in
dec
shrb
in
push
out
jne
xchg
push
dec
inc
pop
loopne
push
ja
cmp
and
movl
nop
mov
ja
popa
xchg
inc
in
pop
xor
add
sbb
push
stc
add
mov
inc
hlt
xchg
push
mov
in
insb
mov
xorb
and
dec
or
inc
movsb
loopne
push
jo
faddp
mov
sub
push
sub
jne
cmc
test
ficoml
mov
dec
jne
scas
add
dec
cmp
sbb
out
or
inc
xchg
xor
xchg
sahf
dec
or
jae
dec
gs
add
cmp
movsb
ret
addl
add
adc
lock
cltd
xor
sahf
push
imul
cmp
inc
cwtl
mov
inc
xchg
mov
add
mov
and
shlb
mov
xlat
or
or
cmpl
loope
cmpsb
out
cmp
jne
cmp
xor
dec
fldl
fs
pop
mov
rolb
mov
mov
cmp
subl
push
jb
push
insl
stc
clc
clc
test
in
push
push
push
xor
and
and
mov
enter
dec
ja
cld
mov
test
add
dec
stos
adc
test
out
out
pusha
xor
jo
jne
dec
test
or
xchg
cmpsb
dec
pusha
mov
mov
pop
fnstcw
inc
inc
pop
xlat
pop
icebp
xchg
inc
incl
ret
push
jo
aas
movsb
jg
add
dec
pop
cmpb
movb
dec
pushf
andb
mov
mov
add
nop
inc
mov
les
inc
hlt
add
fnstcw
mov
outsb
jne
test
and
mov
imul
repz
mov
pop
or
jb
add
dec
jle
adc
fildl
xchg
loop
cmc
das
clc
add
push
bound
insb
xor
sbb
sub
pop
pusha
jae
xchg
or
pop
inc
and
orl
or
bound
sti
popf
je
aam
or
fs
arpl
lcall
adcl
movl
cmp
xchg
test
push
fs
push
insb
fiadds
adc
int3
test
insb
and
movsl
or
inc
std
or
adc
imul
in
insl
inc
add
test
enter
pop
and
inc
repz
jle
mov
repnz
mov
mov
fnstenv
test
dec
mov
fdivr
sbb
cmp
mov
leave
or
mov
mov
fdivrl
add
adc
or
in
lods
pop
loop
lods
mov
movsb
shr
jmp
repz
adc
les
test
jb
mov
pop
js
pop
or
sub
ret
aam
in
in
loop
jecxz
ljmp
pop
lea
popa
pop
mov
repnz
sbb
xchg
int3
out
loopne
pushf
loope
lret
aam
push
sub
fistpll
test
fcmovb
cmpsb
pop
sbb
cmp
add
lahf
dec
mov
in
add
xor
cmp
push
nop
pop
mov
pop
icebp
add
aaa
lcall
jle
imul
dec
cmp
repnz
pushf
adc
fs
push
adc
jmp
xor
sub
enter
xor
mov
cltd
dec
sub
inc
dec
add
mov
aas
cmp
xor
arpl
or
jbe
cmp
xor
jbe
inc
add
dec
add
cld
jmp
xchg
xor
out
bound
push
xchg
cmp
or
add
gs
cmp
loopne
icebp
push
cltd
dec
add
push
lret
roll
js
adc
xor
dec
push
nop
mov
testw
dec
cmp
adc
test
pmuludq
and
jge
pusha
sbb
aas
pop
enter
mov
popa
fs
mov
fcom
es
js
or
or
inc
sbb
dec
loopne
lock
nop
adc
and
rol
lahf
or
mov
nop
fwait
nop
testl
add
dec
inc
jns
lcall
lcall
mov
pop
add
mov
loopne
adc
int
push
pop
ja
xlat
or
repz
inc
mov
sub
in
sti
inc
xor
cld
pop
cltd
xchg
cmpsl
cmp
push
mov
mov
push
and
arpl
pusha
cmp
inc
pop
adc
xor
add
xor
pop
aad
test
filds
pop
push
cwtl
movl
or
scas
inc
pusha
or
or
imul
and
mov
or
or
add
add
pop
rolb
rolb
dec
dec
repz
add
add
or
add
out
push
add
icebp
sbb
push
add
dec
sahf
inc
stc
inc
xchg
sbb
add
add
dec
fs
xchg
pop
nop
dec
xlat
push
jnp
aam
sti
push
jecxz
mov
sbb
jmp
repnz
push
mov
push
or
jp
daa
nop
xor
sub
js
test
fnstsw
push
jo
add
popa
jo
pop
sbb
and
jb
arpl
sub
xor
je
imul
fistl
cmpsl
cltd
cmp
test
push
pop
mov
sub
insl
popa
leave
mov
jo
pop
mov
adc
sub
sbb
outsl
ror
nop
sbb
and
jl
rcrb
mov
xchg
js
or
repnz
push
scas
push
mov
mov
or
add
push
pop
and
adc
inc
lds
mov
and
popa
repz
xor
pop
and
xchg
sbb
mov
adc
pop
sub
fisttps
insl
or
jl
push
imul
or
dec
push
inc
or
cwtl
outsb
dec
fisubrl
push
jb
adc
imul
sbb
nop
inc
in
xchg
out
mov
adc
mov
fdivl
movsl
jecxz
add
sahf
mov
add
pushf
mov
push
cmc
dec
mov
lcall
push
and
xor
xor
ss
cmp
xor
inc
cmp
adc
inc
dec
dec
dec
dec
dec
dec
dec
dec
addr16
psubw
push
push
push
and
jg
jne
lods
xor
adc
aad
xchg
imul
shlb
cmp
test
inc
insl
sbb
adc
adc
fmulp
xor
and
je
pop
dec
test
inc
std
out
inc
lcall
inc
add
dec
mov
js
push
fwait
add
and
mov
cs
test
idiv
mov
pop
push
into
push
xor
incb
xchg
sbb
loopne
jbe
test
movsl
mov
clc
inc
clc
sub
clc
or
mov
add
jge
js
pop
sub
mov
test
sbb
dec
xchg
xlat
cmp
xchg
dec
aas
or
sarb
stos
pop
ficompl
mov
cli
push
sbb
leave
arpl
push
ret
mov
and
nop
add
orl
mov
imul
test
xor
mov
gs
push
inc
inc
inc
dec
xchg
into
xor
pusha
sub
popa
mov
push
adc
jle
arpl
or
clc
cmp
lock
xor
and
lds
or
adc
add
and
enter
mov
and
cmpsl
adc
pop
xchg
in
mov
lods
mov
nop
hlt
mov
inc
iret
stc
push
loope
shlb
cmp
pop
shlb
push
dec
adc
lods
in
mov
popa
push
bswap
or
adc
mov
lret
movb
bound
cmpsl
ret
mov
or
xlat
push
popa
mov
mov
sub
pop
or
pop
xchg
test
in
roll
xor
inc
jmp
mov
mov
jp
lock
sub
push
sub
add
in
adc
cmpsl
mov
or
sti
jmp
inc
arpl
push
add
jecxz
movsb
fmul
mov
and
pusha
loopne
int
mov
or
add
mov
aaa
or
inc
loope
add
sbb
es
shl
push
mov
aaa
mov
inc
pushl
sbb
xor
popa
jne
inc
add
add
pop
incl
dec
or
xchg
ret
cmp
jg
mov
ret
mov
lds
hlt
mov
cmp
push
stc
xor
add
xchg
ss
test
ret
jbe
mov
sbb
arpl
mov
sti
sub
in
fbstp
jmp
cmp
ja
dec
inc
ljmp
jmp
pop
mov
jmp
jmp
xor
or
fcoms
add
pop
enter
jnp
cmp
ss
adc
mov
sub
jb
popl
es
xor
adc
popa
imul
inc
push
popa
dec
stos
sub
xchg
subb
out
dec
xchg
ret
mov
int3
and
dec
sbb
xchg
rolb
sub
outsl
adc
iret
inc
repnz
andl
push
je
gs
je
enter
inc
push
shlb
pop
inc
shrl
xchg
out
data16
cmpb
flds
out
lcall
fs
aas
cmp
fistps
push
push
dec
pop
xor
or
in
mov
imul
mov
xchg
sub
in
dec
fistpll
add
mov
iret
cmp
fwait
add
aas
jp
push
dec
pop
ds
pop
pop
xor
mov
xchg
push
inc
mov
cmp
push
jnp
shrl
xchg
add
fs
jns
and
add
sbb
push
and
add
cmp
add
ds
add
out
movl
push
popa
js
ljmp
int3
test
js
mov
push
aam
scas
add
int3
fidivrs
dec
jg
cmpl
adc
mov
jns
addl
pop
mov
jle
js
pusha
aas
movsb
add
mov
dec
mov
add
dec
add
fmulp
xor
in
nop
or
xorb
cmpb
cmp
xchg
xor
push
xor
int
fs
push
push
inc
fucomi
dec
insb
xor
pop
pusha
mov
cwtl
add
popf
fs
adc
pop
orb
xor
insb
int3
mov
xor
pusha
adc
shr
cs
push
cmpb
sbb
popa
sub
add
aas
jno
xor
fmulp
inc
aam
cmpb
and
mov
push
adc
mov
pop
sbb
cmp
xor
pusha
cld
adc
mov
and
inc
push
cmp
sbb
dec
dec
or
xor
je
sub
push
xchg
jno
lcall
mov
pop
cmp
pop
cmp
arpl
rorb
inc
iret
pop
xlat
push
js
push
or
xchg
imul
mov
push
das
pop
add
jo
je
mov
jge
fdivl
add
adc
fdivr
cmp
fsubrl
fcoms
push
adc
mov
insl
cmc
in
push
or
push
in
jmp
dec
imul
push
xor
pop
ds
mov
push
sbb
pop
xor
push
test
adcb
push
xchg
push
or
dec
lods
ret
aaa
shld
ret
jge
andl
adc
mov
in
adc
add
mov
outsb
out
dec
cmp
or
fs
les
adc
xchg
jae
cmp
bound
adc
adcl
sbb
inc
lret
sbbb
sbb
fstpt
mov
mov
sbb
mov
jbe
les
jg
mov
push
sub
add
cs
rcl
and
or
insb
push
dec
fcomip
inc
in
jne
out
pusha
jae
mov
mov
xchg
insb
out
adc
jno
pop
and
lcall
scas
stc
or
pusha
iret
jno
push
inc
movsb
test
pop
mov
aaa
xor
mov
xchg
xchg
jg
imul
jo
sbb
pop
jecxz
add
aas
shll
xor
ret
fildl
scas
lds
push
punpckhdq
mov
cmpsb
inc
cmp
clc
scas
les
pop
aas
jae
mov
mov
jbe
js
sub
sbb
xchg
in
xor
leave
in
cmp
or
fisttpl
push
adc
push
and
mov
in
ljmpw
outsl
aam
cmp
xor
push
int3
xor
movb
movsb
flds
outsl
test
and
mov
pop
enter
in
push
push
push
mov
cwtl
add
clc
jmp
cmp
mov
sbb
jecxz
ja
sbbb
jmp
mov
adcb
push
pusha
pop
xchg
mov
and
inc
inc
mov
push
flds
sub
sbb
leave
pushl
outsl
xor
pop
pop
and
out
repz
addr16
push
cmpsb
pusha
cmp
sarb
out
imul
sbb
js
fmulp
ds
push
aam
or
inc
cmp
xchg
icebp
xchg
and
dec
sub
or
nop
es
or
add
mov
xor
test
sub
or
sbb
lock
push
ret
cwtl
push
adc
aaa
out
jo
jns
pop
jecxz
ret
sub
push
and
cmpsb
mov
icebp
or
add
out
sar
push
mov
xchg
add
add
test
pop
xlat
jl
rclb
fistps
imulb
mov
push
fsubs
sbb
push
push
jnp
mov
sbb
mov
xchg
pop
push
xlat
or
test
xchg
hlt
leave
in
popa
stos
inc
cmpl
inc
iret
mov
ljmp
sub
dec
xchg
int
jo
iret
dec
pop
das
loopne
cltd
int
push
lock
hlt
adc
push
sbb
jns
sbbb
dec
or
xchg
dec
lock
cld
add
xor
call
adc
add
popa
lret
rolb
inc
mov
jle
sbb
shlb
mov
lds
push
sbb
xor
les
cbtw
pusha
test
mov
add
out
retw
pop
shll
mov
add
lahf
xor
sub
push
add
in
mov
jmp
jnp
push
mov
popa
mov
mov
mov
cld
jno
rolb
dec
inc
dec
adc
incl
lea
cld
mov
mov
mov
aam
add
dec
jecxz
dec
jno
adc
jmp
pop
push
dec
adc
mov
xchg
dec
lcall
or
adc
mov
cwtl
pop
add
cmp
and
aaa
pop
push
push
popf
lea
inc
adc
push
fmuls
mov
pushf
stc
je
test
mov
int
adc
jl
clc
ss
insl
sub
and
imul
mov
xchg
daa
and
or
mov
push
add
inc
push
sub
bound
and
lock
roll
enter
sbb
movsl
or
sbb
add
loope
inc
add
and
lea
add
test
ret
dec
cmc
sub
xchg
or
jno
cmp
shrl
sbb
mov
dec
mov
xor
pop
pop
mov
into
hlt
cmp
hlt
cwtl
pop
push
hlt
pop
iret
hlt
sub
inc
add
int3
push
jb
rep
lock
xchg
cmp
dec
clc
or
pop
mov
xor
mov
xor
pop
or
rclb
push
jo
dec
add
inc
lock
add
ds
pop
fistps
fdivs
push
push
pop
push
push
sub
ret
stos
fsubrs
loopne
arpl
shl
mov
mov
pop
push
adc
pop
pop
outsb
ja
outsb
aaa
ds
cmp
push
popa
add
mov
jmp
push
ret
inc
dec
sbb
add
jne
test
ja
or
shrl
xchg
dec
movsb
hlt
out
iret
push
inc
cmp
enter
rolb
fwait
inc
mov
add
or
xor
adc
xchg
bound
adc
xchg
addl
ficoms
cs
pushf
sbb
add
inc
or
sub
mov
xchg
lea
je
inc
test
in
nop
add
sbb
push
repz
mov
or
push
mov
pop
pusha
adc
or
call
ss
add
call
pop
out
sbb
push
dec
cld
mov
and
dec
push
and
addps
subl
cmp
mov
daa
call
js
jo
mov
pushf
and
sbb
inc
stos
inc
clc
xor
and
lods
clc
sub
in
clc
sub
and
lock
jns
dec
clc
lods
orb
fwait
add
push
jb
xlat
dec
push
rclb
or
push
push
movsl
sub
pop
sbb
pop
sbb
pop
jae
nop
or
lock
sub
add
call
adc
je
inc
loopne
add
bound
inc
xor
enter
or
enter
sbb
add
and
xchg
push
mov
loopne,pn
pop
adcb
shll
daa
inc
sbb
dec
pop
fcmovne
leave
cmpsl
push
fistps
xchg
push
inc
stos
add
loop
ror
test
inc
xor
movsb
mov
add
xchg
arpl
add
mov
in
dec
add
add
cmp
jge
xchg
inc
jns
outsb
je
gs
push
jns
pusha
jns
rcrb
lcall
aaa
aas
mov
push
gs
push
mov
insb
dec
out
push
je
cwtl
fcoms
dec
xchg
pop
in
xchg
addr16
inc
push
sbbl
jmp
fistl
push
push
mov
mov
mov
rolb
push
fs
fs
jp
repz
sbb
sub
clc
dec
je
dec
dec
add
inc
mov
xchg
sub
test
xchg
sbb
dec
pusha
push
sbbl
cld
pop
test
push
clc
push
or
movsb
or
pop
jns
inc
add
mov
fcomps
cmp
inc
mov
adc
pop
inc
xor
imul
inc
jns
adc
push
inc
inc
incl
xchg
icebp
sbb
call
xchg
mov
adc
orl
fs
add
dec
es
sbb
test
sbb
int
push
inc
fs
es
and
lret
insb
mov
xchg
sahf
or
or
push
adc
cwtl
aad
loopne
xor
mov
std
sub
mov
popf
ret
fdivl
sbb
push
sub
add
dec
inc
push
and
sahf
add
push
add
xchg
add
xchg
xchg
cli
adc
insl
arpl
stc
mov
aas
pop
incb
add
mov
cltd
cld
idiv
xchg
xchg
pop
lods
sub
imul
inc
sbb
addr16
mov
dec
ss
mov
xor
fstpl
mov
adc
dec
ret
mov
adc
or
mov
inc
mov
xchg
outsb
push
enter
lods
call
jb
pop
jp
aas
add
or
popa
das
rcr
pop
dec
dec
div
js
mov
or
mov
inc
ret
icebp
add
jmp
adc
mov
fsubs
inc
push
in
fildl
popf
pop
pop
fsubrl
jle
rol
lea
stos
pop
lret
rcll
cmpsl
cmp
pop
mov
add
cmp
fcoms
inc
movsb
mov
push
xchg
cltd
sahf
jbe
ret
out
aas
je
xor
sub
cmpl
out
jne
mov
imul
inc
mov
fsubrs
push
xlat
and
or
add
dec
lcall
jno
mov
outsl
out
ficoms
inc
inc
pop
inc
inc
inc
xor
jne
adc
leave
outsl
ss
and
fs
lret
xor
cmpsb
mov
rcl
cmp
lock
and
or
rcl
pop
mov
out
mov
xlat
and
ljmp
ret
aaa
outsl
pop
in
shrb
add
pop
cmp
aaa
xor
cltd
cmp
fs
or
inc
lret
sub
push
pop
movb
negl
fimuls
push
jmp
es
or
insb
pop
push
dec
push
inc
ds
je
dec
lock
loop
adc
cmpsl
pop
mov
int
sbb
push
push
or
ja
push
aas
jbe
and
or
inc
inc
je
dec
aas
mov
sahf
push
hlt
pusha
call
scas
sub
mov
or
fcomps
adc
sbb
lods
push
scas
test
add
bound
push
mov
in
nop
loopne
popa
pop
jl
jbe
lods
fistl
or
out
pop
cmp
push
lock
push
cmp
sahf
gs
push
adc
push
mov
sahf
insl
dec
inc
and
andb
jne
xor
scas
leave
cmp
leave
adc
mov
sub
in
movsl
cmp
adc
and
popf
push
arpl
insb
or
in
and
inc
xor
nop
mov
mov
inc
xchg
outsb
add
adc
sub
sbb
mov
xor
adc
shl
sbb
push
pop
scas
push
fcoml
jmp
mov
inc
adc
xchg
xchg
xorb
mov
loope
xor
mov
aad
insb
cmp
adc
sub
jmp
mov
jno
icebp
lods
sbb
and
fdivs
sub
dec
or
push
scas
dec
icebp
and
jnp
dec
mov
test
out
inc
inc
push
leave
and
inc
in
out
cmpsl
orb
dec
add
or
add
psubusb
dec
scas
mov
jg
push
xlat
subl
aaa
out
cmpl
loop
ret
iret
and
sub
xor
jb
push
sbb
add
cmp
out
popf
cmp
ss
aas
fdivl
inc
lret
fidivrs
push
cmp
jo
setl
lret
aam
lret
filds
push
dec
in
ja
lahf
cmp
mov
mov
outsb
xor
pop
shrb
repz
out
daa
mov
test
add
fcmovne
push
ja
mov
outsb
packuswb
xlat
push
pop
pop
and
mov
inc
pop
pop
add
mov
aas
insb
jae
cmp
inc
xchg
je
ja
enter
mov
push
adc
xor
xor
add
sbb
pushf
mov
insb
inc
mov
sbb
clc
dec
repnz
push
pop
mov
inc
inc
xchg
or
xchg
aas
and
leave
push
xor
cmp
xor
inc
leave
push
inc
or
inc
sub
mov
mov
push
add
pop
push
inc
push
adc
push
insb
mov
enter
mov
mov
sub
mov
jl
nop
mov
or
aad
jmp
ret
pop
sbb
icebp
repnz
jmp
push
das
add
addr16
jl
fs
js
js
add
fisubrl
push
pop
roll
sub
mov
movsb
add
or
ret
test
inc
add
inc
add
cmp
push
mov
fcoml
add
xchg
xorb
and
filds
mov
adc
or
in
or
lret
sarl
leave
dec
popf
xor
mov
clc
call
mov
jbe
ffree
push
jge
or
popa
fs
push
daa
dec
lea
cmpsb
mov
repnz
mov
mov
mov
or
add
loope
daa
adc
test
jne
add
or
push
inc
insb
in
inc
push
lock
out
dec
add
add
jne
push
sbb
push
js
push
sbb
sti
jmp
pushl
dec
inc
add
imul
shlb
out
dec
mov
inc
or
mov
sarl
mov
mov
mov
int3
add
pop
call
xor
dec
jmp
js
inc
out
out
int3
dec
arpl
sbb
addl
sbb
ret
mov
repz
push
pop
test
cmpsl
xchg
hlt
lock
cs
adc
sbb
loop
clc
adc
pop
add
dec
shlb
ret
ds
add
push
jns
jle
icebp
xchg
sbb
fwait
aaa
les
mov
hlt
mov
adc
xor
or
icebp
fidivl
xor
loopne
fs
sbb
push
insb
ret
jle
je
push
sbb
fidivrl
jge
dec
repz
out
sti
pushf
xor
mov
xlat
dec
pop
push
cmpsb
das
enter
dec
ja
sbb
imul
inc
cmp
test
leave
int3
push
inc
in
lds
inc
push
fs
test
stc
xchg
test
xchg
in
add
sahf
jp
insb
scas
decb
ror
loope
and
inc
jmp
cmpsb
adc
xchg
rol
sbb
jns
dec
andl
fwait
mull
shrb
dec
add
xor
sbb
add
icebp
and
in
sbb
fidivrl
insl
cmp
dec
jmp
inc
fldt
adc
imul
sub
scas
adc
jge
clc
fisubrl
scas
orb
enter
loopne
pop
pop
pop
arpl
inc
cmpsl
or
jno
out
loopne
pop
iret
add
push
enter
push
add
sbbl
popa
movsb
add
and
addr16
dec
pop
aas
movb
jne
jl
cwtl
js
push
sub
sbb
call
cwtl
insl
loop
ficoms
xchg
loope
test
xor
push
inc
and
aam
sbb
jecxz
bound
test
push
mov
adc
stos
and
roll
icebp
mov
fs
or
into
mov
test
sub
dec
sbb
pop
cmp
mov
pushf
adc
inc
iret
xorl
sti
xchg
inc
movsl
iret
cmpsb
stc
and
jecxz
adc
js
outsb
nop
cmp
pop
cld
push
jp
adc
sti
jl
inc
dec
jnp
test
sub
cmp
inc
in
xchg
mov
mov
ds
add
dec
ret
adc
pop
inc
sbbl
in
daa
cmpsb
shlb
inc
test
pop
add
std
daa
add
pop
jne
imul
add
xor
fsubl
add
jg
leave
xchg
pop
enter
adc
dec
inc
jne
mov
scas
cmp
iret
inc
idivl
mov
jne
pop
dec
adcl
add
setl
das
pop
repz
addb
push
jecxz
or
fadd
adc
adc
mov
or
xchg
dec
sbb
clc
push
and
pop
jo
clc
sub
cld
inc
or
fld
std
inc
daa
ret
cmp
test
roll
mov
inc
arpl
lahf
ss
dec
leave
dec
inc
xor
outsl
and
jbe
lods
cmpsb
sahf
scas
inc
stc
inc
repnz
pop
es
push
hlt
cmp
mov
push
mov
ret
movsb
and
pop
push
lahf
pop
popa
sub
lods
and
and
adc
add
iret
into
sbb
fstl
inc
or
and
xchg
shlb
cmpsb
cltd
rclb
lock
or
sbb
lea
fisttps
addl
retw
mov
and
jne
ljmp
mov
subb
inc
adc
daa
gs
js
lock
mov
sbb
mov
aad
sbb
andl
js
add
lret
mov
lods
je
mov
push
and
sub
cmpsl
mov
add
sub
adc
loop
or
fcompl
adc
or
call
jno
dec
push
aas
stc
lds
inc
subb
incl
pusha
mov
sti
cmp
jnp
mov
push
or
xor
mov
loop
cmpsb
xor
je
call
sbb
or
inc
jo
addr16
push
dec
dec
cmp
or
stos
popa
xor
jg
xor
add
hlt
xchg
inc
and
scas
dec
or
jo
sub
bound
aaa
adc
dec
jmp
add
int3
pop
fisubs
or
lar
xchg
jbe
mov
mov
cmp
ds
test
cli
adc
push
cli
and
cmp
in
mov
lods
jb
loopne
popa
push
add
push
fsubr
jge
loop
insb
cmpsb
test
test
addl
add
mov
cmc
mull
adc
add
push
in
or
dec
sbb
mov
mov
push
sub
dec
dec
or
add
or
pop
mov
jmp
ds
ret
cli
movsw
cli
mov
add
je
pop
adc
jge
xchg
sti
dec
inc
sub
inc
loopne
sbb
je
subb
inc
inc
pop
in
mov
add
repz
jo
mov
inc
add
dec
imul
lods
jo
idiv
push
dec
inc
pop
cmp
sub
and
push
repz
sub
rcll
stc
test
lahf
push
nop
popa
pop
rorl
je
test
iret
xorb
jmp
lds
sub
shrb
sub
cmp
in
adc
dec
or
mov
sub
ljmp
int3
pop
mov
ret
adc
add
inc
cmp
je
cmp
popa
xor
das
dec
outsl
arpl
lcall
mov
mov
or
jo
das
mov
pop
mov
rorb
xchg
pop
or
jb
jne
call
cwtl
hlt
adc
push
and
aaa
xor
jmp
cs
sbb
dec
cmp
fmul
xlat
popa
and
out
pushf
mov
inc
push
lahf
movsb
test
pop
movb
inc
popf
addr16
pop
add
and
dec
jmp
cmp
pop
clc
sub
mov
xchg
std
mov
add
aaa
lcall
cmp
insb
ljmp
fimull
cmp
lods
xchg
mov
je
dec
push
sarb
sub
into
add
sahf
outsb
dec
sbb
jecxz
push
outsl
call
arpl
xor
push
sbb
or
inc
mov
add
sub
jecxz
lea
xchg
jmp
mov
das
mov
adc
or
in
rcrl
mov
pop
sbb
jnp
and
cmp
inc
jmp
arpl
or
insl
or
xchg
aad
xor
enter
movsb
adc
add
sbb
mov
push
cld
inc
loopne
inc
push
cld
or
insl
mov
insl
out
lds
cmp
ds
in
xchg
je
dec
inc
dec
push
sbb
dec
inc
dec
sbbb
dec
lret
test
ja
push
nop
pusha
popf
outsl
pusha
out
in
inc
or
sbb
xor
jne
ret
sbb
dec
subl
mov
xchg
jno
jmp
lods
inc
add
xchg
sub
cmp
leave
test
dec
mov
mov
aad
or
sbb
fstpt
pop
add
sarb
in
call
out
push
dec
mov
add
jmp
and
cmp
and
sbbb
xor
inc
and
dec
imul
rolb
mov
jmpw
and
pop
pop
adc
inc
xor
or
jno
cmp
sbb
mov
stos
add
inc
sbb
out
cmpsb
call
push
aad
jno
jae
or
orl
pop
pop
adc
aas
jo
jmp
mov
or
sti
in
loopne
test
cs
movsl
jne
imul
jmp
sbb
adc
aaa
out
sbb
adc
pop
add
int
sbb
xchg
orl
jl
adc
adc
xchg
decl
adc
xchg
mov
jno
cmp
in
cmp
or
add
and
adc
or
negb
dec
adc
xchg
in
push
add
aaa
mov
in
xor
pop
test
add
fildl
lcall
daa
lcall
jecxz
clc
popf
lods
xchg
movsb
outsb
mov
adc
mov
and
mov
or
test
outsl
or
mov
pop
jb
shrb
aas
movsl
lods
add
mov
lahf
cmp
pop
lods
mov
movb
jmp
add
adcb
inc
aaa
sbb
xor
inc
mov
inc
faddl
mov
das
push
loope
test
es
testl
sbb
push
pop
mov
enter
ret
aas
cmp
test
lods
ret
sbb
pop
xor
sbb
push
ret
push
pop
add
mov
pop
add
cmp
in
add
mov
mov
arpl
loopne
jae
sbb
enter
adc
adc
xor
mov
adc
nop
ss
cmp
jne
xor
xchg
movsb
xchg
lock
cmp
daa
mov
lahf
push
in
xor
pop
sahf
cmp
xchg
jmp
adc
ds
popl
aas
cmp
sbb
or
fwait
addb
and
repz
inc
cmp
ret
rorb
test
outsl
add
fcomip
inc
fdivs
jb
mov
jecxz
xor
cmc
jl
inc
pop
xchg
movsb
and
movsb
mov
cmp
je
pop
cmovno
fwait
dec
cmp
int3
out
mov
enter
inc
mov
rolb
in
or
cmp
nop
lock
pop
call
stc
stos
lcall
sub
rcl
imulb
js
fildll
pusha
adc
pop
add
sub
xchg
add
inc
mov
daa
dec
dec
rol
ljmp
loope
pop
enter
imul
fisttpll
add
add
jl
jl
add
xchg
add
cltd
add
push
in
add
add
adc
out
xor
dec
fisubs
pop
add
imul
dec
repz
sbb
mov
lea
jmp
push
sahf
add
cmp
dec
mov
adc
and
or
sub
adc
es
sbb
push
loopne
adc
sbb
sbb
jmp
and
roll
adc
xor
rol
aam
lcall
push
imul
inc
jg
push
sub
mov
sub
subb
and
clc
mov
enter
pop
xchg
lock
and
test
movsb
xor
jnp
jb
scas
add
jg
push
xor
xor
or
xor
in
add
jns,pn
inc
push
fmul
mov
call
rorl
in
sbb
lea
ss
mov
in
lods
sub
or
jno
aam
cmp
lea
sbb
test
xor
mov
in
add
dec
fwait
cmp
in
das
std
pop
inc
adc
dec
push
enter
add
mov
fs
jmp
pop
adc
xor
mov
dec
fs
pop
fwait
sbb
in
inc
xor
adc
dec
add
xchg
or
in
pushf
dec
inc
dec
pop
in
es
sbb
loope
sub
lret
stos
cli
or
pop
test
dec
add
imul
push
mov
add
lds
add
repz
and
push
scas
lods
pop
push
lds
adc
inc
jnp
and
inc
push
sbb
inc
rcrb
nop
mov
push
movb
shrb
sub
rorb
orl
sub
fnstcw
push
mov
or
aas
add
cmp
inc
mov
addb
mov
adc
cmp
psrld
mov
das
ljmp
and
adc
push
punpcklwd
repnz
testl
addl
pop
outsl
pop
mov
insl
movl
push
into
sub
sbb
aaa
dec
xor
mov
mov
dec
or
ret
pusha
and
sub
lcall
js
add
movsl
mov
jmp
sbb
sahf
lock
pop
ret
or
les
mov
dec
test
xor
loope
ret
push
sub
or
mov
pop
jns
dec
mov
jbe
lods
cmp
lret
addl
inc
sub
fldt
jle
sub
sub
or
adc
mov
loopne
or
add
dec
push
add
adc
rcrb
addr16
sbb
cmp
add
fistps
xchg
loopne
mov
sub
loopne
jle
cmp
sub
movsl
or
mov
sbb
mov
inc
aaa
sub
shr
out
or
and
sbb
xor
sbb
sub
mov
inc
inc
fisubs
mov
add
lds
in
sbb
pop
xor
and
data16
sti
cmp
aad
xchg
lds
lahf
fldl
or
addl
xchg
scas
test
dec
test
or
jne
inc
test
lcall
mov
inc
ss
leave
sbb
in
mov
jne
mov
cmp
push
sbb
ljmp
jg
test
loopne
adc
dec
cld
xor
ja
sti
jl
mov
cs
adc
and
push
jmp
out
xchg
enter
jl
inc
sbb
adc
jns
ret
mov
cmpsl
arpl
or
nop
or
ret
outsb
icebp
ret
sbb
hlt
pop
push
enter
clc
or
imul
xor
pop
aad
test
enter
mov
int
mov
shl
ds
out
xor
xor
mov
inc
push
adc
rcrl
test
aam
int3
mov
xor
push
dec
cwtl
scas
xor
lock
dec
nop
fmull
in
mov
sahf
daa
add
jl
or
gs
sub
popa
call
adc
sbb
in
mov
cmpsb
mov
add
repnz
cmp
js
stos
sbbl
and
aam
sbb
add
inc
rolb
out
daa
inc
mov
xchg
mov
or
mov
push
lahf
shl
push
sbb
xor
add
push
je
jnp
test
or
gs
aaa
push
adc
xor
pop
push
add
and
int
push
jbe
add
dec
pop
inc
popa
sbb
cmp
and
addr16
mov
pop
movsl
cmp
pop
xor
pop
jbe
clc
mov
push
rcrb
shll
sahf
add
stos
add
sub
xchg
bound
and
out
inc
pusha
sbb
decb
data16
addr16
push
xor
or
or
mov
push
cmpsl
push
mov
lods
add
enter
cmpsb
addl
add
test
inc
adc
dec
mov
cmp
push
inc
push
dec
lcall
pop
out
loop
dec
pop
push
insl
outsl
gs
add
pop
cmp
add
dec
mov
cmp
or
ds
jo
xchg
inc
push
push
push
sbb
sbb
sbbb
push
sbb
mov
pop
mov
nop
inc
adc
or
xchg
or
lahf
xor
sub
xor
ja
dec
mov
dec
inc
imul
sbb
jbe,pt
pop
aam
add
mov
adc
and
add
adc
cmp
jle
cld
pop
pusha
inc
inc
add
inc
cmp
xor
add
inc
jbe
and
clc
jle
mov
inc
cmp
sbb
cmp
rorb
adc
je
inc
add
roll
call
mov
add
sbb
rcrl
add
aas
pop
stos
fidivrs
orb
dec
inc
jp
dec
or
xchg
and
or
jecxz
cmpsl
push
adc
push
insl
or
lcall
adc
or
mov
adc
cmpsb
and
xor
dec
dec
or
push
outsl
mov
fisttpl
adc
mov
inc
and
or
ja
xchg
jne
dec
movsl
sbb
out
mov
das
mov
cmp
sub
mov
out
sub
xchg
mov
add
ficompl
xor
cltd
add
pop
pop
and
repnz
jb
adc
data16
inc
add
sti
add
adc
add
popa
jns
outsb
sub
adc
test
or
out
mov
loop
imul
enter
adc
js
in
cwtl
pop
add
clc
sahf
push
das
sti
sbb
nop
nop
adc
lea
lret
pop
loopne
es
or
lods
jo
mov
xchg
outsl
adc
data16
mov
jle
and
push
mov
inc
inc
push
gs
ss
sbb
add
xor
and
mov
lock
adc
popa
pop
cmp
sub
adc
imul
movsl
add
inc
sub
add
scas
push
outsb
pusha
popa
pushf
inc
scas
or
outsl
push
or
xor
mov
pop
aas
inc
add
insb
or
notl
sub
push
nop
arpl
dec
imul
or
test
or
adc
cmpsl
ffree
inc
aam
xchg
ficoms
jns
ret
inc
testb
add
xchg
xor
dec
adcl
rclb
push
push
dec
movsl
bound
sbb
fiadds
js
jbe
fsubrl
fadds
inc
ud2
pop
pop
adc
adc
add
popa
outsb
or
mov
lea
hlt
cwtl
dec
or
clc
mov
in
sbb
mov
push
sbb
and
fidivrl
adc
push
xchg
outsl
cmp
xor
push
push
and
fs
xlat
adc
xchg
addl
psllw
and
add
jmp
adc
adc
sbb
and
sub
push
arpl
aas
mov
pop
add
or
pop
and
mov
pop
and
sbb
or
sub
mov
mov
pushl
mov
mov
scas
ljmp
and
in
adc
jb
xor
sbb
push
cwtl
xor
ja
imul
cwtl
push
mov
jl
ss
jns
lock
aas
add
pop
ss
lock
in
jle
xor
int3
xor
push
add
push
aas
pushf
jg
in
xor
shl
fsubl
fs
addb
and
imul
jo
vmread
es
and
xchg
lret
cs
push
jae
push
sub
mov
push
jae
xchg
lret
in
mov
pop
call
out
lods
popl
or
jbe
imul
rcrb
sbb
in
cmp
out
nop
aaa
mov
lock
lods
pop
out
das
or
xchg
mov
pop
lret
push
in
lret
push
add
adc
sub
jo
jo
lock
inc
push
test
mov
dec
setno
fmull
mov
mov
cld
inc
aas
jo
popa
ficompl
dec
loope
call
add
les
dec
inc
lahf
adc
das
xchg
cmp
insl
mov
push
inc
sub
inc
adc
xor
and
imul
adc
hlt
cmpsb
sub
pop
mov
mov
push
fldcw
cmp
dec
and
add
in
mov
jb
jg
and
pushl
roll
push
and
push
sub
jne
sub
mov
push
inc
sbb
mov
pushf
aaa
jnp
int
insl
xchg
add
fwait
cmp
add
fstpl
mov
mov
rol
sbb
stos
xchg
push
xchg
in
push
lods
inc
mov
rcll
inc
and
outsl
pop
and
lea
leave
jb
and
cmp
mov
push
and
or
and
adc
xchg
xchg
gs
add
pop
push
mov
daa
sub
add
push
aad
pop
das
int3
and
mov
dec
or
add
push
xlat
incl
push
and
mov
sbb
jmp
inc
jmp
dec
imul
clc
sub
dec
kortestb
sub
inc
cmp
sub
jbe
addb
loopne
dec
push
or
rclb
inc
push
pop
xor
aad
insb
fs
dec
loop
lods
pusha
cmp
inc
rcrb
push
ret
or
iret
test
sbb
fists
arpl
shl
xor
js
jae
data16
sbb
mov
rep
flds
es
pop
enter
xor
arpl
sbb
xor
arpl
inc
xor
lods
sbb
xchg
lds
addb
push
cmp
int
out
push
mov
mov
es
in
in
cwtl
hlt
int
cmp
gs
lock
inc
cmc
xchg
stc
movsb
push
inc
or
xor
push
test
inc
jbe
push
scas
or
jle
fs
inc
sarb
push
pop
inc
cmp
dec
adc
pop
shlb
push
into
mov
cmp
xchg
popa
jmp
xchg
orl
sbb
mov
add
nop
mov
fcoms
inc
shlb
gs
mov
insb
push
inc
xchg
sbb
insl
addb
sar
rclb
add
mov
sbb
xchg
sbb
or
or
mov
mov
lock
inc
inc
popa
cmc
add
aas
inc
add
movl
dec
and
inc
dec
dec
pop
xor
add
inc
pop
daa
dec
cmovns
mov
mov
dec
add
loopne
push
sub
push
push
test
fcoml
inc
inc
les
or
sbbl
ret
inc
inc
add
pop
push
int
and
dec
push
int
ret
inc
push
or
sbb
dec
push
sbb
inc
add
dec
push
push
pop
add
mov
add
inc
movsb
imul
inc
inc
outsl
xor
ss
dec
mov
and
adc
push
push
xchg
mov
push
xchg
andb
xchg
mov
sub
adc
rorb
sbb
mov
imul
or
push
mov
fstps
mov
pop
mov
xor
sub
push
mov
pop
nop
push
enter
pushf
dec
dec
insb
xchg
add
or
test
sub
inc
addb
inc
or
clc
pop
mov
xchg
pop
movsb
cld
rclb
addr16
push
cmovp
insl
or
out
pop
push
mov
rorb
sbb
ret
out
outsb
nop
je
inc
add
sbb
mov
or
shlb
scas
mov
insl
add
push
sbb
iret
push
push
mov
scas
inc
cwtl
inc
pop
or
adc
xchg
inc
ja
test
pop
cmp
and
arpl
push
pop
sbb
push
movsb
add
adc
inc
xchg
nop
movsb
aam
dec
cs
shll
scas
sub
add
test
lods
adc
lret
adc
inc
pusha
nop
push
mov
push
dec
adc
mov
bound
popw
and
mov
mov
bswap
rclb
mov
dec
in
xor
sub
jo
jne
lahf
jne
cmc
cmpsl
out
jmp
push
je
and
push
dec
outsl
inc
pop
dec
jg
lock
cwtl
and
loopne
div
pop
xor
jl
shrb
jns
add
adc
ficompl
mov
inc
inc
imul
ss
fwait
xor
sub
mov
mov
jl
adc
xchg
dec
and
lcall
jmp
push
jge
testb
outsl
jae
hlt
mov
and
or
nop
push
aam
adc
xlat
stc
mov
les
adc
or
into
sahf
xchg
or
or
inc
xor
call
or
add
mov
insb
sbb
lods
push
sbb
jo
xor
sbb
xchg
aam
inc
push
xchg
pop
xchg
dec
ret
je
mov
sub
push
in
and
cmp
filds
jmp
and
pusha
mov
pop
nop
or
cmp
cs
push
xchg
lahf
je
mov
adc
ds
sbb
add
fists
cmp
lods
mov
pushf
pop
or
mov
mov
cmp
or
std
rcrb
movsl
add
adc
das
or
mov
sbb
sub
andb
add
sbb
jp
dec
jne
cmp
cmp
jge
jae
add
inc
int
lret
addr16
loopne
push
cs
pop
daa
and
and
pop
mov
xlat
mov
int
sti
adc
or
adc
add
rorb
adc
sub
sub
adc
sbb
jnp
mov
inc
add
mov
xchg
out
push
cltd
mov
xor
ja
testb
sbb
adc
add
add
sbb
or
adc
push
sub
and
inc
repnz
xor
push
pop
mov
add
xor
dec
push
sbb
xor
adc
pop
mov
lahf
dec
cld
rcll
xor
pusha
adc
inc
inc
xor
xor
scas
mov
add
rcrl
jg
mov
mov
inc
sarl
icebp
pop
inc
or
ja
lret
imul
add
or
sahf
push
sub
pop
inc
add
and
pop
out
add
and
push
inc
sub
dec
sbb
adc
sub
nop
inc
xchg
loopne
sub
cmpsl
add
dec
arpl
jg
add
xor
inc
ss
lcall
movsb
sahf
sub
mov
inc
mov
xor
cmp
sub
paddd
andl
inc
sub
mov
inc
mov
mov
mov
or
push
inc
add
pop
aad
int3
and
or
add
cmpsb
add
rcl
and
dec
sub
add
xchg
inc
dec
push
addr16
sbb
push
xlat
sub
pop
sbb
out
xlat
ret
sub
cmpsl
cltd
je
gs
adcb
mov
inc
ss
jg
out
js
inc
shlb
test
jp
rcrb
sub
sub
sub
add
call
add
adc
insl
pop
pop
adc
rcrl
fcmove
xor
sbb
shl
inc
add
or
pop
test
fwait
inc
dec
repz
mov
mov
push
cmp
setne
sbb
cmp
adc
mov
test
jns
fadds
aad
js
sbb
bswap
popa
pushl
xor
pop
hlt
neg
jmp
arpl
mov
adc
mov
cli
xchg
push
test
and
popa
dec
insl
loope
iret
repnz
inc
clc
movsl
sub
aad
lods
pop
stos
inc
pop
add
mov
push
les
dec
insl
mov
cmp
pushf
shl
push
mov
push
outsl
insl
xchg
out
mov
cmp
mov
rorb
dec
xchg
pop
mov
in
lock
push
jp
fisubs
fistpll
dec
insb
pop
pop
push
cmpsb
adc
movsl
add
bound
sahf
cmp
lea
xor
inc
mov
xchg
mov
or
cmp
adcb
push
cmpb
adc
jmp
inc
inc
or
test
cmp
pop
imul
inc
test
or
les
sub
mov
cmpl
bswap
jp
and
pop
out
xlat
inc
adc
sub
mov
sub
mov
and
add
adc
and
pop
xorl
gs
iret
pop
or
dec
mov
ss
jmp
and
push
inc
jg
inc
mov
out
add
add
cmp
xor
mov
flds
cltd
daa
xchg
sub
fsubrs
aaa
add
and
dec
inc
xor
xchg
out
dec
loop
mov
jle
push
dec
mov
dec
out
fs
sahf
push
push
and
sbb
push
jno
mov
pop
movsl
adc
icebp
adc
out
fdivrs
push
and
cmp
sbb
push
add
sbb
adc
insb
add
inc
clc
movb
rorb
mov
fs
push
adc
dec
sub
or
or
es
pop
dec
inc
mov
sub
sub
and
lret
mov
aaa
pushf
adcl
add
push
push
test
pop
jmp
sub
or
rclb
daa
xchg
daa
adc
dec
pop
inc
push
pop
das
lock
adc
adc
pop
enter
sbb
mov
xor
pop
aad
mov
add
push
adcl
in
cmp
in
sbb
outsb
je
sbb
lock
and
ja
sub
xchg
xor
push
xor
xor
push
outsl
cmp
fists
dec
das
mov
mov
cltd
clc
add
roll
imul
movb
arpl
add
cmp
ficoms
xchg
lds
mov
add
lea
lock
mov
insl
imul
pop
je
mov
dec
and
dec
in
jge
sub
xor
xchg
enter
cmp
cwtl
dec
enter
xor
sub
add
or
add
xlat
ret
pop
mov
lea
push
mov
cltd
popl
test
in
adcb
and
push
mov
mov
inc
pop
mov
clc
sbb
test
jae
daa
ret
inc
loop
mov
pop
and
xchg
adc
xchg
ljmp
fwait
push
out
sarb
xchg
or
notb
fisttpl
or
adc
and
and
out
xchg
int
out
add
adc
xchg
sbb
pop
in
nop
stos
add
mov
mov
adcb
fdivs
outsl
xchg
sbb
add
adc
adc
addr16
clc
movsb
cmp
es
sub
test
int
pop
inc
ds
sub
lds
or
inc
jb
and
push
adc
aas
dec
push
addr16
xchg
andl
dec
xchg
test
iret
jmp
and
push
lds
mov
or
movsb
hlt
add
push
adc
xchg
mov
mov
inc
inc
sub
enter
data16
lock
and
add
jl
inc
mov
out
aaa
mov
jge
data16
inc
cmp
sub
sub
lea
pop
mov
mov
aaa
inc
repz
insb
add
push
jmp
ss
pop
int3
push
add
nop
or
jns
and
inc
cmpl
lock
adc
adc
out
mov
rcll
adc
and
xchg
pop
je
mov
inc
push
xchg
nopl
rsm
xchg
mov
loopne
or
nop
inc
add
pop
or
pop
xchg
fstps
or
outsl
pop
movsb
jg
sbb
test
test
push
inc
and
inc
movb
xchg
xchg
and
mov
shlb
inc
push
xchg
test
pop
dec
outsl
or
mov
cltd
or
dec
lcall
adc
xchg
inc
sbb
mov
outsl
or
dec
or
add
lea
cld
push
rcl
adc
push
mov
fidivl
and
or
add
or
nop
inc
push
xor
mov
sub
and
and
out
repz
jns
adc
push
push
lea
lock
pop
mov
aaa
push
sti
adc
sub
pusha
inc
addl
outsl
or
lds
sbb
out
sbb
ja
fiadds
pop
mov
push
test
ficoms
dec
ja
mov
test
or
sbb
sbb
xchg
mov
test
xchg
or
rorb
test
push
mov
inc
in
pop
dec
jns
jge
add
mov
ss
adc
rclb
jmp
fstpl
rcll
adc
mov
aas
or
cmp
not
dec
inc
das
add
and
aam
adc
aad
adc
incl
push
add
inc
mov
incl
add
push
clc
ljmp
xlat
jb
pop
dec
add
out
or
shrb
mov
sub
in
add
inc
mov
mov
dec
sarl
or
add
push
and
fisubrs
mov
ds
test
inc
es
cld
fadd
inc
or
nop
nop
add
icebp
xchg
sub
xor
mov
mov
or
leave
repz
cmp
cmpsl
call
fisubrl
or
sub
mov
lea
push
add
mov
sub
imul
xchg
mov
pop
xor
xor
or
and
cltd
cmp
fcmovbe
sub
adc
popf
es
cmpsb
outsl
or
or
popf
adc
mov
les
loopne
xchg
and
or
movsb
add
in
sbb
push
in
dec
add
sbb
or
popa
jne
popl
inc
adc
pusha
jl
adc
sbb
lods
or
mov
in
shrb
shr
push
cmp
inc
test
add
daa
or
pop
xchg
jbe
mov
orl
sbb
in
inc
lret
and
xchg
bound
xor
icebp
push
dec
clc
loopne
cmpl
adc
mov
inc
jecxz
mov
sbb
jg
sub
cmp
test
aad
pusha
adc
dec
or
lock
fwait
xchg
xchg
ljmp
mov
ficomps
xor
orl
pop
sbb
adc
divl
dec
stc
mov
inc
xchg
mov
syscall
dec
sub
sub
sub
xor
inc
or
inc
loopne
inc
call
pop
push
xor
lret
daa
es
pusha
cmp
sub
incl
adc
and
mov
pop
xchg
sbb
cmc
add
add
in
lods
jecxz
mov
push
rcll
fwait
neg
sbb
xor
call
out
mov
mov
popa
and
je
loopne
pop
js
add
aad
inc
das
outsb
orb
xchg
mov
cmc
rorb
xchg
lcall
sub
xor
xchg
xor
test
xlat
cmp
cmp
jbe
add
cmpsl
jmp
movsb
pop
sbb
pop
ss
push
push
dec
repnz
test
dec
pop
cs
test
into
adc
jbe
cmp
push
adc
xchg
jl
jle
dec
repz
hlt
add
xchg
push
iret
cmp
fiaddl
and
test
popa
jb
jb
dec
pop
bound
push
or
and
lea
add
mov
in
xor
sub
cmpnltps
nop
inc
aas
sub
lea
cmp
fildl
cmpl
inc
sub
adc
jnp
test
adc
and
jle
jne
aad
sar
ss
add
sbb
adc
xchg
mull
vmovd
sahf
pshufw
pusha
adc
sbb
add
xchg
sbb
add
dec
inc
and
push
or
lds
imul
subl
pop
jo
dec
jmp
adc
pushf
push
xchg
adc
add
sub
add
movsb
jo
arpl
ret
sbb
outsl
dec
push
pop
test
xchg
repnz
pop
sub
or
mov
outsl
movsb
mov
xchg
fdivrl
and
sub
add
and
push
mov
in
int3
adc
pop
enter
or
push
pop
and
push
push
loope
cmpsb
nop
adcb
xchg
ljmp
fildl
adc
xor
nop
cwtl
aas
and
xor
ret
xchg
and
cmp
gs
push
addl
xchg
loopne
pushl
ret
imul
jns
int3
add
cmp
xor
das
add
leave
shlb
std
adc
test
outsl
imul
adc
das
push
xor
adc
leave
sbb
pusha
test
xchg
aad
inc
iret
in
test
cwtl
jo
bound
lods
ds
and
ss
cmp
dec
fdivrs
or
adc
scas
lahf
jne
inc
mov
cwtl
mov
add
inc
lcall
fadds
and
xor
push
inc
mov
mov
pop
test
fld
fnstsw
cmpb
dec
xchg
test
cmp
cld
sbb
imul
scas
pop
pop
pop
sub
out
jge
cltd
sbbl
nop
mov
adc
adcl
xchg
dec
aam
outsl
mov
ja
ss
sub
stos
adcl
jo
scas
xchg
xchg
add
or
data16
mov
insb
pop
mov
mov
aas
lods
dec
xor
enter
xor
das
sub
push
cmpl
lahf
xor
cmp
sub
or
rcll
mov
add
push
mov
inc
mov
xchg
jo
dec
mov
inc
adc
mov
roll
ss
xor
cmpsl
push
xor
add
sarb
mov
aad
in
sbb
jne
cmp
dec
adc
inc
addr16
ret
sbb
sub
xor
aam
sub
jle
xor
pop
fsubl
test
mov
and
sbb
xchg
sub
dec
jmp
and
sbb
mov
cmp
xlat
dec
in
ret
add
int3
add
adcl
pusha
push
or
mov
adc
jbe
dec
insb
rclb
mov
gs
mov
test
testb
insb
mov
dec
les
and
and
orb
adc
pop
into
cmp
test
sub
push
xlat
sub
xchg
push
jno
repnz
popf
xor
prefetchnta
mov
nop
or
test
pop
arpl
add
sub
xor
dec
xchg
sub
insb
jmp
loop
mov
add
sub
pop
sub
and
and
xchg
pop
pop
add
pop
or
inc
jg
pop
or
in
ret
jb
outsl
mov
push
dec
or
popa
test
dec
jb
ljmp
iret
outsb
dec
je
daa
cmpb
std
out
add
pop
jne
sbb
xchg
dec
adc
inc
dec
lock
mov
pop
pop
push
mov
test
in
cmp
nop
jne
insb
inc
xor
adc
pop
js
repnz
fildl
mov
loopne
enter
mov
stc
bound
sub
pop
inc
cld
pop
inc
jge
shl
push
sbb
cwtl
mov
adc
xlat
bound
cld
dec
sbb
inc
inc
andb
imul
sub
or
jmp
out
or
pop
shlb
push
cmp
or
jmp
or
adc
xchg
hlt
inc
push
in
push
inc
fisubs
and
out
xchg
xchg
or
hlt
in
in
adc
cmc
out
fs
sub
hlt
clc
push
popa
cwtl
and
push
and
mov
nop
add
mov
lret
lock
rcr
outsl
pop
sub
dec
pop
lock
sub
adc
xor
push
lock
lods
or
add
dec
or
mov
pop
adc
movl
mov
in
in
mov
mov
and
in
mov
or
cmp
or
dec
add
lahf
mov
clc
adc
adc
sbb
and
mov
in
or
in
push
flds
add
out
mov
sub
jecxz
movsb
mov
in
cmp
or
jbe
lock
nop
add
dec
sub
sub
cs
sahf
lret
sub
movsb
xchg
jne
rorb
pop
xchg
enter
clc
xchg
adc
sbb
dec
mov
push
push
xchg
add
test
cmpsb
leave
popf
ds
in
dec
movsb
lea
roll
test
inc
stos
sbb
lea
add
dec
jp
dec
dec
or
cmp
test
dec
ret
inc
push
xchg
sbb
call
adc
aas
adc
xchg
dec
mov
xor
sbb
out
inc
or
neg
xchg
movsb
testl
in
xor
testb
lret
insl
movsl
adc
jb
loopne
sti
in
icebp
xchg
push
add
add
aad
push
inc
mov
iret
push
std
fcom
adc
icebp
push
push
push
push
add
insb
push
popa
or
sahf
int3
daa
pop
test
cmp
push
or
mov
and
adc
or
mov
pop
dec
les
pop
dec
adc
pop
ja
movsb
or
das
mov
cmc
outsb
and
ss
movl
and
shr
pop
cmpb
adc
push
mov
jne
clc
push
cld
rcrb
ds
sbb
xor
hlt
pop
dec
loopne
dec
inc
nop
mov
sarb
mov
loope
xor
dec
dec
cmp
cli
mov
mov
rcrl
das
lods
testb
xor
adc
aad
pop
jnp
xor
mov
adc
adc
cmp
xor
and
cmp
movsb
xorb
arpl
mov
repnz
jmp
sbb
movb
enter
stos
cwtl
cmpsl
rclb
movsl
and
sub
mov
or
leave
cmp
jno,pn
and
dec
xchg
cmp
add
popa
in
inc
mov
xor
sbb
and
sbb
addr16
and
pop
adc
fcom
rol
xlat
or
lods
addl
rcl
xor
adc
ret
test
push
data16
xchg
or
fcompl
add
pop
add
pop
adc
rolb
pop
sub
fldt
clc
and
pop
test
mov
loope
out
mov
push
mov
mov
bound
and
por
inc
lret
loope
cs
scas
push
jno
into
adc
es
pop
setg
sub
cmpsb
push
mov
add
call
jno
fiadds
jb
icebp
push
subb
ror
arpl
push
movsl
mov
arpl
mov
jne
mov
push
inc
mov
cmp
mov
pop
adc
sahf
data16
inc
fisubrs
aas
and
psubusb
xlat
lcall
js
push
and
dec
xchg
fcmovnb
xchg
fstl
mov
mov
mov
testb
iret
cld
inc
xor
cmp
mov
test
xlat
or
add
jo
xchg
nop
inc
push
arpl
push
push
lods
jo
cld
popa
jno
dec
jle
dec
in
add
cmp
je
and
xor
and
cmp
jecxz
shr
lock
sbb
paddb
hlt
mov
ret
jmp
sub
mov
add
adc
adc
out
mov
adc
mov
adc
sub
dec
or
pop
or
test
pop
lods
dec
repnz
add
testb
sbb
push
sbb
add
jnp
push
fadds
into
cmp
imul
test
cs
add
cmp
arpl
add
fs
add
pushf
shll
movsl
pop
and
cmpsl
pop
test
and
push
or
adc
pop
loope
outsb
movsb
test
mov
scas
xor
mov
enter
rcrb
ss
xchg
xor
push
je
inc
adc
dec
fadds
orb
and
pop
movd
push
mov
cmp
sub
or
sub
scas
pusha
and
jnp
and
push
jno
insb
sub
mov
jo
daa
cmp
std
add
mov
insb
xor
sbb
inc
jmp
icebp
popa
loop
xchg
jmp
gs
mov
sub
mov
pop
and
or
pop
popf
out
sbb
nop
mov
shlb
scas
xor
lods
pop
lret
shlb
xor
pop
cmpb
pop
and
xor
filds
xchg
sbb
inc
fisubrs
movsb
inc
ja
add
outsl
in
js
and
out
push
in
push
cmp
cmpsb
ljmp
cmpsb
cmp
fistpll
fs
inc
add
movsl
add
sub
cmp
cmp
ficoms
imul
sbb
sbbl
or
pusha
mov
sub
cmc
add
jp
xor
dec
loope
fisttpll
xchg
cmp
lds
pop
add
push
cmp
and
add
and
test
outsb
lods
ja
pop
push
cmp
sti
rol
addl
fisubrl
sbb
push
sub
push
xlat
xorb
addl
pop
subl
and
subl
mov
pop
add
xchg
cld
or
pop
sarl
dec
adc
or
mov
adc
adc
add
ret
pop
pop
cmp
add
inc
ret
cmp
gs
adc
sub
pop
notb
loopne
adc
cld
jne
cmpl
push
call
sbb
cld
mov
adc
or
mov
adc
aaa
mov
sub
test
mov
clc
xor
sbb
jp
mov
mov
pushl
jmp
add
movsb
xchg
mov
dec
testl
fisubl
inc
imul
sbb
push
rcrb
mov
rclb
negb
cmp
adc
and
or
jmp
mov
xor
ja
data16
xor
add
hlt
xchg
inc
fildll
inc
add
inc
fisubs
inc
sbbb
cmc
fdivs
sub
add
mov
xchg
add
xchg
dec
push
or
cmpsb
sub
xor
sbb
and
add
pusha
and
sub
add
cmp
sub
ret
push
adc
mov
rclb
sbb
popf
ss
lret
aas
add
push
or
out
loop
add
sbb
jecxz
push
sub
or
sub
xlat
jno
scas
rcrb
pushf
sarb
movsb
mov
mov
test
add
jecxz
or
repz
jl
cmc
outsb
pop
jns
incl
xchg
lods
popa
sub
repnz
insl
dec
push
es
fmuls
sbb
adc
or
sub
mov
push
lret
sbb
push
xor
adc
push
js
imul
cld
in
sub
je
lods
cltd
pop
jo
xor
shr
cmp
test
jmp
dec
inc
dec
push
mov
jb
dec
call
adc
push
mov
lods
adc
int
movsl
adcl
mov
daa
lea
subb
mov
adc
fdivl
loopne
push
xchg
gs
fiadds
or
adc
adc
pop
xchg
gs
sbb
add
and
xchg
es
push
push
imul
add
orb
mov
mov
adc
clc
jle
andl
popf
arpl
loop
fdiv
out
push
subb
shrb
fldenv
iret
adc
test
push
mov
mov
push
pop
mov
ds
adc
cmp
mov
inc
or
lahf
sub
push
hlt
int3
ret
inc
pop
xor
stos
sbb
mov
loope
jo
inc
cmp
mov
ss
push
adc
aas
xor
inc
into
or
sub
sub
sub
mov
sbb
or
shlb
pop
adc
or
inc
jg
pop
enter
sbb
in
jns
dec
es
mov
jbe
or
fstpt
ja
mov
cs
cs
mov
and
pop
xchg
xor
das
push
push
sar
add
add
loop
jge
cwtl
push
in
dec
clc
adc
xchg
js
or
js
dec
popf
test
push
nop
cmpsb
sbb
hlt
adc
inc
test
insb
sub
dec
and
jmp
and
adc
jg
inc
aam
leave
aam
push
or
sbb
stos
push
xor
enter
js
push
insl
daa
loopne
pop
adc
xor
push
lods
push
lret
ss
cmp
lds
cmp
data16
sarb
add
nop
bound
mov
mov
mov
test
dec
adc
int3
subb
sbb
mov
mov
xor
dec
push
insb
sub
cmp
es
pop
xchg
jne
fs
and
and
movsl
xchg
fdivrs
add
inc
aad
jo
pop
aas
xchg
fcomp
scas
adc
jb
sbb
mov
cmp
and
push
mov
and
pop
and
mov
push
nop
and
es
rcr
add
and
sbb
and
add
or
xchg
adc
outsl
sbb
aaa
cmpl
xchg
les
inc
sub
mov
ror
push
fnstsw
push
add
push
add
sbb
cmpsb
mov
push
and
imul
dec
rcrl
mov
and
sbb
mov
adc
jo
fcoms
and
mov
lea
dec
inc
cmpl
iret
je
cmp
je
ja
addr16
sbb
jecxz
dec
xor
xor
sbb
loop
gs
cmp
mov
mov
inc
hlt
xchg
dec
add
icebp
je
subl
or
call
or
sbb
sub
rol
push
lea
jo
mov
push
xchg
push
mov
adc
shlb
add
mov
and
movsb
or
mov
fcompl
xor
sti
cmpsl
pop
xor
cmp
inc
cmp
cmp
js
sub
mov
adc
lods
dec
inc
popa
push
dec
je
jg
xor
dec
or
iret
add
adc
sarl
sub
cmpsb
add
fs
dec
mov
mov
negl
push
adc
sbb
lods
fcomip
test
pop
push
add
in
jbe
push
or
mov
sub
insb
push
cmp
or
ret
adc
aad
jne
mov
dec
fucomp
or
jns
int
inc
pop
sub
add
jmp
push
xchg
lock
xor
cmp
inc
lds
inc
hlt
and
decb
pop
shll
das
adc
andl
inc
pop
inc
and
or
xchg
pop
movl
popa
lods
or
pop
inc
addr16
shll
pop
repz
je
shlb
fbld
stos
and
add
test
or
sub
cld
les
push
xchg
fwait
add
lds
icebp
pop
inc
cmp
es
and
push
xchg
lock
bound
rcrb
and
xor
jmp
dec
add
pop
outsl
mov
add
push
mov
das
adc
int
nop
jbe
arpl
mov
nop
addr16
dec
adc
add
sub
inc
enter
add
push
sbbl
lds
mov
rolb
xchg
ficoms
pop
stos
inc
pushf
bound
enter
inc
dec
maxps
sbb
xor
je
in
xchg
add
mov
jl
xor
add
test
ret
sub
mov
add
add
in
pop
fidivrl
frndint
inc
adc
mov
dec
roll
mov
add
pop
in
out
and
or
add
pop
mov
cmp
jns
sbb
sbb
pop
or
pop
decl
jp
call
or
lock
sub
loope
add
fldl
int
loope
inc
inc
in
mov
xchg
add
pop
sub
and
mov
repnz
mov
rcrb
aad
jns
sub
add
inc
addr16
xchg
stos
jo
lahf
add
test
sbb
scas
push
push
mov
dec
cmp
push
sbb
cmpsb
xchg
fbstp
pop
loopne
inc
test
nop
fdivs
push
or
mov
adc
or
push
xchg
push
or
nop
jp
ds
or
insl
dec
or
or
sub
cwtl
mov
movsl
pop
xor
shll
add
cmc
outsb
ljmp
loopne
fadds
mov
inc
daa
push
adc
or
jno
or
jmp
adc
mov
xor
or
test
jmp
pop
sbb
mov
iret
movb
cltd
mov
xchg
jl
mov
jmp
fs
flds
cmp
int3
ret
jno
ljmp
pop
pop
xor
adc
cmp
into
xor
aaa
cmp
push
ret
stos
pusha
pusha
in
cld
adc
or
mov
xchg
pop
ret
daa
mov
mov
leave
neg
add
and
addl
rolb
out
sub
jno
sbb
pusha
push
insb
adc
cmp
inc
loope
dec
lods
push
add
push
orb
add
push
add
ficoms
cmp
mov
movb
je
push
out
add
outsl
adc
xchg
xchg
push
pop
pop
push
pop
cmp
hlt
push
int3
dec
popa
repnz
outsl
cwtl
or
fisttpll
dec
inc
stos
dec
out
add
mov
leave
xor
sub
idivl
lods
sbb
fnstsw
sbb
inc
or
jb
rclb
add
sub
pop
pop
fidivl
int3
and
cltd
test
dec
push
testb
outsb
cmpsl
jne
enter
in
movsb
test
mov
dec
push
and
mov
in
jmp
push
pop
sub
in
jmp
add
lock
jle
dec
imul
mov
adc
sub
popl
inc
je
sbb
les
fidivrs
adc
mov
pop
jb
repnz
or
inc
and
jp
jns
and
sbb
insl
shr
mov
adc
or
clc
push
jne
add
sub
or
int3
jge
sub
mov
scas
fsubl
les
popa
push
incl
pop
mov
xor
inc
or
push
adc
mov
mov
orb
mov
and
fmull
add
mov
aas
loopne
lock
xchg
lret
les
hlt
and
fdivs
inc
dec
lods
xlat
movsb
add
imul
xchg
mov
or
sub
jmp
jl
dec
or
adc
imul
jbe
xor
addr16
jl
sub
mov
shll
xor
pop
shl
fidivrl
daa
mov
adc
mov
sub
push
pop
mov
in
sarb
pop
xchg
sub
lock
test
sbb
shrb
in
repz
mov
sbb
jg
cmp
add
adc
int
xchg
add
mov
daa
push
loope
push
pushf
and
cmp
test
sbb
enter
pop
push
int
add
mov
jne
pop
xlat
aam
or
sub
dec
sar
cltd
roll
aaa
rcrb
cmp
int
lea
mov
imul
or
inc
mov
dec
lea
rcrb
bound
inc
dec
test
adcb
cmp
mov
inc
cmp
pop
mov
push
xchg
or
cltd
jp
push
jo
jmp
jne
xchg
cmp
loopne
pushf
fiaddl
adc
pop
inc
inc
pop
push
loopne
orl
mov
cmp
inc
popf
inc
add
addl
adc
mov
ss
in
loopne
sbb
push
mov
push
into
test
fsubl
mov
les
xchg
push
mov
es
rcrb
inc
popa
addl
add
out
xchg
fidivl
in
ss
add
nop
or
rep
in
or
jno
mov
or
xor
pop
push
lea
push
insb
popf
jmp
icebp
or
and
adc
xorb
cwtl
push
push
cmp
jmp
jns
rcl
das
mov
aam
sbb
sub
or
cmpb
xchg
cwtl
sub
xchg
dec
les
stos
mov
cvtpi2ps
test
cmpl
xchg
sub
lret
bound
and
inc
add
mov
jle
pop
cmpsb
loope
xchg
inc
push
push
sub
insb
inc
fiadds
push
cld
data16
or
and
pop
stos
outsb
dec
outsl
sub
pop
add
cmp
mov
ja
insl
jb
mov
rorb
cmp
jmp
or
push
aam
mov
hlt
imul
test
jmp
fmull
in
lahf
inc
jmp
sbb
jne
inc
add
and
xchg
mov
divl
fiadds
or
sbb
je
data16
repnz
adc
aad
lcall
pushf
out
push
lock
test
mov
adc
mov
push
jmp
push
por
cmp
insl
adc
sbb
or
xchg
inc
flds
aas
sbb
ret
sbb
and
add
push
or
pusha
push
mov
and
fsubs
inc
mov
inc
push
inc
in
jmp
mov
add
loopne
cmp
loopne
xor
pop
add
je
pusha
add
push
and
mov
imul
sbb
or
add
add
pusha
call
or
rolb
sti
jge
js
xorl
mov
add
xor
or
adc
rorl
cmp
cmp
lcall
repnz
push
mov
xor
popf
add
xchg
push
lods
mov
adc
addr16
stos
or
jmp
pushf
push
fdivs
dec
or
pop
int3
push
push
es
mov
push
pusha
xorb
test
lcall
sysenter
xor
std
or
adc
push
sbb
fildl
lcall
cmp
dec
rorb
out
push
inc
mov
inc
add
test
cmp
pop
das
sarb
lret
test
push
xor
ret
pushf
addb
mov
pop
mov
xor
popf
mov
sbb
adc
push
stos
inc
pushf
add
xchg
daa
push
popf
insl
pop
adc
and
xchg
inc
add
scas
add
shrb
or
faddl
push
xor
or
decl
mov
xor
xor
mov
shll
dec
adc
adc
fistpl
loope
fistl
mov
mov
push
xchg
test
movsl
xchg
or
push
inc
cld
movsb
xchg
mov
loop
das
jne
xchg
xchg
or
repz
ret
lcall
insl
add
dec
add
push
pop
mov
xchg
adc
test
in
loop
incl
mov
cs
enter
xor
in
mov
sbb
push
test
or
pop
dec
push
and
dec
scas
jle
cmp
jle
sbb
add
cmp
cmp
push
jmp
add
dec
fcmovnb
add
add
or
in
ret
jp
sub
sub
imul
xor
dec
push
push
pushf
add
stos
pop
push
push
out
and
jg
add
daa
xchg
or
mov
or
push
push
sbb
inc
adc
pop
cmpsb
add
dec
cmp
or
or
mov
call
adc
dec
adc
add
cli
or
pop
inc
xlat
mov
fs
mov
stos
lret
test
loopne
sub
dec
fnstcw
testl
adc
data16
test
call
xor
add
lock
aas
cmp
xlat
jmp
jmp
and
test
push
mov
or
jle
cmp
in
adc
ret
daa
loope
dec
mov
in
mov
dec
call
call
cmpsl
ret
aas
je
fwait
idivl
push
icebp
mov
pop
adc
dec
mov
loopne
xor
mov
sub
cmpsb
xor
roll
push
xor
movsb
cmpsl
ja
sbb
xor
stos
aas
jo
ret
test
outsb
lds
arpl
push
test
pop
push
cld
aaa
xchg
inc
rolb
daa
rcl
nop
rcll
cltd
sbb
dec
rcr
les
xchg
mov
cmp
rcrb
pop
ret
pushf
inc
and
push
fwait
sbb
xchg
hlt
es
fs
mov
xor
mov
out
add
add
add
adc
rcrl
int3
push
inc
mov
inc
xchg
ss
dec
pop
fsubr
or
adc
xchg
mov
sbb
or
pop
and
mov
pop
sub
cmpsb
inc
das
jge
je
xorl
push
inc
outsb
mov
inc
pop
cltd
add
test
aas
mov
add
ret
or
insb
test
or
ss
inc
adc
xchg
pop
jmp
and
pop
jnp
cmp
sbb
mov
or
jg
add
adc
inc
adc
dec
push
xchg
enter
sub
sub
loop
enter
and
cld
push
repnz
dec
cld
cld
inc
add
cmp
inc
es
cld
nop
inc
ds
pop
leave
xchg
inc
pop
mov
push
aam
test
sarl
testl
call
lds
test
sub
lock
jmp
pop
inc
dec
inc
pop
add
outsb
mov
shrb
pop
mov
addr16
or
lahf
push
aam
cs
fadd
and
xor
ljmp
imul
insl
jb
sub
cmp
xchg
daa
add
gs
sbb
cltd
sub
lds
adc
enter
push
push
pop
push
pop
gs
jl
push
mov
inc
mov
inc
xor
xchg
mov
jle
xchg
lahf
int
mov
mov
popf
mov
mov
test
mov
mov
ljmp
ret
dec
jb
mov
xor
and
add
and
cmpb
inc
pop
mov
addl
jbe
pop
mov
inc
arpl
xchg
adc
xor
sub
arpl
ret
add
nop
imul
dec
push
sub
nop
dec
dec
fists
pop
pop
jle
add
push
add
in
mov
mov
sbb
fstpt
push
shlb
and
lcall
fs
xchg
test
lea
jnp
in
es
jge
dec
das
and
fwait
dec
imul
adc
cmp
push
and
push
adc
lret
aam
adc
cs
push
fnstenv
push
leave
cs
xchg
or
pop
cmpsl
pop
inc
pusha
mov
push
mov
jl
or
jle
xor
test
push
xorb
sti
cmp
or
pop
jbe
pop
inc
test
imul
pushl
out
sahf
jno
and
sub
clc
xchg
clc
or
mov
or
push
adc
jo
push
lock
mov
gs
sub
inc
in
inc
rcrb
adc
pop
jg
push
mov
sbb
and
in
or
std
mov
outsb
xchg
adc
popf
jecxz
rolb
movsb
mov
or
aam
cmp
mov
inc
scas
insb
insl
and
es
lock
xlat
mov
jo
adc
adc
cli
add
cmp
test
sahf
or
push
mov
jne
orb
jo
push
pushf
cltd
subb
dec
orl
scas
testl
dec
cmp
or
add
inc
in
std
movsl
push
sbb
adc
inc
and
add
cmp
cmp
push
out
inc
dec
adc
dec
leave
pushf
inc
addl
lock
negb
mov
inc
sbb
mov
and
movl
std
push
or
and
jae
pop
sbb
push
pop
in
je
adc
inc
mov
push
cmpsl
add
xchg
lcall
sbb
mov
mov
sub
adc
push
push
and
or
cmpsl
mov
cmp
cmp
or
std
mov
jae
inc
add
pop
inc
mov
push
xchg
adc
push
xor
push
cmc
dec
cld
mov
dec
pop
outsl
or
lea
add
cmc
push
daa
pusha
or
adc
sbb
dec
xor
jae
cmpsl
add
adcb
mov
jne
xor
jp
push
dec
jl
jmp
iret
call
xor
jne
jmp
adc
and
cwtl
imul
pop
ljmp
and
cs
inc
fs
inc
dec
and
cmpsb
xor
sbb
xchg
fcoms
ss
and
pop
push
ret
and
pusha
sbb
cmp
hlt
sbb
or
sbb
lret
cli
jmp
gs
xor
outsl
xlat
int
inc
jb
xor
dec
lcall
xorb
mov
push
fsubs
ret
dec
clc
out
dec
inc
pop
jns
dec
sbb
rcll
cmp
cmp
xor
jmp
enter
mov
mov
mov
jmp
mov
push
testb
inc
and
roll
pop
fwait
cmpsb
sbb
testl
nop
jmp
das
pop
enter
shr
adc
xchg
hlt
addb
pop
insb
mov
sbb
mov
sub
add
xchg
push
jl
add
inc
arpl
dec
jae
das
movsb
jne
fistpl
jge
jl
dec
rolb
add
es
js
sarl
sbb
jb
hlt
push
pop
outsb
fdivs
add
test
test
push
dec
outsl
sbb
cs
lock
push
lock
add
cmpsb
cmp
les
or
pop
sbb
xor
push
test
or
push
into
adcl
gs
fisubrl
xor
or
jne
sub
or
cwtl
jl
push
dec
cmp
add
je
cmpsb
xchg
add
insl
add
mov
pop
add
and
cmp
jo
mov
add
inc
and
inc
or
xor
lock
fadds
pop
add
sbb
xor
mov
cwtl
inc
lock
mov
xor
clc
hlt
dec
es
sub
icebp
add
inc
shrl
mov
pop
sub
pop
or
testl
imul
popaw
vpsubsw
in
sahf
push
sbb
mov
or
cmp
jge
shll
inc
mov
rclb
fsubp
pop
cmpsb
dec
mov
mov
je
clc
sbb
adc
cmp
push
xlat
cmp
adc
jne
sub
in
movsb
push
and
lcall
insl
fisttps
lahf
mov
shll
mov
xor
gs
inc
test
sbb
xchg
pop
lea
and
lods
icebp
dec
xlat
inc
cmp
aaa
lock
inc
sub
mov
addr16
mov
inc
add
push
cmp
nop
add
add
lcall
clc
dec
pusha
push
inc
xlat
push
fdivs
lock
outsb
into
sbb
cmp
adc
jns
add
dec
in
cmp
insb
fiaddl
cld
testl
add
imul
xchg
and
in
js
sbb
fisubrl
sub
dec
xorb
or
inc
adc
hlt
mov
push
inc
or
mov
mov
add
mov
lcall
pusha
sub
sub
leave
sarl
sbb
mov
test
or
movsb
mov
adc
xchg
pop
shr
sub
enter
nop
sbb
cmp
sbb
add
loopne
mov
shlb
cmp
add
or
rclb
icebp
push
add
cmp
push
pop
lods
iret
push
dec
jo
xchg
jns
cmp
lcall
notl
movsl
aaa
bound
jne
push
jbe
pop
adc
mov
subb
hlt
shrl
adc
jl
enter
xor
enter
xor
push
push
cmp
je
pop
xlat
pop
xchg
mov
inc
pushf
xorb
push
fsubrl
add
outsb
sub
xchg
loope
imul
push
stc
in
or
or
leave
or
xlat
pop
adc
lea
pop
cmp
dec
outsb
add
mov
xor
ret
sub
sbbl
and
mov
xchg
cmpl
adc
rcll
lea
or
call
push
mov
rcll
mov
add
sbb
test
cli
adc
pop
or
movl
and
inc
js
test
sbbb
or
or
add
cmp
mov
mov
adc
js
es
pop
in
cmp
lret
jle
inc
push
dec
mov
cmp
lret
arpl
les
or
pop
popa
pop
jno
nop
insl
mov
daa
cmp
enter
arpl
inc
sti
xlat
jecxz
add
mov
movsb
jmp
jno
ret
lcall
inc
pop
enter
aam
mov
ret
sub
dec
inc
dec
dec
dec
inc
or
adc
and
cmp
rcrb
rcrb
pop
test
push
or
lods
das
imul
int3
mov
jmp
nop
jmp
cltd
out
movb
or
pop
xchg
popa
jecxz
add
or
inc
inc
lods
shl
pushf
or
movsb
and
cmpsl
xor
cmp
je
icebp
movsb
push
mov
mov
mov
es
test
adc
lock
push
or
add
out
xchg
pushf
push
js
sbb
popa
xchg
daa
or
xor
xorl
roll
fdivp
addb
sbb
add
dec
or
add
mov
xchg
sbb
ret
lods
jbe
ss
add
imul
adcb
jmp
test
pusha
fwait
xor
iret
movsb
adcl
xor
or
sub
nop
xchg
sbb
inc
arpl
push
or
add
mov
add
sub
inc
xchg
pop
testl
mov
loopne
add
cltd
inc
adc
test
fs
fbld
xchg
sbb
jne
repz
jns
push
js
pusha
sbb
movsb
or
inc
ret
into
and
jmp
sbb
add
adc
adc
xchg
je
das
js
loop
lea
or
insb
nop
cs
or
xchg
inc
mov
adc
or
fiaddl
mov
jne
shrb
ljmp
sbb
fcoms
xchg
inc
aam
icebp
xchg
mov
inc
adc
pushf
mov
mov
xchg
clc
add
loopne
das
inc
pop
lock
push
mov
pop
pop
icebp
mov
adc
mov
jp
pop
inc
dec
movsb
add
mov
icebp
aad
add
cmpsb
out
cmp
or
or
push
mov
or
sbb
ljmp
ss
push
ret
pop
xchg
ss
comiss
je
shlb
or
jle
lea
pushf
nop
mov
jne
test
mov
adc
es
adc
mov
pusha
cmp
test
sti
sarb
ljmp
cmp
inc
push
in
sub
fidivl
addr16
or
pusha
xchg
insl
outsl
adc
in
shrl
and
push
dec
js
xchg
and
adc
sub
enter
orb
lahf
inc
mov
sbb
push
jnp
inc
data16
dec
pop
fwait
xchg
add
and
cmpsl
jbe
mov
movsb
test
dec
jg
push
adc
pop
fcoms
mov
sub
stos
clc
cmp
add
sub
daa
inc
ret
mov
cli
or
pop
and
jmp
adc
sarl
sbb
xlat
xchg
lahf
or
sbb
jl
filds
and
add
insb
dec
add
add
sub
mov
clc
mov
add
push
pop
push
mov
jp
mov
sti
mov
sbb
call
lret
enter
subb
nop
lret
jae
sub
test
int
es
push
imul
sub
decb
jb
stc
int3
inc
jns,pt
add
add
add
and
sbb
add
mov
cmp
xor
shl
andb
pop
js
or
mov
icebp
cmpsl
je
mov
and
and
pop
cltd
aaa
mov
cwtl
adc
push
das
xor
hlt
add
sbb
pop
jg
movl
adc
add
lahf
adc
pop
jnp
ret
inc
addr16
ret
les
and
bound
mov
add
insl
sbbl
adc
jg
inc
lea
push
mov
imul
and
mov
mov
sub
fildl
push
inc
movsl
shlb
int
mov
mov
rcrl
popf
inc
xor
xchg
mov
lsl
ja
mov
cmp
fisubs
jno
aas
add
push
pusha
ficomps
push
jns
dec
mov
xchg
out
enter
push
rcrl
inc
mov
push
xor
xor
repz
out
xchg
or
jge
add
pop
push
lods
outsl
lea
test
movsl
mov
jno
or
jp
dec
ja
es
cmc
mov
out
ss
and
sti
es
and
or
mov
aad
pop
add
hlt
shlb
xchg
ljmp
int3
sbb
jae
and
push
cmp
jae
xor
inc
sub
mov
adc
data16
jb
mov
xchg
dec
or
push
and
or
fisttpl
sub
pop
inc
arpl
sti
jbe
ret
add
aad
or
pop
pop
lock
mov
test
outsl
outsl
dec
xchg
inc
lods
faddl
or
shrl
lods
cmp
xor
push
cs
mov
jmp
ss
adc
fildll
arpl
in
mov
and
cmpsb
test
imul
nop
cmp
mov
sbb
jmp
pushf
inc
fcomps
test
sbb
pop
push
jnp
mov
jb
mov
adc
jbe
insb
je
pop
cli
mov
xor
xlat
gs
mov
push
jns
stos
sarl
or
inc
add
test
mov
and
ret
or
les
or
cld
inc
xlat
xchg
dec
adc
je
push
push
and
jae
dec
inc
push
inc
xchg
mov
inc
mov
push
or
push
push
mov
inc
sbb
sbb
stc
pop
enter
test
push
cmp
rcll
and
add
cwtl
add
pusha
add
adc
mov
adc
adc
sbb
cli
push
cwtl
cmp
dec
mov
adcb
or
sub
out
pop
enter
adc
adc
int
sub
cld
mov
push
and
test
pop
and
mov
andb
fistpl
outsb
or
mov
ljmp
jl
and
je
sbb
push
xchg
loopne
cmpsb
jecxz
or
js
xorb
repnz
cmp
xchg
mov
push
movsb
push
or
mov
mov
push
jne
dec
imul
sbb
pusha
insb
pop
inc
cmpb
adc
mov
mov
pop
inc
popa
xor
push
loopne
adc
or
mov
rcr
sbb
mov
mov
sbb
test
fbld
jo
dec
loope
jmp
push
nop
les
mov
sbb
pusha
jmp
push
dec
cwtl
xor
and
fsubrs
push
push
xor
inc
adc
add
mov
pop
js
dec
dec
mov
cmpl
aam
enter
bound
shlb
lahf
mov
ds
daa
int3
mov
push
sbb
mov
lods
or
in
out
adc
lods
roll
sti
inc
pop
xor
push
sbb
daa
xchg
add
add
cmp
push
adc
sub
xor
or
mov
add
pop
fadds
daa
cmp
nop
out
jae
pusha
das
sbb
out
adc
pop
mov
add
outsb
pop
mov
in
or
sbb
cmp
subb
sbb
mov
test
icebp
jmp
pop
and
subl
xor
dec
mov
rolb
push
sub
nop
xchg
mov
adc
and
test
cmp
dec
or
jne
xchg
test
push
jne
mov
mov
mov
sbb
and
lods
es
cwtl
push
mov
into
and
and
cmpsl
fcmovb
adc
cmp
or
sti
shrl
jecxz
aas
dec
test
movsl
clc
inc
pushf
cmp
pushf
sub
jno
stc
mov
into
xchg
jmp
test
andb
pop
loopne
pusha
adc
sbb
pusha
or
addl
inc
add
aam
push
push
cwtl
adc
mov
jecxz
jnp
arpl
xchg
movl
outsl
outsb
push
push
dec
addr16
xor
cmp
xchg
xorb
mov
jne
aam
add
cmp
inc
or
popf
jmp
ss
mov
sub
and
or
fstps
pop
or
lods
fwait
pop
adc
sbb
mov
pushf
hlt
jno
or
addb
inc
loop
xorl
mov
inc
jb
shll
mov
loop
sbb
mov
pop
loope
sar
push
sarl
sbb
sarb
sbb
add
add
pop
cmp
enterw
cmp
rolb
add
lods
or
inc
push
jo
cmp
sti
sbb
inc
xor
cmp
jno
and
mov
lods
inc
dec
pop
test
stos
hlt
in
xor
sbb
push
enter
xchg
clc
clc
les
inc
rolb
les
fnstenv
or
sub
cmpb
lods
adc
inc
stc
leave
and
cld
jbe
sbb
inc
popa
xor
aaa
jno
iret
test
out
sbb
mov
ret
pop
mov
and
ret
add
push
adc
inc
outsl
pusha
or
das
adc
jp
push
add
dec
push
sahf
cmc
stos
pushf
push
sub
pop
outsb
xorps
data16
fdivr
jbe
lods
push
xchg
test
repnz
push
mov
dec
mov
mov
or
ficoms
adc
inc
add
add
sbb
mov
adc
push
fldl
mov
and
test
cmp
roll
or
in
lock
jae
pop
cmp
push
aas
mov
es
mov
insb
push
jge
dec
cmovo
test
dec
repnz
add
movsb
into
pop
call
jg
jbe
cmpsb
cmp
mov
jne,pn
pop
int3
movzwl
push
cmpl
ficoml
ret
inc
fisttpl
push
loop
mov
xchg
test
lahf
dec
fiadds
popa
pop
add
les
sbb
and
and
dec
les
mov
cmp
pop
subb
add
sbb
fadd
and
inc
repz
pop
rcrb
pop
or
inc
mov
and
and
inc
add
mov
sub
add
pop
jns
dec
xlat
mov
and
lock
xchg
fcoml
pop
xchg
inc
fists
pop
mov
or
cmp
aaa
mov
dec
das
or
or
pop
xor
push
cmp
jne
inc
cmpsl
shlb
dec
and
adc
mov
sub
lret
adc
fimuls
pushf
xchg
mov
sub
adc
fwait
daa
mov
or
mov
leave
adcl
or
bound
xchg
add
sti
popl
imul
fs
lcall
popa
or
movsb
test
fldl
or
cltd
test
xchg
add
rcrb
xor
mov
dec
sub
das
pusha
gs
or
mov
subl
sbb
sub
in
cmpsl
sbb
test
sbb
pop
test
and
ds
inc
push
cmpsl
movsl
and
roll
jmp
add
dec
movsb
dec
js
inc
push
dec
pop
dec
rol
insl
bound
cmc
push
add
sbb
cltd
cmp
xor
cmp
cmp
test
int3
js
adc
push
insl
movsl
ja
call
pop
pop
ja
adc
pinsrw
shlb
ret
and
lahf
and
ljmp
inc
mov
or
scas
jnp
cli
mov
pop
jmp
inc
mov
xchg
sbb
cmp
or
jo
and
ror
mov
lock
cmpb
dec
addl
jns
in
and
lahf
mov
mov
out
pop
pop
cmpsb
push
or
mov
cmp
movsl
int3
data16
sub
and
loopne
adc
ljmp
push
mov
adc
nop
les
mov
outsl
aaa
or
jmp
pusha
jne
xchg
maskmovq
testl
jmp
imul
pop
mov
and
add
ficomps
add
xor
js
repz
dec
pop
adc
test
daa
sub
mov
mov
xorb
mov
mov
lcall
call
mov
les
jno
sub
mov
push
cld
and
pushf
jmp
fildl
rcrb
inc
mov
xor
jo
stos
sub
addl
inc
mov
iret
sub
adc
idiv
xlat
lcall
xchg
mov
rorl
inc
push
mov
cmp
pop
repz
mov
push
rorb
pop
ret
xchg
adcb
adcb
or
inc
nop
add
int3
les
xchg
push
xchg
bound
sub
pushf
push
inc
das
push
js
orl
add
inc
jne
andb
inc
arpl
rol
add
sub
inc
dec
test
push
jne
or
mov
repnz
and
popa
add
cli
add
clc
das
jge
mov
sub
inc
jp
hlt
adc
mov
push
out
dec
add
rolb
jno
or
fs
repnz
loop
pop
adc
in
adc
sub
mov
int3
mov
lock
data16
es
inc
call
push
in
pop
faddp
pop
sbb
aas
or
or
mov
push
lds
push
cmp
ret
fdivs
sbb
adc
sbb
dec
push
sar
and
jo
mov
sarb
dec
outsl
enter
push
and
mov
pop
jmp
repz
fmuls
in
pushf
sub
cwtl
arpl
sub
pop
imul
ret
mov
and
lret
test
mov
mov
std
in
adc
movsb
xlat
jno
inc
xchg
dec
add
ja
je
and
fldenv
pop
sub
cmp
pop
and
shl
inc
movsb
push
add
test
out
aaa
hlt
push
fcoml
push
in
es
mov
ret
xlat
adc
and
adc
mov
inc
and
fnstsw
sbb
paddw
mov
mov
in
pop
mov
andb
mov
jge
sub
test
or
daa
add
aas
jmp
sbb
pusha
mov
les
shrb
adc
xchg
or
add
sbb
or
or
iretw
int
out
cmpsb
ss
test
enter
bound
pop
int3
lea
sbb
push
sub
mov
mov
ucomiss
aam
cmpxchg
faddl
and
lea
sub
jecxz
jge
and
jecxz
outsl
fcmovbe
xlat
sbb
jns
loop
int3
xor
jecxz
or
adc
loop
inc
pop
xchg
sbbb
ficoml
adc
push
stc
push
insb
pop
repz
inc
and
cmpl
mov
push
xor
inc
test
popa
insb
ret
inc
pop
dec
movsb
dec
sbb
int3
pop
xor
add
ss
mov
push
adc
enter
push
rcr
and
in
jns
sbb
nop
jmp
sub
inc
push
or
pusha
orb
pop
xchg
jmp
lahf
push
aam
test
cltd
mov
push
add
rcl
push
cmp
cmp
das
mov
and
fiaddl
shlb
pop
mov
jge
pop
xchg
adc
mov
mov
sbb
push
pop
sub
inc
popf
mov
add
adcb
pop
mov
std
outsb
inc
cmp
je
test
aaa
lds
jo
sbb
pop
inc
daa
lods
sub
sbb
test
adcb
fnstcw
inc
sub
insb
ja
push
and
scas
add
fisubrl
xchg
test
fs
pop
daa
add
push
pop
ja
sub
rolb
dec
adc
pop
flds
je
ret
loope
and
sbb
out
jne
aam
sbb
outsl
pop
xor
jae
call
movl
js
ret
mov
or
pushf
or
inc
or
push
mov
sub
add
push
cwtl
mov
clc
test
hlt
test
push
icebp
les
fists
roll
sarl
mov
push
add
dec
dec
aaa
cwtl
push
cmpsb
sub
dec
in
lods
fs
pop
mov
adc
dec
test
enter
psubw
sti
sbb
decb
stc
mov
inc
js
in
add
aam
add
or
inc
and
cmpsl
dec
insb
aam
enter
scas
push
leave
dec
xor
roll
adc
mov
mov
mov
mov
sbb
movsl
push
mov
aam
mov
ret
and
jecxz
popl
lea
sbb
add
mov
jb
cmp
rcrl
inc
outsl
je
pop
dec
gs
mov
popa
insb
pop
add
jp
pusha
lock
add
sub
and
jne
rorb
or
or
shlb
cmpsl
shlb
push
xchg
inc
sbb
movl
or
test
xor
sbb
daa
mov
xor
xor
dec
int
adc
and
mov
in
sbb
sub
push
sub
add
ficoms
cmp
arpl
and
hlt
adc
or
lods
adc
adc
mov
xchg
test
add
lds
jmp
push
jo
or
inc
sahf
push
adc
adc
or
out
es
sahf
mov
jnp
fs
push
fdivs
addr16
out
mov
pushf
outsb
dec
jp
fsub
push
push
jp
sarb
into
lahf
pop
dec
xchg
fs
mov
inc
sahf
push
cwtl
lock
push
fcoml
or
push
mov
adc
xchg
mov
adc
xchg
in
pop
inc
sub
adcb
xchg
mov
ss
add
aad
sarl
mov
insl
sbb
addr16
or
mov
cmp
stos
push
mov
mull
inc
fsts
pop
cs
je
dec
inc
mov
adc
adcb
xor
push
pop
aas
xchg
cs
aam
adc
shll
push
int
je
xorl
inc
je
stc
vmptrld
jmp
je
xchg
stos
ret
ret
frstor
pop
or
sub
pop
fwait
or
test
mov
mov
je
mov
xchg
dec
push
push
mov
aaa
push
ret
fwait
enter
mov
flds
test
mov
mov
or
inc
pop
sbb
push
dec
dec
push
fidivl
ss
iret
dec
cld
loopne
sbb
sbb
add
sbb
add
sbb
cmp
clc
cld
loope
addl
ficoml
inc
jo,pt
pusha
push
addr16
iret
mov
pop
addb
out
out
sbb
xor
xor
dec
nop
mov
cmpsb
into
sub
push
and
mov
xchg
inc
js
inc
xor
rcrb
inc
fs
and
inc
adc
mov
ja
push
adc
xor
jae
movsl
test
fnstenv
xchg
test
in
push
mov
fsubrl
jno
inc
in
insl
mov
cli
ss
in
bound
sbb
and
sbb
pop
cs
mov
cmp
sbb
push
dec
xchg
in
sbb
call
xchg
dec
cltd
inc
mov
mov
xchg
insb
pop
imul
sub
faddl
arpl
adc
and
movsl
mov
sub
ud1
jb
rolb
push
push
xchg
sbb
gs
orl
jle
cmp
jle
xor
test
and
dec
add
xchg
xchg
imul
xor
mov
pop
test
and
dec
js
and
sbbb
jns
jo
cmp
sbb
inc
or
test
dec
jne
push
lea
sbb
and
add
idivb
bound
add
adc
xchg
or
fdivs
inc
call
fs
nop
cwtl
in
push
add
pop
xchg
repnz
cli
or
and
add
jne
iret
rorb
jecxz
or
data16
jae
out
jns
ljmp
and
adc
inc
add
jmp
mov
pop
adc
adc
jp
add
rol
push
mov
out
add
hlt
and
add
xchg
outsb
or
jg
xor
lea
jne
adc
rcl
xor
sbb
mov
pop
mov
stos
adc
test
testl
jle
stc
or
jb
movl
in
aam
jmp
mov
xchg
dec
add
mov
inc
jl
push
mov
cltd
out
push
mov
lea
rolb
mov
lods
inc
and
jns
or
ffree
or
daa
ret
sbb
lods
pop
jnp
xor
es
adc
sbb
movsb
movsb
out
out
and
ret
sahf
pop
pop
gs
iret
clc
stc
mov
dec
mov
dec
test
and
call
sub
add
mov
mov
inc
jne
std
add
dec
pusha
mov
jo
push
and
inc
push
fisubrs
into
dec
add
or
pop
call
mov
mov
jmp
xchg
xlat
jmp
and
lock
cwtl
std
xchg
and
inc
push
adc
clc
add
inc
add
inc
cmp
jne
nop
lods
nop
or
hlt
das
jmp
std
stos
in
push
sub
and
iret
add
divl
and
adcb
lods
adc
lahf
mov
add
jnp
inc
jbe
add
ljmp
add
jmp
pop
sbb
xchg
cld
rol
and
sti
jp
inc
sbb
mov
push
add
jne
adc
pop
sti
inc
imul
sbb
mov
or
inc
pop
cmp
add
dec
xor
and
out
push
cmp
nop
out
int
push
add
or
adc
inc
adc
or
add
enter
mov
dec
mov
stos
cmp
jmp
and
ror
scas
lods
or
or
mov
pop
jmp
push
and
cmp
aas
mov
inc
xor
adc
xor
shlb
add
mov
add
mov
out
bound
xor
scas
incl
or
adc
add
ja
pushl
ss
std
andb
or
pop
pop
or
or
lock
and
fisttps
and
fstpt
mov
mov
inc
imul
mov
lock
pop
inc
xlat
inc
inc
cld
mov
aas
jbe
sub
stc
push
push
push
sti
lods
add
push
or
into
mov
push
push
out
or
enter
sbb
lock
aam
sahf
sbb
jmp
stos
dec
push
and
bound
mov
sbb
movsb
and
pusha
pop
pop
lds
pushl
loopne
sub
and
pop
lock
cmp
icebp
jne
pop
push
jb
fwait
sbb
pop
push
mov
lods
lds
lret
inc
repz
sub
push
fisttpll
push
fildll
inc
fdiv
test
iret
fdivrs
jmp
daa
xchg
daa
daa
mov
lods
rclb
push
dec
fistps
inc
inc
or
pop
dec
pop
push
pop
data16
rclb
aaa
adc
jnp
loop
xchg
mov
ja
sti
das
inc
mov
jnp
call
push
mov
testb
mov
into
aam
inc
or
xlat
inc
cmp
push
data16
mov
push
mov
add
dec
movb
add
out
out
leave
popa
dec
and
adc
out
cmpb
push
mov
or
add
addr16
sti
adc
jl
pop
mov
scas
mov
cmp
adc
inc
and
out
mov
mov
jmp
ss
shr
lock
bound
pop
and
jmp
jmp
cmp
loopne
mov
enter
sbb
or
mov
adc
fisubl
wbinvd
pop
xor
add
xor
push
fnstenv
outsb
outsb
pop
outsb
ja
push
popa
add
xor
arpl
mov
popa
xchg
inc
das
ja
sbb
mov
adc
and
arpl
adc
fisttpl
push
mov
subb
insl
xchg
xor
mov
in
adc
fidivl
cmp
pop
inc
fwait
lods
int3
add
fs
inc
xchg
dec
cmp
rol
lods
inc
subl
out
cwtl
mov
push
add
or
lea
pop
mov
addb
cmc
inc
pop
aam
movsb
sbb
lfs
push
sbb
adc
lcall
push
cltd
add
psrld
mov
call
mov
out
push
test
daa
imul
push
add
and
jnp
cmp
je
inc
sub
aaa
outsb
fstpt
sub
cwtl
in
pop
push
sub
xor
inc
or
mov
pop
pusha
sbb
sbb
enter
xorb
out
daa
sbb
jnp
push
sbb
add
psrlw
jb
inc
adc
insb
aam
cmpb
aas
jnp
jno
imul
adcl
inc
or
push
and
push
push
push
pop
mov
adc
mov
pop
ficoml
ja
push
mov
sbb
push
jmp
sub
jae
aas
aas
or
push
pop
decl
push
inc
push
shll
popf
xchg
adc
sbb
rorb
jmp
pop
add
out
sti
inc
mov
in
call
roll
outsb
sbb
out
xor
inc
sub
inc
xchg
xor
add
pusha
lea
xchg
or
sub
and
incb
imul
pop
dec
dec
adc
push
aas
cld
ficoml
pop
add
cmp
inc
cltd
pop
es
adc
add
cmp
jbe,pt
pop
and
add
mov
sarl
dec
and
xorl
inc
shll
jecxz
jnp
std
popa
jbe
adc
push
and
mov
addl
sbb
testl
repz
incl
adc
pusha
loop
ret
cmp
and
dec
xchg
outsb
fcmovne
dec
loope
mov
or
int3
movsb
ds
aaa
sub
push
filds
dec
or
enter
ja
add
call
in
pop
mov
jbe
lock
lods
add
sub
dec
cmpsl
ds
fnsave
fbstp
test
inc
sbb
jne
movsl
inc
xchg
xchg
leave
push
pop
sbb
sub
or
add
add
loopne
pop
sub
ret
shl
loopne
add
jmp
adc
inc
inc
and
jmp
mov
push
popf
pushf
in
pop
add
xor
in
sbb
sbb
dec
dec
mov
push
js
les
pusha
dec
mov
es
lods
sbb
mov
popf
cmp
js
pop
fidivrs
inc
pop
aaa
and
rolb
in
aad
push
pop
xchg
xchg
dec
scas
xchg
out
xor
fs
out
sbb
add
cs
adc
shl
inc
orl
ret
leave
call
int
mov
cmpsl
dec
pop
daa
bound
push
sub
addr16
cwtl
and
int3
push
iret
add
mov
push
adc
or
in
lret
adc
lock
adc
or
xchg
add
xor
lock
mov
xchg
push
popf
jne
std
xlat
xor
add
mov
sbb
stos
adc
aas
inc
xchg
inc
add
lock
xchg
push
jbe
push
or
or
paddsb
sub
adc
movsb
sbb
adc
dec
xor
fsubl
xor
push
gs
cwtl
cmpsb
imul
aas
loopne
pop
movsl
lret
push
push
rclb
mov
sub
and
cltd
scas
ss
mov
in
dec
icebp
aaa
mov
stc
dec
and
inc
and
pop
pop
imull
jb
push
and
xor
in
push
out
mov
jnp,pt
test
xor
shrl
movsl
scas
cmp
jle
add
xor
jns
inc
xchg
mov
xor
icebp
push
sub
loopne
jo
inc
inc
pop
fmulp
push
cld
jne
inc
int3
repnz
adc
nop
repz
push
sub
cwtl
nop
push
lahf
fstpl
push
mov
fadds
pop
es
inc
arpl
xor
add
rcr
sub
xchg
iret
imul
lock
mov
inc
add
enter
lahf
test
adc
inc
sti
or
pushf
jbe
ja
jle
adcb
nop
and
fildl
inc
js
push
insb
andb
aam
sub
jge
add
xor
add
and
inc
aaa
pusha
ror
xchg
cld
lock
inc
clc
out
xchg
cmp
movl
mov
add
inc
lahf
sbb
jb
and
in
mov
sbb
mov
mov
sbb
xchg
loop
bound
adc
sbb
push
push
enter
fidivrl
xor
sarb
fdivr
push
cmc
hlt
shll
test
outsl
add
lock
insb
sbb
into
int3
loopne
out
mov
inc
jmp
movsb
xchg
jns
xor
mov
mov
xchg
lret
ret
inc
sub
cmpb
testb
subb
push
adc
nop
mov
hlt
mov
sbb
add
inc
sbb
testb
popa
adcb
fisttpll
and
movsb
sahf
lods
popa
mov
outsw
mov
or
or
jecxz
mov
movsb
test
mov
les
dec
shl
loop
je
xchg
and
jo
or
inc
inc
loopne
pop
add
push
leave
sbb
fcmovnbe
int
int
mov
jecxz
sar
clc
xchg
xor
dec
pushf
enter
dec
bound
fdivrl
into
push
add
test
jmp
add
sbb
sbb
sbb
in
ja
xchg
pop
daa
sub
sbbl
leave
jb
xor
loop
or
clc
jo
pop
rsm
sbb
scas
iret
mov
inc
imul
fldenv
mov
sub
cmp
insl
call
shll
ss
loopne
push
loop
cmove
fs
inc
push
xchg
and
rorb
inc
add
fsub
sub
xlat
fcompl
fwait
nop
cli
pop
add
je
mov
xchg
sub
mov
jmp
adc
sahf
cli
xor
ret
pop
dec
sar
sbb
jno
ret
clc
lods
or
inc
nop
cli
dec
mov
roll
and
xor
or
into
sub
inc
sub
add
jb
test
dec
sbb
adc
test
cmp
xchg
add
and
sub
cmp
daa
cmp
pushf
mov
les
dec
push
js
xor
xchg
jmp
push
sub
loopne
add
in
sbb
rcl
icebp
sti
inc
xor
push
sar
pop
mov
xchg
jg
fst
cld
test
and
adc
dec
loopne
rol
testb
jne
jge
fwait
das
ret
pop
scas
das
push
mov
xchg
xchg
push
nop
add
pop
jns
loope
push
and
daa
in
fs
dec
es
or
out
cld
and
lock
repnz
test
in
in
cmp
leave
or
clc
sti
mov
les
cmp
push
test
pop
aas
sbb
add
jae
inc
mov
or
add
sub
addr16
cmpsl
cmpsb
inc
xor
ret
pushl
scas
push
pop
jnp
cmp
in
cli
adc
inc
inc
adc
aad
inc
or
pop
aad
std
sbb
add
pusha
push
push
cmp
mov
mov
pop
or
add
hlt
je
and
xchg
sbb
outsb
sbb
pop
push
or
in
sub
ficoml
sbb
dec
popl
lcall
mov
sbb
or
or
movsb
jl
xor
pusha
and
mov
or
lock
repnz
cwtl
or
test
cmp
xchg
int3
or
incb
loopne
ljmp
cmp
call
add
fdiv
and
es
out
push
and
cmc
sbb
leave
jae
leave
mov
push
xchg
test
jl
flds
sbb
jg
and
dec
notl
and
repnz
jne
sub
and
cmpb
jae
aaa
mov
jmp
repnz
and
add
insl
push
add
xchg
inc
repz
or
adc
push
push
xor
push
sub
bound
add
data16
inc
pop
or
shlb
dec
lock
jmp
push
mov
mov
push
and
sbb
inc
add
sub
xor
or
addl
push
add
add
add
pushl
push
test
push
push
and
mov
fsubl
or
ror
fidivl
inc
js
xor
negl
push
or
pushf
pop
adc
ret
jg
add
mov
test
fisubs
scas
cli
aam
or
pop
push
adc
push
and
dec
dec
or
mov
sbb
int3
xchg
dec
mov
sbb
or
adc
ret
imul
orb
rcl
test
movsb
aaa
lods
jae
add
sub
jle
inc
enter
or
sub
and
test
inc
iret
adc
mov
orps
and
orl
push
addl
sub
push
and
stos
mov
sub
aam
mov
xor
dec
mov
inc
push
lods
pusha
outsl
ret
jb
sub
inc
cmp
stos
int
push
enter
add
add
inc
lods
in
enter
add
imul
movsb
nop
and
das
jmp
push
or
gs
ret
in
inc
mov
in
sbb
mov
xchg
cmp
or
sub
jns
in
cmp
xchg
cwtl
cmp
outsl
insb
gs
sub
in
jb
cmp
push
lods
xor
add
fwait
imul
pusha
mov
outsl
jo
pusha
fsubs
xor
movsb
xor
push
push
ljmp
jns
nop
pop
aas
cmp
shlb
push
inc
push
xorb
xchg
incl
push
or
inc
or
outsl
lea
daa
into
mov
cmp
mov
mov
sub
xchg
sub
and
push
out
cs
sub
mov
or
adc
xchg
inc
mov
jae
and
sbb
xchg
push
mov
nop
hlt
pop
imull
cmpsl
adc
xor
cmpsb
imul
mov
add
sbb
xchg
cld
rolb
inc
add
aaa
je
pop
add
mov
in
push
add
xchg
jo
add
push
or
adc
inc
test
push
sbb
and
in
in
and
sbb
push
mov
sub
lcall
inc
outsb
movsl
mov
lods
push
in
ficomps
daa
pop
push
inc
mov
add
sbb
add
daa
or
sbbl
jb
pop
cmp
push
pusha
add
pop
insb
js
orl
test
outsl
je
enter
sub
push
in
push
and
push
in
in
mov
rorl
or
in
mov
movsb
in
fimuls
mov
pop
in
push
pusha
js
sbb
push
jb
and
inc
push
in
or
in
pushf
sbb
jb
pop
jb
test
movsb
icebp
pushf
mov
xchg
int3
lahf
xorb
roll
adc
int
lret
push
or
mov
lcall
or
insb
int
ss
decb
or
xlat
imul
pop
rcrl
push
fcomip
push
std
imul
imul
insb
lcall
or
xor
dec
shll
cld
nop
dec
shll
rorl
cmp
call
ret
add
sub
sbb
xchg
dec
or
das
sub
push
add
push
ss
mov
imul
dec
lcall
pop
mov
mov
xor
sbb
add
addb
ret
xchg
filds
adc
sub
mov
add
lods
sbb
push
and
inc
pop
adc
jg
pop
leave
sbb
and
hlt
xor
lock
repnz
adc
and
popa
test
and
cwtl
and
lock
inc
sbb
mov
sub
and
and
inc
or
mov
dec
cmp
pop
in
dec
sub
popf
sbb
je
lcall
mov
and
shrb
in
add
insb
xor
add
rcl
adc
sub
add
repnz
or
cmp
mov
ljmp
add
sbb
lcall
xor
push
movsb
sub
mov
and
mov
fs
dec
ficompl
jb
or
sbb
inc
scas
in
lret
xchg
add
and
sarl
push
push
pop
pop
movsb
push
clc
jnp
sub
stos
xchg
xor
fcoms
dec
mov
lcall
add
rcrb
cwtl
test
xor
popl
out
mov
mov
push
sbb
cmpl
imul
out
push
mov
loop
comiss
xor
adc
sbb
mov
inc
dec
xchg
aam
jmp
dec
xor
cmp
adc
int3
adc
add
adc
andl
fwait
sbb
sahf
ret
inc
incl
adc
sub
xor
jle
push
mov
movsb
jnp
outsb
inc
push
clc
sbb
sbb
mov
and
enter
lods
lds
loope
cmp
enter
inc
cmp
into
and
in
xchg
push
mov
add
jge
dec
hlt
xor
xchg
lcall
orb
cmp
jecxz
roll
pop
pusha
dec
add
dec
imul
and
dec
sbb
cmp
xor
clc
insl
or
testb
cmpl
cmpsb
pop
add
add
dec
addb
dec
push
jnp
scas
sbb
jo
arpl
inc
adc
cmp
mov
leave
mov
mov
and
mov
mov
mov
es
and
add
adcl
jno
in
mov
or
push
push
adc
mov
pusha
push
xor
shrb
push
popa
adc
sbb
cmpl
adc
loope
jbe
js
or
xchg
pop
add
sbb
mov
sub
test
inc
adc
mov
push
pop
loope
xor
les
sti
mov
loopne
outsl
and
int
push
or
xchg
mov
arpl
popf
inc
daa
mov
jo
sub
mov
jno
ret
push
mov
bound
mov
mov
adc
push
inc
sbb
call
ss
mov
mov
insl
sub
push
add
xchg
mov
dec
and
and
in
lret
das
inc
xor
dec
xor
adc
jmp
push
push
out
mov
sub
bnd
ficomps
jmp
stos
sbb
scas
xor
dec
or
add
out
insb
push
out
nop
dec
aas
or
std
push
xchg
jbe
add
add
xor
and
push
int
push
push
stos
dec
cmp
nop
shrb
or
stos
jmp
mov
dec
ret
add
mov
or
add
lds
stos
gs
jne
scas
add
fs
dec
jno
outsl
mov
inc
xchg
sbb
add
mov
push
fisttpll
mov
pop
or
subb
xchg
mov
std
cmp
sub
push
stos
add
cld
pop
lock
mov
sbb
and
dec
ficomps
or
aas
jl
mov
add
push
jne
pop
mov
xchg
inc
test
or
and
mov
fstpt
or
test
repnz
adc
xchg
outsb
sbb
or
jno
add
mov
sbb
inc
pop
mov
and
xchg
adc
sbb
in
push
in
jae
and
mov
jne
ffreep
add
fiaddl
incl
push
sbb
jne
loopne
and
cmp
mov
add
mov
scas
mov
iret
jne
add
mov
and
sahf
sub
add
mov
jmp
popf
fistpll
inc
nop
int
mov
cmpsb
lds
add
jb
cmp
push
adc
sub
add
lods
jge
les
mov
or
mov
push
mov
adc
jae
orl
or
outsb
or
mov
mov
xor
inc
mov
enter
push
xchg
pusha
and
mov
sub
sbb
jo
mov
or
movsl
adc
inc
sbb
dec
fmuls
dec
sahf
inc
pusha
movsb
or
loop
inc
and
adc
cmp
sbb
mov
addl
pop
and
fisubs
push
dec
xchg
stos
inc
mov
add
mov
xor
lret
insl
repz
lds
test
daa
jnp
mov
stc
push
dec
xor
mov
sub
out
add
dec
shlb
pop
jns
inc
inc
pop
pop
jno
xor
adc
je
inc
cmp
decb
shlb
jmp
push
cmpl
adc
inc
push
fldl
jb
or
scas
imul
add
sar
ret
pop
mov
ret
pop
sub
aam
faddl
dec
stos
stc
out
mov
push
pop
and
or
fs
test
shlb
cmp
shrl
das
jbe
idivb
cmp
xchg
add
adc
mov
or
or
jmp
push
push
es
inc
or
insl
inc
pop
mov
cmpsb
leavew
cmpsl
inc
bound
nop
sbb
or
jecxz
cmp
sub
dec
addr16
sbb
push
mov
add
inc
xchg
ljmp
daa
cmpsb
push
dec
add
mov
push
mov
mov
inc
dec
js
test
outsb
pop
push
push
xchg
adc
mov
addr16
mov
movsb
aad
insl
adc
jg
andb
mov
rcrb
fs
das
movsb
inc
pop
inc
aad
mov
sbb
mov
and
xlat
mov
dec
aaa
push
mov
mov
fdivl
dec
fcomps
or
cmc
jnp
jb
inc
bound
fnsave
and
arpl
fldl
nop
adc
and
mov
xor
lods
mov
inc
add
push
pusha
ret
and
rol
add
push
mov
mov
sbb
lea
mov
clc
dec
jp
cmp
ja
sbb
lahf
inc
jp
leave
lds
push
call
call
mov
pop
test
scas
and
and
inc
adc
cmpl
imul
je
xchg
inc
sahf
insl
mov
out
ret
or
or
add
xor
data16
mov
scas
mov
sub
subl
insb
or
cltd
or
cli
or
stos
adc
sbb
mov
sbb
jle
push
pop
nop
int
lods
adc
and
sub
adc
jne
add
xchg
dec
out
fsubrp
cmpsb
sbb
dec
je
jmp
scas
add
jmp
rcrb
fidivrl
out
pop
xor
in
xor
add
mov
cmp
jne
xlat
add
repnz
push
push
dec
lea
pusha
rcrb
dec
add
ficoml
add
test
and
xchg
inc
mov
adc
je
bextr
jb
js
js
cmp
hlt
sbb
in
das
sub
adc
adc
cmp
js
lock
add
pop
nop
push
jg
and
add
or
and
int
shl
loope
ja
out
lahf
push
cmp
sbb
insl
cld
pop
and
adc
add
mov
dec
arpl
push
rclb
or
mov
fdivrl
jne
mov
push
or
mov
add
clc
movsb
pop
xchg
xchg
and
mov
test
and
cwtl
cs
stos
xchg
mov
inc
sbb
mov
mov
mov
mov
xor
inc
enter
fsubs
adc
or
pop
pop
addr16
push
in
jmp
mov
fwait
je
adc
out
push
shrb
cmp
inc
cmovnp
xchg
and
in
and
repnz
mov
mov
scas
mov
arpl
sub
nop
and
sbb
inc
push
clc
inc
jns
and
loop
inc
subl
xor
arpl
or
popf
int3
push
jg
fsubs
jg
aam
je
or
pop
mull
dec
inc
inc
imul
adc
xor
xor
fsts
sbb
sub
test
or
mov
inc
or
add
add
inc
incl
adc
pop
loope
insb
sub
mov
ret
mov
das
add
mov
and
sub
loopne
addb
push
push
je
andl
sub
xor
pop
mov
roll
or
and
ja
insb
pop
lods
outsl
xor
lcall
gs
push
lret
or
and
cmp
xchg
mov
add
rolb
adc
ja
add
cs
cmp
mov
and
nop
mov
xchg
nop
pop
push
ds
jle
popf
pop
orb
xor
jmp
imul
mov
pop
or
pop
pop
cmpsb
daa
pop
cmpb
xchg
jns
add
int
pop
dec
add
sbb
iret
jp
add
dec
xor
pop
lods
jo
push
adc
in
mov
out
add
inc
enter
test
inc
ds
daa
inc
dec
cmp
lods
and
lock
dec
sub
mov
adc
sbb
dec
pop
xchg
push
add
mov
mov
push
mov
pop
pusha
and
mov
xchg
cmp
push
xchg
jno
bound
adc
sub
lret
push
inc
pusha
inc
mov
fs
lret
adcb
ret
and
lret
cwtl
nop
lea
dec
pop
jmp
add
inc
adc
js
cs
mov
enter
add
xor
sub
fcmovnbe
mov
pop
adc
dec
xlat
jno
add
adc
inc
add
sbbb
push
mov
jno
push
loope
cmp
or
out
mov
cmp
mov
hlt
xchg
sub
add
pop
sbb
mov
roll
imul
and
adc
jmp
sbb
and
cmpl
mov
xchg
sbb
xchg
cltd
fcompl
clc
sub
out
int3
ds
sbb
pop
repnz
repnz
mov
push
xor
xchg
adc
or
repz
fisttpll
jne
flds
fidivs
ja
mov
add
jae
and
popa
lahf
add
dec
cld
sbb
loope
and
sarb
cmpsl
cli
adc
cwtl
or
pop
xor
int
repz
or
std
cmp
mov
test
subl
sti
out
lret
aad
out
rcrb
cs
iret
sub
fisubl
pop
pop
sar
or
push
xchg
dec
inc
ja
mov
cmp
ja
cmpl
aaa
ss
inc
sub
or
adc
mov
nop
pop
or
mov
adc
adc
loope
adc
sbb
mov
insb
ret
xchg
in
xchg
test
xor
mov
inc
push
test
and
and
test
push
repz
dec
xbegin
inc
mov
fidivs
sbb
push
add
or
push
or
xchg
in
cmp
fs
sub
repz
sbb
out
pushf
cmp
inc
popa
xchg
mov
inc
fwait
popl
mov
inc
cwtl
leave
or
mov
adcl
mov
pop
dec
and
or
dec
inc
sbb
mov
shr
sbb
stos
sar
mov
jne
xor
insb
test
repnz
xchg
xor
sub
cmp
mov
mov
cmp
clc
adc
addl
sub
inc
mov
in
arpl
sub
fnstcw
xor
add
nop
dec
xor
push
shll
mov
or
cmp
jo
jmp
rolb
sbb
adc
inc
dec
add
inc
dec
pop
inc
mov
inc
push
enter
dec
xchg
mov
leave
mov
jns
adc
test
sub
je
cltd
xor
mov
xchg
rolb
xchg
jno
add
movsl
add
leave
pop
movsb
inc
push
std
loopne
add
daa
daa
push
popa
dec
cld
add
arpl
fsub
mov
xor
sbb
in
xor
mov
das
push
in
mov
sarl
mov
mov
mov
xor
fdivl
xchg
cmp
aaa
outsb
sarl
subb
aad
insl
repz
sbb
or
sbb
adc
or
enter
movsb
jl
iret
adc
xchg
sbb
gs
xor
stos
add
jg
or
cwtl
jl
xor
jp
add
add
xchg
lahf
xor
push
sub
cmp
sbb
and
lock
daa
xchg
adcl
leave
sbb
mov
mov
sub
je
adc
fiaddl
cmpsb
push
jp
and
xor
pushf
xchg
push
pop
jo
and
pop
xchg
iret
pop
xchg
sbb
aad
stos
or
xor
clc
clc
gs
sub
add
cmp
mov
out
and
mov
pop
or
xchg
roll
jl
adc
clc
pusha
loope
scas
or
pop
incl
inc
add
fistpl
cld
fstps
fwait
inc
add
pop
add
jmp
xchg
arpl
cmp
push
fmuls
fcmovnu
stc
sbb
dec
dec
mov
aaa
inc
add
or
jno
jns
cld
inc
push
inc
lahf
or
mov
iret
inc
inc
push
sbb
mov
loope
mov
jne
add
mov
call
adc
jns
jns
xor
xor
mov
stc
ficoml
pop
xchg
pop
pop
mov
ficoms
mov
adc
dec
pop
imul
mov
adc
ds
push
sub
pop
pusha
cmp
add
mov
nop
je
or
push
aaa
or
sbb
push
xor
mov
adc
out
ss
ret
dec
push
or
pop
push
or
adc
inc
xchg
cmp
mov
lds
mov
ret
mov
sbb
add
and
adc
fldcw
ss
sbb
push
mov
add
ja
sbbb
sbb
into
xchg
adc
sub
and
push
and
sub
push
movsb
mov
fdivl
xchg
and
mov
xor
popa
mov
sbb
inc
pop
orb
and
sbb
mov
adc
dec
or
lea
lock
mov
pop
mov
lods
loope
popf
jg
out
loopne
mov
mov
push
inc
dec
or
pop
pop
aam
push
cmp
cmp
sbb
inc
sbb
stos
jl
cmp
dec
fists
aam
ja
jecxz
imul
int
mov
shll
dec
lahf
push
xchg
xorb
xor
inc
sub
popl
mov
push
sub
add
mov
mov
sub
cmp
or
sub
jbe
jnp
inc
add
adc
mov
sbb
xor
popa
mov
js
push
into
push
and
inc
or
pop
adc
cmp
dec
pop
cmp
adc
sub
or
add
orb
lcall
inc
pop
sbb
or
in
bound
cmp
addb
es
shlb
dec
ss
or
stc
xchg
jbe
jne
leave
pop
lea
jae
rclb
sub
xchg
dec
loopne
adc
jecxz
test
cmp
cmp
fs
dec
adc
rdpmc
cmp
std
jae
cli
adc
jbe
or
fs
dec
mov
or
push
test
sbb
push
pop
popa
mov
lcall
and
jne
shll
leave
cmc
xor
push
xor
out
inc
mov
sub
push
push
push
add
mov
jns
lcall
inc
dec
push
aas
pop
pop
push
into
movsb
and
leave
popf
cmp
sub
cmp
xor
inc
xchg
push
es
subl
clc
or
cltd
sub
and
outsl
movsb
out
idivl
push
jmp
pop
and
jg
jnp
in
sub
push
cmp
mov
push
and
push
gs
aam
aam
icebp
aas
loope
mov
mov
shll
adc
or
imul
push
ja
and
repnz
and
outsb
pop
outsl
xor
add
ljmp
jg
in
or
push
shrl
ds
jb
sbb
dec
leave
loop
adc
push
push
sbb
jbe
test
aam
loopne
sbb
cmp
ficompl
dec
jge
cld
out
sub
push
inc
mov
leave
mov
add
mov
mov
sbb
and
sahf
ss
into
nop
sbb
jno
mov
not
xlat
pop
dec
stos
adc
inc
aam
add
shrl
hlt
mov
bswap
push
push
imul
cmp
daa
xchg
or
dec
mov
or
inc
iret
loopne
jns
nop
cmpsb
sbb
imul
rolb
xor
rolb
mov
dec
subl
push
dec
or
lcall
pcmpgtd
dec
push
aaa
push
sbb
je
push
sub
dec
mov
sbb
sahf
mov
dec
xorb
pop
push
lock
insb
aas
mov
xor
xor
lcall
cmpsl
or
jo
loope
ret
mov
sbb
or
inc
imul
and
add
xchg
inc
scas
sbb
movsl
add
mov
mov
cmp
pop
add
adc
aad
xlat
scas
mulb
nop
fmull
ss
push
mov
and
add
push
jbe
push
and
xchg
or
or
fcoms
and
add
cltd
or
fwait
or
mov
or
sbb
out
aam
xchg
negl
or
test
cld
add
cld
mov
or
add
dec
inc
add
xor
or
jo
adc
out
jle
and
shlb
inc
out
sub
nop
and
inc
mov
or
orb
or
aaa
push
inc
cmp
pop
cvtpi2ps
or
xchg
fs
and
and
adc
sbb
and
dec
push
pop
inc
faddl
hlt
imul
mov
insl
or
cmp
inc
or
sbb
cld
sbb
in
inc
and
js
xchg
sbb
insl
sbb
out
jno
nop
adc
and
add
jns
pusha
nop
mov
or
enter
push
inc
or
add
js
mov
movsl
dec
inc
daa
jecxz
test
insb
test
cmp
add
mov
sbb
push
lods
and
add
push
sub
or
and
dec
sub
add
push
add
or
test
nop
popa
movsb
sbb
xchg
mov
aam
adcl
push
cmp
stos
and
dec
cs
jo
sub
adc
js
ljmp
jmp
dec
ficoml
sbbb
packuswb
add
inc
pop
outsb
arpl
popa
sub
dec
or
popa
push
bound
sub
lock
cmp
mov
cwtl
ss
or
out
mov
dec
lcall
cmp
loop
push
adc
mov
cmp
add
jg
ret
pop
mov
sub
mov
dec
mov
xchg
sub
inc
fptan
jmp
or
jne
lcall
xor
roll
shlb
movsb
jns
ljmp
imul
inc
loopne
mov
in
addr16
sbb
mov
call
mov
inc
mov
lock
xor
nop
mov
jecxz
sub
inc
push
cmc
adc
shrl
dec
sub
movsl
cmp
roll
inc
adc
push
dec
sti
shlb
add
orl
movsb
iret
or
push
cmp
call
xchg
dec
insb
pop
stos
test
inc
aas
mov
int3
lahf
push
push
das
lea
cs
lods
xchg
cmp
test
sbb
dec
and
mov
jb
push
enter
rcl
xorl
push
xor
xchg
add
xchg
sbb
aas
rorl
and
enter
dec
sub
mov
fildll
push
nop
test
pop
and
cli
dec
jne
adc
push
inc
inc
sub
jg
ja
gs
inc
incb
xor
in
mov
xor
and
mov
and
dec
push
aas
sbb
cld
sbb
push
pop
shlb
hlt
dec
add
sbb
or
je
add
adc
ds
dec
mov
mov
out
push
gs
inc
iret
aam
aam
and
or
inc
pop
cmc
jmp
insl
push
cmp
cmp
cmp
or
dec
outsl
inc
sbb
add
enter
dec
out
push
inc
and
inc
jl
or
or
sahf
out
pop
and
andb
mov
cmp
xor
mov
orb
add
hlt
cmpsl
jno
stos
cmp
mov
lret
neg
inc
cmp
push
mov
add
xor
and
and
add
popf
subb
enter
dec
push
out
xor
jnp
inc
and
out
sarb
lods
sbb
pop
adc
out
pop
in
and
cmpb
push
mov
lods
es
sub
jb
jae
sahf
mov
jbe
fs
flds
jne
sbb
mov
dec
enter
scas
push
sub
js
add
push
lock
fs
mov
pop
sbbb
jo
inc
lock
mov
testl
cld
insl
push
jbe
jae
and
and
and
movsl
andb
out
out
and
push
xchg
outsl
pop
add
outsl
adc
jp
pop
sti
jge
insb
sbb
outsl
fs
out
pop
push
popa
sbb
adc
adc
push
adc
js
push
faddl
cmp
fldpi
cmp
test
cmp
insl
add
cmc
sub
sub
push
inc
cs
mov
push
xor
test
and
imul
jne
adc
data16
and
scas
and
insb
adc
inc
es
adc
or
outsb
push
pop
sbb
dec
scas
and
jg
inc
shlb
sub
mov
int3
xchg
push
pop
mov
sbb
add
cmp
inc
inc
pop
inc
inc
cmp
push
mov
sbb
add
xor
les
mov
sbb
cmp
mov
mov
mov
inc
scas
loop
mov
roll
push
mov
les
jae
stc
mov
add
xchg
insb
mov
jb
and
push
sub
and
mov
pop
mov
jo
mov
mov
jne
je
repnz
xor
je
je
inc
aam
dec
or
push
cmp
add
sahf
dec
inc
jo
jo
pop
xchg
mov
adc
pop
push
inc
and
xchg
prefetchwt1
je
popf
dec
and
push
pop
adc
inc
push
fwait
or
push
or
xchg
out
shll
sbb
inc
mov
call
inc
mov
or
cltd
xchg
idivl
nop
and
or
dec
sahf
push
cmpsb
xchg
sbb
or
es
add
push
imul
dec
js
xchg
or
dec
outsl
es
and
cmpsb
push
add
sub
add
jl
fcoml
sub
popa
data16
jecxz
in
xchg
pop
jb
and
cmpsb
and
cmovo
sub
mov
adc
add
pop
add
push
inc
inc
pop
cmp
push
pop
pop
inc
scas
cmp
xor
daa
mov
stc
inc
add
inc
push
mov
shld
shlb
fs
sub
int
loopne
ds
xor
daa
mov
mov
lods
push
aam
dec
xchg
movl
push
cwtl
or
push
rcll
push
pop
or
add
xchg
std
ret
js
push
mov
and
inc
shlb
int3
fbld
pop
dec
add
inc
imul
and
sub
sbb
sbb
arpl
cmp
push
imul
cmp
pop
aaa
jne
inc
xchg
adc
mov
sbb
or
add
fs
push
fs
xchg
and
incb
inc
sbb
push
pusha
dec
cmpsl
sub
lods
pop
jmp
mov
inc
adc
cltd
fs
xchg
add
mov
inc
lock
fcomip
pop
mov
add
dec
insb
ljmp
dec
jne
inc
pop
aam
push
roll
movsb
outsl
test
xor
rorl
gs
fdivrp
pop
cld
mov
mov
mov
or
pop
xchg
add
add
add
pop
push
inc
pop
cmp
shll
mov
or
push
mov
mov
pop
inc
mov
xchg
das
icebp
jmp
sbb
jg
movsb
ds
movsb
add
xchg
pop
sub
sub
and
inc
cmp
xchg
rorb
push
mov
xchg
addr16
jge
xchg
mov
inc
sbb
daa
lock
xchg
test
in
adc
mov
and
pop
cld
jp
frstor
out
and
enter
jl
pop
pushf
push
and
add
or
mov
ret
sbb
inc
das
adc
sbb
and
dec
and
push
inc
sarb
push
jmp
or
pop
add
mov
cld
mov
or
stc
fcompl
fmuls
adc
push
cmp
testl
mov
pop
loope
cld
push
sub
ficomps
mov
xor
fwait
cmp
push
aad
enter
jge
ds
adc
adc
dec
pop
push
pop
outsb
sbb
push
test
add
inc
dec
add
mov
nop
ss
or
push
mov
rcr
mov
push
mov
pop
add
cs
pop
mov
fwait
mov
jne
xchg
sbb
pusha
rcrb
inc
bound
jge
push
inc
shrl
adc
popa
and
inc
cli
pushaw
call
add
in
jae
xorb
gs
cmpsl
sarb
fstps
mov
inc
adc
jne
cmp
repnz
data16
cltd
fisttpll
jl
adc
das
xor
dec
std
jno
cmp
dec
test
cmp
fdivs
test
subb
push
in
bound
inc
push
adc
adc
test
setns
add
rolb
test
pop
dec
mov
ja
imul
sbb
ds
and
dec
int3
jl
pusha
mov
sub
xchg
jp
mov
orl
stos
sbb
cmp
in
sub
popf
movsl
add
inc
cmp
dec
std
nop
lret
es
daa
pop
inc
fs
outsb
cmpsl
pop
push
mov
dec
inc
adc
and
mov
adc
pop
and
call
out
jbe
test
add
sub
xor
push
mov
imul
mov
pop
add
rorl
test
add
fbld
pop
pop
jl
sub
or
xchg
fldt
push
sub
and
push
sbb
sub
or
sbb
cmp
enter
mov
inc
adc
xchg
roll
lcall
and
stos
ret
xchg
push
jns
mov
dec
rcll
dec
cmpsl
sbb
and
mov
and
or
sbb
imul
or
mov
sbb
sbb
pop
mov
ret
cmp
inc
in
push
pop
leave
sub
dec
pop
sub
jle
test
sub
add
mov
push
stc
xchg
sub
loopne
cmc
and
adc
std
andb
outsl
shlb
outsl
das
cld
sbb
and
jmp
andl
lcall
push
cmc
cld
cmp
jb
mov
cmp
jle
inc
jns
push
jge
cmp
sbb
sbb
aas
mov
dec
sbb
fwait
and
shlb
push
xchg
pop
xchg
jne
mov
push
sbb
aad
aad
arpl
push
idivl
enter
inc
outsb
int3
cmpsl
jo
popa
and
xor
push
adc
push
mull
fnstenv
pop
fwait
stos
sbb
pop
cmp
mov
sub
ja
xor
pop
pop
fs
sub
or
lret
jne
movzwl
jne
call
xchg
cmpsl
test
xchg
shr
mov
add
jmp
add
inc
pop
mov
test
pop
sbb
into
add
xchg
lret
fs
dec
dec
add
leave
sub
and
xor
add
xor
pop
sub
adc
xor
xchg
rol
fistpll
inc
sarb
scas
xchg
subb
push
sub
mov
dec
paddsb
imul
lea
mov
sbb
add
or
or
add
push
jecxz
test
push
mov
add
inc
popf
push
cmp
fsubrs
inc
lea
flds
arpl
mov
daa
pop
shll
push
jp
pop
mov
add
aaa
mov
inc
mov
or
xor
mov
dec
cmpsb
addr16
in
jp
shl
and
fcmovnbe
dec
or
sub
loope
cmc
repnz
test
js
sar
jecxz
add
cmp
xor
and
mov
and
repnz
sbb
add
xchg
xor
sub
add
lock
test
fisubrl
sbb
and
and
jecxz
jl
fcomi
mov
add
mov
lahf
ja
or
cmp
je
movsb
add
clc
xchg
cmpsl
and
sub
insl
push
jle
in
add
dec
aad
add
lret
push
mov
addb
imul
inc
cmp
dec
and
adc
sbbb
sbb
cmpb
jge
movl
adc
loopne
and
pop
repz
pop
mov
sub
and
out
movsb
jg
cwtl
pop
repnz
imul
push
lea
and
jae
shrb
sbb
push
je
imul
inc
pop
cltd
imul
add
sub
add
jae
pusha
add
cmp
xor
sbb
mov
inc
add
rcrl
inc
pop
les
cmp
add
popf
push
ss
jl
inc
cli
push
push
fwait
call
xchg
push
or
push
subl
cmp
push
pop
and
loop
lds
or
stos
inc
rolb
cmp
jmp
es
sti
ret
xor
push
sub
push
fs
adc
insl
addl
dec
shrb
inc
inc
mov
xor
mov
daa
mov
pop
inc
mov
ret
scas
pop
ret
pusha
and
mov
xchg
fs
lahf
mov
test
pop
inc
mov
gs
mov
xor
push
xchg
test
jmp
adc
push
or
fs
sub
sub
shlb
mov
dec
add
dec
add
das
jns
pop
je
je
cld
enter
lea
mov
push
sub
push
or
push
inc
xchg
mov
xchg
inc
adc
les
cmpl
shrb
outsl
das
cs
inc
leave
xchg
out
jge
movsb
pop
sub
test
cltd
pop
idivl
test
imul
nop
push
add
push
inc
sahf
cmpsl
xchg
pop
mov
in
adc
in
pop
push
sub
stc
inc
push
les
dec
push
pop
and
ja
xchg
mov
xor
cmp
cmpsl
add
push
pop
pop
call
insl
inc
cmp
inc
sub
and
cmpsl
aas
lret
and
or
add
rcrl
es
adc
inc
stos
pop
or
sbb
or
mov
inc
popa
arpl
cmp
lock
lock
xchg
xor
scas
cmpsl
fisttps
es
lret
jle
arpl
js
push
jg
lods
cli
ds
lret
adc
dec
mov
sub
sbb
repz
cmp
add
and
dec
jo
jnp
push
and
dec
nop
pop
mov
mov
xor
das
jno
outsb
xor
lods
jne
popf
xchg
xchg
movsb
mov
add
inc
cltd
ja
xor
sbb
xor
sub
xor
cmp
mov
nop
xor
popl
adc
popf
je
mov
adc
mov
loop
std
popa
pusha
outsb
nopl
adc
lret
testl
and
sub
or
mov
gs
lret
daa
add
inc
and
dec
xor
dec
mov
sbb
sbb
inc
add
cmp
imul
test
dec
fildl
push
shl
push
push
xor
leave
push
mov
aam
adc
mov
inc
sahf
out
inc
das
push
inc
inc
add
je
sub
add
dec
lea
pop
dec
sub
outsl
inc
add
outsl
mov
arpl
jb
pop
dec
sti
mov
push
aaa
adc
add
les
outsb
loopw
ret
lds
mov
add
dec
cmp
aas
inc
inc
pushf
mov
dec
push
dec
push
cmp
cmp
and
fs
test
addr16
clc
js
pop
cmp
leave
or
push
scas
or
adc
sub
mov
sub
je
shlb
pop
xchg
mov
movl
push
jae
cmpl
add
lods
jo
aam
mov
jno
scas
mov
pop
add
pop
and
pop
ss
sbb
jno
or
sbb
push
dec
fiaddl
push
sub
or
push
pop
out
sbb
push
pop
cmp
adc
cmp
cmp
mov
inc
mov
jmp
int
and
xor
jl
cmp
or
inc
adc
addr16
adc
lret
cmc
or
xor
ret
jne
dec
cmp
jae
xchg
fdivrl
or
inc
adc
rolb
adc
js
and
rcrb
je
insb
imul
jecxz
cmpl
loop
mov
mov
add
or
adc
add
lcall
xchg
loop
clc
mov
leave
lcall
in
add
or
scas
cmp
cld
add
aaa
daa
adc
rolb
repnz
jl
or
jl
pop
dec
push
fwait
and
xlat
mov
xor
sbb
sarb
mov
pop
dec
pusha
pop
xchg
pop
jmp
scas
test
fisubs
hlt
int
negb
mov
test
push
inc
shl
add
sub
and
shrl
mov
mov
and
mov
xor
mov
and
jmp
stos
or
lret
add
xor
sbb
or
cwtl
mov
inc
adcl
mov
xor
sbbl
sbb
jo
testb
mov
xchg
add
call
push
cmp
push
add
jle
xchg
ja
push
lds
and
jnp
test
lahf
add
add
add
add
add
mov
sub
xchg
call
dec
or
pop
or
mov
sub
add
cli
cmp
lea
mov
aad
clc
fiadds
ret
addb
add
lret
fwait
dec
or
pop
push
adc
imul
loope
arpl
mov
xor
lret
add
fists
jbe
dec
js
pop
cmp
mov
inc
in
in
insb
shl
mov
inc
mov
daa
lcall
cwtl
std
and
rcr
adc
add
mov
adcb
xchg
jg
stos
or
push
js
dec
rolb
push
mov
mov
addl
pop
mov
adc
jns
pop
mov
outsb
and
pop
addr16
mov
nop
or
jle
lea
lcall
test
je
std
push
mov
idivl
add
pop
mov
push
out
test
or
cld
and
loopne
mov
dec
inc
adc
push
iret
dec
or
or
adc
loop
cmp
mov
call
je
cli
movsb
pop
dec
cmc
ja
add
or
pop
sub
fistl
add
dec
sub
push
shl
fnstsw
arpl
clc
push
push
mov
inc
lret
mov
movsb
xor
mov
mov
add
pusha
jg
lods
sub
mov
imul
dec
mov
enter
adc
adc
or
imull
cmp
push
xor
sbb
out
mov
pushf
gs
push
dec
xor
loope
cmp
ss
push
mov
jae
sbb
dec
mov
and
fs
outsb
loop
and
lcall
xor
and
xchg
cs
dec
imul
sbb
and
jp
movsb
aas
movsl
ja
dec
jle
in
lcall
inc
filds
sbb
lret
jl
adc
sbb
dec
cmp
sub
dec
adc
add
fdivrl
jl
ret
push
cmpsl
or
adc
mov
or
cmc
or
push
xor
sub
cmp
jae
aam
xorb
push
cmpb
pop
nop
cmp
or
push
sub
clc
loop
lods
iret
adc
cmp
sub
out
push
ss
ja
movsb
sub
add
fimuls
or
mov
dec
xor
aaa
add
or
push
cld
out
push
int
ret
sbb
jo
mov
sti
and
sub
popf
sbb
sbb
jae
jae
add
outsl
adc
shll
sahf
jge
push
jne
pop
jae
inc
add
stc
adc
and
clc
pop
pop
sub
sub
jbe
pusha
add
repnz
jbe
sub
or
and
jmp
test
and
enter
movl
jne
pusha
sub
mov
pop
adc
mov
xchg
cmp
cmp
push
jbe
cmpsl
inc
xor
lea
push
sub
cmc
inc
clc
jge
mov
adc
jl
test
and
dec
rol
mov
add
test
jl
pop
cs
pop
xor
ret
push
add
push
inc
jns
out
push
movsl
in
push
inc
dec
dec
xchg
add
add
mov
and
dec
xchg
mov
pushf
pop
and
add
rolb
mov
dec
sub
inc
nop
fnstcw
xchg
xor
jne
lret
scas
jl
mov
xor
insl
cmp
repnz
pop
inc
mov
dec
movsb
outsb
cmpl
push
adc
xor
push
cmp
sbb
push
cmp
nop
arpl
mov
sbb
pmulhw
sbb
mov
movl
mov
pushf
je
jl
outsb
or
cmp
or
jbe
hlt
adc
ja
lahf
inc
ds
sbb
jp
clc
jnp
inc
jge
sahf
lahf
jge
dec
jle
cmp
sub
addl
mov
cltd
sbb
or
out
pop
inc
add
and
or
push
xorb
push
cmp
bound
daa
add
mov
dec
fsts
pusha
mov
lods
xlat
jge
nop
fdivr
adc
jle
mov
sub
leave
outsl
jbe
ljmp
setp
and
pop
or
cmp
iret
xor
sbb
test
add
pop
sub
xor
adc
dec
sbb
dec
inc
pop
push
push
cld
adc
jg
sbb
push
or
mov
and
adc
jns
xor
jae
mov
cmp
push
or
cmp
mov
sbbl
cmp
cwtl
idivl
mov
mov
mov
pop
out
shl
inc
aaa
stos
lret
xor
xchg
mov
ss
or
dec
imull
imul
shr
fldcw
inc
daa
or
daa
sub
and
jp
rcr
dec
enter
inc
pop
scas
push
xchg
push
dec
inc
out
xor
je
lock
mov
xchg
pop
jp
ja
push
pop
jo
orw
inc
ljmp
xchg
pusha
pusha
xchg
sbb
cltd
inc
or
jnp
push
push
inc
inc
sbb
std
add
div
mov
sub
rolb
and
inc
out
fs
push
pop
jae
mov
bound
loopne,pn
in
cmc
add
push
ret
mov
pop
pusha
cmpsl
add
in
adc
add
xchg
xor
jo
movsb
or
jno,pt
mov
xor
mov
filds
imul
lock
or
lock
testl
cmp
sbb
imul
sbb
sbb
pop
incl
sbb
mov
lcall
in
sarl
pop
dec
cmp
push
push
push
addb
or
add
xchg
jl
js
mov
jg
mov
adc
jae
pop
inc
jecxz
cmpl
xor
mov
stos
sti
push
mov
imul
mov
push
jmp
or
cmp
xchg
push
addr16
orb
cmpsl
sub
adc
add
adc
add
dec
outsb
cmc
add
adcl
add
push
mov
jle
pop
dec
add
mov
sbb
adc
ja
loopne
xorl
jmp
outsl
mov
into
sbb
pop
cmpsb
jne
rcll
add
and
movsb
jmp
popa
inc
sbb
sbb
adc
jl
je
cmp
xlat
andb
or
adc
push
mov
ret
push
rorl
dec
add
or
mov
adc
adc
inc
fbstp
push
mov
bound
push
mov
addl
orl
or
xchg
test
dec
adc
push
push
out
daa
pop
sbb
xchg
inc
dec
pusha
cmpsl
add
mov
cmpb
aas
or
daa
push
mov
sub
imul
js
mov
add
fildl
fscale
mov
adc
adc
dec
jle
jmp
scas
push
mov
jle
jmp
xchg
cmp
or
fmul
out
inc
mov
ljmp
jg
add
sub
jo
ds
inc
call
sti
pop
inc
and
ja
je
sarl
and
add
add
inc
pop
and
sub
pushf
sbb
and
enter
adc
add
jno
lgs
out
and
sub
dec
fisubl
gs
adc
lret
inc
ds
push
lret
push
mov
and
lret
and
int
push
sub
adc
jne
pop
push
xchg
jns
dec
jle
push
faddl
sarb
aam
adc
repz
int3
inc
mov
jmp
pop
pop
xchg
or
xor
jnp
mov
jmp
lods
add
push
mov
lahf
je
jnp
push
inc
pop
mov
jge
mov
dec
loopne
or
sub
lock
aaa
ret
pop
loope
push
add
fmulp
dec
inc
mov
push
inc
mov
lock
ja
stc
test
mov
mov
jbe
in
cmc
dec
pop
aas
jnp
push
cmp
cli
pop
push
push
pop
jo
inc
mov
inc
rorb
or
scas
test
add
mov
add
sti
xchg
in
cltd
sbbl
and
repz
into
cli
jo
and
pop
fldl
scas
mov
cmc
jbe
mov
out
push
pop
xlat
sub
pushf
push
jl
or
adc
adc
mov
mov
xlat
mov
sbb
mov
jle
sbb
mov
jmp
sbb
mov
adcb
rol
add
pop
mov
mov
adc
aam
lock
jg
xor
je
js
add
or
cmpsl
add
in
sub
js
sub
insl
scas
dec
or
sub
pop
add
cmp
or
jg
pusha
ret
pop
cmp
or
fisubrl
jne
cmp
jne
mov
out
imul
loopne
cmp
add
das
out
add
mov
mov
nop
popa
pop
and
outsw
push
lds
jae
sub
add
add
xchg
mov
je
insb
add
imul
pop
ljmp
dec
jo
test
das
dec
mov
mov
add
sarb
xor
push
cmpl
sbb
or
sub
jp
jle
or
loope
lods
cmp
sbb
popa
imull
imull
loope
inc
xchg
xchg
pop
xor
cmp
lea
or
mov
or
sbb
cmp
aas
xor
adc
add
xor
or
mov
add
add
push
push
push
jns
push
rolb
addb
or
rorb
jo
inc
or
lock
jecxz
push
test
add
out
jnp
hlt
insb
inc
cmc
popa
stos
mov
jnp
pop
fadds
cmp
hlt
push
push
or
stos
sbb
pop
les
push
test
outsb
xchg
dec
pusha
pushf
stos
adc
cmp
js
rolb
mov
dec
push
dec
or
fidivrs
adc
and
xchg
mov
jo
pop
fs
push
addl
out
add
loope
adc
aaa
jmp
jle
mov
mov
pop
push
push
gs
sbb
xor
sarb
xor
imull
add
add
aaa
push
sbb
nop
push
jne
xchg
clc
sub
inc
jmp
in
cwtl
in
mov
insb
adc
xchg
shr
js
loope
loopne
int3
fadds
filds
repnz
or
fstl
jo
push
cmp
inc
sbb
add
fists
adc
sbb
test
loope
add
sbb
adc
jg
xlat
inc
cmp
or
rcrb
mov
sbb
inc
mov
add
inc
lret
cmp
je
sbb
loop
in
std
or
pushl
imul
stos
jmp
adc
nop
mov
add
or
inc
insl
jne
pop
lock
lcall
xor
int
cmpsl
jns
imul
pop
add
jmp
and
cwtl
or
into
sarb
push
add
inc
movsb
inc
ss
enter
shll
cwtl
xor
in
ss
mov
xor
in
out
lret
push
add
add
roll
add
inc
xchg
adc
and
jne
stos
inc
cmp
sbb
add
xchg
and
push
dec
push
push
cmp
loopne
inc
fcoms
daa
in
mov
sbb
mov
xor
lahf
ss
into
mov
repnz
pop
lret
daa
mov
sub
jl
adc
nop
adc
clc
outsl
and
sarb
insb
pusha
xor
mov
and
inc
fldt
adc
dec
negl
mov
cli
inc
or
shll
fwait
or
dec
fisttpl
dec
push
pushf
sbb
jle
sub
mov
mov
pop
sbb
and
pushf
jae
rolb
push
rorb
or
xorb
orb
jnp
sbb
pop
shl
add
mov
add
pop
shl
xchg
imul
sub
add
and
mov
popa
sub
cmpsl
adc
sbb
mov
dec
push
and
add
adc
test
xchg
push
test
jecxz
cld
mov
or
add
add
xchg
inc
xchg
adc
xchg
push
das
mov
pop
lods
cltd
pusha
dec
dec
adc
into
or
lea
jmp
xor
adc
sub
sbb
mov
push
out
sub
das
shll
subl
inc
dec
or
sbb
xchg
or
xor
mov
movsb
mov
push
or
sub
jecxz
jo
divl
or
adc
mov
lret
sbb
push
sub
pop
stc
lods
aas
scas
inc
sbb
leave
inc
mov
js
sbb
lock
or
shll
rorl
pcmpeqw
mov
faddl
add
adcb
xorl
or
mov
or
out
mov
test
push
sbb
mov
cltd
clc
cmp
push
jp
fstpt
adc
lea
cmp
loope
rcll
in
and
lret
dec
sbb
rcrl
mov
cmp
xchg
add
push
push
test
and
xor
sub
adc
scas
mov
sbb
outsl
and
dec
mov
jl
sub
or
mov
dec
or
mov
cmpsl
and
sar
and
imul
jb
sbb
adc
loope
add
arpl
test
mov
bound
or
into
push
push
mov
fucomp
sub
xchg
aas
jmp
and
cmp
add
test
jle
push
cmp
repz
call
pop
add
shl
dec
and
cmp
or
jge
xlat
popf
adcb
rcrb
push
xor
shlb
test
pop
test
shrl
sbb
pop
mov
add
jecxz
mov
sbb
jge
dec
or
es
xchg
fs
lock
hlt
jg
xor
mov
es
andb
aaa
inc
mov
scas
lea
imul
add
xor
pop
and
int3
lds
cmpsl
inc
add
insb
sbbl
addl
dec
push
mov
sarb
movsb
mul
stos
mov
adc
leave
jl
add
jmp
mov
sbb
sub
push
cwtl
or
xor
jecxz
push
cmp
arpl
or
cmp
jl
push
repnz
xchg
cs
lret
mov
icebp
sub
test
pop
mov
mov
lea
sbb
mov
jg
mov
fisubs
movzbl
jecxz
mov
cwtl
mov
sub
jge
les
adc
mulps
roll
je
sti
xchg
jp
hlt
in
sub
cmp
sar
mov
imul
gs
mov
cli
jle
out
jl
jmp
dec
jl
pop
mov
inc
jmp
push
movzwl
inc
pop
into
mov
adc
orl
push
adc
imul
sub
mov
js
push
jmp
call
out
mov
adc
sbb
and
xor
cmp
and
in
or
inc
adc
decl
pop
xor
jmp
fdivl
popf
or
or
xchg
mov
add
mov
enter
mov
je
inc
xchg
adc
xchg
or
mov
or
dec
inc
icebp
jno
push
sbb
jge
ret
rcl
cmp
mov
mov
in
sar
test
int
fiaddl
or
add
adc
cmp
shlb
mov
into
mov
andb
ljmp
add
dec
push
or
mov
aaa
mov
pushf
rcrb
pop
xchg
lock
pushl
nop
cmp
stos
xor
adc
or
cmpsl
push
xor
leave
add
test
pop
xchg
xchg
xchg
xor
jo
push
jbe
cmp
xchg
and
cmp
and
pop
daa
push
push
int3
sbb
sub
fstl
dec
dec
int
lea
ljmp
add
sub
daa
mov
int
cmp
inc
mov
and
lods
in
push
in
pop
frstor
sub
push
enter
mov
insl
pusha
sbb
jnp
push
dec
mov
xorl
stc
add
insb
sbb
push
add
push
add
nop
sub
dec
xor
push
pop
or
pop
or
stos
imul
push
cmp
sub
xor
cmp
pop
jb
push
and
rolb
sub
mov
call
mov
xchg
pop
add
pop
mov
rclb
adcw
dec
jl
in
clc
lret
push
xor
xchg
movswl
and
mov
insw
and
pop
inc
or
out
sbb
or
add
pop
jmp
jne
xchg
mov
inc
ret
lds
sbb
fsub
adc
push
add
or
sub
cld
std
outsl
xchg
cltd
fisttps
or
cmp
rcrl
in
jns
add
pop
sbb
dec
or
ljmp
xor
xchg
xor
jo
inc
xor
jmp
sbb
divl
xchg
dec
jle
cwtl
sbb
ljmp
dec
cmp
das
jns
xlat
cmp
pop
inc
add
xchg
pusha
movl
cmp
inc
rorb
xor
dec
and
loope
xchg
push
mov
mov
cmpsl
jge
and
inc
mov
sub
mov
jne
das
aas
push
mov
or
jl
jp
adc
xchg
cmp
cli
std
inc
addl
movsl
mov
arpl
sub
dec
mov
pop
xor
int3
or
xchg
adc
adc
mov
out
aaa
lock
xor
push
mov
mov
xchg
jmp
sub
adc
das
ret
sbb
sub
and
setg
and
jmp
fidivs
ficoms
sub
add
icebp
xlat
xchg
pop
add
movsb
add
push
dec
add
jne
adc
call
mov
loope
inc
xlat
enter
mov
push
pop
icebp
sbb
test
imulb
daa
mov
sbb
add
rorb
bound
xor
into
cli
sbb
test
jmp
xor
imul
push
add
adc
nop
sub
ret
leave
pop
jbe
hlt
mov
adc
lea
insl
adc
add
push
dec
stos
add
outsb
push
call
incl
jg
das
lods
inc
call
int3
push
outsb
cltd
and
in
call
in
inc
inc
mov
aaa
fdivr
and
cmpsb
dec
push
in
imul
fnstsw
daa
inc
lea
cmp
xchg
push
fisttpl
clc
filds
or
icebp
je
mov
add
ret
jg
push
cmp
sub
sbb
fildl
cmpb
call
fildll
aas
or
or
lahf
inc
push
dec
cmp
sub
icebp
mov
fistpl
loopne
mov
add
xor
les
out
dec
loopne
inc
mov
and
inc
stos
mov
sbbb
add
xorl
xchg
stc
push
add
fdivs
movl
push
add
and
cwtl
loope
rorb
or
lcall
cmc
aas
sbb
fnsave
test
shll
mov
sbb
mov
leave
aaa
or
ret
lods
xchg
lahf
mov
int3
jle
mov
inc
aam
mov
mov
inc
inc
shlb
loop
out
insb
fwait
xchg
rolb
mov
push
out
pop
pop
call
loopne
mov
lods
popl
mov
inc
lcall
loopne
xchg
lock
je
jge
and
movzbl
sub
inc
aaa
icebp
cbtw
pop
jl
fcomip
and
and
clc
imul
mov
add
mov
jno
sbb
out
pop
mov
or
pusha
hlt
or
mov
pavgb
mov
pop
push
pop
fmull
das
jmp
orb
sbb
addl
loope
or
push
pop
or
mov
mov
and
mov
test
out
jne
bound
add
lock
sub
jmp
sbb
sbb
add
sbb
or
mov
add
mov
js
test
or
pop
repnz
hlt
or
sbb
sbb
push
cmp
mov
in
xchg
mov
aam
cmc
mov
cmp
inc
cli
sbb
xor
fsubl
fldl
add
je
push
inc
push
jmp
fwait
ret
iret
jp
test
clc
push
or
inc
push
pminsw
add
cmp
jg
out
pop
sbb
sub
pop
or
xor
push
push
adc
shrl
cli
or
mov
inc
and
xor
inc
or
mov
xchg
xchg
or
stc
sbb
xor
in
dec
lods
cmp
and
and
rcrb
add
sub
or
xor
js
in
add
fwait
repz
dec
jle
lea
and
cmp
jns
and
xchg
mov
hlt
popa
adc
stos
dec
xor
mov
nop
cmp
xor
cmp
fs
xor
adc
mov
sub
adc
test
pop
ds
jge
push
and
pop
sbb
daa
pop
in
into
mov
mov
loope
rclb
and
sarb
add
mov
les
xor
and
js
sub
and
push
dec
sahf
dec
cmp
add
call
inc
mov
pusha
mov
out
push
fs
push
sub
shlb
mov
pop
and
xor
jmp
scas
pop
clc
out
inc
add
inc
cmp
fstp
cmp
daa
push
sbb
sbb
sub
cmp
mov
mov
xchg
add
loop
or
fistpl
sub
movsl
rcrb
dec
adc
arpl
dec
pop
add
in
xor
xchg
jle
loop
decl
xlat
push
mov
sbb
fs
mov
sub
fs
lock
aaa
inc
rorb
aad
push
add
in
sahf
les
lea
loop
sbbb
adc
xchg
inc
or
mov
imul
roll
cs
jle
xor
adc
stc
mov
xchg
mov
ret
inc
cs
xor
pop
out
lcall
and
lds
movb
pop
mov
ret
inc
in
dec
hlt
inc
faddl
mov
and
xor
jo
shlb
lret
inc
add
mov
pop
sbb
int3
sub
dec
mov
lahf
sub
cli
shll
into
jae
rorb
adc
sub
gs
daa
addb
push
and
pushf
insb
in
xor
mov
and
jne
in
push
sub
push
jne
or
shlb
add
mov
mov
mov
push
or
imul
inc
mull
shlb
push
inc
icebp
leave
adc
sub
jne
adc
loope
mov
aam
pop
sbb
mov
hlt
or
mov
pop
add
or
loop
mov
in
dec
jo
adc
jmp
inc
mov
and
mov
jp
jns
adc
imul
lock
shrb
lock
adc
xor
or
sar
decl
ja
loope
clc
lea
mov
test
or
xor
std
add
adc
cmp
mov
push
incl
pop
cs
testb
je
adc
mov
add
dec
inc
loop
test
jnp
jmp
adc
les
xor
daa
push
cmp
xchg
addb
cltd
jecxz
or
mov
movsl
gs
cmp
xor
jl
cmp
xchg
loopne
sbb
int
add
inc
dec
lahf
movsb
push
push
adc
and
xor
push
add
jp
shr
adc
pop
sub
or
cmp
arpl
xchg
fucomi
lret
enter
fsub
shr
hlt
iret
enter
xchg
enter
lds
xchg
dec
ja
mov
lea
fistpll
jle
pop
mov
lea
pop
lock
mov
mov
lea
movsl
push
loopne
andl
add
mov
mov
arpl
xor
or
imul
pop
mov
add
aam
xchg
movsl
fpatan
push
inc
mov
xchg
sub
daa
push
stos
xchg
nop
push
mov
xorb
popa
cmp
add
mov
enter
sbb
or
and
clc
xor
xor
mov
adc
pop
mov
nop
stos
or
jo
scas
push
rcl
aas
jnp
cmpl
xchg
movsb
cmp
sbb
lods
mov
fldt
jns
bound
inc
jmp
inc
pop
stos
cmp
sarb
mov
or
sub
cltd
aam
push
pusha
xor
xlat
enter
pop
or
enter
adc
pop
xor
add
adc
and
sub
dec
mov
dec
sbb
flds
data16
inc
adc
sub
ss
insl
jp
dec
mov
sarb
dec
fistps
mov
xor
ljmp
ret
je
ljmp
inc
pop
leave
fimull
pop
sbb
mov
mov
in
xor
push
and
mov
jge
xor
sar
cwtl
out
inc
out
push
loopne
cmp
daa
push
jo
lods
fbstp
nop
mov
jns
adc
and
js
add
jb
dec
andb
shll
push
pop
cwtl
xor
dec
add
add
aam
add
mov
mov
mov
inc
sbb
ljmp
outsl
outsl
testl
repnz
jecxz
inc
ret
add
aam
jmp
sbb
sahf
xor
add
push
cld
jmp
mov
fdivl
inc
mov
xchg
or
cs
or
mov
inc
inc
es
ror
enter
sbb
and
in
fsubrl
aam
and
out
add
or
cmpsl
and
xchg
push
dec
enter
into
push
rolb
addl
push
sbb
icebp
enter
rol
push
add
sub
mov
cltd
sbb
jl
movb
add
mov
dec
adc
mov
mov
les
or
or
les
xchg
cmp
or
mov
mov
lahf
lock
pop
inc
sub
aam
add
xor
inc
sbb
je
inc
mov
sub
je
and
sub
je
mov
mov
sub
pop
icebp
add
scas
jmp
mov
cmp
add
addr16
in
movl
hlt
mov
sbb
jns
and
or
sub
inc
push
mov
nop
imul
mov
pusha
sbb
pop
mov
fwait
aaa
jmp
xchg
int
fwait
push
sarb
add
adc
cmpsb
popf
sub
test
or
jmp
add
mov
insb
ds
jmp
js
pop
jo
xchg
aaa
es
cmp
jne
and
xor
sub
cs
sarl
add
mov
adc
lock
dec
mov
popf
or
sahf
and
fidivrs
adc
or
imul
mov
fsub
inc
adc
inc
xchg
cmp
repz
pop
andl
mov
and
inc
adc
aam
sbb
jns
jge
inc
sbb
icebp
ss
fiaddl
dec
ret
or
jbe
js
or
lahf
push
hlt
mov
xor
pop
pop
xor
idiv
xor
inc
cltd
ret
adc
or
pop
lock
les
insb
movsb
lret
mov
add
sbb
jle
lea
leave
xchg
popa
xorb
sub
loope
jnp
mov
lsl
dec
dec
push
mov
cli
addr16
inc
add
add
add
test
out
shr
int3
sbb
sub
push
mov
and
arpl
jne
inc
cli
hlt
xor
xchg
lock
daa
lret
insl
add
sub
mov
pop
fldcw
jmp
lea
or
pop
or
movsb
cs
ljmp
sbb
fisubrs
std
jmp
xchg
sub
xchg
icebp
jl
lock
es
dec
pusha
mov
sbb
add
dec
push
pushf
mov
dec
xchg
push
cmpsb
scas
push
mov
cmp
aad
add
sbb
flds
fadds
sarb
fistps
mov
jg
add
dec
jl
jge
jl
inc
jb
xchg
jo
xchg
sub
ljmp
adc
or
and
out
leave
cmp
inc
test
pavgb
mov
lahf
adc
sub
mov
aaa
ret
mov
lcall
dec
fs
push
ds
ja
mov
xor
adc
adc
jmp
ss
and
adc
ret
outsb
mov
inc
je
push
mov
test
divb
jl
mov
mov
dec
outsl
push
movl
ret
jge
mov
dec
es
fidivl
jl
and
pop
sbb
adc
mov
nop
sbb
sti
add
repz
pop
les
testl
adc
mov
mov
fadds
sbb
cmp
jl
adc
nop
mov
ficompl
adc
lods
cmpsb
xchg
cld
push
mov
jle
shl
add
and
loope
lret
shrl
lods
lock
fsub
mov
push
add
mov
add
and
and
shl
cmp
or
dec
inc
fadd
adc
js
jl
lea
inc
pop
mov
nop
ret
mov
xchg
andl
cmc
ret
jo
push
ds
sbb
cmpsb
mov
cmp
aaa
test
lret
hlt
jl
sub
jg
xor
add
pop
imul
incb
insb
pop
js
mov
testl
mov
jo
inc
add
xchg
inc
cmp
or
push
or
mov
xchg
sbb
aam
clc
pop
jbe
rolb
in
outsl
rolb
inc
movzbl
add
sub
xchg
ljmp
sub
push
add
in
xchg
dec
mov
lds
lea
add
jecxz
xchg
push
jle
push
sbb
test
es
in
dec
lock
call
add
or
cmp
mov
xor
adc
fimuls
mov
inc
cmp
adc
hlt
mov
ds
inc
pop
ja
lock
cmpsl
jb
inc
push
xor
jo
dec
jno
and
out
addl
call
sub
push
cmpsl
and
inc
xor
xchg
xchg
lea
pop
rolb
loopne
mov
outsl
aam
or
pop
ret
out
dec
push
in
jge
pop
adc
push
or
xor
inc
pop
bound
stos
cwtl
mov
sbb
ja
push
jecxz
std
hlt
jmp
lret
data16
icebp
pop
sbb
sbb
loope
cmpxchg
push
pop
ret
add
add
loop
mov
add
in
jl
push
jno
jns
sbb
dec
in
fcoml
lahf
xor
jg
push
pop
add
mov
mov
pop
aam
jmp
dec
lds
lock
jo
faddl
ficoml
cmp
add
lock
add
xchg
ficoml
int3
sbb
push
xchg
dec
xor
loop
sub
cs
cmp
call
xchg
sub
aam
mov
or
hlt
lea
jns
bound
and
xchg
loope
sbb
in
ficoms
call
lock
mov
inc
ljmp
ja
ljmp
push
daa
inc
fdivrl
xchg
xor
fsubrl
aaa
mov
mov
fadd
enter
out
push
shlb
shlb
ror
xor
xor
ds
rcll
das
mov
out
mov
sbb
mov
adc
hlt
push
and
mov
pop
sbb
sbb
pop
add
add
das
or
mov
flds
aaa
js
mov
inc
dec
pop
ret
xor
aam
leave
in
push
xor
sbb
mov
sub
ret
sbb
bswap
insl
xlat
inc
pop
flds
jno
ret
pavgb
lret
js
les
mov
adc
sbb
xchg
dec
add
dec
add
sub
xchg
adc
sub
rcr
jne
das
subb
fdivs
hlt
rolb
add
dec
mov
fsubr
add
sbb
lfs
add
inc
lcall
mov
mov
pop
ja
push
and
or
inc
sub
aad
xor
pop
loope
jo
test
cmpsb
inc
gs
jnp
stos
mov
sbb
mov
jge
adc
pusha
shrl
dec
pop
or
je
dec
je
jns
mov
stc
mov
ret
mov
mov
push
fdivrs
imul
jle
mov
int3
inc
pop
sbb
lret
sti
xchg
test
sbb
stos
jns
mov
insb
jmp
dec
cmp
inc
and
shrl
and
jp
add
add
sahf
push
add
rorl
out
jmp
xor
xor
aaa
ret
xlat
cs
and
pop
int3
repnz
or
or
adc
test
xor
add
push
in
pop
aaa
fs
cmp
adcb
and
inc
or
jnp
add
push
pop
mov
mov
in
pop
sbb
sti
repz
adc
dec
push
lret
hlt
lock
aaa
or
imul
out
aas
sti
lods
push
xor
incb
add
adc
or
bound
push
sub
jl
incl
addr16
xchg
outsb
mov
inc
lods
inc
fidivrl
mov
cmp
jge
popa
xchg
and
jle
fiadds
push
dec
push
jbe
jg
push
es
xor
adc
dec
in
test
outsb
mov
and
cmp
lret
orl
or
in
adc
mov
ss
adc
xor
xchg
pop
loop
sbb
fcomp
mov
add
fs
cmpb
pop
js
and
push
mov
jg
pop
pop
sbb
icebp
shl
push
test
movsl
and
gs
xchg
mov
add
and
int3
inc
push
sub
inc
jl
roll
jnp
cs
dec
adc
loope
jne
mov
jb
mov
or
sub
adc
mov
sbb
sbb
adc
push
rorb
mov
mov
or
mov
ss
and
xor
enter
call
loopne
fdivs
mov
out
pop
jmp
and
xchg
xor
or
or
sarb
out
test
jle
jns
dec
pusha
and
xchg
cmp
mov
ja
or
or
lret
mov
mov
arpl
loope
add
adcb
cmp
icebp
jmp
inc
add
sbb
cmp
fs
inc
xor
nop
cmp
or
enter
fcoms
sbb
popa
je
dec
rcr
lods
aaa
push
or
and
mov
add
push
and
rolb
in
cmpsl
dec
mov
xlat
ret
mov
add
sar
add
jge
xchg
mov
mov
sbb
mov
inc
inc
ss
imul
inc
cmp
out
inc
adcl
push
fistl
cltd
dec
push
rcll
lahf
pop
aaa
inc
pop
loope
jne
divl
pop
xchg
imul
add
mov
xchg
cmpsb
pop
pusha
xchg
dec
fiadds
add
xchg
mull
dec
dec
or
adc
popa
sub
sub
or
sbb
test
adc
cs
dec
aam
dec
pop
adc
sub
out
repnz
pusha
push
jns
sbb
das
ret
hlt
out
pop
pop
je
dec
xor
aam
je
jmp
xchg
add
inc
les
rclb
mov
mov
fldcw
or
out
jmp
sub
adc
mov
mov
loopne
mov
or
xchg
push
rclb
push
sub
sbb
inc
inc
and
push
push
fcmovb
mov
or
rcrb
push
jb
stos
leave
out
xor
and
jp
lret
addr16
jge
das
cmp
iret
cli
jae
jl
data16
add
add
lret
jmp
ffree
jecxz
lods
sbbb
sbb
cmp
mov
jge
add
adcl
mov
movsb
sar
mov
add
inc
or
leave
in
rcrl
and
fs
mov
sub
or
rcrb
sub
mov
jg
add
cltd
pop
adcb
mov
adc
cmp
cli
push
and
or
jns
loope
mov
push
cmp
int
mov
movsl
pop
inc
mov
sub
push
push
jg
mov
inc
sub
mov
adcb
mov
mov
lahf
sti
mov
sub
mov
jp
rcrl
mov
push
jns
in
sbb
adc
mov
in
loopne
or
jle
ja
leave
sub
fmull
loope
jne
jg
push
or
or
out
push
push
dec
enter
shll
or
mov
adc
cwtl
shr
sbb
xor
mov
ret
sub
rclb
enter
das
enter
xor
xor
lock
sbb
imul
jb
or
mov
inc
clc
jge
clc
sub
pop
jno
ss
aaa
mov
ja
lret
jmp
inc
in
jle
add
in
clc
and
in
or
sbbl
or
or
mov
popa
push
rorb
sub
fildl
call
xchg
or
fdivrl
outsl
push
mov
add
ja
fsubr
dec
aam
iret
or
sbbl
ret
stos
addb
mov
mov
pop
jo
fisttpll
push
or
icebp
pop
push
aam
pop
mov
inc
testl
or
push
aas
pop
std
fistpll
mov
xor
add
cmp
add
mov
inc
shrb
jge
int3
push
lds
ficoms
fsts
mov
add
mov
and
xchg
sub
lret
sbb
or
jo
nop
inc
dec
adc
movsb
outsl
movsb
jg
pop
cmp
int3
sbb
ja
pop
add
push
or
out
adc
lret
mov
or
jp
add
and
pusha
nop
in
test
es
push
jp
gs
jg
or
lods
shrb
xchg
inc
sbb
xchg
and
fsubrs
cmp
jge
mov
imul
loopne
pop
add
loope
xchg
je
into
cli
inc
loopne
les
imul
jge
add
pushf
push
rclb
cmpsl
aam
sub
or
xchg
xor
pop
dec
or
adc
xor
lods
sub
xchg
aam
in
sub
mov
imull
add
clc
add
add
xchg
cmp
dec
adc
shl
popa
mov
or
mov
push
enter
rcll
popf
pop
mov
mov
push
mov
push
arpl
nop
shll
gs
faddl
mov
hlt
rcl
push
add
inc
shll
sub
sbb
lahf
icebp
inc
mov
cltd
add
out
inc
ja
jl
lret
jl
leave
or
fiaddl
push
test
adc
into
inc
ss
pusha
enter
adc
xchg
outsb
add
adc
add
cwtl
je
sbb
sbb
or
sbb
jbe
into
aas
adc
mov
inc
xchg
sbb
inc
cli
add
les
mov
outsb
pop
icebp
repz
icebp
push
push
or
insb
adc
sbb
lock
sub
lahf
cmp
or
jecxz
loopne
xor
call
pop
movsb
nop
aam
mov
popa
clc
xchg
loope
cmp
xchg
xchg
lods
sub
repnz
repnz
cmp
les
push
sub
mov
lcall
xchg
or
cmp
enter
mov
mov
and
push
mov
andl
sub
mov
dec
add
and
in
shl
aas
and
and
nop
jmp
jbe
mov
sub
add
imul
clc
add
mov
lret
bound
pop
adc
stc
xor
mov
add
movswl
icebp
sti
sbb
push
add
ficompl
test
je
ret
imul
adc
sti
cmp
sbb
mov
fdivrl
rcll
lods
mov
iret
mov
push
adc
cmp
test
ss
subl
mov
and
cmp
mov
out
adc
lods
shrl
sbb
add
imul
xor
fwait
mov
pushf
sub
mov
mov
frstor
andb
add
mulps
inc
negl
out
inc
adc
cwtl
cmp
push
fadds
lock
push
push
mov
sub
popf
xchg
sbb
mov
aam
fcom
fdivs
aam
ret
pop
loopne
adc
in
push
lahf
add
or
vpextrw
jne
std
sarb
mov
mov
in
fdivrl
or
data16
loop
repz
lcall
test
cld
pop
es
sub
enter
xchg
mov
in
sub
dec
mov
lock
mov
neg
mov
mov
push
adc
sbb
wrmsr
jge
cmp
add
enter
ss
jmp
inc
lret
loope
fimull
mov
jl
pop
jbe
sbb
xor
jmp
dec
cmp
stos
add
cmp
fs
push
and
test
jmp
sahf
adc
push
xor
call
ds
mov
push
rolb
retw
push
push
add
add
into
push
pusha
les
in
int
mov
push
fnstsw
int
cmp
sti
push
xchg
sub
imul
jo
decl
pusha
push
fwait
lds
cmp
sub
aam
imul
cmp
ss
and
and
mov
mov
in
pop
movsl
enter
jl
rcrb
push
mov
imul
adcl
pop
pop
addr16
inc
or
xchg
imul
push
sub
mov
or
jecxz
mov
iret
inc
sbb
sub
roll
mov
cwtl
shl
lds
jmp
mov
pop
jnp
sub
jge
cmp
and
or
adc
xor
subl
adc
fldl
and
xchg
ret
add
pop
push
bound
lret
push
shrl
pop
push
cli
mov
ljmp
xor
adc
jns
and
xchg
jge
lea
mov
adc
mov
repnz
push
mov
and
push
fdiv
push
mov
test
mov
test
jnp
test
scas
mov
pop
push
cmp
mov
push
adc
mov
fisttps
and
add
inc
sub
cmp
jl
and
xor
repnz
xor
ret
fs
dec
orl
and
test
faddl
push
test
jbe
cmp
and
arpl
inc
cmp
inc
cmp
sub
jnp
sbb
bnd
mov
pop
sbb
mov
xchg
fs
pop
out
mov
mov
adc
or
aas
hlt
inc
dec
add
pop
jnp
out
jl
jnp
cli
dec
adc
stc
add
sti
or
mov
cmp
sub
push
adc
cmpsl
mov
pop
dec
inc
ss
roll
mov
lahf
jmp
mov
stc
mov
sbb
lods
ret
sarl
js
xor
add
or
and
mov
adc
fnstenv
js
movsb
xchg
push
xchg
jne
pop
cmp
shr
ss
or
jle
mov
push
clc
sub
xchg
imul
imul
insl
add
adc
inc
in
or
cmpsl
imull
and
adc
and
pop
sti
int
aaa
jp
adc
leave
push
jg
add
mov
or
mov
stc
faddl
or
jmp
sub
repz
add
sarl
lret
lods
xor
filds
inc
incl
inc
rorl
xor
cmp
mov
lahf
ret
mov
fiadds
adc
mov
and
out
test
pusha
sbb
daa
aas
adc
clc
dec
mov
jmp
filds
xor
push
rcrb
mov
flds
lock
inc
jo
adc
subb
fsubr
push
xor
xor
rclb
adc
es
ja
andl
pop
or
add
xchg
cmc
cmp
inc
xor
cmp
fisttpl
aad
push
adcl
aaa
xor
mov
push
add
or
add
inc
jb
adc
jg
test
popa
dec
lods
dec
icebp
dec
adc
and
xchg
cmpl
mov
add
sarl
xorl
xchg
push
pusha
mov
jbe
cwtl
sub
fs
adc
aaa
push
xchg
mov
hlt
and
jb
add
inc
and
pop
push
fisubrs
mov
or
into
cmp
push
xchg
mov
insb
push
push
adc
rcrl
xchg
xor
rolb
lahf
lret
sub
push
mov
add
or
popa
pusha
fsub
pusha
lret
mov
cwtl
iret
dec
jge
ret
inc
or
mov
adc
scas
mov
or
jo
pop
sbb
push
mov
cmpsl
outsb
push
int
cmpl
addb
outsb
mov
cmp
or
or
sahf
ljmp
lea
clc
jmp
mov
pop
mov
adc
add
jp
or
stc
pop
dec
and
mov
inc
and
sbb
inc
and
mov
pop
cmpl
lret
jle
jge
das
push
xor
sub
cs
cmp
testl
mov
pushf
jge
cmc
mov
inc
dec
or
ret
dec
adc
ret
inc
pop
jo
mov
mov
mov
jmp
fbstp
mov
lods
push
push
shlb
stos
jl
imul
cmp
adc
inc
inc
xchg
push
pushf
outsl
les
mov
or
and
dec
stos
and
push
sub
pushf
bound
into
add
push
mov
in
and
push
ja
fs
inc
pop
push
in
inc
fcom
scas
xor
bound
out
add
inc
lock
fistpl
lods
dec
loopne
add
enter
fcmovne
push
push
jmp
cmp
shrl
jge
adc
out
or
movb
ret
jno
popf
rolb
adc
rcll
adcl
add
cmp
sub
push
es
adc
stc
lcall
inc
mov
mov
or
adc
or
or
jge
jl
mulb
jg
mov
aaa
dec
inc
xchg
sub
in
mov
dec
xchg
sbb
jmp
cmp
jnp
inc
dec
jl
add
mov
daa
mov
or
dec
cmp
sub
and
jg
mov
jge
xchg
movsb
insb
adc
and
sbb
mov
jo
adc
push
cmp
cmp
mov
outsl
cmp
adcl
bswap
mov
mov
rolb
mov
dec
pop
xchg
dec
adc
and
lea
cmpsb
pop
or
cwtl
dec
hlt
lods
mov
jp
cmp
xor
dec
daa
decl
push
orb
xor
scas
push
and
sahf
or
decl
scas
inc
lods
sbb
add
adc
push
iret
loope
add
dec
into
fmull
in
xor
andl
xor
js
pop
cs
xor
out
lock
jbe
push
and
cmp
mov
adc
mov
pop
mov
mov
jnp
sbb
icebp
test
and
inc
lds
lock
cmp
jl
inc
into
jo
and
sub
mov
cld
dec
nop
jge
mov
jae
sub
outsb
sub
or
cld
adc
outsl
cmpsb
dec
data16
pop
or
and
insl
sti
sub
lods
mov
adc
xchg
xchg
sub
test
iret
mov
mov
pop
pop
jnp
lock
push
jns
shlb
divb
mov
repnz
daa
jne
test
inc
xchg
push
jbe
std
mov
add
dec
push
dec
fnclex
dec
jl
cltd
frstor
mov
cmpsb
push
negb
les
jle
js
lds
jp
je
mov
push
ret
enter
sbb
data16
sub
push
mov
mov
jg
xor
cmp
jmp
adcb
lret
cmpsl
cmpsb
add
add
jecxz
test
push
mov
outsl
jns
pop
icebp
pusha
sub
into
aad
jmp
in
add
or
or
sbb
push
or
add
ljmp
xor
clc
adc
stos
push
and
push
imul
jb
ret
aam
arpl
fwait
sub
pushf
mov
cwtl
mov
inc
xchg
add
mov
xchg
shrl
sbb
dec
sub
pop
jge
lahf
ret
dec
jo
jae
add
push
or
and
sbb
pop
xchg
repz
or
dec
adc
imul
xor
sti
add
push
pop
or
ret
cvtpd2pi
notl
test
inc
mov
mov
cmpsb
push
inc
enter
sub
add
arpl
mov
dec
data16
adc
inc
dec
pop
inc
insl
ljmp
arpl
cwtl
xchg
outsl
or
inc
sti
daa
fstps
adc
mov
mov
add
cmp
ja
aad
cmp
lds
sub
or
daa
call
inc
mov
xor
or
sub
jo
pop
dec
stos
push
movb
jae
cmp
ficompl
add
dec
jmp
cmp
or
dec
and
dec
and
pusha
adc
xor
imul
pushf
push
in
xor
jbe
roll
mov
sub
pop
xor
dec
bound
mov
nop
ljmp
fs
cmc
sub
jmp
cmpb
mov
push
fs
dec
xchg
jno
dec
call
or
jo
notb
xorb
pop
push
scas
dec
adc
insl
fisubrs
push
nop
adc
add
pop
inc
push
ljmp
jnp
insb
inc
adc
pop
cltd
arpl
mov
cmpsb
pop
cmp
arpl
cmp
push
or
and
sysexit
add
xchg
mov
pop
js
in
jne
or
or
jmp
dec
dec
cld
dec
xor
out
xchg
sbb
push
lret
push
in
fstpl
inc
push
xor
movswl
fdivl
mov
movsl
jo
jle
daa
mov
popa
in
mov
xor
sub
js
test
pusha
lods
leave
in
add
mov
ret
subb
cld
cld
sub
or
xorb
mov
push
js
and
lcall
das
into
and
fs
add
test
xchg
mov
jge
fldcw
into
sub
sub
or
mov
imul
xor
cmc
test
fstpt
cmp
gs
dec
sbb
cmp
fcoms
inc
lcall
test
or
mov
inc
imull
dec
fs
test
push
jns
cltd
test
cltd
mov
mov
add
xor
shl
sub
pop
dec
shrb
dec
insb
arpl
xor
andl
pushf
jns
jb
stos
lea
mov
mov
subb
arpl
stos
adc
hlt
xchg
add
cmp
ss
shrb
je
notb
pusha
arpl
adc
dec
pushf
cmp
mov
pop
in
lea
and
xor
mov
dec
push
pop
push
xlat
xlat
pop
loope
imul
and
jae,pn
add
sub
rorb
xor
and
scas
lds
xchg
xor
ss
cmp
or
dec
sbb
jl
lahf
sub
cmpsl
inc
testb
das
stc
subb
pop
lock
mov
pop
add
xlat
mov
es
jo
icebp
mov
sub
fwait
mov
fcomp
or
imul
push
les
mov
add
push
push
push
mov
adc
mov
rcll
fstps
movl
insl
and
mov
push
ret
ja
popf
adc
lret
push
imul
test
mov
addr16
enter
adc
lahf
fadds
adc
je
jl
andb
js
fsub
adc
fwait
aad
push
xor
mov
dec
sub
pop
add
je
mov
fsubl
in
addr16
arpl
shlb
leave
add
pop
jo
call
cli
mov
cwtl
arpl
and
dec
push
or
mov
mov
les
das
imul
add
rcrl
add
shrl
jo
hlt
push
sub
test
dec
mov
movsl
ffree
outsb
sub
or
lea
stos
mov
mov
popl
ret
or
sub
cmp
mov
popa
nop
movsl
push
dec
dec
cwtl
inc
lds
lock
pop
sub
jo
sub
or
cmp
ja
rcrl
adc
pop
xchg
sub
dec
mov
cli
shlb
mov
push
sub
fidivrl
gs
add
adc
sbb
push
fwait
aas
sbb
add
repz
jno
xlat
into
rorb
repnz
inc
fucomp
add
pop
je
rcrl
push
adc
mov
add
test
dec
sub
subl
xor
jae
or
push
rcrl
rcrb
add
and
mov
add
add
mov
mov
cmc
std
js
jnp
xchg
xor
sub
ss
shrl
je
and
stos
ror
add
adc
sbb
and
adcb
js
or
adc
test
or
test
push
call
sbb
shlb
mov
shrb
shll
add
rorb
jp
clc
cwtl
outsl
mov
push
inc
push
xchg
push
and
add
pusha
jmp
push
add
xor
lret
fs
dec
je
cli
inc
es
fnstcw
and
xchg
out
sbb
and
clc
loope
sahf
add
pushl
loopne
sbb
jne
sbb
jb
sbb
xorl
cmp
cmp
sarb
daa
mov
das
inc
sub
mov
push
or
sbb
sbb
gs
in
sub
outsb
cmp
mov
mov
sbb
cmp
xchg
jge
add
lea
outsb
out
dec
cmp
mov
sbb
push
movswl
inc
fidivrs
enter
and
sti
and
add
or
jmp
cmpl
xchg
shll
out
testl
lea
shrl
mov
add
cwtl
sahf
cli
std
push
mov
fmull
mov
icebp
cmp
jl
xchg
sub
adc
clc
cltd
mov
mov
adc
lret
lds
xlat
and
repz
xor
and
cli
push
mov
mov
dec
cmc
out
fmull
pop
pusha
adc
or
pop
aaa
dec
xorb
push
jmp
mov
pop
mov
stos
rcll
jl
dec
ja
mov
pusha
nop
daa
ljmp
fmull
nop
xor
sub
pop
xchg
lock
fs
mov
pusha
mov
in
push
add
lods
sahf
hlt
dec
cmp
push
ret
mov
imul
dec
mov
jmp
adc
pop
dec
xor
sbb
sub
pop
lret
and
xorl
inc
mov
xor
test
add
pusha
dec
jae
adc
aam
lahf
pop
adc
push
or
jbe
hlt
mov
xchg
enter
into
mov
fmul
jbe
mov
pusha
sub
in
sub
mov
inc
test
xor
lea
inc
outsb
sub
rclb
arpl
aaa
mov
clc
vmovupd
mov
mov
jne
mov
sbb
iret
pop
inc
in
lea
pop
and
mov
jo
clc
dec
adc
push
inc
lea
or
jg
ja
pop
sbb
and
add
mov
mov
add
cmp
mov
sub
arpl
dec
shlb
mov
mov
jg
mov
hlt
jne
inc
sbb
push
xor
push
les
pop
push
xorb
and
jns
cli
cmpsl
je
repz
jbe
mov
inc
add
je
add
sub
dec
push
pop
push
clc
jg
mov
ss
xor
or
cmpsl
adc
lcall
dec
mov
insl
jb
inc
fucomi
adc
add
inc
mov
sbb
test
dec
roll
push
hlt
lock
lock
sbb
or
mov
cmpsl
cmc
hlt
jg
ja
cltd
sbb
fcomip
lock
cmpb
xor
lock
sub
cmc
daa
pop
push
add
ljmp
jo
sub
jbe
dec
cmp
fsubrp
testb
push
add
inc
jecxz
sbb
gs
imull
jbe
cmp
pushl
mov
jnp
adc
out
aas
aam
inc
popa
in
mov
cmp
psadbw
ret
mov
in
fimuls
faddl
add
fld
inc
cld
fimuls
adc
inc
call
cwtl
adc
out
imul
xor
adc
inc
outsb
or
in
dec
push
sub
or
xor
and
xchg
mov
in
jbe
movl
pop
iret
fwait
inc
sub
dec
push
pushl
lea
cwtl
popf
test
jns
adc
add
jp
aas
add
push
les
out
pop
fdivl
mov
daa
jne
jecxz
or
add
aaa
iret
or
in
dec
addl
mov
pop
cmpsb
mov
mov
out
mov
movl
or
adc
aaa
cwtl
test
sarb
jnp
xor
insl
or
sarb
popa
adc
mov
clc
xchg
lret
pop
mov
jno
js
dec
lods
mov
ret
cli
dec
and
jmp
lahf
mov
and
enter
cmp
dec
sbb
mov
xchg
cld
inc
push
jo
inc
adc
inc
rolb
inc
mov
or
sbb
cmp
repnz
shrb
aad
push
inc
sub
data16
cltd
sub
jbe
fwait
imul
mov
imul
mov
jl
sub
add
mov
jo
jae
ss
inc
outsl
push
xchg
sub
dec
in
dec
add
std
mov
adc
test
mov
fsubrs
push
mov
cmp
jmp
data16
es
faddl
or
fwait
push
xchg
movsb
pop
adc
mov
movsl
dec
cwtl
fistpl
cli
push
out
and
dec
sbb
icebp
sbb
in
sahf
mov
push
lea
lods
sbb
rorl
std
pushf
jne
or
jae
insb
movsl
pop
lcall
push
and
lcall
jge
insl
push
insb
fstps
mov
or
dec
and
inc
pusha
mov
adc
xchg
mov
sub
add
push
lahf
cltd
xchg
cld
filds
mov
dec
inc
adc
inc
fdivr
pop
hlt
jmp
shl
imul
scas
jns
lds
fsubl
and
lock
clc
out
shlb
fmuls
in
dec
sub
aam
adc
and
data16
sub
aam
adc
and
sub
pop
xchg
in
xor
call
in
in
jo
loopne
in
imul
enter
mov
out
adc
shlb
mov
pusha
les
mov
inc
faddp
sbb
sbb
and
andl
sbb
mov
push
sub
cmpsl
aam
push
imul
cld
cld
and
sbb
inc
fwait
inc
or
fstps
fnstenv
repnz
pop
sub
hlt
bound
adc
xchg
xchg
in
call
andb
mov
push
jnp
pop
dec
mov
inc
xor
jns
sub
mov
subl
aas
xor
jne
pop
sbb
test
loope
fiadds
sub
adc
arpl
repz
xchg
aaa
jge
or
mov
outsl
jns
add
adc
arpl
mov
or
xchg
jge
mov
xchg
cld
outsl
das
and
lods
and
mov
gs
lock
in
push
dec
and
add
aaa
push
enter
add
repnz
adc
ss
lds
dec
inc
inc
sahf
mov
imul
out
dec
pop
xchg
inc
repz
aas
pop
sub
aam
mov
push
ret
int3
cmc
jne
daa
rolb
mov
clc
adc
fdivs
push
mov
lea
mov
mov
dec
imul
pop
xor
mov
dec
inc
push
push
dec
pusha
inc
test
cmp
push
das
mov
fisttps
scas
or
and
rorb
mov
inc
loopne
rorb
inc
jne
dec
lock
stos
sbb
imul
inc
in
jns
pop
and
pusha
shlb
push
xor
ffree
cmpsl
lahf
add
nop
es
imul
push
decb
add
sbb
aas
out
pop
stos
lock
mov
into
out
outsb
dec
xor
loopne
mov
cltd
xor
mov
mov
mov
pop
cmc
lahf
js
fmull
mov
negl
loopne
jge
repnz
sub
pminsw
sti
je
mov
fiadds
arpl
stos
jns
cmp
shl
sub
or
adc
xchg
sarb
add
imull
test
xchg
mov
inc
into
add
xor
lahf
add
sub
sbb
or
fmull
or
out
sub
push
sub
and
push
call
fldenv
cmp
loopne
xchg
ficoml
sub
sti
decl
jp
inc
xor
add
cmpsl
mov
nop
das
xchg
mov
rcr
add
scas
and
ds
scas
dec
pop
push
xchg
add
xchg
gs
fiadds
adc
sbb
sbb
mov
add
enter
das
or
add
pop
sub
add
icebp
xor
inc
xor
adc
leave
mov
pop
incb
xchg
mov
sbb
mov
xchg
fdivrs
sub
fldenv
sub
ja
dec
add
dec
sbb
pop
or
add
shll
xchg
cmp
jecxz
sbb
dec
pop
pop
pop
in
fisubrs
add
enter
sub
sub
mov
popf
jns
or
push
test
xchg
pushf
enter
dec
xchg
xchg
das
or
mov
xor
test
ljmp
pop
call
pop
enter
les
sarb
in
in
fmull
cmpl
or
mov
dec
and
xor
push
sub
and
adc
cmp
and
inc
and
sub
lods
aad
pusha
cmp
pop
stos
cmpsl
lret
inc
and
sub
out
icebp
shl
or
loop
lea
std
scas
outsb
adc
add
out
neg
lea
shl
negl
shrb
pop
add
dec
into
add
mov
das
lock
or
fwait
push
jo
xchg
test
hlt
xchg
data16
push
mov
imul
adc
dec
mov
xor
fisubl
push
mov
lds
out
jo
add
add
jns
cmp
inc
imul
cmp
cmpb
and
jne
ret
out
pop
dec
push
in
int
sub
or
jl
js
xcrypt-ecb
cmpsl
invd
mov
icebp
icebp
or
das
xor
in
or
xor
sub
clc
add
lret
in
lret
and
dec
and
mov
pop
std
inc
add
in
adc
in
ds
fsubrl
add
xchg
test
fnstenv
rolb
les
jg
scas
xchg
xor
loop
mov
push
lret
sti
mov
mov
add
jmp
iret
enter
lret
lret
lret
lret
cmp
add
mov
into
and
sub
out
and
daa
mov
movl
sub
add
hlt
add
pop
fxch
mov
imul
movsb
mov
or
lods
jne
or
cs
push
aas
test
push
sub
aaa
push
dec
add
js
dec
jns
cmp
mov
loop
dec
add
lret
mov
push
or
test
push
add
sbb
imul
cmp
mov
imul
push
xor
add
repz
movl
sub
imul
sbb
pop
push
sbb
jecxz
mov
testb
cmovb
pop
jo
popf
cmpsl
sahf
iret
xlat
push
jg
repz
call
lahf
mov
ret
aaa
sbb
pop
pusha
and
jae
call
and
pusha
or
icebp
add
or
fisubl
pushf
adc
or
punpckhbw
out
scas
clc
orb
push
enter
or
dec
rolb
movsl
in
xchg
dec
xchg
jle
sahf
mov
jne
xor
add
loopne
cli
mov
or
pop
sbb
orl
shrl
adc
imul
inc
lock
or
pop
add
jl
pusha
dec
iret
adcl
adc
xchg
cli
aaa
inc
stos
sub
adc
aam
mov
jp
push
dec
call
mov
and
dec
xchg
ret
sbb
rorl
clc
cmpsl
add
icebp
and
mov
pop
lcall
data16
inc
int
sbb
xchg
adc
cmp
mov
addl
inc
inc
scas
mov
xchg
out
mov
inc
sub
xchg
sub
inc
jecxz
sbb
sbb
popf
cmp
hlt
or
repnz
inc
shll
sbb
and
cltd
and
data16
mov
dec
popa
addb
dec
inc
sbb
sbb
jbe
sub
jle
call
cmpsb
push
xchg
or
add
ret
call
jg
inc
popf
sti
pop
stos
outsl
dec
movzbl
rcll
inc
jns
cmp
les
add
pop
and
lods
in
cwtl
popa
xor
dec
inc
sbb
nop
inc
and
add
nop
add
push
mov
nop
sbb
in
and
sahf
mov
insb
xchg
mov
push
adc
xchg
ja
aaa
je
or
and
les
xchg
mov
adcl
cmp
xchg
mov
movsb
jbe
or
dec
xchg
push
jg
and
cmp
jmp
pop
dec
les
inc
fldenv
mov
rcll
cmp
inc
aaa
xchg
jae
fldl
sti
xor
add
inc
ds
inc
iret
mov
imul
add
push
ss
int3
sub
adcb
ja
jp
iret
xchg
pop
push
adc
push
or
and
cmc
je
fmuls
xchg
jno
leave
mov
adcb
rorb
push
inc
stc
lods
push
xor
ss
jmp
pop
cmp
loop
cmp
ds
out
pop
enter
pushf
jbe
xchg
add
iret
inc
pop
jl
mov
inc
push
rolb
add
add
sbbb
dec
inc
pop
jb
loope
add
aad
out
test
adc
decl
and
scas
and
sti
or
inc
or
add
mov
adc
push
adc
in
push
jmp
add
adc
lock
inc
cmp
ss
leave
add
xchg
dec
imull
adc
mov
lcall
jecxz
xchg
stc
cmp
push
jecxz
adc
adc
dec
loope
pop
sbb
es
dec
negl
mov
int
mov
adc
add
mov
dec
and
fmul
nop
mov
add
or
pop
imul
nop
in
je
cmp
cmp
push
or
clc
or
ja
arpl
in
cmpsb
jp
mov
cmpsl
pop
add
or
ja
stc
dec
daa
dec
pop
add
mov
jl
clc
popa
dec
cld
mov
inc
subl
xor
jae
dec
push
in
xlat
fnstenv
or
xor
push
mov
cld
push
push
add
xchg
lea
sbb
lds
fbld
pusha
xor
inc
mov
mov
add
inc
mov
adc
add
lds
mov
cmpsb
adc
sbb
and
cmp
sbb
sbb
sbb
pop
xchg
gs
sbb
sbb
in
cwtl
mov
add
roll
and
and
cmp
nop
and
es
add
sub
fsub
es
inc
faddl
xlat
mov
adc
or
and
and
xor
jge
jno
call
mov
mov
inc
inc
pushl
mov
sub
xchg
popa
or
or
add
inc
in
out
add
pop
xor
mov
add
add
push
jge
inc
dec
push
fadd
orl
cltd
add
ret
test
jo
inc
pop
xor
adc
arpl
test
in
fcmovnbe
mov
xor
testl
jns
jecxz
jo
pop
xchg
dec
dec
dec
inc
adc
cmp
lds
push
push
mov
pusha
xor
nop
push
mov
add
addl
add
ret
adc
fistpl
inc
xor
js
fidivrs
dec
add
popf
xor
enter
mov
sti
jmp
dec
sub
popa
nop
pop
popf
enter
and
mov
cmp
rorb
pusha
add
xor
and
cmc
pop
dec
sbb
and
cmp
and
je
sti
add
inc
jmp
mov
adc
adc
sbb
dec
loopne
rol
int3
das
jno
bound
jbe
int
add
insl
and
ljmp
or
adc
push
adc
sbb
or
pop
lcall
sbb
xor
test
std
lds
mov
shl
mov
jl
mov
or
add
inc
cmp
sbb
pop
and
adc
lods
or
movsb
roll
dec
inc
call
push
adc
xor
add
pusha
rcll
push
or
add
jmp
nop
mov
adc
arpl
rolb
imul
in
add
inc
mov
popf
nop
lds
ja
test
ja
inc
add
jge
or
jb
idivl
add
push
add
dec
bound
imul
adc
aaa
sbb
push
jbe
xchg
les
inc
idiv
out
or
push
push
mov
dec
pop
mov
add
or
or
data16
and
std
das
or
loope
enter
adc
jp
mov
pop
orl
sub
not
adc
mov
fistpl
lret
jno
fcomi
inc
out
into
in
mov
repnz
and
jno
ss
adc
pop
and
or
je
std
pop
aas
mov
gs
inc
add
fidivrs
out
add
test
lcall
or
sbb
shlb
push
mov
stos
add
add
add
arpl
lea
jecxz
adc
rcrl
aaa
sti
or
add
in
mov
dec
aad
jmp
cs
push
outsb
pop
or
inc
cmp
or
xlat
pop
nop
dec
outsb
mov
dec
aam
xchg
push
cmp
repnz
ror
test
fmulp
mov
xchg
add
or
pop
mov
bound
test
mov
aas
pop
inc
add
dec
xchg
in
or
and
or
xchg
addr16
or
mov
jb
xchg
cld
clc
hlt
and
xchg
lds
jmp
cwtl
gs
mov
rcl
cwtl
test
repz
outsl
pop
je
xchg
adcb
mov
pop
and
pop
mov
add
push
jl
or
xor
mov
aad
mov
imul
fadds
jae
hlt
push
mov
pop
adc
adc
jle
mov
jb
dec
or
xor
inc
ret
test
rolb
cmpb
push
jnp
inc
push
lea
mov
add
or
mov
add
push
das
pop
les
scas
ljmp
mov
inc
aaa
movsl
or
mov
add
enter
inc
mov
popa
xor
andl
arpl
xor
mov
adc
xchg
out
or
add
pop
rorb
adc
gs
jbe
inc
loope
adc
adc
ds
lock
cmpb
add
dec
pusha
sbb
subb
test
adcb
cmp
mov
sub
dec
add
mov
xor
mov
pusha
loop
test
push
inc
lahf
or
sub
pop
xchg
rorb
out
orb
mov
fsubr
subb
mov
nop
hlt
shl
mov
insl
sbb
test
fsubrs
into
mov
fildll
xor
jmp
arpl
lock
loop
mov
adc
out
pop
mov
pop
or
clc
sahf
hlt
mov
lods
mov
lret
mov
inc
dec
inc
fwait
cmpsb
ret
addr16
adc
mov
test
xor
mov
push
jmp
mov
pop
push
adc
clc
mov
pop
push
arpl
rorb
push
int3
jmp
and
sub
aad
inc
cs
sub
adc
les
popf
pop
rsqrtps
inc
add
and
add
call
dec
notb
adc
pop
jb
movl
test
dec
jbe
cld
sub
call
and
xchg
test
push
xor
andb
inc
orb
in
xchg
pop
mov
das
test
cmp
xchg
adc
jp
addb
test
jns
add
mov
mov
inc
dec
cmp
mov
incl
or
shrb
mov
xor
add
xchg
enter
sbb
js
aaa
inc
je
clc
dec
hlt
push
jo
push
xor
cs
sub
mov
outsl
cmp
pop
dec
xor
push
lds
sbb
sbb
mov
or
loope
dec
in
xor
add
add
repnz
movsb
shll
push
orb
lea
or
lcall
add
add
or
add
popf
xor
add
or
repz
dec
cli
int
jge
pextrw
inc
ret
aaa
pop
and
test
dec
adc
daa
test
add
das
inc
rolb
lock
out
cmp
dec
dec
fadds
movsb
out
das
push
cmp
and
inc
rolb
and
sub
int3
and
bound
repnz
repz
fistl
xchg
jbe
dec
xchg
or
pop
add
mov
stos
pop
push
xchg
xchg
fsubl
adc
adc
pop
inc
or
push
adcl
xchg
lahf
es
iret
in
inc
and
in
in
cmpsb
and
mov
xor
nop
mov
leave
out
jo
mov
in
push
sti
test
or
js
push
push
add
outsb
mov
add
or
mov
aaa
mov
movsb
es
cmp
in
add
adcl
mov
mov
scas
out
dec
popa
aas
jb
lret
xor
sbb
lret
pop
adc
xor
adc
inc
les
loope
sbb
lds
jne
pop
jg
mov
add
xor
add
fstps
mov
mov
mov
cmpb
inc
fcoms
fs
ss
adc
adc
andl
cli
sbb
loop
rorl
test
pop
ljmp
mov
sub
sar
jns
xor
cmp
xchg
out
mov
or
js
jne
add
add
sbb
add
daa
jnp
push
add
pop
pop
fidivl
sub
inc
xchg
sub
decb
sahf
cltd
sub
popa
imul
add
cmp
sub
dec
je
add
pop
lret
ds
rolb
mov
sbb
mov
adc
jbe
cltd
mov
add
push
nop
pop
and
xor
or
aaa
add
test
shll
data16
push
movsl
movl
and
repz
pop
adc
adc
cltd
pusha
mov
movsl
sub
inc
ficoms
jl
dec
and
cmp
hlt
pop
mov
cwtl
mov
jbe
sub
cmp
jge
mov
add
mov
or
push
jae
mov
jb
daa
out
es
and
sbb
je
inc
add
pop
adc
mov
jno
dec
mov
lock
stc
out
adc
les
mov
xchg
dec
mov
sarb
xchg
push
cmp
adc
adcb
jbe
call
pusha
fyl2xp1
push
or
jo
int3
lea
loopne
inc
xchg
fsubs
shrl
lahf
pop
pop
or
fldcw
mov
inc
cld
aam
imul
mov
mov
jle
ljmp
add
lods
push
push
movsl
cmp
adc
or
nop
fnstsw
mov
push
push
mov
dec
jecxz
js
rcll
adc
cmc
mov
and
jg
xchg
popa
inc
mov
adc
pusha
fiaddl
fdivl
adc
or
add
sub
loop
jg
mov
test
xchg
inc
or
mov
das
sbb
mov
xchg
jle
mov
and
cmp
addr16
cmp
frstor
enter
xor
adc
sbb
mov
inc
cmp
dec
and
mov
pop
sbb
xchg
es
mov
cmp
inc
fwait
adc
sarb
enter
js
cltd
add
xor
mov
mov
inc
sbb
or
repnz
or
fcoml
and
outsb
fstl
mov
cmpsl
mov
xor
add
adc
pop
jo
lea
sub
popl
push
or
and
mov
jmp
imull
shlb
pushf
add
inc
bound
jbe
xchg
and
aam
or
fidivs
mov
and
cld
ljmp
push
dec
mov
js
fdivrl
movl
xchg
xlat
ud1
out
cmp
dec
hlt
pop
mov
mov
mov
aam
out
cmp
cmc
mov
adc
lea
fnstcw
and
or
leave
mov
push
add
sub
ret
movsb
pop
shlb
adcb
sbb
mulb
clc
xchg
push
xor
sub
nop
push
popa
inc
iret
add
add
inc
stc
add
or
test
jno
repz
or
add
pop
xchg
sbb
push
mov
aaa
mov
dec
adc
test
dec
mov
faddl
and
jmp
inc
hlt
sahf
inc
inc
fisubrs
xchg
sahf
int
inc
pop
dec
out
out
xor
adc
sbb
push
sbb
inc
loop
mov
dec
add
sbb
pop
out
or
pop
cmp
or
mov
mov
test
adc
cmp
test
leave
and
jns
add
cs
and
and
mov
fwait
notb
add
ds
mov
or
cmpl
iret
andb
rolb
das
cmp
inc
aam
adc
pop
sbb
sub
mov
idivb
pop
push
std
pop
out
popa
sub
decl
xor
rcrl
sub
ret
mov
insl
nop
in
add
outsl
mov
jne
mov
bnd
sbb
xor
mov
addr16
popa
add
xchg
outsl
mov
pop
test
loop
sub
sub
ret
imul
sbb
aaa
pop
push
jmp
dec
or
mov
adc
fcoms
insb
jae
into
mov
dec
loopne
adc
mov
and
popf
add
cli
cmpsb
inc
sbb
lods
fs
popl
leave
leave
adc
ret
leave
leave
dec
or
add
and
sbb
inc
ret
dec
add
inc
shlb
adc
dec
ret
xchg
pop
push
leave
and
dec
sbb
outsl
inc
or
shrl
and
and
cmp
jg
cltd
mov
lea
inc
jp
xchg
ja
orb
mov
fucomip
push
or
mov
test
lods
test
lea
jnp
inc
aas
push
lret
add
pusha
test
loope
cmp
or
add
push
lcall
add
faddl
addr16
xchg
jge
inc
cmc
popf
push
add
inc
jg
dec
fsubrl
dec
jbe
jo
std
insl
jg
mov
add
or
es
mov
dec
mov
sbb
adc
xor
add
adcl
fstpt
roll
sti
repz
incl
jne
inc
cmp
jnp
leave
mov
and
jmp
daa
add
push
jg
movsl
iret
add
or
and
nop
adc
rolb
add
mov
sub
sub
sbb
push
add
or
scas
mov
subl
mov
sahf
or
cmp
mov
out
sub
adc
add
movsb
xchg
jbe
cmp
mov
daa
and
add
add
add
push
add
cld
push
nop
or
or
add
adc
insl
xorl
mov
jmp
mov
loopne
push
sub
adc
push
dec
ljmp
add
xor
sbb
jno
cmpb
addr16
inc
sub
mov
nop
dec
fcoml
inc
push
mov
mov
int3
jae
jge
mov
ljmp
xchg
and
sbb
mov
and
jns
jbe
mov
data16
add
mov
clc
adc
lods
xlat
push
push
mov
inc
sub
adc
leave
add
add
pop
les
insl
mov
mov
pop
shl
pop
push
addr16
out
add
add
xchg
xor
je
leave
cmpsb
push
cmp
sbb
bound
stos
inc
sarb
xor
icebp
pop
bound
movsb
xchg
dec
and
lock
fst
xchg
ljmp
push
mov
stc
and
mov
xlat
loopw
xchg
adc
adc
dec
sub
mov
mov
and
data16
cmp
nop
dec
sbb
es
push
sub
addr16
js
lcall
cmp
adc
mov
jecxz
jno
inc
jmp
in
ret
sbb
mov
jb
cmc
mov
adc
mov
adc
push
jne
bound
adc
pop
or
sbb
jmp
adc
mov
or
adc
sub
or
lods
add
inc
or
in
pop
shll
and
adc
or
das
mov
push
adcb
adc
das
cmp
adc
add
xor
mov
push
push
out
push
dec
cwtl
sub
xchg
inc
mov
pop
test
je
or
loopne
ja
cltd
or
adc
xor
or
pop
adc
enter
cwtl
sbb
mov
cs
stos
sarb
mov
cmp
cli
xchg
pop
dec
push
dec
lods
and
aas
pop
int
es
push
sbb
mov
push
cmp
test
cmp
add
aas
es
and
xchg
lods
dec
sbb
cmpsl
hlt
xor
push
outsb
insb
xchg
js
test
xor
jbe
add
add
fistl
adc
out
cmpl
adc
scas
push
xor
inc
sbb
xchg
add
mov
test
cwtl
ss
dec
addl
and
ja
rol
add
mov
inc
fisttps
mov
xor
mov
out
xor
push
pop
ljmp
rorl
ds
movl
sti
shll
orl
xor
push
out
xor
push
lock
stc
pop
sub
in
mov
adc
ljmp
lea
ficoms
push
call
sahf
das
xor
add
and
nop
mulb
movsb
ret
pop
dec
or
outsb
lock
jg
movl
sbb
cwtl
mov
loopne
xor
push
xchg
les
cmp
in
inc
fistps
jg
sbb
xor
fs
dec
gs
fsub
js
outsl
xor
push
and
adc
cmp
or
iret
jae
jecxz
pop
mov
mov
mov
sahf
enter
xor
cmp
add
fimull
cwtl
lock
outsl
popa
pop
push
lret
and
in
lea
push
lock
mov
inc
push
mov
call
cmp
dec
or
xor
push
lods
loop
xchg
test
sarb
test
cmp
outsl
insb
sub
mov
test
rclb
enter
adc
mov
inc
mov
orb
pop
inc
rorb
jb
rorb
movsb
lods
out
mov
shll
sbb
orb
pop
outsl
add
nop
add
pop
rcl
inc
mov
cmp
dec
adc
inc
mov
adc
dec
xor
sbb
lock
cmp
or
mov
push
add
xor
int
push
cltd
iret
pop
mov
sub
sbb
addr16
xor
mov
fadds
movb
jo
movsl
xlat
adc
adc
ljmp
loopne
jg
and
xchg
in
jmp
mov
imul
jg
jle
add
rol
inc
jge
fildll
jo
push
adc
lds
js
lock
in
insl
push
mov
arpl
aam
xor
add
insb
push
mov
rorb
sbb
pcmpeqd
xor
mov
cli
movsb
jmp
loope
int
ret
cmp
pop
mov
hlt
xchg
xchg
adc
enter
rolb
cmp
and
sbb
cmpsb
std
popf
xchg
add
pop
add
mov
dec
icebp
sub
mov
fsts
and
dec
ja
cmpl
shll
mov
add
mov
and
push
or
es
addb
push
daa
jne
and
out
shl
lds
aas
pop
jb
pop
in
inc
and
jl
stc
or
cld
or
ds
adc
cmp
andb
fdivrl
inc
jmp
daa
popa
adc
out
insl
sbb
add
leave
dec
jb
and
mov
inc
aam
and
mov
push
xchg
cmp
dec
sysenter
cmp
dec
inc
mov
mov
mov
dec
and
add
cmp
pause
add
add
add
add
mov
xchg
lods
inc
icebp
or
in
call
leave
in
bound
or
mov
and
fisubl
mov
stos
dec
pop
cmc
pop
add
xor
lods
xchg
adc
or
adc
mov
cmp
push
je
scas
lods
or
hlt
pop
dec
int3
sbb
je
movl
dec
xor
mov
add
ret
add
cmp
shll
inc
inc
sub
jmp
xor
mov
enter
or
or
dec
push
dec
in
adc
test
cmp
sbb
bound
xor
gs
pusha
test
sub
jne
add
test
fistpll
jbe
push
pop
cmp
mov
jbe
inc
mov
rol
or
cmp
jg
push
aad
popa
xor
test
add
int3
aaa
adc
dec
popa
jno
out
scas
sbb
clc
mov
jl
or
jge
sub
xor
jl
and
add
xchg
or
shr
pop
sbb
sbb
pop
adc
fcoms
jne
gs
inc
jmp
test
add
pop
inc
push
adc
mov
adc
sbb
stos
or
add
filds
add
fisubrs
lea
push
jg
push
sbb
adc
add
cmp
push
lea
loop
je
ss
mov
or
mov
jle
add
cs
mov
iret
or
adc
jne
pop
adc
add
loop
gs
cmp
and
xor
push
enter
xchg
test
mov
mov
lds
idivl
iret
push
and
mov
xchg
lds
arpl
add
fistpl
and
les
ret
xor
add
aam
iret
or
arpl
insl
lods
lea
jl
dec
and
les
dec
test
clc
mov
jl
add
shl
add
mov
add
pop
sbb
jl
adc
shlb
loopne
js
sbb
push
sbb
sbb
xorb
or
jmp
cmp
and
and
push
js
xchg
xchg
adc
push
insl
pop
inc
jns
inc
dec
sub
ret
cmp
addr16
or
inc
and
mov
test
fcomip
int
sbb
add
mov
add
test
add
or
pushf
or
loope
test
jae
mov
repnz
jl
in
in
add
add
leave
leave
test
or
add
aaa
movsl
and
in
loopne
inc
pop
and
inc
jb
or
adc
jns
lock
lahf
sbb
stos
mov
bound
add
adc
cmp
stos
gs
movb
mov
aam
jl
mov
xor
jl
ss
test
pop
out
pop
pusha
ret
push
mov
fs
enter
into
push
insl
xchg
dec
push
dec
dec
lea
mov
je
adc
nop
in
push
ret
pop
sub
pop
popl
bound
loope
mov
test
mov
outsb
or
incl
jnp
push
sub
rorl
sbb
stc
add
cmp
scas
adc
sbb
xor
dec
sbb
dec
sbb
inc
inc
cs
lahf
add
xchg
arpl
or
arpl
dec
mov
push
movsl
push
insb
or
rol
bound
xchg
xor
lods
clc
or
mov
dec
and
movl
cmpl
sbb
adc
adc
mov
ret
sbb
or
das
mov
lea
inc
jae
faddl
sahf
and
ja
js
or
mov
mov
nop
mov
pop
push
xor
int3
add
out
xor
outsl
sub
xor
and
lea
sub
sbb
pop
add
sbb
mov
out
arpl
mov
adc
iret
and
mov
pop
mov
out
mov
or
or
arpl
add
or
lods
dec
xor
lock
shlb
jae
push
xchg
and
lea
rolb
push
push
xchg
sub
push
sbb
sti
pop
add
dec
jne
inc
inc
cs
xchg
xor
test
mov
or
shl
aas
jmp
es
sbb
push
or
sbbb
cmp
inc
and
add
js,pn
push
inc
add
inc
fcmove
dec
loope
lret
add
dec
addr16
xchg
sbb
add
sbb
cmp
movb
dec
xor
add
cmp
inc
add
xor
and
inc
sbb
nop
test
and
cmpb
cmpsl
dec
and
in
xor
inc
call
addr16
addr16
mov
rcr
xor
push
sub
in
fimuls
into
fcoms
arpl
mov
xor
test
or
in
mov
int3
or
jno
dec
xor
xor
pop
pop
daa
dec
add
jmp
iret
or
inc
ret
push
mov
dec
les
andb
mov
xchg
pusha
adc
mov
pop
push
outsb
or
addr16
mov
pop
test
cmp
popa
add
sbb
pop
push
add
pop
inc
rolb
mov
push
fisttps
jge
jne
sub
jns
out
stc
or
push
or
pusha
lret
fdivl
lret
out
or
rcll
cwtl
pop
adc
sub
push
xchg
or
or
inc
or
push
pushf
adc
xor
cltd
add
popa
nop
mov
sarb
sbb
sbb
sti
adc
push
or
enter
inc
or
in
sbb
jg
pusha
mov
pop
xor
add
xchg
pop
dec
hlt
adc
subl
push
cli
dec
lock
lock
sub
pop
sub
cwtl
lcall
and
outsl
dec
aaa
jne
mov
aam
jmp
imul
push
andb
cmp
in
sbb
daa
xor
fwait
jecxz
inc
enter
cmp
xchg
lock
lahf
sbb
push
jo
jno
mov
add
outsl
push
or
inc
xor
or
jmp
xchg
loop
inc
jo
ja
xor
lods
loop
lret
pusha
aaa
dec
cmpsl
push
cmp
fadd
cmpsl
fcmovnu
mov
mov
jne
aaa
imul
pusha
dec
cmp
mov
mov
mov
cmp
lock
outsb
pop
aad
cld
dec
sbb
xor
add
movsb
loop
cwtl
pop
push
fistl
aaa
fs
sbb
sub
shrl
xchg
mov
pop
cmp
mov
push
pop
and
mov
incb
inc
xchg
mov
mov
add
mov
lods
mov
imull
arpl
fstenv
dec
inc
inc
xor
xor
sbb
push
lcall
sarb
fmuls
pushf
add
mov
mov
or
mov
les
mov
scas
outsb
ljmp
pop
adcl
add
mov
ret
lahf
adc
cmp
sub
pop
pop
dec
sbb
inc
adc
and
dec
inc
jmp
push
mov
cltd
jne
dec
inc
sbb
push
xchg
inc
movsb
push
daa
or
push
loopne
sarb
pusha
adc
sbb
adc
jae
and
mov
fs
push
rcrb
adc
mov
or
scas
aam
cmp
cwtl
hlt
add
xchg
int
hlt
add
adc
ret
push
and
sub
pushf
push
pop
ret
add
dec
je
dec
flds
lods
lock
mov
cmp
add
inc
pusha
mov
inc
pushw
and
dec
push
cmp
sub
dec
add
xor
push
pop
adc
add
inc
in
push
push
push
or
nop
xor
ja
inc
mov
stos
hlt
xor
test
sbb
clc
or
inc
inc
imull
fiaddl
add
cltd
or
imul
or
cmp
dec
dec
jge
add
dec
daa
arpl
sbb
dec
iret
fcompl
xchg
mov
or
cmp
push
rcrl
and
adc
or
jnp
lock
xchg
push
shrb
adc
xor
mov
jne
jmp
rolb
les
data16
mov
mov
cmp
out
aaa
out
inc
jecxz
bound
mov
in
adc
stc
cmp
enter
pop
mov
jno
cmp
pusha
in
call
and
mov
test
add
xor
xchg
jge
sbb
cmp
jns
bound
push
test
lret
pop
lods
or
inc
adc
or
jne
or
cmp
push
enter
xchg
cmpsb
orb
sub
cwtl
lret
xchg
and
inc
or
xor
mov
xchg
adc
movsl
cmp
or
je
inc
js
xchg
sbb
test
add
lea
cmp
ret
xor
inc
cmpsl
push
inc
or
sub
adc
popa
push
inc
push
sbb
add
add
sbb
mov
and
and
xchg
mov
sub
enter
jae
insb
jmp
jl
sahf
sbb
repz
jle
ljmp
mov
sbb
and
cmp
and
push
and
mov
imul
sbb
inc
or
out
push
lods
or
jae
and
adc
cmp
lock
mov
push
jle
mov
adc
bnd
cmp
push
jo
and
adc
test
mov
jo
repz
dec
and
or
jmp
insb
mov
pop
xor
add
adc
sbb
or
jmp
aas
inc
cmp
pushw
in
js
push
inc
fadds
mov
lock
aam
adc
and
jns
add
jbe
movsl
subb
les
jns
mov
sarb
movsl
sbb
cmp
mov
int3
pop
pop
adc
jecxz
iret
push
cs
add
add
jne
adc
pop
and
pop
leave
inc
lock
adc
dec
enterw
or
dec
inc
hlt
add
jb
sbb
add
cmp
sbb
sbb
dec
or
add
xchg
dec
jb
adc
incl
or
call
pop
out
clc
mov
loopne
scas
xchg
insl
xor
test
xor
pop
or
lock
inc
faddl
or
test
shll
sbb
mov
jle
adc
pusha
mov
add
shlb
mov
push
cltd
sbb
sub
cmp
mov
add
aas
push
mov
jle
add
and
mov
xlat
jno
mov
imul
inc
xchg
mov
xor
bound
das
sbb
insl
ret
and
int
into
stc
mov
or
stos
adc
jle
adc
sqrtps
jg
adc
fldcw
xchg
sbb
and
fwait
inc
cmp
inc
bound
inc
pop
inc
pop
es
stos
in
jb
outsl
jmp
push
test
cld
jo
adc
xchg
dec
inc
add
sbb
dec
popa
jge
lea
pop
sbb
out
sarl
adc
popf
loopne
push
lock
sbb
mov
xor
aaa
mov
sub
fsubp
imul
leave
add
inc
loop
enter
mov
mov
into
aas
adc
sbb
sahf
xchg
xchg
sbb
xchg
mov
stc
add
loopne
cli
aas
adc
loopne
in
cmpb
or
xchg
call
adc
scas
or
fcom
mov
movsl
inc
mov
lmsw
sbb
dec
insl
and
rcrl
xchg
testb
insb
popf
mov
movsb
sbb
fsubr
sbb
in
fwait
add
or
sub
fmuls
rcll
in
xchg
mov
inc
inc
outsl
loope
adc
pop
sub
jle
lds
sbb
lret
into
add
loop
dec
mov
sti
sbb
fwait
or
inc
leave
loopne
fcomps
fsubs
xchg
mov
xchg
leave
jmp
jns
clc
sbb
add
lock
mov
or
push
inc
mov
xor
mov
dec
add
jge
mov
fcoml
hlt
jmp
cld
out
adc
cld
mov
cld
cmp
jge
sbb
mov
jnp
rol
stc
inc
sarb
or
mov
cld
sahf
inc
lock
imul
and
mov
imull
stc
cmp
inc
es
or
or
or
jl
fwait
movl
aas
pop
mov
stc
pop
push
pop
mov
push
cmp
in
sbb
or
dec
adc
mov
fcomps
push
fxch
adcl
pusha
pop
sub
pop
add
or
cmpsb
cwtl
andb
enter
insb
and
aam
mov
cltd
and
add
add
mov
xchg
add
lds
sbb
or
and
into
inc
and
pcmpeqw
mov
pop
clc
and
sub
mov
ja
and
test
mov
adc
sbb
inc
es
mov
clc
inc
cmp
push
add
sbb
push
xchg
rorb
mov
pusha
sub
xorl
daa
cmpsb
loopne
xchg
in
jo
jnp
adc
push
pusha
fsubrs
arpl
pop
dec
iret
jo
pushf
call
inc
xchg
enter
push
movl
mov
push
adc
push
sub
or
insb
mov
cltd
call
push
pop
push
outsb
inc
sub
xor
aam
or
mov
sbb
fs
xor
dec
call
inc
repz
int3
daa
and
cmp
loop
and
aaa
fsubr
aam
push
pop
or
fiaddl
insb
jmp
lock
mov
or
mov
add
inc
inc
inc
cmpsb
mov
push
jl
inc
dec
jl
or
out
aas
js
shrb
jge
mov
aad
mov
add
aam
scas
pop
mov
dec
hlt
jge
int3
sub
iret
js
fst
lcall
cmpsb
lock
xchg
xor
xchg
jno
push
add
and
sbb
ds
leave
test
pcmpeqb
push
mov
dec
fs
and
or
dec
nop
outsl
cs
test
outsb
aas
leave
adc
jmp
mov
leave
rorl
cmp
test
fistpll
fildl
in
add
fwait
icebp
add
sti
pop
cmp
mov
lock
pop
or
sahf
clc
jg
jg
inc
mov
adc
lock
inc
xchg
pop
les
and
add
lock
add
sti
mov
cmp
jp
or
sbb
fiadds
adcb
mov
or
dec
adc
mov
cli
in
dec
icebp
lea
push
lock
adc
sbb
dec
pusha
into
jnp
lret
or
add
rolb
ds
lea
insb
sbb
jb
pusha
sub
out
aam
adc
pop
stc
jmp
jecxz
mov
das
push
fwait
mov
add
and
test
cld
repnz
xor
pop
xor
sbb
sti
ficomps
and
or
or
or
je
arpl
push
adc
addr16
or
out
gs
out
notb
mov
movb
int3
mov
in
mov
jge
pop
pop
loopne
and
or
or
push
xchg
jae
or
or
add
pop
lcall
daa
sub
lcall
dec
dec
adc
lock
data16
das
adc
fcomps
push
fsubs
dec
inc
mov
cs
decl
sub
repnz
or
cmp
subb
sub
cmp
mov
fmuls
add
mov
out
outsl
mov
dec
icebp
sbb
sbb
add
or
inc
movups
int
or
push
insl
sarb
das
xor
cld
mov
and
adc
addr16
adc
js
sbb
add
fsubr
push
adc
rcrb
xor
xor
repz
mov
sub
js
loope
add
mov
popf
sahf
pop
es
clc
add
push
mov
pusha
dec
data16
enter
add
mov
mov
mov
into
data16
mov
ja
cmpsl
sub
lock
add
jne
imul
ja
or
push
jns
inc
adc
cmpsb
jae
sbb
lds
push
xor
dec
sub
jne
xor
out
mov
rclb
call
inc
mov
add
fwait
test
pop
xlat
cmp
leave
xor
jne
or
jnp
inc
sub
inc
adc
mov
jnp
shrb
shlb
adc
clc
push
jmp
push
sbb
fsub
pusha
lahf
and
xor
rcl
pop
jb
and
push
icebp
mov
dec
fidivs
adc
or
rcrb
lock
imul
comiss
xor
push
sub
arpl
andl
push
or
pop
pop
stc
and
adc
cmp
aam
rcrl
dec
xchg
std
pop
cmp
or
nop
cltd
inc
push
rolb
mov
mov
or
or
pusha
pop
lods
mov
sti
ljmp
cli
push
mov
adc
push
fistps
adc
fcmovbe
filds
pusha
addb
mov
adc
mov
xchg
andl
and
loope
mov
sbb
jl
cwtl
inc
insl
and
jmp
fldenv
mov
sbb
xchg
pinsrw
add
cmp
js
jge
and
pop
nopl
adc
mov
shrb
cmp
inc
sbb
shrb
ss
or
inc
iret
lds
and
dec
or
in
jl
jnp
or
add
xchg
orb
in
out
cs
andb
push
sbb
nop
pusha
sub
sub
mov
stos
dec
call
pushf
add
or
push
and
jl
enter
inc
std
adc
xor
pusha
push
pop
pop
inc
adc
pop
repz
test
inc
pop
jmp
clc
cltd
in
adc
add
dec
enter
cltd
rclb
jbe
ds
es
sbb
xor
es
jnp
sti
jg
dec
out
mov
sub
push
testl
xor
int3
and
sbb
adc
das
and
jge
xor
lcall
mov
pop
enter
xchg
dec
sbb
inc
or
xchg
adc
dec
jo
mov
sbb
inc
repnz
loopne
jb
and
fdivs
daa
inc
aam
shlb
daa
inc
jb
int3
int3
and
jl
dec
cs
dec
enter
sub
das
adcl
cwtl
cmp
popf
int3
mov
bound
or
push
push
in
fadds
ds
bound
and
sbb
push
adc
inc
fs
xchg
mov
adc
sarb
jmp
test
nop
leave
pop
jp
ja
mov
imul
imul
jno
push
js
int3
iret
testb
sbb
sbb
jnp
dec
xchg
loope
xor
sbb
and
sub
inc
and
mov
or
pop
sarb
mov
xchg
sub
mov
sub
push
enter
das
fmulp
mov
jno
cmp
or
xor
mov
jne
mov
add
jg
add
addb
add
clc
ja
adc
push
and
lea
lcall
fidivrs
or
push
mov
mov
jno
test
jae
mov
pop
xchg
lea
pop
pop
insb
push
dec
dec
std
mov
sub
fwait
sub
inc
xor
inc
lret
mov
and
push
mov
dec
pop
notb
jo
mov
adc
popl
push
lcall
push
cmp
sbb
dec
cmpb
mov
inc
and
jae
cmpb
adc
jno
push
or
test
mov
stc
xlat
imul
pop
sub
jecxz
lcall
out
mov
int
sub
or
adc
clc
scas
sahf
inc
push
leave
lcall
adc
enter
aaa
mov
dec
adc
fisubrl
jne
xchg
inc
add
insb
and
add
mov
cmp
fbstp
cmp
mov
fcoml
mov
jp
loop
or
rcrb
mov
push
nop
adc
loopne
stos
sbb
movsbl
das
arpl
fstpt
adc
mov
repz
adc
adc
pop
dec
pop
ret
ja
xchg
ret
sar
jne
testl
sbb
test
es
mov
rclb
leave
pop
stos
addb
or
les
fsubl
lods
aaa
sub
js
sbb
xor
mov
nop
clc
les
mov
xor
cmpl
sbb
ss
out
xchg
je
in
mov
inc
xchg
aam
push
test
xor
or
and
mov
inc
mov
add
adc
popa
push
leave
lea
fidivl
ror
mov
push
add
adc
lock
repz
shl
adc
sub
xorb
dec
fst
ljmp
jge
ret
pop
jmp
jle
cmp
jle
and
push
adc
int
dec
fdivp
fcmovne
lcall
and
mov
push
inc
sbb
out
push
addl
mov
sbb
mov
push
scas
aas
incl
dec
pop
decl
push
and
jns
ss
cwtl
push
mov
xchg
dec
sbb
adc
inc
adc
sbb
xchg
inc
push
cmp
sub
cmp
mov
pop
fadd
dec
mov
lds
ret
fdivl
inc
add
loopne
outsl
fs
adc
neg
add
loope
divl
jmp
pop
ffree
fwait
ret
add
insl
jb
inc
aas
mov
jle
mov
imul
lds
inc
mov
std
or
push
in
cmpsl
mov
ret
add
jns
arpl
mov
push
div
sub
cmpsl
mov
push
insl
fwait
mov
adcl
dec
andb
cmpsb
mov
lret
jnp
pop
inc
inc
inc
arpl
push
and
sbb
mov
call
adc
lahf
mov
mov
cmp
cli
pop
and
mov
stos
cltd
xchg
and
pop
xchg
sar
addr16
cmp
cmp
ficompl
inc
sbb
stos
add
add
ficoms
nop
orb
dec
and
movsl
dec
add
test
arpl
sahf
push
mov
push
pop
out
sahf
bswap
test
xor
jae
mov
outsb
daa
jge
negl
add
into
rcrl
les
nop
loop
test
mov
mov
popf
jle
loop
inc
add
xor
cmp
movsl
sbb
mov
xchg
and
cwtl
pop
aam
sbb
jo
cli
and
xor
add
adc
aad
sbb
mov
call
or
dec
dec
cwtl
loopne
enter
call
loop
mov
add
iret
xchg
dec
enter
fisttpll
or
xchg
add
addb
xor
push
jp
cmp
sub
mov
ljmp
cmp
leave
repnz
cmp
add
add
xor
push
and
fwait
inc
mov
sarb
push
or
add
outsb
pop
in
iret
xlat
xlat
mov
xor
jno
popf
test
xor
or
int3
mov
scas
and
cmp
pusha
in
xlat
mov
mov
icebp
subb
sbb
sbb
aaa
stc
push
lea
jmp
or
xor
fildl
cmp
std
xor
lcall
add
or
test
jo
jb
shlb
enter
or
mov
add
outsb
fstpt
pop
inc
dec
xor
mov
dec
adc
inc
inc
cmpsl
outsl
pop
mov
out
lcall
lahf
cmp
cmpsb
repz
dec
cmp
stc
mov
ffreep
pop
adc
ljmp
mov
pop
clc
cs
cli
add
sub
out
hlt
icebp
je
stos
sub
stc
cmpb
add
sub
sub
jnp
mov
pop
mov
xchg
add
sub
cmp
xor
and
jo
int3
test
fiadds
sub
add
fnstsw
fstl
dec
mov
pop
and
incl
aad
pushl
mov
nop
add
lea
push
push
mov
add
sar
sti
mov
dec
or
dec
or
test
xchg
sbb
sub
testl
aam
idivb
push
test
mov
ret
loope
popa
pusha
cmp
pop
and
sti
bound
nop
or
dec
jae
outsb
nop
mov
enter
pusha
pop
pusha
add
xchg
push
inc
or
out
mov
sbb
popa
movsb
jae
and
loopne
or
into
dec
es
cmp
in
jg
rcr
flds
fadds
fstps
push
iret
rcr
aaa
jno
inc
add
sbb
add
sbb
cmp
jns
or
or
daa
loop
rcll
bound
and
loopne
fdivr
adc
fs
imul
or
and
data16
and
sbb
imul
sub
or
xor
int
sti
dec
sub
pop
or
imul
rcrb
lahf
mov
rcrl
mov
add
mov
fmuls
and
lcall
and
cmp
enter
push
inc
fs
cs
rcrl
adc
fs
inc
adc
pop
cmp
add
gs
rcrl
and
nop
ja
bound
in
orb
adc
or
sbb
jns
out
bound
xor
mov
xor
pusha
xor
es
lcall
inc
lcall
lcall
pusha
and
pop
xor
stc
jg
xor
out
aas
adc
mov
dec
gs
lock
or
cmc
popf
aaa
faddp
iret
addb
sahf
fbld
sbb
add
dec
outsl
in
add
out
sbb
rcrb
out
incl
js
inc
pop
or
adc
and
inc
dec
dec
xchg
push
mov
dec
stc
outsb
enter
jp
xchg
pop
pop
push
es
adc
outsl
xchg
pop
push
pop
adc
jmp
lea
notl
jge
mov
adc
dec
cmp
mov
xor
or
inc
mov
pop
xchg
in
loope
dec
dec
xchg
or
pusha
call
jl
sahf
sar
jno
add
push
or
test
pusha
and
adc
and
mov
pop
roll
das
sbb
push
or
and
adc
lea
or
xlat
inc
popf
cwtl
cmp
call
inc
enter
and
and
repnz
movsbl
call
popf
add
test
xor
pop
orb
je
inc
sbb
loope
jb
in
in
mov
nop
test
mov
loope
mov
dec
lock
test
mov
mov
ud0
jl
dec
dec
adc
xchg
test
dec
shll
cmp
adc
jns
jge
stc
aaa
fcomps
add
jg
or
pusha
cmpb
jns
hlt
xchg
adc
inc
inc
pop
add
sbb
jnp
jecxz
mov
mov
lods
cmpsl
push
pop
or
adc
inc
das
xor
cmp
les
lcall
mov
movsl
push
adc
jge
add
sbb
dec
sbb
ret
cmpsl
push
push
push
shrl
pop
leave
sbb
aaa
jns
push
fbstp
cmp
aad
pop
xchg
mov
inc
jmp
add
xor
push
cmp
push
jne
push
cmc
lahf
fisubs
adc
out
jo
incb
idiv
or
sbb
push
popa
mov
inc
pusha
int3
push
push
mov
adc
cmpsl
je
sub
add
push
int3
aaa
cmp
es
or
rorl
or
push
cmp
mov
sti
movd
add
sub
mov
add
xchg
shl
mov
add
or
xsaveopt
inc
mov
test
and
and
push
in
sbb
mov
addb
inc
or
or
pusha
lock
outsl
mov
mov
add
das
pop
arpl
orl
dec
inc
outsb
xlat
sub
scas
jb
daa
and
call
aaa
sbb
push
sbbb
inc
flds
imul
adc
lahf
scas
mov
popf
mov
jne
xor
hlt
push
jno
adc
subl
push
xchg
jp
rclb
lret
xchg
lods
adc
lods
jbe
jo
addr16
mov
lea
test
dec
repnz
jl
hlt
mov
xchg
sub
push
je
dec
mov
or
sbb
insb
mov
cmp
xchg
sbb
sub
or
or
je
jecxz
and
xchg
jge
inc
mov
pop
xchg
pop
aaa
stos
xor
fisubs
add
stc
cltd
popa
mov
mov
add
add
sbb
sub
pop
int
sub
jle
add
mov
pop
xor
inc
push
sbb
movsb
je
aas
jbe
lret
mov
scas
inc
addb
paddd
inc
mov
stos
mov
push
jp
jmp
mov
popa
xorb
adc
in
cmp
lret
cmp
mov
iret
mov
jl
mov
and
dec
pop
lahf
and
rcrl
mov
mov
inc
jmp
and
inc
inc
rolb
adc
xchg
hlt
les
add
repz
jno
cli
mov
jns
xchg
mov
dec
sbbl
xor
add
pop
out
mov
pop
fwait
mov
jo
pop
lea
jg
add
cmpsl
inc
clc
push
das
negl
xor
test
pop
mov
loop
adc
mov
lods
daa
test
test
inc
mov
scas
pop
inc
inc
out
pop
movl
mov
add
or
stc
jl
add
jl
ret
in
adc
or
dec
xor
lret
lret
ja
jl
ret
je
mov
rcll
push
dec
insl
je
lods
popf
jns
dec
imul
lock
in
test
cmp
push
mov
inc
jecxz
out
mov
xchg
xchg
iret
push
cmp
mov
sahf
call
lock
or
mov
mov
insl
push
incb
adc
sarb
adc
jmp
mov
lock
dec
dec
test
stc
addb
incb
addb
decb
pop
aas
and
ja
dec
dec
ja
shll
ficomps
rcrl
dec
cmpb
sbb
adc
adcb
cmp
jmp
cli
mov
inc
xor
sbb
push
inc
inc
push
or
and
in
mov
xor
ret
and
adc
cmp
adc
popa
pop
aam
cs
sub
adc
adc
and
inc
outsl
imul
addr16
out
push
cmp
and
mov
dec
jge
out
push
push
mov
nop
add
stos
fs
pop
push
sbb
push
popa
jne
sub
jns
ja
inc
stos
push
outsl
dec
push
xchg
dec
or
adc
add
mov
cmpsl
ficoml
and
test
add
or
mov
ret
pop
jb
decl
ss
xchg
mov
aam
sahf
test
sbb
nop
das
stc
inc
pop
xor
jmp
mov
in
mov
mov
mov
and
add
shlb
outsb
push
and
inc
push
nop
inc
push
dec
mov
push
mov
popa
filds
add
outsl
lea
nop
or
insl
test
pop
xchg
xchg
call
dec
sub
push
dec
add
add
jnp
pop
movsl
push
dec
sbbb
or
xchg
mov
arpl
and
iret
sbb
jle
rcrb
mov
add
cmpsb
jl
outsl
rorl
shll
sbb
cmpsl
popa
push
or
repnz
inc
pop
mov
mov
ret
add
xchg
push
rorl
ret
jmp
cmp
pop
sbb
cmpsl
pusha
leave
imul
lea
sbb
mov
ja
ret
cmpb
adc
lds
or
push
leave
decl
mov
mov
xchg
mov
es
push
adc
push
dec
fimuls
xchg
nop
xchg
scas
popa
imul
sub
dec
ret
dec
adc
aad
adc
mov
push
and
rclb
mov
flds
sbb
or
in
nop
adc
dec
popl
gs
dec
repz
enter
pusha
cmp
out
add
or
and
insl
lea
scas
adc
push
cmp
insb
pop
fstps
dec
push
aaa
push
xchg
mov
fsts
cs
push
pop
arpl
int
mov
popa
sbb
xor
movd
mov
mov
arpl
mov
insl
push
pop
sbb
iret
add
inc
pusha
jmp
inc
fwait
nop
inc
xchg
xor
or
sub
sub
sbb
sbb
cmp
and
aad
nop
fdivs
or
frstor
xchg
xchg
or
pop
xchg
scas
repz
push
add
and
xor
or
mov
adc
enter
enter
or
cmpsb
inc
aaa
loopne
arpl
inc
lods
push
rcrb
cmp
dec
in
mov
cmpsl
or
sbb
adc
xor
push
pop
shlb
pop
and
nop
divl
das
roll
jo
or
mov
inc
pusha
cmpsl
adc
adc
pop
and
nop
jns
mov
loope
push
idivl
push
mov
fisttpl
fcoms
dec
fmulp
fwait
xchg
jmp
sub
cmp
push
add
add
popf
mov
jecxz
mov
lahf
xor
aaa
xor
bound
push
xor
lea
in
shll
push
pop
incl
idivl
xchg
out
out
mov
in
cld
enter
lahf
or
add
xchg
xchg
sbb
adc
inc
das
and
push
push
inc
pop
scas
pushf
xor
and
test
adc
pusha
xor
addl
push
and
lcall
or
add
sub
aaa
cs
xor
sbb
adc
mov
mov
or
mov
mov
mov
mov
xchg
and
popa
add
mov
mov
dec
imul
and
cmp
js
icebp
pop
pop
push
popa
addr16
push
lret
jo
push
push
ss
outsw
outsl
je
and
mov
insb
sub
mov
leave
sub
jno
insl
push
sbb
xchg
adcb
pop
cmp
sahf
push
xchg
imul
adc
outsb
xor
and
or
inc
sub
jle
jbe
xor
divl
and
insl
and
jb
pop
and
sbb
add
push
mov
inc
push
inc
inc
pusha
jnp
lods
sbb
xchg
dec
mov
cld
sub
xor
fcmovnb
dec
out
or
insl
hlt
fsubr
sbb
cmp
clc
inc
push
and
dec
push
lea
and
pop
out
or
xchg
mov
test
loope
mov
fs
fiadds
or
enter
inc
push
test
lea
jno
movsb
pop
imul
xchg
test
cwtl
or
testb
movsl
dec
mov
iret
adcb
pop
enter
inc
dec
inc
inc
xor
and
push
mov
dec
adc
int3
inc
mov
pop
sbb
subb
mov
inc
shl
adc
push
dec
cmp
adc
xchg
inc
lock
xor
push
daa
push
repnz
adc
mov
and
call
aam
cwtl
inc
in
loope
pop
es
push
sbb
inc
xchg
outsb
and
movl
xchg
push
das
or
daa
int3
out
cmp
add
mov
das
inc
imul
mov
dec
mov
sbb
fstpl
orb
add
cwtl
aaa
mov
pop
fnstcw
push
lock
push
sbb
cmp
and
sbb
loope
adc
cmp
cmp
xorb
sbb
dec
inc
dec
inc
or
out
in
mov
scas
jg
cltd
push
inc
cmp
inc
adc
add
push
mov
push
xchg
hlt
addb
and
cmp
mov
add
jle
fldt
jge
rcr
or
loopne
mov
mov
xor
fs
dec
dec
adc
leave
xchg
sbb
xor
xorl
std
incb
bound
fs
sbb
cmp
mov
ja
xchg
jae
add
ja
int
popa
in
dec
jns
cs
pop
pusha
add
or
push
dec
push
adc
push
jg
push
jae
out
cs
fildl
pop
push
jne
push
hlt
push
insl
mov
jmp
cltd
mov
clc
mov
mov
and
clc
in
sbb
aam
sbb
roll
inc
sar
lock
sub
lcall
pop
hlt
jb
mov
push
dec
lret
hlt
or
pop
cmpsb
std
adc
adc
ss
sub
les
cmp
imul
test
inc
mov
pushf
je
push
test
and
or
pushf
and
lahf
dec
fnsave
sub
push
add
xlat
xchg
or
xchg
and
pop
push
pushf
jg
rcrb
data16
daa
popf
js
nop
add
ret
in
stos
int
push
insb
insl
pop
out
nop
cwtl
inc
push
hlt
mov
jne
mov
mov
je
mov
scas
pop
outsl
xlat
sahf
or
in
pop
mov
and
xor
jmp
pop
sub
test
in
sbbb
nop
dec
push
xchg
popf
push
mov
test
xchg
or
ljmp
mov
or
or
or
cs
xlat
test
pop
sub
aaa
inc
sahf
pushf
sub
push
xchg
mov
mov
or
testb
pushf
pop
sub
adc
adc
sbb
jo
push
test
add
add
fnstenv
subl
aas
push
sub
stc
inc
outsl
fs
jb
aaa
aad
or
sub
push
gs
pop
adc
jl
jne
sbb
adc
or
inc
mov
pop
lock
add
and
scas
or
dec
js,pn
push
insl
or
sbb
stos
xor
jns
out
stos
sub
scas
mov
ds
or
clc
and
jbe
push
dec
outsb
jbe
imul
push
out
imul
mov
sbb
push
inc
push
or
mov
jo
cmp
and
movsb
mov
adc
dec
leave
mov
je
inc
fwait
sarb
inc
dec
push
rcll
sbb
push
lahf
pop
and
mov
test
shlb
or
leave
das
sub
mov
outsb
punpckhbw
add
movsl
addb
mov
sub
add
mov
das
inc
dec
mov
aad
mov
inc
lret
add
and
push
push
gs
clc
xchg
push
add
fs
mov
add
cmpsb
adc
push
or
push
pop
cltd
add
add
jne
dec
inc
dec
dec
les
dec
or
xchg
loope
xchg
mov
in
jo
jne
add
jns
or
add
pop
cltd
or
jo
push
xchg
sub
pusha
xor
imul
add
test
or
inc
mov
shrb
pop
mov
add
fidivs
pop
xor
lods
pop
xor
jg
pusha
jmp
in
or
imul
xchg
push
jo
xlat
dec
insl
or
mov
cmp
jp
insb
jae
data16
imul
xor
out
inc
pop
jle
push
fdivp
cwtl
gs
jne
loopne
or
jns
sub
lea
mov
fists
call
enter
mov
pop
push
pop
jge
jo
arpl
add
push
push
jo
fldl
add
push
adc
faddl
sbb
mov
mov
inc
adc
out
pop
adc
adc
add
lret
jae
add
or
mov
mov
jp
jmp
shll
add
outsb
popf
cmpsl
lea
stc
add
aam
flds
push
scas
decb
in
stos
add
add
xchg
movaps
inc
adc
pop
mov
or
sub
xor
xor
inc
pop
nop
mov
adc
ret
sub
add
adcb
lea
or
mov
or
sub
addb
adc
xchg
add
sub
fiaddl
and
movl
inc
or
or
in
in
shlb
xor
das
fcomp
mov
and
sub
xor
push
mov
nop
pop
mov
add
add
jnp
adc
mov
sbb
sub
xchg
adc
jno
or
or
adc
lret
cmp
xor
xchg
imul
cmp
pop
movsb
loopne
push
insb
cmpsb
sahf
push
mov
arpl
cltd
push
fwait
jae
inc
add
inc
sbb
jne
mov
mov
push
adc
shlb
arpl
ficoml
inc
sbb
jl
push
inc
mov
adc
cmpsl
push
aad
outsl
cmp
xchg
and
mov
int
pusha
jle
pop
enter
test
push
jne
inc
pop
rcr
or
mov
movsl
xchg
roll
pop
nop
enter
clc
popf
adc
or
add
stos
nop
xor
jne
pop
pop
mov
pop
pop
imul
jne
test
xchg
pop
insl
push
xor
sbb
add
fs
sub
adc
dec
mov
xchg
ret
mov
cmp
insb
inc
push
les
push
leave
add
push
pusha
outsb
aaa
lock
loope
sbb
mov
aad
pop
rolb
jnp
sbbl
jmp
andl
aam
pushw
inc
xor
in
and
add
sub
sbb
pop
pop
add
out
out
outsl
outsb
jo
push
inc
dec
inc
push
dec
pop
or
inc
inc
lahf
or
xchg
outsb
sbb
push
aaa
inc
inc
push
dec
push
dec
inc
push
adc
popa
add
dec
adc
dec
sti
imul
inc
push
inc
pop
sbb
mov
out
pop
inc
adc
and
das
adc
adc
dec
cmp
or
or
inc
dec
inc
xor
adc
jmp
adc
daa
push
dec
inc
outsl
bound
dec
inc
adc
inc
inc
dec
and
adc
mov
push
inc
inc
pop
sub
inc
movsl
dec
inc
dec
dec
inc
pop
mov
jle
inc
inc
dec
inc
sub
push
aas
adc
int
mov
and
int
mov
dec
xchg
or
dec
dec
and
pop
or
and
push
push
pop
cltd
mov
xorl
xchg
int
xor
mov
inc
mov
xchg
movsl
adc
adc
and
dec
push
or
xor
cmp
das
lods
push
or
and
dec
lahf
pop
dec
insl
shr
sarl
push
push
and
jo
inc
das
push
addl
loope
fwait
adc
pop
dec
inc
dec
js
fstl
adc
negl
popa
adc
pop
mov
int
addr16
jno
xor
adc
inc
push
imulb
dec
out
push
dec
push
jl
push
sbb
sbb
imul
pop
adc
in
fstp
fmuls
xor
in
dec
cli
inc
sbb
jp
aas
dec
rcll
out
xchg
mov
aaa
mov
dec
inc
push
imul
pop
inc
clts
push
dec
inc
push
xadd
scas
inc
lea
sbb
dec
out
dec
pop
push
push
sbb
add
rcr
inc
pop
js
loope
xor
sahf
push
sub
inc
or
js
jnp
dec
dec
push
pusha
das
adc
pop
sbb
arpl
push
sahf
loopne
dec
dec
mov
push
jbe
scas
dec
xor
dec
mov
dec
inc
mov
xchg
sbb
ja
push
test
add
dec
popl
and
dec
add
nop
mov
xlat
sti
xor
push
adc
pop
push
cmp
sub
pop
lds
out
push
test
sbb
testb
push
pop
sub
add
mov
add
push
mov
inc
incb
cwtl
ss
cmp
jge
jle
push
and
lcall
mov
rorl
push
mov
xchg
xchg
fildl
or
cmp
xchg
pop
add
imul
xchg
add
cs
or
pop
gs
and
mov
dec
or
jb
les
nop
xor
dec
or
pop
sub
movsb
cmp
xlat
dec
outsb
mov
xchg
xchg
add
jb
or
cmp
or
or
push
jb
dec
xchg
xchg
add
bound
addr16
mov
push
mov
cmp
pusha
sbb
adc
movsl
test
outsb
mov
pop
cmp
mov
mov
adc
or
ret
lcall
add
dec
inc
int
and
sbb
movl
dec
rcrl
jo
faddl
addr16
or
add
inc
jae
mov
incb
mov
dec
outsb
push
stos
add
mov
inc
pop
movsl
arpl
mov
arpl
xchg
iret
mov
or
mov
movsl
pusha
sbb
loopne
add
in
xor
xor
or
pop
das
outsl
lcall
inc
lcall
pop
setnp
nop
xchg
add
lret
push
adc
imul
adc
add
push
adc
push
sarb
mov
dec
adc
fs
inc
lldt
movsl
xchg
add
push
xchg
out
adc
adc
sets
imul
xor
fmull
fcomps
test
jb
dec
pop
out
add
inc
or
bound
cmpsb
inc
iret
dec
inc
adc
fmuls
adc
dec
mov
dec
push
nop
and
xchg
push
pop
push
and
xchg
mov
push
lahf
or
push
dec
add
js
rcr
add
popa
mov
pop
sub
push
fiadds
add
cmp
cmp
adcb
push
lock
xchg
push
lock
nop
or
iret
sbb
jns
sub
adc
scas
mov
outsl
into
pop
sub
popa
and
add
sti
push
mov
jb
jno
lods
jb
add
push
push
pusha
aaa
cmc
mov
adc
adc
sbb
stos
or
mov
int
cs
pop
test
xlat
adc
ret
add
mov
scas
pop
sub
sub
mov
add
dec
inc
inc
inc
lods
mov
enter
data16
or
and
mov
pushf
pop
dec
rcl
or
or
push
sbb
shlb
pop
and
sub
xchg
sbb
sub
pop
dec
adc
jae
or
push
mov
mov
rclb
call
inc
loope
popf
or
dec
mov
pop
and
inc
idivb
or
popa
jl
push
sbb
xor
add
lcall
inc
mov
lods
cmp
jo
dec
cmpsb
pop
and
inc
add
inc
hlt
push
sbb
mov
xchg
mov
sub
ds
sbb
test
push
adc
nop
mov
out
and
and
mov
inc
enter
mov
test
or
or
xorl
and
push
push
cwtl
or
nop
aaa
ret
stos
andb
scas
push
or
inc
pop
pop
lock
inc
mov
pop
movsl
clc
pop
dec
insl
test
mov
adc
mov
popa
or
dec
dec
lock
rorl
inc
les
inc
add
fildl
mov
add
jl
loope
or
shrb
sti
sti
shlb
lock
sbbl
sbbl
je
mov
mov
cmp
in
sbb
call
push
in
xchg
shlb
in
aad
dec
add
pop
jl
enter
mov
xlat
add
js
push
in
xchg
pusha
ret
outsl
mov
jle
orl
mov
pop
mov
out
cmpsb
imul
cmpsb
imul
mov
lea
xlat
sub
cmpsb
imul
sbb
xor
shll
lcall
mov
xor
push
lock
inc
cmpsl
test
xchg
bnd
sbb
inc
push
insl
ss
adc
adc
adc
push
add
ss
outsl
shl
push
pop
imul
adc
aas
ss
shlb
fs
aas
mov
sbb
enter
pop
nop
cwtl
mov
sbb
rolb
and
imul
push
pusha
pop
push
inc
ds
daa
or
xchg
flds
fiaddl
inc
ds
fcom
inc
mov
push
loopne
outsl
mov
add
stc
int
pop
enter
inc
add
rcll
or
or
pop
or
mov
inc
mov
sahf
jne
sub
test
push
cld
fwait
ljmp
add
subb
repz
sub
cmp
into
mov
lahf
pop
cmp
cltd
orl
lcall
inc
inc
mov
inc
jns
add
adc
movsb
dec
xor
mov
nop
mov
fdivrl
lea
int3
xchg
mov
xchg
lret
movsb
pop
and
rcl
push
dec
push
xchg
jo
sub
mov
push
push
and
test
dec
fnstenv
in
pop
dec
movsl
dec
or
sarl
and
xor
inc
xchg
dec
or
jnp
inc
bound
push
dec
cwtl
mov
adc
jo
jo
pushf
and
dec
nop
xor
inc
insl
cmp
push
js
sbb
add
jae
movsb
push
push
xchg
out
addb
pop
xchg
std
mov
stos
mov
pushf
and
int3
cmp
mov
dec
movsb
jns
pop
push
les
or
shlb
lcall
mov
push
or
js
test
test
test
nop
dec
add
inc
rcrb
pop
cmpsl
pop
mov
dec
shrb
dec
mov
push
mov
std
push
mov
rcrb
mov
les
xchg
out
enter
xor
add
push
mov
cmp
rcrl
fcomp
push
add
movsb
jns
dec
mov
loopne
and
cmp
mov
push
call
push
leave
in
mov
and
addr16
mov
lods
push
clc
repnz
push
xchg
out
adc
jecxz
cmpsb
dec
add
add
lcall
cwtl
bound
dec
jbe
or
jnp
ret
or
dec
adc
push
loop
and
in
or
lcall
pop
add
mov
enter
adc
inc
shlb
pop
cmp
clc
sub
xor
in
mov
or
pop
and
cmp
push
mov
adc
jnp
push
pop
loope
cmp
int
or
cmp
mov
adc
mov
add
arpl
mov
push
xchg
out
sbb
pusha
add
inc
lret
adc
mov
cwtl
mov
nop
xor
bound
adc
xchg
push
pop
les
or
aaa
mov
pop
xchg
push
ret
stc
xor
mov
xchg
mov
lret
push
add
sbb
xchg
inc
dec
pop
add
mov
aaa
rolb
cmp
xor
fistps
in
dec
call
inc
add
add
test
push
es
mov
dec
mov
inc
addl
mov
push
inc
arpl
out
out
inc
xor
in
xchg
outsb
add
nop
pop
nop
push
inc
push
lret
sub
lret
mov
jo
sub
rcrl
jge
fdivp
mov
or
popa
push
mov
ds
ds
in
in
mov
nop
or
call
sbbl
sbb
imul
dec
int3
inc
ss
inc
jecxz
insb
or
outsl
in
dec
shrb
mov
dec
add
cmp
xchg
imul
inc
push
inc
mov
mov
into
adc
or
or
hlt
in
leave
pop
lret
mov
movsb
add
and
sub
daa
ja
insb
and
jl
rcrb
stos
js
outsb
pop
dec
gs
pop
popa
xchg
mov
and
jo
and
pop
push
jl
dec
inc
outsl
insb
jmp
insl
mov
ss
pop
mov
inc
and
sbb
push
sbb
pop
pop
sub
mov
inc
arpl
fdivrs
rol
inc
mov
push
pop
popa
data16
dec
repnz
scas
cmc
push
push
leave
mov
adc
mov
dec
mov
cmc
add
call
inc
ljmp
cmp
xor
test
or
dec
jno
inc
push
inc
mov
xchg
sbb
jbe
rcll
into
or
push
inc
int
popa
inc
xchg
cmpsb
xchg
push
dec
sbb
and
dec
addl
jge
hlt
dec
aam
cmp
and
ljmp
je
test
and
adc
sarb
dec
insl
dec
add
jle
pop
mov
int3
das
dec
xor
or
jae
sub
xchg
outsl
dec
sti
jle
lock
cmp
sub
lock
lret
jbe
cmp
lods
push
sub
nop
lock
add
sbbl
sub
sub
stos
mov
data16
shrb
sub
sbb
call
cli
push
inc
pop
and
or
imul
stos
mov
inc
movsl
xor
call
push
adc
roll
dec
arpl
add
gs
das
pushf
xchg
sbb
enter
jo
add
aaa
insl
outsl
cmp
lds
inc
sbb
push
pop
push
and
sarl
out
sub
jecxz
test
push
jbe
inc
sbb
dec
lods
xchg
fs
popa
or
subl
pop
ja
leave
inc
adc
dec
xchg
push
cmpsl
hlt
and
lods
jmp
movsl
adc
fcmovu
pop
mov
adc
movsb
mov
push
les
movsb
andl
adc
pop
add
xorl
cmpsl
inc
inc
add
sbb
popf
adc
add
stos
fmull
aam
repnz
in
mov
add
std
xor
sub
cmpb
por
dec
ret
icebp
stc
sbbb
mov
fisttpll
aam
mov
adc
add
add
roll
sti
push
push
inc
and
imul
sub
or
int3
jecxz
loopne
dec
pop
sub
outsl
jns
add
add
js
xchg
xor
add
or
vcvtsi2sd
mov
jne
jne
int3
mov
cmpb
mov
in
jge
shlb
test
jg
leave
mov
push
adc
mov
adc
pop
adc
xchg
xchg
in
pop
lret
cmp
push
mov
movsb
add
sub
mov
inc
xchg
xchg
das
mov
sub
adc
lock
sbbl
xchg
mov
pop
repnz
repnz
cs
push
xchg
jp
bound
mov
add
sti
push
cld
in
mov
xor
ret
xor
in
dec
or
sub
in
ja
jno
shl
js
repnz
sub
movsb
lret
adc
dec
sarl
and
dec
xchg
lds
xchg
es
repnz
jmp
and
or
and
leave
mov
lds
pop
out
fwait
leave
shrl
jbe
cmp
add
sahf
lret
cmp
nop
nop
loopne
call
cmpsb
sbb
pop
mov
enter
outsb
mov
lret
add
inc
jnp
in
jmp
stc
adc
jb
and
rcrb
insb
lea
enter
mov
or
pop
pushf
daa
adc
inc
or
dec
movsb
xor
orb
adc
daa
mov
pushf
mov
pop
ds
loope
clc
inc
push
add
mov
inc
add
push
add
orl
xor
clc
jne
aas
enter
inc
fld
je
jge
clc
clc
push
daa
push
sbb
sbb
fs
pop
mov
mov
sbb
sbbb
mov
cmp
fdivs
out
sbb
shrb
movsl
movb
add
dec
shll
or
or
mov
add
mov
addr16
mov
mov
mov
or
sub
and
shlb
add
xor
dec
dec
adc
mov
sbb
mov
push
inc
dec
lcall
add
fwait
cmc
dec
pop
and
and
jo
xchg
les
loopne
and
mov
and
mov
sub
mov
or
dec
aaa
xchg
inc
movsb
push
ja
lods
adc
mov
or
adc
leave
and
sbb
pop
jb
and
pop
or
lods
jnp
mov
fwait
pushf
sub
outsb
das
in
outsl
lret
push
and
int3
adc
dec
xor
jg
in
dec
dec
push
or
push
add
and
cmpsb
fstpt
ss
in
inc
dec
pop
icebp
fld
nop
rol
push
xor
pop
mov
cmp
jp
mov
pushf
in
pop
out
push
inc
daa
mov
and
inc
cmp
inc
fiadds
dec
dec
jne
push
or
pushf
lret
mov
push
iret
adc
sbb
lea
and
jecxz
adc
call
or
subl
out
cmp
push
mov
xchg
pushf
repnz
mov
das
in
imul
push
sub
in
pop
inc
or
sub
sub
btr
push
xchg
rcr
pop
fisubs
adc
das
mov
adc
pop
out
pop
jmp
mov
cmpsl
xor
sub
or
xchg
fdivr
addb
enter
cmpl
xchg
xchg
outsb
adc
inc
xor
adc
ret
push
add
or
sbb
dec
inc
clc
das
sbb
aas
adc
or
aam
sbb
aas
inc
pop
xchg
fsubl
fsubr
add
enter
or
pop
mov
mov
and
add
and
mov
andl
loop
mov
bound
mov
add
mov
add
mov
or
add
push
cmp
mov
daa
cmp
andl
push
enter
fiadds
mov
mov
shrb
je
sub
xor
xor
xchg
inc
dec
decl
cmp
jne
mov
xchg
xor
call
in
sub
xchg
sbb
nop
jg
and
ret
and
mov
hlt
lock
clc
jmp
shrb
or
lcall
xchg
sub
add
add
add
or
pop
outsb
add
add
jge
or
or
in
push
or
cmp
or
and
dec
or
fs
rcl
sub
aaa
push
sbb
and
xchg
pop
push
fs
or
cwtl
popa
pop
add
push
mov
cwtl
pusha
orb
inc
dec
cmp
insb
orb
xor
cs
sub
mulps
sbb
push
push
pop
xchg
adc
adc
pop
cmp
mov
push
xor
mov
ret
and
and
mov
mov
hlt
or
dec
sbb
ss
aaa
xor
out
add
insb
push
mov
mov
hlt
test
add
sahf
aam
pop
mov
rcrl
test
ja
in
fwait
xor
iret
int3
mov
fwait
pushf
inc
xlat
aam
or
aas
mov
int3
adc
xlat
mov
call
scas
mov
or
xor
cltd
xchg
xchg
add
xchg
xchg
sub
fmuls
xchg
xchg
sub
out
lcall
sub
mov
mov
xor
aad
and
paddb
pop
adc
sbb
adc
mov
in
and
pop
test
add
push
or
pop
dec
fmull
inc
and
mov
sbb
fistps
lock
jge
rorb
mov
push
xor
push
das
loope
andl
and
inc
inc
aad
ljmp
decl
inc
sub
lock
adc
push
ret
adc
movl
cld
dec
mov
add
pop
jns
or
xchg
add
or
add
sahf
out
and
inc
push
adc
add
ret
cmc
sbb
push
stos
adc
adc
push
inc
or
inc
sbbl
rolb
lahf
cmpl
sub
es
and
jb
adc
xor
adc
adc
ficoml
sbb
es
fiaddl
xchg
xchg
or
fsubr
fnstenv
aas
in
insl
sub
fistpl
adcl
cmp
nopl
xlat
or
mov
adc
jp
lods
jg
adc
sbb
dec
jne
jecxz
imul
push
jne
pop
imul
jne
cmp
add
and
fs
cmovbe
adc
mov
inc
outsl
adc
add
or
xor
and
jmp
add
or
bnd
sbbb
xchg
mov
xchg
lahf
test
push
in
loop
pop
jle
mov
sbb
jg
xchg
and
and
adc
pusha
add
xor
push
or
or
add
push
pop
and
or
jb
lahf
add
add
dec
repz
add
xchg
sub
enter
test
gs
jmp
fstpl
push
andl
xlat
imul
fucomp
sbb
or
test
lcall
pushf
adc
aad
call
mov
sbb
jns
adc
or
push
sarl
xchg
mov
popa
dec
dec
push
pop
ret
mov
scas
lods
sub
and
mov
pop
jl
cmpsb
xor
mov
inc
adc
adc
adc
pop
data16
lahf
pop
shlb
cmp
pusha
add
movsl
inc
sbb
ret
nop
sub
push
sbb
mov
add
mov
loope
dec
or
adc
or
adc
mov
or
push
and
mov
inc
xchg
mov
push
push
add
mov
inc
arpl
inc
mov
cli
and
pop
dec
shrl
cltd
in
inc
aas
cld
inc
jnp
nop
in
pop
pop
inc
mov
push
ret
push
in
lds
outsb
cwtl
inc
fadd
les
dec
fsubrl
dec
xchg
inc
mov
cmp
inc
clc
insl
ret
mov
fs
cwtl
inc
imul
pop
or
add
fs
adc
sbb
add
mov
rol
nop
add
adc
pop
aas
dec
xchg
xlat
inc
cmpsb
xorb
stos
push
mov
addr16
and
js
mov
rorl
enter
in
adc
fcmovb
xchg
adc
add
sti
shl
push
inc
addl
dec
xchg
sbb
test
inc
es
adc
and
mov
adc
and
or
in
inc
imul
es
aam
jmp
aas
mov
ret
xchg
add
xchg
mov
jge
cli
push
lcall
adc
add
repz
fs
or
sbb
inc
fmull
fisubrs
push
jmp
mov
imul
iret
out
insl
pop
adcl
cwtl
and
adc
xor
sbb
pop
and
fbld
inc
lret
cmpsb
mov
fsub
aaa
nop
pop
dec
xor
out
sbb
cmp
cli
dec
clc
into
add
cmp
mov
clc
inc
fmull
jmp
sub
dec
fsubr
repz
and
sbb
cmpb
fimuls
mov
or
adc
xchg
sub
fisttpll
jp
add
out
loopne
lahf
fdivrs
out
pop
cmpsl
gs
sarl
dec
mov
xchg
ds
ljmp
sbb
adc
dec
jmp
leave
cmp
ret
mov
out
loopw
insb
mov
jmp
xchg
cmp
std
int
lods
push
cmp
xchg
cmp
jge
push
iret
mov
dec
xor
push
and
test
or
xchg
in
out
inc
fcomps
push
daa
fistps
add
cs
push
mov
cwtl
xchg
fiaddl
dec
push
cwtl
cmpb
sub
cmp
sahf
lret
mov
daa
dec
sbb
inc
ret
xchg
push
fidivrl
inc
cmp
sub
add
sti
pop
and
push
pop
sbb
mov
cwtl
ret
push
or
mov
add
cmp
and
mov
enter
cmc
insl
inc
or
jno
ret
hlt
dec
push
imul
test
shll
sbb
add
or
gs
add
cld
push
ds
mov
push
enter
cwtl
lret
and
popa
or
add
out
mov
ret
and
mov
loop
push
lods
cs
adc
and
xor
gs
push
add
mov
jge
jl
fs
fdivp
arpl
mov
pushf
sub
arpl
clc
xchg
mov
add
pop
mov
jecxz
add
addb
jle
push
mov
sbb
pop
ja
rcrl
notb
mov
sub
inc
cmp
push
jns
adc
sub
push
lea
mov
movsb
cmp
pop
das
adc
jb
xor
sti
out
sub
test
inc
push
push
dec
xchg
and
adc
in
call
sarb
int3
arpl
fistps
sbb
jb
mov
in
out
in
clc
add
lock
or
add
sbb
clc
jecxz
mov
add
cmc
add
aam
clc
call
stos
fucomip
pop
sbb
in
mov
sub
push
cmp
mov
in
nop
rcl
lods
mov
push
pop
mov
sub
xchg
gs
test
and
cmc
dec
test
loope
xchg
dec
xchg
mov
add
pushf
pop
add
bound
adc
testb
jmp
pusha
pop
sbb
push
aaa
sbbb
mov
xchg
leave
cwtl
pop
enter
test
mov
rcl
arpl
xor
in
test
push
and
dec
push
sbb
ficompl
leave
aam
add
inc
and
mov
popa
pop
xchg
xchg
pop
mov
adc
dec
dec
enter
das
sbb
fs
push
xchg
lods
dec
insb
adc
push
push
insb
lahf
insb
xor
push
ljmp
and
pushf
rorb
pop
je
int
js
rol
insb
add
out
pop
fsts
lods
push
inc
enter
hlt
pop
shlb
and
cmpsb
sub
loope
scas
jg
mov
cmc
adc
and
inc
jge
pop
shl
dec
sbb
pushf
mov
add
mov
push
sbb
add
mov
test
lahf
scas
mov
cmc
test
adc
pop
sbb
ja
xchg
xchg
rorl
or
xchg
popf
adc
ret
mov
add
jle
mov
or
fisubs
mov
ret
ret
insb
pop
adcb
test
rorb
xor
leave
jl
mov
pusha
add
rcll
mov
mov
mov
rcrl
and
xorl
mov
sbb
dec
dec
fcoms
test
sub
add
cld
mov
mov
fsubs
neg
ret
jno
or
add
movb
jle
and
daa
adc
and
add
pop
add
cmpsl
or
xchg
push
jp
rep
mov
aam
or
pop
lea
int3
xorb
add
add
mov
push
cwtl
sbb
dec
pop
aaa
ja
inc
fcoms
shll
add
imul
xchg
xor
test
aam
add
clc
cmpsl
iret
adc
push
call
cld
dec
repz
jecxz
nop
inc
and
lcall
adc
test
sub
add
xor
or
xor
pop
ss
sub
add
adc
jge
stos
lds
jae
add
pop
cld
into
aaa
mov
or
leave
sub
adc
push
mov
and
jb
sbb
fcomp
push
mov
xor
ds
fsubs
and
sti
pop
push
mov
jne
dec
add
test
int3
xor
push
hlt
sti
test
sub
sbb
push
dec
ret
sub
lods
xchg
test
pop
jle
xor
jno
xor
inc
and
cmp
ret
inc
shrb
fadds
push
inc
sbb
fnstenv
xor
dec
out
adc
jl
jmp
inc
shrb
xchg
pop
add
cmp
or
sub
fidivs
cmp
cmp
and
and
test
mov
test
clc
add
and
xchg
push
jmp
insb
mov
or
sub
cmp
xchg
and
test
xor
xor
jns
js
outsl
adc
lcall
or
aas
ja
sub
loop
inc
mov
lcall
cmpsl
clc
lret
es
jne
sbb
roll
and
or
daa
sbb
push
mov
ss
jl
ret
pop
jnp
and
jo
sbb
inc
mov
sahf
mov
cmp
mov
mov
ss
pop
sbb
aam
test
sub
sbb
push
and
add
ret
stos
aas
cmp
jae
mov
xchg
ja
and
add
adc
add
or
jns
mov
test
mov
arpl
mov
outsl
mulb
push
push
dec
rdmsr
xor
sub
sub
add
pop
mov
incb
mov
cmp
jo
loopne
shrb
inc
xchg
jmp
mov
or
and
sub
or
adc
pusha
cmp
je
jb
sbb
mov
pop
movsb
adc
inc
std
incl
out
dec
inc
aaa
adcl
sbb
mov
mov
mov
mov
icebp
test
xor
dec
lods
sub
gs
cmpl
add
xchg
cmp
inc
mov
mov
add
push
mov
addl
cmp
mov
in
outsl
outsb
rorl
add
in
and
xor
out
dec
insl
pop
cmc
adc
movsb
mov
push
and
call
add
ret
add
imul
mov
or
lock
les
cmpb
dec
xchg
and
fiadds
pop
mov
sbb
fwait
les
adc
nop
mov
ljmp
cmp
inc
fimuls
je
adc
and
mov
hlt
mov
lock
add
and
xchg
mov
adc
fcmovnbe
jne
lds
mov
adc
hlt
ret
hlt
fwait
sbb
shlb
and
jne
mov
and
enter
xchg
jnp
pop
xchg
mov
mov
fs
aaa
jg
in
push
pop
stos
add
cli
dec
popa
mov
mov
jecxz
add
gs
cs
fildl
cld
sbb
cld
in
cli
shll
cmp
and
nop
add
lea
or
dec
cs
sbb
mov
sub
add
pop
xchg
jno
or
inc
mov
pop
cmp
xchg
sub
sarl
adc
adc
add
pop
and
hlt
test
imul
fsubl
add
mov
pop
jb
fs
dec
movb
out
inc
cld
mov
dec
fisubrs
dec
push
cmpl
add
test
add
dec
ret
cmp
dec
pop
mov
jns
out
shlb
and
jmp
xor
inc
nop
out
sahf
mov
push
in
insb
push
sahf
add
jl
push
in
nop
test
mov
inc
sahf
add
shlb
mov
mov
enter
cmp
mov
loopne
call
mov
test
cmp
repnz
and
andl
xchg
and
cmpl
enter
mov
cmp
subb
enter
nop
jl
cmp
repnz
and
lock
enter
push
test
and
sub
hlt
or
frstor
in
cmp
sti
daa
jge
aam
fbld
ljmp
mov
or
cs
and
cli
dec
push
je
incl
sbb
inc
movsb
int3
stc
das
clc
rorb
inc
ja
xor
pop
inc
adc
push
push
inc
dec
outsl
arpl
ficomps
js
pop
sbb
dec
jae
push
mov
adc
imul
pop
jo
adc
insb
loopne
and
jno
add
das
gs
jne
lahf
inc
inc
push
cmc
push
notb
popa
outsb
mov
bound
dec
mov
jo
ffree
out
jbe
insl
gs
stos
pop
outsl
popfw
jns
pop
lds
push
jae
pop
xor
cmp
test
and
xchg
xchg
into
repnz
outsb
push
mov
push
dec
push
jae
loopne
add
pop
push
addr16
out
jae
jne
pop
push
pop
or
push
jg
jns
pop
push
xor
xchg
and
jne
cmpb
test
pop
cmp
mov
ror
pop
ficoml
xor
dec
pop
out
ja
sbb
push
jb
sarb
and
and
insb
mov
or
cmp
mov
mov
xor
or
xor
or
call
movsl
and
sbb
out
add
cld
or
xchg
sub
push
jecxz
cmpl
inc
mov
mov
addr16
cmp
cmp
jne
dec
outsl
push
and
jns
jne
das
push
gs
ret
inc
lret
add
fisubrl
dec
inc
bound
add
jo
jns
pop
imul
pop
jne
xlat
add
out
dec
arpl
jbe
xor
xchg
cmp
arpl
inc
cs
insl
rcr
jb
jbe
imul
push
outsl
sti
jae
add
and
or
out
mov
data16
inc
xor
lods
inc
addr16
pop
icebp
fiaddl
dec
imul
in
imul
ja
cmpsl
mov
jne
pop
dec
jbe
repnz
jns
outsb
arpl
push
jb
pop
repnz
pop
loope
fsubr
push
jae
or
push
jb
dec
mov
mov
adc
ss
push
adc
add
or
mov
inc
call
xchg
cmp
shlb
outsb
push
or
sub
fnsave
push
mov
push
mov
shlb
inc
sarl
mov
cmp
popa
push
addr16
lea
sti
insl
arpl
inc
and
lcall
nop
pop
jge
dec
and
and
sbb
jl
add
push
cmp
sub
and
and
mov
testl
sbb
ja
mov
or
adc
xchg
out
mov
aad
in
repz
testl
sbb
jg
inc
in
add
sub
insl
xchg
mov
mov
cmp
daa
adc
or
pop
mov
mov
pop
push
dec
sub
pop
lds
std
nop
stos
add
sarb
push
add
push
arpl
dec
xchg
mov
xchg
add
jne
xchg
xchg
sbb
push
subb
jne
or
je
pop
add
dec
push
mov
cmp
pop
jg
adc
inc
or
jge
xchg
add
rcll
mov
and
dec
cmovs
mov
jle
or
push
cld
mov
pushf
mov
and
fs
fldenv
push
and
stc
or
sbb
push
pop
mov
adc
jno
xchg
cmpsb
xchg
mov
out
movsb
dec
mov
mov
or
enter
inc
inc
mov
jbe
jl
stc
dec
dec
cmp
jg
dec
arpl
mov
mov
pop
fcomps
jg
cltd
or
aam
loopne
sbb
sbb
aam
loopne
inc
sbb
pusha
xor
adc
pop
aam
and
in
mov
sub
inc
dec
push
test
sub
lcall
dec
jne
xor
outsb
call
loop
mov
push
in
push
enter
sbb
repnz
les
lret
and
inc
faddp
jo
inc
aaa
pop
shlb
rorl
xchg
mov
mov
sub
std
loop
call
enter
xchg
mov
add
and
dec
pop
dec
xchg
xchg
gs
mov
cmc
insb
jmp
jecxz
cmp
push
mov
push
idiv
mov
adc
adc
fbstp
and
add
xor
int
xor
add
push
mov
xor
xor
dec
xor
pop
inc
add
and
inc
ret
mov
adc
sbb
xor
pop
or
stc
or
jg
cmp
aam
andb
inc
xor
mov
and
sbb
add
and
jno
lea
sahf
mov
push
sahf
or
movsl
add
add
xor
and
fcmovne
mov
add
push
rclb
imul
push
shll
adc
bnd
cmp
dec
hlt
mov
aam
popa
ljmp
pop
adc
inc
loopne
mov
rcl
and
loopne
stc
mov
pop
in
inc
insl
push
divl
adc
and
sbb
push
out
or
jnp
or
sbb
mov
aas
inc
sub
cs
pop
xor
test
subb
sbb
push
pop
mov
xorb
mov
adc
push
adc
inc
pop
inc
sbb
out
lret
out
inc
and
jmp
push
adcb
jne
cmp
push
inc
sbb
fistpl
sub
pop
fmuls
cmpsb
mov
mov
and
arpl
or
cmpb
sahf
jmp
popa
pop
push
incl
out
or
pop
inc
mov
or
negl
repnz
mov
dec
and
xor
add
lea
push
xchg
mov
pop
sbb
or
pop
int
ret
jecxz
push
mov
scas
mov
adc
add
push
dec
push
and
jo
inc
rolb
jbe
leave
rcll
daa
sbb
xor
cmp
mov
pop
lods
adcb
idivl
pop
and
or
addr16
shlb
pop
in
push
dec
inc
sbb
xor
inc
xchg
adc
cmp
push
or
inc
in
dec
cmc
rolb
mov
mov
adc
sahf
or
je
dec
jne
xor
push
push
dec
add
sub
es
out
lahf
sbb
xchg
and
or
adc
popa
sbb
mov
je
push
or
xorl
test
cmpsb
jg
loop
jae
fdivp
data16
adc
rorb
hlt
aas
and
pop
test
ret
push
ds
mov
push
sbb
ljmp
movsb
sbb
adc
mov
filds
inc
scas
aam
sbb
or
adc
cmp
into
xchg
sbb
mov
mov
cmpsl
add
das
ret
jl
ret
or
aas
sbb
push
addl
xor
and
xchg
push
outsl
das
pop
and
or
mov
inc
and
sub
add
fcmovbe
fwait
aaa
cltd
bound
add
push
mulb
pop
pop
lret
lret
inc
push
lock
or
enter
and
xchg
push
and
push
psubusw
push
jne
inc
icebp
or
inc
pop
sbb
or
lds
push
hlt
ljmp
mov
fists
sbb
sahf
inc
popa
add
imul
add
lods
dec
mov
mov
lret
stc
jle
jnp
push
dec
std
or
ja
mov
mov
mov
sub
inc
jg
pop
add
bound
gs
jmp
imul
jo
jb
je
jbe
js
jp
repnz
outsb
inc
sub
cmp
xor
pop
inc
mov
xchg
lock
ss
mov
cli
add
scas
jl
sarb
dec
pop
and
sbb
add
xchg
sbb
push
push
loopne
sub
popa
out
or
push
and
jne
pop
xchg
and
and
cs
adc
dec
sahf
sbb
hlt
hlt
inc
xchg
lock
xchg
in
add
adc
pop
sbb
test
iret
cs
adc
and
adc
clc
xor
add
xor
or
aad
stc
add
dec
js
out
inc
popf
clc
mov
add
jne
mov
add
xor
adc
add
and
sbb
or
or
bound
mov
movsl
sbb
pop
call
shr
mov
jecxz
mov
mov
jge
je
mov
cmpb
cmp
loopne
dec
mov
and
stc
or
push
in
add
add
mov
mov
inc
jmp
adc
xlat
mov
mov
pop
and
adcl
push
xchg
enter
jb
mov
pushf
dec
and
clc
pop
inc
inc
pop
iret
int
nop
cmp
cld
dec
jne
add
lods
shll
pop
dec
push
add
pop
inc
aam
inc
or
jmp
inc
pop
jg
xchg
cmp
dec
mov
scas
mov
icebp
aas
dec
pop
aaa
xchg
push
xor
mov
mov
out
adc
adc
add
mov
ret
shl
inc
mov
push
fs
ja
xchg
movsl
pop
add
sbb
ds
dec
push
sbb
jg
sub
das
lods
push
push
pop
or
movsl
and
pushf
pop
int
jne
mov
mov
outsl
fsubs
enter
push
push
bound
lods
xchg
ja,pt
fidivs
pop
xchg
and
inc
fdivrl
add
mov
in
xchg
jl
arpl
and
and
inc
mov
xor
mov
push
xchg
aas
dec
sbb
pop
sub
lea
ds
mov
mov
movl
stc
test
lods
and
xor
push
pusha
dec
ret
aaa
inc
push
push
xor
xchg
shrb
xchg
xchg
cwtl
in
ds
push
dec
mov
shlb
adc
push
cmp
mov
and
xor
cli
mov
jne
add
xor
dec
cmp
mov
loope
sbb
pop
or
push
std
das
pop
or
sti
stos
inc
lods
jae
ss
jae
cmpsl
mov
testb
sub
mov
and
ret
mov
movsb
mov
outsl
mov
mov
sbb
or
sahf
sub
das
pop
mov
push
and
lea
mov
ljmp
add
fcomps
dec
cwtl
outsl
fdivl
or
push
or
cmp
aas
xchg
mov
push
adc
cmp
ljmp
filds
adc
mov
loop
enter
push
xchg
es
adc
jae
or
and
xchg
add
mov
inc
and
inc
test
cmp
addr16
push
enter
inc
pop
fcomps
mov
add
mov
or
mov
lahf
or
jl
dec
jo
mov
pop
and
mov
or
arpl
adc
stc
push
loop
nop
push
popf
xlat
xor
add
nop
xor
pop
xchg
cmpb
or
push
test
sub
push
fimuls
dec
push
pop
insl
loopne
loopne
jbe
adc
cmp
jge
mov
mov
aad
pusha
fiadds
dec
or
fidivl
fisubl
outsb
and
int3
adc
or
dec
cwtd
jge
repnz
or
or
lods
dec
sbb
shrl
scas
or
push
ret
subb
adc
mov
push
addl
in
aas
push
push
adc
fcoml
inc
and
fildl
in
or
dec
pop
fmuls
adc
das
add
and
jbe
pop
xor
sub
mov
sbb
push
movl
dec
popa
dec
adc
inc
push
add
in
adc
nop
cmp
daa
inc
pop
push
sbb
add
insb
pop
push
dec
fistpl
je
or
cwtl
clc
xorb
mov
cmp
js
jns
xchg
ss
cld
pop
cmp
inc
or
push
xor
sbb
push
fwait
jle
jae
push
dec
adc
aam
or
insl
mov
fwait
xor
mov
or
jae
int
cmp
in
adc
and
or
jbe
stc
iret
mov
adc
push
dec
push
jbe
or
cwtl
mov
mov
add
cmp
pop
ds
mov
fsubl
mov
nop
repnz
cmp
ss
mov
in
cmp
pop
das
sub
fsubp
movsl
fcmovb
add
outsl
cmp
jl
jb
insb
mov
aas
dec
or
jo
int3
inc
loopne
inc
dec
imul
les
hlt
loopne
pop
cs
inc
call
dec
mov
gs
data16
mov
scas
insl
lcall
bswap
jl
mov
push
fwait
xorb
dec
pop
push
pop
pop
dec
dec
cs
add
mov
jle
adc
clc
inc
or
daa
fdiv
or
arpl
cmp
inc
js
inc
xor
out
jbe
sub
addb
adc
mov
push
lcall
dec
ljmp
or
ret
mov
push
js
jo
addr16
xor
dec
repz
js
add
adc
sti
jge
inc
popa
pop
ja
fs
addb
push
arpl
mov
inc
dec
rorl
xor
xor
add
ret
push
xchg
dec
fcom
add
dec
sub
lods
or
xchg
leave
pop
jne
xchg
xchg
inc
out
xchg
push
clc
and
push
popa
mov
xorb
fwait
xor
cmp
sub
dec
das
mov
jne
inc
dec
test
ret
or
outsl
jo
rcrb
inc
lods
in
push
pop
scas
imul
mov
xor
jmp
cmp
mov
and
pusha
inc
repz
adc
movsb
pusha
or
dec
xlat
jo
inc
test
aam
jnp
dec
add
mov
fiadds
sub
pusha
adc
movups
or
or
push
aam
adc
mov
jnp
inc
push
out
mov
cmp
test
add
and
or
push
int3
inc
push
sbb
loopne
sbb
call
inc
push
bts
cmp
loope
stos
or
loope
mov
adc
movsb
jns
les
or
int3
cli
int3
inc
pushf
xchg
and
and
dec
dec
dec
rcl
push
dec
jge
or
jae
or
test
lcall
dec
arpl
add
xchg
cmpsb
pushf
aad
sbb
cmc
mov
test
call
outsb
das
aaa
fsubrs
lret
in
pop
sub
adc
and
inc
jns
das
xchg
sub
jne
jne
and
jle
jge
cmp
inc
jl
push
mov
pop
adc
jl
push
jg
push
jbe
and
data16
aas
push
add
cmovno
sbb
or
adc
clc
xchg
sbb
push
push
inc
push
int
mov
jo
shrb
mov
dec
ds
and
xlat
incl
sub
push
jne
mov
add
mov
push
prefetcht1
orl
xchg
and
push
sbb
and
sbb
add
sbb
rolb
cmp
xor
xchg
xor
xor
push
adcb
mov
and
sub
call
xorb
cmpsb
imul
cmpsb
imul
lcall
jns
out
adc
sbb
fs
inc
and
mov
fsubrp
mov
inc
inc
sbb
jbe
fistps
pop
ret
sbb
xchg
les
mov
jbe
and
push
fisubrl
mov
imul
xor
inc
mov
xchg
mov
leave
and
sbb
sbb
inc
imul
xor
cmp
inc
adc
js
add
nop
xchg
inc
fs
xchg
and
cwtl
or
adc
push
sbb
popf
movsl
ja
mov
jns
sub
popf
mov
and
mov
pop
lods
or
jae
xor
or
cltd
push
test
icebp
sub
add
insl
addb
inc
pop
inc
inc
mov
lds
mov
push
dec
inc
inc
neg
mov
adc
xchg
and
add
dec
orps
mov
cmp
push
cmp
jno
inc
adc
mov
push
pop
iret
pcmpgtb
inc
jb
xor
nop
xor
adc
nop
aam
pop
das
scas
xor
sub
lret
mov
int3
cmp
rolb
nop
subb
push
mov
sbb
add
lock
pusha
xchg
add
push
cmpsl
ficompl
addb
pop
vmaskmovdqu
fincstp
insb
rorb
xor
inc
outsl
test
push
test
test
cwtl
xchg
scas
push
jg
add
pop
sbb
out
pop
or
dec
sub
fcoml
inc
jb
or
push
cmp
pop
test
mov
jo
or
cmp
dec
adc
incl
lods
cmp
or
std
nop
loopne
or
mov
add
pop
cmp
and
add
and
dec
movb
mov
inc
jl
pop
lea
xor
mov
or
out
pop
mov
je
js
jbe
jnp
xchg
mov
lea
aam
ja
pushf
add
movsb
or
and
cwtl
cmp
bound
sub
or
das
push
xor
mov
xor
and
pop
pop
sub
popa
jb
jne
mov
leave
and
or
cli
mov
or
or
add
push
adc
or
add
enter
sbb
xor
push
jle
cmp
aas
mov
fwait
ljmp
cmp
fldcw
sbb
addb
inc
outsb
shrb
or
push
nop
add
add
cmp
in
jl
test
mov
lea
add
sub
fwait
pop
inc
xchg
inc
jno
std
cltd
lret
xchg
popa
jle
add
jmp
out
jb
jb
push
add
stc
jecxz
out
sbb
fiaddl
je
push
shll
mov
fcomip
dec
orb
or
and
xor
inc
roll
nop
mov
nop
push
mov
inc
cmpl
mov
adc
add
jb
mov
push
fwait
add
jecxz
aaa
xchg
xchg
mov
ffreep
dec
insl
adc
push
aaa
xor
sub
pop
and
inc
add
or
dec
mov
adc
xor
les
pusha
fcompl
aad
or
jnp
testl
lods
cmp
pop
sbb
mov
xchg
cmpsl
and
cltd
dec
push
repz
pop
or
or
dec
jo
xchg
mov
cwtl
push
or
xor
pop
movsb
adc
std
mov
and
jmp
mov
das
mov
js
fcoml
push
rorb
in
xchg
sarb
add
and
in
cmp
in
mov
mov
add
mov
sahf
mov
sub
and
insb
sub
dec
dec
sbb
jmp
aaa
push
inc
push
jo
push
fadd
adcl
dec
andl
mov
xlat
jns
xchg
fs
xor
mov
lods
pop
cs
xchg
nop
in
cmpsl
ret
andl
adc
push
mov
mov
fists
inc
jbe
lds
lea
xchg
inc
and
inc
sub
fs
sub
mov
std
loope
mov
push
mov
dec
adcl
aaa
jg
and
jbe
pop
add
sbb
pop
ret
or
testb
pop
xorb
add
cmp
lret
call
sbb
mov
test
loopne
ja
test
sub
jne
inc
inc
push
sti
push
mov
dec
xor
repnz
inc
dec
rcr
push
push
mov
push
inc
mov
mov
mov
fdivl
fdivrp
ja
fwait
or
cs
mov
fwait
mov
fstps
sub
xor
sbb
shl
sub
nop
add
clc
sbb
enter
add
ret
fsub
push
sub
cmp
sbbb
cmpsl
test
movl
xchg
repnz
jb
cmp
push
call
dec
gs
xor
and
inc
jns
pop
enter
stc
inc
ret
add
adc
orb
inc
dec
xchg
mov
inc
shrb
orl
sahf
js
and
xchg
sbb
pop
xchg
cmpb
sub
es
das
sbb
daa
or
xor
daa
dec
inc
jae
push
ficoms
pop
jbe
pop
pushf
push
pop
adc
call
inc
clc
test
mov
popf
les
fnstcw
shll
mov
pusha
icebp
dec
jne
dec
push
inc
inc
cmp
mov
xchg
add
sbb
xor
jnp,pt
or
pusha
movb
sbb
mov
sbb
inc
daa
jp
es
inc
inc
pop
jb
dec
test
rcrl
shll
cmp
lods
movsl
andb
inc
fcomps
xchg
mov
mov
sub
sub
mov
hlt
jl
les
imul
ret
mov
arpl
push
push
push
adc
cmp
sbb
popa
icebp
xchg
insl
ret
mov
roll
add
loopne
int3
jae
jl
iret
cs
adc
sbb
add
loope
sub
push
mull
mov
mov
mov
xor
sub
roll
xchg
dec
lock
add
pop
je
loope
lahf
add
cmp
dec
xchg
dec
jae
and
add
xor
dec
fists
enter
and
push
mov
adc
pop
clc
outsb
mov
leave
rcrb
std
mov
subl
in
cltd
das
inc
add
mov
xchg
xor
or
pushf
inc
mov
adc
xor
add
inc
inc
shlb
int
out
or
push
inc
cmp
xor
inc
loopne
mov
inc
cmp
inc
fnsave
test
pop
jo
les
in
xchg
subl
xchg
dec
jecxz
mov
cmpl
inc
mov
pop
or
dec
das
inc
mov
mov
ret
das
add
cltd
add
xchg
cmp
add
push
in
mov
xchg
inc
test
jmp
lock
sti
inc
daa
test
xor
mov
je
arpl
outsb
sarl
leave
mov
cld
push
imul
aad
jo
xor
or
inc
dec
xor
sub
dec
lea
jno
pusha
pop
rcrb
loopne
cmpsb
xchg
inc
cs
cmp
or
fiaddl
add
jl
push
rolb
pop
sub
outsl
dec
dec
or
inc
clc
insl
rolb
ficomps
dec
rclb
pop
idivb
sahf
ret
pop
in
adc
sub
fwait
insl
sbb
mov
jne
lcall
shrb
adc
mov
dec
dec
sarb
test
dec
outsb
arpl
fistl
xor
push
lds
adc
mov
imul
adc
test
inc
xchg
cmp
jp
sub
nop
push
insb
push
mov
popa
sub
mov
mov
fmuls
shlb
push
jl
rcll
push
add
cmp
jl
adc
mov
mov
fmul
mov
dec
xchg
sub
test
cmp
pop
sbb
ja
aam
sub
sub
dec
inc
add
push
xor
andl
lcall
dec
mov
lahf
mov
sbb
push
lret
xchg
dec
test
pusha
lahf
loope
aas
sbb
sbb
imul
popa
pusha
dec
add
push
dec
ret
pop
fldenv
mov
idivb
lret
and
orb
mov
into
push
cmpsl
or
dec
lock
or
lds
add
das
adc
and
das
pop
xchg
out
hlt
imul
push
add
jp
mov
pop
pop
mov
sub
jb
cwtl
fcmovnbe
data16
sbb
mov
xlat
or
mov
xchg
dec
inc
imul
out
add
push
jns
xchg
loopne
fadd
fdivrl
push
loopne
shl
test
mov
packuswb
dec
pop
dec
pop
filds
hlt
inc
cmp
pusha
cmp
sub
in
mov
mov
sbb
sbb
test
jbe
lock
or
push
cmp
les
jle
loop
sbb
inc
aas
jg
cmpb
inc
jmp
cmpsl
filds
xchg
jmp
adc
je
cmp
popa
imul
cli
ja
stos
jne
mov
pushf
inc
andb
sbb
popa
iret
adc
mov
test
add
add
js
arpl
push
dec
mov
mov
movsl
dec
mov
mov
or
sbbl
push
das
xchg
bound
outsl
cmp
xchg
mov
imul
add
and
push
inc
xchg
sub
cmp
mov
fwait
or
push
mov
inc
aas
fsubl
je
or
add
daa
loope
dec
add
dec
push
mov
push
jne
das
and
xchg
and
insb
arpl
roll
inc
lcall
enter
jle
insl
or
dec
hlt
and
sahf
sub
or
mov
adc
adc
lock
outsl
pop
test
and
push
ja
adc
enter
and
push
aaa
adcb
shlb
mov
ss
inc
cmp
sub
jne
repnz
or
mov
scas
push
adc
dec
cmp
dec
sub
push
shrb
jne
insl
imul
mov
xchg
test
popf
nop
push
jo
fwait
inc
and
push
adc
and
iret
mov
add
adc
pop
push
xlat
ret
lret
or
cmp
mov
mov
mov
sbb
push
hlt
push
add
pushl
jne
jne
orb
nop
adc
mov
xor
nop
mov
push
sbb
mov
dec
inc
lods
push
or
push
jns
les
out
xchg
imul
adcb
scas
loope
mov
cmp
dec
push
and
pop
enter
cmp
jae
cmp
lgs
push
mov
sbb
add
mov
add
push
pop
push
stc
adcb
push
adcl
xchg
enter
cs
ror
mov
jmp
add
aad
pop
jge
and
insb
mov
jo
notb
int3
mov
imul
pusha
xor
jne
pop
sub
adc
push
inc
xchg
inc
imul
xchg
lock
test
push
mov
mov
push
roll
nop
push
cmp
push
das
add
pop
lds
jo
xlat
repz
popa
xchg
mov
nop
jge
test
fs
inc
push
xchg
cmpsb
xchg
inc
push
push
pop
xchg
lcall
and
dec
or
xlat
test
push
jp
adc
dec
inc
les
push
mov
andb
in
cs
xor
push
or
adc
add
xchg
loopne
ret
sbb
icebp
and
enter
jne
dec
add
dec
pop
orl
das
dec
das
pusha
lods
test
insb
sub
inc
outsb
pop
dec
sbb
mov
xor
imul
mov
add
jo
mov
push
fidivrl
push
ss
cmp
and
or
lock
and
or
push
dec
mov
inc
or
lretw
adc
adc
or
ret
adc
mov
lods
shlb
shlb
sub
aad
flds
jmp
out
adc
xchg
sub
adc
add
mov
mov
lea
mov
mov
lea
xchg
pop
or
or
adc
xchg
xor
jbe
rolb
emms
add
adc
cli
shrb
fbld
test
push
xchg
inc
mov
pop
jo
and
popa
push
pop
pop
mov
and
dec
inc
cld
repz
dec
leave
sbb
mov
clc
mov
push
addl
dec
xchg
sbb
or
or
inc
ret
iret
arpl
in
fidivrl
pop
cmp
or
iret
xchg
push
xor
jnp
pop
pop
adcb
insb
daa
dec
test
test
shl
xchg
dec
mov
and
fsubp
mov
rorb
divl
xchg
mov
xor
xor
pop
dec
dec
addl
and
push
test
push
and
or
pop
pop
cmc
sub
inc
push
jnp
pop
sub
sub
mov
push
push
xor
sti
sahf
cmp
jno
in
ret
mov
pop
jmp
push
outsb
cmpsl
sbb
pop
and
add
push
xchg
push
adc
dec
shrb
xor
sub
add
inc
pop
imul
stc
xchg
enter
cmp
add
mov
dec
and
pusha
cmp
add
call
mov
sub
dec
sbb
sbb
mov
bound
mov
xchg
sub
push
imul
xor
or
arpl
sbb
add
fisubs
or
add
pop
jmp
pop
xchg
insl
lcall
add
cltd
pop
or
imul
movsl
imul
cmp
jae
dec
call
mov
dec
sub
ljmp
dec
shll
adcl
insl
jg
lods
sbb
mov
movl
shr
insl
pusha
cli
sahf
pushf
inc
dec
or
add
repz
cmp
add
add
scas
jns
adc
dec
sub
lods
push
mov
pusha
xchg
and
ss
hlt
sbb
nop
cmp
popa
and
xchg
sbb
xchg
pop
jl
xchg
sbb
mov
dec
push
sbb
pop
dec
mov
dec
jl
repnz
mov
mov
jb
inc
cmp
and
jb
cwtl
mov
in
fs
cmp
and
xchg
pushf
enter
nop
cmp
xor
leave
xchg
jl
leave
xchg
sbb
mov
in
mov
add
and
mov
dec
insb
xchg
dec
lcall
imul
pop
cld
dec
adc
daa
imul
mulb
inc
mov
cld
push
sub
and
cmp
pusha
pop
lret
out
popa
scas
jb
jo
and
adc
pop
push
and
pusha
fsubl
incl
das
or
and
add
test
push
pop
insl
imul
and
imul
popaw
inc
iret
adc
cmp
adc
xor
adc
or
jbe
jns
fldt
add
jae
pop
mov
je
and
jne
jg
ja
xor
fcomps
aas
cmc
or
sbb
test
dec
inc
sbb
jo
xor
and
dec
mov
outsb
jae
sbb
lock
fsubr
mov
jne
jb
dec
sub
or
mov
push
addr16
push
addr16
mov
outsl
insb
lods
jb
inc
lods
xor
sbb
repz
xchg
fisubs
cmp
bound
xor
insl
leave
add
cmp
outsb
or
inc
mov
insl
adc
jne
xlat
nop
fimull
mov
mov
aas
inc
daa
dec
dec
mov
dec
pop
ret
sbb
inc
nop
popa
xchg
dec
daa
call
pusha
mov
shr
gs
dec
add
les
imul
mov
mov
les
lds
aas
popf
in
mov
xchg
jb
jecxz
aas
mov
dec
dec
pusha
pop
cmp
test
int3
outsl
sbb
sbb
aaa
mov
mov
js
dec
and
push
xor
shlb
xor
mov
cmp
inc
pop
int3
aas
and
and
cmp
fiaddl
movsl
lods
inc
pop
push
rdtsc
popa
cmp
adc
jbe
cmp
hlt
gs
adc
insl
pusha
jne
mov
adc
push
lods
add
xlat
popa
pusha
lcall
mov
daa
dec
jecxz
xor
cwtl
pop
cwtl
push
les
ret
icebp
negl
addb
and
push
addb
and
loop
push
push
mov
jbe
sub
aaa
push
int3
xchg
adc
jp
inc
cltd
popa
fcompl
mov
jecxz
inc
adc
pop
mov
push
xchg
arpl
into
pop
jb
or
mov
push
addr16
or
bound
add
add
sbb
push
imul
dec
outsb
sbb
add
mov
dec
pop
addr16
xor
push
fwait
jmp
or
aaa
test
decl
pop
sub
data16
dec
and
jne
loope
lret
pop
cmp
and
or
mov
outsl
sub
jnp
ret
sub
push
jb
sub
jne
xchg
rcl
lcall
ljmp
mov
add
dec
std
loopne
cwtl
and
daa
sub
dec
mov
test
clc
daa
in
xchg
aaa
adc
loope
pushf
push
push
rclb
int3
ds
xor
push
cmp
add
add
jns
xor
loopne
leave
and
in
scas
mov
cs
inc
mov
push
test
xor
cmp
push
add
in
daa
in
sub
ja
sarb
sub
sub
mov
jne
mov
and
rorl
sbb
xchg
cmp
push
sbb
adc
and
mov
push
mov
test
and
dec
or
mov
jb
mov
pop
pop
push
pop
jb
jns
pop
mov
loopne
ret
sbb
inc
or
xor
push
nop
movsl
movb
inc
mov
dec
movsb
or
inc
mov
insb
outsl
xlat
pushw
in
in
xor
xor
inc
sub
add
shll
fsubrl
push
stos
je
pop
xor
sub
pop
add
rclb
and
sbb
dec
rorb
lock
mov
add
and
pop
pop
out
push
icebp
and
push
or
pushf
push
insb
inc
cs
inc
loopne
xchg
mov
mov
or
idivb
inc
test
insb
insb
callw
sbb
fsubs
pop
push
test
and
sbb
jo
into
mov
inc
mov
add
fcomp
fsubrl
add
inc
rol
jno
adc
push
daa
xchg
insb
pop
insb
movsb
push
xchg
jne
mov
xor
aad
jno
lahf
xor
repnz
dec
shrb
adc
inc
add
ret
movl
mov
inc
dec
aad
std
je
pop
rol
adc
and
pop
in
sub
pop
add
mov
outsl
or
pop
arpl
movlps
sub
cmp
xor
mov
or
fadds
xchg
in
mov
inc
in
pop
inc
push
fs
lock
cs
adc
inc
or
pop
into
jo
nop
das
inc
in
imul
aaa
sbb
test
mov
push
loop
dec
ret
popa
test
xlat
outsb
stc
outsb
mov
push
aaa
jmp
dec
adc
mov
xchg
in
int3
rcl
jmp
inc
mov
push
mov
or
mov
cmp
push
into
jnp
ret
testl
push
sub
movsb
loopne
inc
jno
xchg
push
xor
jbe
mov
adc
xor
mov
push
push
lods
dec
and
fdivrl
mov
xor
xor
nop
andl
xchg
add
aam
rorb
rclb
pusha
out
mov
out
lcall
dec
and
sbb
sub
lret
call
mov
int3
sbb
or
or
lock
mov
orb
sarb
jb
arpl
test
or
push
sub
mov
imul
mov
xor
inc
cltd
pop
xchg
cmp
cmpsl
aam
cmp
loope
adc
add
add
lea
loope
sbb
or
loopne
cmpsl
push
in
ljmp
add
sub
adc
subb
loop
lock
repnz
clc
fistl
push
mov
pop
gs
lods
loopne
lods
push
ret
and
sbb
sub
add
xchg
and
aam
inc
sahf
or
dec
je
inc
fisubs
loopne
fdivrl
das
lret
arpl
inc
add
add
pop
cmp
sub
shrb
or
lret
aad
or
add
dec
clc
idiv
adc
add
push
mov
dec
push
ret
pop
aas
out
movl
jl
inc
mov
inc
aas
inc
push
xor
cmpsl
mov
xchg
fldl
jne
mov
add
push
jl
dec
sbb
in
call
lret
pop
testb
push
mov
inc
or
aam
leave
push
jno
adc
add
arpl
sub
sbb
sbb
loopne
mov
pushl
orb
mov
mov
into
xchg
fldl
and
xchg
adc
xchg
xchg
adc
nop
dec
scas
adc
adc
sub
daa
and
mov
or
les
jae
push
wrmsr
or
push
imul
add
sbb
dec
fcompl
imul
mov
lret
es
sbb
pusha
sbb
out
xor
push
xor
ret
add
nop
dec
push
push
adc
jle
mov
push
jbe
inc
aam
das
inc
incb
add
add
or
test
push
call
adc
mov
push
test
or
loop
cmp
jae
ja
shrb
inc
sti
and
sub
inc
insb
mov
addr16
inc
jbe
out
and
jl
cwtl
ja
loopne
mov
roll
aaa
jmp
je
xchg
popa
fimull
push
lods
jae
das
pop
mov
or
cmp
pop
adc
push
sbb
out
push
mulb
mov
fadds
and
xchg
xchg
aaa
and
loopne
les
fnop
and
leave
mov
mov
mov
sub
sub
push
test
xor
dec
ljmp
jnp
cmp
adc
fs
xchg
pop
gs
nop
pushf
sbb
cmp
mov
aaa
lret
push
push
jns
push
sub
add
daa
inc
imul
xor
mov
sbb
repnz
cmp
pop
jns
pop
xor
sub
cmp
dec
or
into
and
jmp
sbb
pop
stc
mov
ret
or
sbb
inc
repnz
jne
js
sahf
adc
push
pusha
mov
int
popa
punpckhbw
push
enter
in
mov
inc
pushf
ret
mov
dec
mov
js
sbb
loopne
dec
inc
pop
add
fcoms
test
js
stos
sbb
inc
stos
mov
mov
sbb
out
mov
mov
xor
push
adc
sbb
ljmp
pop
cmc
repnz
mov
add
lahf
mov
inc
test
test
cmp
and
pusha
sbb
ss
pop
and
rorb
xor
add
or
dec
das
xor
sbb
add
pusha
fisubrs
push
add
and
and
xlat
das
xlat
pop
outsb
pop
das
cltd
rorl
loopne
adc
and
movsb
out
je
pop
and
in
daa
pop
insl
js
push
in
nop
iret
cmp
xor
adc
shl
cmp
or
imulb
ret
rolb
aad
sbb
cmpsb
rcll
mov
outsl
lds
cmp
mov
jnp
pop
inc
mov
mov
cld
mov
pop
jle
push
inc
mov
adc
jbe
lods
add
or
and
mov
pop
mov
fmuls
dec
and
jb
hlt
clc
clc
je
mov
sbb
lock
cltd
push
jle
xchg
mov
in
in
inc
push
nop
add
sbb
inc
dec
jnp
mov
jp
jle
jae
inc
rol
cli
xorl
dec
daa
out
mov
adc
sub
sbb
jbe
loopne
lock
insb
ja
jg
retw
cmp
and
nop
out
mov
popf
xor
or
loopne
jmp
sbb
lock
loopne
cmp
lret
mov
prefetcht1
sub
dec
frstor
mov
movb
inc
dec
dec
xchg
and
push
inc
sub
adc
movsb
jns
adc
sbb
and
enter
cmp
enter
inc
inc
sub
orl
xor
or
enter
sub
sub
pop
rclb
mov
ret
shld
sub
dec
or
and
in
sbb
sbb
sbb
lret
and
and
and
and
and
cmp
cmp
and
and
inc
inc
inc
inc
and
and
sub
sub
and
and
xor
xor
mov
xchg
xchg
outsl
or
outsl
mov
inc
xor
mov
jl
test
fmuls
fnstsw
test
or
adc
inc
or
mov
inc
pop
mov
dec
push
sbb
in
add
cmpsb
dec
out
add
xchg
shrl
pusha
mov
pop
aas
notl
lcall
mov
call
xchg
mov
mov
in
sbb
pop
sbb
outsl
jae
insb
pop
jg
add
cmp
pop
orl
les
sub
and
fdivrl
pusha
dec
dec
lcall
mov
or
pop
repnz
mov
inc
ret
sbb
fmuls
xor
pop
or
push
dec
mov
xchg
or
sub
xchg
popa
adc
divl
sub
push
pop
test
add
aas
push
rcrb
mov
dec
and
lods
jl
pop
ss
mov
xchg
jmp
mov
ja
add
add
into
xchg
scas
pusha
xorw
sbb
lret
call
shl
inc
dec
pop
outsb
adc
add
add
test
pop
xchg
pop
inc
outsl
outsl
imul
push
jno
xchg
push
outsb
or
mov
add
add
rorb
or
dec
cmp
daa
mov
and
jo
adc
pop
clc
and
inc
leave
add
or
mov
jbe
cmp
adc
jns
sub
mov
mov
xor
lock
sbb
rcll
and
pusha
mov
jo
adc
leave
or
adc
pop
adc
lods
insl
mov
dec
adc
xchg
out
mov
pusha
pusha
adc
xchg
scas
inc
inc
mov
adc
add
pop
dec
dec
sub
push
add
fsubrs
pop
jns
sbb
adc
insb
fsubs
sbb
dec
and
dec
add
adc
dec
mov
addb
sbb
adc
mov
push
outsl
push
push
push
push
call
invd
outsl
pusha
fldl
sbb
fs
xor
sub
jge
mov
shll
push
scas
inc
lret
or
rcrl
inc
movl
stos
jo
jno
or
xchg
mov
adc
push
sbb
mov
and
movb
jb
add
pusha
mov
test
push
add
inc
sub
jno
push
test
cwtl
xor
pop
out
adc
add
es
outsl
jp
insb
insb
popa
das
xor
sub
push
cmp
rol
out
cmp
mov
sub
or
icebp
inc
sbb
seta
xor
jmp
jo
je
cltd
sub
push
orb
mov
shll
sahf
das
push
and
xchg
mov
loope
dec
hlt
mov
xor
xor
outsl
xor
je
mov
popa
lret
cmpl
mov
js
dec
or
and
pop
xchg
into
or
push
cwtl
hlt
cs
inc
popa
mov
or
add
mov
sub
push
cmp
addb
dec
xor
dec
loope
mov
cmp
loop
pop
sbb
sbb
add
and
sub
mov
fcomps
push
add
inc
jns
mov
mov
sbb
das
ds
mov
adc
adc
lea
jo
cmp
inc
or
inc
nop
sbb
lods
jo
int
cli
or
or
push
dec
cld
xchg
sub
xchg
xchg
and
mov
addr16
or
and
adc
jbe
or
orb
ds
divl
pop
hlt
add
inc
fadds
cmpsb
jns
or
sbb
lcall
cmpsl
cs
fsubrl
xor
sub
sbb
daa
or
pop
or
lods
mov
loope
add
ret
ficomps
pop
dec
add
inc
outsb
mov
inc
push
cmp
push
sbb
lds
mov
les
sbb
addl
jmp
insb
sbb
xor
loope
adc
add
popf
mov
add
cmp
je
frstor
inc
and
mov
adc
inc
jo
push
out
dec
testb
je
aam
repnz
sbb
int
movsb
movsb
pusha
ret
mov
test
jae
nop
xchg
or
and
mov
mov
in
nop
pusha
pusha
pushf
mov
inc
and
test
xor
sti
das
and
pop
je
inc
push
xchg
je
xchg
push
add
sub
cmp
das
cwtl
jmp
lea
mov
mov
and
ret
lcall
cmpb
sbb
mov
mov
test
out
lret
in
imul
ret
into
arpl
andb
adc
addr16
xchg
mov
mov
or
cmpb
sbb
adc
or
and
outsb
inc
sbb
inc
iret
lea
mov
mov
test
xchg
jmp
ret
jo
sub
je,pt
loope
addr16
sbb
fdivl
lods
mov
mov
add
adcb
mov
inc
jo
int
or
fwait
adc
pop
xchg
cmp
xchg
pop
pusha
mov
xor
outsl
and
fcomps
xchg
jl
stc
sbb
fcomps
ss
jmp
lds
or
and
aam
lock
push
aam
push
add
and
aad
nop
imul
push
sub
cld
pop
push
mov
and
stos
add
js
enter
adc
insb
sbb
fwait
or
imul
pop
xor
mulb
sar
test
mov
push
jae
enter
dec
nop
or
dec
addl
push
xchg
inc
add
inc
ret
and
das
push
loopne
add
and
ss
scas
inc
jmp
inc
fadds
sbb
xlat
lcall
push
aas
lea
xchg
xchg
rorb
sbb
xchg
inc
cmp
xchg
pop
xchg
out
or
jnp
sbb
push
push
sub
and
sbb
xchg
mov
enter
movhlps
das
bnd
shll
jp
mov
mov
add
mov
test
sub
cs
adc
mov
jo
mov
je
sub
fincstp
out
jns
out
sbb
jge
das
and
jnp
jge
aad
mov
and
adc
cmp
add
cwtl
shrb
xlat
inc
mov
mov
cmpl
test
cmp
outsb
pushf
or
add
xor
out
pop
adc
jmp
cmp
out
sub
fsubp
push
addl
cmpsl
sbb
sub
stos
pop
subl
mov
inc
mov
pop
jne
jo
mov
sub
mov
test
ret
and
mov
push
and
cmpsb
add
leave
les
mov
orl
sub
adc
adc
jmp
cmp
fwait
dec
push
bound
add
pop
ds
jo
loop
je
jp
push
mov
testb
jno
mov
inc
loopne
and
jae
jmp
inc
xor
fnsave
xor
push
ss
cmp
pop
stos
mov
jp
roll
cmpsl
pop
xchg
cmp
clc
shlb
mov
imul
sbb
mov
inc
dec
test
sbb
ret
push
test
mov
mov
and
xchg
dec
ficoms
add
in
adc
pop
mov
movsb
nop
dec
xchg
dec
cmp
mov
push
addr16
orb
shlb
pushf
test
ja
jnp
daa
pushf
sarb
in
pop
in
xchg
sub
jmp
dec
cld
pop
pushf
and
pusha
cs
mov
daa
or
and
fwait
cmpsl
cmp
mov
xor
mov
daa
dec
rcll
xchg
mov
sub
rclb
ret
in
add
into
and
adc
jmp
scas
outsb
push
loope
mov
int
sbb
mov
or
in
sbb
daa
daa
mov
inc
or
add
sub
icebp
xchg
mov
cmp
or
inc
adc
mov
rcl
inc
and
xor
insl
jl
xchg
cs
inc
pop
das
dec
or
xchg
insl
sub
addb
arpl
dec
aaa
mov
xor
sub
xchg
test
stos
jge
cltd
imul
and
pop
loopne
jae
ljmp
add
and
xchg
cmpsl
mov
push
dec
imul
outsl
push
sub
or
fidivrl
inc
adc
dec
cmp
and
xchg
adc
and
mov
iret
push
push
and
shll
sub
cmovae
test
and
pop
dec
xor
scas
addr16
scas
test
andps
bswap
in
outsl
mov
cmp
or
scas
add
inc
dec
push
inc
inc
push
sub
mov
popw
lds
xor
push
dec
pop
pop
sub
lods
mov
cmp
inc
cmpb
outsb
add
inc
mov
rolb
out
push
lcall
rorb
adc
inc
xor
sub
lods
test
push
mov
cmpb
adc
xchg
pushf
sbb
lcall
pop
pop
mov
imul
in
add
push
mov
mov
mov
sub
test
in
adc
dec
or
push
nop
xchg
push
jge
inc
lock
xchg
je
mov
insl
push
popf
aaa
hlt
jle
xor
cmp
mov
inc
in
lock
imul
ss
sbb
cltd
add
repnz
sahf
push
inc
mov
mov
test
cmpsb
inc
ret
jns
adc
repnz
or
sub
or
ret
lock
dec
cltd
aad
lods
cli
shrb
mov
add
icebp
fists
dec
sbb
in
call
loope
clc
mov
pop
xor
jb
loopne
fdivrs
bound
pop
xor
push
pushf
adc
movl
pop
dec
or
lahf
adc
xor
pop
add
pushf
dec
outsb
iret
pusha
xchg
and
xchg
mov
nop
mov
clc
add
mov
loopne
movl
lods
mov
fidivl
fmul
pop
dec
jne
je
out
pop
and
mov
shrl
sub
xorb
rcrl
je
dec
sbbb
lret
push
xchg
lahf
jae
pop
add
or
jne
xorb
movsb
js
push
xor
dec
rorb
ja
mov
scas
lea
or
mov
daa
and
jge
test
test
pop
dec
std
idivb
or
pop
jne
sbb
mov
dec
push
mov
rcrl
popf
test
and
sbb
or
addl
xor
mov
inc
xchg
inc
pop
popf
and
sahf
mov
dec
push
push
mov
mov
pop
je
aas
mov
inc
das
cmpb
mov
imul
add
repnz
jns,pn
pop
mov
mov
mov
aaa
mov
nopl
add
or
pop
aam
xchg
and
inc
clc
push
fcmovnb
and
js
mov
sbb
daa
mov
inc
fdivs
pop
pop
jbe
add
cs
fldenv
xor
push
gs
imul
sbb
and
adc
cmp
adc
aam
xchg
add
and
faddp
pop
sbb
and
jae
clc
andl
aas
dec
dec
inc
add
jnp
mov
shrd
xchg
push
cld
insb
movsb
inc
or
popl
inc
xor
push
rolb
movsl
sbb
ljmp
sahf
mov
sbb
push
jnp
data16
xor
inc
roll
and
xor
arpl
inc
push
fimuls
xchg
hlt
mov
push
push
aad
movsl
pop
jno
cmp
xlat
push
aam
push
dec
jecxz
outsb
lea
mov
pop
insb
sub
push
cmp
cmpsb
dec
in
enter
cmpsb
dec
or
mov
mov
xor
push
mov
in
sbb
xor
mov
sub
fnstsw
cs
pushl
sub
nop
push
sbb
cmp
pop
clc
xor
xchg
loope
jnp
and
pop
enter
pop
imul
dec
cltd
pop
mov
in
sti
enter
adc
cmp
cmp
add
mov
xor
fwait
xchg
xchg
ret
insb
jo
add
push
sub
sti
sub
jbe
je
fs
popf
stos
and
mov
icebp
call
xchg
sbb
mov
and
in
insl
cwtl
mov
sub
inc
sbb
xor
xor
jo
mov
pop
mov
mov
add
or
ja
xchg
mov
jp
dec
xor
add
add
fs
lahf
adc
mov
mov
inc
popa
pop
sub
sub
call
mov
adc
push
arpl
xchg
inc
lea
test
pushf
cvtdq2ps
and
mov
push
push
and
addr16
ret
mov
sbb
adc
adc
or
in
or
movb
xchg
or
repz
lcall
mov
aaa
mov
add
leave
sti
call
or
inc
hlt
hlt
fwait
inc
or
hlt
inc
add
in
cmp
sbb
fsubs
mov
jns
sub
fcoms
nop
pop
enter
xor
repnz
stos
add
and
imul
jb
test
iret
or
mov
cltd
lock
es
call
loopne
xor
pop
cmp
clc
dec
pop
inc
pop
dec
and
orl
fdivl
sbb
jecxz
xor
inc
cmpb
jne
and
inc
testl
xchg
jle
sub
mov
ja
daa
cmp
in
lea
lock
dec
pop
repnz
call
lcall
and
or
jmp
add
or
or
jo
inc
add
xlat
adc
pop
lcall
xor
dec
mov
sbb
xor
xor
dec
jbe
hlt
scas
mov
arpl
movsb
push
pop
pushf
mov
add
xchg
fwait
pushf
pop
in
cvttps2pi
and
xchg
cwtl
leave
and
mov
xor
mov
or
cmpb
inc
cmp
pop
or
test
xchg
xchg
sbb
pop
mov
clc
test
shll
sbb
adc
arpl
clc
push
imul
insb
push
push
fwait
sbb
push
push
popf
test
dec
pop
sbb
xchg
pop
loope
pop
ljmp
mov
inc
fists
subl
test
repnz
and
mov
inc
cld
in
mov
pop
rolb
dec
lea
fsubs
mov
sub
inc
and
cmp
insb
dec
fs
sbb
and
adc
xchg
pusha
jmp
xor
and
hlt
and
lea
orb
fdivs
dec
int3
mov
and
sti
sbb
gs
add
subl
sub
cmp
test
test
lahf
inc
nop
rcl
outsb
outsl
and
sbb
std
jbe
je
arpl
insl
mov
inc
gs
jg
bound
jb
inc
imul
inc
jae
or
ffreep
inc
and
jne
jb
and
xchg
imul
cmp
daa
gs
gs
add
mov
mov
jb
gs
and
adc
shl
jae
pop
imul
xor
inc
inc
ja
adc
push
pop
pop
int3
out
in
inc
out
fsts
dec
subb
adc
imul
sbb
inc
sub
adc
push
push
pop
xchg
aam
hlt
hlt
push
mov
popa
in
jle
xchg
push
xor
jle
jns
and
jmp
and
out
and
lods
shll
inc
or
push
mov
les
fmul
mov
cmpsl
mov
pop
cmp
pop
add
es
lret
mov
mov
fdivr
iret
push
push
ds
orb
pusha
cs
lea
mov
pop
jno
lea
add
sub
jb
add
add
mov
or
dec
pushw
inc
fs
push
or
clc
mov
popa
mov
ret
and
dec
jne
nop
xor
lret
adc
mov
and
add
xchg
mov
jb
push
xchg
movl
or
bound
mov
loopne
mov
repnz
sub
fcoms
and
push
xchg
dec
and
pusha
mov
insb
sbb
lea
xchg
in
push
fistpl
aas
pop
xor
movsb
stc
int
int3
nop
inc
call
xor
aam
inc
mov
dec
aam
outsl
inc
xor
daa
nop
in
sahf
mov
push
nop
imul
lods
mov
bound
xor
cmc
jle
das
das
js
ja
sub
push
sub
and
pop
outsl
stos
and
mov
push
stos
add
and
add
dec
and
mov
xorb
loop
and
fwait
dec
xorl
inc
ret
jl
pop
test
or
addr16
rorb
jp
cli
loopne
push
mov
inc
mov
int3
mov
and
out
enter
and
push
das
sbb
lock
hlt
loop
pop
adcb
icebp
inc
je
aad
les
push
ffree
xlat
js
jb
cld
insl
mov
jae
shlb
or
mov
sbb
mov
test
push
in
popa
or
dec
xor
mov
and
mov
cld
dec
mov
mov
aam
mulb
fimull
mov
sbb
push
add
sub
outsb
xchg
jno
xchg
adc
inc
lahf
ret
push
pop
xchg
leave
sub
or
lahf
xchg
sub
lods
add
lcall
ret
cltd
xchg
mov
imul
fbld
mov
add
xchg
push
jne
adc
lods
pushf
pushf
cwtl
inc
ds
push
cwtl
pop
or
xchg
xchg
mov
jmp
arpl
inc
scas
fldcw
sub
loopne
lea
loopne
fcoms
mov
nop
out
mov
push
add
pop
fsubp
in
movsl
imul
xor
in
repz
loop
and
mov
pop
adc
scas
fs
pop
adc
fistl
pop
nop
sbb
adcb
adc
insl
fimuls
mov
cmpsl
dec
jb
js
mov
push
xor
pusha
push
mov
xchg
into
pop
pop
mov
and
inc
mov
cmp
push
cld
sub
das
inc
and
or
pop
insl
dec
adc
in
adc
pop
pop
or
dec
fimuls
and
adc
mov
loop
push
es
push
jns
shl
and
dec
dec
lds
inc
dec
cs
inc
loopne
sbb
mov
inc
dec
icebp
in
stos
xchg
dec
cs
xchg
cs
in
cmp
imul
xor
in
or
add
mov
mov
jb
sub
out
cmp
dec
dec
ret
fdivl
ret
leave
and
xor
inc
ss
popf
ret
fildl
bound
sti
sbb
sbb
and
jl
stos
sbb
mov
and
ljmp
pusha
ljmp
and
mov
fs
push
xchg
push
and
sbb
push
inc
dec
or
xchg
or
add
add
xchg
add
add
cld
adc
sub
sbb
inc
sbb
mov
pop
inc
push
add
and
mov
cmp
in
hlt
lds
scas
lock
lock
das
in
xchg
mov
in
in
call
call
sti
and
sbb
xor
popf
bound
enter
add
sti
xchg
pushf
pop
xor
fsubrs
mov
aam
push
mov
adc
pop
out
dec
push
xchg
jl
int3
xchg
or
and
mov
movsb
lods
pushl
shlb
lods
fwait
and
test
or
and
mov
test
fsubs
push
test
and
ret
sbbl
dec
jnp
insl
fdivl
xor
andl
in
xchg
pushf
mov
fnstsw
and
jle
mov
add
test
xchg
pop
xchg
xchg
nop
int3
xor
nop
hlt
sbbl
jne
xchg
mov
adc
nop
dec
push
xchg
cmp
push
js
ds
xor
mov
addl
andb
rorb
shlb
mov
js
mov
js
xchg
jl
in
sub
je
fisubrs
cmp
rcll
jb
leave
and
and
push
add
test
nop
dec
pusha
sub
push
xchg
pop
fstps
and
xor
push
dec
xor
and
inc
xor
xor
inc
cmp
xor
sbb
adc
pop
in
mov
xor
cs
mov
xor
enter
sub
enter
sbb
and
and
cmp
leave
xor
adc
test
adc
mov
leave
adc
adc
shl
enter
fcoms
lea
or
push
xchg
or
sbb
sub
std
sbb
out
xorb
clc
sub
adc
adc
les
or
jge
daa
std
push
xor
std
std
mov
std
or
adc
and
nop
dec
fisubs
in
dec
pusha
leave
and
in
xchg
xorl
in
mov
adc
pop
xor
movsb
jnp
rcll
scas
sbb
aam
aam
nop
dec
dec
rcl
pop
xchg
xchg
push
cmp
sbbl
enter
jno
leave
leave
and
in
sbb
mov
jmp
repz
adc
sbb
xchg
arpl
iret
pop
xor
add
xchg
fst
xchg
dec
fidivs
add
or
jecxz
xor
pusha
push
mov
scas
sbb
bnd
loopne
lods
inc
push
xor
mov
lods
sub
xor
icebp
test
adc
xchg
lret
pop
nop
xchg
mov
sub
xchg
mov
xor
sbb
add
cmpsl
es
lock
pop
and
das
and
inc
pop
outsl
mov
fists
pop
inc
enter
xor
mov
data16
xlat
cmp
ljmp
ja
out
sub
stos
gs
bound
andl
cmp
aas
cmpsl
or
jmp
cmp
decl
fidivrs
cmp
outsl
fs
and
prefetch
rolb
inc
add
fldt
mov
or
inc
inc
push
push
or
icebp
pop
and
mov
inc
ss
lock
adc
jge
add
in
add
jmp
inc
popf
inc
or
sub
jno
mov
enter
rcr
leave
mov
pop
into
cld
or
scas
cmp
clc
clc
hlt
hlt
icebp
push
sbb
pop
mov
or
mov
pop
dec
imul
sbbb
push
testl
sbb
call
inc
xchg
in
cmpl
leave
jecxz
and
loopne
popa
sbb
in
and
ror
add
or
jo
xchg
cld
cld
clc
clc
pop
lods
enter
js
add
xor
icebp
cwtl
mov
push
pop
xchg
and
cmp
in
in
push
adc
movsl
push
jecxz
add
testb
fxch
or
test
pop
leave
sbb
push
adc
dec
and
leave
out
push
lock
sbb
xchg
popa
sub
xchg
es
arpl
inc
loop
cmpsb
push
and
add
bound
mov
mov
mov
arpl
stc
cmpsb
imul
inc
add
je
add
cmp
xor
add
push
pop
ss
out
add
push
test
mov
cli
in
or
rclb
je
xor
mov
mov
cwtl
mov
int3
pop
imul
inc
add
xchg
mov
jl
dec
push
add
pop
stc
jle
or
push
pop
mov
or
dec
imul
lock
loopne
inc
add
pop
mov
int
imul
int3
xor
fwait
gs
push
in
mov
cs
jle
test
mov
imul
sbb
sub
cmpsb
jl
cli
jg
cli
mov
stc
ficoml
push
pop
pop
push
xor
test
in
pop
imul
pusha
xor
add
xor
lret
mov
aas
push
js
push
loopne
mov
insl
lret
sub
imul
mov
fdivs
roll
rolb
in
out
mov
cs
sbbb
cwtl
in
push
inc
add
xchg
lret
in
push
in
cmp
out
jo
fwait
mov
cs
cld
int3
dec
pop
pushf
rorb
fldt
and
lock
insb
lcall
mov
pop
data16
je
inc
add
mov
mov
and
int
lret
in
popf
call
dec
add
mov
rcrl
xchg
sbb
cs
rcrb
dec
add
lret
data16
andl
xchg
insl
xchg
int
push
push
outsb
mov
and
iret
mov
xchg
adc
push
pushf
popf
lods
mov
or
dec
xor
int3
inc
sbb
cmp
popl
adc
push
inc
add
inc
adc
xor
mov
jl
insl
and
pop
dec
fsubl
daa
insb
and
mov
int3
enter
enter
fcomp
fxch
loopne
jecxz
add
scas
xor
int3
add
test
nop
mov
popa
je
xor
pusha
pop
jg,pt
mov
lahf
ficoms
pop
xchg
pop
push
dec
mov
dec
adc
loopne
mov
mul
mov
sbb
xor
push
data16
fadds
dec
roll
add
push
pop
test
or
dec
xor
dec
ds
sub
das
push
lcall
mov
les
cmpsb
imul
shrl
cmpsb
hlt
cld
add
or
dec
shll
cmp
xor
shll
push
pop
fs
shll
mov
movsb
lods
mov
mov
push
add
dec
add
fs
nop
mov
in
push
cwtl
sbbl
push
jns
nop
xchg
jp
pusha
jnp
jl
outsb
pop
cmp
jge
shlb
mov
test
loopne
ja
lahf
cmp
pushf
jle
jg
push
pop
and
adc
xchg
shlb
add
jmp
push
push
sbb
data16
or
cs
or
outsb
in
aam
or
add
adc
jbe
sahf
popa
loop
cmp
dec
add
outsl
adc
jns
lret
insl
add
or
add
fdivp
push
pop
pop
addb
or
pop
repz
insl
or
or
sub
add
sbb
movsb
dec
mov
xor
shll
xor
push
push
js
pushf
lods
mov
int3
fsubr
clc
or
xor
inc
test
add
pop
adc
ds
push
imul
inc
xor
fdivp
inc
pop
jmp
jmp
clc
out
or
push
and
popa
rorl
push
fbld
popa
mov
sub
fnstenv
push
adc
push
and
mov
push
add
mov
cwtl
jbe
xor
rol
add
fidivs
fsubl
lock
xor
ds
and
jle
xor
repz
outsl
cmpsb
lret
dec
sti
punpcklbw
shll
add
mov
int3
pmulhuw
clc
adc
adc
imul
in
lcall
push
adc
or
shll
sbb
lcall
push
pop
push
add
push
mov
mov
pop
int3
push
add
xor
push
or
shll
xor
imul
add
leave
mov
sbb
push
subl
push
xchg
lcall
lcall
mov
mov
rcrb
bswap
sbb
xor
dec
jmp
xor
sub
add
add
push
push
lods
or
and
or
lods
xor
push
punpckldq
ret
push
subl
jg
adc
sbb
nop
push
xchg
or
adc
sbb
not
add
arpl
pop
sub
cmpb
jmp
push
mov
nop
cld
cwtl
push
mov
add
pop
add
shll
push
cmp
xor
push
fs
nop
mov
mov
mov
cmpsb
imul
clc
std
or
push
das
pop
and
addl
sbb
or
jbe
adc
xchg
orb
arpl
adc
shrb
xor
dec
fldt
sti
insb
nop
mov
movd
orl
add
orl
adc
adc
mov
popa
add
push
sbb
push
or
sbb
adc
pop
push
nop
inc
push
add
push
and
push
adc
movhps
or
enter
push
imul
xor
mov
dec
pusha
pop
mov
imull
sub
test
push
mov
cwtl
cs
ds
add
pop
js
test
mov
lret
cmpsb
pop
addr16
cld
or
sbb
xor
sarl
push
pusha
je
dec
shll
int3
in
shll
cld
adc
and
pusha
lcall
cmp
lds
and
fcomip
std
xchg
mov
mov
pop
or
nop
push
movsb
nop
dec
shrl
sbb
cld
xor
shll
cli
call
gs
adc
imul
imul
cmpsb
imul
cmpsb
imul
sub
jmp
xchg
ljmp
add
shlb
inc
addl
mov
fbld
add
sbb
outsl
sbb
decl
jle
or
or
add
add
add
pop
mov
inc
adc
nop
mov
lcall
or
add
daa
pop
or
or
outsl
inc
arpl
or
add
ret
pop
pop
mov
xlat
pop
pop
add
popa
mov
or
fmull
add
jbe
out
or
jecxz
rorb
xor
jno
cmpsb
push
pop
ficoml
nop
popa
pop
add
testl
imul
cmpsb
imul
cmpsl
imul
stos
adc
cmpsl
inc
push
add
inc
int
fcomi
push
call
aad
dec
sub
rcrl
push
pop
add
xor
aas
add
les
push
insb
push
imul
jno
cli
scas
sti
imul
add
push
fwait
cmpsb
or
stc
push
mov
xor
pop
jl
int
imul
mov
xchg
xchg
dec
cmc
scas
lods
cmp
orb
dec
pop
xchg
add
idiv
sub
mov
push
mov
cmpsb
ret
inc
imul
icebp
sti
mov
or
pop
insl
test
cmpsl
push
cld
add
add
inc
aam
inc
push
mov
adc
add
sub
xchg
scas
adc
push
push
stc
icebp
loope
out
lcall
push
lcall
jmp
xor
or
cmp
add
xor
bswap
mov
jg
dec
inc
mov
mov
lcall
mov
dec
mov
shrb
sbb
and
adc
das
out
pop
fbld
ljmp
mov
outsl
lahf
pop
or
cmp
add
xor
or
cmp
pop
aaa
testl
inc
mov
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwtl
pop
movsb
jmp
stos
imul
add
xor
push
into
incb
shll
or
inc
mov
mov
cld
dec
mov
aas
mov
shrb
out
push
fdivrp
jmp
loope
shrl
bound
pop
mov
insl
popf
pop
or
cmp
push
ss
decl
leave
cmp
add
dec
mov
jbe
dec
mov
jne
ljmp
or
ljmp
jmp
adc
pop
cmpsb
xchg
push
test
gs
push
mov
fistpll
lahf
push
inc
dec
cmovns
mov
pop
and
out
repnz
jae
push
jle
aaa
sbb
push
bound
mov
out
mov
adc
push
aaa
sbb
mov
mov
out
out
inc
or
aaa
jb
sti
mov
mov
bndstx
sarb
getsec
sbb
out
in
aas
out
popa
dec
mov
xor
aas
lret
xchg
scas
out
aas
stos
adc
shl
aas
jmp
cmp
jmp
jnp
push
loope
pop
stos
jb
push
test
adc
inc
or
xor
jno
je
sbb
and
adc
or
sub
jb
sbb
sub
xchg
cmp
mov
and
cmpsb
lcall
adc
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
add
push
or
xchg
xor
push
mov
sbb
dec
cmp
aaa
das
and
fimull
cmp
xchg
scas
push
xchg
fdivs
pop
inc
cmpsb
insl
xchg
and
inc
nop
jbe
pop
sqrtps
cmpsb
imul
jns
js
imul
insb
or
arpl
adc
das
es
or
pop
ss
and
cmp
das
inc
mov
cmpsb
outsl
pop
add
ret
enter
or
lods
ss
cmp
add
add
add
add
add
incl
adc
pop
and
xor
inc
mov
adc
xor
andb
call
pop
sbb
sbb
sub
fdivl
dec
arpl
ret
dec
aas
fdivrl
addl
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
jmp
mov
mov
mov
mov
enter
rcl
aad
xlat
fcomp
fisubrl
jmp
loop
in
out
call
repz
cmc
div
clc
stc
cli
xorl
pop
cmp
sahf
das
incl
adcl
arpl
adc
pop
popa
jno
and
adc
pusha
stc
lret
xchg
mov
lock
loope
icebp
or
adc
imul
imul
aas
movsl
mov
scas
inc
xchg
test
mov
addr16
sub
add
imul
sbb
xor
push
mov
imul
and
shrl
lcall
cld
or
shll
cmp
in
push
or
or
jns
sbb
or
orb
sbb
leave
mov
cwtl
pop
movsb
or
cmpsb
pop
mov
mov
sub
cmpsb
in
clc
add
adc
shlb
sub
xor
add
les
fildll
xor
cmpsl
or
xor
adc
aaa
xchg
add
and
addr16
sbbb
lcall
ja
sti
lret
mov
cwtl
or
clc
lods
pop
add
out
rorb
dec
inc
or
xchg
mov
movsl
mov
pusha
jle
xorb
daa
pusha
xchg
push
push
enter
add
fistl
xchg
fbld
mov
push
lods
fisttpll
test
push
cmp
pop
ss
cmpb
or
es
mov
inc
push
jmp
pop
aam
es
mov
xchg
mov
jbe
nop
test
pop
cmp
dec
push
hlt
pop
lods
xchg
lods
sbb
sbb
out
push
or
pusha
push
mov
out
xchg
jbe
push
and
les
es
imul
cmp
scas
push
sti
aaa
sbb
sbb
lcall
push
cmp
sub
into
mov
push
or
dec
add
push
xorb
dec
mov
fcmovne
cmpsb
cs
or
mov
push
jb
pop
shll
ds
inc
xor
jo
enter
pop
sub
cmpsb
test
xchg
push
cld
lods
xor
inc
into
cld
pop
inc
es
aaa
pusha
add
loopne
mov
int3
mov
fcoml
add
mov
test
scas
test
fs
push
push
fcomp
mov
outsb
or
in
pop
cmpsl
mov
pusha
push
nop
pop
add
pop
mov
fsubs
scas
fsub
test
in
jo
inc
add
addb
mov
insb
cmpsb
mov
jne
jbe
push
hlt
jl
sbb
fcomps
out
outsb
push
dec
push
ss
cwtl
fists
push
hlt
mov
mov
das
fs
add
lcall
jle
cs
subl
insb
jb
add
pop
mov
aaa
test
out
dec
cmp
out
push
pop
das
adc
mov
sbb
aam
pusha
sti
mov
into
adcb
ss
and
push
mov
outsb
jl
subl
jno
inc
adc
cmpsb
dec
daa
jg
lods
mov
push
cwtl
push
shlb
repnz
enter
mov
es
and
clc
or
push
sahf
dec
xchg
outsb
je
sub
mov
stos
adc
movsb
xor
push
or
or
insb
add
mov
lock
mov
push
push
lods
mov
imulb
rcrb
into
add
pushf
push
and
cmp
cs
add
mov
push
cmp
xchg
sub
testb
mov
push
ss
jbe
jl
rcrl
sbb
inc
jbe
ds
mov
mov
xor
push
mov
pop
xchg
jle
pop
inc
imul
xchg
jle
imulb
xor
shrb
call
data16
inc
int3
xchg
xor
inc
int3
jb
adc
testb
nop
inc
push
add
xchg
push
rol
es
mov
popa
ret
dec
xchg
addl
inc
add
sub
add
add
mov
push
dec
sbb
xchg
dec
pop
push
add
lods
mov
or
inc
sbb
inc
and
fsubrs
dec
pop
push
and
pop
dec
aaa
push
pop
ja
lahf
jns
add
inc
add
adc
or
dec
xchg
push
loop
in
lods
mov
push
push
dec
dec
or
bound
xor
lods
cltd
xor
outsb
push
or
imul
decb
add
mov
pop
or
dec
inc
push
cs
pop
mov
imul
sbb
inc
dec
cmpsb
inc
es
mov
dec
mov
jbe
sub
inc
cs
pop
repnz
xchg
sti
pop
add
add
add
add
sahf
fistl
popf
incb
add
lcall
pop
rolb
sbb
sbb
add
sub
inc
cs
add
incb
cld
jg
movsb
jns
xchg
clc
aas
push
pop
jmp
shrb
sbb
cld
add
pop
or
push
ret
pusha
jnp
aas
jg
push
addr16
add
pop
mov
prefetch
push
mov
xchg
mov
mov
repnz
push
psubb
jo
addr16
pop
out
ficompl
neg
out
cmp
xchg
mov
loopne
lock
sbb
sub
pop
aas
push
cs
fcmovu
fidivrl
pop
xchg
addr16
lock
xor
pop
std
cmp
mov
or
insb
jl
inc
add
imul
rolb
inc
add
jo
enter
iret
rolb
incb
lock
inc
repz
pushl
or
push
dec
imul
aas
es
cmpsb
imul
nopl
fimuls
add
add
lcall
loopne
frstor
mov
cmp
xorps
dec
pusha
stos
jecxz
pop
outsb
es
pop
in
imul
loopne
xchg
fcmovbe
leave
rcrb
dec
add
cs
jnp
imul
adc
sbb
add
lsl
pop
sbb
mov
mov
push
cs
in
adc
ljmp
jbe
and
pop
push
pop
les
test
cmpb
push
les
mov
add
add
sub
addr16
cld
aad
xor
pop
cmp
fsubrl
xchg
lock
aaa
or
cmp
add
sbb
fbld
xchg
push
sub
inc
add
inc
addl
repnz
and
xor
sbb
sbb
cmc
jl
adc
ja
lock
mull
dec
sbb
cmp
icebp
pop
cs
sbb
or
test
dec
pop
pop
xchg
mov
or
and
out
sub
push
mov
orb
adc
outsb
shr
flds
push
and
add
incl
and
in
and
xor
add
mov
out
leave
aas
cmp
subl
mov
xchg
cltd
mov
cmp
xor
daa
and
cs
xor
xlat
scas
popf
mov
push
adc
cmp
mov
dec
push
dec
push
movb
in
outsb
push
push
daa
cmp
mov
int
ja
push
sbb
lods
insl
mov
dec
daa
dec
addl
daa
mov
lret
mov
xor
push
es
push
hlt
inc
ret
jbe
mov
pop
or
daa
or
nop
adc
xchg
inc
and
cmpl
xor
and
inc
pop
daa
inc
pop
xchg
bound
push
movsl
daa
dec
sub
bnd
push
push
aas
push
xor
mov
cld
flds
sub
cmp
xor
jbe
mov
push
pop
push
lds
push
int3
push
and
and
sti
and
cmp
mov
fmul
ret
cmp
cmp
outsb
ret
es
xlat
push
lret
fdivrs
adc
mov
insb
fcoms
push
mov
mov
daa
push
daa
xchg
cmp
pop
push
xbegin
into
and
test
outsl
add
testl
or
adc
ljmp
pushf
addr16
xor
inc
aad
ret
stos
adc
daa
mov
and
js
out
in
out
mov
inc
push
incb
imul
in
or
daa
add
mov
daa
mov
stos
mov
mov
sbb
mov
fisttps
ss
arpl
push
dec
xlat
mov
ds
rorl
out
rcll
adc
inc
cmpsb
lahf
xor
jns
fistpl
fs
pop
add
daa
test
push
lcall
in
es
lret
jmp
mov
inc
inc
es
lods
arpl
clc
xor
sub
jecxz
or
pop
push
pop
push
in
aas
xor
pmaxsw
or
inc
xchg
sbb
or
stos
movsb
cld
pop
repz
sub
or
xor
xor
cmpsb
arpl
cmpl
mov
rcrb
daa
push
inc
sub
push
pop
fs
outsl
push
xor
push
cmpsb
roll
sub
je
fucomp
lock
inc
push
shll
push
inc
mov
daa
cmpl
and
inc
ds
aas
clc
fsubrs
jno
pop
pop
lock
cmp
fldenv
movsb
pop
fwait
mov
dec
xchg
pop
mov
sbb
stos
xor
ja
jmp
xchg
jne
adc
fsts
mov
fstl
loope
mov
or
sub
cmp
sbb
pusha
sbb
xchg
sbb
jecxz
lcall
es
imul
and
clc
or
push
divl
xchg
daa
fcoms
outsb
imul
dec
xor
dec
xor
dec
ss
daa
dec
daa
clc
dec
in
fcmovu
or
dec
lret
popa
out
push
push
dec
rorb
dec
mov
sbb
xor
mov
incl
pop
push
cltd
cltd
push
mov
mov
imul
stos
jg
daa
mov
aaa
and
mov
in
cmp
jae
sahf
mov
mov
adc
sbb
push
daa
shlb
xor
pop
cmp
or
pop
test
xor
cmp
inc
jb
into
es
or
lar
sub
out
jo
ss
repz
or
or
aaa
sub
inc
cltd
and
xchg
stos
sub
aaa
fs
out
insb
xchg
or
xchg
les
and
lea
repz
fdivl
push
and
out
jmp
xchg
pop
push
inc
rolb
stos
mov
mov
and
aas
andl
push
xor
test
push
add
outsl
pop
loopne
es
mov
leave
mov
dec
jae
inc
dec
pushf
push
movsl
add
jnp
in
mov
inc
push
movsl
lods
add
dec
push
arpl
out
daa
pop
mov
movsl
pop
pop
daa
pop
arpl
int
movsl
pushf
xchg
data16
dec
push
inc
xchg
sub
pop
test
arpl
dec
pushf
xchg
ja
pop
xor
cmpsb
jae
inc
lods
imul
dec
xchg
push
lods
movsl
ds
cmp
into
pop
imul
popf
imul
data16
rcrl
push
dec
push
cmpsb
dec
repz
mov
arpl
mov
xor
imul
lods
movsl
xor
lods
inc
jnp
das
jae
cltd
data16
jle
xchg
pop
mov
popf
popf
or
stc
int3
test
jbe
cmpsb
sbb
mov
dec
shll
pushf
xchg
jnp
adc
mulb
jae
imul
in
loope
xor
ja,pn
ss
dec
rcll
xchg
outsb
jae
test
into
xor
testb
imul
int3
mov
data16
movsl
mov
dec
xchg
mov
int
mov
xchg
inc
adc
into
cmp
pop
push
ds
push
shlb
imul
mov
sub
rcl
lods
pop
pushf
dec
into
arpl
jbe
cltd
out
out
push
pop
mov
testl
lods
movsl
pushf
xchg
out
repz
pushf
movsl
outsb
pushf
mov
jbe
xchg
mov
ja
andb
lods
into
movsl
in
xor
sub
arpl
arpl
out
movsl
aas
jae
imul
xchg
dec
pop
pop
push
sbb
lods
imul
pushf
pusha
pop
cmp
dec
inc
pushf
outsb
arpl
jbe,pn
xlat
pushf
xchg
mov
dec
fs
mov
jnp
mov
je
fadds
push
mov
into
xor
das
pop
ss
addr16
jg
mov
ss
arpl
inc
mov
xchg
pop
arpl
jle
decl
sahf
lea
mov
mov
testl
gs
lea
sbb
sahf
out
fnsave
or
pop
mov
ret
sub
add
pop
sahf
gs
fistps
sahf
dec
pop
mov
stos
stos
mov
fwait
lret
mov
push
lea
sbb
sti
xor
lahf
lcall
add
pop
mov
push
fisttps
lcall
es
f2xm1
push
or
add
loope
or
jo
lahf
lea
fcmovu
outsb
lcall
fisttpll
std
insb
add
enter
pop
or
xor
push
xor
cmpb
add
xlat
mov
insb
int3
insb
or
fcomps
sub
repnz
pop
test
movb
add
stc
ret
ffree
pop
pop
mov
outsb
mov
pusha
pop
mov
std
xchg
stos
mov
outsb
shrl
in
addw
fldt
pop
jecxz
out
jno
inc
push
add
mov
std
stos
mov
xchg
mov
mov
mov
pusha
xchg
jmp
icebp
sbb
std
or
out
add
sbb
std
fdivr
lret
jmp
lret
mov
xchg
fdivr
jg
rorl
adc
les
sbb
push
adc
subb
add
insl
inc
pop
cmp
std
mov
pop
cli
stos
shrb
mov
sbb
dec
movb
shr
or
mov
loop
xchg
pop
push
push
cmpsb
sub
ja
sub
inc
and
aad
dec
add
mov
jae
jle
fcmovu
mov
mov
fmull
incb
bound
mov
imul
lea
int3
inc
push
je
and
mov
sahf
popa
sub
maskmovq
idivl
aad
test
sti
fcomp
and
pop
lcall
lahf
cmpb
jno
inc
sbb
mov
in
in
insb
jno
ds
in
sti
cmp
testb
mov
pop
fyl2xp1
lahf
loop
fs
cld
fwait
pop
mov
push
or
sbb
or
fucomi
jecxz
mov
mov
adc
aaa
mov
add
adcl
add
nop
nop
loop
push
out
lcall
popf
popf
loopne
repnz
add
pop
mov
mov
xchg
adc
inc
stos
lds
add
cmp
mov
aad
or
fistps
inc
data16
test
mov
pushl
mov
arpl
popa
inc
sub
mov
scas
push
repz
or
sarl
stos
sbb
cmpsb
rcll
or
jne
sub
mov
push
xchg
test
jne
hlt
stos
out
mov
mov
dec
xor
adc
xchg
pusha
test
lcall
pop
mov
ret
dec
out
dec
and
or
js
aad
mov
mov
shl
stos
stos
mov
pop
out
push
pushf
inc
lds
fiaddl
or
sbb
frstor
and
mov
ret
sub
imul
sbb
loop
mov
stos
xchg
mov
inc
lahf
icebp
lock
fsubr
jae
and
pusha
in
imul
ret
popa
mov
sub
sahf
adc
clc
sarl
sub
mov
lret
add
xchg
add
adc
push
popa
hlt
sbb
cmp
in
jbe
es
jnp
xor
shll
inc
xor
or
jl
mov
jg
add
sbb
or
pop
jo
fcoml
sahf
push
mov
iret
data16
dec
movsl
adcb
aad
mov
lea
cmpb
fsubl
cmp
push
dec
mov
xchg
dec
mov
adc
mov
pushf
in
out
push
mov
mov
sahf
lahf
mov
mov
mov
pop
xor
jmp
push
outsb
add
pushf
stc
push
and
enter
pop
mov
add
push
std
ret
arpl
fnsetpm(287
add
and
push
adc
insb
pop
adc
or
sbb
or
mov
rcr
ljmp
lahf
push
dec
jecxz
pop
mov
in
jg
out
fcompl
cmp
pop
loopne
or
insb
mov
push
ja
adc
stos
or
inc
mov
pop
aas
mov
in
ret
sahf
ret
add
cmp
bound
daa
add
and
jg
addl
push
mov
adc
mov
ret
icebp
addr16
sbb
mov
lds
add
hlt
mov
sbb
lahf
imul
add
xchg
adc
mov
xchg
add
shl
lock
imul
inc
push
pushf
jg
add
cltd
loop
sbb
or
xor
mov
or
push
adc
sbbl
xor
mov
ss
inc
ret
sbb
jp
decl
das
sub
sbb
out
pop
adc
enter
push
cmc
sbbb
jmp
nop
or
addl
sbb
icebp
mov
data16
stc
int
scas
xchg
mov
pop
sti
pop
pop
xchg
inc
push
lahf
outsl
add
imul
add
pop
sbb
push
dec
sbb
fs
mov
ljmp
in
push
je
int3
mov
jle
mov
std
ds
sbb
pop
addr16
and
sub
outsl
dec
ret
push
call
rcll
pop
cmpsb
cs
pop
pusha
sbb
push
lea
lods
cmp
addb
xor
mov
ds
lods
xor
pop
test
adc
mov
xchg
imul
or
push
push
mov
adc
fnsave
fdivrl
or
xor
fsubs
mov
addb
cli
pop
jnp
outsb
mov
push
test
incb
outsl
shrb
punpckhdq
data16
adcl
and
sub
aam
sbbb
ficompl
cmp
inc
and
test
dec
jns
sub
addr16
idiv
add
pop
std
add
xor
jno
gs
xor
rorb
mov
pop
cwtl
pusha
mov
mov
hlt
inc
sti
movsl
mov
orl
xor
sbb
std
addr16
add
shl
ret
sti
imul
mov
sbb
sbb
dec
lcall
pop
shlb
fdiv
stos
fdivl
leave
decb
flds
mov
std
out
cmp
mov
std
jp
popa
mov
and
popa
ljmp
addr16
mov
add
mov
rorb
data16
and
arpl
jle
pop
add
pop
add
xchg
mov
aas
outsb
lods
test
push
add
insb
add
imulb
and
or
cmpsb
mov
rolb
dec
or
pop
addr16
push
mov
push
mov
dec
sbb
mov
push
mov
inc
imulb
mov
xchg
or
scas
lea
mov
cmp
ds
xchg
push
bound
and
sub
loopne
jno
mov
sbb
xchg
mov
mov
and
or
into
jne
jle
lock
pusha
mov
lods
shl
bound
xor
arpl
out
add
sbb
adc
pop
cli
mov
test
arpl
pop
popa
imull
gs
aad
mov
mov
bound
inc
mov
sub
push
imul
add
fwait
gs
std
xchg
scas
outsl
pop
sbb
loopne
add
sahf
mov
cltd
fsubp
mov
sbb
mull
stc
scas
arpl
sub
add
xor
fmuls
ljmp
mov
dec
sub
or
add
dec
sti
mov
xchg
or
add
cwtl
mov
inc
pop
cmp
push
or
mov
jae
xchg
std
mov
outsb
mov
sub
pop
addb
cmp
mov
jns
mov
mov
int
push
and
fadds
movsl
sbb
bound
push
dec
mov
jg
in
dec
lods
testl
mov
cmpsl
pop
subb
into
repnz
nop
stos
loop
or
test
push
rcl
into
push
xor
rcrb
mov
mov
cmp
and
addb
into
or
shr
add
loopne
add
lock
xchg
imul
gs
xchg
sti
jecxz
and
jmp
cld
add
fdivs
and
ud0
mov
pop
aaa
clc
outsb
ret
xor
xchg
addb
ret
pop
stc
add
repz
jnp
cmp
test
ret
add
lea
dec
sbb
mov
std
jns
cmp
sbb
inc
fcomps
pusha
cmp
mov
es
addr16
ret
pop
or
mov
lret
jo
mov
sub
add
push
xlat
jp
fs
js
subb
je
xlat
faddp
jo
dec
incb
pop
mov
add
mov
jmp
push
xchg
out
mov
add
mov
shll
sbb
xchg
xchg
lds
sbb
add
and
popa
cmp
mov
mov
fucom
int3
clc
push
sti
pop
cmp
in
subl
add
jg
dec
sbb
cmp
lea
pop
sbb
int3
shlb
gs
xchg
fstl
dec
mov
pop
xchg
mov
ja
adc
sbb
mov
or
data16
add
jnp
loope
or
add
push
jmp
sbb
movsl
movsl
stos
pop
xor
pop
adc
ds
mov
mov
xchg
add
orb
push
xchg
out
xchg
fisttpll
int3
sbb
mov
mov
ss
jnp,pn
push
inc
jecxz
jmp
addl
incb
jo
mov
notl
adc
mov
push
arpl
xchg
cmpsl
mov
hlt
mov
test
in
jbe
sub
push
fbstp
jbe
arpl
dec
mov
jnp
mov
inc
test
ss
mov
push
stos
pop
and
push
inc
mov
jbe
xchg
add
or
fildl
mov
jno
adc
push
orl
aas
mov
ds
push
inc
ja
ficomps
dec
mov
test
scas
xor
push
jecxz
inc
ljmp
mov
push
mov
dec
cmpb
out
push
cmp
add
leave
inc
or
dec
fildll
mov
aam
ret
xchg
je
add
sahf
push
lea
mov
push
addr16
pop
sbb
std
test
mov
inc
mov
int3
stc
mov
and
mov
adc
jecxz
icebp
dec
push
or
sub
add
sub
mov
lahf
and
lock
cli
pop
mov
dec
mov
daa
rcrb
cltd
mov
push
lea
enter
enter
mov
sbb
je
cmp
into
mov
push
addr16
sub
clc
rorl
jle
call
arpl
ret
bound
jbe
push
pusha
jne
nop
fisubrs
sbb
movsl
mov
add
repz
movsl
jo
lods
in
fwait
bound
insl
add
in
dec
jo
je
dec
add
add
arpl
adc
mov
pop
lret
jae
xchg
or
inc
lods
in
push
sub
mov
icebp
inc
mov
xor
loopne
mov
aaa
push
subl
xchg
sti
add
gs
push
popl
mov
xchg
lcall
in
div
iret
cld
and
mov
cmp
mov
or
inc
scas
ljmp
js
push
mov
xchg
imul
cld
mov
cmp
add
cmc
clc
xchg
mov
jno
mov
xlat
add
cmp
movsl
sbb
movsb
std
scas
cmp
in
xor
cwtl
mull
cli
pop
sti
ds
add
clc
dec
negb
cmp
es
xor
stos
mov
out
push
pushf
or
inc
xorb
sub
outsl
or
xchg
js
add
mov
es
add
cmp
arpl
dec
pop
shll
fstpl
clc
stos
nop
in
mov
outsl
ficompl
lea
or
xlat
mov
or
dec
jns
sbb
jg
sub
negl
arpl
mov
adc
sub
add
adc
loope
adc
insb
push
pusha
rorl
jmp
xor
sub
add
push
add
add
imull
xchg
dec
adc
pop
inc
out
popa
jg
sub
repz
or
cltd
jecxz
andl
sub
mov
push
add
mov
xor
add
arpl
fidivs
push
pop
or
out
lahf
fstp
sub
jbe
pushf
aam
ds
aam
in
sub
or
sub
mov
xchg
push
jmp
addl
inc
lock
mov
push
lret
lods
pop
add
mov
cmp
mov
adc
insl
test
add
inc
clc
xchg
imul
in
mov
es
xchg
add
test
stc
sti
push
or
test
and
mov
rcrb
or
jae
std
insl
popf
adc
fwait
js
gs
xchg
imul
xchg
jge
jg
pop
nop
arpl
mov
sbb
rorb
lds
fcmovnbe
add
pop
sbb
adc
enter
icebp
mov
insl
imul
enter
iret
loop
fdivs
mov
add
enter
inc
mov
dec
iret
in
dec
sub
test
mov
int3
sbb
ret
fsubs
mov
cmp
sub
push
pusha
or
aas
dec
xchg
xor
lds
ret
inc
lods
js
test
add
stc
fsubrs
cmp
mov
and
pop
test
pop
and
mov
lea
lret
sub
lret
test
mov
sbb
and
cmpsl
shl
ret
add
or
mov
dec
ret
mov
es
mov
leave
or
adc
test
adc
jl
daa
cmp
jbe
pop
mov
dec
add
jae
mov
cltd
ret
ret
nop
push
push
jne
dec
xchg
notl
mov
nop
and
repz
xchg
mov
cmp
test
and
mov
add
incb
jl
sbb
xchg
lods
lret
mov
mov
xchg
push
lahf
loop
adc
repnz
movsl
or
mov
dec
test
sub
sbb
sbb
data16
jg
into
ror
dec
jp
repnz
mov
mov
mov
int
and
sbb
sbb
test
pop
jae
mov
pop
ds
jge
jle
jg
jle
mov
pop
jg
bound
ss
mov
mov
pop
and
loope
or
or
mov
std
rolb
and
push
mov
pop
arpl
lahf
fcompl
fwait
mov
mov
aaa
mov
int
or
mov
je
les
aad
push
insb
fnstcw
or
pusha
inc
xchg
xor
xchg
cmc
cli
sbb
lods
ret
das
push
enter
stos
jbe
push
fsub
sbbl
ret
push
mov
std
decb
mov
enter
lods
shll
imul
adc
add
mov
je
popa
dec
sub
lods
mov
sub
incl
sbb
and
sbb
test
jg
mov
or
ret
or
mov
rorb
negl
sbb
repnz
cmp
add
mull
mull
stos
jmp
or
pop
mov
test
js
xchg
test
lods
outsl
pop
xor
inc
sbb
xchg
lods
mov
je
mov
add
dec
aaa
or
cmp
xor
mov
cld
or
outsl
dec
adc
imulb
adc
ds
pop
fsub
loope
mov
add
scas
add
cltd
mov
pushf
mov
push
adcl
push
decl
std
xor
rorb
pop
scas
fwait
jg
mov
enter
mov
mov
aas
cli
add
cwtl
mov
cmpsl
ret
mov
cmp
rol
adc
fldcw
or
xor
test
xchg
mov
jg
xor
ljmp
test
jae
inc
mov
outsl
addr16
fstps
mov
sbb
xchg
xchg
dec
sbb
mov
andb
lret
ss
arpl
repz
pusha
xor
mov
sub
cmp
icebp
lds
call
push
addr16
push
jae
outsb
xchg
xchg
sbb
mov
mov
cwtl
scas
mov
and
repz
mov
fcompl
add
or
std
add
dec
pusha
xor
mov
cmc
gs
pop
sub
push
push
cli
icebp
incl
test
jl
push
jno
xchg
xchg
dec
nop
flds
sbb
movsb
xor
or
movb
jge
add
fwait
push
xor
dec
dec
ds
loopne
sbb
sbb
test
test
xor
inc
push
sbbl
cwtl
adc
jge
into
cmpsb
scas
mov
jp
repz
cmp
or
xor
add
sarb
jg
iret
add
sub
xor
out
sub
mov
mov
mov
call
dec
xor
jns
dec
sbb
cmp
je
sub
les
test
loope
pop
xchg
call
mov
or
roll
cld
mov
enter
mov
gs
mov
and
lods
sbb
mov
xchg
mov
mov
ljmp
out
push
push
cmp
push
xor
insb
dec
push
and
cmp
pop
pop
pop
mov
jb
push
ret
dec
nop
mov
jmp
inc
mov
daa
cmc
add
fists
fsubs
sahf
sarb
fwait
xchg
mov
adc
ljmp
outsb
xchg
jb
jp
push
dec
cmp
push
jb
dec
jno
cmp
test
adc
mov
into
iret
and
nop
insl
add
pop
ret
fcmovbe
cmp
mov
mov
pop
xor
fs
mov
mov
mov
push
dec
cs
adc
xor
decl
and
or
pop
and
cmp
inc
pop
cmp
cmp
ss
pop
push
xchg
mov
jnp
mov
mov
add
xchg
sub
imul
mov
je
lcall
add
stos
add
adc
das
adc
sub
insl
es
push
cmp
push
bound
jnp
or
mov
popf
mov
or
sbb
sbb
sub
aaa
or
sub
dec
or
aam
les
aas
add
jmp
es
and
and
push
ja
mov
mov
outsb
es
mov
cld
jp
outsb
jae
cmp
jle
and
push
sub
mov
shll
jnp
adc
inc
or
addl
jp
xchg
outsl
cmp
pushf
inc
bsf
negb
push
insl
mov
int3
inc
mov
enter
mov
dec
cmp
cmp
test
mov
cmp
les
sub
pop
mov
or
mov
cld
insb
int3
clc
mov
and
sbb
lcall
mov
sbb
mov
jl
and
fisubl
or
and
adc
loope
inc
mov
mov
or
lret
or
ss
sub
cmp
movsb
cmpsl
or
fistpl
pop
sbb
fucomi
stos
addb
int
jns
mul
ljmp
rorb
pop
pop
add
dec
sbb
xor
lcall
bound
sbb
mov
add
pop
push
jp
movsb
sti
lea
shl
lcall
push
out
testb
jmp
and
imul
mov
or
adc
or
add
fildl
lret
inc
adc
and
jmp
jg
mov
adc
cmp
rorl
cmp
cld
cmp
clc
loope
sub
or
std
push
daa
subl
cmpsl
jne
popf
test
std
mov
les
cmc
subl
icebp
cmp
add
cs
mov
lret
pop
or
jle
cmp
and
add
cs
push
push
in
in
push
and
sub
arpl
orl
ss
xlat
and
cld
dec
ret
ja
mov
adcl
into
jo
jo
shlb
stc
sti
fisubs
data16
roll
sbb
lea
test
cwtl
xchg
leave
jb
mov
aaa
movhlps
sbb
mov
pop
or
les
sbb
cmp
iret
fisubl
push
mov
or
or
xor
sti
mov
mov
adc
sbb
mov
sbb
and
outsb
ret
push
push
jle
add
and
pop
mov
adc
fnstsw
out
rcr
push
or
cmc
cmp
pmuludq
or
sbbb
jle
ljmp
orb
push
sbb
shl
xchg
call
mov
cmp
push
or
jmp
sub
cmpb
cltd
lock
insb
push
in
neg
pop
shrl
dec
mov
rorl
wbinvd
xchg
call
mov
cli
xorb
inc
inc
std
and
add
and
outsl
jp
dec
pop
add
rcl
int3
repz
sbb
dec
test
lock
ljmp
pop
or
ds
call
lods
test
inc
inc
es
inc
inc
ss
pop
roll
test
add
and
push
stos
icebp
lret
data16
inc
rolb
add
or
loop
xlat
mov
popf
dec
cs
mov
je
incl
outsb
outsb
addb
add
das
mov
jbe
int3
push
leave
mov
flds
ss
jmp
pusha
dec
and
pop
or
pusha
push
xchg
into
or
mov
and
shlb
lods
jbe
adc
fwait
adc
jmp
xchg
in
sbb
daa
jae
js
ljmp
adc
in
push
and
xchg
in
pusha
fmuls
mov
mov
adc
fildl
or
push
xlat
or
fmuls
mov
dec
adc
ret
add
push
inc
enter
sub
and
clc
out
arpl
pop
inc
and
sbb
cmp
ret
push
lahf
mov
and
sti
rcrl
movsl
cmp
mov
push
cwtl
repnz
or
mov
mov
fwait
jb
sub
arpl
shlb
inc
popa
xor
popa
ss
outsb
xchg
insb
cltd
gs
arpl
xchg
mov
and
xchg
and
in
dec
lea
add
push
mov
ja
enter
cmp
adc
rolb
in
pop
cwtl
mov
pusha
adc
push
jbe
xchg
pop
push
sar
pop
orl
lahf
arpl
fs
jne
sub
aam
daa
adc
cmp
xchg
mov
fcomp
pop
clc
cmpsb
push
testb
xchg
push
jmp
add
mov
mov
mov
movsb
leave
ret
scas
fcmovnbe
out
sub
ja
push
loop
mov
adc
push
add
or
mov
stos
xor
adc
mov
jge
cmpsb
popf
stos
or
mov
pushf
rcr
cmp
pusha
mov
pop
or
fildl
mov
xor
lods
adc
push
loop
mov
nop
es
stos
lock
xchg
cltd
dec
push
add
fsubl
sbb
ret
or
hlt
add
rcrl
dec
pop
pushl
lods
fdivs
jnp
mov
sbb
xor
or
xorb
sub
ret
mov
add
jle
pop
mov
movsb
sub
push
or
popa
aaa
mov
or
mov
pop
lea
ret
ds
mov
mov
mov
jp
inc
ficoms
sbb
push
inc
sbb
push
adc
lea
jmp
imul
mov
xor
push
fnstcw
cmp
pushf
pop
inc
into
mov
fstps
sub
cmp
mov
add
rorb
mov
add
imul
adc
pop
ret
enter
dec
out
gs
xchg
loop
push
movsb
add
add
and
jmp
and
dec
mov
insb
or
cwtl
push
and
and
ficompl
addr16
push
adc
flds
cmpsb
std
cmp
call
xchg
in
push
sbb
sub
push
shll
mov
dec
add
or
cs
push
sti
lods
rcr
pop
test
xchg
aad
fwait
decl
mov
sbb
xchg
push
leave
and
jmp
sbb
sbb
xchg
adc
add
and
out
rcrb
xor
add
pushw
mov
inc
jg
ja
or
jo
inc
mov
and
addb
mov
push
arpl
or
mov
cmp
push
inc
add
xchg
add
or
sbb
test
add
add
fldcw
repz
enter
loope
pop
xchg
adc
cmp
mov
jmp
inc
popf
roll
aas
xchg
enterw
std
mov
shrb
fsubrs
pop
fmuls
mov
js
pop
sbb
sub
sub
inc
pop
imul
roll
mov
cltd
sbb
add
xchg
add
add
xor
inc
push
lret
xor
sbb
jb
insb
mov
movsb
lret
sbb
imul
cli
mov
subl
add
cmp
or
xchg
pop
mov
test
lret
adc
mov
cltd
mov
xchg
xchg
call
das
bound
shrl
jg
mov
fwait
xchg
enter
sbb
push
mov
test
inc
inc
call
mov
mov
outsb
lock
mov
jge
rorl
loopne
sbb
es
fimull
mov
pop
andl
lret
dec
or
out
add
in
in
mov
mov
sbb
inc
call
addr16
or
mov
add
out
jo
jne
repnz
jp
lea
lds
and
ljmp
push
push
push
jae
insb
lret
ret
or
in
test
fcmovbe
jmp
cmp
loop
stos
inc
popa
fldenv
lods
in
mov
or
fmuls
int3
inc
and
add
and
int
mov
mov
cmp
pop
pop
add
and
imul
cmp
dec
inc
xlat
cs
jns
sbb
pop
sub
push
dec
inc
lcall
push
dec
ss
push
jbe
stc
in
imul
daa
arpl
xor
mov
ss
pop
imul
outsb
dec
divb
pop
ss
imul
push
negb
arpl
pop
sub
pop
pop
cmp
cmp
ss
imul
imul
sub
repz
lods
mov
xchg
dec
decb
jnp
cmp
push
pop
cmp
mov
testl
jnp
cmp
sub
push
push
jae
xor
inc
push
cltd
popf
push
popf
push
sahf
out
fidivs
divb
dec
mov
sbb
test
cmp
ja
sub
addr16
xlat
int3
inc
push
pop
push
push
inc
inc
cld
in
mov
push
dec
pop
adc
daa
push
or
dec
cld
xor
daa
xor
push
or
add
jg
and
sbb
or
add
push
or
div
mov
or
push
add
add
add
inc
inc
add
mov
and
or
sub
sub
add
add
sbb
cwtl
inc
xchg
xor
add
adc
lahf
mov
jo
push
adc
add
adc
jnp
add
pop
or
xor
add
sub
lret
push
push
xchg
jle
adc
sbb
adc
push
pop
jbe
add
adc
inc
and
or
add
iret
incl
add
jp
add
in
add
or
loope
push
dec
daa
daa
std
idiv
jnp
add
adc
adc
pop
add
add
add
jnp
add
add
add
jecxz
mov
add
adc
inc
filds
pmaxsw
pop
or
and
sub
add
neg
sbb
or
mov
and
or
inc
adc
or
pushf
mov
outsl
lock
adc
sbb
add
sbb
sbb
pop
flds
adc
pop
add
push
push
js
insb
pop
or
mov
push
sbb
sbb
add
push
fistpll
or
push
prefetch
jae
xor
jne
or
xchg
pop
cld
js
pusha
icebp
jno
inc
pop
adc
in
jg
ret
lock
sti
push
adc
add
jo
pop
cld
add
inc
adc
or
in
cmpsb
js
sbb
roll
lds
scas
inc
incl
lret
das
mov
and
addr16
sub
ud2
mov
jle
or
or
adc
adc
popa
sbb
out
sti
loopne
mov
jnp
cltd
sbb
adc
cld
add
push
adc
gs
sbb
or
add
sbb
mov
xor
adc
push
and
notl
in
mov
push
adc
outsb
mov
clc
add
xor
push
and
fwait
add
or
or
testb
sbb
jno
jb
std
testl
or
add
add
pop
rcrl
sub
add
pusha
adc
ret
cmp
and
jo
pop
cmp
push
pop
jbe
push
cmp
and
sti
adc
pop
or
pushf
dec
cld
or
cld
add
add
icebp
or
jb
gs
je
adc
std
outsl
add
stc
mov
pop
jg
adc
adc
jnp
inc
add
adc
outsl
or
and
out
in
subl
sbb
jno
cld
popf
jmp
hlt
or
mov
sahf
movlps
out
and
fs
idiv
or
xor
mov
mov
pop
or
add
jbe
dec
int3
sbb
pop
stos
mov
add
pop
add
or
jno
sub
sub
or
push
hlt
incl
jb
hlt
cli
arpl
sbb
mov
popf
imul
inc
jb
jbe
mov
mov
jno
push
xor
jnp
and
shll
adcl
add
sbb
push
jbe
cmp
dec
out
inc
pop
shl
adc
clc
add
fsub
aad
jns
jl
jge
pop
js
cmpsb
pop
pushf
or
stc
or
add
add
add
push
mov
mov
add
scas
aad
add
inc
sbb
sub
xor
add
add
push
cmp
or
je
mov
mov
push
and
hlt
adc
jae
push
in
pop
mov
pop
pop
mov
cwtl
testb
mov
insl
sub
rcl
inc
lods
adc
pop
sti
dec
arpl
decl
repnz
sbb
cltd
outsl
bound
cmp
ret
loopne
push
and
xlat
jecxz
mov
std
and
movsb
loop
adc
add
adc
shlb
or
ret
add
imul
vaddps
add
mov
sub
das
test
ret
pop
sub
and
sbb
inc
sti
vunpcklps
mul
testb
or
fadds
xor
std
jae
add
add
pop
sbb
clc
fincstp
ja
pusha
scas
call
je
xchg
inc
sub
push
ja
and
add
cs
test
add
add
jnp
pop
add
add
sub
dec
je
or
cmp
jo
loopne
push
jne
icebp
adc
testl
or
dec
jp
out
out
fldcw
add
ret
inc
pop
and
push
jmp
sub
and
inc
cmp
jg
pop
push
and
cmp
push
dec
rcll
push
jl
add
jns
js
sub
daa
sbb
xchg
into
pop
adc
arpl
test
mov
scas
push
cmp
clc
xor
add
pop
rclb
hlt
add
mov
stc
add
adc
adc
xor
sub
jecxz,pn
and
cld
and
sbb
adc
popf
arpl
jb
push
add
jbe
inc
shll
and
out
fstpl
lock
push
cmpsb
mov
and
adc
sbb
cs
pop
inc
or
pop
xchg
aas
add
test
loope
push
cmp
xor
adc
push
add
adc
adc
xor
adc
sub
push
push
sbbl
adc
pop
ret
mov
push
push
jb
insb
scas
dec
and
or
pop
cltd
push
incl
testl
sub
mov
out
fld
popa
addr16
push
push
jbe
sub
cld
push
ljmp
setl
fsts
mov
jge
sbb
sbb
and
push
adc
adc
adc
and
fucomi
shll
or
add
pop
mov
in
adc
jle
pop
sub
or
mov
loope
cld
adc
add
popa
std
popl
push
mov
iret
ret
sub
mov
mov
xchg
clc
shr
stos
clc
and
add
ret
sub
inc
and
mov
sbb
pop
loopne
inc
adc
inc
push
inc
out
xor
adc
pusha
std
stc
jne
sti
lock
add
adc
ret
fst
adc
sbb
mov
xchg
push
mov
cld
push
fs
jne
sbb
fs
add
mov
mov
or
add
push
add
adc
lea
std
or
push
mov
sub
lds
pop
add
jp
loope
mov
xchg
pop
sbb
or
adc
and
adc
and
daa
push
add
pop
dec
adc
lock
adc
dec
mov
unpcklps
xchg
inc
fsubl
lret
add
sti
in
adc
and
add
cmp
and
sub
sbb
xor
pop
jp
inc
mov
fisubrl
jo
pop
insb
add
cld
cmp
pop
xor
jl
vmread
pop
pop
sub
sub
std
sti
sub
or
pop
cld
cld
push
add
xor
ret
cmp
xor
or
add
sbb
sbb
pop
es
xchg
idiv
pop
repnz
scas
loope
sub
sbb
and
push
cltd
pop
and
add
or
xor
xor
setl
push
insl
sbb
sbb
loop
cmp
pop
push
xor
add
and
sbb
push
fcompl
popa
adc
or
xchg
jmp
inc
repz
push
cmp
jecxz
pushf
dec
adc
and
mov
adc
sub
pop
add
aad
repz
pop
xor
push
jae
xor
push
ljmp
xchg
arpl
out
insb
adc
fidivrl
repnz
cmp
and
insb
adc
add
loopne
ret
lods
roll
jp
imul
hlt
sbbb
shld
add
enter
add
negb
inc
sbb
xor
aad
aam
shll
xchg
cmc
xchg
or
clc
cmp
pop
inc
pop
add
pop
pop
cmp
icebp
pop
insb
ret
test
or
or
out
loopne
icebp
and
or
adc
popf
jmp
repnz
or
mov
gs
add
in
cmp
sub
or
ss
sub
push
pop
cmp
enter
and
lds
adc
add
add
add
shr
addb
scas
xlat
sbb
xchg
inc
sub
mov
sarb
and
push
add
les
cmpsl
outsb
inc
cmp
lds
scas
cmp
and
add
sub
decb
jnp
lock
xor
dec
scas
and
ficompl
sbb
pop
push
inc
sub
adc
add
test
es
aas
out
daa
jo
jno
push
or
out
addl
mov
fisubrs
and
in
jo
push
xor
std
add
jp
testl
and
dec
inc
or
mov
loopne
add
push
dec
add
cli
insl
cmp
cmp
sub
inc
cmp
sub
testb
adc
jnp
inc
and
fbld
setle
xor
popf
adc
insb
jp
xadd
xor
stc
pop
insb
lmsw
pop
pop
add
and
sbb
push
stc
shlb
sub
test
call
jp
fiadds
in
subps
xor
sbb
or
adc
and
or
push
int3
add
adc
sbb
std
sbb
push
and
add
add
xchg
lods
sbb
sbb
adc
mov
adc
add
cmp
sub
inc
mov
js
push
sbb
xor
adc
add
out
cmc
shr
mov
cmp
add
cmovs
stos
aas
jno
and
sub
xchg
lods
shl
in
fnstcw
mov
adc
std
adc
lcall
sub
push
loop
sbb
inc
adc
inc
pop
or
add
lds
and
jge
mov
rcrb
popf
enter
stos
adc
mov
in
add
jp
add
adc
inc
add
mov
jo
sbb
mov
pop
sbb
fidivrs
cmpsl
ret
and
test
dec
jno
pop
lahf
sbb
push
addb
in
das
lock
cmp
pop
mov
sbb
dec
sub
jae
inc
or
jnp
icebp
xchg
jne
dec
adcb
add
add
cs
sbb
sub
xor
stos
mov
fdivrl
and
outsb
lea
scas
sbb
mov
sbb
cs
dec
adc
push
inc
push
ret
test
ror
push
mov
insb
xor
cwtl
out
cmp
xchg
inc
jne
jg
data16
pop
test
sub
test
adc
lea
xor
pop
addl
jne
xor
loopne
mov
push
push
and
jo
or
mov
pop
cmp
sbbl
icebp
sub
dec
pop
dec
sti
or
aaa
inc
or
punpckhbw
add
inc
and
push
xor
jmp
lea
or
sbb
ss
std
sub
and
ds
and
push
rclb
mov
sbb
pusha
and
or
addl
cmp
jg
lret
mov
jge
or
xor
mov
add
outsb
loope
sti
add
jb
add
pop
mov
dec
mov
cld
aaa
dec
loope
enter
xor
aaa
adc
fld1
add
jl
stc
or
scas
fs
add
movsl
pop
lcall
cli
repnz
cmp
inc
adc
mov
and
bound
pop
xor
adc
mov
aaa
idivb
std
mov
dec
push
and
mov
cwtl
fisttpll
adc
sub
sub
and
push
outsl
or
jge
mov
and
mov
es
sub
out
loop
add
fidivl
or
sub
add
hlt
push
or
js
mov
xor
sbb
mov
or
hlt
sbbb
xchg
mov
pusha
test
xor
icebp
sti
adc
scas
mov
mov
or
inc
imul
jns
inc
test
call
aaa
or
pop
cmp
popf
add
add
push
xor
into
sub
repnz
out
mov
pop
decl
sbb
scas
or
xor
mov
fsubs
and
sbb
jge
xor
xor
or
das
or
jo
add
and
call
cli
jns
adc
and
lock
or
sbb
adc
mov
and
int
sbb
xchg
or
sub
outsb
dec
mov
xchg
sbb
add
push
or
pop
fmull
hlt
cs
add
stos
mov
inc
aaa
rorb
imul
shrl
xchg
jmp
clc
sti
inc
lods
xlat
or
or
push
cmpsl
cmp
add
shrb
lret
push
inc
add
loope
icebp
out
rcrl
aas
xor
sub
sub
and
sbb
ljmp
outsl
clc
sbb
adc
cmc
cmpsb
bound
or
icebp
add
and
sbb
ljmp
repz
or
mov
lods
pusha
insb
or
mov
xor
sub
unpckhps
cld
add
and
ret
jbe
pop
or
jp
or
shll
test
and
nop
xor
notb
mov
xor
test
cmp
jmp
sub
div
nop
add
cs
pusha
add
and
and
sbb
sbb
outsl
add
test
popf
fiaddl
add
xor
push
lds
adc
dec
sbb
mov
mull
jne
jmp
or
notl
push
jbe
xchg
rcrb
add
xor
cmc
add
adc
stc
inc
sub
clc
ds
add
hlt
cs
push
cmp
or
jb
and
adc
jp
lock
xor
mov
push
sbb
and
fldl
xor
cmp
and
push
test
je
lea
push
cmp
add
dec
cli
insb
adc
sub
xchg
add
push
cmp
lock
stos
inc
or
mov
das
adc
es
adc
fmull
dec
lods
xor
xlat
jbe
les
data16
lock
cs
sti
dec
dec
ffree
scas
cld
sub
sbb
aam
ja
lods
inc
in
pop
add
pop
sbb
pop
ficoml
adc
jmp
dec
push
movsb
into
jp
lods
popf
insl
mov
scas
and
sbb
sub
fnstenv
call
enter
mov
rcll
fs
cmp
sbb
cld
or
sub
xchg
out
adc
imulb
int
sbb
add
adc
and
fbstp
out
cs
and
pop
neg
std
jp
xchg
push
lret
clc
sbb
ds
dec
dec
bndldx
imul
negl
or
shr
sub
cmp
adc
push
mov
mov
cmp
sub
pushf
call
add
jecxz
sarb
add
xor
sub
dec
mov
add
call
call
rcrb
jns
cmp
jns
mov
mov
lock
lcall
or
fs
mov
popf
adc
add
push
xchg
loopne
sbb
inc
cmp
repz
dec
pop
add
add
shlb
or
inc
xor
loope
jmp
xorb
sub
mulb
mov
cmp
dec
loopne
cmp
xor
into
xor
xor
and
jnp
mov
pop
shll
jae
push
lock
add
jo
mov
adc
xchg
or
test
adc
cli
and
addr16
jg
or
sub
add
adc
hlt
xchg
lock
test
jl
and
mov
cmp
lock
mov
ds
out
pop
adc
and
scas
pop
adc
sub
movsb
add
sti
loopne
adcb
push
out
shl
xchg
cmp
adc
add
adc
jae
out
cld
sti
sbb
xchg
mov
movsl
rcrb
jp
mov
mov
xor
pop
or
add
in
xor
repz
pop
test
xor
js
loope
xchg
loop
jbe
daa
leave
sub
dec
sub
stos
fs
cli
mov
orb
test
add
add
jo
mov
enter
movsb
sub
inc
xor
xchg
pop
js
cmp
jo
push
fstl
push
fucomp
and
je
mov
aas
cmpsl
xor
sub
dec
inc
xlat
js
mov
jecxz
jns
pop
xor
adc
iret
add
lock
movl
adc
outsl
sbb
mov
xchg
out
shrb
mov
push
xor
rcll
mov
add
dec
xchg
adc
stos
mov
sbb
sbb
les
scas
pop
repnz
add
cmp
sbb
int3
and
sub
inc
cs
mov
mov
push
mov
ds
push
jmp
push
pop
enter
imul
out
and
mov
mov
sub
icebp
and
mov
xchg
adc
add
bound
test
subb
inc
and
pop
inc
sub
sbb
ret
sbb
adc
cmp
imul
mov
inc
xchg
mov
mov
imul
movb
sub
mov
push
daa
pop
dec
cld
pushf
dec
xor
pop
sub
push
or
out
push
pop
push
rolb
xor
jb
push
adc
add
inc
insb
pop
mov
sub
xchg
fs
insb
sbb
mov
sub
and
out
adc
adcl
xlat
and
add
push
or
add
mov
test
nop
dec
inc
and
clc
pusha
sbb
jno
dec
or
arpl
bound
add
test
inc
or
sub
sub
cli
push
loop
xchg
das
jle
lods
add
or
mov
fistps
push
sub
in
je
push
pop
or
adc
mov
pavgb
cs
jecxz
mov
add
adc
adc
adcb
add
push
rorl
adc
out
ja
xor
or
aas
insl
and
inc
mov
sub
or
dec
pusha
and
push
pop
sub
jmp
dec
lar
xchg
dec
adcl
inc
and
fmull
pushf
mov
mov
add
sub
add
mov
inc
sbb
aam
and
xor
mov
mov
mov
lods
sbb
push
scas
push
and
pop
das
add
xor
sub
sbb
adc
cmp
xor
sbb
popa
loopne
sbb
add
mov
sti
rep
jns
xchg
pop
shll
add
dec
xor
stc
adc
arpl
inc
sbb
mov
dec
and
add
or
adc
pop
push
lret
xchg
xor
sbb
jo
sbb
imul
push
loopne
arpl
lock
xor
es
add
sub
aaa
xchg
and
xchg
adc
repz
xchg
loopne
rolb
icebp
sub
or
xchg
shrl
cli
sahf
loope
or
push
mov
push
pop
jp
xchg
jo
sti
push
aas
cs
dec
and
jno
in
push
inc
lds
push
push
clc
add
sbb
movq
iret
and
or
and
cmpsl
adc
sahf
add
movsb
pop
sub
xchg
adc
xor
das
xchg
mov
add
fisubs
lea
test
dec
hlt
pop
loopne
or
pop
cmp
movsl
cltd
ret
and
add
out
out
inc
stos
aaa
test
call
popf
je
inc
cmp
adc
das
pop
or
add
add
pop
cmp
stos
push
out
aaa
push
sbb
aaa
scas
loope
mov
mov
enter
ljmp
lods
or
xor
cmp
adc
adc
adc
pop
add
call
cmp
out
mov
jne
jo
sub
sub
shrb
xor
push
fildl
jno
cmc
cmp
insl
rorb
dec
mov
fldl
add
adc
cmpsl
and
iret
add
inc
sbb
arpl
xchg
lods
pop
pop
fs
in
jle
xchg
add
rolb
cs
mov
subb
push
cs
sbb
std
and
hsubpd
or
add
sub
inc
xor
fcoms
sbb
add
aaa
and
aaa
sub
sbb
push
aad
je
sbb
push
rolb
add
rcrl
xchg
and
lds
std
adc
js
mov
jno
hlt
clc
add
sub
ret
es
ret
cmp
jae
add
int3
inc
jns
inc
add
or
loopne
test
mov
sbb
pop
jecxz
and
gs
enter
push
cmp
outsb
jb
mov
xor
jmp
sub
pop
jnp
cmp
aam
pop
insb
pop
mov
sub
or
jno
sbb
sbb
add
push
sbb
push
inc
ja
push
push
mov
pop
loop
incb
push
decb
add
cmp
sub
add
or
loop
or
and
sub
or
inc
insb
cltd
mov
sbb
inc
mull
sbb
xor
inc
stos
adc
xor
inc
mov
push
or
cmp
out
jmp
sbb
adc
adc
pop
lea
aaa
or
loope
sti
and
pop
xchg
rcrb
inc
mov
jle
sahf
or
stos
push
add
sub
xor
pop
jmp
inc
inc
add
jo
jno
mov
add
aaa
push
bound
cmp
sub
shrb
sub
sbbb
jno
push
cmovae
push
add
and
or
pop
or
add
xor
push
bswap
gs
add
icebp
mov
lock
imull
dec
hlt
mov
pop
cmc
hlt
add
loopne
pop
mov
push
mov
xchg
mov
adc
adc
out
aaa
pop
sub
add
pushf
orb
push
fiadds
push
jnp
adc
adc
adc
add
jp
jns
cmp
add
jo
push
push
lret
dec
incb
fimull
sbb
aad
sbb
sub
sbb
add
pop
outsl
mov
add
dec
and
scas
sub
int3
jp
popa
adcl
lahf
add
int3
and
xor
sub
cmpsb
adc
xor
out
jmp
inc
mov
fisubrl
dec
in
roll
cmc
push
pop
push
and
cs
inc
cmp
or
ret
mov
pusha
daa
or
mov
jno
roll
cmp
loop
out
push
movsb
rolb
dec
adc
jne
and
nop
inc
or
in
sub
and
call
sub
sub
push
sbb
ja
xor
ljmp
loope
or
sbbb
or
cmp
insl
je
or
insb
mov
outsb
subl
clc
data16
add
dec
dec
and
pop
and
pop
mov
mov
jbe
inc
filds
cmpsl
pop
cmp
or
mov
cld
cld
scas
pop
punpckldq
add
sub
or
ret
xor
add
xor
mov
adc
xchg
add
mov
popf
sbb
cmp
add
shrb
mov
inc
jmp
xchg
push
add
shlb
push
xchg
out
clc
sbb
and
xchg
js
add
xor
inc
lods
outsl
inc
js
pop
loopne
es
loope
dec
loop
and
mov
orl
lock
andb
xchg
sub
mov
sub
push
outsl
mov
lods
jb
incb
ret
out
add
popa
sbb
cmp
jl
ret
sub
sbb
and
inc
sbb
push
sbb
das
loop
add
inc
adc
jns
push
sbb
jmp
or
mov
add
add
add
add
dec
cmp
xor
in
leave
add
data16
outsb
inc
pop
add
ret
daa
mov
mov
add
movq
lds
or
enter
sub
dec
mov
pop
sbb
sub
into
or
mov
addb
ret
xchg
or
das
mov
and
pop
addl
movsl
cmp
sar
cmpsb
pushf
fst
inc
pushf
fs
jge
dec
sbb
xchg
cmp
fdivrl
mov
mov
test
ss
or
je
gs
mov
or
and
and
test
or
adc
sti
or
sub
pop
sub
ljmp
shlb
and
inc
mov
leave
xor
cmp
sbb
mov
sub
inc
sbb
dec
or
jl
lret
adc
cli
add
or
adc
sbb
adc
push
pop
add
jne
test
fwait
or
push
inc
cmpsb
shll
adc
adc
mov
mov
std
mov
dec
jmp
aaa
add
inc
sub
adc
add
sub
mov
sub
add
and
ret
clc
push
xchg
add
adc
test
jmp
add
int3
mov
loopne
dec
out
push
mov
jecxz
pop
pushf
push
cmp
push
cmp
test
cmp
fmull
jo
add
ficomps
inc
mov
sbb
adc
inc
cmp
cmp
and
push
cmp
psubusb
add
mov
jle
ja
inc
adc
pop
cmp
decl
popf
dec
sub
mov
ds
jmp
and
sub
cs
dec
lock
sbb
push
inc
popa
sbb
stos
jp
fsubrl
roll
or
xlat
dec
pop
ret
hlt
popa
sub
sub
push
inc
scas
adc
mov
stos
push
lock
push
xor
fdivrl
jecxz
and
pop
movsb
or
dec
mov
xorl
mov
or
sub
mov
jle
test
jo
shr
dec
xor
shll
or
inc
loopne
rclb
or
pusha
cmc
lahf
js
inc
adc
ss
adc
and
xchg
mov
loopne
add
add
jmp
les
inc
and
adc
and
add
call
inc
sbb
imul
cmp
iret
shll
cltd
in
pop
inc
or
jo
sbb
sub
frstor
inc
sbb
jo
or
sbb
or
add
out
outsl
loopne
and
mull
or
sbb
adc
pop
loopew
cld
daa
pop
cmovbe
add
das
add
jle
sub
mov
es
and
xor
add
cld
icebp
ds
adc
sub
or
or
cmp
and
push
pop
push
arpl
daa
mov
dec
jo
test
sbb
mov
and
pop
and
and
add
cld
mov
lea
push
sbb
outsb
or
sbb
addr16
shr
sub
cmp
dec
cmp
test
adc
outsl
bound
insb
push
ljmp
dec
adc
sbb
lods
insb
fs
mov
int
xchg
bound
push
push
jb
jne
jg
cs
lahf
adc
xlat
or
mov
xchg
movsb
mov
rolb
mov
stc
mov
mov
sarb
xchg
adc
mov
rolb
xor
loopne
push
or
pop
in
wrmsr
dec
movsl
jp
dec
sbb
jmp
outsl
outsl
sub
jbe
and
xor
push
daa
or
or
call
mov
rorl
mov
push
or
push
icebp
push
adc
jg
test
mov
call
push
sub
dec
add
or
xor
js
bound
fld
xchg
or
pop
xor
fsubl
push
adc
mov
cwtl
aad
xor
dec
sub
jle
aam
popf
les
imul
push
add
cmp
cli
out
jne
es
mov
jb
push
jnp
movsl
aas
sub
xor
pop
or
sub
int
adcl
les
adc
insb
add
xchg
or
push
add
icebp
and
cmp
cli
or
rorl
sqrtps
adc
pop
jmp
cli
in
addb
or
sub
jmp
push
jecxz
pushf
or
aam
addr16
lcall
mov
xor
adc
inc
mov
nop
test
lret
and
or
fiaddl
test
dec
les
roll
faddl
adc
sub
xchg
push
ss
push
pushf
subb
mul
fdivs
add
adc
dec
add
mov
lds
xor
sub
ds
push
mov
sbb
cld
fisubrs
das
sbb
jne
pop
add
sbb
cmp
in
jmp
cmovg
add
and
add
mov
insl
sbb
push
popf
mov
imul
inc
jecxz,pn
test
add
mov
inc
cmp
rolb
sbb
or
add
sub
lcall
mov
push
bound
inc
mov
inc
not
add
pushl
cwtl
into
popa
jge
and
stos
movsl
mov
shll
mov
or
jno
sbb
push
insb
inc
inc
sub
int
and
add
std
and
mov
or
sub
shr
sbb
out
cmp
or
nop
sbb
pop
push
xor
pop
pop
inc
lods
xor
dec
jp
loope
adc
int
push
test
minps
and
fmuls
add
cmp
adc
sub
ljmp
fistl
xor
cld
cld
lea
data16
add
je
cmpsl
xor
and
or
mov
popf
adc
add
push
sub
sub
add
sub
rclb
mov
sub
shlb
sbb
add
stos
negl
inc
adc
add
les
adc
test
xor
verr
out
mov
xor
test
add
fiadds
imul
adc
jmp
mov
add
in
js
jb
xchg
inc
inc
adc
js
mov
xlat
rolb
adc
xor
into
js
out
add
rcrl
adc
loop
add
mov
fiadds
jo
mov
and
das
ret
sbb
add
mov
mov
hlt
loop
adc
push
scas
out
pop
js
enter
sub
pop
rorb
fwait
insl
jne
inc
paddusw
popa
inc
sub
cltd
or
je
inc
mov
xor
and
sahf
cmp
mov
sbb
or
inc
and
jge
js
xor
xor
lds
sbb
pop
inc
xchg
xor
add
or
clc
xor
adc
dec
dec
sbb
cli
push
push
cmp
mov
sbb
add
or
and
push
push
sahf
mov
rorl
and
cmp
mov
jo
push
or
ljmp
addr16
push
push
push
jne
out
in
inc
mov
pop
hlt
adc
icebp
add
call
aam
pop
out
sub
lock
sldt
or
add
or
insl
mov
sub
sbb
or
sub
ffree
pusha
roll
and
adc
add
sbb
sbb
and
xchg
call
lcall
mov
xor
popa
mov
sub
jl
test
aam
jno
xor
mov
jecxz
and
add
lea
mov
movsb
shl
xor
pushl
dec
pop
push
xchg
outsl
cmp
jmp
cmp
fisubrl
inc
testb
sub
cmpsb
push
scas
jo
inc
mov
aam
push
inc
cmp
add
pushf
or
mov
sub
in
jns
fcomps
cs
or
xor
cmp
xor
lock
mov
or
repnz
adc
pop
sub
sub
cld
std
aas
sbb
xchg
pop
jle
aas
cmp
adc
pop
xorb
push
push
pop
sbb
fcomps
in
or
and
or
mov
gs
pusha
shrb
cli
repnz
pop
mov
jo
jbe
test
lock
jg
adc
pop
and
inc
sbb
andl
or
adc
sub
sub
xor
or
sub
cld
js
int
sbb
xchg
dec
jbe
dec
pushf
pop
add
or
icebp
and
ds
lods
mov
pop
ss
sbb
or
sub
aam
testl
sarl
dec
sbb
lcall
push
push
xor
sub
in
or
cmp
sub
mov
add
mov
or
mov
cmpsb
mov
les
or
sbb
in
pop
sbb
adc
jo
aam
push
cmp
dec
or
jp
imul
das
inc
jno
incb
clc
mov
or
lods
adc
stos
aaa
and
add
sub
sbb
push
and
adc
mov
cli
xchg
out
loop
inc
icebp
or
sbb
sbb
cs
cltd
and
or
cmp
adc
add
cwtl
pop
jae
and
decl
sub
jno
pop
sub
addr16
mov
ss
inc
bound
sbb
jo
xchg
push
std
jo
push
lds
imul
add
cld
data16
cmp
cmp
mov
push
ret
push
mov
xor
or
push
js
xlat
in
ror
cmp
out
cmp
sbb
arpl
sub
aam
mov
repz
and
or
xchg
push
sbb
inc
push
adc
gs
sbbl
sbb
mov
roll
jp
sbb
pop
mov
mov
adc
icebp
out
loop
sub
adc
add
call
xor
mov
sbb
lret
ja
sahf
mov
js
sbb
sbb
cmp
xor
mov
mov
sub
es
punpckldq
subb
xchg
loope
mov
dec
sub
sbb
les
cmovge
mov
adc
gs
add
or
adc
daa
fcomps
add
sbb
sbb
stc
mov
or
ffree
orb
cltd
inc
sub
adc
sub
adc
push
das
push
inc
jne
loopne
add
or
in
insb
mov
dec
push
cmp
neg
es
cmp
cmp
inc
push
mov
inc
lea
pusha
add
push
mov
add
lret
xor
lods
cli
mov
or
sbb
rolb
pushf
jbe
or
call
mov
pop
fsubl
pop
xchg
sub
xlat
lock
sbb
push
sbb
sub
push
idiv
ss
std
add
movsl
xchg
and
les
call
pop
pop
adc
roll
dec
or
adc
xchg
inc
add
mov
sub
push
inc
jbe
in
flds
shrl
sahf
push
mov
adc
add
cmp
pop
dec
les
push
sbb
cmp
add
sbb
jnp,pn
pop
lock
jne
cld
pop
sbb
dec
pushw
push
push
adc
mov
sbb
add
mov
dec
pop
xchg
mov
aas
call
std
sub
sub
adc
xchg
push
cmp
leave
push
sbb
sub
xchg
fstl
or
and
int3
sbb
adc
add
jge
mov
adc
es
and
or
jp
mov
fmulp
sbb
test
adc
push
sarb
out
mov
add
sub
sbb
dec
or
sub
sub
xor
out
pusha
add
or
or
xchg
adcl
sbb
or
add
push
jo
dec
jg
loope
inc
and
sbb
and
push
orb
mov
xchg
loopne
pop
pop
shr
mov
decl
int
sti
rcll
stos
push
cwtl
jmp
mov
add
andl
mov
push
movhps
adc
cmp
or
std
aaa
cmp
movsb
mov
loopne
cmp
stos
add
pop
sbb
dec
std
adc
aas
das
mov
xchg
jecxz
fdivrs
add
mov
push
call
cld
or
repz
sbb
xor
pusha
icebp
and
adc
int3
push
sbb
sub
seta
sub
mov
shl
adc
sbb
sub
xchg
pop
adc
mov
push
add
cmp
lea
sbb
fiaddl
loop
mov
and
cmp
ret
cwtl
adc
ret
out
or
adc
pop
arpl
add
dec
mov
scas
lods
pop
dec
or
and
jo
and
add
cmp
mov
pushf
sbb
cs
imul
lods
je
mov
or
xor
jne
and
or
mov
or
shlb
popl
decl
push
stos
add
sbb
pop
pop
add
inc
dec
into
das
aas
or
ljmp
dec
dec
ss
adc
aaa
sub
jbe
push
movsl
sbb
stos
pushf
push
adc
push
ret
mov
outsb
test
dec
sub
iret
inc
and
jp
xor
dec
fs
pop
adc
and
cmp
imul
loop
movb
and
clc
adc
rorl
push
fimuls
pop
cmp
sbb
lret
and
and
mov
loopne
mov
jne
test
adc
push
out
or
fldcw
inc
and
push
shlb
dec
push
stos
cmp
cld
mov
rorl
cmpsb
xor
test
dec
xchg
cmp
pop
mov
clc
xor
cmpsl
mov
add
andl
nop
add
es
call
arpl
in
fcomip
xchg
out
pop
cli
adc
sub
sub
sbb
call
jge
pop
xor
add
and
rolb
or
xor
add
cli
jb
pop
rolb
and
dec
ljmp
pop
add
sub
ret
push
int3
add
push
js
mov
jo
fsubs
pop
js
lods
mov
sbb
cmp
adc
cmp
inc
shlb
xor
sbb
cli
mov
int3
lds
std
add
sbb
push
dec
add
clc
psadbw
push
or
int
loopne
sub
cmp
add
or
push
ja
adc
es
mov
or
adc
cmp
lds
sbb
mov
loopne
mov
adc
les
or
jb
sbb
bound
add
mov
push
mov
add
push
mov
movsl
outsl
dec
push
pusha
xor
scas
jno
pop
pop
dec
pop
sbb
cmp
inc
pushf
sbb
stos
adc
cmpsl
dec
add
pop
sbb
inc
sbb
inc
or
arpl
sbb
push
ds
cmc
shlb
or
jmp
adc
sub
add
push
imul
pop
roll
arpl
or
xchg
mov
int
xlat
pop
inc
add
mov
sbb
testl
lret
dec
pusha
dec
cmpsl
nop
repnz
add
cmp
adc
mov
jb
lea
xchg
dec
mov
xchg
jmp
fists
jmp
cmpsb
inc
mov
je
pop
or
dec
aas
and
pusha
mov
aam
pushf
ss
dec
cmc
lea
dec
dec
xchg
xor
adc
daa
movsb
fdivs
cli
ljmp
addl
adc
outsb
call
je
loope
pop
adc
or
push
pop
xor
xor
push
add
out
inc
push
or
dec
jmp
add
push
mov
lock
add
xor
shll
in
add
or
cmpsb
and
push
pop
repnz
or
pop
mov
imul
out
idiv
insl
sub
insb
dec
dec
in
mov
mov
into
cltd
mov
frstor
dec
sub
sti
rcl
xchg
cmp
inc
lods
and
jns
incb
in
adc
xchg
bound
and
xor
and
or
or
hlt
push
das
popa
add
adcl
jb
sbb
push
adc
rcrb
add
pop
or
clc
dec
pop
test
movsl
or
and
sarl
add
repnz
movsl
jb
call
push
pop
mov
incl
test
sbb
sub
dec
pusha
or
shlb
mov
add
jo
cmc
adc
adc
and
or
pop
sti
sbb
xchg
or
mov
or
pop
lock
cs
add
lock
xor
movsl
adc
stos
lret
js
aas
adc
or
inc
adcl
mov
adc
jne
push
icebp
jecxz
cli
add
cmp
sub
sbb
dec
incl
inc
sbb
inc
fldl
adc
push
imull
and
rorl
xchg
xchg
clc
adc
mov
hlt
and
cmp
sbb
lcall
mov
paddw
aas
sub
and
sti
and
test
sbb
cs
syscall
nop/reserved
push
push
aad
push
push
arpl
mov
popa
cmpsl
inc
les
add
sbb
stos
sbb
clc
jmp
adc
jae
inc
adc
in
inc
pop
icebp
xchg
loop
dec
xor
dec
add
sub
cmpsl
test
scas
das
xor
decb
or
nop
jp
or
test
mov
xchg
push
scas
and
or
aad
das
lar
xor
add
ror
in
inc
bound
cld
loope
xchg
cmp
daa
sub
rorb
outsl
mov
and
cmp
xchg
hlt
add
cltd
and
inc
add
mov
cmpsb
popf
and
add
or
push
test
adc
lock
adc
pop
daa
lods
lret
loope
ss
sbb
pushf
sbb
jne
pop
aaa
test
cmp
test
jg
inc
cmp
push
sub
and
and
or
nop
adc
xchg
cmc
cmpsl
or
mov
in
dec
sbb
and
and
fcompp
call
and
aas
add
and
sbb
and
or
pop
pop
inc
add
roll
outsl
mov
xor
mov
adc
rcl
xor
outsb
adc
arpl
cmpsl
not
lahf
sbb
and
arpl
dec
jecxz
xor
es
xor
pop
pop
lret
dec
pop
sub
pop
add
jns
add
jno
add
out
cmpsl
imul
ret
or
test
add
cld
stc
xor
aad
and
dec
lods
or
adc
cmp
adc
out
cli
jbe
mov
fwait
pop
imul
and
xor
inc
incb
inc
clc
dec
lock
sbb
xor
push
dec
mov
or
sbb
cld
xor
into
cmp
add
xchg
add
nop
js
pop
ljmp
inc
pusha
push
cld
testb
ret
add
add
fwait
sbb
enter
adc
push
addw
outsb
or
add
dec
daa
pmovmskb
test
ss
out
loopne
push
movsl
or
inc
test
add
insl
pushf
mov
js
and
sub
and
cmp
sbb
push
add
pop
std
das
add
movsb
adc
push
aaa
sbb
lock
lret
ljmp
xor
push
mov
sub
mov
push
inc
ljmp
inc
add
sbbb
mov
movsl
test
push
rcrl
mov
or
mov
sub
mov
dec
adc
cs
cli
out
adc
adc
stos
ljmp
mov
les
adc
add
xor
adc
daa
xacquire
xlat
mov
das
add
faddl
inc
push
add
iret
mov
sti
add
in
cs
pextrw
adc
add
test
mov
add
mov
test
jb
addr16
and
loop
cmpsl
cmp
scas
imul
je
jbe
add
sarb
fidivrs
cld
adc
add
push
clc
push
pushf
jne
mov
jecxz
loopne
or
sbb
dec
leave
sbb
filds
shlb
int
das
mov
add
int
iret
cltd
push
cmp
das
or
and
and
loopne
pop
nop
sub
les
push
sub
fidivl
divl
inc
and
and
imul
scas
pop
pusha
or
adc
jge
cmp
xor
sub
adc
mov
xor
add
push
cmp
sub
push
sbb
loop
pop
das
sbb
mov
mov
pop
mov
jecxz
js
dec
cmp
jge,pn
adc
out
clc
cmp
dec
cwtl
lret
inc
mov
sbb
aas
or
dec
xor
inc
pushl
sub
pop
xchg
popf
mov
mov
xor
insb
sub
fmull
sbb
aam
cmp
sbb
inc
andb
xchg
out
sti
inc
cmp
loope
adc
cmp
or
jmp
push
sbb
xor
mov
movsl
or
xchg
mov
jo
aam
jl
xchg
subb
or
adc
push
int3
movsb
cli
and
and
inc
xor
jl
push
add
insb
test
test
cld
add
add
mov
or
add
insb
dec
mov
out
les
loop
mov
pop
cmp
and
test
scas
cmpsb
inc
push
cmp
addl
adc
movl
mov
fwait
lock
or
adc
pusha
pushf
aam
xor
add
test
pop
adc
sub
sub
or
adc
add
cs
and
push
or
les
cli
sbb
inc
test
cmpsl
hlt
push
and
sub
sub
push
xchg
addr16
icebp
pop
or
add
pusha
pop
into
sbb
sbb
cs
jbe
and
or
sub
sti
push
pusha
mov
inc
outsl
dec
jge
add
jmp
xor
push
icebp
and
aam
cli
pop
fldenv
sbb
movsl
lcall
mov
lret
dec
inc
fldl
xor
fistps
xor
push
push
add
cld
or
lret
and
in
sbb
mov
icebp
sbb
ljmp
push
ja
lea
xchg
loop
xor
cmp
les
mov
and
xchg
mov
push
sbb
jbe
das
pop
enter
std
sub
mov
sbb
and
add
add
mov
sahf
shlb
pushf
movntq
clc
pop
lods
sub
mov
mov
xorl
andl
sub
jns
and
push
and
push
and
mov
insb
ja
ss
mov
jno
inc
sarb
push
ljmp
and
pop
jo
ss
jp
cmpsl
or
jo
lock
fisttpl
enter
adc
mov
add
pop
push
push
stos
sub
popa
stc
inc
add
sub
and
push
inc
mov
mov
movsl
fs
jns
adc
roll
ja
push
push
ljmp
stos
jne
inc
notl
xchg
adc
cmp
mov
mov
cld
insb
lock
sbb
insl
hlt
mov
add
or
xor
xchg
add
push
jecxz
dec
dec
stos
and
adc
push
sub
out
or
sbb
adc
mov
or
icebp
xchg
add
add
test
aas
loop
add
ds
daa
loop
pop
mov
push
mov
sbb
jle
pop
or
mov
cmp
std
sub
cwtl
cmpsb
test
ret
mul
mov
adc
adc
cli
addl
xchg
xor
lods
cmp
out
cmp
pop
scas
add
adc
int3
xor
shlb
adc
or
adc
and
mov
loopne
fwait
inc
sub
sbb
xchg
nop
loope
pop
pushf
inc
les
mov
andl
mov
mov
sti
or
lea
xchg
push
jbe
movsb
adc
movl
pop
inc
xor
fldt
add
push
add
stos
add
jne
inc
ss
push
loope
adc
dec
push
adc
inc
fsts
rolb
add
leave
adc
adc
cmpsl
pushf
sbb
inc
cmp
sbb
push
mov
add
add
loopne
sub
xorl
mov
movsb
les
sbb
inc
cmp
add
arpl
xchg
xor
clc
add
shlb
inc
and
jo
push
add
cmp
clc
xchg
cmpsb
mov
fsubl
sbb
test
rcll
xor
inc
aaa
add
shrb
mov
popf
leave
pusha
push
jb
or
inc
xchg
sbb
mov
outsb
or
test
out
sbb
push
or
je
xchg
addr16
lret
inc
jle
mov
aam
daa
xchg
inc
xchg
xor
and
addr16
add
xor
into
lret
aaa
and
sarb
stos
jno
and
adc
enter
add
repz
adcl
sti
scas
gs
addr16
inc
xor
mov
or
xorb
mov
je
or
pop
loopne
rcrl
bound
mov
stos
xor
inc
lcall
inc
inc
xchg
lar
lret
jl
pusha
hlt
jp
testb
stc
pop
or
aas
add
dec
xor
sbb
and
out
push
and
or
inc
fiaddl
aas
dec
jne
cmp
fldl
push
mov
inc
cmpsl
adc
adc
lds
jo
jo
adc
inc
adc
and
sub
rorb
movsl
push
pop
pop
inc
ret
push
pusha
add
xor
into
adc
add
push
cs
popa
add
inc
pop
push
sbb
and
imul
xor
imul
call
mov
scas
or
sbb
or
dec
lock
mov
repnz
incl
and
sub
jbe
imul
decl
sbb
pushf
movsb
pop
lret
outsb
add
or
mov
or
inc
inc
int
or
mov
test
mov
loopne
or
xchg
push
add
pop
and
xchg
push
lret
add
faddl
notb
js
inc
popa
add
mov
adc
movsl
aam
pmaddwd
cli
cli
sarb
insb
movsl
repz
sbb
inc
or
dec
sbb
add
add
and
lock
sub
addb
int
push
ret
rolb
adc
fisubrl
mov
inc
or
dec
sbb
jmp
xor
jno
add
add
js
add
sbbb
push
popa
add
add
mov
fs
xor
push
push
mov
inc
jmp
xchg
out
push
or
in
stc
or
add
jne
add
rol
inc
incb
adc
or
in
pop
inc
push
pop
xor
sbb
and
mov
push
mov
les
mov
lds
ljmp
mov
cmp
es
inc
mov
insb
imul
nop
push
ja,pn
add
aam
es
movsb
shrb
add
sbb
xor
xchg
roll
mov
mov
xorl
pop
fsts
cmc
lret
or
add
dec
xorl
pop
mov
add
jo
inc
push
push
shlb
dec
add
movups
push
dec
out
daa
and
xorb
sbb
inc
and
sysret
movsl
and
adc
adc
push
pop
mov
adc
cmp
cmp
mov
and
push
push
lods
dec
mov
cmpb
inc
xchg
or
aam
pushl
scas
xor
ja
sub
lods
or
sbb
rclb
mov
fstps
cmp
xor
and
shlb
lock
and
dec
inc
mov
ja
test
lea
pushf
dec
std
or
push
shll
add
js
xlat
add
xor
push
ficomps
push
mov
sub
je
cmp
push
or
or
mov
sarb
mov
and
aas
and
hlt
mov
fsubrl
and
push
inc
popa
xchg
xor
jmp
sub
xchg
cmc
sbb
jo
bound
push
sub
iret
int3
aas
sbb
xchg
sbb
or
insl
fcoml
add
push
in
sbb
icebp
sub
adc
or
cmp
add
xor
pop
inc
jmp
pop
or
xchg
lret
xor
cmp
sub
sub
push
cmp
lret
enter
adc
mov
dec
mov
xor
cmc
cli
mov
dec
out
add
mov
add
push
in
sub
test
mov
xor
loop
push
lcall
mov
aad
push
js
jle
xor
mov
mov
dec
inc
es
add
clc
mov
test
sub
sub
aas
or
lods
adc
xor
add
icebp
adc
shrb
and
cmp
xor
mov
aad
arpl
sub
into
xor
inc
fs
lcall
adc
or
push
testl
xchg
cltd
add
cmp
popf
cmp
and
addr16
xorl
loopne
pop
sub
add
sbb
test
cltd
aas
jl,pn
xchg
push
inc
rolb
jge
mov
movsl
add
and
loop
ja
or
cs
sub
loopne
mov
sbb
stos
xor
sub
pusha
imul
cmpsl
sbb
arpl
adc
dec
xor
xor
inc
sbbl
aam
adc
aaa
adc
int3
insb
and
jecxz
inc
xor
lods
lods
lods
sbb
sti
or
pusha
fs
push
jecxz
cltd
out
sbb
or
sbb
or
test
xchg
movaps
sbb
cld
pop
imul
sbb
add
xorb
jo
add
xchg
jmp
xor
insb
push
sbb
dec
insb
inc
sbb
mov
xchg
push
sbb
inc
lret
iret
and
add
add
jns
xor
insl
lods
mov
rclb
in
xor
pop
fsubs
xchg
dec
fmuls
inc
sub
mov
orl
out
js
push
decl
or
xor
and
dec
and
pop
lock
dec
mov
cmp
jne
inc
cmpl
std
and
inc
or
dec
push
int3
mov
bound
xchg
push
dec
bound
mov
push
push
pop
mov
mov
hlt
sub
lods
pop
push
pop
call
dec
adc
mov
inc
adc
or
das
push
inc
mov
jo
or
inc
mov
cld
lock
inc
xor
movsb
inc
add
adc
std
loopne
test
sub
mov
xchg
inc
mov
add
inc
adc
inc
mov
inc
adc
mov
popa
adc
je
sub
clc
sub
and
pop
in
rorb
aas
or
cs
sbb
dec
lret
sub
sbb
push
cmp
fistps
sbb
or
add
lcall
or
adc
sub
fcoml
sub
inc
std
icebp
add
fwait
mov
pushf
addb
xor
dec
sahf
sbb
mov
cmp
rorb
xor
and
jecxz
push
loope
add
adcb
cmp
cmp
add
xor
js
jbe
ljmp
or
sbb
popa
psrlq
sarl
inc
les
cmp
sub
ret
lds
inc
roll
pop
std
or
inc
aas
aaa
aaa
shrb
and
into
xor
ds
dec
or
pop
bound
mov
inc
adc
or
jp
aas
or
pop
imul
or
adc
icebp
xor
jp
lret
push
jo
inc
or
xchg
jae
push
stos
and
inc
cmpsl
loop
fisubl
das
mov
or
dec
and
sub
dec
ret
pop
sbb
dec
cmp
xor
aam
daa
push
orl
dec
insb
sub
dec
and
push
add
imul
sti
cld
or
repz
in
and
push
sub
sbb
or
pop
add
cli
adc
sub
sbb
pop
arpl
icebp
daa
into
sahf
cli
push
push
pop
push
push
xor
mov
cmp
cld
inc
adc
add
adc
daa
inc
or
jp
and
push
jno
loop
or
sub
icebp
add
loopne
pusha
es
dec
jae
ret
mov
pushf
call
mov
out
jmp
ss
pop
xrelease
sti
and
fsubrl
clc
jmp
xlat
fs
mov
add
push
xor
add
jnp,pt
mov
add
add
mov
and
push
ljmp
addb
xor
sub
pusha
pop
push
pop
ljmp
pop
inc
popa
add
lds
inc
shrl
bound
add
cld
push
push
sub
xorl
cmp
fmull
dec
inc
test
fs
add
insb
mov
ret
sbb
popa
and
jecxz
dec
imul
add
or
push
es
or
add
adc
cmp
add
xor
sbb
loope
sti
add
and
mov
mov
pop
popf
sahf
int
adc
add
enter
pop
push
inc
pop
or
pop
inc
cmp
cs
mov
push
data16
adc
adc
inc
mov
add
inc
inc
sub
inc
xor
xchg
push
push
in
add
loope
fwait
icebp
sbb
in
data16
sbb
or
ja
fmull
add
pop
int
adc
ret
and
aaa
or
sub
mov
sub
hlt
scas
scas
and
or
sub
add
add
lret
adc
pop
clc
hlt
adc
push
inc
es
add
mov
adc
xor
dec
enter
cmp
or
xor
push
mov
shlb
sbb
mov
pop
or
rcrb
ror
rorl
fwait
loop
es
fldl
add
sub
shlb
cmp
cmp
push
fisttpl
into
stc
inc
add
aas
popa
cmc
push
out
add
lahf
idivl
es
jmp
sarl
add
sub
int3
push
out
mov
movsb
xchg
and
jnp
and
and
xor
jne
rclb
adc
sbb
push
xchg
inc
mov
sub
adc
or
jecxz
lods
mulb
or
mov
add
sub
inc
aam
xchg
inc
lret
fst
jp
invd
cld
or
adc
inc
sub
shld
aas
adc
aad
or
pop
cmp
test
loope
inc
sub
inc
xchg
jne
pop
movsl
mov
adc
sub
push
repnz
scas
and
clc
and
add
loopne
or
lcall
ss
push
clc
mov
es
nop
push
rolb
movsl
aaa
jo
ds
scas
add
adc
roll
mov
lock
fs
iret
sbb
or
ret
or
or
sub
push
push
or
and
or
rol
das
jmp
xchg
mov
iret
dec
add
jne
rcrl
or
sbb
in
sbb
mov
out
add
push
stc
adc
cmp
push
sbb
and
pop
or
fdivrl
and
add
cmp
and
add
or
pop
mov
pop
add
arpl
test
out
std
dec
sbb
sub
pop
stc
push
movsl
or
pop
push
sub
add
ljmp
daa
into
cmp
arpl
pusha
or
pushf
movsl
mov
es
sbb
in
sub
mov
in
add
xor
xchg
sbb
sub
data16
dec
add
outsb
or
and
cld
mov
push
adc
push
daa
push
fwait
imul
lcall
dec
cwtl
loope
and
fldl
adc
lods
adc
imul
pop
frndint
jg
bound
jo
push
mov
mov
icebp
pop
sbb
or
iret
jl
stos
push
add
add
inc
das
mov
hlt
xchg
push
mov
mov
in
pop
mov
cmp
and
mov
cmp
mov
sbb
sub
add
mov
jecxz
push
aas
xor
push
mov
mov
sbb
mov
xchg
pop
fistps
adc
inc
pushf
divb
or
mov
dec
daa
into
cld
push
adc
mov
cli
xchg
loope
inc
push
enter
jl
inc
hlt
jp
or
repnz
push
adc
xor
cmp
sub
aad
imul
and
rorb
mov
and
nop
pop
xorb
sahf
pop
mov
xchg
or
loope
add
add
test
js
mov
popf
pop
jecxz
ret
pusha
mov
sbb
or
cld
sub
das
adc
pmaddwd
rolb
test
enter
push
incl
enter
pushf
scas
pop
jno
xchg
cmp
std
lods
mov
push
sti
mov
add
add
sub
sbb
daa
sbb
lret
mov
and
cmp
push
cmp
sahf
pop
movsl
xchg
inc
pop
sbb
pop
cmp
adc
and
pop
loopne
decb
xchg
or
lahf
dec
push
sub
dec
outsb
xchg
or
nop
ljmp
mov
rorb
cmp
mov
and
incl
jp
cmp
fwait
subl
adc
mov
aas
adcl
adc
lock
loopne
orb
mov
leave
inc
outsl
call
push
test
cwtl
add
popf
push
add
add
popf
push
mov
adc
cmp
icebp
shrb
lea
out
add
xchg
cltd
negb
add
inc
or
movsb
jp
xchg
mov
popa
sub
add
lds
mov
out
add
div
or
add
incl
or
adc
mov
sbb
mov
push
add
aas
mov
sbb
mov
mov
call
lea
sub
push
inc
fcompl
and
mov
inc
xchg
insl
sbb
sub
adc
push
pop
pcmpgtd
shlb
push
vmovntps
sub
xor
inc
add
push
addr16
push
mov
pushf
or
dec
push
inc
xchg
add
dec
cwtl
adc
dec
xor
aad
inc
or
jb
jno
push
xchg
fmul
adc
les
rclb
jbe
cmp
stos
sub
xor
orb
lods
xor
or
add
sub
and
ss
cmp
inc
cmp
and
cmp
addb
rcll
shrb
loop
sahf
jg
jp
nop
jecxz
add
jmp
sbb
aam
mov
lret
lahf
adc
or
jns
rcll
mov
mov
push
orb
push
add
adc
inc
hlt
jbe
push
add
push
sbb
lret
pusha
sbbb
pop
mov
std
ds
test
sbb
mov
clc
into
pop
mov
jmp
add
or
js
push
andl
cltd
sbb
add
cmp
push
sti
add
xchg
imul
scas
ss
cwtl
jne
clc
pop
sahf
sbbl
cltd
ret
xchg
sahf
adc
pop
mov
cmc
ds
push
or
add
xchg
addr16
push
add
push
jb
jmp
pop
or
pop
dec
test
jmp
fdivr
jmp
and
cmp
pusha
and
dec
das
cltd
or
pop
ljmp
add
movsb
dec
aaa
js
les
gs
push
mov
in
add
loopne
pusha
mov
and
and
sub
lea
je
or
inc
sbb
and
sbb
xor
inc
loopne
sbb
cmp
jne
in
push
sbb
dec
jnp,pt
adc
cmp
outsb
sub
adc
fistps
and
test
push
push
cli
xchg
popa
nop
lds
dec
or
mov
inc
push
in
cmp
xor
mov
adc
mov
or
test
push
xor
fimull
add
jo
or
inc
push
and
xchg
push
das
mov
and
mov
jne
aaa
sub
sbb
and
ret
push
and
inc
adc
add
lods
or
pop
cmp
fsubrp
inc
inc
inc
sbb
lret
add
cmp
or
repz
add
push
out
bound
xchg
pushf
mov
dec
daa
sub
clc
or
outsl
lea
inc
xor
or
test
pop
inc
mov
cwtl
lods
cmpsl
add
mov
imul
add
dec
cwtl
mulb
call
push
aam
test
pop
jmp
or
pop
or
push
inc
dec
ret
sbb
push
sbb
add
add
push
xor
adc
jne
mov
sbb
cwtl
cs
add
ficoml
loope
inc
in
test
ret
pop
ds
xchg
push
mov
inc
pop
popa
mov
add
adc
scas
jg
or
jg
ss
mov
pop
insl
xor
clc
pushf
add
dec
sbb
negb
cld
daa
jbe
push
push
push
je
jno
and
dec
loopnew
mov
mov
sbb
add
add
arpl
lds
xchg
xor
add
cld
int3
pop
daa
sub
imul
adc
inc
into
and
jl
sti
int3
mov
pop
rcll
add
sarl
fnsave
sub
add
call
in
xorl
sbb
cmp
pop
js
shl
cmp
or
xchg
rcll
stos
lock
or
lock
pop
aam
xor
cld
push
dec
dec
imul
scas
das
sub
sub
sbb
pusha
push
inc
mov
xor
xor
loope
dec
lret
cmp
xchg
es
addl
pop
stos
and
push
inc
cld
roll
fists
xorb
mov
jno
sub
and
test
pop
or
sub
pusha
mov
mov
aaa
aaa
add
push
adc
mov
les
andb
into
mov
add
or
ror
inc
shlb
pop
or
fstpl
add
pusha
jo
add
and
xchg
xchg
cltd
call
addb
cld
push
sbb
or
inc
cs
push
lea
mov
test
les
or
mov
imul
js
xchg
push
lods
adc
pop
in
arpl
mov
add
loopew
push
sub
xor
std
or
and
movsl
pop
jmp
add
mov
sahf
filds
mov
inc
push
lods
into
cld
or
add
add
or
les
and
test
xchg
loopne
xor
clc
sbb
push
mov
push
xchg
bound
sub
sub
and
xor
push
sbbb
inc
sahf
sbb
pop
lods
sbb
adc
pop
xorb
or
add
or
add
ljmp
xchg
pop
sub
xchg
or
comiss
loop
lcall
sbb
mov
pop
dec
adc
mov
and
out
adcb
loope
bound
adc
or
mov
xchg
ja
and
push
jl
cmp
pusha
add
std
sub
movsb
xchg
movsb
cwtl
pop
jmp
js
push
pop
add
aas
add
rolb
and
ret
dec
jo
dec
fstpl
outsl
sbb
adc
jnp
push
fs
cmp
cmpsl
adc
sbb
or
sbb
adc
adc
add
nop
push
or
cwtl
es
notb
insb
or
dec
out
divps
xlat
xlat
xchg
lds
cld
pop
cmp
add
or
lahf
test
mov
adc
inc
rolb
or
mov
sbb
scas
push
sub
sub
adc
sbb
sbb
dec
shrd
in
add
pop
xor
pop
or
sbb
adc
cmp
or
pop
mov
adcl
imul
mov
adc
dec
in
jmp
push
push
scas
cld
clc
jo
push
mov
js
mov
xchg
inc
push
or
add
push
mov
add
dec
lcall
pavgb
lds
xlat
psrad
lds
invd
fs
lods
outsb
aad
aas
inc
mov
mov
es
mov
push
clc
sbb
mov
iret
mov
jno
xchg
adc
dec
aad
sbb
rcrb
pop
and
xor
call
add
add
dec
minps
in
push
push
adc
jnp
popf
or
pop
pop
add
mov
lods
push
add
dec
clc
mov
ss
dec
cmp
jbe
jl
push
mov
sub
add
aad
js
repnz
add
xchg
mov
cmpsb
add
cmp
std
loopne
loopne
stc
or
sub
xor
dec
shl
cs
inc
nop
xorl
movb
jg
sbb
sub
push
cmp
insl
add
cmp
dec
cli
rorb
loope
xor
or
dec
pop
add
mov
andnps
xor
add
add
out
add
sub
mov
das
push
es
daa
add
pop
test
lock
cmp
xchg
std
pop
add
xor
xchg
add
cmpsb
lods
push
inc
stc
shlb
xor
lock
scas
push
and
test
shlb
cli
pusha
mov
xor
inc
dec
ds
xor
sbb
pop
mov
cli
add
fsubrs
add
gs
mov
divb
adc
xchg
xor
cs
add
fadd
adcl
out
loop
adc
sbb
sbbl
roll
pop
push
mov
pop
lcall
testb
mov
sti
stos
cs
movsl
je
sub
mov
inc
jl
je
jnp
test
pop
add
dec
test
rolb
into
push
lret
or
movsb
cmovge
bound
and
push
mov
and
push
and
inc
movsb
add
inc
shll
dec
push
das
lods
nop
idiv
add
icebp
add
jl
adc
mov
push
stos
lds
add
or
add
cmpsl
sbb
or
adc
das
cmp
dec
flds
adc
jne
cmpsb
test
cmp
out
roll
or
pop
lcall
xor
adc
sbb
jl
ja
inc
or
add
ret
int3
adc
dec
stos
add
test
stos
cmp
ss
pop
mov
or
incb
xchg
divl
test
xchg
sub
dec
mov
add
xor
rorl
add
mov
inc
sbb
mov
fmuls
cmp
call
gs
icebp
cmpsb
das
or
xor
mov
push
add
or
aam
pop
ret
insb
inc
or
je
or
test
xchg
pop
and
or
jp
sub
out
xchg
fdivrl
test
movsl
cs
xchg
dec
bound
popa
aad
test
dec
adc
movsb
stc
mov
lock
dec
pop
decl
mov
loope
inc
and
cmp
sbb
cmpsl
inc
adc
sbb
rcr
push
leave
stos
add
xor
lds
push
loope
add
mov
pop
xlat
add
sti
jns
btr
test
test
adc
outsb
mov
dec
lcall
push
incl
adc
sbb
std
rorb
and
std
movsl
xor
lea
popa
add
mov
pop
add
add
out
out
and
decb
and
jo
loope
mov
or
inc
xor
sbb
adc
and
js
pop
inc
outsl
std
pop
nop
or
js
add
fisttpll
mov
loope
adc
xor
jl
cmpsl
and
lock
jbe
outsl
add
rdtsc
xor
and
add
or
sbb
jg
pop
int3
xor
jo
sub
cmp
insl
cld
movsl
loopne
cmp
stos
jb
shl
test
add
shr
cmp
pop
mov
push
das
ret
push
faddl
dec
rolb
adc
adc
jp
es
and
es
lret
pop
incl
das
inc
call
stos
cs
or
sbb
std
add
sub
xchg
fiadds
xor
add
and
lods
push
lock
cmp
sbb
ss
xchg
insb
or
fucom
inc
ss
or
dec
pop
push
xchg
and
push
add
push
das
or
lock
or
cmpsl
push
sahf
xor
lcall
fwait
movsb
enter
pop
scas
lods
aas
das
sub
jo
or
data16
xor
cmp
add
sbbl
xchg
push
inc
pop
repz
push
in
and
sbb
pop
sbb
fildl
sub
inc
sbb
scas
ljmp
pop
cld
mov
or
inc
sub
ljmp
outsb
mov
dec
insb
outsl
jno
xor
loop
cld
push
inc
xchg
and
rol
mov
das
das
pop
ljmp
or
lds
or
sbb
or
and
and
push
add
sub
inc
lcall
shll
push
add
xlat
cld
clc
mov
jge
cmp
or
adc
inc
mov
adc
sub
cmp
mov
xor
sub
cmp
shrb
sub
rcrl
bound
adc
jno
push
push
or
adc
repnz
pop
dec
out
icebp
or
fs
pop
push
loop
imull
jae
pop
or
cld
adc
inc
lock
sbb
loopne
jo
test
sbb
push
ss
xchg
cli
sub
adc
adc
ljmp
aaa
or
sub
push
xor
sbb
lds
xor
sbb
dec
push
or
or
push
mov
dec
shlb
imul
rorl
lods
adc
xchg
rcll
add
dec
add
and
xorl
mov
pop
inc
add
ljmp
adc
orl
sbb
ret
leave
cmpb
test
inc
daa
mov
dec
dec
pusha
adc
dec
addr16
lods
test
sub
iret
cli
dec
adcl
sbb
clc
push
filds
addl
or
sbbl
xchg
and
std
xchg
rorb
jb
cmp
xor
ret
fsubl
pop
add
add
and
fdivr
adc
mov
add
push
push
push
dec
xorl
jo
test
add
add
xchg
inc
stos
test
insb
fsubrl
nop
dec
cmp
mov
cmp
mov
fstpl
out
jle
sub
lret
fidivrs
loop
mov
cmp
adc
lock
in
adc
dec
add
pop
mov
add
cmp
mov
push
add
jbe
stc
add
lock
or
pop
push
addr16
and
adc
ljmp
pusha
sti
dec
popa
lea
xor
mov
or
cmp
xchg
xor
jno
fmuls
push
into
xor
add
bound
sti
incl
pop
jne
lea
sbb
sub
sti
mov
add
or
adc
or
push
inc
hlt
test
inc
rorb
sbb
cmpsb
pop
das
and
mov
add
test
cs
and
or
pop
lret
dec
or
call
sub
lock
xor
cmp
ss
adcb
add
pop
lds
or
shl
les
pop
inc
or
mov
ds
loop
or
loop
loopne
arpl
divl
and
fimull
push
xor
imul
orb
cmp
jl
add
or
loopne
adc
es
cmp
adc
push
inc
push
shl
or
lods
fimull
pop
nop
lcall
ret
dec
inc
popa
cmc
ss
lock
cmovg
and
arpl
or
cmp
mov
mov
fadds
dec
pop
scas
stc
es
es
sub
sahf
enter
and
ss
sbb
dec
testb
sub
cmp
push
sub
sub
inc
sbb
or
push
in
mov
fs
mov
push
les
mov
jmp
sub
pop
inc
insl
add
sub
insb
cli
xor
ret
add
pop
cmp
inc
test
sbb
jle
aam
inc
dec
lods
jne
xchg
push
divb
bnd
pusha
cmpl
sbb
pop
repz
push
rol
adc
sub
mov
push
imul
mov
sbb
xor
jne
test
ljmp
and
pop
stos
sbb
mov
addr16
adc
xchg
inc
cmp
jmp
mov
inc
lahf
push
shr
push
and
or
cmp
and
test
jbe
add
mov
ficomps
mov
xor
add
jno
inc
aam
add
push
sbb
aam
push
loop
cmp
test
ss
pop
push
xchg
dec
wbinvd
lock
or
int3
jmp
xor
inc
xor
test
jl
call
es
cmp
aam
fsubrs
dec
add
sbb
adc
ret
es
mov
mov
clc
xchg
mov
pushf
sar
divps
lock
es
pop
inc
inc
mov
push
push
ret
mov
xor
test
sbb
cltd
mov
je
mov
sbb
xchg
mov
add
pop
push
sub
cmpsb
shlb
lea
xchg
sbb
push
jb
jo
or
sub
and
inc
or
imul
sub
sub
in
sbb
mov
push
divl
push
xor
and
iret
cmp
aas
push
loope
xor
mov
mov
andb
aam
mov
add
jnp
cli
sbb
sub
hlt
ja
adc
adcl
call
cld
add
enter
sub
rclb
arpl
sub
adc
pop
xchg
lods
add
call
int3
add
pop
movsl
pop
stos
les
add
enter
jp
adc
stc
adc
jp
aaa
cmp
pop
mov
add
adc
and
aam
xchg
cmpsb
dec
imul
pop
pop
jae
xor
or
mov
test
pavgw
push
lock
arpl
add
ret
dec
mov
aad
pop
movsb
cmp
xchg
jo
sbb
or
pop
popf
sub
jne
xor
sbb
repnz
add
test
inc
mov
sub
dec
sub
and
adc
add
adc
inc
sub
ret
push
sub
jnp
fcmovnu
xor
sbb
inc
mov
pop
cmp
leave
repnz
das
adc
imul
sub
cltd
imul
inc
addb
sub
xchg
scas
push
sub
mov
or
push
jne
jmp
jl
push
add
push
xor
cs
inc
rorl
push
incb
insb
and
cli
jae
adc
or
imul
adc
rorl
push
or
sti
sub
or
adc
ret
je
add
dec
and
ret
popa
cmp
loop
inc
sub
or
mov
xchg
mov
ret
and
stos
jg
add
inc
cli
sub
js
xor
sbb
or
scas
adc
jo
es
adc
test
xchg
call
cltd
jno
shlb
and
mov
adc
mov
and
or
jb
push
rclb
addr16
sti
push
push
mov
push
mov
mov
and
movsl
cmc
add
stos
add
add
jmp
fmuls
pop
pop
dec
ss
push
jae
add
loopne
xchg
adc
add
fs
lret
and
mov
arpl
rclb
dec
ss
add
pop
add
lods
fisubrs
enter
outsb
sub
adc
pop
xchg
xor
xor
in
lcall
mov
pusha
xorl
sbb
xor
sbb
popa
sbb
clc
cmp
ret
cmp
or
jno
ss
lock
mov
or
sbb
outsb
cmp
insb
daa
adc
jne
jo
mov
adc
add
pushf
push
leave
adc
sub
xor
mov
pushf
cwtl
sub
mov
add
pop
jmp
sbb
sbb
xor
pusha
jno
popf
out
fidivrl
dec
dec
adc
adc
test
sub
mov
add
xor
mov
dec
or
inc
das
gs
sbb
sub
cmp
icebp
mov
popa
xor
stc
shlb
rorb
adc
add
sbb
shlb
in
push
mov
hlt
lods
adc
fs
dec
sbb
fs
xchg
bswap
cli
mov
dec
jne
push
or
mov
cmp
sub
xchg
std
cs
xor
dec
pop
adc
jne
cmp
mov
or
pop
mov
iret
notl
ss
addl
adcl
pop
sub
jle
adc
jnp
cmp
inc
jmp
add
test
and
int
xor
les
sbb
sbb
cmpl
loopne
loopne
popf
add
xchg
gs
or
loopne
add
cltd
mov
mov
add
dec
push
pop
add
dec
push
sbb
add
push
mov
fisubl
cld
cmp
mov
or
xchg
xor
les
testb
les
in
dec
sub
or
notb
sbb
add
sahf
frstor
dec
mov
add
lods
dec
lock
cmc
imul
adc
jle
mov
adc
lret
out
ffree
dec
cmp
mov
inc
sbb
sbb
dec
test
loope
sbb
mov
mov
das
or
in
add
xor
add
mov
sub
cwtl
ret
inc
sbb
xchg
cli
mov
orl
cmp
cmp
and
leave
xor
adc
push
or
pusha
push
vmwrite
or
sbb
sub
sbb
bound
dec
icebp
aas
or
and
xor
adc
add
adc
mov
mov
lock
adc
outsl
bound
testl
fldl
fwait
mov
and
popf
add
cs
ffreep
mov
inc
fimuls
mov
add
sub
stos
js
add
loopne
ret
adc
xchg
std
xchg
add
inc
out
push
and
or
loope
sub
and
addb
cmp
add
xor
cmc
add
out
loop
push
pop
daa
outsb
mov
xlat
add
sub
int3
cmp
or
test
xor
mov
loope
and
inc
cwtl
add
sbb
movsl
insl
les
or
mov
push
scas
or
pop
sbb
sub
pop
loope
das
iret
push
push
add
xchg
es
or
mov
sub
mov
dec
lock
and
mov
add
adc
call
sub
in
idivb
and
or
insb
popa
mov
inc
inc
sbb
mov
or
xor
mov
inc
sub
lods
xor
add
fs
inc
xor
bound
add
and
push
iret
adc
cmove
mov
sub
xlat
push
lret
iret
sub
into
scas
mov
adc
sbb
clc
mov
and
rcrb
cmpsb
into
sub
inc
pop
sub
xor
loopne
mov
cli
jne
mov
adc
lret
imul
mov
or
and
stos
dec
sub
and
sbb
sbb
incl
fadds
pop
xchg
pop
lds
jo
cmp
rclb
mov
cs
sub
adc
jae
jp
sub
push
stc
mov
or
or
ja
cs
add
or
or
push
sub
cld
xor
icebp
and
xchg
add
add
or
push
sbb
mov
pop
dec
cmp
mov
mov
shll
mov
inc
lods
addl
mov
and
and
or
dec
cltd
jb
or
and
dec
xchg
add
sbb
cmp
or
xchg
mov
in
adc
pop
inc
jo
rorl
cmp
lock
adc
pop
dec
or
xchg
ret
cmp
aad
ret
cld
clc
xchg
inc
lods
pop
mov
test
ret
dec
sbb
cmp
mov
hlt
adc
popf
aas
out
aad
imul
imul
loopne
sbb
aaa
add
xor
daa
in
sti
push
xchg
das
and
push
sbb
cmp
adc
fiaddl
add
js
mov
sbb
data16
cwtl
mov
lock
dec
lock
es
push
call
pop
or
add
aam
xor
pop
mov
adc
push
or
pop
sbb
fdivrp
or
jg
int
pop
sbb
fildl
dec
dec
insb
push
add
movsb
addr16
and
xchg
push
cmp
inc
lods
mov
ret
add
popf
jg
push
xor
push
dec
add
push
pop
lea
sarb
sbb
push
lock
mov
mov
sbb
insb
lcall
xor
xor
mov
and
add
push
xor
mov
adc
dec
pop
test
or
adc
sub
jl
fldt
int3
adc
inc
bound
push
pop
or
ret
dec
sti
inc
mov
pop
inc
mov
dec
mov
push
fisttpll
mov
xlat
and
adc
add
pop
push
ret
into
sbb
xor
rol
lret
mov
add
in
and
mov
mov
scas
bound
andl
scas
icebp
cmp
add
inc
xorl
jbe
or
pop
mov
pusha
mulb
out
imul
movsl
mov
js
aaa
xchg
dec
shlb
adc
adc
add
adc
adc
adc
mov
xchg
mov
test
add
into
or
cmp
movsb
pop
pushf
mov
add
push
push
fldl
pop
xor
mov
mov
jmp
pushf
or
lock
stos
sti
cmp
or
inc
out
pop
enter
cli
sbb
adc
lahf
add
loop
jg
xchg
and
add
fwait
outsb
mov
inc
dec
or
ret
test
mov
pop
mov
mov
ficoms
lods
push
xchg
jb
sbb
adc
leave
int3
pop
adc
or
jge
loopne
jo
mov
jp
sub
sub
dec
cmc
and
pushl
daa
xor
nop
and
sahf
add
pop
pushf
and
aam
push
inc
fadds
push
lea
sub
scas
mov
daa
test
cli
xchg
out
imul
lods
div
dec
movsb
fwait
push
repnz
pop
or
add
push
push
rorl
and
and
les
test
daa
cwtl
in
and
mov
ret
jp
out
fldenv
and
psubw
mov
iret
ss
add
imul
jecxz
pop
push
or
pop
sub
and
cmp
push
xchg
xchg
ljmp
faddl
dec
or
inc
adc
mov
cmp
xchg
lret
je
add
add
xchg
jno
jb
les
add
data16
push
testl
mov
sbb
cmp
cmp
sub
xor
add
cli
add
mov
out
cmpb
inc
add
mov
adc
insl
adc
push
sbb
int
je
rcrl
adc
pop
aam
push
add
pop
nop
icebp
popf
jns
stos
jnp
leave
xchg
push
rorb
fdivr
cld
mov
cmpsb
addb
xor
and
jb
out
add
dec
mov
dec
sub
or
hlt
push
popf
loopne
pop
cld
add
jp
and
ficomps
adc
les
leave
dec
adc
jne
cmpsb
pop
add
add
xor
ss
push
push
jo
outsb
fcmovbe
insb
clc
or
add
pop
cwtl
ret
test
aas
push
outsb
jl
int3
sti
adc
adc
cli
test
and
and
jnp
shll
sbbl
push
jle
test
filds
imul
mov
js
insl
lahf
cmp
push
and
cmpb
sbbl
outsl
sub
sub
loope
sbb
push
test
add
std
std
sub
sbb
and
push
and
and
es
pushf
add
pop
add
mov
or
xchg
lret
cmpsl
add
hlt
mov
adc
mov
push
pusha
and
daa
adc
and
loopne
enter
daa
cwtl
adc
inc
es
xchg
int
xchg
icebp
shl
adc
adc
add
sub
add
pop
and
push
int3
call
cwtl
lret
sub
or
ret
dec
jb
add
mov
push
imul
sub
in
dec
cmp
outsl
add
cmp
sub
xchg
xor
cs
mov
push
xor
add
pop
xor
or
add
lods
or
loop
fwait
adc
pop
add
es
xor
call
in
shl
xor
and
or
adc
cmp
adc
movsb
mov
xchg
dec
inc
xchg
push
sbb
fildl
loopne
xor
incb
mov
gs
pop
popa
xor
fmull
mov
add
jl
inc
sub
js
sub
gs
fnstsw
sub
int
leave
or
ret
jno
sbb
mov
cmpsl
xchg
cmp
sbb
dec
cmp
jp
int3
push
mov
shrb
xchg
xor
cld
jno
daa
sub
loope
mov
push
into
push
arpl
and
cmp
ljmp
and
or
es
cmp
dec
inc
cmc
jmp
pop
xor
mov
inc
test
sub
xchg
mov
xor
vaddpd
push
fsubl
sahf
frstor
mov
sbb
sub
push
ret
pop
pextrw
push
mov
add
in
cmp
sarb
pushf
or
add
inc
pop
add
aas
push
roll
ret
mov
or
and
push
and
adcl
push
incl
mov
xchg
popa
inc
sbb
or
adc
and
sub
movsb
mov
cmp
fimull
push
push
dec
jp
lods
cltd
cwtl
sahf
or
in
xor
xchg
cmp
cltd
or
add
and
sub
movsl
inc
scas
sbb
push
sbb
adc
sbb
clc
sbb
fsts
or
or
jmp
cmp
jnp
add
xchg
and
pop
mov
outsl
adc
out
cmp
inc
popf
mov
xchg
add
xchg
and
add
pop
shlb
add
push
add
sahf
sbb
and
andl
movlps
sub
inc
xor
bts
pop
or
jno
cmp
adc
in
int3
movsb
mov
push
dec
loope
jo
xchg
inc
les
shrb
add
dec
adc
sbb
rclb
add
push
das
mov
dec
ljmp
xorb
adc
outsl
inc
sub
movsb
xor
dec
mov
add
aad
out
decb
js
loopne
int
cmp
hlt
xor
add
or
add
incb
adc
jmp
xchg
xor
sbb
xchg
repnz
loop
insb
xorb
inc
in
jle
es
pop
mov
add
mov
add
cld
pop
aas
or
loope
inc
dec
xor
test
jo
xor
or
jno
xchg
adc
xor
and
dec
sbb
sbbl
es
sub
iret
cmp
leave
dec
inc
xchg
call
mov
neg
or
mov
mov
cmc
adc
and
xor
andb
or
mov
cmovns
mov
shl
adc
mov
push
xor
scas
sbb
mov
loope
push
sbb
sub
push
xor
mov
dec
ljmp
add
dec
push
cwtl
or
pminsw
pop
sbb
inc
bound
and
jno
inc
loop
sbb
mov
mov
cmp
add
das
call
cmp
push
and
push
test
inc
dec
les
sbb
add
sbb
popa
out
jle
push
bound
nop
filds
xor
dec
inc
loopne
inc
insl
lock
mov
or
dec
loop
aas
adc
or
xor
into
add
pop
adc
mov
pop
sbb
mov
or
push
cmp
scas
add
loopne
jge
sbb
and
inc
inc
add
pop
or
bound
inc
repnz
xor
and
add
pusha
adc
push
mov
orb
and
add
js
xor
add
fsubrl
mov
jmp
es
sub
cltd
add
and
pop
sti
sbb
add
push
pop
pop
sbb
idiv
inc
inc
insb
loopne
outsb
addb
mov
inc
jno
addl
ljmp
sub
sbb
and
and
xchg
pop
pop
jle
movups
and
jnp
and
fidivrl
pop
outsl
inc
hlt
push
add
pop
pushf
and
dec
add
sbb
daa
mov
pop
push
push
xor
rol
jle
xor
pop
or
mov
and
push
add
mov
inc
or
or
mov
cltd
or
push
lret
adc
loop
lcall
xlat
incb
xchg
xchg
or
mov
pop
sbb
cmp
add
jo
sub
mov
mov
sbb
mov
js
add
sbb
sub
mov
pushf
cmp
pusha
inc
mov
xor
adc
mov
daa
jle
adc
setae
and
or
xchg
and
push
or
test
or
loopne
push
stc
and
cmp
push
inc
rol
pop
dec
xchg
pop
cmp
xlat
pop
ja
call
and
xor
ret
insl
adc
adc
shlb
fistl
dec
stos
lds
decb
lods
push
shl
repnz
dec
pop
pop
pusha
inc
adc
sub
pop
bound
and
enter
sbb
ss
sbb
pop
add
mov
add
xor
out
adc
xor
roll
into
cli
cld
das
loop
mov
notb
push
inc
stc
push
ljmp
pop
or
xor
mov
roll
insb
push
cmp
adc
xor
adc
scas
rorl
add
filds
xchg
adc
hlt
mov
xchg
imul
mov
jle
pusha
dec
add
loopne
sahf
adc
pop
sbb
push
and
mov
fdivl
pop
push
fchs
or
cmp
xor
push
xor
add
jne
pop
cmp
cmp
push
sbb
add
outsb
dec
andb
inc
add
ret
pop
addb
test
add
mov
dec
out
add
xchg
es
push
sbb
cmp
movsb
push
testl
push
or
inc
add
and
sbb
or
lock
pop
and
outsb
imul
negl
jo
flds
inc
imul
or
test
xor
std
and
lods
les
add
dec
jl
stos
mov
dec
mov
mov
nop
jo
xor
repz
popa
dec
lds
cli
inc
lods
jne
jl
fwait
adc
icebp
adc
add
movsl
das
push
xchg
add
sbb
push
add
jno
ret
out
add
scas
fsubs
lret
adc
repz
ret
mov
inc
inc
jmp
pop
or
ret
mov
add
or
sub
test
clc
pop
sbb
sub
dec
lds
sbb
lret
inc
aas
movsb
test
fstpl
repnz
add
cmp
push
cwtl
test
pop
lea
dec
xchg
inc
adc
enter
mov
inc
add
and
adc
xor
dec
popa
fs
inc
lret
push
or
adc
and
push
mov
push
out
adc
push
fincstp
in
adc
or
ja
mov
xor
mov
sub
jle
xor
sti
orl
sbb
xchg
fsubrs
jp
push
js
sbb
push
lods
outsl
adc
fildl
pop
out
cmpsl
adc
fsub
rorb
fwait
enter
ret
add
sbb
adc
xchg
lds
and
loopne
in
jecxz
insl
mov
je
sbb
pop
and
fcmovnbe
imul
ret
jnp
cmp
int3
lret
add
jno
mulb
mov
mov
popf
and
xor
push
fsubs
popf
outsb
insb
cmp
cs
dec
fs
jbe
add
into
pop
sbb
fcompl
add
sbb
test
hlt
sbb
adc
out
add
dec
jo
outsb
stos
cld
sbb
add
mov
pop
or
or
stos
adc
decb
lret
or
or
inc
pushl
or
movsb
daa
mov
sub
arpl
ja
adc
es
popa
fcoms
adc
cmp
xchg
add
xor
push
ljmp
shl
dec
inc
hlt
sbb
pushf
stos
add
push
mov
fsubrs
lret
gs
push
cmpsl
addb
sbb
cwtl
sub
or
and
rdmsr
xor
jb,pt
out
sbbl
and
adc
idiv
mov
les
test
das
cld
and
adc
mov
aam
js
pop
pushf
cli
cld
or
mov
sbb
mov
adc
hlt
cmp
nop
imul
push
bound
push
cli
sbb
paddq
insl
add
pop
fnstcw
pop
mov
cmp
shld
sbb
dec
pusha
dec
sahf
and
mov
dec
xor
mov
xchg
add
dec
xchg
cli
sbb
dec
or
jl
push
test
sahf
add
push
ret
shl
xchg
adc
xchg
ficoms
add
push
addr16
xchg
add
xor
or
sub
pop
push
or
sbb
mov
push
call
pop
popa
push
or
sbb
push
sahf
icebp
add
mov
test
insb
ret
fs
adc
pusha
adc
lods
aad
xor
imul
fwait
notb
adc
xchg
jecxz
lret
ret
push
mov
test
xor
xchg
mov
lds
loope
jmp
add
and
inc
rolb
pop
loope
es
sub
bound
add
mov
inc
adc
mov
mov
fadd
adc
add
rorb
cwtl
jmp
out
mov
xchg
mov
cmp
outsb
les
pop
lret
pop
mov
dec
adc
or
and
gs
in
dec
sub
jl
in
or
inc
sbb
inc
lret
and
ret
cltd
ror
xor
or
sahf
inc
std
push
andl
aas
sbb
cmp
sbb
aad
popa
movsb
imul
pop
inc
dec
add
cwtl
nop
or
lods
ss
push
test
sbb
adc
sahf
inc
dec
and
stos
loop
mov
sbbb
and
dec
movsl
xor
xchg
add
sub
xor
inc
dec
test
cmp
inc
es
dec
and
cs
push
push
es
inc
stos
adc
popa
inc
scas
fidivl
inc
xchg
clc
add
lock
and
sbb
mov
adc
test
push
fs
sbb
lock
lock
dec
fsts
mov
nop
pop
cmc
lahf
dec
fs
out
add
or
outsb
je
es
mov
xchg
adc
adc
pop
xchg
xchg
les
sub
mov
negl
lock
stos
shll
xchg
cli
addr16
sub
push
cwtl
lock
outsl
adc
cmp
shr
pop
push
push
adc
mov
sub
sub
sbb
inc
lods
push
test
int
rcrl
mov
enter
mov
adc
rcrl
pop
push
les
and
and
jbe
nopl
push
aad
pop
cmp
mov
pop
mov
sbb
cmpsb
xchg
call
sub
data16
add
mov
pusha
cmp
push
dec
adc
and
ficoml
sbb
aam
push
int3
cld
sahf
xchg
js
iret
xchg
adc
ret
lcall
sub
push
or
or
sub
add
jecxz
or
out
sub
lods
movsl
add
dec
bound
dec
loop
andl
push
and
adc
xor
fildl
into
xchg
inc
mov
movsb
loop
dec
or
or
mov
sub
dec
sbb
xor
pop
xchg
fiaddl
adc
loope
add
adc
adc
mov
and
mov
mov
cmp
sub
cs
sbb
mov
inc
movsb
dec
jbe
sbb
fmulp
pop
mov
add
inc
data16
lret
das
pop
pusha
call
or
add
orb
push
repz
mov
xorl
test
testl
sbb
push
xchg
fisubl
add
mov
inc
pop
cmp
pop
xor
sti
push
pop
or
and
or
push
arpl
sub
inc
test
and
loope
fcomps
clc
sarb
dec
xor
fimuls
push
jne
pop
pop
fcomp
xor
fwait
andb
jp
inc
mov
add
dec
inc
lea
fwait
sbb
pop
test
cs
mov
or
adc
inc
dec
mov
sbbb
add
push
add
lret
push
push
and
sbb
adc
ret
sbb
inc
addb
dec
std
sub
or
adc
sub
lods
popa
shrb
lds
inc
xor
sbb
push
mov
and
outsl
ljmp
push
jecxz
shlb
or
or
adcb
addb
pop
mov
cmp
rcr
fcomp
and
fsubl
push
cmp
sbb
dec
addb
lcall
cmp
or
fiaddl
das
insl
mov
inc
je
lods
xor
pop
add
repz
outsl
fs
fildl
pop
add
pop
sbb
scas
in
jno
and
cmp
jmp
sbb
das
call
pushf
xor
in
inc
sub
and
vmovq
aam
add
sbb
and
sbb
ret
jp
pop
and
inc
aas
mov
cmp
fwait
das
sbb
dec
pusha
xchg
nop
loope
std
xchg
in
adc
sbb
sub
push
sar
neg
sub
subb
and
sub
and
fsubrl
add
add
les
push
add
sub
mov
cld
fs
xor
fldl
adc
lds
insl
sbb
mov
jno
pop
pop
jbe
push
filds
push
pusha
test
and
test
mov
dec
cmp
mov
sbb
pop
xor
add
inc
cmp
jge
pushf
mov
add
xchg
call
daa
sub
mov
or
mov
sub
jmp
and
adc
add
pop
xor
or
gs
or
lock
dec
notl
push
push
fstpt
adc
sbbl
es
pop
or
xchg
mov
and
frstor
adc
add
arpl
push
les
dec
das
iret
sbb
jb
insb
mov
aad
mov
test
mov
and
xchg
pop
fwait
aam
add
xor
ja
cmp
cmp
adc
adc
mov
cli
stc
imul
push
and
cmp
sbb
lods
push
scas
cmp
hlt
pop
insb
sbb
or
mov
or
sbb
add
or
push
inc
dec
sbb
xchg
xchg
pop
mov
rclb
std
adc
sbb
xchg
pusha
push
jne
xor
cld
imul
aaa
cli
lods
test
into
mov
push
push
push
or
in
and
loope
fadds
xchg
test
sbb
sahf
ficomps
add
repz
xchg
dec
scas
cmp
or
inc
lods
xchg
lret
adc
arpl
cltd
add
cmpsb
or
pop
clc
add
lods
inc
in
negl
aas
int
adc
sbb
mov
push
pop
pop
sbb
mov
nop
lock
sbb
cmp
push
cmpsb
add
mov
inc
mov
add
jno
mov
add
loope
push
cmp
pop
adc
lcall
push
or
fcomps
sbb
xchg
jne
jne
xchg
xor
int
loopne
cmp
mov
xlat
or
xchg
cwtl
mov
cmp
add
xor
or
int
test
pop
sub
adc
test
or
inc
lcall
pshufw
movsl
jo
dec
mulb
ds
push
adc
test
mov
les
add
movsl
dec
jno
sbb
mov
xchg
mov
mov
je
or
push
push
mov
addl
or
ret
jmp
push
into
jp
pop
add
les
cmp
bound
pop
inc
cmpsl
adc
cltd
out
or
movsb
cwtl
test
adcb
inc
popa
mov
cmpsl
fiaddl
and
inc
aas
dec
arpl
jno
loopne
add
scas
pop
daa
jb
sub
push
or
inc
cmc
in
int3
mov
hlt
hlt
push
fs
mov
addr16
popa
loope
mov
mov
scas
mov
sbb
divb
mov
add
xor
loope
pop
push
cmc
or
inc
pop
push
mov
test
mov
add
popf
lds
pop
imul
test
xchg
hlt
add
or
imul
pop
xchg
fs
fidivrs
sbb
fiadds
xor
cmp
hlt
test
jno
mov
js
or
pop
jb
jne
je
or
and
add
or
into
cmpsb
out
sub
nop
stos
out
das
xchg
xchg
loop
inc
pop
sbb
mov
out
movsb
sbbl
xchg
cld
pop
adc
lods
xor
pop
loope
mov
movsb
xlat
stos
mov
sbb
fwait
cwtl
add
inc
popl
mov
pop
mov
inc
jp
inc
and
fdivl
sub
pop
xor
icebp
add
test
mov
fbstp
dec
push
bound
mov
add
rorb
sub
aam
push
in
and
dec
xor
outsb
jb
xor
adc
rol
xchg
addl
and
mov
sbb
cmp
push
jmp
fldenv
cmp
add
in
cmpsb
aam
jb
fdiv
add
cltd
inc
mov
sub
jne
lea
scas
cmp
shll
dec
mov
dec
adc
dec
add
add
xchg
sbb
nop
add
jecxz
push
adc
imul
jno
pop
add
mov
add
sbb
or
test
ss
inc
mov
in
or
mov
mov
or
pop
mov
or
inc
lret
push
add
scas
dec
or
push
dec
jbe
rol
popa
sbb
add
fdivrs
cmp
add
push
sbb
loope
or
push
repnz
add
sbb
or
and
ss
and
sub
mov
test
xor
and
dec
xor
icebp
sbb
int
addl
mov
mov
sub
popa
scas
je
push
fsts
sbb
sbb
jno
shl
jae
xorb
bound
arpl
push
push
xchg
cmp
mov
xor
repz
cmp
mov
scas
jl
sbb
mov
inc
jno
mov
add
pop
adc
add
cmc
call
cmp
pop
xorl
icebp
divl
mov
sahf
mov
ret
scas
fcomps
movsb
push
sbb
lods
push
popf
sbb
insl
add
faddl
sbb
push
or
xchg
add
nop
cmp
pop
xor
push
adc
mov
sbb
data16
fbstp
insb
lods
unpckhps
dec
nop
adc
ficoml
adc
hlt
and
push
pop
dec
dec
loop
leave
and
rorb
push
cmp
prefetchnta
push
fisubl
xchg
mov
adc
stos
loop
sub
xchg
dec
pop
mov
pusha
mov
jno
ret
sbb
aam
aad
xor
mov
push
cli
mov
mov
popa
sub
ljmp
cmp
rolb
out
adcb
jno
mov
fstp
add
outsl
cs
les
mov
in
in
push
cwtl
test
push
or
sub
outsl
repnz
adc
mov
or
adc
and
repz
add
ja
or
xor
in
or
add
mov
mov
xchg
cmp
fldl
mov
mov
add
inc
int3
test
mov
std
insb
add
add
mov
jo
rclb
or
add
or
xchg
xchg
lret
push
int
add
js
test
jo
mov
out
and
or
adc
cmp
cmpb
fcmove
sub
test
into
fsub
or
scas
sub
shll
call
push
push
mov
mov
add
or
adc
jno
sub
loop
test
lods
stos
push
push
repnz
call
cmp
adc
add
xor
loope
out
les
push
test
inc
sbb
fwait
into
xor
and
lock
popa
fistpll
xchg
loopne
dec
and
dec
mov
mov
or
mov
add
fstps
stos
xor
fsubrs
in
jne
xor
or
nop
jb
push
xor
insl
sbb
bound
mov
shr
jno
xchg
add
lds
das
bound
outsl
jo
cwtl
or
subl
and
jo
enter
arpl
or
lods
pop
in
dec
scas
cmpsb
rcrb
push
andl
bound
mov
jecxz
adc
lret
jmp
add
mov
and
ret
rorb
popa
movsl
dec
stc
loop
sub
or
leave
sub
aam
mov
inc
call
test
test
cwtl
mov
out
push
mov
inc
pusha
cmp
sar
or
fs
jp,pt
dec
dec
xor
std
or
mov
add
pop
dec
or
push
shlb
js
dec
sub
pop
jmp
push
xchg
and
in
arpl
cltd
mov
dec
add
add
outsl
call
xchg
sbb
arpl
mov
in
sti
pop
mov
adc
sbb
dec
je
xchg
mov
sub
mov
rcrb
js
sbb
xchg
inc
or
nop
xor
inc
nop
sub
adc
inc
scas
inc
imul
fs
aad
decl
std
cmp
inc
outsb
jl
or
jmp
gs
cmc
mov
ss
jo
add
adc
push
mov
cs
fs
scas
call
stos
inc
pop
lods
gs
pusha
ficomps
inc
sbb
sbb
loopne
sub
jno
daa
sbb
or
nop
dec
mov
add
add
cmp
mov
cmp
sub
addr16
sbb
std
pusha
sub
adcb
add
inc
add
in
cmp
dec
dec
inc
push
test
or
adcl
orb
fdivl
mov
enter
xor
nop
ljmp
imul
pop
ljmp
xor
xor
mov
test
js
mov
add
les
cld
or
xorl
jp
cwtl
mov
dec
faddl
mov
in
mov
add
xchg
popf
sub
xchg
mov
or
jbe
add
pop
add
or
rolb
loope,pn
ret
mov
rcrl
cmpsb
adc
fldl
jbe
cmp
arpl
ffree
dec
and
xorl
xor
mov
movsl
addl
out
rolb
sub
or
aaa
push
loope
xchg
adc
or
test
cli
subb
cmp
cwtl
mov
xor
adc
sbb
loopne
fcompl
pop
ja
or
pop
sub
adc
sub
push
push
push
dec
movsl
pop
movsl
jne
addl
faddl
mov
mov
push
movsl
aaa
or
aaa
push
inc
adc
push
push
push
and
cmpsl
fldt
push
movsl
adc
fsubrs
mov
sahf
in
outsb
dec
pushf
ror
mov
mov
add
js
mov
inc
stos
adcl
outsl
rolb
push
loope
lret
inc
or
popa
sbb
inc
add
add
add
enter
bound
sbb
mov
es
rolb
cli
sub
pop
cmpb
scas
faddp
dec
stos
aam
xor
mov
pop
sub
and
mov
lods
mov
cmp
push
bswap
loop
xor
addr16
adc
jp
fsubrp
mov
mov
dec
xor
pop
adc
push
ret
call
or
ljmp
and
cwtl
aad
jp
hlt
mov
aas
or
push
xor
sbb
mov
mov
add
jb
and
repz
or
xchg
pop
cmp
push
mov
add
dec
jne
mov
adc
xchg
stc
insb
pop
fadds
mov
xchg
jg
movsb
xchg
adc
scas
and
lds
pop
shlb
lds
inc
sub
push
push
add
js
push
lock
bound
popl
sub
sub
adc
or
pop
mov
test
add
add
inc
sub
sub
dec
xchg
cmp
jbe
add
aad
sub
cld
pop
mov
std
sub
ja
inc
lcall
add
inc
int
inc
mov
gs
pop
mov
inc
test
or
push
pop
add
insl
in
add
data16
sar
dec
jae
add
out
xor
xchg
sub
sbb
xchg
fwait
jb
jo
or
imul
add
idivl
cld
mov
and
push
xor
les
xor
and
xchg
loop
sub
inc
fld
pop
or
mov
aaa
je
and
inc
or
mov
sub
fldenv
add
mov
push
inc
or
pop
cli
incb
inc
outsl
je
sbb
xor
push
loopne
pop
fistl
cmp
lods
inc
push
push
add
mov
movsb
scas
addb
movsl
sub
add
push
test
mov
dec
subb
add
jp
pusha
mov
sub
movsl
cld
rcrb
lods
je
mov
sarl
or
dec
sti
mov
mov
in
mov
mov
insb
shrb
adc
lahf
push
fcoms
pop
dec
bound
inc
mov
and
or
mov
repnz
sub
or
lret
iret
cli
or
inc
lods
mov
pop
dec
scas
pop
sub
loope
push
cmp
roll
xchg
repnz
and
or
push
inc
cmpsl
xor
pop
mov
sbb
enter
jl
jge
cmp
movsb
or
loopne
repz
sbb
xor
cmp
scas
xor
push
pop
cmpxchg
std
sub
mov
add
add
mov
or
xchg
sub
hlt
loop
mov
or
arpl
sbb
icebp
adc
dec
xor
mov
adc
push
insl
cmp
dec
jne
mov
push
test
iret
xor
pop
or
or
mov
mov
imul
add
inc
sub
sub
ret
es
xchg
pop
ljmp
jb
add
xchg
xor
in
dec
inc
push
fisttpll
mov
add
cmp
or
inc
arpl
es
mov
sbb
xchg
popf
sub
jmp
aam
xor
sub
test
dec
test
add
inc
sbb
adc
cs
jno
imul
adc
adc
test
sbb
and
jno
or
cmpsl
sub
ss
cmp
std
xchg
fcomi
nop
bound
stos
sar
test
ffree
xchg
loop
sbb
test
jns
inc
inc
loop
push
sbb
les
mov
cmp
pop
xlat
jmp
xchg
lret
insb
ret
sbb
rolw
test
pushf
xchg
ljmp
jl
je
and
add
xchg
sbb
sbb
dec
cmp
movsb
rcl
fs
add
add
xor
sub
add
dec
sub
sbb
lods
mov
pop
pop
ljmp
sub
and
or
mov
test
movsb
sahf
pop
shrb
notl
xchg
daa
gs
cmp
in
int
push
mov
lret
add
js
pop
hlt
push
mov
sbb
xor
cmp
dec
xchg
add
ss
add
insb
mov
mov
cmp
and
sbb
mov
dec
decb
sub
cmp
cmp
fisttps
xor
inc
sbb
jle
ficoms
sub
sbb
xchg
jo
out
push
mov
jne
negb
add
cmpsb
insl
stmxcsr
loopne
fisttpll
leave
fmull
scas
sti
rcrb
sub
push
sub
inc
std
and
mov
lea
mov
sub
add
movsl
adc
xor
lods
stos
push
mov
xchg
or
add
mov
cwtl
add
cmpsb
mov
dec
push
in
push
rcr
xchg
arpl
pop
sbb
push
dec
sbb
insb
jo
adc
xchg
imul
push
and
jp
xchg
inc
lods
add
out
sbb
adc
jns
cltd
fs
clc
push
mov
sbb
cmp
jne
or
xchg
pop
loop
inc
mov
das
and
adc
inc
push
xor
adc
sub
cmp
xchg
mov
icebp
fwait
mov
add
pushf
cmp
ljmp
sbb
imul
sub
inc
outsl
jo
nop
jno
popf
sub
mov
cs
fidivrl
aad
cli
pop
cmpsl
scas
xor
cmp
xchg
enter
pusha
dec
add
jno
rcr
sbb
adc
int
xor
pop
mov
jbe
push
flds
scas
xor
mov
sub
pop
stos
jo
inc
inc
lods
cmp
in
cmp
test
adc
xor
fcomps
xchg
mov
iret
xlat
hlt
ret
scas
clc
sbb
loopne
or
outsb
adc
rorb
lock
pop
data16
cld
into
fabs
push
xor
mov
pop
xor
mov
add
inc
push
cmp
in
adc
pop
mov
add
movsb
loop
xor
xchg
sbb
jle
sub
clc
or
push
arpl
test
add
scas
adc
adc
jo
mov
xchg
add
fldcw
incl
into
push
dec
or
aam
out
sub
dec
adc
add
push
add
add
sbb
addr16
das
add
mov
jno
add
or
and
sub
rorb
or
or
inc
mov
pop
push
mov
and
js
or
pop
inc
stos
adc
cld
mov
fst
sbb
stos
sub
or
into
mov
hlt
lret
lret
push
sub
dec
lcall
movsl
push
mov
nop
cmpsb
push
mov
rorl
ret
cmpb
std
sub
pop
push
pop
in
or
sbb
push
or
sbb
lret
sbb
or
out
mov
subb
or
bound
mov
in
push
or
lods
mov
xor
test
jbe
and
das
out
jno
pop
pop
sbb
adc
xorl
mov
cmc
sub
mov
std
cmp
lret
enter
subb
add
ret
loope
mov
dec
or
inc
add
xchg
mov
lods
sets
es
or
stos
sbb
cmp
add
test
adcl
dec
cwtl
pop
mov
adc
or
loope
add
mov
arpl
setbe
ficoms
sub
and
push
pop
mov
or
jmp
pop
or
mov
and
negl
or
add
sbb
outsb
cs
por
aas
sti
ds
and
call
xchg
rolb
punpcklwd
pop
popf
add
inc
xor
and
or
add
push
mov
addr16
and
sub
xchg
nop
xchg
stc
clc
add
adc
adc
add
dec
pop
push
or
mov
lock
push
mov
add
shrb
push
xor
aam
ret
xchg
adc
inc
popl
lcall
add
rorl
mov
pop
xor
sub
or
dec
je
push
sub
push
sbb
es
dec
addr16
mov
inc
daa
test
or
and
mov
inc
xchg
in
cmpsb
out
or
or
mov
mov
jecxz
and
fidivrl
or
loopne
adc
push
or
pause
push
adc
bound
add
daa
movsl
push
pusha
or
cmpsl
cmp
in
cli
cltd
addr16
mov
pop
sbb
adc
mov
add
add
nop
jo
aaa
aaa
pop
dec
ds
stos
or
push
cwtl
inc
mov
jb
adc
cmp
dec
lods
add
add
bound
sbb
sysenter
or
movsb
pop
dec
sbb
jecxz
test
adc
movsl
jbe
repnz
xorl
mov
sbb
data16
inc
pop
std
pop
add
aam
or
inc
jbe
fcompl
dec
add
or
pop
jmp
sbb
add
popa
es
fwait
cli
mov
and
push
inc
dec
jno
xchg
push
sbb
sti
pop
dec
cmp
or
pushf
jne
aad
mov
sarb
fiaddl
lret
lea
push
addl
mov
nop
out
jne
mov
push
cltd
mov
mov
xor
inc
dec
add
fidivl
dec
scas
push
movsb
xorb
mov
sub
inc
add
sbb
or
fistpll
mov
pop
xor
rorb
in
inc
sbb
sbb
cmp
cmp
inc
adc
or
sbb
mov
sbbl
xor
mov
sub
mov
mov
add
cmp
adc
dec
sub
enter
pop
push
xchg
dec
movsb
xor
push
xor
int
mov
dec
out
adc
xor
dec
rorb
push
push
lods
cmp
mov
roll
cltd
shrb
mov
dec
mov
inc
nop
or
jo
sahf
xchg
cwtl
pop
pop
cs
xchg
mov
jne
push
lahf
push
xchg
lcall
movsb
cmpsl
mov
xorb
inc
cld
mov
mov
push
insb
or
pop
jp
stos
mov
pop
shrb
addl
mov
adc
xchg
or
pop
push
xchg
jmp
stc
and
add
les
rorb
stos
repnz
jl
xor
aad
loopne
mov
sub
and
jl
in
mov
sub
pop
clc
sbb
add
cld
loop
xchg
add
gs
push
sbb
add
iret
sbb
mov
fs
sub
pop
shl
cwtl
cmp
xchg
inc
js
fistpl
and
clc
stos
mov
repz
and
add
and
movsl
push
je
adc
xchg
xor
push
pop
sbb
mov
dec
test
mov
notb
in
xchg
and
into
add
loopne
nop
xchg
push
or
enter
sub
cmp
dec
mov
movsl
cmc
push
dec
jb
js
and
xchg
adc
test
pop
cmp
sbb
adc
mov
mov
ja
pusha
add
add
pop
lret
inc
mov
lcall
and
xor
add
outsl
pop
sub
ss
sbb
add
insb
jno
repnz
push
js
jbe
pshufw
pop
ret
loope
mov
in
xor
fadds
jecxz
or
sbbb
lahf
jl
aam
cmp
das
mov
adc
mov
cli
pop
add
add
hlt
in
or
or
and
fcomps
xchg
dec
out
and
in
and
hlt
sbb
inc
cmp
fimull
and
jne
aad
mov
add
xchg
pushf
dec
lods
add
jp
or
or
sub
push
gs
jbe
fdivrl
or
and
sub
inc
std
aaa
dec
and
mov
in
adc
js
mov
shll
ret
adc
and
mov
cmpsb
repnz
sbb
and
and
es
jl
movsb
add
mov
test
add
aaa
push
or
and
mov
sbb
rclb
jmp
cwtl
inc
nop
out
movsl
or
push
ret
rolb
pop
mov
loopne
or
xor
adc
mov
add
adc
inc
bndldx
test
js
push
out
pop
aam
adc
fwait
test
inc
js
mov
add
dec
xchg
ret
out
adc
lea
in
pop
nop
jb
leave
adc
arpl
and
pop
jp
pop
add
add
add
xchg
adc
inc
sub
aas
sub
aam
dec
mov
adc
jge
sarb
mov
loop
shlb
sbb
outsl
rclb
mov
push
imul
repz
gs
cmp
out
add
mov
adc
mov
inc
stos
cmp
ljmp
mov
cld
adc
cmp
mov
sub
mov
cwtl
or
std
sub
dec
add
add
or
mov
orb
sbb
lret
sbb
dec
lods
mov
cmp
jb
rcr
mov
dec
add
out
movsb
xchg
mov
sahf
push
dec
gs
sub
jmp
es
dec
movsb
xorb
arpl
jb
add
mov
sbb
sub
js
jb
jo
and
mov
mov
add
sub
jo
and
sbb
lea
jb
inc
push
or
add
add
jne
and
in
filds
and
insb
dec
xor
and
inc
dec
dec
mov
push
cmp
push
add
test
push
add
or
mov
push
and
in
xor
in
lds
call
mov
test
adc
inc
daa
mov
dec
iret
pop
bound
xorl
sbb
rorb
pushf
mov
mov
push
or
rcrb
add
cmpsl
add
mov
pop
std
inc
sti
and
inc
popa
mov
xorb
dec
pushf
enter
sbb
xchg
jp
rcl
inc
and
add
cmpsb
mov
les
push
adc
sbbl
adc
inc
mov
lret
dec
dec
dec
scas
sub
mov
outsl
mov
inc
and
aaa
dec
fisubrl
mov
cmpb
sbb
add
xor
and
or
inc
stc
dec
xchg
adc
mov
dec
mov
cmp
mov
cmp
adc
sub
cs
add
sub
rolb
or
add
mov
pop
sbb
mov
sub
xchg
jecxz
cmp
adc
dec
pop
cmp
sub
mov
js
pop
out
fidivrs
pop
pop
push
adc
lock
cs
sbb
add
and
cmp
push
pop
jns
sub
lock
cmpsb
sbb
cmp
or
cmp
cwtl
push
ret
lret
sub
mov
adc
cmp
push
ret
sbb
sbb
push
add
push
dec
imul
xchg
dec
mov
arpl
rolb
xchg
std
adc
pop
pop
or
test
mov
pop
sub
out
or
adc
into
in
push
cmp
mov
or
or
add
pusha
dec
dec
adc
add
ret
ret
and
xor
cmp
mov
es
cmp
cmp
outsl
or
and
pop
push
jl
popa
lea
lret
ret
inc
lock
sub
and
sbb
pop
es
push
jecxz
and
and
push
fmuls
loopne
pop
xchg
outsb
loopne
sbb
repnz
iret
xchg
mov
push
xor
mov
inc
jl
jmp
and
popf
adc
ds
out
es
insl
and
test
jp
sbb
sbb
sub
mov
dec
dec
sahf
cmpsb
inc
sbb
add
lret
push
shll
or
mov
fucomp
nop
dec
out
aam
xor
imul
clc
add
push
divb
rclb
add
add
push
fsubrs
adc
inc
cli
xorb
jnp
push
push
push
sbb
popf
sub
cmp
xor
inc
inc
mov
xor
pop
ss
mov
jecxz
push
ds
mov
xchg
add
lea
imulb
push
enter
sub
clc
or
mov
lds
popa
adc
xor
add
mov
dec
push
sub
fcomi
rcl
add
mov
add
loopne
imul
or
incl
fs
jle
fisubrs
mov
ret
test
cmp
jecxz
cmp
ljmp
adc
das
loop
push
ret
add
push
add
add
sbbl
loope
enter
in
sub
adc
inc
pop
sarl
imul
adc
adc
sbb
clc
push
pusha
xor
leave
and
cmpsb
mov
push
add
test
je
push
jmp
movups
sub
sub
push
jb
pop
outsb
sarb
inc
dec
or
jmp
pop
adc
gs
sub
sbb
pop
push
lods
insl
cmp
sub
push
pushl
adc
filds
and
les
inc
or
insb
stc
insb
popa
or
push
pop
movsl
gs
push
sahf
add
lret
lock
pusha
cwtl
sub
test
cmp
das
mov
add
pop
add
add
rcll
loope
sub
je
add
sub
xorl
sub
std
mov
or
add
arpl
cmpsb
push
and
mov
arpl
jp
les
pop
sub
add
test
mov
jno
xor
dec
loop
popa
movsl
adcl
arpl
jo
loop
call
popa
orb
cmpsb
aaa
jno
into
xchg
add
jae
sbb
or
ret
inc
add
jmp
sub
fsts
ss
or
push
fldl
jl
pusha
je
adc
addb
and
jg
mov
inc
mov
mov
adc
ljmp
stos
sub
in
jbe
or
add
jle
add
and
rorb
add
jnp
pop
loope
mov
or
pop
add
insb
jbe
movsb
dec
jns
jg
add
into
lock
push
pop
sbb
incb
push
mov
adc
sbb
popa
pusha
push
into
ret
cmp
push
inc
jle
test
test
pop
xor
jl
sbb
mov
push
bound
std
out
ret
js
nop
add
mov
mov
and
add
cld
sbb
ficomps
add
adc
mov
rclb
rcr
add
adcl
nop
lods
loopne
inc
jmp
loope
cmpsl
repnz
mov
inc
test
lock
in
orl
stc
push
loop
add
idivb
adc
sub
hlt
stos
cld
push
push
sbb
xor
sbb
pop
lea
ret
pusha
xor
sub
push
lret
xchg
mov
jl
sbb
push
pushf
les
jae
addl
push
push
and
fldl
mov
fcom
pop
lock
push
mov
repnz
aam
sub
pop
xor
xchg
in
pop
pop
pop
lock
xor
pop
nop
es
aaa
test
and
xchg
sbbb
push
push
and
sbb
push
popa
daa
mov
jp
das
add
sub
push
aam
adc
or
je
mov
out
jo
fcompl
out
push
lock
sub
loope
call
add
adc
sbbb
mov
add
cltd
pop
cltd
test
xor
loop
push
lahf
rolb
negl
adc
sub
xchg
xchg
mov
fsubrl
mov
pop
ja
adc
rcrl
hlt
repnz
fdiv
lret
or
add
lret
in
add
add
add
and
sub
pop
add
dec
add
cmp
jl
add
pop
xchg
add
add
in
int3
add
out
adc
out
mov
imul
xor
cwtd
int3
sbb
imul
inc
push
xor
shll
cltd
int3
insb
incl
cmp
cltd
int3
xchg
incl
dec
shll
fisubrl
cwtd
int3
aad
pushw
cltd
imul
std
push
xor
cmpsb
imul
imul
cmpsb
imul
popf
imul
dec
andl
ljmp
outsb
xor
add
data16
imul
imul
cmp
int3
push
data16
data16
xor
int3
adc
cmpsb
imul
int
xor
add
int3
test
add
cltd
divb
push
call
into
dec
mov
call
dec
shll
cltd
cltd
cltd
cltd
cltd
dec
shrl
cltd
cs
cltd
cltd
imul
pop
cs
cltd
cltd
sbb
cwtl
pop
adc
add
cmpsb
imul
imul
mov
int3
int3
in
movsb
mov
int3
mov
xor
shll
int3
int3
incl
sar
push
int3
int3
xor
mov
sbb
out
call
xor
sar
pushl
shll
mov
xor
xor
xor
int3
cs
shll
int3
int3
push
shll
incl
imul
out
int3
data16
mov
mov
movsl
add
pop
cs
lret
add
xchg
xchg
add
add
add
add
add
add
add
mov
clc
addr16
ja
mov
cmpsb
xchg
in
in
in
in
jmp
scas
in
in
add
scas
movhps
lea
in
scas
cs
ss
mov
or
jmp
jbe
in
or
or
fstpl
inc
or
adc
fsts
mov
scas
and
fstl
out
clc
das
jae
pop
jns
imul
in
lea
ljmp
or
sbb
imul
or
and
scas
ljmp
popa
inc
jbe
ljmp
sub
add
scas
jmp
shr
mov
ja
and
add
aam
sub
out
imul
push
add
hlt
add
adc
fsubrl
cmpl
es
xor
shl
add
xor
fchs
xchg
or
lea
jmp
and
mov
ret
lea
adc
arpl
pop
or
mov
insl
insb
or
insb
push
ljmp
push
addr16
add
or
ret
sbb
cmpsb
lods
loope
jno
in
add
loopne
push
stos
inc
or
loop
sbb
scas
jg
xchg
outsb
sbb
in
insb
dec
push
roll
add
lea
fstpl
push
ljmp
cmp
daa
adc
add
or
aaa
or
dec
sub
lea
daa
inc
stos
scas
fists
jge
cmc
cs
lea
pusha
mov
xlat
jmpw
idiv
test
pop
hlt
call
and
imul
mov
fstl
adc
ss
xchg
sbb
or
int3
outsb
sbb
pop
mov
shl
cltd
lret
ret
inc
mov
mov
jne
lds
pop
add
sarl
mov
adc
dec
mov
adc
mov
push
xor
leave
shlb
xor
inc
out
insl
enter
lahf
pop
shll
inc
xchg
notl
cltd
jecxz
sti
jmp
ljmp
add
or
adc
pop
jecxz
inc
xchg
leave
inc
je
shll
pop
or
cmc
lea
or
add
xchg
and
decl
mov
addl
jle
xchg
arpl
sbb
in
push
and
adc
fldt
adc
or
mov
adc
outsb
arpl
or
or
jmp
xchg
push
fildl
fdivl
in
out
mov
xchg
push
rcrl
in
imul
mov
xor
xchg
xor
retw
faddl
stos
stc
jne
sbb
daa
add
fidivl
fistl
pop
rclb
sub
and
jb
push
faddl
or
xchg
aaa
rorb
je
data16
scas
jl
popa
mov
imul
frstor
push
inc
test
mov
fistl
insl
mov
test
inc
pop
lods
fsub
mov
out
mov
mov
insb
jno
popa
notl
or
aad
pop
orl
pop
adc
mov
push
mov
and
scas
inc
testb
mov
and
jbe
aas
adcb
xchg
mov
push
add
or
pop
mov
add
mov
jnp
sub
adc
adc
scas
lret
xchg
scas
pop
adc
mov
test
push
fmul
sub
divl
sbb
lock
cmp
dec
fadds
sarl
jno
mov
add
push
cmp
sub
leave
jmp
mov
xchg
push
sarl
rolb
mov
in
imul
jae
sbb
jmp
loop
inc
ljmp
mov
cmc
orb
mov
xchg
adc
pushl
mov
and
mov
imul
add
mov
adc
int
jmp
fldt
notl
jecxz
dec
ljmp
scas
mov
sbb
xchg
insb
out
out
pop
mov
add
sti
xor
inc
fmull
popf
jmp
out
add
add
add
fiaddl
xchg
or
or
xchg
dec
add
ss
enter
sbb
arpl
add
jne
sbb
outsl
gs
or
push
insb
sub
shlb
sbb
inc
add
cmp
and
jbe
push
xchg
jae
je
jb
sbb
jno
xchg
sub
xor
fildl
dec
sub
push
popa
pushf
sbb
jmp
pop
stos
push
ret
inc
mov
lea
add
cmp
sub
mov
cmpsl
add
or
inc
sti
shrl
fldenv
sbb
adc
shrl
adc
jno
scas
inc
test
jb
add
adc
inc
push
xorb
cmp
adc
test
or
inc
mov
mov
add
pushf
scas
loop
bound
cmp
insb
mov
mov
dec
or
mov
push
pop
mov
xchg
adc
sbbl
jge
pop
fmull
loopne
in
dec
add
icebp
sbb
mov
jmp
or
cmp
push
dec
fisubrl
add
xchg
jmp
aad
jo
sub
sarl
enter
push
ljmp
ds
lret
sbb
mov
aaa
aaa
mov
es
jne
or
addb
test
out
scas
fsubrl
push
notl
or
jge
xchg
add
in
xchg
jl
cmp
or
add
adc
xor
jle
push
or
out
fistpl
sbb
xchg
negl
adc
mov
cmp
cli
cmp
js
shlb
pusha
out
fldenv
xchg
sbb
in
add
xor
test
or
leave
mov
push
or
mov
pop
popl
in
xor
dec
gs
fdivrs
xchg
adc
shlb
shll
ret
cmp
adc
enter
subl
or
mov
or
lods
mov
jp
jge
insb
mov
mov
add
ret
psubb
ss
loop
xchg
mov
cmp
push
in
ds
jg
ss
cltd
inc
push
inc
out
adc
or
xchg
cmp
adc
mov
sbb
in
inc
jne
cs
adc
push
iret
adc
mov
adc
or
mov
movsl
dec
jge
xorl
pusha
push
cmp
fisttpl
or
aaa
xor
ret
push
mov
call
mov
subb
inc
test
lods
push
call
mov
mov
xchg
mov
jecxz
and
shlb
rcrb
sub
shll
test
js
cs
scas
mov
xchg
mov
adc
add
inc
jbe
fwait
cmp
sub
xor
or
pop
fcompl
int3
xlat
xchg
bts
insb
out
xchg
xchg
lahf
popf
gs
xchg
sub
adc
mov
mov
out
cwtl
ret
xor
ds
push
out
arpl
mov
add
ret
bound
test
icebp
mov
adc
inc
call
jo
cmp
stos
mov
or
xchg
inc
addl
add
jb
int3
in
cmp
cs
cmpsb
and
sbb
outsb
pop
mov
lods
jae
fistpll
fidivl
sbbl
sbb
xor
scas
jae
jo
xlat
fdivs
int3
jno
cmpsb
das
es
adc
lods
mov
push
pop
push
push
in
mov
or
adc
adc
or
mov
movsl
cmp
sbb
xchg
inc
pop
cs
movsl
imul
fldt
adc
dec
dec
jae
out
xor
sub
xchg
cs
mov
repnz
mov
insb
sbb
fstpt
enter
adcl
mov
mov
jae
inc
push
jmp
add
adc
jae
das
sbb
pop
mov
cmp
repnz
out
leave
movsl
sub
mov
xor
sbb
movsb
js
inc
push
stos
push
frstor
je
xchg
test
and
aaa
and
mov
or
adc
dec
loope
roll
icebp
xor
or
jmp
adc
fcomps
push
mov
adc
les
insb
stc
lods
shlb
adc
sub
add
inc
sub
inc
movsl
jmp
nop
jnp
je
insl
and
jne
lea
rcl
and
xchg
sbb
mov
mov
mov
cmpl
add
sbb
or
add
dec
addb
mov
push
andb
xor
sub
inc
inc
and
cmp
fucom
mov
add
adc
lea
scas
insl
mov
sub
aad
jmp
clc
sti
lcall
lea
aam
and
pop
jmp
or
mov
inc
cwtl
jb
dec
inc
xchg
mov
and
or
insl
push
or
add
popa
cmp
std
fadds
xor
adc
cs
lret
inc
mov
lods
loope
sub
and
outsb
aaa
adc
or
add
xor
xchg
xchg
gs
pop
jle
cmp
sbb
fnstsw
xchg
xor
add
push
push
std
imul
imul
xchg
movsl
adc
pop
jo
adc
adc
sbb
add
lods
shl
add
push
sub
cmc
and
add
aam
fimull
and
xor
mov
pusha
incl
into
lock
roll
dec
add
inc
sahf
jge
inc
sbb
dec
xchg
dec
sbb
outsb
add
shrl
push
inc
mov
mov
or
shll
or
add
sub
jbe
push
jg
outsw
inc
and
insl
xlat
outsb
inc
adcl
xchg
leave
aad
and
scas
lret
inc
xchg
mov
imul
sub
ret
sub
fsubrs
add
mov
push
adc
xor
inc
sbb
cmc
shlb
hlt
sti
dec
lea
sahf
outsb
pop
scas
adc
call
enter
imul
test
or
cs
mov
and
sahf
popf
xchg
mov
xor
add
and
mov
inc
subb
sbb
push
arpl
scas
stos
mov
add
jg
dec
loop
push
mov
loope
in
shlb
ja
test
sbb
cs
add
ficompl
nop
adc
mov
xchg
dec
stc
fcoms
out
dec
arpl
and
pusha
shll
pop
pop
dec
fstpl
addr16
lods
xor
aam
push
cmp
push
mov
scas
push
cmp
jp
jne
add
pand
xchg
inc
cmpsb
push
adc
outsb
jecxz
pop
cmp
stos
cmp
push
add
pop
mov
loope
push
lea
push
dec
test
xor
sbb
lds
xchg
or
sarb
lds
jp
outsb
jg
push
pushf
mov
in
push
add
add
push
sub
dec
in
cmp
popa
lea
inc
mov
add
mov
mov
fsubrl
push
mov
mov
pop
mov
pop
xor
add
sbb
ljmp
lahf
mov
or
dec
xor
sbb
je
je
je
daa
inc
dec
les
mov
scas
jg
cmp
and
jae
cmpsl
pop
sbb
lods
jb
xor
movsl
les
sarl
xor
or
cmpsl
adc
jl
add
in
mov
in
add
add
ljmp
enter
ss
xor
arpl
jb
fwait
repnz
jmp
adc
test
mov
adc
xor
mov
mov
jnp
std
xchg
xchg
or
adc
or
pop
ljmp
popl
cmp
sarb
push
cmpsl
orl
xchg
popa
or
imul
cmpl
sbb
and
sub
cmp
aam
push
mov
or
dec
insb
and
pop
cmp
adc
push
push
ret
mov
insb
adc
ljmp
push
push
sub
or
add
lea
inc
repz
pop
inc
icebp
sarb
push
sbb
cs
aad
rolb
jmp
xor
add
outsb
jno
xor
insb
push
cmp
mov
xchg
cwtl
out
mov
sub
pop
leave
jl
sub
shll
scas
mov
adc
movsb
addb
nop
gs
dec
jge
push
sub
push
mov
or
mov
jmp
repnz
inc
mov
push
sub
fcomps
in
rcl
adcl
sub
sbb
inc
xchg
mov
roll
jae
loope
xor
iret
nop
push
in
lods
test
aaa
cwtl
shrb
aas
sub
and
xchg
and
xor
sub
movsl
push
add
in
add
cwtl
es
aaa
jle
push
mov
push
vminsd
mov
and
push
imul
fsubrl
push
xor
jmp
outsb
jecxz
xor
sbb
into
inc
push
pop
out
aad
movsb
mov
mov
mov
inc
gs
mov
adc
lahf
scas
xor
mov
cwtl
mov
stc
mov
rorl
adc
cmp
push
ficoml
pop
or
mov
jmp
mov
push
cmp
push
mov
jb
cmp
sub
pop
lahf
in
mov
jmp
cmp
xchg
jno
test
imul
cmp
mov
rcll
stos
adc
pop
das
cmpsb
inc
xor
sbbl
pop
adc
cmp
rcll
pop
scas
daa
dec
add
adc
cmpsb
adc
push
pop
cmp
mov
inc
add
arpl
cs
push
sbb
and
mov
mov
pusha
adc
shlb
mov
jb
sbb
adc
in
pusha
inc
sbb
addr16
sub
test
ja
push
popa
imul
push
adc
or
sub
pop
mov
cmp
sbb
pop
test
into
xchg
in
cld
push
dec
andl
mov
add
jne
insl
add
das
mov
push
mov
or
scas
leave
cmp
and
inc
dec
push
call
insb
insb
dec
sbb
mov
sbb
jae
pop
pop
fldcw
adc
pop
sub
pushf
cmp
rcr
jle
adc
je
inc
pusha
outsl
cmp
xor
enter
scas
aas
sbb
cmpsb
popf
adc
scas
cmp
push
shll
sti
or
fwait
cmp
in
nop
push
jae
adc
and
cs
imul
lahf
inc
or
inc
cmp
push
and
dec
imul
movsb
lods
sub
int
add
rcrl
sti
dec
inc
xchg
ss
sbb
mov
mov
jg
add
lds
sub
jbe
dec
imul
sar
add
fimull
jg
ss
popa
sub
lods
sbb
test
jg
push
test
or
xor
ret
push
jecxz
pop
lcall
pop
adc
inc
cmp
jno
test
jle
sub
xor
sbb
mov
mov
add
fwait
adcb
xor
adc
pop
movsl
mov
dec
sub
test
inc
imul
or
mov
test
arpl
mov
jmp
lods
mov
adc
xchg
sbb
sub
imul
add
adc
movsl
sbb
sbb
ljmp
insl
movsl
jmp
and
nop
inc
imul
mov
imul
test
test
xchg
inc
pop
mov
imul
push
or
fldt
cmpsb
out
insl
push
lahf
mov
sahf
pop
push
or
loopne
enter
add
and
cmpl
push
stc
xchg
les
pop
add
jbe
fmuls
sarl
sbb
pop
mov
mov
or
push
xchg
sub
add
fdivrs
sub
aad
xchg
cmp
mov
mov
addr16
pop
add
popa
les
jne
mov
aaa
test
cmpsb
loop
pop
pop
inc
insb
ret
mov
sbb
adc
mov
data16
inc
and
push
pusha
sbb
inc
cmp
adc
addr16
or
xor
or
in
into
mov
or
xchg
outsb
movsb
adc
mov
xchg
mov
xchg
dec
jmp
movsl
lods
fisttpll
pop
pusha
ret
loope
inc
ret
jno
sbb
jno
cwtl
sub
js
fidivl
jmp
pop
dec
popa
pop
fimull
cs
or
cmp
out
icebp
inc
cwtl
andb
mov
jno
and
stos
mov
and
lods
add
adc
push
adcl
dec
push
cwtl
popf
mov
adc
mov
orb
sub
push
sbb
loopne
inc
push
add
inc
nop
repz
pusha
pop
lds
cs
sbb
dec
adc
test
sub
in
xchg
dec
ret
push
mov
xchg
and
in
xor
fcompl
test
sbb
mov
mov
mov
mov
jbe
and
or
sbb
enter
idiv
jnp
cmp
inc
incl
lret
adc
cmp
clc
push
adc
push
xchg
iret
dec
jl
sub
insl
cmp
xor
adc
add
insl
jb
mov
inc
pop
xor
hlt
adc
adc
mov
mov
cmpl
push
or
and
or
xor
push
pop
lods
mov
mov
mov
sbb
push
pop
ja
cmpl
sbb
dec
push
jb
ret
lea
and
ljmp
jecxz
cmp
xchg
in
rcr
mov
xor
ss
test
popf
mov
mov
insl
and
xor
jmp
je
or
pop
cwtl
sub
adc
pop
popa
hlt
sub
or
cmp
cltd
test
scas
rcrb
imul
jo
insb
fsubrl
push
aaa
ret
add
xchg
mov
shlb
inc
ret
jmp
sbb
cmp
mov
bound
in
mov
ror
jle
xchg
lret
dec
add
mov
lock
addr16
xchg
shll
and
adc
mov
bnd
mov
fldl
adc
push
mov
add
fsubr
and
and
adc
imul
or
scas
jo
jne
mov
mov
sub
movsb
sub
cltd
nop
jp
add
imul
in
movsl
lock
dec
push
push
js
inc
mov
xor
or
pop
sbb
xor
jecxz
mov
jmp
insb
lea
cwtl
loopne
mov
mov
mov
and
xor
pop
cwtl
and
and
adc
inc
xchg
rcll
cmp
popa
jnp
ljmp
sub
movsb
or
cmp
jmp
xor
xor
rcl
fdivs
push
adc
in
xor
sub
cmp
arpl
sbbb
scas
movsl
sub
xor
xor
cmc
outsb
sub
jae
bound
aad
rorl
shlb
adc
xlat
fidivrl
push
mov
add
les
push
adc
push
fs
iret
jo
xor
lods
or
dec
rcrb
sub
mov
adc
imul
inc
xchg
imul
add
movsb
or
push
jecxz
sbb
enter
jns
pushf
push
cmp
pop
fnsave
ss
clc
or
lret
aad
vaddpd
or
dec
sub
sub
fsubs
lock
inc
xchg
adc
or
inc
es
hlt
scas
imul
cmpsl
dec
push
popf
mov
push
mov
inc
dec
cs
scas
inc
mov
mov
push
lds
lcall
scas
push
lods
sub
jge
flds
imul
dec
xchg
inc
or
sbb
fst
incb
and
push
mov
adc
leave
enter
in
xor
jae
fldenv
push
in
in
add
mov
fists
nop
arpl
push
sub
outsb
dec
hlt
aas
add
adc
cmp
push
sbb
mov
push
cmp
ret
mov
testl
jmp
les
pusha
aas
pusha
and
outsb
mov
sbb
sbb
and
or
enter
daa
cltd
mov
pop
mov
sbb
jnp
jle
push
fldcw
pop
movsl
adc
adcb
fldt
add
push
or
inc
push
or
js
ds
xchg
popa
or
or
sbb
fsubrl
dec
or
xchg
or
pop
push
jns
cmp
adc
xchg
fdivs
ret
out
jae
lret
faddl
and
mov
testl
sub
or
pop
xchg
sar
in
mov
std
xor
repz
push
notb
push
and
lods
nop
cmp
enter
ds
test
movsl
imul
push
xchg
sbb
jo
dec
shr
push
in
xchg
int
repz
adc
pushf
subl
icebp
push
ljmp
or
adc
icebp
gs
movb
andb
push
pop
cmpb
mov
out
and
push
arpl
push
adc
jecxz
cmp
test
push
scas
push
pop
shll
mov
jno
push
sarb
ljmp
inc
inc
stos
push
or
imul
dec
fcmovb
add
fdiv
or
out
pop
xchg
popa
out
stos
or
dec
mov
icebp
add
sub
icebp
mov
mov
sbbl
jmp
addr16
jbe
xor
push
pop
arpl
aaa
xchg
popf
and
ss
loopne
sbb
insl
add
insb
or
xchg
clc
push
adc
xchg
add
mov
jbe
bound
pop
adc
add
or
dec
ljmp
rolb
loope
mov
sbb
scas
popa
xor
inc
push
fisttpll
xor
add
arpl
mov
in
or
add
adc
scas
mov
adc
and
or
pusha
xchg
insl
jp
ljmp
xlat
fcoml
inc
mov
std
push
cmp
push
out
mull
dec
mov
adc
sbb
xor
cmc
inc
cmpb
inc
xchg
cmp
jae
or
mov
jnp
pop
and
adc
enter
pop
adcb
insb
pushf
xchg
or
xchg
enter
adc
add
test
dec
outsb
and
jecxz
cwtl
jb
data16
inc
mov
or
or
push
das
or
loopne
ss
xchg
mov
mov
lds
movsl
stc
and
push
aaa
jmp
stos
sub
loop
add
pop
popf
stos
mov
or
imul
dec
push
xlat
popa
mov
cmp
push
sub
scas
or
pusha
add
les
mov
pop
lods
cs
sub
ret
xor
sbbl
arpl
xorb
or
je
add
inc
cmp
pop
out
adc
imul
push
inc
pop
mov
cmp
jmp
test
rolb
dec
idivb
push
and
xchg
pop
pop
sub
fidivl
sbb
fisubl
in
or
dec
negl
push
pop
subb
pop
mov
pop
inc
int
mov
sbb
rolb
ret
lcall
push
push
xchg
pop
or
push
popa
and
xor
xchg
dec
out
ret
jmp
mov
test
add
mov
ds
stos
insb
adcl
adc
and
cmp
xorb
jmp
add
loopne
popa
or
ret
inc
xor
imul
test
orl
sub
xchg
cmp
data16
fsts
aam
or
xor
sub
adc
popa
jns
fistpl
ljmp
ret
mov
mov
mov
mov
jb
xor
mov
push
sbb
dec
inc
lock
mov
or
pop
mov
sbb
fwait
pop
push
in
faddl
inc
mov
cwtl
adc
jmp
add
mov
xor
pusha
mov
lret
adc
or
jne
cmpsb
dec
sbb
adc
push
sub
cmp
testl
mov
sbb
and
sub
push
sbb
jo
mov
and
mov
ja
add
dec
mov
push
ds
mov
and
jb
push
push
and
adc
movsb
xlat
sbbb
call
cmp
stos
xchg
or
and
push
add
push
cmpl
jae
add
pop
push
lock
int3
xor
les
aam
add
mov
or
mov
dec
push
mov
cmp
and
sub
push
hlt
adcl
and
pop
cmc
push
and
dec
pop
lahf
les
mov
hlt
loope
adc
ret
push
gs
pusha
xchg
call
xor
subl
cmp
mov
fldl
jecxz
mov
idivl
imul
xor
cmp
mov
push
or
loop
inc
or
aad
aad
outsl
or
push
sbb
mov
push
and
lods
cmp
cmp
add
movsb
sub
jae
nop
xor
jne
sub
sub
adc
ljmp
or
or
xchg
gs
and
xchg
push
sub
mov
movsl
or
out
or
mov
sub
test
mov
dec
addb
and
push
xchg
adc
sub
mov
sub
mov
es
add
stc
push
sub
xchg
in
jo
stos
ret
insl
jle
out
fmul
test
xchg
and
popa
dec
stos
hlt
xor
xor
mov
jb
insb
fildl
and
xchg
lods
dec
adc
xchg
out
inc
mov
xchg
sub
sbb
jle
in
xchg
push
or
sub
out
imul
out
scas
inc
nop
loopne
adc
sub
jne
xchg
or
lret
iret
cmpsb
fldenv
lret
ret
in
pushf
jmp
push
push
out
jg
cmp
mov
inc
mov
imul
mov
or
cmp
roll
insb
xchg
fsubrp
outsb
dec
aaa
shlb
push
sub
test
mov
out
adc
daa
sbb
pusha
and
pop
mov
fwait
jle
add
and
push
insl
rcll
in
jp
ret
push
dec
ret
mov
rorb
push
sbb
movsb
mov
or
cmpsb
jne
lods
cmpsl
fmull
rcr
movl
bound
push
jo
mov
jecxz
pop
lds
inc
push
popa
pop
inc
rorl
test
cwtl
mov
cmp
cli
sbb
or
push
mov
and
jmp
xchg
mov
test
daa
les
rorl
aam
sbb
btr
xchg
or
or
ret
adc
inc
mov
add
or
pop
mov
sbb
pop
inc
jo
cwtl
push
adc
jnp
and
adc
insl
sub
cmc
pusha
adc
push
jge
adc
xor
test
mov
xchg
call
pop
push
push
bound
add
adcl
cwtl
mov
xchg
icebp
jns
push
sub
lods
insl
mov
pop
sbb
rorl
jecxz
jmp
rorl
or
sbb
lea
or
or
jg
repnz
pop
lcall
sbb
xchg
repz
test
imul
lcall
lcall
push
daa
cmp
mov
lods
insl
push
lret
xchg
xchg
mov
cmpsl
cltd
pop
mov
vpsubusw
push
lods
imul
xchg
pusha
xor
lods
push
test
fwait
inc
sbb
leave
mov
push
and
leave
mov
movsl
adc
lret
mov
add
pop
fimuls
out
push
jno
mov
and
lea
in
sbb
sarl
and
and
gs
xor
andb
xor
mov
xor
xchg
lods
inc
fisttps
pop
in
jbe
nop
pop
and
lret
mov
pop
push
aas
mov
movsl
rclb
aas
cmp
sbb
dec
bswap
lods
or
push
sub
sub
clc
xchg
sbb
aam
lahf
dec
or
xor
mov
push
mov
add
in
idivl
pop
not
push
mov
sub
inc
xchg
jo
mov
mov
mov
fldenv
dec
mov
lds
out
adc
pop
jg
mov
inc
aaa
fisttpll
and
mov
notb
sub
popa
cltd
xchg
dec
insl
sbb
and
out
adc
inc
loope
lds
fs
push
test
sub
xchg
enter
cmp
sub
mov
or
fdivs
in
adc
dec
mov
pop
mov
mov
sbb
and
test
jmp
xchg
adc
xor
or
or
lret
mov
pop
ja
int3
xchg
sbb
fs
xorb
ja
enter
movsb
pop
push
insb
or
imul
bnd
xchg
inc
sub
xchg
mov
xchg
lods
xchg
mov
lea
jp
sbb
mov
stos
sbb
rcll
mov
out
pop
xor
mov
adc
loope
push
lret
pop
adcl
and
sub
mov
imul
ret
loope,pn
cltd
push
jg
ficoml
sbb
inc
ja
fs
push
lock
xchg
and
movsl
xchg
movsl
add
mov
sub
in
sbbb
pusha
xor
fcoms
movsb
dec
push
adc
popa
jg
xchg
mov
cmp
cmp
subb
fildll
outsb
insb
sbb
test
adc
jmp
imul
aam
xchg
xchg
pop
lock
aam
push
fsubs
mov
fs
enter
or
fsts
in
xchg
sbb
mov
and
cmp
inc
fildl
into
dec
sub
in
sub
pop
mov
pushf
fnsave
es
sbb
inc
pcmpgtw
sub
scas
vpsrld
sub
cwtl
rclb
xchg
daa
and
lds
in
xchg
subb
sub
xchg
fs
fisttps
push
fidivl
stc
ja
sbb
sub
inc
inc
and
push
mov
iret
push
and
cmpsl
aaa
in
push
fistl
pushf
adc
shll
jb
lods
dec
data16
inc
pop
ljmp
rcrl
push
add
jle
shrb
int
push
mov
jmp
arpl
lds
mov
lahf
cld
sarb
mov
loop
int3
pop
test
cmp
insl
rorl
dec
pop
aaa
aam
push
sub
sbb
jne
loope
adc
mov
shlb
mov
ret
inc
push
xor
or
xchg
js
or
xor
into
repz
movsl
shrb
xlat
aaa
rcr
ret
xor
repnz
push
mov
jno
movsl
sub
jo
sub
loop
stos
data16
xor
inc
ds
mov
inc
xor
movsl
daa
das
mov
sub
dec
insl
pop
pusha
cli
pop
inc
bound
mov
xor
rcr
test
es
jno
scas
jne
pop
mov
xor
inc
ret
mov
dec
xor
adc
mov
add
sub
dec
mov
mov
mov
pusha
xor
inc
imul
in
push
mov
sbb
cwtl
shlb
sub
lds
in
push
xchg
mov
jno
aad
in
iret
sbb
shll
mov
cmpsl
push
sbb
mov
push
push
inc
mov
mov
pop
or
ljmp
push
mov
mov
inc
and
add
imul
fildll
push
sub
test
jmp
sub
jbe
lods
add
subb
sbb
jle
xor
lea
lods
insb
push
fists
rcrb
adc
inc
inc
xor
lret
leave
cmp
mov
sub
xlat
ret
mov
add
in
inc
fadds
jecxz
test
loope
dec
daa
gs
lods
and
push
or
icebp
jno
es
mov
dec
mov
jle
das
in
push
in
nop
flds
decl
jne
xchg
stos
incl
xchg
adcl
push
xlat
mov
mov
xchg
or
sti
adc
add
test
and
in
push
and
add
daa
push
insb
mov
add
outsb
aad
outsb
aam
lret
popf
cmp
add
mov
test
test
bound
mov
insl
subl
xchg
add
push
fisttpll
inc
sbb
test
pusha
andl
addr16
or
gs
xor
push
add
lock
add
iret
fwait
xor
mov
lock
cmp
xchg
decl
in
xor
or
fidivrs
push
add
and
test
cmp
dec
or
and
dec
xor
filds
sti
stos
imul
int3
add
add
cltd
popa
dec
jg
pop
push
dec
arpl
pop
imul
or
sbb
outsl
jle
sahf
je
imul
ret
outsb
sub
faddl
jne
add
pop
adc
cmpsb
popf
arpl
mov
push
in
jp
cmpsl
je
ss
out
fs
jae
sbb
jnp
dec
jp
dec
lahf
bound
cmp
or
jle
push
jbe
imul
push
pop
jnp
js
jb
add
addr16
outsl
sahf
push
mov
imul
sbb
rcrb
ja
adc
inc
adc
sbb
das
or
add
jo
js
arpl
jcxz
xchg
insb
jbe
jp
outsl
xchg
dec
neg
cmp
cmpsl
inc
sti
shlb
sub
jbe
rorl
fbld
and
mov
fs
addr16
pop
inc
cmp
and
add
adc
or
sti
dec
jnp
idiv
inc
xchg
jb
xor
sbb
dec
shrl
push
outsl
or
xchg
fisubl
out
push
sahf
je
mov
aas
mov
adc
inc
inc
ss
insl
push
or
push
es
sbb
rcrl
adc
inc
xor
lds
jae,pn
jb
shlb
push
inc
outsl
fstps
fisubl
dec
pop
push
loop
daa
ja
sbb
pop
negb
pop
jo
push
dec
ljmp
mov
jg
shll
popa
lcall
dec
cmpsb
data16
add
sub
arpl
jp
xchg
popa
aaa
out
ss
ret
push
jo
lahf
into
loop
mov
frstor
ss
xor
cmpsb
and
push
imul
sahf
dec
mov
popf
cmp
ds
xchg
fwait
or
pop
jg
imul
pop
inc
insb
out
jno
mov
sbb
frstor
lcall
sbb
insb
test
jnp
in
push
popa
repz
popa
sbb
adc
dec
pop
insb
imul
inc
fwait
or
xlat
xor
xor
mov
push
mov
outsb
sbbl
sahf
jns
or
or
mov
pminsw
push
popf
lods
mov
adc
xchg
inc
inc
mov
sub
mov
jbe
aas
addr16
sub
mov
bound
add
inc
mov
lret
jbe
dec
hlt
add
push
xchg
outsb
ds
jae
mov
or
xchg
ret
jmp
sub
inc
push
pop
jae
xor
dec
adc
cltd
jno
add
push
loopne
push
dec
sub
imul
jp
inc
or
imul
ss
cmp
or
jne
and
or
lds
addr16
mov
and
arpl
sbb
lret
lods
call
push
outsl
imul
push
xorl
push
pop
stos
ret
stos
stos
bound
stos
rclb
adc
jbe
lahf
imul
cmp
je
xchg
push
push
push
sub
push
or
adc
roll
and
xor
ja
lods
pop
jo
mov
push
or
sub
xor
and
ret
sub
je
or
fwait
xor
cmpsb
or
adc
into
cmp
push
jns
xchg
add
jp
dec
dec
adc
shlb
dec
mov
dec
cli
jns
push
add
mov
xchg
es
stos
xchg
add
add
out
mov
fiaddl
mov
add
sbb
push
ds
mov
mov
inc
rcll
incl
and
outsb
loop
push
inc
incl
mov
mov
cmp
add
fldcw
insb
sub
imul
lds
dec
xchg
mov
data16
add
mov
das
mov
mov
mov
gs
adc
dec
out
out
push
popl
adc
sbb
mov
xorb
jp
mov
jae
ss
xchg
push
add
repz
mov
pop
sbb
cmp
push
mov
push
mov
mov
inc
arpl
mov
sub
imull
pop
fiaddl
fiaddl
fistpll
dec
arpl
inc
pop
stos
mov
add
mov
fisubrl
nop
or
lcall
add
inc
mov
inc
popa
or
lret
push
xchg
fsubs
shlb
xchg
dec
add
ret
pop
es
insl
or
push
push
sbb
push
mov
rorb
or
pop
or
ret
mov
sbbb
xchg
mov
xor
or
mov
and
aaa
lret
pop
mov
ret
stos
imul
push
xorl
xchg
inc
es
dec
pop
mov
pop
dec
adc
out
cmp
shlb
xchg
sub
scas
popa
inc
sub
outsb
repnz
push
jo
iret
es
out
and
insl
fwait
imul
push
test
inc
lcall
push
jb
or
pop
jae
jnp
inc
aaa
je
xor
or
xorb
cmpsl
imul
cli
sbb
mov
jno
jbe
pop
inc
test
mov
jp
frstor
push
cmp
aas
sahf
loop
inc
jo
bound
fmuls
daa
xlat
xor
xchg
mov
dec
xor
adc
push
scas
data16
call
adc
sub
push
and
xlat
into
inc
sbb
push
shlb
iret
lods
add
movsl
jmp
add
fcmovnb
shll
adc
arpl
add
mov
into
pop
outsb
push
js
sbb
shlb
sbb
adc
shrl
push
sub
aam
mov
adc
dec
jg
mov
xor
fcomi
js
jb
dec
mov
sbb
push
mov
add
sahf
mov
adc
mov
scas
jae
outsl
pop
sub
lea
pop
jae
call
lret
mov
ja
adc
inc
sub
jecxz
dec
xor
decl
jecxz
addr16
insb
add
pop
rclb
cmpsl
fildll
sbbl
push
adc
popa
jnp
mov
outsb
cmpsl
xor
sub
ja
dec
stos
cwtl
jo
sbb
and
mov
pop
xorl
stos
sti
add
add
bound
sbb
sub
sub
cmpsl
ja
inc
inc
shrl
aas
insl
mov
ds
cmpsb
jo
insl
ret
dec
roll
pop
jbe
call
popa
outsl
fimull
cmp
fcompl
sub
push
jg
fwait
fwait
stos
outsl
sbb
jg
jnp
jmp
loope
and
pop
sub
mov
pusha
mov
shrb
jecxz
pop
sti
xchg
or
jae
push
sbb
add
xor
push
add
ret
dec
pop
sub
lods
scas
add
ret
andl
fcoml
arpl
jae
insb
pop
pop
push
das
popa
inc
add
loop
jo
out
daa
sbb
adc
ja
push
mov
adc
lahf
rorl
dec
inc
test
add
adc
pop
stos
jae
sub
cmp
push
rcrl
pop
dec
or
mov
data16
or
dec
jp
pop
outsb
push
jb
mov
sbb
je
sbb
ds
mov
jg
scas
mov
test
push
mov
jle
xchg
jno
mov
jmp
pop
mov
imul
push
jnp
push
mov
je
adc
mov
faddl
mov
jne
push
sub
mov
and
shll
daa
or
lds
test
insb
inc
sbb
sbb
push
jecxz
or
inc
or
or
push
mov
inc
and
loopne
push
imul
sub
daa
cmp
shll
cwtl
inc
jnp
and
insl
jmp
divl
mov
push
cmp
mov
mov
xorl
push
jns
xlat
and
pop
cmp
bound
aam
es
pop
fiaddl
mov
push
push
xchg
push
push
out
mov
push
push
pop
mov
pop
outsb
push
outsl
fsubrs
imul
scas
fnstenv
insb
jae
or
push
fisubrl
xor
outsb
sbb
inc
and
and
sbb
mov
dec
pop
inc
push
xchg
stos
sbb
dec
shll
lods
mov
popa
mov
sbb
cmpsb
pop
outsl
test
hlt
test
add
int3
sbb
push
dec
jmp
xor
addr16
push
and
add
shl
push
mov
movzbl
adc
inc
inc
roll
xlat
or
subl
jb
lods
sub
or
inc
inc
insl
insl
andl
mov
push
daa
fstpl
xchg
adc
add
or
or
add
cmp
xchg
pop
jle
aaa
ss
sbbl
push
jecxz
dec
or
mov
mov
test
neg
sarb
push
mov
inc
mov
mov
ja
and
sub
or
xchg
xor
pop
jo
jae
cmp
stos
mov
xor
sub
push
mov
stos
stos
and
push
add
add
sbb
mov
iret
divl
sldt
jg
add
jb
inc
add
cmp
decl
lods
bound
push
push
or
pop
xor
mov
mov
pop
pop
scas
lahf
ljmp
dec
mov
jb
inc
sbb
mov
mov
adc
arpl
dec
sbb
sbbb
data16
inc
sbb
sub
xor
in
ret
cmp
jbe
mov
push
jmp
pop
adc
iret
jo
popa
sub
adc
sbb
inc
adc
addb
pop
mov
aam
sbb
inc
or
repnz
mov
stos
add
and
cmpsl
movsb
dec
lea
xor
push
or
ret
xchg
xorb
dec
loopne
push
or
pop
jg
sbb
insb
push
test
mov
push
filds
les
stos
ret
push
xlat
arpl
sbb
rolb
arpl
fcmovb
aad
inc
arpl
mov
push
and
push
lret
test
and
outsb
lods
sub
sub
sub
xor
xchg
adc
dec
stos
jo
push
adc
jnp
sbb
xor
repz
rcrb
aad
xchg
jg
bound
mov
push
bound
lcall
and
sub
imul
lods
or
mov
jb
push
pop
sub
sub
xlat
mov
and
pop
repz
dec
les
fs
mov
or
push
inc
pop
das
ds
sti
outsl
xchg
push
pop
push
pop
pop
aaa
shlb
pop
adc
pushf
outsl
ljmp
mov
fwait
xor
sbb
jnp
jns
mov
push
mov
or
imul
sbb
xchg
sbb
jmp
adc
scas
push
adc
inc
test
xchg
pop
jmp
xor
jmp
call
add
cmp
aaa
mov
pop
fwait
cmp
xor
pop
pop
fcmovb
sti
mov
imul
push
ret
and
dec
adc
inc
popa
cwtl
add
rclb
sub
xor
inc
insb
dec
add
add
arpl
pusha
xor
mov
mov
mov
and
outsl
call
inc
cmpsb
hlt
adc
fsts
test
jo
push
inc
xchg
add
pop
shlb
or
and
dec
inc
adc
fiaddl
sbb
adc
xchg
xchg
mov
sbb
movsb
adc
and
or
and
inc
je
xchg
nop
ret
jg
fistps
mov
bnd
jb
sub
sbb
push
xchg
fimuls
dec
sub
xor
xor
and
outsb
movsb
mov
xchg
lcall
or
test
mov
or
adc
mov
outsb
pop
int
xor
lods
sbb
aaa
rcll
lcall
mov
lock
inc
insb
mov
adc
sub
mov
adc
or
pusha
clc
pop
aas
pcmpgtw
repz
push
movsl
xorl
or
xchg
adc
fst
xchg
mov
xchg
loopne
js
adc
mov
ficoml
lock
sub
inc
insb
pusha
ja
sub
fadd
sbb
xchg
insl
and
and
loopne
pop
push
cmpsl
add
xchg
jo
rorb
adc
pop
mov
data16
adc
out
sahf
jae
or
sub
adc
jmp
sbb
popa
sub
inc
outsb
adc
add
adc
push
test
out
pop
pop
adc
adc
lds
js
in
sbb
dec
mov
cmp
test
flds
add
and
inc
push
xchg
and
test
jne
ljmp
dec
xor
xlat
dec
sbb
adc
out
in
mov
jno
adc
sub
push
fcmovnb
out
popf
aad
xchg
pop
lahf
aam
movsl
pop
mov
add
push
nop
push
add
jg
xor
adc
or
pop
or
push
add
punpckldq
rolb
add
stc
add
add
leave
pop
or
test
mov
inc
mov
btr
and
or
addr16
sub
sub
sub
cmc
or
mov
sbb
insb
jg
or
mov
add
fisttpll
mov
sbb
call
es
xchg
add
in
loope
nop
sub
or
push
sbb
jns
xor
addb
jno
adc
pop
adc
or
push
or
jo
xor
in
xorb
add
mov
in
dec
xchg
movb
add
add
pop
cwtl
add
push
pop
add
mov
pop
adc
mov
dec
add
adc
mov
inc
dec
outsb
cmp
push
or
cmp
dec
xor
add
inc
or
daa
add
add
enter
add
and
adc
rorb
add
pop
or
add
inc
mov
mov
dec
dec
mull
jns
adc
adc
scas
mov
dec
dec
xchg
addr16
jp
popa
insb
inc
sbb
stos
add
nop
subb
rcrl
je
outsb
pop
xchg
in
ret
test
jmp
sub
sbb
dec
sbb
insb
lcall
test
clc
xchg
push
mov
mov
jns
inc
pop
fists
sahf
shlb
outsl
jmp
push
les
movb
pop
enter
ja
popa
fs
imul
pop
push
sub
add
inc
dec
bound
mov
or
popa
mov
fwait
testb
and
movups
xorb
shr
push
imul
bound
mov
and
mov
cmp
sbb
pop
out
xor
sbb
add
loop
ror
push
ret
ficompl
jle
mov
and
adc
shr
in
negb
pop
adc
gs
inc
and
std
fistps
pop
sbb
sbb
xchg
test
xchg
add
xchg
dec
ss
pop
es
jno
mov
imul
pop
xor
or
jecxz
fs
fcmovb
cwtl
pusha
mov
jb
fwait
xchg
jecxz
push
and
psrld
popa
mov
lret
aaa
pop
inc
sbb
jo
arpl
inc
cmc
sbb
pop
and
or
jno
arpl
pop
insl
cmp
shlb
xchg
popa
je
and
repz
sbb
xor
sub
ret
mov
icebp
mov
aam
movsb
ret
sub
daa
inc
sbb
push
fisubrl
clc
sbb
sbb
sbb
pop
push
mov
or
xchg
sbb
push
insl
inc
or
sbb
clc
mov
push
lds
pusha
inc
xchg
and
or
fnstsw
push
mov
ds
dec
stos
loopne
push
popf
push
test
adc
adc
cmp
ret
dec
insb
pop
and
dec
outsb
push
mov
dec
lahf
sbb
or
push
mov
test
add
mov
mov
xlat
push
dec
mov
lds
stos
add
or
bound
outsb
insb
mov
adcl
or
cwtl
xor
outsb
push
test
mov
dec
dec
push
je
ja
adc
mov
sbb
inc
icebp
in
cmp
jns
push
gs
out
xor
and
xchg
and
jae
aam
sbb
push
data16
jae
push
sbb
lret
aaa
sbb
insl
cmpl
jo
shlb
imul
insl
add
or
inc
nop
dec
inc
in
add
inc
jae
mov
hlt
and
outsl
jno
adc
jae
xchg
outsb
mov
sub
mov
outsl
or
and
or
jmp
jge
jbe
dec
sub
sub
cs
shrl
mov
ja
add
jg
insb
adc
shrl
leave
shll
sub
jbe
pop
popf
enter
inc
xor
mov
orb
fwait
mov
xchg
clc
add
pusha
cmpsl
or
and
jg
push
mov
pop
inc
insb
lock
inc
dec
dec
jb
inc
xchg
mov
pop
push
int3
gs
sub
or
sbb
sti
jno
in
sbb
xor
inc
fs
and
adc
stos
push
outsl
or
adc
mov
adc
jmp
cmpl
or
je
sbb
aad
inc
inc
jo
mov
popa
pushf
adc
xchg
sbb
jo
out
dec
push
mov
inc
jns
ret
loope
pop
and
jns
add
outsl
ficompl
add
and
filds
or
jbe
or
ret
fsubp
inc
inc
and
xchg
add
popa
fstpt
sbb
xor
inc
cltd
inc
mov
in
push
push
sub
mov
push
push
mov
pop
mov
jno
dec
mov
sbb
add
pop
sub
pop
cli
push
nop
lahf
in
jbe
mov
jb
lods
loope
mov
and
sbb
adc
mov
xor
outsl
push
popl
ret
xor
mov
popa
mov
arpl
vmovups
adc
imul
arpl
xorl
jnp
push
xchg
fstpt
ret
sbb
mov
xchg
sub
and
push
imul
mov
mov
push
arpl
daa
jnp
push
nop
pusha
jns
inc
test
sub
jo
sub
sbb
xor
inc
imul
mov
add
add
fisttpl
add
cmp
inc
fcompl
cmp
scas
push
pop
gs
mov
and
xor
icebp
push
add
mov
inc
addr16
inc
es
push
or
or
mov
mov
and
xchg
pop
imul
addb
push
jno
rolb
cmpsl
sub
out
stos
fsubl
gs
push
jecxz
data16
in
ljmp
pop
in
sub
dec
push
add
xor
fisubl
ficompl
sbb
push
repz
inc
mov
std
cmp
push
insl
test
pop
or
ljmp
fs
sbb
mov
es
mov
mov
push
les
sub
push
testl
cmp
inc
push
out
aas
push
pop
xchg
add
and
and
out
lret
sbb
inc
push
and
vandps
fisttps
movsl
cmp
sbb
jo
ljmp
inc
and
cmpb
mov
icebp
or
push
mov
mov
lea
mov
pop
lods
and
test
rcrb
mov
pop
pop
gs
lods
xchg
or
add
fwait
pusha
sbb
adc
sbb
and
add
inc
and
or
adc
insl
and
push
ret
mov
and
xchg
arpl
add
mov
mov
and
mov
mov
dec
jo
aam
lea
pushf
xchg
pop
out
mov
xor
mov
cs
add
mov
inc
or
fwait
inc
xchg
stos
and
xchg
mov
movsl
pop
sub
shrl
adc
nop
mov
popa
jno
pop
imulb
and
sarb
imul
je
inc
adc
sub
movl
inc
shrl
jmp
jge
mov
dec
je
jne
xchg
jbe
sbb
rcrl
imul
sbb
data16
movsb
xchg
mov
adc
sbb
adc
mov
sub
push
mov
movsb
fsubl
in
xor
inc
icebp
int3
or
inc
xor
sub
adc
lds
xor
mov
mov
adc
bound
xchg
arpl
adc
mov
out
or
sbb
imul
cmp
ljmp
jbe
cmpsb
in
cmp
xchg
sbb
inc
roll
sbb
mov
icebp
fs
push
subl
sub
inc
sub
jb
popf
sbb
inc
pop
push
dec
or
sbb
adc
lea
ret
and
sbb
shll
jne
push
imul
inc
push
inc
inc
inc
push
mov
mov
add
movsb
movsl
jecxz
xchg
pop
ss
movsl
scas
inc
lret
and
dec
pop
sub
mov
jbe
and
daa
push
rcr
mov
xor
insl
sub
sbb
ss
xchg
or
mov
aaa
xchg
or
lds
inc
and
cmp
push
movl
sub
mov
cmp
xchg
fcoms
dec
dec
ss
adc
lock
cmpsb
or
push
lods
mov
xor
mov
cmp
add
push
cwtl
xchg
sbbb
in
push
outsl
sbb
ss
add
fldt
imul
mov
xchg
test
sub
push
imul
xchg
jbe
sbb
push
add
mov
imul
and
and
mov
pop
jmp
push
add
out
addl
ds
jno
add
pop
inc
test
or
dec
jb
inc
loop
gs
fildl
je
pop
insb
iret
adcl
xor
and
push
repnz
dec
ds
aaa
push
jo
mov
dec
push
inc
fs
add
addl
sub
inc
pusha
adc
xor
icebp
sub
cmp
movsl
pop
inc
inc
add
psubsb
cmc
add
rorl
and
adc
lods
int3
xor
les
mov
xchg
pop
pop
sti
dec
aad
sbb
nop
pop
and
sti
adcb
and
test
rcrb
add
pusha
int
sub
pop
xor
mov
sarb
push
xchg
and
std
rolb
sbb
pop
inc
sub
xor
or
sbb
rorb
add
adc
lods
mov
push
adc
shlb
inc
outsb
mov
and
mov
sbb
pop
movups
adc
loope
push
lock
add
or
dec
mov
add
push
sub
mov
rolb
inc
cmp
push
inc
jo
mull
add
addr16
dec
inc
jp
push
push
in
stc
push
or
or
cmpsb
popa
add
dec
fiaddl
inc
cmpsl
loope
dec
iret
push
inc
or
mov
lahf
jb
dec
hlt
fimull
push
add
imul
dec
mov
stos
pop
fadds
jae
dec
push
daa
fldt
push
or
cs
and
clc
adc
push
dec
incl
add
add
add
add
add
add
inc
xchg
outsl
inc
jae
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
mov
xor
add
