dec
ljmp
push
mov
mov
xor
push
lea
mov
sub
or
push
add
les
je
cmp
aaa
test
je
push
movl
call
les
orb
test
je
push
add
dec
xor
jge
divl
incl
mov
jne
xor
shll
test
les
int3
add
and
leave
or
or
fildl
or
mov
movl
inc
mov
jmp
xor
repnz
icebp
or
mov
in
adc
push
mov
enter
fisubrs
sub
sub
mov
je
sub
adc
jnp
adc
pop
mov
ret
lahf
push
shl
shll
and
xor
in
or
rorb
push
sub
shrb
fs
push
arpl
mov
mov
pushf
jbe
pop
ret
jle
in
and
xorl
daa
insb
fbstp
inc
mov
lea
push
mov
xchg
in
rclb
pop
pop
dec
popa
mov
and
lea
push
mov
inc
push
cmp
scas
js
xor
mov
push
sub
mov
mov
mov
pop
fistpll
out
js
jns
mov
mov
lock
push
ficoml
push
mov
push
and
push
out
adc
mov
outsb
dec
out
lahf
jo
sbb
cmpsl
add
xor
mov
ficoms
sbb
or
push
push
jl
mov
push
cmp
loop
test
lods
lcall
mov
cld
stos
sarb
jmp
mov
push
sub
pop
sarl
push
das
xchg
xor
sbb
mov
sbb
mov
ja
ret
xorl
scas
sub
mov
pushl
shl
push
or
leave
push
xadd
dec
test
jg
repnz
inc
add
mov
ljmp
in
and
ja
lret
test
xor
lahf
shl
pop
dec
out
sbb
push
mov
xor
and
loopne
or
jo
mov
push
push
popa
movsb
sar
call
push
adc
mov
iret
fsubl
cld
push
push
inc
inc
stos
dec
std
loope
xchg
sbb
mov
fsubrl
je
lock
push
insb
push
add
cld
inc
jb
adc
add
mov
js
mov
jnp
or
adc
push
xchg
cmp
mov
pop
addb
push
add
mov
mov
mov
sahf
data16
jns
sub
call
les
sbb
sar
push
inc
push
lea
xchg
mov
aaa
lea
add
lret
icebp
sub
punpckhbw
inc
add
xor
mov
aaa
lahf
cmpsb
cmp
cmpsb
int3
xor
add
or
push
cld
cwtl
jnp
lahf
add
cmp
push
test
or
push
or
sbb
loopne
sub
sarb
sarb
icebp
jl
cmc
inc
andl
sbb
jle
jne
mov
add
mov
jbe
lcall
sbb
testb
xor
add
loopne
loope
or
cmpsb
stc
sub
inc
inc
push
pop
lock
test
and
mov
shlb
repnz
add
push
sub
pop
push
jo
out
xor
push
sub
pop
insl
lock
pop
ficomps
sbb
cmpsb
roll
and
inc
sbb
or
mov
mov
push
push
jecxz
bswap
enter
lea
je
rcl
fisttpl
pop
sbb
mov
rcrl
test
sub
inc
dec
push
cmp
cmp
dec
push
in
inc
add
in
add
push
popa
je
jns
xor
push
push
jno
push
pop
iret
mov
gs
push
add
test
fs
mov
push
divl
or
dec
push
cmp
test
add
pop
pop
pop
das
and
xlat
or
lods
lock
mov
pop
sti
icebp
dec
xchg
pop
cmpsb
or
push
dec
push
nop
push
sub
pushl
mov
cmp
jne
jmp
push
cmp
icebp
aas
addb
add
add
jmp
sahf
or
icebp
cmc
pushw
sbb
stc
mov
cld
cmp
or
add
add
add
mov
in
prefetchwt1
or
jl
daa
and
in
out
adc
lock
daa
push
adc
jle
lock
add
mov
sarl
mov
xor
mov
push
cld
data16
cmp
jne
sbb
jb
mov
and
loopne
sarl
cld
push
push
push
push
xor
adc
fisubs
faddl
cmp
call
and
sarb
int
xchg
ret
fs
pop
pop
cmp
cmp
int
lcall
or
test
je
and
jmp
or
or
hlt
push
sahf
cmpsb
loopne
sbb
push
adc
sub
cli
add
lock
mul
mov
or
hlt
or
pop
fucomi
cmp
add
in
push
mov
push
cwtl
mov
daa
pop
mov
cmp
inc
jo
popf
rolb
incb
or
xor
pop
nop
xchg
clc
clc
pop
add
insl
xor
insb
lea
pop
dec
push
mov
pusha
cmpsl
or
dec
xor
jl
push
mov
sub
ret
dec
cwtl
or
sahf
iret
stos
clc
mov
mov
push
cltd
push
and
gs
xchg
inc
add
out
adc
sbb
insb
dec
inc
xor
mov
dec
out
test
pop
mov
xchg
imul
fimull
push
movzwl
les
dec
xchg
mov
xchg
and
mov
sub
repnz
sarl
lea
sbb
or
jb
push
xchg
iret
xchg
lret
call
js
inc
push
push
mov
js
aad
cli
mov
and
les
lret
sti
push
adc
lds
inc
test
dec
and
aaa
enter
push
sub
adc
sbb
pop
imul
hlt
xor
sahf
adc
mov
or
pop
adc
pushf
shlb
sub
cmpsl
aad
fisttpll
sete
test
jns
push
mov
or
mov
add
pop
xchg
pop
push
rep
push
adc
or
push
add
scas
test
pop
je
push
dec
cmp
push
insl
add
jae
mov
sub
sbb
mov
jle
mov
pop
mov
pop
imul
cmp
lcall
sbb
dec
push
adc
sarl
and
ret
nop
mov
xor
adc
push
pop
sub
xor
rcll
pop
sahf
lret
rclb
sub
shrb
insl
jmp
subl
inc
scas
add
testl
rcrl
rcrl
or
adc
mov
xor
mov
push
invd
and
lret
repz
xchg
cs
data16
or
loopne
cmp
test
out
or
je
inc
mov
sbb
or
add
adc
cmpb
les
aad
push
cmp
push
xor
movl
and
jno
sub
cmp
outsb
pop
leave
xchg
adc
cmp
adc
cs
adc
sbb
fwait
ret
cmp
dec
outsb
mov
mov
cmp
adc
popf
inc
rcrb
mov
and
jecxz
mulb
xchg
pusha
lret
pop
test
inc
aad
cmp
es
loope
aam
jns
dec
aad
cmpsb
inc
push
mov
xchg
mov
pop
pushfw
repnz
ja
js
xor
enter
cmp
js
or
and
add
pusha
andb
pop
cmp
dec
sbb
and
cmp
add
cmp
jmp
push
sbb
xor
ficoms
int3
mov
pop
addr16
ss
add
pop
push
xchg
in
cmp
adc
sub
mov
aaa
push
push
in
adc
and
clc
xor
cmp
add
nop
dec
inc
andb
jne
mov
sub
pop
push
or
xor
imul
lret
push
and
and
or
mov
push
push
xor
mov
pop
out
lea
sbb
dec
mov
push
add
test
mov
and
enter
lea
sub
repnz
ja
mov
adc
daa
sub
pop
adc
ljmp
leave
cmp
jl
insl
out
jns
dec
add
add
jns
xchg
cmp
xor
scas
xchg
out
inc
add
push
fs
push
sub
pop
mov
sbb
sbb
add
imul
fcmovb
stos
cmp
push
lods
imul
pop
sub
xchg
inc
sbb
xor
fcoms
dec
push
and
add
mov
in
sub
push
mov
and
pop
add
push
mov
cmpb
stc
add
push
xchg
push
mov
or
pop
dec
mov
in
push
xlat
roll
fs
fidivs
pushf
ljmp
xor
jae
ret
call
clc
cli
xchg
neg
push
push
adc
pop
cmc
adc
andb
into
cld
out
jg
and
mov
testb
lea
jne
sub
pop
enter
mov
mov
add
push
mov
add
mov
movl
or
push
sub
pop
mov
add
sbb
pop
adc
add
adc
aam
xchg
lahf
insl
lods
sub
testl
je
lea
or
sbb
outsl
jne
insl
xor
cs
cmp
and
or
dec
int
aam
ja
adc
xor
pop
hlt
push
push
push
push
adc
push
pop
clc
nop
adc
loope
cmp
dec
mov
stc
in
loopne
aaa
add
mov
sbb
jmp
mov
lock
je
mov
xor
add
and
leave
push
xchg
roll
or
je
adc
add
mov
xor
add
add
sub
mov
mov
push
hlt
out
push
push
pop
add
mov
sub
jg
and
ret
out
ret
mov
add
pop
mov
pop
setbe
imul
jl
imulb
add
test
lock
daa
mov
xchg
and
add
neg
sbb
inc
daa
pop
rol
add
popa
xor
add
ret
add
mov
sahf
sbb
iret
jne
mov
jp
pop
pushf
pop
out
fstpt
lret
mov
mov
sub
scas
adcb
xchg
push
adc
push
loopne
out
and
idivb
pop
shrb
jo
jg
mov
adc
add
add
pop
ret
pop
dec
push
add
dec
mov
mov
lds
cmpsl
mov
mov
or
and
in
jne
std
in
sbb
fsubs
and
cmp
jle
cmp
jle
sub
mov
adc
call
mov
inc
pop
mov
inc
cld
scas
cmpb
or
imul
add
std
and
je
mov
or
lea
jnp
xchg
mov
rorb
push
cmp
je
push
mov
push
decl
sub
lea
loopne
mov
movzbl
repnz
add
jne
add
cli
popf
testb
stos
add
adc
add
mov
insl
nop
iret
test
xchg
sbb
ret
jge
mov
hlt
add
dec
fsubrl
and
pusha
mov
pop
inc
incb
sub
lea
push
hlt
cmp
inc
shll
je
pop
fs
or
push
loope
and
mov
mov
pop
mov
mov
mov
mov
sub
and
sbb
sbb
jne
adc
insb
in
push
adc
fidivrl
leave
adc
add
hlt
outsl
mov
mov
jno
push
mov
inc
adcb
mov
dec
jge
ret
hlt
add
adc
pushf
rorl
or
mov
sbb
sbb
pop
jmp
mov
scas
fs
movl
clc
push
or
sub
push
xchg
cmpl
enter
inc
fsubrs
mov
stos
dec
xor
adc
ja,pn
sub
movb
inc
and
mov
sub
sbb
add
xchg
fucomp
cmpl
mov
arpl
xorb
out
lret
pop
pop
add
jmp
cmp
push
sbb
push
sbb
push
ljmp
mov
adc
lea
je
inc
mulb
or
xor
inc
sahf
test
ret
loop
sub
lahf
jmp
je
jmp
inc
push
sub
scas
and
hlt
sub
sub
push
add
adc
add
inc
loopne
call
in
call
fildl
int
pop
cld
cmp
jne
jnp
push
lret
mov
xor
jmp
sbb
cmp
jle
mov
decl
dec
mov
jle
mov
mov
inc
shr
or
aas
lods
inc
inc
mov
add
adc
dec
dec
in
sbb
jne
loop
pusha
pop
sub
cmp
adcb
andl
movsl
nop
dec
push
or
out
or
inc
cmpsl
ret
cmp
sar
lock
cmp
mov
adc
inc
sbb
pushf
out
xor
dec
and
call
aad
test
aaa
push
icebp
test
je
mov
lea
cli
adc
pop
jnp
push
sub
cmp
jb
sbb
aam
add
cmp
jbe
daa
add
push
sub
push
pop
and
into
int
ret
jg
filds
adc
jbe
pop
adc
inc
sbb
jae
mov
push
push
imul
cmp
jbe
dec
sbb
pop
stc
sub
sub
add
sub
ljmp
test
lcall
lea
push
clc
pusha
sbb
incb
lret
push
sbb
add
add
cmp
sub
inc
inc
push
movb
dec
push
out
fs
mov
mov
insb
rclb
pop
xchg
or
mov
cmp
mov
fwait
and
jbe
adc
movsb
sbb
xchg
or
xchg
cmpsb
or
mov
and
add
pop
jno
stos
out
pop
and
call
xor
add
sbb
inc
push
test
dec
mov
fisttpl
int3
push
test
ret
lea
push
ja
push
cmp
jae
mov
pop
orl
ret
mov
clc
jp
push
lea
mov
or
or
push
cmp
add
adc
pop
cmp
pop
aad
jl
mov
icebp
fcmovnb
add
sub
push
add
push
insl
xchg
pushf
xor
fwait
mov
insl
add
add
clc
mov
pop
add
add
inc
fs
loopne
rclb
and
pusha
lcall
jae
or
dec
test
adc
leave
push
push
add
pop
mov
or
shl
icebp
and
jbe
add
add
fiadds
out
mov
sahf
sub
pop
add
inc
mov
rorb
add
shlb
or
add
incb
pop
sbb
filds
mul
mov
shr
shr
cmp
jae
mov
cmp
ja
add
xor
add
cmpb
ja
decb
mov
xchg
out
dec
call
push
fcoms
ja
fcoms
shll
dec
in
je
inc
and
xchg
pusha
rclb
and
fidivs
getsec
jmp
pop
pusha
cmp
and
add
or
push
sbb
add
ds
fsub
mov
inc
push
scas
jbe
pop
ljmp
adc
pop
lea
insb
sbb
sub
xchg
sbb
add
push
jge
aas
push
or
sti
add
jae
in
push
push
mov
dec
push
sbb
pop
neg
js
test
je
pusha
adc
push
insb
andb
sti
adc
lea
sub
or
xor
adc
lcall
or
cmpsb
sbb
mov
fmul
push
jmp
out
push
add
icebp
jg
adc
imul
adc
mov
mov
repz
scas
add
add
xchg
jle
and
mov
add
lcall
lds
add
das
mov
sbb
sub
add
pop
in
lea
mov
and
aad
add
pop
mov
nop
icebp
push
inc
jno
repnz
push
inc
adc
xor
popa
orl
aad
sub
push
movsb
cltd
lahf
cli
pusha
inc
adc
dec
vshufpd
mov
mov
lods
icebp
je
mov
iret
push
mov
push
push
mov
xchg
or
lret
ds
roll
push
pop
pop
inc
xor
int3
mov
test
cltd
adc
and
imul
jo
lods
pop
iret
push
push
shlb
cmpsb
mov
leave
adc
pop
aas
pop
and
out
je
inc
popa
add
inc
pop
das
ret
lock
cwtl
scas
test
push
cli
and
je
or
jmp
add
ds
lahf
push
sbb
in
pop
sub
xchg
pushf
sahf
lret
jg
pop
add
insb
push
cmp
adc
test
js
enter
push
add
pop
rclb
nop
jnp
dec
nop
nop
xchg
out
jo
dec
add
pop
xchg
cld
push
jp
xchg
imul
pushf
out
stc
adc
add
sub
fsubrs
call
inc
mov
popf
ret
mov
lods
add
test
arpl
add
jmp
push
xor
lock
loopne
add
dec
mov
ds
xchg
ret
mov
outsb
stos
subb
std
cli
mov
xor
in
jmp
add
jp
jle
add
ljmp
adc
subb
lea
test
mov
inc
lea
jle
movsb
enter
cmp
and
push
dec
dec
cmp
and
mov
sahf
and
addr16
sub
mov
mov
shlb
sub
in
test
jle
push
mov
sbb
pop
pop
stos
and
sbb
mov
lods
call
mov
shll
lret
mov
mov
insb
pop
push
stc
lcall
or
or
sahf
lods
push
adc
leave
xchg
sub
xchg
dec
pusha
sbb
push
jg
add
aam
cld
sub
sbb
add
ret
push
pop
ja
roll
xchg
sub
lock
jbe
aas
fidivrs
cmp
jae
sub
lock
je
add
jb
pop
pop
fnstenv
and
xor
out
mov
aas
xchg
mov
add
or
cmp
push
push
push
hlt
nop
pop
and
and
rolb
cs
ljmp
adcl
test
out
mov
jg
clc
adcb
hlt
push
pop
mov
jp
add
mov
or
mov
outsb
xor
fwait
or
or
or
das
mov
out
fimull
js
outsl
push
push
push
insl
adc
sahf
lret
sbb
push
inc
mov
pop
sti
jecxz
push
cmp
mov
in
push
add
sbb
cmp
jecxz
adc
cld
call
dec
add
inc
fs
sub
outsl
or
mov
sbb
sbb
rcrl
arpl
push
pop
adc
adcb
mov
push
negl
sbb
jmp
pop
ror
jg
roll
mov
dec
or
push
add
sbb
in
loopne
incb
and
cmpsb
sbb
or
sub
and
ret
sbb
ret
aaa
insb
cld
repnz
addr16
push
pop
iret
pop
add
adc
pop
rorl
pop
pop
pop
rolb
inc
or
add
inc
lock
cmp
fndisi(8087
inc
js
add
sub
add
loope
push
jae
inc
hlt
fwait
push
cld
roll
sub
pop
xchg
add
push
dec
push
jmp
sub
outsb
push
mov
mov
push
loopne
fcomps
mov
jb
add
push
sbbb
cmp
jge
mov
scas
add
or
dec
adc
adc
test
lea
mov
add
repz
iret
test
push
push
mov
outsl
loop
sub
dec
mov
daa
lock
adc
lods
jle
pop
hlt
push
push
fwait
xor
inc
shll
mov
cmp
jle
pop
push
clc
inc
inc
add
or
clc
pop
fdiv
jmp
ret
add
mov
add
es
ret
mov
inc
xor
pop
shrb
add
fisubl
cltd
inc
or
fadds
outsb
pop
lock
jl
enter
or
inc
lcall
ds
sbb
xor
pop
dec
pop
call
jmp
gs
push
mov
repnz
mov
pop
out
clc
or
clc
out
pushf
dec
push
cmp
ja
ficoms
sub
sbb
pop
xchg
jmp
push
add
daa
sbb
in
push
mov
sub
inc
aaa
les
cld
je
cmpl
or
outsb
lock
jl
mov
push
jne
push
push
sub
enter
sahf
xchg
mov
push
hlt
push
push
push
lcall
jg
test
stos
je
xor
fstpt
lock
rcrb
dec
dec
push
mov
mov
ljmp
daa
jl,pn
cmp
jne
decb
cmp
add
dec
add
adc
push
loopne
je
push
loope
outsl
or
inc
push
add
rcrb
mov
dec
adc
lcall
cmp
mov
push
or
mov
pop
iret
sbb
mov
adc
adc
mov
je
push
xchg
mov
addl
cmpsb
mov
popf
in
adc
jmp
xor
sbb
pop
out
divps
sub
mov
fbstp
vfmaddsubpd
cmc
mov
add
pusha
push
cmp
je
push
inc
addr16
add
decb
ds
pop
push
or
adc
pushl
mov
jns
xor
mov
inc
repnz
adc
fs
dec
leave
or
orl
mov
pusha
icebp
int3
andl
stos
and
add
inc
rolb
aas
mov
clc
add
fchs
inc
repnz
cmp
xchg
mov
push
inc
cld
cmp
scas
xchg
incb
orl
mov
insb
cmp
cmp
mov
sub
push
aas
hlt
loopne,pn
iret
adc
fcomi
add
ret
sbb
add
jno
push
adc
xchg
ss
cmp
jp
cmp
test
sub
push
pusha
ds
sub
mov
fildll
rclb
adc
sbb
mov
jmp
mov
in
das
divb
js
inc
add
pop
je
push
dec
stos
jecxz
sbb
push
mov
sbbb
sub
jmp
xor
xor
outsb
pop
xchg
add
sbb
inc
xchg
addb
mov
andl
pop
pushf
add
cmc
jae
fdivrs
pop
pop
jl
mov
jg
sbb
add
push
or
cmp
ja
add
jmp
nop
ds
add
push
push
add
push
or
inc
pop
ret
repz
sti
lods
cmp
je
test
pop
into
aaa
mov
inc
in
adcl
sub
testb
call
add
std
inc
inc
add
pusha
adc
and
xchg
push
xchg
add
movsl
popf
mov
mov
cs
cld
out
pop
xor
or
pop
pushl
int3
or
lock
daa
jno
jmp
sub
and
pop
cmpsb
xor
cmp
andl
xor
aas
mov
pop
push
movsb
pop
mov
or
test
sar
xchg
adc
into
xchg
dec
in
cli
inc
jg
mov
stos
push
push
mov
cli
add
shlb
das
in
push
repnz
add
out
rcl
loopne
jne
sub
pop
out
adcb
cmp
insb
mov
cmp
add
cmp
pop
mov
pop
mov
cmp
dec
push
adc
mov
sbb
dec
es
push
and
jmp
mov
bound
inc
dec
inc
adc
shl
loope
mov
mov
dec
clc
or
idivb
and
xchg
imul
push
add
or
andl
cmp
mov
mov
in
sbb
cli
mov
or
out
cltd
xor
adc
pop
pop
mov
jecxz
pop
push
sarl
jle
ja
lret
jecxz
sarb
sbb
leave
xchg
inc
pop
ljmp
adc
aam
or
push
adc
sbbb
push
mov
ret
xor
pushf
inc
ret
pop
sub
jae
sbb
cmc
or
mov
push
push
adc
and
in
pop
mov
cmp
test
mov
inc
or
jo
jl
test
add
jns
sti
ja
xor
push
call
push
insb
sbb
in
jb
add
mov
pop
cmp
or
mov
jmp
sub
jne
pop
push
push
jl
mov
movb
ret
mov
jmp
outsb
js
and
push
cmpl
test
inc
xchg
sbb
push
add
adc
lods
cld
add
cmp
je
inc
cmpl
pop
dec
addr16
jbe
push
or
dec
jbe
prefetch
pop
mov
adc
inc
ror
cmp
je
push
push
mov
jmp
inc
ret
mov
lods
push
into
rorb
imul
add
mov
adc
mov
or
in
insb
scas
test
mov
arpl
jle
loop
lea
push
clc
hlt
push
push
pusha
cld
test
loope
xchg
and
sti
outsb
cmp
les
mov
jmp
not
and
sti
add
out
add
push
cmp
jne
xchg
pop
out
xor
mov
hlt
ficompl
inc
cmpsb
ret
mov
loopne
ficomps
inc
push
loope
out
fs
mov
lret
mov
addb
jmp
sub
mov
mov
call
mov
xchg
add
or
add
mov
roll
push
inc
fidivl
mov
lods
pop
pop
push
je
or
cmpb
mov
push
pushf
add
ret
fiadds
adc
push
andl
inc
clc
mov
mov
and
std
jbe
fidivrs
push
pop
xchg
and
cmpsl
sub
rcll
shll
sar
sbb
lock
je
sub
je
mov
or
mov
pusha
jne
cmp
add
inc
push
and
pusha
testl
and
push
mov
push
push
cmp
pop
xchg
ret
jmp
push
ja
pusha
add
pop
dec
adcl
pop
or
test
andl
popa
adc
pop
pushf
cmp
imull
mov
or
jg
xchg
iret
xchg
icebp
add
jmp
cmp
jne
cld
sub
pop
setl
xor
sbb
nop
jecxz
je
sub
lcall
fyl2x
sarl
inc
call
movzwl
outsb
add
push
fidivrs
add
xor
push
push
sub
mov
and
jb
and
jno
cwtl
mov
push
aas
jp
lea
jmp
inc
jb
cltd
mov
push
js
ret
cmp
jo
add
jo
das
je
or
adc
pop
mov
jns
popf
push
in
fisttps
adc
lret
or
pop
cmp
bound
ret
bound
rorl
or
sub
pop
fiaddl
out
cmp
add
ret
cmpsw
fimull
sbb
or
fisttpll
jmp
and
dec
js
nopl
inc
shll
out
ljmp
push
pushf
push
mov
cltd
cmpsl
insb
aaa
mov
inc
bound
icebp
adc
mov
mov
and
cmp
cmpsb
adc
fidivs
ja
pushf
jo
inc
sub
mov
loopne
pop
cmpsl
ret
cmpl
test
xlat
in
iret
cmp
pop
das
jb
sbb
push
insl
stos
lahf
inc
push
mov
scas
scas
fsub
xchg
notl
push
and
xor
repnz
and
jo
xor
cltd
repz
mov
ljmp
fwait
sahf
xchg
addr16
hlt
mov
push
dec
enter
fiaddl
mov
stos
rolb
cli
in
or
dec
xchg
push
in
test
les
nop
push
xchg
push
aas
test
dec
inc
mov
aad
sbb
jno
pop
push
es
inc
sarb
and
xchg
cmpsb
mov
xor
sub
cmpsl
mov
fmuls
pop
rorb
loope
pushf
in
mov
idivb
ds
daa
rcrl
addr16
cmpsl
pop
in
mov
shlb
subl
adc
jmp
loopne
and
cmp
sub
shll
pushl
fnstcw
scas
and
mov
in
xchg
int3
test
sub
mov
imul
rorb
out
jmp
push
sbb
mull
lea
dec
in
adc
dec
test
addr16
cmpsb
aad
fistpl
data16
loope
jecxz
jp
outsl
sub
adc
or
test
negb
adcl
add
dec
aad
movb
push
in
add
and
sbb
ret
and
xor
cwtl
popf
enter
dec
int3
hlt
jns
iret
movsl
mov
clc
mov
fistps
dec
mov
pop
pushf
mov
mov
fucomi
cmp
push
outsl
pop
cld
mov
test
and
lods
cld
and
jle
pushl
loop
insb
in
daa
xchg
or
add
jge
ficompl
lock
mov
mov
faddl
aad
cs
or
or
pushl
icebp
pop
sub
push
inc
in
pop
jl
and
out
jo
jge
jle
or
lock
movsb
rolb
pop
xchg
es
mov
jo
jp
pop
xchg
xor
loopne
push
and
jle
loope
lock
out
sub
test
lock
or
je
add
mov
ljmp
fdivrs
filds
lea
push
and
call
mov
adc
outsl
xchg
mov
sub
sbb
mov
mov
push
in
nop
mov
mov
imul
cs
xor
pop
dec
mov
addb
je
xchg
pushf
pop
pop
push
xchg
popa
adc
mov
cmc
cmp
popa
jne
add
ds
cmp
sbb
dec
add
cmpsl
xor
in
sti
xor
mov
inc
xchg
push
push
pushf
sbb
mov
inc
cwtl
js
jle
ljmp
cld
aas
dec
xor
and
xchg
cmp
jne
mov
or
and
jb
mov
shll
mov
rsm
and
sbb
jns
push
mov
and
jno
add
sub
les
dec
adc
dec
push
mov
sarb
test
setp
cmc
push
push
aam
jb
pusha
fs
insb
mov
rorb
call
ret
negl
mov
push
push
xlat
in
lahf
hlt
and
push
cs
sub
scas
ds
mov
push
or
shlb
loope
jbe
mov
adc
add
pop
xor
ss
dec
mov
mov
daa
push
push
push
jae
dec
lock
dec
aaa
pop
mov
cs
xchg
aad
and
aam
fstpl
and
cmp
cmp
call
inc
mov
add
addl
mov
mov
push
incb
dec
push
push
push
add
push
ds
dec
rclb
mov
jmp
int3
or
fcmovb
or
adc
lock
or
ss
push
xchg
and
insl
aam
and
insl
add
inc
add
or
or
test
test
mov
pusha
sahf
mov
je
rcll
or
fcompl
sbb
testl
dec
dec
cmp
and
jb
or
hlt
ds
lahf
shlb
xor
add
sub
and
scas
sbb
or
dec
inc
mov
pop
xchg
lea
pop
inc
push
mov
inc
inc
lods
xor
fbld
jp
inc
or
movsl
jge
jbe
mov
lea
imul
rolb
movsb
jo
jg
sub
and
cmpsl
movsb
lea
and
dec
push
pop
daa
cmpsl
pusha
lock
xor
xchg
adc
xorb
lret
cmp
push
push
pushl
mov
jo
in
jge
shlb
add
fucom
sub
insb
push
cmp
jne
mov
fadd
add
mov
mov
in
mov
mov
dec
inc
je
dec
je
add
add
sbb
dec
jne
push
dec
es
movsb
adc
add
orb
add
add
jne
aaa
mov
das
push
je
jbe
cmp
jecxz
or
test
jne
mov
pop
leave
daa
inc
imul
jns
or
push
inc
ret
inc
adc
gs
adc
arpl
jo
or
xlat
shlb
cld
xor
leave
ret
cld
sahf
cmc
out
int3
mov
or
pop
movsl
jae
and
and
mov
adc
adc
inc
cwtl
fchs
adc
orb
jno
fisttpll
fistpll
sub
out
clc
mov
imul
push
mov
adc
dec
push
dec
in
loopne
rcrl
xchg
or
gs
mov
lods
pop
fdivl
in
cmp
adc
les
dec
jno
es
decb
sbb
push
cmp
push
sub
xchg
mov
in
pop
cmp
xlat
push
ret
jo
mov
dec
or
xor
clc
loopne
pop
hlt
jecxz
mov
dec
add
adc
rorl
adc
data16
sub
sub
clc
mov
mov
rcrl
call
nop
sub
push
ja
std
scas
cmp
push
pop
mov
rorb
jmp
test
hlt
jecxz
add
or
xor
or
mov
and
pop
lcall
call
nop
push
pop
sub
or
sub
dec
sbb
js
mov
test
popa
push
sbb
mov
icebp
addr16
adc
xor
mov
cmp
push
or
sbb
adc
pop
movsl
repz
cltd
inc
scas
push
add
pop
jbe
dec
rcrl
pop
aaa
mov
inc
inc
loope
ja
cmc
loopne
aaa
test
lcall
adcb
mov
lock
aad
sbb
dec
scas
and
incl
test
clc
je
mov
add
cld
dec
cmp
iret
jbe
dec
jmp
loopne
pushl
ret
cmp
and
pop
jmp
mov
mov
cli
push
imul
jmp
and
jmp
push
sub
scas
fsubs
lock
cmp
ja
pushf
add
sub
xor
dec
pop
es
inc
mov
pusha
push
adc
add
pop
pop
jne
xor
xchg
inc
xor
add
jbe
cmpb
add
adc
dec
cltd
adc
xor
mov
cli
cld
and
in
mov
lahf
adc
push
flds
or
pop
push
mov
data16
hlt
mov
sub
sbb
jae
ret
jmp
and
mov
das
adc
jo
test
and
cmpl
ret
in
jne
mov
add
adc
scas
out
fwait
adc
pop
sbb
pop
push
push
add
lods
inc
pop
ja
push
push
push
fidivrs
sbb
add
ljmp
les
fs
shr
sbb
add
cld
cld
xor
inc
dec
jp
iret
push
hlt
loope
leave
fisttpl
add
mov
js
dec
xchg
int
push
repnz
mov
dec
pushf
sbb
orl
or
cs
mov
lods
or
push
hlt
xor
or
pop
push
je
or
push
mov
bound
insw
mov
cltd
in
clc
mov
jp
les
imul
jo
outsl
inc
push
xchg
jbe
jbe
and
jno
pop
notl
jecxz
rcrl
add
inc
icebp
inc
decl
sub
jle
jne
push
les
dec
cmpsb
or
inc
adc
sbb
push
dec
push
dec
dec
pop
add
mov
int3
pop
icebp
std
inc
mov
mov
sbb
cmp
pop
jp
je
dec
je
jo
xchg
mov
or
sbb
add
xor
inc
jl
xor
shr
add
ja
pop
sub
fdivs
pushl
pop
push
out
add
sahf
push
lea
jne
xchg
mov
pop
cltd
jge
push
jmp
lret
ret
add
cmpsb
lods
mov
jns
xor
pop
das
and
sbb
dec
and
jmp
xchg
mov
pop
das
orl
jbe
lea
push
jl
adcl
fdivrs
cmp
dec
bound
mov
test
movsl
sub
add
and
adc
cmp
daa
cmp
add
pop
xor
mov
inc
push
pop
jo
push
sbb
bnd
mov
sub
jns
fucomi
or
pop
loopne
jb
xchg
pop
xor
mov
inc
clc
pop
inc
fsubs
sti
push
add
push
jg
cmp
imul
aam
inc
lea
cmp
subb
popf
inc
ficoml
cltd
push
mov
jp
mov
xchg
ja
shrl
cmp
jae
mov
ficoms
jo
pusha
fimuls
jle
bound
gs
cmc
push
ret
inc
unpcklps
add
mov
jmp
mov
push
mov
mov
xchg
push
jo
add
push
xor
jbe
mov
fistl
cmp
inc
cmp
lock
outsb
lea
out
inc
cmp
loope
loop
jb
test
adc
jae
or
pop
mov
iret
lahf
aaa
sti
aaa
adc
mov
rorl
cmp
ja
cmp
je
cmpb
sbb
sub
aad
test
sahf
adc
push
push
sarb
mov
push
lods
push
cmp
or
fiaddl
xchg
xchg
loopne
mov
xchg
cli
cld
sub
push
xchg
call
push
push
and
inc
xor
loopne
mulb
mov
inc
dec
inc
jb
addl
outsl
adc
rolb
lcall
stc
or
inc
dec
call
sbb
mov
imul
cwtl
ret
pop
cmp
adc
addb
cmp
sub
cmp
pop
adc
sub
jecxz
hlt
fs
popf
dec
inc
xor
fsincos
xchg
or
out
inc
and
movl
cltd
mov
lea
jns
in
cmp
sbb
call
jae
dec
inc
xor
outsl
push
push
pop
loop
cs
lcall
les
mov
sub
flds
or
push
mov
and
outsb
xor
push
push
mov
cmp
mov
mov
lock
dec
addl
cmp
adc
fdivrs
out
ret
in
push
sbb
inc
inc
or
inc
or
test
pusha
sbb
pushf
mov
ret
push
mov
inc
inc
xchg
mov
push
pushf
inc
jo
mov
push
sahf
push
test
push
sub
push
insl
sub
or
or
push
or
cmpsl
mov
mov
inc
push
sbb
jbe
call
and
and
rclb
inc
mov
xor
fisubs
mov
lods
or
lods
xchg
sbb
cmp
sbb
xor
push
roll
js
dec
dec
adc
adc
sbb
sbb
xor
dec
shll
sub
inc
popf
adcl
int3
mov
fidivs
call
shl
sub
pop
test
jl
cmpb
not
sbb
hlt
mov
adcb
ret
add
mov
insb
pusha
push
pop
lret
inc
or
fistpll
jno
adc
jne
sbb
lea
cmp
jne
xor
rcrb
inc
push
call
dec
dec
aam
push
jo
mov
cmpsl
push
or
sbb
sbb
mov
lret
clc
ud1
inc
adc
or
add
jb
add
jl
dec
popf
sbb
loop
cmpsl
fadd
adc
xor
mov
dec
mov
and
inc
xchg
xchg
mov
lock
ret
hlt
push
fistl
cli
cmp
inc
or
lahf
loope
inc
and
pop
lahf
add
mov
cmp
jle
xor
jne
mov
cmp
je
xor
pop
shl
push
adcl
fimuls
add
mov
adcb
hlt
loopne
add
inc
or
lods
imul
in
mov
in
icebp
add
mov
stos
push
lahf
movsl
lahf
fs
dec
andb
decb
test
sahf
mov
shl
push
pop
sbb
inc
loop
mov
and
mov
add
add
and
cs
repnz
lods
or
jge
mov
adc
jge
test
sbb
ficomps
idivb
rclb
xor
push
push
stos
enter
out
movsb
daa
lea
popf
xor
pop
mov
dec
adc
push
push
call
add
fmuls
jmp
push
jmp
pop
or
dec
test
cmpsb
mov
dec
je
dec
sbb
mov
outsl
or
sbb
sub
cmpsl
push
in
nop
stos
push
jnp
push
jo
enter
in
ja
imul
inc
jmp
push
pop
sub
repnz
inc
or
pop
fucomp
sub
rcr
jmp
add
pop
roll
add
and
mov
mov
adc
jbe
scas
aam
call
or
inc
into
push
mov
xchg
sti
lret
ficoml
stos
adc
fistpll
pop
jecxz
icebp
jmp
inc
or
or
rcrb
mov
clc
mov
sbb
pushl
xor
cld
fbstp
jmp
cld
lret
sbb
fnsave
pop
das
mov
jle
mov
sbb
pusha
jnp
lds
push
xor
dec
cld
push
loopne
cmp
or
in
int
push
mov
mov
adc
push
loope
in
adc
push
addr16
add
xor
sbb
or
pushf
dec
sbb
out
xchg
aaa
rcr
mov
je
push
pop
or
ret
mov
push
lcall
sub
xchg
or
xchg
call
jle
inc
or
inc
pop
cwtl
xorl
js
nop
sbb
lods
jnp
cmpsb
mov
fstps
inc
jo
cltd
pop
imul
repnz
std
pop
inc
inc
mov
jmp
std
clc
mov
mov
sub
xchg
loopne
mov
ja
cmp
stos
jns
dec
lods
data16
ds
adc
pop
and
cmp
mov
add
pop
cmc
cmp
popf
lock
rcrb
mov
mov
dec
push
cmp
rep
mov
sub
inc
xchg
aas
lods
add
hlt
mov
scas
insb
shlb
jae
loope
mov
cmp
inc
push
dec
cmp
inc
push
cmp
mov
fsts
stos
push
divb
inc
enter
push
xor
mov
add
mov
cmp
lcall
lods
aaa
adc
pop
pop
mov
shr
or
add
cmp
push
jmp
jne
push
cmp
fidivrs
cmp
jne
jmp
mov
jmp
pushf
les
out
insl
pop
mov
or
jne
lock
xor
or
add
or
sbb
push
dec
jp
les
jo
adcl
inc
push
stos
lea
sub
pop
push
xor
mov
sbb
jp
dec
sub
ror
add
or
cmp
in
and
lds
xchg
out
push
xor
cwtl
ret
push
or
push
mov
push
shrb
roll
add
mov
cmp
or
insl
cmp
sbb
add
je
aaa
loop
and
push
adc
mov
shrl
loope
mov
int
and
addr16
loopne
int3
iret
ret
push
bound
inc
out
cmp
adc
and
imul
jg
mov
out
out
icebp
mov
and
imul
push
fsubrs
lock
inc
ucomiss
push
sahf
out
dec
sub
sub
xor
dec
aam
cmp
aam
and
cmp
mul
mov
push
stc
insb
imul
cmp
mov
mov
push
cmp
cmpsb
mov
push
push
push
pop
push
pop
sbb
sbb
pop
loopne
dec
faddl
sbb
or
mov
pop
insl
sbb
stos
sub
jle
add
push
imul
loopne
xor
movsb
pop
push
mov
pop
pop
push
add
stc
and
lock
inc
aam
jecxz
lret
add
shr
fadd
mov
outsb
cwtl
xchg
jmp
nop
mov
add
push
push
jno
out
and
push
push
scas
sbb
push
jecxz
add
or
jp
push
rorb
pop
xchg
jne
push
mov
and
test
movsl
or
pop
pushl
les
inc
divl
leave
add
sbbb
jmp
and
xor
mov
or
sub
pop
leave
mov
push
or
gs
mov
and
pop
push
xor
and
int3
jle
dec
inc
cli
push
add
pushf
ret
lock
jge
loopne
cmp
add
sub
pop
lods
call
outsl
imul
test
or
or
jbe
adc
mov
add
lea
out
nop
mov
cmp
add
imul
add
add
loope
add
and
or
dec
sti
pop
imul
andl
and
es
sbb
mov
dec
in
mov
rolb
xor
lods
cltd
rolb
bound
push
stos
pop
fsub
dec
inc
push
in
movl
popf
add
sbb
jbe
js
pusha
mov
sub
fwait
push
xor
cmp
pusha
and
add
and
call
lret
in
dec
xchg
je
adc
adc
hlt
xor
sahf
call
xchg
pop
enter
sbb
and
push
aas
insl
cli
cmp
jmp
mov
jp
cmp
in
je
cmc
mov
das
push
pop
inc
sbb
dec
xor
cmp
mov
sub
addr16
push
stos
jb
shufps
shll
mov
orl
push
dec
pushl
inc
insb
subl
mov
and
dec
dec
mov
loop
dec
xchg
mov
jecxz
fidivs
mov
inc
push
jo
xchg
les
sub
lods
push
push
mov
js
shlb
mulb
sbb
clc
jecxz
iret
mov
ljmp
gs
shrd
or
dec
pop
adc
sub
xor
inc
jne
or
mov
in
fs
mov
mov
add
jge
lods
xchg
push
enter
push
lock
mov
inc
fcoms
test
repz
psrlq
sbb
jmp
cmp
fidivrl
inc
inc
dec
dec
pop
call
pop
mov
mov
jecxz
insb
and
jle
nop
push
jb
pop
mov
xchg
cs
lret
in
pushf
mov
mov
mov
mov
lret
in
mov
mov
in
in
lock
jb
clc
cld
add
mov
or
adc
lret
in
sbb
and
jb
pop
cs
xor
cs
lret
in
inc
inc
dec
dec
in
mov
pop
pop
cs
lret
pusha
fs
jb
je
jl
jmp
and
push
leave
imul
loopne
and
cmpsb
add
or
insb
xlat
aaa
mov
fmull
inc
movsb
jb
in
test
and
mov
pop
xor
inc
cmp
xor
andb
push
mov
mov
mov
enter
or
adc
adc
or
inc
adc
or
mov
pop
lcall
add
jge
hlt
inc
mov
lods
je
xor
loopne
pop
mov
jecxz
and
icebp
cmpsb
add
sti
lret
iret
je
sbb
jmp
mov
inc
sahf
sbb
mov
dec
add
mov
adc
add
push
mov
sbbl
push
inc
lods
push
push
push
rolb
imull
pop
add
adc
mov
mov
shl
xor
xchg
idivl
dec
jle
les
or
and
loope
bswap
cmpsb
fisttps
imul
jo
cwtl
test
xorb
pop
mov
int3
jmp
mov
or
dec
leave
ret
gs
inc
jbe
sbb
enter
lds
dec
dec
outsl
imul
cmpb
pop
sbb
add
fmuls
std
xor
fs
cmp
adc
dec
cmc
out
stc
rolb
cmp
outsb
outsb
sti
or
sbb
jmp
aam
adc
add
mov
popf
ljmp
pop
movsl
sahf
xor
clc
and
idiv
push
fistpll
or
lock
xor
cmp
and
sbb
clc
add
sub
xchg
jmp
in
push
mov
and
cmp
cmp
mov
push
sbb
sbb
push
notb
push
test
mov
aaa
icebp
pop
push
sbb
mov
mov
es
push
add
push
shll
cwtl
das
xor
out
inc
add
adc
adc
push
cmp
jne
cmp
push
inc
dec
jle
pop
js
int3
ret
sar
js
movsl
lock
or
sahf
fwait
sub
fwait
xor
mov
testb
jne
jle
je
loopne
add
add
push
ja
orl
imul
add
xor
xchg
loopne
out
ja
pop
push
jmp
lea
pop
mov
jl
push
and
add
ljmp
or
out
sbb
xchg
loopne
movsb
test
je
sub
stos
push
push
lcall
add
inc
mov
dec
test
aaa
pop
jmp
mov
push
jo
fdivs
aaa
push
xor
jmp
jle
jp
movsb
cmc
sbb
mov
and
and
xor
mov
add
sbb
cmpsb
or
aad
push
mov
sub
jp
pop
sbb
jne
jecxz
js
lret
cmp
jge
mov
pop
mov
rorb
or
push
repnz
sub
jmp
adc
xlat
orb
icebp
xchg
lock
leave
inc
jb
cwtl
and
and
out
pop
nop
adc
adc
push
call
sbb
cs
xor
inc
push
or
and
dec
fldenv
sti
fistps
or
cld
or
add
cmpb
sahf
sub
sti
push
mov
mov
movsb
ds
push
push
arpl
push
mov
inc
pop
add
cmp
jge
data16
pop
jbe
add
je
mov
jle
es
add
into
inc
adc
mov
mov
jl
push
jl
mov
loopne
into
xor
cmp
loopne
push
add
sub
fcom
clc
mov
clc
add
push
push
std
fstl
xor
inc
test
mov
xchg
push
push
jno
dec
fldt
push
push
dec
shlb
and
sub
roll
rol
loop
push
mov
add
mov
sbb
fstps
jl
lea
adc
mov
mov
add
or
lcall
addb
loop
data16
xchg
add
nop
push
fmull
mov
mov
jp
cmpsb
dec
pop
adc
push
popa
add
fnstenv
shlb
cmp
jnp
mov
les
loopne
mov
mov
sub
push
andl
inc
nop
loopne
loopne
mov
and
jmp
push
dec
jecxz
pusha
dec
shrl
or
fs
call
inc
xchg
arpl
mov
push
xlat
lods
inc
or
repnz
ffreep
popf
inc
setae
mov
xor
inc
cmp
mov
aad
je
ja
sub
popa
add
loop
inc
adc
or
add
cmp
xor
push
mov
jmp
add
xor
fistl
scas
sbb
lcall
and
inc
push
push
adc
lods
or
fdivs
add
mov
inc
or
sbb
cmp
outsl
sahf
fadds
jo
or
fmull
lcall
aad
adc
push
dec
push
in
jecxz
sbb
dec
cmpsb
das
pop
adc
ss
mov
rclb
cmp
xlat
je,pt
add
jb
inc
lret
or
movsl
scas
in
jae
adc
ljmp
pop
lret
pop
cmp
sbb
cmp
mov
test
icebp
xchg
adc
jne
loope
jne
push
push
xor
ret
inc
enter
dec
adc
aam
or
rolb
pop
jl
js
repz
or
or
push
mov
jmp
sub
clc
bound
push
or
std
add
add
fildll
lret
inc
or
ret
divl
dec
sub
adc
sarb
inc
pusha
add
ds
or
outsl
inc
ret
cmp
ja
sub
aam
mov
adc
jne
icebp
add
and
fdivs
jb
popl
fadds
outsb
jb
popf
add
mov
gs
cld
jb
push
mov
popf
add
sub
pop
push
adc
test
ss
xor
call
test
mov
dec
ret
outsl
add
sub
cmp
je
int
mov
ret
call
fimull
hlt
iret
movsb
add
mov
push
jne
push
xchg
divl
pop
xor
call
jmp
and
mov
add
sbb
shlb
jb
push
cmp
cmp
xor
push
sti
push
test
sub
jo
mov
cmc
cmp
jae
sbb
sbb
cmp
scas
and
push
mov
sub
push
sti
ja
sub
mov
push
inc
lea
popa
dec
in
and
iret
sahf
out
addl
cld
mov
push
xchg
or
aaa
jbe
sbb
in
aas
pop
into
jb
out
add
mov
jmp
into
xlat
loop
or
xor
dec
ret
push
in
push
bound
dec
cmp
hlt
jns
bound
not
test
cmp
inc
pop
add
imul
push
or
adc
enter
xorl
jg
jnp
pop
les
pop
sti
xchg
push
jg
shl
add
shll
rorl
jns
inc
fiadds
add
cs
sbb
push
pop
repnz
and
dec
pusha
xchg
mov
loope
mov
push
pop
adc
xor
dec
ljmp
mov
cmp
dec
std
aaa
loope
xlat
cmp
mov
lea
in
jp
movzwl
push
fistpl
xorb
and
jne
sub
mov
sub
ja
mov
xchg
add
jnp
xor
or
or
xchg
aam
adc
mov
push
dec
xchg
xor
stos
outsl
fdivrp
out
dec
clc
popa
call
loope
cmc
mov
mov
fcmovnu
cmp
out
pop
ljmp
es
add
push
pop
and
sbb
adc
rcpps
mov
jmp
imul
and
jae
pop
inc
mov
jmp
push
setne
xor
sub
dec
mov
icebp
xor
mov
data16
je
pushf
jbe
mov
scas
lds
pop
dec
stc
ss
cmp
push
clc
add
ja
es
leave
mov
or
xchg
fadds
push
jl
sbbl
mov
xor
xchg
add
inc
mov
popa
cli
enter
add
add
and
or
das
cmpb
jg
add
imul
inc
or
sarb
adc
mov
outsb
add
xchg
ret
push
aam
test
in
mov
mov
sbb
mov
adc
cmpsl
in
int3
xchg
sub
outsl
mov
xor
adc
cwtl
sarl
sbb
or
outsb
cmp
mov
push
jbe
jmp
adcl
jle
shr
push
movsb
outsl
mov
insb
mov
ret
inc
fdivs
inc
pop
popa
push
mov
imulb
add
adc
mov
rclb
xchg
inc
rclb
aas
push
push
test
mov
xchg
divb
push
clc
mov
add
test
dec
push
xchg
cmp
cmp
add
add
cmc
daa
jnp
lcall
iret
jl
sbb
jo
add
loop
jge
adc
pop
and
mov
sub
orl
pop
xor
icebp
sysenter
inc
hlt
stos
call
cmp
mov
hlt
add
add
push
pop
cmpsl
mov
incl
dec
pop
cld
pop
mov
fnstenv
sub
je
jns
push
adc
add
popf
lret
mov
jmp
lods
arpl
inc
cmp
rol
jmp
cmp
and
xor
cmp
je
mov
ret
inc
push
push
dec
pushf
ret
test
and
mov
pop
lea
mov
imul
sub
lock
sti
xor
push
add
fnsave
mov
mov
jne
call
mov
or
cmp
fwait
imul
js
cmp
mov
add
push
sbb
mov
sbb
lods
push
dec
jle
test
xor
jecxz
std
and
xor
in
push
out
pop
movsb
add
cmpsl
mov
popa
sbbb
pop
inc
dec
add
movsb
jp
outsl
and
fcomps
jae
cmpsl
or
orl
or
pop
xchg
or
pop
xor
js
adc
je
hlt
or
inc
push
je
cmp
insb
add
call
jmp
outsb
adc
push
push
insl
push
aad
ja
adcb
jnp
lret
xor
pop
scas
inc
push
pop
push
sbb
pop
insb
sbb
sub
mov
push
mov
xchg
lods
mov
stos
push
and
pop
adc
jbe
shrl
ja
lret
sub
dec
jnp
enter
and
or
or
cmp
adc
and
xchg
loopne
mov
je
sub
or
cwtl
and
sub
sbb
cmc
pop
shrb
and
and
inc
adc
int3
sbb
xchg
jb
decb
jne
adc
push
loopne
adc
push
jo
sub
lret
jno
call
enter
nop
cmp
jmp
lahf
mov
push
xor
bound
fisubs
fs
xor
jb
cmpsl
adc
or
sub
pushl
pop
push
jno
inc
pop
pop
loope
mov
sbb
cmp
inc
cmp
je
out
fisubs
and
fldenv
jnp
jecxz
or
sbb
inc
loope
frstor
ja
loope
push
pop
jl
cmp
jne
je
mov
jg
inc
test
jb
cmp
push
dec
pop
push
fdivrp
inc
add
mov
xchg
jb
dec
jle
movl
icebp
loopne
movsl
mov
pop
fbstp
push
std
pop
out
andl
fisttpll
pop
daa
push
adc
and
sbbl
dec
sub
incl
inc
jmp
lcall
aas
cmp
sub
push
mov
push
jg
push
lahf
pop
and
mov
and
lock
stos
sbb
sahf
jae
orb
ficomps
js
push
cmpsb
sbb
rorl
push
jmp
insb
movsb
je
xchg
pop
addl
es
roll
roll
xchg
mov
cmc
push
and
call
int
mov
jle
push
mov
add
loop
jbe
rclb
scas
pusha
test
adc
mov
push
fwait
ja
or
xor
add
mov
inc
inc
dec
or
mov
push
les
int
jl
xchg
ret
es
xchg
ja
xchg
mov
adcb
hlt
stos
bnd
and
fs
push
mov
jmp
xchg
ja
and
test
add
mov
pop
cmpsl
imul
lock
pop
sbb
xchg
ret
cmp
into
in
jmp
cmp
scas
pusha
fdivrp
or
xacquire
or
pop
jne
bound
repz
repz
orl
push
xchg
sbb
sbb
fldenv
jne
lea
subl
sub
cmp
mov
add
push
lock
mov
push
gs
cltd
hlt
pop
test
mov
dec
sub
sub
jmp
mov
push
mov
arpl
sub
das
adc
ret
cmc
inc
fidivs
and
sub
inc
inc
xchg
movsl
inc
mov
or
dec
movl
pop
enter
hlt
mov
sbb
test
pop
mov
shr
jp
sbb
sarb
aaa
add
jmp
test
or
adc
js
aam
popf
sahf
ror
mov
das
xchg
xchg
ljmp
pushf
add
lret
movsb
or
mov
fmull
jo
and
sbb
inc
outsl
adc
adc
and
dec
jnp
iret
je
and
add
aad
dec
rcll
or
sbb
pushf
movsl
push
dec
mov
push
lret
rolb
sub
push
das
adc
or
mov
fwait
pop
xorb
add
add
mov
or
sbb
xchg
adc
push
add
xchg
sbb
sub
cmpsb
xchg
sbb
or
negb
inc
push
outsb
cmp
dec
pop
les
jmp
je
jle
jno
inc
lock
neg
sbb
and
add
or
test
ret
jmp
pop
adc
adc
icebp
je
cmp
sub
sarb
and
adc
es
dec
pop
push
push
push
jbe
mov
iret
adc
arpl
cmpb
inc
sbb
nop
sbb
jle
jne
pop
or
fadds
sub
or
fbstp
add
pop
cs
dec
xchg
xor
xlat
test
inc
sub
dec
sbb
hlt
push
repnz
lcall
fldl
sub
fsts
popf
ror
push
enter
sti
testb
jae
cmpsb
or
adcb
pop
mov
pop
pusha
and
sbb
fisttpl
movsl
xchg
flds
sub
mov
mov
fmuls
jle
popf
js
jle
cmp
jg
stc
and
clc
jg
or
pop
aas
lea
cltd
sub
lea
sar
clc
shl
pop
insl
ffree
shl
sub
cmp
jle
push
fmul
ds
loop
pop
xchg
aas
add
adc
frstor
push
cli
roll
test
inc
cmp
sub
add
movl
pushl
shl
inc
notw
mov
shll
mov
pop
pop
mov
or
fsubrl
rclb
test
push
mov
test
pop
nop
push
jo
add
mov
int
xchg
dec
loope
enter
xor
lods
stos
cs
push
cmp
sarl
cmp
add
mov
sbb
xor
bound
jbe
jns
xor
cmp
arpl
inc
add
punpcklbw
je
or
sbb
repnz
movl
add
mov
cmp
xor
jne
xlat
nop
loopne
mov
ud1
testb
xchg
fsubl
std
cmpl
mov
and
lea
or
bound
jne
insl
outsb
jg
mov
dec
pop
insl
outsl
leave
add
movb
jmp
push
or
mov
rorb
je
lea
dec
adc
jl
cmp
xor
in
inc
add
xlat
or
xor
scas
jne
sub
jmp
adc
js
les
ret
sbb
cli
cld
dec
jl
out
out
mov
fstpt
cs
push
into
push
xchg
add
dec
rol
mov
dec
outsb
in
cmp
daa
jp
mov
xor
push
xchg
sarl
in
mov
push
pop
xchg
ret
outsl
aaa
sub
sbbl
jae
mov
cmp
popf
push
inc
and
repnz
inc
jo
movsb
daa
or
push
pop
ja
add
clc
pop
add
fs
adc
int
add
mov
pop
and
cmc
mov
push
cmc
or
daa
mov
iret
pop
xlat
and
mov
push
add
xor
jns
inc
psubsw
add
add
in
adc
mov
push
clc
movsl
add
lock
xchg
cli
sbb
push
ljmp
push
gs
add
popa
test
push
mov
sbb
andl
aam
mov
or
cmp
lock
add
fsubs
data16
xchg
adc
ret
pop
cmp
cmp
jl
sbb
pop
push
je
push
push
rclb
insb
push
fwait
pop
arpl
addb
adcl
jo
insb
pop
in
or
in
add
jb
add
cltd
adc
add
mov
pop
mov
sbb
mov
mov
add
inc
and
or
bound
aas
pusha
or
pop
cmp
and
dec
pop
sbb
jo
mov
lea
shrb
outsb
clc
insl
and
nop
and
dec
test
adc
mov
scas
add
movsb
push
push
add
add
mov
mov
in
and
test
decl
dec
inc
inc
adc
mov
mov
dec
cs
adc
add
cmp
adc
cmc
or
je
roll
inc
sbb
cmpsl
lea
bound
sub
or
sub
mov
push
push
dec
add
sub
lock
push
cmp
cli
test
add
or
in
pusha
push
into
and
mov
or
mov
push
xchg
movsb
or
and
add
faddl
frstor
ja
ss
sete
addl
ret
sbb
xchg
xchg
movsb
aaa
rol
mov
sbb
add
pop
xor
sbb
add
push
hlt
xchg
push
push
mov
enter
add
sbb
and
adc
xchg
mov
js
cltd
jne
xchg
xchg
xchg
sub
push
pop
out
dec
xchg
mov
cmp
add
lahf
and
mov
das
mov
xchg
push
inc
pop
add
lds
aad
and
inc
std
push
or
add
push
jg
and
inc
jnp
shrl
xchg
jmp
adc
orl
repnz
push
or
push
cmpl
sbb
adc
add
sub
andl
movsl
insl
adc
clc
sub
shlb
mov
jbe
movb
xor
cmp
ja
push
lea
icebp
push
js
in
add
sub
ret
push
and
test
cmp
and
sbb
sbb
call
mov
sub
push
mov
mov
push
dec
cmp
stos
xor
outsl
jmp
icebp
inc
pop
xor
push
add
sub
cmc
push
dec
mov
popa
jmp
bnd
test
inc
mov
mov
daa
sahf
xor
adc
nop
clc
mov
dec
sti
jge
dec
jo
and
inc
push
cmpb
je
out
repz
js
je
mov
mov
lock
push
mov
ss
sub
test
jmp
push
push
fbstp
xor
cmp
push
cmpsl
adc
adc
test
popf
mov
fwait
xor
sub
js
jne
fstps
jecxz
jo
sbb
add
insl
or
push
mov
pop
jmp
mov
add
adc
cld
push
pop
push
adc
adc
and
loop
add
push
clc
xor
out
push
enter
or
push
sbb
flds
sbb
shlb
dec
call
loopne
mov
or
xchg
add
sti
xor
out
ret
mov
pop
mov
fdivs
adc
pusha
pusha
sub
inc
js
leave
movsl
fisttpll
fwait
push
inc
fadds
pop
mov
loopne
pusha
movsb
cmp
adc
xor
das
repnz
sahf
mulb
int3
jmp
inc
rol
lods
mov
fnstsw
pushf
sbb
adc
sbb
add
lret
adcl
adc
sub
add
adc
pushf
push
xor
xchg
loop
ss
cmpsl
lcall
cmc
lcall
cmp
pop
aam
jb
push
adc
outsb
and
push
push
das
cmp
jle
je
jno
cld
adc
lods
xchg
xchg
xchg
xchg
adc
sbb
sub
ss
fstl
or
mov
fsubl
pop
scas
js
movsl
add
je
js
test
push
xchg
sub
lahf
call
loopne
mov
mov
sub
or
sbb
cmpsb
jne
fmull
lret
dec
xchg
jo
mov
frstor
cmp
das
lcall
inc
jp
bswap
sbb
xchg
sar
sub
loopne
daa
leave
mov
repz
cmp
dec
out
xchg
jmp
lods
inc
or
add
mov
dec
add
orb
mov
dec
movsb
or
xor
cmp
ret
xchg
mov
and
orb
test
mov
adc
ficoms
or
pop
mov
movb
add
jmp
dec
ja
xlat
push
into
pop
out
ss
adc
adc
jmp
aas
je
push
es
sarb
xchg
jo
pop
pop
test
repz
dec
and
stos
inc
imul
xor
mov
std
mov
or
pushl
or
out
jmp
scas
mov
jecxz
inc
inc
out
sbb
xchg
or
and
mov
fcoms
movsl
or
loopne
or
cmp
dec
adc
sub
and
aam
xchg
popa
jno
adc
adc
test
add
mov
outsl
js
push
popf
sub
and
or
outsl
repnz
sbb
cmp
cs
sbb
pop
jmp
jge
adc
pop
aad
aam
xorl
in
pop
jbe
jp
loope
ja
add
sbb
std
iret
sbb
or
sbb
and
xchg
lods
pop
daa
mov
mov
pop
mov
mov
jge
xlat
adc
ja
jo
cmpsl
cmp
scas
jg
int3
cmc
and
or
pop
push
outsl
ret
loop
jmp
test
mulb
cmp
lods
sbb
push
mov
pandn
sub
bound
popa
jne
cmpsl
cltd
jnp
mov
scas
fcomip
mov
push
dec
ret
sub
inc
jns
adcl
xchg
cs
mov
dec
ds
movl
in
sub
inc
mov
or
test
in
loopne
scas
nop
xchg
mov
inc
add
inc
testl
or
or
out
push
leave
daa
add
call
icebp
inc
out
and
dec
dec
mov
lahf
mov
and
aam
sahf
fnstcw
sub
pop
pushl
push
cwtl
push
push
pop
data16
dec
or
je
push
cmp
outsl
jl
std
inc
mov
jb
notl
lret
jae
sbb
pop
push
fbstp
adc
call
lcall
xor
leave
pop
bound
xchg
sbb
jno
stc
dec
adc
adc
pop
adc
add
jp
or
xchg
fildl
inc
scas
les
enter
ja
andb
fcoml
mull
inc
fcoml
add
sub
int3
jo
jns
cmp
pop
jno
mov
pop
ja
pop
adc
stc
outsb
dec
test
lret
jne
push
pop
cmp
shrl
mov
pop
test
leave
loopne
inc
inc
pop
mov
seto
neg
or
adc
add
loope
push
push
mov
repz
inc
or
dec
cmp
aam
mov
shlb
add
or
rcll
dec
or
inc
adc
movsb
ljmp
cmp
adc
mov
push
pop
ljmp
push
into
fmuls
xchg
jmp
cmp
das
mov
orb
push
out
sbb
jno
xchg
and
mov
aaa
outsl
ja
xchg
adc
jl
push
mov
test
add
outsb
add
js
cmp
call
test
dec
clc
inc
or
add
dec
leave
and
pop
in
inc
neg
enter
or
js
rorb
int
add
xor
jmp
les
add
and
es
imul
adc
pop
sbb
jbe
or
xlat
clc
lcall
jb
fcos
cmpl
mov
div
inc
cmp
imul
lea
mov
cmp
inc
arpl
pop
mov
jno
pop
jp
sbb
add
ds
push
push
mov
dec
or
cmp
or
sbb
lods
cltd
push
push
adc
or
adc
sbb
jmp
imul
mov
in
outsl
xchg
pop
fcoml
ljmp
push
adc
lea
js
push
test
push
aam
inc
push
jl
adc
push
sahf
add
insb
add
mov
xchg
adc
or
lds
mov
mov
push
xor
fadd
add
ret
sbb
jge
mov
and
cmp
adc
xchg
call
sbb
rclb
and
cmc
pop
je
lods
pop
lret
cwtl
adc
pop
adc
gs
jge
sbb
push
loop,pn
stos
cld
add
enter
test
sub
jp
loope
je
pop
dec
int
push
stc
jmp
loopne
shlb
roll
sub
ret
lock
sub
xchg
lock
hlt
pushf
call
mov
jle
sbb
mov
sbb
mov
pusha
jg
sub
movb
jmp
push
dec
movsb
pop
loopne
mov
and
mov
mov
add
sbb
shlb
push
xchg
mov
adc
or
cmp
call
in
pop
adc
push
or
inc
hlt
ret
in
movsb
loopne
or
cs
or
ljmp
add
js
outsb
scas
and
jne
test
rcrb
push
mov
mov
or
enter
bnd
mov
int3
rorb
fdivrs
lea
sub
fadds
sarb
jno
mov
rclb
aaa
xor
ljmp
movl
xor
add
xor
adc
pop
cs
fsub
in
mov
push
push
mov
sbb
dec
pop
mov
jae
mov
mov
or
push
loopne
dec
jne
mov
add
loope
push
or
lret
ret
andl
xor
pop
adc
rorb
out
or
cli
call
jg
pop
stos
inc
jmp
xor
js
push
jge
jp
gs
cmpsb
mov
sub
aam
pop
jecxz
mov
jle
data16
jge
jp
push
xchg
and
adc
js
jl
lods
jb
or
jg
jnp
add
fs
enter
lea
and
push
cwtl
sbb
or
add
push
cmp
das
enter
dec
nop
mov
adc
jmp
inc
or
xlat
mov
lods
xchg
cld
mov
imul
add
stos
mov
add
sbb
mov
addl
mov
arpl
imul
call
cmp
sub
sbb
or
clc
orb
stc
sbb
test
xor
loopne
mov
adc
mov
cltd
mov
sbbl
movl
push
mov
inc
mov
push
sbb
adc
push
fstps
push
xchg
pusha
lret
sbb
push
je
sbb
cmc
push
lahf
xor
loopne
mov
neg
sbb
inc
orl
pop
or
roll
or
sahf
jns
add
and
jne
sbb
push
das
inc
test
adc
xchg
rclb
adc
xor
mov
xchg
leave
sbb
push
mov
jge
jo
mov
fdivrl
push
sbb
cltd
outsb
jl
or
test
cld
cmpsb
inc
or
loope,pn
pop
mov
pop
loopne
dec
add
es
and
lret
or
mov
jo
lcall
scas
pop
shl
addl
test
add
inc
test
popa
scas
pop
mov
and
and
push
adc
rolb
popa
add
lahf
test
je
sbb
call
adc
xchg
pop
jp
je
cmp
pop
lods
test
mov
test
jo
and
or
movsb
decb
push
inc
and
adc
mov
adc
mov
mov
imul
je
xor
sbb
mov
dec
push
xor
ficompl
lods
cltd
test
out
xlat
sbb
fs
faddl
or
add
dec
sbb
adc
dec
push
or
sub
add
or
sub
pcmpeqd
mov
testb
jne
in
add
add
arpl
mov
inc
mov
jg
dec
push
push
mov
mov
adc
and
xor
ret
fdecstp
insl
sarl
sub
add
loopne
xor
pusha
shlb
jp
push
pusha
sbb
push
or
out
add
out
sbb
arpl
xchg
xlat
popaw
or
dec
jmp
ficoms
insl
mov
and
jmp
fisubl
xchg
cmp
loope
fiaddl
sub
cmp
repz
test
pop
and
mov
and
sub
je
rclb
dec
jne
jnp
push
stc
cwtl
or
inc
jmp
cmpb
loopne
sbb
cwtl
adc
or
je
xor
je
add
shr
not
and
add
cwtl
les
sub
add
add
in
add
inc
les
ret
jmp
cmp
or
lret
sbb
add
into
loopne
or
sbb
sub
inc
movb
add
pop
fistl
test
adc
mov
jmp
out
cs
xchg
add
ljmp
adc
inc
bound
imul
cwtl
push
lret
add
subl
cmp
or
inc
clc
add
push
mov
addb
xor
enter
sbb
imul
push
pop
pop
ret
ret
pop
test
pusha
out
ret
adc
loopne
mov
lods
pushf
adc
inc
in
fcmovnu
fdivl
test
inc
pushw
cmp
dec
push
push
dec
xchg
xchg
inc
dec
push
xor
push
jnp
in
and
pop
adc
movl
sbb
add
inc
dec
dec
push
mov
jge
les
or
mov
inc
out
popa
idiv
add
jne
cmc
in
clts
jle
inc
or
or
push
mov
mov
cmp
jge
inc
lds
mov
xchg
jl
add
jnp
shlb
in
sub
push
out
fadds
jmp
mov
fprem
jle
jmp
das
jo
jge
push
jp
push
je
or
pushf
inc
outsl
dec
mov
mov
leave
fsts
push
js
mov
push
push
jne
adc
mul
out
scas
xor
pusha
cmpl
jb
push
mov
fisubrl
jae
add
inc
fsubrl
or
mov
pop
imul
lea
lea
movsl
add
je
sub
dec
and
sub
pop
jb
push
push
add
push
lock
cs
push
xor
sbb
loopne
fidivl
fnstsw
imul
mov
jge
cmp
and
sar
lods
pop
add
dec
or
push
data16
push
push
or
sub
jl
add
sbb
add
shll
adcl
mov
fdivl
outsb
inc
std
xchg
rol
adc
jb
cmp
jae
cmp
dec
fcom
sub
sub
or
xchg
mov
ljmp
sub
add
jne
sbb
sarl
ljmp
add
icebp
inc
push
adc
xchg
sti
in
dec
jecxz
pusha
ror
sub
add
test
sub
sbb
and
dec
push
movsl
mov
movsl
jns
add
inc
mov
jle
dec
js
imulb
int
lods
sbb
addr16
sbb
dec
imul
cmp
cmp
push
call
fsubp
mov
fldenv
xchg
add
lea
in
adc
jb
pop
add
mov
add
mov
test
aam
sub
rorl
and
or
sbb
mov
push
xor
inc
aam
fs
push
ljmp
int3
mov
pusha
lret
jle
ret
loop
mov
clc
hlt
aad
outsl
ljmp
add
dec
xor
push
xchg
add
lds
shlb
inc
push
addr16
mov
push
dec
sbb
push
ja
clc
or
jge
inc
incl
dec
adc
or
adc
pop
rorb
or
shll
sbb
gs
incb
shr
mov
adc
loopne
push
in
inc
lea
or
add
inc
xchg
clc
mov
in
and
add
jns
xchg
add
mov
shrl
xchg
adc
sub
add
in
xchg
xor
add
xchg
sub
dec
clc
cmp
lret
push
xor
jge
and
ror
cmpsl
jl
push
cmp
js
inc
insb
jmp
clc
and
xchg
jle
sub
push
cs
leave
aam
and
int3
test
mov
std
jmp
ljmp
push
jecxz
test
push
mov
pusha
jmp
or
xor
das
sbb
mov
sub
or
pop
dec
fwait
pop
cld
xchg
sbb
and
ds
xor
pop
push
mov
push
imul
repz
push
call
push
int3
jle
add
jl,pn
ds
push
cmp
jbe
xor
cmc
pop
jne
inc
lcall
cmp
xor
pushl
loope
das
mov
mov
jge
sbb
mov
loop
incb
int
dec
jb
cmpb
inc
cmp
loope
fistl
mov
push
add
push
push
xchg
sbb
mov
xchg
sbb
xor
add
and
add
cmp
xor
roll
dec
dec
push
inc
jnp
or
andl
sti
adc
pusha
lods
push
sbb
add
jmp
test
inc
add
nop
clc
sarl
sub
mov
adc
mov
daa
mov
dec
mov
inc
inc
rcrl
dec
ss
mov
push
rclb
ds
mov
dec
adc
mov
in
mov
nop
pop
xor
xchg
cli
cmpl
jb
bound
push
add
push
and
fistl
mov
sbb
jne
mov
dec
hlt
or
xor
xchg
mov
sbb
daa
add
adc
jg
inc
movsb
in
mov
push
repz
adc
outsl
movsb
jo
jl
cmp
insb
ret
sbb
icebp
add
mov
cmp
jne
cmp
jb
dec
or
in
mov
add
enter
pop
mov
lea
fnsave
fmulp
ja
mov
push
sub
repz
shrb
sbb
add
jo
dec
mov
js
arpl
sbb
cmpsb
sub
inc
mov
adc
xor
das
add
loop,pt
inc
add
xor
add
pop
rol
sbb
or
test
ret
movsb
jp
ljmp
stos
or
dec
arpl
jecxz
fidivrl
dec
sub
loopne
jp
adc
push
xor
add
sub
mov
faddl
xchg
inc
fadd
sbb
push
sbb
sub
mov
mov
sbb
ss
mov
add
stos
dec
sub
add
add
xor
shrb
movsb
jb
pop
pop
or
inc
sbb
mov
enter
dec
push
dec
add
xor
sub
sub
out
in
notb
inc
push
fstpl
shrl
push
jo
out
inc
je
sub
js
push
js
fs
imul
push
jmp
and
into
inc
loope
dec
push
subl
cmpsb
add
outsb
push
movb
pop
inc
xor
xor
cmp
sbb
push
add
jmp
or
cmpsb
jns
loope
sub
jae
pop
inc
testb
and
jne
add
aaa
les
cmp
sbb
or
push
test
test
pop
add
jo
cmp
add
pop
inc
jae
sub
insl
sbb
mov
pop
or
daa
les
push
dec
inc
lds
xor
jb
cmpb
inc
xor
xor
xor
cmp
out
add
jns
vmovd
insl
fld
add
pushf
dec
adc
pop
icebp
xor
jecxz
adc
sbb
ret
loopne
nop
jmp
xchg
push
cmp
mov
adc
cmp
insl
and
adc
adc
jbe
push
xchg
in
adc
arpl
mov
movl
fmull
sub
or
sbb
loope
stos
ds
movb
add
fcompl
push
pop
push
lret
xor
cmp
sbb
incl
pop
xor
test
mov
sub
cmp
or
or
cmc
mov
out
enter
lds
push
pop
adc
cmpsb
sbb
adc
mov
xchg
sbb
cltd
xchg
add
lods
es
lcall
lods
rcrl
inc
dec
xchg
pop
pop
jb
dec
cmp
stos
adc
push
add
je
sahf
cmpsb
js
push
mov
xor
mov
xorb
lods
js
ret
pop
xlat
lods
cmp
xchg
mov
jle
add
lahf
daa
and
pop
add
sub
dec
insb
push
cmp
in
cmova
cld
jl
movsl
cmpsb
pushf
mov
mov
add
js
push
push
inc
mov
or
push
sub
mov
pop
fadd
xor
jne
push
sub
jne
adc
adc
dec
ret
inc
dec
add
sub
xor
test
repz
insb
in
add
sysret
subl
inc
test
cmpsb
lock
sbb
inc
int3
in
in
ss
repnz
mov
jle
arpl
stos
add
and
push
mov
and
movzwl
sub
mov
mov
sub
cwtl
pop
jae
pop
jo
dec
fadds
fwait
aad
dec
fcmove
or
lret
movsl
mov
sbb
movsb
mov
cmp
in
mov
cmpsb
dec
mov
ljmp
test
sbb
add
test
xchg
rclb
pusha
inc
adc
push
int3
mov
addb
and
movsl
mov
rolb
aam
data16
or
lods
mov
adc
imul
or
lcall
int3
adc
jecxz
repnz
pop
push
and
insl
fwait
std
call
dec
add
pushl
push
mov
clc
fnstsw
and
in
mov
pop
mov
add
add
push
push
pusha
loopne
sti
xor
mov
xor
sbb
adc
cmp
sbb
add
or
sbb
mov
push
add
movsb
jmp
xor
and
enter
xchg
rorb
sarb
test
push
pop
inc
ja
push
pop
or
lods
and
sub
cmp
or
enter
shlb
scas
mov
or
mov
adc
push
lods
fdivrs
imul
push
and
ja
lods
cmpsb
push
imul
cld
xor
cmp
ljmp
js
xor
xor
loopne
sbb
rorb
enter
out
pop
push
les
adc
sar
sar
sub
out
push
shrb
sub
add
mov
pop
pop
push
sar
inc
sub
cmp
xor
outsl
jg
or
pop
rolb
pop
sub
cmp
pop
jge
or
aaa
add
add
cmp
jle
repnz
add
cmp
and
into
add
push
adc
or
dec
mov
aam
inc
mov
adc
loopne
sbb
and
xchg
inc
jno
jo
mov
mov
out
xchg
sub
dec
push
mov
arpl
andl
cmpsl
push
iret
loope
test
and
mov
and
cmp
xor
cmpsb
aad
lea
dec
adc
cli
pop
jl
dec
cmp
push
add
cmpsb
cs
loopne
xor
call
aad
mov
movsb
pop
xchg
xor
cwtl
sarl
cmc
mov
loopne
dec
test
inc
adc
repnz
lcall
je
aam
sbb
adc
in
cmp
push
fcom
cmp
sub
cmp
and
ljmp
das
mov
mov
sbb
jb
mov
call
mov
mov
gs
aaa
mov
sub
sub
push
mov
mov
lea
cmp
jo
mov
or
into
jo
daa
mov
mov
sbb
and
xchg
xchg
and
or
adc
mov
out
cmpsl
fs
or
adc
rcl
ret
mov
enter
lock
sbb
dec
sbb
mov
push
add
fcomps
cmp
bound
jnp
add
fs
pusha
push
leave
mov
mov
or
mov
out
and
leave
out
push
xchg
jno
and
push
xchg
push
adc
call
sub
adc
jle
imul
or
cli
mov
or
mov
and
inc
dec
add
push
mov
cltd
jl
popa
pop
pop
and
jae
xchg
sbb
mov
pushl
mov
or
ja
jne
push
sbb
sbb
cmp
jne
jbe
test
push
scas
mov
push
pop
inc
add
and
add
and
and
push
mov
sbb
dec
es
outsl
xor
or
push
sub
xor
jo
dec
aas
js
pop
cmp
mov
test
ja
popf
ret
popl
cmpsb
into
sub
rolb
aam
add
aas
mov
insl
sbb
pop
aam
sub
out
aaa
push
mov
loopne
push
pop
test
into
mov
add
fldcw
mov
or
push
xchg
xor
inc
mov
mov
mov
or
test
pop
sbb
push
mov
push
test
mov
mov
sbb
and
xor
and
lods
xor
xor
push
bound
leave
and
and
fyl2x
inc
inc
push
mov
or
pop
pop
mov
sarb
push
push
pop
dec
add
xor
lret
xchg
cs
adc
pop
out
adc
fistpl
mov
pop
out
jne
pop
jno
das
or
popa
sub
xlat
jmp
pop
cmpxchg
dec
loope
and
cmp
jo
push
test
mov
stc
dec
or
dec
add
lea
aad
jl,pt
rclb
or
stos
push
fs
loope
into
mov
or
out
mov
nop
or
xchg
pop
dec
into
ljmp
or
fstpt
mov
pop
mov
adc
lods
and
adc
push
lcall
or
mov
sbb
cmpb
aas
jmp
test
mov
sub
or
add
addb
xchg
cmpb
ficomps
jmp
or
push
adc
mov
lock
pushf
test
or
add
ss
xor
xchg
aad
lret
lods
test
jmp
push
loope
add
cmp
pop
xlat
adc
and
adc
andb
adc
out
andl
mov
mov
or
jb
movl
dec
dec
xlat
sub
stos
lahf
clc
push
inc
imul
inc
adc
mov
popf
push
inc
mov
test
add
cmp
jne
repnz
mov
pop
or
das
push
mov
out
rcll
popa
jne
mull
lcall
mov
data16
and
push
std
or
xchg
adc
lock
mov
adc
dec
lods
pushf
je
mov
ds
xchg
fs
andl
mov
test
jo
stos
pusha
inc
and
fisubrl
ds
fsubs
dec
push
and
cmp
push
out
and
fwait
mov
jbe
lock
push
fiadds
jmp
or
xor
cwtl
clc
in
mov
adc
je
sub
push
out
data16
sbb
jne
add
test
adcl
mov
sbb
jne
cltd
push
jo
movsb
fucomp
js
adc
pop
add
imul
cmp
test
jo
sbb
sub
mov
out
or
lcall
or
imul
hlt
mov
lret
inc
test
mov
add
adc
adc
add
or
js
pop
repz
lods
fiadds
pop
addb
out
sub
adc
lock
in
js
add
mov
das
add
xor
iret
loopne
adcb
ret
stos
adc
mov
adc
lods
jmp
cltd
mov
imul
xchg
mov
stc
shl
cmp
bound
pop
sub
insl
or
loopne
sub
push
pop
adc
mov
or
enter
testb
mov
sbb
arpl
cmpsb
add
test
out
sbb
xor
sbb
adc
cmp
arpl
jg
push
mov
mov
jo
pop
xor
popa
add
add
xlat
lret
shlb
xorl
rcll
sub
outsl
sbb
insb
pop
mov
add
xor
fistpll
imul
lret
mov
pop
adc
xor
loop
dec
add
ret
stos
call
add
dec
pop
xchg
xor
jg
mov
les
sub
ja
jbe
jle
sarb
mov
fwait
xor
imul
sbb
ret
lcall
xchg
mov
mov
mov
sbb
push
sub
push
add
mov
cmp
inc
sbb
inc
and
dec
dec
push
dec
mov
sbb
adc
lss
cmp
dec
or
js
mov
sub
or
out
sbb
xchg
push
stos
or
pop
pop
and
pop
or
and
dec
sub
xorl
mov
mov
cli
out
or
cmc
mov
xor
adc
rcr
ret
jne
ds
adcl
gs
inc
inc
insb
sbb
or
push
call
add
cwtl
and
sub
push
sbb
jae
in
jl
dec
sbb
sbb
nop
andl
lock
cmp
add
cmp
mov
adc
pop
cmpl
jmp
or
add
or
cmp
adc
aam
push
fnstsw
or
pop
inc
push
or
jo
into
dec
jno
lods
fs
out
hlt
push
out
jae
inc
cld
xor
aam
popf
jo
or
xchg
sub
das
or
das
imul
fidivrl
or
add
ficoml
lock
faddl
movsb
sahf
sbb
out
fildll
cmp
leave
push
dec
aam
mov
jne
push
push
adc
sbb
xchg
rolb
cld
jno
jl
dec
loopne
mov
sub
cmp
andb
and
je
je
push
sti
sbb
lcall
pop
subl
jg
mov
push
push
dec
adc
or
adc
roll
sub
xor
fucomp
and
dec
and
cs
shlb
enter
add
push
jp
cld
pusha
cmpsb
adc
inc
mov
jnp
adc
adc
adc
mov
sbb
sub
or
pop
shrl
adc
mov
sbb
lret
mov
adc
sbb
scas
daa
or
mov
or
sbb
add
adc
sub
or
sti
xchg
aas
dec
sbb
xor
or
stos
lock
pop
mov
cmp
pop
mov
pop
test
add
lods
inc
mov
inc
imul
push
adc
jo
cld
shr
sbb
in
cltd
iret
pusha
aas
subb
mov
jl
adc
adc
adc
jne
add
push
or
inc
sub
or
xchg
data16
int
std
jbe
push
cmpl
inc
xor
iret
jp
xchg
movsl
insl
mov
add
andl
push
movsl
cltd
shlb
inc
mov
mov
punpcklwd
subl
adc
fistl
mov
ja
xchg
aad
dec
push
xchg
add
in
push
mov
or
adcb
mov
call
inc
pusha
push
pop
das
add
or
mov
lret
mov
popa
cmp
push
and
stos
push
add
xor
sbb
out
mov
push
out
loope
mov
sahf
push
scas
xor
popa
scas
les
inc
inc
mull
or
rolb
mov
dec
and
inc
adc
aam
inc
sbb
dec
adc
adc
test
shlb
jo
sub
xchg
cmp
dec
fwait
in
addr16
cli
xchg
mov
subl
dec
negl
add
daa
xor
fisttpl
cmp
shlb
push
sbb
mov
adc
test
adc
into
inc
cmp
je
mov
add
jb
jl
and
mov
push
xchg
dec
or
dec
std
or
outsb
add
mov
call
cmpl
test
pop
or
lock
jne
adc
fdivrl
inc
inc
sbb
les
sbb
jo
add
popa
jns
cmp
push
xchg
push
dec
mov
movsb
out
lock
jmp
or
push
in
add
inc
call
jo
call
je
or
daa
hlt
bound
mov
test
push
or
add
cmp
lea
sub
add
test
dec
xor
frstor
pop
rolb
fimuls
inc
or
outsl
mov
in
jg
pop
xchg
jmp
shr
push
movswl
daa
rcrl
leave
out
dec
add
stos
js
ret
jmp
inc
xchg
lock
dec
jle
dec
std
sbb
lds
adc
or
adc
rcrb
in
pop
jb
in
mov
leave
ljmp
inc
out
je
shll
mov
pop
pushf
cmc
xchg
data16
dec
sub
add
je
push
cmp
test
dec
mov
jmp
repnz
mov
mov
movzbl
mov
test
rcrl
lcall
outsb
dec
push
int3
add
mov
inc
jae
adc
jbe
sub
popa
and
cmpsb
and
pop
jge
imul
push
int3
add
in
pushf
dec
xchg
inc
pusha
pop
aas
test
ds
dec
call
leave
push
inc
pushw
adc
sbb
push
xchg
mov
cmpsl
mov
inc
clc
lea
add
add
add
pop
ljmp
sbb
loope
sub
loopne
aad
data16
cmp
cmp
pop
push
popf
dec
xor
sbb
mov
iret
mov
mov
loopne
add
ja
bound
add
jp
add
inc
mov
push
roll
js
out
cmp
dec
adc
icebp
test
rcrb
cmp
cmp
xchg
inc
push
jae
popa
xor
xor
cmp
jecxz
push
and
nop
mov
inc
and
add
mov
mov
movsl
mov
ja
cmpl
or
pop
xchg
sub
adc
xor
lea
sbb
stos
push
sub
test
add
add
jo
inc
mov
cmp
push
dec
fnstenv
adcb
mov
mov
cmpsl
dec
cmpsl
and
cld
clc
or
or
sub
or
and
sub
pop
push
adc
clc
inc
fsubrs
inc
jo
das
jp
xor
andb
ret
xchg
jl
rcrl
imulb
outsb
dec
or
fistps
pushf
pop
dec
fcomp
inc
adc
jecxz
lock
jo
das
into
neg
lds
mov
add
xchg
or
push
sub
jo
shll
loope
push
add
or
push
fcoml
pop
adc
test
test
movsb
sbb
pop
push
mov
add
je
sub
inc
sub
or
jo
psubsb
or
add
mov
and
sbbb
dec
or
inc
pop
lods
nop
dec
sbb
dec
fcmovnbe
and
push
std
dec
push
cli
cmp
cmpsb
cmp
ss
pop
lock
lea
push
pop
iret
push
imul
test
add
push
or
or
add
add
and
xlat
ret
ja
repnz
push
sub
jl
and
sar
cmp
js
add
sub
imull
stos
jb
push
or
push
add
arpl
iret
sidtl
lea
push
and
adc
push
push
adc
add
sub
fcomps
data16
adc
test
inc
aas
push
mov
xor
call
jne
rorb
pop
add
mov
in
popa
pop
adc
lods
xchg
add
outsb
xchg
push
jb
daa
or
push
sbb
pop
sub
loopne
es
mov
pusha
add
sbbl
cmpl
mov
cmpsb
shlb
lods
int3
xchg
xchg
adc
into
hlt
sub
and
add
pop
xor
xchg
sub
cmp
mov
mov
mov
rcrb
sbb
push
dec
shl
inc
int3
add
xor
in
pop
sub
and
xlat
adc
out
adc
adc
push
scas
xor
xchg
inc
push
in
sarl
jmp
sbb
pop
adc
pop
aas
sub
dec
and
mov
push
or
xchg
jns
adc
sub
jns
loopne
cmp
add
sbb
sub
push
insb
add
loope
add
test
roll
call
movsb
mov
add
fsubrs
xchg
mov
dec
rcr
adc
adc
mov
leave
les
roll
popf
shrl
in
testl
push
mov
push
sub
iret
adc
punpckhwd
push
cwtl
in
arpl
ret
jmp
imul
fldcw
insb
fdivl
add
dec
or
and
cmpsb
pop
mov
shl
mov
jae
idivb
jmp
fisttpl
mov
inc
clc
sbb
jp
add
rol
jmp
push
mov
adc
out
scas
mov
adc
push
push
lret
push
xchg
dec
rorl
call
hlt
aam
sbb
lods
repz
in
mov
andl
sbb
cmc
add
push
sub
test
xorl
es
cs
inc
aad
cld
pop
mov
movsb
cmp
call
push
and
jp
mov
add
sbb
into
xchg
mov
mov
mov
test
mov
mov
cmp
xlat
mov
rolb
sbb
pop
cld
sbb
jge
out
and
movsb
lret
bnd
out
aaa
das
xor
push
icebp
push
add
xchg
testl
push
xor
in
mov
mov
arpl
outsb
out
sahf
out
lea
mov
enter
or
ja
push
out
imul
rcrb
bnd
adc
pop
cmp
sub
aaa
jp
rolb
push
cltd
or
repnz
iret
insl
movsl
divl
ljmp
pop
lds
mov
loopne
cli
push
ds
notl
je
je
lods
sub
cmpb
aaa
mov
or
je
dec
jne
mov
sub
or
divb
clc
bnd
mov
pop
xchg
cld
mov
cmp
push
xor
mov
inc
ds
cmp
je
mov
jmp
cmp
cmp
js
adc
xchg
ret
clc
inc
rclb
jmp
fwait
je
xchg
jmp
lea
ja
popf
sbb
mov
inc
dec
and
out
fildl
hlt
push
fsubrl
push
ss
popa
cmp
pop
inc
lock
and
popa
in
stc
or
mov
dec
enter
out
or
mov
dec
popf
sbbb
sbb
ds
xor
push
mov
in
test
xchg
adc
sbb
rolb
imul
sbb
rol
xchg
mov
add
or
incb
mov
sub
fwait
mov
add
das
and
popa
sbbb
pusha
sbb
loop
sbb
lods
mov
xorb
cmc
loop
inc
movsl
xchg
or
jne
test
insl
add
addb
loopne
fisttps
sbb
jge
repz
xchg
std
das
fdivs
add
and
arpl
add
push
aas
arpl
les
mov
dec
stos
push
andl
stos
sti
incb
pop
ja
add
in
sub
lret
or
lods
call
paddb
mov
lea
mov
gs
fcomps
xor
fidivl
pop
jp
dec
sti
push
cmpsl
ds
nop
insb
sub
lea
push
push
cmp
inc
push
leave
dec
sbb
sub
mov
cwtl
cmp
push
filds
ret
lret
nop
les
pusha
sbb
jne
pop
inc
fildll
xor
es
dec
iret
ja
add
mov
les
dec
pop
ret
test
inc
add
push
xor
call
js
jo
lock
inc
fnstenv
cmpl
xor
mov
xor
leave
add
test
pop
adc
cmp
push
insl
into
xlat
cld
enter
mov
sbb
sub
in
or
ja
push
js
ret
and
outsb
sbb
push
mov
ret
push
adc
int3
push
fiaddl
push
push
mov
outsl
hlt
les
push
adc
test
cwtl
mov
cmc
idivb
pop
hlt
je
push
movl
cld
jge
and
out
add
and
xchg
test
nop
cmp
fcompl
sti
std
add
je
cmp
movsb
iret
mov
jbe
or
jg
add
mov
push
inc
popa
pop
int3
callw
adc
jb
add
mov
add
add
aaa
movsl
enter
popa
pop
add
repz
fs
aas
adc
ljmp
mov
or
andl
inc
cld
xchg
in
mov
xorb
add
andb
inc
mov
je
push
cmp
xor
out
dec
outsb
inc
adc
and
es
pushf
cmp
add
mov
cmp
inc
inc
push
jbe
adc
nop
and
clc
and
pop
mov
addb
add
enter
xlat
imul
jl
or
sub
or
inc
sbb
jle
and
inc
or
sub
jo
sub
inc
rclb
sarb
xor
push
stos
add
outsb
cmp
jecxz
cmc
add
adc
imul
add
js
add
cmp
push
ret
xor
jno
iret
sarb
sbbb
mov
sti
scas
out
fcoml
adc
fcomps
push
fcompp
push
scas
incl
cmp
sti
imul
add
bound
cmp
leave
lods
andl
sbb
adc
jb
xchg
addb
sub
mov
mov
add
enter
fsubs
add
add
inc
addr16
jmp
sbb
popa
test
mov
mov
std
or
lea
pop
fadd
add
inc
ret
pop
adcb
fwait
sbbb
movsl
shll
add
sub
xchg
add
outsb
cwtl
leave
inc
addb
or
mov
push
pop
rcr
fdivs
cmp
inc
add
or
test
pop
dec
pop
jle
and
xchg
inc
jmp
clc
jle
mov
sub
push
add
fisttpll
dec
mov
adc
pop
jbe
leave
cmc
add
sar
jl,pt
mov
push
sbb
jmp
and
push
ljmp
push
cmp
bound
aam
mov
sar
es
dec
sbb
pop
push
push
sub
or
mov
or
das
inc
add
sbb
mov
loope
not
push
test
je
lods
inc
pusha
add
data16
and
hlt
sbb
mov
jnp
pop
notl
fnstcw
fisubrs
jne
jmp
add
sahf
fildl
imul
sti
fistps
iret
mov
add
sub
push
wbinvd
xchg
sbb
mov
and
add
jmp
enter
add
add
rcrb
xor
stos
xor
pop
leave
dec
xor
retw
xor
xor
daa
adc
sbb
mov
fnstsw
lock
inc
scas
mov
js
or
add
repnz
xor
xor
test
cs
jb
inc
xchg
in
jnp
sbb
xorl
jbe
mov
push
dec
inc
adc
js
add
data16
mov
push
dec
sbb
or
push
adc
lods
cmpb
je
add
jmp
jo
mov
cmp
jl
cmp
cmp
jl
decb
jg
push
out
mov
jmp
rdtsc
inc
inc
cmp
cmp
call
sbb
and
add
push
ds
cltd
enter
movsl
cs
or
push
lahf
sbb
add
mov
icebp
bound
and
inc
inc
add
icebp
jg
push
movb
inc
jmp
pop
int3
js
das
add
fisubrl
movl
push
and
incl
or
inc
decl
adc
jl
dec
sub
orl
push
adc
or
or
mov
adc
mov
or
outsb
add
adc
xchg
pop
rorl
cmp
adc
gs
inc
adc
xor
or
pop
jmp
add
mov
sbb
sti
sbb
pop
push
mov
cmpsb
mov
loope
cmpsb
addr16
lcall
push
and
je
push
fdivs
xchg
lcall
sbb
test
test
fs
or
push
inc
fninit
add
ficoms
jns
testl
insl
push
cmp
adc
pop
pop
add
cmp
add
mov
jmp
dec
es
insb
xlat
fwait
lods
push
outsl
inc
adc
stos
loope
adc
call
cmpsb
cmp
out
loope
pop
cs
sbb
mov
add
iret
add
ret
mov
and
mov
pop
mov
push
outsb
inc
sbb
mov
mov
iret
add
pop
cmp
outsb
cmpsb
cmp
adc
lock
pop
and
in
mov
inc
aaa
testl
or
push
sahf
ss
icebp
push
sbb
subl
dec
and
roll
jge
add
xor
dec
push
add
adc
ret
out
test
ret
push
loope
mov
jge
xor
cmpb
push
xor
xor
in
movsb
push
sbb
adc
and
rclb
in
and
inc
js
sti
lds
cmp
flds
fisttpll
cmp
xor
dec
cmpl
mov
add
pop
pushl
xchg
xchg
jne
jo
adc
inc
add
add
movsb
adc
push
mov
mov
xchg
fnstcw
stos
loopne
hlt
icebp
insl
ds
add
push
mov
push
sub
int3
add
and
jae
push
inc
les
xor
push
push
push
or
cmp
ja
je
inc
sbbb
mov
adc
imul
pushf
add
out
cmpsb
jge
or
and
jo
scas
dec
inc
pop
loopne
inc
sub
or
or
int3
imul
xchg
cmpsb
push
or
pop
inc
lcall
in
imul
sbb
inc
ja
add
testb
xchg
int
or
cli
test
jg
push
jmp
push
push
inc
stos
dec
dec
jnp
mov
add
xchg
daa
push
shrl
test
mov
je
cmp
mov
aam
ja
je
pop
insb
hlt
pop
push
sub
jl
push
push
or
jbe
push
jmp
inc
imul
decb
addr16
mov
gs
fsubrs
div
mov
stos
or
loope
out
adc
imul
add
push
insl
test
clc
sub
loop
dec
mov
je
fnstenv
jecxz
lahf
inc
add
adc
cmp
jecxz
xchg
inc
mov
sub
pop
lods
xor
testb
push
scas
cs
pop
push
scas
pop
inc
mov
popf
fsubrl
pop
pop
jo
neg
out
daa
divb
pop
scas
mov
or
loopne
ret
push
or
cmpb
aad
or
jle
lret
mov
movsl
test
imul
or
cld
subb
add
loopne
add
or
xor
xchg
lock
sub
mov
rcll
sbb
push
daa
mov
fnstsw
inc
lret
adc
jnp
out
adc
int3
push
adc
dec
fcoml
push
and
and
and
and
adc
notb
and
push
nop
mov
leave
insb
repnz
fsubs
add
mov
xor
fcoml
add
push
insb
or
adc
cmp
in
or
inc
lock
sbb
add
and
cmc
adc
jo
mov
adc
adc
clc
icebp
leave
sbb
shrb
add
dec
sub
rcrb
or
sub
clc
neg
pop
push
pop
pop
xor
inc
popa
dec
call
inc
push
fdivs
filds
scas
data16
jp
jns
sbb
jb
adc
dec
and
adc
jne
and
sub
pop
clc
in
sbbl
add
adc
bound
push
sub
adc
ret
rorb
aam
outsb
mov
or
push
sub
cmp
cmpsb
jnp
jp
loop
sub
in
sbbl
test
pop
outsb
add
rorl
or
add
cwtl
mov
nop
push
mov
stos
and
jo
clc
test
insb
adc
or
or
cld
xchg
or
sub
mov
xlat
jo
fidivrs
cmp
push
or
push
jp
xchg
f2xm1
jnp
cltd
mov
sbb
mov
lock
mov
mov
shl
lea
push
es
or
or
mov
sbb
add
and
rol
xor
mov
dec
mov
jno,pt
push
pop
push
in
xor
add
idivl
pop
adc
mov
jp
xchg
mov
sbb
shrb
dec
adc
ret
inc
jbe
mov
outsl
adc
scas
notl
mov
jns
fdivrs
fucomi
sub
xor
jb
xchg
mov
fstps
sub
pop
ljmp
add
or
and
lods
roll
adc
or
enter
inc
mov
sbb
pop
add
mov
mov
out
lods
shr
sub
cs
jp
dec
add
jmp
pushl
xor
mov
imul
mov
jmp
and
sbb
or
inc
loopne
sub
xlat
andb
pop
repz
lret
or
mov
xchg
and
fcomi
rolb
test
je
add
cld
push
jle
jne
test
xchg
aam
iret
push
jbe
stos
aaa
mov
inc
ds
cmp
shrl
xor
pop
xor
mov
sub
push
xor
xchg
add
shll
adc
pop
mov
out
sbb
int
ror
add
outsb
call
push
cmp
jg
add
inc
jo
and
out
add
xor
adc
adc
add
adc
xchg
inc
adc
orl
jbe
sbb
aas
jno
mov
push
out
loopne
das
dec
add
add
mov
inc
xor
pop
sbb
push
popa
pop
mov
push
movl
hlt
and
ja
cwtl
shll
push
inc
or
cmp
cmp
sub
sub
bound
inc
push
or
mov
inc
push
es
adcb
sub
adc
add
push
addb
arpl
add
and
sarl
adc
jg
data16
hlt
xchg
hlt
jmp
add
call
and
add
adc
adc
jg
call
test
jne
mov
adc
and
decb
sub
sbb
lcall
test
mov
or
fiadds
xchg
inc
or
negl
and
mov
aaa
mov
clc
push
push
adc
add
jo
push
fnstcw
lock
push
fcomi
lods
inc
sub
mov
fcomp
xchg
pop
mov
or
jns
and
mov
mov
ja
dec
insb
pop
cmpb
testb
push
lods
push
add
add
cmp
ljmp
dec
adc
insb
push
scas
push
imul
or
and
pop
ret
pop
leave
pusha
int3
clc
dec
push
lahf
adcb
mov
mov
iret
inc
jg
hlt
mov
rcll
xchg
rolb
stos
cmc
movsb
pop
rorb
jmp
xchg
xor
dec
adc
mov
ret
push
dec
cmp
xchg
xor
pop
xchg
xor
dec
adc
or
mov
jae
push
cmpsl
ds
adc
fwait
jns,pn
or
mov
push
test
add
es
nop
fucompp
sti
adcb
mov
mov
xor
ret
adc
inc
and
test
jbe
leave
or
xchg
pop
pop
lret
bound
ja
adcl
pusha
inc
mov
sub
cwtl
jno
inc
or
fmul
fldl
insl
mov
aaa
andb
in
gs
jbe
adc
inc
movsb
cmc
loopne
or
js
or
or
data16
mov
add
push
ss
call
outsb
and
enter
aaa
js
jo
ja
and
fistpl
push
add
inc
sub
inc
push
sub
sbb
jae
pop
mov
in
cli
add
inc
pop
andl
test
cwtl
mov
bound
dec
or
and
mov
mov
nop
pop
jl
dec
sub
or
lea
sub
js
pop
add
push
push
dec
jg
push
imul
add
pop
pop
or
test
mov
jl
and
subl
and
mov
push
xor
pop
mov
shl
push
mov
xlat
and
add
mov
inc
lahf
or
push
ret
fs
push
in
mov
push
mov
cmp
iret
cmp
insl
add
out
xchg
mov
lret
pop
push
cwtl
or
or
jmp
mov
fsubl
adc
shl
push
push
jb
push
stos
or
rcll
mov
inc
pop
mov
add
push
cmp
push
jle
jge
inc
scas
adc
cmp
out
jbe
and
aaa
sbb
add
pop
subb
inc
or
dec
sbb
xchg
xor
xchg
nop
nop
push
clc
dec
inc
out
inc
sbb
dec
sbb
mov
mov
xor
push
cld
loope
jno
or
jb
out
jmp
lods
sbb
in
mov
push
adc
push
adcb
jl
and
pop
mov
ds
push
cmp
cwtl
jne
repz
adcb
mov
out
and
and
jne
or
sbb
fdivl
push
add
cmp
inc
mov
mov
push
bound
push
inc
pop
out
mov
mov
pop
mov
jae
popf
and
jp
lods
scas
mov
jecxz
mov
xchg
in
mov
cmp
push
xor
jns
or
pop
cld
mov
in
adc
pop
sarb
imul
or
popf
enter
adcl
sub
lea
mov
pop
dec
push
fmull
mov
dec
mov
or
ds
jb
loop
xchg
mov
jle
xor
filds
nop
inc
je
sar
lea
repnz
xor
out
mov
jecxz
cs
add
xor
lret
mov
sbb
cltd
mov
outsb
inc
dec
lods
movsl
das
xor
sbb
mov
subl
dec
loope
loope
xor
mov
add
adc
rolb
call
or
pop
pushf
xor
mov
in
cs
cmp
mov
push
sbb
cmp
icebp
add
xor
fidivrs
inc
sbb
jb
mov
in
add
vmovups
ret
push
inc
cs
mov
mov
movsb
inc
and
inc
pop
pop
sub
sbb
fs
jbe
jo
sub
add
and
sbb
jmp
lret
ret
imul
adc
mov
ss
dec
xchg
lcall
or
xorb
inc
cltd
mov
pop
idiv
mov
cltd
add
push
lock
jge
orb
xor
xor
adcl
lock
movsb
mov
call
add
insb
rolb
sub
xor
cld
mov
in
lock
mov
int3
test
xchg
icebp
or
mov
rorb
ja
cmp
mov
pop
inc
push
or
add
scas
rdpmc
or
or
adc
mov
mov
nop
cld
mov
cld
or
out
rorw
mov
push
adc
push
addb
dec
push
fcoml
sti
adc
sbb
mov
or
loope
add
repnz
ret
inc
sub
sub
push
fistpl
push
pop
lcall
pop
push
sub
sbb
add
pusha
pop
gs
cli
adc
dec
ficompl
rcrl
sub
in
sbb
sub
sub
push
dec
in
lock
lods
shl
inc
jg
das
int3
adc
adc
adc
cld
xchg
mov
push
dec
pop
test
push
mov
xor
addr16
repnz
jg
jge
out
add
outsb
lret
sub
clc
jmp
and
mov
or
inc
pop
inc
call
adc
call
or
je
ficomps
mov
dec
and
call
dec
movb
ret
dec
xor
in
mov
clc
push
dec
insb
mov
push
adc
xor
insb
or
ret
cld
jp
jo
pop
push
loope
jno
les
push
test
or
pop
clc
mov
out
sub
inc
jo
and
xlat
enter
add
or
pop
mov
jo
lock
adc
sbb
jmp
outsl
add
ret
push
test
les
mov
incl
inc
incl
pop
out
cmpsl
rcll
xor
inc
cld
cmp
call
loopne
cmpl
aaa
jbe
push
cltd
pop
idiv
add
mov
pusha
or
adc
mov
les
add
add
mov
mov
xor
or
pop
movsl
lock
jmp
cmp
jae
dec
lea
js
jae
ret
mov
jbe
push
add
clc
loop
jmp
mov
mov
xor
fdivp
mov
mov
mov
into
add
dec
sbb
xchg
sub
test
jge
mov
sbb
dec
dec
je
jp
lods
jle
test
imul
pop
insb
adc
rorl
xor
pop
jg
cmp
decb
push
mov
xor
jl
sub
inc
in
das
sbb
xchg
test
xchg
mov
filds
pop
out
xor
add
outsl
push
pop
sub
adc
pushf
imulb
insl
je
push
adc
fidivl
sarb
mov
stos
roll
xor
mov
insb
movsl
jle
pop
cmp
call
cmp
sbb
aas
jge
pop
ret
or
push
cltd
pop
idiv
cmp
inc
ret
mull
push
xchg
inc
out
cmp
daa
sub
mov
divb
cmp
or
pop
jb
adc
imul
out
rolb
mov
insl
mov
sbb
pop
mov
arpl
insb
xor
jo
sub
sbb
sbb
add
shll
pop
xor
int3
inc
add
sbb
or
or
jns
pop
cmp
movsb
jbe
loope
incl
pop
mov
imul
push
clc
and
dec
cmp
je
cmp
mov
sub
mov
insb
pushf
push
sbbl
pop
xchg
push
mov
add
push
jmp
jge
out
icebp
jl
je
sbb
dec
fsub
inc
fisubs
lods
insl
mov
cmpsb
jno
mov
mov
int
int3
dec
jo
lock
lea
dec
inc
add
loopne
add
xor
mov
mov
shl
data16
in
sar
adc
and
pop
popl
popf
sbb
or
sbb
sti
fstps
or
fs
aaa
orl
adc
cmp
pop
stc
add
push
adc
lcall
push
inc
jmp
push
pushf
xchg
movsb
mov
adc
lahf
stc
jno
test
popa
mov
insb
sbbb
sub
push
je
mov
push
xor
or
push
sub
mov
mov
push
add
push
data16
cmp
add
adc
or
jnp
out
out
call
outsb
or
push
mov
clc
sbb
pushl
and
jle
ljmp
pop
insb
or
or
mov
pop
popa
mov
xor
mov
add
adc
stc
and
es
out
loop
push
push
pop
mov
xchg
mov
or
js
mov
adc
lret
push
cmpsl
jo
fdivrs
out
inc
decl
inc
jg
fdivs
mov
push
inc
lea
jp
test
aas
mov
push
in
add
mov
jne
add
clc
mov
inc
inc
lcall
movsbl
cmp
cli
subb
daa
adc
add
mov
movsl
fidivrl
dec
je
popa
into
and
pop
gs
jo
mov
pushf
push
jo
pusha
cmpb
mov
mov
incl
fdivr
mov
push
mov
adc
sbb
jae
test
mov
mov
pop
sbb
lods
mov
loop,pn
bound
jg
insl
sbb
or
xchg
loopne
mov
and
in
aaa
sub
movl
dec
push
inc
hlt
mov
addr16
rorb
in
dec
adc
ret
pop
orb
cmp
je
mov
dec
enter
mov
int3
sub
inc
or
sbb
push
pop
inc
push
addb
rorl
pop
add
or
and
cmpsl
mov
aam
sbb
cmp
adc
lret
mov
mov
fiaddl
mov
into
adc
and
add
shll
jo
std
lea
bound
jne
jmp
dec
or
sub
push
les
dec
jmp
dec
rclb
cmp
mov
xchg
push
push
jbe
ret
push
mov
and
sub
rorl
xchg
outsb
in
test
mov
and
mov
cmp
in
or
imull
std
mov
gs
mov
mov
cmp
push
fisubrl
out
sbb
mov
sub
subb
js
ret
push
cmp
scas
loope
lock
je
push
push
fstps
xor
add
call
pop
add
mov
or
sub
mov
sbb
inc
push
jmp
cmp
mov
inc
or
inc
inc
cwtl
jns
push
push
mov
outsl
inc
inc
shlb
or
adc
jbe
mov
jge
cltd
ret
cmpsb
mov
jmp
dec
out
lcallw
clc
jne
pop
inc
xlat
mov
mull
ja
inc
data16
js
aas
andl
inc
jo
test
das
or
sub
mov
sub
cli
in
rcrb
xor
jne
test
mov
and
popa
pop
test
xor
and
lret
test
sahf
ja
adc
pop
sbb
jl
scas
nop
lock
fimuls
jg
jl
cmp
jb
pop
jl
ss
std
fwait
mov
inc
xchg
jbe
pop
mov
inc
popa
and
add
sbb
pop
mov
xchg
lret
cld
xchg
sbb
jg
dec
fmull
incl
fs
int3
sbb
stos
inc
sbb
push
add
call
push
mov
sbb
cmp
inc
sub
sub
sbb
dec
pop
enter
inc
and
subl
stc
add
mov
popf
jle
push
mov
cmp
rolb
adc
inc
adc
fsts
jmp
sub
fisubl
inc
cli
mov
push
push
lods
loop
mov
jge
add
add
xor
pushl
sbb
fs
add
add
sbb
xchg
addr16
sub
sbb
xchg
inc
cmpsb
or
or
xor
imul
inc
push
loope
sub
fadds
sahf
sub
sbb
pop
idiv
add
xchg
push
sbb
dec
jg
jl
out
pushf
gs
inc
add
push
push
fisttpl
add
call
repz
rorb
out
or
xor
fwait
leave
ljmp
xor
pop
push
call
add
fcompl
and
sbbb
in
inc
insl
mov
shlb
jne
xlat
push
pusha
loopne
dec
ror
pop
inc
mov
mov
adc
jnp
out
pop
loopne
cmp
push
add
les
call
out
push
cmp
imul
pusha
ljmp
ficomps
jl
dec
cld
in
fsts
xor
clc
lret
call
aas
push
cmc
mov
fwait
xor
and
cmp
add
xor
pop
lock
stc
ljmp
fcmove
pop
ret
adc
lock
or
xchg
lock
push
insl
aad
sbbb
add
lret
push
mov
and
push
out
rol
loopne
jmp
jb
xor
scas
sarl
push
or
and
push
add
pop
cmp
xor
jmp
adc
rcll
mov
outsb
pop
add
inc
adc
mov
adc
jb
jns
sub
test
mov
fidivl
jns
test
push
imul
cmp
rolb
push
fwait
sbb
push
cs
cmp
lods
inc
js
fsubrs
add
aam
test
out
mov
divl
xor
in
sbb
ss
mov
push
iret
jp
cmp
test
add
in
mov
je
cmpsb
fsubrl
loope
fisttpl
pusha
cld
mov
adc
inc
mov
sbb
fs
out
jecxz
mov
loopne
push
movsl
in
call
push
icebp
or
in
push
xor
stc
add
jns
add
pop
sbb
addl
pop
lods
lods
pop
jbe
xchg
dec
loopne
fisubrs
add
fnstsw
push
add
cmpsb
and
fisttpl
inc
cmp
mov
or
pop
mov
cs
cmpb
movsl
pop
pusha
aam
nop
cs
pop
lods
leave
adc
cmp
mov
jo
call
or
aaa
pushf
cmp
sub
mov
pop
push
gs
aad
pop
aas
aaa
sbb
and
or
push
or
mov
lea
sub
imul
push
push
mov
or
subl
sub
sbb
xchg
dec
test
in
mov
or
sbb
mov
and
push
cmp
add
je
jo
xor
repz
repz
arpl
insb
inc
lea
loopne
mov
inc
mov
bound
leave
or
clc
sub
scas
add
push
cmp
iret
and
imulb
rcrb
mov
dec
cwtl
cmp
or
repnz
inc
sbb
sub
or
pushf
ret
ret
stc
movl
push
mov
es
xchg
adc
pop
addl
xchg
pushf
mov
push
test
add
inc
mov
ret
bound
xlat
movl
ficomps
push
je
mov
push
gs
push
inc
sbb
mov
repnz
movsb
aas
je
add
jno
fisttps
adc
cmp
sub
pop
mov
add
add
inc
jno
ss
mov
mov
cmp
icebp
xor
mov
sbb
rcrb
dec
push
stos
push
inc
jecxz
ret
movsl
mov
pop
test
or
ret
jl
sbb
pop
inc
leave
outsl
pop
mov
push
dec
add
cld
test
or
pop
xor
xchg
cwtl
jecxz
cmp
cmp
insb
cld
imul
hlt
cmp
add
lds
js
xor
test
lock
aaa
adcl
sbb
mov
cmp
mov
jmp
shl
shlb
dec
leave
imul
pop
cmp
mov
cmp
int
loopne
shlb
loope
ret
xor
or
jne
sub
mov
cmpsl
or
clc
iret
out
jle
or
sbb
sub
adc
je
xchg
sbbl
test
adc
jns
dec
pop
fwait
sub
lcall
jge
cmpl
sub
mov
int3
mov
jne
mov
leave
and
push
dec
cmc
dec
cmpb
in
jmp
sbb
les
lcall
nop
out
add
pushf
and
fidivl
call
outsl
push
sbb
xchg
pop
shll
inc
out
mov
int3
or
in
or
xor
cmp
and
add
rorl
dec
or
lods
push
shlb
loopne
ljmp
aaa
add
xor
sbb
sub
pop
inc
and
aas
sti
cmp
sub
ret
movsb
add
nop
sub
add
mov
test
and
nop
ffree
jno
push
and
mov
icebp
cmpb
push
xor
ret
pop
loopne
xchg
mov
jp
xor
and
out
push
icebp
lds
shrl
iret
mov
push
adc
aam
add
add
sbb
sbb
mov
cmp
cmp
in
add
and
adc
lods
call
icebp
cmp
pop
xchg
lcall
mov
and
xchg
xor
in
and
filds
pop
jmp
push
dec
sub
int3
mov
cwtl
cmp
xor
jg
test
inc
dec
inc
cmp
jmp
bound
or
aas
dec
or
and
sbb
cwtl
test
cld
mov
mov
lock
xchg
cmp
test
push
pop
std
int
xor
pushf
mov
inc
or
setp
mov
sbb
hlt
cmp
add
jecxz
test
test
or
mov
mov
into
dec
and
and
stos
or
movsb
and
add
inc
cld
mov
add
xorl
ret
test
or
jle
scas
inc
cld
jb
test
mov
cs
mov
or
es
lea
lret
sub
ret
xchg
adc
std
cld
add
les
aam
mov
sbb
gs
mov
insl
pop
arpl
jmp
enter
cltd
pop
pop
xchg
push
jno
push
fimull
fs
mov
mov
clc
adc
outsb
mov
cli
dec
les
cmp
enter
fisttpll
jecxz
and
dec
loopne
in
fstp
shll
dec
add
out
add
icebp
inc
and
aad
push
rolb
inc
and
into
jns
or
jbe,pn
or
pop
adc
jns
ljmpw
pushf
and
or
das
mov
mov
cs
push
fadds
mov
xchg
adc
shlb
mov
or
sbb
xchg
rol
jp
call
pop
ljmp
push
aas
dec
lock
sahf
enter
push
lret
stos
sub
jmp
popa
flds
xor
sub
aam
pushf
enter
test
push
mov
jmp
push
int3
int
mov
roll
dec
lcall
std
data16
xor
inc
and
inc
add
sbb
jmp
push
div
xor
sbb
adc
adc
imul
or
pop
dec
mov
nop
push
add
push
addr16
jno
sbb
imul
pop
inc
and
add
cmp
sub
loop
fstl
rclb
sub
icebp
popa
push
dec
ret
jne
pop
jle
inc
or
pcmpgtb
stos
cld
jge
std
mov
jne
inc
jle
sbb
pop
or
add
repz
dec
mov
mov
stos
adc
dec
lret
sbb
or
cld
js
push
or
bnd
add
loope
push
ds
sub
pop
dec
add
mov
xchg
or
icebp
push
adc
inc
rorl
jmp
mov
push
sbb
call
lock
xchg
push
cs
fadds
push
dec
mov
push
mov
xor
mov
push
rclb
pusha
adc
mov
or
incl
ret
pop
mov
dec
or
mov
inc
lret
sbb
jb
cmp
xor
or
imul
inc
aam
fstpl
js
inc
pop
push
es
ficoml
sbb
push
and
jne
push
pop
add
dec
mov
pop
mov
dec
testb
jne
push
out
pop
loopne
inc
cltd
add
lock
vdivps
cmp
int3
push
jp
pop
ja
insb
push
lea
fsubl
sub
mov
imul
pop
pop
call
adc
fimull
in
push
sub
sbb
gs
xor
and
lea
mov
in
sub
or
cmp
aad
mov
mov
pop
cmc
mulb
jle
mov
mov
outsb
iret
addb
test
sbbb
cmp
xchg
add
dec
xchg
xchg
loope
mov
sbb
fimuls
call
inc
inc
or
add
fsubr
jne
jge
or
inc
and
add
push
daa
hlt
out
incl
xchg
pop
leave
in
arpl
loopne
repnz
jne
cmpl
cmp
mov
push
push
testb
and
mov
ljmp
fisubrs
rcll
bound
rolb
and
and
jno
mov
push
jp
outsb
push
jle
adc
xchg
mov
push
sub
mov
sub
leave
or
add
fsubrs
imul
lcall
or
cmc
adc
stc
sub
in
push
adc
push
pop
test
add
imul
add
cs
lock
lods
and
stos
outsl
ficompl
push
mov
loope
pusha
in
or
inc
std
test
clc
sahf
push
mov
push
fsubrl
add
add
pop
loop
dec
sbb
push
jecxz
add
inc
adc
rol
orb
ror
les
pop
push
mov
xorb
dec
sub
sbb
and
subl
cmc
in
mov
xor
add
xor
cmp
int3
add
push
mov
jnp
mov
push
cld
adc
test
mov
inc
cld
dec
jo
sub
mov
pushf
push
insl
sub
jo
outsb
and
testl
fnsave
sub
add
push
int3
int3
mov
and
mov
stos
cltd
adc
dec
mov
fwait
mov
aad
push
ret
pop
cmp
enter
cmp
mov
xchg
push
movb
rolb
bound
mov
jo
mov
cmpsl
mov
push
jmp
ja
push
jle
popa
dec
je
and
jno
inc
xchg
xchg
or
adc
mov
data16
shll
jbe
int
push
sti
inc
ljmp
jle
mov
xor
dec
xor
rol
push
ja
jo
sub
push
fwait
fs
cmpsb
iret
xor
mov
mulb
lcall
jmp
mov
mov
mov
inc
inc
incb
dec
jne
jo
push
adc
sub
rcrl
and
arpl
fwait
add
jno
roll
sbb
and
cltd
adcb
mov
cmp
lods
cmc
mov
dec
loopne
in
jmp
pusha
push
adc
dec
jb
pop
dec
sbb
push
add
shlb
inc
jmp
adc
pushf
bound
dec
push
cmp
adcb
push
adc
adc
xchg
mov
sub
lds
inc
popa
pop
mov
push
and
cmp
push
mov
popf
rorb
mov
xor
push
add
adc
add
sbbl
push
dec
push
sub
lods
sbb
add
push
mov
mov
push
frstor
or
cmp
and
fwait
adc
fisttpll
xchg
push
or
sub
cmp
sub
mov
rolb
mov
xchg
dec
mov
jne
jmp
subb
not
jp
rcrl
mov
push
sbb
movsb
sbb
in
imul
or
and
pop
sub
es
imul
je
xor
adc
loopne
add
hlt
cmp
movsb
adc
sbb
inc
repnz
or
add
or
cli
add
xor
flds
adc
pop
add
cltd
loope
fwait
cli
jne
mov
es
fsincos
in
out
adc
and
jmp
stos
mov
dec
mov
sti
xchg
ljmp
dec
scas
or
jg
sbb
cmp
je
inc
nop
clc
add
push
pop
out
sbb
mov
mov
xor
or
roll
mov
pop
cmpsb
and
cmp
push
adc
mov
add
jmp
stos
push
pushl
adcl
iret
push
rcrl
hlt
cmp
cmp
mov
and
cmp
mov
testb
dec
lods
jg
inc
mov
cmp
je
xor
sti
and
adc
dec
jmp
and
aam
js
cmp
cmp
and
addr16
lods
adc
push
aas
push
lock
mov
pop
push
jmp
push
adc
jecxz
adc
cltd
lock
push
push
cmp
movsb
in
sbb
cltd
jge
or
pushl
push
or
push
pop
stos
push
out
mov
cmp
je
aam
add
sub
adc
inc
ficompl
decl
sbb
in
pop
insb
mov
add
pop
add
enter
add
daa
mov
add
adc
xor
dec
add
iret
stos
cmp
cmp
add
add
pop
push
flds
add
sahf
xchg
mov
or
sbb
push
pop
jb
cmpb
or
or
pop
enter
or
sub
cmp
or
pop
xchg
inc
enter
loop
or
enter
or
or
in
jns
add
push
nop
addr16
push
ja
jae
inc
push
push
rsqrtps
jb
fimuls
pop
adc
fwait
sub
fdivs
adc
inc
or
mov
adc
add
lcall
adc
xchg
add
pop
adc
adc
xor
mov
push
iret
enter
push
push
pop
pop
movsl
mov
sbb
cmp
sbb
cmp
pop
enter
sbb
jb
jb
sbb
sbb
dec
in
mov
jb
sbb
sbb
jns
or
cmp
sbb
sbb
and
pop
pop
aaa
pop
incl
add
sub
jae
mov
iret
cmp
xchg
pop
xor
adc
inc
jbe
mov
call
loopne
push
in
push
in
jno
repnz
sub
shr
jns
push
ret
adc
aad
cmp
enter
mov
cmp
fwait
out
roll
sbb
add
fmulp
dec
call
nop
adc
dec
dec
cwtl
jmp
xor
ljmp
jmp
jmp
incb
in
in
cltd
sbb
out
repnz
sahf
enter
out
out
jge
inc
enter
out
pop
lock
imul
in
icebp
icebp
ud1
sahf
repnz
std
repz
hlt
hlt
cmp
pushf
rorl
pusha
hlt
fwait
mov
cmc
cmc
inc
jg
xor
cmp
pop
testl
cmp
clc
clc
inc
push
fsubs
clc
cltd
adc
iret
in
repnz
stc
lock
cli
cli
sbb
sbb
iret
sti
sbb
jb
jns
stos
cld
cld
cld
je
rol
aaa
cld
push
setle
jns
inc
ss
xor
sbb
or
jns
adc
ret
inc
or
and
jo
add
rorl
or
rcrl
or
es
jecxz
xchg
pop
add
std
sti
in
in
push
in
fdiv
inc
bound
daa
push
sub
sbb
out
xor
call
jns
sti
sub
dec
jae
and
lret
add
jmp
in
add
cli
popf
cli
dec
in
rcrl
push
fsubs
out
cltd
push
lock
and
mov
cli
xchg
inc
add
sbb
pusha
xorl
cltd
sar
add
stc
and
jns
lcall
pop
mov
sbbb
inc
repnz
out
clc
dec
push
cmp
cmp
mov
cltd
mov
sub
orl
nop
xchg
jmp
cmp
sub
sub
cld
sub
mov
fldl
xchg
pop
icebp
mul
pop
rolb
scas
idivl
or
mov
out
out
and
insb
out
out
and
mull
negl
sti
imul
ljmp
negb
mov
imulb
inc
add
sbb
push
imul
jns
xor
sbb
pop
repnz
sbb
movsl
test
mov
mov
pop
xchg
cmc
les
pop
scas
dec
push
cmp
div
idivb
jmp
xor
iret
in
add
clc
clc
jecxz
push
xor
stc
popa
cmp
rclb
jno
les
jne
and
and
adcb
data16
test
idivl
jo
rolb
pusha
adc
shll
test
loope
es
loope
push
loop
dec
push
jno
scas
repz
sub
repz
jno
imul
cmp
pop
andl
push
adc
push
sbb
rclb
cmc
call
repnz
repnz
sbb
pop
in
in
cmc
call
repnz
addl
sbb
cmp
icebp
js
divb
dec
push
and
dec
pop
je
push
icebp
cmp
sub
cmc
cmc
dec
and
mov
lock
test
lock
repnz
lock
in
aaa
xchg
stc
cmc
jne
in
xlat
mov
xor
jmp
inc
mov
push
lock
js
pop
and
test
ss
jecxz
imul
sub
out
jmp
addr16
ret
cmovno
cmp
pop
in
push
add
add
bound
jb
stos
add
and
adc
jp
jnp
inc
and
xchg
adc
cmp
or
push
xchg
daa
add
jmp
and
and
xchg
mov
or
cltd
loop
inc
out
fwait
in
add
insb
push
loopne
add
push
inc
fldcw
push
jb
addr16
shrl
dec
mov
jae
xor
fwait
int
mov
xchg
push
outsb
les
insb
ds
repz
jns
mov
test
jno
ljmp
push
push
jmp
rorb
or
xor
inc
xchg
loopne
and
mov
mov
xchg
jp
jo
mov
sar
add
cmp
ja
call
into
dec
je
movb
adc
adc
popa
adc
notl
shld
cli
or
add
jmp
out
inc
push
rorb
je
or
lret
into
push
cld
jb
sar
fldt
into
jmp
mov
dec
mov
mov
dec
dec
cmp
out
adc
xlat
or
movsl
inc
dec
sbb
dec
mov
or
add
mov
lods
xor
pop
or
xchg
xchg
sub
jae
cs
mov
push
stc
cs
ljmp
xor
mov
cmc
daa
adc
add
jg
les
and
addl
mov
mov
ret
sub
lds
fstpl
mov
add
leave
ret
aaa
adc
div
fbstp
add
cmp
pop
and
push
clc
jg
rcrl
lock
or
fld
fnstenv
filds
adc
push
push
std
xorb
jbe
jmp
or
or
xor
jae
cmp
mov
adc
rolb
jmp
pop
xor
fstpt
das
fcomp
adc
testl
jne
fstps
leave
pop
testl
or
or
arpl
or
or
lods
mov
or
js
adc
add
pop
mov
fists
push
xor
cmp
out
in
js
cmp
rclb
push
neg
clc
mov
mov
ss
sbb
lret
mov
sbb
sbb
ja
outsl
mov
adc
shr
inc
push
xor
out
daa
shr
rcr
shr
rcr
or
jne
lock
enter
jbe
out
shll
cmp
pushf
pop
cmp
mov
in
jbe
dec
cwtl
xchg
dec
jne
fsub
add
cmpsl
mov
pop
pop
pop
imul
sub
pop
or
and
out
xchg
mov
add
enter
xchg
adc
push
cmp
fmuls
cmp
push
jno
or
mov
test
dec
mov
adc
mov
push
add
and
inc
pop
adc
repz
andb
lock
popa
cmp
add
shrl
pop
mov
daa
pop
xor
das
push
xchg
pop
pop
pushf
fcoml
sbb
movsb
push
stc
sbb
and
fidivl
sub
negl
or
push
cmp
add
push
sti
pop
mov
rcrb
and
or
mov
js
push
insb
xor
dec
ret
test
pop
cmp
sbb
test
add
push
sahf
or
mov
adc
ret
je
orl
or
xor
insb
or
cmp
mulb
pop
sub
mov
mov
mov
push
mov
xchg
cmp
sbb
aad
dec
mov
insb
pop
fdivl
push
xchg
jne
add
loope
call
jp
adc
sbb
mov
or
or
sub
mov
call
push
hlt
adc
pusha
xchg
mov
or
mov
mov
and
pop
cmp
sti
push
pop
lock
add
cmp
loopne
mov
shl
cmpl
adc
mov
mov
add
mov
dec
in
adc
hlt
jmp
or
jmp
add
xor
mov
int3
sub
mov
jmp
fisttpl
sti
std
dec
adc
shrl
cmp
or
or
pop
mov
icebp
add
pop
sbb
add
in
popa
rcrl
je
adc
cwtl
sub
or
andl
inc
or
push
pop
ret
jno
imul
test
inc
pop
loope
xorb
push
pop
jl
sbb
sbb
loopne
dec
or
dec
rorl
shl
shll
and
rorl
jl
cwtl
imul
notl
pop
pop
shll
push
icebp
xchg
rcrb
push
xor
out
ficomps
pop
cld
pop
sbb
daa
and
jbe
insb
dec
mov
or
repnz
lods
mov
push
mov
les
and
and
sbb
sub
js
push
push
xchg
pop
add
sub
mov
and
divl
daa
mov
js
incl
ret
mov
inc
or
in
aad
cli
add
and
push
push
mov
pop
xchg
adc
push
int
adc
mov
sbb
add
cmp
and
jo
pop
dec
mov
pop
dec
mov
je
and
xor
in
push
and
cmc
add
out
out
dec
addl
push
sar
add
mov
push
orl
jmp
sarb
outsl
jns
inc
inc
fistpll
inc
pop
cli
xlat
popa
lea
mov
cmp
jp
and
ret
fimull
fidivl
rorb
decl
sti
push
add
push
cmpsb
js
mov
sbb
loope
inc
or
in
and
mov
and
addr16
or
adc
and
js
in
das
xchg
je
add
notl
cmpb
ja
lret
subb
adc
adc
loopne
aam
xchg
lods
xorb
mov
rorb
aam
lea
inc
push
inc
xorl
loop
outsb
rcrl
cmp
ret
xor
or
insb
std
add
xchg
popa
and
mov
jnp
jecxz
scas
cmp
lea
andb
add
or
adc
jg
aad
xchg
pop
imul
jno
sub
fsubl
sbb
xlat
into
lea
mov
rolb
daa
or
dec
fcoms
push
or
jp
xchg
xor
sbb
iret
jae
ss
in
mov
or
or
jb
mov
add
lock
ja
mov
jmp
je
jmp
inc
cmpb
je
mov
cmp
je
cmp
je
cmp
jne
arpl
add
jge
or
sub
jmp
out
cmp
je
outsl
outsb
int
jmp
pop
or
je
aaa
je
dec
dec
jns
fnsave
pop
gs
rolb
dec
inc
jne
mov
jmp
cmp
jne
pop
and
pop
jmp
sbb
lret
push
jmp
inc
push
jns
inc
lock
sbb
adc
add
xchg
sub
cmp
or
xor
and
adc
shlb
daa
add
adc
arpl
mov
sbb
mov
and
lods
pop
mov
or
loopne
or
jmp
push
xlat
sbb
jmp
push
mov
mov
jno
dec
js
popf
jge
imul
xchg
mov
je
rorb
or
push
mov
sti
push
mov
mov
adc
push
or
inc
push
cwtl
mov
fwait
xor
aas
bnd
je
jmp
mov
in
fdivrs
idivb
cltd
xchg
stos
daa
pop
mov
jns
pushf
gs
sbb
pop
pushl
andl
push
out
cs
stos
enter
je
sysenter
mov
cmp
pop
incl
push
outsb
ljmp
dec
jp
std
mov
adc
inc
jecxz
shl
or
sbb
and
or
outsb
arpl
mov
iret
mov
xchg
add
sbb
push
push
bound
add
sub
shlb
xor
rcll
inc
or
lea
inc
adc
and
add
cmpb
les
inc
mov
xorl
scas
shl
pop
add
pop
fbstp
ficomps
sbb
jo
cmpb
mov
inc
sbb
cmp
mov
and
cmp
ja
leave
das
adc
addr16
jle
add
jge
sub
cmp
jmp
les
cmp
jb
lock
adc
pushf
pop
fwait
pop
shll
fnstenv
mov
xor
or
cmp
sub
out
cmp
inc
ja
cmp
shrl
repz
pushf
adc
and
push
pop
xchg
inc
fildl
inc
ljmp
fs
sti
daa
in
inc
test
lcall
mov
jecxz
mov
fmull
in
fisttpl
cmp
push
stc
adc
jne
add
ss
xchg
add
loopne
jne
mov
jnp
push
in
mov
aaa
icebp
push
adc
inc
push
push
add
or
stos
fistpll
adc
and
jmp
xor
push
cmp
cmp
sbb
dec
loop
adc
xor
pop
sbb
daa
jno
les
enter
rol
jecxz
jne
sub
js
mov
insl
xor
insl
push
pop
fadds
jmp
stos
roll
or
and
pop
sbb
in
pushf
pop
addr16
mov
inc
sahf
out
or
ja
or
xchg
inc
mov
sub
clc
clc
scas
xor
and
dec
and
add
inc
mov
pop
ljmp
sub
fisubs
cs
jb
jp
pop
sbb
les
xchg
pusha
je
sbb
jle
jge
scas
repz
aaa
add
popa
mov
cmp
and
sbb
enter
fsts
push
mov
cmpsb
inc
mov
stos
sbb
inc
or
js
and
aad
pop
dec
aad
imul
js
or
sbb
sub
jnp
mov
sub
ljmp
movsb
jns
sub
js
adc
push
addb
cmp
and
xor
pop
loopne
push
or
je
testb
jo
test
sbb
repz
sbb
xchg
dec
imull
lock
mov
jg
lcall
adc
lahf
add
push
es
ret
xchg
mov
insl
sbbl
imul
adc
push
xor
pusha
add
inc
push
cmp
sbb
jnp
push
test
sub
dec
loopne
dec
mov
xchg
cmp
or
pop
jnp
cmp
rorb
aad
and
cmpl
or
pushf
rcll
or
es
jo
scas
mov
into
jo
sbb
cmp
fimull
orl
xor
bound
fadds
sub
pushf
orl
push
lock
mov
cld
decl
js
lret
sbb
or
push
loopne
stos
dec
mov
cmovl
loope
add
mov
jne
mov
mov
cmpsb
push
inc
fdivr
outsb
jmp
sbb
jle
ja
pop
add
cld
jge
mov
pusha
xor
and
dec
lahf
mov
mov
xchg
xlat
test
outsl
pop
aam
rorb
dec
add
test
je
cmp
lea
push
movsb
pusha
sti
or
subb
shlb
pop
cmpb
mov
jle
cmp
jb
xor
sbb
movsl
inc
test
js
jnp
add
add
or
out
ror
loop
je
sub
cmp
mov
fdivr
add
sahf
out
cltd
mov
in
xor
xor
mov
dec
popf
cwtl
pop
rclb
andb
sub
mov
dec
ds
mov
add
shll
shrb
inc
and
clc
imul
ret
cmp
bound
or
rorl
or
add
neg
inc
inc
movsb
sbb
jmp
je
xor
inc
mov
fdivs
and
adc
je
mov
or
jl
jecxz
jle
pop
pop
rcll
dec
ficoml
and
mov
and
dec
jmp
push
test
mov
ljmp
jns
pop
test
jns
dec
cld
inc
jmp
xor
pop
and
test
loop
inc
sbb
into
mov
add
fwait
imul
aam
rolb
sbb
cmp
cwtl
out
mov
pop
lock
pusha
rclb
push
jns
fsubl
jle
fcompl
popa
or
addb
push
add
sarl
js
hlt
movsl
test
sub
jo
pop
inc
aas
mov
outsb
call
paddw
cwtl
std
mov
cmp
or
jns
jl
adc
ja
jmp
pop
sbb
cld
sbb
adc
pop
mov
inc
shll
pop
dec
push
sbb
jae
pop
xchg
pop
in
mov
or
sarl
or
lea
test
pusha
add
scas
add
scas
push
push
sub
jbe
pop
ds
fisubrl
inc
mov
lods
insb
rol
jne
push
adc
xchg
andb
sbb
add
sysexit
dec
or
iret
fdivr
ja
and
dec
cli
popf
push
test
out
pushl
leave
in
add
bound
orl
pop
mov
jecxz
loopne
movsl
loope
stc
or
pop
leave
or
das
sbbl
sub
in
inc
jae
or
jae
shld
shl
ret
sahf
jecxz
loop
repnz
shl
ret
andb
adc
arpl
add
jne
mov
lret
add
sbbb
mov
xor
inc
xor
pusha
cmp
dec
repnz
outsb
xorps
mov
push
mov
add
cs
ret
pop
push
incl
push
push
xchg
cmp
lea
stc
outsb
mov
lods
repz
or
xchg
xchg
cmp
cmp
pusha
or
xchg
push
sbb
sub
and
popl
mov
cmp
pop
test
das
pusha
mov
lods
add
mov
push
xchg
inc
pop
pop
mov
push
adcb
sub
sti
mov
dec
fucom
mov
add
stos
and
mov
fadd
push
cmp
push
inc
rolb
leave
xchg
xorl
mov
roll
cmp
xchg
mov
add
rorl
pusha
jbe
jb
mov
mov
mov
push
pop
and
pop
pop
adc
dec
pop
pop
rolb
ja
add
adc
mov
rep
jmp
push
mov
mov
jb
add
enter
dec
fxch
sub
xchg
cmp
sahf
testl
cli
pop
mov
mov
cmp
or
scas
adc
jl
int3
lea
dec
add
pop
pusha
push
movl
dec
cmp
jns
jnp
or
out
lock
call
cld
lahf
out
enter
in
inc
in
iret
repz
call
hlt
cmp
repz
clc
clc
cld
jle
push
pop
sbb
clc
iret
imul
fsqrt
jmp
xor
mov
nop
inc
pop
popa
mov
pop
sti
and
ret
push
andl
push
lea
jl
adc
or
into
mov
out
mov
neg
adc
pusha
xchg
pop
push
inc
xchg
stc
sub
fidivrs
push
call
add
mov
add
push
adc
inc
push
out
push
add
lods
pop
push
mov
cmp
pop
add
ljmp
fs
push
lahf
out
sahf
je
test
sahf
pop
aaa
sbb
sbb
sahf
out
sahf
adc
adc
or
inc
sahf
out
or
add
clc
mov
or
push
fsubr
xchg
xchg
xor
test
and
daa
add
mov
and
lcall
andl
xor
subb
movsl
popf
cbtw
sbb
or
fsubl
gs
fcomps
int3
in
mov
xor
clc
or
add
in
test
movsl
shrb
jp
push
dec
add
xor
mov
call
sahf
mov
cld
adc
sub
cmp
jmp
popa
pop
inc
inc
in
mov
fsubrs
and
jne
lea
fmull
orb
mov
adc
cmp
and
cmpb
push
adc
jge
inc
call
or
nop
test
add
jns
or
sbb
inc
cltd
push
and
add
cltd
xchg
out
jmp
fadds
ror
sarb
test
mov
fadds
sub
and
mov
jbe
and
inc
fwait
xchg
lcall
notl
enter
mov
push
adcl
dec
push
push
pop
add
jl
insb
je
fwait
mov
inc
mov
int3
fwait
or
mov
xchg
add
out
jge
cmp
cs
push
cmp
mov
or
lahf
fsubrp
daa
mov
cld
ret
dec
xor
pop
add
or
ret
dec
or
mov
dec
push
push
or
call
mov
mov
scas
stc
lahf
dec
lods
sub
arpl
movsb
add
push
jo
or
push
lods
or
cmpsl
push
push
cmp
notl
jmp
es
shrb
mov
dec
fstps
fistpl
out
movl
shrb
test
xchg
and
addl
xchg
sub
pop
cld
push
jo
xchg
fmul
jbe
inc
or
add
rcl
mov
nop
lods
arpl
mov
and
aas
sub
push
or
or
bound
stos
pop
arpl
sbb
mov
and
pushf
rol
and
clc
add
dec
sub
add
enter
cmp
ffreep
add
dec
mov
je
negb
add
or
and
rorb
icebp
jne
test
pop
push
adc
sub
pop
xchg
adc
shrb
cmc
mov
mov
and
xor
inc
and
jb
inc
dec
mov
cmp
sbb
push
js
xchg
jno
dec
add
adc
out
sahf
ja
jbe
and
cmp
cmp
dec
adc
lds
add
cmp
and
insl
jge
insl
dec
mov
dec
xor
and
shrl
mov
dec
add
lds
xchg
xchg
adc
hlt
or
push
hlt
xor
sbb
mov
add
es
mov
push
clc
and
jo
inc
jbe
mov
pop
outsb
es
adc
sub
test
shr
mov
pushf
out
pop
push
pop
ja
mov
test
xchg
and
sub
mov
xor
dec
sub
cltd
movsb
jb
mov
sahf
or
push
jo
fptan
lock
dec
enter
lahf
inc
lcall
or
and
and
xor
pop
ljmp
mov
mov
imull
ljmp
js
add
and
jbe
push
mov
xchg
enter
sub
test
sub
lret
out
hlt
dec
sbb
add
test
xchg
adcb
xchg
es
pop
sub
add
insb
pop
je
shrl
mov
xor
xchg
and
stos
pusha
jl
xor
enter
sub
dec
mov
cmp
ss
sahf
sub
add
iret
in
pushl
out
aaa
imul
sbb
push
cli
xchg
or
pusha
rolb
mov
shll
and
int3
stos
aas
fdivrl
pop
inc
pushf
loopne
into
fmull
clc
dec
add
add
or
push
mov
add
imul
shrl
inc
push
pop
pop
sbb
push
rcl
add
xor
ret
mov
loope
push
add
hlt
cld
rclb
mov
cli
or
lea
dec
in
test
lea
cmp
or
js
sub
lret
ljmp
push
fsub
add
aad
inc
push
jne
push
addr16
adc
movsb
jb
xchg
xchg
xchg
test
es
adc
push
test
shll
shlb
mov
or
ja
or
arpl
add
pop
cmp
imul
imul
test
je
cmp
lea
cli
pop
dec
sbb
mov
inc
fiaddl
xchg
adc
mov
cmp
sub
orb
adc
repnz
pop
rclb
xor
pusha
xor
xor
push
bound
ja
xor
insb
sub
pop
fbstp
imul
outsb
incl
lea
mov
add
inc
cwtl
jg
dec
jno
sub
inc
sbb
dec
je
dec
jne
arpl
in
mov
ss
lea
cmpb
mov
movsl
shrb
inc
xor
push
pusha
cltd
xor
hlt
pop
and
int
in
fs
or
push
outsl
je
js
dec
pop
mov
sbb
inc
mov
push
je
or
ja
sub
and
sarb
jae
mov
lea
lea
or
cld
loope
push
mov
cmp
out
rorl
xchg
mov
data16
pop
ret
pop
sub
mov
popf
jne
dec
push
je
stos
jne
data16
cmp
jne
adc
push
sub
sbbb
dec
or
shl
mov
in
lcall
rcr
fnstenv
jb
jmp
js
lds
aas
mov
mov
xchg
add
add
ljmp
cmp
scas
cld
mov
adc
pop
xor
inc
or
pop
mov
addr16
aaa
push
mov
lret
data16
mov
or
and
lds
sahf
insl
xor
xor
push
test
movb
inc
jmp
sub
jne
aam
inc
add
dec
ret
mov
dec
cmp
sub
jmp
add
cs
out
mov
or
xchg
inc
cmc
jl
push
lea
ret
pop
mov
or
sbb
lret
cmpb
add
in
das
or
pop
mov
add
mov
rorw
ret
mov
or
jb
in
or
jae
arpl
mov
pop
add
fcoml
inc
push
dec
mov
std
and
gs
or
and
sub
sub
sub
mov
xor
xor
jmp
shll
sbb
xlat
sbb
ds
imul
cmp
push
aas
sub
inc
mov
rolb
aaa
idiv
push
iret
insl
sbb
daa
adc
sbb
nop
inc
push
dec
daa
pop
movsb
pop
jmp
les
add
pop
push
fwait
jo
push
fiadds
mov
jle
mov
add
and
push
sub
popa
loop
popa
push
imul
xor
fisttps
mov
or
jo
arpl
jae
adc
mov
or
or
jne
mov
or
jnp
and
cwtl
test
fisttps
test
xor
sub
xor
test
cmp
in
fs
cltd
sbb
jle
jl
push
andb
add
test
shlb
inc
and
stos
push
std
sbb
icebp
xchg
mov
mov
or
and
jae
jb
sbb
inc
in
sub
test
adc
push
rcrb
test
mov
push
push
xor
adc
push
fsubl
arpl
sbb
out
jmp
addr16
inc
cmpb
mov
jne
lea
push
adc
or
ljmp
fadd
jg
and
cmpb
jne
mov
inc
jmp
and
data16
cmp
pop
add
mov
cmp
je
inc
cmp
jae
cmpsl
cmp
mov
jmp
ret
cmp
ja
sub
jg,pt
sbb
call
mov
pop
lock
jecxz
push
inc
add
dec
jne
xor
nop
cltd
popf
popf
mov
enter
cmp
inc
cmp
mov
cmp
pushf
or
add
mov
mov
xor
pop
cs
push
neg
subb
push
pop
add
xor
incl
pop
cmp
je
imul
pop
je
dec
or
add
mov
cmp
outsl
out
mov
shl
sub
cmp
inc
xlat
or
scas
add
and
mov
add
nop
inc
adc
jp
cmp
test
dec
jne
imul
in
pusha
movsb
mov
clc
js
hlt
add
nop
adc
push
dec
test
addr16
sub
add
or
inc
push
cmp
je
adc
pop
mov
outsb
add
jne
push
icebp
mov
jmp
jge
cmp
or
jmp
jmp
andb
cmp
or
jmp
mov
pusha
xchg
add
test
imul
push
js
rcrb
loop
adc
cmpl
xor
loopne
adc
pop
lods
or
mov
push
pusha
imul
inc
cmp
cld
roll
neg
mov
orl
roll
xor
push
jge
shll
test
or
daa
dec
or
dec
jo
dec
inc
sub
or
ss
cmovne
and
xorb
push
bound
movsl
test
or
mov
jbe
mov
lds
and
cmp
xlat
cs
adc
aaa
add
ds
data16
cmpl
stc
inc
popa
jmp
test
push
in
mov
lahf
enter
ficoms
push
pop
push
sbb
mov
insb
frstor
lock
sbb
xor
scas
cmp
jne
sarb
dec
aad
push
adc
push
orb
subb
mov
ret
roll
or
push
sub
jmp
push
push
jmp
push
rcrl
pop
sahf
adc
insb
mov
push
cmp
pop
push
out
int
mov
out
shll
cs
and
mov
lcall
sub
mov
pusha
jns
lret
clc
xor
push
inc
cli
ss
imul
dec
mov
or
mov
adc
and
ss
mov
or
add
lret
decb
push
jl
inc
push
cmpsl
push
test
or
jmp
fcmovne
push
adc
jg
xor
es
xchg
ja
push
push
push
shlb
jae
sub
pop
lcall
cltd
adc
aaa
xchg
shl
sti
lea
push
mov
outsb
data16
mov
ret
add
xchg
xchg
push
inc
loope
out
loop
cmp
add
push
lea
mov
sub
sbb
insb
inc
and
jl
cli
push
and
pop
add
adc
push
jg
clc
or
add
or
mov
jns
dec
or
inc
dec
or
pop
xchg
fs
rclb
outsb
loop
jbe
dec
sarl
outsl
jmp
inc
xor
ss
or
adc
push
int3
and
jne
push
add
mov
sbb
pop
inc
outsb
subb
mov
or
jne
mov
cmpsb
pop
inc
mov
jle
andl
add
adc
add
test
lcall
mov
or
mov
push
cltd
cld
jle
sub
adc
rclb
fsubrl
fwait
or
icebp
call
push
dec
sbb
inc
hlt
imul
mov
lods
dec
in
shr
or
mov
bound
mov
mov
mov
leave
inc
insb
inc
lret
xor
leave
adc
and
jo
mov
mov
cmpsb
iret
in
pop
and
fldt
push
dec
movsl
insl
enter
faddl
rcrb
mov
loope
in
loopne
add
push
nop
outsl
test
fdivl
xchg
pop
pop
mov
inc
int3
add
sub
in
iret
jle
sub
push
sbb
rorl
and
es
sbb
inc
mov
les
js
xor
mov
push
push
jno
inc
fadds
imul
add
xchg
sub
ds
enter
cmp
sbb
cmp
lcall
aas
add
push
jb
leave
mov
mov
test
and
inc
call
add
mov
fdivrl
and
mov
aam
sarb
std
pushf
test
sbb
popa
aaa
adc
sub
push
add
xchg
and
push
push
cmp
add
adc
fidivs
mov
xor
cmp
pop
mov
mov
jmp
adc
lret
mov
sbb
out
fdivs
loopne
mov
imul
adc
ds
sub
cmpsl
or
fsubl
cmovo
jecxz
dec
in
test
push
push
push
pusha
cmpsl
mov
mov
int3
cmpb
dec
inc
loopne
jne
movsl
mov
sbb
rclb
aam
je
cmp
jl
cmp
jg
inc
jmp
insw
or
hlt
pop
inc
jbe
test
inc
fdivs
imul
sti
jge
pop
inc
jo
jge
aas
sbb
mov
pop
test
je
notl
mov
mov
popa
jb
adc
xorl
mov
test
sub
daa
jne
xor
fmul
adcl
lods
addb
mov
clc
imul
inc
test
outsb
inc
cmpsl
xchg
movsb
pop
idiv
pop
lea
mov
call
push
andl
xchg
lea
mov
xor
ret
cltd
sbb
sarb
mov
add
lock
xlat
imul
ret
lea
sbb
stc
sahf
js
sub
add
clc
aaa
inc
push
sbb
lea
or
mov
lock
cmp
mov
cmp
insb
push
or
cmp
lock
pop
jmp
xchg
sbb
adc
xchg
sbb
jns
mov
xor
jecxz
adc
jne
imul
add
inc
dec
and
and
leave
push
adc
movb
xor
and
or
in
dec
sbb
xor
cmp
dec
cmp
popf
add
jg
ltr
decl
sbb
sub
lahf
adc
mov
sub
out
push
dec
push
or
lock
leave
adc
and
pop
xchg
sbb
lods
in
push
ret
loopne
or
cmp
xchg
mov
popf
fs
notl
push
mov
xchg
fstpt
inc
or
and
and
and
sahf
imull
sbb
and
xor
popf
out
pop
push
push
jmp
pop
push
push
push
push
sbb
pusha
stos
shl
int3
or
and
add
into
cmc
in
ds
cmc
pop
enter
jmp
mov
inc
adc
push
sbb
dec
lcall
cmp
push
mov
or
hlt
or
hlt
push
pop
mov
mov
and
jo
mov
mov
sahf
leave
js
pop
push
push
jnp
daa
cld
mov
xor
push
das
stos
dec
mov
scas
mov
jle
int
xchg
hlt
jge
cmp
dec
sarb
push
jle
jge
sub
sbbl
imulb
fstpt
push
jle
aad
lret
call
add
insb
sub
or
jmp
jne
mov
add
je
sbb
shll
ror
mov
jo
js
xchg
xchg
shlb
push
adc
int3
and
sbb
arpl
ret
enter
mov
clc
inc
dec
add
mov
xorl
mov
enter
adc
mov
xchg
idivl
sbb
jo
out
sub
push
or
ret
mov
dec
jns
jmp
xor
push
insl
es
xor
enter
add
adc
push
inc
push
push
mov
mov
dec
fimull
or
lcall
lcall
cmp
nop
push
or
push
add
stos
jo
sub
push
or
cmp
mov
add
mov
lods
popa
shr
bound
mov
and
mov
push
shl
aad
dec
push
out
daa
ret
sbb
sub
mov
decl
inc
dec
jne
lea
or
jbe
pushf
es
in
add
add
or
test
mov
push
inc
push
mov
aam
scas
hlt
mov
cmp
xor
and
xorb
push
adc
xchg
or
jp,pt
jno
mov
inc
pop
shrl
xchg
fdivs
fdivr
ficoml
push
push
mov
dec
mov
sbb
push
push
add
inc
cld
mov
xor
imul
test
je
orb
mov
sti
xchg
out
inc
adc
mov
ret
or
movb
mov
mov
xor
xchg
or
rorb
cmc
lahf
idiv
sbb
lret
add
jmp
push
and
add
and
and
jmp
or
adc
ret
ret
cmpsl
dec
mov
pop
push
clc
sti
clc
mov
outsb
jecxz
test
insb
add
ja
test
mov
dec
ds
cmp
test
adc
and
push
xchg
lret
je
mov
loope
ja
mov
mov
push
cmp
paddq
mov
jmp
xchg
or
jno
aam
icebp
pop
arpl
jne
mov
testb
movl
std
jne
pusha
fisubl
in
jmp
sub
add
add
jmp
inc
inc
mov
repz
sub
xor
sbb
popa
loopne
mov
andb
jo
loopne
shlb
in
or
mov
sti
rorb
rol
mov
repz
mov
fdivrl
or
std
pushf
jo
push
jmp
cmp
loop
movsl
data16
popf
xchg
out
and
xor
inc
jmp
push
inc
rolb
jnp
rcr
decb
push
call
or
jp
out
lahf
lea
mov
test
loopne
jmp
pop
leave
mov
inc
lea
xor
loop
mov
aaa
jmp
add
in
dec
loopne
sub
icebp
std
std
loope
fs
or
or
lcall
xor
cmpsb
inc
inc
mov
bound
push
shrl
inc
movsb
rcr
cmp
loopne
xorb
xor
sbb
mov
push
mov
loopne
or
adc
mov
inc
mov
loopne
mov
inc
inc
inc
dec
cmpsb
repz
mov
fildl
pop
hlt
ds
jl
sbb
mov
push
pop
sarb
dec
inc
push
mov
inc
or
inc
dec
jne
xchg
inc
mov
mov
lret
add
gs
jnp
stos
lds
jmp
cmp
sbb
and
loopne
adc
or
outsb
int
jmp
push
or
push
and
mov
mov
inc
mov
xor
movsl
andl
adc
fdivl
imul
nop
sub
dec
inc
ds
pop
mov
push
add
add
ret
pop
push
dec
add
or
and
dec
mov
push
or
xor
loopne
mov
enter
icebp
std
outsb
lret
cmp
inc
jmp
xor
dec
xorb
std
sbb
mov
ret
add
repz
ret
ss
or
adc
mov
pop
js
lahf
mov
jmp
xchg
jmp
and
xor
mov
cmp
jl
nop
loopne
push
andb
orl
scas
cwtl
es
and
call
and
mov
dec
jnp
inc
outsl
cmp
es
pop
cmp
jne
popf
loopne
imul
pushl
imul
push
pop
inc
mov
out
pushf
push
push
sbb
inc
mov
sbb
sub
inc
xchg
int3
mov
mov
and
cmpsb
jne
adc
pop
mov
jnp
pop
cmp
pop
push
sbbl
inc
fldt
mov
out
jle
or
push
cmp
idiv
cmpl
add
or
shlb
test
lds
jne
xchg
xchg
lret
xor
push
dec
mov
sti
imul
cmp
rorb
pop
aaa
mov
cld
mov
push
pop
ret
jo
xorb
sbb
cmc
shll
mov
adc
push
inc
sub
xor
push
fimuls
sbb
adcb
push
or
and
and
loop
bound
xor
sub
cmp
jno
ja
in
sbb
loope
enter
xor
pop
and
lock
cmp
and
add
lea
mov
into
xchg
dec
jmp
xchg
clc
mov
retw
push
inc
jo
cmc
loop
or
mov
mov
test
lods
aam
mov
jns
int
loopne
subb
sub
pushf
adc
adc
push
lea
clc
insl
add
mov
jg
adc
jne
pop
pop
sub
fisubl
punpckhbw
fdivl
jle
push
jb
icebp
xor
cmp
jne
sbb
sbbb
scas
xchg
xor
fstps
or
daa
mov
pop
inc
call
push
lea
orl
jne
fiadds
clc
fdivr
loope,pn
push
push
xor
jne
out
or
testb
cmp
jb
ss
jmp
add
adc
and
ds
push
mov
call
mov
into
daa
inc
outsb
push
pop
and
cs
dec
xchg
and
nop
pushl
mov
mov
xor
push
push
push
pop
fnstenv
cmp
ds
popa
and
or
cli
rorb
push
push
pusha
dec
jecxz
sbb
and
js
movb
sbb
mov
das
rorb
xor
push
jne
andb
add
js
mov
popa
xor
cmp
cmp
and
aas
dec
push
add
fstl
jae
jo
adc
xor
into
clc
jbe
movsl
mov
xchg
or
lea
stc
push
fwait
mov
negl
lock
ljmp
mov
lea
es
sbb
mov
sub
or
andl
push
mov
pop
mov
push
cmp
imul
nop
mov
cmpsb
xlat
mov
jb
sub
push
add
mov
push
rcll
push
arpl
and
adc
adc
imul
pusha
adc
icebp
xlat
pop
add
int3
ljmp
lea
add
inc
stc
push
push
pop
adc
push
outsl
out
mov
push
cmpb
push
cmp
sahf
mov
loope
sub
test
push
pop
fcomip
and
add
daa
rcrl
sbb
xor
jnp
mov
punpcklbw
imul
mov
adc
cli
sub
addr16
enter
movsl
dec
sub
sbb
sub
sub
push
les
insb
aas
pop
outsb
lahf
int3
in
in
pop
inc
inc
sub
lock
xor
jb
adc
mov
addl
movsl
adc
add
fwait
lds
ret
sbb
call
adc
add
dec
mov
popf
push
cmp
mov
in
lea
pop
jnp
popl
repnz
add
push
stos
mov
push
adc
adcl
add
jge
shlb
mov
sbb
ja
mov
push
dec
pop
sbb
test
inc
mov
add
lods
repz
mov
cli
sbb
pop
inc
or
roll
leave
lods
mov
leave
cmp
pop
add
pushf
into
ret
andb
push
inc
cmp
push
lret
push
mov
xor
jl
push
mov
cld
mov
nop/reserved
mov
jge
je
icebp
loopne
movsb
sbb
adc
cmp
sbb
or
sbb
dec
cmovno
inc
push
icebp
loopnew
or
and
dec
and
lea
adc
sbb
xchg
pop
and
or
insl
xchg
fnstsw
jle
inc
or
ficompl
rolb
ss
jl
or
xor
ss
xchg
adc
mov
jne
test
dec
push
ficoms
sub
add
push
push
inc
repz
and
mov
dec
out
and
in
int3
test
jl
shrb
push
mov
dec
xor
jb
ret
jbe
push
adc
stc
lods
movsb
aam
lahf
enter
dec
ret
in
lcall
cmp
cmpsl
ret
ret
mov
or
or
jmp
cmpl
sub
shl
scas
cmp
int
xor
cmpsb
adc
xor
or
adc
arpl
rcrl
sbb
mov
roll
mov
js
adc
fnstsw
xlat
nop
subl
addb
pop
les
adc
aad
jl
push
negl
stos
and
dec
movsl
fnstsw
add
fdivl
scas
mov
test
push
push
in
pop
jecxz
popf
mov
mov
xor
dec
cmpb
adc
lods
adc
enter
cmc
sbb
sbb
test
out
xor
jne
adc
jns
cmp
jp
inc
cwtl
insl
popf
lock
cmp
jge
sub
lret
cmp
mov
adc
or
test
ja
add
dec
in
and
adc
loopne
jmp
movb
mov
addl
imul
aas
push
inc
or
add
pop
outsb
adc
add
roll
xorb
and
adc
push
push
push
xchg
clc
cmp
in
mov
js
mov
sbb
icebp
rolb
cmpsl
add
insl
test
lock
mov
dec
mov
xchg
in
adc
rorb
pop
mov
test
js
add
mov
mov
and
orl
sub
fsubs
fs
dec
js
shr
sbb
insb
inc
les
out
and
insb
or
into
dec
or
lock
ret
or
and
sbb
ret
or
xor
imul
ret
dec
sub
imul
sub
hlt
js
xor
mov
loope
cmp
inc
sbbb
ljmp
sbb
enter
sub
inc
fldenv
or
pop
jmp
shrl
out
adc
lods
rol
or
out
xchg
ret
repz
jnp
lods
loopne
insb
lea
inc
cmp
ja
push
and
lea
inc
cmp
push
dec
lods
shll
inc
data16
ljmp
inc
pushf
add
sbb
rorb
xor
pop
pop
mov
add
jmp
push
inc
xchg
push
rolb
xchg
into
bound
insb
lock
std
rorl
inc
cmp
mov
je
sub
push
or
push
mov
jae
or
xchg
push
rclb
pop
aam
pushf
pop
sbb
es
sbb
jae
popa
and
xlat
dec
push
add
xor
or
adc
mov
push
movb
insb
insb
bound
in
shlb
les
sar
imul
aaa
loope
test
jl
or
lods
push
xchg
rcl
mov
or
in
adc
sub
insl
add
arpl
rolb
rolb
out
xchg
xorl
xchg
xor
mov
inc
jmp
cmp
ds
sbb
jmp
ret
sub
sub
mov
add
arpl
adc
jmp
les
push
pusha
push
adc
dec
add
mov
repnz
cmp
and
or
out
push
xorb
jne
dec
add
add
lds
sbb
xchg
ss
lock
lds
xor
sub
push
test
jns
mov
sub
or
xor
inc
mov
and
jae
push
cmp
movsb
cmp
jbe
sbb
push
mov
and
test
out
sbbb
je
mov
pop
shr
push
push
scas
pop
adc
fldcw
push
test
and
outsb
cmpsb
fidivrs
jp
pop
and
mov
sub
jbe
rorb
inc
mulb
jne
add
loopne
popf
push
pop
xchg
add
sbb
in
cmpsb
cmp
dec
scas
dec
or
cld
sbb
ret
inc
xor
bound
rolb
and
or
jp
add
rcrb
xorb
dec
lods
sbb
pop
inc
lret
jbe
inc
cmp
lret
shl
movsb
arpl
mov
push
test
sti
lretw
fdivr
mov
mov
xchg
add
inc
pop
scas
sbb
add
pop
rolb
outsb
push
and
inc
mov
mov
lcall
adc
pop
dec
sbb
mov
adc
ds
add
add
xlat
clc
dec
subb
push
push
jne
aam
mov
dec
ljmp
jns
add
stc
roll
fiaddl
sarl
nop
xchg
add
add
push
xchg
fs
and
jo
dec
loopne
mov
ljmp
push
xor
or
das
pop
loop
push
and
lds
sbb
inc
or
aam
xor
dec
add
mov
mov
mov
sbb
ds
ret
incl
xor
lods
inc
xor
bound
or
lret
jns
push
adc
call
pop
pop
mov
or
rorb
mov
or
faddl
jb
int3
call
jge
enter
jl
xchg
push
or
cmpb
dec
cmp
inc
sbb
pop
push
popf
fs
cs
lock
xchg
sbb
inc
stos
mov
or
fnstenv
adc
xchg
or
lea
out
das
push
js
mov
pop
add
xchg
push
or
mov
dec
lods
xlat
sub
mov
adc
add
add
pmaxsw
aam
inc
enter
mov
add
fs
xchg
xchg
cmpsb
lods
or
dec
out
pop
lea
pop
mov
int3
shl
loope
cs
into
mov
dec
dec
ss
xor
popf
adc
stos
pushf
pop
or
imul
int
xor
mov
movl
mov
cmp
add
stc
loop
outsl
push
cwtl
mov
mov
add
cs
inc
outsb
je
xor
push
in
popa
mov
mov
sub
or
inc
insb
je
rcll
mov
fstpt
cmp
or
inc
sub
scas
and
pop
and
cmp
jne
cmpb
insb
inc
jne
mov
xor
movsl
pop
repz
insl
jbe
aad
cmp
push
int
lds
imul
pop
aad
lcall
mov
cmpsb
movsb
inc
ret
jle
dec
push
test
pop
je
mov
call
and
cltd
clc
in
mov
inc
push
clc
imul
jae
test
inc
je
sbb
ficomps
or
mov
adc
nop
sti
push
inc
cmp
sub
cmp
iret
mov
inc
push
mov
enter
testl
pop
rcr
cmp
andb
xchg
mov
and
int3
add
jg
testl
mov
mov
aaa
sub
mov
aad
rolb
pop
ljmp
push
mov
sahf
add
pop
inc
xchg
mov
mov
sub
mov
addr16
enter
xchg
neg
adc
loopne
imul
adc
or
pop
pop
ret
pop
push
cmp
and
je
dec
outsb
and
std
adc
andl
or
cmpsb
loop
sub
loopne
sti
jecxz
mov
xchg
add
mov
xchg
mov
mov
lds
cli
dec
outsb
je
or
mov
insl
pusha
je
sbb
aaa
adc
hlt
data16
bound
add
mov
cmpb
insb
pop
sbb
adc
subl
mov
pop
inc
or
test
add
pop
cmc
aam
jne
mov
jne
popf
mov
cmp
jle
sbb
mov
lahf
mov
and
pop
adc
push
arpl
mov
and
adc
jno
dec
aam
fsubs
loope
gs
bound
sahf
sub
push
sub
daa
mov
hlt
jge
lock
sub
cmp
jle
mov
add
and
cmpsb
and
sbb
sbb
loope
pop
sbb
dec
or
and
sub
movsb
loop
push
push
rcrl
xor
sub
sub
lds
test
out
mov
out
push
clc
xorb
cmc
inc
mov
add
adc
imul
add
movb
dec
scas
shrb
mov
test
test
sbb
xchg
adc
mov
test
cltd
mov
add
push
xchg
adc
dec
sbb
jg
jl
add
jae
mov
hlt
pop
aaa
movsl
mov
mov
jne
mov
call
sbb
orl
push
cld
or
jne
and
add
aam
test
jno
xchg
ss
xor
scas
mov
pop
add
loop
scas
incl
pop
inc
clc
repnz
add
mov
clc
inc
repz
inc
xor
lcall
popa
jnp
cmpb
je
mov
decl
movb
inc
jmp
dec
cs
inc
aad
lea
or
jmp
popa
mov
jmp
add
fwait
dec
inc
inc
dec
test
data16
test
test
fwait
sbb
sub
sub
or
xchg
or
mov
push
imull
sub
or
pop
or
mov
add
subb
sub
adc
or
or
ficoml
push
jbe
dec
cmpl
add
jle
popf
popf
push
test
insl
mov
movsb
adc
fcmovbe
ret
les
inc
push
inc
pusha
jp
add
jne
cmp
xchg
mov
push
push
sbb
mov
scas
pop
jne
inc
jnp
in
lds
push
dec
pop
sub
and
and
ret
add
pop
mov
data16
jp
js
shrl
enter
dec
das
shlb
pop
mov
nop
pop
fistpll
or
call
iret
sarl
test
push
jno
into
mov
sbb
sarb
inc
sbb
test
jb
or
xorl
inc
imul
xor
mov
divl
sbb
je
ss
mov
popf
push
add
js
push
sbb
mov
mov
xchg
notl
shl
push
pop
jno
push
xor
add
push
cmpl
inc
cmp
cmp
sub
sarb
mov
jle
mov
or
jg
adc
xorl
sti
mov
xor
dec
inc
dec
sti
inc
push
pop
push
xchg
pop
lock
add
xor
movsb
hlt
add
add
add
xor
lahf
jno
stos
pop
dec
push
adc
sbb
cmpl
fimuls
out
push
and
adc
movhps
sahf
mov
cmc
jl
push
push
lea
inc
decl
and
sbb
or
add
or
push
andl
adc
test
xchg
push
mull
push
mov
rcr
jb
mov
pop
add
rcll
es
adcb
mov
mov
pop
insl
or
cmp
aas
and
xchg
mov
test
add
mov
add
mov
addl
mov
xor
rcll
and
cwtl
outsb
push
test
adc
aad
sysexit
addl
jnp
orl
sbb
pop
dec
dec
sbb
add
cli
jno
jmp
rcll
push
lea
pop
push
cwtl
inc
les
ss
sbb
mov
and
mov
jnp
insb
cmpsl
or
jb
sub
push
mov
xchg
outsb
cld
lea
cmp
push
inc
or
mov
or
nop
out
fldt
inc
and
iret
nop
sbb
cmp
roll
aas
xchg
mov
lret
dec
sbb
xchg
ret
add
sbbl
js
dec
enter
adc
jno
add
or
push
cmpsb
insl
mov
sbb
cmp
mov
mov
mov
add
or
add
and
cwtl
sub
mov
shlb
push
clc
cmpsb
inc
lea
dec
loope
xor
mov
imul
adc
and
inc
push
pop
xchg
insb
push
cs
cmp
pop
notl
add
jmp
mov
xchg
loopne
mov
mov
add
cmp
aam
xchg
inc
arpl
push
or
inc
js
inc
ss
push
adc
inc
lods
popf
mov
outsb
cmp
jl
xchg
clc
and
fdivrl
loopne
dec
pusha
clc
or
in
push
out
imul
ficompl
jmp
mov
mov
test
jp
push
cmp
int3
fcoms
jbe
fidivl
out
inc
add
cmp
jae
xor
add
addl
pop
movl
subl
mov
sbb
roll
pop
add
test
das
or
roll
xlat
jge
imul
pop
clflush
cmp
xor
and
rcrl
loop
nop
mulb
sbb
movl
nop
pop
sub
cmp
or
gs
xchg
test
cmp
inc
scas
push
cmp
xchg
mov
xor
adc
xchg
add
lock
add
push
sbb
inc
enter
jbe
push
mov
fisubl
push
xor
call
push
cmp
fdivp
imul
add
or
jne
ds
hlt
add
pop
movsb
ret
mov
loop
xor
fdivl
lods
and
adc
push
cmp
into
or
xchg
orb
fdivrs
adc
je
push
or
push
pop
dec
movsb
scas
shll
mov
jmp
pushl
mov
adc
test
xor
loopne
insl
dec
imul
pcmpeqb
push
je
and
and
dec
imul
scas
mov
mov
outsb
xor
lret
or
add
push
push
xchg
pop
xlat
es
dec
je
gs
mov
cmp
les
pusha
push
in
inc
pusha
gs
push
pop
scas
add
dec
and
or
std
jecxz
repnz
mov
mov
jne,pn
sbb
call
movl
fwait
ja
dec
add
sbb
rol
outsb
and
mov
mov
add
dec
adc
fcomi
gs
insb
call
pop
sbb
push
push
or
jmp
push
pop
xchg
xor
push
lret
and
rorl
sbb
sub
adc
fs
mov
dec
and
adc
pop
fadds
adc
cmp
pop
mov
mov
mov
cmp
push
pop
insb
orb
push
mov
addb
loopne
popa
icebp
xor
xor
jne
pop
push
mov
test
add
pop
mul
inc
mov
jne
xchg
addl
push
loope
test
or
dec
mov
std
rcll
or
mov
push
sub
ret
sub
and
das
sysenter
cmc
push
fmuls
test
mov
mov
and
sbb
lret
xchg
ret
imul
dec
leave
mov
mov
imul
add
sub
inc
inc
cmp
sbb
push
jl
jmp
sbb
mov
and
sbb
cmp
enter
loopne
or
stos
cld
popf
jmp
add
sub
mov
sti
sbbl
cs
sbb
push
and
ret
inc
popf
bswap
add
nop
and
dec
and
leave
or
clc
std
popa
jecxz
das
mov
sti
adc
cmp
cmp
sub
in
pop
adc
cmp
mov
pop
loope
ficoms
pushf
jecxz
xor
jmp
mov
push
and
ret
mov
cmp
add
mov
mov
and
mov
and
mov
add
sub
add
ret
jge
add
ret
jne
mov
clc
bound
nop
sbb
shl
mov
ret
xchg
fldl
cmp
mov
push
add
ja
fcmovu
add
adc
jnp
lds
cmp
cmp
xor
nop
fidivrl
and
cmp
adc
ja
out
cmp
and
cmp
js
add
pop
add
mov
mov
and
inc
addr16
int
sub
repnz
dec
cmp
sbb
je
sbb
push
outsb
lds
ljmp
pop
sbb
rcr
into
outsb
jecxz
call
jmp
popa
mov
inc
cmpb
pop
adc
jne
push
lahf
je
mov
orl
repz
xchg
andl
jmp
adc
imul
dec
xchg
shlb
add
mov
mov
loopne
movl
xchg
shrb
repnz
sbb
mov
in
aad
addps
xor
lock
rclb
adc
js
mov
call
inc
add
pop
lods
xor
mov
xchg
push
cmpsl
push
mov
stos
adc
lret
cmp
or
mov
add
fsub
mov
jne,pt
cmp
sub
or
xchg
add
inc
incl
mov
push
jmp
sub
cmp
inc
jmp
dec
jmp
xor
xchg
adcl
adc
add
or
inc
inc
inc
pop
je
pop
es
adc
push
int3
testb
and
mov
inc
cmp
push
push
jp
sbb
push
sti
pop
cli
dec
stc
add
mov
pop
dec
sub
xchg
xchg
inc
je
fwait
orl
dec
je
dec
cmp
or
and
or
push
mov
out
mov
inc
add
xor
inc
jne
int
pop
std
pop
add
adc
mov
out
cmp
inc
push
pop
cwtl
jmp
mov
pop
pop
fstps
addb
and
sbb
loopne
mov
movsb
repnz
add
add
fnsave
pop
cmpb
mov
in
in
fs
jae
add
jae
add
rclb
dec
insb
lea
sbb
mov
fistpll
dec
aam
jge
push
push
sbbl
cld
loop
or
dec
lods
sub
js
and
jg
or
push
cli
sbbb
push
je
adc
and
and
jmp
add
xor
andl
daa
mov
or
call
fxch
insl
aad
pop
nop
inc
inc
or
jne
repnz
ja
and
dec
sub
push
sar
dec
dec
cwtl
dec
repnz
jb
movsb
pop
xor
das
cmp
cmp
and
hlt
dec
or
cld
dec
mov
or
or
add
addr16
jmp
push
add
sub
and
movsl
inc
push
bound
jb
addr16
or
aam
or
sub
out
pop
je
jp
lock
or
inc
jno
dec
add
call
xor
cld
push
push
pushf
popa
inc
push
add
fwait
jo
and
or
sbb
xor
xchg
xor
inc
jmp
adc
and
repz
jae
or
add
and
outsb
notl
inc
xor
mov
sbb
js
into
enter
pop
push
es
aam
jbe
cmp
mov
jl
mov
sbb
inc
imul
rorb
rolb
test
pop
lea
mov
adc
push
cmp
daa
push
or
sub
inc
les
mov
popf
sub
dec
fisubs
roll
inc
adc
cmc
jae
push
push
mov
stos
dec
nop
push
and
or
rorl
push
cmp
outsl
or
adc
sub
inc
inc
add
sbb
push
or
push
add
jl
or
jmp
pusha
repz
std
lahf
or
orb
jmp
xchg
orl
jb
xchg
push
or
mov
push
dec
rorl
ret
inc
in
push
aaa
mov
or
xor
imul
sbbb
push
rorl
je
and
movl
jl
mov
loope
adc
notl
les
andl
jecxz
rcrl
rcr
push
push
lock
aam
and
jo
mov
dec
adc
push
scas
test
das
push
mov
mov
fdivrp
sub
ret
mov
inc
push
xchg
mov
inc
sub
xor
in
ds
pop
dec
lock
popa
inc
jns
movsb
sbb
jnp
enter
dec
mov
or
pop
and
sahf
mov
push
rorl
fbld
or
adc
enter
adc
cmp
adc
and
jb
adc
jmp
mov
or
adc
mov
and
cld
shr
mov
imul
push
push
add
or
dec
or
fists
push
lea
mov
mov
mov
inc
imul
jmp
jne
sar
dec
cmp
jbe
push
pop
mov
shll
inc
sub
sub
jg
or
lea
not
and
decb
sub
shll
and
movsb
dec
loopne
push
shlb
pushf
mov
clc
and
pop
add
push
dec
pop
adc
rcr
add
add
pop
and
push
or
jnp
cmpb
addb
lods
jecxz
hlt
push
divb
jl
mov
sti
add
stos
cli
dec
or
dec
pop
cmp
jbe
fimuls
clc
imul
stos
fidivl
dec
rcll
mov
aaa
pop
mov
shr
and
add
or
lea
das
mov
xor
push
jle
mov
xor
clc
mov
add
lahf
rorb
fwait
cld
jmp
pop
xchg
or
test
andl
mov
int3
inc
cmp
pop
ss
dec
pusha
mov
mov
jmp
rorl
or
or
lds
sbb
lock
dec
or
jmp
dec
adc
repnz
in
lods
dec
push
mov
inc
mov
outsl
or
xchg
push
mov
mov
mov
xchg
ljmp
stos
mov
mov
sbb
cmp
xlat
subl
loope
jnp
aas
gs
push
or
xchg
cmp
sub
mov
jnp
dec
inc
adc
out
hlt
inc
sbb
pusha
add
and
jne
push
mov
mov
adc
lcall
mov
adc
adc
popf
je
xchg
dec
adc
xchg
jl
idivl
call
add
std
je
or
mov
jo
leave
pusha
mov
adc
xor
test
fwait
test
push
xor
dec
call
outsl
push
cmp
addr16
add
imul
stc
negb
add
les
push
inc
int
addl
dec
add
xor
shlb
pop
or
adc
push
sub
inc
fucomi
fwait
orl
ds
sbb
fdivr
add
dec
popf
dec
sub
mov
jno
xchg
add
inc
lret
ret
imul
mov
inc
or
lret
hlt
lock
mov
and
add
lock
push
cli
push
add
ja
sub
shr
adc
jge
pop
orb
mov
enter
mov
mov
push
out
fiaddl
lock
out
pop
shrb
sub
sbb
movsl
mov
lret
lods
out
clc
cmp
cmp
aaa
add
adc
fs
inc
fbld
add
mov
inc
mov
loop
mov
test
ljmp
js,pn
lds
not
and
add
add
add
movsb
stc
add
xlat
sub
pop
shr
add
cld
ret
mov
pushf
mov
and
jle
les
flds
lock
adc
sar
push
mov
add
pop
cld
pop
mov
pop
inc
stc
sbb
clc
and
nop
es
test
in
add
cmp
nop
push
inc
jae
dec
or
push
jns
or
cwtl
clc
sub
add
mov
sub
adc
pushf
sar
dec
mov
aaa
pavgb
fstpl
lea
add
adc
jle
dec
shll
pop
push
lcall
lcall
add
adc
js
pop
outsl
adc
jmp
aaa
js
xor
ja
test
iret
adc
cld
insb
xor
jle
add
and
clc
xchg
pop
jl
scas
adc
das
mov
scas
add
dec
insb
pop
xor
adc
sub
pop
jp
movsb
pop
testb
ret
cmp
ret
orl
dec
mov
cmp
cmp
pusha
push
mov
call
ja
shlb
jne
lock
loope
lea
mov
mov
jbe
add
mov
push
cmp
shlb
lods
decb
into
mov
out
cmp
jo
xor
jns
dec
arpl
mov
push
add
pop
jp
push
mov
ret
xchg
or
lods
pop
and
inc
cmp
test
icebp
push
push
push
xchg
call
out
or
arpl
push
loopne
mov
xor
stos
dec
or
inc
pop
cs
nop
cmp
and
decb
xlat
jne
add
adcb
jb
cmpb
mov
scas
fnstenv
jmp
jnp
add
xor
cmpsl
pop
cmp
aaa
arpl
adc
mull
sbb
push
mov
and
notb
lcall
adc
in
sbb
ficompl
mov
mov
push
sbb
mov
mov
dec
pop
or
jne
arpl
mov
add
push
cwtl
xchg
jp
aam
cmp
jmp
fcmovu
mov
mov
and
jne
mov
test
jo
bound
sbb
leave
inc
push
pushf
mov
sub
mov
sbb
lea
dec
or
sbb
cmp
jl
adc
jl
out
fbstp
adc
pop
mov
decb
jne
jbe
rcl
repnz
jmp
jp
dec
xchg
cmp
and
jo
sti
bound
dec
push
and
into
xor
dec
jp
mov
xor
mov
or
das
pop
xor
sub
jge
inc
aas
jge
test
push
cmc
push
or
pop
adc
cld
or
or
or
mov
mov
out
or
nop
sub
and
mov
call
push
push
xor
scas
aam
pop
cmp
push
lea
ds
push
sbb
sbb
mov
and
orl
inc
cltd
test
arpl
cmpsl
push
test
mov
scas
dec
dec
loop
or
shll
mov
ds
ret
lods
mov
inc
and
sub
dec
mov
imul
add
cmova
dec
sbb
adc
mov
icebp
enter
cmp
xchg
xor
pop
adcl
js
sbb
mov
push
push
dec
push
mov
pop
shll
jae
roll
test
ret
jecxz
push
cmp
jne
out
cmp
sahf
mov
push
incb
insl
popf
out
adc
sub
or
and
jmp
xchg
clc
add
pop
clc
pop
push
nop
or
sbbl
inc
and
add
mov
cmp
or
stos
push
scas
into
into
add
cmp
push
mov
dec
jne
cmpsb
cld
sbb
subb
fisubrs
mov
push
adc
loope
push
sbb
cs
mov
pop
xor
imul
pop
test
push
or
lods
pusha
in
adc
and
orl
jl
pop
or
add
fisttpl
in
sub
inc
inc
mov
inc
loopne
sbb
mov
outsl
loopne
nop
add
and
jle
adc
lcall
jp
mov
jg
sbb
jbe
fldcw
or
or
insl
cmp
or
clc
test
jle
cmp
jl
mov
add
enter
fildl
adc
inc
push
je
add
adc
or
xchg
cwtl
rcrb
clc
dec
stc
pop
or
xchg
or
out
adc
cli
imul
mov
mov
out
cmp
mov
cmp
icebp
adc
and
and
pop
inc
sbb
hlt
inc
loop
mov
push
lods
movsl
and
jle
es
add
or
sbb
or
sbb
sbb
int3
lret
adc
js
cwtl
or
xchg
sbb
cmp
mov
lret
roll
push
out
add
pop
test
ret
add
push
jl
push
orb
push
or
add
add
and
int
cmp
roll
cmovae
and
inc
aas
add
jle
ljmp
push
or
sbb
loopne
jo
xor
and
sbb
add
xchg
dec
cmp
sti
cmpsl
cli
decb
mov
pop
jg
jl
lods
jmp
cmp
jl
dec
mov
mov
cmc
popf
mov
mov
mov
xor
call
add
out
sub
addr16
add
call
test
or
andl
sbb
inc
cmp
xchg
daa
out
mov
mov
je
push
jle
mov
push
mov
je
push
inc
out
orb
push
fisubrs
fstp
adc
push
jl
adc
test
roll
adc
cmpl
dec
movsb
pop
adc
or
aad
cmp
push
xchg
jle
aad
arpl
dec
rol
adc
sbb
add
stc
mov
add
std
xor
or
jnp
and
ss
inc
cmpsb
jmp
and
xchg
popa
and
cmpl
aaa
ja
mov
jle
mov
inc
das
and
pop
cmp
int3
jo
push
inc
push
sub
xchg
sbb
or
pop
add
pop
cli
leave
mov
inc
and
xchg
lret
dec
mov
mov
cmpsb
popf
idivb
push
or
dec
or
mov
and
mov
mov
jp
and
pop
subb
fildl
faddl
imul
jo
pop
push
scas
and
pop
cwtl
icebp
xchg
sbb
arpl
or
sti
push
push
call
pushf
lcall
mov
jo
test
jbe
in
je
adc
inc
cmpl
jne
jbe
push
jae
push
jmp
cmp
xor
popa
xchg
je
add
dec
xchg
sbb
addb
imul
cmp
sbb
add
daa
xor
pop
add
orl
fld
mov
fisubl
mov
icebp
fidivs
jg
lret
repnz
mov
in
pop
adc
lock
xchg
adc
cs
leave
std
mov
add
jno
in
add
das
jmp
xor
inc
pop
adcb
dec
adc
jecxz
cmp
push
add
and
jne
stos
hlt
inc
mov
pushl
aad
fs
jmp
ss
lock
inc
cli
arpl
rcrl
sub
xchg
sbb
push
pop
aad
lahf
adc
adc
add
xchg
pop
filds
pusha
jmp
sbb
dec
aam
pop
test
lods
mov
sub
and
mov
sbb
inc
jo
mov
pop
sub
ret
insl
sub
fdivrs
xor
shll
pop
push
cmp
jl
fdivrl
sahf
stos
js
push
movsb
adc
rcrl
jg
ds
dec
cmpb
lea
testb
add
and
push
mov
add
push
mull
lret
into
push
jo
dec
lods
mov
sbb
adc
sbb
mov
push
push
inc
movsl
xlat
add
aaa
dec
fdivrs
enter
adc
mov
icebp
cmp
scas
xor
push
mov
mov
rolb
lretw
pop
or
xor
in
rcll
cmc
lods
mov
shll
adc
xchg
xlat
jns
jne
jmp
ja
mov
rcll
add
arpl
outsl
dec
bound
lcall
sub
jle
add
cmpb
sub
sub
xor
inc
pop
fwait
sub
mov
push
adc
dec
jg
shlb
add
jle
add
add
cmp
sbb
outsl
pop
mov
dec
flds
lock
or
xor
popf
sbb
jb
pop
loopne
jo
jl
add
call
mov
aam
cwtl
push
or
dec
adc
in
pop
and
adc
inc
add
inc
jbe
je
sbb
incl
ret
add
dec
fdiv
fstpt
adc
orl
sub
push
cmp
pop
hlt
dec
jne
aad
or
rcl
mov
shl
shlb
add
mov
adc
nop
cmpb
mov
push
push
scas
pop
pop
adc
in
pop
std
jb
pushf
and
jns
ja
adcb
pop
or
add
out
cmp
mov
push
ljmp
sub
push
fwait
lock
shll
call
jnp
es
lret
mov
push
ret
push
mov
and
mov
test
lods
sub
jns
insb
xor
bound
mov
sar
nop
adc
xlat
je
cmp
adc
movsl
out
adc
inc
and
lret
add
data16
and
sarb
inc
sub
jge
push
jmp
inc
addr16
fidivrl
sbbl
je
sbb
cmpl
sub
pop
adc
daa
adc
loopne,pn
push
sbb
adc
inc
adc
sbb
shlb
shr
jmp
das
xor
pop
ljmp
add
dec
dec
or
and
mov
push
dec
lahf
xor
insb
nop
mov
pusha
mov
pop
sbbb
mov
jmp
adc
jmp
mov
push
inc
pop
pop
add
pop
bound
and
ret
pop
loopne
push
inc
or
add
inc
roll
insb
and
adc
cmp
pop
dec
je
xchg
cli
adc
push
fstpt
lea
lea
or
jnp
out
int3
sbb
fisttpl
mov
loopne
mov
add
lea
push
and
xor
icebp
sub
enter
push
cwtl
push
push
adc
aam
test
fimuls
pop
inc
mov
xlat
sahf
and
dec
dec
and
push
add
pop
jl
xor
loop
mov
jle
push
or
xor
pushf
call
pop
aam
test
in
ljmp
js
cmp
xor
out
aas
push
pop
add
inc
jnp
outsb
rcll
insb
xchg
jo
mov
or
stos
add
loopne
testb
adc
pop
or
or
scas
lea
adc
dec
ret
add
add
jne
add
dec
ret
hlt
sbb
pusha
add
lock
mov
mov
push
adc
cmp
sub
pushf
fdivr
adc
dec
pop
adc
pusha
sbb
out
ljmp
and
not
and
or
mov
nop
xor
lock
adc
repnz
xchg
jl
push
jmp
mov
nop
inc
inc
test
iret
movsl
inc
rorb
sub
sub
mov
xor
aad
add
mov
fwait
mov
and
mov
mov
in
dec
sarb
xor
or
daa
loopne
cmpl
jg
nop
fidivrs
sub
pop
shlb
mov
lods
mov
in
outsb
in
cmp
mov
and
or
push
je
sub
cmp
adc
pushl
dec
push
pop
lds
xchg
add
aas
pop
ret
and
sbb
rolb
test
adc
dec
push
and
fisubrl
popa
mov
or
rcll
lds
add
sub
add
imul
lods
popa
lds
jns
scas
movsl
call
in
call
mov
xor
bound
or
xlat
adc
mov
imul
inc
fs
aam
les
mov
andl
popf
ja
or
inc
mov
test
mov
mov
cmp
ja
pushf
pushf
dec
push
sbbl
xchg
movsb
xor
bts
or
fwait
lods
test
add
push
aad
xchg
xchg
dec
es
adc
cmpsb
xorb
push
and
jge
pop
fsubrl
nop
ficoms
iret
inc
jb
cmp
nop
lret
xor
fwait
mov
movsb
xrelease
cmp
add
ret
out
call
cmpsl
and
mov
mov
pop
adc
and
movsb
and
pop
pop
dec
and
mov
movsb
or
pushf
pop
cs
xor
sbb
sbb
and
and
lret
inc
jp
xchg
push
push
pop
sbb
push
push
and
sbb
xchg
mov
imul
das
dec
daa
and
pushf
test
test
add
fs
or
cmp
push
add
call
les
push
add
lds
incl
dec
adc
pop
add
xor
nop
nop
pushf
enter
lods
lods
add
add
or
jl
or
call
and
and
je
push
push
xor
add
pop
ds
add
jns
cmp
pop
sbb
imul
out
jmp
jge
shr
pxor
jmp
out
xlat
add
jg
adc
test
xor
pusha
add
pop
jo
push
dec
jne
iret
add
lods
adc
push
cli
sub
jmp
or
mov
mov
ds
test
or
adc
inc
pusha
xchg
insb
or
sub
sub
ret
adc
add
je
fadd
jmp
lods
mov
sub
shl
lock
push
add
out
and
mov
sbb
or
shll
roll
push
dec
jmp
lret
add
ss
mov
mov
cltd
mov
or
fnstenv
xor
pop
cmp
lock
push
pushf
pop
mov
fbld
add
shll
jbe
aam
popf
cmp
cmp
cmc
and
call
clc
pop
scas
xchg
dec
add
push
cmp
and
cld
lds
lcall
xor
push
fiaddl
sbb
loopne
repz
xor
outsb
out
mov
stos
adc
dec
je
test
je
cltd
xchg
fcoms
in
sub
jecxz
push
adc
ret
shl
lret
pop
mov
xor
in
push
xchg
and
ljmp
add
out
les
adc
cwtl
mov
add
jle
cmp
je
repz
push
xor
xor
iret
push
aam
xchg
pop
addr16
outsb
or
push
lret
cld
fists
adc
inc
pop
int
xor
setae
jmp
sub
adc
pop
push
es
mov
data16
push
and
loope
leave
push
scas
aaa
shlb
sbb
js
add
inc
or
sbb
add
pop
inc
push
dec
clts
test
bound
cmp
and
or
mov
fidivs
lsl
jmp
or
pop
push
push
inc
lcall
leave
rep
push
test
rolb
in
std
push
jbe
dec
sub
sbb
adc
mov
mov
mov
iret
pop
inc
dec
xor
fwait
add
pusha
nop
ljmp
xor
jmp
inc
add
xchg
mov
pop
mov
cmp
add
inc
daa
or
mov
imul
adc
mov
fs
cmp
andl
adcl
cmp
mov
cmp
insb
inc
cs
or
xchg
stc
sbb
inc
xor
mov
jg
call
dec
cmpb
je
mov
cmp
pop
jne
dec
addb
push
inc
inc
mov
js
add
out
call
test
jp
mov
in
das
loopne
pop
je
lret
arpl
jle
mov
mov
inc
push
out
cld
mov
rol
lods
insl
arpl
dec
inc
and
xchg
mov
jae
add
add
push
imul
pop
repnz
inc
test
sbb
jmp
jge
sbbb
pop
movl
loopne
push
cmp
mov
gs
or
sbb
jp
sarb
inc
adcb
out
out
cmp
mov
inc
lret
mov
cli
jp
sbb
dec
setg
push
shlb
fidivrl
sub
add
add
jle
pop
loop
aas
sub
xor
xor
lods
cmp
pop
jle
or
adc
push
jle
dec
mov
or
and
cmpsb
xchg
rolb
inc
ret
jl
push
and
out
fldl
mov
or
mov
iret
es
dec
add
add
push
inc
pop
inc
mov
xor
cs
dec
push
add
dec
jl
fiadds
inc
push
mov
mov
or
add
testb
data16
mov
fsubl
add
lock
aas
dec
test
jne
leave
push
sahf
inc
loop
jle
dec
insl
call
push
mov
in
outsl
xchg
sbb
dec
or
ljmp
xor
clc
jbe
shlb
enter
aam
sub
test
lahf
adc
bound
xor
shlb
enter
or
sbb
sub
dec
aam
lock
fstpt
sahf
sbb
fstl
stos
daa
mov
cwtl
add
adc
push
loopne
ljmp
sarl
xchg
or
subb
js
sub
call
mov
pop
jno
adc
sbb
test
or
fcoml
test
jmp
xchg
mov
mov
lret
and
mov
xor
jmp
roll
pushf
mov
popf
dec
aas
arpl
sbb
inc
add
jle
sbb
enter
shrl
push
xchg
xor
add
pop
push
xor
aas
cmp
inc
enter
dec
and
add
lret
and
push
xor
sub
sbb
outsl
and
sbb
loopne
shll
and
lds
sub
or
je
inc
fcmovb
sbb
mov
jecxz
jp
neg
sbb
jecxz
mov
lock
decl
xor
or
jne
pop
cmp
test
jb
xor
out
jns
push
jmp
out
jmp
xor
ret
add
mov
and
or
jg
push
fmuls
xchg
cmp
dec
xchg
sub
adc
repnz
push
push
mov
mov
arpl
jo
push
imul
mov
xchg
movsb
dec
push
jbe
loop
lock
les
add
dec
shrd
xchg
sub
orl
inc
sti
jge
ss
jl
cmpsl
xor
inc
xlat
clc
mov
push
mov
data16
inc
add
in
and
dec
jmp
mov
mov
loopne
cmp
inc
xor
incb
push
adc
add
insl
scas
xor
rorl
cmpsb
xor
mov
mov
jo
inc
out
push
sbb
shrl
sbb
rol
mov
call
jb
push
sub
or
inc
adc
neg
cmp
mov
lock
mov
ret
jb
push
test
add
incb
shll
aad
push
jg
lods
jb
xchg
imul
dec
dec
inc
dec
pop
or
and
jb
or
sub
clc
daa
add
mov
mov
inc
inc
add
sub
mov
shrb
mov
xor
pop
add
adc
loopne
mov
jb
jp
or
mov
and
sub
and
test
xchg
add
cmpsl
mov
xchg
inc
sub
xchg
je
cmp
jge
mov
jne
fmull
mov
or
popa
push
add
adcb
pop
xor
mov
rolb
ficompl
mov
or
xchg
mov
pusha
test
jl
push
stc
jp
iret
cmp
jne
add
shll
rorl
shl
jne
xor
xchg
sbb
push
and
pop
and
cld
push
lret
jbe
xchg
adcl
rorb
cmp
mov
ret
inc
dec
push
push
or
push
jmp
insl
cmp
pop
test
cld
cld
jl
sahf
xorl
lret
je
mov
inc
out
stc
mov
or
dec
call
into
mov
mov
sbb
jns
pop
dec
je
jge,pt
clc
xchg
ret
gs
or
pop
data16
jae
add
ja
inc
ss
inc
popa
je
inc
je
dec
sub
add
and
jmp
xor
jmp
ret
or
sbb
mov
sub
mov
or
dec
ljmp
push
clc
or
enter
test
fldl
fdivl
int3
outsb
in
lock
insl
push
pop
clc
fstps
or
add
cmp
in
mov
adc
ret
idivl
add
ret
mov
rcrb
in
push
cmp
xor
inc
push
dec
rcrl
ret
mov
outsb
mov
dec
push
and
mov
cwtl
xor
xchg
dec
scas
faddl
add
mov
sbb
xchg
cli
nop
stc
loopne
lret
pop
inc
jo
lcall
pop
sarb
cli
incl
lods
inc
jge
hlt
or
xchg
mov
jl
js
leave
into
pop
das
xchg
sahf
xchg
jb
andl
xchg
xor
pop
mov
out
adc
and
mov
into
sub
adc
add
push
xchg
orl
scas
push
dec
and
inc
rorl
sbb
push
adc
pop
or
inc
sub
push
adc
arpl
sbbb
xchg
mov
pusha
or
fisubs
xchg
f2xm1
jl
js
andl
adc
pop
in
pusha
dec
pop
sbbl
mov
and
ret
pop
mov
sbb
inc
aam
js
sbb
test
inc
std
mov
in
lret
push
lds
lods
pop
inc
mov
mov
xchg
bound
adc
push
fucomip
inc
jmp
mov
jmp
movsb
push
mov
out
testl
dec
adc
cwtl
mov
cmp
mov
lret
pop
sbb
jmp
rclb
jne
xchg
mov
in
loop
jmp
andl
or
dec
fisubl
add
xor
push
push
adc
sbb
outsb
add
mov
push
testb
adc
sbb
mov
xor
shrb
push
xchg
addr16
xchg
mov
mov
mov
cmp
js
or
and
cmp
sbb
sub
push
and
repnz
mulb
ret
cmpsb
add
enter
mov
xor
mov
repnz
mov
lock
push
xor
loope
mov
arpl
rcrb
xchg
jno
mov
loop
dec
pop
loop
mov
cmp
cmpsl
adc
clc
test
add
je
test
cld
or
add
andl
loop
fs
or
addl
js
imulb
or
dec
mov
in
add
cmpsl
mov
add
or
or
push
dec
pusha
xor
adc
or
fnstcw
mov
jbe
xorb
xor
push
fwait
xor
loope
xchg
add
es
pop
dec
mov
push
or
mov
and
cmp
pop
into
dec
adc
mov
mov
mov
adc
dec
add
scas
movups
adc
data16
xchg
add
imul
pop
jmp
add
popa
cs
in
jno
xor
xor
inc
insl
pop
ret
js
test
xchg
sub
dec
add
adc
sbb
lock
jmp
aaa
jl
in
les
cmp
xchg
or
rolb
add
aaa
test
and
rcl
mov
in
dec
push
test
pusha
ficomps
movsl
ret
loop
or
push
negl
fiadds
and
xor
push
shr
mov
add
hlt
add
out
xchg
inc
loop
hlt
loope
lret
push
imul
or
mov
cmp
mov
fwait
adc
push
sub
add
push
dec
je
mov
dec
insb
or
addr16
shlb
ficoms
outsl
add
pop
xor
mov
push
inc
repnz
pop
test
pop
add
sti
ds
movsl
sbb
add
jb
or
or
or
fdivrp
dec
imulb
push
adc
fstp
add
push
xchg
mov
fisubl
pop
add
push
inc
mov
andl
xor
aam
mov
pop
push
out
jecxz
hlt
cmpb
adc
or
and
and
ret
pop
mov
movsl
jo
mov
xor
mov
sbbb
inc
clc
inc
sbb
jge
xor
xchg
inc
mov
test
jmp
dec
adc
push
pop
mov
inc
xor
add
jmp
out
jmp
add
cmp
sbb
outsl
dec
call
inc
sub
cmp
push
sbb
push
mov
jecxz
call
add
in
iret
mov
lds
xor
add
and
inc
add
jb
adc
adc
and
push
mov
cmpsb
lds
or
add
or
xchg
dec
mov
test
roll
or
and
jle
mov
add
adc
jb
dec
push
or
mov
outsb
pop
call
movsbl
jo
arpl
jp
jmp
add
fsubr
inc
popa
and
jne
sti
dec
and
push
add
mov
mulb
add
es
sub
sbb
mov
enter
test
and
push
push
iret
xchg
mov
push
sbbb
xor
js
icebp
dec
in
mov
or
or
ret
inc
pusha
inc
add
leave
xor
cmc
mov
ds
ljmp
mov
jmp
sub
and
and
into
inc
sti
int3
mov
push
stc
xor
adc
sbb
mov
inc
inc
inc
cmp
gs
fs
xor
sbbb
shlb
sbb
xor
or
pop
lea
pop
andl
nop
out
add
clc
pop
inc
add
inc
test
pop
repnz
lock
jmp
adc
and
outsb
push
jmp
jns
pop
test
mov
aas
jnp
mov
inc
ret
xchg
jb
test
add
push
test
push
loopne
add
ret
loop
sub
xchg
sub
sahf
cmp
pop
cli
pop
test
xor
add
dec
xor
mov
mov
call
das
mov
push
aad
jno
jecxz
or
clc
mov
aam
out
inc
mov
leave
inc
xorl
jne
pop
jne
xor
or
push
xchg
sub
mov
jmp
in
xor
das
lds
in
mov
das
test
in
or
cmp
lock
ss
fsubs
or
pop
gs
push
popa
jl
rclb
and
fwait
jne
push
add
mov
add
sar
xor
sti
imul
in
add
repnz
mov
add
aad
loop
adc
xor
insb
sbb
popf
popf
pusha
mov
mov
and
add
ret
fs
and
xor
push
negb
xor
xor
and
push
pop
mov
jecxz
mov
dec
push
sub
push
ds
out
loope
call
xor
rorl
cmp
xchg
sbb
or
inc
inc
mov
mov
adc
jle
into
sbb
in
lods
mov
cmpl
cmc
jg
push
push
xor
push
hlt
mov
xorb
stos
sub
test
and
mov
jbe
dec
xchg
push
or
movsl
mov
cmp
cmp
mov
push
gs
inc
call
jmp
enter
popf
mov
xchg
movsb
push
push
and
popf
mulb
outsl
test
pusha
pop
xchg
mov
push
push
aaa
sbb
sub
jo
lahf
xor
sub
xor
shl
shl
cmp
mov
imul
add
test
push
or
push
add
iret
adc
pop
inc
jg
xor
cmp
cmp
jne
movzwl
mov
aam
aam
jl
pop
mov
icebp
sbb
out
inc
int
loop
pop
ficoms
daa
sub
es
cmp
pop
jl
pusha
push
je
out
bound
pop
cmp
sbb
incb
mov
ss
push
mov
adc
sysenter
sbb
dec
dec
sub
repnz
stc
mov
xchg
or
push
lret
jae
mov
outsb
ja
xchg
mov
andl
outsl
pop
ret
mov
cmp
mov
scas
pushl
adc
cli
or
inc
pusha
das
fimuls
mov
adc
mov
jmp
mov
sub
loop
stos
push
and
inc
cmpb
push
pop
inc
add
pushf
cmp
jmp
cltd
ss
xor
enter
mov
mov
xor
js
xchg
rclb
inc
fcmovu
mov
lods
push
orl
pop
mov
inc
inc
sbb
sub
insl
push
or
in
dec
in
mov
add
cmpsl
pop
add
cmpb
jl
xchg
inc
sbb
dec
dec
stc
pop
xchg
cmp
push
in
push
mov
mov
add
xchg
push
xchg
or
add
sub
addb
cmc
addl
push
cld
andb
or
xchg
rorb
or
jno
pop
xchg
sbb
mov
fdivl
jns
je
add
dec
js
lret
jmp
fcomip
and
stos
adc
or
lea
vmptrld
pushl
lods
adc
and
fdivrs
push
mov
ljmp
or
jmp
fidivrs
jmp
sahf
jmp
inc
je
xchg
cmpb
dec
jecxz
add
aad
add
xor
rorl
nop
pop
pop
xor
xorb
enter
jo
or
das
iret
cmp
or
aam
pop
pushf
mov
imul
rcl
punpckhbw
xor
dec
xor
xor
add
mov
and
addb
jne
push
add
sbb
imulb
inc
mov
fiadds
pop
or
jle
mov
mulb
test
sbb
mov
pop
add
inc
subb
cs
mov
fisttpll
cmp
mov
scas
je
movl
out
pop
push
or
data16
sub
mov
xchg
ret
adc
sub
or
and
sub
mov
push
nop
enter
shrl
sbb
lea
mov
out
and
or
pop
leave
cmp
mov
and
popl
push
mov
sbb
addr16
es
cltd
cmp
jge
and
fists
scas
xchg
mov
mov
push
or
pop
and
and
lods
sbb
mov
ficoml
test
mov
cs
test
or
jae
push
dec
jno
jo
sub
loopne
pop
out
rclb
rol
test
pop
leave
or
cmp
imul
fnstenv
or
xchg
push
insb
ja
je
lea
dec
jl
push
loope
lret
ja
movsb
inc
lcall
xchg
mov
mov
lea
push
push
mov
sbb
pusha
and
mov
and
es
mov
cli
push
adc
lea
mov
sbb
je
inc
mov
jge
dec
aaa
andl
pop
adc
or
daa
pushf
jo
adc
push
idiv
xor
outsl
push
push
dec
adc
sahf
mov
pop
xor
mov
inc
or
jbe
jle
jns
mov
outsl
ja
mov
lea
cmp
or
cwtl
shlb
xor
mov
lret
push
test
sarl
dec
cli
into
cmpsb
cmpb
jg,pt
test
je
mov
xchg
cmp
outsl
push
test
aaa
ja
add
or
lcall
sub
and
in
lock
jecxz
clc
inc
rep
and
insl
pop
push
mov
lock
in
ja
sbb
in
out
jp
xchg
adc
add
push
pop
arpl
bnd
jmp
insl
orl
xchg
jns
fiadds
test
cs
mov
sub
xor
pop
adc
sbb
or
mov
push
movsb
xchg
lods
fimull
mov
cwtl
xchg
loope
dec
loop
push
aaa
je
test
pop
dec
jecxz
sub
add
movsl
push
adc
iret
mov
xchg
rclb
movsb
cmpl
inc
in
out
rorb
stos
or
push
adc
sar
mov
xor
mov
pop
inc
loopne
lea
sbb
pusha
std
add
and
sbb
add
or
or
inc
add
dec
and
push
and
mov
push
adc
push
xor
and
xlat
push
inc
or
nop
icebp
sub
sbb
push
jne
push
pop
sahf
loop
jmp
sar
sbb
test
add
or
push
insl
dec
push
sbb
int
jmp
push
xchg
add
or
xchg
and
push
mov
push
cli
push
insl
sub
popa
je
jle
and
mov
mov
inc
add
mov
enter
sbb
jp
andb
or
sub
and
xchg
pop
push
js
mov
push
das
popa
test
adc
insb
je
cmp
mov
push
cmp
or
test
or
pop
dec
int3
xchg
mov
push
dec
nopl
push
pop
inc
jmp
inc
jge
sbbb
lods
or
or
jle
cmpb
sarb
xchg
ret
test
lret
or
je
add
pop
pop
pop
pusha
mov
scas
cmp
and
pop
inc
arpl
jnp
imul
movsb
or
mov
dec
or
and
sbb
sub
fdivr
rol
push
mov
jne
shlb
jb
cmp
cmp
or
arpl
mov
cmp
sbb
inc
xor
push
shr
mov
cmp
adc
shr
and
jbe
dec
cmpb
jne
adc
pop
roll
fprem1
int3
inc
gs
mov
xchg
shl
fs
arpl
cmp
jmp
test
cmpsl
das
cmp
adc
push
xor
mov
cmp
jne
mov
mov
or
inc
je
jo
enter
loopne
pop
inc
xor
adc
or
pushf
loopne
add
mov
pop
add
push
mov
push
push
jns
dec
es
outsb
pop
adc
loopne
xchg
data16
sbb
out
xor
int3
test
cmp
adc
jae
and
rcrl
adc
pop
inc
cwtl
mov
push
fidivs
xchg
jl
and
dec
pop
rorl
das
push
das
mov
mov
fdivrs
jle
shr
je
pop
out
mov
inc
pusha
mov
mov
test
mov
and
or
cmpsl
xchg
jle
inc
inc
cmp
fisttpl
push
push
mov
push
fwait
sub
mov
xlat
in
xchg
mov
xor
fcompl
loop
or
inc
push
add
outsl
movsl
or
adcb
or
pop
add
lret
xchg
pusha
xchg
lea
pop
push
loop
xchg
lock
in
das
jo
lea
mov
sbb
mov
pop
push
adc
sbb
jecxz
adc
inc
fiaddl
jl
dec
add
or
xchg
gs
in
and
jg
lea
aam
xor
jle
lea
pop
fcmovu
mov
or
dec
jle
adc
in
or
push
sub
adc
push
push
pop
push
lea
dec
push
sbb
xlat
loopne
ret
add
xlat
ret
xchg
mov
cmpb
jae
cs
les
dec
rcl
sub
sub
jmp
sbb
push
in
pop
dec
dec
loopne
fs
in
sti
inc
jmp
lea
out
jne
rcrb
das
inc
adc
shrl
lret
sar
xor
mov
xchg
jno
sub
shrb
sub
pop
pop
push
sbb
push
jo
mov
xor
push
inc
sub
sbbb
sbb
je
cmp
rclb
jg
jle
add
jmp
aad
popf
inc
inc
movl
jle
jns
dec
dec
mov
mulb
loop
ret
sub
dec
mov
pop
adc
or
xchg
xor
push
test
sbb
ficoml
pop
clc
nop
and
add
call
lcall
xor
sub
lds
popl
sbb
and
mov
jle
test
mov
aas
inc
ja
lods
sbb
fdiv
mov
or
hlt
and
mov
add
lods
and
adc
push
enter
add
in
addr16
je
xchg
sbb
cmp
popl
inc
pushf
cmpsl
shll
add
push
pushf
dec
inc
jb
inc
jge
stc
inc
dec
lcall
je
movl
add
addl
mov
aad
inc
pusha
sub
mov
sub
data16
or
push
adc
ret
mov
mov
jecxz
sbb
jge
lds
sub
push
inc
dec
stos
xor
lock
push
sbb
or
sti
add
jle
outsb
cmp
or
xor
adc
sub
cmpsl
fcoml
icebp
js
sbb
adc
xor
push
repnz
testb
cmp
enter
pop
cld
cmp
je
movl
outsl
mov
jge
jo
cmp
sub
xor
add
loopne
mov
and
in
hlt
sti
xor
add
ljmp
pop
xchg
adc
mov
lock
sbb
lea
dec
aam
loopne
add
sub
inc
sub
aam
sbb
popa
inc
push
push
shll
aad
mov
int3
cmp
mov
push
cmp
push
int3
inc
xor
and
adc
add
mov
add
add
xchg
pop
sahf
sbb
sbb
adc
and
add
int3
lock
jmp
add
nop
push
push
aas
push
std
and
aad
push
in
jnp
mov
lods
and
inc
or
fmul
sahf
mov
mov
adc
mov
push
mov
inc
cmp
sbb
inc
mov
adc
pop
or
xor
pop
or
adc
lcall
jns
jno
and
dec
add
arpl
int3
inc
mov
mov
lret
xchg
adc
add
pusha
mov
sub
xchg
fdivs
test
mov
and
xor
or
dec
sub
xchg
out
or
adc
adc
push
pop
adc
movsb
sbb
ss
push
jae
mov
and
ficoml
sub
sub
xchg
out
sub
xor
xor
dec
jae
int
xor
inc
int
rcrb
inc
inc
inc
sbb
jae
inc
inc
dec
xorb
dec
dec
dec
rcrb
xor
push
dec
int
xor
pop
dec
pop
dec
inc
rorb
pusha
dec
fs
xchg
xor
push
jae
cmp
jae
int
je
js
rcrb
cmp
cmp
cmpsl
pop
ds
jb
test
mov
lret
mov
push
xor
mov
jl
repnz
das
inc
cmp
pushf
lds
add
sub
dec
mov
test
inc
push
push
mov
insl
pusha
and
push
xor
pop
mov
test
rolb
push
xchg
xchg
xchg
xchg
or
adc
outsb
mov
sbb
sbb
dec
dec
dec
dec
sub
xor
ss
fwait
inc
and
daa
mov
inc
inc
cmovs
or
daa
push
pop
movsb
and
insb
in
in
jo
js
rcrb
adc
leave
and
dec
mov
xchg
cwtl
pushf
mov
xor
mov
push
cmpb
das
push
and
and
mov
icebp
inc
push
xor
adc
daa
sbb
mov
sbb
jmp
jmp
movl
add
xor
movsl
or
andl
je
cmp
imul
and
subb
jbe
cmp
xchg
enter
decl
ret
sahf
jne
cmp
jne
or
jne
aaa
mov
pusha
sbb
inc
lock
cmp
xor
xor
push
push
fidivrs
mov
or
push
rep
leave
movsb
pop
test
out
xor
jmp
jmp
mov
rclb
dec
mov
and
pop
clc
es
xchg
mov
mov
loop
jnp
push
push
push
dec
call
les
cmp
adc
cmp
das
cmpsl
cmp
xor
push
pop
sub
dec
mov
jle
sbb
data16
jo
jl
xchg
or
sub
jmp
andl
add
cmp
mov
mov
xchg
jmp
lock
or
mov
dec
orb
popf
add
cld
or
push
out
add
orl
das
andl
or
mov
and
out
out
or
jge
adc
jo
sbb
cmp
push
clc
adc
cld
push
xor
adc
int
inc
lcall
pop
mov
and
int
clc
dec
cmc
sub
xor
cmp
shlb
stos
adc
repnz
mov
mov
push
push
scas
inc
cmp
loope
xchg
movl
loopne
cmp
roll
adc
push
rclb
or
xor
lea
and
mov
adc
adc
xorb
adc
andl
cmp
movsb
push
or
xor
push
sub
in
sbb
sub
pop
arpl
icebp
lock
sub
daa
sub
in
dec
fisubrl
push
sub
xchg
ss
das
push
dec
adc
mov
je
push
sub
and
lods
sub
add
cmpsl
dec
push
sbb
add
xchg
pop
sarl
sub
sub
pusha
mov
add
add
lock
daa
cwtl
add
dec
sahf
rcll
inc
test
and
and
jmp
mov
add
cmpsl
push
cli
inc
xchg
fildl
xchg
push
int3
push
mov
rolb
mov
sar
lea
pushl
pushl
test
push
mov
add
decl
jmp
jge
dec
mov
fdivrs
xchg
mov
dec
pusha
add
pop
mov
cmp
inc
daa
jg
xchg
leave
or
ds
push
addb
cmp
mov
and
sub
subl
dec
pop
das
lea
out
rcrb
inc
std
push
xlat
inc
imul
pop
jae
xor
or
push
mov
ret
dec
cmp
or
je
nop
dec
jmp
jb
mov
call
jp
mov
sub
inc
cmp
ja
add
hlt
xor
int
sbb
add
hlt
ja
jo
jb
rorb
dec
insb
xlat
inc
outsb
mov
inc
cs
jl
pop
jle
addb
or
push
sub
lock
dec
add
cmc
add
test
jp
push
pushf
shrb
loope
lock
push
lds
and
lods
xor
gs
adc
add
and
mov
dec
test
sub
mov
add
das
clc
mov
lods
sti
loopne
sbb
dec
push
in
dec
push
icebp
mov
lea
pop
jo
lcall
movsb
or
lock
sub
lahf
pop
clc
pop
je
cmpsb
insl
out
cmpsb
sbb
jo
and
and
xorb
ret
into
or
fs
add
je
imul
addr16
cld
jp
fnstcw
jle
jne
icebp
pop
cmpb
push
fs
or
sbbl
add
mov
jne
jno
sti
test
sub
or
mov
adc
xchg
cmp
ret
pop
test
sahf
inc
inc
push
add
dec
xchg
xor
push
das
add
add
pop
or
insl
sbb
sbb
inc
sbb
je
pop
daa
mov
xchg
and
jne
xor
mov
into
les
cmpxchg
xor
mov
xor
sbb
pop
inc
or
dec
xor
data16
mov
icebp
in
lock
or
sub
aaa
or
jmp
popa
dec
insb
je
mov
adc
and
adc
inc
loopne
dec
pop
or
das
adc
fsubl
clc
jnp
fsts
into
push
or
and
dec
add
pop
inc
ret
int
and
xchg
adc
outsb
bound
pop
jae
add
mov
cs
icebp
roll
pusha
push
lea
lea
inc
test
lcall
mov
adc
push
or
fs
mov
cmp
dec
mov
pop
inc
pop
lret
jmp
xchg
insb
pop
xor
add
clts
jae
and
das
in
push
and
push
xor
and
push
fistl
mov
xor
adc
cmp
sbb
adc
inc
xorl
inc
clc
cmc
and
xchg
lret
xor
jecxz
sub
neg
sbb
and
mov
mov
mov
inc
push
repnz
fld
add
call
dec
add
daa
mov
jns
inc
add
and
add
int3
xchg
and
add
mov
cmpl
je
jbe
push
inc
push
push
addr16
dec
jmp
ds
mov
cs
push
ficomps
push
cwtl
data16
pop
out
addr16
push
and
dec
add
adc
push
jb
lea
test
sub
lret
adc
push
cmp
jne
mov
outsb
sahf
out
push
cmp
jne
es
jne
push
pop
out
call
push
hlt
cs
xchg
jb
jmp
stc
jns
movsb
sbb
inc
adc
jmp
or
jmp
cld
hlt
lahf
popf
mov
mov
adc
inc
and
cmp
test
sub
jmp
adc
call
js
xchg
push
adc
das
adc
ret
loop
sub
xor
subl
int3
mov
sbb
dec
push
addl
ret
daa
xor
cmpsb
mov
jmp
rorl
leave
dec
xchg
mov
mov
mov
dec
fisttps
pop
std
movb
push
and
xor
sub
add
ret
xchg
inc
mov
mov
push
jb
push
push
adc
in
sbbl
and
imul
inc
das
test
xorb
shl
cwtl
out
or
rorl
adc
test
push
dec
inc
adc
xchg
sub
mov
add
ret
cmpl
addb
lcall
stc
cli
movsb
imul
mov
add
push
xchg
leave
popa
jo
pusha
or
rcr
aam
sub
and
push
and
or
test
dec
ret
xchg
push
push
sub
push
orl
dec
and
mov
adc
sbb
sub
stc
cmp
clc
inc
lock
iret
addb
xchg
cmp
adc
test
aas
dec
cltd
sub
jne
mov
movsb
mov
and
and
sub
push
jne
addl
jecxz
pop
ja
aas
mov
rclb
sbb
inc
jnp
pop
fdivr
push
loopne
push
sbb
pop
mov
inc
cmp
ds
iret
and
adc
or
jecxz
jo
jl
mov
jae
jo
and
xor
popf
adc
std
add
mov
pop
xchg
xor
cmc
or
xor
jp
xor
xor
insl
sub
sbb
add
in
mov
pop
ret
int3
add
outsb
loope
or
add
sub
mov
jbe
addr16
pop
add
cmp
mov
loope
inc
jmp
sbb
loope
jne
lds
fdivrl
shlb
inc
inc
std
or
popa
outsl
add
add
fs
rep
out
push
ja
cwtl
outsb
and
xor
jns
aas
enter
data16
push
jnp
jl
ret
inc
and
popf
stos
push
mov
push
adc
es
dec
outsl
cmp
mov
pop
fs
adc
fstl
lods
addr16
popa
add
lods
xorl
lock
dec
sbb
rol
push
xor
push
in
xor
mov
sbb
adc
sub
xchg
mov
fcom
test
cmp
mov
das
mov
pop
pop
mov
pusha
cld
pop
lock
pop
mov
or
dec
cmp
fsubrp
push
rorl
xchg
and
mov
mov
movsb
loop
test
sbb
test
ja
pop
stos
adcb
fwait
mov
cmp
addr16
jbe
dec
and
in
sbb
pop
cmp
sbb
in
sbb
das
adc
inc
and
scas
into
jl
mov
fldt
jle
or
mov
dec
jmp
or
inc
and
add
xchg
add
in
add
push
and
and
out
mov
and
hlt
es
or
sarb
in
fs
mov
call
or
cs
mov
sub
mov
into
sbb
movsl
xchg
stos
test
je
dec
push
lods
sbb
jp
in
xor
mov
adc
or
push
aaa
push
xchg
mov
cmp
sbb
cmp
mov
sub
ja
add
ret
sbb
sub
cmp
repz
push
idivl
and
jo
jne
add
push
xor
mov
pop
mov
xchg
or
enter
mov
inc
rep
stos
shrb
push
push
and
out
imul
mov
mov
adc
loope
push
loopne
jnp
popa
popa
jno
les
xorl
sub
ret
and
addl
xor
push
cmp
andl
or
not
inc
loopne
and
mov
pop
ret
or
loopne
add
mov
imul
fisubs
cmpl
push
js
je
xorb
cld
shll
sub
and
or
sbb
movl
pop
ljmp
inc
mov
sub
outsb
lret
fmull
sub
loopne
jecxz
push
sarb
cmp
pop
cli
push
push
sbb
push
xchg
adc
adc
inc
popa
std
enter
pop
call
xor
sub
montmul
cmpsb
ret
jmp
pusha
push
ljmp
into
mov
dec
jge
adc
and
jns
push
ret
aaa
xor
or
mov
jle
roll
sub
movsb
sbb
ds
cwtl
and
jle
adc
dec
fs
inc
pop
add
pop
sbb
jg
fldcw
xorb
sbb
xor
test
gs
cmp
je
mov
xchg
cwtl
inc
xor
jmp
inc
loope
or
add
inc
dec
aad
outsl
xor
add
mov
push
push
ret
mov
ficoms
xchg
mov
cltd
inc
or
adc
flds
pusha
or
mov
cmp
adc
lods
adc
pop
cmp
sub
pop
sbb
and
adc
push
add
pop
fwait
subb
jmp
dec
add
inc
ret
lock
int
adc
enter
shl
and
ds
adcb
into
dec
or
push
out
push
fcmovu
add
call
jbe
add
add
test
je
mov
or
push
or
lcall
shlb
lock
and
outsb
lret
sbbl
lock
cmp
xor
bound
jge
and
sbb
mov
movswl
xchg
dec
push
xchg
xor
dec
data16
and
xchg
and
mov
push
sahf
mov
sbb
ret
adc
inc
xchg
lds
and
add
sbb
add
cmp
gs
xchg
hlt
adc
sbb
add
mov
xchg
inc
and
jb
sub
sub
cmpsl
jg
rcl
ljmp
jle
mov
push
idiv
and
cld
lock
je
push
adc
xchg
test
add
and
test
sbb
xor
pop
cmpsb
insb
jmp
out
jno
sub
int
inc
mov
jecxz
cmp
loopne
cmp
in
push
mov
icebp
inc
and
or
xchg
mov
clc
add
push
aam
xlat
add
push
test
adc
cmp
dec
and
sub
popf
sub
dec
cmpl
and
or
sbb
sbb
jmp
push
fisubrs
xchg
xor
mov
cmpsb
pop
addr16
add
push
add
mov
xorl
jge
in
ficomps
loope
test
or
pop
xchg
mov
push
sub
sub
or
add
add
push
jnp
jecxz
push
inc
scas
cmpsl
dec
adc
jne
cwtl
fcoms
stos
jae
jae
add
push
adc
or
int
cmp
jle
xlat
into
jbe
jns
aas
jmp
addb
sbb
and
pop
cmp
cli
daa
push
or
or
lcall
int
outsb
mov
cltd
and
fimull
aam
lahf
jb
mov
push
push
ja
inc
sbb
das
jp
pop
lcall
sbb
inc
pop
dec
or
jl
push
push
out
imul
inc
ss
sub
push
mov
dec
pushf
jp
push
push
cmp
adc
mov
sbb
lock
shlb
pop
xor
add
or
movsl
dec
or
inc
xor
cmp
test
jo
adcb
push
jno
orb
lods
mov
sub
or
xchg
icebp
push
jno
adc
jne
jecxz
cmp
mov
enter
push
pop
and
mov
fmuls
repnz
jg
inc
cmp
jle
cmp
imul
push
je
sbbb
sarb
xchg
rol
adc
lahf
inc
lahf
les
lea
cld
in
mov
popf
inc
jbe
push
sbb
pop
cmpsb
out
adc
push
lods
jl
pop
jmp
sbb
add
je
inc
notl
sub
lea
loopne
dec
jbe
sahf
movsb
or
jecxz
adc
mov
dec
iret
add
data16
shrb
adc
add
sbb
adc
xchg
je
sbb
sbb
jge
pusha
ret
dec
dec
jae
sbb
stos
loop
addb
shlb
out
mov
je
lock
sbb
mov
movsb
add
daa
mov
rol
sub
lds
outsb
xor
add
sub
mov
or
and
sub
push
or
push
xor
sub
add
lock
sbb
out
loopne
sbb
sub
rolb
movsb
shlb
inc
aaa
or
pop
test
jne
scas
add
testl
push
stos
pop
pop
nop
mov
adcb
loope
stos
insb
movsl
add
int
or
dec
mov
push
int3
pop
add
mov
add
mov
jns
dec
or
inc
lea
pop
push
pop
ret
sub
inc
shl
and
xchg
xchg
inc
movsb
shl
not
test
pop
data16
mov
jmp
mov
mov
out
inc
jecxz
mov
loopne
je
into
sbb
dec
mov
add
sub
add
jb
push
jmp
cmpb
enter
fdivrl
dec
addr16
incb
jae
fldt
push
mov
cmp
pop
or
insb
xor
jge
add
enter
shl
stos
leave
add
dec
pop
enter
insb
orl
stos
inc
shrb
pmuludq
enter
in
jne
dec
xor
cmp
xor
pop
rorl
shrb
subl
out
and
push
inc
rorl
cld
not
je
popf
je
pop
pop
sbb
inc
or
fwait
or
inc
out
push
or
and
lock
adc
out
and
and
andb
pop
xchg
pop
aas
mov
adc
int3
push
mov
mov
jge
popa
pop
xor
sub
in
mov
hlt
inc
icebp
add
test
gs
pusha
addb
mov
inc
sub
lea
je
add
es
cli
pop
adc
pop
adc
pop
ret
call
mov
dec
jns
inc
lock
dec
and
add
xor
jecxz
jmp
inc
mov
xlat
cmp
push
imul
inc
xor
gs
rcll
dec
pop
lea
ja
or
jl
pop
andl
sbb
out
mov
and
dec
jp
fdivrl
and
mov
sub
cld
sbb
xorb
jge
mov
mov
movsb
pop
scas
shl
mov
cmp
loopne
out
add
fldlg2
xor
mov
stc
inc
adc
add
mov
push
in
pusha
stos
xchg
mov
jmp
and
rolb
inc
push
adc
xchg
repnz
inc
xor
pusha
xorb
xchg
mov
sbb
sbb
push
and
push
and
push
insb
jmp
push
mov
ret
inc
mov
sti
push
or
pop
mov
add
push
cmpsb
imul
aaa
jnp
sbb
pop
mov
test
lods
mov
mov
or
cmp
testb
andl
inc
cs
mov
lret
cmpb
enter
cmp
ja
push
dec
jmp
fs
inc
loopne
mov
sarl
jnp
cli
daa
mov
sub
add
hlt
adc
jecxz
jmp
jge
lfs
andl
jmp
xor
lods
jbe
mov
add
sub
fildll
je
cmp
jle
jle
cmp
push
xor
cmp
ret
jno
jmp
dec
push
sbb
and
sbbl
xchg
in
mov
test
push
cmp
fs
push
jmp
push
xchg
mov
cmpl
jae
mov
ret
shrb
xor
push
pop
jge
pop
cmp
fucomp
sahf
mov
nop
add
jne
lret
sti
lods
adc
je
jmp
mov
dec
inc
pop
nop
or
pop
and
push
mov
outsb
mov
call
decb
push
out
repnz
sub
gs
test
orl
orl
andl
test
ret
sub
ds
sub
cmp
mov
dec
add
stos
sub
mov
sti
jge
call
mov
shll
test
mov
in
mov
mov
jg
addb
add
imull
mov
dec
mov
jmp
ljmp
xor
xchg
out
mov
xchg
pop
sbb
lock
sub
stc
push
adc
imul
test
push
insb
push
popa
mov
pushf
jmp
push
cwtl
pop
mov
mov
loopne
sub
hlt
aad
mov
lahf
dec
or
lahf
mov
pushf
xor
cwtl
jge
neg
add
xor
aam
mov
sub
cmp
xlat
test
cmp
loopne
mov
sub
pusha
jp
jbe
je
aam
enter
mov
das
add
xor
adc
inc
sbb
mov
dec
test
call
jno
sti
sub
mov
sbbl
sarl
pop
dec
xchg
cmp
pop
or
jb
dec
mov
pop
xor
mov
or
cld
pop
icebp
mov
push
xor
and
and
and
mull
lea
nop
cmpsb
fisttpll
shlb
andl
adc
lret
lahf
sbb
ja
scas
jae
mov
pop
push
adc
push
movb
testl
push
push
jne
jne
or
jne
test
ss
inc
into
jne
inc
or
cmp
jne
hlt
int3
add
shr
xchg
jne
mov
jbe
sbb
test
rcrl
pop
insb
sub
test
jle
lcall
or
mov
call
sub
xor
cmp
cli
cmpsl
repz
lock
ja
je
xor
xchg
lods
add
cmpl
mov
pushf
push
cmpsb
cltd
jbe
mov
stc
push
sbbb
jg
add
mov
movsl
mov
bound
jne
out
xor
aam
lods
add
or
add
jmp
push
mov
jae
pop
jne
bound
or
pop
push
or
adc
inc
jb
xor
add
cmpsl
pusha
aad
idiv
je
push
jmp
add
fadd
loopne
shr
rcll
fisttps
clc
mov
sahf
dec
popa
cmpsb
aaa
fsubrl
mov
add
push
push
jl
mov
mov
dec
and
adc
pop
or
or
jge
cmp
add
ficompl
shl
xchg
add
sti
pop
mov
mov
in
fiadds
push
call
fidivl
test
adc
sbb
enter
jo,pt
adc
nop
dec
ja
sub
add
orb
cmp
or
sub
arpl
lret
into
jmp
scas
and
mov
rcll
dec
and
les
inc
lods
lods
cmp
or
pop
inc
int3
or
jne
push
lret
mov
pop
das
sub
add
mul
pop
adc
mov
sbbb
adc
enter
roll
or
call
lcall
nop
push
sub
inc
mov
push
iret
sarl
ficompl
xchg
push
imul
cmpsl
stc
cmp
xor
push
ret
je
xchg
adc
push
jge
pusha
push
inc
xor
mov
add
enter
loop
iret
repz
inc
ror
push
rcl
rcl
aad
iret
repz
xlat
fcomp
rorb
insb
fstpt
add
dec
mov
movb
jmp
or
call
into
dec
jne
loop
rorb
enter
cli
push
cld
dec
mov
add
ficoml
mov
adc
add
push
push
add
and
shll
out
mov
push
add
ret
test
in
xchg
insb
nop
inc
push
icebp
adc
pop
sbb
repz
push
xor
push
push
adcl
push
add
add
addb
sbb
pop
hlt
lret
imul
adc
jmp
pop
mov
je
lea
or
mov
adc
test
test
in
push
neg
push
mov
inc
arpl
aam
out
loop
fiadds
sbb
mov
test
push
imul
fisubs
addr16
fstpl
roll
dec
or
add
cwtl
or
lods
dec
movb
xor
or
lock
inc
add
mov
ljmp
cmp
and
and
mov
pop
or
sbb
and
jae
xchg
ja
xor
push
add
push
lea
into
jne
inc
testl
dec
mov
adc
or
js
add
popa
adc
and
jo
xchg
dec
stos
sarb
or
sbb
dec
rolb
push
mov
std
add
bound
dec
or
mov
push
push
or
mov
enter
sbb
cmp
movsb
sarl
cmp
addl
scas
or
jge
cmpsb
inc
inc
push
jo
mov
and
rorb
or
jle
mov
and
sub
mov
add
cmp
or
int
cwtl
and
shr
push
or
or
push
push
lret
sub
imul
clc
testb
pop
jl
mov
aaa
push
hlt
shrl
xor
mov
out
or
mov
or
dec
mov
test
inc
lods
lock
or
repnz
test
cli
add
jl
or
xchg
dec
mov
orl
push
cwtl
push
adc
sbb
adc
into
xchg
aaa
dec
pop
test
or
inc
push
inc
adc
fcmovb
xorl
mov
xor
mov
rolb
rorl
int
scas
xor
stc
dec
lcall
mov
scas
loopne
or
ja
mov
lds
push
nop
fs
repnz
pushw
sub
shll
jge
adc
mov
add
lds
push
jns
xor
jne
inc
adc
mov
cmp
sub
nop
addr16
shlb
fdivrs
aam
enter
inc
rorb
dec
add
jge
mov
inc
jae
lods
dec
hlt
dec
mov
jl
sub
or
or
push
cld
lea
dec
in
sub
fnstcw
xor
push
mov
jns
and
clc
sub
mov
mulb
fs
cmp
test
and
sbb
inc
orb
mov
sbb
pop
and
popa
movsb
jle
xor
adc
jne
sub
popa
fnsetpm(287
jecxz
jmp
loopne
out
pusha
inc
mov
mov
shr
cmc
add
sub
insb
sbb
jg
scas
pop
movb
inc
mov
add
add
push
nop
cmp
xor
jle
mov
jge
adc
sub
test
cs
in
rcll
sahf
add
or
scas
push
shll
fcomps
jne
sbb
neg
testl
call
icebp
insl
inc
loopne
loopnew
fsub
leave
out
xor
lea
push
and
pop
paddusw
mov
pushf
cltd
cmp
outsl
out
mov
aas
and
xchg
mov
out
fisubl
or
mov
add
sub
adc
enter
lea
sbb
pusha
add
mov
mov
xor
and
rolb
xor
push
push
or
mov
cmp
push
shlb
add
add
les
pop
mov
mov
cld
sbb
testb
enter
scas
faddl
or
jmp
hlt
jg
jb
nop
dec
mov
dec
cmp
jge
sub
cmpb
pop
lock
bound
movb
dec
cmp
jecxz
in
inc
dec
add
add
fadds
xchg
and
pop
add
mov
mov
jp
jne
dec
push
or
cmp
int
pushf
adc
push
inc
ret
and
add
xchg
mov
inc
jbe
inc
adc
ret
adc
push
imul
or
adc
and
jno
push
mov
cld
pusha
mov
je
add
or
adc
add
or
outsl
fs
rol
jmp
nop
push
or
push
add
or
cltd
scas
dec
test
scas
add
push
sbb
sbb
nop
xlat
inc
sbb
push
mov
xor
xor
or
xchg
push
add
add
sbb
ret
mov
mov
inc
and
cmp
xor
into
adc
sbb
mov
mov
rolb
pop
and
pop
pop
push
mov
inc
test
cmpps
testl
adc
and
push
dec
fstcw
mov
cld
rcl
push
pop
jae
or
or
dec
movsl
test
add
rcrl
ss
adc
repnz
mov
lcall
or
cmp
or
dec
pop
dec
adc
sub
mov
jne
and
and
icebp
adc
add
inc
jge
lcall
push
push
jp
iret
cmp
shrb
xchg
xchg
jnp
sbbl
cld
mov
cld
cmp
dec
and
loopne
xchg
or
or
inc
sarl
sub
into
xchg
mov
adc
xor
jle
cwtl
jle
and
scas
pop
mov
sbb
pop
je
pop
xor
add
mov
add
add
dec
roll
add
push
add
lret
je
leave
repz
and
sbb
inc
jg
into
push
into
mov
lods
or
jg
or
icebp
push
nop
pop
cwtl
pop
mov
ret
or
shlb
or
test
pop
xchg
sahf
sbbl
bound
mov
mov
or
lahf
pop
test
out
adc
add
fistpl
jns
add
add
pop
mov
and
je
and
inc
sub
inc
jle
shll
sbb
sub
xchg
or
mov
lret
sbb
daa
lret
xor
popa
dec
xchg
push
or
or
scas
jge
pop
jp
movsl
add
sbb
or
mov
inc
ret
or
or
fistps
aaa
xchg
mov
je
and
mov
push
and
push
dec
push
and
xor
dec
aam
test
push
icebp
fiadds
cltd
mov
push
mov
dec
jbe
les
sarl
pusha
sub
outsb
test
test
js
aas
jge
jle
push
mov
xchg
push
adc
sbb
xlat
jle
int
scas
add
jmp
call
jge
lcall
xchg
jl
or
popa
pushf
push
stc
ljmp
jge
dec
xchg
test
dec
loope
push
insb
dec
sbb
enter
ror
jp
push
adc
pop
cltd
mov
insl
add
inc
add
mov
mov
jmp
pop
jne
je
or
xor
sub
add
ja
mov
je
mov
mov
mov
and
mov
lret
inc
push
stos
fsubr
mov
sbb
jae
and
out
imul
sbb
jo
jbe
addr16
jmp
and
adc
or
pop
movsb
mov
aam
test
pushf
cmp
jle
jno
sbb
fcoml
mov
pop
test
pop
mov
and
loopne
mov
add
lods
shrl
sbb
sbb
rcrl
scas
xchg
mov
push
int3
and
imul
jnp
inc
pushl
inc
inc
xchg
push
imul
mov
dec
push
test
push
xor
mov
out
je
and
cmc
clc
push
pushf
lock
shrb
in
jbe
mov
push
in
sbbb
pushf
movsb
add
sub
shlb
fcoms
mov
dec
das
or
cmp
aaa
fdiv
fistl
xchg
inc
sbb
clc
sub
xor
test
in
mov
daa
arpl
jae
shll
fs
pop
push
imul
stos
mov
and
inc
mov
dec
enter
cmp
adc
jb
in
lret
fwait
lret
hlt
mov
test
adc
scas
mov
mov
xchg
add
push
mov
or
inc
pop
inc
je
push
fstl
dec
mov
rolb
jmp
inc
jmp
sbb
pop
add
add
mov
repnz
andb
fsts
push
sbb
sar
jbe
das
cmp
dec
xor
mov
xchg
or
test
cmp
push
inc
jns
push
les
enter
push
les
subl
stos
adc
insb
inc
jo
jne
pushf
rclb
sub
pop
lahf
and
or
call
or
push
push
push
pushf
and
push
inc
pop
push
push
fmull
in
cmpsl
test
push
into
inc
inc
fisubrl
incb
adc
or
jo
negb
and
and
sbb
outsl
sbb
dec
roll
add
sub
test
dec
test
inc
divb
sbb
xor
int3
ret
call
mov
lods
iret
adcl
pop
jl
pop
dec
lea
mov
aam
ss
int3
add
adc
lods
in
stos
movsb
dec
add
lock
dec
mov
enter
jae
fsubs
in
movsb
hlt
mov
dec
add
cmp
loop
add
push
ljmp
imul
cmp
jmp
js
push
xchg
mov
das
dec
addb
cltd
inc
js
sbb
xor
dec
mov
push
pop
push
das
mov
jle
push
rol
movb
in
add
push
inc
lock
push
icebp
push
mov
jl
xor
push
daa
loope
ret
push
and
loope
sub
lret
fistpl
sbb
subl
lahf
push
movsb
or
je
bound
mov
sbb
and
scas
add
mov
or
pop
lahf
idiv
cmp
jb
cmp
ja
add
cmp
adc
cmp
sti
rcll
leave
adc
shll
inc
xchg
rcrl
rorb
mov
icebp
mov
fistps
mov
and
pop
lret
loopne
clc
push
add
lock
lret
sub
sbb
roll
xor
cli
inc
xor
or
sub
mov
pop
fcmovb
jmp
cmp
mov
mov
divb
bound
scas
push
push
stos
add
inc
sti
mov
add
lock
cmp
je
sbb
ret
fildl
dec
xor
or
int3
cld
push
clc
pop
cmpsl
cmp
adc
testb
xchg
rclb
and
aas
mov
mov
add
cli
mov
or
mov
ficomps
xor
mov
xor
adc
rorb
repnz
jne
adcl
adc
add
subb
pop
push
mov
push
inc
cmp
test
outsb
imul
push
cli
ret
push
or
push
idivb
loop
andl
mov
je
mov
xor
jmp
fabs
or
testb
rolb
xor
sbb
lret
je
data16
faddl
or
imul
cmc
cmp
shlb
sbb
loop
shll
scas
jo
inc
xor
pop
dec
xchg
and
mov
and
jmp
and
in
cwtl
movsb
xor
into
lods
mov
pop
sbbl
or
lods
test
ds
rolb
lods
pop
movsl
leave
or
and
iret
rcll
aas
push
mov
out
sub
add
mov
mov
pop
clc
das
mov
imul
jae
cld
add
xor
push
push
ds
pop
jae
push
je
or
jle
cli
pop
dec
jb
add
hlt
mov
inc
and
jae
test
add
loopne
inc
add
mov
mov
in
or
mov
sbbb
das
push
lock
les
or
adc
xchg
and
subb
cmp
or
cmp
xor
in
mov
sti
push
std
sbb
inc
adc
adc
cmp
inc
inc
push
dec
or
in
inc
xchg
pusha
dec
cmpsl
fdivl
mov
mov
icebp
pushl
inc
mov
dec
mov
stc
jns
inc
add
outsl
inc
cmpsl
or
and
add
lea
pop
push
or
adc
pop
dec
jbe
mov
sbb
adc
inc
les
and
xlat
mov
sbb
or
inc
or
cmpsb
imul
xchg
adc
and
imul
push
js
dec
push
sbb
or
jmp
jb
adc
movsb
loopne
and
mov
adc
sbb
and
inc
adc
fs
popf
mov
mov
sbb
sub
out
sbb
jns
push
push
jo
mov
cs
fistpl
clc
rcrb
xchg
stos
shrb
lds
sub
xor
push
sbb
addl
mov
or
xor
or
pop
sbb
jbe
adc
sub
in
adc
sbb
mov
adc
icebp
movsb
data16
jo
mov
adc
inc
ds
mov
movl
add
std
dec
unpckhps
xchg
rorl
in
jle
push
xor
xor
xor
jle
mov
add
orl
or
xchg
imul
inc
cmc
insb
mov
sbb
dec
ja
pop
je
jmp
or
movb
push
sbb
lcall
daa
sub
mov
xchg
xor
push
or
add
and
dec
adc
dec
pop
add
xchg
fs
aad
jno
dec
pop
test
inc
fiadds
mov
jmp
dec
push
and
push
or
jmp
xor
sbbl
hlt
mov
lock
loopne
mov
lods
lods
dec
shll
and
xor
adc
adcl
xor
mov
adc
push
sub
adc
xor
or
cmc
mov
shlb
mov
and
xor
push
add
fnstenv
sub
sbb
mov
cld
mov
dec
das
pop
mov
and
loop
jle
roll
cmp
testb
inc
sbb
fdivrs
outsb
call
shll
inc
add
jl
xor
xor
inc
mov
pop
ds
sub
push
fiadds
xor
adc
aad
and
xchg
pusha
push
in
mov
jg
sub
xchg
imul
into
iret
daa
daa
and
mov
leave
test
add
push
push
adc
push
mov
add
xor
fistpl
dec
pop
push
in
xchg
pop
add
or
mov
testb
mov
sbb
mov
insb
mov
lock
jmp
mov
push
jo
and
cmpsl
xchg
or
clc
pop
dec
xchg
dec
push
mov
sub
movb
inc
lea
mov
imul
inc
or
push
fisubl
or
and
lods
adc
xchg
pusha
pop
movsb
inc
adc
add
jge
aam
and
inc
fwait
rolb
lods
mov
sub
and
mov
pop
jne
pop
xchg
mov
cmpsl
das
fs
push
or
cmp
inc
adc
inc
push
or
leave
sbbb
jne
inc
and
arpl
inc
add
adc
ret
mov
clc
push
or
dec
sbb
inc
mov
push
das
and
inc
sbb
adc
add
xor
add
inc
sbb
lret
js
inc
dec
adc
lds
cs
or
inc
stos
out
fisubrl
sub
sbb
movsb
cmp
push
push
mov
mov
cltd
pop
sub
mov
lret
pop
pop
or
ret
int3
bound
xor
add
filds
jno
add
push
js
xor
inc
or
or
or
mov
add
and
or
inc
sahf
add
pop
es
mov
aaa
daa
adc
mov
push
pusha
or
xor
cmp
je
push
decl
mov
push
andl
outsl
add
mov
addr16
dec
dec
cltd
cmp
or
jne
call
bound
bound
lret
adc
stos
icebp
push
or
movsb
add
shl
inc
or
test
outsb
lcall
test
mov
cmp
movq
or
xor
ss
dec
sub
add
push
mov
outsl
add
xchg
int3
pop
cmp
in
dec
and
xchg
das
mov
add
mov
inc
adc
adc
mov
fcmovnbe
and
jbe
adc
add
cmpsl
xchg
or
mov
mov
pushl
rorl
nop
pop
test
fdivrl
sbb
or
adc
adc
stc
jmp
divl
adc
pop
mov
cmp
or
inc
dec
in
sbb
jae
xchg
mov
neg
jbe
push
mov
test
out
je
pmaxsw
movsl
rcl
push
cmpsl
sbb
push
push
jmp
pusha
jno
es
hlt
cmp
imulb
out
fcompl
insl
shrb
in
fsubrs
pushf
cmpsl
add
inc
loop
notl
xlat
add
add
adc
enter
mov
jne
clc
adc
mov
jle
cmp
cwtl
jb
mov
fwait
and
in
fstpt
and
mov
push
xchg
rolb
das
jp
inc
adc
pop
subb
push
and
jl
ret
mov
push
mov
or
clc
sub
nop
adc
push
loopne
push
dec
jle
pop
xor
test
test
pop
mov
rorb
mov
dec
mov
adc
sub
inc
jle
sbb
js
cmpsl
mov
pop
xor
dec
and
inc
and
addr16
scas
adc
pop
or
int3
out
shlb
and
int3
sbb
jo
add
sbb
push
je
fistpl
sub
rclb
scas
push
ror
mov
sub
scas
mov
push
jecxz
cld
rclb
adc
jne
mov
pushf
xchg
call
orl
outsl
addl
enter
adc
push
addr16
dec
pop
push
jo
adc
cmp
jo
jge
jns
pop
cs
sbbl
jl
push
push
mov
pop
test
nop
pusha
ljmp
repnz
and
xor
cwtl
and
xor
inc
lahf
enter
cltd
or
mov
je
mov
ljmp
insb
sub
push
jb
or
lods
mov
mov
inc
pop
xor
inc
and
dec
je
adc
mov
adc
ljmp
sbb
mov
cmp
mov
aaa
cmp
jmp
xchg
movsl
loop
mov
adc
mov
sbb
enter
dec
mov
inc
cli
mov
and
xchg
enter
int
enter
imul
mov
add
push
in
scas
ja
in
and
lods
or
add
cltd
mov
add
push
mov
jge
cmpsb
sbb
les
rcl
push
add
sbb
push
lea
pop
push
insl
adc
in
pop
cli
jno
dec
mov
mov
insb
jmp
add
mov
cltd
gs
cmp
xor
popa
insl
clc
add
lock
sbb
dec
je
sarl
outsl
sbb
inc
inc
movsl
and
cmc
pushf
jmp
dec
aas
jo
lret
mov
ja
add
add
inc
xor
mov
sbb
out
test
or
bound
lods
je
aaa
mov
or
or
sbb
sub
aad
stos
sbb
sbb
rorb
add
ljmp
pop
dec
add
dec
inc
movsb
cs
clc
lea
cmp
imul
push
incb
lcall
je
fistpl
mov
enter
add
sbb
inc
aaa
mov
sbb
mov
stc
push
in
mov
mov
adc
jnp
mov
pop
mov
pop
js
and
repz
or
dec
scas
adc
jmp
and
inc
inc
xchg
lock
sbb
inc
cmp
jl
xchg
loopne
cmp
and
in
mov
mov
or
das
or
aaa
cmp
and
cmpl
jbe
data16
dec
or
push
add
and
cmp
call
pop
clc
sbb
movl
add
xor
aaa
test
pop
add
push
push
sbb
cmpb
and
or
dec
xlat
mov
mov
insl
mov
push
cltd
jb
mov
in
and
testb
sub
loop
lar
adc
out
and
cmpsb
push
xchg
pushf
es
sub
mov
mov
xor
add
arpl
nop
and
or
nop
mov
mov
mov
add
pop
call
mov
pop
cmp
bound
outsl
cmp
addr16
add
pop
dec
out
mov
sub
dec
mov
jl
incl
daa
rorb
push
fdivrl
sub
cmp
pop
xor
rorb
sub
jecxz
addl
sub
push
jo
mov
fsubl
ret
adc
loope
pop
shll
add
mov
ret
dec
or
dec
mov
or
mov
clc
sbb
adc
scas
orl
mov
or
shll
xchg
pop
mov
pop
jnp
pop
int3
in
stc
mov
fildl
mov
sub
repz
inc
ret
sub
das
jns
lret
aas
popf
add
dec
inc
or
add
gs
jb
mov
scas
test
in
inc
cmp
inc
jp
jbe
jbe
inc
xchg
mov
enter
outsl
sbb
push
dec
and
loop
js
cmp
nop
adc
sub
movsb
cmp
dec
add
mov
cmp
mov
jb
pop
lock
pushl
and
or
pop
sub
xor
pop
jne
and
pop
adc
xor
movaps
push
shll
les
rorb
push
mov
ret
pop
popa
invd
test
cmp
test
mov
xlat
inc
add
jne
clc
pusha
fisubs
testb
sbb
pop
jge
sbb
or
sbb
add
dec
ret
sub
pop
popa
std
dec
add
shr
dec
add
or
xchg
xchg
push
lock
or
and
test
rcll
or
add
icebp
cld
lock
call
pushf
pop
jmp
dec
jne
mov
dec
cld
std
in
jp
push
hlt
inc
enter
add
xorb
push
ljmp
adc
test
adc
pop
popl
into
shr
xor
pop
cmp
rolb
sub
stc
sbb
push
mov
add
cmp
jle
pop
jl
push
ret
pop
add
fcomps
xchg
xor
mov
cmovs
pop
in
mov
jecxz
add
push
pop
add
or
pop
pusha
or
sbb
nop
jae
sub
mov
mov
or
sbb
add
or
xchg
andl
stos
outsl
repnz
pushf
mov
jo
scas
fidivrl
add
pop
xor
mov
mov
cmp
imul
dec
mov
pop
jb
loopne
sub
loop
adc
mov
inc
cmp
ja
push
loope
popa
in
inc
loop
push
ja
fmull
ss
xchg
mov
adc
inc
or
mov
cmp
jg
push
inc
pop
add
scas
movsl
cmp
js
cwtl
or
cmpsl
pop
stos
std
push
int
push
add
or
inc
sbb
mov
xchg
stos
xorb
or
push
mov
jb
pop
push
add
sbb
push
or
out
or
pop
mov
sbb
mov
les
dec
sub
xchg
dec
mov
pop
cmp
sbb
orb
mov
and
mov
mov
daa
xor
pop
push
out
movl
push
mov
push
orps
fwait
jmp
sbb
push
mov
mov
or
adc
in
inc
lock
mov
cmpsl
sbb
adc
or
lret
xchg
inc
sub
add
andb
dec
int3
cmp
mov
sbb
add
xchg
jp
jg
ret
mov
push
and
sbb
fcoms
dec
lock
mov
inc
outsl
jnp
pusha
cmp
out
inc
or
and
push
add
ret
outsb
or
adc
cwtl
pop
mov
and
and
faddl
jb
xor
add
incb
or
push
jo
push
jbe
stc
xchg
cmpsb
dec
inc
mov
cmpb
inc
outsl
cmp
push
sbb
sbb
jl
lret
int
sarl
sti
jae
sarl
pop
push
fcmovnb
pcmpeqb
mov
je
xlat
flds
or
loopne
loope
subb
pop
in
fcmovbe
mov
mov
stc
xchg
xor
adc
inc
mov
test
jne
fimuls
sbb
add
in
pop
pop
add
pop
adc
xor
test
cmp
dec
aas
popf
cmp
cmp
mov
pop
and
xor
push
mov
jnp
ficompl
and
or
and
mov
pop
jne
add
xchg
cmpl
into
xchg
xor
sti
mov
decb
pop
and
loopne
je
mov
push
lods
inc
xchg
push
push
mov
inc
es
adc
add
data16
pop
mov
clc
mov
ss
pop
push
push
sbb
stos
jne
in
adc
jmp
js
dec
push
jns
ds
sbb
call
sub
ss
mov
clc
dec
jnp
leave
add
push
push
roll
and
push
dec
nop
lods
filds
dec
lds
push
dec
sbb
sub
mov
mov
dec
pop
mov
pop
xchg
popa
mov
add
movsl
aas
add
push
inc
pop
push
sub
jecxz
addl
mov
test
add
adc
push
and
into
jne,pn
sub
sub
pop
jg
and
enter
rcl
cwtl
or
out
fldl
cltd
push
loope
jnp
push
and
dec
fsubrl
pusha
test
pop
sub
push
mov
or
inc
adc
iret
mov
adc
add
cmp
push
insl
inc
sub
xor
inc
dec
jne
sub
sub
sarb
das
popa
pushf
loop
jo
jae
adc
push
ljmp
adc
sub
mov
mov
in
mov
movb
shlb
fldl
sbb
mov
pop
pop
inc
pop
fsubr
loopne
and
push
adc
mov
test
pusha
arpl
pop
or
shlb
add
test
fcomps
and
push
adc
fsubs
adc
into
insb
add
mov
mov
push
test
testb
pop
add
int3
stos
ljmp
mov
mov
add
push
les
shlb
rcrb
enter
sub
popa
popa
jmp
mov
rclb
pop
outsb
shll
daa
rep
addb
imul
fldl
mov
pop
adc
inc
xchg
mov
pop
or
mov
or
cld
push
lea
push
out
test
xor
loope
or
jne
loopne
pusha
pop
pop
fsubl
subb
jne
jle
test
test
jb
xchg
ret
mov
loop
sbb
mov
je
push
jno
add
je
xchg
xchg
sub
add
mov
dec
xor
jb
and
cmp
daa
mov
inc
js
or
cs
jne
mov
jae
cli
or
mov
add
rcrl
add
or
iret
adc
hlt
pop
sbb
out
cmp
lock
dec
in
inc
cmpl
lods
roll
aaa
or
jg
mov
fdivrs
push
dec
jne
push
mov
or
xorb
sbb
jge
addb
mov
and
leave
jno
test
jge
sbb
addb
dec
in
or
sbb
in
cmp
mov
add
jp
in
push
es
mov
add
jge
xchg
mov
mov
jmp
jmp
cmp
sbb
pop
lret
lods
adc
dec
rolb
fmull
pop
fidivs
lret
jl
jecxz
es
add
or
inc
jne
add
out
ljmp
add
pop
or
and
mov
clc
mov
in
insl
mov
jbe
adc
repz
sbb
mulb
add
pusha
je
lds
sub
add
test
adc
adc
jmp
andl
adc
jo
pop
add
dec
sbb
aam
aam
xor
cmp
lret
addb
test
inc
push
inc
dec
sbb
testl
ret
test
mov
mov
or
loop
push
jg
and
iret
shlb
fbld
fisubs
adc
mov
data16
sbb
dec
rcrb
in
es
pop
fs
mov
mov
sti
xor
adc
mov
or
mov
ret
xor
jecxz
shrl
mov
shl
ret
mov
mov
iret
sub
stc
sbb
add
mov
repnz
mov
cmc
stos
cli
mov
xchg
push
lcall
or
xchg
lods
shr
hlt
mov
test
mov
mov
shll
cmp
xor
push
shr
push
loopne
pop
xchg
cmp
test
push
push
sub
add
mov
pop
cmp
cmp
das
or
xor
sub
daa
add
or
xor
les
sub
cld
mov
testb
int
scas
ret
lods
cmp
shrl
aam
fdiv
adc
mov
sbbl
or
adc
push
mov
push
sbb
sub
jne
add
dec
xor
mov
and
iret
sub
add
inc
ss
mov
xor
add
adc
fisttps
je
mov
jmp
out
inc
cmp
jb
xchg
aaa
or
and
cld
xor
adcb
jecxz
int3
pushf
testb
xchg
xlat
scas
aam
and
mulps
dec
or
lret
inc
pushf
adc
test
sub
cmp
xor
add
rclb
cmc
testl
xchg
xchg
std
mov
jbe
inc
xlat
adc
stos
mov
clc
inc
adc
xor
inc
sbb
ror
inc
sbb
dec
sub
and
jno
loopne
sbb
push
in
xchg
pop
adc
test
test
push
test
int3
aas
or
push
mov
dec
cmp
lret
in
call
push
inc
jns
insb
cltd
push
fisubs
popa
push
cmovo
insl
mov
adc
sbb
inc
cmp
push
aas
ficoms
xor
bound
test
xor
xchg
jl
lret
add
aad
mov
movsb
in
mov
or
lods
ss
ret
orl
dec
in
mov
mov
cwtl
mov
jb
pusha
imul
add
dec
fs
mov
mov
aam
movsl
adc
pop
jg
stos
iret
inc
fdivrs
xchg
cmp
std
in
sbb
clc
and
or
in
cmpsb
mov
icebp
aam
push
jno
mov
leave
test
imul
sub
push
test
mov
inc
cs
dec
push
fidivrl
in
icebp
les
add
in
sbb
in
or
adc
adc
loopne
jecxz
scas
mov
xorl
adc
lahf
xor
leave
out
add
popa
pop
mov
or
sti
cmpsl
adc
cltd
fs
in
lret
or
adc
or
xor
inc
push
sbb
shrb
je
jl
and
and
stos
dec
in
push
cmp
shlb
pop
push
outsl
push
nop
push
inc
mov
insl
stos
cmp
and
gs
cltd
lock
sub
pop
jo
gs
cmp
xchg
ss
xchg
int3
decb
cmp
mov
fdivr
rorl
nop
sbb
jno
lahf
pop
enter
jno
adc
fistps
jb
dec
fcoml
push
sbb
enter
aam
outsl
xchg
adc
adc
repz
jns
xor
mov
fs
and
sbb
fwait
int3
sbbl
push
bound
je
lcall
jmp
jmp
cmp
mov
leave
push
jnp
and
cmp
xchg
or
call
in
test
jne
xor
fcoms
push
cmp
xor
test
dec
fdivrl
sbb
and
xor
inc
push
jbe
mov
inc
xor
inc
int3
call
in
ja
sbb
sbb
cwtl
sarb
pusha
dec
and
fdivs
lock
jl
sbb
xchg
ja
in
int
cltd
ss
pop
in
mov
in
inc
call
sarb
ret
jo
test
and
cs
nop
jle
add
or
in
in
pop
cmp
sbb
and
push
pop
es
popf
xor
inc
cwtl
test
les
leave
xchg
sbb
pushf
fsub
aam
xor
stos
jae
subb
je
inc
shll
test
and
xchg
andb
mov
xorb
test
ljmp
pusha
dec
enter
sbb
lods
mov
in
aas
xchg
cmpl
test
cmp
inc
sbb
arpl
inc
inc
sbb
test
or
or
pop
ss
test
cmpl
and
push
inc
rolb
xor
clc
hlt
cld
jae
dec
mov
insb
mov
sub
and
jge
insl
push
push
mov
mov
mov
xchg
sbb
xchg
add
add
pop
in
adc
rcrl
pusha
push
pop
hlt
sbb
push
pop
shll
push
cwtl
lahf
nop
push
push
xchg
notb
roll
lock
mov
dec
fisttpl
leave
and
in
sahf
mov
push
sbb
movsb
bound
pusha
call
sub
sub
dec
idivl
cltd
les
mov
xchg
shrb
and
pushf
adc
sbb
sub
adc
test
pusha
xorb
nop
idiv
aad
dec
sub
xchg
nop
push
mov
loopne
push
jns
mov
fnsave
ret
adc
pop
jns
jge
mov
dec
in
roll
push
addl
clc
push
mov
push
scas
popf
push
mov
int
cmp
xlat
push
inc
xchg
imul
sub
jb
fisubrl
cmpl
movsl
mov
aad
andl
std
mov
dec
movl
add
mov
jns
mov
inc
mov
add
sbbl
jl
xor
inc
push
adc
and
adc
nop
mov
repnz
mov
stos
push
sub
sbb
mov
enter
es
adc
addr16
imul
or
out
test
or
adc
dec
dec
pop
sbb
fldenv
out
orl
mov
out
out
push
out
xchg
out
sub
out
pop
pop
push
test
push
movsb
jo
rcrl
test
adc
mov
push
test
mov
movsl
enter
popa
adc
cld
and
xor
icebp
pinsrw
cmp
frstor
out
push
mov
adc
out
pop
xor
addr16
mov
push
jle
sub
mov
xchg
ret
dec
jnp
notb
incb
imulb
aas
xor
adc
fiaddl
shrb
dec
add
xor
xchg
ljmp
in
nop
in
mov
rcl
rolb
cs
mov
repz
add
enter
jmp
pop
mov
ljmp
rcrb
aas
outsl
imul
and
mov
jmp
xchg
fptan
loope
movsb
mov
cmp
addr16
daa
loop
daa
popa
adc
jecxz
pop
dec
add
mov
xor
add
les
pushf
cmp
out
ret
fimuls
pop
jge
jns
negl
cld
out
out
jns
js
push
nop
outsb
mov
into
and
push
push
jecxz
repz
repz
repz
icebp
pusha
add
testb
movb
es
mov
cmpsb
push
sbb
inc
dec
insb
gs
iret
mov
gs
imul
add
ljmp
cmp
fs
push
mov
mov
sbb
gs
push
lahf
and
mov
iret
inc
inc
add
inc
dec
push
push
dec
inc
pop
sahf
dec
outsb
jbe
insb
imul
dec
dec
outsl
je
jne
jo
jb
gs
gs
es
adc
imul
add
inc
or
fwait
and
cwtl
jg
aaa
dec
and
mov
fsubrl
and
or
pop
inc
cld
mov
jo
adc
dec
inc
pop
and
xchg
les
sbb
out
imul
jg
out
push
mov
inc
push
imul
sti
add
je
adc
lret
jb
jbe
gs
jns
shr
addr16
push
pop
mov
daa
mov
adc
daa
fstpt
flds
pop
cmp
inc
das
mov
adc
pop
inc
cs
add
pop
cmp
sahf
add
loope
jl
gs
arpl
adc
pop
sti
out
inc
je
xlat
and
insb
dec
jae
fstpl
out
dec
inc
push
dec
inc
dec
xor
loope
in
push
push
outsl
data16
popa
inc
pop
dec
imul
icebp
sbb
jae
inc
jne
outsb
je
gs
je
push
outsl
insb
loope
cwtl
roll
sarb
in
sub
sub
jne
push
inc
jb
in
jnp
add
jae
sbb
xor
fidivs
sti
cs
gs
outsb
gs
inc
imul
lcall
outsl
arpl
je,pn
or
mov
test
pop
enter
fidivl
imul
xchg
jbe
inc
sbbb
insb
addr16
mov
insb
shlb
inc
jle
or
inc
jne
jg
jb
sbb
imul
xor
dec
dec
out
mov
cs
push
inc
idiv
adc
movsb
xor
popa
jne
je
dec
dec
popa
lcall
aaa
push
jae
xor
imul
insb
lock
jge
flds
and
scas
in
dec
cmpsl
insl
mov
addr16
movsl
cwtl
push
test
idivb
and
es
pop
mov
test
fistpl
cmp
lahf
cltd
push
sbb
ret
pop
adcl
xchg
sti
xor
out
loop
dec
fs
xchg
push
ss
mov
push
repnz
jle
orb
push
push
push
cmpb
sbb
pop
sub
jl
jge
jo
and
push
cmp
or
popa
xor
neg
mov
add
xchg
cs
loop
data16
pop
jbe
inc
jae
aaa
insb
imul
push
insb
insl
data16
jb
punpcklwd
push
sub
arpl
loope
je
sbb
test
inc
outsl
jo
sub
and
push
pop
aaa
popf
xor
push
dec
dec
dec
dec
dec
jo
push
inc
mov
dec
push
push
add
inc
inc
pop
inc
inc
mov
dec
push
push
push
cs
cmp
imul
push
cmp
js
adc
addr16
xchg
mov
adc
dec
repnz
dec
call
add
add
mov
jno
dec
mov
xor
enter
leave
pop
inc
add
cmp
ss
cs
push
testb
cs
dec
or
repnz
push
filds
notb
ss
inc
imul
dec
sbbb
ss
and
mov
push
inc
mov
shrl
lods
push
loopne
xor
sar
xchg
in
push
fs
mov
loop
push
fldt
out
mov
push
jne
adc
push
inc
xchg
aaa
mov
ficomps
jo
addr16
push
in
enter
imul
lds
leave
sub
pop
sub
push
add
fldl
cmovs
dec
addb
xchg
inc
outsb
data16
inc
jbe
pop
or
lock
outsb
bound
inc
dec
cmp
add
rcrb
insl
outsl
dec
outsl
inc
or
cltd
test
sbb
ds
and
data16
push
iret
repz
je
insb
pusha
push
dec
icebp
cmp
add
add
push
pop
add
sub
xchg
jg
push
add
je
sub
scas
or
ds
aad
js
push
mov
pop
xchg
out
jo
jl
inc
insl
shlb
iretw
or
das
and
pop
adc
aaa
cmp
dec
pop
lods
push
cmpsl
cld
push
mov
call
jbe
ss
mov
push
push
lods
lea
xchg
xchg
insb
test
mov
dec
sahf
jbe
push
push
push
inc
shl
leave
xor
cwtl
inc
xchg
mov
movsbl
cmpb
sub
fists
inc
dec
addl
inc
push
xchg
sbb
adc
pop
test
mov
mov
loopne
paddsb
jns
pop
mov
sahf
dec
mov
les
adc
repz
sbb
push
sldt
pop
andb
dec
mov
out
jg
ss
sahf
popa
fildll
pushf
pop
popa
rcl
push
enter
fs
mov
pop
scas
imul
dec
int3
js
mov
outsl
jne
daa
mov
das
loopne
bound
aaa
mov
mov
xchg
or
mov
and
push
push
mov
cmovs
and
bnd
lahf
xor
cmpsl
call
out
pop
cmp
lahf
push
jecxz
repnz
sahf
out
fisubrl
mov
jno
movsb
xlat
repz
fimuls
mov
sahf
imul
adc
mov
repz
outsb
test
arpl
gs
addl
fistl
xor
push
insb
out
aas
mov
pop
jg
adc
push
dec
pop
fcoml
xor
mov
ss
mov
or
push
jge
ds
add
jnp
jg
ds
jbe
mov
mov
ss
mov
testb
pop
mov
mov
add
shr
mov
inc
das
jg
cmp
je
je
dec
popa
jo
je
test
out
jb
outsl
or
adc
sbb
mov
scas
cmpsl
mov
or
or
push
or
mov
mov
jb
mov
insb
push
sbb
adc
pop
lret
cs
lods
sti
mov
mov
into
mov
inc
adc
xchg
sar
adc
push
jg
xchg
and
mov
mov
out
dec
mov
ds
imul
ds
pop
iret
arpl
rorb
jg
and
popf
lahf
loop
cmp
jae
ljmp
jp
daa
dec
inc
dec
inc
jb
hlt
ja
popa
insl
and
sbb
push
int3
mov
lea
jne
daa
les
push
arpl
xor
sahf
add
xchg
adc
adc
inc
cli
push
jge
inc
outsb
jne
out
insb
popa
jns
sti
inc
addl
sub
scas
dec
outsb
outsw
inc
inc
das
sub
mov
adc
insl
push
outsl
jl
pop
pop
mov
daa
push
lcall
mov
out
dec
testl
lret
arpl
popf
inc
and
pop
test
jge
mov
adc
add
jae
add
jne
add
into
insl
pop
push
insb
outsb
gs
jnp
mov
push
jb
jo
imul
insb
xchg
adc
pop
cmp
dec
inc
jo
push
jbe
cmp
fidivs
arpl
jns
xor
pop
cmpl
je
jne
cmpl
xor
or
push
arpl
imul
cmp
jg
imul
ja
roll
mov
or
mul
push
push
imul
jl,pn
sub
lahf
data16
int
iret
sbb
imul
fldt
imul
jnp
das
fisttpll
out
fimuls
xor
cmpsl
nop
repz
loopne
sti
push
xor
repz
loope
pop
inc
add
lea
icebp
fdivp
cmpsb
jae
pop
and
loop
inc
dec
sub
and
iret
insb
fimull
mull
add
ljmp
stos
iret
mov
push
add
mov
fcmovbe
jo,pn
mov
in
inc
ror
repz
arpl
mov
cld
sahf
out
ds
inc
imul
pop
shrb
popf
cmp
repz
ret
pop
lock
sub
out
into
test
ss
push
sti
push
xchg
pusha
andb
lcall
xchg
ds
cmovne
pusha
inc
cli
push
es
shrl
pop
iretw
or
pop
jnp
pop
loopne
xchg
cmp
adc
aam
lcall
jp
mov
inc
nop
xor
orb
or
push
insl
cmp
aam
aas
jmp
push
dec
je
insb
dec
gs
jo
shl
sti
push
outsl
arpl
xor
cmpsl
sahf
push
pop
jbe
jnp
cs
call
push
aas
xchg
mov
xlat
insb
cs
stos
push
mov
int
stc
fcomi
mov
inc
out
out
xchg
push
hlt
push
push
xchg
repz
movb
dec
pop
repz
imul
add
cmp
hlt
popf
cmp
test
sbb
and
fidivs
les
fisttps
add
sbb
repz
pop
inc
and
xor
cmp
insl
gs
ja
negb
divb
sbb
cmp
push
push
sbbl
xor
xor
xor
pop
and
pop
add
sbb
lcall
lock
mov
in
cmp
pop
das
and
pop
sbb
mov
das
sub
in
pop
add
pop
add
imul
or
lock
pop
in
add
imul
push
xchg
adc
xor
sbb
loopne
sahf
jl
pop
jle
ds
sub
mov
and
mov
psubusw
jns
movsb
out
jle
int3
add
movsb
std
adc
imul
arpl
mov
inc
jb
addr16
js
jae
idivb
add
subps
push
dec
inc
adc
adc
cld
adc
popa
int
shl
push
jo
xchg
xchg
ret
or
inc
imul
xor
es
dec
mov
fldl
rcll
pop
in
xor
cli
outsl
nop
std
xor
or
fs
imul
or
scas
movsl
inc
mov
ja
dec
outsl
mov
jae
pop
rcll
xor
aaa
xor
add
jns
jo
outsb
sti
das
mov
jne
inc
push
jns
pop
xor
nop
data16
xor
add
xchg
inc
pop
aaa
jg
sub
aaa
xlat
dec
imul
mov
rcrl
mov
movsl
xor
and
push
rcll
js
out
imul
sub
and
sub
cmpsl
stc
cmp
cmp
in
or
and
fdivrs
cmp
nop
push
mov
cmpsl
les
jns
jae
in
and
lods
xchg
ja
out
je
test
je
lods
neg
movl
pop
daa
test
and
iret
mov
mov
push
pmulhuw
lock
into
jnp
and
push
cmp
cli
xchg
or
int3
sub
jns
insb
push
aad
jb
jns
mov
mov
push
push
inc
in
push
into
sbb
mov
daa
int3
xlat
ja
adc
or
outsb
inc
add
inc
or
addl
and
cmpsl
push
inc
outsl
cmp
pop
cwtl
je
pop
aas
int
push
sub
idivb
or
add
cmp
pop
mov
int3
outsb
lock
jmp
ss
pop
or
ljmp
and
and
sbb
sub
scas
rclb
sbb
sbb
ficomps
cmp
add
dec
add
push
das
das
jns
mov
je
dec
fs
aam
insl
pop
or
in
scas
jbe
dec
push
fsubs
subb
iret
push
or
dec
xchg
mov
inc
add
pop
add
test
add
sti
bound
push
inc
xor
into
mov
xchg
out
jnp
jns
jg
addr16
fcmove
fdivrl
lahf
mov
jae
mull
daa
push
gs
sbb
cmp
out
jbe
push
jne
xchg
xor
dec
inc
ds
popa
das
jo
add
ljmp
cli
mov
xchg
gs
jno
jp
into
add
out
insb
add
test
push
push
outsb
imul
cmp
movsb
lds
js
xchg
faddl
inc
pop
adc
ret
rcrb
imul
outsb
das
or
xlat
jl
fcmovnbe
js
inc
lock
cmpsb
pop
dec
gs
jo
jle
mov
jb
popa
aaa
inc
repnz
std
ja
push
inc
outsb
arpl
lods
push
mov
and
dec
or
adc
adc
dec
iret
push
inc
insb
jae
xchg
loopne
dec
gs
jne
inc
inc
insb
insb
cmp
loope
jo
jbe
xchg
mov
scas
mov
pop
sub
adcb
lods
mov
mov
pop
repnz
jle
mov
push
dec
dec
inc
cmovle
dec
inc
daa
dec
dec
mov
scas
add
inc
push
pop
pop
inc
push
pop
leave
cs
cmp
add
dec
dec
dec
inc
push
inc
inc
adc
sti
inc
in
cmpsb
xchg
push
enter
dec
repz
cs
jl
data16
daa
int
jo
fs
incl
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
jmp
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
or
clc
incl
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
pop
and
rcl
push
push
or
pop
pop
pop
mov
popa
bound
addr16
imul
jg
push
jbe
js
jp
jl
jle
add
sub
mov
cmp
pop
daa
mov
outsb
sub
sub
cld
adc
add
movsl
jge
push
push
add
add
add
loopne
sahf
push
and
push
pop
sahf
add
xor
push
push
pop
shr
sar
mov
push
add
pusha
push
add
in
int3
mov
xor
sbb
push
pusha
je
sahf
mov
jb
add
repnz
testb
and
inc
xor
inc
and
push
xor
and
add
inc
sub
inc
decl
dec
and
jae
pop
adc
sahf
sub
je
pop
and
jae
es
and
inc
mov
push
and
adc
push
shll
jnp
xor
and
dec
and
mov
mov
jnp
dec
je
fldcw
and
fcoms
dec
cs
aas
xor
cmpsb
loopne
and
jne
dec
mov
rol
push
pop
inc
data16
les
imul
and
lods
test
cmp
outsb
xchg
jbe
dec
mov
das
add
jp
push
pop
adc
les
gs
in
add
loopne
aam
cs
cmp
ucomiss
dec
in
ds
loopne
imul
jb
add
mov
mov
daa
sbb
sub
sub
push
addb
insb
jb
cmp
sub
roll
sub
fistps
and
inc
xchg
or
lcall
push
int3
gs
mov
push
rcll
mov
popa
addb
jo
cmpsl
cmp
push
push
fistps
dec
rcl
push
popf
and
xor
in
fs
xor
hlt
pushf
or
rorl
sahf
dec
test
int3
dec
aaa
ja
outsl
pop
and
push
outsl
ss
fs
lods
pop
and
imul
inc
inc
xchg
rorb
xor
push
gs
cmp
das
mov
and
mov
xor
out
cmpb
lock
xlat
outsl
push
fs
loope
jp
cmp
repnz
lret
inc
aaa
insl
movq
push
in
ljmp
imul
ljmp
in
push
push
xor
cmp
pop
cmc
push
push
leave
nop
ljmp
jbe
subb
cmp
xorl
lods
xchg
cmp
fstpl
and
pop
push
cmp
jne
push
scas
xor
adc
sub
test
movzwl
push
imul
sub
mov
dec
jmp
in
pop
add
cmp
cmpb
mov
out
gs
jno
dec
and
dec
cmp
fmull
and
xchg
push
or
sbb
add
lea
and
nop
xchg
pop
jb
xchg
xchg
xchg
int
xor
decl
inc
add
inc
add
or
bound
fstpt
das
push
addb
adc
xchg
notb
pusha
xchg
adcb
testb
out
daa
cmp
inc
pop
sub
push
mov
jb
mov
inc
push
pop
jo
ja
mov
sbb
pop
shll
add
adcb
jae
mov
add
mov
inc
es
and
sub
xchg
scas
xchg
and
adc
and
adc
add
dec
leave
stos
ljmp
add
add
add
add
mov
ja
cmp
cmp
adc
or
add
or
out
lcall
add
test
decl
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
ljmp
scas
mov
mov
mov
mov
mov
mov
ret
enter
dec
lret
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
ljmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
push
test
cmp
adc
sub
rcll
mov
push
add
dec
mov
xor
stos
mov
pop
push
cmp
mov
outsl
inc
mov
and
mov
mov
outsl
inc
call
loope
adc
popa
pop
popa
ss
sbb
aaa
and
cmpsb
push
xchg
insb
outsl
jbe
sahf
jo
cwtl
adc
sub
jb
push
rcrb
aas
push
and
push
gs
jp
jo
rorb
outsl
and
xchg
xlat
into
or
push
insb
daa
addr16
and
cltd
test
fisubrl
outsb
or
arpl
cltd
inc
mov
adc
jo
jge
push
jae
imul
dec
ljmp
push
adc
gs
insb
mov
jp
mov
jne
sbb
mov
xorb
lahf
and
out
imul
jb
imul
popa
pop
or
movsb
imul
inc
insl
call
in
sub
js
pop
je
lods
shrb
dec
popa
jae
sbbb
mov
andb
and
imul
add
bound
loopne
mov
add
mov
mov
cmove
jge
insb
bound
xlat
push
mov
push
jne
add
pop
aaa
push
mov
lcall
xchg
scas
ret
jo
outsb
imull
sbb
rolb
sti
sbb
jns
jae
daa
mov
insl
mov
imul
fsubl
and
push
addr16
lcall
js
pop
xchg
test
cmp
enter
inc
push
data16
shlb
lret
xor
subl
pop
daa
mov
mov
lea
dec
pop
sub
push
xchg
dec
imul
push
lcall
jno
adc
pop
push
cmp
cmpsb
xor
pop
mov
fwait
mulb
clc
fisubrl
sub
outsb
pop
and
and
call
pop
xchg
pop
sub
lods
mov
test
sbb
sbb
push
pop
daa
mov
jl
jae
popa
lock
daa
lcall
add
pop
ficoml
punpcklwd
loop
lcall
pop
inc
into
sub
outsb
and
and
fucomi
sbb
dec
push
add
bswap
pop
shl
xchg
rolb
dec
dec
inc
add
push
pop
dec
dec
add
dec
push
das
mov
leave
add
dec
push
add
dec
outsb
mov
or
dec
xorl
sarb
das
pop
decb
dec
add
dec
add
pop
add
add
add
scas
insb
cvtdq2ps
lcall
cmovae
cmp
cld
repnz
pop
sub
push
add
inc
inc
inc
add
add
cmp
mov
sarb
inc
push
dec
das
daa
lcall
dec
push
add
jmp
sahf
je
mulb
push
dec
push
lret
xchg
das
jg
inc
add
add
add
mov
add
cmp
inc
add
inc
add
lret
xchg
das
pop
inc
add
add
dec
add
cmovno
pop
pop
sti
repnz
add
add
adc
pushf
pusha
repz
push
add
push
push
clc
aaa
scas
hlt
aaa
cmp
lock
in
pmulhuw
sub
out
scas
fmull
inc
inc
sahf
aam
outsl
out
int3
movhps
inc
pop
ds
mov
lods
aaa
lahf
inc
xlat
jl
mov
pop
pop
fidivrs
pop
nop
je
push
push
lahf
jg
adc
push
dec
add
inc
add
dec
cmp
sbb
push
dec
cwtl
loopne
pop
fisttps
psubb
dec
lock
in
ljmp
pop
or
sbb
adc
add
or
adc
sbb
add
sbb
mov
dec
mov
movsl
pop
scas
inc
adcb
aad
push
and
and
fisttps
xor
popa
int3
fs
inc
shrb
pop
or
dec
mov
inc
loop
js
dec
popf
dec
lods
and
add
inc
outsl
jle
mov
add
and
push
xchg
and
dec
imul
mov
inc
mov
jo
push
mov
fidivrl
inc
and
test
cmc
dec
daa
daa
pop
and
dec
push
enter
mov
aad
into
fildl
jb
cmp
insl
mov
push
jbe
add
push
lock
jns
divl
xor
and
xchg
pusha
inc
jbe
decb
aaa
push
jns
add
pop
or
inc
stc
pop
push
add
cmp
pop
and
push
sbb
cmp
lods
dec
lahf
jo
not
or
xchg
pop
pop
push
sub
cmp
jno
mov
cmp
out
push
sub
jae
addr16
adcl
cmp
inc
adc
andb
xchg
scas
jmp
push
stos
dec
mull
dec
push
jne
repnz
dec
outsb
popa
mov
adc
cmp
fildll
mov
sbb
push
shrl
jo
pusha
or
jg
push
sbb
fs
in
jl
mov
xchg
das
push
push
insb
pop
xor
jg
fadd
push
jns
pusha
push
or
push
addr16
das
je
sub
outsl
xchg
daa
xchg
mov
imul
es
imul
cmp
ds
and
sub
sahf
out
sub
es
addr16
jle
fstp
popf
out
sub
push
push
jl
cmp
or
sub
pop
cmpsl
cmp
sub
sub
popf
sbb
popl
inc
and
test
and
add
dec
pop
pop
jne
push
inc
scas
mov
sbb
push
jb
pusha
push
outsb
jmp
jo
ss
adc
push
hlt
sbb
xchg
inc
fcomps
insb
pop
outsb
mov
jo
sub
cmp
add
repz
fldcw
mov
mov
pushf
ss
test
mov
push
pushf
push
jl
stc
xor
cmpsb
inc
je
daa
jo
inc
out
sahf
cmpsl
push
sahf
divl
dec
or
dec
inc
push
inc
cmp
sahf
out
cmp
sub
sub
repz
and
sbb
adc
jl
out
push
or
cld
inc
repz
sar
hlt
lock
call
in
int3
sarb
cmp
lods
xchg
mov
fdivp
push
xor
adc
push
aam
out
sahf
mov
jo
sub
out
fidivrs
inc
push
lock
sahf
out
sahf
mov
cwtl
jl
xor
jns
jns
in
out
pushf
js
loope
sahf
push
sub
aas
jle
cmpsl
xor
push
dec
fbld
out
inc
dec
add
dec
dec
inc
add
inc
es
push
push
and
xchg
js
and
xlat
lods
gs
xor
adc
pop
pusha
idiv
mov
push
fs
int3
xchg
mov
push
pop
mov
out
fwait
outsl
insb
push
in
mov
iret
repz
into
and
int3
mov
pop
sub
mov
lahf
imul
test
mov
out
leave
push
call
insb
out
loopne
arpl
scas
shll
pop
mov
jle
ret
repz
cmpsb
jbe
mov
mov
mov
jecxz
pusha
out
jo
pop
push
adc
ret
jmp
inc
outsl
jge
testl
sub
and
pop
xchg
out
push
mov
sub
mov
dec
test
das
jo
adc
dec
mov
into
inc
mov
pusha
cmp
sbb
mov
rcrl
sarb
push
pop
das
mov
rcll
xchg
adc
clc
push
or
cld
adc
cmp
adc
jp
dec
dec
inc
inc
inc
std
jg
push
adc
fdecstp
jae
rcll
mov
ss
or
lahf
in
sub
jnp
mov
cwtl
ds
daa
jle
das
sub
sti
out
test
outsb
imul
sub
pop
xor
cmpsb
pop
insl
aas
ja
xchg
add
add
int3
mov
arpl
movsl
hlt
mov
imul
mov
insb
das
and
jb
cs
data16
mov
gs
pop
idiv
or
scas
push
dec
inc
push
push
inc
push
inc
pop
gs
outsb
push
push
add
mov
out
out
mov
push
jno
or
inc
jae
mov
and
daa
ja
ljmp
shll
mov
xchg
xor
insb
outsl
stos
aam
or
jns
outsl
lods
mov
jne
das
sbb
je
int3
mov
xor
aas
xor
imulb
repnz
out
mov
inc
daa
push
jne
cmp
sbb
add
xor
and
filds
aaa
cmp
daa
movsl
call
outsb
imull
xor
or
enter
inc
sahf
mov
btr
and
inc
jmp
and
sarb
lds
cmpb
rorb
push
mov
mov
cmp
inc
mov
cmp
test
add
dec
rcrb
xor
jo
xor
push
push
inc
xor
incl
push
push
push
inc
push
sti
int3
cltd
nop
pop
movsl
imul
inc
loop
xlat
gs
add
mov
push
cmp
xchg
in
lcall
mov
jl
bound
jmp
test
sbb
imul
xchg
mov
aaa
insl
lds
xchg
push
jge
in
insb
and
add
es
inc
aaa
outsb
jnp
stos
mov
cwtl
push
mov
aaa
dec
xor
push
ucomiss
mov
ss
mov
ja
cmpsl
cmp
add
in
or
sbb
inc
ss
xorb
xor
and
fs
dec
push
dec
inc
mov
out
dec
ja
pusha
test
cmp
jnp
add
push
test
pusha
add
pop
enter
fmul
xchg
cmp
call
and
fsubrs
ss
cmp
push
dec
test
jle
or
cwtl
mov
out
mov
nop
push
pushf
push
mov
outsb
inc
iret
outsl
mov
mov
cmp
aam
in
inc
lock
xchg
mov
dec
cmpsl
scas
loope
ficoms
push
and
inc
jl
divl
js
add
outsb
in
pop
mov
insb
scas
xchg
jbe
sub
mov
outsl
in
cltd
or
mov
xlat
xor
negl
data16
mov
subb
ja
cvtpi2ps
dec
enter
push
cmpsl
dec
enter
push
pusha
push
jo
outsb
sbbl
add
adc
jae
loopne
cvttps2pi
pop
call
iret
mov
and
ja
je
pusha
fidivl
mov
cmp
inc
push
xchg
je
subb
xchg
je
out
scas
daa
add
test
lods
push
mov
cmpsb
lock
out
jbe
lock
ja
mov
mov
scas
int3
push
or
stos
popa
cmp
sbb
outsl
xbegin
cmp
add
mov
sub
mov
clc
xchg
shld
lock
jg
outsl
or
pop
inc
sbb
lahf
lock
mov
subb
xor
xlat
inc
push
aaa
mov
adc
and
add
jnp
mov
das
add
push
movsb
das
pusha
fildll
jo
scas
outsl
insb
ljmp
rcrb
sahf
mov
cld
or
add
mov
out
jl
push
dec
push
push
jl
or
mov
xchg
aam
cmp
repnz
and
push
push
lock
das
xchg
pusha
mov
mov
jae
and
push
inc
push
pop
dec
and
sbb
ja
in
nop
out
jo
nop
or
sahf
out
sahf
pop
rcl
push
inc
cs
dec
pop
sarb
out
adc
and
sub
imul
cmpsb
xchg
addb
dec
inc
clc
jl
mov
es
pop
dec
ja
repz
lahf
js
dec
pushl
push
lcall
pop
sub
fsubs
ds
or
daa
sbb
test
push
sub
mov
mov
jg
inc
pop
sbbl
ds
jb
fs
aas
leave
xor
fwait
rcrb
push
xchg
add
iret
test
cld
orl
add
push
jb
push
shrb
in
and
mov
enter
xchg
mov
adc
mov
fldenv
pop
mov
dec
push
mov
call
inc
aas
iret
mov
loopne
addr16
je
jb
pushf
nop
pop
inc
pop
dec
je
mov
pushf
mov
pop
pop
pop
insb
inc
mov
jae
cli
pop
mov
pop
outsl
fcomps
mov
fs
inc
add
pop
aam
pop
and
xor
scas
aam
outsl
cmp
jns
add
push
xchg
rcrb
pop
and
pop
lock
dec
xor
test
pop
outsl
sarb
push
mov
in
cld
outsl
movl
cmpsl
add
pop
ret
xchg
insb
dec
push
pop
pop
pop
outsl
add
insb
and
sbb
testl
push
in
push
or
jbe
sub
push
pop
xchg
js
sub
or
mov
dec
repnz
scas
and
ja
pop
out
and
je
call
xchg
sub
push
pushf
push
mov
les
sub
lcall
enter
addr16
loop
or
push
mov
enter
xor
inc
pop
bound
sub
add
push
imul
adc
rcrb
packssdw
sbbb
pop
in
dec
or
les
adc
sbb
or
mov
or
fldenv
dec
pop
pop
pop
fs
pop
inc
add
pop
adc
movsb
mov
pop
and
and
cwtl
loopne
cld
sarl
aaa
sub
jnp
pop
cmpsl
inc
push
sbb
jmp
pop
add
and
pop
push
sahf
shlb
mov
push
sbb
xchg
scas
pop
repnz
addr16
sahf
xchg
pop
faddl
fcomps
and
pusha
dec
and
fnstcw
sub
outsl
pop
xor
pop
out
pop
rolb
add
fsubl
daa
xlat
sahf
mov
outsl
jl
test
jmp
out
xchg
cld
or
and
das
mov
mov
outsl
mov
adc
popa
push
pop
daa
ja
fsubs
xchg
dec
out
jne
iret
aam
das
cwtl
push
lods
push
enter
and
push
insl
adc
push
jg
shll
ja
fwait
xor
in
hlt
push
lods
notb
roll
ja
andb
jbe
scas
das
sbb
mov
ds
dec
andb
push
or
dec
aaa
mov
dec
shlb
scas
insl
outsl
loopne
call
rclb
out
mov
push
mov
push
xor
xchg
inc
push
fwait
or
outsl
pusha
insb
arpl
loope
push
arpl
cld
pushf
arpl
aaa
and
push
jmp
rcrb
sub
fs
inc
jae
add
les
aaa
dec
push
pop
fs
outsl
insl
and
lahf
nop
out
sahf
pusha
mov
mov
aaa
and
fsubs
hlt
outsl
adc
mov
fdivs
fwait
adc
gs
inc
gs
dec
ss
gs
outsb
in
stc
ja
dec
je
addr16
leave
jae
test
and
test
in
data16
add
shrl
lods
lcall
push
push
cmp
push
push
lock
pop
push
lcall
push
fchs
std
and
push
xor
out
test
ds
repz
jl
pop
jecxz
idivl
out
xchg
jns
out
push
push
andl
pop
cmpsl
in
out
jns
cmpsl
inc
add
and
iret
repz
dec
mov
lcall
cmp
repz
pop
jmp
ds
repz
push
jl
out
mov
out
cmp
js
shl
sbb
lahf
out
sahf
cmp
mov
jns
ja
push
jo
sar
repz
sub
pop
mov
dec
out
cmpsl
stc
cmp
insl
lock
cmp
addr16
iret
addr16
bound
in
mov
jg
dec
inc
mov
testl
das
xchg
or
push
sbbl
cmp
add
push
cwtl
mov
sub
das
mov
aam
inc
dec
scas
loopne
hlt
xchg
in
and
cmp
xchg
push
or
sbb
das
hlt
and
adc
pop
imul
leave
test
rcrl
test
jg
add
pop
inc
daa
add
cmpsb
cmp
add
mov
iret
cmpsl
push
in
fbstp
dec
nopl
pop
inc
aas
fsubrs
jge
push
movsb
roll
lods
push
int
xchg
push
pop
sub
sub
xchg
iret
int3
add
imul
push
enter
outsl
cli
ja
mov
jae
cmp
loop
xchg
mov
insb
push
inc
cwtl
es
mov
pop
jno
les
xchg
clc
mov
shll
pop
dec
insb
sahf
xlat
popf
xchg
lret
shll
fistpl
add
mov
fmull
paddd
pop
nop
loop
inc
call
fbld
sbb
movl
inc
cmpsl
mov
testl
xorb
pop
fucompp
addr16
mov
xchg
xchg
out
cld
call
pushl
jnp
insl
pop
mov
daa
mov
sahf
je
mov
jge
add
add
loop
cwtl
jbe
loopne
dec
popf
xchg
or
test
iret
mov
pminub
jecxz
in
inc
icebp
adc
lahf
imul
in
xchg
pushf
dec
ds
xorl
stc
push
enter
outsb
scas
sub
mov
out
inc
in
outsb
dec
repz
mov
fstl
pop
adc
fildll
das
jns
das
daa
add
outsl
add
in
inc
dec
sbbb
insl
or
and
inc
js
jb
and
mov
add
sbb
push
jo
dec
and
jo
in
dec
movsb
jo
into
repnz
movsb
stos
add
repnz
jo
sub
jo
aaa
jb
cmp
out
pop
fwait
push
pop
dec
xchg
das
pop
push
aaa
push
jno
jns
adc
pop
enter
iret
in
iret
loop
repnz
add
fisttps
jb
xor
cmp
sub
or
pop
mov
inc
dec
leave
out
mov
out
enter
out
jb
fisttps
cltd
or
jmp
mov
or
inc
aas
and
sbb
xor
cmp
push
fists
out
jae
pop
fwait
push
jae
or
cs
ljmp
jns
daa
jecxz
xor
and
aaa
push
je
jb
dec
and
mov
add
xchg
in
enter
mov
jne
add
cmp
out
push
daa
pop
pop
call
ss
aad
decl
outsb
add
scas
mov
incl
nop
xchg
scas
sbb
pop
or
sbb
jne
call
in
pop
lock
call
inc
jbe
push
insb
jbe
repnz
stos
mov
cs
in
jbe
pop
mov
ds
in
or
lock
or
add
adc
aas
cmp
call
xchg
cmp
mov
cmp
inc
movsl
adc
repnz
xchg
xlat
pmuludq
jmp
jmp
loopne
int
rorl
inc
fcoms
jnp
and
decl
test
js
xor
add
insl
add
stos
ljmp
sub
mov
in
mov
xor
aad
xor
pop
xor
lcall
pop
mov
mov
push
add
es
nop
or
sarl
dec
dec
shlb
cmp
jl
sub
jg
fwait
scas
adc
xor
push
or
psubusb
adc
cmpsb
sbbl
shrl
sbb
sbb
push
mov
sub
mov
aas
xchg
rorl
push
mov
sbb
iret
sahf
xchg
mov
cmpsb
popf
pop
sahf
ja
push
lahf
push
pop
fwait
jbe
mov
das
shll
jns
mov
jb
cmp
jb
loope
scas
movsb
leave
push
lret
fcmovnbe
scas
in
adc
xor
ljmp
dec
mov
aas
fucom
and
shl
sub
rcl
or
lock
repnz
pop
dec
es
outsb
repz
cli
inc
add
sti
addr16
add
xor
push
and
sbb
dec
or
cmp
jle
cmp
add
lods
jle
loope
out
or
inc
fbstp
jbe
movaps
cs
leave
sbb
ds
int
subps
or
dec
daa
push
fistl
out
adc
xor
repz
ja
xchg
push
mov
inc
ss
scas
aaa
mov
inc
jb
aas
fadds
adcb
stc
dec
fimull
mov
dec
insb
push
cmp
jne
addb
pushf
mov
push
pop
leave
inc
ds
adc
add
add
push
xorl
mov
push
push
pop
ljmp
jl
mov
jb
inc
jb
scas
jl
adc
cmp
inc
lea
andb
cmpb
mov
das
cmp
inc
cmp
sub
cmp
fs
and
mov
pop
leave
int3
mov
sbb
js
inc
xchg
enter
addl
ja
push
pusha
xor
shlb
xchg
outsl
sub
leave
and
mov
scas
mov
adc
mov
xchg
pop
pusha
mov
test
xor
inc
repnz
inc
jns
andl
push
push
enter
rcll
test
test
xchg
mov
aam
xlat
cmp
xchg
dec
adc
out
nop
aam
aad
add
popf
jnp
aas
xchg
rcrl
xor
xchg
das
iret
fistpll
jne
cmp
push
cmp
stos
lret
fistpll
mov
xor
outsl
push
xchg
xchg
xor
pop
lods
in
add
xor
fistps
jns
xor
jb
and
enter
hlt
xchg
pushf
call
push
dec
mov
mov
mov
mov
lar
testb
aaa
inc
pop
out
sbb
xlat
daa
mov
jecxz
pop
adcb
pop
xor
or
dec
fwait
sub
xchg
out
push
cmp
fs
pop
jb
nop
mov
fmull
shlb
das
pop
loope
adc
inc
lock
clc
out
mov
inc
or
add
out
add
xor
lock
or
inc
out
lahf
or
pushl
fs
jnp
xchg
xchg
pushf
repz
dec
sahf
add
mov
push
pop
leave
leave
leave
leave
enter
xor
iret
hlt
or
pop
or
unpckhps
jb
and
ss
es
jb
push
lock
pop
and
jl
mov
push
adc
pop
mov
sbb
mov
aaa
rcr
jb
lock
mov
push
pop
bnd
add
cli
inc
cs
out
mov
add
or
iret
pop
xchg
xchg
pop
and
mov
cmp
mov
push
outsb
fistpl
mov
add
xchg
mov
sbb
lret
push
inc
arpl
movl
daa
or
or
daa
push
add
arpl
test
adc
aas
es
push
cs
inc
push
fsubrs
xor
sahf
mov
xor
test
push
es
adc
and
jnp
addr16
aas
es
jg
and
shrl
and
pop
int
xlat
aas
adc
aas
push
aas
pop
push
dec
and
aas
shll
inc
and
jns,pn
add
and
add
xor
inc
sub
push
sti
mov
cmovge
daa
push
dec
inc
je
aaa
stos
and
inc
push
dec
outsl
or
insb
mov
into
mov
loopne
xor
mov
mov
pop
or
add
loop
iret
les
fcoms
sbb
adc
push
leave
mov
sbb
orl
inc
and
mov
aas
aaa
imul
adc
sub
lods
movsl
xchg
inc
mov
adc
insl
jne
inc
sbbb
inc
sub
mov
pop
cmp
scas
pop
mov
mov
das
xchg
or
xor
xchg
lods
aas
sar
inc
shll
lds
inc
inc
pop
pop
push
dec
push
xchg
pop
push
push
or
lcall
mov
push
adc
cmp
outsb
jge
dec
inc
push
dec
inc
mov
or
ss
iret
add
adc
sub
inc
loopne
into
insl
push
loop
nop
inc
sbb
add
dec
stos
popa
xor
inc
xchg
inc
pop
pop
sbb
xchg
addr16
lahf
push
cmp
mov
cld
inc
inc
push
inc
push
xchg
inc
pusha
pusha
cmpsb
inc
or
inc
bound
aaa
imul
mov
aas
incl
push
movsb
or
jo
andl
out
inc
and
adc
mov
push
inc
out
cltd
shlb
js,pt
out
sahf
out
jbe
je
jb
out
sahf
jno
outsl
outsb
insl
insb
jns
out
imul
addr16
in
das
push
out
push
in
sahf
out
clc
or
sbb
dec
out
sahf
out
jo
mov
jns
ja
in
dec
sbb
xor
xor
add
jg
shll
out
aas
loope
orb
dec
inc
push
aaa
ja
dec
push
dec
dec
dec
inc
push
push
aas
cmpsb
mov
stos
fbstp
aas
and
sti
test
dec
jle
sub
adc
xorl
mov
cwtl
xchg
mov
adc
push
cmpsl
inc
loope
and
adc
dec
dec
push
loopne
test
outsl
cmp
dec
gs
or
or
and
xor
andl
pop
test
adc
inc
and
loop
sbbl
and
pop
push
and
pop
int3
icebp
arpl
cmp
sbb
push
and
xchg
jmp
bound
es
push
mov
dec
xchg
js
mov
loope
rolb
inc
inc
cmp
xor
mov
fmull
mov
scas
div
loop
shlb
pushl
lea
jmp
fistl
xor
inc
mov
test
sub
push
inc
adc
adc
adc
sar
dec
fwait
xorl
add
das
inc
loop
add
out
popa
testb
ljmp
in
icebp
psubsb
out
fidivrs
loopne
fcom
sarb
out
enter
mov
cwtl
pop
mov
iret
repz
je
insb
push
fs
pop
push
dec
out
daa
iret
inc
cmp
push
sub
dec
repz
adc
add
and
in
iret
repz
int3
rorb
pop
add
mov
js
xchg
cmp
inc
add
clc
test
fidivrl
je
sbbl
mov
mov
jns
outsb
sbb
add
or
and
or
aaa
or
fnstsw
scas
adc
adc
mov
das
and
cmp
inc
push
addr16
das
push
femms
outsb
mov
push
mov
insl
push
and
sbb
push
pop
andb
fildl
aas
addl
push
sub
push
das
fbld
mov
sbb
data16
fsubrs
jne
push
jae
pushl
jo
icebp
iret
adc
insl
and
add
inc
cwtl
mov
loopne
notl
push
out
faddp
push
push
pop
js
dec
repz
mov
repz
xor
adc
cmp
ds
repnz
xchg
mov
repnz
das
mulb
fadds
in
cltd
sub
add
inc
enter
pop
dec
add
sub
decl
aas
jbe
stos
mov
adc
dec
mov
add
movsb
add
cmpsb
fbstp
and
mov
cld
inc
jle
jbe
ljmp
mov
leave
add
pop
inc
cmpsl
nop
fbstp
mov
call
dec
mov
add
mov
xor
fnstcw
fcomp
loopne
jb
jle
xor
pusha
movsl
cs
mov
roll
in
int3
inc
push
xor
xor
enter
fdivl
sarb
cwtl
daa
push
in
gs
mov
data16
jns
out
push
or
adc
cmp
out
fsubrl
adc
iret
mov
push
sbb
sahf
out
ds
sub
mov
out
push
je
adc
jns
dec
repz
and
sub
inc
out
jns
out
xor
jp
add
or
dec
outsb
subb
and
pop
adc
add
add
mov
add
imul
filds
mov
mov
xlat
and
add
xor
add
mov
cwtl
xchg
adc
pop
mov
xor
jb
add
add
es
pop
es
repnz
push
insl
roll
cld
pop
jg
push
and
push
ja
lods
stos
sub
xchg
push
and
xor
or
add
sbb
or
pop
cs
pop
push
add
jb
pop
enter
inc
pushf
or
pop
repnz
mov
adc
enter
xchg
cwtl
push
and
sbb
push
mov
ret
inc
and
sahf
mov
sub
inc
rcrb
and
call
jmp
inc
jno
xlat
xchg
inc
pop
sub
sahf
inc
stc
mov
adc
mov
decl
js
inc
outsl
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
jmp
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
call
mov
push
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
call
std
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
xchg
cmc
pusha
les
add
aas
jno
mov
mov
pop
fs
dec
lea
aas
ret
shrl
pushl
mov
inc
sbb
lds
mov
insb
scas
add
aas
xor
jp
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
call
inc
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jmp
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
inc
aas
jmp
ljmp
mov
inc
rcr
push
arpl
int3
and
call
cmpl
xor
lods
cmp
mov
cmp
std
xlat
cmp
mov
sbb
call
cmp
test
pop
mov
jne
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
mov
andb
mov
cmpsl
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
ljmp
pop
add
rcr
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
add
mov
xchg
jge
pop
ficomps
frstor
dec
cmp
add
addr16
push
add
popa
arpl
gs
push
adc
jne
inc
repnz
shrb
ja
pop
jle
insl
mov
cmp
inc
dec
cmp
push
arpl
jnp
sarb
je
insl
inc
inc
push
and
popa
jb
pusha
arpl
je
push
addr16
pop
imulb
jnp
adc
inc
pop
sbb
push
or
cmpb
jb
mov
clc
nop
mov
je
inc
sbb
popl
jp
cli
popa
mov
sub
addr16
inc
or
push
jo
xor
pop
pop
dec
pop
movl
pop
sbb
pop
rolb
jno
add
mov
addr16
xor
cmp
sub
inc
xor
bound
push
cs
or
movsb
popa
and
fidivl
clc
jle
mov
inc
add
inc
imul
push
xor
in
out
les
push
dec
inc
dec
push
push
or
in
adc
inc
cs
push
aam
xchg
or
js
add
push
fistpl
xchg
cwtl
les
daa
push
jg
aam
inc
xchg
rclb
push
pop
ret
test
pop
adc
mov
push
jno
fldl
and
and
mov
add
mov
push
adc
mov
or
xor
xor
loopne
imul
sbbb
roll
or
sbb
pop
cmp
addr16
pop
pop
cmp
pop
cld
xor
cmpsb
push
dec
push
rcrb
int
mov
pop
add
add
loopne
lock
or
dec
push
add
scas
insl
lcall
cld
pop
ret
xchg
jl
movsb
jge
iret
incl
inc
adc
repnz
ss
add
test
push
leave
dec
test
mov
fs
rcrb
subl
int
test
mov
fistpll
addr16
jg
js
xchg
push
add
pop
pop
add
add
xchg
xorl
aas
decl
mov
jecxz
lcall
add
pop
jo
sbb
dec
jns
fnstsw
das
ds
pop
pop
lds
pop
ss
int
jg
aas
cld
pop
clc
clts
ss
out
xor
jg
push
das
inc
pop
outsb
mov
mov
push
iret
add
inc
pusha
add
ss
fimuls
jo
into
sub
add
mov
es
inc
push
data16
fwait
int
jg
cld
aas
clc
pop
lock
ja
mov
add
es
inc
icebp
fnstsw
bswap
dec
mov
push
push
pop
loopne
mov
mov
push
stos
mov
mov
not
out
pop
cs
outsl
add
add
nop
dec
pop
cmp
loop
sbb
mov
add
push
adc
fidivrl
iret
mov
mov
ss
mov
adcl
movsb
xchg
and
es
je
mov
dec
idivb
mov
mov
xchg
add
push
lds
aaa
inc
push
addr16
sub
int
decb
cld
jg
aas
lock
mov
pop
inc
addr16
push
adc
jo
mov
ds
pop
es
bound
push
push
lahf
icebp
sbb
cwtl
pop
insb
mov
add
loop
mov
adc
jl
inc
andb
incb
and
inc
and
xor
in
mov
mov
and
add
adcb
ret
xor
xchg
adc
xchg
cmpb
xadd
pop
cmpb
aas
cld
ds
int3
data16
cmp
cmp
jl
aas
jne
mov
add
ds
jg
shlb
xor
bound
iret
aaa
clts
pop
enter
jl,pt
fisubs
adc
inc
clc
lock
test
add
push
xor
addb
push
fstp
dec
addr16
xchg
mov
inc
movsb
push
push
bound
sub
inc
sahf
inc
jg
lods
stos
shrb
add
movsl
les
cmp
and
jae
sub
jo
pop
add
push
in
add
lcall
clc
or
int
push
pop
jb
inc
fisubs
xchg
pop
incb
jnp
outsb
xor
pop
int3
addr16
sub
addr16
es
inc
inc
xchg
aaa
sbb
push
data16
movsb
adc
test
mov
getsec
push
mov
xchg
and
push
jb
adc
push
jno
mov
call
rclb
pop
add
lock
leave
insl
andb
addl
iret
cld
paddd
pop
mov
outsl
push
and
inc
push
addr16
mov
push
pop
inc
xor
push
dec
add
test
mov
movsb
in
loopne
push
cld
in
or
xchg
pop
cld
jg
mov
pop
fstps
pop
mov
adc
out
pop
mov
repnz
push
pop
cs
push
nop
or
fcomip
push
jecxz
fnsave
pop
cs
ret
aaa
fwait
pop
mov
xor
sub
mov
push
sub
add
push
les
mov
dec
nopl
subl
xchg
shlw
enter
sahf
push
pop
cmp
or
aaa
sarb
push
das
shrb
add
xchg
iret
cmpsl
popf
mov
add
xorb
imull
dec
nop
xchg
movsl
add
push
das
jp
jnp
aas
enter
subb
inc
push
data16
jg
adc
mov
sbbb
or
cs
adc
inc
iret
std
incl
jns
loopne
mov
sbb
add
jnp
adc
xchg
add
das
and
insb
pop
adc
sbb
jl
insb
adc
add
nopl
sbb
add
jle
jae
shlb
aas
orb
dec
addb
add
inc
inc
imul
andb
push
jle
add
add
lcall
dec
pop
jg
add
repz
adc
movhps
pop
mov
add
add
stos
inc
mov
or
adc
and
cld
push
clc
jg
aas
pop
out
pusha
aad
int
addb
fwait
jns
add
dec
mov
adc
xor
inc
test
add
dec
test
lods
pop
xor
pop
pop
daa
ucomiss
dec
pop
enter
push
or
push
mov
dec
int
cltd
adc
bound
mov
add
mov
pop
pop
daa
ss
push
out
push
jl
outsl
cld
repz
or
or
out
mov
pop
pop
daa
ss
push
and
addr16
fdiv
adc
dec
mov
enter
andb
in
adc
addr16
xlat
repz
push
inc
ss
iret
loopne
jae
popa
add
fsubrs
push
daa
loopne
clc
addr16
push
test
aaa
or
adc
mov
and
inc
adc
push
dec
repz
dec
sbb
add
mov
aam
add
ja
imull
push
ret
repz
outsl
movsb
dec
out
push
clc
lock
pop
mov
rolb
addr16
xchg
xor
sub
subb
inc
pusha
and
addb
loopne
push
inc
and
push
mov
sbbb
imul
ds
add
jg
lock
aas
pop
sysret
movsb
or
or
or
dec
cmp
and
cmp
push
into
fucomip
decl
or
ja
pop
ret
nop
pavgb
sbb
daa
pusha
popl
pop
out
adc
test
inc
movsb
or
jg
repz
cmpsb
push
adc
inc
orb
out
xor
inc
dec
dec
test
sbb
movsb
dec
fidivs
lods
out
pop
sahf
pop
nopl
lcall
push
addl
in
lahf
xchg
mov
pop
sub
data16
or
addb
inc
add
mov
or
dec
adc
adc
or
into
cmp
pop
daa
aaa
inc
push
addr16
in
push
or
icebp
in
fwait
int
jg
aas
clc
push
jo
lock
pavgb
adc
mov
daa
aaa
inc
push
andb
jbe
iret
add
jle
jbe
addr16
or
push
inc
inc
mov
pop
les
xchg
and
mov
cmp
add
inc
add
inc
inc
inc
and
pop
pop
sbb
cmp
daa
aaa
inc
push
data16
pop
or
sahf
into
aas
cld
mov
cld
jl,pt
cmp
sbb
pop
lock
jae
pop
daa
aaa
inc
push
and
adc
adc
add
out
testl
lret
pop
push
daa
addr16
mov
add
test
adc
push
adc
ja
cmp
mov
stos
int3
test
jl,pt
pop
loope
sub
pop
pop
daa
inc
add
cmpl
sub
inc
sbb
scas
sbb
pop
movsb
mov
and
mov
add
fnstsw
add
push
emms
inc
jle
enter
ud0
rcr
in
pop
pop
outsl
and
xchg
cmpsl
and
faddl
jbe
test
mov
pop
mov
push
xchg
daa
lock
str
js
addl
insl
in
into
mov
push
daa
mov
stos
sbb
push
out
add
lock
addb
xchg
popl
rcrb
test
test
mov
jg
rcrb
int3
mov
add
pop
pop
int
push
fnstsw
add
cmpb
addb
lds
dec
es
scas
mov
pop
aam
pop
cmpsl
movsl
jge
bound
dec
inc
aaa
add
sbb
jle
test
js
inc
aas
pop
gs
jle
add
int
shrl
or
les
or
inc
cmp
mov
push
add
add
jb
or
inc
push
hlt
loope
aaa
mov
mov
mov
movsl
dec
ljmp
mov
or
jl
mov
sub
cs
sub
and
lds
enter
outsl
pop
xchg
mov
cltd
rcrl
add
iret
dec
std
mov
fiaddl
push
inc
adc
pop
and
mov
add
pop
adc
shr
insl
adc
and
sbb
xor
push
push
xchg
mov
dec
adc
push
insb
fbstp
aad
pop
aad
lods
mov
sahf
lods
shrb
pusha
and
ret
into
loop
jno
imul
push
imul
inc
sbb
ffree
iret
cltd
jecxz
add
mov
mov
lods
lods
ds
stos
jnp
xchg
lock
imulb
push
pop
or
ret
mov
push
insb
or
and
clc
cmp
mov
int3
pop
dec
imul
jecxz
xor
aas
jp
cli
pop
fmuls
cmp
mov
jae
aad
pop
mov
sbb
lods
decl
dec
mov
push
aaa
je
sub
testb
xor
push
in
daa
cvttps2pi
sbb
add
lahf
adc
adc
test
rclb
adc
mov
sub
or
push
jle
aad
mov
mov
incb
in
insl
jno
leave
mov
sbb
inc
in
cmpsb
sbbb
xor
int
jbe
push
into
pop
ror
mov
dec
push
mov
jle
outsb
inc
test
lods
mov
sahf
dec
fiadds
arpl
push
mov
sub
jle
lahf
add
dec
lods
rclb
add
cmpl
push
cmpsl
or
fisttps
inc
jge
add
daa
ror
cmp
popa
mov
insb
cwtl
sahf
cmp
pop
sahf
sbb
arpl
hlt
mov
dec
into
ja
pop
jae
stos
push
inc
scas
imul
sub
fisubrs
mov
cld
inc
lock
sub
into
call
push
std
movl
add
or
out
push
jb
xchg
push
pop
adc
and
dec
sub
out
cs
nop
hlt
in
push
adc
add
mov
lretw
mov
ljmp
frstor
das
call
and
in
fst
xor
xor
adc
cmp
jo
cli
mov
mov
jo
cs
jle
mov
push
jg
and
dec
and
xchg
lea
push
jae
pop
dec
arpl
or
dec
pop
into
stos
loop
xor
loopne
xlat
xor
bound
ret
ds
or
add
scas
mov
jmp
pop
push
fimull
adc
xor
mov
sarb
mov
shrb
mov
sahf
or
inc
xchg
inc
pop
out
scas
ds
pop
shrl
lcall
pop
cmp
or
xchg
jno
adcb
ret
mov
and
jae
push
cltd
mov
cwtl
mov
push
xor
xchg
pop
sbb
fnstenv
mov
les
mov
cmpsl
cmp
push
sbbb
dec
jl
orl
fnsave
ljmp
shr
jnp
mov
sbb
ds
jge
insl
pop
jbe
dec
lret
imul
test
cmp
pop
mov
leave
jo
push
shll
mov
sbbl
mov
subb
mov
xor
mov
outsb
addl
pop
ja
fnstcw
push
adc
push
push
push
test
adc
sbb
jl
ret
addr16
jae
adc
pop
mov
mov
lcall
cmpsl
pop
mov
popa
dec
sub
shll
add
popl
cmpsb
mov
daa
pop
aaa
popa
lds
adc
xor
mov
stos
add
lahf
push
imul
pop
inc
pop
loop
out
jae
ja
scas
xchg
addr16
stos
xchg
cmp
xchg
fcom
xchg
inc
leave
jnp
rcll
ja
sub
arpl
in
into
mov
or
out
lods
inc
dec
dec
scas
jl
sbb
add
lods
jnp
pusha
mov
or
xchg
mov
ss
negl
mov
sub
lahf
jp
ret
or
jmp
push
sub
fidivl
movb
and
fsubrl
xchg
sbb
pop
in
mov
sbb
mov
pop
ds
das
sbb
xchg
inc
pop
aaa
pop
mov
cmp
push
lahf
cwtl
mov
addl
addr16
xchg
mov
push
pop
inc
andl
or
sbb
lcall
ffreep
lea
mov
call
lods
mov
xor
fwait
inc
movsb
ror
mov
sub
cmp
pop
lock
sub
fimull
aad
daa
mov
jbe
push
enter
push
out
fs
inc
cmp
or
test
sbb
cmp
cmp
push
pop
in
push
nop
or
or
xorl
add
pop
or
enter
pusha
pop
enter
adc
nop
add
adc
push
lcall
mov
sbb
sub
xchg
sub
mov
and
ljmp
mov
sub
mov
sub
test
lea
xchg
cmp
lock
insb
sub
insl
jo
adc
or
and
inc
push
adc
outsl
insl
inc
and
push
lahf
std
sbb
inc
dec
sbb
push
xor
add
inc
add
jae
dec
inc
adc
xor
dec
mov
jnp
push
pop
sbb
arpl
or
add
push
jle
mov
push
outsb
ja
adc
imul
add
scas
mov
gs
imul
push
xor
mov
push
adc
lock
push
mov
sbb
addb
fs
in
lret
pop
jb,pt
cmp
jae
or
push
insl
sbb
shll
dec
add
inc
rclb
insb
inc
dec
push
pop
rcll
popa
addr16
inc
xlat
push
xchg
inc
fadds
mov
push
dec
add
inc
pop
push
jo
mov
or
inc
lods
sub
sbb
jae
inc
xchg
das
pop
push
mov
js
push
or
xor
js
popa
or
inc
out
nop
bound
test
push
ss
push
adc
push
lret
sbbl
push
adc
inc
jae
mov
jb
adc
or
mov
cmc
loope
or
mov
ss
dec
cmp
inc
xchg
pusha
mov
sbb
pop
lods
inc
pop
aas
add
mov
jae
dec
inc
es
push
adc
cmovl
jnp
or
xchg
insl
adc
mov
sub
mov
jne
jo
push
pop
bound
pusha
cmp
xchg
in
push
push
jmp
fsubrs
bound
mov
dec
popa
insl
and
shlb
sbb
test
xlat
jmp
sub
inc
add
gs
shll
pop
inc
sub
and
daa
daa
sbb
testl
push
inc
imul
fsubs
mov
lcall
mov
sahf
sbb
cmp
je
mov
out
mov
je
mov
inc
inc
fs
test
jno
mov
adc
jbe
data16
add
fisttpl
popa
inc
loopne
and
loopne
pop
jae
cmp
ss
mov
rorb
jno
and
push
insb
jae
adc
rclb
xchg
pop
mov
sbbl
dec
jno
sbb
pusha
popa
and
adc
stos
adc
shrb
insb
lods
roll
xlat
fcoml
mov
mov
pop
out
inc
popa
mov
push
lods
sub
push
push
addl
test
cltd
xchg
aas
xor
xchg
fwait
and
cmpsl
sbb
je
cmp
std
pop
pusha
or
mov
lock
inc
punpckhwd
jmp
xor
cmpsb
sbb
rcll
mov
adc
cmp
jns
cmp
mov
mov
jne
loope
adc
adc
mov
jmp
pop
out
or
jnp
stos
jb
rcl
push
push
and
inc
andl
pop
ret
jp
orl
les
loope
fcoml
dec
test
jno
ret
roll
insl
push
out
sub
hlt
jbe
push
pop
gs
rcll
pop
sbb
sahf
push
add
outsl
scas
js
cmp
loopne
xlat
xchg
sub
loope
dec
xchg
cmp
sbb
adcb
test
enter
or
inc
gs
cmp
add
jns
inc
addr16
gs
sbb
sbb
or
pop
mov
cmp
sbb
mov
insl
imul
add
jo
add
sub
rep
or
je
cs
xor
push
xchg
or
inc
inc
or
mov
popa
in
dec
xchg
je
aad
inc
rcrl
ret
pop
dec
jnp
inc
and
data16
test
mov
xlat
add
jo
insb
cli
out
or
add
inc
jae
adcb
mov
push
jo
adc
push
es
push
fwait
add
rol
xchg
and
fbstp
push
dec
jo
inc
outsl
sub
out
dec
inc
ja
xchg
push
insb
jnp
imul
or
mov
stos
divl
push
inc
push
imul
hlt
add
aad
mov
out
shl
and
lcall
or
or
gs
ror
jnp
add
sbb
in
mov
mov
jo
fidivrl
dec
jae
dec
inc
inc
popa
mov
es
jb
lock
scas
out
mov
fdivs
hlt
push
mov
movsb
sbb
xchg
cmp
shl
in
inc
es
shrb
dec
jne
dec
add
dec
xchg
fsubrl
loopne
mov
lds
in
mov
pop
fildl
cmp
push
adc
dec
fildl
sbb
in
ds
pop
jne
sub
dec
popa
jbe
pop
add
mov
jne
dec
and
arpl
ficompl
push
outsl
add
push
push
jl
or
jmp
aad
shr
out
adc
rorl
dec
pop
inc
lret
xor
in
sbbl
int3
cld
mov
push
andl
and
sub
rdmsr
sub
cwtl
xchg
lret
pop
sbb
cmp
leave
jo
mov
push
ss
clc
dec
gs
sbb
arpl
outsb
xor
pop
adc
hlt
push
or
push
dec
or
inc
inc
xchg
addb
xor
xchg
andb
je
xor
and
sub
into
mov
xor
bound
or
mov
cmp
ficoms
ss
jnp
ss
mov
sbb
xor
imul
fs
lods
xor
push
sti
jae
or
jns
mov
lds
jno
andl
imul
jmp
dec
and
sbb
adc
mov
jne
cltd
and
adc
mov
testl
xchg
and
out
push
jo
outsl
or
or
std
fnstenv
sbbb
lock
adc
imul
and
sub
fsubr
xchg
andl
sbb
call
adc
pop
dec
int
sub
xchg
sbb
loop
lahf
dec
inc
imul
rorb
fisubrs
adc
jge
adc
or
lahf
push
cwtl
loopne
pop
inc
or
xchg
popa
mov
bound
outsl
cltd
call
dec
inc
inc
sbb
or
dec
imul
sub
popf
push
hlt
ret
out
mov
rorb
imul
cld
inc
and
and
pop
mov
inc
pop
pop
das
or
jno
xchg
int
mov
inc
fidivl
inc
test
cmp
jmp
jge
test
sbb
jns
cmp
inc
ret
pushf
imul
mov
xchg
divl
pop
dec
aas
imul
push
push
int3
jnp
cli
pusha
cmc
test
nop
inc
les
orl
jns
dec
jb
jae
sbb
das
jmp
inc
js
push
pop
or
imul
add
or
or
scas
xchg
add
dec
gs
sarl
ja
pop
cmpsb
fnstenv
lock
sub
dec
add
prefetch
int3
mov
sub
dec
fcmovu
cmpsb
dec
popf
jo
mov
or
dec
sbb
popf
loop
fstpt
in
les
mov
stos
pop
je,pn
push
inc
out
and
ss
xlat
add
and
jb,pn
out
sub
popa
adc
movsl
mull
iret
mov
outsl
mov
clc
pusha
mov
adc
xchg
add
sahf
adc
ret
test
xlat
out
inc
jae
dec
push
mov
gs
cmp
pushw
jnp
jl
add
insl
mov
inc
pop
es
jg
repnz
xchg
and
adc
add
push
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
clc
mov
inc
add
