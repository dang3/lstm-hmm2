pop
data16
incl
inc
add
pop
inc
outsl
outsl
insb
gs
outsb
add
or
add
jmp
jae
add
jb
lea
sub
or
push
imul
sbb
testl
add
add
fdivp
jmp
push
outsb
je
adcb
jo,pn
mov
dec
insl
scas
insb
add
mov
dec
and
add
xor
inc
jns
fwait
pop
sub
fs
jle
mov
or
outsb
cmp
fcomip
out
into
iret
inc
popa
inc
int
add
mov
adc
fcoms
loope
xchg
push
popa
adc
ficomps
mov
outsl
jne
add
push
gs
add
addr16
inc
outsl
insl
jo
call
xlat
jne
jb
push
jns
nop
push
push
add
jb
pushl
push
into
out
mov
leave
dec
nop
mov
nop
aaa
mov
add
dec
outsl
mov
pop
insb
mov
or
or
mov
pop
jle
cld
or
push
popa
pop
in
sbb
fcomp
je
push
adc
or
and
sbb
ds
mov
xchg
dec
shll
clc
xor
fildll
pop
push
dec
bound
arpl
pop
sbb
ret
xorl
insl
nop
nop
negl
aaa
and
or
jb
popa
arpl
add
enter
inc
add
aas
jbe
imul
push
or
lcall
mov
dec
inc
imul
pop
arpl
inc
mov
repnz
inc
and
clc
jmp
push
add
rcr
dec
adc
int3
sbb
xor
or
add
testb
mov
ds
and
xor
ret
xor
in
adc
mov
jle
xor
movsb
pop
push
cld
adc
push
push
cmp
cli
xorl
cltd
lds
cmpsl
lods
test
and
into
addr16
jnp
push
inc
popa
pop
push
imul
push
jle
or
insb
nop
adc
pop
or
xor
and
inc
dec
push
cld
jno
clc
orl
hlt
in
call
in
fdivl
enter
aam
mov
xchg
aas
orl
sarb
insb
nop
popa
sysenter
mov
ret
push
sbb
ss
nop
inc
mov
lods
push
fs
inc
push
movsb
mov
jg
add
mov
stos
add
testb
ljmp
je
movzwl
mov
aaa
inc
pop
ret
cbtw
sbb
xchg
seto
mov
test
std
push
mov
add
push
add
decl
add
mov
mov
ret
inc
lea
mov
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
in
div
inc
add
scas
mov
mov
xchg
fadds
mov
idivl
out
mov
or
adc
add
out
or
or
adc
ret
mov
push
push
push
mov
mov
mov
mov
add
rcrb
clc
outsl
pop
mov
or
push
or
ret
and
testl
push
or
inc
add
adc
or
aaa
sub
fistpll
jmp
loope
mov
sub
test
shrl
pop
pop
push
fdivp
outsl
aas
js
clc
jne
sti
mov
xchg
cmp
jb
mov
add
mov
add
int
bound
jne
mov
aaa
or
mov
pop
sub
dec
ret
jmp
pop
mov
ja
idivb
add
pop
repz
subb
ja
pop
pop
sub
mov
add
mov
aam
or
or
loopne
jnp
jmp
sbb
sti
jne
sbb
nop
ja
ret
mov
mov
cmp
mov
sub
add
xchg
add
add
ljmp
fiadds
and
push
jg
mov
mov
test
je
mov
mov
mov
adc
mov
push
dec
dec
icebp
mov
mov
add
push
mov
sub
mulb
dec
mov
push
lahf
push
pop
std
mov
push
popf
cmpl
sbb
sub
fsubrp
mov
inc
adc
mov
xchg
lret
mov
call
pop
push
cmp
sub
mov
jae
out
ja
jbe
in
loope
movb
cmp
ja
cmp
jnp
or
or
sbb
rcr
or
mov
mov
out
jecxz
filds
mov
mov
cmpl
sbb
push
mov
jns
popa
sbb
pop
push
jg
push
mov
hlt
outsl
mov
mov
and
add
jae
sbb
loop
mov
popa
mov
xchg
sub
mov
std
cmp
jle
add
and
mov
cmp
or
xchg
jbe
or
jbe
scas
adc
sti
out
or
rcll
test
jmp
ss
orl
sbb
inc
push
je
out
jb
inc
or
pusha
in
out
cmp
add
out
sub
or
sbb
jae
mov
cmp
jae
or
add
add
push
add
xor
mov
loopne
clc
mov
aas
or
add
repnz
shll
cmp
cmpsb
inc
idivl
inc
xlat
mov
or
cltd
cmpsb
ja
je
mov
inc
ds
fwait
push
xor
push
pop
pop
jl
std
test
and
cmp
pop
movsl
and
mov
mov
pop
nop
insl
jo
jp
pop
mov
cli
jge
jecxz
inc
and
cmp
push
loope
push
inc
jle
xchg
jne
sub
add
mov
cmp
xor
lea
xor
sub
and
fcoms
or
and
sbb
aas
lea
test
xchg
jmp
cmp
icebp
int
aaa
cmc
jne
nop
cmp
fisttpl
scas
xlat
js
inc
cmpl
sub
push
mov
xchg
xchg
int3
mov
ret
incb
mov
sti
cli
mov
loope
adc
fidivs
mov
ret
add
rorl
pushf
push
lock
jno
pop
pop
test
je
imul
push
cmpsb
add
push
adc
adc
ja
jmp
push
addb
pop
sbb
add
clc
shr
push
push
pushl
mov
push
ja
add
push
adc
inc
mov
popf
adc
push
mov
clc
seta
or
das
mov
xor
jg
hlt
inc
cmp
pusha
and
jnp
add
lock
les
pop
pop
pop
pop
adc
jge
stos
inc
sub
enter
clc
jmp
mov
pop
pop
xchg
push
xchg
test
rolb
rcll
out
add
and
mov
or
adc
sub
pop
xor
add
add
outsb
imul
push
fstpt
or
pop
cltd
addb
fistpl
loope
pop
mov
jne
add
lock
or
inc
cmp
adc
test
jns
add
sar
test
cwtl
mov
jmp
sub
scas
dec
jne
hlt
mov
add
mov
adc
xchg
imul
sti
testb
dec
or
push
mov
cmp
incl
sub
sbb
add
sbb
xorl
jl
movl
jb
jo
sti
mov
jl
inc
or
mov
and
mov
rolb
cld
das
adc
adc
das
fists
jbe
or
push
or
push
xchg
fldcw
xchg
or
ret
loope
mov
jg
add
adc
je
add
cmpsl
push
mov
xor
test
sarl
testb
je
mov
or
cmp
pushf
ficomps
xlat
fisubrs
mov
xor
add
pusha
scas
mov
clc
add
and
repz
push
pop
adc
cmp
and
mov
pop
ljmp
add
xchg
js
int3
shll
xorb
into
jge
cld
jg
push
push
test
sub
cmp
jge
mov
scas
and
out
fsubr
adc
xlat
pop
clc
into
cs
lea
and
in
mov
dec
pop
fldln2
aad
lds
xlat
jnp
jae
lea
jnp
mov
jb
and
mov
xchg
mov
mov
mov
add
ror
xlat
sub
jo
aaa
adc
movsl
jecxz
rol
ret
nop
inc
xchg
mov
hlt
cmpsb
adc
mov
cmp
shr
cmp
inc
adc
push
pop
add
sub
jle
orl
rolb
mov
sbb
xchg
shrl
inc
adc
or
inc
fbld
mov
or
adc
and
or
pop
cmp
dec
mov
dec
cmpsb
sbb
lea
movsl
movsl
mov
inc
clc
test
adcb
imul
mov
cmp
popa
push
loope
mov
sbb
pop
add
adc
and
fsubp
xchg
sub
idivb
pop
loop
xorl
gs
subl
mov
mov
adc
mov
mov
sbb
int3
daa
xchg
or
mov
lock
adc
pop
pop
inc
repnz
mov
stos
pop
int3
rol
pusha
mov
lods
mov
mov
jp
inc
sar
cmp
mov
push
adc
or
ljmp
lock
scas
pusha
mov
mov
pop
push
jle
adc
jg,pn
pop
filds
sbb
mov
pop
je
pop
jmp
sub
adc
jne
sbb
dec
jae
rolb
jle
dec
cmp
loopne
mov
movsb
sub
cmpl
adc
inc
add
xor
mov
out
sub
orl
pop
jae
lret
mov
and
leave
jmp
inc
pop
push
stc
repnz
jne
js
dec
mov
lea
or
ret
and
test
xchg
add
pusha
or
je
sti
clc
incl
or
jbe
shll
leave
push
push
mov
mov
add
cmpl
push
cld
lret
cmp
add
mov
jle
jg
mov
jns
movb
pop
inc
mov
shlb
push
or
sub
jmp
mov
jge
inc
cwtl
adc
dec
pop
add
loopne
add
js
xchg
and
jmp
mov
pop
daa
lahf
cmp
movzwl
jnp
add
xor
shrl
pop
and
sarl
xlat
and
mov
adc
pop
push
push
inc
mov
adc
clc
mov
ljmp
dec
ds
jno
xor
jns
es
bound
test
jne
test
adc
loope
ja
decl
rcrb
push
add
loopne
push
or
pusha
adc
test
ret
jge
xor
cmp
push
pop
sbb
and
in
ret
cmp
mov
sub
orb
dec
clc
orps
mov
test
je
inc
dec
adc
cli
add
or
orl
jmp
mov
sbb
or
js
push
clc
push
adc
imul
jae
push
adc
mov
pop
mov
lea
push
inc
pop
jle
pop
mov
mov
mov
mov
sub
jge
push
add
cmp
icebp
jle
outsb
rcrl
adc
or
xor
notl
jo
jecxz
adc
add
jp
lea
cmp
add
negl
cmpsb
push
dec
jo
mov
pop
outsb
test
push
sbb
insl
or
out
mov
cmp
rorb
fwait
sbb
pop
cmpb
jl
fmul
pop
jbe
ja
hlt
xor
dec
daa
lret
roll
xor
roll
cmp
add
mov
sbb
movsb
or
sahf
inc
dec
push
add
push
sbb
cmp
jmp
pop
mov
pop
mov
mov
or
jo
ret
add
push
xchg
mov
or
cmp
xchg
ret
and
jmp
add
add
mov
adc
loopne
or
pop
inc
das
sbb
mov
call
cmc
adc
rorb
sbb
popa
test
jo
filds
ss
adc
ret
ljmp
fstpt
lock
aaa
jno
pop
cmp
xchg
dec
sbb
das
decl
or
fwait
mov
test
jle
call
push
neg
loopne
or
add
sarl
je
je
mov
or
sbb
enter
into
sti
fistpl
sbb
pop
imul
add
fwait
sarb
mov
push
rolb
xorb
push
decb
ret
aas
add
bound
adcb
inc
or
andb
or
xor
lods
clc
xor
cmp
aaa
pop
cmp
test
scas
clc
scas
add
jo
mov
mov
out
mov
and
adc
inc
lock
fdivl
push
push
push
xor
cmp
xor
xchg
fbstp
rclb
xor
mov
daa
lea
lods
mov
je
decl
decl
pop
jle
cmp
jg
sub
inc
fnstsw
sarl
mov
incl
decl
inc
rep
jmp
mov
leave
jmp
mov
jmp
mov
cmp
fadd
xchg
add
xor
je
roll
mov
ds
cmp
add
lea
add
or
push
cmpsb
add
push
cwtl
sub
push
aas
out
mov
lea
enter
and
sbb
mov
sbb
aas
push
or
mov
xlat
sub
divl
je
pusha
lock
ja
loope
lahf
cmp
sti
fistpll
je
cld
lea
xor
std
xor
and
ds
mulb
jmp
rolb
adc
and
cmpb
mov
cmpb
add
out
in
mov
jmp
cmp
xor
jle
mov
push
shrb
roll
ljmp
call
mov
ja
pop
aad
cmp
imul
push
outsb
cmp
call
ret
jbe
mov
mov
inc
inc
adc
mov
shl
pop
into
cmp
push
pop
mov
cmpsl
xor
pop
std
lcall
icebp
test
jne
xor
inc
jmp
or
lods
mov
das
ss
jmp
and
shll
fcoms
int
or
add
jmp
mov
ret
nop
subb
or
mov
es
cwtl
add
idivl
push
cmp
ja
sub
addr16
fnclex
fldcw
loopne
or
cmp
pop
xchg
in
or
adc
push
jnp
in
or
dec
or
psubusw
pop
mov
cmpsl
fldcw
pop
inc
int
jl
xchg
sub
lds
mov
jle
xor
mulb
dec
add
jmp
adcw
shr
neg
call
rcrb
jns
adc
std
jmp
cmp
pop
cmp
and
mov
jp
mov
mov
rcr
push
mov
pop
divb
das
jo
idivl
mov
ja
and
adc
jne
call
push
lahf
cltd
loope
les
mov
jmp
cmp
rol
mov
cmpsb
push
mov
mov
call
rorb
jb
cmp
ja
mov
mov
and
xlat
pop
pusha
cmc
lahf
mov
enter
testl
mov
inc
xchg
sbbb
push
loope
cltd
lret
mov
inc
inc
and
push
xlat
pop
mov
push
xchg
inc
inc
ljmp
pop
add
shr
je
mov
mov
cmp
jne
dec
je
loop
adc
pop
add
aaa
push
rol
or
loop
jle
mov
add
and
je
mov
cmp
jne
push
adc
scas
repz
add
adc
sbb
shl
jg
jne
cmp
cmp
jne
shr
lea
sbb
std
adc
into
shr
or
mov
dec
dec
pop
cmp
bnd
sar
and
ss
imul
jne
dec
dec
dec
and
mov
dec
sbb
jg
xor
int
loopne
xlat
std
jne
or
adc
pop
mov
xor
imul
shll
mul
mov
pop
push
out
adc
iret
out
ret
packssdw
les
stos
orl
div
xor
daa
sbb
hlt
aas
mov
jge
aaa
sbb
inc
mov
inc
mov
jg
jl
adc
stc
call
sub
jle
add
mov
fnstenv
inc
sbb
jl
jne
inc
sbb
mov
sbb
mov
cltd
ss
hlt
xlat
lret
out
mov
fstpt
push
inc
cmp
je
cld
sub
fbstp
bound
sub
js
pop
js
mov
xor
dec
and
ljmp
jmp
inc
sub
and
ja
cmp
incl
lea
das
add
push
out
out
int
std
inc
mov
jmp
inc
int
fdivrs
js
pop
sub
jmp
inc
jo
xchg
mov
aas
andnps
or
xchg
and
in
adc
or
movsb
jg
jb
out
pop
xor
mov
push
add
mov
jbe
inc
mov
dec
jne
shr
ret
repz
mov
add
out
fisttpl
clc
jge
pop
pop
sub
cmp
rol
mov
xor
or
fisttpll
into
mov
inc
or
inc
dec
mov
out
lods
mov
xchg
lds
cld
shr
je
adc
lea
sti
aas
sbbl
adc
fldt
test
add
jl
testb
or
popf
xor
popa
outsb
and
fchs
repz
xor
push
mov
jns
in
stc
xor
sbb
popa
incl
stc
jmp
fstp
fldt
xor
sub
lret
jg
enter
aas
mov
jns
pop
jns
or
or
ret
movd
xchg
pop
and
adc
mov
leave
dec
sub
sbb
xchg
and
jg
push
stc
inc
mov
mov
push
arpl
xchg
cld
negl
out
sub
pop
jecxz
add
leave
sbb
xor
cs
jbe
imul
cmp
mov
das
jg
and
mov
bound
cmpb
xlat
fadds
lret
jg
lods
outsb
xor
xchg
push
or
push
push
int3
into
scas
lcall
ret
inc
mov
push
pop
test
enter
mov
inc
ret
jmp
hlt
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
addr16
dec
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
decl
mov
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
push
mov
inc
imul
divl
jl
xor
cmp
call
mov
lcall
push
inc
mov
push
sbb
sarb
repnz
test
nop
fildl
jmp
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
call
xchg
pop
ds
push
cmpsb
scas
mov
pop
or
addl
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
mov
lcall
fsubs
addr16
repz
mov
subb
and
and
loope
loope
outsb
bound
xor
jmp
fisttpl
xchg
cmp
jne
push
pop
and
mov
push
movsb
scas
add
mov
into
div
movzwl
fmull
cld
push
imul
jl
out
pop
addb
xor
push
push
mov
sub
xor
movl
addr16
add
pop
roll
out
mov
add
loope
mov
dec
jmp
push
clc
pop
aas
or
stc
mov
lcall
dec
inc
push
push
inc
push
inc
pop
inc
outsl
jb
popa
outsb
fs
inc
pop
clc
jmp
jo
imul
push
dec
popa
jae
push
popa
insb
jne
sbbl
fninit
fwait
pop
pushl
es
mov
mov
aam
leave
mov
inc
push
inc
cld
mov
pop
mov
or
dec
cld
jne
dec
mov
xor
add
or
inc
mov
fmull
lods
es
fmull
add
call
sbb
sbb
aaa
rorb
mov
outsl
test
or
inc
mov
enter
and
jge
loopne
lds
xor
ret
pop
call
pop
mov
or
push
push
sarb
push
ret
jge
mov
xor
push
hlt
jle
aas
stc
add
stos
pop
pop
mov
mov
sub
inc
add
pop
fdivl
in
cmp
je
pop
mov
incl
sbb
mov
mov
pop
sbb
cwtl
mov
cmpsl
cmp
out
lods
mov
out
loopne
mov
jbe
sub
inc
lock
push
loop
adc
jmp
stc
push
jl
cmc
fnstenv
paddd
add
push
or
fabs
add
add
or
inc
sahf
jg
push
clc
arpl
mov
inc
push
cld
mov
adc
cwtl
aaa
push
mov
pop
cmp
xor
adc
mov
cltd
push
push
mov
push
add
dec
jl
pop
lea
loopne
je
out
or
setne
scas
or
jae
lahf
mov
fisubs
xchg
mov
out
mov
jge
xor
xor
jb
das
outsl
icebp
add
jo
fisttpll
or
jne
or
sbb
or
inc
inc
fcoml
lds
lcall
pop
or
pusha
hlt
out
jmp
rclb
mov
mov
cmp
je
mov
leave
jne
mov
cmp
nop
push
xchg
jmp
fidivrl
rorl
sqrtps
scas
je
pop
cld
imulb
mov
add
aas
mov
pop
ficoms
in
lret
pop
mov
fistpl
sti
jmp
pop
mov
xor
mov
pop
mov
pop
jne
das
mov
in
jo
pop
out
es
insb
or
bound
add
je
in
or
sti
clc
pop
rclb
pop
dec
jp
mov
cld
popa
lock
xlat
icebp
je
inc
xor
mov
rorb
std
pop
pop
movb
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
mov
push
jmp
add
sbb
jecxz
dec
cmp
add
mov
addr16
test
int
lahf
adc
push
add
movsl
ljmp
pop
jmp
xor
dec
roll
push
je,pn
push
sbb
pop
sbb
inc
mov
dec
fcompl
sbb
jmp
pop
jecxz
out
iret
in
push
pop
add
sahf
push
push
push
repz
decl
clc
in
xor
notl
mov
mov
mov
movl
icebp
dec
jge
or
or
cli
mov
mov
shrb
jp
mov
push
inc
pop
imul
push
adc
push
clc
pop
sbb
mov
scas
mov
push
and
ds
pop
xchg
cmpb
aaa
incb
sbb
in
push
call
cmpsl
mov
sbb
push
popa
push
push
cmp
lcall
into
das
add
loopne
fs
add
or
xlat
ss
jae
sub
and
pop
or
leave
test
jmp
mov
movsbl
inc
inc
jmp
add
adc
sbb
xchg
fcomi
jecxz
ret
popl
push
aas
loop
fdivl
andb
jecxz
pop
mov
testl
loopne
fistpl
insl
cmpl
inc
dec
adc
outsb
jl
sti
push
repnz
pop
inc
je
add
lea
out
sub
imul
push
je
dec
pop
jae
jbe
test
movsb
adc
ja
cmp
je
clc
add
stos
call
sti
leave
or
xor
mov
add
pop
jp
pop
fidivs
dec
add
ja
push
or
push
sbb
push
sub
jae
lock
cmp
push
mov
cmc
mov
decl
jg
outsl
or
push
add
mov
jecxz
cmpsl
mov
jne
jnp
mov
es
mov
xor
outsl
je
dec
hlt
sahf
sbb
or
add
mov
xor
ret
popa
pop
cltd
push
or
insl
pop
add
lds
mov
ja
aas
jb
addl
clc
cmp
jne
and
mov
aas
or
and
mov
pushw
cs
mov
rolb
adc
inc
jmp
mov
mov
sub
daa
adc
insl
or
cs
push
test
pop
adc
ret
or
dec
add
mov
pop
inc
cwtl
jmp
movq
test
pushf
pop
jmp
addr16
sbb
ret
push
subb
call
inc
jg
shl
or
dec
ret
ja
sub
cmc
je
jle
adc
loopne
out
sbb
pop
fldz
out
cmp
repnz
adc
cmpsb
ds
push
or
fnstenv
inc
in
test
mov
pop
mov
call
dec
push
loope
cmp
loop
push
fs
adc
aas
mov
push
add
or
mov
push
push
push
push
push
sarb
mov
push
and
xor
imul
mov
mov
or
pusha
add
fnstenv
sbb
inc
lock
movb
adc
adc
xlat
jge
xchg
jae
pop
insb
stmxcsr
jae
pop
pop
and
or
xor
dec
mov
pop
cmp
xor
out
dec
rclb
ret
scas
mov
add
sti
ffreep
cmp
je
cmp
push
sub
iret
pop
sub
dec
jmp
add
jg
aas
sub
jb
je
jmp
cmp
sub
out
std
jnp
adc
std
sbb
dec
cmp
mov
jmp
cs
idiv
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jge
psraw
mov
mov
jmp
mov
jmp
mov
cmp
popa
call
int3
les
mov
mov
in
and
jno
ds
mov
sbbb
push
fldl
je
pop
roll
mov
jge
mov
xchg
out
push
inc
cli
sub
or
mov
mov
pop
xor
adc
push
xor
fistpl
shll
movsb
pop
call
sub
or
adc
testb
enter
repz
stc
pushl
add
sub
ret
mov
dec
mov
aas
enter
jo
mov
jle
dec
mov
xor
xor
and
test
adc
cmpl
inc
or
pop
cmpsb
sub
or
dec
mov
and
js
ljmp
inc
mov
inc
dec
mov
out
mov
adc
cld
adc
fwait
inc
mov
adc
sbb
xor
movb
adc
xor
cmp
dec
pushf
push
pop
sbb
pop
push
add
add
pop
in
push
xor
mov
pusha
pop
test
sbb
rorb
out
add
mov
out
xchg
mov
xor
mov
daa
shll
daa
mov
cld
bound
add
ret
mov
add
jle
jle
mov
mov
daa
mov
inc
mov
mov
mov
xchg
in
mov
fsts
aas
push
loop
inc
push
out
imul
cmpsb
neg
sbb
inc
fstpl
outsl
adc
ljmp
and
movsl
pop
leave
incb
cmp
push
and
add
cmpl
add
or
add
cmp
push
push
push
cmpsb
cmpsl
cmc
xor
dec
xor
inc
hlt
jns
and
lahf
xor
adc
adc
cmp
adc
pushf
or
adc
cmpb
out
cmpb
push
cmpl
adc
rolb
fstpt
stc
pop
mov
call
and
dec
jae
fwait
sbb
int3
or
pop
sbb
out
movb
add
jne
mov
cmp
add
jmp
adc
push
loopne
sahf
push
mov
sti
icebp
inc
adc
jno
or
push
insl
mov
js
lahf
sbb
outsl
or
ret
daa
loopne
sub
jne
cmp
fistps
iret
adc
push
loopne
sbb
mov
repnz
popl
inc
ss
leave
push
scas
adcl
or
and
and
push
push
mov
pop
ja
rorb
decb
pop
pop
arpl
dec
push
stc
inc
mov
adc
cmp
mov
add
push
xchg
dec
std
pop
or
push
mov
pop
imul
or
fs
je
fists
sub
mov
dec
jl
lock
clc
std
jb
dec
dec
out
mov
push
sbb
add
lea
add
push
loopne
jne
scas
dec
and
inc
jg
out
add
sbb
ret
dec
mov
out
rcrl
mov
xchg
adc
fidivl
sbb
mov
and
add
loopne
push
adc
pop
movw
je
loope
and
movl
sbb
cwtl
cmpsl
clc
loopne
cmpl
lock
js
pushf
cmp
sub
outsb
mov
pop
lea
push
push
push
inc
dec
jl
mov
adc
mov
out
aaa
add
gs
js
add
cld
ja
dec
loopne
js
or
sbb
jmp
lea
cmp
push
add
mov
sub
js
jl
inc
mov
jbe
int3
or
fnstcw
adc
sbb
mov
pop
jge
xor
rorl
pop
push
mov
mov
loope
out
nop
in
and
or
in
pop
mov
or
iret
fdivrl
add
jmp
inc
add
jmp
bswap
pop
sub
and
pop
pop
in
std
ficoml
push
data16
in
add
jae
jbe
mov
inc
xchg
add
add
repnz
pop
mov
pop
pop
rcrl
rcrl
mov
and
outsl
push
adc
pop
cld
addl
cmp
jl
fisttpll
inc
stos
lds
fwait
xchg
ds
sti
add
aas
jle
test
jo
push
dec
lret
mov
push
cld
add
cmp
mov
into
pop
and
mov
adc
xchg
and
jns
lock
cmp
adc
or
call
xor
cli
lds
and
inc
cld
add
popf
mov
fmuls
lds
push
imul
movsl
mov
xchg
mov
pop
loopne
lret
or
mov
jg
xor
xchg
adc
or
call
mov
dec
jmp
dec
sti
sbb
add
cmp
gs
dec
jne
mov
pop
out
ja
jge
and
test
add
dec
jmp
and
inc
pushf
sbb
or
into
pop
dec
jne
cwtl
or
int3
add
dec
loop
push
scas
and
lea
jmp
mov
rolb
insb
dec
sub
imul
add
push
pop
dec
add
in
and
inc
pop
outsb
and
sti
aas
cmp
and
shlb
arpl
shr
aam
add
orb
jg
aad
push
clc
inc
lods
jbe
ret
add
test
int
sahf
cmp
mov
cmc
mov
sahf
mov
dec
inc
sub
jg
pop
mov
out
cmp
movq
sub
push
es
jl
cmp
loopne
clc
fidivrl
sub
outsl
sbb
adc
stos
push
call
xor
jmp
push
inc
aad
inc
jmp
and
sub
cmp
xor
jl
sub
mov
mov
and
inc
sub
add
lea
inc
dec
movsb
shll
inc
push
pop
cli
mov
mov
push
sahf
cltd
mov
push
mov
mov
outsl
cmp
cmp
adc
imul
add
gs
lods
add
ret
cmp
mov
lea
lock
push
add
mov
or
inc
mov
xor
mov
push
insb
dec
js
mov
inc
adc
jge
jle
pop
adc
roll
in
pop
aaa
fnsave
mov
add
addr16
popa
xor
pop
lds
clc
outsl
xchg
lods
and
sbb
loope
stos
or
loopne
fs
sub
das
and
in
jmp
out
push
lret
ret
sar
pop
cmp
adc
icebp
pop
jg
js
xor
jg
adc
sbb
hlt
call
jl
push
cltd
test
mov
pop
test
add
pop
cmp
fimuls
incb
push
cs
push
push
and
dec
es
or
push
cmp
mov
divl
mov
adcl
dec
cmp
xor
jmp
inc
pop
das
cmp
jmp
sbb
cwtl
jle
pop
enter
vmovntpd
sbb
cmp
imul
mov
pushl
mov
shrb
shll
cmp
ja
jne
xchg
popl
lret
mov
push
add
add
xor
mov
addl
ljmp
cmp
cmp
push
add
jns
std
add
js
cmp
jle
imul
xor
pop
sbb
addl
xlat
pop
push
pop
sets
cltd
clc
lret
out
rcr
or
sub
rcrl
insl
mov
inc
test
ret
sbb
cmp
movsl
add
test
adcl
cltd
imul
add
dec
je
inc
sbbb
push
push
inc
adcb
cs
sbb
sbb
push
cvtps2pd
or
xor
lret
pop
adc
inc
mov
movb
add
sub
scas
je
dec
cmp
loope
lcall
je
mov
clc
push
cld
add
add
xor
jb
nop
dec
xchg
mov
xor
inc
fwait
xchg
out
fldl
cld
jl
cmp
jl
dec
popa
dec
int
sub
fs
popf
mov
sarl
xor
cmp
cmp
lods
inc
mov
fstl
jle
sub
sbb
mov
xor
push
pop
dec
lds
adc
add
mov
dec
cmp
add
dec
js
push
mov
add
out
mov
xor
lret
mov
movsb
mov
cmpsb
daa
pop
jbe
inc
orb
rcll
xor
sub
adc
push
stos
pop
sub
jmp
push
mov
add
hlt
movsl
sti
mov
dec
add
inc
and
jno
je
jg
adc
sub
mov
adc
push
mov
jbe
push
mov
jnp
mov
cmp
je
cmp
je
call
or
and
or
je
cmp
je
cmp
das
mov
jb
cs
adc
out
daa
loop
clc
jmp
adc
or
push
cld
dec
adc
jmp
push
mov
mov
mov
add
dec
cs
lret
push
pop
adc
cmp
pop
jmp
cmp
shrl
lock
push
jb
xorb
lahf
inc
cmp
arpl
cltd
push
adc
or
std
and
call
call
addl
fistpl
and
aaa
push
sbb
in
fisttps
pop
mov
inc
push
test
int
or
loopne
jns
and
mov
push
jl
pop
xor
addr16
ja
xor
jmp
daa
push
push
roll
popa
inc
and
repz
mov
xchg
inc
lock
mov
add
test
js
dec
inc
icebp
jmp
jp
jo
lods
xor
add
mov
inc
jl
nop
inc
push
jg
adc
adc
ret
push
cmpsb
jnp
dec
repz
cmp
js,pn
shrl
mov
cmp
repz
add
mov
sahf
dec
inc
fs
enter
dec
dec
xor
repz
fcomps
push
mov
dec
push
sbb
scas
sbb
std
add
inc
add
add
cmp
push
pop
add
sarl
dec
jge
ret
add
jo
aas
cmp
pop
sbb
xor
ja
pop
ja
cmp
icebp
push
or
jno
repz
jo
clts
shlb
bound
pop
pushf
mov
or
loop
push
sti
dec
data16
and
insb
aad
stc
and
adc
mov
cmp
push
or
lods
test
inc
inc
jo
jmp
aas
add
mov
in
jns
xor
mov
inc
sbb
and
pop
pop
pop
or
repz
mov
add
shrb
sbb
cmp
and
mov
jns
addr16
inc
push
popa
jge
inc
push
sbb
loopne
jmp
loope
jne
adc
sub
pop
imulb
adc
mov
add
add
daa
or
ja
xlat
sti
add
add
add
inc
ljmp
adc
add
cmp
add
loope
js
in
lret
loopne
loope
adc
pusha
adc
in
inc
lods
pop
push
nop
push
jns
repnz
push
dec
push
testl
loope
rcrb
das
inc
cwtl
mov
push
xchg
sbb
pop
movsb
aad
out
xchg
outsl
push
push
and
and
popf
sbb
ret
addr16
insb
test
sub
cmp
in
jecxz
xchg
adc
lods
push
jg
and
mov
mov
pop
jno
xor
fs
add
dec
adc
pop
pop
ret
push
xchg
pop
jl
pusha
mov
sbb
std
mov
or
pop
or
je
vmwrite
neg
imull
out
lahf
iret
fiaddl
or
xor
fincstp
fildl
ret
int
cwtl
jb
not
loopne
std
incl
rcl
cmp
jb
iret
cmp
jb
sub
sbb
inc
loop
pop
test
test
mov
or
repz
dec
testl
lahf
xor
lock
stc
xchg
cli
fsubr
cmovb
pop
stc
and
inc
jl
pop
clc
mov
daa
jmp
shl
or
movsl
pavgb
mov
ss
rorb
push
cmp
shr
ret
faddl
out
inc
jp
jge
or
ret
setb
jmp
push
lods
dec
std
setl
mov
add
sub
push
lock
sarb
push
rorb
fiaddl
fisttps
mov
inc
dec
and
cltd
popf
shlb
jge
gs
push
sub
les
add
sarl
sarb
and
jge
ds
mov
sbb
clc
mov
dec
jbe
pop
mov
xchg
mov
or
mov
add
xchg
dec
pop
inc
call
and
lock
push
es
rolb
ffree
jne
mov
rorb
inc
cmpb
out
cmp
faddl
mov
sub
mov
add
mov
inc
and
sub
inc
jl
aas
sbb
pop
je
xor
lret
repnz
push
pop
inc
pusha
test
jb
psubw
push
iret
repnz
jb
out
sti
and
sbb
sbb
jmp
aas
mov
movsb
push
aad
or
jb
jmp
aaa
and
jl
and
call
shlb
jg
mov
cltd
addr16
nopl
stos
movsb
mov
inc
pop
or
arpl
sbb
pop
jl
push
inc
push
inc
rorl
mov
mov
cmp
cmp
cmpsl
cltd
nop
xor
or
adc
int3
cs
jg
imul
inc
sub
addb
sub
je
and
mov
add
or
push
push
mov
shlb
add
xchg
push
pushf
xchg
pop
lods
push
dec
arpl
ret
dec
fs
cmpsb
xor
push
jo
loop
repz
insb
push
inc
data16
repnz
sti
inc
mov
sbb
cmp
scas
lea
std
ss
lods
mov
dec
pop
sahf
lock
popf
and
mov
add
inc
add
or
jnp
call
mov
testb
call
inc
loopne
in
cmp
je
andl
aas
fmuls
nop
add
mov
cmp
jge
and
hlt
sub
cld
mov
scas
and
ret
lock
add
cmp
jmp
decl
stos
testl
adc
in
xchg
pop
mov
or
push
loop
jmp
in
push
lods
imul
into
stos
je
dec
push
dec
aaa
push
pop
pusha
rcll
fdiv
gs
jo
movl
or
frstor
pop
enter
test
xchg
adc
cs
or
xchg
push
sub
xchg
jl
inc
xlat
inc
adc
repnz
adc
jnp
roll
out
mov
adc
cmp
add
sti
loope
xor
sbb
lds
mov
dec
pop
jno
sub
lock
clc
outsb
gs
pop
sbb
cld
or
test
lock
mull
mov
cmp
dec
clc
test
push
sti
xlat
cmp
jle
repnz
xor
icebp
and
or
mov
orl
adc
adc
cmp
ljmp
pop
mov
xchg
hlt
jo
clc
rcrl
sub
add
push
push
xor
dec
xor
addr16
pop
xchg
dec
push
lods
mov
inc
xchg
test
leave
orl
inc
fstl
rcll
sub
dec
mov
hlt
dec
clc
jne
movl
out
pop
sub
xor
gs
adc
adc
into
lock
pop
adc
dec
push
push
push
mov
incl
movsl
pop
pop
xor
ss
fwait
jg
cmp
in
sbb
or
aad
sbbl
test
sbb
mov
popf
adc
xor
mov
daa
and
imul
mov
movsl
mov
mov
loope
or
or
sub
lds
or
sarb
cmp
or
ret
pop
dec
pop
int
sti
jecxz
jmp
pop
adc
mov
inc
add
out
sbb
xchg
mov
xor
and
cld
pusha
lock
mov
inc
push
mov
add
test
sbb
call
adc
mov
push
mov
out
sbb
js
scas
push
pop
negb
or
dec
pop
lock
ds
aam
out
inc
mov
jne
mov
scas
inc
add
sub
lea
mov
xlat
shll
sub
rolb
roll
cli
dec
jg
sbb
mov
gs
lret
sti
mov
andl
loop
std
cli
cmp
in
lea
cmpsl
inc
cmp
test
fs
mov
push
push
mov
lea
add
cmp
dec
jmp
pop
test
gs
gs
xor
cs
jmp
jmp
sub
je
push
popa
je
dec
popa
insl
mov
outsl
loopne
data16
jno
sbb
fcompl
fwait
js
and
push
push
arpl
movsl
cmp
inc
jb
add
ja
pop
pusha
fs
dec
and
and
push
into
xor
call
inc
or
int3
or
push
pop
xor
mov
add
imul
inc
inc
adcb
sti
and
sbb
popf
push
lods
repz
mov
fxch
and
inc
test
dec
pop
mov
dec
jge
jg
out
fldt
mov
sbb
jbe
pop
imul
dec
cmpb
stos
pop
cmp
jne
mov
popf
inc
addb
sub
sbb
cmp
lods
aam
push
inc
jb
in
je
das
outsl
repz
in
ret
xor
cmc
add
mov
das
mov
out
data16
popa
jb
stos
fnstsw
iret
mov
jae
aaa
mov
jbe
pop
inc
cwtl
pop
sub
inc
sahf
mov
in
adc
scas
dec
sar
dec
dec
sbb
in
in
jmp
data16
lock
and
or
cmp
mov
adc
pop
negl
mov
push
cmp
add
mov
inc
mov
add
mov
or
fimuls
icebp
mov
mov
dec
and
subb
fstps
cltd
pusha
jg
mov
mov
cmp
mov
js
add
or
mov
mov
cli
mov
pop
or
push
or
jae
or
int3
mov
and
inc
inc
int
push
mov
fdivl
jne
mov
aaa
les
loopne
adc
push
cld
jne
add
push
add
xchg
ljmp
decl
jno
sub
jecxz
lock
add
pop
mov
stc
nop
cmp
push
inc
add
push
adc
mov
std
push
es
mov
mov
lahf
pop
imul
mov
pop
ret
sbb
add
add
dec
push
fmuls
roll
and
add
mov
jae
add
cmp
adc
add
mov
pusha
mov
mov
test
push
js
inc
fbstp
sbb
cmp
loop
insl
jns
and
add
shll
fmuls
test
inc
inc
xchg
repz
push
jle
xor
ret
loopne
call
lods
movzwl
inc
cmp
ja
mov
inc
jmp
cmp
and
lea
cmp
ja
fcmovb
jmp
or
mov
sti
sbb
adc
and
sbb
and
lret
mov
cmc
jmp
popa
add
dec
ret
pop
popa
rolb
or
mov
add
mov
add
dec
movb
and
sbb
rcr
orb
add
cmp
lea
iret
add
rol
push
out
mov
hlt
dec
jp
or
lods
jnp
fwait
lock
pop
pminub
jae
dec
or
sti
test
mov
stos
or
inc
test
je
negb
pop
or
dec
loope
and
je
cmp
aas
sbb
mov
add
jne
ror
mov
and
push
rorl
dec
dec
loopne
pop
cli
cld
mov
cmp
or
inc
fwait
xor
cmp
or
cmp
add
and
inc
inc
mov
into
fidivs
ret
xor
mov
ja
sbb
push
sbb
mov
ja
jb
inc
mov
mov
out
add
sbb
imul
add
pop
adc
mov
movsl
ret
and
lock
outsb
and
cmp
pop
pop
icebp
jnp
movsl
in
pop
or
adc
enter
xor
cmp
or
nop
push
mov
jne
pop
cmp
sub
in
insl
rolb
add
xchg
inc
cmp
in
outsb
shll
lods
int3
dec
repnz
mov
mov
pop
cmp
sub
cmp
lahf
lcall
add
jno
mov
cmpl
or
push
movsb
das
hlt
mov
or
push
test
or
or
clc
aaa
popf
rolb
mov
xchg
push
shlb
push
lock
into
push
jb
and
pop
lea
push
push
aad
xor
and
sbb
push
push
and
xchg
je
dec
lds
jge
push
mov
push
or
sbb
or
es
mov
test
mov
or
mov
outsl
adc
push
or
insl
sbb
scas
clc
subl
out
or
add
lcall
xor
and
push
loop
push
jno
pushf
adc
fstpt
mov
adc
push
shll
sbb
push
xor
ret
jle
je
cmp
pop
and
sub
cmp
jbe
xorl
shlb
adcb
addr16
sub
pcmpeqd
dec
jecxz
mov
pusha
xchg
inc
xchg
pop
addps
sbb
cmpsb
sbb
sub
mov
inc
in
push
mov
ficoml
dec
adc
pop
and
sub
pop
out
std
jmp
push
mov
sub
pop
adc
test
jne
icebp
adc
mov
add
jns
push
cmp
ret
mov
jo
and
ret
mov
mov
mov
lea
pop
add
lods
sub
adc
mov
mov
mov
pop
mov
in
sbb
sbbl
testl
add
add
outsb
jl
xor
fnstsw
gs
push
adc
or
pop
aam
jl
dec
movsb
pop
or
mov
mov
lods
mov
fcomps
dec
jo
sbb
insb
mov
or
push
xorl
mov
addl
push
inc
push
push
pop
pop
push
ss
ss
or
mov
movsl
mov
pop
mov
fwait
push
sbb
into
daa
mov
loopne
push
pop
pop
or
push
sti
push
or
mov
cmp
push
xchg
adc
movsb
js
outsl
sbb
and
add
add
scas
andl
sbbb
fcompl
adc
fiaddl
pop
call
pop
pop
outsl
pushf
mov
pop
push
das
or
rorb
and
adc
push
inc
inc
out
push
add
add
push
or
repnz
jns,pn
outsl
je
jo
outsl
and
adc
add
cs
loope
pop
cwtl
or
and
outsl
fs
gs
arpl
jbe
testl
adc
jns
add
mov
adc
ja
push
outsl
arpl
inc
gs
jne
sti
fldt
dec
outsl
je
imul
imul
ds
outsl
inc
arpl
or
or
mov
fstpl
or
xor
xor
pop
ds
outsl
xor
imul
fs
ja
shlb
dec
ja
addl
jb
roll
xchg
xchg
inc
xchg
je
insb
jb
nop
and
je
enter
or
or
cld
jae
adc
xor
rolb
enter
mov
cmp
nop
dec
clc
enter
pmuludq
in
and
loopne
or
enter
rolb
enter
enter
mov
mov
lods
enter
test
mov
pushf
cwtl
xchg
and
enter
orl
test
enter
insb
xor
and
enter
pop
push
enter
push
dec
dec
and
cmp
or
enter
sub
xor
and
and
xor
and
and
xchg
orl
add
jb
sbb
hlt
lock
push
sbb
sbb
aam
nop
inc
push
ror
enter
sbb
sarb
mov
sbb
test
mov
pushf
cwtl
xchg
fs
inc
push
nop
mov
test
and
sbb
cmp
enter
jne
fs
inc
push
push
dec
dec
nop
inc
push
sbb
inc
push
sbb
xor
sbb
sub
sbb
sbb
adc
nop
inc
push
adc
leave
inc
push
sbb
cld
je
or
enter
in
or
enter
loopne
enter
fcom
enter
ror
enter
xor
sarb
mov
or
enter
mov
pushf
cwtl
xchg
enter
nop
mov
test
enter
insb
or
enter
pusha
xor
and
and
and
cmp
sbb
in
ja
aam
sbb
rcl
xchg
inc
push
int3
loopne
fs
inc
push
fdivrs
mov
lods
inc
push
sbb
mov
pushf
cwtl
xchg
nop
sbb
mov
push
cmpb
push
sbb
inc
push
sbb
pusha
push
sbb
pop
push
push
sbb
dec
dec
inc
fs
inc
push
inc
cmp
nop
inc
push
sbb
sub
push
sbb
and
sbb
sbb
sbb
or
add
leave
inc
push
add
jbe
and
in
orl
call
xor
and
aam
fs
popa
or
enter
push
sbb
mov
fs
lods
orl
test
movsb
mov
and
enter
test
enter
jl
enter
je
insb
and
pusha
orl
pop
pop
push
push
or
enter
inc
xor
and
and
or
xor
and
and
adc
or
enter
add
cmp
and
cld
jne
fs
inc
push
hlt
lock
nop
inc
push
sbb
in
inc
push
sbb
aam
sbb
int3
enter
nop
inc
sarb
mov
nop
inc
push
sbb
sbb
xchg
push
sbb
mov
inc
cmpb
inc
push
je
insb
outsl
inc
push
sbb
movzwl
shl
mov
push
arpl
inc
clc
mov
sbb
inc
push
or
fs
test
jl
insb
nop
xor
fstpt
xchg
shl
sbb
dec
jb
es
xchg
repz
cmp
push
movsl
movswl
add
and
xlat
pop
daa
mov
adc
addb
cvtpi2ps
xorb
pop
insb
sbb
mov
lock
lret
inc
sbb
add
adc
sbb
add
and
outsb
push
push
pop
jg
cmc
pushf
fdivl
pop
push
pop
mov
add
push
fcoms
and
fmuls
xor
lret
mov
or
push
mov
pop
push
push
pop
push
imul
pop
pop
and
and
shll
xchg
push
imul
pop
repnz
cmpsl
add
pop
xchg
or
inc
sub
or
cmp
gs
mov
and
push
dec
inc
inc
dec
add
outsl
insl
out
outsl
jbe
pop
push
and
dec
pop
inc
push
dec
pop
mov
pop
pushf
and
icebp
dec
push
push
pop
sub
push
inc
pop
movsb
mov
dec
pop
dec
dec
dec
inc
push
das
ja
jle
sbb
dec
js
jle
push
movsl
into
js
lock
nop
icebp
repnz
sbb
cmc
div
fs
inc
push
clc
stc
cli
nop
inc
push
sbb
cld
std
inc
push
sbb
loopne
sbb
loop
in
fs
inc
in
out
nop
inc
push
call
push
sbb
in
in
inc
push
sbb
rolb
sbb
rcl
aam
fs
inc
aad
xlat
fs
inc
push
fcomp
ficoml
inc
push
sbb
rolb
fs
rol
les
fs
inc
fs
inc
push
enter
inc
push
sbb
int3
int
push
sbb
mov
sbb
mov
mov
fs
inc
mov
mov
nop
inc
push
mov
push
sbb
sbb
mov
mov
fs
inc
movsl
cmpsb
cmpsl
fs
inc
push
test
stos
nop
inc
push
sbb
sbb
nop
push
sbb
xchg
xchg
xchg
sbb
xchg
xchg
xchg
jne
inc
push
cwtl
cltd
lcall
inc
cmpb
ss
jl
or
push
inc
imul
nop
insb
push
push
or
popa
jb
push
fstps
mov
cs
mov
add
add
or
or
dec
ss
mov
or
lcall
js
gs
imul
int3
fs
aaa
or
inc
add
xor
jns
mov
push
mov
push
inc
inc
bound
mov
jl
test
adc
dec
mov
adc
lea
nop
adc
ds
orl
dec
or
jns
cmp
subb
imulb
or
outsb
mov
les
les
divb
lcall
scas
ds
js
scas
pop
inc
xchg
gs
jl
and
jl
mov
sbb
ljmp
jns
outsb
xor
jbe
fsubrs
gs
sub
scas
aas
scas
ss
sub
popa
outsb
test
nop
mov
clc
fadd
dec
jbe
insb
outsl
ja
loopne
lods
mov
sahf
pusha
inc
cmp
dec
popf
gs
cmp
scas
ds
xchg
xchg
fiadds
push
in
xor
adcl
or
push
insb
jle
mov
mov
xchg
xlat
shll
and
xlat
inc
mov
jne
outsb
fs
cwtl
scas
sbb
movsbl
outsl
imul
or
fs
mov
popa
jae
ficoms
lock
or
mov
inc
inc
dec
cs
lret
lods
mov
shrb
xchg
adc
jae
add
jae
adc
jbe
adc
sub
testb
push
jb
insb
mov
nop
mov
cmp
imul
shlb
or
je
and
lock
inc
xlat
sbb
push
adc
push
sbb
cmp
mov
mov
sbb
inc
popa
fsubl
mov
aam
out
loopne
sbb
jb
out
xor
aas
das
mov
push
data16
mov
cs
sub
aas
rclb
push
stos
push
in
adc
push
addr16
push
loope
cld
jmp
gs
popl
adc
cs
xor
xor
dec
movntq
lea
dec
cmp
lods
add
pop
add
inc
push
stos
sbb
push
push
push
or
lds
int3
daa
ret
jecxz,pt
rcl
out
sete
ficomps
inc
nop
cmp
adc
cmp
adc
int
xlat
push
loope
dec
shll
repz
jg
out
push
mov
jnp
sbb
push
loopne
sbb
cmp
mov
in
test
xor
adc
test
mov
aaa
imul
and
daa
push
sbb
fld
lods
outsb
arpl
mov
sbb
pop
or
pop
and
div
add
rorb
call
mov
mov
mov
sbb
ret
jns
aas
lahf
sbb
jb
xchg
cld
mov
dec
jle
cmpsb
das
cs
into
clc
ds
xlat
push
movsl
ss
and
ffree
push
mov
mov
inc
fists
xorl
adc
and
adc
lock
stos
xchg
ficoms
leave
rol
add
push
loop
psubd
test
mov
sub
lcall
lcall
out
xor
movsl
cmp
add
add
cmc
or
or
aas
add
mov
cmp
jbe
cmp
repz
cli
cmpsb
je
movzbl
pop
push
cld
ret
nop
pop
fwait
shlb
addr16
push
mov
cmpsl
jne
bound
inc
inc
aas
xchg
orb
push
mov
fdivl
or
pop
or
cltd
out
jg
sti
iret
repz
out
and
sti
je
loope
add
mul
pop
out
sbb
js
xchg
cld
test
cmc
test
add
xchg
fiadds
adc
mov
movsl
clc
or
loop
inc
adc
sub
clc
addr16
adc
in
or
push
lret
lods
ror
mov
scas
mov
loopne
in
iret
inc
enter
outsl
add
add
and
mov
cltd
aas
and
mov
push
add
mov
push
push
adc
adc
aaa
sub
lock
jmp
cmpb
jbe
adc
xlat
mov
dec
sub
clc
imul
lock
sub
inc
dec
cmp
cmp
hlt
movsb
and
push
push
cmpl
repz
lods
imul
nop
pop
or
adc
cmp
mov
lahf
push
push
mov
xor
out
js
pop
lea
imul
push
mov
lock
mov
mov
mov
repnz
or
stos
mov
fstp
or
outsl
sub
adc
push
aaa
and
std
in
imul
hlt
add
and
mov
pusha
pusha
mov
js
stos
pop
push
cmp
test
add
sti
ret
outsl
sub
movb
pop
dec
mov
sub
add
fdivs
adc
sbb
ds
xchg
clc
addr16
add
arpl
adc
inc
mov
fadds
jmp
push
and
je
jae
mov
push
add
cmp
push
daa
jne
dec
mov
sbb
mov
jmp
pusha
out
mov
adc
inc
das
adcb
push
dec
lahf
rol
mov
dec
sub
cmp
pop
cmp
jne
bound
dec
mov
aam
sahf
mov
cmp
mov
jae
out
adc
sub
mov
adc
xor
mov
call
adc
pop
dec
push
or
fcomip
aas
std
pop
inc
test
mov
sub
je
push
fsub
adc
jae
cmp
cmp
jg
mov
or
out
fisttpll
jae
inc
dec
jne
add
or
jne
loopne
dec
cli
sarb
jl
mov
push
ret
arpl
push
dec
addr16
push
sti
cmp
jb
sysret
mov
push
jne
pop
pop
sub
sub
jbe
add
mov
sub
mov
add
cli
push
mov
sub
xor
push
outsl
cwtl
js
repnz
xchg
sub
enter
xor
and
pushl
int
loopne
adc
call
das
pop
out
into
sar
movb
dec
inc
arpl
inc
add
cmp
and
sub
xchg
jb
sub
scas
out
andl
insb
and
fistps
fildll
clc
fadd
faddp
add
add
sub
add
rorl
fadd
orl
cmp
add
push
sub
loopne
jae
ljmp
ffree
ffree
ffree
ffree
pop
aad
rcrb
aad
aad
shlb
out
and
mov
loop
and
in
mov
add
mov
mov
js
iret
es
clc
and
rclb
ret
xorb
jp
mov
add
movups
mov
or
mov
pop
les
dec
int3
push
popa
or
jbe
sub
fidivl
imul
xchg
xlat
pop
rolb
cmp
sub
mov
cmpsl
aas
dec
xor
add
dec
dec
inc
mov
aas
loope
mov
mov
les
adc
and
cmp
xor
mov
iret
cmpb
mov
popa
and
sarb
add
jo
decb
jo
hlt
mov
inc
incl
pushf
jl
inc
inc
clc
test
fdivrl
mov
stos
nop
xor
cmp
jmp
aam
icebp
add
jecxz
pop
ret
das
jo
push
and
or
pop
popf
adc
insl
lock
adc
adc
add
dec
ss
push
addr16
mov
pop
mov
add
mov
mov
dec
ret
xor
add
add
push
sub
test
into
lock
adc
jmp
and
stc
rorb
gs
cmp
push
cmp
mov
pop
sub
mov
xchg
adc
addr16
std
or
push
push
jmp
pop
lods
cmp
cwtl
lea
loope
push
lds
jl
adc
and
ds
push
fidivrs
clc
mov
push
out
rol
inc
push
pop
and
mov
daa
loope
or
loopne
xor
add
mov
and
push
loopne
inc
ja
insl
mov
dec
out
adc
sub
and
or
inc
lock
cs
mov
shll
in
pop
sbb
outsb
lock
jno
dec
sub
mov
mov
adc
add
lods
pop
out
push
add
mov
sbb
push
fs
insl
xor
and
inc
or
adc
adc
push
mov
or
sbb
clc
pushf
dec
jle
or
mov
and
and
push
sbbl
pushl
mov
cmp
repz
add
push
enter
xorb
pop
push
and
adc
mov
sahf
test
pop
pop
iret
bound
sarb
test
xor
and
add
loope
pushf
cld
mov
push
push
je
es
inc
fwait
in
in
lods
and
sub
lahf
push
adc
jle
ss
imul
arpl
jo
push
scas
fs
test
push
xlat
jmp
dec
fwait
mov
adc
int3
dec
mul
pop
push
gs
and
loopne
inc
inc
add
subb
adc
sbb
and
cmpl
or
push
inc
mov
movsl
push
dec
call
scas
clc
not
and
mov
aam
cmp
pop
dec
sub
mov
sahf
sbb
mulb
cmp
mov
pop
je
jae
push
fs
aas
pop
inc
aas
or
in
or
sbb
stos
aas
dec
je
xor
out
adc
sbb
push
pop
sbb
cwtl
arpl
js
cmp
je
jmp
incl
jg
or
or
mov
clc
sub
sbb
mov
add
popf
jne
dec
sbb
shlb
mov
aad
enter
ret
sahf
mov
sbbl
je,pn
mov
jbe
mov
dec
sbbb
gs
fidivrl
sub
inc
fs
xorl
add
cs
cmp
sarl
and
outsb
sub
add
scas
enter
pop
mov
push
cmp
push
mov
inc
ja
pop
dec
mov
addr16
sbbl
or
mov
rorl
adc
mov
ret
mov
sub
add
dec
adc
lods
pop
or
push
xor
inc
inc
sub
xor
xchg
or
sbb
mov
movsb
sub
out
xchg
aam
imul
int
and
dec
in
addb
mov
sahf
sbb
popf
std
jecxz
cltd
xor
mov
mov
and
mov
pushf
cwtl
cmp
push
mov
enter
add
int3
add
aas
pusha
mov
adc
loopne
cmpsl
shlb
test
jbe
dec
push
mov
sub
aaa
push
dec
xchg
push
mov
mulb
lahf
xchg
jmp
jb
ja
pop
pop
xchg
lcall
movsl
arpl
mov
cmpsl
sbb
test
push
xor
add
out
mov
mov
xlat
inc
push
hlt
or
cmp
fucom
outsb
loopne
fsts
dec
ds
scas
adc
push
mov
dec
mov
mov
flds
fs
subb
shld
mov
lock
movsl
loopne
pop
loopne
sbb
out
je
xchg
adc
adcl
cltd
jnp
rcrl
jle
add
adc
testb
shl
push
stc
pop
stos
xchg
mov
std
xor
stos
jmp
inc
dec
jne
jmp
test
pop
movsb
leave
add
ficoml
in
aas
xchg
iret
sbb
je
out
mov
rorb
and
fcmovbe
cmp
movsl
nop
and
add
pop
xchg
jne
movups
jb
sbb
das
call
popa
nop
pusha
enter
push
push
inc
mov
addr16
test
stc
add
imul
clc
cld
push
inc
dec
roll
loop
dec
cld
imull
out
inc
call
adc
ljmp
xchg
sub
les
lock
out
adc
adcb
call
add
fs
and
add
sahf
jno
int3
fisttps
mov
mov
ja
test
inc
jmp
test
jnp
push
push
mov
orl
mov
iret
insl
loopne
jge
movsl
xlat
movsb
pop
pop
sarb
mov
dec
dec
lret
dec
jbe
loopne
adc
inc
sub
pop
lret
and
pop
lds
nop
lahf
js
jnp
pop
jg
inc
outsb
stos
mov
sbb
iret
push
test
and
add
sbb
ja
mov
leave
add
xor
xor
repz
mov
mov
or
dec
add
stc
pop
cmp
jl
add
and
fildl
out
sub
or
das
rcll
call
inc
loop
cmp
or
add
inc
dec
shll
scas
es
add
inc
inc
data16
pop
or
stos
inc
inc
dec
je
mov
mov
xchg
fbld
sbb
lods
in
decb
pusha
lock
mov
jne
xor
rcr
inc
stos
push
xchg
push
ret
cmp
pop
rcrb
or
and
lock
or
adc
xor
sbb
rcr
xchg
daa
into
xchg
xchg
or
mov
lea
adc
decb
jmp
cld
cmp
jbe
mov
adc
rorl
mov
adc
lret
outsl
or
and
add
cmp
mov
sbb
dec
mov
mov
rolb
fwait
sub
or
addl
sbb
adc
sbb
rcrl
lea
adc
and
xchg
push
sub
jmp
pop
fsubl
adc
pop
or
cmp
or
stos
add
stos
dec
jne
int
rcl
cli
jnp
ficompl
sar
call
mov
ret
sub
lods
lret
cmp
or
aam
pop
cltd
and
lods
jmp
pop
dec
mov
sub
cmc
pop
cmpb
ret
pop
testl
jge
xchg
test
lret
add
mulb
xor
pop
cmp
fstl
pop
pop
jnp
jmp
sub
jb
or
dec
std
cmp
ja
imul
mov
add
and
push
mov
dec
sbb
cmp
adc
loop
cmpsb
lret
std
or
jl
jne
lahf
inc
lock
je
xchg
ret
and
mov
pushl
push
pop
pop
jne
lea
mov
imul
add
and
xor
frstor
test
test
scas
pop
inc
ss
aam
push
xor
mov
add
xlat
popa
dec
fsubrs
sarl
push
out
lea
and
jmp
popa
test
es
cmp
or
xor
push
and
mov
imul
and
in
in
nop
in
sbbb
add
or
stc
push
jne
inc
out
sbb
add
sti
adc
add
mov
jmp
xor
inc
cld
xchg
jae
in
and
jmp
mov
and
add
jne
aas
and
inc
cld
call
pop
jns
mov
inc
idivb
ja
xchg
jle
loopne
mov
cmp
ja
cmp
dec
or
cli
add
es
dec
mov
rcrl
xorl
lods
scas
push
stos
and
jmp
mov
sarb
mov
inc
je
mov
or
add
mov
das
inc
je
mov
dec
je
dec
jge
cmp
or
adc
cmp
jbe
lods
ss
daa
icebp
pusha
jne
xchg
adc
ljmp
clc
adc
unpckhps
mov
push
loopne
mov
inc
iret
dec
or
sar
or
je
lret
xor
cmp
stos
pop
pop
arpl
daa
sub
hlt
insl
sbb
push
notb
cmp
mov
icebp
xor
xor
lods
imulb
jg
jnp
popa
insl
test
xor
or
and
roll
jns
scas
lcall
xor
jae
adc
cmp
mov
clc
dec
cld
lea
push
jo
out
or
lock
loopne
fidivs
xor
or
addb
movsl
cltd
adc
shlb
sbb
pop
push
lea
jg
rclb
stos
or
pop
pop
pop
push
inc
or
call
jge
mov
neg
jmp
or
leave
mov
stos
xchg
push
mov
aas
addb
outsl
mov
gs
adc
lcall
rolb
in
or
jg
dec
mov
stos
cmp
jne
pop
pop
cmp
loope
aaa
aam
sub
push
in
fwait
sti
mov
orb
test
mov
or
lock
arpl
add
jge
mov
jle
mov
js
ds
insl
daa
cmpsb
adc
jb
incb
loopne
rorb
mov
movzwl
out
lock
sub
lock
hlt
mov
pushf
out
lea
mov
xchg
push
sub
adc
jnp
pop
push
add
ja
movswl
mov
add
lea
sbb
call
insl
aaa
lea
cld
lds
sahf
mov
sarb
dec
dec
inc
dec
inc
dec
lods
or
cmpsl
fnsave
dec
xchg
jge
sbb
jno
ret
std
mov
aam
aam
clc
pop
adc
stc
std
jl
pop
sbb
mov
je
imul
insl
scas
sbb
mov
loop
push
adc
pop
out
mov
clc
dec
test
cs
mov
mov
out
gs
scas
dec
add
mov
sub
add
mov
pop
jl
mov
mov
mov
lods
insl
sbb
lods
cmp
add
cmp
sub
je
mov
mov
mov
repz
inc
test
jne
sbb
mov
in
stos
xor
repz
and
sti
add
je
inc
jne
and
mov
test
adc
hlt
fwait
and
sbb
mov
clc
scas
dec
lds
fwait
pop
scas
iret
mov
mov
inc
je
push
xor
shl
cmp
xlat
sbb
pusha
test
sahf
dec
testl
add
mov
fstpt
and
inc
add
and
and
adc
jge
data16
sub
sub
xor
pop
jnp
jbe
es
sbb
and
sub
ja
outsb
adc
xor
jb
scas
mov
sub
sub
cmpsl
mov
or
clc
mov
div
jle
add
add
inc
add
sbb
sbb
arpl
shr
out
xor
or
pop
adc
lahf
cmpsb
je
push
pop
pop
jecxz
loope
mov
imul
ret
mov
push
jnp
sti
xchg
shlb
dec
inc
or
je
into
aas
xor
outsb
jne
adc
pop
pop
punpckhdq
fs
jmp
xchg
adc
xor
int3
mov
and
mov
cmp
mov
lmsw
je
in
cmp
gs
sti
out
loop
mov
push
add
inc
sbb
sbb
xor
shl
imul
out
push
mov
in
xor
clc
idiv
mov
mov
add
es
mov
je,pn
cmp
je
mov
sti
and
fcomi
cmp
je
xchg
je
mov
jmp
inc
jmp
incb
mov
jnp
movl
mov
jmp
movb
jmp
loope
mov
add
and
jne
aaa
out
add
xor
icebp
imul
lods
sub
cltd
hlt
les
fdivrs
cmp
fnstenv
ljmp
loopne
out
ss
shrb
jae
mov
je
lahf
lcall
sbb
mov
daa
and
xor
repz
push
sbb
add
xor
jns
dec
movsl
pop
lock
jmp
insl
sub
andl
cmp
std
or
les
or
stc
pop
pop
mov
scas
push
mov
sbb
jmp
add
pusha
add
ret
mov
sti
pop
jl
mov
decl
jne
jmp
incl
arpl
cli
addl
test
or
loope
sahf
and
jle
sub
pop
add
jmp
jmp
and
jns,pt
adc
sbb
test
mov
pusha
adc
inc
out
addl
aaa
xchg
lods
pop
mov
add
adc
inc
cmp
mov
jnp
cmp
testl
or
xor
inc
cmc
movb
fistps
push
call
dec
ljmp
xor
adc
clc
repz
fabs
push
sti
inc
adc
frndint
push
fldt
fisttpll
negb
je
fidivl
in
lcall
jne
lea
mov
inc
sub
jmp
call
wrmsr
clc
pcmpgtd
jmp
shrb
out
icebp
jge
jns
sbb
adc
jge
test
addr16
incl
cmpb
jb
movb
js
decb
and
jecxz
cmp
jmp
data16
popa
xor
cmc
mov
cmp
inc
xor
notl
shl
fisttps
shr
mov
mov
ret
mov
cmp
fs
adc
sti
add
rorl
je
xor
mov
imul
jle
sbb
add
pop
mov
cmpsl
sbb
mov
or
sbb
inc
loopne
pop
mov
or
mov
fisubrl
aaa
cld
mov
divl
xchg
call
sbb
sub
mov
and
jne
jbe
fdivr
dec
jne
jmp
mov
add
stos
aas
and
or
js
ljmp
movb
aas
divl
pop
xchg
ljmp
sbb
iret
pop
push
jo
rolb
dec
push
loope
inc
test
mov
fyl2x
fwait
test
push
inc
dec
js
fldz
cmpsb
movsb
std
jmp
cmp
add
mov
inc
push
sub
cmpsb
cmp
popa
and
popf
ds
and
inc
jne
inc
push
sub
pop
add
jg
test
mov
jecxz
aad
xchg
lods
cld
adc
add
loopne
add
aas
jmp
fstpt
dec
clc
jge
std
test
push
mov
jl
xor
test
insl
and
push
lods
jg
pusha
add
mov
sub
add
rcrb
or
jae
jp
sub
negl
clc
loopne
andl
push
inc
imul
pop
cmp
push
jns
ljmp
xchg
inc
das
jb
lock
xlat
aam
push
add
fadds
add
cmp
lds
add
xchg
pop
and
add
adc
or
or
data16
les
adc
add
xlat
outsl
adc
sbb
or
mov
icebp
aad
jle
mov
sarl
pop
sahf
les
sbb
pop
fsubs
sbb
and
dec
mov
mov
or
jns
adc
xor
fldt
imul
jbe
push
or
push
aam
mov
sub
divb
fstpl
fwait
pop
push
dec
inc
inc
fstps
xor
xor
mov
cmp
repnz
adc
xorl
repz
inc
jl
nop
add
fistpll
jnp
mov
xor
pop
xchg
or
adc
cmp
jl
sub
pop
mov
ljmp
pop
lock
and
jo
pop
mov
xchg
inc
outsb
cmp
insb
jnp
cmpsl
les
sub
out
imull
jmp
xchg
push
fiadds
adc
ja
jg
and
fadd
push
xor
xor
loope
inc
addr16
and
jae
or
or
repnz
cmp
inc
stc
inc
popf
nop
incb
cmp
ss
jge
adc
pusha
sbb
ret
fists
out
jbe
adc
add
sbb
or
sbb
or
insl
pop
scas
lret
movsb
dec
fildll
xor
sbb
addr16
fisubs
lahf
adc
push
lods
fnstsw
pop
leave
push
lods
mov
das
hlt
stos
out
add
in
pushl
add
add
mov
mov
push
fiadds
cwtl
mov
loope
cmp
dec
mov
xlat
and
ja
mov
lret
push
pop
enter
add
sar
jg
adc
and
or
div
mov
ret
stc
sbb
aad
add
adc
fsubrl
sti
mov
idiv
add
xchg
data16
test
inc
lea
sub
jge
add
addb
loope
ja
and
or
jb
sti
mov
ljmp
cmp
ja
adc
incl
cmp
mulb
pop
dec
incb
jne
sub
clc
adc
mov
aas
cltd
idiv
imul
mov
repnz
aas
inc
fistpll
add
popa
ret
or
mov
jne
inc
std
std
loop
outsl
movsl
lds
mov
cmpsl
sub
and
xchg
imul
cld
nop
push
call
inc
and
xorb
leave
jg
fnsave
stc
pmuludq
add
stos
negl
loop
dec
data16
sub
mov
add
jl
addl
add
jge
shl
lods
mov
orl
add
decw
or
sub
fcoms
outsl
insb
xchg
mov
repnz
pop
lahf
sbb
cmp
xchg
sub
lock
add
xchg
mov
loop
jns
mov
das
iret
mov
or
sbb
inc
jmp
push
jecxz
pop
sbb
clc
jle
mov
ja
and
stc
pusha
add
orb
fstps
pop
stos
mov
cmp
clc
mov
fdiv
xchg
inc
shll
mov
bound
or
sub
mov
repz
push
cmp
mov
adc
call
loope
sub
gs
lret
or
fs
push
xchg
and
data16
popa
pop
cmpl
sub
or
sbb
add
jo
xchg
and
lea
cmp
cwtl
xor
pop
mov
rcr
push
adcl
mov
aas
xchg
call
dec
push
jae
jo
add
stc
pop
add
mov
test
fwait
dec
xchg
rcrb
mov
nop
rolb
adc
pop
and
mov
push
cmp
or
dec
sti
je
xorl
ss
inc
hlt
out
push
cmpb
jne
jge
imul
pop
mov
push
lea
or
mov
fistpl
adc
inc
in
add
jecxz
jge
pop
xor
push
jge
xor
test
inc
inc
nop
into
call
inc
adc
lods
push
mov
leave
jo
repnz
adc
xor
out
repnz
addr16
lock
sbb
sbb
add
mov
pop
cmp
test
test
mov
cs
dec
adc
loope
adc
je
or
or
daa
fs
dec
mov
sbb
mov
lea
cmp
push
sub
cli
adc
aam
jne
push
addb
ret
xor
mov
adc
out
cmpsb
mov
bnd
ret
mov
sbb
xor
and
enter
imul
aaa
in
pop
xor
addr16
iret
in
adc
shl
pop
ds
jg
int3
fs
pusha
cmp
ljmp
jmp
sbb
push
push
cmp
jne
push
xorl
ret
inc
xor
push
fsubr
lock
ja
fnstcw
pop
add
add
and
enter
or
int
imul
in
mov
sub
incl
mov
adc
jecxz
pusha
lods
adcl
jmp
bt
pop
insb
jne
ret
jmp
test
adc
enter
and
push
lahf
push
call
mov
pop
cmp
jne
mov
cmp
scas
dec
xor
xchg
fisubs
add
shrb
push
sbbb
and
xchg
movsb
insl
rorb
push
or
or
or
or
or
push
movsb
out
fsubrs
or
or
mov
out
or
ret
jge
fwait
mov
ret
mov
mov
insl
fldcw
and
push
cmp
pop
lods
pusha
pop
or
sbb
xor
or
pop
cmp
mov
cltd
lock
adc
std
inc
mov
outsl
mov
dec
push
lea
mov
adc
pop
lods
hlt
pop
xchg
out
fsubrs
rcll
inc
mov
mov
fadds
xchg
push
sbb
test
shll
aam
mov
or
add
push
fmuls
aad
push
mov
xor
and
mov
mov
mov
or
je
and
push
les
loope
sbb
push
cmp
loope
push
ja
jl
push
add
adc
in
shll
je
or
push
jmp
or
popa
je
or
je
jmp
cmpb
dec
mov
test
test
adc
add
push
enter
rolb
jmp
cmp
dec
mul
xor
mov
int
jmp
popa
mov
ljmp
outsl
dec
push
mov
or
pop
or
or
jle
or
daa
or
push
dec
fcomip
push
in
mov
pop
inc
call
enter
lahf
inc
xor
and
add
in
sbb
insb
push
mov
sbb
adc
jne
mov
sbb
pop
jle
cmp
addl
xor
push
daa
jns
add
mov
imul
jmp
imul
sbb
test
dec
xor
test
pop
xchg
lea
adc
xchg
dec
add
leave
push
subb
sti
out
ret
inc
bound
adc
jbe
ljmp
cmp
lods
into
jge
sub
popf
popw
jo
add
outsl
adc
nop
cltd
push
pop
dec
xchg
jecxz
int3
je,pt
inc
xchg
jmp
jmp
inc
mov
jmp
test
out
jmp
decl
ss
lcall
pop
adc
lds
mov
or
adc
jnp
loope
mov
mov
cmp
ret
filds
enter
add
outsl
inc
dec
das
push
dec
mov
adc
stos
or
or
jno
mov
lods
fisttps
cltd
sahf
push
sub
push
mov
jmp
push
mov
cmpsl
out
jo
mov
rcl
inc
mov
adc
test
cmp
movsb
imul
xchg
and
cmpsl
pop
xchg
cmp
fdivrs
xor
cmp
je
mov
nop
scas
jno
je
sbb
std
not
cmp
js
ficomps
lcall
xchg
pop
mov
loope
icebp
inc
add
mov
xchg
ret
adc
outsb
add
cmc
sub
jae
xorb
clc
sbb
sbb
aaa
pushf
adc
ret
add
and
add
mul
and
xchg
mov
adc
fistl
cmp
inc
push
or
or
sub
subb
cwtl
mov
cmp
inc
add
mov
fwait
pushf
push
push
repnz
icebp
xor
notl
loope
les
out
fdivrl
cmp
fwait
pop
jl
in
cmp
jne
incl
mov
add
pop
dec
clc
notrack
sub
je
dec
je
sub
sub
je
inc
xlat
incb
jmp
mov
jmp
push
push
push
scas
ja
push
inc
inc
or
mov
jle
fadd
fucomip
push
and
aam
call
xlat
or
add
jg
jl
pop
pop
shlb
xor
pop
call
cmp
ljmp
scas
adc
in
sub
scas
mov
flds
popa
jnp
push
jmp
mov
inc
jp
cmp
sbb
mov
ljmp
sti
arpl
sub
out
xor
sub
add
daa
std
push
std
mov
imul
add
jle
jp
jne
adc
pop
lods
push
outsb
dec
cld
gs
jns
xor
fmuls
fadds
gs
push
push
and
and
movl
dec
pop
test
rclb
or
and
les
ds
pop
mov
movsb
scas
mov
add
and
ljmp
data16
mov
cmp
xlat
or
mov
jmp
hlt
lods
mov
xor
jl
sahf
jns
sub
pop
ljmp
je
movsb
jns
jmp
jl
or
sub
jb
and
cmp
push
je
xor
mov
and
hlt
mov
data16
aaa
pop
lcall
hlt
jmp
add
push
ljmp
mov
jo
jge
add
repnz
fsubrl
push
inc
lds
push
fstps
out
mov
dec
shl
add
cmpb
ret
fistpll
and
fs
jne
testb
movb
or
aas
jne
popa
adc
daa
sbb
pop
fsts
xor
cmp
sub
fwait
in
add
cwtl
push
movsl
bound
jmp
xchg
divb
or
sarl
pop
mov
xchg
pop
xchg
fildl
fcomp
das
inc
xchg
out
fidivs
sbb
rolb
push
out
popa
and
jno
fs
add
add
add
push
jno
sarb
add
inc
pop
ja
lcall
push
dec
mov
xorl
inc
and
jmp
push
pushf
aam
fst
or
push
sub
rcll
push
inc
inc
add
xchg
fistpl
xor
mov
sbb
dec
cmpsl
xchg
lret
into
pusha
daa
in
je
orl
add
inc
push
cmp
add
and
jb
sbb
and
jge
xor
inc
inc
insb
ja
jne
add
push
sbb
or
sub
push
or
sbb
xor
mov
push
outsl
addr16
pop
or
xchg
jp
push
or
or
push
rolb
or
lret
adc
ss
into
jnp
icebp
inc
imul
adc
sbb
nop
push
xor
cmp
leave
adc
mov
or
dec
sahf
call
insb
mov
test
add
dec
mov
rcrl
adc
lods
lock
jne
ljmp
daa
fnsave
shlb
mov
fsubrl
or
fs
movb
and
or
mov
push
push
movsl
cmp
adc
pop
push
mov
add
mov
sub
jb
in
xor
cld
or
xchg
mov
jo
pop
icebp
fs
lea
push
popf
sbb
adc
lods
jne
mov
or
cli
rorl
jp
in
aaa
inc
push
sbb
fstp
pop
addb
iret
cltd
iret
or
andb
mov
dec
in
ret
js
pop
or
in
or
xorl
popa
pop
dec
push
add
push
mov
shld
push
popa
fidivrl
pop
lcall
inc
or
push
mov
inc
inc
dec
dec
shrb
push
ret
and
lcall
xor
mov
dec
fildl
or
pop
mov
or
push
and
add
add
xor
ja
xchg
push
in
call
adc
in
dec
call
add
sub
call
or
ja
fcompl
jo
lahf
je
leave
fisttpl
adc
xor
jmp
push
jge
je
xchg
cmp
movsb
add
adc
and
xor
cmp
and
jbe
pop
mov
aad
int
mov
sub
jg
adc
xchg
add
mov
cmp
jmp
cs
fs
in
shrl
add
es
icebp
xor
ds
dec
ja
addl
push
push
pop
push
mov
mov
fdivrs
or
cmpsl
jnp
jne
push
push
and
in
push
fidivl
loope
or
rorb
mov
mov
pop
out
pop
sub
clc
int3
xlat
pop
mov
xchg
or
test
addb
addb
or
repz
dec
mov
jmp
mov
sub
mov
sbb
je
push
push
sbb
xor
dec
test
jle
xchg
das
push
push
stos
push
sbb
push
cs
sbb
mov
test
xchg
mov
adc
cld
lret
xchg
movd
xor
jmp
mov
dec
add
lock
fdivrs
ret
add
push
mov
dec
mov
pop
je
jne
xor
and
add
in
test
dec
cmp
mov
cmc
inc
movsb
movsb
jns
xlat
in
out
inc
in
add
xor
testl
fistps
add
sub
add
pop
and
xor
ss
mov
pop
imul
jge
mov
sbb
sti
add
es
out
loopne
aam
push
imul
pop
fcom
add
xor
scas
test
sub
fucomip
mov
pop
cli
in
rolb
repz
sbb
xor
mov
mov
clc
adcb
into
mov
lock
xor
lea
inc
xchg
mov
shlb
cmp
lea
add
das
mov
mov
out
and
ja
sbb
lods
or
sahf
test
mov
xor
mov
mov
cmp
mov
int3
sbb
sahf
clc
push
lea
jo
adc
fs
cwtl
push
popa
mov
imul
mov
or
push
arpl
xchg
sbb
pusha
adc
mov
sub
dec
cmp
sub
mov
and
nop
lock
or
fmulp
mov
int
fsub
and
int3
fs
insb
fiaddl
inc
adc
jmp
push
cmp
pop
jnp,pn
add
les
sbb
adc
inc
pop
pop
mov
inc
add
and
insb
aas
or
daa
scas
test
jmp
mov
xchg
ffreep
cmpsl
jo
fwait
lea
cmp
sub
nop
pusha
jmp
andl
and
or
lcall
inc
idivl
adcb
pushf
mov
and
or
add
inc
arpl
push
push
add
xchg
xchg
or
add
push
rclb
fwait
imul
fadds
inc
or
js
js
out
adc
test
ror
sbb
or
or
shrb
adc
xor
mov
imul
cmp
sbb
mov
cld
adc
xchg
and
pop
mov
mov
push
loope
mov
xlat
inc
jb
lret
xchg
mov
pop
pop
inc
add
lods
xor
or
loopne
dec
test
add
mov
adc
ljmp
test
cmp
cwtl
and
lea
or
mov
xchg
jae,pn
int3
adc
adc
dec
sub
lcall
js
xchg
push
xchg
push
test
lret
addr16
pop
fisubrs
ret
or
jge
clc
mov
aaa
andl
inc
push
sbb
mov
dec
loopne
sub
ret
pop
fnsave
xchg
adc
sub
mov
les
aaa
xor
adc
scas
int
lea
inc
cmp
roll
sbb
push
gs
mov
nop
and
shrl
inc
pop
and
fs
push
cmp
je
jmp
aas
and
jmp
xor
lret
sti
aaa
and
add
mov
add
mov
pop
or
or
pop
lret
mov
push
push
xchg
pop
dec
cmpsb
js
pusha
push
mov
adc
out
sahf
nop
xchg
loopne
mov
or
in
mov
cmp
add
icebp
icebp
cld
cmpl
movaps
inc
popf
lock
push
inc
push
xorb
pushfw
inc
or
push
dec
xor
test
fcmovnb
aam
repz
xchg
dec
xchg
fs
decb
or
lea
mov
and
orb
push
cltd
std
mov
enter
shrb
aaa
jns
in
mov
lods
mov
mov
insb
adcb
cwtl
mov
movsb
test
mov
pushf
xchg
add
sub
mov
into
int3
jae
sub
push
push
dec
jl
jno
fsubrs
xchg
and
std
fildll
add
add
sub
dec
sbb
mov
jae
cmp
clc
pop
dec
testl
sbb
mov
mov
lock
rolb
les
sub
push
jnp
jns
adc
loope
loop
aam
leave
movsb
inc
loope
es
scas
mov
cmp
les
icebp
add
mov
add
call
sbb
fildl
mul
lcall
enter
loop
mov
push
mov
mov
xor
insl
loop
in
sti
adc
inc
or
adc
shl
inc
lods
pop
inc
mov
cwtl
adc
nop
add
scas
inc
aaa
outsb
orl
xor
and
adc
adc
push
insb
mov
sub
jne
xchg
call
movsb
push
adc
dec
adc
int3
or
jo
lret
pop
mov
hlt
mov
adc
mov
mov
add
add
jne
cmp
pop
and
mov
filds
adcl
push
cmc
leave
and
pop
jnp
inc
je
inc
pop
pushf
mov
jae
outsl
jnp
and
lock
iret
imul
push
call
subb
dec
xor
sub
push
dec
flds
add
lock
adc
aam
xchg
insl
loopne
push
pop
shll
jg
clc
adc
add
mov
sbb
dec
jmp
cli
adc
aas
or
jb
mov
sub
and
or
xchg
lock
test
add
add
add
xchg
add
push
scas
lods
push
je
jge
insl
es
aam
xor
cmp
push
add
daa
ret
shll
cmp
adc
adc
aam
mov
test
das
inc
pop
jg
mov
pushl
mov
jl
mov
and
adc
outsl
xlat
or
inc
inc
lods
fcoml
cmpsl
cmc
xchg
imul
mov
push
fadd
or
and
lret
xchg
and
xchg
lock
pop
hlt
jge
push
mov
jl
jne
sbb
addr16
inc
mov
jl
mov
or
pusha
gs
inc
cwtl
lea
aas
jp
adc
push
xor
pop
mov
dec
cmp
dec
mov
jg
mov
or
or
adc
movl
nop
xor
es
fsubrs
int
jge
pop
mov
jns
mulb
sub
sub
scas
adcl
das
pop
and
mov
dec
and
daa
adc
jae
push
outsb
or
and
jae
push
xor
dec
emms
out
pop
mov
adc
xor
or
xor
dec
test
pop
xlat
dec
mov
repz
push
stos
fs
ss
sub
dec
je
cmpsl
mov
and
dec
icebp
cmp
int3
mov
jmp
xchg
cli
adc
add
inc
adc
loopne
outsb
je
insl
scas
push
ret
js
add
xor
cmc
mov
dec
jo
inc
movsl
incb
xchg
inc
inc
insb
popf
inc
cmp
sbb
enter
andb
inc
lahf
jge
add
add
jne
sub
add
jo
mov
xor
loop
fstl
xchg
inc
sbb
cmpb
mov
les
ja
adc
pop
sub
scas
xchg
fdivrs
mov
fst
mov
and
adc
out
loopne
mov
sub
mov
in
mov
inc
inc
add
or
movsl
mov
sarb
cli
jbe
insl
cwtl
test
add
or
inc
cmp
daa
mov
cs
and
aam
and
sbb
testb
or
adc
inc
inc
popa
adc
jne
push
fs
and
stc
or
dec
bound
sub
hlt
xor
pop
mov
lods
movsb
adc
jno
loop
mov
mov
fimull
ljmp
loope
xor
divb
push
mov
sub
jb
inc
xchg
and
imul
gs
mov
jne
lods
jmp
mov
pop
pop
jne
and
cli
add
mov
pop
ja
jb
repz
outsl
pushf
pop
push
or
jle
push
mov
add
inc
add
fadd
cmp
adc
in
xor
dec
data16
leave
data16
sbb
add
jmp
daa
and
call
nop
in
mov
xor
sbb
cmpsl
xchg
fisttpl
inc
sbb
sbb
faddl
mov
std
ss
shlb
int
sbb
dec
repnz
popa
mov
bound
inc
inc
cmp
test
jno
repnz
ret
lods
scas
jae
imul
cmpl
xchg
rorl
loopne
ss
dec
jne
jmp
push
out
lret
sub
lods
imul
mov
sbb
arpl
add
out
mov
dec
jne
push
test
dec
ss
ret
lea
aas
int3
lds
jmp
shlb
dec
xor
mov
push
iret
sahf
push
lock
loop
add
loopne,pn
fistpl
inc
push
jns
jmp
sbb
xor
inc
call
jnp
sub
cld
mov
push
pop
xor
insb
xchg
nop
fbld
mov
sbb
sbb
pushf
pop
fcoml
aam
mov
cmpl
aam
mov
repnz
mov
push
fstps
sahf
aaa
xor
repnz
cwtl
int3
inc
shrb
jb
leave
pop
int3
mov
shrl
andb
enter
enter
out
call
in
les
les
and
aas
inc
sarb
shl
hlt
clc
mov
andb
iret
pushf
push
clc
in
cld
push
mov
test
ja
and
adc
or
xor
dec
add
sub
push
test
sarb
sbb
fs
lock
scas
insl
add
fs
insl
mov
adc
pop
sbb
or
xchg
push
bound
scas
push
js
pop
sbb
cmp
clc
leave
in
int
push
cmp
add
add
fcomps
repnz
inc
or
pop
sub
ret
cmpl
adc
adc
or
testb
xlat
adc
daa
rcr
mov
arpl
loope
js
outsl
loope
hlt
stos
cld
iret
or
jge
ss
mov
push
dec
add
xor
dec
int
movsl
inc
int
jmp
sub
mov
add
popf
jp
pop
clc
inc
or
jb
sub
add
cmp
iret
xor
add
div
in
mov
xchg
cmp
hlt
fdivs
scas
jb
or
cmp
fisubrs
cld
int3
es
inc
mov
xor
fbstp
inc
pop
or
cmp
mov
ret
shlb
sti
jg
xor
xor
pusha
and
mov
mov
ret
add
or
push
mov
ljmp
dec
mov
hlt
lea
mov
add
or
sarb
ror
and
or
dec
xor
cmp
xor
sub
lods
or
lret
loopne
push
dec
repnz
gs
sbb
push
push
pop
arpl
cld
testb
sbb
outsb
pop
mov
push
pop
push
push
loopne
adc
mov
fstpl
inc
push
pop
xor
dec
iret
push
add
mov
les
push
push
mov
pop
loop
call
fildl
pop
in
and
cmp
mov
add
pop
je
cmp
pop
cmp
movb
repz
or
or
mov
ja
add
popa
scas
mov
or
sbb
insl
jg
pushf
test
add
lock
add
repz
or
and
and
push
movsl
add
jge
mov
add
fs
jmp
dec
adc
pop
clc
dec
sarb
imul
gs
jo
inc
js
aam
rcrb
lock
inc
in
fistl
ret
xchg
ss
aaa
cmpsl
lock
rolb
add
fbstp
cmp
lea
pop
std
fisttps
repnz
cmp
jne
jnp
loop
andb
es
test
pop
pop
xorb
push
or
les
mov
movntps
sbb
lret
popa
in
jecxz
js
popa
and
mov
jmp
fsubr
sti
adc
insl
in
loope
loopne
push
fld1
sbb
ljmp
pop
mov
inc
or
push
stc
out
pusha
mov
lea
arpl
loop
dec
add
sbb
add
rcrl
inc
daa
aaa
inc
out
and
cmp
imul
or
test
loopne
or
push
jmp
cmp
out
cltd
fsubrl
adc
rclb
loope
movl
or
mov
mov
or
sub
push
mov
and
jb
and
aam
addr16
jo
sub
imul
mov
cmp
in
rcll
and
sbb
mov
xchg
mov
adc
push
dec
xor
fcomps
push
aaa
push
pop
adc
sub
add
ja
je
xlat
ret
push
in
outsl
sub
dec
inc
or
in
jl
push
xchg
ret
mov
lea
mov
jmp
adc
dec
dec
and
out
xor
add
rol
mov
aam
orb
mov
sub
lds
xchg
ret
incl
mov
fdivrl
sub
inc
decl
cmpl
ja
sub
popa
in
cmpsb
add
push
lret
mov
in
pop
pop
lock
dec
incl
scas
add
jl
cmp
cmp
cmp
mov
roll
xchg
jmp
pop
dec
sbb
push
xchg
jmp
or
aam
or
and
in
out
xor
sbb
mov
cmp
sbb
adc
rcrb
fwait
pop
xor
pop
rclb
push
xorb
mov
inc
fildll
movsb
lcall
pusha
ss
scas
dec
dec
xor
shrl
adc
xor
push
repz
cmp
or
jne
cmp
mov
movsb
and
movsl
movsb
cld
add
and
adc
adc
and
cli
xor
pop
stc
pop
pop
add
ficoms
or
xchg
fnstcw
and
add
arpl
int
leave
dec
sbb
inc
repz
clc
ret
cmc
add
or
pop
add
data16
pop
loope
push
cld
repnz
ds
xor
jne
in
push
inc
pmulhuw
fsub
cmp
int3
cmp
cmpsb
push
les
mov
mov
pop
cmp
lods
push
js
mov
repnz
insb
push
xchg
pop
add
mov
mov
pop
clc
mov
imul
lret
data16
cmp
inc
ss
xor
cmp
lock
xor
cmp
mov
mov
cltd
into
sbb
pusha
add
into
cmp
adc
ret
pushf
insb
les
rcll
xorl
or
cmp
inc
add
insb
dec
ss
add
add
push
clc
dec
pop
leave
out
sbb
push
js
lock
pushf
insb
xchg
in
inc
pop
call
fs
push
cmpsl
loopne
pop
cmp
fisubl
int
jo
fdivrs
mov
inc
rcrb
int3
inc
mov
pushf
enter
les
dec
sbb
mov
int
ss
rolb
inc
lcall
or
mov
movsb
mov
push
clc
inc
pushf
in
cwtl
jbe
into
leave
push
cmp
sbb
xor
int
ss
lods
cmp
push
dec
jmp
rorl
pushf
jge
lods
js
scas
and
mov
and
pop
jp
push
mov
jo
scas
add
out
inc
sahf
and
sbb
icebp
or
enter
adc
inc
pusha
inc
pusha
hlt
mov
mov
inc
mov
pusha
adc
cmpsl
sbb
repz
or
push
or
push
leave
and
cs
and
dec
xor
mov
fs
arpl
inc
lock
xchg
test
pop
incb
sub
adc
xor
pop
nop
cli
adc
sub
xor
cmp
mov
movsb
out
mov
fsubrl
decb
xor
in
je
cmp
ret
mov
outsl
cmpl
lea
jmp
data16
or
sub
mov
nop
pop
ret
dec
mov
pop
or
outsl
enter
cld
dec
dec
or
adc
daa
mov
push
out
loopne
adc
popl
hlt
int
add
pop
sub
cld
insl
and
xlat
add
adc
cmpsb
cld
or
or
add
aaa
sbbb
sub
cs
fcoms
sbb
or
cli
scas
and
add
stos
xchg
or
out
clc
loop
xchg
and
jns
sub
repz
lea
mov
pop
add
sbb
je
mov
std
subb
fs
pop
adcl
or
adc
cs
movsl
sub
loopne
fninit
rcrl
filds
add
jns
add
rclb
ret
rolb
leave
pop
push
or
and
test
leave
in
mov
adc
add
nop
cmpsl
sub
or
enter
sbb
adc
add
push
inc
inc
sarb
mov
jne
adc
fwait
add
ret
push
xchg
nop
dec
test
push
mov
pop
push
and
mov
and
jo
repnz
js
jb
and
leave
and
mov
cwtl
mov
leave
shrb
and
pop
repnz
rcl
imul
jns
cs
call
inc
pop
inc
sub
loopne
fs
iret
mov
add
xor
sbb
mov
jb
xor
cld
cmp
xchg
dec
hlt
inc
in
add
dec
pop
jne
decl
out
test
or
es
movsb
inc
js
dec
gs
enter
movq
fs
jne
and
inc
mov
psubq
insb
and
cmovns
outsl
fs
sahf
jge
jb
dec
jb
pop
outsl
jb
inc
insl
jo
mov
jb
insl
push
je
push
push
push
sbb
cmp
dec
mov
jnp
pcmpgtd
aas
inc
jae
push
dec
add
mov
in
adc
or
jge
xbegin
sbb
cwtl
mov
mov
inc
arpl
fwait
or
and
add
pop
cmp
cltd
andb
pusha
stc
mov
loope
cwtl
mov
add
sti
push
shrb
xchg
push
ss
shll
inc
and
mov
call
inc
movsb
push
ret
loope
mov
ss
xor
adc
dec
dec
pop
sti
adc
testb
push
push
sbb
cmp
inc
ret
sub
adc
inc
outsl
test
push
nop
inc
dec
adc
sub
sbbl
add
ret
sbb
sbb
dec
dec
div
loopne
dec
push
hlt
adc
int3
int3
adc
in
pop
and
sub
pop
out
sti
idiv
jg
or
sbb
mov
lret
mov
jg
push
mov
adc
inc
push
push
or
mov
pop
in
or
and
jl
sbb
fsub
adc
nop
ss
push
pushf
adc
inc
mov
aas
and
ja
mov
ret
push
inc
mov
and
test
test
fcoms
inc
jnp
sbb
jge
cmp
aas
push
dec
dec
mov
and
mov
mov
add
push
add
or
aas
fld
sahf
fs
popa
adc
push
inc
xchg
lock
inc
xchg
fs
int3
sbb
sbb
int3
sbb
dec
outsl
sub
push
xchg
add
xor
iret
or
outsb
aas
iret
xchg
sbb
loopne
jb
add
pushf
sbb
adc
pushf
adc
jns
dec
arpl
jo
movl
fdivrl
xchg
push
jb
test
iret
push
push
sbb
pushf
int
mov
push
int3
sbb
xchg
cmp
push
ds
sub
push
push
pop
sbb
lea
loopne
insb
insb
jg
xor
inc
push
ljmp
dec
cld
mov
inc
and
movb
push
jecxz
push
mov
data16
inc
in
in
add
shl
das
bswap
or
add
nop
or
test
daa
call
nop
dec
jle
daa
in
fs
mov
ret
dec
inc
add
imul
add
xchg
and
repnz
movsb
ds
ss
pop
lea
cmpsl
fiaddl
xchg
or
loope
jae
or
push
inc
lock
enter
adc
pushf
inc
dec
enter
or
adc
popa
test
nop
ja
sbb
push
cmp
jg
sbb
es
addl
inc
imul
clc
sub
push
loope
mov
sub
dec
je
sbb
sarl
and
out
push
xchg
daa
loopne
ja
add
or
in
mov
inc
xchg
or
dec
pop
sbb
enter
mov
dec
repnz
pop
dec
hlt
mov
jl
fstps
lock
ja
xor
in
jecxz
xchg
pop
push
nop
int
push
or
cmp
push
rorb
into
loopne
and
push
jmp
mov
mov
push
mov
inc
loopne
or
push
adc
jle
or
or
dec
int
jne
les
sbb
mov
orb
xor
stos
and
rcrb
xadd
lods
add
in
mov
mov
or
lcall
outsl
pop
sub
mov
pcmpeqb
dec
ret
pushf
jmp
adc
fneni(8087
jmp
call
imul
test
add
xor
dec
pushf
xchg
inc
jb
or
xor
mov
push
cmp
in
adc
and
repnz
push
cmp
cmp
xor
push
aam
fcompl
test
add
cli
roll
shll
cmpl
pop
or
loope
ret
xlat
jge
outsb
ja
mov
incl
inc
adc
ret
add
xchg
add
movsl
sub
lods
sti
lods
faddl
scas
dec
inc
mov
sbbb
mov
sbb
bnd
cld
test
fmull
int
mov
and
and
and
shrl
sysexit
push
aas
adc
or
test
fcoml
pop
les
adc
dec
out
cs
repz
clc
jmp
and
adc
mov
ds
or
jl
jns
cld
imul
lea
or
mulb
adc
lea
push
jno
fstl
in
stos
repnz
lea
mov
adcl
ss
inc
adc
fcompl
inc
lea
or
in
push
test
repz
dec
jnp
pop
pusha
aaa
repnz
pop
in
insl
mov
jb
adc
fsts
and
xchg
xorb
push
out
js
and
and
pop
imul
and
xor
push
aas
push
addb
pop
push
mov
sbb
fildl
xlat
pop
fcmovu
adc
inc
sub
or
jbe
mov
pop
mov
testw
repz
fsubr
and
lock
popf
test
push
sarl
sbb
cmpl
jne
int3
aas
sbbb
fidivs
sbb
aaa
outsl
add
cld
cmp
jne
mov
imul
lock
jo
mov
jmp
xchg
pop
cmp
pop
sub
repnz
rcrb
call
or
cmc
cmp
mov
je
or
loop
dec
es
jmp
sub
add
cmpl
and
sub
mov
sub
pop
inc
push
add
or
sbb
rcrb
dec
add
iret
es
adc
inc
cli
mov
pop
popf
movsl
mov
fisubs
jns
push
inc
or
popf
imul
in
and
add
test
jo
cmp
es
sbb
in
or
cmp
loopne
in
push
xchg
in
in
loopne
roll
loopne
icebp
scas
movsb
sbb
fcompl
cmp
ficoml
insl
inc
adc
scas
mov
pop
hlt
and
mov
dec
call
outsl
cmp
jno
mov
xchg
push
push
mov
fcoml
jb
push
xor
dec
adc
loop
pop
or
lsl
jl
decl
push
sbb
jns
pop
sub
adc
cli
lcall
sub
mov
shll
add
aaa
lret
inc
adc
and
or
jge
lret
test
shrl
outsb
sub
or
pop
loopne
aas
lea
lock
je
pop
jne
dec
inc
fs
push
xchg
negl
mov
inc
add
or
loope
arpl
or
roll
push
cmp
aam
fldt
jb
inc
xchg
adc
or
sbbb
push
fucomip
push
push
or
movsb
push
add
push
js
add
test
or
pop
mov
int3
lahf
movb
fidivrs
sbb
sbb
lcall
and
ss
mov
lcall
hlt
add
cld
dec
adc
or
mov
dec
loopne
pop
repnz
daa
mov
imul
dec
clc
frstor
pushf
cmp
and
xor
or
mov
fbld
push
ficompl
rolb
bound
jb
fcmovbe
xor
mov
and
leave
leave
jb
add
add
jbe
daa
pop
ja
pop
dec
or
dec
rcrb
lahf
xor
dec
cld
jmp
and
sbb
or
scas
push
das
jmp
std
add
add
fisubrl
add
lcall
jecxz
hlt
das
mov
testb
jne
jae
inc
rol
test
fcom
imul
lock
add
aam
cmpsb
addb
daa
lock
push
sub
cmp
sahf
sub
xor
push
jnp
cmpsb
loopne
jo
iret
mov
adc
push
pop
pop
into
fs
addr16
in
mov
leave
mov
lds
shrb
mov
and
jno
sbb
addl
mov
and
xor
mov
xchg
add
dec
xor
jb
xchg
or
push
sub
and
dec
dec
dec
das
bound
push
pop
adc
shrb
pusha
insl
adc
xchg
or
jb
jb
stc
cmp
push
push
mov
icebp
push
into
in
imul
add
sbb
add
mov
lock
cmp
jmp
dec
xlat
inc
push
push
lds
push
clc
xlat
loop
inc
jl
jmp
add
sbb
or
rol
lock
lret
add
cmp
adc
in
adc
rcll
pop
rclb
or
cmpsb
imul
insb
lcall
and
dec
imul
pop
es
push
hlt
push
mov
sbb
data16
cmpb
ss
adc
shlb
dec
or
xlat
add
es
pop
add
xor
mov
jb
dec
mov
or
fbstp
pop
sub
and
dec
sub
fsubrl
xor
clc
fisttpll
fistpll
enter
js
dec
movsb
roll
popf
shll
enter
hlt
imul
jb
sbb
and
jl
sbb
subb
pushf
jmp
push
int3
add
dec
xchg
jmp
adc
dec
sub
or
es
jl
jmp
data16
pop
or
rcrl
fsubrs
xchg
pop
push
adc
pop
and
fwait
clc
inc
and
and
xor
mov
fbstp
out
dec
in
or
sti
std
jg
sub
xor
lcall
xchg
pop
push
sbb
add
xor
addl
dec
push
sbbl
or
clc
pop
call
adc
into
push
inc
push
pop
mov
add
fists
adc
or
xchg
inc
xor
jmp
inc
scas
shr
in
and
rolb
in
inc
imul
inc
xlat
cli
movsl
push
add
ljmp
mov
sub
sarb
push
sbb
pop
mov
test
xchg
jl
mov
add
dec
gs
aas
and
push
dec
shll
sti
sbb
cmpsb
imul
pop
jnp
imul
push
mov
mov
shlb
mov
pop
imul
test
mov
cmc
sbb
pusha
pop
lcall
pop
cmp
pop
shlb
mov
or
sub
push
push
adc
nop
or
sbb
sub
push
shr
mov
xor
fcmovnu
push
dec
mov
aad
mov
sar
pop
dec
je
jmp
outsb
mov
adc
pusha
stc
je
xor
and
sbb
inc
mov
daa
pop
mov
xor
push
enter
push
es
push
push
jns
imul
es
imul
loopne
mov
ret
mov
and
outsl
inc
frstor
cmp
sub
xchg
stos
pusha
xor
fwait
test
and
mov
xor
adc
sbb
sub
out
les
inc
xchg
jmp
fcoml
add
les
or
pop
in
cmp
push
pop
and
sbb
jbe
or
fcmovnbe
lods
push
inc
sbb
fwait
addr16
subb
jb
mov
or
add
and
jge
adc
lahf
add
xor
mov
jmp
jp
loopne
mov
and
add
je
push
out
enter
and
lret
pop
xor
outsl
mov
sub
je
inc
es
and
addr16
slwpcb
adc
adc
mov
xor
flds
in
adc
mov
cld
lea
or
add
sbb
add
xor
sub
push
movaps
rorl
in
lahf
mov
xor
add
jp
sbb
adc
adc
adc
push
mov
clc
xchg
mov
cmp
call
add
mov
pop
dec
out
adc
out
sub
or
pop
jle
fdivs
stc
add
xor
jecxz
imul
sub
jg
adc
fcoms
sbb
mov
and
popa
sub
jb
and
adc
movsl
jle
stos
sub
and
push
sub
ss
fcomps
push
sti
add
or
xor
add
sbb
adc
sbb
pusha
push
adc
dec
inc
dec
sub
and
test
stos
jl
inc
and
or
xchg
sarl
aam
nop
sbb
xchg
mov
push
cmp
pop
sbb
add
push
push
adc
sbb
mov
lret
cmp
icebp
mov
shlb
sbb
movsb
and
xor
je
cmpsl
or
dec
iret
mov
in
xchg
dec
push
in
push
push
cs
mov
clc
in
pop
sarl
mov
movsb
test
or
push
hlt
ljmp
ret
inc
jb
fisubrs
cmp
popa
dec
call
loopne
adc
aaa
mov
or
mov
add
sbb
xlat
fisttpll
test
dec
mov
leave
sbbb
shrl
loope
xchg
mov
xor
insl
rcll
ja
add
or
adc
jb
and
inc
add
nop
xchg
sbb
xor
add
dec
shll
xchg
cmpsb
mov
xor
add
push
mov
int
dec
imul
sahf
push
cmp
push
dec
shll
ja
stc
lock
dec
hlt
adc
into
dec
add
xchg
adc
cmp
ss
mov
cmp
add
or
add
sub
sub
and
sarl
daa
mov
arpl
pusha
and
mov
jmp
push
jne
jge
in
and
xchg
and
cmp
xor
cmpsb
mov
push
nop
push
movsb
mov
xor
sbb
cmpsb
jns
xor
insl
jg
fcoms
bound
fisubl
xchg
das
fisttpll
or
imul
xchg
inc
les
sbb
mov
sub
sbb
mov
push
icebp
cmpsb
in
add
inc
out
sub
loope
sbb
mov
push
orb
and
daa
sub
pusha
xor
outsl
lea
and
lret
test
imul
div
mov
cmp
div
nop
cmp
jnp
and
pop
jle
add
xor
shlb
xor
mov
xor
or
mov
mov
add
add
out
in
out
jo
out
pusha
test
daa
out
adc
and
jecxz
into
add
out
adc
testl
or
add
push
sbb
sub
add
cmpsb
jns
enter
cmp
cmpsb
imul
mov
dec
ss
loopne
cmp
cmpsb
mov
mov
or
sbb
and
aam
sub
push
rclb
jnp
jbe
xorb
sbb
mov
adc
inc
pop
enter
sub
fucomip
pop
inc
mov
push
sub
adc
sti
push
call
sbb
jl
sbb
add
shrb
aad
movsb
lea
test
das
sbb
add
mov
and
inc
test
out
pop
cld
shll
push
xor
pop
nop
jbe
ja
inc
xchg
fiaddl
cwtl
cmpsb
imul
adc
xchg
sbb
push
mov
dec
fstp
sub
dec
adc
sbb
dec
add
dec
shr
adc
mov
push
pop
mov
adc
inc
in
jne
and
push
jno
js
xor
jmp
cmp
or
stc
jl
call
mov
sarb
loopne
sub
pop
int3
clc
leave
neg
ret
pmullw
add
push
clc
orl
jmp
addr16
mov
mov
insl
call
rcrb
add
add
sbb
imul
sbbb
rcll
adc
adc
mov
das
das
test
int3
sbb
lahf
dec
add
jns
cmp
and
xor
add
sub
cld
push
cmp
pop
orb
cmpsb
mov
int
js
mov
push
addr16
xor
repz
add
sub
pop
pop
cmp
es
xchg
dec
add
or
pop
mov
sbb
adc
imul
loope
cmp
inc
xorl
mov
or
push
sub
xchg
add
pop
add
adc
mov
insb
adc
inc
lods
cmp
and
imul
loopne
mull
mov
sub
inc
repnz
fldcw
mov
adc
cmp
dec
scas
insl
lcall
inc
mov
push
sbb
mov
add
loope
enter
sbb
shrb
xchg
test
or
jno
push
les
inc
add
sub
in
nop
mov
imul
cwtl
and
ds
adc
mov
jmp
or
or
cmpsb
adc
out
adc
push
rcr
add
fildl
inc
adc
sarl
mov
daa
jmp
fnstenv
out
push
clc
sbb
sbb
data16
ss
fiaddl
pop
push
jo
xchg
mov
ds
divl
aaa
into
fs
out
xor
lret
sbb
pop
inc
push
nop
mov
das
lahf
hlt
fildl
movb
push
and
mov
inc
sbb
cmp
fildll
dec
xchg
adc
xor
ds
inc
rcrb
add
and
ud0
mov
loopne
aad
pushf
dec
push
in
sarb
movsb
dec
sub
mov
lock
inc
frstor
loope
lcall
js
mov
cld
pop
xor
jmp
dec
or
nop
mov
jno
data16
adc
sbb
inc
test
shlb
push
push
lock
mov
neg
pop
dec
push
nop
pop
pop
cmc
inc
mov
mov
and
andl
push
into
repnz
inc
xor
imul
sub
out
dec
repz
lds
push
data16
dec
fdivs
stos
inc
fbstp
ret
dec
pop
inc
add
jns
fists
fldt
xor
lahf
aad
and
inc
das
add
xor
mov
outsl
push
mov
push
cmp
inc
xor
sub
mov
cmp
mov
xchg
pop
pushf
push
or
adc
xor
mov
aaa
inc
jno
pop
repz
cltd
cmpsl
insl
pusha
int
mov
inc
fistl
arpl
xor
es
repnz
fwait
xor
mov
adc
mov
outsl
test
test
jne
gs
mov
dec
inc
xchg
or
test
cmp
es
xor
xor
aad
xchg
scas
jb
cmp
dec
inc
faddl
mov
add
and
lock
sbb
xor
push
push
cmp
lcall
andl
in
add
seto
push
fildll
pop
dec
push
pop
inc
lods
es
jge
or
repnz
arpl
in
in
push
mov
aam
sub
ss
insb
jle
xor
and
jns
mov
mov
push
addr16
pusha
imul
push
dec
dec
iret
xchg
inc
cmp
jno
inc
adc
std
add
fmuls
jbe
xchg
int3
and
in
mov
mov
inc
pop
add
pushf
pop
mov
xor
insb
push
insl
mov
add
mov
dec
mov
jae
pop
adc
ss
into
pop
ss
inc
jb
pushf
jle
sub
sub
dec
pop
sub
insl
rorl
cltd
push
rcrl
mov
push
lock
add
push
sub
daa
mov
stos
loop
add
mov
pop
sarl
mov
sub
dec
mov
lods
lods
in
imul
mov
sub
mov
pop
ss
test
adc
mov
mov
mov
add
mov
aas
pop
enter
shld
cmpsl
leave
xchg
stos
dec
roll
testb
xchg
aas
and
ficoms
push
xlat
dec
je
jne
xchg
push
and
cmpsl
xchg
dec
inc
jg
cmp
pop
es
lock
js
aam
nop
hlt
lahf
mov
daa
add
and
xor
sbb
movsb
sub
loopne
add
push
sub
mov
dec
inc
inc
push
cltd
dec
jo
mov
or
cmp
inc
cmp
icebp
aas
nop
popa
or
xchg
jno
fistps
jle
aas
or
and
cwtl
cmp
nop
inc
xchg
adc
mov
rorl
movb
addb
pop
inc
pop
in
xor
sub
inc
imul
mov
jne
jge
push
adc
lcall
std
outsb
mov
arpl
inc
mov
test
mov
mov
push
and
and
setl
sbb
enter
and
stc
push
add
pop
sub
shrl
cmpsb
rcr
dec
loopne
shll
insl
mov
pop
push
sub
or
dec
jnp
frstor
in
popf
inc
push
leave
pop
add
int
push
in
lods
scas
fisubs
test
sub
pop
imul
xor
into
or
movsb
clc
xor
pop
repnz
hlt
mov
orl
or
pop
mov
cmp
push
mov
mov
shll
into
push
or
sub
push
fcompl
andl
lock
add
mov
fmuls
mov
inc
cmpsb
sub
fstps
dec
jmp
mov
fs
enter
insl
mov
int
scas
ljmp
ss
and
xor
cmp
rolb
and
jo
in
push
icebp
push
pop
sub
cmpsb
mov
push
stos
push
jmp
movsb
pop
fisttpl
inc
pop
push
or
dec
shll
iret
in
xchg
adc
sbb
loopne
mov
sbb
mov
xchg
mov
mov
sbb
sbb
pop
shrl
pop
test
test
xor
mov
and
jecxz
negl
loopne
aam
mov
pushf
cmp
jno
mov
xor
stos
loopne
ret
jno
jno
jmp
and
scas
adcl
jmp
popf
mov
sub
gs
leave
sub
repnz
mov
mov
mov
sbb
jmp
movsb
cwtl
in
add
add
or
cmp
mov
adc
enter
jmp
mov
mov
lcall
enter
push
popa
cmp
test
addl
push
inc
nop
cmp
dec
push
lds
push
xor
sbb
test
rcl
test
pop
inc
in
fs
pop
test
lods
jne
mov
out
mov
adc
cmp
loopne
dec
adc
imul
push
insl
in
dec
out
xor
dec
sarl
mov
ljmp
mov
sub
pop
push
inc
pusha
adc
dec
sarl
mov
adc
push
dec
insb
pop
bound
dec
popa
insl
xor
and
xor
dec
or
push
in
add
ret
cmp
cmp
cmp
pusha
and
test
dec
in
pop
adc
jnp
imul
insl
aaa
bound
adc
fdivs
fdivs
xor
xor
xor
aaa
rcl
iret
add
ret
cwtl
rorb
scas
xchg
inc
jno
nop
in
sbb
inc
lods
enter
cwtl
aaa
cmp
and
inc
les
jbe
adc
push
push
xor
test
mov
push
loop
pop
sub
pop
dec
fwait
mov
inc
ja
and
xchg
es
lcall
pop
ss
cmp
es
xor
mov
dec
es
mov
bound
ja
bound
mov
and
jne
cmp
ss
pusha
mov
aaa
test
movsb
aam
es
enter
aaa
pusha
ret
mov
dec
sbb
pushf
cmp
cwtl
test
ret
jno
aaa
rcl
adc
dec
mov
ss
popf
nop
fiadds
inc
enter
inc
mov
loope
repz
pop
mov
and
cmp
xchg
push
test
pop
lcall
loope
in
loopne
test
mov
pop
pop
inc
and
popa
sub
push
inc
out
repnz
or
gs
inc
aas
mov
cmpsl
icebp
dec
pop
cmp
adc
dec
mov
or
bound
outsb
je
sub
outsb
ss
sbb
int3
mov
cmc
lods
mov
pop
ja
mov
adc
sbb
pop
xchg
hlt
mov
xor
sbb
sub
insb
mov
dec
insl
cltd
movsb
in
lret
sbb
adc
xchg
push
sub
adcl
pop
data16
sub
outsb
inc
scas
fs
push
insl
or
and
inc
inc
pop
adc
dec
aam
add
adc
addb
push
lds
into
mov
scas
xor
cmp
ret
mov
jg
mov
jmp
movw
ja
dec
test
adc
nop
aas
stc
mov
jmp
adc
mov
xchg
and
enter
nop
mov
adc
sbb
pusha
dec
out
cld
fbstp
insl
mov
dec
fldcw
ss
mov
mov
push
popa
lahf
push
push
sbb
add
pop
test
push
ja
repz
dec
pop
xchg
lock
xor
fwait
push
lar
xor
js
sbb
insb
daa
scas
mov
mov
dec
popa
cmpsb
roll
xor
lods
dec
aaa
es
lods
mov
inc
add
dec
das
notl
or
jg
rcll
cld
sbb
pushf
push
lods
push
or
inc
jnp
push
or
xchg
aam
aaa
lea
mov
jo
or
and
jns
inc
ficomps
nop
inc
adc
cmp
add
sub
and
inc
jns
lea
dec
inc
ljmp
push
jmp
sub
or
adc
jge
gs
mov
popf
and
push
dec
sub
and
xchg
sub
and
inc
or
ds
xchg
or
add
ja
jmp
mov
call
jb
and
loopne
pop
jmp
mov
gs
ljmp
adc
sub
pusha
sbb
sub
aaa
mov
and
lmsw
nop
inc
jmp
mov
sbb
and
decb
mov
mov
enter
js
sub
adc
adc
xchg
sbb
and
mov
pop
hlt
cmp
xchg
cmp
pop
lock
cmp
cmp
lock
test
lds
out
out
xor
push
pop
jg
xchg
test
cmp
push
sub
add
or
orl
inc
lea
jge
add
push
jo
adc
mov
es
cmp
pop
xchg
xchg
sbb
xchg
fcoms
adcl
cmp
ss
mov
out
lds
int
orb
fadd
mov
popa
aas
jmp
xchg
sub
jmp
in
xchg
xchg
jns
or
clc
push
add
ss
adc
cmp
lods
cmc
cltd
gs
lock
addr16
pop
in
jbe
sub
xchg
dec
inc
sahf
or
and
push
sub
lock
adc
adc
into
pop
lea
mov
aas
mov
pusha
dec
xor
jb
clc
cmpl
lock
je
ja
fs
js
inc
lds
addl
imul
push
inc
mov
fwait
lds
mov
je
leave
cmpb
jns
andb
adc
adc
cwtl
and
adc
add
push
loope
push
mov
pop
xchg
rolb
pop
test
shll
mov
jns
icebp
xor
push
loopne
dec
inc
data16
lea
inc
mov
push
push
or
xchg
adc
mov
andb
out
add
ret
sti
adc
sub
xor
fsubl
aaa
pushf
mov
inc
nop
addr16
dec
adc
popa
xor
cmc
adc
inc
lret
or
insb
mov
rcrl
adc
test
sti
add
por
out
fs
xchg
or
push
movsl
jnp
pop
mov
lods
movsb
repnz
stc
or
dec
mov
add
addr16
push
shll
add
cmpsb
imul
or
clc
add
seto
pop
insl
and
pop
imul
outsl
cmp
aam
inc
sub
idivl
stos
dec
push
jle
adc
jns
shll
and
lods
push
and
push
or
aaa
incl
push
lea
adc
dec
jmp
out
cld
or
jo
out
sarb
fldt
daa
clc
sbb
rolb
cmp
ljmp
lcall
xchg
cmp
fwait
hlt
or
dec
imul
pop
je
dec
je
xor
cmp
adc
jmp
fisubs
pop
outsb
daa
sub
pop
pushl
add
xor
xor
es
fidivl
sub
and
mov
add
add
push
movsb
mov
mov
push
and
xchg
dec
aaa
pushf
pop
jno
enter
sub
das
dec
sbb
xor
cmp
ss
and
xchg
in
sbb
xor
orb
adc
ret
sub
roll
or
fcmovnbe
pop
mov
loop
add
or
adc
lea
pop
sub
addr16
je
xchg
aam
dec
pop
add
and
je
and
and
fnstcw
jae
push
sti
outsb
inc
sub
cmp
dec
xchg
or
aam
jne
daa
mov
pop
adc
test
and
outsb
push
xor
add
add
jmp
into
add
enter
xor
fists
mov
add
mov
pusha
mov
sub
inc
mov
xchg
or
dec
ljmp
jge
push
adc
mov
insl
lock
ds
xchg
or
loope
fcomps
loope
add
cmp
jne
popa
das
lcall
insl
cld
lods
icebp
fadds
iret
sub
or
pop
xchg
pop
popa
fmull
push
jmp
adcl
fstpl
fwait
ret
jo
mov
mov
mov
sub
icebp
or
sahf
mov
jmp
or
adc
test
sub
scas
scas
jmp
push
repnz
adc
pop
cmpb
pop
call
mov
add
or
mov
add
cmp
lods
pop
add
fnstenv
outsb
sub
lcall
add
pop
mov
lds
pop
pop
adc
push
mov
icebp
push
fiaddl
dec
add
sub
push
inc
push
mov
mov
mov
pushf
cmp
and
or
in
xchg
mov
or
xor
stos
push
fadd
pop
dec
or
jo
in
ss
dec
jne
adc
shll
pop
push
pop
shrl
das
loopne
sbb
push
jno
in
or
rcrl
or
push
dec
sbbl
push
jmp
mov
daa
stc
mov
cmp
jmp
push
shlb
mov
or
inc
stos
cmc
ret
mov
cmc
test
cmp
pop
xor
popa
mov
lods
xchg
call
sub
push
jmp
pop
cmp
inc
cmp
gs
test
les
push
push
iret
faddl
push
pop
arpl
add
sbb
sarb
push
add
or
jo
sbbl
js
loopne
dec
pop
push
pop
insb
inc
mov
rcll
and
movsb
jno
pop
loope
cwtl
das
or
cli
or
dec
push
pop
pop
ja
add
inc
jg
std
push
mov
mov
addr16
sbbl
bound
mov
xchg
out
ljmp
mov
push
sbb
ja
adc
cmp
ss
je
add
mov
test
pop
ja
jmp
mov
or
inc
adc
test
fwait
or
jne
jns,pt
daa
dec
enter
sub
sbb
call
es
sbb
sub
pop
or
mov
ret
mov
cmp
or
sbb
arpl
loop
or
push
arpl
jae
xor
and
jle
cmpb
cmpsl
fldl
pop
or
fwait
not
ret
sbb
mov
insl
adc
mov
adc
jae
push
fldcw
aaa
jae
pop
dec
jecxz
iret
xchg
adc
push
pop
and
fdivs
xchg
push
push
enter
loopne
cwtl
lods
xlat
and
adc
cmp
add
adc
fwait
rorb
xor
cmpsb
out
and
cwtl
ret
dec
or
sbbl
leave
mov
pop
and
repnz
mov
pop
shll
and
fst
loopne
adc
and
fcoms
xchg
sbb
pop
jne
sbb
test
pop
inc
out
jo
sbb
sbb
inc
sub
cmp
and
adcb
or
gs
add
cmp
pop
add
xor
sbb
fdivrs
clc
out
xor
add
xor
loop
add
mov
or
dec
mov
pop
repnz
cltd
cmp
xor
and
and
ss
rclb
sarl
lods
mov
scas
and
adcl
imul
ljmp
gs
xabort
xlat
dec
sbb
adc
push
xor
in
call
pop
lret
test
and
mov
xchg
dec
insl
jbe
or
add
ret
push
dec
les
mov
mov
add
std
lret
adc
add
add
sti
pop
je
sbb
lods
repnz
pop
ja
fsubrl
push
cmpl
rorl
push
sti
jne
push
ss
push
fdivrl
data16
ja
sbb
rcr
lahf
push
mov
and
mov
enter
stos
dec
sub
cmpb
pop
push
push
pop
xor
ffree
mov
push
jne
ljmp
push
inc
data16
jmp
and
fsubrp
xchg
and
arpl
pop
out
dec
call
fs
dec
jmp
sbb
dec
enter
fs
sbb
pop
dec
or
inc
insl
jo
jns
adc
dec
scas
add
inc
or
sbb
movsb
and
push
fiaddl
sbb
mov
cwtl
push
jmp
add
add
movsl
xlat
scas
or
insb
aaa
xorl
dec
andl
fisubl
pop
jle
lahf
mov
aas
push
outsb
imul
inc
arpl
cmp
or
xorb
roll
sub
inc
pop
sbb
dec
dec
aaa
or
jo
jno
add
and
inc
jle
clc
std
adc
push
sbb
popa
pushf
jl
popl
xchg
aaa
ja
or
dec
inc
push
mov
imul
fwait
add
imul
adc
mov
lret
les
add
sub
adc
xchg
xorb
jne
icebp
mov
lea
cld
clc
sub
test
cs
into
lods
push
push
mov
daa
popa
negb
mov
jo
adc
or
xchg
adc
fs
repnz
dec
xchg
cmp
jmp
or
aaa
jo
and
mov
xchg
shlb
fstl
pop
das
inc
outsb
jns
push
push
xchg
and
add
enter
pushw
or
jmp
ret
fs
cmp
xlat
adc
movl
insb
loope
push
arpl
cmpsl
jnp
pop
adc
fstp
pop
sbb
in
adc
sti
sbb
or
xor
sbb
addl
fwait
cs
fistps
mov
je
cmp
sbbb
push
sbb
mov
push
xor
add
into
popa
unpckhps
filds
insl
inc
les
sbb
mov
fisubrl
stos
mov
jmp
adc
mov
mov
sbb
mov
jo
pop
into
popf
les
sarb
nop
and
in
cmp
movsl
inc
loope
insl
pop
fld
add
insl
push
popa
add
xor
push
jno
xchg
pop
xor
inc
push
jbe
and
sub
sahf
adc
jmp
mov
loope
jno
adc
cmp
or
flds
push
mov
cmp
and
addb
or
addr16
and
es
outsb
mov
add
clc
jmp
gs
mov
mov
or
mov
push
adc
jb
cmp
in
movsb
aad
adc
mov
xchg
mov
sahf
add
cmp
jg
or
out
sahf
mov
mov
xor
sarb
sar
loope
add
dec
loopne
ds
hlt
or
lret
mov
jo
sub
push
fsqrt
or
xor
dec
jne
jmp
jecxz
arpl
mov
inc
shlb
add
lods
pop
test
int
or
sub
add
xchg
and
or
sbbl
pusha
cs
cwtl
add
xlat
movsb
aam
test
fucomp
inc
inc
inc
dec
inc
loopne
or
push
dec
outsl
mov
adc
push
out
xchg
pop
pop
inc
in
and
inc
aas
hlt
fisubrl
add
cmp
inc
lock
inc
out
mov
mov
ret
pop
and
lock
xor
popa
pop
stos
push
test
lods
and
and
cmp
outsl
sub
jae
inc
jecxz
adc
adc
loopne
in
cmpb
jne
or
sub
jbe
repz
loop
mov
push
jbe
pop
hlt
push
jl
add
and
mov
or
dec
lea
lea
pop
or
out
and
jo
idivl
inc
adc
add
mov
rolb
jge
xor
or
xchg
add
jle
cwtl
mov
mov
enter
jno
sbb
fs
mov
pop
lock
adc
xlat
cmp
iret
mov
inc
jle
pushl
dec
jns
push
stos
pop
bound
mov
or
fs
into
push
daa
inc
push
jle
sbb
xchg
or
or
inc
out
xor
pop
ds
jo
cmp
js
jge
mov
mov
inc
sbb
outsl
dec
ret
inc
fdivs
cltd
sbb
inc
fdivrl
mov
cltd
jmp
sbb
cmp
cmp
xchg
or
daa
and
lret
add
jb
or
jne
idivb
lea
mov
pop
mov
sti
aas
xorl
and
fmul
xchg
dec
sbb
push
sbb
cld
mov
push
in
movsl
lds
ficoml
cmpsl
montmul
cmpsb
ret
push
sahf
mull
ja
jmp
jg
je
aas
add
inc
cmp
jle
dec
les
rorb
sti
jge
push
adc
pop
enter
leave
adc
pop
sub
mov
mov
jae
dec
pop
test
cmp
je
mov
add
orl
es
xchg
pop
and
ret
push
jo
loop
fidivrl
xor
es
add
popa
mov
jle
fs
sbb
daa
cmp
je
orb
adc
dec
or
ljmp
jne
mov
xor
inc
loopne,pt
jecxz
cmp
xor
cmpsl
and
pusha
pop
adc
rorb
pop
sbb
adc
out
pop
ja
mov
mov
call
aaa
test
pop
ss
test
adc
mov
cmpl
mov
pop
dec
jne
cmp
cli
outsl
pop
mov
sub
mov
pop
decl
or
orl
out
push
dec
pop
pushl
jno
cmp
stc
or
and
shrb
sbb
jge
sbb
mov
jge
sub
adc
lcall
inc
jb
fdivrs
scas
mov
mov
jne
or
pop
or
or
insl
dec
or
inc
adc
or
call
scas
test
xor
push
ret
fists
push
mov
pop
mov
jmp
testb
or
inc
sbb
pop
xor
aam
fdivp
jne
cmp
in
fidivl
and
mov
pop
jbe
xor
lods
inc
cld
mov
adc
sub
mov
cmpl
pop
hlt
je
je
sbb
dec
push
das
testl
push
sub
fistps
movsl
mov
inc
fbld
cmp
dec
scas
dec
mov
repnz
lock
add
inc
ret
int3
add
int3
sti
call
sbb
repnz
xchg
xchg
xor
jb
xchg
mov
shll
fisttpll
out
sbb
sti
call
jecxz
push
add
pushf
sub
out
out
js
addr16
repnz
incl
push
add
sub
or
sti
movswl
jns
lcall
cld
in
nop
dec
das
flds
inc
lea
fstp
sub
dec
and
push
inc
ss
pop
sbb
dec
adc
and
loopne
data16
jns
rorl
test
popf
call
or
adc
push
sbb
pop
add
mov
fucomi
in
add
aad
sbb
fists
sub
mov
or
mov
jmp
inc
sbb
mov
movsl
push
push
dec
pop
ret
xor
stos
inc
cmp
sahf
add
orb
ret
push
cmp
cmp
and
test
dec
repz
dec
aam
and
pop
push
es
add
xor
add
movsl
test
inc
in
shr
dec
xor
sub
dec
mov
aad
hlt
xlat
sbb
dec
rcll
sub
lock
push
sbb
arpl
pop
add
rolb
cmp
lret
xor
fistl
cbtw
pop
cmp
adc
dec
and
or
fisttps
test
test
cltd
in
call
mov
jge
call
sub
push
sub
pushf
scas
imul
jmp
pop
xor
rcr
scas
push
mov
fs
sub
cmp
iret
aam
fcompl
mov
fdivs
popf
lock
ja
aas
mov
sahf
daa
add
sbb
fwait
and
bound
fisttpll
cmp
cmpsl
push
out
bound
fs
outsl
pop
or
jmp
pop
sub
data16
xor
pop
dec
push
or
sbb
xor
push
stos
sbb
xchg
fcomps
cmpsl
jmp
xchg
lcallw
and
adc
adc
inc
sahf
mov
or
push
bnd
jmp
cwtl
inc
adc
enter
fstpl
pop
sub
xor
add
and
xlat
stos
test
inc
mov
and
push
test
js
lcall
hlt
cltd
dec
cmp
jl
sbb
add
test
pushl
dec
xchg
xor
mov
out
insl
cmp
or
sub
dec
movsb
cmp
rorl
push
adc
sub
dec
or
andl
adcl
xor
add
flds
adc
insb
and
xchg
ds
xchg
or
pop
push
xchg
lock
xchg
stos
pushl
rclb
mov
jno
adc
add
inc
and
andb
movsb
testb
int3
mov
cli
adc
push
mov
pushl
fbld
fdivrl
stc
idivb
incl
inc
jg
inc
adc
adc
insb
pushf
xor
adc
mov
or
xor
push
pushf
push
nop
pop
jo
inc
icebp
or
sub
leave
inc
and
clc
popl
movzwl
sub
xchg
sub
inc
mov
push
xchg
and
mov
or
jo
test
and
dec
cmp
mov
fisubrs
sbb
subb
xchg
mov
shl
sub
ret
xchg
loopne
shlb
stc
jo
mov
mov
jg
and
pop
sub
jl
in
mov
xor
mov
inc
dec
jne
aas
lcall
stos
jne
repnz
mov
cmpsb
loope
jmp
inc
enter
push
int3
rolb
in
lea
scas
adcl
aam
add
jo
mov
insb
cmp
lea
lock
into
leave
arpl
pop
jb
mov
adc
push
ja
pop
divl
inc
or
lods
mov
outsl
lods
add
mov
lret
lods
push
rorb
dec
lods
sub
mov
or
or
cld
inc
out
jno
add
mov
inc
imul
xchg
mov
rolb
test
cmp
movsl
jg
movw
cmpsl
clc
dec
data16
mov
add
and
inc
ss
inc
or
mov
outsb
push
or
sub
outsl
sbb
inc
jp
inc
or
add
add
cmp
fbstp
xchg
dec
xor
sbb
ja
ljmp
and
lods
les
insb
in
cmpsl
in
pop
lahf
dec
jne
inc
loope
inc
lods
daa
push
daa
xor
mov
fwait
insl
arpl
push
xchg
push
xchg
sbb
testl
sub
jbe
and
push
ja
addr16
or
insl
movsl
mov
cmp
arpl
mov
lcall
cmovb
sub
decb
cmc
ret
in
ret
add
and
lea
mov
outsb
mov
jne
cmp
cmp
dec
clc
lea
mov
xchg
jmp
lock
mov
sub
arpl
leave
sti
jle
push
add
mov
mov
dec
lahf
inc
dec
sub
negb
test
call
clc
mov
push
ss
mov
cmp
inc
hlt
cmovns
adcl
jne
cmp
arpl
in
dec
shrl
enter
dec
jnp
andl
inc
or
sbb
jmp
pusha
mov
mov
clc
jp
lock
arpl
dec
add
inc
or
xchg
inc
imull
add
ret
orl
lods
aad
imul
mov
push
pop
push
mov
leave
xorb
arpl
pop
fldcw
inc
mov
cmp
or
dec
add
or
add
or
mov
xor
int
xchg
hlt
pop
outsl
push
xor
les
les
or
add
hlt
add
jnp
lods
dec
push
xchg
enter
sbb
or
xor
sub
push
or
cmc
add
and
push
enter
movsl
cmp
ret
repz
sub
scas
cmp
inc
cmp
addr16
test
push
inc
sub
jo
ja
sub
mov
aas
adc
aad
test
add
and
xchg
xchg
sahf
insb
and
popf
cwtl
add
or
inc
xor
sbbl
int3
and
pop
sub
and
mov
int3
jmp
xor
std
push
jl
imul
mov
subl
loope
jbe
inc
add
mov
mov
or
enter
mov
cmp
cmp
int
dec
push
nopl
push
sbb
push
pusha
adc
mov
in
sbb
push
push
dec
repz
xor
xor
add
xchg
add
inc
sub
insl
rorb
adc
xchg
fadds
mov
xor
adc
cmp
mov
cmc
iret
lds
xchg
les
dec
movsl
bound
clc
in
xchg
cmp
mov
inc
sbb
jne
imull
mov
or
orl
cmp
pop
ret
jb
or
pop
jbe
jne
jbe
mov
jle
cmp
sbb
mov
mov
pop
xchg
cmp
ret
jno
not
xchg
push
cmp
je
add
test
mov
xchg
movsb
pop
xchg
lock
cmp
shrb
xchg
cltd
cli
lret
dec
leave
mov
cltd
add
pop
push
inc
pop
pop
fs
xor
lea
sbb
xchg
shlb
es
adcb
xor
add
mov
and
test
dec
and
mov
nop
sub
cmp
scas
inc
sub
mov
aaa
add
test
pop
ss
jbe
lret
sub
adc
pop
xor
stos
push
jae
sbb
jne
inc
mov
cmpsb
popa
jl
jno
and
mov
pop
pop
mov
outsb
push
psubusw
pop
pop
mov
ret
add
test
jp
out
sbb
fwait
subl
fnsave
cmp
movlps
mov
bound
sbb
sbb
ret
push
inc
jno
aas
pop
jns
in
repnz
cmp
xor
dec
mov
jae
push
inc
xchg
push
shrb
sbb
pop
ret
stos
inc
addr16
fwait
inc
cmp
inc
xor
pop
push
xchg
pop
cltd
inc
aam
das
fwait
push
pushf
sbb
popf
sahf
lahf
fs
inc
push
addb
addl
xchg
mov
nop
inc
lea
push
jo
jb
inc
push
sbb
jne
push
sbb
js
sbb
jp
jl
fs
inc
jge
jg
nop
inc
push
pusha
popa
bound
sbbl
dec
pushf
enter
inc
aam
inc
pop
and
ror
stos
mov
xchg
and
lock
daa
out
nop
sti
push
add
aas
adc
inc
pop
pop
mov
lea
push
lahf
push
cmc
or
xchg
adc
ficoml
adc
push
in
adc
sub
lahf
je
lock
js
adc
movsl
movhps
cmp
adc
push
js
sahf
das
jg,pt
xor
iret
push
inc
push
jb
ficompl
sub
jnp
movsb
mov
push
inc
xchg
mov
mov
adc
rcrb
add
dec
sbb
mov
or
sub
inc
cld
cmp
dec
dec
inc
outsb
push
repnz
dec
sbb
movsb
mov
or
mov
aas
sub
xchg
xchg
xchg
mov
call
mov
cmp
push
mov
xchg
stos
mov
pushf
mov
test
adc
mov
mov
cmp
dec
lods
xor
fisubrs
orb
mov
popa
xor
or
repz
mov
ret
in
es
and
int
xor
rcrl
sub
jno
or
xchg
sbb
inc
inc
pop
sarb
cltd
adc
xor
std
es
or
mov
inc
push
push
jne
lahf
jno
outsb
mov
pop
cmpsb
movsl
ss
aad
lock
mov
cmp
out
sub
in
dec
jl
lcall
in
xchg
dec
fiadds
jl
call
adc
or
das
loopne
cmp
mov
movsb
pop
pop
pop
and
inc
rolb
or
jne
lea
sbb
add
out
in
sbb
xchg
cmp
sahf
add
movsb
jns
mov
loop
jno
aaa
or
gs
sbb
inc
push
fistl
xor
adc
adc
lret
xchg
mov
daa
xor
pusha
mov
xchg
inc
and
test
and
push
or
sub
fsubl
in
push
bswap
add
mov
adc
adc
mov
xchg
add
mov
das
mov
mov
imul
push
inc
daa
pop
push
aaa
js
inc
jae
inc
add
jge
outsb
jbe
pop
outsb
sbb
pop
rorl
xchg
xchg
xchg
cwtl
mov
das
inc
xor
inc
or
fs
dec
cmp
add
inc
pop
addl
mov
jno
cmp
add
dec
or
lcall
xor
xchg
xor
dec
xchg
fwait
sbb
enter
jno
push
in
nop
inc
xchg
aaa
sahf
call
insb
call
sbb
out
daa
lods
pop
mov
push
pushl
or
xor
or
jmp
cwtl
shll
cmp
repz
cmpsl
pusha
mov
dec
jne
sub
inc
add
inc
dec
popa
jecxz
test
mov
add
orl
push
inc
loopne
add
xchg
add
xchg
push
mov
mov
mov
int
push
push
enter
dec
aas
fimull
iret
and
xor
xchg
and
loope,pn
movsb
push
xor
lea
test
xor
in
cmpsb
subb
add
cmp
rolb
adc
xor
and
imul
and
scas
inc
xchg
sbbb
jns
mov
add
mov
andb
popw
insl
cmp
dec
sbb
xchg
lds
ljmp
add
mov
add
mov
cmc
pop
cmpsb
test
movsb
push
cmp
xor
mov
lea
adc
add
mov
ljmp
lret
pop
adc
xor
test
jne
cmp
jmp
das
inc
dec
xor
cmp
jle
int
arpl
rcrl
add
aad
xchg
mov
xor
push
inc
pop
xchg
mov
sub
push
loopne
insl
add
jmp
pop
add
cmpsl
lock
push
cli
jecxz
mov
xchg
or
andb
filds
cld
pop
insb
dec
mov
sbb
mov
movzwl
fnstcw
popl
lock
sub
std
lret
je
mov
dec
and
sbb
int
and
idiv
cmp
and
jne
jmp
cmp
push
dec
insb
sbb
test
out
pop
sahf
ret
lods
xchg
leave
mov
mov
roll
and
mov
cmp
xchg
xor
and
add
lsl
mov
adc
cld
and
rep
sbb
dec
rorl
push
or
push
outsb
in
jl
or
dec
sbb
fistpll
bndstx
mov
stos
mov
addl
sub
sub
dec
or
sarl
jp
iret
push
push
adc
ja
outsl
adc
push
xor
rcl
jae
or
mov
insl
std
aas
dec
pop
pop
cmp
aas
pop
je
xchg
negl
mov
lar
lock
jmp
jge
sbb
mov
cmp
jne
jbe
push
jae
es
or
fxrstor
cmpl
jg
add
insb
add
aaa
gs
ds
push
push
adc
sub
mov
cmpb
ja
jb
add
add
call
out
mov
rcll
or
adc
scas
iret
mov
idivb
jno
or
xor
xchg
jne
pop
xchg
outsl
jge
mov
sub
mov
push
enter
xchg
addb
xlat
jo
subl
mov
lock
jne
loope
stos
jne
pop
rolb
stos
insb
stos
inc
xchg
rcrb
or
xchg
sub
lods
add
movsl
mov
dec
mov
mov
fisttpl
dec
loope
sub
loop
sbb
and
push
sbb
pusha
test
pop
pushl
push
leave
and
stos
push
arpl
mov
push
pop
pop
pop
mov
or
lret
push
mov
or
xchg
clc
dec
rorb
jae
sub
mov
aam
rorb
lcall
add
test
mov
testl
in
pushf
stos
stos
negb
inc
lods
orl
xor
jl
sub
je
jge
insl
adc
mov
jmp
adc
jo
daa
mov
adc
mov
add
xchg
imulb
adc
and
movb
push
jge
mov
jb
pop
mov
dec
dec
and
cmp
xor
adc
in
mov
dec
xlat
lcall
push
movsl
jle
adc
jmp
popf
insl
cmp
push
daa
xlat
or
out
xlat
push
ret
mov
dec
or
lods
cmp
mov
stos
mov
test
cmp
movsl
ja
fldcw
test
mov
fsubrl
add
fnstenv
ss
push
test
sub
je
xlat
mov
popa
shrb
lods
fistpl
subl
orl
push
sbb
aaa
or
enter
out
sub
enter
pavgw
bound
in
push
xchg
icebp
divl
loopne
mov
or
dec
mov
or
bound
ret
pop
scas
fxsave
add
dec
push
or
mov
or
or
dec
je
jmp
nop
cltd
loope
mov
adc
jg
jbe
sbb
jmp
or
jmp
fs
movsb
nop
mov
mov
add
adc
xchg
ljmp
push
inc
add
push
jmp
xor
pop
nop
loopne
test
add
sbb
push
outsl
jecxz
cmpb
test
and
dec
add
cmp
stos
jg
fidivrl
mov
cmc
icebp
add
mov
cmpsl
xor
pop
decb
and
test
adc
cmp
scas
push
xor
add
mov
sub
sbb
jp
sbb
fs
and
and
clc
sbb
jmp
or
ret
les
loopne
je
clc
aas
jne
xchg
cmp
ret
or
cld
xor
iret
lcall
cmp
dec
out
xor
push
add
sbb
push
or
jle
test
dec
add
add
popa
cmpsb
imul
push
lahf
stos
les
inc
fwait
int3
flds
sub
mov
dec
loopne
movsl
xor
add
lods
dec
xchg
cwtl
data16
dec
fildll
shr
ds
psubusb
jo
pushf
lea
das
add
sbb
add
add
outsl
or
inc
adc
mov
sub
fcmovu
rorb
add
or
sbb
xor
outsl
inc
ffreep
stos
inc
loopne
or
jno
jo
lds
imul
or
mov
imul
lret
mul
scas
in
fisubrl
fstps
sub
sbb
inc
xchg
test
jnp
xor
inc
aaa
inc
or
cmp
out
rcrl
or
aaa
arpl
gs
lret
add
jmp
rolb
add
test
cld
jecxz
and
pop
xchg
xchg
aaa
or
cmp
push
push
gs
movsl
movl
bound
imul
inc
dec
push
mov
insl
shrl
cmp
outsl
xor
sub
jecxz
mov
cmpsb
push
cmc
pop
pop
sbb
sub
and
jmp
pop
jmp
sbb
push
add
subb
jmp
or
xor
xor
shl
lea
or
and
xchg
cmpb
add
call
jo
xor
jg
clc
in
je
adc
add
test
fsubr
pop
or
jae
scas
xchg
pushl
pushl
jo
insb
pop
mov
shrb
popa
aam
js
pop
push
hlt
dec
add
ja
or
add
push
jno
cmp
pop
mov
ret
lea
les
adc
in
xchg
nop
mov
or
dec
add
cmp
mov
push
add
or
scas
inc
mov
adc
cmpsb
add
or
or
lret
ds
mov
jg
loopne
aaa
add
outsl
sbb
divb
popf
fyl2xp1
sbb
cmp
push
loopne
mov
inc
adcb
loopne
push
mov
or
test
fs
std
popa
into
cmp
mov
int
scas
sbb
mov
pop
mov
loopne
add
div
cmpsb
adc
and
mov
jl
fildl
je
addr16
push
dec
push
dec
pop
push
dec
or
sub
and
add
xor
invd
dec
push
gs
imul
pop
mov
int3
xor
inc
fisubrs
sbb
fs
push
enter
jne
popa
insl
xor
imul
xor
inc
sub
pushf
adc
gs
iret
mov
jne
outsb
xor
jne
xor
jae
sbb
into
adc
sbb
stos
add
jne
aam
pop
dec
ror
add
pushf
cwtl
mov
or
add
out
inc
pop
inc
inc
notb
dec
and
adc
inc
gs
out
xchg
cmp
or
inc
outsb
jne
subb
add
mov
nop
insb
data16
xchg
outsb
imul
adc
adc
mov
and
pop
lret
clc
repz
dec
outsb
push
insb
stc
cmp
jmp
fcoms
adc
jle
jae
sbb
outsb
or
adc
mov
mov
mov
sbb
pop
arpl
add
jno
adc
jmp
je
insb
cld
mov
incl
dec
sbb
scas
cmc
sub
adc
leave
adc
add
daa
aaa
inc
emms
outsb
addr16
stos
push
sub
sti
shrl
inc
cmp
in
pop
clc
dec
jo
mov
jne
push
orb
out
int
jnp
mov
stos
pop
push
mov
prefetchnta
or
enter
pusha
or
enter
push
xor
and
and
and
jl
sub
addr16
add
or
dec
in
in
sbb
add
push
inc
insb
imul
dec
ret
clc
xor
pop
dec
gs
and
jns
sbb
dec
push
in
enter
inc
aas
jae
dec
mov
xchg
or
inc
imul
insb
ss
mov
test
add
imul
push
sbb
adc
dec
outsl
sbb
es
fcomps
sub
push
pop
cmpsb
dec
outsb
insb
jns
xchg
dec
dec
rorl
mov
ja
xlat
and
aaa
push
push
je
or
int3
into
ds
insb
or
cmpsl
or
dec
imul
mov
mov
test
or
ja
mov
test
and
test
pop
lods
add
gs
add
shll
fists
fimull
adc
popa
ss
fisttpl
jns
sub
jae
movsl
mov
outsl
aam
jne
sub
xorl
inc
adc
inc
jbe
dec
or
push
es
xor
adc
sub
and
add
ljmp
sub
popa
rorl
cmp
ds
mov
and
inc
leave
lds
xor
scas
xchg
mov
sub
daa
sbb
mov
pop
shrl
or
inc
insl
jbe
outsb
mov
scas
aas
xor
mov
scas
int3
sub
enter
mov
or
jmp
pusha
add
mov
lret
cmp
test
push
inc
and
add
inc
or
fdivs
aas
cmpsl
xchg
in
dec
cmp
mov
xor
jge
shrl
iret
dec
imul
es
inc
int
scas
in
adc
xchg
in
adcb
imul
and
push
inc
sarb
pusha
xor
mov
push
mov
adcl
push
ss
outsb
cld
ds
xchg
add
les
idiv
jo
push
dec
jb
or
mov
shll
daa
adc
mov
mov
outsl
mov
enter
int
stc
mov
pop
pop
out
dec
jmp
add
push
mov
add
and
mov
or
outsl
add
mov
ret
fdivrl
dec
mov
jb
pop
decl
mov
add
dec
mov
sub
xchg
or
dec
dec
push
cmp
xor
loop
jecxz
in
nop
mov
sahf
out
pop
pop
loope
push
sbb
insb
or
lods
jg
nop
insb
nop
daa
ret
psubsb
pop
shrb
out
xchg
jl
sbb
lock
adc
imul
push
std
popa
imul
cltd
imul
imul
loopne
xor
mov
les
pop
push
add
adc
push
or
shl
inc
jno
push
sub
add
xor
xlat
test
scas
es
xchg
jmp
mov
rcl
add
sar
loopne
call
call
lcall
mov
out
push
cmpl
xor
or
lret
movsl
cmp
fs
pusha
rorl
loopne
dec
cmp
in
adc
inc
ds
jbe
push
ffree
rolb
sbbb
or
lds
adc
das
xchg
push
add
xchg
les
icebp
dec
xor
pop
xorb
andl
or
out
xor
clc
pusha
adc
pop
xchg
mov
inc
xchg
les
cld
addr16
push
fdivr
ficoml
cmp
sahf
push
push
cld
outsl
aam
and
add
filds
andps
insb
dec
ficompl
adc
dec
aas
insl
ja
pop
sub
inc
imul
pop
fisttpl
dec
clc
xor
pop
or
add
outsl
test
insb
insl
jo
lock
add
inc
addr16
or
cld
add
sub
add
fildll
jno
shrb
std
cld
sti
andb
adc
and
addb
shlb
movsb
pop
in
cmpsl
xchg
dec
rorl
aam
test
dec
sbb
add
dec
in
or
push
incb
xor
push
cmp
xor
jns
sbb
mov
pop
cmovns
inc
fs
jo
sti
ret
decl
fdivs
pushf
jae
push
rclb
sahf
cmpsb
cmp
pop
shl
sbb
enter
mov
pop
cmp
add
push
adc
js
mov
mov
les
xchg
call
push
adc
inc
lods
adc
sbb
mov
adc
int3
push
lock
mov
fwait
in
pop
xchg
pushf
or
repz
pop
ds
pusha
push
mov
adc
dec
push
or
aas
adc
imul
xchg
or
scas
pop
sbb
ljmp
es
mulb
enter
mov
pusha
xor
enter
inc
push
pop
cld
sbb
xor
mov
cmp
pop
lods
sbb
sbb
out
jb
sbb
pop
mov
insb
ficomps
pop
pop
sbb
cwtl
add
pop
xchg
sub
push
loopne
pop
imul
push
xor
test
mov
sbb
jbe
mov
jmp
ja
lret
mov
repnz
lods
out
sbb
outsl
mov
push
fs
pop
pop
push
rorb
cs
jbe
in
ljmp
inc
sub
or
lret
pop
ss
and
pop
xor
and
es
and
push
dec
xor
in
out
or
in
xchg
daa
sub
mov
push
imul
adc
in
pusha
int3
out
adc
sbb
sbb
pushl
and
push
pushf
adc
xchg
fdivr
sub
xchg
dec
repnz
and
and
repz
pop
int
int
mov
pop
daa
xchg
insl
in
in
les
shr
adc
dec
daa
imul
or
sub
loopne
mov
andb
inc
incl
stc
nop
push
pushf
sub
push
inc
push
mov
cmc
out
mov
and
xor
xor
adc
adc
sbb
xor
adc
and
mov
push
add
mov
aam
in
adc
int3
cmpsb
into
sbb
mov
imul
cmpsb
imul
mov
adc
add
mov
and
push
xor
sbb
insb
lcall
push
nop
fsubs
xchg
xchg
dec
push
pusha
and
lcall
mov
sti
nop
hlt
into
add
or
stos
ljmpw
loopne
push
mov
pop
and
add
in
sarb
sub
cld
sub
and
pop
push
pusha
add
js
jle
andl
out
es
add
stc
ss
leave
mov
push
fs
inc
xor
int
insb
push
pusha
cmp
ds
mov
mov
inc
gs
fwait
in
dec
inc
rcrl
daa
push
inc
rorb
pop
lock
ss
rep
mov
mov
lods
enter
mov
rcrb
add
iret
movsl
push
jmp
adc
unpcklps
out
ds
in
addb
adcb
mov
jae
mov
sub
and
mov
das
jmp
and
xor
jno
fcomps
mov
outsl
mov
dec
pop
gs
dec
enter
neg
jnp,pn
adc
inc
aam
dec
rorl
sahf
adc
int3
jns
xchg
xchg
jno
jg
shll
mov
xchg
pop
sbb
jne
in
inc
int
dec
addb
mov
pushf
stos
jbe
ss
fs
fidivl
push
sbb
mov
hlt
lds
xchg
jl
inc
pop
mov
inc
mov
es
push
or
push
push
push
dec
mov
imul
jbe
push
pop
push
pushf
push
lock
stos
push
and
stos
adc
add
sar
cli
stc
clc
push
push
push
push
push
push
pop
icebp
push
shll
add
lcall
loopne
hlt
sub
pop
imul
add
lock
push
or
nop
pop
and
rorl
push
popa
cmp
adc
or
jecxz
cmp
or
or
sahf
cmp
add
addr16
mov
pusha
aam
ds
pop
pop
loopne
push
dec
mov
pop
cld
push
rolb
lea
mov
cmpl
imul
in
add
rorb
aad
fcmovb
es
mov
xchg
push
push
pop
leave
mov
mov
inc
adc
js
pop
sbb
loopne
imul
push
mov
push
cmp
jmp
cmp
or
pop
or
ss
sub
adc
adc
aam
stos
clc
push
cmp
sub
sbb
jmp
vmwrite
lea
lahf
sbb
inc
shl
mov
add
sbb
add
lea
insl
aad
dec
inc
fisttpl
daa
dec
mov
inc
mov
jne
jmp
fsts
inc
in
push
enter
jo
aas
pop
test
idiv
or
outsl
jne
xlat
and
scas
add
jo
aas
pop
and
leave
cmp
in
mov
jg
fistl
push
pop
sbbl
rcrb
push
mov
dec
dec
arpl
pop
mov
and
addl
outsl
adc
je
scas
xchg
or
lods
aas
movsb
jmp
lret
mov
mov
push
lcall
test
loopne
lret
jo
rolb
rol
mov
jne
adc
insl
ja
and
jmp
sbb
adc
jb
add
push
or
mov
sub
jmp
es
insb
mov
insb
add
pop
or
sbb
leave
or
lock
or
or
pop
mov
out
pop
jge
adc
std
lahf
out
and
mov
add
pop
bound
sub
or
push
ret
lahf
rclb
push
mov
add
into
pop
sbb
clc
test
fwait
and
addr16
push
sub
out
jge
rclb
rcrl
sbb
xlat
jo
xchg
lcall
mov
shlb
inc
jae
or
push
inc
or
movsb
ret
mov
cmp
add
mov
add
pop
add
repz
sbb
lcall
xor
mov
cwtl
jge
or
inc
mov
or
pop
mov
adc
ljmp
dec
sbb
sbb
popf
and
fs
mov
cld
fcom
je
mov
cmp
jmp
mov
fdivs
or
and
jne
adc
and
or
es
cld
add
movsb
or
add
call
stos
fsubrs
imul
ss
sub
das
ss
pop
mov
jae
push
sbb
xchg
jecxz
and
sbb
imul
rcrl
and
popa
add
dec
roll
clc
push
fwait
test
dec
cli
lea
push
mov
leave
pop
outsb
mov
shl
dec
shlb
movb
imul
push
std
cmc
ret
subb
mov
shrl
adc
out
inc
dec
jne
cwtl
add
mov
inc
fwait
push
adc
xchg
outsb
lds
inc
add
shll
sbb
jg
ja
cmp
xchg
inc
rcr
xchg
sub
xchg
mov
dec
cmpb
dec
popf
cmpsb
sti
imul
fsts
cmp
leave
push
mov
fucom
lea
lahf
push
pop
and
add
outsb
enter
hlt
push
in
push
mov
adc
jo
sbb
add
push
rcrb
mov
movb
add
xchg
xchg
ficoms
sbb
cmp
cmpsb
in
loope
xor
inc
daa
add
or
jl
mov
call
add
xor
xorl
or
imul
aad
loopne
imul
icebp
pushf
popf
mov
cmp
push
xor
cmpsb
jecxz
mov
jecxz
dec
call
sbb
push
add
test
inc
call
mov
out
ficoms
fs
or
inc
aaa
lret
test
lret
out
pop
pop
aaa
daa
jge
outsb
mov
mov
sbb
in
int
sbbl
or
mov
or
pop
xor
cwtl
cmp
sub
pop
and
pop
mov
dec
xchg
or
xchg
mov
pop
and
in
mov
enter
xchg
shll
cmp
pop
andb
or
or
sbb
shll
lea
xor
and
xor
loopne
adc
shr
inc
loope
jno
xchg
nop
jne
or
adcb
cmpsb
lret
add
jae
pushf
mov
out
inc
pop
je
sub
dec
pusha
adc
sbb
imul
push
sub
mov
fs
or
fisubl
inc
adc
or
xchg
and
bnd
mov
orb
pop
mov
aas
jecxz
or
jbe
mov
dec
lea
loope
inc
fcmovb
jno
push
sahf
fnsave
and
mov
int3
dec
gs
mov
movsl
loope
push
stc
and
xchg
mov
xor
aaa
out
and
jmp
jmp
int
cmp
adc
adc
inc
out
or
rcrl
add
adc
cmp
and
fistpll
enter
test
test
add
xchg
lret
mov
rorl
sbb
into
mov
sbbb
adc
mov
push
in
mov
call
cmp
sarb
add
adc
aas
das
or
pop
inc
addb
jae
addr16
jns
jecxz
add
or
or
stos
xor
sbb
xchg
outsb
roll
mov
lods
loopne
outsl
stos
shll
push
enter
leave
stos
in
popa
and
mov
loop
push
cltd
or
and
rorb
add
xor
inc
pusha
outsb
testl
in
pushw
sub
or
psubsw
pop
inc
mov
popa
popa
add
push
dec
cld
mov
rol
jmp
ret
repz
push
insb
sarb
pushf
sub
push
cmp
add
pop
adc
test
mov
mov
jns
sub
mov
addb
pop
add
adc
dec
mov
inc
pop
mov
jbe
imul
adc
ja
xor
mov
shlb
fiadds
and
int
rcll
sbb
pop
cwtl
or
call
rclb
pop
xor
sub
xchg
push
xchg
adc
cmpl
cwtl
addb
pop
dec
pop
xchg
push
mov
adc
xor
jge
flds
push
xchg
int
pop
push
jne
dec
popa
in
out
xchg
lods
cmpsb
mov
xor
aaa
add
cmp
adc
pop
lea
data16
test
pop
adc
add
outsb
xchg
flds
fdivrs
mov
rorl
xchg
mov
insl
aaa
cs
arpl
pop
mov
and
test
sbb
out
dec
jo
fwait
negl
push
fstl
outsl
sub
loope
test
leave
mov
mov
sahf
movsl
push
or
pusha
sub
mov
jnp
enter
xchg
out
cld
add
aam
jbe
call
je
cmp
push
ljmp
dec
orb
ret
inc
imul
movzwl
cvtdq2ps
dec
sub
aam
pop
fdivr
inc
push
add
call
aaa
or
dec
fmul
ret
and
ss
add
addr16
shlb
xorb
scas
jmp
in
pop
push
push
movsb
imul
jmp
movsl
orl
das
adcb
inc
push
cmp
test
sbb
idivl
inc
and
cmpsl
push
or
mov
clc
rcrb
mov
shrl
or
sbb
adc
cltd
in
jmp
push
or
out
rorb
cmp
mov
pop
xor
jbe
lock
push
das
roll
nop
int3
sbb
ljmp
and
test
or
outsb
mov
je
push
bound
push
push
and
cmp
hlt
pop
cmp
inc
fcoms
cmp
xor
adcl
out
sbb
mov
cld
hlt
enter
cmp
clc
pop
rcl
dec
sub
fisttpll
jmp
popa
mov
dec
mov
std
repnz
jmp
pop
mov
xchg
sbb
sbb
jae
cmp
je
cmc
sbb
cmp
incl
or
aad
test
fadds
imul
adc
sub
ljmp
push
mov
pop
adc
lods
nop
sahf
lret
cwtl
dec
pop
imul
jge
sub
shl
loop
adc
or
repnz
add
lds
adc
movsb
rclb
adc
cmc
jbe
and
xchg
xchg
shll
fisttpll
sub
jb
into
js
enter
add
or
adc
fnsave
jno
dec
in
sub
push
addl
iret
fimull
jl
or
mov
bound
mov
movq
sub
insl
fcompp
test
fidivrl
mov
cmp
jp
imul
and
jmp
and
lods
addr16
jmp
xor
das
and
inc
call
inc
cmp
jge
and
adc
jne
sbb
fcomps
jnp
decl
std
test
mov
push
scas
or
mov
ret
pop
jg
dec
jecxz
adc
divl
and
mov
call
cmp
and
mov
icebp
fnstsw
sub
sub
aaa
inc
stos
int3
add
cmp
je
inc
cmp
push
mov
sbb
mov
rcll
imul
lret
pop
adc
adc
cmpsb
inc
out
les
aaa
sbb
xchg
out
or
add
loopne
lock
xchg
add
fadds
aas
inc
shl
xor
sub
sbb
testl
add
jle
xchg
loopne
mov
push
jle
faddl
or
inc
fldl
sbb
lea
adc
sub
jg
dec
pop
mov
lock
mov
add
or
push
mov
pushf
nop
aaa
jp
jo
lods
es
inc
pop
push
or
inc
and
pop
inc
xchg
add
sbb
push
jmp
loopne
pop
or
cmp
sbb
aad
lret
push
aas
insb
xchg
nop
lcall
and
daa
jmp
add
ljmp
pop
jl
jmp
dec
add
add
rolb
pusha
mov
nop
scas
mov
pop
mov
mov
inc
je
aaa
or
insl
mov
bound
add
lds
icebp
pop
dec
sub
popf
add
in
xor
pop
sbb
push
cmp
jne
sbb
sbb
aad
lea
cmp
das
es
es
push
sar
test
push
mov
pop
dec
mov
mov
rorl
loope
repnz
and
pop
shl
jae
inc
lcall
repnz
movsl
ljmp
add
mov
es
loop
movl
jecxz
add
pop
push
pop
and
imul
out
iret
xchg
mov
mov
bound
inc
sub
fwait
cmp
xchg
cmpsb
pop
ljmp
lahf
test
fs
or
movsl
fmull
cmp
cmpsb
mov
andl
push
adc
fdivrs
inc
lret
mov
xchg
leave
push
inc
enter
pop
mov
out
stc
loope
bound
mov
fldcw
or
mov
or
mov
inc
cmc
popa
shll
pushf
sbb
xchg
subb
mov
cwtl
mov
aas
xor
and
or
sbb
jle
pop
adc
adc
imul
daa
sub
shl
testb
nop
imul
in
inc
sub
pop
dec
scas
clc
ror
test
xchg
pop
fisubl
inc
push
add
mov
out
mov
push
mov
inc
inc
pop
or
repnz
mov
rclb
add
sbb
mov
out
sub
ret
mov
lock
dec
dec
pop
sar
in
pushf
adc
movsb
inc
sbb
les
in
cmp
je
mov
jecxz
bound
and
and
cld
inc
add
lock
es
inc
in
dec
mov
insl
dec
or
rcl
adc
inc
sbb
int3
push
add
xor
cmp
jae
fs
je
mov
adc
btr
cmp
jl
enter
inc
adc
jmp
ret
push
jae
mov
aam
cltd
add
inc
sub
leave
jnp
dec
and
sbb
ret
popa
mov
adc
je
sbb
mov
cli
pop
ja
mov
fwait
xlat
jb
xchg
add
outsl
ret
jnp
mov
inc
cmp
jne
inc
decl
jne
ret
mov
mov
pop
int3
arpl
xchg
push
ret
push
and
or
dec
in
mov
stc
shl
je
and
xchg
push
jb
pop
and
pop
stos
pushf
fmul
jae
in
lock
test
sub
cltd
push
pop
mov
sub
push
cmp
mov
int
out
ljmp
insb
add
jo
pop
push
mov
sub
loop
lock
rol
mov
pusha
fiadds
sbb
pop
cmpsb
je
dec
sub
adc
cwtl
cmpsb
push
jmp
mov
pushf
cld
sbbl
add
or
je
pop
lret
mov
add
push
leave
sahf
inc
movsb
fstpt
mov
out
daa
adc
inc
add
sub
aad
lock
and
lods
xchg
rolb
aas
mov
mov
mov
dec
adc
cmp
fs
in
lock
or
inc
testb
je
gs
pop
hlt
push
push
and
push
sub
daa
push
push
adc
jmp
adc
or
adc
jne
mov
pop
xchg
mov
fwait
or
fisubrl
movsb
in
in
dec
cld
sbb
lock
mov
sub
mov
ret
subb
popa
filds
push
std
or
call
sbb
cmpl
popf
orb
push
mov
sbb
test
mov
xchg
lret
ficoml
push
ret
xchg
xlat
mov
test
ficoml
sti
push
jb
sarl
data16
in
mov
rorb
cmp
xchg
cmpsb
xchg
adc
adc
add
xor
mov
and
jnp
cmpb
in
jmp
jmp
in
sub
cmp
mov
aaa
dec
or
jae
and
data16
and
lock
xchg
or
dec
int
movsb
pop
mov
das
sarb
mov
add
pop
or
lock
jno
into
jne
push
sbb
adc
and
dec
add
or
in
out
ret
movsb
cmp
adc
mov
lea
mov
pop
daa
dec
outsb
fptan
add
test
pop
sbb
aam
and
jmp
jl
inc
mov
xchg
test
push
lret
je
pushl
add
xchg
movq
lcall
and
js
inc
out
int3
pop
rorb
daa
inc
or
sub
mov
fstps
jno
call
inc
imul
jp
push
or
int
mov
cmp
inc
imul
or
insb
sbb
cmp
or
jg
paddw
and
mov
add
out
ja
sbb
pop
cmp
adc
push
add
and
add
jb
adc
jne
lcall
add
or
inc
in
leave
adc
and
inc
adc
add
xlat
icebp
and
pop
cli
push
pop
dec
psubb
mov
aaa
and
adc
add
dec
jno
push
adc
or
cmp
loopne
pusha
xchg
out
push
push
pop
ss
mov
xor
sub
mov
and
in
popa
adc
dec
or
xor
hlt
insb
and
xor
sbb
cmpl
inc
out
mov
dec
hlt
hlt
mov
call
lock
adc
fs
cmp
jne
out
lea
aad
dec
jne
adc
or
and
shl
jmp
scas
mov
pushf
push
and
fwait
xor
mov
cmp
xor
add
adc
decl
cmpsb
les
adc
insl
mov
lret
jne
and
into
pop
push
add
mov
in
cwtl
mov
pop
loopne
cmp
jmp
fldcw
sub
xchg
adc
add
jmp
and
pop
rorl
jmp
jb
pop
ret
or
pop
daa
cmc
mov
or
shr
fldenv
inc
aaa
jle
sbb
mov
add
pusha
add
sub
testl
or
fmuls
cmpsl
cmp
inc
pusha
popa
push
inc
and
stos
rorl
and
repnz
xchg
add
cmc
mov
cmpb
out
push
push
lcall
and
sbb
sbb
sti
test
cmp
ss
sbbl
lds
sub
leave
outsb
aaa
orb
add
arpl
add
hlt
clc
insl
repz
jbe
inc
add
pop
inc
xchg
xchg
gs
push
push
add
add
cmp
jae
stos
inc
or
fbld
add
and
xor
add
mov
js
jecxz
sub
sbb
ja
and
daa
es
dec
clc
mov
or
ret
jbe
repz
adc
jecxz
sbb
mov
xchg
pop
or
xchg
cmp
pop
add
dec
or
nop
adc
add
push
rolb
dec
xor
cvttps2pi
add
xchg
in
mov
push
cltd
dec
in
lahf
aam
sub
mov
lahf
and
mov
ds
fnstcw
pop
add
jno
cmp
push
sarb
pop
in
dec
cmp
inc
shll
sub
sbb
adc
in
out
mov
mov
addr16
inc
xlat
and
in
iret
popa
or
aaa
inc
push
outsb
add
shrl
cmp
pusha
sbb
ret
add
mov
jns
pop
hlt
adc
leave
and
enter
jb
subl
xchg
xor
and
and
or
mov
cmp
aas
jo
rorl
mov
cmpsb
fldenv
jmp
shlb
xor
or
imul
add
add
add
push
cmpsl
mov
inc
nop
lock
push
stc
mov
adc
ds
stos
push
fdivs
inc
xor
stc
int3
fnstenv
cli
mov
adc
inc
ret
push
sti
add
cltd
xor
and
out
cwtl
gs
popa
lcall
pop
and
imul
jne
sbb
sub
test
out
dec
es
cmp
call
push
mov
pushf
outsl
jae
sarb
loopne
add
xchg
dec
or
inc
jmp
out
add
cli
rcrl
jbe
nop
dec
gs
mov
hlt
and
mov
out
scas
test
mov
push
xchg
dec
addr16
push
pop
mov
lea
sti
cmp
pop
stc
mov
mov
and
xor
jns
adc
cmp
push
xor
das
mov
sarb
andb
pop
loop
pushf
add
les
scas
aam
sub
inc
jne
ss
mov
jne
lcall
pop
outsl
lcall
pop
or
test
or
incl
xchg
adc
cmc
cmp
xchg
popf
jmp
pushf
in
xchg
inc
cmpsb
loopne
inc
mov
xor
mov
les
push
movsl
jne
mov
data16
or
mov
ret
xchg
sbb
scas
loopne
pop
lea
out
nop
loopne
loope
and
rorb
or
adc
or
inc
lea
jne
xor
adc
ret
loopne
andl
in
push
pusha
add
call
push
lds
dec
lods
in
sub
and
loopne
push
sub
xchg
sub
add
shrb
out
or
push
test
mov
xor
jne
lds
aas
mov
scas
pop
xchg
adc
xchg
jo
mov
inc
sub
sub
xchg
adc
mov
add
pop
negb
gs
xor
pop
cmp
mov
hlt
addb
push
adc
xor
and
xchg
clc
mov
js
hlt
out
dec
add
cmp
loopne
sbb
or
push
mov
push
ljmp
push
push
incl
in
and
adcb
int3
xor
sbb
and
ret
and
cmp
xor
in
dec
je
cmp
mov
sbb
es
addr16
shl
mov
adc
jne
xchg
repnz
fsubs
les
xchg
fildll
jecxz
bound
ret
sub
scas
loop
loope
flds
out
or
aaa
lods
and
pop
jbe
or
or
mov
adc
aas
xor
scas
push
lret
lret
jno
push
test
xor
pop
out
test
xchg
jo
shrl
or
std
push
add
xor
push
pop
ret
push
adc
addr16
pop
pop
add
decl
ljmp
push
jg
cwtl
or
push
scas
sub
or
or
adc
lahf
inc
and
lods
xchg
inc
sbb
pop
add
and
inc
cmp
fs
adc
pop
leave
clc
pop
dec
push
or
inc
ret
fs
jmp
add
push
and
or
cmp
pop
sub
pushf
loope
adc
xor
gs
scas
push
sub
jmp
sbb
hlt
add
mov
adc
daa
lods
xor
sub
sub
and
subb
vmovss
inc
dec
aad
int
scas
repz
xchg
imulb
push
out
xor
dec
xor
adc
push
cmp
sbb
out
sub
push
ret
call
test
inc
mov
mov
mov
cli
adc
push
mov
add
movsb
dec
shlb
mov
lea
subl
and
scas
xchg
mov
out
adc
mov
lds
adc
mov
or
push
ret
rcl
out
insb
loopne
ret
lods
inc
jmp
flds
pop
jp
cmpsl
mov
xor
sti
and
adc
pop
push
adc
sti
jo
imul
or
and
dec
popl
jne
adc
push
jb
adc
cmpsl
push
inc
mov
fisttps
dec
xlat
adc
mov
xchg
or
sbb
xlat
hlt
dec
and
mov
xor
repz
add
sub
mov
ds
imul
call
push
cmp
mov
inc
adc
pop
jmp
jne
pop
pop
nop
adc
push
add
push
fbld
popf
pop
adc
std
dec
sub
jb
jmp
cmp
push
stos
jnp
jno
push
test
or
aad
or
test
rorb
loope
pop
sbb
sti
adc
mov
cmp
jne
mov
push
inc
cmpb
shl
fildl
test
jne
push
aas
test
pop
mov
push
and
ljmp
add
out
das
add
das
push
fstpt
xor
cmp
jne
testb
orb
sbb
mov
mov
add
jge
out
js
pop
scas
mov
cmp
pop
xor
jg
add
push
gs
mov
repnz
add
and
ret
test
jmp
or
mov
cmp
adc
ret
imul
mov
add
push
bound
mov
stos
fcoms
add
or
mov
lock
pop
es
jle
mov
stos
test
shrl
mov
test
mov
inc
or
out
sbb
mov
and
jbe
jnp
leave
and
and
sub
pop
es
cs
pop
sar
xor
xchg
test
adcb
pop
mov
sbb
pop
mov
stos
cmpsl
adc
test
lea
inc
out
out
fwait
data16
leave
add
lock
or
xorl
or
pop
or
jnp
add
pop
mov
push
pop
cld
rorl
mov
sbb
dec
push
pop
add
dec
add
sbb
dec
adc
lock
insb
lods
and
mov
stos
push
cmp
aas
mov
jmp
sub
lock
addr16
lea
test
dec
xchg
jmp
or
iret
es
jle
xor
dec
and
movsb
mov
iret
or
and
stos
mov
push
jl
adc
aas
aam
pusha
jl
fildl
dec
push
sbb
repnz
shufps
add
mov
mov
or
push
xor
sbb
ja
cwtl
mov
push
or
or
daa
mov
xchg
adc
cmp
or
mov
test
xchg
xchg
jle
fsubrs
cmpsl
push
aas
xor
fbstp
cmp
orb
xchg
and
fcom
mov
jno
and
push
jge
and
mov
xor
dec
stos
mov
sub
mov
push
jb
lock
xchg
fwait
xchg
add
shr
pop
cltd
inc
inc
and
jnp
or
push
jns
inc
and
jg
pop
inc
pop
test
imul
jg
pop
lock
mov
jp
add
mov
clc
jle
fidivrs
pop
inc
pop
fistpl
inc
rorl
jl
pop
inc
popa
or
or
pop
ficompl
adc
je
pop
or
xchg
nop
andb
jmp
loope
mov
sahf
stc
lret
or
cwtl
pop
mov
popa
mov
xchg
inc
push
jge
push
xor
wbinvd
add
push
add
add
arpl
lock
sti
and
dec
cmp
mov
cltd
adc
add
popf
lods
test
or
sbb
add
inc
ss
cmp
daa
fsubrs
jno
push
lret
rol
add
into
jne
fwait
call
subb
inc
scas
mov
pusha
test
aaa
mov
cmpsb
push
and
shll
inc
inc
fidivl
pop
adc
testb
outsb
or
and
add
imul
add
dec
fucomip
xorb
iret
or
mov
jmp
mov
scas
call
aas
cmp
xchg
sbb
cs
and
fiaddl
or
mov
rorl
sbb
add
sahf
jne
sbb
add
outsb
and
push
nop
pop
divl
jne
mov
or
xchg
incb
push
out
and
pop
or
xchg
pop
aad
jecxz
rcl
add
dec
fcoml
mov
mov
jl
inc
pop
repnz
mov
mov
add
cmpb
pop
adc
aas
fmuls
int3
rolb
push
lcall
js
xchg
jle
mov
faddp
enter
sub
jne
xor
int3
sub
mov
or
out
add
push
push
add
add
and
rorl
jmp
xor
sub
movsb
mov
add
out
lods
imul
imul
mov
cltd
sub
inc
mov
cmpl
fistps
mov
pop
pop
jo
call
aam
clc
fwait
mov
xchg
call
cmp
xlat
aam
adc
test
pop
mov
mov
push
pop
mov
push
or
repz
movsb
add
sbb
in
fstpl
imul
add
add
sarl
xchg
jo
out
ret
add
in
fisubs
imul
push
fs
loope
jl
push
cwtl
test
test
sahf
dec
push
push
dec
outsb
mov
xchg
add
dec
call
dec
icebp
mov
ret
xor
pop
mov
lock
push
inc
enter
inc
sarb
pop
lea
and
sarb
in
lcall
test
in
mov
fucomp
add
je
jmp
cmp
pop
push
pop
jge
leave
and
xor
loopne
faddl
push
leave
fsubl
rolb
sbb
ror
lcall
inc
push
sub
xlat
rclb
jo
mov
clc
mov
jae
xchg
jnp
and
jmp
testl
pop
cmp
lds
or
xor
pop
stos
push
jae
dec
mov
adc
je
dec
or
adc
fstps
add
add
sbb
push
aad
cwtl
inc
ja
mov
and
mov
or
ljmp
adcl
movsb
rorb
push
add
fistpll
push
and
stc
ss
add
dec
jb
inc
sub
mov
icebp
cmovnp
jnp
add
add
sbb
lcall
jg
lea
idivl
or
roll
out
add
jmp
lcall
add
adc
loop
sub
adc
sti
je
push
jne
dec
cmp
inc
dec
mov
clc
leave
adc
aam
cmp
dec
mov
or
cwtl
lock
inc
out
inc
mov
test
xor
xlat
push
daa
or
icebp
push
cmc
cmp
xor
mov
xchg
xor
add
call
jle
mov
or
andb
xlat
test
jl
add
lds
mov
sub
addb
jmp
pop
sub
add
sub
adc
testl
mov
mov
dec
inc
mov
icebp
inc
into
les
jno
adc
add
test
jae
mov
mov
jmp
dec
jmp
mov
sub
push
sbb
adc
movsl
xor
and
lods
dec
or
or
xchg
mov
push
testl
pop
inc
jge
testb
and
cltd
pop
scas
cmp
sub
xchg
loop
sbb
mov
jnp
dec
or
rcr
sub
into
outsb
mov
lahf
movsb
sub
sub
cmp
mov
and
add
mov
sub
rorl
pop
sub
xchg
cmp
adc
cmp
sbb
xor
adc
xor
js
or
mov
pop
or
iret
sahf
push
adc
cmp
pop
bound
dec
daa
cmp
push
push
add
fimull
mov
int
xchg
or
cwtl
test
adc
push
lcall
or
and
in
adc
imul
pop
daa
orb
pusha
mov
mov
stos
add
jo
push
mov
jo
insb
xor
lock
test
out
mov
inc
and
push
pusha
insb
aas
xchg
inc
xchg
movsl
mov
aam
dec
jp
xchg
lea
push
or
inc
mov
repnz
sub
pusha
popf
prefetch
ja
fimuls
test
jne
push
and
int
outsb
add
cmpsl
adc
push
clc
sbb
test
mov
inc
or
test
movb
daa
sub
jns
loopne
pop
subl
test
filds
fwait
jp
inc
pop
cld
add
ret
push
and
ret
jge
movsl
add
fsubrs
mov
fsubrs
popa
adc
jb
pusha
adc
or
addr16
jmp
mov
cmp
add
loope
adc
xchg
js
int3
clc
or
jne
mov
roll
mov
sbb
addr16
cs
or
mov
into
mov
add
je
cmpsl
mov
shlb
pusha
push
mov
shll
push
and
jl
inc
xchg
ficoml
outsl
das
adc
pushf
mov
out
xchg
mov
mov
xchg
les
lods
and
adc
pop
mov
imulb
outsl
loop
cmpl
sbb
or
xlat
dec
xlat
leave
insb
mov
cmp
sub
imul
push
dec
dec
pop
adc
adc
inc
sub
mov
adc
scas
add
loopne
sbb
sarb
dec
inc
aam
clc
pop
fwait
cli
add
jmp
aaa
sbb
ja
jl
stc
cmp
arpl
push
aaa
loopne
les
addr16
call
cltd
xchg
cmp
lcall
sbb
mov
fbstp
or
mov
inc
dec
test
mov
xchg
push
stos
jo
pop
ret
dec
and
and
bswap
push
adc
adc
pop
les
dec
mov
xchg
das
pop
shrl
xlat
dec
je
enter
inc
inc
xor
add
add
aam
cmp
xlat
dec
xor
pop
lcall
inc
adc
inc
add
push
cmpsl
mov
push
popa
push
pop
pop
pop
lea
fdivs
sub
sbb
add
adc
or
ret
mov
sbb
jecxz
sub
cmpsl
lock
int3
cmp
lahf
dec
adc
inc
fadd
loope
mov
push
jo
xor
dec
gs
inc
clc
add
call
sub
icebp
cmpsl
outsl
mov
repz
and
adc
xor
std
xlat
sbb
fneni(8087
pop
cld
decl
and
movb
adc
scas
sub
dec
adc
and
add
and
dec
jnp
push
jne
hlt
or
shlb
test
cmp
sbb
add
add
pop
mov
dec
adc
test
insb
pop
mov
dec
adc
add
imul
inc
adc
cmp
push
pop
sub
lock
or
pop
loopne
or
mov
push
pop
mov
call
and
cmpsl
add
jno
push
and
loope
icebp
sub
pop
je
adc
aas
daa
clc
nop
lods
inc
flds
cmp
inc
fidivs
or
sub
jne
jno
sbb
jne
add
test
aas
xor
inc
and
rolb
bswap
or
test
xchg
mov
add
aaa
adc
dec
xor
pusha
mov
pop
add
jbe
push
aaa
outsb
push
inc
mov
cmpsl
cmp
dec
les
push
sbb
or
movsl
rclb
iret
fisubs
leave
xor
pop
adc
pushf
or
dec
outsl
cmp
lahf
add
pop
xor
jo
add
sbb
mov
enter
adc
mov
mov
push
inc
jge
add
les
popf
dec
jne
push
cmp
frstor
push
jbe
inc
inc
add
ret
sahf
add
jmp
out
rcr
in
incb
xor
mov
xor
inc
xchg
push
xor
pop
pop
cld
lret
mov
pushl
dec
jne
jp
call
lods
sub
sbb
cltd
mov
mov
adc
cmp
rorl
mov
rorl
int
shll
sub
ret
scas
cltd
rolb
mov
adc
pop
ret
cmpsb
lret
mov
rcrb
or
cvttps2pi
flds
push
sub
jnp
jo
or
loopne
add
cld
mov
sub
pop
cmp
pusha
mov
lock
cmp
adc
xor
jns
or
aaa
add
pop
jnp
imul
jle
jns
inc
subl
xorb
and
or
pop
and
movsb
lds
aaa
rcrb
mov
out
cmp
inc
lods
insb
cmp
lock
sbb
fcompl
test
pop
shll
mov
push
push
lods
adc
clc
mov
inc
scas
fnstsw
xchg
and
ss
mulb
cltd
test
ss
sub
incl
cltd
inc
or
gs
and
mov
inc
xor
jecxz
dec
ret
fs
sbb
daa
add
das
jp
pop
fistps
and
je
or
mov
mov
mov
inc
mov
jecxz
cmp
pop
lea
and
gs
sub
push
jmp
lret
jp
push
std
pop
pop
and
fwait
or
inc
cmpb
pop
sti
addl
sbb
or
cmp
jmp
movsl
push
jbe
sub
shlb
sub
int3
ret
pop
stos
pop
dec
xchg
xor
fdiv
cmpsb
inc
or
mov
adcb
or
popa
pop
pushf
sub
sbb
push
pop
push
mov
arpl
cmp
jae
add
jp
pop
or
push
int3
push
int3
fidivl
scas
pop
addb
lods
rorb
ret
or
inc
vpcmpeqb
int
xchg
sahf
stos
cmp
imul
insb
pop
sbb
xchg
xchg
jno
imul
out
hlt
cmpsb
iret
fmul
in
and
mov
dec
sbb
adc
addl
cmpb
or
adc
mov
mov
stos
mov
push
and
in
sahf
xor
cmp
nop
subb
adc
sbb
jl
adc
sub
lods
inc
push
sub
sbb
dec
aad
pop
pop
sbb
cwtl
pop
in
or
jne
mov
pusha
adc
inc
or
cmp
sub
movsb
loop
in
add
shll
mov
pop
and
mov
nop/reserved
sub
cmp
xchg
cltd
daa
fdivrs
pop
lock
imul
mov
mov
pop
inc
fidivrs
leave
repz
xlat
fcoml
sbb
fdivrs
sbb
jge
jle
push
divb
or
mov
pop
jmp
sub
pop
ss
outsb
mov
idivl
adc
addr16
sub
pop
push
mov
mov
inc
into
fimuls
pop
pushf
jne
sub
cmp
sbb
add
popa
jbe
sbb
enter
sbb
add
aam
and
pusha
sbb
push
jne
fimuls
adc
in
fadds
stc
adc
and
fnstenv
mov
aam
push
pop
aaa
rcrb
pop
and
xor
and
rcrb
aaa
jmp
inc
pop
rcr
mov
dec
rcrl
fsubs
out
imul
in
nop
pop
cmp
gs
shl
add
inc
test
jno
or
in
mov
filds
lock
cmp
mov
lock
pop
xlat
pop
mov
mov
out
or
pcmpeqb
fcoml
sbb
push
inc
cmovge
pushf
dec
sbb
sub
lahf
andl
fwait
sti
ss
ds
xorb
sub
data16
and
jge
popa
sub
popa
rclb
or
mov
cmpsl
stc
mov
hlt
push
sbb
movsb
and
add
add
ja
aam
xchg
or
nop
jmp
aad
dec
add
add
mov
push
xchg
push
enter
add
movsb
mov
fstps
add
add
mov
mov
nop
nop
and
xchg
or
aas
lret
sub
sbb
adc
dec
leave
rcrl
arpl
pop
or
xchg
mov
mov
or
pop
inc
inc
adc
inc
add
shll
pusha
outsb
jl
adc
xchg
xor
add
xor
nop
mov
add
adc
mov
cmp
xchg
das
imul
int3
adc
and
fdivrs
adc
sbbb
fistps
xchg
sub
in
xchg
clc
push
ss
movb
push
jl
movsbl
insl
lock
mov
mov
adc
test
dec
cmpsl
mov
mov
daa
cmp
ret
in
insl
mov
xor
jp
xor
icebp
movsb
hlt
inc
inc
fcoml
and
das
mov
fsubl
lock
jne
sub
comiss
push
push
mov
inc
inc
ljmp
adc
mov
mov
in
pusha
dec
outsl
leave
adc
jne
sub
dec
or
jbe
jl
and
sub
out
loopne
xor
stos
jo
pop
add
in
or
sub
push
xor
adc
ljmp
add
inc
jmp
int
outsl
aad
lret
inc
or
out
add
rcl
stc
int3
popf
aaa
es
adc
sbbl
hlt
inc
xor
and
pop
scas
faddp
sbb
fidivrs
or
fdivr
iret
and
and
cmpb
jp
push
xor
popf
mov
mov
xchg
cmpsl
jmp
adc
sbb
xchg
popaw
fs
and
sub
sub
mov
add
pop
lea
xor
pop
and
xorl
rcll
cld
testb
iret
and
jmp
mov
pusha
shl
scas
lock
and
add
sbb
adc
andl
dec
pop
dec
xor
lods
jno
cmpb
fidivrl
cs
inc
mov
arpl
add
aam
ds
xorb
call
or
ss
mov
mov
add
pop
xchg
stos
or
add
push
adc
inc
hlt
bound
sub
cmp
test
faddl
push
push
test
int3
and
push
xor
mov
ljmp
jo
nop
inc
pop
add
and
andl
or
or
out
sbb
aad
xchg
andb
in
inc
fsubs
clc
jge
test
mov
xor
andl
cmp
xchg
pop
testl
mov
ds
loopne
es
add
lea
pop
clc
jnp
movsb
rolb
sub
and
stc
cmpl
mov
adc
test
inc
aad
fcoml
xor
push
cwtl
push
mov
cli
ss
xchg
in
insl
fwait
push
rorb
sbb
and
ret
jns
inc
sub
xor
jns
push
arpl
or
jne
les
inc
xor
enter
push
in
mov
aaa
add
and
cmpsl
in
ret
mov
inc
in
cmp
cs
push
cmp
mov
enter
cmp
or
fdivl
cmp
arpl
and
sti
sub
sbbb
sub
xchg
push
ss
lds
mov
cmc
test
mov
fcomp
xor
mov
fcmovne
sbb
cmp
movsl
movsb
and
gs
inc
and
xchg
adc
dec
loop
ja
sbb
pop
dec
sub
push
loop
aaa
push
jnp
add
push
daa
push
fisubs
jo
shlb
aas
sub
mov
pop
adc
pop
inc
fcompl
aas
push
push
fiaddl
add
mov
jmp
inc
pop
jge
mov
ss
and
popa
lret
add
push
xor
xor
cld
and
rcl
hlt
nop
xchg
in
rcr
fcoml
adc
pop
xchg
add
xchg
add
dec
repnz
dec
loope
dec
sbb
test
out
and
xchg
xor
jbe
sub
test
jns
push
sub
pop
xchg
lods
cmp
adc
xlat
fiadds
sbb
cli
cmp
jne
in
and
dec
mov
daa
fsubr
xor
dec
fisubrs
lar
sbb
mov
test
cmp
cmp
sbbl
nop
jp
jb
iret
dec
into
clc
arpl
push
cmp
imul
les
rolb
xor
adc
mov
lods
mov
and
loop
cmp
adc
fwait
mov
or
lds
ss
movsb
pop
mov
fmuls
pusha
pusha
das
xchg
popa
or
and
sub
fldl
push
jne
pushl
push
or
add
dec
dec
data16
or
aam
push
fisttps
data16
pop
dec
dec
je
or
push
in
loop
sbb
sub
shrl
dec
testb
sub
push
scas
jmp
mov
in
pop
and
pop
hlt
call
adc
jae
dec
aaa
and
dec
mov
and
xor
loopne
inc
or
mov
sbb
push
sub
adc
or
loopne
inc
push
mov
clc
loopne
stos
ret
jmp
lds
sbb
cwtl
movsl
loopne
xor
orl
cmp
mov
xchg
pop
ret
daa
fwait
cmp
mov
xchg
mov
fisttpll
pop
les
adc
add
sbbl
std
xchg
and
adc
ja
shlb
mov
and
stos
inc
fld
xchg
or
loop
sbb
jae
in
dec
cmp
or
lods
lahf
jae
xor
bnd
dec
push
push
and
sbb
ja
movl
mov
inc
and
sub
inc
mov
orl
dec
xchg
jae
lea
adc
pop
push
adc
sbbb
lahf
lret
or
ja
or
incb
add
bound
outsl
incl
or
inc
push
ss
daa
inc
roll
or
das
cmpl
pop
mov
das
add
sub
adc
pop
sahf
mov
jno,pn
pop
mov
and
adc
scas
cmp
mov
leave
das
pusha
push
mov
ret
repz
js
mov
pop
xor
push
jno
jnp
and
pop
dec
xor
rcrl
push
jl
mov
out
cmpb
aam
loop
cmpsb
imul
push
and
push
sub
lcall
mov
pop
lret
adc
xor
or
push
mov
mov
xor
addr16
jmp
das
jge
lret
cmp
adc
mov
sbbl
shrl
sbb
or
push
jbe
push
mov
mov
mov
add
inc
xor
push
outsl
pop
pop
popa
ja
hlt
mov
mov
imull
stos
mov
jg
mov
les
adc
cwtl
and
jmp
daa
mov
mov
mov
adc
mov
xchg
test
aam
dec
dec
sbb
adc
jne
shll
jae
dec
cmpsl
mov
pop
inc
push
repnz
push
inc
test
scas
dec
inc
push
call
cmp
stos
mov
mov
inc
sbb
push
insl
loopne
pop
popa
cmpsl
testl
lret
shll
fwait
test
cwtl
cmp
dec
cmp
jg
push
cmp
outsl
cmp
inc
call
call
movb
add
dec
loope
imul
shrb
pop
cmpsl
sbb
mov
mov
inc
sbb
fsubs
or
leave
push
sub
mov
adc
inc
dec
sarl
adcl
or
and
mov
jo
sarb
adc
pop
sbb
add
bound
je
aaa
pop
jg
sub
xor
push
andl
jmp
mov
pop
mov
pop
cld
pop
movsb
mov
or
test
data16
push
add
sbb
mov
inc
insl
cmp
es
inc
dec
faddp
jecxz
sarb
xor
loope
hlt
jle
mov
cwtl
pop
clc
dec
lock
clc
addb
push
mov
fnstenv
mov
mov
jbe
jg
xchg
bound
sbb
movl
rorb
clc
stc
dec
call
shrb
sub
or
xchg
cmp
insl
mov
sub
aas
sbb
xor
stos
pop
xlat
cld
xor
mov
loop
es
xchg
cmp
lcall
movsl
pop
lcall
or
pop
popw
jl
cs
mov
addr16
push
adc
dec
push
xchg
mov
daa
xorb
test
aam
repnz
daa
or
rorb
mov
add
shll
enter
cs
daa
mov
pop
das
add
dec
and
in
cwtl
or
fs
in
out
adc
xor
out
mov
cmp
push
daa
push
cld
cmpsl
pop
fst
jmp
push
mov
push
sbb
inc
sbb
dec
dec
sub
dec
leave
ret
mov
sarl
jmp
add
mov
lds
dec
mov
or
lahf
mov
xor
mov
leave
je
or
loopne
or
add
sbb
out
or
add
dec
sbb
in
fisttpl
sbb
pop
push
dec
loopne
or
inc
pop
imul
add
lahf
xor
cmp
jg
jnp
sarb
repnz
fucomi
dec
inc
xchg
xchg
add
fidivrs
loope
and
sbb
cmpsl
pop
mov
sub
xchg
sbb
cmpsl
sub
push
in
add
add
dec
outsb
loope
cmpsl
pop
addb
sbb
int
outsl
pop
add
push
xor
rolb
insb
push
adc
xbegin
or
negb
pop
pop
mov
inc
sub
pop
aaa
aam
or
xor
pop
mov
xor
ficompl
emms
test
mov
pop
mov
lea
sbb
mov
push
push
mov
push
inc
out
and
popa
and
lret
add
add
test
pusha
inc
mov
sarb
xor
sbb
cwtl
mov
pop
push
in
push
or
cwtl
rcl
cmp
es
pop
and
jbe
paddsw
movsl
push
aaa
daa
sub
jmp
gs
jno
in
or
jnp
mov
inc
jne
shrb
dec
push
inc
cwtl
xorb
fcomip
xchg
insb
mov
outsl
pop
inc
mov
mov
cmp
es
xchg
pop
popa
dec
adc
mov
dec
aam
and
add
mov
push
inc
mov
adc
and
xorb
in
jg
ja
sbb
sahf
sub
mov
cmp
mov
enter
and
pusha
sbb
inc
mov
mov
jbe
push
movsb
dec
cmp
mov
add
sbb
out
adc
aam
loopne
call
popa
xor
shll
fsubs
mulb
xor
lods
mov
jmp
cli
fadds
mov
pop
xor
inc
pop
mov
loop
mov
in
cmovns
mov
adc
mov
jl
daa
add
sub
es
dec
adc
push
daa
push
orb
sbb
popa
or
dec
add
dec
inc
arpl
sub
inc
sbb
fs
ret
xor
popf
pop
pop
test
dec
cmp
insl
mov
test
cmpb
cmp
lea
push
outsl
dec
inc
cmp
pushl
daa
and
int3
int3
and
popf
aam
sti
xchg
push
icebp
push
jns
mov
jmp
enter
in
adc
jl
sbb
lock
in
push
sbb
test
or
jl
fs
insl
jns
adc
nop
gs
cmp
in
loopne
pusha
leave
out
stc
pusha
add
sbb
cmp
and
leave
fs
xchg
fwait
push
xchg
fs
xor
sub
mov
test
push
nop
pop
xor
pop
jmp
sbb
std
loopne
jo
or
adc
pop
sub
push
pop
fistpll
enter
add
sub
adc
aad
and
loopne
fmull
in
cmp
sti
mov
dec
sbb
jne
lahf
js
sub
sub
xor
or
cmp
movsb
sbb
gs
pop
es
or
push
push
mov
cmp
pop
mov
dec
dec
cmp
enter
xor
add
adc
or
nop
dec
adc
fcom
or
pushf
bound
or
or
lods
pop
push
loop
aaa
or
and
dec
mov
xor
imul
adc
bound
push
fildll
xchg
inc
push
rolb
out
cmpb
jg
mov
sbb
pop
arpl
xor
push
and
push
fldl
inc
adc
sbb
das
mov
add
add
cmp
and
or
and
mov
push
fstpt
int3
jmp
mov
nop
popf
push
adc
dec
mov
icebp
mov
in
arpl
or
lock
add
mov
or
xlat
xchg
pop
inc
sbbb
sub
or
push
aam
mov
sub
lock
fs
jno
mov
xor
cmp
repz
ret
adc
icebp
sub
lret
fbld
dec
mov
movsb
mov
ja
and
aam
cmp
adc
ret
idivb
xchg
adc
mov
ret
mov
pop
sti
adc
jl
fsubs
nop
ss
aaa
adc
xor
fsub
aam
or
ja
adc
add
ret
push
fwait
mov
out
hlt
shlb
mov
insl
and
push
cmp
pop
ss
pop
ret
mov
andl
pop
mov
xchg
push
leave
clc
movsb
pop
dec
mov
aas
xchg
test
mov
dec
xor
lock
leave
push
add
jp
data16
arpl
or
ret
in
jge
cmp
pop
aad
aam
xor
rclb
add
mov
cmp
adc
mov
sbb
sub
movsb
sub
inc
push
or
cmp
pop
jo
dec
and
jno
and
add
push
push
inc
push
stos
or
jecxz
rorb
jns
pop
test
jle
dec
cmp
subb
je
and
and
sbb
pusha
gs
lods
ja
or
pop
dec
dec
push
in
sti
push
mov
and
bound
mov
mov
movsb
mov
mov
xor
sbb
pop
test
js
shll
sbb
fcoms
mov
jne
dec
push
add
mov
test
repz
and
dec
sbb
hlt
push
mov
cmpl
aas
mov
je
insb
add
pusha
inc
sarb
out
sub
pop
rcll
or
cmp
and
lea
test
lock
mov
loopne
mov
push
push
sti
mov
pop
sarl
cmp
cmp
pop
clc
lock
mov
push
lea
sbb
mov
xchg
repz
cmpsl
push
and
push
xchg
and
or
pusha
or
loopne
pusha
sahf
adc
subb
or
insb
insb
out
jns
je
dec
mov
or
cmp
or
or
cmp
lock
movsl
ss
hlt
inc
lock
add
add
out
loop
xchg
mov
push
mov
push
and
mov
add
xorl
push
in
jne
adc
jne
pusha
sbb
cmp
cmp
sub
inc
jecxz
mov
cld
cmp
or
imul
dec
xchg
push
pop
gs
jo
popa
int
jnp
inc
es
push
sarl
pushf
push
jo
cmp
push
in
dec
adc
cmp
lock
out
xor
inc
pop
outsl
in
mov
or
mov
aas
scas
pop
mov
lcall
sbb
and
mov
insb
out
mov
lock
sbb
mov
jno
xor
icebp
or
cmp
xor
mov
mov
std
fdivrs
sub
cmpsb
loopne
test
and
pop
movl
insl
test
push
xchg
cmp
je
test
xchg
adc
aaa
add
pop
or
push
enter
insl
lds
and
cmpsb
insl
sti
push
cs
imul
pop
daa
sub
dec
mov
push
mov
shrl
adc
stos
shrl
nop
pop
dec
cltd
or
inc
lods
nop
das
push
fs
push
xor
add
jns
push
testl
add
push
inc
lea
xor
adc
test
loop
cmp
insl
dec
in
loop
mov
or
xchg
fld
mov
in
or
mov
addr16
inc
sbb
add
js
mov
push
pop
push
add
inc
jno
mov
mov
or
mov
fmuls
xchg
dec
js
mov
es
mov
lret
or
and
shrl
push
jo
iret
mov
insl
test
jp
pusha
cmp
pusha
imul
insb
pusha
das
jnp
mov
je
push
lcall
fcompl
sbb
ds
mov
fs
jl
add
aad
pushl
inc
mov
and
inc
dec
aaa
cwtl
add
add
mov
inc
jecxz
cmp
fs
mov
inc
enter
jo
pusha
push
push
push
mov
jbe
cmpsl
mov
test
sbb
push
adc
push
daa
or
dec
bound
je
mov
inc
aaa
popa
pop
fsubs
mov
and
and
mov
fldenv
push
loopne
mov
jo
cmp
push
add
out
or
aad
rorl
push
push
cltd
sti
xchg
add
cmpsl
push
int3
sbb
shl
cld
mov
push
and
xor
jecxz
push
add
dec
add
and
adc
or
pop
sbb
mov
or
daa
push
enter
pop
scas
sbb
jmp
jno
xor
lds
jo
xor
add
shll
popf
or
sbb
rorl
ljmp
les
sub
inc
sbb
shld
or
xor
lea
dec
jne
sbb
rolb
push
and
dec
push
in
jno
inc
jns
xchg
mov
dec
pusha
mov
mov
je
mov
xchg
push
pop
add
lods
fildll
in
adc
add
cmpb
fcomi
mov
xor
add
pusha
test
aaa
mov
and
adc
add
icebp
fcomp
xchg
loope
hlt
push
xchg
inc
jne
int3
push
imul
push
cwtl
mov
stos
inc
es
mov
or
push
inc
mov
xchg
adc
xor
pop
mov
mov
inc
arpl
mov
repnz
push
push
xor
cmp
bound
les
and
adc
in
lods
cmp
cmp
sbb
lret
inc
mov
and
sbb
add
jg
roll
pop
fidivl
dec
jbe
push
scas
shrl
imul
test
aam
outsb
jge
inc
dec
adc
idivb
addr16
in
and
ss
orb
sub
xchg
cmp
sbb
lods
insl
test
ror
ret
enter
test
sarb
pop
shrb
pop
jb
or
pop
nop
sub
push
pushf
leave
sub
js
push
sub
popf
xor
mov
adc
adc
xor
mov
lahf
mov
sbb
push
adc
fwait
pusha
inc
pushl
fdivrs
push
inc
inc
dec
jb
mov
scas
sbb
cmpsl
popa
and
inc
push
adc
movsb
notb
mov
sbb
or
insb
shrb
ffreep
cmp
sub
enter
in
push
popf
je
and
adc
adc
cmp
lods
adc
push
les
xor
push
adc
or
push
call
ret
popa
pop
shr
hlt
loope
or
xor
mov
cmp
popa
sbb
xor
jb
lock
mov
sarl
gs
test
mov
dec
les
test
movsl
add
icebp
aam
xchg
push
add
gs
dec
sbb
sub
aaa
adc
xor
dec
mov
jb
inc
add
xor
mov
rcrb
jp
push
insl
add
pusha
add
sub
add
adc
inc
push
push
or
popf
inc
xchg
pop
mov
pusha
lds
fs
add
loopne
push
stos
mov
mov
push
jmp
or
repnz
sub
add
and
fcmovnb
stos
inc
pop
inc
jnp
test
mov
inc
dec
xor
pop
ret
outsl
loope
adc
ss
mov
hlt
ss
cmp
adcb
sbb
popa
insl
mov
sub
lahf
cmc
jmp
mov
adc
pop
bound
pusha
xchg
dec
mov
outsl
loopne
sbb
mov
add
ret
mov
adc
scas
pop
and
dec
cmp
lahf
or
mov
pushf
shlb
fdiv
add
js
jo
out
inc
xor
mov
decl
add
fwait
dec
out
sbb
and
loopnew
lds
add
inc
dec
jne
es
add
sub
sbb
cli
mov
rolb
ja
inc
sub
push
sub
inc
inc
mov
fxch
cmp
or
add
mov
inc
sub
test
or
cmc
push
shld
popf
push
add
lds
mov
xor
mov
fwait
sbb
inc
insb
mov
inc
xchg
sbb
adc
push
pop
fs
lea
sbb
ss
lods
das
imul
cld
pop
sarb
xchg
jge
fists
adc
adc
add
das
jb
ret
xchg
pop
pusha
or
cmp
fcomps
sub
stc
jl
es
cli
jle
loope
popa
das
lock
scas
lods
and
push
cmp
movsb
or
outsb
subb
dec
je
ljmp
mov
ret
xchg
stos
movsl
sbb
aam
xor
xor
cwtl
add
aas
pusha
adc
ficomps
adc
jl
adc
push
add
test
pop
pop
jno
cmpsb
dec
loop
mov
test
adc
lcall
roll
scas
pop
enter
scas
or
add
lods
adc
cld
test
clc
ss
sbb
jo
jmp
test
cwtl
inc
cli
rorb
mov
push
push
mov
add
roll
repnz
lock
cmpb
push
mov
mov
or
push
add
popf
and
pop
rolb
and
sbb
aaa
mov
inc
xchg
xor
push
add
mov
call
add
inc
rol
dec
pop
adc
addb
adc
sbb
mov
sbb
dec
inc
aad
test
rol
cmp
pop
push
pop
mov
ljmp
xor
fisubl
orl
push
inc
add
mov
add
or
in
insl
pushf
jecxz
das
push
out
imul
pop
sarb
test
jo
jle
and
in
xchg
sub
pop
and
push
jb
popl
loop
xlat
fisttpl
push
ljmp
adc
andb
imul
pop
sub
inc
aaa
mov
enter
aam
adc
ss
icebp
inc
rorb
xor
push
fcmovb
inc
cltd
leave
push
sbbb
xchg
add
insl
cmp
sbb
cltd
frstor
popa
pop
pushf
push
add
or
test
dec
cli
xchg
inc
fadds
mov
lea
adc
mov
pusha
andl
setge
jo
scas
jbe
clc
jne
movb
jge
add
popa
lock
mov
inc
aaa
pop
pop
cmp
pop
sti
push
mov
loop
adc
xrelease
fistps
push
push
push
lcall
mov
scas
jp
jne
pop
pop
out
push
cmp
sbbl
movsb
xchg
push
adc
xchg
and
rolb
sub
loop
sbb
mov
ret
inc
and
xlat
imul
rorl
bound
jno
cmp
push
and
jbe
push
sub
adc
dec
add
call
push
mov
mov
add
jg
lea
lret
and
sqrtps
idiv
mov
imul
nop
ret
insb
jne
cmp
subb
movsb
xchg
aad
and
xchg
xorb
sbb
fsubrp
cmc
inc
mov
je
loopne
xor
sti
dec
sbb
mov
mov
fsubl
jp
inc
imul
fadds
push
sbb
test
cmp
adc
push
ret
or
dec
adc
outsl
movlps
lods
and
push
or
sbb
push
cmp
sahf
cmp
cmc
inc
or
cmp
ret
mov
sbb
jp
testb
ljmp
nop
pop
cli
mov
fwait
or
je
push
adc
lock
dec
xchg
and
jmp
xor
mov
clc
aad
dec
mov
sbb
and
adc
adc
popa
cmp
cld
jmp
jl
inc
inc
mov
nop
mov
loop
int3
add
cmp
inc
imul
scas
dec
or
repnz
mov
imul
ret
rcrb
xchg
adc
mov
jnp
mov
xor
cmp
add
call
xor
jno
mov
popa
loopne
jbe
je
jp
sbb
adc
xor
mov
jge
ficompl
add
pop
adc
pushf
mov
and
push
out
push
imul
jno
scas
adc
fbld
xchg
sarl
repnz
inc
sub
incb
inc
in
lea
push
inc
pusha
arpl
aas
mov
ret
outsl
jo
mov
jbe
fbstp
cmp
mov
push
inc
not
popf
add
push
arpl
decb
and
stos
push
or
popa
movsl
mov
push
inc
fistl
cmp
jne
es
outsb
cs
jne
loopne
add
add
aam
mov
test
push
push
loopne
subb
mov
inc
sub
or
scas
mov
pop
dec
insl
movsb
ret
inc
pop
popa
xor
movsb
xor
mov
mov
sbb
aas
xor
push
jecxz
aas
inc
dec
jne
or
adc
cwtl
xchg
ss
dec
cmp
outsl
out
dec
push
adc
loop
sub
cmpsl
scas
orps
ljmp
sbb
sbb
and
rcr
xor
inc
inc
mov
lock
movzwl
sbb
pop
repnz
pop
adc
adc
sahf
adc
adc
cmc
lret
aas
imul
push
clc
sub
push
or
cli
jge
popf
cmp
jg
push
dec
cmp
iret
xlat
out
fldl
add
fs
movl
cmp
psubb
xorb
rorl
cld
mov
data16
sbbb
pop
mov
sbb
sbb
imulb
and
les
movb
jg
inc
ja
rcrl
cs
pop
pop
xchg
mov
js
out
mov
jmp
xchg
mov
adc
cmpb
or
pop
or
cmp
lock
sub
or
aam
sbb
lods
inc
sbb
jge
push
mov
jnp,pt
jne
stos
and
ret
adc
or
inc
and
mov
pusha
adc
add
inc
xchg
insb
into
add
pop
mov
shl
jmp
aas
or
jns
or
cmpsl
adc
mov
sub
add
xchg
add
sbb
push
or
adc
mov
lcall
aam
mov
cmp
jg
int
and
sarl
add
mov
add
mov
add
push
test
outsl
add
stos
inc
dec
inc
ret
push
fnstsw
or
aaa
clc
jno
test
lds
xor
adcl
jmp
scas
mov
xlat
test
push
cmp
jo
ds
inc
push
je
mov
or
inc
sub
lods
test
movsb
test
int
or
ja
mov
jbe
xor
pop
push
andl
repz
cmpsb
ss
push
jbe
sub
xchg
jle
cmp
call
test
test
pop
push
pop
sbb
xchg
in
add
mov
test
sub
test
xor
and
movsb
inc
fwait
mov
cmp
dec
cmpsl
push
mov
rcl
dec
in
sbb
xlat
xlat
test
fidivrl
ror
cmp
jne
nop
adc
lock
mov
fisttps
xor
fstpt
daa
pop
xor
push
cmp
xchg
mov
or
das
mov
jge
dec
adc
lds
rcll
cs
jb
movsb
mov
popl
loopne
sub
add
dec
arpl
adc
testl
lods
jae
inc
xchg
or
dec
mov
or
sti
nop
inc
sbb
es
cmp
adc
add
rcrb
mov
adc
mov
and
bndldx
jle
add
imul
orl
je
or
adc
or
test
add
inc
add
sbb
xchg
nop
sub
and
xabort
dec
push
adc
sub
cltd
pusha
or
add
lret
stc
enter
lds
iret
int3
ja
pcmpgtb
orl
stos
dec
insb
rolb
jnp
les
in
pop
ret
cmp
pushf
lret
add
adc
sbb
sub
jmp
je
xchg
nop
testb
adcb
loop
pop
mov
inc
sbb
mov
jle
mov
setb
or
lret
inc
mov
insl
sbb
enter
xchg
orl
repz
add
fsubs
stos
push
adc
pop
out
or
inc
pusha
or
mov
loopne
ret
pop
and
and
jno
inc
sbb
sub
sub
add
add
push
outsb
popf
fsubrs
mov
push
pusha
mov
sbb
clc
in
popa
cwtl
cld
push
push
sbb
popa
sahf
in
loopne
jnp
cwtl
gs
sub
popf
rcll
dec
adc
vunpckhps
lea
dec
das
ret
mov
add
push
mov
inc
pop
daa
or
fldcw
iret
xchg
cmp
mov
inc
add
inc
sub
add
xor
jo
xchg
or
sbb
dec
mov
add
xchg
mov
movsl
or
add
sbb
leave
inc
mov
enter
xchg
adc
inc
jnp
sub
mov
jp
pop
outsb
dec
push
es
and
mov
add
mov
cmpb
shlb
add
inc
add
adc
or
gs
or
mov
push
sub
sub
push
or
icebp
lock
xchg
mov
mul
cs
je
lea
bound
mov
pop
or
add
leave
dec
loopne
fbld
add
pop
add
mov
cld
pcmpeqw
xor
sti
mov
pop
inc
ud2
or
cmp
stos
mov
out
push
add
push
test
pop
and
or
add
add
xor
hlt
adc
mov
dec
pop
pop
ret
bound
ja
inc
pop
push
imul
dec
fldcw
adc
mov
or
mov
lock
orb
movsb
ret
pop
xlat
dec
cmp
push
cld
push
test
xchg
jns
inc
fildl
aaa
push
push
cmpl
lods
cmp
rcrb
imul
fdivrp
pop
jge
test
popa
xchg
jp
pop
insb
cmp
iret
aam
mov
mov
lea
lret
pop
mov
fidivrs
insb
test
push
enter
mov
aad
pop
inc
nop
pusha
mov
fildll
and
push
movsl
in
pop
insl
xchg
mov
loopne
subl
lret
mov
xchg
rcrb
cld
shl
je
sub
ret
inc
lock
lret
xor
pop
sbb
inc
inc
sti
mov
push
xor
sub
shrb
les
add
lcall
adc
lods
pop
repnz
pop
loopne
push
cmpsb
daa
mov
sub
ss
mov
addr16
lcall
push
int
mov
nop
fwait
dec
pushf
popf
pavgb
sarl
pop
sbb
lea
push
sbb
shrl
adc
sub
ja
inc
mov
fcoms
jmp
xchg
dec
cmp
movsb
push
mov
pop
inc
fldt
and
test
sbb
xchg
lcall
ret
mov
adc
daa
and
std
idivb
sbb
ss
scas
xchg
and
cmp
in
fs
es
adc
add
ffree
stos
lea
leave
add
sub
xor
add
out
ret
or
pop
dec
sub
inc
aam
pop
bound
imul
or
and
shlb
push
push
ret
leave
adc
or
nop
add
in
cmpsl
mov
or
pop
dec
pusha
inc
lahf
rol
xchg
test
adc
dec
push
repz
add
in
add
inc
add
cmp
cmpsl
or
pushf
cli
jb
cmp
movsb
sbb
pushf
cmp
or
xor
mov
enter
cmpsb
js
int
inc
and
hlt
movsl
popf
fbld
jb
push
cmp
and
mov
in
xchg
dec
iret
pop
sahf
push
fsubl
xor
mov
cwtl
aad
sahf
and
inc
mov
test
movsb
jne
xor
pop
jb
jl
iret
movsb
clc
rcrb
lahf
inc
pushf
addl
inc
test
adc
iret
pop
mov
cmp
inc
or
jb
inc
add
hlt
add
nop
add
mov
or
add
push
popa
jl
adc
mov
jmp
sbb
xchg
xlat
or
shrb
or
add
clc
daa
rclb
mov
add
fadd
xor
jbe
mov
sub
xor
lock
pop
xchg
js
cmpsl
outsb
cmp
les
je
aam
mov
cwtl
cmp
ret
aaa
dec
xor
mov
jnp
lcall
shlb
insl
adc
mov
loopne
jo
scas
inc
mov
loope
add
jno
jae
rorl
sub
sbb
pop
and
setl
dec
mov
fldenv
movsb
mov
mov
inc
adc
lods
fdivs
dec
xchg
in
dec
loope
jae
sub
scas
in
jle
and
push
adc
inc
in
lock
enter
pop
dec
cmp
sbb
in
in
push
pop
dec
cltd
mov
mov
ret
loope
jne
shrl
or
arpl
jge
push
je
push
or
test
cltd
cmp
popf
filds
xor
orb
push
sub
push
mov
adc
jno
adcb
adc
dec
addl
inc
and
xchg
pop
adc
decl
cmp
fidivrl
and
aad
popa
je
and
add
fs
sbb
idivl
mov
pop
std
pop
adc
push
xchg
or
add
sub
push
fcoml
mov
and
aam
test
stos
cmp
and
pushf
bound
adc
movsl
mov
jns
or
adc
movsl
mov
leave
subl
loopne
and
or
loopne
or
andb
enter
std
lock
pushf
in
inc
dec
hlt
inc
cmpsb
hlt
xchg
cmp
es
mov
push
cltd
lock
test
push
shrb
push
xor
mov
loopne
rcr
mov
fidivl
cmpsl
loope
js
mov
jae
cmpsb
add
cmp
cmp
mov
cmp
xchg
loopne
push
push
test
jl
repnz
adc
mov
sbb
push
ja
xchg
lods
scas
sbb
fidivrl
and
push
xchg
cmp
vmread
nop
adc
jp
sti
jg
aas
subl
add
fdivs
add
lahf
test
addr16
inc
lds
sbb
out
test
pop
daa
stos
nop
rcrb
sbb
sbb
mov
jbe
push
jecxz
adc
cmp
mov
dec
or
std
add
xchg
push
adc
mov
push
ja
or
arpl
add
adc
adc
add
or
add
or
jbe
pusha
loop
das
mov
addl
aas
pop
dec
push
add
lods
and
push
inc
cltd
pop
add
dec
ret
adcb
pusha
aam
push
movlps
pop
cmp
cs
mov
sbb
out
leave
repnz
movb
or
xchg
push
loope
dec
fldl
xor
fstpt
stc
orl
cmp
shl
or
xchg
dec
push
sbb
xchg
sub
cwtl
jl
jne
movsb
dec
inc
mov
add
push
loope
push
es
hlt
xchg
and
xchg
outsb
sbb
inc
movsl
adc
inc
add
and
dec
rorl
adc
add
shrl
jb
hlt
hlt
inc
dec
pop
js
lods
jb
ljmp
les
in
inc
jmp
mov
insl
pop
add
mov
xor
mov
fdivs
inc
adc
sub
cld
pop
in
loope
and
or
aaa
mov
ja
lds
sub
mov
sbb
sbb
and
adc
pop
or
loope
sub
bound
or
jp
xor
jg
fwait
in
sbb
sbbl
sub
lret
mov
xchg
pusha
int3
jmp
jae
push
pop
movsl
lea
movsb
push
fcomps
movsl
add
jle
das
xchg
fmul
xchg
jo
sbb
test
adc
fistl
test
sbb
jbe
enter
jmp
fimuls
sub
loopne
lds
rcll
shrl
pusha
sbb
mov
test
nop
pop
inc
or
pop
sbb
out
and
popa
or
jge
sub
cmp
scas
mov
je
push
lahf
add
stos
push
or
mov
ret
ret
add
and
inc
adcb
and
fcmovu
jmp
out
enter
scas
push
scas
xchg
sbb
sub
add
push
scas
xchg
or
push
aas
pop
movsb
nop
subb
or
dec
jle
js
or
fs
test
inc
fwait
adc
jns
push
insb
mov
scas
sbb
pop
inc
cmpsl
outsb
inc
insb
outsl
jae
sarb
xchg
leave
data16
push
lock
xchg
push
and
adc
push
aam
sti
sub
shlb
mov
add
mov
push
inc
loopne
mov
sbb
sbb
shrb
je
push
fisubl
mov
add
inc
push
push
dec
outsb
dec
popa
js
mov
jle
gs
int
je
rclb
add
xlat
push
sbb
push
adc
sub
subl
sub
and
ja
movsb
sbb
cmp
adc
mov
jo
cmc
iret
and
and
insb
mov
in
shll
aad
mov
xlat
aas
outsl
cmp
scas
adc
xchg
mov
mov
inc
adc
add
mov
aas
mov
or
mov
in
push
ds
mov
and
nop
adc
and
cs
jno
or
and
mov
aas
sbb
js
shll
leave
inc
enter
jnp
or
nop
fmul
imul
enter
and
add
mov
and
aas
xchg
popf
or
pop
mov
addr16
or
or
test
test
dec
xchg
push
leave
or
pop
roll
push
sbb
xchg
inc
test
lock
push
aam
cs
push
loop
test
add
fsubs
insb
test
mov
and
xor
sti
arpl
fbstp
mov
dec
ds
dec
outsl
jae
xchg
and
aas
fbld
xor
sarb
ja
sbb
xchg
out
inc
and
push
xchg
insb
fdivr
push
dec
inc
js
imul
sub
sbb
popa
jg
iret
fwait
rorb
pop
negl
jo
inc
aas
notl
mov
mov
push
and
mov
sub
xchg
sub
jg
test
sub
cltd
daa
call
sbb
add
add
mov
negb
inc
cwtl
pop
add
adc
mov
popa
data16
push
push
push
xchg
movsb
add
int
cmp
arpl
inc
repnz
or
and
push
pop
adc
imul
aaa
inc
add
addl
test
adc
sbb
cmpsb
and
jecxz
dec
loopne
arpl
test
xchg
push
bound
push
inc
cmp
popf
mov
repnz
mov
in
sahf
pusha
testb
fs
inc
push
addr16
sbb
insb
inc
push
sbb
outsl
push
sbb
push
push
push
sbb
push
push
push
fs
inc
push
push
pop
pop
nop
inc
push
sbb
pop
inc
push
sbb
pop
push
sbb
inc
inc
inc
sbb
inc
inc
inc
fs
inc
push
inc
dec
dec
nop
inc
push
sbb
dec
inc
push
sbb
dec
push
sbb
xor
xor
fs
inc
xor
ss
inc
push
aaa
cmp
nop
inc
push
sbb
cmp
push
sbb
aas
push
sbb
and
and
fs
inc
and
es
inc
push
daa
sub
nop
inc
push
sbb
sub
push
sbb
das
push
sbb
adc
adc
fs
inc
adc
push
fs
inc
push
pop
sbb
nop
inc
push
sbb
sbb
push
sbb
pop
push
sbb
add
add
fs
inc
add
push
xchg
ret
fs
pop
scas
cmc
mov
mov
insb
add
pop
daa
or
aaa
dec
sub
adc
jp
push
xor
jne
xchg
lods
cs
adcl
jge
shll
sub
mov
fmuls
or
filds
dec
push
mov
push
push
push
rcll
adc
mov
xor
and
push
insl
xchg
out
and
repz
cmp
mov
mov
insl
shl
mov
xchg
and
add
push
pop
xchg
and
xchg
or
or
xchg
and
or
push
setb
sbb
xchg
and
adc
push
pop
xchg
and
xchg
sbb
sbb
xchg
and
sbb
push
pop
xchg
and
xchg
and
and
xchg
and
and
es
xchg
and
xchg
sub
sub
xchg
and
sub
cs
xchg
and
xchg
xor
xor
xchg
and
xor
ss
xchg
and
xchg
cmp
cmp
xchg
and
cmp
ds
xchg
and
xchg
inc
inc
inc
sbb
inc
and
xchg
and
xchg
and
xchg
dec
dec
dec
sbb
dec
and
xchg
and
xchg
and
xchg
push
push
push
sbb
push
and
xchg
and
xchg
and
xchg
pop
pop
pop
sbb
pop
and
xchg
and
xchg
and
xchg
pusha
popa
bound
xchg
and
arpl
sbb
and
xchg
push
and
imul
xchg
and
lock
mov
push
push
inc
inc
pusha
jne
sub
cmp
adc
bound
aam
xor
arpl
out
pop
flds
imul
pop
jo
es
gs
or
pop
outsl
xchg
push
shlb
push
jae
cmp
jecxz
mov
xchg
outsb
xor
insb
xchg
mov
pop
push
sbb
imul
jbe
pcmpgtd
push
jae
push
std
mov
pop
dec
push
pop
push
out
jae
jne
fs
push
outsl
iret
aas
pop
cs
inc
bound
pop
push
sub
aaa
subb
jo
jb
pop
push
jo
fdivrs
insl
bound
add
dec
sub
js
mov
and
xchg
pop
push
inc
dec
jae
insb
cmp
push
push
outsb
add
sub
mov
dec
push
add
pop
outsb
imul
sbb
rcr
insb
insb
push
inc
jae
rcrb
and
das
push
testb
sbb
push
and
das
iret
faddl
out
das
inc
add
ss
push
cmp
rcrl
lahf
pop
pop
push
inc
inc
daa
fcmove
xchg
movsl
shll
dec
pop
mov
arpl
fimuls
out
cmp
push
inc
lahf
add
mov
aaa
inc
daa
outsl
mov
dec
cmp
imul
ret
or
mov
orb
jg
push
push
push
mov
mov
add
push
fiadds
push
dec
sub
pop
out
dec
mov
jno
outsl
lods
dec
lods
pushw
dec
sub
pop
pop
push
cmp
inc
cmc
mov
cmp
shll
inc
fs
cmp
mov
bndstx
sub
outsl
daa
push
outsl
pop
imul
sbb
xchg
pop
push
sub
pop
jp
popa
imul
data16
iret
mov
or
and
aaa
inc
daa
dec
dec
aad
inc
clc
lea
pop
outsb
push
das
push
adc
sarl
das
push
inc
aaa
or
inc
inc
dec
and
dec
dec
cmpl
push
xlat
insl
outsl
sbb
rorl
sub
insb
lock
jge
mov
add
mov
pop
bound
icebp
outsb
lock
fs
hlt
aaa
idivb
dec
icebp
mov
xor
in
fs
push
push
arpl
xchg
inc
pop
iret
in
xor
rclb
imul
fisttps
scas
mov
inc
js
movsb
shlb
sbb
mov
psrld
sub
add
inc
nop
iret
fcomps
inc
cltd
cmpl
add
mov
out
mov
push
adcl
push
lret
xchg
pop
jge
leave
rcrl
or
or
add
and
mov
and
xchg
add
fimuls
pop
mov
cmpb
pop
add
nop
cmp
stc
adc
and
or
xchg
rcll
out
ror
jl
imul
sbb
aaa
add
roll
push
rcll
adc
push
mov
pop
and
fcoml
cwtl
test
push
and
push
call
in
add
adc
data16
jmp
dec
dec
testl
stos
lahf
popa
jb
mov
repnz
fs
mov
push
xchg
shrl
lea
dec
je,pn
push
enter
push
insb
pop
mov
pop
sarl
mov
roll
xchg
or
push
pop
pop
and
xlat
push
cmpsb
lods
pop
movsb
pop
daa
mov
pavgb
adc
push
ja
aad
pop
add
je
mov
dec
rol
loopne
hlt
or
loope
or
shrl
sub
aaa
xchg
out
inc
in
push
shlb
test
scas
sbb
mov
cmp
pop
mov
add
pop
jp
gs
and
leave
push
and
ret
hlt
das
dec
imul
das
push
insb
scas
pusha
or
adc
jl
loopne
les
aad
add
or
dec
adc
push
adc
out
aad
ret
enter
pop
xor
repz
xor
push
inc
push
sbb
inc
xchg
sub
insb
and
lods
jno
jns
test
mov
adc
test
loope
imul
xchg
into
mov
push
add
and
fcomp
push
test
cld
mov
or
fldcw
idivl
test
enter
inc
lods
shlb
lock
loopne
xorl
iret
xor
push
push
or
sti
imul
dec
dec
dec
push
push
daa
xor
aaa
xor
popf
arpl
sub
roll
cli
or
stos
flds
add
and
xor
ja
or
push
cs
pop
push
fscale
daa
pop
mov
cmp
xlat
pop
xlat
pop
xor
inc
dec
pop
push
arpl
cmpsb
imul
mov
leave
cld
or
int
das
inc
push
bound
dec
shll
xchg
cmpsb
mov
sbb
add
dec
sbb
cmp
mov
mov
fisubl
fldcw
sub
push
cmp
ds
sbb
and
enter
sbb
rcrb
leave
nop
sbb
cmp
and
in
aas
mov
inc
sbb
cmp
fisubl
sbb
and
inc
jnp
inc
in
cld
lock
inc
jnp
inc
and
jnp
or
sub
andb
enter
jl
fstps
sbb
outsb
xchg
inc
pusha
inc
xchg
push
pushf
cmp
inc
mov
mov
dec
lcall
push
and
cmp
ret
jne
mov
and
sbb
arpl
lret
xor
imul
inc
add
lock
and
outsb
cmp
xchg
dec
imul
cmp
lea
mov
and
mov
mov
fadds
fcmovbe
mov
mov
inc
jb
mov
jne
xchg
cld
gs
mov
leave
pushf
and
hlt
cmp
lock
and
adc
push
and
mov
inc
ret
scas
and
dec
and
pusha
add
xchg
adcl
add
adc
in
mov
aas
fldt
xor
dec
cs
pop
pop
xchg
fstpt
test
cmpsl
mov
rol
fsubr
xor
pop
dec
daa
push
inc
jmp
aam
xor
dec
das
imul
fcoml
push
mov
jno
aas
aam
cwtl
fnsave
pushf
out
out
out
jo
mov
dec
sarl
je
and
xor
jl
subps
lods
mov
jle
push
mov
loop
jecxz
mov
fcmovbe
xor
inc
inc
add
jbe
pop
cmp
push
push
mov
inc
or
mov
sbb
pop
aaa
in
scas
insb
adc
and
mov
cmp
cmpb
stc
xchg
loope
push
push
out
dec
jae
inc
jne
lea
scas
mov
inc
push
and
xchg
dec
ja
mov
mov
xchg
insb
xchg
push
add
or
add
mov
adc
push
sbb
ret
out
insb
xor
inc
add
clc
clc
add
xchg
or
hlt
hlt
jl
adc
add
jecxz
pop
fadds
in
push
inc
aad
push
pop
jle
mov
enter
lea
xchg
out
popa
popf
cmpl
xor
stos
popa
adc
loop
add
jl
or
lock
lods
dec
push
fcomp
hlt
push
mov
and
pop
push
adc
nop
push
sarb
fsubp
nop
and
loope
ds
or
cld
add
and
dec
xor
lret
fstps
add
movsl
testb
push
push
adc
push
mov
cmpsl
or
cltd
and
pop
dec
call
sarb
xchg
xchg
repnz
push
mov
xchg
movsb
testl
mov
push
add
or
sub
lock
in
sbb
fwait
imull
add
mov
mov
xchg
add
leave
xor
fsubs
xor
mov
icebp
dec
js
test
add
push
fmuls
aas
sub
in
or
adc
fwait
or
ret
mov
sbb
loope
inc
mov
rcrl
push
fmull
rol
mov
scas
push
mov
sub
das
cmp
test
iret
arpl
outsb
orl
in
cwtl
cld
out
ds
or
push
adc
fisubrl
push
stos
or
cmp
pop
or
jle
inc
into
push
ret
sub
pop
call
fimuls
outsb
sbb
scas
repnz
pop
subl
jo
adc
rorb
xor
or
notb
jge
and
rcr
pushl
testl
stos
cld
cmp
push
nop
xchg
dec
repnz
scas
in
cld
pop
or
aas
mov
add
jbe
stc
and
std
and
push
shrl
ljmp
cmp
jne
push
adcl
push
sub
jmp
lahf
fsubr
inc
gs
and
imul
test
push
xor
and
jb
jo
push
pop
add
cmp
sbb
add
inc
adc
mov
jno
pop
add
inc
lahf
imul
jmp
pop
test
or
add
push
js
imul
push
push
fildll
adc
lds
inc
nop
es
lcall
orb
es
mov
or
push
inc
rcrl
add
das
and
movsl
push
popa
push
inc
in
jecxz
test
mov
dec
adc
shll
dec
push
mov
xchg
fdivp
inc
dec
sbb
add
push
dec
cmpsb
jmp
sbb
push
lock
or
add
or
dec
in
lock
adc
cs
xchg
or
add
push
dec
sub
das
and
mov
out
adc
pop
and
push
rcll
push
and
xor
jmp
lahf
or
andl
lock
loop
lock
aad
xchg
xchg
sbb
dec
adc
mov
cmp
sub
jne
ret
mov
xchg
in
pop
sub
push
jno
dec
ss
ret
aam
inc
lcall
or
cmpsl
movsb
das
fnstenv
jno
imul
inc
jbe
adc
mov
fiadds
cmpl
fistl
pushf
sti
cmp
xchg
sbb
add
mov
scas
fcomip
and
pop
sbb
jecxz
xchg
jo
imul
add
les
sub
nop
dec
sub
stc
jmp
clc
mov
aas
out
xor
daa
aam
push
add
repnz
dec
test
adc
xchg
fwait
sbb
pop
jmp
add
nop
mov
mov
cmp
hlt
inc
scas
in
inc
add
lock
dec
sahf
add
in
add
add
bnd
iret
push
jmp
inc
sub
call
sbb
jmp
ror
mov
sub
fst
rorl
pop
push
dec
mov
pop
and
jmp
mov
dec
dec
and
sub
and
das
push
mov
inc
sub
nop
clc
lret
mov
adc
inc
jl
cld
xor
and
jp
mov
add
add
inc
xchg
sub
mov
lret
jl
pushl
push
mov
jmp
inc
push
adc
call
orl
and
jne,pt
call
mov
pop
adc
or
push
loopne
or
in
faddl
mov
adc
cmpsl
pop
sub
pop
orb
ffree
lods
and
aad
sahf
adc
test
in
adc
add
in
js
sbb
adc
or
jns
fbld
add
mov
movsb
repnz
andl
mov
rcrl
loopne
add
xor
ds
sub
flds
or
xchg
int3
iret
or
or
mov
sbb
xor
and
and
jg
xchg
mov
repz
push
dec
movsb
sbb
dec
add
xor
stos
inc
pop
push
or
pop
shl
cmp
or
test
frstor
xor
pusha
fsubrp
call
adc
jae
adc
sub
adc
pop
jne
scas
test
das
inc
enter
mov
adc
pusha
sub
or
adc
or
fidivrs
sbb
inc
xchg
idivl
adc
push
sbb
sbb
sbb
and
jnp
add
jnp
hlt
clc
es
pusha
call
pusha
mov
into
mov
mov
inc
lahf
inc
sub
dec
add
fwait
xor
pop
scas
cld
clc
repnz
cld
mov
cld
jbe
lock
sarl
lahf
xchg
jbe
sub
pop
sahf
sbb
hlt
jg
mov
mov
or
arpl
inc
lods
push
roll
pop
frstor
adc
push
shll
and
movsb
mov
pusha
push
xor
jo
xor
cmp
sub
jae
int
pusha
orl
xchg
xor
add
push
sbb
inc
push
mov
jmp
adc
adc
mov
icebp
in
xchg
push
sti
push
call
call
adc
loope
adc
sbb
sub
adc
inc
inc
repz
xchg
or
in
xorb
mov
pop
popl
das
call
pop
inc
sbb
cmp
sub
jne
mov
cltd
repnz
and
loop
jb
jns
test
xor
mov
test
push
repz
lea
add
test
add
aas
mov
or
dec
in
mov
sub
testb
add
lret
je
push
sub
cmp
outsb
inc
jo
jae
outsw
adc
fwait
sbb
popa
xchg
jl
sbb
adc
lock
outsb
and
fidivs
and
pusha
enter
add
sbb
fs
push
add
sbb
cmp
and
xchg
cltd
add
hlt
cltd
add
add
cmp
add
aas
cs
mov
mov
cmp
ret
mov
push
jne
out
outsl
pop
push
jne
daa
jns
shrl
push
gs
dec
jb
imul
popa
and
in
inc
bound
jo
push
mov
jns
pop
push
insb
pop
leave
imul
arpl
add
das
jl
clc
pop
add
push
mov
mov
jl
or
aas
mov
or
je
inc
mov
jg
inc
insb
outsl
bound
or
iret
lods
mov
dec
jb
sub
inc
or
xchg
sbbl
pop
test
aas
pop
sub
fistps
sbb
push
outsl
iret
mov
sub
cmp
and
test
sahf
cmp
sbb
or
roll
mulb
xor
push
inc
popa
and
negl
adc
call
test
arpl
and
out
daa
data16
mov
pop
and
inc
add
pusha
push
out
push
mov
mov
pmuludq
sbb
testb
xor
dec
adcb
cmc
scas
cli
cmp
es
sub
sub
sbb
add
add
add
cli
add
call
fwait
das
test
ret
and
jbe
add
dec
lret
cmp
enter
movsb
pop
ret
int
loope
insl
xchg
cmpb
stc
dec
jle
leave
in
test
and
ret
cmp
jge
push
inc
into
rcr
jecxz
sbb
test
inc
clc
jmp
sti
pop
andb
into
out
pop
or
test
jmp
adc
jo
lahf
jns
insb
orb
push
in
sub
ja
test
jne
mov
mov
inc
ja
ret
cmp
pusha
ret
rolb
sbb
cltd
fucomi
or
fs
push
test
xchg
xchg
or
jl
call
nop
adc
popf
sbb
sbbl
test
bound
scas
sub
fs
rorl
enter
cmp
lock
xor
sbb
mov
inc
nop
add
sbb
loop
mov
dec
mov
sarb
xchg
imul
test
mov
xlat
jl
mov
ret
aaa
push
sbb
sbb
add
sti
pop
cmp
ljmp
push
mov
in
push
sub
lods
fists
jo
or
scas
adc
dec
adc
cmp
add
fcomp
cli
mov
add
fcoms
xor
lcall
cmpsb
inc
push
repz
rolb
mov
inc
lcall
aaa
and
bound
and
and
or
idiv
int3
imul
add
xorl
pop
add
xchg
pop
inc
nop
std
push
add
sub
push
or
mov
lret
add
mov
adc
je
ljmp
std
xlat
lds
pop
fsts
xor
decb
lock
and
mov
push
lahf
inc
mov
add
mov
adc
mov
les
ret
xchg
jb
in
test
add
add
jecxz
or
in
sub
pop
inc
ljmp
dec
repnz
cli
push
mov
test
or
call
and
in
pop
std
xor
inc
lea
nop
iret
mov
lea
inc
popf
mov
jge
popf
lsl
xor
inc
add
inc
xchg
adc
and
mov
popa
and
mov
cmp
daa
push
mov
stc
negl
nop
les
add
push
cwtl
fsubl
push
xorb
inc
es
jmp
push
jae
add
adc
or
or
sbb
leave
push
mov
pop
test
pop
add
sub
pop
test
push
sbb
sbb
pop
mov
scas
shrb
sbb
cmp
rcrb
fsubs
push
push
sbb
push
jo
or
cmp
and
xchg
mov
adc
int
mov
nop
and
les
adc
or
inc
call
xor
lea
test
cltd
or
in
inc
iret
sub
add
pmulhuw
jmp
gs
mov
movsl
sbb
stos
out
push
dec
aaa
pop
test
adc
pop
int
pop
mov
dec
push
jns
mov
les
inc
in
mov
inc
jl
xchg
jne
inc
cmp
xor
push
stos
fisubl
jnp
pop
push
sbb
push
lds
adc
jne
inc
jbe
ja
or
xchg
ret
lcall
lock
sbb
leave
in
mov
push
jns
nop
bound
add
fwait
std
cmp
ds
push
mov
push
in
inc
sahf
pmulhuw
in
mov
inc
jecxz
hlt
mov
mov
mov
pushf
pop
mov
jl
add
mov
inc
icebp
repnz
roll
dec
cmp
dec
dec
dec
dec
push
inc
inc
inc
nop
in
daa
dec
push
push
dec
pcmpgtb
inc
add
cmp
and
or
paddq
pusha
fdivrs
add
movsb
add
xchg
daa
dec
mov
mov
pop
out
in
add
push
cs
mov
daa
dec
add
repnz
sti
inc
inc
inc
das
dec
inc
push
inc
push
push
pop
xor
push
cmp
jmp
inc
inc
push
popl
and
iret
dec
push
ret
and
inc
outsb
pop
sbb
adc
sbb
test
add
bound
mov
sub
adc
movsb
cli
loop
and
mov
push
stos
cltd
cwtl
sbb
stos
popl
pop
adc
cmc
sti
add
jae
add
adc
ret
pop
sub
jg
dec
ficomps
xchg
std
and
or
inc
pusha
orl
rolb
dec
addb
pop
lods
jmp
aaa
cmp
push
lcall
rclb
jge
add
scas
mov
incb
scas
jp
add
add
fmuls
jecxz
into
call
xchg
or
mov
and
mov
add
out
loopne
adc
push
test
bound
test
inc
adc
push
call
push
jbe
adc
sbb
mov
test
add
inc
mov
pushf
xchg
mov
jno
cmp
sbb
loope
fstpt
in
fcoml
inc
andb
das
pop
mov
rorl
push
fs
enter
or
push
ret
insb
scas
push
adc
icebp
out
lock
les
add
cmp
mov
int
add
sub
fdivrs
jp
dec
out
dec
mov
sub
mov
sbb
cmp
mov
inc
xor
xor
cmpsb
fisttpll
out
jmp
and
inc
add
pop
push
insb
adc
in
in
je
jmp
push
fnsave
mov
sbb
add
mov
mov
and
or
fcomps
or
dec
or
xor
sbb
pop
inc
push
sub
icebp
add
enter
jne
xorl
sbbb
pop
ds
loop
call
je
xor
xor
cmpsb
or
inc
mov
les
push
mov
call
fwait
dec
mov
ret
and
or
scas
inc
test
xlat
decl
ljmp
cli
jmp
cmp
int3
or
ja
cmpsl
cmpsb
and
sbb
inc
mov
popa
sti
insl
std
add
add
insl
imul
push
mov
repnz
cmp
adc
lea
in
imul
mov
adc
adc
sbb
ftst
test
sbb
jne
xorl
xor
pop
cmp
iret
push
outsl
je
enter
movl
aaa
shlb
cmp
cs
or
cmp
push
xor
enter
imulb
icebp
sub
fdivrs
lea
mov
inc
enter
and
push
jle
sbb
stos
shrb
in
in
jmp
xor
xchg
idivl
clc
mov
icebp
movsb
ss
inc
out
enter
or
sbb
pop
adc
jne
or
mov
es
add
jae
inc
inc
call
insl
xchg
xor
lahf
shl
inc
sbb
rol
add
mov
pop
push
je
subb
adc
sub
nop
data16
icebp
fnstcw
idivb
sbbb
orb
jl
pusha
add
add
and
lcall
and
inc
subl
popf
pop
in
stos
test
cli
sub
add
mov
out
adc
jne
mov
cwtl
sti
jmp
mov
push
or
jnp
test
shrb
mov
nop
dec
fiaddl
push
test
push
xor
cmp
cmpsl
pusha
cli
adc
sbb
bnd
inc
push
sbb
inc
add
pushf
xor
popf
mov
xsave
xorb
sbb
mov
pop
incb
xor
pop
mov
jb,pn
push
add
or
inc
xchg
adc
pop
test
push
divl
pushf
test
cli
and
xor
pop
cmp
inc
add
cmovae
adc
inc
pop
or
pop
test
jp
pop
in
pusha
xor
and
cmp
push
add
lcall
xor
add
push
add
inc
dec
aas
and
xor
add
push
inc
jo
scas
adc
decb
push
jb
inc
lcall
xor
xor
or
insb
out
insb
or
add
adc
jno
add
pop
into
das
push
cmpsl
test
adc
push
mov
and
inc
adc
sub
cmp
sbb
fs
jg
pop
mov
movb
pop
xor
movl
push
adc
adc
insb
lods
inc
or
adc
dec
je
inc
inc
and
fwait
clc
push
loop
es
data16
addr16
or
in
cmp
and
or
in
push
inc
push
xchg
dec
and
testb
dec
or
and
cwtl
cld
adc
jb
dec
cwtl
or
add
and
jne
pop
mov
in
shrb
or
push
insb
jbe
inc
fnsave
sbb
xor
xor
leave
movhps
ss
pop
cmp
imul
outsb
mov
icebp
or
jo
add
mov
data16
push
mov
push
popa
adc
xchg
add
test
or
add
or
cmp
or
inc
or
push
xor
dec
xor
mov
pusha
xor
inc
aam
ja
nop
add
out
push
sbb
or
xchg
insl
xor
or
or
nop
cmp
or
dec
add
add
pop
add
in
xchg
or
leave
add
and
cmc
repz
repnz
cs
mov
inc
outsb
pop
and
jns
lea
daa
or
adc
mov
add
rcrb
mov
push
lret
mov
sbb
cld
adc
or
and
mov
dec
push
pop
sub
or
push
sub
jns
and
mov
add
push
add
arpl
rcrb
push
sub
xor
ret
mov
mov
mov
mov
xchg
adc
std
mov
mov
mov
dec
fs
push
dec
mov
fistl
pusha
cmp
push
push
add
pop
add
or
clc
sub
and
sbb
popa
sub
enter
adc
adc
cmpl
push
hlt
jmp
shl
cmpw
stos
dec
adc
cmp
mov
push
hlt
cmp
roll
sarb
pop
inc
rolb
call
jmp
adc
add
xlat
dec
dec
inc
fimull
repnz
int3
data16
mov
cmp
decl
cwtl
pop
cmpl
mov
xlat
cmpb
shll
cmpsl
inc
jp
cwtl
sub
outsb
xchg
mov
movq
addr16
aaa
xor
dec
mov
cmp
adc
leave
push
push
dec
stos
out
mov
jl
cmp
sarl
imul
lcall
dec
das
fisttps
fsubs
push
jo
enter
push
sbb
adc
mov
xor
sbb
add
xchg
adc
push
jns
inc
dec
xchg
sbb
inc
pushf
pop
pop
and
sbb
dec
or
std
pop
sbb
pop
add
mov
xor
inc
negb
dec
hlt
shll
mov
fsubl
jnp
mov
add
push
clc
pop
add
push
inc
repnz
pop
int3
lds
pop
bnd
inc
jl
pusha
call
mov
mov
es
lahf
xchg
in
xor
inc
cmp
mov
pop
jo
push
pop
mov
xor
nop
scas
or
and
and
push
pop
scas
pop
mov
imul
dec
sub
add
stc
pop
jo
js
sti
adc
and
add
mov
sbb
xor
cld
sbb
push
adc
adc
rcrl
sbb
ds
mov
mov
rorb
fs
push
dec
inc
inc
inc
fists
xor
xchg
inc
les
popa
xorl
add
dec
pop
mov
mov
xchg
sub
mov
iret
adc
test
mov
lds
movsb
adc
lds
popa
or
loopne
arpl
push
into
mov
mov
cmp
movb
fwait
aam
add
pop
daa
and
inc
pop
add
push
or
mov
daa
sbb
sbb
mov
inc
lods
push
aam
daa
dec
or
lret
stos
rol
in
ss
repz
or
mov
popa
and
pop
add
mov
or
js
or
xor
jns
ficoms
lock
dec
and
inc
push
push
pop
mov
orb
lea
shlb
sub
or
cmpsb
xor
xlat
dec
pop
movsl
pop
adc
in
push
in
push
mulps
mov
rclb
and
xchg
sub
mov
and
inc
sub
push
and
pop
add
sub
jmp
inc
je
loopne
imul
sub
xchg
pop
mov
inc
call
js
psubusb
lcall
in
adcb
ja
sbb
aad
lcall
push
xor
mov
jmp
andl
adc
mov
lea
push
lea
or
inc
push
ficoml
lods
cs
xor
adc
add
or
sbb
test
jne
mov
mov
inc
adc
adc
ret
mov
mov
xchg
sub
and
es
adc
mov
pushf
and
sub
sub
jge
inc
sbb
sbb
mov
inc
pushf
xchg
sbb
or
into
dec
xor
push
call
cmpsl
pop
arpl
jne
mov
inc
and
arpl
cmp
out
sbb
jmp
jle
jge
stc
lock
jae
sub
sbb
lds
jnp
jo
sbb
call
ja
daa
add
and
int
inc
sarl
sete
fnstenv
addr16
xchg
cwtl
push
or
ss
sbb
jmp
mov
scas
stos
or
outsl
in
adc
loopne
cmpsl
or
arpl
in
adc
sbb
xor
repnz
sub
and
sbb
loope
push
mov
push
pop
sbb
mov
adc
add
leave
add
mov
insb
mov
gs
adc
je
pop
xor
pop
or
sbb
cmpsl
push
cmp
sub
add
adc
jecxz
push
mov
jmp
enter
or
push
jo
lcall
call
jne
sub
jg
or
sbb
pop
fidivl
ds
ljmp
test
movsb
in
sbb
pushf
or
cli
sbb
rorb
insb
mov
sub
in
and
les
ja
add
mov
and
test
xor
xor
lock
aam
mov
push
pusha
pop
das
jnp
nop
pop
nop
and
and
mov
pop
int3
push
fdiv
shlb
mov
xor
sbb
push
daa
nop
inc
pop
shll
push
push
cs
xor
add
cwtl
xchg
inc
les
sti
dec
or
popl
aam
and
shlb
push
add
fidivrl
sbb
sbb
repz
pop
pop
add
sbb
sbb
sbb
add
insb
rcrb
movsb
sbb
cmp
jo
sbb
cmpsl
add
mov
sub
mov
push
push
mov
cwtl
lret
mov
test
inc
or
add
pop
pop
inc
imul
cmpb
loopne
movsb
mov
push
scas
jle
inc
cmc
addl
sbb
and
and
inc
xor
sbb
inc
push
in
xchg
dec
daa
dec
inc
cmp
dec
push
sub
xor
fxch
xchg
test
cs
mov
mov
pop
in
sysenter
adc
inc
leave
mov
fwait
add
push
and
outsl
pop
pop
icebp
xchg
bound
dec
nop
fadds
sub
int3
adc
push
test
cwtl
jbe
loop
xchg
jo
mov
loope
bnd
add
outsb
pop
jb
xorl
and
in
pusha
mov
add
sub
add
push
sbb
push
mov
sub
xchg
sbb
xor
sbb
shlb
divb
xor
pop
and
pop
jnp
or
sbb
pusha
sub
movsb
sub
mov
xchg
lahf
imul
add
adc
push
or
cmp
pop
mov
cmp
push
sub
bound
inc
or
xchg
sti
and
cmpsb
ds
push
cld
adc
test
and
push
dec
sbb
dec
inc
cmpsb
mov
jb
imul
out
push
dec
dec
xor
inc
adc
dec
shlb
out
outsl
lea
std
push
mov
jp
scas
mov
cmp
lahf
xchg
sub
movsl
popf
push
inc
in
test
cmp
push
loope
or
xor
sub
dec
ret
je
add
out
add
notl
inc
aam
or
push
aam
jae
inc
insb
loop
jecxz
movsl
inc
in
sbb
imul
xchg
mov
dec
xor
imul
add
and
add
sub
out
add
add
adc
insl
subl
cmp
and
push
cmp
sub
sbb
nop
arpl
aas
scas
pop
and
in
sub
sub
mov
xchg
mov
push
jb
pushf
mov
add
or
jo
addr16
push
dec
cmp
or
dec
outsl
cmp
adc
xor
adc
sbb
mov
sbb
fisubrs
fstpl
arpl
mov
int3
mov
lods
adc
aas
subb
insb
and
jae
push
xor
mov
mov
or
ljmp
test
add
adc
mov
or
sub
or
in
jmp
mov
add
fwait
aad
add
shlb
adcl
ret
mov
or
sub
and
mov
push
cmp
xlat
insb
inc
add
xor
or
cwtl
je
je
mov
dec
lcall
push
jo
gs
cmp
or
jl
mov
push
jg
push
sub
std
call
xchg
aaa
mov
mov
mov
lea
mov
sbb
adc
mov
and
repnz
js
pop
jl
inc
sbb
add
mov
js
les
add
add
ja
pop
xor
inc
je
mov
jno
fcoml
or
in
inc
cwtl
xchg
call
and
in
cs
push
test
add
push
and
jle
xchg
shlb
test
jle
sub
lea
jae
mov
xchg
daa
dec
imul
adc
ss
sbb
xor
cmpsb
mov
mov
sub
xchg
sbb
aaa
pop
xor
inc
lock
add
lret
mov
add
mov
andb
pop
int3
add
emms
roll
das
push
jmp
jge
mov
cwtl
sbb
xchg
jl
cmpl
iret
jb
daa
rclb
adc
fs
inc
loopne
mov
pushf
pop
repnz
js
nop
dec
xor
mov
dec
clc
out
add
xchg
inc
push
xchg
push
adc
mov
and
inc
stc
add
clc
stc
jne
stc
add
pop
adc
mov
in
add
mov
test
push
leave
xor
sbb
out
leave
inc
push
pop
fisubrs
inc
inc
cwtl
sarb
imul
inc
mov
cmp
and
xchg
jl
cmp
hlt
xor
dec
and
icebp
cmp
cmp
jne
mov
sbb
mov
add
inc
and
mov
cs
sarl
insl
and
sbb
xor
scas
fucomp
in
jo
cmp
fmull
xchg
into
lahf
mov
or
xor
in
ret
out
cmpb
dec
enter
shrb
inc
out
xchg
add
xor
xor
test
hlt
outsb
mov
orl
cmp
adc
jne
sub
movsl
data16
dec
sub
cwtl
inc
push
push
xchg
add
dec
mov
push
ja
and
mov
sti
xor
add
xor
pop
fsubl
jne
sbb
rol
ja
push
inc
xor
xor
insl
pop
rcrl
sbb
xchg
lahf
imul
je
xchg
push
repnz
xchg
iret
mov
aam
cmp
and
add
mov
add
ds
enter
int3
enter
xchg
dec
int3
fs
nop
xchg
dec
sub
jns
in
mov
dec
mov
leave
xchg
shlb
inc
push
mov
or
push
fildl
and
sub
push
sbb
push
and
ljmp
pop
mov
shr
pop
dec
add
adc
dec
xchg
jl
pusha
out
in
cmc
dec
cmpsb
push
pop
loop
mov
add
xor
push
dec
shll
bound
sub
add
incb
xchg
add
les
sbb
dec
push
in
xor
hlt
xor
mov
and
enter
mov
pop
shlb
dec
sarb
xor
pop
sbb
and
dec
dec
and
cmp
es
adc
mov
pop
mov
cwtl
ss
and
stos
imul
in
pusha
add
push
pop
xor
hlt
pop
adc
xchg
cltd
out
dec
insl
sub
xor
cmp
xlat
add
sbb
xor
test
addr16
outsb
push
add
roll
add
es
cmp
enter
cmp
testl
std
xor
jecxz
dec
adc
jmp
pushf
or
idiv
sti
test
adc
cmpsb
cmp
movsl
mov
outsl
add
xchg
js
outsl
dec
mov
ror
pop
push
or
lcall
mov
or
xchg
cmpl
sbb
test
lea
fdivrs
test
idivb
mull
lea
leave
pop
or
xchg
fstps
sti
jae
jmp
pop
jl
pop
popa
sub
das
pop
inc
nop
pop
fists
insl
push
sbb
inc
in
mov
andb
cmp
inc
ja
or
test
adc
inc
out
iret
inc
mov
and
arpl
cmp
repnz
out
in
inc
mov
and
sbb
mulb
hlt
mov
dec
mov
loope
outsb
push
aas
lock
mov
sub
xor
add
inc
sbb
adc
dec
pop
outsb
push
popaw
adc
outsl
scas
je
sbb
mov
or
push
sub
jno
addr16
and
je
and
sub
enter
or
xchg
xor
sbb
repz
lods
outsl
js
les
in
arpl
cmc
lock
iret
inc
or
loope
mov
jne
jne
lret
cmp
push
add
into
out
sub
shrb
and
mov
int
int
daa
aam
add
cmp
push
mov
std
sti
push
mov
daa
cmp
jmp
adcl
and
lods
loopne
jo
xchg
lea
push
fadds
shlb
pushf
xor
xorb
cmp
lock
xor
xchg
sbb
mov
movsl
movsb
dec
mov
add
mov
pop
sahf
insb
and
test
xchg
outsb
arpl
adc
push
jmp
mov
jo
dec
and
pop
sub
and
shrb
add
sbb
xchg
inc
or
dec
pop
adc
jne
loope
inc
xchg
loop
fsubl
inc
daa
cwtl
dec
in
adc
or
call
adc
cmp
cmp
pop
cmp
and
xchg
loop
mov
add
and
ret
add
inc
mov
add
push
das
adc
cwtl
out
mov
ss
mov
cmpsb
push
mov
jo
adc
lret
les
add
mov
push
shr
add
iret
cwtl
add
shrb
nop
insl
jne
sbb
add
add
loope
sbb
outsl
shlb
pop
jmp
or
xchg
mov
ds
repz
sbb
cmp
xchg
pop
pop
xchg
jmp
sarl
fdivrs
loope
ds
pop
and
mov
pop
popa
out
inc
pop
xchg
fadds
mov
jl
aaa
inc
jne
int
sbb
mov
or
scas
scas
mov
mov
stc
pop
bound
pop
mov
fcomps
or
aas
inc
out
add
mov
les
aas
mov
pop
add
test
mov
pop
pop
sbb
in
pop
mov
pop
xchg
dec
add
mov
push
test
fwait
in
mov
mov
xor
jns
and
fists
push
aaa
or
and
cli
xor
jbe
cmpsb
lsl
or
add
jo
mov
mov
dec
dec
mov
sub
enter
adc
mov
mov
push
call
mov
fiaddl
jo
dec
mov
lret
inc
inc
jb
xor
test
test
imul
and
pushf
or
lcall
push
cmpsl
sbb
sbb
sahf
rol
push
test
dec
and
and
or
mov
nop
out
nop
or
or
ret
ds
adc
mov
xor
or
cmp
mov
add
rorl
jl
into
cwtl
adc
fwait
or
xor
mov
mov
xlat
aas
and
inc
adc
frstor
ds
sub
jle
inc
lock
addr16
movsb
xchg
pop
push
inc
xchg
in
iret
in
pop
pop
mov
outsb
shrl
and
inc
aas
pop
xchg
sub
xchg
js
outsl
lock
mov
mov
imul
and
push
addb
flds
test
inc
test
gs
pop
dec
repnz
test
ss
fldl
enter
test
push
jmp
sti
js
and
fstl
mov
adc
jmp
sub
icebp
notl
or
add
mov
subb
xchg
aam
pop
mov
jp
xor
enter
cmp
or
or
js
xor
cmp
inc
je
or
cli
fdivr
daa
loop
pop
jl
pushl
cmpsl
and
fbld
mov
xor
xlat
mov
test
mov
rolb
mov
sub
adcb
decb
jbe
add
sbb
adc
pusha
lret
fstps
xor
dec
clc
movsb
xorl
adc
ret
cmpsl
movsb
push
and
mov
rorl
lods
outsl
or
or
adc
add
sub
or
dec
xor
sbb
arpl
out
cmpb
cmp
sub
out
and
pop
je
adc
rclb
mov
mov
daa
out
out
xor
enter
leave
jnp
inc
ret
fcomps
xor
push
mov
adc
mov
pop
clc
adc
nop
fidivs
dec
add
into
hlt
mov
mov
data16
mov
aaa
test
xor
pop
loope
frstor
and
lods
roll
sbb
ljmp
push
pop
mov
in
dec
mov
sbb
cmp
or
insb
mov
in
inc
inc
leave
inc
dec
test
add
sub
cmp
sbb
mov
mov
push
mov
add
jmp
cltd
inc
or
sbb
sti
ja
jmp
or
cmp
dec
dec
xlat
popa
outsl
insb
adc
scas
bound
loop
cwtl
les
jg
clc
inc
push
addb
pusha
dec
push
or
sub
pop
push
out
inc
mov
fstps
add
push
jp
ss
cmp
test
out
jns
xor
imulb
jl
sub
mov
jnp
jno
jne
sbbl
call
ds
es
or
push
add
in
into
les
mov
mov
xor
lock
mov
test
ss
test
in
and
jno
or
fbld
ss
cmpsb
add
icebp
dec
sbb
jno
or
int
test
cmp
aam
mov
test
js
inc
sub
xchg
push
inc
js
and
cmp
mov
cmp
push
sub
sub
push
clts
mov
push
and
push
pop
lea
pop
mov
pop
inc
ljmp
add
bound
xchg
test
add
mov
pop
dec
dec
imul
xor
ret
pop
push
add
xchg
cmp
nop
out
loope
mov
sbb
jns
hlt
cmp
cmp
cmp
mov
xchg
xchg
add
or
cltd
adc
iret
inc
pop
aaa
lods
lock
movsb
xorl
aad
push
add
ret
insl
int
imul
jno
mov
push
adc
stos
dec
mov
or
or
or
jne
clc
pop
jbe
les
movb
repz
leave
mov
sbb
rolb
fxch
sub
and
jo
negb
cmp
sbb
dec
pop
dec
pop
xchg
add
out
xor
add
mov
rorl
cmp
adc
aas
inc
clc
rol
add
inc
inc
ficoms
hlt
mov
inc
xchg
and
in
jmp
jb
mov
mov
popa
xor
mov
lret
jo
sbb
push
into
das
fbld
or
movl
enter
lods
xchg
push
mov
sub
mov
loope
cmc
push
sbb
pop
sbb
or
and
fst
pop
repz
test
adc
add
sub
sub
dec
pop
add
inc
push
or
mov
pop
inc
jno
sbb
xor
cltd
add
fnstcw
or
xchg
pop
icebp
or
dec
or
icebp
pop
xor
mov
icebp
out
sub
je
mov
ret
sub
addb
push
dec
sbbl
call
nop
push
mov
outsb
jne
push
or
fs
adc
jle
flds
jae
pop
rclb
add
add
bound
inc
std
sahf
jmp
cli
xor
adc
dec
call
out
adc
sub
in
nop
add
in
inc
daa
dec
das
daa
sbb
sbb
insl
jo
nop
xor
and
ret
xorb
ds
xchg
push
aam
sub
xor
xchg
jmp
xchg
adc
loopne
stos
ret
outsb
jns
or
imul
mov
pop
fs
sbb
add
adc
rclb
outsb
sbb
pop
jns
mov
sbb
scas
scas
push
enter
cmpsl
lea
dec
adc
or
sub
icebp
mov
inc
nop
sub
sbb
decl
fstpl
mov
lahf
fisubrs
arpl
mov
in
cmp
adc
sub
sbb
mov
jge
xor
xor
and
lds
sbbb
adcb
imul
loope
loop
call
inc
cmpsb
ds
pusha
out
ds
sub
js
mov
jl
xlat
cmpsb
test
lcall
outsl
test
adc
sbb
subl
jo
push
mov
xor
les
cmp
lret
pop
ret
les
addl
pop
sti
ret
dec
adc
sub
push
inc
pop
adc
out
andl
ret
or
and
push
jge
fsts
mov
and
mov
cltd
and
lret
and
movl
jbe
hlt
mov
std
push
sub
loopne
inc
gs
dec
fcoml
daa
mov
in
mov
jo
inc
sub
aaa
jns
add
or
mov
xor
bound
arpl
xor
hlt
mov
cld
jnp
jmp
test
mov
or
xor
addl
sti
ss
adc
sub
dec
sbb
in
xchg
shrb
in
cltd
dec
push
xlat
out
arpl
xchg
call
or
mov
loopne
sbb
cmpl
bound
ja
cmpl
and
xor
fildl
loop
sar
roll
and
xchg
and
push
xchg
fldcw
push
loope
add
cwtl
nop
xchg
mov
jb
sbb
inc
ljmp
sub
leave
cs
xchg
pop
mov
shrb
cmp
xor
leave
sbb
or
gs
in
test
or
jge
mov
jp
call
push
call
mov
mov
or
test
push
mov
aas
test
pusha
pusha
inc
mov
aad
push
xor
jl
or
and
mov
lcall
adc
xchg
loopne
sub
mov
and
rol
dec
mov
cmp
jp
pusha
adcb
add
sbb
push
push
xor
cli
xchg
cmp
jge
cmp
mov
sub
lret
push
sbb
and
je
add
adc
mov
or
jmp
and
hlt
adc
int3
mov
nop
popf
jmp
lods
ja
sbb
or
lock
mov
push
sahf
fsubrl
gs
jl
add
sub
int
sbb
mov
inc
movsb
fiaddl
xchg
popa
pop
addr16
inc
pop
lret
xlat
sub
xchg
sti
cmp
add
add
jmp
fistps
adc
filds
outsl
imul
and
or
xor
and
push
arpl
cld
into
cmp
and
sbbb
jmp
push
push
adc
lds
mov
lret
mov
sbb
mov
aas
lret
or
icebp
and
mov
rcl
inc
aam
push
call
push
sbb
int3
in
dec
xor
push
and
add
pop
loopne
jmp
dec
js
xor
and
aaa
stc
mov
sbb
call
aas
inc
daa
push
cmp
pop
and
int3
ret
lods
lds
xor
in
add
cmp
es
in
dec
jne
sbb
fs
lea
xor
cmp
shll
fbstp
adc
pop
inc
clc
cmp
adc
dec
int
popf
jecxz
push
std
cmp
mov
xchg
insl
cmp
idivb
sbb
cmp
fmuls
movsb
rolb
mov
pusha
or
stos
add
and
push
mov
lahf
mov
mov
push
pop
pop
or
pop
xchg
pop
or
dec
cmp
in
sub
lds
fistps
push
jmp
xor
mov
dec
sbb
mov
or
mov
and
xchg
push
fldenv
cmp
mov
cmpsb
roll
call
enter
mov
push
lcall
jae
cltd
sub
push
and
test
push
add
lock
mov
jmp
sub
push
jo
xchg
mov
and
and
inc
mov
adc
sub
push
pop
push
iret
xor
jnp
movsl
popa
and
xlat
mov
fs
jmp
sahf
xlat
pop
pushf
inc
shll
cmp
xchg
enter
fisubl
enter
push
in
leave
sub
mov
ds
shlb
insl
int
inc
or
and
mov
pusha
and
inc
pop
bound
inc
inc
insb
ja
scas
enter
daa
fsub
ret
sahf
sub
nop
push
pop
and
fdivrs
sub
or
popa
mov
movq
xor
mov
adc
or
enter
push
scas
icebp
adc
mov
leave
add
mov
mov
fmull
add
negl
repnz
sub
cs
pop
mov
jo
xchg
clc
test
pushf
dec
or
loopne
lsl
jb
mov
or
dec
xor
xor
jo
add
movsl
in
out
popa
notb
xchg
fiaddl
bound
xchg
dec
adc
mov
jp
fwait
xchg
lods
imul
sub
adc
xchg
cmpl
int
or
adc
std
aam
imul
mov
shlb
lret
lods
pushf
fmuls
sub
clc
jb
insl
sub
inc
stos
jns
add
and
xchg
add
pop
ja
int3
push
or
stos
adcl
inc
lea
jmp
mov
and
ds
arpl
inc
cs
push
arpl
inc
loop
pop
pop
adcl
or
inc
push
sbb
push
or
jb
icebp
repnz
and
and
and
sti
orl
cld
std
decl
enter
loop
enter
in
enter
out
call
jmp
xor
in
in
out
out
or
enter
shlb
enter
aam
enter
xlat
fsubs
orl
fcmovu
orl
or
enter
ret
and
and
and
lret
orl
int3
int
iret
or
enter
mov
enter
mov
int3
and
sbbl
fadds
in
data16
add
add
xor
push
test
add
or
sub
xlat
ds
or
adc
aam
loopne
mov
pusha
add
xchg
addr16
push
inc
sbb
push
or
je
imul
inc
dec
cld
or
mov
sub
mov
aad
pop
data16
divb
nop
inc
xchg
or
mov
push
push
add
xor
push
sub
ja
fistps
je
fwait
subl
data16
leave
mov
dec
je
arpl
sti
dec
xorb
adc
inc
add
fiadds
test
inc
shrb
imul
mov
into
daa
push
outsb
int
mov
sbb
aam
pop
jo
outsl
sbb
mov
mov
jae
add
sbb
or
mov
dec
add
dec
jb
and
or
pxor
add
push
pop
testl
into
or
int3
insl
sub
addr16
insl
inc
insb
aad
push
in
std
jge
je
iret
insl
dec
outsl
jo
je
pop
inc
in
shll
or
adc
gs
lea
and
add
mov
xor
in
mov
xchg
adc
loopne
pop
ret
gs
outsl
or
adc
xor
ja
jb
fisttpl
dec
lcall
add
mov
jge
jp
aaa
or
xor
adc
inc
inc
xor
pop
inc
imul
outsb
jb
jae
es
outsl
in
adc
rol
imul
int3
ss
fbstp
add
test
jmp
dec
add
pop
sub
insl
add
push
cmova
xor
scas
adc
imul
cmpsl
inc
xorl
outsb
add
es
mov
and
in
pushf
in
mov
mov
hlt
orb
inc
insl
aas
adc
pop
lret
add
outsl
add
aam
adc
inc
out
xchg
xchg
pop
aas
and
sbb
nop
cmp
pop
xor
jmp
adc
js
and
dec
gs
insb
test
pop
dec
rcl
arpl
sub
xor
in
pop
cmp
shlb
xorb
aaa
and
jmp
mov
jge
inc
roll
insb
lahf
sub
xchg
pop
sbb
imull
jb
xchg
add
mov
sahf
pop
sbb
les
gs
adc
push
cmp
sbbl
add
add
aam
xor
shll
or
and
ljmp
push
sbb
lcall
sbb
push
sbb
call
pop
imul
cmp
add
movsb
loop
and
mov
add
lds
lea
xchg
mov
loopne
addr16
pop
in
test
push
pop
daa
adc
jecxz
xchg
outsl
push
rclb
in
sbb
pop
mov
jne
sbb
push
movsl
shll
adcb
add
aas
pop
or
mov
sarb
rcl
cs
and
or
add
sbb
add
cmpsl
pushf
outsb
sub
pop
aas
pop
addr16
dec
mov
addl
jo
jb
mov
jle
jge
jne
outsb
adc
movsb
sbb
xchg
in
or
push
mov
push
fs
in
add
push
inc
add
popa
inc
insl
inc
jg
and
add
push
gs
dec
outsl
ja
xlat
ret
and
adc
push
std
push
xchg
add
and
dec
jae
dec
mov
ja
loop
push
inc
and
faddl
out
jns
push
sbb
pop
push
dec
mov
fsubrl
jmp
lret
push
mov
jno
outsl
jnp
adc
mov
sbb
jo
mov
sbb
jo
and
jo
inc
imul
nop
daa
inc
push
xchg
sbb
fs
cmc
hlt
test
mov
clc
stos
pop
jae
imul
pop
jl
pavgb
pop
fsubs
add
mov
mov
sub
xorl
mov
jns
mov
jns
jnp
mull
mov
or
fadds
fnsave
insb
lcall
aad
cmpsl
es
pop
add
test
push
push
testb
add
mov
push
sub
xor
clc
orl
sti
inc
test
pop
inc
out
lcall
cmp
movsb
ds
cmp
out
pop
and
cmc
push
sub
xor
add
dec
pop
sbb
push
ljmp
pop
seta
jbe
mov
lods
movb
jno
sbb
add
je
insl
xor
push
add
aas
test
and
push
or
push
ds
push
push
dec
insl
popa
push
xor
inc
fwait
dec
xor
and
test
push
rorb
push
in
ror
push
lods
ret
nop
nop
mov
add
mov
cmp
sbb
sbb
push
mov
or
mov
es
lret
xlat
outsb
stos
pop
test
mov
les
mov
lock
push
xor
pop
mov
or
push
pop
push
mov
test
inc
inc
mov
jg
je,pt
add
push
int3
lds
shrb
fsubs
jne
inc
xchg
sbb
mov
or
xchg
lret
xchg
xlat
loopne
pusha
fsts
pop
enter
insb
or
jg
push
push
loope
jmp
mov
aas
hlt
push
dec
jmp
fimull
aas
push
out
das
test
enter
push
js
fadds
adc
xchg
pop
ret
pusha
in
and
sbb
inc
into
mov
andb
mov
in
xchg
push
or
pop
lcall
pop
js
jns
add
out
add
das
xor
je
mov
inc
mov
cmp
pop
dec
push
rcr
push
push
push
push
out
add
imul
icebp
das
insb
xchg
push
test
ja
insb
pop
xchg
dec
pop
sbb
mov
cmpsl
xorb
gs
shll
mov
cmp
dec
mov
pop
ljmp
push
out
rorl
rol
xor
inc
das
sbb
loope
jne
out
mov
mov
movsb
and
push
pop
int
push
xor
jo
xor
ja
xor
mov
adc
adc
je
jle
xor
jmp
mov
cwtl
std
inc
sbb
or
jmp
pop
and
fcmovnu
aaa
rorl
cmp
xor
add
stc
mov
adc
mov
or
mov
dec
setne
push
dec
or
push
test
popa
loope
push
clc
inc
gs
inc
sbb
sarl
nop
ret
jne
lahf
push
add
pusha
enter
lds
xchg
das
sub
or
movsb
xor
mov
or
xchg
inc
notl
sub
xchg
lret
add
or
dec
outsl
insl
sbb
pusha
dec
fistl
sub
fsubrs
mov
jecxz
xor
jmp
add
inc
or
xor
outsb
notl
aaa
pushf
movsl
xor
adc
mov
add
xlat
cmp
and
sub
inc
aaa
lahf
mov
leave
imul
mov
scas
repnz
inc
push
jle
aad
enter
sbb
int
rolb
lahf
lret
xor
cmpl
mov
loope
jge
pop
je
in
andl
pop
dec
mov
or
lea
adc
repnz
and
push
push
or
popa
or
adc
orb
andl
mov
shll
add
mov
mov
cmpsb
xor
lret
pop
adc
clc
mov
cmpb
pop
adc
loope
inc
add
out
test
cmp
arpl
push
or
loop
jnp
outsl
testb
xor
or
dec
cmp
subl
dec
add
jns
push
adc
jmp
cmp
inc
push
gs
pop
sbb
mov
add
jb
add
dec
xchg
dec
mov
pop
jg
ja
mov
jne
or
ds
inc
jne
push
jno
popa
mov
mov
or
jbe
adcl
add
shlb
shl
movsb
inc
dec
addr16
test
mov
or
jae
cs
inc
es
shlb
push
inc
add
push
or
das
inc
push
addr16
sti
inc
and
inc
je
inc
push
xchg
push
outsl
es
lods
insb
mov
test
adc
sub
or
jg
sub
mov
inc
xlat
fwait
daa
shlb
lds
xchg
fs
sub
mov
lahf
sbb
leave
sbb
pop
or
subb
push
mulsd
push
or
inc
jg
leave
insl
or
adc
mov
pusha
pop
adc
andl
inc
pop
and
imul
std
pop
push
outsb
jne
or
aaa
pop
xchg
es
call
das
lahf
dec
dec
popl
subl
push
arpl
add
scas
jecxz
inc
xor
rorl
cmp
nop
xchg
dec
inc
iret
es
inc
das
or
inc
sub
and
add
push
imul
add
loopne
lcall
jb
mov
xor
add
in
test
mov
pop
testw
pop
inc
dec
inc
push
push
inc
sbb
shlb
ja
inc
inc
inc
jg
imul
dec
inc
dec
les
xchg
inc
inc
push
filds
dec
inc
push
dec
dec
push
mov
push
ret
fiaddl
xchg
inc
dec
dec
and
pop
enter
inc
inc
xor
xor
adc
xor
dec
inc
xor
xchg
inc
push
inc
inc
dec
notb
out
cmpsb
addb
lea
push
frstor
cs
lock
lock
inc
inc
das
mov
fsub
test
pop
dec
jl
jae
pop
adc
push
push
push
dec
push
inc
icebp
xchg
jl
scas
dec
inc
dec
push
mov
mov
nopl
or
mov
jo
dec
mov
inc
xchg
adc
add
push
add
and
gs
mov
aaa
mov
out
negl
or
sbbb
add
add
pushf
xor
add
or
pop
mov
lea
mov
and
mov
mov
sbb
test
sbb
mov
push
mov
jmp
and
xor
cmpsl
ja
inc
insb
movsl
mov
sbb
ret
xor
cmp
pop
mov
adc
push
adc
or
nop
fiadds
gs
adc
mov
aam
add
mov
jg
xchg
js
mov
scas
addl
push
xchg
dec
xchg
dec
xor
cltd
jp
sbb
into
subl
mov
mov
dec
lcall
adc
push
shrl
xchg
loop
rclb
or
or
and
xchg
add
cmp
test
psubd
cltd
add
pop
lods
adc
mov
dec
jb
jne
test
jae
xchg
pushf
jbe
jmp
test
fidivl
pop
push
cmp
sbb
das
add
dec
mov
out
inc
repnz
mov
add
sbb
in
test
ret
adc
mov
lds
dec
testl
mov
out
or
enter
shll
mov
or
nop
stos
xor
dec
inc
outsb
sbb
inc
aam
add
or
sbb
inc
sbb
xlat
lret
mov
inc
add
orb
pop
jno
mov
mov
mov
fisubs
xchg
js
sbb
fimuls
imul
add
fdivs
xor
push
push
or
sarl
sub
dec
or
adcb
pop
sbb
dec
or
push
movb
push
pop
lods
or
in
mov
out
call
mov
xchg
mov
mov
repz
aam
push
fsubs
dec
jno
adc
ret
arpl
mov
adc
sbb
push
inc
les
pop
ja
stos
xor
testl
lea
sub
jl
cmp
mov
jo
sub
popf
dec
test
mov
shrl
mov
fsubs
xor
push
das
fbld
mov
adc
mov
sbb
test
push
mov
sahf
inc
lahf
mov
or
dec
aam
outsb
inc
sbb
les
bound
rclb
nop
sbb
jns
stos
dec
aaa
mov
dec
and
pop
les
movb
das
inc
enter
and
nop
push
add
les
xchg
pop
enter
jbe
rolb
and
jns
nop
add
sub
jge
movsl
mov
add
jns
adcb
nop
xchg
or
sbb
or
movl
cmpb
rclb
pusha
push
add
in
push
and
js
test
lret
ret
cmp
sbb
xchg
movsl
clc
movzwl
sbb
in
cs
repnz
push
orb
adc
ss
pop
cmpsb
lret
or
or
jle
cmp
or
lock
mov
adc
or
pop
push
dec
or
sbb
adc
xchg
mov
repnz
sub
sub
push
dec
mov
mov
leave
and
pop
mov
fs
push
nop
outsl
push
adc
push
aas
dec
es
lds
repnz
mov
mov
out
mov
fimull
jl
mov
and
and
add
push
xor
sbb
mov
bound
push
std
mov
sub
mov
cwtl
pcmpgtd
xor
mov
test
pusha
and
in
fists
and
dec
sbb
ret
addb
adc
xchg
or
adc
add
add
stc
sub
gs
lock
mov
and
add
sub
ret
ret
popa
les
aaa
adc
inc
cmp
or
bnd
cmp
nop
inc
and
imul
loope
cmp
add
xor
test
movl
or
inc
test
test
lods
xchg
xchg
out
insb
jp
adc
xchg
mov
js
inc
and
mov
lcall
mov
les
aad
add
or
adc
inc
mov
popa
insb
mov
addb
and
or
hlt
popf
inc
lock
in
push
roll
xor
push
mov
sub
and
int3
outsb
or
sub
or
or
popf
std
outsb
jns
push
push
or
push
sub
push
pop
call
data16
insl
jge
xor
inc
xchg
push
cmpsb
es
aam
movsb
xor
mov
lds
sbb
cmp
mov
jnp
iret
shrl
es
imul
and
xchg
and
nopl
pop
mov
movsb
subb
pop
rcll
mov
jle
inc
mov
pop
fdivrs
push
mov
mov
in
and
cwtl
or
and
nop
xor
dec
fldt
dec
push
into
pop
shll
add
outsl
or
arpl
push
incl
sbb
sbb
inc
test
dec
mov
mov
push
mov
and
pop
fadds
in
cs
sbb
iret
jne
xchg
leave
mov
xchg
push
addl
popa
inc
mov
in
sbb
pop
sub
add
mov
ja
pop
repnz
popa
mov
pop
ss
push
loop
adc
int3
adc
lcall
pop
out
or
inc
dec
adc
aaa
daa
fld
dec
jbe
sub
push
add
mov
pop
xor
or
xor
negl
sub
cmp
dec
inc
cs
add
movsb
xchg
rorb
iret
xchg
in
push
sbb
adc
dec
repnz
pop
push
lods
xchg
xor
xadd
pushf
push
int
cmp
ror
add
rorl
and
je
mov
clc
xchg
popa
gs
mov
dec
jg
mov
cmp
cmpsl
inc
inc
push
add
jecxz
leave
mov
pusha
data16
and
in
jmp
mov
mov
cmp
je
pop
sbb
aaa
mov
mov
enter
call
sub
add
add
pop
fdivrl
fmuls
test
dec
and
addl
addl
adc
sbb
jp
push
incl
adc
lock
or
and
mov
je
lds
add
and
xchg
add
ljmp
ja
js
add
mov
add
subl
or
add
ljmp
xor
push
shr
xchg
mov
decb
je
fs
lcall
sarb
adc
sbb
enter
in
and
add
arpl
cmp
andb
add
jl
orl
decl
or
xor
sti
jnp
mov
out
ds
jo
mov
enter
cwtl
aas
nop
lahf
sub
xchg
inc
loop
sbb
cmp
jnp
cmp
xchg
mov
xchg
inc
xchg
inc
jg
xchg
dec
xor
sbb
dec
dec
mov
inc
or
insl
dec
loop
sahf
ss
test
cltd
cmp
inc
push
push
dec
les
mov
xchg
cwtl
push
scas
fs
frstor
add
adc
ret
adc
aaa
jmp
mov
adc
addl
cwtl
mov
lret
rcrb
int
hlt
xor
fwait
popa
fcoml
call
sahf
fs
cs
jl
sbb
xchg
add
xor
push
add
cmc
lcall
jno
aam
dec
dec
sahf
pop
lock
mov
inc
movsl
push
mov
in
push
call
and
lock
mov
fcmovnb
outsb
loopne
out
pop
push
fsubl
push
xchg
fimull
push
fcmovnu
into
adc
mov
adc
adc
daa
xchg
test
sub
or
ljmp
movsl
cmpsl
mov
shl
adc
mov
adc
divl
shl
and
mov
jl
filds
sar
vmread
outsb
adc
dec
ds
out
in
ret
cmp
adc
jne
push
add
and
js
cmp
insb
jb
mov
mov
add
popf
mov
cli
pushf
push
ret
push
aaa
push
xchg
xchg
and
fwait
rcrl
xor
sub
fdivrl
add
pusha
fwait
fs
and
jge
jnp
pop
xor
mov
insb
cmpsb
and
fsubl
and
shrw
jg
ljmp
lock
jmp
jns
cmp
dec
mov
sbb
xor
inc
fsubrl
add
js
mov
sbb
lcall
push
or
inc
or
fcomp
add
pop
daa
outsl
adc
je
dec
lds
add
inc
mov
cmp
adc
sarb
les
and
mov
ds
lea
add
mov
or
add
and
das
add
dec
adc
scas
faddp
inc
adc
jmp
and
cmp
and
dec
jle
bnd
sub
dec
add
pop
cmpb
pop
pop
push
add
jne
mov
push
jge
adc
jecxz
mov
adc
adc
sbb
mov
fs
inc
add
stos
scas
aam
mov
in
in
daa
orl
and
enter
mov
dec
jns
jmp
mov
and
mov
sub
shl
fiaddl
or
jmp
dec
mov
movw
imul
push
add
repz
mov
push
jno
mov
jl
fstpl
jp
or
idiv
pop
cmp
cld
daa
rolb
out
out
insb
xlat
aas
push
aas
add
ret
insl
outsb
xchg
mov
mov
nop
jno
test
mov
push
cmp
mov
cmpsl
daa
jmp
addr16
jns
pop
repnz
sbbb
icebp
push
or
push
rcrb
mov
popf
fisubrl
test
cmp
sahf
xchg
lcall
es
lock
lods
inc
mov
inc
and
or
cmpsl
inc
and
popa
fcmovb
pop
inc
add
xchg
push
dec
pop
sahf
fwait
push
test
pop
pop
push
push
dec
imul
inc
xchg
shrb
mov
and
adc
dec
mov
cmp
push
xchg
sub
fsts
jg
adc
or
lea
insl
testl
xor
loope
add
jmp
iret
fcompl
adc
je
push
push
in
add
and
sub
and
sbb
inc
push
outsb
push
dec
lods
sub
sub
mov
in
cmp
and
push
push
sarb
add
or
ljmp
xorl
cs
addl
pop
shlb
dec
xor
lcall
in
adcl
adc
inc
push
andl
in
dec
adc
sbb
cwtl
inc
sub
out
imul
repnz
jo
loopne
pop
pushf
stos
ror
int3
jp
test
adc
sub
subb
pop
jo
and
insb
pop
cld
push
push
jb
dec
and
mov
jae
mov
cmp
lock
xor
imul
mov
add
scas
fcmovnb
inc
pop
dec
cmpsb
pop
sbb
dec
pop
add
mov
sub
push
xor
sbb
arpl
inc
add
sar
bnd
adc
cmp
jg
test
jle
cmp
jl
fildll
popf
and
dec
cmp
jg
sub
push
insb
leave
nop
dec
subl
pop
pop
xlat
imul
dec
push
pop
jg
xor
sbb
jae
fs
imul
outsl
sbb
pop
mov
dec
mov
in
push
pop
pop
mov
push
std
and
adc
das
pop
fcomp
sub
jp
mov
test
movsl
xchg
sbb
scas
mov
xorb
movsl
pop
out
in
or
lds
mov
mov
fdivrs
inc
cmp
jge
mov
loopne
and
lret
test
lods
mov
adc
xchg
ss
ret
imul
sub
loopne
ja
in
jl
push
cmp
dec
cmp
pop
pusha
jne
into
aam
mov
mov
adc
imul
inc
popa
xchg
xor
cli
mov
popl
movsb
ss
or
add
sub
loope
pusha
cmp
dec
movsl
loop
ljmp
mov
pop
repnz
jecxz
orb
and
sbb
aas
cmp
clc
xchg
pop
cwtl
mov
aas
sbb
fildll
sbb
imul
sbb
add
or
outsb
sbb
pop
repnz
cmp
push
mov
inc
push
push
xor
les
cmp
mov
push
pop
mov
test
inc
and
addr16
loope
or
mov
aaa
repnz
pop
cmp
or
ljmp
in
stos
sbb
mov
ss
xchg
xchg
pop
jnp
jmp
xor
inc
mov
int
sarb
fildll
or
sbb
data16
test
lock
dec
sbb
aas
sbb
sbb
sub
adc
lea
and
loopne
inc
ds
sub
add
adc
inc
add
das
loopne
jge
cmovs
push
jg
lock
adc
in
adc
test
adc
or
dec
loope
and
insb
mov
push
xor
inc
and
mov
mov
and
scas
mov
and
cmp
mov
movsb
mov
jne
push
xor
mov
cmpsb
push
add
adc
negb
add
or
dec
shll
adc
sub
pop
lret
mov
add
pop
popf
ret
inc
or
addb
or
xchg
cwtl
dec
or
rorl
fsubs
jecxz
jns
adc
call
out
inc
pop
add
adc
pop
xor
inc
aad
lea
mov
push
arpl
push
inc
jmp
popf
out
push
nop
cmpsb
clc
stos
imul
and
push
push
cmp
cmpb
push
sbb
pushf
call
cmpsl
lods
mov
out
imul
adc
push
scas
test
addl
pop
xchg
ja
enter
pop
in
hlt
int3
pusha
and
dec
repnz
mov
adc
fs
loopne
insb
pop
cmpb
and
data16
mov
push
pusha
push
add
sub
daa
shlb
lods
add
fmuls
fidivl
out
jg
push
in
mov
mov
or
lods
mov
push
insl
and
mov
lods
cmpsl
mov
mov
jg
mov
pop
or
add
dec
clc
test
pusha
xchg
in
in
sbb
mov
stos
push
push
out
sti
fcoml
clc
call
pushf
imul
inc
and
xchg
mov
inc
movb
scas
adc
and
push
sarb
inc
dec
aaa
pop
sbb
in
mov
xor
mov
je
mov
sub
das
and
orl
in
push
adc
mov
cmp
push
imul
or
jb
test
loop
dec
popa
xchg
test
cs
push
xchg
cmp
insb
sub
lods
pop
xor
je
sub
jae
cli
or
ljmp
dec
out
xchg
outsl
std
inc
sbb
push
insl
sbb
or
sbb
dec
inc
adc
fstl
xchg
or
out
cmp
clc
subl
inc
loopne
push
dec
stos
inc
rorb
sbb
push
dec
cmp
test
aas
sub
sti
sub
push
pop
adc
xchg
fcoml
push
out
cmpsl
pop
ret
or
adc
pop
fidivrl
cmp
rorl
and
adc
ds
add
stc
lahf
insl
lret
adc
dec
xor
mov
mov
push
add
add
movsb
jg
loopne
push
shrb
sub
daa
in
movsl
push
adc
pop
add
orl
adcl
fldcw
sub
push
inc
add
das
clc
mov
mov
das
jns
enter
in
mov
pushf
test
fdiv
mov
pop
sti
es
push
dec
dec
push
ficoml
xor
pop
js
pop
fs
or
outsl
push
sbb
push
sbb
cmc
adc
js
dec
jne
xchg
adc
jge
inc
loop
adc
sbbl
outsl
dec
sub
lods
adc
inc
sub
pop
fcomps
sahf
add
or
push
das
push
fisubrl
sarb
mov
and
push
xor
cmpsl
daa
cs
inc
dec
jb
dec
lods
cmp
pop
jb
or
movb
clc
in
and
xchg
pusha
push
jo
sbb
inc
aam
mov
dec
ret
scas
pop
pop
filds
and
jo
outsl
test
sub
aaa
adc
pusha
xchg
sbb
mov
mov
jb
mov
and
or
nop
add
pop
mov
dec
dec
shll
and
mov
jno
mov
push
lods
bound
stc
inc
sbb
je
cmp
sub
fwait
xchg
outsl
mov
incl
cltd
dec
shr
jge
pushf
cwtl
mov
fadds
call
pushf
mov
pop
movsl
notl
and
adc
inc
or
test
or
mov
push
adc
sbb
sub
sar
xlat
pop
add
mov
jle
call
fmuls
pop
adc
les
and
cwtl
cs
icebp
pop
and
sbb
faddl
shll
or
xor
lcall
sub
adc
inc
inc
and
jmp
dec
push
or
push
and
push
push
pop
add
xor
xor
cld
sbb
aam
fildll
cmpb
test
sbb
sarb
adc
add
loope
stc
xchg
nop
xlat
inc
imul
mov
adc
or
cmp
sub
fists
or
jmp
arpl
sub
xchg
push
aaa
or
xor
stc
push
jo
xchg
ret
decb
push
xor
jl
xchg
inc
or
xor
sbb
sbb
sub
and
cmp
andb
mov
dec
mov
js
mov
pop
mov
lcall
dec
mov
nop
sub
sbb
add
pop
mov
inc
fildll
cmpsb
sti
xor
vmovapd
xor
ljmp
inc
lcall
or
popa
rolb
mov
mov
enter
adc
mov
adc
add
divl
and
adc
stos
and
mov
add
leave
shll
pop
push
mov
mov
imul
fisttps
mov
and
adc
int3
jns
dec
fcomps
js
pop
jbe
rclb
lret
add
lock
pop
lcall
or
in
repnz
pusha
and
pusha
shl
div
cli
dec
or
adc
sub
test
xchg
mov
and
inc
and
mov
pushfw
popl
xchg
pop
aaa
loopne
mov
mov
scas
stos
push
je
sahf
and
clc
ror
iret
arpl
jno
jae
xor
adc
sbb
mov
imul
cli
cmp
inc
mov
adc
push
sahf
js
cmpsl
cmp
pusha
add
jne
sub
insl
pop
mov
xchg
and
outsb
sbb
negl
push
mov
mov
fs
mov
jmp
push
mov
pusha
shll
push
dec
cli
gs
cwtl
lea
sbb
scas
and
fs
lcall
nop
sub
or
add
adc
xor
and
add
sarb
xchg
jmp
je
push
push
lods
shll
je
xchg
ljmp
fs
repnz
and
sbb
pusha
imul
inc
loope
or
mov
xor
push
add
push
inc
push
xchg
inc
and
rclb
leave
cmpsb
int
mov
pop
push
add
jle
add
movsb
cmp
cwtl
mov
pop
and
and
pop
inc
sub
inc
insb
jle
rol
js
xchg
adc
test
pop
inc
sub
xchg
gs
js
xchg
dec
mov
mov
aaa
stc
sbb
mov
mov
jmp
in
inc
pop
xor
add
mov
jbe
notb
push
loopne
and
mov
enter
mov
ss
sbb
push
mov
je
subl
pop
mov
sbb
add
xchg
stos
decl
adc
fistl
or
ds
arpl
test
push
inc
pop
cmpsl
or
pop
daa
dec
rcl
jo
inc
into
xchg
push
pop
pop
loop
sub
out
fcmove
dec
pop
add
xor
inc
imul
adc
cmpsl
adc
out
dec
inc
sahf
inc
addr16
dec
dec
or
and
iret
add
dec
adc
or
pop
mov
and
ret
aad
sub
rorl
push
adc
dec
iret
scas
push
shl
pop
sub
sbb
cmp
mov
xor
jns
cmp
int
sbb
sbb
mov
adc
in
inc
or
ficoml
push
sub
ret
push
mov
sbb
push
arpl
mov
push
popa
pushf
das
add
adc
sub
nop
sub
and
lahf
and
arpl
xchg
ss
or
xor
mov
aas
sbb
lcall
sbb
cltd
or
loopne
xor
sbb
or
inc
fsts
inc
imul
aaa
scas
movsb
icebp
bound
xor
in
jb
dec
lea
sub
adc
pop
cmp
pop
push
icebp
add
and
push
inc
and
imul
daa
cmp
mov
adc
and
mov
sarb
or
out
scas
add
movsl
and
cmpl
and
inc
je
leave
enter
and
and
ss
mov
mov
enter
cmpsb
xor
ret
test
xchg
or
ds
sbb
sbb
mov
adc
adc
stc
shrb
xchg
fadds
xor
dec
int
notl
sbb
loop
lods
fidivs
inc
sub
loope
int
lcall
fidivrs
sub
clc
push
loopne
sbbl
hlt
pop
rcll
or
sub
data16
das
inc
or
ret
call
in
push
pop
pop
cmp
movswl
in
ret
sbbb
xlat
xchg
out
into
mov
dec
rorb
fimull
push
dec
test
int3
imul
in
sahf
mov
xchg
dec
repz
data16
mov
or
or
cld
std
push
add
mov
es
mov
mov
je
xchg
mov
inc
sti
sub
and
push
in
ss
sub
in
or
je
add
sbb
push
jo
test
mov
push
sbb
icebp
sub
roll
imul
push
and
js
out
lret
addb
adc
je
es
fdivs
popa
xchg
jmp
stos
mov
scas
or
sub
stc
adc
fstpl
xchg
inc
adc
push
sbb
sbb
add
fisttpll
or
lea
jnp
or
and
adcb
dec
fcompl
dec
aaa
pop
sbb
mov
or
ret
add
pop
push
hlt
add
inc
adc
pop
fs
mov
xor
mov
push
sbb
dec
xor
pop
loope
cmp
or
add
or
adc
pop
mov
sbb
adc
pop
xchg
or
filds
pop
enter
inc
ret
orb
push
enter
rcr
cmp
xor
aam
ret
ret
mov
enter
pushf
mov
cmc
inc
pop
add
movsl
push
dec
or
sub
and
lock
subl
fs
test
dec
sbb
dec
dec
mov
jecxz
mov
xchg
jb
or
mov
sbb
dec
fsubs
sbb
sbb
mov
adc
add
push
int3
or
out
push
hlt
xchg
mov
insl
es
add
cmp
pop
jmp
mov
xchg
xor
push
or
test
push
adc
pop
cltd
mov
inc
dec
adc
dec
and
inc
add
mov
test
pop
sub
add
pop
scas
fadd
sub
and
or
mov
ja
lds
clc
outsb
push
fmul
jns
push
enter
push
cmc
rorb
movl
adc
xchg
add
mov
mov
movups
cmp
or
ljmp
repnz
mov
xchg
aad
sub
shlb
in
pop
pop
mov
adc
movb
nop
pop
or
cmp
cmp
aas
cs
shll
cmp
iret
pushf
mov
push
test
mov
scas
xor
das
jnp
sub
and
mov
jns
pop
cwtl
shrd
shl
subl
iret
inc
push
or
push
or
cmp
ja
jmp
adc
push
mov
mov
push
jmp
andb
bound
push
push
add
aad
sbb
pop
push
enter
and
cmpl
aam
or
push
sbb
movb
sbb
ret
cmp
cmpsl
imul
mov
pusha
dec
mov
popa
dec
imul
cmp
sbb
dec
mov
and
inc
movsl
aaa
sub
cltd
jbe
add
mov
and
es
outsl
lods
xchg
je
imul
test
leave
xchg
lods
dec
cs
adcb
mov
rorl
and
dec
sti
fisubrl
and
mov
push
or
pop
mov
inc
sti
xor
iret
mov
add
das
dec
mov
cld
xchg
fs
push
js
enter
add
pop
fs
mov
sub
in
push
jbe
push
xor
adc
dec
lds
mov
lret
or
nop
out
pop
inc
pop
rorb
fnstenv
push
mov
jecxz
push
fdiv
int
adc
dec
mov
sbb
dec
bound
in
orps
lock
test
pop
and
int
mov
pop
int
fwait
fcoml
pusha
pop
xor
pusha
leave
inc
nop
bound
aad
xor
cmp
jne
leave
xchg
ljmp
add
jne
lahf
push
dec
and
pop
mov
out
dec
movsl
jne
mov
mov
or
daa
fs
roll
jae
xorb
fstpt
je
mov
mov
imul
pop
fsubrl
mov
or
insl
nop
sub
sahf
add
sbb
jns
jl
sar
xchg
call
cwtl
loopne
lahf
mov
stc
jp
les
cmp
and
lock
and
xchg
push
xor
cmp
mov
in
mov
rcl
or
xlat
pop
das
out
not
add
add
push
push
mov
es
sbb
jmp
or
inc
loopne
dec
pop
js
cmp
jne
imul
add
or
stos
mov
sub
movsl
jno
or
sbb
sbb
and
sbb
sbb
insb
xchg
cmc
add
sub
sbb
js
and
inc
rclb
pop
mov
cwtl
pop
popa
test
xorl
in
loop
mov
stc
sub
pop
or
inc
adc
or
scas
or
and
add
bound
aas
fisttps
dec
in
aam
mov
cmpb
add
rcrb
add
inc
dec
or
flds
adc
es
inc
pusha
adc
sahf
call
sbb
mov
out
adc
and
push
fmull
xchg
adc
mulb
add
insb
push
and
lods
ss
fistpl
int
jp
xchg
cmpsl
push
or
mov
in
sub
xor
or
inc
je
sbb
lea
cmpsl
hlt
mov
cld
pusha
stos
aad
jg
ds
in
nop
add
je
movb
add
or
and
fstl
sbb
gs
in
jmp
outsl
jbe
mulb
or
push
fadds
adc
imul
inc
mov
bound
call
je
inc
out
add
mov
test
dec
dec
outsb
in
xor
cmp
jne
mov
xor
test
xchg
jae
aad
add
in
repz
mov
xchg
lock
xchg
pop
stos
sbbb
inc
loopne
mov
pop
repnz
jbe
imul
jg
xor
sahf
cs
cmp
pusha
pop
out
mov
rcrb
push
inc
fsubrp
mov
out
into
sbb
inc
or
loope
xorl
bound
mov
test
pusha
pop
adc
rcrl
jnp
test
add
loopne
adc
bound
or
lds
call
xor
andl
loopne
cmp
les
sbb
jo
add
adc
clc
jbe
xor
loopne
lock
clc
dec
and
or
lods
lcall
rcrl
inc
jo
je
pop
mov
mov
or
cmp
and
sub
sub
cmpsb
or
and
test
test
pop
jbe
dec
jmp
int3
inc
nop
call
xchg
mov
iret
push
mov
and
mov
xor
and
aas
add
xchg
xchg
fcmovbe
push
shlb
rorb
sbb
sbb
add
sbb
adc
int3
out
nop
dec
fcmovnb
bound
daa
sarb
sub
push
dec
inc
or
iret
sbb
mov
mov
sbb
mov
ds
or
mov
mull
cmpl
rcr
inc
addr16
sbb
aad
jbe
adc
hlt
mov
nop
mov
movsb
cmp
enter
or
push
ret
mov
inc
rclb
adc
fsubrp
test
mov
in
cmpsb
lock
imul
js
lea
enter
push
hlt
jns
pop
ret
enter
popa
pop
lea
lcall
adc
lea
aaa
fmuls
aaa
mov
movl
and
je
pop
mov
push
cmpb
sbb
insb
and
xor
inc
sub
adc
mov
push
xor
dec
shll
xor
push
lock
xchg
xlat
sbb
addb
outsl
or
add
sub
roll
jle
sub
and
loope
and
push
and
fisttpl
push
fiaddl
lds
in
das
ror
call
push
das
in
xorl
lods
and
sub
adcb
cwtl
jmp
out
loop
pop
popf
ja
push
mov
ret
cmp
xchg
jge
sbb
add
je
fdivrs
xor
xchg
clc
mov
pop
ret
popa
test
mov
sub
subb
jo
sbb
add
es
aad
cmp
insb
ret
rolb
das
xorb
dec
lret
lods
push
add
cmpl
ffree
sub
xor
enter
mov
insl
and
rorl
xor
ja
sub
pop
les
mov
xor
shll
xor
lret
int
sub
xor
push
push
test
mov
sub
call
ret
shr
or
adc
mov
cmp
and
sbb
dec
jl
and
push
imul
sbb
ja
ljmp
popa
push
sub
dec
sub
scas
rol
xor
cmp
cmp
add
push
gs
push
ret
cld
pusha
jbe
mov
repz
dec
data16
sbb
call
sub
mov
insl
inc
imul
test
pop
leave
mov
insb
roll
arpl
adc
mov
and
add
fwait
xchg
call
cmp
pop
dec
inc
or
inc
xchg
sub
aaa
repz
and
dec
iret
pop
add
add
pusha
shrl
xor
jnp
mov
sbb
andl
ret
or
inc
or
sub
pop
sbb
mov
loopne
and
enter
fnstsw
imul
push
lock
fimuls
out
inc
jo
jnp
xorl
and
enter
dec
inc
and
mov
jecxz
stos
sub
cmpsb
mov
pop
shrl
and
jo
adc
insb
add
xchg
fchs
mov
fdivr
sbb
out
lock
lret
icebp
or
add
loope
mov
add
inc
jbe
xlat
xor
pop
mov
shlb
mov
add
add
cld
mov
adc
pop
sbb
or
or
add
sub
pop
cmp
sub
jmp
pop
inc
aaa
sbb
adc
ret
decb
stos
aam
pop
adc
pop
test
arpl
sbb
in
fwait
mov
shr
pop
ja
dec
jecxz
pop
xor
int3
sub
or
xchg
adc
or
pop
jb
shll
gs
pop
fists
add
mov
jae
sbb
sbb
add
add
dec
or
or
test
adc
dec
gs
adc
push
ja
jae
push
sbb
das
repnz
mov
pop
sub
popa
test
xchg
pop
aaa
iret
jne
or
add
imul
sub
push
aaa
push
xchg
push
outsl
adc
hlt
mov
jbe
jbe
aaa
xchg
dec
jl
jbe
sbb
pop
sub
out
pop
lods
shl
push
sub
push
mov
mov
daa
xor
aad
out
or
xor
fimull
mov
test
fidivrs
sbb
xor
les
movb
adc
clc
pop
xor
mov
test
cmpsl
and
loop
jae
xchg
xchg
adc
mov
mov
inc
aas
cmp
mov
or
fnstenv
ss
adc
mov
xor
jecxz
pop
lods
popf
sbb
push
push
leave
cmp
das
insl
adc
inc
mov
push
sub
ljmp
mov
sbb
movsb
int3
cmp
adc
mov
inc
xor
pop
push
pop
nop
xor
out
jge
xor
dec
or
adc
ficomps
rcrb
xor
test
pop
pop
pusha
and
fadds
jecxz
nop
cs
insl
enter
insb
sbb
push
mov
icebp
mov
add
test
sub
dec
lods
or
adc
lahf
inc
pop
lock
pusha
fildl
mov
je
jo
push
add
dec
or
cmp
icebp
sub
insb
bound
inc
xchg
push
ja
aaa
loope
sbb
cmpl
loope
test
popa
jno
and
pop
jecxz
data16
loope
mov
jne
inc
mov
pop
push
sub
jge
pop
fst
or
dec
imul
or
std
mov
filds
mov
mov
mov
xchg
mov
add
inc
xacquire
mov
out
push
orl
stos
mov
dec
jnp
stos
notb
or
inc
dec
repz
sbb
ret
or
call
shrl
mov
push
push
call
cmp
push
inc
adc
add
andl
mov
add
leave
xchg
and
in
jmp
insb
mov
dec
enter
int
imul
imul
into
ret
neg
and
pop
pop
and
or
rorb
pop
pop
lds
xchg
or
push
dec
or
mov
add
inc
in
xor
popl
add
pop
cmpps
push
inc
push
jmp
cmc
cmp
add
push
in
mov
cmp
sub
add
inc
jo
fs
jecxz
adc
mov
movzbl
jmp
and
jle
outsl
loop
push
mov
or
es
fidivs
mov
pop
call
xchg
in
mov
or
dec
push
add
shll
movl
jo
mov
movsl
dec
lods
adc
shrb
sub
in
loopne
and
sub
jbe
mov
daa
lcall
rcrb
repnz
pop
jecxz
rolb
or
add
and
adc
rolb
imul
int3
or
pop
leave
and
shl
stc
lret
mov
sbb
cmp
add
add
pop
imul
and
sub
inc
cmp
and
cmp
fsubr
in
test
ja
out
or
fadds
sbb
bound
push
dec
and
pop
aam
push
pushf
fs
and
rep
insb
pop
xchg
sbb
adc
and
mov
sub
pushf
out
mov
push
push
call
adc
in
mov
xchg
fcomps
fistl
mov
and
shrb
mov
mov
mov
nop
subb
jo
pop
or
dec
or
repnz
shll
rorb
jecxz
jnp
cmp
stos
sub
sub
int
in
jbe
or
dec
push
jle
xchg
add
outsb
adc
fsubr
sbb
mov
fisttpll
jmp
fldl
out
fsubs
dec
stos
mov
pop
mov
out
pop
int3
cwtl
add
sarl
mov
test
daa
outsb
pop
in
and
arpl
js
rolb
pop
or
inc
pshufw
sbbl
inc
fmuls
cmp
inc
cwtl
xchg
fadds
lods
loopne
data16
sbb
loop
push
out
test
adc
adc
sbb
push
mov
push
xchg
int
std
add
aaa
xchg
mov
lea
dec
adc
push
jns
ja
or
adc
je
xchg
lea
rorb
or
sbb
xchg
loop
inc
shll
xchg
mov
add
or
or
inc
mov
mov
sbb
cs
je
pop
enter
or
mov
push
and
dec
xchg
mov
sub
aas
adc
xor
add
jnp
push
add
test
mov
cmp
roll
int3
ss
loope
mov
or
adc
inc
and
in
dec
xlat
adc
lahf
ja
in
js
ret
lock
sbb
mov
pop
in
arpl
sub
rorl
and
jo
inc
mov
lret
xchg
aam
push
enter
inc
pop
iret
dec
insl
shr
or
ds
pop
movsb
inc
lea
stc
cmp
adc
mov
inc
and
rcll
sbb
sbb
aaa
mov
mov
sbb
mov
repz
sbb
adc
fisubrs
in
hlt
lds
rorb
loopne
loopne
lock
insb
jge
ds
jge
repz
imul
test
aaa
iret
sbb
mov
xorb
jbe
cmpb
mov
or
cmp
ja
test
push
stc
add
mov
push
xchg
scas
fwait
imul
ljmp
add
jmp
lea
add
sub
inc
jbe
or
or
fstpt
and
cmp
jae
inc
jle
les
jne
adc
push
lods
sub
and
pop
dec
xchg
sbb
jbe
adc
shr
or
shlb
sbb
pushf
add
les
test
stos
in
daa
and
daa
popf
push
ja
and
addl
xor
mov
xor
daa
push
dec
inc
and
or
jb
pop
inc
push
loopne
nop
push
mov
jle
test
notb
cmp
xor
jg
fidivrl
testb
je
aaa
pop
push
mov
sarl
mov
mov
test
sub
add
fwait
rolb
es
adc
jle
test
push
inc
pop
imul
out
mov
mov
sub
mov
ss
mulb
es
cmp
fidivl
into
sbb
or
pop
jmp
insl
push
inc
pop
push
adc
fs
or
jne
add
pusha
jle
sub
pop
adc
loop
sub
mov
rcrb
sub
shlb
xchg
lea
mov
inc
push
mov
js
adc
cmp
or
inc
and
leave
insb
jne
adc
sub
add
cmp
push
pusha
push
aaa
enter
cmpsb
add
xor
mov
cli
inc
sti
mov
popf
pop
push
popa
mov
dec
jmp
cli
mov
dec
inc
popa
jmp
adc
xchg
inc
add
icebp
cmp
addr16
or
mov
daa
outsb
mov
pop
inc
adc
inc
xchg
sbb
daa
popa
popa
enter
inc
fildl
mov
dec
lods
rcr
pop
sbb
aam
and
xchg
pop
sub
jb
or
les
and
inc
loope
mov
mov
sahf
xor
imul
aam
aaa
and
ds
testl
xchg
or
mov
icebp
loopne
or
push
cmp
adc
inc
idivb
popa
ja
xor
insl
cmp
pop
push
ret
int3
xchg
xchg
and
inc
sub
and
cmp
lea
das
pusha
xor
sti
or
inc
add
stos
test
add
lret
adc
jecxz
jno
xchg
mov
mov
adc
sbb
iret
notl
outsl
in
loop
or
ret
cmp
sbb
mov
pusha
pop
or
mov
jns
cmp
ret
mov
and
pop
fsubr
aaa
sub
mov
cmp
pop
pusha
sub
mov
mov
cmpsl
mov
pop
stos
je
daa
push
mov
pop
jl
call
adc
pop
jo
aaa
lahf
add
and
mov
jnp
test
cs
mov
mov
faddl
pop
and
xor
inc
or
fsubrl
jecxz
or
outsl
xor
or
mov
fidivrs
inc
xorb
jne
mov
xor
pop
xor
xchg
ja
mov
cltd
add
jb
subb
sbbl
xor
bound
and
cmp
adc
and
lds
adc
push
xor
nop
jo
push
sub
mov
mov
push
mov
pop
test
div
lret
add
movsl
adc
pop
or
push
mov
loop
jne
jbe
and
sbb
fwait
push
sbb
mov
out
mov
nop
lock
sbbl
gs
out
loop
xor
pshufw
lea
jg
subb
ficoml
inc
fs
add
and
adc
add
mov
push
in
pusha
sbb
pop
clc
leave
or
ljmp
dec
pop
sbb
sbb
rcll
pushf
mov
xchg
push
fcmovnbe
and
mov
or
inc
sahf
popf
sub
mov
incb
ret
clc
sbb
adc
and
jne
jg
add
call
insb
push
iret
inc
bound
outsl
jmp
push
enter
ret
pop
ret
and
or
cmp
inc
mov
push
sbb
stc
push
bound
outsl
sbb
test
inc
faddl
icebp
mov
fs
mov
jl
pop
and
adc
or
fsubrs
imul
jns
fcomps
xor
xchg
imul
sub
xor
xchg
fstpl
andl
mov
and
leave
iret
adc
aad
pop
std
sub
inc
insb
popa
aas
mov
sub
sbb
fmuls
lock
push
sti
sarb
push
leave
jae
jl
mov
pop
in
das
sarb
push
xor
pop
hlt
fwait
or
lcall
mov
jbe
in
push
addr16
fisubrs
adc
in
xor
and
loope
add
fsubs
and
psadbw
nop
or
adc
adc
addr16
sarb
inc
fimuls
mov
jmp
lock
jle
mov
cmp
dec
cli
sub
mov
lods
pop
cmp
inc
mov
ret
mov
xchg
xchg
mov
sar
push
adc
mov
sub
xchg
adc
jle
nop
sbb
and
orb
sti
enter
mov
mov
inc
adc
or
fs
mov
iret
mov
or
pusha
int3
scas
iret
sub
xchg
nop
aam
iret
push
push
cmpsl
call
out
adc
pop
dec
push
test
dec
insl
imul
cmp
mov
das
scas
inc
movsl
add
pop
sbb
dec
stos
and
adc
je
push
lea
adc
dec
mov
add
mov
sqrtps
xchg
idiv
lret
add
mov
pop
adc
flds
dec
or
xor
adc
xorb
dec
les
jnp
and
and
add
jl
fcompl
out
std
cmp
std
cmp
sub
xor
mov
xchg
in
loopne
enter
fcom
sarb
lcall
nop
popa
or
rclb
mov
push
sbb
test
sbb
mov
xchg
inc
xchg
out
incb
inc
cs
decb
xchg
cmp
sarl
or
call
add
mov
inc
popa
jne
test
dec
xor
mov
ss
sbb
ja
pusha
mov
mov
and
cmpsb
jmp
fists
movsb
jne
imul
or
add
out
je
pmaxsw
jmp
sub
cld
das
or
fs
arpl
imul
add
push
enter
inc
pop
push
rcr
fsts
and
inc
adc
movsb
mov
insl
pop
es
je
fwait
dec
adc
adc
pop
shrb
or
outsb
imul
jbe
push
ficompl
adc
rol
jp
jb
out
enter
jge
sbb
mov
cmp
jbe
add
push
sbb
push
push
cmp
sbb
inc
sbb
pop
fisubs
cltd
inc
jl
and
or
push
aas
test
or
add
push
pop
cmp
mov
lods
adc
test
sub
outsb
push
push
xor
push
mov
sbb
imul
push
shr
fstl
dec
jmp
jmp
cltd
test
cmpsl
sbb
shr
sub
int3
or
inc
imul
or
mov
push
mov
adc
out
test
adc
scas
popa
movsl
jns
adc
imul
roll
and
add
es
push
push
push
pushl
sbb
loop
cmpsl
ss
xor
lock
mov
cmpb
mov
ja
test
das
adc
xor
sbb
pop
sub
add
xor
sarb
jne
xchg
sub
sub
inc
mov
adc
jl
int3
dec
into
ret
hlt
or
insl
dec
adc
jg
pop
adc
push
lea
lea
cmpb
xlat
mov
inc
and
ds
jb
push
add
lea
mov
sub
shll
push
sub
fists
push
push
dec
inc
pop
cmpsl
leave
repz
insl
and
push
add
push
cmpsb
push
add
iret
inc
push
pop
add
sahf
xchg
clc
pop
push
push
cmpsb
or
leave
pop
or
scas
or
repnz
sub
add
xor
push
cmp
mov
dec
push
sub
test
xor
inc
in
inc
cmp
push
jne
gs
gs
xchg
sbb
test
clc
adc
inc
mov
add
or
push
pop
sbb
imul
jo
push
sub
xchg
insb
sbb
and
xor
and
ds
add
or
jge
adc
popa
cmp
or
mov
inc
pop
add
mov
popa
jns
cs
push
pop
loopne
pop
movl
mov
dec
aam
rorb
add
jns
push
xchg
cli
popa
inc
mov
mov
inc
push
adc
jmp
ret
add
loop
pusha
jne
or
fdivs
cmp
jno
xorb
dec
mov
mov
je
xor
testb
sub
prefetchw
popa
mov
in
clc
aas
aaa
mov
pop
xchg
cld
mov
pop
rcll
mov
addb
cmp
inc
pop
insl
or
xlat
pusha
fs
or
push
add
lcall
enter
or
ja
fbld
and
rclb
dec
out
scas
test
adc
xor
mov
dec
and
pop
fwait
sbb
jo
cmp
xlat
push
inc
jnp
add
rcrl
stos
push
insl
add
sbb
outsb
add
or
adc
aad
sbb
pusha
inc
xor
xchg
arpl
inc
popa
adc
loope
call
dec
add
xchg
and
xor
mov
movl
sbb
fcoms
push
add
dec
aam
add
test
add
rcr
add
mov
jp
xor
cmpsb
imul
push
adcl
gs
gs
aad
or
mov
xor
or
in
into
fiadds
pop
push
add
add
inc
rcrb
or
pop
adcb
mov
and
xchg
push
add
enter
mov
xorb
clc
push
test
xlat
pop
or
cmpl
loope
push
push
js
cld
mov
and
mov
xchg
mov
mov
push
inc
jae
insb
inc
jbe
nop
mov
and
nop
push
testb
aam
jo
push
jo
clc
mov
pop
mov
or
mov
sbb
mov
push
addb
stc
xchg
cmp
movsl
xchg
cwtl
sub
sbb
and
movl
or
scas
jne
ror
xchg
mov
es
rorb
mov
push
sbb
adc
xor
in
sub
jbe
and
ss
andb
and
mov
pop
mov
adc
les
add
jnp
add
add
mov
push
test
mov
jno
jl
sub
xchg
rcll
mov
xor
pusha
or
add
mov
in
and
sub
pop
add
xchg
push
cmpsb
xchg
sbb
sbb
xchg
inc
xchg
push
push
sub
ljmp
dec
pop
icebp
enter
out
cmp
xchg
js
jne
js
sbb
cmp
pop
shlb
js
push
mov
in
mov
fsubl
inc
add
sub
test
insl
fs
push
sbb
loope
add
cmp
add
jne
inc
dec
jle
popa
mov
adc
popf
pop
push
and
adc
bound
push
sub
nop
inc
add
sub
mov
stc
add
je
and
jmp
mov
and
xchg
dec
jae
push
xorb
cmp
rclb
rcrl
xchg
sbb
jg
jne
mov
inc
das
cmp
inc
data16
adc
addr16
mov
roll
mov
fs
mov
cmp
sbb
or
inc
inc
or
fs
or
jecxz
pop
adc
daa
fldl
movsb
cmpsb
jne
das
xchg
icebp
dec
mov
loopne
push
jp
lds
sahf
sub
mov
push
sub
jmp
sub
cmpsb
in
cmp
jo
cmp
xor
mov
pop
addb
inc
pop
fsubl
ret
xor
cwtl
dec
out
or
pop
adc
cmpsl
shlb
push
push
sbb
femms
and
adc
xchg
addb
jle
inc
add
sbb
and
pop
push
and
lret
adc
pop
das
fcoml
and
inc
adc
lret
mov
pop
jnp
dec
pushf
in
sbb
faddl
cmp
shl
inc
dec
lea
aam
sbb
in
fmuls
jnp
int3
or
pop
push
loopne
xchg
andb
xchg
inc
aam
mov
jmp
mov
pusha
and
add
shrb
push
add
loopne
pop
xchg
cmp
insl
dec
or
adc
aam
inc
dec
add
jecxz
aad
sbb
mov
je
xor
addr16
sahf
and
xchg
lock
lock
shlb
shll
and
call
add
push
cld
loope
cltd
icebp
sub
adc
xor
inc
shrl
inc
std
loope
sbb
jbe
fnstenv
test
cmpsl
sub
xchg
and
and
addr16
cwtl
pop
stc
pop
ret
adc
xchg
enter
xchg
adc
xor
sbb
cmp
jns
inc
pop
pop
stos
mov
cmp
clc
mov
sub
and
mov
sub
lea
and
adc
push
add
ss
mov
imul
addr16
add
movsl
leave
adc
test
inc
and
add
dec
je
or
sbb
arpl
cld
jo
stc
mul
jmp
adc
cld
shr
sbb
push
pusha
sub
mov
push
rcl
cltd
aam
imul
ret
aas
and
xor
pop
push
push
jo
mov
sti
mov
or
sbb
or
push
adc
and
xor
sbb
jb
adc
sbb
pusha
cmpsb
out
cld
nop
cmpl
push
mov
xchg
dec
adc
mov
iret
or
jecxz
mov
js
adc
je
cmp
shl
adc
fmuls
push
push
out
popl
xchg
push
fs
sbbb
pop
sbb
ljmp
lock
mov
andl
xor
xchg
mov
add
arpl
in
mov
sbb
push
dec
mov
xor
push
sbb
icebp
dec
mov
pop
xor
push
repnz
outsb
pop
jl
nop
repnz
repnz
lods
test
rcl
mov
xor
test
inc
fcoms
sarb
stc
xor
cltd
nop
inc
jns
or
sahf
out
add
fs
cwtl
cmp
xor
jo
pushf
iret
and
repnz
mov
test
movsb
js
push
dec
mov
insl
arpl
add
mov
ja
inc
sbbl
maxps
sub
and
dec
push
das
push
adc
sub
pop
push
add
dec
pop
mov
add
cmpb
push
pop
daa
jg
popa
sbb
push
fbstp
pop
jb
movsb
sbb
cli
stc
pop
xchg
add
lock
lods
add
sbb
addl
leave
int
bound
mov
mov
xor
and
leave
enter
mov
leave
leave
leave
enter
leave
leave
leave
leave
fcomp
loopne
leave
leave
leave
leave
call
fcmovne
leave
clc
cld
add
add
or
daa
daa
daa
or
adc
daa
daa
daa
daa
sbb
and
daa
daa
daa
daa
sub
xor
daa
daa
daa
daa
cmp
inc
dec
daa
daa
daa
daa
dec
push
push
pop
daa
daa
daa
daa
pop
pusha
fs
insb
jo
test
sub
leave
rclb
out
mov
mov
mov
mov
jnp
pop
arpl
cmp
or
xor
add
xchg
mov
ret
out
fisubs
je
pop
rorb
cmp
cltd
xchg
add
int3
rolb
jns
in
aam
nop
out
sahf
fcom
fsubr
cmp
repnz
add
in
jae
iret
sub
sbb
cmp
push
hlt
and
cmpl
enter
ljmp
add
or
add
or
in
nop
out
in
adc
iret
cmpb
and
sbb
jae
and
cmpl
enter
sub
xor
repnz
xchg
cmp
mov
pop
repnz
les
and
cmpl
in
push
add
push
adc
inc
sahf
add
pop
push
in
nop
dec
pusha
fs
sahf
add
push
out
mov
int3
test
xlat
xchg
inc
pushl
push
push
enter
ficoml
lea
js
inc
mov
in
les
sbb
pop
push
sbb
push
pusha
outsl
jo
push
sub
adc
sbb
shlb
cmp
or
leave
inc
jo
mov
jo
mov
mov
scas
add
mov
loopne
test
je
lods
push
cs
sub
add
mov
inc
xor
gs
addr16
fs
dec
sbb
dec
arpl
jae
adc
adc
mov
lea
lds
xchg
movsl
jns
jo
inc
pusha
adc
inc
ds
push
pop
and
outsl
popa
out
push
rorb
int
movsb
mov
shll
mov
imul
add
xor
push
repnz
jecxz
pop
push
ss
flds
mov
jne
xchg
popa
and
xchg
fimull
xchg
cmp
daa
sbb
ss
fcompl
push
subl
fadds
mov
fildll
and
push
and
xchg
or
jns
out
mov
nop
jne
insb
mov
or
jbe
pop
fs
inc
bound
xor
stos
push
das
dec
dec
adc
pop
and
arpl
inc
outsl
arpl
xor
sarl
jo
fcoms
or
outsl
pop
fs
loope
repz
aas
adc
loopne
adc
cmp
dec
fisubs
and
jne
xchg
push
jmp
mov
sbb
lea
xchg
in
push
jbe
test
loopne
hlt
add
dec
jo
jno
cmpsb
fistps
call
cmp
xchg
add
fcom
outsl
mov
inc
je
xchg
cmp
hlt
cs
pop
lock
and
and
inc
and
in
push
jbe
outsl
xchg
pop
push
in
cmpsb
xchg
mov
nop
cwtl
in
push
in
pushf
enter
cmpsb
pushf
stc
mov
add
jns
and
inc
cmpsb
movsb
imul
xlat
push
int3
add
pop
or
sub
cli
orb
pop
mov
sub
xor
adc
test
cld
push
hlt
sub
add
out
mov
mov
es
sub
fcoml
sub
adc
icebp
xchg
sub
or
xor
lcall
inc
sbb
std
inc
cmp
sub
and
in
dec
jmp
mov
inc
push
xor
mov
or
or
pop
mull
inc
insb
insl
movsb
mov
mov
pop
xorb
pop
or
or
or
ljmp
test
jns
dec
outsb
gs
repz
bound
insb
or
or
adc
cmp
fistl
push
jne
daa
or
add
xlat
jno
test
pusha
push
push
dec
or
leave
inc
mov
inc
xchg
adc
sub
add
cmp
add
sbb
clc
popf
mov
pusha
inc
out
cmp
inc
and
sub
cmpsb
dec
enter
cmp
add
mov
and
gs
inc
mov
and
subl
and
aaa
inc
xchg
mov
inc
sbb
mov
lea
negb
adc
pop
mov
jbe
fmuls
and
or
inc
dec
xor
pusha
repnz
out
les
mov
pop
pop
fidivrs
pushf
rorb
in
add
pusha
mov
loopne
push
sbb
pop
movsb
insl
call
mov
pop
rcr
inc
xor
push
dec
lock
sbb
dec
mov
sbb
cltd
xchg
rolb
lea
xor
mov
fsubrl
add
pop
pop
lods
fistpll
jg
or
push
addb
rclb
xchg
cmpsl
pop
bound
pop
stc
adc
lods
int
push
scas
adc
imul
add
pop
lea
pop
aam
fnsave
dec
pop
or
and
lods
inc
out
ds
dec
lahf
cmp
fisubrl
mov
inc
adc
sbb
inc
sub
dec
mov
xor
and
sbb
pop
add
pop
insl
jns
xor
mov
insl
orb
sbb
out
adc
dec
data16
push
adc
push
cmp
pop
mov
rorl
pushf
push
int3
aas
pushf
insb
xorl
inc
nop
sbb
or
dec
inc
test
xorl
pusha
inc
movsb
cmp
pushf
inc
mov
xor
cmp
mov
and
ret
sub
lock
addl
jo
xchg
adc
mov
ret
inc
cmp
xchg
cmp
jg
xor
js
mov
popa
sbb
insl
mov
test
shll
xor
shrb
sbb
sub
push
psubw
rolb
sbb
add
jge
lock
call
shr
insl
push
fdivr
daa
inc
push
lock
inc
in
fisubl
sbb
add
cmovl
scas
jge
lret
dec
cld
nop
add
add
sbb
pop
sti
pop
cwtl
gs
push
mov
pop
mov
fadds
xchg
push
cs
pop
pop
lock
rcl
es
mov
push
test
nop
xlat
pushl
ds
jmp
add
push
and
and
inc
idiv
rcl
sub
test
push
push
sbb
pop
xorl
xor
insb
adc
daa
add
dec
addr16
clc
push
ds
jp
inc
insl
push
jnp
pop
inc
mov
outsl
sbb
mov
xchg
push
pop
repnz
inc
jns
leave
insb
inc
push
push
dec
fisubl
int3
lret
es
sbb
xor
popa
cmp
loopne
in
jp
dec
hlt
imul
or
leave
add
fiadds
dec
fwait
push
sbb
adc
lock
mov
dec
bound
inc
imul
sbb
push
ret
add
adc
jbe
pusha
orl
adc
dec
xor
notb
fildll
loop
adcl
adc
sbb
jbe
mov
or
pop
call
sbb
push
out
divl
adc
pop
enter
or
add
push
outsl
jo
jo
imul
les
add
dec
xor
add
pop
add
arpl
and
xchg
sbb
pop
rcll
sbb
mov
xchg
movsl
pop
scas
push
inc
sarb
dec
rcrl
dec
push
push
js
mov
or
sbb
inc
imul
mov
mov
cwtl
inc
mov
sbb
fiadds
es
cmp
mov
add
test
inc
xlat
popf
shlb
aad
and
mov
and
xchg
in
mov
dec
lock
addr16
mov
or
push
xchg
popa
push
es
and
ds
dec
imul
insl
faddl
mov
or
push
inc
add
lock
ljmp
fcomp
and
push
sub
ds
jo
outsb
xlat
jo
sub
sbb
mov
inc
inc
fadd
out
push
fldl
addr16
sub
mov
mov
sub
sub
add
xor
cmp
push
gs
insb
or
or
xor
bound
lds
or
push
out
adc
cmpl
mov
dec
ja
popa
jo
insl
rorl
inc
xor
dec
fdivrl
or
push
xor
or
pop
outsl
add
or
adc
popa
addr16
ret
ficompl
jb
cld
mov
cmp
insb
push
jns
repnz
mov
pop
les
inc
cmp
test
cmp
or
adc
scas
and
or
or
xchg
push
into
imul
mov
psubq
cmpsb
pop
jb
mov
rcrl
xchg
fcoms
inc
cmp
adc
push
adc
jbe
pop
pop
pop
dec
push
push
push
jmp
push
sbb
adc
lahf
enter
decl
push
testb
push
shll
add
jmp
push
xor
add
movsb
pusha
in
cmp
aam
out
es
inc
xor
ss
cmp
add
ss
andb
mov
dec
sbb
jge
jno
xor
pop
and
mov
cmp
inc
pushf
dec
aaa
dec
ja
popf
adc
cmpxchg
les
in
les
rorl
outsl
stc
ss
shrb
push
pop
push
lahf
in
pop
mov
pusha
dec
out
pop
inc
imul
and
inc
xorb
mov
jl
sub
cs
inc
je
xchg
ss
add
mov
mov
mov
mov
mov
xchg
push
rolb
adc
push
push
or
sbb
les
pop
mov
xchg
sub
rorl
ret
push
dec
xlat
nop
test
mov
mov
mul
xor
sub
popa
nopl
sbb
push
inc
mov
iret
aaa
xchg
inc
sub
push
and
popf
push
xchg
inc
cmp
add
or
dec
or
push
mov
rclb
push
cmp
mov
movsb
loopne
test
adc
in
adc
lret
ja
dec
dec
cltd
dec
mov
fmuls
mov
mov
push
movsb
inc
mov
and
pop
add
nop
xchg
pushf
fcomps
mov
sbb
imul
push
inc
das
dec
inc
xor
mov
xor
or
push
clc
sub
adc
sbb
or
ljmp
push
les
mov
movsl
add
iret
xorb
lods
dec
sbb
cmpsl
mov
mov
mov
mov
sbb
push
movb
pushf
fstpt
test
pop
inc
or
adc
mov
shll
sbbb
sbb
push
xorb
rcrb
push
adc
or
jmp
sbb
arpl
pushf
push
jmp
lret
adc
jnp
pop
testl
subl
pop
lcall
stos
cmpsb
pop
int3
or
movsb
fadd
pop
cmc
push
std
mov
fstps
mov
dec
and
mov
subl
and
fs
daa
fucom
ret
sub
or
idivb
adc
cmp
mov
mov
lods
push
inc
or
mov
ja
sub
pop
dec
cmp
ret
lea
push
addr16
mov
sub
sbb
dec
jp
cs
and
and
icebp
mov
fs
aad
lahf
push
xor
inc
cmp
xor
mov
mov
xor
add
add
pop
dec
scas
xchg
ss
insb
rol
nop
xor
cmp
inc
imul
enter
mov
in
rolb
out
lret
add
inc
pop
lcall
cmp
jne
in
jo
jbe
or
add
adc
sbb
lock
fldl
js
inc
push
dec
push
and
pop
fwait
push
int3
mov
nop
inc
xor
and
xor
inc
inc
inc
jmp
sbb
cmp
inc
xchg
push
fcoml
or
mov
imul
xchg
push
inc
dec
fsubs
sti
push
arpl
andb
push
jae
sbb
xchg
fcomp
push
lcall
hlt
xchg
add
mov
mov
jp
mov
or
or
mov
or
popa
add
jge
xchg
add
add
xor
sub
inc
or
or
push
jg
dec
jmp
inc
push
or
pop
lods
mov
je
sbb
jnp
std
lret
orb
fdivl
dec
notl
and
mov
mov
in
mov
rclb
jne
xchg
pop
sbb
sarb
rorb
mov
xor
dec
loope
pop
pusha
mov
push
push
cmp
inc
and
call
pop
adcl
addb
repz
dec
popf
jne
jle
mov
adc
cmp
xor
jg
call
jle
jp
mov
shll
xor
xor
inc
adc
adc
stc
negb
out
xor
fldt
xchg
enter
fucomp
ja
mov
mov
push
add
dec
xor
jmp
insl
or
sbb
xchg
into
and
sbb
pusha
lock
cltd
xchg
jge
xor
push
pop
jmp
inc
ficomps
cmpb
movsb
push
sarb
mov
ret
call
nop
push
mov
addb
scas
hlt
adc
jge
dec
push
testb
pushf
or
fsubrs
or
out
cmpb
mov
cwtl
pop
add
inc
mov
or
jnp
xor
loopne
movsl
js
sbbb
pop
sbb
js
or
cmp
arpl
test
jo
xlat
push
jns
inc
sbb
dec
add
das
mov
and
imul
and
pop
cmc
or
mov
fs
fimuls
mov
jp
je
dec
add
xorb
mov
movb
mov
lods
jmp
jmp
and
add
pushf
mov
mov
add
sti
push
test
test
les
sub
jno
adc
mov
mov
ss
xchg
aas
push
cmp
cmpsl
xlat
xor
or
lcall
mov
mov
test
xchg
sysret
shlb
dec
xchg
inc
dec
js
dec
enter
jnp
and
jnp
jge
sbb
dec
xchg
jmp
inc
ret
add
cmp
sub
push
xchg
daa
inc
and
xchg
and
push
mov
fsts
jl
divl
and
jne
mov
adc
cmp
or
sub
add
add
jg
bnd
lock
testb
push
adc
jl
mov
push
push
lret
or
jmp
not
and
je
gs
sub
sbb
push
pop
sbb
repnz
or
arpl
ja
lods
pop
ret
loop
push
sbb
ds
pop
das
mov
out
add
sub
jae
push
mov
add
mov
xor
push
pop
mov
aam
scas
pusha
test
pop
mov
push
loopne
data16
or
mov
or
pop
in
cmp
pop
and
cmp
aaa
psraw
ss
ss
shll
pop
cmp
and
sub
add
loopnew
in
dec
mov
xor
add
lock
hlt
rolb
xor
push
ss
adc
cmp
pop
hlt
mov
jbe
shrl
xor
bound
cmpsb
rcr
or
push
scas
movsl
jne
in
push
fistps
pop
add
mov
je
rolb
nop
add
xor
pop
add
push
divb
dec
mov
stos
hlt
mov
adc
mov
xchg
fsts
or
insb
adc
pop
add
adc
add
add
mov
cmpsb
daa
sbb
xchg
push
sub
and
xor
rclb
decl
dec
fucomi
push
push
adc
cld
fiaddl
push
ljmp
xchg
dec
rorl
dec
push
jne
adc
dec
push
xchg
dec
mov
dec
or
pop
jo
pop
daa
mov
or
ja
rolb
cwtl
pop
addr16
cmp
jae
cmpl
sbb
rorl
mov
nop
divb
cld
pop
sub
mov
les
mov
enter
out
imul
sub
mov
sub
cmp
shll
dec
rorb
dec
cmp
loopne
inc
inc
jmp
push
je
push
push
inc
imul
sti
cs
jle
cmp
mov
dec
and
or
adc
adc
jne
pop
pop
mov
mov
sub
mov
push
jmp
into
xchg
push
or
sbb
in
sub
sbb
xlat
rorl
sub
dec
das
or
xor
aam
dec
mov
inc
loope
cmp
inc
xchg
sbb
pop
add
test
enter
sub
mov
or
mov
jnp
xor
mov
pop
push
in
dec
sbb
cmp
push
nop
pop
loopne
cmp
pop
jge
mov
insl
jnp
jle
cwtl
or
and
jo
push
aas
mov
push
or
shlb
xchg
jmp
paddw
mov
test
jno
xchg
sub
sub
inc
add
add
mov
cmp
sbb
mov
imul
jmp
mov
insb
testl
mov
add
hlt
aas
ret
or
mov
ja
clc
and
adc
les
xchg
andl
sbbl
mov
and
mov
fdivs
xchg
pop
arpl
fcmovu
loopne
adcb
clc
xchg
cmpb
and
inc
or
cmp
rclb
in
xor
in
add
jl
shlb
stc
add
or
sti
scas
adc
mov
dec
push
adc
push
add
and
add
fwait
dec
inc
js
jae
dec
inc
fstl
scas
test
clc
sub
sub
push
lock
mov
pop
mov
cld
pop
enter
cld
hlt
xlat
xor
sbb
pop
sub
xchg
ret
addl
sub
or
and
pop
xchg
flds
data16
inc
inc
bound
lea
xchg
push
js
mov
dec
std
or
jno
mov
sbb
or
sbb
jns
ret
andl
dec
dec
cld
sbb
cmp
sarl
jg
aaa
xchg
sbb
nop
pop
fmul
xor
bound
sub
mov
mov
test
pop
jg
dec
lock
andb
mov
ret
add
outsb
jne
cli
pop
rclb
pop
les
shrb
mov
jno
adc
mov
xchg
bnd
cltd
fwait
and
xchg
mov
mov
mov
push
fdivs
add
mov
xor
sub
int3
aaa
adc
add
mov
sbbb
icebp
les
jg
and
movsl
jne
mov
cltd
neg
insl
lods
jmp
imul
shl
stos
adcb
pop
pop
xlat
insb
dec
xchg
cmpb
xchg
ss
movsb
adc
dec
jb
mov
call
lea
lea
scas
cs
pop
pop
pop
pop
sub
push
dec
roll
jne
and
cmpsl
push
jp
cs
in
mov
pop
mov
out
sub
jl
jnp
push
inc
jno
jne
adc
lcall
dec
inc
sbb
sbb
nop
movsb
pusha
jmp
arpl
lret
pop
inc
xchg
hlt
in
in
xor
mov
xchg
xchg
in
test
push
xchg
sub
xchg
or
add
fucomp
sub
popa
push
or
repz
sub
pushf
dec
pop
xchg
mov
adc
add
inc
push
mov
loopne
xchg
inc
push
out
or
rcrb
pop
pop
fmuls
xor
cmpsl
orl
dec
decb
mov
enter
mov
movsb
movsl
cmpsb
enter
cmpsl
test
and
lods
orl
lods
scas
scas
nop
or
enter
xchg
xor
and
and
and
pushf
orl
popf
sahf
lahf
orb
and
and
and
fnop
or
mov
sarl
xadd
adc
or
add
fnstenvs
cld
add
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
xchg
xor
test
jl
je
imul
xor
mov
push
push
lock
call
inc
loopne
fdivs
xor
shll
enter
shll
or
cmpsb
pop
ss
add
cld
add
lcall
imul
imul
dec
xlat
mov
mov
xor
lcall
push
ja
cltd
sbb
xor
inc
dec
fimuls
or
push
cmpsb
out
jmp
pushf
push
push
cmp
xchg
inc
sub
pop
les
add
pop
xchg
cmp
push
mov
inc
sbb
ret
or
lcall
and
nop
push
dec
sub
or
int3
sbb
cmp
rcrl
mov
mov
inc
mov
cs
repnz
outsb
xor
fmull
rcll
int3
ja
cs
daa
fwait
xchg
int
sub
dec
js
inc
push
imul
cmp
and
xlat
mov
nop
out
sbb
mov
and
dec
les
leave
jmp
or
cmpsb
sbb
and
sub
cmp
pop
pop
mov
pop
cmp
jle
mov
inc
push
dec
mov
outsl
scas
xchg
add
push
cmpl
out
lret
mov
push
inc
mov
fwait
mov
leave
pop
jl
test
jl
aas
add
sbb
adc
or
jb
mov
push
shll
pop
push
in
push
or
cmp
imul
pop
adc
inc
mov
inc
pop
out
aas
jbe
xchg
or
int3
push
aam
es
push
or
mov
leave
lods
pop
push
push
adc
xchg
add
dec
fwait
or
cmp
inc
lahf
jb
xrelease
je
sbb
ficoms
jne
mov
xor
and
or
mov
lods
mov
mov
data16
xchg
pop
inc
xchg
push
arpl
mov
sbb
sbb
push
pop
nop
xchg
daa
and
testl
push
testb
fs
add
lock
lcall
dec
adc
enter
popa
jnp
push
or
push
mov
test
push
sub
xor
fcompl
mov
sub
insl
sti
negl
and
xor
xor
xor
dec
imul
mov
push
iret
sahf
loopne
movl
arpl
insb
push
or
fwait
mov
push
adc
outsl
pop
js
arpl
fcmovne
add
daa
jo
jb
jb
mov
lods
dec
popa
or
sbb
es
cmp
in
add
data16
daa
ja
outsb
cmpsb
cmp
jo
addr16
jb
mov
mov
mov
add
inc
cmpsb
insb
daa
push
jg
int
mov
outsb
insb
das
imul
insb
je
cmpsl
sbb
and
mov
sbb
lods
sbb
pop
je
jo
mov
dec
fidivl
arpl
jns
outsl
xor
xor
add
movsb
imul
pop
push
sub
cmp
dec
ret
fidivs
or
test
mov
dec
nop
cmp
outsl
jnp
add
add
lods
mov
movsb
out
and
dec
int
xchg
mov
int
daa
mov
jl
or
sti
and
es
test
pop
pop
or
add
push
mov
fisttpll
push
cmpb
or
add
push
and
jg
inc
ja
enter
push
add
lock
mov
dec
outsl
mov
iret
nop
inc
or
jecxz
pusha
call
or
icebp
movsl
shrl
or
into
and
hlt
orl
outsb
or
iret
xor
xchg
push
fsubs
inc
adc
xchg
dec
addb
add
add
lcall
call
leave
aam
outsl
cmp
in
clc
inc
test
in
inc
and
pop
insl
jge
rcrb
inc
cld
imul
inc
ret
jns
lret
push
dec
push
enter
add
aas
test
movb
mov
xor
jge
add
jns
push
ret
sbb
or
jmp
sbb
js
jb
adc
pop
xchg
rolb
das
inc
pop
cmpsl
insl
rorb
jmp
sbb
lcall
mov
js
out
sbb
mov
cmpsl
out
or
popa
mov
popa
lock
and
adc
test
adc
sbb
jg
push
xchg
add
and
sahf
xor
add
jg
xchg
add
push
pop
pop
or
or
or
or
or
or
push
movups
adc
adc
push
pop
fwait
cmpsb
imul
repz
and
and
andb
arpl
aaa
dec
pop
xor
shll
jnp
popf
scas
fnstenv
repnz
lcall
lcall
pushf
lods
mov
iret
loopne
add
adc
lcall
dec
push
fs
push
subl
inc
iret
rorb
and
or
xor
add
add
push
push
adc
xor
iret
pop
adc
push
cmp
repnz
sbb
sbb
and
orb
or
repnz
push
or
cmpb
sub
or
xor
sub
xor
cmpb
xor
cmp
xor
adc
adc
inc
push
inc
enter
pop
dec
sbb
repnz
push
sbb
iret
sbbb
sbb
cmp
enter
pusha
ja
sahf
cmpsl
jns
push
popa
imul
out
and
mov
fs
inc
sahf
inc
and
out
stos
inc
and
addr16
push
cmpsb
fsubs
push
movsl
test
les
inc
test
xchg
push
push
add
cmp
jnp
xchg
int3
cmp
xor
jne
mov
jne
sub
js
lock
insl
xorl
and
add
outsb
sbb
fsubrs
test
cmp
xchg
or
lock
lcall
notl
mov
or
int3
rclb
in
or
mov
js
xor
cmp
popa
push
enter
push
push
lods
test
loopne
mov
sub
shr
out
sub
aam
push
imul
imul
push
addr16
imul
or
or
out
cwtl
cmp
add
scas
pop
adcb
push
adc
test
sub
fs
lea
pop
movsb
mov
addl
push
mov
push
add
shll
mov
pop
pusha
jl
roll
sub
ret
loop
pop
popw
sub
mov
push
je
push
pop
in
loop
and
push
lock
popa
or
lahf
repnz
in
es
and
xchg
xor
sub
xchg
fs
cltd
or
add
add
movups
arpl
scas
push
inc
cmpsb
xchg
adc
adc
sub
adc
sbb
and
and
push
xchg
jno
iret
sbb
mov
sbb
and
sbb
and
and
sbb
push
push
xor
dec
inc
leave
and
stos
add
xchg
sbb
and
add
in
lret
pop
or
add
xor
xor
sub
sub
xor
add
xor
xor
in
xor
mov
pushl
adc
dec
popa
jns
mov
orb
insb
pushf
rcrb
jnp
or
cmp
popa
mov
pushf
dec
add
pop
xor
scas
mov
mov
test
inc
and
aaa
xchg
aas
inc
sahf
or
nop
xchg
mov
inc
or
shrd
fildll
mov
mov
mov
mov
mov
inc
inc
faddl
hlt
push
xchg
mov
push
cmp
daa
hlt
nop
dec
outsl
xchg
bound
and
pop
rcl
lahf
rorb
jns
loopne
or
dec
xchg
shlb
xchg
push
stc
nop
inc
cmp
cmp
push
xor
sbb
ljmp
aam
or
sbb
dec
push
dec
xchg
xchg
adc
fisubs
push
adc
adc
stos
movsb
pop
push
add
adc
add
popa
bound
mov
dec
sbb
lods
or
sbb
sbb
fs
mov
add
add
fidivl
inc
int3
mov
sub
movsb
or
push
outsb
cmp
popf
nop
dec
pop
push
xchg
adc
add
and
and
inc
adc
cmp
push
fnstenv
and
sbbl
jb
or
sub
push
mov
sub
orb
sub
lds
push
lahf
cs
pop
js
dec
xchg
js
xchg
jns
jge
pop
and
sub
inc
adc
faddl
and
inc
js
sub
or
dec
lret
adc
lret
jo
inc
push
insb
rcl
sub
lods
in
fiaddl
in
jns
test
ficompl
and
lock
mov
inc
in
enter
fcoms
mov
enter
inc
rcrb
int3
in
pop
nop
sahf
inc
enter
xchg
dec
adc
lcall
and
in
push
pushf
push
push
fwait
mov
imul
ret
mov
notl
mov
mov
xor
ret
fsts
sub
pop
test
mov
in
test
sbb
cmp
or
ret
popa
mov
fs
pop
and
or
lods
add
mov
call
jp
in
das
jbe
pop
fs
je
popa
lds
add
xchg
push
pop
sbb
add
add
imul
aas
or
stc
push
cmp
add
push
into
je
inc
lahf
cmpxchg
loopne
sahf
xchg
sbb
arpl
adc
add
dec
movsb
lods
in
sub
or
mov
sub
adc
mov
adc
fs
cwtl
add
xchg
mov
fdivs
jae
jno
adc
add
or
sbb
push
xor
sbb
xchg
sbb
and
add
aam
icebp
mov
cmpsl
and
xchg
lret
push
dec
loop
dec
cmp
rcrb
dec
insl
gs
mov
and
push
jge
jo
les
or
jns
fiaddl
add
js
and
and
inc
dec
mov
xchg
pop
mov
and
add
roll
or
xor
rcll
nop
and
push
fs
or
and
adc
les
loop
sub
jo
push
sub
add
movsb
lahf
pop
xchg
adcl
sub
cmp
xor
mov
das
adc
adc
inc
leave
xor
xor
and
and
xor
sbb
xchg
stos
in
aaa
cmp
int3
fadds
jno
cmp
dec
sub
inc
stos
popf
andl
and
js
call
xchg
jae
dec
push
inc
push
cmp
mov
sub
stos
pusha
incb
fwait
lock
inc
adc
xor
inc
cmp
insb
mov
enter
sbb
inc
pop
testl
int3
push
sub
mov
pop
inc
inc
mov
jl
push
cmp
mov
lods
mov
push
mov
enter
call
mov
es
push
clc
push
push
cmp
movsb
leave
sbb
fidivl
push
test
and
cmp
test
push
or
test
jecxz
pop
clc
mov
aaa
movsb
mov
test
mov
push
pushf
cmpsb
mov
adc
mov
sbb
push
movl
movl
pop
sub
gs
ret
push
les
pop
fadds
sbb
add
int3
mov
loopne
sbb
inc
cmovo
add
loope
decl
mov
fidivrs
sysenter
mov
push
push
divb
or
icebp
lahf
xchg
pop
sbb
rorb
add
jmp
cwtl
mov
jl
nop
jmp
push
xor
add
inc
test
add
mov
add
nop
and
scas
lea
lods
movsb
arpl
testl
adc
push
xor
and
enter
pop
xchg
cltd
add
inc
push
jle
popa
insb
les
sub
mov
sbb
lret
sbb
jno
or
sbb
dec
cmpsb
sbb
sbb
sbb
pop
leave
dec
aam
jo
mov
sbb
xchg
and
dec
inc
and
add
add
es
sub
dec
mov
sub
sub
nop
add
scas
xchg
cs
aas
sub
push
and
sbb
mov
imul
and
push
push
adc
cld
mov
pop
cmpl
mov
movsl
or
and
jno
xchg
xchg
xor
arpl
aaa
ja
pop
mov
adc
mov
mov
mov
cmp
movl
cmc
je
pop
cmpsl
xor
or
push
imul
pop
shrl
jb
ja
or
mov
addb
push
lds
enter
cmpl
push
xor
mov
push
add
sub
sub
notl
xlat
test
daa
fistps
in
cmp
push
push
pop
fildl
shll
cmp
add
repz
add
mulb
or
push
repz
aad
lods
lods
mov
xor
pop
push
fmuls
pop
push
movsb
ret
enter
add
pushf
sub
xchg
mov
jo
sahf
scas
mov
sbb
clc
and
enter
data16
xchg
inc
dec
push
stos
test
push
dec
push
dec
mov
add
cmp
out
pushf
or
inc
adc
mov
pop
jbe
jnp
test
or
mov
cwtl
dec
mov
xor
imul
sub
stos
and
loope
add
jmp
das
mov
test
lods
sub
fldcw
lret
jb
push
lea
lea
mov
or
nop
loope
or
aam
clc
andb
enter
sub
mov
addr16
mov
push
nop
imul
mov
sbb
bound
subb
inc
inc
adc
inc
aaa
addl
add
jno
dec
aaa
in
enter
xchg
cltd
cld
jecxz
dec
pushf
cld
retw
push
jb
inc
and
sub
hlt
sbb
js
inc
and
mov
cmpsb
pop
and
orb
dec
inc
test
xchg
mov
notb
loopne
xchg
push
sub
popl
addb
inc
and
xchg
inc
cmpsl
adc
cmp
xor
leave
or
xor
mov
or
and
sbb
fs
mov
xor
icebp
jecxz
xchg
pop
mov
test
or
sbb
jo
add
pop
outsl
push
es
andb
test
push
dec
push
insl
orl
push
or
shlb
add
and
add
popa
dec
cmc
push
push
push
inc
mov
xchg
push
scas
sbb
sub
xchg
rcll
dec
inc
fiadds
adc
and
mov
les
mov
rorb
mov
addb
and
and
insl
jl
mov
sub
adc
aam
adc
outsl
mov
sarb
data16
dec
ror
inc
es
or
shrb
loop
mov
insl
outsb
pop
fstl
or
leave
leave
push
pop
cld
pop
mov
or
movb
mov
inc
js
sbb
insb
pop
ret
sbb
out
add
sub
iret
xchg
addl
add
inc
dec
inc
xchg
jo
push
sbb
aam
imul
add
add
les
inc
jno
pop
xchg
rolb
es
into
daa
or
clc
mov
loope
jno
mov
inc
adc
leave
mov
pop
xchg
loope
push
iret
push
stc
xor
ret
mov
jo
in
xchg
inc
dec
pop
pop
mov
repz
adc
dec
jb
add
pop
loopne
pushf
pop
jbe
insb
cmp
mov
mov
adc
divb
jle
add
xor
mov
xor
les
cltd
jo
adc
and
movsl
outsl
mov
test
jae
xchg
loopne
iret
mov
outsb
push
pop
enter
nop
jge
and
xchg
outsl
cmp
mov
pop
addr16
flds
fwait
xchg
pop
testl
mov
adc
cmp
jmp
in
push
add
rorb
test
xchg
jne
push
push
lret
dec
notl
pop
mov
mov
mov
add
push
xchg
les
xor
xor
push
and
sbb
adc
xchg
dec
cmovg
inc
leave
enter
jp
js
cmp
push
or
sub
cmp
mov
mov
sbbl
dec
mov
enter
imul
add
pop
out
inc
mov
add
add
push
push
push
ljmp
out
mul
fisttpll
lods
test
cmp
push
inc
lods
movsb
out
insb
xor
xacquire
adc
xchg
or
cmp
insl
inc
je
mov
pushf
mov
cmp
xor
sub
adc
pop
lock
sub
pop
mov
push
dec
cli
mov
xchg
imul
mov
mov
sbb
mov
lcall
dec
mov
xchg
push
subl
int3
leave
popf
mov
mov
and
loopne
lods
in
pop
cmp
das
jg
sahf
push
out
sub
in
sbb
fsubs
es
es
and
sub
push
jg
xor
sbb
subb
xchg
dec
dec
cmp
jmp
push
lret
out
and
cmp
sti
adc
mov
mov
sub
and
mov
icebp
shrb
xor
adc
xchg
add
iret
dec
push
mov
fnstsw
push
lock
je
push
js
jo
mov
adc
adcl
jge
jg
dec
mov
fs
mov
dec
xchg
sbb
dec
lret
adc
add
and
xlat
xor
cmpsb
mov
add
testb
repnz
mov
dec
inc
and
cld
adc
pop
aas
pop
aam
xor
pop
mov
mov
add
fwait
push
sbb
cwtl
dec
or
movsl
mov
xchg
in
cltd
and
jmp
das
jnp
sahf
imul
sbb
adc
sbb
adcl
mov
or
inc
inc
mov
cmp
dec
and
inc
sarl
sub
add
xchg
je
jno
mov
push
aam
xor
and
arpl
mov
add
pop
xor
movsb
adc
push
adc
dec
ljmp
xor
cmp
sahf
adc
nop
outsb
sbb
dec
adc
lock
dec
xchg
mov
mov
and
add
dec
sti
sbb
inc
cmpl
inc
mov
in
add
adc
add
adc
in
cmp
or
ror
push
nop
dec
dec
xor
mov
sub
push
xchg
ja
push
aaa
test
daa
aad
inc
test
in
cmpb
or
mov
mov
es
inc
sbb
adc
dec
add
cmp
test
ffreep
add
sti
add
cmp
rol
cmp
mov
mov
cmc
adc
add
push
xchg
fsubrs
outsl
xchg
call
cmpsl
pop
adc
aam
sahf
dec
push
sar
lods
scas
cmpsb
xchg
les
cmp
adc
or
xchg
subb
xlat
test
fdiv
orb
xchg
push
or
push
ret
inc
dec
lahf
and
push
jbe
or
push
push
pop
and
pop
ret
cmpl
sub
or
mov
jbe
cmp
adcl
ret
cmpsl
mov
adc
xchg
out
inc
dec
add
push
mov
xor
out
dec
pop
or
sbb
jle
jmp
js
sub
and
dec
ss
nop
pop
dec
add
lahf
cld
pop
mov
inc
pop
cmp
sub
push
test
xchg
bound
and
inc
jb
lods
stos
sbb
mov
pop
sbb
icebp
fwait
fs
out
add
xchg
jmp
les
inc
cmpsb
pop
adc
test
scas
ja
andb
pop
sarb
add
or
in
aaa
xorb
inc
push
imul
addl
fadds
pop
movsb
roll
push
pop
sub
jne
test
push
mov
lock
cmp
inc
mov
mov
lret
sub
add
adc
adc
fldcw
hlt
jne
mov
les
mov
fdivs
add
push
and
mov
test
jmp
daa
and
fnstcw
adc
mov
push
jmp
daa
inc
mov
or
cld
or
hlt
mov
fs
dec
rolb
arpl
and
add
mov
dec
push
add
add
xor
test
call
mov
cmp
dec
xchg
orb
lds
xor
cmp
je
jns
hlt
and
and
lds
jecxz
fidivrl
adc
push
sbb
mov
add
stos
cld
orl
push
pop
aas
add
nop
mov
add
clc
adc
push
dec
dec
xlat
add
mov
xor
mov
jmp
adc
jg
or
mov
jne
push
add
jp
imul
and
or
imul
or
inc
stos
dec
xlat
cmpsb
shlb
dec
aad
or
add
inc
mov
ds
pop
jb
test
fistps
adc
or
roll
shlb
cmpsb
insb
out
andl
fs
ja
xchg
sub
and
xor
cmp
ret
mov
scas
pop
loopne
es
outsb
push
ss
out
mov
push
dec
cld
push
popf
cld
daa
pop
rolb
enter
xor
inc
push
repz
sbb
adc
or
test
sbbl
sub
add
and
cmp
fadds
popf
jb
adc
in
inc
pusha
jg
xchg
jl
into
xchg
test
pop
xchg
and
test
loopne
mov
in
fisttpl
mov
lahf
add
sahf
or
mov
or
aam
js
and
fidivrs
aaa
movsb
dec
les
adc
push
ds
push
add
and
cmpsb
imul
lcall
adc
mov
mov
mov
test
ficoml
inc
push
and
aaa
les
pop
mov
pop
add
and
scas
mov
ja
mov
mov
ljmp
mov
test
fcmovbe
pusha
pop
outsl
xchg
icebp
je
xor
stos
inc
jl
dec
test
add
push
xchg
xor
inc
sbb
lds
cmpl
aaa
dec
mov
and
and
into
and
ret
mov
addr16
adc
sbbb
out
adc
scas
pop
jo
dec
adc
sub
loop
lock
popa
adc
je
aas
add
xchg
adc
or
or
test
mov
test
mov
aaa
mov
adc
inc
push
in
inc
hlt
pusha
lods
adc
call
add
cmp
push
sbbl
stos
xchg
push
imul
lods
add
inc
dec
lods
cwtl
or
inc
inc
mov
nop
sub
adc
inc
rolb
into
and
xor
jecxz
add
inc
mov
popa
xor
nop
sub
rolb
dec
cmpsl
pusha
pop
mov
je
or
add
mov
scas
inc
test
in
inc
mov
push
add
sbb
subl
jno
add
adcb
inc
in
add
jne
xchg
ja
das
cmp
pop
gs
pushf
fldl
mov
inc
outsb
jo
or
mov
xchg
frstor
and
mov
jmp
pop
scas
xchg
cs
pop
or
jecxz
in
lcall
aaa
dec
inc
sub
sub
and
sub
push
pop
decb
jno
icebp
or
sub
fistps
stc
and
xor
das
sub
xor
ss
xor
ficoms
dec
push
shrl
or
daa
or
xchg
pop
pop
lock
mov
test
and
lods
dec
ret
xor
ljmp
enter
lock
inc
add
scas
jmp
xor
mov
insl
imul
mov
bound
pop
cmpl
imul
lds
repz
inc
pop
inc
mov
lods
fadds
stc
push
cmp
push
dec
dec
jne
jo
inc
jmp
sub
sub
jle
or
push
in
outsl
or
adc
and
jbe
fcmovbe
mov
sbb
and
adc
cmp
lcall
xchg
daa
and
sbb
add
cmp
mov
inc
mov
ret
xlat
push
jge
fs
or
or
cmc
and
push
mov
and
add
pop
leave
xchg
cmp
je
or
xor
or
pop
nop
xchg
rcrl
hlt
pushf
mov
leave
inc
loop
loop
cmp
lock
pop
mov
sub
rcrb
sub
sbb
in
sbb
inc
and
jb
nop
xor
or
es
jl
push
or
fists
push
jbe
and
xchg
pop
sti
loop
mov
pop
xor
rcr
sbb
mov
out
pop
push
dec
dec
dec
inc
dec
push
add
or
mov
add
sub
nop
and
xor
aaa
adc
or
or
push
cmp
notl
mov
and
and
mov
loope
mov
aaa
mov
add
add
test
or
and
jmp
xchg
insb
cld
mov
push
adc
add
or
sti
cmp
inc
sbb
stos
insl
mov
lret
mov
push
sub
movsb
inc
xchg
lock
mov
dec
ja
pop
xlat
loop
or
addl
sub
adc
lahf
dec
jp
cwtl
jl
pop
adc
pop
xchg
cmp
je
and
sbb
les
lock
aaa
add
push
pusha
leave
dec
xor
cs
add
pop
lret
or
cmp
sub
cmp
jp
jmp
add
dec
shl
or
inc
arpl
inc
loopne
mov
clc
cmp
idivl
adc
mov
cmp
add
sbb
sub
pushf
adc
lea
je
inc
inc
mov
or
or
inc
pusha
sub
and
mov
fadds
imul
add
lahf
fdivl
subb
movsb
jl
adc
outsl
or
cltd
aaa
mov
add
xchg
pop
enter
imul
mov
call
and
outsl
pop
push
pushl
in
pop
gs
popa
bound
or
popa
leave
sub
rclb
jne
pop
push
out
inc
pop
outsb
mov
hlt
sub
mov
ds
hlt
fisubrs
mov
jnp
jg
imul
sub
aaa
jo
push
jo
aam
les
mov
mov
xchg
or
xor
or
fdivs
shll
addb
fcoms
inc
scas
fdivs
pop
jge
and
sub
add
es
push
adcb
sub
or
pop
cmp
leave
xchg
cmpsb
test
or
add
push
xchg
leave
or
fbstp
mov
push
jg
dec
push
xor
shlb
loopne
xchg
adc
js
sub
fs
or
pop
or
clc
loope
loopne
imul
push
push
rolb
in
cmp
movsl
loop,pt
xor
mov
cmp
pop
sub
test
and
and
xchg
mov
test
test
adc
cmp
shll
testb
pop
loopne
push
xchg
paddusb
inc
or
dec
inc
popa
xor
sbb
mov
movb
push
and
cmpsb
cmpsl
push
sub
addr16
leave
mov
inc
subb
int3
rorb
or
addr16
add
imul
fldenv
sbb
mov
jecxz
loopne
push
jp
inc
cld
jle
test
out
clc
cs
or
jne
mov
dec
mov
in
arpl
inc
fimull
or
fnstenv
addr16
add
sbb
push
or
fcoms
sub
jno
subb
imul
and
add
out
es
iret
roll
or
push
jne
loopne
xor
mov
dec
fsubl
inc
add
test
mov
and
mov
add
adc
pop
mov
add
movsl
lods
pop
mov
mull
aad
lcall
outsb
fs
inc
cmp
sub
adc
pusha
in
loopne
dec
movb
dec
sub
adc
cmp
adc
push
test
add
push
add
insl
scas
inc
or
adc
insl
dec
push
or
int3
and
repnz
add
sbb
jb
testl
inc
lea
mov
lahf
or
dec
add
push
shr
xor
xchg
jno
adc
pop
jae
pop
xor
add
hlt
nop
sahf
push
xor
jno
sarl
mov
dec
outsb
mov
testl
lds
popf
or
pop
xchg
cmp
add
add
addl
cltd
test
jo
outsl
xorb
push
sub
mov
dec
in
inc
ja
adc
pop
mov
pop
push
push
add
or
pop
popf
add
scas
or
ja
mov
shll
repnz
inc
shrb
or
adc
pminsw
sbb
and
shlb
dec
or
inc
loop,pt
daa
pop
pushf
and
or
fmuls
test
loope
push
int
je
add
push
dec
jl
pop
jns
add
pop
cmpsb
fcmove
je
pop
add
push
in
out
push
test
notl
divl
push
or
lods
frstor
mov
jns
or
int
fisubrl
add
das
xorl
fsub
ret
add
fmull
add
negb
movsb
nop
sub
xchg
adc
lods
pop
dec
outsl
cmp
or
jp
adc
arpl
dec
adc
popa
inc
sub
jne
or
inc
imul
movb
orb
add
jb
addr16
insl
lea
or
cmp
mov
mov
sub
and
jle
mov
xchg
les
push
les
cmp
mov
xor
scas
out
and
pop
push
and
sbb
inc
cmp
add
imul
sub
dec
or
push
cmova
test
cmovo
push
push
push
jo
sbb
arpl
arpl
and
and
addb
mov
mov
rcrl
in
adc
pop
inc
pop
add
loope
enter
cli
and
adc
mov
adc
xor
push
xchg
dec
cld
inc
add
mov
add
add
push
sub
add
add
add
add
or
rcr
mov
mov
mov
mov
mov
mov
push
call
out
sbb
cmp
inc
mov
lcall
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
aas
movsl
fdivrp
fdivr
fiaddl
jg
jge
aad
aam
sar
sar
sar
sar
iret
jp
mov
int
int3
dec
dec
icebp
dec
mov
icebp
push
xlat
sbbb
push
fsubl
lods
xor
call
lods
xchg
and
or
push
dec
movsb
in
shll
xchg
and
int3
and
xor
sub
and
sub
mov
jo
aaa
test
cs
mov
inc
je
es
and
imul
sbb
mov
imul
adc
add
push
mov
fstps
ss
push
push
loopne
jl
mov
in
pop
clc
lock
sub
jns
repz
mov
lahf
les
and
fcmovbe
mov
std
pop
and
push
clc
or
pop
or
mov
push
test
mov
push
in
or
pop
sbb
lcall
out
or
add
js
inc
and
sbb
cmp
pushf
imul
dec
cmp
sub
adc
sbb
add
push
or
adc
dec
lods
mov
push
dec
mov
cmp
or
cmp
inc
popa
push
pop
cmp
std
or
or
pop
lds
mov
test
pop
orl
xor
mov
daa
and
cmp
push
mov
in
and
fdivrl
fcompl
and
inc
aam
jg
adc
ret
out
add
lret
pop
add
jo
xchg
imul
pop
adc
push
shufps
jge
int
xchg
inc
lds
adc
cmp
andl
inc
ret
out
dec
jb
push
dec
popa
je
xchg
inc
push
imul
adc
sub
scas
nop
lret
loopne
pusha
lea
pop
mov
or
cmp
nop
mov
lock
ja
jl
mov
lret
bound
or
imul
jmp
insl
push
xchg
jmp
dec
mov
gs
or
jmp
xor
mov
dec
push
or
movsb
rclb
mov
jne
sbb
mov
dec
or
imul
xorb
add
movsb
sbb
inc
sbb
out
ss
pop
push
out
std
sbb
das
xchg
pusha
mov
outsb
cmp
xlat
push
cmc
mov
pop
push
in
aad
xchg
add
or
adc
sahf
or
cs
sysret
inc
push
xlat
jo
cmpsb
or
sub
mov
mov
imul
mov
add
jmp
adc
inc
fwait
add
add
add
add
push
or
das
mov
adcb
ja
adc
sbb
push
aam
jnp
inc
inc
sub
jg
add
add
aaa
mov
mov
add
push
mov
or
add
call
mov
mov
mov
loope
and
and
mov
mov
mov
add
push
mov
pushl
cmp
repnz
jmp
decl
add
inc
inc
inc
inc
call
cs
jecxz
iret
std
mov
ds
pop
stc
pop
clc
call
ret
mov
pushl
push
iret
push
xor
mov
pop
hlt
sbb
test
xchg
dec
ror
lock
cmp
insl
mov
mov
push
rolb
pop
push
mov
cs
imul
les
sbb
push
les
insb
mov
pop
fildl
push
jg
fs
sub
dec
push
pop
ss
mov
sbb
inc
push
cld
sbbl
push
mov
rcrb
push
push
mov
fwait
cld
cmp
aaa
test
mov
push
or
rcrl
cs
je
out
pop
pushf
es
inc
push
xor
scas
push
clc
ss
out
pop
addr16
push
lret
xlat
jl
pusha
sahf
int3
adc
jnp
pop
lock
insb
xchg
pop
push
in
pop
les
jl
insl
lcall
add
pop
sub
mov
mov
mov
enter
pop
fstpt
into
outsb
push
jo
inc
sub
cmpb
aam
je
sbb
push
iret
inc
pop
and
mov
push
insl
pusha
adc
rol
pop
test
mov
push
or
push
dec
push
jno
inc
addl
addl
pop
inc
inc
add
loopne
lea
fiaddl
icebp
movb
pop
jb
loope
aas
cmp
and
fcmovbe
adc
push
or
loop
xchg
or
sub
divl
mov
mov
dec
pop
sti
lahf
jmp
fiaddl
pop
sub
sahf
xlat
xchg
shrl
mov
push
sbb
test
clc
xlat
mov
filds
dec
enter
mov
subps
rcr
sti
adc
fs
fsubrl
dec
mov
sub
pop
inc
pop
push
jnp
pop
and
mov
xor
aad
movb
lret
iret
cmp
jle
pop
mov
jns
cmp
testb
xor
or
or
cmp
add
nop
sbb
sbb
or
sahf
mov
in
mov
xor
shll
shll
jbe
rorb
and
inc
xor
and
mov
mov
lahf
mov
js
stos
outsb
fcoml
jl
mov
pop
test
mov
cld
push
das
movsb
cmpsl
lods
aaa
pop
stos
cmp
rclb
push
jb
adc
push
aas
lahf
sahf
push
out
add
cmp
rcrb
pop
fistps
call
mov
mov
int
nop
lcall
mov
and
mov
adc
xchg
push
push
and
movsl
sbb
pop
adc
add
push
lret
inc
inc
es
popf
mov
inc
movl
cmp
mov
mov
jnp
push
lock
sbb
imul
jne
dec
cmpb
add
add
pop
push
or
dec
jne
fsts
pusha
insb
loopne
dec
xchg
jae
cmp
adc
lea
test
cli
inc
aam
mov
pop
pop
push
sbb
pop
sbb
cltd
sub
adc
adc
sbb
or
enter
nop
pop
jb
add
add
add
in
push
sbb
xchg
pop
int3
pop
mov
xchg
daa
bound
inc
xchg
dec
push
rorl
in
daa
inc
outsb
or
jo
daa
or
or
adc
popa
clts
loopne
sbb
inc
xchg
dec
outsl
inc
mov
daa
dec
and
daa
push
enter
mov
pop
sub
mov
movb
adc
add
stos
add
add
pusha
sub
xchg
or
add
cltd
jmp
jecxz
jnp
mov
mov
lcall
xor
cmp
cmpsl
mov
dec
lcall
xchg
ds
push
ja
in
lods
pop
xlat
jl
or
scas
nop
lods
lea
mov
inc
and
mov
in
sbb
addr16
adc
mov
adc
push
mov
sub
sub
ja
mov
arpl
jne
cs
mov
pop
adc
mov
fisttpl
js
nop
add
push
cmp
inc
fists
sub
rorl
xchg
bound
jecxz
push
sti
adc
push
push
lcall
or
cmp
jl
dec
lcall
xor
loopne
sbb
sbb
dec
stc
pop
pop
subb
adc
sub
test
sub
mov
fiaddl
aaa
test
andb
call
pushf
dec
dec
and
loopne
movsb
adc
jno
jb
sub
xchg
nop
xor
xchg
jmp
pushf
inc
lods
xchg
aam
les
test
jne
jbe
mov
jmp
imul
pusha
bound
test
sbb
add
push
or
jnp
ja
xchg
lcall
pop
cwtl
and
or
pop
xchg
gs
adc
adc
sbb
xchg
sbb
and
lahf
pusha
pop
xchg
sub
sub
scas
push
push
inc
or
push
pop
dec
pop
inc
sub
outsb
ja
mov
ja
inc
sarb
pushl
mov
das
xchg
xchg
sti
cmp
inc
cli
xor
rcrb
inc
or
je
sbbl
sub
xchg
xor
shrb
shrb
sbb
adc
int3
addr16
fcoms
cmp
int
adc
mov
dec
mov
inc
outsb
pop
les
adc
mov
sub
inc
jmp
push
or
fwait
and
cmp
jnp
jne
rolb
sub
test
push
icebp
addb
mov
dec
dec
lds
or
hlt
jmp
or
ljmp
ss
test
ret
or
add
rcrb
les
dec
cmp
or
adc
jmp
lods
lcall
adc
xchg
cs
dec
inc
cmpsb
jle
cmpsb
jg
mov
mov
or
pop
aas
mov
dec
mov
das
dec
or
iret
add
cwtl
pop
xchg
loope
mov
cmp
push
pop
jp
dec
subb
adc
ds
cli
pop
and
into
inc
pop
push
aas
add
insl
jge
and
add
add
add
inc
adc
mov
inc
xchg
lods
in
xchg
mov
test
pop
ret
fdivrl
push
or
pop
mov
pop
insb
insb
push
ficoml
ret
jnp
hlt
push
pop
insb
mov
pop
pop
mov
pushf
inc
ljmp
addr16
in
push
or
pop
test
sbb
add
lret
dec
pushf
daa
test
push
mov
or
mov
outsb
test
or
pop
rcr
xchg
movntps
xchg
adc
aaa
sub
divb
mov
or
arpl
add
ds
lods
pop
xchg
inc
inc
imul
sbb
fiaddl
lods
loop
or
add
fimull
ret
ret
sub
imul
ja
add
jno
popf
push
mov
sarl
dec
xchg
lahf
movb
add
adc
test
insb
mov
movsl
dec
mov
mov
xlat
dec
or
shlb
jmp
les
out
xorb
add
je
push
inc
pop
and
push
sub
cmp
ds
imul
xor
xor
cmp
cmp
jecxz
sti
or
jge
cmp
pop
sub
fmuls
pop
movsl
push
pop
mov
in
sub
xchg
shlb
pop
fs
iret
shl
clc
lods
inc
sub
cmp
hlt
dec
gs
ffree
push
xor
cmc
jl
js
clc
cmp
cmpsb
arpl
outsb
cmp
les
sarb
inc
movsl
mov
add
cmp
in
and
xchg
mov
sbb
aam
jne
popa
cmp
aaa
xchg
add
inc
cs
pop
and
mov
dec
in
lea
sub
cmp
cmp
jp
testl
adc
cmpl
pop
mov
mov
test
in
xor
test
xchg
pop
insl
jecxz
add
popa
iret
xor
push
sub
inc
jp
jne
insb
sbb
lock
push
cmpb
or
or
jp
daa
outsl
mov
ss
push
out
aam
xor
sbb
nop
gs
xor
adc
inc
or
inc
inc
jno
jmp
adc
daa
out
xchg
adc
push
sti
add
dec
daa
fmuls
add
dec
jne
jbe
sbb
sub
dec
test
out
movsb
mov
jmp
mov
call
jno
rcl
dec
pushf
sbb
push
std
push
cmp
add
dec
inc
jne
and
fistl
imul
and
sbb
subl
adc
sbb
pop
xor
ficomps
or
sbb
pop
xchg
test
inc
lahf
nop
fs
dec
push
jg
pop
sub
push
mov
lods
lret
or
adc
mov
dec
push
push
pop
inc
cmp
dec
dec
jne
pop
add
imul
and
rcll
xchg
xor
mov
repnz
xchg
push
enter
xchg
sbb
inc
push
xchg
clc
sbb
jmp
dec
movsl
test
sub
enter
je
adc
mov
jg
jge
out
jmp
cmp
or
adc
fstl
fisubrl
pop
xor
jmp
stos
popa
les
and
fcoms
sbb
mov
shll
lea
fistpl
xchg
inc
jo
cwtl
std
mov
jl
mov
mov
lods
loope
or
adc
push
mov
xchg
push
add
cmp
aas
test
int3
inc
cltd
mov
push
mov
rclb
xchg
test
ret
mov
out
std
mov
xchg
ret
mov
sti
ficomps
das
test
mov
sub
mov
sbbl
pop
add
out
call
cmpsl
es
loopne
pop
dec
adcl
aam
xor
jnp
lea
mov
add
negb
add
fdivl
add
cmp
je
ljmp
and
mov
push
movaps
ljmp
add
jae
xchg
mov
subl
lcall
out
mov
add
hlt
dec
sbb
adc
or
inc
add
and
push
mov
mov
cmovae
and
push
clc
dec
sub
push
and
fwait
andb
std
rclb
sbb
std
movsb
and
mov
insb
fs
test
mov
jle
shr
pop
jge
movswl
jp
iret
rcrl
and
sub
lock
pop
sbb
push
push
push
cmp
xlat
out
pop
nop
xlat
sbbb
fidivl
cltd
pop
pop
and
fistps
jns
adc
xor
sub
jmp
push
mov
dec
hlt
ret
dec
in
push
sbb
xor
sbb
push
pop
lret
sub
sub
pop
outsb
cs
aam
xor
xchg
test
fs
js
test
clc
xorb
dec
push
es
lock
inc
push
aas
push
aam
sub
ss
mov
arpl
int
mov
fstl
jl
lock
lea
js
or
stc
call
and
jecxz
xchg
inc
mov
xor
inc
mov
pop
and
jmp
inc
and
call
lahf
and
je
xchg
jns
sub
imul
pushf
sahf
jle
pop
sub
and
mov
xorb
sbb
jmp
pop
mov
aam
dec
adc
or
pop
sub
or
or
sti
mov
test
inc
pop
test
sbb
scas
lret
loopnew
cmpsb
push
cmp
loope
xchg
subb
in
out
jb
push
sbb
push
sub
add
xchg
jbe
dec
or
cmc
or
sbb
insl
roll
mulb
popf
add
pushf
cmp
jne
lea
mov
sbb
rorb
sbb
cmpsb
ds
insb
inc
push
subl
loop
pop
cmpl
sub
dec
xchg
out
lret
inc
dec
jmp
and
outsl
inc
and
pushf
pusha
addb
and
in
mov
sub
jge
push
dec
sub
add
inc
add
cmp
jno
dec
push
sbb
adc
mov
in
lcall
and
jmp
ret
ror
sbb
inc
mov
jne
inc
dec
add
mov
sbb
dec
ljmp
sub
cmp
aas
push
and
aad
out
xor
mov
aaa
ds
fstl
incb
or
testl
xor
and
lcall
inc
mov
inc
xor
adc
xchg
and
je
cwtl
jno
pop
pop
lahf
and
sub
adc
mov
cmc
in
or
sub
cmp
imul
xchg
sbb
jmp
and
jno
loop
sbb
stc
pop
adc
sub
push
loope
movsl
adc
push
inc
lret
or
test
inc
jo
outsb
xchg
test
inc
cmp
mov
fsubrs
add
cmp
cmp
add
or
xchg
add
sub
sub
into
ret
sbbb
mov
xor
push
mov
or
and
jbe
xchg
or
push
insb
outsl
mov
sub
push
ficoms
arpl
push
daa
cmp
xchg
inc
mov
js
or
xor
xchg
xlat
pop
pushf
add
dec
push
and
ret
jle
adc
jge
push
mov
imul
pop
mov
imul
movsb
lock
adc
addb
dec
mov
or
fwait
das
test
pop
add
sbb
imul
xchg
inc
lcall
sub
jl
cmp
or
push
leave
add
or
cwtl
cmp
mov
daa
cmp
stos
test
inc
iret
add
inc
push
shrb
or
jo
sbb
push
lods
push
rcll
jmp
popf
je
data16
pop
es
push
or
orl
pushf
pop
xor
push
adc
and
faddl
lea
lret
lods
dec
push
test
sub
ja
aas
jp
repnz
push
fwait
dec
adc
add
jne
inc
mov
lds
mov
dec
sub
pop
nop
sub
ja
add
movsb
lret
adc
sbb
cmpsb
insl
hlt
imul
lods
pop
aad
xchg
push
add
cmpsl
mov
mov
cs
loope
or
outsb
cmpsb
sub
in
and
pop
mov
sbbl
jo
lea
sahf
and
xchg
add
movsb
cmp
add
add
hlt
aaa
inc
push
pop
jb
pop
and
xlat
sbb
pop
clc
fistps
push
adc
or
stos
pop
rcr
roll
test
add
push
cmp
dec
xchg
subb
push
mov
cmpsl
and
mov
sbb
or
icebp
dec
mov
jg
pop
pop
fisubl
push
lea
test
push
mov
dec
jle
pop
mov
mov
or
or
or
inc
add
adc
xor
sbb
push
shlb
and
out
pop
jmp
cmp
je
mov
test
jbe
pop
adc
das
pop
decl
gs
in
sub
and
or
fists
je
xchg
mov
pop
cmp
cmp
xchg
dec
sahf
stc
pop
je
cmp
or
push
mov
xlat
sbb
adc
cmp
dec
in
and
sbb
add
push
xor
mov
mov
mov
and
js
pop
pop
rclb
adc
cmc
dec
xchg
inc
add
jo
push
pop
lret
aam
cmc
cmp
inc
mov
lahf
push
pop
xchg
and
lret
push
and
outsb
push
cmp
lcall
and
inc
inc
pusha
and
sahf
pop
sub
sub
inc
and
add
stos
sub
sbb
push
and
movsb
cmc
std
fs
and
lcall
add
jb
sbb
cmpsb
push
fldcw
addr16
and
jl
xorb
rcrl
mov
test
inc
push
jl
add
gs
add
push
ja
adc
add
inc
inc
mov
sbb
push
pop
push
les
dec
imul
sbb
pop
pop
xor
fs
jg
sbbl
add
push
mov
inc
xabort
jae
test
cmpsl
xchg
outsl
lock
adc
enter
and
add
or
fildll
jae
cmp
cmp
cld
push
js
xchg
scas
cmp
dec
out
mov
cmp
shr
xor
push
insb
repnz
lods
outsb
rorl
fimull
bound
push
sub
mov
lcall
mov
repz
xchg
jae
mov
or
push
mov
lret
faddl
popa
sub
repnz
and
je
sbb
sbb
inc
jo
movb
push
pop
lcall
lcall
pusha
push
pop
add
jp
outsb
push
inc
out
aas
pop
test
push
push
pop
stos
sub
push
mov
or
les
fbstp
xor
cld
orb
dec
inc
ja,pt
insb
popa
or
cmpsb
push
mov
out
into
imul
jmp
out
ret
push
inc
insb
xor
sbb
repnz
push
mov
adcl
mov
andl
sbb
call
xchg
es
and
cmp
mov
mov
rcll
fcmovnbe
xchg
adcl
insl
xlat
lock
sbb
addb
and
and
frstor
inc
sysenter
movsb
lds
push
aaa
push
in
xor
lds
out
pushf
dec
and
push
push
mulb
cmp
dec
sub
add
pop
mov
inc
dec
clc
dec
orl
andl
push
mov
push
orl
cmpl
popf
push
fldcw
mov
push
fstpt
push
pop
icebp
or
in
loope
rol
add
cmp
out
shl
cld
adc
pop
das
addb
sub
add
sti
ds
xor
pusha
enter
push
cmpb
xor
sub
mov
inc
push
sbb
call
mov
dec
dec
push
add
sub
fldt
add
push
arpl
push
push
cld
jns
or
in
pop
or
nop
or
and
bound
scas
movsb
adc
jle
jne
mov
mov
jmp
cmp
clc
jne
sub
js
mov
push
adc
pop
pop
cmpsb
ret
mov
xchg
nop
jo
das
mov
jo
pop
fidivs
fsubrl
lods
pop
xlat
push
sub
nop
shlb
push
out
dec
sub
xchg
test
fiadds
adc
cmp
jne
cs
cmp
pop
sti
enter
scas
inc
dec
push
pop
and
xchg
rorb
inc
cs
imul
push
xchg
aaa
adc
xlat
mov
int
jno
push
and
pop
adc
movl
adc
xchg
testl
and
push
push
push
sbb
iret
dec
mov
or
fadds
mov
inc
add
sub
cwtl
mov
iret
push
pop
dec
lea
cmpb
sbb
inc
lock
mov
testl
or
into
nop
push
add
xor
andb
mov
push
popa
faddl
das
mov
or
repz
add
jns
and
dec
adc
sub
imul
adc
and
incl
cli
push
and
xchg
test
or
jle
jmp
es
je
xor
push
pop
adc
das
jb
fisttpl
push
dec
xor
adc
rolb
pop
push
adc
mov
fwait
rolb
pop
lret
inc
dec
add
mov
xchg
dec
add
inc
pushf
or
inc
or
in
in
outsb
xchg
pop
jge
or
cwtl
mov
add
cmp
jo
inc
ja
adc
aam
sbb
ds
add
rorl
dec
mov
inc
fs
inc
or
js
mov
cmp
cli
clc
dec
and
mov
push
bound
mov
inc
or
lcall
sbb
push
repnz
rorl
lods
cmpl
cmpsb
mov
insl
addl
js
push
push
push
cli
jo
rol
or
or
add
cmpsl
mull
roll
test
push
dec
cmp
mov
mov
call
mov
or
addr16
loope
outsl
dec
add
add
mov
ljmp
fidivrs
ljmp
adc
outsb
ret
and
pop
mov
in
xchg
push
xchg
mov
inc
xchg
sub
mov
lea
and
jo
pop
sub
add
mov
notl
mov
and
or
add
lret
pop
adc
shlb
shlb
sbb
dec
add
orl
push
pop
fiadds
push
or
cmp
out
or
xorl
stos
mov
or
push
mov
popf
xchg
ss
add
sbb
mov
sub
jg
fldl
andb
adc
inc
lock
and
add
subl
scas
lret
shr
mov
sbb
pusha
test
popl
shlb
and
mov
mov
rclb
mov
push
pusha
cmpsb
add
dec
loope
jl
test
decl
sbb
pop
cmpl
je
daa
subb
jmp
mov
push
shl
pop
pusha
imul
das
dec
pop
fld1
das
outsb
inc
sub
xor
adc
pop
sbb
loopne
movsl
push
or
jnp
xor
add
pop
fwait
inc
sbb
dec
or
sbb
add
cmp
out
cwtl
cltd
pop
ret
fwait
dec
sbb
dec
mov
sahf
or
or
lods
and
rcrb
add
adc
jle
xchg
test
add
or
mov
mov
mov
loop
pop
or
add
push
aam
push
arpl
hlt
cmpb
arpl
inc
pop
push
popa
addr16
int3
mov
popf
pop
rcrb
in
daa
pop
push
pop
adc
mov
adc
pop
sub
pop
pop
jg
jns,pn
pop
ret
testb
je
daa
jo
cmp
push
or
ja
adc
or
test
dec
ret
ret
jns
mov
sbb
add
add
jle,pt
cmp
or
inc
mov
aad
push
lcall
movsb
push
inc
or
sbb
cmp
xchg
lods
ss
and
xor
les
mov
insl
sub
dec
movsl
and
clc
cmp
lea
je
pushf
int
pop
cwtl
gs
xor
mov
sbb
es
sti
pop
je
mov
push
mov
nop
cmp
push
add
or
addl
movsl
stc
push
in
mov
adc
jo
jl
sarb
adc
xor
adc
inc
mov
mov
mov
pop
inc
jmp
mov
push
shll
dec
dec
adc
pop
cmp
dec
dec
push
icebp
lea
jg
adc
cs
or
sub
shlb
xor
std
outsl
pop
je
mov
movb
ja
out
hlt
and
push
arpl
push
addl
xor
sahf
mov
adc
or
push
cs
or
add
xlat
push
or
rorb
mov
xor
aaa
dec
fmull
das
pop
je
mov
and
ret
aad
aas
or
in
rcll
mov
mov
mov
and
je
mov
mov
and
cmp
xchg
xchg
xchg
mov
or
pop
or
das
pop
pop
pop
leave
repz
dec
or
pusha
sti
js
dec
cmp
data16
push
xor
js
psrlq
lret
cs
dec
add
mov
sbb
popf
cmp
adc
out
sub
in
push
sub
push
mov
loop
stc
insb
mov
cmp
pop
popf
xor
sbb
inc
mov
jno
mov
js
nop
dec
aaa
mov
aad
adc
lds
shll
decl
sbb
add
xchg
xchg
dec
push
je
sub
inc
enter
push
leave
inc
adc
dec
cmovs
cs
inc
mov
jmp
sub
dec
push
and
xchg
frstor
inc
mov
dec
lahf
mov
sub
fmull
mov
lods
and
pop
sbb
clc
push
and
pop
add
dec
jmp
test
cmp
testb
dec
mov
jnp
xlat
fcoml
dec
out
adc
push
rcrb
mov
scas
pop
mov
jbe
sub
mov
jae
icebp
push
add
stos
call
or
dec
inc
or
adc
pop
aas
xor
test
jne
cld
shlb
inc
popf
lods
inc
sub
inc
fisttpll
outsb
or
or
rclb
xor
sbb
cmove
mov
add
inc
adc
add
pop
mov
aaa
jo
or
movsb
xchg
daa
cmpsl
xchg
lods
mov
xorb
pop
shr
xorb
sbb
and
adc
pop
cmpsb
sub
subb
adc
xchg
mov
push
sahf
cmp
cld
add
push
popa
inc
mov
sbb
jbe
and
hlt
xchg
fwait
mov
adc
clc
mov
cwtl
aam
bound
dec
fstps
insb
cs
xor
psubsw
pop
lods
adc
and
ds
jp
xchg
sub
mov
add
add
jne
pop
xor
sbbl
sbb
mov
jmp
lahf
cmp
int3
pop
and
inc
add
mov
sarb
adc
jne
or
pop
or
testb
cmp
pop
sbb
daa
movl
xchg
jo
aad
inc
mov
add
aad
or
imul
fsts
add
adc
mov
push
cmpsl
ret
addl
rol
add
repnz
sbb
pop
aad
cmp
mov
lret
cmpsl
fdiv
lock
dec
mov
pop
and
pop
xor
add
pop
in
call
push
add
adc
int
pop
inc
jp
add
sub
and
lea
add
loop
ret
xor
insl
dec
aaa
lds
inc
adc
jl
fmull
add
inc
or
loope
mov
ss
jb
adc
lea
shl
jae
fst
mov
incl
insl
xchg
in
adc
or
outsb
add
xchg
and
sub
sbb
clc
shrl
mov
adc
jle
lea
insb
push
mov
and
cmp
pop
fsubrp
sarb
add
add
xchg
or
or
add
flds
sbb
add
sub
mov
repnz
sbb
cmp
jb
test
sub
dec
jne
add
jmp
cmp
dec
pushf
rolb
xor
sub
mov
mov
test
pop
lea
sub
sub
push
or
jmp
sub
jg
arpl
sbb
jge
mov
jne
iret
mull
icebp
aam
and
adc
lahf
icebp
or
or
and
add
sarl
pop
xor
inc
inc
mov
or
dec
add
pusha
enter
mov
adc
in
mov
lock
pop
loope
jmp
sbb
andb
mov
add
sbb
testl
sub
mov
icebp
lcall
aam
sahf
mov
out
sub
push
dec
dec
adc
dec
sbb
fsubrs
aaa
fcmovu
mov
cmp
aaa
call
in
dec
inc
leave
das
in
or
imul
addl
add
and
add
sub
jg
adc
push
ror
call
xchg
es
iret
dec
mov
loopne
cli
in
outsl
or
or
push
bound
jne
shlb
jo
jns
inc
jne
inc
incl
sub
add
xchg
hlt
rcrl
out
pop
xchg
rolb
or
mov
ss
or
lea
shrb
les
and
inc
std
test
fiadds
xor
mov
imul
pusha
xor
dec
xor
sub
in
mov
test
dec
loopne
jecxz
xor
mov
imul
shll
push
insl
adc
or
adcl
pusha
and
inc
sub
cld
xchg
push
cmpb
sbb
inc
subl
mov
push
xchg
xor
push
pop
test
int
ret
pop
add
int3
sub
lods
sbbb
xlat
mov
jmp
pusha
mov
xor
mov
mov
movsl
pop
xlat
add
sub
das
lock
lods
adc
adc
rcll
fs
or
add
jno
jo
add
sbb
push
fmul
add
js
or
xchg
icebp
sub
adc
js
jne
mov
inc
popa
pop
jne
stos
test
xor
js
call
test
inc
in
pop
mov
sti
aas
sbb
loopne
mov
les
imul
mov
aam
icebp
mov
adc
cmp
dec
xchg
mov
push
sbb
sbb
ds
or
imul
int3
and
shlb
stos
aam
pop
sahf
push
rolb
jle
pop
ret
subb
push
push
scas
xor
sbbl
cmpsb
jg
and
mov
add
and
cmp
and
ss
adc
mov
sub
pop
incl
std
sbbb
xchg
cmc
mov
or
rol
sub
push
and
jo
bound
lods
jmp
adc
ret
xor
and
or
pushf
mov
and
cmp
arpl
data16
mov
jl
and
insb
testb
push
andb
xor
mov
das
push
sub
or
cmp
sbb
add
adc
or
mov
sahf
cmpsl
and
adc
mov
enter
add
daa
sbb
push
incb
inc
push
cltd
cltd
sub
sub
ret
fs
xchg
or
or
inc
sbb
popa
pop
adc
ds
cmp
push
cmp
cwtl
adc
mov
fsubrp
dec
or
cmp
mov
add
pop
dec
mov
pop
jmp
sub
push
or
and
mov
sub
popf
cmpsl
adc
add
clc
stc
pusha
arpl
es
lret
or
xchg
nop
push
inc
dec
jmp
xchg
dec
mov
push
dec
loopne
mov
negb
das
sbb
jae
addr16
pushf
insl
mov
jmp
fimuls
inc
xchg
fnstenv
mov
jp
pop
test
mov
or
dec
or
jecxz
dec
mov
inc
mov
mov
ss
pusha
outsl
or
mov
mov
popf
dec
sbbb
cmpb
and
aas
adc
jg
inc
add
sub
mov
dec
jle
xchg
pushf
jbe
mov
or
jle
sbb
mov
xor
cmovae
daa
push
xlat
sub
inc
rorb
adc
inc
icebp
sub
arpl
in
mov
cmp
gs
popa
adc
sti
sub
es
pop
dec
pop
jg
fistpll
insl
xchg
in
sub
add
jle
push
mov
jl
jmp
xchg
pop
insb
adc
dec
ljmp
imul
push
and
arpl
rcrb
push
sub
aaa
add
and
cmp
push
popa
mov
ror
movsb
loopne
and
lock
dec
test
es
addr16
add
xchg
push
add
je
ficoml
jg
stos
inc
das
aas
mov
ss
fldt
jle
cmpsb
mov
sbb
fidivrl
push
sub
adc
inc
jg
and
sbb
shrb
xlat
pop
xchg
push
dec
out
mov
out
or
adc
mov
mov
and
xchg
int3
sbb
cwtl
mov
lods
mov
daa
mov
sub
inc
pop
inc
sbb
mulb
lods
fwait
sahf
imul
movsl
xor
outsb
adc
stos
mov
push
je
cmpsb
and
or
adc
lea
cmpsl
adc
pop
cmpsl
aaa
or
sbb
mov
popf
push
arpl
mov
mov
cmp
xor
or
push
mov
xchg
std
or
sbbl
loope
add
imul
push
xor
clc
mov
out
or
dec
jle
enter
or
js
mov
leave
data16
out
enter
xchg
or
fcom
aad
popf
and
or
dec
lods
andb
pop
into
sub
gs
and
xchg
cs
cmp
or
mov
add
sbb
cmpsb
xor
jmp
pusha
sub
rcl
jns
sbb
lcall
sub
and
test
jl
addr16
cmp
jbe
bound
inc
add
gs
dec
inc
das
sbb
jo
cmp
ljmp
or
jnp
push
pop
mov
arpl
sub
mov
ret
sub
addr16
mov
nop
mov
sub
inc
push
inc
push
lahf
add
lods
ss
js
sahf
outsl
xchg
imul
lea
arpl
push
loope
sbb
push
xchg
fs
cmpl
sub
sbb
ret
inc
shll
inc
pop
aam
push
rcl
or
inc
clc
mov
loop
loopne
cmpsb
xorb
and
mov
call
adc
cmp
std
aam
or
push
insl
push
icebp
inc
cmp
enter
adc
sub
pop
out
outsl
inc
in
shlb
add
add
and
inc
dec
or
xchg
jne
fcmovu
xor
pop
stos
jo
xchg
jns
inc
mov
add
xchg
sub
push
out
or
sarb
add
dec
adcl
andl
or
ret
mov
outsl
ret
add
and
sbb
dec
nop
and
push
pop
mov
push
lock
pop
rep
and
or
daa
adc
mov
push
adc
or
iret
repnz
or
dec
es
les
or
je
mov
or
mov
arpl
jne
testb
in
mov
inc
sbb
or
sub
push
and
adc
push
xor
cmc
cmp
pushf
push
push
inc
loopne
adcl
test
movswl
sbb
cmpsb
pop
insl
and
pop
dec
push
mov
test
or
add
aaa
pushf
fisubl
inc
cmp
or
pop
xchg
and
or
inc
cmp
mov
push
mov
add
loop
adc
dec
or
test
jge
movsb
push
aad
pop
xchg
or
adc
pop
mov
rorl
rclb
sbb
lcall
mov
push
pop
incl
cmp
clc
push
sbb
sub
fstl
mov
sub
aaa
adc
insb
es
data16
mov
jne
or
dec
cmpsb
int3
test
pop
xor
inc
pop
addl
jns
cmp
enter
or
or
cmp
ret
sbb
sub
repz
shrb
dec
repz
loopnew
pop
mov
or
jbe
jp
mov
inc
sub
cwtl
clc
push
xor
pop
or
sub
icebp
jb
jns
sub
inc
pop
mov
loopne
cmc
or
dec
clc
jecxz
mov
push
inc
add
and
bound
sub
pop
pop
sbb
inc
dec
xchg
or
xchg
cmp
mov
daa
or
mov
and
ds
dec
add
and
iret
pop
sbb
inc
or
dec
cmp
or
pop
lods
and
sub
pusha
xor
mov
cmp
cmp
or
cld
int3
pop
clc
pop
sub
mov
cs
fs
push
adc
rcrb
push
push
and
sbbb
das
movsl
or
test
jle
pop
or
imul
and
data16
addr16
clc
pop
inc
popf
mov
icebp
fs
push
insb
rorb
imul
cmovno
pop
imul
or
out
insb
fmull
and
xchg
mov
cmp
sbb
xor
add
cmp
push
cltd
data16
push
shlb
movsl
nop
add
lea
mov
aaa
fildl
and
cltd
lds
mov
push
mov
das
sbb
aam
icebp
out
into
daa
mov
hlt
pushl
xorb
xchg
dec
and
and
xchg
or
scas
iret
add
fcomps
and
movsb
jo
fldl
sub
sbb
sub
inc
sti
adc
call
sbb
enter
sbb
push
jo
js
add
pop
mov
scas
push
dec
add
add
add
jns
inc
in
fildl
mov
add
insl
cmp
push
add
ljmp
lock
pop
lcall
sub
sub
das
dec
stos
add
xor
xor
and
addb
xor
and
outsb
sbb
sbb
jns
dec
je
add
jmp
in
aam
xchg
icebp
add
int
pop
pop
sbb
dec
or
add
repz
push
shrb
loop
fcomps
dec
push
pop
les
scas
adc
and
pminub
sbb
loopne
cld
loopne
push
add
or
aaa
add
push
jne
sbb
mov
adc
fidivl
inc
das
pop
out
stos
xchg
jl
ret
insb
sbb
adc
mov
cmp
js
sub
xchg
or
mov
icebp
xchg
fidivrl
mov
repz
test
inc
mov
das
in
or
jmp
sub
adc
imul
sbb
push
mov
jne
loope
arpl
mov
mov
dec
fwait
jp
or
jne
xor
aaa
hlt
or
cmpb
loopne
sub
fs
xchg
aam
inc
sbb
pusha
mov
and
dec
sbb
push
pop
mov
inc
movl
xor
and
in
daa
sub
dec
or
flds
xor
loop
mov
xchg
je
lds
lahf
push
out
addr16
lods
mov
xor
pop
xor
inc
jmp
pop
aas
mov
cmc
bound
das
xchg
aad
sbb
pop
cmp
das
push
dec
add
xor
inc
int3
jo
clc
movb
cli
mov
sarl
test
or
adc
orl
sub
clc
mov
shrb
sbb
add
xor
andl
popf
mov
lret
fs
fnsave
comiss
stos
addb
pop
xchg
les
cmpb
inc
movb
xchg
inc
dec
lea
xor
ret
dec
call
mov
or
shll
leave
cs
fldcw
ret
sbb
push
mov
cmp
mov
enter
shll
js
mov
fsubl
movsb
push
or
and
inc
dec
and
pushf
xchg
mov
insw
cltd
fldcw
pop
pushf
mov
and
or
pop
push
mov
cmpsl
sub
xchg
xchg
pop
xor
lcall
ja
nop
ljmp
and
sbb
sub
pop
shrl
sub
mov
pushf
hlt
pop
add
adc
out
iret
xor
adc
and
daa
outsb
mov
sbb
inc
cwtl
dec
jnp
add
inc
lahf
pop
cmp
fsubrl
sbbb
push
mov
and
xor
rcrb
pop
ljmp
mov
ja
jmp
push
incl
mov
cs
inc
cmp
xbegin
shr
inc
add
inc
add
sub
std
push
dec
cmp
setle
es
sub
inc
dec
inc
dec
adc
or
nop
cld
push
sub
and
mov
cmpsb
rclb
ds
xlat
addb
inc
sti
mov
inc
popa
jmp
push
sbb
inc
pop
or
cmp
cwtl
pushf
stos
jne
sub
cltd
adc
cmp
inc
test
call
mov
xchg
and
pop
jecxz
inc
loopne
insl
adc
fs
lret
sub
add
inc
adc
in
mov
nop
add
orb
loopne
push
push
aaa
cmpsb
mov
adc
subl
sub
mov
push
mov
mov
sub
or
xchg
out
cmp
sbb
lock
add
mov
in
add
pushf
movb
fnstenv
mov
and
mov
imul
sbb
icebp
mov
add
sbbl
dec
sub
aaa
jl
push
mov
xchg
sub
jmp
mov
xchg
pop
or
add
imul
popa
or
pop
add
out
mov
loope
add
inc
es
lock
fs
scas
addr16
dec
popa
dec
imul
xor
push
mov
mov
loope
and
jae
imul
js
jg
jmp
xor
add
jmp
sbb
lods
mov
jmp
push
or
leave
gs
push
movsb
shll
test
test
xorl
insl
dec
leave
sub
lods
out
aam
cmpsb
pcmpgtw
or
or
das
xchg
cmp
inc
cli
add
push
ss
shll
push
xlat
out
stos
xchg
pop
or
sub
and
ret
xor
cmp
rcrb
and
hlt
add
ret
push
enter
imul
stos
mov
and
dec
insl
pop
subb
push
pop
jg
loop
pop
cmp
jne
popf
loope
add
cltd
and
add
sbb
xor
xor
add
mov
or
mov
loop
mov
dec
xor
pop
xchg
adc
shr
adc
push
cmp
or
je
out
inc
out
in
xchg
fs
jge
adc
sbb
jge
xchg
or
adc
and
cmp
jmp
fimull
clc
insl
inc
mov
pop
pop
xor
inc
inc
push
hlt
pusha
in
and
int
movsl
inc
fdivrl
sub
fcompl
adc
fisubs
or
add
push
mov
or
mov
sub
stos
cmp
or
and
or
pop
mov
clc
cwtl
into
sbb
cmp
jne
push
insl
lea
lret
test
pop
lahf
push
mov
mov
sarl
and
addb
push
dec
vmovupd
ljmp
inc
test
pop
sub
mov
xchg
pop
pop
fadds
xor
xchg
cmp
add
xchg
in
sbbb
push
mov
and
mov
or
lret
cmpsb
dec
mov
or
iret
or
and
jbe
imulb
sti
loope
pop
mov
sbb
jae
dec
add
jo
outsl
cmp
xor
nop
or
nop
jbe
pusha
outsb
loop
ret
lods
call
jnp
incl
std
jne
sbb
push
bound
iret
adc
in
sbb
jb
cmp
clc
mov
fdivs
es
mov
adc
sub
xor
lret
dec
sub
movsl
xchg
fdivrp
mov
ss
add
xor
add
inc
or
pop
js
xor
or
pop
cmpsb
imul
pop
dec
inc
ljmp
and
repnz
sub
mov
test
sarl
aas
adc
sbb
sub
and
mov
cwtl
inc
lock
mov
xlat
pop
imulb
sbb
pop
mov
adc
sbb
pusha
xor
mov
les
fsubrp
inc
pop
les
and
push
ficoml
rcrb
or
mov
jle
push
add
insl
jne
test
add
dec
daa
jecxz,pn
push
or
daa
add
dec
je
pop
bound
mov
test
clc
sbb
or
dec
inc
ret
scas
xor
insl
jne
and
add
sbb
inc
add
sbb
mov
jne
in
or
mov
arpl
dec
inc
loop
aam
xchg
push
xor
jg
sbb
sbb
inc
jp
add
mov
movsb
je
xchg
push
sub
ss
and
in
fwait
mov
jmp
test
or
xor
add
cmp
jne
sahf
lods
test
push
sub
mov
adc
popf
pop
cmp
jle
scas
insl
jmp
lss
and
mov
mov
sbb
xchg
test
shll
xor
dec
fprem
xlat
call
cmp
cmp
push
add
movzwl
inc
mov
or
pop
add
scas
sahf
xor
cmp
xchg
jnp
dec
mov
ret
rcrb
ja
daa
cmovge
mov
and
imul
push
or
ja
shlb
mov
xchg
adc
outsb
enter
jne
neg
push
nop
fwait
rol
orl
inc
bound
imul
push
aam
inc
push
sub
adc
sub
addb
dec
mov
sub
add
and
lea
sub
add
add
dec
xchg
and
jnp
add
lods
push
rclb
call
clc
or
dec
pop
xchg
in
mov
or
adc
inc
xchg
adc
mov
and
or
sbb
int3
pop
add
nop
je
add
and
subb
sub
sbb
cmp
inc
xor
xor
or
es
adc
xor
dec
dec
ficoml
movsb
fwait
add
or
push
sbb
xchg
jns
inc
call
mov
adc
jg
imul
testb
pop
add
add
and
shl
sbb
pop
and
jmp
pop
fldenv
pop
mov
push
sub
dec
mov
mov
lea
ret
inc
pushf
mov
jno
mov
pop
adc
mov
ja
xchg
push
xchg
je
and
fcoms
mov
push
add
add
negb
dec
add
push
aas
mov
add
pushf
mov
test
xchg
or
and
sub
lods
sahf
nopl
repz
sub
xchg
adc
sub
fwait
inc
or
jle
xor
iret
outsb
mov
and
insl
push
sbb
mov
ds
bound
jno
fwait
push
shll
sub
pop
or
adc
xchg
or
orb
pop
and
adc
inc
adcb
in
push
sbb
jno
xchg
mov
test
pop
or
adc
mov
xchg
mov
push
xchg
xor
mov
adc
fstl
insb
xchg
xchg
mov
push
fistl
mov
or
push
mov
add
adc
push
mov
fisubrl
xor
mov
das
xchg
inc
cwtl
push
lods
data16
loop
add
cmp
cmpb
scas
icebp
outsl
cmp
cmpb
mov
popa
xchg
sbb
les
loope
lea
or
push
sub
inc
ja
add
mov
mov
xchg
int
dec
je
enter
jg
mov
jnp
arpl
push
aaa
adc
mov
popf
or
fs
pusha
lock
pop
or
insl
xlat
popa
add
imul
adc
dec
fadds
inc
and
dec
adc
lods
leave
arpl
inc
mov
or
std
mov
jno
adc
xchg
push
or
aaa
add
repnz
xchg
sbb
shlb
shl
frstor
mov
rcrl
and
lahf
mov
shlb
repz
xchg
arpl
sub
sbb
mov
add
rcr
push
xor
fiadds
adc
test
adc
cwtl
mov
aam
push
movsl
emms
test
push
mov
fisubrs
xor
cmp
and
mov
ss
mov
ficompl
in
ljmp
gs
sbb
xor
bound
cmpsb
nop
sub
sub
je
lcall
push
or
jne
test
adc
or
or
dec
dec
xor
sub
daa
and
cmpsb
lds
sbb
mov
add
popa
ss
jmp
cmpb
je
addr16
mov
inc
int3
sbb
bound
addl
adc
xorb
mov
inc
ss
pushf
ret
jmp
je
dec
mov
xor
mov
lds
adcl
pop
data16
adc
fdivrl
mov
je
aad
in
cmp
arpl
inc
mov
push
or
mov
inc
loop
jl
subl
mov
negl
inc
daa
add
jmp
adc
fistl
cltd
sbb
aas
addb
dec
sub
sbb
out
insb
stos
push
sbb
sub
mov
in
mov
or
or
add
fisubrs
push
inc
mov
mov
and
mov
sub
clc
add
test
int3
push
pop
cmpb
inc
pop
fwait
test
jmp
xlat
adc
add
sbb
repz
call
hlt
jmp
sub
or
push
movsl
or
mov
or
xchg
and
adc
xchg
nop
inc
cmpl
rcrb
dec
movsl
pop
aad
push
shll
dec
cmp
loope
push
mov
inc
add
sub
xchg
inc
cs
jmp
push
and
xchg
cmpsb
push
inc
sub
push
sbb
out
adcl
push
cmp
jnp
pop
xor
rorl
stos
mov
and
push
outsl
xchg
adc
cmp
sbb
sub
lods
sbb
add
or
push
xor
xor
cmp
dec
shll
loopne
daa
push
cmp
add
sti
call
pop
movhps
js
xor
inc
add
and
enter
mov
fstp
popl
inc
rclb
jns
idivb
les
les
jmp
and
jne
or
push
xor
inc
ljmp
push
nop
psraw
cmpsb
loopne
add
outsl
pop
or
mov
mov
and
xor
in
jae
aam
push
imul
or
lds
sbb
cmp
leave
and
sbb
or
and
mov
mov
incb
jecxz
cmp
call
jle
aam
add
dec
xchg
mov
xchg
loope
test
pop
rcll
into
nop
outsb
pop
icebp
jg
jb
add
mov
imul
mov
mov
add
xor
inc
imul
cmp
pop
sbb
arpl
or
jl
jl
cmp
push
and
cmp
sbb
mov
push
push
pop
jno
dec
movsl
stos
loope
mov
clc
or
sbb
push
inc
or
add
loop
pop
add
js
adc
ret
and
push
xor
inc
cltd
mov
sub
xor
pop
xchg
push
mov
ja
adc
xchg
fstps
dec
xor
scas
add
inc
inc
loopne
sarb
adc
dec
push
mov
mov
inc
sahf
mov
sub
fnsave
xchg
js
adc
sub
je
inc
push
adc
xlat
inc
xor
gs
xchg
xchg
xor
andl
sub
dec
es
inc
mov
daa
pusha
or
mov
push
sbb
add
movsl
stos
dec
push
mov
jbe
les
cmpb
pop
loope
inc
add
push
xchg
aad
and
loopne
xchg
js
gs
fildll
sub
popf
aam
or
or
sub
xlat
fldcw
push
sub
add
add
add
adcb
mov
dec
inc
icebp
sbb
adc
mov
push
cmp
mov
or
sub
data16
lds
cwtl
xchg
inc
sub
jg
cmpsl
cmp
data16
inc
push
add
mov
fdivr
pop
and
subl
mov
adc
fwait
loopne
adc
and
push
push
fstps
cs
jb
lcall
push
ss
sbb
fwait
or
xchg
arpl
dec
or
unpcklps
sarl
push
mov
mov
test
or
mov
xchg
mov
les
xlat
xor
nop
shrb
lret
out
and
add
movsb
int3
lods
push
es
add
aas
mov
adc
arpl
cs
in
lret
inc
add
sbbb
lahf
shlb
negb
in
mov
imul
cmp
inc
sbb
mov
sub
stos
add
cmp
je
dec
aas
xor
repz
inc
sbb
sbb
jne
sub
and
jmp
jno
xchg
sub
push
push
xor
sub
mov
inc
add
dec
fs
rolb
cmp
push
test
frstor
push
sbb
xor
clc
push
mov
add
int
xor
mov
cwtl
lock
popf
mov
push
inc
mov
pop
mov
dec
leave
push
ret
test
push
cmp
cmp
inc
jo
add
pop
aaa
inc
fwait
loopne
inc
aas
lods
fldcw
rcll
and
sbb
xchg
sbb
sbb
mov
push
fistpl
inc
add
es
pusha
movzbl
aas
mov
inc
lahf
aam
xchg
stos
push
outsb
and
inc
sub
test
bsr
inc
scas
mov
daa
pop
cmp
mov
addr16
add
adc
inc
imul
lcall
jb
shlb
imul
add
push
loope
call
ss
fisttps
cmp
inc
or
scas
jb
sbb
sbb
add
sbb
xorb
les
adc
cmp
je
rcrl
or
jecxz
imul
add
push
push
test
add
jne
inc
outsb
sub
add
movsb
push
push
or
js
adc
jo
adc
cmp
insb
add
mov
inc
adc
push
sbb
rcrl
fbstp
daa
mov
adc
push
dec
cmp
rcrb
add
adc
pop
orl
dec
mov
sbb
mov
adc
adc
or
repz
mov
pop
or
mov
add
sub
jns
add
and
das
repnz
cmp
rolb
dec
mov
sbb
push
adc
mov
or
or
nop
ja
jns
sub
dec
adc
movswl
imul
jle
add
adc
lods
add
sbb
mov
in
jns
cmpsl
pushf
mov
sbb
push
xor
cmp
xor
scas
daa
lahf
pushf
fiaddl
fs
daa
dec
push
movb
scas
xor
mov
lahf
xchg
cmp
dec
cmpl
outsb
sub
mov
repz
xlat
xchg
rolb
mov
call
aaa
mov
cmpsl
cmp
test
dec
xchg
test
mov
pop
sub
jbe
adc
push
mov
push
jb
mov
push
jae
xchg
xchg
adc
pop
or
and
pop
xlat
mov
add
push
rorl
je
ret
adc
add
sbbb
pop
das
cmp
xor
and
enter
push
cmp
aaa
xor
and
push
inc
sahf
add
shlb
int3
enter
mov
adc
adc
cmp
push
cmp
pop
lret
loopne
mov
sub
repnz
rcrl
stos
xor
in
das
jno
cmp
ss
push
xchg
imul
sub
or
test
add
sub
loopne
or
dec
sub
adcl
repnz
repz
push
hlt
jmp
xor
push
shrb
dec
cmp
inc
cltd
inc
xchg
insb
xchg
mov
add
push
minps
cmp
xor
and
dec
or
test
mov
testb
and
xlat
inc
and
gs
mov
jge
mov
push
xchg
and
jno
xchg
push
add
or
shrb
push
inc
xchg
jne
aam
cs
adc
stos
xchg
shrl
outsb
add
sbb
sub
dec
fsubp
add
xor
lahf
call
loope
xor
data16
daa
adc
push
and
inc
add
add
and
mov
adc
inc
xchg
je
dec
cmpsb
rol
dec
add
outsl
jnp
cmpsl
adc
cmp
divl
push
mov
mov
sub
mov
pop
imul
add
pop
cmp
mov
push
xor
mov
inc
lods
in
mov
pop
push
sub
mov
sub
insl
test
orl
push
mov
add
js
in
pop
cmp
add
adc
mov
addb
mov
or
inc
arpl
cmp
nop
pusha
sbb
inc
inc
pop
or
sub
add
push
mov
sbb
sti
pop
add
test
mov
or
sbb
xlat
test
and
pop
shlb
repnz
sahf
xchg
icebp
push
lea
ja
rorl
imul
add
add
dec
cmp
out
pop
insb
and
test
push
mov
add
cmpsb
mov
pop
mov
gs
push
ss
add
sub
rcr
cmp
imul
into
add
add
inc
cmp
pop
mov
mov
mov
imul
daa
xchg
mov
data16
add
or
push
mov
iret
ljmp
push
sbb
arpl
xor
aas
repnz
enter
in
sarb
and
in
xor
dec
dec
jns
adc
aam
insl
sbb
mov
pusha
sbb
sbbb
in
inc
in
xchg
xchg
arpl
push
add
je
imul
arpl
je
mov
rorl
dec
add
sub
rclb
push
and
mov
push
icebp
push
cld
ds
push
je
pushf
sahf
aam
pop
popl
jecxz
addb
cli
dec
and
adc
icebp
sub
and
sbb
mov
sub
cmp
leave
in
cmp
adc
fnstcw
pop
inc
pusha
or
mov
mov
push
imul
mov
or
push
pop
and
add
mov
jge
and
add
xor
mov
inc
out
push
xchg
add
mov
xchg
and
gs
es
pop
ret
adc
sbbl
xor
xchg
inc
sub
mov
mov
dec
out
jle
xor
js
movb
pop
stos
mov
aam
shl
and
sbb
xorl
pop
imul
and
sbb
push
adc
inc
pushl
enter
jle
xchg
rcr
rolb
push
add
mov
outsb
inc
or
inc
imul
data16
inc
shlb
outsl
adc
push
push
sub
imul
das
mov
sarl
adc
cmp
jle
jae
cmp
and
cmp
cmp
enter
ret
pop
xor
mov
push
push
pop
js
or
and
sbb
jle
push
or
push
mov
or
cli
repz
lock
mov
js
jae
mov
push
clc
jne
les
jae
add
push
ret
ret
scas
inc
xor
outsl
add
scas
test
sbb
icebp
stos
pop
xchg
jns
cld
mov
adc
outsb
xor
push
or
mov
sub
sarb
xchg
jae
mov
sub
xchg
mov
jle
sub
push
dec
cmp
lds
jo
mov
push
jp
and
outsl
inc
and
cld
mulb
push
xor
and
cmpb
cwtl
popa
adc
pop
je
dec
and
mov
sub
push
xchg
push
add
lock
or
sub
pop
jmp
pop
xor
push
inc
popa
and
jg
fadds
aaa
sidtl
fcomip
xchg
dec
cld
add
add
push
and
cmpl
dec
cmp
sub
insl
pop
add
dec
orl
xor
jne
inc
mov
shrb
sub
adc
mov
push
call
ljmp
pcmpeqb
push
imul
js
rcll
and
mov
aam
mov
and
test
sarl
dec
mov
stos
dec
sbb
shrl
add
push
addb
inc
pusha
add
jmp
add
xchg
push
push
addl
jae
cmp
ficoml
movsb
lods
dec
add
cs
xchg
jp
test
cmp
xchg
jge,pn
scas
rcl
or
and
nop
pop
adc
jmp
add
adc
mov
mov
cmpsb
or
out
and
es
pop
mov
test
xor
add
loopne
push
mov
data16
adc
popa
sbb
addr16
aad
pop
inc
lds
pop
aas
iret
jae
dec
push
sbb
jmp
addb
push
iret
adc
cmpsl
movsl
cmp
adc
addb
and
mov
or
mov
xor
sbb
sti
loopne
pushf
lods
lahf
and
and
arpl
daa
sbb
dec
repz
sbb
or
test
push
jecxz
jne
push
imul
js
jge
pop
pop
sub
jg
xchg
cmp
inc
aam
mov
cmpsl
mov
mov
xchg
pop
insb
inc
imul
mov
repz
daa
sbb
into
and
dec
fiadds
es
popa
icebp
je
mov
into
xlat
add
pop
movsb
aaa
dec
icebp
mov
adc
inc
adc
mov
push
push
cmp
mov
xchg
add
mov
hlt
mov
sbb
add
and
xchg
insb
lods
add
test
div
mov
ret
jge
cmpsb
mov
push
adc
or
pop
sbb
je
mov
loopne
arpl
mov
data16
xchg
ss
xchg
xlat
js
js
push
and
pop
in
inc
jmp
lret
jne
cmp
pop
adc
inc
out
add
xor
cmovo
cmp
mov
imul
push
adcb
or
xchg
rcl
dec
add
fildll
shlb
jae
mov
sub
pop
pop
jno
rcll
in
in
js
push
inc
sub
ret
dec
jg
les
dec
ret
add
sub
lods
mov
sbb
mov
movsb
jo
cmp
test
xchg
cmc
cmp
jge
daa
in
inc
lock
pushf
add
fucomip
adc
jle
and
stc
aad
arpl
lea
les
push
inc
add
jno
dec
lods
pop
jo
cwtl
lret
add
sbb
pop
mov
les
out
xchg
mov
pop
adc
add
push
fcomps
gs
mov
pop
lods
adc
test
pusha
dec
lahf
sbb
into
push
add
shlb
push
movsl
insb
push
pusha
dec
inc
pushf
in
fists
mov
ret
nop
pusha
sub
mov
out
xor
inc
dec
jno
inc
jp
ficompl
nop
hlt
push
lods
add
js
pop
mov
es
jnp
movsb
loop
adc
push
lea
repz
sbb
loopne
fbld
sub
pop
or
imul
pop
add
or
das
xorl
lods
mov
decl
dec
lods
loopne
push
lahf
push
test
sbb
xor
push
fstpt
or
das
jne
xor
cs
xchg
sub
inc
jo
push
add
ret
mov
sbb
xorb
call
or
mov
lds
and
hlt
mov
aad
imul
cmpsl
adc
adc
clc
mov
repnz
enter
pop
cmpb
dec
inc
fwait
adc
add
sbb
jae
mov
scas
push
or
adc
xchg
pop
shll
or
daa
or
bound
fisubl
fcmovu
jns
push
in
pusha
cmp
mov
xchg
sub
or
and
push
test
cltd
cmpb
dec
adc
shufps
out
xor
push
push
movb
dec
adc
fstpt
push
push
push
inc
cmpsb
add
adc
xor
shrb
xor
add
sbb
std
mov
rorb
stos
bound
addr16
cmp
mov
adc
sbb
and
scas
pop
lret
fwait
or
push
jo
int3
mov
out
bound
pop
sarb
ret
mul
jecxz
fsubrs
sahf
movsb
xchg
dec
mov
sub
cmp
push
adc
rorl
or
push
adc
test
sub
add
push
add
clc
enter
fcoms
xchg
cmpsl
das
mov
xchg
inc
mov
jb
inc
rcrb
adcl
sbb
push
jae
daa
inc
fmull
je
sbb
inc
add
out
sbb
inc
or
arpl
jmp
push
xor
mov
push
sub
adc
ret
push
fstl
sbb
or
mov
ret
sub
jae
push
add
inc
outsl
test
pop
inc
fistpll
inc
and
xchg
pushl
adc
adc
dec
sbb
xchg
push
pop
les
ja
push
es
call
in
cmp
jbe
mov
push
nop
enter
mov
adc
sbb
push
pushl
jl
dec
sub
add
stos
fistps
xor
shlb
lods
or
pop
lcall
adcb
and
jae
aas
rorb
cmpb
jp
iret
inc
xor
dec
jge
add
add
jle
xlat
mov
pop
clc
add
push
roll
loop
gs
lock
or
adc
sbb
add
xchg
ljmp
sbb
pusha
add
cmpsb
cmpsl
add
push
mov
mov
push
xchg
or
add
lret
addr16
pop
je
es
or
mov
mov
ret
or
sbb
dec
or
lods
jecxz
mov
or
clc
mov
jl
sti
mov
mov
mov
or
jecxz
or
xchg
stos
mov
adc
movsl
cmp
add
outsl
adc
pop
insl
rorb
sub
fists
mov
or
push
push
push
scas
mov
push
lds
fisubl
lea
adc
sbb
dec
js
inc
jb
inc
xchg
stos
sub
bound
ljmp
sub
sub
mov
adc
or
cmp
in
mov
clc
clc
sahf
gs
addr16
in
or
push
xchg
inc
or
mov
xchg
jnp
loopne
rcr
js
out
int3
fmul
aam
and
adc
mov
sahf
or
xlat
mov
mov
mov
stc
mov
add
lret
mov
mov
add
addr16
xor
popa
push
lret
jbe
jge
enter
movb
or
dec
cmp
add
or
xor
cmp
xor
jle
inc
or
js
sub
popf
sub
mov
sub
inc
jnp
mov
or
stc
or
pop
sub
mov
ds
mov
daa
and
out
dec
mov
inc
lods
lods
cs
repnz
mov
dec
or
mov
push
mov
xchg
cli
push
cli
sub
mov
cmpsb
jne
outsl
mov
hlt
xchg
mov
inc
and
xor
loopne
sbb
jge
adc
or
loopne
dec
lock
push
adc
outsl
das
das
or
rep
lea
fdivr
cmpsl
ror
jle
push
fdivrl
dec
add
aaa
and
add
dec
mov
mov
loop
pop
adc
fmul
adc
aaa
das
das
or
push
pushf
int
aam
adc
into
inc
dec
add
mov
and
sbb
inc
jmp
add
sbb
pop
fisubrs
pop
cmp
and
jbe
xlat
or
fmull
or
addr16
xchg
dec
fadds
push
sbb
sbb
mov
or
xor
es
jg
push
rdmsr
and
jb
add
add
loopne
pop
mov
dec
push
and
add
fildll
jmp
mov
and
and
dec
aas
pop
int3
pop
add
jecxz
jle
pop
xor
mov
call
mov
jbe
in
test
jl
or
jno
xchg
pop
xchg
xchg
cltd
add
dec
or
jnp
movsl
xchg
inc
pop
add
hlt
mov
and
adc
fmuls
insl
sbb
unpckhps
dec
cmpb
sbb
mov
xchg
jge
test
sarb
and
sbb
dec
mov
push
jnp
jo
rcrb
popa
sub
inc
mov
jne
jl
icebp
fmul
popf
add
and
sub
inc
sub
push
xchg
into
rorb
enter
jge
icebp
push
jmp
pusha
sub
dec
adc
mov
sarl
out
notl
into
inc
dec
or
mov
aam
sbbl
add
inc
jnp
je
push
clc
xchg
sub
test
and
in
dec
aam
icebp
pop
leave
repz
add
mov
cltd
jbe
or
cmp
cmp
push
jecxz
stc
cmp
or
fs
das
push
lea
pop
and
outsb
lods
push
pop
pop
shrl
dec
xlat
gs
push
fwait
scas
rolb
inc
sbb
push
dec
jle
call
adc
push
dec
mov
lahf
push
jp
sbb
inc
sahf
lret
dec
sbb
in
add
and
adc
add
pop
add
jbe
out
sub
pop
or
push
push
les
icebp
sub
hlt
insb
xchg
or
sahf
mov
mov
add
enter
pop
jnp
adc
rclb
lea
loopne
dec
sbb
mov
xchg
in
pusha
sub
les
push
insl
add
cmp
aam
enter
cmp
fmuls
insl
mov
inc
test
sub
jo
adc
add
aam
add
popf
rcrb
into
add
test
mov
lahf
add
cltd
or
adc
loopne
dec
shlb
xchg
xorb
or
xor
bound
popa
dec
cmpsb
dec
adc
ret
jo
jg
pop
or
outsb
dec
xor
hlt
jne
and
xor
aam
jmp
jne
and
rcrl
cmpl
xchg
jo
mov
adc
aas
lret
jo
test
cvtps2pi
test
push
nop
mov
adc
leave
mov
push
testl
stos
dec
mov
ret
js
adc
bound
xchg
sarb
push
add
pop
movsl
dec
inc
loope
neg
loopne
jecxz
or
or
add
adc
dec
call
add
sbb
test
and
bound
jp
add
pusha
cmp
inc
insl
dec
ret
jmp
xchg
adc
pop
sbb
clc
testl
fldpi
sbb
test
add
add
dec
ljmp
int
inc
jge
pusha
cmp
in
add
cmp
aam
test
lea
std
nop
sbb
popa
mov
adc
ret
or
jns
inc
movsb
aaa
pop
jnp
xor
mov
cmp
ss
shll
pop
aas
pop
xor
inc
lcall
mov
mov
shrb
int3
sub
dec
mov
cmc
pop
roll
mov
push
xchg
ss
adc
popa
xchg
add
mov
jnp
add
addb
cmp
insl
pop
sub
dec
mov
push
cmp
add
push
add
clc
sub
in
dec
aam
fists
push
mov
push
sub
xor
mov
cmpl
adc
jmp
xchg
or
mov
add
hlt
add
cmpb
xor
dec
movsl
sbb
adc
adc
push
insl
and
fistl
lret
addr16
push
xchg
lock
sbb
add
imul
int3
add
insl
and
repz
cmpl
sub
fisubrs
ss
out
add
jecxz
or
or
mov
add
xchg
mov
into
xchg
or
add
cmp
andl
lods
dec
shlb
inc
jbe
xchg
addr16
and
adc
scas
push
rcrb
imul
add
fnstcw
xor
add
sbb
mov
xor
add
push
or
pop
aaa
rolb
int3
test
and
imul
jb
xor
dec
call
xor
js
adc
pop
and
mov
insb
hlt
insb
inc
and
sbb
adc
test
mov
sub
ret
mov
fmuls
cli
out
int3
add
fs
sub
mov
xchg
sub
mov
mov
das
sbb
and
dec
sbb
jo
lods
mov
les
outsb
ss
fstpl
in
adcl
call
xor
or
adc
add
les
mov
and
mov
adc
xchg
xor
aaa
push
or
loop
adc
push
lret
xchg
xor
pusha
mov
test
sbb
ffree
sbb
or
lds
xchg
push
pop
or
inc
aam
mov
rclb
mov
dec
clc
rolb
adc
cmp
mov
mov
jmp
cmp
cmp
out
lock
xchg
aas
inc
add
daa
jbe
ret
sbb
inc
xchg
dec
add
dec
andb
push
mov
movsl
ja
pushfw
and
ds
mov
sbb
je
sahf
mov
in
movsl
add
pop
pop
ja
nop
push
add
and
adc
sub
push
out
or
pop
ds
insb
jg
mov
mov
outsl
inc
or
push
movsb
xor
lea
mov
adc
adc
cmp
sbb
cmp
out
and
sub
adc
and
inc
jl
cmp
add
mov
jnp
sbb
mulb
cmp
push
or
jbe
adc
testl
add
nop
jp
ret
scas
fists
add
inc
cmp
jno
loope
xor
data16
jnp
jbe
leave
js
pop
push
jl
sbb
lods
movsl
shlb
aaa
iret
and
lods
ret
cmp
je
pop
jl
mov
cmpsl
out
lock
mov
rol
sbb
mov
and
sbb
adc
jg
xor
or
inc
mov
mov
mov
imul
push
fstps
jb
and
daa
iret
aad
xchg
stos
mov
add
xlat
lock
lahf
das
je
pop
sub
cwtl
rol
inc
das
ret
jo
cmp
shrb
out
adc
stos
sbb
push
mov
lcall
dec
les
xor
or
add
add
mov
jbe
pop
das
les
mov
andb
insl
jmp
aaa
roll
cmpsl
cmp
popf
enter
bound
adc
arpl
outsb
movl
or
stos
popa
inc
xchg
stos
add
adc
cmpb
cltd
negl
inc
fs
js
je
pop
cltd
das
sbb
add
sbb
and
mov
sbb
popa
movsl
ret
fadds
pop
sti
fiaddl
cmp
xor
in
inc
add
mov
mov
jmp
mov
push
addl
adc
daa
inc
jge
adc
les
out
dec
andb
mov
hlt
pop
outsl
mov
cmp
fildl
xorb
pop
add
fstpl
movsb
adc
inc
jmp
mov
jecxz
popl
nop
sbb
pushf
cli
inc
and
gs
pusha
enter
adc
or
add
xchg
test
push
push
push
jno
pop
lods
lea
sbb
and
push
sti
mov
daa
fcomps
scas
mov
inc
stos
jo,pn
flds
aas
adc
sbb
mov
pop
dec
js
gs
push
inc
jb
in
aaa
outsl
push
dec
jne
into
inc
inc
push
xchg
add
dec
jmp
ja
aam
ret
and
sbbb
push
adc
mov
pop
xchg
sub
jmp
aam
jmp
jnp
in
iret
adc
fs
sub
ret
gs
imul
pop
dec
inc
clc
lds
jge
mov
rcl
outsb
dec
sub
push
mov
xlat
nop
xor
mov
push
ffreep
adc
pop
int3
cmc
daa
test
mov
adc
jp
xchg
ret
std
test
addr16
movsl
ret
xorb
and
leave
pop
push
stos
cmpsb
das
add
les
push
mov
ds
push
sbb
mov
sub
xor
push
sar
out
mov
or
mov
fucomp
xchg
movl
and
fs
fsts
in
add
sbbl
xchg
xchg
or
push
xchg
outsb
adc
adc
pop
lret
lret
pop
or
test
add
or
mov
popa
sahf
add
hlt
adc
and
lahf
dec
sbb
jp
pop
test
in
or
mov
push
adc
pop
pop
pop
fdivrs
lock
xchg
imul
lods
cmpb
lret
shlb
pop
sbb
pop
xor
jo
imul
imulb
popw
and
push
mov
in
adc
push
push
jl
je
clc
loope
mov
pop
lds
dec
push
or
jo
push
sbb
mov
addl
add
cltd
inc
insb
jae
push
pop
addl
mov
pushf
adc
ss
xor
cmpsb
add
adc
or
or
mov
sub
pop
or
and
jle
xor
das
lock
nop
inc
or
loop
loopne
in
pop
xchg
mov
dec
and
ds
out
jl
daa
call
jle
adc
outsb
lahf
jecxz
lock
scas
mov
push
fdivrl
add
xchg
fsubs
pop
sbb
sbb
or
and
loopne
mov
or
jns
addr16
and
or
sahf
test
add
cmp
cmp
mov
sub
and
les
push
inc
sbb
xchg
stos
fs
sar
arpl
pop
adc
mov
jno
flds
stos
addb
aaa
addb
add
sbb
xlat
and
in
out
pushf
adc
xchg
mov
sarl
jmp
lcall
cmp
dec
cmp
cmp
xor
xchg
push
lcall
idivl
sbb
int
ja
sbb
pop
mov
mov
clc
push
xor
sahf
shrb
sbb
push
sub
daa
add
xchg
inc
sbb
imul
adc
sub
add
add
incl
adc
mov
jle
rorb
dec
push
in
les
jo
dec
loope
popa
test
or
cmp
cmc
push
sbb
or
pop
xchg
or
seto
or
cmp
push
dec
pop
sbb
fs
or
push
cltd
lea
adcb
inc
xchg
call
aam
bound
sti
xchg
dec
pop
fcompl
and
test
dec
pop
add
or
ret
lock
push
and
cmpsb
pusha
xor
add
jne
inc
ja
sub
and
mov
inc
scas
push
popa
loop
jecxz
jge
int3
or
out
movsb
test
sub
ret
push
jp
cltd
cmp
out
pop
xor
daa
testl
nop
xchg
or
inc
add
sub
imul
add
test
mov
and
je
sbb
xchg
dec
lcall
push
jb
sub
adcl
pop
and
push
xor
inc
mov
pop
ret
add
sub
jne
push
or
sub
sub
pop
sub
xchg
data16
rolb
add
cmp
xchg
icebp
push
stc
jnp
xor
ja
shlb
or
sub
inc
dec
and
insb
sbbl
add
inc
fisubs
sub
sub
and
xchg
clc
add
cs
or
jmp
inc
and
es
push
fisubs
and
std
stos
mov
cmp
add
push
xchg
mov
mov
das
notl
mov
sarb
aam
cs
mov
hlt
xchg
es
mov
push
xor
or
pop
into
push
push
add
push
or
inc
incb
push
mov
movl
xor
add
mov
or
or
sub
add
and
stos
mov
or
lock
jmp
xor
fs
or
popa
imul
mov
test
mov
mov
dec
stc
ja
push
lret
cmp
adc
inc
jecxz
or
sbb
dec
sbb
or
or
inc
adc
aaa
mov
cmp
inc
rclb
aas
pop
adc
push
mov
fstpl
sub
or
mov
sbb
insb
ret
pop
enter
sub
pop
add
push
pop
and
sbb
mov
inc
push
add
pop
xorb
pop
add
jnp
sbb
mov
jmp
sub
xchg
add
cmp
mov
pop
and
sbb
or
pop
or
loop
pop
enter
xor
icebp
mov
add
clc
sub
xor
or
xchg
add
sub
mov
cltd
and
test
inc
add
lcall
xor
sbb
aaa
xchg
mov
stc
jns
out
cmpsl
pop
inc
or
and
jg
add
cmp
loopne
pop
jnp
ficoms
sbb
add
add
aaa
mov
mov
sub
aas
aam
push
adc
ja
cmp
and
adc
add
cmp
jg
pop
jg
mov
push
sbb
add
xor
add
or
wrmsr
fadds
jmp
cmc
imul
jne
movsl
repnz
popa
pop
push
push
sbb
mov
pop
xor
arpl
sub
rorb
jmp
xor
add
add
divl
push
sbb
clc
js
push
inc
shlb
add
loopne
nop
cmp
and
add
fildll
test
push
clc
scas
push
sbb
loopne
pop
push
pop
sbb
mov
push
dec
loope
cmp
xchg
xchg
and
add
ljmp
imul
lock
and
sbb
fdivl
mov
adc
inc
and
dec
das
pop
jle
add
shll
and
repz
sarb
mov
push
fsubrs
or
in
inc
mov
icebp
les
pop
mov
mov
pop
inc
push
and
dec
nop
add
mov
mov
pop
inc
sbb
ljmp
clc
lock
jno
jne
sub
inc
xor
jne
or
in
cmp
mov
ret
lea
dec
push
insb
sbb
push
and
insl
pop
pop
insb
inc
dec
dec
mov
pop
or
add
mov
push
call
cmp
mov
mov
or
test
jle
add
icebp
inc
or
cli
in
popa
pusha
mov
sbb
aaa
subl
inc
push
fisttpll
xchg
push
add
xor
mov
cwtl
imul
mov
pop
inc
add
clc
ffreep
add
push
add
sbb
sub
add
iret
mov
lods
and
sub
mov
jno
push
iret
mov
popf
or
adc
add
push
jns
and
adc
iret
and
adc
sub
adcb
add
and
lods
cmp
pop
add
test
inc
in
daa
mov
jo
jl
sbb
add
pop
or
sbb
sub
enter
add
inc
aam
push
loopne
inc
lahf
jmp
push
cmp
in
jle
sbb
mov
push
addr16
inc
push
add
sbb
and
mov
adc
dec
test
in
out
adc
push
xchg
cld
fsubrs
leave
xchg
movsl
gs
add
adc
fidivl
sbb
xchg
mov
aam
cmp
dec
add
inc
fwait
adc
inc
add
cmp
push
push
popa
loope
pop
sub
popf
jns
add
add
sub
adc
addr16
call
cwtl
and
jmp
push
in
pop
add
add
add
or
xor
bswap
or
xorb
mov
popf
test
mov
cmp
data16
cmp
movsb
fstps
rcrb
dec
bound
push
adc
or
movsb
xor
push
bound
push
pop
mov
inc
pushf
pop
xchg
fwait
jg
stc
mov
mov
fs
xor
sbb
ljmp
iret
xchg
mov
push
das
fadds
or
das
sub
xchg
pmullw
jb
dec
sahf
sub
or
dec
or
mov
lods
clc
shll
lret
jns
adc
inc
cltd
and
or
push
lods
mov
jne
add
pop
pushf
jge
hlt
add
jo
xor
test
lret
add
movsl
sbb
push
xlat
repnz
shrb
outsl
dec
xchg
adc
icebp
push
adc
lods
dec
push
mov
push
outsl
push
or
imul
or
mov
mov
pop
popa
xor
lock
pop
or
push
xor
jmp
xchg
dec
sub
xor
data16
cmpsl
adc
xchg
jne
and
cmp
mov
cmp
push
pop
lcall
adc
push
ficompl
lock
adcl
pop
sbb
jo
icebp
test
lcall
sub
clc
add
sbb
or
clc
jne
cmp
jnp
push
cmpsl
dec
sub
js
movsb
mov
mov
testl
push
mov
loope
sub
shrl
lret
push
xor
xlat
adc
mov
jae
jo
mov
ret
push
adc
and
flds
les
rcrl
jl
cmpsb
out
movsb
push
xchg
enter
pop
imul
daa
push
pop
or
inc
testb
out
sbb
mov
pop
push
adc
and
sbb
jmp
pop
cs
nop
sub
or
fcoms
enter
push
shrb
xor
pop
roll
das
cmp
sub
mov
xchg
lock
popa
cmpsl
dec
add
jno
mov
notb
fs
sbb
mov
movsl
push
adc
mov
sbb
das
ret
sub
sub
cs
push
adc
or
rolb
add
xchg
or
push
lcall
mov
dec
dec
push
sbb
xor
and
inc
push
mov
xchg
lret
mov
sarl
psubsw
adc
sahf
je
insb
add
cmp
push
xchg
push
push
fldt
push
add
inc
dec
fistps
lock
inc
movsl
and
dec
lods
inc
addb
fildll
ret
rcrb
pushfw
sbb
mov
sbb
mul
or
inc
and
outsl
push
xor
out
cltd
adc
and
ror
inc
push
push
hlt
int3
or
jo
push
and
or
call
or
fisttps
adcl
daa
in
loope
sub
scas
sbb
mov
mov
or
jmp
mov
lods
fs
xorb
adc
or
xor
dec
popa
inc
xor
mov
and
in
or
mov
inc
push
inc
fwait
cmp
mov
in
and
es
xchg
and
test
sub
adc
sahf
add
call
rorl
jbe
jne
mov
mov
movsl
mov
sub
adc
jne
pop
add
loope
pusha
shl
aam
popf
in
pop
and
sbb
cmpl
or
push
dec
test
mov
test
jl
inc
cmp
cli
jae
push
pop
adc
rcll
aas
leave
mov
mov
mov
dec
les
xor
daa
pop
pop
push
sbb
xchg
icebp
inc
sbbl
test
sahf
jge
push
mov
cld
pop
xchg
pop
pusha
push
out
cmp
lahf
pop
sbbl
pusha
jae
jp
and
cmp
and
pop
andl
arpl
and
and
mov
sbb
ss
je
inc
fsubs
minps
push
inc
cmpb
js
jmpw
add
sbb
ret
pusha
sahf
rcll
inc
inc
or
xor
test
inc
ret
mov
mov
sub
add
insl
push
jbe
inc
addr16
adc
repnz
arpl
popf
lods
cmp
pop
adc
test
xor
loope
inc
pop
mov
lret
xchg
enter
ficoml
dec
sbb
arpl
pop
mov
jecxz
lret
popa
xor
in
mov
ss
in
arpl
test
jl
aam
mov
xchg
and
addb
mov
clc
mov
dec
pushf
jne
call
je
iret
clc
ret
adc
and
or
add
sub
rcr
mov
stos
add
clc
push
std
xchg
and
ret
scas
jg
push
pusha
add
jns
and
mull
and
and
or
sub
dec
clc
add
lock
fucomi
out
es
ss
es
pop
or
jg
movsl
inc
and
cmpsb
inc
mov
icebp
and
add
push
ljmp
xchg
xlat
sbb
push
dec
or
adc
ret
insb
test
pop
adc
pop
or
ja
shlb
test
mov
fistl
pop
adc
bound
andb
adc
adc
mov
cmp
ja
add
orb
orb
cmp
movhps
sub
fadd
lds
mov
mov
mov
fstl
mov
add
cltd
pop
jmp
sbb
adc
inc
fs
fstps
push
add
jmp
mov
push
adc
or
sub
arpl
rolb
push
push
push
psubusw
pop
enter
pop
add
addl
xchg
loope
enter
add
lahf
loopne
dec
xchg
jo
xlat
mov
mov
jbe
push
dec
out
mov
xchg
or
pusha
pop
ss
pop
inc
movsl
cmp
jl
or
mov
pop
mov
sub
jg
xchg
or
jmp
push
push
inc
xchg
xchg
xchg
push
xor
adc
or
stc
test
lods
dec
pop
lock
add
mov
cmp
movsl
mov
sub
loopne
dec
leave
addr16
arpl
sub
sub
add
jne
xchg
cmpsb
xor
popf
popa
add
dec
in
mov
nop
jns
pusha
outsb
pop
ds
lock
lret
mov
or
bound
rclb
pop
push
test
adc
lock
mov
pop
stc
adc
ljmp
add
ret
push
rolb
popf
hlt
cli
ss
xchg
sbb
adc
push
inc
adc
ret
mov
dec
cmp
xchg
mov
cmc
push
dec
xorb
mov
shlb
mov
mov
jb
lods
cld
lret
and
push
cli
enter
mov
adc
sub
and
mov
shlb
mov
lods
out
rolb
xlat
fimuls
adc
mov
inc
out
cmp
fisttps
mov
lret
mov
mov
or
inc
mov
les
xor
pop
ret
dec
daa
sub
addl
sbb
adc
pushf
divl
cmovo
rcll
mov
mov
scas
ss
sub
sbb
sub
jno
inc
jbe
outsl
lret
ss
add
mov
cwtl
xchg
js
adc
leave
cmp
mov
sbb
and
mov
loopne
hlt
lods
repnz
inc
loopne
in
in
mov
xchg
movsb
call
js
jns
inc
dec
xchg
mov
jmp
add
test
hlt
and
jmp
sub
push
je
cmpsb
pop
cld
out
and
or
mov
lahf
loopne
or
inc
push
pop
push
icebp
fld
push
cmp
daa
jg
adc
inc
adc
xor
or
sbb
or
pop
dec
xlat
or
lods
inc
jp
and
xchg
jno
xchg
xchg
loope
adc
icebp
xchg
rcrb
sbb
fsubs
pop
push
cmp
inc
mov
or
xlat
inc
adc
push
rcl
inc
sub
dec
dec
jmp
adc
push
and
insl
xchg
mov
xchg
push
movl
test
jne
adc
out
push
pushf
lahf
fstpt
or
and
push
popa
shufps
aam
jnp
push
inc
ja
cmp
lock
das
in
sub
adcb
mov
adc
enter
jne
orl
or
pop
in
cmpsb
push
and
fcoms
cltd
mov
ds
cmp
dec
es
out
push
add
push
aad
ret
cmp
pusha
test
xor
add
out
cmp
test
jo
and
mulb
push
jnp
sub
test
lods
lods
jns
in
mov
mov
addr16
sahf
and
pop
enter
and
fcmovbe
nop
cmp
enter
cmpl
adc
and
adc
cli
xchg
rorl
inc
dec
inc
sub
mov
insl
dec
dec
or
and
mov
movsl
jnp
gs
in
insb
adc
sub
and
das
push
xchg
xchg
and
push
adc
in
push
or
sbb
out
mov
faddp
jns
dec
jae
pop
mov
jno
inc
jmp
jno
cmc
sbb
push
js
mov
add
jno
lock
fs
add
adc
mov
int
cmp
scas
sub
add
mov
cmc
or
test
jl
hlt
mov
pop
push
or
loopne
mov
out
sbb
xchg
xor
cmp
adc
aad
xor
mov
hlt
loop
ret
or
dec
and
push
add
adc
loopne
cmp
and
push
popf
nop
pop
fisttpll
sub
mov
dec
movsl
push
mov
and
pop
pop
or
xchg
in
pusha
sub
inc
inc
xor
or
in
nop
sub
out
xchg
mov
stos
rorl
mov
sub
fsubrs
ds
or
push
mov
add
rorl
stos
bound
pop
cbtw
js
xor
pop
sti
test
je
lock
fsubrs
lock
fs
cs
sbb
popa
pushf
cmpsl
xchg
psraw
outsl
xchg
test
jno
mov
inc
call
mov
inc
cwtl
mov
mov
sub
fcomps
rclb
sub
test
divb
or
xchg
mov
push
inc
nop
or
mov
mov
in
in
nop
push
push
or
cmp
rorl
test
das
or
add
out
mov
pop
xlat
frstor
push
ja
outsb
or
and
add
fwait
mov
mov
aaa
loop
sbb
jno
sarb
movsb
jg
arpl
roll
iret
pop
add
iret
subl
or
setae
inc
add
mov
test
rcrb
cwtl
sarl
xchg
nop
in
lcall
jo
pop
ds
leave
add
pusha
aas
clc
aam
nop
inc
adc
aas
add
aas
dec
int3
adc
scas
push
pop
and
idiv
out
push
movl
push
adc
pop
dec
in
pusha
add
xchg
xor
push
pop
adc
and
shll
cwtl
idiv
js
fmuls
orl
xadd
ret
xor
jo
adc
push
pop
push
push
push
adc
inc
xchg
jo
jl
lret
push
mov
mov
outsb
push
lret
mov
sbb
mov
lret
shrl
lods
ds
sub
mov
sbb
mov
les
and
mov
jl
inc
sahf
and
pusha
roll
movsb
movsb
orl
shufps
pop
mov
mov
add
pushaw
in
xchg
lds
pop
jbe
leave
and
nop
daa
addb
int3
inc
les
adc
testl
js
mov
ss
rcrb
push
cmp
and
sahf
pop
sub
xor
dec
cmpsb
or
add
dec
js
xchg
mov
add
sahf
roll
push
push
push
mov
cmpsb
imul
cmpsb
imul
imul
and
sbb
pop
pop
pop
mov
sub
mov
push
call
popf
nop
sub
xor
mov
pop
jb
xor
ss
xor
in
adc
imul
movsb
ja
add
lods
xchg
ja
mov
fnstcw
dec
adc
sub
add
pop
mov
inc
inc
loopne
nop
lea
lret
nop
lret
dec
das
fadds
sbb
pop
fistps
or
push
xchg
nop
sub
sbb
sub
sbb
xchg
icebp
mov
shr
dec
add
and
repz
jbe
mov
pop
pop
and
inc
jge
adc
sbb
pusha
mov
or
fs
dec
xchg
cld
aas
and
xchg
leave
aas
xor
inc
add
ss
test
xor
add
movb
inc
ss
imul
xlat
add
mov
and
imul
ret
ja
dec
jmp
test
adc
mov
push
ret
jno
and
inc
dec
or
push
mov
loopne
mov
xor
or
push
adc
mov
adc
enter
xchg
lea
pop
jg
test
js
or
add
mov
adc
ss
icebp
sarb
and
rorl
jne
jle
in
fdivrl
or
sbb
adc
lret
lea
shlb
jns
fidivs
jl
jb
mov
pop
cmp
xchg
jo
mov
dec
sbb
sub
std
mov
scas
addb
push
dec
loopne
dec
sub
mov
mov
enter
bound
mov
mov
addl
arpl
movups
xchg
mov
arpl
push
and
sbb
lock
mov
sub
cmp
add
push
fwait
push
popf
add
rol
aad
mov
cmp
int3
cmp
inc
ltr
loop
add
int3
fwait
push
mov
test
es
jbe
cmp
aas
push
push
mov
pop
push
push
mov
daa
les
inc
or
aas
add
inc
add
push
push
test
mov
add
and
and
mov
movsl
andb
mov
lea
jmp
mov
and
daa
push
sbb
push
fs
lret
imul
push
push
sub
xor
inc
mov
xor
test
nop
mov
push
push
jae
add
aad
mov
or
mov
dec
cmp
cmp
movsl
inc
movsl
dec
mov
push
adc
movsb
shll
xor
mov
inc
xor
nop
pop
cwtl
int3
sti
push
aas
mov
push
dec
scas
and
add
fs
adcb
loopne
xor
or
pop
out
out
push
add
nop
iret
cmp
push
nop
dec
mov
pushf
push
ss
add
mov
or
mov
mov
mov
jne
test
dec
inc
jle
out
adc
insb
aad
pop
dec
mov
ret
movsb
inc
rcl
sub
mov
cld
je
lds
inc
cmp
adc
mov
or
ret
adc
loopne
rcrb
iret
add
daa
push
lods
mov
pop
and
mov
inc
dec
stos
pop
mov
sub
dec
jbe
or
xor
push
test
mov
addl
jae
mov
or
out
scas
push
test
mov
xor
enter
xchg
xor
out
iret
js
int
aas
sbb
inc
je
aas
test
es
add
sub
jl
and
pop
push
and
into
je
jne
lret
xchg
mov
lea
and
je
scas
inc
mov
pop
or
jo
jg
test
test
adc
mov
cwtl
adc
outsb
lcall
mov
or
fiadds
mov
adc
cmp
nop
sbb
sbb
inc
movsb
sbb
cltd
dec
adc
shlb
mov
dec
out
pop
add
add
mov
daa
mov
orl
mov
mov
pop
lea
cmpb
std
cmpb
cmpb
or
js
inc
adc
mov
pop
inc
pop
lcall
xor
mov
pop
jne
pop
push
xchg
lahf
rcrl
push
mov
mov
outsb
lods
cwtl
xor
pop
lods
mov
in
sbbb
sbb
xlat
cmp
or
dec
dec
iret
add
or
cmpsl
das
cwtl
pop
adc
sbb
sbb
daa
call
inc
sbb
in
fwait
adc
add
int3
jg
pop
int3
adc
jg
mov
xor
push
insl
mov
fnstsw
xchg
mov
addb
pop
inc
dec
jl
dec
insl
dec
mov
pusha
sbb
ljmp
repnz
and
div
pop
adcb
aad
cmp
inc
aad
ror
negl
loopne
in
pushf
filds
sbb
scas
nop
fildl
outsb
cwtl
call
adcb
lds
jbe
inc
aas
ss
and
sbbb
rcrb
daa
subl
inc
jne
ljmp
mov
jmp
test
mov
push
inc
xorl
push
aas
and
xor
xor
xor
lahf
fimull
adc
outsb
sub
xor
ja
roll
shlb
hlt
mov
cs
and
sbb
xor
enter
xlat
mov
and
xor
jl
cmp
mov
insb
jecxz
add
mov
call
cmp
inc
inc
add
js
sbb
das
inc
je
or
jns
dec
insl
and
add
psubw
popf
mov
pusha
pop
add
adcb
inc
scas
movb
jecxz
mov
or
inc
popa
fs
xlat
dec
adc
jno
addl
jo
or
pop
imul
sub
mov
add
inc
pop
fldcw
ret
inc
dec
mov
xor
adc
mov
mov
sti
push
shlb
fnsave
aam
push
loope
sub
or
iret
enter
adc
jmp
cmp
imul
das
movsl
cwtl
pop
and
add
icebp
or
xor
cmp
addl
push
jg
or
push
or
fnstcw
jae
push
push
push
inc
add
test
push
jmp
dec
jg
sbb
fstpl
movsb
rcll
dec
xor
push
adc
adc
hlt
rol
xchg
jl
push
fidivrl
lock
push
add
cmp
add
repz
pop
imul
sbb
mov
test
xchg
and
pop
ficompl
dec
ret
add
lds
out
inc
adc
adc
jl
movsl
loopne
imul
push
nop
cmc
pop
lret
adc
lret
push
or
sar
push
or
push
fildl
out
pop
ret
js
jecxz
jae
jl
popa
xchg
jmp
jne
sbb
inc
mov
out
pushf
jle
dec
xchg
xchg
add
imul
imul
mov
xor
fidivs
xchg
xor
cwtl
dec
fmuls
loope
cld
inc
cmp
jnp
lods
shl
cs
dec
push
adc
cmp
xor
aam
add
inc
lea
das
xchg
inc
add
push
loopne
dec
push
mov
dec
xor
push
pop
sbb
xor
inc
xchg
and
push
push
mov
dec
mov
lret
mov
cmp
dec
push
xor
push
ret
test
es
pop
loop
adcl
lods
lcall
xchg
push
js
jecxz
sahf
adc
sti
dec
and
pusha
arpl
xchg
xor
int
jno
mov
cmpsl
pop
cs
stos
xchg
add
add
adc
int
jmp
push
xchg
mov
pushf
mov
loop
fs
adc
dec
push
add
cmc
stos
in
subb
test
push
loopne
mov
and
subb
xor
jbe
test
in
int3
sbb
adc
gs
add
in
arpl
divl
inc
and
mov
push
xorl
pushf
mov
adc
push
or
mov
loopne
mov
icebp
cmp
pop
and
je
sarb
mov
mov
sbb
cli
ror
sti
int
mov
mov
mov
push
cmp
mov
inc
mov
or
mov
nop
mov
test
pop
inc
inc
ret
adc
arpl
daa
jnp
imul
and
test
push
insl
mov
dec
loope
js
pop
add
std
test
adc
adc
mov
inc
mov
outsl
arpl
mov
enter
loope
sti
jo
dec
cmp
inc
jl
pop
sub
mov
xor
shll
add
jo
loope
pop
je
mov
ja
insl
mov
adc
imul
xor
inc
add
and
inc
pop
jmp
lea
adc
leave
inc
jmp
inc
bound
pop
cs
leave
xchg
mov
dec
mov
jbe
iret
add
mov
xchg
int3
into
jmp
mov
inc
dec
jge
xchg
push
sub
test
outsl
test
insb
inc
pop
adc
xor
aas
add
mov
jnp
cltd
or
scas
mov
add
je
push
push
imul
cltd
shll
test
adc
scas
inc
test
lcall
mov
adc
and
adc
rclb
ret
sbb
cmp
mov
push
idivl
cmp
test
xchg
notl
add
lahf
dec
push
and
jg
ja
and
or
int3
cmp
test
or
addr16
lss
xchg
aas
rorb
shlb
fldt
loope
dec
shl
cs
sbb
mov
testb
cmp
jge
test
push
jno
test
jno
mov
push
in
cmp
adc
imul
xor
adc
lods
lods
fdivl
daa
and
loopne
fidivrs
push
sub
aaa
sbbb
cld
push
mov
or
es
dec
hlt
add
inc
imul
ds
inc
cwtl
lock
add
sub
pop
mov
rcrb
jle
mov
pop
adc
leave
in
dec
in
arpl
dec
in
mov
push
dec
inc
pop
je
xchg
fsubp
adc
aas
out
adc
cmp
pop
and
out
mov
lcall
dec
movsb
iret
stos
xchg
lods
and
add
pop
push
out
and
dec
nop
sub
fmull
or
aaa
out
aam
and
test
fidivrl
adc
add
arpl
xor
shr
mov
int3
sub
push
sub
out
adc
out
pop
lock
dec
jb
sti
rcrb
jne
dec
cmp
bound
pop
inc
mov
out
xchg
dec
inc
daa
xor
dec
cmp
imul
xor
adc
cmp
adc
arpl
insl
cmp
pushf
push
xchg
pusha
imul
lods
in
inc
cmp
adc
scas
movl
mov
pop
mov
and
or
mov
ss
and
xor
adc
cmpsl
cmp
jne
sahf
dec
lret
inc
inc
add
sbb
aam
ja
cmp
insl
aaa
aam
aaa
stc
or
mov
subl
xchg
jb
push
add
and
pop
push
push
push
adc
dec
fdivrl
sub
cmc
sbb
ljmp
cld
out
push
loop
cmp
sub
adc
shrb
dec
test
imul
mov
adc
popl
push
or
dec
out
je
shrb
pop
or
incl
mov
add
decl
cmpb
sbb
or
incl
adc
mov
inc
aaa
add
add
std
and
fs
ljmp
das
cmp
ret
pop
add
js
mov
pop
or
sbb
fimuls
int
insb
outsb
pop
and
ljmp
gs
addr16
imul
pop
or
jb
test
mov
jle
adc
add
popa
lret
cltd
imul
push
push
decl
lock
push
bound
insb
jl
daa
and
scas
add
sbb
rclb
mov
mov
inc
ljmp
adc
dec
cltd
mov
int
mov
nop
jo
sbb
jns
arpl
movsb
push
mov
ud2
fstl
addb
inc
sahf
adcl
jo
call
roll
cmp
and
add
push
dec
inc
fisubl
pop
in
adc
push
inc
sbb
stos
cmpsb
dec
insl
sub
push
or
cmpsb
lea
add
bound
xchg
pop
adc
fildl
mov
aam
iret
add
inc
stc
stc
cwtl
add
sbb
inc
add
lods
mov
dec
addb
push
inc
add
rcrl
popa
push
adc
addb
xor
dec
call
test
les
mov
push
add
and
inc
mov
aad
test
pop
aad
mov
xor
xchg
pop
test
add
push
jbe
lods
mov
or
mov
sub
sbb
inc
mov
das
or
sub
outsl
rcll
or
and
bound
and
xchg
mov
pop
pop
mov
clc
and
sub
xor
jae
and
cmp
movsb
sub
push
and
cmpsb
pop
sbb
call
inc
fcompl
mov
xor
mov
sub
and
mov
xor
push
xchg
add
decb
push
mov
pop
cmp
les
add
jno
add
out
lahf
add
dec
cmp
mov
les
add
fs
dec
push
repnz
or
sub
aaa
inc
movsb
xchg
cmp
scas
dec
cwtl
xchg
and
add
mov
aas
movsb
js
inc
and
add
or
mov
mov
inc
adc
cwtl
mov
inc
test
push
aad
jl
loopne
fsubs
or
adc
lahf
out
jne
adcb
cmp
aas
dec
xrelease
cmp
in
add
push
cmp
es
or
push
ret
scas
push
dec
movsb
mov
dec
push
clc
lea
and
mov
dec
lret
fcoms
xchg
jae
ljmp
inc
pop
or
pusha
cmp
bound
jnp
lcall
nop
jo
push
and
popf
pusha
shlb
pop
les
or
push
lcall
inc
ds
mov
nop
mov
xchg
adc
cwtl
sbb
mov
and
jae
pop
in
dec
shrb
push
rolb
repz
dec
push
js
pop
push
pop
inc
shrl
pop
inc
and
insb
aas
inc
or
lods
xor
inc
cwtl
outsb
test
scas
dec
adc
stos
imul
inc
movsb
push
mov
add
inc
inc
pop
adc
jo
inc
add
xor
pushf
mov
add
xor
cmp
inc
jb
pusha
out
repnz
mov
and
mov
rcl
outsb
mov
push
pop
and
je
or
stos
pushf
mov
dec
repz
add
add
or
pop
add
add
push
pop
push
add
icebp
and
in
ret
mov
test
inc
xchg
in
and
loopne
push
int3
mov
mov
jnp
into
nop
jecxz
mov
rolb
jnp
inc
into
les
sbb
sub
push
or
or
mov
cwtl
cmc
out
jbe
mov
inc
xchg
cmp
jo
movsl
sub
mov
aaa
lods
xchg
push
push
jne
pop
or
sub
xor
je
imul
fistl
push
or
fdivs
int3
adc
xchg
stos
insb
aad
sbb
pop
dec
push
notl
jo
dec
sbb
imul
ror
lods
mov
into
push
push
add
or
cmp
pop
jne
push
jae
js
dec
in
inc
pop
inc
scas
rorb
jle
push
push
push
mov
push
nop
push
pop
and
shlb
fcoms
dec
scas
xor
or
cmp
lds
cltd
add
je
or
and
les
add
xchg
dec
fistps
add
ror
xchg
imul
test
jecxz
and
and
or
ret
mov
or
mov
add
popa
adc
fists
push
stc
adc
sbb
pushf
aas
xchg
xor
push
inc
scas
dec
inc
out
test
dec
mov
xlat
add
inc
inc
enter
xor
and
jecxz
push
cmc
lahf
outsb
ror
mul
and
xor
jg
pushl
xor
inc
loope
dec
dec
dec
dec
dec
dec
dec
dec
ljmp
push
push
push
pop
pop
pop
in
lea
es
mov
dec
rcl
dec
sub
mov
inc
or
push
pop
mov
insb
push
push
dec
xchg
push
sub
shlb
sar
hlt
inc
jl
in
cmpsl
std
ja
inc
lcall
inc
add
ja
fidivrl
add
xchg
sbb
mov
shlb
xchg
int
jne
pop
lods
push
adc
imul
in
rorb
or
orl
jge
xchg
and
daa
add
int3
push
ss
push
in
sub
cltd
js
sti
jle
cmp
mov
jge
shrl
fs
nop
ret
lahf
mov
in
sarb
stos
lods
and
fwait
pop
cli
push
sbb
pop
mov
add
js
inc
shl
xchg
inc
jb
pop
call
sbbl
add
and
jbe
add
imul
in
add
es
inc
jmp
inc
cwtl
fs
inc
inc
dec
pusha
sub
dec
call
pop
addb
adc
or
push
sbb
enter
lods
lds
aas
lds
mov
add
imul
inc
loopne
fsts
cmpsl
adc
push
pusha
inc
popa
adc
movsb
add
call
lcall
pop
rorb
cmp
push
psrlq
lods
in
iret
or
enter
inc
pop
cwtl
push
movb
mov
dec
sbb
sub
pop
in
dec
xchg
fidivs
mov
pop
ljmp
xor
iret
mov
mov
cli
and
xchg
sub
sahf
sub
pop
cs
les
jmp
lcall
or
jmp
inc
arpl
push
add
adc
data16
or
scas
sub
insl
xchg
call
aam
push
pusha
shll
dec
mov
fwait
test
call
inc
add
popa
push
adc
stc
aas
mov
cmp
ja
sbb
xor
outsl
add
aaa
popa
jne
mov
add
sbb
cmc
mov
popa
cmp
add
adc
hlt
test
mov
and
add
mov
lock
fwait
mov
enter
stos
das
sub
mov
loope
call
mov
arpl
sti
sub
shlb
jmp
xor
icebp
cmp
ja
jo
mov
jle
inc
fs
cwtl
pop
xor
jmp
aaa
jmp
out
mov
imul
lcall
std
adc
enter
jbe
ss
adc
sbbb
jg
push
out
inc
aaa
dec
jmp
std
push
ljmp
movsb
mov
pop
xchg
ret
push
xchg
in
and
mov
push
aas
cld
xchg
sbb
aad
xchg
mov
inc
cmp
sbb
pusha
add
push
insl
lods
in
cmp
cltd
push
pop
popa
sbb
push
inc
mov
imul
outsb
add
fldcw
sbb
negb
push
aas
cmp
fistps
popa
mov
gs
inc
inc
je
mov
mov
test
pusha
inc
dec
inc
dec
sub
push
jp
xchg
or
inc
imul
and
xchg
adc
hlt
lea
adc
mov
pop
cmpsb
dec
fbstp
push
mov
mov
or
test
sarl
cmp
ss
adc
xchg
insb
rolb
cltd
or
inc
adc
movsl
inc
mov
rolb
or
push
xchg
out
pop
xchg
int
cwtl
inc
add
cmp
add
js,pt
orb
add
mov
inc
xchg
js
inc
sub
mov
mov
adc
cli
push
cmp
inc
shrb
pop
sarb
jmp
add
and
push
push
push
mov
jle
je
sbb
inc
pop
test
imul
dec
faddl
push
inc
sub
js
push
data16
cmp
push
fimuls
mov
leave
add
sbb
xchg
fnstsw
add
xor
add
xor
pop
inc
jecxz
add
xchg
and
lret
pusha
adc
mov
jle
insl
dec
jnp
sbb
jmp
lods
lds
sahf
pop
pusha
dec
jae
pop
pop
sbb
push
popf
fs
mov
repz
fwait
xorb
loope
shlb
pusha
dec
daa
imul
inc
mov
xor
stc
mov
sub
or
aas
add
nop
in
adc
and
adc
dec
dec
inc
inc
dec
mov
shlb
inc
mov
pop
ds
cmp
fbld
mov
or
mov
inc
xor
testl
iret
ret
sbb
fisubl
cmp
pop
cmp
out
mov
roll
pop
xlat
or
and
iret
fcmovnu
jecxz
popa
leave
xor
xor
push
lock
push
cmpsl
imul
idiv
jge
test
subl
adc
sti
cmp
or
call
pop
sbb
lock
adc
insl
test
into
adc
imul
pop
inc
push
adcb
push
imul
xor
in
test
dec
or
jo
js
dec
sti
xchg
dec
enter
mov
and
pop
jo
sub
pop
push
repz
fisubl
outsl
push
pop
clc
adc
pop
or
or
popa
jo
mov
add
icebp
or
adc
leave
push
fcmovbe
or
pop
adc
sub
mov
insb
sbb
mov
mov
lahf
adc
fisubrl
sbb
shll
ds
pop
or
aam
mov
mov
sbb
inc
test
loop
pop
insb
rorl
xorb
clc
pushf
mov
outsl
loop
push
push
adc
push
push
je
and
fldt
jp
xchg
add
in
mov
or
jno
mov
stc
gs
push
out
pop
and
mov
dec
xchg
ret
or
negb
daa
push
inc
cld
test
or
sub
push
mov
jg
js
push
aas
imul
mov
and
pop
sahf
inc
addb
sub
pop
mov
lock
jbe
orl
inc
cmp
clc
pop
mov
push
aad
cmp
jae
mov
fcom
inc
ljmp
mov
icebp
add
adc
add
adc
inc
mov
negb
sbb
inc
int3
int3
cmp
or
fs
or
sbb
mov
in
mov
testl
push
push
or
add
inc
out
push
add
ljmp
in
and
xchg
push
or
or
sbb
xchg
adc
dec
sbb
jae
xchg
inc
and
xchg
cmp
adc
xchg
add
and
add
push
adc
mov
and
dec
inc
imul
xchg
mov
sub
fisubrs
out
adc
xor
jmp
fmulp
lock
addl
ret
pop
push
cwtl
add
addl
aad
jle
outsl
jmp
cmp
sbb
js
add
inc
jge
sti
rorb
adc
inc
cmp
fadds
and
xchg
lock
daa
add
or
dec
push
pop
test
jecxz
xor
add
dec
subl
pop
je
mov
movsb
lret
xchg
adc
and
out
adc
shll
sub
adc
test
daa
push
add
cmpsb
daa
icebp
mov
notl
imul
pop
inc
xchg
pop
mov
or
pop
data16
imulb
xor
add
fsubs
shlb
push
push
fisubl
mov
mov
push
xlat
or
adc
mulb
loopne
dec
lahf
fcompl
stos
inc
cmpl
inc
iret
imul
stos
add
sub
sbb
mov
fistpl
das
loopne
xchg
fstps
sbb
hlt
fcoms
std
mov
adc
push
add
ret
adc
cld
call
es
inc
push
add
rolb
inc
icebp
scas
dec
ficoms
sbb
shr
jnp
mov
cmp
mov
loop
jo
aaa
push
xor
call
mov
jne
dec
inc
xchg
or
mov
scas
retw
cmc
mov
xor
mov
add
sub
mov
rcrb
jns
rcll
nop
hlt
xor
push
sub
sbb
adc
adc
sti
sub
or
xchg
xchg
mov
mov
mov
imul
addr16
sbb
sub
int3
adc
jmp
dec
leave
mov
clc
adc
cs
in
push
mov
hlt
push
cwtl
or
inc
cwtl
pop
push
xor
aaa
pop
push
int
ret
inc
adc
cmp
dec
sbb
cmpsl
popf
icebp
push
fsubrs
pusha
sub
jmp
mov
notl
and
mov
jl
clc
rcrb
push
xor
pop
lcall
jbe
jb
mov
aad
cmc
rorb
lea
jno,pt
sub
lea
and
inc
push
sub
pop
lock
mov
nop
rcl
inc
aad
add
fiaddl
push
adc
jg
mov
rclb
sbb
sub
add
adc
mov
sub
sbb
sbb
mov
sbb
into
hlt
in
sub
iret
hlt
push
rorl
hlt
pop
iret
hlt
sub
inc
add
mov
movsb
or
jmp
jnp
imul
or
pop
inc
jne
mov
inc
jne
shll
sbb
jmp
fwait
int
pop
cmp
lock
shlb
add
addr16
mov
ds
pop
sbb
mov
fildll
push
test
sub
in
sbbb
pop
mov
ljmp
lea
rolb
xchg
clc
loopne
mov
stc
adc
or
rep
ja
outsb
and
fistps
imul
or
push
sbb
add
test
adc
mov
inc
fdivs
or
xor
xchg
test
add
call
ret
iret
push
inc
push
or
loopne
loope
incl
fwait
ret
mov
or
pushf
xchg
sbb
fldenv
cmpsb
or
je
adc
cmp
loopne
add
add
push
sub
or
inc
aaa
sub
enter
pop
adc
test
in
adc
push
adc
or
repz
inc
jno
add
shrb
mov
aas
sbb
movsb
and
data16
jmp
call
add
ret
out
loopne
rolb
dec
cld
rolb
adc
popa
sbb
inc
xadd
xor
sbb
dec
daa
call
dec
clc
fcomps
xor
pusha
or
push
push
stos
inc
clc
cmpsb
and
lea
or
dec
lods
clc
or
lock
and
loop
xor
add
cmp
add
dec
clc
or
add
sbb
sbb
test
or
mov
adc
sub
push
pop
pop
inc
mov
pop
inc
and
mov
clc
lock
dec
call
test
inc
fcompl
les
test
jb
push
inc
xor
cmp
xor
and
outsb
daa
sbb
push
pop
cmp
orl
sbb
daa
inc
sbb
dec
push
mov
icebp
or
push
push
and
fnsave
inc
stos
add
cmpsb
mov
adc
shrb
adc
xlat
sbb
inc
cmpsl
push
dec
or
mov
inc
push
fwait
cmp
mov
leave
add
divb
xchg
xchg
shr
push
sbb
lds
sbb
aam
enter
or
outsb
mov
cmpsb
push
sbb
xchg
mov
jnp
xor
inc
push
xor
jl
ret
fldenv
fistl
add
cld
lods
push
add
fcoml
hlt
lret
push
fs
inc
rclb
mov
test
jmp
insl
inc
lods
movsb
outsl
movsb
pop
dec
sub
sbb
and
movl
sub
sub
inc
arpl
xor
sbb
dec
ljmp
adc
sbbl
enter
clc
push
jb
sub
adc
loope
ud2
mov
mov
insb
xor
lret
adc
inc
ret
mov
inc
xor
cmp
adc
bound
orb
shl
aad
call
and
loope
push
mov
mulb
mov
dec
dec
sarl
cwtl
lods
insl
or
adc
xor
push
or
stos
test
ds
xchg
fsts
dec
out
adc
add
cltd
or
inc
pushf
std
mov
gs
add
push
outsl
mov
dec
sbb
fmull
fmull
fdivs
xor
or
pusha
mov
push
and
push
add
gs
out
pop
xchg
sub
mov
pop
jo
lret
jg
pop
incb
add
mov
mov
pop
inc
push
movsb
sbb
mov
test
cmp
or
inc
push
addl
push
dec
cmc
ja
inc
sbb
push
add
or
test
cs
outsl
cmp
arpl
mov
adc
pop
or
pop
jae
pop
jp
cmc
aas
cmp
inc
adc
pop
mov
cmp
and
jne
push
add
test
aad
nop
inc
sub
addr16
adc
inc
jle
pop
add
mov
je
cmp
xchg
nop
and
jne
add
adc
movl
mov
in
in
dec
test
xor
mov
aas
je
mov
sbb
nop
lret
jne
mov
lods
andb
inc
scas
dec
scas
inc
mov
xorl
sbbb
cwtl
in
add
addr16
test
cmp
pop
loop
cmp
pusha
mov
mov
fistpll
ds
inc
adc
pop
inc
inc
andb
mov
outsl
sbb
ds
sbb
lea
adc
int
ret
mov
jnp
jbe
and
outsl
add
fsubl
out
mov
add
sbb
adc
sub
sbb
xchg
push
outsl
pop
clc
lds
mov
dec
repnz
out
cltd
cmp
fs
and
pusha
mov
das
xchg
push
pop
loope
dec
in
inc
fcmovnu
mov
sbb
adc
movsb
mov
je
inc
or
adc
minps
jno
cmpsl
out
xor
mov
push
dec
aad
push
aas
jbe
sbb
mov
and
adc
mov
xor
inc
insb
fs
adc
push
xchg
cmp
mov
add
rorl
xchg
or
rol
test
mov
mov
test
cmp
pusha
fisubl
push
mov
cli
out
mov
out
cmp
mov
pandn
popf
xor
pop
mov
and
lods
popa
xor
cmp
mov
dec
lahf
and
mov
dec
leave
adc
jmp
repz
mov
sub
arpl
xor
pop
or
mov
or
aas
push
jmp
mov
pop
dec
and
pop
inc
jno
clc
xchg
xor
js
push
jl
test
push
shl
in
or
mov
jo
push
outsb
xchg
sbb
xchg
ljmp
fdivs
adc
pop
adc
sbb
movsl
mov
hlt
sbb
add
jno
orb
test
dec
dec
push
xchg
loop
inc
dec
or
outsb
xchg
mov
xchg
mov
out
mov
push
test
sub
mov
xchg
inc
dec
lea
adc
ljmp
je
loop
sbb
mov
push
pop
push
lods
lods
out
scas
or
cmpl
loop
ret
iret
adc
scas
add
pop
lret
mov
aaa
enter
and
sbb
sbb
cmp
lret
mov
fs
lret
jl
je
fidivrs
push
cmp
cmp
test
ret
lret
je
pop
fdivl
xor
mov
nop
jne
xchg
pop
mov
in
xchg
je
lea
es
jbe
imul
push
push
mov
fs
mov
mov
push
pop
pop
mov
inc
pop
sbb
jbe
js
sbb
faddl
xor
inc
dec
xchg
je
nop
mov
jle
push
push
xor
push
ds
adc
xchg
xchg
push
push
popa
xor
sub
xchg
cmp
push
xlat
and
scas
push
mov
incb
sub
dec
sub
dec
xchg
sub
inc
inc
pusha
adc
xchg
or
or
inc
sbb
push
or
adc
push
pop
push
inc
or
xor
sub
sub
sub
mov
inc
jl
pop
dec
pop
lds
jmp
dec
xchg
test
pusha
jmp
jns
nop
js
jne
stc
sbb
xor
jl
mov
push
jl
jl
pop
jp
ja
rclb
mov
add
test
mov
mov
hlt
loopne
and
andb
gs
xchg
push
mov
inc
hlt
push
dec
mov
movsb
add
and
mov
sbb
daa
or
movsb
add
mov
in
or
lret
sarl
leave
dec
popf
xor
mov
clc
call
xorl
rorb
mov
mov
and
push
jbe
mov
push
lods
mov
xor
adc
inc
dec
and
out
jae
subb
jne
xchg
mov
sbb
fldcw
aam
inc
sub
stc
xchg
es
pop
lahf
ja
mov
lods
lock
or
cld
push
and
xchg
push
aaa
pushl
movsb
dec
fisubrl
inc
add
xchg
and
mov
insl
mov
or
and
call
add
sub
add
sub
inc
dec
lret
repnz
jl
ret
aas
int3
add
out
arpl
mov
out
adc
push
and
sbb
dec
icebp
imul
mov
ret
or
or
ret
push
add
pop
scas
shl
inc
cs
sbb
ss
adc
popa
xchg
icebp
enter
inc
jmp
cmp
jle
xor
les
pop
inc
arpl
mov
adc
fs
cmp
dec
push
adc
xor
pop
int3
fs
sbb
push
inc
ss
out
je
push
sbb
pop
in
imul
xor
rolb
dec
mov
xlat
inc
jno
and
and
popf
dec
ret
jns
pop
inc
cmp
or
fs
push
out
push
adc
lds
lods
jmp
sbb
mov
mov
jne
mov
cmp
lea
filds
jae
inc
jmp
mov
es
cwtl
sbb
dec
mov
sbbb
arpl
je
lahf
inc
aaa
lea
insl
dec
dec
push
push
inc
cwtl
outsb
ficomps
shlb
mov
out
xor
fiaddl
cmp
dec
jmp
inc
cltd
sbb
mov
cltd
pop
int3
sbb
mov
loopne
scas
push
jle
imul
push
adc
xlat
orb
push
push
sbb
pop
jae
test
rorl
sub
jo
push
push
pop
pop
iret
add
adc
push
jno
push
mov
ret
and
or
imul
mov
arpl
push
push
sub
aas
shll
adc
in
call
jle
shlb
sbb
mov
and
aam
mov
jecxz
bound
arpl
dec
cmpsb
push
test
in
loopne
fsubrs
add
leave
daa
popa
mov
jl
call
add
mov
ljmp
push
cmp
adc
mov
add
xchg
hlt
inc
iret
pusha
or
cmp
dec
pusha
sti
sbb
dec
sbb
or
inc
add
xor
mov
pop
sbb
sti
fidivrl
inc
test
dec
add
add
lret
movb
sub
mov
mov
dec
ret
inc
sbbl
shlb
lock
test
inc
mov
arpl
shll
sbb
add
outsb
jo
loopne
movsb
push
pinsrw
aaa
xchg
sub
push
imul
fistl
idivl
mov
cmp
jne
and
inc
push
setl
das
pop
repz
sbbb
aam
cltd
xchg
cmp
sbb
or
test
add
enter
pop
cmp
and
pop
jo
inc
icebp
dec
shlb
aas
inc
push
mov
sbb
and
or
xor
test
xchg
inc
xorl
add
mov
jae
push
shrb
mov
inc
out
lea
sahf
scas
fimuls
es
mov
dec
push
mov
xchg
mov
xchg
pop
push
lahf
and
scas
and
mov
rcr
ja
ret
add
fisubs
inc
sub
and
imul
daa
sbb
adc
xor
xor
lock
xchg
and
mov
mov
hlt
jmp
add
jb
fildll
adc
or
jl
mov
mov
call
pop
or
mov
cmp
test
or
data16
js
andb
mov
mov
and
aad
sub
jo
jmp
outsl
adc
js
push
add
xchg
mov
nop
or
fisttpll
add
popa
sub
mov
cltd
and
filds
push
inc
jbe
sbb
addr16
sub
pop
adc
pop
adc
in
or
sbb
aas
roll
or
loop
incl
cmp
into
add
mov
int3
mov
adc
adcl
adc
xor
ja
clc
test
mov
nop
call
cs
inc
cmp
inc
and
xor
and
aaa
in
push
dec
divl
hlt
scas
dec
pop
cmp
sbb
das
adc
mov
insl
xchg
push
sub
mov
fcmovnbe
dec
sarb
add
add
push
jbe
pop
jecxz
insl
repz
loope
sbb
jge
adc
mov
in
mov
lods
sub
pop
bound
jnp
add
sub
jmp
and
ret
dec
adcb
xor
add
add
pop
lods
adc
ror
jmp
mov
mov
xchg
xchg
add
dec
sbb
dec
stos
cld
push
push
dec
jp
pop
mov
lret
or
sub
and
inc
add
jmp
scas
pop
loop
ret
inc
mov
movsl
cli
adc
add
add
idiv
es
jge
inc
sub
negb
mov
inc
sbb
je
inc
inc
loopne
outsl
aad
sub
pop
in
mov
mov
jo
xchg
cmp
mov
inc
insb
adc
sarl
xchg
or
cld
pop
push
dec
inc
xor
inc
mov
je
inc
addr16
push
aam
mov
xchg
inc
cmpsb
std
rorb
xchg
or
or
add
mov
xor
pop
push
lods
or
xorb
pop
cmpsl
and
sbb
punpckhwd
dec
insb
fstl
and
sub
ret
pop
ljmp
sbb
fidivl
pusha
mov
xchg
ret
xor
pop
shl
mov
lahf
dec
ret
ret
xchg
mov
mov
outsb
cmp
repz
iret
pushf
xchg
push
outsb
jne
lea
hlt
adc
xor
dec
and
imul
pusha
cs
pop
add
add
test
js
test
andb
add
jg
insb
fadds
lahf
cld
test
pop
movb
out
jns
inc
pop
add
and
cmp
mov
sub
mov
pop
pop
mov
push
mov
add
lcall
cmp
insb
sub
aaa
add
dec
cmp
int
lock
mov
sbb
sarb
cmp
into
add
dec
mov
fsubl
mov
adc
arpl
xor
shrb
ss
mov
pop
mov
xchg
popa
mov
mov
lods
xlat
and
je
push
notl
pop
add
das
fisttpl
adc
into
xor
mov
add
loop
add
inc
mov
rorl
pop
dec
movsb
xor
inc
and
hlt
dec
arpl
or
xchg
pop
nop
loopne
rorb
mov
xchg
or
popa
outsb
adc
pop
adc
fimull
push
mov
scas
add
xor
and
mov
add
sahf
into
out
lret
test
ja
push
nop
dec
popf
outsl
pusha
mov
mov
sbb
test
je
push
les
push
mov
add
ljmp
add
cmp
cmp
shrd
and
loope
push
push
add
test
das
sarb
in
call
out
push
jbe
movsb
add
and
add
pop
lcall
xor
movsl
sahf
andb
clc
xchg
aam
imul
dec
lret
hlt
cmpsl
mov
and
pop
leave
ret
pop
adc
inc
xor
lock
sbb
test
xchg
rclb
pop
dec
mov
push
jne
cmpsb
pushf
mov
lock
xchg
fwait
and
push
push
into
ja
clc
pop
dec
arpl
loopne
rclb
loop
or
adc
xor
push
or
push
add
push
and
les
cs
loop
aaa
out
test
adc
movsl
rolb
pusha
pop
cmpb
mov
add
popl
pop
imul
int3
pop
adc
std
mov
jno
daa
iret
adc
inc
shr
and
mov
or
scas
sbb
adc
push
in
cmp
int3
aaa
in
pop
test
add
push
mov
push
je
or
and
sbb
lods
movsb
jno
popf
mov
and
test
or
xor
xorb
je
add
pushf
setae
jmp
jb
int
and
xlat
add
out
or
push
cmp
lds
inc
hlt
push
sub
xchg
mov
adc
popa
add
pop
inc
add
mov
sub
add
push
lods
fsubrl
sbb
push
sbb
sbb
and
pop
jne
mov
testb
xor
ret
enter
aas
cmp
ret
ljmp
pop
mov
pop
push
scas
fsts
fists
pop
dec
mov
jbe
dec
jnp
jo
add
arpl
nop
sbb
rcrb
xor
lret
or
mov
push
addb
sub
or
daa
clc
and
lods
mov
adc
orb
dec
xor
or
aas
loope
add
push
jno
add
sbbb
movl
xor
adc
dec
clc
adc
inc
aas
cmp
sbb
or
add
je
mov
loop
repz
clc
xchg
lea
ret
pop
ret
push
loop
xor
fcomps
addb
jecxz
xor
rcrb
inc
pop
shlb
div
and
push
add
pop
js
dec
and
rolb
inc
enter
inc
inc
adc
loopne
movsb
mov
fsubrs
cmp
imul
pop
fbld
ds
xchg
daa
sub
js
inc
sub
test
ss
ja
pop
add
in
dec
add
sub
xchg
add
sub
or
scas
add
mov
fmuls
jbe
loope
pop
imul
pop
loop
pop
mov
push
aad
adc
test
adc
jne
mov
fimuls
mov
push
in
test
jmp
rcl
int3
and
repz
mov
mov
sbb
jbe
add
dec
aaa
test
push
dec
stc
and
popa
and
shlb
jl
dec
push
addl
sub
cmp
sub
sbb
or
adc
inc
adc
xor
out
push
mov
data16
mov
aaa
mov
outsl
sbb
mov
cs
or
clc
mov
add
mov
pop
negb
or
adc
pop
cmp
xlat
nop
xor
fdivrl
cwtl
sub
and
fmull
or
sub
cmp
in
imulb
in
lahf
data16
cmp
xchg
push
sbb
dec
add
shlb
inc
setp
andb
push
or
ljmp
pop
cmp
ds
sbb
fwait
cwtl
pushf
stos
mov
out
push
dec
or
andb
and
adc
fsubs
push
jb
je
fdivs
dec
dec
or
jmp
mov
fstpt
cmp
xor
scas
xor
inc
cmp
ret
or
or
imul
xor
loope
dec
loopne
ret
dec
jne
ljmp
test
xchg
sbb
ds
sti
mov
mov
lret
rol
push
add
lret
push
repz
push
lds
jecxz
test
or
adc
pop
rcr
dec
add
cld
dec
and
or
sbb
and
das
pop
mov
sbb
mov
add
cld
les
movsb
movl
or
jmp
mov
pop
ss
nop
cli
cmp
pop
cmc
pop
jmp
inc
popa
add
fdivrl
mov
and
imul
mov
add
mov
js
rcrb
inc
cmpsl
inc
sbb
mov
add
sarb
ret
in
dec
xor
cmp
repnz
jo
dec
jmp
jge
xor
pusha
and
xchg
data16
popf
nop
sub
rorb
push
ret
pop
or
cmp
pop
adc
and
ret
add
push
pop
fxch
adc
jb
adc
or
std
mov
ret
cwtl
add
inc
xor
mov
mov
adc
push
shrb
lret
loopne
cli
push
pop
add
push
sti
pusha
fwait
sub
sub
or
je
movzwl
push
imul
cmp
mov
jbe
stos
adc
mov
dec
outsl
xchg
test
dec
and
jecxz
sbb
sub
sbb
lret
sub
add
adc
jmp
nop
push
dec
xchg
cmp
fisttpll
scas
imul
xorb
scas
dec
push
jle
sbb
or
dec
and
jmp
je
sbbl
dec
add
inc
add
cmp
mov
xchg
adc
xor
nop
sbb
jo
jg
test
dec
push
rcl
push
inc
ss
adc
frstor
xchg
jno
leave
sbb
incb
shlb
sbb
add
jne
xor
movb
add
or
shr
push
adc
xor
and
addr16
daa
pop
shl
nop
cmp
jl
mov
add
adc
and
and
ljmp
testl
fwait
xchg
mov
js
jns
ret
mov
push
arpl
lea
icebp
adc
mov
ret
sbb
hlt
dec
rolb
push
xchg
sbb
fisubrl
sbb
sbb
cmpsb
pop
mov
out
push
movsb
cmp
and
shrl
aam
inc
rolb
dec
ds
fldt
les
push
lock
rcrb
adc
mov
sarl
mov
inc
push
adc
fdivl
push
push
mov
jns
sub
pusha
push
inc
in
mov
push
rorl
jle
adc
fdivs
or
mov
adc
mov
push
pop
xchg
repnz
test
rcrb
xor
enter
adc
aam
ds
pop
adc
fsubrl
add
andb
or
push
das
add
mov
pop
repnz
xchg
aaa
add
test
mov
cmp
cmpb
cltd
gs
aaa
push
adc
or
cmpb
jae
dec
add
pop
addb
lcall
mov
mov
adcb
adc
xchg
outsl
mov
xor
and
lret
daa
xorb
push
jl
or
add
dec
jmp
sub
ret
jo
xchg
pop
hlt
jb
sahf
loopne
or
push
andb
or
mov
push
test
mov
rcrb
loope
scas
add
sbb
movsb
mov
dec
mov
inc
sub
enter
mov
add
xchg
out
pop
or
inc
and
inc
insb
fnstcw
push
inc
push
sbbb
gs
lcall
add
add
gs
sbb
push
add
fidivl
xor
mov
cmp
add
inc
sbb
sub
or
test
pushf
mov
push
mov
or
sub
dec
rorl
jb
or
push
sbb
push
das
ret
add
test
or
jbe
std
adc
imul
stc
push
popa
js
pop
cmp
lods
pop
jnp
pop
push
push
pop
adc
ss
sbb
push
push
inc
push
rcrb
inc
push
ljmp
mov
xor
or
inc
add
lock
jbe
inc
jbe
push
rclb
mov
fwait
mov
fs
push
sbb
pusha
push
rcrb
add
pusha
rcpps
nop
xchg
pop
xor
ljmp
add
inc
sarb
jge
inc
dec
xchg
out
ljmp
push
sbb
or
dec
cmp
nop
dec
int3
notb
test
bound
fildl
bound
adcb
or
jp
jp
es
ret
pop
or
in
mov
cmp
int
inc
and
hlt
xorb
xsaves
or
dec
pop
pop
dec
prefetch
sbb
aas
idiv
jg
cmpb
inc
dec
movsl
sbb
out
mov
das
mov
popa
jp
fcmovb
jg
data16
es
xchg
cmc
adc
xchg
xor
fimull
jge
and
push
out
dec
rorl
and
sbb
aaa
or
dec
inc
mov
add
adc
mov
sub
push
jo
adc
or
mov
cmpb
shrl
or
int
lret
push
sbb
inc
xlat
pusha
jmp
add
add
sbb
rolb
sbb
repz
or
addr16
movsl
pop
adc
movsb
adc
adc
or
lret
and
push
gs
adc
lea
mov
pop
xorb
sub
js
popa
and
mov
int
sbb
adc
or
adc
icebp
push
out
fdivr
stc
jns
adc
xchg
or
sbb
es
push
outsb
pusha
popa
lahf
xor
mov
orb
adcl
addl
nop
mov
testl
movb
adc
out
nop
mov
or
loop
lcall
push
add
fistl
mov
or
push
rcr
outsb
pusha
and
rolb
mull
xchg
xor
dec
out
ret
shl
push
addb
filds
ret
push
dec
push
add
fldenv
out
add
jbe
fsubrl
adc
xchg
or
jns
cmp
or
xor
dec
pop
adc
rol
xchg
mov
add
and
pusha
pop
daa
push
pop
mov
clc
pop
pop
jbe
clc
jge
jo
inc
cmc
mov
fcmovnbe
inc
pop
or
enter
mov
xchg
loope
sarb
pop
popl
stc
mov
xchg
xchg
inc
idivl
or
mov
inc
leave
pop
add
addr16
inc
enter
pushf
mov
inc
inc
adc
inc
sti
mov
sahf
jl
paddusb
loopne
lods
inc
adc
cmp
or
rclb
cld
mov
cld
lcall
mov
lret
loopne
dec
cwtl
cwtl
mov
push
cmp
imul
cmp
iret
and
sub
add
mov
lahf
adc
adc
sbb
and
sub
add
test
and
inc
mov
add
sub
mov
out
add
loop
jnp
pop
lock
sbb
filds
iret
jg
or
mov
pushl
stc
mov
das
pop
lods
ljmp
pusha
in
stos
negb
icebp
add
pop
in
int
jns
jl
mov
mov
lret
fnstenvs
xor
fdivl
xor
dec
mov
push
xor
pop
nop
roll
xor
mov
pop
and
aaa
or
push
fldt
sub
inc
leave
pop
cmp
push
insb
mov
lret
repnz
or
push
xchg
pop
je
cmp
into
rorl
les
in
mov
cmpb
clc
rolb
fcom
scas
push
icebp
add
sub
cmp
frstor
fdivp
bound
fs
pop
pop
pop
pop
adc
ss
xlat
cmp
fcomps
outsb
pop
sbb
or
adcl
insb
shlb
pop
push
inc
or
mov
jb
mov
push
or
and
xchg
sbb
adc
push
lock
movsl
jb
insb
or
imul
lea
mov
mov
adc
xchg
cld
sbbb
adc
adcb
dec
popa
mov
rcll
adc
insb
xor
mov
inc
mov
lcall
repz
dec
jo
mov
pop
inc
xor
loope
mov
or
add
sbb
cwtl
sub
sub
loop
adcl
cmp
xchg
pop
or
testb
fildl
adc
and
xchg
xchg
cwtl
sbb
sbb
dec
fnstsw
sbb
call
or
fwait
adc
push
xchg
in
push
clc
aam
sbb
pop
push
add
and
pop
push
movsb
lock
pop
and
or
scas
loope
lea
mov
mov
mov
sbb
adc
and
dec
and
adcb
xchg
or
mov
mov
or
lea
int3
insb
mov
dec
or
mov
or
mov
xlat
incl
push
sub
enter
shrb
pusha
lods
sbb
inc
dec
xor
dec
shlw
pop
cwtl
fwait
sub
push
pop
sub
add
ja
dec
out
inc
mov
add
mov
sub
aaa
addb
rcl
dec
insb
fs
rorl
pusha
push
das
push
ret
xor
and
and
xor
cltd
xchg
pushf
cmpsb
or
push
imul
jae
data16
xor
xor
shlb
arpl
test
push
inc
add
xor
xor
js
xchg
push
das
mov
ds
cmp
int
inc
cmp
jo
xchg
and
aaa
test
xor
or
andb
push
or
imul
lock
sub
xor
inc
jae,pn
push
les
pop
enter
sub
cmpsl
cmp
arpl
pop
lds
sbb
adc
mov
test
push
dec
popf
and
mov
xchg
adcb
xor
rorl
hlt
out
sub
inc
aas
dec
lcall
cwtl
cwtl
sbb
mov
jecxz
insb
enter
mov
inc
inc
movsl
push
xchg
dec
or
ret
push
inc
inc
nop
xor
adc
mov
fdivrs
or
stc
jns
or
inc
mov
nop
adc
add
inc
inc
dec
fdivrs
add
iret
loope
push
inc
cwtl
dec
iret
cmp
pusha
dec
dec
iret
inc
ret
dec
xchg
or
cmp
cltd
mov
loope
cmpsb
mov
mov
push
jbe
xchg
dec
inc
inc
es
inc
sbb
adc
inc
and
inc
cmp
cmp
pusha
dec
push
aad
adc
mov
push
inc
cmp
mov
dec
push
loope
and
aad
push
repz
adc
dec
cmp
xchg
out
push
cmpl
rorl
push
in
or
rorl
dec
push
push
and
outsb
cmc
cs
sbbl
inc
inc
inc
dec
xor
dec
pop
inc
jl
ror
jbe
push
fistpl
dec
repz
test
ror
enter
or
or
pop
inc
aam
xor
dec
adc
and
pop
inc
insl
orb
xlat
pop
clc
xor
and
or
inc
dec
aad
inc
and
adc
repz
inc
lahf
or
lds
pushl
xlat
into
ss
roll
lock
fcomps
xor
aad
movsb
data16
das
cwtl
add
insl
mov
ss
pop
sub
rorb
mov
mov
out
nop
fsubl
sub
push
mov
ds
adcb
pop
imul
fs
test
and
mov
nop
fildl
test
fiaddl
adc
bound
cmp
pusha
in
pusha
push
pop
sbb
adc
and
or
adc
enter
pop
roll
outsl
cmp
mov
lock
scas
push
fwait
scas
xchg
jmp
scas
ss
and
cmp
push
test
popa
ret
pop
push
andps
je
ja
scas
sbb
jo
popw
and
bound
mov
movaps
and
notb
in
arpl
mov
jne
mov
shrb
and
or
push
inc
imul
xchg
sahf
mov
jl
xor
xchg
sub
push
divb
push
adc
or
lcall
sub
es
sub
dec
inc
jbe
sub
mov
sete
add
add
adc
nop
and
sbb
outsl
push
jge
notb
mov
mov
xor
add
jno
clc
jo
add
sbb
push
dec
pushf
pop
mov
adc
pop
mov
push
dec
and
mov
aaa
mov
nop
mov
call
or
fdivrp
sub
and
lcall
loope
xor
and
push
testl
dec
mov
pop
xchg
dec
ret
je
mov
sub
push
in
add
cmp
push
orb
adc
mov
inc
pusha
mov
pop
nop
or
cmp
jno
sti
push
xchg
lahf
je
mov
adc
ds
sbb
add
fists
cmp
inc
mov
pushf
pop
lds
mov
cmp
dec
jmp
std
movsb
movsb
pop
or
mov
push
out
pop
add
jb
jo
sub
mov
loopne
mov
mov
pop
gs
push
or
or
sbb
jb
fsubs
jge
jae
push
and
cmp
push
loopne
xchg
int3
ss
xor
sbb
mov
xor
in
xchg
int
or
adc
add
dec
xor
mov
add
adc
cwtl
mov
sbb
int3
in
jne
call
je
andb
cmp
pop
mov
loopne
add
testb
sbb
xchg
adc
add
xchg
gs
add
add
pop
mov
and
push
leave
je,pt
mov
xchg
mov
push
repnz
add
je
add
pusha
add
xchg
add
xor
xchg
sbb
fnsave
jmp
sub
pusha
adc
flds
mov
hlt
adc
jg
sub
sbb
out
mov
mov
or
sarl
js
rorb
inc
in
ja
shll
hlt
jge
popa
sub
sub
pop
inc
add
adc
pop
movsb
sub
sub
sti
cvtpi2ps
bound
outsb
push
adc
sub
insb
les
std
or
adc
divl
sbb
mov
inc
mov
movsb
sub
lods
mov
das
fwait
insb
and
xor
xor
or
pop
mov
dec
testb
pop
add
je
inc
and
mov
movsl
add
testl
sub
inc
add
xor
push
hlt
insb
adc
mov
int
jmp
pop
leave
and
add
loopne
movsb
leave
adc
push
xor
leave
xchg
pop
add
cmpsb
test
adc
outsl
inc
push
inc
and
hlt
xor
push
push
xlat
cmp
mov
pushf
aas
cmpb
push
cmp
add
dec
jecxz
xor
js
fildl
dec
testb
mov
dec
add
adc
xchg
adc
daa
mov
jp
insl
dec
sbb
adc
sbb
inc
test
lock
push
out
test
arpl
notl
xchg
mov
call
xchg
jecxz
lock
xchg
das
pop
xchg
bound
lods
push
mov
aam
cwtl
sub
cmp
jb
cmovae
xor
rcrb
incl
mov
pop
hlt
neg
nop
pop
jb
jmp
arpl
je
dec
or
xor
cli
icebp
adc
test
inc
daa
push
cmc
push
mov
out
mov
pop
stos
insb
scas
pop
cmpsb
in
shr
cmpsb
mov
mov
inc
or
xor
jo
outsl
sarl
cmp
push
add
pushf
sub
imul
addb
dec
xor
insl
imul
call
mov
add
shl
and
cmp
sbb
inc
movsb
ja
sbb
mov
jb
fcoms
mov
orl
xor
hlt
insl
loope
mov
fcmovnb
push
inc
rcrb
inc
and
flds
inc
inc
or
lods
mov
adc
or
mov
movsb
sarl
jno
fwait
in
xor
push
imul
icebp
adc
mov
rclb
dec
sub
pop
sti
and
or
scas
das
push
je
mov
or
jmp
xor
scas
and
dec
adc
dec
pop
aam
and
or
pop
dec
xchg
dec
mov
or
je
ss
jmp
xor
add
mov
pop
ja
imul
int
or
icebp
sbb
int
daa
xchg
std
aaa
add
xor
xorl
movsl
inc
dec
jl
jnp
add
xchg
add
adc
imul
fs
push
mov
sbb
dec
inc
and
orb
adc
mov
test
psubusb
push
and
add
fs
push
jne
sbbb
mov
lahf
inc
add
in
movsb
push
movb
or
push
push
insl
std
sub
sub
or
pop
dec
inc
or
sub
xchg
mov
dec
mov
ret
test
inc
sbb
pushf
xorb
insl
cltd
jb
stos
rcl
mov
sbb
adcl
inc
mov
fxam
cmp
das
rcl
push
ja
gs
jl
pop
cwtl
enter
sbb
mov
je
push
sbb
enter
xorb
mov
vxorps
sbb
enter
push
cmp
or
mov
ja
mov
xor
adc
inc
aas
xor
or
cmpsl
es
shr
das
mov
das
mov
ljmp
mov
xor
inc
movb
in
or
mov
pop
pop
sbb
mov
fxch
and
lahf
sarb
dec
xor
rcrb
jne
sarb
sbb
pop
rol
testl
and
or
and
lods
nop
or
cltd
nop
dec
mov
xor
sub
mov
xlat
cmpsb
fldt
and
mov
pop
push
invd
js
icebp
lods
push
mov
and
push
cmc
mov
push
mov
clc
sbb
sub
jae
mov
mov
push
aaa
inc
out
popa
test
notl
xchg
shlb
fwait
lret
adc
out
ds
push
push
lds
out
pop
pop
adc
scas
dec
lea
popl
int
inc
enter
or
mov
add
cmp
add
mov
sbb
or
aam
int3
outsl
xchg
test
adc
xchg
and
pop
les
inc
cmp
test
or
ret
imul
and
je
add
aas
cs
pusha
ss
orl
nop
and
insl
pop
inc
add
and
aaa
movsb
and
outsb
cmp
inc
rolb
and
sbb
mov
pop
adc
mov
mov
cs
pop
mov
lock
fmul
addb
out
mov
xchg
sub
jo
mov
cwtl
int
mov
jne
mov
cmc
shlb
mov
loopne
test
add
int3
por
mov
pop
dec
pop
adc
or
mov
push
roll
gs
les
xchg
pushl
push
div
sub
xchg
jg
cmpl
in
data16
or
cmp
pop
je
mov
sbb
packuswb
ss
stos
outsl
loopne
mov
aam
or
flds
fdivs
pop
movsb
inc
xchg
or
xchg
lret
gs
test
in
or
inc
inc
test
sbbb
loope
sub
or
sub
inc
push
xchg
test
pop
dec
outsl
or
mov
cltd
or
dec
andl
push
xor
inc
dec
das
xchg
outsl
or
add
les
lods
aam
fs
jns
mov
xor
fstl
and
cmp
and
inc
add
or
inc
nop
add
or
sbb
data16
xchg
add
pop
add
push
push
lea
push
das
add
mov
es
daa
mov
icebp
xor
addl
outsl
or
lds
sbb
sbb
sbb
pop
mov
pop
push
jg
mov
enter
mov
inc
dec
pop
pop
pop
mov
sbb
addl
mov
test
pop
jns
xor
adc
dec
test
rclb
sbb
cs
insl
adc
stos
inc
inc
add
fstpl
shl
mov
jmp
dec
pop
aas
or
add
mov
and
movups
mov
pop
mov
mov
xorb
sub
xor
dec
cmp
int3
movb
scas
fiadds
mov
mov
add
flds
stc
mov
cltd
sub
scas
ret
xor
add
cmp
cmp
or
fadds
rol
in
xor
ss
jns
or
sbb
cmp
inc
inc
inc
or
dec
enter
ret
out
dec
or
xor
dec
push
adc
hlt
in
pop
and
inc
mov
enter
sbb
fcomps
pop
lahf
push
mov
lea
xor
rcll
mov
jl
sub
mov
addl
mov
adc
pop
push
pop
mov
xchg
cwtl
add
lret
adc
adc
push
mov
aaa
pop
les
cmpsl
xor
mov
add
sbb
mov
pop
rcl
lock
jae
and
add
iret
addb
mov
push
or
and
xchg
add
add
test
cmc
add
xchg
aad
cmp
shr
add
nop
sbb
add
mov
mov
mov
adc
dec
mov
cltd
add
push
and
aam
sbb
adc
cmp
adcb
insb
sub
mov
dec
jnp
pop
icebp
testb
ret
movsb
mov
es
stos
dec
sbb
pop
push
lock
mov
in
adc
sbb
add
sarl
fiadds
dec
inc
cltd
pop
cmpl
xor
jnp
mov
lea
daa
orl
icebp
push
adc
jecxz
add
cmp
mov
sub
add
jmp
sub
or
mov
mov
add
imul
sbbl
pop
dec
or
mov
mov
pop
loope
sub
inc
mov
xchg
cli
enter
pop
xchg
pop
inc
pusha
mov
add
adcl
mov
push
stos
ss
push
push
stos
sbb
mov
sub
push
jl
or
dec
aaa
out
fnsave
xchg
sarb
add
and
icebp
dec
das
mov
orl
iret
mov
or
push
jmp
xchg
lcall
je
inc
lods
lcall
enter
jns
mov
inc
pop
add
push
add
jb
ds
lock
and
add
adc
jno
in
adc
dec
test
pop
ret
inc
cwtl
adc
adc
in
rolb
pop
mov
jns
inc
lods
sbb
mov
mov
push
mov
outsb
gs
push
adcl
shl
fiaddl
es
xor
pop
inc
adc
cmp
and
rcr
push
and
sbb
andl
mov
inc
popf
push
and
js
or
sub
cmp
push
cmpl
orb
jnp
movsl
pop
shl
inc
mov
rcrb
cmp
jne
popf
out
push
mov
stc
push
xchg
mov
scas
xchg
push
imull
in
jmp
cmp
mov
jo
pop
mov
es
fs
pusha
xchg
loop
mov
xchg
cmpsb
mov
pop
mov
jae
sbb
cmpsl
mov
jbe
adc
mov
clc
adc
scas
aad
and
pop
or
mov
dec
pop
jo
dec
xchg
jmp
je
adc
push
std
pop
jl
inc
lea
shll
push
pop
loop
mov
insb
jo
jbe
dec
arpl
dec
and
out
insb
daa
sbbb
pop
xchg
repnz
test
add
fcoml
and
cmp
jo
pop
movsb
aaa
add
inc
jbe
je
jnp
push
adc
mov
sbb
or
enter
insb
and
inc
push
popa
push
inc
push
inc
jae
cmpsb
nop
xorb
sarb
xchg
and
mov
lcall
jmp
and
or
sub
sub
sub
mov
dec
inc
xor
inc
arpl
or
xor
loopne
enter
sub
decb
xor
mov
pop
repnz
xchg
sbb
lods
dec
fstl
int3
je
pusha
cs
orl
or
stos
scas
out
mov
adc
daa
adc
fs
adc
stos
mov
xor
js
push
dec
jmp
mov
in
mov
addr16
mov
jl
xchg
test
xchg
and
add
xchg
push
shrl
shrb
or
addr16
add
pop
movsb
and
push
stc
add
movsb
sub
push
sbb
pop
mov
pop
and
push
imul
ret
pop
sbb
xor
pop
mov
lock
cmpb
cmpsb
cs
fadds
push
andl
jge
hlt
loope
hlt
cltd
xchg
cmpb
sbb
or
inc
dec
ret
xor
or
mov
mov
cmp
fsubs
sub
sti
adcl
inc
cmp
xchg
or
add
ds
cmp
add
inc
xchg
xchg
cmpl
enter
mov
jl
lret
cmp
cmpl
mov
bound
cmp
frstor
test
or
mov
adc
add
push
mov
mov
imul
fists
adc
inc
mov
movsb
pop
movsb
fisubrs
imul
mov
add
icebp
xchg
xorl
leave
lods
cmp
xor
and
lea
jne
jne
xor
aad
pop
sbb
xor
xchg
lcall
push
jbe
inc
addr16
pop
add
fisttpll
sub
dec
and
andb
xchg
shll
or
sbb
ffreep
cmp
fdivrs
je
inc
xlat
dec
cmp
or
sahf
int3
add
sub
xor
adc
rolb
sub
mov
mov
lods
add
mov
int3
dec
or
add
cmpb
insb
in
or
testb
fildl
andb
std
pop
xchg
cmp
inc
add
xor
cwtl
and
aam
mov
push
pushf
cmpb
xchg
popf
xor
adc
adcb
xchg
popa
test
inc
pop
xchg
and
cmp
pop
mov
pop
xchg
inc
sub
inc
lea
daa
sbb
inc
cmp
add
test
adc
vmovss
bound
pop
mov
lahf
pop
and
xchg
rolb
cli
inc
jg
xchg
rolb
in
ret
arpl
push
jb
or
push
dec
sub
adc
or
mov
jmp
in
out
mov
cmpb
mov
cmp
add
or
sbb
test
xchg
xor
add
pop
fistpl
pop
mov
or
lods
mov
add
xor
adc
push
push
sub
mov
and
mov
clc
inc
out
mov
sub
sbb
and
mov
loope
test
cwtl
dec
ljmp
ficompl
cwtl
mov
bound
or
in
inc
push
dec
sbb
inc
sub
xor
insb
outsb
mov
imul
test
cmp
popa
jnp
push
out
mov
test
loopne
sbb
sub
fstpl
ret
xchg
dec
mov
hlt
lea
or
jo
hlt
cs
mov
mov
dec
in
in
add
xchg
lods
pop
push
aaa
adc
dec
sbb
sub
cmp
hlt
nop
add
push
push
out
arpl
mov
push
fwait
lock
aaa
subl
xchg
fwait
sbb
xchg
daa
ja
add
lock
dec
or
sarb
adc
xchg
lock
sbb
xchg
add
in
clc
push
mov
and
dec
mov
or
cmp
and
or
xor
das
adc
notl
inc
mov
jb
add
jbe
jae
sub
sbb
test
movsb
std
pop
fisttpl
mov
inc
add
mov
push
mov
mov
and
or
or
stos
jg
leave
add
lock
sub
dec
jae,pn
fldl
in
xor
cs
movl
pop
cltd
mov
clc
xchg
cltd
lods
mov
rcl
mov
pop
push
xchg
adc
bts
addb
mov
and
xor
test
lret
inc
jnp
pop
test
xor
fwait
add
dec
mov
add
inc
inc
fs
or
add
loope
pop
mov
ret
push
xchg
mov
rdmsr
icebp
inc
addr16
add
fsts
pop
inc
xchg
fcom
cmpsl
imul
out
inc
insl
mov
test
dec
test
fsts
movl
cmp
xchg
iret
lret
insb
movsl
fs
or
loopne
sti
in
pop
inc
cmp
daa
fdiv
jno
and
cmpl
imul
iret
push
adc
push
dec
push
push
push
jnp
sbbl
or
insb
mov
xchg
imul
aam
cwtl
push
sbb
scas
dec
pop
pushf
lds
lret
fistpll
negl
jbe
les
mov
push
cmpsb
jge
fiaddl
mov
rcrb
mov
mov
push
loopne
in
jne
pop
mov
outsl
push
push
add
cmp
or
cmp
push
ss
nop
testl
or
pop
push
add
jmp
cs
inc
mov
lods
pop
iret
xor
or
adc
inc
js
sbbb
xor
icebp
adc
popf
enter
pop
loop
clc
testb
or
xchg
movsl
psllw
add
xchg
cmpsl
jnp
lret
pushf
pop
mov
adc
or
adc
cmp
je
lea
mov
push
mov
cmp
mov
mov
sub
into
jmp
push
xchg
or
filds
roll
adc
mov
movsl
and
adc
dec
sbb
push
fbstp
adc
jl
pop
xchg
add
cmp
push
sbb
xchg
xchg
mov
cmp
test
xor
add
cli
jno
das
and
insl
inc
or
das
sbb
xchg
or
and
sub
dec
cmp
mov
ret
sbb
and
pushf
mov
mov
push
adc
lea
insl
sbb
fs
addr16
pop
invd
fildl
ljmp
adc
jnp
mov
or
or
and
por
adcb
jg
pop
jo
scas
push
jno
cwtl
je
or
pop
inc
es
or
setg
dec
cltd
xchg
dec
int3
out
in
xor
lcall
mov
pop
enter
int3
cmp
test
dec
das
pop
add
sbb
call
xor
xor
mov
cmp
in
pop
call
repnz
pop
adc
sahf
data16
cmpb
sub
mov
hlt
scas
xor
push
push
push
adc
cli
push
addr16
out
push
test
mov
mov
inc
pusha
inc
loopne
add
cmp
fs
xor
mov
push
ret
pop
mov
or
cmpsb
dec
imul
ret
and
mov
daa
cmp
xchg
fdivs
xchg
lea
test
xor
mov
dec
xlat
cld
jne
jmp
xchg
sub
jle
sbb
or
adc
inc
sar
leave
mov
adc
or
iret
stc
stos
out
pop
fsubs
and
aad
add
push
mov
mov
in
ret
clc
je
cmp
or
mov
cmp
jnp
cmpsl
ret
jmp
int
fimull
imul
test
cs
mov
or
xchg
and
inc
add
jo
sbb
add
push
dec
adc
test
cmpsl
out
andl
jl
popa
or
xchg
test
int3
loope
mov
fsts
adc
add
add
inc
shlb
out
adc
push
add
and
mov
xchg
mov
cmp
push
nop
call
fdivrs
sub
mov
jp
ja
stos
inc
cmp
cmp
clc
cmp
jne
leave
ret
pop
popf
ljmp
mov
xchg
sub
cmp
roll
push
push
jl
mov
not
pop
fldenv
mov
pop
and
inc
sbb
mov
mov
les
lret
shl
xor
bound
jns
fwait
pop
and
mov
adc
and
enter
inc
ja
add
outsl
lock
in
lock
push
fnstsw
cltd
xor
mov
mov
fistpll
mov
push
mov
cs
xchg
lret
cmp
pop
and
outsb
sbb
or
mov
cmp
jg
int3
mov
test
lea
jnp
lods
jp
mov
push
filds
loop
fisttpll
leave
mov
lds
mov
mov
rclb
xchg
mov
sub
addl
outsb
insb
notl
fwait
pop
cmp
sti
sbb
inc
xor
imul
inc
cmp
das
sub
push
mov
mov
or
mov
or
pop
sub
in
mov
and
sub
xor
push
or
or
sbb
dec
adc
popa
aam
or
outsl
fcoml
shrb
push
push
cmp
add
popa
push
out
inc
insb
adc
ret
pop
mov
push
jno
dec
add
xchg
lds
mov
add
and
sbb
call
mov
popw
adc
adc
mov
mov
cmp
iret
cmp
jns
rorb
or
icebp
mov
sbb
sbb
jge
cli
mov
add
imul
shlb
inc
push
or
rcrb
pop
pop
fnstsw
nop
adc
push
rcrb
jle
jmp
sbb
mulb
mov
add
jne
adc
pop
ret
jmp
bound
mov
xor
add
inc
xchg
cmpsb
mov
inc
inc
loopne
fisubl
push
jge
push
mov
sbbb
cmc
fdivs
sub
add
mov
xchg
add
xchg
xchg
lock
sub
inc
add
or
xchg
andb
add
add
add
and
adc
xchg
subl
pop
add
push
or
add
jnp
pop
push
sbb
jecxz
mov
shll
sub
out
adc
lahf
jno
sub
add
push
ret
or
das
push
cmp
rolb
das
repz
xor
stos
test
lds
add
mov
mov
push
es
popa
xor
jmp
sub
movsl
jno
pop
aad
pop
inc
push
and
shrb
test
or
sbb
fsubs
pop
js
cld
ja
mov
je
xor
fsubs
sbb
call
orb
pop
adc
mov
jge
dec
inc
dec
push
testl
push
add
and
xor
mov
adcl
mov
push
push
adc
fdivrl
loopne
xchg
aaa
xor
adc
adc
sbb
sbb
mov
jge
sbb
es
push
inc
lods
sti
pop
imul
loopne
orb
cltd
movsl
mov
mov
xor
xchg
xchg
jo
decl
sti
pusha
mov
mov
out
push
ret
push
and
sbb
inc
dec
std
adc
rolb
iret
je
adc
cmpsl
push
mov
mov
push
pop
les
ds
mov
cmp
int3
les
mov
xchg
cmpl
clc
rol
mov
inc
cmp
imul
pop
ss
jle
dec
movsl
je
xor
and
int3
mov
mov
call
jo
test
rcrb
add
es
daa
xlat
sbb
sub
xor
into
ret
out
shlb
sub
cs
xor
lods
pop
pop
or
and
subb
and
jne
cmp
cwtl
dec
enter
adc
fs
pop
inc
pop
dec
aam
inc
ficompl
es
push
enter
enter
sub
dec
mov
jmp
and
insb
sub
inc
dec
inc
leave
aam
push
data16
cmpsl
xor
or
jne
inc
ret
subb
mov
js
add
iret
push
pop
adc
mov
adc
dec
arpl
or
adc
addr16
cmp
sbb
in
mov
dec
add
push
pop
push
mov
mov
jmp
addr16
and
sbb
adc
sbb
xor
lods
inc
das
rclb
mov
dec
gs
repz
fwait
push
mov
push
dec
roll
jne
and
xor
xchg
xchg
jbe
mov
xchg
dec
mov
or
ret
adc
les
push
push
loopne
mov
not
and
push
mov
mov
or
shlb
sub
and
and
andb
xchg
push
mov
pop
mov
sbb
popa
sub
shrb
mov
pusha
add
xchg
pop
das
sub
aaa
cmpl
push
and
ret
shlb
nop
ljmp
jmp
lea
pop
cmc
sbb
xor
push
and
pop
fisttpl
test
push
adc
push
mov
add
push
mov
cmp
lea
dec
inc
subl
iret
je
cmp
je
ja
neg
push
lea
mov
testb
andl
rep
dec
lods
mov
pop
out
mov
xchg
addl
cmp
mov
clc
daa
mov
inc
adc
dec
xchg
inc
fisubrs
movsl
mov
mov
ds
dec
add
cmc
push
mov
mov
push
xchg
push
mov
loopne
sbb
push
dec
push
clc
add
xchg
add
fcomps
mov
movsb
scas
mov
push
mov
and
push
or
inc
push
arpl
ljmp
cltd
cmp
sbb
cmp
jo
orl
fld
dec
lcall
xlat
mov
adc
dec
pop
sub
add
xchg
lea
scas
or
push
xchg
arpl
mov
ret
test
or
dec
aaa
dec
jo
movsl
jo
mov
icebp
test
xor
inc
mov
sbb
sarb
into
arpl
adc
bound
push
inc
pop
rcrb
gs
mov
inc
jmp
jns
out
xchg
inc
gs
push
adc
xor
in
aad
mov
cmp
inc
jbe
negb
push
in
ss
jp
decb
adc
iret
cmp
lods
stos
add
mov
mov
or
aad
mov
daa
lods
adc
jmp
les
rcll
pop
rcl
mov
and
lcall
mov
ret
pop
mov
icebp
add
lds
icebp
es
adc
pop
sbb
dec
leave
sbb
shrl
add
fwait
jmp
dec
fiaddl
pop
add
sbb
in
aaa
add
in
adc
loopne
daa
lods
sbb
test
mov
dec
popa
nop
shrb
mov
das
fiadds
fwait
add
je
data16
inc
adcb
inc
out
imull
arpl
pop
cmp
stos
sbb
or
xor
xchg
mov
push
and
pop
inc
les
sbb
loopne
and
inc
mov
xchg
fbstp
or
add
ss
pop
sub
pusha
ficoms
addr16
rorb
lock
add
test
dec
dec
roll
and
push
push
jae
cs
lret
jnp
xor
orl
pop
out
and
test
ds
mov
sub
negb
add
push
cs
add
int
inc
add
inc
movsl
imul
mov
push
dec
aaa
test
push
cs
daa
mov
rcrb
adc
xor
mov
adc
ret
call
movsb
fbstp
mov
mov
jmp
sbb
xor
fbstp
pop
mov
push
lcall
push
stos
imul
jo
mov
push
or
mov
xchg
mov
pop
xchg
jae
sbb
jp
push
push
leave
or
mov
xor
or
daa
cmpsl
int
xor
fcoml
rcr
jne
fwait
inc
not
arpl
jp
jecxz
imul
adc
mov
fstl
mov
bound
jmp
inc
bound
and
push
pop
ja
mov
es
jmp
adc
or
iret
movb
fsubs
xor
add
or
fsts
and
and
mov
cmpsb
jae
dec
in
les
and
or
stos
xchg
out
dec
xchg
outsb
or
cmp
aam
into
inc
aaa
or
xchg
adc
jl
sbb
popa
imul
mov
lcall
pop
ret
sub
ljmp
sbb
pop
sarl
jno
nop
and
xlat
or
lds
fisubrs
or
fwait
inc
mov
popf
add
add
shll
inc
pusha
ret
out
xor
xor
jle
in
pop
lods
push
add
cmpsb
jp
adc
gs
inc
dec
sub
les
pop
pop
mov
sahf
shlb
movb
je
outsl
xor
pop
mov
push
and
rol
sbb
sbb
and
test
push
and
and
arpl
xor
adc
out
sbb
mov
jl
idivl
adc
das
mov
sbb
test
xor
insb
mov
add
or
jl
sbbb
shlb
push
jl
cltd
and
xor
mov
cmpsl
jne
adc
sahf
inc
in
and
in
mov
or
sub
ss
push
pop
sub
mov
adc
xor
sub
or
cmpsb
cltd
add
sbb
mov
adc
lock
mov
out
dec
pop
push
aas
pop
in
repnz
pop
pop
or
push
mov
adc
add
cmp
and
inc
and
and
sbb
rorb
xchg
adc
adc
pop
mov
add
shrl
or
movsl
popa
sbbb
int3
jge
sub
mov
scas
fcompl
jl
push
incl
loop
inc
adc
mov
mov
mov
test
add
inc
adc
cmpb
add
loopne
add
or
xor
fsubrs
hlt
and
cmp
push
jl
add
xlat
int3
dec
push
push
mov
dec
insb
inc
mov
mov
sub
jmp
pop
nop
dec
jl
adc
or
jb
jmp
jmp
pop
lret
jl
sub
cmp
shll
xor
add
pusha
jnp
fiadds
push
cli
daa
mov
sub
mov
jb
arpl
dec
inc
lods
adc
lock
ss
clc
sub
mov
gs
in
jne
inc
repz
xor
adc
adc
pop
ljmp
add
or
add
shl
popa
leave
test
mov
adc
inc
inc
sbb
ss
test
push
cmp
pushf
fcoms
jne
test
inc
lods
mov
pop
dec
push
and
cmp
leave
xor
cmp
fisubl
xor
mov
inc
mov
arpl
sarb
or
push
and
pop
icebp
xor
cmpsl
fadd
rcrb
push
jle
scas
ret
push
pop
mov
or
jo
jmp
mov
jp
jne
sub
sbb
sbb
dec
add
das
pop
inc
add
ret
jmp
dec
add
leave
dec
inc
sbbl
dec
xchg
sbb
test
xor
loop
adc
daa
lret
ss
sbb
and
test
pop
daa
jmp
fwait
sub
hlt
inc
pop
rorb
dec
shrb
add
adc
inc
lods
mov
nop
jg
inc
insl
ret
cmp
mov
mov
enter
adcb
insb
stos
pop
xor
or
or
inc
cli
vpcmpeqb
push
dec
pop
mov
jmp
adc
pop
cmpsb
icebp
pop
push
dec
cwtl
scas
sub
pop
movsb
outsb
mov
dec
sbb
repz
mov
andl
cmp
adc
add
push
sbb
mov
stos
mov
add
cmpsl
addl
xchg
push
ss
ja
xlat
and
pop
sbb
jl
arpl
push
ss
mov
sbb
push
ret
cmpsb
loopne
repnz
xlat
sub
sub
add
pop
add
rcr
rcrb
loope
mov
push
xchg
dec
or
xchg
orl
out
aad
cmc
insl
mov
and
pop
insl
xchg
or
dec
adc
movsb
and
cmp
add
ficomps
filds
xchg
inc
jmp
sbb
jne
pop
dec
rcrl
pop
push
add
inc
cs
ds
add
je
arpl
ret
lret
add
jecxz
pop
add
out
or
add
stc
adc
out
clc
ror
or
daa
add
scas
adc
xor
fwait
sbb
and
add
por
setbe
mov
xchg
in
mov
mov
insl
sbb
or
or
int3
mov
push
addr16
add
push
sbb
rorb
jmp
test
push
les
push
in
add
popf
jmp
mov
xchg
mov
jl
test
test
insb
mov
jne
aas
je
adc
mov
or
in
aas
and
loopne
nop
loopne,pt
adc
mov
adc
pop
sbb
mov
and
mov
ret
ffree
in
push
cmp
push
sti
jge
js
fmuls
notl
xchg
call
cmpsb
adc
andb
adcb
inc
ficoms
popa
hlt
out
cmp
mov
pop
dec
cmpsb
jo
mov
and
jecxz
lock
sbb
aam
sbb
js
jns
adc
sbb
push
inc
inc
sarl
loope
dec
mov
dec
addl
mov
rol
mov
ljmp
adc
sbb
push
xor
xor
test
mov
cmpsl
pop
jl
and
dec
inc
aad
inc
inc
sub
inc
pop
mov
adc
cmp
js
dec
clc
sbb
imull
daa
add
add
negl
mov
dec
popw
jl
inc
cmpsb
je
cmpl
and
mov
add
adc
lea
out
adc
scas
xchg
js
dec
push
test
mov
adc
fmull
dec
push
push
les
insb
dec
lea
push
adc
and
cltd
and
and
xlat
mov
popf
and
insb
inc
shl
lods
les
fildl
rcrb
cmp
rcrb
in
adc
sub
das
jne
add
push
sbb
add
adc
push
js
mov
subb
bound
xchg
sahf
shlb
cmp
xlat
inc
rol
andl
call
in
mov
jbe
or
sbb
mov
or
lods
mov
jmp
roll
push
roll
push
pop
lock
and
cmp
arpl
popf
orb
and
sub
loope
pop
fdivl
push
rolb
sbb
mov
aam
das
push
fwait
xchg
pop
loope
mov
call
push
stos
push
jno
adc
push
push
out
xchg
loopne
dec
or
mov
fisttpl
mov
movsl
scas
sub
push
push
sbb
lods
mov
addb
movsl
je
fisttpl
mov
call
or
inc
mov
stos
sbb
cs
cli
or
ffree
pop
inc
sbb
inc
push
adc
ljmp
mov
les
pop
sbb
mov
xchg
push
or
shlb
bound
insb
xchg
push
jns
push
fcmovne
call
adc
pop
in
jmp
jmp
push
out
movsl
push
pop
shlb
and
nop
loopne
mov
in
ret
daa
ret
cmpsb
xchg
cmp
call
call
xlat
popa
aas
je
fwait
idivl
push
cmp
mov
push
test
push
cmpl
ret
mov
popf
adc
mov
inc
cmpsl
lods
sub
daa
adc
movsb
test
add
imul
loopne
mov
push
xchg
movsb
mov
pop
mov
mov
or
dec
mov
incl
dec
inc
movsb
xchg
add
fiadds
push
fsubrs
xor
into
add
stc
out
sbb
sbb
adc
push
cmpsb
sbb
xchg
mov
lahf
jne
pop
adc
add
and
es
leave
push
adc
rcl
sub
and
into
mov
fisttpll
aam
add
inc
inc
add
pop
push
test
and
mov
pop
sub
cmpsb
inc
das
jge
je
xorl
push
inc
inc
out
jno
pop
mov
nop
daa
add
fs
mov
cmpsb
jo
jmp
add
adc
jmp
or
lahf
jnp
cmp
xchg
add
adc
fwait
inc
lods
leave
push
inc
nop
mov
fsts
outsl
or
and
fcmovbe
fimuls
stos
push
sub
loop
arpl
and
push
fs
cld
cmp
mov
add
xchg
and
cld
sbb
fs
cld
pusha
test
out
fstps
or
xlat
dec
pusha
jbe
movb
push
je
sub
int3
andl
add
dec
imul
adc
push
xchg
push
leave
or
dec
das
push
enter
addr16
imul
aam
aaa
fcmovb
and
xor
fs
dec
outsb
xchg
sti
xchg
mov
jmp
mov
push
push
cmp
movl
fdivs
and
sbb
pop
dec
push
ret
ret
mov
jge
or
push
mov
mov
adc
popa
mov
inc
rolb
dec
imul
pop
in
push
and
lahf
push
shr
popa
nop
mov
loopne
pop
mov
or
orb
inc
or
call
and
dec
fimuls
seto
sbb
xor
jl
dec
jge
add
in
push
adc
and
test
push
or
adc
pop
scas
out
add
ret
orb
pop
dec
dec
add
fisttps
insl
imul
sbbl
push
dec
fildl
out
dec
and
lods
xchg
inc
dec
inc
pop
lcall
insl
push
add
sbb
in
lcall
fs
xchg
rcll
inc
repz
mov
adc
xor
and
outsb
adc
inc
outsl
sbb
mov
rcl
les
and
repz
inc
cmp
inc
lret
jbe
fcompl
leave
cs
xchg
adc
dec
pop
pop
movsl
xchg
mov
jbe
adc
test
out
jl
or
jle
pusha
dec
fs
cmp
bound
jecxz
adc
and
mov
jne
out
push
inc
fsubrs
daa
or
jmp
test
scas
clc
xchg
clc
or
add
jmp
adc
addl
jb
gs
sub
adc
lods
pop
jg
or
shl
xor
add
push
push
mov
cs
out
std
mov
inc
xchg
adc
loopne
icebp
sbb
test
pop
inc
or
pop
mov
cmp
adc
inc
and
les
lock
out
xor
adc
or
jbe
idivb
push
sbb
cmp
jnp
xchg
add
or
sahf
loopne
nop
push
mov
dec
push
mov
or
leave
cmp
imulb
insb
push
rcll
loopne
out
sarl
lea
lret
rcll
insb
js
mov
dec
cmp
push
fnstenv
inc
pop
out
jno
mov
or
jp
push
addl
negb
mov
inc
sbb
xchg
or
xor
adc
nop
fs
in
mov
es
pop
das
xor
mov
pop
adc
cmpb
mov
jae
push
xor
outsl
insb
sbb
and
adc
subb
call
add
rol
cmpsl
clc
cmpb
jne
subl
pop
mov
mov
xor
js
adc
push
pop
lahf
cmpsb
push
cmpsl
cmc
and
push
xor
cmp
jmp
dec
pop
outsl
or
sub
mov
es
daa
pusha
dec
or
ror
pop
jl
xor
jae
cmpsl
mov
mov
dec
mov
jne
pop
xchg
and
addb
lods
into
insl
imul
in
jo
xchg
and
loopne
mov
cmp
or
insb
sbb
push
sub
mov
or
jecxz
xor
inc
dec
or
jg
and
mov
in
or
das
pop
jecxz
ret
sbb
pop
pop
jecxz
jl
adc
and
sub
sbb
mov
shlb
jne
jmp
dec
insb
and
test
mov
imul
xor
pusha
popf
insl
inc
ficoms
iret
mov
ret
dec
mov
mov
jbe
out
dec
inc
pop
enter
jge
pop
pop
or
popa
in
cld
roll
icebp
or
and
loop
jns
es
fcmovb
js
rorl
and
mov
insb
rorl
inc
jle
inc
cmp
fwait
cmpsb
sbb
sub
cmp
das
pushf
and
sbb
adc
xor
pop
cmp
xchg
pop
xchg
xchg
cmc
inc
push
mov
sub
sbb
mov
lar
dec
jae
das
and
sub
test
and
push
push
mov
and
cmp
clc
xlat
aam
lock
push
pop
xchg
pop
and
popa
movsl
add
adc
fs
lcall
push
cs
xchg
push
xor
inc
pop
xchg
or
cmp
insl
repz
daa
je
jmp
sbb
js
icebp
add
jmp
sub
lods
and
push
push
into
push
mov
imul
jle
push
or
jne
inc
adc
ror
push
cld
add
sbb
je
scas
pop
popf
outsb
xchg
add
xor
cmpsb
imul
ret
mov
or
cld
pop
cmp
inc
or
xor
lock
daa
pop
add
sbb
adc
es
or
and
adc
hlt
dec
cwtl
les
shlb
hlt
rolb
enter
cmp
sub
lods
sbb
push
cmp
and
sbb
pusha
aad
xorl
push
xor
ret
mov
cmp
cmp
inc
mov
rclb
cmp
cmpsb
dec
mov
push
cltd
push
pop
hlt
je
clc
sbb
mov
sbb
cmpsl
add
ret
sbb
xlat
cmp
cvtpi2ps
adcl
movsb
push
xor
sbb
outsb
nop
hlt
pop
insl
ffreep
cmp
add
fistl
mov
and
test
sbb
pop
pop
lea
pusha
adc
sbb
push
cmp
jmp
push
dec
mov
lock
daa
fwait
inc
clc
out
xchg
ds
aad
pop
adc
add
scas
leave
and
inc
mov
adc
or
mov
jmp
or
lock
sbb
sbb
sub
popa
pop
in
cmp
push
ret
sahf
cltd
dec
push
pop
xchg
mov
inc
xchg
out
sbb
outsl
test
addb
mov
repz
add
xchg
push
inc
aad
adc
ficoms
xor
pop
inc
imul
pop
adc
or
pop
cmp
icebp
fs
and
cld
cmp
xchg
inc
daa
sbb
xorl
jge
sbb
mov
xor
adc
sub
and
xor
pop
adc
fmuls
cmp
in
aam
adc
fidivrl
pop
mov
les
cmp
movsl
sbb
jg
adc
icebp
push
enter
je
mov
iret
stos
mov
shll
jns
mov
xchg
or
aas
movsl
bound
mov
adcb
push
jbe
jo
and
pop
adc
add
add
cmp
mov
cltd
xor
adc
js
and
cmp
adc
jbe
leave
je
pop
imul
lea
adc
popa
inc
sub
clc
cmc
jmp
adc
test
xchg
loope
ret
fmuls
loope
mov
or
fld
push
leave
or
or
pop
addr16
popa
add
mov
mov
adc
dec
stos
pushf
push
push
dec
xor
rcr
test
lods
push
dec
les
mulb
inc
or
xchg
cs
xchg
sar
jae
ds
mov
pop
jne
pop
int3
sbb
inc
jbe
dec
mov
xor
add
inc
and
je
test
adc
movl
in
js
mov
imul
les
dec
or
sbb
cmp
mov
push
add
inc
mov
xor
sahf
push
sar
sbb
addl
or
xchg
cmpb
xor
movsb
daa
or
mov
pop
inc
call
cmp
sbb
mov
or
fisubl
sbbl
pushf
daa
mov
add
mov
xchg
sti
cmp
inc
js
and
pop
xchg
lcall
daa
or
mov
add
mov
out
dec
dec
dec
inc
and
ss
rolb
ret
pop
subb
jo
rcrb
mov
sub
pop
or
aam
or
lods
mov
inc
sbb
sbb
rcrl
or
cmp
dec
popf
out
cmp
sbbb
adcb
pusha
pop
cmpsb
test
inc
lock
xorl
add
adc
jge
cmp
mov
arpl
dec
mov
cmpsl
pop
pop
and
enter
nop
lock
add
push
scas
shll
aam
dec
sbb
xchg
bound
or
and
leave
sub
addr16
repz
dec
pusha
lods
or
cmp
aam
mov
inc
or
fwait
cwtl
out
xor
or
or
or
cmp
push
push
scas
aam
pop
aam
push
add
stos
sbb
and
arpl
push
and
xlat
lods
jecxz
loopne
mov
insl
cmp
mov
iret
daa
xchg
cmp
add
adc
or
mov
das
movsl
sub
ljmp
add
repnz
seto
ss
xchg
movsb
dec
dec
mov
sub
shlb
add
add
cmp
aam
sbb
loope
mov
ljmp
dec
dec
push
rorl
or
fs
sbb
mov
sbb
sbb
cmp
fisttpll
jne
imul
xor
add
fistpll
aaa
push
arpl
loope
adc
mov
push
and
je
das
js
mov
fbstp
inc
or
mov
cmp
or
sti
leave
sbb
sub
pop
dec
mov
xchg
add
inc
jbe
push
xor
mov
xchg
xor
add
xor
mov
in
add
ficompl
jne
inc
pop
lock
dec
push
pop
lret
insb
add
pop
mov
push
adc
les
mov
jle
pop
mov
aad
add
in
add
out
or
mov
filds
lcall
sbb
enter
cmp
ret
sbb
push
comiss
je
add
loopne
and
lea
jne
inc
addb
push
lock
jbe
mov
mov
adc
fiadds
xchg
add
popf
mov
inc
and
gs
sbb
dec
sbb
pop
rorb
aam
xchg
ja
insl
fs
pop
in
fmuls
enter
jne
cwtl
rolb
fcomps
add
enter
repz
loopne
mov
jno
push
push
xor
xchg
and
sbb
rolb
sbbb
enter
mov
fistl
dec
and
pop
xor
int3
inc
es
push
push
push
or
cmpb
cmp
jae
mov
xor
mov
mov
call
and
inc
shll
jmp
inc
add
push
sbb
xchg
jg
pop
cwtl
inc
jg
push
jg
adc
mov
or
jns
adc
dec
hlt
pop
dec
sub
notb
sahf
out
cmpsl
daa
cmc
scas
cmc
out
and
repz
sbb
call
in
and
jle
dec
mov
aaa
stos
sub
insb
addb
pop
jg
push
imul
sub
add
fldenv
jb
mov
in
jns
add
lahf
insb
stos
out
add
mov
repnz
pop
push
add
dec
icebp
add
jge
add
push
lret
sbb
and
das
jns
xor
pop
stos
sub
or
loopne
icebp
ljmp
push
arpl
mov
sbb
ss
sbb
mov
mov
mov
push
pop
dec
and
add
test
pop
cld
js
jnp
lock
adc
mov
pushf
sub
dec
pop
test
push
mov
shlb
les
and
into
lods
loope
xchg
add
insl
orl
xor
push
les
mov
shll
push
lods
and
lea
imul
mov
scas
mov
fildl
jbe
stos
and
outsl
dec
testb
shl
pusha
add
sbb
and
sbb
jbe
sub
add
push
inc
push
ficomps
mov
xchg
fcomps
dec
inc
cmp
sbb
mov
or
mov
adc
mov
xchg
inc
sti
jne
and
xor
and
dec
xor
pop
push
and
js
pop
push
test
sub
pop
das
xor
das
test
or
call
loope
mov
call
push
mov
dec
cmp
movsb
repz
and
and
nop
mov
sub
and
shlb
ljmp
int
or
mov
cmp
jo
ret
pop
adc
cltd
shlb
jb
jne
dec
or
mov
inc
pop
repz
fsubl
rcr
cmp
mov
imul
and
jbe
or
jge
dec
andl
lock
ret
push
add
repz
jne
outsl
das
dec
pop
int
inc
lock
test
repz
mov
inc
mov
mov
shl
jmp
arpl
sub
arpl
in
sub
pusha
mov
push
pusha
sbb
lods
imul
add
dec
adc
and
pop
mov
adc
and
jmp
push
jecxz
xor
clc
mov
add
ds
je
xor
insl
sub
lods
mov
shlb
inc
sbb
push
sbb
adcl
and
mov
mov
or
and
and
inc
xchg
dec
adc
insb
add
daa
je
push
jae
fidivl
daa
and
inc
push
inc
push
dec
jecxz
jmp
push
movsb
sub
adc
lret
sbb
mov
pop
popf
sbb
stc
pop
test
mov
cmp
cmp
icebp
and
add
or
rclb
mov
fmuls
jle
leave
sbb
in
or
mov
or
jo
or
push
popf
sbb
sub
aam
xchg
jo
out
pop
mov
sbbb
std
adc
sbbl
xchg
dec
add
pushf
and
hlt
adc
dec
push
mov
and
test
je
dec
repnz
cltd
push
in
lods
sub
pusha
cwtl
in
pop
xchg
pushf
gs
lds
adc
mov
nop
push
or
sbb
insl
lods
cltd
xchg
jg
inc
and
push
js
xchg
add
in
sub
pop
inc
jecxz
mov
jno
outsl
adc
ja
fwait
xor
push
aam
pushf
or
cmpsb
ja
xor
addb
add
cmp
inc
dec
inc
cwtl
in
pop
test
inc
sbb
test
filds
push
jle
loope
jmp
push
dec
sbb
test
add
aam
lods
pusha
jmp
add
mov
inc
dec
xor
push
jmp
test
add
inc
add
imul
call
pop
cltd
lea
push
mov
mov
or
mov
adc
add
xchg
enter
add
cmpsl
int3
mov
adc
or
mov
adc
or
adc
xor
call
adc
or
enter
mov
popl
mov
or
mov
sbbb
fcomps
fwait
mov
daa
cmp
in
lods
sbb
sbb
das
sbb
and
adc
mov
sbb
pop
imul
cmp
out
push
pop
repz
das
or
mull
dec
movsb
jmp
pop
movsb
push
movb
scas
test
or
cli
sub
test
lret
ret
mov
jecxz
mov
push
rclb
lods
mov
loopne
nop
xchg
mov
add
xor
dec
sti
cmp
mov
adc
loope
xchg
out
repz
jne
cmp
test
push
inc
adc
xchg
xchg
roll
mov
or
mov
nop
cmpsb
xor
pushf
in
xorl
mov
sbb
cmp
xor
and
dec
repz
and
push
sub
pop
adc
lods
sti
sub
mov
jns
adc
pop
hlt
in
add
les
mov
je
movl
insb
xor
ljmp
xchg
push
clc
xchg
sbb
mov
stc
icebp
add
dec
shll
push
inc
inc
mov
rclb
pop
push
cmp
sar
outsl
imul
in
adc
bound
jg
push
adc
std
add
mov
enter
pop
test
andb
lods
jno
and
mov
lods
adc
push
ret
inc
push
mov
test
cmp
aam
stc
mov
clc
adc
sbb
mov
in
enter
les
push
je
sbb
rcl
pop
and
mov
les
add
sbb
sub
movl
xor
shlb
mov
clc
add
sbb
lea
daa
mov
cmp
dec
xor
movsl
mov
sub
stos
adc
mov
lea
push
fists
fwait
movsb
xchg
fbstp
repnz
scas
or
dec
sbb
ds
test
bound
add
scas
push
frstor
adc
push
sbb
adc
pop
sub
sub
test
nop
pop
rcrb
loopne
sub
fcmovnb
loopne
sahf
and
jne
inc
das
jo
pop
dec
dec
inc
dec
inc
mov
pop
cmpl
jbe
sbb
pop
jg
add
jbe
dec
push
jns
mov
cltd
orb
or
pop
sub
xchg
pop
inc
pop
inc
add
jno
pop
test
arpl
rol
mov
sbb
pop
add
mov
ja
lret
pop
sahf
pop
scas
jne
aad
inc
daa
iret
or
or
adc
adc
cmp
mov
sbb
push
or
daa
push
cs
aas
hlt
push
xchg
lea
push
xorb
push
xor
sbb
adc
dec
pop
or
enter
cld
dec
call
jae
jmp
hlt
ss
pop
push
inc
dec
push
push
and
sahf
test
pop
aas
fsubs
push
sbb
and
mov
je
andl
dec
push
add
aaa
push
push
cmp
jne
adc
gs
dec
roll
push
inc
mov
dec
inc
sub
and
or
lea
dec
pop
mov
and
jo
test
loope
mov
icebp
adc
test
inc
lret
inc
mov
fs
xchg
cmp
hlt
jp
xchg
pop
rclb
or
movsb
sti
cmpsl
push
pusha
lea
aaa
mov
call
test
add
pushw
shl
add
inc
cmc
adc
inc
xchg
fs
pop
add
rol
imul
mov
addr16
or
or
inc
mov
jle
das
aam
mov
sbbb
xchg
pop
push
adc
lea
mov
fwait
adc
jle
ret
jmp
lcall
cwtl
xor
and
dec
test
push
and
adcb
cmpsl
push
mov
add
mov
lea
sbb
fistpl
add
nop
sbb
imul
pop
pop
add
fs
icebp
mov
cmp
jo
mov
aaa
mov
and
pop
xor
es
adc
dec
sbb
out
stc
pop
negl
mov
jmp
inc
mov
xchg
sbb
push
or
cmpsb
scas
xchg
jne
push
and
inc
push
push
sbb
ja
add
in
movl
and
pop
mov
mov
test
mov
push
xlat
xchg
cmpsl
push
xor
movsb
push
inc
sbb
mov
cmp
sub
dec
adc
movl
ljmp
push
mov
pusha
pushf
or
cltd
stc
or
fisubrl
cmc
jmp
pusha
jne
xchg
add
ja
cmc
adc
add
dec
inc
jg
inc
pop
sbb
or
loopne
lret
pop
jno
insb
inc
js
or
add
xor
push
mov
daa
lock
pop
mov
xchg
inc
lock
icebp
add
sbb
dec
add
push
mov
cli
rcl
ret
mov
lock
xchg
ljmp
xor
jnp
cwtl
mov
adc
mov
xor
shlb
sub
add
or
mov
inc
and
xlat
pop
mov
clc
and
add
test
inc
push
mov
xor
pop
repz
mov
mov
movl
lea
add
or
cmp
ja
ss
inc
dec
xor
inc
xor
in
xchg
loopne
xor
pop
jl
add
cmp
pop
clc
fxch
nop
push
inc
jne
movsb
arpl
push
test
inc
call
ljmp
push
add
and
add
mov
mov
sar
sarb
das
jge
mov
sub
mov
lock
loopne
push
fsubs
inc
cmp
shlb
mov
outsl
imul
cmpsl
rolb
rcr
adc
in
adc
sub
rcll
dec
ljmp
xchg
inc
cmp
or
add
or
xchg
outsb
sub
lds
push
xchg
je
loop
or
push
cs
out
jo
dec
and
sub
out
out
shr
dec
outsl
enter
cld
mov
pusha
loope
repz
add
enter
pusha
or
xor
mov
addr16
shrb
sbb
and
inc
or
add
int
gs
or
ss
dec
imulb
adc
xchg
das
add
jo
fadds
xor
inc
adc
fldenv
lock
inc
and
das
pushf
adc
xorl
add
sbb
xchg
hlt
pop
fstpt
bound
jne
fcmove
add
adc
inc
gs
add
cmp
cmp
ds
imul
push
pop
mov
or
andb
add
mov
cmp
xchg
mov
xchg
push
daa
fsts
adc
fwait
mov
shrl
fucomi
das
jo,pn
insl
lret
lods
sbb
push
movsb
xchg
ss
xchg
inc
ret
fimuls
or
in
mov
int
int
and
bound
cmp
adc
xchg
mov
mov
fdivrl
call
mov
fcompl
out
cmp
paddq
mov
push
lea
push
jo
xor
and
jecxz,pt
jge
repnz
ja
addb
pop
adc
push
lods
xor
or
xor
push
lds
mov
xchg
add
mov
ret
mov
pop
fcoms
adc
fs
push
inc
pop
repz
add
mov
sub
nop
push
sub
aam
shlb
insl
mov
pop
dec
imul
fdivs
adc
movsb
pop
lods
sub
shlb
cmp
adc
mov
adc
rcrb
in
insb
jo
add
xor
popa
inc
test
or
pusha
in
mov
jnp
pop
push
or
fs
or
jmp
stos
nop
mov
sbb
mov
mov
sub
roll
xor
fcmovbe
or
push
rcr
sbb
mov
popf
emms
xchg
adc
cwtl
fistpl
push
pop
movsb
xchg
cmp
or
mov
test
push
push
jae
add
dec
sub
in
incl
outsb
inc
cmp
je
test
aaa
lds
adc
jne
fs
jmp
adc
stos
sub
dec
scas
lock
cwtl
add
test
sub
mov
in
nop
push
add
stos
sbb
xchg
push
sbb
nop
imul
cmc
add
adc
in
movsb
aad
in
xor
in
mov
dec
add
ret
or
sub
daa
add
cmp
je
loope
xchg
shlb
mov
adcb
ret
std
add
push
xchg
movl
sbb
sbb
pushf
sbbl
roll
push
lret
mov
push
daa
hlt
sub
aam
adc
add
xor
icebp
cmp
aad
mov
icebp
cmpb
xchg
add
mov
sbb
add
lcall
mov
push
fimuls
decb
fs
xor
jl
lret
push
inc
pop
push
les
jge
xchg
jns
xor
or
outsl
insl
fldcw
cmpsb
cmp
sbb
imul
jb
sbb
sahf
mov
mov
or
or
fs
insl
fs
lcall
adc
iret
dec
loop
mov
imul
xchg
rcrb
push
adc
jne
jnp
icebp
push
xchg
adc
jnp
mov
jp
cltd
and
insb
jns
movsl
adc
and
pop
push
push
jne
mov
dec
inc
cltd
inc
adcb
sub
testb
inc
pop
cltd
push
fs
loopne
and
jae
repnz
fistl
or
xchg
pop
daa
or
pop
out
push
imul
es
cmp
add
ljmp
jns
push
jb
adc
pop
inc
repnz
cs
pop
fiadds
jecxz
outsl
sbb
inc
or
pushf
mov
sbb
pop
and
test
jnp
push
shrb
fistps
inc
or
rolb
pusha
fs
add
lock
cwtl
jecxz
hlt
jbe
push
loopne
push
adc
cld
aam
inc
nop
popf
sbb
les
jp
loopne
or
pop
or
call
mov
in
xchg
aaa
and
das
hlt
hlt
pop
pop
shr
cmp
add
add
aas
hlt
loopne
bound
sub
jge
rorb
pusha
ret
pop
xchg
dec
push
cmpsl
mov
ds
jge
mov
jmp
mov
adc
cld
int
sub
out
jl
mov
mov
pusha
mov
adc
adcl
sti
cmpl
cmp
inc
imul
mov
shlb
clc
loopne
sbb
dec
mov
sbb
push
data16
mov
pop
xchg
fs
xchg
pop
or
jg
ficoms
inc
pop
lahf
mov
aaa
push
rcrb
cmp
jne
inc
jmp
lods
das
out
pop
or
and
rcrl
sarl
sbb
inc
inc
imul
cmp
push
idivl
dec
lock
fs
mov
dec
mov
rcll
push
movsl
out
xorl
fstl
add
loop
cmpsb
jo
and
cmp
or
jle
jg
inc
shrl
outsb
or
clc
adc
adc
out
shll
lock
add
cmpsb
jp
aad
inc
imul
dec
push
leave
xor
sub
lds
sbb
sub
pop
push
xchg
test
cmpsb
ficomps
std
je
sbb
push
stos
pop
push
out
or
mov
out
xchg
je
imul
leave
stos
inc
fisubrl
sub
ja
pop
int3
mov
inc
faddl
ljmp
scas
xchg
dec
ljmp
and
dec
ljmp
daa
jbe
cmp
fucomp
bound
addb
lods
jecxz
call
xchg
popl
sub
or
jmp
in
movsl
and
in
dec
lcall
pop
inc
or
xchg
pusha
int
jmp
inc
ljmp
jnp
fisttpll
add
push
fiaddl
jge
dec
pop
xor
test
in
fnstenv
push
dec
add
add
add
or
scas
jne
add
jne
and
lahf
ljmp
roll
aas
xchg
inc
push
xchg
fcompl
dec
fadds
ss
jge
ds
pop
pop
ret
push
jne
sahf
and
ret
sbb
cmp
dec
in
xorb
add
sbb
data16
scas
and
inc
mov
rcl
or
or
pop
adc
lock
xchg
sti
add
leave
xchg
mov
test
jne
mov
in
lcall
add
popf
ret
add
or
sbb
and
andl
subl
adcl
mov
int
fs
in
jbe
inc
add
pop
loopne
test
xchg
hlt
inc
mov
movsl
loopne
add
mov
in
pop
std
addb
icebp
lret
add
gs
aad
sub
loop
cwtl
sbb
scas
cmpl
mov
into
xor
lret
ret
outsl
ret
shll
rorl
push
pushw
xchg
sti
stos
cwtl
enter
lea
xchg
sbb
pop
lea
jb
lea
lea
push
cmp
jmp
insb
cmp
add
pop
cmpsl
ja
jle,pt
or
popf
shl
cmpsb
test
mov
es
divl
mov
insb
clc
cmp
xchg
add
adc
rclb
sub
add
pmullw
sbb
mov
ret
aaa
jb
jmp
pop
cmp
inc
sbb
and
inc
mov
subl
cs
leave
cs
xor
cld
adc
pop
dec
ja
dec
pop
aaa
aaa
rolb
fwait
sub
mov
push
imul
cmp
ret
shlb
push
pop
xor
out
bound
repz
ret
fldl
aam
xchg
mov
loop
lods
int
dec
pop
adc
mov
sahf
cmc
nop
and
pop
pop
push
xor
fcoml
sbb
ret
clc
push
dec
or
inc
xorb
rcrb
mov
dec
xlat
mov
pop
stc
shlb
push
sarl
dec
ret
fbld
and
mov
dec
sbb
and
jnp
leave
loopne
add
add
aas
sbb
outsb
cmc
mov
in
add
or
sbb
lea
pop
add
pop
pop
xchg
sbb
inc
jmp
jecxz
cmp
jmp
mov
lret
mov
xchg
mov
sbb
mov
add
jmp
stos
xchg
cld
fldenv
push
push
cli
popa
pushf
adc
sub
add
pop
mov
imul
lss
or
or
pop
jb
xchg
and
and
sbb
and
adc
xorb
add
push
lcall
push
xchg
sub
and
nop
and
rolb
dec
inc
or
pop
inc
outsl
add
or
inc
jb
add
inc
js
shrb
dec
add
adc
or
xchg
sub
and
or
mov
dec
mov
mov
stos
add
xor
data16
jg
aaa
xchg
and
cmpl
movsb
and
inc
pusha
pop
mov
rcll
fs
out
adc
inc
jns
cmpsb
mov
add
ljmp
inc
outsb
or
rolb
jno
jle
mov
jbe
adc
or
popa
dec
arpl
push
sub
xchg
lods
xor
frstor
test
add
movsl
mov
setnp
jmp
cmp
add
popa
push
mov
jge
xor
cmpl
add
and
imul
push
adc
inc
cmpsl
lods
add
notl
add
add
cmp
add
push
push
rcrl
push
mov
sbb
out
daa
gs
enter
shl
mov
es
jo
add
sub
rcrb
and
enter
xor
es
add
popa
nop
add
sub
xor
popa
call
enter
push
rol
pusha
add
call
sarl
pop
fisubrs
jbe
fnstcw
pop
hlt
xchg
sbb
movsb
push
in
and
jbe
push
sahf
cmp
repz
jbe
and
loopne
mov
sub
pop
mov
enter
xchg
enter
dec
jne
rcrb
loop
loopne
add
fcoms
fidivl
addl
push
ret
add
aam
imul
mov
cmp
add
xchg
inc
orb
and
movsb
imul
fs
push
iret
and
aaa
lret
je
aam
std
push
xlat
lret
push
push
mov
jnp
sub
mov
enter
adc
dec
cmp
sub
out
in
lds
pop
mov
lds
movsl
movsb
mov
jb
lret
mov
movsb
sub
cmp
frstor
cs
push
jbe
les
dec
adc
ficoms
ja
pop
mov
push
decl
lahf
inc
fiaddl
cmp
fwait
imul
ret
pop
jae
loop
mov
cmpsb
leave
xchg
jmp
movl
lock
fsubl
jbe
xchg
enter
andl
adc
imul
cvtpi2ps
add
dec
xchg
lret
mov
inc
or
lock
cli
dec
shlb
dec
daa
mov
jo
mov
or
adc
pop
jmp
ret
jae
adcl
inc
jmp
cmc
xor
xor
punpckhbw
xor
inc
pop
cli
or
mov
or
sub
sub
xorl
repnz
mov
mov
sbb
push
sbb
push
inc
cli
sbb
into
test
loope
xor
fistps
mov
adc
jbe
and
xchg
pop
and
das
xchg
adc
add
add
popa
inc
xlat
cld
add
push
jmp
pop
aam
fildll
movl
push
push
mov
adc
call
cmp
bound
or
push
cmpsl
les
adc
or
sbb
sbb
subb
shll
push
mov
inc
mov
mov
call
adc
mov
into
sbb
sub
pop
inc
xor
sub
fisttpl
pop
cmp
loope
jl
dec
cmp
lcall
or
push
jo
enter
mov
push
icebp
cmp
aas
fldlg2
hlt
xor
rcll
or
mov
addb
das
cld
inc
pop
inc
loopne
sub
jnp
rcr
test
xchg
call
xchg
adc
lods
add
and
gs
and
sub
xor
sub
cmp
call
fmuls
cmp
cmp
xchg
aam
inc
ds
push
sub
out
add
pop
rclb
lret
mov
adc
sub
mov
test
xadd
iret
sahf
iret
inc
push
inc
cld
sub
hlt
add
and
mov
test
cmpsl
inc
and
aas
test
lea
mov
push
inc
stos
inc
in
or
cmp
jb
and
sbb
or
ljmp
stos
movsl
add
mov
scas
jl
add
pop
mov
mov
fiadds
mov
dec
cmp
sbb
mov
push
push
add
shr
add
addl
jge
stc
pop
inc
mov
mov
inc
xor
jl
scas
mov
inc
pop
outsb
pop
gs
mov
idivl
sbb
add
or
mov
loopne
cmp
pop
mov
xor
clc
mov
lsl
cmp
and
cmp
jbe
xchg
adc
pop
mov
or
ret
pushf
imul
movsb
xor
push
cltd
les
xchg
xor
ja
or
mov
add
iret
dec
test
popf
mov
or
sub
push
mov
cs
and
add
je
xor
aaa
xor
clc
xor
xchg
adcb
cmpsb
clc
or
or
nop
in
stos
xor
pop
addl
push
push
sbb
cmpl
inc
mov
and
das
mov
push
dec
xor
add
les
sub
jge
lret
lods
outsb
bound
adc
notb
stos
movl
sahf
fimuls
sbb
mov
stos
fcoms
enter
aad
in
xchg
sbb
aas
test
jg
test
add
dec
outsb
and
adc
fcoms
in
inc
stos
add
mov
dec
add
insb
or
insl
lea
mov
lea
pusha
inc
xchg
mov
add
adcl
stos
std
aam
test
xor
jno
mov
fisttps
xor
dec
xchg
pusha
dec
leave
lock
push
inc
mov
dec
enter
nop
mov
lock
ds
sbb
pop
imul
dec
xor
outsl
and
jae
add
xor
jae
dec
mov
cmp
lret
inc
or
test
mov
lret
sbb
dec
cmp
mov
shlb
or
dec
cmp
ret
sub
movsl
inc
cmp
and
add
push
mov
cmp
aaa
inc
mov
xchg
jmp
sub
adc
add
push
shrl
pop
lret
ja
adcl
and
add
ss
ja
pop
jg
add
add
rcrl
daa
repnz
add
lock
adc
movsbl
into
enter
insl
mov
add
cmp
push
addl
push
pop
add
mov
cwtl
or
xchg
and
cmp
cmp
jp
or
add
inc
xor
add
jne
dec
xor
xor
scas
sub
in
pusha
mov
adc
je
add
fs
sub
push
sub
inc
daa
pop
inc
inc
cmpsl
dec
cmp
lods
and
daa
xor
insb
push
sbb
push
inc
inc
dec
pop
adcb
or
dec
push
adc
and
mov
pop
repz
pop
and
push
and
push
out
in
jo
aaa
pop
adc
xchg
js
nop
or
pop
pop
push
cmp
jnp
pop
sbb
jo
fstl
sbb
adc
ret
incl
add
ds
insb
add
dec
mov
addr16
ret
pop
pop
cmp
adc
sub
or
shr
inc
adcb
aad
sbb
jnp
aad
lods
and
sbbb
mov
dec
adc
ror
or
push
mov
stos
cmp
add
repz
cmp
cmp
pop
pop
and
xchg
repz
testb
in
repz
incl
sbb
lcall
pop
dec
aad
push
in
mov
or
or
add
lret
or
cltd
sub
xor
cmp
outsl
or
xor
dec
inc
xchg
mov
rclb
mov
mov
and
aam
xchg
movsb
fs
add
jge
lahf
mov
pop
movb
pop
fidivs
bnd
in
xor
adc
pushl
push
imul
pusha
repz
mov
xchg
fmuls
add
bound
aaa
push
lds
xchg
lock
pop
dec
das
add
out
cmp
push
dec
mov
cmp
xor
imul
and
xor
xor
lods
dec
cmc
dec
clc
pop
mov
sub
cltd
icebp
dec
add
ja
mov
cmp
pop
inc
jle
pop
or
sbb
in
sbb
notl
gs
lock
or
pop
lcall
jae
cmp
add
inc
adc
scas
jge
negl
xor
pop
push
or
jl
cmp
mov
mov
sub
repz
sbb
push
mov
dec
inc
dec
xchg
andl
hlt
clc
lea
xor
adc
add
insb
addr16
mov
mov
add
push
pop
inc
jl
jb
jne
sarb
add
imul
pop
dec
enter
or
lock
fisubs
pop
lock
or
insb
mov
into
jb
rorb
in
push
push
mov
insb
adc
pop
mov
sbb
lock
andb
rclb
jo
xor
push
sti
push
in
push
ljmp
sarb
xor
inc
push
push
mov
loop
adc
sub
popa
or
sub
scas
inc
into
pop
sub
push
jnp
adc
pop
xor
jecxz
mov
inc
add
ds
xor
packsswb
cwtl
cmp
mov
pop
bound
repnz
sbb
add
adcl
pushl
or
jmp
in
std
xchg
adc
inc
fsubs
sub
sbb
test
jae
inc
push
js
push
pop
sbb
sbbb
ja
movsl
mov
jge
sbb
repz
inc
pop
inc
dec
dec
pop
dec
sub
notb
inc
pusha
dec
aas
sub
aas
dec
adc
inc
and
mov
mov
push
dec
hlt
and
cmp
ret
hlt
push
push
push
lcall
and
aas
in
shr
push
int3
cs
inc
pop
or
rcrb
sbbb
cmp
jo
mov
mov
pop
fadd
or
scas
xchg
sub
or
mov
pusha
pop
negb
sbb
adc
enter
data16
fisubs
jecxz
adc
lods
pop
mov
test
sub
scas
fildl
outsb
inc
inc
jmp
es
mov
adc
inc
jl
mov
xchg
and
push
inc
inc
sbb
xor
jo
movsb
mov
arpl
sbb
xor
orb
jne
push
test
ss
mov
and
lock
mov
sbbl
cmpsb
adc
xor
or
scas
imul
add
repnz
or
movsb
subl
movl
adc
cmp
gs
cltd
sub
and
mov
cmp
je
and
icebp
pop
insl
fwait
jae
adc
and
pusha
inc
iret
arpl
enter
loope
out
cmp
adcb
lock
insl
hlt
mov
sbb
shll
adc
push
inc
sub
mov
xchg
inc
daa
inc
mov
push
sub
push
mov
std
xchg
dec
cmp
jne
jmp
xchg
test
scas
sbb
andb
inc
bound
pushaw
loop
rclb
push
enter
sbb
xor
cmp
and
push
xchg
pop
sti
fstpt
and
mov
insl
dec
cwtl
sub
arpl
popa
sbb
cmc
loope
in
orl
or
sbb
sub
push
rolb
fsubrl
sub
push
mov
pusha
test
sbb
jo
aam
push
pop
nop
or
inc
adc
dec
cli
add
and
cmpl
cmp
pop
and
das
rcrb
jle
and
dec
aad
xchg
xor
fstpl
fmuls
scas
push
faddl
and
xchg
js
push
stos
jmp
and
mov
test
icebp
sub
movsb
add
rol
add
xorl
and
jp
dec
loopne
xchg
or
mov
cs
loopne
xlat
and
sub
mov
sub
mov
lock
push
imull
adc
stos
adc
in
push
mov
or
mov
fisttpll
cmpsl
xor
inc
mov
testb
push
push
sbb
ret
sbb
dec
filds
adc
pop
push
adc
jns
cmp
out
int3
mov
inc
dec
fbstp
dec
xchg
dec
rolb
inc
xchg
iret
and
rolb
daa
mov
add
inc
ss
cmp
popa
sub
fistl
push
dec
xchg
xor
test
or
mov
sbb
jmp
mov
sti
or
mov
mov
jno
shrb
or
je
mov
sbb
inc
fwait
mov
dec
stos
cmp
xor
repz
cmc
push
mov
xor
ret
cmp
inc
dec
add
and
cwtl
mov
cmp
mov
dec
xchg
cmp
xor
xor
push
pop
loopne
xchg
push
lret
cmp
fadd
lret
cmp
cld
inc
decl
jne
scas
loop
mov
push
mov
scas
jl
inc
mov
xor
movsb
mov
pop
xor
xor
add
shlb
add
negl
pop
fnstcw
pop
leave
cmp
or
adc
ja
pop
or
insb
dec
scas
add
movsb
jne
or
push
push
cld
cmp
inc
push
ret
ret
addl
in
fnstcw
test
inc
orl
ja
dec
dec
inc
mov
or
mov
inc
inc
xlat
push
cmp
lods
ljmp
mov
popf
xchg
and
out
out
xorl
jmp
jne
inc
mov
cmp
inc
pusha
rolb
dec
testl
test
aaa
mov
mov
mov
jle
mov
mov
xor
sbb
push
out
test
and
or
sub
pusha
insb
cs
inc
mov
push
rcl
and
sbb
lods
sbb
mov
sub
das
popf
jmp
mov
pop
stc
dec
pop
dec
push
enter
cmp
push
in
outsl
xor
cmp
insb
fs
pop
nop
add
outsl
cmp
mov
inc
rolb
jp
xchg
fxam
mov
mov
sub
in
mov
iret
jne
inc
mov
pop
mov
pop
test
dec
pop
mov
rclb
and
pop
dec
push
les
aam
add
or
dec
inc
xchg
or
addr16
pop
add
sub
imul
jns
outsb
outsl
je
icebp
imul
xor
or
and
fadds
std
insl
arpl
in
or
mov
or
inc
je
xchg
mov
mov
add
aas
test
ja
inc
and
push
and
pop
sub
std
pop
sbb
inc
add
sbbb
into
xor
movl
in
sbb
and
xchg
aam
pop
sub
sub
jno
insl
add
sbb
lret
mov
icebp
pop
cmp
mov
push
add
push
bound
dec
call
mov
leave
xchg
jge
dec
pop
pusha
inc
push
clc
dec
dec
adc
es
inc
mov
inc
mov
jae
jne
adcb
add
outsb
push
bound
mov
jmp
push
loopne
bound
adcb
xchg
test
mov
add
sbb
testb
lds
cmpsl
sub
dec
xchg
movsb
jns
inc
test
mov
mov
les
dec
and
sbb
sbbl
aam
test
push
jl
or
sub
movsb
shlb
sbbb
cmpsb
dec
pop
mov
pop
addr16
int3
adc
int3
cmp
mov
lahf
mov
rolb
pop
outsl
cmpsb
inc
ljmp
mov
lock
inc
add
push
xchg
push
pop
in
aam
add
inc
or
xchg
xchg
add
ja
call
mov
mov
and
sbb
add
inc
xchg
mov
sbbb
and
add
cwtl
mov
sbb
je
sub
jmp
outsl
enter
clc
mov
sub
dec
add
and
hlt
push
cs
sub
jmp
in
add
insl
outsb
popf
fsubrp
mov
add
scas
fiaddl
imul
xchg
loop
sbb
outsl
and
jle
aaa
inc
cmp
fs
daa
mov
xchg
and
and
addr16
dec
dec
adc
or
sbbb
sub
fidivrl
jo
nop
pop
cmp
mov
inc
test
xchg
mov
xor
jb
push
cmpb
xor
aaa
add
xchg
hlt
adc
pusha
cmp
sub
cli
push
dec
push
dec
ss
in
push
sub
inc
outsb
ljmp
inc
test
sbb
test
or
subb
lcall
push
mov
dec
and
and
loop
mov
pop
and
jb
subb
in
daa
mov
xor
mov
and
cmp
test
fdivs
outsb
dec
hlt
jae
push
pop
cmp
adc
rclb
xchg
lcall
arpl
or
xor
rol
pop
add
xor
push
sub
mov
shlb
cmp
icebp
add
push
xchg
aaa
xor
cmp
cmp
adc
add
fidivs
add
lahf
add
adc
sbb
xchg
mov
fwait
cmpl
push
pushf
gs
sarl
cwtl
push
add
xorl
test
or
sar
ss
pusha
loop
movsbl
loopne
mov
or
jne
adc
test
loope
jmp
movsl
movb
cmc
test
cmp
jnp
imulb
ret
fcoms
sbb
lods
ror
mov
psrlq
rcrb
add
lret
xor
and
mov
leave
rclb
lock
ss
jmp
mov
xor
cmp
pop
stos
push
jb
add
jecxz
and
mov
popf
test
pushf
fiaddl
mov
mov
dec
add
cmpl
inc
push
stos
cmpsb
and
xchg
cwtl
prefetchwt1
xchg
add
sub
test
jl
test
sub
or
or
sbb
mov
test
popa
xor
rclb
adc
add
lcall
add
fildl
mov
es
mov
jnp
ja
nop
testb
push
adc
dec
push
dec
adc
or
inc
loopne
fnstcw
sub
bound
sbb
je
push
mov
outsb
ds
xor
and
xlat
mov
call
or
push
xchg
inc
bound
sub
jne
xchg
adc
inc
cmp
xor
inc
test
daa
adc
xchg
inc
jle
push
cwtl
rorb
addl
jnp
test
xchg
loop
insl
mov
mov
jae
inc
and
test
imul
insl
mov
sub
decl
je
xor
adc
push
jge
xchg
movsb
repnz
sbb
and
add
mov
and
rorl
adc
or
std
mov
xorl
ss
popa
sbb
jns
cmp
and
rcrb
inc
adc
xchg
cmp
fisttpll
pop
pop
mov
mov
ja
call
lcall
lcall
ds
xchg
pop
jbe
mov
shlb
incl
nop
sahf
and
and
mov
fists
adc
sub
ss
xchg
and
sub
push
add
pop
sbb
and
mov
cmp
adc
sarl
fsts
addr16
adc
movsb
movsb
lea
loopne
xor
or
scas
stos
int3
inc
xor
je
nop
inc
dec
fs
pop
xor
insl
les
jbe
or
add
cli
jle
xchg
fmull
or
sbb
lods
cmp
push
imul
cmpb
xchg
sbb
fs
add
adc
mov
push
mov
enter
loope
lret
mov
push
add
cltd
adc
in
enter
test
movsb
arpl
or
adc
cmp
rcl
push
insb
jg
push
or
je
or
or
and
sub
cltd
or
call
lret
sub
rcr
mov
rcrl
xlat
cmp
fwait
sbb
dec
js
dec
adc
xchg
into
sti
xchg
mov
pop
pusha
jp
lods
and
or
pop
pusha
inc
xchg
pop
dec
outsl
lods
sbb
add
daa
shlb
inc
addr16
sbb
and
jo
lock
mov
addr16
int3
mov
fldenv
imul
mov
cmp
xchg
into
lea
xchg
insl
xchg
inc
dec
mov
mov
insb
sub
je
lret
popa
loope
orl
add
or
jne
aaa
cmp
movq
or
stc
mov
pop
mov
addb
or
rol
push
pop
cmpb
ficoms
xchg
push
sbb
pop
jle
xor
add
or
xor
pop
mov
mov
pop
pop
sub
sbb
mov
mov
mov
cmp
aas
das
mov
and
loope
test
push
jo
dec
das
and
sbb
mov
add
int3
or
lods
dec
push
lods
test
or
inc
jo
aam
push
mov
mov
push
jge
mov
stos
ret
inc
int3
mov
pop
ss
sti
nop
stos
pop
scas
test
add
inc
jno
dec
test
outsb
xchg
cmp
cmp
call
dec
sbb
stc
bound
add
js
cmpsb
rcr
mov
pop
cmpsl
aad
ret
dec
mov
pop
mov
daa
push
jns
and
push
sbb
mov
push
or
sbb
int3
and
pop
add
push
call
dec
push
movsb
adcl
call
sub
movsb
push
mov
cmpsl
jecxz
test
sub
cmp
inc
pop
pusha
fcomi
pop
faddl
ror
mov
lret
cmpsb
xchg
imul
sbb
fildl
jne
jecxz
adc
add
fisttpl
mov
inc
push
insb
sub
outsb
dec
sbb
add
insb
stc
xchg
es
in
out
mov
dec
adc
cmp
xchg
cmpb
mov
sbb
movsb
sub
mov
out
mov
or
je
loope
cmp
clc
addb
addb
pop
xor
sub
arpl
dec
dec
push
pop
adc
bound
shlb
jo
imul
mov
test
xor
or
sbb
ficoml
and
test
inc
ljmp
pusha
pop
mov
das
mov
loopne
inc
pop
pop
mov
cmp
lret
pop
das
in
shrb
dec
outsl
das
add
cs
imul
movsb
mov
xlat
or
or
in
loop
push
mov
imul
or
fisubs
movsl
sbb
push
fists
jno
mov
mov
jmp
lock
gs
jmp
adc
les
dec
mov
jle
and
imul
cmp
jne
sbb
add
inc
and
ss
xor
pop
inc
je
popa
sub
addb
in
or
mov
and
push
jne
ljmp
hlt
in
rcll
adc
push
in
sub
adc
not
ja
jns
cmp
pop
rol
enter
aaa
dec
test
or
xor
and
sub
cwtl
bound
in
dec
dec
pop
mov
pop
and
or
mov
pop
rorb
fs
and
sbb
cmp
sbb
adc
int
addl
sub
add
or
xor
jo
out
loope
pop
sub
sbb
and
pop
sbb
add
sahf
mov
mov
adc
push
jl
repnz
enter
mov
repnz
enter
cwtl
imul
adc
test
cmp
push
add
jmp
aaa
jne
das
push
mov
add
mov
push
or
xorb
fisubs
daa
loopne
into
repnz
mov
push
stc
add
push
cwtl
sub
cmpsl
sub
cmp
ja
jne
cmp
xor
and
pop
test
gs
pop
pop
sub
mov
cltd
or
imul
pop
js
jp,pn
add
inc
cmp
xor
sub
jle
sti
dec
loopne
xchg
out
mov
xchg
pusha
les
ret
loopne
cmp
test
test
mov
addl
dec
inc
lcall
or
mov
clc
pop
test
push
fstpl
add
and
test
jl
sbb
pop
cmp
pop
and
stos
mov
movl
push
ret
movsb
loope
push
popa
xor
mov
dec
cs
pop
rcrl
test
cmc
orl
sbb
xchg
lea
mov
or
out
and
idivb
xor
xchg
popf
lea
rclb
xorb
and
or
add
loop
std
push
call
add
sbb
sbb
std
test
mov
push
cmpb
jnp
dec
cmp
adc
xchg
int3
test
or
jmp
or
cmp
js
fdivr
push
xor
loop
pop
push
lret
js
jmp
sbb
pop
fs
adc
ret
mov
loope
std
leave
inc
add
xor
ljmp
sbb
sub
add
pop
cmp
push
pop
daa
fisubrl
push
pop
in
cmp
ja
outsb
inc
xchg
ja
xchg
lret
ja
test
push
jb
outsb
dec
xchg
pop
add
push
insb
jo
enter
inc
int3
fdiv
int
daa
pop
or
adc
or
sbb
dec
pop
sbb
push
sub
insb
aas
inc
aas
sbb
mov
xor
nop
dec
decl
lret
inc
dec
rclb
out
fwait
sub
fisubrs
dec
sbb
mov
sarb
mov
or
adc
movsb
test
jle
out
orl
pop
ficomps
roll
ss
popf
ret
dec
xchg
das
sub
jno
dec
jl
dec
dec
shl
cmp
rcrl
push
xor
loopne
sbb
mov
push
out
cmpsb
nop
in
outsl
data16
or
inc
loop
sbbb
pop
and
jae
mov
lea
imul
or
xor
adc
mov
shlb
and
callw
mov
orb
dec
jle
xchg
inc
add
mov
and
sbb
ret
data16
add
adc
add
popa
xchg
or
adc
push
xor
push
or
push
stc
adc
pop
jp
jp
cli
mov
pop
inc
int3
push
mov
or
js
inc
or
and
cmpsl
imul
mov
cmp
mov
cltd
mov
xor
jge
sub
scas
xor
bound
movsl
stos
shrb
or
jle
sbb
adc
inc
popa
cmpsb
ds
and
cmpb
sub
call
fisttpl
mov
sbb
adc
mull
add
or
sub
or
mov
jl
sbb
mov
in
xlat
rcrl
mov
pop
or
add
out
lods
dec
jp
je
dec
jbe
inc
loope
jns,pn
aaa
js
rolb
adc
bound
fildll
imul
jp
addl
sahf
addl
cmp
xor
inc
aam
pop
add
sbb
add
xlat
enter
mov
sub
jmp
fsubs
jns
inc
sub
dec
sarb
jge
popf
les
mov
sbb
loop
loope
cmp
roll
je
lret
rcl
popa
out
repnz
aam
fcoml
lods
xor
loopne
aaa
push
lods
jmp
adc
adc
out
dec
sarb
andl
stos
ja
jmp
push
add
mov
and
sbb
mov
sbb
or
scas
or
and
call
and
insl
pop
mov
xor
negb
aaa
fbld
stc
stc
rolb
aad
pop
add
or
sbb
add
jmp
out
push
sbb
aam
mov
cwtl
vmwrite
pop
mov
imul
jp
jne
adc
les
in
xor
add
int3
test
loope
sbb
adc
jns
jmp
fs
mov
sub
rcll
repnz
or
enter
pop
mov
cmpb
or
adc
cmp
xchg
outsb
inc
clc
mov
add
xor
add
sbb
lock
pop
pop
cmp
pop
or
mov
mov
in
jbe
je
xor
add
sub
popa
add
repnz
add
inc
and
rcrl
add
int
cmc
in
xor
add
stos
cmpsl
and
mov
or
jnp
aam
xor
movsb
out
add
sub
jp
in
mov
adc
ret
or
cmp
add
jl
add
mov
mov
mov
xchg
es
mov
xchg
pop
lea
xor
xchg
mov
gs
xor
nop
inc
xchg
sbb
int
dec
xchg
xchg
cmp
fnsave
sub
push
in
jb
lret
inc
fisttpll
add
push
scas
xor
push
mov
nop
inc
and
add
test
ja
clc
add
dec
sarb
mov
sub
decl
in
addl
in
aam
inc
lea
mov
sbb
inc
sbb
leave
mov
inc
sbb
ret
cmp
lahf
add
mov
sbb
pop
shr
aaa
adc
add
sub
aam
iret
lahf
sub
dec
xchg
cmpl
ja
push
add
mov
scas
push
pop
sbb
ret
in
ja
add
push
mov
push
jb
jp
pop
add
jne
mov
cmpsl
add
shlb
adc
and
loop
and
adc
sub
xor
xchg
mov
test
enter
push
adc
sbb
loopne
lock
jo
mov
jns
mov
add
ds
das
dec
push
pop
pop
jmp
and
sti
pushf
cmpl
adc
or
or
push
or
or
dec
pusha
loop
adc
dec
and
inc
cld
or
fwait
mov
dec
or
sbb
add
out
mov
cmpsb
pop
adc
iret
mov
test
add
sbb
adc
or
das
add
adc
daa
dec
and
and
add
dec
adc
enter
cmp
jne
push
or
xor
jp
mov
test
or
push
cmc
sub
hlt
dec
cmp
dec
or
and
les
gs
mov
popa
and
movl
andl
test
xor
pop
test
fwait
and
pop
xchg
add
and
stos
arpl
repz
adc
and
adcl
imul
lret
je
xchg
stos
cmpl
sub
ljmp
push
jbe
or
xor
adc
or
mov
rol
cwtl
sub
or
adc
leave
rcrb
dec
mov
and
sbb
cltd
add
imul
pop
push
test
pop
shlb
lock
push
mov
pushf
imul
mov
cmpb
mov
mov
ja
add
xor
insl
sarl
imul
jo
loope
incb
fdivl
jmp
in
jmp
ficompl
mov
inc
inc
sub
nop
push
movsb
insb
insb
inc
ret
adc
adc
sub
mov
roll
pop
cld
dec
jae
and
sar
or
mov
jl
push
xchg
insb
xchg
lret
cmpsl
jle
jg
xchg
orb
loop
mov
les
dec
das
jecxz
adc
sub
lds
jle
mov
rorb
add
mov
sub
sbb
push
je
fdivl
sub
mov
or
scas
or
sbb
add
pop
fmull
ss
or
sbb
jp
add
rol
hlt
mov
mov
xchg
jmp
xor
mov
repnz
sub
adc
mov
fistps
popw
mov
adc
mov
lods
xlat
loopne
pusha
sub
or
fistl
fcoms
or
mov
mov
push
movsb
lock
mov
pusha
pop
stc
in
fstpt
push
pop
jg
iret
and
push
add
fstpl
cmp
rsm
and
cmp
fmull
jbe
jbe
insb
fisttpll
pop
imul
mov
sub
in
or
sub
clc
inc
testb
cmp
pop
loop
mov
xor
outsl
test
push
adc
jbe
pop
insl
push
or
push
adc
leave
pop
lea
cmp
sub
mov
sub
push
sbb
adc
push
mov
inc
xor
adc
dec
in
loope
inc
push
movsb
pusha
add
xor
in
mov
rorb
ljmp
mov
imul
sub
daa
loop
ds
push
mov
pushf
lcall
cmovnp
adc
push
imul
fxch
cmpsl
insl
movsb
push
nop
xchg
test
push
cmp
rcrb
mov
cmp
mov
sub
inc
add
dec
mov
sub
jnp
mov
add
daa
sub
sub
adc
int
je
mov
jo
dec
jl
sub
xor
jmp
dec
cmp
jo
inc
push
adc
and
xchg
out
add
stos
mov
pop
movb
outsl
jb
aaa
dec
and
fmull
mov
xchg
aam
addr16
orl
dec
bound
adc
mov
cmp
mov
adc
inc
fcoms
js
jl
sub
inc
push
outsb
xor
sbb
push
add
dec
std
pop
push
push
jbe
imul
cmp
inc
inc
dec
enter
jb
arpl
xor
pusha
ret
jb
test
bound
mov
fiaddl
sbb
cmc
cmp
aam
ficomps
push
jmp
jmp
cmp
loop
push
rorb
test
outsb
push
ds
adc
mov
rorb
add
movsl
cmp
ss
testb
test
or
nop
sub
mov
bound
xor
sub
je
nop
sub
jae
and
adc
test
cmp
imul
rcll
mov
lret
fwait
inc
fsubl
adcl
push
test
sbb
lods
pop
fsubrs
push
mov
and
test
es
jmp
push
or
add
add
cmp
cld
mov
out
and
xchg
and
inc
ds
and
sbb
decb
lods
jmp
mov
or
and
call
outsl
pushf
icebp
orl
and
mov
adc
add
mov
mov
pop
push
fwait
push
add
cwtl
and
push
fbld
popa
popf
jb
or
xor
lods
sbb
mov
stos
gs
dec
les
pop
mov
add
push
je
cli
pop
pop
movsb
and
mov
cmpsl
xchg
xlat
stc
push
arpl
testb
adc
aam
mov
idivb
xchg
mov
sahf
and
cld
invd
mov
add
sbb
addb
pop
sbb
fcomps
xlat
push
aad
inc
adc
cmp
push
xchg
dec
dec
xor
mov
or
loopne
mov
lock
shll
pop
in
cmovo
in
add
mov
pop
push
lds
adc
xor
sbb
mov
mov
sub
xor
pusha
lods
bound
and
add
cld
sbb
bound
addr16
mulb
xchg
loopne
push
sbb
lods
push
sub
adc
loopne
push
cmp
jo
outsb
mov
or
ds
xorb
adc
loopne
pusha
mov
enter
dec
aaa
movsl
int
and
adc
xor
mov
inc
and
mov
ret
inc
imul
out
movsl
fcmovu
dec
lahf
lock
ret
aam
imul
shl
sub
or
mov
inc
enter
test
cmp
lock
pop
lret
xor
and
xor
jne
adc
push
incl
les
inc
loopne
xchg
outsb
out
dec
add
lret
roll
ja
shlb
add
jno
lods
sub
lcall
test
aas
test
andb
pusha
push
cwtl
or
roll
mov
scas
xor
inc
pop
dec
inc
das
cmp
pop
fimuls
nop
dec
jb
pushf
mov
fnstenv
andl
push
pop
sbb
push
cmpsb
pop
pop
and
call
add
imul
aas
and
jge
pop
cmpl
inc
insl
sbb
cmp
orb
mov
je
mov
shrb
leave
jnp
cli
adc
jge
jle
xchg
push
jo
xchg
loopne
call
movsb
clc
mov
mov
push
pop
sbb
iret
inc
lahf
sbb
xchg
xorb
out
xlat
adc
ret
push
sub
sarl
inc
dec
sub
sbb
movsb
nopl
add
sbb
inc
mov
mov
inc
lcall
outsb
mov
add
inc
pop
xor
je
sbb
inc
push
ret
popa
add
jg
or
sub
mov
orl
subl
test
jo
int
cmp
push
mov
inc
jl
into
xchg
dec
push
addr16
sahf
mov
sbbl
sbb
and
cmpsl
sahf
and
cs
add
sbb
sbb
inc
pop
enter
pop
dec
jnp
xchg
imul
xor
das
jg
fldcw
mov
test
js
test
scas
inc
shrb
cmpsl
dec
add
cmp
pop
inc
mov
inc
jl
je
mov
cmpsb
daa
cmp
mov
mov
and
les
shrl
nop
mov
mov
add
and
mov
std
sub
std
mov
mov
cmpb
jno
imul
xchg
fwait
orl
enter
mov
sub
add
sub
addb
pop
js
cmp
dec
add
adc
arpl
adc
clc
test
cmpl
mov
push
stos
insb
add
mov
adc
sahf
inc
xchg
insb
inc
xchg
hlt
jp
lock
leave
inc
xchg
out
pushf
dec
dec
or
dec
dec
lret
or
rcl
rcl
call
add
test
mov
sbb
pop
or
add
pop
jbe
inc
jl
sub
lahf
push
mov
bound
pusha
inc
dec
jb
xor
imul
adc
adc
imul
inc
jg
pop
inc
adc
xchg
pop
lcall
or
pop
jo
insl
dec
push
popf
jmp
iret
hlt
shlb
testb
xchg
sahf
xchg
sahf
out
add
insl
lock
test
ficoml
or
mov
push
insl
push
sub
call
aas
or
sbb
mov
mov
jg
je
mov
std
jmp
push
push
push
or
sbb
roll
xchg
sub
pop
stc
jb
rolb
pop
fs
out
cmp
xchg
xorb
into
pushf
adc
pushf
cwtl
inc
imul
adc
push
adc
orb
xchg
stos
and
insb
std
repnz
adc
lea
dec
push
dec
icebp
int3
lea
mov
pop
aad
add
push
pop
lods
add
jge
push
test
mov
push
sub
pop
sub
inc
out
jnp
mov
pop
pop
mov
jns
mov
mov
fisubrl
add
and
dec
or
lods
push
mov
xchg
cmp
fdivs
add
sub
and
push
clc
inc
jecxz
mov
push
xorl
add
shrl
xchg
or
mul
jp,pn
aas
sub
sbb
sbb
sbb
call
add
or
lret
lret
mov
scas
loopne
adc
test
mov
add
and
cltd
or
pop
lods
mov
popf
jo
cmp
nop
subb
mov
leave
inc
xor
in
out
sbb
test
mov
shrl
mov
in
sbb
dec
pop
and
leave
js
and
ficompl
dec
adc
test
mov
mov
or
jo
subl
xchg
aas
cmc
sub
movsl
push
mov
adc
xor
rolb
sub
ljmp
shrb
sbb
hlt
stos
pop
cmp
aas
hlt
xor
xchg
jmp
jmp
lods
cmp
and
mov
pop
int
cld
add
cmp
pop
add
loop
add
hlt
les
stc
inc
test
mov
je
movsl
nop
in
pop
popa
movsb
out
repnz
or
test
mov
inc
dec
mov
mov
loop
dec
cmpxchg
xor
and
jmp
das
nop
mov
push
orb
in
in
push
or
or
adc
inc
fnstenv
loope
xchg
cld
adc
cmp
xchg
mov
mov
cmpb
mov
rclb
lods
sbb
popf
pop
ja
push
fisttps
popa
rcll
dec
lahf
ss
fbld
jo
add
es
outsl
cltd
push
shrl
orl
mov
mov
push
add
pop
std
mov
pusha
pop
icebp
or
mov
xor
mov
in
sbb
popa
pop
mov
mov
and
ret
mov
iret
pop
mov
mov
and
sbb
cmp
adc
lret
pop
fwait
sbb
loopne
fdivrs
and
cmpsl
mov
push
arpl
fisttpl
push
in
mov
adc
scas
dec
pop
pop
pop
ljmp
xor
mov
push
fs
int3
cmp
popa
mov
adc
mov
mov
ret
cmpsl
xor
push
mov
adc
inc
push
dec
popa
add
sub
sub
ret
xor
mov
cmp
or
xor
xor
aad
cmp
and
mov
lods
sbb
das
inc
dec
cmp
add
je
cmp
jg
adc
sbb
xchg
jo
mov
adc
or
push
dec
or
leave
adc
cmp
xor
mov
mov
add
add
mov
dec
push
jnp
stos
fs
inc
cmp
inc
sub
nop
xor
jp
aaa
xor
xchg
xor
out
and
inc
push
jg
dec
enter
out
es
in
fwait
cmpb
pop
mov
ds
xor
mov
lcall
xor
sbb
or
xchg
mov
push
push
lret
int3
xchg
and
rorl
data16
add
xor
pop
rcrl
data16
push
cmp
mov
std
mov
cmp
jbe
xor
je
jnp
mov
jne
cltd
push
inc
xor
adc
and
das
push
dec
inc
inc
inc
dec
and
or
call
jo
inc
inc
inc
je
jl
adcb
or
ja
xchg
enter
dec
mov
in
jl
adc
insl
aam
sub
pushf
or
add
add
add
cmp
inc
out
nop
inc
mov
mov
sub
sbb
add
or
dec
les
or
sub
sbb
xchg
and
popf
notl
add
cmp
mov
sub
mov
mov
add
lods
sub
loopne
ret
lods
js
popf
or
add
jb
pop
and
adc
ret
sub
subb
lret
les
or
sub
and
nop
push
sub
adc
mov
mov
mov
jmp
add
loopne
int
or
out
pop
pop
roll
cmp
jne
sbb
shr
mov
adc
and
or
xlat
and
clc
mov
push
sub
inc
adc
iret
lea
sub
cmp
popl
push
adc
loop
or
and
jne
aas
jge
rcrb
jl
cmp
je
nop
in
cmpsb
and
adc
daa
mov
push
adcl
xor
sbb
and
lea
mov
cltd
mov
mov
inc
scas
les
loope
sub
cmc
lcall
les
xor
and
test
and
cmp
aad
dec
mov
bound
js
dec
aaa
push
inc
add
and
stos
add
or
cmpl
xchg
test
or
mov
or
mov
test
out
add
dec
dec
fs
dec
sbb
pop
leave
sbb
int3
dec
das
sbb
jno
xchg
fwait
cmpsl
jecxz
lea
aam
std
add
push
sbb
addr16
aaa
inc
mov
mov
push
dec
xor
les
and
lea
clc
or
seta
mov
daa
movsl
arpl
mov
lea
push
daa
stos
jle
out
xor
lods
and
cs
sub
mov
enter
sbb
movsb
lahf
cwtl
enter
movsl
orb
fdivl
sbb
jge
movsb
cmpl
or
fistl
orb
push
pop
inc
pop
lods
cwtl
lret
ret
addb
jmp
push
add
enter
jmp
shrb
mov
shlb
inc
or
push
orl
add
adc
js
add
pop
rcl
dec
imul
mov
push
dec
sub
jo
js
ret
and
sbb
mov
mov
inc
stos
push
jmp
push
ja
cmp
mov
xor
sbb
jge
mov
xor
ljmp
mov
inc
cmp
jmp
and
adc
js
add
and
loop
cmp
sti
sbbb
or
xor
pop
adc
inc
pop
je
push
sub
or
xor
pop
pop
sub
inc
jecxz
jmp
or
adc
add
shrb
mov
mov
and
mov
mov
addr16
jecxz
test
adc
test
and
sbb
es
sbb
or
or
inc
mov
inc
jne
int3
adc
xor
in
push
aam
xchg
outsl
cltd
adc
xorl
pop
inc
in
cmp
push
xchg
cmp
inc
xor
or
or
adc
scas
and
lret
sbb
and
or
push
xchg
loopne
jb
xchg
or
out
mov
mov
push
shll
mov
and
aaa
in
mov
mov
push
pop
shlb
and
or
add
insb
and
test
test
adc
test
inc
lock
mov
mov
sbb
popf
push
pop
xchg
divb
testl
xchg
adc
jne
cmpl
std
enter
insl
or
xchg
scas
cld
ja
mov
cld
pop
test
enter
adc
test
dec
or
addb
pop
cmp
push
into
pop
adc
add
test
add
jb
and
sbb
imul
sub
adc
rcrb
add
mov
xlat
push
dec
cmp
rclb
pop
pop
js
inc
sti
xchg
hlt
inc
jmp
xchg
pop
popf
ret
add
leave
mov
add
aad
imull
mov
cli
push
jae
cmp
and
mov
shr
add
cmpb
or
ljmp
jae
cmp
jae
inc
cmp
lcall
fmul
nop
or
lret
mov
ljmp
lods
push
adc
fdivrl
imul
nop
adc
mov
test
mov
mov
addb
shlb
lods
or
cmc
cld
mov
shl
popf
push
mov
jg
test
cwtl
rol
add
sahf
stos
mov
xchg
sub
gs
das
pop
mov
cmp
inc
pop
enter
or
jg
push
jecxz
in
or
cmpsl
jns
sub
cmp
xchg
and
les
sbb
cmp
popa
pop
push
mov
movsb
jecxz
add
aaa
dec
jne
negb
jmp
xor
aaa
fistpl
inc
test
mov
jg
add
xor
add
icebp
das
sub
inc
and
imul
xchg
cmp
push
decl
out
add
aam
mov
out
lock
sub
xchg
push
push
movsb
add
mov
push
xor
push
cmp
jb
or
leave
dec
lret
mov
mov
push
add
ret
fbstp
and
push
je
xorb
stos
or
mov
and
push
add
insl
roll
mov
sub
xor
out
push
jns
test
orl
jp
push
pop
inc
daa
popa
daa
inc
sub
push
test
push
or
xor
ljmp
xchg
ret
lock
arpl
mov
sub
shlb
push
scas
dec
lods
jge
loop
aam
jge
call
adc
mul
les
jno
movsb
ficoms
mov
and
dec
add
mov
clc
data16
cmp
aaa
mov
in
inc
jae
mov
or
mov
and
or
pusha
fwait
cmpsb
cmp
in
pop
dec
mov
lock
mov
mov
or
mov
ljmp
push
loop
mov
dec
aas
lods
inc
and
and
sub
js
sarb
and
insl
ret
pusha
cmp
les
int
adc
dec
js
lea
dec
mov
sbbl
aas
lcall
or
add
add
mov
or
loopne
clc
or
fists
dec
daa
adc
shlb
mov
stc
movsl
je
add
add
mov
or
icebp
orb
add
xchg
push
push
orl
lahf
mov
lods
push
lahf
adc
push
mov
in
xchg
xor
pusha
push
sub
add
xor
inc
lcall
cmp
cmpl
movsl
jmp
and
push
push
inc
addr16
outsl
push
test
adc
add
cmp
add
test
add
stos
push
dec
pop
jb
or
mov
or
adc
sub
jno
fldl
pop
dec
adc
mov
xor
xchg
inc
inc
cmpsl
lea
insb
sbbl
call
or
push
cmp
shlb
pop
xchg
pop
and
xor
adc
push
mov
test
mov
xchg
enter
xor
inc
fiaddl
call
jns
xor
push
sub
jne
or
movsl
pop
mov
dec
pop
sub
sahf
or
ds
mov
or
movsb
or
fcoms
xchg
sub
jne
push
mov
pop
and
push
push
mov
cmp
jge
adc
mov
xorb
sub
push
or
pusha
jb
inc
mov
test
sbb
ljmp
adc
mov
push
and
fwait
shlb
or
and
and
scas
es
aam
xor
mov
mov
or
jle
add
and
push
jns
int
push
clc
inc
inc
mov
mov
stc
insl
jno
dec
shrb
das
cs
xchg
fmuls
pop
cmp
sub
test
add
outsb
sbb
shll
dec
inc
popf
ret
es
add
and
shlb
inc
daa
cwtl
ja
inc
pop
fidivl
sub
mov
push
scas
lock
rcr
pop
pop
mov
inc
or
xchg
inc
or
js
jg
cs
imul
subb
xchg
sbb
xchg
pop
idiv
sbb
mov
or
add
shrl
out
xchg
xchg
jg
xchg
xor
pop
pop
mov
add
jno
sbb
mov
movb
ljmp
or
fsub
sub
inc
xchg
mov
daa
mov
mov
movsb
push
negb
add
pop
iret
jb
lea
sub
aam
fs
test
cmp
inc
mov
das
leave
enter
or
inc
sbb
pop
push
push
mov
incl
mov
pop
jns
xor
pop
or
or
push
adcl
fwait
cmp
mov
cmp
inc
fadds
in
inc
rcll
inc
ficomps
lcall
inc
enter
or
or
jg
int3
xchg
idivl
lcall
mov
add
shlb
jbe
dec
test
push
inc
loopne
test
out
js
inc
push
enter
push
mov
dec
adc
dec
fnstenv
push
movb
pop
inc
cld
dec
cmpsl
cli
pcmpeqd
mov
iret
mov
out
aaa
js
mov
jae
adc
or
fsubrs
iret
add
call
xor
adc
ljmp
or
repz
sub
gs
push
add
inc
adc
clc
or
testb
pop
jg
cmp
inc
xchg
pushf
dec
jb
cmp
xor
orb
pop
or
scas
std
dec
add
adc
dec
mov
inc
sbbl
xchg
in
sub
rorb
sbb
insb
xchg
sbb
cmovbe
push
enter
adc
shlb
mov
xchg
sub
test
or
sbb
ss
sub
fimull
subb
add
pusha
sbb
orb
jne
outsb
add
and
lods
add
pusha
sbb
cmpsb
or
add
add
inc
fwait
add
jmp
sbb
mov
cmp
pop
xor
sbb
pop
nop
addr16
add
pop
out
test
cmp
adc
pop
add
hlt
sbb
adc
push
in
in
insl
push
xchg
jae
lret
insl
cmp
imul
das
movsb
add
jge
sbb
repnz
add
dec
mov
push
jecxz
insb
jno
jmp
arpl
sbbb
ret
stc
je
or
iret
stos
mov
sub
lcall
or
lock
sub
ss
adc
adc
test
adc
sbb
adc
pop
jmp
xor
test
dec
repnz
pop
mov
andb
xor
push
mov
inc
ds
xor
aaa
cmp
xor
jbe
or
hlt
inc
loope
aas
jae
fidivl
push
nop
xor
push
and
and
adc
cmp
push
mov
xchg
pop
sbb
jge
push
sbb
push
shll
in
jo
popa
je
out
mov
mov
inc
dec
push
test
pop
gs
lods
dec
mov
imul
xadd
ucomiss
xor
mov
xor
popa
jb
clc
rclb
insb
pop
xor
sbb
andl
sub
lock
fwait
je
jae
or
adc
inc
xchg
aad
les
jb
pushf
mov
push
orb
mulb
inc
bound
pop
cmp
jl
adc
xor
jae
dec
outsl
or
and
sbb
sbb
sbb
push
mov
shlb
mov
fcmovb
push
daa
loope
or
fimuls
mov
shlb
sahf
nop
and
add
mov
push
xor
add
testl
inc
or
dec
inc
add
insb
inc
pop
pop
push
jne
dec
dec
sbb
iret
push
inc
dec
pop
dec
dec
or
inc
pop
cmp
dec
inc
push
cmp
inc
mov
idiv
inc
inc
inc
add
cmpsl
dec
inc
inc
mov
pop
inc
or
pop
or
pop
insb
repnz
or
dec
push
lds
inc
lock
push
push
dec
sti
push
repnz
push
or
js
push
pop
sbb
mov
push
jb
ss
mov
or
xor
or
adc
mov
push
adc
pop
rcll
jbe
jl
xchg
push
jae
sub
test
pop
mov
pop
mov
cld
add
insl
jg
insb
ja
jns
or
dec
testb
mov
cmpsl
insl
call
mov
cmp
stc
incl
cmp
cmp
adc
xchg
popa
adc
add
cmp
add
push
sub
and
arpl
xor
or
cmp
or
pop
movsl
cmpb
jo
ss
cmp
dec
roll
cmp
ja
test
or
cmp
jecxz
sub
mov
inc
popa
fs
adc
pop
jne
setbe
dec
adc
rorb
pop
pop
fsts
sub
cld
cmp
mov
stos
mov
pop
sub
dec
push
addr16
lcall
arpl
and
sub
add
push
dec
add
or
xor
jp
jae
or
dec
add
or
out
ja
adc
arpl
push
dec
cmp
pop
pop
adc
jmp
sub
cwtl
cmpsb
dec
in
dec
add
jmp
rcl
mov
add
dec
or
mov
pop
and
mov
mov
or
fcoms
hlt
adc
jns
or
mov
pop
mov
loopne
sub
ja
push
inc
add
pusha
scas
jge
mov
inc
inc
adc
mov
cmp
cmc
xor
inc
adc
inc
and
mov
fdivs
mov
movl
add
daa
ljmp
addl
and
adc
ja
es
inc
mov
sub
repnz
xor
sub
push
or
rolb
and
scas
mov
fsubrl
int3
xor
data16
mov
insl
enter
cmp
loope
dec
add
faddl
push
dec
movsb
xchg
push
lcall
mov
or
push
hlt
adc
inc
cmpsl
sarb
mov
mov
mov
xor
divl
outsb
adc
insl
inc
roll
test
pop
roll
add
add
and
aam
aam
mov
xlat
pop
outsl
jbe
and
and
dec
jae
insb
sbb
inc
jno
adc
or
jo
ror
ret
sbb
push
cmp
pusha
dec
adc
mov
or
fstl
mov
sbb
sbb
xchg
out
cmp
dec
jno
jbe
push
and
ss
mov
or
popf
testl
out
or
out
mov
xchg
mov
mov
jo
add
lock
cmp
jno
outsl
cmpsl
in
rclb
mov
inc
daa
add
xor
loopne
pop
and
stos
pop
fwait
jecxz
clc
mov
or
push
pop
push
mul
add
movsl
add
push
popa
out
adc
inc
jbe
fistl
enter
adc
inc
or
jne
lcall
popa
testb
nop
mov
rcrb
loope
xchg
or
dec
sbb
jns
scas
adc
fisttps
adc
fs
and
cmpl
and
adc
jae
popa
inc
test
scas
jmp
push
ret
mov
adc
xchg
dec
inc
imul
jo
sarb
test
add
cld
fsts
mul
or
sahf
push
push
pop
or
push
adc
push
jne
adc
and
popa
or
cwtl
jo
nop
mov
jl
daa
push
xor
sbb
inc
mov
cmp
dec
add
inc
push
fadd
shrb
in
fistpll
add
mov
mov
sbb
lret
sbb
out
aas
pushf
jge
ret
mov
rorb
rclb
test
mov
lds
ret
mov
es
ror
andb
cmp
push
push
mov
adc
inc
push
and
rcrl
pop
push
mov
scas
sbb
push
dec
roll
bswap
cmp
les
je
mov
imul
insl
mov
cmp
jmp
test
pop
jge
arpl
fs
add
mov
movsb
ds
repnz
xchg
cmpsl
je
inc
daa
xor
nop
cld
cwtl
popf
jo
out
sub
addr16
add
add
outsb
push
daa
je
js
les
aaa
and
cmp
test
inc
sub
mov
cmpsl
pop
testl
orb
js
mov
and
ja
pop
das
adc
xchg
xlat
cmp
into
out
pop
sub
sub
testl
aaa
out
pop
and
addb
dec
xor
inc
fsubl
inc
loope
add
orb
addr16
leave
test
cmpsb
leave
test
dec
or
out
adc
aaa
sub
cwtl
orb
push
push
sti
mov
add
inc
add
xchg
sub
push
push
dec
mov
pop
lods
inc
imul
cmp
sub
in
mov
loope
dec
lcall
out
dec
loop
or
or
mov
test
mov
imul
xor
add
and
sbbl
roll
nop
or
jnp
cwtl
movsb
ret
jno
push
shll
pop
or
fisttpll
pop
inc
jb
inc
insb
inc
xchg
xchg
dec
fnop
fidivl
xchg
test
outsl
inc
movb
dec
jg
das
dec
gs
mov
mov
outsl
leave
inc
rcrb
rsqrtps
nop
adc
fsub
test
inc
mov
inc
sbb
push
cmp
pop
adc
movsb
lock
dec
repz
addb
in
pop
adc
out
in
test
out
mov
and
xchg
sub
adc
lret
lahf
cmp
fmuls
cmp
adc
or
cmp
fimuls
js
cmp
mov
inc
dec
inc
fcoml
dec
fwait
mov
push
test
xorl
or
ljmp
xor
and
sbb
repz
daa
int
loopne
in
das
mov
mov
xchg
xor
aaa
pop
sbb
mov
ficomps
sub
and
out
sub
loope
dec
movsb
les
pop
pop
push
xor
adc
cmp
inc
test
push
cltd
and
xor
pusha
mov
and
pop
in
dec
mov
and
and
mov
push
cmc
movsb
adc
stc
jp
push
adc
xchg
test
sub
dec
popa
inc
popa
dec
cmpsb
repnz
jge
dec
cmpsb
and
stos
and
sub
pop
sbbl
out
cmpsl
cmpsl
es
jecxz
insb
bound
adc
ljmp
inc
add
push
pop
sub
inc
add
dec
push
aaa
push
sub
mov
sbb
mov
dec
dec
add
mov
push
fstpl
cmpsb
inc
outsl
add
dec
rorl
test
inc
and
ret
enter
mov
mov
or
inc
inc
ficomps
out
mov
test
cmpsl
xor
fs
adc
insl
add
cmp
xchg
xor
test
inc
and
or
inc
nop
xor
loopne
mov
xor
mov
cmpsb
loope
ret
xor
aas
andb
fiadds
lds
test
sub
cli
flds
hlt
dec
test
inc
mov
ljmp
sbb
pop
xor
adc
mov
xor
popf
nop
push
push
adc
aam
xchg
adc
fwait
andl
fiadds
dec
je
cmp
cmp
cld
int3
testl
adc
inc
imul
lock
popa
shll
out
pop
test
fwait
or
call
dec
lods
mov
flds
aam
ds
cld
fsubs
jl
sub
enter
clc
cmpsl
lahf
dec
pop
xor
cmp
push
inc
jae
imul
inc
sub
cmc
or
clc
mov
repnz
sub
cmpsb
ficompl
adc
int
add
sbb
jnp
jge
mov
and
pop
adc
and
add
lret
sbb
mov
sar
inc
and
pop
adc
pxor
insl
push
push
std
pop
sarl
lods
cmpsb
mov
add
mov
xor
mov
nop
push
cmc
popf
and
icebp
mov
inc
bound
add
xor
mov
outsl
stos
outsl
cmp
pop
dec
mov
add
pop
or
addl
sbb
add
add
add
sub
cmp
or
orl
outsb
or
inc
iret
cwtl
ss
loopne
sub
insl
and
sbb
xor
and
add
adc
popa
xchg
jns
add
das
push
dec
lea
and
int
mov
out
das
push
add
pop
and
add
sub
cld
clc
cmpb
cli
push
push
xchg
sub
jns
insl
imul
mov
stos
jge
outsl
mov
jo
jl
aas
push
dec
sbb
incl
fidivl
inc
sbb
cmp
xor
or
inc
popl
jl
flds
popa
cmp
lret
js
ret
cmc
sub
push
testb
push
or
mov
dec
add
aaa
inc
add
xor
dec
fcmovb
add
push
sbb
xchg
xor
cmpl
in
sub
subl
pop
push
inc
inc
inc
nop
aas
in
inc
sahf
dec
dec
push
push
mov
pop
pusha
inc
sahf
sub
fs
mov
pusha
inc
cwtl
inc
xchg
dec
jns
adc
invd
or
nop
out
adc
sbb
or
addb
sbb
xor
adc
and
nop
xchg
or
adc
xchg
sub
and
or
ds
push
adc
repnz
dec
cmp
xor
dec
xorb
imul
dec
das
daa
inc
in
and
dec
inc
imul
cmpsb
data16
pop
push
sbb
mov
outsl
push
notl
dec
pop
outsb
pop
xor
stc
fs
pop
add
loope
inc
or
jno
mov
into
push
fisubs
inc
js
frstor
jo
sub
clc
inc
jo
lea
mov
and
mov
scas
and
pop
or
inc
xchg
mov
mov
repnz
loope
insb
sub
and
xor
sbb
gs
syscall
adc
inc
sbb
sti
xor
leave
in
sarb
aas
add
add
je
xchg
fcompl
mov
jmp
push
jnp
addr16
sbb
lods
adc
lock
xchg
cmp
dec
loop
xor
adcb
dec
pop
lds
dec
dec
nop
jbe
add
stos
es
xorl
loope
jle
jmp
jl
pop
rcll
orb
and
mov
inc
xchg
push
mov
rorl
push
nop
or
in
lahf
or
or
adc
jmp
dec
cmp
xchg
xchg
push
xor
pop
popa
fwait
jecxz
nop
shll
inc
and
pop
inc
test
stos
ret
or
mov
repz
mov
push
sub
fadds
inc
lret
inc
mov
es
inc
cmova
xchg
xchg
or
push
sbb
pop
mov
pusha
fs
es
xchg
push
lods
xor
dec
enter
xchg
push
daa
or
adc
or
adc
xchg
mov
andb
test
fistps
xchg
xchg
mov
and
push
mov
icebp
dec
jb
sbb
nop
xchg
cwtl
inc
jo
sbb
test
lods
xchg
mov
sub
mov
inc
xor
pop
push
xchg
cmp
mov
fst
pop
mov
jnp
cmp
arpl
out
sub
xor
test
pop
mov
and
fbld
call
outsb
sbb
sub
gs
sub
aaa
cmpsl
push
xor
xor
xchg
push
rclb
gs
adc
xor
roll
push
sbb
mov
push
add
xor
pop
mov
lds
sbb
push
pushf
xchg
and
xchg
movsl
dec
add
add
pop
pop
push
cwtl
shr
mov
imul
and
in
push
jmp
xor
sub
lahf
dec
add
sbbb
cwtl
in
in
testb
mov
or
sahf
js
test
xor
cmp
xchg
test
push
mov
push
enter
fsubrs
les
enter
cmp
pop
jl
mov
mov
jo
mov
call
arpl
dec
add
pop
xor
mov
xchg
nop
push
adc
xchg
arpl
fs
inc
cmp
cmp
sbb
cmpsb
je
mov
int3
mov
jo
push
mov
gs
int
push
je
mov
or
sbb
enter
movsb
call
leave
fcom
enter
stos
inc
and
dec
xchg
push
inc
jo
leave
push
adc
je
sbb
iret
cmpb
pusha
lahf
jo
adc
push
jno
out
xor
or
inc
jge
call
popf
mov
popa
add
insl
mov
nop
mov
inc
inc
add
adc
mov
xor
in
ss
or
sar
sbb
push
adc
push
add
push
incl
dec
mov
add
inc
mov
jbe
xor
roll
cmp
inc
stos
rclb
sbb
cmpsl
adc
pop
cmp
mov
loope
jo
mov
pop
mov
inc
pop
xchg
inc
call
jno
out
iret
push
mov
adc
pop
into
push
cmp
adc
sub
out
mov
jmp
dec
mov
mov
and
adc
or
add
ss
test
add
jmp
and
dec
sbbb
sarb
and
gs
jbe
mov
and
adc
test
inc
dec
bound
inc
or
popf
iret
mov
inc
mov
sbb
cmpb
pusha
lcall
out
out
mov
nop
mov
dec
jmp
roll
call
pop
sar
jmp
mov
insb
ss
sub
cmp
and
cmp
jne
push
jmp
xor
out
fisubs
in
and
xchg
or
or
xchg
and
jge
adc
or
ds
outsb
xchg
xchg
lock
aaa
inc
mov
lret
cmp
movsb
hlt
imul
cmp
xchg
pop
loopne
xor
shlb
sbb
adc
sahf
ds
movsl
sbb
jb
dec
pop
mov
pop
adc
das
or
inc
movsb
scas
dec
mov
ja
mov
inc
es
xchg
add
adc
int3
loop
sub
or
sbb
push
sub
pushl
mov
lahf
aam
lods
movb
add
or
jge
loope
push
insl
mov
or
xchg
in
sub
push
repnz
cmpsb
mov
pop
sub
add
scas
sub
add
andb
mov
clc
add
ds
xorb
insb
sbb
adc
xchg
push
or
add
inc
sub
xor
repnz
xor
xor
dec
push
fwait
adc
jge
xchg
lods
mov
cmp
dec
in
aaa
in
add
enter
xor
orb
inc
cmp
repz
shl
loopne
xor
cld
xor
imul
pop
fsubrs
mov
fisubl
push
jle
aas
jl
cmp
loopne
dec
fsts
mov
addl
cmp
inc
sub
jmp
hlt
inc
and
adc
cmpb
cmp
pusha
lcall
aaa
fdivrs
inc
sub
hlt
lock
lods
push
push
and
jno
mov
loope
pop
iret
inc
mov
adcl
cwtl
adc
lds
ljmp
inc
rolb
or
movl
ret
loopne
cmc
fcmovne
iret
adc
cmpb
adc
mov
inc
arpl
nop
lds
int
mov
mov
dec
push
add
mov
dec
or
ljmp
jecxz
rorb
pop
aas
sub
mulb
mov
sub
lret
lea
xor
inc
pop
ffree
add
jns
hlt
adc
xor
je
pusha
jae
inc
ret
mov
lods
aad
shrb
sbb
inc
loope
pop
sbb
or
xor
mov
inc
icebp
or
mov
jae
out
and
pop
mov
lret
xchg
push
dec
add
nop
cwtl
sub
clc
mov
daa
repz
nop
data16
adc
pop
push
adc
das
clc
add
bound
xlat
sti
inc
pushw
bound
loopne
sub
loope
push
pushl
iret
mov
mov
aas
loop
jmp
inc
shlb
dec
push
hlt
sbb
addb
mov
in
ss
pop
rorl
pop
je
lds
and
je
mulb
les
add
stc
pop
clc
add
xor
or
xchg
fadds
cmp
outsl
leave
nop
xorb
ss
sti
daa
inc
and
stc
pop
mov
test
inc
notb
sbb
and
pop
cmpsl
adcb
and
pop
pusha
mov
cli
imul
cmpsb
icebp
xchg
mov
and
inc
fdivl
arpl
xor
push
repnz
jnp
cli
dec
add
test
add
cld
ficoml
imul
pop
and
pop
jb
loope
int3
xchg
sbb
xchg
cli
js
sti
pop
repnz
push
sbbb
push
adc
xlat
jg
sbbb
add
inc
lock
push
shll
outsl
xor
xchg
cmp
sub
mov
add
sub
inc
cmpsb
enterw
jne
test
sbb
push
xchg
insb
out
inc
cld
pop
mov
je
subl
out
rcll
xor
inc
push
add
xor
ret
or
xchg
or
nop
cld
push
pop
icebp
mov
incl
jne
dec
push
inc
jecxz
sbb
xor
mov
adc
arpl
adc
add
mov
inc
imul
cmp
add
jge
sub
pop
jle
cmp
in
add
mov
mov
aad
sti
and
cmp
jl
lea
in
push
mov
adc
clc
dec
sbb
or
adc
push
out
mov
mov
cmp
pop
cmc
cmp
mov
aas
test
sub
sub
movsl
sbb
int3
push
in
ss
inc
dec
sahf
aaa
leave
fcompl
cmp
add
lea
or
xor
gs
or
ss
cmp
sahf
dec
pause
movsb
pop
lcall
mov
fistl
aam
add
inc
decl
xchg
adc
loop
jns
mov
pop
sbb
or
rcrl
jbe
dec
push
push
incl
jb
je
or
mov
cli
pop
in
jg
mov
mov
xor
xchg
pop
lds
jge
xchg
mov
cltd
add
aas
pusha
shlb
dec
cmp
movsb
pop
das
xchg
push
pushf
sub
dec
add
add
cmp
adc
mov
popa
in
inc
add
dec
fldl
out
sbb
popa
xchg
adc
cmp
jno
repz
cmpsl
and
xor
sub
push
inc
adc
jecxz
push
cmc
cwtl
xchg
inc
pop
fsub
aad
jmp
cwtl
sbb
mov
push
mov
rcll
sbbb
adc
adc
adc
hlt
out
sti
movl
fdivrs
inc
es
nop
cltd
or
addl
ret
cmpsb
cltd
mov
or
hlt
push
push
sub
icebp
sub
fcmovb
jmp
and
xor
inc
inc
std
mov
mov
inc
in
pop
fimull
flds
and
pop
sub
loop
adc
call
enter
shll
dec
adc
and
mov
push
pop
add
and
or
pop
xor
push
dec
add
insb
inc
push
jl
xor
cmp
cs
pop
nop
inc
xor
push
fdivr
rorb
and
scas
push
cmp
gs
sbb
adc
pop
sub
sti
out
pop
orb
push
dec
jno
xorb
popa
bound
jg
addr16
imul
jo
jb
je
jbe
js
jp
xor
jno
subl
rorb
adc
sbb
shll
pop
push
sbb
dec
or
add
mov
scas
add
push
outsl
push
dec
add
push
add
mov
dec
ss
hlt
lock
in
shlb
mov
aaa
pushf
pop
test
adc
add
bound
rol
pop
dec
lahf
imul
jbe
sbb
daa
rorb
pop
hlt
adc
je
xor
iret
aaa
sbb
push
testb
inc
in
push
pop
sbb
pop
pop
mov
add
and
lods
or
or
jg
sub
add
pop
mov
jg
or
subb
pop
push
jo
mov
outsb
pop
push
dec
mov
inc
xor
loope
les
es
cmp
add
out
jbe
sahf
add
add
sbb
dec
sub
ss
frstor
sub
out
jo
inc
adc
ds
je
enter
sub
mov
dec
lea
repnz
cmp
lods
adc
das
sub
rorb
rclb
mov
sub
cmp
movsl
jne
pop
enter
mov
outsb
imul
and
or
or
ljmp
pop
sub
lods
sbb
push
xchg
add
xchg
xchg
lea
and
gs
sbb
loopne
pusha
or
rclb
jns
shll
sbb
push
add
xor
sbb
push
sbb
pop
in
loope
add
or
repnz
test
dec
ja
inc
popf
mov
lods
push
pop
pop
or
mov
mov
test
call
test
lock
or
or
test
movsb
sub
mov
test
push
imul
sub
mov
mov
xlat
dec
add
lret
push
add
xor
mov
and
xor
push
lods
outsb
mov
push
cmpsb
sbb
add
jne
add
add
outsb
lret
xchg
inc
sub
push
dec
out
inc
pop
or
or
push
adc
or
insb
test
stc
mov
js
fisttpl
cltd
mov
dec
in
pop
clc
mov
shl
cs
je
rcll
mov
mov
push
fwait
cmp
dec
adc
mov
mov
adcb
or
push
jp
test
lods
mov
xchg
push
clc
push
mov
mov
in
push
mov
xor
stc
insb
and
sub
and
nop
testl
sbb
inc
lock
and
fs
fmuls
mov
gs
pop
dec
and
cmpsl
cmp
jg
sahf
lahf
leave
add
inc
adc
sbb
xchg
jbe
lahf
ss
lock
addb
scas
das
sbb
push
subb
das
ret
and
inc
in
popl
sub
push
je
adc
aad
nop
add
xchg
mov
sub
aas
jo
adc
shrl
test
scas
cwtl
fnstenv
fisubrl
mov
mov
cs
mov
pop
lret
add
xchg
add
sub
pop
push
add
pusha
sbb
add
inc
ret
dec
repnz
pop
hlt
or
add
xor
dec
clc
ja
in
sbb
mov
pusha
repz
jo
add
movsl
cmp
inc
inc
and
into
mov
lahf
mov
pop
sbb
pushf
jbe
scas
pop
push
sbb
mov
dec
sbb
jns
dec
mov
push
mov
mov
adc
lods
loopne
add
pop
xor
mov
push
dec
push
mov
push
xor
inc
jp
inc
jg
repz
cwtl
adc
and
aam
dec
or
or
push
adcb
imul
xor
push
imul
add
or
pop
sbb
sub
xor
dec
xchg
aam
sahf
xor
movsb
aaa
cmpsb
xchg
push
and
adc
in
dec
adc
push
inc
arpl
and
outsb
sub
dec
or
dec
xchg
push
inc
jle
sub
inc
sub
push
dec
sar
sbb
cwtl
adc
call
xor
adc
xor
leave
or
xchg
je
fisubs
pop
sbb
add
incl
orb
or
mov
loop
xor
cmpsb
aas
mov
insl
popa
test
daa
nop
push
mov
adc
rcrb
pop
push
sbb
xchg
add
daa
les
sbb
adc
jl
into
pop
mov
js
push
pop
mov
push
pop
leave
shll
les
ret
mov
aad
lods
push
adc
or
push
rorb
or
add
xchg
jbe
jmp
or
cwtl
xor
add
inc
add
bound
add
jno
xchg
and
outsb
cmpxchg
pop
mov
add
xchg
cli
and
push
mov
and
push
push
and
add
jb
and
sbb
pop
subps
mov
mov
mov
pop
mov
push
mov
jg
nop
scas
pop
push
lock
pusha
xor
and
fcoml
or
rep
mov
add
rolb
mov
add
pop
insb
test
pusha
mov
xchg
or
push
mov
nop
loope
add
or
mov
nop
mov
adc
dec
popa
xchg
lret
pop
cmp
sub
popa
mov
xchg
jb
or
mov
and
pop
test
dec
je
dec
adcl
clc
adc
mov
cwtl
out
adc
add
or
and
fs
es
push
mov
sbb
js
and
add
add
mov
push
pop
xor
inc
sub
add
or
fisttpll
lock
shrb
enter
dec
nop
xor
push
lea
and
fnstenv
push
sub
fsubs
push
add
testl
push
enter
inc
sub
mov
movsb
inc
shld
push
or
mov
mov
repnz
dec
sub
push
or
mov
sub
inc
sbb
rcl
xchg
cli
sahf
rcll
and
pop
push
pop
and
sub
pop
xchg
ja
cltd
or
cmp
xchg
cmp
inc
inc
mov
jecxz
rcrb
lods
sub
daa
mov
clc
pop
leave
sbb
xor
inc
repz
push
xor
sbb
sysenter
push
mov
div
addr16
leave
loopne
mov
dec
push
das
push
or
out
adc
jge
clc
lea
sbb
ljmp
pop
lods
xor
mov
repnz
jge
in
mov
jo
mov
call
pop
repnz
js
and
dec
sbb
enter
sub
pop
jmp
loope
mov
popa
push
inc
jle
out
inc
dec
arpl
mov
stos
sub
xor
and
sbbl
sarb
jbe
mov
int3
int3
pop
pop
inc
jp
xor
rol
add
inc
jmp
push
rcrl
pop
fnstcw
rcrl
cli
mov
push
or
lcallw
gs
les
in
loopne
inc
les
ffreep
rolb
push
mov
or
mov
push
test
or
add
pusha
popa
loopne
or
mov
cltd
mov
shlb
pop
sub
push
mov
fstl
aaa
sbb
and
sbb
dec
addr16
inc
add
jbe
push
es
or
or
pop
outsl
arpl
int
mov
xchg
adc
mov
lcall
movsl
rcll
mov
mov
mov
mov
repnz
les
adc
pop
adc
jnp
fisubrl
adc
xor
xchg
mov
sub
jne
repnz
mov
pusha
jg
fcomps
xchg
loope,pt
pop
loop
rolb
pusha
fwait
or
mov
fs
es
hlt
jnp
push
jbe
jo
dec
dec
mov
dec
pop
sub
mov
int
add
push
ja
out
sbb
xorb
inc
xchg
xchg
mov
inc
add
cli
movsb
roll
push
sbb
arpl
pop
outsl
fs
xor
add
and
pop
inc
js
les
mov
dec
pop
fwait
in
and
and
dec
adc
aam
sub
dec
add
pop
mov
inc
adc
inc
lahf
jg
loopne
lret
or
add
or
pushf
cmp
daa
add
and
rcll
push
insl
sbb
push
test
jo
cld
jmp
push
je
push
ljmp
sarl
insb
dec
xchg
add
insl
or
adc
cmpb
flds
dec
sbb
mov
adc
sub
dec
pop
ja
or
add
das
pop
and
dec
lds
inc
mov
movsl
xchg
sub
popa
push
addl
xchg
cmpsb
sub
adc
jo
aam
pop
pop
ja
mov
nop
or
into
andb
in
adc
cwtl
and
and
es
enter
in
xchg
xor
fs
xchg
add
mov
dec
xchg
sbbl
and
push
fs
xor
or
sbb
sub
add
cmpl
xor
sub
and
clc
loopne
pop
add
es
fcoml
xor
out
push
pop
add
sub
pop
jb
lods
das
lea
or
or
out
lret
xor
out
addr16
add
enter
xor
mov
mov
shrb
pop
jg
adc
push
ret
mov
adc
sub
sub
pop
pop
fs
sub
push
add
divl
mov
mov
je
jl
int
and
push
mov
repnz
mov
out
in
ja
imul
push
cli
arpl
sub
sub
sub
pop
mov
jp
popa
das
xor
xor
sub
or
add
or
jns
dec
pop
jb
push
pop
lock
lahf
sti
lret
leave
out
loop
in
clc
jge
das
and
adc
and
jecxz
js
xor
push
shrl
push
push
mov
cmp
pop
mov
and
pop
mov
sbbb
test
xchg
lock
pop
jo
movsb
and
in
inc
fcomps
ret
inc
mov
pop
jnp
mov
mov
adc
dec
push
inc
mov
dec
lock
sub
in
in
adc
bound
jmp
xchg
in
adc
pop
pop
fnsave
push
pop
enter
test
nop
je
daa
mov
jo
or
es
pop
andb
mov
adc
mov
dec
mov
orb
rorl
xor
int
in
adc
pop
pusha
xlat
mov
inc
addb
ja
pop
sub
mov
sbb
sub
dec
pop
adcb
sbb
cmp
inc
mov
add
mov
inc
pop
inc
push
dec
xchg
jne
pusha
sbb
aam
pusha
mov
pop
mov
and
push
pop
pusha
in
pop
add
and
sub
and
sub
cmp
jns
xchg
sbb
sub
sub
in
subb
xor
mov
and
adc
or
xchg
scas
test
pusha
jecxz
pop
or
jns
pop
xchg
shrb
sbb
push
test
mov
pop
adc
mov
push
pop
inc
adc
scas
mulb
lods
addr16
sub
xlat
notl
push
mov
lods
or
xchg
pop
std
rolb
lret
pop
sti
jecxz
shlb
pusha
sbb
or
outsl
sub
dec
adc
das
xlat
leave
setge
mov
bound
pop
loope
leave
dec
pop
sub
ret
mov
mov
daa
mov
sbb
jp
lods
push
shll
push
jnp
pop
or
jge
sub
insl
push
mov
push
sub
cmp
lods
sbb
loopne
ja
sub
sub
add
push
icebp
arpl
jle
push
xchg
es
fisubl
push
cld
sbb
jge
sbb
mov
xor
dec
repnz
insb
dec
repnz
repnz
jo
je
repnz
repnz
enter
dec
bnd
es
jns
mov
jns
jns
nop
cwtl
xchg
dec
repnz
lret
rcrl
stc
dec
repnz
mov
jns
jns
test
lods
es
jns
mov
mov
jns
jns
mov
es
rol
es
jns
enter
cmp
jl
shrb
xchg
cmp
cmp
fsubs
cmp
cmp
loopne
in
cmp
cmp
call
xchg
cmp
lock
dec
sahf
dec
sahf
hlt
sub
dec
and
dec
sahf
cld
jo
sbb
add
aam
or
in
leave
xor
adc
cmp
cltd
in
adc
sbb
std
in
sbb
sbb
mov
leave
fwait
in
and
mov
insb
pop
ss
sbb
xchg
ja
out
cmp
cmp
in
repnz
cmp
pop
cmp
jl
aaa
leave
fwait
inc
xchg
pushf
dec
sbb
enter
dec
in
or
leave
xor
jae
xor
dec
leave
xor
xor
pop
js
movsl
ljmp
test
cltd
in
push
sbb
cltd
jo
cmp
dec
repnz
js
jl
sbb
sbbb
cltd
mov
mov
repnz
insb
add
sbb
leave
enter
insb
leave
enter
jo
je
enter
js
jl
enter
addb
xchg
xchg
out
add
xchg
xchg
fstpl
xchg
xchg
ret
mov
xchg
xchg
test
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
jne
push
xchg
pop
rorb
xchg
xchg
xchg
inc
enter
xchg
xchg
xchg
daa
rcrb
aam
xchg
xchg
xchg
or
and
iret
repz
out
fstps
jns
and
or
int3
in
xor
cmp
xor
jb
clc
cwtl
cld
inc
fisubrl
jb
push
sbb
inc
dec
inc
dec
jno
fs
dec
inc
dec
push
adc
inc
dec
inc
dec
cmp
dec
inc
dec
and
push
sub
inc
dec
or
add
mov
inc
mov
dec
mov
push
mov
pop
enter
xchg
adc
sub
lret
jne
insb
push
mov
push
gs
dec
add
pop
inc
xchg
xchg
je
js
jl
push
sbb
adc
mov
loope
cmc
pop
ret
pop
insb
imul
popa
jns
jae
pop
dec
stos
sub
push
inc
push
pop
test
ljmp
imul
in
testb
ja
or
xchg
push
lretw
xchg
or
data16
sbb
rcrl
adc
mov
cmp
or
inc
sbb
aaa
inc
mov
dec
cwtl
inc
nop
imul
aad
int3
push
cwtl
test
adc
jbe
xor
dec
add
andl
sbb
js
pop
adc
lods
adc
mov
adc
inc
addr16
movsl
outsl
pop
mov
arpl
es
add
pop
jb
popa
pop
sbb
xor
arpl
mov
fistpl
frstor
lds
add
les
insl
jae
mov
ja
or
popa
mov
sub
or
pop
or
xchg
cs
xor
lcall
das
jae
fidivrl
jnp
pop
aaa
lahf
xor
inc
xor
add
mov
bound
aas
test
out
push
dec
push
jbe
insb
and
xor
dec
adc
pop
mov
stos
pop
inc
push
xchg
fsubl
fdivs
dec
ds
int3
push
cmp
mov
push
fsubl
notl
adc
mov
or
les
sbb
push
pop
es
subl
outsw
sbbl
fs
es
dec
lahf
stos
pushl
push
dec
push
inc
or
push
std
push
add
inc
or
dec
sub
mov
push
imul
cmp
rcl
fcomps
es
pop
fwait
inc
adc
test
dec
insl
cmp
or
fidivs
push
push
mov
and
jne
scas
aas
fsubl
enter
cmp
mov
insl
push
inc
aas
addr16
jnp
add
dec
imul
xor
notl
adc
imul
fidivl
jg
aas
andl
lahf
mov
sub
add
xchg
sbb
push
cs
pop
or
dec
pop
arpl
adc
punpckldq
push
inc
dec
inc
shrl
fidivrs
mov
ja
jae
sbb
mov
fs
loopne
pop
and
mov
sbb
movlps
xchg
dec
nop
cwtl
aas
mov
es
les
addr16
das
roll
mov
sbb
push
enter
test
inc
jae
dec
inc
cmpsb
push
xchg
testb
dec
push
dec
inc
push
movsb
popa
mov
or
nop
fisttpl
mov
jg
imul
xor
bound
jae
pushf
cmp
fisubrs
xchg
push
sbb
nop
xchg
xchg
cwtl
cwtl
or
inc
sbb
push
pop
fisubrl
xor
push
out
dec
push
outsl
push
movsb
ja
adc
pop
cwtl
cmp
cmp
nop
dec
or
or
es
push
pop
lahf
ds
fisubs
dec
add
adc
cwtl
xor
in
push
movsb
fisubrs
cmp
adc
cmp
lea
add
pop
lods
add
sub
iret
clc
pusha
mov
push
hlt
mov
sub
out
or
es
xor
and
adc
arpl
push
cmp
and
inc
repnz
sbb
cmpsb
in
push
sbb
sbb
push
in
xchg
and
inc
cmpsb
in
and
cmpsb
in
push
and
and
pop
repnz
add
mov
or
sub
sub
sub
xchg
aad
push
add
pop
dec
push
or
les
adc
enter
sub
mov
test
cmp
mov
lea
or
add
push
insl
jae
ret
jno
insl
loope
enter
std
or
les
imul
cmpsb
or
mov
in
or
jb
push
jae
js
mov
adc
outsl
and
sbb
sub
popf
fcoms
lds
mov
sti
xor
or
inc
jl
testl
lahf
add
out
dec
xor
add
pop
fcoml
xorl
stc
adc
pop
es
sbb
mov
fsubrs
inc
popl
and
push
and
dec
inc
movsl
icebp
sub
add
aas
add
or
push
mov
out
jbe
ret
push
pop
and
push
mov
add
in
or
and
add
lahf
adc
fimull
inc
leave
rorl
inc
mov
add
mov
xchg
ljmp
inc
and
sbb
pop
add
mov
adc
imul
sbb
sbb
and
push
or
or
mov
insl
adc
stos
js
xchg
insb
inc
out
pop
sub
in
daa
sahf
daa
add
dec
notl
cmp
push
out
push
or
sub
add
popf
movsb
pop
push
pop
and
xchg
add
cmpl
xchg
gs
ds
jo
stc
and
mov
dec
cld
push
dec
lret
inc
filds
sub
xor
mov
fisttpl
sbb
punpcklbw
mov
sbb
inc
push
mov
mov
pop
sbb
loopne
adc
enter
addl
sub
inc
ss
inc
mov
mov
push
repz
sub
sub
push
mov
xor
pop
ret
rolb
sub
mov
loope
fcomps
cwtl
or
lea
insb
pop
loop
inc
jbe
inc
fildll
pop
pop
sbb
mov
mov
jno
mov
imul
cmp
and
cmp
addl
movb
sbb
stos
bound
lret
mov
or
pop
movsl
mov
inc
pop
add
mov
mov
hlt
mov
dec
mov
pop
sbb
lods
les
add
jle
dec
inc
sub
mov
inc
mov
out
pop
test
and
dec
shrl
and
push
insl
outsb
nop
mov
mov
xor
mov
frstor
cmp
mov
addr16
mov
cs
cmpsb
jg
or
xlat
aas
mov
or
rolb
mov
push
outsb
pop
and
mov
inc
adc
jnp
xchg
cmp
xchg
cmpsb
sbbb
pop
test
roll
mov
das
adc
int3
or
decl
imul
movl
adcb
jo
inc
fwait
jno
mov
inc
aas
cmp
test
push
lods
pop
sub
decl
and
pop
leave
nop
add
cltd
in
lret
mov
mov
sub
inc
adc
frstor
cmp
push
adc
cs
cmpsl
mov
fld
jg
hlt
and
or
cmp
sbb
jne
int3
xor
jae
adc
or
enter
jecxz
cmp
dec
aaa
push
not
test
mov
nop
dec
pop
fildl
dec
inc
sbb
ret
add
xchg
inc
cmp
in
push
cmp
sbb
outsb
imul
add
add
push
sbb
xchg
xchg
aaa
push
sub
and
or
mov
add
pop
adc
call
xchg
in
mov
sub
jge
and
add
popa
pusha
cmp
jo
cmp
dec
xor
xor
mov
xchg
or
nop
neg
or
dec
mov
scas
mov
pop
inc
pop
adc
and
cmpsl
add
cmp
int
pop
ja
pop
pop
cmp
pop
inc
cmpsb
adc
ret
push
add
push
xor
sti
inc
fildl
add
adc
cli
add
xlat
movl
pop
mov
sub
mov
sbb
push
dec
adc
mov
sbb
add
push
cmp
inc
fcoms
push
scas
pop
gs
jmp
pop
cmpsl
test
or
and
inc
sbb
cmp
stos
and
xlat
pop
insl
xchg
cmp
dec
push
cmp
pusha
jle
or
enter
jle
or
add
add
or
xchg
imul
push
arpl
push
push
cmp
dec
fidivl
sbb
ljmp
push
mov
test
jmp
fwait
insl
mov
insl
pop
adc
popa
and
inc
adc
repnz
xor
or
adc
fiadds
cwtl
sub
adc
sbb
repnz
pop
sbb
adc
dec
xchg
jp
test
sbb
addb
push
dec
imul
inc
cmp
and
cmp
call
inc
fs
js
push
add
or
inc
fcoms
sbb
or
dec
inc
out
inc
adc
mov
inc
inc
sahf
pusha
pop
sbb
and
test
das
dec
std
inc
sub
xchg
pop
mov
sub
add
add
xchg
lcall
mov
xchg
je
xchg
jo
fcomip
xorb
stc
or
or
dec
jl
sahf
mov
adc
inc
push
xchg
or
cmp
sbb
or
dec
inc
addb
aas
push
inc
xchg
dec
pusha
pusha
xor
rolb
mov
fwait
push
add
jbe
jl
push
popa
mov
xchg
and
and
enter
lods
dec
and
xchg
fs
mov
mov
adc
les
pop
pop
popf
and
xor
sub
sbb
out
test
xchg
dec
adc
pop
pop
test
pop
inc
inc
fwait
adc
js
nop
dec
leave
jl
or
pushf
addb
inc
jge
sub
pop
dec
enter
sbb
sarb
iret
and
sti
push
pushf
mov
mov
cwtl
movntps
je
add
jbe
scas
inc
or
mov
xchg
xchg
mov
popa
daa
pop
outsb
xchg
je
xor
mov
nop
gs
das
or
js
mov
loopne
dec
add
fwait
movsb
shlb
mov
add
je
push
fcmovb
jmp
xchg
popf
imul
orb
stos
or
or
pop
xchg
adcl
ret
pop
sub
ss
mov
push
dec
js
or
jnp
adc
xor
js
and
jl
test
jl
jl
scas
xchg
or
out
cmpsb
leave
and
int
jl
mov
int3
dec
mov
ret
xchg
mov
push
sbbb
adc
add
xchg
and
nop
lcall
xor
popa
xor
sub
and
xor
outsl
dec
js
imul
jbe
stos
shlb
xor
sti
lods
test
lods
xor
lock
xor
insl
aaa
sbb
mov
dec
lock
cwtl
arpl
add
ret
sub
jno
xor
shrl
cltd
add
push
mov
and
push
xchg
nop
lods
test
cmp
jg
mov
dec
nop
pop
cmp
js
ss
mov
adc
int3
pop
pop
xor
add
stc
ret
dec
xor
push
mov
mov
ret
rclb
js
push
popf
nop
jl
dec
lahf
push
xlat
ret
mov
sub
and
push
and
insl
fisubrl
out
dec
or
hlt
mov
xchg
nop
data16
push
add
mov
shlb
ss
cld
fs
mov
dec
push
faddp
inc
cmp
arpl
leave
inc
mov
sahf
dec
hlt
sub
dec
dec
xor
fstl
adc
loope
cmp
aaa
dec
mov
mov
idivb
cltd
data16
or
call
or
shlb
inc
sbb
clc
sub
sbb
and
push
push
lea
push
mov
cmp
mov
xor
or
inc
in
inc
or
cmp
fidivrs
mov
orb
inc
dec
dec
cmp
inc
inc
dec
enter
push
inc
xor
push
push
inc
cmp
dec
dec
inc
sbb
dec
faddp
std
jle
push
dec
cmovl
or
or
jno
leave
pop
ja
je
xor
push
push
in
xchg
mov
pop
cmp
test
xor
cmp
pushf
xor
or
adc
js
sbb
cmp
cmp
adc
sbb
mov
data16
or
jg
imul
add
hlt
jmp
jmp
jecxz
inc
jno
fwait
cmpsl
inc
jecxz
dec
pop
in
mov
mov
pop
cmp
inc
pop
cmp
mov
sub
jb
pop
add
sar
jae
nop
fcmovnb
sbb
pop
sbb
daa
dec
cmp
repz
cmp
inc
cmpsb
pop
or
sbb
pop
dec
or
jb
pushf
jecxz
mov
cmc
push
add
or
aaa
mov
or
xor
rol
in
jb
adc
pop
ja
movsb
xchg
daa
adc
cmp
shll
inc
adc
imul
hlt
lods
adc
sbb
inc
lea
add
or
insl
inc
addr16
and
and
outsb
adc
test
mov
ja
jmp
je
leave
inc
xchg
and
sub
push
sbbb
push
aaa
xor
clc
test
ja
lods
mov
xor
sbb
stos
add
xor
mov
adc
jecxz
add
pushf
xor
xor
bound
sub
sub
jb
daa
sub
scas
pop
sbb
add
shlb
movsl
insl
cmp
inc
add
add
addb
jg
pusha
arpl
in
push
clc
leave
pushf
test
je,pt
popf
lock
xchg
loopne
push
or
push
push
test
xor
push
fldt
mov
or
aaa
call
movsb
push
nop
xchg
mull
in
loopne
and
loopne
or
push
cmpsl
xor
dec
push
int3
mov
sbb
roll
pusha
pop
push
jg
addl
adc
and
cmp
xlat
mov
scas
add
inc
andb
enter
inc
out
jmp
mov
inc
arpl
sub
push
add
and
mov
dec
push
daa
push
jmp
nop
cmp
inc
les
das
pop
arpl
arpl
or
adc
sub
arpl
mov
loop
jmp
mov
and
pusha
dec
arpl
push
cmp
adc
fcoms
mov
dec
push
test
lock
pop
sub
shll
sub
cmp
nop
fisubl
test
mov
gs
adc
movsl
loope
nop
adcb
and
orb
or
or
push
lret
add
xlat
adc
adc
pop
int
jg
xor
cs
loope
sbbl
es
jo
xchg
mov
aas
in
test
pop
cmp
pop
les
jno
arpl
arpl
cmp
aam
push
je
pop
or
daa
scas
push
adc
jns
aas
xchg
fs
data16
mov
pop
aaa
xchg
dec
pop
in
shrl
push
mov
scas
xchg
or
lret
mov
outsl
imul
shrl
pop
sub
inc
loop
scas
sub
pop
fadds
sbb
pop
sub
lods
insb
scas
inc
repnz
insb
out
insl
dec
jo
testl
outsb
nop/reserved
fcoms
push
push
add
and
adc
imul
pop
dec
gs
arpl
pusha
mov
add
and
or
int
not
xlat
pusha
pop
mov
or
pop
cmp
add
push
sbb
mov
leave
in
sub
je
jne
je
sbb
sbb
testl
out
jns
pop
jg
xor
cmp
adc
inc
mov
nop
push
or
jo
or
and
nop
xor
jb
imul
push
dec
decb
repnz
movsb
ja
ja
addb
cmp
js
fcmovb
xor
mov
imul
push
mov
ds
dec
and
mov
dec
sbb
nop
call
or
push
push
pushf
rorb
nop
xor
pushf
ss
imul
cmpsl
imul
and
movsl
pop
add
mov
add
sub
fldcw
push
psubb
and
imul
ss
scas
dec
gs
daa
into
add
ja
dec
sub
pop
adc
jg
inc
insb
or
adcl
es
dec
jg
ret
nop
sbb
dec
adc
lea
aaa
xchg
mov
add
push
cmpsl
nop
or
aad
ret
testl
daa
mov
lods
or
shlb
pusha
insb
adc
insl
xchg
ret
push
adc
push
cltd
pop
or
jle
dec
popa
cmp
or
dec
fnsave
mov
in
repz
and
pop
jmp
aad
mov
ljmp
sub
cmp
pop
imul
mov
aas
les
adc
das
or
mov
cltd
add
mov
xor
arpl
cmp
cmpb
push
or
adc
xor
icebp
fs
cmp
pop
adc
push
cmp
clc
and
push
cmp
leave
hlt
decl
les
sub
imul
sbb
jge
inc
push
adc
adc
lods
rol
inc
ja
out
sbbb
jg
imul
dec
xchg
dec
and
lods
insl
push
and
sub
sbb
or
or
xor
mov
rorb
and
inc
and
popa
push
dec
sbb
xchg
inc
adc
inc
clc
jg
mov
mov
mov
cld
add
scas
enter
cmp
add
mov
add
jb
add
gs
add
ss
pop
pop
jae
gs
pop
dec
jno
xor
pusha
sbb
andl
popa
cltd
es
in
aas
push
cmpb
jne
xlat
push
xor
ficoml
sub
and
dec
xchg
cmp
leave
fcom
or
jno
xor
push
add
hlt
dec
mov
daa
add
iret
sbb
dec
mov
popa
pop
addl
and
dec
jmp
push
dec
push
inc
push
inc
dec
jo
and
push
aas
mov
and
daa
ret
sub
jae
xchg
test
dec
pop
sbb
ret
or
and
mov
inc
xchg
mov
mov
adc
in
clc
cs
mov
pusha
insl
insl
xchg
mov
scas
add
movsb
jne
xchg
push
push
and
gs
dec
adc
or
dec
sub
inc
sbb
sbb
adc
test
into
roll
fmull
xor
push
and
sub
insb
adcl
xchg
outsb
inc
lcall
pop
repnz
fdivrs
rorb
inc
or
in
dec
aam
pop
pop
dec
out
rolb
mov
sahf
aas
mov
pop
mov
sbb
mov
xchg
push
mov
pop
das
pop
pop
orb
inc
pop
adc
sbb
loop
andb
mov
mov
xchg
sub
push
cmp
dec
pop
loope
or
ret
mov
div
je
aad
push
repnz
mov
xor
insl
lock
sti
dec
fdivs
test
mov
inc
xor
dec
js
lcall
or
stos
adc
sbb
xor
sub
fidivs
push
push
sbb
ficomps
sbb
xor
sbb
sub
std
xchg
mov
call
cmp
jbe
and
mov
lock
pusha
xchg
jne
add
inc
push
insl
popa
js
ja
xchg
pop
xor
dec
sub
xlat
jb
or
pop
or
shlb
mov
cmpb
test
jno
lods
push
pusha
xchg
xor
push
dec
inc
dec
add
fs
nop
adc
lahf
cmp
lock
inc
sub
fiadds
add
pusha
add
insl
loope
push
add
dec
pop
mov
mov
clc
sub
movsb
fstpt
data16
fists
shll
fistl
sbb
push
or
ja
jg
xor
pop
sub
xchg
sahf
push
inc
push
pop
pop
inc
dec
dec
dec
roll
add
mov
les
inc
pop
shrb
gs
and
daa
inc
jmp
cmp
jns
sbb
rcrb
push
jns
inc
inc
cmpb
inc
shrb
js
adc
stos
xchg
mov
mov
inc
cmp
lret
aaa
shlb
nop
inc
push
cmc
ret
insb
movsb
xor
and
rorb
mov
lea
lods
push
cmp
mov
pusha
mov
imul
test
stos
add
test
fadds
push
xchg
push
mov
push
fistl
cmpsb
js
jo
or
loope
add
scas
jbe
push
loope
xchg
push
push
dec
out
adc
mov
inc
push
inc
xchg
insb
xor
or
pop
dec
ret
dec
push
adc
test
sbb
mov
pop
ljmp
in
inc
add
and
sub
push
rcl
ret
pop
add
add
inc
push
test
push
mov
shlb
repz
push
insb
add
ret
pop
addl
mov
movsb
pop
inc
and
jno
mov
sbb
sarb
mov
and
ja
and
loopne
lea
test
and
add
subb
lcall
loop
adc
inc
xor
test
jge
xchg
and
and
mov
inc
lret
pop
stos
int
mov
fwait
and
psrlq
adcl
pop
and
lods
inc
xor
pop
pop
ret
nop
pop
imul
fs
or
sub
jecxz
sbb
jmp
adc
cmp
or
fadds
jbe
stos
inc
inc
xchg
ret
adc
fsubs
es
add
push
jge
sub
and
repz
mov
repnz
sbb
xor
pop
xchg
jge
add
insb
cmpsl
push
and
notl
in
xor
je
mov
inc
mov
push
orl
push
rol
mov
mov
adc
jb
xor
cmp
lahf
inc
nop
push
push
inc
mov
fwait
mov
jp
jg
pop
pop
lods
shll
test
inc
or
cmp
gs
push
pop
xor
sub
bound
loope
or
add
and
cmpb
orl
ret
jge
mov
push
and
jns
add
dec
sub
add
xchg
and
fs
push
sub
inc
dec
add
and
les
cmp
sub
or
out
aam
popf
mov
push
fcompl
xor
and
pop
dec
fstl
mov
cmc
les
loopne
iret
lret
mov
in
and
std
mov
adc
inc
dec
add
dec
leave
cmp
mov
push
or
cmp
leave
aam
push
mov
sub
push
cld
fmull
cltd
add
mov
dec
mov
sub
sbb
rorl
sbb
int3
mov
out
adc
mov
add
xorl
icebp
or
adc
jbe
mov
xor
and
inc
testl
mov
jg
aas
mov
push
adc
loopne
loope
inc
pop
xchg
sub
dec
pop
pop
xor
jmp
lock
nop
xorb
shr
test
and
movb
and
imul
adc
pop
inc
ss
cmp
push
fdivs
in
jbe
dec
and
fdivrs
sahf
jbe
cmp
shl
and
add
repnz
add
sub
or
sbb
fstpl
sbb
stos
mov
push
sbb
or
or
push
sbb
pop
add
lea
orl
movsb
and
or
ss
psubb
adcl
sbb
inc
shll
movl
fwait
adcl
test
push
enter
add
mov
jb
out
push
rcll
xchg
xor
xor
repnz
lret
nop
cmp
xlat
jne
push
aaa
rcl
jbe
adc
test
dec
mov
lock
lock
cwtl
enter
sub
mov
out
inc
push
mov
subl
filds
xchg
push
or
dec
push
aam
push
cmp
adc
rclb
pop
daa
imull
adc
push
jno
add
dec
adc
dec
xchg
leave
jecxz
pusha
test
push
push
test
pop
xlat
loope
dec
repnz
push
loope
je
inc
or
ss
pop
sub
jl
and
inc
cmp
adc
adc
iret
out
cmp
push
cmp
sub
xchg
mov
mov
push
mov
ljmp
sbb
mov
mov
adc
push
and
or
icebp
js
inc
test
and
xor
cmp
frstor
adc
inc
xchg
mov
push
add
push
xchg
pop
jb
lods
xchg
xchg
sbb
cmp
in
sub
nop
dec
in
dec
aam
es
xchg
xchg
push
testl
push
inc
jnp
arpl
push
loop
xchg
out
pop
or
pop
insl
insl
lods
cmp
mov
or
nop
and
cmpl
movl
psllw
fadds
dec
outsb
cmp
pop
and
adc
mov
adc
jecxz
dec
arpl
icebp
insl
jae
les
push
mov
add
mov
sub
rcr
pop
or
dec
add
ret
fdivs
mov
mov
or
fs
les
add
xor
jmp
xor
push
or
mov
mov
or
mov
sub
cltd
pop
sbb
sbb
sbb
push
or
imul
adc
mov
leave
mov
jmpw
or
dec
rclb
and
add
out
pop
out
inc
xor
test
push
adc
repnz
xchg
cwtl
add
xchg
or
inc
cmp
push
push
adcb
adc
lods
jg
and
mov
shrl
pop
incb
sub
loope
adc
imul
mov
in
dec
or
into
pushf
call
adc
mov
outsl
dec
or
lods
adc
pop
mov
pop
sub
xchg
adcl
sbb
pop
mov
xor
dec
enter
mov
dec
out
xchg
pop
pop
xor
push
mov
pop
out
jl
dec
pop
xchg
dec
shlb
jl
dec
subb
outsb
xor
xchg
out
cmp
inc
cmpsl
pop
mov
mov
lcall
out
pop
sub
pop
loopne
jne
adc
pop
enter
mov
loope
pop
pop
outsl
divb
jbe
fiadds
sbb
insb
push
xchg
push
cmp
mov
mov
xor
bswap
lret
in
test
inc
cld
ja
movsl
test
lea
adc
adc
mov
mov
movsb
jne
sub
add
pop
out
add
nop
roll
repnz
or
mov
loope
sti
adc
int3
xcrypt-ctr
cmpsl
sbb
test
inc
and
sbb
push
push
dec
fneni(8087
pusha
je
nop
lods
xchg
mov
pop
movsl
rorb
rclb
sbb
sub
and
fwait
and
push
mov
add
negl
mov
sub
sbb
adc
cwtl
pop
imul
pop
pop
push
push
dec
dec
adc
lods
jbe
add
fstl
lods
inc
xchg
imul
mov
push
out
xor
les
inc
aad
add
aam
fwait
outsl
test
inc
insb
or
sbb
push
xchg
nop
in
in
inc
inc
sbb
es
lock
xchg
xchg
and
sbb
dec
sbb
adc
push
add
subb
ja
xor
pop
xor
and
xor
mov
push
dec
add
or
daa
data16
inc
ljmp
fwait
xchg
mov
adcb
ret
inc
popa
test
movlhps
xchg
lcall
xchg
jle
sbb
aaa
fsubs
pop
jnp
xchg
or
push
stos
push
frstor
aaa
in
or
xor
out
cmp
or
outsb
adc
mov
inc
adc
mov
and
push
aaa
je,pn
aas
cwtl
sbb
jmp
mov
test
and
mov
inc
cmpsl
mov
inc
inc
push
out
xchg
inc
or
inc
insl
les
push
jne
testb
je
cmpsl
hlt
fstps
loope
mov
test
movsl
cmp
jne
mov
inc
sarl
ret
push
cmc
sbb
insb
xchg
test
inc
lret
and
les
sub
rcrb
ret
and
ror
push
ret
cmpb
cwtl
lods
mov
inc
insb
inc
bound
rol
or
filds
rorb
jecxz
push
lret
subb
add
js
pop
popa
lods
mov
and
lahf
cmp
insl
arpl
pop
xchg
jle
sub
loopne
adc
popa
pop
gs
mov
mov
and
and
adc
ret
inc
repnz
jmp
pop
pop
or
xchg
int
and
push
sub
and
mov
fdivrs
inc
jmp
adc
cmp
cmp
repnz
cwtl
popf
mov
lea
xchg
push
push
fstps
mov
mov
push
hlt
pop
pop
mov
mov
test
nop
pop
pcmpgtd
cltd
push
push
aam
or
inc
inc
xchg
insl
popa
addr16
mov
mov
add
xor
push
jne
jae
sbb
inc
jo
xchg
adc
mov
popa
daa
aas
jg
and
jne
sub
cmp
pop
jl
xchg
sub
add
clc
sbb
pushf
xchg
js
xor
xor
mov
or
xchg
inc
enter
adc
ljmp
push
add
idivb
sub
mov
imul
mov
add
lret
push
add
or
sbb
cmpsb
mov
push
mov
or
shlb
add
or
mov
add
adcl
and
xorb
js
es
sbb
fsubrl
movsl
inc
push
dec
cltd
dec
test
xor
and
mov
adc
shrb
and
sbb
add
adc
mov
insb
cwtl
mov
inc
jns
sub
dec
mov
mov
mov
add
pop
pusha
xor
push
js
adc
push
clc
jl
jae
negb
rolb
push
cmp
add
lds
jmp
dec
rcrl
or
lcall
push
shlb
lods
xchg
lods
mov
inc
or
iret
sub
push
adc
daa
pop
cs
push
jns
popf
xchg
and
sub
sub
fcmovne
push
dec
sub
push
or
add
push
je
inc
mov
adcb
js
add
sub
mov
cwtl
fadds
push
dec
in
adc
and
sub
add
cmp
and
adc
nop
arpl
or
xchg
inc
or
mov
xchg
mov
adc
and
and
sahf
mov
adc
mov
dec
je
sub
cwtl
dec
and
push
push
mov
adc
push
mov
ret
and
lods
and
mov
jp
adc
xchg
mov
enter
pushl
adc
lea
lods
add
arpl
pop
push
pop
mov
out
push
push
loopne
popa
sbb
push
mov
popa
aaa
popa
push
xchg
call
ficoms
lock
add
std
ret
add
adc
inc
les
xor
sbb
or
inc
push
ret
lock
inc
movsl
iret
sarl
sbb
sahf
dec
push
mov
js
in
mov
adc
xchg
gs
xor
cmpsb
adc
adc
mov
bound
ljmp
je
pop
add
jae
sub
cmp
adc
mov
sbb
and
and
push
fnsave
movsb
gs
mov
and
xchg
push
sub
cwtl
xlat
xchg
popf
fdiv
pop
test
movsb
cmc
pop
jecxz
add
sbb
jns
lock
dec
fldcw
sub
adc
rolb
fnstenv
mov
mov
loop
rcrb
sbb
inc
in
dec
into
mov
test
cwtl
inc
cmpb
ds
loopne
lods
movl
add
and
sub
or
aaa
in
arpl
das
jmp
call
adc
xor
dec
fs
fildl
or
in
fnstsw
and
sub
push
fstl
hlt
xorb
jb
mov
out
pop
mov
aaa
jmp
cltd
cld
mov
adc
mov
js
xchg
divb
jge
dec
mov
repz
cwtl
push
mov
movups
add
adc
shlb
inc
lock
pop
lea
rolb
and
sbb
lcall
orb
or
inc
in
mov
ret
adc
jo
cwtl
popf
jbe
aas
mov
mov
and
inc
mov
or
lods
push
or
adc
pusha
cmp
xor
jmp
xchg
orb
cmpsb
in
nop
push
cs
pop
or
push
les
or
or
xor
pop
loop
sbb
xchg
imul
cmp
xor
push
mov
add
xor
push
inc
xor
aad
add
leave
sbb
add
xorl
ret
push
outsb
outsl
sub
xchg
insb
pop
setbe
adc
das
adc
sarb
dec
iret
mov
jae
sets
pop
adc
cmp
push
xchg
in
xchg
or
repnz
adc
sbb
adc
add
dec
out
dec
fisttpl
js
mov
sahf
or
les
mov
xor
pop
mov
mov
lock
and
insl
mov
sbb
negb
xor
sbb
mov
fldt
and
stos
mov
push
popa
jo
lods
xor
movsb
mov
aaa
rcll
xchg
out
imul
mov
ficompl
sub
insb
inc
adc
stos
ret
das
mov
ss
inc
and
inc
or
ficoml
repnz
cmpsb
add
movsb
lock
test
adc
fs
and
and
jo
jne
cltd
cld
arpl
popa
mov
fcoms
sub
xor
push
dec
insl
faddl
dec
outsb
or
adc
dec
loope
push
sbb
adc
jle
mov
pop
sub
sbb
clc
mov
enter
lea
sbb
fidivl
pop
jno
xchg
and
xor
and
jae
fcoms
xchg
inc
inc
es
clc
in
cmp
dec
push
pushf
cmp
jno
sbb
lods
dec
add
jo
ja
cmpsb
sbb
pusha
addr16
cwtl
in
test
or
andb
nop
and
and
mov
fsub
cs
pop
adc
jecxz
dec
push
xor
adc
pop
mov
xchg
lods
loope
push
ja
les
mov
jbe
fcompl
dec
push
and
ja,pn
adc
mov
push
xchg
push
test
sahf
mov
popa
mov
lds
add
jp
or
rolb
jb
test
jge
push
inc
jne
and
enter
inc
testl
sbb
and
jne
and
and
rorb
pop
cmpsb
insl
cmp
pop
sub
xchg
xor
add
dec
pop
mov
adc
fmuls
mov
dec
loopne
mov
push
adc
mov
fstpt
push
sbb
push
out
dec
ficompl
loope
je
fdivl
in
in
xchg
push
lcall
cmpsb
cmp
sbb
faddl
movsb
jo
inc
fwait
loope
jns,pn
je
dec
xor
je
xor
fsubrs
cwtl
cmpl
and
mov
pop
pop
dec
cwtl
mov
aaa
and
xchg
sub
xchg
nop
lea
insb
test
sbb
aam
or
lret
xor
in
pop
xchg
mov
leave
inc
ds
dec
lods
loopne
inc
sbb
mov
push
call
mov
jne
sti
jb
cmp
and
or
and
pop
pop
lock
xchg
sbb
add
ljmp
jl
js
xchg
mov
sub
shlb
inc
ja
mull
arpl
and
pop
cmpsb
xor
sub
int
pop
pop
and
rclb
inc
test
push
mov
mov
sbb
push
fisubl
imul
jmp
mov
adc
insb
or
movsl
push
dec
jns
sbb
dec
test
and
jb
add
lods
add
add
test
ret
add
inc
out
push
jo
fcomps
or
xchg
adc
arpl
and
jno
cmpsl
pop
mov
push
nop
push
sbb
daa
mov
push
add
xor
fadds
pop
nop
mov
ret
push
and
add
and
cmpl
xchg
inc
mov
rcll
mov
jp
cmpsl
subl
rcrb
or
dec
daa
mov
aaa
jg
dec
lea
mov
add
add
scas
dec
inc
jmp
clc
or
ja
push
fstpt
rol
aam
adc
mov
jl
or
imul
push
push
pop
dec
sbb
cmp
imul
roll
sahf
ljmp
in
out
xor
lret
push
jecxz
fbstp
cmp
and
je
add
push
xchg
in
xchg
add
in
mov
dec
insb
inc
call
push
or
sti
aaa
scas
or
dec
movsb
fbld
loope
inc
pop
inc
dec
dec
push
inc
mov
dec
inc
inc
push
sub
inc
pop
test
mov
cld
pusha
and
cmpsl
lock
pop
mov
jb
mov
outsl
adc
cmp
lods
push
add
sbb
push
cltd
andb
or
push
push
test
icebp
popl
loope
cmp
add
add
mov
pop
addb
inc
mov
dec
repz
sbb
and
push
mov
insl
dec
add
cwtl
mov
mov
adc
ljmp
push
push
shlb
out
bound
icebp
mov
xor
xchg
add
call
cmpsb
sub
sub
or
adc
add
mov
jl
ret
push
sub
testb
aad
mov
insl
imul
lret
add
incl
outsl
mov
cmc
xchg
pusha
dec
pop
xchg
dec
pushl
cmp
add
pop
clc
xchg
adc
cmp
jnp
jb
push
hlt
hlt
add
inc
cmpsb
xchg
mov
lock
ret
sub
and
jb
cmpsl
outsb
jnp
jmp
pop
mov
sbb
in
sub
fsub
jne
push
inc
push
loopne
push
sbb
ret
mov
inc
jge
mov
xor
and
shlb
fcoms
lock
inc
cmp
dec
sbb
aam
mov
lds
mov
inc
and
and
scas
inc
inc
push
cmp
push
ds
fldl
jne
aaa
dec
push
push
jmp
push
inc
xchg
mov
xchg
scas
mov
mull
popa
dec
inc
inc
daa
out
clc
or
repnz
sub
or
ljmp
add
icebp
xchg
xor
cli
or
enter
insl
xor
push
fwait
cmpsl
cmp
jl
and
imul
cmp
mov
lock
add
jo
push
or
inc
push
xchg
inc
xor
fcomip
xor
pop
mov
shlb
mov
orl
rorl
add
sbb
mov
lea
repnz
and
sbb
mov
push
ficompl
sub
mov
ret
adc
pushf
and
movsl
or
add
cwtl
xchg
subb
mov
pop
repz
adcb
inc
popa
loopne
cltd
or
jnp
adc
inc
call
mov
fcmovnu
sbb
inc
xchg
xor
jno
loope
sub
jg
lock
adc
jle
inc
xchg
xchg
push
sub
add
xor
cmp
inc
inc
or
clc
movzbl
add
xor
jle
inc
dec
loope
inc
jge
xor
out
mov
push
je
addl
xchg
je
sahf
movsb
sti
sub
xchg
lea
ja
xor
and
cli
or
in
pop
jmp
sarl
jne
add
arpl
ret
push
adc
es
adc
inc
shlb
push
mov
cmp
mov
mov
cmpsb
cmpsb
fs
inc
loop
push
iret
movsl
xchg
mov
outsb
sbb
mov
stos
rolb
sub
insl
out
test
inc
js
orl
fs
lret
adcl
xchg
add
dec
repnz
sbb
cmp
das
dec
jge
cld
aaa
lods
and
push
fmull
or
or
testb
inc
insl
push
imul
or
sbb
sub
lcall
adc
pop
es
or
nop
mov
adc
cmp
into
pop
test
and
mov
jmp
add
lds
sbb
cmpsl
pop
mov
mov
fmuls
mov
lahf
push
pop
add
adc
pusha
mov
push
push
in
dec
jb
mov
imul
or
cmpsl
insl
lods
outsb
test
stos
add
cmc
mov
pop
mov
add
jg
xchg
and
pop
cmpsl
lods
lods
jnp
or
insl
pushf
insl
rclb
out
pop
mov
jne
aas
dec
inc
push
pop
lcall
pop
std
adc
lods
push
or
xchg
add
jl
std
add
adc
mov
roll
xor
insb
pop
decb
mov
jmp
loop
das
xor
or
sbb
je
dec
adc
sub
add
test
xor
je
sub
xor
or
jmp
xor
rolb
dec
sub
daa
dec
shll
sbb
roll
decb
fs
inc
das
cmp
jne
or
adc
and
cmp
jne
ficoms
and
cmp
pop
das
cmp
sbb
getsec
cmp
or
push
std
and
enter
mov
sahf
inc
sbbb
addb
adc
mov
mov
mov
adc
adc
or
add
add
pop
inc
stc
cs
sub
mov
test
testb
leave
and
ficoms
cmpsb
roll
fcoms
push
pop
adc
lods
jg
pop
pop
pop
inc
pop
fmull
dec
or
in
xor
add
push
lods
add
loopne
add
arpl
or
mov
mov
insb
andl
lock
jmp
push
and
and
jge
iret
scas
sbb
es
ret
push
and
mov
in
popa
cmp
inc
mov
pcmpgtw
inc
sbb
jmp
xchg
mov
call
sub
jne
mov
cmp
add
mov
nop
or
rclb
mov
enter
inc
pop
mov
jmp
pusha
xchg
mov
mov
adc
adc
mov
mov
test
iret
incl
es
das
xor
movsb
push
xor
outsl
cmovl
arpl
idiv
or
and
cli
push
daa
in
jge
loope
inc
out
mov
sti
rcrl
push
adc
sub
rcrb
loopne
mov
sub
je
jge
push
cld
fs
xor
xor
cwtl
cmp
jl
dec
pop
out
rcr
adc
inc
cwtl
out
shll
xorb
or
push
or
test
clc
insl
js
data16
fcmovne
sub
lcall
sub
xchg
add
cmpsb
dec
rol
rcrb
cmpsl
pushf
adc
je
nop
popa
pop
orb
jg
jns
dec
cmp
jge
shr
xor
sbb
insb
es
jecxz
test
xchg
or
cmp
decl
gs
out
cli
sub
add
inc
cmpsl
dec
inc
mov
sub
sub
test
mov
imul
daa
mov
xlat
dec
sbb
adc
lods
ret
mov
sub
faddp
jne
sbb
cmp
xchg
mov
or
cmpsl
out
sbb
cli
inc
adc
leave
and
sub
and
aad
outsl
sbb
sub
and
in
sub
inc
dec
dec
pop
jnp
stos
and
call
dec
adc
mov
pop
jnp
xchg
sub
xchg
xor
xchg
or
jne
shll
loopne
lea
cmpsl
cltd
ss
fdivl
fadds
xchg
or
add
jnp
or
sarb
popa
and
test
cwtl
and
or
and
test
les
mov
and
pop
cmp
mov
sub
in
idiv
mov
sub
jge
inc
sbb
cmp
push
arpl
pop
adc
inc
cmp
popf
dec
pop
add
cmpl
xor
mov
and
out
fmull
push
dec
push
insb
test
adc
mov
cld
sbb
pusha
mov
inc
mov
in
adc
out
not
jno
cmp
sub
shlb
push
mov
inc
mov
mov
or
inc
sti
aas
xor
pushf
cmpb
jne
adc
add
leave
adc
mov
mov
or
sbb
mov
lock
or
es
les
pop
push
inc
das
mov
adc
cmp
push
mov
mov
mov
and
mov
pop
dec
push
clc
les
push
and
inc
pcmpgtd
ret
test
ror
aas
push
dec
lea
adc
dec
stc
ss
ja
out
fisubs
inc
repnz
cs
push
mov
or
in
mov
jo
or
enter
je
enter
jbe
enter
js
jp
orl
jl
orl
jle
pusha
popa
or
enter
fs
and
and
and
insl
orl
outsb
outsl
push
push
or
enter
push
xor
and
and
and
pop
orl
pop
pop
inc
inc
or
enter
inc
xor
and
and
xchg
or
dec
dec
outsl
cltd
dec
push
enter
jl
insb
in
clc
add
xchg
cld
and
into
inc
popf
or
xchg
iret
xchg
cmp
ss
fisttpll
jmp
xchg
and
dec
sbb
imul
clc
sub
dec
in
insl
jo
dec
sbb
mov
enter
les
adc
lods
sbb
adc
mov
jo
repnz
mov
xor
dec
or
insb
in
test
xor
adc
adc
and
push
inc
adc
push
test
dec
mov
or
adc
push
jmp
testb
jns
cmp
and
lahf
push
dec
mov
rcr
adc
cmp
mov
inc
fs
sub
repz
xor
sar
push
inc
push
cmp
add
ds
inc
jo
inc
dec
sbb
sbb
fsubr
aad
add
mov
sub
jl
orb
inc
sub
and
sbb
imul
or
shrb
mov
mov
out
scas
jg
lret
sbb
adc
jl
pop
add
or
sbb
xchg
pusha
in
push
push
xorl
add
aam
xchg
or
adc
jecxz
dec
dec
push
push
scas
sbb
scas
imul
lret
repnz
mov
shlb
rorb
dec
rcrl
int
jmp
and
sub
xchg
or
sub
xchg
pop
ja
es
pop
add
push
cmp
or
or
out
movsb
cmp
push
dec
jae
push
mov
sbb
push
jl
lcall
inc
js
loop
fwait
pop
cmp
andl
or
dec
and
fdivl
rcrl
sub
push
push
or
or
and
or
or
lret
test
test
ret
mov
xchg
addb
mov
cmpsb
xor
push
push
or
or
mov
lcall
mov
inc
adc
adc
dec
sahf
movswl
pop
pop
add
lret
jnp
sahf
or
or
pop
xor
in
pop
push
sbb
or
xchg
xor
dec
or
push
mov
lea
push
pop
adc
dec
adc
add
cmp
icebp
dec
or
and
into
lea
dec
or
pop
and
lds
xchg
push
add
out
jo
hlt
lea
adc
ficomps
and
push
faddl
cmpsb
pop
push
xor
data16
push
dec
sub
and
enter
sbb
push
xor
cmp
pusha
mov
scas
mov
subb
ljmp
into
xchg
jle
mov
iret
lea
enter
and
mov
add
or
push
or
mov
add
mov
inc
mov
inc
add
out
aam
xchg
push
pop
lods
adc
inc
fadd
push
cmp
imul
cmp
mov
xor
add
and
and
pusha
mov
jmp
orb
mov
ss
roll
cmp
je
repnz
inc
roll
gs
scas
adcl
inc
test
imul
call
pushf
xchg
xor
data16
addr16
cmpsb
mov
popa
insl
sbb
inc
adc
sub
gs
cmp
cmp
cli
mov
inc
lock
pop
mov
lea
xlat
xor
sub
inc
push
sahf
in
loopne
jmp
jnp
ret
jle
in
insb
cmc
dec
pop
add
loope
mov
fstpl
fwait
push
scas
jne
scas
xchg
cmp
adc
cltd
in
lret
pop
jl
stos
or
or
in
icebp
nop
mov
add
out
push
adc
mov
cltd
cmp
push
test
sub
rol
fdivrl
les
sub
jmp
pop
insb
fwait
pop
mov
mov
dec
mov
testl
in
dec
lea
aas
fmuls
lods
mov
mov
mov
xchg
sub
adc
push
sbb
mov
sbb
mov
lahf
pushf
shr
fsubrs
es
das
sti
mov
leave
mov
cmp
in
daa
cld
decb
scas
push
aam
and
clc
xchg
popf
adc
clc
xchg
or
pop
sbb
add
loopne
push
lods
outsb
xor
jl
imul
insl
pusha
push
sbb
aas
mov
add
and
mov
xor
das
add
popf
insb
push
mov
and
inc
push
inc
push
sub
jno
add
pop
add
sub
scas
jle
test
fcmovnb
jb
sub
pop
ja
or
sbb
or
jbe
sub
outsb
rcll
or
and
add
rorb
mov
pop
popa
xor
ret
in
push
movsb
loop
sti
dec
sbb
addl
test
jae
flds
cltd
cld
add
fadds
inc
push
push
pop
outsb
jle
add
mov
xchg
and
in
in
or
inc
push
add
xchg
subb
inc
or
imul
push
xor
xchg
cli
or
jnp
pop
mov
cwtl
mov
pop
test
add
lods
aad
mov
movsl
ret
or
dec
or
mov
test
faddl
jmp
cmp
sub
enter
lahf
ja
movsl
cmp
add
add
or
testb
mov
or
movb
sbb
movsl
sbb
xchg
dec
inc
inc
pop
sub
clc
sub
je
or
sbb
pop
ja
sub
dec
xor
mov
jae
add
js
shrl
mov
ret
ss
mov
xchg
clc
clc
add
mov
in
pop
aaa
mov
jle
in
sbb
push
lret
hlt
ss
out
stos
xchg
cmpsb
aas
lods
scas
lods
jge
mov
aas
pusha
xlat
iret
jg,pt
aaa
popa
pop
or
in
stos
add
mov
inc
ds
xlat
mov
fcoml
call
and
dec
mov
fcoms
push
pop
jp
loopne
inc
push
mov
out
insl
add
pop
dec
pop
loop
cs
jne
lock
inc
dec
push
je
nop
aam
xor
sub
or
add
and
lcall
adc
cs
scas
ljmp
adc
sbbl
pop
cmp
and
mov
in
add
stc
in
cs
inc
daa
insb
inc
clc
sub
inc
add
xchg
xchg
xchg
add
cwtl
push
push
lret
fisubrl
mov
dec
sarb
sbb
xchg
jne
xor
stc
adcb
sub
mov
mov
ja
xchg
sbb
pop
ret
das
jo
sbb
dec
inc
add
push
push
jl
data16
and
ret
pusha
xchg
mov
shll
or
dec
or
xchg
xor
inc
insl
inc
inc
or
rclb
test
inc
pop
lock
adc
xorl
push
insl
pushf
cmp
cltd
fisttpl
xor
aaa
and
cmpsb
js
mov
push
mov
addr16
inc
outsb
mov
or
icebp
or
inc
fcomi
cltd
lret
movsb
imul
sub
nop
and
pop
jb
xor
dec
or
or
loop
mov
push
xchg
fistps
shlb
lea
cmpsb
pusha
mov
mov
xor
cmp
fcomp
repnz
fldl
fsubs
jecxz
sti
shll
ffree
movswl
int3
lods
out
pop
outsl
shlb
push
xor
cmova
and
mov
inc
pop
and
in
stos
mov
add
push
mov
xor
mov
xchg
xorb
xor
inc
adc
and
cmp
xchg
test
js
pop
popa
mov
pop
mov
sub
push
dec
mov
or
push
pop
popl
mov
mov
pop
subb
bound
dec
or
sub
inc
push
mov
xchg
loop
dec
and
frstor
sbb
dec
sbb
jns
pop
loopne
add
out
enter
fmul
push
addr16
hlt
add
mov
jp
cltd
xchg
int
repz
loopne
and
inc
fs
loopne
sub
push
and
enter
lret
cmp
dec
loopne
or
test
imul
add
aam
adc
jg
stos
je
in
loope
sar
cmp
leave
iret
add
std
push
sub
or
je
add
imul
jmp
sbb
mov
enter
cmpsb
aas
lret
and
movsl
push
ret
push
or
cmp
rorl
shll
lods
add
add
insl
mov
push
jge
jge
bound
or
push
inc
sar
inc
sbb
dec
inc
and
dec
or
paddsb
xor
jmp
loope
leave
shlb
lea
repnz
or
pop
enter
insb
dec
test
jo
cmp
adc
das
dec
cmpsb
and
cmp
adc
mov
fcom
icebp
and
ss
inc
test
lahf
xor
in
in
and
lods
ja
mov
leave
adcl
lods
lock
in
add
sbb
add
xchg
adc
popa
popf
clc
push
xchg
sbb
negl
sbb
sarl
mov
andb
dec
divl
dec
add
fsubr
jmp
dec
cmpb
jb
mov
inc
mov
stos
sub
xor
adc
xchg
push
jle
cmpb
xchg
and
adc
or
add
cmpsb
add
add
cmpl
into
inc
and
dec
jmp
mov
pop
movsl
imul
popa
dec
sub
xor
mov
add
adcb
fcoms
scas
sbb
inc
aad
lcall
or
mov
bound
mov
xor
fs
aaa
cmp
add
popa
jmp
shrl
jns
adc
sbb
loopne
add
mov
inc
call
xor
inc
cmp
cmp
popf
xchg
sbb
sahf
add
adc
sar
jmp
sub
hlt
dec
shl
sbb
sbb
leave
mov
cmp
xor
and
xor
sbb
andl
les
loop
add
mov
adc
jns
cmpsl
popa
and
out
arpl
andl
add
sub
mov
or
pop
sbb
test
sbb
push
imul
ret
cmpb
mov
or
das
scas
movsl
xchg
es
xchg
fadds
xor
sub
add
add
add
rolb
adc
outsb
ret
dec
xorb
pop
add
and
sti
mov
incb
adc
mov
outsl
xlat
icebp
jge
into
fidivrs
push
out
fcmovu
fwait
jbe
fidivl
add
psubb
and
out
inc
ljmp
and
push
mov
xor
add
fcmove
push
add
fs
push
mov
inc
mov
pop
adc
sub
or
movsb
inc
add
les
shlb
sub
bound
adc
mov
rcll
cmp
clc
sub
testb
out
cmp
jg
and
adc
sub
in
fmuls
pop
adc
dec
or
add
push
xor
inc
stos
test
jbe
inc
repnz
rorb
loope
ljmp
mov
test
and
mov
int3
orb
stos
cmpl
and
int
jno
lods
ret
das
and
push
mov
mov
adc
add
and
jne
int3
outsl
inc
and
popf
mov
lds
hlt
sbb
jne
in
clc
mov
in
fsubrl
ja
sbb
xor
pop
rcrb
sub
xchg
or
push
jno
rorb
enter
call
xor
in
loop
iret
enter
in
in
loope
lret
shlb
jecxz
loop
mov
fcoml
js
and
inc
mov
arpl
mov
push
xchg
shlb
int
pop
in
cmp
xchg
dec
out
aad
mov
sarb
fisubs
mov
cmpsb
and
mov
movsb
mov
or
outsl
bound
add
stos
js
and
pop
jg
outsb
push
xchg
movzbl
xorl
sub
out
add
lds
dec
pushl
xor
mov
mov
push
xor
add
shl
shrb
cs
mov
pushf
pop
xor
xor
mov
xchg
sub
cmpsb
add
sbb
stos
sub
or
adc
inc
mov
int
fs
aaa
sbb
test
int3
popa
outsl
scas
or
dec
clc
dec
jge
adc
xor
inc
mov
and
neg
add
sub
push
sub
mov
aad
xchg
mov
and
or
in
sbb
xor
lcall
insl
sub
add
jge
xlat
or
rorl
pop
cmp
ret
jl
cld
push
adc
pop
mov
add
loope
pop
mov
mov
mulb
mov
div
mov
add
mov
sub
jg
push
xor
jmp
rorl
adc
test
jb
cwtl
mov
sub
inc
shll
icebp
sbb
adc
or
cmp
in
and
lods
fcoml
inc
outsl
in
enter
cmc
jne
neg
pop
outsl
ret
mov
or
je
hlt
sbbl
popa
test
or
imul
dec
fbstp
cmp
mov
ficomps
xor
out
lods
mov
sub
or
nop
icebp
mov
orl
jne
pop
scas
pop
jecxz
daa
dec
popf
into
loop
cld
frstor
mov
js
cld
jmp
push
jns
aas
mov
mov
push
mov
lea
pop
popa
and
cwtl
push
mov
mov
mov
inc
out
mov
mov
mov
xor
orb
out
inc
lea
xor
mov
jae
addb
pusha
sub
dec
loope
push
in
gs
mov
dec
dec
jg
test
lods
insl
loopne
aaa
loopne
cmpsb
xchg
pop
and
adc
outsl
push
pusha
sbb
lock
push
push
push
push
push
ret
mov
or
add
or
or
fbld
je
xlat
cmp
cmp
jmp
add
in
lahf
jle
out
or
sub
add
add
ds
pop
insl
pop
pop
lea
les
imul
add
or
and
dec
js
sub
mov
adc
inc
loop
adc
xchg
mov
adc
adc
adc
arpl
push
loopne
fcoms
xchg
pusha
iret
pop
fdivl
insl
insb
or
sbb
test
addl
pop
mov
imul
pop
rcl
mov
mov
jno
add
into
outsb
or
dec
int
test
out
insb
mov
dec
movb
add
and
jge
pop
push
repz
inc
xor
and
call
icebp
hlt
or
je
push
push
enter
pop
filds
pop
ss
movsb
inc
sbb
call
cmp
in
jbe
mov
or
fdivp
push
sub
mov
mov
and
fadd
xor
mov
dec
in
cmp
in
nop
and
cmp
inc
pop
dec
popa
cmp
jg
pop
or
mov
sub
pop
jnp
js
push
dec
cwtl
pop
addr16
sub
push
xchg
cmp
fnstenv
or
and
shll
stc
jne
sbb
or
inc
cltd
popa
lds
es
hlt
imul
out
add
inc
mov
aad
mov
imul
jb
scas
repz
xor
xor
shll
scas
mov
inc
lea
out
add
shll
pop
sub
xor
push
xchg
stos
or
mov
inc
mov
mov
inc
nop
push
jp
dec
cmp
cmpsb
or
pop
mov
sub
sub
dec
rorb
jno
cs
fcoml
fs
inc
push
mulb
dec
pop
adc
sbb
dec
mov
xchg
cld
xor
jecxz
mov
aas
mov
adc
int
inc
pop
or
mov
adc
jmp
or
or
dec
aaa
ficoml
clc
push
movsl
rclb
loop
or
mov
inc
sub
rclb
imul
ret
jmp
adc
int3
adc
mov
int3
mov
and
shlb
ds
xchg
xor
sarb
push
xor
incl
and
or
scas
popf
mov
add
adc
jns
mov
fistpl
adc
sbb
mov
or
xchg
or
ja
fs
add
cmp
adc
les
inc
push
xlat
push
xchg
inc
xchg
insb
insl
jecxz
dec
movsl
movsb
xchg
hlt
or
or
adc
loop
dec
dec
movsb
and
movsb
sbb
insb
or
out
mov
dec
xchg
imul
shl
inc
dec
out
shlb
xor
fsubs
je
popa
inc
jo
daa
nop
push
lock
xor
pop
push
sbb
shrb
xor
sti
or
adc
dec
cltd
lock
push
and
insb
inc
or
sbb
cmpsb
loopne
mov
mov
fldl
adc
not
call
cmp
jb
mov
and
mov
add
sub
jbe
testb
jmp
and
cmp
jae
mov
dec
adc
cmp
push
pop
aas
adc
ret
in
or
pusha
jnp
in
mov
stos
ss
outsb
add
aas
stos
jb
repz
inc
dec
das
add
outsl
lcall
pop
mov
sub
or
dec
sbb
or
gs
adc
out
sbb
gs
frstor
loop,pt
add
out
pop
mov
cwtl
fstp
cmp
jbe
jg
iret
outsb
adc
add
mov
ljmp
jbe
mov
jmp
add
push
push
je
mov
aaa
in
pop
inc
pop
pop
jmp
sub
fldenv
mov
push
inc
pop
jmp
or
pop
jo
out
adc
gs
sub
inc
and
iret
jmp
mov
insb
mov
sbb
add
push
xchg
mov
fcompl
bound
lods
sti
xchg
mov
xor
pop
shl
mov
stos
mov
sti
ret
or
shl
in
dec
pop
ret
xchg
mov
add
popf
adc
xchg
xor
mov
pop
loope
ja
push
sbb
out
pop
mov
mov
and
cld
sub
scas
fs
inc
mov
xchg
lock
in
rcr
inc
sub
sbb
fistl
sbb
fcomip
mov
dec
mov
pcmpeqb
jl
data16
dec
sti
out
or
inc
incb
fists
push
push
scas
sub
add
or
lock
mov
ret
addl
or
fcoml
daa
dec
push
popa
sbb
adc
add
mov
arpl
dec
mov
dec
js
mov
rclb
add
cs
ja
icebp
lea
sti
mov
dec
mov
and
lods
shlb
push
or
add
filds
inc
and
xchg
jg
xor
pop
xor
mov
daa
loop
sar
mov
dec
lds
ja
and
mov
cmp
push
adc
pop
xchg
pop
sub
pop
or
cmpl
in
xchg
and
xlat
sub
mov
cmpsb
push
mov
int
mov
or
nop
out
dec
cmp
hlt
rcll
pop
push
push
pop
cld
sub
push
sub
dec
sbb
sbb
imul
test
pop
mov
ret
sub
push
inc
xor
insb
test
stc
add
test
add
fildll
lcall
int3
fistps
inc
mov
popf
sahf
fdivp
add
and
fmull
inc
inc
fwait
addb
cmp
jmp
ljmp
mov
jbe
pop
jp
mov
pop
sub
adcb
outsl
arpl
outsl
test
cmp
inc
adc
insb
push
or
loop
adc
adc
call
lods
mov
inc
cmp
jne
fisttps
lock
jmp
mov
adc
in
sub
ffreep
out
add
out
repnz
js
fsubl
and
and
daa
ja
inc
fnstenv
adc
mul
dec
aad
jle
mov
es
mov
xor
in
inc
pop
mov
mov
aas
ret
add
and
aad
jle
lock
mov
adc
hlt
push
xchg
push
out
add
rorl
jmp
inc
pop
mov
lret
fnstenv
nop
dec
xlat
or
clc
data16
mov
inc
pop
cmp
movsb
mov
ret
insl
push
or
push
fisttps
add
jne
dec
pop
icebp
ret
dec
lods
mov
push
adc
push
shrb
imul
lea
mov
pop
cmp
jbe
mov
cwtl
or
sbb
inc
daa
push
push
inc
cmp
fidivl
pop
sub
push
push
movsb
mov
pop
pop
pop
sbb
or
push
push
rcrb
pushf
out
lcall
or
in
loope
inc
jmp
shr
and
cli
testl
inc
fisttps
test
mov
test
dec
std
adc
adc
inc
sbb
add
mov
mov
pop
outsl
pop
loope
dec
sarb
cli
jl
sti
fdivp
je
leave
pop
mov
cld
mov
imul
push
aad
sbb
ret
imul
std
jge
ds
mov
add
cld
fsubl
adc
ret
jo
and
jmp
jbe
dec
mov
push
push
push
dec
jg
ds
out
jmp
insl
pushf
mov
pop
loopne
or
xchg
pop
fistpll
in
jge
pop
icebp
xchg
inc
mov
jecxz
dec
ficoml
icebp
test
inc
ss
sub
xor
push
cmp
repz
mov
dec
lock
push
xchg
jns
xchg
out
pop
mov
pop
adc
fisubl
ja
or
jbe
icebp
lods
adc
dec
aaa
lock
add
mov
fstl
addr16
inc
xorl
pop
inc
cmp
xchg
mov
push
xchg
or
scas
mov
pop
or
in
and
test
mov
jae
cmp
mov
sti
add
loope
sbb
jg
cmp
pop
pop
adc
sbb
or
or
inc
test
test
mov
cmp
les
jg
lods
dec
cmp
jp
lret
push
and
js
add
adc
cli
mov
outsl
add
cmc
hlt
pop
push
ret
push
adc
in
lret
and
push
insb
adc
jge
fistps
adc
les
hlt
and
or
movsb
aas
xor
repz
es
push
jl
mov
or
cmpl
add
fdivs
insb
inc
mov
jg
lds
add
push
or
fists
lea
adc
pop
xor
add
inc
xor
mov
inc
out
and
mov
push
adc
adc
jne
cmpsl
clc
cltd
sub
and
incb
push
push
cmp
xlat
shlb
movsb
add
pop
das
sbb
adc
dec
mov
ret
push
pop
pop
dec
cmp
lea
mov
inc
das
adc
dec
pop
aad
add
into
cmpsl
int
cmpsb
mov
enter
dec
and
dec
pop
xchg
mov
push
call
add
arpl
xor
xor
mov
jecxz
imull
nop
mov
add
dec
cs
inc
in
jmp
mov
xchg
adc
push
pop
jmp
bound
dec
or
inc
test
or
lret
mov
mov
in
ja
or
lods
fdivl
inc
lods
add
ret
das
dec
stos
push
xchg
outsl
mov
pop
movzbl
dec
jg
or
inc
add
pop
and
sub
rclb
insl
loope
inc
hlt
lds
out
loopne
sbb
push
icebp
mov
iret
aas
xor
lea
or
daa
mov
cmovo
xor
lea
inc
pop
and
cmp
jne
inc
sub
or
lcall
lods
sub
movzwl
xchg
mov
sbb
shr
lret
pop
loopne
imul
jmp
jge
push
or
inc
popf
inc
ret
aad
hlt
mov
xchg
sbb
addb
lods
mov
mov
mov
dec
and
jecxz
adc
movsbl
data16
stos
adc
xchg
lea
cs
or
and
popa
shll
fsubrs
mov
push
push
mov
jbe
sbb
and
or
pop
mov
lock
aas
xchg
lock
popa
ret
data16
rolb
push
add
sub
aaa
mov
dec
add
sbb
fisttpl
jmp
push
popa
push
dec
mov
shr
int3
aam
cmp
jle
push
and
fildll
and
jne
sub
loop
mov
push
call
and
mov
movb
orl
psubw
mov
clc
add
cmp
jne
and
call
loope
push
push
inc
cmp
sahf
add
loope
and
sub
outsb
dec
jge
mov
repz
scas
loope
fmull
or
cwtl
push
sbb
mov
push
adcb
push
mov
or
dec
mov
arpl
sbb
je
dec
nop
cld
xorl
subb
push
xchg
enter
push
shl
test
int3
mov
outsl
fldl
push
push
mov
add
ret
lods
push
push
loopne
xorb
sub
push
inc
sbb
cmp
rclb
in
daa
or
mov
sbb
push
mov
fwait
pop
in
test
add
das
inc
mov
lahf
jae
fdiv
or
arpl
mov
lods
test
or
jmp
jno
sub
aas
xor
fbstp
inc
mov
ds
xor
cmp
jl
and
sbb
sbb
adc
push
jecxz
or
rorb
xchg
mov
imul
mov
xchg
mov
std
jg
sbb
fildll
fdivs
or
dec
pop
lar
movb
not
pop
or
and
or
fstpt
neg
or
idivl
cmpsb
sub
ret
je
xor
aaa
pop
fisttpl
lret
xchg
div
add
push
sub
fdivs
nop
cli
mov
inc
shr
pop
dec
mov
sub
testl
or
push
xor
mov
mov
imul
push
sahf
jns
dec
add
invlpg
add
xor
sub
mov
cmp
in
jle
jne
fldz
jmp
push
mov
push
imul
sub
in
les
insl
pop
jns
fld
pusha
fs
paddd
rcrb
cwtl
sarb
fwait
mov
loopne
shlb
sahf
mov
adc
adc
pop
orl
sbb
add
cmp
enter
in
fisttps
pop
enter
mov
stos
cltd
mov
xchg
dec
mov
pushf
xchg
in
fildl
lock
andb
push
enter
mov
ds
inc
adc
push
outsl
add
or
daa
and
push
pop
xor
push
mov
std
sbb
mov
jle
dec
jmp
jbe
push
mov
fnstenv
inc
popa
cmpsl
test
pop
mov
mulb
push
push
push
push
cmp
jno
adc
mov
pop
das
push
add
adcl
es
mov
jb
ret
jne
imul
in
js
dec
idivl
pop
nop
mov
outsb
jne
push
jle
imul
dec
idivb
sbb
in
in
fidivl
jl
mov
imul
pop
add
inc
or
cmpsb
xor
scas
jne
or
mov
jno
shrl
xchg
adc
and
mov
add
fs
push
push
ja
or
jle
adc
push
adcl
dec
sbb
dec
pop
jne
and
and
leave
inc
pop
dec
lahf
lods
inc
sarb
jae
aas
dec
or
and
fld
ja
bound
pushf
or
pop
xor
dec
xchg
fwait
cmpsb
imul
add
sub
push
xorl
and
inc
fnstenv
push
sarl
pop
mov
shlb
cmpsb
and
jmp
and
loopne
lock
adc
enter
adc
xor
push
sub
sub
sub
inc
fwait
sub
push
movsl
popf
js
sbb
push
fdivrs
mov
lret
add
daa
pop
and
bswap
and
or
push
sbbb
mov
ret
push
mov
adc
and
test
shl
ret
jg
inc
or
xchg
adc
fidivs
add
push
xor
inc
cmpsl
jp
fnsave
and
mov
add
pop
mov
xlat
mov
sbb
mov
aaa
add
shll
pop
sbb
mov
hlt
aad
sbb
adcl
lret
jge
loopne
pusha
xchg
aam
sbbb
jo
test
frstor
in
xor
les
testb
cmp
add
sub
push
add
lcall
mov
mov
xlat
and
push
int3
inc
fildl
dec
xchg
mov
xchg
les
pop
pop
icebp
int
inc
lock
decl
dec
stos
jno
fdivrl
xor
mov
ficoms
in
and
popf
and
ud0
push
xor
and
jle
push
cmpb
xor
dec
fisubl
call
pop
mov
cmp
add
mov
hlt
fxch
ss
or
push
andl
inc
mov
pop
or
popa
pop
jmp
mov
adc
add
loopne
sub
push
add
sub
mov
fldl
mov
sbb
test
inc
push
cmp
inc
cli
sbb
xor
loopne
inc
out
jmp
dec
sub
rclb
clc
subb
loopne
cmp
cld
incl
nop
shl
and
mov
das
add
inc
test
negl
or
or
xchg
sbb
rorl
lock
and
cmp
into
mov
push
add
cld
push
out
push
sbb
iret
push
cmp
jge
sbb
nop
hlt
inc
add
aas
push
sbb
sub
sbb
and
insb
inc
lods
cs
adcb
push
mov
dec
inc
lcall
es
das
inc
inc
and
cmp
call
lock
fstps
imul
cmc
jmp
push
dec
or
sbb
and
add
das
repz
push
sub
and
cmpb
cmc
dec
push
andb
inc
inc
out
pop
test
inc
inc
mov
pop
or
xlat
mov
in
push
mov
or
add
sub
dec
ret
shlb
inc
add
sbb
inc
loopne
and
jno
test
nop
or
rcll
dec
loop
xor
push
add
xor
rcr
loop
and
jmp
add
testl
jmp
shlw
mov
shl
jb
sbbl
das
add
dec
dec
jb
in
in
test
sbb
xlat
inc
clc
sbb
loopne
pop
pop
jge
sub
and
and
arpl
neg
and
push
test
mov
add
add
jle
add
and
shll
and
jne
xlat
xor
push
movsl
and
xchg
pop
in
mov
adc
icebp
rolb
xorl
dec
and
test
add
gs
ret
pop
mov
and
xchg
lods
mov
mov
pop
nop
or
insl
jge
push
in
ret
pop
dec
adc
pop
les
jne
and
dec
mov
add
add
mov
adc
adc
adc
sub
or
emms
dec
jp
fcmovu
ljmp
sbb
aam
cmpb
mov
test
cmp
add
pop
inc
adc
cmp
cmpsb
mov
lcall
xchg
jle
mov
test
inc
cwtl
lcall
cmp
jno
sbb
in
adc
cmp
push
inc
mov
sahf
mov
lods
or
cmp
lea
std
jmp
jmp
dec
adc
jge
aam
pop
fwait
clc
jle
bound
add
and
inc
test
loope
or
mov
xchg
test
jb
xchg
loopne
out
sub
pusha
sbb
add
cmp
xor
inc
mov
ret
imul
mov
and
out
mov
test
aaa
mov
adc
aam
push
out
xor
or
sbbl
pop
or
jne
or
test
mov
scas
adc
dec
xor
adc
sub
loopne
mov
aaa
or
add
pop
daa
pop
adc
push
imul
mov
mov
jno
add
add
testl
add
jmp
mov
cmp
adc
ss
or
mov
inc
add
add
test
jne
add
cmpsb
xlat
inc
fdivrl
push
das
jno
loop
push
das
shlb
mov
pushf
and
shrl
add
mov
xchg
aam
enter
jmp
dec
orb
aam
add
cmpsb
sbb
jge
sarb
repz
enter
xchg
push
fildll
xchg
sbb
fistps
xchg
xlat
outsb
ret
in
in
mov
dec
dec
rdpmc
orl
xor
pushl
orb
and
outsl
mov
pop
and
cmp
ret
mov
rorl
ds
cwtl
or
pop
or
scas
dec
jnp
testb
scas
adc
aad
or
mov
xlat
fs
and
mov
jle
mov
pop
push
ljmp
stc
sbb
and
push
push
andl
test
lock
adcb
dec
out
mov
push
lea
out
cmp
cmp
mov
adc
sti
jbe
movsl
xor
sbb
cs
sbb
cmp
and
push
mov
push
xchg
ret
outsl
clc
pop
ret
add
push
inc
push
ret
mov
xchg
or
stos
sub
inc
or
addr16
cmp
out
call
repnz
push
sbb
mov
sub
fs
inc
movsb
xchg
mov
je
push
sbb
das
fists
mov
loope
cmovle
je
add
adc
xor
add
cmp
xor
and
lods
or
aam
or
adc
add
nop
imul
test
inc
mov
pop
xor
dec
sub
pop
and
lock
hlt
test
in
sbb
aaa
outsl
lcall
clc
mov
jo
iret
push
rcrl
xchg
dec
sbb
cwtl
stos
test
out
adc
or
adc
ss
push
mov
les
fists
cmp
lea
adc
push
push
adc
andl
sbb
mov
push
int3
cs
or
call
mov
pusha
xlat
cmp
push
push
push
js
push
rcll
add
push
inc
rorl
mov
sub
cmp
push
or
inc
shlb
imul
xchg
pop
and
sbb
mov
outsl
inc
inc
xor
mov
call
jp
test
xbegin
push
push
push
push
push
mov
mov
fcmovnb
push
bound
cs
cmpl
push
xor
cmp
xchg
adc
pop
mov
jmp
cmp
xchg
sbb
cmc
sbbl
push
mov
vmptrld
fildll
and
aas
cmp
add
pop
mov
addr16
pop
inc
mov
sub
add
sub
jo
push
imul
imul
push
sub
hlt
insl
mov
shll
add
dec
or
cmpsl
pop
mov
cmc
and
pop
dec
cld
inc
sub
iret
dec
cld
sbb
adc
or
add
cmc
inc
pop
push
rcrb
inc
rcrl
or
imull
pusha
push
pusha
push
lahf
mov
push
lods
jae
xor
adc
mov
mov
es
inc
mov
das
xchg
inc
add
xor
pop
pop
outsb
fisubs
fcoms
pop
add
add
sbb
add
push
xor
jae
mov
subl
leave
pop
cs
jne
stos
test
mov
xor
jg
sub
push
or
mov
xor
add
stos
xor
arpl
hlt
dec
mov
sbb
add
adc
addb
and
ret
mov
inc
add
inc
std
cli
xor
xchg
in
mov
addl
xor
jno
fdivs
ret
fiadds
inc
inc
popf
stc
movsl
xorl
add
and
push
cmp
jg
xchg
adcb
add
les
nop
cmpsl
sbb
xchg
push
sahf
scas
movsb
push
bound
test
jo
ret
insl
call
test
aam
hlt
sbb
and
adc
insl
loope
sbb
test
sbb
xor
sub
nop
or
push
jns
dec
jne
dec
xchg
mov
push
sbb
rorb
or
inc
rclb
inc
add
jnp
movb
sub
in
mov
adc
aaa
push
add
sbb
cli
or
and
repz
iret
push
dec
inc
jbe
or
xchg
scas
or
mov
xchg
mov
movsb
sbb
pop
cs
in
or
test
loopne
in
nop
loopne
loopne
out
xchg
sbb
xor
adc
fwait
push
cwtl
push
push
add
or
into
push
adc
push
or
dec
js
sub
out
gs
jbe
and
push
add
jg
dec
add
dec
jge
xor
test
sbb
add
lock
fwait
add
add
aam
jge
popa
pusha
add
enter
in
add
lock
adc
js
ret
das
xor
mov
addb
sub
in
aam
jle
cwtl
adc
or
pushl
mov
dec
fs
add
ficoms
xor
inc
lcall
dec
xchg
jb
jns
and
or
dec
test
inc
dec
jns
push
jno
shrb
ret
addl
lock
outsl
jo
adc
lcall
out
orl
lcall
mov
add
pop
mov
dec
nop
xorb
stos
shlb
mov
cmc
shlb
sub
dec
mov
dec
sbb
mov
cmp
mov
or
arpl
inc
add
add
pop
ficoms
pop
pop
scas
and
mov
cs
lock
cwtl
and
scas
mov
aas
loope
loopne
dec
aad
fiadds
add
jne
nop
rolb
inc
push
cmp
push
or
repnz
sbb
negl
cwtl
pop
jmp
mov
inc
jae
hlt
fs
add
mov
push
push
out
push
loope
stos
in
cli
cmpl
arpl
sbb
adc
dec
out
je
pop
pop
jmp
pop
sbb
sbb
sub
and
and
xchg
add
xor
add
movntps
movsl
int3
jnp
lods
jnp
sbb
lea
or
call
xchg
mov
xchg
xor
inc
es
or
add
sbb
or
push
xorl
inc
adc
or
adc
mov
hlt
or
icebp
shrl
push
sbb
leave
cmp
fsubr
mov
enter
xor
insb
cmpsl
dec
jno
adc
lcall
daa
cmpsl
and
rclb
xlat
shl
xor
sarb
mov
movzbl
pop
or
add
cmpsl
dec
and
ret
jl
add
je
cmp
jb
cmp
ja
addb
push
test
clc
push
in
and
fstps
add
push
inc
imul
mov
push
sbb
aas
add
lcall
jne
pop
shrl
in
lods
les
mov
xor
sti
add
je
or
push
push
mov
push
enter
pusha
repz
or
lock
mov
push
pop
mov
add
jmp
add
xor
push
add
xor
inc
adc
push
cmp
das
test
cmpsl
cmp
fwait
push
fisubl
mov
pop
or
lfs
shll
out
outsl
mov
fcomps
or
insb
jp
sub
dec
jo
imul
in
iret
pusha
insl
hlt
mov
mov
daa
xchg
daa
daa
mov
mov
push
pop
dec
scas
xor
inc
inc
sbb
push
lret
rcl
xchg
fdivrl
jl
outsl
adc
mov
loop
jno
pop
das
inc
mov
adc
mov
cmp
inc
les
add
arpl
les
ret
loope
ja
aam
dec
dec
add
je
inc
nop
in
nop
mov
jnp
fcoms
rolb
cmp
and
sbb
add
dec
and
sbb
mov
scas
mov
iret
movl
add
add
jo
call
mov
shr
bound
pop
adc
push
mov
cmpsl
inc
cs
xor
add
jo
inc
or
jbe
sub
lock
out
inc
rcl
gs
call
cwtl
pop
int
daa
inc
sbb
outsb
add
lcall
mov
or
and
insb
add
adc
imul
mov
add
aaa
add
or
ja
enter
adc
cmp
push
adc
or
add
mov
outsl
leave
pop
int3
fidivl
adc
add
inc
testb
adc
adc
inc
and
mov
mov
int
pushf
push
sub
pop
jnp
arpl
bound
xorb
movsb
jge,pn
push
data16
inc
insl
daa
or
mov
outsl
js
lods
inc
mov
pop
or
push
sbb
or
mov
je
dec
push
adc
insb
add
push
cs
mov
and
aas
in
jle
gs
or
jo
adc
adc
xchg
push
data16
ret
push
aaa
sbb
jne
and
add
lods
pop
jno
add
push
dec
outsb
pop
add
popa
push
jo
nop
mov
rcrb
inc
sbbb
sbb
or
pushf
xor
xor
or
orb
arpl
mov
xor
jne
and
jbe
mov
adc
gs
adc
clc
pop
cs
js
inc
adc
push
sbb
pop
incl
push
adc
inc
test
bound
decl
sbb
pop
add
aad
mov
stos
ss
hlt
sbb
inc
push
push
adc
xchg
or
add
das
fs
lods
cmp
or
aas
testl
dec
sbb
pop
iret
insb
pop
inc
mov
dec
repz
inc
dec
insb
lea
enter
and
adc
sti
aas
add
cmp
pop
xor
movsl
dec
test
movsb
push
enter
adc
jne
negl
pop
mov
xchg
mov
lods
push
push
ds
shrl
add
rcrl
pop
mov
testb
sahf
addl
pop
pop
add
imul
xchg
push
cmp
pop
push
mov
aas
add
push
test
mov
xchg
dec
jo
inc
les
nop
out
sub
shrb
or
cmp
jns
movntq
out
test
pusha
sbb
add
add
test
cmc
jle
lods
xlat
in
inc
addr16
fcoml
lds
adc
pop
or
adc
nop
jl
les
cmp
push
adc
mov
pushw
je
add
andl
cwtl
mov
push
js
dec
fisttps
mov
xor
and
cmp
and
or
sub
xchg
out
adcb
or
push
sub
inc
adc
sub
pop
and
xlat
jno
out
push
ret
stc
pop
inc
add
popa
loop
pushf
popa
imul
imul
inc
or
xor
outsb
cmp
pop
hlt
pop
in
stos
or
inc
jmp
ja
or
and
xchg
call
pop
ds
xchg
pop
add
aas
jl,pt
xchg
lods
cmp
enter
add
xchg
in
push
or
int3
out
lods
insb
popa
je
cmp
test
or
aas
daa
das
in
das
sub
inc
adc
dec
shlb
das
jmp
jbe
or
or
pop
jb
in
sbb
push
aas
xchg
inc
inc
add
inc
cmp
jmp
dec
lahf
push
nop
sbb
sbbl
push
nop
fs
pop
pop
sti
mov
xor
imul
movsb
mull
testb
pop
inc
push
sbb
push
and
adc
pop
mov
sbb
addr16
mov
xchg
call
roll
inc
xchg
and
jle
sahf
clc
add
mov
xor
or
scas
jecxz
add
or
and
outsl
inc
jae
adc
push
mov
pmaddwd
sbb
adc
popf
nop
push
jae
mov
js
mov
or
push
jmp
push
push
aaa
add
inc
pop
test
mov
insb
cmp
gs
add
cmp
add
pop
inc
iret
or
loopne
add
jb
or
inc
scas
push
adc
and
add
cmp
movl
test
sbb
int
jno
mov
adc
pop
push
pusha
mov
sub
xchg
xchg
in
arpl
js
and
clc
push
setp
leave
mov
mov
pop
add
in
test
adc
int3
cltd
pop
in
mov
xlat
push
push
inc
scas
xor
les
addb
cmp
mov
dec
add
pop
mov
push
adc
and
dec
dec
mov
sub
outsl
je
pop
jo
nop
test
xchg
dec
rclb
xor
mov
int3
add
fstpt
push
or
cmpsl
insl
int
pusha
push
lods
mov
aam
mov
mov
xor
repz
sub
cwtl
clc
mov
and
mov
push
repz
push
sbb
sbb
nop
mov
dec
idivl
jge
mov
pop
add
stos
dec
jl
cmp
add
xchg
mov
xchg
fwait
test
mov
pop
or
xor
xor
pop
xchg
sbb
inc
popa
shlb
or
inc
xor
lods
mov
pusha
pusha
fsubl
outsl
rcrl
lea
pop
and
pop
xchg
pusha
pop
inc
jmp
xchg
fisttpl
pusha
mov
lods
add
cmc
mov
and
sub
push
mov
xor
sbb
or
or
mov
dec
dec
nop
cmp
sbb
or
push
inc
cmp
or
pop
mov
pushl
jmp
cltd
mov
inc
nop
mov
and
add
and
jmp
les
cwtl
lea
add
inc
hlt
test
dec
insl
cltd
movsb
mov
xor
or
xor
movsb
pusha
subl
dec
repz
push
jo
and
fwait
jg
xchg
out
cltd
gs
push
push
sbb
das
lahf
je,pn
mov
nop
nop
pusha
xor
lahf
sub
fisubs
rolb
ret
cltd
dec
lret
pop
inc
bound
sbb
and
push
stos
out
faddl
outsb
dec
enter
adc
scas
push
inc
push
dec
mov
inc
inc
push
pop
adc
mov
mov
push
rcrb
test
sbb
xchg
movsb
inc
rcrb
test
cld
inc
or
lcall
mov
aam
push
movsl
test
sbb
imul
adc
das
or
jmp
loop
ds
inc
jns
xor
insb
xchg
sbb
mov
jg
fwait
out
xor
mov
fsubs
or
adc
es
or
rolb
ret
push
push
rol
sub
inc
jg
les
xchg
pop
push
test
and
and
add
mov
xchg
and
bound
add
stc
jne
mov
inc
adc
xor
repnz
test
push
push
or
stos
insb
rcrl
inc
dec
mov
pushw
pop
loopne
cmp
adc
enter
xor
push
mov
adc
pusha
nop
push
push
insb
push
rol
push
scas
dec
adc
push
lds
fistps
or
xchg
xor
sbb
push
push
cwtl
fcmovb
dec
scas
push
add
call
sbbb
loopne
sub
loop
stc
sub
nop
popa
lret
xchg
and
int3
fcomps
insb
add
and
add
and
dec
pusha
dec
in
jmp
or
nop
push
dec
push
push
pop
xor
nop
pop
subl
lods
leave
xchg
leave
mull
cmpsl
sbb
in
push
xor
mull
mov
lret
lretw
leave
sub
lahf
adc
bound
jnp
rclb
pushf
jo
jo
cmpsb
dec
xchg
imul
ror
dec
repz
js
mov
lock
pop
inc
inc
hlt
icebp
add
adc
add
in
inc
aam
add
and
or
inc
mov
jae
int3
movsl
inc
call
inc
push
fldt
in
hlt
nop
push
push
pop
dec
push
xor
add
add
popf
jl
push
into
pop
jl
int3
push
adc
pop
leave
xchg
xlat
mov
pop
iret
cmp
mov
rcr
shlb
sub
xchg
sarl
ret
sbb
xor
sbb
dec
pop
ret
push
or
imul
test
mov
daa
cld
cwtl
pop
in
push
das
in
push
pop
fcoml
push
repnz
adc
xchg
add
lods
mov
pop
and
mov
mov
push
scas
adcb
push
adc
rolb
loopne
add
sbb
jnp
sub
inc
mov
movsb
push
pop
cmpsb
orb
xchg
add
pop
in
and
mov
roll
push
je
outsl
movsb
shrl
rol
aam
aad
scas
in
repnz
aad
or
sbb
fcoms
push
andl
mov
xor
add
mov
arpl
inc
and
mov
pop
sbbb
inc
lock
sub
mov
paddw
mov
pushf
pop
iret
enter
nop
pop
jl
push
adc
xchg
sub
sub
push
pop
sbb
mov
sub
add
jne
mov
add
cmp
or
inc
js
mov
cmp
pop
add
add
push
in
lahf
inc
add
insl
or
jl
mov
enter
adc
sbb
orb
nop
fsubs
add
inc
aam
lds
and
pop
in
and
inc
sub
sahf
sbb
sub
and
cmp
mov
inc
enter
pop
movsb
fisubrl
lock
adc
aas
sub
cmp
aas
insb
push
in
je
loop
pushf
sbb
fisttpl
inc
pop
repnz
pusha
fdivrl
or
pushf
add
add
xchg
inc
inc
test
jle
sub
push
fsubl
mov
sbb
jg
pop
js
movsb
pop
pop
adc
inc
mov
fnsave
mov
jg
push
pop
mov
jg
ficoms
cs
fdivp
dec
pop
adc
filds
mov
lcall
jg
jno
repnz
jnp
lds
xor
pop
inc
jno
nop
fbld
outsl
pop
aad
in
push
pusha
pop
inc
call
and
lods
nop
jmp
mov
jg
pop
and
faddl
push
mov
inc
pop
test
cwtl
popa
xchg
add
xchg
shrb
nop
dec
pusha
cmp
pop
and
repnz
arpl
ds
inc
loopne
adc
insl
or
adc
dec
loope
push
dec
sbbl
cmp
loop
push
add
mov
push
xchg
lcall
xchg
sub
add
mov
ret
mov
jl
pop
lahf
jns
enter
popa
call
sub
in
push
xor
push
push
lret
dec
pop
mov
shll
push
sbb
ret
in
scas
fsubs
gs
mov
inc
arpl
adc
push
xchg
test
jecxz
enter
push
jnp
adc
pop
sub
js
mov
lds
inc
mov
or
in
jb
push
in
out
out
lcall
int3
aam
out
pop
cmp
dec
jmp
inc
out
adc
mov
push
enter
mov
mov
mov
pushf
xchg
sub
or
push
ljmp
lcall
nop
daa
inc
enter
insb
ljmp
ljmp
lods
sbb
inc
xorb
xchg
test
imul
out
imul
pop
sbb
insb
in
sbb
in
mov
fidivl
in
in
cmp
push
in
scas
arpl
pushf
out
pop
movsb
lock
mov
clc
icebp
out
pop
inc
repnz
in
xchg
test
cmpsb
testl
pop
nop
xchg
and
lret
repnz
xchg
mov
nop
repnz
inc
call
inc
out
inc
repz
popa
mov
add
lea
sbbl
push
mov
add
or
subb
imul
dec
outsb
sub
push
jb
dec
in
movsb
cmc
nop
jae
fcmovne
inc
cmp
outsl
loopne
xchg
pushf
or
jl
notl
imul
mov
sbb
movb
ficomps
pop
mov
lock
mov
or
push
push
pop
and
or
and
and
in
jecxz
jl
loop
sbb
pop
pop
cmpsl
sbb
adcb
fwait
adc
cs
push
jns
das
mov
insl
cmp
fs
cmp
push
inc
adc
pushf
cld
nop
jnp
loope
push
pop
and
jl
and
dec
cs
scas
out
insl
enter
pop
shrb
outsb
inc
adc
inc
in
bts
mov
pop
orl
jo
outsl
out
test
scas
jge
jo
cmp
daa
es
xor
sbb
pop
adcb
and
pop
adc
dec
push
xor
sbb
iret
push
rolb
inc
test
dec
iret
cld
mov
call
add
lods
jbe
push
out
jo
dec
adc
pusha
add
pusha
test
shll
jo
mov
push
or
xchg
push
ret
pop
sub
add
add
lods
push
imul
mov
and
jno
clc
mov
outsb
mov
dec
in
pop
call
push
xor
das
call
fdivr
mov
pop
jo
test
jae
das
mov
cmp
adc
push
subl
daa
imul
dec
daa
or
mov
or
popw
and
mov
mov
fildll
xor
in
je
je
dec
les
mov
mov
pop
xor
dec
out
or
pop
or
sbb
loope
mov
rcrb
fldl
mov
loopne
inc
lcall
sub
loopne
cmp
dec
jne
cmp
push
leave
mov
add
or
push
push
movsb
outsl
das
in
and
fs
outsb
mov
out
sub
loopne
das
cmp
jb
or
rclb
inc
and
push
cmp
push
xchg
pop
cwtl
test
mov
xor
jnp
arpl
dec
cmp
outsl
mov
les
sbb
lea
pushf
sbb
or
pushf
and
test
ja
or
push
push
lahf
pop
fldenv
adc
or
sub
push
add
addps
or
call
loopne
int3
push
and
dec
jl
and
out
push
aam
loopne
popf
push
lds
cmp
xchg
test
mov
push
pop
push
test
bound
pushf
pusha
sbb
mov
lahf
insb
jns
and
nop
pop
pop
jns
mov
orb
lea
mov
pop
inc
mov
movswl
inc
xchg
push
cltd
push
and
mov
ret
fdivrs
int3
jp
jp
mov
sub
jl
test
push
std
and
push
xor
jno
mov
jnp
test
jl
cmp
adc
sbb
inc
sbbb
or
cmpl
imul
nop
nop
mov
or
popa
push
inc
mov
scas
sarb
cmpsl
aam
pop
mov
xorps
dec
out
and
sbbb
add
pop
or
adc
push
sbb
sub
dec
dec
add
lea
and
push
lcall
add
dec
fwait
inc
adc
test
add
inc
rorb
add
mov
imul
in
sahf
or
add
add
ss
pop
sub
xor
pop
les
inc
mov
pop
sbb
rolb
pop
xor
inc
jecxz
dec
xchg
adc
push
adc
mov
rorb
inc
dec
xchg
inc
add
cs
inc
sub
jle
push
sbb
fs
ret
sbb
or
das
adc
mov
orl
jg
adc
mov
fwait
inc
add
pop
mov
pop
loope
jo
ds
nop
pusha
jg
sub
les
adc
sbb
mov
imul
arpl
movsb
inc
sbb
test
fmull
adcb
orl
xchg
add
imul
or
into
or
imull
lods
cmpl
inc
lea
add
lret
pusha
add
or
adc
ret
push
clc
add
dec
int3
add
cwtl
mov
or
mov
nop
or
mov
pop
pop
or
nop
or
mov
or
dec
or
adc
fsubs
rorb
clc
pusha
sbb
jle
loope
push
pushf
popa
lcall
mov
imul
push
pop
adc
push
call
cmpsb
imul
jp
push
mov
mov
mov
push
test
jo
mov
push
es
test
out
hlt
push
je
test
sbb
xchg
pop
dec
pusha
push
dec
cmp
sub
out
daa
adcb
aam
push
xor
xor
shll
mov
cmpsb
imul
cmpsb
imul
inc
repz
jae
jl
pop
sub
push
inc
daa
shrb
outsl
pop
xor
nop
and
ss
xlat
ss
in
cmp
cmp
dec
push
push
pop
lcall
mov
loopne
shr
pusha
cmpsl
jbe
inc
pusha
xorb
shll
mov
push
push
mov
inc
push
pusha
cmp
xor
fsubrs
mov
push
sbb
into
push
push
pusha
cmp
test
lcall
pop
pop
pop
ss
inc
mov
pop
repz
cmp
dec
aam
push
adc
subl
clc
cld
add
pop
pop
cwtl
les
nop
push
pop
mov
insl
mov
aas
idivl
mov
lods
imul
xor
push
sbb
and
in
call
mov
daa
sub
and
push
xor
sub
cmp
cmpsb
push
and
xor
cmp
xor
xor
test
mov
daa
cmp
dec
pop
dec
pop
inc
jg
cmpsb
pop
imul
daa
cs
das
into
push
push
jl
repz
decb
mov
pop
mov
shlb
es
enter
insb
pop
push
js
add
jnp
push
cmpsb
out
xor
xchg
pop
and
xchg
add
xor
ds
dec
pop
lds
aaa
aas
xchg
test
dec
dec
dec
or
outsl
popa
sub
lcall
aaa
and
or
pusha
and
push
or
add
daa
test
pop
ret
inc
xor
inc
mov
movsb
lods
xchg
scas
enter
test
rcrb
pop
imul
xchg
mov
mov
popa
dec
xchg
cmp
mov
lret
iret
mov
lahf
cltd
push
or
mov
mov
add
imul
fnstenv
cmpsl
in
sbb
dec
jne
pop
daa
inc
mov
and
jmp
subl
shrb
andl
jmp
push
mov
les
xlat
or
push
cmp
mov
and
jb
mov
lret
in
test
adc
ja
push
inc
add
or
adc
inc
pop
xor
inc
or
ss
add
mov
and
lea
xor
adc
xor
and
test
or
in
push
push
mov
jno
mov
xor
dec
inc
mov
dec
inc
or
es
pop
in
fs
shll
fs
sub
sub
imul
mov
sub
dec
xor
push
out
je
cmpsl
cmp
pop
and
push
inc
push
cwtl
cmp
lds
shll
ret
rcrb
and
dec
sbb
xor
push
in
inc
jg
adc
push
pop
mov
or
wrmsr
das
cmp
sbb
test
flds
push
pop
add
fwait
pop
mov
orl
fs
aaa
scas
inc
jbe,pn
xor
xor
sub
daa
fs
inc
or
mov
and
fnstsw
xor
xor
pusha
and
popa
xor
add
das
add
lods
arpl
mov
push
dec
add
sbb
lret
dec
mov
xor
xchg
adc
je
fistpl
add
adc
sbb
hlt
test
loope
add
das
int3
adc
add
pusha
loopne
dec
or
pop
cmp
jge
cmp
bound
jmp
push
xor
inc
push
call
cmp
jl
cmp
cmp
imul
pop
pop
jbe
pop
add
push
jno
cmp
and
xchg
dec
fmuls
add
mov
cmpsl
sbb
inc
or
ret
dec
add
or
cmp
test
out
lods
sbb
clc
sbb
cs
and
adc
fsubrs
dec
sbbb
add
xorb
lods
rorb
dec
push
ss
xchg
lret
xor
fwait
sub
cmc
adc
scas
and
jns
or
cmp
outsb
fdiv
js
ficomps
xor
sbb
sti
adc
mov
lds
pop
pop
in
mov
aaa
xor
sti
push
adc
mov
sub
adc
push
mov
mov
add
adc
lcall
dec
enter
sbb
push
or
roll
xchg
arpl
xor
fisubrl
insl
jmp
icebp
cmp
gs
in
inc
insl
mov
inc
mov
or
sub
flds
cmp
rcll
shlb
imul
pop
sti
add
pop
and
mov
or
add
inc
pop
pop
pop
xor
gs
nop
add
insb
pop
sbb
loopne
add
jns
sbb
adc
pop
shll
push
mov
xorl
addb
add
cld
or
icebp
lahf
outsl
lret
mov
mov
inc
pop
pop
lahf
inc
cwtl
inc
add
push
add
xchg
jg
std
insl
lcall
imul
push
jne
inc
sbb
or
mov
dec
dec
or
pop
insb
pop
ret
pop
daa
pop
daa
sbb
dec
jmp
jbe
xchg
mov
adc
lea
push
sub
and
pop
inc
jb
sbb
push
sbb
frstor
test
fimuls
sbb
lock
cmp
mov
movaps
and
xor
test
and
sbb
mov
pusha
push
add
or
aad
dec
push
inc
xor
shrb
std
dec
xor
xor
aas
xor
xchg
and
and
addr16
push
xorb
inc
dec
aad
cmpsl
add
dec
in
mov
and
movsb
mov
mov
inc
filds
scas
add
dec
or
pop
outsl
and
in
push
and
jb
push
push
movsbl
pop
repnz
decl
add
aaa
test
push
and
mov
ja
pop
adc
add
or
xorb
inc
sub
xor
push
and
mov
and
adc
test
xchg
add
nop
aaa
or
sbb
outsb
sbb
fbld
cmp
mov
or
or
shll
not
and
ss
andl
popa
mov
adc
and
fistl
popf
loopne
or
and
jne
mov
sub
les
enter
or
cltd
jp
flds
xor
dec
fstl
jg
leave
jae
or
or
add
xlat
or
xchg
enter
adc
xchg
cmp
push
mov
xchg
imul
mov
ja
xchg
adc
cmp
lea
pop
dec
mov
shrb
data16
dec
sbb
bound
or
jnp
adc
adc
pop
cmpb
dec
and
sbb
and
jns
pop
xlat
xor
adc
sub
out
sub
subb
xchg
xlat
testb
xor
movsb
out
pop
add
jp
mov
add
jmp
pop
pop
rcll
and
jns
xchg
xchg
orl
add
imul
fnsave
pop
ror
in
push
adc
jp
cmp
sub
mov
pop
clc
push
add
mov
test
insb
push
or
jg
ret
aaa
in
lahf
clc
inc
sbb
mov
pop
daa
ret
add
push
and
lret
clc
gs
mov
cmp
jmp
aas
cld
adc
in
addr16
popa
xchg
mov
xlat
popf
pop
pop
mov
sar
stos
cltd
popa
daa
jmp
adc
jle
push
jle
pop
jne
adc
subb
mov
jle
mov
adc
cmpb
fwait
inc
dec
or
adc
cmp
add
pushf
mov
adc
das
and
fdivrs
xchg
and
push
mov
xchg
dec
mov
dec
xor
sbb
dec
inc
sbbb
aam
out
mov
pop
sbb
pop
xchg
cmp
xchg
shll
jbe
mov
add
push
mov
add
push
call
jmp
cmp
lods
jmp
xchg
mov
xchg
xchg
sbb
mov
mov
inc
or
lods
and
nop
sub
push
mov
mov
ret
sub
push
push
int3
call
inc
cmp
mov
movl
js
dec
pop
repnz
inc
aas
cli
xchg
and
jns
fcoml
push
rolb
imul
jmp
inc
cmp
inc
jo
inc
pushl
jne
cwtl
mov
or
bound
or
out
int3
je
or
pop
push
add
xchg
add
inc
hlt
xchg
xor
inc
xor
push
and
mov
inc
ljmp
jg
dec
cmp
roll
xor
pusha
ja
loope
add
ret
cmp
adc
inc
mov
adc
insl
adc
xchg
nop
shlb
ret
sti
aad
dec
sbb
or
adc
adc
xor
jno
movsl
lcall
xor
inc
adc
bound
or
stc
lds
or
dec
xor
adc
lea
scas
inc
pusha
jo
cmp
rcrb
pop
adc
dec
xor
cli
rorb
mov
inc
sub
pop
mov
inc
jns
push
or
add
fwait
outsb
add
pusha
mov
jno
movsl
inc
mov
xor
dec
xchg
das
cltd
rolb
daa
inc
adc
enter
inc
jmp
dec
popf
dec
xor
push
mov
pop
and
adc
ret
sbb
mov
pop
xchg
mov
or
and
and
pop
cld
mov
adc
mov
inc
pusha
outsl
push
adc
daa
or
sbb
inc
fiaddl
mov
pcmpeqd
pop
xor
cwtl
cltd
mov
nop
or
arpl
inc
push
sub
gs
jecxz
loop
and
add
add
mov
aad
mov
jb
pop
xchg
xchg
dec
in
xchg
xor
or
mov
icebp
lret
pop
or
test
mov
dec
scas
aas
in
sub
lock
loope
inc
jnp
or
inc
insb
test
add
mov
push
aam
inc
dec
and
push
nop
push
negl
jne
sbb
fidivrl
lods
pop
inc
add
rcrb
loopne
mov
cld
xor
xchg
jmp
testb
addr16
in
jo
shlb
inc
jmp
sub
push
push
or
lcall
movsl
call
adc
test
sti
pop
dec
insb
stos
sbbb
xor
xor
or
loop
adc
mov
cmp
push
mov
push
cmp
push
jbe
fbld
sub
inc
popl
dec
xchg
pop
or
fwait
cmpsl
hlt
nop
nop
lea
stos
test
or
cmpl
inc
xchg
lock
push
mov
insl
popf
sahf
fstl
fdivr
pop
mov
mov
out
push
mov
adc
inc
clc
or
es
test
ret
mov
push
aad
outsl
insl
aaa
add
ret
sub
xor
mov
pop
sbb
loopne
xchg
and
nop
ljmp
lret
aaa
dec
sbb
jne
sub
enter
cmp
xchg
pop
pop
movsl
adc
jo
js
adc
icebp
hlt
sub
push
out
cmp
ja
cmpsl
add
mov
add
in
cmp
push
cwtl
inc
ret
outsb
iret
loop
insl
mov
mov
add
dec
popf
inc
nop
nop
mov
cmp
pop
addr16
jecxz
and
push
imul
sbb
pusha
loop
mov
loopne
jnp
pop
jnp
mov
add
bound
leave
loope
in
inc
test
cltd
adc
dec
xorb
mov
scas
jmp
jae
xor
nop
and
and
scas
js
js
or
push
xchg
adc
xchg
je
pop
push
pop
sbb
pop
pop
adc
lahf
jns
jmp
inc
sbb
dec
adc
cmc
add
scas
in
aas
xor
stos
leave
loope
jne
xor
push
inc
and
fisttps
es
or
jge
and
lahf
or
cmp
leave
call
pop
adc
lea
popa
mov
pop
pop
rcl
pop
inc
rol
mov
mov
int
or
in
jge
jmp
test
and
stos
arpl
and
and
sbb
sub
inc
call
mov
adc
test
nop
movsb
xlat
arpl
xchg
addr16
mov
rorb
add
movsb
jo
addr16
movsb
dec
push
or
adc
mov
dec
and
ror
adc
rorb
inc
mov
shll
lcall
mov
push
mov
mov
inc
or
add
add
jmp
lock
mov
stos
sbb
cmp
mov
lds
add
test
mov
out
hlt
sub
or
inc
mov
mov
add
mov
cmpsl
out
movsl
adc
or
dec
jne
leave
sbb
push
les
xor
mov
lods
nop
pop
sbb
in
push
sbb
cmpsb
dec
cmp
jmp
stos
add
lret
sub
add
fs
cmpsb
adc
sub
sbb
test
sub
stos
mov
xchg
cmpb
pop
xchg
adc
movsb
or
cli
mov
or
push
push
inc
add
push
mov
inc
loopne
pop
push
mov
popa
add
xor
and
mov
inc
inc
cs
mov
adc
add
popa
inc
lret
sbb
sbb
jns
or
dec
mov
rolb
pop
and
lss
rolb
sub
xchg
or
dec
mov
daa
ds
pop
movsl
int3
mov
xchg
cmp
jo
add
loope
in
sbbl
insl
sub
xor
sbb
add
xchg
xchg
mov
test
jmp
fwait
xor
and
fmuls
and
pop
push
pop
xchg
iret
movsb
mov
js
sahf
cwtl
pop
mov
fs
fiadds
hlt
xchg
cmp
cmp
sbb
or
mov
adc
dec
sahf
les
mov
adc
jns
inc
sub
lcall
jno
pop
sbb
mov
or
jbe
inc
dec
push
cmp
arpl
sarb
pop
inc
out
ja
or
test
mov
add
in
or
sub
inc
adc
mov
cltd
dec
ss
push
fmuls
jne
sub
mov
dec
add
stos
pop
insb
adc
outsl
sbb
inc
and
pop
les
iret
push
lock
pop
cmpsl
inc
inc
repnz
cs
out
stos
and
test
jbe
xchg
rclb
test
popf
or
xor
sbb
outsb
jne
and
ljmp
sbb
cld
repnz
push
sub
ss
add
sbb
lock
loopne
sub
lods
xchg
mov
xor
and
or
loop
and
mov
adc
fadd
cltd
adc
sub
jl
mov
or
xor
add
outsb
or
xchg
jmp
mov
sub
sub
xchg
dec
add
lret
and
jg
mov
je
sbb
mov
push
fsubr
mov
movl
mov
and
xlat
pop
insb
loop
xor
leave
jp
xor
in
dec
xchg
adc
loop
inc
dec
inc
dec
inc
mov
adcb
addl
rol
lods
out
jp
jmp
hlt
and
pop
sub
push
pop
push
inc
add
mov
pusha
jb
cmp
xchg
push
sbb
pop
mov
jmp
push
mov
pop
lods
in
mov
pop
and
mov
into
mov
call
roll
mov
lock
add
pop
mov
insb
and
andl
js
inc
js
lea
cmp
and
cmp
mov
xor
push
icebp
dec
jle
push
xor
fbld
fwait
dec
cwtl
nop
movsl
fists
nop
imul
pop
inc
imull
inc
or
and
cwtl
das
mov
push
mov
or
add
xor
xor
sub
jne
pop
xor
es
clc
jo
mov
fbstp
mov
push
inc
sahf
jae
loopne
jno
mov
inc
cmp
dec
insl
sub
daa
push
xor
test
into
mov
xor
xchg
arpl
adc
fbstp
add
mov
out
add
and
push
js
jp
sbbb
or
les
add
mov
push
mov
pusha
repnz
mov
nop
rolb
popf
insb
shrb
out
pusha
jp
nop
inc
ret
je
pop
sbb
sub
stc
push
pushf
jmp
sbb
cmpb
jo
mov
movsb
xor
xor
out
in
jp
pop
pop
fwait
js
sub
add
xchg
and
fwait
mov
add
sbb
and
push
mov
and
pop
shl
call
shll
jl
out
mov
adc
add
mov
das
ss
test
xchg
nop
dec
outsb
ffreep
outsl
mov
lds
sbb
inc
adc
loopne
adc
mov
add
fidivl
fs
fwait
dec
and
push
xor
pop
fiaddl
imul
aad
cmp
inc
dec
sub
push
xor
sahf
pop
arpl
mov
and
pop
insb
es
xchg
sahf
insb
xchg
mov
cmp
dec
xchg
lea
push
push
insb
popa
cwtl
mov
sub
jg
movsb
ss
adc
js
xchg
ss
cmpsb
or
in
mov
and
mov
sbb
stos
pushf
aam
or
adcb
les
cmp
je
push
cmp
sbb
dec
push
pop
add
fildl
stc
mov
mov
mov
outsl
nop
adc
mov
and
in
mov
sbb
and
ljmp
adc
mov
call
gs
test
fisubrs
test
aas
mov
dec
xchg
gs
mov
addl
mov
scas
pop
xor
inc
insl
sub
xor
loop
mov
nop
pushf
sbb
xchg
or
das
xchg
or
outsl
fmuls
sub
dec
inc
imul
outsl
and
push
and
rolb
les
xchg
mov
aam
or
lea
xchg
rclb
jae
mov
cmp
mov
xor
inc
dec
adc
outsl
sarb
mov
or
iret
add
dec
repnz
mov
sahf
outsl
push
lea
jne
lahf
into
jne
adc
dec
mov
dec
movsb
nop
push
cwtl
mov
in
jecxz
add
xor
inc
loope
ja
scas
or
adc
cmp
push
sub
add
push
cmc
push
test
pop
test
inc
in
ret
sbb
mov
test
aaa
adc
jo
or
xchg
orb
and
dec
dec
cmp
and
sbb
or
inc
inc
mov
popa
cmpsl
jp
call
jbe
jne
shl
nop
clc
rcrl
or
pop
push
inc
nop
addl
in
test
sub
xchg
rorl
or
lret
arpl
push
into
adc
popa
rclb
pop
push
imul
addl
pusha
movsb
cmc
popf
inc
xchg
test
test
fs
js
xor
inc
pop
or
lea
aaa
nop
sub
xchg
inc
push
mov
push
pop
or
mov
sub
daa
add
add
inc
jecxz
xlat
pushf
cwtl
pop
dec
mov
or
test
movl
xchg
or
sbb
mov
dec
popf
push
or
pop
mov
dec
push
cvtpi2ps
inc
xorl
es
arpl
cmp
sbb
sbbb
ss
pop
cwtl
mov
fcoml
pop
ds
add
add
jb
xchg
leave
sub
or
or
jno
pop
mov
shr
je
push
xor
arpl
je
fs
add
dec
cmp
and
adc
aaa
jo
inc
xor
shlb
je
xchg
jmp
sub
add
icebp
lahf
sub
dec
xchg
subb
sarl
daa
push
add
mov
lds
dec
inc
add
pop
add
jle
sbb
pop
cmp
nop
out
inc
ja
inc
mov
movsb
arpl
stc
push
adc
mov
or
adc
cwtl
xchg
mov
stos
dec
and
inc
dec
fwait
dec
inc
aad
dec
or
dec
inc
enter
lea
or
mov
pop
or
push
ret
sub
fiaddl
inc
push
add
and
adc
pop
fs
push
lret
mov
pshufw
test
add
and
cmpb
lods
les
ret
cmp
dec
rclb
data16
mov
int
adc
insl
sbb
push
jo
adc
stos
mov
mov
xchg
adc
stos
call
mov
fiaddl
insb
outsl
pop
sub
sbb
daa
mov
jb
pop
add
sbb
mov
and
and
das
adc
imul
jnp
adc
inc
mov
xchg
vmread
cmp
and
movsb
dec
inc
ja
jg
movaps
scas
shlb
xchg
dec
enter
or
and
and
insl
daa
mov
stos
lahf
jae
ja
jo
inc
enter
xchg
addb
mov
adc
fcomip
movsb
shlb
or
xchg
jmp
in
xor
adc
jbe
jae
adc
mov
rolb
stos
pop
pop
jo
xor
fdiv
adcb
pusha
xor
clc
dec
fisubrs
aam
xchg
lods
jmp
inc
hlt
or
push
test
fstps
mov
inc
mov
bound
dec
andl
stos
rorl
popa
or
jle
sbb
adc
loope
adc
add
fwait
imul
ss
mov
neg
repz
ss
leave
or
outsl
ja
push
adc
popa
mov
jge
pop
cmpb
int
pop
rol
insl
fwait
insb
sbb
adc
pop
pop
mov
scas
adc
mov
not
dec
pop
or
ret
cmp
int3
and
ret
mov
in
pop
cmpsl
cld
mov
lea
pop
dec
cmp
or
ret
mov
aad
sbb
or
xor
movsl
mov
xchg
adc
mov
mov
push
orb
push
leave
stos
mov
ret
cmpsl
mov
mov
and
pop
inc
stos
mov
ss
fs
ret
mov
xchg
data16
dec
inc
jecxz
inc
or
push
push
sbb
call
mov
sarb
mov
insl
xchg
and
lcall
iret
test
mov
lea
fcmovnb
je
daa
and
sbb
aad
inc
add
inc
inc
xchg
lds
inc
xchg
lds
je
sub
add
jnp
push
lods
mov
mov
mov
and
rcrb
addr16
mov
xorl
in
push
dec
mov
aas
add
xchg
mov
and
pop
dec
pop
loope
movl
pop
rolb
inc
push
rorl
pop
daa
stos
roll
inc
cmpsb
loopne
cmp
xchg
xchg
cmp
lods
loope
add
sbb
cmc
sub
push
enter
push
sub
addr16
loop
out
or
cld
fldl
je
adc
pop
add
mov
push
xchg
mov
add
ja
inc
dec
call
imul
push
and
add
and
fidivl
pop
dec
fstpt
inc
loop
or
mov
or
mov
sbb
jo
fsubs
push
lea
je
addl
add
sbb
inc
outsb
pop
in
push
repnz
mov
movl
in
in
or
lea
nop
push
and
leave
sbbl
cmp
cmp
jg
cmp
jge
pop
fistpl
inc
jle
clc
jge
mov
pop
fmul
mov
aaa
hlt
push
push
adc
pop
sub
dec
push
cmp
add
pop
jbe
adc
adc
pop
jge
add
and
push
jmp
test
jne
and
push
jno
jo
mov
mov
into
and
pop
mov
or
test
or
hlt
adc
push
inc
xor
lret
dec
and
arpl
mov
insb
addb
add
push
pop
push
dec
sbb
cltd
movsb
pushf
sbb
cs
pop
jmp
movsl
sbb
les
popa
inc
lret
adc
addr16
sbb
les
dec
and
xlat
or
mov
addb
or
ja
push
pop
inc
and
push
jmp
movzwl
add
xchg
mov
test
sarb
and
dec
cmp
les
adc
pushf
fildll
adc
xchg
sub
testb
mov
in
adc
add
aas
pop
mov
sbb
pop
out
and
inc
jg
pop
enter
int3
pop
andb
or
adc
das
xchg
call
imul
vprotw
lods
imul
adc
mov
dec
dec
dec
lock
adc
mov
mov
in
movsl
mov
mov
add
mov
in
pop
sbb
loopne
add
fmul
pop
sub
dec
fadds
dec
daa
cwtl
fisttpll
sub
jle
fildll
jae
orb
adc
push
shll
and
xor
mov
rorb
pop
addb
rorb
mov
das
aas
jne
fsubl
sahf
pusha
sub
sub
or
push
push
je
movsb
jns
dec
sbb
or
xor
inc
inc
push
xchg
pusha
push
pop
scas
xor
sbb
add
push
sahf
bswap
and
lock
or
rolb
push
js
hlt
imul
dec
cmp
in
dec
and
push
cmp
lock
dec
sahf
pop
leave
lock
lock
mov
mov
push
ret
and
cmp
inc
cmp
inc
adc
mov
popa
xchg
iret
out
sahf
dec
popa
mov
mov
push
inc
fidivs
and
pop
ja
rorb
and
or
xchg
xchg
call
enter
push
or
lahf
ds
push
nop
and
mov
or
lock
xor
adc
push
movsl
inc
or
inc
andb
movsl
fadd
bound
out
sarb
arpl
mov
fsubs
aas
addb
ror
inc
add
daa
add
test
and
outsb
addb
and
or
pop
scas
push
das
adc
or
mov
mov
outsb
push
mov
icebp
xorb
jns
add
lea
sub
les
out
aas
mov
inc
cmp
add
adc
dec
stos
pop
pushl
divl
rorl
jp
xchg
mov
push
stc
inc
insb
test
pop
outsl
or
xlat
in
pusha
add
popa
dec
sbb
mov
mov
aam
aam
adc
xchg
fcomps
cld
push
cmpb
push
pop
inc
dec
or
cld
cmp
or
xor
lock
mov
xchg
in
sub
inc
xor
sub
add
adc
and
add
cmpsl
pop
adc
xchg
pop
or
cmp
or
fwait
ss
dec
xchg
hlt
push
sbb
jbe
mov
cmpsb
push
xor
sbbb
pushf
imul
movsl
mov
lds
aam
nop
xchg
sti
fstpt
dec
and
adc
ds
aad
bound
mov
xchg
and
stc
in
sahf
inc
pop
inc
cmp
insl
lock
xchg
shll
scas
mov
test
jns
or
add
aam
nop
inc
int3
cld
jb
jo
arpl
mov
aas
lock
std
test
cmp
jge
jmp
mov
jle
incl
divb
jmp
and
or
out
mov
rcr
adc
sbb
inc
inc
fidivs
and
sarb
sub
shlb
and
test
and
push
pop
es
pushf
inc
out
mov
enter
adc
fadd
call
aam
leave
jae
inc
js
mov
rolb
mov
add
xchg
jbe
xchg
adc
lret
xchg
lock
lea
mov
xchg
es
sub
sub
add
sbb
cmp
sub
mov
mov
btr
push
xchg
lods
push
mov
adc
popl
in
stos
mov
fldenv
mov
jne
notl
adc
sub
enter
sarl
mov
and
sbb
lds
xchg
xor
mov
push
pop
cmp
shlb
xchg
clc
jmp
sbb
mov
addr16
aaa
push
ljmp
sbb
sbb
dec
inc
dec
adc
test
or
xor
les
mov
jmp
daa
mov
push
dec
inc
jge
add
ret
adc
aas
push
cmpsl
loop
push
leave
pop
sub
cmpsl
mov
fs
adc
repnz
push
out
sub
mov
fimuls
imul
adc
lea
rolb
out
adc
inc
fildl
inc
data16
idiv
sub
outsl
test
test
adc
jo
test
sub
push
dec
stos
xor
adc
rcrl
sbb
mov
dec
je
mov
imul
jno
cwtl
inc
gs
push
and
in
jmp
and
dec
push
loope
xchg
mov
or
cmp
leave
mov
outsl
adc
daa
imul
shrb
popa
or
jg
adc
inc
mov
nop
ret
adc
rcl
and
cs
sbb
cmp
movsb
push
inc
dec
jmp
mov
movl
outsb
adc
pop
adc
inc
sbb
pop
lret
xchg
pushf
jae
insb
push
mov
cmpsl
pop
jmp
and
addr16
and
push
xor
or
pop
lds
or
add
hlt
mov
or
push
iret
sbb
jnp
add
sbb
cmp
outsl
ret
and
or
test
subl
mov
aad
xor
inc
cmc
cmpsl
push
mov
jo
mov
push
int3
xlat
sbb
fwait
ret
xchg
ret
aas
hlt
lcall
mov
pop
dec
pop
mov
xchg
adc
call
adc
sub
stc
mov
push
aam
pop
loopne
insb
insb
jo
leave
add
mov
add
mov
sbb
arpl
inc
add
push
lret
or
pop
sub
jnp
add
shll
add
and
sbb
xor
xchg
pushf
das
mov
subl
sub
jne
shll
cmove
pop
js
addb
shl
mov
pop
sub
scas
shrb
inc
dec
jo
iret
je
inc
fisubl
call
xchg
mov
push
mov
insb
ss
cs
jno
in
ljmp
push
xchg
xchg
mov
test
sbb
cmp
sbb
mov
rcrl
lcall
in
sbb
or
ret
ja
cmp
mov
out
inc
rcrl
or
adc
dec
sbb
out
xor
push
mov
movsl
push
aas
xor
aam
add
inc
cs
iret
das
or
jb
das
scas
jecxz
fstpt
and
cld
pop
cmpsl
push
fadd
mov
ja
mov
and
loopne
add
addl
daa
not
or
or
movsb
mov
adc
mov
sub
push
and
adc
mov
pop
push
add
das
jo
or
sub
push
shll
sbb
fs
cmpsl
jecxz
sbb
pop
adc
test
mov
sbb
loope
or
mov
lahf
or
xchg
arpl
call
test
or
enter
cli
and
and
inc
or
adc
mov
and
fcoms
add
loop
rolb
mov
or
or
cmpsl
fst
lcall
pop
lea
fdivs
or
pop
push
lret
or
inc
shrb
arpl
or
push
aaa
movsl
sub
and
test
and
pop
push
lods
pop
mov
insb
mov
dec
loop
sbb
clc
iret
xchg
push
inc
push
lea
xor
call
or
insl
nop
jb
xchg
sbb
mov
adc
mov
adc
mov
xchg
xor
nop
lea
es
iret
cmpsb
and
call
lds
sub
push
cwtl
insl
movsb
inc
nop
jb
lods
push
jmp
sub
mov
lahf
ljmp
mov
push
add
xor
stos
inc
mov
adc
ja
pop
clc
jmp
call
dec
jmp
push
out
and
sbb
xor
mov
cmp
daa
dec
push
mov
or
dec
mov
dec
pushf
inc
xchg
fisttps
enter
imul
nop
or
jo
inc
ljmp
xchg
jmp
xchg
push
dec
and
mov
jae
out
pushf
dec
ljmp
adc
aad
insb
les
test
cmp
int
sbb
mov
das
pop
adc
push
mov
xchg
xchg
jl
mov
xchg
mov
clc
mov
iret
pop
test
add
in
jmp
subb
mov
rorb
add
popa
in
inc
pusha
test
stc
jl
faddp
adc
mov
dec
in
sub
aam
mov
aam
imul
cltd
push
pushf
mov
les
aaa
dec
and
pop
shrl
loop
lea
pop
pop
pop
leave
aad
push
test
int3
nop
adc
fmulp
add
inc
and
inc
addr16
fiadds
cmp
sar
push
or
insb
adc
cmp
clc
movsb
push
popf
sarb
inc
cmp
sub
sub
push
aaa
adc
xor
loopne
sub
roll
test
data16
arpl
rcr
and
adcb
pop
pop
push
inc
sbb
out
sub
dec
les
xchg
dec
mov
dec
dec
mov
mov
or
loop
sbb
adc
rcll
cltd
cmpb
xor
or
pop
sbb
repnz
adc
jp
hlt
loopne
test
pop
enter
pop
sub
inc
je
shr
iret
in
mov
loopne
or
cltd
cmp
jle
int3
jle
push
insb
push
repnz
enter
lock
aam
jl
jge
lock
in
enter
xchg
pop
cmp
fcoms
xchg
push
es
xchg
sbb
jmp
adc
loopne
test
xor
adc
test
lods
and
push
cltd
popf
cmp
loopne
das
pushf
pushf
popa
repnz
push
push
lock
cwtl
int3
pop
repnz
cwtl
push
jno
xchg
push
imul
add
ret
lret
insl
adc
jmp
je
jg
mov
push
add
daa
inc
push
bound
repnz
repnz
dec
and
sbbb
pop
shll
movsb
push
xlat
sub
dec
out
fcomi
loope
adc
ret
or
movsb
and
dec
pop
jnp
xor
repz
in
les
cmp
cltd
sub
inc
inc
xchg
pop
test
and
push
daa
push
jb
arpl
mov
or
push
sbb
xor
add
packsswb
out
in
sbb
dec
aaa
mov
mov
adc
inc
fisttpl
call
pop
insl
xchg
pop
aaa
mov
js
out
sbb
shlb
jle
ficoml
xor
mov
inc
fnstenv
sbb
rcrb
lds
or
ss
cld
jo
inc
pop
and
test
adc
pop
xchg
or
jl
dec
daa
inc
sub
test
pusha
mov
xchg
xchg
sbb
cmpsb
test
xchg
sbbl
xchg
test
dec
add
dec
adc
and
jnp
mov
push
je
inc
cmpsl
movb
cmpsl
fcoms
xchg
mov
in
rclb
testb
inc
nop
add
or
insb
and
and
pusha
test
lret
leave
adc
sub
jnp
scas
inc
add
push
and
orb
inc
xor
add
xorb
sub
inc
arpl
mull
push
mov
inc
sbb
lret
pop
sub
mov
dec
pop
dec
xor
lods
pop
xchg
push
push
or
popa
xor
sbb
out
clc
mov
push
mov
push
add
negl
sbb
inc
imul
or
sbb
and
sub
sbb
push
cs
pop
nop
pop
add
test
add
addr16
mov
xchg
and
add
scas
movsl
add
sbb
cmpb
cmpsl
or
sbb
cmpsl
nop
stc
dec
or
xorb
push
or
jns
mov
inc
push
xchg
loope,pt
or
and
push
addl
pop
popw
loop
movsb
and
testb
jo
movsb
add
sub
push
rolb
adc
test
popa
xor
andl
inc
or
or
xchg
je
mov
addb
add
pop
lds
or
mov
fsts
cltd
sub
dec
lds
add
cli
mov
pop
stos
cli
insb
mov
push
xchg
push
and
xchg
jg
loopne
pop
sti
adc
pusha
or
adc
clc
sbb
ret
data16
add
daa
dec
sub
rclb
out
popa
push
pop
shlb
cmpl
sti
clc
aad
add
sti
aas
insl
sbb
fsubs
fwait
adc
add
inc
or
push
incl
cmp
lret
icebp
sub
jae
jmp
test
mov
pop
in
sbb
xor
stc
add
nop
pop
adc
mov
and
rclb
mov
mov
out
dec
mov
mov
xchg
or
fmuls
or
mov
inc
shlb
xchg
or
iret
lret
ret
fiadds
jo
push
push
mull
lock
mov
add
fsubs
orl
xchg
dec
sbb
xchg
mov
dec
mov
mov
cmp
daa
sub
ret
addr16
lock
cwtl
xchg
je
std
dec
ss
sahf
sar
in
fsubrl
lods
adc
jg
add
or
addb
inc
fs
das
xor
lock
lret
stc
cmp
jge
mov
cltd
ljmp
mov
push
lock
test
add
into
xchg
and
lods
lods
nop
sbb
xor
sub
ds
call
or
rorl
test
shrb
cwtl
xchg
jl
fcmovnb
mov
ret
mov
aad
frstor
xchg
sbbb
fsubrs
data16
dec
iret
mov
jmp
mov
pop
fs
outsl
pop
cmp
into
push
inc
les
es
inc
movsl
popa
lds
add
adc
push
dec
pusha
sub
sbb
dec
or
cmp
test
fiadds
sti
jmp
mov
test
lret
scas
stos
pop
or
pop
add
loopne
dec
js
sbb
and
fstl
jge
sbb
adc
xchg
push
pushf
adc
decl
push
or
insl
mov
out
or
aas
stos
add
cmpsl
mov
xchg
sbb
xor
rcrb
aam
leave
fbstp
add
std
cmpsb
nop
cmp
push
mov
ror
js
sub
leave
ret
sbb
sub
push
inc
fcmovne
cwtl
inc
mov
fimuls
push
add
and
fwait
sbb
pop
inc
and
jmp
inc
and
pushl
call
push
xchg
ss
ja
cmp
xchg
pushf
inc
pop
fcoml
sbb
push
mov
mov
shlb
sbbb
add
outsb
ljmp
and
lahf
pop
inc
sbb
xlat
push
cmp
lods
movsl
loopne
sbb
test
test
test
sub
sub
dec
repnz
ret
xor
js
jecxz
out
jne
out
and
adc
pop
fwait
push
or
push
xor
mov
xlat
sbb
fwait
outsb
negl
pop
mov
lahf
call
sti
insb
xchg
rolb
sbb
nop
test
dec
jg
sbb
or
addl
adc
and
cmp
push
jbe
jmp
fs
fsubrs
dec
loope
and
push
mov
xor
push
shlb
out
push
xchg
xchg
fwait
mov
int
pushf
cld
inc
iret
inc
pusha
adc
sub
push
jns,pn
jge
add
and
mov
add
call
addr16
adc
add
test
loope
in
and
mov
insb
xchg
mov
popl
add
test
xor
les
add
enter
out
pop
inc
push
xor
jne
nop
and
cmp
shrl
mov
je
fcmovb
or
xlat
adc
dec
sbb
pop
loope
rorl
pop
pop
out
sbb
or
jo
mov
lods
insl
test
or
cmp
inc
in
lahf
cmpsl
mov
nop
addb
pop
pop
maskmovq
idivl
dec
sbb
adc
test
or
sbb
add
sbb
xchg
inc
mov
popf
or
fdivr
dec
ds
or
outsl
sbb
add
mov
xor
fnsave
sbb
push
inc
lret
adc
and
sbb
push
add
xchg
lods
sub
fiadds
sub
sbb
ss
mov
mov
add
es
or
sub
or
popa
rorl
xchg
inc
add
fwait
inc
sbb
testb
stos
sub
xchg
add
and
repnz
xchg
mov
cmp
push
or
rcrb
clts
push
xchg
fimull
sub
lahf
add
and
inc
pop
and
mov
add
lahf
or
xlat
xor
aam
lock
xor
mov
xor
jb
dec
cmpsl
mov
mov
cltd
xchg
and
dec
or
cwtl
test
out
dec
movsl
push
cmp
or
out
decl
nop
dec
push
in
or
inc
and
hlt
sti
inc
enter
dec
or
sbbb
dec
or
sub
or
pop
roll
mov
lea
lock
sbb
out
or
mov
inc
aaa
push
sti
bound
in
scas
push
scas
outsb
outsb
arpl
mov
add
jne
add
xor
loopne
or
lret
aam
outsb
dec
divps
in
or
xchg
daa
add
pop
je
or
pushf
dec
clc
jnp
xchg
jb
mov
adc
xlat
les
and
sub
mov
xor
jo
xchg
inc
inc
ret
movsb
inc
push
sbb
popa
adc
jle
adc
xor
ret
test
mov
mov
popa
popa
jl
add
sub
dec
add
pop
roll
or
lahf
xor
movsl
aam
nop
test
lahf
outsl
cmovp
lock
dec
xchg
ljmp
jbe
mov
lea
cmp
and
iret
mov
push
mov
into
lahf
xchg
mov
lea
adc
daa
adc
ja
adc
mov
pop
pop
in
test
lock
pop
aas
lock
add
inc
sbb
sub
insl
pushf
decl
add
test
xor
or
pop
ret
push
loope
xchg
and
adc
sub
int
xchg
popf
push
adc
mov
push
pop
fimull
iret
push
es
rcrb
jecxz
and
pop
sbb
jp
mov
pop
adc
enter
pop
cltd
jecxz
sub
iret
fsubl
jnp
into
shl
sbb
mov
movsl
dec
stc
push
pop
xchg
je
xor
cmp
add
imul
mov
or
sub
jo
in
xorb
and
sbb
setae
rclb
fbstp
inc
jl
cmp
ss
cmp
xor
adc
add
inc
loop
dec
jns
or
and
mov
cmp
xchg
or
and
or
push
add
pop
aad
mov
adc
lods
xchg
or
adc
test
add
lds
jle
mov
lahf
sbb
add
sbb
addr16
cwtl
sub
sbb
add
sbb
sbb
popf
stc
int
or
push
pop
aas
jnp
nop
daa
mov
dec
or
shrb
cmpb
or
inc
mov
int3
push
add
sbb
mov
outsl
dec
dec
nop
iret
loop
out
test
out
adc
scas
sub
and
add
sbb
pop
dec
or
ljmp
pop
insb
insb
stc
loop
sbb
pop
mov
pop
adc
ret
pop
es
es
loop
push
xor
and
test
inc
xchg
mov
dec
aas
add
mov
add
addl
add
pop
push
or
pop
or
or
or
add
outsb
add
adc
add
adc
push
or
outsl
jns
dec
shll
mov
xor
shl
xor
cmp
adc
mov
push
add
sbb
pusha
jbe
jb
mov
dec
jb
adc
mov
jp
or
popf
imul
mov
jbe
dec
fimuls
in
in
jmp
xor
and
subb
call
hlt
into
sub
int
lods
add
loope
xchg
out
out
add
mov
out
mov
sbb
stos
lds
jae
add
imul
or
lar
add
pop
mov
adc
mov
pop
popa
jno
lret
cmpsb
imul
dec
shll
gs
inc
add
int
add
or
mov
jmp
xlat
push
lock
call
aaa
ret
or
rcr
cmpsb
xchg
dec
pop
sub
in
jns
out
inc
cmpsl
cmpsl
xorb
hlt
push
pusha
fstpl
fwait
dec
imul
popa
out
insb
adc
incl
mov
pop
mov
xor
push
xchg
inc
add
in
pusha
mov
mov
pop
idivl
sbb
adc
dec
or
inc
and
inc
xor
xchg
mov
cs
outsl
mov
daa
xchg
push
inc
insb
lods
lods
rcl
dec
test
adc
sbbl
cltd
addb
pop
test
or
adc
enter
push
dec
pop
pop
popl
xor
lods
push
jo
bound
cwtl
fcoms
inc
cmp
out
dec
stos
dec
mov
push
popa
nop
pop
pop
pop
xor
mov
scas
add
insl
rcl
jne
add
je
push
btc
inc
scas
or
cwtl
fmuls
adc
push
xchg
or
xorl
jne
adc
sub
inc
pop
push
cmp
mov
dec
jmp
push
cmp
or
pop
outsb
adc
mov
sbb
pop
add
mulb
pop
stos
dec
arpl
and
xchg
or
push
loope
inc
mov
cmp
xor
xchg
xchg
inc
xor
inc
loope
test
insb
cld
jl
ljmp
das
or
das
lret
jae
jbe
mov
cld
xorl
lcall
cwtl
test
sub
in
pop
jb
insb
mov
adc
or
xchg
pop
mov
or
sub
rcrb
dec
sub
cmpl
add
jno
lahf
or
pop
add
shll
cmpl
or
enter
xchg
or
into
adc
insl
add
xor
in
pushf
andb
adc
and
push
call
test
sbb
jmp
sbb
or
push
inc
jbe
adc
add
and
adc
and
or
loope
pusha
sbb
in
push
lret
cmp
push
jl
lods
repnz
imul
test
repnz
addb
sub
sahf
outsb
movsl
test
xor
subb
in
lods
xchg
xchg
jo
push
jge
add
adc
loope
icebp
loope
popa
pop
add
jae
loope
fs
jnp
fisttpl
mov
or
es
sub
xor
or
pusha
fs
add
adc
test
xchg
stos
loope
xor
push
inc
sub
xor
sbbb
push
mov
pop
jnp
mov
or
sbb
loopne
xor
add
and
fdivr
inc
xlat
movsl
add
popf
jg
push
jmp
mov
and
nop
mov
inc
pop
cmc
mov
mov
call
call
daa
sub
fwait
and
mov
adc
cwtl
add
sub
add
lock
push
addr16
and
cmp
and
in
cmp
pop
xor
shll
je
sbb
sub
lods
mov
rcrb
mov
sbb
sbb
jmp
rol
xlat
es
cmpsw
add
mov
mov
xor
mov
xchg
rclb
sub
stos
or
mov
add
out
add
cld
add
in
sbb
push
je
pop
push
pop
add
orl
push
repz
xchg
movq
pop
add
sahf
test
sub
or
inc
jo
addb
sub
loopne
frstor
out
imul
and
lds
inc
lds
ss
nop
adc
push
jno
and
aaa
or
out
je
adc
lods
dec
or
and
je
insl
and
test
mov
and
pop
and
adc
in
xchg
outsb
xor
or
pop
pop
fidivs
or
jns
mov
and
je
cwtl
sub
xchg
cmp
cmp
sti
je
sub
push
push
adc
imul
xchg
ret
pop
add
fisubs
add
or
ret
jge
adc
insb
scas
rclb
mov
scas
dec
add
mov
test
cmpsb
mov
add
add
sti
mov
inc
das
cmp
mov
jmp
pop
and
pop
jne
fwait
mov
dec
inc
stos
fisttpll
insb
pop
add
int3
into
push
or
addb
test
in
xchg
into
pop
cld
add
cmpb
in
pop
mov
or
aaa
xchg
addb
mov
or
pop
dec
test
cmpsb
sub
adc
cmp
xchg
fists
add
fadds
add
adc
mov
scas
mov
add
dec
shlb
or
pop
lahf
dec
adc
push
inc
sbb
inc
or
and
add
cmp
addl
test
xor
and
or
sbb
inc
cmp
jmp
mov
dec
lret
and
fisubl
xor
xchg
ds
pusha
push
scas
pop
insb
test
fcmovnbe
add
adc
nop
jmp
scas
js
push
xchg
das
jg
cmp
or
adcb
adc
and
push
sbb
jg
or
add
mov
nop
inc
arpl
inc
mov
mov
dec
ffree
les
push
adc
shlb
mov
jmp
push
ficoms
sub
mov
add
push
orl
sub
or
test
outsb
mov
push
xchg
stos
jns
pop
jmp
xor
or
cmp
sbb
imul
cs
adc
push
xor
mov
pop
pop
mov
or
imul
mov
pop
adc
add
sub
jnp
add
adc
push
int3
push
sub
pop
lahf
mov
mov
movb
and
mov
std
fcoml
cmp
data16
and
imul
jno
push
xor
cmp
pop
sub
mov
jmp
jnp,pt
jb
push
mov
in
fistpll
sub
pop
fcomip
sbb
push
xchg
sbb
dec
adc
popa
and
pop
aam
js
dec
adc
dec
pusha
movsl
push
lods
xchg
fcomp
cmp
xchg
movb
add
push
and
adcb
push
insl
or
lds
mov
test
mov
and
and
adc
pop
adc
push
lock
sti
pop
fsts
mov
mov
stc
leave
sub
add
mov
inc
fsubs
adcb
add
xchg
popa
inc
lahf
mov
mov
add
and
or
sub
and
inc
dec
leave
mov
cmp
fbstp
add
js
dec
sub
jb
pop
xor
hlt
sbb
push
je
das
aaa
push
or
add
xchg
mov
imul
and
in
movl
jnp,pt
push
sub
inc
testl
add
ss
pop
pop
sub
cmp
push
imul
push
pop
loopne
scas
jne
adc
andl
push
add
and
insl
arpl
popa
jne
xorb
dec
add
sbb
sbb
les
ret
jnp
adc
es
mov
xchg
add
or
mov
out
or
outsl
je
dec
inc
dec
sub
fistl
adc
sub
stos
push
pusha
gs
cmp
pop
pop
push
and
repnz
pop
or
and
pcmpeqb
sub
shrb
test
xor
ja
and
orl
out
xor
and
and
aam
mov
dec
adc
jl
sarb
sub
mov
sub
or
cmp
orb
or
push
das
insb
and
das
push
ret
ljmp
test
dec
jae
pusha
shrl
iret
xor
push
adc
push
pop
mov
sbb
jmp
test
sub
ds
or
inc
xchg
lret
cmp
dec
fidivs
xor
cmpsl
push
mov
jl
loope
mov
and
mov
lea
int3
notb
sbb
insb
imul
sub
adc
dec
adc
xchg
xor
adc
test
and
xor
cmp
inc
add
dec
mov
punpcklwd
cmp
dec
and
adc
icebp
xchg
jp
hlt
or
jnp
jmp
push
sbb
in
push
stos
pop
std
arpl
arpl
testl
lret
sub
sbb
adc
aad
test
push
add
mov
dec
hlt
ret
imul
ja
mov
aam
ja
jno
adc
call
push
test
sub
and
test
push
sbb
int
xor
add
adc
das
in
xor
or
push
es
inc
sar
jns
add
es
xchg
sbb
xor
fbstp
repz
les
or
cmpb
enter
add
xor
add
lods
xchg
adc
inc
sbb
add
movl
mov
sub
fldcw
ret
dec
mov
in
inc
arpl
xor
mov
shl
jmp
xor
outsb
movsl
pop
xlat
in
addl
xchg
and
jbe
push
xlat
dec
xor
or
jae
loope
xor
or
sbb
mov
cmp
mov
sbb
mov
cmpb
or
adc
dec
jmp
add
add
push
mov
add
lock
insb
mov
or
leave
shlb
sbb
jbe
fldl
inc
or
and
ret
daa
sub
lret
je
jns
rcrb
mov
clc
add
or
push
fwait
sbb
outsb
pop
xchg
mov
in
lret
hlt
sbb
in
adc
jne
insl
sub
jne
mov
xor
fcoms
leave
cmp
dec
cmp
or
push
dec
aam
push
roll
mov
xchg
sub
xchg
push
leave
lock
sti
lea
aam
pusha
mov
in
jne
and
or
mov
lods
in
pop
ja
nop
xchg
fsubrl
push
call
mov
add
push
and
clc
sbb
push
ss
add
push
dec
add
adc
add
aaa
pop
inc
rcl
adcl
shrb
and
mov
mov
and
sub
sahf
xchg
or
pusha
fstpl
fwait
daa
mov
inc
sbb
inc
push
dec
mov
dec
movsl
outsb
push
inc
cmc
sahf
or
xlat
movsl
test
mov
test
dec
pop
dec
loope
addl
xchg
xor
adc
cli
int
insb
jo
call
sti
fisttpll
pusha
enter
jmp
pop
adc
gs
fidivs
xorb
sbb
out
pop
push
dec
cmp
mul
test
pop
out
sbb
mov
adc
idivb
adc
xorl
xor
sbb
mov
add
xorb
push
loope
stos
cmp
arpl
sub
xchg
sbb
xor
push
addb
add
mov
fisttpl
test
xor
or
popa
fwait
adcb
xor
lods
pop
testl
iret
in
ror
pop
cmp
cmp
int
subb
loopne
lods
insb
dec
clc
or
inc
loop
push
testl
xchg
adc
or
dec
js
pusha
push
mov
dec
xor
fidivrl
call
lock
mull
pop
lret
ljmp
shrl
sub
nop
mul
mov
fistpll
cmp
cmp
push
dec
imul
push
icebp
push
in
flds
sub
or
mov
subb
pop
ja
xor
js
fwait
int3
push
fptan
sub
inc
sub
push
adc
or
pop
je
or
sahf
or
and
or
testl
adc
inc
leave
lcall
adc
and
inc
push
das
adc
dec
aaa
adc
xor
adc
sbb
jo
ret
push
jne
gs
loopne
mov
and
lock
mov
dec
jo
jne
mov
xor
sbbb
mov
push
out
sarb
adc
cs
inc
jbe
adc
push
adcl
add
xchg
xchg
loope,pt
push
xchg
movsl
xchg
sbb
mov
adc
mov
int3
adc
add
out
rcrb
inc
sbb
and
sub
insb
jle
mov
movsb
and
inc
dec
sub
lret
dec
pop
loopne
shll
enter
jl
add
popf
xorb
adc
adc
add
js
jecxz
sub
push
mov
movsl
and
jle
cmpl
cmp
bound
test
pop
imul
ss
popa
sub
fucom
ss
adc
outsb
adc
loope
sbb
test
push
sbb
jecxz
jl
add
or
pop
ljmp
add
dec
sbb
jp
xor
dec
sbb
jecxz
pop
lret
mov
xchg
cmp
push
dec
ficoms
mov
lea
mov
push
jnp
push
sbb
inc
push
cmp
data16
lods
sbb
or
cltd
jmp
adc
mov
jl
mov
aaa
shlb
cmp
xor
jnp
lods
pop
in
int3
sub
pop
pushl
pop
fildl
testl
vmwrite
neg
fs
shr
lea
xchg
or
jo
in
sbb
sbb
push
pop
inc
jae
push
adc
pop
and
je
sbb
inc
cmp
cltd
add
adc
inc
mov
adc
sbb
je
inc
or
and
shrl
push
invd
fbld
sub
je
or
add
add
stos
cli
data16
adc
xor
add
jecxz
sahf
test
adc
push
add
inc
xor
test
or
or
stc
mov
inc
or
push
inc
dec
cmp
pop
jne
xor
cmpsb
push
int
fisttpl
push
or
mov
add
mov
jl
mov
mov
ret
dec
ret
mov
add
push
xor
mov
andb
jne
dec
pop
cmp
insl
adc
inc
int3
or
xorl
jle
add
mov
mov
dec
mov
push
xor
or
inc
sbbb
iret
or
sahf
andl
cmpsb
sbb
incl
adc
dec
std
mov
and
daa
xchg
and
int3
addb
mov
mov
dec
popf
add
mov
add
out
insl
fs
and
js
push
lcall
xlat
leave
roll
mov
sbb
insl
inc
dec
stos
loopne
iret
jne
or
jnp
je
sub
mulb
or
xor
or
test
push
add
hlt
pop
lret
mov
cli
xor
cmpsl
divb
mov
inc
push
jo
push
add
xchg
inc
lods
add
pusha
rorl
push
stos
add
psrlw
dec
dec
or
scas
jmp
xchg
loope
push
imul
dec
xchg
fcoms
cltd
and
mov
dec
aad
pop
sub
or
jl
and
or
cmp
and
dec
xlat
push
ja
cli
mov
cmp
je
and
adc
ja
cmp
lea
imul
outsb
bound
sub
mov
sub
inc
add
xor
mov
pop
pop
popf
inc
subb
or
xchg
push
pop
test
push
je
inc
je
sbbb
mov
xor
pop
aas
add
hlt
out
lret
push
add
testb
push
or
pusha
mov
inc
or
inc
push
gs
mov
jmp
pop
xor
xor
pop
out
pop
mov
add
sbb
xor
cmp
rcrl
adc
cmpsb
sbb
shll
inc
fs
or
or
fildl
jb
sbb
sbbb
push
or
rcl
or
aad
lods
loopne
cmp
pushf
adc
outsl
adc
cmp
jo
rclb
adc
and
nop
ret
jne
mov
or
dec
pop
adcl
cmp
dec
les
pop
adc
pop
bound
in
sbb
dec
mov
adc
loope
push
cmp
mov
adc
mov
sub
movsl
and
mov
shlb
jmp
lds
adc
enter
cld
inc
cmp
adc
iret
outsl
jecxz
xchg
shr
adc
das
mov
mov
xchg
mov
mov
dec
mov
pusha
adc
rcrl
or
pushf
cmp
int3
pop
inc
fnsave
jge
ss
mov
rorb
lods
adc
stc
test
dec
decl
pop
mov
sarl
insb
jecxz
sbb
push
jmp
pop
ret
and
cmp
jne
xchg
or
jne
or
xchg
adc
mov
adc
or
in
xor
xchg
pop
jge
jge
test
dec
inc
repz
xchg
mov
adc
jae
dec
mov
sub
jl
sub
sbb
mov
call
gs
lcall
rcll
jl
fisubrs
icebp
cmp
scas
cmc
or
and
mov
sbb
popf
jmp
mov
cli
sub
adc
adcb
cmc
dec
and
adc
addl
bound
push
push
mov
pushf
pusha
in
dec
mov
sbb
negb
or
pop
sub
cmp
lret
sbb
sbb
push
add
sbb
andb
push
lret
dec
mov
in
sarb
dec
test
fdivr
enter
dec
jmp
cltd
jno
add
sbb
rclb
pop
test
adc
xchg
repz
push
sub
push
pop
lcall
jbe
fdivrs
add
sbb
add
fisttpl
movsl
sbb
test
fbstp
dec
inc
or
repz
mov
and
in
inc
inc
add
sub
test
lock
xchg
lea
test
nop
mov
sub
xchg
jo
arpl
popf
xchg
daa
jecxz
push
in
stos
dec
push
and
rcll
cmp
andl
inc
stos
push
stos
dec
addl
xor
push
adc
pop
mov
roll
ret
mov
cmp
mov
xchg
cmp
dec
cli
dec
mov
ficoml
adc
mov
add
xor
add
pop
mov
call
mov
mov
adc
pop
and
xor
xor
mov
pop
inc
sbb
icebp
cmpsb
push
ss
cmp
mov
dec
lret
mov
jne
cmp
inc
pop
xchg
push
ret
xorl
xchg
movsb
sbbl
leave
push
jbe
imul
fldcw
xchg
fs
sub
jnp
cmpsl
sbb
mov
pop
addb
xor
mov
les
pop
mov
push
test
pop
adc
outsb
mov
test
mov
test
mov
shrb
xor
pop
xorl
rcrl
pop
sub
sub
subl
add
imul
jno
or
cmpsl
fstps
or
std
arpl
rclb
dec
and
pop
mov
and
or
sub
xchg
sbb
pop
xchg
cmpb
jno
pop
and
push
sub
xor
xorb
das
mov
add
dec
out
lea
iret
loope
and
popf
pop
shrl
sub
adc
jl
and
clc
jge
int
loopne
pusha
cwtl
xlat
nop
inc
jno
mov
push
push
inc
or
jb
iret
orb
mov
orb
sub
jg
sbb
aas
and
sbb
fcmovb
flds
rcrb
sbbl
inc
insl
pop
aaa
jns
dec
shll
cmp
nop
xchg
add
add
nop
xchg
add
inc
pop
test
lahf
jle
add
push
inc
pop
cmp
rclb
adc
mov
inc
jo
and
enter
and
aas
xor
fs
xor
dec
push
fs
dec
dec
inc
adc
rolb
cwtl
mov
movhps
inc
push
push
cld
mov
inc
into
push
xlat
mov
mov
push
repnz
xchg
movsb
sbb
and
add
push
inc
lahf
das
fdivl
xor
push
pop
pop
inc
xor
notb
mov
shlb
mov
daa
pop
xor
test
ficoml
jno
pop
ss
lock
or
jp
pop
jle
in
and
adc
push
inc
pop
das
adc
es
and
ds
lea
punpcklbw
in
jbe
ja
ret
or
add
sub
call
adc
pop
int3
sbb
cmpsb
imul
cmpsb
imul
loop
fbld
dec
xchg
push
sub
or
lcall
bound
push
inc
mov
dec
push
mov
pop
xchg
jle
popf
mov
sbb
sbb
cmp
push
add
es
loopne
and
ss
outsb
dec
mov
sub
and
cmp
arpl
inc
jb
mov
or
adc
push
aaa
scas
lret
add
pop
xchg
data16
sub
mov
sub
cwtl
adc
nop
inc
push
fwait
xlat
add
dec
clc
jns
cmp
add
cmc
push
or
insb
dec
xchg
jbe
xchg
nop
add
iret
mov
ss
jo
into
sub
sbb
imul
push
pop
adc
loopne
movsb
mov
push
lret
adc
sbb
mov
xchg
xchg
dec
push
xchg
xor
in
in
int
nop
cld
add
add
mov
push
push
push
jmp
inc
mov
push
scas
or
mov
add
iret
push
out
add
sbb
insb
sbb
mov
lahf
xor
enter
push
pusha
daa
nop
ret
sbb
inc
xor
scas
or
inc
or
add
bound
pavgw
or
push
insl
inc
sub
sub
dec
sti
sub
test
push
or
and
lcall
add
and
adc
jmp
adc
dec
cmp
les
pop
dec
sub
sarb
pop
push
clc
mov
add
mov
add
mov
and
push
cwtl
pop
movsb
add
cmp
mov
insl
je
pop
add
jecxz
nop
pop
jb
pusha
pop
sbb
lods
dec
pop
repnz
jg
mov
inc
jb
faddl
nop
mov
pop
dec
enter
or
sbb
and
cmpb
xor
in
dec
jmp
adc
push
inc
rcl
ss
rorb
pop
inc
push
xchg
or
test
lcall
and
mov
cmp
nop
or
pusha
pop
jo
inc
mov
nop
arpl
jb
or
cltd
or
enter
fidivrl
sbb
jmp
fadds
or
and
xor
ja
dec
push
xchg
sbb
sub
cs
sarl
add
popa
stos
nop
lahf
or
add
cmp
dec
dec
inc
push
jg
jnp
jnp
inc
pop
or
dec
dec
inc
addr16
xchg
xor
daa
and
add
in
stos
cmpsl
aas
xchg
ficoml
xchg
dec
dec
dec
inc
adc
ss
dec
das
add
cmpsl
jge
dec
push
aaa
inc
push
dec
dec
cmp
inc
pop
roll
push
scas
inc
pop
aaa
test
add
push
push
push
dec
sbb
dec
pop
out
inc
add
inc
pusha
ja
inc
inc
push
inc
mov
xor
add
inc
jne
mov
and
sub
xchg
incl
push
lock
enter
adc
fs
mov
nop
lock
xchg
cli
lea
cmpsl
js
clc
sbb
jg
sarl
ss
in
jg
popf
call
icebp
outsb
add
or
mov
adc
imul
out
mov
push
dec
dec
sbb
push
sub
cmp
mov
iret
add
sarb
sti
mov
inc
sar
andb
add
adc
pop
clc
mov
in
sub
xor
int3
adc
push
ret
mov
int3
dec
add
mov
jae
sbb
sub
dec
aaa
or
shll
adc
enter
fsts
adc
or
enter
inc
scas
test
enter
lods
adc
in
imull
adc
pop
add
mov
es
sub
dec
cmp
jne
inc
push
dec
ret
or
jle
cli
and
mov
js
push
or
pop
fmull
and
das
fld
jbe
and
mov
loope
xorl
cmp
insb
mov
push
test
fmuls
jl
jg
xchg
divb
adc
ljmp
aas
mov
pop
nop
ficoml
add
sub
mov
jne
or
push
jnp
fisubs
jne
sbb
cmp
jmp
sub
push
stos
cmp
jb
outsl
push
jmp
jle
sbb
mov
jmp
mov
push
icebp
and
sbb
push
adc
jnp
aad
nop
movups
enter
dec
and
ds
inc
mov
insb
sahf
pop
and
dec
push
and
das
and
ljmp
sti
xor
or
mov
pop
push
out
add
push
pop
push
and
xor
mov
cmpb
jne
adc
inc
jmp
inc
sbb
push
mov
inc
inc
jmp
pop
sub
fcomps
inc
popf
mov
adc
push
inc
test
dec
inc
pop
mov
push
xor
clc
or
sub
arpl
aaa
dec
jae
mov
xchg
mov
pop
jae
inc
pop
ret
fld
rorl
in
mov
xor
inc
push
inc
sub
or
rorl
adc
pop
and
mov
push
push
decl
mov
test
add
and
sub
lea
in
inc
push
mov
inc
and
movsb
mov
adc
aaa
mov
pop
sub
jnp
jmp
js
lret
pop
and
lea
insb
push
cmpl
add
xor
or
stos
push
nop
pop
in
adc
fmull
pop
scas
mov
cs
add
popa
xchg
addb
adc
adc
in
orl
jns
aam
sbb
fadds
and
adc
or
addl
sub
pop
sub
sahf
mov
mull
inc
pop
aaa
mov
loop
sbb
push
mov
or
mov
fildll
jne
das
adc
xchg
sbb
ljmp
push
gs
and
lods
adc
mov
inc
dec
push
adc
leave
xlat
push
xchg
push
xchg
ss
fcompl
cmp
mov
pop
push
push
jo
mov
pop
sub
ret
sub
cmp
inc
js
fs
sub
xor
pop
mov
pop
add
adc
jge
or
add
subb
cmpsb
push
enter
inc
inc
cmp
and
bound
mov
cltd
pushf
dec
insb
mov
add
xchg
xchg
xor
adc
lea
add
dec
cmp
into
push
adc
add
sbb
ljmp
subb
fidivrl
int
dec
js
adc
mov
insb
lock
cmp
sbb
adc
dec
jmp
cmp
sbb
or
or
ret
lods
mov
insb
or
inc
sub
pop
and
cmpsl
xor
sbb
add
push
js
push
push
lret
push
daa
hlt
pop
lods
mov
incl
adc
xor
mov
into
push
cmp
push
xor
push
push
mov
mov
cltd
or
fsubr
call
and
ja
cmp
dec
cmp
jmp
addr16
adc
jecxz
xor
orl
push
xor
add
test
iret
adc
push
sti
je
mov
inc
sbb
imul
xor
int
cli
push
cmp
ljmp
int
inc
push
enter
adc
inc
gs
xor
xchg
cmc
bound
shlb
xor
xchg
sub
push
adc
movsb
dec
cmpsl
sub
rcrl
mov
push
pop
and
mov
jbe
test
mov
mov
pop
adc
sub
adc
fsubrs
pop
mov
xor
add
add
push
or
data16
or
add
push
push
lea
iret
les
and
push
mov
mov
lahf
lea
push
clc
adc
mov
scas
call
inc
push
sbb
mov
out
push
inc
or
mov
xchg
jle
lock
in
les
adc
pop
mov
dec
inc
clc
dec
push
inc
push
cmpsb
js
xchg
adc
or
sub
sub
out
lock
push
or
xchg
xchg
pop
push
xor
push
push
aaa
mov
cltd
adc
and
andl
adc
or
call
inc
mov
ds
hlt
mov
sub
cmp
add
inc
jl
lods
incl
jecxz
push
mov
dec
dec
mov
sbb
pop
mov
add
testb
add
mov
add
fimuls
or
das
loopne
scas
movsl
xchg
test
mov
cli
push
pop
mov
xor
and
in
daa
imul
inc
and
das
or
pop
lret
shll
or
xor
movsl
dec
mov
sub
add
cmp
inc
ret
add
dec
imul
lahf
mov
pop
sarl
or
mov
lahf
xor
mov
movntq
push
lock
les
jae
pop
inc
stos
push
cmpsb
scas
loopne
loop
std
ds
mov
mov
add
lock
or
mov
imul
add
push
add
push
scas
cmpsb
mov
mov
pop
pop
or
push
push
push
arpl
nop
mov
loop
imul
cmpl
jecxz
sbb
fisttpl
loopne
dec
repnz
in
jb
xchg
and
jmp
xchg
mov
xchg
ss
data16
jge
mov
and
lea
popa
push
jl
inc
mov
add
mov
or
orb
insl
mov
cs
xchg
aaa
adc
int3
jo
js
jae
jae
inc
add
in
xor
popf
unpcklps
out
arpl
mov
mov
sub
ljmp
imul
inc
add
mov
jmp
sub
into
mov
arpl
fs
pop
fdivs
mov
cmp
adc
pusha
lcall
pop
arpl
push
cmp
add
sub
xchg
add
or
xchg
outsl
imul
sbbl
pop
mov
sbbb
dec
push
rorl
jns
andl
xor
cmp
push
mov
adc
fimull
rolb
aas
or
or
out
cmpb
outsb
pop
add
test
fstpt
jo
cmp
add
mov
lock
lods
or
mov
dec
mov
dec
orl
dec
jmp
inc
xchg
or
addr16
xchg
xor
bound
divps
dec
out
xor
hlt
lock
or
sub
xchg
add
or
and
hlt
adc
jl
sbb
js
cmp
fisttps
ljmp
mov
mov
dec
insb
sbb
add
add
into
addr16
add
or
push
aas
outsl
jg
int
loope
fistpl
lds
sbb
or
xor
mov
clc
pusha
jb
mov
mov
adc
popa
xchg
fsubrs
cld
jmp
je
add
daa
or
pop
cmpsl
or
mov
mov
sub
jge
xor
and
mov
out
movl
sbb
cmpl
push
xor
xor
add
pop
push
rcl
push
fcomps
rolb
enter
or
loopne
je
jecxz
add
add
roll
cmpl
mov
adc
add
int3
pusha
or
add
inc
adc
cli
sbb
in
jo
int
pop
xor
mov
in
test
arpl
pop
xor
in
lock
mov
and
sbb
rcrl
out
and
scas
sub
xor
xchg
test
jle
outsb
fnstsw
sbb
mov
mov
pop
add
mov
pushf
and
xchg
cmp
inc
add
sbb
pusha
xor
imul
mov
pusha
mov
jo
bound
cld
sub
mov
inc
pop
jmp
inc
mov
adc
pop
sbb
mov
sti
sub
retw
push
mov
pop
popf
imul
jbe
xor
or
and
imul
adc
clc
xor
adc
shl
xchg
mov
cwtl
add
inc
adc
mov
jp
mov
aas
push
cltd
or
dec
js
push
inc
push
cmp
jae
or
ret
push
xor
inc
cmp
push
inc
dec
outsl
adc
sub
or
mov
inc
cmp
adc
mov
mov
sub
je
and
pusha
dec
dec
xchg
or
or
adc
or
lock
push
jbe
or
and
cs
jo
inc
loopne
jne
ret
xor
add
add
mov
jne
ljmp
in
pop
adc
cld
cmp
fcoml
sahf
insb
mov
xchg
pop
imul
int3
mov
adc
adc
or
mov
xlat
mov
lock
ficompl
lea
dec
stos
inc
fsubl
cmc
fildll
lea
lea
jnp
loopne
sbb
ret
scas
sbb
xor
lods
movsl
mov
or
push
add
and
sub
inc
loopne
int
mov
or
arpl
imul
les
cmp
aam
dec
push
sbb
insl
adc
and
mov
outsl
inc
mov
jno
jns
bound
dec
mov
and
xor
mov
sbb
adc
mov
and
jns
daa
cmp
pusha
jnp
pusha
xchg
daa
lcall
jno
adc
push
cmp
pop
xchg
clc
pop
pop
sbb
dec
scas
pop
enter
cmp
repnz
jne
mov
xchg
cmp
movl
in
in
imul
je
or
ret
add
test
sbb
jnp
add
jne
xor
pop
lret
jae
pop
addr16
fimuls
jne
das
push
in
push
das
xchg
popa
mov
addr16
je
daa
and
or
jb
fsubl
mov
negb
xor
adc
dec
repnz
cmp
enter
enter
xchg
pop
outsl
push
mov
les
sbb
out
in
adc
inc
pop
iret
lret
push
inc
inc
std
mov
and
fcompl
push
adc
mov
outsl
mov
push
daa
sub
and
dec
jecxz
imul
or
adc
jno
int3
dec
daa
shlb
aaa
sub
daa
inc
fstl
push
aaa
sbb
add
dec
and
je
ficompl
loope
adc
and
jns
pop
add
js
adc
push
add
cmp
pop
jg
adc
cwtl
cmpb
jb
loopne
xchg
js
jp
mov
push
sbbb
std
mov
add
out
and
out
jb
sbb
push
incl
jmp
xor
xchg
xchg
ja
or
in
and
or
dec
pop
lods
arpl
add
sub
xchg
pop
mov
xor
xor
pop
jge
add
push
movsl
jns
xor
and
jne
addl
pop
and
add
pushf
pusha
xorl
mov
je
test
push
push
sahf
insb
mov
hlt
pusha
mov
sub
dec
shrb
fsubl
test
inc
sbb
xor
or
mov
popa
xchg
adc
jnp
and
or
push
outsl
ljmp
xchg
sub
dec
mov
jbe
mov
pop
mov
or
adc
popf
push
fnsave
mov
and
lahf
or
cli
jle
addl
ds
push
fucom
daa
insb
cld
add
cmp
ja
ret
lods
cwtl
xchg
mov
jb
adc
mov
or
cli
xchg
pop
fsub
outsb
add
gs
and
sub
outsl
add
mov
ret
or
cmp
mov
daa
push
adc
push
mov
rol
and
icebp
sarb
fsubrs
hlt
das
adc
mov
and
adc
nop
add
call
dec
mov
out
and
jg
imul
pop
xor
cwtl
inc
in
call
xchg
and
cltd
ret
or
loopne
add
or
jne
imul
cmp
ret
jge
rorb
cli
mov
and
daa
mov
dec
and
cmpsl
fdivrl
aas
adc
je
xor
add
test
sar
or
inc
add
push
fcompp
sbb
jb
and
sub
scas
push
xchg
or
dec
and
and
loope
add
dec
inc
cli
or
push
inc
nop
add
inc
sub
or
addl
jae
mov
dec
dec
cmp
jmp
or
jmp
sbb
cmp
femms
jmp
por
cmp
leave
xlat
xchg
or
mov
insb
cmp
dec
test
nop
jbe
daa
xor
or
shlb
incl
xor
push
pop
adc
inc
add
fiaddl
cmovle
adc
daa
add
popl
cwtl
dec
inc
jg
es
cmpsb
and
fstpl
mov
or
push
daa
jne
test
mov
addl
or
js
sbbl
and
dec
cmpsb
flds
in
mov
and
aas
addr16
inc
jb
dec
dec
xorb
sub
mov
adcb
in
push
subb
aam
cmp
cmpl
ret
pop
and
mov
mov
das
adc
cmpsl
mov
cmp
enter
enter
add
loop
int
mov
or
xchg
and
and
xor
cmpb
push
jb
cmp
je
cmp
imul
cmpb
adc
pop
fiaddl
lock
aas
cmp
ja
mov
or
imul
add
and
push
and
mov
rol
jp
push
bound
jmp
xchg
push
pop
rcrl
dec
dec
push
pop
rcrb
jle
sti
pop
adc
and
adc
pop
mov
sbb
ljmp
and
dec
and
inc
sub
cmp
pop
loope
xchg
xchg
fadd
push
insb
dec
mov
lock
testb
int
add
shrl
lods
sbb
sub
cmp
cmp
in
dec
mov
sbb
pop
aam
and
inc
push
and
nop
rolb
and
adc
leave
fs
xor
fwait
int3
cmc
int3
and
jo
enter
mov
shlb
cmp
xchg
inc
or
in
insl
or
je
pop
xor
inc
bound
sbb
mov
or
xor
dec
imul
jmp
xor
ds
cmp
cli
mov
pop
cmp
icebp
sub
jb
add
xchg
in
lods
adc
push
inc
adcl
rorl
inc
pop
mov
imul
pusha
sbb
sahf
sub
xorl
push
mov
dec
xor
outsl
sbb
test
xor
jmp
xor
xadd
mov
push
lea
mov
mov
cmp
in
jne
add
fdivrs
mov
push
pop
ljmp
mov
lds
jbe
push
repnz
enter
jle
decl
cmpsl
jge
in
inc
add
push
andb
add
test
or
add
andl
test
imul
mov
outsb
and
pushf
nop
mov
mov
push
cmpl
mov
rorb
inc
cli
sbb
sbb
rorl
gs
push
and
fisubs
lods
xchg
sbb
dec
dec
pop
sbbl
sbbl
stc
add
jne
aaa
and
or
xchg
and
mov
sbb
mov
aad
push
stos
into
mov
or
mov
jmp
mov
imul
int
cmpsb
push
mov
add
or
aam
mov
and
aam
lcall
push
jge
aad
test
scas
in
mov
es
push
sub
add
insl
inc
xor
mov
cmp
xchg
mov
ja
sub
imul
mov
push
xchg
jb
and
push
add
rcrb
push
inc
xchg
sbb
insb
push
xor
push
movsb
push
pusha
or
mov
mov
ja
sbb
mov
cmp
push
cmp
inc
jle
push
fs
or
xor
xor
shll
test
inc
nop
cmp
bound
jo
lds
or
jno
inc
sbb
mov
push
dec
push
sub
dec
inc
test
push
aaa
bound
cmovle
xor
xchg
outsl
sarb
jo
pop
out
inc
sub
arpl
pop
sub
jbe
jl
or
sbb
cmp
mov
inc
add
mov
daa
cmpl
jg
jmp
sbb
andl
frstor
or
orb
add
or
outsl
or
jb
add
or
icebp
add
push
inc
mov
xchg
insb
adc
bound
rorb
pop
aaa
andl
mov
adc
mov
xor
sti
faddl
jle
daa
gs
in
jns
rorb
in
lock
imul
ficomps
in
mov
aaa
mov
and
jne
xchg
sub
adcb
call
js
nop
das
in
xchg
sbb
sub
and
jnp
rorb
or
xchg
jl
inc
fcoms
mov
and
aas
aam
sbb
rcrl
rolb
aaa
push
in
xchg
push
int3
int3
mov
dec
push
jno
enter
jo
in
les
mov
sbb
rcl
and
or
pop
leave
das
jns
pop
bound
xchg
repnz
dec
jae
or
xor
dec
xor
pop
mov
insb
subb
fnstcw
add
adc
lahf
in
test
pop
xlat
xchg
imul
xchg
dec
pop
mov
inc
pop
cmpsl
add
lahf
mov
in
lods
dec
out
dec
dec
cmp
push
add
imul
push
adc
orl
test
xlat
push
cltd
inc
lods
mov
daa
lods
das
or
cmp
jo
cmp
xchg
shll
inc
cmc
insb
sub
or
cld
push
adc
xor
ja
inc
cmp
and
das
adc
push
cmp
mov
iret
aas
mov
pop
enter
push
and
cmp
repnz
mov
mov
pushf
sahf
or
aam
sarb
enter
cs
test
pop
enter
je
clc
pop
fs
sbb
test
inc
mov
test
pop
and
cmp
mov
adc
jbe
push
push
push
push
pop
inc
rorl
fistps
or
inc
push
push
push
nopl
das
push
dec
inc
inc
mov
inc
fbld
dec
mov
call
lods
stos
add
aaa
sub
lahf
xchg
dec
in
xchg
jnp
sbb
sbb
orb
testb
dec
jge
push
daa
leave
sti
add
add
add
push
mov
mov
or
ds
sbb
bound
daa
arpl
adc
sub
add
jp
dec
jne
cmp
push
sar
ret
or
add
mov
mov
inc
hlt
xchg
dec
scas
addb
xchg
rolb
nop
dec
movsb
and
add
mov
ficoml
movsb
or
inc
mov
daa
rcll
push
push
fistpll
add
mov
js
outsb
dec
sub
xchg
test
push
das
rclb
pop
pop
push
call
in
pop
pop
push
fs
add
jmp
lretw
mov
pop
leave
rorl
add
add
sub
mov
add
add
add
fiaddl
aam
into
lret
mov
lret
or
or
or
mov
mov
mov
lret
mov
push
movsb
setle
mov
lret
adc
lret
pop
mov
adc
adc
sub
mov
adc
mov
lret
mov
sbb
sbb
lret
mov
lret
sbb
sbb
sbb
sub
mov
sbb
mov
lret
mov
and
sub
and
sub
mov
and
mov
sub
sub
mov
xor
xor
xor
mov
cmp
cmp
and
and
and
aas
inc
inc
inc
and
and
inc
inc
inc
inc
and
and
inc
dec
dec
dec
and
and
dec
dec
dec
dec
enter
dec
push
push
enter
push
push
push
push
enter
push
push
pop
pop
enter
pop
pop
pop
pop
enter
pop
pop
pusha
popa
xor
enter
xor
xor
addr16
xor
xor
insb
insl
xor
xor
outsb
outsl
jo
xor
xor
jb
je
mov
jbe
js
mov
jge
mov
mov
test
mov
mov
and
mov
and
xchg
xchg
xchg
xchg
and
and
xchg
xchg
cwtl
cltd
and
and
lcall
and
enter
mov
enter
test
enter
stos
stos
lods
enter
lods
scas
scas
mov
leave
enter
mov
xor
xor
mov
mov
xor
xor
mov
xor
xor
xor
xor
ret
pop
xor
xor
mov
mov
int3
mov
rorb
rcl
mov
fcoms
fcmovu
fsubl
and
and
loopne
and
and
loop
in
and
and
out
call
jmp
and
and
out
out
enter
lock
repnz
hlt
cmc
div
enter
clc
stc
cli
sti
enter
cld
std
jmp
iret
out
add
add
add
add
lahf
iret
out
add
add
add
repz
jl
add
add
add
jl
lahf
iret
or
add
add
add
enter
add
add
push
pop
sbb
xor
xor
sbb
sbb
xor
xor
push
pop
and
xor
xor
and
and
xor
xor
es
sub
mov
sub
sub
mov
xor
xor
mov
cmp
cmp
and
inc
inc
and
and
inc
inc
inc
inc
and
and
inc
inc
dec
dec
and
and
dec
dec
dec
dec
and
and
dec
dec
push
push
enter
push
push
push
enter
push
push
push
pop
enter
pop
pop
pop
pop
enter
pop
pop
pop
pusha
enter
popa
bound
jb
enter
addr16
imul
xor
outsl
jo
xor
xor
jae
xor
xor
jne
ja
pop
xor
xor
jnp
mov
orb
test
xchg
mov
mov
and
and
and
and
and
and
and
and
and
and
enter
cmpsb
cmpsl
enter
test
stos
stos
enter
lods
lods
scas
scas
enter
mov
mov
leave
enter
mov
mov
xor
jb
mov
xor
mov
xor
xor
rol
xor
xor
xor
xor
enter
mov
iret
mov
rorl
xlat
mov
fisttpl
and
and
and
and
in
out
and
and
call
and
and
in
out
out
and
and
lock
repnz
hlt
cmc
test
enter
stc
cli
enter
sti
cld
std
lahf
iret
out
incl
add
add
add
add
stc
jl
add
add
add
stc
jl
or
or
or
or
ds
iret
out
add
add
add
repz
jl
add
add
add
enter
push
pop
sbb
enter
sbb
xor
xor
xor
xor
and
and
xor
xor
xor
xor
sub
sub
xor
xor
mov
mov
cmp
cmp
mov
xchg
mov
and
and
inc
inc
inc
dec
and
and
dec
dec
dec
dec
and
and
dec
dec
dec
push
and
and
push
push
push
push
and
push
push
enter
pop
pop
pop
pop
enter
pop
pop
pop
pop
enter
pusha
popa
bound
enter
gs
enter
imul
insb
insl
outsb
outsl
xor
xor
jo
jb
xor
xor
je
jbe
xor
xor
js
jp
xor
xor
jl
jle
mov
orl
xchg
mov
mov
mov
and
xchg
xchg
xchg
xchg
xchg
and
and
cwtl
cltd
lcall
popf
sahf
lahf
and
and
mov
and
and
enter
stos
enter
stos
lods
lods
scas
enter
scas
mov
mov
enter
mov
mov
enter
mov
jb
mov
xor
xor
xor
xor
xor
xor
enter
xor
xor
int3
int
and
inc
and
or
jmp
inc
and
and
inc
and
aas
and
dec
cmp
cmp
cmp
cmp
cmp
sbb
and
or
or
or
in
jecxz
loop
incl
filds
faddl
aaa
and
and
and
and
and
jmp
sub
add
pop
add
adc
in
jecxz
loop
loope
loopne
filds
jmp
mov
flds
add
add
add
add
add
lahf
popa
call
movb
ret
sbb
inc
add
add
add
add
add
add
add
xor
mov
mov
mov
mov
test
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
xchg
add
add
add
add
rorl
dec
mov
add
add
add
add
add
add
add
add
mov
jns
js
ja
jbe
jo
outsl
add
pop
ret
shrb
popl
jmp
push
add
add
add
add
add
add
add
add
inc
jmp
pop
add
add
add
add
add
xor
decl
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
xchg
aas
add
add
add
sbb
add
add
add
cli
pushl
add
add
add
add
add
add
add
add
add
add
cmp
dec
lds
add
add
add
add
add
add
decl
and
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
dec
adc
add
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
decl
roll
rolb
iret
add
add
add
add
add
add
add
add
jecxz
xchg
pop
add
add
aas
and
rcll
mov
mov
add
add
add
add
add
lcall
cltd
add
add
add
add
mov
mov
mov
xchg
xchg
add
incl
add
jl
jnp
jp
jns
js
ja
jbe
jne
je
jae
jo
outsl
add
push
insl
add
add
add
jmp
pop
add
pop
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
ljmp
sub
sub
sub
sub
daa
add
add
add
add
add
add
add
add
lcall
sbb
sbb
sbb
sbb
pop
add
add
add
add
add
add
add
add
decl
or
or
or
lea
add
sub
add
add
add
mov
xlat
jmp
jp
sbb
cmp
mov
jns
scas
xlat
jmp
cltd
test
add
or
shlb
inc
pop
or
rolb
jg
xor
add
lahf
scas
mov
iret
fucomip
aas
call
add
xchg
add
add
add
decl
add
ja
jbe
jne
jae
jb
jno
jo
outsl
add
insl
add
add
ljmp
add
add
add
popa
add
pop
add
pop
add
pop
add
pop
add
cld
add
add
add
add
add
add
add
add
add
call
add
add
addl
jle
jge
jl
jb
aas
adc
jo
push
add
dec
add
xchg
clc
decl
sub
sub
sub
sub
sub
daa
add
add
jmp
push
clc
pop
incb
std
push
cli
add
add
or
add
xor
add
pop
out
add
add
add
add
loope
push
fistps
fiadds
fldl
fildl
fiaddl
fldcw
add
add
add
pop
roll
cmpb
rcr
iret
add
sarb
cltd
mov
add
and
sbbl
jge
jnp
jp
jns
ja
or
dec
das
imul
andb
mov
pop
or
subb
xchg
sarb
push
sub
push
add
add
add
dec
add
dec
mov
adc
cmp
mov
repnz
mov
inc
lret
ret
dec
and
xchg
add
cmp
cmp
insl
jmp
add
lock
add
jmp
rcr
ret
xor
das
addr16
scas
sub
sub
es
jp
adc
and
cs
or
inc
pop
daa
sbb
sbb
filds
jo
pop
stc
adc
or
and
add
cmpsb
stos
dec
or
add
mov
push
xor
push
or
mov
mov
mov
mov
mov
aam
mov
mov
hlt
aaa
mov
xchg
xchg
xchg
xchg
add
or
xchg
xchg
xchg
xchg
adc
sbb
xchg
xchg
xchg
xchg
and
sub
xchg
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
xchg
inc
dec
dec
push
xchg
xchg
xchg
xchg
push
pop
pop
pusha
xchg
xchg
xchg
xchg
fs
xchg
xchg
je
jl
xchg
xchg
xchg
xchg
test
xchg
xchg
xchg
cwtl
pushf
mov
movsb
test
mov
xchg
xchg
xchg
mov
mov
xchg
enter
xchg
xchg
xchg
aam
fsub
xchg
xchg
xchg
xchg
in
in
lock
xor
hlt
clc
cld
inc
inc
inc
fmulp
or
or
inc
inc
inc
inc
adc
sbb
inc
inc
inc
inc
and
sub
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
dec
dec
push
inc
inc
inc
inc
push
pop
pop
pusha
inc
inc
inc
inc
fs
inc
inc
je
jl
inc
inc
inc
inc
test
inc
inc
xchg
cwtl
pushf
mov
movsb
test
mov
inc
inc
inc
mov
mov
inc
enter
inc
inc
inc
aam
fsub
inc
inc
inc
inc
in
in
lock
inc
inc
inc
hlt
clc
cld
enter
int
add
or
enter
adc
sbb
enter
and
sub
enter
xor
cmp
enter
inc
dec
dec
enter
push
push
pop
pop
enter
pusha
fs
enter
jl
enter
test
enter
pushf
enter
mov
enter
mov
mov
rol
int3
enter
rcl
fcomp
enter
loopne
call
enter
cld
xchg
xchg
xchg
out
pop
add
or
xchg
xchg
xchg
adc
sbb
xchg
xchg
xchg
and
sub
xchg
xchg
xchg
xor
cmp
xchg
xchg
xchg
inc
inc
dec
dec
xchg
xchg
xchg
xchg
push
push
pop
pop
xchg
xchg
xchg
xchg
pusha
fs
xchg
jo
js
xchg
xchg
xchg
xchg
addb
nop
xchg
cwtl
pushf
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
mov
xchg
rol
int3
xchg
xchg
xchg
xchg
rcl
fcomp
xchg
xchg
xchg
xchg
loopne
call
xchg
lock
clc
cld
and
and
add
add
or
and
and
adc
sbb
and
and
and
sub
and
and
xor
cmp
and
and
inc
dec
dec
push
and
and
push
pop
pop
pusha
and
and
fs
and
je
jl
and
and
test
and
xchg
cwtl
pushf
mov
movsb
test
mov
and
and
and
enter
and
and
fcomp
loopne
and
and
call
and
hlt
clc
cld
add
inc
sahf
and
or
inc
inc
inc
inc
adc
sbb
inc
inc
inc
inc
and
sub
inc
inc
inc
inc
xor
cmp
inc
inc
inc
inc
inc
dec
dec
push
inc
inc
inc
inc
push
pop
pop
pusha
inc
inc
inc
inc
fs
inc
inc
je
jl
inc
inc
inc
inc
test
inc
inc
xchg
cwtl
pushf
mov
movsb
test
mov
inc
inc
inc
mov
mov
inc
enter
inc
inc
inc
aam
fsub
inc
inc
inc
inc
in
in
lock
inc
inc
inc
hlt
clc
cld
add
mov
adc
sbb
mov
xor
cmp
mov
push
mov
pusha
mov
jo
mov
mov
nop
mov
mov
movsb
test
mov
mov
mov
rorb
fsub
mov
lock
add
sbb
sbb
or
sbb
sbb
adc
sbb
sbb
sbb
and
sub
sbb
sbb
xor
cmp
sbb
sbb
inc
dec
dec
push
sbb
sbb
push
pop
pop
pusha
sbb
sbb
fs
sbb
je
jl
sbb
sbb
test
sbb
xchg
cwtl
pushf
mov
movsb
test
mov
sbb
sbb
sbb
enter
sbb
sbb
fcomp
loopne
sbb
sbb
call
sbb
hlt
clc
cld
add
xor
repnz
or
xor
xor
adc
sbb
xor
xor
and
sub
xor
xor
xor
cmp
xor
xor
inc
dec
dec
push
xor
xor
push
pop
pop
pusha
xor
xor
fs
xor
je
jl
xor
xor
test
xor
xchg
cwtl
pushf
mov
movsb
test
mov
xor
xor
xor
enter
xor
xor
fcomp
loopne
xor
xor
call
xor
hlt
clc
cld
add
add
or
fs
sbb
fs
sub
fs
cmp
fs
dec
dec
push
fs
pop
pop
pusha
fs
fs
jl
fs
fs
cwtl
pushf
mov
movsb
test
mov
fs
mov
fs
enter
fs
fsub
fs
in
lock
fs
clc
cld
add
enter
add
or
enter
adc
sbb
enter
and
sub
enter
xor
cmp
enter
inc
dec
dec
push
enter
push
pop
pop
pusha
enter
fs
enter
jl
enter
test
enter
pushf
mov
movsb
test
mov
adc
enter
ret
lea
xchg
cltd
lahf
movsl
stos
lcall
ret
leave
iret
imul
sub
cmpsb
repz
add
or
dec
shll
cs
dec
shll
inc
inc
dec
push
shll
push
dec
shll
xchg
cltd
xor
shll
movsl
stos
mov
shll
iret
aad
shll
repz
lcall
adc
sbb
lcall
cmp
inc
dec
push
pop
lcall
jo
subl
xchg
cltd
lahf
cmpsb
imul
imul
cmpsb
imul
cltd
shll
sbb
dec
shll
inc
inc
xor
shll
push
pop
pop
shll
addl
movsl
stos
xor
shll
mov
ret
leave
shll
loope
fnstenvs
lcall
push
sbb
sub
imul
imul
imul
cmpsb
imul
mov
ret
leave
iret
lcall
in
repnz
xor
mov
incb
or
push
shll
cs
shll
push
pop
xor
shll
imul
roll
dec
shll
mov
xor
shll
leave
iret
aad
shll
clc
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
leave
iret
aad
out
cmpsb
imul
dec
shll
push
sbb
sub
xor
shrl
xor
inc
inc
dec
shll
imul
jnp
xchg
xchg
cltd
lahf
movsl
stos
dec
shll
leave
iret
xor
shll
loopne
in
repnz
cmpsb
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
loopne
in
repnz
dec
shrl
incb
or
push
sbb
dec
shll
sub
xor
shll
push
pop
dec
shll
jnp
xor
shll
lea
dec
shll
dec
shll
loopne
ss
shll
repnz
incb
imul
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
mov
lcall
or
xor
adc
sbb
sub
xor
shll
cmp
push
shll
imul
jnp
xchg
xor
lahf
movsl
stos
mov
xor
shll
dec
shll
repnz
lcall
or
push
imul
imul
imul
cmpsb
imul
lahf
movsl
stos
mov
lcall
aam
loopne
lcall
shll
adc
sbb
shll
aas
inc
xor
shll
push
push
pop
arpl
xor
shrl
jne
orl
xchg
cltd
lahf
movsl
xor
shll
mov
ret
xor
ror
aam
loopne
shll
add
lcall
sbb
sub
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
mov
ret
lcall
out
repnz
cmpsb
imul
adc
xor
rcll
sbb
sub
dec
cmp
inc
dec
push
push
xor
shll
shll
lea
cltd
lahf
stos
mov
mov
ret
aam
shll
repnz
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
enter
loopne
cmpsb
imul
dec
shrl
adc
and
shll
aas
inc
dec
shll
arpl
dec
shll
jne
addl
stos
dec
shll
enter
shll
out
insb
xor
shl
clc
incb
fimull
movsl
aas
mov
or
mov
inc
mov
or
sbb
lret
je
mov
sub
stc
shrd
adc
mov
mov
add
xchg
mov
notb
sbb
mov
inc
adc
mov
adc
jl
mov
movb
inc
rclb
ret
lods
fstpt
sti
jle
mov
test
push
sahf
jbe
andl
hlt
add
jo
sbb
sbb
mov
mov
jg
xchg
and
push
imul
adc
and
inc
iret
cmp
push
xchg
rcr
jmp
fiaddl
sub
loopne
incl
repz
fsubrs
fistl
pop
aas
push
movswl
dec
lods
mov
dec
or
add
out
movsb
mov
pop
mov
pop
int
hlt
sub
dec
roll
int3
inc
fdivl
mov
ja
xorb
rolb
push
cmp
or
cltd
and
pop
xor
cld
pop
nop
push
test
out
push
add
lcall
sub
mov
add
or
pop
sarb
dec
inc
pop
cld
test
repnz
inc
imul
mov
aam
sbb
sbb
mov
push
jge
movsl
movl
cmp
shl
mov
cmp
ret
aas
jne
push
push
add
inc
mov
inc
inc
mov
mov
out
sbb
popa
adc
test
pusha
or
sbbb
push
xchg
insb
sbb
shrl
inc
in
push
push
add
pop
or
cwtl
shlb
add
xorb
push
adc
push
es
lea
xor
lar
inc
push
jne
and
ss
pop
jg
lea
and
repnz
xchg
xor
push
push
je
mov
rcll
addl
cmp
test
sbb
mov
iret
jo
cs
mov
sub
adc
mov
adc
pop
ret
jbe
push
lea
inc
sti
push
cmp
je
inc
and
sub
push
aam
xchg
push
jbe
loopne
inc
rcll
mov
ss
aas
daa
xor
pop
imul
push
or
daa
mov
cmp
rolb
lock
add
sub
ret
or
pop
and
testl
ds
dec
xor
sub
cwtl
push
sbb
lahf
or
and
fldl
fnstenv
and
movsb
pop
inc
loop
out
and
and
mov
jl
add
xchg
or
cmp
cld
inc
ret
xchg
or
jbe
push
and
push
es
mov
clc
rolb
in
lods
ds
push
fs
cltd
imul
sub
jno
sub
adc
xchg
jo
mov
jmp
and
sbb
rclb
or
fs
mov
out
mov
inc
cwtl
stc
xchg
or
mov
test
jno
jbe
cld
jae
idivb
xor
test
mov
daa
push
dec
adc
fadds
fcoml
pop
inc
les
pop
fbld
inc
xor
cmpsl
pop
loopne
mov
inc
push
loopne
lock
or
adc
loope
pop
outsl
mov
or
or
lcall
leave
push
add
jno
or
ret
out
cmpl
cmp
push
imul
pop
add
nop
lock
lods
sbb
loope
adc
pushl
pop
push
jo
inc
and
push
or
es
sub
add
or
cli
push
imul
call
nop
mov
daa
daa
push
mov
jmp
push
add
mov
push
out
addr16
jb
or
in
or
in
cltd
js
and
xchg
or
cmc
add
and
inc
dec
and
xchg
out
decl
inc
push
lock
cmp
sbb
dec
or
pop
lcall
retw
mov
jno
push
ss
ds
int
mov
pop
push
insb
xor
jmp
cmpsb
or
lock
jns
mov
adc
aad
out
pop
add
and
in
push
xor
pop
es
and
mov
rcpps
mov
call
clc
mov
arpl
mov
imul
iret
sarb
jmp
call
mov
push
jo
lods
stc
dec
je
add
imul
test
xchg
push
ficoml
mov
and
test
insl
dec
or
cmp
sub
adc
jmp
mov
inc
inc
stos
push
sub
popf
inc
push
push
test
cmp
lods
movsb
add
shll
sbb
test
rcr
fadds
or
sub
loope
xchg
addr16
jns
lret
xchg
inc
rclb
lahf
mov
and
dec
lcall
push
inc
xor
ret
stos
push
nop
iret
mov
xchg
xor
jbe
sbb
xor
sysenter
fs
inc
push
xor
push
sbb
cmp
inc
push
sbb
cmp
ds
and
sbb
and
and
enter
es
and
orl
out
xchg
pop
jb
adc
xor
cmp
loopne
add
pop
adc
sbb
cmpb
inc
outsb
inc
and
cmpsb
cmpl
mov
dec
inc
add
or
dec
outsl
sub
lods
int
cwtl
mov
mov
push
jo
inc
daa
pop
dec
pop
adc
dec
and
dec
call
test
dec
mov
push
inc
inc
inc
push
sub
add
xchg
outsb
sbb
pop
mul
pushl
pop
xchg
jo
outsb
mov
adc
js
arpl
adc
int3
add
xor
cld
adc
or
sbb
mov
push
mov
push
mov
loopne
in
jne
dec
shll
insl
push
fdiv
in
cmp
sbb
push
add
mov
inc
fisubl
fcoml
add
add
cmp
adc
mov
je
dec
or
dec
je
pop
sysenter
push
or
jb
fists
xor
js
call
loopne
leave
adc
mov
mov
or
in
inc
mov
or
xchg
add
pop
cmpsl
add
sbb
mov
push
add
and
gs
cmpsl
jae
push
lahf
lds
nop
xor
rorb
pop
repnz
dec
and
push
fadds
xchg
sub
insl
push
fisubs
gs
sbbl
leave
and
inc
and
insb
or
adc
mov
push
xor
jecxz
mov
test
and
or
jl
mov
adc
sbb
push
and
arpl
ds
mov
or
mov
pop
mov
fmuls
cmc
popa
add
mov
or
fidivl
mov
jns
movhps
cmpsb
ss
insb
imul
push
lods
pushf
xor
add
mov
jb
pop
insb
adc
pushf
dec
outsl
sbb
stc
or
or
or
inc
dec
pop
enter
xor
lret
int
fidivl
inc
mov
adc
rclb
pop
aam
scas
mov
lret
or
xchg
xor
test
pusha
push
cmpsl
lock
sahf
daa
and
xor
dec
sub
and
aas
xchg
rorl
pop
push
xchg
shrl
out
rcr
sbb
adc
sub
insl
jbe
imul
std
cmp
addl
xor
mov
or
cmp
sub
sub
test
fdivl
insl
sbb
jb
jb
faddl
push
fistps
inc
jno
add
addl
lods
pop
inc
add
xchg
imul
pop
test
mov
jb
jo
ds
and
push
popf
sbb
fmull
pop
xchg
push
cmp
or
and
sbb
jo
jg
add
pop
push
or
rcrl
vmovups
dec
lds
stos
inc
or
mov
cwtl
inc
aad
push
mov
pop
push
push
adc
and
cwtl
insb
push
add
mov
mov
je
mov
fs
xor
pop
ja
repnz
je
dec
sbb
push
inc
or
add
xor
mov
in
cld
push
adc
inc
or
or
inc
aaa
inc
push
pop
jo
dec
xor
je
pop
pop
and
adc
dec
lods
push
dec
loopne
loopne
sbb
aaa
insb
rcrb
cmp
inc
daa
clc
push
adc
test
clc
push
int3
push
add
push
push
push
dec
mov
push
dec
cmp
pop
test
jns
cmpsb
push
xor
hlt
mov
add
xchg
rorb
push
mov
ficomps
xor
mov
push
loopne
or
dec
xor
fldt
ds
xchg
aam
mov
inc
add
imul
inc
xor
sbb
cmp
mov
dec
fmuls
add
adc
int
insl
inc
pop
xchg
into
jl
jg
arpl
mov
inc
data16
imul
rolb
loopne
imul
into
or
push
outsb
pop
and
test
lcall
les
add
aam
adc
aad
xor
sbb
or
sbb
in
daa
test
in
loope
add
pop
pop
enter
pop
fldt
das
lock
dec
push
adc
dec
or
add
sub
mov
lods
pop
test
push
pop
movsl
inc
cmp
dec
sbb
xor
sub
sbb
inc
lds
dec
mov
push
push
xchg
inc
or
adc
cwtl
xchg
xchg
dec
rolb
rclb
psrad
fmuls
dec
shll
loopne
add
int
fadd
call
sbb
lock
imul
clc
clc
aam
nop
and
inc
adc
inc
adc
lea
jo
lea
mov
dec
adc
and
push
cwtl
sbb
adc
fs
fidivl
cwtl
xor
mov
cmp
test
sbb
mov
jo
inc
and
dec
or
aam
cmp
mov
mov
fwait
dec
cmp
sbb
sbb
or
shll
pusha
sbb
inc
or
inc
call
ret
out
fmull
aam
jo
push
sbb
fadds
xor
pop
add
xchg
pop
dec
pop
sbb
jo
cmp
xchg
insb
cmp
push
adc
jns,pt
insl
or
stos
gs
lock
insl
sub
ss
add
daa
es
mov
cmp
inc
push
add
outsl
or
or
jo
in
jno
dec
push
add
dec
leave
test
jnp
jp
test
xchg
dec
adc
adc
jbe
sub
add
add
popf
cwtl
push
lea
mov
sbb
mov
adc
add
pop
insl
fdivs
ljmp
jg
push
dec
jg
xchg
clc
es
aaa
fiadds
push
pushf
ja
js
dec
cmp
int
jns
decl
bound
nop
cs
jnp
sbb
and
jae
les
jne
and
adc
add
inc
or
add
daa
aaa
lea
cmp
es
jo
sbb
popa
clc
andl
jmp
and
call
je
push
xor
and
cwtl
add
xor
and
adc
nop
imul
int3
and
and
cmc
adc
and
or
jae
inc
es
and
xchg
sub
lcall
fwait
add
scas
stos
pop
outsb
in
pop
lods
pop
adc
sub
adc
dec
popa
aad
adc
call
orb
xchg
push
sbb
inc
and
mov
call
test
in
test
and
inc
out
outsb
or
and
mov
lods
pop
call
and
ret
js
dec
sub
iret
stc
adc
rol
xchg
dec
fsubr
sbb
js
fsubl
hlt
dec
faddl
jne
xchg
dec
fisubs
lea
sbb
mov
inc
and
add
loope
and
and
jns
clc
sbb
and
cmp
sbb
sbb
or
or
mov
aaa
xor
mov
add
mov
pushf
stc
mov
or
stc
movups
mov
popf
pop
sbb
or
jo
push
enter
cmp
test
adc
inc
and
pop
add
psubusb
push
in
aam
std
cmovb
jecxz
pop
mov
jne
hlt
sbb
ss
movsb
adc
or
adcl
jne
lret
add
push
pop
mov
jbe
or
pop
out
xor
xor
enter
inc
inc
loope
xchg
cmp
mov
jg
mov
jmp
outsl
or
xor
pop
leave
rcl
adc
xor
jb
loopne
fiaddl
addb
shrl
icebp
and
sbb
shl
imul
mov
inc
mov
push
jbe
and
or
dec
clc
in
add
pop
mov
testb
sbb
cmpsl
bound
jb
adc
jae
adc
inc
cmp
shlb
dec
xor
fsub
hlt
test
bound
push
or
repz
push
cwtl
sub
fs
icebp
sbb
or
sbb
ja
fbld
cmpsl
inc
pop
imul
or
out
and
enter
cmpsl
aaa
shlb
loopne
roll
mov
xor
adc
out
mov
out
dec
js
rol
and
mov
or
jb
inc
lea
sub
and
xor
dec
jbe
inc
test
and
dec
insl
or
add
dec
and
xchg
adc
or
jae
inc
cmp
jae
aam
or
add
sub
push
popa
and
nop
rol
cmp
pop
jnp
adc
dec
inc
outsl
jp
mov
fists
sub
rolb
in
jmp
data16
inc
sbb
sbb
jmp
sub
jne
daa
es
jb
xor
das
add
adc
arpl
sub
sub
xor
sub
sbb
dec
add
lock
fidivl
jnp
lods
adc
ljmp
xor
sbb
into
jecxz
sub
cmp
in
xor
in
jae
sbb
sarl
jo
mov
imul
xchg
add
cmp
fmuls
jbe
jg
inc
sti
xchg
jo
or
mov
mov
xor
push
adc
inc
sbb
in
or
imul
and
dec
and
icebp
int3
aaa
or
call
push
divl
push
das
adc
jl
sbb
inc
les
pop
jg
jne
and
sbb
xchg
mov
add
fimuls
jle
lea
push
pop
adc
adc
cmp
pop
shrb
xchg
fisttpll
inc
or
cmc
jo
and
cwtl
fwait
push
mov
add
stos
hlt
dec
xor
mov
lcall
cmp
js,pn
dec
inc
adcb
push
add
fs
lret
sbb
nop
adcl
mov
pop
sub
or
sarb
and
mov
dec
jmp
icebp
popa
mov
push
push
dec
out
mov
js
shl
adc
je
push
pushf
and
sbb
mov
fisttpl
mov
mov
das
mov
movl
or
mov
inc
xchg
rcrb
sbb
movb
xchg
mov
push
or
sub
add
ret
inc
shlb
call
and
or
xor
jo
pop
aas
rcll
add
push
push
mov
clc
add
inc
push
xchg
lods
add
aas
clc
daa
push
andl
pushf
dec
push
inc
push
rcpps
addr16
mov
pop
xchg
sbb
add
mov
push
push
push
inc
xchg
into
cmp
es
add
sub
dec
call
cmpsb
mov
add
imul
pop
cmpsb
or
arpl
fistl
bound
dec
ret
jmp
push
fmuls
xchg
push
sub
push
adcl
pop
enter
cmc
add
jmp
pop
mov
push
inc
mov
or
xlat
inc
mov
cli
jp
xorl
jl
ds
and
loop
imul
cmpsl
dec
pop
call
mov
vmovdqa
or
mov
mov
mov
push
sbb
mov
mov
enter
negl
inc
sub
dec
sub
stc
mov
mov
mov
inc
or
push
cmp
cmp
mov
add
aam
cwtl
cld
insl
add
or
clc
or
and
test
inc
mov
aam
in
or
add
adc
and
test
lea
or
sbb
ret
xchg
adc
cmp
outsb
push
test
fmul
jl
lea
or
rolb
mov
mov
xor
dec
sbbb
je
push
sbb
add
push
sbb
inc
dec
or
dec
push
push
cwtl
xchg
xchg
xchg
pop
pop
insb
push
or
adc
repnz
mov
adc
adc
test
inc
stos
nop
pop
cmp
or
test
push
add
adc
test
enter
call
mov
mov
mov
or
jb
adc
pushf
and
push
push
icebp
or
dec
clc
push
dec
aad
stos
xor
out
mov
in
out
xchg
jmp
int
pop
subb
daa
push
pop
nop
js
je,pn
push
pop
roll
inc
cmp
push
add
adc
push
das
or
loop
into
add
insl
idiv
addr16
push
sub
cmp
dec
push
mov
cs
push
popa
pop
ret
sbb
xor
lret
mov
mov
addr16
xor
push
inc
or
bound
fsub
loope
dec
xchg
sbb
dec
or
sub
imul
add
jl
cs
sti
dec
mov
js
test
inc
dec
dec
push
aaa
in
mov
pop
cmp
sub
inc
data16
cmp
pop
fdivrs
mov
test
out
xor
push
fs
add
jl
push
dec
or
int3
cmpsb
push
frstor
xor
add
ret
mov
dec
ljmp
adc
push
xchg
mov
ret
scas
jno
insb
add
push
or
xor
call
add
addb
mov
int
inc
sub
popf
xchg
inc
dec
mov
popa
mov
lahf
pusha
add
mov
push
pop
imulb
arpl
rcl
add
jno
dec
mov
add
xchg
mov
or
or
or
push
movsb
and
test
movsb
or
stos
ret
test
push
les
cmpsl
aad
or
cwtl
addl
cmp
in
xor
or
or
add
xchg
cmp
xchg
enter
mov
inc
cmp
add
enter
shlb
or
mov
mov
mov
xor
cmp
inc
dec
add
dec
xchg
cmp
jge
xlat
popf
and
dec
lcall
mov
js
inc
cmp
sub
mov
adc
adc
fistpll
aas
add
mov
or
sub
int3
sbb
pop
and
not
pop
inc
out
das
stc
mov
mov
bound
je
call
repnz
movsb
inc
fmull
xchg
shrl
pop
mov
jo
push
mov
iret
dec
push
cli
fdivl
cmpl
or
push
dec
movzwl
call
rcrb
dec
mov
sub
cmp
xchg
lcall
arpl
adc
push
mov
jbe
nop
or
int3
sub
or
les
addl
mov
mov
pop
fidivrs
or
push
ret
fs
or
outsb
dec
mov
xchg
popw
jmp
aad
movsb
test
inc
adc
sbb
mov
cmp
xor
push
push
fidivrl
mov
je
mov
cmpb
fsts
push
in
or
sbb
dec
aam
pusha
and
stc
or
test
pop
call
push
jne
and
mov
or
fs
adc
sbb
movsl
push
call
inc
cmp
test
dec
jne
mov
divb
push
jmp
jecxz
xor
push
sub
add
loopne
sbb
xor
add
inc
mov
in
clc
mov
inc
xchg
xor
pop
repnz
icebp
popf
rolb
stc
add
mov
imul
jmp
inc
dec
cmpsl
push
sbb
or
insb
lods
mov
sbbb
and
lcall
adc
loopne
faddl
dec
jmp
movsl
jmp
fdivs
cmp
neg
pop
not
push
pusha
lds
pushf
mov
push
js
pop
and
push
ja
and
mov
and
xor
add
push
icebp
inc
pop
fwait
lahf
jle
dec
ret
dec
push
inc
or
data16
sbb
or
pop
dec
push
test
and
xchg
xor
rep
xor
sbb
addr16
mov
lahf
add
mov
iret
enter
xchg
push
mov
inc
stc
ja
adc
incl
adcl
mov
mov
in
sbb
dec
lea
ja
sbb
jno
xor
in
gs
mov
mov
mov
push
fucomip
inc
insl
jne
fildl
rcr
pushf
xor
jg
push
adc
insb
loopne
kmovd
or
or
faddl
shrb
aam
aaa
add
in
xor
mov
pushf
sbb
push
roll
or
leave
xor
rcr
jae
dec
movsb
lods
int3
sbb
cmpsl
in
or
mov
or
mov
cmp
pusha
nop
mov
js
fists
mov
aas
fisubrs
cli
pop
mov
outsb
jmp
jne
push
dec
cmp
or
sbb
fwait
cmp
mov
cmp
fisttps
and
inc
inc
mov
out
dec
stos
push
pop
and
cmove
int3
xor
pop
push
inc
and
fwait
push
xor
and
mov
test
add
rorb
ret
stos
pop
lds
std
or
and
mov
stos
mov
sbb
push
mov
mov
inc
add
push
cmpsl
mov
fimuls
arpl
jbe
or
xchg
push
and
out
aaa
sub
mov
push
dec
and
rclb
fucomi
scas
cmp
sub
aaa
jne
xchg
outsb
xchg
push
inc
nop
cmp
test
lea
push
loope
dec
sahf
add
cmp
les
and
daa
and
cmp
aam
pop
dec
test
or
leave
cld
and
or
cltd
leave
mov
es
subb
js
and
mov
or
or
in
gs
adc
mov
pop
mov
jg
jno
leave
subb
aam
xor
fists
push
add
seto
ret
add
dec
lahf
sub
out
pop
cmp
xchg
aas
aaa
dec
mov
adc
icebp
and
dec
push
and
inc
outsb
pop
lea
pop
push
inc
inc
dec
pop
cmp
icebp
orb
and
inc
dec
mov
push
insl
test
xor
lds
test
and
dec
inc
adc
rorb
inc
loop
add
cmc
dec
ss
je
add
imul
inc
mov
mov
outsb
xor
push
rolb
addl
push
icebp
vpsubsw
js
mov
jmp
or
or
and
or
mov
xchg
fdivrs
mov
sbb
lcall
xor
adc
ret
sbbl
inc
push
fadd
mov
lods
inc
stos
mov
enter
sbbb
andl
cmpsl
or
xor
add
xor
clc
mov
lods
xor
push
xorb
pop
add
dec
rol
xor
push
dec
ja
mov
shlb
popa
paddq
or
ja
sbb
or
jmp
ljmp
pushf
insl
mov
xchg
cmpsb
adc
sbb
and
pop
adc
movsb
dec
adc
mov
add
inc
nop
fstl
cmp
adc
and
scas
dec
dec
add
jb
or
test
loope
ja
loopne
adc
xor
cmp
inc
cmpsl
inc
push
aad
xchg
mov
jns
mov
mov
sahf
push
inc
add
into
jl
add
lret
je
push
or
adc
cmp
push
test
xor
loope
and
add
sbb
or
int3
xchg
adc
pop
adc
xchg
cmp
mov
mov
cmp
jmp
sbb
jo
mov
adc
arpl
imul
or
es
inc
and
arpl
cs
mov
out
xor
sbb
dec
xor
int3
cmpb
jns
dec
or
call
in
es
enter
push
lahf
cmpsb
aaa
outsb
out
sbb
out
icebp
or
jne
push
push
adc
sub
lret
dec
jnp
jl
push
nop
sbb
inc
xchg
mov
pop
jbe
icebp
pop
jne
rolb
adcl
leave
mov
dec
andl
inc
add
leave
xchg
adc
js
testl
or
enter
jg
push
jb
mov
push
xor
cmp
jecxz
or
push
addr16
mov
loopne
and
addps
inc
fcompl
and
jl
or
filds
ja
jle
rclb
push
int
incl
mov
sti
adc
test
push
or
cmpl
imul
cwtl
jo
xchg
push
add
sub
lahf
xlat
xchg
inc
roll
nop
cmp
and
or
pushf
sub
cmpsl
sub
push
push
xchg
ret
xchg
fiaddl
mov
pop
pop
mov
inc
aaa
cltd
cmp
mov
mov
or
loopne
mov
mov
sbb
push
ret
daa
mov
sbb
or
outsb
inc
testb
mov
dec
inc
dec
and
mul
push
ljmp
leave
subb
jl
dec
rcl
and
mov
cmpsl
push
jo
lret
adc
mov
mov
dec
aaa
adc
sbb
stos
rorb
sub
sbbl
lcall
repz
push
adc
addr16
arpl
stc
dec
sub
dec
mov
leave
in
or
dec
cmp
ljmp
mov
cmp
out
in
pop
cwtl
in
dec
push
adc
mov
popa
inc
mov
adc
mov
dec
mov
inc
outsl
or
pop
sbb
push
arpl
inc
or
xor
sbb
shl
dec
sbb
dec
icebp
andb
int
nop
jo
out
inc
inc
inc
push
lock
mov
ret
sbbl
inc
pushf
push
push
xchg
and
aam
xor
shrl
sub
rolb
sub
dec
add
pop
sbb
sbb
mov
cmp
repz
dec
sub
iret
shrl
adc
addb
iret
sub
sbb
add
adc
flds
pop
xor
lret
lds
push
and
push
enter
dec
imul
popa
adc
adc
push
dec
sub
inc
es
inc
sub
inc
add
xor
inc
cmp
movsb
sbb
lods
flds
adc
xchg
push
xor
dec
sub
addb
push
ficomps
mov
cwtl
xchg
mov
pop
leave
test
xchg
sbb
xchg
sbb
add
cmc
sbb
and
or
or
xor
push
addr16
dec
add
push
icebp
loope
dec
jne
push
dec
ljmp
inc
pushf
mov
cmpsb
adc
add
pop
lret
add
testl
dec
es
jbe
fmuls
push
push
inc
or
mov
shl
dec
pop
xchg
inc
sti
nop
test
insb
sub
add
stc
repz
mov
mov
ret
xor
xchg
cmc
xchg
push
push
adc
ss
sbb
push
into
es
aaa
dec
jo
adc
pop
mov
jmp
nop
in
scas
add
pusha
or
mov
lods
jo
push
sahf
adc
xlat
fisubl
lds
mov
out
dec
dec
fistps
in
xchg
scas
aam
push
sbb
and
xchg
dec
sbb
sbb
jne
rorb
adc
jp
inc
sbb
or
push
fs
sbb
xor
push
stos
mov
sahf
mov
stc
push
adc
js
or
or
test
dec
jnp
les
arpl
sub
nop
sub
inc
cs
add
cmp
aaa
ret
fsubs
dec
pop
loope
sbb
stos
push
dec
add
ds
sub
inc
enter
out
pop
add
cmp
and
add
movsb
adc
xor
mov
es
pop
mov
dec
mov
cmpsl
nop
push
inc
add
add
push
mov
popa
inc
and
je
sub
xchg
mov
imul
sbb
insl
int
ret
lock
inc
dec
jmp
cmc
and
das
cmp
jb
shl
sbb
test
mov
dec
call
punpckhdq
mov
pop
push
sti
push
push
rorb
pop
stos
roll
sub
mov
sub
pop
fistl
inc
mov
idivl
and
fwait
xor
cmp
xor
xchg
add
jmp
les
and
jne
pop
cmp
mov
or
or
aas
mov
aad
mov
clc
sub
cmp
mov
adc
jnp
sbb
sbb
push
and
or
xchg
cmp
push
pop
sub
test
aas
push
sbb
adc
jne
or
cmp
push
xchg
fwait
outsb
dec
sub
popw
cmp
nop
mov
shrb
add
pop
pop
mov
add
inc
cwtl
imul
mov
push
arpl
adc
sbb
pop
mov
sbb
xchg
adc
pop
or
cmp
andl
mov
inc
push
jmp
and
xor
cmp
jo
xor
outsl
and
cmp
movsl
sub
cmpsb
andb
sbb
inc
inc
add
inc
add
jecxz
jnp
ss
mov
mov
xor
jne
and
mov
mov
in
xchg
shlb
andl
jb
adc
dec
and
sbbb
jne
add
xlat
add
xor
jno
pop
dec
sbb
nop
imul
jmp
pushf
cwtl
and
cmpsb
sub
add
mov
cwtl
dec
push
imul
xor
pop
adc
adc
or
xor
rolb
push
pop
outsl
divl
and
xchg
testl
pop
xlat
sbb
and
inc
repnz
ds
insb
jle
xchg
push
and
inc
cmp
ss
dec
imul
mov
inc
jl
push
imul
adc
push
adc
or
movsl
in
add
cmp
test
mov
subb
push
je
push
dec
sub
fstpl
xchg
orl
fwait
mov
push
sub
out
add
push
sub
mov
adc
mov
or
inc
jmp
fmuls
gs
pop
dec
ja
cmp
push
push
mov
lret
and
and
adc
pop
mov
ljmp
daa
sub
jne
jge
lret
sbb
push
daa
cmp
or
cltd
sbb
mov
or
adc
je
add
arpl
add
sub
stos
xor
mov
lret
push
xchg
lret
adc
test
sbb
or
cmp
xchg
out
cli
aam
mov
dec
adc
mov
and
jo
lahf
pop
sbb
sbb
inc
adc
lcall
adc
subb
push
cmpl
jno
lods
add
mov
cmp
xchg
js
mov
insb
add
inc
clc
add
mov
pop
jmp
mov
mov
arpl
xor
push
xor
add
or
sub
push
push
ret
sbb
ficoml
pusha
pop
and
xchg
les
add
sti
mov
mov
mov
sub
shufps
ja
cld
cmp
in
jns
push
or
push
xchg
addb
repz
or
lcall
lret
icebp
nop
dec
dec
cmp
lock
sbb
sub
or
inc
push
pop
cmpsb
loope
inc
inc
fcom
and
mov
inc
jmp
sbb
jbe
adc
mov
mov
pop
adcl
out
aas
daa
add
cmp
das
mov
inc
pushf
sub
xchg
inc
cmpsl
clc
xchg
je
mov
or
xor
fadd
insb
cmp
es
in
pop
mov
inc
ficoml
or
or
mov
mov
cmp
pushf
inc
pop
sub
cmc
mov
pop
test
cmp
adcl
std
js
mov
je
dec
std
cmp
or
jp
nop
push
sub
loopne
push
adc
dec
and
xchg
cld
jo
xchg
jp
les
xor
rorl
xor
test
mov
pop
push
fidivrl
pop
push
push
movsb
scas
adc
adc
mov
adc
mov
sbb
push
pop
call
outsb
sarb
insb
inc
mov
movb
xor
inc
jl
outsl
push
andb
jbe
rcll
and
outsb
jle
insb
push
popa
ss
imul
push
jmp
sbb
or
pop
notb
ret
sub
lods
jmp
in
jbe
push
sub
shlb
mov
jp
fdiv
push
xchg
cltd
lcall
mov
mov
insl
pop
xchg
insb
lods
fidivs
mov
dec
xor
mov
jo
jecxz
hlt
pusha
daa
jge
xor
insl
lahf
lahf
or
leave
dec
insl
mov
mov
lret
clc
fcoms
enter
jmp
push
cmp
rcrb
mov
outsb
movl
add
popa
add
subl
jo
pop
sbb
data16
mov
fcom
notl
adc
lahf
hlt
aam
addr16
js
aad
push
xchg
cmpsb
add
add
add
or
test
out
sar
inc
ljmp
pusha
pop
xor
out
and
and
ret
or
repnz
dec
xorb
xor
fcompl
rol
repnz
outsb
das
and
mov
sub
push
or
add
sarb
add
inc
insb
inc
pop
or
das
xchg
scas
shlb
lcall
xchg
jmp
jbe
test
sub
lahf
inc
shll
arpl
cmp
xor
or
add
mov
push
cmp
lds
leave
mov
lea
fstpl
andl
push
push
pop
popa
repnz
fmuls
inc
push
push
push
dec
xchg
jl
push
addr16
xor
xor
add
xchg
inc
adc
push
dec
xchg
pop
gs
mov
fs
jae
fs
push
adc
mov
sbb
lods
mov
hlt
dec
sub
popf
jecxz
fs
clc
lret
cmpl
inc
cmp
xor
sub
cs
pop
ja
cmp
dec
pop
add
pop
lods
pop
inc
orl
scas
jp
mov
inc
mov
sub
sbb
sbb
push
rcrb
js
fdivl
sbb
clc
ret
xor
rclb
dec
pop
nop
push
inc
aas
lods
bound
sbb
daa
or
inc
insl
jl
inc
xchg
aaa
nop
dec
fs
aas
pop
jb
test
sbb
add
jb
rolb
or
xchg
jne
mov
fmull
rolb
enter
adc
add
cli
inc
jmp
pop
add
push
sti
lock
mov
cmp
hlt
scas
je
mov
or
add
or
cmp
call
nop
cmp
mov
sub
mov
xor
imul
imul
jo
call
pop
sbb
push
cmp
insb
cmp
pusha
xchg
and
jno
daa
imul
push
mov
inc
pop
jbe
in
arpl
out
pop
in
bound
fs
pop
mov
js
cmpsb
sub
adc
shll
in
push
add
or
add
xchg
pop
mov
mov
pop
mov
stos
mov
das
fninit
push
or
mov
inc
es
add
or
or
imull
dec
mov
daa
int3
das
fmulp
pop
mov
test
stos
add
and
mov
or
mov
xor
adc
jno
movsb
xor
sbb
and
or
movsl
mov
idivb
movsl
icebp
cmpsl
aaa
add
mov
aad
and
xchg
jmp
jnp
popf
dec
inc
iret
call
sbb
push
add
mov
pop
test
shll
scas
sub
sbb
add
fcoms
in
jge
push
dec
adc
jge
sub
mov
or
pop
jne
sbb
mov
or
jmp
jge
push
lret
jo
pop
and
and
data16
and
fsubl
andb
dec
mov
les
xor
add
ret
jno
imul
mov
mov
pop
add
push
jb
enter
add
inc
and
adc
nop
dec
mov
jl
add
pop
fs
fdivrs
dec
push
imul
mov
imul
lds
adc
pop
mov
mov
dec
aaa
js
jno
rcl
lret
repz
stos
clc
dec
cmp
fwait
ret
sub
movsb
test
aad
push
add
pop
mov
decl
push
and
aas
inc
rclb
dec
inc
dec
popa
rcr
xor
push
mov
popa
mov
call
nop
rclb
dec
adc
add
fs
mov
out
pop
jnp
xchg
sbb
push
lea
adc
pop
insl
lcall
cmp
xor
les
popa
adc
xlat
loopne
mov
xor
scas
out
fs
mov
test
cmp
cmp
lods
mov
leave
mov
loopne
push
ljmp
cmp
arpl
popa
in
test
js
shlb
push
out
lcall
and
inc
ds
cmp
add
or
or
xor
cs
inc
mov
lds
imul
lea
adc
push
jae
dec
imul
add
push
pop
ds
adc
pop
jb
stos
and
aad
jae
jmp
cmp
dec
into
cmpl
pop
jb
rcrb
arpl
ret
sub
mov
pop
sub
addb
iret
push
cmp
pop
dec
add
je
xlat
push
push
insb
ljmp
inc
cmpb
ja
sub
push
adc
lcall
lock
mov
jecxz
test
ret
mov
inc
inc
aas
ret
cmp
xor
lds
add
call
shl
add
dec
cmpsb
or
rolb
cltd
sbb
or
add
add
add
xchg
add
mov
loope
pop
mov
arpl
sub
jp
lock
imul
inc
fwait
scas
enter
adc
mov
addb
inc
dec
xor
sahf
pop
mov
add
roll
xor
pusha
push
mov
xchg
sub
rorb
sbb
flds
sub
popa
xor
xchg
inc
lea
scas
push
and
shlb
jl
xor
mov
not
mov
cmp
movsl
cli
daa
mov
rorl
inc
cmpsl
imul
ret
inc
pop
add
and
test
cwtl
cmp
loopne
or
add
jnp
push
jno
xor
clc
or
push
add
in
mov
out
jecxz
sbb
cltd
scas
and
push
fnsave
sub
mov
mov
aad
xor
mov
and
adc
jne
jnp
push
ret
ficoms
mov
dec
jne
stos
sub
sub
or
adc
pop
mov
jbe
sbb
aam
cwtl
mov
mov
sub
jnp
js
fmul
nop
aaa
mov
sbb
popa
jg
test
sub
add
fcomip
jmp
sub
testl
mov
lock
mov
cmp
inc
and
add
pop
and
cwtl
add
jge
sub
dec
rcll
cmp
add
jne
fcomps
test
rclb
sub
lock
pusha
push
pop
loope
add
or
fimull
mov
adc
mov
push
push
push
sbb
adcb
and
cwtl
jbe
or
leave
xor
bound
lods
add
sub
inc
jne
insl
fidivl
das
and
xchg
sbb
jmp
dec
subb
sub
add
inc
xchg
sub
push
loopne
jge
inc
ret
sti
mov
pop
shlb
xchg
cltd
xchg
and
sbb
outsl
fdivs
out
jmp
xor
cmc
cmpl
mov
lods
xchg
sbb
push
aam
or
orb
mov
sahf
add
sbb
insb
addr16
jns
cltd
test
sahf
movsb
mov
inc
pop
push
jp
lahf
in
inc
into
cmp
xor
mov
add
cmpsb
add
push
pop
jge
mov
or
or
and
lock
sbb
fbstp
je
sbb
mov
pop
or
or
pop
adc
insl
pusha
mov
insb
push
inc
sbb
mov
jns
call
inc
xchg
stos
shll
cmpl
pusha
scas
sbb
shrb
dec
push
cwtl
xor
pop
sub
and
xor
and
push
jo
fwait
jmp
mov
sbb
imul
pop
insb
das
jbe
sahf
xchg
call
jbe
xor
mov
fists
jl
add
shll
js
loopne
or
mov
xchg
rolb
xchg
cmp
mov
and
xchg
testl
push
lock
and
and
hlt
sbb
sbb
roll
fs
mov
mov
adc
add
mov
jle
pop
stos
mov
jmp
lds
je
pop
scas
xor
sbb
lea
adc
dec
in
jmp
and
rorb
mov
aaa
ror
les
cmp
js
mov
je
or
adc
scas
xorl
mov
add
in
rcrl
test
jbe
xchg
ljmp
jmp
cltd
sbbb
or
xor
das
cmp
sbb
test
inc
mov
jp
outsb
outsb
dec
and
jmp
das
mov
jl
push
add
add
incb
je,pn
xor
test
pop
jo
jnp
jl
sbb
adc
push
inc
push
in
adc
and
pop
add
xchg
jecxz
nop
xchg
xor
adc
ret
jg
nop
mov
and
xor
outsb
inc
xor
xor
dec
js
inc
pop
scas
bound
add
pop
mov
inc
push
enter
inc
and
shrl
adc
inc
push
imul
iret
test
xchg
cwtl
mov
xchg
xor
inc
sbb
sbb
pop
push
fcoml
stos
loope
or
add
inc
fs
test
cltd
push
or
xchg
xchg
sahf
ds
pop
aam
jne
test
movsb
scas
lock
int
das
loopne
lea
inc
dec
push
or
fldenv
into
aad
mov
fbstp
adc
fisttpll
insl
outsb
dec
adc
inc
mov
jg
out
mov
adc
pop
pop
sub
sbb
mov
cmp
scas
inc
xchg
cmc
mov
inc
cld
or
push
jmp
pop
push
xchg
lock
jmp
jmp
je
or
fs
gs
in
inc
pushf
adc
ret
pop
adc
loope
or
xor
les
adc
notb
repnz
add
xchg
adc
inc
jg
sbb
movsb
push
cmp
sub
mov
push
test
lea
mov
inc
incl
test
and
lods
mov
mov
mov
lcall
out
daa
push
or
movb
adc
xor
mov
xchg
cwtl
test
cmpsl
fstpt
jp
jge
xor
les
iret
sbb
call
dec
sub
inc
enter
or
push
sub
je
cmp
lret
push
push
sub
dec
repz
sub
lret
lds
ret
xor
dec
push
ficoml
add
add
lods
imul
aam
jmp
adc
inc
subl
xchg
lcall
mov
add
pop
sbb
sbb
out
push
cli
and
jne
pop
jmp
adc
fs
or
add
jb,pn
les
stos
pop
sub
mov
jb
call
sbb
and
jo
lea
xor
fs
push
insl
or
enter
cmp
mov
out
cmpb
push
adc
jb
rorb
pop
xchg
cmp
les
int3
jnp
jmp
or
pop
sub
push
pop
add
lahf
ss
imull
jns
mov
cmp
and
ret
or
inc
jns
push
or
adc
test
shll
xchg
subw
fsubrp
dec
mov
ss
jmp
add
rorb
aam
adc
fwait
rcrb
call
xor
insl
xor
push
and
addr16
adc
xor
adc
xor
ret
push
rcll
cmp
sub
pop
call
fxch
push
xchg
mov
push
add
push
xor
ss
ljmp
add
jbe
mov
ret
aam
out
fsubr
add
call
or
and
test
jecxz
adc
cmp
movsb
sub
xor
or
hlt
mov
fiaddl
push
mov
adc
cltd
pusha
sbb
jle
inc
inc
std
xor
push
or
fidivl
in
or
out
mov
adc
shlb
xor
cmp
push
push
add
adc
push
cmp
repz
cwtl
sbb
ss
xor
insb
addb
fmull
mov
add
add
leave
neg
adcl
mov
sbb
sbb
fnsave
lcall
shlb
or
loope
xchg
push
xchg
push
add
je
add
cmp
enter
in
xor
mov
lar
add
test
jne
add
loopne
and
or
adc
sub
adc
cs
rcrl
push
mov
pop
cmp
iret
outsl
jp
sti
test
add
cmc
xchg
xor
rclb
jno
push
lods
add
xchg
sahf
adc
daa
add
jle,pn
push
dec
adc
sahf
es
das
nop
dec
push
mov
in
mov
add
mov
mov
push
and
nop
loopne
jle
xchg
inc
rclb
ss
fldl
movsl
xchg
mov
pop
mov
push
inc
add
in
in
arpl
mov
sub
xor
rcll
pop
xchg
add
add
lods
cmp
mov
push
lods
inc
or
inc
aas
call
add
stos
add
test
sub
mov
cmp
jle
dec
jno
pop
in
andl
es
addr16
adc
movsb
cli
rolb
fadds
adc
dec
sub
scas
push
add
dec
xchg
push
mov
jno
jl
cmp
arpl
repnz
add
adc
xor
cltd
push
or
adc
cwtl
adc
idivb
das
mov
inc
in
imul
inc
and
pushl
popa
ret
js
movsb
push
sub
add
adc
ret
js
push
lock
rolb
inc
mov
mov
inc
dec
mov
repz
adc
call
or
mov
icebp
xlat
mov
adc
addr16
dec
rorl
adc
fiaddl
ds
ffree
jp
mov
add
or
adc
fistl
cmpsl
aam
iret
enter
inc
mov
dec
or
mov
adc
rorl
aaa
jns
jnp
dec
scas
dec
jle
inc
sbb
imul
or
jecxz
mov
lea
adc
cwtl
adc
sub
jecxz
sub
adcb
call
sbb
mov
mov
push
add
enter
inc
xor
ja
add
adc
pop
push
add
xchg
and
cmpb
movsl
pop
andb
cltd
icebp
movsl
shlb
cmp
or
sbbb
sbb
sbb
mov
scas
lods
and
push
dec
out
cmp
mov
cmp
std
dec
pop
pop
movsb
lods
xchg
jl
cmp
sbb
push
fildll
mov
leave
and
inc
out
pusha
jmp
subb
dec
mov
scas
mov
push
push
or
pop
roll
mov
mov
sahf
pop
mov
mov
cwtl
in
fs
adc
das
xchg
sbb
push
insl
sub
dec
cwtl
leave
jp
test
adc
jecxz
lea
xor
add
push
mov
add
push
push
push
push
lods
xor
sub
rorl
mov
ss
mov
sub
test
adc
inc
jle
xlat
dec
add
shlb
cmp
lea
xor
mov
or
inc
push
out
in
outsb
pop
mov
sbb
adc
ljmp
into
pusha
imul
fdivs
inc
lods
sbb
xchg
fcmovnbe
fwait
cmp
cmc
inc
dec
jle
jecxz
lret
add
xor
mov
jne
mov
dec
pop
call
dec
sbb
add
jne
mov
andb
mov
or
push
mov
gs
outsb
sbb
or
jg
into
aaa
ret
mov
pusha
repnz
push
ret
or
scas
xchg
out
stos
adc
imul
mov
adc
and
adc
mov
dec
cmp
xorl
leave
aaa
and
bound
sub
inc
cwtl
fdivs
jmp
jmp
insb
mov
outsb
mov
outsl
daa
lock
pop
fsubr
cmpsl
push
dec
flds
decl
adc
sbb
or
pusha
lds
add
or
rol
in
xchg
pop
push
rolb
push
in
dec
psubw
aaa
add
add
addb
and
and
add
mov
pop
or
mov
pop
frstor
sbb
shlb
adc
lea
movsl
jae
sub
movsl
mov
dec
insl
test
inc
test
shrb
xor
lea
mov
insb
imul
xchg
xchg
ret
sub
or
loopne
xchg
mov
mov
push
inc
or
adc
and
push
fmuls
dec
dec
nop
push
movb
mov
sbb
mov
in
adc
adc
add
push
sbb
inc
cmpsl
sbb
test
inc
pop
push
js
sete
jmp
test
cmp
jo
xor
icebp
pusha
or
or
dec
popa
push
add
inc
call
cmp
lea
mov
dec
mov
inc
xchg
add
push
pop
rcrb
push
adc
inc
sbb
xor
cmp
inc
fsubp
sarl
push
jg
dec
nop
and
sbb
sub
lock
or
add
xchg
lcall
pop
cmpsb
dec
aas
inc
pusha
pusha
out
and
push
das
push
sub
mov
js
cmpsb
les
orl
cwtl
push
ds
and
xchg
cwtl
lahf
mov
and
out
push
cwtl
ja
cmp
mov
adc
dec
xchg
or
lds
pop
fwait
add
push
cwtl
mov
mov
outsl
es
sub
lret
mov
jp
jno
dec
fnstcw
jmp
push
mov
lods
adc
arpl
test
pop
inc
pop
push
shlb
popa
xlat
dec
xchg
and
add
push
adc
mov
pop
pop
imul
pop
pop
push
fcomp
or
pop
mov
mov
pop
mov
jnp
pop
inc
cmp
pop
adc
repnz
loopne
and
popa
inc
add
jo
dec
jno
sbb
xchg
cmp
push
push
dec
pop
inc
stc
add
jnp
pop
mov
sub
xchg
pop
insb
cmpb
pop
enter
daa
mov
imul
fadds
add
xchg
les
in
fimuls
loopne
ret
out
push
sub
ffree
add
adc
xorb
jecxz
dec
inc
mov
cmpsl
test
push
sub
or
jae
pop
pop
push
fs
outsl
cmpl
daa
cmpsb
inc
addb
mov
sub
mov
jmp
push
out
mov
sub
lret
mov
sub
lcall
es
adc
lock
shrl
sahf
lea
ficomps
dec
sub
mov
notb
adc
pop
and
push
mov
sarb
jmp
dec
adc
cmp
insl
stos
sub
inc
insb
xor
xchg
inc
cmpsl
sahf
popf
test
push
ss
ds
push
movsb
cltd
aam
and
fwait
decb
push
js
pop
sbbb
mull
push
jmp
rclb
in
mov
cmp
je
outsb
dec
add
xor
xor
nop
movlhps
or
cwtl
pop
xchg
sub
mov
fimull
mov
sub
xor
jge
or
xor
xor
imul
and
push
xor
leave
xor
gs
xor
add
xor
push
ret
pop
push
xchg
data16
mov
adcb
adc
mov
sbb
lcall
dec
mov
pop
or
nop
rcll
mov
cmp
xor
rorl
test
testl
out
dec
sbb
xchg
push
mov
into
adc
add
lods
xchg
push
mov
movsl
bound
mov
lods
lock
lcall
lods
inc
push
aas
push
mov
sbb
in
dec
lahf
bound
cmc
pop
insb
pop
out
xor
add
pop
sub
push
and
mov
loop
dec
pop
xchg
push
pop
add
test
xchg
push
loopne
lods
clc
add
pop
sbb
or
dec
and
inc
sub
mov
add
fwait
push
push
test
enter
insl
jmp
rcrb
sub
test
pop
add
jne
add
mov
fwait
or
stos
les
and
shlb
jb
jmp
hlt
or
call
ljmp
adc
dec
and
xchg
sbb
inc
test
loope
nop
lcall
cmp
test
aas
dec
xchg
cmp
push
dec
leave
and
popf
mov
and
pop
fsubs
or
test
jmp
iret
add
loopne
jae
lods
pop
mov
jbe
sbb
adc
mov
movsl
adcl
imul
dec
xchg
test
je
test
insb
pop
insl
imul
push
repnz
lods
xor
pop
dec
imul
and
or
cmpsb
dec
iret
adc
adc
or
pop
mov
arpl
mov
mov
push
sub
out
inc
add
mov
les
mov
out
rclb
stos
nop
xorl
dec
fisubrs
pop
mov
loope
addb
ret
test
inc
and
test
movsl
movsb
or
push
xor
mov
and
xor
pop
push
jae
push
and
adc
pop
cmp
push
nop
pushf
jmp
es
pop
mov
repnz
rorb
adc
aam
cmp
mov
push
adc
mov
add
loopne
rcr
fwait
inc
adc
lock
adc
data16
pop
pushf
and
pop
addr16
sbb
adc
gs
and
sub
dec
ds
push
mov
in
lods
imul
push
fcmovne
or
aas
push
mov
fiadds
pop
enter
add
xor
inc
fidivrl
pop
and
cmp
fdivs
dec
dec
cmpsb
cmpb
ret
xchg
sub
pop
pop
or
dec
pop
sbb
adc
mov
ret
and
mov
inc
sub
jmp
and
or
out
xchg
or
dec
mov
or
adc
xchg
js
push
fdivrl
ret
int3
inc
lods
gs
sub
lea
xchg
fs
imul
push
fdivs
imul
sbb
jge
push
adc
or
and
mov
inc
ljmp
fcmovb
and
or
xchg
sbbl
shlb
je
push
dec
inc
adc
dec
lds
inc
mov
mov
jle
add
movsb
push
jle
test
jl
pop
arpl
adc
xchg
xor
sbb
xchg
push
nop
and
aas
xor
popa
adc
and
add
scas
std
adc
adc
push
daa
jno
fistpl
stos
push
pop
sub
popf
les
dec
in
and
pop
mov
outsb
dec
jp
jl
pop
sbbl
pop
adc
adc
mov
or
jo
push
sub
inc
scas
rcrb
cmp
xor
adc
pop
sub
sbb
fisttpll
movsl
in
divb
call
inc
dec
pop
and
rolb
mov
addr16
xchg
test
mov
jo
add
cmpsb
and
dec
mov
addr16
cmp
add
xchg
dec
cmp
fs
adc
bound
push
cmpsl
xchg
jmp
fcmovnb
shrb
cmp
pop
push
lods
movsl
stos
dec
ret
add
pop
pop
ret
in
mov
ret
rclb
sbb
mov
mov
xlat
pop
in
push
mov
sbb
fadds
push
push
jne
lret
sbb
sub
sub
mov
or
inc
cwtl
insb
mov
aad
add
xor
movb
pop
or
ficoms
mov
inc
cmpsb
mov
cmp
vcvtss2si
subl
xor
jg
push
sub
dec
sbb
add
dec
and
mov
rcl
mov
xor
test
scas
adc
test
es
fiaddl
mov
or
dec
and
fisubrl
adcb
fs
add
enter
or
fistl
mov
push
add
lahf
sub
mov
mov
sub
sub
bound
add
ljmp
enter
in
je
sub
push
sbb
imul
cs
jecxz
pop
js
ja
seta
adc
or
or
or
adcb
dec
pop
loope
shlb
pop
dec
cmpsb
mov
jo
cmc
and
pop
dec
sbb
and
fldt
xor
xor
jbe
sbb
add
int
rcll
xchg
inc
lods
jge
add
mov
int
ret
pop
dec
add
add
or
sbb
push
inc
ja
adc
cwtl
xchg
cmpsb
jo
inc
cmp
call
inc
xor
push
add
and
adc
movsl
mov
test
pop
sbb
inc
add
popa
push
inc
and
insl
in
xchg
inc
jp
nop
cmc
ret
mov
cmp
sbb
mov
mov
add
add
or
adc
and
pop
xchg
nop
rcll
insl
insl
mov
lock
jno
or
sbb
out
push
ficoml
mov
call
test
popa
es
ja
les
ud2
enter
lea
inc
hlt
dec
dec
sub
inc
push
nop
xor
mov
push
test
rol
jo
adc
adc
lret
scas
inc
fisubl
or
mov
sbb
filds
cmpsb
sbb
fnstsw
add
adc
fnstenv
cmpsl
xchg
into
cmp
jae
outsl
jmp
lock
sbb
jo
pushf
cmpl
movsl
daa
je
jo
and
or
and
or
movsl
cmp
pop
push
pop
dec
ret
addb
add
adc
fistl
lret
xchg
cmp
pop
pop
nop
push
mov
xchg
andl
ds
or
mov
cmp
xlat
sub
push
mov
loopne
inc
aaa
cmp
cli
shlb
jae
adc
rcrb
or
inc
add
out
test
data16
cmpb
jmp
xchg
cmp
test
inc
sbb
pop
addr16
insb
lods
lahf
push
or
addl
xchg
mov
mov
sbb
inc
inc
mov
and
pusha
jnp
inc
lret
das
inc
fbstp
mov
fidivl
test
sub
sub
rcrb
pop
sti
ret
jo
orb
xchg
mov
jl
pop
pop
sub
shl
in
test
jo
test
loop
xchg
sbbl
jbe
jno
mov
rolb
bound
jno
and
xor
add
aaa
xor
jmp
les
nop
pop
ret
sub
dec
mov
xor
icebp
sbbl
fucomi
xchg
clc
pop
pop
mov
cmp
popf
loop
push
dec
xor
pusha
scas
dec
orl
adc
mov
pop
fcoms
sub
jge
imul
popa
bts
add
push
daa
mov
adc
or
sub
outsl
nop
mov
ret
clc
dec
nop
rclb
mov
xchg
flds
inc
mov
jae
xor
outsl
sub
bnd
test
js
add
mov
add
ja
insb
push
stos
adc
lock
push
movsl
add
lahf
mov
push
dec
inc
or
fistps
sbb
xor
sub
or
push
movsl
or
xor
jbe
and
xchg
inc
sbb
cmpl
mov
or
add
mov
push
adc
lods
or
xchg
xchg
push
add
addl
dec
cmp
flds
movl
adc
mov
mov
lds
shrl
pusha
push
lock
mov
inc
imul
movsb
xor
sub
fstl
sbbb
inc
lret
xchg
xor
pusha
aaa
scas
sbb
xor
add
addl
xchg
dec
pop
dec
dec
nop
insl
ret
loope
or
xor
nop
out
test
imul
notl
addl
lds
lock
rcrb
movsl
add
adc
subb
mov
insb
shrl
or
jmp
pushf
xchg
rcrb
pop
test
or
inc
push
stos
inc
loopne
call
movsl
in
jp
adc
mov
test
jb
fildl
fisubs
cwtl
add
pusha
repz
or
out
jnp
sub
push
cmp
add
add
xor
je
imul
jae
or
leave
mov
mov
fistpl
arpl
jp
jecxz
xor
aaa
jnp
gs
sbb
or
fiadds
xorl
mov
xchg
test
pop
adc
arpl
add
mov
adc
add
movsl
inc
mov
cmp
add
pop
and
xor
inc
daa
cmp
dec
mov
sub
inc
push
movsb
xchg
stos
inc
mov
inc
inc
enter
or
dec
adc
mov
rolb
or
sub
mov
jle
inc
jnp
xlat
shlb
adc
adc
push
leave
and
dec
cwtl
dec
inc
push
ret
push
jne
push
pop
cmpsb
dec
or
pusha
cmp
insl
and
xor
psraw
test
push
or
sbb
mov
jne
push
lea
pop
add
mov
in
add
daa
sub
test
and
and
pusha
mov
mov
or
lret
mov
popa
in
xor
xchg
in
xorl
add
xor
test
push
jb
adc
pop
fmul
sub
cmpb
aas
inc
aad
sbb
inc
sub
fwait
and
loope
mov
xor
jmp
pop
cmpsl
add
push
popa
bound
jb
jae
push
dec
sahf
mov
or
sbb
scas
insb
mov
sub
push
adc
sbb
inc
mov
and
jmp
sbb
js
or
xor
pusha
push
push
mov
mov
popf
inc
in
jle
add
adc
pop
or
adc
push
push
mull
loopne
push
dec
imul
jl
push
dec
movsl
pop
jnp
jno,pn
mov
jb
jge
adc
dec
pop
add
insl
outsb
iret
push
sub
adc
pop
sub
pop
in
jl
imul
dec
push
inc
ret
xchg
test
add
aaa
pushf
mov
dec
outsl
add
mov
push
lea
cli
push
popw
or
mov
jle
sub
fistl
adc
add
xchg
xchg
pop
add
out
mov
iret
fadds
sub
fcmovb
add
lods
js
dec
push
popa
xchg
pushf
mov
sbb
push
sub
pop
sbb
push
clc
mov
push
add
and
ror
sbb
and
bound
mov
popa
sbb
pusha
pop
bound
add
dec
mov
movb
std
add
inc
insb
pop
jmp
adc
xchg
jmp
stos
inc
or
das
cmp
in
test
stc
fistl
mov
mov
sbb
movsb
arpl
gs
mov
fadd
loop
flds
push
push
add
inc
sbb
mov
scas
push
mov
inc
push
jmp
sbbl
insb
fiaddl
in
and
fistpll
xchg
push
mov
jmp
sti
lret
adc
or
and
or
or
daa
push
inc
pop
pushf
jbe
push
jb
shrl
add
dec
test
sub
dec
xor
mov
mov
mov
popa
cld
cmp
test
adc
xor
loope
pusha
movups
and
lods
lret
xchg
cwtl
sub
jg
pop
mov
inc
dec
loope
xlat
insb
outsl
fists
mov
adc
out
pop
mov
cmp
and
out
mov
inc
mov
inc
push
xor
sbb
dec
lock
push
adc
out
jl
out
out
pop
xor
and
mov
cmpsb
xor
adc
or
andb
mov
ret
add
sbb
fdivrp
add
sub
nop
inc
push
sub
push
sbb
adc
inc
push
sbb
adc
push
pop
sbb
sbb
sbb
sbb
nop
inc
push
sbb
push
sbb
add
inc
push
add
mov
pusha
xor
push
bound
mov
pop
dec
dec
mov
inc
and
ja
cmp
in
dec
mov
sub
jnp
adc
pusha
add
cmpsb
cmc
js
insb
add
jbe
int3
inc
cmpsb
cmp
addb
andl
fwait
inc
shlb
in
es
hlt
adc
jo
popa
jo
orl
data16
sub
ja
sub
addr16
es
andl
adcb
imul
add
aaa
daa
cwtl
outsb
adc
push
and
divb
insb
ja
add
ret
xchg
or
xchg
clc
xchg
and
xchg
xchg
inc
xchg
iret
and
and
sub
xor
cmpsl
test
or
cmp
nop
jl
mov
andps
pop
orl
and
ret
inc
or
in
or
mov
push
inc
mov
mov
dec
rcll
fwait
bound
clc
shl
outsb
or
shrb
jge
push
inc
adc
mov
ret
xchg
xlat
mov
test
add
adc
addr16
push
add
outsb
cmp
or
pop
cmp
cmp
int3
stos
in
lock
cwtl
mov
idivb
mov
push
sbb
fsubs
dec
mov
test
stos
inc
cmp
popf
stos
pop
adc
movsl
popf
in
lods
and
cmpsb
push
pop
fidivl
mov
xchg
cmp
in
jl
loopne
scas
nop
or
movsl
inc
mov
in
or
shrd
adc
dec
xor
fdivl
lcall
push
movsl
jge
imul
lds
jmp
xor
xor
adc
sbb
shll
cmp
pop
dec
shll
mov
lahf
test
xlat
xor
sahf
mov
cs
push
leave
pop
xor
addb
sub
sub
mov
or
mov
xor
dec
cwtl
or
test
call
loope
pop
sub
repz
mov
daa
push
cmpb
popf
insb
mov
stos
and
push
add
sub
add
cmpsb
jbe
inc
cmp
mov
adc
adc
xor
and
sbb
xor
test
xor
sti
mov
adc
invlpg
mov
push
int
scas
mov
loop
adc
and
cs
pop
mov
iret
push
jae
mov
scas
push
mov
xchg
cmp
mov
adc
es
mov
mov
hlt
pusha
stos
popa
xchg
aam
das
rorl
xor
sbb
in
mov
xor
mov
mov
and
mov
push
push
add
pop
sahf
lea
sbbl
adc
fdivrs
fisubl
mov
push
fisubl
dec
mov
fs
or
mov
nop
inc
push
cmp
fcomp
inc
push
cmp
fcomp
fcomp
cmp
nop
fcomp
fadd
mov
ss
enter
daa
in
inc
push
inc
fcomp
fcoms
fcomp
xorb
in
mov
pop
jmp
mov
push
std
add
xor
shrl
dec
shll
xchg
fwait
movsl
scas
mov
ror
xlat
loope
lea
leave
rcr
out
xchg
inc
jb
sti
out
or
dec
add
xchg
push
push
mov
je
inc
cmp
lret
mov
mov
mov
fcmovbe
cmp
sub
divb
xchg
push
shll
jns
dec
shll
mov
xor
shll
rcr
out
dec
rcrl
sti
add
and
es
push
sub
cmp
sbb
in
xchg
xor
loopne
adc
addr16
and
fucompp
push
mov
call
les
cmp
cltd
in
insb
sarl
js
mov
mov
pop
adc
inc
shrb
jns
mov
insb
pop
loop
enter
xchg
mov
cmpsb
imul
lcall
sbb
imul
imul
cmpsb
imul
imul
cmpsb
imul
int
xchg
mov
in
mov
xchg
xchg
clc
xchg
pop
mov
add
and
xor
sub
and
popa
insb
leave
dec
adc
enter
aam
jb
and
aam
jb
and
and
and
aam
imul
arpl
mov
repnz
jb
and
xchg
aam
pop
adc
inc
pop
ss
adcb
insl
cmpsb
imul
imul
cmpsb
imul
or
lcall
cmpsb
imul
and
insb
lcall
mov
jbe
push
pusha
xchg
sbb
loopne,pt
cwtl
and
xor
push
push
dec
adc
cmp
insb
fimull
rcr
imul
in
stc
add
or
dec
pop
and
xor
shll
pop
addr16
lods
xor
cltd
insl
xchg
xorl
xchg
lahf
test
xchg
cmp
xor
push
cltd
dec
push
add
and
or
sub
bnd
cltd
fs
dec
rcl
shlb
es
rclb
rcl
dec
es
fs
shlb
cltd
fs
rcl
rcl
cltd
fs
dec
rcl
shlb
es
rclb
rcl
fwait
and
dec
mov
in
sub
jbe
xchg
dec
es
rcl
shlb
xor
add
lcall
cmp
imul
imul
imul
dec
shrl
jecxz
testl
or
adc
lret
dec
xchg
inc
and
in
js
data16
ds
adc
push
or
adc
inc
xor
push
dec
ss
and
inc
daa
aam
mov
cmp
xor
in
fwait
xor
add
push
popf
pop
push
imul
cmpsb
imul
imul
lcall
sub
aas
dec
xor
push
inc
dec
inc
jb
cmpsb
pop
arpl
notl
lock
pop
add
es
lds
mov
mov
popa
cvttps2pi
popl
dec
push
jb
aaa
int
into
sbb
adc
imul
mov
imul
imul
push
sbb
cmpsb
imul
imul
push
sbb
ds
sbb
pop
dec
test
fmull
lea
sub
cs
das
cli
iret
cmp
xor
enter
add
mov
mov
mov
xor
xor
inc
or
xor
shrl
xor
shll
test
xchg
jle
push
test
loop
xchg
push
push
jo
mov
aas
daa
or
add
loop
jmp
mov
cmp
mov
lcall
in
stc
cmpsb
imul
pop
and
lcall
push
pop
addr16
cmpsb
imul
mov
sub
les
xor
imul
loopne
jecxz
rcll
jo
push
sbb
movsl
xchg
push
scas
dec
shll
mov
ror
fucomip
rcrl
xor
std
pop
inc
adc
sbb
xor
and
push
xor
shll
imul
sbb
pop
rcll
lods
movsb
das
ja
pop
enter
pushf
cmpsb
sbb
mov
add
aaa
xor
pop
add
mov
jne
pop
push
ret
int3
int3
popf
cmpsl
mov
push
mov
cmpsb
ret
int
lods
imul
imul
cmpsb
imul
insb
lcall
lretw
add
mov
push
add
and
out
push
xchg
pusha
and
cmp
add
fisubs
nop
loopne,pt
enter
add
and
test
cmpsb
adc
out
push
clc
lods
mov
leave
test
cmp
jnp
add
mov
test
xchg
fs
data16
dec
push
lock
cld
push
or
adc
mov
sbb
cmpsl
sub
add
out
call
arpl
jmp
ljmp
jmp
mov
enter
repnz
imul
xchg
test
pusha
mov
cmpsb
dec
fdivrs
clc
out
cmp
leave
inc
push
fcmovnu
loopne
fistpll
fwait
mov
adc
pop
imul
int3
fnstenv
jns
dec
fisttpll
in
aad
ja
adc
rcrb
jb
arpl
les
fmull
or
dec
in
dec
push
roll
adc
xchg
in
sub
inc
push
cmp
int3
int3
inc
push
cmp
int3
int3
int3
mov
out
int3
int3
enter
pop
fcmovbe
mov
xor
in
inc
push
int3
int3
int3
xchg
inc
push
cmp
int3
int3
fs
es
cmp
cmp
stos
pop
or
cmpsb
mov
push
mov
jecxz
cmpsb
mov
in
jns
addl
adc
imul
cmpsb
imul
imul
cmpsb
imul
cmpsl
imul
lods
imul
imul
cmpsb
imul
imul
cmpsb
imul
imul
cmpsb
imul
fwait
repnz
and
in
repz
ja,pn
lods
lock
sbb
mov
scas
pop
pop
fimuls
cmp
fcoms
jb
push
nop
adc
mov
loopne
repnz
andps
dec
sub
add
incl
sbb
mov
adc
inc
cmp
sbb
mov
add
and
shlb
pusha
adc
adcl
cmp
xor
and
dec
lahf
lods
inc
ret
mov
js
lods
shrb
jae
sbb
loopne
inc
or
js
jb
and
sar
scas
push
inc
inc
stos
adc
sub
imul
mov
insb
xor
and
dec
mov
lea
mov
lods
mov
je
push
xor
jne
clc
inc
sti
sarl
xor
rcl
mov
test
mov
mov
movsl
lods
xchg
xchg
and
adc
iret
fs
in
mov
sbb
add
sbb
mov
adc
lock
rcl
arpl
cmp
mov
adc
push
cs
sbb
xor
test
pop
push
sbb
cmp
xor
lods
and
faddp
sub
scas
add
enter
push
cmp
or
adc
mov
dec
movsl
push
inc
jle
mov
fisttpll
mov
mov
sbb
add
out
cld
mov
mov
sbb
adc
dec
push
out
jl
ljmp
mov
mov
mov
inc
mov
out
outsl
or
and
aaa
mov
daa
mov
pop
adc
jg
add
and
fwait
mov
or
bound
test
inc
add
aad
imul
mov
call
xor
fadds
js
pop
pusha
orl
mov
ficompl
repz
mov
in
adc
test
push
cmp
and
sbb
jg
push
sub
mov
inc
add
xor
dec
mov
xchg
pop
push
es
ljmp
add
call
push
push
int
cmp
inc
push
mov
xor
aaa
hlt
ss
ja
push
nop
mov
jns
stos
fs
fisubrl
daa
loopne
xor
and
adc
nop
pushf
mov
sub
mov
dec
test
in
ret
add
and
inc
sub
inc
ja
sbb
sub
lea
shlb
repnz
lahf
push
pusha
faddl
mov
call
xor
add
and
adc
pusha
cld
add
sbb
sar
pop
or
out
and
jb
jmp
mov
out
or
hlt
xchg
in
cmp
int
xchg
lea
arpl
adcb
lds
mov
pop
test
xlat
jae
sub
cmp
fwait
gs
or
clc
cld
lahf
hlt
test
cld
adc
leave
inc
andb
jle
movsb
in
sbb
cld
mov
jb
push
jne
or
bound
pop
xlat
push
test
rorl
and
lret
add
fcmovbe
movsb
mov
mov
and
sbb
test
and
mov
and
daa
sbb
inc
cmpsb
sub
pusha
pop
mov
push
dec
out
das
mov
dec
mov
mov
test
and
xchg
loop
or
or
stc
xchg
jno
aad
cmpsb
inc
inc
mov
bound
inc
pop
leave
aad
or
sbb
push
popa
ja
and
mov
mov
push
mov
sub
xchg
cmp
cpuid
adc
sarb
inc
cmp
sub
mull
adc
mov
rclb
dec
mov
or
mov
in
cld
hlt
add
or
xchg
sub
in
dec
adc
nop
sbb
pop
in
adc
or
and
vmwrite
mov
dec
in
xor
pop
filds
mov
jo
les
test
test
pusha
inc
clc
add
and
and
pop
push
pop
rcl
inc
ja
adc
nop
adc
mov
pop
xor
hlt
dec
and
xor
add
xchg
xlat
lea
xchg
xor
add
mov
imul
stos
stos
push
cmp
pusha
dec
mov
aam
cwtl
or
inc
bound
dec
inc
sbb
ljmp
rorb
adc
mov
test
or
and
jmp
cld
cmp
and
pop
jecxz
test
nop
hlt
dec
xor
inc
mov
cmp
cmp
cmpsb
add
push
mov
cmp
push
and
inc
insb
pushf
sub
shll
jb
mov
in
ret
repnz
mov
xchg
cmp
add
mov
adc
jecxz
in
add
sub
cmp
hlt
xchg
cmp
call
stc
test
call
xchg
add
imul
jo
test
stos
daa
in
inc
in
add
sbb
stos
xor
lea
call
inc
popf
outsl
ja
les
and
push
add
xchg
sub
xchg
or
inc
sub
or
mul
lds
and
mov
imul
cwtl
mov
xchg
mov
adc
and
push
and
cmp
sbb
and
xchg
addb
and
push
sbb
push
or
or
mov
inc
into
les
push
dec
push
sbb
pusha
and
mov
push
mov
repnz
mov
or
push
js
xlat
mov
in
cmpsl
lods
icebp
or
adc
and
clc
clc
mov
adc
xchg
lret
pop
and
add
ficoml
iret
enter
addl
xor
aad
or
mov
xlat
in
pop
mov
int3
add
enter
fcmovu
aad
stos
fnstcw
ror
ror
testb
jmp
mov
add
test
outsl
mov
rcrb
mov
roll
rorb
lret
stc
sar
enter
add
dec
dec
xor
mov
cmc
in
addr16
adc
sbbb
in
inc
adc
pop
xadd
jns
inc
ss
adc
pop
call
jo
xchg
into
mov
cmpl
in
iret
cmp
icebp
lods
js
adc
insl
insb
les
xchg
pushf
and
rcrb
and
hlt
push
call
mov
inc
shrl
lods
insb
cmp
push
imul
mov
mov
or
rolb
mov
dec
lea
adc
into
mov
mov
fsubrl
mov
push
push
mov
mov
fstpt
xor
nop
loop
inc
or
jb
lock
pop
or
cmp
and
push
add
jo
mov
jg
es
addb
dec
cwtl
jecxz
and
scas
and
inc
mov
pop
xchg
or
xchg
xchg
xchg
add
mov
orb
jns
popa
addr16
push
inc
dec
mov
outsl
icebp
push
shrl
xor
mov
mov
je
cltd
or
sub
sbb
jbe
cs
push
imul
inc
push
popf
or
shl
xchg
add
adc
inc
push
lea
daa
adc
leave
sbb
movsl
cmpsb
add
aam
lea
test
outsb
loope
aad
hlt
and
les
mov
inc
push
or
pushf
cli
data16
adc
cmpsl
rorb
ret
aad
push
xor
jmp
mov
test
sbb
jns
daa
dec
adc
mov
std
das
ljmp
push
cmpb
or
mov
sbb
ret
scas
mov
roll
cmp
dec
enter
sub
fdivrs
sub
or
pop
add
and
cmpsl
loopne
cmp
xchg
adc
adc
or
or
dec
jnp
dec
shrb
mov
popa
int3
int3
arpl
and
int3
or
or
sub
pop
call
imul
mov
sub
add
int3
add
mov
iret
fldcw
cli
mov
out
cld
fldcw
sti
xchg
or
aaa
dec
or
adc
sub
sub
and
push
xchg
mov
xlat
add
or
fiaddl
or
mov
xlat
lret
fwait
test
sbb
sbb
push
leave
push
or
mov
fisttpl
in
inc
fistl
aam
addb
xor
xor
jne
scas
and
adc
bound
push
xor
xchg
pop
repnz
jb
adc
sub
int
dec
adc
fsubr
bound
jo
popa
xchg
sub
arpl
pushf
inc
into
fs
fisttpll
and
jae
cmpsb
insl
and
pop
or
and
nop
inc
cli
push
lods
andnps
xchg
dec
push
pop
pop
xchg
mov
nop
lea
stos
push
adc
xlat
sbb
inc
cmpsl
aas
mov
mov
adc
sub
subps
sub
loopne
pushf
inc
pop
or
push
inc
add
fists
in
loope
fadd
test
lcall
out
inc
insb
or
xor
adc
test
sbb
popa
pop
dec
movsl
dec
push
in
pop
stc
sbb
pop
adc
push
or
and
mov
loop
leave
push
inc
rclb
pop
pop
sub
jbe
adc
push
pop
pop
popf
gs
cmp
and
xchg
and
pushf
cmp
xor
aam
dec
fstl
xchg
mov
jecxz
add
and
test
xchg
in
mov
bnd
pushf
or
push
mov
mov
adc
inc
test
loop
les
and
addr16
push
in
xchg
cmp
pop
push
jb
or
or
enter
out
shl
dec
pop
dec
test
sub
or
mov
pop
and
inc
push
push
lods
dec
mov
xor
test
out
dec
imul
dec
pop
push
dec
xchg
fsub
or
xchg
mov
mov
test
lds
fadds
mov
sbb
push
or
aaa
adc
or
nop
in
aas
shlb
push
repnz
push
cmpsb
adc
adc
jge
scas
nop
and
inc
pop
inc
and
add
xor
lods
xchg
fcoms
leave
adc
xchg
mov
ljmp
mov
loope
inc
jg
ljmp
out
jmp
pop
xor
mov
mov
jb
mov
nop
inc
sahf
adc
jmp
orb
dec
movsb
pop
jb
inc
jns
xor
mov
inc
push
adc
xchg
shr
les
clc
in
push
mov
add
in
in
je
test
popa
lea
nop
or
sub
sub
mov
mov
in
jecxz
or
and
add
mov
lods
push
add
push
pop
dec
jg
scas
leave
and
lahf
jmp
sti
lock
and
dec
ficoms
mov
leave
aad
loopne
in
xor
imul
push
or
push
adc
mov
jmp
xor
cmp
aad
lods
enter
mov
faddp
and
xlat
clc
sbb
push
and
pop
mov
nop
add
imul
daa
push
cld
addb
dec
cld
adc
leave
mov
out
xor
xchg
or
or
leave
mov
and
daa
mov
inc
and
push
lods
inc
scas
adc
nop
mov
in
sbb
adc
repz
aas
pop
leave
adcb
ret
stos
fwait
dec
xor
in
push
or
fwait
pop
add
scas
adcl
sbb
push
ret
lret
sbb
jmp
jno
outsl
hlt
incl
dec
rorb
dec
and
inc
pop
in
mov
es
in
and
movsl
adc
andl
inc
xchg
adc
loope
xchg
jnp
jno
mov
or
xor
cmc
pop
sub
pop
in
push
rep
or
call
mov
xchg
lahf
nop
xchg
lods
cmpsb
xchg
cmc
adc
add
dec
add
adc
jo
xchg
nop
neg
push
push
bound
add
add
mov
inc
insl
in
ret
ljmp
nop
mov
and
cmpsb
dec
data16
shl
jns
adc
sbb
dec
fdivrs
pop
es
push
stos
mov
and
and
ja
negl
cmpsl
add
sbb
or
sub
dec
xchg
les
add
push
clc
call
push
in
push
lds
lahf
lahf
xchg
clc
mov
mov
sbb
xchg
mov
adc
dec
dec
push
pop
sbb
inc
xor
test
dec
xchg
popa
dec
push
lds
inc
das
xor
mov
add
adcb
adc
xchg
and
loopne
andl
cmp
fs
adcl
mov
fdivrl
movsl
xchg
dec
cmpsl
gs
inc
or
or
idivl
cmp
sbb
push
add
or
fs
pop
testl
les
dec
push
out
lock
inc
cmp
cmpsb
std
pop
lea
or
cmpsl
jne
movsb
inc
xchg
or
lea
jmp
sbb
movlps
sbb
sub
fcoms
push
xor
outsb
or
pop
and
out
mov
sbb
pop
or
sub
loop
iret
pop
and
adc
int3
push
xchg
xor
movsl
into
xor
lock
aam
jns
push
and
push
and
and
aas
in
fnsave
imul
shrl
mov
adc
loopne
inc
les
push
pop
fdivr
scas
add
std
leave
jb
sahf
pop
and
pop
mov
sbb
xchg
in
xor
nop
faddl
bndldx
push
jo
lret
push
aas
xchg
lret
pop
daa
bound
sub
subb
fmul
push
or
inc
bound
out
dec
hlt
sub
pushl
pop
adcl
arpl
repnz
dec
cmp
inc
xor
and
test
fcmovnb
mov
addb
cmpb
adc
aaa
cmpsb
ret
or
jg
xchg
test
ret
incb
mov
icebp
daa
insl
xchg
cmp
out
xor
push
les
dec
jne
dec
lds
and
sahf
aas
paddsb
or
adcb
push
incb
dec
dec
data16
lcall
outsl
mov
cwtl
and
mov
mov
add
fsubl
mov
add
xlat
and
mov
xchg
nop
lea
jo
in
or
xorl
jns
sarl
sub
push
fwait
dec
faddl
pusha
add
mov
movsl
lret
js
cmpsb
flds
ficoms
popa
dec
or
shrb
arpl
push
out
adc
dec
ficomps
push
mov
xorl
and
inc
mov
addr16
popl
push
pop
xchg
mov
sub
jl
inc
pop
mov
xchg
addl
out
dec
mov
test
jno
sahf
inc
mov
dec
dec
mov
and
sub
pop
pushf
fdivrs
xchg
subl
pop
cmc
nop
cld
sbb
rorb
dec
imul
push
pop
cmp
pop
cmp
stos
sbb
bound
inc
and
jae
inc
add
or
pusha
and
testb
jbe
out
fsubs
push
pop
sub
add
mov
rcrb
mov
cmp
add
sub
mov
int
rolb
aaa
or
es
xchg
sbb
das
pop
add
adc
mov
pop
fbld
xchg
pusha
pop
das
insb
add
ret
test
jb
orb
into
addr16
push
shl
test
mov
sbb
insl
es
rcr
mov
data16
mov
fisubs
sbb
jb
adc
jne
lods
mov
mov
das
cmpsb
push
test
inc
pop
fidivs
pop
out
dec
pop
adc
pop
or
imul
push
jno
out
inc
inc
cs
xorb
addr16
xor
or
xchg
js
xor
push
out
mov
jae
add
add
or
dec
shll
dec
das
push
mov
adc
negb
dec
out
inc
cwtl
lods
push
dec
adc
and
ss
mov
push
push
fimull
adc
imul
lahf
add
ljmp
pusha
pop
mov
inc
push
inc
add
out
inc
adc
addr16
push
inc
das
push
daa
dec
push
mov
inc
push
daa
push
fisubrs
into
push
inc
enter
daa
add
push
or
scas
pusha
dec
pop
pop
pop
ljmp
pop
or
into
jle
push
and
xchg
jae
xor
in
inc
pop
push
popa
dec
arpl
or
sbb
out
ret
push
fcompl
push
into
jns
pop
in
mov
dec
lret
inc
jne
or
addr16
xchg
add
sbb
das
mov
dec
or
jo
sbb
push
rcrb
push
mov
pop
fimull
push
aas
daa
sbb
add
cmpsb
bound
push
jb
movsb
fstl
cli
bound
cmpsb
push
xchg
pusha
mov
push
out
xrstor
mov
sti
inc
adc
adc
sbb
jns
insl
movsl
jmp
push
mov
adc
notl
xchg
mov
mov
rcr
or
ss
pop
pop
outsl
or
in
and
repnz
or
jl
sub
in
push
pusha
and
mov
cmp
mov
das
pop
push
test
cmpsb
imul
imul
dec
shll
mov
cmpsb
imul
sub
insb
lcall
in
lcall
jle
adc
or
or
insb
lcall
or
imul
cmpsb
imul
cmpsb
imul
pusha
aam
rclb
int3
and
mov
dec
mov
push
mov
dec
shll
imul
test
push
movsb
cmp
imul
insb
lcall
mov
lods
test
addb
lcall
das
lret
mov
add
dec
cmp
or
cmovns
dec
fwait
cli
dec
sub
xor
xlat
inc
pop
push
sub
cli
dec
push
es
inc
inc
ss
jmp
jnp
add
pop
movsl
bound
pop
xchg
paddb
push
jbe
lret
xchg
pusha
dec
mov
sub
sahf
add
jns
adc
or
cmp
pop
sub
loope
pop
or
pop
mov
add
das
add
push
lods
add
sub
xor
adc
pop
outsb
push
add
test
push
lret
sahf
mov
fisubrs
sub
xchg
mov
arpl
mov
jge
add
push
inc
jo
scas
jo
daa
jbe
mov
inc
into
add
and
push
pop
pusha
pop
inc
mov
arpl
pop
push
pop
test
xchg
pushw
jp
leave
sub
push
lahf
xor
or
jge
enter
jns
in
add
nop
xchg
mov
xor
mov
push
mov
callw
packuswb
int3
je
imul
les
inc
shlb
and
or
subl
lock
imul
pushf
lods
lcall
mov
mov
push
test
or
pop
cmp
les
and
mov
and
popf
fsub
cwtl
xchg
into
or
or
adc
push
mov
xor
push
movsb
dec
push
adc
fadds
mov
mov
push
loope
les
dec
cltd
pop
push
sub
push
lahf
add
sub
adc
inc
jmp
dec
pop
lock
iret
push
bound
addb
lock
std
in
and
das
das
ja
ja,pn
cs
das
jge
fildl
test
rcll
popa
sbb
sub
or
push
add
mov
or
add
push
orl
pop
or
or
enter
or
push
std
cli
jae
imul
mov
in
dec
lret
mov
mov
shrb
add
pusha
bound
addr16
and
jo
push
push
data16
les
sbb
test
add
sub
ss
pop
jno
pusha
das
pop
insb
cmp
push
or
jns
nop
data16
mov
aaa
cwtl
insb
loop
mov
xchg
inc
xchg
clc
mov
mov
mov
roll
cwtl
popa
mov
inc
mov
cs
jb
nop
test
add
inc
ret
mov
out
add
stos
push
push
or
push
lahf
push
inc
inc
sbb
or
cmpsb
or
btr
call
inc
dec
jle
in
pop
inc
push
and
and
xchg
vpermq
ja
arpl
and
xchg
and
xchg
mov
dec
add
sahf
daa
dec
ret
pop
shlb
add
jne
and
push
fcom
cltd
enter
pop
add
xor
jle
scas
pop
pop
imul
enter
or
mulb
or
and
das
push
fs
inc
adc
dec
add
add
push
xchg
es
daa
sbb
es
pop
xor
sti
and
and
pop
test
push
pop
mov
pop
or
add
xchg
add
inc
add
outsb
ja
pop
ljmp
sbb
sbb
fdivrl
rclb
xor
aam
fdivl
pop
int3
aaa
fwait
sbb
out
andl
xor
ret
lock
daa
push
pop
and
out
and
rcrb
mov
movb
xchg
decb
jnp
mov
into
cmpsb
je
jge
xlat
in
sbb
pop
call
xchg
mov
jo
daa
dec
iret
fucom
sub
fcoml
sbb
test
cld
xor
mov
mov
aaa
dec
in
mov
dec
lock
mov
adc
xor
xorb
movsb
inc
sub
xchg
cld
mov
cld
adc
cmp
inc
add
add
rclb
test
pop
dec
stos
orl
cmp
adc
rolb
mov
flds
or
push
push
adc
mov
out
jne
orl
or
jp
adc
es
test
push
jno
jp
xchg
insb
lods
add
push
add
push
rcrl
movsl
inc
inc
xchg
adc
and
call
fidivl
in
mov
adc
in
mov
sarb
scas
adc
imulb
adc
adc
mov
sbb
xchg
jecxz
mov
and
inc
add
dec
sbb
or
mov
fs
jnp
cmc
inc
push
inc
rol
adc
hlt
mov
ret
push
std
mov
xchg
pop
jle
test
ret
call
imul
fsubs
cltd
lahf
loopne
int
scas
les
cld
fsubr
lea
mov
push
movsl
insb
and
pop
ret
mov
cmp
inc
rol
int3
fsubs
dec
loopne
cwtl
outsl
in
loope
adc
or
movsb
cmp
sbb
push
aas
inc
or
push
jmp
call
xchg
xorl
imul
adc
jns
pop
jns
dec
and
adc
jmp
test
adc
mov
pop
repnz
inc
jge
jmp
adc
inc
add
xchg
adc
popf
jne
pushl
cld
mov
push
or
xor
mov
sub
add
fisubl
fcomps
or
mov
push
inc
idivl
push
add
scas
mov
popa
hlt
nop
shlb
sbb
sti
sbb
pop
xor
sbb
sub
mov
fisubrl
cs
cmp
mov
add
cmpsb
and
popl
mov
mov
sbb
cmp
js
rorb
and
sub
pop
push
stos
dec
mov
xchg
mov
add
jae
xchg
pushf
insl
pop
dec
jae
bound
fbld
mulb
mov
push
pop
adc
nopl
dec
pop
fs
daa
or
lea
add
jbe
push
test
out
add
shrl
mov
outsb
mov
mov
and
js
sbb
xchg
sbb
ja
movsb
sub
outsb
notb
pop
insb
jns
xchg
mov
or
jne
mov
mov
inc
pop
lea
xor
push
out
pop
push
mov
sub
imul
imul
mov
das
push
lods
sub
pop
lds
mov
jae
insb
add
xlat
sbb
adc
aaa
sahf
add
push
lcall
mov
ret
pop
pop
fbstp
outsl
xchg
xlat
repnz
outsl
popw
out
outsw
jne
xchg
dec
pop
jo
or
xlat
scas
jo
fs
daa
mov
pushf
daa
pop
addr16
and
ret
inc
out
jo
cs
mov
ficoml
pop
push
imul
xchg
jae
inc
dec
jae
nop
pop
push
insl
jb
addr16
je
pop
aaa
mov
out
shlb
push
xchg
out
fiaddl
mov
outsb
ffree
outsl
push
movsl
imul
jbe
call
lret
pop
sbb
ja
notl
add
dec
jbe
cmc
gs
mov
movsl
loopne
dec
andl
arpl
mov
jb
scas
aad
push
insb
pop
shrl
push
lods
incl
enter
xchg
in
test
push
jmp
pop
outsb
cltd
fwait
aas
movsb
mov
fildll
mov
push
ss
mov
push
out
and
gs
insl
test
fisttpll
test
inc
xor
jmp
jo
rcrb
push
push
je
inc
call
divl
pop
imul
pop
sbb
nop
fildl
or
shll
sub
jb
dec
and
daa
and
dec
out
sbb
out
mov
dec
xchg
and
mov
sub
adc
dec
fstps
add
mov
or
fbstp
je
inc
imul
inc
jg
xlat
in
mov
outsb
out
mov
bound
mov
xor
cmp
fisubl
iret
outsl
int3
out
data16
add
pop
sub
pop
cmp
inc
xchg
xchg
cmp
ds
jb
cmpb
ds
movsb
add
cmp
xor
imul
dec
pop
jg
and
add
and
dec
cwtl
jmp
test
xchg
mov
dec
adc
pusha
sbb
outsl
movsl
push
add
shll
addr16
add
dec
bound
sbb
lcall
ret
addr16
shrb
fwait
dec
xor
pop
pop
das
xchg
and
xchg
xor
adc
xor
lahf
cld
es
in
lock
push
dec
repz
sub
int3
sub
add
push
inc
inc
add
aaa
add
dec
test
sbb
cmpsl
insb
pop
sbb
push
enter
mov
add
adc
jge
xchg
push
adc
aas
lods
and
dec
and
pop
shl
and
dec
inc
push
inc
add
scas
xadd
mov
ret
fiadds
pop
sbb
js
and
jo
jbe
pop
inc
xor
pop
dec
push
push
das
add
adc
or
and
push
inc
dec
aas
mov
cmp
dec
ds
pop
sbb
adc
aam
pop
jb
or
xor
push
sub
fisttps
mov
dec
js
aas
sub
inc
cwtl
dec
insb
xchg
int
pop
xor
pusha
dec
clc
nop
dec
add
and
push
xchg
push
dec
dec
adc
adc
pop
in
loopne
je
cs
sub
adc
nop
mov
mov
scas
pusha
push
pop
fcomps
and
scas
or
pop
cmpl
inc
xor
jae
sub
and
mov
pop
pushf
sub
push
inc
enter
pop
cwtl
push
xchg
mov
incb
and
inc
xor
inc
outsl
sbb
add
mov
sbb
out
inc
dec
fs
sbb
add
dec
loop
and
insl
sbb
jmp
in
stos
insl
pusha
xbegin
or
mov
ljmp
mov
or
adc
add
lds
or
movsb
push
enter
and
mov
pop
pushf
pop
xchg
js
and
adc
fiadds
and
push
push
nop
cmp
mov
daa
dec
xor
test
cmpsb
orb
xor
inc
in
push
scas
and
push
add
cs
aas
adc
push
sahf
test
aaa
pop
push
xor
shll
mov
xorb
adc
inc
in
mov
pop
inc
and
pop
add
adcl
push
or
pop
xor
sbb
add
pop
adc
mov
add
out
dec
or
cli
lods
adc
inc
mov
pop
add
das
rolb
xchg
pop
and
adc
sub
loop
lds
lea
movsb
mov
mov
adc
cltd
test
or
sbb
push
lock
stos
hlt
sub
inc
or
enter
mov
adc
insl
mov
xor
adc
push
sbb
dec
or
repz
rorb
mov
out
sahf
jge
hlt
or
inc
mov
arpl
jg
adc
in
test
sbb
dec
inc
add
adc
vaddps
xorb
push
sbb
divl
push
dec
pop
dec
xor
test
push
stos
sbb
sbb
dec
test
or
mov
aas
mov
in
xorl
cmp
mov
dec
xor
or
shrb
sbb
daa
and
jmp
enter
inc
mov
jo
inc
aas
lock
outsb
jmp
fwait
cmpw
jb
or
sbb
cmpl
xor
shl
inc
popf
sub
add
data16
pop
inc
outsb
sbb
inc
push
and
bnd
xchg
aas
pop
adc
or
lcall
sub
test
xchg
sar
les
pop
jmp
pop
pop
and
ja
sbb
sbb
data16
dec
cs
inc
and
or
pop
fiaddl
push
scas
or
popa
sbb
sbb
imul
xchg
inc
out
mov
adc
adcl
ss
sbb
and
scas
or
pop
cmovbe
fwait
xchg
xor
and
or
push
ret
into
loope
test
pop
pop
jge
and
sub
movsl
sbb
popa
rdtsc
add
xchg
cmp
cmpsb
push
mov
cli
outsb
pop
out
into
test
mov
add
test
mov
mov
test
pop
pop
jmp
xchg
in
pop
add
or
push
sub
jne
fs
or
sbb
mov
mov
push
ljmp
adc
in
call
lds
ja
inc
mov
pop
push
in
inc
or
clc
cmp
shrb
and
push
push
int
imul
and
inc
or
xchg
push
imul
lods
and
inc
or
and
or
push
insl
insl
adc
and
push
ss
clc
out
push
mov
out
daa
lods
xor
cmp
ja
mov
call
dec
and
adcl
lock
mov
cmp
xor
mov
and
call
cmp
int
xchg
jns
ret
cmpsb
add
filds
mov
mov
pop
add
fbld
les
test
sbb
xchg
xchg
jnp
adc
call
inc
xor
cld
mov
int3
loope
enter
fisttps
cmp
or
leave
or
inc
push
cmp
push
xor
mov
inc
and
xchg
pop
inc
or
push
cmp
add
or
cwtl
insb
lods
aad
int3
lods
adc
add
fwait
unpckhps
movswl
or
loopne
mov
sbb
inc
sub
inc
add
add
or
sbb
adcb
pop
push
cmp
and
and
add
cmpsb
add
mov
nop
jbe
mov
mov
daa
push
sub
mov
push
pop
xor
ret
push
sbb
outsl
adc
inc
inc
sub
arpl
or
or
cvttps2pi
inc
xor
movsl
sbbl
add
shrb
add
and
addb
lods
es
imul
in
nop
imul
gs
movsb
cltd
in
fsubs
in
fcoml
add
or
dec
cmp
rdmsr
pop
dec
mov
jge
sub
nop
aaa
fwait
aam
int
and
ret
inc
mov
mov
xchg
sbb
aad
rcl
mov
cmp
add
pop
inc
adc
mov
dec
pop
sbb
pop
and
wrmsr
lods
in
dec
mov
sbbl
outsl
int3
repz
mov
xchg
int3
push
outsb
mov
adc
enter
outsl
les
inc
fisubl
or
fs
mov
mull
sub
adc
pop
ds
or
inc
dec
fucomi
jno
cwtl
scas
mov
cmpsb
cmpsl
icebp
mov
or
enter
inc
mov
dec
mov
mov
ss
push
mov
clc
bound
scas
lret
inc
sbb
ljmp
cmp
aam
dec
inc
sbb
jge
or
das
mov
inc
cmp
jle
das
xor
and
adc
xor
add
pushf
mov
arpl
jmp
gs
sbb
adc
cltd
push
or
call
dec
mov
subb
jae
xlat
repnz
pop
mov
in
popf
or
inc
sbb
cbtw
cmp
andb
insb
push
mov
and
subb
daa
or
pop
xor
cmp
add
daa
pop
push
cmp
mov
les
loopne
xchg
mov
ss
adc
pop
mov
cmp
add
cmp
and
in
adc
cmpsl
mov
mov
movb
orl
pop
pop
mov
xor
xchg
pop
jo
mov
push
cmpsl
pop
xchg
xchg
les
inc
mov
pop
sub
stos
mov
mov
cmpsb
aas
roll
sbb
cmpsl
lcall
xor
out
adc
adc
mov
daa
push
sub
mov
inc
xchg
repz
aas
xor
push
adc
lret
jg
aam
pop
js
jl
push
jmp
and
mov
jne
adc
inc
enter
jb
dec
enter
inc
xor
jb
mov
loop
mov
cmp
inc
cmp
sahf
jge
imul
inc
es
and
inc
movsl
cmpl
mov
cmpsb
jno
outsb
fimull
mov
mov
out
add
ds
dec
clc
xchg
add
arpl
dec
daa
or
pop
jb
mov
pushw
cmp
adc
and
jp
adc
les
sbb
movsb
mov
push
inc
push
insl
sbbb
pop
push
clc
pop
addl
sbb
cld
push
or
hlt
inc
sbb
imul
imul
outsl
push
add
pop
and
outsl
pop
enter
push
outsl
in
or
fwait
cltd
es
jmp
inc
sub
lret
fisubrl
idiv
orl
lcall
sbbl
loopne
nop
cmp
or
fnstcw
inc
jnp
or
pushf
mov
add
push
add
pop
xor
fnstenv
aaa
roll
push
inc
and
push
movsl
ret
mov
sbb
push
gs
mov
jnp
mov
sub
adc
mov
jne
inc
or
clc
mov
and
jbe
pusha
inc
and
pop
ss
add
push
test
cltd
add
imul
aam
movsb
mov
xchg
lds
inc
jo
adc
push
and
ljmp
adc
push
xor
out
test
pop
push
popf
jo
xchg
push
jp
inc
pop
adc
inc
rolb
or
stos
mov
and
jno
loopne
add
add
inc
push
add
adc
jb
mov
scas
popa
das
sub
adc
out
fisubs
mov
push
leave
ret
addr16
push
mov
inc
xorb
xchg
shrb
add
mov
add
mov
andps
dec
ja
push
push
add
or
shrb
add
cmp
neg
rorb
rcrl
sbb
jle
sub
mov
mov
xchg
or
inc
sub
cmp
imul
add
cs
mov
mov
sbb
je
sub
xor
les
sbb
insl
pop
mov
pop
nop
iret
inc
add
inc
adc
push
push
dec
rcll
pop
pop
xor
movsb
mov
inc
xor
shlb
sahf
fsubrs
jnp
rolb
mov
subl
dec
sbb
pushf
adc
sbb
push
pusha
cmp
into
xchg
adc
in
cmpb
and
fisubrl
push
dec
adc
adc
bound
les
xchg
cld
or
nop
rorl
dec
cmp
or
nop
cmp
ja
dec
iret
and
mov
pop
rcr
push
fbstp
dec
sbbl
push
inc
test
pushl
ror
fmull
sahf
sbb
and
inc
nop
or
push
push
xchg
mov
test
or
adc
mov
add
andps
adc
test
adc
mov
add
and
dec
cmpsl
cmp
les
or
bound
xchg
pop
mov
push
lock
xor
and
cmpsb
mov
cmp
sub
popa
arpl
test
adc
pusha
dec
push
or
sbbl
cmp
push
mov
xchg
outsl
and
xorb
in
jb
or
adc
das
mov
sahf
or
pop
test
ret
leave
xchg
sbb
ss
adc
pop
xchg
inc
cmp
sbb
adc
into
sbb
inc
leave
adc
xacquire
pop
test
in
xor
inc
enter
cmp
adc
mov
push
sbb
and
push
jb
loope
rcll
mov
dec
push
and
or
sbb
push
imul
xor
inc
enter
push
jb
and
pop
test
mov
aaa
in
test
daa
push
push
pop
xchg
daa
daa
and
xor
cmp
inc
pop
and
ret
adc
xor
add
iret
enter
pop
or
ds
shrl
dec
and
gs
pop
sub
mov
shlb
icebp
insb
icebp
test
sbb
je
test
lods
out
pop
gs
or
or
or
inc
or
lcall
mov
inc
and
int3
mov
fsubrl
add
cmp
test
dec
add
rol
push
out
mov
xchg
inc
mov
xchg
pushf
push
cmc
aaa
push
add
add
test
inc
dec
or
mov
adc
bound
adc
jge
or
sub
fucomip
mov
add
je
and
xchg
je
adc
sbb
and
mov
pop
mov
bound
pushf
int3
push
in
pusha
mov
jne
cltd
aam
xor
pavgb
cmp
add
ret
ds
and
push
out
mov
in
in
mov
add
mov
movsl
jbe
or
sub
xor
pop
enter
fwait
sbb
push
addl
xchg
add
pop
pop
dec
and
dec
inc
add
fwait
addb
std
push
push
cs
cmp
and
pop
in
fcmovb
add
cmpsb
insl
push
fs
dec
xor
ret
inc
in
movsl
in
push
or
call
sub
adc
push
sub
push
aaa
push
add
add
xor
dec
xlat
add
xor
mov
cmpsl
dec
dec
adc
xlat
inc
je
insb
adc
and
add
and
push
test
or
in
add
or
xor
dec
sbb
add
add
lods
add
enter
adc
rolb
pop
pushf
xchg
add
xchg
push
and
or
das
outsl
pop
lahf
aaa
jp
and
adc
jg
inc
pop
or
insb
inc
mov
out
xchg
adc
dec
dec
int3
arpl
push
and
xchg
shrb
mov
sub
mov
mov
pop
les
mov
mov
or
push
jbe
cmp
jecxz
ret
inc
or
and
pop
ret
push
movsb
dec
inc
adc
das
in
filds
sbb
and
mov
xchg
pop
xor
or
xchg
test
andb
sub
fistl
push
sbb
dec
push
sbb
sbb
clc
fs
xchg
add
hlt
dec
daa
dec
xor
xchg
je
lock
and
mov
es
in
outsb
push
and
call
mov
dec
push
cwtl
sub
loopne
leave
inc
es
sub
add
and
or
cltd
in
pop
fcomp
nop
dec
push
fs
aam
fs
push
fs
shrb
sub
push
test
add
or
pop
xor
add
popl
lods
lcall
addr16
aad
or
add
add
or
add
add
add
add
inc
iret
add
cltd
in
pop
jo
cs
add
pop
jo
or
je
xchg
inc
xchg
pop
je
gs
dec
icebp
std
repnz
and
pop
js
enter
js
jns
jl
enter
jl
shll
out
mov
lods
inc
adc
push
mov
inc
mov
andl
inc
adc
pop
mov
out
adc
mov
pushf
push
cmp
cs
out
push
push
xlat
mov
shrb
call
push
bound
push
mov
add
addl
pop
mov
outsl
loopne
aam
movsb
in
dec
imul
fmull
push
lock
mov
pusha
subb
adc
sub
add
jb
imul
sub
dec
xchg
mov
cli
inc
mov
iretw
sarb
ret
mov
adc
and
rclb
pop
fsubl
xor
push
or
or
pop
xchg
sbbb
test
mov
fs
pop
cmp
sub
add
xor
and
push
mov
xchg
ss
cmp
mov
mov
repnz
mov
in
adc
add
add
mov
inc
push
xchg
push
add
push
ljmp
xchg
insb
bound
aas
adcb
push
dec
call
fcoml
enter
xor
sub
sub
jg
loope
mov
jmp
movl
pusha
je
sbb
add
add
inc
js
cmp
inc
lods
stos
sbb
adc
dec
imul
roll
in
add
pop
and
and
inc
or
push
mov
lock
aad
jo
outsb
gs
dec
and
and
lret
inc
inc
popa
aaa
inc
pop
rolb
enter
push
outsl
sbb
adc
xor
jnp
mov
pop
and
imul
mov
repnz
dec
and
xchg
hlt
push
mov
push
imulb
gs
adcl
mov
jb
iret
in
call
cmp
in
inc
in
mov
dec
insl
mov
dec
in
add
shll
aam
mov
jmp
cmpsl
dec
push
push
test
inc
cmp
cmp
mov
pusha
add
popa
sub
addl
push
or
pop
xchg
add
or
xor
roll
lahf
jmp
lods
rorl
andb
xchg
call
push
adc
inc
xchg
and
les
popf
xlat
sub
or
les
fsub
add
test
xchg
add
pop
sub
inc
inc
outsl
xchg
inc
xchg
lods
and
andl
ret
cli
pop
ja
das
mov
and
jecxz
jmp
cmp
inc
dec
cmp
add
or
dec
pop
mov
cmp
and
wbinvd
call
inc
es
add
stos
rcl
div
xchg
adc
test
add
or
push
push
xchg
aaa
add
xor
les
pusha
xor
adc
bound
dec
pop
sub
testl
adc
push
rclb
add
add
cs
cmp
sub
pop
mov
sbb
ret
and
in
popa
sub
mov
add
mov
xchg
or
sbb
lahf
scas
push
cmp
inc
pop
clc
sbb
sbb
pop
sbb
fstps
imul
add
sub
and
cmpl
mov
or
cmpb
repnz
jb
dec
js
rep
ss
or
inc
loopne
push
adc
or
aaa
fsubrl
mov
inc
mov
mov
inc
or
or
and
adc
lahf
xchg
xchg
cmpb
daa
cmpsb
or
push
imul
inc
or
divl
xchg
jne
push
sbb
sub
lods
pusha
sbb
shr
int3
cwtl
insb
mov
inc
sbb
arpl
xorb
fimull
add
push
xor
shlb
jns
push
and
adc
adc
movsb
pusha
dec
sbb
inc
and
rcrb
dec
dec
loope
xor
scas
inc
dec
jne
aam
or
push
and
clc
xchg
or
xor
mov
shrb
add
adc
cli
cltd
push
test
icebp
add
lcall
into
mov
insb
or
push
je
ror
sbb
and
xchg
xor
mov
stos
movsb
aaa
lret
dec
adc
out
icebp
add
dec
pop
cmp
xchg
xor
push
adc
dec
push
stos
stos
inc
or
mov
xlat
loopne
push
and
or
in
dec
cmpsl
mov
orb
mov
and
in
or
dec
sbb
shlb
insb
dec
push
or
lock
and
insb
sbbb
mov
xchg
sbb
nop
pusha
nop
sbb
sbbb
cwtl
sbbb
xchg
leave
enter
cwtl
rcrb
add
or
sbb
xchg
pushf
cmp
xchg
sbb
mov
sbbb
js
sbb
xchg
movsb
test
test
test
frstor
aas
lahf
dec
add
add
push
dec
dec
int
sbb
popa
inc
add
pop
mov
sbb
imul
aas
test
lods
cmp
popf
push
cmp
outsb
add
jno
push
xchg
jo
pop
jecxz
insl
pop
pop
adc
outsb
das
aam
mov
mov
nop
dec
fidivs
incl
dec
mov
notl
push
ficoms
addl
lret
outsl
push
dec
inc
push
inc
dec
pop
ret
pop
push
adc
inc
jae
and
add
sub
mov
sahf
leave
push
xor
push
out
push
in
pusha
mov
pop
mov
add
cmp
push
scas
ret
dec
cmpsl
xchg
out
cmp
push
xchg
in
sbb
popa
jo
xor
adc
sub
mov
test
fiaddl
jmp
push
repz
setp
movsb
xchg
add
jg
inc
fisubrl
add
aaa
add
dec
pop
loopne
ds
pop
jo
and
cmovne
pop
aaa
add
movsl
pop
inc
xchg
pop
mov
push
inc
inc
xchg
jns
in
fildl
rol
test
push
sbb
sbb
mov
aas
aas
int3
xchg
test
push
jg
jecxz
xor
inc
xchg
inc
xchg
test
test
jecxz
add
pop
je
sub
xchg
pop
sub
rolb
enter
addb
add
jae
mov
xorb
push
in
or
mov
lods
lods
cs
push
or
push
dec
ret
xor
add
aas
adc
shrl
add
fbld
jo
xchg
jo
insb
jge
or
jns
js
or
mov
xor
pop
xor
and
adc
das
xor
inc
test
test
scas
sub
add
mov
adc
loopne
ret
icebp
imul
outsl
dec
add
aas
inc
adc
dec
jb
sbbl
dec
sbb
sub
mov
or
lods
add
dec
pop
and
and
dec
roll
cmp
leave
mov
mov
ds
in
jo
jae
notb
stos
iret
scas
mov
iret
sbb
popl
add
dec
aad
dec
js
or
sbb
mov
inc
enter
frstor
push
or
repnz
ja
movsb
sub
sbb
add
inc
in
nop
push
xor
nop
sub
push
fisubs
enter
xlat
aam
adc
pop
push
jne
mov
sub
inc
jp
aas
xlat
adcb
add
subl
test
xlat
lods
add
enter
popl
dec
aad
sbb
push
mov
aas
xlat
stos
and
fcompl
dec
xlat
test
mov
fcomi
xlat
lock
and
and
call
jl
sub
xchg
test
xlat
int3
adc
push
inc
sbb
dec
push
mov
jge
scas
pusha
mov
xlat
daa
fiadds
lods
and
xor
out
mov
pop
insl
insb
loope
and
mov
nop
sub
movsl
aas
fistps
inc
sub
add
inc
sub
adc
xchg
sbb
adc
push
inc
xchg
sbb
pop
mov
outsb
fs
outsb
push
jg
or
push
cmp
lods
jno
iret
and
inc
enter
andb
mov
cmpb
nop
sub
out
enter
add
and
lret
test
dec
lock
adc
and
hlt
push
add
xchg
pop
lahf
push
cmp
sbb
dec
inc
xchg
mov
and
stc
inc
xchg
in
and
sub
arpl
fdivrl
daa
dec
dec
pop
ljmp
sbb
sbb
mov
test
and
pop
mov
outsb
sarl
xor
addl
sbb
push
outsb
jo
cmpsl
or
push
testl
push
mov
sbb
jne
add
dec
or
sub
pusha
test
xor
xchg
or
adc
jno
mov
push
ds
add
frstor
xchg
or
js
mov
iret
mov
push
dec
push
push
dec
jg
jo
in
xchg
jg
add
js
or
push
js
sub
adc
sub
lods
or
in
out
and
sbbl
mov
and
incb
add
add
daa
push
pinsrw
xor
ffreep
and
push
add
out
adc
adc
aas
mov
and
pop
inc
enter
out
sub
outsl
jmp
mov
ds
sbb
aas
iret
xchg
inc
rcll
jbe
popa
nop
out
or
cmpb
sbb
pop
and
mov
mov
inc
mov
outsb
pop
test
cmp
inc
dec
fcmovnu
jo
ss
and
and
movsb
loope
loopne
sub
sub
mov
sub
aas
cmpsl
adc
shll
pop
jne
popa
shrl
rolb
mov
lods
and
frstor
cmp
cmp
aas
inc
test
and
xchg
inc
push
add
xor
das
mov
and
push
mov
xchg
mov
xor
dec
rorl
sub
out
sub
leave
nop
sub
aas
out
daa
pop
pop
add
dec
inc
pop
dec
outsb
icebp
call
inc
xchg
ret
mov
mov
jmp
adc
add
sub
dec
rcrl
inc
xchg
push
jns
cld
filds
adcl
loop
in
movsb
pop
jo
xchg
pop
inc
jo
sub
test
int
inc
xchg
nop
in
in
pop
sub
xchg
jg
insl
in
dec
sbb
push
nop
pop
inc
jo
aas
sbb
push
xchg
scas
jae
iret
scas
inc
enter
js
push
lahf
gs
stos
dec
insl
in
pop
jb
xor
mov
mov
adc
or
fbld
daa
pop
xchg
xor
movsl
lds
mov
imul
mov
pop
in
test
mov
push
mov
and
pushf
pushf
ucomiss
push
mov
adc
scas
adcb
call
aas
imull
sbb
dec
sub
or
push
xchg
notl
das
jmp
dec
insb
popf
lods
adc
xchg
out
cltd
inc
mov
push
notb
aas
mov
paddb
aam
or
filds
aas
cmp
adc
out
cld
out
test
push
cld
pop
inc
mov
jmp
pop
mov
jo
out
lea
dec
inc
movl
loope
loopne
shlb
xor
sub
inc
pop
inc
pop
and
xchg
aas
push
pop
add
adc
aam
push
xlat
les
adcb
and
mov
out
mov
xchg
aas
out
push
jb
sub
jbe
int
out
cmc
mov
addl
testl
xor
xlat
xor
sub
adc
inc
cmpsb
sub
test
fs
mov
out
test
lods
and
fwait
leave
mov
sub
aas
xor
aam
mov
pushf
out
arpl
pushf
mov
out
push
adc
or
pop
xchg
mov
scas
inc
lcall
lcall
mov
js
clc
insb
lcall
shlb
or
dec
jo
fwait
dec
imul
push
stos
xor
inc
push
in
add
outsl
clc
sbb
add
daa
mov
mov
or
lcall
jno
fs
ljmp
int3
les
mov
pop
test
mov
in
stos
enter
imul
enter
dec
fcomps
add
inc
push
pop
sub
add
test
adc
cltd
inc
sbb
cmpsl
push
add
or
pop
add
pusha
ret
shlb
adc
push
sbb
sar
add
and
pushf
push
je
mov
or
nop
push
mov
lods
pop
mov
mov
hlt
je
movlps
iret
sbb
sub
jne
jne
rcl
mov
inc
push
outsl
adc
out
adc
and
fdivs
daa
push
and
fsubrs
xor
push
jo
mov
inc
add
dec
dec
push
dec
mov
mov
punpckhbw
insl
mov
mov
rolb
xor
push
jno
jge
cmc
add
stos
pop
insb
mov
inc
and
push
sub
add
popa
push
jne
xchg
loopne
mov
inc
lea
pop
push
sahf
or
sub
jns
cmp
enter
lcall
sbb
and
jp
mov
test
jl
sub
data16
mov
xor
mov
sbbb
fwait
gs
inc
cmpl
test
adc
jp
xchg
add
pusha
cmpsb
pop
xor
push
movsb
or
jne
or
shll
sbb
mov
jmp
pop
xor
aaa
xor
insb
push
and
lcall
shll
imul
ss
in
in
xchg
mov
in
mov
lods
pop
enter
mov
push
cmp
dec
shll
cwtl
orb
sbb
push
push
imul
sub
mov
shlb
mov
or
cmp
mov
les
adc
dec
test
jo
mov
idivl
add
das
dec
popl
lcall
mov
mov
jle
int
adc
push
xchg
xchg
sub
inc
call
inc
mov
nop
mov
add
or
ficoms
mov
test
add
adc
push
pop
dec
push
loopne
inc
sbb
inc
mov
mov
pop
divl
pop
je
int
xor
les
sar
fmuls
xor
test
xchg
popf
cwtl
lahf
xchg
inc
add
mov
clc
mov
dec
cs
pusha
push
nop
push
mov
gs
push
add
mov
dec
movsb
ja
daa
adc
pusha
movsb
cmpsb
movsl
ss
out
jo
cmpsb
xchg
dec
cmpsl
es
xor
sarl
pushf
mov
call
and
fldt
movsb
ss
stos
in
stos
xchg
mov
mov
into
hlt
mov
adc
push
or
int
lret
cmpsb
push
clc
nop
mov
push
pushf
int
insl
imul
mov
mov
push
in
ljmp
syscall
jecxz
nop
inc
fimuls
and
sub
call
nop
aam
inc
sbb
pop
movsl
jg
into
jg
sub
mov
mov
pop
add
insb
mov
pop
adc
push
jle
sbbb
adc
inc
cmp
pop
repnz
test
or
int3
negl
leave
stos
cmp
mov
outsl
cmp
movb
push
mov
enter
rcll
outsb
cmpsl
dec
xor
inc
or
inc
pop
cmpb
loopne
loop
loope
xchg
lret
sbb
out
inc
stc
repz
or
shr
mov
jb
insb
or
es
je
pop
in
jl
fldcw
out
out
and
jmp
repz
sbb
js
in
lahf
insb
mov
or
stos
pop
pop
mov
test
mov
adc
jb
sub
xchg
jl,pn
test
leave
inc
pop
push
add
leave
mov
movsb
stos
push
test
add
xchg
inc
mov
dec
push
mov
cld
stos
dec
cmp
in
les
ficoml
pop
push
insb
xor
or
sbb
ret
and
lods
pop
push
repnz
adc
cmp
aad
inc
pop
add
add
inc
xor
pop
mov
or
mov
scas
cmpsl
push
dec
push
or
pop
dec
popl
or
pop
xor
cmp
sub
push
and
insb
pushf
divl
sbb
add
sysenter
les
mov
cmpsl
adc
nop
enter
scas
dec
pop
adc
je
adc
mov
or
mov
xchg
or
and
pop
add
push
add
repnz
outsl
enter
das
dec
lods
push
dec
xchg
xlat
cmp
cmp
ds
addr16
cmp
cmp
shrb
aam
inc
or
ds
mov
adc
daa
test
or
dec
scas
cld
push
mov
adc
pop
dec
repnz
sbb
jns
out
movups
adc
adc
test
or
add
shr
xor
adc
or
xchg
mov
push
fbstp
or
aad
mov
sti
pop
sarl
mov
and
nop
pushf
mov
xorb
mov
sub
pop
lods
and
cs
pop
mov
and
gs
sub
test
pop
or
cs
lret
cmpsb
imul
dec
shll
movsb
int3
lock
mov
lcall
add
je
lcall
mov
adc
mov
xor
call
loopne
dec
pop
pop
pusha
add
nop
fs
inc
add
push
aas
pop
inc
repz
out
cmp
jbe
cli
mov
das
int3
iret
test
sbb
sbb
iret
mov
cmp
nop
cmp
loopne
aas
xchg
pop
imul
out
mov
pop
add
adc
loopne
sbb
push
push
add
ss
js
mov
imul
pop
lock
lcall
mov
mov
mov
mov
inc
push
inc
out
cmp
dec
mov
rcl
es
daa
ret
sub
xor
shll
test
push
inc
dec
push
push
dec
les
push
and
cs
push
movsb
push
insb
push
jbe
sub
lret
mov
test
pop
mov
push
test
cs
shl
sub
aaa
or
mov
mov
mov
cmpsl
fisubrs
xor
pop
les
lret
gs
and
rclb
push
inc
xor
pop
cwtl
lods
rolb
cld
mov
insb
mov
imull
call
nop
push
push
xchg
sbb
das
sub
aam
outsl
jl
xor
pop
pop
pop
mov
scas
pop
nop
push
dec
mov
lcall
nop
xchg
dec
shll
fdivr
sub
pusha
add
call
dec
test
push
dec
pop
or
mov
insb
xchg
mov
sub
pop
gs
pop
add
nop
pushw
les
xchg
lret
data16
cmp
insb
mov
and
pusha
lcall
lods
and
test
mov
mov
mov
daa
into
inc
mov
insb
jge
add
mov
push
mov
push
movl
xchg
aaa
mov
sarb
rcll
push
ljmp
in
xchg
mov
cmp
inc
dec
pop
pop
or
rclb
dec
in
test
pop
pusha
mov
int3
push
pop
out
je
inc
add
pop
shll
push
insb
pop
in
clc
sub
mov
sbb
pop
xor
mov
mov
mov
test
dec
roll
test
jl
in
test
andl
test
jnp
and
sbb
popa
sub
push
mov
adcb
mov
les
lea
add
shrb
xchg
outsb
es
inc
push
push
jg
mov
mov
sahf
clc
lea
or
mov
pop
inc
unpcklps
stc
mov
ret
ret
dec
loop
leave
sub
push
xchg
ss
push
adc
inc
xchg
pop
lods
movsb
xchg
leave
and
xlat
mov
insb
mov
mov
es
pop
mov
jns
les
jns
and
adc
loopne
pop
push
push
mov
push
adc
mov
mov
scas
cld
jns
sbb
inc
lcall
lods
xchg
sub
sbb
push
lods
loopne
outsl
imul
pop
sahf
jl
stos
xchg
fwait
xor
test
dec
sbb
arpl
inc
pusha
cmpsb
push
mov
or
mov
lock
je
sub
addb
sbbb
mov
inc
xlat
or
pushf
js
pushf
mov
sub
mov
mov
adc
testl
enter
or
mov
mov
add
pop
dec
insl
je
pop
test
mov
push
cmpsl
cs
xor
sub
pop
add
xchg
sbb
vmwrite
push
lock
push
and
or
call
inc
test
and
sbb
mov
lret
lret
add
inc
mov
cmpb
mov
xor
cmp
mov
stc
ss
mov
and
andl
pop
xor
lods
xchg
cmp
add
mov
inc
clc
lret
lds
fistpll
add
push
xchg
mov
int
cwtl
mov
mov
shl
icebp
test
aaa
int3
sub
sub
or
orb
out
mov
dec
leave
sbb
ret
sbb
push
cs
movsl
andl
sbb
mov
scas
in
iret
fmul
out
cmp
pop
adc
or
add
xor
or
cmp
ret
push
pop
dec
inc
rclb
int
ds
and
adc
sub
jo
and
dec
cmp
xor
mov
adc
or
mov
in
lret
inc
inc
xchg
lret
pop
test
rorb
xchg
pop
add
test
aaa
sbb
cmp
push
and
sbb
jg
dec
add
jg
add
ficomps
sbbl
xchg
adc
shrl
daa
loopne
inc
xchg
mov
test
cmpsl
push
nop
xlat
jb
ss
and
call
loop
int3
sbb
jecxz
sbb
into
leave
pop
mov
and
outsb
sub
or
jo
je
mov
push
outsb
aas
and
dec
leave
lock
rorb
in
fisubrl
js
jle
dec
out
sbb
sub
shll
repz
in
xchg
popa
add
mov
pop
sub
popf
mov
add
fidivs
pusha
outsb
aam
addr16
push
sbb
seto
xor
insb
bound
outsb
fs
sbb
xor
sub
mov
cwtl
pop
js
mov
nop
add
mov
arpl
arpl
inc
push
adc
pop
or
push
xor
mov
xorl
pop
mov
sub
push
aam
adc
mov
sahf
xchg
cltd
or
in
xor
xlat
xor
nop
dec
setb
add
sti
sub
push
stc
clc
nop
sbb
call
mov
add
add
sti
jb
jmp
add
and
lods
daa
xor
push
pop
cmpsl
or
in
aaa
inc
dec
sysret
je
cmp
nop
dec
aas
xor
inc
orb
inc
mov
mov
jnp
pop
and
mov
xlat
add
test
adc
add
inc
mov
loop
xor
in
inc
rcl
aaa
andb
cmp
jno
add
xor
fdivs
cmp
jbe
push
pop
pop
xchg
dec
or
xchg
dec
inc
insb
xchg
jae
jbe
mov
and
push
sbb
and
inc
cmp
pop
bound
add
rcll
daa
mov
mov
jg
mov
lea
cld
fstps
push
xor
imul
add
and
sahf
lahf
cwtl
fidivl
movsl
addb
xor
or
les
inc
rorb
xlat
bound
mov
add
outsb
xchg
jae
xchg
xor
add
push
stos
sbb
push
rorb
popa
or
push
movsb
pop
xchg
inc
push
and
mov
xor
loope
clts
ror
jmp
ficoms
inc
dec
iret
ss
inc
xorl
add
add
es
cmpsl
pop
sub
mov
push
decl
call
mov
insb
adc
enter
push
in
pusha
bound
ds
inc
dec
sbb
int3
xchg
test
mov
sbb
cltd
inc
sbb
and
xchg
loopne
push
mov
adc
roll
mul
dec
repz
push
mov
add
cmp
adc
and
adc
pop
mov
adc
xchg
pop
xchg
sbb
push
call
sarb
and
fnstcw
dec
xchg
orb
test
cmpsb
or
stos
add
pop
and
fstl
inc
stc
mov
xchg
or
aaa
into
nop
xor
inc
dec
dec
add
xchg
xor
rolb
xchg
stos
push
cmp
adc
xorb
int
pusha
pop
or
in
rcrb
testb
jno
inc
je
repz
dec
adc
xchg
adc
fldcw
mov
xor
sbb
xor
and
out
pusha
cmc
sub
gs
push
or
pop
sar
and
cmpsb
or
pop
inc
rolb
aas
arpl
leave
inc
sarb
push
test
enter
mov
nop
mov
adc
js
js
and
repnz
and
sub
clc
fnsave
pop
jb
clc
adc
push
mov
adc
push
pop
jp
push
in
push
sar
adc
inc
push
lock
testb
cmp
ret
cmp
add
in
stos
push
inc
shl
mov
nop
xor
adc
movsb
sbb
inc
ja
insb
insl
cmp
adc
inc
cltd
cs
pop
mov
mov
nop
sbb
inc
fwait
push
test
push
pusha
pop
xchg
xchg
cwtl
arpl
sub
dec
or
push
test
add
imul
mov
xchg
and
movw
imull
push
popa
dec
popf
test
adc
push
adc
int3
ret
push
jbe
push
mov
sbb
addb
pusha
clc
mov
add
pop
pop
pushf
and
cli
test
inc
and
mov
or
push
or
pop
and
mov
repnz
jl
dec
out
mov
pop
jae
xor
pushf
fildll
adc
nop
adc
inc
movsb
push
add
aam
lcall
daa
mov
fistpll
pop
sbb
pop
or
pop
fsubrl
jo
insb
xchg
or
or
or
mov
pusha
push
cmovle
aam
adc
sub
scas
xchg
adc
push
push
popa
adc
stc
loope
rcrb
pop
xor
and
sub
and
sbb
xlat
add
jb
inc
ret
xor
cmpsl
mov
adc
repnz
cwtl
call
sub
pushf
push
pop
cs
in
pop
int3
insb
sbb
pusha
insb
xchg
lret
cmpsb
mov
sbb
sbb
push
sbb
xor
loopne
sbb
add
gs
incb
inc
add
push
push
jp
push
and
adc
fnstenv
test
inc
je
push
daa
inc
inc
testb
add
push
jl
cmp
pusha
je
add
sub
cmpsb
daa
adc
jae
xor
cltd
lods
push
add
imul
sub
jae
mov
or
mov
adc
dec
lahf
pop
nop
ljmp
pop
dec
inc
dec
mov
out
and
or
dec
test
daa
cs
outsl
cmp
xchg
and
xor
and
mov
fcompl
sub
or
cmp
sub
cs
xor
test
pop
pop
cmp
inc
dec
mov
xchg
jne
xchg
sbb
xor
inc
loopne
add
adc
push
inc
fcmovnb
push
or
mov
pop
push
jno
call
call
mov
inc
in
data16
inc
push
je
inc
fsubrs
sub
cmp
shlb
add
iret
addl
in
xchg
stos
mov
fdiv
cltd
cld
out
lcall
push
pop
insl
add
dec
push
push
mov
mov
mov
xor
and
fnstenvs
pop
mov
loopne
pop
pop
or
add
cmpsb
pop
cmp
push
cmp
test
add
inc
outsl
bound
imul
nop
sbb
pop
pusha
dec
js
xchg
mov
outsb
jae
out
mov
mov
mov
and
addb
mov
xor
nop
xchg
pushf
movsb
lods
mov
shll
les
arpl
adc
xor
incl
out
inc
cmp
shll
push
pop
pusha
push
jo
js
mov
cwtl
mov
scas
rcr
inc
push
inc
aas
mov
lods
mov
pop
or
mov
popa
jecxz
adc
push
add
adc
adc
add
push
add
dec
sbb
test
adc
cmpsl
mov
dec
push
pusha
push
repz
push
mov
xchg
leave
in
adc
xor
push
inc
loope
lahf
sub
int
xchg
xchg
into
inc
insb
pop
mov
data16
insl
call
add
fmuls
adc
sub
icebp
das
pop
push
test
mov
cmpb
int
pop
inc
andl
imul
xor
setae
cs
sbb
pop
add
icebp
dec
das
xchg
push
aam
rclb
xchg
xchg
insb
nop
xchg
aaa
inc
js
and
out
xor
mov
mov
inc
xor
adc
repz
push
repnz
pop
repz
pop
cs
cld
cmpsl
and
stos
sub
pop
sahf
gs
int3
scas
aam
nop
mov
shlb
mov
int3
mov
mov
push
push
xchg
mov
push
adc
sub
or
mov
mov
into
pop
rorb
mov
pop
ss
add
lods
dec
fcomps
lret
in
mov
out
call
insb
sub
ljmp
dec
out
adc
les
add
mov
pop
add
jg
and
fcoml
xchg
lret
xlat
mov
pushf
sti
in
dec
cmp
sbb
jnp
add
push
pop
fmuls
call
and
ja
out
repnz
mov
int3
int3
clc
sahf
sbb
pop
sub
adc
and
and
insb
or
in
repnz
push
xchg
or
push
test
push
xor
sahf
sbb
pop
inc
add
or
and
push
in
push
pop
cmp
jg
push
subl
outsl
lock
push
incb
xor
cwtl
mov
pop
dec
push
push
idiv
ds
subl
cmpsl
mov
and
js
push
clc
maxps
push
xchg
xchg
dec
inc
push
jns
dec
push
pop
sub
push
fcmovb
push
dec
push
add
bound
clc
pop
or
jb
sbbb
pop
pop
imul
push
and
test
xchg
push
cwtl
pop
ss
pop
xchg
xor
push
test
push
fs
enter
sbb
mov
insl
out
push
push
nop
sbb
cwtl
pop
das
pop
jae
and
and
pop
js
jl
push
mov
sbb
or
sbb
cmp
add
add
add
cmpsb
mov
and
add
jnp
xchg
adc
nop
add
and
mov
xor
adc
dec
out
sbb
push
mov
adc
clc
dec
dec
inc
jae
js
cmpsb
icebp
xchg
push
lods
sbb
and
cwtl
dec
xor
pusha
aas
nop
sub
je
and
jg
popf
cmp
jg
jnp
add
gs
in
mov
sub
inc
mov
xchg
jp
and
mov
jbe
add
imulb
mov
jmp
xor
adc
jns
fdivs
mov
jge
or
jmp
xor
fists
jl
add
xor
jo
je
inc
dec
ja
ret
push
jb
js
pop
cmp
dec
add
mov
mov
clc
ljmp
xchg
gs
jle
fnstsw
pop
aaa
cmp
pop
out
or
test
sub
add
dec
dec
hlt
fs
xor
mov
shrb
sub
jne
popa
inc
fidivs
xor
add
add
push
add
daa
syscall
in
and
cmp
xor
ljmp
out
loopne
dec
loope
out
or
sbb
jne
adc
fistpll
jnp
cmp
xchg
mov
push
adc
in
sub
inc
je
jl
sbb
adc
shll
lret
and
lock
push
mov
scas
rol
ljmp
sub
in
sbb
push
xor
adc
sbb
ja
sub
pop
mov
or
pop
mov
pop
mov
dec
add
and
das
or
push
and
push
sub
push
inc
out
add
xchg
addr16
push
les
neg
xchg
mov
lods
push
orb
imul
frstor
lahf
push
push
mov
and
daa
cltd
inc
and
pusha
dec
cwtl
sti
adc
enter
fistpll
lea
dec
fadd
cs
mov
pop
lret
lahf
xchg
xor
dec
filds
jl
push
hlt
loop
icebp
clc
stos
insb
movsb
and
sbb
repnz
scas
mov
add
push
sbb
pop
sub
pop
cmp
in
rcrb
imul
push
ljmp
cmp
ljmp
lods
mov
popf
out
daa
inc
loopne
fldcw
shl
cwtl
inc
shrl
mov
rorb
cwtl
stos
roll
add
add
push
rcrl
and
inc
cld
cmp
jl
loop
and
xlat
leave
int3
inc
leave
aam
frstor
fmul
mov
les
sub
inc
addr16
popa
or
or
rorl
dec
scas
xchg
fs
lret
xor
cmp
insl
in
sub
adc
ds
xchg
xchg
push
shl
inc
inc
push
andb
or
pop
xor
sbb
pop
add
lcall
push
push
cwtl
xor
cltd
and
fadd
clc
je
pop
dec
enter
cmp
jb
and
mov
and
xchg
and
pusha
push
jmp
ds
fsub
mov
sbb
cmp
xor
insl
dec
jnp
or
jne
and
push
xor
jg
mov
cmp
sbb
rorb
or
jne
jne
insl
push
sbb
and
cmpl
enter
jge
in
dec
aas
loope
in
iret
mov
in
call
xor
jno
jl
enter
jmp
adc
bound
cmpsl
pusha
push
xor
push
in
daa
or
mov
hlt
pop
add
xor
adc
or
adc
aam
add
mov
inc
outsb
or
sbb
or
push
adc
dec
jmp
mov
popf
fbld
xchg
jmp
sub
jo
test
pop
adc
popa
add
adc
fiaddl
fistps
jne
enter
pop
cmp
sbb
add
arpl
jb
pop
pop
insl
lahf
arpl
xchg
dec
into
or
sarl
xchg
xchg
mov
ret
mov
dec
in
adc
sub
or
mov
pop
add
push
popa
mov
stos
dec
sbb
fildl
pusha
addr16
or
mov
cmpb
jl
leave
fdivrl
popa
push
es
scas
addb
jecxz
xchg
jne
and
xchg
ret
pushf
dec
jecxz
mov
addl
inc
sahf
add
push
negl
repz
and
sahf
adc
inc
pop
pusha
pop
inc
andb
clc
mov
dec
add
pop
add
xchg
jno
pop
sub
repnz
jecxz
sbb
jg
loopne
inc
fadd
sub
and
sub
int
lea
xchg
jne
inc
or
jmp
bound
push
in
andl
and
jae
je
int3
stc
int3
or
jmp
sbb
loopne
enter
mov
pop
mov
mov
jns
xor
inc
inc
push
in
mov
add
adc
jg
sbb
inc
dec
and
loope
bound
test
mov
popf
inc
arpl
mov
add
mov
dec
cld
xor
mov
cmp
xor
cmc
popf
sub
or
push
cmp
push
xor
frstor
dec
aad
hlt
xor
popa
sbb
add
test
test
push
mov
xor
inc
jno
cli
fdivs
add
cs
inc
adc
aas
sbb
stos
and
adcb
push
add
loop
mov
hlt
add
lahf
jmp
cli
add
or
hlt
ljmp
hlt
mov
dec
xor
imul
jns
xchg
and
call
in
imul
jne
cli
fsubrl
push
les
pop
scas
dec
js
jl
cmp
push
jmp
out
cli
fcoml
nop
testl
cwtl
xchg
loopne
mov
or
mov
in
fwait
shlb
and
in
shlb
rolb
lea
pop
rcl
test
push
xchg
je
cmp
push
fsubrl
int3
adc
xor
test
mov
aas
cs
push
lock
in
daa
cmp
jle
or
push
and
inc
add
push
xchg
jmp
sub
or
pop
paddw
popa
andl
arpl
clc
fbstp
shlb
adc
movsl
sti
jne
mov
or
fsubs
jae
and
push
icebp
test
hlt
sbb
mov
pop
test
lahf
adc
pop
xor
inc
dec
inc
cmpsl
push
or
nop
mov
scas
rcrl
xor
push
je
mov
dec
dec
sub
push
or
rcr
in
and
sub
inc
mov
cmp
mov
enter
or
nop
inc
push
sbb
ret
dec
enter
xor
mov
push
mov
adc
minps
aaa
jmp
cmp
jg
push
push
fwait
loop
jecxz
cmpsl
pop
jno
sbb
sarb
pop
jne
fst
mov
popa
sbb
or
jecxz
sub
inc
in
gs
arpl
jo
mov
jge
inc
xchg
or
xor
ljmp
jg
dec
inc
push
mov
inc
jne
or
cli
dec
dec
and
gs
or
lods
rcr
push
or
out
mov
cmp
icebp
aas
lea
jne
xor
lods
jl
pop
je
push
push
in
nop
and
sti
in
shlb
sub
shll
in
and
sub
pop
dec
scas
sub
mov
add
mov
push
comiss
jg
sbb
stos
shll
inc
movsb
jg
arpl
adc
ret
fldenv
cmp
adc
pushf
pcmpgtd
insb
jns
adc
repnz
mov
sub
js
push
lcall
pusha
dec
ret
mov
push
jnp
bound
and
das
out
mov
sbb
jmp
rcrb
and
pop
or
pop
inc
fs
sbb
fdivrl
inc
jns
and
jmp
ret
adc
add
sub
xor
push
loopne
jecxz
push
sbb
pop
leave
add
push
push
sbb
jno
ret
inc
dec
or
es
rorb
mov
rcll
xor
dec
add
push
sbb
fidivs
pusha
aaa
mov
or
and
mov
push
mov
es
addl
jbe
lods
inc
lods
sarb
es
inc
push
fcompl
roll
xor
inc
jge
xor
jmp
sbb
insb
rcll
sub
imul
sub
add
dec
mov
mov
dec
pusha
mov
cmp
push
rcrl
pusha
xor
and
adc
out
adc
xchg
mov
cmc
into
jnp
ljmp
insl
and
sub
and
addl
cs
xorb
test
push
or
xchg
imul
and
and
adc
aas
inc
mov
mov
sub
daa
test
je
das
inc
adc
add
icebp
pop
sub
mov
mov
xor
outsb
mov
int
xor
stos
mov
dec
xor
cmp
repnz
mov
aam
clc
sub
and
xor
test
fcom
sbb
jbe
test
cmp
add
jecxz
xchg
push
and
shlb
pop
adc
nop
push
add
clc
fbstp
rorb
or
in
sub
jae
pop
bound
push
dec
aas
shlb
adc
xor
lcall
pushf
adc
inc
aad
call
stc
insb
mov
or
add
add
add
add
pop
cmp
rclb
push
sub
ja
pop
cli
mov
sbbb
adc
and
cmp
mov
sub
decb
andl
sti
jnp
int
daa
add
imul
push
xor
jns
outsl
and
inc
std
mov
ss
xchg
gs
push
sub
cmp
mov
jo
pop
or
pop
loopne
xor
sub
and
lds
add
subb
fmuls
insl
adc
fwait
mov
in
or
jg
cmp
pop
data16
mov
push
out
bound
mov
rorb
sbb
scas
adcb
popa
add
repnz
inc
leave
cmp
sti
or
inc
adc
cmp
xor
mov
cbtw
mov
add
ret
ja
xchg
clc
mov
add
movsl
in
out
sbb
jecxz
or
sbb
or
leave
pop
andl
dec
cmp
jbe
pop
cmp
cli
push
mov
xor
cmp
jbe
out
cmpsl
rcr
sbb
sbb
push
fiaddl
aaa
fstpt
cmp
fmulp
repnz
mov
dec
sbb
push
ret
and
testb
in
or
mov
push
jnp
adc
ret
jae
add
or
ret
xchg
out
or
stos
or
sahf
and
data16
popf
add
mov
repz
in
adcl
sub
subl
push
insl
add
dec
repnz
dec
adc
aaa
push
in
mov
enter
sub
das
pop
mov
aaa
outsl
rcrl
pop
xchg
in
cmc
and
imul
pop
lret
lret
dec
and
cmp
loope
mov
out
cmp
mov
dec
lock
ficomps
stos
jno
mov
or
cmpsl
mov
cmc
scas
adc
in
mov
in
inc
inc
add
mov
xchg
and
sti
hlt
shrb
pop
jno
sysret
add
enter
js
dec
push
jmp
jbe
adc
cltd
lret
fadds
add
out
out
sbb
cmp
fcmovne
push
mov
fstl
imul
insl
xchg
popa
cmp
dec
mov
scas
scas
bound
pop
sub
fs
scas
sbb
or
fnstcw
mov
add
add
jmp
push
icebp
jns
dec
imul
cmp
push
or
xor
or
leave
cmp
out
repz
mov
push
out
and
add
pop
jp
xchg
xchg
or
add
int
or
and
mov
inc
cmp
mov
cmp
adc
xor
pusha
push
or
outsb
out
push
lock
mov
faddl
fstpt
and
popa
and
repnz
xor
sbb
sub
mov
xchg
add
fwait
lea
mov
lds
jl
mov
imul
mov
into
lods
test
rolb
jne
insb
push
add
pop
in
aas
rcrb
dec
add
and
add
pop
imul
aas
pop
scas
cli
bound
shlb
push
xor
mov
stos
add
jbe
mov
lahf
add
cmp
pushf
bound
or
out
inc
pushf
outsb
or
sbb
mov
fidivs
sbb
xchg
inc
pushf
fs
lretw
mulb
cmp
out
imul
jae
adc
cmc
push
cld
add
jnp
add
sub
add
nop
idivb
sub
or
popf
jmp
pop
push
subl
scas
cmp
mov
jo
jb
adc
cmpsl
lods
lods
mov
scas
daa
pop
pop
dec
push
stos
push
dec
repz
loopne
outsl
jge
sub
adc
rcll
add
add
loope
sbb
add
hlt
add
repnz
xchg
cmpl
mov
scas
mov
aad
stos
mov
add
mov
ss
leave
mov
inc
pop
cmp
xor
mov
lods
fcmove
cs
and
stc
push
sub
xor
outsl
pusha
loope
ret
pop
shr
add
cli
xor
incb
inc
mov
pop
adc
clc
scas
cli
jge
cmp
mov
cmp
mov
jnp
xchg
or
add
jle
sub
fwait
loope
and
in
cmp
add
jl
roll
mov
je
or
adc
or
jbe
cwtl
cmp
cmp
pop
lock
xor
sbb
xor
jb
inc
jb
fdivrp
sub
jb
jmp
add
test
sub
or
or
sbb
fisubs
jno
jp
fistpll
sub
sub
jb
out
pop
jb
inc
f2xm1
addr16
sub
add
sub
mov
loope
nop
sub
je
out
inc
or
add
mov
daa
cmpsb
push
inc
data16
scas
push
rol
or
push
jo
pop
sbb
jns
ret
or
inc
xorl
jb
inc
jmp
cs
jg
pop
add
add
fcoms
sbb
enter
add
lock
inc
cli
stos
movsb
fstp
dec
fwait
dec
popf
xchg
aas
xor
mov
movsb
jns
jmp
xchg
or
dec
mov
sub
aaa
in
or
pop
push
add
dec
test
ds
inc
xor
add
sahf
mov
xchg
cmp
lods
bound
lahf
ret
sbb
sbb
std
jns
add
dec
addr16
jecxz
ds
fdivrs
dec
cmp
mov
insb
add
cli
push
mov
lret
xor
inc
mov
ficoml
mov
or
enter
cmc
push
inc
or
int
cmp
test
add
cwtl
mov
les
mov
ficomps
pop
ja
sub
dec
cmp
sti
out
inc
nop
add
test
pop
sub
cld
dec
aad
lret
xor
iret
mov
mov
hlt
xchg
mov
in
stos
push
test
xchg
pushf
stos
mov
sbb
clc
scas
and
xor
mov
lods
or
mov
int
dec
cmp
popf
cmp
push
into
mov
xor
fstpt
jb
mov
repz
add
adc
or
fildl
fiadds
pop
test
out
add
jbe
xchg
mov
fmul
add
fmull
pop
or
and
sbb
cwtl
stos
mov
jns
mov
cmp
arpl
cwtl
repnz
xchg
sub
xor
mov
cmp
adc
mov
cmpsb
cmp
jno
vprotb
mov
cwtl
and
sbb
movsl
adc
mov
and
add
dec
cmp
fwait
sbb
mov
in
pop
fidivl
seto
popf
cmp
xchg
in
mov
adcl
sub
push
jmp
insl
jmp
mov
xor
cld
or
add
push
dec
cli
dec
jmp
or
out
dec
add
dec
je
std
adc
cmp
packuswb
movsl
push
dec
aas
pop
jb
push
add
jmp
jmp
add
fsts
sub
ds
or
pusha
mov
rorl
jb
add
jp
adc
jbe
lcall
mov
popa
pop
push
jmp
or
out
loop
jp
push
hlt
pop
mov
ss
cs
daa
mov
repnz
inc
repnz
sbb
addl
ffreep
push
xchg
hlt
test
je,pn
cmp
inc
sub
sbb
cmp
jmp
sub
sub
mov
or
jmp
sub
cltd
aam
add
ret
push
push
mov
adc
enter
fs
xor
adc
and
adc
imul
sbb
adc
sub
push
jmp
pop
sti
cmp
sub
push
nop
and
jb
mov
or
jnp
mulb
or
jp
xchg
pop
jbe
push
mov
cmp
shrl
mov
mov
je
sub
je
mov
dec
or
and
cmp
mov
ss
je
cmp
je
lahf
add
or
je
clc
inc
clc
and
pop
cmp
clc
and
xor
cltd
rclb
stos
aaa
sub
lods
and
mov
popa
jle
outsb
and
mov
cmpsl
pusha
cmp
or
pop
dec
jne
movsl
rorb
out
scas
sub
sbb
andl
adc
insl
fld
xchg
aas
or
lahf
cmc
dec
gs
mov
add
mov
mov
inc
inc
inc
mov
pusha
xchg
sbb
sub
fsubrs
cmp
daa
ret
or
sbb
daa
mov
inc
inc
ja
cmp
sbb
xor
mov
imul
mov
outsb
adc
pop
pushf
dec
add
ret
insl
jae
sub
and
dec
adc
enter
dec
jnp
mov
test
xor
add
and
mov
gs
aad
loope
push
lods
mov
aas
jmp
sbb
ss
and
xchg
fsubrl
sbb
cvtpi2ps
scas
sbb
xor
pop
jecxz
inc
or
xor
outsb
das
mov
loopne
xchg
sarb
faddl
mov
in
test
pop
dec
rolb
pop
hlt
mov
lea
jno
dec
sbb
out
add
mov
xchg
dec
xchg
sahf
aad
dec
add
imul
jbe
xchg
fists
mov
mov
jmp
out
jge
push
jo
or
cwtl
lods
sbb
adc
push
ds
add
fisubrl
xlat
and
das
inc
es
data16
xchg
add
shll
pop
lahf
cmp
ror
adc
sarl
pop
cs
push
jne
ret
js
jle
sbb
cld
mov
fsubrs
cmpsb
int
ret
fimull
pop
adc
add
jp
push
pushf
adcl
lahf
enter
outsl
lock
xchg
mov
rorb
push
mull
aaa
pop
pushf
mov
daa
sbb
scas
push
in
xchg
stos
xor
pushf
in
adc
add
mov
cld
lcall
faddp
pop
sbb
push
pop
or
mov
lods
xor
pop
les
enter
lds
fwait
dec
stos
push
jl
mov
add
outsl
popf
and
repnz
aam
mov
sub
inc
or
jne
dec
sub
test
lods
lds
pushf
add
popa
addl
push
and
push
bound
jne
arpl
inc
cs
sti
jl
inc
sub
fwait
test
in
fiadds
ja
repnz
sub
sub
fldlg2
cld
pop
inc
push
sbb
push
cmp
repnz
dec
xchg
or
add
push
fbld
loop
out
nop
mov
add
test
dec
mov
adc
mov
es
lea
or
and
jb
je
push
or
div
and
push
pop
int3
icebp
mov
lds
mov
out
and
fldt
lods
lods
jecxz
shr
inc
xchg
mov
and
jne
xor
daa
je
mov
sbb
lcall
pop
sub
xor
add
inc
mov
cmc
sbb
test
mov
repz
sti
xlat
out
adc
mov
and
adc
pop
repnz
andb
or
mov
ss
or
mov
inc
sahf
mov
dec
mov
xor
mov
pop
push
push
add
mov
push
jmp
pop
aam
mov
out
push
pop
aam
mov
jl
movaps
sub
dec
imul
push
cmp
outsl
sub
sbb
sub
mov
and
adc
pop
dec
fildl
addb
das
daa
out
fadds
fsubr
out
add
push
pop
push
pop
sbb
mov
das
adc
xor
js
mov
cs
sub
xor
add
pushf
rclb
std
popa
sbb
xlat
mov
jge
sarl
xor
mov
insb
ja
insl
dec
and
shlb
mov
xor
icebp
or
sbb
jl
pop
fwait
adc
ds
lcall
ja
or
inc
pop
inc
xchg
mov
add
test
std
cmp
push
es
dec
and
pop
add
mov
loopne
shrb
mov
outsl
xchg
pop
push
add
cli
dec
cli
insl
out
test
mov
pop
decl
adc
ljmp
fistpl
cmp
inc
sbb
fwait
out
dec
or
jmp
jp
xor
xchg
sahf
je
sub
push
pop
xchg
stos
mov
adc
push
mov
mov
push
in
loopne
mov
gs
dec
pop
adc
push
add
add
adc
sbb
adc
push
inc
mov
add
or
or
sub
dec
cmp
lods
cmp
ret
mov
pop
sbb
inc
push
sub
imul
sbb
inc
imul
sub
imul
push
outsb
push
sub
pushf
cmp
test
pop
test
dec
out
cmp
xchg
dec
cmp
sub
push
sub
push
and
push
add
pop
sub
xor
sub
in
lods
ljmp
inc
and
insb
inc
sbb
jno
adc
aaa
clc
mov
add
mov
and
pop
ds
daa
orb
or
adc
cmp
int3
mov
jle
in
cmpsl
jns
cmp
inc
sarl
adc
arpl
aad
xor
adc
dec
push
jo
les
and
jae
jne
mov
push
clc
sbb
daa
loop
cmpb
xchg
jl
sbb
cmp
call
test
push
sub
or
push
jmp
test
adc
mov
xchg
fs
and
incb
dec
add
outsb
add
mov
sbb
popa
jle
inc
adc
adc
pusha
pop
adc
adc
pop
mov
lods
bound
addr16
push
mov
inc
stos
mov
and
pushf
and
outsl
mov
add
dec
inc
sbb
mov
cmp
cmp
add
lret
aad
xor
xor
sub
add
mov
and
cmpsb
adc
adc
add
pop
ja
insl
js
inc
pop
sti
add
adc
lods
mov
or
push
movhps
sbb
push
lcall
sub
rcrb
aaa
cmp
inc
cmpsb
imul
pop
pop
popa
add
lcall
and
xchg
orb
xor
pop
xchg
xchg
push
fwait
mov
das
movsl
pop
stos
scas
pop
inc
xchg
daa
mov
ret
enter
bswap
orb
pop
fsub
out
or
lock
cmc
pop
jns
ret
lcall
or
inc
adc
cmp
jnp
fadds
inc
adc
or
pop
idivl
repz
jnp
insb
cmp
repz
fildl
ds
popa
out
sahf
negl
gs
jle
iret
repz
cmp
or
cmp
repz
push
adc
repz
inc
push
pop
outsb
jo
cmp
repz
add
pop
or
sbb
movups
cmp
dec
push
pop
outsl
jno
add
flds
jne
dec
add
ret
push
outsb
sub
inc
mov
add
add
pop
aas
jmp
or
or
popf
and
adc
add
aas
push
pop
dec
sti
sti
sub
sbb
or
add
push
hlt
pop
push
and
and
test
inc
push
lcall
imul
xor
cmpsb
cli
and
dec
pop
dec
shll
lahf
movsl
xor
shll
into
aam
std
mov
flds
inc
or
inc
jb
add
fstpl
adc
xorl
sub
mov
sub
outsl
xor
inc
push
cmp
pop
push
movsl
xor
xchg
and
cmp
nop
arpl
xor
les
inc
push
xor
mov
int
outsl
and
dec
xor
or
jmp
xchg
sub
repnz
or
inc
lret
repnz
ja
push
and
sbb
mov
adc
add
add
ss
in
cmp
sub
inc
or
clc
xor
jae
and
pop
xlat
lcall
loop
pop
out
pop
nop
out
fmull
icebp
testb
fisubl
rcll
add
aas
imul
sub
xor
cmp
jbe
cmpsb
imul
xorl
cmpsb
or
jae
jge
insl
or
xchg
mov
inc
sbb
push
mov
movsl
rsm
scas
or
cmpsb
mov
mov
insl
enter
rcl
dec
dec
push
andl
shll
adc
data16
xor
test
cmp
adc
and
dec
jle
and
dec
add
push
lcall
inc
dec
imul
push
orl
inc
xor
shll
add
and
adc
jb
or
or
ss
je
or
and
fmuls
cmpsl
add
pusha
add
or
mov
xor
sub
subb
pop
cwtl
and
lods
sub
mov
out
mov
jb
mov
movsl
subb
xor
add
dec
dec
scas
cwtl
dec
loop
ss
sbb
roll
sub
js
push
push
dec
je
inc
push
jmp
add
int3
inc
mov
sub
pop
cld
inc
jmp
cmp
push
cmp
js
inc
in
scas
adc
rorb
pop
xchg
sub
cmp
out
and
aaa
or
xor
nop
pop
je
jmp
std
stos
in
loopne
add
loopne
cmp
dec
mov
jle
mov
xorl
movsl
xor
sub
add
test
aas
add
and
add
sbb
sub
cltd
jp
testl
pop
and
add
dec
mov
adc
cmp
pop
mov
adc
cs
hlt
fcoms
subl
dec
je
cmc
and
sbb
or
cmp
adc
rcrl
xor
and
push
mov
push
dec
or
jae
call
add
inc
cld
push
movb
or
or
or
add
adc
aaa
lret
xor
pop
sbb
sbb
mov
push
div
or
or
mov
daa
cld
mov
sub
cs
sub
imul
or
lcall
imul
imul
imul
cmpsb
imul
sahf
mov
cmpsb
imul
cmpsb
imul
xor
rolb
dec
adc
xor
cmp
pusha
push
add
sub
mov
imul
imul
imul
add
push
jns
cmpsb
sub
nop
mov
adc
add
fsubs
sahf
push
mov
nop
pop
add
or
pusha
ret
xchg
pop
test
sbb
ret
dec
roll
es
rcl
push
xor
push
loopne
ljmp
dec
stc
incb
or
adc
sbb
and
sub
xor
cmp
inc
dec
dec
xor
shll
pop
pop
bound
ss
shrl
jnp
and
addb
iret
xchg
adc
add
sbb
push
adc
clc
push
dec
shll
add
xchg
push
test
movsl
ss
push
jb
inc
xor
xchg
pop
jnp
das
push
xor
shl
pop
out
add
and
cmc
sub
cmp
enter
inc
jae
inc
call
imul
jb
test
pop
xchg
add
xchg
les
and
add
xchg
add
test
insl
mov
sbb
idivb
cmp
sbb
ret
mov
mov
push
lods
mov
mov
rol
lret
xor
fsubp
call
pop
sbb
pop
sahf
push
push
or
cmpsb
imul
imul
inc
or
add
or
fidivrs
out
orb
js
push
sbb
iret
jnp
jns
and
inc
sbb
or
cmp
repz
andl
mov
popa
je
adc
mov
imul
popa
and
push
sbb
aaa
pusha
push
jnp
and
andl
mov
addr16
shll
test
xor
mov
andb
jge
push
push
stc
clc
inc
lcall
jg
insl
or
or
out
pop
in
int
imul
dec
shll
adc
push
and
xor
shrl
sub
shll
push
pop
xor
shll
imul
js
addb
xchg
xchg
fwait
mov
shll
mov
mov
ror
int
xlat
fmull
xor
loope
jmp
cmc
cli
lcall
or
adc
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
imul
imul
cmpsb
imul
rcl
fneni(8087
in
cmpsb
imul
dec
shrl
or
xor
shll
sub
xor
cmp
inc
dec
dec
push
add
pop
pop
bound
mov
or
adc
repz
sbb
sub
cmp
iret
repz
test
iret
repz
xchg
xchg
and
mov
sbb
or
dec
fs
jnp
mov
adc
xor
push
jbe
or
add
push
jns
out
or
push
pop
pop
out
sahf
out
pop
pop
pop
pop
jns
repz
add
arpl
jns
out
gs
jns
imul
jns
out
xor
xor
xor
inc
xor
cmp
cmp
out
dec
inc
inc
inc
inc
out
sahf
out
xor
sahf
out
sahf
dec
dec
dec
inc
dec
jns,pn
out
adc
es
out
sahf
out
adc
jns
sbb
sbb
push
pop
jns
out
das
and
and
out
sahf
out
adc
pop
out
sahf
sub
fwait
add
cmpsl
add
clc
inc
push
repz
cmp
lea
xchg
dec
shll
ret
int3
xor
shll
imul
cmpsb
imul
imul
cmpsb
imul
int
mov
insb
pop
sbb
incb
pop
imul
push
xor
lods
sbb
popa
shll
test
xchg
mov
les
fucomip
icebp
dec
shrl
cli
add
push
daa
xor
shll
cmp
push
shll
js
dec
shll
scas
mov
dec
shll
leave
rcr
in
ss
shr
idiv
or
cmpsb
imul
imul
cmpsb
imul
test
sub
sbbb
int
in
inc
mov
inc
push
cmp
loopne
inc
push
cmp
in
in
cmp
nop
out
call
inc
jmp
in
in
inc
push
out
out
icebp
nop
inc
push
cmp
repnz
inc
push
cmp
div
cli
in
stc
sti
cld
and
sbb
enter
and
fsubs
xchg
xchg
and
sbb
pusha
and
fcomps
adc
in
nop
inc
mov
adc
and
add
stos
xor
es
sbb
in
clc
adc
fsubs
sbb
leave
and
push
push
xlat
stos
mov
push
mov
jb
ret
aad
mov
enter
adc
jge
adc
xchg
sbb
neg
mull
js
nop
arpl
mov
pop
movsb
cmp
and
add
add
movsb
loope
and
sbb
enter
jb
and
adc
lret
enter
sbb
into
iret
xchg
int3
rcl
push
nop
add
sub
push
es
lret
mov
dec
flds
rol
and
insb
cmp
fdivl
scas
cs
fsubrs
out
mov
xor
add
fldl
fildl
outsl
subps
es
jo
xor
pop
dec
popa
arpl
subl
sub
cmp
jnp
and
push
pop
data16
imul
imul
cmpsb
ror
fnsetpm(287
pop
ss
nop
in
testb
or
cmpsb
imul
imul
cmpsb
imul
imul
imul
dec
shrl
shll
push
pop
dec
shll
mov
cmpsb
scas
mov
ror
rcr
in
cmpsb
imul
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
shll
push
adc
dec
shll
cmp
mov
inc
dec
push
test
push
push
jns
outsb
adc
and
and
nop
inc
and
pusha
add
and
pop
inc
push
cmp
lds
add
xor
sbb
enter
adc
nop
popa
xchg
and
and
and
adc
sbb
adc
inc
xchg
inc
in
xchg
add
push
sbb
cmpsl
adc
pop
test
pop
stos
lods
and
jnp
and
test
mov
pop
mov
out
mov
leave
and
in
nop
popa
imul
push
cmp
cmp
fdivrs
rol
jns
repnz
les
cmp
fsubs
push
adc
and
cmp
nop
or
sbb
mov
nop
inc
sbb
sbb
in
into
push
adc
inc
rcr
xchg
pop
cmp
nop
mov
xor
xlat
fdivs
adc
xor
jo
xor
and
push
cmp
and
and
bound
add
push
cmp
and
pop
adc
xchg
mov
push
jns
sti
mov
jo
out
and
xchg
gs
fs
imul
dec
add
hlt
iret
adc
cmp
inc
xor
push
adc
sub
jmp
jno
add
xchg
data16
add
mov
mul
push
adc
sub
pop
sbb
adc
subb
push
iret
lret
leave
nop
dec
leave
ret
mov
dec
or
add
cs
add
cmp
add
cmpsb
jns
or
push
daa
xor
inc
dec
push
pop
lcall
orl
mov
pop
imul
into
or
adc
cmpsb
imul
dec
push
pop
pop
lcall
jbe
subb
imul
cmpsb
lods
mov
add
andl
add
andl
sbb
enter
xor
nop
arpl
cmp
or
adc
pmulhuw
adc
nop
inc
push
cmp
in
adc
fwait
lods
movsb
sbb
andl
or
adc
pop
in
arpl
jnp
loopne
adc
push
add
je
xchg
mov
lret
pop
outsb
or
movsb
bound
push
fdivp
pop
nop
pop
or
push
gs
xchg
in
push
pop
dec
push
inc
xchg
gs
xchg
push
ds
cmp
mov
jmp
pop
push
or
sub
mov
add
adc
lret
push
push
xor
lret
push
inc
sub
add
das
popf
mov
pop
ja
pop
imul
mov
lcall
imul
sbb
jo
dec
shll
cltd
lahf
movsl
stos
shll
ret
leave
pusha
shll
add
cmp
pop
or
insb
pop
or
je
outsb
orl
or
xor
enter
jge
and
fwait
mov
out
jge
jo
pusha
adc
iret
xchg
shlb
loopne
imul
jmp
aam
pop
into
jmp
enter
mov
dec
dec
sub
mov
cmp
jmp
pop
push
xor
inc
ds
pop
addr16
add
inc
dec
xor
or
cmpsl
jne
or
rep
and
dec
jne
mov
test
xor
mov
ss
pop
adc
sbb
jg
add
jl
dec
shr
add
out
mov
pop
or
fst
sub
fdivrl
xor
pop
adc
mov
fstl
push
sub
daa
and
mov
cmpsb
xlat
or
mov
push
filds
sbb
imul
ficompl
inc
je
jno
cs
add
out
pop
stos
dec
add
stos
fdivl
aad
sbb
pop
inc
sub
push
test
and
pop
add
inc
test
push
test
add
cmpsb
pusha
adc
fildll
xor
adc
enter
inc
or
shrb
fcmovnb
into
xchg
adc
aas
pop
insl
dec
xor
loopne
add
pop
mov
sub
lods
shll
lahf
xor
push
sbb
sbbb
sahf
mov
add
jb
pop
dec
mov
add
call
xchg
dec
xchg
push
dec
pop
inc
jl
ret
pop
xchg
nop
or
xchg
mov
push
dec
add
outsb
iret
xor
mov
mov
dec
scas
sbbl
lds
lea
ret
sub
mov
in
lcall
or
pop
lock
adcl
mov
adc
fcomps
outsb
push
ret
insl
push
dec
cmp
push
aaa
add
pop
adc
sbbl
aam
xor
add
inc
test
xor
sbb
pop
iret
cwtl
sbb
mov
sbb
dec
dec
mov
mov
jmp
sbb
jmp
mov
or
cmp
add
je
xor
mov
fsubs
jns
add
ret
sar
sarb
add
dec
and
xor
add
into
add
dec
push
cld
sbb
mov
inc
pop
lds
jne
pop
mov
ja
add
pop
rclb
adc
adc
dec
and
shlb
movsl
cwtl
and
lea
mov
push
push
loope
inc
mov
cmp
sete
inc
outsb
add
mov
jge
mov
pop
lahf
popf
add
cmp
je
es
mov
jge
mov
das
push
nop
inc
decb
push
out
inc
dec
jo
pop
adc
loopne
xchg
leave
pop
or
fdivrs
mov
ret
adc
pop
push
xor
or
ljmp
sbb
fwait
mov
xchg
jbe
jp
inc
arpl
sbb
and
sub
adc
insb
les
sub
inc
mov
jne
out
sub
or
jl
jge
jle
sub
ljmp
add
push
vmovupd
pusha
data16
adc
adc
jmp
add
stc
dec
or
lret
adc
xor
ds
sub
shrd
lahf
lea
adc
push
in
add
dec
jo
mov
fisttps
mov
mov
adc
xchg
repnz
and
arpl
jmp
add
and
clc
inc
add
dec
or
or
loope
ljmp
jno
jmp
test
jle
mov
clc
jmp
mov
add
adc
sub
movb
or
call
das
je
xor
or
push
add
mov
mov
adc
xchg
and
nop
cmpsl
or
push
rcrb
push
pop
pop
dec
adc
pushf
clc
dec
addb
mov
scas
or
fsubrs
or
inc
pop
and
or
jg
pop
das
cwtl
cmp
dec
neg
rorl
les
insl
adc
loop
xchg
inc
movsl
test
cli
mov
aam
and
and
dec
lahf
cwtl
xchg
cmp
js
bound
lods
dec
cmp
or
js
ret
sti
clc
ret
inc
outsl
adc
jo,pt
adc
push
push
pop
xchg
lock
inc
sub
jg
dec
lds
adcl
incl
sbbb
shr
dec
inc
jne
mov
fdivr
loop
jo
or
or
adc
push
ret
stc
aaa
lods
fwait
movsb
icebp
dec
js
andl
test
nop
lock
shr
jb
xor
cmp
jle
loopne
dec
sbb
jae
aaa
cmp
sub
and
jle
cmpsb
and
xor
mov
cmp
push
int
dec
dec
negl
test
ds
push
adc
xchg
push
add
adcl
add
cmp
das
pop
push
pop
pusha
xor
outsl
ljmp
sbb
add
push
pop
cmpsl
push
testb
jbe
mov
push
mov
adc
ljmp
fcom
mov
add
or
andl
ret
adc
das
cmp
add
jb
adc
fbstp
push
gs
adc
sar
xor
jne
andb
das
mov
cwtl
xchg
push
add
xor
jb
nop
gs
pand
add
es
test
pushf
or
sbbb
popa
rcll
jb
mov
and
nop
or
mov
push
rcrb
xchg
push
sbb
rcl
out
and
sub
or
xchg
inc
xchg
sbb
adc
addr16
sub
inc
add
adc
test
sub
jmp
inc
mov
sub
mov
inc
push
sub
mov
cli
jg
mov
inc
push
jbe
inc
cmp
inc
xor
loope
mov
insl
sub
les
mov
add
push
push
cmp
and
xor
xor
and
pop
push
cmpsb
or
or
fs
xchg
xor
and
or
jge
pushf
or
jl
push
or
popf
push
mov
enter
jg
pop
repnz
loope
jle
inc
sbbb
inc
inc
inc
jb
mov
dec
out
add
dec
push
jle
xchg
or
and
or
dec
push
jle
pop
cmp
and
sbb
inc
xchg
test
inc
aam
jnp
rolb
jb
or
adc
repz
sub
adc
mov
and
and
insl
mov
adc
mov
or
dec
insb
jl
leave
and
dec
dec
pushf
nop
test
jge
lea
adc
enter
adc
cmp
dec
push
inc
xor
daa
push
xchg
add
rol
scas
and
add
je
loope
pop
inc
adc
rcl
add
int
mov
test
call
adc
xchg
or
push
dec
shlb
ror
sbb
jl
xchg
fcoms
mov
xor
or
js
jg
and
jg
ficompl
inc
mov
push
pusha
lods
jl
insb
or
push
mov
jge
sbb
mov
fidivl
add
popf
lods
lahf
mov
outsl
inc
in
and
repnz
lock
fildl
or
jb
push
mov
jmp
sub
cmp
add
adc
imul
enter
jae
xor
push
sub
push
dec
inc
push
push
xchg
push
jno
outsl
inc
insb
inc
add
decl
push
mov
add
ret
mov
iret
push
outsb
js
lea
dec
push
addr16
dec
dec
repnz
in
insl
in
dec
leave
push
jbe
cmp
push
lods
mov
arpl
dec
out
bound
shrb
cmp
insl
or
in
dec
loopne
inc
outsl
or
and
pop
enter
or
inc
shlb
sbb
pop
jnp
pop
je
call
or
xchg
adc
inc
in
xor
faddl
movsb
and
les
inc
adc
inc
inc
sar
jo
push
ficomps
sbb
movsb
xorb
fs
loop
mov
xchg
rorb
hlt
sahf
and
push
inc
or
mov
cmp
cmpl
add
movsl
mov
xor
add
xchg
push
jb
pop
inc
aam
inc
data16
xchg
jl
je
inc
inc
aam
je
insb
dec
hlt
add
sarl
sbb
xor
xchg
jae
mov
and
ret
add
pop
lock
shlb
clc
sbb
and
into
test
sbb
and
roll
xor
push
adc
insb
mov
iret
and
daa
or
or
sub
inc
sbb
pop
push
cmp
pusha
sbb
sbb
enter
xchg
cmp
sbb
hlt
add
adc
adc
fstpl
and
or
add
dec
sbb
push
outsl
das
jnp
sahf
push
add
das
xchg
dec
mov
jp
add
add
adc
jnp
and
cmpsl
jo
mov
add
and
gs
push
repz
nop
lock
or
sbb
mov
imul
push
pop
or
andl
test
jecxz
and
test
cld
inc
inc
push
sbb
les
inc
aas
gs
inc
adc
dec
xor
scas
push
xlat
adc
rolb
xchg
fisubs
push
aad
jo
cmpsl
data16
je
sbb
ret
das
dec
and
adc
and
sbb
inc
je
inc
add
or
adc
xorb
popa
sbb
cmp
mov
and
and
iret
movsb
mov
call
push
push
mov
lods
xlat
ret
add
sbb
push
dec
xor
cmp
add
xchg
sarl
or
dec
mov
or
push
mov
push
ret
test
jmp
daa
push
inc
add
outsl
cmp
cmp
loop
xchg
mov
cltd
and
addr16
jbe
adc
or
add
inc
or
adc
adc
adc
nop
mov
adc
inc
push
add
loopne
push
dec
add
push
mov
in
adc
imul
sub
push
mov
add
or
mov
test
sub
add
aaa
ficoml
inc
ja
cmp
andl
pop
adc
outsl
pusha
popl
out
jmp
jmp
sub
in
jmp
sbb
xor
sub
aas
xchg
sbb
fcoms
push
cmp
aaa
add
sbb
mov
or
inc
es
std
cmp
or
and
mov
je
into
cmp
int3
aam
jb
in
mov
shl
xor
or
pop
mov
xchg
xchg
dec
adc
sbb
adc
xchg
mov
shlb
jbe
xor
fsubs
inc
cmp
sub
scas
cmp
dec
fcoms
rclb
fnstenv
sbb
push
jb
mov
add
add
adc
mov
je
xlat
imul
jg
int3
inc
pop
or
pusha
leave
adc
sarl
dec
sahf
mov
inc
inc
pop
ret
mov
pxor
sbb
mov
push
xor
sbb
movsl
xor
cmpsb
loop
ret
xor
les
dec
daa
daa
or
sbb
lcall
push
dec
sbbb
and
fs
cmpsb
aad
sub
arpl
xor
adc
push
inc
cs
xlat
inc
or
sub
push
or
or
fsub
pop
or
das
adc
nop
and
or
inc
and
orl
pop
xor
push
addl
jno
rorb
movb
pop
sbb
push
das
andl
push
icebp
shlb
cs
fsubl
in
or
out
or
das
stos
loopne
movsl
pop
and
push
adc
inc
cmp
mov
ja
and
mov
jle
add
lahf
and
jle
test
sbb
popa
adc
iret
fcoml
je
das
and
dec
dec
daa
out
fildl
adc
ret
insl
rorb
and
insl
mov
jmp
push
lahf
stc
or
les
xor
popa
ret
adc
push
push
shr
or
add
push
ss
adc
pusha
or
push
add
xchg
sbb
lahf
add
and
fwait
sbb
in
cmp
xor
inc
or
mov
jne
lods
nop
lcall
es
jg
test
add
and
lret
mov
add
lods
aad
mov
xorb
mov
sbb
loopne
inc
or
fs
xor
inc
or
inc
andl
pop
shr
xor
jbe
lea
sbb
inc
bound
shlb
or
ljmp
dec
cmpsl
or
add
or
mov
mov
jecxz
loope
insb
fidivrs
lea
stc
ss
pmullw
or
cli
rcl
pop
aad
jl
jnp
popa
test
xor
push
leave
and
lock
pusha
add
sbbb
jmp
or
nop
adc
lods
pop
xchg
mov
mov
sub
dec
or
xor
fsubs
fcomps
mov
or
mov
in
test
sub
xor
in
in
fstl
sbb
and
push
lahf
push
test
out
xor
lret
add
jge
fldl
into
dec
outsb
call
adc
aas
hlt
adc
xchg
xchg
hlt
cmpsl
cmp
mov
xor
pusha
adc
imul
adc
sbb
push
dec
lods
adc
imul
sub
xchg
pop
loop
dec
inc
push
xor
or
and
imul
or
cmp
push
and
outsb
cmp
rorl
xchg
inc
es
ficomps
into
cmp
jo
inc
gs
mov
fwait
xor
daa
cmpps
gs
dec
out
jb
cmpsl
test
pop
imul
sbb
adc
pop
xchg
sub
aaa
adc
and
jmp
dec
mov
or
or
loope
sbb
add
adc
jns
lds
cmp
jo
inc
scas
mov
inc
dec
leave
inc
ret
inc
adc
sub
or
sbb
aaa
cmp
push
mov
push
sbb
push
mov
and
pop
jl
adc
movsl
or
xor
adc
mov
imul
xchg
mov
cmp
ds
push
push
and
dec
xchg
sarb
aaa
in
dec
andb
je
sub
or
mov
inc
pop
push
xchg
decb
add
mov
ret
adcl
sbb
mov
dec
pop
adcb
mov
cwtl
roll
rorl
xchg
mov
sub
das
lods
pop
jmp
cmp
lods
adc
add
mov
mov
add
or
jbe
sbb
dec
mov
cltd
rcll
in
cltd
push
mov
xor
adc
fimull
aaa
stos
mov
les
add
lcall
add
lcall
fwait
push
sub
and
pop
mov
inc
xor
dec
adc
pop
xor
push
jb
mov
jl
ds
sahf
cmp
jne
adc
les
stos
clc
mov
dec
adc
xor
shll
jno
sbb
adc
lea
sbb
clc
clc
push
inc
or
xor
xorb
loop
mov
mov
icebp
adc
push
or
add
inc
ja
call
cmc
cmp
inc
push
sub
or
imul
sub
das
mov
jae
shll
add
xlat
and
pusha
roll
xchg
jb
jnp
pushf
stc
xchg
movups
out
or
mov
ds
adc
out
inc
add
adcb
sahf
es
addr16
add
jne
popf
and
movsl
ret
pusha
add
and
inc
sub
scas
pop
xor
xorb
jo
sub
fcompl
jne
lahf
and
and
add
mov
test
lea
push
in
inc
or
subb
cmp
pop
push
add
inc
push
inc
sub
pusha
sub
or
gs
iret
jo
and
xor
push
or
mov
mov
dec
mov
cmp
dec
inc
fisttpll
in
push
fisubrl
mov
xadd
adc
sbb
push
inc
rclb
ret
in
sub
mov
popa
mov
push
mov
mov
sbb
loope
push
lock
inc
inc
insl
andb
sub
outsb
and
jne
mov
xchg
mov
and
adc
dec
lret
in
pop
movsl
mov
xchg
das
into
and
sbb
and
test
push
mov
cmovp
jns
adcl
or
push
mov
mov
nop
jg
push
push
add
pop
dec
jns
out
adc
jo
adc
mov
test
xchg
jmp
arpl
roll
sarb
les
mov
subb
mov
inc
or
xor
pusha
xchg
pusha
lea
pop
inc
add
mov
jns
xchg
rolb
xor
nop
pop
xor
mov
adc
adc
inc
adc
enter
and
sub
mov
mov
ja
loope
sbb
flds
jo
push
and
cs
loop
xchg
pop
test
mov
shll
dec
sbb
adc
mov
xor
push
or
int
imul
ret
add
ja
gs
data16
adc
add
push
or
adc
xor
inc
mov
xlat
mov
inc
pushf
sub
cmp
mov
dec
inc
shrb
sbb
inc
mov
pop
xor
and
jo
daa
jae
jmp
repz
test
adc
fistps
adc
adc
je
fcompl
or
xor
aam
sub
xor
lock
inc
or
push
fimull
jbe
outsl
mov
loopne
lods
xchg
mov
sub
pop
in
or
push
dec
push
mov
add
cmpsl
dec
out
or
and
dec
mov
sbb
test
or
push
sub
or
int3
daa
sub
adc
cmpsl
je
dec
test
mov
sbb
inc
pop
dec
dec
mov
mov
xor
movsl
lds
shlb
sub
inc
stos
add
sbb
test
es
addl
in
data16
leave
sub
pop
test
inc
mov
daa
pop
test
ret
pop
leave
nop
pop
enter
pop
dec
add
ss
aad
cmp
push
add
adc
jne
stos
cmp
test
and
aas
add
or
mov
or
scas
fs
inc
or
mov
inc
outsb
fistl
js
sbb
sbb
mulps
mov
sub
loope
jae
ret
mov
popa
lods
mov
add
push
shrb
or
xchg
stos
orb
mov
dec
in
xor
add
add
nop
mov
add
and
lret
add
sub
or
imul
jecxz
je
cmp
jbe
add
fisubl
xor
dec
mov
pusha
jecxz
inc
rcrb
aad
mov
dec
mov
stos
lret
and
fwait
fs
dec
movl
gs
mov
mov
in
sub
inc
push
jg
lods
jns
aam
inc
test
insb
and
daa
inc
pop
dec
fcoms
mov
push
and
mov
and
bound
mov
aas
jnp
sahf
push
add
ret
push
push
add
and
add
and
inc
push
popa
add
mov
adc
les
and
negl
inc
or
mov
and
adc
push
or
je
cmp
in
rcrl
cmp
fnstenv
scas
pop
aas
add
push
sub
push
push
enter
add
popa
jne
ja
pop
mov
push
mov
and
test
in
mov
call
call
mov
repz
pusha
popf
xorb
jle
ret
add
mov
outsl
and
pop
mov
cmpb
pushf
icebp
gs
dec
sbb
dec
pop
push
fdivl
cmp
data16
jmp
pop
xor
and
sub
add
das
es
jmp
sub
adc
shrl
add
or
sbb
mov
or
dec
mov
adc
mov
adc
add
std
add
adc
sub
xchg
test
pop
add
mov
dec
scas
and
fsubl
mov
mov
and
mov
addr16
scas
repz
scas
pusha
adcl
in
mov
cld
mov
mov
ret
je
xor
jmp
in
or
popa
sbb
adc
pusha
inc
inc
add
stos
pop
aas
push
and
cmp
cs
lods
adc
and
nop
dec
xorl
xor
pop
test
dec
pop
orl
dec
inc
xchg
sub
jmp
orl
arpl
test
dec
push
enter
mov
dec
mov
inc
sbb
adc
mov
ret
adc
enter
notl
sub
je
les
adcl
repnz
xchg
mov
les
popf
xor
aas
aad
adc
xor
mov
pop
loop
fldl
jmp
test
inc
std
push
shll
int
rcrl
movsl
insl
out
xor
xlat
mov
in
testl
sub
xlat
sti
pusha
call
in
inc
stos
addr16
mov
cmp
xor
jb
mov
stos
cmp
cmp
mov
fs
lea
inc
jle
iret
dec
cs
cmpsb
sub
push
xor
jb
mov
jb
jbe
adc
and
dec
adc
cmp
adc
mov
scas
sub
andl
add
arpl
pop
mov
inc
pop
xorb
sbb
mov
cs
orb
pop
pusha
ret
rorl
test
inc
adc
sub
aas
insb
sub
push
ja
mov
mov
sarb
xor
in
mov
jne
pop
jb
nop
inc
xchg
mov
add
movsb
push
popl
je
loope
add
add
outsl
adc
adc
rolb
lea
mov
nop
in
sub
pusha
test
jb
mov
es
fmuls
pop
loop
or
call
pop
rolb
into
inc
add
sbb
sub
sbb
pop
sbb
outsl
orb
or
outsb
rclb
pop
imul
jns
cmpsl
xchg
mov
sarb
fwait
mov
inc
mov
and
or
lock
mov
sbb
mov
push
and
cld
and
mov
mov
mov
inc
clc
inc
mov
mov
jb
lock
and
inc
mov
lahf
add
adc
mov
call
or
pop
leave
lock
test
hlt
sub
mov
dec
pushf
jae
leave
mov
or
adc
add
jg
xor
scas
mov
add
lods
dec
sbb
push
gs
mov
inc
add
xor
rol
jl
pop
dec
dec
adc
js
rorl
cmp
movsb
pop
pop
popa
or
pop
sub
dec
adc
rcr
push
pop
inc
sub
call
xchg
xor
test
mov
js
hlt
push
test
lock
cmp
adc
bound
inc
add
jne
xchg
fbld
test
sbb
and
jne
or
repnz
push
jbe
out
xor
push
popw
and
movsl
xchg
xchg
sub
and
mov
sub
and
dec
xor
mov
push
and
les
xchg
cmp
mov
add
lock
ret
and
push
adc
lret
dec
fwait
push
hlt
les
sbb
inc
mov
test
dec
mov
push
in
insb
and
lds
push
push
call
sub
push
cwtl
push
adc
test
pushf
lds
rclb
test
ja
add
push
push
adc
and
add
dec
mov
popa
icebp
or
push
pop
ficomps
pop
jb
add
jecxz
bound
insb
fbld
pusha
push
mov
mov
and
imul
fwait
aaa
push
imul
test
and
inc
inc
mov
fbstp
sbb
add
xor
test
das
ljmp
cmp
shlb
stos
xor
lods
lods
jge
sbb
inc
dec
mov
push
xor
mov
push
or
scas
fistps
and
std
push
add
jne
popa
push
push
adcb
jg
jp
test
in
in
andb
push
mov
or
or
mov
pop
pop
ret
cs
inc
pop
aas
fsubrl
in
and
mov
dec
fists
jl
icebp
std
add
and
pop
enter
add
ret
lret
rcll
inc
xchg
sub
fisttpl
lds
cmp
xor
mov
and
in
adc
loope
movsl
ja
test
sub
cmp
xchg
in
lret
dec
enter
jnp
or
adc
nop
or
inc
sbb
add
inc
push
cmp
nop
addr16
push
adc
imul
xor
push
mov
or
sbb
dec
loopne
mov
mov
aaa
sti
sbb
sub
es
fsubs
mov
nop
cld
inc
jae
push
dec
sbb
mov
std
pop
push
mov
mov
loopne
sbb
xchg
loopne
inc
xor
jl
inc
dec
call
mov
dec
adc
mov
pushf
mov
dec
dec
test
fistps
imulb
adc
repz
leave
cmp
mov
ss
push
sub
mov
aaa
fsubs
daa
das
xor
xchg
and
sbb
out
pop
sub
test
int3
lea
inc
sub
or
daa
jae
sub
hlt
push
rcr
push
add
es
mov
xchg
outsl
sub
inc
mov
dec
dec
scas
pop
adc
jmp
push
cmp
fidivrl
xor
sbb
mov
lret
xor
jns
int3
cld
push
les
dec
jge
jmp
and
sbbb
mov
nop
xchg
cmpsb
lea
test
dec
adc
movsl
pop
int
push
test
and
add
jns
movl
mov
pop
xchg
gs
mov
or
hlt
rcll
add
mov
es
ret
cld
pop
push
sbb
pusha
out
pop
stc
adc
jl
inc
sbb
add
xchg
inc
shrl
xchg
add
add
dec
enter
loopne
lea
adc
jo
pop
js
ror
fdivl
rcll
jge
cmp
es
and
sbb
ficoms
loopne
daa
add
popf
adc
pushf
adcb
loopne
inc
je
repz
adc
ds
cmp
sbb
iret
pop
and
addr16
fmuls
fdivs
ljmp
xor
or
outsl
inc
sub
jne
push
inc
xor
or
xor
sub
sub
pop
in
cmp
inc
rcr
lea
fmull
addr16
push
sub
stos
push
pop
out
push
adc
leave
sbb
push
add
cmp
and
repnz
mov
mov
popf
nop
mov
rorb
lret
add
mov
mov
fcmove
add
dec
sti
push
jo
ss
adc
sbb
shll
inc
add
lds
sarb
adc
or
and
shrl
sbb
lcall
add
xchg
rorb
rcll
sarb
xor
rcrb
jb
add
fcomps
or
nop
add
push
inc
push
xchg
mov
sbb
push
dec
hlt
mov
mov
es
mov
sbb
pop
pop
dec
add
repz
inc
aaa
push
add
inc
test
arpl
scas
cmp
rcrb
push
sbb
add
and
dec
sub
je
lock
and
sbb
cltd
stos
xorl
inc
jmp
pushf
or
sarl
and
xchg
sbb
and
jmp
inc
and
enter
and
inc
into
movsb
and
cmp
cwtl
cmp
ror
xor
fs
shll
dec
push
mov
in
push
dec
sarb
shll
cmpsl
mov
and
leave
jns
imul
sarl
out
loopne
pop
aas
sub
dec
pop
outsl
add
push
and
or
pop
and
xchg
and
pop
sbb
mov
dec
lods
dec
enter
out
or
xlat
cmp
sub
sub
lds
mov
imull
pop
ret
sti
and
js
and
inc
es
pop
adc
daa
cld
cmc
aad
push
adcl
cmp
sub
in
movsl
or
add
or
movsl
ja
ret
add
test
sbb
xor
repnz
add
popf
adc
dec
pop
test
mov
sub
inc
inc
jns,pn
in
cmc
cld
in
cmp
shl
add
push
and
out
insb
popa
dec
adc
xor
pop
adc
fcoms
xor
aam
and
add
jl
and
insl
fs
rclb
add
mov
adc
mov
imul
roll
and
or
fldenv
movsb
xchg
adc
sarb
subb
adc
add
add
xor
pop
addb
pop
pop
and
sbb
or
jno
inc
push
test
int3
or
xchg
sub
inc
add
fstpt
sbb
loop
push
jecxz
dec
xchg
cmp
add
cmp
lret
roll
or
fnstenv
cmp
add
inc
jbe
ss
ja
adcl
faddl
stc
mov
and
loope
fidivl
or
push
lret
dec
dec
aaa
les
mov
fs
jl
call
mov
nop
pop
pop
or
mov
hlt
jmp
test
or
or
mov
adc
pop
stos
lods
fidivrl
push
xlat
stos
bswap
mov
mov
and
mov
inc
ss
inc
and
in
mov
sub
es
add
inc
fiadds
fs
and
pop
push
add
inc
xor
xchg
enter
jmp
adc
pop
das
nop
out
fucomi
or
test
movsl
movsb
dec
in
loope
inc
mov
inc
push
mov
add
aaa
mov
jge
popf
rol
out
fisttpll
fs
xlat
fwait
sbb
add
sbb
xor
aam
in
and
stc
divl
daa
lods
mov
cmp
movb
sarb
mov
addr16
or
inc
push
add
fildll
or
push
ficoms
test
fs
nop
pusha
arpl
test
add
in
push
mov
adc
in
add
cmc
roll
pop
nop
mov
cmpsl
xor
and
push
pushf
mov
dec
dec
out
xchg
insl
cmp
leave
aam
in
xor
xor
inc
sbb
cmp
add
ret
or
les
das
movsb
in
shl
or
jle
lock
ret
ss
ljmp
sbb
stc
xor
pushf
test
add
push
inc
rcrl
mov
mov
shll
or
sbb
in
cltd
cmpsl
fs
rcll
test
imul
inc
or
inc
xor
outsl
inc
or
enter
pop
mov
movsl
dec
popf
loopne
adcl
add
jno
daa
sub
sub
aad
cmc
and
stos
addl
xchg
xor
sbb
ret
pushf
sub
sti
mov
pop
xchg
icebp
sbb
shll
pusha
jecxz
lods
or
push
or
mov
sub
sbb
inc
cmpb
and
int3
dec
pop
je
sbbl
dec
mov
stos
js
in
adc
and
sbb
aam
xor
shrb
mov
adc
movsb
xchg
outsl
add
nop
aad
imul
jns
jne
xor
and
jno
movsb
shlb
push
je
xor
movsl
leave
adc
repnz
sbb
fs
pop
and
push
mov
add
push
mov
pop
mov
pmovmskb
jo
xchg
xchg
jae
dec
inc
les
in
in
loop
ss
or
ja
adc
xchg
shlb
inc
cmpsw
cmpl
push
adc
nop
or
ja
movsb
cmpsb
adcl
dec
dec
xor
push
sub
jmp
push
cmp
mov
subb
aam
mov
add
sub
sub
lea
inc
adc
addl
xchg
xor
push
loopne
pop
push
or
and
outsb
scas
jmp
mov
pop
cld
jmp
icebp
jl
ljmp
ljmp
inc
shrb
jecxz
xchg
shl
loop
pop
mov
fdivrs
mov
pop
mov
xchg
and
add
pop
jnp
jbe
pop
ret
fsubs
ret
mov
add
test
mov
lds
ss
rcrl
movsb
fwait
movsl
push
sbb
outsl
xchg
inc
fs
fmuls
fwait
imul
add
hlt
push
pop
inc
add
mov
pop
inc
inc
inc
and
leave
adcl
jmp
nop
pop
inc
jne
in
iret
ret
xor
mov
inc
les
dec
push
in
pop
xor
inc
jl
popf
pop
pop
cli
fs
adc
flds
xchg
sub
push
mov
pop
and
push
shr
in
or
sub
ds
mov
jle
sbb
cmp
sbb
call
push
mull
push
ret
xchg
dec
pop
pop
cs
ret
fdivs
bound
es
dec
or
fidivl
or
jmp
lea
rorl
dec
fwait
sbb
pop
insl
imul
sbb
pop
mov
aas
jno
push
enter
adc
xor
aas
dec
adc
js
adc
mov
clc
adc
and
xor
xor
sbb
movsb
sub
in
adc
out
imul
adc
loope
ja
divl
mov
fldenv
bound
jl
inc
mov
adc
inc
leave
add
mov
mov
sbb
or
pop
xchg
mov
push
sub
and
mov
cmc
sub
shrb
movsl
hlt
sarl
xchg
pop
mov
inc
outsl
xor
sbb
hlt
mov
je
nop
jle
xchg
mov
shrb
popa
jne
jns
cltd
mov
and
and
pusha
test
lret
inc
movb
pop
out
xchg
pop
rcrl
aam
pop
rcrb
popf
icebp
shrb
and
xor
add
cmp
nop
popa
mov
adc
cmp
pop
repnz
fptan
out
add
je
sbb
and
and
push
cmpsl
pusha
aam
lea
test
or
inc
sub
repz
bound
pushf
jp
mov
sub
or
je
jmp
or
adc
or
test
test
mov
fld
dec
popa
sbbb
ret
inc
fcomip
test
jae
xchg
mov
repnz
call
daa
push
push
dec
int3
xchg
int3
dec
lcall
xchg
add
push
fisttps
push
dec
xor
jnp
imul
lds
les
nop
shll
movsl
jo
adc
mov
xchg
inc
mov
sti
mov
insl
xor
sub
call
or
adc
push
mov
xor
or
test
iret
and
sbb
fs
enter
fs
push
cltd
inc
or
mov
cld
sbb
sbb
fcmovnu
xor
push
es
stos
mov
push
add
push
add
imul
mov
inc
xor
cmpsb
test
test
aam
xor
nop
or
or
dec
data16
daa
andl
ja
les
mov
notb
stc
inc
rcrb
test
cli
adc
sub
adc
fldt
mov
and
orl
and
out
enter
mulb
rclb
pushf
js
test
mov
test
pop
sub
lods
shrl
fldl
mov
mov
insl
pop
xorl
movb
or
rcll
mov
sub
out
cmp
cltd
aam
repnz
sbb
or
pop
and
push
xor
aaa
or
dec
sub
dec
mov
test
xchg
and
and
sub
cltd
or
inc
sub
add
or
leave
rorl
xchg
addb
adc
ficomps
ja
and
add
add
push
addb
mov
adc
inc
mov
add
iret
dec
rorb
push
or
dec
lcall
test
sbbb
test
arpl
and
push
jg
mov
push
daa
clc
sub
je
es
mov
pop
rcll
push
lcall
xor
ret
cmpsb
or
cli
cli
mov
mov
xor
fstpl
sbb
push
ret
xlat
or
rol
add
xlat
mov
or
adc
mov
xor
xor
test
popa
in
adc
adc
data16
xlat
push
dec
pusha
add
adc
loope
pop
mov
repnz
sti
test
mov
sub
ficompl
push
vpunpckldq
dec
or
fs
adcl
mov
jp
jb
cmpsb
sub
or
xor
repnz
sar
and
clc
adc
call
leave
inc
xchg
fldenv
lods
xchg
aam
mov
call
hlt
cld
adc
daa
cltd
cmp
jmp
in
mov
and
push
stc
inc
lods
cli
rorb
mov
pop
inc
dec
mov
push
icebp
or
dec
and
fisubrl
jmp
mov
pop
repz
push
roll
negl
push
and
sahf
cmp
stc
scas
std
lock
movsl
nop
dec
cli
addr16
mov
inc
decl
movsb
jnp
test
clc
inc
inc
or
mov
push
mov
mov
inc
inc
das
cmpsl
outsb
or
outsb
dec
push
dec
mov
mov
lock
push
sub
rclb
xchg
hlt
pop
jo
pop
cmp
xor
add
ja
mov
cld
add
cmp
inc
adc
add
xchg
sub
leave
repnz
dec
stos
divl
add
push
fdivrs
pop
hlt
mov
mov
movb
mov
imul
mov
xor
movsl
lret
sub
add
rorl
clts
lea
lea
dec
fs
sbb
clc
adc
outsb
mov
fadds
pusha
inc
inc
mov
add
adc
inc
add
and
xchg
mov
shrb
aaa
cmp
cwtl
inc
test
inc
or
jmp
or
and
sub
mov
fidivrs
int3
pop
jmp
sub
fs
xchg
gs
and
adc
cmp
dec
lcall
and
push
shl
addr16
pusha
cmp
fisubl
push
push
dec
adcb
or
fyl2xp1
dec
push
inc
ss
add
push
mov
pop
and
movsl
repz
fs
jle
test
or
xor
loopne
xchg
cmp
clc
adc
sub
aad
sbb
std
pop
mov
dec
xor
push
add
mov
cmpsl
pusha
test
rclb
hlt
and
fisttps
or
dec
add
xchg
or
xchg
insl
ja
lds
adc
sub
add
mov
insb
dec
xlat
notl
rep
ret
xor
mov
cmp
les
add
add
add
and
add
mov
daa
sub
out
or
sub
add
mov
gs
outsl
adc
xchg
push
add
inc
xor
or
jo
pop
jg
jb
inc
xchg
sub
and
popf
xchg
mov
or
jb
cs
in
test
lds
adc
les
add
iret
or
iret
add
inc
mov
sbb
aas
shl
jne
lahf
pop
out
and
add
adc
push
sub
mov
in
jp
push
xchg
adc
or
inc
push
adc
adc
inc
stos
fisubl
inc
dec
or
xchg
out
sbb
adc
mov
pop
and
or
repz
or
mov
cmp
push
cmp
or
sahf
mov
pop
adc
inc
dec
mov
lock
or
mov
dec
cmp
mov
inc
popa
dec
inc
sbb
dec
inc
data16
push
xchg
mov
sahf
xlat
dec
dec
bnd
adc
adc
adc
pop
adc
or
xchg
lock
imul
dec
or
les
arpl
add
je
cmp
inc
sub
add
xor
jg
jmp
leave
hlt
mov
inc
cwtl
out
pop
xchg
nop
pop
in
hlt
ss
and
xchg
nop
add
int3
xor
sub
add
cs
test
fldt
mov
push
dec
sub
iret
xchg
daa
cwtl
mov
add
mov
nop
push
inc
scas
cmp
pop
pop
test
adc
and
jl
sub
dec
cwtl
and
dec
jl
loopne
push
or
pushl
inc
pop
fwait
sti
pop
ret
ss
fldt
cmp
xchg
enter
imul
adc
cmp
add
jne
shl
or
dec
sub
mov
cmp
mov
and
push
or
rorb
mov
or
push
fiaddl
out
xor
mov
lcall
cmc
clc
push
aaa
rclb
inc
inc
fists
addr16
inc
sbb
das
arpl
inc
adc
xchg
or
pop
add
nop
xchg
fistl
lock
push
jg
cltd
mov
enter
adcl
adc
and
out
or
inc
cmp
cmpsb
adc
in
insl
adc
push
xor
jo
jnp
or
movsl
inc
lar
xchg
pop
xorl
adc
jne
adc
xchg
outsl
push
xchg
test
scas
pop
cmp
pop
inc
ret
and
sbb
pushf
ret
fildll
pop
mov
fisttps
lock
mov
mov
shr
stos
cwtl
jno
mov
test
or
dec
aad
inc
push
adc
inc
les
mov
xchg
sbb
push
stos
mov
and
mov
in
inc
lods
movsl
iret
mov
cs
daa
subb
fs
mov
add
xor
xlat
sub
xor
pop
sbb
sbb
sub
into
adc
xor
push
add
add
daa
sti
outsl
push
out
inc
lods
add
test
dec
sbb
push
dec
adc
fsubs
dec
aaa
inc
jno
popf
insb
mov
xor
aad
xor
in
das
jmp
mov
jbe
in
andl
adc
and
je
push
fwait
sbb
push
or
jne
repnz
and
in
jb
dec
in
nop
mov
cmp
loopne
test
dec
leave
dec
and
test
jecxz
sbb
test
pop
xchg
pushf
loopne
adc
or
les
leave
push
sub
adc
sbb
repz
and
or
daa
mov
and
loopne
fldlg2
mov
enter
adc
in
loopne
ja
dec
loopne
fwait
dec
and
inc
ret
mov
in
cmp
call
sbb
or
pop
call
push
adc
adc
call
jns
xor
leave
or
in
adcl
fcomp
mov
addr16
int3
mov
pavgb
mov
mov
test
lahf
mov
xchg
xchg
pop
xorl
xlat
dec
add
cmp
xchg
rcll
push
in
iret
or
std
rcrb
xchg
xchg
in
fidivrs
cld
es
dec
cmp
mov
inc
add
and
out
pop
les
movsw
lock
arpl
add
inc
out
js
sbb
dec
or
mov
or
fs
add
sub
sbb
addr16
sbb
xchg
aaa
pop
cmp
in
mov
lea
movsb
repnz
in
sbb
or
pop
pop
xor
and
subps
inc
push
test
add
sub
add
sbb
test
ss
jo
sbb
and
sbb
shrb
xchg
push
xor
mov
push
xchg
push
orb
imul
sub
cmpsl
push
test
sub
xor
movsb
out
and
or
mov
mov
insl
cwtl
push
jo
dec
adc
jb
mov
sub
sbb
mov
or
pop
test
test
fmull
add
or
sbb
sub
mov
jl
test
pusha
nop
das
jns
push
push
or
jg
call
dec
push
cwtl
in
mov
mov
cmp
fadds
int3
jg
xor
push
mov
pusha
adc
push
jg
adc
inc
in
xchg
scas
mov
mov
cmpsb
inc
push
add
lea
repnz
mov
rolb
dec
iret
popa
nop
aas
add
dec
movb
sbbb
cmp
int
cmpsl
and
xchg
test
jecxz
add
adc
mov
jnp
sbb
mov
nop
mov
mov
adc
outsl
popa
inc
or
mov
pop
xchg
int3
hlt
jp
js
sbb
imul
dec
and
flds
xor
sbb
outsl
pop
xchg
test
mov
pushl
push
lods
push
rcrl
and
add
dec
mov
mov
mov
cmpl
add
or
lahf
adc
aas
add
sarb
aam
add
adc
shrb
jns
cs
ds
in
sbb
mov
xor
iret
fwait
nop
int3
int3
pop
or
and
jae
jmp
xor
add
add
mov
fs
cmp
out
lcall
inc
push
adcl
push
dec
gs
and
push
jbe
insl
enter
inc
xchg
mov
mov
test
leave
pop
dec
pop
xchg
clc
stos
and
push
pop
jno
mov
push
lods
mov
pop
cmp
or
and
sub
inc
mov
in
shlb
enter
cmp
and
xchg
in
xchg
rcrb
mov
sbb
add
cwtd
subb
mov
cmp
push
dec
and
cmp
mov
pushf
and
insl
inc
outsb
push
add
or
and
jne
adcl
pop
or
ds
sbb
push
jg
daa
mov
inc
sbb
add
xlat
dec
add
add
jae
or
imul
push
je
mov
adc
jno
cmp
mov
mov
adc
xchg
mov
pop
xchg
add
and
sub
xor
dec
es
xor
cmp
cmp
fs
push
mov
or
inc
daa
daa
daa
xor
xor
cmp
pop
dec
fmull
xchg
fmuls
xor
bound
xchg
scas
inc
inc
cltd
dec
add
mov
scas
adc
enter
in
addr16
jl
stc
nop
jns
jne
add
or
or
and
xchg
lea
fildll
addl
mov
scas
inc
mov
pop
inc
push
xorl
mov
out
push
leave
daa
pop
mulb
xor
fcmovu
inc
push
dec
push
pushl
les
aam
or
sbb
hlt
jmp
cmp
dec
push
inc
sub
inc
ret
or
test
and
push
testl
adc
lock
add
push
xor
sub
inc
sub
adc
xor
fst
ret
sbb
les
sahf
dec
pop
stos
iret
pop
fmuls
jno
push
adc
add
es
jl
fsubrs
add
fdivrs
rcrl
and
or
add
lea
mov
lret
aam
or
and
adc
sbb
hlt
push
rcr
lea
adc
inc
fimull
insl
mov
xlat
mov
cs
nop
pop
adc
sbb
and
dec
stc
dec
push
sub
xor
pop
and
iret
out
dec
or
push
dec
add
in
loopne
shrl
inc
daa
mov
xor
pop
pop
mov
sbb
or
pop
in
nop
sub
mov
push
dec
inc
sub
fldlg2
daa
or
add
sub
pop
xor
and
outsl
repz
and
ud2
add
sub
dec
lock
sbb
test
je
push
leave
adc
pop
inc
adc
jb
add
push
xchg
adc
fisubs
xor
cmp
fisubs
dec
add
add
and
mov
stos
cwtl
dec
adc
and
mov
dec
out
flds
aad
aad
mov
ret
lds
lock
mov
mov
mov
add
inc
pop
sub
push
or
adc
push
mov
sub
xor
incl
mov
mov
jno
cmpb
pop
sub
lods
add
lods
sub
int3
bound
daa
das
inc
rclb
and
add
pop
in
push
nop
addb
mov
adc
mov
out
push
sub
adc
push
sub
or
or
sbb
cmp
and
xchg
icebp
orb
cmp
insb
xchg
add
mov
jb
sub
push
pop
arpl
adc
inc
push
ret
nop
push
mov
add
cmovp
push
push
dec
dec
mov
and
push
in
sub
movb
cmpl
js
aam
jae
add
sbb
xchg
adc
xor
jg
dec
sbb
addb
and
dec
push
in
bound
test
pop
xor
int3
adc
test
lret
push
test
mov
add
push
lds
or
and
add
or
and
lock
cltd
pusha
test
pop
arpl
repnz
ret
pop
int3
jl
xchg
sbb
jno
push
adc
imul
and
push
xchg
mov
js
cmp
mov
pusha
and
xchg
xchg
xor
push
pop
mov
aaa
xchg
addr16
xchg
nop
out
pop
addr16
mov
xor
repnz
aaa
lods
in
dec
push
fs
or
pushf
jo
mov
in
iret
mov
sub
sahf
push
dec
pop
push
enter
or
add
fwait
call
pop
enter
popw
negb
adc
sbb
cmpl
insb
add
aas
lock
dec
mov
cmp
inc
aam
sub
add
insb
cmp
cld
inc
jne
popa
fstl
hlt
data16
jmp
dec
mov
sub
sub
inc
sbb
add
fs
add
sti
mov
mov
push
lahf
mov
imul
xor
jbe
in
sub
shll
add
or
and
or
xchg
jg
movsb
arpl
vpshaw
int3
add
and
push
add
sbbb
inc
or
ljmp
sbb
adc
aas
cmpsb
sub
je
or
rol
pusha
and
negl
and
jb
out
cmp
add
xchg
sbb
cmp
lret
bound
push
jb
inc
xchg
les
shll
add
scas
pop
in
sub
shll
stos
sbb
add
add
sub
lods
add
sbb
lods
fiaddl
setl
shlb
sub
mov
adc
loopne
lea
xor
xor
adc
sbb
push
in
arpl
mov
and
cs
roll
adc
and
inc
xor
mov
enter
lock
in
leave
add
add
jge
add
adc
jmp
mov
jmp
mov
dec
lea
xor
inc
and
test
mov
add
movsl
pop
or
cmp
testl
hlt
push
mov
jecxz
and
sub
sbb
or
mov
aad
adc
popf
je
dec
dec
cmp
push
aam
add
daa
ljmp
add
inc
dec
or
popa
fbld
rcll
lock
pop
jmp
adc
adc
cmpb
mov
xor
inc
mov
leave
pop
cmp
sub
js
ss
jo
aaa
jno
lret
jl
and
or
movb
ja
jnp
push
sub
xchg
xlat
bound
inc
xlat
pop
add
inc
sub
jno
or
lret
mov
add
cmpl
fs
lahf
jbe
xor
xchg
sbb
inc
in
xchg
add
ret
dec
dec
pop
mov
push
or
cmp
mov
orb
dec
mov
dec
jne
add
sub
fcmovnb
dec
pop
stos
in
push
aaa
int
in
out
cmp
push
ret
std
sbb
inc
enter
xchg
xchg
lods
and
lods
arpl
push
xchg
daa
pop
dec
test
nop
lock
lock
inc
inc
jp
dec
test
test
inc
rcll
push
mov
or
inc
inc
pop
push
pop
test
or
in
cmp
lret
jne
or
outsl
aas
aam
add
and
add
sub
pop
inc
mov
rolb
add
mov
pop
xchg
mov
les
adc
mov
aas
or
mov
adc
test
fwait
and
xor
xchg
adc
cmp
dec
and
dec
nop
adc
ds
xchg
mov
pop
inc
pop
and
pop
sahf
pop
inc
pop
adc
inc
adc
ret
inc
rcl
cmp
pop
outsl
and
inc
or
js
orb
out
add
bound
inc
repnz
adc
push
sbb
insb
les
jb
andb
inc
xor
cmpsl
lea
mov
jns
shrl
addr16
clc
pop
imul
sbb
cmpsb
add
lret
imul
imull
test
adc
sbb
jmp
xor
or
xchg
add
aas
xor
mov
cmp
and
and
daa
mov
cmpsl
mov
bound
inc
or
cmpsl
sub
add
bound
out
or
or
sub
add
gs
ret
inc
dec
pushl
or
add
or
jo
dec
jp
add
and
mov
xor
cmp
or
shll
in
cmp
fs
inc
inc
adc
add
dec
repz
xor
adc
mov
rcll
push
pop
xor
or
fdivs
pop
rolb
cmp
inc
xchg
pop
sahf
and
xchg
outsb
fadds
stc
test
adc
sbb
andb
or
or
sub
insb
mov
rol
jno
sbb
mov
lods
cmp
cmp
aaa
inc
xchg
andb
js
inc
fdivrl
adc
ljmp
add
push
xchg
fistpl
iret
pop
push
fsubrs
out
int
inc
or
adc
xor
inc
pop
insb
or
push
or
or
xchg
inc
mov
rclb
dec
stos
sub
add
cmova
sub
xchg
fbld
imul
xor
adc
cmpsl
dec
mov
push
sub
xor
test
sbb
or
pop
dec
mov
xchg
aam
sbb
imul
sahf
push
enter
xor
mov
mov
dec
iret
add
jns
add
pop
negl
or
sbb
sbb
and
mov
addr16
sbb
sbb
sub
in
sbb
sbb
pop
pop
mov
inc
adcl
jg
adc
xor
jg
sbb
add
inc
ljmp
jnp
sbb
iret
and
adc
and
and
sub
insb
iret
and
push
inc
pushf
mov
jg
cwtl
inc
fsubrl
add
dec
and
and
sbb
pop
inc
faddl
aam
nop
dec
lods
and
test
mov
and
jns
rcll
push
inc
mov
mov
sbbb
or
inc
xor
xor
dec
lahf
in
enter
pop
dec
pop
push
mov
push
jno
jl
outsb
test
test
movsb
inc
sbb
aam
popa
inc
and
out
adc
nop
jne
test
push
inc
dec
jne
stos
nop
dec
cmp
pop
or
mov
pop
aaa
adc
push
popl
add
adc
cwtl
ljmp
push
pop
or
push
xlat
jae
inc
repnz
clc
adc
fs
mov
push
push
push
pop
xchg
cmp
loopne
pop
es
call
sbb
jmp
mov
les
and
stos
inc
test
or
loope
pusha
mov
xchg
lock
test
push
call
push
sbb
mov
push
inc
jecxz
mov
push
xchg
adc
nop
or
mov
and
adc
aaa
pop
add
cs
jge
sbb
aad
inc
fcoms
jns
ss
push
add
sbb
add
sub
dec
inc
xchg
or
cwtl
push
lods
push
or
xchg
pop
leave
mov
or
scas
or
push
dec
or
add
xchg
adc
or
add
cmpb
lods
data16
test
sub
dec
mov
xor
push
test
and
adc
lahf
mov
xchg
mov
fs
nop
mov
add
xlat
gs
add
xchg
xchg
psraw
xchg
shll
xchg
mov
push
out
add
push
add
and
icebp
mov
fisttpl
adc
inc
mov
or
dec
push
dec
mov
pop
fs
stos
adc
faddl
add
enter
and
jns
pop
sbbb
xchg
or
pop
or
jae
into
pop
xor
xchg
out
jl
ja
adc
adc
inc
sub
ljmp
popa
push
in
and
js
cli
sub
sub
xchg
inc
repnz
aaa
xor
xlat
pushf
rorl
adc
in
dec
mov
loope
dec
jbe
ret
inc
bound
xchg
arpl
testb
pusha
stos
lds
or
mov
cwtl
and
add
adc
dec
dec
jb
notl
xchg
xchg
pushf
adcb
int
sub
dec
xor
or
adc
enter
and
xchg
lock
inc
xchg
orps
adc
adcb
outsl
lahf
pushf
in
icebp
lahf
or
mov
nop
pop
aaa
xchg
call
in
mov
pop
icebp
adc
sbb
push
jb
inc
neg
and
xlat
mov
jno
mov
push
outsl
pusha
fs
test
bound
test
adc
pop
movl
xor
gs
test
pop
aas
stos
push
or
data16
pop
mov
out
in
inc
lds
push
mov
cmpsl
fwait
cmpsb
pop
mov
push
es
adc
xchg
add
subl
das
inc
push
out
push
mov
mov
daa
andb
push
shrb
mov
adc
adcb
sbb
lea
cmc
fsubrs
pop
sub
inc
adc
pop
in
pop
cmp
push
nop
inc
cmp
push
inc
or
adc
push
sub
or
sub
mov
bound
fcoml
sbb
push
scas
fdivs
dec
arpl
in
sar
rol
push
subl
push
cmp
int3
int3
push
cmp
lret
pusha
enter
push
in
jmp
mulb
lahf
jo
nop
mov
push
cmp
inc
lock
push
xor
and
leave
cmp
sbb
outsb
js
xchg
xchg
pop
in
and
fisubl
sbb
insl
in
fdivrs
nop
and
xchg
cmpsl
sub
xor
pusha
mov
mov
or
leave
mov
leave
aam
scas
ret
mov
cmp
pushf
mov
stc
enter
repnz
sub
dec
mov
adc
mov
mov
xor
inc
jb
fidivl
xchg
xor
mov
orb
xorl
movsb
movsb
adc
and
outsb
cmpl
fwait
rcrb
push
sahf
cltd
add
dec
push
xchg
ret
inc
and
in
push
insl
fbstp
mov
pushf
push
cmp
cwtl
cwtl
xor
mov
fsts
xchg
mov
add
ficomps
or
or
mov
daa
jmp
dec
and
xor
leave
and
and
aad
ds
pop
cmp
mov
inc
cmp
cmp
stc
xor
jb
sub
in
repnz
arpl
or
push
adc
pushf
inc
jne
sbb
lds
inc
sahf
mov
add
push
push
imul
ret
iret
inc
mov
jecxz
iret
push
dec
pushf
jge
test
outsb
enter
add
sbbb
or
cmp
dec
test
fsts
push
sbbb
xor
push
call
dec
pop
in
sbb
cmp
and
xor
pusha
jns
mov
test
inc
sub
mov
mov
adc
loopne
mov
jo
pop
and
jmp
add
int
adc
xchg
xchg
fwait
or
nop
nop
pop
pop
or
xchg
push
dec
add
push
test
pushf
fmull
sbb
mov
inc
aaa
push
shrl
xor
dec
add
mov
ficompl
pop
les
sbb
dec
pop
fsubrs
jae
inc
sub
das
iret
scas
in
cmp
push
nop
and
push
or
dec
imul
fs
scas
jle
scas
adc
mov
sub
je
test
pusha
je
push
xchg
int
cwtl
dec
popf
pop
mov
repnz
sub
and
addl
mov
xchg
stos
cli
pop
leave
fsubrs
add
repz
sbb
xchg
xchg
and
and
add
cmp
cmp
xor
pop
mov
leave
jmp
and
mov
mov
insl
pop
xor
addr16
and
loop
loopne
and
std
xor
ja
in
pushf
or
mov
rcrl
xor
add
xlat
add
and
xlat
xchg
mov
adc
shlb
mov
ja
dec
lcall
mov
ja
inc
sbb
inc
pusha
iret
and
xchg
sbb
test
jo
add
hlt
test
ret
push
loop
pusha
nop
bound
lcall
nop
xorb
rep
popa
mov
mov
inc
jmp
push
xchg
inc
or
and
mull
arpl
and
push
inc
adc
dec
jne
jb
push
ret
xor
pusha
add
add
adc
sub
add
ret
add
addr16
or
addr16
pop
cmp
enter
fsubrl
imul
cld
xchg
push
mov
push
push
mov
lret
mov
inc
insb
dec
or
push
stos
aam
mov
pushf
jns
lahf
pop
jno
mov
insl
out
fs
insl
xor
cmp
dec
sahf
dec
pop
bound
mov
enter
insb
in
mov
xor
ud0
xchg
mov
notl
and
test
pop
dec
cs
in
or
je
ret
push
mov
or
adc
hlt
xchg
or
mov
outsb
dec
popa
sub
xchg
add
mov
sub
cmp
adc
pushf
inc
dec
cmp
repnz
push
xchg
in
dec
sbb
repz
mov
cs
shrl
or
stos
xor
mov
cmpsl
dec
fisttpl
sarl
cmp
xor
outsb
sub
pop
push
pop
push
push
rcrl
xchg
mov
cmp
enter
push
sarb
mov
and
enter
sbb
repnz
push
xchg
pop
push
xor
push
mov
or
push
dec
movsl
mov
jle
mov
jne
ret
mov
je
popa
rclb
sbb
test
loop
adc
push
in
jno
cmp
xorb
jecxz
xchg
fldcw
cwtl
or
xchg
test
push
jo
cmp
mov
dec
mov
outsb
cmp
cmp
jg
pop
xor
dec
pop
adc
pop
out
pop
inc
dec
sbb
push
lea
and
addb
cmpsl
movsb
popf
sbb
adc
inc
pop
lea
dec
cmp
inc
mov
xchg
addr16
mov
sti
enter
dec
pop
enter
pop
mov
sbb
add
mov
rorb
push
popa
pop
add
add
push
jae
and
cmp
xor
loopne
cmp
sbb
or
sbb
loopne
fcomp
jg
pop
leave
dec
out
xor
pop
xor
cmpsb
xchg
xor
cmp
mov
ljmp
push
mov
jae
cwtl
xor
nop
or
scas
push
xchg
imul
test
jnp
mov
push
and
outsl
push
loopne
repnz
xchg
mov
pop
mov
push
inc
fst
xor
sbb
sbb
mov
lock
shll
cwtl
xchg
in
je
addr16
push
dec
je
mov
cwtl
xchg
nop
out
nop
pop
push
je
and
and
mov
out
mov
adc
fsubr
jle
lahf
dec
pop
jo
jge
mov
jb
mov
loop
xchg
test
adc
cmp
in
mov
in
mov
xchg
mov
or
sbb
xorb
pop
xchg
fdivl
repz
rolb
jne
mov
add
cltd
inc
rol
xlat
addb
or
rorl
sub
cmp
mov
mov
in
mov
or
and
sub
jmp
add
push
and
cmp
test
inc
inc
mov
js
outsl
adc
inc
sub
ret
add
je
inc
flds
aas
mov
inc
pop
ret
rorb
or
ja,pt
insb
adc
shll
test
mov
scas
and
inc
cwtl
nop
iret
lods
mov
xor
mov
ficoms
pop
mov
lea
lcall
pusha
mov
pusha
cmp
jmp
jb
dec
xor
lds
out
aam
pop
fadds
flds
jo
nop
xchg
out
pop
sbb
pop
cmp
test
in
addr16
push
inc
es
push
push
jb
inc
repnz
cwtl
dec
enter
dec
movb
dec
sbb
orl
xchg
inc
jno
sbb
cmp
aaa
test
jmp
pushf
les
arpl
pushf
enter
enter
stos
in
or
inc
ljmp
loopne
xchg
mov
xchg
mov
add
lods
mov
and
push
xchg
add
mov
mov
cmp
or
orl
adc
pop
mov
mov
inc
scas
std
subb
test
push
cmp
add
popf
or
push
xchg
mov
mov
or
push
add
add
aam
or
and
addl
add
or
lods
and
test
and
add
mov
lods
mov
dec
nop
adc
add
jle
mov
add
mov
add
gs
hlt
cltd
or
mov
add
nop
inc
out
addl
or
cmp
cmp
pop
ret
mov
jb
in
sub
xlat
mov
inc
xchg
outsl
or
addb
shl
jne
add
mov
popa
aas
inc
or
mov
sub
adc
xor
jb
insb
xor
js
add
pop
add
in
add
in
test
mov
mov
add
dec
daa
add
out
and
and
pusha
sbb
sbb
pop
pop
sub
or
cmpl
push
jae
inc
xor
sbbb
or
xor
mov
daa
adc
mov
sbb
push
nop
push
fsubl
mov
and
loopne
inc
dec
pop
jae
stos
cmpl
and
or
pop
fs
fcoml
fdivrl
and
jge
test
jge
adcl
fcompl
cmp
cltd
push
push
aas
and
xorb
pop
sub
mov
ret
pop
clc
add
pop
adc
mov
sarl
adc
leave
adc
les
icebp
addr16
sub
pop
mov
adc
fsubrs
or
push
jmp
mov
adc
aaa
jns
mov
mov
and
and
adc
and
mov
loope
leave
sub
add
shrl
or
dec
fstl
sbb
and
xor
insb
shll
mov
push
mov
ret
or
or
and
push
rolb
scas
fimull
inc
jecxz
pop
mov
ret
push
in
ret
mov
lahf
or
mov
adc
movsb
fsts
stos
adc
mov
xor
lea
bound
imul
and
add
xor
lea
mov
dec
aaa
test
jo
pop
dec
inc
stos
pop
pop
hlt
and
in
push
sub
shll
shl
xor
or
aas
cwtl
xchg
bound
add
mov
ss
fwait
iret
icebp
cmp
or
ret
push
pop
mov
testl
movsb
xchg
or
das
rcll
mov
xchg
adc
sbb
xchg
inc
adc
cwtl
adc
pop
xor
and
mov
adc
cmp
and
int
jmp
popa
mov
jl
mov
out
imul
xchg
ljmp
dec
js
enter
inc
adc
sahf
push
in
call
push
sbb
add
iret
xchg
push
adcb
dec
xor
dec
dec
ficoms
les
sub
xor
adc
mov
inc
sbb
testb
and
aam
or
dec
fwait
cmp
fcomp
sbb
pop
fstl
push
into
mov
sub
or
or
and
xor
push
jne
int
mov
add
dec
fs
dec
lret
inc
jecxz
push
adc
pop
and
adc
push
std
inc
pop
mov
lods
in
rorl
dec
shll
add
add
dec
or
mov
lods
sub
push
inc
push
xor
insb
cmpsb
rorb
xor
inc
mov
sbb
push
fdivs
xor
lea
inc
xchg
testl
adc
mov
cltd
sub
in
in
addl
sbb
pop
mov
and
adc
pop
mov
dec
leave
mov
pop
xchg
pop
push
cltd
cwtl
add
aam
popf
imul
sbb
loopne
or
test
stc
mov
add
pop
jmp
or
stc
or
pop
xor
enter
adc
xchg
dec
fistl
inc
or
pop
adc
test
mov
sbb
daa
popa
or
add
mov
in
sbb
xchg
aaa
nop
dec
add
arpl
or
call
data16
and
repnz
es
adc
and
xor
imul
add
ret
arpl
and
cmpsb
jnp
fcomp
jl
fcoml
cli
inc
scas
mov
fwait
andl
mov
pushf
cmp
xchg
sub
fs
enter
sbb
add
cmpsl
lods
daa
dec
je
je
push
xor
dec
nop
imul
stos
addr16
lret
inc
aaa
addr16
fisttps
xor
adc
shl
xor
mov
mov
fs
cmp
push
sbb
push
rorb
add
rcl
inc
jne
test
xchg
ret
mov
in
xchg
dec
fisubrl
pop
push
dec
lcall
mov
insl
add
or
adc
scas
and
sub
out
push
push
sbb
cvtpi2ps
sbb
insb
fstps
enter
ja
add
push
aaa
cmp
push
fmuls
add
xlat
cmp
cmpb
arpl
mov
adc
xor
pop
pop
cmpsl
fs
pop
js
or
test
in
sbb
xor
fstl
sti
mov
push
sbbl
lock
fwait
mov
push
mov
sahf
in
mov
xchg
or
xor
pop
sbb
arpl
lret
ret
xchg
jmp
jo
sub
jp
push
jmp
dec
popf
or
xchg
and
pop
xchg
and
jb
call
cmpsl
or
xor
shll
add
arpl
cwtl
push
mov
test
adc
mov
ret
mov
xchg
mov
xchg
xchg
adc
inc
dec
arpl
inc
push
mov
fists
adcb
push
add
fcoml
popf
jbe
mov
xor
sub
sbb
pop
insb
and
add
adc
jp
mov
roll
inc
mov
dec
jmp
inc
popa
or
les
inc
and
cmpsl
sbb
adc
dec
call
push
sbb
stc
call
cmpsl
popa
sub
outsb
outsl
sbb
pop
adc
stc
push
movsb
sbb
or
lds
push
or
cld
xchg
les
pop
and
inc
imul
push
loop
notb
jae
or
cmp
test
ret
push
fldt
cltd
sub
sub
repnz
imul
inc
fisubs
sub
test
sub
cltd
dec
push
xchg
xchg
addb
adc
cs
test
adc
inc
cmp
or
in
inc
fiaddl
popf
repz
pop
pop
cwtl
inc
in
or
cmpl
sbb
inc
je
cmp
orb
cmpsb
sub
addl
test
jle
hlt
cwtl
dec
xchg
cmp
add
mov
outsl
and
dec
jge
mov
push
and
cltd
push
dec
xchg
cmp
fstpl
movsb
xchg
xchg
rclb
jns
leave
call
jb
jb
lcall
mov
in
mov
cmpb
call
mov
dec
lahf
loopne
push
pop
mov
in
jmp
lcall
xor
add
adc
nop
dec
jbe
imull
inc
adc
icebp
inc
add
and
xchg
mov
add
adc
jbe
jo
adc
jae
xor
test
hlt
add
loopne
lock
xor
dec
mov
or
inc
enter
out
add
push
or
cmpb
pushf
inc
mov
lods
dec
push
and
add
repnz
jg
popf
clc
xor
push
mov
dec
or
rorb
add
or
rorb
nop
add
cltd
rorb
dec
ja
mov
inc
lahf
push
inc
test
enter
sarb
or
xchg
push
int
leave
xchg
cmp
mov
lods
xchg
pop
lahf
mov
xchg
ret
fistps
rep
aam
xor
jmp
cmp
pop
dec
call
test
or
sbb
dec
shlb
push
or
and
push
insb
aas
add
dec
shl
mov
data16
fiadds
mov
insb
das
aam
aas
shlb
push
pusha
test
call
adc
push
movsl
inc
sbb
push
or
cwtl
adc
push
mov
pop
dec
test
sbb
add
sbb
repnz
lret
xor
je
ret
in
xchg
xor
sub
call
leave
and
pop
adc
repz
pop
sahf
xchg
testl
aad
pop
shlb
dec
leave
loopne
xchg
imul
mov
orb
addb
sbbb
xor
sbbb
adcl
dec
and
pop
ret
add
fcomip
mov
add
popl
in
or
pop
sbb
dec
adc
mov
in
enter
or
enter
xchg
shll
or
aaa
add
stos
and
push
int
lret
enter
pop
cmpsl
mov
lahf
sbb
jns
or
and
int
les
fsubl
stos
ss
push
test
orl
lea
xor
rcrb
ja
or
dec
or
fidivrs
jl
hlt
adc
outsl
mov
ds
js
adc
orl
xorl
xchg
orl
inc
and
or
sbb
cmc
xor
mov
test
xor
stos
sub
adc
ss
adc
add
ret
adc
cmpsb
inc
cmp
or
bound
outsb
and
les
pop
nop
inc
mov
in
mov
sbb
dec
test
adc
jns
sbb
mov
and
inc
pushf
sub
mov
push
pushf
in
mov
pusha
outsb
pop
popw
repnz
cmc
or
je
pusha
push
jne
cmp
outsl
incl
mov
test
push
nop
xchg
dec
sbb
lods
mov
cltd
dec
inc
mov
lods
xchg
ret
xchg
test
inc
push
mov
push
les
fwait
mov
xchg
sub
lret
or
mov
and
xor
sub
outsl
sbb
leave
xchg
mov
or
cs
cmp
jbe
sbb
pop
inc
insl
sub
sub
lods
int
jnp
je
pushf
mov
push
adc
sub
or
and
pusha
push
inc
cmp
jmp
mov
adc
cmp
add
mov
xchg
adcb
push
mov
fs
and
fsubs
xor
jno
pop
or
mov
lahf
in
push
dec
je
add
cmp
xor
mov
sbb
and
mov
inc
xor
and
xor
daa
add
es
fwait
pop
push
lahf
pop
das
push
add
dec
inc
mov
jno
dec
inc
outsb
mov
pop
fimull
js
icebp
sub
outsl
sub
in
jno
je
push
fsubrl
or
adc
sbb
rclb
mov
dec
je
add
es
push
fldt
and
sbbb
mov
aam
add
add
imul
aas
popf
push
hlt
and
xchg
add
outsl
inc
in
idivb
add
rorb
leave
and
xchg
stos
sub
call
add
inc
fistpll
dec
push
adc
outsl
pusha
and
sub
or
mov
int3
int3
xchg
aaa
into
add
mov
inc
mov
imul
pop
push
roll
mov
adc
dec
loope
pop
loopne
inc
mov
sub
adc
dec
jge
sub
jns
gs
sbb
and
cmpb
fists
and
jmp
cmp
arpl
adc
sub
xor
mov
inc
mov
add
and
in
mov
sbbb
adc
inc
es
pop
lahf
inc
cmpsl
xor
lds
mov
jne
push
popa
and
in
mov
xor
push
adc
add
dec
xchg
cmp
push
nop
jne
aas
mov
push
and
and
sbbb
movsl
and
scas
loopne
gs
cs
inc
gs
mov
jno
pop
add
addb
push
jmp
rorb
out
jne
loopne
or
loop
aam
dec
mov
dec
fcomp
fdivrs
rclb
call
shl
mov
lahf
jne
insb
lea
or
dec
sbb
cwtl
or
mov
mov
popa
call
outsl
or
push
jge
push
mov
in
mov
aad
imul
jnp
into
push
enter
mov
cld
add
cwtl
jl
dec
cmpsl
test
lea
pop
and
inc
cmp
jg
jne
or
add
stos
sbb
and
popa
jmp
in
in
jne
pop
sbb
inc
xchg
add
ret
sbb
add
add
adc
loop
adcl
or
or
and
and
sub
mov
adc
stos
push
sub
shrl
xchg
divl
and
pushf
mov
js
repz
ds
loopne
mov
push
ret
inc
push
and
or
adc
adc
stos
inc
test
add
and
sub
lea
in
jl
inc
or
sbb
or
or
fwait
or
jns
cs
jne
push
inc
cmpl
and
cmc
outsl
sub
cmpsl
imul
sar
outsl
dec
push
insb
mov
mov
inc
mov
or
cmp
loope
scas
ss
and
mov
sub
daa
es
or
mov
cmp
scas
add
pop
jae
and
dec
les
add
nop
jp
pushf
nop
jl
outsb
push
in
rorb
mov
sbbl
jns
loopne
mov
sub
jl
pusha
sbbb
push
arpl
pusha
pop
in
arpl
addr16
stos
leave
popf
mov
sub
adc
push
in
dec
lods
test
push
rclb
dec
jnp
add
and
pop
or
mov
sub
hlt
push
pusha
or
cmp
je
test
loope
cmp
test
mov
push
cmp
xor
add
hlt
add
add
shr
pushf
xchg
out
sar
clc
outsb
mov
out
mov
or
sbb
cmp
adcb
push
je
outsl
pop
mov
cmp
and
lock
mov
adc
push
insb
nop
mov
idivl
mov
add
or
rol
mov
cltd
push
stos
iret
jp
add
mov
daa
lods
mov
xor
mov
fs
or
and
add
ret
push
mov
xlat
lcall
push
xchg
or
pop
add
xor
sbb
mov
inc
sub
sub
pop
fs
mov
and
jge
mov
or
dec
adcb
sahf
mov
adc
xchg
adcb
cmp
leave
jne
adc
cltd
inc
pop
pushf
ror
leave
in
and
enter
xchg
ret
nop
xchg
mov
or
mov
xchg
dec
xor
adc
sub
cmp
xchg
xor
add
jno
mov
es
cmp
add
add
loope
popa
dec
fs
push
push
ret
pop
push
movsb
add
cmp
stos
add
pop
inc
push
sbb
outsb
or
add
and
idivl
jb
in
ret
sbb
push
and
in
movsb
pop
ret
mov
mov
sub
jne
adc
push
ret
faddl
inc
out
pop
and
movsl
pop
lahf
xor
shlb
pop
scas
orl
loopne
mov
cmpsb
addl
sahf
push
ror
push
pop
daa
shlb
sti
xchg
sbb
adc
push
or
rolb
add
sbb
sub
loopne
and
add
xorl
addr16
movsl
inc
sbbl
les
outsl
in
dec
push
jb
push
inc
pop
mov
or
add
cmp
xor
or
inc
xchg
dec
enter
fsub
sbb
dec
sbb
mov
xlat
push
ret
cmp
sub
xor
cmp
pop
mov
sbb
insl
and
push
loopne
icebp
xorb
arpl
outsb
or
pop
and
mov
mov
enter
inc
cmpsb
gs
in
xor
test
xchg
pusha
adc
enter
sub
dec
pop
sbb
jns
dec
jmp
or
adc
stos
sbb
enter
orb
push
inc
inc
jnp
lret
fsubs
js
jnp
mov
sbb
and
and
inc
dec
xor
dec
and
pop
pop
mov
sbb
leave
sbb
ret
ret
insb
lret
jmp
and
push
mov
aam
pop
and
mov
les
or
das
inc
add
adc
mov
and
inc
mov
ret
dec
sarl
test
insb
int3
jne
pop
adc
sbb
ret
mov
ret
les
int
mov
adc
inc
xchg
xlat
sub
or
js
movaps
sbb
or
test
inc
sbb
xchg
insb
loop
adc
or
cmpsb
adc
rorb
ljmp
add
mov
out
pop
sbbb
push
dec
iret
or
in
adc
and
xchg
mov
mov
jnp
aam
mov
cmp
mov
lahf
cmp
push
dec
rcll
dec
sbb
xor
js
sti
les
incl
shlb
cmp
jne
insl
inc
push
sbb
fdiv
add
cmp
cmp
sbb
or
inc
add
mov
test
pop
mov
nop
js
lock
adc
xor
stos
in
and
xchg
cmp
sub
and
das
lods
aas
je
data16
add
pop
pop
iret
rcl
inc
into
outsl
or
negl
mov
push
ja
inc
orl
lcall
test
add
push
or
aaa
fdivrl
dec
xor
mov
or
aam
push
add
and
rcl
mov
and
int3
mov
pop
enter
mov
les
pushf
push
shl
pop
repnz
jl
and
mov
jl
test
xor
or
nop
pop
jb
lods
mov
in
push
test
test
xchg
cltd
movsb
movsb
orl
lea
stos
mov
push
sbb
subl
xchg
adcl
mov
lea
or
scas
loop
addl
cmpb
and
cmp
cmovs
js
lahf
or
adc
xlat
test
and
jo
dec
add
sbb
cltd
sbb
insb
cmp
push
push
jns
fs
push
adc
in
nop
orl
pusha
jo
addr16
cs
pop
mov
rcrb
add
xor
mov
roll
shlb
arpl
or
push
cwtl
gs
push
aam
xchg
adcb
sub
adc
inc
sub
sub
out
mov
rorb
or
rcr
dec
or
pop
push
int
adc
mov
inc
pop
leave
xchg
dec
xor
xor
xor
sub
out
lods
test
jns
imul
ss
inc
aam
out
jb
bound
aaa
sti
and
push
aaa
lret
imul
dec
bound
inc
cltd
sbb
xor
leave
add
xor
or
inc
xor
aaa
xor
add
nop
cmp
cmp
sub
push
addr16
orb
sub
xchg
leave
add
and
xor
push
xor
xor
xchg
push
cli
and
jne
mov
enter
fmull
mov
add
adc
mov
xorb
sti
pop
add
int3
pop
xchg
pop
jne
push
xchg
js
add
fwait
or
lret
add
mov
xor
pop
ret
aas
cmpb
mov
icebp
cmpl
in
add
lret
pop
pop
dec
add
mov
aam
push
cmpsl
or
pop
jp
sub
and
pop
test
mov
in
mov
imul
rcll
adc
xchg
pushf
inc
sbb
les
add
loop
cmpsl
pop
cmp
jmp
mov
mov
lcall
aam
popa
lds
clc
mov
pop
push
jo
add
rcrb
xchg
pop
pop
call
push
je
pop
jo
xorb
movsl
xchg
mov
adc
mov
cmp
mov
jmp
out
repz
and
je
pop
add
or
jae
or
or
ja
stc
mov
out
sti
aad
xlat
add
xchg
add
adc
cmp
mov
adc
xchg
ds
scas
adc
sub
rcl
mov
xchg
sub
test
or
nop
push
mov
js
int3
and
std
leave
lret
data16
push
inc
dec
filds
mov
ret
cmp
dec
shll
jp
mov
shl
adc
lods
imul
mov
mov
add
imul
mov
rcl
cmp
pop
xor
ss
pushf
dec
dec
and
loopne
adc
inc
jb
mov
leave
mov
jo
xchg
pushf
dec
dec
cmp
in
cmp
int3
daa
xchg
adc
inc
insb
dec
add
mov
inc
dec
and
call
add
les
lret
xor
andb
xor
xchg
shll
inc
and
insl
add
in
pop
pop
mov
cmp
adc
arpl
cmp
and
shrb
fisttps
adc
sbb
push
lods
fs
inc
loop
sarb
nop
mov
jbe
sub
or
jo
je
rol
sub
movsb
jo
sub
sbb
loop
lods
cmpsb
xchg
pop
in
pop
shrl
call
imul
icebp
pop
dec
aad
or
jle
std
in
add
jp
test
stos
and
stos
add
inc
lods
imul
enter
loope
xchg
push
or
fisubrs
js
jmp
sbb
xor
inc
adc
loop
jmp
and
mov
sub
adc
loopne
sbb
loop
add
stos
or
sub
jmp
dec
or
fnstsw
mov
or
imul
ret
mov
cmpsl
and
rcl
pop
sbb
shrb
and
rolb
mov
loopne
fldt
adc
xor
popa
xchg
aaa
mov
xchg
mov
fimuls
sbb
into
jge
cmc
rorb
subb
jmp
mov
add
add
push
ret
and
outsl
adc
imul
mov
ret
adc
adc
out
mov
and
ljmp
lret
movsl
jecxz
fldenv
sub
push
fcmovnb
xchg
jecxz
addb
repz
sub
mov
adcb
sbb
sbb
push
cld
outsb
insb
in
test
mov
pop
xor
push
cmc
sub
push
mov
xchg
sbb
in
inc
xor
add
or
leave
shlb
adc
xor
xchg
mov
add
je
push
fcom
leave
jae
or
les
xor
sub
xor
ss
orb
sbb
filds
push
add
or
xchg
jmp
xchg
lds
jbe
out
iret
and
out
xor
pop
ret
xchg
xor
icebp
fwait
sbb
pop
ret
adc
ja
add
pop
push
js
sub
or
jns
cld
movsb
out
out
fildll
js
add
push
or
mov
adc
inc
sbb
push
and
or
dec
aam
cmpl
cwtl
jno
mov
pslld
mov
repnz
add
inc
mov
icebp
push
mov
ficomps
cmp
sbb
dec
inc
sahf
dec
or
push
pushf
adc
and
aas
adc
outsl
push
and
mov
add
dec
lds
das
pusha
jg
or
sbb
fucompp
gs
pop
aaa
cwtl
mov
repz
rclb
cmp
fmuls
and
add
gs
push
cmc
sbb
xlat
jne
pop
and
insl
xchg
push
or
je
mov
aas
ret
mov
pop
push
inc
mov
out
jge
push
enter
loop
in
push
xchg
out
pop
fidivs
add
pushf
mov
movsb
out
mov
sub
imul
sahf
mov
mov
repnz
adc
xlat
mov
sub
lock
and
dec
jo
and
aam
cmp
leave
test
push
cmc
jo
dec
leave
test
sbb
and
inc
inc
mulb
and
nop
mov
xchg
pushf
nop
push
add
and
enter
dec
je
pop
enter
faddl
and
clc
inc
xor
test
xor
leave
test
stc
sub
dec
dec
leave
test
mov
dec
leave
test
add
jb
inc
jb
cli
cmp
and
mov
enter
or
xor
pop
enter
mov
aam
sti
cld
nop
test
inc
test
and
dec
es
pop
std
mov
cs
cmp
xchg
or
push
leave
or
incl
fs
movsb
in
cmpsb
in
int3
int3
je
inc
cmpsb
lock
jbe,pn
cmp
dec
sbb
inc
inc
cmpsb
in
inc
jo
lds
call
or
add
cltd
xchg
mov
enter
xchg
clc
and
push
add
mov
nop
inc
repnz
sbb
push
add
test
mov
enter
sbb
xor
mov
sbb
in
insl
and
add
dec
movsb
fcomps
and
inc
dec
push
test
mov
jb
adc
addl
cmpsl
in
mov
or
or
adc
cmp
dec
cs
pusha
xchg
jb
cs
or
cmp
mov
popf
xchg
fsubs
or
pop
jb
xchg
loopne
cmp
pop
adc
pusha
or
xchg
dec
leave
pushf
fmull
adc
jmp
cmp
dec
dec
mov
arpl
push
inc
sbb
rcrb
or
cmp
ret
xor
cwtl
test
and
and
xor
jmp
imul
xor
adc
dec
inc
inc
leave
add
and
pusha
sub
push
and
push
inc
inc
push
push
inc
dec
push
push
add
cmp
es
adc
ret
push
cli
add
sbb
push
inc
dec
sub
inc
lods
frstor
imul
repnz
sbb
es
data16
pop
sub
mov
lods
sbb
cs
ds
gs
jae
lea
push
leave
int3
push
aas
and
jne
or
fmul
outsb
dec
or
lahf
xor
or
shrb
xlat
sbb
int
es
fisttps
push
push
nop
mov
sub
or
dec
pop
or
mov
dec
mov
inc
lock
bound
bound
mov
sub
pop
mov
popa
jnp
mov
dec
jnp
out
pop
sbb
int3
xchg
es
push
es
cs
imul
sub
das
adc
mov
dec
inc
sbb
pop
popa
dec
or
inc
jne
inc
out
inc
lea
xor
cmp
mov
sbb
js
jb
inc
push
xlat
xchg
or
sub
inc
shrl
adc
xchg
xchg
push
das
and
pop
inc
imul
out
sbb
or
rcrb
and
add
or
xchg
push
or
mov
mov
add
add
pop
daa
and
outsl
imul
cmp
inc
or
dec
dec
shr
inc
popa
outsb
iret
insb
inc
cmpsb
sub
xchg
push
and
jb
scas
push
or
xchg
lods
in
adc
sub
mov
adc
cmpsb
pop
insl
test
cmove
in
push
xchg
gs
adc
test
jge
mov
inc
or
mov
dec
push
mov
stos
stos
out
mov
cmc
sub
jp
jb
mov
xchg
and
sbb
dec
ret
inc
outsb
imul
lahf
jg
sbb
dec
inc
xchg
xchg
adc
movsl
nop
mov
xchg
adc
or
push
ss
push
pop
jb
pop
sbb
xchg
push
inc
mov
dec
push
push
push
and
mov
scas
lods
inc
mov
xchg
mov
cmpsb
xchg
or
outsl
cs
mov
test
sub
lds
and
and
cmp
mov
adc
and
inc
out
sbb
popa
ret
and
dec
add
sbb
and
mov
or
xchg
inc
ds
add
loop
adc
incb
add
mov
or
jne
bound
addr16
daa
inc
sub
in
mov
mov
push
addl
testl
iret
daa
cmp
cmp
fs
or
xor
scas
sbb
push
das
mov
pushf
adc
fiaddl
imul
push
and
adc
mov
mull
or
or
adc
sub
add
or
jno
int3
sbb
data16
push
popf
gs
sub
out
push
mov
push
outsl
jo
inc
imul
negl
push
je
adc
mov
xchg
push
daa
push
pushf
add
enter
add
or
loop
adc
daa
and
jno
jae
inc
negl
xchg
sbb
ds
jne
or
dec
pop
xchg
add
inc
adcb
ja
inc
mov
mov
mov
aaa
je
outsl
loope
mov
bound
and
pop
sbb
or
iret
push
dec
mov
inc
adc
iret
lea
lods
add
inc
lods
bound
popa
push
inc
mov
sbb
sbb
cmp
bound
push
xchg
mov
pusha
mov
push
mov
sub
outsb
and
or
inc
cld
outsl
dec
ret
sbb
gs
add
mov
std
ret
inc
scas
les
daa
or
adcl
add
fisubrl
mov
mov
pusha
push
mov
add
fisubrs
addb
mov
imul
insb
jge
and
cmp
roll
lret
cmp
add
xchg
cmp
xor
add
lods
outsb
cmp
data16
mov
rol
push
adc
push
lds
pop
cmpsl
mov
or
xlat
and
mov
push
cmpsl
cltd
mov
adcl
and
inc
popf
dec
stos
and
into
ss
xlat
adcb
xchg
sub
test
push
mov
mov
test
stos
or
rorl
dec
mov
pop
pop
or
push
dec
std
jg
push
rol
push
dec
add
mov
out
addb
cmp
inc
jno
sti
fistps
sbb
and
push
dec
dec
inc
push
int3
xchg
out
outsl
popw
push
inc
push
push
dec
or
stos
add
int
sub
dec
or
stos
inc
aaa
push
inc
push
push
pop
fs
jecxz
push
pop
push
xor
or
sbb
pop
xchg
insl
popf
sbb
jae
adc
cmc
or
movsl
idivl
mov
push
pop
std
inc
es
inc
xchg
add
adc
cwtl
sub
mov
and
into
dec
mov
fisubl
add
mov
test
pop
mov
and
in
push
leave
add
dec
pop
mov
mov
sbb
inc
or
mov
daa
decl
adc
push
push
stos
jae
les
pop
push
out
inc
pop
adc
iret
sbb
arpl
add
lgs
pop
addl
pop
inc
sbb
lods
pop
scas
mov
add
test
push
mov
push
nop
pusha
mov
adcb
cs
sbb
mov
inc
imul
loope
imul
add
sbb
or
pop
or
add
test
pusha
xchg
dec
jg
popa
stos
add
fisttpl
jo
aaa
adc
jo,pn
cmp
mov
cmp
dec
jbe
push
inc
inc
or
int
and
push
repz
outsb
or
in
and
sbb
push
adc
inc
dec
push
dec
or
add
insb
add
dec
inc
add
inc
inc
adc
xchg
imul
les
ret
pop
icebp
daa
push
and
and
sbb
adc
jae
push
add
adc
and
in
pop
insb
je
jecxz
add
and
or
out
inc
jae
or
push
mov
pxor
mov
in
bound
add
adc
fldcw
loopne
popf
aaa
pop
jno
ds
sub
test
sbb
cmp
jne
addr16
or
hlt
jmp
add
orb
gs
mov
lsl
fs
test
nop
js
roll
dec
mov
orb
or
sbb
mov
nop
pop
mov
xor
sbb
or
enter
js
mov
fdivr
and
push
sbb
xor
xchg
pop
or
cmp
leave
test
xorb
add
and
and
and
jb
push
jb
mov
and
push
cld
and
dec
leave
les
inc
insb
mov
shlb
dec
leave
hlt
or
xor
push
jb
inc
dec
insb
mov
push
jb
test
pushf
nop
push
jb
and
inc
and
enter
movsb
shl
adc
dec
pop
and
dec
and
pop
xor
pop
xor
sub
push
inc
pushf
les
and
or
insb
pushf
les
es
mov
push
es
cmpsb
mov
clc
nop
inc
repnz
and
inc
daa
mov
cwtl
rclb
sub
in
sub
fs
mov
add
sub
cltd
xchg
or
push
jl
mov
sub
dec
cs
xchg
sub
jb
cs
fadds
sub
cmp
xchg
or
mov
test
inc
cmpsb
in
int3
lock
nop
inc
repnz
mov
mov
pushf
fcomps
lds
inc
jns
push
jb
fmull
das
xchg
dec
enter
nop
in
pop
enter
xor
jb
daa
pop
xor
and
dec
leave
test
fadds
xor
inc
jb
xor
pop
jb
push
jb
mov
xchg
pushf
nop
push
sub
pusha
xor
xchg
pop
enter
adc
dec
pop
adc
xor
cmpsb
pop
xor
repnz
cmpsb
xor
icebp
bound
lods
cmp
xor
pop
sbb
dec
sbb
test
test
add
bswap
ss
ds
push
push
dec
push
arpl
mov
je
or
pop
add
arpl
and
pop
pop
mov
mov
dec
inc
add
xor
jge
leave
dec
jecxz
bound
ja
imul
pop
imul
subb
push
fildl
xchg
daa
aam
add
or
jno
pop
adc
or
and
xor
mov
push
add
loop
add
or
and
inc
sbb
dec
push
les
mov
ret
dec
pop
mov
and
cmp
f2xm1
adc
ret
inc
pop
test
pop
jno
fsubr
stos
aas
push
push
jbe
push
xchg
jo
adc
xor
inc
jo
andl
inc
push
cmp
jns
outsb
sbb
mov
aas
inc
sub
jo
pop
jno
aaa
adc
pop
add
adc
and
inc
testl
and
adc
pop
mov
and
or
inc
mov
je
seta
mov
and
adc
rolb
jle
test
mov
sub
and
sbb
clc
orl
pusha
adc
sbb
ret
cmp
inc
cltd
xorb
add
je
roll
xlat
divl
inc
mov
or
mov
popa
mov
xor
rolb
das
sbb
xor
lods
add
mov
or
mov
inc
adc
ret
inc
pusha
inc
sbb
loop
push
das
xor
adc
xchg
jne
mov
data16
ret
add
aad
mov
lods
xchg
shl
and
mov
add
and
pop
adc
or
cmp
cmpsl
sbb
mov
xchg
pop
push
xor
loop,pn
adc
inc
pusha
inc
or
mov
pop
xorl
jg
xor
pop
mov
inc
lcall
adc
rolb
inc
lods
lea
adc
dec
lods
xchg
mov
sub
sub
jno
popl
push
loop,pn
or
push
pop
pop
inc
and
les
xor
pop
pop
add
inc
pop
xchg
out
dec
jg
mov
or
pop
xlat
aaa
adc
jo
mov
mov
sbb
aas
mov
daa
add
sbb
and
and
cmpsl
ret
inc
adcl
mov
gs
inc
bound
sbb
inc
xchg
pop
push
mov
adc
add
or
out
imul
and
and
jp
mov
push
call
adc
sub
mov
pop
add
mov
adc
lods
push
mov
sbb
inc
out
ds
mov
and
or
adc
lcall
out
bound
xor
sarl
nop
inc
xor
push
leave
fs
xor
orb
mov
xchg
lea
es
jno
and
pusha
xor
dec
inc
jo
xor
call
dec
or
fdivrl
and
sbb
push
aas
jae
adc
mov
jbe
sub
mov
cmp
jb
dec
and
jnp
pushf
cwtl
sbb
jg
pop
or
xor
aaa
sub
fsubrl
inc
xchg
push
adc
or
popa
sbb
push
and
imul
push
dec
and
enter
mov
sbb
lahf
mov
mov
sbb
aas
sub
and
aaa
test
sbb
add
shrl
inc
xor
mov
subb
test
mov
push
add
pop
adc
inc
loop
aas
and
xlat
push
cmpsl
aas
adc
xchg
inc
aas
aaa
mov
pop
adc
or
das
pusha
inc
xchg
test
push
xlat
decb
pop
and
ret
and
adc
jmp
add
xor
subb
adc
adc
and
outsl
lods
divl
cmpb
inc
das
cmp
sub
add
add
sub
or
in
dec
jb
inc
pop
push
bound
hlt
mov
insl
pop
mov
out
sub
dec
add
add
add
push
bound
popa
loopne
and
add
dec
test
test
and
sbb
arpl
adc
and
int3
movl
xor
nop
pop
repnz
inc
pop
inc
mov
cld
movaps
push
movsb
mov
cwtl
int3
gs
sub
fmull
inc
movl
pop
mov
rol
sbb
and
inc
inc
js
xchg
pop
mov
hlt
mov
dec
enter
inc
add
sub
fs
cs
insb
nop
das
fs
cs
adc
xchg
or
xor
pusha
cltd
xchg
or
push
leave
or
and
in
cmpsb
fs
subb
sbb
nop
and
and
mov
lods
aam
mov
dec
fs
es
dec
push
jl
fs
mov
fs
cld
and
xchg
or
dec
pop
nop
or
fs
push
leave
or
dec
dec
cmpsb
in
cmpsb
je
enter
inc
clc
lds
test
push
dec
js
in
dec
aam
dec
sub
and
and
jb
push
jb
test
push
jb
push
loopne
adc
bound
cmp
fs
cs
pusha
dec
cs
mov
mov
fcoms
jb
fadds
dec
leave
test
inc
sub
dec
leave
test
je
dec
leave
test
test
int3
int3
in
dec
hlt
and
push
and
and
outsb
and
test
sbb
test
inc
cltd
xchg
or
cmp
insb
or
jno
cltd
xchg
pushf
enter
enter
push
inc
nop
sub
mov
mov
mov
fcompl
test
cmp
or
cltd
xchg
or
mov
sbb
push
inc
jbe,pn
sbb
pop
in
cmpsb
in
lods
lods
xor
inc
cmpsb
loopne
push
in
pop
xor
inc
cmp
fs
cs
jo
cs
cwtl
cwtl
fs
cs
inc
shrl
and
adc
repnz
jb
insb
cmp
and
and
test
fmul
jmp
outsb
sbb
or
cmovo
sub
inc
jmp
adc
xchg
inc
push
push
and
xchg
fildl
das
pop
pop
movsb
mov
mov
add
mov
cs
fs
loopne
mov
push
mov
xor
nop
dec
shrb
jnp
verr
outsl
push
add
and
push
test
sub
mov
pop
inc
sub
gs
jbe
pop
sub
bound
cmp
pop
bound
cltd
insb
aaa
sub
inc
pop
push
xchg
mov
insl
and
insb
jmp
adc
pop
ja
lods
test
push
adc
or
rcrl
dec
out
xor
or
xchg
sub
fs
xor
mov
xchg
fwait
subl
push
ret
sbb
call
push
and
popf
xchg
dec
and
outsb
cmp
popf
arpl
mov
push
xor
aas
mov
aas
mov
add
or
cmpsl
jp
imul
sub
adc
push
adc
mov
and
xor
mov
ss
lahf
lahf
loopne
sub
loopne
xchg
cmp
dec
inc
dec
pop
inc
cmp
jo
sub
sub
fadds
outsb
je
push
sbb
jmp
mov
xchg
add
jae
pusha
and
push
addps
or
dec
mov
cmp
aad
or
pop
pop
mov
or
and
pusha
push
pop
jno
mov
popa
add
addr16
inc
adc
pop
test
test
pusha
ja
gs
cmp
push
xor
insb
adcb
or
sub
icebp
orl
adc
sbb
mov
dec
popa
jne
imul
ror
sbb
sub
adc
jne
lea
mov
cmpsl
pop
data16
inc
dec
bound
xlat
push
scas
dec
pushf
insl
adc
mov
test
scas
adc
xchg
jmp
pop
and
outsb
mov
mov
and
inc
xchg
mov
insb
loope
inc
dec
pushf
mov
adc
inc
adc
inc
push
adc
sub
add
push
or
ja
mov
push
aaa
mov
dec
push
subb
aad
xlat
or
addr16
cmp
xor
push
andb
jae
mov
adc
add
test
mov
mov
aas
or
mov
aas
mov
outsl
sub
adcl
mov
inc
push
push
scas
les
decl
push
lahf
test
push
adc
cwtl
aas
out
sub
inc
sub
addr16
push
mov
test
inc
adc
out
and
inc
shll
dec
lods
dec
inc
pop
arpl
clc
mov
xchg
mov
arpl
lret
cmp
jg
dec
inc
push
add
fsubl
in
adc
mov
sbb
sar
dec
mov
jle
sbb
sbb
fs
fs
xchg
sub
pop
add
and
hlt
fs
dec
xor
cld
inc
cmp
xchg
or
pushf
xchg
or
inc
mov
test
in
cmpsb
in
shr
cmp
cmpsl
sbb
addr16
sub
dec
enter
or
xor
cs
push
jl
dec
cs
and
sbb
imul
or
inc
mov
test
dec
in
cmpsb
in
mov
fdivr
sub
and
and
fs
mov
dec
dec
enter
cmp
cs
nop
mov
call
or
xchg
insl
push
cltd
mov
mov
test
repnz
cmpsb
in
call
nop
inc
pop
outsl
jl
sub
es
mov
pop
dec
cs
subb
or
lds
pop
enter
je
xchg
pop
enter
jb
daa
in
jb
jb
pop
xor
leave
or
and
dec
leave
test
cwtl
rolb
test
sbb
inc
jb
je
lods
and
push
fmuls
jne
xchg
dec
enter
mov
fsubs
jbe
jbe
pop
jb
jo
cmp
pop
xor
adc
cmp
dec
leave
test
test
in
and
xor
insb
js
hlt
enter
sub
pop
jns
enter
int3
add
and
jp
cmp
pop
xor
and
jnp
dec
leave
test
call
push
jb
inc
test
nop
jge
jge
pop
enter
int3
cld
and
in
push
jle
jle
mov
jg
jg
repnz
jg
jg
pop
xchg
lock
or
jg
in
cmp
xorb
adc
inc
addb
dec
mov
jle
andl
arpl
xor
add
dec
cmp
inc
xchg
dec
or
pop
mov
pushf
or
dec
push
sub
dec
push
scas
insl
mov
adc
push
inc
push
xor
popa
mov
outsl
testb
add
imul
outsl
cmp
or
push
xor
cmc
pop
imul
inc
sub
mov
outsb
pop
scas
fs
data16
inc
dec
mov
popa
out
and
jle
data16
insb
jg
sbb
pop
jo
sub
add
or
mov
rclb
jp
sub
mov
or
daa
jge
and
lret
data16
add
inc
jo
pop
and
imul
aam
mov
imul
sbb
push
adc
popa
add
lahf
push
mov
rolb
mov
out
jmp
xchg
pop
popf
shr
inc
push
inc
sarb
mov
and
push
ret
sub
popa
ja
scas
push
lds
jae
les
ja
push
cmpsb
int3
adc
inc
add
inc
gs
or
inc
outsb
data16
push
xchg
jo
nop
outsb
shl
xchg
movb
mov
ret
fwait
xchg
aad
addr16
loopne
inc
ljmp
aas
dec
dec
gs
out
mov
pop
ret
xchg
lock
xchg
inc
add
outsl
push
xor
sbb
adc
xchg
sbb
jl
sub
andl
jg
xchg
ret
xchg
inc
add
push
fistpll
bound
push
jae
add
push
adc
xchg
je
add
mov
mov
mov
and
imul
sbb
loopne
jecxz
movsl
push
roll
xor
push
xor
rorb
stos
xchg
stc
pop
ret
scas
jg
nop
fadds
scas
dec
mov
pop
mov
scas
mov
jae
das
add
adc
pop
insb
movl
bound
mov
sahf
and
je
mov
adcb
mov
xor
and
sub
push
inc
mov
push
push
ret
jae
popf
xor
mov
xlat
test
subl
fs
sbb
inc
xor
subl
outsb
stos
and
add
sbb
addr16
push
mov
imul
fwait
mov
lea
sub
add
mov
and
or
pop
movl
inc
push
mov
sbb
popl
int3
mov
sub
mov
inc
test
je
dec
pusha
mov
sbb
xchg
inc
sub
push
sbb
and
push
inc
lea
inc
xor
or
outsb
jg
inc
sub
jp
bound
adc
add
pop
stos
or
sub
mov
sbbl
inc
cmp
adc
fadds
gs
push
add
aam
adc
leave
adc
or
lods
std
ret
xor
es
fcoms
stc
sub
or
cwtl
pop
bound
bound
jbe
stos
es
xchg
xchg
fldcw
or
out
xlat
dec
flds
dec
sbbl
and
ret
cmpsb
inc
imul
sub
data16
inc
pop
xchg
data16
call
adc
loopne
stos
adc
mov
xchg
imull
push
adc
or
test
aas
mov
popa
stos
fisubrl
push
xor
stc
sbb
push
or
lds
jb
mov
add
inc
mov
data16
push
adcb
xor
jb
xchg
sbb
inc
push
int
xchg
clc
or
bound
jo
xchg
sbb
xchg
je
cmpsl
orl
xchg
sub
movsb
push
sbb
scas
mov
outsb
adc
jb
xor
je
fnstsw
pushf
adc
push
sbb
aaa
inc
push
aad
shrb
gs
sub
insl
mov
sbb
or
out
lahf
push
sbb
shlb
adc
push
ret
inc
sti
jne
cmp
rcll
mov
std
inc
pop
sbb
or
test
insb
sub
adc
lahf
sbb
jle
mov
push
dec
popf
sbb
mov
push
push
add
xor
and
and
pop
inc
imul
add
test
lahf
push
jnp
adc
es
punpcklwd
inc
dec
pop
jmp
outsb
rclb
aam
aaa
addl
outsl
jb
and
inc
mov
loopne
pmuludq
dec
xor
je
sub
dec
pop
xchg
cli
push
push
int
and
ja
push
jmp
gs
pop
xchg
jbe
add
nop
jecxz
add
call
aam
xchg
notl
std
xor
test
and
scas
stos
out
pop
imul
sbb
sbb
orl
jb
xor
insb
mov
orl
icebp
rcll
sbb
stc
daa
sub
push
sub
adc
jecxz
lods
orl
cmp
mov
inc
arpl
mov
lock
push
push
pop
push
jne
mov
push
pushf
aam
lea
lea
in
cmp
lea
jle
aas
push
dec
dec
data16
mov
adc
mov
in
xchg
inc
and
mov
rcll
jl
inc
cmp
pop
xor
and
lock
or
sub
push
nop
js
dec
leave
test
lock
and
mov
and
and
cmp
cwtl
cmpsl
in
cmpsb
mov
add
sub
mov
mov
in
dec
enter
xchg
pop
cs
andb
lock
cltd
xchg
or
xchg
insb
test
cltd
xchg
or
leave
or
in
cmpsb
xchg
hlt
nop
inc
repnz
and
push
xchg
mov
lods
fmuls
enter
sub
fs
cs
mov
das
adc
dec
cltd
xchg
or
push
je
cltd
fcomps
jb
dec
enter
sub
xor
and
js
and
les
xor
enter
aad
fwait
fwait
sub
insb
nop
sub
es
mov
mov
fs
mov
cmp
inc
popf
jl
cltd
xchg
or
leave
adc
in
cmpsb
mov
lds
and
je
enter
hlt
hlt
and
in
and
push
mov
mov
or
pop
mov
mov
sub
mov
jns
add
pusha
mov
cwtl
hlt
xor
movsb
mov
rolb
leave
test
inc
dec
leave
mov
push
jb
inc
mov
and
dec
cmpsl
pop
enter
cmpsl
fcoms
push
xchg
aam
test
jl
and
in
inc
mov
in
test
push
repnz
cmp
sbb
push
leave
jmp
mov
push
out
push
lea
and
bound
pop
inc
and
xchg
int3
scas
cld
inc
dec
and
pop
sbbb
outsb
or
inc
cmp
mov
mov
sub
sub
imul
rorl
outsl
cmp
dec
bound
xor
sbb
test
xchg
dec
ljmp
mov
ss
push
popa
pop
and
into
add
insb
and
cs
aaa
loopne
dec
inc
jg
out
aad
shrb
cmp
int3
fs
outsl
jnp
mov
dec
imul
add
ljmp
ja
sbb
jbe
je
inc
adc
sahf
punpckhwd
dec
push
je
push
arpl
or
cmpl
sub
punpcklwd
pop
push
jno
mov
sbb
jae
xchg
mov
sub
mov
popf
pop
movsb
bound
nop
test
in
mov
outsl
adc
loopne
or
inc
daa
xchg
xchg
lods
push
repnz
imul
test
push
dec
movsl
lcall
and
test
ja
mov
mov
mov
aaa
adc
imul
insb
seto
cmpsl
mov
lahf
sbb
outsb
mov
addr16
xchg
and
xchg
gs
sbb
into
mov
xchg
addr16
inc
int3
setbe
add
pop
js
and
jp
xlat
cmp
or
loop
in
fsubp
mov
nop
lods
xchg
xor
mov
pop
sbbb
pop
aad
scas
mov
fcoms
int3
and
jg
sahf
or
insb
and
push
cld
test
gs
add
add
xor
pop
push
xor
dec
pop
dec
cmp
mov
adc
aaa
imul
nop
outsl
or
sbb
nop
pop
and
and
mov
or
popa
and
add
jg
mov
les
push
or
add
int
scas
popa
cmpsl
fwait
pop
dec
mov
xor
orb
mov
enter
lds
dec
mov
loopne
dec
gs
and
xchg
iret
lock
loope
jbe
insb
and
mov
mov
lcall
cmp
adc
imul
jb
in
xor
repnz
shlb
dec
add
adc
subb
mov
test
dec
mov
popa
aad
push
and
mov
adc
loopne
jnp
pusha
push
mov
jecxz
pushw
xor
and
add
test
cwtl
insl
inc
andl
push
dec
iret
das
mov
pop
xchg
cmp
imul
adc
xlat
jne
sbb
or
sub
shrl
sbb
sub
les
pop
outsb
pop
rorl
and
rol
shlb
imul
xchg
xchg
gs
ret
and
inc
sub
dec
inc
iret
or
push
pop
mov
push
test
or
mov
sbb
outsl
or
mov
rcl
outsl
lds
add
inc
inc
addr16
xchg
test
push
sbb
jbe
adc
data16
push
outsl
jbe
cmp
dec
inc
xor
bound
pop
outsb
lea
subb
pop
rcll
and
iret
adc
cwtl
push
mov
pop
cmp
inc
mov
push
sub
push
call
push
sub
jp
add
adc
stc
jmp
dec
lcall
xor
loopne
jle
fs
and
outsb
pop
push
test
cmpsl
rolb
and
bound
pop
push
xor
popa
dec
jno
pop
mov
mov
aad
orl
lahf
push
les
testl
and
lds
cs
push
daa
push
in
xor
imul
scas
cmp
mov
nop
xchg
pop
push
insl
inc
insb
pusha
shll
cmp
and
adc
or
mov
sub
sahf
mov
pop
adc
sbb
jg
lcall
dec
or
mov
dec
das
xor
sbb
xor
dec
sub
pop
cmp
test
push
add
sbb
lods
outsl
shll
shlb
ss
fisubl
imul
adc
data16
dec
inc
mov
jmp
mov
and
lods
push
and
lcall
and
adcl
repz
mov
add
bound
mov
sub
lcall
xlat
add
sub
jp
pop
enter
mov
and
aaa
fists
sub
adc
adc
loopne
and
adc
and
mov
mov
push
add
dec
nop
cmp
dec
enter
push
sbbl
mov
and
inc
add
xchg
mov
push
fs
test
fcoml
mov
or
inc
push
or
call
adc
cmp
cmpsb
in
cmpsb
mov
add
xor
mov
test
sar
in
dec
enter
mov
test
in
adc
mov
xchg
or
leave
add
and
cmpsb
je
enter
inc
call
and
xor
push
subb
nop
sub
enter
mov
mov
dec
or
xor
cltd
xchg
or
pop
test
test
in
mov
shll
ret
lds
in
inc
xor
in
cmpsb
in
test
lods
aam
cmpsb
in
aam
adc
adc
sbb
ret
leave
test
inc
dec
dec
pop
mov
lds
enter
and
les
inc
push
jb
push
movsb
shl
enter
and
dec
lds
dec
jl
fsubl
in
or
cmp
xor
faddl
fs
leave
test
nop
rorb
sbb
nop
sub
mov
in
and
dec
es
insb
leave
cwtl
jns
das
fs
lret
or
in
pushf
xchg
lock
je
cmpsl
in
mov
cld
cmp
nop
and
and
mov
lock
dec
es
push
int
jns
das
fs
add
inc
into
or
in
pushf
xchg
mov
cmpsl
in
mov
adc
pop
dec
shl
dec
jb
jl
mov
mov
and
pop
rorl
enter
mov
repnz
jl
mov
lret
cmp
or
decb
and
movsl
push
mov
pop
dec
dec
xchg
nop
clc
mov
dec
dec
and
les
xchg
je
or
jbe
fs
pop
movb
les
xor
add
sbb
andl
mov
imul
outsb
popa
imul
mov
lahf
jo
insl
imul
imul
stos
xor
and
daa
les
push
push
sbb
lahf
xchg
das
ja
popa
pushf
arpl
mov
jp
add
lret
or
inc
and
outsl
fs
push
movsl
rcll
sbb
hlt
loopne
outsb
jae
outsl
movsl
icebp
pusha
roll
mov
loope
insb
dec
outsl
jg
popa
push
jo
pop
out
sub
jmp
movsl
arpl
mov
jne
pop
jne
adc
pop
addr16
ds
inc
fwait
mov
out
sbb
jno
imul
pushf
out
notl
divl
jp
xor
popa
push
arpl
rorl
out
icebp
xor
inc
outsb
lahf
imul
and
sub
pushw
cltd
imul
je
shrb
push
jo
out
pop
lds
pop
xchg
mov
cmp
adc
mov
pop
cmp
pop
mov
inc
mov
arpl
jae
repz
mov
and
test
inc
ficompl
aaa
lea
and
adc
and
mov
pop
addb
lret
sub
das
lret
pop
jae
jnp
jmp
jns
jbe
fldcw
fwait
mov
movsb
outsl
daa
mov
add
sbb
sbb
pop
or
fwait
push
and
outsb
add
xor
mov
rolb
sub
hlt
shl
sbb
add
or
push
shlb
in
pop
mov
jmp
outsl
les
shlb
sbb
add
inc
add
sub
dec
and
cmp
or
add
aas
shlb
ficompl
scas
cltd
and
mov
push
lret
mov
push
pop
push
xorl
ficoml
outsl
pop
cmp
adc
xchg
adc
or
cmpsl
sbb
adc
jne
pushf
push
push
scas
xchg
pop
fucomip
nop
incl
adcl
mov
sbb
iret
sub
push
jg
push
mov
fwait
cmc
gs
dec
sub
sti
outsb
ljmp
cld
sbb
xor
push
gs
lea
pop
je
fwait
dec
and
mull
bound
and
rolb
jno
jae
mov
addb
fcoml
push
outsl
add
sbb
aam
int3
mov
les
mov
xor
nop
mov
scas
cmpsl
or
fistpll
out
adc
sbb
jne
jns
ret
or
mov
mov
and
xor
daa
dec
jbe
pop
adc
mov
dec
mov
inc
mov
sbb
xor
jno
jo
popa
sbb
mov
inc
sahf
js
jo
cltd
repz
je
rol
mov
inc
sbb
movsb
pusha
sub
test
les
push
adc
adc
bound
xor
jecxz
cwtl
sbb
jns
jne
mov
movhps
xchg
xor
imul
mov
cli
adc
imul
and
and
mov
int
out
jns
popa
xor
inc
mov
xor
dec
je
fldcw
inc
outsl
daa
and
sbb
inc
pop
cmp
or
aaa
jno
je
test
stos
fdivrs
xor
outsl
add
test
mov
and
cmp
cmpsl
mov
mov
pop
push
or
jb
inc
dec
rorl
outsl
or
adc
inc
shlb
popa
sub
sub
test
adc
inc
lock
mov
xchg
dec
stos
andl
adc
xor
inc
and
xor
les
pop
jp
cmpsl
inc
adc
adc
dec
jns
popa
addr16
stos
pop
mov
ret
sarl
nop
mov
loope
add
outsb
and
mov
cmp
sbb
push
xchg
fs
aas
jbe
add
fdivrp
push
inc
lock
insl
jns
insb
xor
mov
mov
ja
mov
rorb
rorl
and
add
inc
stos
mov
ja
and
mov
mov
add
adc
push
pop
sub
mov
push
rcrl
xchg
sbb
add
bound
sub
inc
mov
xchg
bound
andl
mov
xchg
mov
imul
mov
or
outsb
lods
pop
pop
push
inc
insb
xchg
xor
ljmp
loop
xchg
sub
cs
adc
pusha
mov
icebp
popa
or
sbb
imull
pop
xor
lahf
jb
fs
sbb
icebp
mov
pop
and
in
or
and
xchg
lahf
add
faddp
ljmp
ficoms
fidivrs
sbb
inc
jbe
pop
jns
dec
jno
xchg
pop
enter
ret
movsl
hlt
fdivp
and
sbb
push
fisttps
popa
pop
xchg
in
mov
in
loopne
xor
sub
dec
jo
push
jb
xchg
shlb
cmpsl
jbe
lds
loope
dec
leave
lds
cwtl
les
leave
test
adc
jb
inc
jb
loop
cwtl
push
jb
push
mov
pushf
nop
jecxz
jecxz
pop
enter
test
dec
pop
enter
in
and
insb
nop
pop
xor
leave
or
and
dec
leave
test
js
inc
dec
leave
test
add
jb
inc
jb
out
push
nop
mov
and
out
out
enter
mov
xchg
cld
sub
xor
subb
or
leave
test
inc
jmp
test
ljmp
push
je
and
je
pushf
push
jb
push
in
nop
push
jb
in
adc
cs
xchg
sbb
cmp
dec
cs
pusha
pusha
fs
cs
cs
or
xchg
or
xor
pusha
cltd
xchg
or
push
leave
or
in
pop
in
in
cmpsb
mov
sbb
push
out
nop
sub
es
mov
mov
fs
loopne
cmp
cmp
mov
cltd
xchg
or
xchg
in
icebp
inc
icebp
cmpsb
in
mov
lock
inc
repnz
sbb
xor
nop
sub
dec
es
pusha
repz
jns
das
fs
sub
mov
test
in
mov
cmp
fs
cmpsl
in
cmpsb
enter
nop
and
and
mov
aam
testl
pusha
nop
dec
inc
das
fmuls
imul
sbb
loop,pn
cmp
clc
sbb
insl
and
inc
jmp
sbb
nop
stc
in
enter
fucom
pop
movb
xor
ja
add
adc
dec
ret
adc
lds
and
por
add
jno
mull
outsl
mov
sbb
gs
arpl
or
mov
scas
sub
aad
insl
inc
test
insb
pop
dec
mov
cmp
mov
sbb
mov
adc
bswap
out
and
dec
adc
and
pop
imul
outsl
aaa
or
mov
outsl
push
inc
or
xchg
or
xor
inc
gs
sbb
add
xor
add
xchg
ja
mov
pushf
pop
dec
mov
pop
dec
movsl
xor
rcrb
add
cmp
sbb
mov
cmpsb
loopne
mov
iret
cmpsl
aas
popa
xchg
add
and
nop
rcrb
lds
push
call
sbb
mov
xlat
sbb
lods
ja
imul
ss
sub
dec
inc
ja
adc
movsb
call
or
xor
jne
mov
xchg
repz
mov
outsl
insb
aad
enter
push
inc
push
sbb
test
pop
sbb
sub
and
mov
cwtl
call
fildll
add
sbb
push
push
adc
outsb
sub
inc
push
add
sbb
jae
mov
lds
aaa
imul
leave
sub
test
xchg
add
lahf
and
xchg
rol
sub
or
xchg
test
test
mov
outsl
sub
push
addb
addr16
push
lret
fiadds
pop
insl
xor
mov
pop
lds
mov
push
and
stos
arpl
ja
dec
add
push
sbb
adc
inc
adc
popa
pop
lds
mov
or
fstps
or
sbb
dec
sbb
xchg
dec
hlt
jae
mov
push
ret
add
adc
test
inc
in
js
jb
mov
mov
add
jle
test
jne
sub
mov
sub
loope
outsb
sbb
and
xchg
mov
push
sbb
mov
mov
clc
ret
fcos
daa
push
gs
sub
jmp
test
or
and
xor
xchg
and
aaa
mov
add
stos
test
xor
push
lds
pop
jno
fstl
xor
lret
xor
dec
inc
scas
imul
xor
xlat
or
roll
dec
or
inc
fistpl
mov
mov
mov
sbb
imul
mov
imul
push
adc
mov
push
cmp
leave
lods
cmp
and
adc
mov
and
xor
push
rorl
lret
push
pop
inc
mov
sbb
inc
xor
dec
shrd
sub
xchg
xor
adc
popf
imull
ljmp
inc
dec
or
stos
lahf
daa
jmp
stos
test
pusha
adc
add
testl
shll
xchg
adc
add
add
cmp
or
jo
fs
jl
xchg
sub
add
mov
cmp
mov
pop
adc
sub
aaa
jmp
inc
call
push
inc
cwtl
dec
push
lods
outsl
daa
mov
fs
push
fildll
or
cmpsl
adc
mov
inc
jae
cmovae
or
push
into
mov
adc
das
jo
sub
cmp
mov
dec
sub
loopne
addl
mov
stos
jmp
cmpsb
and
lods
sbb
push
inc
add
ja
and
fs
aas
or
movzwl
lods
sub
bound
cwtl
cmp
shrl
add
or
xor
mov
or
jo
adc
mov
aas
cmpsl
inc
lods
inc
inc
adc
or
xchg
jg
rcll
mov
sub
outsl
js
lea
mov
mov
push
cs
div
imul
or
push
pop
out
xor
call
mov
out
loop
mov
imul
push
movsl
jb
andb
ror
push
pop
pop
pop
addr16
lods
inc
jne
mov
mov
int
das
test
repz
test
push
ja
ss
sbb
fsubs
push
decl
cli
popa
lcall
mov
cmova
inc
adc
mov
sti
mov
sub
in
sub
push
cmp
pop
stc
jno
jmp
push
jmp
cltd
mov
sbb
sbb
cltd
inc
fsts
mov
adc
push
pushl
push
add
bound
and
je
iret
cs
cmp
push
aad
or
pop
and
ja
insl
inc
mov
xor
mov
mov
push
and
inc
sbb
aaa
add
in
flds
movb
mov
outsl
sub
adc
adc
insl
call
add
das
and
outsl
add
or
push
xchg
test
jnp
negl
add
sbb
xorb
and
test
ja
add
jb
in
cld
dec
test
sub
or
push
fcmovbe
and
xor
inc
add
add
push
pop
sub
cmp
or
shl
outsb
xchg
adc
jae
adc
shrb
dec
push
ret
jg
push
das
dec
add
pushf
nop
das
nop
std
js
dec
sbb
test
lods
xor
cmp
ljmp
cwtl
ret
and
mov
push
push
and
andb
adc
cmpsl
popf
or
and
aaa
and
mov
sbbb
inc
inc
dec
fdivp
insb
adc
sbb
and
push
xor
call
mov
push
lahf
inc
inc
adc
dec
mov
in
sbb
test
cmp
call
push
test
inc
test
xchg
mov
add
sub
cld
mov
adc
mov
xchg
fidivrl
dec
jecxz
cmp
or
lods
addl
pushf
mov
xor
and
dec
or
lock
or
das
cmpsb
xchg
sbb
push
cmp
test
hlt
cltd
in
loopne
cld
xchg
hlt
sti
adc
movsl
shrb
inc
das
popa
push
pop
dec
cs
sub
shll
inc
pop
sbb
push
mov
rorl
xchg
enter
pop
stos
add
or
mov
popa
dec
gs
cmp
add
loope
cltd
xchg
mov
lock
xchg
fs
lock
xchg
push
lds
cmc
mov
cmpb
xlat
pop
testl
daa
add
adc
fs
mov
mov
movzwl
and
sbb
cmp
adc
xor
sbb
and
inc
pusha
rcrb
fstps
jno
dec
jnp
aad
arpl
dec
cmp
in
xchg
dec
xchg
outsl
inc
inc
inc
adc
in
add
adc
push
sbb
mov
mov
sub
cmp
fcoms
xchg
push
add
insl
jo
andl
leave
aam
sbb
cmp
fcomp
push
inc
dec
shll
mov
xor
pop
jb
mov
das
rcrl
jb
pop
pop
inc
push
xchg
or
enter
or
sbb
dec
dec
jb
cmp
pusha
add
das
jb
adc
adc
scas
and
or
es
push
and
pusha
push
inc
xchg
andl
inc
sub
andl
out
sub
or
mov
pop
push
sahf
inc
jecxz
push
adc
push
adc
repz
mov
and
icebp
rorb
dec
lahf
xor
mov
lahf
pop
add
jb
pcmpeqb
fs
nop
jo
call
xchg
mov
sbb
add
or
jns
jb
enter
dec
push
add
mov
sarl
or
inc
pop
imul
ja
pop
inc
xchg
xchg
sub
mov
pusha
or
dec
pop
mov
push
xchg
sbb
xor
xchg
xor
mov
mov
decl
mov
lcall
push
inc
or
movsb
mov
sbb
dec
xchg
add
dec
push
stos
orb
lods
addr16
and
sbb
shlb
or
mov
inc
mov
jg
or
mov
inc
and
xchg
je
or
inc
or
inc
cs
mov
js
dec
or
push
or
add
sbb
dec
push
and
das
or
stos
jo
sbb
and
xor
mov
lcall
push
iret
jl
or
nop
sub
orl
add
enter
stos
and
xchg
ds
or
adcb
or
leave
rcl
pop
rclb
inc
xor
test
inc
push
loope
or
cmpb
and
fmuls
push
push
ja
nop
add
psrad
dec
push
inc
inc
loopne
les
mov
xchg
add
mov
nop
xchg
or
in
call
mov
jmp
xlat
push
bound
mov
scas
inc
push
xlat
out
stos
adc
push
xor
cli
cld
js
or
clc
sub
cwtl
add
stos
inc
mov
cmc
inc
pop
push
xor
mov
add
dec
xchg
or
cmpsl
xchg
sub
andb
or
js
adc
jb
push
add
push
adc
inc
cs
or
mov
sub
sbb
mov
pop
adc
pop
jb
iret
stc
adc
add
popf
dec
push
sbb
movsb
add
inc
jo
push
outsl
popf
adc
mov
sbb
push
enter
movsb
or
scas
mov
and
add
test
pop
adc
das
cmp
add
adc
ja
mov
inc
pop
and
and
addr16
xor
sub
sarb
adc
or
inc
cld
sbb
pop
cmp
adc
inc
or
ret
incl
lret
lock
leave
mov
and
lock
sbb
repz
xchg
sub
mov
cmpsl
sbb
add
bound
mov
mov
cmpsl
dec
add
xchg
insl
jne
push
or
push
outsb
mov
sbb
fs
jo
adc
outsl
aas
push
and
jns
pop
and
or
xchg
jb
adc
add
adc
xchg
and
enter
push
sbb
xchg
stos
and
aad
fs
lock
shll
fnstcw
add
mov
mov
cmp
push
xchg
xor
enter
dec
sbb
sbb
mov
inc
dec
fsts
or
add
or
or
adcb
mov
pop
movsb
enter
sbb
and
add
jb
sbb
sbb
leave
adc
dec
add
adc
addl
and
dec
sbb
jg
xchg
push
popa
add
sub
sbb
pop
xor
and
cmp
fwait
aad
scas
sub
inc
add
push
das
pop
dec
jle
sbb
push
cmp
cmp
inc
inc
hlt
sub
xchg
gs
dec
dec
dec
adc
pop
add
adc
lds
ja
adc
xchg
cltd
cmp
add
add
cmp
push
stos
nop
push
cmpsl
and
movsl
fadds
imul
xlat
mov
or
or
clc
sbb
adc
push
rorb
cmp
lods
pop
xor
and
jp
push
and
das
xlat
push
or
lock
jl
fsubl
addl
pusha
or
enter
subl
push
adc
push
mov
pop
sub
mov
push
adc
enter
inc
or
mov
adc
xchg
jge
push
movl
mov
xchg
push
pop
mov
shlb
dec
add
sub
shrd
push
push
inc
out
and
inc
and
mov
arpl
sbbb
and
repnz
or
xchg
mov
cmp
jge
bound
cmp
dec
and
inc
or
xor
ss
clc
adc
mov
dec
jle
call
adc
arpl
mov
sub
sub
enter
inc
mulb
enter
in
lods
call
aas
mov
inc
push
out
nop
and
xchg
dec
enter
enter
enter
sub
aam
lods
xor
enter
orl
nop
add
push
xchg
mov
cmp
mov
jae
daa
and
ret
mov
bound
mov
nop
mov
xchg
xor
adc
dec
or
fcoml
add
mov
andb
sbb
cmp
subl
sbb
stos
mov
hlt
out
dec
mov
sahf
add
imul
adc
adc
adc
mov
fwait
add
mov
rol
ficoms
jl
mov
sub
xor
test
mov
ret
pop
test
loopne
adc
sarl
xor
cmp
adcl
or
rcrb
add
and
cmp
jecxz
ret
nop
jle
ret
xor
mov
jle
lock
cmpsl
sub
adc
aad
sub
adc
jo
les
out
lea
lret
xchg
ret
jecxz
sbb
negl
push
xchg
jns
lret
xchg
push
ret
sub
adc
sbbl
sub
mov
cmp
roll
inc
sub
ret
add
jae
pop
es
jmp
or
lock
jbe
sub
pop
or
and
adc
sub
das
sub
hlt
into
nop
inc
dec
and
pop
shrl
add
add
cmp
add
addb
push
xchg
cmp
sub
sub
and
or
push
sbb
mov
cmp
push
inc
cs
mov
dec
cltd
enter
push
xchg
or
inc
ret
in
or
jne
cmp
jg
push
add
lods
cmpsl
dec
and
cmc
cmc
mov
in
loope
cmp
mov
pop
lods
push
push
dec
test
sub
jno
icebp
or
adc
subl
cmpb
dec
outsb
lahf
or
pusha
dec
cs
test
xor
jbe
mov
inc
xor
mov
adc
sbb
and
jg
and
enter
xchg
inc
sub
in
add
dec
push
jb
das
cmp
in
jl
or
xchg
or
dec
pusha
sub
adc
inc
sarb
leave
movsl
push
and
inc
cmpsl
sbbl
fchs
pop
push
pop
and
mulb
cs
jns
or
push
dec
loopne
shufps
bound
mov
jmp
add
sub
inc
or
lea
and
sub
mov
sub
and
mov
mov
sti
jbe
fwait
xchg
push
nop
dec
in
cwtl
cmp
mov
outsb
xor
ret
in
lahf
lret
das
mov
test
pop
pusha
stos
cmp
lret
ret
add
movb
cwtl
inc
fists
andl
cli
mov
lea
das
inc
add
jno
sarl
sbb
in
lcall
roll
mov
cmp
dec
or
rolb
cwtl
fistpl
add
pop
xor
add
mov
push
adc
enter
in
jmp
xor
sub
xor
and
or
xor
push
in
imul
pusha
inc
lret
push
push
loope
push
xor
sbb
iret
sub
dec
add
and
enter
mov
and
xchg
dec
mov
or
jecxz
test
cmp
out
sbb
pop
adcb
or
arpl
pop
mov
arpl
mov
mov
int
sbb
or
aas
pop
call
pop
aaa
inc
or
add
mov
mov
test
push
fdivs
gs
xchg
xchg
int
sub
mov
pop
adc
pop
fsubrs
call
fcoml
sub
fcomp
mov
ja
ss
sahf
and
jle
or
sbb
ss
push
pusha
arpl
inc
dec
xchg
mov
aam
and
mov
cmpsb
jecxz
mov
and
stc
jo
in
mov
cmp
or
aam
sbb
push
ror
xchg
cmp
outsl
sar
enter
in
enter
dec
push
in
int3
enter
cmp
adc
mov
in
aam
jno
ret
pop
in
cltd
mov
rol
je
cli
and
fnsave
add
ss
sbb
xchg
andb
add
add
lods
sti
lods
lock
mov
mov
int
aaa
add
add
in
inc
popf
rolb
xor
mov
cmp
lcall
jnp
or
repnz
mov
pop
in
in
xor
pop
add
mov
sub
fsubr
xchg
push
inc
aaa
pop
or
lret
nop
mov
push
sbb
cwtl
loopne
inc
adc
stc
test
cmp
or
lcall
nop
add
and
sbb
dec
push
or
sub
mov
dec
in
add
or
adc
arpl
xchg
add
push
sbb
add
repnz
lods
in
sub
xchg
cmp
or
pop
je
mov
push
pop
leave
adc
sub
jno
xchg
inc
fdivrs
push
lret
sub
fcoms
stos
mov
xchg
mov
sub
test
adc
outsl
nop
add
push
dec
pusha
cmpsl
mov
adc
sub
mov
jmp
jecxz
mov
xor
lods
pop
rcll
push
lods
push
pusha
pop
jb
je
movb
sbb
mov
push
xor
mov
mov
int
push
mov
add
push
imul
dec
jl
addb
inc
rcrl
or
cltd
sub
js
ds
add
nop
dec
mov
push
enter
add
sbb
cwtl
mov
aam
and
in
or
nop
mov
shll
inc
out
mov
inc
pop
pusha
jge
sub
mov
push
pop
mov
enter
scas
sbb
push
enter
shlb
in
mov
inc
mov
inc
xchg
add
in
push
cmp
addr16
or
sbb
aam
sbb
pop
cmp
and
dec
push
outsl
jg
decb
or
je
fiadds
fisubl
adc
inc
je
loope
xchg
daa
adc
jg
fdivrl
adc
inc
xchg
xor
loopne
xlat
nop
loop
out
ffree
or
jecxz
cmp
and
fwait
adcb
shlb
adc
sbb
andl
sub
int
dec
sub
and
loopne
and
inc
and
push
adc
repz
xlat
inc
mov
lret
and
dec
add
sub
bound
xor
pop
adc
test
hlt
mov
inc
xor
movsb
hlt
xlat
jle
or
andb
inc
pop
lcall
push
or
dec
add
rcrl
mov
xor
xor
and
adc
call
cmp
and
inc
outsl
cmp
or
inc
dec
call
cmp
fimuls
ficoml
js
and
ss
rorl
dec
mov
jp
cltd
gs
jl
push
adc
icebp
scas
cmp
dec
mov
push
cmp
cmp
fcoml
add
mov
dec
sub
sti
bound
mov
adc
mov
and
and
jbe
mov
push
int3
sbb
inc
mov
scas
xchg
add
cmp
lods
lea
push
cmp
sbb
push
psrlq
push
nop
enter
and
dec
test
mov
mov
inc
fldl
inc
fwait
daa
dec
sahf
cs
push
inc
jl
cmp
add
adc
aaa
popf
mov
cmpsb
sub
push
mov
add
add
aam
or
add
dec
and
sbb
cmp
push
and
in
pop
push
or
addb
dec
inc
pop
add
xchg
stos
dec
popa
aas
or
mov
or
rep
adc
and
adc
pop
movsb
movsb
inc
js
dec
mov
pop
ret
ja
cmc
pop
leave
add
inc
or
mov
or
int3
mov
roll
inc
xchg
adc
sub
push
dec
fimuls
and
mov
adc
rcrl
sub
test
sbb
xor
sbb
stc
fsubr
imul
cmp
sbb
adc
push
loopne
dec
rorl
imul
std
mov
inc
xor
je
fnstsw
addr16
dec
inc
lock
and
xor
fdivrs
push
ret
aam
into
mov
repz
add
jne
jb
mov
lahf
jmp
add
inc
mov
xchg
in
ja
in
call
loop
inc
sbb
dec
enter
and
mov
test
adc
adc
adc
inc
or
dec
popa
loopne
jg
lea
push
pop
dec
jg
push
inc
add
stc
je
jne
dec
out
pop
sub
adc
xlat
pop
fwait
cmpsb
mov
jo
and
dec
xchg
js
aas
mov
insb
bound
daa
imul
and
inc
sbb
je
add
fucomip
pop
test
and
mov
pop
push
rcll
mov
mov
pop
div
mov
mov
cmp
inc
xchg
call
or
or
or
sbb
add
xor
pop
mov
xor
push
out
push
jo
jl
push
pop
and
xor
adc
and
sti
mov
or
es
loopne
mov
mov
seta
into
adc
jno
cmp
or
mov
shll
jecxz
cltd
push
int3
ds
cmp
ds
mov
int3
int3
or
sbb
subb
xchg
shl
cmc
sub
adc
sbb
cmpsb
in
fs
sub
xchg
les
insb
loope
add
inc
mov
or
call
dec
inc
sbbb
push
mov
lock
add
sub
sub
inc
pop
sub
nop
push
mov
mov
shl
xchg
fsubrl
ficomps
sbb
push
mov
andb
fists
mov
nop
jo
mov
out
cmp
jg
mov
sub
fmuls
add
subb
mov
add
jge
sub
xorl
pop
pop
insb
dec
ret
shl
divl
subl
add
mov
loopne
cmpsb
pop
arpl
insb
push
add
pop
or
aas
test
mov
pop
xchg
dec
add
sti
push
mov
jecxz
out
push
pusha
cmp
dec
push
in
dec
mov
fcoml
out
data16
mov
push
xor
sub
pop
je
jmp
pop
adc
das
add
enter
jne
imul
test
inc
nop
dec
fisubl
mov
cltd
or
mov
xchg
sbb
add
clc
sub
and
xor
mulb
roll
push
jle
aam
xchg
xor
xchg
pop
xor
cwtl
dec
lret
add
add
cmp
inc
pop
and
and
dec
mov
push
xlat
nop
gs
in
sbb
and
push
cmc
nop
xchg
addl
jge
or
or
pop
dec
push
loopne
xchg
sbb
repnz
push
inc
fsubrl
and
das
subl
dec
pop
push
jae
outsb
addr16
subb
mov
jne
sub
xor
inc
cmp
xchg
mov
mov
xchg
dec
lods
ret
add
mov
jle
jne
cmp
outsb
wrmsr
xor
pop
jne
and
add
pop
pop
test
or
dec
stos
js
pop
inc
jl
adc
jne
jp
sub
and
lahf
inc
js
gs
lcall
pop
mov
addr16
jne
mov
jle
sub
pop
mov
jecxz
add
lcall
icebp
adc
dec
xchg
in
pusha
inc
std
dec
xchg
andb
add
cmp
add
jno
push
das
cwtl
sbb
in
lea
dec
push
fwait
cltd
cmp
fidivrs
ja
popl
dec
adc
mov
xor
adc
clc
xlat
cmp
push
aam
push
dec
es
adc
nop
inc
rolb
or
mov
cmpsb
or
and
push
or
and
inc
test
adc
push
test
adc
push
mov
or
pusha
adc
adc
loop
jo
bound
daa
pusha
xor
das
lods
std
popf
push
adc
out
mov
or
inc
sub
imul
push
sbb
pop
sub
outsb
loopne
mov
addl
ret
nop
jb
push
dec
dec
xlat
stos
push
sbb
adc
adc
mov
mov
sbb
adc
mov
adc
jmp
sbb
dec
pop
adc
call
leave
pop
dec
in
fistpl
pop
hlt
xchg
sub
pop
fsincos
jo
je
push
or
sbb
mov
add
ja
mov
or
cwtl
jne
cmp
rolb
push
sub
outsb
outsb
nop
push
jmp
imulb
xchg
test
stos
jne
push
xchg
sbbl
scas
adcl
sbb
in
cs
push
mov
push
and
loopne
pop
or
sbb
and
out
loopne
sbb
aam
imul
stc
mov
or
loope
std
or
sub
pop
cmpsl
dec
and
adc
dec
fsubl
cvtdq2ps
jl
cmpsb
mov
ret
pusha
push
add
mov
push
loope
in
push
pop
and
xchg
jecxz
push
fdivl
divb
push
mov
dec
xchg
push
add
fs
lods
and
dec
pusha
outsb
fcoms
mov
subb
pusha
xchg
ja
adc
inc
push
mov
rcrb
dec
add
ret
pop
andb
pusha
sarb
mov
mov
enter
cmp
leave
rol
inc
cs
push
pop
stos
inc
fimuls
enter
mov
mov
mov
jecxz
jnp
mov
cmp
or
jl
adc
dec
insb
xor
and
and
xorb
and
jne
mov
ficoms
lds
mov
insl
dec
pop
xchg
xor
dec
push
mov
push
mov
gs
pop
jns
or
fldt
test
jecxz
jmp
insl
and
inc
pusha
or
arpl
dec
inc
mov
and
xor
sub
mov
push
xchg
cmpb
or
push
data16
outsl
add
dec
pushf
fimuls
test
aad
dec
xor
push
fnstsw
cwtl
mov
jns
fistps
dec
rcll
xchg
in
call
leave
les
mov
dec
ret
dec
inc
or
pop
dec
mov
mov
ror
cmp
xchg
fldl
or
mov
adc
nop
mov
sarl
jno
pop
push
pusha
fcmovnb
mov
jae
jecxz
and
xor
cmp
mov
pop
and
xchg
or
lods
shll
fldt
mov
stos
pop
nop
or
cmpb
cmpb
mov
stos
int
sti
test
inc
mov
sbb
adc
pushf
xor
mov
inc
xchg
fistpl
xor
pop
xor
add
pop
insl
movsb
sbb
int3
push
mov
mov
cmp
push
sub
cmpsb
xchg
or
movups
or
push
inc
pop
or
adcl
sub
xchg
cli
lock
lea
cmp
addb
mov
and
mov
dec
adc
adc
mov
dec
lahf
push
mov
cmpl
mov
pop
and
push
inc
pusha
mov
and
xorb
inc
jg
ljmp
iret
lock
sub
cmpsb
lock
call
and
or
jl
and
in
push
or
sub
nop
hlt
mov
add
clc
sbb
and
add
inc
out
push
and
mov
ja
addb
imul
sub
sbb
pop
out
add
xchg
mov
popa
xorl
addr16
inc
lcall
mov
pop
add
add
push
push
aam
int
insl
cmp
popw
adc
pop
cmc
pop
push
fildl
roll
sub
mov
adc
enter
xor
or
mov
pop
js
or
movsl
fsubl
imul
fistl
pusha
jno
scas
push
iret
adc
add
flds
mov
mov
jo
add
mov
lret
ret
cli
pop
dec
lret
inc
and
adc
pop
les
cmpsb
imul
inc
mov
xchg
add
sbb
rol
push
cmp
fsubs
pop
mov
mov
ss
mov
inc
add
mov
mov
jb
inc
sarl
sbb
cltd
in
or
adc
test
xor
push
test
movsb
inc
movsb
enter
add
mov
mov
and
cwtl
aas
pop
insl
sbb
and
ja
add
dec
es
mov
xor
push
imul
mov
push
inc
rcl
sub
addl
out
mov
adc
es
mov
cmpsl
imul
roll
mov
add
ss
or
xor
int3
mov
nop
add
test
insb
mov
mov
data16
adc
cmp
pop
add
or
lods
sbb
xchg
insl
loope
clc
cmp
xor
pusha
es
je
adc
les
pop
lcall
adc
pop
dec
rcr
es
xor
std
call
jecxz
inc
mov
mov
pop
inc
cmp
mov
test
imul
test
mov
sbb
cmpsb
insb
add
es
or
push
xor
and
xchg
sub
fisubl
mov
adc
aaa
out
jge
cmp
and
in
xor
clc
stos
and
nop
add
in
imul
cwtl
pop
insb
ret
ljmp
push
in
xor
lahf
insl
sbb
mov
xlat
jo
rcl
pop
adc
adc
add
outsb
leave
inc
jb
jle
sub
pop
pop
mov
dec
shll
lret
adc
imul
fs
out
test
lds
gs
in
les
cmp
jo
in
adc
add
imul
push
sbb
test
movaps
jne
mov
js
mov
mov
xchg
cmpsl
jmp
loop
sub
pop
jmp
addb
dec
fsubs
xor
jns
pop
sub
xlat
inc
jmp
fsub
add
mov
xor
loopne
mov
jmp
add
addr16
add
es
xchg
adc
outsb
and
movsb
test
xchg
lret
fadds
xlat
imul
popa
mov
in
fcomp
test
or
push
stos
mov
xor
xchg
loopne
sarb
bound
push
and
mov
scas
sbbl
sbb
jbe
fs
dec
dec
call
add
jge
in
sub
data16
and
mov
cli
jp
les
lret
pop
js
xor
push
or
enter
dec
stc
sub
lahf
push
and
jb
or
push
nop
iret
and
jae
push
pop
mov
mov
adc
movsb
ja
and
inc
sarl
hlt
add
cmp
pop
pusha
aaa
and
out
fsubrl
dec
nop
pop
repnz
cmp
mov
and
xlat
inc
pop
sbb
inc
jnp
and
iret
mov
and
aam
and
and
rcl
sub
cmc
push
mov
test
mov
lds
push
cmp
mov
mov
pop
cmp
int
xor
std
cwtl
out
out
and
mov
push
es
out
mov
out
jbe
aaa
dec
fwait
sub
dec
movsb
addr16
js
xchg
hlt
call
ret
lds
and
test
ss
cmp
xor
into
mov
icebp
adc
push
push
clc
data16
imul
cmp
rorb
add
rcr
push
adc
in
and
leave
and
loopne
cmp
mov
popa
mov
mov
cmpl
xchg
and
mov
push
inc
je
pop
hlt
test
sub
pusha
rorl
adc
idivb
lods
outsb
and
loop
rcrb
mov
mov
sbb
add
enter
jbe
test
jns
dec
or
movsb
cmp
das
cwtl
or
inc
xor
stos
cmp
mov
loopne
cmp
pop
xor
xor
pop
pushf
cwtl
cwtl
pop
inc
add
pushf
test
jno
dec
adc
pop
nop
xchg
test
enter
jmp
popf
push
or
xor
outsl
sbb
pop
out
pop
xchg
jl
and
mov
jbe
xchg
or
stc
dec
fs
inc
sub
xchg
pop
inc
imul
sub
xchg
mov
fisubrl
jo,pt
pop
sub
pop
mov
dec
scas
pop
call
xchg
out
in
out
fadds
js
fstps
data16
lea
pop
inc
jl
push
loop
fcomps
stos
mov
xchg
xchg
lods
push
xor
addr16
daa
clc
clc
shrb
loopne
nop
movsl
add
inc
fists
pop
jns
repnz
adc
or
jmp
xor
inc
pop
adc
lret
adc
roll
sub
dec
loop
xorl
movsl
or
int
movsb
jnp
cmc
jnp
les
and
jmp
popf
leave
adc
outsl
sub
sbb
or
mov
ja
xchg
inc
pop
loope
sbb
and
insb
fisubrs
add
cli
stc
add
jl
sbb
inc
mov
gs
jae
and
push
ja
push
lds
rorb
mov
lods
test
add
in
add
sub
jo
add
and
dec
sbb
and
jne
dec
sub
inc
xor
and
sub
pop
jo
push
je
mov
jmp
xchg
pushf
sub
adc
adc
and
andb
scas
imul
jne
std
cli
int3
stc
loope
iret
movsl
cli
test
dec
xchg
mov
cmp
rcrb
mov
or
stc
xchg
sub
or
mov
and
daa
je
add
mov
in
xor
or
lods
push
mov
dec
add
inc
add
shlb
cs
clts
and
nop
adc
xchg
and
xor
or
jns
add
adcl
enter
sub
or
flds
loope
aam
mov
je
aam
clc
subl
lods
setnp
sbb
inc
adc
lahf
adc
js
rcl
lods
and
sub
fiaddl
test
stos
inc
add
movl
je
mov
repz
adc
mov
and
enter
push
and
fiaddl
sbbl
popa
cld
cmp
jne
std
dec
cmp
sub
imul
ret
push
lock
and
cmp
dec
loope
push
sbb
sbb
decl
repnz
and
addl
mov
and
cmp
les
mov
test
stc
jno
cmp
test
pop
sbb
mov
mov
lds
pop
in
push
add
shrl
subl
push
dec
add
or
add
fsub
add
push
cmpsl
ja
adc
add
add
aam
mov
and
lock
test
push
addl
xchg
ss
hlt
inc
inc
stos
nop
pop
inc
and
movb
int
push
sbb
lock
xor
pop
pavgb
stos
es
push
and
imul
jmp
adc
pop
xorl
mov
add
shlb
mov
jns
aad
cmp
inc
xor
cmp
inc
adc
push
mov
add
dec
push
push
movsl
fmuls
enter
mov
or
sbb
xchg
adc
fsubs
or
mov
jae
pop
jecxz
notl
dec
dec
pop
sub
fs
arpl
cs
fisttps
and
ficoms
and
incl
imul
xorl
popa
rolb
stos
addb
or
adc
push
fs
call
es
sbb
mov
xor
xchg
and
nop
lcall
mov
jmp
fldl
push
or
push
add
mov
sub
mov
mov
cmpb
lea
fimull
in
jle
sub
add
repz
inc
add
and
cmpsb
test
add
pop
mov
jns
mov
fdivs
call
sub
inc
push
inc
add
sbb
sbb
mov
pop
lcall
or
outsb
mov
mov
and
test
mov
inc
ss
repnz
mov
add
in
xchg
aam
or
or
push
imul
and
sahf
fs
loopne
stos
add
adc
sub
in
add
and
call
jns
adc
fsubrl
xor
loopne
add
pop
and
orl
add
cmp
pushf
dec
lcall
rcrl
in
or
out
sahf
xchg
inc
lcall
mov
imul
inc
cs
inc
mov
dec
add
mov
lea
int3
shl
or
jmp
popf
dec
leave
and
enter
sbb
cmpb
lods
push
les
ljmp
shr
adc
shlb
test
in
or
ss
ficomps
and
jmp
inc
push
test
int3
jo
xchg
and
mov
sbb
mov
sbb
sub
add
xor
and
les
iret
adc
sub
mov
add
and
inc
mov
inc
xchg
jo
int
xchg
sbb
mov
xchg
in
xchg
insb
add
xorb
adc
jae
sbb
es
push
fprem
mov
mov
and
mov
jg
inc
adc
and
push
adc
mov
test
stos
xorl
in
andb
push
push
pop
icebp
add
rorb
daa
xchg
mov
inc
mov
pop
addb
xchg
push
mov
push
sbb
fiadds
dec
repnz
mov
xor
addl
pop
jne
faddl
or
adc
mov
xchg
xchg
dec
mov
xchg
es
mov
sub
push
hlt
xchg
xchg
or
je
cmp
out
mov
inc
mov
mov
jae
mov
insl
mov
push
mov
mov
and
mov
leave
push
fwait
sub
add
fdiv
mov
in
lock
fcmovb
shlb
sub
inc
inc
mov
pop
push
jle
mov
test
insl
mov
es
sub
inc
testb
aas
cmp
add
ss
sbb
add
add
inc
bound
push
movsb
aad
sbb
lods
sub
cmp
rcr
mov
dec
pop
xchg
movsl
daa
inc
sbb
xchg
push
sbb
pop
dec
repnz
daa
clc
dec
js
xchg
adc
dec
int
mov
addl
mov
mov
loope
aaa
test
add
pop
jge
xchg
mov
xchg
add
mov
cmp
scas
pop
lret
rorb
stos
shlb
movsb
mov
stos
adc
ss
inc
or
or
push
push
adc
sub
inc
sarl
or
and
cmpsl
and
imul
adc
pop
add
aas
add
push
xchg
lods
mov
sbb
shlb
mov
push
push
adc
je
push
add
or
ljmp
push
loopne
in
xor
sbbl
pusha
cmp
push
js
or
xchg
or
sbb
push
ret
sbb
mov
insb
pop
dec
pop
xchg
clc
daa
js
and
mov
stc
mov
dec
out
pop
cld
mov
repnz
pop
push
les
fstps
dec
xchg
push
fstpl
adcb
inc
xorl
and
pop
xchg
insb
push
mov
test
in
fdivs
fisubl
xchg
shl
inc
sbbl
in
mov
lcall
push
nop
cmpsl
inc
pop
xchg
push
lret
lock
leave
mov
cmp
mov
mov
push
dec
jae
xchg
cld
mov
cmp
xor
fimuls
and
or
mov
dec
cmp
cmp
adc
repnz
and
jb
add
test
hlt
in
and
mov
adc
mov
rcl
aad
and
cltd
movsl
mov
jmp
repz
xchg
test
add
rcll
push
cmpb
mov
mov
xor
movsb
repz
and
adc
add
inc
mov
lea
rorb
xor
negl
leave
jne
sub
jne
decl
adc
dec
pop
adc
repz
sub
ret
xor
add
insl
adc
jb
jns
lods
in
pop
sub
loope
add
add
dec
add
andb
pop
jne
push
adc
and
jnp
xchg
add
in
xchg
les
les
push
xchg
xor
cmp
jbe
push
push
push
scas
or
dec
repnz
flds
adc
fistl
cmpsl
xor
sub
inc
cmp
popf
mov
jmp
cltd
or
jmp
cmp
and
enter
mov
aam
loopne
push
mov
jnp
push
jb
xor
and
mov
cli
push
xchg
mov
pushf
pop
test
jae
dec
repz
in
jmp
das
gs
ljmp
and
mov
lods
dec
mov
dec
pop
lods
xor
ret
test
sbb
enter
movsb
rcrl
add
ret
in
add
xchg
int3
jne
mov
sbb
addr16
and
cmp
aam
cwtl
rcrl
test
jg
in
ljmp
ss
in
mov
adc
or
jmp
pop
in
pushf
test
mov
sbb
lock
cmp
call
jno
or
jb
sub
jo
call
nop
xor
orb
sbb
cmp
loope
stos
dec
mov
nop
and
and
sbb
sub
das
or
mov
test
jbe
push
sub
in
insl
fcoml
or
mov
rorl
in
in
or
call
fwait
das
and
push
sub
fs
add
mov
in
adc
rorb
mov
sub
sbb
fwait
adc
push
adc
push
xchg
and
jg
ror
pop
add
dec
nop
sbb
movsl
cwtl
or
mov
cmpsb
xor
nop
inc
cmc
xlat
shrb
add
addr16
dec
mov
addr16
jo
fldl
sub
shlb
shlb
insl
std
push
pop
lods
leave
inc
push
add
jne
in
mov
mov
mov
mov
les
add
dec
push
fs
lock
clc
in
inc
or
mov
clc
pop
push
ds
mov
sarl
add
lcall
fistpll
mov
or
inc
enter
test
add
mov
adc
popa
imul
invd
enter
cld
mov
out
adc
addr16
aaa
outsl
test
hlt
sub
nop
lret
addl
test
xor
adc
test
ret
icebp
xchg
addl
lcall
jge
push
clc
mov
pop
xchg
mov
rorb
mov
and
push
and
clc
clc
jl
xchg
cmpl
inc
or
adc
sbb
add
icebp
inc
pop
inc
inc
push
lahf
test
sbbb
push
mov
test
imul
fcmovnb
mov
jae
arpl
movsl
sub
subl
rcrb
adc
pop
pop
lock
cmp
push
in
inc
pop
mov
xchg
add
jb
ret
cmp
mov
inc
sbb
jb
add
inc
add
jns
leave
iret
movb
inc
or
add
jo
mov
ret
xchg
and
dec
mov
push
jae
or
adc
mov
mov
pop
outsb
shrl
lods
popa
inc
addl
dec
dec
push
sbb
sbb
cmpb
pop
push
dec
lret
mov
in
jp
push
and
cmp
fistps
sbb
jno
add
sub
and
jl
xlat
lahf
push
and
popa
pop
and
pop
push
or
addr16
adc
sub
or
xlat
xchg
inc
fisubrs
add
scas
adc
out
scas
cmpb
aam
scas
movsb
pop
inc
xchg
or
mov
ret
add
mov
test
cmp
adc
imul
and
jae
roll
daa
dec
sub
adc
or
fs
mov
and
stc
pop
ret
add
out
mov
inc
mov
inc
mov
or
jge
movaps
mov
mov
ret
and
xor
push
pop
stos
inc
scas
jmp
cmpsl
mov
or
pop
lcall
cmpsb
orl
xor
lret
and
dec
adc
outsb
pop
inc
dec
mov
mov
xor
ja
nop
es
jge
mov
jecxz
cs
push
js
sbb
mov
rorb
mov
dec
xchg
lock
test
mov
lret
add
add
imul
clc
and
pop
xlat
sub
sub
push
jecxz
or
fs
fs
cmp
stos
xchg
pop
out
xor
cmc
mov
cmp
pop
xchg
mov
nop
int3
sub
les
loop
mov
mov
int
aam
and
jb
sbb
in
dec
xor
adc
in
mov
dec
scas
add
jnp
sbb
test
push
imul
add
and
mov
roll
add
xor
mov
fucomi
adc
and
stc
pop
insl
mov
xchg
and
xchg
fs
stc
dec
sahf
and
loopne
fcoml
fsub
xchg
add
sbb
loopne
xchg
or
jle
mov
addb
fldcw
stc
pop
xchg
insb
in
xchg
scas
or
dec
js
imul
sarb
xchg
adc
xor
inc
add
add
int3
sti
int3
inc
adc
daa
enter
cli
mov
mov
mov
aam
and
or
aaa
push
sbb
mov
cmp
add
mov
and
and
adc
ljmp
inc
or
inc
or
xor
das
xchg
andb
or
orl
or
dec
push
sub
pop
sbb
adc
sub
mov
std
lock
inc
adc
test
add
xchg
jg
inc
or
aaa
dec
adc
les
or
fcom
and
das
adc
xchg
pop
movsl
test
mov
adcb
mov
xchg
sbb
xchg
filds
sbb
imul
nop
lods
aam
mov
in
mov
jl
hlt
std
pop
pusha
inc
hlt
sub
sub
addl
inc
or
xchg
test
pop
push
and
inc
pusha
and
jle
adc
cwtl
adc
je
jecxz
xchg
adc
clc
mov
sub
xor
arpl
pop
pop
adcb
sub
lahf
mov
hlt
mov
xchg
stos
add
or
pop
pusha
mov
xchg
rcrb
scas
call
push
int
push
in
add
lods
mov
cmp
pop
mov
xchg
aaa
jb
adc
pop
in
adc
loopne
push
mov
jne
xor
or
xchg
push
sbbl
mov
jne
sbbb
mov
shrb
sub
or
pop
push
jl
das
sub
push
pop
jb
inc
call
std
call
es
stc
push
sub
aaa
test
mov
cmp
cld
cmpsb
call
push
cmpsb
push
add
xor
in
mov
out
push
out
cmp
xlat
sbb
je
shrb
pop
xor
je
add
ja
mov
mov
pop
or
sub
sub
inc
insb
clc
jl
jl
add
and
aad
les
xor
jne
sti
dec
inc
dec
jne
subl
hlt
fdivrl
or
insb
std
and
add
cmp
push
inc
mov
roll
stc
faddl
andb
fnsave
mov
cmp
push
adc
pop
pop
call
jle
push
or
or
jne
icebp
dec
cs
add
dec
mov
data16
push
jb
shr
pop
int
inc
mov
stos
mov
int
add
es
dec
inc
inc
pop
adc
sbb
decb
add
mov
sbbl
dec
adc
push
test
sub
lock
imul
push
jb
jae
mov
imul
xor
lock
push
add
xlat
mov
mov
push
jns
mov
push
mov
and
ret
icebp
adc
repz
into
ret
repz
add
daa
mov
add
cld
mov
sbb
pusha
sub
je
and
clc
in
clc
pop
sbb
dec
in
sahf
clc
and
cld
pusha
ret
pop
xchg
les
std
add
cmp
inc
xor
sub
pop
or
adc
jge
cmp
jns
je
js
sbb
lahf
lret
leave
sbb
mov
inc
jnp
mov
test
push
and
adc
aaa
add
and
adc
or
xchg
sbb
in
mov
push
xor
enter
lds
inc
mov
add
xor
mov
push
sub
pop
popa
inc
fstpt
sub
add
stos
jg
enter
dec
addb
inc
pop
pcmpeqw
popa
push
mov
cmpsb
jo
mov
shll
dec
in
enter
mov
fcomps
fdivrs
mov
pop
adc
adc
daa
dec
sbb
push
inc
in
xor
push
fsubrl
lock
rcrb
in
push
sub
adc
jo
cmp
or
in
xchg
pop
js
xchg
push
mov
popa
fdivrs
out
xor
outsl
fwait
lret
pop
add
dec
xchg
shrb
call
scas
rcll
icebp
aam
adc
adc
xor
inc
pop
or
jne
cmp
adc
add
adc
test
xor
jne
mov
xlat
jno
jne
and
in
imul
repz
xor
mov
lods
roll
add
mov
mov
pextrw
mov
in
jmp
mov
nop
sub
shr
and
add
or
dec
mov
ftst
addb
cmp
xchg
ror
add
ja
or
enter
push
or
in
pcmpeqw
add
fs
pop
rorb
add
into
outsl
test
ja
or
push
mov
sbb
loopne
mov
mov
or
ljmp
xor
sub
mov
ret
add
add
je
pop
pop
ret
jmp
push
mov
loop
in
inc
jecxz
cmp
xchg
mov
adc
and
add
inc
and
jns
pop
adc
push
jbe
pusha
add
movsb
in
jbe
push
sbb
nop
inc
lods
xor
popf
xchg
jo
mov
mov
and
fadds
ret
adc
or
in
ja
or
rolb
xor
fsubrs
add
int
push
andb
sub
inc
test
dec
jp
loopne
or
or
inc
cs
and
nop
mov
js
cwtl
addl
sub
scas
mov
pusha
shl
jmp
add
pop
aam
rcll
addl
push
outsb
pusha
dec
sbb
sub
cltd
adc
push
xchg
xor
xor
aaa
je
or
int
ret
mov
adc
in
iret
jno
sbb
xchg
jo
mov
cmp
cmc
mov
pusha
jp
sbb
pushf
pop
fstpl
fsubl
or
lods
add
push
or
adc
inc
out
int3
shlb
in
xor
xor
insl
sub
pop
inc
loopnew
aaa
mov
sub
popa
xchg
lea
sbb
push
pop
je
push
arpl
dec
orl
fadds
mov
inc
jne
shll
sbb
dec
and
pop
xor
shrl
add
sub
add
and
rcll
mov
adcl
sub
add
inc
xor
add
rcrb
sbb
adc
add
adc
rolb
jmp
pushf
in
bound
and
dec
pusha
rcll
rorl
flds
aaa
in
subb
rorl
leave
add
inc
add
pushf
pop
push
push
sbb
mov
sub
sbb
dec
push
xchg
outsb
and
and
mov
clc
sarb
aad
and
or
das
jecxz
push
xor
mov
lock
rcl
pop
fcmovbe
mov
push
dec
dec
xorb
aad
shrb
test
test
aas
sbb
pop
mov
mov
and
pop
cmc
arpl
or
cmp
insl
jp
js
adc
add
sub
xchg
mov
sbb
adc
cltd
cmp
adc
mov
push
push
mov
es
sub
dec
adc
and
insb
or
outsl
or
mov
addr16
scas
sub
lahf
jmp
dec
and
test
xlat
or
or
pop
ret
aas
leave
sub
cmp
xlat
adc
inc
and
aas
push
movsb
push
aas
push
adcb
jae
fdivl
sbb
in
scas
and
push
or
test
rolb
movsb
or
lcall
mov
out
in
xchg
ja
mov
les
sub
xor
popa
sub
mov
in
pop
loopne
jno
cmpsb
in
fists
pop
sub
and
add
or
xor
xchg
adc
je
mov
cltd
int3
adcb
hlt
cmp
aam
in
dec
mov
movsl
int3
insb
test
dec
cmp
mov
xor
lock
imul
or
push
mov
pusha
data16
dec
jle
or
mov
xor
in
adc
xchg
je
pop
sbb
loope
sbb
outsb
outsl
and
jb
cmpsl
cltd
aam
fcmovnbe
adc
inc
arpl
iret
push
dec
fmul
sbb
and
dec
insl
dec
call
lods
or
add
sbb
adc
mov
jns
inc
push
mov
and
or
imul
addb
fwait
push
out
pop
or
adc
fidivs
and
pop
lods
imul
gs
or
and
sub
test
or
cmp
dec
adc
push
pop
mov
push
mov
adcb
xlat
xlat
inc
xor
fsts
imul
fiadds
add
and
xor
or
add
fstpl
es
pop
cmp
enter
mov
mov
sbb
fsubrp
push
push
or
and
xchg
inc
jmp
mov
sahf
inc
xchg
xor
sbb
fcom
aaa
dec
or
and
pusha
inc
enter
push
or
test
add
daa
jle
pop
faddl
xchg
mov
repnz
jecxz
xor
add
or
or
lret
adc
lahf
loope
push
repnz
and
fistl
repnz
cld
jecxz
loope
pushf
inc
dec
and
loope
push
je
and
and
mov
es
add
fs
mov
xchg
dec
scas
loope
push
loop
aam
int
aam
insb
jecxz
aam
es
jecxz
pop
and
sbb
cmp
rclb
mov
adc
pop
and
add
xlat
rorb
jecxz
adcb
aad
orl
pusha
adc
test
xchg
mov
and
push
sub
add
sub
in
mov
orb
xorl
rorb
ja
arpl
xchg
xchg
sub
mov
iret
xchg
hlt
in
repnz
or
sbb
and
cmp
scas
or
adc
push
or
imul
sbb
push
imul
mov
sbb
push
mov
inc
mov
push
jo
and
jno
pop
and
pushf
out
in
movsb
in
in
add
adc
sub
call
pop
inc
adc
push
xchg
push
movl
mov
mov
call
icebp
es
pop
pop
test
pushf
sbb
or
fsts
xchg
adc
addr16
call
ja
sub
jg
test
arpl
or
mov
jns
int3
jmp
mov
push
addr16
pop
outsl
popf
or
daa
mov
push
sbb
add
inc
leave
test
stos
inc
aaa
and
push
sbb
xor
mov
inc
test
push
xchg
iret
sbb
jns
out
lret
in
in
nop
inc
mov
in
fstpl
in
leave
in
sbb
inc
enter
push
out
nop
pushf
mov
lods
out
fsubr
add
dec
in
ret
in
out
fstpl
cmp
shll
inc
popa
mov
out
je
out
aam
cmpsl
xchg
or
add
lods
lods
push
pop
out
cmpb
sub
sbb
clc
mov
jns
in
add
jp
push
inc
test
test
iret
push
repnz
repnz
and
subb
iret
imul
insl
iret
mov
jbe
or
shrb
push
iret
ljmp
iret
xor
mov
mov
jmp
inc
iret
jb
inc
dec
pop
repnz
testb
inc
add
mov
push
iret
imul
ss
cli
mov
adc
iret
sub
and
jmp
adc
cmp
iret
out
mov
iret
ljmp
inc
andb
sbb
iret
add
add
sbb
test
fwait
adc
dec
pushf
clc
call
addb
icebp
rorl
mov
add
out
inc
add
test
jge
and
out
mov
les
push
icebp
out
shlb
push
pop
add
add
repnz
push
sbb
add
sub
arpl
mov
lcall
cs
xor
push
sub
mov
test
xor
dec
and
xor
and
lods
arpl
loopne
movsb
and
add
orps
adc
dec
and
lea
sbb
ss
adc
push
dec
repz
add
push
test
daa
and
daa
es
add
dec
sti
sub
or
and
mov
ds
clc
loope
sbbb
pop
scas
xchg
test
lods
adcl
and
sti
and
add
cmp
filds
leave
das
sub
std
stos
in
adc
std
clc
std
in
inc
lods
mov
and
xor
cmp
mov
mov
lds
lock
add
and
lock
adc
std
add
push
xor
sbb
push
enter
sbb
bound
inc
adc
popl
orb
or
int
pop
sub
cmp
or
mov
ss
xor
pusha
sbb
in
cmp
ret
mov
lds
mov
add
push
adc
sub
cmp
push
or
dec
push
outsb
cmp
or
mov
sbb
imul
int
clc
pop
add
fdivl
enter
bound
inc
addl
or
adc
adc
xchg
sbb
mov
fwait
inc
xchg
mov
mov
push
rol
in
push
mov
bound
sub
push
jb
xor
arpl
add
vfnmadd231ps
cmpsl
sub
and
push
fcoms
or
nop
aaa
pushf
mov
mov
add
jl
push
sbb
iret
fdivl
and
enter
fsubr
mov
iret
inc
enter
hlt
add
dec
mov
test
inc
les
js
jo
and
test
sub
movl
push
ficoml
pop
sub
add
loop
or
add
dec
roll
lock
add
in
mov
hlt
mov
add
inc
cmp
into
add
pop
adc
push
sub
or
xorl
mov
xor
sub
xchg
xchg
dec
jo
and
mov
test
incl
and
or
xor
ss
add
in
sub
or
aas
testb
lods
fs
and
dec
push
push
push
dec
xchg
or
pusha
xchg
push
jecxz
mov
cmp
mov
pusha
adc
or
cmp
mov
pop
ss
jl
mov
pop
leave
add
pushf
push
push
arpl
repz
add
subb
xor
or
cmp
xor
ja
adc
dec
mov
push
lahf
jne
adc
xchg
jns
push
insl
sub
xchg
sub
ret
jno
mov
cltd
push
fiadds
xor
and
xchg
adc
test
sub
lahf
inc
loope
xchg
aas
adc
sbb
push
cmpsl
aaa
push
sbb
or
xchg
cli
aaa
cld
cld
ljmp
jo
call
xor
cmp
adc
dec
dec
mov
pushf
mov
idivl
mov
push
jmp
sbb
sbb
push
mov
or
pop
inc
outsb
mov
pop
in
test
lock
je
push
nop
xor
cmp
enter
push
push
xor
sbb
leave
sbb
cltd
pop
jmp
cmp
mov
push
sbb
push
jg
xchg
bound
jmp
sub
lds
mov
or
sbb
loop
or
sbb
lock
loopne
and
adc
add
xlat
mov
adc
xchg
xor
in
daa
pop
jno
ret
push
mov
push
leave
hlt
iret
add
fldl
inc
add
xor
xor
push
test
mov
push
popa
adc
push
subb
test
popf
pushl
movsb
aam
fs
mov
in
inc
xchg
dec
pushf
andb
push
xor
or
sub
dec
xor
mov
sbb
sub
inc
sbb
cld
or
aam
dec
inc
inc
sub
pop
cs
sub
andl
mov
adc
loope
add
ret
inc
mov
cmp
sbb
xchg
imul
mov
mov
jne
push
movb
pop
xchg
add
mov
loopne
das
inc
roll
add
or
and
inc
daa
andb
dec
pop
inc
push
nop
aam
mov
repz
dec
mov
sbb
out
cmp
icebp
dec
sbb
push
mov
or
and
adc
int3
pop
adc
push
pop
mov
mov
and
gs
lret
xchg
or
mov
cmp
add
adcb
mov
in
push
push
popa
in
mov
mov
iret
mov
clc
mov
pop
or
xchg
or
or
test
adc
das
cmp
clc
sti
shrb
std
lods
shl
repz
jne
mov
and
xor
sahf
xor
xchg
push
push
inc
cwtl
lock
lret
addb
fldcw
ss
cld
hlt
stc
xor
es
xchg
add
or
sbb
jno
pop
push
inc
adc
pop
push
push
pop
inc
test
popa
adc
inc
enter
dec
push
inc
pop
adc
mov
mov
mov
and
xchg
adc
xchg
dec
fcomp
inc
lea
out
push
arpl
or
rclb
add
xor
add
ljmp
adc
mov
or
mov
mov
and
out
les
lret
xor
ret
sub
enter
je
fcoml
popa
aaa
or
in
add
dec
pop
cmpsl
xchg
call
xor
pop
test
insb
jp
fs
add
test
jns
xor
push
popa
xchg
cmpsl
jg
mov
movsb
cmpb
stos
adc
ja
js
jno
push
daa
int3
dec
int3
dec
sbb
cmp
add
or
and
nop
add
pop
faddl
cmp
fdivr
lcall
adc
stc
dec
nop
push
pop
pop
repz
inc
aad
dec
cltd
or
inc
testb
cmp
mov
push
sub
push
popa
xchg
es
push
dec
fisttps
or
stos
adc
cmc
push
push
mov
mov
adc
sbb
call
call
add
fwait
mov
sbb
add
test
aaa
push
les
dec
cmp
lods
pop
dec
lret
ret
mov
mov
mov
cmp
sub
outsl
cs
test
test
dec
push
xor
orb
pop
fiadds
test
stos
add
push
hlt
pop
dec
add
and
push
daa
lock
xchg
inc
dec
icebp
mov
adc
icebp
fiaddl
jne
dec
add
int3
or
or
cwtl
sbb
inc
sub
test
pop
or
popa
sub
aas
mov
sbb
and
jmp
sarl
xor
adc
add
mov
out
or
fistl
pop
in
aaa
mov
aaa
loope
enter
sbb
xor
mov
hlt
adc
pop
xor
mov
inc
daa
test
pop
xor
rolb
and
add
outsl
or
mov
adc
jmp
or
cmp
cld
test
sahf
xchg
sbb
rclb
test
add
mov
addl
out
and
iret
mov
xchg
or
pusha
mov
pop
mov
dec
dec
jnp
sbb
mov
push
flds
adc
je
cmp
lret
mov
fs
and
and
push
add
in
sbb
pop
sti
xrelease
mov
sbbb
xchg
les
and
sbbb
sbb
sbbl
or
es
push
pop
leave
and
push
adc
data16
xor
inc
nop
and
cmpsl
mov
jge
push
or
pop
xchg
mov
cmp
adc
xchg
test
lods
xchg
ret
inc
rol
or
outsl
xor
pop
lods
push
jmp
push
and
and
mov
inc
jmp
movsl
jae
and
hlt
add
adc
sbb
into
xchg
and
mov
jo
and
xchg
mov
jnp
ret
xor
inc
mov
test
push
nop
mov
nop
and
sub
xchg
xchg
xchg
push
jne
push
in
test
xor
cmp
jno
push
mov
mov
or
push
cmpb
sahf
and
mov
sti
mov
and
and
or
mov
imul
sub
sub
and
in
xor
push
xor
pusha
xor
aad
dec
add
sub
pop
pop
inc
and
sbb
lock
nop
adc
and
dec
inc
inc
popa
or
in
sub
adc
test
inc
lods
pop
or
shll
inc
insl
out
inc
sbbb
cltd
loopne
stos
enter
hlt
loop
and
adc
lret
aam
add
outsb
and
pusha
cmp
lods
add
sub
rorb
add
pop
inc
mov
xor
and
adc
or
and
dec
add
cld
xor
hlt
lock
es
fs
fsubs
cltd
fs
aam
int3
mov
mov
dec
lods
test
xchg
dec
es
mov
cmpb
fs
pusha
pop
pop
in
dec
xor
and
aam
xor
and
int3
enter
xchg
dec
rorb
cmpb
leave
js
push
and
pop
pop
xor
and
push
push
dec
in
xchg
dec
add
cltd
mov
add
add
jecxz
cmp
leave
ficomps
dec
rcrl
adc
lcall
add
add
xchg
fs
clc
pop
cmpsb
imul
xor
cwtl
mov
sbb
aam
dec
shll
rolb
xor
fwait
sarl
mov
xor
shr
mov
lods
shlb
xor
test
nop
aam
mov
mov
cmpsb
imul
imul
pop
pop
movsb
pop
pop
xor
lock
pop
mov
dec
outsl
push
test
insb
lcall
int3
loopne
mov
fadds
lret
cmpsb
popf
dec
jbe
push
mov
stos
mov
test
cmpb
int
imul
pop
pop
rcrl
push
pusha
mov
lcall
pop
lods
or
xor
push
movsb
push
nop
or
jge
mov
fdivrl
test
mov
in
adc
mov
mov
pop
mov
adc
pop
mov
adc
or
mov
adcb
pop
cmp
fiaddl
lods
or
rcrl
mov
and
add
adc
dec
sbb
xchg
hlt
sub
mov
ja
pop
sbb
jmp
push
sub
add
int
clts
dec
add
cmp
inc
int3
fidivl
rcrb
push
add
sub
push
inc
push
push
outsl
mov
imul
push
popf
and
fcoml
inc
adc
mov
mov
adc
daa
push
rclb
cmp
call
and
dec
fwait
jbe
cmp
nop
push
fdivrs
movsl
push
inc
mov
xor
dec
fwait
mov
adc
push
jo
jnp
dec
jnp
add
jg
inc
push
inc
mov
loopne
cmp
test
mov
mov
psubusw
push
sub
xor
cmp
pop
dec
shll
nop
lcall
mov
dec
rcl
loopne
hlt
rcrl
pop
or
push
push
and
push
adc
xor
cs
push
bound
mov
rol
push
add
insl
jle
adc
xorl
pusha
or
pusha
push
push
xchg
pop
mov
xchg
mov
adc
sub
or
push
add
push
pop
cs
bound
dec
addl
out
shrl
into
adc
add
jp
cwtl
cwtl
inc
iret
in
nop
pop
xchg
xor
push
cmpsb
adc
lcall
push
xor
ss
add
aas
cs
mov
add
add
sbb
push
push
addb
nop
cmpsb
popf
pop
nop
adc
daa
pop
sub
cmpsb
dec
repnz
mov
adc
imul
xor
push
xor
dec
mov
in
xor
add
xchg
movsb
imul
imul
cs
fcompl
xchg
aas
aaa
adc
aas
cltd
neg
out
bound
arpl
je
xchg
es
cmp
mov
fmull
pop
inc
push
cmp
aam
push
in
aam
aam
cmp
nop
aam
aam
cmp
nop
inc
aam
aam
nop
inc
push
aam
aam
inc
push
cmp
aam
dec
dec
push
cmp
aam
nop
push
shrl
push
or
inc
inc
xor
push
pop
imul
mov
lcall
imul
sahf
adc
sbb
xor
add
and
fdivs
insb
jns
insl
dec
outsb
sub
inc
xor
and
scas
jbe
add
xor
test
mov
dec
push
adc
pop
pop
add
test
enter
fsubs
je
add
cmp
lcall
xchg
xchg
xor
imul
ljmp
sbb
lcall
dec
lods
imul
jb
cmpsb
imul
xchg
in
clc
xchg
inc
mov
pop
xor
cwtl
xor
xor
add
data16
addr16
push
xor
arpl
imul
nop
dec
shrb
addr16
insb
fcomps
xor
cmpsb
dec
cmp
adc
mov
push
roll
ss
or
aaa
lret
inc
imul
imul
imul
cmpsb
imul
push
push
dec
shrl
sub
int
dec
shll
loope
cmc
decl
mov
or
push
sbb
test
xorb
out
aaa
scas
nop
inc
punpckhbw
mov
aaa
je
add
pop
and
insb
shrb
rclb
and
cmp
shlb
xchg
rcl
rolb
rcl
rcrb
enter
rcrb
and
enter
rcl
enter
rcl
shlb
xchg
rcl
rolb
rcl
pusha
jb
enter
mov
add
cmp
cmpsb
cmp
jmp
sar
pop
adc
push
sub
xor
shll
inc
push
pop
shll
mov
mov
sahf
cltd
shll
mov
lret
xchg
mov
test
sti
out
int3
je
shlb
scas
in
push
push
stc
xorb
lock
clc
xor
sbb
add
insl
jns
cmp
push
dec
dec
cmp
cmpsb
pop
push
popa
imul
imul
imul
lods
imul
sbb
xor
jns
xor
cmp
pop
adc
sbb
das
cmp
shr
jecxz
loopne
pop
jbe
push
cmp
xlat
loope
pop
cmp
into
and
andb
dec
xor
int3
int3
int3
int3
dec
xor
and
int3
int3
xor
and
int3
int3
int3
enter
int3
int3
int3
leave
and
sbb
int3
int3
and
dec
xor
int3
int3
xchg
dec
xor
int3
int3
int3
int3
dec
xor
and
int3
int3
mov
and
pusha
push
or
aaa
mov
mov
fwait
lcall
cmp
mov
imul
push
sbb
cmp
push
imul
imul
mov
cmpsb
imul
insl
cmp
xor
sbbl
iret
int3
aas
cmp
ficoml
fdivs
cmp
cwtl
cmp
sub
and
mov
stos
push
ja
mov
adc
cmp
hlt
jo
xchg
cmp
je
es
fs
enter
cmp
cltd
fs
dec
enter
xchg
dec
es
dec
es
enter
es
fs
sbb
ret
dec
xor
enter
pop
ss
test
push
sub
inc
xor
inc
push
pop
push
jb
xchg
cmpsb
imul
loopne
clc
add
fdivs
or
adc
dec
out
stos
ljmp
scas
cmpsl
and
inc
and
xor
push
xchg
fcmovbe
add
cmp
xor
jmp
cmp
sub
add
mov
pop
push
cmpsl
lock
jno
adc
adc
jne
cmpsb
imul
push
fwait
pusha
cmpsl
xchg
adc
test
ds
xor
cmpsb
push
adc
sbb
push
jb
xchg
jae
push
xchg
cmp
sub
shrb
xor
inc
inc
inc
xor
shrl
pop
arpl
shll
mov
dec
mov
lret
call
repnz
push
sahf
adc
push
xor
popl
jmp
js
inc
inc
xor
inc
inc
jb
inc
cmp
dec
add
and
jno
adc
outsl
and
dec
or
cltd
in
xor
push
inc
mov
jne
dec
shll
mov
dec
shll
xor
out
cli
add
push
push
sbb
xor
shll
sub
inc
dec
dec
out
fcomps
inc
push
push
popa
inc
dec
in
push
xchg
adc
inc
pop
inc
push
mov
and
cmp
inc
or
nop
add
xchg
icebp
sub
mov
int3
int3
pusha
dec
cmpsb
pop
ss
push
je
inc
jg
lcall
mov
enter
imul
lcall
push
sbb
sub
jb
cmpsb
imul
mov
dec
mov
inc
jb
dec
adc
mov
in
fstpt
shl
xor
xchg
rorl
dec
movsl
scas
imul
lcall
push
push
and
cmpsb
imul
lods
imul
test
push
xchg
dec
imul
bsr
cmpsl
dec
mov
push
add
and
or
push
add
dec
ja
dec
lcall
mov
dec
mov
imul
lcall
push
sbb
sub
imul
insb
lcall
pxor
add
and
dec
nop
dec
and
and
nop
dec
pushf
dec
push
xor
jbe
movsb
inc
mov
add
dec
xor
cmp
sbb
movsb
adc
clc
push
push
mov
dec
repnz
sub
xchg
imul
cltd
fs
mov
adc
nop
xchg
rolb
dec
movsb
xchg
inc
es
popf
xchg
mov
es
in
add
insl
jg
adc
sbbb
cmp
cltd
in
add
fistpl
cwtl
xchg
jnp
adc
xor
jl
add
cmpsb
dec
jnp
jns
js
ja
daa
js
enter
or
lods
ja
xchg
dec
jp
jge
sub
cmpsb
dec
fwait
enter
int3
adc
push
or
fistl
xchg
xchg
xchg
push
cmp
xchg
xchg
cmp
nop
inc
xchg
xchg
xchg
in
inc
push
xchg
xchg
xchg
nop
inc
push
cmp
in
xchg
xchg
push
cmp
in
xchg
xchg
xchg
mov
xchg
inc
xchg
icebp
js
push
add
repz
ss
lcall
nopl
sub
cmpsb
imul
cmpsb
imul
ret
int
dec
dec
pop
shll
push
or
adc
sbb
dec
xor
add
push
dec
shll
pop
push
and
xor
shll
pusha
push
jle
xor
rorl
dec
shll
out
shll
insl
push
ja
dec
shll
mov
xor
shll
rcr
in
outsb
enter
add
cld
xlat
pushl
sbb
cmp
mov
outsl
lcall
jbe
loopne
jno
jmp
imul
dec
push
repz
fs
pop
fsts
cmp
push
xchg
push
mov
outsl
pop
add
outsb
les
sub
push
push
fcmovnb
or
push
loopne
call
mov
add
cli
or
repnz
addb
popf
push
adc
rclb
nop
add
addl
shl
inc
dec
adcb
add
pop
outsl
dec
xchg
sbb
push
cmp
imul
imul
sub
or
fcoml
faddl
pop
adc
and
loop
push
pop
stc
fcomps
pop
dec
imul
cmp
pop
pop
push
nop
xor
jno
rolb
mov
and
cmp
push
push
inc
add
push
inc
cmp
or
xchg
ss
bound
sub
es
inc
add
adc
add
add
mov
scas
dec
push
mov
rorb
xchg
sbbl
sub
inc
sub
cmpsl
sbb
mov
clc
insb
or
out
mov
add
sbb
nop
push
add
or
push
push
iret
adc
jle
cwtl
mov
jle
inc
movb
cs
ds
out
add
addr16
dec
xchg
out
jns
add
aaa
mov
add
popf
sub
inc
push
sbbb
ret
pop
gs
leave
dec
pop
data16
je
insb
fidivl
jo,pn
pop
inc
xor
sub
fisubl
inc
or
add
imul
outsb
mov
les
push
adc
shlb
sub
push
inc
pop
test
es
add
fcmovnb
cmp
nop
push
lock
push
pop
push
push
rclb
or
or
fsubs
adc
cli
mov
mov
push
and
and
inc
adc
sbb
jg
pop
pminsw
pop
and
outsb
push
fs
xlat
or
push
ja
push
push
pop
sbb
aam
pop
inc
test
add
add
dec
movlps
push
hlt
push
in
xor
sbb
stos
aas
popa
or
repnz
add
fcmovnb
mov
leave
jo
fwait
xchg
pop
mov
or
sub
add
dec
add
jnp
xchg
pop
jno
dec
adc
pusha
or
jo
add
push
mov
rorb
and
mov
lahf
and
mov
stos
mov
adc
xchg
xor
xchg
pop
nop
push
inc
sub
dec
xor
and
jno
mov
mov
mov
xchg
inc
or
dec
jno
lds
mov
inc
jbe
dec
mov
push
and
jmp
inc
ljmp
movsb
adc
and
test
testb
rcr
mov
clc
or
jo
mov
lret
mov
and
std
sub
dec
dec
mov
mov
fidivrl
inc
inc
call
in
cmpl
outsl
and
mov
inc
pop
pusha
mov
sub
pop
inc
movsl
or
movsl
jnp
loop
push
aam
out
push
mov
mov
out
push
notb
xchg
fistps
jg
mov
mov
aam
cmp
sbb
repz
sbbl
imul
test
ret
or
jecxz
jp
sbb
jbe
add
mov
pop
fimull
xchg
xor
sbb
adc
push
or
add
scas
cmp
inc
sub
cmp
and
xor
andb
push
pop
jae
test
sbb
mov
push
pushw
mov
loopne
pop
xor
xor
or
or
adcl
scas
sti
pop
mov
ret
lret
and
jns
or
movsb
pop
mov
stos
adc
jb
add
xor
add
clc
add
jns,pn
adc
add
xor
push
push
in
push
pop
jl
inc
push
in
xchg
or
xchg
xor
mov
inc
data16
or
rorb
lahf
addr16
sahf
pop
in
or
add
cmp
and
cmpb
sbb
dec
xor
and
or
in
mov
xchg
popa
inc
das
adc
nop
push
lret
fwait
aaa
imul
xchg
add
aam
pop
insl
ja
mov
imul
mov
dec
pusha
sub
scas
and
pop
push
sbb
popf
dec
adc
jne
inc
adc
xchg
imull
ja
fldt
xor
cmpsb
cltd
lods
fwait
mov
pop
sbb
add
popa
test
dec
stc
xchg
dec
lea
call
or
stc
cmpb
ret
xchg
push
adc
pop
add
push
fcoms
push
add
pop
mov
pusha
adc
jo
or
gs
loopne
rol
repz
pop
insl
subl
adc
sbb
insl
pusha
in
add
scas
add
jnp
mov
pop
fiadds
mov
dec
xor
cmpsl
inc
ret
ret
lods
es
lods
add
jne
mov
xchg
addb
inc
push
outsb
mov
andb
add
cmp
push
dec
add
and
or
inc
in
fwait
cmp
mov
push
addb
mov
and
movsb
mov
xor
sbb
and
int3
mov
add
arpl
addl
divl
xor
jge
dec
fcomps
jmp
movsl
xchg
xchg
xor
or
mov
sbb
es
into
test
push
je
mov
xchg
push
jo
fs
xlat
xchg
in
leave
inc
pcmpgtd
xchg
test
sbb
inc
jb
subl
sub
aaa
or
push
outsl
fs
cmpsl
das
sbb
inc
push
or
sub
and
in
xor
mov
xor
xchg
pop
sbb
adc
dec
adc
push
mov
addr16
into
addr16
jo
in
pop
push
enter
and
loop
push
das
jo
inc
movsl
inc
add
push
movsb
rorb
pop
push
leave
push
jmp
adc
adc
or
xchg
inc
sbb
xor
cmp
and
adc
mov
cmpl
xor
pusha
adc
add
adc
call
mov
and
jb
or
adc
inc
mov
les
xchg
rclb
dec
aaa
pushf
in
fstpt
push
imul
mov
or
jns
xorb
imul
mov
sub
sbb
jnp
sub
movl
and
sub
gs
fmul
sub
push
or
push
and
push
xchg
lods
adcl
insb
mov
enter
sub
insb
mov
les
xchg
fs
push
je
xchg
fndisi(8087
and
fiadds
sub
inc
insl
mov
movsl
cmp
jmp
loop
jmp
loope
out
xor
jne
rorl
mov
outsb
push
push
rolb
test
xchg
lahf
popa
test
dec
mov
sarl
imul
shlb
push
outsl
insl
andb
jle
shll
imul
adc
xor
pop
in
mov
pandn
or
adc
or
mov
pop
xchg
or
cmp
jo
add
dec
cmp
jno
push
popa
and
push
cmp
mov
jae
ret
mov
pop
adc
mov
in
loope
lret
and
mov
inc
cmp
xor
sbb
sub
jo
xchg
or
shrl
push
xor
xor
mov
xchg
pop
mov
dec
pop
inc
scas
nop
and
inc
test
inc
jae
push
xchg
jno
and
fmul
nop
or
inc
ja
jae
adc
pop
sub
in
jno
pop
enter
in
mov
movsl
mov
and
arpl
pop
movsb
xchg
ficoml
mov
mov
inc
insl
adc
xchg
add
int3
push
pop
and
or
mov
bndldx
add
pusha
in
mov
mov
fadds
shrb
cmp
fs
push
cmp
sub
sub
mov
shrl
push
cmpb
in
cmpsb
inc
jbe
push
pop
inc
popf
mov
imul
pushf
lahf
xor
movsb
lcall
xchg
add
insb
adc
stos
add
aad
xchg
adc
punpckhdq
add
adc
mov
add
leave
or
sub
xor
test
mov
gs
aam
or
mov
nop
mov
inc
pop
xor
js
inc
sub
inc
lret
sarl
and
push
xchg
test
or
and
cmpsl
insb
jns
test
adc
sahf
dec
je
and
mov
or
das
xor
add
cmpsb
add
pop
xchg
dec
jp
xchg
jp
sub
shll
lahf
mov
or
dec
pop
call
fnstenv
sub
push
divb
test
and
or
inc
add
lea
cmp
scas
adc
jl
mov
call
push
add
aas
and
int3
or
jge
xchg
pop
or
nop
pop
insb
cmpsl
fs
push
xor
xor
pop
xchg
sub
in
jb
or
in
jge
int
and
add
sbb
cld
push
dec
nop
popa
mov
add
enter
add
jno
rcrb
jmp
call
push
insb
adc
mov
and
or
in
lods
ljmp
sub
data16
pop
adcl
sub
stc
aam
je
and
outsb
nop
in
cs
pop
xor
addb
adc
add
rorb
adc
adc
adcb
or
aas
xchg
or
les
inc
cs
and
dec
nop
inc
pop
lahf
sub
mov
es
pop
fwait
cwtl
xchg
push
and
push
mov
adc
roll
int
fmuls
pushf
lahf
rcrb
inc
dec
jno
jl
sub
daa
or
mov
mov
or
clc
orb
push
inc
hlt
xchg
sub
sub
or
xor
fadd
imul
nop
adc
jmp
shl
adc
sub
mov
sub
xor
or
rcr
dec
in
jae
leave
xor
xchg
add
xchg
add
mov
or
and
test
testl
test
loope
nop
hlt
add
into
adc
aaa
mov
jae
in
jb
mov
scas
and
enter
xchg
leave
jb
cmpb
addr16
test
test
je
adc
mov
test
aad
push
cmpb
pop
mov
shrb
popf
xchg
inc
aam
jg
xchg
daa
jne
mov
rcrb
idivl
cltd
cli
add
add
jp
orl
jne
rorl
iret
out
dec
xchg
cmp
cmpl
adc
or
test
sub
mov
or
push
or
or
mov
xor
repz
add
mov
gs
pop
jne
mov
les
out
pop
leave
std
js
push
adc
xor
mov
mov
add
cmpb
into
adc
sbb
xchg
cmpl
add
rorb
add
dec
mov
test
subl
arpl
mov
repnz
cmp
ficoml
in
addb
addr16
lar
enter
dec
adc
and
and
adc
inc
and
cwtl
cmp
mov
repnz
add
fadds
aam
orl
mov
in
and
inc
pop
je
daa
or
push
and
or
push
mov
push
add
nop
push
scas
inc
push
sbb
add
dec
add
and
lea
add
xchg
pop
sub
rcr
xchg
add
and
clc
adc
sub
sub
inc
push
add
mov
add
add
loop
mov
fisubrs
sbb
inc
pop
out
mov
jns
rolb
inc
inc
dec
push
mov
xadd
or
and
adc
pop
nop
insl
inc
mov
sub
test
addr16
loopne
mov
adc
sbb
das
mov
fsubrs
sbb
dec
cs
adc
dec
outsl
xchg
clc
adc
lret
test
ret
pop
sti
mov
push
aam
cs
movsb
or
ja
adc
imul
icebp
add
mov
js
add
inc
xchg
pop
mov
insb
xchg
sbb
adc
std
jae
call
in
adc
sbbb
pop
imul
xor
dec
or
fcmovbe
inc
imul
push
dec
fidivs
pinsrw
add
or
xor
jge
insb
inc
imul
pop
xor
cld
in
mov
cmpl
pop
adcb
xchg
stos
mov
int3
ja
xor
sub
lea
imul
and
push
mov
mov
mov
cli
pop
sbb
push
push
dec
dec
dec
dec
mov
sub
daa
push
add
lcall
push
outsl
mov
xchg
inc
adc
call
test
push
mov
push
xorb
add
push
sbb
dec
adc
and
xor
sbb
movsl
pop
aas
call
xor
xchg
and
inc
mov
push
push
add
and
push
pop
adcb
movsl
inc
xchg
cmpsl
inc
inc
shlb
sub
rorl
jne
mov
and
cmp
lea
dec
xchg
sub
in
adc
inc
fstpt
mov
pop
and
in
sbb
in
cmpsl
adc
push
jmp
das
call
sbb
push
dec
adc
mov
dec
test
xchg
in
cmp
rorl
adc
fs
xchg
loopne
rclb
les
sbb
adc
dec
mov
sysret
xchg
and
aaa
mov
icebp
sub
xor
xor
jmp
inc
popf
push
rcrb
adc
dec
cmpsl
leave
imul
lret
cltd
dec
call
sahf
add
xchg
sub
jne
and
add
clc
sub
cld
jp
jno
outsb
adc
xchg
pop
fstps
dec
jmp
xchg
and
push
pop
daa
sub
rolb
aaa
jae
pop
addb
jbe
and
sub
push
mov
mov
pop
pop
xchg
dec
sub
xlat
mov
dec
inc
cmc
jmp
and
dec
add
gs
cwtl
ret
sbb
ret
lock
leave
inc
aas
mov
and
clc
clc
adc
pop
dec
cwtl
inc
loopne
sub
pop
push
adc
fmulp
cwtl
in
lea
inc
roll
sarb
sbb
push
xor
xor
cs
add
dec
in
push
inc
xchg
inc
inc
cs
rorl
cmpsl
push
and
push
add
jmp
das
addr16
inc
sbbl
test
out
jg
push
push
bound
xor
stc
fwait
fwait
dec
adc
mov
dec
dec
or
mov
aas
add
add
mov
pop
adc
dec
cmpsl
inc
cmpsb
sbbb
xor
and
daa
popf
and
push
test
jg
or
or
sub
int3
xchg
push
out
pause
daa
or
sub
xchg
inc
add
pop
push
fisubrl
test
ss
mov
scas
push
sahf
push
les
sub
lock
je
scas
popa
in
rolb
addb
mov
inc
pop
les
and
lock
adc
xchg
je
aad
pusha
in
cwtl
push
fcomps
add
push
xor
mov
mov
pop
xor
push
pop
pop
mov
incb
aam
aam
push
in
or
lahf
mov
inc
leave
mov
sbb
ret
addr16
jno
test
or
or
cwtl
and
das
cmpsl
pop
sahf
sbb
sub
add
mov
cmp
rcll
out
inc
movsb
adc
inc
stc
sub
sub
nop
shlb
sti
push
jmp
pop
dec
mov
xor
mov
xchg
icebp
emms
sub
inc
rcll
popf
xchg
inc
push
jge
and
xchg
adc
dec
or
sbb
push
es
aam
mov
mov
inc
push
xor
bound
imul
aas
imul
pop
xchg
xorb
andb
or
iret
mov
divb
mov
sbb
das
imul
xchg
cmp
fmuls
jg
test
push
pop
xchg
dec
lods
pop
loopne
xchg
inc
push
test
pop
pop
jae
jbe
add
mov
adcb
nop
add
or
clc
or
pop
into
sti
lods
xchg
paddb
frstor
or
lods
inc
mov
xor
mov
test
lods
mov
push
pop
iret
adc
movsb
daa
adc
or
inc
and
xor
inc
inc
mov
xchg
add
sarb
lock
mov
es
xor
inc
dec
fists
out
push
clc
mov
mov
push
jo
add
je
sbb
daa
gs
rcrb
mov
sbb
mov
sub
adc
mov
xchg
in
pop
mov
push
mov
lcall
push
test
movsb
push
rcrl
mov
test
dec
imul
cld
xchg
ds
mov
mov
cmp
hlt
int
out
subb
movsb
aam
jo,pn
shlb
bound
nopl
enter
aam
das
mov
mov
mov
dec
fsubr
ret
add
int
dec
xchg
xchg
and
addl
sub
pusha
subb
mov
cmp
ficompl
mov
add
mov
add
add
cs
jns
je
imul
pop
jbe
ja
movsl
popw
xchg
imul
add
insl
push
movsl
scas
sub
add
in
add
popa
js
jo
sub
inc
xor
or
or
pop
mov
add
add
add
push
ss
adc
out
mov
and
and
jne
push
aas
or
xorl
clts
jnp
pop
and
cmpb
lods
gs
pop
insb
inc
or
jno
ret
add
jne
cmpsb
scas
mov
pop
mov
add
inc
adc
and
dec
mov
xchg
mov
addr16
pop
sub
and
add
daa
test
or
adc
jbe
jg
push
mov
add
add
daa
fistl
or
xchg
dec
loope
xor
lcall
pusha
outsl
mov
jg
pop
and
mov
jg
sub
dec
adc
mov
lds
or
add
add
xchg
dec
out
jo
dec
ljmp
xor
sbb
mov
out
sub
xor
add
sbb
testl
wbinvd
and
imul
lock
jae
test
test
jns
test
adc
adc
pop
or
sbb
pop
xor
and
xchg
test
imul
or
fs
inc
adc
je
push
push
dec
mov
push
or
mov
mov
in
push
sbb
xor
pop
push
mov
cmpsb
push
pusha
stos
out
adc
rcl
fiadds
xor
scas
lahf
sahf
add
adcb
cmc
nop
rcrb
push
add
mov
xchg
add
add
add
adcb
add
mov
xchg
testb
sbbl
push
sbb
movsl
popa
fwait
pop
xor
adc
add
add
or
cltd
xchg
rcll
mov
add
inc
in
jae
push
test
and
and
adc
bound
mov
mov
mov
inc
xchg
lods
lods
push
sbb
stos
ret
xchg
push
push
mov
js
and
loop
xchg
adc
pop
and
xor
add
loope
xor
addr16
pop
pop
add
sar
movsb
mov
daa
or
mov
lds
pop
jo
xor
push
xchg
subb
dec
daa
es
hlt
scas
jno
scas
decl
scas
dec
or
add
test
mov
jb
nop
fiadds
and
mov
cmpl
pop
cmpsl
in
xchg
sub
xchg
out
or
add
sbb
mov
ret
xorl
daa
sbb
cmp
dec
sbbb
xchg
add
dec
inc
in
nop
scas
sub
mov
dec
jae
pop
and
adc
jle
inc
xor
aaa
or
fisubs
ja
push
or
filds
jns
repnz
mov
in
mov
cmp
push
mov
not
pop
sbb
bswap
add
mov
push
add
loop
mov
in
inc
and
insb
dec
mov
pop
adc
rorl
and
mov
add
out
das
les
jb
les
rclb
mov
repnz
pop
xor
adc
je
inc
push
mov
mov
inc
inc
les
popf
ja
pop
sbb
ljmp
dec
dec
loope
push
or
hlt
lock
dec
adc
pop
nop
fmuls
in
adc
das
add
add
push
mov
in
enter
pop
pusha
in
cmp
out
sbb
and
fbld
lock
xor
pop
jo
dec
shr
pop
and
cld
mov
popa
dec
leave
add
mov
iret
jmp
nop
or
mov
fsts
push
add
push
test
fistps
daa
dec
out
out
ja
inc
push
add
or
jae
stos
add
int
sbb
int
mov
mov
js
cmp
mov
rcrb
push
mov
mov
inc
test
jbe
aam
pusha
jno
xchg
pop
sub
and
or
dec
nop
or
mov
push
push
mov
cmp
xchg
xlat
xor
push
in
jmp
or
aas
aas
gs
scas
inc
push
sub
push
sub
popf
out
mov
add
dec
adc
adc
imul
rorb
cmp
mov
insb
push
mov
add
out
loopne
nop
mov
jnp
inc
popa
addr16
into
pop
and
adc
in
pop
imul
ja
shlb
je
lahf
pop
mov
or
push
ss
sbb
add
adc
shl
jnp
push
push
iret
push
pop
sub
push
fistps
add
inc
das
test
test
push
mov
stos
lds
push
cmp
mov
loopne
or
pop
lods
adc
mov
or
pop
jo
mov
jb
add
dec
sbbb
add
mov
pop
xor
out
pop
push
addl
and
xor
push
mov
mov
push
add
inc
mov
jl
xlat
mov
in
cmp
hlt
call
pop
pop
stc
jae
pop
sub
and
mov
bound
push
pop
adcl
sub
jg
xchg
lret
or
jmp
or
or
sub
pop
test
add
adc
mov
xchg
hlt
add
pop
mov
mov
movsb
add
add
add
adc
mov
mov
push
push
sbb
rorl
lds
nop
and
or
cmp
adc
jg
and
mov
adc
mov
cmp
pushf
js
js
lgdtl
mov
mov
repnz
add
shlb
push
test
dec
sub
sub
add
sub
lcall
xor
bound
push
popa
mov
cmp
test
pandn
mov
repnz
rclb
mov
push
mov
mov
nop
shl
mov
cmp
push
pusha
mov
inc
sbb
negb
xor
push
or
cmpsl
add
and
inc
jbe
cmp
bound
mov
rcll
jmp
lds
adc
mov
pop
mov
xor
sub
mov
mov
adc
adc
dec
test
enter
addl
ret
pop
sbb
push
in
xchg
ret
cs
aam
nop
jmp
ret
and
adc
pop
xor
inc
prefetch
inc
ret
shlb
dec
nop
lock
jg
push
xor
or
jb
push
les
inc
adc
push
adc
inc
add
out
pop
and
test
outsl
pop
adc
add
push
add
push
adc
push
daa
les
or
dec
push
leave
xorl
cmp
cmpb
daa
pop
vcmpps
aas
or
popa
adc
inc
or
scas
pop
and
adc
inc
cltd
lret
nop
add
repnz
fisubrl
mov
jmp
js
sub
addr16
dec
inc
or
fisubs
shll
in
fiadds
and
and
push
adcl
and
mov
fdivs
add
cmp
call
jl
pop
cmpb
push
enter
add
or
out
sub
and
nop
sub
xchg
or
andb
test
addl
pushf
lcall
enter
nop
pop
shl
enter
sbb
movb
xor
out
pusha
cwtl
mov
shrl
jle
push
adcb
pop
dec
fistl
out
mov
inc
test
inc
out
and
mov
fiadds
and
or
fsubl
cmpsb
pshufhw
cmpsb
mov
outsb
testw
pop
or
adc
pushl
lret
add
jno
lahf
push
lret
dec
push
jo
mov
push
inc
ficoml
add
jae
pop
sub
call
or
and
nop
mov
sbb
push
lock
pop
fmulp
xchg
jl
add
ja
ret
and
test
add
dec
or
lahf
push
sub
inc
push
popa
sub
jmp
jns
push
shl
inc
test
shll
popa
js
testl
push
push
inc
pushf
call
add
xchg
int
xchg
jno
add
out
lock
or
sbb
pop
sbb
sbb
lock
add
pushl
pop
add
and
xchg
add
adc
shr
sarb
adc
xor
mov
pop
and
and
add
scas
nop
int
push
pop
cmp
ret
lret
and
adc
dec
andl
iret
lahf
xchg
push
rcrb
rcl
add
xor
fcoms
and
out
or
nop
fiadds
and
and
and
lcall
jbe
push
or
ja
inc
lds
jmp
mov
jmp
fisubrl
jg
push
cwtl
rcr
in
add
inc
icebp
and
outsl
dec
pop
rcrb
shll
pop
and
cmp
pop
or
mov
and
je
gs
adcl
or
or
call
inc
roll
sub
popa
inc
and
mov
dec
adcl
pop
mov
pop
sub
xor
ret
into
mov
cmpsb
mov
adc
adc
nop
sub
pop
or
sub
push
fs
dec
aam
dec
scas
inc
shlb
pushf
adc
nop
push
pop
sub
into
or
dec
mov
xor
fdivrs
cmp
dec
dec
aad
pop
push
mov
pop
cmpl
dec
aam
adc
mov
adc
nop
out
pop
xor
inc
push
loopne
js
add
pop
push
jns
int
pop
pop
jbe
cltd
add
push
jnp
out
sub
adc
lahf
add
insb
test
xchg
or
insl
movl
lahf
sahf
xlat
jns
mov
xlat
faddp
or
pop
adc
dec
xlat
adc
rcrb
mov
push
test
inc
and
xor
mov
outsl
fiadds
and
mov
sarb
fcoms
mov
lock
fcos
push
mov
les
cmpsb
fldenv
sbb
adc
daa
repnz
adc
sbb
sub
arpl
fadds
and
aaa
outsb
jp
or
insl
add
mov
adc
daa
inc
cmpsl
jbe
rorb
inc
test
mov
mov
push
fadds
and
inc
jo
popf
pop
push
sbb
inc
lahf
mov
jmp
inc
lea
fildl
jo
add
aas
rcl
lods
xchg
and
test
xor
aam
inc
fadds
sbb
cmp
insb
mov
addr16
mov
sbb
or
les
pop
adcl
inc
jnp
fisttpll
bound
push
pop
loope
fldt
and
pushf
push
rcr
add
inc
fistpll
push
push
hlt
fistpll
icebp
add
cmpsb
repz
pop
and
stos
int
decl
lods
nop
test
inc
ud2
dec
xchg
mov
orb
decl
lods
ret
xor
inc
xor
lret
cli
xchg
sub
loopne
in
push
pop
loope
scas
or
add
aaa
push
xchg
mov
fisttpll
subb
popf
sbb
lods
mov
fwait
out
popf
add
enter
mov
and
cmpb
xchg
mov
and
cmp
push
xchg
pop
mov
hlt
sbb
scas
in
popf
test
and
test
test
repz
gs
shl
aam
adc
insb
mov
mull
pushf
shlb
sbb
xchg
int3
or
fdivs
sub
ret
rorl
popf
cwtl
loope
xlat
sub
cmp
scas
adc
lods
mov
sub
xchg
int3
pop
mov
aas
mov
inc
fists
add
arpl
xchg
add
or
adc
and
dec
mov
daa
push
pop
add
push
dec
fs
adc
push
cmp
mov
or
gs
push
xor
add
mov
es
imul
adc
push
daa
andb
pop
adc
out
stos
in
xor
xchg
or
sbb
and
lahf
cmp
or
add
stos
iret
nop
scas
filds
mov
jo
push
or
vfrczss
addr16
mov
xchg
lock
rorb
dec
mov
add
loopne
xchg
inc
inc
sub
call
cmpb
xchg
jmp
pop
loopne
js
andb
daa
inc
and
stos
fs
and
ljmp
cmpsl
inc
repnz
cmpsb
or
shr
leave
add
and
jl
add
js
rol
loope
push
leave
sub
push
sbb
nop
inc
lahf
pop
subb
jns
inc
add
sldt
mov
clc
sub
jo
ja
out
pusha
sub
push
adc
and
adc
pop
inc
and
stos
jmp
and
and
mov
cmp
xchg
repnz
add
sbb
fsubl
repz
test
adc
inc
xorps
sub
mov
hlt
push
xchg
test
lcall
push
jb
and
cmc
push
fdivr
and
cmp
jae
jle
cmp
add
adc
fldt
xor
mov
adc
sbb
in
insb
or
sub
leave
and
shlb
andps
push
cmp
mov
or
sbb
adc
fs
and
int3
pushf
rolb
add
ret
jb
lcall
nop
inc
repnz
push
cmp
fsub
xchg
sbb
pop
into
cld
mov
cmp
add
jb
sub
fs
and
mov
and
call
mov
xor
cmp
test
dec
push
int3
fnsave
aaa
jb
sub
mov
enter
shrb
pusha
lahf
cmp
sub
nop
adc
jno
mov
imul
add
sbb
aas
sbb
xor
ss
add
pop
fistpl
add
test
or
pusha
stos
jge
mov
test
jns
push
test
or
je
xor
mov
inc
ss
or
pop
in
add
in
jge
lods
jmp
repnz
sub
movsb
pushf
scas
push
jl
cmp
push
or
in
inc
push
repnz
nop
scas
add
mov
scas
sub
mov
push
mov
rcr
sub
fnsave
imul
pop
adcl
mov
js
mov
nop
mov
mov
sub
mov
pushf
shlb
jmp
pushf
xor
or
in
sub
or
shlb
or
push
or
xchg
jge
mov
mov
call
sub
mov
add
and
mov
sub
and
mov
push
sub
mov
mov
arpl
sbbl
or
and
adc
sub
clc
repz
insl
and
inc
xchg
ret
xchg
ret
jns
popf
pusha
imul
push
and
call
daa
lock
pop
in
adc
imul
in
sub
lock
push
adc
sbbl
daa
fcoms
sbb
push
xchg
jge
enter
add
sub
add
xor
sub
daa
xor
aam
insb
lret
adc
hlt
pushf
lret
jns
sub
sbb
insb
lret
and
mov
sub
xor
cmp
push
jns
int3
dec
mov
and
sub
rorl
nop
adc
int
imul
iret
sub
mov
mov
mov
pusha
cli
push
pusha
xchg
mov
shrl
mov
repnz
aam
inc
bsr
cmp
aad
mov
subb
sub
cwtl
jge
pushf
pusha
mov
jne
mov
fcoms
clc
adc
fwait
unpcklps
daa
inc
push
and
lock
cmp
cmp
fidivs
sub
dec
imul
shlb
sbb
nop
xlat
sarb
or
push
jl
nop
in
test
push
movsb
mov
ret
or
sub
pop
sbb
jne
cmp
add
outsl
and
and
add
ja
sbb
mov
subl
fstl
leave
in
insb
add
inc
sbb
sahf
and
mov
or
push
push
and
mov
inc
ret
test
aam
sbb
add
testb
inc
xor
inc
add
sbb
lods
dec
dec
push
jae
push
aas
insl
bound
jns
sbb
aas
ss
add
mov
mov
dec
xchg
ja
mov
xchg
out
lret
pop
add
lea
add
xchg
out
sbb
dec
sub
pop
and
sub
addl
inc
sahf
xchg
sbb
mov
xor
add
jne
inc
adc
sub
adc
pop
outsb
xchg
je
fmuls
outsb
push
push
call
inc
jle
mov
or
xorb
pop
mov
arpl
push
cs
dec
add
in
scas
sbb
dec
outsb
pop
push
rclb
jb
pop
dec
inc
das
push
ficompl
and
inc
push
emms
out
inc
adc
xor
lods
jg
jae
push
add
cmp
and
xchg
xor
push
or
push
push
sarl
pop
addr16
adc
inc
andl
and
fwait
sub
bound
lcall
inc
daa
inc
inc
sub
or
sbb
outsb
addr16
or
sub
les
xor
fs
pop
mov
sbb
ljmp
mov
ret
sub
inc
push
and
pop
push
popa
scas
jb
mov
mov
push
push
ss
daa
inc
imul
push
adc
in
or
push
arpl
mov
cmpsl
andb
jae
dec
sbb
sbb
test
inc
imul
jo
add
movsb
mov
pop
inc
push
call
or
push
repz
cmp
inc
decl
and
dec
notl
sbb
pop
jae
push
mov
add
sbb
loopne
scas
sbb
push
rcll
push
jns
inc
push
push
test
xlat
add
pop
jbe
pop
adc
pop
shlb
dec
pop
push
inc
test
dec
testl
aaa
push
imul
mov
out
out
fsubs
ja
jae
sbbl
test
add
aaa
or
cmp
inc
in
mov
sub
scas
push
sbb
xchg
and
jb
fimull
pop
adc
mov
loopne
xchg
push
xorl
inc
xlat
aaa
sbb
ja
loop
inc
dec
pop
inc
scas
push
mov
sbb
adc
pop
andl
add
insl
and
sub
mov
mov
adc
inc
outsl
jae
mov
mov
in
mov
je
cmp
cmpsl
jae
jne
mov
daa
xchg
push
xor
lods
sub
inc
ret
js
mov
insb
inc
xchg
xchg
in
xor
mov
ret
outsl
xchg
pop
jb
sbb
sbb
call
pop
call
in
xchg
mov
insb
xchg
and
imul
cmpsb
ss
inc
inc
xor
inc
inc
daa
add
lret
dec
mov
push
outsl
mov
xchg
xor
insl
outsl
pusha
out
or
nop
cmpsb
pop
and
insb
pop
out
push
add
xchg
mov
push
lock
and
or
clc
in
or
outsl
mov
rcll
or
mov
bound
add
cmp
subb
adc
xchg
push
fcompl
adc
aas
mov
and
and
fs
mov
jae
and
push
imul
push
jb
adc
or
add
push
mov
ret
pop
in
nop
add
push
add
and
mov
pop
sub
lods
sbb
sub
cmp
scas
xor
push
mov
aad
lods
mov
mov
push
xor
shl
pusha
push
mov
inc
xor
cwtl
push
sti
movsl
xchg
add
mov
adc
xor
push
add
and
adc
mov
lock
je
inc
pop
in
movsl
frstor
ds
jmp
or
or
adc
mov
cld
push
test
cmpsl
adc
push
sbb
jecxz
mov
mov
nop
dec
jbe
push
adc
test
push
xorb
in
and
cmp
push
xchg
pop
add
popf
mull
sbb
dec
add
xchg
dec
sbb
rorb
pusha
nop
in
adc
pop
xor
dec
xor
test
mov
and
lahf
fs
popa
and
xor
dec
shlb
mov
fwait
mov
push
mov
sbb
or
mov
xor
fidivrs
inc
shll
inc
pusha
dec
dec
lods
inc
pop
lea
pop
xor
or
loopne
and
dec
cltd
mov
push
dec
mov
fs
pop
daa
xchg
add
ja
jg
sbb
push
enter
insl
loopne
sbb
push
inc
adc
push
sti
mov
inc
or
pop
push
mov
sbb
mov
imul
lock
aaa
outsb
ret
ja
pop
sbb
xor
daa
push
fidivl
sbb
daa
enter
pop
inc
pop
fisubl
loop
add
inc
pop
xor
cmpsl
push
jo
push
insb
pusha
xchg
ja
jp
push
inc
mov
add
xor
xchg
dec
dec
push
and
dec
rorb
divl
mov
sub
add
mov
ret
xor
subb
or
or
pop
pop
mov
inc
call
aas
or
adc
frstor
xorl
cmpsb
or
inc
add
pop
or
and
mov
arpl
rolb
adc
dec
or
je
fisubrs
adc
pop
inc
sub
jbe
scas
mov
in
imulb
adc
enter
sbbb
clc
jo
inc
adc
bound
add
or
fisubrs
and
or
adc
add
push
mov
add
or
cld
imul
jns
jl
dec
fwait
std
cwtl
or
jne
movsl
add
and
ret
push
cwtl
sbb
add
pop
mov
sti
and
and
sub
mov
mov
xchg
mov
insl
and
hlt
xchg
and
cmp
add
add
push
dec
and
mulb
mov
inc
loop
fs
js
mov
fstl
cmpsb
mov
out
cmpb
or
test
cmp
sub
add
cltd
mov
mov
fimull
mov
pop
lea
cmp
rol
dec
xor
in
and
push
sub
cmp
inc
add
dec
faddl
push
mov
xor
xor
jbe
sub
and
dec
dec
cld
sub
out
xchg
and
jmp
inc
dec
jne
inc
add
pop
fiaddl
add
xchg
mov
rcl
mov
cmp
loop
dec
pop
lock
push
mov
loope
aas
sub
xlat
jb
cmp
inc
dec
jb
push
popl
rol
adc
mov
jl
imul
inc
mov
ds
mov
mov
mov
pop
adc
jo
mov
out
lret
test
lods
in
pop
outsl
popf
add
or
dec
in
mov
lea
add
or
scas
and
scas
or
fs
or
or
push
imul
inc
seto
subb
lahf
out
dec
cli
mov
pop
out
stc
pop
stos
stos
push
mov
and
imul
movsl
enter
stos
ds
and
iret
adc
fildll
inc
add
pop
inc
jnp
enter
jg
imul
je
shll
pop
shlb
fwait
cmp
xorb
mov
cli
inc
sub
and
adc
cmp
pushf
and
sbbl
inc
push
mov
scas
lods
stos
and
cs
jo
sbb
mov
dec
mov
and
and
ljmp
sbb
popf
add
add
nop
mov
pusha
xchg
es
dec
inc
in
mov
pop
sbb
mov
pop
ljmp
pop
movsb
and
or
or
adc
rcrb
sbbb
jns
xor
imul
dec
pop
or
ficoms
sbb
xchg
xchg
adcb
stos
fildl
fcmovbe
or
fs
mov
pop
adc
jo
dec
daa
mov
aam
mov
push
jge
or
sub
jmp
push
lock
jnp
mov
pop
push
xchg
fs
out
mov
push
fnsave
andb
leave
xchg
mov
sub
xor
mov
mov
sub
out
sub
adc
addr16
lea
inc
adc
pusha
bound
jnp
imul
fisubs
dec
mov
int3
das
and
call
mov
pop
mov
fsts
jno
bound
pop
and
int3
scas
add
push
add
inc
imul
and
test
loopne
cmp
adc
dec
inc
test
adc
and
pop
cmpb
push
push
pop
data16
loopne
ret
sub
imul
fidivrl
push
mov
dec
inc
push
pop
cmp
cmp
sar
outsl
mov
rorb
loope
insb
push
inc
and
pop
mov
in
sbb
pop
pop
lret
mov
and
nop
and
xchg
cwtl
sbb
popa
insb
inc
push
mov
inc
fs
dec
dec
sbb
jmp
or
and
cmp
aam
test
pop
lret
xor
xchg
int3
je
nopl
stc
popa
xor
and
push
add
jbe
push
add
add
or
cmp
sbb
ja
jne
mov
push
mov
mov
mov
and
inc
sti
pop
sbb
inc
jae
es
enter
or
fcmovnbe
mov
enter
xor
add
popl
adcb
pusha
or
pop
in
and
mov
invd
xor
je
cmpsb
std
rorb
movsb
xchg
jmp
imul
dec
aad
xor
mov
pop
clc
in
pop
daa
xchg
or
xchg
rol
xor
mov
adc
rolb
sbb
xor
inc
sbb
enter
push
sub
mov
push
and
repz
ret
mov
adc
jle
push
rorb
or
mov
xor
mov
bound
lret
sub
sbb
mov
int3
or
pop
add
dec
inc
insb
leave
mov
cmp
xor
fadd
xor
clts
xchg
cmpsb
mov
iret
sub
inc
push
or
lods
in
ret
pop
mov
pop
cmp
inc
push
cwtl
add
add
fcmovnb
ret
in
sbb
inc
in
mov
in
pushf
nop
adc
movsb
mov
fisttpl
xor
mov
ds
xchg
data16
rol
rolb
push
call
push
lock
add
aad
and
rolb
and
cmpsl
adc
and
xchg
dec
dec
fistpll
fcoms
cs
nop
dec
dec
das
lods
leave
adcl
dec
cs
ja
mov
std
pop
popa
mov
add
dec
xchg
or
inc
pop
icebp
add
icebp
mov
mov
add
xchg
push
sub
xlat
adc
inc
sub
inc
inc
mov
imul
mull
loop
fsub
test
adc
subl
lods
test
xchg
adc
stos
and
pop
xor
movsl
out
fwait
xchg
push
call
enter
add
add
and
mov
pop
jmp
xor
adc
je
inc
xchg
rolb
and
cli
fnstenv
push
rorl
pop
loopne
inc
fisubl
lock
mov
insb
mov
inc
repnz
inc
int
fwait
or
sbb
adc
imul
sub
mov
loopne
imul
pop
or
xchg
sub
sbb
incl
pop
or
push
and
sbb
add
les
rcl
jge
roll
inc
adc
pop
gs
push
das
sub
cs
push
je
cmp
mov
call
push
xor
shl
jecxz
or
adc
sbb
jo
pop
adc
sub
fwait
jl
fbstp
in
loopne
test
les
sahf
jmp
imul
insb
and
call
jno
pop
jne
imul
nop
mov
mov
cltd
inc
scas
xlat
jae
xchg
add
xor
jl
shl
or
inc
jmp
adc
and
mov
add
jne
sbb
cs
add
fcoml
and
jg
popf
xor
out
xchg
jmp
sub
test
dec
or
lret
andl
popf
cli
adc
flds
dec
ficoml
sub
add
scas
das
mov
and
rolb
push
movsb
xor
dec
dec
cmpsl
lahf
and
sbb
rclb
and
movsl
inc
scas
push
xchg
sahf
and
push
sbb
adc
xchg
movb
cmp
lds
nop
nop
mov
ja
jl
jne
or
jno
xor
mov
ja
add
jle
inc
mov
push
test
xchg
lret
imul
fs
jmp
cmpsb
movsl
pop
cmp
je
loopne
add
loopne
inc
dec
jne
std
pop
or
adc
sub
scas
sbb
sbb
jnp
xchg
dec
mov
push
mov
cmp
push
mov
cltd
pusha
nop
inc
add
imul
sbb
mov
fldcw
adc
cwtl
add
ja
icebp
mov
dec
cwtl
add
aaa
in
dec
outsl
or
xlat
es
dec
cld
mov
pushf
dec
sbb
aad
or
fisubrl
cmp
es
push
mov
dec
roll
aam
add
dec
scas
in
xor
add
push
dec
test
faddl
nop
imul
das
in
dec
test
int
aam
movsb
add
and
pop
xchg
or
in
or
dec
mov
int3
cmpsb
pop
leave
and
enter
dec
leave
inc
les
les
rorb
mov
mov
sub
mov
mov
and
fdivl
orb
lock
sbb
sbb
xchg
pushf
test
sbb
enter
movsb
sub
xor
and
enter
and
cwtl
enter
push
and
test
add
xor
orl
test
and
enter
or
pop
divb
cmp
js
jb
add
cmp
pop
and
jo
enter
dec
insb
sbbl
pop
push
push
xor
push
in
pop
push
pusha
pusha
push
inc
push
in
pop
pop
jb
push
jb
adc
push
jbe
add
push
scas
push
nop
add
inc
outsb
das
jl
push
dec
dec
xor
and
cld
insl
pushf
dec
cmp
pop
dec
clc
adc
inc
inc
nop
add
in
inc
inc
sbb
adc
cmp
call
adc
cmp
adc
cltd
aaa
push
and
imul
enter
mov
inc
stc
sub
sbb
inc
enter
in
jb
loopne
outsl
jno
nop
and
fs
jb
jns
add
cmp
xchg
and
sbb
adc
insb
in
and
inc
addb
inc
xor
lahf
xor
shr
cmpsl
ss
adc
sub
inc
push
int
addb
push
fwait
add
negl
mov
and
addb
adcb
daa
adcb
mov
or
mov
xchg
fcom
add
adc
pop
push
rolb
ja
pop
mov
pusha
add
shr
add
sub
and
sub
add
pop
inc
sub
sub
sub
bound
test
nop
xchg
pusha
int3
mov
or
ret
fisubrs
xor
cs
inc
mov
adc
mov
and
and
das
ljmp
jbe
pop
or
jp
inc
outsl
fs
jb
cmpsb
loopne
dec
scas
adc
jecxz
sbb
scas
xor
push
testb
popf
push
hlt
into
push
mov
inc
dec
bound
sbb
cmpl
aas
mov
sub
adc
nop
and
xchg
push
clc
clc
xor
repnz
hlt
or
xchg
sbb
lock
and
mov
xchg
fs
cmp
add
push
les
mov
jg
sbb
dec
mov
sbb
in
mov
or
jg
xor
add
ja
dec
in
xor
out
ja
xor
mov
or
daa
sbb
push
loopne
dec
cmp
sub
fmull
dec
mov
lcall
sarb
lret
xor
int3
loopne,pn
enter
xor
sub
xor
xchg
clc
jb
or
outsl
adc
push
fs
fsubrl
call
rolb
les
cmpsl
leave
adc
cmp
inc
cmp
push
aaa
xorl
sbb
mov
adc
mov
fidivs
or
ja
cmp
xchg
add
pop
outsl
or
jb
add
add
xchg
pop
sub
xchg
add
nop
pop
adc
fidivl
sbb
rclb
or
daa
fcmovbe
les
sub
sbb
dec
scas
cltd
pop
sbb
es
add
or
cmp
xor
orl
inc
rorl
push
adc
test
xlat
add
mov
sbb
test
orb
test
and
lea
sbb
push
add
push
xchg
ds
adc
mov
pop
lock
cwtl
adcl
test
pop
or
notl
incl
call
sysenter
lods
adc
roll
fisttpll
mov
shl
std
pop
inc
out
cmp
loopne
pop
movsl
lret
push
push
rclb
mov
andl
popf
sbbb
and
inc
add
sbb
push
add
mov
sub
rclb
mov
rorb
xchg
inc
xor
xlat
pusha
cmp
inc
cmovae
aas
imul
repz
std
xor
cmpsb
loope
inc
sbb
jle
add
xor
jns
inc
xchg
xor
mov
pop
xor
inc
loopne
pop
inc
push
and
inc
mov
push
inc
in
fisubl
inc
inc
inc
mov
mov
mov
push
pop
pop
sar
inc
sbb
dec
mov
testb
mov
pop
push
ds
cmp
push
je
divl
fistl
in
or
daa
push
push
mov
push
inc
push
mov
mov
or
or
gs
jbe
adc
filds
and
fstps
push
cwtl
inc
out
push
sub
sub
addb
jp
mov
push
inc
daa
dec
insb
call
jo
mov
sarb
nop
jg
inc
dec
loop
lea
mov
adc
add
inc
enter
lahf
sbb
inc
add
sbb
sub
mov
lcall
xchg
push
std
mov
ds
push
dec
push
dec
push
adcl
call
dec
imul
mov
es
gs
sbb
orb
mov
xchg
adc
insb
pop
inc
cmpl
or
sarb
movsb
nop
push
inc
ret
xor
mov
and
add
out
mov
or
ja
clc
push
mov
pop
xor
dec
popa
pop
movsb
mov
add
jp
push
sbb
lds
inc
and
test
adc
popa
adc
in
xchg
cltd
in
sahf
sbb
jne
dec
lahf
nop
roll
adc
inc
add
adc
push
add
fstpt
or
or
out
ss
outsb
jno
pop
aas
iret
push
call
pop
adc
rorb
neg
push
add
add
cmpsl
xchg
mov
dec
daa
mov
scas
insb
loopne
clc
push
mov
cmpsb
dec
fxam
imul
icebp
dec
and
fsubl
arpl
adc
sbb
sbb
or
sub
nop
inc
push
and
sub
in
push
add
or
rcrl
addl
sbb
scas
inc
mov
jecxz
adc
xchg
pop
loop
clc
jbe
push
adc
fs
sub
mov
sti
clc
mov
adc
push
push
or
dec
jl
xor
xchg
inc
jmp
add
fcmovnu
sbb
pop
test
add
idivb
movsl
test
mov
xchg
and
jg
dec
mov
daa
enter
sbb
sbb
ret
clc
and
or
loop
les
aaa
jmp
insl
inc
nop
add
pop
fildl
mov
sbb
test
sub
and
push
in
push
add
add
push
in
xor
addl
in
ja
cmp
lds
and
aaa
sbb
adc
push
lds
sbb
and
js
cwtl
adc
imul
dec
int
jb
push
iret
inc
fst
cld
dec
mov
mov
inc
pop
sbb
lret
repnz
sarb
fistpll
fwait
das
popf
test
cmp
das
fs
add
push
push
nop
add
pop
repnz
adc
daa
in
leave
and
dec
add
or
xchg
jl
test
adc
xchg
pop
sub
fwait
mov
movsl
jo
aam
aad
dec
pop
jmp
cmp
scas
add
dec
test
iret
and
and
clc
add
cld
repnz
jo
ret
ljmp
add
test
cmp
cmp
pop
cwtl
mov
xor
outsl
or
inc
jecxz
aad
in
sbb
adcl
aam
jmp
fistps
gs
fdivl
test
pop
pop
or
mov
nop
lock
pop
pop
mov
dec
sub
xchg
push
pop
addb
add
mov
adcb
and
inc
mov
jnp
xchg
mov
adc
mov
xchg
xor
pusha
and
xchg
fadd
xchg
add
pop
es
test
test
add
mov
leave
mov
cmp
cmp
sbb
in
xchg
cmpsb
cwtl
call
pop
mov
xchg
jno
out
fs
dec
shl
pusha
fnstenv
call
add
out
sub
lods
pop
repz
sbb
leave
mov
leave
jae
aam
adc
repnz
test
push
adc
aam
flds
pop
sub
xor
push
pop
aas
xchg
inc
add
pop
rorb
es
sub
lea
pop
xchg
xchg
pop
fisttps
arpl
fisubrl
test
mov
sub
push
movsl
or
clc
pop
add
mull
push
lcall
int3
ret
add
lcall
hlt
dec
pcmpgtd
add
xchg
ja
mov
lock
inc
push
ja
add
adc
dec
pop
test
rorl
stos
es
sub
mov
dec
sbb
and
dec
lds
enter
push
push
rclb
xchg
mov
and
lods
push
push
ljmp
sbb
ret
loop
adc
xor
xchg
test
pop
ja
cmp
mov
sub
sbb
test
pop
add
mov
les
or
xchg
xchg
mov
fimull
rcrl
mov
dec
or
and
cs
ss
xor
pop
andb
dec
dec
xchg
dec
xchg
or
dec
xor
xor
aaa
sbb
pop
testl
mov
inc
and
or
inc
negb
cltd
inc
mov
inc
rcl
test
sbb
addr16
pop
mov
push
xchg
push
rolb
insb
sub
mov
push
sub
inc
add
dec
bswap
adc
mov
and
iret
and
inc
dec
pop
push
gs
jne
lods
dec
push
pusha
rcrb
sbb
inc
lock
and
pop
adc
xlat
aas
and
push
nop
push
push
lods
push
dec
pop
jle
sub
cwtl
pusha
lods
stos
out
sub
dec
and
outsl
jl
adc
insl
pop
inc
jg
mov
pop
addb
aas
xchg
lret
andb
and
xor
sti
mov
sbbb
sbb
sub
je
push
add
dec
sahf
mov
sub
pushf
xchg
xchg
addr16
xor
xchg
push
orl
mov
int
popa
test
mov
test
and
dec
sbbl
test
adc
mov
in
pop
jne
enter
ss
xor
dec
push
ljmp
jo
and
lea
aas
cltd
dec
xchg
enter
xor
iret
push
push
insb
aaa
mov
lea
sbb
mov
popf
or
or
into
mov
sbb
lods
out
ja
roll
out
incl
sbb
adc
jge
push
adc
push
jno
or
nop
cmp
loopne
in
fcomps
ret
pushf
add
sbb
dec
xchg
adc
mov
xchg
test
mov
push
clc
stc
cli
and
add
sti
out
pop
pop
dec
push
enter
cmp
ret
dec
mov
push
dec
adc
dec
cmpsb
daa
jo
push
mov
and
cmp
mov
cmpsb
imul
add
addb
mov
lock
pop
fistps
add
pop
mov
cmpsl
es
inc
jbe
cmp
cmp
sti
nop
int3
cmpl
rcll
jle
sbb
pop
add
je
jae
jne
mov
dec
mov
adc
loopne
cmp
add
nop
mov
sbb
cmp
pop
mov
inc
lods
test
jns
inc
push
in
movsb
fdivl
pop
jb
add
sbb
sbb
rorl
sbb
sbbb
cmp
and
in
or
test
popa
pop
jb
movsb
outsl
inc
sbb
pop
jb
mov
add
insb
nop
add
nop
nop
mov
shll
fdivs
and
movsb
movsb
movsb
jb
outsl
pop
mov
pop
jb
pop
xor
insb
add
hlt
ja
and
jb
or
jbe
sbb
and
nop
add
cmp
push
je
pushf
shrl
int3
ja
mov
xchg
dec
shll
call
xor
sub
cmc
mov
pop
rcrl
add
push
sbb
add
dec
imul
push
jecxz
mov
dec
ror
push
popa
outsb
jnp
lods
xor
enterw
shll
xor
dec
dec
pop
imul
ss
push
out
lcall
push
push
push
and
mov
lcall
andb
lcall
leave
xchg
push
sub
sbb
pop
jo
jnp
loop
dec
jo
push
imul
bound
push
push
and
ss
sbb
push
push
imul
sahf
outsb
pusha
sbb
or
add
xchg
xor
int3
in
sbb
pop
add
push
add
push
addb
jl
push
repnz
int3
clc
insl
push
xor
push
pop
repnz
cld
mov
push
adc
les
mov
sub
clc
sahf
leave
pop
repnz
mov
ja
adc
xchg
push
pop
nop
xchg
sbb
push
mov
or
jne
subl
mov
rolb
sub
out
jl
sbb
nop
mov
cmpsb
cltd
adcl
lcall
ud0
add
add
mov
pop
add
mov
mov
lock
js
aaa
push
or
cmpsb
call
test
mov
mov
sbbl
push
pop
and
fldcw
mov
inc
push
dec
and
mov
stos
repnz
or
insb
leave
scas
in
aaa
mov
inc
mov
mov
arpl
and
mov
arpl
sub
or
arpl
mov
ja
xchg
mov
cltd
shrb
lea
mov
fs
incl
test
pop
or
call
enter
or
pop
add
mov
sbb
mov
sarb
and
push
jecxz
pop
sbb
fdivrl
les
xchg
xchg
adc
inc
lcall
and
adc
xor
pop
test
popl
jl
prefetch
inc
dec
sbb
inc
add
or
adc
adc
int3
mov
sbb
call
dec
mov
jle
inc
test
dec
adc
jle
sbb
pop
cmp
leave
fsubrs
lods
xchg
mov
xor
enter
sub
test
mov
leave
imul
pop
xor
leave
pop
mov
mov
xor
fadd
or
pop
push
jbe
in
lret
mov
jl
ret
mov
loopne
cmp
xchg
imul
xor
pop
aaa
testb
xor
xor
in
flds
sub
js
mov
fs
dec
push
jnp
scas
int
push
jp
lret
push
fldt
adc
cmp
sub
mov
mov
xchg
pop
adc
mov
push
mov
fistpll
arpl
je
sub
sbb
add
push
pop
daa
stc
and
xchg
pop
cmp
test
push
adc
sub
in
sbb
jmp
jne
jg
jle
push
sub
imul
mov
mov
sbb
movsl
loope
cmp
or
outsl
inc
scas
pop
add
sbb
mov
sub
test
arpl
inc
adc
mulb
pop
rcll
or
mov
scas
push
xchg
pushf
sbb
push
dec
or
or
pop
sbb
and
inc
push
rcr
adc
jo
cmp
or
test
test
bound
imul
sbb
pushw
inc
jp
shlb
daa
jmp
xor
jbe
dec
aas
xorb
pop
adc
insl
sub
mov
xor
mov
cmp
sub
xchg
and
sub
in
movsl
in
inc
xor
dec
aas
dec
add
andl
repz
ret
loopne
cmp
pop
mov
add
xchg
mov
aad
sbb
push
xor
lahf
nop
dec
aas
movsb
pop
and
jle
jo
lcall
ljmp
dec
stos
shll
cmc
or
pop
fnsave
aam
adc
pop
pushf
push
aaa
mov
push
fstps
adcl
std
and
jne
ret
loopne
lret
lods
nop
xorb
cwtl
add
aaa
mov
insb
push
ret
dec
and
mov
sub
push
movsb
push
push
add
dec
and
jge
icebp
sbb
outsb
sub
cmp
insb
cmpsb
xchg
xor
insb
in
movsl
je
test
je
mov
loopne
xlat
pop
xor
clc
pop
loopne
jmp
jl
mov
loopne
inc
jne
pop
add
mov
dec
inc
pop
push
xor
loop
cmpb
jg
mov
adc
pop
inc
insl
xchg
mov
xor
jns
xchg
add
fiadds
push
push
mov
dec
cltd
mov
add
jae
adc
insb
add
filds
ss
test
push
lock
jne
cmp
xor
push
sbbb
pusha
dec
sbb
cmpl
repnz
mov
jne
xor
inc
ss
push
mov
pusha
sbb
sub
sbb
sbb
cwtl
adc
insb
dec
arpl
imul
add
test
cmp
ja
ret
js
pushf
mov
adcl
jge
lock
inc
or
sbb
outsl
add
outsb
fldt
fildll
or
pop
or
xchg
orb
push
adc
or
jbe
call
xchg
adc
cmp
jae
jg
loopne
inc
dec
dec
movsw
movsl
inc
pusha
xchg
sbb
ret
mov
jb
and
xor
sbb
or
mov
and
mov
jo
shrl
mov
mov
jns
rolb
xor
push
imull
or
add
inc
dec
outsl
dec
add
fs
dec
adc
xor
push
and
insl
jp
cmp
push
sbb
cmp
ss
xchg
fs
cld
test
jmp
jecxz
mov
xor
and
pop
mov
decl
jno
xor
jmp
cmp
je
inc
cmp
jne
sti
stos
popa
push
sub
push
cmpl
loop
jb
inc
push
adcb
and
shlb
add
pop
mov
mov
mov
ss
int3
and
cmpsb
push
enter
xor
xor
out
sbb
inc
mov
ret
cwtl
test
adc
inc
sbb
stc
or
push
es
jmp
jecxz
in
pusha
fucomp
pop
sbb
inc
inc
cmp
leave
nop
add
mov
xchg
xchg
cmp
imul
push
adc
scas
popa
movw
adc
scas
ret
push
push
nop
jecxz
sub
mov
or
int
adc
xor
lcall
shr
subb
in
jb,pt
movsl
mov
or
and
sub
int3
nop
mov
js
sbb
adc
sub
in
jb
pop
cmp
sub
shlb
icebp
cs
inc
nop
je
inc
xor
mov
inc
inc
mov
sub
in
sbb
pop
inc
inc
jo
lret
int3
xchg
test
rcll
jge
mov
sbb
cmpb
adc
ja
mov
sub
dec
add
add
shlb
xchg
sub
dec
mov
loope
mov
pop
loopne
testb
scas
or
rcll
lea
add
ds
pop
pusha
cmpl
mov
cmp
mov
insl
mov
movsb
sbb
pop
movl
pop
lea
push
mov
sub
clc
orl
jno
cmc
add
loope
setne
or
mov
pop
lods
mov
xor
pop
in
ret
lods
lcall
lods
adc
fistl
jle
enter
sub
cmp
pusha
add
shll
orb
neg
sti
dec
je
jmp
scas
add
jmp
adc
adc
or
sbb
mov
add
xor
push
hlt
add
sbb
inc
push
inc
dec
or
xor
inc
lret
push
lcall
push
dec
lea
pusha
xchg
lret
push
inc
sbb
push
out
hlt
ret
xchg
jno
add
stos
jmp
or
cli
je
add
xor
mov
js
in
mov
out
sub
sub
arpl
icebp
loop
scas
pop
cmpsb
in
js
lock
sbbl
jne
rol
inc
jne
xchg
jle
sarb
ss
shl
addr16
sub
push
cmp
pop
push
xchg
ja
daa
test
jne
mov
inc
test
shlb
xchg
arpl
push
ror
push
xchg
ja
jmp
dec
pop
fdivl
dec
jne
add
xor
outsl
jmp
and
mov
sbb
adc
xchg
fimuls
cli
push
test
xchg
je
mov
and
out
or
mov
add
movsl
sub
add
sahf
mov
cltd
rorb
pop
inc
sub
sbb
inc
jne
and
outsb
outsb
dec
pop
pop
cli
les
pop
in
arpl
adc
and
xchg
imul
sbb
ret
ret
or
sbb
add
fcomip
lods
adc
add
jns
inc
pop
addb
lea
adc
mov
inc
jns
jnp
xchg
pop
and
adc
dec
test
dec
xchg
outsl
or
adc
mov
or
jle
and
sbb
jne
test
inc
sbb
addr16
les
push
sub
sbb
pop
inc
mov
dec
arpl
jae
hlt
inc
gs
pop
int3
addb
hlt
pop
xor
mov
mov
jp
les
das
add
dec
dec
mov
push
inc
jmp
cmc
int3
xor
adc
mov
inc
xchg
sbbl
aas
mov
inc
sub
xor
adc
cli
inc
jmp
mov
rorb
test
sub
jg
jl
mov
xchg
mov
or
or
mov
pop
adc
add
mov
mov
push
popf
enter
das
mov
test
dec
cmpsl
ds
idiv
push
xor
shll
mov
jns
pop
xor
push
jecxz
or
mov
and
mov
inc
xor
dec
popf
fimuls
ret
dec
inc
add
jp
push
add
or
popa
mov
movsl
in
cs
dec
icebp
or
adc
jo
jmp
and
dec
jmp
or
mov
in
jns
sarl
imul
rclb
repnz
shrb
add
addl
adc
call
sub
push
or
pop
mov
mov
xchg
clc
jge
push
or
push
push
sbb
sub
cmp
adc
loopne
and
jecxz
fs
xor
jnp
dec
sbb
popa
mov
pushf
mov
or
sub
lea
and
add
std
pop
push
xor
mov
ljmp
ja
mov
roll
xchg
jl
jle
dec
pop
push
daa
push
pop
mov
xor
aam
mov
addr16
add
insl
xchg
pop
testl
xchg
mov
pop
add
jp
add
in
ss
popf
testb
jmp
outsb
pop
and
insl
fadds
cmpl
mov
js
popa
imul
test
outsb
adc
sub
imul
int3
cmp
out
mov
repnz
mov
leave
aam
mov
andl
and
inc
mov
cmp
out
popa
mov
aad
inc
icebp
ja
mov
add
pop
xchg
cmpsb
jae
popa
lahf
aam
cmp
cld
sbb
and
cltd
testl
sbb
or
adc
addb
sti
int
rep
aas
pop
push
pop
lret
mov
and
aam
push
xchg
mov
out
lret
aad
cmp
iret
sub
fs
pop
shll
add
andl
jmp
into
add
mov
ja
lahf
outsl
in
rolb
adc
addr16
mov
jp
sub
rcr
or
or
sub
incb
or
pop
adc
sbb
es
lret
mov
or
xchg
sub
into
xor
mov
mov
push
xchg
mulps
jmp
gs
sbb
push
adc
leave
inc
pop
dec
xbegin
cs
fiadds
adcb
loopne
cmpsb
or
andb
push
sti
fcomps
cmp
je
xchg
xchg
adc
subb
sbb
pop
mov
push
push
sub
arpl
testb
dec
xor
mov
aas
ret
or
xor
cmovno
es
test
adc
push
inc
inc
push
push
sqrtps
and
dec
pop
xor
sbb
jge
or
movsl
inc
cmp
adc
push
daa
cs
add
fildll
or
add
pop
les
or
fstpl
pushf
add
add
subb
or
push
fmull
iret
fiaddl
dec
push
add
enter
orl
push
fildl
dec
in
outsl
loopne
adc
inc
pop
push
int3
xchg
or
cs
push
sbb
xorb
arpl
jno
mov
js
mov
arpl
push
outsl
add
repnz
nop
add
push
pop
dec
cltd
dec
pop
and
dec
pusha
test
inc
lea
enter
dec
sbb
lahf
push
pop
fdivs
dec
cmp
rcll
nop
mov
xchg
inc
mov
gs
jo
cmp
in
mov
jno
or
mov
popa
mov
xchg
mov
pushw
xor
jb
sbbb
ss
or
inc
xor
shll
fcoms
sahf
out
fwait
or
js
mov
iret
adc
jns
sbb
popa
sbb
scas
inc
loop
cwtl
push
adc
mov
leave
sbb
cld
mul
lea
lret
lcall
jge
sub
cmp
inc
adc
and
inc
lods
loopne
lahf
pop
inc
and
iret
incl
sbb
out
mov
xchg
mov
pop
sbb
rorl
subb
xor
xchg
push
inc
test
cmp
movsb
xor
iret
dec
inc
inc
add
or
shrb
lock
popa
xor
xchg
gs
rorl
cmp
dec
sub
outsl
shrl
fwait
sub
mov
xchg
pop
and
sub
negb
inc
inc
add
push
mov
mov
fwait
inc
inc
add
sti
inc
inc
pop
add
jmp
flds
fmuls
fcmovnb
sbb
add
inc
add
xchg
inc
sbb
dec
sahf
add
lahf
or
sub
ror
add
or
jecxz
push
adc
or
add
call
jns
repnz
and
pushf
xchg
xor
pop
pop
mov
mov
sti
notl
jb
dec
mov
fwait
mov
sub
sub
rclb
dec
dec
dec
inc
roll
test
shrb
mov
movsl
ret
xor
sub
or
mov
into
dec
cmp
mov
cld
test
mov
movl
add
lods
imul
mov
dec
jo
sbb
xchg
outsl
shlb
mov
scas
dec
lock
pop
add
fcomps
daa
mov
adc
pop
ja
inc
cs
or
cmp
orl
cs
and
push
lret
sub
dec
outsl
add
add
pushf
xchg
add
movb
jg
outsl
ja
xor
jnp
pop
push
sub
addr16
dec
and
andb
sbb
mov
sub
jmp
mov
mov
arpl
out
pusha
mov
pop
mov
in
push
mov
les
push
inc
pop
and
xchg
mov
loop
push
dec
out
je
stos
pop
xor
shlb
in
aam
ja
mov
test
imul
andb
dec
shll
push
fs
inc
adc
dec
pop
add
call
ret
rol
insb
and
jnp
into
inc
sahf
dec
xor
push
js
xor
cli
roll
pop
add
add
sbb
jne
imul
mov
js
cmp
scas
arpl
data16
test
adc
cltd
xchg
inc
xchg
ret
add
xchg
xchg
xchg
nop
push
adc
and
pop
adc
add
add
orb
mov
mov
or
lahf
and
in
inc
dec
incb
push
loop
loop
lea
jne
mov
dec
cmp
pushf
test
push
cmp
push
mov
mov
or
sub
adc
movsb
push
sarb
test
lea
lds
adc
jo
dec
sbb
shrb
or
lds
adc
mov
push
ljmp
fcomps
mov
daa
dec
ret
leave
dec
dec
testb
push
rol
adc
sbb
inc
adc
mov
mov
movl
pop
adc
in
call
cmpsl
imul
sbb
popa
add
push
repz
outsl
cwtl
cmp
shlb
insl
sahf
bound
shlb
rcl
cwtl
enter
adc
movsl
or
movl
add
pop
in
push
cld
nop
inc
xchg
inc
push
sbb
loop
sbb
in
out
xchg
inc
pusha
pop
orl
loopne
fiadds
xchg
jg
pop
jns
adc
in
nopl
mov
incl
inc
pop
inc
call
mov
cld
push
add
mov
add
inc
adc
std
add
cltd
les
and
shrb
or
addr16
fcompp
and
xor
addl
sbbb
jg
adc
sbb
sbb
mov
and
fs
mov
jno
ret
ja
push
xchg
pop
fwait
adc
fsubl
add
mov
pop
ss
cmpsb
dec
data16
xchg
push
jp
out
pop
push
push
shlb
popa
dec
mov
inc
inc
movsl
push
adc
mov
or
fcoml
sbb
xchg
ja
mov
test
mov
dec
jl
mov
enter
mov
and
adc
pushf
pop
inc
insb
loop
stos
cmp
adc
sub
repnz
dec
sbbl
push
or
xor
or
xor
add
mov
shrl
in
mov
add
inc
std
pop
sbb
inc
out
das
or
adcl
mov
add
in
or
adc
push
pop
jb
cmp
xchg
adc
mov
into
xchg
push
loopne
pop
sbb
movsb
xchg
hlt
mov
sub
or
sbb
sub
cli
rcrl
sbb
push
dec
stos
fs
jns
lods
dec
ja
sub
cmp
in
xchg
mov
cwtl
lret
into
add
or
mov
shl
lea
lock
add
stos
loop
jae
xchg
aad
mov
mov
inc
sbb
push
fidivl
push
pop
subl
push
xor
add
frstor
mov
fs
sbb
inc
ret
add
pop
mov
or
insb
and
xchg
mov
jns
mov
xchg
sbb
xchg
push
mov
rclb
mov
addr16
or
movl
cmp
xor
sub
xchg
enter
fwait
xor
aas
sub
xor
cld
push
sbb
pop
push
cwtl
mov
jbe
push
sbb
rcll
arpl
dec
add
adc
dec
clc
pop
add
cltd
jae
xor
xchg
das
xor
xor
lret
ss
shlb
xor
das
add
or
loope
enter
cmovno
ret
add
xlat
jle
ret
add
cli
or
icebp
cltd
insb
or
mov
sbb
in
sbb
sub
add
test
scas
or
xor
fsubrs
arpl
pop
inc
cmp
addr16
pop
inc
inc
push
push
rolb
xchg
pushf
nop
xlat
outsl
mov
xor
mov
out
dec
lcall
sbb
scas
bound
aas
xor
addl
xchg
out
add
jo
sbb
sbbb
add
push
sub
popa
cmp
dec
lret
mov
adc
or
subl
mov
sbb
add
imul
nop
mov
push
in
mov
enter
sbb
push
enter
loope
fwait
adc
fs
xchg
add
dec
pop
pop
pop
cltd
jbe
xor
outsl
rorb
mov
or
pop
or
and
in
add
xchg
out
add
adc
push
es
add
cltd
das
sbb
hlt
lea
mov
xchg
hlt
adc
pusha
fdiv
es
lock
jo
jp
or
pushf
sti
lcall
stc
add
aaa
push
or
daa
das
rolb
test
fists
or
orb
jne
add
or
pop
adc
lea
test
push
inc
dec
sub
add
cmc
rolb
call
loope
push
shl
pop
xchg
mov
movsl
xchg
add
xchg
rorl
add
fnstcw
imul
out
in
inc
sub
mov
cltd
test
mov
mov
mov
ret
add
mov
js
mov
leave
jbe
inc
xchg
cmp
sub
xorl
inc
adc
fstps
cmp
dec
sbb
mov
nop
jo
push
pop
cmp
js
cmp
pop
adc
or
mulb
mov
sub
adc
add
sahf
push
or
pcmpgtw
les
sub
into
mov
inc
inc
movsl
mov
mov
adc
or
adc
pop
ret
and
lahf
pusha
jbe
and
and
push
movsb
test
inc
add
or
or
and
icebp
push
or
and
sub
cs
pop
add
adc
xchg
pop
rcl
in
mov
arpl
jbe
inc
insl
dec
jb
gs
sbb
bound
test
rcll
cmp
ljmp
dec
fwait
imulb
daa
insb
js
fwait
in
xchg
movsb
or
sub
imul
lock
dec
pop
mov
filds
sbb
jmp
mov
add
dec
or
aaa
lea
sbb
push
add
or
ds
addl
sti
sbb
inc
sbb
xchg
test
mov
cmc
movsb
or
ljmp
dec
jnp
xchg
push
nop
js
pop
push
add
loopne
into
pop
nop
pavgb
push
add
cmp
push
xchg
xchg
sahf
movsb
inc
test
cmpsb
ja
push
hlt
pop
xor
lods
inc
jg
pusha
jo
mov
ds
and
jle
dec
xlat
xchg
minps
add
lret
xchg
cmp
adc
xchg
test
dec
fs
lods
call
je
mov
dec
inc
andb
mov
inc
or
push
lods
and
push
subl
test
sub
and
and
sub
daa
cld
mov
inc
jg
push
icebp
mov
mov
nop
dec
insl
mov
sub
dec
testl
arpl
sbb
sbb
sub
or
rolb
push
jo
fiadds
adc
xchg
xor
lock
jl
inc
inc
mulb
xor
cltd
lret
js
xchg
call
pop
mov
dec
cmpsb
jge
fsubr
das
imul
icebp
and
and
or
inc
cltd
adcl
xor
cmp
pop
jne
sub
cmpsl
imul
lea
mov
xor
inc
sarl
push
add
xchg
popa
incl
xor
adc
dec
aas
jno
push
mov
cmp
pop
xchg
and
notb
mov
cmpsl
cli
sub
mov
cmp
jmp
hlt
js
inc
xchg
js
inc
cmp
icebp
ret
mov
xchg
outsb
xchg
sbb
les
xor
or
dec
cmp
pop
push
mov
fistpl
sub
sbb
test
mov
inc
pop
movsl
add
test
ja
sub
lods
test
xor
popa
sub
adc
sbb
jmp
mov
jno
or
adc
cmpsb
ljmp
sub
das
test
sbb
in
mov
add
xchg
sub
sub
push
ret
arpl
sub
les
add
or
pusha
xor
sbb
push
inc
fldcw
sbb
mov
push
dec
sbb
arpl
or
pop
dec
ret
mov
rorl
inc
or
dec
ret
cs
fiadds
cmp
sbb
xlat
xchg
adc
dec
popa
scas
jae
jo
loopne
leave
and
nop
dec
cmpsl
xor
xor
fsub
leave
and
adc
orb
cmp
xchg
inc
test
outsl
jne
cmp
inc
mov
insb
aam
add
xor
dec
push
nop
mov
orb
roll
mov
dec
push
push
insb
push
es
push
mov
enter
add
mov
mov
add
jnp
sbb
sbb
and
inc
and
pop
subb
popf
orb
adcl
gs
sbb
push
or
adc
push
cmpsb
jne
add
clc
mov
add
hlt
out
mov
imul
xchg
and
enter
lds
mov
roll
xor
xor
cmp
mov
add
mov
insb
roll
sahf
pop
or
test
cmovbe
xchg
fildll
sbb
mov
push
insb
cltd
mov
enter
dec
xrelease
or
or
jne
jge
loopne
nop
arpl
icebp
add
lock
outsl
mov
pop
mov
testb
sbb
jmp
pop
fistpll
aam
rcll
popf
mov
gs
pop
cmpsb
push
jbe
push
subl
and
dec
add
jmp
or
pop
cmp
jne
es
cmp
dec
iret
push
fbld
inc
repnz
sbb
gs
and
sbb
pop
or
mov
ret
addr16
jno
pop
xorl
mov
dec
cltd
enter
mov
or
or
test
push
dec
and
push
mov
arpl
mov
add
mov
test
mov
xchg
fwait
rorb
dec
outsl
pop
mov
mov
aad
test
fstl
push
lret
fistpl
enter
rol
cmpsl
lret
jb
gs
xor
pop
jmp
sub
outsb
pop
ret
repnz
and
andl
cmp
ror
loope
popf
push
fsubrp
add
sbb
jae
inc
mov
out
dec
and
call
or
daa
cmovo
inc
sub
add
dec
arpl
arpl
and
pop
xor
xor
test
mov
jbe
outsl
inc
or
ret
aaa
dec
dec
pop
sub
and
fadd
mov
int
jne
adc
add
mov
fistpl
dec
xchg
pop
cwtl
and
outsl
ret
fstps
aas
pop
xchg
gs
ficoms
movsl
pop
aaa
fidivrl
int
sbb
sub
mov
sub
adc
fwait
mov
xor
xchg
fiaddl
loop
lods
jecxz
pusha
mov
jg
out
leave
ss
xor
adc
sub
push
lret
adc
test
inc
push
pop
jmp
xchg
mov
js
sbb
rorl
jns
std
inc
add
sub
sbb
and
pusha
xchg
push
cmp
jecxz
sqrtps
mov
or
and
addr16
pop
jo
adc
or
xchg
sub
jmp
ret
add
stc
roll
gs
pop
movsl
scas
dec
push
enter
scas
add
mov
jo
movlps
pushf
inc
sub
add
pop
mov
fs
enter
jg
loop
and
add
fs
sbb
pop
daa
adc
rcrb
adc
lock
repnz
sbb
mov
clc
aam
adc
inc
test
inc
sub
aaa
lods
mov
iret
aas
and
mov
out
lret
push
jo
pop
mov
dec
xor
cs
pop
xor
adc
push
push
dec
sub
xchg
adc
jne
incl
push
aas
sub
pop
cmp
mov
stos
push
std
xchg
sti
pop
loop
jns
mov
sub
repnz
jg
jb
sub
inc
xor
mov
lret
ss
or
mov
mov
stos
cmpsl
push
xchg
hlt
mov
scas
inc
in
or
jo
je
in
and
adc
dec
aas
xor
push
mov
pop
add
cmp
and
fmuls
insl
pop
das
outsl
addr16
xor
minps
mov
and
push
xor
nop
mov
insl
imul
or
adc
adc
ss
dec
dec
add
stc
dec
dec
inc
inc
inc
push
mov
aas
or
push
sbb
xchg
mov
inc
sbbb
bound
inc
sbb
cmpl
jge
pop
dec
out
mov
xchg
out
hlt
rclb
ja
pop
pop
xchg
lods
dec
adc
das
fmul
andnps
mov
mov
je
mov
cmp
adcl
jo
lods
xlat
and
sbb
inc
ds
mov
adc
mov
xchg
mov
xorb
jecxz
mov
mov
sub
sbb
and
sub
loopne
inc
sbb
add
je
fs
sbb
and
inc
popa
or
mov
sub
inc
sub
add
mov
sub
inc
push
pop
sub
push
out
xor
mov
adc
rolb
rclb
cmpsb
dec
rclb
mov
xchg
aad
inc
sbb
jno
shll
fldenv
cmp
add
orb
popa
mov
mov
aam
add
add
add
and
mov
sbb
rorb
inc
mov
cmp
scas
jecxz
mov
cmpsb
loopne
adc
ljmp
mov
adc
aaa
and
and
fistpll
mov
push
mov
add
pop
xor
add
inc
ds
lds
or
in
rorb
arpl
xorl
lods
mov
jae
jns
inc
adc
xchg
jns
mov
add
and
jno
iret
jne
inc
add
mov
dec
int
outsl
add
les
sub
jecxz
inc
repnz
pusha
sub
inc
pop
push
pop
jp
add
lret
mov
fisubrs
scas
sbb
dec
push
std
mov
add
or
js
cs
pop
xchg
add
popa
sub
loop
adc
mov
cmp
fldt
lret
mov
inc
or
outsb
je
je
orb
xchg
or
mov
sub
mov
loop
int
in
sub
cmpl
or
in
push
adc
mov
test
push
mov
fwait
jp
jnp
mov
mov
loopne
lock
lcall
push
adc
in
push
add
imul
jmp
push
test
lock
adc
push
and
nop
mov
cld
xor
cmpsb
push
jl
push
push
jmp
insb
popa
inc
pop
loope
loopne
pusha
pop
dec
inc
jno
negb
in
clc
in
roll
jmp
sbb
and
shrb
icebp
dec
xchg
sbb
fcomps
repz
adc
or
adc
sub
iret
fs
fistps
je,pn
pop
jne
pop
ds
push
pop
lcall
add
dec
cmpb
dec
fcoms
ret
push
adc
clc
xchg
sub
push
test
cltd
mov
xchg
je
fsincos
fucomi
pop
inc
mov
cmp
jne,pn
cmp
inc
cmp
jle
add
cmp
add
push
mov
push
ljmp
add
repnz
push
jae
jl
int3
lret
mov
shrl
js
lea
ret
jo
lea
sub
add
pop
fldt
enter
sub
mov
enter
fmull
shll
and
and
nop
xchg
stos
clc
movsl
dec
jg
inc
mov
or
lea
push
and
xor
jle
or
adc
and
dec
dec
repnz
mov
push
mov
iret
sbb
mov
test
pop
push
adc
sub
xchg
int3
adc
ror
add
adc
mov
mov
push
or
xor
and
cmp
insl
push
jb
add
jb
movsl
xchg
jb
push
jb
xchg
std
aam
mov
outsb
add
out
mov
mov
or
jbe
pushf
xor
insb
mov
jl
push
jb
and
test
inc
mov
pop
dec
xchg
outsl
jns
pop
xor
mov
cs
mov
int
inc
lods
mov
adc
mov
imul
mov
sbb
push
dec
ja
mov
insb
sub
pop
fmuls
push
sub
pop
push
add
dec
leave
popa
js
sub
inc
xchg
push
jae
pop
jb
ja
mov
and
nop
sub
or
jo
lcall
sar
pop
repnz
inc
shrb
les
subl
test
pop
push
push
loopne
xchg
ds
insb
add
xor
out
test
or
mov
jb
enter
sbb
or
and
and
sarb
nop
and
rcl
sub
nop
add
pusha
je
nop
xchg
outsl
mov
fsubs
mov
push
dec
inc
inc
dec
ja
push
push
push
and
test
movsl
std
aas
jle
inc
push
aaa
rorb
dec
out
mov
dec
imul
mov
movsl
adc
xchg
sbb
inc
lds
ret
mov
aas
mov
inc
mov
push
mov
xchg
sbb
xor
ret
add
or
xchg
nop
push
lahf
icebp
xchg
pop
jb
mov
mov
cmp
cmp
xor
cs
add
push
and
pop
clc
call
clc
popa
jbe,pn
mov
push
test
mov
mov
js
insl
stc
mov
mov
movhps
and
add
scas
insl
ds
das
add
lret
push
cwtl
or
push
push
nop
adc
cmp
orl
jle
outsb
jb
nop
mov
adc
jmp
lock
lds
sbb
inc
mull
dec
orl
ficoms
test
gs
das
pushf
into
pop
push
iret
push
rolb
imul
lock
rcrb
push
pop
and
dec
push
adc
fadds
xchg
es
xor
pop
sbb
push
jbe
cmpsb
xchg
inc
orl
push
jno
push
cmpsb
xchg
add
or
lea
mov
sub
insl
inc
clc
mov
fwait
xchg
adc
out
leave
or
xchg
push
les
or
xchg
push
sbb
mov
jno
lcall
inc
or
pop
addl
daa
jne
or
adc
insl
dec
cmpsb
loopne
aas
mov
pop
loop
dec
cltd
rclb
scas
push
cmpsb
dec
add
movsl
push
test
sub
addr16
cmpsb
mov
inc
sub
stos
addr16
cmpsl
cmpsb
dec
inc
addr16
lret
addr16
sbb
push
mull
mov
mov
add
add
ret
cmpsb
adc
or
dec
xchg
mov
xor
push
rolb
dec
jge
pop
cmp
mov
mov
sti
xor
inc
aam
pusha
mov
sbb
add
mov
jle
imul
dec
rorb
inc
aaa
and
or
shlb
ja
push
and
xchg
rcrb
mov
push
lcall
sub
sub
xorb
dec
mov
nop
add
pop
ljmp
mov
nop
inc
sahf
shrb
sub
sbb
fcom
into
add
pusha
sbb
sbb
jmp
in
sbb
test
sbb
mov
sbb
and
push
adc
dec
push
inc
pop
aas
or
sub
cmpsb
nop
jmp
and
push
aaa
dec
jmp
test
xchg
xor
jns
sbb
pop
imul
lret
dec
cwtl
shlb
jg
in
cmpsb
xor
cmp
or
inc
cmp
rolb
mov
ljmp
leave
or
test
outsl
leave
pop
daa
adc
loopne
push
andl
sub
jne
xchg
xor
mov
movsl
xchg
dec
out
add
int3
inc
movsb
add
or
dec
push
mov
or
mov
fnsave
mov
jb
pop
shlb
inc
clc
pop
bnd
adc
call
stc
sub
inc
in
fmull
cli
into
xchg
mov
test
add
pop
push
aaa
mov
mov
add
push
int
daa
xchg
and
outsl
mov
jne
jmp
mov
lds
adc
ja
add
jo
xchg
or
popa
push
inc
shlb
dec
mov
and
adc
enter
jae
insb
xchg
outsl
inc
ret
add
fsubl
pop
into
mov
sub
sbb
sub
test
add
clc
cmp
jbe
dec
sub
add
xor
or
cmp
jge
ss
ds
cli
push
or
cli
sbb
movsl
das
jmp
or
icebp
sbb
cmpsl
and
jne
lahf
movsb
mov
mov
lea
sub
pop
push
and
add
lock
or
dec
jb
add
hlt
stos
aad
pop
add
insl
imul
movsb
pusha
pop
inc
mov
mov
mov
adc
push
adc
sbb
push
add
push
rolb
push
xor
nop
clc
clc
mov
mov
lock
xchg
sti
mov
or
push
or
rorl
and
dec
imul
add
push
cltd
mov
and
add
mov
adc
adc
js
inc
or
pop
shlb
cmp
test
push
mov
jl
test
inc
clc
sbb
push
sub
mov
jmp
lea
add
xor
nop
sbb
dec
call
or
adc
jne
mov
loopne
cmpsl
outsl
sbb
rcrb
popa
add
dec
fiadds
fisttps
mov
pop
dec
outsl
pop
push
std
leave
sbb
loopne
or
in
mov
mov
flds
loope
mov
rcll
stos
fsubs
cmp
repnz
or
jns
xchg
cld
fbstp
jbe
mov
xor
jg
ja
add
xor
jle
rcl
xchg
popf
nop
push
cld
dec
push
and
cmp
nop
jo
sub
dec
add
mov
pop
rclb
add
das
inc
dec
orb
inc
inc
or
dec
mov
das
mov
leave
or
aas
push
push
lea
pop
and
pusha
and
add
push
jg
pop
mov
out
inc
push
xor
adc
mov
faddl
data16
stos
out
mov
out
iret
andb
ss
inc
mov
adc
pop
orl
iret
out
outsl
addr16
xor
ret
outsb
mov
rcrl
adc
push
clc
into
je
jae
jnp
aaa
adc
pop
dec
imul
es
mov
leave
nop
xchg
sub
dec
data16
jg
addl
dec
xchg
stos
dec
jbe
call
aaa
or
sub
gs
mov
cltd
ss
pusha
adc
jne
dec
push
inc
xor
push
enter
sub
nop
dec
lods
shl
or
aas
mov
cmp
rcll
or
push
ds
xchg
lock
std
and
fldenv
test
dec
xchg
jg
orl
cli
adc
xchg
into
ficoms
mov
lcall
mov
sbb
add
add
pop
mov
fimull
fs
les
sub
push
push
pop
adc
cmp
loop
sub
jl
or
mov
stos
sub
int
adc
xor
scas
test
cmpl
in
xorl
jg
jecxz
xchg
add
cmpb
add
int3
inc
ret
iret
mov
add
out
rsm
or
push
xchg
insb
mov
or
fcompl
jns
jb
or
adc
mov
mov
sub
adc
pop
pusha
or
and
jbe
adc
mov
aaa
cmp
icebp
add
cld
mov
jo
insl
dec
xlat
mov
and
lea
sub
sbb
adc
movsb
push
add
icebp
and
dec
push
adc
xchg
inc
stos
adc
jae
push
pop
scas
outsb
ja
int
mov
pop
xor
push
pop
inc
xchg
fmuls
or
dec
sbb
add
cmp
cmpsb
adc
mov
or
or
push
inc
mov
pop
or
cmp
rclb
cmp
adc
cmp
jle
int
jno
add
loop
shll
and
mov
mov
sbb
aas
add
mov
shlb
sbb
pusha
pop
xchg
mov
or
mov
test
test
mov
gs
pop
insb
jne
sbb
es
or
push
push
test
mov
mov
or
je
add
xchg
or
je
fstps
fwait
ret
fldl
fstpt
add
xor
mov
mov
aas
lcall
ret
add
mov
sub
scas
arpl
sbb
mov
in
fmull
push
push
je
dec
mov
xchg
mov
dec
ss
psubsw
inc
push
ljmp
jge
cmp
sti
loop
inc
in
movsl
or
pusha
clc
in
mov
xlat
mov
and
aaa
inc
jb
or
ss
lock
cwtl
lea
adc
lret
js
xchg
fcomp
xchg
testl
jmp
pop
and
or
clc
loope
mov
inc
or
add
ret
sub
jge
or
ret
mov
addr16
xchg
loopne
jl
cmp
lock
andl
or
add
outsb
incl
push
pop
add
add
lahf
lret
cmp
jl
adc
jl
xchg
ja
out
push
jns
add
push
movsl
cmpsl
mov
push
and
inc
cmp
jmp
cmp
movsb
movl
fiadds
adc
xor
jg
dec
fadds
ret
pop
jo,pn
jo
adc
roll
lock
add
sub
icebp
jbe
inc
mov
and
mov
loopne
cmp
xor
mov
add
push
test
adc
cmpl
or
cmp
inc
and
popa
icebp
mov
adc
add
xchg
push
fcmove
jne
or
es
push
mov
mov
mov
lods
lret
mov
int
pop
dec
inc
enter
fcoml
mov
popa
add
js
into
mov
adc
sbb
xor
scas
fs
add
imul
movzbl
cwtl
and
sbb
test
and
pop
sub
sub
dec
mov
inc
and
mov
sub
les
test
pop
or
adc
mov
inc
mov
ss
inc
mov
mov
das
adc
movsb
stc
sub
jno
jg
adc
fisttps
cmp
xor
pop
pushf
rclb
mov
movsb
inc
add
enter
ljmp
mov
subl
in
andl
xor
rorl
bound
and
or
push
cmp
movsb
mov
insb
sbb
scas
mov
inc
pop
xchg
scas
fdivrs
int3
xor
sbb
dec
mov
add
mov
mov
cmp
or
rol
sti
pushf
cmp
mov
sbb
and
dec
sbb
add
push
dec
pop
clc
inc
cmp
adc
add
push
mov
add
mov
aam
cmp
adc
rol
dec
pop
adc
fsubs
or
inc
add
test
add
int3
dec
mov
push
add
sarb
mov
xchg
data16
mov
cwtl
mov
push
aas
ror
dec
lock
jg
or
add
add
mov
aaa
inc
fdivs
adc
mov
sbb
and
gs
fs
rorb
jne
outsl
mov
or
and
adc
xchg
pop
cwtl
push
bound
mov
dec
xchg
mov
and
scas
insl
mov
popa
fwait
cmp
rcr
cmpsl
insb
dec
addb
into
add
inc
inc
rorb
sbb
mov
lret
add
inc
dec
inc
cwtl
sbbb
and
test
mov
loope
movsl
frstor
ja
or
dec
push
lods
aas
loopne
lcall
loopne
mov
cmpsb
mov
es
sbb
arpl
rcrb
mov
les
pop
cltd
test
pop
dec
rorb
xor
fldt
repz
dec
pusha
loope
inc
xchg
mov
xor
jmp
das
clc
and
mov
cmp
dec
mov
pop
vcvttss2si
cmc
movsl
pop
adc
pop
jbe
or
or
mov
je
mov
mov
pop
lock
mov
push
inc
aam
push
orb
inc
rclb
jle
jae
add
push
clc
mov
jae
xor
pop
jle,pt
leave
xchg
push
xor
mov
jno
inc
dec
jb
push
lods
jnp
and
dec
sub
fistl
xor
notl
insl
in
lods
fnsave
xor
dec
daa
fsts
jbe
pop
or
add
test
mov
insb
je
add
xchg
add
push
add
push
xchg
lods
mov
and
flds
mov
cmp
mov
ss
mov
and
out
sbb
cwtl
gs
dec
loope
aaa
adc
and
and
inc
inc
f2xm1
adc
xorl
adc
pop
into
xor
shll
cmp
aad
mov
cs
neg
add
pop
xchg
push
add
aas
add
daa
inc
insb
inc
loope
out
push
add
xor
mov
mov
pop
sub
int3
imul
or
xlat
sub
add
xor
sub
or
dec
pusha
sbb
add
mov
ret
add
jns
mov
add
push
mov
cld
popf
std
cs
pop
mov
mov
in
cmpsb
insl
lret
out
mov
push
enter
addl
ljmp
fs
or
pop
adc
jb
push
mov
pushl
leave
inc
mov
cmp
cld
adc
mov
pop
outsl
push
aaa
shrb
adc
cmpb
mov
xchg
orb
mov
adc
jo
sub
leave
push
adc
push
insl
pop
scas
sbb
fs
push
mov
leave
push
mov
ja
in
ja
inc
dec
add
subb
je
xchg
outsb
and
dec
jge
and
outsb
je
sbb
adc
xchg
mov
cmpsl
bound
fs
xchg
xor
fisubrl
std
mov
push
shrd
movsl
push
push
pop
push
mov
pop
cmp
ja
pop
adc
sub
jge
shr
hlt
lret
cmp
movsl
add
inc
xor
xchg
add
loope
dec
xor
inc
mov
inc
adc
push
sbb
mov
mov
lea
inc
cmpsl
adc
or
fisubrl
imul
and
sbb
xor
jmp
movsb
loopne
sbb
add
test
fistpll
pop
test
fnsave
test
cwtl
xchg
ror
push
sbb
push
mov
add
fisttps
push
push
push
xlat
mov
xchg
in
and
and
in
pop
sbb
pushf
push
jg
nop
jmp
add
push
das
test
mov
sbb
inc
or
pop
adc
cld
mov
pop
cmp
sbb
std
loop
mov
xchg
mov
aaa
push
dec
cmpsb
jne
cmpl
je
mov
outsb
test
sbb
nop
popf
ret
dec
sub
xchg
dec
push
pop
add
mov
or
shll
add
mov
push
or
cmc
out
hlt
jge
loope
pop
test
mov
dec
adc
lcall
iret
push
shlb
fsts
cmp
movsl
dec
xchg
push
sahf
xorb
push
fiadds
leave
mov
mov
xchg
cmpb
add
sbb
push
fs
adc
fsubl
and
or
and
and
dec
and
and
fiaddl
fstp
cmpsb
les
stc
cmovbe
jecxz
cmp
mov
scas
bound
inc
add
pop
inc
loopne
or
inc
sbb
mov
pusha
outsl
in
nop
ret
fidivrs
ffreep
out
test
mov
mov
aaa
ret
in
js
add
pop
jp
and
adc
and
lahf
xor
mov
in
in
pmaxsw
enter
rcl
shlb
orl
aam
orl
xlat
fcomp
jns
int3
and
mov
in
test
and
in
xchg
sub
cmpsb
in
push
add
add
push
in
loope
and
cmp
or
in
movsl
mov
mov
jo
xor
and
push
imul
ret
push
inc
cmc
idiv
push
add
push
or
out
mov
mov
mov
stos
loopne
je
pop
movsb
inc
push
xchg
cmpsl
repnz
jge
xchg
or
push
push
popa
push
add
imul
movsb
movsb
adc
in
adc
mov
or
pop
sub
daa
xchg
pusha
stos
inc
inc
aaa
and
out
or
popa
and
out
cmp
xchg
xchg
jl
sub
inc
lock
lock
and
pop
es
adc
push
fidivrl
addr16
inc
jl
pushf
cmp
fdiv
popa
ljmp
mov
dec
pop
push
sbb
popf
jno
cltd
inc
push
jbe
daa
cltd
fs
movsb
adc
inc
add
dec
inc
es
fdiv
adc
shlb
int3
mov
lods
loop
push
mov
xor
shll
fucom
stos
mov
inc
imul
leave
lock
and
and
cmp
mov
sub
add
add
xchg
push
sub
repz
stos
sub
ss
pop
xchg
xchg
subl
xchg
add
lahf
xor
and
nop
jb
or
lods
xor
dec
sbb
add
in
or
enter
adc
push
bound
shl
js
pusha
popa
aad
jmp
dec
adc
and
adc
push
push
das
loopne
rol
sbb
push
push
ret
or
lret
and
push
push
aaa
stos
inc
add
and
mov
dec
aas
ret
xlat
in
movb
dec
mov
stos
dec
jnp
addl
jne
push
push
adc
sub
rclb
dec
dec
jb
push
rcll
das
lock
pop
pop
and
mov
push
add
push
mov
jb
mov
repnz
jnp
in
movb
adc
adc
das
mov
cmp
adc
xchg
or
sbb
orb
mov
mov
adc
xor
cli
adc
jno
or
test
and
movsb
add
jb
adc
test
popa
add
inc
xchg
aam
push
cmpsl
cmpsl
movb
fisttpl
and
aas
push
push
cmp
add
ja
adc
add
xchg
lahf
xchg
sbb
out
cmc
adc
jle,pt
jns
inc
cmc
push
add
pop
rorb
lods
daa
dec
outsl
shrb
push
add
or
pop
jne
fists
adc
pop
xchg
add
adc
pop
sub
adc
fs
les
les
inc
inc
les
add
cmpsb
cltd
fsubrs
out
mov
jl
mov
shrb
jl
call
xchg
and
adc
sub
jae
ja
xchg
push
jmp
adc
jl
cmp
cltd
ss
jl
dec
adc
xchg
inc
dec
xchg
stc
rcrl
push
je
testl
push
mov
rcr
in
jg
aas
jl
mov
iret
adc
fs
push
sub
pop
negl
add
bound
mov
lahf
jo
cmpsl
jno
cli
xlat
sti
xlat
inc
sbb
sub
ds
cmp
push
pusha
addl
cmpsb
imul
xchg
xchg
mov
cwtl
inc
jl
xchg
pop
mov
xlat
push
jb
leave
jb
inc
add
sub
iret
cld
or
loope
stc
xchg
inc
outsl
out
xor
mov
pop
and
xlat
xor
in
inc
mov
stc
iret
js
int
dec
ss
inc
push
add
cmp
adc
ss
outsl
inc
std
push
xlat
mov
add
ret
or
jns
cmc
cmc
add
shrb
mov
iret
adc
xchg
and
adc
jle
adc
xor
pop
sbb
nop
ja
inc
mov
das
inc
pusha
add
pop
test
inc
add
lock
rcrb
shlb
or
pop
add
hlt
insb
insb
faddl
push
pop
sbb
lret
add
or
jo
adc
add
xchg
in
xchg
lahf
ja
sub
adc
arpl
mov
add
xlat
add
jne
sbb
sub
cmpsb
es
popa
cs
mov
mov
ret
push
push
push
sub
or
adc
and
and
push
and
vpunpckhbw
or
and
addl
fld
sub
push
mov
mov
xchg
cmp
aam
push
dec
aaa
mov
imul
in
and
sub
addl
mov
call
rclb
or
xchg
orl
mov
adc
mov
fld
imul
push
lret
rorb
or
push
sub
mov
movsb
push
inc
mov
aas
jg
pushf
or
imul
inc
cmp
imul
sbb
pop
xorb
xlat
stos
jge
insb
mov
int3
sbb
or
movsl
sub
lea
leavew
mov
jns
test
out
cmp
mov
xor
mov
pop
push
fdivl
mov
lods
dec
pop
pop
xor
sbb
adc
sbb
aas
cld
inc
add
cmp
inc
sbb
lea
or
js
pop
dec
push
and
mov
scas
dec
adc
clc
fs
and
xchg
int3
negl
imul
popa
cmp
inc
adc
movsl
add
jo
mov
inc
xlat
mov
mov
mov
out
scas
push
jb
or
pop
mov
fldl
mov
sbb
mov
adc
pushf
adc
inc
test
rorb
mov
adc
pushf
sbb
or
push
es
adc
xor
jo
enter
xor
xchg
cld
push
in
inc
pop
out
inc
sub
push
mov
mov
mov
orb
mov
sub
sub
sub
out
xor
sahf
loop
jecxz
shlb
mov
fistpl
or
sbb
and
sub
fcomps
mov
and
and
aam
stos
call
ljmp
lock
push
inc
adc
sub
add
nop
fcomps
pop
aaa
cmp
push
pop
bound
adc
movsb
jle
aaa
loopne
add
mov
mov
jmp
ret
mov
or
mov
sbb
adc
push
cmp
adc
mov
and
add
inc
jmp
adc
and
sbb
xchg
push
mov
or
or
mov
pop
mov
mov
xchg
add
or
in
mov
cmp
je
adc
popa
cmc
sub
xor
push
out
adc
jno
jo
mov
imul
dec
add
mov
jmp
sahf
push
insb
mov
mov
xchg
xchg
mov
movsl
enter
js
je
popf
daa
jge
outsb
ss
push
xor
jle
lret
jecxz
cmpsb
add
les
mov
mov
sub
daa
hlt
or
gs
pop
xchg
addl
loop
rcl
notb
adc
rolb
leave
xor
xor
subb
outsl
mov
sbb
cmp
hlt
scas
cmpsb
push
adc
push
ret
adc
popa
inc
or
mov
xlat
roll
loopne
xor
or
aam
in
adc
add
mov
cmpb
in
adc
add
mov
xor
icebp
dec
scas
pusha
or
ss
gs
pusha
es
icebp
adc
mov
mov
push
outsl
movb
jns
mov
add
test
adcl
mov
enter
jmp
push
les
insl
movsl
sbb
nop
and
inc
nop/reserved
sbb
test
xchg
cmp
inc
clc
push
or
stc
and
sub
or
pop
out
xlat
fnstcw
sbb
std
dec
mov
dec
xchg
mov
and
push
push
mov
mov
pop
xchg
add
push
mov
jb
jo
rorl
add
cmpb
jge
in
push
or
adc
push
or
ja
sbb
inc
cwtl
add
cmpsl
mov
xlat
mov
sbb
lods
mov
add
add
ret
xchg
movsb
pmaxub
faddl
mov
push
pop
pop
push
nop
push
fldl
jne
push
push
sbb
test
adc
adc
or
sub
jne
sbb
das
push
mov
mov
sub
adc
jl
out
or
adc
adc
es
or
push
test
add
add
fiadds
xchg
lods
pop
int3
push
cmp
or
and
pop
add
inc
out
or
pusha
mov
sub
mov
fdivs
mov
or
push
push
add
sbbl
addr16
roll
adc
testb
push
push
pop
and
sbb
cmp
jbe
das
xchg
or
fsubrs
orl
jl
sub
ss
dec
cwtl
or
add
and
adc
mov
xor
inc
add
out
push
insb
dec
push
insl
and
add
pusha
sahf
jbe
imul
fstp
adc
jno
pop
mov
in
add
shlb
jae
nop
push
pop
and
int
sbb
add
lods
call
push
inc
dec
ja
ret
cmp
jne
xchg
adc
inc
dec
xor
push
dec
pop
xor
js
and
and
cmpsl
xchg
popl
sbb
ss
or
or
clc
xor
push
outsb
cmpl
push
mov
outsb
xlat
outsl
outsl
in
pusha
js
clc
aad
xor
sub
xchg
jecxz
mulb
mov
repnz
pop
and
mov
add
loope
jae
idivl
xor
addr16
or
imul
or
pop
divb
aam
je
sbb
outsl
aaa
stc
mov
lock
push
jnp
test
hlt
pop
sbb
sbb
cltd
or
inc
push
mov
cmp
mov
pop
or
in
aam
dec
mov
cmp
pop
inc
movb
or
xchg
add
xlat
mov
dec
sbb
dec
fists
ret
outsl
pop
dec
pusha
adc
add
stos
test
mov
repnz
fdivl
popa
adcl
lods
sub
xchg
je
or
in
inc
jno
mov
nopl
adc
icebp
push
sub
inc
mov
in
aas
jg
push
mov
xorl
ja
inc
mov
pop
mov
push
in
xor
pop
daa
pop
add
scas
in
and
add
adc
add
or
aas
or
add
cmp
add
test
mov
mov
adc
sub
sbb
push
cmpb
add
jl
cmp
clc
xor
push
test
xor
push
push
sub
sub
nop
adc
lods
push
adc
mov
out
mov
enter
jnp
pusha
testl
adc
cld
adc
add
inc
mov
add
and
dec
pop
daa
xchg
cltd
loop
nop
push
adc
inc
pop
and
or
xchg
xchg
add
pop
adc
adc
inc
adc
or
pop
fisubs
pop
sub
add
and
pop
or
dec
push
sbb
rolb
ds
ss
mov
inc
add
movsl
inc
stc
mov
popa
jae
cltd
sbb
add
repz
inc
and
nop
dec
or
stos
mov
call
xchg
out
loop
insl
ds
and
rol
cltd
jae
in
mov
or
cmp
xchg
push
in
or
sub
or
adc
push
or
fld
inc
leave
jp
sbb
dec
dec
loopne
dec
or
sbb
ds
or
cmpsb
mov
adc
dec
xorb
aam
push
lret
xchg
adc
insb
fadds
aam
pop
xadd
pop
or
dec
imul
pop
subb
adc
add
pushf
pop
fisubrl
or
jae
push
fadds
testl
cmpsl
sahf
pop
sub
and
test
cmp
ss
in
push
insb
push
nop
das
push
push
sahf
or
xor
and
mov
arpl
mov
sahf
pop
and
or
xor
xchg
inc
mov
push
inc
dec
mov
inc
and
dec
mov
sbb
inc
or
clc
cmp
pop
ss
add
mov
push
inc
mov
adc
adc
pop
sub
ret
mov
jno
add
pop
das
sub
push
pop
mov
sub
cs
out
xor
jo
les
cmpsb
shlb
jl
cli
dec
xor
ret
or
push
push
dec
js
push
pop
sbb
dec
push
add
or
jg
and
add
and
inc
jo
inc
jg
loopne
jg
lock
pop
jne
xor
adc
and
push
daa
out
fstps
sbb
xor
xlat
cs
xchg
jmp
dec
push
add
pop
dec
mov
daa
mov
dec
dec
cmpsl
pop
lock
roll
rolb
and
dec
dec
mov
sbb
add
dec
mov
mov
dec
ja
dec
sub
bound
xchg
fmull
or
push
xlat
cmp
cmp
add
jp
add
rorb
inc
in
lea
call
fwait
dec
out
fmuls
loop
adc
or
test
pop
je
mov
in
jl
or
mov
pop
jmp
jbe
fsubp
inc
adc
pop
and
sbb
loope
sbb
das
hlt
add
and
dec
pop
jecxz
cmpsl
push
sbb
rorb
and
or
sbb
sbb
rorb
rolb
fldt
xchg
push
cmp
js
adc
outsl
sbb
lds
pop
sbb
andps
ljmp
sub
jbe
inc
repnz
pusha
mov
pusha
je
adc
pop
pop
lcall
lods
add
nop
in
jg
add
sbb
in
pop
inc
push
pop
adc
in
andb
inc
jnp
lds
incb
sub
je
or
jp
sbb
arpl
add
inc
sub
xchg
or
mov
gs
xor
and
clc
pusha
fisttps
push
daa
dec
pop
push
enter
push
inc
cwtl
sbb
ret
add
jns
xor
pop
and
sub
xchg
or
rcrb
adc
in
sbb
or
test
pop
popa
add
orb
mov
mov
bound
inc
adc
insb
xor
leave
mov
or
sbb
inc
dec
sub
adc
adc
pop
nop
in
mov
ret
cwtl
pop
dec
push
dec
and
out
das
inc
enter
push
push
push
mov
bound
dec
mov
dec
in
inc
mov
xchg
imul
push
mov
inc
or
jnp
stos
inc
and
mov
mov
int
jbe
rolb
cs
call
add
xor
movsl
and
icebp
cmp
pop
or
rorl
dec
test
imul
str
jno
cld
loop
xor
jecxz
lds
scas
outsl
test
mov
add
push
adc
add
dec
mov
jle
mov
mov
shl
xor
jo
adc
add
and
sub
or
xchg
dec
dec
dec
sbb
js
cmpsl
clc
mov
nop
or
push
sbb
mov
dec
inc
insb
sub
lods
insl
rorl
inc
mov
fcmovnb
mov
or
imul
lods
sbb
add
call
lods
pop
adc
sbb
inc
setne
addb
dec
imul
ss
adc
stos
scas
push
outsl
push
sbb
test
and
outsb
test
daa
or
insb
add
pop
cmp
pop
inc
loopne
inc
pop
popa
shl
jp
adc
ffreep
movb
pop
push
test
adc
push
or
add
push
rorb
inc
sbb
mov
je
ja
inc
jae
jge
and
xor
adc
rclb
mov
xor
lcall
or
sub
and
or
rcll
nop
int3
mov
inc
test
mov
adc
or
push
cmpsb
xchg
fcoms
and
sar
movsl
or
and
data16
and
sub
pushf
push
aad
insb
das
dec
outsb
and
mov
ds
loope
jo
adc
dec
test
sub
outsl
add
push
dec
add
or
sub
es
adc
mov
roll
loope
inc
adc
add
dec
push
sbb
push
add
xchg
outsb
lret
and
inc
cmp
mov
aam
adc
mov
pop
or
inc
xchg
imul
sti
push
xchg
imul
jp
cmpsb
in
pop
sbb
pushf
rcll
int3
cmp
mov
mov
fs
fistps
pop
cmp
or
sti
xor
adc
cmpsb
push
jne
stos
dec
popa
jns
adc
add
test
pop
cmpl
dec
mov
jmp
sbb
sbb
add
lock
stos
lods
andl
shll
and
lcall
adc
xchg
fcoms
xchg
sbb
xchg
inc
pop
mov
mov
add
push
push
or
test
test
dec
sub
mov
mov
sbb
loope
das
in
mov
add
aad
adc
fcomip
bound
add
and
mov
ret
xorl
xchg
pop
mov
jbe
xchg
mov
mov
fs
jg
jo
and
sarl
and
aas
cmp
xlat
fdiv
pop
add
push
push
push
stos
lds
insb
sbb
fildll
and
imul
adc
pop
xor
sbbl
cmp
jns
bound
loop
imul
das
sub
and
inc
testl
dec
les
testb
cmp
pushf
ss
iret
and
dec
sbb
push
and
sub
pop
enter
sbb
mov
cmpsb
mov
or
cmp
and
popa
sbb
cmp
adc
ret
mov
push
cld
mov
push
dec
cmc
mov
push
ss
push
adc
addr16
in
xchg
dec
and
lock
inc
jmp
push
popf
adc
xchg
xchg
push
sub
inc
pusha
dec
movsb
loop
and
and
xor
in
sbb
adc
daa
and
das
dec
and
xchg
ds
icebp
sbb
jbe
and
lods
mov
cmp
mov
cs
xchg
and
push
nop
pop
mov
dec
mov
sar
or
dec
add
xor
and
mov
outsb
inc
mov
add
push
xor
and
add
int3
insl
aas
adc
mov
mov
dec
sub
push
fidivs
pop
mov
insl
add
lcall
lea
les
cs
push
sbbb
mov
or
das
or
mov
iret
push
add
add
dec
push
push
lods
xchg
mov
cwtl
nop
xchg
rolb
lods
push
inc
nop
rolb
jne
xchg
inc
jno
adc
or
lods
xor
sbbb
lcall
xor
adc
sbb
cld
outsb
rol
xchg
cs
pop
xor
in
test
pop
xor
dec
mov
xor
and
call
cld
call
inc
push
aaa
cltd
or
dec
adc
sub
jle
push
and
aam
or
shrb
in
ss
lods
dec
or
daa
shlb
and
and
sbbl
pop
aaa
jnp
jae
jb
bound
jnp
jne
xor
pop
or
inc
mov
push
inc
testb
sti
push
icebp
pushl
push
adc
in
cmp
rcrb
sub
andb
fists
add
add
xor
nop
inc
popa
sbb
add
xorb
dec
popa
add
inc
pop
sub
mov
clc
mov
mov
jbe
cmpsl
push
inc
repnz
add
test
adc
mov
mov
cld
xor
xchg
out
test
xchg
sub
enter
divl
orb
pop
std
adc
lods
xchg
jp
xor
cli
call
push
adc
dec
xchg
and
xlat
add
add
icebp
hlt
xor
decl
cmp
xor
xchg
fs
mov
inc
mov
out
sar
inc
inc
mov
jecxz
inc
add
in
xor
jne
and
and
xchg
nop
ja
pop
ret
push
dec
cld
or
bound
lods
mov
dec
fisttpl
hlt
outsl
pop
icebp
lods
xchg
push
mov
adc
arpl
mov
sbbb
add
fcomps
inc
pop
pop
jae
cmp
mov
iret
nop
xor
enter
aad
add
push
fld
xchg
rorb
incb
push
sbb
inc
decl
mov
xchg
repz
sub
cmp
adc
jg
pushf
or
ret
dec
outsl
mov
fwait
out
sbb
loopne
in
insb
xchg
pop
or
push
and
rcrl
imul
cld
dec
fbstp
adc
ja
mov
shlb
popf
dec
push
jecxz
mov
sub
test
dec
lahf
xchg
and
movsb
and
ss
es
xor
adc
lcallw
push
add
add
adc
inc
sbb
loope
sub
mov
push
mov
cld
movsl
sbb
xor
mov
mov
and
xchg
or
pop
pop
call
cmp
fs
rclb
movsb
pop
push
or
xchg
rolb
push
pop
mov
movsl
adc
ret
imul
mov
pop
fldcw
xchg
test
or
pop
lea
xchg
xor
daa
sub
mov
push
pop
and
mov
push
scas
aas
mov
nop
xor
push
test
jno
xor
in
ret
adc
and
cmp
call
call
cld
sub
in
mov
in
xor
das
ja
xor
push
sbb
xchg
add
fisttpll
clc
mov
pop
adc
and
aam
icebp
mov
lds
enter
cltd
sbb
add
cmp
add
pop
and
adc
xchg
and
repnz
iret
cmp
inc
push
and
inc
cmp
inc
adc
mov
lret
and
xchg
add
push
shrd
and
mov
cmp
dec
aad
xchg
adc
test
fstl
lea
xor
fldcw
push
sub
flds
xchg
sbb
sub
sub
jno
add
jge
inc
test
jnp
pop
inc
stos
das
pop
hlt
jns
mov
subb
sbb
adc
jmp
inc
sub
jp
jns
jnp
sar
cmp
pop
cmp
mov
inc
adc
or
ret
xlat
enter
outsb
or
cmpsl
mov
jg,pt
mov
xlat
mov
add
or
scas
add
je
in
dec
push
push
adc
jnp
test
or
cmpsl
add
adc
xlat
imul
std
or
nop
push
enter
jl
cmp
js
je
aam
aad
inc
test
movsb
sbb
jo
cmp
and
in
add
movsb
xchg
adc
movsl
or
mov
sahf
sarb
adc
xorb
adc
lahf
loopne
push
push
push
pop
and
xor
push
call
mov
sub
inc
shll
leave
movsb
mov
and
cmp
std
inc
or
leave
lea
mov
xchg
or
fcom
jae
sub
sti
out
cmp
add
aam
and
cmp
add
and
loopne
lahf
jp
cmp
jle
ret
cwtl
mov
mov
pop
imul
test
cmp
das
movsl
dec
pop
sbb
mov
sub
xchg
pop
xchg
push
fs
and
sbb
loopne
movsl
push
fwait
mov
pop
push
cltd
aam
sbb
mov
add
cmpl
shl
push
imul
out
test
orl
orb
adc
cmpsb
and
inc
test
sbb
orb
call
mov
xchg
cmpsb
imul
inc
jbe
shrl
jge
adc
or
xchg
cmp
arpl
popa
xor
cmp
movsb
lods
sbb
xchg
cmpsl
dec
sub
in
mov
sahf
and
adc
adc
cmpsl
inc
or
inc
fs
bound
sbb
xor
jmp
sbbl
cmp
cmpb
push
ds
or
stos
int
faddl
inc
dec
dec
scas
add
adc
ja
inc
in
and
sbb
pop
pop
inc
mov
pusha
test
xor
sbb
push
insb
inc
sub
push
or
mov
call
rorb
adc
dec
popa
add
loopne
scas
ds
or
pop
inc
ret
mov
inc
stos
movsb
xor
mov
jl
movsb
mov
inc
jae
data16
pusha
pusha
or
add
jmp
in
push
lahf
cmpsb
add
mov
mov
ja
sbb
adc
mov
push
or
inc
jmp
add
rol
sub
mov
pop
in
mov
aas
jo
push
adc
pop
iret
or
and
pusha
aaa
pop
add
cmp
push
xchg
or
and
leave
inc
push
add
or
or
ja
enter
out
or
sub
push
xchg
divl
and
add
push
outsl
pop
aaa
push
bound
out
xor
lahf
nop
or
or
aaa
push
add
inc
xor
add
dec
and
pop
roll
or
cwtl
mov
into
adc
daa
mov
dec
stos
nop
pop
pop
dec
dec
jae
cmpsl
mov
add
or
push
xchg
loopne
add
mov
or
insl
inc
lahf
adc
mov
sub
orl
scas
lret
fcom
pop
sub
adc
push
in
xor
movsb
into
and
movl
adc
xor
daa
mov
xchg
movsl
sahf
pop
ss
cmp
jle
add
cmpsb
ja
jge
sub
mov
jo
sub
ja
in
rorl
push
push
clc
aaa
pusha
inc
orb
aas
jo
sub
mov
fisubl
mov
cwtl
scas
xlat
mov
les
es
add
fsts
add
jle
or
js
or
ret
pop
sub
lds
jl
cmc
push
pop
test
mov
fdivrl
xor
repnz
xchg
fsub
sbb
ss
cmp
enter
sbb
insl
inc
das
fldln2
lcall
test
adc
pusha
or
pop
or
jne
ret
rclb
sub
pop
scas
aas
cmp
pop
adc
xchg
lds
test
or
dec
sub
push
js
xchg
inc
insb
cld
pop
sub
test
sub
enter
loopne
dec
and
mov
cmp
sbb
sahf
jno
gs
mov
or
getsec
mov
dec
dec
outsl
test
dec
inc
mov
xchg
inc
movsb
jo
xchg
cmp
push
or
iret
xor
and
xchg
and
xchg
je
cli
mov
sub
fadd
int3
mov
mov
gs
mov
xchg
cmp
test
dec
dec
cmp
mov
icebp
pushf
mov
inc
or
cmp
add
xor
push
dec
fsubl
mov
mov
testl
pop
xor
pop
xchg
xlat
cmp
add
xchg
dec
dec
movl
nop
outsl
push
movl
push
fisttpl
sub
dec
xchg
daa
xor
nop
adc
aad
push
push
sbb
pop
sbb
xor
sbb
jge
cmpsb
or
fwait
aas
shr
sub
mov
out
test
decl
cwtl
sub
lahf
jnp
add
outsb
hlt
inc
sbb
test
cmpsb
sub
xchg
or
in
sub
or
roll
inc
jmp
ret
push
pop
popa
or
mov
cmp
andb
add
adc
xorb
movsl
pusha
mov
xchg
mov
lea
gs
add
sbb
inc
icebp
lock
nop
insb
aas
cmp
loope
pop
shl
pop
jl
xor
dec
pusha
mov
inc
mov
fucomp
ret
pusha
add
inc
pop
push
dec
pop
sbb
nop
js
pop
aam
mov
push
mov
mov
fmuls
xor
inc
xlat
sbb
pop
decl
xorl
xchg
dec
jne
sub
and
popa
adc
or
pop
out
mov
or
jge
stos
cmp
xor
rcll
cmp
xor
xor
dec
add
xchg
xchg
test
lret
sub
jns
nop
mov
call
sbbb
loope
lret
pop
inc
in
in
fdivl
push
cmp
cmpsl
or
push
dec
mov
ret
sub
adc
or
push
xor
inc
movsl
or
cmp
stc
adc
adc
lods
or
out
jmp
in
shl
jns
jmp
aas
cmpl
int3
push
xor
jg
inc
nop
dec
int3
add
mov
sub
pop
imul
ja
adc
adc
test
pushf
jl
lock
push
mov
xor
repnz
icebp
loopne
push
and
sbb
jmp
mov
adc
adc
popa
mov
jbe
fnstcw
and
add
adc
fbld
ljmp
sub
push
and
push
and
mov
fwait
mov
and
sbb
sub
push
xor
push
cmpsl
xor
add
inc
pop
sub
stos
out
lahf
out
cs
div
cmp
enter
hlt
adc
hlt
ljmp
test
jne
cmpsb
cmp
cs
out
das
xor
clc
lcall
xor
cld
in
inc
in
mov
mov
mov
and
and
les
incl
into
push
sub
inc
adc
clc
jecxz
sub
enter
clc
nop
push
fwait
imul
pop
daa
bound
push
lcall
mov
in
mov
push
in
sub
push
arpl
adc
stos
sub
pop
daa
movb
pop
or
rorl
xor
ja
test
push
dec
cmpsl
and
and
out
add
jns
les
and
enter
adc
or
pop
shlb
pop
ja
das
movsl
add
mov
in
add
loop
pop
push
mov
push
adc
test
fs
sub
enter
sbb
in
pop
add
mov
leave
test
pop
cmp
sbb
sbb
repnz
pop
cmp
loop
add
nop
push
shlb
xor
add
test
adc
leave
imul
and
inc
pop
es
out
dec
jl
outsb
sahf
dec
push
mull
inc
mov
roll
mov
mov
jb
mov
pop
jecxz
jl
loopne
add
or
sbb
ret
xor
adc
andb
add
bound
sbb
dec
or
out
inc
lcall
mov
roll
xchg
adc
mov
out
mov
shll
xor
inc
leave
dec
or
mov
cmpsl
sbb
test
pusha
pop
or
push
arpl
dec
pop
and
and
xlat
outsl
add
imul
and
movsl
push
loop
je
cmp
adc
test
add
mov
pushf
inc
and
lds
add
jne
hlt
adc
cmpl
jmp
cmp
test
mov
or
push
pop
ret
jge
popa
bound
or
inc
pop
push
dec
sub
add
xchg
fstl
ret
pop
lcall
add
jg
mov
imul
adc
push
pop
test
mov
push
or
push
xchg
hlt
mov
dec
xor
movsb
lcall
xchg
test
decl
and
aaa
icebp
bound
bound
imul
adc
or
cld
or
jb
xchg
lods
adc
xor
psadbw
fisubs
les
dec
jg
aaa
cmp
ret
sbb
xlat
add
add
xlat
inc
xor
pop
push
insl
cmpsl
jl
sarb
xchg
scas
push
xchg
xor
xor
jno
adc
add
xchg
mov
or
jmp
push
dec
insb
xchg
rcl
add
scas
pop
lcall
mov
shll
add
lret
sbb
rcll
pop
lods
into
add
int
movsb
inc
movsb
push
sbb
jecxz
add
or
les
sahf
cmp
fs
movsb
bound
xor
sub
orb
push
inc
fiadds
pop
xchg
cs
jg
mov
adc
pop
sbb
pop
inc
repz
shrl
cmpsb
push
push
cmp
gs
mov
xor
jmp
or
adc
xor
rcrl
and
xor
bound
cmp
dec
add
mov
push
lahf
xor
and
lcall
add
add
mov
rol
inc
arpl
add
mov
sub
andps
sbb
mov
sub
add
into
imul
inc
outsl
pusha
pop
out
xor
cmp
push
rcl
and
lods
jp
aam
mov
or
nop
xchg
iret
adc
push
rorb
push
mov
push
xor
dec
cld
push
andl
push
pop
imul
jp
inc
test
mov
pusha
add
jmp
repnz
lahf
or
rolb
or
das
xchg
aaa
cmp
ja
push
push
or
ret
xchg
mov
mov
mov
mov
cmpsb
add
sbb
mov
push
mov
leave
or
adc
daa
sub
adcb
addb
test
xlat
add
mov
add
test
xor
int
out
addl
fiaddl
iret
or
out
add
cs
pusha
scas
add
push
dec
xchg
sbb
nop
popa
outsl
fbstp
outsl
nop
rcrb
cmp
movd
test
js
js
inc
icebp
int3
jne
jg
dec
shll
push
pop
xchg
xor
insl
xchg
aaa
sub
add
cmp
insl
mov
adc
cmovbe
cwtl
sbb
lock
popa
mov
push
cmp
push
js
mov
add
or
xchg
mov
aas
out
adc
movsl
or
bound
test
es
pop
movsb
fwait
pop
push
popf
or
inc
outsb
outsl
push
outsb
nop
pop
lods
inc
pop
push
pop
mov
and
mov
xchg
or
pop
shll
push
je
das
xchg
pop
insb
push
push
fildll
xor
mov
jo
inc
movb
das
lcall
nop
cwtl
fbld
sub
shrb
mov
aaa
sbb
cwtl
adc
neg
push
push
jae
or
add
pop
aaa
filds
jno
inc
push
mov
pop
adc
xor
pop
mov
and
aam
enter
lock
xchg
xor
sub
jno
inc
fs
push
mov
mov
jmp
cmpb
or
and
leave
mov
dec
shlb
sbb
dec
jmp
test
cwtl
xchg
movsl
add
sbb
in
mov
inc
loopne
xchg
sbb
pop
add
nop
xchg
cltd
les
xor
loopne
ret
lret
adc
jb
add
push
and
add
sbb
xchg
or
clc
adc
repnz
inc
test
adc
movsl
pop
dec
lret
adc
es
xchg
fwait
cwtl
pop
inc
push
dec
inc
cmpl
adc
and
pusha
packsswb
arpl
xchg
push
frstor
pop
inc
xor
push
sub
xchg
cmp
or
sub
out
jo
jp
xor
cmpl
mov
mov
inc
imul
scas
cmp
insb
push
inc
xchg
pop
adc
and
mov
pusha
xchg
mov
mov
inc
ss
or
inc
mov
mov
lret
push
push
mov
pop
push
push
sub
push
push
and
add
flds
cs
jg
jno
adc
pcmpgtd
aaa
pop
xchg
test
mov
data16
xlat
cmp
pop
rolb
and
mov
xor
sub
lret
es
outsb
mov
or
fists
xchg
push
cs
xchg
bound
mov
cwtl
gs
jmp
mov
xchg
imul
dec
mov
rclb
call
mov
cmp
mov
fchs
pop
sbb
out
pop
adc
adc
and
sbb
nop
sbb
cmp
lcall
jmp
xlat
rorb
add
lahf
lock
add
mov
mov
jnp
adc
push
mov
sub
mov
imul
push
lea
sbb
imul
sub
push
into
cld
and
or
call
sub
clc
dec
and
addr16
in
or
xchg
dec
push
leave
dec
ret
pop
orb
mov
imull
push
inc
mov
adc
sub
movsb
ja
and
shlb
mov
fisttpll
sbb
in
or
lret
adc
push
lods
xchg
cmpsb
xor
aad
rolb
enter
cwtl
jmp
lock
sbb
lock
mov
and
adc
sub
loop
loope
js
or
dec
add
js
mov
add
xchg
fldt
test
inc
es
in
xlat
fcomps
ret
ljmp
add
leave
orl
and
jns
add
movsl
pop
xor
enter
pop
and
leave
sub
and
in
xor
gs
lock
arpl
dec
test
sbb
adc
nop
das
pop
iret
mov
push
or
and
xchg
push
loop
and
sub
pusha
and
lods
add
cltd
mov
pop
add
pop
out
lods
nop
stos
pop
add
nop
aaa
dec
pop
dec
fstps
negb
add
into
xchg
xchg
ficomps
mov
adc
das
push
mov
dec
push
adc
pop
mov
lods
dec
mov
mov
aam
and
sub
mul
and
sbb
add
dec
lea
push
add
test
dec
jnp
andb
pusha
sbb
shrb
subl
test
daa
sbb
push
iret
testb
adc
inc
adc
sub
xchg
in
or
inc
add
mov
ret
insl
pop
imul
rorl
rol
dec
jb
repnz
imul
mov
and
xor
pop
cmpsl
inc
and
xchg
inc
fs
mov
add
iret
sbb
shlb
xchg
scas
mov
aas
or
jl
lods
mov
sub
stos
mov
xorb
lahf
cmp
das
mov
fldcw
adc
add
adc
rcrl
push
pusha
aam
sub
cmp
clc
xor
pushf
fimull
in
push
dec
or
jmp
insl
mov
popf
mov
adc
fiadds
movsb
lds
jns
fisttps
add
adc
pusha
rcll
jns
xor
add
rcll
sub
sub
xor
add
xor
dec
lods
dec
out
jnp
subb
adc
xchg
mov
add
xor
and
cmp
cmp
pusha
mov
inc
mov
fcmovnb
add
jb
inc
mov
sahf
lahf
lock
or
in
andb
add
das
in
lahf
inc
inc
popf
add
aam
stos
mov
iret
push
and
xchg
jo
push
pop
ret
add
je
daa
scas
add
aam
add
rolb
cmpsb
sbb
imul
jo
scas
cmpsl
add
movsl
or
push
mov
push
xchg
fmuls
xchg
lea
push
fadds
xchg
cmc
xor
push
push
inc
push
sub
mov
or
clc
pop
repnz
add
mov
pop
rorl
cmp
dec
mov
dec
setno
or
push
xchg
imul
outsl
sbbl
and
dec
jae
and
loopne
dec
xchg
and
sub
and
adc
mov
sub
test
lock
lds
rorl
fcomps
and
rolb
push
nop
popf
popa
loop
sti
psrld
adc
cld
mov
mov
roll
xor
adc
add
add
cmp
add
lcall
bound
and
sarw
add
mov
xchg
or
in
movsl
xor
mov
leave
mov
fisttps
or
es
mov
dec
jg
xlat
imul
je
xor
daa
xor
or
inc
sub
push
mov
enter
insl
push
or
inc
pop
pop
and
ficompl
gs
add
xchg
and
mov
fcoml
in
jl
imul
and
add
push
push
mov
adc
jbe
and
push
lahf
js
or
inc
lods
sbb
cmc
mov
mov
cmpb
adc
popf
add
sub
mov
push
fdivl
and
adcb
cld
mov
lahf
sub
mov
and
cwtl
add
and
sub
or
in
push
or
jle
add
jmp
pop
ret
inc
movsl
or
call
lock
xchg
mov
insl
adc
and
adc
sbb
jle
dec
adc
dec
sbb
fdivs
mov
add
cmp
push
pop
lock
mov
cmp
loop
push
xchg
adc
add
mov
scas
push
jns
add
xor
add
pop
jne
mov
cmpsl
sbb
popw
sti
test
nop
adc
in
mov
mov
push
sti
inc
and
jmp
pop
push
xor
inc
dec
dec
ret
add
pushf
mov
sbb
adc
adc
cwtl
xor
insl
xor
adcb
and
mov
or
add
xorl
aaa
movsl
push
fidivl
jae,pn
push
xlat
push
dec
cmpb
and
jbe
insl
cwtl
dec
jno
xor
mov
add
arpl
daa
jns
cmp
add
movsb
data16
loopne
and
push
call
rorl
lods
xchg
and
das
dec
arpl
xor
fdivrl
cmp
ss
nop
cs
xchg
lcall
add
es
das
mov
leave
dec
popf
cs
add
mov
and
insb
out
jne
cmpsb
sbb
sbb
fcomps
popf
clc
pop
mov
notb
clc
cmp
mov
or
jle
dec
xchg
mov
add
cmpsb
ret
dec
and
jne
mov
dec
or
ss
mov
xor
jo
sub
xor
movsb
ds
mov
sti
xchg
push
outsb
insb
mov
outsl
es
sbb
or
je
cltd
or
add
cs
out
outsl
cmp
mov
sbb
loopne
mov
fistl
pop
in
add
mov
fwait
nop
pusha
dec
and
adc
dec
leave
and
fsubs
dec
lret
enter
jns
in
or
les
pusha
popa
push
pusha
xor
sub
lds
dec
sbb
push
pop
sbb
xor
roll
divl
xchg
mov
inc
dec
xchg
dec
icebp
cmp
ss
cli
cmpsl
test
sub
je
sub
je
mov
xchg
shlb
lret
or
cmp
fucomi
push
push
and
jle
add
imul
and
insl
shlb
inc
leave
mov
call
enter
fisttps
addr16
or
push
dec
mov
and
lahf
leave
sub
push
ds
xchg
xchg
int3
dec
or
dec
pop
add
ss
add
in
stos
adc
mov
fmull
mov
cld
push
inc
ss
jo
or
mov
push
pusha
xchg
int
jns
test
mov
mov
les
dec
sub
push
jo
mov
and
push
fsubr
pop
movl
lods
mov
mov
add
add
cmpsb
sbb
sub
jno
pop
fwait
mov
fs
stos
loope
dec
xchg
and
rolb
dec
inc
hlt
adc
push
xor
mov
rcrl
test
sub
inc
mov
insl
rcrl
xlat
mov
call
sub
jae
and
addl
loope
mov
xor
mov
fcoms
mov
outsl
and
les
int3
jecxz
and
mov
and
in
inc
push
cmp
les
stc
hlt
push
ficompl
and
add
push
push
and
and
cmp
and
or
and
inc
pop
aas
repnz
mov
cmp
out
mov
jns
nop
push
pop
loope
push
xor
addl
cmp
mov
add
jbe
ret
pop
mov
nop
nop
je
cltd
mov
mov
cmp
or
and
push
sub
add
pop
or
xchg
push
mov
int3
mov
cld
cltd
adcb
or
lds
lret
cmp
inc
into
pop
pop
and
and
add
daa
or
mov
add
sbb
lret
pop
mov
pop
pusha
add
adc
lds
cwtl
jnp
das
and
adc
xor
popa
push
popa
push
call
pushf
adc
fwait
dec
xor
mov
push
sbb
add
daa
sub
and
sbb
add
mov
cltd
sub
fdivs
and
cmp
and
mov
fcoml
loopne
fs
rolb
xchg
rcrl
scas
jmp
sbb
and
fbld
sbb
adc
and
mov
push
ficompl
add
aad
dec
pop
nop
xchg
sbb
xor
add
rcl
jle
jge
add
sbb
cmp
pop
mov
in
or
test
inc
lcall
mov
xor
jae
xchg
sub
loop
rcrb
dec
dec
loop
orl
fnstenv
cmpb
movsb
pop
mov
fimuls
push
sbb
pop
xchg
push
add
and
jno
mov
jbe
and
adc
and
insb
mov
xchg
push
mov
mov
daa
sub
add
adc
jbe
jns
ss
jbe
div
mov
mov
add
leave
push
pop
cmp
xchg
push
ss
fmul
scas
sbb
bound
dec
std
decl
dec
adc
pop
sub
jecxz
mov
cmp
fisttpll
push
testl
popa
or
adc
fsts
mov
outsl
insb
dec
xchg
cmp
xor
fcmovbe
push
jo
clc
loop
clc
mov
mov
jmp
test
push
mov
je
or
popa
pop
lea
bnd
mov
repnz
sub
adc
adc
cmp
repnz
or
xchg
test
test
jge
pop
adc
add
dec
arpl
ss
push
scas
adc
mov
sbb
addr16
xchg
out
mov
lds
lcall
sbb
pop
pop
and
jmp
stos
cmp
fildl
dec
in
dec
adc
pusha
xchg
pushf
push
out
xchg
mov
pop
loope
mov
adc
sbb
add
outsl
rol
pop
outsl
xor
or
inc
or
je
mov
iret
and
push
sub
and
test
gs
les
and
aam
out
mov
inc
or
dec
clc
push
fldcw
sahf
sub
inc
xor
add
dec
rolb
sub
inc
jl
jmp
push
ret
add
cmp
jg
add
jmp
jns
xor
std
fcmove
mov
dec
mov
xor
in
pusha
data16
lea
add
mov
sbb
les
es
push
seta
sub
arpl
call
dec
mov
out
push
mov
mov
outsl
lcall
test
fildll
or
pop
xor
cmp
pop
pop
in
pusha
enter
lahf
add
lcall
pushf
loop,pn
loopne
enter
inc
push
cmovo
add
movsb
or
aas
rorb
adc
test
adc
inc
pushf
popl
mov
inc
mov
xor
and
mov
inc
push
inc
xor
or
adc
jnp
daa
sub
daa
and
inc
mov
xor
cmpsl
cwtl
or
das
or
pop
pop
pop
popf
xchg
movsl
ret
pop
mov
clc
icebp
dec
subl
fiaddl
and
outsb
mov
scas
dec
mov
inc
or
xchg
pop
lock
aaa
hlt
mov
lret
jbe
subl
in
ret
xor
fsubr
mov
sub
xchg
popa
rcrl
or
arpl
add
pop
adc
dec
enter
sub
jmp
hlt
rolb
jmp
pop
adc
pop
push
insb
arpl
out
test
rcrb
jg
add
call
ror
fwait
push
mov
repnz
aad
aas
out
sbb
inc
xchg
cmp
and
popa
popf
jno
cmp
and
inc
repnz
jg
popf
negb
cld
push
add
jmp
pop
sub
cmp
adc
mov
cmp
sbb
xor
sbb
sub
pop
leave
neg
or
outsl
insb
outsb
nop
loopne
push
adc
dec
xchg
icebp
loopne
pop
dec
sahf
push
push
push
mov
add
xor
pop
push
mov
mov
add
call
sbb
pop
dec
dec
xor
fdivrs
testb
cmp
mov
mov
add
mov
adc
adc
cmp
js
pop
or
test
mov
mov
add
fists
arpl
add
fisubrs
nop
and
or
fstp
fs
adc
mov
ja
sbb
xor
or
or
push
imul
xchg
les
cmp
fisubl
inc
push
fs
test
or
enter
out
mov
adc
mov
xchg
jae
pop
sbb
inc
es
adc
lea
mov
ret
push
cmp
mov
dec
pop
test
movsb
movsb
inc
mov
out
mov
jb
or
inc
stc
out
lods
dec
fstpl
fwait
popf
push
mov
repnz
movl
cmpb
push
adc
ret
jecxz
mov
mov
or
cld
popf
icebp
rolb
aad
add
outsb
mov
mov
out
mov
sbb
xchg
mul
test
pop
push
xchg
push
and
and
ret
int3
sbb
sub
inc
adc
jl
add
or
out
repnz
pop
and
push
push
add
orl
adc
push
add
mov
push
adc
push
orb
ficoms
leave
andb
push
cs
add
aas
loope
pop
imul
ljmp
adcl
xchg
pop
daa
out
adcb
fdivr
inc
and
cmpsl
lock
cwtl
pxor
or
pop
mov
ret
pop
lock
dec
movsb
mov
inc
rclb
jecxz
adc
jo
mov
mov
and
adc
jl
jne,pt
or
nop
movl
dec
pushf
and
push
jg
popf
mov
push
add
ret
popa
inc
fstps
dec
jo
pop
jnp
mov
mov
and
ret
add
add
popa
and
and
in
sub
sub
movsl
lods
js
xor
cmpl
lahf
orb
xchg
cld
mov
test
pop
je
enter
cmp
outsl
movsl
xor
mov
out
sbbb
adc
and
push
nop
out
rcll
clc
push
enter
sahf
and
int3
rcr
push
xchg
dec
shll
add
popa
or
fisubrl
cmp
adc
ss
add
mov
cmp
ficoml
sbb
push
add
cmpsl
pop
in
ss
inc
test
push
test
out
shll
jl
jbe
cwtl
pop
push
pop
xor
add
push
pop
add
pop
mov
addr16
adc
xchg
inc
lcall
push
dec
and
xchg
jns
dec
push
push
xor
cmpsb
imul
mov
cmpsb
outsl
ja
xchg
lea
insl
hlt
js
adc
shll
lahf
cs
fists
add
mov
inc
mov
cmp
sub
sub
add
or
lds
xor
inc
or
xor
mov
fimuls
sbb
or
inc
adc
orl
add
add
pop
dec
xor
mov
mov
push
mov
add
test
fwait
in
out
and
add
inc
jmp
out
cmp
mov
jl
sbb
lds
and
dec
cmpsl
iret
adc
out
out
hlt
adc
movsl
or
mov
add
inc
fimull
sbb
mov
mov
mov
repnz
pop
test
jecxz
and
adc
jb
push
cmc
aad
test
mov
xchg
sbb
add
stos
cmpsl
js
pop
fdivs
imul
push
add
pop
push
or
push
aam
insb
popf
cmpsl
pop
push
and
mov
movsb
int
pop
dec
mov
mov
mov
inc
xor
and
cmpsb
mov
pop
inc
lcall
jmp
pop
rorb
movb
or
inc
sbbb
mov
stos
stos
or
add
scas
sbb
or
test
addr16
popf
xor
lahf
inc
and
jo
jns
xor
sbb
pop
sbbb
pop
cs
sub
ds
pop
jno
adc
movsb
loopne
or
push
jbe
pop
mov
popa
hlt
jns
push
cwtl
imul
fnstcw
nop
mov
pop
daa
scas
pop
test
sbb
mov
sbb
cmc
call
inc
push
sbb
bound
rorl
cmpsb
in
out
push
stc
mov
xor
aad
popa
cli
inc
ja
stos
sub
mov
adc
add
add
sbb
push
sbb
lods
sub
jmp
test
adc
scas
cmp
scas
push
inc
aaa
iret
or
sbb
mov
test
mov
push
imul
sub
rolb
scas
fnstenv
and
add
popl
sbbb
adc
dec
mov
mov
dec
dec
das
push
or
pusha
sbb
shlb
faddl
scas
daa
adc
ficoms
inc
push
cmp
pop
xchg
push
inc
pop
jmp
adc
xchg
test
and
adc
sbb
shrb
pop
fdivs
dec
sub
repnz
and
mov
cmpl
ret
mov
cltd
cwtl
andb
sbb
add
or
or
inc
jge
enter
lahf
rcrb
cmp
pop
fmuls
in
mov
adc
sbb
or
test
push
inc
inc
stc
sbbl
lahf
add
rorb
push
dec
out
add
das
aas
andl
and
insb
add
pusha
sbb
popa
test
pop
enter
pop
mov
dec
jno
imul
das
inc
sub
imul
add
dec
sub
dec
xchg
dec
mov
bound
xchg
loope
fs
xchg
mov
mov
inc
sub
adc
movsl
aaa
cmpb
in
popf
lock
cs
inc
das
call
movsl
or
inc
mov
icebp
sbb
test
pop
adc
and
adc
xor
popa
idivb
xchg
push
enter
into
adc
xchg
push
pop
sub
add
mov
mov
popf
cmp
into
push
call
andl
in
bnd
shl
std
fsub
aam
inc
xchg
daa
js
mov
imul
push
jns
inc
imul
cwtl
mov
cmpsb
cltd
es
pop
mov
push
xor
ljmp
loop
jbe
rclb
mov
scas
imul
cmpsl
shl
or
in
sub
xor
dec
psadbw
shlb
orb
fsub
in
pop
inc
ss
mov
nop
pop
data16
popa
pop
sbb
test
or
cmp
shlb
test
sub
inc
adc
ret
mov
loop
mov
pop
sbb
jo
xor
cmp
outsb
pop
data16
xor
push
fsubrl
sub
xchg
jno
xchg
pop
ja
mov
mov
or
pushf
pop
pop
mov
adc
les
push
sbb
inc
mov
rorl
call
mov
adc
mov
cmp
inc
push
inc
push
movl
lock
mov
ss
xor
daa
shll
enter
inc
dec
fists
ja
add
push
movb
popf
inc
inc
or
cmp
and
mov
movsl
outsl
sbb
adc
jecxz
sbb
push
fistpll
arpl
mov
sbb
inc
add
in
mov
lods
add
add
shll
imul
xor
fwait
push
in
andb
cmp
repnz
test
dec
adc
or
mov
ret
nop
xlat
xchg
dec
and
test
scas
push
rcrb
and
inc
push
push
sub
lcall
mov
jecxz
in
mov
mov
popl
mov
add
mov
scas
jo
mov
mov
mov
sub
add
push
imul
lret
dec
lods
cmp
mov
adc
dec
inc
cmpl
add
mov
add
add
in
adc
sbb
dec
filds
movsl
pop
orl
mov
ss
sub
leave
arpl
lock
mov
mov
cld
dec
dec
aaa
pop
out
das
test
jns
mov
inc
dec
mov
xchg
inc
sti
dec
cwtl
or
inc
cld
mov
outsb
outsb
adc
push
ret
mov
sub
andb
pop
hlt
adc
imul
pop
push
sbb
cmp
or
arpl
adc
mov
loopne
and
mov
pop
rcll
jns
ds
mov
xor
jb
dec
aam
insl
xor
add
mov
and
add
lods
sub
mov
push
mov
insb
push
cmp
out
mov
xchg
sub
je
test
inc
or
sub
rol
ds
or
inc
xor
ret
cltd
out
and
mov
daa
scas
scas
mov
fwait
and
pop
or
scas
stos
lock
cltd
push
cmp
insb
mov
pusha
imulb
inc
insl
in
cmpl
mov
sub
cmc
xlat
mov
pop
sbb
dec
and
push
xor
xor
xchg
adc
rolb
jns
hlt
aas
je
ret
cs
inc
sahf
jb
cmpsb
into
inc
clc
es
movsb
mov
push
mov
xchg
lods
dec
inc
mov
add
pop
push
sbb
sub
push
in
xchg
and
xor
mov
shlb
pop
adc
and
mov
jl
call
call
test
cmp
loopne
inc
xchg
add
in
gs
cs
dec
push
sbb
fcomp
add
jns
jbe
iret
jmp
push
int3
xchg
es
push
int3
or
inc
push
xchg
push
imul
pop
shl
ret
stos
mov
testl
inc
out
aam
fsubr
dec
pop
dec
test
push
adc
add
out
sub
insb
and
jo
scas
es
dec
ret
fistpl
aaa
lcall
ffree
or
pop
pop
mov
mov
xor
cmp
adc
adc
push
xchg
sub
adc
jne
ret
push
fcmove
aam
push
lods
mov
cmp
mov
fwait
lret
mov
adc
hlt
push
lret
sub
lcall
pop
movsb
and
loopne
adc
xchg
imul
jns
call
sub
and
cmp
loope
lds
add
xor
push
and
pop
push
push
sbb
pop
scas
or
xor
imul
fildl
popa
push
add
pop
sbb
orb
stos
pop
sub
dec
mov
pop
cmpsl
fsubl
pop
or
jge
mov
pop
mov
ret
jg
ret
inc
das
mov
xor
xchg
sbb
imul
scas
ja
push
push
push
test
loopne
xchg
add
add
inc
sub
push
aad
sbb
inc
imul
mov
push
dec
add
xchg
mov
cmp
and
cmp
loope
nop
mov
add
enter
add
inc
popa
inc
add
nop
add
nop
cltd
dec
mov
dec
imul
push
test
dec
fdivrl
sahf
add
adc
cmpb
pop
xchg
lret
adc
mov
push
and
jno
and
xchg
rcl
or
leave
popa
and
lahf
addr16
add
mov
xchg
dec
test
mov
mov
lcall
xor
push
lcall
leave
cmpsl
jmp
pushf
push
adc
cs
pop
mov
rorl
shll
data16
xchg
mov
xlat
cwtl
sahf
movsb
cmpsb
or
pop
scas
inc
and
mov
push
add
adc
mov
loopne
ret
mov
mov
insl
pop
xor
jl
or
lods
push
les
fadd
fst
lcall
in
cmp
cmp
cmp
adc
push
insl
mov
xchg
xchg
pushf
mov
sub
xchg
and
mov
aam
push
fidivrl
in
fadds
push
mov
cmp
adc
or
pcmpgtd
test
std
out
mov
and
or
pop
adc
inc
add
insl
mov
dec
test
outsl
cmp
test
sbb
xor
dec
add
ljmp
mov
int
int
lea
mov
nop
add
pop
stos
pop
inc
int
addr16
jne
or
xchg
push
push
push
push
jp
orl
add
push
jbe
mov
into
cmp
repnz
mov
xor
lret
lahf
jno
xor
loopne
push
fs
addr16
xchg
in
adc
iret
xor
in
cmp
gs
pop
and
cld
repz
call
adc
je
xchg
fld
push
pop
or
cmpsb
push
xor
or
add
mov
lret
cmc
add
push
fwait
into
stos
lds
lahf
inc
lcall
imul
and
jg
and
ja
add
add
in
sbb
inc
mov
mov
mov
fiaddl
outsb
dec
es
mov
push
xor
push
jo
outsl
insb
xchg
int
sarb
andb
std
lret
divb
je
mov
stc
pop
push
jl
add
mov
ss
fwait
sub
mov
insb
xchg
pushf
test
mov
mov
xchg
pop
ss
jbe
xor
test
fwait
in
popf
pop
pop
sarb
mov
aam
nop
hlt
pusha
and
pop
call
rorb
xor
push
jne
pushl
inc
fisttpl
dec
jmp
pop
in
mov
adc
pop
loopne
nop
and
pusha
and
jo
pop
ss
clc
xor
fdivrl
shrl
push
xor
add
xor
insl
xchg
dec
cmp
mov
pushf
and
out
add
mov
mov
stc
outsl
stc
std
push
adc
inc
jnp
in
lahf
adc
pop
daa
sub
pop
or
call
or
inc
fmulp
sti
push
addr16
push
inc
lahf
push
shrl
sti
pop
pop
and
add
int3
and
xchg
pop
shll
hlt
inc
and
into
push
in
pop
pop
mov
lcall
nop
push
cmp
or
mov
jnp
je
sub
call
xchg
dec
rcrl
xchg
lods
push
movsb
je
pop
pusha
dec
mov
imul
cmp
cmpsb
mov
insl
pop
mov
out
push
mov
fcmovbe
lcall
pop
push
pop
xchg
mov
or
inc
rolb
pop
rcl
inc
outsb
xchg
scas
jns
mov
pop
test
js
adc
mov
xchg
in
mov
hlt
pop
les
imul
xor
xor
test
mov
scas
and
push
andb
push
sbb
jg
ds
fistpl
dec
pop
push
add
aam
repz
or
pop
dec
fldcw
sbb
fs
mov
xchg
pop
filds
pop
inc
push
sar
pop
mov
pop
mov
push
in
add
clc
or
pusha
jge
fldcw
add
test
xor
push
loopne
dec
repz
aas
in
test
out
dec
shll
xchg
aaa
movsb
mov
data16
xchg
push
pusha
sub
push
in
mov
mov
paddsb
push
sub
rorb
data16
je
insb
lds
mov
call
cld
les
int3
push
pop
and
sub
xchg
out
pusha
push
cmpsl
pop
mov
push
ja
push
outsb
xchg
lret
sub
pop
int3
orl
mov
insb
dec
cmpsl
push
dec
test
sbb
mov
ss
xor
enter
mov
mov
push
fs
adc
pop
mov
dec
imul
or
adc
mov
in
adc
adc
pop
pop
mov
jle
sub
cld
imul
insl
dec
xor
adc
daa
data16
xor
mov
lods
push
pusha
outsb
xor
hlt
inc
les
pop
faddl
sub
push
addr16
sub
and
sbb
addr16
push
push
lcall
mov
les
insl
sbb
out
outsl
mov
push
mov
mov
pop
mov
inc
adc
in
mov
inc
push
rcrb
bsf
xchg
lods
mov
push
enter
sub
cld
hlt
lcall
push
sub
pop
cld
fs
ss
push
xor
pop
pop
sub
cmpsl
int3
insb
xchg
int
fcompl
js
cmp
test
fstps
sbb
push
int3
push
mov
fwait
incb
push
inc
mov
out
and
pmuludq
scas
push
lcall
pop
push
mov
push
or
fdivs
rclb
adc
sub
cld
mov
pop
rcrl
mov
addb
push
mov
lods
mov
push
test
push
push
mov
outsb
je
imul
push
dec
push
fs
lret
gs
fadd
shrb
in
fwait
in
lock
in
mov
inc
push
mov
lcall
dec
and
mov
imul
roll
inc
test
fmulp
mov
pop
mov
icebp
dec
popl
insl
lret
rorl
push
enter
xchg
in
pop
cwtl
push
xor
add
cmp
lods
mov
inc
ds
movsb
push
je
add
adc
add
inc
cmp
inc
iret
sub
mov
and
dec
sub
jmp
pusha
mov
stc
fsubs
mov
je
call
nop
sbb
mov
cwtl
das
inc
jl,pn
adc
mov
lods
frstor
jbe
cwtl
or
and
mov
adc
movb
sbb
mov
push
xor
scas
xlat
jle
cs
sub
and
mov
insl
pop
mov
sahf
dec
movsb
popf
mov
imul
cmpb
out
adc
mov
fsubs
mov
popa
mov
mov
mov
sbb
add
mov
in
int3
adc
insb
and
cmova
aam
add
pop
lock
and
int3
push
inc
mov
sbb
lret
sbb
or
xchg
repz
rorb
in
fcoml
and
mov
xchg
enter
outsl
or
movsb
out
cmp
and
adc
mov
fwait
je
loope
push
fdivl
jns
shlb
mov
pop
das
add
inc
aad
sub
mov
mov
mov
ficoml
nop
add
fstps
sti
cs
int3
fisubrs
lidtl
pop
rolb
adc
fidivl
push
dec
ds
sbb
xchg
mov
into
or
loopne
and
fnstenv
xchg
or
rolb
mov
mov
les
movsb
cmp
push
stos
sub
sbb
fisubrl
mov
and
ror
loopne
mov
push
outsl
mov
addr16
ja
loope
or
or
xor
push
lahf
and
fucomip
add
aaa
mov
inc
ds
ffreep
xor
bound
insl
xchg
pusha
insl
mov
sarl
mov
mov
inc
mov
jo
sbb
inc
mov
and
jle
hlt
mov
lcall
jne,pn
fdivrs
dec
mov
rcll
stos
arpl
cli
mov
or
cltd
lods
bound
mov
mov
add
inc
pop
jnp
cmpb
fldl
fsub
and
cmp
pop
add
jle
mov
adc
shrl
cld
mov
push
clc
sbb
jp
adc
sub
pusha
adc
xor
aaa
cwtl
mov
add
mov
or
int
popl
movsb
mov
insb
mov
rolb
subl
add
jo
je
ffreep
push
sbb
jmp
pop
enter
sub
inc
or
xchg
mov
sbb
scas
push
and
fs
pusha
mov
pop
dec
sbb
jno
inc
xor
mov
push
mov
lret
and
add
pop
or
mov
sbb
std
inc
jge
mov
imul
xor
movsb
mov
insb
cs
inc
sbb
pop
dec
dec
lock
push
add
imulb
ficoml
iret
subl
jo
jo
outsl
sub
lea
mov
movsl
pop
pop
lea
scas
das
jae
add
aaa
lods
je
ja
cmpsb
imul
gs
dec
pop
xchg
xchg
das
or
mov
divl
xor
js,pn
iret
or
cmp
xor
add
xorb
xchg
adc
jnp
addl
push
jo
movsb
add
and
fadds
cmp
or
div
adc
adc
or
or
movsl
stos
or
andb
add
das
mov
adc
cmp
push
and
dec
in
and
sub
int3
enter
enter
fcomp
fxch
fidivrs
mov
fnstsw
loope
cmp
dec
fprem
push
push
test
mov
add
sub
ds
mov
cmpsb
adc
mov
xor
fiaddl
das
aad
ja
cmpsb
dec
mull
cltd
cvttps2pi
xor
into
pop
pop
adc
jns
mov
xor
scas
loopne
xor
pop
xchg
push
xor
dec
push
cltd
daa
or
ret
negb
and
data16
lock
add
lcall
inc
cmpsb
imul
imul
cmpsb
imul
enter
call
lock
sbb
in
orl
cmp
push
pushf
sbb
in
xchg
and
inc
dec
sahf
sbb
mov
shlb
nop
sbb
push
sbb
xor
rcrl
and
fdivp
jmp
call
add
mulb
mov
mull
dec
test
cmc
fidivs
leave
pop
inc
push
movsb
sbb
add
add
faddp
push
jb
xlat
adc
lods
mov
fwait
inc
add
fldl
pop
jg
xchg
mov
inc
or
jmp
pushw
add
fidivs
mov
add
sbb
outsb
insl
outsb
flds
cs
or
adc
adc
adc
mov
push
mov
lods
lret
add
stc
sub
add
add
add
add
add
fimuls
add
pop
addb
lcall
insl
or
or
sub
add
sahf
pusha
nop
pop
loopne
add
or
mov
addr16
fwait
cmpsb
imul
dec
shrl
and
push
shll
nop
movsb
ja
xor
mov
fmuls
rolb
fiadds
ffreep
sahf
aaa
aam
mov
push
in
inc
iret
push
push
inc
xor
add
push
and
movl
and
outsb
or
or
mov
mov
pand
mov
pop
jmp
rolb
gs
ds
xchg
inc
jg
pop
push
add
sub
shll
push
push
test
lcall
movsb
mov
imul
imul
imul
dec
shrl
aam
int3
xor
shll
in
aam
shll
push
fcompl
leave
fs
je
lcall
sbb
imul
imul
cmpsb
imul
sarl
add
lcall
jo
or
lcall
xor
imul
imul
cmpsb
imul
lcall
movsb
dec
shll
sub
xor
shll
inc
aam
pop
shll
hlt
inc
cmpsb
imul
cmpsb
imul
cmpsb
imul
shll
fs
sbb
dec
shll
fs
push
cmp
xor
jo
mov
jo
xor
shll
mov
sbbb
mov
mov
add
nop
fcoms
cmpsb
imul
cmp
data16
pop
inc
mov
rcll
fs
shll
test
cmp
dec
sarl
dec
shll
les
enter
imul
cmpsb
imul
imul
cmpsb
imul
xor
shll
je
cmp
pop
push
xchg
add
lcall
mov
xchg
imul
imul
insb
lcall
into
outsb
shll
and
inc
imul
mov
dec
pushf
fs
out
mov
je
dec
test
test
rolb
outsl
movsb
push
in
xor
daa
les
cld
ss
sbb
aam
or
in
or
hlt
push
sub
js
jg
inc
addr16
dec
dec
xor
push
les
pop
aam
pop
pop
cmpsb
imul
incl
int
push
mov
lcall
or
and
lcall
pusha
data16
cltd
cmpsb
insb
js
aas
cld
push
lcall
insb
js
imul
imul
adc
or
inc
out
add
xor
rcrb
pop
cmp
cmp
cmp
adc
insb
repz
in
push
and
mov
pop
mov
push
mov
add
push
mov
xlat
scas
adc
ds
push
push
hlt
push
and
jl
fnsave
out
nop/reserved
sub
push
cmp
jle
pop
fcoml
lret
cs
vmread
cmp
cmpsl
push
or
push
add
or
add
int
imul
dec
shll
cmp
push
mov
push
scas
push
dec
shll
push
call
sbb
jle
adc
imul
imul
imul
mov
cmp
in
and
push
adc
lcall
rcrl
pusha
add
push
add
add
dec
and
cmpsb
imul
cmpsb
imul
mov
imul
int3
xor
dec
out
pusha
incl
outsb
cwtl
jl
jg
push
inc
add
cmp
or
or
push
punpckldq
out
rclb
ret
add
jg
mov
or
faddl
sbb
out
or
adc
or
xchg
mov
out
push
ror
cmp
sub
cmpsb
imul
cmpsb
imul
loopne
int
lcall
sbb
lock
inc
in
bound
andb
mov
or
mov
add
jmp
xchg
mov
mov
xor
jle
out
mov
dec
mov
add
sbb
popf
mov
sbb
unpcklps
mov
inc
push
adc
xor
cs
push
or
or
add
and
add
shrl
pop
outsb
rcll
movhps
outsb
out
xor
dec
shll
dec
push
pusha
js
inc
shll
push
scas
cmp
test
nop
sbb
add
int
push
or
and
inc
dec
shll
cwtl
lods
ss
shll
int3
fdiv
add
shll
cmp
pusha
mov
shll
mov
sbb
xor
mov
rorl
xchg
aas
imul
add
or
nop
push
je
test
push
dec
shll
cli
mov
stc
int3
clc
loopne
imul
cmpsb
imul
imul
cmpsb
imul
in
enter
sub
nop
in
add
inc
adcb
or
inc
mov
lret
andb
ficoml
mov
ja
or
pop
outsl
inc
imul
std
or
or
add
scas
xchg
pop
sbb
inc
adc
nop
dec
or
nop
or
stos
dec
mov
pop
lcall
cwtl
fsubs
or
outsl
andl
inc
add
js
ficompl
pop
add
mov
xchg
roll
mov
add
sbb
mov
jg
fdivl
pop
mov
xchg
ret
pop
fadds
xchg
pop
add
mov
mov
xchg
stc
mov
xor
rorl
dec
shll
add
testb
test
test
lcall
loop
jmp
outsb
cs
dec
add
loopne
xchg
out
cmpsl
pop
add
adc
push
push
adc
add
add
loope
lock
cmp
stos
mov
div
js
filds
xor
or
cmp
sarl
repz
insl
arpl
dec
xchg
or
mov
adc
out
jnp
jnp
jb
jae
dec
aas
add
addr16
dec
jge
mov
dec
xor
jne
cmp
popa
add
faddp
out
inc
ret
adc
mov
fistpll
arpl
adc
inc
pop
jne
add
jnp
addr16
bound
js
arpl
ja
xchg
mov
lea
sub
push
jp
das
pop
data16
mov
add
mov
add
xor
jnp
js
and
jmp
dec
insl
sbb
insl
mov
mov
mov
stos
add
in
add
leave
or
jno
dec
lds
adc
add
add
add
dec
sub
test
jg
hlt
dec
pop
mov
cwtl
pop
cld
out
incl
flds
jb
incl
or
inc
sti
jo
adc
sbb
mov
xor
sub
mov
pop
mov
add
shl
fists
and
add
loopne
dec
cmp
daa
arpl
adc
adc
adc
dec
inc
pop
adc
and
inc
dec
sti
inc
sti
sbb
pop
adc
add
adc
sub
push
push
add
and
add
sub
outsl
jno
fistpll
sub
jne
pusha
add
dec
add
push
xchg
and
jmp
push
adc
popa
and
loopne
call
pop
lock
or
jns
or
jne
in
and
mov
add
add
or
add
push
scas
adc
push
cmp
sbb
push
pop
lock
mov
push
in
sbb
sub
adc
sbb
sarb
and
mov
and
or
jne
popf
fildll
out
cmovge
cmp
adc
and
mov
pushl
fisttps
mov
xor
fwait
add
sti
add
loope
hlt
add
sbb
call
icebp
idiv
out
loop
sbb
push
jp
sub
and
ja
stos
ljmp
pop
pop
jl
push
sbb
pop
and
cld
in
jno
addb
outsb
xchg
sbb
cmp
push
jg
movsl
dec
imul
popw
pop
cld
call
add
add
adc
or
mov
call
scas
pop
or
xor
jnp
pop
add
and
dec
addl
adc
add
add
sub
sbb
std
dec
flds
jb
gs
sbb
outsb
add
insl
fiaddl
mov
je
fldt
icebp
or
aas
push
dec
sbb
sub
mov
sti
inc
sbb
adc
push
loop
pusha
adc
jge
insl
adc
xorl
xorl
or
mov
jg
push
hlt
adc
lcall
mov
cs
inc
dec
inc
aad
jb
adc
das
mov
and
daa
xchg
push
xchg
xor
push
and
jle
xchg
add
and
popa
xor
ds
add
add
inc
sub
or
jmp
ficoml
addb
mov
cld
lcall
lcall
pop
inc
arpl
push
inc
out
jge
xor
push
mov
add
sbb
jecxz
aaa
push
and
and
jecxz
ud0
ret
movsb
test
test
pop
mov
cwtl
js
inc
jle
aas
clc
cli
dec
jge
lods
inc
pop
jne
and
dec
and
mov
lock
and
dec
popf
and
mov
lcall
xchg
je
and
xor
add
out
call
pusha
inc
xchg
xor
lods
or
pop
pop
paddd
inc
int
bound
iret
push
xchg
cltd
and
fistpll
and
movsb
xchg
cmp
pop
popa
ljmp
jns
flds
cmpxchg
xor
and
andl
call
out
loop
add
clc
dec
and
lods
jg
lods
mov
incl
inc
mov
pop
movlps
icebp
mov
xor
mov
ljmp
rclb
xchg
aaa
sbb
daa
push
sbb
adc
sti
stc
add
ret
sbb
leave
xor
jmp
push
mov
repz
push
lcall
cld
popf
int
ret
and
test
int
ror
fmulp
sbb
insl
add
lret
fbld
mov
xorb
cmpsl
xchg
imul
ds
jg
movntps
adc
push
add
xchg
out
insl
cmp
movsb
popa
inc
std
push
inc
test
pusha
push
pushf
add
inc
gs
fstl
flds
test
popf
pusha
lods
pushf
shr
add
mov
aad
dec
movsl
xor
jnp
inc
inc
adc
inc
mov
popa
hlt
mov
mov
dec
nop
inc
iret
mov
and
pop
faddl
mov
adc
sbb
sar
mov
nop
adc
adcb
adc
sarl
lahf
fs
cltd
inc
bound
add
ja
cmp
das
push
and
lock
subb
sub
jmp
mov
insl
dec
sti
adc
mov
shll
repnz
dec
or
out
int
int
in
shr
fcomip
and
fwait
sbb
repnz
aas
pop
sbb
cwtl
cltd
jb
dec
popf
movsb
popf
mov
les
fcomp
mov
mov
xorl
add
std
loop
sub
idiv
xchg
sahf
inc
int3
lods
mov
inc
cs
xor
mov
lods
mov
and
bound
inc
xor
fcmovnu
imul
call
loopne
push
jp
mov
je
mov
xlat
or
imull
lcall
and
pop
adc
adc
cmp
push
inc
and
add
outsl
pop
xchg
mov
imul
push
xchg
mov
adc
push
decl
call
movsb
sub
std
pop
sbbb
cmp
pushl
test
rcll
xacquire
mov
fnstsw
cmpsl
outsb
repz
pop
and
xor
cmpl
mov
inc
and
mov
push
icebp
jne
incl
xchg
addb
mov
cmp
push
icebp
in
negl
mov
pushf
or
inc
out
mov
or
and
sub
sbb
cmp
cmp
xchg
sbbl
push
stos
dec
mov
dec
imul
add
xchg
add
xor
decb
pop
push
pop
aam
nop
mov
loope
xor
dec
pop
pop
pop
jmp
add
adc
mov
cmp
mov
inc
sub
cmpl
pop
cmp
cmp
aas
cld
fiadds
std
cmp
stc
andl
adc
gs
mov
sbb
es
or
nop
xchg
xchg
inc
xor
int
or
or
movsb
xchg
loop
outsb
sbb
mov
xchg
gs
xchg
call
imul
in
repz
sub
xchg
mov
mov
mov
decl
icebp
jecxz,pn
mov
jge
add
cmc
adc
add
jp
cs
mov
jle
dec
lods
cmp
pusha
inc
cs
or
dec
jae
lea
lea
lea
push
add
cli
lcall
idivl
cs
and
ret
mov
aam
xchg
dec
mov
sti
psrlw
add
clc
lea
xchg
sbbl
stos
mov
popf
idiv
call
ret
sbb
inc
jl
mov
xchg
negl
cmpsb
sbbb
in
leave
loope
jmp
xor
rorl
std
mov
aad
incl
lcall
mov
loope
add
add
xchg
and
mov
rclb
icebp
push
sbb
and
hlt
pusha
mov
xor
cmc
pop
mov
inc
popf
xchg
ror
andl
inc
out
jg
fs
orl
mov
aaa
adc
pop
adc
jg
cli
icebp
mov
pop
xchg
add
pop
mull
mov
mov
in
rclb
orl
call
sbb
push
and
fs
mov
pop
call
sbb
loopne
add
jmp
pop
lea
add
xor
add
incl
jae
jp
cld
add
push
ficomps
and
int
adc
idiv
jmp
shlw
int
lret
pop
leave
sbb
jmp
test
mov
shll
adc
loope
addr16
aad
jg
adc
or
fnstsw
fldl
int
fwait
out
adc
cmc
sbb
daa
insl
test
dec
pop
lret
loop
repnz
in
adc
fnstenv
fs
inc
in
push
in
mov
in
outsb
in
scas
jle
xor
adc
dec
inc
rolb
push
jmp
add
lock
pushl
adc
jge
in
jo
cmp
add
pop
mov
dec
std
push
jmp
stos
mov
inc
jg
pop
xor
mov
int
jge
std
add
pop
lret
aas
hlt
or
dec
xchg
js
repnz
and
push
imul
lea
aaa
jo
lret
add
mov
or
insl
gs
inc
jle
in
test
lcall
and
outsl
jbe
push
and
test
add
sbb
xchg
xchg
add
adc
push
push
out
js
xchg
pop
ds
jmp
cs
cmp
mulb
and
sahf
inc
out
jg
jne
adc
inc
add
div
bound
adc
ret
adc
pop
jle
aam
add
pop
in
mov
ljmp
or
incl
int
int
je
shlb
sub
inc
ret
loop
or
dec
arpl
je
gs
push
xlat
out
jmp
and
popa
adc
pop
adc
fwait
call
andb
repnz
das
pop
loopne
popa
xchg
dec
xor
arpl
push
jne
out
jmp
es
cmp
jbe
stos
and
mov
push
jno
xor
aas
cld
aam
pop
lods
jae
stos
cmp
idiv
mov
movsl
cmp
mov
shl
sti
jecxz
and
cmp
inc
loop
or
mov
out
out
clc
cs
cmp
mov
mov
das
dec
ud0
incl
stos
jo
push
mov
dec
and
dec
loop
repnz
add
push
cmp
inc
inc
inc
mov
mov
or
and
xor
and
xchg
sbb
ljmp
push
je
and
ljmp
cltd
mov
out
push
rclb
adc
js
incl
push
dec
mov
adc
mov
out
cmp
push
inc
and
sar
push
jae
sar
or
insl
mov
mov
jae
fldcw
sub
mov
out
add
add
cld
or
and
fnstenv
mov
sbb
xor
sub
aam
shll
in
push
test
jo
mov
mov
call
hlt
cli
sub
seto
jge
adc
cmpl
hlt
add
mov
pop
decl
xor
out
pop
pop
pop
add
pop
bound
pop
and
jmp
pop
inc
and
cmp
mov
add
repnz
jg
dec
sbb
and
adc
sub
cmp
or
or
xchg
mov
xor
xchg
mov
subb
outsl
nop
mov
mov
arpl
insb
mov
pusha
pop
mov
inc
insl
ljmp
pop
mov
cmpb
sub
leave
add
xchg
inc
insl
insb
mov
inc
stos
mov
call
xor
jo
addr16
mov
idivb
out
mov
decl
dec
add
pop
insl
cmp
ljmp
cmp
ret
scas
lods
bound
or
sbb
xor
jo
push
xchg
lds
popa
inc
jnp
aam
dec
shll
add
mov
std
jmp
add
std
xchg
enter
push
int
sub
mov
out
cmpsb
int
sti
lods
std
or
roll
dec
mov
push
cwtl
xor
incl
jo
mov
push
add
jne
rol
aas
cld
incl
lret
pop
push
aam
mov
lock
lret
add
pop
adc
pop
pop
mov
adc
pop
rolb
out
arpl
out
cmc
stos
inc
iret
jbe
and
jg
push
xor
icebp
push
jns
repnz
mov
ret
push
gs
outsb
pop
dec
xchg
adc
addr16
daa
inc
add
and
adc
incb
or
inc
arpl
mov
sbb
sub
incl
mov
push
cli
adc
mov
add
insb
adc
mov
jo
mov
cmp
lcall
jmp
mov
lret
std
dec
leave
inc
std
cli
std
in
lock
push
add
ljmp
imul
scas
popa
jbe
or
je
nop
sub
push
push
inc
add
cmp
jne
add
mov
add
syscall
jmp
pop
adc
ret
rorl
or
mov
rolb
lret
ljmp
or
into
adcl
xchg
xor
add
dec
icebp
clc
pop
ffreep
jnp
je
loope
inc
add
mov
pop
adc
sbb
insl
imul
ljmp
in
add
in
push
stc
sbb
nop
add
ds
and
inc
sahf
in
jg
lcall
arpl
adc
cwtl
mov
fisubl
and
sbb
fwait
fs
jne
cld
aas
clc
sub
lds
push
enter
cmp
sbb
push
lahf
sbb
mov
push
mov
sahf
andl
sbb
iret
jg
or
sub
or
lock
ss
add
shrl
popf
fidivrl
daa
std
push
mov
out
jmp
and
pop
test
addr16
idiv
out
mov
imul
inc
jae
push
orl
fbld
incl
inc
mov
dec
mov
push
mov
jae
aas
cld
ud0
lcall
xchg
xchg
xchg
and
addb
or
mov
push
scas
mov
jns
mov
aam
cmp
fisubs
push
pop
pop
add
outsl
or
sbb
add
mov
dec
pusha
out
lcall
ret
inc
cmp
push
add
inc
adc
add
or
dec
shll
cmp
shll
pop
push
dec
rorl
out
dec
enter
xchg
push
cmp
divl
hlt
push
or
xor
shr
sbb
cmp
add
sub
cmp
loop
mov
inc
pop
enter
les
subb
cs
add
fsubl
add
push
add
pusha
scas
dec
setb
mov
lret
mov
cld
push
pop
cmp
push
pushf
pop
inc
in
mov
pusha
fcomps
arpl
fs
push
push
insb
cs
pop
repz
pop
scas
add
mov
xor
jne
ja
ja
js
mov
out
jnp
cwtl
pop
dec
push
imul
cmpsb
imul
add
shll
mov
mov
fsubr
clc
imul
cmpsb
imul
adc
inc
or
inc
and
or
shlb
loopne
add
inc
add
mov
xchg
jg
add
or
add
decl
and
and
and
out
mov
add
add
pop
or
notb
roll
mov
inc
add
adc
test
or
sub
sbb
repnz
add
test
adc
jb
mov
lea
dec
int
xchg
stos
gs
mov
nop
jnp
mov
add
or
xchg
xchg
dec
dec
inc
dec
inc
push
dec
push
pop
xor
inc
arpl
mov
xor
dec
dec
dec
push
inc
push
dec
inc
dec
lret
xor
and
xchg
insb
ss
pop
pop
xor
nop
dec
mov
outsb
or
adc
adc
loop
mov
fprem
add
add
or
clts
add
adc
mov
loopne
add
pop
adc
mov
daa
adc
les
mov
xchg
sbb
sbb
aas
and
add
jns
adc
jg
add
or
add
push
sbb
test
and
movlps
adc
push
pop
push
pop
nop
xor
xor
movsl
out
mov
add
outsl
or
dec
push
inc
push
add
flds
aam
dec
pop
loopne
pop
xchg
mov
nop
fdivs
daa
clc
xchg
pop
xor
pusha
xchg
sbb
andb
pushf
cmpsb
mov
scas
dec
push
clc
cwtl
mov
nop
clc
jg
jbe
popl
cmc
push
vmovsd
jmp
and
pop
shrb
xchg
icebp
aam
cmpsb
aam
imul
dec
sbb
push
imul
outsb
lcall
dec
aas
and
inc
push
or
xor
shll
fs
mov
test
in
mov
push
add
adc
cmp
lcall
xchg
cmpsb
imul
sub
clc
or
sbb
pop
enter
xchg
adc
in
cld
or
and
cmpsb
xor
pusha
push
je
dec
shll
pushf
mov
shlb
xchg
dec
shr
clc
add
sbb
xchg
adc
js
imul
les
adc
adc
jno
pusha
fistps
push
cwtl
imul
cmpsb
cltd
mov
sbb
sbb
imul
imul
data16
cld
or
jle
xor
cmpsb
imul
imul
mov
add
adc
inc
shll
test
mov
shll
push
sbb
cmp
shll
mov
mov
lcall
cmp
imul
imul
cmpsb
imul
imul
mov
in
and
push
sub
dec
pop
insb
adcb
lods
mov
lcall
or
shll
dec
pusha
xor
shll
test
ror
fsubr
cld
jle
pop
and
jo
movsb
int
dec
rol
fdiv
or
movb
adc
shlb
cltd
addl
sahf
push
addb
iret
pushw
lcall
test
imul
in
cld
or
in
add
dec
and
daa
push
and
lods
mov
mov
aaa
js
subl
push
pop
jnp
aas
cmp
loopne
clc
cld
sahf
cmp
xchg
sbb
inc
pop
subl
sbb
rcll
test
dec
es
mov
or
ds
aas
xlat
dec
cmp
sbb
into
ds
aas
and
dec
shll
in
pop
mov
push
pop
insl
fsubrl
rorl
dec
aaa
mov
fadds
adc
out
sbbb
xor
andb
outsl
mov
push
in
int3
aas
and
xor
xchg
push
xchg
xor
xchg
decb
outsb
shrl
add
notb
adc
addr16
mov
adc
js
test
dec
jno
xor
xor
sub
sbb
sub
cmp
xor
rcr
add
pop
or
adc
and
fdivl
dec
shll
inc
dec
cmpsl
cwtl
out
cltd
gs
enter
fiaddl
mov
xor
imul
inc
mov
xchg
mov
fsubr
cld
rcrl
sub
push
fs
imul
je
adcb
shll
fstps
or
sbb
shll
lods
rcr
push
fsubr
add
fwait
cmpsb
imul
dec
shrl
js
mov
dec
ror
faddl
add
bound
add
jbe
cmpsl
mov
subl
push
lods
lods
or
sub
in
push
xor
dec
add
dec
xchg
sub
fisubl
jl
test
pop
cmpsl
add
fnsave
push
adc
scas
add
lds
adc
or
insl
dec
adc
or
add
insb
notl
loopne
ss
mov
repz
rolb
push
rcr
in
hlt
inc
pop
mov
add
adc
lar
xchg
jg
jle
xor
lahf
push
and
cwtl
dec
or
test
mov
cmp
into
in
sbb
and
mov
aaa
add
xorl
mov
ss
subb
lds
and
dec
in
mov
mov
aas
cmpsb
andb
mov
je
lds
adc
push
push
fcmovu
sbb
inc
adc
divl
or
out
mov
pop
xchg
mov
lret
mov
cmpsl
pop
cwtl
xchg
add
sub
mov
push
fsubr
pinsrw
cmpsb
mov
jo
or
outsl
mov
add
xchg
addb
push
push
call
mov
sti
movsb
addb
mov
mov
int
test
sub
adc
mov
pushf
es
mov
push
daa
jl
test
cwtl
xchg
rcrb
out
mov
mov
out
mov
or
daa
push
rolb
cwtl
mov
dec
or
shll
and
andb
clc
mov
int3
lock
scas
pop
sub
jle
sahf
loopne
movsb
dec
rolb
or
and
lret
aam
sahf
jle
dec
push
rcrb
sub
sbb
push
rorl
jbe
scas
mov
mov
movsl
dec
outsb
mov
sarb
sbb
mov
fadds
leavew
mov
xchg
adc
les
add
push
or
popa
pop
inc
jbe
pusha
cmpsb
sbb
rorl
into
test
dec
push
pop
imul
enter
insb
jle
xchg
dec
rorb
cmpsb
test
mov
mov
cmpsb
test
mov
ss
imul
xchg
mov
inc
sub
sub
mov
or
into
or
mov
jo
xor
rcrl
insl
pop
xchg
xor
test
push
mov
mov
inc
push
xor
or
jl
push
mov
js
and
push
es
dec
rcrb
es
sahf
push
push
fisubrs
cs
enter
xor
push
ds
jle
push
cwtl
mov
xchg
imul
xor
cmpsl
mov
mov
mov
push
add
insb
imul
xor
ds
push
lods
mov
fs
push
inc
fmull
pop
xchg
dec
sub
push
mov
xchg
push
rcr
cwtl
push
enter
fsubrl
cmpsb
or
dec
mov
xchg
mov
fmulp
movb
cmpsb
pop
shll
pusha
es
es
es
shlb
fadds
sbb
insb
movsb
fsubrs
push
testb
add
mov
push
inc
sahf
inc
push
cld
mov
push
dec
cmp
test
aam
imul
push
mov
into
cwtl
scas
sbb
mov
ds
es
cmp
dec
push
test
stc
mov
add
enter
push
je
xor
push
pop
mov
push
or
imulb
enter
mov
sbb
int3
dec
cs
push
jo
pop
inc
fisubs
clc
pusha
ficompl
push
mov
push
divb
xor
add
data16
inc
push
add
scas
daa
test
lcall
push
js
int3
rolb
es
movb
dec
mov
mov
inc
sub
popf
sub
push
push
lret
int
mov
fsubrs
pusha
notl
and
mov
nop
push
push
xor
or
sub
and
cmpsb
movb
mov
shlb
loopne
push
or
inc
fwait
mov
xor
mov
sub
xchg
adc
out
fsubl
inc
xchg
push
loopne
jo
mov
xchg
mulb
imul
call
sbb
rcrb
js
outsb
push
cmpsb
push
or
into
jbe
mov
fwait
mov
fcomps
push
in
xor
es
sbb
push
outsb
scas
imul
adc
les
nop
push
xor
push
into
out
mov
jne
mov
mov
sahf
lods
popf
subl
aaa
mov
fwait
nop
in
sahf
in
imul
fiaddl
cwtl
push
cwtl
pop
out
ss
call
pop
and
mov
sub
pusha
push
rorb
pop
jle
sarb
pop
aam
nop
cmpsb
lods
out
in
pop
push
push
push
sub
and
mov
or
fcom
pop
push
push
push
mov
repz
jo
mov
cmp
jo
xchg
sahf
mov
dec
dec
mov
ss
lods
mov
xorb
xor
stos
adc
jo,pt
ficomps
push
cs
faddl
push
sub
mov
or
outsb
js
xchg
leave
xor
out
sahf
addb
insb
decb
add
mov
mov
push
xchg
nop
in
sub
push
dec
rcr
mov
rolb
outsb
push
shrb
outsb
aam
pop
ds
xchg
cld
push
sub
les
sub
push
mov
push
pushf
divb
sub
and
enter
push
push
enter
and
sub
ss
rolb
sub
xchg
movsb
lods
mov
push
call
stos
out
ss
and
pop
xchg
adc
popf
add
pop
jle
inc
inc
ret
mov
inc
mov
cmp
rcrl
push
cmp
pusha
push
cmp
push
or
mov
dec
inc
sarl
cwtl
hlt
xchg
push
lret
mov
movsb
xchg
inc
or
insl
ds
cmpsb
in
test
scas
cmp
ds
mov
retw
dec
push
loopne
xchg
xor
rolb
dec
jo
mov
dec
push
cld
outsb
or
dec
outsb
push
aam
xchg
es
jle
out
les
ss
xchg
loopne
shll
es
cs
or
pushf
mov
xorb
xor
insb
dec
imul
inc
lock
fisubs
adc
inc
cmp
nop
xchg
out
fimuls
adc
lock
or
ss
lods
mov
mov
mov
xor
inc
push
mov
ljmp
lock
test
cmp
xchg
fs
adc
addb
add
mov
mov
mov
xor
adcl
add
xorl
adc
add
nop
push
add
inc
inc
add
add
and
or
mov
add
push
inc
dec
and
insw
xchg
or
inc
sbb
fidivrl
imul
and
dec
pop
push
and
pop
add
fldt
push
pop
out
cmp
add
sbb
dec
mov
jnp
xchg
push
loop
push
inc
insl
in
lods
mov
dec
dec
add
es
cmp
xor
or
mov
cmp
fcoms
push
loop
outsl
mov
outsl
sub
push
or
mov
lods
mov
and
push
notb
mov
ja
or
dec
ja
ss
dec
into
push
and
pop
shlb
ss
push
mov
sbb
daa
sahf
inc
or
dec
fsubs
mov
push
inc
rcrb
cmp
inc
sub
data16
inc
or
inc
mov
iret
push
or
in
push
pop
adc
into
or
mov
loope
arpl
out
push
js
jns
push
inc
xor
fidivl
push
cli
inc
ret
push
and
pop
imul
or
pop
sbb
pop
sbb
dec
sub
push
push
dec
pop
push
push
inc
push
cs
imul
dec
cmp
sbbl
mov
out
insb
or
rdmsr
push
add
inc
aas
or
push
shll
pop
inc
and
add
and
add
mov
incb
mov
incl
sub
pop
ss
xor
popl
sbb
mov
xchg
push
addb
push
adc
xor
not
fldl
cld
jg
clc
inc
lcall
jmp
shlb
aas
pop
or
push
aas
xchg
xchg
jne
push
addr16
add
lret
div
mov
pop
rorl
mov
xchg
jo
pusha
shrb
add
addr16
jg
repnz
outsl
add
pop
out
ficompl
neg
out
cmp
leave
xchg
add
add
pop
sbb
fstp
xchg
out
pop
pop
aas
push
cs
addr16
lcall
pop
jo
add
pop
std
cmp
inc
sti
aas
add
jl
rolb
xor
cmpsb
imul
pushf
cmpsb
bound
inc
add
jo
outsb
mov
iret
rolb
mov
lock
lahf
pop
xor
adc
cwtl
pop
or
leave
xor
jg
push
fiaddl
ljmp
push
ror
add
add
and
cmp
and
lret
movlhps
fstp
cs
pop
outsb
rcrl
pop
std
clc
jne
mov
aas
rcrb
pop
fisubl
cs
pop
loope
mov
outsb
clc
popl
adc
sub
addr16
add
pop
mov
sbb
mov
mov
push
cs
xor
in
adc
rolb
pop
in
scas
loop
cmp
les
test
jg
aas
push
flds
lret
pop
cs
aad
addr16
cld
push
cmp
fsubrl
aaa
lret
mov
cmp
aaa
cs
adc
addb
pop
fisttps
pop
sbb
push
sub
inc
add
jb
add
inc
shll
xor
xor
push
sbb
loop
shrb
out
push
loopne
pop
xor
pop
mov
clc
fstpl
jl
sbb
push
sbb
out
jb
pop
or
test
pop
shl
test
jge
data16
in
iret
adc
push
mov
addb
es
sahf
pop
rolb
and
add
call
cmpsb
out
add
xor
add
mov
sbb
cmp
subl
mov
int3
out
fucomi
daa
sbb
cmp
and
cltd
mov
add
xor
in
in
insl
daa
and
jbe
lods
fstp
mov
push
dec
push
movb
xor
push
daa
lret
xchg
mov
push
adc
push
cltd
mov
mov
lahf
dec
daa
dec
addl
daa
sbb
add
mov
clc
push
hlt
sbb
cs
jbe
mov
sbb
push
cmpsl
lahf
adc
inc
enter
inc
sbb
and
cmp
xor
xor
and
daa
inc
pop
xchg
bound
push
movsl
daa
dec
sub
bnd
push
push
aas
push
xor
mov
loope
inc
cmp
push
js
pop
aas
js
cmp
dec
and
push
es
push
and
and
cmp
mov
lods
cmp
ret
pop
push
cmp
ss
andb
lret
or
cmpsl
daa
push
and
push
mov
lds
push
fisttpl
mov
mov
mov
clc
repz
xor
addr16
push
pusha
inc
pop
push
add
testl
xchg
inc
inc
inc
or
mov
pop
adc
or
cmp
daa
inc
aad
push
pop
dec
mov
xchg
dec
pop
daa
mov
out
in
addl
dec
xchg
add
mov
clc
daa
add
sbb
xor
popa
daa
or
ret
fstpl
add
fisttps
ss
arpl
mov
xor
ds
rorl
xchg
ja
xor
es
add
pop
fiaddl
xchg
daa
lahf
cmp
cmp
fadds
enter
push
push
pop
fisttpl
cmp
push
ficomps
mov
adc
dec
lret
jmp
lcall
es
data16
fwait
jle
xor
in
sbb
sub
jecxz
cmp
adc
pop
inc
add
xor
pop
ja
sub
inc
xchg
sbb
or
stos
jle
rcrb
or
xor
xor
cmpsb
arpl
loopne
fstp
aas
cs
bound
ja
stc
frstpm(287
daa
push
inc
sub
push
es
dec
pop
icebp
xor
es
shl
mov
sub
je
outsb
je
data16
inc
push
shll
push
inc
push
mov
and
and
inc
mov
sti
call
stos
sub
pop
lock
insl
jmp
dec
push
pop
xor
arpl
fmuls
pop
mov
xchg
subl
mov
lahf
jmp
xchg
ret
cmp
adc
mov
sub
adc
cltd
out
subb
add
xchg
sbb
dec
sbb
shr
jge
daa
cltd
into
int3
push
jl
and
clc
or
sbb
daa
fcoms
daa
mov
xor
dec
xor
dec
daa
fsubr
ret
daa
dec
daa
clc
dec
mov
ja
jne
dec
sarb
dec
lret
test
dec
out
aas
inc
sub
sbb
lret
add
lahf
mov
jns
imul
push
mov
shlb
cltd
cltd
and
out
test
addr16
dec
push
ss
mull
repz
sbb
int3
aaa
mov
daa
lret
dec
popl
or
adc
fmull
sbb
enter
shl
sbb
ljmp
push
xchg
push
push
xor
mov
pop
adc
setl
andl
pop
addl
cmp
orl
and
imul
fs
fcmovnbe
fisttpl
or
aaa
sub
inc
cltd
and
xchg
stos
sub
xlat
sub
cmp
pop
jbe
les
pop
sbbl
and
mov
mov
xchg
inc
push
and
mov
xchg
push
dec
jmp
lock
mov
stos
cmp
lahf
add
aas
and
stc
aam
or
push
jbe
xor
int3
add
or
push
jo
aas
mov
or
jo
xchg
js
push
xchg
inc
data16
push
push
xor
iret
pusha
insb
lahf
jle
adc
adc
js
and
mov
add
sti
or
mov
pop
shlb
jae
or
or
add
mov
xor
add
ud2
jnp
cmp
cmp
add
lock
in
and
add
pop
add
mov
subl
addb
cmp
or
sub
les
addr16
mov
dec
sbb
inc
xor
dec
pop
into
into
out
cld
jae
xor
xor
add
sbb
int3
mov
adc
aaa
add
repnz
mov
xor
rcll
sub
in
outsb
mov
add
mov
xchg
lods
ss
aaa
mov
xor
scas
lahf
pop
sub
or
rcrb
sbb
rcr
outsl
inc
mov
inc
dec
pushf
jo
sbb
jle
jg
inc
ja
out
xor
cmp
push
cmp
test
negl
jb
filds
outsb
cs
lret
sbb
cmp
aaa
cmp
pop
sbb
sbb
jo
and
jg
sub
pop
push
adc
dec
xchg
cmp
push
aas
push
aas
xor
call
mov
aas
pop
jle
rolb
jae
fbld
stos
and
loop
jl
incl
push
add
pop
popaw
aaa
and
and
sbb
shrb
pop
and
xor
ja
cmp
fidivrl
fisttps
sbb
adc
cmp
test
sti
adc
cmpsl
add
in
or
mov
dec
jae
add
jae
push
sbb
or
dec
int3
in
push
sbb
in
movl
jbe
gs
addr16
test
out
in
mov
pop
add
aas
mov
neg
lds
pop
ret
fsubl
mov
inc
push
cmp
mull
in
push
stos
ficompl
stos
push
or
ja
xchg
pop
xchg
pop
stos
loope
loopne
pop
lcall
lock
push
shl
je
shlb
adc
sbb
pushf
fldenv
mov
test
inc
aas
xor
cs
sbb
cmpsl
add
lods
das
add
ja
hlt
loop
cwtl
push
aaa
pop
jne
cmp
popf
popw
aaa
add
pop
cmp
jae
jae
ret
fistpl
sbbb
imulb
mull
dec
push
pushf
jo
sahf
dec
xor
mov
jo
mov
pop
jae
mov
sbb
push
push
sub
mov
in
rcrb
testl
bound
push
out
add
shlb
jmp
add
aam
addr16
inc
pop
dec
rclb
push
imul
jo
outsl
pop
pop
pop
and
mov
sti
out
lock
mov
mov
iret
push
pop
je
pop
or
outsl
loopne
mov
cmp
xchg
decl
jo
aam
inc
dec
cmpsl
aam
push
adc
or
or
mov
test
mov
mov
dec
dec
dec
hlt
push
adc
dec
adc
adc
inc
scas
scas
xorb
xor
fsub
in
jbe
sbb
xor
pop
mov
lock
xor
or
out
xchg
in
add
mov
cwtl
pushf
or
icebp
mov
iret
pop
add
orl
jo
push
add
jb
lods
arpl
pop
or
jb
push
xor
in
push
bound
rorl
or
sub
pop
das
iret
les
or
nop
push
add
pop
add
rorl
adc
fidivl
xor
inc
sarl
dec
nop
sub
sub
adc
push
add
mov
pop
mov
ss
pop
add
add
pop
xor
adc
adc
jbe
scas
or
or
rclb
xchg
pop
or
push
inc
stos
pop
sub
add
xchg
pop
xor
nop
add
add
out
shrl
xchg
xchg
inc
inc
inc
inc
loopne
add
dec
outsl
addl
sbb
push
loope
xchg
push
je
jg
pop
aam
movq
cmp
and
or
mov
dec
adc
imul
les
sbb
push
sbb
es
xchg
inc
aad
push
add
mov
imul
rcll
xor
lea
flds
inc
lret
mov
shlb
gs
and
pop
xor
ss
addr16
mov
push
and
imul
add
jb
jb
js
dec
mov
lahf
push
ja
sbb
fs
pop
mov
xchg
test
pop
cmp
outsb
stos
outsl
mov
dec
fs
cmp
outsb
jo
mov
mov
sbb
sub
xchg
insb
ljmp
mov
in
fadd
add
das
xor
pop
mov
mov
jbe
rorb
push
incl
push
jne
push
gs
and
or
movsb
ret
cmp
push
sub
stos
aaa
ret
sbb
cmp
and
push
andb
jo
popw
push
divl
and
loopne
loop
mov
aaa
ss
js
pop
inc
aas
imul
lods
jns
ja
mov
popaw
push
push
out
fisubrl
mov
jne
jb
mov
push
pop
imul
push
imul
jnp
pop
jae
and
or
mov
insb
mov
add
mov
ficompl
dec
inc
ds
xchg
push
pusha
nop
dec
or
mov
arpl
aaa
inc
orb
aaa
or
or
or
mov
mov
inc
or
inc
lcall
aaa
jle
push
jbe
push
xor
repz
adc
sub
jecxz
out
loope
repnz
data16
inc
fwait
lods
mov
fwait
sbb
sbb
bound
cmp
pcmpeqd
sub
pop
fwait
mov
mov
sbb
and
pop
vpslld
imul
or
fwait
daa
and
test
divl
dec
imul
ljmp
out
mov
les
and
mov
outsl
pop
jns
cmpsb
clc
mov
inc
xchg
mov
or
push
ret
ret
stos
rcrl
xchg
mov
rorb
fisubl
sub
xchg
jo
mov
pop
xchg
xor
push
stos
jae
pop
mov
pusha
in
sub
ja
mov
and
pop
ja
mov
sbb
xchg
pop
shlb
testb
push
mov
cmp
pop
xor
and
jo
ja
jns
sub
add
xchg
addr16
nop
push
adc
aam
xchg
cmp
xorb
sbb
cmpsl
xchg
dec
arpl
sub
sub
test
adc
dec
or
mov
jg
sbb
and
adc
add
fdivs
gs
mov
insb
stos
mov
scas
and
icebp
xchg
loopne
stos
arpl
sbb
xchg
sbb
bound
ljmp
cmpsl
sbb
lods
andb
decl
push
sbb
mov
cmp
jnp
in
mov
fistl
xor
push
or
inc
fildll
push
mov
mov
shrd
fs
fcmovu
and
ss
lods
inc
out
and
subl
mov
and
shll
mov
mov
or
xchg
mov
push
lods
fidivl
push
mov
push
outsl
addr16
bound
arpl
push
jno
or
gs
mov
mov
push
xor
rcrl
or
fdivs
outsl
lcall
bound
adc
bound
das
or
or
movsb
inc
adc
lcall
push
push
js
aam
aam
or
popa
xchg
mov
sbb
sbb
xchg
rcr
xchg
xor
stos
xor
add
cmp
sbb
dec
and
mov
sub
pop
andl
repz
xchg
les
rcrb
ret
dec
fistl
adc
xor
pop
push
jecxz
add
bound
lea
mov
pusha
das
mov
pop
insl
pop
adc
xor
push
xor
xchg
dec
imul
fs
adc
es
pop
insb
sbb
fnsave
cmpb
imul
xor
jns
adc
push
les
add
and
dec
aaa
mov
add
dec
pop
jb
je
lds
cwtl
subb
adc
rcrl
push
push
mov
insb
dec
or
jno
jmp
imul
imul
dec
adc
push
outsb
xchg
push
or
repz
sub
xor
rclb
stos
xchg
push
dec
mov
sti
paddd
jecxz
lea
sahf
or
sub
addl
aas
into
pop
lea
pop
lods
fldl
xor
push
lods
mov
mov
adc
fisttpl
inc
ja
fstp
ss
cmp
imul
push
fucomi
push
sbb
fstl
sbb
orl
stos
aaa
loop
popa
or
stos
sbb
movsb
arpl
xor
aam
outsb
mov
pop
mov
sub
loopne
fidivl
push
sbb
popa
pop
jg
push
jae
cmpl
push
stos
xor
push
imul
or
xchg
sub
pop
gs
mov
ret
sbb
sub
push
aad
lret
jae
xlat
ret
xchg
sbb
sbb
scas
daa
cmpsl
fcoml
pop
mov
sbb
je
push
shll
and
add
fldt
movb
movsl
jmp
xorb
sbb
imul
lret
sahf
aaa
push
adc
inc
ret
jo
dec
push
sub
pop
roll
and
xchg
int
test
xor
cmp
jbe
push
imulb
sbb
sbb
adc
data16
into
out
mov
mov
add
stos
xchg
jbe
sbb
cmp
inc
lds
and
lea
xor
and
adc
mov
je
inc
pusha
sbb
inc
jbe
mov
xchg
aas
ret
push
mov
jbe
or
sbb
push
sbb
mov
mov
or
or
mov
bound
pop
iret
dec
push
scas
inc
add
inc
psubq
movb
add
addb
inc
aaa
lret
push
mov
repz
mov
jne
cs
xor
mov
adc
or
les
popa
mov
push
es
shlb
lock
in
test
adc
sbb
ret
inc
shlb
insb
inc
mov
lods
test
aaa
push
push
inc
xchg
push
ja
add
push
lret
and
bound
xchg
imul
cmpsb
mov
pop
mov
or
add
ret
push
scas
xchg
lcall
push
mov
jbe
stos
mov
stos
sub
xchg
and
jmp
out
cwtl
xchg
stos
or
pop
fs
mov
iret
mov
sub
push
jne
xchg
mov
popa
bound
test
cmp
adc
cmpsb
adc
add
mov
jne
jne
jne
gs
mov
iret
sbb
lods
outsb
lods
mov
call
fimuls
addb
adc
mov
xor
or
inc
sub
push
xchg
divb
shlb
outsb
aas
outsb
imul
jnp
nop
add
cmpsb
mov
fs
sub
cmpl
and
adc
mov
lods
outsb
aas
inc
sbb
mov
arpl
jae
push
inc
sarl
das
sub
aad
push
mov
dec
or
ret
into
sahf
cmpsl
cmp
sbb
pop
test
jnp
sub
adc
and
add
stos
pop
and
dec
add
sub
jae
popa
push
or
dec
sbb
rcll
js
loop
sub
push
out
mov
cmpb
adcb
ret
push
out
test
lahf
pop
rcll
imul
mov
cmp
cmpsl
sub
scas
out
fisttpl
mov
sti
mov
or
movsl
les
shrl
dec
lret
sbb
mov
xor
loope
pushl
dec
xor
arpl
ret
adc
or
jo
rclb
adc
inc
push
sbb
push
mov
mov
adc
add
das
orb
outsb
xchg
sub
ret
pop
cmp
xlat
insl
xor
or
inc
aaa
sbb
jae
test
das
jno
fimuls
jae
push
cli
pop
mov
cmp
shrl
lahf
dec
fsubrs
rcrb
sub
dec
add
sbb
xchg
andb
bound
xchg
dec
add
xchg
repz
xor
scas
outsb
xor
add
out
loop
mov
dec
pop
dec
sub
add
popf
pop
sti
cmp
lcall
xlat
xchg
xor
mov
fisttpl
pop
lret
ficoms
mov
lcall
shr
pop
stos
stos
dec
mov
push
xlat
add
or
xlat
add
xchg
sbb
push
js
adc
imul
or
bound
push
or
adc
mov
lea
xchg
pop
pop
inc
inc
adc
or
mov
add
lods
mov
pop
fistpl
mov
fadds
jae
addb
aas
sbb
nop
push
xor
or
xchg
data16
aas
lods
or
sti
mov
xchg
sbb
dec
xor
push
inc
add
mov
push
pusha
dec
xor
popa
and
add
dec
sbb
jae
add
insb
pop
negl
into
dec
xor
ret
adc
pop
xchg
dec
cmpsl
dec
jecxz
mov
xor
adc
adc
jp
pushf
pop
xor
jmp
mov
outsb
push
xor
sbb
inc
nop
test
rcrb
iret
add
fisttpl
lods
sarb
push
push
sub
pop
cmp
inc
inc
sub
add
jae
jno
popa
cs
add
mov
sbbl
cmpsb
xor
imul
sbbl
sbb
add
dec
and
arpl
or
add
inc
imul
push
sub
in
loop
sub
fistl
sub
stos
adcb
mov
fwait
sbb
push
inc
mov
xlat
dec
adc
sub
pusha
stos
or
cmpsl
mov
rorl
push
repz
sbb
mov
inc
mov
fwait
aad
adc
rol
mov
mov
repz
pop
jae
sub
mov
orl
xchg
xchg
push
mov
or
ret
bound
or
push
sub
push
aaa
lret
andl
fbstp
scas
adc
pop
inc
or
inc
test
adcl
orb
cmpsb
xchg
sub
ret
or
or
movsl
lcall
jb
push
push
repz
and
add
mov
test
xor
test
cmp
ret
xchg
popf
mov
mov
movsl
mov
mov
fimuls
cmp
imul
or
addr16
mov
addr16
push
dec
loopne
addr16
fcom
inc
mov
insb
xorl
xor
add
jno
aam
or
dec
add
adc
push
mov
inc
rorb
or
loop
cmp
imul
mov
mov
or
aas
xchg
push
mov
aas
ret
inc
repz
lret
add
mov
imul
and
sahf
jmp
or
push
cmp
test
pop
daa
inc
jbe
fistl
mov
loopne
inc
jecxz
ss
xor
add
ret
xchg
ja
ss
jno
dec
or
mov
stos
sub
push
pop
adc
xchg
das
dec
sti
insb
or
loopne
insl
or
dec
inc
xor
or
pop
xor
add
cmp
or
loop
sti
push
push
lcall
adc
movl
add
loop
sbbl
bound
and
add
xor
mov
add
mov
jp
pop
or
cs
xchg
pop
jne
mov
fsubp
popa
xor
test
push
xlat
adc
ja
xor
scas
out
jbe
scas
gs
or
imul
imul
inc
inc
fstps
andl
sub
cmp
or
sbb
inc
outsb
cmpsb
push
and
mov
mov
sbb
mov
xor
aaa
fbstp
xchg
out
aad
or
shrl
pop
lods
cmpsl
addr16
and
mov
int3
or
or
out
lahf
jbe
push
fucomip
mov
fs
xchg
and
push
sub
and
jp
test
mov
cwtl
or
pop
and
jmp
or
dec
aas
repnz
sarb
push
outsl
xor
ss
and
push
sbb
and
lods
pop
fwait
xchg
sbb
push
pop
inc
repnz
dec
cmp
mov
cmp
add
fidivrs
dec
cmpsb
push
mov
add
add
dec
xor
inc
inc
mov
scas
push
adc
xchg
pop
inc
insl
push
inc
addb
mov
inc
ljmp
push
push
push
adc
outsb
pop
jnp
xchg
arpl
dec
dec
or
add
cwtl
add
ja
call
add
pop
pop
test
lods
fstpt
insl
test
or
push
cmp
sbb
adc
dec
inc
pop
push
xor
in
push
ret
add
push
add
xchg
xor
adc
pop
jne
mov
ss
addl
inc
cmp
bound
dec
loopne
jns
sbb
cmp
rorl
mov
inc
and
inc
jo
incl
fsubrs
add
orb
es
pusha
aaa
inc
push
imul
xlat
ret
mov
ret
test
dec
push
lods
mov
repnz
popa
enter
jne
mov
sub
and
dec
add
mov
lret
mov
push
insb
mov
lds
bound
mov
mov
add
inc
ret
adc
xchg
addr16
data16
iret
xor
pop
or
pop
sub
push
lods
mov
sbb
movsb
push
jbe
insl
pop
lds
dec
dec
sbb
inc
and
pop
loopne
sub
pop
movsl
mov
jnp
ret
sub
adc
add
jbe
sbb
sub
ja
gs
pop
sub
test
roll
fs
in
call
xchg
push
imul
js
test
jae,pt
stos
push
scas
mov
shll
jbe
imul
jg
sub
mov
loopne
xchg
stos
adc
imul
sub
test
push
jae
add
and
mov
mov
dec
out
dec
mov
pusha
lds
sub
and
ret
push
sub
add
or
into
and
dec
lods
add
sti
sub
push
por
or
push
cs
cli
dec
sbb
test
pop
push
sub
xchg
and
push
add
je
leave
and
fs
test
pop
bound
sbb
jne
pop
xor
lock
mov
mov
fidivrl
bound
sti
scas
xchg
mov
push
pop
je
daa
push
ljmp
and
shrl
mov
or
mov
ret
popa
xor
pop
pop
jmp
sub
push
xchg
arpl
rcll
jae
inc
pop
mov
sbb
aam
or
aas
addb
pop
adc
aaa
mov
lea
xor
roll
push
dec
imul
arpl
jge
mov
fisubs
adc
fimuls
mov
out
sbb
sahf
push
lret
pop
test
cli
or
jae
pop
es
or
test
inc
ja
nop
jecxz
mov
mov
mov
aam
outsb
repnz
dec
fimuls
daa
je
scas
push
pop
aas
sbb
xor
ficomps
jnp
lea
jnp
inc
jbe
mov
mov
pop
mov
add
imul
mov
ficoms
pop
inc
or
subb
daa
inc
insl
xchg
adc
pop
dec
or
movb
cs
inc
sub
sub
xor
inc
repnz
inc
pusha
pop
repz
popa
rcll
outsl
outsl
loop,pn
mov
jo
inc
popa
adc
dec
sbb
inc
xchg
imul
lds
inc
push
push
or
xchg
in
mov
fwait
and
test
mov
add
mov
adc
dec
mov
stos
pop
outsl
and
aaa
add
jmp
repnz
or
mov
adc
repnz
shrl
jmp
and
decl
dec
enter
jae
mov
inc
out
unpckhps
adc
and
add
dec
arpl
jae
jo
add
pop
and
and
dec
fldt
fbstp
andl
pop
ret
jnp
adc
xchg
les
inc
mov
fwait
imul
mov
inc
cmpsl
xor
lahf
cmpsb
push
ret
es
sub
outsl
bound
push
dec
fimuls
sub
dec
cmp
mov
xchg
aam
mov
das
adc
mov
inc
xchg
and
mov
fistpl
sub
xchg
pop
adc
lock
and
push
sbb
mov
shlb
jg
ss
jo
pop
lret
or
sub
shr
dec
or
pop
push
and
push
pop
adc
mov
xor
push
cmp
sbb
dec
sbb
add
rcrb
inc
adcb
xor
jg
test
adc
les
jb
ja
roll
ret
pop
test
and
sub
push
xlat
pop
inc
mov
jg
sbb
and
aaa
adc
add
outsb
sbb
aas
and
fisubl
test
mov
fisttps
pop
and
pop
mov
data16
xlat
mov
mov
mov
repnz
sbb
daa
bound
mov
xlat
xchg
xor
pop
sub
pop
sub
pop
rcrl
and
arpl
bound
push
arpl
fistps
or
inc
xchg
jp
sub
lods
xor
je
adc
sbb
ret
xor
shll
pop
adc
cs
loopne
repz
cmp
shlb
mov
mov
cmp
jb
jae
inc
pop
aaa
xchg
adc
inc
sbb
test
scas
pop
or
mov
mov
dec
jg
adc
stc
inc
sbb
sbb
call
enter
adcl
insl
js
adc
add
sbb
ja
in
and
out
lret
dec
jno
mov
push
sbb
adc
cs
mov
mov
mov
imul
fimull
and
add
pop
fwait
pop
stos
add
aas
mov
aas
nop
sub
add
test
pop
out
add
add
les
repz
sub
daa
mov
les
dec
cmpsl
sub
ss
inc
dec
push
jae
sbb
or
mov
repz
js
push
cmp
fisubrl
push
pop
mov
inc
sub
xchg
pop
aad
adc
imul
mov
out
xor
iret
xchg
push
inc
pop
dec
or
mov
jg
xchg
imul
mov
or
dec
sub
cmp
flds
scas
adc
dec
or
test
ret
inc
test
cmp
orl
mov
and
sbb
add
js
xor
cmp
xchg
or
insl
cwtl
mov
pop
adc
or
and
inc
xchg
pop
adc
mull
inc
push
add
inc
cmp
mov
mov
jns
rcl
mov
cmp
les
cmpsl
dec
sti
inc
popf
cmp
imul
push
addl
mov
mov
adc
mov
push
xlat
jb
add
mov
cmp
sti
dec
lret
adc
mov
jmp
out
loopne
mov
inc
decl
pop
sbb
dec
idivl
fcmovnbe
push
xchg
jo
and
inc
inc
aas
mov
movsb
insl
roll
inc
insb
sbb
jae
testb
dec
or
les
mov
mov
and
add
lret
mov
arpl
and
pusha
dec
ret
bound
sbb
dec
inc
je
pusha
or
push
sub
sub
testl
push
add
add
and
pop
dec
arpl
pop
adcb
stos
add
add
adc
push
mov
pop
adc
xchg
pop
mov
pop
and
cmp
rep
pop
test
or
lods
mov
mov
pop
push
scas
imul
inc
or
mov
push
add
pop
or
daa
sbbb
inc
addr16
sub
lods
mov
divl
mov
pop
mov
sub
add
or
loop
adc
add
xor
inc
daa
adcb
push
pop
add
insb
shrl
push
inc
sbb
xor
pusha
ret
imul
sbb
sbb
adc
adc
test
mov
push
ret
or
cmp
add
stos
sbb
sbb
test
add
jae
push
sub
jmp
sbb
lods
mov
sbb
cmp
loopne
incl
add
add
push
lods
mov
push
mov
mov
pop
lahf
sbb
push
pop
or
ds
or
fstl
inc
and
add
or
stos
das
scas
subl
mov
fwait
test
cmpsb
pop
pop
popl
outsl
sub
push
xor
scas
aad
lods
and
shrb
push
inc
stos
neg
movsl
add
push
pop
push
xchg
mov
cmp
das
and
jecxz
add
sub
mov
push
cwtl
fwait
cmpsb
push
pop
lods
dec
sbb
repnz
and
xchg
ret
arpl
dec
pop
jne
push
lds
or
mov
cmp
push
and
ds
fdiv
popa
cmpb
or
addr16
or
data16
cmp
mov
or
jbe
mov
pusha
inc
or
movsb
shl
outsb
sahf
shl
stos
fisubs
adc
loop
xor
arpl
aas
ret
push
dec
jp
cmp
inc
push
fwait
and
imul
sub
add
mov
adcl
xor
inc
add
shlb
push
pop
or
imul
push
xor
sub
push
xor
add
lea
movsl
adc
aas
ficoms
mov
sbb
adc
add
jbe
arpl
sbb
xchg
clc
mov
push
push
inc
test
jno
inc
pop
orb
jae
repz
idivl
stos
adcb
das
mov
adc
push
notl
adc
jae
int
push
ret
pop
sbb
pop
arpl
adc
xor
lahf
pop
or
aaa
orb
aas
push
lds
aaa
adc
pop
mov
push
pushf
and
inc
mov
mov
cmp
mov
pop
jmp
or
adc
adc
lea
add
inc
inc
push
rclb
adc
or
aas
pop
add
cmc
mov
xor
push
out
jae
and
shl
pop
push
add
addb
push
int
xchg
mov
adc
ljmp
mov
shl
arpl
inc
pop
mov
dec
xor
push
dec
and
sub
pop
mov
sahf
pop
jo
sarb
aam
sub
repz
ja
xor
adc
fcoms
mov
cmp
stos
mov
notl
add
pop
and
push
mov
sub
pop
jno
adc
dec
sub
lea
out
addr16
push
out
inc
and
pop
xlat
jb
mov
adc
dec
inc
test
pop
add
pop
insb
fwait
pop
inc
and
xchg
lahf
sbb
iret
push
pop
sub
add
inc
mov
jecxz
js
sub
cmp
mov
or
stos
inc
mov
dec
xlat
and
xchg
mov
adc
imul
adc
push
or
mov
ja
pop
xchg
mov
lahf
pop
dec
test
push
push
jnp
jbe
arpl
mov
and
jg
sbb
les
or
add
movsl
push
stos
push
sbb
sbb
inc
rclb
adc
push
pop
or
imul
sub
add
xchg
ss
insb
push
fs
mov
jae
mov
fucomi
sub
movsl
sub
sbb
out
and
lods
mov
insb
pop
lea
addl
mov
pop
push
lds
rcll
push
roll
bound
sub
sbb
mov
pusha
arpl
mov
or
out
ss
ds
and
inc
mov
pop
push
inc
arpl
fwait
mov
dec
add
test
adc
sub
in
adc
popa
jg
sarb
jns
frstor
mov
ss
aaa
xor
cmc
aas
cmpsl
es
aaa
mov
pop
fwait
cmp
into
adc
lcall
or
daa
sub
and
xchg
cmp
jmp
ret
mov
adc
push
push
dec
mov
push
popf
ds
adc
dec
mov
dec
subl
jge
sbb
loope
add
cmpsl
inc
popw
ja
and
sub
nop
gs
jnp
mov
jae
pop
inc
xchg
js
aas
adc
pushl
aam
cmp
call
and
js
in
adc
mov
push
mov
add
popf
mov
inc
or
mov
adc
int3
mov
movsl
xor
daa
jb
xor
fstpt
sub
gs
mov
mov
cltd
subl
push
insl
test
adc
push
ret
mov
adc
mov
mov
mov
xlat
xchg
inc
inc
push
sbb
inc
cs
cmp
xor
insl
mov
add
pop
mov
in
mov
loopne
jns
mov
scas
push
xchg
dec
adc
inc
jae
dec
imul
aad
sahf
loop
outsl
lds
or
mov
mov
rclb
cltd
out
push
out
outsl
inc
rorb
adc
int3
ret
push
adc
rcrl
add
sub
pop
push
shll
cmp
xchg
popa
insb
movsb
lret
aam
andb
incb
push
lea
dec
dec
inc
xchg
out
mov
fisttps
pusha
mov
sahf
adc
jnp
dec
addr16
pushf
sub
movsl
cmpsb
mov
xor
mov
adc
jle
or
mov
or
mov
stos
mov
sbb
push
jo
outsl
bound
aaa
push
adc
lea
sub
mov
mov
bound
sub
add
or
pop
loope
push
xor
inc
dec
inc
rcl
ret
out
jbe
pop
insb
pop
jp
int
int3
fs
xor
dec
adc
daa
movsl
adc
cwtl
mov
mov
imull
push
jo
or
movsl
and
xchg
popa
sbb
cmpsl
pusha
and
adc
lds
aam
mov
out
rcrl
out
stc
sbb
push
addr16
and
into
cs
mov
jo
adc
push
jecxz
cmp
mov
xor
fnsave
ds
push
js
jns
push
cmp
cli
push
pusha
pusha
fsubrs
sub
xor
xchg
daa
repnz
jno
pop
push
sbb
add
adcb
fldcw
push
add
push
out
adc
ds
or
shrl
test
ljmp
stos
cli
adc
push
movsl
mov
out
pop
sub
decl
data16
push
adc
mov
pop
xor
inc
dec
adc
inc
jmp
pop
bound
mov
and
insb
pop
and
push
jne
pop
jbe
add
add
outsb
inc
pop
in
adc
pop
jl
cwtl
cmp
jmp
dec
cmp
pusha
xor
cmp
out
cwtl
dec
xor
mov
pushf
push
and
adc
xor
popa
sbb
and
inc
cmp
push
call
adc
xor
pop
loopne
aaa
daa
jo
push
inc
lea
adc
mov
ret
jo
lods
or
pop
aaa
fstps
repnz
xchg
in
cmp
or
addr16
dec
add
pop
inc
lahf
je
pusha
sbb
outsl
jmp
add
and
adc
das
mov
inc
mov
rcrl
divl
or
outsl
sarl
or
lods
inc
adc
out
ret
xchg
inc
inc
inc
jb
xor
sbb
push
leave
xor
xchg
scas
movsl
inc
dec
sbb
lods
fisttpl
add
adc
adc
les
addl
jmp
lret
jns
pop
mov
fidivrl
adc
fcoml
add
dec
mov
xor
lods
lret
ud1
sbb
or
iret
ret
pop
and
out
sub
adc
lea
inc
test
std
mov
cmpsb
frstor
mov
jne
mov
dec
inc
xor
xor
add
cmpsb
imul
int
pop
and
sub
pushw
xchg
and
in
repz
in
insl
mov
imul
movsb
mov
add
cmp
add
jae
inc
and
in
sub
or
adc
xor
xchg
xor
mov
sub
mov
daa
es
mov
inc
outsl
enter
adc
dec
xchg
xor
xchg
adc
and
lock
int3
cmp
push
pop
loopne
adc
jmp
scas
jbe
inc
jne
push
add
xchg
push
mov
adc
mov
jns
mov
inc
mov
hlt
movsb
shll
loope
sbb
aaa
jnp
adc
lea
divl
add
loopne
pop
arpl
lcall
inc
adc
pusha
cmpl
sbb
push
jae
mov
add
xchg
mov
pop
out
mov
xchg
sbb
xchg
sbb
fcomi
or
mov
sbb
or
or
pop
testb
movsl
sbb
add
mov
fs
sbb
inc
push
pop
gs
cmpsb
xor
push
push
lret
sbb
mov
shll
add
movsl
push
fwait
rorb
test
or
movsl
sub
pop
aam
pop
or
pop
inc
push
pop
dec
iret
sbb
mov
inc
sub
popf
add
push
cmpsl
inc
movsb
sub
or
inc
jl
xorb
add
add
cmpsl
pusha
fcoms
aaa
add
pop
sbb
and
pop
lahf
or
add
xor
mov
sub
add
adc
add
push
push
or
pop
xor
pop
inc
cmpsb
fimuls
pop
or
add
cwtl
aam
add
nop
mov
out
sub
sub
xchg
adc
es
addl
cmpsb
jecxz
xor
aam
cmp
or
lea
mov
das
add
and
sbb
incb
or
leave
mov
push
imul
fldt
dec
jg
jle
insl
dec
xchg
or
inc
fcoml
test
or
popa
and
sbbl
sbb
out
pop
cmp
es
jae
or
and
sbb
fucomp
xor
mov
sbb
sub
sub
das
mov
and
push
test
cltd
adc
negl
pop
dec
fistl
lea
pop
and
inc
hlt
roll
sbb
pusha
mov
sbb
pusha
jo
add
sub
ret
inc
dec
and
sub
pusha
and
test
mov
mov
xor
push
bound
sub
dec
jmp
adc
dec
or
add
pop
bound
xchg
and
outsl
shrb
or
sub
adc
jbe
mov
iret
movsl
xor
enter
adc
or
dec
adc
and
pusha
stc
pop
mov
sbb
daa
sub
mov
jno
cs
dec
test
bound
stos
popa
cmp
push
movsl
pushl
fstpl
fistpl
and
and
adc
dec
in
jg
and
iret
push
or
imul
jo
and
add
adc
movswl
in
inc
push
loopne
add
and
aaa
imul
adc
cmp
out
leave
mov
push
jb
aad
add
xchg
out
inc
pushf
push
jg
mov
ds
jmp
mov
lea
inc
out
imul
cmp
pop
les
mov
or
jno
xchg
and
sbb
pop
jmp
add
adc
mov
cmc
std
xor
repnz
jg
std
imulb
jbe
add
jg
imul
push
cmpsl
repnz
das
mov
push
xlat
sahf
add
arpl
pop
inc
gs
add
jmp
or
push
adc
aas
push
decl
add
add
iret
xor
test
add
out
jle
xchg
push
ret
add
arpl
add
add
jge
filds
jg
dec
sbb
jno
push
push
xchg
add
aas
jae
inc
fbstp
jg
faddl
rcrl
adc
jp
or
push
push
rcr
pop
push
popa
mov
adc
cli
adc
lock
out
add
sub
mov
rolb
stc
mov
add
sbb
adc
daa
pop
cld
out
add
push
adc
rorb
add
jbe
adc
das
fprem
sbb
push
outsl
das
jns
arpl
push
std
mov
stos
jb
sub
out
dec
jmp
jnp
sbb
cmp
out
or
or
fiadds
add
push
adc
adc
xchg
ljmp
and
adc
add
cmp
cmp
js
nop
test
add
add
xor
and
xchg
adc
xor
cmp
mov
pusha
daa
hlt
adc
or
adc
jge
sub
incl
or
outsb
adc
adc
add
out
sti
jge
add
movsl
adc
adc
xchg
jae
loopne
sti
aas
stos
cld
add
adc
add
adc
dec
decl
dec
shrb
push
out
inc
aas
add
out
lcall
ret
sbb
push
xor
sbb
addb
jb
inc
sub
pop
loop
in
dec
cmp
xor
inc
adcb
adc
inc
push
sbb
pop
fbld
sbb
clc
dec
popf
sbb
sbb
dec
pop
jg
sbb
and
xor
jmp
lock
jge
sub
jg
xorb
lcall
cld
or
adc
xchg
add
push
xchg
adc
jns
add
adc
add
add
pop
jmp
fildll
jo
add
mov
xchg
jg
pop
cli
pop
sahf
inc
jl
jp
rolb
push
insb
sub
pop
inc
dec
loope
aas
mov
sbb
repnz
pop
cmp
push
int3
inc
std
loopne
jo
popa
pushf
add
and
jl
and
ss
jg
lock
stos
and
adc
jg
cld
adcl
insl
inc
fs
adc
sub
xor
cld
mov
mov
and
xchg
jg
pushl
push
mov
jno
sbb
add
jge
jnp
jae
ja
cmp
or
or
lea
incb
das
push
fldcw
mov
mov
shr
sti
scas
rorl
leave
pop
xchg
pop
test
jmp
pop
out
mov
popf
adc
jne,pt
or
lea
aas
cld
jmp
mov
adc
and
addl
mov
icebp
adc
adc
je
sbb
xor
adc
jp
in
inc
pop
sbbb
jl
cli
decl
jno
or
jne
push
add
push
mov
xchg
loopne
mov
inc
aam
xor
mov
popf
cmp
ja
or
roll
xor
jecxz
clc
pop
rcrl
mov
add
es
jae
movsb
push
cli
cmp
cmpsb
xchg
ret
inc
jmp
or
daa
cs
js
clc
xchg
cmp
mov
and
fs
cmp
adc
jge
mov
xchg
xchg
mov
pop
popa
and
icebp
roll
cmc
pop
icebp
sbbb
push
sub
adc
outsb
adcl
adc
lods
ljmp
xchg
arpl
dec
xor
cmpsl
dec
mov
mov
not
cltd
pusha
lods
lock
jg
or
popf
popa
lods
xorl
lcall
das
pop
les
inc
add
lret
movsl
cmp
cmpsb
aas
std
std
ret
out
xchg
int
and
and
call
add
adc
xchg
arpl
popa
dec
push
or
sbb
or
jmp
pop
jl
cmp
lods
popf
mov
pop
sahf
jno
cld
lcall
incb
rorl
mov
xor
mov
xorb
movsb
lcall
lcall
lcall
adcl
roll
push
jle
js
and
push
lods
mov
jecxz
xchg
cs
out
jno
shrl
mov
or
in
mov
roll
fsub
addb
ret
in
or
ja
push
lock
out
fucomip
xchg
imul
xor
xor
push
xchg
cmp
aas
cld
shrl
int
arpl
lods
leave
xor
sarl
icebp
sub
outsb
in
sbb
mov
ljmp
cmp
xchg
stos
aam
inc
fidivrl
mov
push
mov
sbb
and
cli
clc
pop
xor
pop
lcall
pushl
xor
sub
or
rcrl
mov
or
add
pusha
call
xchg
or
push
jmp
jnp
jne
jecxz
shr
cmpsl
sub
sbb
add
mov
sbb
pop
out
mov
paddd
sub
xor
aas
mov
xor
ret
jecxz
aam
dec
or
jbe
loope
repnz
rcrl
cmp
mov
ret
ss
mov
cmp
pop
iret
add
in
jb
shrl
and
inc
cmp
sub
pushl
cs
push
icebp
insl
jg
in
mov
fdiv
enter
xchg
mov
sti
loop
and
pop
dec
dec
add
js
and
shlb
mov
shll
jne
outsl
mov
clc
jmp
ja
push
addr16
aas
jp
arpl
sub
and
das
inc
decl
sub
cmp
xor
popa
sub
decl
and
jbe
dec
or
negl
dec
jns
lea
cli
rcll
movsl
scas
out
incl
sub
jp
sbb
movsb
iret
ds
out
inc
rclb
and
incl
push
leave
pop
fstps
pop
mov
mov
fnstenv
jecxz
out
cli
pushl
fstps
insl
hlt
pop
pop
cmp
mov
insl
push
insl
popa
insl
ja
push
add
insl
lods
and
clc
jno
mov
int
dec
and
jge
jge
jge
sub
insl
dec
jge
pop
jns
insl
and
in
pop
lcall
xchg
out
xlat
jge
ror
aas
pop
adc
xchg
jb
adc
sahf
aaa
cmp
movq
adc
sub
jecxz
sbb
add
mov
xchg
aas
cli
jg
add
jnp
jge
mov
jno
repz
jge
imul
push
pop
paddd
ljmp
and
push
xchg
nop
xor
inc
loope
adc
add
add
jmp
add
push
adc
mov
shrb
xchg
pop
incl
lcall
or
shrb
mov
ljmp
in
ds
rcl
mov
imul
test
call
insl
jbe
or
or
xor
mov
xchg
sti
loop
mov
mov
jb
cwtl
mov
hlt
in
sub
inc
icebp
decl
sar
lods
xlat
xor
inc
and
mov
mov
and
mov
pop
mov
insb
test
clc
xor
insl
push
xor
sbb
or
add
push
ret
add
cmc
imul
and
icebp
ljmp
cmp
test
push
ljmp
cmp
mov
lcall
mov
bswap
jb
push
cltd
int
int
movb
fcos
incl
repz
jne
aad
fists
loop
dec
add
into
jmp
mov
fisubs
xor
pusha
add
push
inc
jmp
add
mov
cld
inc
in
add
loop
cmpsb
mov
imul
jo
nop
or
loop
lock
int
frstor
cli
in
fcomp
je
frstor
sub
fisttpll
sbb
mov
cmp
sub
push
out
shlb
stc
push
stc
lcall
cmp
sbb
mov
xor
mov
jge
pop
jle
lahf
lock
sti
test
popf
out
fwait
std
push
das
push
std
aas
sahf
test
jmp
cmp
adc
inc
lret
cmp
inc
ret
jmp
shl
xor
and
stc
repnz
enter
or
movsl
subb
or
repnz
gs
push
std
pusha
idiv
and
xchg
jl
gs
call
pop
iret
aas
xor
stos
xchg
xorl
outsl
dec
adc
jg
decl
loope
sbb
lds
les
out
cs
incl
inc
mov
push
adc
repz
push
pop
jge
jge
dec
cli
pop
incl
lods
mov
sub
dec
clc
or
ucomiss
xchg
loope
sbb
inc
dec
add
xor
or
jg
adc
xchg
push
pop
add
sub
std
cmpsl
fstl
into
aas
cli
ret
add
arpl
mov
push
shr
push
sub
sub
aas
rcrb
sbb
iret
mov
pushl
xor
popf
or
or
mov
imul
icebp
mov
and
add
or
jmp
cmp
mov
dec
cwtl
adc
jecxz
icebp
idivb
add
sbb
dec
mov
mov
add
out
mov
outsb
dec
add
lcall
add
test
add
decl
sub
inc
out
dec
add
das
sub
cmp
dec
decb
subb
hlt
cmpl
mov
popa
cmp
arpl
jmp
incl
loop
dec
and
mov
mov
pop
pop
test
push
pop
pop
jp
ja
push
xchg
xor
jne
mov
mov
js
or
fistpl
push
add
sub
cmpsl
pop
ss
std
call
fcomps
or
adc
cli
add
sbb
andl
sti
jg
pop
inc
add
mulb
notl
jae
push
add
push
sti
ja
jmp
pushl
add
arpl
xchg
xor
pop
dec
hlt
add
push
je
push
jge
ss
jbe
mov
pop
sbb
shl
fnstsw
bound
xchg
stc
cmp
sbb
jmp
clc
jg
filds
add
std
push
loopne
adc
mov
and
ja
mov
sbb
std
sti
jmp
clc
mov
jae
sti
add
ja
dec
lock
lea
adc
xchg
add
and
imul
loope
xchg
lcall
aas
push
pushl
inc
cmp
test
imull
sarl
mov
adc
jl
mov
push
push
sbb
pop
out
push
add
and
inc
cmp
jg
sub
push
sub
and
sub
mov
push
mov
daa
or
enter
loope
adc
cmpsl
or
stos
mov
push
mov
loop
xchg
sub
mov
pop
jno
push
add
loope
and
add
sub
add
pop
testl
leave
push
fldln2
sub
jns
out
sbb
gs
gs
push
fs
iret
std
jbe
xor
test
cmp
pop
pop
movsl
fs
xor
mov
push
xchg
out
imul
mov
mov
jg
aas
jg
xor
xchg
dec
movsb
dec
inc
xchg
jg
push
dec
outsl
and
sbb
nop
jmp
jg
and
xchg
xchg
pop
jnp
sbb
mov
pop
inc
sarb
xchg
ret
dec
cs
ret
pop
xor
ret
loopne
or
sbb
jecxz
and
jo
sarb
adc
popa
sti
std
incl
out
push
std
incl
inc
bound
mov
lock
std
nop
call
sahf
xchg
cmp
xchg
push
jp
gs
mov
or
jl
push
inc
push
xor
inc
jmp
jnp
aas
scas
inc
xor
out
arpl
push
in
jmp
dec
dec
jb
addr16
pop
gs
pop
jb
js
push
fists
movsl
jle
or
pop
and
nop
insl
mov
add
icebp
js
mov
icebp
repnz
aaa
or
call
fistl
pop
sub
decl
lcall
jnp
dec
pop
pop
daa
jmp
push
out
jg
xchg
loopne
push
jmp
xor
jae
add
pop
mov
push
mov
xor
xor
pop
push
sbb
and
adc
popa
jg
inc
sti
aas
dec
cmp
push
jp
shrl
js
push
jo
pop
mov
sub
jae
lods
push
pop
add
push
clc
outsb
jns
jge
jae
in
jg
call
iret
insb
mov
dec
sbb
jl
push
ret
jne
mov
jge
lea
add
adc
pop
clc
add
pop
pop
ljmp
adcl
mov
fsub
das
jmp
mov
sarl
jg
call
add
dec
cld
lcall
mov
testl
data16
cli
icebp
mov
inc
push
addr16
mov
push
dec
xor
aas
js
aas
inc
outsb
sbbl
sbb
and
std
aas
std
jns
sub
cli
push
andb
add
pop
and
cli
aad
and
out
jbe
push
pop
xor
jg
sbb
xor
dec
xor
add
xor
pop
or
stc
sbb
or
lcall
hlt
xchg
ljmp
dec
dec
jno
pop
nop
arpl
fdivrl
shll
cmc
jb
xchg
pop
xor
flds
out
arpl
mov
popf
mov
aaa
notl
sbb
jmp
xchg
add
mov
dec
lods
pop
cmpsl
sbb
xchg
js
test
add
sti
push
test
cmp
sbb
cmpsb
mov
lods
movsl
std
sbb
imul
mov
dec
gs
push
out
mov
orb
std
pop
adc
cmp
jg
gs
jg
xor
cmp
ss
jo
aam
and
clc
aas
std
lret
fwait
push
sbb
ret
or
clc
and
mov
call
lock
call
out
or
or
ljmp
and
scas
and
xor
mov
dec
out
jg
into
xor
leave
cmp
ret
movsl
sub
mov
fs
dec
addb
fdivr
cmc
xor
call
test
sbb
cmp
ficomps
std
ljmp
jg
pop
mov
int
test
pop
or
mov
adc
jmp
mov
and
mov
sarl
push
mov
inc
test
les
adc
add
jp
repnz
fcmove
add
sub
jg
shlb
pusha
addr16
xor
dec
and
push
adc
mov
jnp
inc
call
xchg
inc
scas
jecxz
inc
add
mov
loope
rorl
sarb
sarl
mov
loopne
add
push
hlt
xor
das
popw
pop
std
dec
inc
orl
push
in
mov
in
jmp
das
loop
jg
jge
out
in
mov
adc
sahf
orl
mov
push
dec
xchg
arpl
xchg
cli
adc
sub
lcall
std
popf
mov
popa
imul
out
cltd
jb
loope
and
jl
incl
jo
adc
outsb
mov
loope
sbb
popa
and
loopne
es
jmp
std
subb
push
adc
dec
add
loope
add
jo
push
jo
jg
mov
push
lcall
repz
aas
clc
push
imul
ret
out
sub
loop
jecxz
movsb
mov
jecxz
add
mov
fwait
sub
add
test
jle
inc
push
or
notb
cmp
test
mov
cmp
push
dec
push
or
fs
add
cmp
or
pop
adc
and
or
dec
fistl
add
and
mov
dec
gs
or
pushf
xor
sbb
sahf
aas
imul
dec
incl
push
jb
and
sub
cmp
fistps
cltd
fwait
push
outsl
addr16
jge
ja
jns
xchg
add
andl
inc
out
outsl
dec
push
roll
repnz
test
incl
cli
fildl
movsl
outsl
inc
and
imul
out
aam
fs
faddl
outsl
inc
bound
cmp
sar
aam
jae
inc
add
adc
daa
xor
pop
cld
fucomp
pop
pop
arpl
adc
pop
adc
or
adc
pop
sbb
adc
and
incb
outsb
adc
cmpb
out
push
or
movsl
adc
add
add
adc
add
xchg
cmpl
xor
jmp
add
aas
pop
adc
imul
fs
imul
adcb
jmp
rcpps
add
add
add
jne
sbb
fildll
inc
fildl
mov
enter
sbb
dec
fidivrs
clc
andl
or
add
inc
dec
je
add
xsave
jne
and
or
jg
test
adc
test
and
clc
ret
add
leave
lret
pop
and
mov
and
add
cmp
add
or
mov
jbe
add
pop
xor
adc
sbb
incl
insb
pop
adc
push
hlt
icebp
add
xchg
adc
inc
mov
sti
call
adc
and
lock
popl
and
or
bound
lcall
incl
jg
jne
add
adc
cmp
out
incb
and
add
fdivrp
loopne
std
adc
and
dec
leave
cmp
daa
je
and
and
jp
mov
das
or
bound
mov
ret
pop
iret
out
arpl
add
loope
es
leave
add
mov
shll
pop
cld
loopne
adc
scas
pop
insb
and
int
sbb
jp
cmp
push
sub
lds
std
mov
jbe
js
add
add
add
aas
add
push
pop
cld
popa
sub
add
push
data16
pop
clc
mov
xchg
and
add
or
jle
adc
fildl
inc
inc
lock
and
test
push
and
add
push
inc
add
mov
arpl
icebp
filds
sbb
pop
pop
or
pop
mov
mov
inc
push
fcom
data16
push
mov
and
and
pop
loop
nop
out
cld
and
xor
sbb
pop
lods
cmp
idiv
adcl
mov
popf
jns
repz
out
rorl
mov
adc
and
xchg
xor
jge
jge
jge
dec
jge
jge
je
add
sub
test
and
jae
jge
jge
add
je
lcall
jl
jb
inc
lea
and
dec
xlat
push
add
lahf
mov
mov
sub
xorb
adc
aas
js
adc
and
sti
test
mov
xchg
cmc
out
cmp
lods
pop
lcall
jnp
nop
cmp
loopne
outsb
lea
aas
and
jle
shlb
cmc
insl
adc
pop
pop
mov
data16
add
test
stos
sti
sti
push
push
add
sub
xchg
or
and
ud0
adc
cltd
and
and
mov
dec
adc
loop
sub
jecxz
test
lock
rolb
push
mov
xchg
loopne
sar
pop
and
add
add
jno
mull
popa
aam
hlt
mov
mov
clc
xchg
and
xchg
cli
daa
inc
call
imul
jle
lea
mov
mov
sub
sbb
add
incl
fbld
js
mov
and
cmp
xorl
xor
xor
add
and
stos
sub
loopne
filds
jnp
or
push
pop
jb
ljmp
mov
add
sti
pop
jl
mov
data16
mov
xchg
cld
std
push
imull
xchg
mull
loope
int
arpl
pop
rorl
add
in
adc
jb
aas
das
popaw
aad
pop
outsl
hlt
and
mov
jg
sub
push
lock
push
scas
rorb
fbstp
shll
and
cmp
dec
test
frstor
mov
xchg
jp
aam
jb
shr
mov
movsl
sbb
push
gs
paddd
nopl
inc
fst
inc
shr
aad
icebp
pop
out
jnp
call
in
jg,pt
jg
imul
xor
fadd
enter
and
ljmp
pop
ret
pop
push
adc
mov
lds
add
and
das
add
xchg
scas
addr16
or
adc
mov
jo
incb
xor
and
stos
sbb
add
rcl
mov
add
mov
loopne
xor
mov
cmp
jl
inc
addl
loop
icebp
xchg
and
mov
jno
sti
cli
cmp
mov
out
notb
ljmp
ljmp
and
xor
sbb
imul
push
or
incb
adc
sub
jne
add
pop
rol
jmp
ficompl
add
mov
and
icebp
pop
inc
idiv
jo
lcall
sbb
arpl
pop
stos
in
jne
mov
incl
call
xchg
jecxz
sbb
mov
std
dec
loopne
dec
in
jl
add
je
nop
cmp
jecxz
jmp
xor
shl
sbb
imul
lods
lods
out
testb
std
fnsave
sbb
jnp
fbld
fadds
std
xor
mov
scas
inc
jo
inc
jno
dec
xchg
incb
idivl
dec
cmp
fdivs
arpl
push
xor
inc
jmp
div
adc
mov
das
jecxz
xchg
jne
mov
add
ret
jecxz
call
sbb
je
sbb
ret
jp
fisubrs
in
lcall
incl
fcmovbe
loop
loopew
cmp
add
mov
std
sahf
dec
mov
push
or
adc
jbe
and
gs
std
lcall
pop
dec
and
mov
mov
push
or
sti
aas
leave
loope
test
lahf
add
mov
rclb
xor
inc
push
mov
jl
inc
or
add
movsl
sbb
subl
mov
xchg
sub
push
clc
xor
ljmp
data16
xchg
faddl
add
and
stos
shl
mov
inc
mov
add
je
loopne
xchg
jno
ljmp
insl
ret
sub
mov
or
jge
popa
xor
jmp
incl
dec
std
subb
daa
push
mov
arpl
push
jge
jge
jge
xor
mov
and
xchg
dec
jns
and
push
dec
mov
stos
outsl
pop
cmp
subl
pop
loope
icebp
pop
jmp
jg
or
fwait
mov
rorl
mov
add
pop
cld
jns
ds
push
xchg
adc
add
sbb
dec
shlb
lods
imul
aas
jl
call
sti
cmpsb
push
or
mov
add
inc
pushl
and
xor
push
xchg
ficomps
call
rclb
mov
jp
mov
and
mov
fdivp
js
lock
jg
xor
jno
xchg
inc
inc
xor
das
lock
into
inc
jmp
sbb
imul
mov
aas
cmp
dec
pop
shlb
outsl
sub
incl
pop
xor
fistl
or
pop
adcl
aas
cli
arpl
lock
cltd
xor
mov
adc
pop
ljmp
pop
popf
insb
fwait
sub
sarb
jae
ljmp
cld
loopne
add
add
push
mov
stc
xor
incl
aaa
out
pushf
or
roll
xchg
xor
pop
std
jg
inc
add
cmp
cwtl
dec
and
mov
lret
add
mov
repnz
mov
xor
scas
int
int
aas
cli
dec
int
les
icebp
movsb
cs
and
fdivs
int
cmp
outsl
push
repz
and
mov
aaa
fldl
daa
sbb
mov
fprem
frstor
lock
out
std
push
jmp
in
adc
add
mov
cmp
inc
pop
fildl
add
std
in
xchg
in
cmpsl
ljmp
or
adc
jbe
loopne
mov
lds
cmp
pop
mov
std
add
idiv
fucomi
add
divl
dec
popa
and
add
lods
mov
and
neg
cmpsb
jecxz
loopne
xchg
add
push
mov
mov
popf
mov
cmpsb
inc
cli
adcl
es
pop
and
lret
mov
std
ret
add
sub
ds
sti
mov
andb
insl
mov
imul
lods
addb
adc
jg
xor
fs
or
mov
or
sub
incl
push
cmpb
sub
add
fdivs
pop
ret
lcall
jmp
lds
xor
mov
add
arpl
mov
leave
mov
cmp
add
xor
mov
in
inc
sub
sti
add
lret
push
mov
push
adc
mov
add
fsave
sar
sub
xor
int
movsb
sub
mov
jmp
pushl
jb
inc
mov
test
mov
inc
pushf
idiv
call
movsb
mov
mov
mov
and
cli
mov
jecxz
jg
inc
daa
fucomp
cmp
cmp
cmpb
sti
call
adc
xchg
pop
jne
orb
lock
push
pop
loop
mov
pop
pushl
push
ret
jg
mov
sub
scas
jg
idivb
cmp
push
add
push
rorl
dec
dec
dec
pop
inc
cld
xchg
or
sbb
scas
call
pop
sub
pop
dec
pop
pop
pop
insb
pop
aaa
sbb
les
clc
xchg
sbb
mov
and
pop
stos
adc
mov
aas
push
mov
incl
jg
xor
jmp
push
mov
and
xchg
jl
mov
xor
adc
gs
or
sahf
push
and
jb
movsl
mov
idivl
lds
inc
adc
andl
jecxz
mov
push
outsb
xchg
std
out
add
aas
inc
outsb
or
rorl
pop
test
or
sbb
sub
xchg
stos
cltd
inc
adc
mov
and
or
insl
or
idiv
jecxz
push
in
daa
xchg
mov
ficoml
inc
xchg
int3
bound
call
loope
sbb
mov
push
lea
lea
or
movsb
xchg
rorb
aas
cld
jmp
dec
and
inc
add
cwtl
xchg
aaa
push
dec
inc
daa
jne
mov
pop
or
incl
popa
push
sub
add
pop
cmp
popf
bound
cmp
jg
fistl
das
pop
sbb
imul
sub
xor
and
lea
jns
loopne
cld
lock
cltd
lcall
int
jo
incl
xchg
test
mov
cmpsl
insl
and
mov
incl
repz
or
add
repnz
adc
add
js
jbe
pushl
cmp
jns
movb
inc
shl
inc
movsl
shlb
and
pop
incl
call
cmp
lret
dec
mov
ljmp
fcmovb
ja
inc
add
jno
add
inc
or
jb
add
mov
pop
out
popa
les
inc
lods
jg
inc
repz
pop
cld
jmp
cmp
call
push
stos
and
bound
lcall
subl
popf
cld
call
jg
lret
sub
mov
imul
in
mov
std
cmp
lea
clc
stc
arpl
mov
bound
mov
out
test
lret
and
aad
add
fisubrl
repnz
jmp
lods
icebp
jmp
test
sahf
repz
rcl
sar
or
push
les
sub
xor
adc
jecxz
inc
shl
fldenv
xchg
outsl
in
popa
mov
decl
aad
insl
and
idiv
ffree
jne
in
or
cs
mov
add
inc
pop
lret
pop
repnz
stc
arpl
or
call
xor
repz
scas
mov
add
shll
int
sbb
std
or
fldt
lcall
push
sti
add
in
cmc
in
add
mov
outsl
or
xor
mov
or
add
mov
rol
adc
dec
loope
xor
cmpl
pop
loopne
adc
test
in
sti
pop
popf
bnd
sbb
out
sub
aas
xchg
pusha
or
lcall
inc
pop
roll
or
and
adc
or
adc
add
testl
incl
shll
push
add
jo
je
cmp
pop
mov
add
pop
mov
negb
cld
movsl
add
mov
iret
xchg
sbb
ret
inc
dec
mov
jae
cltd
fs
jbe
addb
jle
adc
add
ret
sub
xor
scas
incl
mov
pop
xor
rcrb
mov
fbld
jae
cmp
mov
and
popa
or
out
orb
mov
adc
add
popa
push
cmp
dec
or
push
sub
inc
pop
test
pop
pusha
mov
repnz
add
xchg
mov
pop
push
xor
inc
js
mov
std
loope
push
in
cmp
push
cmp
mov
jne
jno
pop
add
push
dec
add
ret
mov
filds
pop
jmp
test
lds
or
ljmp
imul
push
fstl
pusha
pop
movsl
pop
scas
out
jae
mov
jae
add
stos
popa
adc
dec
rclb
movl
sbb
fbld
stos
add
popa
cli
and
mov
fs
jae
imul
add
add
add
and
jmp
and
add
out
incl
cmc
or
and
push
add
add
add
jns
pop
mov
movsb
mov
cli
movsb
dec
scas
out
mov
and
sbb
adc
out
sub
lock
dec
jne
adc
xchg
cld
mov
imul
lds
mov
push
out
add
sbb
add
mov
lods
add
in
pop
mov
addr16
jp
add
cmp
adc
xchg
add
and
mov
incl
call
adc
jns
adc
xchg
sbb
sbb
and
jecxz
jg
fs
sbb
bound
aam
repnz
add
ljmp
or
popa
add
pop
and
adc
inc
mov
jle
sub
and
add
icebp
jmp
adc
cwtl
add
sbb
add
sbb
jp
loope
add
test
jle
dec
and
inc
imul
push
clc
movd
arpl
mov
xor
or
movsb
nopl
lea
das
hlt
push
decl
add
and
add
outsb
jmp
jp
lcall
xchg
mov
jmp
add
cmp
lret
sub
adc
cmp
imul
or
and
pop
ud0
popa
std
xor
xor
inc
pop
pop
or
loope
pop
jo
bound
xor
inc
pop
mov
pop
pop
ret
inc
roll
mov
popa
adc
subb
sbb
pop
and
sbb
jo
pusha
sub
mov
dec
cmovns
adc
mov
leave
add
xor
push
xor
xor
adc
jmp
imul
insl
fisubrl
or
adc
bound
dec
test
jge
jnp
adc
cmc
mov
jne
adc
cld
scas
out
test
ret
xchg
add
cmp
loope
cld
ljmp
aad
iret
insl
adc
and
jae
push
scas
cmp
inc
sub
sub
aas
push
adc
add
sar
inc
fnstsw
dec
insl
xchg
push
jno
add
push
jecxz
jno
mov
js
push
jl
clc
inc
addr16
add
jno
adc
dec
sub
aad
jg
adc
or
pop
xor
dec
das
sahf
sar
mov
adc
sbb
jne
decl
pushl
arpl
or
cltd
sbbl
lahf
cmp
cmc
fiaddl
xor
and
mov
inc
scas
or
push
popf
test
decl
movsl
xor
jo
or
jo
push
hlt
adc
lock
stos
inc
lcall
sbb
andb
incl
add
andl
pop
mov
mov
cmpsl
decl
aam
add
push
outsl
or
test
loopne
outsb
lahf
fildll
and
or
pop
cld
aas
cmp
jo
mov
fwait
push
add
daa
sbb
sub
jg
pop
sbb
jae
and
cmp
mov
push
add
add
ljmp
aaa
jp
popa
or
jne
adc
add
sar
insl
jg
mov
loopne
sub
cmpl
jmp
and
or
lods
adc
cmp
std
cli
and
in
xor
fs
pusha
fcoms
push
adc
les
pusha
inc
mov
sarl
jno
lods
push
mov
rolb
ljmp
loope
popa
jo
push
call
adc
sub
jecxz
decl
adc
inc
fwait
mull
je
hlt
arpl
loopne
lock
gs
sub
jge
loopne
movsl
faddl
push
sti
adc
fisttpll
aam
pop
xor
fildl
and
mov
shll
call
fldl
push
lret
cwtl
shll
adc
jmp
fnsave
andb
dec
imul
mov
test
int3
mov
jno
add
out
testl
std
aas
cmp
std
push
std
mov
rcr
call
in
sub
pop
std
mov
clc
das
or
std
sti
std
mull
xor
in
bound
cli
decl
mull
and
xlat
loope
rcr
imul
adc
aas
push
into
test
daa
cmpsl
or
add
push
jns
rcrl
cld
or
push
xlat
jg
cs
or
mov
int
adcb
dec
mov
ss
inc
call
stc
mov
sub
pop
push
in
mov
add
sbb
jge
jge
ret
push
loopne
cmp
adc
aaa
insl
inc
jno
push
sub
fs
std
push
cmp
sub
stos
ret
outsb
lds
dec
cmpb
je
es
incl
mov
inc
lods
mov
push
push
push
jno
sbb
dec
sbb
std
shr
pushl
in
cmp
daa
jbe
push
jecxz
std
pushf
cmp
call
mov
sub
inc
or
jno
mov
sub
push
fdivrp
cmpsl
push
pop
in
rcll
push
sub
cmp
dec
insl
incl
mov
pop
loopne
sub
adc
repz
inc
jmp
and
dec
movsb
inc
out
adc
dec
inc
and
adc
cmp
adc
or
aam
and
cmpl
jne
xchg
dec
sbb
xchg
scas
push
fdivr
out
popa
add
adc
mov
lods
inc
repz
mov
out
mov
cs
sbb
sbb
test
ljmp
cmp
push
pop
fdivr
jnp
lds
nop
add
pop
lock
inc
std
lcall
aas
and
insl
and
cmp
mov
mov
loope
std
nop
shl
pop
sbb
jp
incl
xor
adc
mov
push
sar
incl
iret
jo
cli
rcrl
cmp
js
adc
idivb
fwait
sbb
clc
dec
xor
push
cmpsl
pop
add
sbb
jmp
jae
xchg
jb
insl
bound
fs
sbbb
pop
or
pop
popa
and
mov
imulb
jge
jge
mov
and
test
fwait
or
push
sti
mov
adc
jecxz
lock
jp
adc
mov
and
and
and
mov
arpl
mov
aad
and
xor
dec
inc
inc
push
and
xchg
mov
jmp
adc
std
and
jo
jnp
sub
fistpll
int
sbb
dec
icebp
jo
popa
push
and
inc
mov
in
scas
incb
xchg
lea
pop
rclb
stos
inc
jns
aad
out
ljmp
or
popa
ret
rcrl
jl
ljmp
shrb
xor
push
popa
lods
repz
inc
pop
decb
inc
or
outsl
and
add
lock
xchg
jmp
mov
add
pop
ret
adc
insb
mov
subb
call
push
ja
mov
pop
adc
lcall
jge
rcrb
not
or
mov
lock
aam
add
inc
adc
test
cltd
test
ljmp
jb
add
popf
fs
add
and
daa
subl
ss
add
add
mov
jb
fld1
add
jge
inc
push
scas
add
jg
jg
imul
stos
sub
je
loopne
jnp
xchg
jae
jbe
sbb
adc
adc
test
and
jae
add
stos
adc
adc
ja
adc
pop
std
add
jge
adc
and
or
dec
cltd
sarl
adc
std
adc
add
mov
pop
push
sbb
sub
and
mov
and
sbb
jo
scas
mov
dec
pop
xchg
pop
imul
adc
mov
push
and
cld
jg
add
arpl
inc
cmp
add
adc
cld
sbb
or
aaa
mulb
xchg
dec
ret
mulb
sub
and
adc
rdtsc
jg
sbb
inc
loopne
cmp
mov
adc
popa
jnp
sub
sbb
sbb
clc
jg
dec
insl
add
xor
jno
cmp
lea
dec
cmp
lcall
insl
cmp
adc
adc
add
mov
lret
cmp
clc
aas
rcrb
adc
and
and
add
add
aas
mov
and
inc
xchg
add
dec
mov
adcl
cld
pop
add
loopne
mov
jge
das
cmp
push
pop
jbe
insb
mov
add
mov
push
jp
sbb
adc
cld
inc
imul
mov
int
push
loop
and
inc
push
insb
add
pop
and
sti
add
sti
decl
xor
sub
adc
or
das
inc
push
loopne
cmc
pushl
and
pop
inc
pop
mov
inc
pop
shll
std
xor
std
add
and
mov
cmp
mov
jg
sbb
mov
sbb
clc
xchg
test
mov
or
fadds
mov
mov
movsl
and
pop
jg
xchg
andl
daa
fs
dec
adc
sub
sub
aas
clc
and
jge
outsb
or
ss
or
xchg
and
add
imul
jl
inc
xchg
pop
sti
and
push
jmp
inc
outsb
sbb
add
jge
sub
hlt
xchg
inc
jne
iret
or
loop
cld
aas
leave
mov
inc
inc
jge
inc
shrl
popa
lahf
pop
push
icebp
mov
adc
mov
shrl
lea
add
inc
dec
rcll
or
inc
mov
mov
add
call
or
seta
aad
jnp
inc
xchg
adc
add
pop
pop
fwait
push
loope
lea
popf
es
and
push
and
pop
jmp
sbb
adc
add
push
aam
jmp
xor
xchg
jne
mov
dec
xchg
daa
lret
ljmp
dec
out
sub
pop
adc
add
out
xchg
lock
jmp
into
popf
fsubrs
and
pop
inc
gs
sub
or
jg
call
popf
jns
call
jne
lret
adc
cmp
lcall
push
ret
jb
add
mov
test
inc
push
mov
rorl
add
mov
xor
adc
jno
outsb
and
inc
jne
jecxz
jecxz
add
mov
mov
and
adc
insl
cmp
nop
insb
clc
xchg
pop
inc
jp
add
mov
inc
mov
push
pop
movsl
pusha
mov
iret
insl
pop
add
sbb
filds
lds
stos
mov
lds
mov
cmc
sti
aas
shll
popf
dec
popf
add
popf
cmc
testb
lcall
add
or
jg
jge
call
or
jge
ret
adc
aas
dec
xlat
sub
not
jg
adc
and
int
fisttpll
out
pop
aas
clc
je
jo
repz
adc
shll
sti
lcall
dec
loop
fistl
insl
or
clc
inc
push
gs
mov
xlat
loopne
je
cli
arpl
aas
add
sub
test
rcrl
pop
jecxz
xchg
or
aas
icebp
call
pop
in
rol
out
in
andb
push
inc
aas
cld
lahf
push
int
mov
jae
xorb
ret
jns
fs
xchg
sbb
std
aas
arpl
add
add
sub
stc
shlb
mov
sbb
std
mov
pusha
in
jo
sub
std
jo
jne
fistl
lods
or
imul
arpl
js
mov
fs
clc
inc
sbb
daa
cld
lea
decl
stos
pop
std
mov
and
std
addr16
add
add
pushl
or
or
lcall
pop
or
out
xor
sub
bound
xchg
push
pop
mov
jg
decl
pop
and
mov
into
pop
mov
adcl
sbb
adc
lcall
push
dec
dec
push
movsb
jmp
call
fsub
pop
cltd
sub
cld
push
bound
xor
mov
or
std
jmp
inc
shrb
xchg
xchg
mov
jb
dec
insb
mov
mov
adcb
int3
mov
insl
pop
sub
arpl
cmp
jmp
outsb
mov
xor
or
lds
loopne
xor
call
js
pop
and
xchg
jbe
sub
test
jle
lcall
xchg
dec
mov
aad
xor
pusha
pop
mov
pop
jno
mov
jmp
push
and
iret
sbb
ficompl
mov
adc
sub
es
xor
add
jo
jnp
push
cmp
adc
push
outsl
addb
sar
pop
imul
pop
sti
aam
ret
shlb
mov
dec
jge
std
roll
inc
jae
xor
pop
xchg
fisubs
call
add
sub
fisubrl
push
pop
ret
add
jae
pop
sbb
mov
adc
and
ficompl
ljmp
rorl
jmp
jae
sbb
xchg
insl
icebp
insl
add
dec
incl
mov
out
nop
icebp
inc
test
jecxz
std
incl
xor
jnp
mov
jge
jge
mov
lds
cmp
fdivr
dec
in
out
xlat
fisttpl
or
jg
lcall
aad
and
cmp
push
out
jnp
and
scas
lea
add
hlt
in
fimull
divl
in
std
lea
stos
int3
test
mov
push
dec
test
mov
and
jmp
ds
xor
inc
ljmp
xor
notb
imul
lods
xchg
jge
pop
call
shll
roll
adc
rcrl
mov
mov
inc
or
lcall
in
mov
dec
rclb
ror
sub
sub
add
cs
clc
shrl
inc
sbb
push
lcall
jmp
rorl
sbb
jb
adc
pop
push
cmp
dec
push
ror
cmp
in
lods
clc
add
lock
call
popf
pushf
jge
pop
push
jge
mov
jge
jnp
fstpt
bound
xor
mov
shrl
push
repnz
pop
push
or
ret
add
movsb
out
arpl
addl
mov
add
cmp
mov
lods
test
mov
and
test
cld
jno
xchg
push
lods
mov
ret
pop
fcomi
int3
mov
mov
adc
mov
push
add
test
xchg
sub
loopne
and
lds
shl
or
inc
sub
fchs
cmc
cmp
xor
xchg
adc
xchg
push
inc
xor
inc
sbb
jnp
std
jmp
ret
or
out
jbe
cs
je
repnz
bound
decl
xchg
adc
loopne
xlat
fstl
in
adc
in
push
std
call
in
aas
std
arpl
out
out
test
call
cmp
js
sub
cs
ds
dec
std
pop
std
outsb
jo
xor
xor
and
pushl
movsl
stos
ret
push
ret
je
push
or
adc
jmp
push
ret
sbbl
adc
loopne
jbe
mov
add
jmp
pushl
add
mov
fwait
popf
leave
nop
inc
jns
dec
loope
lods
nop
dec
add
testl
out
std
xchg
testl
decl
push
fsubl
push
xor
adc
or
std
xor
mov
lahf
dec
mov
or
mov
add
in
rolb
mov
decl
inc
popa
loopne
inc
xor
dec
xor
ret
and
sub
incl
arpl
dec
movsl
jo
cmp
dec
sbb
add
jg
call
lods
jne
lret
and
dec
pop
in
push
xchg
lock
scas
hlt
decl
lods
fsubl
xchg
sbbb
pop
cmp
movsb
add
std
jb
adcb
in
stc
notb
in
std
ja
and
dec
dec
xchg
jo
out
std
sahf
cmp
push
xchg
inc
jg
stc
mov
inc
or
lahf
adc
add
int
shrb
mov
out
xchg
fadd
jp
or
xor
push
repnz
test
daa
repnz
movsl
xchg
push
add
or
dec
pop
push
push
push
cmc
dec
rorl
decl
sahf
test
mov
scas
ss
test
ljmp
cmpsb
aas
lret
call
push
jg
sti
inc
inc
cmp
mov
cmp
and
or
cltd
ret
daa
pop
or
cs
jno,pn
jg
test
mov
jbe
add
out
inc
inc
jg
add
dec
cmp
mov
add
add
out
aas
dec
mov
add
xor
lods
or
add
mov
sbbl
ja
addr16
ret
mov
xor
inc
das
or
jg
pop
sbb
xchg
aad
jb
sub
adc
adc
add
jg
and
mov
adc
sahf
add
mov
adc
out
add
adc
add
in
rolb
adc
notrack
add
dec
push
imul
push
jg
fisttps
inc
add
outsb
push
mov
and
adc
or
xchg
ficoml
pop
sub
adc
adc
pop
and
add
lahf
inc
pop
adc
aas
cld
insb
and
or
inc
and
add
add
mov
sbb
test
push
sbb
lock
pushl
mov
add
imul
pop
fists
pop
cmp
pop
cmp
call
add
push
cmp
js
mov
add
dec
daa
lret
rcrb
clc
fidivrs
sub
sbb
sbb
pop
rolb
fistpll
cwtl
add
add
ja
icebp
xchg
lods
incl
add
adc
sub
jb
pop
xor
adc
es
test
clc
in
inc
roll
jmp
sub
popa
sbb
sbb
add
dec
mov
data16
jge
cld
loope
sbb
push
inc
pop
and
rorb
inc
inc
and
js
movl
adc
repz
jmp
push
add
imul
push
les
imul
dec
outsb
sub
add
push
cli
xor
test
sti
cmp
aas
sbb
loop
adc
mov
sbb
out
push
xor
clc
inc
or
jmp
call
pop
jl
ffreep
aas
add
call
sub
add
mov
add
mov
mov
pop
or
add
dec
jmp
mov
jge
insl
mov
inc
imul
pop
jne
push
test
add
insl
lock
cld
incl
std
mov
mov
jge
jp
sub
loopne
jge
pop
or
jns
out
loope
push
inc
sub
aaa
jge
outsl
jp
in
or
pop
aas
call
xor
lds
ja
sbb
or
mov
clc
pop
sub
or
int
push
push
sub
adc
dec
xor
ret
cmp
bound
cld
cmp
adc
sbb
movsb
adcl
push
push
nop
hlt
sti
ljmp
push
fwait
insb
roll
inc
aas
test
jge
inc
pop
pop
and
dec
mull
adc
bound
pop
mov
aad
ret
jno
cs
xor
lods
movsl
push
and
imul
aas
mov
pusha
je
cmp
inc
outsl
xor
add
jecxz
pop
out
inc
arpl
out
jmp
lea
das
push
mov
add
dec
inc
jbe
mov
leave
push
jae
add
lret
roll
stos
xchg
sub
arpl
sub
call
sub
lea
lea
add
inc
cmpsl
hlt
popa
jnp
out
pop
imul
inc
add
dec
or
jle
mov
lcall
shll
fldl
je
xor
bound
lock
cld
outsb
inc
jle
jbe
xor
or
mov
jae
sub
lcall
ret
inc
xor
out
fimull
inc
mov
dec
add
and
jae
mov
shrl
add
inc
xor
inc
xor
add
inc
call
push
jb
dec
arpl
mov
loope
pop
inc
mov
pop
inc
movsl
iret
loopne
shrb
std
cli
inc
je
push
jno
or
int
lret
and
call
pop
pop
jp
fcoms
mov
add
fwait
int
mov
and
adc
pop
inc
lods
push
movsl
arpl
and
mov
adc
fnstsw
adc
leave
pop
out
inc
jmp
ss
or
add
mov
inc
aaa
fidivs
inc
adc
add
inc
inc
icebp
decl
pop
push
mov
push
pop
fisttps
and
and
add
data16
pushl
jbe
jl
add
xor
xchg
repz
aad
sbb
sub
aas
js
unpckhps
push
add
inc
sbb
decl
dec
std
mov
ret
fisttps
enter
mov
sub
add
out
add
scas
andb
pop
lods
js
inc
in
lods
jnp
jecxz
je
xchg
jg
jl
cmc
mov
data16
nop
mov
mov
in
adc
or
decb
cmpsl
insb
inc
inc
jnp
mov
rcrb
sbb
push
jg
popf
cmp
mov
nop
in
push
insl
jne
rcl
dec
notl
mov
test
pusha
lods
andl
inc
mov
in
ljmp
ds
sub
fnstcw
sbb
sbb
mov
in
adc
inc
pushl
fs
xor
mov
ret
push
sub
outsb
sub
decl
dec
sbb
ds
out
movsl
and
iret
sub
xchg
adc
cmp
lcall
cmp
daa
or
mov
xchg
sahf
test
cmp
xchg
xor
out
stos
cmp
gs
les
arpl
jo
test
popf
and
cmp
fistps
std
cmp
mov
cmpl
js
jo
orb
mull
add
cmpsb
jmp
decl
dec
dec
dec
pop
adc
mov
or
addl
insl
inc
mov
jmp
outsb
addr16
ljmp
ret
pop
adcb
sub
push
inc
test
sub
inc
mov
or
push
adc
xchg
add
ljmp
fimuls
or
jb
inc
into
cmc
sub
ljmp
rcl
push
shrl
and
decl
jo
and
stos
repnz
sbb
add
jae
add
inc
sub
mov
gs
sbb
sbb
add
incl
loope
sub
popf
sbb
jl
mov
add
xchg
xor
pop
xchg
jp
testb
stos
sub
gs
rclb
fs
cmp
pop
sbb
data16
cmp
mov
aas
out
nop
xchg
cld
xchg
mov
in
test
aam
movsb
incl
lea
cli
dec
xchg
mov
dec
xchg
or
push
dec
mov
std
das
aas
adc
test
and
pop
push
lret
rclb
xchg
lock
push
and
jle
pusha
arpl
bound
std
decl
dec
sub
sbbb
jle
outsb
popf
ljmp
inc
popf
push
pop
lcall
add
popf
jns
mov
mov
rcrb
fwait
aas
or
mov
in
vaddpd
incl
testb
pushf
repz
lock
fldcw
sbb
push
sbb
decl
aas
push
and
mov
fistpl
xlat
aas
pop
inc
lods
rol
push
dec
dec
loop
lods
push
cltd
pop
and
add
sbb
lods
dec
or
push
xor
add
jg
movsb
push
sbb
call
and
sub
gs
loope
push
xor
add
imul
rcll
in
icebp
and
add
pop
or
call
in
inc
mov
insl
aad
and
into
jns
inc
adc
lahf
jo
int
lcall
int
int
adc
stc
push
pop
dec
gs
or
xorb
pop
lods
lods
push
aad
fistpll
jae
frstor
adc
push
jno
push
adc
push
std
add
in
mov
add
adc
add
sarb
dec
add
mov
xchg
jl
shr
gs
popa
lea
push
pop
sbb
adc
sub
fcmovnb
jne
adc
shr
rol
and
je
sbb
test
and
add
pushf
jne
push
sbb
lea
pop
jl
pop
call
testb
test
mov
jnp
fisttps
or
push
scas
pop
and
jo
cli
std
inc
sbb
mov
mov
decb
fs
in
dec
sbb
repnz
xchg
sub
add
fs
pusha
add
add
bound
or
mov
jb
cs
icebp
gs
ja
add
loopne
lods
jmp
add
adc
add
test
outsb
add
pop
insb
inc
insl
sbb
inc
mov
jg
pop
pop
dec
icebp
repz
xor
mov
decb
push
cld
jo
adc
adc
test
test
xchg
add
idiv
cmp
mov
cmp
and
pop
imul
add
inc
push
out
shlb
mov
aas
push
mov
bound
sbb
mov
jne
add
ret
pop
adc
add
xchg
decl
fdivrp
jno
push
pop
sub
in
add
idiv
and
icebp
add
adc
and
pop
popa
adc
adc
mov
subl
inc
adcb
add
outsb
push
fucomp
jg
rclb
out
sbb
sbb
xor
jle
mov
adc
inc
ja
jne
imul
xchg
inc
inc
pop
add
adc
jns
mov
sub
loope
add
sub
pop
add
daa
hlt
icebp
and
gs
incl
adc
int3
or
or
adc
repz
jg
clc
popf
ret
and
dec
add
inc
cmp
adc
cld
sub
ret
and
lcall
aas
aad
lcall
jo
add
cmp
or
ret
call
add
push
add
test
add
rorl
cli
sar
dec
mov
sub
jb
loope
and
pop
push
std
add
adc
xor
adc
xor
adc
je
ljmp
pop
and
or
push
mov
inc
xorl
insl
or
daa
jg
cmp
add
push
cmp
leave
and
xor
add
call
xor
sub
push
mov
dec
test
push
jb
jae
jge
mov
xchg
jnp
nop
jae
test
clc
xchg
pop
jmp
push
jbe
cmpsl
adc
jae
xor
mov
or
ja
cmpl
inc
xor
add
pop
or
fistpll
data16
add
scas
clc
scas
xor
and
add
push
and
push
mov
jb
cmp
and
jg
cld
dec
adc
ret
sbb
jg
lds
jge
jge
jge
jge
jge
jge
icebp
clc
subb
aaa
and
mov
inc
sbbl
xor
das
push
clc
outsl
std
jp
adc
arpl
loope
test
sub
mov
clc
adc
jae
sub
cmp
cmp
xor
adc
pop
es
icebp
mov
push
ud2
jae
adc
mov
push
popf
stos
xor
add
sub
mov
gs
call
roll
daa
jns
pusha
push
xchg
add
in
xchg
aas
adc
jmp
insb
and
cs
movsl
sub
lods
cmpsl
inc
repnz
mov
call
cltd
movsb
and
sub
insb
push
and
mov
daa
inc
and
arpl
dec
popf
jecxz
test
decl
gs
popa
rolb
insl
jge
inc
test
gs
shll
mov
inc
std
pop
lcall
and
pop
jle
popf
into
mov
pop
and
mov
lcall
nopl
sar
add
arpl
or
pop
xor
mov
dec
inc
leave
pop
xor
mov
add
popa
lock
jnp
mov
call
mov
and
dec
pushl
add
ljmp
gs
inc
clc
sti
std
jo
outsb
popl
pushf
push
int
sbb
dec
arpl
inc
xor
inc
scas
and
inc
and
and
inc
cmpsl
inc
out
aas
sbb
subl
inc
pop
dec
jg
pushf
sub
hlt
into
fstp
or
sbb
mov
aas
mov
mov
xorl
fiaddl
inc
or
jb
clc
aad
leave
xor
mov
adc
jmp
jmp
sbb
mov
aam
dec
mov
sub
lcall
nop
out
in
mov
push
test
in
inc
fsubrp
ljmp
dec
lcall
push
jns
fisttpll
mov
xchg
mov
pop
sarb
sbb
sbb
add
and
adc
fisttpl
mull
push
adc
test
sarl
data16
push
sbb
and
jp
mov
push
clc
pop
loopne
mov
std
scas
insl
cs
cltd
or
iret
in
or
and
adc
push
push
mov
sahf
xorl
and
adc
dec
std
sar
arpl
and
in
dec
adc
loope,pt
pushl
mov
insl
inc
xchg
mov
mov
ficoms
mulb
or
popa
sbb
xchg
jmp
sub
push
inc
push
lret
push
adcl
ljmp
dec
sbbl
outsb
icebp
shll
cs
and
and
icebp
stos
aas
push
iret
movsl
orb
xorw
incl
push
mov
xchg
xor
in
adc
paddq
shr
rcrl
pop
sbb
incl
push
inc
xchg
arpl
cmp
pop
mov
lock
sbb
sub
sub
pushl
cmp
xchg
gs
inc
jge
call
sbb
pop
jp
push
cs
lock
pop
inc
mov
cmp
push
imul
push
loop
insb
std
add
arpl
jg
or
jne,pn
push
lea
adc
loopne
clc
arpl
in
loopne
add
in
add
sub
sub
dec
ds
sbbl
xchg
cmp
in
lcall
cld
sbb
jae
push
das
popa
loopne
rcrl
inc
pop
cs
stos
pushf
add
xchg
adc
aad
mov
shr
mov
push
sub
scas
rol
neg
pop
fidivs
sub
sub
mov
fwait
sub
mov
xor
mov
xchg
lock
inc
js
je
or
sbb
jae
or
icebp
mov
xchg
dec
jno
dec
ljmp
jnp
pusha
push
decl
xchg
addb
jb
cmp
xor
insl
adcb
jg
jmp
xor
sub
sbb
push
push
lds
inc
sti
decl
cmp
inc
movsb
arpl
jbe
test
aaa
inc
push
push
imul
out
insl
sub
out
jg
call
add
mov
adc
jge
lock
sub
pushl
rcrl
andl
arpl
mov
xor
rcrl
xlat
leave
loopne
lea
sarb
adc
shll
pushf
push
test
repnz
fldenv
push
push
fsubs
incl
push
xor
inc
pop
push
push
sbb
cwtl
sub
loope
addr16
xlat
sbb
dec
jge
adc
add
popf
inc
jge
pop
cld
dec
ret
xor
fdivrl
movsl
xor
mov
pushl
in
adc
mov
jl
out
mov
lods
adc
or
shrb
push
and
cwtl
repz
cld
loope,pt
icebp
js
xor
mov
adc
pop
clc
loope
mov
add
xor
adc
jne
call
inc
or
xchg
int
push
cmc
sar
mov
sarl
sbb
ljmp
xchg
stc
cmp
mov
mov
loope
adc
lcall
cs
add
adc
daa
call
bswap
and
inc
push
inc
mov
dec
int
int
shll
int
jmp
dec
loop
sub
repnz
sbb
sbb
mov
insb
popa
shrb
push
jmp
incl
call
fisttpll
and
jno
mov
shll
in
xor
repnz
incl
in
scas
xor
push
movsb
in
lods
push
sbb
stos
add
cld
inc
lcall
std
and
roll
enter
sbb
bound
sti
lcall
xchg
clc
cmc
jbe
loope
push
sbb
mov
je
lock
test
aas
jl
incl
sub
leave
hlt
sub
or
mov
dec
dec
or
insb
cltd
rcrb
je
add
jne
movsb
outsb
popa
shlb
stos
push
pop
cld
incb
mov
adc
xchg
push
dec
push
inc
addr16
add
js
inc
jmp
adc
sbb
roll
clc
rcr
loope
adc
lds
push
pushf
popa
mov
decl
mov
push
in
jne
jo
push
lret
out
xchg
out
in
fidivrl
mov
lcall
adc
shlb
mov
pop
sbb
adc
jg
ljmp
push
flds
sbb
lods
lods
nop
ret
inc
cwtl
popa
adc
cmovge
and
mov
mov
dec
test
and
push
rolb
and
sbb
xchg
mov
movq
lcall
jg
std
int3
pop
sub
pop
inc
mov
xchg
jp
jmp
popa
cli
icebp
add
subb
xor
sub
mov
sub
loop
mov
lods
push
daa
add
dec
dec
insl
sbb
cmp
push
sub
sub
sub
lea
dec
or
and
cmp
or
jecxz
xor
stc
cmp
sbb
mov
clc
incl
xchg
pop
jo
or
test
mov
fsubs
cmpsb
inc
sbb
lock
mov
mov
jmp
adc
cmp
pop
sbb
pop
push
sbb
push
push
imul
es
push
mov
popfw
jbe
add
add
ljmp
sar
ljmp
mov
add
adc
cli
jno
adc
rorl
call
adc
xchg
inc
xchg
mov
outsb
icebp
fs
pop
sti
call
hlt
sub
arpl
dec
divb
mov
and
mov
push
mov
ljmp
xor
inc
icebp
in
inc
jo
shlb
add
cmp
or
shr
mov
in
sub
loope
nop
daa
sbb
ds
xchg
leave
jnp
xchg
mov
out
decl
mov
and
adc
cmp
and
cmp
insb
sar
jg
xlat
ror
jge
jge
jge
sub
lea
lea
pop
sbb
sbb
popa
lea
dec
mov
mov
push
mov
aas
std
pushl
adc
jle
fsubl
std
xor
mov
scas
ret
int3
inc
push
and
int3
push
data16
lock
mov
out
jg
loopne
cmp
pop
fdivp
inc
shrb
imul
mov
ud0
insb
sub
adc
ljmp
cltd
add
inc
scas
in
pop
jle
mov
add
add
cmpsl
inc
mov
mov
inc
xchg
adc
xchg
mov
dec
mov
mov
or
popf
mov
pushf
xchg
dec
ja
xchg
add
jmp
lods
int3
lods
fsubrl
rcll
adc
jns
data16
in
mov
mov
pop
icebp
repnz
jae
sarl
repnz
jno
pushl
mov
mov
sti
mov
xor
dec
loope
dec
idivb
cmp
add
jmp
call
jmp
loopne
subl
mov
mov
cmp
loop
aas
mov
mov
idiv
incl
mov
sub
outsl
daa
dec
dec
in
das
aam
popa
sub
nop
sub
bound
mov
lock
incl
loope
icebp
into
in
lds
pop
movsl
or
sbb
mov
pop
mov
adc
pop
inc
stc
inc
jns
sub
addr16
or
xchg
ljmp
mov
mov
decl
arpl
xor
jl
subl
mov
cld
xchg
adc
lahf
lea
mov
les
data16
ds
fisubrs
xchg
push
cld
inc
loopne
jae
cmp
aad
and
add
ljmp
ficompl
pop
repnz
add
mov
xor
icebp
push
shll
les
jb
push
sti
lea
add
sbb
pop
inc
aas
pop
pop
adc
or
pop
jne
cld
and
add
bound
sub
add
and
xchg
push
loope
and
xchg
mov
jecxz
inc
xlat
inc
mov
and
hlt
cwtl
rcll
movsb
icebp
imul
clc
mov
and
faddp
nopl
in
mov
inc
aaa
insl
inc
insl
inc
fldt
insl
adc
push
out
je
ret
mov
jp
movsb
cmpsb
adc
repnz
and
jae
mov
push
incl
mov
cmpsb
pop
xchg
inc
push
add
rcll
xor
pushf
sar
lock
cld
jle
sbb
mov
out
sti
mov
adc
testb
and
test
push
mov
dec
dec
pop
push
incl
push
loop
fisttpll
in
xchg
mov
mov
loop
mov
shll
dec
push
lret
aas
clc
scas
pushl
and
pop
inc
cmp
les
faddl
push
sbb
mov
addl
xor
pop
icebp
xchg
adc
sub
mov
flds
imul
adc
push
int3
cmc
cmp
enter
dec
ret
mov
cld
decl
pop
daa
dec
movsl
dec
inc
pop
jb
icebp
jo
notb
and
popa
dec
sbb
adc
cmp
sti
mov
lea
movsl
mov
sub
call
dec
in
lock
imul
pushl
push
jo
push
xlat
inc
fldl
and
ret
in
hlt
pop
mov
pop
pop
std
inc
arpl
push
or
pop
add
pop
inc
xor
ret
pushf
addr16
addr16
push
lahf
insl
ljmp
shlb
adc
jg
decl
test
adc
sbb
sub
hlt
rcr
rcr
test
and
xor
add
push
mov
aas
out
in
fbstp
and
add
inc
or
jge
lock
std
pop
push
std
sar
sub
scas
lret
sub
ret
inc
bound
loop
jg
xchg
push
addr16
jno
push
push
adc
pop
ret
mov
sbb
sub
or
mov
out
mov
jmp
or
loope
jno
adc
fdivr
loopne
call
ret
loopne
pop
out
sub
fsub
adcb
mov
jne
jnp
sbb
fiaddl
cmp
daa
xor
popf
cmp
adc
sbb
mov
nop
ss
or
mov
or
pop
xor
dec
int
jae
sti
ljmp
and
and
jbe
adc
xorb
insb
add
fildll
addr16
pushw
sbb
iret
pop
lods
adc
dec
bound
inc
std
std
lcall
call
inc
mov
orb
jbe
sub
inc
sbb
adc
pop
cld
pop
inc
jns
adc
out
fbstp
ja
add
sarb
and
rolb
push
pop
ss
stos
jg
call
mov
pushf
icebp
test
mov
xor
mov
inc
test
xchg
dec
outsb
jecxz
sub
out
adc
jno
jle
cli
std
cmpsl
shlb
icebp
jg
int3
repz
mov
or
push
test
dec
movsb
push
jecxz
jge
in
add
inc
out
clc
dec
cwtl
cmpl
cmp
nop
sbb
inc
add
and
inc
pusha
mov
out
pop
mov
push
adc
dec
inc
insl
cmpl
pop
add
cmp
jns
xchg
jge
mov
pop
inc
push
jae
add
add
insl
add
jae
das
std
sbb
scas
add
push
jnp
jmp
outsl
or
sub
lock
add
xchg
js
in
cld
add
je
add
cmp
aad
mov
ret
pop
jbe
sub
stc
lock
or
call
outsb
mov
rolb
adc
les
or
push
sub
outsl
fs
test
and
or
hlt
lahf
lock
jmp
pop
or
push
sbb
sbb
mov
push
xor
pop
call
jo
scas
arpl
dec
das
and
pop
mov
dec
es
and
stos
cmp
jg
mov
shrb
aas
inc
mov
and
orl
adc
and
pop
add
lahf
xor
testl
cmp
push
sbb
cmpsl
icebp
loopne
add
iret
jae
repz
xchg
sbb
cmp
jne
cmp
popf
mov
loope
cmp
or
inc
js
sbb
mov
lcall
adc
or
mov
sub
std
in
enter
jp
in
push
add
and
inc
inc
sub
filds
xchg
sub
mov
lret
insb
adc
idivb
mov
in
and
dec
cmp
sbb
adc
daa
movsb
cltd
add
mov
mov
xchg
inc
lods
dec
push
incl
call
pop
inc
in
add
imul
mov
loopne
xor
adc
push
mov
lcall
adc
sub
inc
add
add
shl
out
data16
sub
fisubs
jg
and
pop
mov
sti
ljmp
and
insl
or
mov
call
inc
xor
incl
jb
pop
and
imul
sbb
push
dec
and
lea
add
cmp
aaa
cmpb
dec
jg
ljmp
outsl
and
loope
jmp
insb
mov
inc
and
add
fstpl
icebp
jg
insl
stos
jge
jp
xchg
or
mov
leave
jo
or
jg
sub
dec
scas
or
out
xor
jnp
gs
leave
add
mov
or
dec
repz
lea
and
xchg
mov
pop
das
dec
shlb
dec
mov
icebp
out
push
adc
pop
addl
popa
cld
mov
adc
adc
sbbl
adc
add
outsb
mov
jge
hlt
add
inc
aas
inc
scas
jno
pop
lock
daa
addl
and
push
out
mov
cmp
adc
pop
and
sub
decl
pop
int
mov
and
insb
or
dec
mov
inc
xchg
or
push
cmp
cmp
lods
adc
add
xchg
mov
popa
data16
inc
insb
aas
inc
je
jnp
sbb
dec
scas
incl
xor
push
jg
adc
scas
mov
adc
sub
movsl
imul
mov
add
lea
mov
subl
jge
add
mov
push
incl
mov
mov
sub
mov
sar
mov
xchg
roll
xor
decl
nop
or
rorb
or
cmp
std
sub
push
fwait
adc
xor
cmpsl
loop
out
inc
pusha
jno
push
mov
push
dec
pop
adc
pop
sbb
add
xor
jg
ret
adc
xchg
ja
sar
mov
and
lods
mov
and
es
jno
lcall
or
mov
outsb
pop
jp
xchg
sbbb
inc
mov
or
pushl
mov
pop
dec
adc
cmp
or
in
xchg
or
mov
push
sar
push
pop
stos
fcomp
jae
mov
loope
or
jp
mov
in
aam
sbb
add
incl
leave
stos
test
frstor
aas
and
int
add
aad
in
adc
fldl
pop
sub
or
movsl
cmp
std
and
jns
push
cwtl
rorl
cmp
dec
shr
mov
xor
sbb
or
adc
sub
cmp
pop
and
adc
push
or
fstpl
movl
in
idiv
call
push
lcall
and
and
add
cmp
mov
sbbl
ret
or
sarb
test
ljmp
xchg
and
and
mov
mov
and
xchg
shrl
mov
jg
call
std
inc
push
xor
cwtl
mov
in
scas
imull
lds
icebp
scas
enter
xchg
in
mov
push
insl
push
inc
xchg
push
pop
test
or
push
test
mov
dec
and
and
xchg
data16
and
sub
in
mov
andl
cmc
pop
fistpll
push
sub
push
add
mov
jg
shll
addr16
sarb
in
and
adc
sub
ljmp
sub
sub
int
mov
add
mov
xchg
icebp
mov
aad
cmp
loop
pushf
cmp
add
jae
movsl
and
jmp
add
dec
add
das
pop
lcall
lret
dec
dec
mov
or
call
popaw
popa
repz
sub
cmpsb
test
jne
cmp
xor
dec
mov
call
insl
pop
mov
mov
jo
ds
js
ja
pop
fnstsw
add
xor
mov
push
jne
jg
insl
push
rcll
in
sub
jo
push
icebp
out
insl
push
popa
dec
rorl
mov
add
mov
add
sub
add
arpl
inc
loop
ud0
mov
mov
mov
stos
sbb
lock
fldt
jmp
pop
ret
xor
jb
and
arpl
popa
mov
mov
or
inc
jg
pop
in
dec
les
dec
xor
mov
dec
add
jge
lcall
jge
sub
scas
lea
sub
sub
clc
aas
cli
cmpl
cmp
xchg
dec
sub
ret
pop
iret
add
cmp
jno
mov
pop
jle
sbb
nop
add
shl
test
das
jle
push
or
popa
jno
cmc
xchg
aaa
nop
mov
mov
arpl
incl
pushl
xchg
cltd
into
cltd
das
mov
shl
test
xchg
adc
add
inc
cmc
cwtl
mov
lret
pop
sti
jge
popa
in
pop
shr
push
pop
jno
popf
xchg
subl
inc
stos
sbbb
lods
aaa
lods
inc
test
lahf
mov
lods
ja
or
push
std
mov
popf
int
arpl
lret
sub
or
decl
imulb
add
shl
pusha
insb
mov
or
pusha
shr
decl
push
or
dec
sbb
add
jae
xchg
loope
lods
mov
fwait
xchg
sbb
adc
mov
rcl
push
rorl
aaa
jns
adc
push
addl
popa
mov
xchg
pushf
aaa
push
in
add
andb
and
push
push
out
mov
and
push
rolb
add
js
rolb
loop
dec
mov
push
mov
data16
jmp
loopne
inc
leave
loopne
adc
mov
jg
testl
or
adc
adc
leave
mov
addb
jl
mov
mov
jecxz
std
loop
popf
dec
add
mov
inc
popa
rol
lcall
lods
sbb
stos
fisttpll
mov
adc
add
mov
push
add
or
nop
cld
mov
and
dec
mov
push
jb
shrb
inc
pop
sub
inc
cmp
es
orb
das
sbb
jae
je
add
insb
test
adc
cmc
daa
inc
cmp
adc
mov
stos
std
int
imul
cld
jle
aam
aas
iret
daa
imul
lea
stos
dec
sti
mov
push
iret
add
lods
add
sub
add
outsb
test
out
sti
lcall
ljmp
jle
add
inc
adc
dec
adc
xor
pop
pop
xchg
fnstcw
sarb
adc
insl
add
mov
loopne
pushf
popf
dec
je
jno
mov
jo
jae
cltd
add
or
data16
incl
sbb
pop
push
adc
pop
sbb
lcall
outsl
cmp
inc
cltd
jo
push
cmc
xchg
and
hlt
decl
cmpsb
adc
or
sbb
push
push
adc
dec
xchg
mov
das
call
mov
add
gs
adc
add
sub
add
ret
ljmp
jae
lahf
sahf
or
push
les
loope
sbbl
push
pop
out
ret
scas
dec
popf
cmp
scas
push
and
add
adc
mov
cltd
cmp
pop
jge
xchg
or
adc
rcr
push
das
cltd
xchg
out
mov
leave
add
or
icebp
cwtl
pop
call
xchg
jae
and
insl
sbb
add
pop
jno
out
adcb
and
aas
mov
adc
mov
cmp
sti
aam
pop
aaa
inc
and
push
cld
push
js
and
and
push
pusha
aaa
pop
std
inc
es
mov
sub
pop
dec
loopne
sub
std
pop
loopne
out
pop
dec
lock
xor
decl
outsb
jns
push
add
dec
fs
and
mov
hlt
xor
fisttps
in
xor
add
cmp
dec
push
xor
add
decl
cli
sahf
pop
rolb
sbb
and
rclb
add
popa
inc
pushl
jmp
jnp
push
test
add
out
add
dec
pop
insl
adc
adc
insb
imul
pop
dec
daa
mov
adc
inc
cld
loope
pop
or
insl
inc
add
in
je
add
add
jne
aas
test
hlt
xor
adc
mov
scas
cmp
jg
cmp
pop
mov
aas
clc
out
push
rolb
push
inc
push
movsb
adc
inc
inc
add
and
pop
out
pop
pavgw
out
push
jmp
jmp
paddusw
inc
cmp
jb
add
push
add
and
jg
pop
rcll
sub
push
xor
jmp
mov
add
adc
xor
cmpsl
jb
add
jge
lcall
jl
jge
call
pop
movsl
cmp
jge
xlat
jge
push
jns
fisttpll
lea
pop
push
add
sar
pop
notl
ret
aas
movsb
add
or
mov
lret
es
loopne
add
push
jle
add
inc
jnp
enter
dec
jb
xor
pop
mov
cmpb
jae
and
mov
incl
popf
mov
jne
popf
xchg
popf
sahf
jl
cmc
cwtl
and
jnp
xchg
ret
mov
push
test
or
and
inc
xlat
sub
out
cli
mov
mov
inc
push
ds
xchg
push
pop
gs
and
clc
idiv
loopne
xor
or
adc
mov
sti
mov
shlw
out
inc
je
lea
lea
call
push
ljmp
add
and
arpl
movsl
pop
and
movsl
push
jg
das
sbb
adc
mov
cld
or
xor
arpl
or
add
and
pop
pop
mov
or
idivl
std
int3
popf
or
jae
and
cli
gs
add
mov
incl
ja
jne
pop
push
pop
addr16
adc
and
mov
mov
push
insl
push
insl
es
ss
inc
insl
inc
push
insl
dec
xchg
and
sti
xchg
insl
test
xchg
inc
incl
or
lea
std
shrb
ret
es
push
lods
mov
lods
jl
cmp
aaa
xor
call
out
push
shr
out
add
clc
add
clc
and
in
inc
test
lcall
sbb
sub
lds
bound
jb
adc
jae
sub
movsb
scas
pop
adc
push
inc
push
dec
mov
jne
shlb
shl
sahf
mov
out
insb
mov
imul
shl
rep
cli
call
fwait
mov
push
mov
xlat
add
xor
adc
loope
add
movb
loope
ja
insl
mov
sbb
decl
adc
push
inc
aam
jae
adc
aas
cli
add
divb
pop
and
in
in
out
mov
pop
mov
aas
cmp
dec
shl
add
mov
adc
out
inc
cld
loope
insb
mov
mov
push
incb
xor
repz
in
and
call
fstps
stos
jae
dec
sbb
test
push
roll
cmc
fistps
movsb
pop
jo
jae
shl
rcrl
insl
or
std
insb
std
or
int
lds
aad
adc
mov
decl
lods
sahf
pop
aam
into
ret
test
cmp
ja
lea
decl
push
rorl
cmp
stos
nop
sub
lcall
daa
inc
mov
sbb
outsb
cmpsl
and
xchg
movsb
or
incl
push
or
adc
cmp
outsb
test
rorb
je
bound
test
mov
subl
call
int
popa
xor
mov
xor
sarl
mov
ljmp
inc
popf
dec
shl
mov
inc
mov
shr
std
das
ds
in
gs
mov
and
sub
repz
incl
outsl
daa
lock
sub
jae
inc
test
js
jo
and
xorb
roll
loopne
test
mov
daa
leave
push
or
jbe
jg
loope
xor
imul
cli
ljmp
insl
cwtl
jnp
cmp
daa
inc
pop
subb
sahf
add
push
sbb
loop
jne
xor
xchg
movl
ljmp
mov
ja
mov
outsb
jno
loope
lock
mov
shrl
cld
jne
push
xor
rclb
and
add
ret
insl
shrl
insb
movsb
imul
jbe
ljmp
fwait
sbb
lock
cmp
pop
push
les
jge
jge
daa
test
sub
aas
rclb
jl
dec
sub
repnz
and
pop
std
mov
insl
push
repz
jnp
cmpsl
pop
mov
adc
jno
jecxz
fiaddl
inc
lcall
rorb
fdiv
sbb
cs
das
or
insb
jp
rcrb
call
add
mov
cmpsb
rcrl
adc
popf
mov
xchg
int3
mov
cmp
lods
lods
ret
xchg
jo
mov
mov
lods
xchg
lods
mov
adc
idiv
inc
push
xor
ds
push
add
mov
rclb
dec
fisttpl
inc
jecxz
or
push
aas
adc
pushl
rclb
inc
outsb
leave
inc
sub
fs
incl
into
lods
inc
cld
lods
mov
out
neg
sbb
shll
inc
cmp
cmpsb
shrl
push
ljmp
pop
jne
ret
movsb
push
int3
adc
xorb
daa
jmp
jg
mov
jo
out
jb
ss
xchg
jmp
pop
cmp
bound
loop
and
add
cmp
lret
lods
aaa
popf
leave
jge
pushl
mov
jge
cmp
mov
fwait
dec
sub
sbb
decl
fnsave
subb
lods
fnsave
outsl
fldl
jne
in
shl
jle
push
mov
xchg
add
xor
push
insl
mov
inc
in
or
sbb
jp
inc
mov
push
push
incl
int
push
and
and
in
push
add
dec
mov
xor
mov
fs
pop
cmc
adc
adc
roll
or
inc
out
dec
add
mov
push
into
mov
dec
mov
les
mov
adc
inc
add
loop
add
out
js
ret
push
mov
inc
mov
xor
addr16
sub
lock
ss
adc
dec
stos
call
leave
inc
pop
or
shr
inc
xorb
pop
cli
aas
cli
xchg
push
mov
addl
sbb
pushf
xchg
xor
jl
push
out
aas
add
lock
cmpsl
shlb
addb
rol
sti
dec
pop
incl
aas
add
lock
xor
xchg
cmc
ljmp
sub
imul
ret
push
fcmovnb
adc
inc
dec
pop
and
ret
sti
decl
pop
in
add
pop
in
pop
sub
adc
add
aas
clc
call
sub
sbb
inc
mov
popf
jl
hlt
inc
sti
jg
decl
mov
jl
mov
push
outsl
mull
dec
xor
in
jecxz
ret
daa
rorl
stos
pop
lock
adc
pushl
xchg
aaa
xchg
test
mov
cmpsb
jo
repz
fcoml
pop
jmp
cli
int
xchg
add
idivb
inc
cmp
decl
rol
xchg
mov
push
mov
inc
pop
jl
incl
nop
mov
pop
cmp
adc
repz
aas
inc
jmp
xchg
or
add
or
std
std
xor
or
sbb
loope
mov
shll
cmp
into
sti
in
push
loopne
stos
and
add
popf
inc
push
push
sbb
xor
pop
mov
jbe
data16
adc
gs
cwtl
imul
ljmp
cmpsb
add
icebp
pop
incl
lods
add
sub
add
jmp
aam
xor
jg
idiv
das
jg
add
dec
lea
mov
imul
pushf
stos
add
popa
sbb
negl
pop
cmc
and
add
movsb
pmaxub
pop
lret
add
sahf
xchg
pop
out
incl
out
sub
add
xchg
add
decl
jg
jmp
cmpsb
lds
cmpsl
movsb
add
mov
lock
jmp
adc
add
mov
movups
mov
inc
push
out
push
pop
in
and
mov
mov
fisttpll
stos
cmp
add
ljmp
adc
insl
sbb
lcall
or
xchg
icebp
or
add
iret
adc
add
inc
add
stc
es
sbb
aas
sbb
dec
lahf
aam
or
xlat
add
push
adc
test
sbb
popf
sub
addl
sbb
sahf
out
pop
and
lock
add
ror
mov
jl
dec
cmpsb
pusha
add
mov
adc
xchg
and
cmpsl
and
mulb
call
add
add
xlat
mov
cmp
cmpsl
jae
xchg
mov
lea
jo
hlt
sub
cmp
cmpsb
sbb
mov
sbb
stos
push
out
clc
cmp
test
jne
insb
or
sbb
and
imull
xor
outsl
and
and
sub
and
sbb
in
pop
push
jp
or
jg
test
cmpsl
inc
mov
adc
test
decb
jg
mov
add
lock
test
inc
cld
mov
cmp
adc
cmp
cmp
jae
or
push
xor
push
push
orl
lea
gs
adc
and
dec
cmpb
jae
popa
inc
push
outsb
sub
sbb
jmp
xor
dec
add
dec
nop
dec
mov
mov
inc
lcall
lcall
sar
or
rclb
outsb
dec
inc
imul
pop
push
and
sbb
or
popa
inc
cmpb
pop
popa
inc
fucomp
jge
cmp
outsl
inc
push
mov
dec
xchg
mov
inc
insl
dec
and
xor
adc
and
inc
mov
pusha
mov
cmp
jge
push
lcall
jb
ret
test
push
test
mov
sbb
inc
sbb
or
jb
sbb
vmovups
lret
mov
cmpsb
dec
xchg
xchg
ret
push
xchg
je
pop
jae
clc
push
mov
ljmp
insl
sub
pop
push
out
enter
lds
push
push
icebp
mov
lahf
pop
scas
pushf
push
push
add
xor
xor
adc
mov
fs
pusha
cmp
and
scas
test
call
jne
clc
and
jns
andl
lret
ja
inc
sbb
aas
stos
xchg
subl
push
or
mov
adc
dec
popf
cli
jg
pop
mov
lods
arpl
or
cwtl
and
imul
in
add
lcall
pop
add
sub
test
cmp
lods
repz
inc
in
arpl
and
inc
adc
jno
xor
adc
sub
pop
inc
cmpsl
ljmp
lea
lods
jnp
sbb
xchg
jg
mov
es
jae
adc
push
sahf
sub
push
jg
idivl
scas
addl
mov
jl
aas
mov
adc
jecxz
sbb
mov
cmpsl
fidivrs
jae
pop
cld
decl
push
andb
pushf
mov
inc
ret
ret
pop
sub
lock
push
or
and
pop
xor
adc
sbbl
bound
jae
dec
or
xor
pusha
imul
xor
pop
inc
pop
scas
mov
cli
jmpw
add
mov
aas
push
inc
sahf
gs
inc
mov
sub
out
adc
inc
jle
repz
mov
out
cs
xor
pop
mov
incl
sahf
dec
xor
addr16
fstps
xor
fldl
mov
mov
loopne
lods
dec
lahf
xor
enter
jecxz
xor
xor
sub
jnp
lcall
in
or
ret
mov
cmpsl
mov
pop
cli
jmp
shrb
xor
jg
in
rolb
out
int
pop
ret
jg
jg
cmpsl
cmc
shl
and
std
fsub
or
pop
jno
push
add
ror
call
cmp
add
adc
data16
jbe
xchg
xchg
sti
in
add
mov
insb
inc
incl
xor
lock
loopne
sbb
or
mov
pusha
pop
jo
add
clc
cmpsl
shr
xor
and
scas
decb
sbb
das
in
gs
xchg
inc
pop
adc
jg
ljmp
fiadds
jae
jnp
arpl
call
lret
mov
jmp
and
imul
clc
push
add
xorb
sub
insl
push
inc
dec
mov
fnsave
nop
jg
cld
insl
push
cld
push
jbe
push
mov
push
mov
inc
pop
cld
loop
push
push
push
cmp
pop
push
dec
cmp
inc
movsb
incl
shlb
dec
cmpsl
loope
leave
scas
mov
ljmp
mov
inc
nop
lds
mov
lds
int
cmpb
jno
mov
aad
shlb
jo
pusha
lret
test
jnp
xorl
ljmp
je
mov
daa
xlat
decl
cmp
stos
cwtl
dec
add
adc
les
jecxz
sbb
jmp
inc
in
push
in
addr16
in
ja
xchg
xor
mov
incl
mov
inc
stos
std
sub
pop
mov
add
dec
and
aam
shl
xor
mov
and
js
jno
call
pop
mov
adcb
adc
mov
subb
pushf
sub
cli
pushl
adc
fsubs
test
pop
outsl
insb
inc
sahf
cmp
ds
ds
xor
mov
mov
and
shlb
hlt
arpl
scas
incl
outsl
movsl
mov
in
push
jg
adc
mov
lcall
repnz
test
iret
jmp
sbb
decl
mov
test
mov
insl
addb
ljmp
jge
imul
and
call
mov
jge
jge
jge
jge
lea
and
sub
xchg
add
xor
mov
leave
clc
pop
jl
rcrl
mov
sar
imul
and
xchg
mov
sub
notl
add
and
pushl
and
cmp
aad
inc
iret
xchg
or
push
inc
inc
bound
mov
adc
xor
lcall
mov
cmc
inc
xchg
pop
adc
pop
adc
jecxz
push
jp
dec
or
popa
xor
push
xor
push
rclb
std
ljmp
inc
inc
fcompl
push
add
test
sbb
rorb
jmp
fisttpll
dec
jmp
and
inc
out
rorl
inc
mov
mov
push
lods
leave
pop
cld
inc
dec
inc
mov
inc
mov
dec
mov
jns
repnz
scas
inc
stc
rcrb
inc
mov
ljmp
lea
imul
notl
nop
jae
add
outsb
lea
mov
sti
add
jae
mov
push
add
xchg
add
dec
push
nop
push
std
shrb
out
push
dec
out
add
push
clc
xor
decl
popa
test
imul
inc
sub
insb
jne
push
fbld
and
inc
inc
lret
pop
inc
xchg
add
add
push
xor
jo
mov
aas
stc
imul
jne
add
pop
push
push
ljmp
sbb
mov
out
add
pop
xor
xchg
push
adc
popa
pop
sti
clc
and
in
dec
insl
pop
jo
fildl
jbe
imul
add
sub
cli
mov
adc
dec
lret
ret
inc
xchg
jmp
clc
fildl
inc
add
or
add
and
jmp
cld
out
add
xchg
jp
adc
roll
popa
pop
jecxz
push
cli
daa
add
add
add
add
decl
add
adc
int3
xchg
mov
or
and
or
adc
cmpl
add
adc
or
aam
ljmp
aad
ret
add
cmp
leave
loope
mov
popa
add
decb
dec
adc
mov
mov
xlat
adc
adc
lret
cs
pop
pop
add
lcall
rolb
aas
repz
xor
scas
pop
adc
pop
add
adc
cmp
cmp
aas
mov
pop
xor
push
fwait
sbbl
fs
cld
std
wbinvd
pop
cmp
jecxz
adc
cmp
and
inc
xchg
adc
and
andl
clc
es
xlat
movsb
jmp
inc
orl
and
mov
outsl
pop
test
nop
add
adc
mov
cwtl
adc
jmp
arpl
dec
insb
popl
and
cmpsb
and
imul
push
nopl
inc
mov
sub
pop
mov
cmpsl
mov
inc
mov
push
stos
xor
out
cmp
jae
imul
cmpsb
inc
je
and
dec
sub
clc
and
je
int
push
lret
add
daa
sub
pop
add
add
std
adc
and
adc
jo
dec
sti
xchg
subl
mov
daa
fwait
inc
inc
dec
lds
cmp
insl
adc
ud0
mov
arpl
and
jge
xchg
movsl
clc
pop
push
clc
pop
cmc
add
and
dec
aas
push
adc
je
pop
jl
testb
out
int
pusha
add
ds
in
inc
jge
popf
pusha
inc
lahf
adc
loope
fisubrs
pop
push
lret
jecxz
inc
and
inc
insb
push
es
in
or
push
and
push
ljmp
mov
or
inc
mov
jo
ss
sbb
and
mov
add
inc
dec
sti
add
inc
or
ja
decl
test
jge
mov
sbb
ds
stc
je
and
inc
sub
xor
mov
insb
lods
fs
mov
xchg
add
outsl
imul
xor
adc
sbb
imul
inc
xor
inc
jg
sbb
jl
push
xchg
jae
nop
push
scas
addb
test
inc
jb
loopne
xchg
test
adc
adc
cmp
popa
mov
jno
test
adc
add
out
imul
incl
clc
jp
dec
pusha
sub
dec
scas
popf
dec
add
mov
loop
loopne
mov
adc
xor
mov
testl
add
lods
inc
stos
push
test
scas
call
jne
jae
inc
orl
or
pusha
das
jge
jmp
call
jp
fcomps
rorb
mov
mov
jg
fs
inc
cmp
es
lds
mov
lcall
push
xor
loopne
popa
xor
insb
and
add
bound
mov
and
clc
icebp
jg
add
inc
xor
pop
es
xchg
add
mov
bound
sub
push
jne
incl
cld
push
and
sti
mov
shll
xor
cmp
and
sbbl
je
sbb
push
ret
push
int
leave
clc
decl
mov
fbld
enter
mov
dec
jl
lahf
inc
loope
imul
fdivr
popa
popf
xor
call
cmp
or
pop
fisttpll
insb
dec
rclb
push
insb
fisttpl
stos
jg
subb
js
or
add
ret
loope
jmp
ljmp
pusha
inc
dec
pop
mov
inc
incl
fucom
in
sbb
sbb
incl
mov
push
pop
pop
shll
fcomps
pop
mov
pop
pop
sbb
aad
cmc
aam
push
xor
fbstp
push
sbb
cmp
mov
sbb
jmp
imul
ljmp
stos
popa
arpl
insl
mov
pop
add
xchg
les
ljmp
inc
mov
inc
shll
jb
aas
jmp
lock
rol
mov
or
imul
mov
or
clc
popa
and
ret
das
nop
hlt
pop
mov
in
add
insl
incl
adc
mov
outsl
add
cld
or
xchg
xor
lock
jmp
movsl
orb
xor
inc
in
push
sbb
icebp
jecxz
incl
adcb
sub
lcall
popa
pop
inc
int
insl
jg
lock
adc
adc
sub
sbb
and
incl
sub
sbb
cld
sbb
shrl
loop
pop
gs
push
mov
movsb
sub
xchg
lcall
decl
stc
jmp
sub
inc
sub
cmp
out
cmp
push
add
adc
adc
popf
mov
mov
cmp
movsl
pop
jg
cmp
mov
loope
lret
mov
shll
jg
mov
das
jecxz
add
notl
decb
sbbl
mov
jmp
cmp
movsb
or
jg
fistps
pop
test
imul
pop
push
push
std
jmp
movsl
mov
insb
mov
push
mov
inc
adc
loope
into
arpl
test
dec
fists
outsl
cmp
movsb
jo
mov
aad
int
or
data16
add
inc
mov
mov
in
cld
test
mov
jno
icebp
loopne
xor
clc
vcvttsd2si
sub
inc
mov
pushf
andl
incl
and
sar
popa
adc
and
push
push
popa
jo
adc
lods
aas
inc
pushl
std
add
mov
sbb
mov
dec
add
inc
lcall
and
cmp
mov
repnz
adc
pop
pushl
dec
repz
inc
or
pop
and
inc
dec
ja
adc
lcall
pop
std
lcall
lea
or
and
outsl
ljmp
cmp
add
jae
addr16
nop
mov
lea
or
mov
or
lods
jo
lock
mov
icebp
sahf
std
mov
daa
inc
loopne
lsl
imul
jecxz
mov
dec
clc
std
cmc
call
cli
addr16
imul
mov
mov
jg
lds
sub
jo
pop
bound
out
jbe
push
pop
cmp
jb
cmp
lea
lock
jg
push
xchg
cld
xchg
shrl
lret
ficompl
or
in
ljmp
std
cli
inc
insb
mov
sarl
adc
or
clc
inc
sbb
bound
push
xchg
pop
xor
sub
fidivrl
add
pusha
loopne
std
call
dec
add
pop
pusha
lods
cltd
mov
outsl
jp
pop
test
mov
or
add
subb
mov
mov
outsl
mov
sub
call
insl
icebp
lock
jnp
xchg
xlat
inc
xchg
mov
dec
xchg
sbb
jmp
inc
loopne
inc
gs
decl
adc
inc
push
inc
jge,pt
popa
subb
fs
push
xor
dec
xor
mov
mov
movsl
ss
xchg
outsb
adcl
sbb
inc
jg
mov
or
mov
mov
and
and
fbld
xchg
scas
int
dec
dec
cmpsl
popf
mov
add
adc
inc
xchg
jmp
pushl
jae
cltd
mov
ljmp
je
loope
sar
inc
jecxz
jae
fwait
in
in
adc
adc
cmp
icebp
dec
push
insb
jno
push
in
adcl
dec
loope
idivl
pop
jmp
pop
mov
adc
cmp
mov
sub
lahf
incb
sbb
xchg
js
lret
push
pop
pop
and
pop
mov
push
scas
pop
jmp
jg
add
jbe
scas
adc
mov
popf
add
mov
lret
and
je
push
jg
xchg
out
add
fiaddl
add
add
adc
xchg
add
jp
and
adc
out
fisttps
std
cmpsl
iret
sbb
jp
add
inc
cld
sti
clc
add
add
fildll
add
icebp
push
and
ja
insl
std
addb
movsb
icebp
fadds
lahf
popa
jge
cmc
push
jae
pop
sub
adc
push
inc
jmp
xor
adc
adc
loopne
jo
and
add
dec
das
pop
sbb
std
ja
aas
popa
sub
jb
inc
adc
add
add
adc
decl
or
or
xor
mov
adc
sub
jge
out
cmp
adc
jns
jmp
jg,pn
lret
inc
or
cmp
mov
mov
mov
mov
and
and
jne
push
ret
and
adc
les
stos
mov
insl
dec
adc
repz
add
sub
and
pop
xor
icebp
and
fldl
insb
adc
daa
xlat
or
lods
idiv
inc
push
pop
movsl
daa
dec
jae
add
push
cmp
inc
jne
repz
lock
dec
sub
xor
lcall
sbb
and
push
inc
push
xor
ret
mov
dec
inc
popa
add
add
aas
or
push
add
test
faddl
xor
decl
push
jbe
push
and
testl
mov
test
insl
pop
xor
xor
inc
scas
subb
adc
clc
je
mov
pushf
push
push
inc
jne
fxch
in
inc
mov
sub
cmp
sub
pop
mov
adc
and
lcall
arpl
mov
ljmp
push
mov
shrl
mov
xor
sbb
popa
mov
mov
push
jne
pop
std
push
pop
test
ja
push
push
sbb
push
cmp
mov
jg
js
daa
cli
aaa
and
sub
test
out
out
add
pop
cmp
cmp
cs
and
adc
mov
int
icebp
loopne
add
xchg
fcomip
clc
mov
rolb
insw
push
xorl
rol
loop
iret
out
sub
rcr
icebp
inc
add
xchg
stos
sub
xchg
addr16
mov
in
std
xchg
lcall
pxor
outsl
out
mov
jg
add
add
mov
fadds
dec
ja
sub
xchg
jbe
out
mov
mov
adc
rcll
xchg
les
and
xchg
fdivl
xchg
mov
aas
loop
imul
adc
lock
faddl
pop
xchg
jne
icebp
xor
bound
xor
sti
aas
fwait
and
and
xchg
mov
sbbb
mov
or
xchg
pusha
dec
mov
adc
sbb
push
call
aas
hlt
add
faddl
int
addr16
xchg
loop
jno
cmp
cmpsb
popa
adcl
inc
mov
mov
sti
in
stos
pop
lods
mov
lods
fildll
dec
sbbb
loopne
lock
jno
jmp
and
pushl
cli
and
divl
jb
jno
push
inc
add
dec
push
ret
ss
daa
jl
xorb
adc
test
add
sbb
incl
das
fstpt
mov
push
cmp
adc
cmpl
jo
clc
inc
and
mov
or
adc
cmpb
mov
xor
inc
flds
mov
femms
pushl
aad
mov
inc
test
push
rcl
aad
xchg
fcomip
clc
xchg
insl
bound
push
sub
adc
aas
hlt
call
xchg
pop
jne
push
xor
sbb
sbb
jge
clc
shll
jb
jae
test
mov
clc
mov
cmp
pop
dec
aad
push
cmpb
adc
decl
out
jae
scas
ret
push
andl
mov
pusha
jns
jg
repz
std
cmp
cmp
dec
flds
daa
mov
pop
std
test
enter
dec
pop
sbb
lods
dec
mov
call
rolb
std
sahf
std
xchg
cmpsl
sub
adc
lods
inc
sub
stos
test
out
inc
call
fsts
add
jb
xor
mov
or
daa
loope
incl
xchg
mov
out
and
mov
decl
add
inc
rolb
sti
loopne
or
or
sar
ret
jae
orb
rcrl
sub
xor
popa
sbb
jle
shll
or
and
sti
jg
int3
sbb
xor
es
ret
add
ud0
jmp
rolb
js
mov
sub
sub
jecxz
out
ljmp
pop
clc
icebp
in
cmp
xor
push
cmp
and
push
aas
imul
jbe
ljmp
sub
repnz
xor
xchg
decl
mov
std
add
orb
cwtl
sub
mov
sti
xchg
mov
call
bnd
and
stos
adc
push
inc
or
daa
inc
call
scas
dec
aam
cwtl
insl
test
jp
js
das
out
int3
bound
xor
cmp
add
push
jmp
or
adc
subl
loop
aad
add
in
or
add
cmp
pop
aas
test
icebp
jp
loop
jbe
mov
inc
shr
dec
cmp
insl
pop
insl
push
sub
cmp
lea
pop
push
sub
gs
dec
sbb
or
icebp
push
add
call
mov
jecxz
xorl
repz
das
jmp
divb
xchg
loope
and
imul
gs
lock
test
lret
shrb
jns
mov
in
jge
cmpb
paddd
repz
inc
jg
push
mul
xlat
add
jge
dec
je
fidivs
movsb
lea
enter
ljmp
jae
dec
push
inc
loope
mov
or
mov
jmp
push
adc
mov
and
movd
lea
fwait
xchg
xchg
jno
jp
pop
out
incl
clc
jmp
adc
inc
popf
push
popf
popa
scas
jno
sbbl
shlb
rcl
movaps
fdivrl
mov
sbb
xor
pushl
jns
or
lods
test
into
mov
mov
dec
mov
inc
mov
cmp
roll
dec
ret
sbb
scas
popf
dec
rorb
mov
in
outsb
leave
xchg
call
call
jmp
push
sbb
arpl
repnz
pop
jecxz
jecxz
lods
test
nop
mov
jmp
inc
aam
lods
mov
idivl
test
popa
xchg
inc
push
mov
imul
and
jg
xchg
in
mov
in
lcall
xor
dec
mov
mov
lcall
mov
rcrb
inc
dec
add
std
aas
std
dec
hlt
outsb
jno
mov
sar
push
cmc
add
fstpt
int
int
dec
xor
jo
xchg
ret
ljmp
test
add
shll
mov
call
pop
xchg
mov
scas
adc
add
adc
loop
cmp
lods
bound
fldenv
mov
test
push
popa
mov
data16
xchg
mov
jmp
add
push
enter
aas
loopne
loope
or
repnz
add
loopne
les
jo
imul
ja
mov
dec
bound
xchg
xor
mov
pop
push
or
lret
roll
inc
dec
aas
test
test
test
jmp
decl
cltd
imul
xor
mov
dec
lods
sbb
bnd
jg
repnz
add
xor
xor
arpl
lcall
and
cmc
incb
xor
xchg
adc
mov
pushl
cmp
and
xor
xor
xor
filds
mov
pop
xor
xchg
or
xor
add
dec
out
call
mov
or
or
and
stc
mov
mov
aam
aas
add
clc
lcall
ljmp
or
ret
pop
sbb
aam
std
adc
fdivs
mov
xor
dec
mov
xor
add
push
cmp
fs
popa
sub
popf
push
and
imul
adc
jle
clc
xor
or
insl
mov
pop
lds
pop
add
je
adc
dec
push
dec
push
lcall
call
xor
pop
hlt
data16
jmp
sbb
sbb
jle
loope
pop
mov
or
mov
lcall
sub
mov
or
pushl
jae
push
fwait
push
xchg
sub
mov
and
sti
loop
lret
adc
notl
pop
pop
pop
sub
clc
lahf
test
dec
clc
sti
dec
mov
loope
orl
inc
cli
test
movsl
push
outsb
mov
scas
loopne
inc
cmp
xor
pop
push
mov
movsl
xor
xchg
mov
add
imul
std
aas
xor
adc
xchg
adc
dec
jg
lock
dec
push
sbb
push
push
xor
sbb
mov
popl
mov
xchg
scas
mov
jo
inc
adc
sub
sbb
ret
lret
sub
icebp
dec
cld
sub
stos
pop
cltd
jg
mov
mov
dec
sbb
ret
cmc
mov
scas
xchg
adc
and
sub
ja
inc
dec
pop
add
dec
mov
cmovb
cmc
arpl
imul
push
adc
lret
lahf
imul
jle
lcall
cld
icebp
dec
lcall
xchg
mov
dec
es
pop
roll
inc
xor
in
jg
dec
bound
jmp
fprem
inc
inc
repz
xchg
xor
cmp
pop
mov
mov
push
decb
xlat
pop
loopne
out
aaa
test
sbb
sub
push
cs
clc
loope
jle
out
xor
ror
adc
roll
enter
stos
xor
xlat
stos
inc
aaa
repz
dec
mov
dec
lahf
and
rol
adc
mov
lock
les
addr16
cmp
inc
push
movsl
movsl
jbe
push
inc
add
inc
add
sub
loope
fs
or
xor
xor
add
fs
cmp
lcall
push
and
cmpl
jne
mov
or
push
movsb
jae
aad
adcl
paddd
enter
popf
loopne
bound
jge
shll
mov
lds
push
add
mov
xor
add
jae
stos
je
pop
unpcklps
add
data16
or
cld
mov
addr16
dec
dec
dec
out
add
jge
adc
or
jg
clc
push
xchg
inc
pop
aas
insl
mov
pop
dec
sti
jg
mov
fs
inc
dec
call
loopw
incl
mov
xor
jg
scas
and
push
dec
cmp
nop
dec
cmp
out
outsb
aaa
mov
mov
int3
add
xlat
push
fisubrl
jl
aad
iret
lea
dec
iret
ret
mov
cli
inc
sahf
aaa
or
xchg
adc
xor
inc
pusha
jno
xor
push
adc
sbb
sahf
inc
movsb
inc
xchg
cmpsl
mov
fbld
inc
fldl
push
mov
rclb
and
xlat
xor
insl
cli
jmp
clc
and
icebp
nop
cld
and
xchg
pop
pop
push
popf
fbstp
out
dec
sarb
dec
add
add
out
mov
jg
incl
jno
add
popf
test
pop
or
add
aad
mov
lcall
and
test
jmp
xchg
pop
loope
and
nop
enter
sub
stos
inc
push
add
ljmp
or
movsl
or
clc
loop
jecxz
js
imulb
in
pop
jecxz
push
lcall
jp
insb
xchg
sbb
decl
push
cld
push
add
dec
mov
test
subl
loop
add
repz
scas
addr16
jmp
cmc
lods
sbb
or
pushl
jae
outsb
xchg
scas
mov
in
jb
xor
add
fabs
xor
xlat
loope
lcall
pop
pop
mov
add
cmp
popa
fcmovbe
add
test
out
lea
aaa
mov
mov
jl
or
lock
jecxz
mov
roll
pop
rcl
les
and
ret
lods
dec
clc
loope
cli
mov
pop
jno,pt
xor
jne
js
dec
push
xor
call
mov
je
pusha
movsb
rclb
xor
in
jmp
movsl
scas
push
xchg
lahf
dec
adc
mov
aam
lcall
push
ljmp
mov
cld
and
fstp
fcompl
jmp
sub
inc
aam
pop
lods
jno
xchg
jne
jle
jae
or
int
push
in
in
mov
sbb
push
adc
in
cld
jno
cmp
jg
sub
jecxz
jmp
sub
or
clc
rorl
mov
push
sub
jae
jmp
dec
lods
jb
or
lods
arpl
loope
inc
push
ret
cmp
dec
mov
cmp
call
inc
insl
int
mov
out
cld
push
mov
or
incl
add
inc
fnstsw
ljmp
dec
push
adc
mov
sub
out
call
push
movsl
repnz
xchg
mov
inc
scas
repz
dec
sub
ss
fdiv
rcrb
loopne
push
xchg
inc
push
xchg
xor
cmp
sub
dec
mov
xor
lret
push
push
mov
cmp
pop
jmp
ljmp
jecxz
push
imul
mov
adc
and
ljmp
jp
dec
xlat
enter
out
aad
in
pop
std
inc
int3
sbb
rcr
aad
sub
hlt
adc
mov
mov
nop
jmp
lock
mov
push
cmp
mov
loope
popf
test
xchg
jns
out
xchg
pushf
and
pop
mov
mov
and
sbb
jecxz
insb
filds
icebp
sub
jecxz
ret
and
xor
cli
mov
lcall
stos
pop
outsl
mov
xor
cmp
xor
mov
jo
imul
pusha
sti
js
lods
mov
lret
sbb
inc
and
xor
sub
imul
push
jne
jbe
cmp
cmp
aas
and
jg
or
cmp
mov
or
and
subb
loope
inc
popf
mov
repnz
mov
or
punpcklwd
sub
xor
jo
xchg
cmp
mov
dec
aas
jae
xor
call
inc
or
add
insb
dec
jl
and
push
sub
andb
jmp
shl
gs
dec
push
dec
lea
pop
pushf
incb
mov
dec
fwait
push
lret
push
cli
bound
push
cmp
mov
jg
pop
and
and
mov
push
dec
xor
mov
shl
jo
pop
sar
psraw
adc
addl
lcall
js
nop
xchg
mov
fisubrs
or
cmp
sub
cmpb
sar
sbb
add
pop
dec
dec
add
mov
decb
pop
sahf
adc
pop
dec
add
aam
int
pop
outsb
out
std
pop
gs
stc
or
daa
mov
or
sar
lds
aas
in
ret
jle
out
lods
pop
aad
in
mov
jg
and
ffree
ss
dec
clc
lcall
leave
ror
js
fstpl
lds
mov
xchg
int
sarl
mov
out
add
cmp
enter
or
add
push
ljmp
in
pop
adc
sbb
xchg
pop
lods
int3
sbb
pop
mov
cmc
ljmp
test
pop
aad
inc
add
push
lds
pop
nop
fildll
stos
pop
into
in
or
push
jg
mov
enter
sbb
fistl
mov
rolb
outsb
sbb
add
sub
cmp
test
mov
adc
mov
pop
xor
push
pop
push
aas
push
in
outsb
scas
push
insl
jmp
loope
ret
push
xchg
je
adc
mov
and
adc
adc
and
adc
pushl
test
adc
hlt
push
add
adc
adc
cwtl
loopne
dec
jmp
mov
sarb
test
pop
lret
jnp
sbb
or
ret
bts
idiv
decl
mov
rorb
or
inc
sub
aad
arpl
test
pop
and
jmp
mov
in
jg
test
and
daa
push
js
jg
push
jg
icebp
sbb
and
add
pop
rorl
inc
ss
xabort
cld
clc
lock
mov
rol
add
pop
xor
rcrl
mov
push
les
imul
lock
pop
aas
jg
lods
add
clc
les
cld
nop
lock
aas
mov
push
cmc
cmp
xor
clc
jg
push
adc
cmp
sub
aas
mov
and
adc
mov
movsl
add
ret
jle
mull
sbb
ds
pop
pop
sbb
sub
fwait
cmp
mov
push
aaa
jo
adc
movsb
sbb
cmp
hlt
dec
pop
addr16
mov
clc
pop
call
jo
adc
and
adc
into
sbb
sbb
cmp
inc
scas
lret
xchg
pop
lret
insl
dec
add
lcall
movl
leave
dec
mov
mov
push
inc
xor
and
pop
fsubrl
stc
push
dec
lds
inc
das
je
adc
mov
loope
bswap
add
loopne
cwtl
add
pop
scas
decb
lods
inc
jo
and
rclb
clc
shr
dec
push
pop
dec
pop
enter
xchg
adc
daa
aas
mov
js
mov
pop
adc
dec
and
lock
mov
jg
pop
push
in
push
pop
xor
pop
std
pmaddwd
xor
mov
and
inc
sub
xor
and
inc
inc
push
jmp
sarl
cmp
popa
pusha
insl
int3
sbb
insl
mov
js
pop
inc
call
scas
add
push
ret
adc
outsb
int
pop
cmp
and
mov
cld
inc
pop
jae
mov
or
dec
add
adc
jne
inc
out
push
in
inc
outsb
jno
cmp
inc
imul
cmp
inc
mov
fs
jb
adc
jb
inc
stos
pushl
jae
out
push
jae
inc
gs
test
push
imul
insl
sbb
pop
mov
decl
add
out
pop
xor
mov
mov
and
push
jmp
mov
mov
xchg
mov
es
jg
bsr
mov
push
sub
adc
pushl
xchg
mov
inc
iret
pop
aam
sub
sbb
fs
stos
push
push
cmp
test
or
dec
out
pop
popf
cmp
jmp
shll
aad
or
clc
add
fildl
je
or
fst
incb
jge
dec
add
lret
je
pop
rorb
xor
adc
std
dec
dec
fmull
dec
sub
dec
add
xchg
cmp
dec
or
and
cld
jg
iret
pop
push
addb
mov
add
rcrl
sbb
jle
mov
xchg
gs
insl
cwtl
jns
lcall
aam
or
add
mov
call
mov
xorl
fwait
jle
jno
mov
std
mov
sti
iret
test
add
sbb
leave
aad
aam
fmull
scas
sub
mov
arpl
and
sub
les
icebp
decl
movsb
rep
dec
pushf
loopne
hlt
add
mov
sti
ret
pop
nop
mov
cld
lods
pop
adc
mov
int
sbb
aad
jp
pop
sub
inc
movb
adc
std
incl
mov
mov
popa
sub
jg
dec
mov
cs
add
inc
ret
mov
popa
insb
and
mov
xor
lock
lods
jg
adc
sub
int
mov
int
adc
lret
pop
mov
or
inc
call
lret
add
lods
fdivl
mov
cmpsl
dec
mov
out
dec
mov
faddl
vpsrad
push
shll
mov
push
mov
stos
orl
mov
mov
jg
mov
inc
add
push
and
lods
xlat
jecxz
mov
jecxz
xor
pop
test
jg
fisttpll
sti
adcb
adc
ja
iret
push
sub
and
push
je
or
insl
ret
lcall
cld
jmp
and
sub
and
xor
inc
popa
ret
add
std
idivl
mov
mov
adc
addb
jge
dec
jecxz
xorl
pop
mov
jno
jg
pop
std
sub
std
std
imul
mov
orl
jae
mov
fcoml
inc
and
std
add
fsqrt
mov
test
data16
sbb
fisttps
rorb
mov
dec
mov
decb
pop
or
cld
push
xor
in
test
add
imul
sub
pusha
sti
adc
std
std
mov
inc
and
adc
sbb
adc
sub
movsl
lcall
aad
sbb
push
inc
sub
push
mov
push
in
dec
xchg
push
sub
cli
jmp
push
cmp
add
jno
xchg
xchg
push
lret
dec
test
xchg
pop
adc
lcall
loopne
lea
jae
or
and
loope
inc
lcall
inc
addr16
lds
push
lock
or
ds
or
popa
inc
ret
faddl
nop
mov
leave
dec
in
outsb
std
cli
sub
sahf
std
dec
cmp
aaa
and
dec
hlt
or
incl
jmp
mov
cmp
and
adc
jns
cmp
or
test
fcmovb
lock
ljmp
insb
rcrb
mov
loop
fisttpl
shll
dec
inc
sti
jg
push
xchg
xchg
repnz
dec
clc
outsl
xchg
lock
pusha
test
mov
inc
js
inc
add
aas
push
mov
adc
out
fs
loop
decl
push
ret
xchg
lock
jno
push
jno
test
xchg
push
dec
mov
subl
or
cli
test
flds
dec
ret
inc
hlt
jg
ljmp
or
rcll
in
jne
inc
sub
xor
pop
jge
pop
xor
mov
jecxz
aas
pop
dec
or
xor
ffreep
sar
dec
mov
scas
xchg
aas
xor
out
or
cmp
mov
rcrl
lods
mov
mov
pop
mov
mov
push
ss
js
jecxz
lcall
insb
xlat
nop
and
xor
adc
push
mov
xchg
bound
das
aas
xchg
pop
jns
mov
in
sbb
xor
xor
and
or
jnp
mov
outsl
sbbb
sub
mov
xchg
je
or
decl
repnz
xor
push
push
enter
insl
sbb
pop
pop
decl
push
xchg
pop
mov
lods
xlat
push
mov
aaa
push
jmp
dec
pop
adc
dec
mov
mov
lods
cmp
sbb
and
inc
popa
je
add
repnz
imul
mov
jg
ds
out
add
dec
xchg
lock
insb
cmp
mov
in
out
cmp
ljmp
mov
add
cmp
test
das
mov
jmp
add
popf
jo
pop
add
outsb
out
mov
or
mov
mov
daa
dec
push
je
add
scas
jae
mov
test
and
test
sub
addr16
add
or
add
add
inc
mov
xchg
add
aad
cld
sti
lock
add
add
add
icebp
add
jb
dec
cld
or
mov
scas
sub
hlt
scas
mov
xor
aad
lods
in
jo
cld
loopne
clc
aas
loope
adc
pushf
add
add
mov
cld
jnp
ja
push
xor
insl
mov
and
ret
ljmp
or
scas
sbbl
pop
jg
cmovnp
roll
ficompl
pop
pop
out
cs
adc
or
adc
mov
mov
fwait
add
pop
ljmp
mov
adc
adc
out
and
add
adc
and
adc
lds
inc
cld
pop
add
cmpsb
and
adc
out
idiv
fisttps
sub
pop
sbb
addr16
shrl
sbb
adc
adc
cmp
cmp
lock
dec
xor
or
jae
mov
cmp
inc
sbb
mov
and
test
outsb
sbb
les
cmp
mov
jb
adc
inc
mov
in
and
jne
fwait
bndldx
decl
jg
sub
and
inc
incb
push
and
adc
mov
js
dec
adc
sub
mov
mov
rolb
add
loopne
aad
daa
fdivp
pop
jmp
xor
pop
push
and
adc
add
sub
xor
ja
push
fs
or
sbb
lds
pop
jbe
and
rorl
add
xor
lea
sti
and
adc
mov
pop
maskmovq
add
insl
mov
ja
mov
ja
incl
push
and
dec
je
and
mov
ljmp
ret
fld
push
bound
dec
adc
and
and
rolb
popf
adc
ror
mov
les
movsl
add
aas
movsl
shlb
xor
push
arpl
add
xor
adc
push
push
push
out
test
push
dec
loopne
rorb
jl
lahf
jo
inc
or
push
lea
jmp
mov
lea
jb
inc
and
add
sub
cmp
daa
loope
push
in
aas
xchg
and
xor
and
adcl
popa
roll
sti
or
add
gs
sub
repz
shl
loopne
sub
sub
jg
hlt
inc
or
push
mov
mov
popf
test
inc
cmpsb
and
inc
pushf
add
incl
jl
jp
test
push
cmp
jg
int
test
and
xchg
push
xchg
negb
add
jae
cmp
sti
incl
push
outsl
jae
jb,pn
push
lods
add
stos
mov
xchg
push
xor
xchg
jbe
hlt
decl
sahf
pop
bound
add
dec
pop
jmp
popf
sar
xchg
outsl
imul
push
or
dec
cli
icebp
cmpsl
testl
fidivrs
hlt
incl
add
adc
inc
fs
jl
notb
popa
cld
std
jne
lods
nop
and
push
xorl
incl
pop
int
ret
push
jp
imul
sbb
inc
inc
mov
xor
lret
dec
lock
push
sub
mov
adc
insl
std
ret
outsl
mov
ret
xor
mov
cli
and
inc
jns
jbe
mov
hlt
icebp
xor
add
xchg
adcl
insb
sub
cmp
pop
xchg
aad
xchg
in
das
jmp
cmp
in
xor
test
in
arpl
out
mov
les
xor
sti
or
out
clc
xor
subl
sub
mov
push
aaa
not
and
test
daa
and
add
add
jmp
int
insl
mov
mov
and
sbb
scas
sub
cli
push
cmpsl
rclb
fsubs
sbbl
aas
xlat
fs
cmpsl
and
sub
gs
mov
sub
psllw
testb
std
rol
sub
pop
std
inc
add
movsl
pop
mov
mov
adc
cld
out
jb,pt
and
orb
in
mov
sahf
sbb
ljmp
sub
std
adc
incl
rclb
push
shl
inc
js
cmp
call
jno
xor
jb
mov
out
ljmp
repnz
xchg
xchg
dec
push
jo
movsl
adc
popa
inc
rcll
les
aas
and
cmp
hlt
mov
nop
and
pop
mov
dec
add
clc
inc
popa
inc
and
aaa
lcall
shlb
sbb
loopne
jg
ljmp
jmp
fisubrs
iret
jp
add
popa
inc
adc
loop
pop
clc
push
je
pusha
adc
sub
mov
shll
hlt
xor
lcall
add
sub
cltd
sub
es
push
aas
pop
xchg
into
cmp
cmpsb
xchg
cmp
movsb
ret
and
icebp
inc
inc
add
loop
or
imul
loop
lock
add
sarb
sub
loopne
mov
stos
sub
mov
inc
jmp
aaa
xchg
jecxz
xor
fcom
mov
data16
rcll
aaa
inc
sub
decl
jb
bound
mov
data16
add
dec
add
idiv
jmp
pop
loope
mov
gs
sbb
dec
jno
addr16
adc
adc
imul
inc
aad
rcll
xlat
jb
cmp
jg
pop
xchg
pop
insl
sub
add
aas
sbb
adc
jge
xor
loope
jge
jge
arpl
ret
jb
sub
jo
xor
mov
insl
roll
and
sarb
hlt
jmp
jmp
adc
xchg
fcmovbe
jae
je
icebp
pop
out
roll
shrb
and
add
lds
cld
mov
mov
rcl
sbb
dec
ret
xorl
mov
cmp
leave
ss
jp
ss
clc
push
inc
cli
jmp
std
notl
pop
clc
dec
adc
cmpsb
sub
idivl
out
add
addb
jmp
aas
jb
sub
add
cmp
dec
dec
inc
xchg
mov
lret
and
or
mov
jno
in
jmp
jmp
push
mov
imul
shrl
cmc
push
jge
adc
rcl
subl
popf
and
pop
or
and
aas
shll
shr
pop
and
mov
sarl
xchg
mov
imul
mov
shr
out
sbb
pop
xchg
add
cli
inc
jg
mov
add
add
lret
aad
inc
adc
mov
push
rcll
out
popf
and
popf
rcrb
call
dec
mov
add
jg
repnz
adc
or
imul
js
xchg
decl
int3
in
sahf
mov
rorl
stos
mov
std
das
cmp
cmp
cwtl
xchg
pop
or
sar
inc
xchg
xchg
pop
add
leave
mov
fbstp
ljmp
adc
outsl
loopne
mov
dec
ljmp
loop
mov
push
popa
mov
jl
icebp
in
and
or
add
jle
jmp
loopne
and
push
lret
mov
inc
push
dec
cmp
mov
jp
fbstp
hlt
aas
adc
imul
mov
inc
shrl
adc
sbb
popa
adc
jge
stc
push
ret
or
cmp
in
lea
mov
dec
fsubp
sub
cwtl
jge
xor
repz
xchg
mov
and
fstpt
jno
loope
jo
xchg
decl
fucomp
mov
sti
push
add
int
les
inc
mov
mov
cltd
adc
push
mov
mov
loope
lods
sbb
bswap
xchg
test
pop
sub
std
adc
mov
pop
xor
or
add
adc
add
xchg
sub
inc
or
adc
jmp
gs
add
addr16
arpl
inc
ljmp
push
add
stos
add
add
push
sahf
jl
jg
sti
jg
cmpsb
aaa
add
aas
mov
dec
cli
imul
sbb
mov
adc
pop
imul
test
mov
push
pop
test
fistpll
jo
add
add
outsl
rorl
jbe
add
das
add
add
mov
out
fs
push
add
xchg
imul
sbb
add
cltd
add
and
std
sti
rolb
std
add
mov
push
jno
pop
add
push
loopne
outsl
pop
add
dec
in
add
inc
push
insb
jae
sub
jg
adc
arpl
insl
in
fcom
pushl
pop
movsb
add
sub
add
push
test
popa
push
sbb
outsl
dec
jp
mov
cvtps2pi
xchg
jmp
pop
push
dec
add
xchg
adc
cmp
add
and
lret
aas
mov
daa
test
sbb
jno
enter
add
inc
inc
xor
ljmp
xor
repnz
mov
dec
xchg
adc
pop
or
gs
adc
adc
mov
add
adc
aas
out
mull
shlb
daa
mov
lea
and
jo
xchg
adc
add
pop
inc
and
pop
add
xchg
adc
icebp
test
sub
add
push
mov
inc
add
adc
and
cmpsl
or
add
and
or
jg
inc
mov
outsl
adc
sbb
cmp
sub
or
pop
xor
sbb
push
aas
dec
adc
dec
test
insb
sub
and
cld
cmp
test
inc
sub
add
addb
js
stos
test
add
adc
frstor
imul
xor
loopne
pushl
scas
add
pop
and
stos
sub
and
jecxz
cld
xchg
jo
and
sub
push
jecxz
pop
std
fbld
sbb
cmp
push
sub
inc
add
cmp
mov
fcmovne
and
push
inc
pop
xchg
lock
jp
push
jp
pop
pop
and
inc
push
mov
xor
mov
pusha
jo
sub
and
add
adc
jbe
inc
movb
aas
jl
test
push
dec
pop
iret
add
adc
and
mov
lock
filds
ja
sbb
pop
stc
aad
jb
inc
insl
sbb
pxor
rolb
popa
xor
jne
cmc
jg
das
push
mov
sbb
and
cmp
fldenv
mov
lds
inc
inc
pop
stos
adc
es
or
out
arpl
and
inc
inc
and
jge
std
icebp
pop
mov
push
xor
add
sarb
adc
dec
and
inc
and
lea
incl
jmp
jge
cmp
xor
cwtl
xchg
loopne
incl
nop
imul
fcoms
add
add
add
pop
and
psraw
cmp
mov
insb
lea
jecxz
adc
xor
addl
sbb
xchg
daa
push
jb
daa
ss
jg
loopne
out
pop
jecxz
popf
mov
and
cld
insl
rsqrtps
rclb
es
push
popf
mov
jmp
pop
xor
mov
pop
sub
pop
push
in
jae
and
enter
pop
dec
clc
cmp
cltd
mov
rorl
jae
psubb
fs
mov
mov
popf
inc
insl
push
insl
mov
nop
lods
cwtl
xchg
imul
ret
jecxz
xor
mov
fcmovnbe
aas
rorb
je
call
cmp
clc
aas
clc
lcall
mov
pop
jne
pop
test
das
je
iret
and
and
push
adc
sti
jb
inc
adc
push
jecxz
gs
rclb
inc
and
inc
jns
xor
push
int
int3
inc
add
hlt
stos
incl
mov
lds
into
or
popf
add
movsb
and
adc
jno
xor
add
shll
mov
mov
cmpsl
sbb
adc
ud0
xor
adc
in
or
sbb
jg
mov
add
or
dec
lds
mov
inc
or
inc
pop
and
dec
movsl
pushf
sbb
jmp
push
add
or
adc
roll
aam
add
inc
stos
inc
mov
outsb
add
ret
aam
add
cmp
or
jmp
mov
adc
fstl
ffree
in
into
call
pop
test
loopne
loopne
popf
fs
jmp
das
sbb
cmpsl
inc
or
sub
mov
inc
add
cmp
mov
aas
mov
add
je
dec
inc
aam
scas
outsl
pop
cmpb
xlat
jae
in
mov
dec
std
pop
std
push
sarl
mov
lret
cli
ffreep
sub
loopne
test
push
add
cmc
and
loope
or
sub
add
popa
sti
inc
ret
icebp
adc
mov
and
hlt
sub
jb
jbe
outsb
add
clc
jg
leave
and
jo
les
daa
bound
in
cmp
hlt
lds
xchg
jbe
ljmp
popa
or
jo
shll
nop
popa
sbb
sahf
icebp
add
inc
add
pushf
add
jle
call
movsl
and
addr16
repz
test
xor
xor
roll
incl
rorl
inc
jae
lahf
add
rorl
push
mov
and
jg
in
and
xor
pop
jo
fucomip
jg
add
std
jmp
fcos
stos
jmp
fdivs
xchg
rolw
roll
jge
or
call
mov
push
or
cmp
cmp
xchg
inc
sub
mov
pop
call
int3
and
mov
jecxz
sub
sbb
pop
out
rorl
mov
data16
xchg
ret
ljmp
repnz
mov
outsb
sub
jg
std
cli
rolb
fistpl
les
arpl
xor
jg
ret
jp
shr
lcall
add
mov
push
movsl
jbe
mov
jmp
push
xchg
sub
xor
loopne
insb
daa
pop
outsb
jno
add
adc
rep
mov
sbb
cmp
sub
push
jno
push
rclb
outsb
pop
cmp
lahf
push
lods
daa
pop
out
call
adc
cmpsb
orl
movsl
mov
jne
loopne
fwait
cmp
sub
xor
inc
xchg
push
es
mov
leave
ret
sbb
je
cs
mov
or
mov
data16
adc
and
adc
sub
lcall
sbb
sbb
mov
inc
daa
aam
sbb
push
push
mov
incl
dec
xchg
int
dec
mov
jae
pop
roll
xor
mov
jge
xor
add
sbbl
jg
idivl
jno
cltd
inc
shll
shll
jge
jge
jg
clc
jnp
xor
loope
popa
arpl
push
jge
lea
or
jle
stos
repz
enter
adc
into
sar
inc
flds
ret
xor
add
cmp
bt
sub
mov
pop
std
inc
bound
movb
arpl
loop
and
lea
jg
sbb
inc
sbb
xchg
and
dec
and
int
popa
test
xchg
push
push
sub
sbbl
jg
sbb
orb
dec
or
fs
icebp
xchg
jle
sti
cs
add
imul
mov
clc
jae
xlat
mov
sarb
adc
add
clc
pop
push
mov
gs
pushf
cmpsl
cld
popa
cld
jecxz
jecxz
ret
sahf
jp
or
pop
add
mov
mov
push
mov
pop
scas
test
cmc
jo
jmp
loope
jl
xor
scas
incb
pusha
jae
outsl
mov
push
movsl
dec
scas
mov
inc
cli
jmp
jae
fsubl
mov
imul
sti
mov
decl
sub
mov
and
std
xchg
imul
jmp
fnstenv
pop
mov
cmp
push
aam
int3
imul
fisttpll
aad
outsb
push
pop
mov
out
ret
jg
lcall
fsts
xchg
mov
pop
loopne
outsb
test
and
dec
cmpsl
pushl
add
icebp
xor
inc
outsl
pop
inc
adc
loope
inc
loope
add
sbb
inc
mov
fsubl
sbb
repz
add
int
sbb
adc
incl
enter
dec
mov
lea
add
fldl
pop
in
pusha
inc
aas
sbb
stos
loopne
in
repnz
add
sub
lods
test
add
inc
dec
repz
add
rclb
in
arpl
jae
cmp
or
jno
aas
cld
incl
sub
lods
xchg
cli
and
add
or
mov
sbb
xchg
xor
loopne
xor
jae
ja
push
and
or
or
aad
fldt
add
jae
cmp
xor
or
aad
mov
pop
xor
imul
mov
and
xor
stos
or
movsl
sbbb
inc
or
decl
sub
icebp
xor
repz
loopne
jmp
int
push
ret
sahf
and
nop
inc
add
cmp
lock
sub
insl
fldenv
adc
popa
xchg
fisubrs
pushl
cmc
dec
sub
cmp
call
cmp
cmp
xchg
imul
in
add
lods
jo
add
std
addb
and
das
movsb
pop
push
icebp
sarb
cltd
mov
push
stc
bound
push
in
roll
or
push
clc
inc
jno
sub
decl
jo
nop
cld
ret
jbe
mov
in
inc
push
incb
add
jno
into
add
call
mov
sub
enter
pop
cmp
mov
mov
shrl
sbb
jo
adc
xor
jmp
add
pop
or
jb
xorb
inc
loope
loope
aad
push
jg
pop
or
push
int3
inc
fldl
js
shr
loopne
sbb
add
sbb
loope
and
mov
enter
in
adc
insl
icebp
lcall
pop
cmp
jge
jge
dec
and
insb
push
loope
or
imul
incl
rorb
inc
ret
push
mov
out
leave
add
jbe
hlt
cld
jno
jecxz
cmp
sbb
call
shll
mov
add
in
jne
test
clc
jmp
and
call
and
ret
aam
sub
pushl
aam
jae
enter
dec
jle
in
loop
sub
push
movsb
loope
add
cld
lds
clc
decl
fwait
inc
or
mov
popa
dec
nop
imul
xor
je
flds
xchg
push
test
test
xchg
dec
imul
xor
lock
popf
mov
cmp
mov
pop
push
jo
mov
rorl
or
inc
std
incl
aas
pop
jne
push
adc
movsb
lods
pusha
ret
mov
cld
jge
pushl
pop
add
pusha
push
addr16
or
dec
or
decl
push
jge
sarl
pop
push
or
inc
and
std
movsl
sbb
js
mov
sub
mov
jb
ja
cmpsb
inc
pop
ljmp
pushl
jecxz
cltd
sub
and
pop
sti
incl
mov
pop
push
pop
pop
inc
jbe
ficoml
scas
shlb
jge
stos
dec
ret
jge
int
jge
lods
dec
sbb
mov
add
mov
add
shlb
roll
sbb
jg
arpl
int
dec
push
dec
cmp
push
jne
cmp
ljmp
lods
fstpl
imul
mov
pop
stos
call
fnsave
movsl
pop
lods
lea
adc
lcall
dec
cwtl
add
mov
int
int
lcall
cld
cmp
lock
sbbb
popa
and
roll
loope
jno
orl
mov
int
xor
pop
popa
es
inc
loope
arpl
addl
sbb
add
fs
enter
mov
sbb
sub
adc
loop
out
clc
or
add
loopne
cld
in
sarb
mov
xor
aam
mov
std
cmp
inc
push
decb
sar
rol
mov
and
inc
incl
es
xchg
mov
and
xchg
mov
inc
push
call
rcll
iret
or
mov
sbb
and
dec
jmp
addl
nop
pushf
arpl
insl
rcll
mov
incl
or
xchg
cmp
xlat
push
mov
xchg
cli
jno
jmp
jmp
loope
pop
mov
int
addl
xorl
subl
cmp
jnp
scas
sub
mov
jecxz
jno
sbb
push
inc
dec
mov
and
jl
js
sub
mov
push
jmp
add
rclb
adc
out
and
and
or
cld
push
add
adcl
mov
jbe
rclb
cld
fildll
xor
pop
sub
pop
add
jo
sbb
in
add
inc
push
and
cwtl
mov
incl
test
jno
cmc
test
sbb
jl
cld
scas
fldl
ds
insl
pop
xchg
loope
sbb
xor
das
sbb
imul
daa
jg
jg
daa
pop
mov
cmpsl
add
sti
or
adc
sbb
or
dec
out
jg
imul
mov
jno
adcl
pop
inc
push
nop
push
movb
add
pop
cmpsl
call
cmp
call
sbb
dec
cmpsl
jo
jmp
jb
cmp
mov
push
subl
leave
repz
add
insl
movsb
pusha
pop
dec
push
ret
sbb
rorl
push
mov
nop
idiv
sti
lock
inc
xor
andl
idiv
imull
push
ret
or
dec
adc
pop
dec
or
sbb
jmp
addb
pop
adc
inc
cmp
jb
in
push
scas
in
movsl
idiv
aas
fst
sbb
dec
push
call
xchg
shl
adc
or
decl
in
adc
jno
jne
add
pop
std
jg
sbb
xorl
shlb
pop
sbb
push
out
loope
cmp
jo
add
mov
lea
inc
jmp
mov
orl
push
daa
xchg
inc
jb
and
pop
ds
loop
out
lcall
xchg
sbb
rclb
popf
fimull
inc
adc
inc
outsb
popf
dec
popf
pop
mov
das
cmp
jecxz
sbb
loop
jp
jg
xor
fs
mov
int
lea
or
xchg
sbb
rcll
mov
paddd
loopne
push
cmpsl
lods
mov
lcall
ljmp
imulb
add
adc
pop
inc
int3
inc
test
push
mov
jnp
popf
jmp
loopne
call
dec
cmpsl
push
push
daa
or
outsb
xchg
test
sub
shrb
jmp
jo
nop
ds
call
mov
mov
imul
jns
loop
and
repz
sbb
repnz
cld
jno
adc
adc
jle
rcl
xor
jle
pop
add
repz
jmp
dec
adc
cmp
jb
adc
clc
dec
jmp
addr16
out
sub
je
insb
dec
in
mov
les
adc
outsl
xor
cwtl
sbb
pop
outsb
cmp
ljmp
jg
cmpsl
mov
cmpsl
imul
loopne
xor
add
outsb
das
sub
jne
inc
pop
add
push
pop
pop
cmp
jg
rcrb
jae
outsl
inc
imul
or
in
add
add
mov
fucomip
add
push
push
jmp
addr16
fists
mov
adc
jo
out
pop
adc
mov
and
pop
add
mov
add
sbb
mov
adc
out
sahf
test
mov
mov
jp
or
and
inc
loope
or
pop
cltd
cmp
lret
sbb
hlt
dec
pop
adc
xchg
pop
rol
repnz
cmc
popa
notl
add
adc
xchg
push
lock
outsb
lea
mov
adc
xchg
and
fldl
dec
adc
lret
int
cs
xlat
inc
sub
icebp
aad
jnp
rcll
adc
in
es
scas
ljmp
imul
add
stos
or
fdivrp
sbb
or
inc
adc
inc
icebp
and
xor
cmp
cmp
cmp
and
inc
fldl
cmc
push
and
fmuls
xor
data16
pushl
adc
and
lahf
jecxz
imull
adc
sub
xor
frstor
outsl
push
inc
sbb
aas
cld
inc
insl
add
insl
gs
sub
and
sbb
inc
nopl
das
add
out
sbb
xor
and
inc
jg
add
arpl
call
inc
inc
aas
lret
inc
mov
sub
ljmp
movsb
call
lret
add
dec
movsb
addr16
adc
dec
mov
add
mov
daa
outsl
add
dec
std
das
incb
pop
inc
imul
sub
add
inc
aaa
mov
and
inc
and
bound
sbbb
jo
add
dec
test
loop
iret
leave
hlt
loopne
pusha
or
mov
dec
sub
push
inc
sbbl
add
test
jbe
ret
jle
xor
add
imul
sbbl
push
sub
sub
xor
clc
aas
adc
add
and
add
hlt
sbb
aas
or
dec
je
or
add
xor
or
incl
and
xchg
jge
ret
movsl
xor
ud0
incl
jo
pop
inc
jne
addb
cli
xor
pop
adc
lea
xchg
and
pop
mov
pop
cmp
pop
sbb
daa
test
call
add
inc
dec
inc
add
lcall
push
pushf
push
nop
xor
dec
adc
sbb
rol
ret
jb
inc
addb
dec
and
xor
mov
pop
andl
fistps
rorb
pushl
subb
add
test
lea
add
mov
cld
popf
ja
andb
outsl
or
movsl
lea
outsl
mov
or
push
insb
jecxz
jg,pn
mov
loope
dec
cmpsl
and
mov
dec
daa
inc
loope
mov
sub
ds
sbb
xor
popf
call
stos
inc
inc
arpl
lret
dec
or
loope
cld
or
stos
popa
out
insb
adc
mov
xchg
xchg
imul
push
icebp
inc
decl
insb
lea
adc
jno
and
jno
sbb
jg
mov
push
mov
rep
mov
dec
add
jge
lfs
and
or
xchg
sbb
jle
mov
test
bound
in
nop
dec
or
roll
pusha
pop
mov
jg
mov
mov
inc
mov
call
or
les
out
mov
lcall
test
inc
xchg
lods
and
ret
cmc
decb
incb
and
pop
adc
add
popa
xchg
xchg
stos
mov
incb
ljmp
cmp
jg
and
sarl
pusha
addr16
inc
dec
rol
sarb
shlb
outsl
clc
jg
cli
ret
bound
fwait
add
int
lret
ss
stos
mov
pushl
inc
or
testb
jnp
in
pop
out
cmc
stos
adc
idiv
fldl
mov
pop
add
and
adc
out
aas
mov
xlat
ljmp
and
ret
je
je
mov
loope
mov
sbb
subb
pop
fists
ja
lcall
arpl
push
std
incl
adc
jge
add
xchg
in
pop
jmp
sbb
jmp
call
dec
inc
jb
aam
or
push
shlb
cs
ljmp
lock
mov
sti
mov
mov
inc
sub
mov
mov
sbb
out
sub
lret
in
mov
aaa
push
js
icebp
or
inc
add
pop
jae
aam
clc
cmp
movsb
js
mov
mov
mov
sub
cwtl
and
mov
push
pushl
push
and
sbb
aaa
mov
jg
pushl
pop
insl
fwait
pop
adc
rorl
loope
or
mov
push
pushl
mov
sub
sbb
pushf
shll
rcl
mov
andl
incb
cmp
es
sub
loopne
cmp
sbbb
lcall
adc
jle
adc
test
and
fsubrp
call
mov
lods
sub
xchg
rorl
aas
pop
clc
pop
inc
xchg
add
inc
cmp
lcall
cmp
cmp
xchg
subl
std
cltd
dec
dec
inc
cmp
or
lea
shrb
mov
lcall
scas
push
mov
pop
xchg
fldt
jmp
xor
dec
in
outsl
insl
stos
pop
and
dec
pop
pop
pop
imul
push
inc
pop
std
shlb
dec
cltd
mov
icebp
inc
push
add
incl
pop
mov
sbb
add
popf
and
aad
shlb
cli
ljmp
pop
mov
clc
sarl
popa
xchg
add
andb
test
xchg
jns
mov
pop
decl
pop
ret
jae
cltd
bound
jnp
or
cmp
and
sar
cmp
inc
scas
lea
addr16
sbb
sub
ret
sub
fcmove
mov
dec
xchg
mov
xor
xor
add
cmpb
jno
outsl
mov
mov
add
add
dec
mov
loope
cmp
sub
sti
call
and
or
fsubrs
ds
fistpl
pop
cld
and
sub
fistps
jge
jmp
ret
fistl
cmp
mov
jne
or
jmp
jo
icebp
out
ret
lcall
mov
clc
jmp
jle
shlb
cli
addr16
ljmp
addl
mov
cs
push
adc
mov
or
mov
mov
or
fdiv
and
pop
dec
stos
sub
adc
test
popf
aas
add
fcomip
repz
lock
jb
add
cwtl
push
mov
idivl
popf
test
popf
and
xchg
ja
movsl
or
sub
sub
stos
lcall
cltd
fwait
shrb
ret
lods
shll
cli
xchg
or
lock
outsl
test
jmp
add
dec
sar
jg
cltd
or
arpl
fs
mov
and
shll
jae
pop
scas
aas
add
rolb
add
cltd
pop
in
nop
std
sbb
push
popf
rclb
pop
push
pop
mov
jecxz
jae
inc
dec
aad
outsb
aas
push
jbe
jb
and
ret
xor
aas
cld
decl
out
arpl
fiadds
orl
push
incl
sub
xor
andl
arpl
add
jb
mov
aas
clc
test
arpl
je
gs
lock
insb
add
pop
hlt
xchg
fidivl
mov
loopne
sti
popl
mov
jo
add
jge
cli
rcrl
sub
dec
addr16
and
push
mov
popa
lock
mov
inc
sbb
add
ret
out
fnsave
jge
jecxz
imul
adc
in
aam
lcall
clc
arpl
incl
dec
movsl
add
sbb
lcall
rolb
inc
jmp
add
add
mov
jae
inc
xchg
mov
rclb
mov
push
adc
rorl
push
xchg
add
lcall
outsb
dec
pop
stos
out
pcmpgtb
xor
xchg
aas
cli
or
push
add
ja
and
mov
je
imul
sti
jg
sub
adc
add
xchg
add
cmp
sti
jle
xchg
jg
add
cmp
jne
mov
test
loope
sub
insb
out
fisttpll
icebp
movsl
add
jne
movb
push
testl
push
test
add
xlat
add
decb
jle
popa
das
adc
sbb
pop
or
jecxz
ja
ud1
mov
aaa
adc
je
or
ret
pop
and
add
ror
jae
adc
xchg
adc
add
xchg
nop
push
pop
test
das
cltd
lods
add
dec
adc
cld
xchg
int
mov
and
lods
incb
outsl
sbb
pop
pushl
lock
sbb
pop
adc
ja
adc
add
push
ja
js
and
cmp
and
inc
pop
test
add
adc
mov
ret
sbb
lock
mov
add
sub
xorl
jne
ljmp
push
add
cmp
push
push
bound
outsb
add
outsb
pop
in
push
and
xor
mov
adc
sbb
adc
push
les
push
pop
dec
push
out
and
sub
cmp
sbb
daa
arpl
jecxz
adc
jnp
add
or
sbb
sar
cmp
and
dec
adc
dec
cmpb
sub
add
sub
inc
sub
adc
bts
adc
js
sbb
jp
dec
jo
ret
loope
lcall
push
ja
sub
dec
and
xchg
sbb
lds
jg
out
dec
daa
jne
movb
adc
and
xchg
inc
inc
xchg
xor
cmp
clc
and
mov
and
ja
mov
repnz
pop
adc
add
jg
loope
sbb
push
dec
test
in
adc
ret
gs
add
pop
sub
fstps
outsb
lds
xor
xchg
icebp
add
cmp
add
push
pop
cld
fists
cwtl
adc
add
inc
sub
pop
fxch
add
inc
lret
inc
incb
faddl
les
loope
adc
inc
out
xor
lcall
dec
jmp
xor
pop
insl
scas
jge
sub
cld
mov
sbb
xor
push
insb
sub
aas
movb
sub
jb
jmp
pop
int
imul
pusha
xchg
inc
popa
push
ljmp
adc
push
or
lcall
inc
int
inc
sbb
bound
sub
and
data16
jae
sbb
mov
subl
inc
popa
mov
sbb
xor
ret
movsb
add
jge
xor
decl
or
pop
sub
aaa
jnp
test
lock
scas
cwtl
loope
outsl
sbb
adc
pop
inc
clc
xchg
inc
nop
cmp
push
popf
pop
pop
fists
mov
pop
test
repnz
xor
push
mov
mov
call
xor
adcb
jae
adc
inc
mov
gs
xor
outsl
scas
popf
pop
clc
pop
push
pop
aad
popf
add
mov
or
or
adc
xrelease
adc
cmpl
adc
adc
jae
jns
sbb
lods
daa
adc
lods
aad
loopne
mov
jno
sbb
cmpsb
mov
lods
xchg
incl
jo
or
jns
stos
mov
inc
mov
clc
mov
adc
push
mov
jne
mov
rclb
repnz
nop
sbb
ja
test
xchg
dec
xor
pop
jl
cmp
dec
mov
xor
mov
xor
bound
cld
call
inc
jo
outsb
lea
test
xchg
incb
popa
mov
xchg
loop
loop
add
scas
inc
adc
jecxz
sub
popa
loopne
mov
ret
push
mov
add
lods
inc
mov
int3
xchg
lcall
mov
push
movsl
mov
pop
fsts
gs
incl
imul
inc
and
loope
jge
inc
aad
out
pop
movsl
movsl
popa
aas
jb
xlat
sub
clc
xlat
ror
mov
lock
xchg
add
testl
rol
incl
xor
mov
cmp
jl
sub
mov
push
loopne
add
loope
xor
jae
in
jo
test
push
sbb
leave
in
fldln2
test
std
adc
inc
loope
mov
lock
inc
jg
sti
push
stos
xor
inc
mov
not
dec
std
nop
adc
lret
std
add
fdivr
jg
xchg
rol
adc
inc
and
in
subl
std
push
xchg
std
std
inc
or
gs
faddl
popa
rorb
mov
arpl
sbb
and
mov
fsub
push
jbe
jo
orb
jne
loope
mov
mov
jne
fldenv
jbe
mov
ret
mov
sub
adc
mov
pop
pusha
push
andl
jne
dec
cld
jmp
cmp
pusha
jb
cmp
ljmp
fildll
insb
add
cmp
dec
icebp
js
mov
mov
imul
cmp
aas
incl
mov
mov
cmp
rcrl
pusha
and
lods
xrelease
cmp
popa
mov
insl
movsl
es
pop
ds
pop
mov
push
lock
adc
orb
mov
in
push
dec
jg
pop
jl
sub
sbb
add
test
clc
repz
mov
push
popa
add
loopne
sti
push
fnsave
out
sarl
dec
int3
and
mov
inc
jae
test
inc
jno
imul
or
jmp
imul
outsl
adc
pop
mov
cltd
lret
ret
dec
inc
ss
mov
and
pop
mov
outsl
pusha
jno
pop
xorb
ljmp
lret
movsl
shlb
lods
mov
add
incl
cmp
pop
or
jae
mov
pop
js
mov
push
mov
addb
xor
and
aaa
push
dec
rorb
jnp
into
jmp
mov
shrl
ret
insl
icebp
jo
inc
shl
test
rclb
or
adc
and
jge
and
or
sub
push
ret
or
std
mov
bound
pusha
add
jnp
aas
sbb
jmp
xchg
cltd
jmp
and
mov
jecxz
incl
jge,pn
inc
jl
push
xor
adc
and
lds
stc
orb
push
lea
mov
jne
cmp
pop
das
add
add
jmp
decl
pushf
push
mov
pop
insl
sbb
pop
cmpsb
dec
and
cwtl
jno
cld
mov
mov
pop
and
and
loopne
sbbb
jne
adc
cli
jg
push
bound
inc
push
popa
mov
testl
cmpsb
sub
push
inc
fdivl
je
mov
push
mov
incl
jne
sbb
mov
imul
xchg
push
pushl
ja
rcrl
ljmp
sarb
gs
add
add
shlb
mov
sbb
push
dec
loope
add
aaa
sub
adc
fsubr
cmp
push
inc
pushf
movsb
or
and
bound
notl
inc
or
dec
and
into
scas
imull
sbb
test
gs
std
sahf
push
ret
xor
jo
imul
jne
or
popf
add
mov
jae
mov
mov
decl
add
xor
jno
loopne
scas
je
aaa
and
jge
std
or
dec
call
mov
subl
movsb
clc
jns
ja
imul
jg
and
imul
dec
adc
sbb
jbe
push
add
sbb
add
cmpb
add
sub
add
mov
and
sub
jg
push
decb
jo
stos
add
jne
and
sub
pop
imul
dec
xor
add
ljmp
scas
mov
add
xchg
cld
decl
push
inc
int
sbb
and
jp
decl
adc
test
pusha
and
or
sbb
imul
adc
adc
adc
sub
inc
adc
jl
sub
xchg
icebp
call
dec
cmp
mov
fs
aas
clc
mov
pop
popa
gs
add
sbb
cmp
or
sbb
jne
fwait
sbb
out
and
mov
lahf
sbb
add
cmc
addl
cmp
adc
daa
add
add
dec
insb
filds
cmp
jae
sbb
cli
pop
cmp
push
sbb
jnp
jae
jb
adc
aas
xchg
xor
outsb
xor
jb
std
xor
movlps
jo
adc
or
adc
lret
and
pusha
cld
jnp
idivl
daa
insl
push
adc
sub
sbb
mov
decb
and
sbb
pop
pop
sub
add
es
lahf
pop
pop
pop
push
mov
jmp
addr16
push
and
push
push
adc
mov
add
add
dec
jge
mov
and
mov
and
inc
arpl
jo
mov
addr16
mov
loopne
sub
or
jmp
xchg
push
xor
ss
jmp
add
adcl
and
les
movsl
outsl
in
inc
jne
and
retw
and
sub
dec
lret
and
sub
xor
add
add
add
jno
xchg
inc
insb
pop
or
xor
out
xlat
push
jae
mov
add
dec
lret
adc
or
insl
hlt
xor
dec
add
xor
inc
xchg
dec
sbb
popa
mov
cld
fistpl
and
dec
xchg
cmp
idivb
or
and
cld
out
pop
adc
adc
xchg
mov
aas
mov
jno
xchg
outsl
cmp
sub
pop
sbb
jb
lar
add
or
mov
and
decb
xchg
mov
rorb
icebp
jnp
mov
cltd
cs
fs
clc
incl
clc
repz
jnp
sti
dec
and
inc
xchg
insb
and
cmp
add
pop
and
cmc
pop
xchg
aam
push
out
push
and
mov
mov
adc
jne
lods
ds
jno,pt
add
ljmp
dec
test
xchg
jle
jge
hlt
aas
cli
rolb
inc
clc
jno
fisubs
mov
cmp
ret
push
popf
or
pop
jmp
and
js
test
scas
xor
jg
jmp
lods
adcl
mov
into
add
cmp
int
xor
lock
xchg
xchg
mov
lcall
mov
inc
mov
dec
ljmp
sarb
and
test
into
xchg
jg
lock
fidivs
and
adc
fucom
sti
cmp
pop
pushl
push
rorb
pop
add
jbe
jo
mov
icebp
aad
je
or
sarl
and
cli
pop
cli
add
aad
xchg
cmpb
popf
sahf
outsb
insb
ret
fcmovnb
adc
int3
adc
mov
jb
icebp
push
adc
aas
clc
rcll
cmpsb
and
shl
add
add
loope
inc
and
sbb
in
inc
pop
std
sti
das
jmp
je
ljmp
mov
cld
mov
inc
adcl
xor
or
sti
sbb
cmp
cld
pop
in
out
fsubr
add
clc
fsubr
call
sti
std
pop
xchg
std
sbb
mov
xchg
cmp
ret
subb
repz
sub
vmulpd
pop
jne
call
jmp
cmpsb
or
test
std
in
std
rol
pop
jae
sarl
pop
mov
insb
sbb
and
push
andb
lcall
jns
or
jecxz
jne
cli
std
imul
lods
inc
es
jg
push
and
jmp
adc
lods
and
adc
mov
jae
nop
inc
fadds
cld
jno
and
lock
cmpsb
mov
jg
loope
aam
add
aad
arpl
lock
and
add
jmp
movsl
lea
call
std
outsb
stos
std
aaa
cmpsb
cmp
pop
out
aas
push
inc
test
movsb
sub
sub
sar
dec
and
adc
push
andb
hlt
mov
shll
cld
popa
pop
cmp
rcrb
jmp
sbb
inc
pusha
xchg
popa
sub
xchg
push
pop
add
addr16
std
sbb
call
dec
jno
add
add
jecxz
aaa
sub
repnz
inc
mov
cmp
and
inc
mov
popa
xlat
xor
dec
mov
loope
rolb
dec
inc
dec
push
and
dec
idivb
dec
ss
sbb
add
out
jmp
pop
movsb
pop
mov
faddl
cli
push
sbb
add
imul
pushf
add
insl
test
pop
and
aas
insl
adc
nop
inc
cmp
lahf
xchg
inc
jg
sahf
mov
mov
mov
std
mov
rcr
loop
insl
loop
add
cmp
outsl
push
out
sub
jle
push
or
sahf
jge
pop
aam
mov
daa
mov
pushl
orb
xor
and
cmpl
mov
xchg
jne
sbb
test
lcall
loop
mov
sub
sbb
mov
add
and
cld
pushl
add
lea
xchg
sub
push
cld
jmp
clc
dec
mov
jle
cwtl
mov
fdivrs
mov
and
mov
inc
push
jg
cltd
add
loopne
and
or
shr
inc
jo
filds
sbb
decl
push
lea
loope
cmp
popf
jle
sub
pushl
sti
dec
mov
lods
js
mov
incl
mov
les
rol
dec
scas
subl
pop
dec
mov
enter
push
add
incl
ret
add
jle
std
fdivs
cli
out
cmpsl
imul
fildl
pop
pop
sbb
pushf
xchg
mov
adc
xchg
mov
movq
and
cltd
and
mov
inc
adc
subb
sbb
icebp
adcb
jg
and
or
lcall
sbb
mov
sbb
into
adcl
cmpsb
xchg
inc
pop
push
jecxz
cld
mov
xchg
xchg
mov
push
and
add
jo
pop
ret
adc
jno
push
loop
sar
decl
int
clc
add
leave
and
sub
ds
mov
add
fnsave
pop
push
adc
pop
and
sahf
shll
adc
pop
mov
adc
lret
pushl
pop
inc
aaa
xchg
aas
pushf
and
add
mov
lea
pop
jg
adc
mov
dec
sti
js
or
fst
xorl
xchg
or
std
pop
cli
mov
inc
mov
sub
adcl
lcall
ret
and
and
pop
lods
sub
dec
in
cmc
ljmp
sbb
xchg
and
adc
lock
test
lods
mov
or
pushl
inc
rorl
adc
sarb
and
stc
sbb
decl
lahf
leave
xorl
jge
lea
cwtl
gs
lcall
inc
pusha
jae
ret
in
repz
and
pop
mov
adc
fst
roll
xchg
addr16
dec
outsb
inc
scas
adc
sub
pop
mov
test
loop
sbbl
push
mov
xor
sbb
push
mov
add
jne
add
movsl
sub
mov
stc
add
add
jle
inc
xor
add
add
or
ds
and
cmp
add
inc
sbb
mov
add
xor
inc
cli
pop
xlat
sbb
out
std
outsl
loopne
movsl
dec
fwait
out
xor
add
mov
cmpsl
dec
dec
inc
jns
cmp
call
dec
rcrl
dec
add
xorl
das
movsb
add
cmp
add
push
xor
inc
inc
xchg
addr16
add
add
addr16
jg
push
sub
cmp
push
scas
add
jp
add
cmp
push
pop
and
sbb
aaa
pop
loopne
out
lcall
lods
add
add
and
test
add
iret
loopne
or
out
add
filds
ss
aas
xchg
adc
dec
xor
jg
jmp
xchg
mov
adc
ja
mov
xor
xor
jnp
push
inc
add
cmc
add
sbb
cmp
add
mov
push
or
sbb
in
adc
add
or
clc
jg
cmp
xchg
sbb
mov
inc
cmp
push
repnz
insl
fiaddl
cmp
aas
out
xor
iret
iret
add
incl
add
adc
stos
and
sub
popa
or
mov
enter
inc
push
xchg
adc
nop
jp
mov
test
pop
inc
add
or
adc
and
jl
inc
add
sub
jmp
cmp
sbb
and
sub
out
add
adc
movsl
aas
jmp
loopne
or
sbb
daa
inc
jge
fs
cmp
adc
test
adc
sub
loopne
je
add
clc
push
add
clc
cmpsb
jno
push
pop
ret
sub
jg
fwait
cmp
cmp
and
shrb
jg
xchg
jne
fwait
mov
jae
adc
cmp
sub
xor
cmp
je
lret
push
inc
add
cmp
sbb
add
insl
mov
add
clc
ljmp
adc
adc
mov
dec
ret
pop
hlt
or
cld
xor
xor
daa
or
aaa
adc
loopne
push
pop
pop
adc
pop
daa
loop
les
icebp
pop
sub
add
and
cmp
xor
push
adc
leave
icebp
inc
xor
add
ss
sbb
aaa
jmp
popa
add
cli
jnp
fcompl
fwait
ss
xchg
xchg
sarb
pop
adc
clc
push
push
je
and
cmp
sub
std
dec
test
and
sub
mov
test
push
inc
adc
mov
cmpsl
dec
dec
and
mov
cltd
bound
push
test
cli
call
aaa
lds
jl
cwtl
and
into
pop
sarb
add
cld
jmp
push
je
sub
push
jns
dec
mov
pusha
mov
loope
or
push
or
ret
incl
rorb
add
inc
adc
inc
lock
push
or
or
jp
inc
lret
orl
ret
xchg
dec
xchg
xor
jg
adc
add
adc
pop
incl
cmp
cmp
pop
movsb
pop
test
cmc
ss
call
and
lea
push
xor
adc
add
lret
add
or
pushl
es
cs
ds
mov
gs
push
sbb
and
xchg
dec
mov
das
decl
mov
xor
mov
sbb
subl
test
inc
mov
fbld
mov
xor
xor
leave
adc
sbb
popf
sarb
pop
dec
stos
outsl
lods
ljmp
daa
push
rcll
push
fwait
and
sub
mov
mov
lods
mov
pop
mov
rcrb
xor
adc
add
cli
pop
ja
sub
ffreep
aas
pop
clc
and
nop
xchg
lret
inc
movl
dec
movl
test
ffree
orl
pop
call
xor
bound
call
popa
push
adc
adc
nop
mov
adc
push
inc
mov
jae
pop
lods
push
cmp
jo
mov
adc
pop
addr16
sbb
add
ds
aas
subl
movl
mov
or
lds
ja
out
sub
cmp
fdivrl
inc
loope
cmp
incl
sbbl
bound
movsb
xorl
mov
std
pusha
lock
or
gs
mov
mov
daa
cld
fstps
lock
cmp
andl
imul
adc
mov
sbb
add
xchg
cs
sbb
lock
jmp
add
sti
and
inc
std
in
xchg
dec
outsl
cld
lds
mov
andl
mov
xchg
sbb
xor
xorb
inc
frstor
pusha
popa
roll
lds
std
inc
outsl
sbb
xor
jecxz
std
jle
mov
mov
xchg
test
or
jg
and
mov
jecxz
sahf
mov
mov
or
or
aad
cld
cmp
lods
mov
sbb
addr16
incl
and
fwait
and
lcall
cmp
sbb
xor
sbb
sbb
fnstcw
icebp
cmp
xchg
mov
sbb
andb
xor
lcall
in
sub
sub
movsl
xor
add
popf
adc
cmp
mov
push
push
inc
gs
roll
and
jmp
decl
cmp
ret
push
hlt
xor
cmp
loope
outsl
and
mov
sbb
stc
add
clc
cli
lea
fdivrl
sbb
incl
ljmp
ljmp
dec
test
iret
inc
push
push
roll
popa
sub
pusha
xor
loope
add
jmp
jns
pop
insb
aam
aaa
mov
push
xchg
or
lret
dec
mov
insl
ret
loop
incl
sbb
orl
mov
cs
stos
mov
inc
ljmp
ret
mov
and
rorl
fwait
pop
stc
jbe
xor
inc
cmc
push
out
aad
dec
push
inc
sahf
sti
push
jns
insl
adc
out
or
insl
lcall
loop
pop
insl
push
mov
xchg
xchg
cmp
jmp
or
push
dec
add
and
nop
inc
lcall
es
lcall
mov
mov
int3
cmpl
mov
and
mov
jg
decl
subb
or
leave
sbbb
xor
or
addb
mov
ss
das
xchg
mov
mov
fldt
xor
inc
dec
inc
pop
int
mov
aad
in
dec
add
jg
or
xor
inc
mov
test
out
ljmp
addb
mov
testb
xchg
add
push
rorb
adc
dec
inc
xor
adc
fldl
or
andb
xchg
loope
mov
jl
repnz
test
test
dec
cmp
aas
clc
loopne
add
mov
push
dec
sbb
sbb
adc
jnp
ja
mov
dec
or
decl
push
ret
pop
xchg
or
shll
in
push
cld
jmp
xchg
cli
xchg
int3
push
sub
sahf
neg
push
pop
icebp
push
jg
pushl
dec
push
push
mov
pop
xor
adc
xchg
cmp
xor
loopne
icebp
jmp
inc
sub
gs
loopne
roll
and
jne
xor
xlat
fnstcw
ljmpw
cmp
push
cmp
mov
and
sub
out
or
aaa
mov
stos
pop
data16
mov
pop
fwait
std
aas
jbe
jno
xchg
and
lods
jae
add
jb
and
lcall
loopne
int
jnp
sub
lock
loopne
mov
xlat
lcall
xchg
dec
xchg
inc
inc
xchg
adc
scas
popf
lock
lret
sar
jecxz
adc
fisttpl
clc
loope
or
mov
push
pop
sbb
xchg
push
les
dec
sbb
sti
shll
pop
jmp
je
xorb
xor
stos
mov
add
and
popa
add
add
cwtl
imul
or
pop
add
and
jno
das
cmpsl
std
xor
sub
jmp
test
add
insl
arpl
std
or
add
lret
ljmp
inc
xchg
mov
out
movsl
lcall
insl
mov
jne
jb
add
adc
mov
cli
push
sbb
xor
in
add
jmp
rcrb
das
test
fildl
push
pop
fs
add
inc
shlb
adc
push
sbb
cmpsl
jmp
push
cld
daa
cld
mov
call
inc
dec
jo
lea
jg
add
in
dec
pop
adc
inc
popf
ficompl
push
jbe
push
adc
mov
lcall
add
add
daa
repnz
push
loop
sub
pop
pushl
sbb
pop
adc
mov
mov
data16
adc
shll
push
out
xchg
and
dec
sub
jb
gs
push
jno
outsb
aaa
and
adc
std
inc
sbb
pop
imul
aas
add
fldcw
sub
add
sbb
pop
mov
pop
and
mov
sub
mov
jne
and
or
jmp
push
jae
mov
add
cmp
rcll
pop
pop
popa
add
jg
dec
les
sbb
adc
decb
aad
stc
add
in
inc
test
ja
and
push
add
js
jae
and
cmpb
fcoms
lds
adcl
in
add
inc
aas
ja
pushf
sbb
cmp
mov
adc
loopne
xor
dec
cld
js
dec
cli
dec
das
xchg
xor
pop
xor
decl
add
push
sub
dec
and
inc
negb
mov
push
add
add
dec
pop
xor
pop
icebp
sti
adc
adc
mov
cmpsb
and
in
inc
push
hlt
popa
jle
xor
dec
lahf
and
add
cmp
xor
ss
push
clc
jb
dec
fcmovb
fisttps
test
sub
pop
or
lods
repz
push
pop
add
or
push
cmpsl
adc
addr16
xor
ffreep
ret
jb
mov
cltd
jge
push
das
push
xor
xlat
xor
add
call
add
xor
and
add
lret
push
xor
sbb
pop
push
cli
outsl
cmp
jge
and
add
dec
pop
or
mov
bound
lahf
dec
les
pop
hlt
and
js
and
jge
js
inc
dec
cmp
jnp
call
pusha
inc
sub
pusha
xchg
and
mov
sbb
pop
out
nop
daa
ljmp
testb
xor
mov
cld
add
adc
addr16
cmp
fs
jg
mov
bound
add
jne
adcl
mov
adc
jnp
loopne
xchg
and
clc
xchg
xchg
add
jge
push
inc
iret
jbe
or
xor
sbb
fidivl
sub
push
fs
pop
fistps
jno
inc
add
and
and
jbe
sub
test
and
push
pop
popa
push
pop
daa
mov
sti
mov
cmp
ficompl
aas
add
mov
sarb
cmp
dec
cmp
mov
hlt
inc
inc
push
imul
add
mov
mov
cli
adc
and
inc
or
or
or
mov
mov
add
aas
clc
das
sti
dec
pop
lcall
ja
and
xor
data16
mov
inc
mov
cltd
idivb
push
pop
sub
add
inc
cli
and
jmp
shlb
outsl
rep
and
dec
out
mov
ja
jle
push
loopne
rcr
ret
addr16
inc
mov
jno
jl
lock
cli
incl
pop
adc
popf
mov
add
push
jne
ds
int
int
pop
jl
xor
daa
or
pop
adc
lret
xchg
clc
jmp
shll
sub
mov
mov
call
imul
fnstenv
mov
ret
sbb
sbb
jg
mov
iret
rcrb
addr16
mov
andl
jg
jle
sbb
pop
jecxz
adc
push
inc
push
mov
adc
push
pop
call
dec
fildll
test
mov
in
sbb
jb
lds
sti
inc
adc
or
stos
jne
push
pop
inc
cli
aas
std
push
popf
and
in
popa
push
mov
mov
or
clc
jno
div
xchg
push
cmc
and
popa
jmp
lahf
mov
roll
stos
fnstsw
jmp
add
pop
mov
adc
lcall
pop
pop
loopne
lock
adc
cltd
inc
fdivr
inc
aaa
cld
pop
push
pop
xorb
dec
int
and
pop
rorl
repnz
add
imul
addb
orb
sbb
insb
repz
fs
sub
pop
xor
pop
or
add
jg
movsb
or
divb
pushf
arpl
imul
xchg
cli
xchg
and
in
adc
and
sbb
mov
decl
jo
cmpsb
and
or
sbb
lcall
sbb
add
xchg
sub
mov
pushl
sub
sub
jecxz
das
mov
stos
jb
push
dec
aad
stos
mov
push
mov
test
sbb
xchg
lcall
es
out
pushl
and
shlb
xor
jb
shr
call
icebp
lcall
insl
std
xchg
outsb
inc
jno
dec
loope
xlat
push
insl
cmc
in
sarl
push
insl
test
sub
push
push
dec
push
mov
inc
inc
rclb
lcall
mov
push
mov
sub
mov
inc
incl
call
inc
lock
push
push
shl
dec
loopne
sbb
jo
add
jg
enter
pusha
cmpl
movsl
dec
mov
push
fcmovnb
subl
pop
sarb
in
mov
cli
xchg
sbbl
mov
mov
or
jnp
sub
xchg
aas
push
or
fs
add
std
sub
cmp
icebp
mov
enter
sbb
xchg
div
mul
sbb
sbb
inc
data16
or
subl
mov
notl
incl
or
mov
lock
in
out
call
stos
or
mov
addl
jge
jl
cmc
mov
out
xchg
mov
xchg
or
inc
xor
jmp
add
mov
and
jecxz
frstor
xor
mov
and
jge
test
out
jg
jg
insb
jge
push
pop
lds
icebp
insl
insl
testb
push
jbe
shrl
add
and
mov
inc
inc
lea
and
loopne
lea
lods
aaa
push
mov
fildl
outsb
inc
out
add
mov
fdivp
mov
jb
or
push
dec
xor
mov
fidivl
mov
loopne
mov
jmp
add
xor
add
sbb
or
mov
cld
and
add
sarb
xchg
incl
aas
mov
mov
ret
xchg
mov
pop
dec
jecxz
xchg
mov
rclb
aam
jg
mov
sar
loope
or
sub
rcll
push
and
aam
sahf
inc
ds
lret
xor
roll
mov
test
test
inc
xor
in
cmp
ja
pop
ret
inc
mov
dec
inc
pop
dec
push
jle
mov
push
adc
cmp
pusha
mov
lock
ss
enter
xchg
lds
push
mov
add
adc
and
outsb
int
pop
cmp
mov
lods
lret
mov
jns
popa
insl
lret
push
aam
enter
mov
add
push
xor
fwait
push
push
adc
loopne
and
jo
add
mov
mov
ja
pop
ffree
sar
cmp
sbb
sar
shrl
xchg
dec
addl
jbe
jne
add
cmp
and
test
pop
rorb
pop
add
lahf
mov
test
out
ss
jno
sub
and
inc
xchg
push
push
or
sbb
dec
call
scas
jns
adc
movsl
xchg
mov
add
or
add
pop
stos
decl
add
pop
ds
cmpsl
mov
mov
jge
sbb
sti
xor
decl
clc
adc
mull
pushaw
mov
jg
ss
push
mov
sbb
mov
pushl
insb
xchg
sbb
push
std
not
ss
xchg
decl
xchg
je
scas
loopne
or
adc
loop
mov
aas
cmpsb
cmp
or
jle,pn
sbb
ljmp
add
loope
dec
jecxz
repnz
loope
loop
push
lea
jecxz
mov
stos
inc
and
add
inc
cmp
cmpsl
fadd
cld
ret
sbb
jg
xchg
outsb
out
pop
sub
pop
add
push
out
add
push
repnz
xchg
mov
aaa
mov
inc
rolb
aad
and
or
stos
sub
testl
jno
insb
pop
pop
cmpsb
sub
daa
stc
adc
subl
inc
mov
and
lea
pop
xorl
pop
out
pop
sbb
and
stos
mov
and
pshufw
cmp
sub
das
icebp
addr16
sub
or
icebp
mov
sbb
out
and
and
or
xchg
and
les
maxps
sahf
inc
adc
ret
ljmp
xchg
jge
imul
cwtl
and
push
cmp
lahf
adcl
gs
cmp
iret
addr16
push
xor
fcomip
repz
push
pop
jb
inc
pop
in
inc
cmpb
clc
ds
cmc
push
push
pop
dec
les
jecxz
xchg
je
xchg
imul
popf
or
jecxz
clc
sbb
sbb
jge
mov
xor
inc
cmpsb
pop
or
mov
push
and
pop
or
adc
and
xchg
lcall
push
pop
push
push
ljmp
xor
and
and
pop
push
mov
or
jecxz
decl
adc
and
jg
aad
cli
pop
lret
jp
adc
jp
adc
push
lods
and
jae
adc
and
dec
incl
jmpw
rorl
mov
sub
add
adc
jg
push
xor
push
in
dec
lods
sub
sub
pop
push
inc
push
decb
addr16
mov
pop
fstpl
orl
shll
fists
mov
test
pop
jle
gs
xor
mov
out
and
inc
pop
mov
and
insl
dec
inc
pop
icebp
lcall
push
aas
cmpsb
ss
xor
lea
insl
dec
popa
and
xchg
cli
dec
arpl
sub
je
pushf
adc
push
sahf
frstor
mov
outsl
or
bound
loopne
push
divl
insb
pop
jmp
pusha
mov
jmp
jge
xlat
addr16
xchg
and
ja
out
inc
fsubl
in
icebp
pop
or
mov
or
xchg
or
das
popa
insl
arpl
xchg
or
cmp
jp
pop
jge
test
jo
aas
scas
pop
movsb
or
xor
mov
inc
mov
mov
and
and
mov
rclb
push
dec
pop
popa
mov
or
les
sub
mov
inc
test
xor
lock
dec
pusha
lock
cld
inc
xor
orl
lahf
js
push
scas
mov
icebp
lahf
sti
or
jg
idiv
pop
fcoml
xchg
sbb
fs
sbb
lea
pop
sti
pop
mov
ror
test
jns
inc
fistpll
outsl
ficoml
cmpb
mov
sbb
adc
out
jnp
jg
jns
jns
sub
pop
pop
or
int3
push
hlt
push
popa
movsl
push
cmp
pop
gs
push
rolb
clc
mov
inc
push
sub
push
or
loope
dec
fsubl
arpl
lea
ret
push
dec
inc
lods
insb
incl
lods
arpl
push
popa
cmp
pusha
subb
test
pop
cld
add
xchg
lods
movsb
mov
push
das
es
xchg
add
pop
lods
in
mov
hlt
call
stos
lods
xchg
stos
push
and
add
xor
pop
pop
mov
cmp
and
nop
lea
call
mov
shll
mov
jmp
push
sub
adc
mov
xlat
xchg
add
bound
ret
jmp
testl
jg
pop
clc
jno
lock
sbb
aaa
sub
int
jp
rcr
lcall
mov
imul
movsb
pop
inc
clc
call
pusha
inc
add
xor
xor
push
xor
pop
leave
jo
ljmp
mov
xchg
pop
jmp
adc
decl
clc
popf
pop
or
cmp
pop
addr16
sub
lock
movsl
xchg
xchg
imul
subb
frstor
fidivrl
push
lods
pusha
lods
jo
in
shrl
fisubrl
pop
or
aam
cli
jne
jge
inc
jp
cld
pop
cld
jp
call
lret
testl
mov
jb
pop
pop
jno
ss
rcrb
sub
clc
ljmp
out
cwtl
loope
or
jnp
dec
outsb
fwait
adc
loopne
jg
nop
dec
xchg
and
xchg
jne
lret
loopne
jge
cli
mov
inc
jnp
out
nop
ret
jg
and
sbb
in
loopne
xchg
jmp
sbb
adc
xchg
test
pop
es
or
jg
int
and
das
aas
xchg
sar
adc
mov
int
xor
jmp
add
mov
dec
outsl
imul
stc
and
jmp
pushl
and
outsb
inc
jbe
dec
pop
and
pusha
ret
into
push
aas
sub
xor
mov
scas
orb
xor
jg
mov
mov
jge
addl
jno
lret
or
pop
fsqrt
rcrl
sti
incl
add
repz
dec
repz
or
adc
fnstsw
lret
clc
andnps
in
repz
pop
push
nop
loopne
jb
mov
mov
aad
push
xor
bound
mov
xor
stos
out
cmp
aas
xchg
gs
dec
inc
push
inc
call
cmp
in
dec
jnp
aaa
adcb
das
push
push
pop
jmp
add
jl
dec
cs
or
arpl
pop
sub
mov
xchg
rol
push
addl
insl
outsb
sbb
add
dec
mov
add
add
cmc
fs
dec
mov
lock
add
and
add
adc
mov
inc
ljmp
je
add
lods
mov
cmp
pop
cwtl
add
loopne
outsl
mov
dec
lahf
pop
add
and
imul
jae
inc
or
and
cmc
mov
add
lcall
and
sbb
cmpsb
add
adc
iret
movsb
pop
std
pop
popa
and
push
push
or
add
gs
mov
or
aaa
add
ljmp
and
inc
and
je
es
xchg
adc
pop
push
push
incl
adc
lea
stc
inc
sar
or
sbb
fwait
dec
cmpsb
sbb
arpl
inc
sub
pop
jge
scas
adc
mov
lahf
dec
xor
and
and
sbb
add
dec
sub
sbb
xor
and
adc
jns
das
out
sti
cmp
adc
dec
sbb
and
inc
jbe
aas
lock
fs
cmp
pop
adc
mov
pop
cmp
add
push
adc
add
add
and
fucomip
mov
and
or
push
inc
jae
pusha
or
sub
xchg
adc
sub
add
imul
lds
popa
fdivrl
out
add
add
stos
sub
xchg
cmp
mov
jl
xchg
aam
dec
in
sub
dec
jmp
jle
jg
push
gs
pop
clc
orb
loopne
adc
push
xorb
icebp
pop
les
and
inc
sbb
pop
clc
sti
aas
mov
mov
dec
mov
mov
add
lcall
fists
hlt
fwait
pop
pop
or
ss
arpl
call
cmp
push
shll
add
ret
jmp
cmc
lock
imul
push
mov
jecxz
jp
adc
cmp
add
das
adc
pushl
push
push
xor
xor
push
and
mov
lcall
inc
clc
pop
add
add
push
jae
jo
pop
loop
dec
jle
inc
and
sub
lea
jcxz
push
jbe
push
pop
std
test
ljmp
mov
add
dec
pop
sbb
call
xor
arpl
movsl
fiadds
std
mov
dec
cmp
jge
mov
push
or
or
decl
pop
stos
adc
pop
daa
pushf
bound
jns
pop
push
cld
pop
mov
jecxz
push
adc
in
ja
mov
push
add
xchg
aad
imul
mov
loop
sbbb
mov
mov
jp
imul
scas
lock
loop
push
cmpsb
cmc
jne
xchg
or
rclb
jmp
and
mov
or
or
and
pusha
or
add
insb
jg
clc
loope
nop
jno
icebp
add
add
addr16
and
js
pop
push
dec
push
out
das
ss
jge
sbb
jno
xchg
xchg
push
add
cli
inc
incl
sbb
lods
inc
jb
fistpl
andb
lock
lcall
cltd
lods
popl
mov
push
or
mov
and
popf
ds
sbbb
lods
add
or
ljmp
lods
push
mov
jge
mov
cmpsb
and
ret
aas
pop
pop
mov
and
xchg
inc
mov
push
mov
xchg
movsb
mov
pushl
mov
sbb
push
outsl
addl
lcall
pop
in
adc
and
add
add
jle
jg
and
mov
or
lods
mov
lds
leave
sbb
pop
xchg
int
fs
xchg
std
jno
aas
cli
push
xchg
sub
popa
insb
mov
sbb
ljmp
inc
lds
mov
je
imul
xchg
test
mov
inc
int
jg
clc
jmp
xor
orb
and
in
push
outsl
std
call
inc
jb
xchg
push
js
push
mov
mov
jmp
mov
jge
movsb
orb
insl
bound
stos
mov
clc
mov
std
andb
aas
pop
mov
shr
mov
stc
in
jg
jg
fisubs
movl
std
addb
inc
std
add
pop
out
pushl
xor
movsl
sahf
rcrl
add
stos
std
mov
or
push
clc
jmp
mov
mov
cmpsl
lods
and
sbb
lcall
loopne
inc
or
cmc
xchg
cmc
popa
sarl
or
ljmp
or
mov
lds
gs
icebp
arpl
hlt
call
popf
mov
inc
cmp
cmp
jbe
mov
les
outsb
jmp
or
and
push
std
sub
push
ja
orl
incl
fstpl
in
aas
scas
jg
lcall
push
mov
push
sbb
outsb
or
push
stos
pop
ljmp
loopne
loop
cmpsb
add
sub
decl
pushl
in
and
pusha
mov
adc
mov
das
scas
xor
negl
fistpll
push
mov
je
ret
xchg
popa
mov
testl
inc
in
push
in
push
shll
add
jmp
dec
lock
adc
jmp
sbb
sub
dec
fucomi
or
in
out
jg
sti
in
or
sub
dec
sub
and
xor
cmc
mov
xlat
jmp
insb
fldl
nop
popa
bound
shrb
mov
loopne
inc
xchg
mov
dec
shll
mulb
add
scas
xchg
rcl
shlb
ret
mov
jg
cmc
fnstenv
iret
mov
dec
ja
mov
sub
inc
xchg
mov
in
push
addb
ja
aam
or
mov
icebp
jns
dec
roll
rorl
pop
jb
xchg
lds
mov
mov
subl
xorl
mov
pop
aaa
and
push
icebp
test
scas
mov
mov
incl
and
jp
cmp
push
jne
xorl
andl
aas
add
xchg
sub
sub
inc
add
in
jg
inc
test
icebp
hlt
popa
jle
dec
rcrb
shlb
xchg
lock
and
addb
jnp
adc
out
inc
adc
inc
shll
xchg
scas
xorb
jnp
sub
sub
imul
push
aad
ret
into
roll
mov
dec
mov
adc
jg
mov
and
dec
fadds
cli
lcall
iret
cmp
aam
dec
inc
or
aam
insb
test
mov
sbb
dec
pop
sub
loope
xchg
data16
lcall
iret
ja
loope
sar
and
rcrl
pop
jge
pop
pop
adc
mov
add
jge
dec
pop
push
add
cwtl
push
outsl
mov
or
add
sbb
jo
dec
pop
mov
int
xchg
out
mov
nop
dec
and
push
xor
cmpl
adc
jb
outsb
and
and
jg
push
xor
or
xchg
or
cmc
icebp
dec
add
mov
arpl
mov
clc
and
add
mov
cs
xor
push
loopne
add
lret
push
es
adc
outsb
dec
loopne
pop
add
mov
or
xchg
dec
call
push
cwtl
xchg
int3
sub
mov
and
xchg
or
pop
xor
pop
push
push
pop
xor
pop
dec
add
loopne
and
aam
jo
cmp
dec
inc
cs
subb
arpl
inc
roll
dec
xor
test
aad
cmp
add
or
loopne
call
insb
jns
jg
aaa
adc
add
or
ds
mov
incl
sub
imull
add
and
add
in
sets
incl
add
mov
iret
rcl
in
mov
dec
dec
int
pop
pop
cli
xchg
mov
pop
filds
cli
call
in
divb
or
add
faddl
adc
out
adc
lock
pop
jg
int
negb
stc
push
xor
cmp
out
lock
pusha
pop
fstl
decl
pop
outsl
mov
cmp
sub
dec
dec
nop
jmp
shll
sti
neg
add
add
push
loope
cmp
std
add
jg
lods
cmpb
and
add
adc
or
and
cli
std
out
dec
xorb
push
push
add
and
decl
jmp
ret
fimuls
cmp
sbb
push
push
mov
jbe
or
pop
jg
incl
push
push
jge
pop
push
jnp
xchg
je
or
push
aam
jmp
loopne
pop
or
out
stc
mov
int
push
mov
and
js
mov
xchg
mov
loopne
cmp
lea
out
add
jnp
jo
pop
push
add
dec
mov
jle
mov
dec
std
mov
incl
push
mov
push
push
mov
arpl
out
incl
adc
push
sbb
sti
ret
mov
in
pop
xor
shlb
mov
ficoms
push
mov
xor
negl
lcall
pop
sbb
mov
in
cmp
lea
sub
fcmovnu
gs
fsubl
push
sti
je
dec
divb
adc
mov
pop
xchg
sbb
xchg
add
jmp
xor
pop
push
mov
jmp
ret
nop
int
cmovs
call
push
cltd
data16
jg
pop
gs
cld
mov
jg
lea
call
push
and
arpl
ltr
fwait
inc
add
rep
std
dec
lcall
sub
mov
mov
decl
std
inc
shl
or
dec
push
cld
cmc
lcall
sti
out
fidivl
adc
mov
sbbl
loope
pop
add
adc
mov
dec
cmpb
add
mov
pop
pop
sub
pop
sar
xor
std
jmp
xchg
and
mov
push
add
mov
jns
loope
lret
out
pushl
ret
mov
xor
fldenv
decl
push
ror
rcl
jmp
btc
cmc
aas
xchg
xchg
inc
push
mov
decl
lods
sahf
mov
mov
push
jnp
aam
sbb
and
cmp
jge
ljmp
jne
and
arpl
add
lods
adc
cld
jmp
or
test
cs
in
nop
cmp
jae
push
in
ljmp
sbb
cmp
test
in
incl
loope
mov
movsb
fdiv
arpl
jle
cmp
incl
dec
sti
aaa
neg
dec
outsl
mov
shll
test
pop
jmp
sub
mov
int
adc
cmp
adc
or
incl
dec
xchg
imul
pop
add
jno
mov
aam
popf
fstp
mov
orb
adc
stc
into
jbe
leave
xor
xor
call
incl
cld
xor
imul
inc
xchg
cmp
inc
sbb
jmp
fnstcw
and
add
je
cmp
cmc
jns
adc
add
insl
jbe
fwait
xchg
rcll
insl
and
mov
xor
dec
push
shrl
sbb
rcrb
lea
pop
out
repnz
jmp
pop
popa
dec
mov
push
lock
mov
dec
and
stos
std
pushl
enter
incl
shlb
and
ret
jmp
fisttps
fcomps
dec
push
incl
push
inc
xchg
xor
bswap
lds
iret
inc
loop
mov
js
sahf
ret
pop
clc
push
ljmp
jne
data16
pop
pop
fnstenv
or
add
ljmp
ja
add
and
fsubrl
dec
adc
call
push
addr16
shlb
sbb
scas
jne
mov
lock
icebp
ljmp
mov
inc
pop
mov
inc
jmp
aam
add
push
push
add
scas
mov
xchg
iret
push
lea
into
add
push
push
push
or
test
decl
or
add
outsl
jp
out
adc
bound
xlat
mov
fldt
out
loop
cli
call
ja
rcr
outsl
jle
add
jmp
shll
out
dec
incl
sbb
and
xchg
xor
das
xor
iret
sar
or
lock
test
decl
bnd
dec
or
xchg
js
js
stc
add
test
jmp
sub
iret
jmp
push
xchg
jne
mov
jg
push
dec
ret
mov
rorl
ret
xlat
pop
jne
shr
incl
inc
movzbl
pushf
je
sahf
dec
jne
cmp
jb
pop
nop
pusha
xchg
mov
or
dec
sub
addl
mov
mov
aam
js
mov
rcl
scas
mov
lcall
and
scas
enter
repnz
scas
shlb
or
cs
out
jg
or
out
xchg
and
popf
aaa
jg
jg
pop
add
dec
cmpsl
test
or
pop
and
xchg
mov
pop
lret
and
lcall
dec
call
aaa
fadd
push
js
xor
hlt
call
out
testb
and
or
mov
pop
outsb
stc
xchg
out
or
out
mov
pop
dec
mov
fstps
pop
out
jmp
jp
das
imul
lock
cmp
mov
sbb
das
lcall
sub
and
pop
jmp
fmulp
dec
mov
mov
shll
dec
jbe
call
fwait
daa
push
fdivs
leave
and
adc
fsubs
decl
inc
inc
mov
ret
mov
repnz
mov
or
rorl
test
mov
ljmp
cli
jmp
fistpll
add
cmp
lcall
std
add
adc
movaps
adc
jle
js
jmp
pop
adc
outsb
outsb
lock
decl
mov
das
add
int
mov
inc
sub
pusha
rcll
xchg
iret
lahf
adc
mov
sti
incb
or
mov
pop
push
xor
dec
sub
orw
insb
pop
fstp
jmp
or
decl
add
insl
cwtl
int
xor
sub
testb
cmp
scas
scas
lcall
aas
sbb
add
popf
and
cmp
add
sbb
dec
dec
dec
mov
sub
pushl
cld
or
int3
insb
fldl
and
or
jno
pop
xor
loop
sbb
jmp
call
inc
mov
xchg
dec
iret
faddl
and
lds
fstpt
sub
imul
jmp
pushl
mov
mov
xchg
outsb
sub
or
pushf
mov
cli
inc
jnp
cli
jmp
push
sub
movsl
jnp
cmpsl
rcrl
iret
jge
out
push
lea
jg
cltd
sbb
xchg
insb
or
xor
pop
pop
cwtl
adc
jb
mov
insl
sub
and
inc
add
add
addr16
jmp
fisubrs
add
mov
gs
lods
mov
pop
push
fcoms
add
push
decl
mov
mov
mov
test
and
fwait
adc
addb
rol
and
incl
mov
jb
int3
or
xorl
jmp
popf
or
cli
lods
shl
dec
in
ret
out
adc
sar
jmp
in
fdivrs
out
mov
fisttpl
loopne
adc
sahf
in
jg
mov
aas
sar
je
sub
cmp
mov
sbb
lock
cmp
jnp
fidivl
or
add
inc
push
ds
out
and
xor
jmp
decl
mov
xchg
sub
bnd
dec
ljmp
mov
pop
xor
call
sbb
pop
pop
push
je
mov
mov
or
std
popf
pop
cld
mov
jne
lods
lock
popa
cmp
ss
xchg
adc
jbe
test
in
xchg
jl
cmp
and
push
into
mov
testl
call
dec
xor
aam
jne
pop
pop
pop
out
xor
mov
adc
cmp
sbb
ljmp
push
leave
push
adc
cmp
sub
or
fs
insl
incl
call
sbb
int
add
incl
fistl
mov
shlb
fnop
cwtl
lds
push
adc
mov
xor
decl
aaa
mov
and
xor
mov
divb
es
wrmsr
xor
dec
inc
inc
dec
cmp
ss
gs
mov
xchg
cmp
mov
js
push
fnsave
incl
pop
push
fucomip
push
shlb
and
pop
xor
jne
and
inc
movsb
stos
js
mov
decl
push
movb
dec
mov
xchg
sbb
into
or
popa
fs
decl
jmp
cmpl
ret
add
mov
xor
lods
loop
cmpl
sbb
pop
inc
cs
mov
addl
movsb
sbb
xchg
shrl
rclb
incl
xor
and
pop
cmpsb
push
out
adc
das
cltd
dec
repnz
fs
lcall
cld
fisttpl
cmp
mov
sbb
pusha
inc
xor
int3
cs
call
jbe
push
sbb
sub
repnz
mov
iret
cmp
mov
mov
sub
cmp
cmp
loopne
mov
mov
or
push
push
pushl
inc
sbb
cmp
dec
inc
and
out
or
inc
and
or
test
sbb
ljmp
divb
xchg
mov
sbb
negb
push
jp
push
mov
or
push
call
gs
jl
and
test
pop
sbb
mov
es
nop
or
pop
iret
xor
or
mov
sbb
aam
or
adc
add
add
xchg
add
in
jne
sub
scas
and
lcall
ret
roll
jmp
out
lods
jle
lock
jmp
push
fs
mov
pop
sub
ret
stc
pop
sbb
test
inc
pop
pushf
loopne
adc
lcall
out
les
sbb
xchg
maskmovq
negl
out
gs
adc
nop
mov
sbb
pop
insb
in
add
ds
dec
and
das
dec
mov
xchg
pop
std
lcall
imul
and
push
add
xchg
jno
nop
adc
mov
aas
ret
jg
add
jo
inc
pushf
xchg
cld
xchg
or
push
test
andl
jne
ljmp
adc
add
jbe
push
enter
mov
mov
loopne
ds
call
fisubs
pop
sbb
cmpl
leave
idiv
ljmp
adc
pushf
nop
xchg
adc
or
dec
or
movsl
jmp
inc
xchg
cmpsl
mov
divb
out
push
es
pop
jo
fldcw
xchg
jmp
dec
sbb
js
adc
pop
ret
mov
inc
cmp
jmp
lcall
out
imul
clc
in
add
cmp
pushf
mov
cmp
cli
incl
inc
xor
mov
or
sbb
sti
mov
add
xorb
dec
or
mov
push
std
pop
cli
lcall
test
ds
std
rorl
mov
test
fistps
orl
fsubrs
aas
pop
mov
pusha
push
aam
push
int3
adc
dec
dec
inc
dec
enter
mov
fimuls
movsl
test
lods
outsl
mov
lcall
sbb
inc
jmp
js
iret
fs
jo
jmp
jns
mov
lcall
and
jge
sbb
mov
mov
lret
inc
pop
push
loop
jne
push
mov
add
push
pushl
loope
jmp
and
add
dec
popf
or
incl
std
lret
cmpsl
jne
and
xor
call
repnz
repnz
dec
mov
mov
sbb
or
ret
cmp
fsubrl
xor
stc
popf
xor
daa
add
test
lcall
rcl
sti
in
push
into
dec
je
jl
add
xor
aaa
cmp
push
pop
movsb
out
aas
std
ljmp
ljmp
or
inc
pushl
mov
lods
push
or
adc
jo
xlat
or
jl
inc
dec
sbb
lock
cmp
decl
popa
mov
cmp
je
scas
clc
lea
jmp
int
jo
rcll
imul
ljmp
decb
jle
icebp
xchg
add
push
jmp
add
repz
add
jl
sbbb
ljmp
mov
stos
add
xor
push
or
cmp
adc
lcall
jmp
into
cmp
inc
push
testb
ret
jb
mov
jbe
inc
incl
iret
mov
pop
push
pushf
xor
daa
push
sub
xchg
and
inc
jae
pushl
adc
fs
mov
adc
bsf
les
decl
lret
push
sub
call
movsb
and
mov
or
in
cmp
test
push
sbb
ljmp
add
xor
sbb
push
push
mov
push
and
mov
jo
cmp
xor
pop
outsb
test
fldcw
jae
and
std
sbb
ljmp
mov
dec
mov
mov
jmp
dec
xchg
push
xor
inc
cld
adc
outsb
sub
jp
add
or
and
test
imul
dec
adc
push
movsb
outsl
jge
push
lcall
std
sti
aam
jmp
inc
mov
mov
mov
iret
sub
std
pushl
inc
jb
add
daa
xchg
cltd
pop
or
dec
jne
mov
jmp
jns
cmp
xchg
inc
je
jle
lods
push
out
xchg
and
add
jle
pop
pop
mov
shll
push
adc
call
incl
dec
and
mov
and
mov
test
lods
jbe
cmpsb
fldenv
push
push
push
jne
jne
jns
add
cmpsl
xlat
lods
popl
repnz
es
push
or
call
insb
sbb
test
and
xlat
je
mov
and
or
dec
sbb
sbbl
sar
jl
and
icebp
jmp
sub
mov
clc
incl
or
mov
out
or
mov
inc
sub
mov
decl
mov
fcoml
int3
test
aam
dec
cmpsl
addl
decl
and
ds
mov
adc
jbe
inc
push
mov
mov
jmp
push
add
mov
stos
mov
pop
decl
cmp
xor
arpl
sbb
mov
fildl
or
fs
inc
sbb
js
xor
xchg
fstps
addb
fs
fcoms
fdiv
mov
in
push
js
test
sbb
popa
outsl
mov
fdivrp
pop
std
call
add
inc
sbb
shll
std
enter
or
les
ljmp
imul
mov
insb
add
pop
movsb
push
data16
rolb
imul
std
fadds
push
fadds
call
sub
adc
sbb
jmp
or
jg
sub
push
mov
pop
inc
jae
push
cmp
lods
sub
test
rolb
mov
and
cmp
movsl
push
jb
add
repz
inc
mov
push
adc
dec
jb
dec
lret
dec
test
jl
shrb
and
insb
dec
adc
inc
sbb
mov
or
jle
adc
push
jne
es
pusha
push
cmp
mov
iret
and
pop
clc
and
mov
out
or
dec
rorw
int
in
add
jne
popa
inc
ljmp
inc
bnd
repnz
decl
je
ds
mov
mov
ficoml
mov
sbbl
and
or
lea
cmc
pop
mov
jnp
jmp
mov
in
dec
xchg
dec
lahf
sub
mov
mov
out
or
out
movsb
add
and
cld
push
xorl
adcb
and
test
add
mov
fs
jg
or
aas
es
outsl
fs
cli
iret
adc
movsb
lea
push
xor
xchg
pop
xchg
icebp
incl
je
push
insl
jbe
adc
mov
mov
push
int3
sub
fnstcw
sbb
pop
leave
push
loop
call
dec
mov
push
push
aam
or
mov
adc
cmc
mov
jmp
ss
ret
movsb
fiadds
test
xchg
fs
nop
outsl
in
dec
pop
mov
xor
faddl
daa
rorb
dec
sub
pop
mov
subl
sub
gs
clc
ljmp
mov
push
jno
jo
jnp
loop
inc
lods
rclb
lret
lcall
mov
sub
pop
pop
and
rolb
sbb
andb
ret
and
enter
call
jne
sbb
push
or
ja
and
mov
stos
mov
push
call
add
jmp
dec
stc
push
push
pop
sub
sub
fs
shrl
push
filds
push
mov
sub
cmp
fucomp
jge
daa
testl
adc
das
adc
inc
daa
sti
incl
dec
enter
dec
push
xchg
ret
testl
cmpsl
call
sbb
mov
dec
std
dec
inc
adc
and
aad
sub
pop
js
icebp
decl
cltd
mov
xchg
icebp
sub
lock
jae
arpl
inc
js
xchg
movsb
cmp
jg
xchg
cltd
dec
push
pop
xchg
push
push
mov
test
or
jae
std
out
jg
push
sbb
xchg
mov
xchg
push
mov
in
push
fisubs
add
add
mov
jmp
ljmp
adc
ss
mov
pop
jbe
add
test
fmull
lcall
push
dec
sbb
inc
or
shll
notl
cmp
or
sbb
add
call
sbbl
jmp
sbb
stc
insb
cmp
adc
pop
sbb
lds
aas
mov
popa
scas
and
popa
xchg
and
leave
sub
xchg
fdivr
sti
lcall
cmp
int
push
sbb
data16
inc
inc
adc
xor
int3
lock
sbb
fwait
and
incb
mov
aad
pusha
imul
in
loopne
shl
adc
add
js
inc
fmul
xchg
jnp
imul
dec
dec
addr16
xchg
ljmp
and
sar
jmp
dec
xor
mov
xorb
or
inc
push
in
dec
loopne
stos
and
sbb
in
decl
rclb
popa
jo
in
push
lods
push
push
lods
dec
cs
loopne
and
jns
in
pop
push
sub
and
outsl
outsl
lea
and
rcll
add
in
insb
outsl
dec
loopne
sub
inc
add
adc
or
lock
adc
or
inc
popl
xchg
sub
daa
incl
jne
push
inc
jecxz
jne
popf
fcomi
jo
das
xor
lret
lcall
stc
inc
in
cmp
test
mov
xlat
push
adc
xor
mov
ds
clc
sub
jns
call
mov
adc
cltd
cmp
xor
clc
call
add
in
cld
sub
adc
pop
inc
decl
dec
or
mov
mov
mov
push
mov
pop
push
and
push
out
mov
aaa
rcl
loop
mov
jp
pop
cmp
mov
inc
sbb
mov
gs
mov
push
jecxz
add
jecxz
lcall
lds
or
sbb
mov
cmp
pop
and
fsubrs
pushf
outsl
decl
or
push
mov
or
nop
adc
cmp
xchg
sbbl
pushl
push
mov
xor
pusha
or
sar
rorl
hlt
sub
je
jne
and
decl
dec
movsl
jnp
orl
add
xor
sub
push
negb
jns
inc
cmp
loope
pushl
cmp
sub
push
sub
or
mov
aam
test
test
xchg
ljmp
dec
test
jb
pop
inc
movsb
jmp
xor
sub
stos
xchg
or
and
lcall
jne
mov
xor
shll
and
test
pop
pop
inc
push
pop
cld
inc
mov
std
adc
decl
sub
lea
adc
jle
mov
test
pop
pop
enter
clc
sub
mov
lahf
scas
inc
push
int
sbb
testb
incl
pop
push
mov
xor
push
cltd
in
in
sub
push
mov
push
decl
outsl
and
jo
lods
sub
iret
mov
lock
orb
ss
rolb
mov
iret
or
push
hlt
pop
push
sub
int
add
decl
nop
xchg
pushf
sub
xor
movsl
inc
push
mov
push
inc
mov
adc
hlt
mov
push
divb
clc
xor
cmc
or
loopne
mov
fistl
pop
cmp
and
sbb
dec
out
ss
or
outsb
mov
mov
xlat
pop
mov
mov
dec
jb
cmp
jge
mov
icebp
adc
scas
pop
push
call
int
test
fwait
repz
movsb
or
mov
inc
mov
mov
inc
push
ffreep
unpcklps
mov
mov
inc
pop
adc
pop
loopne
pop
push
iret
push
or
cmp
lahf
cltd
xchg
or
dec
fmull
mov
or
dec
gs
mov
divl
xchg
clc
add
sbb
pop
jl
loop
xchg
push
sub
aas
clc
inc
sbb
sbb
lahf
pop
pusha
shr
add
or
inc
mov
jmp
jge
int
xchg
inc
shlb
bound
ret
into
ret
jl
jbe
pop
in
js
in
xor
cld
jg
adc
les
sub
leave
rorb
push
add
iret
push
jne
in
cs
imul
push
pop
negl
mov
negb
mov
add
cs
sbb
lcall
std
faddl
add
and
sbb
stos
pop
dec
mov
sub
push
lcall
call
dec
xchg
or
xchg
sarb
ret
mov
cs
lcall
xor
jbe
jecxz
push
add
add
pop
xchg
push
adc
sub
jmp
jmp
decl
sub
mov
clc
jg
add
dec
idiv
decl
cmp
pop
or
test
and
fidivrl
and
cmp
fs
loopne
jns
or
lock
bnd
fcmovu
push
adc
add
je
dec
std
add
jmp
js
jg
xor
rorb
inc
in
addl
xor
sub
cmp
cld
pop
cmc
test
adc
add
and
imul
cmp
inc
mov
std
mov
flds
mov
xor
adcl
aaa
mov
mov
mov
add
test
push
enter
add
fadds
cltd
sub
cmp
ja
sbb
mov
dec
mov
mov
sar
incl
mov
or
jo
popf
dec
mov
fnsave
adc
incl
aas
xor
fs
adc
repz
fdivrp
jmp
mov
movzbl
daa
clc
rolb
insb
sub
out
jns
inc
inc
fisubl
pop
test
adc
adc
and
mov
inc
inc
dec
pushl
xorb
ret
pusha
ja
cmp
je
add
hlt
ficompl
sbb
cmp
push
lahf
mov
sub
mov
lods
jmp
sbb
dec
xchg
fcmovnbe
orb
sbb
add
test
insl
call
push
and
push
xchg
fdivl
pop
xor
jle
jae
lock
jmp
aas
and
mov
jmp
into
shl
or
jp
sub
sub
jns
mov
fstps
inc
shr
call
decl
jmp
inc
xchg
imul
add
shll
not
and
mov
std
sbb
add
sbb
cmpsb
std
decl
sbb
scas
adc
xchg
ficomps
jbe
out
fstpl
inc
add
mov
shr
subl
and
repnz
jae
fstps
mov
push
daa
data16
test
rcll
ficomps
mov
call
and
imul
adc
insb
call
aas
jl
js
fbld
xor
pop
addr16
add
call
lret
xor
movb
mov
test
insb
adc
clc
or
incl
mov
or
mov
jmp
int
jg
add
inc
lcall
jmp
mov
sahf
faddl
and
jb
xor
decl
xor
xor
dec
lods
push
mov
lock
dec
pushf
xor
sbb
add
xchg
cmp
loopne
test
imul
jbe
cmp
add
push
jns
lcall
or
sahf
push
push
pop
mov
and
call
test
push
or
sbb
pop
jmp
aam
xorl
ret
ljmp
pop
clc
and
or
shll
sub
cmp
lcall
clc
ret
insl
outsb
mov
aas
rcll
push
sarl
loope
decb
inc
xchg
in
inc
add
ret
mov
inc
fcomps
ja
sub
loope
or
test
push
test
call
outsb
add
push
pushl
ret
movsb
test
in
add
or
push
push
fisubrl
cmp
add
jmp
push
fwait
loopne
adc
rcrb
adc
cmp
movsb
ja
jecxz
dec
jne
pop
call
xchg
hlt
xor
loopne
xor
push
ljmp
xor
aam
sti
xchg
dec
sbb
filds
and
lcall
into
shr
push
pushl
std
sub
dec
into
sbb
add
add
sub
mov
mov
jmp
or
aaa
inc
mov
push
mov
pop
test
sti
incl
aas
inc
dec
inc
xor
inc
scas
adc
jb
nop
or
fcoml
jo
adc
xchg
sub
inc
in
sub
leave
mov
inc
cmp
and
iret
je
or
cwtl
pop
sbb
inc
mov
aas
inc
inc
iret
pop
or
fcoml
xchg
inc
lods
adc
ljmp
loop
dec
loopne
pop
pop
adc
xor
imul
addb
jmp
dec
sti
ret
repnz
enter
mov
shr
jb
pusha
add
sbb
pop
enter
std
sti
push
minps
sub
mov
dec
push
dec
add
add
pop
or
adc
or
loopne
and
pusha
xor
adc
decl
loope
orl
out
dec
add
xchg
int
or
pop
lcall
nop
mov
outsl
inc
or
pop
mov
pop
and
out
mov
iret
testb
adc
pop
shl
add
clc
jmp
je
adc
ret
arpl
push
push
aaa
popf
lcall
std
decl
xor
rclb
pop
sub
incl
inc
lea
inc
mov
sti
add
sub
arpl
pusha
and
cmpb
adc
popa
fistpl
dec
xchg
in
cmp
call
lcall
scas
pop
push
sub
jns
testl
sub
pop
std
mov
sbb
lea
leave
mov
jp
hlt
push
pop
scas
mov
push
outsl
cmp
cmp
icebp
jg
std
inc
test
lea
and
cltd
inc
push
lahf
and
sti
adc
xchg
sbb
nop
adcl
pusha
pop
inc
std
pushl
gs
adc
adc
scas
cmp
jnp
xchg
out
incl
lret
into
push
sbb
mov
mov
mov
incl
adc
push
or
inc
sbb
xchg
xor
cmpsl
sbb
add
inc
scas
nop
adcb
jl
daa
adc
cmp
push
add
add
jge
xchg
add
push
mov
push
mov
cmc
dec
jl
rorl
mov
push
jle
pop
sub
aaa
sbb
dec
and
jae
mov
pushl
vmwrite
push
outsl
outsl
or
add
or
subl
shlb
sbb
incl
jb
lods
dec
sbb
fs
mov
call
mov
test
call
mov
push
fsubs
xor
and
mov
mov
inc
loopne
call
decl
mov
cmp
xor
in
push
xchg
loopne
cmp
pop
call
and
mov
sahf
out
into
inc
mov
ljmp
repnz
into
or
inc
movsl
and
push
xorl
lcall
pop
cld
pushl
insl
or
jle
lea
jne
or
mov
aas
aam
icebp
lret
mov
mov
test
cmp
or
lahf
inc
pop
push
adc
inc
decl
sbb
test
pop
imul
sbb
inc
jmp
ja
fimull
imull
lcall
idivb
lock
mov
mov
dec
xchg
sub
push
cmp
sub
sbb
push
andb
jnp
scas
shrl
mov
sub
outsb
dec
out
pop
test
adc
je
aas
mov
jecxz
push
pop
out
icebp
push
popf
lahf
jno
in
xor
sbb
or
incl
inc
add
stos
jp
mov
and
loope
pushf
jmp
mov
pushl
subb
in
or
mov
data16
call
shlb
jmp
ds
push
mov
xor
push
mov
lcall
dec
mov
mov
pushf
xchg
mov
jo
clc
ljmp
addr16
hlt
cwtl
cmp
ja
outsb
mov
mov
loop
inc
jmp
testb
mov
add
adc
push
adc
or
jne
sbb
aam
incl
jmp
inc
rcl
notl
cwtl
sahf
cli
fistps
sbb
jg
fldl
incl
add
mov
test
mov
or
mov
je
rclb
cld
test
pop
add
lods
push
decl
mov
adc
and
int
arpl
lahf
xor
in
cmp
xchg
hlt
or
lds
sub
movsl
roll
xchg
mov
pop
and
jg
pop
fistl
xor
loopne
xlat
pop
ja
sub
loopne
and
adc
sbb
or
and
fisttps
adc
ret
add
pop
call
mov
mov
loopne
dec
movsl
aas
push
hlt
and
movsl
out
clc
jb
test
movsl
test
push
mov
jg
call
ficompl
dec
pop
inc
pop
inc
in
pop
scas
in
jg
call
dec
add
addr16
dec
nop
mov
hlt
cmp
repnz
jmp
jmp
imul
sbb
push
xorb
ficompl
or
mov
mov
je
dec
push
out
cmp
ljmp
test
push
and
lcall
ficompl
ss
cld
pushl
inc
lods
pop
shll
sahf
cmp
mov
mov
adc
jg
pop
fists
cmp
jge
or
test
xor
sarb
call
and
in
insl
mov
inc
and
enter
std
les
xchg
push
imul
pop
cmc
dec
popf
xchg
push
out
movsl
enter
aad
arpl
imul
pop
dec
std
push
addr16
repnz
shll
fs
jae
mov
adc
xor
push
mov
in
xchg
shlb
imul
xchg
popa
in
xor
fs
sbb
jmp
or
popf
xchg
and
pop
xchg
cmpb
xchg
dec
push
xchg
xor
jmp
lcall
cmpsl
jge
aas
sub
dec
dec
sub
negb
aaa
mov
and
testl
into
aaa
aam
cmp
cmc
adc
jmp
in
outsl
push
repnz
sti
push
int3
push
std
mull
inc
dec
sbb
adc
call
pop
xchg
in
xchg
or
scas
pop
push
sbb
into
add
push
push
incl
sub
ja
and
lret
imul
xor
std
jmp
or
pop
addb
xchg
and
daa
push
sub
dec
cmp
cld
sahf
paddusw
cwtl
cmp
and
aas
pop
mov
aam
dec
add
dec
mov
cmp
adc
pop
lock
or
sub
das
or
xchg
movlps
or
and
arpl
leave
sti
sbb
insb
aaa
insb
or
arpl
mov
pop
xor
aam
sub
push
jg
mov
jne
add
jle
pop
push
xchg
sbb
xchg
aaa
inc
pop
xor
ret
andl
push
clc
mov
inc
dec
dec
mov
or
push
lcall
loopne
fsts
bts
nop
inc
dec
lcall
push
call
and
pop
dec
jg
decl
rorb
insl
adc
push
inc
jge
lret
and
pop
lock
cmp
jmp
outsb
xor
add
out
sbb
adc
or
jnp
das
sbb
or
outsb
je
enterw
jns
fldcw
dec
enter
add
cmp
pushl
sbb
lea
adcl
cltd
jnp
test
pop
jg
movb
pop
pop
shrb
inc
mov
cld
sub
adc
testb
jns
mov
test
dec
or
xor
mov
add
and
pop
lea
popa
or
test
ljmp
add
jmp
dec
lds
dec
jle
mov
arpl
jne
jg
fildl
fstps
adc
jmp
xor
xor
clc
stc
add
xchg
add
js
test
cmpsb
aas
sar
push
fbstp
xor
loop
push
psubusb
icebp
jmp
jg
ljmp
js
test
loope
insl
push
or
jne
adc
shlb
hlt
popf
daa
push
pop
jg
sar
cmp
push
rcll
imul
loopne
mov
test
mov
or
mov
mov
sar
jnp
lods
outsl
dec
pushl
sahf
addr16
mov
popa
movsb
movsb
pop
test
repnz
mov
dec
adc
push
add
pop
test
xchg
sbb
or
xor
and
sar
std
test
shr
mov
dec
mov
add
mov
jl
cs
call
mov
out
sub
inc
or
mov
ja
mov
dec
dec
cmpsb
jp
add
or
add
and
pop
jge
fdivl
sarl
ljmp
jae
mov
mov
leave
je
pop
and
jg
lahf
mov
lods
jmp
push
into
jl
lds
subb
hlt
int
mov
scas
lret
inc
xchg
cli
xlat
dec
lret
cltd
nop
inc
enter
cmpsl
in
inc
je
ljmp
add
dec
daa
aas
jo
sub
cwtl
jp
add
jne
inc
dec
jmp
mov
pushl
mov
xchg
add
dec
adc
pop
sbb
in
add
mov
sub
fisubl
dec
ret
add
dec
into
std
mov
sbbb
cld
xchg
lret
xchg
and
cmp
or
ljmp
fstl
jb
sub
dec
orl
shrl
incl
dec
jle
mov
aaa
stc
push
pop
inc
mov
addr16
mov
sarb
js
pushf
mov
dec
fldl
test
inc
jge
pop
fs
pop
jge
mov
push
pop
jl
pop
leave
or
rcrb
f2xm1
mov
pushf
push
ja
call
xchg
lods
ljmp
mov
pop
mov
out
ljmp
sbb
mov
adc
gs
insb
pop
or
arpl
scas
mov
and
or
or
testb
aas
or
push
les
mov
cwtl
jo
call
in
jle
jb
movsb
je
xor
add
cmp
iret
dec
jg
aad
ds
jl
dec
clc
sub
enter
or
inc
sahf
xchg
push
and
setns
cmpl
or
and
out
ja
rcll
dec
das
or
in
push
xor
scas
xor
sub
popl
push
jo
ret
sbb
in
or
pushl
sti
xchg
add
pop
fsts
xor
pop
and
cwtl
fsubl
jmp
lods
or
jg
pop
data16
out
bound
ss
cmp
add
movsb
and
jecxz
fistl
jne
inc
mov
pop
xchg
push
jmp
clc
mov
jle
imul
or
lret
xor
daa
push
pop
and
pusha
in
aad
jbe
push
sub
inc
aam
xchg
aam
xchg
add
mov
fcoms
or
lahf
mov
add
xchg
jg
inc
sub
int3
add
sbb
cld
lcall
mov
pop
lcall
jne
jne
xchg
xor
pop
mov
jle
mov
in
or
jmp
sub
lcall
cld
add
add
jl
out
in
cmc
in
ss
cmp
add
inc
dec
or
std
jnp
insb
xchg
fwait
jnp
adc
test
xchg
dec
decl
rclb
fadds
mov
aad
or
aam
add
xchg
leave
jmp
jae
dec
add
in
jmp
add
ret
adc
or
lock
ljmp
call
adc
adc
in
call
shlb
les
insl
mov
inc
mov
xchg
fldt
or
pop
dec
sbb
add
add
inc
jmp
cmpsl
andb
mov
mov
mov
or
incl
push
mov
and
neg
jbe
fstps
pop
jmp
outsb
orb
mov
cmc
push
out
movsl
cmp
lods
decl
sub
movsb
fists
sbb
ss
mov
sbb
mov
sti
in
icebp
mov
jne
cmp
xchg
inc
or
add
popa
jp
jbe
jg
je
jne
add
pop
sub
xchg
mov
aaa
add
je
push
or
cli
mov
movsl
push
pop
push
fwait
push
in
inc
cmp
jnp
inc
decl
push
in
push
cmp
test
iret
loopne
adc
sbb
enter
addr16
jmp
mov
pop
in
mov
fwait
dec
lock
ret
std
xor
stc
nop
sahf
lea
push
dec
hlt
cmp
pop
je
daa
or
sarl
aaa
lcall
inc
int
pop
dec
mov
mov
pop
mov
or
mov
sti
mov
jg
jecxz
sbb
adc
adc
mov
pop
add
lcall
mov
pop
das
adc
lock
outsl
jl
lods
cmp
call
adc
sbb
mov
testb
mov
cmp
xchg
push
push
dec
or
in
into
adc
sub
lcall
xchg
clc
int3
mov
std
lods
mov
divl
jne
add
incl
push
lea
and
and
add
xor
xchg
ljmp
pop
xorl
enter
in
pushl
sahf
loopne
pop
dec
call
pop
rcl
mov
push
inc
push
cmp
out
movsl
dec
fstpt
stos
cmp
add
dec
push
cmp
sub
mov
aam
push
icebp
add
jae
mov
or
xchg
or
push
dec
cmp
aaa
pop
push
inc
cmp
xchg
roll
adc
mov
or
jmp
lcall
and
sbb
mov
jb
jl
jp
outsl
inc
and
or
jmp
lcall
xchg
nop
das
aas
fistl
mov
pushf
pusha
jbe
sbb
sbb
adc
push
jne
mov
pop
lcall
jns
ret
stos
pusha
test
mov
xor
push
clc
lcall
lret
mov
cmp
mov
xor
andb
jmp
inc
dec
lock
dec
adc
dec
sbbb
mov
or
call
and
jecxz
pop
test
inc
push
or
or
cs
divl
push
insl
cs
incl
arpl
stos
jmp
adc
inc
or
and
fmuls
jge
jns
fsubs
cmpsb
pushl
fistpl
jge
fldl
mov
adc
je
mov
mov
nop
repz
adc
call
inc
push
fistl
cmp
dec
or
inc
andl
insb
xlat
loope
dec
std
call
jl
adc
and
xor
and
sahf
insl
and
jg
pop
bound
lock
imul
add
mov
ljmp
aad
imul
inc
jne
outsl
dec
sbb
xchg
sbb
dec
add
movsb
inc
pusha
imul
jmp
repnz
xor
pop
adc
popa
cltd
push
jge
lds
jmp
xchg
jmp
sbb
adc
inc
adc
lods
and
cld
incb
xor
xor
dec
jg
push
out
or
decl
std
cmp
xor
je
push
bound
daa
mov
xchg
mov
out
and
adc
sub
incl
cld
clc
je
xorb
lahf
insl
cmp
call
mov
sbb
arpl
daa
dec
xchg
sbb
lcall
pusha
test
pop
adc
jno
add
mov
jbe
pop
incl
fnstsw
xchg
test
xor
pop
loopne
cltd
xchg
int
scas
cmp
pop
ss
dec
add
decl
push
pop
sbb
mov
pop
rorl
shrl
shrl
or
xor
ljmp
leave
push
sub
mov
rol
outsb
mov
mov
add
push
mov
mov
xchg
or
add
xor
adc
or
mov
cmpsl
lea
pop
decl
out
sbb
adc
sub
rorl
sbb
and
pop
std
enter
leave
fidivrl
loopne
add
lods
mov
xchg
push
jne
push
orb
adc
lcall
mov
adc
aam
cmp
pop
push
push
fcoms
jne
push
not
jmp
sub
adc
lea
sub
add
fildll
xchg
cmc
decl
ljmp
inc
add
and
jns
int
dec
add
jmp
inc
push
sub
mov
mov
decl
test
outsl
pop
inc
mov
or
xchg
xor
data16
cmp
pop
xchg
outsl
mov
push
call
fldt
pop
add
push
sarb
mov
incl
fs
shl
pop
xor
fstl
cld
jmp
hlt
mov
mov
outsl
xchg
test
xlat
lods
mov
cwtl
faddp
orb
cld
stc
lock
sub
or
xchg
jg
nop
mov
cld
jbe
fwait
pusha
mov
enter
insb
adc
add
cli
cmp
add
sub
push
sbb
jns
shr
dec
add
or
cld
dec
add
ja
and
mov
jbe
add
cld
mov
pusha
enter
ds
imull
mov
outsb
cwtl
fadd
cmp
ljmp
std
add
enter
xchg
pop
adc
mov
in
dec
adc
adc
pop
inc
dec
mov
lods
xchg
rcll
je
leave
push
insl
mov
inc
sbb
es
mov
nop
shll
fs
incl
adc
jo
aas
cmp
insb
push
incl
mov
adc
fldl
popf
ljmp
mov
mov
xchg
push
call
sbb
dec
test
pusha
adc
jg
imul
cmp
add
call
test
jge
add
sti
jnp
dec
mov
adc
fsubs
sbb
es
add
call
dec
xchg
sub
mov
lcall
xchg
out
aam
mov
movl
cmp
outsl
add
mov
mov
sub
jb
inc
aaa
xor
push
jne
daa
test
cmp
nop
pop
fidivrs
mov
mov
sarl
xchg
add
mov
je
testb
lds
ret
pushf
stc
pop
nop
sbb
jg
mov
cmc
mov
stos
pop
inc
or
inc
adc
adc
pushl
xchg
clc
adc
xchg
or
aam
popf
mov
mov
out
in
mov
add
push
add
add
call
or
call
ss
inc
incb
movb
pop
rcrl
adcb
in
orb
enter
decl
push
out
lret
test
out
dec
repz
cmp
and
xor
cwtl
or
aad
push
sub
pop
jo
pop
mov
or
adc
decl
or
xchg
pop
xor
mov
out
push
das
adc
jmp
adc
enter
add
pusha
pop
inc
jne
fs
push
inc
cmp
cld
jo,pn
nop
in
fnsave
pop
adc
subb
push
jmp
sbb
lcall
fnstsw
add
mov
lea
xchg
jle
jg
mov
mov
push
pop
pop
inc
jne
data16
sub
and
ljmp
dec
mov
mov
andl
and
ss
decl
enter
js
inc
shlb
fistl
sbb
sbb
shlb
test
scas
rolb
pop
lahf
mov
mov
mov
push
inc
bound
out
add
mov
dec
mov
pop
js
mov
or
inc
mov
sbb
inc
add
jo
push
fsubs
sbb
bound
shll
sbb
adc
inc
sub
test
lcall
cmp
scas
roll
or
arpl
adc
shlb
fs
incl
add
xchg
in
jne
loopne
push
loope
push
adc
movsl
push
dec
mov
data16
call
repnz
mov
jmp
cmpsb
sub
add
and
mov
mov
stc
add
pop
mov
or
inc
and
lock
shr
or
jecxz
or
dec
and
sbb
ret
ljmp
in
pop
pop
ret
mov
pushl
sti
mov
add
fldcw
jl
outsl
scas
mov
sub
call
shl
mov
loop
or
rol
or
out
push
sbb
inc
push
mov
mov
not
inc
addb
inc
sub
ljmp
in
mov
sti
dec
or
or
add
pusha
cmpb
mov
clc
adc
call
loop
mov
fsubrl
push
mov
mov
pushl
loop
lahf
push
dec
mov
cwtl
push
push
mov
mov
mov
call
xchg
mov
inc
push
add
sub
inc
jmp
inc
scas
jge
add
push
adc
icebp
out
sbb
arpl
pushl
xor
mov
jno
je
fldenv
icebp
mov
fadd
push
mov
sub
ljmp
xor
mov
aam
dec
insb
xchg
jo
mov
sub
nop
popf
nop
sbb
push
icebp
or
push
and
mov
adc
and
sidtl
lret
mov
fstpt
jl
push
iret
and
xchg
insb
sbb
rclb
and
add
loope
pop
inc
aas
add
inc
in
xchg
sub
or
sti
aas
pop
insl
ljmp
xchg
mov
divps
dec
repnz
push
lsl
adcl
dec
xor
decl
jbe
sub
and
jbe
outsb
inc
push
shll
pop
push
push
cmpsb
insb
ret
mov
scas
std
cld
xchg
fdivrs
pop
clc
lea
sub
push
andl
sub
jmp
in
cmpsb
stos
cmp
incl
push
jge
jmp
or
jb
lcall
or
inc
and
lods
pop
js
mov
mov
imul
push
lret
enter
outsl
cmc
pop
dec
adc
or
sbb
mov
inc
or
incl
jns
adc
or
jae
popf
mov
adc
and
and
xor
push
xchg
bound
sbb
cmpl
xor
shl
fmul
lock
push
popa
rolb
enter
call
jno
xorb
pop
dec
pop
push
subl
decl
or
subl
xor
pop
mov
shlb
ret
inc
and
inc
dec
inc
sub
push
je
mov
push
xor
mov
xor
xor
jg
dec
cld
xchg
mov
cmp
setae
push
sarl
and
sub
push
mov
rol
data16
icebp
ljmp
xchg
jo
add
movsb
xor
mov
adc
repnz
sub
lock
lea
add
and
repz
std
jbe
fimuls
inc
mov
pusha
stc
dec
or
fidivs
hlt
ficomps
inc
sbb
mov
inc
sub
push
pushl
rcl
lahf
fiadds
cld
mov
pop
out
sahf
mov
jg
dec
pop
ds
lea
inc
mov
pop
pop
test
int3
adc
xchg
lock
mov
std
xchg
je
cld
fdivs
add
mov
and
sub
mov
dec
sbb
adc
lcall
or
stos
adc
xchg
cmp
sub
aad
ljmp
ja
mov
pop
sub
sbb
ss
out
pop
cmp
push
mov
xchg
test
push
cmpsb
imul
hlt
pminsw
add
mov
mov
mov
add
pop
add
mov
sahf
pop
pusha
std
pushl
addb
in
push
push
fmuls
and
mov
or
decl
adc
aas
add
adc
lds
mov
push
aam
mov
incl
aad
add
adc
ss
adc
push
inc
ljmp
add
hlt
sti
mov
in
mov
icebp
lock
pop
xchg
adc
adc
fists
ljmp
push
adc
dec
call
ss
push
dec
inc
cmp
inc
inc
fisttps
pop
xor
hlt
cmp
iret
sarl
lahf
mov
aam
and
jne
icebp
incl
pop
add
mov
lods
adc
je
out
and
xchg
inc
mov
jg
testl
and
mov
pop
sti
adc
nop
insb
or
cmp
pop
jge
incl
mov
or
or
cmp
jmp
jnp
dec
dec
cmp
push
mov
sub
das
roll
jg
out
sbb
test
xorl
push
and
cs
dec
cld
pushl
add
repnz
cmpsl
into
fwait
cs
sar
jg
mov
xor
mov
jmp
jmp
nop
add
inc
les
jne
call
fldenv
roll
dec
fists
leave
call
mov
in
shlb
ja
ficoms
testb
push
or
xor
jmp
adc
fwait
inc
push
stc
out
mov
push
mov
lock
in
and
xchg
or
fisubrs
pop
jae
cltd
fmul
fnstenv
pop
sub
pop
mov
mov
inc
shlb
ja
push
jecxz
mov
sar
ljmp
push
imul
icebp
jne
dec
adc
push
dec
push
xlat
or
cmp
xchg
mov
cmc
adcl
adc
aas
cmpb
jge
pop
std
js
or
ja
decl
jp
xchg
int
push
and
sbb
mov
mov
cmp
or
repz
pushl
inc
jmp
adc
pop
mov
mov
and
in
mov
and
dec
cmc
dec
incl
or
push
add
adc
in
dec
add
jmp
mov
pushf
inc
scas
dec
inc
ljmp
xchg
or
jb
add
sbb
ss
mov
push
test
sub
lcall
sti
test
orb
add
cmp
cmp
or
jg
in
repnz
mov
pop
aad
cmp
ret
test
inc
add
jge
jg
or
sarl
insb
fwait
out
decl
and
lock
xorl
push
or
jmp
hlt
testb
xor
or
shlb
mov
stos
xchg
into
add
into
push
fwait
mov
pushl
or
mov
and
mov
mov
sub
add
decl
imul
cmp
and
sbb
stos
or
nop
call
pusha
jge
outsb
incl
mov
rcrb
and
sub
inc
sbb
imul
dec
cld
pushl
stos
cmp
add
das
xor
adc
sar
stc
jbe
fmuls
mov
push
cmp
outsb
inc
andl
dec
add
or
div
pop
rorb
mov
cli
ss
dec
pop
cs
pop
ja
push
pop
add
jp
mov
loopne
push
jb
pop
loopne
add
ja
dec
cmp
iret
shr
shr
sub
je
rcl
add
aas
incl
jge
add
adc
sub
test
add
leave
mov
incl
popa
cmp
rclb
repnz
addb
nop
jg
mov
cltd
movsl
inc
add
pop
jb
push
mov
jmp
jmp
shlb
nop
adc
shl
sbb
popf
test
popa
jmp
jb
loop
cmp
mov
fimuls
mov
aaa
pop
push
rorb
call
inc
jmp
cld
int3
push
add
push
not
dec
out
rolb
aas
inc
je
push
inc
shlb
ds
adc
das
hlt
std
lcall
xchg
inc
clc
add
inc
cmp
subl
dec
add
enter
push
insl
xchg
popf
xchg
icebp
call
xor
inc
nop
stos
and
push
enter
incl
dec
inc
push
xchg
adc
inc
shll
test
incb
inc
cmpsl
add
pop
clc
loopne
sti
inc
jl
lea
mov
ljmp
fs
pop
ud2
cltd
sbb
or
out
out
cltd
and
xchg
mov
lea
push
dec
lcall
xchg
cmpb
inc
lcall
lock
ret
mov
fcoml
sti
inc
cmp
lcall
jl
addr16
fsubrs
xchg
sbb
test
push
xor
add
push
popa
dec
jle
lods
call
aam
arpl
aaa
mov
pushl
mov
push
das
fcoms
inc
lea
incl
out
fwait
int3
cli
test
insl
out
nop
mov
add
call
xchg
push
jmp
or
movsl
jmp
inc
jmp
lcall
stc
add
aam
inc
push
xchg
adcl
fistpl
inc
dec
sete
push
cmpsb
xchg
stc
ja
sbb
cli
and
xor
std
lcall
subb
dec
xlat
mov
mov
add
mov
cmp
shlb
sbb
mov
or
pop
fcomi
fcom
lahf
and
push
push
jb
or
mov
lcall
cs
outsl
loope
lret
sub
jb
out
push
mov
lea
mov
or
inc
jmp
call
popa
push
xor
scas
je
std
dec
dec
int
mov
xchg
cmpsb
mov
sub
aam
or
rclb
dec
clc
xlat
add
iret
cs
push
xchg
cmp
jb
mov
and
ljmp
shll
call
sahf
xchg
ljmp
adc
add
imul
es
add
lock
test
ss
setae
ss
inc
dec
push
add
ret
add
add
pushf
sub
adc
mov
hlt
outsb
rorl
lea
or
push
ljmp
adc
pop
cwtl
cmp
pop
add
bound
mov
xor
push
mov
mov
xchg
pop
pop
and
or
jne
out
and
jne
ret
xchg
jg
int
mov
mov
ficomps
loopne
push
flds
std
hlt
shr
sub
and
into
sbbb
jg
xor
push
rcrb
sbb
insl
sti
imul
push
sbb
cli
aad
incl
add
cmp
lods
aad
lock
aad
cmp
call
aas
jno
and
adc
jno
fcoml
sbb
cmp
and
test
add
pushl
je
sbb
ret
pop
mov
or
adc
test
xor
dec
fldcw
add
rorb
adc
out
add
sar
aas
std
into
mov
leave
icebp
push
cwtl
lds
loopne
jo
or
pop
std
mov
jmp
jmp
ljmp
fs
xor
aam
incl
mov
dec
cmp
fcos
inc
sub
mov
mov
sub
roll
push
lock
inc
mov
and
test
push
push
shr
pop
cmp
push
ficoml
dec
sbb
push
xchg
pushf
sbb
jmp
sbb
mov
inc
mov
push
aad
push
add
push
ljmp
sub
push
imul
adcb
int3
xor
decl
shl
hlt
and
pop
xchg
dec
xchg
sub
xor
js
std
push
incl
jbe
xchg
cmpsl
mov
in
add
inc
push
xchg
je
scas
add
add
or
inc
xchg
or
or
test
push
loopne
ss
call
push
push
scas
sbb
call
mov
imul
sahf
jmp
mov
js
dec
inc
enter
in
out
out
jbe
mov
push
sub
and
jne
andl
decl
out
xchg
insl
mov
les
outsb
xor
insb
rol
in
jmp
mov
aaa
add
pop
decl
fmuls
or
jge
shl
lods
pop
shl
pop
int3
lret
int
mov
jae
jmp
dec
hlt
and
or
cmpsl
pop
add
gs
inc
sub
mov
xchg
out
cs
je
inc
mov
in
test
je
push
xor
out
sub
fimuls
aas
std
ljmp
sbb
pusha
sbb
jnp
jle
push
sbb
popf
sub
mov
insb
jo
pop
jo
adc
insl
and
jb
into
cmp
fsubr
into
jo
test
pop
sub
jmp
jno
cld
push
rorb
lcall
mov
loope
clc
lea
lret
inc
aam
jg
jg
pop
inc
pop
sbbb
lods
popf
push
mov
adc
scas
inc
rorl
add
hlt
fldcw
mov
xchg
lock
stos
push
roll
mov
outsb
sar
popl
cltd
pop
jbe
aad
lcall
adc
inc
stc
cmc
repnz
mov
mov
and
incl
mov
cmp
mov
addr16
or
inc
loopne
out
pop
sub
inc
cmp
ja
cmp
add
je
pop
loopne
lret
or
jae
aaa
mov
pop
cltd
push
jmp
out
loopne
fiaddl
xrelease
push
ds
push
adc
sbb
lds
test
inc
daa
loope
add
dec
or
test
das
pop
popa
inc
push
adc
roll
data16
inc
pop
arpl
push
sbb
dec
dec
mov
fstpt
inc
subb
decl
mov
mov
adc
sbb
jp
rcrb
shl
es
out
mov
and
lcall
shr
push
mov
or
mov
cmp
pushl
jb
shlb
inc
mov
mov
std
adc
incl
sub
mov
xchg
and
loopne
mov
push
jmp
mov
add
xlat
dec
sbb
cmp
jnp
jecxz
mov
decl
adc
imul
inc
add
cmp
aam
int
sub
inc
and
decl
sbb
pop
fildl
incl
shll
ficompl
lret
mov
lret
popa
jge
fmuls
fwait
lods
stos
pop
std
call
iret
jge
push
add
in
dec
or
xor
fstpl
loope
incl
or
lock
mov
cmp
sbb
iret
ss
incl
inc
adc
jne
add
ficompl
dec
aaa
leave
pushl
pushf
dec
pop
xchg
outsb
inc
into
inc
cmp
out
fs
pop
adc
mov
shrl
jecxz
mov
jmp
add
lods
orl
jae
xor
les
and
inc
ret
inc
push
es
lcall
sub
and
outsb
mov
pop
mov
xor
and
ljmp
inc
loopne
add
xor
ds
or
test
mov
inc
inc
xor
and
and
fstp
pop
and
lcall
aad
decl
or
add
cmc
mov
int
subl
add
decl
addr16
test
mov
jg
add
cmp
jne
inc
nop
or
xor
sarl
in
int
xchg
jmp
xchg
cmp
jl
jle
mov
roll
ja
adc
jge
scas
sbb
cmp
pop
imul
jns
mov
pop
mov
sahf
or
inc
test
dec
mov
xor
jg
div
push
add
sbb
adc
je
add
add
test
pop
push
out
call
aas
in
mov
ss
lret
icebp
jne
jmp
inc
andb
cmp
adc
decl
adc
inc
js
add
jb
popa
testl
daa
jmp
push
xor
push
cmp
add
call
je
xor
outsl
repz
mov
lcall
jo
aad
adc
xchg
stc
das
pop
cs
das
pop
or
add
inc
jmp
out
aad
cmpsl
ljmp
fadds
mov
fsubr
lods
loopne
mov
or
inc
jbe
or
jbe
inc
pop
das
mov
pusha
cmp
shrb
test
mov
int3
clc
cmp
jmp
js
pop
dec
pop
stos
es
sbb
fmuls
rorb
jecxz
cmp
pop
or
das
and
dec
lea
lock
fadd
xchg
jae
and
pop
dec
adc
repnz
pop
jmp
push
daa
subl
mov
push
outsb
fwait
inc
cwtl
dec
aas
dec
lret
xor
fucomp
add
inc
push
push
pop
je
jnp
mov
adc
pop
in
insb
inc
inc
lock
push
lret
dec
in
push
xchg
mov
push
std
pop
in
push
out
push
mov
loopne
inc
add
cmp
es
cld
jmp
mov
cmp
repz
lods
pushf
cmp
and
loopne
pop
lock
call
std
adc
add
dec
jg
and
jmp
sub
push
rclb
push
xor
ljmp
lds
cmpsl
mov
mov
add
adcb
aad
pop
push
jle
clc
adc
add
rcrl
movsl
lret
loopne
in
add
xchg
dec
popf
cli
cmp
decl
sub
adc
test
dec
sub
mov
mov
decl
add
ljmp
xor
cs
push
xor
dec
lea
xor
sbb
sbb
pop
inc
shll
popf
sbb
inc
jb
repz
ror
pusha
stos
repnz
inc
inc
pop
sbb
adc
add
jge
push
addr16
jne
inc
lock
or
ret
cmp
aas
std
bound
lahf
arpl
jge
cmp
jl
test
jae
in
imul
push
call
call
ret
fs
mov
push
pop
add
sub
push
add
cmc
decl
jle
jo
dec
shlb
cld
std
and
sub
aas
add
enter
push
xor
fimuls
pop
adc
clc
incl
add
in
xorl
or
jg
in
and
cmc
xchg
jg
lock
xor
cmp
pop
decl
push
test
pop
xor
fildl
adc
mov
inc
call
inc
adc
sbb
clc
xorb
orl
clc
sub
push
pop
icebp
adc
inc
stc
push
dec
call
sub
ret
clc
adc
adc
dec
fs
pop
push
test
popf
loope
insl
sub
xchg
xorb
inc
decl
mov
gs
add
arpl
xor
fdivr
decl
mov
leave
xchg
or
lret
dec
sti
insb
or
stos
sub
or
stc
test
sbb
dec
incl
testb
adc
ds
call
in
sar
clc
push
xor
incl
cli
ud0
aaa
and
xchg
xor
lea
and
xchg
icebp
jmp
rcrl
rolb
sahf
imul
lcall
push
rorb
stos
xor
imul
jae
pop
fidivrs
xchg
sub
mov
rorb
leave
push
xchg
dec
or
sub
loopne
xor
jmp
fs
and
mov
jle
icebp
xchg
sbb
xchg
jmp
cmpw
pop
pop
sub
out
jle
je
mov
mov
lds
in
je
jnp
ltr
incl
in
jp
cmpsb
das
dec
mov
inc
jge
push
repnz
aaa
imul
stos
sub
and
pop
jmp
nop
pop
sbb
pop
rorl
leave
insl
add
inc
cmc
add
jns
sarb
clc
incl
push
es
addr16
xor
cmp
popa
mov
out
add
and
mov
jle
jg
call
jne
pop
xchg
pop
nop
out
or
push
fisttps
dec
xchg
or
out
fisttps
mov
inc
repnz
nop
cmc
call
sub
in
cltd
add
ret
inc
mov
add
sub
movsl
sbb
inc
add
mov
dec
push
inc
xchg
sub
xchg
inc
add
or
lock
ljmp
out
and
push
push
mov
mov
or
decl
push
add
mov
mov
shrb
jle
test
push
adc
pop
jg
and
push
push
std
rclb
cmp
jge
idivl
push
lods
push
jmp
and
sbb
aas
cld
xor
repnz
and
add
xlat
nop
into
pusha
jp
incl
adc
push
mov
mov
bound
and
adc
ljmp
call
jne
hlt
ss
add
mov
test
fcmovb
popf
sub
jg
sti
lock
pop
lods
in
rcrl
rcll
jl
fiadds
icebp
mov
mov
or
sub
push
xchg
cs
push
ds
dec
sar
adc
jnp
mov
xlat
cmp
call
nop
add
inc
xor
add
xchg
inc
arpl
dec
add
sub
mov
cwtl
mov
xchg
add
lea
mov
outsl
stos
pop
rcr
jns
or
inc
inc
loopne
stc
mov
jmp
jnp
lock
add
sbb
nop
add
imul
inc
or
or
jp
mov
rorl
add
adc
inc
mov
je
ljmp
int
inc
adc
fcoml
push
popa
adc
int3
inc
mov
xchg
jg
mov
and
jns
sub
repnz
xor
jmp
popa
jp
jns
testb
or
icebp
andl
or
sbb
and
aas
decb
pop
aad
clc
iret
mulb
mov
add
inc
outsb
xchg
decl
cmpsl
nop
jg
push
cmp
jg
les
ss
pop
xor
incl
rcl
out
stos
dec
leave
movsl
inc
adc
fsubs
inc
das
ljmp
pushl
sbb
xchg
inc
dec
imul
repz
mov
mov
add
mov
add
ss
and
adc
addb
aam
xor
es
inc
mov
outsb
fs
jb
cld
mov
cmp
ja
mov
test
mov
or
incl
popa
adcl
jne
cmp
inc
inc
sbb
into
or
mov
jmp
dec
fucomp
fcoms
cmp
jmp
xor
jmp
push
mov
mov
fdivrs
call
push
adc
pmulhuw
sub
daa
inc
mov
and
lods
mov
mov
mov
push
int3
mov
decl
pop
or
mov
push
sbb
pop
rcr
and
pop
xchg
mov
fdivr
incl
leave
sbb
loopne
and
pushf
cmp
call
imul
jmp
jno
bnd
fsubs
jne
notb
dec
xor
ja
cli
jnp
and
ljmp
sbb
adcb
aad
mov
test
pop
in
sbb
mov
cmpsl
mov
popa
in
in
pop
pushl
mov
test
cmp
add
inc
push
xor
add
arpl
dec
cli
loopne
pushl
enter
push
cld
mov
and
mov
cmp
jmp
or
sbb
add
cmp
movsl
inc
xchg
push
push
leave
clc
xor
lret
mov
insl
inc
adc
incl
int3
aaa
repz
or
addl
testb
mov
inc
and
incl
pop
xchg
nop
iret
mov
or
mov
pop
dec
loope
mov
lea
jg
lcall
mov
jae
notl
jg
and
pop
mov
outsb
decl
jns
mov
xor
out
fistpll
out
add
lahf
jge
add
clc
sbb
shlb
adc
popa
call
inc
decl
inc
arpl
out
inc
mov
repz
add
pop
call
ljmp
cmc
inc
inc
inc
fwait
or
call
lock
mov
jg
jns
pop
adc
mov
pop
in
inc
gs
loope
mov
addr16
push
pop
inc
fsub
jne
xchg
loopne
mull
fdivrl
push
jl
test
cltd
stos
outsb
jmp
push
bound
cld
jle
push
pop
into
cmp
fstp
sysret
lret
adcb
lcall
jle
sbb
mov
sbb
xchg
lcall
nop
or
jg
pop
add
mov
xchg
sbb
pop
xchg
cmp
xor
idivb
mov
adc
mov
inc
lea
add
mov
or
inc
insb
aaa
fldl
mov
loop
incl
call
pop
aas
jp
negl
popf
mov
xor
xor
add
push
xor
pop
rcpps
in
adc
adc
push
push
or
push
in
mov
mov
mov
data16
test
xorb
pushl
mov
scas
inc
fistps
xchg
xchg
mov
mov
lods
adc
adc
fnsave
lea
pop
mov
mov
jge
mov
out
xor
mov
cmp
cwtl
cmp
jb
pop
fbstp
add
mov
pushf
add
cmp
ja
inc
das
mov
outsb
push
orl
bound
mov
pushl
pop
mov
mulb
inc
push
add
lods
mov
insl
int3
jmp
push
in
fadds
xor
dec
repnz
pop
cmp
insl
adc
push
adc
mov
mov
push
ds
cltd
lea
or
popf
sti
pusha
xorb
sar
and
jne
out
sbb
inc
inc
adc
push
shr
testl
or
pop
fstpl
stos
inc
lcall
sarl
inc
leave
push
mov
ss
imul
adc
jg
std
fisttps
test
add
sbb
inc
pushl
sti
sub
xor
imul
mov
jmp
sahf
data16
add
mov
add
imul
test
mov
sarl
jg
pop
jno
add
ret
xor
fildll
loope
out
decl
shll
push
push
popf
lcall
jg
imul
add
sub
faddl
or
notb
rep
or
add
push
imul
in
adcl
pavgw
mov
jb
dec
jg
lods
loope
pushl
and
sbb
add
xchg
mov
decl
loopne
hlt
cld
mov
out
and
cmp
jg
jl
add
push
mov
lock
out
ret
pop
fisubrs
cmp
repnz
mov
dec
outsb
insl
jmp
jmp
ret
and
mov
test
sbb
mov
fdivs
incl
mov
jne
aaa
imul
mov
jno
add
jno
arpl
jmp
iret
cmp
idivl
inc
lret
in
pop
mov
sub
rcrl
sar
ljmp
adc
inc
incb
mov
sub
jle
stos
call
jns
sbbl
sti
fiaddl
popa
loopne
add
add
add
loopne
jg
ret
mov
adc
mov
pop
mov
fadd
cmp
call
lea
add
inc
sub
push
jo
add
out
lock
xor
inc
es
cmp
icebp
jb
lea
cmpsb
inc
inc
inc
cmp
fbld
ret
inc
jmp
cmp
jge
inc
mov
cmp
cwtl
mov
aas
xchg
test
fldl
mov
mov
scas
push
inc
rcll
fcos
inc
jmp
addl
lock
mov
mov
sar
jns
adc
and
sbb
mov
dec
adc
jno
pushl
sbb
mov
or
aaa
or
sub
adc
mov
aas
movsl
mov
lock
and
adc
jp
fdivrs
movsl
adc
adc
decl
insb
fdivrl
xor
ja
adc
sbb
sbb
or
mov
fldz
in
push
cmp
add
add
jnp
lahf
decl
xchg
jo
dec
pop
adc
sub
mov
mov
sub
loopne
in
xor
push
sbb
mov
adc
in
xor
decb
pop
pop
dec
pop
jo
jecxz
icebp
sarb
jmp
jnp
mov
sub
push
cltd
mov
mov
popf
push
cmp
mov
jg
clc
mov
push
xchg
icebp
inc
dec
sbb
jle
lds
push
jle
jle
xchg
cld
pop
inc
add
in
cmpsb
pop
fwait
dec
fs
incl
incl
inc
and
iret
fmulp
or
sbb
push
adc
cmp
decl
mov
or
es
clts
or
mov
add
mov
cmp
mov
xor
xor
xor
push
add
aam
jae
sbb
mov
pushf
iret
add
incl
pop
mov
adc
mov
or
sbb
adc
clc
jmp
cmc
inc
adc
cmp
out
in
xlat
jle
mov
mov
cmc
pop
test
jg
lds
cmp
jne
mov
inc
pop
test
sar
jmp
push
fisttps
xor
lea
adc
dec
dec
mov
decl
sub
adc
movsb
fwait
in
and
push
adc
or
push
xchg
es
or
or
loopne
pop
out
nop
out
rorl
mov
mov
jl
pop
dec
add
lcall
sub
mov
jno
mov
negl
jb
cmp
enter
and
jg
sub
xchg
cmp
mov
and
xchg
pop
jno
push
loop
jge
lods
ret
xchg
inc
pop
mov
add
or
roll
clc
dec
and
cld
repz
pop
jo
mov
jge
inc
mov
decl
aas
inc
inc
fnsave
fbstp
rcrb
mov
pop
popa
dec
rclb
je
add
incl
mov
pop
ljmp
inc
mov
push
push
movsl
ljmp
aas
cld
jg
fdivrs
cmp
xor
or
sbb
mov
mov
or
or
cli
inc
and
mov
incl
pop
std
insl
bnd
xchg
jnp
push
jne
jb
mov
push
inc
mov
mov
decl
lahf
mov
inc
cmp
or
or
push
movsb
loope
pop
xor
xor
pop
pop
loopne
pop
call
sarb
inc
inc
xlat
inc
test
xchg
sub
add
lds
dec
insb
scas
shlb
sub
sbb
xchg
in
mov
mov
mov
aaa
mov
add
pop
and
clc
cltd
push
mov
add
add
adc
mov
xchg
jae
jmp
movb
push
sbb
push
push
dec
dec
iret
add
icebp
ret
or
andb
inc
mov
incl
ljmp
inc
testl
inc
adc
jbe
pop
mov
xor
inc
mov
lret
push
jno
xor
mov
and
incl
jge
and
lods
sar
ljmp
dec
push
mov
dec
incl
and
icebp
popa
or
cld
sbb
sub
aam
add
call
int
loope
jl
pop
cmpsl
jge
xchg
add
push
adc
or
call
sub
xchg
lods
jbe
test
pop
lods
add
mov
mov
sti
cmp
or
jnp
incl
jne
xchg
xor
mov
ficoms
add
addl
jmp
inc
idivl
fidivrl
gs
cmp
xchg
xchg
sbb
push
out
push
shl
lods
lea
ret
dec
les
in
stos
add
decl
cwtl
inc
add
std
popa
inc
sbb
in
dec
inc
in
mov
shr
mov
xor
incl
fimull
dec
cmpl
pop
and
add
rcr
je
mov
adc
dec
lcall
lcall
dec
call
mov
dec
movb
jmp
dec
mov
insb
inc
mov
add
dec
push
push
testb
inc
adc
adc
ror
inc
mov
push
push
popl
ljmp
adc
push
in
mov
adc
popf
ja
mov
push
imul
or
sub
call
sahf
mov
lock
sub
ucomiss
aaa
ret
xorl
mov
call
cld
or
or
lock
popa
adc
jmp
jae
ljmp
shrb
or
scas
decl
xchg
mov
fsubrs
jb
add
sub
mov
pop
cld
ljmp
add
mov
sbb
rcll
aaa
cli
fcoml
xchg
jbe
frstor
cld
sbb
jl
push
dec
adc
aam
call
mov
adc
lret
cmp
je
call
jp
and
push
mov
mov
stc
je
xchg
insl
inc
inc
add
jmp
xchg
mov
inc
add
mov
mov
push
jno
jmp
xchg
inc
call
pop
inc
ljmp
xlat
aaa
sub
aam
loop
lcall
std
or
mov
popf
test
cmp
incb
int
pushl
xor
jnp
in
or
adc
inc
or
popa
iret
push
pop
iret
dec
lcall
add
jmp
add
xchg
test
or
das
dec
cs
dec
adc
clc
aas
add
and
add
sbb
inc
dec
imul
xchg
cli
dec
das
enter
push
xor
cmpsl
cs
jg
push
sbb
inc
mov
xor
shll
mov
decl
mov
jae
and
in
int3
inc
movsl
call
adc
dec
les
loopne
insb
loop
mov
cmp
jle
mov
ljmp
out
icebp
test
mov
jle
dec
dec
adc
sub
inc
insb
lods
jg
aas
std
xlat
enter
add
sbb
push
repz
push
nop
dec
jmp
call
push
inc
mov
inc
add
enter
icebp
xchg
sub
and
pop
cld
jg
and
pop
inc
out
inc
or
pusha
add
or
aam
lcall
cmp
and
push
mov
mov
cwtl
add
pop
mov
arpl
mov
test
inc
adc
pop
incl
mov
out
add
je
dec
push
inc
test
and
cmp
call
and
roll
mov
mov
jne
test
addr16
insl
xchg
jo
pop
or
decl
jo
jmp
out
push
push
ja
mov
inc
or
cmp
jmp
xorb
lcall
pop
popf
shlb
mov
adc
mov
stos
push
pop
pop
mov
sar
call
es
inc
sub
lret
push
in
negl
add
inc
ljmp
inc
ja
data16
cmp
xchg
or
popf
leave
loope
inc
jne
bound
inc
and
andb
das
pop
mov
aaa
arpl
mov
pop
adc
pushf
lock
incl
cmpsb
push
cmp
jb
and
out
aas
and
and
jg
push
add
mov
cmp
sbb
dec
into
add
push
movsb
jp
int3
mov
add
sar
mov
dec
add
or
dec
inc
js
lods
loopne
jne
movsb
incl
add
mov
push
mov
mov
int3
xor
push
stc
push
lret
or
loopne
mov
adc
add
shll
adcb
xchg
adc
ljmp
jecxz
in
stc
jg
adc
fmul
sbb
mov
enter
and
arpl
aas
sarb
sub
jg
jns
idivb
add
or
sub
sub
negl
aad
and
xor
pusha
into
adc
jno
xor
mov
pop
scas
or
sbb
adc
sbb
pop
int3
jge
pop
mov
inc
xchg
and
jg
adc
and
lret
popa
lock
sub
aas
insl
jecxz
insb
sub
sub
inc
leave
or
cld
mov
ss
stos
decl
inc
popf
loopne
ja
in
or
ss
jmp
or
jmp
cmp
pop
testb
fisubl
inc
mov
stc
jae
ret
aas
inc
lret
mov
xor
pop
aaa
add
incl
fdiv
lods
arpl
sub
push
sub
movsb
mov
push
adc
jo
add
add
cmpb
xlat
popa
incl
cld
add
inc
cmp
adc
outsl
fwait
add
mov
push
and
cmc
test
fnstcw
jns
inc
sbb
or
and
filds
cmp
ss
out
xlat
push
xchg
cmp
add
xchg
inc
into
add
or
ret
jg
jo
addb
xchg
pop
scas
sbb
adc
lret
call
pop
jmp
add
sub
sbb
mov
jnp
and
xabort
test
andb
mov
popf
lret
fucomip
mov
jg
push
adc
jg
out
sarl
xchg
enter
or
test
dec
cmp
jg
call
adc
push
and
or
and
sub
decl
decl
add
cmpsl
push
lods
stos
lds
mov
fs
mov
jg
ljmp
imul
jecxz
mov
mov
into
lods
int3
pop
fldln2
enter
pushl
mov
mov
adc
or
insl
divl
mov
ljmp
lret
fistpll
inc
mov
or
inc
mov
rcr
add
psubsw
incl
jae
xchg
cmpsl
sbb
xor
in
mov
decl
sub
jge
or
mov
stos
push
push
mov
jge
push
sbb
call
push
and
test
inc
mov
cmp
jae
mov
and
fists
sub
es
incl
clc
push
inc
and
cmp
je
sbb
inc
mov
sbb
mov
incl
ljmp
outsl
repnz
pushl
insl
mov
mov
shr
pop
lcall
or
shlb
or
inc
out
scas
loopne
pushf
out
std
dec
dec
xchg
jmp
lock
emms
or
icebp
lea
sarb
add
add
lock
jmp
or
add
movswl
add
dec
jle
lea
fbstp
add
ljmp
std
add
sarl
jle
rolb
cwtl
dec
loop
shl
sub
sar
mov
fcoms
or
orb
inc
ror
inc
dec
sub
xlat
sti
xchg
fdivrl
push
push
adc
pop
aas
cli
push
icebp
ss
sbb
xor
push
test
hlt
jg
pop
js
mov
xchg
aas
or
push
sub
pop
subl
dec
stc
lret
cs
rorb
sub
loop
mov
arpl
and
pop
pop
push
lods
mov
pop
add
jmp
lods
cmpsl
bound
mov
sbb
ja
mov
das
add
shrl
add
lret
cmpsl
push
cmp
setle
add
dec
sub
push
pop
lds
das
or
dec
arpl
sub
add
std
cmpsb
addr16
mov
addb
clc
jg
xor
push
arpl
ja
push
cld
sti
mov
lcall
push
call
lahf
stos
mov
sbb
stos
inc
fdivrl
xorb
mov
decl
lds
jno
mov
test
test
loop
adc
inc
incl
or
push
inc
inc
in
jnp
insb
dec
lea
jne
scas
jmp
mov
fisttpl
es
push
pop
inc
add
aas
mov
pop
adc
adc
in
call
in
mov
call
jmp
movd
fistps
sbb
adc
inc
bound
decl
or
lea
roll
dec
std
ja
adc
push
jbe
decl
dec
pop
sub
or
popa
rorl
and
or
repnz
sar
incl
sub
pop
push
sti
xchg
cs
call
popf
inc
dec
repnz
call
xchg
and
adc
push
call
decl
or
addr16
xor
or
popf
lods
adc
cltd
fstpt
ljmp
les
test
sub
push
adc
xor
pop
decl
jo
add
outsb
xor
inc
xor
sub
adc
inc
ljmp
sbb
ffree
popa
xchg
or
jge
pop
push
in
sti
or
int
sahf
adc
incl
mov
cmp
mov
cmp
inc
sub
add
test
adc
mov
xchg
and
cmp
stos
ljmp
sub
and
push
sbb
push
out
orb
mov
sbb
pushl
nop
xchg
dec
mov
and
lcall
addr16
scas
or
arpl
pop
or
es
or
int
mov
lcall
mov
int
lock
xlat
sbb
or
fdivs
or
sub
decl
mov
mov
pop
mov
mov
shll
mov
push
and
pop
stos
shll
cmp
cmp
lcall
cmp
incb
xlat
xchg
mov
loope
or
adc
and
jg
lcall
sub
sbb
add
scas
mov
adc
jle
push
inc
sti
jbe
add
pushf
jg
jmp
pop
or
dec
xor
pop
in
push
pop
pop
ret
push
xchg
add
cmpsl
clc
call
call
fadds
sub
mov
push
popf
lcall
lcall
cld
xchg
mov
jne
das
je
js
das
xchg
fidivrs
jg
std
add
adc
outsb
rorl
or
pushf
jnp
jo
cmp
add
call
mov
clc
orl
inc
incl
push
push
xor
inc
sub
daa
outsl
push
int
add
lock
inc
sti
adc
lds
push
das
jmp
push
adc
push
and
iret
clts
mov
call
mov
pop
js
fsts
hlt
mov
mov
ficompl
pop
ud0
ljmp
test
push
je
add
daa
cwtl
add
aaa
mov
addr16
mov
adc
xlat
xchg
add
cld
dec
mov
push
inc
in
adc
push
sub
xchg
gs
call
push
push
fcmovne
sbb
dec
sbb
into
pop
xchg
roll
sbb
jnp
dec
add
lcall
cmp
fmuls
xor
cmc
pop
pusha
mov
cmp
or
pop
xchg
sbb
incl
cmpsb
inc
xchg
sub
pusha
mov
andb
nop
mov
frstpm(287
inc
push
jmp
xor
frstor
or
mov
inc
loope
lock
xor
adc
mov
mov
pop
loopne
sub
insb
push
xor
insb
adc
xor
aas
dec
loop
pushl
mov
movl
mov
pop
mov
or
incl
mov
jo
jbe
ret
sbb
hlt
push
and
pushf
mov
cmp
xchg
mov
jmp
adc
mov
sbb
or
and
add
adc
push
scas
adc
sub
daa
push
decl
adc
lea
loopne
and
push
pop
jo
test
xchg
mov
lcall
fstpl
sub
into
push
jnp
inc
inc
loope
cli
xchg
iret
push
mov
lea
insl
decl
movl
fadd
inc
subb
fnstsw
and
adc
jae
inc
insb
dec
xlat
ficomps
jg
and
jbe
push
bound
stos
adc
push
mov
mov
pop
je
jo
adc
sbb
or
pushf
mov
push
lock
dec
sbb
insl
insb
jle
add
or
sbb
pop
adc
hlt
pop
andl
in
jp
loopne
xchg
xor
jg
sbb
lock
mov
daa
mov
mov
and
aaa
mov
push
and
push
decl
mov
fs
adc
or
mov
mov
xchg
jge
lods
mov
imulb
jb
add
or
add
xchg
ret
fs
mov
mov
jmp
inc
xor
gs
sbb
lea
movsb
xchg
fsubrl
mov
loopne
out
cmp
jmp
cmpsl
in
adc
dec
aam
fs
shlb
sbbl
push
lods
cld
lock
xchg
cltd
adc
std
jecxz
xchg
lock
inc
sub
dec
add
jb
ljmp
outsl
push
mov
adc
and
decl
jne
xchg
ljmp
pop
ret
xor
inc
pusha
cmp
lcall
lcall
xor
cmp
jb
jg
shlb
mov
pop
push
jecxz
dec
enter
add
add
sbb
sbb
sbb
adc
jg
movl
and
mov
mov
dec
jmp
jg
pop
push
std
ljmp
ror
imul
ja
sub
dec
xchg
xchg
add
and
scas
fwait
aaa
add
add
mov
loopne
adc
cmc
inc
add
sbb
inc
and
add
or
jnp
push
dec
in
inc
cmpsl
fwait
jo
mov
mov
test
mov
mov
leave
scas
test
shll
push
lods
cmp
in
mov
mov
adc
enter
adc
push
adc
icebp
orl
jae
add
sub
adc
xchg
fldenv
iret
add
imul
loop
lahf
lcall
sub
mov
fldcw
jo
out
pop
dec
pop
call
add
ret
adc
mov
pop
idiv
dec
mov
mov
push
lods
and
pop
push
cmp
jg
sub
popa
push
clc
and
inc
add
and
sbb
adc
addr16
in
cmp
loop
testb
popa
cmp
push
adc
push
sbb
sub
xchg
mov
dec
loope
pop
stos
adc
adc
jmp
inc
dec
int
dec
dec
mov
sbb
add
sbb
xchg
call
cmp
adcb
aam
push
jecxz
cli
or
add
sbb
test
jl
jmp
or
jne
pop
loope
mov
std
pop
mov
icebp
test
add
dec
pop
test
pop
cltd
ljmp
xor
fidivs
int3
pop
das
mov
push
ds
jmp
lcall
test
je
std
push
test
ljmp
test
inc
movb
pusha
and
mov
stos
incl
dec
fdivl
pushf
push
or
cmp
mov
jl
popf
or
or
sub
lcall
cld
mov
dec
or
popf
aaa
insb
sub
xor
cmpb
jnp
incl
add
inc
mov
and
or
xlat
jmp
repz
cmc
in
lods
sbb
sub
jne
lret
aad
stos
pop
aad
inc
sbb
ljmp
push
ret
add
or
mov
inc
incl
sbb
push
lods
adc
insb
loopne
insb
and
in
loop
stos
clc
jmp
cli
jecxz
in
cld
xchg
insl
adc
fsts
ljmp
mov
adc
in
and
lcall
pushl
inc
mov
xchg
mov
xchg
adc
int3
xor
mov
push
mov
aas
mov
addr16
hlt
ret
shrl
aas
push
shlb
sbb
in
mov
inc
call
xor
repnz
int
repz
xor
xor
sbb
call
inc
or
sbb
std
fstp
pop
rclb
rcrl
push
push
fidivs
adc
jo
aad
fldl
adc
push
testl
loope
out
and
ret
jg
or
scas
pop
call
add
lcall
mov
cmp
add
pop
inc
add
mov
sahf
dec
add
inc
pop
xchg
sahf
mov
cmp
push
scas
mov
sar
mov
or
dec
sahf
pushl
arpl
enter
insb
sub
and
pop
loopne
test
or
or
xchg
dec
ss
jg
dec
cmp
pop
inc
inc
cltd
xchg
push
test
enter
dec
jg
cmp
test
push
pop
enter
inc
inc
sub
sub
jo
sub
imul
decl
adc
adc
xchg
loop
mov
jg
sbb
add
decl
adc
stc
dec
in
adc
dec
outsb
negl
xor
ds
loopne
add
out
nop
lcall
adc
pop
addl
sahf
sub
jp
cmp
dec
dec
add
ljmp
cwtl
xor
fstl
adc
outsl
lea
icebp
std
xor
push
push
cs
ret
jge
jmp
fs
jb
and
mov
adc
cmp
fisttpl
mov
pop
addl
and
lcall
cmp
dec
test
jg
outsl
mov
mov
and
pop
mov
movsl
jmp
adc
push
hlt
jmp
sbb
sub
lea
fmuls
push
adc
rclb
inc
xchg
push
mov
mov
push
push
adc
fnstenv
lret
outsb
jae
xchg
push
cmp
push
or
adc
xchg
mov
and
sbbb
mov
cmp
je
jmp
cmpb
add
fbstp
xor
add
push
clc
nop
add
movsb
sbb
pop
inc
inc
sbb
mov
xor
cmp
cmp
inc
mov
cmp
fimull
ds
adc
sbbb
jne
jns
pushl
ljmp
clc
call
lock
nop
stc
lea
inc
insb
popf
test
aaa
or
ljmp
push
fnstenv
fstpt
sbb
jne,pn
jmp
orb
lcall
stc
xor
std
inc
inc
mov
sti
lods
mov
or
inc
push
or
push
push
out
push
fcmovnu
fcmovu
repz
lahf
popf
stc
adc
test
push
cmpsb
sub
int3
ljmp
mov
inc
sbb
mov
call
mov
push
ret
push
int3
and
jl
sti
push
mov
push
push
fldt
fcmovbe
cli
call
jmp
pop
aas
jo
push
fistpl
ret
sub
into
mov
stos
jmp
cmp
clc
decl
and
lret
shl
add
cmp
ja
mov
sub
pop
clc
sbb
xor
lcall
inc
xor
test
sbb
sub
mov
push
test
incl
cld
mov
or
insb
loopne
and
mov
outsl
fcoml
fisttpl
decl
mov
imul
lock
in
sbb
mov
mov
inc
lret
sbb
sbb
arpl
test
jecxz
mov
incl
jb
push
push
je
repz
jne
sti
adc
ljmp
dec
ljmp
mov
dec
dec
mov
lret
adc
pop
cmpb
inc
setne
ret
or
lea
flds
ret
pop
add
or
pop
ja
inc
std
lcall
loopne
mov
ja
ds
add
or
mov
pop
sti
xchg
loopne
cli
incl
inc
or
stos
push
xchg
bound
sub
mov
outsb
cmp
imul
decl
pop
and
jecxz
push
inc
mov
push
sti
cld
jnp
mov
adc
nop
and
mov
pop
fsubrl
test
out
or
shl
fcoml
push
adcl
les
jno
ss
pushf
push
sbb
sbb
lcall
loope
jmp
mov
lea
cmp
adc
hlt
loopne
incl
or
cmp
movsb
push
popa
mov
sbb
push
sarl
add
loop
sub
data16
movb
arpl
and
push
push
mov
rcrl
stc
pop
outsl
js
mov
push
xchg
inc
rclb
mov
outsl
movsl
test
cmpsb
add
je
jmp
incl
movsb
adc
xchg
imul
mov
cmpsl
jg
add
lock
enter
adc
push
add
imul
add
outsb
pop
and
sbb
jmp
pop
arpl
add
add
jmp
aas
mov
daa
pop
je
mov
cmp
mov
sub
add
pop
push
cs
pop
sub
rcrl
fiaddl
test
popa
pop
inc
sbb
push
loopne
push
inc
jns
add
mov
cmpsl
sti
sub
add
fwait
jb
test
pop
js
sbb
inc
mov
push
imul
outsb
push
rorl
mov
xchg
mov
cmpsb
mov
gs
idiv
cmpsl
and
push
jmp
movsl
pusha
or
lret
mov
in
sub
dec
faddl
jge
or
inc
jmp
outsb
add
jg
ljmp
jle
sbb
or
push
sub
out
movb
pop
cmp
decl
mov
sbb
jecxz
and
in
test
nop
sbb
lcall
inc
inc
pop
add
push
xchg
int
out
dec
mov
pop
mov
xchg
in
ret
sub
dec
add
mov
mov
std
adc
push
xchg
cs
or
or
leave
dec
xor
cli
mov
adc
mov
nop
shll
cmc
mov
xchg
mov
push
iret
sarl
mov
lcall
mov
adc
mov
mov
mov
addl
outsb
insl
lock
adc
ljmp
cmp
mov
cmp
out
sbb
dec
xchg
dec
call
incl
rorb
lods
lea
out
shll
out
mov
addr16
cmp
call
sub
xchg
pop
sub
popa
loop
jl
fistps
jl
add
xchg
pop
add
lcall
popa
test
shl
or
push
dec
mov
pop
je
push
mov
jl
fbstp
cli
jg
clc
lahf
in
jb
shll
jb
call
pop
inc
jne
jns
and
cmp
adc
add
and
fs
ljmp
iret
test
mov
lahf
dec
add
test
incl
rol
sahf
mov
push
dec
add
mov
loope
adc
pop
js
push
xor
repz
cmp
pop
fistps
ds
fmuls
cld
pop
jmp
pop
loop
xor
or
subl
jp
sub
jns
xchg
lcall
sti
xchg
dec
add
mov
push
mov
or
outsb
push
jmp
fsubrs
ljmp
cmp
sbb
xchg
sub
add
pop
incl
adc
loop
andb
adc
inc
inc
dec
inc
test
ljmp
loope
negb
push
cmp
test
movsl
int3
mov
rcrl
inc
or
jmp
cli
dec
leave
flds
xor
int3
ja
fdivrl
decl
mov
mov
stos
icebp
cmp
mov
mov
xchg
mov
je
ss
aas
ljmp
sub
pop
sarb
mov
push
imul
jmp
call
psubb
jecxz
clc
out
adc
push
jbe
adc
mov
push
out
cmp
decl
cli
sub
inc
test
imul
add
outsl
pop
sbb
outsl
dec
mov
sbb
je
and
out
and
dec
xor
xchg
arpl
incl
movsb
adc
and
lret
dec
and
aas
or
push
rcll
stos
xor
adc
test
inc
data16
jg
cli
or
mov
data16
sbb
sbb
decl
sbb
adc
roll
nop
dec
addr16
aas
pop
cmpsl
mov
cwtl
cmp
stos
arpl
inc
push
jmp
cmp
sbbb
push
std
or
jne
mov
sysenter
mov
pop
call
jg
test
adc
or
int
lds
lea
xchg
adc
jns
cmpb
call
push
mov
jo
fildl
cmp
dec
in
push
stos
inc
movsl
lds
cmpsl
jnp
pushl
cwtl
push
adc
sbbl
or
and
xor
out
xorb
xchg
movsb
mov
mov
jo
or
sbb
out
cmp
sahf
push
test
and
cwtl
pushf
mov
fimull
enter
loope
push
pop
mov
mov
xor
mov
push
sub
sub
pop
andb
xchg
loopne
sub
inc
adc
nop
mov
sarb
decl
mov
cld
lret
adc
jge
cltd
jg
cmp
push
lds
decl
pop
sub
add
sbb
mov
mov
xchg
daa
stos
sub
or
call
lods
flds
test
movsl
lea
jge
imul
movb
incl
in
jecxz
or
gs
xchg
jge
cs
cmp
aaa
jne
mov
decl
sbb
insl
int
mov
pushf
in
jnp
cld
ljmp
cmp
shll
sub
adc
sahf
adc
addl
adc
jge,pt
std
jmp
sti
popa
ljmp
adc
cmp
or
lret
enter
or
int
jge
add
adc
cmp
dec
xor
sti
insb
sbb
lods
cmp
mov
enter
repnz
add
jmp
adc
or
jmp
iret
nop
add
and
or
call
and
ret
mov
and
aaa
dec
jle
mov
cld
jmp
cmc
pushl
sahf
pop
inc
xchg
lods
add
and
test
add
fsubrl
pop
cld
repz
outsl
jg
or
sub
test
call
cmp
cmp
adcl
push
cmp
pop
test
incl
and
add
mov
lock
push
call
ret
inc
dec
flds
pop
adc
mov
inc
jns
mov
add
pushf
in
in
sbb
test
jmp
inc
push
dec
js
jmp
mov
nop
addr16
bound
and
mov
add
add
decl
sbb
push
pop
dec
sbb
xchg
les
cmc
add
stos
call
dec
jge
or
add
add
sbb
mov
jmp
decl
add
pop
and
sbb
lock
xor
lea
outsb
je
adc
push
adc
adc
sub
divb
cmp
dec
addl
lods
or
cld
jmp
adc
jb
popl
es
inc
iret
sub
xor
adc
or
or
pop
clc
cli
xchg
xchg
xor
and
push
int3
dec
push
dec
sub
and
scas
roll
jg
loop
aas
sub
in
imulb
leave
or
test
pop
mov
adc
and
mov
inc
and
aam
push
mov
add
or
adc
jno
mov
incl
call
sub
pop
inc
decl
fsubrl
add
mov
in
mov
ret
call
cli
cmp
call
xchg
fisubrs
push
push
test
push
dec
loopne
sub
scas
incl
sbb
push
or
aas
sbb
dec
push
push
jmp
cli
mov
push
push
mov
xor
popa
push
push
mov
pop
push
jg
call
sub
or
les
insb
push
sub
and
call
out
adc
sti
mov
lods
jo
mov
std
add
ljmp
or
sub
xor
adc
mov
xor
test
push
dec
mov
stos
incl
stc
psrld
lea
outsl
rclb
inc
int3
movl
jb
pop
sbb
cmp
les
das
or
lea
leave
decl
add
mov
enter
inc
ret
pop
outsl
or
mov
pop
add
incl
or
sbbl
mov
xchg
ret
call
jmp
ds
test
adc
sbbb
cltd
sbb
jns
dec
xor
jne
decl
incb
inc
lods
add
mov
inc
or
movsl
xchg
ret
and
or
incl
sub
cmpsl
and
pop
mov
lgs
pop
pop
xor
ljmp
add
mov
or
jl
push
xchg
adc
test
jb
repnz
mov
push
dec
add
sbb
incl
cld
test
arpl
jmp
nop
jo
cmc
and
pusha
cmp
cld
std
movsb
test
cli
mov
js
push
jmp
xchg
push
jnp
xchg
fists
lcall
adc
and
add
jmp
lods
adc
sbb
incl
std
loope
jno
das
cmp
bnd
inc
or
ljmp
adc
inc
push
sub
dec
push
pop
sahf
lret
jp
lock
ss
push
add
push
dec
dec
cmp
cmp
mov
jge
mov
add
out
sub
and
mov
orl
or
lock
or
mov
pop
leave
cmp
orb
pushl
dec
add
insb
in
das
xor
mov
sub
incl
sbb
shrb
cmp
inc
fmuls
mov
insl
xchg
test
mov
leave
push
incl
xor
dec
mov
cmp
rorl
cmp
es
movsb
mov
movsl
cmp
xchg
or
xor
ljmp
push
xchg
mov
adc
out
add
fwait
cmp
pop
xchg
dec
pop
and
jmp
jne
jp
and
cmpb
ret
cmp
xchg
push
int
movsb
js
mov
shll
dec
inc
call
mov
jle
lods
insb
jp
and
push
loopne
sbb
cmp
sbbb
ljmp
test
pop
inc
iret
push
fildll
pop
push
push
jg
mov
inc
movl
pusha
mov
pop
sub
aas
and
xorb
call
int
jb
roll
cld
add
mov
inc
fneni(8087
xor
sub
rolb
mov
push
and
ficoms
pop
xchg
mov
pop
mov
mov
push
ret
fiadds
stos
xor
add
clc
repz
test
add
jg,pn
lcall
pop
dec
sbb
mov
push
jbe
push
and
add
call
sbb
or
jne
in
mov
hlt
and
daa
cmp
or
jmp
xchg
popf
fnsave
push
shl
and
fisubrs
inc
xchg
cli
in
out
pop
repnz
sub
pop
sarb
inc
or
das
push
pop
add
leave
add
push
and
inc
jg
enter
inc
repnz
sub
inc
ret
adcb
push
add
fdivs
daa
addb
and
jg
stos
cmp
add
cli
std
jmp
push
pop
jmp
popa
and
movsb
in
push
mov
addl
jmp
rorb
out
out
in
or
cmp
imul
call
or
and
mov
jne
push
call
call
clc
idiv
jmp
add
in
pop
test
dec
mov
inc
push
orb
mov
push
test
xor
cmp
cmp
add
add
push
adc
or
pop
or
pop
or
aas
jp
popf
pushf
shll
inc
cmp
mov
mov
sbb
jmp
mov
inc
nop
mov
dec
jo
sarb
addr16
std
decl
sbb
adc
mov
dec
cs
push
adcl
jg
aas
clc
lcall
add
shl
popa
add
sarl
inc
push
cmp
mov
lds
xchg
push
les
test
jg
sar
push
shl
or
popa
les
push
sar
add
cmc
xchg
inc
lods
mov
outsb
int
cmp
push
or
mov
flds
and
xchg
push
sbb
and
and
mov
jmp
inc
mov
jl
insb
je
clc
lret
push
sub
imul
inc
adc
jmp
push
or
xchg
fists
pop
inc
popl
nop
and
incl
or
loopne
push
or
cmp
enter
pop
sub
aas
lea
xor
mov
add
pop
inc
push
jecxz
aad
adc
jp
in
lods
pop
jmp
inc
loop
iret
ret
or
mov
aaa
pop
adc
sbb
mov
lcall
data16
add
mov
lods
pusha
or
jge
cmpl
mov
sbb
in
nop
shl
jmp
cli
call
push
mov
push
insl
sbb
hlt
fs
jbe
lret
adc
inc
aas
jecxz
aad
arpl
inc
aaa
lcall
and
sbb
stos
and
jmp
xlat
jbe
add
dec
test
repnz
jecxz
dec
dec
lods
lahf
or
mov
sbb
sbb
fcomp
insb
jae
call
or
jae
xchg
cmpl
sbb
mov
pop
inc
dec
insl
add
pop
ret
movsl
cmpb
decl
mov
das
or
std
iret
mov
push
mov
push
cltd
mov
insb
pop
xlat
out
dec
in
add
ja
mov
sub
cmp
aas
notb
add
or
or
cmc
lcall
jno
decl
pusha
push
pop
inc
stc
jns
add
xor
mov
or
out
sub
lock
call
decl
push
xchg
fwait
or
sbb
add
das
push
mov
adc
incl
jle
shll
xchg
or
push
enter
ret
in
or
push
addb
add
insb
and
pusha
xchg
jle
jnp
call
inc
add
jg
pop
rorb
insb
and
add
push
or
add
loopne,pt
scas
or
ljmp
cltd
repnz
shlb
adc
rolb
lds
ret
neg
lcall
add
inc
xchg
aas
cltd
sub
inc
ret
cmp
insb
push
movl
mov
jmp
lcall
adc
adc
push
push
mov
cmp
sbb
push
lea
pushl
or
bswap
test
fldl
or
inc
mov
mov
xchg
xchg
mov
ret
jmp
into
mov
mov
sbbb
ja
lods
jnp
loope
aas
or
mov
cmpsl
xor
cmp
loop
int3
and
jmp
mov
push
aam
ljmp
adc
loopne
jb
std
add
and
dec
xchg
gs
push
xchg
iret
stos
sub
jns
jl
add
or
inc
repnz
add
pusha
pop
pop
jmp
inc
jnp
push
or
or
test
mov
mov
incl
pop
or
xchg
mov
test
xor
pop
les
and
lea
adc
lods
jmp
jg
push
mov
imul
or
push
or
movsl
daa
sbb
sbb
jnp
pop
mov
dec
or
inc
sub
movsb
push
repnz
test
sarl
sub
test
flds
xor
push
jno
add
mov
iret
mov
jmp
inc
dec
xor
add
xor
arpl
jge
popf
jl
outsl
mov
add
jno
iretw
jae
in
xor
aas
inc
and
daa
rorl
or
mov
addr16
hlt
and
lcall
loopne
add
fs
xor
dec
add
and
xchg
cld
inc
mov
and
mov
out
add
jg
xor
and
cmc
test
sub
movsl
std
scas
pop
call
leave
push
xor
mov
jp
xchg
add
mov
add
push
repnz
add
call
clc
mov
bound
push
sub
shll
jmp
cli
incl
xchg
add
adc
adc
mov
sub
inc
lcall
rcrl
push
push
sub
ret
pushl
hlt
sbb
nop
cmpsb
dec
pop
pop
cmp
ss
add
ljmp
xor
ud0
dec
or
and
adc
aad
lods
lcall
mov
adc
sub
mov
inc
pop
jae
mov
jne
adc
call
jo
push
pop
ror
pop
mov
sti
flds
sbb
lea
in
jnp
pushf
decb
inc
popf
popf
das
add
sub
or
pop
xor
add
cmp
cld
pushf
ljmp
push
push
push
jb
loopne
lret
es
dec
pushf
push
jne
sbb
je
popf
adc
cmp
adc
pop
cld
decl
daa
and
mov
aas
dec
mov
pushl
enter
rol
sti
insl
mov
sbbl
pop
imul
add
call
or
sub
adc
popf
cmp
fnstsw
sahf
xlat
pop
or
jae
flds
lcall
pop
mov
push
test
sbb
push
das
sub
mov
sarl
pop
bound
mov
push
jae
test
sub
decl
adc
loope
pushf
push
push
push
push
test
add
aad
sbb
jmp
adc
ret
add
xchg
test
rol
mov
cmp
push
aam
push
push
adcb
sbb
sub
pop
cld
mov
dec
aad
inc
sub
xor
jmp
add
notb
mov
loope
nop
sub
in
push
push
pop
jbe
jg
jmp
lret
movsl
movsb
imull
fsts
call
leave
sbb
test
in
shlb
sub
outsl
stos
mov
stos
and
roll
lret
xor
mov
inc
enter
mov
xor
pop
sbb
in
mov
fdecstp
mov
mov
push
sbb
and
lcall
push
sbb
inc
add
push
cs
inc
sub
pop
loopne
es
jg
cld
xchg
jg
lcall
mov
in
sub
dec
jle
pop
dec
adc
call
xor
pushl
and
cltd
loopne
call
inc
cmp
lock
jmp
call
sbb
popf
arpl
push
pop
sbb
pop
fistpl
push
adc
inc
lcall
sarb
inc
setg
xchg
enter
sbb
call
adc
jno
mov
sub
pop
mov
ret
sub
test
mov
sub
leave
push
repz
add
clc
inc
mov
mov
inc
jmp
sbbb
dec
lds
in
jb
call
popa
adc
jno
sbb
aad
or
jne
push
popf
stos
loope
sti
push
sub
dec
sbb
or
clc
or
sub
push
xchg
cmp
es
mov
ljmp
out
aaa
dec
mov
xchg
add
ljmp
insl
push
bound
js
jp
aam
mov
sbb
pop
push
adc
mov
dec
decl
hlt
sbb
jnp
outsl
daa
out
cmpsb
call
add
push
incl
decl
lods
test
mov
out
add
repnz
imul
or
test
or
stc
in
add
fisttpll
xchg
push
mov
pcmpeqw
in
xchg
movsl
popf
sbbb
jl
jmp
cmp
adc
jmp
decl
push
test
bound
lret
pop
adc
sbb
js
sub
lcall
incl
mov
mov
bswap
adc
aad
arpl
roll
add
jecxz
mov
call
or
cmp
hlt
jnp
xor
and
mov
xor
add
jg
sbb
cmp
xchg
gs
decl
add
xchg
dec
outsl
adc
adc
and
inc
lods
add
or
mov
or
jp
add
icebp
jmp
push
jg
insl
pop
sbb
inc
fisttps
add
ds
adc
and
mov
jmp
pop
sbb
mov
lret
and
jle
addr16
decl
enter
enter
sar
call
add
inc
ss
rclb
pop
jnp
sbb
fcmovnu
inc
mov
sub
lcall
adc
scas
rcll
push
mov
or
outsb
xor
insl
sub
push
mov
in
add
or
andb
ds
fistpll
adcb
jg
jp
ret
or
popf
jmp
or
cs
out
insb
ss
addb
ljmp
jb
adc
hlt
mov
sbb
xcrypt-ofb
cmpsl
stos
rorl
pushf
jnp
pop
ss
cld
lcall
inc
stos
lods
push
and
add
das
or
movsb
push
inc
xchg
and
xchg
sub
ljmp
mov
das
sahf
mov
mov
adcb
mov
pop
int
mov
xor
add
rcll
cmp
lcall
dec
jbe
push
daa
and
daa
mov
pop
ss
mov
push
add
incl
push
sub
mov
jmp
fwait
dec
push
mov
sbb
pop
arpl
subb
decl
mov
add
mov
rcrl
jb
add
push
mov
lcall
dec
xlat
mov
insl
daa
inc
add
imul
adc
or
std
push
jge
pop
sbb
pop
adc
mov
dec
push
push
sbb
or
stos
stc
and
lcall
shrl
mov
xor
enter
xchg
outsl
mov
pushl
dec
adc
mov
out
mov
xor
sahf
out
sub
call
push
jo
and
xor
nop
rol
sub
add
add
lcall
ret
jae
xor
jo
les
lea
sbb
jle
ljmp
xchg
or
jo
inc
push
pop
xchg
xchg
jp
xorb
int
sub
xchg
mov
cmp
sbb
loopne
and
mov
inc
sbb
pop
mov
push
pushl
push
adc
or
pop
pop
sub
nop
loopne
mov
sbb
jb
dec
inc
push
cmp
sarb
sub
mov
pop
ss
lock
push
decl
mov
sbb
mov
adc
cmp
lret
jnp
push
icebp
and
ljmp
dec
mov
jne
ja
cmpl
push
inc
fs
cmpsl
sbbb
and
xorl
jb
xchg
xchg
inc
sbb
and
fisttps
sbb
imul
jne
inc
jle
xchg
mov
mov
push
std
mov
aam
xor
pop
and
push
fistpll
dec
pop
ret
outsb
push
and
xchg
mov
and
add
sar
decl
sub
add
imul
mov
adc
jmp
or
xchg
or
push
pop
enter
data16
nop
sbb
sub
cltd
idiv
jg
call
adc
fistl
daa
dec
add
mov
add
call
dec
push
mov
inc
add
mov
mov
push
dec
pop
mov
lcall
push
or
push
and
cmp
lcall
push
dec
jbe
dec
test
pop
mov
out
loop
dec
push
or
pop
push
leave
sbb
scas
pop
pop
je
cmp
mov
cmpsl
popf
mov
icebp
js
cmpsb
dec
aad
jmp
xor
aad
cs
xor
mov
das
add
mov
fmul
cli
push
rclb
mov
rol
or
loopne
jl
cmpsl
push
mov
inc
pop
test
mov
popf
jne
mov
in
and
push
xchg
sbb
cmc
pop
call
data16
nop
mov
sub
test
andb
enter
das
aad
dec
add
jnp
cmpsl
cmpsb
or
mov
pushf
sbb
or
test
test
stos
cmp
incl
and
imul
push
xor
sub
jg
mov
xor
jg
inc
xchg
adc
xlat
or
pop
mov
jp
dec
push
jb
fcoms
aam
and
in
mov
adc
mov
cwtl
xchg
aam
pusha
lret
enter
hlt
cmp
clc
decl
sub
sub
lds
aam
mov
out
xor
xor
xor
push
xor
xchg
pop
add
xchg
jno
cmp
xorb
mov
add
stos
and
push
filds
lcall
or
sbb
push
or
push
or
mov
pop
ret
test
inc
call
or
ret
cmp
jmp
jb
cli
mov
testb
adc
cs
incl
mov
das
push
adc
cmp
rorl
jge
add
add
push
cmp
inc
mov
call
int3
push
sbb
mov
mov
jmp
pop
inc
mov
add
sti
dec
push
xlat
lds
insb
fucomi
adc
adc
adc
mov
call
sub
shrl
sub
xlat
push
pop
cli
jmp
clc
scas
push
ljmp
or
add
add
inc
cld
cmp
mov
cli
xor
and
push
out
lcall
xor
inc
cmp
adc
dec
inc
push
inc
sbb
push
ret
jbe
pusha
and
cld
cmp
cmp
repz
loopne
scas
mov
xchg
mov
xchg
clc
andl
dec
out
inc
filds
jg
dec
push
sbb
lcall
fcomi
incl
mov
int3
or
jne
int3
int3
cmp
jge
jmp
xchg
push
daa
test
insl
jg
lcall
test
mov
repnz
adc
in
xchg
cli
ljmp
pop
sub
sub
mov
repnz
aaa
sbb
mov
mov
inc
xchg
xchg
or
dec
mov
scas
and
add
and
and
repz
ljmp
pop
add
or
popa
lret
inc
mov
or
shl
fdivs
incl
adc
and
add
inc
sub
sbb
repnz
sub
shl
std
lcall
dec
fdivrl
mov
clc
inc
push
in
xchg
out
nop
push
pop
mov
mov
negb
aad
inc
movsl
lcall
call
inc
cld
popa
push
push
dec
cltd
sbbl
xchg
mov
jmp
call
inc
pop
adc
jle
jno
test
mov
add
loope
incl
mov
data16
sti
add
cltd
daa
es
nop
mov
fsts
cld
call
arpl
add
lds
pop
xchg
imul
or
sub
add
nop
outsb
decb
add
or
hlt
lds
pushw
inc
hlt
bound
xchg
or
pop
xchg
pop
add
mov
sbbl
dec
jl
ret
pop
add
and
sub
dec
push
ljmp
fldl
inc
sbb
push
dec
push
jno
add
call
push
inc
andl
lcall
std
pusha
adc
les
sbb
push
pop
inc
dec
push
add
aas
das
stos
lcall
mov
adc
mov
push
dec
mov
cmp
mov
notb
cmp
add
jle
lock
inc
les
mov
mov
mov
hlt
inc
stos
in
push
adc
rolb
aad
sbb
sahf
jne
clc
fldt
lcall
jmp
push
int3
adc
insb
mov
int
push
or
dec
mov
lods
mov
sub
mov
popf
mov
mov
jmp
pop
push
rorb
mov
decl
std
movsl
add
mov
inc
shll
pop
jo
loop
cs
jne
call
pop
movsb
leave
push
fcomps
popf
or
es
iret
das
xor
inc
cwtl
lcall
icebp
aas
mov
daa
rcl
ret
fwait
imul
dec
dec
and
lock
or
or
add
lahf
and
jne
pushl
int3
xchg
sbb
fnsave
push
cld
shlb
imul
pop
addr16
pop
incl
dec
stos
sub
sarb
push
sub
inc
test
in
inc
pop
cmp
fs
lock
in
movsl
mov
mov
add
inc
jecxz
xor
mov
loop
xor
cmpsl
jns
jg
mov
mov
addr16
xchg
adc
pop
jge
mov
pop
call
add
or
inc
add
ljmp
inc
sub
push
add
loop
adc
jg
dec
inc
cmp
pusha
pop
jmp
loop
inc
add
lds
push
mov
fisttps
push
shrl
xor
test
sub
jmp
inc
push
adc
in
push
inc
jbe
push
hlt
xor
pop
push
cmp
enter
lahf
test
adc
xlat
and
push
inc
adc
jmp
aas
cmp
stos
fs
les
mov
adc
add
std
fsincos
leave
aaa
cmp
ja
adc
fcoms
lcall
or
jle
lds
sub
push
or
outsb
jle
dec
xlat
ud0
ljmp
aaa
adc
mov
pop
push
mov
cmc
inc
je
sub
lcall
call
pop
sbb
mov
jae
loope
fmuls
push
jle
sbb
roll
mov
push
repnz
add
movl
cld
inc
pop
add
pop
jl
ljmp
test
add
lcall
cmp
mov
jl
jle
dec
xchg
mov
rclb
lcall
in
push
mov
leave
push
push
xchg
cld
jbe
inc
jle
hlt
mov
add
inc
push
icebp
or
push
push
and
pop
xchg
push
lcall
cltd
out
lock
dec
jl
add
in
jo
ret
sub
add
mov
pop
and
fdivrl
rcrl
clc
incl
sbb
and
leave
or
push
mov
call
lods
test
jg
repnz
pop
xor
sbbl
pusha
and
jns
lods
mov
pop
enter
mov
push
inc
mov
fistpll
inc
push
rolb
mov
je
test
out
mov
std
sub
sbb
push
pop
mov
xchg
cmp
movl
inc
rcrb
sbb
jmp
ljmp
inc
adc
fwait
ds
pop
inc
fidivrs
cmp
jge
or
mov
ljmp
lcall
sti
sbb
mov
add
fsubl
dec
mov
decl
mov
orl
daa
sub
add
xchg
ss
jmp
push
sub
mov
fmuls
inc
ljmp
testl
das
pop
mov
push
jns
jnp
cmp
movl
mov
xchg
add
lock
pop
test
addr16
sbb
xchg
dec
jl
pop
mov
push
aas
clc
call
or
ljmp
jge
nop
dec
mov
adc
clc
aas
std
ret
pop
add
aas
into
lea
and
lahf
push
shll
push
push
lods
and
mov
inc
in
iret
pop
lock
or
rorl
jle
mov
xorb
and
xchg
cmp
sar
xchg
rolb
inc
jbe
call
and
sub
add
push
push
mov
dec
push
insb
fcoms
sub
xor
scas
shll
mov
cmpsl
decl
test
sbb
sub
push
add
adc
pop
loope
das
lcall
dec
enter
add
pop
adc
cmp
jnp
into
popa
incl
aam
pop
orb
jo
push
aaa
subl
mov
xor
dec
and
xor
sub
lea
and
call
dec
popa
mov
ds
cwtl
dec
xchg
je
pushf
and
mov
lds
daa
xor
jg
ljmp
das
xor
add
fstpt
sbb
das
xchg
sub
xchg
cmc
decl
je
sbb
adc
test
mov
jg
or
adc
push
add
mov
push
or
test
test
enter
jmp
loopne
push
daa
pop
pop
popf
popf
pop
loop
das
adc
jp
xchg
and
xor
mov
xor
adc
add
xchg
mov
cmpl
and
inc
dec
cmp
jle
push
icebp
push
xchg
dec
mov
push
pop
add
les
ss
cmp
mov
push
adc
ud2
std
and
inc
ljmp
jne
adc
jg
or
pop
xor
insb
popa
dec
mov
rorl
jo
add
xacquire
mov
ud0
cld
jmp
cld
jmp
mov
add
mov
and
rorl
push
or
sbb
incl
aaa
pop
or
cmp
mov
ret
cli
lods
andb
or
shrl
icebp
push
int
push
stos
testl
dec
div
inc
sar
jns
scas
sub
jmp
ja
push
cmc
cmp
sbb
call
adc
or
fadds
inc
cwtl
dec
add
or
out
std
cmp
sbb
sti
cwtl
inc
jmp
push
sub
push
sbb
or
fidivrl
mov
inc
mov
jp
inc
dec
arpl
and
dec
popf
inc
jl
lock
rorb
xor
sbb
inc
pop
inc
call
inc
fdivl
xchg
cltd
mov
add
add
pushl
xchg
and
sub
rcl
incl
pop
and
aas
insb
das
lret
fdivl
dec
cld
aas
mov
jle
pop
push
inc
imul
jo
add
hlt
sub
pop
mov
jne
incl
push
cli
vpshlq
hlt
push
jl
mov
adc
aaa
negl
incl
hlt
sar
mov
sbb
fs
pop
cmp
cmc
sarb
ret
pop
popf
sbb
mov
stc
push
insl
dec
dec
mov
mov
or
incl
icebp
cmpsb
dec
mov
pop
lods
orb
adc
adcl
mov
cmp
pop
xor
pushf
push
fwait
adc
sbbl
mov
decl
hlt
inc
and
cmp
dec
inc
inc
xchg
adcb
dec
in
add
pushl
mov
lahf
and
sub
and
adc
or
cmp
pop
mov
lock
pushf
inc
in
ret
push
adc
lds
ficoml
inc
popf
fwait
in
add
sar
decl
xor
fidivl
or
dec
push
push
and
mov
fadds
cs
cli
data16
inc
push
adc
test
inc
adc
cmp
pusha
and
or
lcall
fs
sbb
daa
add
stos
pop
movb
sbbl
and
lea
cmpsl
or
add
cmp
and
xchg
mov
outsl
sbb
ljmp
jg
push
aam
add
inc
mov
push
pop
insb
inc
enter
icebp
decl
movsb
sub
inc
pop
add
lea
mov
cld
fdivrl
jmp
push
push
lods
arpl
or
add
stos
in
pop
adc
push
orw
push
or
scas
pushl
mov
bound
pop
dec
in
cmp
in
inc
inc
or
mov
and
dec
sub
sub
adc
adc
addb
push
cmpl
test
or
push
pushl
adc
lock
push
mov
outsl
dec
xor
sbb
and
add
movsb
jo
push
mov
ljmp
adc
rcll
push
add
inc
or
mov
std
incl
sbb
xlat
sbb
loop
push
xorb
xchg
cmp
icebp
les
aaa
xor
adc
adc
jmp
dec
pop
pop
sub
and
xchg
add
lock
sbb
or
and
push
push
incl
cld
jle
jne
lret
stos
dec
inc
adc
pop
pusha
nop
xchg
cld
in
lea
sub
push
sbb
push
xor
test
leave
nop
das
xor
in
xchg
sbb
test
add
inc
in
mov
mov
bound
mov
nop
mov
les
or
pop
in
fwait
in
jmp
add
lock
sbb
pusha
xor
pop
jbe
scas
decl
lock
add
fs
inc
xor
imul
sar
daa
dec
inc
or
addl
aas
fists
mov
sub
mov
mov
mov
inc
pusha
sbb
ljmp
divl
sbbl
call
cmc
mov
shrb
sti
sbb
jne
mov
push
ljmp
pmuludq
lret
scas
sub
jno
inc
imul
rclb
push
arpl
mov
rcl
or
daa
xchg
push
in
fsubrs
or
imul
call
cmp
xlat
insb
inc
dec
sub
rcll
or
cli
fcoml
adc
aas
cmp
rolb
int
push
lds
pop
jns
daa
rol
jmp
loop
pop
sbb
addb
imul
decl
sbb
inc
dec
xor
loope
call
add
and
push
xchg
pop
and
cmp
imul
loopne
ja
imul
sub
xor
icebp
dec
add
adc
add
aam
cli
mov
sti
pushl
pop
add
or
fimuls
in
decl
jmp
or
jl
xchg
fldl
aas
inc
add
jbe
adc
lods
xchg
roll
loopne
gs
ret
hlt
jnp
lods
add
jecxz
push
pushl
mov
and
inc
push
sbb
stc
add
pop
jmp
jg
stc
or
push
or
and
leave
ljmp
push
add
or
lcall
add
adc
daa
pop
loope
add
push
in
ljmp
decl
dec
aaa
in
add
test
or
cmp
sub
enter
cld
pushl
adc
rol
mov
push
mov
out
add
mov
dec
fdivrl
aad
xor
cwtl
add
call
sub
fisttps
gs
sub
test
out
stos
dec
pop
xchg
cmpsl
dec
jne
shr
pushl
clc
jmp
or
or
roll
cli
dec
inc
jnp
mov
jmp
push
push
icebp
scas
jne
xchg
adc
dec
jne
pop
add
sub
clc
cs
popa
ret
enter
imul
add
jne
jge
scas
jb
mov
cmp
test
mov
loop
jl
popa
jne
negl
sub
sbb
ljmp
sub
mov
mov
adc
pop
dec
enter
jne
inc
jge
insb
or
je
xchg
xor
inc
in
xor
cli
les
xchg
stos
jmp
add
outsb
cld
push
sub
mov
adc
jne
fchs
cmp
jmp
mov
dec
inc
mov
add
leave
push
mov
push
pusha
pop
inc
jg
cmp
dec
adc
xchg
rcrb
incl
and
loopne
inc
loop
mov
sub
xchg
sbb
sub
decl
dec
dec
adc
in
incl
sbb
insl
xchg
ds
sbb
fmul
push
sub
call
adc
cmp
add
mov
jg
inc
mov
clc
pop
out
jne
popf
jne
xchg
scas
xor
and
mov
inc
xor
decl
xor
adc
pop
fdivrs
pop
decl
jl
push
sbb
scas
push
out
push
add
decl
or
mov
xor
push
ljmp
cmpsl
fisttpl
cmp
lcall
les
insb
fsubrs
sub
adc
cmp
dec
adc
inc
mov
lock
pop
sub
lds
mov
sbb
cli
loopne
and
pop
cmp
inc
loopne
adc
mov
jle
lock
fs
das
mov
call
stos
mov
scas
lock
call
fmull
inc
jno
stos
ret
or
jo
andb
or
mov
arpl
call
stos
push
and
pushl
iret
pop
shrb
pop
jmp
incl
jae
mov
scas
mov
mov
rolb
jecxz
jge
subps
jmp
mov
dec
add
lods
add
inc
jnp
cmp
inc
mov
ret
aaa
dec
adc
pop
out
dec
mov
xor
or
sar
clc
pushf
xor
jb
mov
sub
sbb
dec
sbb
jnp
sub
fmuls
inc
arpl
push
add
xchg
shr
in
push
rcrb
arpl
nop
ljmp
pop
lcall
xchg
add
mov
add
xlat
sar
mov
add
add
pop
jecxz
decl
pop
gs
movb
ljmp
jecxz
mov
inc
call
lods
push
add
and
pop
push
jo
cmc
push
cmpb
sub
sti
popa
test
dec
sbb
iret
dec
cmp
mov
xor
arpl
sbb
add
pop
lcall
xor
addb
and
add
rorl
dec
loop
sar
push
lcall
and
out
jp
jae
push
aad
xor
imul
adc
movsl
adc
pop
incl
movsb
and
inc
nop
jg
mov
jg
lods
push
push
push
js
sub
inc
pop
ss
sbb
sar
lcall
mov
andb
aam
fdivr
push
cmp
loopne
xor
push
or
or
add
arpl
pop
ja
xor
dec
fiadds
ffreep
incl
add
clts
xchg
lock
ljmp
movb
xor
sub
imul
pop
pop
bound
mov
call
push
mov
xor
sahf
loopne
push
daa
rolb
testl
lock
pop
test
stos
pop
push
pop
push
pop
incl
sub
add
fsubrl
mov
mov
dec
add
movsb
jae
pop
ret
add
push
inc
sbb
jle
clc
call
fadd
dec
sbb
jne
push
loopne
mov
incl
push
add
ja
cli
xchg
pop
call
incl
shl
add
sbb
mov
adc
or
in
push
testl
add
lods
add
fcmovnb
aam
enter
enter
cmpsb
and
mov
fcomps
leave
popa
dec
jo
cmp
mov
pusha
push
insb
inc
sub
idivb
in
incl
loopne
pop
jne
clc
adc
adc
cmp
dec
jmp
mov
push
pop
test
les
shll
add
aas
cltd
dec
mov
push
xor
xor
test
jo
lds
ljmp
xor
and
and
push
push
xor
jle
ljmp
and
dec
add
mov
iret
je
jmp
xchg
and
call
movl
movsl
sbb
pshufw
hlt
inc
add
int
push
jg
add
in
add
push
in
cmpl
or
inc
pop
push
inc
cmpb
testb
nop
inc
movb
sub
clc
das
add
fcomp
scas
jl
inc
icebp
adc
aam
xor
cld
call
adc
xchg
inc
xchg
xor
pop
jmp
mov
jg
add
aam
cli
mov
dec
inc
adc
shrb
sbb
sti
add
jns
shrb
into
int
xor
xlat
call
mov
push
mov
xor
ds
and
lea
cmp
adc
jg
orl
fnsave
cmp
dec
or
or
inc
decl
lds
mov
and
ret
mov
sbb
loop
or
incl
pop
dec
decl
popa
inc
imul
push
les
or
loop
pop
add
jge
inc
popa
xor
jle
push
push
or
je
jmp
jmp
mov
mov
xchg
pop
sti
add
mov
mov
in
mov
outsb
push
push
push
sbb
push
clc
mov
imul
push
or
icebp
inc
jae
mov
std
jmp
xlat
cmp
push
ja
data16
das
lds
add
cmc
add
jmp
je
cmp
bound
pop
mov
imul
pop
jge
adc
out
push
fiadds
lds
imul
sbb
adc
je
xchg
orl
fldcw
sub
scas
jae
fwait
dec
enter
push
nop
mov
xchg
dec
jmp
cwtl
dec
jmp
lahf
cbtw
outsl
decl
mov
daa
clc
pop
mov
lret
sbb
mov
andl
das
and
jmp
push
loope
push
cli
jbe
push
mov
in
sub
adc
or
sbb
jmp
or
ja
adc
sub
mov
and
js
pop
mov
daa
sub
insb
enter
aaa
lods
mov
lods
stc
daa
hlt
push
scas
push
mov
cwtl
sub
stos
orl
movl
or
pop
ljmp
lcall
xchg
dec
not
and
cli
adcb
mov
sub
cmc
pop
add
pop
mov
cmp
lock
xor
movsb
sbb
push
icebp
or
lcall
mov
sub
mov
dec
sub
add
loopne
ja
sbb
pop
std
call
aad
pusha
adc
flds
icebp
jle
adcl
push
push
decl
add
sbb
scas
imul
adc
add
sti
inc
xor
push
cmp
xorb
punpckhbw
or
mov
js
insl
xchg
add
xchg
push
ds
inc
pop
adc
pop
sub
arpl
adc
inc
inc
cld
sahf
inc
mov
pop
pop
jp
mov
incl
adc
aas
mov
sbb
hlt
ss
sbb
push
addr16
push
cwtl
jecxz
arpl
ud0
jmp
sti
push
xor
adc
inc
ret
xor
lret
lods
jl
inc
decl
in
jb
mov
shlb
mov
mov
or
add
sbb
xchg
lea
mov
test
cmpl
imul
inc
xchg
cld
add
and
lock
jg
push
xchg
ds
psraw
mov
mov
pop
call
mov
inc
add
or
pop
int3
jl
decl
lret
dec
data16
adc
dec
pusha
out
inc
xor
cmp
incl
pop
jae
pop
xchg
dec
ret
adc
add
push
cmp
ljmp
mov
cld
lcall
xorb
fsubrs
sub
mov
ss
sar
lea
pop
sar
sti
cld
les
sti
loopne
lods
in
filds
xor
push
sbb
inc
jbe
xchg
fiadds
xor
sub
pop
pop
mov
pop
ficompl
add
sub
inc
sub
and
loope
adc
add
fdivs
jnp
inc
jae
rolb
loop
cmpsl
call
ljmp
mov
daa
faddl
lea
aas
clc
pop
push
in
clc
adc
decl
data16
outsb
je
push
roll
ret
and
cmp
addr16
incl
jmp
testb
sub
fsubrs
shrl
mov
sub
or
sub
addr16
mov
fildl
or
shll
dec
or
mov
dec
or
clc
cmp
add
push
adc
mov
adc
adc
mov
pop
dec
enter
jg
daa
stos
adc
sti
push
and
sub
mov
xchg
add
adc
dec
adc
dec
push
or
call
lret
sub
add
mov
jge
mov
loopne
xchg
mov
adc
test
icebp
jg
out
loopne
or
adc
mov
fdivrl
add
sbb
icebp
fstpt
movsb
mov
hlt
lcall
repnz
ret
jae
pop
mov
sbb
imul
sbb
or
add
loope
outsl
adc
decl
pop
sti
sbb
adc
sbb
push
cmp
add
inc
sbb
je
roll
jge
adc
fistl
popa
inc
adc
dec
mov
bound
xor
pop
pushf
xchg
cmp
inc
sub
stos
icebp
fdivrp
jg
out
adc
aam
sbb
push
xor
cmp
adc
nop
push
ret
mov
xchg
lcall
mov
mov
jbe
push
add
cmp
add
pushl
enter
sbb
add
xchg
sub
sti
incl
jmp
mov
adc
jle
rorb
and
jg
cmpl
jge
call
adc
push
sub
or
adc
leave
mov
pushf
xlat
mov
imul
add
das
mov
or
fdivs
inc
decl
add
jle
add
cmp
push
es
orl
jl
inc
and
push
dec
pop
or
out
out
js
sbb
cmp
mov
ljmp
or
add
adc
and
out
hlt
cmp
xchg
or
aad
aam
push
jmp
add
pop
cmp
mov
add
cli
lret
mov
in
adc
mov
movsl
jne
mov
xchg
fnstcw
or
mov
orl
or
inc
or
pusha
sub
pop
arpl
out
inc
push
aaa
mov
or
scas
lods
xchg
cmpsb
xchg
mov
or
fsubrs
clc
inc
xchg
or
jle
or
jo
sub
sub
and
adc
mov
jmp
lods
xchg
pop
ds
add
das
pop
adc
aam
cmp
loopne
jl
neg
incl
dec
pop
sar
pop
mov
out
xor
and
push
jge
cs
and
or
mov
inc
and
jg
jmp
test
cmp
testb
mov
rcll
cmp
lahf
push
cmp
dec
mov
pusha
or
add
xchg
add
rorl
lret
mov
or
push
jmp
stos
daa
pop
and
mov
call
cmp
jb
or
daa
out
pop
dec
inc
xor
pop
dec
or
and
cmp
call
test
imul
repz
mov
xchg
or
ud0
mov
pop
mov
sub
adc
mov
jmp
sbbb
aad
sbb
or
imul
pop
push
adc
mov
movsb
pop
dec
jecxz
call
clc
mov
or
pop
mov
sbb
pop
aaa
xchg
add
jnp
clc
test
movsl
cmp
jmp
decb
inc
dec
fs
mov
cmp
xor
and
ficompl
decl
lret
xor
or
inc
sub
cli
mov
cmp
lock
shlb
xor
mov
sbb
add
test
incl
lcall
ja
mov
xor
or
in
mov
mov
push
repz
jmp
cmp
scas
divb
jae
fldenv
rol
arpl
sbb
je
xor
push
rorl
add
sbb
scas
mov
aas
or
in
jne
call
lods
decl
push
dec
mov
adc
mov
lcall
add
sub
pop
jmp
jmp
std
xor
cmp
mov
add
pop
cld
xchg
lods
and
aad
push
push
es
icebp
inc
aad
xlat
xlat
call
sbbb
cmpsb
loope
call
xchg
sub
dec
js
lcall
sub
rol
das
aam
jno
push
mov
scas
lcall
rcrl
mov
rol
es
adc
lret
sub
sar
jmp
ja
mov
roll
inc
jae
sbbb
stos
inc
hlt
sub
or
lcall
std
adc
inc
js
lea
mov
jp
gs
hlt
cmp
roll
add
or
sbb
lea
fistl
inc
mov
call
ja
push
test
jbe
ret
mul
orl
int3
je
and
lcall
inc
add
adc
push
lods
jmp
push
xor
cs
mov
or
inc
sarl
lcall
xor
xorb
or
lahf
ljmp
aaa
cmp
mov
push
fimull
mov
mov
idiv
add
lock
call
add
aaa
push
pop
cmp
je
jmp
sbb
push
icebp
lahf
inc
mov
cmp
adc
add
iret
add
js
xchg
std
cmc
push
test
push
jecxz
call
sbb
popl
int
es
jg
loopne
insl
lea
mov
dec
xchg
insb
call
xor
fiaddl
int3
ret
into
es
fidivrl
adc
cmp
inc
nop
push
testb
hlt
out
inc
or
incl
push
jecxz
cwtl
mov
mov
xchg
dec
jmp
mov
sbb
ja
or
pop
dec
idivl
or
outsb
das
sbb
mov
add
xchg
jne
mov
ud0
jne
xor
loope
pop
stos
fmuls
mov
and
mov
ljmp
jae
xchg
push
inc
cld
movsb
xorl
sbb
iret
stos
or
std
mov
fimuls
add
faddp
mov
push
xor
call
fbld
ja
fbld
and
jmp
in
shlb
jo
jne
jo
xchg
jmp
xor
pop
or
sbb
xor
outsl
inc
test
sub
mov
inc
decl
push
push
xchg
mov
rolb
cmp
lea
in
or
fiadds
shrl
adcl
cmp
add
lods
jns
pop
jl
push
sbb
mov
and
inc
mov
or
mov
jne
imul
subl
jae
pop
mov
popa
cmp
jmp
orb
test
imul
jmp
push
testb
xor
lds
adc
xor
sbb
push
ljmp
aas
push
pop
loopne
pusha
hlt
je
cld
in
adc
or
mov
push
aam
in
or
pop
incl
gs
mov
jle
add
addr16
dec
aaa
mov
ja
cmp
clc
movsb
aas
fs
push
aad
jne
lea
call
test
cmp
or
pop
imul
jl
addr16
pop
decl
loopne
adc
xor
push
adc
cmpsb
js
negl
xchg
cmp
xlat
call
xor
nop
adc
push
cwtl
and
popf
nop
inc
iret
mov
nop
push
ljmp
jecxz
repz
lods
sbb
jbe
sub
sbb
lret
dec
mov
jae
jmp
daa
xchg
add
add
cmp
inc
cmp
xlat
mov
mov
adc
movsl
bound
xor
mov
addr16
nop
sar
pmulhuw
lock
and
popa
aaa
sbb
sub
dec
cmpsb
nop
aas
mov
sbb
push
cli
pop
std
mov
inc
push
rclb
imul
incl
dec
fdivrs
inc
js
jmp
punpckldq
push
push
iret
jnp
sub
stos
xor
scas
cmp
sub
add
sub
mov
xor
sub
popa
adc
push
ja
mov
xchg
add
jne
dec
sbb
in
mov
xor
gs
test
cmp
and
xor
ljmp
incb
and
popa
rcrl
push
xchg
inc
mov
stos
pop
fdivs
xor
pop
fs
hlt
test
pushf
int
xor
or
dec
sbb
mov
mov
cld
rep
fdivs
rep
stc
and
outsl
cmc
lods
jle
jb
and
lea
dec
jl
jmp
xlat
bound
cs
inc
add
add
rorb
cld
jae
inc
nop
dec
arpl
jecxz
decl
add
push
mov
test
jg
pop
mov
jg
insb
dec
pop
cld
push
inc
pop
pop
in
pop
mov
das
mov
je
add
or
loope
push
jg
mov
push
sbb
ret
or
sub
jg
dec
jne
mov
int
clc
jnp
cmp
or
outsl
or
or
pusha
inc
pop
mov
mov
jg
pop
xlat
cmc
je
mov
out
mov
add
ljmp
js
sub
xchg
sub
and
loope
and
cld
mov
cmp
inc
je
repnz
pop
add
movsl
imul
es
fdivrp
add
jg
jmp
or
or
jmp
ljmp
test
jne
aas
inc
push
mov
lret
incl
loop
fcoms
fwait
xorb
in
or
pop
jns
test
and
das
cli
lcall
xchg
jmp
sub
inc
cld
mov
shll
decl
add
test
mov
aaa
test
add
fisttps
pop
decl
jecxz
mov
mov
aas
inc
inc
dec
jne
sbb
jmp
add
das
sub
fcmovnb
adc
mov
and
push
dec
mov
push
add
or
cmc
lcall
inc
pop
cmp
push
ss
in
jae
cld
scas
jge
outsb
icebp
aas
cld
dec
push
cmc
mov
inc
fwait
mov
rclb
mov
ljmp
mov
push
aad
add
mov
inc
or
and
mov
push
add
jg
adc
xor
test
mov
sbb
add
mov
ret
push
sub
insb
jae
adc
dec
aas
push
sti
sbb
cmp
adc
ds
icebp
xor
mov
ljmp
adc
imul
sbb
fildl
push
mov
xor
ljmp
or
mov
cmp
jne
arpl
lahf
fs
out
fiaddl
pop
or
add
cmp
push
lcall
bt
aam
inc
mov
in
mov
jne
out
ret
decl
jnp
jo
in
ss
pop
rcrb
xor
int
xchg
add
inc
dec
add
ja
incl
out
sbb
inc
mov
add
xchg
or
push
loop
add
push
dec
incl
insb
sub
add
jmp
adcl
add
jmp
icebp
push
sub
sub
std
aas
std
ljmp
inc
js
xor
and
ja
push
bound
test
incb
pushl
mov
pop
pop
pop
xchg
ret
aas
cld
jp
cmp
add
inc
push
pop
push
cmpb
shrl
sbb
mov
ret
pop
cmp
adc
das
xchg
cmp
push
inc
or
ds
xchg
jge
inc
add
pop
dec
movzwl
cmpsb
dec
icebp
pop
adc
pop
incl
pop
push
and
mul
or
pop
sub
adc
mov
push
ud0
lea
xchg
rcrl
add
testb
xor
pop
ljmp
push
jno
dec
pop
push
add
dec
xchg
xchg
jbe
adc
pop
es
mov
clc
add
popa
xchg
clc
pop
sub
push
cmp
mov
enter
xor
pushl
imulb
pop
std
xorb
xchg
add
or
andl
adc
addl
jmp
vpavgb
xchg
adc
xchg
and
int3
hlt
push
xchg
lods
inc
dec
cmpsb
or
sahf
or
jae
inc
dec
decl
and
insb
testl
lret
and
sbb
call
jg
cmp
stc
mov
testb
sub
add
sbb
inc
push
sbb
or
mov
pusha
add
sbb
scas
enter
xchg
adc
decl
mov
xor
sbb
add
push
incl
mov
adc
pop
mov
mov
mov
aas
cli
incl
jae
sti
sbb
dec
pop
xor
mov
mov
nop
mov
jp
lea
adc
mov
das
jne
call
or
mov
scas
inc
repnz
adc
or
insl
popa
jmp
jmp
push
pop
fdivr
push
ds
or
decl
jnp
cmp
jne
sarb
jb
xor
lcall
arpl
mov
lock
mov
popa
push
loope
inc
in
sti
clc
mov
lods
loop
je
xor
cld
sbb
outsl
xchg
lea
sahf
pop
stos
jg
inc
inc
or
mov
dec
clc
insl
pop
cmpl
adc
lock
add
push
add
ud0
mov
add
mov
mov
mov
push
sub
push
xchg
push
aad
popl
pusha
sbb
insb
pop
jmp
outsb
add
sub
xchg
inc
ret
sbb
leave
add
inc
outsb
das
mov
test
jae
mov
call
decl
mov
andb
stos
pop
pop
pop
mov
jecxz
or
push
inc
dec
mov
push
fists
jmp
cmp
dec
dec
or
jne
cmpsl
lret
jo
jge
cmp
dec
notb
and
test
incl
movsl
sbb
add
repz
arpl
mov
test
xor
icebp
call
or
sbb
mov
loope
cmp
int
aad
cmp
inc
push
adc
or
push
out
fmul
fdivs
or
ret
jle
sbb
sti
aas
cld
lahf
push
push
mov
lods
pop
and
jle
xchg
addr16
pop
rol
mov
mov
jmp
std
adc
cmp
push
or
in
dec
dec
xchg
xchg
jl
out
or
test
jmp
add
and
test
je
and
out
andl
incl
ds
sub
sub
and
vpmulhrsw
lods
outsl
inc
jl
test
jmp
sbbl
mov
push
jbe
es
or
push
mov
lcall
inc
dec
rclb
or
sub
or
mov
xor
rclb
lcall
xchg
movsl
fwait
cld
pop
fistl
stos
or
push
shrb
sub
adc
clc
xchg
xor
mov
jmp
fcmovnb
sti
cmpsb
add
sub
jl
push
add
jne
xchg
push
or
mov
in
mov
insb
jp
pop
push
push
pop
nop
push
mov
and
sub
jmp
rorl
mov
fs
test
pop
or
dec
jp
push
insl
call
cmpsl
pop
not
mov
mov
pop
ds
call
push
das
or
dec
outsb
push
mov
mov
sub
dec
jp
jle
xor
aas
jl
das
inc
iret
mov
mov
jbe
xchg
out
adc
test
decl
add
in
adc
or
out
incl
imul
notl
je
jbe
xor
scas
mov
xchg
mov
jge
aad
xchg
test
test
mov
xchg
push
scas
js
or
movsl
mov
ljmp
fdiv
sbb
or
ret
dec
adc
rcrb
add
sbb
and
mov
sbb
or
sar
xchg
fidivrs
stos
cs
cmp
fcoms
pushl
add
mov
in
jmp
or
pop
push
add
cmpsb
fnstcw
movzbl
jp
cld
pushl
mov
and
inc
ss
fisttps
mov
cs
hlt
jecxz
jo
test
aas
jge
pop
fwait
lods
orl
test
cmp
data16
push
inc
adc
inc
sub
cmpsb
and
decb
jle
jp
inc
stos
orl
push
fistps
js
scas
decl
jg
mov
inc
add
out
cmp
push
stos
dec
andb
xchg
call
aaa
js
or
or
aas
ss
pushl
mov
mov
or
push
and
add
and
sub
adc
ss
sub
lcall
xchg
nop
add
fcoms
es
ljmp
filds
std
mov
cmp
iret
pop
xor
mov
shrl
ljmp
out
addl
ficoms
mov
push
mov
xchg
mov
data16
mov
cmp
add
xor
mov
mov
outsb
fmuls
jmp
insb
ret
add
mov
cmp
fidivl
pop
call
rcll
add
in
push
sub
pushf
push
sarb
imul
jmp
pop
stos
push
sbbl
and
mov
mov
jb
clc
jp
in
xor
sub
popf
sar
cmovbe
cmpl
adc
popf
imul
cmp
push
sub
mov
sbb
ljmp
lcall
inc
aaa
xchg
add
enter
aam
pusha
push
lods
pop
inc
push
pusha
push
rorl
leave
fcomps
push
and
xchg
or
dec
enter
adc
incl
cmp
cmp
xchg
jb
jbe
adc
ljmp
test
or
inc
inc
mov
fiaddl
mov
cmpsl
movl
loop
dec
jg
sbb
jg
xor
xchg
xchg
xchg
pusha
add
jmp
popf
sarl
adc
pop
cwtl
push
pop
fldenv
adc
fs
decl
xor
pop
mov
push
adc
mov
add
xlat
mov
aaa
je
cmp
add
mov
incb
jmp
fistl
jmp
mov
incl
jmp
aam
call
popl
inc
or
jb
mov
or
cmp
add
adc
pop
or
jne
pop
arpl
ljmp
push
aas
jo
jmp
inc
mov
add
sbb
jmp
in
adc
imulb
mov
adc
movsb
sbb
adc
push
decl
or
dec
orb
movups
cmp
test
ret
das
out
lcall
push
idivl
sbb
outsb
mov
dec
dec
jmp
lods
sbb
jecxz
xchg
push
jmp
ds
andl
fsubl
xchg
sbb
jae
xchg
cmc
cs
inc
xchg
rcrb
mov
incl
pop
clc
inc
js
or
ficoml
jno
shrb
adc
add
xor
mov
test
mov
jg
jns
dec
dec
jecxz
call
adc
enter
je
jmp
adc
jge
mov
pop
sbb
sbb
call
mov
cld
push
or
add
rcll
sub
decl
or
cmpb
xor
pop
adc
enter
outsb
push
add
jp
jmp
jno
sub
or
jmp
aad
ds
jmp
lcall
insl
push
mov
pop
push
sbb
mov
and
adc
add
incl
in
orb
jmp
or
and
int3
mov
pop
xor
push
xor
xchg
sar
push
mov
pushl
mov
mov
sub
outsb
lahf
add
xchg
push
stos
or
and
jmp
mov
add
xchg
and
ds
jg
add
out
push
xor
sub
addl
negb
xchg
call
mov
push
cmp
outsl
cmp
mov
or
out
mov
sarb
call
inc
pop
jae
call
jnp
inc
int
imul
lcall
cmpl
cmpsl
xchg
xchg
dec
push
sbb
test
dec
sub
out
adc
imul
popf
jmp
or
pop
frstor
push
adc
xchg
and
lock
out
push
add
add
cmp
jb
sbb
mov
cmc
test
push
lods
insb
lea
adc
fnstcw
ret
inc
xor
cmc
add
and
pop
pop
sub
jmp
add
data16
js
sbb
jg
dec
xor
mov
inc
cltd
mov
jge
pop
ljmp
mov
fdivrs
iret
stos
xchg
insl
test
xor
inc
popf
ljmp
xchg
clc
jmp
mov
pop
xchg
rclb
xchg
sbbb
pop
or
jmp
jmp
sbb
xchg
push
mov
test
clc
adc
and
ljmp
incl
cld
pop
cmp
imul
cmpsl
pushl
or
add
inc
push
mov
andw
push
xor
push
pusha
dec
adc
inc
and
adc
jg
mov
cmp
shl
sbbb
sbb
and
inc
call
dec
and
add
inc
xor
push
das
adc
sbb
lcall
jmp
iret
push
dec
mov
lock
enter
mov
xchg
test
out
push
add
hlt
mov
pop
clc
call
cmp
ret
adc
sahf
in
push
movsl
aas
mov
jmp
and
pop
movsb
popf
into
push
icebp
inc
and
pop
sbb
push
lret
mov
roll
push
push
mov
lcall
xor
and
push
xchg
inc
mov
pop
out
or
cmc
arpl
fists
addr16
jge
jnp
cmpsl
fsub
mov
pop
insb
movsb
or
push
call
inc
dec
adc
cmp
lea
add
stos
pusha
or
adc
jae
decl
in
outsb
sti
add
inc
sub
push
mov
add
mov
mov
lds
inc
adc
inc
loopne
loop
mov
and
add
cmp
incl
mov
jge
pusha
lock
or
inc
in
loopne
inc
jo
shr
aaa
test
rorl
insl
or
add
inc
daa
pop
mov
push
cltd
push
mov
inc
xchg
cmp
pop
pushl
xor
mov
out
cmp
mov
lcall
cmp
or
cmp
xor
das
add
je
push
xchg
adc
incl
mov
dec
ss
pop
or
or
pop
dec
lret
sarl
jmp
xor
sub
jecxz
cli
daa
mov
mov
or
test
pop
data16
decl
lock
and
pushf
divb
aas
adc
adc
popa
mull
lcall
push
mov
movsl
fidivs
enter
sbb
std
scas
rcll
mov
pushl
add
pop
rorb
test
jmp
sbb
lea
add
push
pop
inc
addl
adcl
shl
test
stc
adc
imul
test
test
lock
cli
push
add
add
xchg
mov
pop
cs
adc
cmpsl
cmp
push
aam
call
lds
sbb
dec
scas
and
aas
and
xchg
movsb
divl
xor
outsl
ds
decl
das
jg
dec
push
shll
mov
jge
int
mov
push
mov
fiadds
dec
xor
adc
adc
xor
pop
int
dec
fstl
dec
rcrl
pop
pop
xchg
out
xlat
imul
lcall
or
mov
clc
ficompl
fisubrl
inc
pop
ret
push
xor
imul
lods
jmp
push
and
mov
xchg
arpl
nop
je
outsb
dec
scas
cmp
decl
sub
mov
sub
push
gs
push
mov
mov
mov
mov
decl
jmp
add
push
out
jecxz
rorb
or
inc
xbegin
jb
pop
incl
insb
cmp
nop
add
mov
inc
stc
and
push
add
arpl
push
mov
das
dec
inc
or
inc
add
clc
pushl
cmp
mov
or
aad
add
roll
add
pop
push
sub
inc
ss
out
push
or
sub
popa
push
and
fwait
mov
call
mov
aad
xor
aaa
clc
push
cmpl
imul
bound
fildl
ss
insb
adc
mov
or
jno
dec
addr16
insb
pop
pop
pushl
rcr
daa
xor
das
shlb
cmpsl
call
and
mov
faddl
int
mov
mov
sbb
lcall
decl
push
int3
xor
lret
xchg
push
mov
mov
sbb
cmpl
jmp
faddl
out
pop
add
dec
in
or
test
and
jmp
orl
add
shrb
push
jne
adc
jg
push
adc
sub
push
xor
add
mov
leave
bound
adc
int3
shlb
fldenv
pop
incl
sbb
mov
lea
je
or
dec
rolb
mov
pop
adc
sbbb
pop
mov
cmpsb
sbb
xorl
pop
jp
aad
jle
mov
stos
jae
pop
mov
adc
pop
xorb
pop
orb
inc
mov
inc
mov
mov
incl
push
lock
push
jp
dec
jge
fcoms
mov
and
fsubrs
mov
pop
push
mov
roll
push
imul
pusha
out
mov
and
and
incl
inc
and
push
lcall
push
pop
and
jo
in
jo
sub
rorl
dec
push
shrb
jge,pt
sbb
jge
cs
jg
dec
rcr
outsb
xchg
idivb
add
out
or
ss
mov
call
inc
pop
je
bound
inc
ud1
jl
daa
fmuls
jl
lea
fildl
or
or
mov
cmpb
pushl
pop
mov
pop
mov
push
mov
jne
cwtl
cmc
or
push
jmp
mov
mov
or
push
fists
ds
decl
mov
push
sbb
jle
outsb
stc
test
push
mov
clc
add
sti
sub
push
lock
jno
out
mov
out
add
fsubrs
adc
inc
jae
jge
sbb
rcrb
dec
es
push
test
jmp
push
push
dec
pusha
xor
xor
incl
int
dec
ficomps
inc
mov
inc
and
mov
push
jae
sub
daa
pop
dec
incl
mov
jg
mov
push
push
rclb
xchg
cmp
push
inc
test
or
icebp
lcall
cld
mov
sub
movsb
xlat
adc
and
jmp
inc
sub
push
xlat
sbb
jmp
mov
pop
mov
push
icebp
pop
mov
incl
dec
mov
rolb
mov
jmp
call
mov
jnp
add
adc
push
sarb
sub
test
movb
mov
clc
xorl
loopne
loope
std
negb
jge
mov
aad
push
add
ljmp
inc
and
jl
mov
lea
pusha
inc
xor
test
decl
pop
fisttpll
jp
xlat
pop
cli
mov
push
pusha
push
inc
repz
jg
mov
mov
lcall
shl
lods
jne
incb
jg
push
jg
mov
xor
js
repz
lea
xor
mov
xor
and
sarl
aas
mov
add
add
pusha
test
js
inc
add
and
push
iret
movb
mov
dec
fcoms
decl
xchg
xor
sbb
mov
or
xchg
das
daa
pusha
sti
lcall
incl
popa
ds
add
push
push
pusha
scas
insb
shrb
cmp
cmp
pop
jmp
incl
or
sub
aaa
stc
test
aaa
and
mov
lock
call
and
scas
daa
cltd
push
daa
sub
addb
ret
mov
and
leave
shll
test
push
dec
xor
ljmp
fwait
mov
popf
insb
out
push
shrb
addr16
adc
add
mov
clc
and
add
sar
ds
loop
pusha
push
pop
fstl
xchg
jle
leave
inc
test
sub
lods
rcrb
aas
clc
icebp
sub
add
mov
shll
arpl
es
push
cmp
pusha
pop
xor
and
mov
dec
inc
push
or
and
dec
test
sub
fsubr
add
pop
clc
rolb
les
mov
push
sahf
icebp
sbb
dec
dec
pop
incl
add
xchg
dec
addl
hlt
ja
out
mov
popf
and
in
nop
mov
jmp
je
divl
mov
and
test
mov
jl
js
mov
sti
mov
sbb
fldt
clc
jl
cmp
jg
sarb
ret
adc
push
xlat
cmp
jl
cmp
jg
sti
call
enter
loope
mov
push
pop
mov
pop
xor
mov
popl
orl
add
xchg
push
and
xchg
pushf
add
fadd
ja
pop
incl
push
sti
enter
mov
dec
leave
xchg
mov
pop
xor
std
mov
push
sub
fwait
cld
and
fsub
mov
inc
aad
or
rorl
jp
xchg
lret
mov
sub
xor
mov
aaa
std
call
test
add
fs
jns
mov
arpl
std
xor
jmp
test
cs
sbbl
popa
push
sbbb
mov
pop
rol
dec
sbb
add
sbbl
pushf
and
sub
clc
add
push
sbb
inc
sbb
dec
dec
and
nop
push
jo
outsb
pop
cmp
or
cmp
mov
mov
enter
xchg
add
insb
comiss
out
adc
and
in
inc
ss
in
add
std
out
pop
mov
setnp
inc
fs
dec
adc
add
add
js,pt
add
dec
in
cmp
out
jmp
adc
mov
xor
inc
add
and
fwait
mov
decl
push
stos
movl
cmp
lcall
dec
pop
ja
out
pop
push
insl
sub
push
push
lcall
xor
mov
decl
push
jl
repz
or
sbb
cmp
jbe
mov
imul
mov
jmp
cmpsl
mov
xchg
stc
jne
rcl
shrb
imul
pop
sti
or
push
pushl
shr
sub
push
rorl
loope
inc
mov
mov
int3
enter
test
or
aas
cli
xor
scas
xchg
stos
or
test
int
xchg
sbb
int
cld
decl
pop
mov
mov
sub
mov
call
clts
cmp
mov
shll
incl
pushf
imul
dec
repnz
adc
mov
push
lcall
add
add
incl
xor
popl
add
push
subl
mov
inc
xchg
cmp
call
mov
jg
lods
lret
sub
aaa
xor
mov
mov
ljmp
cmc
sbb
incl
in
aaa
pushf
mov
popf
imul
jne
jae
inc
dec
arpl
jb
mov
sub
push
pop
nop/reserved
imul
mov
add
ficompl
insb
and
iret
add
mov
shld
in
mov
fiadds
inc
cmp
jge
negl
jle
sub
out
mov
or
xor
xlat
push
push
or
mov
xchg
mov
sbb
sbb
adc
push
xchg
mov
sarb
mov
fwait
ret
rolb
jge
dec
idivl
push
rol
push
lcall
xor
add
or
rolb
adc
clc
push
jge
mov
xchg
incl
xor
pop
push
or
fcomps
sub
mov
or
decl
scas
addl
repz
cwtl
pop
scas
push
clc
sbb
push
ficoml
xor
ljmp
push
in
loopne
mov
adc
add
pop
mov
sbb
xor
xlat
pop
jnp
and
or
out
std
jl
pusha
sbb
jne
xor
ljmp
adc
movsb
stc
insb
ret
inc
adc
cld
iret
rcr
push
xor
push
sbb
jmp
jo
mov
pop
jb
leave
mov
shlb
testl
cmpsl
sti
and
jmp
push
or
jp
or
or
push
jecxz
or
pop
or
or
test
ljmp
xchg
sub
mov
add
call
add
add
inc
mov
leave
ljmp
aam
dec
outsb
sti
jle
jmp
or
fwait
movsb
jmp
or
push
add
data16
clc
incl
sbb
ret
imul
pop
into
xor
movzwl
jg
ret
rorb
or
movsb
insb
test
std
push
loope
neg
pop
fsubs
add
mov
aaa
push
pop
push
stc
add
add
das
ds
rcr
mov
aad
push
jno
xor
add
mov
mov
ljmp
cmpsl
sbb
das
scas
dec
les
shl
push
ja
cmpb
sbb
rclb
ljmp
inc
inc
call
lods
cmp
mov
xor
adc
ljmp
shl
mov
rorl
shr
mov
mov
inc
mov
cmp
sti
jae
pop
add
into
lock
inc
pop
dec
jne
jnp
pop
cwtl
sbb
daa
aas
add
cmp
sub
test
das
and
stc
decl
rcl
pop
jbe
mov
pop
ss
pop
or
call
insl
std
lcall
sub
lds
inc
cs
mov
jmp
mov
test
and
xchg
je
bound
cld
mov
mov
lcall
or
push
pop
pop
mov
call
jmp
shl
sbb
xor
lcall
incb
sbb
mov
and
scas
lock
call
add
or
fnstcw
push
pop
push
add
dec
data16
incl
or
jp
push
hlt
push
adc
adc
sbb
or
lret
xor
jle
jmp
and
xchg
rcrb
mov
push
push
rcrb
ss
mov
lcall
or
pop
or
push
dec
or
pop
mov
push
cmp
sbb
add
pop
cmp
outsl
jne
and
imul
adc
add
mov
js
jne
mov
insl
cld
jne
add
or
sub
cmp
sti
and
popa
jo
sbb
ljmp
shr
push
mov
xor
sub
imul
nop
and
sbb
decl
or
imul
je
jecxz
dec
add
push
jne
in
push
jo
cmp
paddd
movsl
in
push
jne
xor
adc
popl
ljmp
pop
lret
dec
fstpt
mov
inc
inc
fwait
or
mov
stos
adc
stos
push
sar
pushl
jo
cwtl
mov
push
rol
loopne
lea
lds
call
insl
ja
inc
push
jl
and
dec
shll
push
ret
mov
sarb
inc
jmp
mov
out
sub
mov
mov
lea
pop
and
cmp
cld
cld
in
add
aas
std
decl
call
xchg
jno
mov
or
adc
aam
cs
call
movsl
add
mov
sub
sub
sub
xchg
jg
ret
xor
push
aam
sbb
test
jo
jg
incl
sbb
cmp
cli
sub
insw
pop
test
adc
xor
push
add
inc
or
cmpsl
pop
fs
lock
xor
mov
xor
out
and
xor
mov
jg
nop
test
push
adc
sbb
xor
push
je
and
xor
lcall
add
push
inc
or
push
or
or
inc
adc
push
incb
incl
mov
push
xchg
push
fsubrl
clc
loop
jg
jge
std
xchg
ret
xor
lcall
xchg
das
fs
add
or
sar
ljmp
xor
push
pusha
add
jg
aas
jae
cltd
mov
and
jl
adc
nop
add
push
inc
mov
jl
xchg
and
imul
lahf
sbb
test
add
jg
pop
rcrl
mov
arpl
insl
cmpl
jo
flds
incl
push
ja
cmpsb
and
dec
xchg
and
mov
jne
adc
xor
lcall
add
jo
xor
outsb
sub
aas
sarb
or
or
nop
adcb
pushl
lahf
mov
shrl
and
mov
xlat
les
pop
pushl
out
xchg
sbb
std
mov
loop
andb
test
imul
push
mov
rcll
incl
cmp
or
push
jnp
and
fiaddl
lods
add
push
loopne
inc
decl
call
push
lahf
or
sbbl
out
jmp
sbb
sub
add
stos
outsb
cmp
mov
push
adc
decl
inc
xchg
shll
pop
sbb
rcll
stos
imul
adc
adc
inc
mov
cmp
mov
testb
popf
and
std
and
mov
mov
fdivrp
pop
cld
call
sub
ss
test
jmp
std
cmp
adc
or
or
outsl
or
lcall
cld
xor
fists
mov
adc
sbb
pop
jbe
enter
mov
decl
inc
nop
sbbb
ret
push
addl
decl
roll
jo
and
xor
cs
dec
lods
pop
xchg
lcall
std
sub
fidivl
ds
push
and
cmp
sub
incl
sub
xchg
sbb
sbb
jmp
adc
push
push
testb
push
ljmp
jmp
daa
adc
orb
daa
push
cmovbe
inc
inc
sub
es
call
push
push
xorb
jecxz
in
pusha
orb
mov
pop
pushf
dec
insl
ret
bound
jo
and
js
or
jmp
rorb
jmp
popf
movsl
insb
div
cmp
incl
xlat
rorb
mov
aaa
adc
add
inc
cmpsl
stos
mov
dec
dec
cmp
aam
pop
or
or
jnp
or
or
das
cmpsb
lcall
adc
add
cmp
addr16
cs
inc
dec
pushl
sub
aaa
je
cmp
and
push
xor
or
or
push
std
xchg
pushl
jb
or
mov
mov
mov
push
out
cwtl
pop
pop
mov
ret
cld
hlt
ret
decl
call
lahf
aaa
inc
pop
xchg
js
js
push
xchg
out
mov
pop
or
sbb
inc
ss
sbb
jbe
test
ret
scas
adc
call
and
outsl
mov
jge
cmc
mov
adc
inc
inc
inc
inc
adc
jmp
or
jmp
mul
mov
xchg
lods
jmp
insb
push
xor
inc
hlt
in
out
or
call
and
lcall
mov
aas
cld
pop
inc
mov
enter
rol
sub
pop
pop
ret
mov
test
and
or
clc
outsl
fistpl
movsb
addb
inc
or
xchg
imul
movsb
cmp
xchg
sbb
jmp
pop
out
cmp
jmp
jne
std
cmp
jb
and
std
jge
std
mov
xor
jno
repz
enter
jne
sub
lret
bound
pop
jmp
decl
and
dec
pop
pop
pop
push
test
aaa
test
movl
in
and
das
sub
clc
incl
and
testl
lock
fcomi
dec
inc
orb
sub
lcall
cli
xor
mov
aaa
ret
call
pusha
add
adc
frstor
jge
lcall
mov
sub
mov
adc
out
mulb
sub
out
and
adc
decl
aaa
pop
and
pop
sar
pop
inc
stos
push
loop
sbb
xor
rcr
lods
jo
hlt
or
decl
imul
cmp
cld
roll
insl
cld
fwait
or
insl
hlt
fmulp
fistl
xchg
push
jmp
shr
add
mov
adc
js
cltd
inc
es
mov
pop
std
jg
stos
pop
mov
xlat
nop
lods
adc
es
pop
test
incl
mov
aas
xchg
ljmp
clc
push
call
jne
cmp
bound
push
ret
sub
sub
push
and
incl
es
sub
mov
das
xor
loop
sub
jle
mov
fwait
cld
jmp
jmp
pop
das
or
sbb
fnstsw
fldt
cmpsb
adc
lcall
gs
in
mov
jecxz
sbbb
not
fwait
and
shll
sbb
jmp
cmp
fldenv
mov
int3
rcl
in
es
sub
incl
inc
imul
fistl
shl
push
add
xlat
clc
lcall
imulb
int
sub
mov
out
insb
sub
inc
shrb
sub
sub
rolb
pop
addl
sub
cmp
or
mov
shrl
mov
cld
xchg
add
loope
in
fwait
icebp
fstp
fwait
sar
decl
add
cmp
fwait
stos
mov
jg
add
fs
adc
incl
sub
mov
addl
cltd
pop
or
into
scas
dec
decl
lea
sub
push
rolb
or
dec
mov
or
push
xor
inc
sbb
jns
sub
insb
jo
pop
adc
lcall
call
add
mov
mov
cmp
pop
popa
push
incb
cmp
test
pushl
lock
or
jg
cli
sarl
pop
in
fldl
mov
push
clc
ljmp
scas
sbb
sbb
adc
xor
mov
fnstenv
add
pop
push
repz
sub
inc
sub
lcall
fldenv
or
jmp
in
mov
sbb
movsb
call
movsb
or
add
add
js
sbb
xchg
std
jmp
jbe
jbe
lods
enter
mov
and
ret
jno
pop
mov
xor
lcall
mov
adc
aam
or
fdivr
pushl
into
jl
push
fiaddl
test
xor
bound
sub
fsubrl
cmovg
inc
les
add
sbb
jg
fdivrl
lret
dec
roll
or
popa
or
rorl
or
call
adc
and
jle
daa
dec
cmp
arpl
cmc
or
ret
dec
mov
popa
or
lret
dec
inc
in
nop
out
inc
add
push
jne
adc
in
scas
ss
fdivr
push
decl
and
icebp
mov
fs
insl
fisttpll
daa
push
sub
imulb
sbb
add
and
lcall
xchg
fucomp
push
or
push
pop
push
push
inc
or
dec
dec
clc
lcall
and
rol
jg
adc
push
imul
inc
or
inc
iret
lret
pop
push
mov
test
das
adc
lds
cmpsb
mov
xor
mov
adc
add
jecxz
mul
add
xchg
pop
add
xchg
popa
dec
adc
xchg
inc
repnz
push
incl
ljmp
push
cmp
add
push
mov
movsl
sbbb
clc
inc
mov
addr16
jmp
dec
add
add
movq
xor
movsb
mov
push
sub
dec
xchg
add
cmc
ljmp
sbb
inc
add
jmp
stos
mov
clc
loope
mov
insb
inc
jne
je
neg
xorl
mov
inc
out
fstpl
pop
xor
inc
in
ret
inc
stc
inc
lcall
inc
scas
dec
aam
lea
xchg
mov
and
decl
les
hlt
loope
std
cmp
push
out
and
and
incl
mov
pop
inc
dec
lds
leave
nop
insb
fwait
mov
sub
out
aas
das
aaa
add
mov
or
push
std
jl
or
mov
scas
xor
jbe
inc
test
jns
inc
mov
adc
push
test
out
or
not
adc
decl
repz
dec
inc
pop
inc
shrb
pop
in
add
cmp
sbb
test
adc
jg
testl
je
jmp
add
xchg
test
mov
pushl
in
mov
mov
push
sub
pop
inc
popa
scas
ret
mov
outsb
or
clc
loopne
inc
or
adc
leave
fdivs
dec
mov
push
jmp
fidivl
xor
jg
add
loop
or
mov
push
inc
add
mov
adc
jo
add
adc
dec
push
mov
fs
jmp
add
cmp
lea
push
sbb
and
stos
dec
mov
sub
xlat
or
call
insl
mov
and
pop
push
and
rorb
sub
add
or
mov
mov
and
jge
cld
inc
lods
outsl
mov
jmp
lcall
mov
call
mov
push
and
push
ret
add
fcomps
add
dec
call
add
ss
push
xchg
incl
cmpsl
mov
inc
or
sbb
shl
or
and
xor
decl
hlt
xchg
out
mov
enter
mov
push
push
and
mov
decl
loop
push
jecxz
leave
daa
xchg
mov
and
mov
loopne
mov
adc
je
xor
jl
repz
pop
sbb
repnz
inc
pop
jl
xor
or
push
mov
lcall
push
ja
push
sbb
scas
adc
mov
es
add
call
mov
jne
out
xor
decl
dec
or
imul
pop
mov
imul
sbb
incl
adc
in
add
adc
add
mov
cmpsb
cmp
shr
sub
insl
xchg
je
daa
add
idiv
jg
lods
mov
cmpw
xchg
pop
mov
adc
jbe
nop
xor
xorb
lcall
push
lret
call
add
mov
fmull
jbe
mov
cmpsl
adc
incl
testb
cmc
hlt
add
stc
mov
mov
adc
push
pusha
push
loopne
ret
shlb
push
sub
pop
lds
adc
fidivl
pushl
xor
icebp
movsb
bound
cmc
aam
cltd
sbbb
dec
mov
inc
stos
ja
shl
cli
call
jmp
addl
insl
mov
push
cmc
mov
out
xchg
push
push
insb
mov
in
push
mov
cmc
movsl
xorb
jo
or
mov
pop
and
pop
mov
add
xlat
sarb
lret
arpl
mov
push
xchg
fisttpll
cmp
add
mov
sub
int3
test
fistpl
jmp
dec
or
mov
data16
pop
mov
decb
jg
push
sub
sbb
sarb
daa
and
adc
jne
push
xor
and
incl
pop
xchg
xor
cwtl
dec
les
stos
adc
xor
or
inc
jmp
or
fimull
mov
outsb
sbb
mov
ja
mov
mov
xchg
decl
pop
mov
adc
js
pop
or
movsl
xor
dec
xor
fldt
pushl
call
hlt
jl
lock
add
mov
mov
dec
lock
decl
mov
rep
dec
xchg
push
fistl
mov
rcl
jmp
negb
push
adc
cld
mov
mov
addr16
sub
int3
mov
mov
pop
addr16
push
inc
add
call
mov
movl
dec
push
test
mov
mov
sbb
call
sub
mov
jle
cmp
clc
push
xchg
pop
sbb
decl
cmp
push
sbb
sub
jge
and
add
fdivrp
sub
into
pusha
or
push
call
add
les
mov
fildl
mov
mov
jge
jo
jg
cld
cmp
clc
xchg
mov
mov
lahf
mov
and
mov
jne
dec
mov
sub
mov
loopne
loopne
lcall
dec
les
add
sbb
mov
lcall
inc
inc
add
xchg
insl
and
mov
int3
insl
ljmp
ljmp
sub
inc
push
jo
or
cmpsl
xchg
cld
jmp
sarb
add
frstor
test
push
cmpsb
jae
xor
pop
add
imul
in
or
mov
xlat
push
lcall
ljmp
xchg
pop
fldt
ljmp
idivb
push
inc
add
stos
sbb
push
jecxz
xchg
iret
in
sarb
push
pop
lods
in
incl
cmp
pop
lds
loopne
pushf
fnstenv
addl
push
stc
decb
push
xchg
mov
rol
enter
jnp
inc
jl
and
add
in
and
nop
test
jge
jb
pop
dec
loopne
test
jmp
adc
cmp
sbb
xor
sbb
sti
sbb
fldl
adc
sbb
sub
flds
and
and
fldl
or
repnz
lds
hlt
clc
push
test
or
ss
insb
lret
lock
pop
sarl
push
lock
dec
inc
aas
adc
pop
ljmp
and
lcall
jne
cmp
push
pop
rcll
stc
sub
push
push
pushf
mov
or
lret
add
add
leave
cmp
inc
lcall
bound
add
lods
loopne
out
cs
cmp
addl
dec
lret
test
cmc
ljmp
push
mov
fsts
add
add
xchg
movswl
jmp
pushl
enter
imul
mov
je
es
dec
popl
in
sub
out
ljmp
sub
adc
in
shlb
mov
jge
leave
sub
jmp
push
shl
lret
push
push
jg
fwait
pop
jnp
inc
dec
cld
loopne
icebp
add
jmp
movzbl
cli
jg
jge
xor
std
popf
pop
sbb
push
iret
add
jbe
mov
jle
mov
call
inc
add
daa
jnp
inc
fmuls
jmp
lea
push
aas
jb
je
push
dec
cmp
push
sar
mov
pushl
jp
fdivs
sbb
loope
push
cmpsb
les
xlat
insl
subl
mov
das
adc
sbb
adc
sub
mov
cmp
sbb
mov
call
pop
adc
mov
or
adc
mov
out
push
sarb
insl
ret
dec
add
push
jg
addb
test
lcall
add
lods
jne
xchg
subl
and
xchg
in
push
adc
fcoml
add
daa
adc
inc
in
imul
and
js
push
push
mov
aad
or
jns
fisttps
add
jb
dec
outsl
ret
and
xchg
test
cmp
sbb
jg
fldt
and
adcb
adc
loop
sbb
outsl
inc
sub
call
add
ret
jo
mov
out
jmp
sar
jns
lock
in
push
and
cmc
decl
dec
or
or
or
insb
movsl
lods
or
and
incl
in
pop
xor
roll
mov
int
push
int
jmp
and
js
shll
aas
sub
sarl
adc
mov
lahf
in
out
ficoms
jbe
insb
xchg
incl
das
add
add
ret
jle
roll
sub
aas
inc
idiv
cmc
push
cmpb
lock
call
or
cmp
inc
aaa
jg
pop
insl
jno
xchg
or
adc
xchg
out
pop
scas
mov
scas
lcall
rorb
xchg
or
mov
rolb
and
movsb
and
or
add
push
cli
incl
ret
repz
push
sub
pop
xchg
push
jno
aad
cmp
xor
dec
push
daa
pop
xor
in
jnp
sbb
ret
andl
shlb
cmp
push
push
shl
lret
or
inc
and
pop
xchg
sbbl
adc
call
jmp
inc
or
aaa
sbb
or
inc
xchg
add
sub
or
test
shlb
out
mov
pop
inc
test
pop
nop
dec
fistl
in
out
aas
dec
jge
or
xchg
mov
clc
call
add
stos
xorb
mov
loope
fs
jl
jmp
shl
jmp
cmp
cmp
jmp
xchg
repz
mov
fwait
mov
lret
in
aas
xor
jmp
sbb
mov
cmpb
in
test
push
jnp
dec
inc
jmp
sbbb
or
scas
popa
push
xlat
push
mov
dec
xchg
push
sahf
js
mov
or
or
outsl
push
or
or
jmp
inc
jbe
dec
ror
or
adc
sbb
xchg
test
mov
decl
sub
mov
push
add
bound
add
inc
call
es
insb
adc
jae
rclb
inc
fwait
lods
imul
repnz
push
push
mov
incl
loope
imul
jne
insl
sub
ret
jg
imul
pop
or
shr
daa
sbb
add
or
testb
fildl
add
into
adc
popa
xchg
je
jo
dec
shlb
jae
ja
mov
inc
xor
fwait
and
pop
sbb
adc
xchg
sbb
pop
or
jg
repz
cli
sub
adc
int3
sbb
ljmp
call
leave
aad
sbb
inc
push
jo
jo
mov
inc
loope
icebp
mov
or
pop
mov
hlt
push
inc
rorl
xchg
jmp
fstps
sbb
or
pop
fwait
mov
adc
call
push
push
and
xchg
outsl
add
decl
push
adc
aaa
xor
add
or
jp
cld
decl
andl
add
ret
or
test
inc
dec
in
pop
clc
aas
sysenter
ds
xor
mov
xchg
icebp
push
call
or
push
je
adcb
shl
add
mov
lock
add
add
push
cmp
mov
mov
mov
orb
add
mov
push
sarb
sub
inc
les
add
mov
fildl
sarb
test
lea
push
das
sahf
incl
fwait
cli
addr16
cmp
or
cmp
jmp
sub
push
jb
add
arpl
ficoms
add
test
mov
rol
jb
rsqrtps
bound
call
push
pop
sub
or
shl
or
imul
adc
push
jne
adc
push
decl
pop
cmp
add
mov
dec
test
pop
popa
daa
inc
lcall
daa
jmp
mov
std
pop
or
call
mov
dec
fldt
decl
xchg
inc
cwtl
nop
and
test
loop
add
popa
paddw
das
pusha
mov
push
inc
insb
jge
lods
stos
outsl
push
pushf
or
decl
inc
jno
pop
or
call
jo
pop
mov
jmp
sub
mov
xchg
adc
and
sbb
push
adc
sub
add
or
pop
dec
sahf
or
pop
or
xor
dec
jae
and
call
dec
push
addl
aad
jo
andl
cmp
push
pop
push
pmuludq
incl
adc
ja
add
popf
arpl
mov
mov
int
leave
inc
xor
decl
aam
jbe
in
xlat
mov
or
cmp
cwtl
shr
adc
add
sbbb
stc
push
mov
cmp
push
mov
and
inc
rorl
jmp
xchg
jnp
in
lods
inc
cmp
dec
add
push
lahf
add
add
loopne
mov
stos
jg
fldcw
pop
add
mov
lcall
daa
push
jg
dec
or
push
sbb
or
mov
jmp
out
sbb
adc
or
inc
ja
enter
add
sub
ljmp
push
lods
sub
jbe
jecxz
jg
mov
or
inc
shr
sahf
jae
cmp
popa
flds
dec
int
inc
sub
stc
sub
mov
xor
sub
sbb
xchg
daa
popf
aas
addb
or
je
sti
loope
and
incl
call
jmp
xchg
nop
mov
pusha
mov
mov
fsin
ljmp
outsb
adc
mov
inc
les
inc
pop
xor
push
loop
gs
add
fld
daa
ret
push
decl
imul
pusha
mov
add
add
lock
adcb
or
jecxz
or
incl
or
popl
mov
jmp
add
push
insl
push
xchg
sbb
ss
jnp
xchg
dec
jmp
xchg
mov
sub
and
and
jg
xchg
lods
hlt
jns
je
aad
cmp
incl
fnstsw
sbb
in
dec
xchg
and
push
xor
mov
xor
add
incl
pop
fildll
jl
add
je
pop
ret
xor
mov
inc
jno
lods
inc
jbe
adc
lea
mov
add
inc
jmp
stos
aas
iret
or
arpl
bound
add
push
mov
pusha
idivl
je
cmpl
adc
push
xor
bound
in
sbbb
lret
imul
or
cmp
out
pop
adc
mov
test
push
mov
dec
inc
jno
lods
or
push
jg
popf
icebp
ja
mov
scas
or
ss
adc
fildl
and
fidivl
pop
in
xor
mov
cmpsl
sbb
push
cmp
jecxz
cli
mov
xor
push
cmpl
add
fldl
cmp
add
lcall
ljmp
mov
cmp
mov
lock
bound
or
pushl
cmp
or
movb
cltd
test
ljmp
jae
pop
pop
sub
ljmp
adc
mov
scas
adc
decl
subl
add
add
clc
add
cmp
jmp
sub
imul
xchg
inc
sub
and
xchg
in
pop
jg
in
sbb
sbb
and
out
pop
add
sahf
xor
jae
decl
incl
fdivrl
aas
or
push
sbb
incl
sbb
mov
cmp
ds
and
outsb
sbb
mov
cwtl
sbb
inc
leave
xchg
mov
push
add
clc
pop
xchg
and
ret
andl
jl
leave
sub
dec
rcl
pop
std
xor
and
insl
aas
std
mov
decl
dec
and
std
add
dec
and
in
daa
ljmp
and
pop
sub
and
mov
inc
pop
incl
add
pop
mov
add
inc
mov
push
adc
adc
stos
push
decb
lds
mov
jnp
stos
push
mov
or
out
inc
lret
pop
sbb
mov
arpl
clc
mov
ret
cmc
adc
pop
add
fldl
inc
mov
add
incl
add
pop
adc
xchg
push
or
rcr
and
std
or
jle
push
shrl
push
adc
inc
add
add
lods
add
out
pop
add
pop
jne
ja
dec
cmp
ss
cwtl
xchg
pusha
xchg
jmp
sub
clc
or
pop
mov
test
lds
push
mov
jmp
ja
fcompl
leave
js
jae
pop
cmovle
adc
decb
aas
xchg
fildl
test
push
add
icebp
xlat
ljmp
shrb
movsb
filds
jb
sbb
xchg
in
jle
icebp
cmp
xchg
cmpsl
adcl
loopne
xlat
mov
pop
rolb
adc
hlt
es
les
jle
sti
mov
or
nop
aas
jg
lret
mov
mov
shlb
add
cmp
mov
insb
add
push
divl
loopne
pop
pop
mov
cmp
ljmp
xor
addl
push
mov
xorb
xlat
ljmp
out
sub
inc
jle
add
loop
mov
inc
push
not
inc
aad
test
call
test
cmp
or
insb
mov
jg
dec
iret
sarl
out
mov
aas
push
xchg
xor
push
and
adc
sbb
ljmp
mov
insl
incb
bound
inc
stos
mov
pop
add
std
or
lock
mov
push
mov
add
clc
cmp
fstl
call
mov
js
jmp
and
cmp
mov
sar
lcall
add
es
insl
adc
mov
scas
addb
push
cmp
jmp
and
sbb
fbld
pop
rorb
pop
cld
cwtl
movb
pop
adc
lcall
or
or
jge
jnp
cmpsl
call
adc
xor
lds
jge
pop
inc
mov
xor
inc
mov
jg
push
aas
push
xchg
and
mov
pop
incb
xor
mov
mov
enter
mov
sub
jle
jp
mov
push
push
mov
frstor
and
xor
je
ljmp
add
xchg
sub
popa
aam
test
call
xchg
imul
int
xchg
lock
jg
incl
dec
push
adc
inc
roll
aam
adc
dec
push
push
mov
pushf
sbb
cmp
xchg
or
lods
mov
adc
or
adc
push
decl
xor
and
or
mov
push
or
jb
dec
subb
das
rcrb
jmp
jae
inc
cmp
inc
mov
mov
cmp
pusha
mov
xor
sti
pop
jmp
movups
sti
jbe
lret
in
pop
or
mov
jg
decl
fs
cmp
addr16
add
or
jb
ss
mov
pusha
pop
mov
xchg
sbb
sub
sti
mov
adc
call
ds
into
sar
aaa
jl
outsl
mov
fs
shlb
ljmp
xchg
mov
test
pop
test
scas
or
pop
xlat
nop
push
out
mov
add
add
ficoms
push
sar
dec
dec
pop
mov
clc
xchg
movsb
push
mov
mov
mov
add
dec
cli
call
mov
mov
mov
mov
mov
push
push
sbb
mov
lock
push
add
or
pop
loope
push
xchg
pop
cmc
jl
sub
cmp
cwtl
mov
push
or
dec
mov
pop
cmp
push
outsb
ret
jg
and
jb
add
or
jnp
rcrb
rep
dec
sub
ljmp
aaa
push
in
std
pop
jns
nop
push
mov
mov
in
sub
movsb
xor
mov
inc
or
push
fadds
inc
push
std
jmp
inc
jg
pop
or
or
xchg
mov
push
push
or
pusha
mov
mov
lcall
aas
lret
shrl
adc
pop
push
push
out
ret
or
mov
xor
incl
rcrl
push
loopne
push
adc
stos
add
or
ret
ljmp
push
sbb
or
sbb
lea
push
jecxz
add
sahf
sub
ljmp
stos
mov
pop
add
jmp
push
sbb
add
mov
cwtl
movsb
shll
or
aas
enter
inc
ud2
repz
jg
and
aam
or
shrl
call
lcall
lcall
dec
repz
push
dec
push
inc
xchg
mov
popf
xchg
push
sbb
sar
jmp
jae
adc
inc
js
xchg
daa
aas
cld
mov
mov
cwtl
int
jbe,pn
mov
sbb
ljmp
or
out
sub
inc
movsb
mov
or
cmp
pop
jg
inc
sub
xchg
dec
add
movsb
pop
cmp
mov
jmp
out
test
std
call
sbb
push
loopne
into
adc
cwtl
aam
testb
lods
int
lods
inc
ret
jmp
pushl
or
leave
jae
cmp
dec
or
sub
ud0
inc
mov
roll
pcmpgtb
fs
xor
push
cmp
sub
pop
pushl
add
jmp
rcrb
out
jg
std
out
test
and
xor
pop
pushf
mov
incl
mov
rorl
arpl
adc
jns
loop
or
dec
cmp
sub
sbb
push
xchg
cli
fcoms
loop
mov
or
mov
cmp
lcall
lods
jp
push
xchg
mov
in
fdivrs
xor
lods
outsb
cmp
mov
xchg
inc
cld
lcall
mov
add
sub
ljmp
mov
xchg
push
ss
add
sbb
sbb
mov
test
jmp
mov
xor
or
xchg
dec
fdivr
mov
mov
pop
adc
jmp
lcall
adc
repnz
pop
or
add
jmp
imul
push
and
decl
adc
pop
add
aas
mov
fsubrp
xlat
jae
pop
sbbl
jecxz
dec
hlt
pop
sti
jg
mov
add
or
leave
or
inc
data16
adc
lcall
jmp
enter
pop
mov
mov
incl
jne
jne
cmp
pop
mov
add
daa
pop
jne
ljmp
inc
push
push
sbb
lea
aad
mov
adc
movsl
fcmovb
pop
pusha
jmp
push
xchg
call
add
mov
stos
xchg
ja
and
xor
jbe
jmp
jno
xor
cmc
adc
adc
inc
jmp
push
sub
add
cmp
incl
sbb
push
lret
movsb
xchg
sub
daa
mov
push
and
jmp
jg
mov
or
adc
mov
adc
jae
lcall
rcll
xor
pop
adc
call
lret
jne
and
jne
call
dec
push
mov
in
cmp
lea
mov
or
test
and
add
lcall
sub
ss
xor
adc
pop
adc
or
inc
or
inc
mov
jge
inc
or
in
push
adc
jae
fdivrl
adc
mov
imul
ljmp
ret
pop
or
push
mov
je,pt
dec
jge
add
shrb
add
lea
cli
movl
push
mov
add
or
mov
pop
mov
cld
shl
imull
fcmovu
pusha
mov
push
pop
jno
cmpsb
xor
incl
lcall
aaa
cwtl
cmp
lret
push
adc
push
je
ds
mov
xchg
shrl
and
scas
jmp
mov
aaa
incl
stos
mov
shll
and
loop
into
ljmp
lcall
aam
inc
sbb
adc
sbb
adc
idiv
call
or
lock
cmp
sbb
mov
sbb
fldt
clc
or
sbb
andl
decl
lock
sbb
sub
pop
aaa
sti
add
cld
pop
cmp
jle
sub
inc
inc
incl
in
lods
rcrl
or
pop
test
shl
adc
jge
sub
lea
incl
into
shlb
insb
fst
or
dec
loope
mov
inc
push
out
pop
iret
and
pop
mov
loop
adc
pop
pop
std
xchg
shll
ja
je
pop
stc
andl
xor
xchg
mov
fldt
adc
roll
add
ret
xchg
push
inc
add
mov
push
flds
addr16
cld
incl
loop
or
insl
fcompl
lock
lcall
pop
cmp
cmp
sub
or
outsl
sbb
jnp
add
lret
outsl
pop
push
push
cli
jmp
push
roll
push
aaa
mov
filds
fcoms
push
fstpt
insl
push
ss
or
add
arpl
jg
xchg
mov
xadd
push
insb
jge
loopne
aam
call
and
add
cmp
lock
test
xchg
ss
pop
loopne
pop
jmp
jmp
push
sbb
rclb
jne
movsb
xor
add
mov
int
jmp
cwtl
sbb
jmp
clc
lods
push
cmp
in
dec
pushl
push
push
mov
xor
cmc
add
mov
xor
incl
cmp
sbb
out
cmp
data16
sub
lods
jmp
sbb
rorb
xchg
mov
pop
add
fstps
push
jecxz
das
jle
mov
data16
addl
pop
or
sub
fs
ljmp
out
pop
mov
xchg
push
cmp
inc
and
sub
and
incl
pop
inc
gs
inc
jnp
lock
add
dec
pminsw
call
cmp
incl
dec
add
mov
and
notl
jbe
rcrb
call
popa
scas
pop
or
addr16
test
and
test
sub
cld
fwait
pop
push
scas
push
shll
jne
mov
jmp
ljmp
dec
sbb
or
pop
js
and
ljmp
in
aam
test
xor
or
jns
cli
std
inc
clc
mulb
adcl
movsl
add
mov
imul
enter
incl
pop
inc
push
xor
add
mov
sti
push
ja
push
xchg
jns
inc
testb
cli
incl
inc
cmp
pop
push
lret
sub
jg
cmp
sbbl
mov
mov
inc
js
aaa
ja
mov
or
jg
shl
push
mov
jnp
ljmp
test
push
lahf
pushl
mov
rol
es
push
pop
fstps
daa
adc
ljmp
pop
pop
sub
mov
push
inc
and
in
add
stos
fcmove
mov
or
xor
adc
ud0
inc
add
inc
mov
add
enter
sbb
xor
aad
jmp
adc
mov
sbb
push
jne
xchg
lods
aad
xchg
jmp
pop
dec
xchg
sbb
inc
outsb
test
push
shr
mov
loopne
push
push
or
call
mov
push
or
shll
call
sbb
nop
mov
arpl
jnp
divl
push
inc
aaa
int
mov
pop
inc
push
xlat
push
daa
sbb
and
xchg
pop
incl
clc
out
push
or
push
mov
leave
mov
or
inc
decl
mov
inc
sarb
inc
loopne
jb
mov
add
jo
add
xchg
call
jmp
mov
or
daa
add
and
movsb
fiaddl
shr
lret
mov
adc
add
pop
and
sub
sti
and
dec
std
add
sbb
fdivs
out
jmp
or
adc
jg
clc
or
add
leave
or
lcall
enter
dec
repz
inc
xlat
into
add
adc
sti
xor
mov
dec
dec
sbbb
jmp
bound
mov
cmpsl
or
or
inc
mov
test
and
incl
adc
cmc
xchg
add
jmp
rolb
pop
lahf
jb
add
push
lock
or
leave
jle
loope
mov
jg
mov
rclb
ret
fcoms
sub
jmp
mov
icebp
outsl
cmp
or
incl
aam
or
or
add
inc
cltd
pop
push
add
or
lcall
dec
pop
stc
pop
mov
fmuls
push
jo
jp
rcrb
aam
stos
jg
jmp
sbb
fcoms
pop
insb
push
xchg
adc
inc
sub
sub
mov
movl
idiv
sub
mov
and
mov
and
sbb
push
into
icebp
fldl
shufps
pop
and
addr16
call
push
pop
mov
or
fwait
mov
dec
xor
jno
add
pop
inc
mov
push
fnstsw
cmpb
xchg
fstl
out
jmp
cli
sti
mov
mov
pop
sub
cli
or
clc
jg
pop
pop
push
mov
gs
daa
sbb
loope
lcall
or
call
ds
mov
and
sbb
sbb
adc
decl
int
mov
popa
inc
rcrb
inc
and
subb
dec
pop
add
int3
les
paddd
cmp
inc
aad
push
and
ret
or
mov
lret
jl
call
xchg
insl
sub
and
cld
add
pop
addr16
sar
inc
pop
push
add
insb
dec
add
fcmovnb
sub
decl
push
add
lds
mov
mov
mov
jnp
aam
inc
decl
adc
aad
sbb
shlb
jle
scas
cli
jae
add
sbb
loopnew
mov
xor
aas
leave
or
push
xchg
push
cli
mov
add
pop
mov
pushf
add
scas
loop
lret
les
pop
xchg
add
cmpsl
stos
sar
jge
shl
loopne
pop
into
cs
rcrb
es
adc
decl
mov
subl
add
xchg
test
push
mov
pusha
loopne
adc
xchg
cmc
jbe
sbb
mov
ljmp
popa
adc
dec
sub
jo
push
pop
stc
xchg
mov
arpl
inc
das
xor
sbb
cmc
inc
mov
mov
push
cmp
dec
inc
lock
sti
add
sub
lcall
xor
jbe
jae
dec
inc
inc
stos
lcall
adc
hlt
ret
aas
cli
daa
cmp
mov
push
push
mov
xor
inc
rorb
stos
js
adc
or
cld
out
call
mov
adc
addr16
pop
cmp
je
aaa
push
add
sub
loope
push
mov
add
test
xchg
pop
movsl
push
push
lcall
cli
sbb
or
push
xchg
int
push
cmp
mov
dec
aad
inc
imul
insl
xchg
loop
or
and
repz
mov
pop
mov
je
sahf
in
push
sub
lret
sbb
adc
or
jp
lcall
loop
mov
test
inc
push
add
mov
mov
cli
sarl
int
andl
lock
dec
cmp
clc
xchg
int
jmp
mov
inc
mov
xchg
push
and
sub
jg
data16
xchg
aad
and
or
xor
inc
and
or
pop
and
sub
into
push
jmp
sarl
pop
mov
je
sub
adc
cmpsl
jns
inc
push
fdivr
decl
pop
jne
xchg
movsl
adc
cmp
sbb
inc
sub
push
xchg
repz
xlat
jmp
sbb
mov
jne
adc
lcall
in
sub
adc
loop
fsubrs
push
iret
subl
sbb
decb
mov
loope
jg
sar
sbb
rcll
adc
jecxz
or
jns
dec
iret
xchg
adc
or
jbe
sahf
pop
xchg
add
cld
call
imul
fdiv
mov
jmp
popa
sbb
mov
popa
jg
jg
adc
jnp
imull
dec
inc
gs
std
and
decl
add
sbb
dec
icebp
or
dec
and
pop
cld
lcall
xor
adc
sub
leave
cmp
shl
ja
or
aad
jg
adc
jns
ljmp
push
cmp
push
mov
sub
repnz
cmp
ljmp
cmc
mov
push
mov
adc
loope
rol
push
sbb
fcomps
rolb
scas
mov
jmp
and
add
inc
adc
xor
cld
ret
xor
jmp
push
sub
or
data16
outsl
fsqrt
in
push
xlat
imul
mov
adc
clc
out
push
and
leave
test
addr16
les
aad
sbb
xlat
mov
inc
mov
aas
std
fstpt
push
pop
push
mov
jmp
dec
mov
dec
shrl
pop
call
div
aas
fstpt
pop
or
inc
and
pop
push
lret
lock
pop
imul
icebp
in
inc
xor
mov
ds
stos
pushl
ret
pop
sub
and
adc
mov
jl
fwait
mov
aas
rcrb
pop
adc
or
adc
and
sbb
adcl
mov
cmp
in
fists
or
inc
add
or
mov
decl
flds
or
add
mov
sbb
jnp
push
je
lods
movsl
sar
jmp
std
mov
sub
repz
mov
daa
mov
mov
mov
xor
aad
stc
cld
and
popf
jo
rorl
xchg
mov
push
and
xor
add
pop
decl
adc
aaa
jge
insl
cmpsb
fcmovnbe
mov
shll
mov
jg
fstps
inc
cmp
push
in
out
mov
fs
out
mov
add
incl
mov
inc
add
xlat
loop
sub
mov
ds
call
add
pop
push
cltd
int
hlt
loope
cli
jbe
sbb
or
sub
sub
pop
add
ljmp
jbe
pop
gs
orb
popf
mov
cwtl
mov
push
push
or
call
mov
jl
sub
addl
outsl
sub
jno
leave
loopne
and
pop
xor
stc
pop
out
push
addb
bound
add
lods
ficoms
ret
leave
out
jecxz
hlt
leave
call
es
jmp
sub
jo
pop
inc
xor
pop
or
push
in
daa
loopne
jmp
fs
ret
cld
push
push
movsb
xorl
mov
pop
mov
lea
popa
or
sahf
mov
cmpsl
loopne
insb
mov
adc
scas
fdivr
jmp
or
or
add
fsub
cmp
hlt
mov
inc
fcomps
cmp
jmp
inc
imul
aaa
inc
adc
sbb
lods
push
jne
sub
clc
mov
decl
add
and
ja
xor
sbb
fwait
sbb
mov
incl
mov
inc
iret
sbb
scas
test
cmp
std
mov
std
lock
mov
add
ljmp
addr16
sbb
outsl
je
mov
pop
sbb
sti
call
ljmp
sbb
dec
and
and
xchg
outsb
imulb
inc
cmc
call
imul
or
cmp
inc
sbb
push
incl
test
or
mov
jecxz
xchg
pop
sbb
addl
xchg
decl
insb
mov
sub
ret
leave
xchg
mov
xorl
and
decl
lock
or
mov
testb
lret
inc
test
decl
jbe
mov
xor
or
add
in
or
fadds
pop
loop
inc
incl
addr16
ja
imul
cltd
add
faddl
sbbb
cmc
call
dec
cmp
fiadds
adc
push
mov
or
mov
cmp
popf
push
cmp
push
inc
jne
daa
out
sbb
jmp
call
sbbl
mov
mov
xchg
in
mov
and
fdivr
decl
shll
lcall
pop
cmp
ret
gs
mov
dec
enter
je
mov
sbbl
mov
push
and
lahf
sub
lock
fistpl
or
aas
jg
jge
arpl
sub
mov
jnp
mov
iret
lcall
or
cmp
add
or
call
sar
filds
mov
sti
scas
outsb
and
mov
lret
enter
lcall
pop
dec
in
testb
pop
push
cs
or
ss
aaa
push
incl
leave
fsubrs
sub
cmp
jae
repnz
pushl
xor
jbe
jmp
or
movsl
fs
repnz
out
in
movsb
lret
out
rolb
std
stos
out
pusha
iret
int3
jmp
cmc
and
daa
cs
pop
clc
jnp
mov
es
ljmp
aad
test
insl
adc
or
xchg
lds
movsb
dec
or
cld
jbe
lock
pushl
outsl
inc
fnstenv
imul
sub
cmp
fildll
jns
mov
imul
incl
les
je
and
aas
test
and
call
xor
push
sbb
and
movsb
rcr
mov
cmp
cmp
fistl
push
jp
ljmp
and
loopne
cmpl
call
out
or
hlt
stc
jb
pop
mov
add
lcall
sub
sub
std
call
mov
sahf
fdivs
push
clc
add
pop
pushf
incl
rorl
test
xchg
mov
or
incl
push
xchg
adc
mov
into
inc
dec
sub
mov
jnp
sbb
incl
pop
fs
and
add
sar
decl
sbb
xor
repnz
and
and
aas
cli
inc
mov
jnp
loope
inc
and
mov
sti
add
dec
and
aas
enter
cmpsb
inc
xchg
push
aam
pop
add
insl
inc
or
aam
xchg
mov
out
mov
jb
pop
xlat
aas
sti
add
hlt
popa
xchg
psubsb
pop
mov
mov
jmp
push
stos
cmp
and
scas
adc
xor
popa
lods
imul
mov
push
fwait
jmp
arpl
or
adc
aaa
in
sbb
mulb
push
arpl
add
test
call
cld
adc
clc
mov
xlat
bound
punpckldq
mov
cmpsl
add
daa
inc
je
add
jmp
sub
and
lea
pop
iret
andl
cmc
call
jae
inc
cli
inc
in
test
jle
aas
jae
sub
and
dec
cli
clc
call
xor
xorb
add
inc
xchg
fsubl
call
cld
aas
jmp
sub
ljmp
sahf
xchg
jne
inc
push
xor
lds
lock
adc
aaa
ss
shr
sahf
mov
addr16
popa
add
scas
inc
loopne
in
adc
or
jecxz
decl
and
lea
mov
insl
loope
sub
js
jno
pop
jno
mov
stos
dec
push
pop
call
repz
or
imul
jne
in
dec
xlat
je
push
mov
jp
xchg
cmp
decl
mov
addr16
and
push
jno
in
in
jb
or
push
lea
push
daa
xor
adcl
lods
fs
mov
lret
ss
xchg
and
adc
test
pop
cmc
lcall
call
or
call
fs
lods
xchg
cli
jp
out
decb
insl
in
sub
fnstsw
jle
jns
ss
sahf
sbb
out
sbb
dec
jo
pop
test
cmc
ljmp
or
aam
dec
inc
js,pn
outsb
cmpsb
mov
jo,pn
or
in
or
mov
loopne
xchg
inc
lret
cmp
cmp
incl
inc
and
orb
loope
push
or
mov
jmp
xlat
movq
rcrl
push
mov
push
mov
ljmp
sbb
fistl
rolb
and
loope
push
fsub
in
in
and
sbb
cld
mov
add
xor
or
adc
push
sbb
and
sub
xor
add
dec
push
aas
jg
mov
pusha
fs
jl
test
out
lahf
mov
movsb
test
mov
mov
mov
push
add
jo
add
cld
jecxz
fadds
add
add
int3
aaa
jno
sti
push
dec
imull
push
aam
or
adc
in
incl
loope
dec
aaa
adc
pop
and
and
sbb
push
push
lahf
sub
lcall
jo
popa
sbb
xchg
rol
call
xchg
adc
xchg
loop
in
sti
decl
lock
add
fidivrl
xchg
dec
adc
add
movsl
sub
dec
pop
jae
jo
pop
inc
pop
lods
xchg
fnsave
adc
pop
cmpsb
xor
xchg
mov
psrad
add
push
insb
lea
imul
call
adc
sbb
mov
and
jmp
xor
mov
cmpsb
push
incl
nop
ja
pop
push
fisttpl
push
bnd
xor
dec
imul
pop
and
jne
pop
outsl
jne
bound
add
jmp
push
sub
and
sub
jmp
and
xor
ja
popa
push
out
mov
sbb
sbb
insl
pop
hlt
push
xor
std
jmp
xor
mov
xchg
sub
out
mov
pop
sub
mov
sbb
dec
jno
repz
test
jg
jge
ficompl
jmp
mov
hlt
movl
imul
push
std
in
leave
mov
add
insb
push
arpl
psubd
or
outsb
cmp
cli
lahf
ljmp
in
pusha
aad
jno
mov
inc
aam
dec
std
test
cld
mov
xor
leave
mov
lods
jecxz
loope
pop
jg
inc
iret
or
shrl
cmp
ficoms
push
xlat
enter
mov
mov
mov
cli
push
cltd
xchg
mov
mov
or
or
mov
jl
das
adc
stos
sbb
data16
inc
fdivl
jno
add
rcrb
out
mov
mov
movsl
in
lahf
xor
mov
js
stc
lcall
test
xchg
sbb
push
sub
insb
fs
add
hlt
std
mov
imul
fdivs
test
decl
incl
in
xchg
push
insb
jnp
add
shl
adcb
fnstenv
adc
mov
mov
das
cld
inc
cld
fistps
ficoml
gs
aam
pop
popa
lcall
std
mov
into
sub
je
jg
mov
aam
movsl
fisttps
xchg
fsubs
rorl
sti
hlt
shrl
imul
inc
mov
sarb
sti
incl
in
add
pop
dec
or
cmp
add
inc
daa
adc
or
decl
and
test
or
mov
popa
into
push
stc
ficomps
leave
fldcw
and
call
cwtl
rol
test
pop
cmp
mov
cmp
lods
insb
mov
in
out
mov
mov
mov
lcall
ljmp
fildl
push
fdivl
jg
adc
arpl
test
fs
ds
or
or
push
in
decl
xchg
daa
scas
add
push
decl
mov
pop
jge
xchg
shlb
add
inc
push
imul
std
jg
xorb
out
imul
aam
loopne
roll
pop
jp
adc
iret
decl
outsl
fistpll
mov
mov
aad
mov
call
xchg
shll
push
repnz
addr16
cmpsb
fldl
mov
dec
ss
fisubrl
or
jg
testb
pusha
jp
inc
ret
out
pusha
fists
addr16
mov
jns
imul
push
lret
sbb
outsl
and
xchg
ja
int3
add
loope
incl
sub
and
es
lds
or
incl
sub
mov
cmpsl
call
ret
shlb
sbb
mov
fs
repnz
pushf
mov
insl
add
ss
jmp
addr16
jb
jmp
call
push
add
adc
mov
jnp
sbb
xchg
or
jmp
mov
fdivrl
fisttpl
aam
roll
icebp
clc
mov
push
int
call
mov
mul
ja
outsl
ja
mov
out
jge
mov
jg
or
cmp
pop
sub
sahf
gs
fildll
std
imul
loop
mov
out
rorb
add
ret
jmp
cmpsl
notl
pusha
rorb
imul
push
scas
fcompl
fldenv
inc
filds
push
cmp
aaa
push
scas
mov
fidivrs
mov
jmp
repnz
lret
pushl
and
sarb
sub
push
mov
jp
mov
dec
fisttps
std
inc
push
sub
mov
or
sbb
add
decl
scas
push
arpl
add
gs
pop
std
out
push
add
add
pop
sysret
repz
scas
stc
adc
enter
add
inc
movsl
and
outsb
fnstsw
pop
adc
xlat
imul
sarb
cli
aas
cld
call
cmpl
sub
adc
jg
fs
movl
or
and
data16
insl
popa
imul
add
pop
leave
arpl
jmp
cmp
push
mov
push
fs
or
and
aas
neg
push
and
je
sbb
dec
xor
push
pushl
pop
popa
sbb
jnp
sub
addr16
push
pusha
filds
jae
sbb
adc
popa
arpl
cmp
das
jmp
gs
pop
call
push
inc
cmovbe
fldt
sti
inc
push
dec
inc
dec
insl
push
push
inc
pop
jp
ret
jg
pushl
pop
sub
sbb
es
dec
push
xchg
insb
xchg
xchg
xor
pop
fptan
loop
xchg
js
insl
ja
push
pop
sti
loopne
mov
and
clc
dec
out
rcrb
dec
pushf
test
jg
jae
js
in
imul
fcomps
inc
loope
aas
or
inc
ja
pusha
add
imul
ficompl
imul
aaa
fsts
inc
incl
inc
aad
mov
jge
insb
repz
popf
push
je
iret
fstpl
popa
inc
gs
scas
ljmp
mov
gs
insb
movsb
mov
in
add
fmul
jo
jmp
call
mov
fcompl
fisubl
and
adc
mov
inc
jo
inc
sub
decl
cs
ret
outsl
cmp
and
mov
imul
decb
in
lds
inc
in
ud0
sub
or
les
jmp
xchg
daa
add
ljmp
aad
fsubrl
shrl
push
mov
xchg
pop
push
inc
incl
lock
xor
mov
push
out
xchg
xchg
icebp
int
fcmovne
das
fld
cmp
jmp
jmp
xor
sub
inc
pop
fcomip
call
jae
add
ja
sbb
andb
and
movsl
jb
pushl
int3
in
inc
sub
push
sbb
jo
mov
mov
and
sbb
sub
test
insl
fsubrs
data16
mov
adc
mov
xor
lcall
cli
imul
sub
xchg
mov
mov
pop
icebp
pushl
adc
mov
shll
movsb
in
fs
repnz
ja
mov
test
xchg
test
push
into
or
mov
jmp
movsl
push
lods
fs
test
xchg
xor
inc
or
movsl
jg
jmp
test
mov
andb
jo
and
ljmp
push
je
notb
pop
add
or
xchg
adc
pop
popa
aas
decl
testl
mov
jmp
test
mov
or
pop
xlat
cmp
inc
mov
adc
jns
stos
popf
sarl
out
push
outsl
mov
imull
jnp
dec
push
je
push
add
popa
dec
inc
add
ret
int
insl
ja,pt
ljmp
ss
add
outsl
arpl
push
adc
fldcw
push
mov
jg
inc
js
and
xor
pop
inc
aas
pop
cli
call
enter
inc
daa
ss
dec
push
iret
lea
jnp
cli
pop
std
call
inc
adc
pop
or
inc
mov
push
jp
das
adc
arpl
aad
adc
adc
mov
hlt
test
lret
sbb
xlat
pop
jl
push
and
and
sub
cli
aas
adc
lock
or
pop
add
fdivrl
jnp
aad
xor
xor
imul
repz
mov
xor
cmp
in
ds
jg
add
pusha
test
add
jge
fnsave
add
inc
add
fiaddl
addl
and
add
rolb
inc
add
mov
add
add
add
add
add
inc
push
addl
mov
addl
or
or
hlt
inc
or
inc
or
or
orl
inc
or
outsl
inc
cld
push
incl
inc
or
or
or
sbb
push
add
inc
jno
jge
jns
pushl
pop
add
add
add
pop
add
pop
add
push
sarl
sti
add
aaa
jp
dec
add
pop
adc
es
jg
clc
add
adcl
adcl
push
std
incl
pop
add
sbbl
movsl
outsl
cmc
add
sbbl
sbb
sbb
decl
cmp
pop
sbbl
add
jmp
loope
sub
mov
xlat
mov
setle
shlb
sbb
push
inc
inc
and
and
cmc
adc
sar
push
nop
insl
movsb
pop
pop
pop
cmpsl
mov
jp
sub
sub
test
xor
push
mov
js
dec
adc
jp
aaa
add
aas
stc
mov
jnp
xor
jo
jmp
push
pop
push
fsubrl
popa
data16
cmp
mov
sub
lea
or
js
and
xor
pop
rcrl
mov
lret
adc
jae
loope
ljmp
mull
mov
dec
push
add
ljmp
add
xor
aas
mov
sbb
inc
mov
insb
cmc
inc
sbbl
subl
repz
icebp
je
mov
mov
push
inc
cmp
insb
push
xor
idiv
mov
pop
insl
mov
iret
fs
cmp
jg
sbb
cmp
loopne
in
and
mov
mov
fcoms
mov
fildll
pusha
inc
roll
dec
push
inc
xchg
popa
add
xlat
andb
ja
pop
sbb
push
incl
jb
fcoms
push
xchg
insb
inc
sbb
and
outsl
inc
or
fcoml
div
jg
inc
das
dec
and
stos
pop
mov
mov
jne
mov
movsl
ss
aaa
aas
pop
dec
cmp
jg
pop
push
dec
mov
int
pop
inc
cld
pop
mov
inc
and
lcall
bound
inc
jbe
mov
popa
bound
jnp
mov
jo
sub
sub
imul
mov
or
int
dec
setnp
add
xchg
gs
pop
cld
pushl
addl
arpl
push
hlt
push
mov
rcrl
sub
gs
pop
xor
and
dec
incl
fadds
rorb
pop
push
int
sub
mov
lock
fimuls
xchg
fs
decl
fstpt
or
dec
je
shrl
pop
sahf
nop
push
or
inc
pushf
lcall
push
cltd
jp
les
lea
lock
lret
jp
aad
sub
jge
mov
pusha
sbb
jb
call
mov
pusha
imul
add
shrl
jg
call
inc
fcompl
dec
mov
xor
movsl
pop
lcall
adc
pop
inc
dec
inc
inc
push
mov
jne
inc
and
aas
ss
call
inc
jnp
idiv
inc
lcall
inc
adc
decl
std
sub
jb
sub
xchg
pop
adc
sbb
stc
push
and
out
aam
call
and
dec
loopne
fcomps
sub
fiadds
dec
cwtl
mov
outsl
cmp
shlb
push
pop
mov
jg
pop
push
scas
sbb
cwtl
insl
sub
push
xor
mov
and
jae
xchg
cmp
xchg
xchg
sbb
dec
push
cmp
push
dec
xchg
xor
daa
pop
jb
aam
out
push
sti
push
mov
ljmp
mov
pusha
test
inc
dec
push
stos
and
inc
rcll
mov
jg
decl
mov
arpl
xor
out
sub
add
ret
pop
sbb
cli
push
mov
orb
mov
dec
mov
fmul
inc
and
sbb
xchg
enter
outsb
imul
aaa
stos
jp
xor
jno
decl
xchg
cmp
xor
pushf
int
addr16
mov
sub
cmp
fcompl
hlt
in
inc
adc
push
inc
add
add
clc
lds
dec
xlat
inc
pop
push
adc
sub
xchg
lods
mov
gs
xor
mov
les
push
ret
adc
inc
or
xor
mov
cmpl
mov
lret
pushf
test
imul
incl
jmp
test
xchg
dec
adc
push
mov
inc
pop
pushl
jecxz
xchg
call
mov
and
jb
add
cmpsb
lahf
fisubrs
pop
ss
adc
lret
mov
or
ljmp
call
inc
or
imul
sub
inc
pop
mov
dec
inc
cmp
std
mov
cltd
inc
and
sbbl
dec
pop
or
inc
dec
push
push
sbb
push
movsb
cmp
adc
sbb
pushl
jge
aaa
lcall
push
and
push
push
xchg
or
mov
inc
push
mov
push
cltd
adc
adc
dec
adc
add
inc
movsb
mov
movsl
clc
jmp
adc
adc
push
xchg
mov
pop
mov
ss
inc
outsb
fsqrt
add
cs
insb
jle
mov
pop
push
push
pop
or
stos
dec
pusha
movsb
icebp
lcall
lods
sti
frstor
pop
imul
jg
out
add
pop
or
dec
shll
or
xor
add
pop
pusha
or
xor
jnp
minps
add
cld
jg
out
popa
and
xor
stc
push
pusha
mov
mov
xor
fs
sub
ja
and
xlat
add
jmp
jg
sbbb
jnp
jne
add
mov
cld
iret
xor
xchg
add
incl
or
or
adc
sbb
and
test
testl
add
out
aad
cmp
or
xor
xchg
ret
dec
or
popa
or
jmp
int3
pop
scas
into
outsb
insb
fcomip
or
mov
jns
imul
call
lcall
mov
xor
jae
aas
adc
sub
test
ljmp
add
and
xchg
lds
or
cmp
add
sbb
incl
sbb
nop
sti
testb
incl
pop
cmpsl
sub
pop
mov
sbb
jmp
mov
mov
aaa
add
pop
mov
mov
fldl
shll
and
cltd
cmpsl
out
test
fldl
pop
pop
sub
pop
mov
mov
dec
movsb
clc
call
scas
adc
mov
arpl
iret
or
push
fsub
rorl
add
decl
jecxz
loopne
mov
pop
sub
mov
mov
ud0
cmpsl
dec
pop
sub
les
add
xor
add
decl
xlat
popa
hlt
shll
jne
shll
addr16
es
push
mov
sub
mov
pop
push
jns
hlt
fidivs
sub
push
xchg
add
in
lcall
scas
sub
inc
xor
pop
jmp
rolb
insb
gs
lds
call
pop
lea
dec
fsubl
jns
adc
inc
dec
mov
insb
sub
jmp
or
mov
nop
addr16
ss
imul
dec
ljmp
movsb
call
dec
aas
xchg
cmp
stos
or
push
cmp
adc
push
push
and
lods
cmpsl
outsl
xor
dec
cs
pop
ljmp
cs
adcb
sub
inc
fsubrl
dec
push
enter
push
add
scas
das
add
lcall
and
sbb
mov
sub
push
pop
xor
adc
fwait
cmpsl
cmp
cmp
sub
or
fcompl
xchg
lcall
xchg
xor
lds
loope
mov
jo
and
subl
and
outsl
out
xlat
mov
leave
and
push
fiaddl
adc
int3
inc
cmp
xchg
dec
and
imul
dec
dec
xchg
lock
incl
mov
mov
sub
bnd
decl
push
ljmp
add
andl
int3
data16
ss
inc
jbe
std
sbb
xchg
imul
pushl
and
push
inc
push
add
and
fisttps
xor
or
test
fwait
mov
rcll
pop
pushl
ret
mov
cmp
call
clc
xor
add
pop
jo
cmc
popa
fnstcw
pop
pop
cmc
push
inc
ljmp
sbbb
in
hlt
out
rorl
in
inc
imul
and
jb
push
cltd
ss
pop
bound
jns
lock
pushl
test
pop
loopne
push
sbb
in
or
daa
incl
xor
xor
xorl
das
add
inc
mov
mov
jge
insb
js
arpl
insl
mov
inc
push
dec
insl
ljmp
xchg
enter
adc
lods
mov
jb
dec
adc
out
in
fwait
adc
jg
aaa
mov
pop
sub
ds
sub
mov
adc
xor
sbb
ss
call
mov
aam
repz
inc
mov
jecxz
push
cmp
loop
es
inc
mov
sbb
das
push
sub
cwtl
addl
mov
lock
scas
sti
call
xchg
pop
jne
arpl
jg
test
sbb
jecxz
call
cmp
jmp
rcrl
adc
int
mov
mov
add
cmc
jmp
hlt
mov
loopne
cli
xchg
sub
add
jg
pop
nop
add
jno
pusha
flds
js
rorb
into
in
xlat
aas
shr
adc
jno
xchg
add
ret
lods
add
pushl
ret
rorl
sarb
jmp
aad
gs
cli
cmp
mov
push
loopne
xchg
decl
cmp
rcll
jecxz
adc
shlb
call
fadds
pusha
and
adc
lcall
mulb
sub
sub
sub
jne
aam
das
adc
fs
cmp
call
sub
xchg
push
or
add
or
cmp
popa
pop
out
adc
incl
fistpll
in
ja
mov
enter
addr16
scas
push
jnp
xor
or
popa
or
push
xor
sub
loop
js
xchg
inc
pop
js
jb
inc
adc
dec
push
sub
call
mov
mov
and
sub
fcmovb
xchg
test
cld
incl
pop
push
test
add
adcb
push
cs
cmp
xor
add
cltd
js
mov
add
pop
pop
lahf
pop
jg
pop
lcall
dec
test
test
cmc
jmp
xor
movsl
out
dec
push
push
or
mov
xlat
xor
mov
pop
and
lds
mov
xchg
imul
and
dec
xor
add
es
inc
sbb
jp
jae
ljmp
sbb
dec
and
push
adcl
pop
inc
bound
mov
popf
mov
jmp
sub
dec
or
and
xor
xchg
test
sar
push
inc
xor
gs
xor
aas
movsb
ja
rcl
mov
sbb
push
mov
lcall
jge
inc
js
adc
shrb
clc
mov
inc
xlat
das
cmp
xchg
mov
push
jmp
mov
fs
push
iret
cmp
and
add
bound
aam
add
mov
sub
and
cld
data16
dec
dec
and
lea
push
dec
sub
jmp
adc
jecxz
outsl
inc
push
push
jo
outsl
push
xor
and
ret
cmc
clc
rcrb
sub
pop
mov
orl
arpl
push
xchg
mov
fs
cmp
inc
push
test
decl
sar
push
xchg
add
jmp
nop
dec
dec
ljmp
cld
decl
push
jae
enter
mov
adc
mov
cmpsb
js
insl
lcall
insl
push
out
sbb
pop
sbb
inc
sub
pop
dec
push
ljmp
and
add
mov
xchg
loopne
or
jmp
inc
dec
inc
scas
and
ljmp
outsb
rcr
lods
jne
call
mov
xor
sbb
inc
arpl
call
icebp
sbb
orl
lcall
pop
adc
cltd
test
out
cs
sbb
add
sbb
xor
decl
jp
movsl
cmp
stos
adc
or
xor
test
mov
mov
xor
or
dec
mov
push
lea
dec
push
movsb
imul
cmp
insb
sbb
sbb
imul
push
call
dec
sbb
sub
jg
and
jmp
insb
mov
add
pop
subl
and
incl
adc
pop
les
adc
sahf
or
jnp
and
addl
xchg
das
jne
cs
call
mov
popa
push
out
andl
inc
pop
gs
jnp
jecxz
pushf
scas
outsl
inc
lret
ds
mov
sub
mov
adc
xor
loope
adc
or
lock
push
mov
lret
add
mov
mov
arpl
push
in
jne
mov
test
jle
pushaw
sub
adc
inc
imul
pusha
inc
aaa
xor
push
mov
push
call
cmp
pop
or
lock
jmp
add
ucomiss
xor
stos
dec
jg
inc
rcr
adc
and
xchg
inc
mov
and
pushl
add
sbb
out
xchg
inc
sbb
or
xor
es
and
xchg
pushl
fstps
pop
xor
pop
cmp
jae
mov
fbld
adc
pop
mov
jge
pop
and
dec
ljmp
adcl
mov
ja
or
pop
daa
cmpsb
clc
inc
fwait
out
hlt
pop
imul
fcomi
push
pop
push
xor
idiv
lcall
and
dec
sbb
adc
lods
or
add
dec
mov
adc
ljmp
add
mov
inc
and
mov
and
ja
popa
icebp
push
in
inc
jl
call
je
imul
pop
test
sub
mov
pop
sahf
leave
pushf
rol
jg
sbb
push
lahf
stos
loopne
sti
jb
lea
das
data16
call
mov
add
sub
pusha
jg
in
js
movsb
out
add
popf
jb
dec
loopne
inc
aas
add
aas
cli
cmpsl
out
dec
mov
dec
push
or
sub
adc
decl
mov
inc
and
cmp
jmp
sbb
bound
negl
aaa
add
push
jns
cwtl
sar
mov
add
mov
cli
dec
xor
pop
mov
xor
popa
adc
rorb
ja
dec
je
fisubrl
push
incl
fsubrs
lea
or
test
sub
jmp
popa
pcmpgtd
popa
cmp
and
push
int3
push
sub
pushl
sub
mov
ss
sqrtps
fwait
jp
add
inc
xchg
pop
push
test
call
scas
pop
xchg
orb
bound
enter
lcall
ret
sbb
inc
adc
in
dec
inc
and
aaa
jae
push
dec
lock
fdivrl
daa
ss
mov
sub
mov
popl
cmp
mov
inc
pop
jae
cmp
xchg
mov
adc
pop
clc
incl
or
xor
push
adcl
push
inc
popa
or
je
cld
call
jo
ret
popa
imul
daa
jns
and
sbb
aas
cli
decl
scas
or
loope
outsl
and
pop
jb
aas
outsl
or
xchg
ljmp
adc
inc
orb
gs
orb
incl
sub
orb
add
xor
xor
add
pushl
xor
jae
daa
add
dec
insb
mov
sahf
push
in
jmp
test
dec
fldl
fnstcw
xor
dec
and
call
incl
push
sahf
push
cmp
mov
bound
subb
adc
roll
inc
jae
lds
lcall
popa
add
mov
push
mov
mov
leave
adc
push
push
addl
fisubs
or
push
xor
push
pusha
add
js
jg
lcall
dec
add
or
push
lret
addb
add
xor
sub
push
lock
std
decl
adc
adc
jnp
pop
mov
or
or
mov
xor
repnz
gs
and
icebp
clc
xor
inc
inc
dec
imul
add
sub
addr16
lcall
imul
je
cmp
mov
les
bound
inc
imul
mov
andl
decl
fs
mov
insb
sub
cmp
ss
fbstp
push
pop
shl
jl
stos
sbb
movsb
push
xor
jo
jnp
incl
and
cmp
loop
xchg
loope
pop
xor
mov
adc
call
mov
adc
fisttpll
pusha
testb
add
es
jo
test
repnz
lea
movsb
add
inc
clc
roll
cmp
add
inc
jmp
add
pop
add
sbb
cmp
or
dec
xor
inc
sub
xor
cmp
sub
jmp
imul
inc
imul
add
arpl
push
lahf
pushl
mov
shrb
push
lret
push
sbbb
push
insl
push
imul
cmp
nop
xor
mov
jge,pn
jg
lcall
jne
orb
push
push
test
push
movsl
lods
mov
call
pop
cmp
push
outsl
adc
xor
js
pop
imul
decl
incl
push
int3
jnp
cmp
nop
or
xchg
inc
gs
aad
lcall
add
scas
and
sbb
imul
mov
jb
or
jg
ljmp
fs
push
or
mov
push
movsl
sub
test
loopne
shll
adc
scas
scas
test
fldenv
dec
mov
push
call
push
in
pop
mov
je
dec
adc
insl
sub
or
xor
std
lcall
bound
es
xchg
pop
mov
pop
seta
mov
xchg
jae
fs
call
incl
xchg
cmp
sub
arpl
jae
loopne
dec
jo
test
into
pop
mov
jg
fs
dec
rcrl
mov
js
inc
pop
mov
paddd
dec
xchg
arpl
dec
pop
ljmp
dec
flds
mov
dec
outsl
out
add
push
dec
popa
out
add
lcall
loop
cmp
addr16
dec
inc
ds
lcall
sbb
lcall
cmp
in
push
mov
out
lds
adc
int
lea
and
incb
jae
dec
add
add
or
call
das
xor
das
sbb
lret
dec
dec
inc
mov
dec
pop
stos
dec
inc
jno
push
or
call
or
daa
push
mov
mov
inc
daa
add
incl
jecxz
fucomi
jge
and
dec
dec
inc
push
sbb
push
or
mov
imul
jg
xchg
lods
ss
dec
rcl
loop
lcall
inc
popw
dec
and
push
and
adc
xchg
fildll
dec
dec
inc
jnp
dec
lcall
inc
push
sbb
inc
push
in
pop
aas
dec
ds
in
lods
clc
dec
dec
push
hlt
jg
pop
in
leave
xlat
dec
lds
mov
push
pop
mov
dec
dec
dec
jo
imul
das
inc
incl
cwtl
lock
jae
pop
decl
inc
cltd
push
push
dec
push
out
fcoml
mov
aas
call
and
or
sub
inc
subl
testl
push
clc
add
mov
mov
cltd
sub
add
mov
ljmp
jg
or
dec
adc
push
pop
movups
ret
hlt
push
in
jp
push
je
cs
pop
inc
insb
push
ret
shrl
lret
loopne
pop
jo
mov
adc
int3
je
add
pusha
std
and
aas
sbb
fadds
add
jne
ljmp
mov
fsubl
inc
lcall
insb
lods
mov
adc
xchg
outsl
xchg
or
decl
mov
inc
pop
add
je
aam
inc
mov
aaa
insb
mov
shlb
and
decl
dec
test
jnp
dec
rorl
insb
pop
or
inc
push
clc
das
iret
inc
mov
loop
or
jg
sti
cli
dec
adc
mull
jno
jmp
sbb
sbb
inc
or
mov
imul
sbb
mov
mov
mov
inc
mov
pop
add
adc
aas
adc
sar
incl
add
imul
pop
test
jne
cmp
sbb
and
mov
jmp
adc
daa
in
std
pushl
fisubrs
inc
or
popf
lret
fisubs
lock
in
xchg
int
dec
adc
pusha
lcall
push
xchg
popa
test
sbb
addl
jae
add
inc
fisubrl
lea
sub
sbb
ljmp
pop
cmp
inc
pop
cmp
rcrb
dec
sbb
std
imul
cmp
fdivs
pusha
xor
xor
xor
push
mov
sarl
loope
call
inc
sub
and
imul
lods
dec
pusha
and
jbe
fldl
popa
sbb
mov
clc
pop
arpl
addl
inc
pop
rcrb
sarl
add
xor
incl
pop
pop
lds
pop
es
jbe
push
jnp
pop
decl
pop
sub
fisubl
pushl
or
jo
arpl
sbb
sbb
in
or
clc
popl
pop
repnz
ljmp
push
fidivl
outsb
and
subl
enter
sub
cmpsb
inc
mov
testb
incl
mulb
inc
jbe
invd
jno
push
sbb
xchg
lds
mov
inc
lds
cmp
lcall
mov
mov
fs
jnp
ljmp
cmp
xchg
js
and
jl
push
pusha
out
std
add
add
jg
or
pushf
add
push
push
fs
dec
outsl
outsl
jns
lcall
imul
subb
jne
rcpps
andb
mov
aas
test
inc
rcrb
jmp
or
pop
or
xchg
int
add
xor
and
adc
call
add
ja
inc
or
jno
insb
inc
sub
in
push
and
cmp
aas
cwtl
std
pop
movsl
pushf
add
test
movsb
jge
pusha
pusha
sub
adc
fbstp
push
lcall
push
add
sub
push
add
negl
fcoms
lcall
add
sub
adc
sbb
sti
jbe
incl
jg
sub
adc
sbb
and
jnp
and
incl
or
add
add
push
pop
xchg
lods
jg
push
add
sbb
push
adc
pop
scas
decl
xchg
add
or
sbb
add
leave
push
incl
dec
fadds
and
lock
push
dec
dec
and
pop
sbb
mull
cmpsl
jae
clc
es
pop
sub
lcall
fimull
pop
lcall
inc
je
mov
jp
mov
out
std
jbe
dec
fildl
popa
outsl
outsb
lcall
aaa
jae
in
ja
sub
dec
mov
imul
call
mov
stc
dec
mov
and
daa
adc
js
pushl
pop
incl
adc
aad
push
push
mov
test
cmc
daa
mov
repnz
add
jnp
pop
dec
cli
lcall
popf
outsb
popa
and
and
adcb
addr16
mov
adc
popf
push
dec
mov
inc
sbb
cmpsb
push
pushl
push
into
mov
imulb
inc
push
mov
call
mov
test
or
pusha
imul
arpl
adc
stos
push
scas
repz
or
cli
xor
mov
mov
jne
and
lcall
or
or
adc
jle
adcb
sub
ljmp
outsb
imul
xchg
mov
std
insb
popa
jo
js
jb
jg
das
dec
out
pop
outsl
jg
paddd
cmc
dec
mov
add
sbb
pop
push
les
or
decl
xor
aam
loopne
js
jg
aaa
sbbl
or
jnp
xchg
inc
jle
mov
imul
das
add
fwait
cmp
subl
or
xor
push
or
insb
ljmp
adc
ret
and
mov
push
jb
pusha
sbb
jne
fstpt
ljmp
and
jb
out
repz
push
je
mov
es
jns
ret
fimuls
mov
inc
xchg
cmp
ss
cld
xor
push
pop
and
jae
adc
icebp
lds
pop
rorb
jg
xchg
mov
cmp
je
das
cmp
gs
std
add
insl
jmp
push
xchg
pop
lret
or
xchg
add
cmc
jg
sbb
gs
xchg
push
imul
pusha
sub
or
xchg
jle
fwait
outsl
sar
test
testl
loopne
jg
cmp
xchg
fwait
mov
inc
mov
add
or
cli
pop
cmp
push
nopl
sysret
push
pop
das
and
dec
daa
sti
add
push
pop
adc
push
push
adc
leave
lret
cld
lcall
nop
dec
cmpsb
lods
and
sub
nop
mov
add
adc
add
aas
cmp
pop
add
addb
je
or
icebp
adc
jmp
andb
gs
ffreep
add
sbb
call
lods
icebp
inc
mov
sbb
sbb
push
ljmp
jg
or
daa
sub
mov
add
pop
cmp
cmp
ds
add
dec
push
dec
std
push
or
jg
inc
jb
jno
add
push
jmp
inc
pop
pop
lcall
or
jl
jle
addb
clc
addl
mov
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
and
mov
mov
movsl
inc
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
mov
lds
mov
leave
lret
int
iret
rcl
shlb
add
fcomp
fcmovu
ja
jecxz
in
call
into
out
call
in
out
out
lock
repnz
clc
stc
cli
sti
cld
std
popl
push
mov
push
fsub
pop
pop
pop
pop
pushl
mov
push
jmp
icebp
cli
stos
jle
jmp
add
std
add
jb
add
adc
and
loop
cmc
mov
daa
add
ss
scas
jno
stos
and
fbstp
jl
out
mov
cltd
popf
mov
leave
rcl
fcmovu
loop
jmp
ljmp
lcall
mov
jl
add
or
add
add
and
pushl
addr16
sub
loopne
jbe
or
adcl
add
insl
das
and
fs
mov
loopne
and
inc
dec
popf
fdivs
popa
sbb
sub
call
xlat
sub
or
xor
decl
inc
xor
cwtl
cmp
push
stos
or
jnp
mov
sub
and
addb
push
cmp
aas
jne
data16
lcall
mov
scas
jg
pop
clc
mov
insb
or
out
add
or
ljmp
cltd
call
dec
and
mov
in
mov
sarl
push
push
dec
dec
dec
pushf
aaa
inc
inc
inc
in
add
call
xchg
fwait
enter
or
jns
pop
jns
or
or
ret
movd
xchg
pop
and
sbbb
adcb
mov
push
dec
add
mov
pop
inc
inc
lcall
pop
pop
shlb
cmc
add
pop
lcall
rolb
dec
push
mov
mov
or
pop
dec
jo
sbb
adc
fisttps
xor
addb
shll
push
test
jo
pushl
addl
xor
in
mov
arpl
jg
lock
incl
jmp
stc
jae
add
jmp
and
or
and
push
or
in
clc
clc
pop
lock
push
xor
mov
sub
inc
add
add
dec
inc
dec
add
dec
insl
lods
add
sub
cmp
adc
mov
in
fs
add
mov
clc
adc
jmp
cmpsb
fbld
movsl
sub
es
lods
dec
mov
or
into
push
loope
ljmp
rcrl
pop
inc
sbb
or
inc
jb
jne
jo
or
pop
aad
mov
or
mov
fldenv
lea
cmp
adc
subb
decl
cli
jnp
fstl
es
jmp
jo
dec
sbb
inc
bound
insb
pop
inc
and
les
movsl
and
mov
jg
aas
clc
leave
or
movsl
xchg
mov
scas
xor
mov
call
pusha
xor
int3
gs
dec
cmpsb
inc
push
sbb
mov
nop
sbb
jno
or
scas
lcall
mov
push
sub
dec
shrl
sbb
sbb
aad
jmp
push
add
dec
rcl
adc
adc
adc
push
adc
xchg
in
xchg
adcb
and
lods
js
jge
pushf
ja
jmp
sub
pop
add
push
jl
or
or
cmp
or
push
jne
fmull
or
jae
or
or
mov
push
cmp
add
movsb
pop
inc
div
ljmp
xchg
and
stc
iret
mov
mov
mov
mov
aad
in
pushl
std
xchg
mov
sti
rorb
adc
and
pop
sbb
push
add
in
push
mov
cmp
pop
js
push
adc
dec
cwtl
cmpsb
jg
or
mov
andl
mov
lret
and
add
sbbl
inc
enter
push
in
movsl
mov
stos
clc
push
call
incl
pop
dec
enter
pop
inc
sahf
add
rorb
xchg
decl
mov
subl
sbb
ud0
add
js
xor
inc
enter
sbb
sbb
incl
mov
xor
fstps
cmp
sbb
inc
pop
aas
inc
pop
and
leave
xchg
enter
test
sti
sub
outsb
xor
mov
in
inc
mov
jns
data16
xor
mov
les
push
dec
pushl
js
or
dec
pop
imul
xchg
fs
pop
cltd
jae
cmp
call
dec
adc
addr16
aad
and
je
sbb
sub
mov
inc
pop
mov
adc
mov
loope
inc
sub
insl
sbb
pop
dec
and
mov
or
push
xor
or
pushl
mov
hlt
pop
dec
xchg
das
push
lods
inc
adc
add
inc
sub
cmp
pop
sub
dec
andl
pop
jp
or
adc
inc
das
or
fsubrl
sub
and
dec
pop
inc
cmp
jmp
jne
in
push
dec
push
jbe
sti
inc
push
call
cs
and
and
jbe
jo
xor
arpl
jmp
lods
push
and
into
pop
cmp
stos
sub
idivb
fs
and
bound
jmp
sbb
andb
push
aas
and
sbb
add
cmpsb
add
push
and
pop
and
jmp
jb
popa
inc
insb
data16
imul
inc
sub
pushl
sbb
mov
leave
mov
mov
cmp
outsb
fs
lods
pushl
jne
dec
shll
lret
cmp
adc
push
push
dec
sub
in
dec
outsl
movl
dec
jl
push
inc
push
adc
add
test
decl
cmp
dec
out
push
notl
sub
subb
add
dec
xor
popa
push
sbb
leave
loopne
bound
dec
loop
pop
push
add
inc
push
or
incl
orl
loopne
mov
jae
pop
add
jne
incl
add
dec
xor
or
cmc
add
pop
inc
inc
mov
cmp
jns
mov
jno
or
sub
push
mov
or
and
decl
push
dec
adc
inc
pop
sub
inc
push
mov
ljmp
add
adc
push
stos
fimull
inc
cs
popa
and
cmp
jmp
inc
inc
aas
xorb
testl
cmp
jmp
mov
add
push
mov
int
stos
popf
inc
js
adc
test
lods
or
sbb
jg
incl
mov
in
adc
das
pop
mov
dec
gs
mov
ljmp
mov
stos
sub
cld
lcall
sub
or
roll
push
pop
push
push
xor
push
dec
or
and
lret
decl
adc
sub
inc
push
fmulp
cmpsw
sbb
cs
inc
clc
call
adc
push
mov
mov
mov
test
mov
shlb
aas
cld
jg
loope
inc
dec
popa
fldl
or
adc
jecxz
icebp
adc
fwait
int
adc
dec
pop
adc
or
cli
mov
adc
mulb
int
cmp
push
fcomps
xchg
hlt
pushl
fadds
and
push
push
lcall
pushl
or
popa
out
jne
cli
adc
pop
mov
fnstenv
out
push
mov
jmp
dec
sahf
or
add
inc
pop
push
pop
and
lcall
lcall
cmpsl
adcb
insl
cs
inc
xlat
xchg
xchg
jae
add
incl
lds
iret
faddl
decl
or
dec
jecxz
arpl
cmp
jae
pop
mov
sbb
mov
xor
push
sub
es
decl
xor
pop
push
pushf
and
imul
mov
dec
cwtl
dec
in
outsl
insl
mov
mov
je
jg
push
js
pop
jne
test
insb
add
daa
jnp
jns
call
test
adc
jo
push
push
pop
jbe
push
je
aas
std
lcall
aaa
sti
push
adc
insb
lods
icebp
cmp
jb
js
lcall
decl
out
xorb
sub
xor
aad
mov
lret
outsb
mulb
jl
cld
call
jnp
sti
or
push
push
iret
or
push
out
lea
push
aad
jmp
out
push
imul
mov
sbb
inc
dec
push
std
clc
call
daa
xor
and
arpl
loopne
sbb
insl
jo
mov
pop
imul
jo
or
mov
ret
int
add
add
pop
loopne
cmp
lds
test
dec
cld
jmp
jle
jb
test
mov
jbe
dec
mov
ljmp
jo
cmp
push
lds
or
dec
cld
jg
xchg
jae
loope
adc
jmp
jmp
outsl
push
dec
sbbb
push
inc
inc
xor
stc
pop
or
add
std
incl
jg
lcall
add
or
adc
or
lahf
mov
frstor
mov
std
or
or
adc
lock
add
sahf
add
pop
add
xor
inc
das
jp
fildl
adc
lock
decl
xor
add
pop
add
add
jb
lock
mov
imul
test
fisttpl
inc
fbstp
sub
inc
xchg
cmp
insl
adc
sub
aaa
aam
ja
fcomi
decl
sub
sub
repnz
lcall
push
push
and
incl
rorb
and
add
arpl
pop
incb
add
fcmovnu
pushl
add
dec
imul
stc
pop
add
inc
clc
sub
sbb
add
inc
jo
mov
jno
orl
pusha
and
adc
jno
pop
decl
pushl
dec
or
dec
cmp
inc
fnstsw
lock
add
or
cmp
lods
add
ljmp
cmp
adc
sbb
sub
xor
sub
lock
add
lahf
mov
dec
inc
sbb
lock
mov
dec
add
mov
bound
xor
add
ss
inc
jl
mov
xor
aas
std
std
fdivp
xor
call
mov
aaa
add
cmp
jg
lock
aas
cld
andl
add
aaa
cmp
pop
inc
mov
je
mov
add
or
sub
inc
sbb
adc
lcall
fs
adc
inc
cmpl
sub
mov
mov
and
mov
push
sub
adc
pop
xor
inc
adc
pop
cs
push
xchg
add
call
lock
xor
push
lock
add
lock
cld
adc
cmp
fs
sbb
lock
pushl
ljmp
or
add
add
test
icebp
pop
cli
aas
fisttpll
push
aaa
sbb
add
or
pop
cld
ljmp
sub
jae
das
lahf
lock
add
sbb
xchg
jge
adc
clc
call
loope
mov
leave
inc
add
inc
sub
outsl
dec
xchg
mov
std
mov
lock
xor
jns
mov
mov
jg
and
cmp
sub
les
stos
lock
inc
decl
mov
lock
mov
std
push
push
inc
es
stos
idiv
pushl
and
xchg
lea
mov
test
cmp
es
fsts
ds
pop
cmp
aas
push
sbb
sub
xor
mov
sti
pop
ds
pop
incl
or
and
sbb
arpl
add
dec
int3
jns
lock
push
dec
fcomip
jmp
sub
adc
xchg
jg
add
lcall
stos
push
add
pop
sub
sbb
add
dec
pop
add
and
pop
or
push
cld
decl
adc
push
js
pop
or
push
pop
push
push
sbb
lcall
adc
pop
or
cmc
sbb
adc
or
inc
or
or
fisttpll
pop
sub
std
adc
cmp
add
call
adc
add
add
sbb
or
add
imul
hlt
inc
adc
add
push
and
adc
out
jle
popa
or
or
or
std
outsl
mov
pop
inc
xor
sbb
lcall
xor
and
notb
xor
or
or
add
push
add
outsl
push
or
or
pop
mov
adc
lahf
or
adc
jmp
clc
add
or
mov
and
pop
or
adc
adc
push
inc
jecxz
lock
outsl
push
adc
mov
clc
sar
add
cmp
add
imul
clc
incl
xor
movswl
add
fbld
inc
add
and
nop
sbb
or
add
xor
xor
cmp
sbb
jmp
mov
adc
in
lea
sbb
push
aas
aam
or
add
das
cld
xchg
push
and
adc
push
das
push
cmp
je
std
inc
adc
lock
mov
ljmp
mov
add
add
dec
ss
shrb
decl
vmrun
sbb
cmp
or
int3
pop
mov
decl
or
or
mov
adc
dec
adc
sbb
adc
cld
das
std
andps
and
pop
mov
jl
cmc
cmp
dec
lock
rorb
cld
jnp
lock
ja
fdivs
push
movlhps
jbe
andnps
bound
pop
pop
adc
dec
jmp
mov
lock
add
lock
cmc
outsl
pop
adc
sbb
pushl
and
daa
push
dec
popa
jecxz
sarb
outsl
cmp
and
xchg
pop
pop
outsb
sbb
call
and
decl
adc
add
leave
pop
add
sub
scas
pop
cmp
lock
push
jg
ljmp
or
xchg
add
ss
jmp
mov
std
iret
sub
movsb
and
decl
cld
aaa
pop
icebp
cmp
sub
push
in
add
push
or
adc
adc
decl
jge
aaa
fimuls
push
or
or
cmp
or
idiv
cs
cwtl
in
pop
inc
lcall
or
push
adc
adc
sbb
ret
idiv
sub
adc
push
or
sbb
or
sub
ljmp
push
pop
or
outsb
or
add
fdivrs
inc
loope
orb
or
aas
mov
dec
or
sbb
inc
add
xor
mov
adc
decl
push
xor
or
roll
inc
xchg
fimuls
call
add
minps
add
sbb
adc
inc
lock
add
pop
pop
add
push
inc
inc
add
add
inc
cmp
outsl
add
fisttps
addl
mov
hlt
scas
rcrb
xor
jecxz
shlb
js
dec
add
subl
cs
push
adc
cltd
incl
incl
loope
dec
add
mov
cmp
or
pushl
push
test
add
pop
in
cmp
sbb
lock
push
incl
and
or
pop
clc
packuswb
ja
push
lock
stc
xchg
popf
shlb
push
adc
adc
pushf
ret
insl
sbb
in
push
and
mov
in
jmp
or
sbb
fbstp
or
mov
je
incl
or
mov
shlb
lock
and
or
mov
sbb
lcall
add
je
inc
and
or
push
add
jo
rcl
add
add
lcall
daa
mov
mov
dec
mov
inc
mov
and
or
mov
fdivr
inc
subl
inc
or
or
dec
dec
sti
add
dec
aas
or
pushl
add
xor
in
mov
cld
xchg
inc
fnsave
push
jmp
add
xor
add
subl
xor
call
add
hlt
pusha
cs
jo
scas
dec
shlb
jg
or
loopne
sub
push
nop
mov
daa
lock
addr16
xchg
sub
daa
jb
jmp
dec
inc
imul
daa
gs
mov
imul
mov
arpl
pop
or
shlb
add
add
test
fisttps
pusha
mov
lea
sar
fbld
xchg
sar
push
sub
nop
add
addb
pop
and
push
sub
adc
jb
cmp
adc
sbb
out
jne
sbb
push
cmpsb
in
adc
or
je
mov
pop
leave
sbb
inc
cmp
cmpsb
adc
cltd
lea
std
xchg
adc
lea
cmp
push
inc
das
clc
jbe
mov
inc
sub
imul
add
pop
add
jle
fnsave
xchg
add
jmp
idivl
decl
push
mov
call
cmpb
jne
mov
mov
sti
jg
add
rol
xchg
sub
sub
add
jbe
loopne
ret
fprem
inc
jae
add
xor
pop
sti
sti
std
lea
repz
aas
or
xchg
call
pusha
xor
cmp
mov
push
dec
repnz
push
sub
pop
pop
mov
out
cmpsb
sub
jmp
popa
xor
ret
pop
xor
adc
pop
cld
adc
out
ja
add
jl
out
ret
mov
loope
loopne
jmp
and
inc
loopne
jnp
loope
add
popa
jmp
inc
xchg
add
push
rorb
scas
addl
xor
mov
add
xor
push
jo
mov
lock
and
das
dec
mov
or
pusha
push
subl
xor
orb
add
jg
int
ds
inc
adc
xchg
jg
jg
in
subb
jle
add
rcl
sbb
push
pop
inc
test
insl
xchg
and
adc
cwtl
sbb
inc
pop
dec
push
pop
and
jo
das
cmp
enter
inc
mov
ja
add
sub
or
push
call
rcrl
push
movsb
pop
or
pop
frstor
adc
idiv
outsl
test
pushl
push
mov
push
push
nop
popa
pop
mov
cmpsl
push
pop
pop
push
stos
mov
xor
lea
aam
jo
sub
and
popa
andb
lcall
inc
mov
aas
jmp
incl
sub
aas
call
mov
add
into
add
andl
mov
mov
aas
incl
or
call
adcl
call
loope
cmp
pop
sub
sub
push
lods
test
pop
incl
dec
mov
addr16
roll
decl
sub
ret
xorb
push
ja
fmuls
ljmp
adc
mov
dec
or
sbbl
add
mov
arpl
rorb
mov
mov
dec
add
pop
jb
mov
pop
add
add
add
aas
daa
aam
lods
lods
aas
fisttpl
and
pushf
inc
add
cmc
sub
sbb
out
push
addb
mov
dec
inc
inc
jbe
ret
xchg
mov
add
cmpsb
cmp
imul
aas
sub
dec
inc
ja
sbb
out
fisubs
andl
add
inc
insb
out
or
ja
inc
loop
cmp
cmp
sbb
add
ret
pop
xor
xor
mov
adc
fldl
inc
fildl
sbb
lods
adc
xchg
dec
or
mov
adc
xchg
xorl
jp
sahf
fwait
push
push
in
add
push
inc
and
jnp
or
or
mov
pop
xor
add
xor
iret
dec
xchg
aaa
or
jae
push
dec
push
addr16
loop
pop
mov
xor
add
push
sbbb
add
cmpl
les
and
insb
push
and
bound
sbb
jnp
repnz
pop
mov
add
push
mov
and
adc
daa
dec
push
lods
xchg
mov
push
mov
dec
lret
sub
cmpsl
sub
xchg
xchg
imul
jbe
xlat
push
loop
aam
stos
loop
xlat
jnp
addr16
aas
add
inc
adc
pop
inc
psraw
mov
jno
push
rcll
aad
lods
outsl
fisttpll
es
pop
xchg
add
out
daa
pop
dec
daa
adc
sbb
mov
sub
xchg
inc
orps
inc
push
dec
inc
dec
stc
xorb
addl
sbb
add
aaa
xor
or
arpl
add
ret
jnp
jae
sbbb
jbe
inc
paddusb
ret
push
out
mov
lods
push
int3
clc
inc
ret
sub
xchg
inc
ds
sarl
inc
clc
icebp
pop
sub
lcall
push
sti
or
cmpsb
imul
pop
pop
add
push
mov
lahf
cs
aam
jecxz
test
aam
in
sub
sub
loope
or
lods
mov
inc
jecxz
pop
mov
bound
stos
insl
xor
jo
adc
dec
push
sub
sbb
add
inc
sbbb
add
add
add
push
pop
sub
sbb
movsb
pop
inc
cli
or
add
insb
and
cmovae
adc
loope
or
popa
or
imul
int
inc
and
xchg
fisubl
xchg
xor
addb
sbb
sbb
out
mov
sbb
gs
imul
test
fdivs
or
mov
ret
xchg
mov
popa
cmpsb
cmpsl
pop
and
push
dec
lods
adc
test
mov
outsl
fs
inc
add
push
push
aaa
and
mov
mov
add
sbb
aad
mov
aas
jge
or
mov
fsubs
xchg
push
outsl
cwtl
test
add
sub
add
imul
sbbl
inc
dec
pop
lcall
add
sub
jae
mov
push
push
ss
push
mov
inc
add
push
arpl
outsb
shrb
test
push
rclb
icebp
or
mov
sbb
add
jb
pop
and
dec
imul
xor
daa
and
and
mov
dec
inc
xchg
xor
pop
gs
mov
js
sub
sbbb
pop
push
adc
imul
es
and
das
test
andl
inc
insl
sbb
test
and
test
es
sbb
insl
inc
jmp
jg
fs
mov
gs
sub
subl
daa
mov
cmp
movsb
mov
add
dec
inc
pop
or
rorb
test
rclb
xchg
testb
sbb
mov
mov
pop
dec
roll
dec
and
mov
inc
xorb
pusha
add
inc
das
pop
ret
pusha
outsl
mov
dec
fs
pop
inc
ret
bound
orl
xchg
sub
push
inc
dec
xchg
fstpl
aaa
pop
loop
mov
std
sub
dec
add
xchg
ljmp
push
pushf
inc
and
push
or
xchg
lea
cli
xlat
mov
push
sbb
pop
jns
xor
adc
push
ja
les
xor
mov
jbe
add
dec
and
sub
arpl
ret
adc
inc
push
mov
and
bts
xchg
mov
jno
mov
add
sbb
push
sub
loopne
sbb
sbb
sbb
pop
xchg
xchg
xor
sub
jno
push
adc
pop
iret
xchg
and
sbb
mov
sbb
adc
loopne
push
lahf
pop
jl
adc
rcll
pop
xor
xchg
push
mov
pop
addl
dec
sub
out
or
pop
lea
or
sub
push
push
jae
or
inc
js
push
adc
and
inc
xchg
and
inc
cmp
jo
outsl
sub
sti
pushf
add
sub
push
xor
and
push
xchg
call
xchg
pop
inc
mov
inc
and
sbb
sbb
push
outsb
push
push
adc
adcl
inc
cwtl
cmp
mov
inc
imul
inc
push
sub
sbb
mov
fadds
sbb
push
sbb
add
and
lods
push
insl
add
mov
xor
insl
and
sbb
xchg
add
je
sub
add
cmpsb
inc
xor
push
cmp
dec
sub
dec
outsl
sahf
add
add
jg
sub
daa
push
dec
xchg
sub
sub
push
mov
shrl
shrb
mov
fisubrl
ja
and
cmp
inc
imul
push
fsubs
add
mov
xor
mov
xchg
fdiv
jbe,pn
xchg
sub
orb
and
dec
add
xor
inc
inc
insb
lea
loopne
int
jb
stos
pop
or
or
in
add
ficompl
nop
jo
dec
fisubrl
sbb
pop
push
dec
push
xor
cmp
pop
add
jbe
pop
push
movsl
add
inc
and
add
jmp
imul
push
je
sbb
aad
mov
push
outsb
sbb
inc
inc
or
adc
jo
or
push
sbb
dec
lret
scas
push
fstpt
outsb
adc
loope
jo
jns
and
xchg
add
push
outsl
push
fimull
sub
push
push
sbb
adc
outsl
jae
sub
sub
inc
inc
add
sbb
jo
fwait
or
fadds
sub
cmp
or
xor
fists
test
pop
aaa
dec
imul
push
adc
mov
jge
cmp
xor
sub
adc
sub
dec
sbb
js
mov
sbb
loop
push
and
or
loope
in
insl
sbb
pop
sub
inc
outsl
push
lods
xchg
or
push
sbb
cmpsl
and
mov
and
mov
scas
test
sub
sbb
and
cmpsb
cmc
add
and
mov
mov
and
mov
dec
adc
add
insb
pusha
and
dec
and
stc
daa
xchg
or
xchg
mov
inc
xchg
pop
sub
and
bound
shrl
arpl
jo
mov
shll
cld
pop
sbb
aaa
rclb
adc
pushf
fisubrs
out
lds
and
mov
inc
movsb
fildll
daa
in
jne
outsb
dec
xorl
sti
mov
ss
adc
adc
gs
dec
cmp
sarl
orl
dec
push
dec
inc
adc
shlb
mov
and
and
jno
adc
orb
sbb
jno
adc
rcrl
and
mov
mov
xor
push
pushf
mov
push
add
pusha
dec
or
jae
xchg
xorl
or
data16
adc
inc
inc
rol
sub
dec
insl
mov
sub
sub
jno
xlat
add
pusha
xor
sbb
dec
push
mov
cs
add
jo
lea
dec
lods
and
pop
movl
dec
xor
sbb
mov
push
aaa
push
pop
movsb
push
rcll
and
leave
stos
inc
pushf
das
ret
insl
mov
dec
addr16
test
add
add
sub
sbb
sbb
push
ss
sbb
and
cmp
pusha
gs
mov
adc
aam
and
inc
or
repnz
gs
jo
in
mov
sbb
add
pop
rcrl
inc
or
aas
jae
cld
rolb
adc
and
add
or
movsl
mov
jae
xchg
data16
inc
add
fcoms
nop
and
sbb
mov
mov
sub
inc
and
test
mov
fisubl
and
jle
daa
insl
and
push
cli
arpl
jo
mov
add
xchg
sbb
mov
cmp
pop
je
xor
fcoms
test
out
and
ljmp
or
jmp
fisttpll
push
mov
cmp
fiaddl
dec
pop
push
aaa
push
les
ret
pop
cmp
rcll
imul
add
loop
loope
mov
arpl
cmpsl
shrl
adc
add
sub
adc
outsb
xor
sub
push
and
mov
pop
cmp
jne
sbb
xchg
andl
dec
adc
dec
xor
or
add
pop
push
inc
dec
adc
jae
std
test
ret
stos
jne
cltd
mov
mov
lret
inc
sbb
xchg
fisttpll
push
and
std
scas
push
add
pop
insl
sbb
inc
pop
push
cwtl
iret
sub
pop
adc
jbe
mov
aaa
sbb
insb
in
mov
xchg
adc
pop
fisttpl
fisubrl
int
adc
sti
out
insb
push
push
sbb
imul
and
dec
ja
and
flds
pop
or
jb
add
mov
cmpsb
arpl
sbb
sub
imul
jae
pop
inc
push
mov
pop
add
outsl
lds
inc
and
adc
sub
and
and
jne
adc
lods
push
roll
and
mov
adcb
sub
lret
sub
sbb
and
inc
mov
mov
adc
lahf
icebp
inc
xchg
sbb
stos
sub
inc
bound
insl
movb
or
inc
adc
aaa
xchg
cltd
sbb
fcmovbe
push
les
adc
or
int3
outsl
xchg
enter
sbb
jnp
inc
xchg
ficompl
inc
out
mov
add
in
adcb
adcb
mov
shll
adc
mov
or
jo
pop
mov
xchg
gs
sbb
dec
pop
mov
adc
and
mov
and
dec
dec
stos
or
pop
mov
pop
sbb
dec
mov
imul
sbb
pop
or
mov
sbb
or
and
lea
mov
or
dec
xor
and
mov
and
ret
fsubr
mov
add
cmp
cmp
insl
add
jo
fiaddl
addl
ss
inc
fs
inc
xor
jb
in
adcb
cmp
lock
add
or
pop
mov
add
lea
add
mov
data16
mov
addb
out
or
sbb
sub
xlat
cli
das
xor
add
sbb
rclb
mov
daa
je
or
push
insb
fldt
sbb
xchg
lret
adc
inc
sahf
rclb
lock
and
testb
pop
sbb
add
sub
aas
inc
xchg
xchg
mov
push
mov
sbb
roll
mov
in
sarb
add
and
ds
add
push
clc
push
testl
push
push
mov
lock
mov
test
push
lock
sub
imul
out
dec
sub
and
sub
sbb
dec
mov
lahf
push
jb
xchg
ss
mov
sahf
mov
dec
gs
xchg
sarb
push
mov
ds
pop
cmp
pusha
push
bound
adc
lock
lea
add
mov
add
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
clc
stos
pop
add
stos
pop
add
