mov
mov
lea
call
andl
movl
mov
pop
ret
sbb
sti
fists
and
add
and
sbb
and
fimull
es
adc
mov
andl
idivb
orl
push
inc
mov
pop
mov
xlat
add
push
pushl
sbb
add
push
arpl
push
push
sbb
adc
or
push
mov
fs
lea
xor
rclb
insl
scas
lea
or
int3
imul
fmul
xor
test
je
push
adc
not
int
lds
add
data16
adc
jno
sbb
roll
sti
pushf
pop
inc
push
or
push
nop
jbe
fisttps
mov
daa
add
inc
pop
cmp
adc
or
push
jmp
adc
jmp
fdivrp
stc
es
pop
ret
adc
mov
es
aam
sub
notl
or
mov
and
sbbb
movl
mov
repz
push
push
xor
fs
jle
pop
push
mov
outsl
and
in
inc
jae
add
test
decl
push
daa
loopne
les
movl
pusha
xor
cmp
setne
mov
leave
ret
inc
sub
push
push
xor
push
lea
push
push
mov
inc
les
mov
les
jmp
ss
adc
push
xor
pop
mov
div
add
inc
es
push
lock
or
fs
or
mull
mov
in
testb
push
add
fs
insb
clc
insb
and
inc
idivb
inc
or
cltd
mov
pop
mov
pop
xchg
push
and
xor
mov
testl
cmp
inc
inc
inc
xor
and
inc
inc
inc
sbb
adc
adc
inc
inc
or
add
stc
jl
inc
cld
jo
jo
jo
jo
iret
out
in
jo
jo
jo
jo
jo
mov
mov
orb
nop
mov
mov
inc
jno
lods
mov
sbb
sbb
sbb
enter
mov
add
push
mov
and
fs
push
mov
mov
push
popa
cmp
cmp
cs
test
repz
push
jmp
push
repnz
aas
mov
neg
sbb
pop
add
ret
mov
mov
add
ror
pop
jle
test
push
mov
ja
push
js
gs
addr16
mov
push
jne
orl
jcxz
push
or
or
pop
lock
cld
or
pushf
jge
sbb
or
jle
dec
pusha
pop
imul
sbb
sbb
sbbb
push
bound
aas
inc
xchg
lea
fbstp
mov
push
mov
xor
mull
insb
outsb
xor
mov
cmpb
jne
inc
or
add
or
insl
jnp
and
aam
dec
movsb
dec
jo
std
pop
das
testb
adc
mov
aam
push
sub
jbe
imul
pop
push
push
push
push
and
mov
xor
inc
in
mov
mov
mov
push
push
pop
sub
sbb
mov
movsb
mov
sbb
sbb
arpl
int
faddp
push
add
das
jle
xchg
out
fs
dec
jo
fs
mov
pushf
xor
add
add
ret
hlt
mov
push
ds
pop
push
dec
adc
nop
inc
push
pop
or
push
test
outsb
sub
add
jmp
fcomps
push
fistpl
push
scas
mov
jno
jl
cld
xchg
jo
lock
mov
icebp
and
mov
lea
mov
fnsave
pop
call
loopne
inc
scas
in
f2xm1
xor
jae
cmp
or
loopne
push
sub
fcoms
pop
in
arpl
push
mov
add
jb
pop
adc
je
add
pop
adc
mov
nop
lret
ror
mov
pop
inc
loopne
add
loopne
inc
sbb
cld
add
out
and
jne
inc
adc
pop
adc
sbb
fdivr
movaps
add
add
push
push
xor
dec
adc
add
loopne
jge
shll
pop
mov
sbb
pushf
aas
lock
mov
xchg
in
push
pop
das
sbb
mov
pop
pop
push
adc
rcrl
mov
mov
adc
pop
xor
pop
adc
subb
insl
sub
push
or
rolb
mov
add
mov
pop
push
push
cli
or
or
stos
mov
adc
push
adc
mov
pop
pop
jbe
in
insb
outsl
mov
dec
push
mov
push
xor
or
in
lret
data16
fndisi(8087
push
adc
mov
adc
adc
shll
sbb
gs
jbe
shll
and
pop
pop
pusha
mov
push
int
or
push
xchg
xor
mov
je
notb
adc
dec
ret
push
imul
fildll
jo
pop
jmp
je
fsubrp
lods
or
xchg
lea
rolb
loope
icebp
cmp
jecxz
sub
push
call
dec
sub
add
nopl
adc
pop
jne
sbb
add
push
je
jo
inc
sbb
popf
lock
and
bound
test
sbb
int
cwtl
out
add
in
push
lahf
add
addb
mov
push
push
push
inc
sub
cs
cmove
pop
push
push
test
add
rorl
outsb
and
mov
push
rcll
dec
sbb
push
loope
xor
and
std
mov
dec
sbb
pop
outsl
jbe
adc
cmp
pop
push
push
jmp
icebp
adc
push
inc
add
cmp
or
xor
xchg
subb
pop
fsubp
movsb
sbb
add
fcomip
js
push
loop
sub
dec
push
fld1
or
in
cmp
push
call
ds
pop
adc
and
mov
adc
mov
fsubrl
punpckhbw
loop
in
leave
aaa
call
loope
mov
lock
jecxz
jecxz
fldl
push
adc
divb
and
jbe
enter
or
fwait
jne
int3
push
xchg
mov
insb
arpl
mov
nop
leave
add
jo
xor
out
add
mov
mov
push
push
xchg
jecxz
pop
mov
sub
ss
add
adc
loopne
aaa
mov
pop
enter
out
ret
dec
rol
rcll
imulb
loopne
aam
pop
int3
js
push
mov
cwtl
inc
inc
inc
pop
lods
xchg
mov
mov
mov
pop
pop
mov
fstps
mov
fs
inc
push
add
and
cs
mov
pop
push
sub
jae
jb
add
push
cmp
negb
nop
mov
js
push
movl
cmpb
mov
sbb
inc
pop
sbb
push
pop
hlt
xchg
subb
xor
inc
mov
add
cmp
push
xchg
loopne
adcb
pop
xchg
cli
pushf
nop
rcll
push
mov
jbe
rorb
in
add
stos
stos
mov
jae
sbb
push
lea
fnstcw
movsb
movsl
movsl
scas
push
movsl
jbe
or
into
adc
inc
and
or
nop
or
sbb
dec
jne
adc
notb
sub
nop
or
sub
test
push
push
outsl
add
mov
xorl
lock
push
xor
or
mov
je
cmp
push
push
pop
ret
in
mov
psrlw
scas
or
cmp
std
mov
shl
cmp
mov
js
mov
cmp
fcoms
push
and
and
push
leave
xorl
or
sub
lock
jbe
in
inc
add
jne
sub
mov
sbb
scas
add
adc
xor
sub
jle
mov
cmp
popa
jecxz
add
inc
mov
jne
enter
pop
jecxz
call
sub
in
int3
testb
push
inc
dec
add
es
mov
add
cmp
mov
ja
sub
add
adc
add
xchg
loopne
xor
xor
push
in
lea
pop
mov
movl
push
aam
call
inc
enter
cmpl
sbb
mov
je
sub
std
xor
lret
dec
rorb
push
or
shlb
pop
pop
lahf
pop
pop
or
pop
sbb
nop
sub
ss
push
rorb
sahf
push
add
insl
mov
pop
xor
and
fidivrl
push
das
cld
out
fldl
enter
add
or
iret
ss
aas
jne
xor
and
addr16
mov
push
and
call
add
fdivs
mov
pop
scas
pop
fdivl
mov
add
subl
adcl
push
pop
lds
inc
push
and
pop
nop
sbb
cld
push
sub
push
jno
cmc
data16
in
xchg
insb
inc
add
stc
mov
push
and
in
inc
mov
adc
pop
inc
loope
in
jb
or
push
and
and
cmpsb
jmp
je
cmp
cmp
cmp
and
adc
add
xlat
je
xlat
sbb
clc
repnz
out
dec
shll
enter
imul
dec
shll
shll
outsb
push
bound
add
and
jb
and
ljmp
outsl
das
add
inc
daa
add
jae
data16
scas
sbb
push
das
add
xchg
xor
pop
xchg
data16
dec
jg
subb
push
pop
fs
add
lcall
xchg
add
test
jb
push
mov
nop
or
mov
enter
add
add
leave
js
testl
push
push
xor
xor
fs
push
push
mov
add
or
fistl
add
stos
bswap
xor
add
nop
addl
pop
mov
mov
pop
mov
jg
int
mov
imul
jb
insl
and
outsb
outsb
outsl
je
bound
mov
outsb
and
inc
dec
push
and
fs
out
mov
iret
mov
lea
fimuls
ficomps
jns
fwait
mov
int
out
mov
mov
aas
in
ficoms
lcall
xchg
arpl
dec
aam
fimuls
arpl
sti
das
mov
push
inc
dec
add
add
xchg
or
sahf
stc
pavgb
push
and
add
and
lods
and
add
punpcklbw
add
insb
nop
roll
das
dec
pop
sub
add
lret
mov
mov
shrb
mov
enter
cmp
call
add
or
cmpsl
cmp
push
outsl
mov
pop
je,pn
js
jb
nop
and
jne
jae
inc
and
push
roll
orb
and
daa
xor
aas
inc
insb
insb
inc
gs
xor
incl
dec
jns
jae
jb
add
testb
push
jb
popa
je
lret
test
imul
ret
inc
cs
out
daa
mov
jo
push
popa
add
stc
mov
rorl
gs
outsl
arpl
dec
jae
add
adc
push
push
jp
adcb
mov
push
inc
sub
rorl
jg
addr16
add
aas
verr
or
xor
add
sub
add
aaa
daa
in
sub
je
test
fildll
jp
imul
push
adc
cmp
inc
int3
pop
push
aad
jl
add
bound
lods
add
pop
in
jbe
ds
inc
hlt
push
call
pop
mov
inc
lea
push
ds
call
sahf
xor
push
push
mov
popa
sbb
popa
add
add
push
jmp
in
mov
sbb
int3
call
addr16
out
call
jmp
std
fdivl
jge
movsl
add
inc
push
mov
fisubrs
test
insb
pusha
push
mulb
add
jne
dec
adc
data16
not
jne
adc
dec
sub
push
loopne
inc
in
jmp
fdivrl
add
adc
cmpb
cmp
push
in
inc
xchg
fildl
sub
lock
arpl
das
outsl
addr16
push
sbb
mov
jbe
call
xor
faddl
pop
popa
nop
fwait
mov
cmp
cltd
xor
mov
aam
shlb
iret
in
out
mov
jg
mov
into
mov
stos
fadds
fdivs
or
out
sub
adc
out
pop
or
add
and
and
or
add
push
stc
and
adc
add
cmc
or
add
add
aas
dec
cmp
js
popl
fidivs
js
add
add
xchg
add
add
pop
call
pop
inc
jnp
mov
call
pop
inc
call
adc
mov
imul
cld
or
sbb
int3
fcmovu
mov
push
jae
or
insl
leave
adc
adc
ret
insb
pop
pop
jno
in
xor
testb
sub
fstl
pop
pop
jns
ret
add
lea
push
int3
adc
xchg
or
or
or
pop
jmp
daa
sbb
xor
pop
cmp
or
fwait
lea
add
push
or
lret
push
push
pusha
and
clc
in
sbb
add
jae
fwait
xchg
sbb
aas
pop
ret
sub
jge
adc
out
enter
mov
nop
fistpll
leave
sub
sbb
add
mov
insb
mov
movl
mov
test
test
or
mov
fistpll
leave
je
push
push
add
or
loope
cmc
pop
and
out
push
pop
jp
mov
cld
fs
movsb
inc
clc
and
cmpsb
mov
scas
js
aaa
pop
and
push
inc
or
ja
jmp
sbb
clc
lcall
sti
mov
clc
call
pop
and
push
and
or
and
push
inc
inc
or
lcall
rcrb
jae
pusha
add
addb
push
pop
mov
cmp
cmpsb
mov
or
pushf
aaa
mov
popf
pop
add
add
out
nop
adc
daa
adc
decb
xor
xor
jmp
fwait
in
das
xor
cs
in
movsb
test
int
adc
push
mov
cmp
call
jnp
jbe
and
call
dec
out
outsb
ljmp
fnsave
mov
push
movl
or
or
cmp
repnz
into
adc
divb
adc
mov
cmp
mov
cmp
inc
adc
decl
adc
cmp
jne
cmpl
or
mov
cmpsb
mov
add
jmp
push
jno
shl
xchg
dec
and
push
cmpl
lods
mov
or
push
push
in
insl
mov
dec
rorb
cmp
inc
adc
mov
xor
jge
lods
jl
dec
or
mov
jo
push
push
jno
mov
add
mov
xor
aaa
ja
into
ffree
jo
call
inc
neg
shr
test
jle
mov
mov
enter
mov
pushl
dec
mov
adc
dec
js
lea
shl
cs
lods
decl
mov
cmp
jecxz
bswap
push
mov
add
in
int
rorl
outsl
fwait
or
jmp
jge
adc
mov
add
mov
push
mov
sbb
inc
xlat
fidivl
add
xchg
or
sub
xchg
jl
or
jp
jle
cmp
mov
pop
xor
in
or
pop
mov
mov
sub
popa
jmp
cmp
push
loop
iret
add
sarl
pop
loopne
mov
call
fmull
out
pop
add
xlat
cld
popa
pop
add
popa
cmpsb
and
out
call
lea
push
or
lds
sti
push
jl
pop
lock
or
mov
fcmove
cwtl
ret
or
push
push
shr
pop
jp
adc
or
xor
push
adc
push
mov
pop
or
add
in
sbbl
push
dec
or
xor
stos
adc
sti
dec
mul
lock
sbb
jmp
xor
fldl
push
cmp
adc
cmp
ja
inc
lods
add
push
pop
dec
adc
movsb
lods
jo
pop
mov
push
and
popa
or
push
aad
pop
bound
push
jmp
jbe
lods
jg
pop
arpl
push
inc
es
jbe
mov
mov
mov
jne
jmp
fdivrs
rcll
add
pop
mov
jp
mov
es
outsl
out
xor
add
push
mov
call
pusha
sarb
sbb
dec
mov
push
shr
insb
xchg
xchg
mov
jl
daa
jle
cvtps2pd
jg
pop
fnstcw
adc
sahf
in
and
cmp
lcall
in
or
repnz
push
add
xlat
or
mov
push
and
mov
mov
add
orb
jo
or
inc
sbb
xor
dec
pop
test
scas
andl
mov
push
test
or
test
ss
adc
data16
sbb
ret
xor
pop
repnz
in
sub
idiv
stc
cmc
call
mov
insb
clc
mov
pop
sbb
in
jb
pop
sub
fsubr
std
mulb
cmp
test
lcall
out
add
adc
sbb
adc
inc
push
or
insl
xor
sbb
jmp
sbb
cmpsb
addb
jp
pop
adc
cmp
jae
sahf
xchg
cmp
es
or
mov
push
push
ds
shlb
mov
movsb
and
popf
mov
cmpsb
pop
mov
iret
jno
xor
or
mov
repz
adc
call
andb
mov
sub
sub
push
lock
or
push
loope
push
shlb
pusha
mov
mov
cmp
je
add
sbb
pop
pop
ds
into
adc
stc
add
pop
bsr
repz
loopne
add
hlt
xor
jmp
lahf
leave
sub
into
imul
cmp
xor
cmp
addr16
or
or
mov
push
enter
cmp
push
rorl
call
fwait
cmc
faddl
idiv
aam
push
adc
xor
sub
stos
test
lods
lock
jne
ret
and
in
inc
jb
add
mov
repnz
adc
jle
jmp
daa
lock
pop
add
enter
cmpsb
sbb
jle
fstpt
lock
push
fdivr
xchg
in
fcomps
sbb
loop
das
sbb
mov
push
inc
mov
xchg
scas
xor
mov
inc
ja
inc
push
js
xor
jg
push
pushf
dec
jge
js
or
call
or
add
bound
or
inc
les
fstpt
out
sbb
retw
pushl
xor
add
insb
pop
pop
sub
add
daa
iret
mov
inc
and
jae
add
xchg
xchg
xchg
out
pusha
mov
test
and
xchg
movsb
andb
je
and
and
push
and
pop
push
and
and
push
dec
dec
inc
and
and
inc
cmp
xor
and
and
sub
and
and
and
sbb
adc
and
and
or
add
sahf
and
add
pusha
mov
inc
nop
xchg
cwtl
pushf
repz
fs
mov
push
in
clc
and
pop
bnd
test
call
fdivl
push
pop
adc
cmc
sub
insb
mov
sub
and
add
jg
push
in
add
fnsave
jp
loope
adc
call
pop
sbb
jne
add
push
mov
hlt
fildl
jge
add
xchg
sbb
int
out
data16
call
stos
push
push
das
dec
repnz
push
pusha
xchg
clc
dec
xor
push
lcall
loope
movsl
push
outsl
sbb
stc
mov
or
sbb
mov
adc
mov
mov
push
call
sarl
loopne
inc
or
push
enter
pop
in
dec
pop
test
xchg
sti
shrb
fistl
mov
jmp
popf
push
pop
sub
push
lock
cltd
loopne
int3
add
int
or
insl
pop
mov
js
adc
imul
xlat
lea
call
sub
in
xor
jne
sbb
push
int3
pop
rorl
ficompl
insl
jns
mov
mov
cmp
cmp
addl
xor
popf
stc
lret
cmp
ss
inc
pusha
pop
dec
push
popf
fcomp
sbb
adc
mov
push
jns
aad
nop
pop
push
mov
mov
sub
call
or
xchg
fmull
lret
xor
jbe
jne
idiv
jb
sub
add
jae
sbb
mov
les
loope
and
add
mov
fcomps
add
data16
push
gs
pop
or
in
push
bound
scas
push
pop
test
dec
adc
sub
or
lock
call
clc
pop
xorl
inc
jne
push
cmpl
add
inc
and
push
sbb
dec
xchg
je
jnp
pusha
fiadds
sbb
jp
pusha
dec
fnstenv
pop
faddl
loopne
inc
cmp
insl
loopne
add
jmp
dec
inc
cmp
fisttpll
mov
ret
push
pop
add
and
ds
std
popa
jb
inc
movb
mov
int3
adc
mov
push
pop
in
in
mull
call
mov
lcall
loopne
loopne
push
pop
inc
sbb
mov
aam
in
add
movsb
jle
jae
mov
or
clc
add
andl
aas
and
movsb
aam
xor
cmpsb
data16
scas
mov
popf
clc
loopne
push
call
pop
jmp
div
mov
hlt
xor
pop
std
push
pop
lahf
jno
lock
mov
xor
mov
push
sub
jmp
adc
mov
in
bound
jge
jne
mov
shrb
xchg
pop
xchg
es
add
incb
jne
mov
push
push
popa
rorb
outsl
in
add
or
adc
mov
sti
xor
pop
aaa
push
outsl
loope
mov
and
testb
xor
pop
in
enter
and
sub
cmp
pop
pop
jl
lcall
lcall
sbb
icebp
mov
sbb
sbb
pusha
jae
fs
int3
nop
popa
xchg
out
enter
pusha
loopne
xchg
xchg
xchg
in
in
lock
clc
pusha
in
enter
sbb
mov
int
xchg
sti
adc
jmp
jns
jmp
mov
ds
test
jmp
add
jns
jmp
xchg
out
test
pop
pusha
imul
jmp
mov
in
inc
jl
add
cmp
testw
data16
int
in
aaa
push
jns
test
arpl
in
jmp
cli
in
sar
mov
bnd
addr16
sub
jmp
neg
in
cmpsl
fistpl
push
idivl
xor
addr16
xor
xor
jo
in
cmp
sbb
sbb
bnd
inc
adc
mov
cmp
push
cli
adc
push
incl
int3
gs
fs
cmp
mov
shrl
loop
cmp
add
cltd
loop
int
js
xor
jno
hlt
outsb
jae
sub
mulb
addr16
or
sub
int3
and
dec
and
enter
or
call
pop
outsb
sbbb
fiaddl
jp
rcrb
cmp
cld
mov
mov
or
cltd
roll
xor
les
lcall
cs
xor
pop
adc
inc
and
mov
in
test
call
jg
inc
in
push
add
orb
dec
loopne
pop
incl
dec
test
je
lea
call
cmp
dec
arpl
pusha
push
or
jmp
xor
jmp
mov
lea
mov
imul
xlat
rolb
push
xchg
mov
loop,pn
call
test
je
adc
andl
xor
add
into
or
jge
add
jne
cmpsb
fisubrl
pushf
call
mov
xchg
push
mov
rolb
mov
movl
ficomps
mulb
idivl
push
sub
xlat
inc
adc
push
call
inc
push
and
jne
cli
cmpsb
imul
mov
pop
pop
and
popf
add
mov
lea
push
aad
int
sub
mov
push
das
add
adc
sbb
iret
call
mov
fucom
jmp
mov
add
pop
push
ficompl
add
mov
ficomps
test
jo
mov
call
or
call
sub
je
mov
pop
js
and
push
add
jle
aaa
incl
decl
pop
aas
test
pop
inc
inc
add
in
mov
icebp
ss
movl
adc
int3
adc
mov
fsubl
enter
adc
and
mov
push
iret
sbb
fwait
sti
adc
leave
jne
and
call
inc
aad
sbb
je
sub
subb
and
in
push
call
inc
and
lcall
adc
adc
sbb
sub
dec
in
into
ficoms
push
ret
xor
inc
in
rorl
in
or
scas
push
fsubl
es
mov
ret
inc
push
mov
test
in
cmp
fcmovnb
push
adcb
push
int3
cltd
fisubrs
stc
adc
dec
or
daa
add
and
push
inc
add
push
xor
inc
loope
mov
xor
cmp
jo
or
jne
mov
ret
adc
and
cmpsl
loop
jmp
sbb
mov
jmp
sbb
sub
or
and
mov
mov
invd
jge
ret
mov
test
test
mov
aaa
movsb
dec
add
cmp
xchg
mov
mov
and
addr16
add
shll
sub
inc
dec
add
or
jecxz
movsb
ret
daa
inc
out
sqrtps
add
je
inc
popa
or
add
cmp
dec
pop
insb
outsb
adc
lcall
and
adc
movlps
and
sub
out
adc
or
insl
repnz
xor
ret
jp
dec
xor
xor
sbb
lret
mov
divb
insb
add
int3
insb
ja
add
pop
cs
add
sbb
add
insb
mov
add
or
fsubl
push
or
pop
das
xlat
xor
sbb
and
lods
add
cmpsb
jmp
fistl
sahf
pop
sub
mov
cwtl
dec
adc
adc
pop
or
dec
xlat
insb
push
icebp
testl
xlat
jne
xlat
adc
jno
mov
pop
dec
add
adc
pop
mov
out
mov
mov
adc
scas
dec
inc
imul
das
rclb
xlat
insb
mov
dec
out
cmpsl
das
sbb
dec
fdivs
out
mov
pop
mov
xor
shrl
lcall
shrl
inc
xor
fnstenvs
imul
cmpsb
imul
inc
push
pop
push
dec
shll
cmp
add
rorl
imul
stc
jb
add
xchg
pop
int3
cmc
imul
mov
xor
out
sbb
cmp
cmp
inc
ljmp
test
fiaddl
pop
js
pop
pop
push
les
aam
pop
bswap
loop
in
test
mov
aaa
js
lcall
cmp
add
dec
mov
pusha
and
dec
dec
xlat
sub
xlat
inc
daa
pop
repz
xor
dec
shll
adc
or
pop
jl
cli
pop
sub
scas
pop
hlt
out
pop
call
xor
xlat
faddl
ror
les
xor
mov
mov
popf
inc
or
mov
and
iret
jo
jbe
fs
add
flds
inc
add
xor
in
inc
pop
inc
insb
lea
push
sbb
add
int
or
inc
enter
sub
ret
aaa
fisttpl
pslld
cld
in
mov
ljmp
sahf
xorb
mov
add
pop
loope
fdivs
inc
add
add
sub
or
adc
fs
in
or
adc
mov
adc
or
add
in
repz
sbbb
daa
sbb
push
or
repz
add
ss
sbb
outsl
addb
and
test
add
xchg
iret
xor
das
call
sbb
comiss
in
lahf
add
inc
pop
add
dec
xor
push
add
xchg
sub
dec
pop
jbe
inc
mov
data16
pop
nop
mov
in
inc
call
in
and
and
or
shrb
add
xor
in
cmp
and
or
outsl
nop
sbbl
sub
add
cmp
and
and
dec
das
fisttpl
aam
adc
or
int
cltd
bound
xchg
sub
sub
lret
daa
mov
and
in
insb
pushf
popa
add
outsb
jnp
leave
data16
push
sub
movsb
les
add
fmul
and
sub
adc
push
pushl
dec
outsb
je
jb
gs
gs
fs
imul
je
push
daa
xchg
jne
sbb
outsl
inc
and
daa
jmp
outsl
jae
dec
popa
outsb
sub
dec
jo
outsb
push
jb
sub
and
cmova
imulb
cmp
outsb
or
fs
je
add
add
push
call
insl
and
in
out
sbb
pop
dec
inc
inc
xor
cs
dec
dec
jns
mov
icebp
pop
add
bound
insl
jo
add
inc
and
call
xchg
inc
xor
sub
or
imul
cld
jne
jne
mov
adc
jns
mov
mov
xor
xchg
pop
jo
jb
popa
jae
fsubrp
ja
pop
sub
jb
daa
mov
or
add
inc
push
popf
std
mov
mov
js
gs
pop
push
mov
clc
insl
sub
pop
pop
pop
add
insl
add
sub
imul
or
data16
movups
inc
scas
std
pop
getsec
add
outsl
or
fs
jae
imul
push
aas
xor
sub
pop
lods
jl
jge
inc
inc
inc
pop
mov
add
add
push
clc
inc
bound
cld
addr16
ret
outsl
ds
imul
gs
or
outsl
sbb
jae
imul
jmp
pop
imul
jp
inc
call
insl
jae
pop
rolb
xchg
popf
sub
jb
mov
sub
insb
inc
or
add
mov
mov
inc
fisttps
cmovp
fucom
push
push
push
dec
into
imul
imul
jno
imul
enter
outsl
pop
shrl
jbe
add
push
arpl
cltd
mov
mov
add
das
lods
sbb
leave
add
mov
mov
js
mov
cmp
inc
jge
mov
dec
inc
push
movsb
dec
push
push
pop
dec
packssdw
or
xor
dec
loopne
mov
pop
mov
scas
aam
into
fisttpll
dec
push
pop
push
jmp
adc
push
aas
pop
cmp
inc
push
dec
push
outsl
xchg
or
inc
inc
push
push
loope
mov
pop
ja,pt
dec
inc
mov
mov
ret
push
outsl
mov
insl
jmp
and
dec
and
add
sub
add
cmp
outsb
adc
add
fcomp
xor
pop
addr16
ss
imul
sub
lea
push
icebp
gs
jb
call
push
mov
pmaxub
jae
mov
xchg
adc
imul
test
adc
jb
inc
xchg
dec
addb
call
mov
jl
pop
inc
jb
outsl
jb
jae
arpl
in
jg
cmp
sub
sub
push
and
jmp
adc
mov
rcll
xchg
adc
push
or
cltd
insl
mov
adc
mov
out
add
mov
xchg
addr16
decl
push
push
inc
push
inc
pop
push
outsl
data16
jns
push
insb
jne
add
sbb
pop
insl
cmp
insl
loope
push
fidivs
cmp
mov
push
xor
xor
sub
incl
inc
sub
sub
xor
cmp
jge
xchg
mov
imul
ljmp
pop
inc
xchg
inc
ret
jb
push
iret
jae
pop
sub
mov
jo
adc
or
shl
inc
lods
adc
arpl
jne
in
loopne
mov
mov
add
add
sbb
adc
mov
andl
mov
add
mov
jns
add
arpl
dec
popa
stos
ljmp
das
and
jmp
mov
xchg
flds
and
insb
jns
loopne
sub
xor
jne
jns
mov
scas
mov
dec
and
aaa
dec
cltd
jg
pop
and
cmp
shrb
xchg
outsl
pop
insl
jns
lock
cmpsl
pusha
test
aas
inc
dec
dec
push
sub
test
xlat
pop
fdivrp
pop
fcomps
inc
inc
pop
pop
dec
dec
inc
push
sbb
push
jp
notb
pop
and
push
data16
and
das
inc
inc
shlb
xchg
or
push
add
sub
xor
aam
mov
addb
scas
push
rcll
and
dec
aaa
fs
add
mov
in
add
test
add
adc
cmp
lock
add
cs
and
adc
cmp
mov
nopl
mov
pushf
cmp
pusha
xchg
das
aam
or
add
dec
add
push
or
push
add
jns
pop
mov
cmp
sub
pop
ja
xor
dec
add
dec
add
dec
cwtl
std
mov
or
aas
cs
pushf
push
add
xor
out
mov
je
jb
imul
pop
insb
add
shlb
outsl
and
xor
int3
loopne
mov
add
mov
and
popa
das
jns
cmp
dec
nop
fcomp
popa
dec
inc
add
arpl
outsl
imul
je
add
xlat
add
sbb
xor
scas
sbb
aas
and
divl
add
xor
lea
xor
insb
mov
ja
inc
dec
mov
addr16
test
shll
and
imul
jae
add
pop
imul
outsb
jnp
rorl
cmpl
aas
add
popa
cltd
cmp
mov
and
fs
aas
xor
jae
or
sub
mov
xchg
push
pop
jae
je
jnp
daa
inc
push
popa
sub
imul
sti
adc
popa
out
or
and
outsb
incl
dec
dec
inc
push
or
push
pop
inc
push
mov
xor
cmp
or
xor
lahf
jnp
daa
and
or
push
dec
inc
push
enter
jge
jge
dec
xor
pop
or
mov
mov
pop
dec
outsl
push
gs
outsl
jbe
and
inc
outsl
insb
add
in
jb
sbb
addl
ret
xchg
push
sub
iret
pop
dec
outsb
fs
jo
in
movsl
mov
xor
cmc
sub
insl
popa
bound
dec
pushf
sbb
arpl
insb
ss
cmp
popa
insb
and
dec
dec
outsl
jns
into
pop
hlt
rol
popa
jb
push
sub
inc
mov
repnz
ret
inc
ss
xor
cmp
xor
push
xor
cmp
xor
sub
xor
inc
xor
jnp
add
pop
pop
pushf
xor
add
dec
pusha
or
or
push
jmp
or
sbb
lret
add
nop
in
fs
or
push
movsb
sbb
cmp
lcall
sete
je
add
add
pop
lfs
nop
mov
adc
pop
push
add
sbb
sbb
sahf
add
pop
lock
sbb
or
add
add
cmpsb
rorb
add
inc
adc
xchg
or
sub
sbb
leave
dec
or
pop
pop
add
mov
fdivrs
inc
incl
enter
pusha
aas
add
dec
xchg
adc
outsl
sar
rcrl
mov
rcll
mov
jmp
xor
je
dec
adc
call
add
cmp
fucomi
xchg
dec
mov
lret
or
jns
js
sub
fnstsw
cmp
add
push
jbe
add
inc
push
mov
movsl
addb
or
aam
inc
cmp
xor
and
add
sub
push
cmp
dec
adc
orb
adc
and
xor
or
sbb
testl
mov
aas
movsb
popaw
stos
adc
add
lods
mov
adc
add
jmp
pop
push
add
lret
pop
push
sub
xor
jmp
xor
xor
xor
xor
xor
xor
stos
xor
xor
xor
xor
outsl
call
xor
xor
xor
xor
xor
push
xor
xor
fs
xor
xor
xor
xor
pushl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
je
mov
incl
xor
sbb
pop
adc
inc
ss
ss
bound
push
jo
jnp
pushl
cli
decl
ss
ss
or
sub
cmp
fwait
cmp
cmp
cmp
cmp
cmp
mov
cmp
mov
mov
cmp
mov
adc
xor
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
cmp
jg
mov
cmp
dec
ds
jnp,pt
cmpb
add
sbb
and
aas
jmp
insb
aas
jb
js
jle
test
mov
nop
aas
xchg
aas
pushf
aas
mov
aas
mov
mov
hlt
inc
aas
int3
aas
sarb
fdivrs
fidivrs
in
ljmp
aas
push
call
cmp
or
push
xor
sbb
xor
xor
jmp
xor
std
xor
push
xor
pop
xor
push
fcomip
pushl
jp
xorb
xor
jecxz
out
xor
xor
xor
xor
xor
xor
xchg
nop
xor
xor
xor
xor
int3
pushl
cld
pushl
inc
xor
cmp
xor
push
jo
jbe
jl
xchg
xor
decl
sbb
dec
xor
push
xor
jns
mov
std
xor
aam
ss
ss
xorb
mov
xchg
ss
lcall
ss
ss
mov
mov
ss
ss
fidivl
loopne
out
cmc
dec
std
call
gs
jnp
test
fwait
aaa
mov
cltd
mov
imul
sub
pushl
jns
jg
stos
xor
xor
xor
xor
das
decl
xor
add
xor
loopne
decl
sbb
cmp
push
xor
insb
xor
xor
pop
std
pushl
divl
add
sub
xor
xor
xchg
xor
xor
push
xor
xor
insb
xor
xor
xor
xor
xor
xor
xor
aad
loop
ja
dec
xor
xor
xor
xor
xor
je
jno
push
cmpsl
jae
xor
sub
data16
iret
xor
je
push
cwtl
xor
jg
pushl
test
lods
xor
xor
int3
xor
xor
xor
xor
xor
mov
in
call
xor
jno
xor
lds
or
or
ret
pop
clc
call
xor
sbb
sbb
and
and
sub
xor
xor
cmp
inc
xor
xor
xor
xor
js
jl
xorb
xor
xor
cwtl
xor
les
enter
aam
fdivs
fsubl
shl
fbstp
clc
pop
or
xor
xor
xor
int
test
je
js
mov
xor
xor
xor
xor
xor
xor
xor
xor
jmp
xor
dec
xor
push
xor
shlb
sbb
movsb
sbb
and
push
ss
js
xchg
leave
les
shrb
or
and
sub
lds
aaa
fs
insb
aaa
js
xchg
aaa
pushf
aaa
test
imul
int3
aaa
aam
loopne
cld
aaa
pop
jo
int
sbb
mov
xor
fwait
insb
xor
jl
test
xor
xor
rclb
and
mov
add
mov
and
xchg
test
fstpl
mulb
cli
xlat
add
mov
ss
jecxz
hlt
bsf
lock
fistpll
idiv
xlat
bound
push
test
cmovae
je
xor
add
outsl
aas
mov
xcrypt-cfb
cmpsl
movsl
cld
xlat
popa
incb
add
mov
and
add
loopne
in
enter
lock
add
daa
ja
clc
adc
repnz
sub
dec
mov
add
add
rolb
movsb
adc
add
adcl
inc
outsl
jb
add
jbe
inc
sbb
call
xor
push
lret
daa
lret
fs
inc
push
stc
mov
pop
daa
rol
jnp
adc
jne
inc
or
rclb
mov
js
xor
das
or
pop
xor
jno
lods
mov
jo
push
and
xor
xchg
xor
je
mov
inc
nop
add
andb
add
jmp
xchg
and
adc
push
sub
push
dec
pop
repnz
cmp
rolb
leave
repz
je
mov
and
fmull
jle
and
inc
sbb
mov
jo
pop
inc
push
lods
call
mov
push
mov
adc
mov
mov
sbb
call
mov
ja
inc
sub
mov
inc
mov
mov
push
inc
sti
xchg
add
nop
mov
sbb
push
lock
push
in
bound
stc
enter
popl
push
mov
add
bound
in
mov
and
nop
cmp
pop
sbb
lea
jns,pn
jl
arpl
popa
jle
push
test
aas
sub
inc
dec
addr16
je
adc
push
jo
andl
sub
dec
mov
push
jbe
icebp
aaa
xchg
push
pop
xor
cmp
sete
add
shrb
dec
dec
xor
adc
popa
inc
jmp
stos
insb
pusha
inc
mov
xchg
orb
sbb
sbb
push
xlat
pop
loop
jg
xchg
in
and
loopne
push
subl
lods
lods
add
mov
add
xchg
fwait
xchg
fwait
call
push
call
lcall
push
btr
add
or
ds
call
fadds
push
lods
xor
dec
or
adc
ss
xchg
loope
pop
insb
jmp
je
fisttpl
mov
lock
push
fmuls
jmp
fnstsw
inc
add
mov
fcoms
clc
sub
dec
adc
imul
in
lcall
call
mov
inc
push
jecxz
or
mov
imul
dec
cmp
xchg
xor
outsb
or
insl
pop
pop
fsubr
sti
negl
decb
inc
pop
out
cmpsb
or
cmc
fs
outsb
mov
aam
mov
fmuls
adc
icebp
pop
xchg
lock
jne
pop
fsubs
mov
enter
in
add
mov
xchg
push
cmp
adc
mov
mov
pop
and
xchg
or
push
rcrl
cmp
jmp
loopne
ret
add
add
in
pop
mov
jecxz
loopne
or
cmp
push
push
push
in
fsubrp
fists
cmp
inc
enter
cmp
pop
fcomps
xchg
ja
push
pusha
enter
addl
dec
sti
ss
es
jbe
jge
cld
mov
jae
jl
cvtps2pi
lret
jl
xor
aaa
and
mov
jecxz
lret
add
and
inc
xchg
cmp
pop
aam
inc
daa
inc
cli
nop
xchg
cmp
pop
loopne
pushf
inc
in
jl
test
bound
inc
in
leave
add
enter
stos
inc
cmp
lods
add
push
int
inc
enter
ljmp
movsl
cld
mov
lods
and
jo
xchg
aas
in
lcall
repz
xor
pop
mov
xor
fisttpl
leave
in
imul
cmp
add
push
sub
shlb
pop
xor
imul
cli
push
xchg
in
mov
lcall
cmp
sbb
cmp
loopne
imul
mov
scas
lret
jne
lock
pop
out
test
xchg
je
pop
fstp
push
mov
add
or
pop
popa
pop
jnp
in
testb
pop
push
xor
pop
aaa
adc
pop
sub
call
sbb
and
mov
lods
in
inc
mov
sbbb
cld
loop
xchg
pop
xchg
xchg
lock
pop
cmc
jnp
or
pop
test
push
xor
loop
in
lock
pop
mov
sub
cmp
cmp
call
mov
jb
pushf
sbb
test
and
push
scas
cmp
fsub
and
pop
icebp
bound
mov
stos
test
nop
in
pop
in
enter
sbbl
call
pusha
pop
dec
cmp
gs
mov
dec
fmuls
cmp
pop
fs
adc
adc
cmpl
pop
xor
and
pop
fcmovnbe
push
pop
das
mov
cwtl
addl
pop
xor
pop
mov
jnp
fsubl
das
jns
dec
inc
mov
pop
push
and
jns
pop
add
sbbb
insb
mov
cwtl
daa
lahf
dec
push
std
aas
fmull
adc
repnz
inc
mov
ds
push
int
daa
xor
sub
insb
xchg
cs
testb
or
sbb
js
pop
mov
xor
bnd
sbb
in
call
jo
pop
or
and
loop
push
mov
test
push
pushl
jne
cwtl
cld
lret
or
cwtl
int
cmp
daa
jns
rorb
push
jg
pop
test
repz
add
loope
iret
push
xchg
iret
push
lock
cmp
in
push
subl
xchg
aaa
sub
inc
dec
ds
adc
in
imul
xchg
or
and
fdivs
push
ds
sub
sbb
out
xor
cltd
dec
arpl
mov
cmp
push
daa
test
call
mov
jns
dec
lods
inc
clc
add
cld
xor
ret
stos
in
inc
rclb
adc
in
dec
ljmp
push
lea
push
fmuls
in
lds
cmp
push
xor
sahf
mov
sbb
aaa
cmp
sbb
test
clc
or
mov
in
cmp
sbb
inc
and
dec
push
enter
mov
or
test
add
dec
mov
cmp
pop
adc
das
push
push
cmpsb
sarb
dec
dec
add
hlt
insb
inc
mov
push
scas
push
data16
stos
or
jecxz
add
fcompl
xorl
add
or
jmp
adc
push
loopne
pop
mov
call
sahf
pop
fsubr
push
loopne
push
push
cmp
loopne
push
and
scas
lods
mov
mov
xchg
into
cmp
sub
mov
cli
ret
mov
jae
cmpb
daa
xor
cli
out
sarl
lock
imul
rcr
and
scas
push
fcompl
fcomps
push
fcoms
aad
movsb
flds
push
dec
xchg
repnz
add
push
push
or
or
jae
cwtl
add
stc
xor
sub
test
aas
xor
roll
push
jo
jbe
push
mov
stc
loopne
enter
mov
push
mov
call
dec
jle
call
lock
js
aad
jno
icebp
mov
mov
xor
add
hlt
or
push
mov
cmp
xchg
mov
lock
sbb
adc
aam
sbb
push
cmp
ror
cmp
xchg
fldl
cmp
xchg
sub
subb
or
and
or
iret
leave
xlat
push
push
cld
push
pop
adc
leave
cmp
inc
push
xor
fs
dec
push
jmp
add
push
stc
adc
and
inc
adc
xchg
push
loope
ss
jmp
pop
jb
sbbb
xor
inc
call
push
repz
lahf
mov
jne
cld
out
sbb
call
jmp
cmp
sbb
sbb
clc
add
push
int3
cmp
push
es
push
adcl
and
jmp
sbb
add
or
sti
or
push
add
or
dec
lea
cmp
lret
mov
push
out
daa
fimuls
inc
lcall
inc
inc
push
leave
xchg
dec
jb
inc
add
fs
and
nop
fsts
add
scas
sub
cld
cmp
clc
add
inc
or
lods
icebp
sbb
sbb
adc
stos
adc
mov
push
or
inc
outsb
lea
loopne
sub
pusha
sbb
ficomps
xchg
sbb
adc
add
and
sub
add
or
push
mov
mov
cmpsl
lods
add
fstpl
cmpsb
addl
lret
push
mov
push
push
xchg
push
test
loopne
sbb
out
cmovge
rclb
mov
mov
mov
out
or
pop
push
pop
jle
aad
pop
dec
sub
sti
pop
jge
enter
cld
imul
testb
mov
sub
std
jmp
push
sub
pop
popf
add
repnz
and
jl
jbe
add
push
test
lock
sub
insb
sub
mov
xchg
sbbb
or
jo
push
xor
dec
jo
shrb
add
call
jo
adc
pop
out
aas
inc
lods
pushl
mov
movsl
dec
cmc
sarl
jne
imull
iret
sub
jl
jge
pop
dec
jne
push
and
sbb
in
and
and
fcoms
jns
xor
dec
add
nop
xchg
add
xor
cld
in
mov
inc
shll
mov
dec
pmulhuw
dec
outsb
dec
mov
enter
xorl
push
lret
xor
and
fcoml
js
lods
and
xor
adc
inc
and
fiadds
sbb
or
jbe
in
dec
enter
and
dec
mov
pop
es
or
int
cld
repnz
inc
repnz
dec
pusha
das
mov
jno
bound
loopne
js
cmp
adcl
dec
mov
xchg
out
inc
test
and
mov
push
mov
fadds
pop
fucomi
cmc
dec
sub
pop
jb
lock
in
sub
push
call
and
sub
and
rorb
call
mov
outsl
in
sub
and
sbb
outsl
ret
mov
push
pusha
xor
and
jnp
out
fcoms
aas
es
add
fwait
pushf
je
es
sub
lret
aaa
or
add
jb
push
out
dec
push
es
notl
dec
dec
sysenter
fnstenv
jns
push
jae
dec
or
dec
or
in
sbb
dec
adc
jg
gs
gs
jae
out
inc
and
dec
sub
xchg
pushf
xchg
dec
inc
dec
xor
xchg
and
inc
adc
das
cmp
flds
inc
jns
add
fiadds
inc
fwait
inc
nop
pop
enter
outsb
inc
jns
or
adc
dec
push
enter
cmp
inc
push
leave
es
inc
inc
push
inc
add
inc
pop
cld
inc
sbb
in
repnz
inc
aad
mov
mov
cltd
inc
add
dec
pop
lea
inc
push
jge
cmp
test
dec
pusha
push
fistl
mov
loopne
sub
pop
cmp
sbb
mov
and
and
fsubl
mov
roll
fists
call
in
push
stc
xchg
sbb
inc
and
in
dec
xor
push
pop
in
test
sahf
xchg
daa
xchg
insb
adc
pop
sbb
cmc
inc
jecxz
rolb
lret
dec
mov
ja
pop
insb
mov
sbb
xor
aaa
stc
xchg
in
mov
call
sbb
pop
test
jnp
mov
into
add
add
pop
mov
and
jle
repnz
push
jle
push
inc
in
shr
in
inc
ss
fbstp
cmp
sbb
mov
jbe
push
ficoml
lret
add
adc
das
loope
cmp
inc
movsl
addb
jl
je
aad
adc
call
xchg
lcall
push
es
pop
repnz
xchg
sbb
add
leave
dec
testb
enter
pop
repz
inc
jns
add
loop
mov
push
enter
lea
push
xor
jnp
nop
sub
mov
lock
add
or
mov
enter
or
push
inc
dec
pop
jb
in
inc
fildl
hlt
leave
add
and
inc
fildl
daa
pop
in
inc
rolb
mov
in
inc
cs
jne
mov
call
sub
shl
lock
sbb
dec
push
movb
jns
inc
inc
xor
sub
add
adc
xchg
adc
xchg
inc
loop
leave
dec
pop
repnz
inc
lret
inc
cmp
das
jns
inc
cmpsb
inc
sbb
pop
jns
add
mulb
jns
je
bound
leave
add
inc
dec
inc
aaa
inc
cmp
enter
pop
inc
sub
add
inc
les
dec
push
enter
inc
xchg
inc
cmp
daa
in
repnz
inc
xchg
inc
das
in
cmp
inc
jl
insb
inc
repnz
pop
and
inc
adc
leave
dec
pop
push
inc
cli
aas
out
aas
mov
and
loop
jl
addr16
pop
repnz
adc
aas
das
jns
dec
xchg
aas
xchg
jp
leave
add
and
out
imul
and
jns
aas
repz
aas
add
das
ss
dec
aas
enter
sbb
inc
leave
add
add
ds
ds
enter
ds
jge,pt
daa
in
dec
imul
out
js
cmpb
imul
aas
jns
das
in
ds
sbb
das
cmp
mov
in
fdivrl
in
les
push
repnz
cmp
pop
in
pop
shlb
or
push
and
inc
inc
ss
and
inc
pop
and
leave
dec
cmp
xchg
sbb
xchg
mov
jmp
cmp
cmp
and
stc
jl
fsubl
inc
inc
sbb
loopne
sub
es
mov
xor
insl
in
stos
push
jns
repz
and
std
push
fnstcw
sub
push
mov
pop
outsl
push
sub
mov
inc
and
pop
iret
enter
test
fisttpll
fisttpl
and
int3
adc
cmp
inc
mov
incl
loopne
hlt
and
adc
and
add
loopne
adcl
aam
mov
or
and
adc
inc
mov
xor
dec
repnz
cmp
adc
inc
outsl
add
out
xchg
mov
mov
es
cwtl
std
loopne
popa
sbb
cmp
call
daa
cmp
cmp
in
inc
push
xor
mov
xchg
mov
stos
lods
daa
movsb
push
sub
iret
int
push
mov
jge
sbb
mov
cmp
jl
scas
fcomps
sbb
push
cmp
pop
mov
sub
orb
dec
fmul
pop
cmp
cmp
cmp
xor
and
push
aam
pop
mov
pop
in
sub
sub
call
sahf
cmp
jmp
call
shl
call
xor
mov
mov
cmp
pop
in
test
and
in
cmp
jns
das
aas
cmp
imul
nop
and
shr
sub
bt
xchg
cmp
lret
js
js
cmp
dec
pop
aam
enter
pop
repnz
ds
loopne,pt
sahf
cmp
dec
xchg
jp
in
xchg
add
cmp
jns
pop
cmp
mov
in
repnz
and
sub
inc
xchg
xchg
sbb
cmp
cmp
aaa
nop
pop
sbbl
aaa
test
fwait
aaa
cmpl
in
aaa
inc
aaa
xor
das
cmp
scas
inc
aaa
push
aaa
add
sbb
add
cmpb
in
mov
ss
ss
in
pop
insb
ss
ss
and
ss
jb
adc
pop
ss
mov
xor
fnop
and
std
imul
in
fwait
sbb
push
stos
xor
jns
fldcw
xchg
xor
jb
ret
js
xor
call
insb
sbb
xor
and
jle
inc
sub
sub
fidivrs
icebp
and
inc
loopne
shlb
mov
test
mov
call
push
repnz
xor
fadds
xor
ja
xor
repnz
call
jo
add
jne
push
fistps
in
js
mov
or
xor
daa
hlt
push
aad
shrl
inc
je
scas
inc
mov
pushl
adc
jmp
xor
cmp
add
test
mov
mov
mov
dec
push
leave
dec
mov
xor
repnz
mov
ja
es
ret
mov
std
add
leave
inc
or
xor
outsl
pop
mull
xor
call
cmpsl
leave
inc
push
repnz
in
xor
xor
repnz
xor
xor
xor
or
inc
dec
scas
lcall
xor
insl
mov
mov
lods
xor
movsb
xchg
je
jb
xor
jmp
mov
xor
add
xor
shlb
and
push
mov
push
xor
xchg
xor
jns
xor
fs
enter
or
call
jae
push
inc
xor
in
rolb
pop
xor
sub
xor
add
xchg
pop
ss
mov
mov
call
in
mov
add
aam
xor
in
movl
aaa
inc
sub
imul
xor
xor
xor
enter
bswap
add
fdivrs
shrl
and
and
das
loopne
leave
add
imulb
lds
cmc
fidivrs
jns
das
daa
mov
mov
inc
pushf
das
jmp
popf
xchg
xchg
pushf
mov
repnz
xchg
pushf
push
das
dec
das
aas
das
xchg
sbb
pop
xor
call
add
nop
das
lock
fwait
xor
cmp
addr16
stos
call
mov
add
fsubrs
dec
leave
cs
into
int
adc
pop
loope
jns
lret
dec
call
jae
push
in
call
stc
and
mov
inc
or
call
xchg
cs
add
push
push
cld
in
add
loop
mov
push
lret
clc
and
cmp
fs
sub
pop
je
inc
push
add
add
add
test
add
aam
inc
sbb
mov
or
or
repz
mov
push
sbb
addps
push
adc
push
pop
repnz
loopne
sub
popf
stos
inc
je
push
pop
out
or
xchg
inc
xor
sar
int3
mov
mov
pop
imull
and
and
call
test
add
xorl
in
xchg
mov
sub
fldcw
loope
fsubrl
gs
adc
push
adc
test
fadds
aaa
inc
jl
loop
call
call
dec
ljmp
xchg
lret
jbe
cmp
dec
data16
cld
pop
fcoms
in
call
pusha
xchg
jecxz
cmp
cmp
mov
lock
in
or
sub
mov
dec
push
leave
fmuls
call
add
mov
repnz
mov
jnp
cmpl
call
dec
xor
call
enter
or
call
push
or
outsb
mov
jecxz
movsl
cmp
int3
adc
ret
ljmp
mov
mov
xchg
add
mov
fucomp
loop
ret
push
xor
int3
cld
push
jmp
int
repnz
mov
iret
mov
fildll
call
inc
lock
and
mov
test
hlt
xchg
inc
ja
repnz
imulb
inc
xor
and
imulb
call
push
fldt
aas
loope
add
sbbl
test
les
sub
je
ds
enter
cs
push
mov
iret
call
fsubrs
push
mov
push
scas
out
bound
dec
and
inc
mov
sub
sub
call
xor
sub
pushf
and
aad
out
mov
mov
jns
mov
and
movl
mov
or
outsl
add
or
rclb
push
push
add
push
push
pop
add
pop
js
int
mov
and
push
fcompl
insb
push
push
push
mov
call
push
mov
pusha
push
adc
mov
sbb
daa
xlat
and
fldl
pop
movb
ds
push
push
push
push
push
pushl
insb
int
mov
push
mov
xchg
pop
test
push
clc
out
jle
sbb
mov
dec
cmp
jle
sbb
pop
sahf
mov
and
or
or
push
mov
sbb
bound
push
mov
loop
loop
fcomp
js
xor
push
push
sbb
nop
fnstsw
sub
pop
div
xor
push
add
and
lret
add
xchg
and
xchg
dec
cwtl
cmp
fwait
cmp
xchg
cmpsl
stc
or
clc
mov
arpl
xchg
jp
xchg
jl
or
xchg
xor
call
xchg
mov
or
xchg
xchg
test
push
push
cmc
mov
add
es
out
inc
in
pop
es
nop
xchg
mov
sub
cmp
and
dec
and
movmskps
incl
ljmp
adc
mov
or
je
je
rclb
cmp
rorl
push
movlps
mov
xor
cmp
or
sbb
or
sbb
add
inc
jne
push
sub
repz
xor
sbb
repz
pop
inc
test
in
push
cmp
and
lea
pusha
fistps
loope
pop
sub
dec
push
jnp
pop
mov
push
sub
jno
adc
lods
xchg
dec
xchg
push
nop
test
push
jo
push
adc
aad
pop
push
sbb
mov
and
mov
mov
mov
aad
paddusw
add
inc
pushf
push
cmp
pop
pop
inc
sbb
cmp
andb
pop
push
adc
xchg
mov
xor
cmp
jne
push
sub
mov
adc
pop
enter
push
dec
shlb
push
dec
pushf
push
and
sti
pop
cltd
int
je
mov
pop
leave
or
sub
add
std
xlat
vpackuswb
cmc
pop
cld
fcmovu
xchg
lds
call
mov
into
sub
je
out
mov
insb
xchg
push
xchg
dec
shll
push
imul
cld
cmp
push
sbb
stc
cmp
sbb
push
cmp
mov
pop
fs
push
je
jns
jmp
inc
hlt
mov
dec
pop
test
sbb
jae
lds
cmp
adc
popf
push
mov
test
fisubl
cmpsb
and
rorb
add
in
push
pop
add
sbb
add
adc
mov
adc
daa
mov
call
pop
test
incl
addb
cs
data16
call
mov
movzwl
cltd
idiv
mov
sub
or
adc
negb
mov
sub
cmp
jl
mov
decl
pop
idiv
pop
push
xchg
mov
cli
neg
cltd
sbb
idiv
inc
mov
pop
inc
outsl
or
mov
cmp
negl
push
ss
into
test
mulb
jb
jae
por
subw
mov
call
ret
mov
inc
ljmp
outsb
negl
jne
call
pusha
add
dec
and
jo
addb
adc
and
xchg
jl
fwait
int
and
push
pop
es
xchg
addr16
int
or
sbb
rcr
or
rcll
sub
sub
pop
das
nopl
push
adc
pop
cmp
out
jae
mov
jp
cli
or
adc
fldl
les
mov
or
mov
ret
loopne
mov
iret
jae
nop
out
push
add
pop
or
xchg
mov
xchg
clc
stos
pop
leave
test
lock
push
and
aaa
mov
xchg
imul
call
inc
mov
jmp
mov
inc
add
aaa
sbb
cmp
aaa
out
arpl
clc
xchg
clc
out
or
jmp
push
fidivs
pusha
mov
fwait
int
xor
loopne
mov
mov
imul
cmp
fucom
push
mov
imul
mov
pop
clc
xchg
cld
inc
push
inc
adc
and
ss
repnz
adcb
and
cmp
or
xchg
rorb
cld
xlat
push
aaa
icebp
add
arpl
mov
xchg
fsts
xchg
fs
inc
push
xchg
xchg
xchg
inc
xchg
sbb
mov
and
cwtl
jl
and
push
loope
sub
and
lods
pop
jb
jp
sbb
add
and
sbb
les
test
add
das
pop
sub
mov
sbb
call
aas
aas
jg
das
push
cmp
push
sub
aas
adc
or
or
arpl
inc
inc
add
xlat
sbb
rclb
std
pop
sbb
push
jnp
cmp
adc
es
push
xor
adc
and
fadd
jnp
or
adc
add
sbb
lods
fdiv
aad
sbb
call
xchg
add
push
xor
das
in
and
adc
das
jae
inc
sbb
jb
sub
dec
js
mov
lods
andl
or
sbb
and
mov
mov
jmp
psubusb
fstpl
das
das
sub
sbb
xchg
movsb
mov
mov
push
sbb
adc
iret
enter
in
push
or
rcll
sbb
dec
pop
dec
sbb
in
iret
leave
data16
lds
in
and
ret
jle
fs
cltd
fwait
les
and
js
rcrb
pushf
mov
in
mov
jb
adc
or
addr16
nop
cmp
xchg
sbb
dec
pop
repz
add
test
sbb
xchg
rcrb
push
xchg
xchg
cmp
push
rcrl
sbb
xchg
leave
ficomps
fcompl
push
pop
xchg
mov
sbb
push
and
in
sbb
daa
lea
xchg
insb
rcrb
sbb
or
sbb
or
andl
leave
test
xor
dec
dec
enter
sbb
test
fwait
pop
dec
mov
sbb
pop
sbb
hlt
leave
in
das
lods
sbb
lret
das
cmp
hlt
inc
or
sub
inc
dec
adc
nop
or
mov
loop
or
add
cld
xchg
dec
and
add
mov
mov
andb
daa
jns
add
add
xor
dec
push
add
or
mov
clc
js
jo
inc
das
lock
or
push
or
inc
push
aam
fnstcw
addl
arpl
ja
jnp
addl
add
cs
mov
push
mov
push
pop
inc
repz
int
pop
or
adc
xchg
lahf
lret
enter
sbb
adc
add
call
jge
jmp
jb
push
sahf
ret
inc
out
popf
or
mov
add
jo
enter
fsubr
mov
insl
push
movsl
sub
rcpps
push
push
inc
pop
aam
gs
loopne
out
jae
mov
jb
mov
push
jo
push
out
jge
inc
push
lds
push
sub
lea
mov
inc
xor
sbb
loopne
call
mov
popf
orb
ljmp
add
mov
adcb
jo
sbb
dec
cmpl
jae
test
fidivl
push
mov
or
mov
sbb
jb
scas
dec
jmp
sbb
inc
xchg
shrb
cmp
jmp
mov
cmpb
add
out
lds
jne
mov
into
lea
push
outsb
sub
sbbl
mov
lods
std
stos
loop
lahf
pop
fmull
jge
dec
sarl
repz
je
das
adcl
or
sti
adc
add
pop
adc
sub
insb
mov
rcrb
sahf
adc
dec
mov
xchg
xor
inc
aam
cmp
mov
add
stc
and
call
decl
push
shr
fists
sbb
out
adc
sbb
inc
jp
test
in
add
ds
mov
add
outsl
pop
popa
adc
es
pusha
adc
jae
and
cmp
sti
cmp
ljmp
mov
lcall
push
lock
dec
adc
iret
xchg
or
daa
stc
test
out
cli
decl
sub
or
pop
xchg
stc
push
fsubrl
test
inc
mov
xchg
sbb
pusha
and
cmpsb
in
sbb
adc
dec
enter
push
sbb
inc
xchg
lock
inc
pop
repnz
sti
xchg
cli
adc
mov
push
inc
xor
stc
aaa
jns
das
in
pop
mov
loop
fwait
pop
repnz
stc
or
in
fdivrp
mov
add
jns
xchg
mov
add
jns
xor
leave
mov
add
lahf
test
adc
lods
xor
push
pusha
push
or
push
movsbl
cli
imul
add
jo
js
inc
data16
pop
push
pop
add
clc
inc
mov
sbb
adc
or
adc
add
mov
and
pop
scas
aas
cmp
push
cld
or
xchg
adc
test
push
aam
adc
js
out
adc
and
fs
adc
test
cmp
daa
xor
cs
mov
sbb
adc
mov
adc
mov
out
pop
imull
cmp
cvtpi2ps
or
and
aam
lret
add
cmp
jbe
xor
push
in
xor
outsl
int
lahf
and
je
fdivrl
or
fdivrs
cmovno
mov
mov
xor
xor
and
inc
xor
aaa
ror
test
add
sub
pop
rorl
adc
enter
repz
loope
sti
sub
mov
adc
aam
enter
dec
inc
inc
sahf
push
in
push
xchg
push
int
enter
pop
fcoms
mov
fcompl
fcompl
inc
leave
enter
loopne
or
das
jns
loopne
adc
push
cmp
popa
sub
xchg
push
push
cmp
enter
pop
in
pop
rclb
mov
fcomps
les
repnz
adc
loope
mov
int
sbb
iret
pop
addr16
xor
sbb
cwtl
push
int3
sti
stc
jle
cmp
call
call
fists
shlb
or
mov
in
or
int3
or
out
mov
fsubr
cmp
fisubrs
pop
mov
sbbb
not
sbb
xor
rorb
dec
push
or
fmuls
xchg
hlt
xchg
pop
int3
or
rorb
or
loop
or
mov
or
and
test
sub
jne
mov
rorb
sti
inc
adc
mov
movl
sbb
je
mov
add
add
sub
and
jb
adc
mov
into
mov
cltd
sub
in
push
mov
fadds
cli
or
cmc
xor
mov
push
mov
push
inc
fnsave
adcl
mov
mulb
es
ret
mov
or
shlb
insb
das
or
push
neg
dec
dec
mov
jmp
push
push
sbb
inc
inc
adc
mov
stos
mov
inc
repnz
std
or
xor
imul
loop
pusha
stc
or
shlb
ja
int3
adc
xchg
and
or
push
fwait
out
inc
outsb
xrelease
xor
call
xor
lret
mov
inc
pusha
clc
ds
mov
pop
and
mov
or
pop
mov
mov
mov
test
mov
push
fwait
lods
add
divb
pop
jae
mov
aad
hlt
or
pop
mov
push
push
push
xchg
sub
push
mov
jl
inc
repz
add
je
adc
xchg
sahf
push
ss
adcb
mov
imul
adc
jno
mov
shll
movsb
je
repnz
mov
aad
jecxz
inc
xor
xchg
cmp
cmp
or
lock
aaa
iret
add
nop
shlb
pusha
call
loopne
out
mov
pop
enter
pop
aam
imul
and
sub
inc
push
mov
pop
mov
jno
or
imul
pop
cmpsl
or
lret
sub
fwait
jbe
push
sbb
insb
into
fmull
adc
jmp
push
and
add
push
mov
pushl
pop
cmp
test
and
pop
shll
jne
adc
jmp
cmp
push
push
dec
js
push
mov
pusha
ljmp
jmp
pop
or
push
sbb
jb
pop
in
mov
test
aad
cmp
sbb
add
into
out
sti
jmp
jmp
xchg
cmp
dec
out
insb
js
pop
lock
ds
repnz
or
add
ds
xor
push
push
adc
lret
adc
push
and
or
add
dec
pop
xor
push
lahf
leave
mov
or
mov
push
sbb
inc
xchg
das
nop
or
push
xchg
pushf
in
mov
nop
adc
push
xchg
push
xchg
push
xchg
cmp
cmp
push
call
jns
jb
push
push
push
inc
push
dec
pop
leave
and
das
cmp
stc
add
in
das
jns
add
or
and
lods
add
inc
ds
stos
iret
push
je
sub
xchg
popa
cmp
adc
leave
dec
dec
jb
add
in
daa
cmp
add
add
add
pop
sbbb
jecxz
push
xorl
add
in
jo
mov
lret
inc
add
and
mov
out
inc
pop
cmp
xchg
sbb
orl
sub
mov
mov
adcl
or
cld
jl
cwtl
out
cltd
out
lea
cs
inc
push
mov
in
inc
addr16
std
push
or
sub
movsl
or
pusha
data16
mov
daa
rcrb
dec
xor
mov
int3
std
adc
jne
stos
nop
or
scas
enter
and
sbb
sbb
lret
sbb
cs
push
mov
push
jl
push
leave
mov
incl
mov
xchg
dec
data16
xchg
out
in
add
lret
mov
add
call
scas
sti
rcrl
mov
lock
add
jecxz
insb
add
pusha
arpl
shll
add
ss
inc
add
or
push
or
and
pop
add
jge
adc
jecxz
add
ljmp
fiadds
sbb
loopne
pusha
pop
add
add
pop
inc
es
pop
mov
or
and
or
clc
mov
jl
xchg
daa
dec
call
add
add
add
nop
push
sti
loope
push
stos
fcomp
call
inc
jno
test
mov
into
add
repnz
inc
int3
enter
inc
inc
inc
mov
inc
movb
test
mov
pushf
cwtl
xchg
nop
inc
inc
inc
inc
mov
inc
inc
jl
je
inc
inc
inc
inc
insb
push
inc
inc
pop
pop
push
push
inc
inc
inc
inc
dec
dec
inc
inc
inc
inc
inc
inc
cmp
xor
repnz
dec
inc
sub
add
xor
xor
xor
lods
mov
mov
mov
cmp
xor
rcl
lock
fdiv
iret
out
stc
fdiv
in
call
stc
jl
lahf
lock
lock
lock
lock
lahf
iret
out
add
or
or
adc
adc
repz
jl
sbb
sbb
and
and
ds
iret
out
icebp
sub
xor
xor
cmp
out
stc
jl
icebp
inc
icebp
inc
icebp
dec
icebp
jl
sahf
iret
dec
icebp
push
icebp
cld
icebp
pop
icebp
iret
out
stc
fs
push
icebp
je
jl
lahf
icebp
js
xor
icebp
mov
lahf
repz
nop
icebp
jecxz
icebp
pushf
icebp
mov
lods
mov
add
sbb
sbb
int3
rcl
sbb
sbb
fcomp
loopne
sbb
sbb
call
jne
sbb
pop
repnz
lock
add
lahf
xchg
pop
sbb
and
xchg
sub
js
int
cmpsb
add
sahf
pop
dec
and
push
divl
and
sbbb
cld
xor
xchg
mov
xchg
add
or
and
inc
inc
inc
subb
pop
jb
add
aad
loope
ficompl
icebp
sbb
pushl
movsb
mov
stos
mov
add
addb
fs
jae
mov
lock
xor
push
pop
xor
jb
cmpl
add
push
rep
adc
push
enter
js
sbb
subl
xor
int3
rcll
repz
sub
cmp
jae
inc
das
fsts
inc
sti
sbb
stos
and
clc
inc
test
mov
jb
mov
mov
lret
jg
pop
adc
in
dec
mov
pushf
test
enter
test
mov
in
test
add
mov
xchg
add
in
jle
pushf
test
movsb
test
sub
test
add
test
test
repnz
push
sub
popl
out
mov
repz
iret
pop
repz
repz
dec
dec
cmovle
jne
ds
iret
and
and
sbb
sbb
adc
sbb
sbb
adc
repnz
sbb
repnz
sbb
fistps
imulb
stc
sbb
lods
sub
sbb
sbb
mov
fs
out
mov
sbb
cli
cwtl
adc
add
push
cmp
ja
cmc
pop
or
hlt
cmc
sub
pop
in
in
in
inc
call
aam
jmp
push
fsubr
les
mov
jo
sar
loopne
adc
adc
inc
fnsave
cmc
xor
jmp
lahf
fcomp
cli
adc
pop
jmp
sti
sbb
dec
lock
xchg
or
and
inc
sti
mov
in
hlt
hlt
mov
js
xchg
daa
sbb
or
hlt
shl
iret
jbe
mov
pop
in
jmp
repz
xchg
fmuls
add
cwtl
cmp
cwtl
hlt
push
test
addr16
fsubs
popf
jl
je
insb
push
and
push
enter
dec
inc
hlt
idiv
stc
jns
cmp
clc
fldt
hlt
adc
sahf
pushf
fs
xchg
stc
cld
repz
jmp
mov
pop
or
repz
in
sahf
out
mov
loopne
fs
out
insl
mov
xchg
dec
xchg
mov
push
jl
xchg
insb
jle
pop
repz
std
dec
xor
and
sbbb
repz
repz
sbb
adc
nop
call
push
fdiv
loopne
inc
xchg
addr16
repnz
repnz
int3
repnz
mov
mov
pop
or
xor
in
jbe
push
mov
or
neg
cld
push
and
loope
and
dec
aaa
sub
jbe
xchg
ds
push
call
out
add
sub
cmpl
icebp
into
icebp
add
dec
fsubr
andb
adc
xchg
test
xchg
stc
xor
xchg
out
popf
cmp
icebp
insb
pop
sub
test
pusha
sbbl
orl
xor
sub
sbb
out
xor
pushf
divb
repnz
addl
lock
sahf
cmp
call
lock
in
xchg
daa
enter
mov
repnz
test
pusha
add
sub
push
fdiv
in
and
loopne
je
orl
jmp
push
iret
repz
jmp
sbb
nop
cmc
xor
and
fs
inc
sbb
or
leave
inc
push
add
out
lock
xchg
out
jnp
call
add
sahf
cmp
jb
out
out
mov
xchg
daa
dec
lods
out
movsb
out
pushf
out
orl
xchg
mov
fdivr
hlt
push
pusha
pop
push
dec
sbb
inc
cmp
addr16
inc
push
sub
sbb
add
out
xchg
pop
dec
iret
pop
hlt
out
sbb
sbb
pop
hlt
and
shr
sahf
lahf
mov
cmp
pushf
out
sub
jns
out
pop
je
in
cwtl
out
shr
fcoml
in
out
aam
int3
imul
pop
iret
inc
int3
int
cmp
sbb
sub
in
sbb
fs
inc
adc
add
mov
in
fsubr
aam
ss
mov
int3
in
rolb
jns
cmp
in
in
loopne
jns
addr16
lock
in
in
jno
cmp
in
arpl
lock
in
outsl
test
rolb
sti
int3
outsb
in
push
gs
popf
int
nop
push
dec
xchg
inc
add
repnz
xchg
cmp
xchg
sub
or
and
adc
or
add
div
in
pop
sub
pusha
xchg
jg
pop
fs
and
in
or
popl
movsb
in
jae
stc
inc
mov
nop
in
mov
into
arpl
jg
pop
fsubr
js
or
in
jmp
xor
pusha
adcl
pop
dec
inc
fbld
orl
sub
mov
adc
push
push
jbe
xor
ljmp
leave
ja
js
jmp
jmp
out
cmp
call
inc
orl
jnp
xor
xchg
mov
jbe
out
je
hlt
lock
sbb
and
fadds
jns
cmp
mov
push
and
cmp
or
mov
rcl
pslld
js
jmp
daa
daa
jmp
enter
pop
pop
daa
jns
mov
aas
sahf
mov
pop
or
orl
jo
addr16
mov
mov
and
call
sarb
lods
int3
xor
enter
ljmp
adc
cmp
and
jmp
cwtl
cmp
call
mov
jmp
xchg
in
daa
mov
xchg
out
jmp
sbb
sbb
xchg
dec
aas
test
jl
imul
and
cmp
or
out
pusha
pop
sbb
and
cmp
negl
inc
inc
mov
mov
add
sbb
add
inc
push
cmp
in
and
mov
call
lret
repz
call
pop
cmpl
int3
jmp
jns
call
mov
cmp
jp
shll
jl
sbb
stc
in
cmp
push
ds
sahf
pop
mov
inc
xchg
cwtl
mov
nop
daa
das
hlt
out
out
out
pop
repnz
push
sarb
or
es
inc
mov
inc
in
in
repz
pop
aad
ss
inc
inc
dec
call
mov
out
and
jnp
lahf
mov
into
adc
or
mov
jmp
lahf
fmull
out
in
jnp
out
xor
xor
adc
and
xchg
cmp
inc
je
and
pop
loopne
jmp
dec
bound
adc
dec
jae
sub
push
test
mov
out
out
out
mov
lret
in
in
in
in
or
cmp
in
in
sbb
in
les
lods
movsb
fs
inc
push
pushf
xchg
mov
jl
xchg
arpl
mov
enter
shr
jmp
pop
fistps
jmp
in
mov
xor
jae
adc
test
and
xor
in
jnp
and
in
sub
xchg
cmpsl
jnp
jae
in
rclb
enter
pop
mov
sahf
out
sar
clc
sub
sbb
mov
cmp
cld
jmp
cmpl
jmp
sbb
das
dec
mov
lret
adcl
jb
out
rol
adc
adc
cld
jecxz
and
jecxz
vmwrite
jecxz
dec
push
iret
testl
mov
es
cmpsl
sti
fadds
mov
jmp
mov
jnp
divl
cli
pushf
sbb
addr16
xor
sub
xchg
call
js
addr16
addr16
in
js
into
jmp
adc
call
call
stos
xor
fstl
dec
sahf
mov
lahf
sbb
lock
cmpsb
cmp
xchg
or
adc
cmp
enter
loop
loop
loop
inc
mov
loop
loop
loop
jb
enter
loop
loop
loop
sbbb
loop
loop
loop
lods
dec
out
int
inc
add
jmp
inc
xor
xor
sbb
sbb
xor
cltd
out
add
leave
js
sbb
call
adc
lods
loope
loopne
jmp
in
fxch
sbb
loope
mov
fstpl
in
mov
loope
cmp
jmp
rcrl
outsl
or
out
shlb
out
test
inc
sub
pop
aam
inc
push
push
pushf
and
out
fsubs
je
sub
cmp
shlb
sub
xor
xor
nop
lahf
loopne
push
adc
cli
push
bound
ljmp
add
int3
fcos
jnp
sbb
sbb
cwtl
pop
sub
inc
mov
test
add
lea
lret
cmp
sbb
xchg
dec
and
adc
and
mov
les
call
loop
decl
js
sub
push
and
je
enter
xchg
lret
pop
and
addr16
data16
jne
push
or
mov
call
xor
fldenv
and
outsl
push
stos
or
and
inc
call
and
cmp
pop
ljmp
mov
or
push
std
xor
push
sahf
stos
push
inc
inc
fnstcw
pushf
mov
lret
in
das
jns
xchg
in
xchg
lods
js
add
dec
adc
aaa
mov
mov
jns
xchg
stos
clc
xchg
lods
in
xchg
and
cs
pop
lods
cmpsb
stos
or
iret
mov
int3
fs
rolb
ret
mov
and
cmpsl
ret
xchg
or
inc
out
mov
cmpsb
xor
or
add
cli
pop
loop
cmp
sbb
jns
in
inc
ds
push
dec
xchg
inc
sbb
push
jb
mov
xchg
push
fs
dec
subl
shlb
out
inc
inc
push
jns
adc
push
sahf
inc
pusha
aam
in
enter
mov
push
inc
in
mov
cmp
cmp
and
and
dec
and
insl
test
cld
inc
jle
inc
ret
insb
jnp
push
inc
jle
sbb
jmp
ret
repnz
pop
add
jmp
ret
nop
add
dec
inc
aad
jecxz
mov
adc
es
decl
idivb
sbb
in
xchg
lock
stc
call
cmp
xor
jle
sbb
call
popf
xor
inc
loopne
pop
test
nop
pop
mov
add
cmp
stc
shlb
add
insl
call
outsl
shrb
cmc
test
mov
shrb
js
mov
lret
in
call
sbb
cmc
jne
stc
test
ljmp
and
call
sahf
cmp
rolb
aas
test
cmp
adc
mov
sub
out
and
in
stc
sar
mov
push
sarb
orb
mov
mov
ds
cld
movsb
xchg
sbb
movl
jne
call
mov
cmpb
mov
stc
push
js
mov
push
shr
popf
scas
popa
sbb
aaa
pop
add
enter
cmpsb
and
outsb
push
sub
xchg
cli
pop
adc
lret
xchg
add
out
pop
sarl
mov
jne
call
and
mov
pop
fistpll
xor
adc
sbb
add
aas
cmpsb
lock
das
cld
add
mov
mov
jl
add
sbb
mov
ret
ficoms
cmp
add
dec
leave
in
out
movsl
lcall
enter
lock
mov
nop
and
orb
mov
nop
sbb
and
pop
or
push
push
mov
es
add
and
sbb
repz
leave
out
mov
inc
repz
fisubl
mov
adc
out
xchg
pusha
and
mov
mov
cmp
popa
orb
mov
cmp
stc
dec
orb
mov
ficompl
or
mov
adc
test
xchg
mov
mov
cmp
add
fsubr
and
and
inc
bnd
xor
lds
xchg
repz
pop
in
je
lret
mov
int
aaa
into
mov
das
lahf
popa
idivl
xchg
scas
sbb
push
or
clc
and
enter
test
jle
pop
movsb
sub
pop
clc
or
mov
orb
push
stc
lock
jbe
arpl
pop
mov
loope
mov
lea
add
dec
jb
and
add
sub
and
add
jl
mov
sbb
repnz
push
leave
mov
mov
shlb
stc
adc
mov
ljmp
cmp
mov
mov
nop
pop
inc
inc
mov
mov
incl
and
mov
push
mov
ljmp
bound
fisttpl
jl
fadds
sti
pop
sbb
mov
push
xor
sub
stos
and
xchg
or
leave
add
sbb
lcall
inc
fcoms
mov
call
test
aam
push
adc
call
mov
mov
mov
xor
in
daa
xchg
daa
cmp
call
jns
call
xchg
or
mov
cmc
xor
call
sbb
mov
cmp
movd
adc
cmpsl
loopne
cs
pop
rcll
xor
divb
jmp
call
cmp
xchg
and
lea
adc
push
or
add
enter
sbb
insl
stc
mov
les
dec
in
sbb
pop
test
sub
add
ja
inc
push
xchg
adc
nop
pop
or
stc
scas
xchg
rclb
subb
clc
push
mov
sub
or
pop
sub
repnz
fmuls
lock
sbb
push
mov
inc
fistpll
add
test
mov
cmp
jle
xchg
jo
inc
add
and
mov
jo
pop
das
jae
fsubl
xchg
jne
add
pop
scas
mov
adc
scas
jae
andl
dec
adc
mov
push
adc
stos
mov
mov
movsb
jmp
call
out
pop
adc
push
push
sbb
inc
push
mov
dec
and
cmp
push
inc
sub
sti
mov
push
je
xchg
jmp
insb
arpl
ret
push
or
pop
pop
loopne
insb
mov
fdivs
cmp
test
push
mov
and
test
in
dec
mov
push
push
cmp
sub
insl
movzwl
dec
or
add
sub
das
dec
nop
sti
dec
mov
inc
movsb
mov
mov
add
jnp
in
sub
sub
enter
add
test
sub
orb
add
leave
and
add
insb
lahf
inc
mov
sbb
inc
sahf
add
xchg
sub
pop
fdiv
inc
pop
jb
mov
repnz
orl
mov
nop
pop
add
lock
xchg
xchg
xchg
mov
dec
dec
push
or
mov
pop
mov
mov
mov
movsb
loopne
and
mov
leave
inc
cmovo
xchg
xchg
cld
mov
mov
jb
and
mov
pop
orb
sub
fwait
test
mov
ret
mov
out
pop
mov
mov
and
loopne
mov
cmp
add
adcb
push
push
or
or
push
call
mov
incl
cmpl
nop
jg
inc
ja
js
or
sbb
fistpll
or
ret
jmp
data16
mov
cmp
je
decl
addb
rcrl
push
mov
aaa
push
dec
inc
aad
inc
mov
fimull
inc
pusha
pushl
fwait
jmp
add
mov
mov
push
mov
shlb
sbb
movsl
push
test
lcall
cmp
test
loop
mov
or
negl
sbb
mov
or
sahf
mov
xchg
test
jl
fistl
add
mov
push
je
add
push
ja
int
push
push
andb
cld
pusha
push
call
inc
adc
push
inc
shll
xor
lea
push
push
add
xchg
in
rcr
or
call
popf
and
std
clc
or
and
xor
sbb
jge
inc
sahf
mov
in
xor
lock
sub
in
ss
jno
mov
add
push
jbe
fsubrl
mov
bound
in
aam
mov
sahf
add
push
cmpl
call
cmpl
dec
jae
and
pop
jo
push
push
mov
jne
dec
fs
bound
insb
inc
add
xor
prefetch
or
xlat
mov
sbb
adc
mov
pop
adc
adc
cmp
popf
dec
xor
push
mov
and
sbb
add
mov
movsb
mov
xchg
add
enter
mov
repnz
sub
call
inc
mov
orl
adc
push
xor
call
sti
es
or
dec
mov
cwtl
in
data16
xchg
in
add
call
or
add
push
lret
jmp
pop
dec
inc
push
jo
cwtl
jns
arpl
es
in
jno
sub
add
cmp
je
mov
lret
push
cld
jl
jne
stos
insl
cmp
dec
sahf
cmc
adcl
addl
inc
sbb
jecxz
inc
xchg
jmp
push
lret
lds
test
inc
or
stc
push
int
pusha
enter
xlat
popf
add
push
stos
mov
mov
js
push
fs
ss
int
xchg
movsl
mov
or
fs
pop
mov
ja
adc
cmp
add
mov
sbbb
adc
repnz
xchg
xlat
mov
lea
loopne
ss
mov
adc
ret
call
aam
unpckhps
pushf
mov
in
push
outsl
lods
stos
add
jne
jle
push
or
lcall
ret
fadds
xor
mov
movsl
mov
data16
fucom
push
sbb
push
ret
dec
sub
out
adc
mov
push
sbb
int3
in
frstor
cmp
jne
call
add
sahf
pop
ja
xchg
or
cmp
dec
mov
jge
xor
pop
pop
scas
and
dec
aad
push
add
dec
pop
xchg
lcall
push
icebp
mov
push
or
sahf
mov
notrack
xchg
lcall
push
pop
enter
sbb
xor
in
adc
push
mov
and
mov
cwtd
js
xor
mov
pop
adc
or
adc
mov
adc
adc
sbb
push
cwtl
cmp
fidivrs
add
inc
xchg
das
sbb
mov
in
sub
adc
cltd
lret
xor
push
push
add
test
shll
out
insl
add
call
push
adc
or
filds
adc
or
addl
push
loop
mov
fcompl
mov
xchg
mov
jae
xchg
jo
sbb
lcall
cmp
mov
aaa
adc
sbb
cmp
jl
adc
call
ret
inc
cltd
popf
repz
inc
xchg
in
sbb
in
lcall
and
jg
or
repz
pop
leave
cltd
or
leave
loopne
call
call
lock
jno
inc
sbb
xchg
out
imul
or
sub
cmp
mov
and
jp
ret
dec
pop
xor
xchg
xchg
cmp
out
ret
cli
jmp
mov
pop
gs
pushf
sbb
popf
mov
je
pusha
loopne
lea
loopne
cwtl
add
pop
mov
out
push
lock
jmp
bound
adc
pop
pop
mov
and
faddl
mov
scas
push
and
test
push
stos
pop
idiv
xchg
pushf
les
sbb
ja
test
push
dec
xlat
xor
aam
mov
or
add
xor
sub
rclb
rcrl
push
stc
sbb
push
dec
jmp
call
out
adc
subl
pop
aas
rcr
je
add
enter
cltd
sti
lock
mov
loope
mov
jmp
ret
pusha
xor
add
adc
fimull
xor
adc
push
add
into
shlb
shlb
add
sbb
lcall
movsb
cmpsb
imul
imul
dec
shll
enter
in
lcall
fs
sbb
mov
insb
mov
and
dec
ss
mov
out
or
or
mov
and
pop
adc
comiss
in
imul
add
cmp
mov
xchg
lret
addl
or
push
fdivrl
pop
cmp
sub
bound
je
stos
mov
les
jmp
imul
scas
push
pop
push
popf
or
daa
test
in
lcall
stos
dec
or
lcall
xor
pop
cmpsb
jne
xlat
jne
dec
inc
lret
ja
mov
pop
xlat
and
inc
and
inc
add
sub
pop
adc
dec
mov
out
lret
pop
jne
xlat
xor
push
push
sysexit
jmp
insl
xlat
aas
xor
nop
add
outsb
cmpsb
push
sbbb
mov
jbe
add
xor
inc
pop
dec
into
in
dec
xchg
inc
dec
xchg
inc
add
das
push
add
popf
daa
mov
jbe
ret
inc
sbb
xlat
insb
cmpsl
sub
cmp
pop
xlat
inc
dec
fisttps
pop
leave
adc
scas
imul
pop
pop
dec
pop
mov
outsl
pop
mov
pop
sub
lcall
adc
out
aas
out
jae
jne
mov
pop
pop
shlb
xchg
pop
insl
xlat
jne
sbb
xchg
daa
sbb
jecxz
or
ja
lcall
pop
int3
adc
out
outsl
pop
sbb
and
int3
and
push
inc
adc
xchg
mov
add
xor
xchg
pop
add
bound
cmpsb
imul
imul
cmpsb
imul
xor
lods
cmp
arpl
dec
shll
mov
mov
pushf
add
insl
shlb
int3
pop
fmull
int
jmp
hlt
or
sbb
sbb
inc
sbb
ds
push
mov
add
and
add
sbb
add
or
pop
and
cld
data16
nop
adc
sbb
xor
fistl
pop
dec
xor
pop
test
xchg
push
push
cltd
fsubrs
sbb
jbe
xlat
push
popa
add
ud2
cmp
inc
out
add
xchg
sub
jne
pop
ja
stc
out
add
jmp
and
lock
add
ss
shll
fcom
int3
outsb
imul
shlb
cmc
fsubrs
scas
pop
test
add
cmpsb
mov
imul
mov
out
jg
add
shll
sub
sbb
or
rorl
xchg
aam
je
out
call
mov
xlat
cmp
jbe
nop
push
repnz
jbe
jne
push
jmp
mov
out
in
xchg
pop
popa
stc
push
mov
xor
adc
imul
add
adc
push
jnp
xlat
sub
mov
idivb
xor
dec
push
inc
pop
or
and
imul
xorb
inc
push
add
jne
shll
add
aas
pop
clc
enter
add
in
jbe
rorl
push
and
imul
xchg
inc
and
fs
insb
jbe
lcall
add
push
pop
js
imul
inc
out
in
push
in
inc
sub
sub
cmpsl
and
sbbb
cmpsb
jp
ss
inc
shrl
lods
jo
aaa
jl
add
insb
ret
out
ud2
das
in
mov
pop
add
icebp
mov
xor
addb
add
or
scas
int
mov
adcb
sub
dec
ja
pop
add
pusha
cmp
xchg
sar
pushf
mov
fwait
or
xchg
adc
pop
enter
adc
je
inc
mov
adc
cmp
or
and
enter
das
fdivs
nop
add
cmp
cli
push
jle
xor
sbb
cmp
or
enter
push
lock
ljmp
cmpsb
jmp
mov
cmpsb
test
mov
mov
pop
rorb
shrb
push
fsub
call
sbb
clc
and
ret
in
jg
jg
xor
aaa
in
pop
mov
pusha
sti
sbb
je
insb
inc
push
mov
cwtl
aaa
cwtl
or
outsl
mov
das
or
addr16
frstor
cmpl
dec
roll
aam
syscall
in
fsubs
in
pop
hlt
xor
nop
cld
or
in
sbb
xor
cmp
aaa
sbb
cwtl
insb
pop
dec
lcall
jle
push
sbb
std
inc
push
mov
push
sbb
mov
in
inc
idivb
mov
push
sbb
add
inc
pop
jbe
inc
push
adc
or
enter
das
shlb
orl
push
and
das
jl
roll
data16
nop
fistps
in
leave
cwtl
andl
xadd
enter
push
rolb
fcoms
and
daa
rolb
and
call
push
movsb
sub
sbb
xchg
inc
scas
dec
inc
add
jl
aaa
add
xchg
add
xorb
test
fs
andl
add
or
clc
adc
lcall
add
orl
inc
dec
and
pop
pusha
nop
das
cmp
push
add
fs
inc
cmpsb
test
pushf
movsb
lods
inc
push
sbb
les
sbb
aam
in
and
clc
lcall
test
inc
pop
add
add
and
cmp
in
orl
orb
leave
pop
test
xor
and
and
or
add
lods
clc
shlb
and
and
daa
dec
push
xor
add
adc
add
sub
xor
cmp
inc
test
xchg
daa
dec
dec
test
test
insb
je
xor
mov
fsubs
adcl
sub
int3
and
sbb
aaa
or
pusha
push
sbb
clc
imul
nop
inc
push
sbb
sub
inc
push
sbb
cmp
jg
in
jb
push
xchg
push
cmp
xchg
sbb
pop
test
pushf
movsb
lods
xchg
adc
add
adc
ror
imul
daa
pop
sbb
or
enter
aaa
nop
add
call
movsb
push
xchg
in
in
xchg
xchg
xchg
inc
push
sbb
fs
add
xor
enter
dec
xor
pusha
pop
call
in
and
cld
add
pop
or
mov
adc
sbb
and
mov
lcall
inc
push
sbb
push
in
and
mov
into
fldcw
js
incl
daa
lcall
das
add
mov
dec
push
movsb
mov
in
aad
inc
push
fsub
lahf
adc
ret
push
scas
mov
enter
sbb
and
xor
xor
mov
mov
mov
fs
add
inc
rcl
andb
nop
add
nop
xchg
and
adc
cmpsl
dec
or
ss
js
and
test
xor
and
mov
pop
add
and
mov
mov
pop
lock
push
shlb
cmp
inc
fstpt
xor
adc
jl
pusha
orl
jo
orl
test
nop
inc
sub
mov
aaa
or
daa
rcr
xor
clc
in
or
orb
testl
mov
jbe
aaa
inc
sub
sbb
mov
mov
fldenv
test
jo
or
enter
nop
daa
dec
jbe
add
cwtl
mov
shlb
mov
rorb
fdivrs
cmp
add
fsubs
sbbl
nop
or
inc
sub
mov
mov
and
nop
andl
sbb
sub
enter
int3
aam
push
and
pusha
adc
sbb
ss
aaa
xor
pop
shlb
dec
ds
clc
pop
dec
fs
daa
into
push
lea
and
insb
mov
pop
push
adc
dec
pop
add
inc
or
lea
push
in
pop
nop
or
or
lea
enter
push
in
fsub
dec
pop
and
add
and
xchg
daa
sbb
nop
push
inc
dec
sbb
and
js
addr16
push
mov
mov
jns
mov
add
add
shlb
or
enter
or
enter
clc
sbb
in
add
inc
push
sbb
sub
xor
cmp
inc
iret
adc
push
imul
popl
jo
iret
and
leave
andb
js
sbb
fiadds
jmp
xchg
aas
sbb
insb
push
lock
imul
int3
push
sbb
xor
aam
in
andl
mov
fadds
or
nop
incl
sbb
add
and
lcall
call
daa
nop
push
pusha
push
enter
push
xor
or
pusha
add
nop
jg
mov
add
stc
loopne
fcoms
mov
pusha
addl
or
enter
das
mov
adc
ss
add
adcl
leave
xchg
xchg
and
sub
xor
imul
inc
push
sbb
pusha
nop
cmpsb
imul
xchg
add
mov
or
adc
cmp
or
fwait
daa
xor
flds
ror
and
add
cmpsl
xchg
push
xchg
pop
xchg
or
enter
xchg
add
adcl
mov
fs
xchg
dec
pop
popa
das
jns
xchg
sub
mov
or
cmp
xchg
xchg
int
dec
aaa
pop
add
int3
add
lahf
xchg
pop
in
pop
pop
xchg
add
clc
xchg
pushl
nop
add
adc
sbb
add
repz
or
mov
fs
lahf
sbb
repnz
dec
jae
or
adc
xchg
int
inc
sbb
xor
hlt
outsl
daa
lods
pusha
int
inc
es
fdivrs
adc
and
xor
mov
roll
mov
and
test
iret
sbb
xchg
or
mov
xor
and
dec
push
inc
mov
or
filds
pop
imul
inc
les
add
orb
adc
frstor
orb
xchg
lret
push
inc
dec
pusha
xlat
inc
imul
jae
adc
pusha
inc
test
insb
mov
inc
jns
push
outsl
popa
fs
mov
lods
inc
add
push
and
in
popf
arpl
bound
mov
add
nop
sbb
icebp
add
add
xor
pop
loopne
stc
cmpxchg
dec
js
push
lods
sti
ret
jo
push
pop
scas
xor
or
call
inc
mov
fs
test
filds
push
jmp
ja
jno
pushf
add
js
outsl
or
rcll
adc
mov
pop
je
and
pusha
xcrypt-cbc
cmpsl
shll
push
inc
imul
aas
xor
adc
into
add
cmpsl
jae
sbb
adc
sub
mov
xchg
sub
push
mov
and
or
adc
or
add
push
mov
adcb
rcrl
adc
push
pusha
dec
inc
imul
out
mov
loope
add
push
popa
push
cmp
push
inc
mov
out
testb
addr16
bound
rcll
pop
pop
mov
pop
push
xor
push
and
aad
jbe
repnz
pop
in
and
bound
scas
pop
cmp
jle
sub
cmp
adc
push
and
cmpl
test
push
and
mov
int3
jg
sub
and
add
ret
adc
ret
in
jae
pop
jecxz
jae
imul
or
adc
add
cmpsb
outsb
mov
or
mov
jae
imul
cmp
xor
mov
mov
sub
add
xor
add
push
pop
pop
icebp
add
adc
add
pop
les
add
add
jle
and
out
pop
dec
cs
int
pop
dec
or
mov
gs
test
fldcw
dec
stos
xor
and
aas
fwait
inc
adc
dec
enter
subb
notb
push
ja
xchg
ds
jo
popa
and
and
push
inc
add
add
add
mov
pop
mov
pop
inc
add
sbb
loope
sub
pop
adc
adc
jae
orb
add
add
cmp
lret
adc
negl
pop
pop
sbb
xor
int3
inc
sub
or
mov
lcall
and
loope
fadds
sar
jp
xor
sbb
outsl
dec
das
es
cmp
xor
add
jmp
pop
dec
js
push
dec
adc
lock
roll
pop
push
pop
xor
jae
in
mov
push
lcall
popa
out
aaa
popa
mov
pop
xlat
rol
dec
mov
outsl
pop
cs
ja
mov
push
inc
mov
shlb
sbb
insl
and
insb
fsubs
push
mov
push
pusha
fwait
jnp
jne
cmp
popa
adcl
sub
jne
bound
push
dec
popa
jne
push
and
jae
mov
ja
mov
mov
imul
dec
inc
pop
push
dec
dec
psllw
fstps
sub
push
daa
push
pop
add
pop
jnp
aaa
xor
xor
test
cmp
xor
ret
outsl
mov
xor
add
inc
jge
jae
pop
mov
pop
sbb
addr16
pop
mov
add
dec
jno
inc
adc
bound
cmp
cmp
cs
jge
or
push
push
inc
pop
bound
push
jns
lock
xor
jns
adc
add
pop
imul
scas
mov
outsb
push
push
push
sbb
jle
xor
push
mov
imul
daa
lahf
pushf
push
pusha
sub
ja
loop
je
push
mov
add
jmp
or
and
adc
sti
js
add
add
mov
push
pusha
inc
cmp
adc
add
negb
cltd
jge
fwait
lret
in
jge
jns
in
lret
test
js
lcall
pop
xchg
out
lret
lret
lret
sbb
xchg
adc
cli
dec
pop
mov
inc
and
jb
pushf
sbb
daa
xor
shlb
add
mov
add
push
or
xor
add
add
and
xchg
rclb
and
add
inc
nop
inc
inc
xchg
or
inc
subl
rclb
dec
xchg
add
push
add
test
loopne
in
cmp
aam
push
stos
popl
ja
call
add
sbb
push
push
fildl
push
popw
cli
sub
insl
in
sub
roll
mov
push
in
lcall
add
adc
push
push
call
inc
dec
mov
push
push
and
movsbl
xor
call
insl
pop
mov
sbb
lea
mov
out
adc
rcl
xor
sub
inc
ficoms
sub
and
in
mov
inc
mov
outsl
or
push
mov
jb
mov
mov
std
push
adc
out
dec
les
arpl
sbb
sbb
sbb
xor
or
lahf
sbbb
stos
jp
adc
int
arpl
or
cmpl
mov
or
pushl
push
das
mov
data16
push
call
divb
leave
das
push
icebp
xchg
cmp
mov
push
testl
xor
jne
mov
inc
jne
inc
enter
mov
mov
mov
inc
or
jl
sub
lcall
inc
inc
cmp
jl
pop
pop
pop
pop
shrl
add
inc
rcrl
repz
cmpl
movsl
pcmpeqb
mov
mov
movsb
sub
lea
mov
and
insb
movsb
and
sub
mov
mov
rcrl
data16
adc
cmp
push
xor
mov
andb
rolb
repnz
mov
sub
sub
add
clc
mov
mov
jbe
or
or
cltd
pop
pop
pop
adc
cmp
add
push
mov
mov
rcll
push
sub
movsl
push
adc
lcall
add
call
call
clc
call
mov
std
pop
mov
push
popf
push
cli
fsubrp
daa
fld
pop
outsb
fildll
int3
call
adc
cld
push
enter
or
or
push
jge
mov
test
add
pusha
out
sub
lcall
mov
call
pop
int
dec
adc
inc
ret
int3
imulb
inc
cltd
iret
idiv
call
sub
insl
enter
insl
pop
fsubr
xorb
push
jbe
or
mov
cld
pushf
and
and
test
fwait
adc
xor
or
call
arpl
mov
cmp
insb
aaa
insb
scas
cmp
cs
jle
add
rcll
call
rcrb
and
add
dec
push
adc
sbb
add
pop
mov
jp
sbb
jo
adc
xlat
push
adc
insl
jmp
es
adc
jne
adc
pop
jae
jmp
or
push
ret
push
fistpll
movd
xchg
rcrb
lea
or
pop
jmp
cmp
je
push
pusha
adc
xor
cld
das
and
add
jmp
fdivrp
lock
movsl
cmp
dec
gs
add
outsb
arpl
cld
jle
push
cltd
gs
pop
pop
cmp
sbb
sbb
arpl
xchg
inc
cmp
jl
je
pop
push
pushf
shll
ret
xchg
pop
loopne
jmp
push
adc
pushf
cmp
cmp
or
rclb
add
inc
add
test
or
xor
inc
clc
fnstsw
test
adc
push
add
mov
arpl
push
cmp
jbe
iretw
adc
add
and
or
add
mov
sbb
fcmovnu
mov
iret
jmp
or
cmpsl
les
enter
xlat
and
and
mov
ror
aaa
adc
jmp
push
repnz
cmp
sub
sahf
or
pop
je
or
fnsave
mov
fnstsw
aam
or
jmp
lcall
ss
cld
sti
jnp
and
clc
addr16
rcll
push
push
jg
push
push
insl
push
push
pushl
mov
xor
pushf
sub
subb
rorb
pop
adc
inc
or
sub
mov
fdivl
loopne
bound
test
andl
rclb
rorl
outsb
cmpsb
pusha
insb
and
jbe
arpl
mov
push
cmpl
aas
jl
adc
xchg
fcomps
fnstsw
sahf
jae
enter
jb
jg
jne
inc
sbb
jmp
out
dec
inc
call
mov
icebp
cltd
rcrl
push
ja
pop
push
idivl
adc
paddusw
mov
dec
mov
jo
mov
cmp
jl
je
adc
ret
jp
sbb
xchg
jge
loope
pop
jbe
aas
gs
call
dec
scas
les
adc
add
sbb
dec
ja
aad
sbb
sub
clc
or
or
shrb
pop
psadbw
jno
ret
das
std
pop
mov
xor
frstor
jge
cmp
jle
sahf
pop
je
jo
shlb
and
je,pn
adc
cmp
inc
pop
and
clc
xchg
push
adc
or
pop
outsb
fists
or
mov
int
jmp
push
cli
or
pushf
mov
in
inc
fstpl
in
in
clc
or
lock
jmp
repnz
pop
mov
push
add
push
sub
cmpsb
or
fcompl
pop
or
jge
cmp
in
test
test
xor
and
inc
or
mov
ficomps
daa
sbb
push
pusha
dec
or
daa
cmp
jl
and
ljmp
in
loope
and
adc
push
cmp
mov
and
sti
and
in
je
outsl
pop
sub
xchg
jns
cmp
pushf
and
call
xchg
sbb
fiadds
add
add
dec
es
and
lock
loopne
data16
push
sbb
jmp
ss
inc
rcr
leave
push
jne
mov
or
out
and
repnz
mov
jo
cmpsl
test
mov
subb
mov
dec
adc
mov
mov
and
sub
mov
and
sbb
lret
sbb
into
xchg
in
xchg
pushf
adc
out
or
mov
adc
jg
lea
lock
pop
idiv
add
andl
or
outsl
mov
or
leave
cmp
mov
imulb
xor
mov
imull
push
movl
dec
dec
pop
and
inc
enter
out
outsb
pop
mov
mov
cld
pop
and
ja
or
or
push
jg
icebp
cmp
pop
add
je
dec
jmp
lea
add
aad
dec
ret
lods
mov
pop
outsb
push
push
xor
lahf
sbb
or
push
std
sub
in
xor
or
sbb
pop
sbb
sbb
jle
add
ja
or
add
rcl
addr16
cmc
stos
in
aad
test
pushf
sti
add
shl
or
insb
and
fs
clc
add
sti
cld
mov
cmp
je
lea
outsb
pop
clc
das
es
mov
cmp
je
decl
push
cld
andl
jl
call
test
mov
cmp
fs
jg
or
mov
sarb
adc
cli
mov
in
loop
sbb
push
insl
test
call
adc
fisubrs
sti
xor
in
sub
mov
cmpb
sub
xor
scas
pop
lea
cmp
fsubl
pop
std
cltd
xor
push
dec
xor
lods
das
fs
frstor
jg
imul
movsl
dec
sbb
ret
jle
mov
xor
xor
pushf
stos
jae
adc
sahf
lret
outsb
sub
and
es
test
pushf
je
push
add
adc
lods
adc
sub
dec
inc
les
mov
ja
mov
adcb
lea
test
adc
lahf
adc
call
and
and
js
and
fs
scas
mov
fdivr
lret
xchg
in
js
addl
or
call
jl
ret
jmp
fdivrl
in
fdivrs
push
sbb
pop
sub
fstp
xor
xor
xchg
cmpb
jne
push
incb
jne
decl
cs
inc
push
mov
insl
fs
push
hlt
pop
or
jne
std
std
or
push
lods
in
dec
push
test
push
out
inc
sub
adc
xor
xchg
push
test
call
into
std
aaa
adc
mov
or
jo
mov
lret
mov
and
adc
mov
das
lret
or
add
xchg
int3
push
sub
lea
xor
or
xor
push
movb
je
mov
mov
jle
cmp
dec
add
pop
arpl
xchg
sbb
mov
cmp
cmp
sahf
daa
mov
fldcw
lahf
fstps
fucomi
cmp
ljmp
dec
add
mov
pop
lods
dec
shlb
mov
ljmp
or
test
fldl
data16
xor
adc
xchg
and
enter
divb
jno
mov
push
imul
and
cmovnp
mov
inc
adc
sbb
sbb
int3
inc
mov
mov
add
fistl
into
sub
xlat
and
mull
jecxz
inc
add
flds
ds
js
sbb
add
mov
jecxz
dec
jb
and
sbb
jno
test
aas
cmpsb
sbb
cli
push
pusha
pop
je
jmp
sbb
mov
loope
jbe
ret
add
pop
mov
pop
add
jno
ljmp
sub
cs
jne
sbb
ja
inc
cmp
gs
or
mov
or
addl
pop
jmp
xchg
adc
in
jnp
xor
add
in
jbe
cmpl
cmp
cmp
jne
fistpl
in
or
jbe
hlt
fnsave
add
sub
inc
call
aaa
pop
and
pop
mov
jge
loop
in
movl
add
jmp
imul
add
flds
push
xor
or
mov
in
push
pop
nop
add
and
mov
mov
mov
pop
cmp
sub
dec
add
or
inc
dec
mov
adc
dec
or
push
pop
shrb
adc
decb
jmp
jns
mov
mov
jmp
divb
push
pop
andl
jne
cmpsb
dec
insl
mov
mov
cmpl
push
cmp
les
xor
jmp
fwait
or
sbb
xlat
fisubs
cmp
or
add
and
mov
push
gs
jno
inc
jge
lcall
or
shrl
insb
es
mov
insb
push
mov
call
gs
cwtl
add
cld
inc
and
adc
addr16
jecxz
push
cmc
std
and
cmp
mov
test
or
push
add
push
sbb
mov
mov
jne
js
and
mov
outsb
lret
inc
push
mov
push
or
repz
out
ss
xor
xor
call
ja
inc
movsb
or
cmp
insl
pop
mov
outsb
or
cmp
je
andb
pusha
inc
push
or
or
sub
pop
jmp
jle
and
pop
ret
adc
out
loop
shrb
add
push
push
or
pop
fdivrl
inc
push
mov
and
mov
sbb
xchg
test
pop
loopne
insl
jnp
sub
push
adc
pop
sbb
aaa
in
add
sarb
mov
test
fs
mov
fs
pop
pop
xor
xorb
aas
dec
add
movsb
push
pop
adc
jne
in
jns
xor
dec
adc
pop
add
and
out
add
add
inc
xor
dec
sbb
and
push
dec
fwait
lret
movsl
mov
dec
lock
xchg
sbb
and
sub
pushf
in
dec
pusha
xor
scas
xchg
inc
jb
dec
or
pop
push
and
pushf
mov
enter
inc
shrl
adc
adc
out
cwtl
xor
out
add
daa
add
xor
lcall
push
bound
test
aas
out
pop
clc
add
mov
dec
shll
sahf
and
lock
mov
cli
add
or
and
xor
shrl
xor
dec
push
or
bound
pop
outsl
imul
adc
or
adc
lcall
inc
sub
pusha
add
xor
rclb
movsb
imul
and
in
jnp
xor
aad
aad
add
dec
leave
mov
jne
push
or
sbb
push
lods
call
popf
push
dec
test
addr16
dec
or
gs
imul
popa
dec
popa
lcall
jnp
mov
add
push
hlt
cs
rolb
flds
rclb
leave
mov
add
adc
xchg
push
test
add
add
cmp
and
and
rcrl
xor
mov
mov
imul
add
cmp
add
ds
add
loopne
jmp
insb
jg
inc
pop
dec
inc
pop
movups
pop
adc
xchg
add
unpckhps
in
popl
fisttpl
jo
push
shlb
push
mov
jp
aaa
loop
jo
add
add
and
xor
scas
sbb
sub
cmp
inc
add
sub
push
and
jo
xor
push
inc
fwait
je
xor
shll
push
dec
mov
jns
add
push
mov
sub
add
jno
push
inc
sub
sub
add
jne
cltd
add
outsl
add
fs
adc
enter
and
decl
aam
inc
push
and
push
push
das
xor
xor
jge
and
cmp
sbb
cmpb
popa
outsb
addr16
adc
push
jnp
inc
sub
js
and
pusha
imulb
add
adc
sub
fs
mov
es
dec
sub
and
or
push
mov
push
lea
dec
in
out
pop
or
and
pop
outsl
imul
cmpl
jp
sub
movsb
dec
outsl
bound
xor
mov
xlat
jo
mov
cmp
dec
push
dec
inc
and
adc
xor
xor
adc
xor
dec
clc
inc
dec
push
and
cs
xor
adc
in
filds
xor
xor
mov
xor
dec
mov
sub
dec
outsb
arpl
pop
dec
inc
dec
insb
jbe
and
dec
daa
sti
outsl
and
popa
arpl
mov
or
xchg
cmp
pop
add
pop
insl
outsl
je
aas
add
pop
insb
cmp
xor
adc
shrl
xchg
dec
or
add
inc
in
fsubs
dec
ja
push
bsf
mov
js
pop
frstor
dec
rorl
and
or
addr16
and
inc
push
in
inc
bswap
insb
fnstenv
ss
xchg
push
mov
mov
in
jo
mov
push
mov
arpl
fisttps
inc
and
je
out
sahf
add
inc
jno
les
dec
inc
xor
mov
insl
dec
outsb
dec
inc
fbld
and
mov
cmp
es
sbb
test
inc
inc
push
sbb
fdivrl
push
popa
xchg
inc
jb
push
mov
add
js
jno
js
shlb
or
xor
and
popa
jne
sbb
adc
mov
inc
inc
enter
leave
fists
and
inc
jo
add
ljmpw
cwtl
mov
outsl
or
fs
mov
out
sub
sbb
cmpb
test
add
push
inc
jno
lcall
pop
test
pushf
nop
int
frstor
test
jo
push
call
mov
sub
add
xchg
push
inc
mov
dec
mov
popa
pushf
stos
mov
iret
push
into
push
js
addr16
imul
xchg
push
xchg
add
push
inc
shll
call
lcall
dec
addr16
daa
ret
imul
mov
outsb
pop
sub
fwait
push
adc
mov
and
add
cld
cwtd
lods
imul
and
je
sbb
bound
in
inc
mov
sbb
mov
add
push
or
sti
lcall
sbb
fstpt
inc
mov
inc
out
addr16
insb
adc
popa
xor
bound
ja
lock
sub
movsb
insb
xor
int
xor
jbe
insb
cmp
inc
xor
add
inc
dec
dec
ja
pusha
or
jne
test
fs
and
dec
loope
loopne
sub
jo
je
jns
jns
push
push
loope
stos
mov
lret
mov
jmp
and
and
xor
mov
insl
pop
addb
jo
mov
divb
push
cmp
or
test
mov
rcrb
jp
dec
or
clc
fsubl
add
icebp
popa
mov
jae
and
and
xchg
mov
adc
or
fldcw
inc
divl
shlb
dec
push
shll
xor
mov
mov
cli
lcall
xor
xor
xor
lds
xor
pushl
add
mov
xor
xor
xor
xor
xor
xor
xor
pushl
xor
xorb
xor
mov
vcvtpd2psy
sub
movsl
add
fidivl
loop
icebp
aaa
add
lea
insb
aaa
incl
cmp
cmc
cmp
cmp
push
cmp
cmp
cmp
pop
and
aad
fdivrl
cmp
cmp
incl
cmp
adc
inc
aas
dec
aas
push
sbb
lcall
je
mov
aas
out
hlt
aas
aam
jge
shlb
incl
adc
jb
xorl
stos
xor
xor
xor
xor
add
call
xor
pop
xor
jle
xchg
fimull
mov
roll
push
add
movsl
add
dec
shr
ljmp
xor
xor
xor
xor
repz
add
add
call
xor
mov
mov
std
xor
adc
sbb
push
sub
xor
ss
jge
mov
push
add
imull
roll
adc
clc
sbb
hlt
mov
movsb
aaa
stos
aaa
mov
les
inc
add
mov
and
lods
das
cld
push
add
sbb
xor
mov
xor
mov
xor
dec
push
add
pushl
dec
xor
push
xor
xor
jae
outsl
or
xor
ja
imull
add
xor
xor
xor
add
dec
xor
pop
aam
fdivs
xor
add
push
add
in
xor
xor
xor
call
cld
xor
xor
or
adc
add
mov
pop
subb
dec
data16
or
dec
subb
fs
dec
clc
push
mov
and
je
xor
pop
pop
push
hlt
jg
pop
cs
push
push
out
jg
push
jne
adc
inc
push
push
push
push
inc
and
jg
inc
push
and
dec
dec
data16
dec
sahf
fstl
xor
pop
cmp
cmp
pop
cmp
sbb
cmp
xor
aaa
in
inc
push
aaa
cmp
cmp
pushf
or
xor
mov
jae
mov
std
jmp
adc
add
mov
fdivs
loop
cmpsl
mov
push
mov
insb
push
dec
mov
iret
add
iret
mov
mov
movl
mov
rcl
xchg
rcr
push
dec
jne
popa
ret
inc
add
jecxz
adc
ss
popa
or
or
ja
pop
pop
pop
inc
add
and
and
sub
push
inc
or
imul
adc
xor
jecxz
and
insl
xchg
mov
jnp
push
das
push
add
inc
in
and
call
int
add
jns
add
add
shrl
xor
xchg
pop
or
inc
jecxz
cmovae
and
adc
pop
shl
xor
pop
cmp
or
mov
xor
fimuls
sbb
dec
pop
dec
inc
push
fisttpl
ret
loope
xor
outsl
jns
jp
shl
sbb
daa
pop
xor
into
ficoms
jns
sbb
pop
insb
jae
pop
xor
add
add
or
sbb
xor
ss
fs
out
mov
dec
imul
sbb
add
push
shll
das
aad
gs
pusha
roll
rolb
aas
inc
push
inc
das
enter
sub
xor
bound
cld
adc
pop
rcrl
gs
jne
and
fisubrl
jmp
xchg
dec
sbb
pop
sub
or
pop
sub
and
popa
gs
js
pop
sub
imulb
mov
ss
fs
dec
add
shlb
sub
adc
add
push
sub
or
stos
arpl
mov
adc
sti
or
xchg
andb
add
mov
loopne
xor
sub
fiadds
sub
outsl
das
or
adc
dec
sub
mov
gs
std
sub
jae
divb
in
jnp
mov
jo
rsm
fld
aam
add
or
pop
mov
mov
cmp
push
subl
push
add
out
add
adc
or
or
pop
push
adc
adc
inc
cmpl
in
sub
dec
outsb
out
inc
imul
test
dec
addr16
jns
inc
adc
mov
mov
sub
cmpsb
jnp
inc
in
aad
and
movsb
pop
or
negb
jg
or
rcr
adc
inc
sbb
add
xor
arpl
das
xor
mov
mov
cmp
imulb
loopne
scas
sbb
adc
inc
out
insl
syscall
in
cmp
adc
push
daa
push
aas
mov
sub
lret
cmpb
rorb
sbb
ret
add
sub
mov
push
push
icebp
push
cmp
jae
sbbb
test
mov
adcl
or
and
call
ss
sbb
push
lods
addr16
xchg
ss
pop
addr16
fincstp
and
push
fcmovnu
push
dec
add
add
inc
inc
pop
or
pop
fs
add
das
cmp
or
mov
or
add
inc
jb
mov
int
xchg
out
popf
test
xor
popf
aaa
xor
xchg
xor
adc
push
push
int3
adcl
imul
xchg
adc
stos
mov
stos
add
inc
jb
clc
sub
sub
adc
add
lret
leave
sub
push
add
add
js
repnz
dec
push
hlt
and
lret
fcoms
call
clc
or
add
push
lret
dec
cs
and
stos
inc
xchg
pop
or
and
and
jb
xchg
jo
xor
aam
xchg
cmp
insl
xor
jae
push
dec
push
fstpt
add
test
fldl
dec
aaa
push
sbb
nop
mov
ficompl
jmp
jmp
inc
bound
arpl
pop
sub
cmp
or
fs
in
rorl
insl
or
mov
inc
dec
out
lahf
cmp
dec
push
out
addr16
aas
les
sahf
sbb
aas
fs
rcrl
cvtps2pd
sbb
sbb
jns
aaa
fsub
mov
xchg
imul
lds
or
sbb
add
mov
push
shll
cmc
mov
push
gs
and
mov
bound
jecxz
imul
fwait
lea
jno
addr16
mov
or
and
pop
xchg
xchg
xchg
and
mov
nop
add
insb
add
add
int
jnp
add
xchg
popa
roll
or
push
xlat
jne
inc
or
cwtl
scas
sbb
inc
inc
sbb
sbb
insb
ja
imul
pop
and
sbb
dec
outsl
pop
pop
adc
mov
pop
neg
scas
imul
or
add
adc
add
add
push
xorb
add
xor
mov
dec
xor
imul
xchg
xor
jg
mov
xor
test
call
xlat
mov
fdivs
loope
lock
xor
xor
pop
sub
mov
mov
add
mov
cli
xor
cwtl
xor
xor
xor
xor
loop
mov
sub
das
ss
lea
sub
decl
aaa
push
cmp
ja
mov
cmp
cmp
jmp
cmp
cmp
fnstsw
add
cmp
cmp
cmp
fnstcw
cmp
cmp
cmp
cmp
sahf
cmp
dec
mov
ds
icebp
dec
push
hlt
aas
gs
fwait
mov
cmc
jnp
jae
mov
iret
push
xor
fildll
mov
xor
jns
nop
xor
xor
mov
out
divb
add
or
daa
jmp
jmp
fwait
mov
fbstp
push
xor
xor
xor
pop
sub
rorl
add
adc
xor
xchg
lea
sub
xor
inc
imul
shlb
aaa
sbb
aad
mov
pop
pop
fistps
cmp
cmp
pushl
cmp
pop
cmp
imul
cmp
cmp
cmp
add
fnstsw
xchg
and
aad
xor
cmp
ja
ja
mov
and
sbb
xor
cmp
inc
aas
inc
jl
xor
xor
xor
cld
mov
xor
xor
xor
xor
sub
jmp
xor
xor
xor
xor
pop
fists
inc
jmp
mov
int
aad
gs
ss
testl
loop
cmp
push
cmp
mov
stos
cmp
dec
cmp
cmp
cmp
cmp
shr
or
cmp
cmp
ds
xchg
aas
xchg
adc
aas
mov
adc
push
adc
lret
xor
xor
hlt
call
roll
push
xor
aad
push
xor
mov
aaa
fisttps
xor
sbb
ss
ss
getsec
pop
aaa
outsl
aaa
xchg
aaa
mov
add
jae
aam
sti
cmp
cmp
jo
xchg
loope
ret
bnd
cmp
add
cmp
cmp
outsb
stc
lcall
mov
sti
cmp
cmp
insl
pop
fistpll
jmp
cmp
cmp
mov
cmp
cmp
cmp
cmc
dec
cmp
cmp
jmp
jo
ja
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
fsubrs
sbb
sub
cmp
cmp
arpl
lea
lods
in
sarb
cmp
inc
ds
jbe,pt
push
icebp
test
ds
sub
dec
aas
arpl
aas
stos
movsl
sub
rorb
cmp
cmpsb
xchg
push
adc
cmp
xchg
pop
cmpsb
xor
call
adc
push
xor
xor
xor
xor
push
xor
js
mov
push
xor
xor
xor
xor
xor
jns
mov
mov
push
xor
xor
outsl
xor
mov
decl
mov
xor
xor
xor
xor
pop
mov
add
sub
xor
out
icebp
xor
xor
xor
sysexit
xor
pop
xor
jbe
jg
repz
mov
mov
xor
stc
xor
cmp
push
aaa
or
sbb
sub
xor
pushl
aaa
mov
cltd
aaa
call
cmp
inc
shll
push
cmp
sti
cmp
out
push
movsb
cmp
cmp
cmp
cmp
cmp
cmp
incl
push
cmp
inc
cmp
cmp
cmp
ret
ja
in
cmp
cmp
les
lcall
xchg
and
jg
mov
xor
inc
xor
xor
outsl
inc
lcall
add
test
lods
xor
fistpll
xor
xor
xor
nop
ret
out
ss
addr16
aaa
push
xor
jbe
pop
cmp
mov
outsl
pop
cmp
cmp
test
cmp
outsl
cmp
cltd
cmp
out
cli
cld
cmp
cmp
inc
cmp
jae
xchg
lcall
cmp
mov
cmp
cmp
cmp
mov
adc
cmp
mov
mov
sbb
cmp
cmp
mov
jbe
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
dec
adc
cmp
ds
mov
ds
or
fidivrl
mull
or
lock
xor
test
popf
xor
add
imul
xor
xor
sub
mov
cld
test
pop
xor
xor
jmp
push
mov
inc
pop
scas
insl
inc
dec
sbb
mov
hlt
push
mov
cmp
aaa
ljmp
dec
add
push
mov
and
or
inc
fbstp
ds
xor
test
outsb
imul
mov
jp
xchg
xor
sub
lods
sub
and
xor
mov
imul
xor
adc
push
ss
and
sub
cs
cmp
inc
ss
lods
jg
mov
ss
ss
mov
mov
mov
xchg
push
mov
ss
mov
fimull
call
fcompl
ss
inc
inc
aaa
cltd
cli
add
jns
aaa
adc
sbb
push
mov
sub
jns
inc
aaa
dec
aaa
add
pop
aaa
pusha
call
pop
push
jb
jle
mov
nop
and
sbb
pushf
aaa
mov
sub
inc
jg
aaa
add
cmp
pop
mov
push
cmp
cmp
out
sti
cmp
cmp
pop
cmp
cmp
cmp
dec
cmp
cmp
cmp
dec
cmp
cmp
cmp
sbb
xor
cmp
cmp
lret
pushl
cmp
cmp
cmp
mov
mov
cmpsb
cmp
mov
sarb
loop
call
cmp
cli
cmp
or
adc
sub
inc
ds
jge,pt
mov
pop
aas
mov
test
pushf
push
push
mov
mov
xor
jno
test
cmc
xor
ffreep
push
push
fsubrs
xchg
adc
jns
in
shlb
xor
sbb
mov
outsl
jl
sbb
mov
cmpl
adcl
jl
cmp
popf
cmp
mov
push
fucom
cmp
cmp
cmp
cmp
mov
call
cmp
jecxz
call
popf
mov
cmp
xchg
insl
aas
cmpl
in
fwait
lock
jg
nop
xor
xor
xor
test
shll
xor
xor
adc
adcl
outsl
ret
cltd
xor
xor
sbb
call
pop
xor
rcll
call
inc
out
xor
pop
push
hlt
outsl
inc
cmp
lods
xor
rcrl
leave
add
push
iret
dec
lea
sahf
xor
push
mov
movsb
fnstsw
sarb
fistpll
xorl
xor
sub
fst
andl
xor
call
and
xor
xor
jbe
xorl
xor
aaa
inc
xor
cmp
scas
xor
xor
shll
xor
xor
aaa
mov
or
cmpsb
test
cmpsl
decb
subl
pop
sbb
jns
std
mov
int
push
xor
xor
arpl
xor
add
dec
xor
xor
jnp
inc
sub
cmovns
xor
pop
xor
jnp
add
ret
in
xor
sub
mov
cmp
call
xor
aaa
lret
sbb
mov
shrl
aam
mov
xor
xor
push
sbb
cltd
jg
add
lret
lret
lds
xor
cmpsb
cmpsl
call
pop
xor
mov
jmp
ss
ss
loope
ss
lcall
idivl
cmp
aaa
imul
aaa
or
cmpl
pop
or
es
push
cmp
cmp
cmp
cmp
pop
cmp
cmp
jae
jge
mov
cmp
outsl
or
cmp
cmp
pop
stos
inc
jl
xorl
in
cmp
cmp
cmp
mov
dec
in
cmp
cmp
cmp
dec
mov
and
ds
sarb
adc
rorb
ljmp
ljmp
jl
mov
cwtl
out
pop
ja
mov
xor
sub
scas
xor
lret
dec
xor
ffree
push
xor
lds
mov
js
jl
test
scas
xchg
out
jae
iret
test
lods
roll
dec
mov
lods
test
int3
xor
loopne
add
fcomi
xor
sub
or
or
adc
jecxz
push
xlat
inc
mov
in
mov
out
ljmp
dec
jmp
ss
mov
pop
jnp
popa
insb
subb
pushf
jecxz
pop
ja
gs
enter
aam
fsubr
loopne
push
inc
xlat
ss
in
mov
mov
or
adc
or
cmc
mov
negl
cmp
inc
in
pusha
ja
mov
jo
je
jl
xor
pop
ja
gs
aaa
cwtl
sti
mov
mov
jne
aaa
mov
mov
mov
inc
inc
dec
push
sarb
aaa
mov
fmuls
loopne
in
in
aaa
lock
hlt
aaa
clc
add
pop
or
sbb
and
and
sub
add
js
adc
and
cmp
invd
cmp
arpl
cmp
or
pop
cmp
cmp
cmp
mov
mov
lock
adc
inc
cmp
fucomi
cmp
cmp
pop
test
mov
xchg
cmp
mov
call
int3
cmp
cmp
cmp
cmp
or
sbb
jg
xchg
adc
cmp
dec
xchg
cmp
cmp
fisttpl
cmp
cmp
cmp
cmp
cmp
cmp
or
cmp
cmp
inc
sar
aaa
icebp
cmp
cmp
dec
fs
cmp
cmp
cmp
cmp
cmp
cli
sbb
arpl
cmp
cmp
push
ss
sbb
xchg
push
cmp
pop
iret
insb
cmp
movsb
xchg
ja
mov
aam
call
out
cli
mov
ds
ds
ds
ds
ds
dec
jge
lcall
sarb
in
ds
popf
aas
sbb
and
outsl
loopne
mov
aas
push
aas
mov
clc
mov
popf
inc
cld
aas
jl
pop
insl
or
adc
and
sub
xor
sub
dec
xor
mov
xor
in
mov
xor
xor
xor
das
sbb
xlat
lock
std
and
sub
lret
les
cmp
inc
roll
pop
add
outsl
in
inc
mov
xchg
xor
mov
jne
push
jne
xor
aas
loopne
add
or
sbb
adc
sbb
sub
push
aam
jne
xor
xor
xor
scas
cmp
hlt
xor
icebp
adc
push
push
mov
jae
adc
je
jl
mov
xchg
aam
lret
inc
movsb
mov
mov
adc
cld
pop
or
adc
sub
add
insb
mov
test
mov
dec
mov
cltd
push
push
rcll
test
dec
addr16
push
xor
pop
imul
popa
mov
dec
dec
dec
dec
dec
in
hlt
inc
add
adc
dec
dec
dec
cmp
dec
and
push
or
movsb
pushl
push
in
add
out
aaa
pop
push
jl
int
pop
sbb
stos
xchg
ja
sbb
cmp
mov
sbb
mov
scas
mov
add
sbb
dec
mov
call
mov
loope
cmp
cmp
xchg
mov
cmp
cmovbe
fdivrl
in
hlt
mov
cmp
mov
cmp
cmp
jl
test
cmp
mov
mov
xor
adc
dec
stos
test
mov
inc
cs
lods
fisttps
stos
push
cmp
jno
cmp
nop
lahf
in
pushf
movsl
mov
int3
or
adc
and
mov
test
mov
xchg
movsl
movsb
lods
ds
mov
stos
int3
ds
fdivrl
in
cld
ds
or
adc
mov
aas
xor
inc
mov
ljmp
push
xchg
push
out
cwtl
or
int3
les
insb
xor
xor
in
xor
pop
pop
add
jns
xchg
mov
jg
cmpsl
pop
aam
lea
xor
push
inc
addb
pop
fs
adc
xor
test
fcomps
add
imul
sub
aam
or
xor
cmp
inc
mov
das
adcb
push
sub
dec
rcll
inc
sbb
mov
push
sbb
fwait
adc
inc
adc
sub
jmp
pop
push
hlt
addl
add
stos
sbb
push
or
jae
jb
jae
mov
popa
push
mov
add
push
sub
gs
sbbl
sbb
mov
inc
dec
inc
sub
adc
add
popf
mov
nop
ret
sbb
addb
sbb
addps
xor
xor
jp
sub
daa
sti
mov
or
enter
adc
mov
mov
adc
popa
push
cmp
cmp
and
or
add
xor
jno
in
or
push
sysexit
push
dec
xor
jae
mov
sbb
jnp
push
and
xorb
stos
test
enter
dec
outsl
mov
add
add
push
outsl
sbb
xor
mov
adc
vpackssdw
nop
xorb
or
adc
ret
add
sti
pop
xchg
inc
fmuls
ljmp
cmpsb
inc
jle
out
outsb
mov
imul
pop
popa
lcall
mov
xor
subl
add
jmp
sbb
iret
pinsrw
add
and
dec
and
jo
jb
adc
mov
imul
push
xchg
cmp
data16
cwtl
cmpl
push
push
adc
mov
imul
aam
or
nop
inc
mov
and
pop
test
push
xor
addb
add
pop
and
inc
aaa
push
add
sub
adc
rcr
cmp
add
pusha
rcrl
mov
pop
inc
daa
jo
pushf
inc
dec
xchg
pop
addb
mov
nop
fldt
adc
sahf
add
adcl
test
mov
or
push
push
push
addb
nop
add
or
cmp
clc
add
test
add
popf
push
inc
mov
xor
mov
lea
or
jmp
cld
push
seto
fimuls
rolb
subb
push
negl
movl
sbb
sub
loop
xchg
ja
jbe
or
call
or
testl
mov
push
hlt
mov
mov
mov
push
cmp
insb
pop
mov
das
popa
outsl
mov
clc
add
sbb
jo
sahf
loopne
movl
pop
adc
pop
xor
mov
insb
or
add
das
push
shrb
push
inc
rcrl
inc
sbb
ds
je
cmpl
jne
mov
sbb
notb
sti
pop
ret
push
ss
push
and
pop
lahf
push
add
ret
inc
sbbb
dec
or
or
inc
mov
push
addr16
in
outsl
add
mov
cmp
je
pop
xor
pop
mov
sbb
les
aam
in
or
and
adc
addb
mov
adc
movsl
add
lds
push
push
or
out
dec
lods
cmp
mov
sbb
mov
mov
ficompl
and
or
push
mov
iret
adc
call
push
jmp
popa
and
xor
or
je
push
sbb
outsb
outsl
mov
push
inc
cmp
call
jl
mov
scas
jmp
and
pop
sbb
xlat
decb
aas
dec
pop
adc
test
add
cmp
mov
or
inc
lea
xchg
add
push
mov
mov
movb
push
adc
fwait
in
sub
adc
call
adc
lds
mov
addb
popf
inc
sbb
out
outsb
xchg
scas
arpl
push
push
sbb
jp
add
fisubrl
push
sbb
push
or
inc
dec
add
xor
ss
sub
xor
ret
adc
mov
push
fnsave
out
loope
adc
pop
or
in
fcmovnu
ficoms
xchg
push
cs
inc
shlb
add
incl
sub
sbb
pop
or
ret
jo
sbb
add
fcmovnbe
mov
adc
cmp
adc
out
adc
add
and
outsb
pop
addr16
cmpsb
sub
cmp
or
data16
ret
ds
sub
pop
nop
dec
loop
adc
sbb
xor
outsl
and
pop
pop
pop
iret
add
push
mov
add
jo
wrmsr
ret
cmp
sub
js
stos
push
mov
into
push
call
mov
bound
enter
filds
fisubrs
aad
mov
int3
add
mov
xor
mov
jg
push
or
or
out
jae
inc
push
and
or
or
add
insb
mov
xchg
sbbb
xchg
pop
xchg
cs
sbbb
nop
pop
xchg
inc
pop
repnz
notl
pop
xchg
int
pop
leave
pop
xchg
pop
xchg
jo
pop
cmp
xchg
xchg
push
xchg
pusha
xchg
pop
test
sub
jmp
sbb
inc
int3
adc
sub
sbb
push
inc
mov
cld
js
and
xchg
int
jmp
fwait
jl
pop
in
or
mov
movsl
pop
in
sbb
jnp
jmp
rcrb
mov
jo
push
leave
push
mov
pop
xor
sbb
adc
inc
jl
dec
mov
orl
and
in
rolb
mov
test
addl
lret
pop
setne
add
or
ds
xchg
imul
or
dec
or
adc
addr16
inc
add
push
lret
cmpsl
mov
cmp
ss
cwtl
cmpb
out
in
test
or
push
scas
add
mov
inc
xor
int3
inc
add
lods
pop
testl
pop
mov
push
push
shlb
cmpsl
push
inc
insb
add
mov
test
aas
dec
and
loopne
pop
dec
xor
push
cmp
mov
sub
rorl
push
call
pop
faddl
cld
add
sub
ljmp
nop
pusha
mov
jg
test
adc
inc
adc
xor
cmp
call
push
push
and
add
rorl
sub
inc
orb
out
fmuls
sbbb
and
xchg
ret
pop
pop
mov
es
lea
push
sbb
test
jne
in
and
in
loop
repz
dec
dec
mov
push
sub
gs
adc
sub
sub
test
or
pop
scas
stc
sbb
pushl
push
mov
in
push
mov
lods
jge
in
jns
and
adc
sbb
or
repz
mov
inc
xchg
and
testb
in
push
mov
push
push
mov
mov
test
je
dec
jae
dec
mov
les
cmp
adc
notl
jge
data16
ss
pop
lret
icebp
pop
and
sub
pop
pop
add
aad
fisubs
or
and
outsb
inc
inc
insb
dec
sbb
mov
adc
push
dec
adc
sbb
mov
adc
sbb
adc
sahf
pop
sbb
pop
xor
sysenter
or
and
mov
fwait
cmp
push
pop
jge
add
pop
popf
aam
push
sbb
mov
push
sub
and
in
mov
sbb
pop
je
or
mov
adc
and
arpl
mov
xor
sahf
xorb
mov
push
lea
xor
push
shl
lock
mov
cmp
jne
or
pushl
call
loope
in
repz
je
sub
or
call
rolb
sbb
lea
adc
lea
aad
mov
jge
or
test
pusha
xor
xor
ret
mov
ret
jl
jmp
sub
loope
std
fwait
adc
inc
add
cmp
mov
ljmp
leave
iret
xchg
mov
and
xchg
xchg
dec
or
cmp
adc
call
sti
arpl
and
jbe
or
scas
mov
loopne
fstps
jle
lods
xchg
mov
ret
idiv
and
adc
push
insl
fwait
jae
les
xor
pop
inc
sahf
add
pushl
lea
add
and
fs
loopne
lea
mov
sbb
cmp
das
mov
inc
xchg
pop
xor
xchg
add
dec
or
int
test
mov
adc
arpl
dec
test
dec
outsb
and
inc
lods
push
dec
or
roll
push
add
sbb
leave
enter
add
sub
xchg
in
enter
push
add
or
pop
xchg
jne
add
pop
xlat
inc
lea
xchg
cmp
add
xchg
shll
add
mov
jne
clc
xor
jb
or
sub
sti
sbb
add
sbb
outsl
repnz
adc
or
fs
push
invd
rorl
jne
adc
jl
inc
pop
or
ficoms
stc
rclb
mov
cmp
inc
sbb
push
push
dec
jb
and
or
mov
aam
xchg
das
in
push
incb
or
pop
nop
nop
dec
mov
adc
push
ret
popa
mov
call
mov
ja
and
push
pop
sbb
sbb
pop
jb
or
mov
je
les
sbb
icebp
je
mov
iret
ret
or
shrb
nop
cmp
sbb
push
sub
adc
jg
mov
sub
or
scas
mov
lods
rcrl
adc
pop
jnp
mov
pop
and
mov
push
sbb
jmp
or
adcb
inc
lret
aad
rcrl
loop
sub
mov
fisttps
adc
add
inc
xchg
and
mov
xchg
enter
sbb
mov
in
mov
rcrl
jl
add
les
or
add
repnz
inc
add
nop
rorl
push
stos
jmp
call
incl
rcrb
shr
jecxz
inc
faddl
push
addb
cmp
add
fnstcw
fadds
dec
out
adc
sbb
push
pop
jb
jae
nop
addb
je
outsb
sub
fstps
insb
in
movl
or
add
or
js
mov
and
push
ret
fidivs
and
nop
adc
shrl
data16
or
or
data16
add
ret
push
sbb
mov
add
xor
clc
inc
add
add
inc
or
out
add
add
jge
add
stos
filds
jne
mov
sub
pop
and
or
or
lock
insl
xor
mov
fmull
and
push
push
pushf
adc
inc
xor
sub
or
js
jg
add
jb
mov
cmpw
jne
mov
and
push
jge
les
jge
data16
and
add
push
shrb
push
jae
stos
outsl
int
push
adc
mov
je
mov
jl
add
inc
push
push
xchg
and
hlt
frstor
call
or
or
push
pop
pop
movsb
je
xor
cmp
push
in
lods
cwtl
xchg
push
add
mov
push
add
xor
incb
insl
push
scas
not
dec
cmp
in
adc
sbb
shlb
rorb
imul
scas
pop
mov
les
mulb
mov
push
adc
push
mov
xor
test
ret
fisttpll
mov
inc
push
pusha
inc
pop
mov
or
scas
imul
gs
jb
sbb
loope
inc
popa
sbb
sbb
dec
or
add
movsb
push
push
sbb
add
push
push
push
inc
dec
enter
and
jno
push
or
mov
call
in
fists
push
add
call
and
or
fsubrl
xor
dec
pusha
mov
cmp
fcoms
xchg
add
add
push
inc
inc
jo
scas
and
or
mov
add
mov
push
fists
shll
push
pop
dec
mov
sahf
add
test
or
dec
shll
sbbb
rcl
fsubr
add
xchg
shll
in
xchg
ret
xchg
orb
popf
insl
mov
mov
scas
cmpsb
imul
pop
nop
ss
mov
lret
inc
cwtl
shlb
push
loopne
jg
call
into
inc
mov
stos
xchg
sub
inc
scas
mov
mov
inc
ss
data16
and
adc
mov
adc
adc
adc
je
or
add
jmp
popf
and
pusha
adc
pop
in
jae
lods
add
sub
pop
mov
lcall
add
sub
pop
addb
sub
add
dec
imull
xchg
mov
or
sti
jg
testb
setb
scas
lods
dec
test
xchg
mov
mov
lret
pop
add
pop
add
jne
mov
and
mov
add
cmp
inc
sbb
pop
push
daa
pusha
add
cmpb
adcb
lock
daa
sbb
rolb
mov
sbb
pop
jnp
add
add
mov
mov
cmp
sbb
pop
adc
repnz
sub
imul
lods
push
movsb
imul
and
insl
orb
push
add
add
pop
pop
and
push
mov
andb
test
xchg
adc
sub
dec
addb
adc
add
inc
adc
outsl
or
stos
and
jns
adcb
pop
xchg
dec
push
adc
push
gs
adc
ret
in
out
push
dec
gs
popa
addr16
adc
in
inc
insl
and
xchg
mov
adc
pop
jl
in
dec
rolb
arpl
insb
ja
mov
add
adc
arpl
and
and
xor
and
and
sbbl
xchg
js
mov
xchg
xchg
xor
scas
xchg
fs
add
push
inc
xor
xchg
insb
adc
add
enter
sub
add
inc
and
jae
add
and
or
xor
inc
add
or
jg
stc
inc
fadds
mov
sub
sbb
iret
adc
push
sbb
adc
or
inc
and
lret
jo
popa
outsl
cs
or
in
mov
sbb
sub
popa
or
cli
in
filds
enter
fs
xor
pusha
mov
cmp
pop
xor
das
je
sti
xor
outsl
js
test
push
and
bsf
fwait
push
test
push
outsl
jb
aam
adc
adc
sti
ja
mov
push
jg
daa
inc
dec
push
cs
call
inc
pop
inc
dec
inc
push
dec
inc
dec
push
lods
push
dec
xchg
cld
pand
inc
pop
dec
inc
push
dec
inc
inc
push
inc
int
cmpsb
orb
das
jo
lret
inc
inc
ret
outsb
popa
shll
inc
adc
bound
jb
add
arpl
scas
sti
sbb
add
por
lcall
gs
je
aas
push
rclb
fstl
addr16
mov
xor
xlat
cmp
xor
lret
adc
add
ja
and
dec
push
iret
inc
mov
or
mov
dec
add
or
dec
or
pop
adc
mov
data16
gs
adc
mov
shrb
adc
add
in
push
mov
out
leave
inc
sub
hlt
inc
jns
xor
roll
popa
add
pop
pushf
xor
cmp
aaa
inc
xor
xor
inc
ss
or
stc
adc
icebp
inc
inc
xor
cmp
pusha
add
add
and
or
add
add
or
inc
or
ss
pop
add
or
inc
fcomip
pop
add
aaa
inc
sub
xor
inc
sub
fildl
or
inc
inc
inc
inc
cmp
mov
add
and
dec
dec
pushf
ret
or
jle
int
bound
inc
insb
or
mov
es
sbb
jnp
fdivl
lahf
les
mov
and
jo
xchg
add
es
sub
imul
or
pop
push
adc
add
test
in
and
pop
and
adc
push
jg
and
loop
xor
dec
sahf
xor
or
dec
and
aaa
xor
in
mov
add
xchg
sub
jg
inc
adc
sbb
sub
adc
adc
aas
test
subb
add
aas
or
pop
add
inc
inc
adc
fistps
enter
inc
test
nop
adc
incl
adc
test
sub
xor
add
adcl
dec
push
dec
push
inc
dec
dec
xor
and
mov
cmpsb
cmp
in
packsswb
or
xchg
lea
sbb
jnp
call
xlat
push
adc
xor
loope
sub
filds
lret
stc
or
dec
pop
sub
mov
or
adc
out
pop
xor
push
xchg
and
aaa
and
fwait
xor
jg
xlat
mov
aad
fistl
out
in
add
sbb
mov
xor
xor
xor
xor
scas
xor
xor
cld
or
xlat
xor
pop
xor
rorb
adc
jecxz
xor
fstpl
xor
inc
cmp
mov
das
ss
std
sbb
pop
aaa
and
push
inc
repz
inc
outsl
adc
pop
push
scas
ja
jge
add
aaa
or
loopne
mov
je
xchg
leave
cmp
xor
rcrb
xor
repnz
test
lods
xor
xor
outsl
adc
stos
les
shll
xor
adc
dec
mov
insl
and
xor
xor
xor
inc
mov
mov
xor
xor
das
add
adc
xor
add
fnsave
mov
xor
xor
rcrl
add
int
rcr
pop
ss
add
ss
push
inc
aaa
xchg
adc
ja
pop
mov
icebp
iret
cmp
cmp
push
wrmsr
sbb
inc
dec
or
xchg
outsb
xor
inc
or
sbb
andb
sub
add
dec
ret
push
inc
pop
xchg
xorb
inc
push
lahf
fwait
mov
jae
inc
icebp
roll
and
adc
jg
xlat
pushf
movsb
inc
ds
jp
cwtl
daa
shlb
fidivl
in
ljmp
xor
sbb
mov
xor
andb
dec
out
jmp
add
movsl
outsl
or
adc
pop
not
add
test
call
adc
sbb
cld
pop
add
xchg
and
sub
dec
xor
outsl
adc
outsl
adc
push
test
js
jl
or
push
push
mov
insl
xchg
imul
xorb
mov
jge
inc
testl
inc
pop
add
test
mov
push
int3
xor
add
sbb
sub
inc
xor
xor
mov
inc
inc
rolb
fldenv
or
add
rcrb
push
data16
adc
or
mov
inc
push
repnz
add
or
sub
add
subb
adc
jecxz
and
arpl
mov
add
adc
inc
decb
dec
adc
push
and
sub
scas
lods
imul
xor
add
add
je
loope
sbb
jne
jae
push
inc
or
push
add
push
inc
pop
push
add
add
add
in
jbe
add
pop
imul
insb
cmpsl
inc
or
mov
fidivs
xor
aas
sub
sbb
jo
orb
adc
inc
xchg
imul
mov
adc
pop
inc
inc
out
cmp
or
sbb
bound
test
mov
sbbl
or
call
sbb
stos
push
mov
xor
pop
aas
inc
push
jo
inc
or
mov
add
mov
add
mov
pushl
decl
adc
dec
adc
lcall
insl
sti
lcall
add
pop
add
cltd
mov
decl
mov
or
push
nop
add
mov
fisttpl
cmpsb
push
push
push
adc
add
movsl
and
or
negb
dec
pop
inc
add
push
arpl
rorb
cli
pop
out
mov
inc
das
pop
pop
sbbb
and
cmp
sub
ljmp
popa
mov
popa
pop
arpl
data16
pop
jae
add
test
jo
pop
stos
sbb
fstpl
push
mov
int
sub
outsb
sbb
add
push
gs
orb
xchg
inc
movsb
sbb
sbb
mulb
cmp
stos
outsb
cmp
mov
gs
pop
sub
or
xchg
or
inc
inc
lods
add
dec
add
sub
data16
jo
and
add
inc
int3
add
lahf
imul
mov
bound
std
xor
mov
add
sbb
fcmovne
insl
mov
jns
sahf
add
add
add
lahf
smsw
aas
cmp
add
inc
ss
add
xchg
addr16
add
enter
adc
cmpsl
mov
sbb
in
push
fwait
add
and
pushf
test
add
pushf
pop
imul
push
popa
mov
jmp
dec
jae
or
cmc
xor
and
push
jo
imul
fs
push
je
or
in
or
mov
test
aam
mov
leave
mov
mov
add
clc
repz
add
and
add
incl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
popa
jmp
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
